jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
add
or
mov
mov
xchg
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
je
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
movsl
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
mov
cmp
movsb
inc
add
cmp
roll
add
or
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
call
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
sarl
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
iret
inc
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
add
mov
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jg
xchg
mov
add
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
pusha
push
call
mov
je
push
add
jb
pop
mov
pop
cltd
loopne
mov
pop
add
out
add
test
add
mov
add
pop
popa
and
xchg
jnp
jmp
add
mov
jb
fcmovnu
in
add
movsb
xchg
cmpsb
lret
add
add
push
add
add
add
add
add
in
mov
jo
jle
add
in
jb
push
out
add
add
push
lret
add
mov
fldl
add
jno
inc
jbe
call
lret
shl
bound
add
shlb
or
movsb
cld
add
jae
add
addl
add
xlat
add
xchg
add
add
jno
fmull
movsl
add
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
jne
pop
xorl
add
add
jle
mov
add
out
pop
fcmovnu
pusha
add
add
sarl
sbbl
add
movsb
mov
push
add
add
mov
add
pop
jns
int
hlt
lea
pop
movl
push
push
call
add
repnz
sti
mov
add
filds
lods
icebp
cwtl
testb
add
test
test
cmpsl
push
add
add
cli
int3
mov
stos
ret
jb
in
xor
lods
add
add
add
add
add
mov
fnsave
sti
add
xlat
push
cltd
add
add
call
std
add
mov
lea
pop
popl
push
push
push
push
push
lea
push
push
push
push
call
add
mov
jb
shrl
mov
hlt
ljmp
add
sti
jae
pop
add
add
add
int3
add
scas
add
popa
add
add
mov
int
push
add
lret
je
add
lcall
mov
outsl
add
int3
icebp
push
xchg
xchg
iret
mov
jns
add
fiaddl
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
push
call
xchg
lcall
add
add
aam
jmp
lret
add
add
add
add
scas
scas
lds
imulb
add
mov
jnp
outsl
lret
roll
add
stc
jae
incb
xchg
sti
add
add
add
add
add
divl
arpl
push
push
push
push
lea
push
push
push
push
call
add
int3
add
add
xchg
in
cli
movsl
cmpsb
jge
popl
add
add
add
movsb
add
add
xchg
shl
add
add
push
add
jbe
add
cli
roll
fildl
add
mov
add
in
mov
pop
add
add
in
sahf
mov
xorl
stos
add
mov
mov
lea
pop
call
call
push
push
push
push
call
add
incb
add
cmpsb
add
lret
mov
add
add
mov
pop
clc
cwtl
js
push
mov
add
xchg
popa
mov
add
in
jnp
out
mov
dec
add
loop
add
mov
push
notl
enter
add
xchg
add
popf
mov
add
stos
add
add
fldenv
orl
pop
add
jmp
push
push
push
push
lea
push
lea
push
call
test
cmc
mov
out
int
arpl
loopne
add
add
test
add
add
add
add
mov
xorl
mov
mov
push
add
enter
leave
mov
add
mov
push
mov
add
xlat
stos
add
lret
add
add
in
pushf
add
push
add
add
mov
lea
pop
ret
mov
mov
push
push
push
push
push
push
push
lea
push
call
add
add
add
popf
shlb
mov
push
add
mov
fwait
cli
add
add
cltd
add
add
add
jbe
mov
xchg
add
mov
push
jae
add
pop
xchg
outsl
add
aad
jp
mov
add
add
add
in
filds
xchg
add
pop
add
push
lea
push
lea
push
push
push
call
std
jo
xchg
add
add
add
add
push
push
imul
push
mov
jne
add
add
add
sti
repnz
mov
stos
add
add
add
shrl
stos
mov
mov
in
push
xchg
add
add
and
push
add
push
mov
lea
pop
add
push
push
push
push
push
call
aam
add
add
mov
lock
iret
int3
add
orl
push
add
add
xchg
lea
in
add
add
cmpsl
addb
icebp
push
mov
add
pop
pusha
add
rclb
shlb
add
add
xchg
fdivrl
movsl
gs
jle
cli
cld
sti
add
stc
iret
mov
add
pop
add
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
ret
pop
out
out
add
add
leave
lcall
lods
test
ret
enter
mov
leave
int3
jl
stos
leave
add
lock
je
pop
add
add
lea
movsl
int
xchg
add
xchg
jle
popl
rolb
mov
mov
imul
les
les
add
xchg
mov
repnz
fnstsw
sub
add
lret
add
add
cld
lea
pop
xor
push
push
push
lea
push
lea
push
push
push
push
push
call
sar
popf
add
add
and
push
movsl
roll
add
add
aam
popf
icebp
add
add
fwait
in
jo
cmpsb
movsl
je
mov
popf
mov
imul
lret
jne
mov
mov
mov
jae
add
adcb
loop
mov
add
add
into
scas
add
stos
mov
push
bound
add
lds
push
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
xchg
mov
add
add
lock
scas
roll
push
addr16
je
leave
mov
lods
scas
mov
fldl
push
xchg
mov
add
add
sub
add
add
mov
xlat
insb
add
add
add
imul
rolb
mov
jmp
cwtd
jo
jle
js
add
mov
add
lea
pop
add
push
push
push
push
call
rolb
add
gs
fstps
add
add
clc
jnp
add
add
andb
stc
xchg
add
jmp
sahf
cmpsl
jnp
mov
add
add
lahf
add
out
xchg
rolb
add
add
xlat
add
jp
add
add
jge
add
fnsave
pop
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
call
ffreep
addl
add
add
rcrl
adc
fidivrl
test
mov
lcall
stc
repnz
add
add
add
repnz
loope
xchg
jno
add
add
data16
scas
imul
rcr
add
movsb
js
xchg
xchg
cmpsb
add
stos
add
jns
jnp
mov
add
testl
push
jge
out
add
popa
and
pop
sbb
rep
shll
push
xor
push
or
inc
add
shr
lea
inc
sub
add
pop
shr
rol
pop
push
push
call
add
popa
test
add
add
cld
add
mov
fwait
add
pop
lds
data16
add
add
movsl
adcl
outsl
add
les
arpl
add
stos
popf
outsl
add
add
add
pop
add
mov
imul
add
lds
bound
out
test
push
add
add
mov
mov
bound
add
or
jne
push
push
lea
push
call
test
add
cwtl
add
pop
add
xchg
ja
add
add
mov
leave
fs
jp
xchg
push
shr
add
xchg
add
mov
jb
insb
jp
add
add
add
add
add
xchg
add
jnp
jp
add
mov
shlb
jge
je
mov
xchg
add
jbe
pushf
add
mov
lea
pop
call
mov
push
push
lea
push
lea
push
lea
push
call
jns
add
bound
push
pop
add
movsl
imul
push
add
add
add
cwtl
int3
add
test
testl
add
stos
lods
xchg
mov
add
into
add
mov
pop
gs
sti
out
rolb
add
add
pop
sahf
fistps
movsb
add
std
out
add
fsubrl
add
mov
lea
pop
movl
lea
push
lea
push
push
push
push
push
call
xchg
testl
add
cmpb
into
add
movsb
add
push
add
mov
pop
into
add
jne
int3
test
add
add
sti
add
add
rorb
icebp
add
add
add
add
fcmovnb
ljmp
lods
jp
out
jnp
add
add
aad
cli
mov
lea
pop
push
push
push
push
push
call
mov
pop
in
add
add
add
add
int
movsb
add
mov
add
add
xchg
push
cwtl
add
pop
add
clc
add
add
pop
pop
je
add
pop
push
movsb
roll
aam
add
adcl
add
cmpsb
lahf
out
cmpsl
std
leave
test
imul
pop
add
add
add
ja
sti
add
push
popf
mov
fsubrs
lea
pop
pushl
push
push
push
push
call
mov
add
add
add
mov
add
loopne
lcall
arpl
add
jbe
add
in
mov
shlb
mov
add
jecxz
flds
add
ret
add
add
out
mov
push
xchg
mov
icebp
add
out
jns
add
out
out
add
cld
test
fiadds
outsl
add
test
bound
pop
pushl
call
push
push
push
lea
push
push
lea
push
call
add
add
add
jmp
fistpl
cmp
mov
out
add
add
pop
add
add
ret
icebp
pop
add
xchg
faddl
lret
call
lcall
mov
les
jno
add
xchg
jb
ja
add
bound
add
add
mov
add
add
pop
pushl
push
push
lea
push
push
push
lea
push
call
add
lds
lahf
jle
lret
out
mov
rorb
push
fsub
xchg
mov
cwtl
addr16
cmpsl
les
mov
jmp
jno
lahf
add
nop
add
add
sbb
bound
hlt
iret
scas
fnstcw
mov
fldl
fs
add
add
fiadds
add
add
pop
pushl
call
push
push
rol
add
push
xor
add
lea
sub
dec
add
pop
add
shl
pop
push
push
lea
push
push
push
push
lea
push
call
fdivl
enter
add
in
leave
lret
in
mov
bound
test
add
out
sti
jge
add
outsl
mov
test
jp
in
add
cwtl
add
add
fstps
add
add
pushf
out
sti
mov
jb
mov
jle
mov
insb
iret
mov
fwait
mov
lea
pop
pushl
call
push
push
push
inc
inc
not
push
push
pop
add
add
ror
sub
xor
add
inc
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
popa
add
mov
xlat
jmp
add
cld
movsb
add
out
add
add
add
add
add
add
fildl
mov
aad
aam
mov
mov
add
add
testb
add
add
add
in
mov
lea
add
popa
xchg
add
push
ja
mov
jnp
ljmp
cmpsl
lods
cmpsl
xchg
in
cmc
cmpsb
add
add
mov
lea
pop
push
push
lea
push
push
lea
push
call
add
outsl
pusha
mov
jnp
push
sahf
add
aam
rolb
push
add
pop
add
rolb
xchg
add
add
repnz
shll
gs
scas
add
xchg
in
addr16
lds
jnp
add
add
cmpsl
add
jmp
cltd
js
mov
jge
std
add
add
out
add
shl
jnp
lods
add
pop
pop
clc
enter
lcall
fwait
xchg
adc
add
rorb
call
fwait
jecxz
add
add
mov
test
add
jne
lea
movsb
add
add
add
cltd
arpl
stc
add
mov
cmpsl
jl
jne
add
add
ljmp
add
mov
mov
add
jecxz
add
incb
add
mov
stos
mov
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
pop
test
mov
xchg
xchg
add
popf
xorl
pusha
ljmp
jmp
cld
add
add
add
add
je
in
add
mov
mov
add
mov
add
jmp
push
pop
les
cmpsb
icebp
addr16
add
add
add
mov
mov
mov
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
in
cltd
jge
fldl
add
add
xchg
add
mov
add
aam
rcrl
mov
rcll
add
repnz
sti
imul
add
add
jp
add
add
add
into
rcrl
add
mov
add
mov
loopne
les
les
pop
in
push
push
push
push
push
push
call
out
cltd
add
cltd
add
add
test
ljmp
add
push
lods
add
add
lods
add
test
scas
mov
add
push
add
add
jnp
mov
add
add
test
add
mov
add
push
enter
stos
into
test
cmc
stos
les
pop
add
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
xchg
call
rorb
mov
add
int3
jns
add
roll
push
je
add
mov
pop
js
add
mov
jns
add
add
jmp
iret
jp
add
movsb
cmpsl
idivl
fiaddl
leave
imul
js
add
add
add
nop
cwtl
jbe
call
fsub
lods
add
add
pop
add
push
push
lea
push
push
call
roll
add
add
add
scas
push
add
add
push
push
add
add
xchg
add
add
mov
add
pop
clc
add
push
mov
add
movsl
mov
add
enter
js
mov
mov
mov
pop
push
add
add
test
add
jle
jmp
xchg
xchg
add
out
jbe
idivb
sahf
fistpl
adc
ret
aas
push
add
mov
xor
push
lea
push
push
lea
push
lea
push
call
int3
movsb
mov
ljmp
xchg
add
je
add
xchg
add
jno
xchg
add
testb
add
test
add
test
push
gs
add
loop
ja
pop
addr16
pop
jmp
nop
subb
cli
add
mov
jmp
mov
jno
add
int3
lea
pop
add
push
push
lea
push
lea
push
push
push
push
call
fs
in
add
pop
add
jno
lahf
insb
mov
jecxz
add
movl
rcll
mov
jns
roll
add
add
pop
add
add
push
mov
roll
fiadds
cwtl
test
xchg
add
data16
add
loopne
jmp
add
jp
lret
xchg
test
jecxz
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
sahf
xchg
pusha
jns
add
sarl
lahf
out
xchg
add
add
cwtl
add
addb
test
mov
gs
add
lock
popa
fidivs
pop
popl
add
add
lods
pop
movl
int3
add
add
mov
add
add
xchg
lods
add
add
loop
add
add
int
aam
bound
mov
push
push
push
push
push
push
lea
push
call
add
add
add
add
pop
pop
cld
mov
ficoms
in
pusha
add
loope
add
bound
fadds
jb
mov
push
add
add
add
add
test
add
add
popf
fiadds
imul
add
imul
flds
push
push
in
js
popf
call
shll
imul
add
leave
ja
add
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
lea
push
call
rolb
jp
add
add
mov
lea
pusha
fdivrl
mov
gs
add
add
xchg
add
push
push
add
add
int
mov
clc
add
add
xchg
add
cwtl
mov
aad
add
xchg
out
sarl
mov
data16
loop
call
cld
lea
pop
add
push
push
push
push
push
lea
push
call
add
add
mov
ljmp
add
add
mov
int
add
testb
xchg
add
iret
out
sub
popf
xchg
add
fcmovb
sahf
ljmp
add
out
add
cmc
mov
add
in
add
incb
test
jne
add
add
jp
pop
clc
jo
roll
pop
fdivr
subl
sbb
lock
lea
push
push
call
loop
xchg
popf
add
add
add
clc
fcoms
fcmovnbe
add
add
popa
add
addl
cmpsb
add
add
loopne
aad
add
mov
add
pop
mov
scas
push
add
jb
jl
int3
add
rolb
pop
je
add
in
icebp
testb
add
hlt
mov
addb
xchg
mov
add
add
addb
mov
lea
pop
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
addl
add
fildl
pop
add
add
add
cmpsl
les
add
add
jnp
xchg
sbb
pushf
movsb
insb
add
pop
add
stos
add
xchg
ret
stos
lret
jbe
js
pop
xchg
filds
rcll
flds
popl
add
xlat
shl
add
aam
mov
and
xor
push
push
push
push
push
push
call
fadds
jle
add
add
test
imul
add
out
test
popf
add
add
aam
add
add
pop
add
std
mov
je
add
add
add
xchg
scas
ret
test
nop
ljmp
add
pop
addl
insb
add
stos
cmpsb
loope
add
mov
cld
sarb
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
ret
add
outsl
add
data16
add
mov
pop
add
add
add
mov
testl
pushf
add
add
jecxz
movsl
mov
out
arpl
cmpsl
xchg
enter
nop
xchg
pop
xchg
test
add
lret
mov
pop
loopne
loop
clc
je
push
jns
sbbl
jl
sahf
rolb
xchg
mov
lea
pop
push
mov
xor
push
push
call
cld
arpl
add
xchg
sarl
add
add
jge
add
mov
int3
jmp
add
add
cli
out
mov
stc
addb
mov
jne
add
add
jb
xchg
add
add
addb
jbe
aam
pop
out
call
add
scas
fildl
mov
lea
pop
sub
pop
rep
push
push
lea
push
push
push
push
push
push
push
call
add
add
push
add
clc
lods
rolb
mov
add
jnp
ja
std
jmp
add
clc
jae
cltd
mov
fs
testl
data16
roll
pop
add
loopne
mov
arpl
add
push
fs
add
add
rolb
push
mov
imul
push
rol
rolb
scas
pop
mov
add
test
lea
pop
pop
push
push
push
lea
push
lea
push
push
call
test
mov
add
lret
mov
add
cmc
add
push
aad
mov
call
enter
push
std
add
scas
pop
mov
add
pop
mov
jbe
in
xchg
add
add
add
mov
add
mov
mov
bound
pop
mov
add
push
lea
push
push
push
push
push
push
push
lea
push
call
rolb
pop
add
cmpl
rcrb
add
fs
loop
data16
add
add
add
jecxz
add
xchg
add
addr16
add
outsl
add
call
pop
testb
in
loopne
mov
add
loope
fiadds
push
add
add
mov
add
mov
add
scas
add
int3
iret
jge
jb
add
add
mov
lea
pop
add
push
push
call
ja
pop
add
push
xchg
add
int3
lea
jle
in
add
loope
pop
mov
add
add
lret
test
push
aad
insb
add
add
add
add
mov
add
add
add
fsubrs
add
pop
mov
mov
lea
pop
add
mov
xor
push
lea
push
push
push
call
mov
add
add
stos
add
add
addl
je
out
lret
add
bound
add
lret
add
push
mov
int
imul
icebp
add
insb
push
in
add
repnz
iret
sarb
cltd
les
mov
xchg
add
ret
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
call
nop
add
add
add
mov
mov
icebp
add
add
add
mov
call
cli
push
jnp
fdivp
mov
add
lods
in
add
add
mov
popf
roll
mov
jmp
in
add
pop
les
add
push
add
mov
ja
imul
push
push
push
lea
push
push
push
push
push
lea
push
call
movb
mov
popl
mov
add
loope
push
xchg
jbe
mov
add
pop
jns
add
fcomps
jmp
add
add
lds
add
mov
add
add
pushf
lahf
mov
rolb
mov
add
jl
add
mov
test
add
add
jmp
mov
xchg
xchg
add
stc
jae
add
loope
int3
lea
pop
add
push
push
lea
push
push
lea
push
lea
push
call
pop
jb
iret
pop
jmp
push
fucom
add
add
mov
ja
testb
mov
add
push
pop
add
add
pop
in
add
cli
add
enter
add
add
add
loopne
jp
add
fisubrl
add
add
xchg
js
data16
cld
add
mov
addr16
jo
add
add
aam
bound
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
in
jne
rcrb
mov
add
iret
cmpsl
add
leave
add
pop
add
sahf
pop
jo
add
negb
lea
scas
add
add
lret
jmp
add
not
cmc
scas
sahf
rorl
add
mov
add
jne
test
xchg
lods
add
mov
enter
add
loopne
hlt
lea
pop
xor
push
push
call
jns
xchg
add
lds
ret
stos
lods
add
add
add
add
add
push
add
rorl
push
push
xchg
mov
add
test
add
loop
cmc
add
add
add
add
jbe
xchg
negb
mov
mov
neg
jns
testl
xchg
into
mov
add
add
pop
add
push
lea
push
push
push
push
push
call
add
test
add
add
add
lods
imul
fucomi
mov
add
imul
pushf
add
or
add
add
pop
ret
xlat
scas
add
xchg
add
add
add
add
add
push
fwait
add
add
add
push
mov
in
enter
add
add
sbb
ret
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
jns
movsl
add
add
incb
add
jle
add
push
add
test
mov
mov
add
pusha
add
sti
add
push
add
jmp
repnz
std
cmp
jle
add
mov
jne
xchg
add
add
pop
xchg
add
in
add
mov
push
add
add
add
push
lods
add
addl
add
push
incb
mov
cld
lea
pop
mov
push
push
shr
rol
shr
push
or
inc
add
add
rol
lea
sub
not
pop
rol
pop
push
push
push
push
push
push
push
push
push
push
call
lret
add
mov
add
add
jl
cmpsb
add
add
add
add
in
jne
add
lds
aad
add
imul
loop
add
call
not
cli
lods
xchg
pop
xlat
add
add
mov
add
iret
mov
frstor
je
mov
xchg
imull
jecxz
add
scas
fldt
addr16
mov
lea
pop
pushl
call
push
push
push
inc
ror
push
sub
add
add
sub
sub
dec
rol
pop
sub
pop
push
push
push
push
push
call
add
mov
mov
push
scas
mov
xchg
add
add
add
add
movsb
insb
mov
cmpsb
add
roll
mov
arpl
jae
jnp
shlb
push
mov
add
add
mov
icebp
jae
mov
adcb
add
int3
lea
pop
push
push
push
call
scas
mov
in
iret
lods
add
in
xchg
add
jns
in
add
add
adc
arpl
addl
push
mov
pop
stos
add
add
mov
lods
add
add
add
add
mov
fwait
add
add
mov
test
addl
add
mov
aam
bound
pop
push
call
mov
push
sub
inc
pop
push
push
shr
shl
not
pop
push
mov
add
push
add
inc
pop
add
add
push
sub
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
add
cmpsl
push
add
add
add
mov
xchg
into
stos
popl
add
popf
push
mov
std
xchg
add
xchg
add
push
add
add
push
add
stc
out
add
cmc
add
pop
add
mov
add
add
add
stos
jo
cwtl
shlb
loop
fmull
xor
push
push
lea
push
push
push
push
call
add
popf
imul
outsl
add
add
add
xlat
loop
mov
add
add
add
mov
jbe
add
stos
jb
add
data16
add
add
add
add
add
add
add
mov
add
mov
mov
add
pushf
pop
add
stos
mov
lea
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
mov
ljmp
sti
add
les
mov
add
pop
mov
add
cmpsl
push
add
fdivrp
flds
add
out
into
mov
jbe
stos
loope
add
jmp
xchg
hlt
mov
add
add
add
lock
add
add
add
orl
push
push
push
lea
push
call
jno
ja
pop
push
add
je
test
add
mov
mov
push
push
add
testl
mov
je
test
mov
aad
add
mov
jo
add
int3
arpl
fcomps
add
incb
add
add
into
push
add
add
push
scas
xlat
add
mov
bound
bound
test
mov
fmull
push
sub
rol
sub
pop
mov
xor
push
shl
add
dec
pop
add
pop
mov
xor
push
lea
push
lea
push
push
call
pop
out
mov
add
mov
mov
mov
add
add
jns
mov
not
add
stc
jo
add
sarl
add
faddl
add
jle
add
mov
stos
nop
xchg
fwait
mov
scas
add
stos
fs
iret
lock
add
pop
jnp
pop
rep
mov
push
push
push
lea
push
push
push
lea
push
call
shlb
cld
add
push
pop
xlat
imul
movsl
pop
add
mov
add
push
add
push
stos
mov
in
andl
je
insb
mov
add
add
add
xchg
add
add
stc
popa
add
add
cli
test
add
insb
mul
mov
addb
xchg
data16
pop
add
pop
xor
push
push
call
lahf
add
add
shll
add
stc
js
xchg
add
test
add
pop
aam
add
fs
jns
add
add
xchg
add
cmpl
add
jbe
testb
add
add
add
pop
std
scas
push
incb
add
movsb
loope
add
idivb
ja
add
jl
jecxz
mov
xchg
mov
rclb
scas
clc
add
pop
add
push
lea
push
push
lea
push
call
mov
push
add
js
jmp
insb
add
xlat
mov
roll
lret
add
add
aam
enter
add
mov
mov
add
add
add
testl
cmpsl
mull
pusha
xchg
mov
cmpsl
rclb
jns
add
mov
imul
test
test
jge
add
mov
adc
leave
je
mov
xor
push
shl
lea
pop
mov
push
push
push
push
call
movb
clc
jmp
mov
out
add
flds
sti
xchg
push
in
in
lret
add
add
add
add
xchg
cltd
roll
add
jne
add
add
mov
add
scas
loop
push
rolb
push
pushf
add
imul
pusha
add
cmpsb
add
add
pop
js
mov
cld
xchg
jmp
mov
lcall
xchg
add
mov
cld
mov
stc
mov
lea
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
lock
test
add
xchg
mov
lods
add
div
add
fwait
add
add
mov
jmp
add
xchg
add
mov
add
stos
push
out
add
mov
jae
flds
mov
jo
jbe
sti
mov
push
add
cmc
out
mov
fiadds
je
lcall
mov
jne
add
mov
lea
pop
add
add
push
sub
pop
add
push
mov
push
push
lea
push
push
push
call
out
add
pop
scas
testb
add
xchg
add
fdivrl
jle
add
std
push
cmpsb
cmc
add
cltd
cld
rolb
ret
mov
ja
add
pusha
add
add
roll
push
add
add
add
add
add
outsl
add
add
add
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jle
add
xchg
out
data16
repnz
popl
add
add
mov
mov
adc
mov
add
mov
pop
add
test
movsb
push
push
add
jp
movsl
mov
cmpsb
mov
mov
cld
jmp
les
in
add
add
add
pop
add
cmpsl
popf
add
pop
add
push
not
ror
pop
add
push
push
lea
push
push
call
pop
lahf
repnz
fcmovne
test
add
test
add
fldenv
pop
add
add
cld
in
push
into
jp
add
add
add
add
addb
roll
add
add
add
add
push
add
jmp
add
pop
add
add
out
push
add
add
add
push
mov
adc
push
rol
pop
rep
push
lea
push
push
push
call
jp
add
add
test
arpl
mov
pop
add
jb
xchg
add
push
fidivs
add
add
jo
lret
jo
fsubrs
fsubrs
out
xchg
nop
add
imul
add
add
test
gs
int3
stc
stc
add
push
pop
mov
ret
add
stc
mov
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
imul
add
mov
cltd
std
arpl
xchg
add
cld
xchg
mov
pop
std
add
xchg
lods
mov
add
jb
xchg
jb
jbe
add
imul
mov
mov
lea
into
add
add
add
push
mov
ret
pusha
add
addb
add
add
mov
jecxz
mov
clc
add
push
add
lea
pop
xor
push
push
lea
push
lea
push
push
lea
push
call
loop
mov
mov
push
out
xorl
filds
add
jnp
pop
roll
add
mov
fildl
mov
jecxz
pop
not
stos
push
les
jne
push
mov
test
pop
push
mov
stos
add
add
test
xchg
add
mov
mov
jno
cld
lea
pop
add
push
add
lea
pop
or
je
push
push
push
call
push
outsl
mov
in
add
mov
into
mov
fbld
add
scas
movl
stc
fistl
rclb
add
bound
add
add
jmp
leave
add
into
mov
add
jle
mov
jbe
add
mov
mov
jle
push
addr16
add
stos
into
mov
add
add
in
add
int3
lea
pop
mov
add
add
push
ror
lea
pop
rep
push
add
dec
rol
pop
pop
push
push
xor
push
xor
add
not
sub
rol
dec
add
pop
ror
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
add
jnp
cwtl
scas
imul
add
add
fisubrs
jmp
nop
add
add
add
lahf
pop
int3
cmpsb
fldl
xchg
mov
push
add
add
enter
add
ret
mov
pop
xchg
add
scas
push
add
incb
mov
fwait
add
add
testl
mov
mov
lea
pop
pop
push
push
call
push
mov
push
sti
mov
jne
mov
jnp
add
stc
mov
stos
jmp
mov
mov
outsl
addl
enter
repnz
lods
add
mov
add
push
xchg
mov
push
sti
add
jno
add
add
push
add
mov
cmpsl
gs
mov
lea
pop
mov
push
shl
pop
mov
mov
jmp
push
ror
lea
pop
push
mov
add
push
push
call
add
xchg
popl
jne
jmp
add
add
add
mov
add
lods
in
add
loopne
add
add
jns
add
push
add
add
add
add
pop
pop
leave
add
mov
rorb
lock
push
jbe
push
xchg
add
add
mov
add
movsl
pop
mov
add
add
add
add
out
addb
add
mov
add
data16
push
inc
ror
add
inc
pop
push
push
push
push
push
push
push
push
push
push
call
jae
lock
add
add
add
lea
in
push
xchg
add
add
push
test
mov
push
addr16
add
stc
pop
lret
add
pop
test
sti
loope
add
popa
add
add
addb
mov
jns
test
add
add
cltd
add
test
add
add
lods
jl
sarb
negl
shrl
add
hlt
add
mov
lea
pop
push
push
dec
shl
not
add
pop
push
push
push
call
pop
add
jge
movsb
add
add
fldl
div
add
stos
add
out
div
js
pop
into
stos
les
jne
jl
add
lahf
add
jmp
mov
add
repnz
add
popa
nop
add
jo
add
add
add
sti
push
push
add
add
mov
or
push
add
add
mov
add
fcompl
mov
lea
pop
mov
pop
pop
push
push
call
cld
add
fbstp
imul
bound
xchg
je
add
add
mov
add
pop
lret
add
jbe
add
add
negb
add
popf
into
add
xchg
jmp
fnstsw
scas
add
add
add
add
test
sarl
icebp
add
into
add
add
add
add
sahf
lods
push
leave
jecxz
push
mov
stc
add
xchg
add
mov
lea
pop
pop
pop
leave
push
pop
ret
push
mov
push
lea
add
xor
add
pop
add
push
push
push
rol
dec
dec
pop
push
push
push
push
push
push
push
push
call
add
jmp
add
push
add
in
jl
add
clc
add
mov
add
add
out
add
pusha
test
rolb
push
add
mov
add
mov
add
scas
push
popf
add
add
add
mov
lret
orl
cmc
js
data16
mov
jmp
add
xchg
add
out
mov
lea
pop
movl
push
push
lea
push
call
jl
out
mov
add
jmp
add
add
add
mov
push
add
push
scas
mov
push
add
add
xchg
arpl
add
jno
push
push
mov
out
add
add
ja
add
add
xchg
add
pop
add
xchg
addb
mov
mov
add
stc
lcall
add
iret
add
add
aam
fmull
inc
clc
call
sub
pop
test
je
mov
push
rol
shr
lea
pop
pop
push
push
lea
push
lea
push
push
push
push
call
add
shl
clc
rcl
loop
lods
scas
add
jp
test
out
jne
add
jnp
add
out
lret
movsb
mov
lods
mov
enter
pop
iret
enter
add
mov
out
lock
add
push
stos
in
xchg
clc
pop
mov
ret
gs
add
insb
jl
scas
mov
push
cmpb
add
pop
pop
push
push
push
push
push
call
out
lret
add
add
mov
add
imul
add
into
stos
pop
xchg
mov
jb
push
popa
push
mov
add
cli
sahf
leave
xchg
add
arpl
xchg
out
add
add
xchg
js
test
jns
test
add
add
add
mov
les
add
test
icebp
enter
lods
fdivs
add
jo
add
mov
enter
arpl
mov
lea
pop
pop
push
inc
shl
sub
sub
pop
pop
leave
push
dec
add
not
pop
ret
push
push
rol
shl
inc
rol
pop
mov
add
push
xor
rol
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
imul
enter
pop
mov
jns
shll
add
cmc
add
ljmp
add
jl
mov
loopne
shr
div
add
add
jecxz
xchg
add
in
xor
fwait
add
int3
add
add
add
add
add
test
flds
add
add
xchg
add
mov
mov
lea
pop
push
push
push
push
call
add
rolb
idivl
aad
add
faddl
add
scas
adcb
add
faddl
add
mov
mov
scas
xchg
lret
jns
arpl
lret
push
cltd
add
add
add
iret
popa
add
jo
in
jnp
cmc
jl
add
ret
lea
add
scas
jecxz
clc
in
add
lea
pop
push
push
push
sub
pop
testl
push
sub
add
sub
pop
addl
push
call
push
xor
pop
mov
pushl
push
push
push
call
fucomip
popl
addl
add
mov
add
jbe
lds
fsub
mov
add
add
out
jecxz
cwtl
add
jmp
movsb
aad
add
iret
add
sti
add
add
roll
fiaddl
add
add
sahf
add
out
push
add
popf
shrl
add
stos
loop
add
add
add
lea
pop
push
call
cmpl
jne
push
shr
not
pop
pop
pop
push
push
push
push
push
call
pop
pusha
add
add
pop
jns
mov
in
add
add
mov
mov
out
jbe
jnp
aam
repnz
add
add
test
add
aam
xchg
push
sti
in
add
add
addr16
add
sahf
mov
cltd
add
xchg
fdivrl
test
cli
jmp
pusha
test
subl
jae
jle
mov
lea
pop
pop
push
sub
pop
pop
push
xor
sub
shr
sub
pop
leave
push
inc
pop
ret
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
data16
js
add
add
sahf
mov
add
add
std
mov
cmpsb
ret
out
add
add
add
fwait
jb
push
push
mov
loopne
addl
xchg
add
pop
add
add
lcall
jecxz
outsl
add
jmp
add
movsb
jne
add
lea
pop
mov
add
push
not
shr
pop
push
push
push
push
shr
rol
pop
push
movl
push
push
push
call
cmpsl
mov
in
xchg
xchg
in
sbbb
add
add
add
add
mov
add
add
lret
jae
add
add
add
stos
add
insb
call
fucom
add
pop
out
outsl
add
je
out
addl
call
xchg
outsl
mov
pusha
mov
jl
mov
push
add
mov
in
in
stos
add
pop
call
push
lea
push
push
push
push
call
mov
mov
xlat
js
add
flds
fldl
jno
mov
scas
add
add
xbegin
add
pop
add
push
ja
add
cmpsl
mov
add
push
add
je
addb
add
fxch
mov
test
push
add
scas
add
int
ficoml
add
add
cld
lea
pop
push
call
subl
push
push
push
push
push
push
push
call
lcall
movb
add
add
leave
add
ficoml
add
add
add
scas
loopne
lods
popa
outsl
mov
jl
lret
mov
hlt
add
add
jno
movsb
lock
hlt
popl
mov
insb
pushf
add
add
add
add
jp
scas
cmpsb
test
fidivrs
arpl
mov
outsl
add
xchg
add
int3
mov
lea
pop
cmpl
jne
push
push
push
push
push
push
lea
push
push
call
adcb
add
mov
push
mov
ljmp
loope
add
add
out
test
stc
jbe
add
repnz
rol
jnp
std
lock
pop
stos
call
mov
movsb
hlt
addb
js
add
rclb
lock
mov
add
add
jl
add
add
push
add
add
mov
lea
pop
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
call
je
add
jl
jecxz
add
fadds
add
jne
add
int3
in
in
add
mov
add
add
xchg
push
sbbb
std
add
ljmp
fs
mov
insb
xchg
cmpsl
push
add
add
mov
mov
add
in
add
add
cld
jb
mov
add
xchg
add
add
mov
lea
pop
pop
pop
push
lea
shl
pop
leave
ret
push
push
lea
push
call
add
incb
cmc
stos
lret
jp
add
add
mov
mov
les
add
add
test
mov
add
flds
add
bound
add
cld
scas
test
add
add
pop
add
mov
ret
in
test
lods
ljmp
pop
rcl
flds
sahf
add
add
add
pop
mov
push
ror
pop
add
push
push
shr
xor
lea
pop
push
push
push
call
add
fisubs
jae
mov
jmp
add
orl
jae
lahf
add
add
shl
xchg
mulb
xchg
outsl
add
add
add
mov
pop
add
add
mov
add
add
ja
mov
xorb
mov
popa
or
push
sub
dec
pop
push
mov
lea
push
shl
ror
lea
not
pop
sub
push
rol
lea
pop
mov
shr
add
push
push
push
push
push
push
push
push
lea
push
call
add
add
stos
add
add
lret
add
add
xchg
add
add
stc
add
pop
test
out
mov
push
add
add
addb
sahf
mov
hlt
lods
test
filds
add
push
add
add
ficomps
add
popa
icebp
add
add
mov
lea
pop
mov
mov
push
rol
pop
add
push
add
pop
add
push
inc
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
add
roll
jne
jne
lods
js
fstl
add
movsl
push
add
hlt
add
add
add
cmpsb
add
add
add
movsl
add
jo
cmpsl
add
add
rclb
add
lds
mov
pop
add
scas
add
aad
je
lret
mov
mov
lods
stc
in
add
add
add
mov
stc
mov
mov
sbb
mov
push
inc
add
shr
pop
cmp
jne
push
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
jbe
xchg
add
add
pop
add
add
scas
mov
orb
add
testb
push
pop
xchg
push
add
add
mov
add
xchg
cli
jp
push
mov
add
int
add
cmpsl
pop
add
mov
mov
jb
add
fmul
add
add
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
call
jle
flds
loope
jnp
add
pop
mov
add
std
pop
movsb
loopne
jmp
pop
faddl
mov
fwait
stos
add
add
enter
mov
add
outsl
cmpsb
int
jo
add
xchg
icebp
stc
add
sahf
add
data16
repnz
add
lahf
int
add
add
mov
mov
addl
fwait
stos
xlat
shl
leave
mov
cmpsb
lods
add
cmc
cltd
add
in
lcall
mov
lea
pop
movl
jmp
push
lea
push
push
push
lea
push
push
call
add
stos
ljmp
add
mov
mov
lret
iret
xchg
leave
rorb
movsb
js
add
add
add
jne
out
add
enter
jb
mov
add
jle
add
mov
repnz
roll
add
sar
test
ret
sti
jae
clc
mov
pop
movsl
test
mov
lea
pop
mov
push
pop
mov
sub
jne
push
rol
pop
mov
movl
push
push
push
push
push
push
call
call
out
push
add
std
faddl
add
mov
add
add
add
add
cld
imul
les
xlat
mov
test
repnz
add
add
add
lods
add
cli
add
jl
push
add
popa
add
pop
lea
mov
lea
pop
jmp
push
push
push
call
andl
mov
push
add
loope
leave
push
cld
jne
add
add
pop
pop
mov
add
add
add
in
call
out
add
xchg
iret
add
add
mov
add
add
rol
imul
mov
into
add
add
in
jno
pop
enter
add
add
mov
lea
pop
mov
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
add
ret
or
add
add
add
ret
add
shlb
fadd
fldcw
add
xlat
loopne
add
lcall
out
cmpsl
add
cwtl
add
add
add
lock
add
loopne
scas
add
add
loopne
fildl
cli
fstl
pop
add
add
add
add
xchg
pop
lret
jne
shrl
mov
mov
lea
pop
cmp
jne
mov
movl
push
push
push
push
push
call
add
add
add
xchg
cwtl
add
sahf
push
test
test
into
sbbb
mov
lods
js
fiaddl
add
push
add
mov
xchg
pop
cmpsl
add
xchg
jl
jne
add
out
push
add
leave
jne
mov
add
xchg
insb
add
mov
stos
in
add
pop
push
cwtl
pop
lods
popa
mov
mov
fmull
out
add
mov
push
xor
pop
cmpw
jne
push
push
push
push
lea
push
push
call
movsl
push
cld
add
add
loope
add
pop
loop
add
adc
add
fwait
add
add
jns
stos
add
div
hlt
push
add
decb
add
cmpsl
add
lock
popa
jp
ljmp
add
nop
add
add
add
cld
add
bound
add
gs
lods
mov
lahf
add
jge
add
mov
movsb
lods
repnz
les
inc
adc
call
test
add
mov
jae
addr16
add
mov
push
in
pop
mov
push
faddl
add
add
add
mov
add
pusha
add
xchg
hlt
lods
aad
stos
cmpl
jp
sahf
lret
bound
les
add
pop
pop
fimuls
mov
neg
mov
cmc
add
pop
movl
push
xor
pop
jmp
push
push
push
call
ljmp
pop
mov
aad
xchg
add
lret
add
insb
add
shll
je
hlt
mov
cli
add
pop
add
pop
int
pop
jl
add
int3
xlat
add
add
out
pop
jns
loopne
loope
add
nop
fistpll
rcl
add
je
add
jnp
bnd
pop
mov
mov
addr16
pushl
pop
mov
push
dec
shr
pop
mov
mov
push
push
add
dec
add
push
push
pop
add
add
dec
shr
sub
rol
sub
rol
pop
add
rol
shl
pop
push
ror
dec
pop
push
call
cmpl
je
push
push
ror
push
and
add
rol
sub
add
lea
shr
not
pop
rol
inc
lea
pop
push
sub
add
pop
push
call
push
pop
cmpl
je
push
push
inc
sub
shl
push
push
pop
add
shr
sub
inc
pop
pop
push
push
sub
ror
inc
ror
pop
call
cmpl
je
push
push
not
rol
shl
ror
push
push
pop
add
inc
sub
shl
pop
pop
push
push
push
push
push
call
test
pusha
xchg
add
stos
add
cmpsb
loope
add
add
jo
stos
faddl
addl
popf
pop
roll
mov
rcll
stos
shrl
add
fyl2x
add
add
stos
jecxz
fiaddl
mov
cli
fldl
sti
add
add
push
mov
flds
addr16
add
mov
add
repnz
add
add
addb
lea
pop
push
push
pop
call
cmpl
je
push
push
shr
push
xor
add
not
lea
sub
xor
pop
dec
inc
pop
push
ror
add
rol
pop
push
call
push
lea
push
push
call
add
pop
xchg
stos
mov
lret
cmpsl
push
mov
add
add
aad
pushf
add
out
jge
int
ljmp
negb
xchg
in
push
imul
sti
add
xchg
popl
add
cwtl
xchg
arpl
lods
pop
add
add
imul
add
mov
add
xchg
jle
je
mov
movsl
push
add
je
mov
lea
pop
cmpl
je
push
push
lea
push
and
add
shr
sub
dec
add
pop
lea
ror
sub
pop
push
push
pop
call
push
push
push
push
lea
push
push
call
push
fcmove
jecxz
add
add
add
add
add
add
sahf
pop
mov
add
add
jmp
lret
mov
cmpsb
xchg
out
mov
add
xchg
jecxz
add
add
loope
xchg
pop
add
xchg
stos
out
lcallw
mov
add
rolb
push
pop
lods
popf
add
xchg
addr16
add
in
loopne
add
lret
lods
xchg
jnp
jb
std
lock
pop
cmpl
je
push
push
dec
shr
push
and
add
add
sub
shl
inc
pop
dec
add
pop
push
inc
pop
push
push
push
push
push
call
xchg
clc
popf
call
pop
add
subl
jbe
jns
icebp
cli
add
out
xchg
pop
push
add
pop
nop
add
xchg
cld
add
pop
lds
std
mov
add
iret
popa
add
cld
cmpsb
add
pusha
add
addr16
notb
cltd
xchg
mov
lods
mov
jl
ror
insb
outsl
mov
lea
pop
call
cmpl
je
push
push
sub
push
xor
add
ror
sub
sub
add
dec
pop
pop
push
push
push
lea
push
call
add
push
mov
xchg
lahf
aad
ljmp
jnp
add
push
mov
pop
loop
into
arpl
add
mov
push
add
lock
ljmp
pop
add
std
loopne
sahf
addl
call
add
add
add
xchg
movb
add
add
add
add
mov
add
lcall
adc
call
push
rol
shl
pop
cmpl
je
push
push
shr
inc
push
and
add
dec
sub
ror
pop
not
not
pop
push
shr
inc
pop
push
call
cmpl
je
push
push
not
not
add
add
push
xor
add
dec
sub
shr
sub
add
ror
inc
pop
lea
sub
not
pop
push
push
push
push
push
push
lea
push
push
call
hlt
mov
add
negb
ret
jp
push
test
xchg
mov
xchg
lods
add
add
jbe
add
out
pusha
int3
add
lret
xchg
ffreep
add
push
add
sti
add
add
mov
pushf
push
mov
in
add
loope
add
out
enter
add
lds
pop
mov
cmc
add
imul
add
cmc
xchg
add
in
shlb
enter
lea
pop
push
push
pop
call
push
push
push
push
push
push
push
push
push
call
nop
addl
mov
popa
add
xchg
add
xchg
add
jbe
jp
repnz
add
jl
movl
mov
add
mov
add
je
cltd
test
cmc
add
mov
idiv
aad
mov
push
out
cmpsl
adc
add
add
hlt
add
addl
push
out
cmpsb
xchg
lea
pop
cmpl
je
push
push
shl
push
xor
add
sub
dec
xor
sub
not
pop
lea
dec
pop
push
xor
add
inc
pop
push
push
lea
push
call
out
shlb
add
jno
xchg
pop
in
loop
add
scas
mov
add
push
add
add
xchg
lods
add
jo
les
pop
jno
add
lret
call
jge
add
mov
xchg
imul
lahf
cmc
sti
add
js
std
mov
fwait
out
mov
pop
mov
lea
pop
call
cmpl
je
push
push
ror
inc
add
push
and
add
rol
shr
xor
sub
dec
ror
pop
rol
rol
pop
push
lea
push
push
lea
push
push
lea
push
push
call
pop
jp
insb
cmc
ja
mov
mov
add
add
add
loope
add
mov
outsl
add
int3
negl
cmpsl
add
mov
stc
mov
add
test
lcall
add
cltd
add
add
fucomi
add
popa
test
add
pop
add
pop
mov
lea
pop
push
push
sub
pop
call
push
push
call
add
add
add
jl
popf
scas
jp
stc
add
pop
push
imul
add
push
stos
xchg
jne
push
cld
xchg
jbe
jbe
add
add
add
push
add
add
mov
jb
pusha
add
push
add
test
popa
add
mov
cli
jb
les
pop
cmpl
je
push
push
lea
push
sub
add
add
add
sub
not
xor
pop
inc
add
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
xchg
add
add
add
pop
stc
sahf
pop
add
add
rcl
add
add
add
add
lcall
jae
add
into
mov
push
pop
insb
add
cmpsb
add
test
mov
nop
add
add
ficomps
add
mov
add
add
mov
ljmp
push
jl
add
ror
add
mov
lea
pop
push
call
cmpl
jne
push
lea
push
push
lea
push
push
call
add
jp
add
mulb
xchg
lret
mov
fisubl
mov
fdivrp
mov
add
jne
add
push
add
ja
jne
add
imul
add
fistps
scas
out
xchg
xchg
add
add
add
add
mov
rolb
add
faddl
add
test
add
fidivrs
stos
outsl
add
fmull
inc
adc
add
add
add
push
add
add
outsl
push
push
push
push
push
lea
push
lea
push
call
lret
add
add
add
mov
xchg
bound
add
mov
add
enter
add
add
out
sti
mov
mov
mul
add
jno
lods
jns
add
in
add
push
test
add
test
mov
int3
mov
mov
movsl
mov
imul
add
rolb
jecxz
add
fstps
shl
cmpsl
mov
scas
push
fiadds
mov
and
xor
push
lea
push
call
leave
mov
push
lods
pop
add
jmp
rcll
imul
fs
add
movsl
cmpsb
add
add
cli
int
add
mov
fsubrp
pop
add
int
add
add
ret
stos
xchg
movsb
jp
int
addb
add
test
gs
jo
xchg
add
fcmovnbe
add
pusha
push
out
jmp
push
cli
je
hlt
lea
pop
pop
push
lea
shr
sub
pop
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
data16
fldcw
add
addl
in
push
aad
mov
jge
add
add
test
add
add
fdivrl
imul
add
add
jge
lods
push
add
cmpsb
add
outsl
add
out
add
add
add
add
ljmp
addb
hlt
lea
pop
pop
push
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
out
out
cli
ret
stos
add
add
pop
add
jecxz
int
add
add
sti
incb
scas
shll
xchg
add
aam
movsb
add
imul
add
add
lock
pop
fiaddl
add
add
add
rcr
add
addl
fisubs
add
jle
add
add
lret
lea
pop
leave
ret
push
push
shl
lea
lea
shr
pop
mov
push
lea
inc
pop
add
cmpl
jne
push
push
sub
push
sub
add
add
sub
sub
dec
pop
shl
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
push
out
test
lahf
add
arpl
add
add
add
jno
add
add
pop
cmpsb
add
push
int
cltd
mov
fcoml
add
add
add
add
add
fnstsw
add
imul
push
jns
clc
mov
lods
divb
rolb
popa
sub
jne
call
push
push
push
push
lea
push
push
push
push
push
push
call
mov
notl
outsl
movsl
int3
add
lods
add
add
mov
mov
jbe
add
imul
sti
add
xchg
add
mov
jb
mov
fildl
divb
push
in
loopne
int3
imul
out
cmpsb
mov
add
add
shrb
jle
add
flds
add
jnp
push
add
hlt
push
add
mov
xchg
add
add
mov
push
mov
lea
pop
push
call
push
push
push
push
push
lea
push
call
add
jmp
flds
mov
add
lock
aad
add
in
test
mov
mov
add
add
add
nop
test
xchg
imul
mov
cli
push
jnp
push
push
pop
xchg
add
add
add
stos
cmpsb
out
xchg
lds
push
add
mov
cwtl
push
in
push
hlt
push
into
movsl
mov
jno
add
sti
xchg
lock
lea
pop
jmp
push
lea
push
push
push
call
lock
add
add
mov
loopne
pop
cmc
mov
add
add
lahf
mov
add
movl
mov
nop
in
add
pushf
mov
mov
push
mov
movb
add
outsl
mov
fsubr
into
add
cwtl
add
add
mov
ljmp
rcrb
add
mov
jecxz
add
gs
lea
pop
cmpl
je
cmpl
jne
push
push
push
call
in
jmp
add
aam
testl
loop
add
mov
movl
add
insb
add
add
add
add
lret
add
add
out
add
pop
mov
mov
add
push
imul
in
clc
add
add
jne
add
cli
not
jmp
mov
lea
pop
leave
add
pop
push
push
lea
push
call
mov
lea
sahf
xlat
add
add
idivl
add
fs
mov
pusha
fnstenv
ret
add
fisubrl
add
add
xlat
add
adcb
pushf
out
aad
sahf
pop
out
mov
insb
push
sahf
add
xchg
addb
mov
out
xlat
xchg
add
mov
test
sbb
int3
add
xchg
add
in
add
pop
pop
pop
push
push
call
jp
add
test
add
jle
jnp
xorl
add
lcall
mov
out
pop
add
popl
scas
mov
mov
jp
add
add
fldl
cltd
add
loop
add
cmpsl
cmpsb
push
addl
add
add
fiadds
or
leave
add
push
add
not
pop
ret
push
push
push
lea
push
lea
push
push
push
push
call
movsl
cwtl
add
add
add
fldcw
add
in
fdivs
stos
mov
xchg
add
data16
add
add
stos
ja
nop
icebp
add
rolb
add
fildll
add
cmc
add
add
int
mov
add
jecxz
add
xchg
mov
add
jl
add
rolb
xchg
fildl
pop
jmp
cmpl
jne
push
push
lea
push
sub
add
dec
shl
sub
shl
rol
not
pop
shl
pop
push
inc
pop
pushl
push
ror
add
ror
pop
call
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
testb
add
jb
push
add
std
movsb
les
pop
add
add
lahf
bound
push
add
pop
add
add
into
pusha
add
aad
add
add
add
jp
shrb
add
pusha
addl
nop
mov
add
add
aam
bound
pop
call
push
shr
inc
add
shl
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
add
movl
mov
pusha
add
popl
add
add
iret
fsubrs
jp
add
pop
add
add
xchg
jmp
push
pop
push
add
lea
xorb
mov
push
add
xchg
add
add
add
add
cwtl
push
movsl
add
add
add
add
jmp
mov
lea
pop
cmpl
jne
push
shr
not
ror
ror
pop
mov
push
push
call
imul
push
lret
add
lods
loope
mov
add
add
jle
out
pop
mov
test
add
rclb
call
mov
in
add
lea
adc
cmc
jmp
stos
add
mov
loope
add
mov
jmp
add
add
test
mov
int3
into
subb
in
cmpb
push
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
add
pop
add
add
bound
pop
fsubrl
add
add
mov
add
stos
lods
data16
int
add
test
add
push
pop
in
pop
add
add
shl
pop
leave
add
pop
iret
add
xchg
add
stc
call
add
add
movsl
into
je
add
add
pop
jmp
push
push
push
call
std
filds
xlat
ljmp
mov
sahf
add
scas
mov
std
xorl
jge
fidivs
pushf
mov
push
mov
add
fdivrp
add
in
add
add
push
mov
test
fiadds
mov
mov
cld
in
lea
add
icebp
push
mov
add
add
jl
add
ljmp
push
push
sub
shl
ror
add
pop
pop
push
lea
push
push
push
call
add
add
popa
rorl
imul
mov
lahf
mov
hlt
std
enter
mov
add
pop
scas
roll
mov
add
test
cli
xchg
mov
ja
push
mov
xchg
aad
loope
add
out
out
add
mov
ljmp
dec
jne
call
push
push
push
call
addb
add
inc
mov
js
jbe
out
lret
xchg
add
mov
pop
mov
add
out
add
mov
add
stos
and
xchg
xor
ret
add
xchg
jae
test
jb
lea
test
je
fstl
mov
lods
push
ret
loope
out
mov
ficomps
add
add
hlt
add
cmc
je
sahf
mov
lea
pop
jmp
push
not
inc
pop
call
push
push
not
push
or
inc
add
sub
shr
pop
lea
not
shl
pop
push
push
push
push
call
js
test
mov
add
add
add
sbbb
notb
shlb
add
pushf
add
iret
in
mov
add
test
lods
rolb
int3
add
out
add
out
mov
testb
imul
imul
int3
lea
pop
pushl
push
lea
pop
call
push
call
push
not
shr
pop
mov
lea
push
push
shl
shr
not
lea
push
or
not
add
rol
sub
rol
ror
sub
pop
sub
shl
ror
pop
push
push
push
push
lea
push
push
push
call
scas
popa
ret
cmc
add
add
add
pop
in
add
mov
cmpsb
add
repnz
rolb
enter
mov
outsl
add
nop
rolb
add
aad
xchg
jnp
xchg
add
add
add
pusha
clc
loop
lods
leave
movsl
pop
pop
add
testb
bound
bnd
add
mov
sbb
pushl
call
push
push
push
push
push
push
push
call
add
xchg
loope
add
jmp
pop
sti
add
mov
jge
filds
mov
add
jbe
add
lds
add
add
add
add
hlt
add
test
out
add
add
add
push
mov
fstl
popa
cmpsb
jl
pop
faddl
in
std
add
push
add
jb
add
add
mov
add
xlat
jno
mov
jno
push
add
addr16
push
push
not
shr
pop
call
push
push
add
push
or
not
add
not
inc
lea
sub
dec
dec
pop
add
rol
not
pop
push
ror
shr
sub
sub
pop
pushl
call
push
inc
dec
pop
call
mov
push
push
push
push
call
add
add
sbb
mov
jge
lds
add
data16
xchg
xchg
add
fsubp
stos
test
add
outsl
push
repnz
add
add
test
add
cli
sahf
add
push
jecxz
into
lock
mov
roll
pop
add
add
cld
jo
add
add
fadds
mov
lea
pop
lea
push
push
sub
ror
rol
push
or
not
add
sub
shr
sub
ror
shl
not
pop
sub
pop
push
shr
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
iretw
add
loope
out
add
add
xlat
rorb
add
add
mov
add
push
add
add
add
flds
frstor
add
push
xchg
add
add
add
push
add
fs
jle
pushf
pop
mov
icebp
mov
cmp
add
aad
add
add
add
hlt
lea
pop
call
lea
push
push
not
not
dec
pop
push
push
pushl
push
push
lea
add
xor
push
or
not
add
add
sub
not
pop
lea
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
ja
lea
add
addl
push
std
mov
add
jp
add
mov
sahf
lahf
add
stos
add
fstpl
add
nop
jne
mov
add
add
testl
int
mov
add
out
add
add
add
hlt
jecxz
add
out
rcr
add
add
add
add
mov
lea
pop
push
push
sub
lea
pop
call
push
push
shl
sub
push
push
pop
add
shl
inc
sub
lea
rol
shr
pop
add
xor
sub
dec
pop
pushl
push
lea
push
push
call
rcrb
bound
cmpsb
cmpsb
add
fisubs
mov
mov
fs
add
add
mov
jmp
pop
sarb
lds
std
add
fs
push
pop
js
mov
xchg
add
add
add
aam
sub
test
add
movsb
add
in
add
add
les
fcompl
add
push
call
push
push
push
and
add
rol
inc
not
sub
shr
pop
sub
pop
push
xor
add
inc
pop
pushl
push
lea
dec
add
pop
call
call
jmp
push
push
push
push
push
push
call
jo
add
loopne
mov
iret
fcoml
push
push
addb
add
lret
gs
xchg
add
mov
pop
add
in
lcall
pop
add
add
int
lock
fcmove
stos
mov
andb
cmpsl
add
notl
add
mov
add
lds
rolb
add
jge
fiadds
add
jns
outsl
insb
call
add
sahf
pop
leave
add
cli
mov
lea
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
sarl
add
fwait
je
rcrl
outsl
add
add
add
add
mov
add
int3
add
add
mov
mov
int3
add
rolb
fldt
fdivl
lahf
mov
add
fwait
push
nop
add
add
xchg
add
nop
add
scas
mov
cld
lea
pop
mov
push
add
add
pop
jmp
push
push
rol
push
push
pop
add
sub
add
shl
shr
dec
pop
sub
inc
dec
sub
pop
push
dec
pop
pushl
call
push
push
push
call
ljmp
add
in
add
leave
add
pop
jge
add
add
notl
out
add
cld
push
lea
std
jmp
jge
out
mov
lret
jnp
insb
add
test
xorb
add
push
push
add
add
xchg
add
mov
rcrl
loope
add
push
clc
jl
xchg
add
movsl
lret
bound
fmull
add
shrb
out
call
sti
lods
fsubrs
add
lea
sub
xor
pop
not
shr
inc
pop
push
push
lea
push
push
push
call
add
jmp
ljmp
fs
mov
xchg
stos
std
shll
pop
stos
push
gs
add
hlt
shll
add
add
jmp
mov
add
mov
add
negb
movsb
xchg
rcrl
cmpsb
jmp
lods
fwait
iret
jnp
add
adc
pushl
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
jno
add
in
cmpsb
add
add
testb
mov
mov
addl
stos
push
add
iret
add
add
data16
add
jne
jecxz
add
lahf
mov
xlat
add
add
leave
add
mov
jp
add
add
insb
add
scas
add
loop
add
mov
jle
mov
lea
pop
call
leave
push
push
lea
push
lea
push
push
push
push
call
lods
add
mov
add
lret
add
add
stos
add
jp
add
add
add
mov
roll
add
addl
add
add
mov
add
mov
in
cld
add
add
add
iret
not
add
add
arpl
add
fisubrs
mov
js
add
add
loope
cld
lea
pop
add
push
lea
push
lea
push
push
lea
push
call
add
out
add
add
jno
jl
enter
mov
add
add
add
jnp
test
cltd
fs
ljmp
add
add
add
in
add
mov
scas
add
add
jle
add
add
xchg
fsubrl
add
add
mov
add
testl
add
cld
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
call
icebp
in
jne
push
popl
loope
hlt
je
loop
or
jb
lock
add
aam
xchg
out
mov
xorb
in
add
xchg
add
cwtl
clc
add
push
push
js
jp
push
add
add
sar
add
xchg
out
data16
fstpt
cld
add
jl
pop
jl
popf
lahf
add
mov
lea
pop
pop
pop
push
push
push
call
mov
test
xchg
movsl
addr16
add
mov
jl
rclb
pop
insb
add
mov
add
add
add
popl
rorb
pop
add
add
mov
or
nop
add
add
add
add
add
ret
add
jbe
fs
add
jge
stos
ljmp
mov
mov
cltd
addb
pop
leave
push
shr
pop
add
ret
leave
push
push
push
push
call
popf
xchg
sahf
outsl
xchg
repnz
add
add
outsl
add
fs
add
scas
lods
ljmp
mov
add
mov
mov
je
std
fcomps
fadds
mov
int3
add
sahf
jp
xchg
pop
add
in
flds
fwait
add
testb
pushf
iret
add
xlat
mov
out
mov
adc
or
push
pop
push
mov
cmpl
jne
push
push
lea
push
call
jmp
push
mov
add
jle
jno
jmp
add
xchg
jge
add
cmc
push
aam
out
mov
cwtl
jo
add
add
add
add
add
add
add
sahf
shl
ja
fildl
out
push
add
add
popf
fcmovbe
mov
stos
scas
push
rolb
add
nop
repnz
xchg
add
push
in
add
pop
mov
jmp
push
shr
sub
sub
pop
mov
push
push
call
rolb
hlt
add
add
loop
add
call
icebp
add
loop
arpl
flds
faddl
add
add
add
add
hlt
add
add
add
xchg
jecxz
in
shlb
out
add
push
jae
add
shrl
lock
in
mov
loope
call
add
add
repnz
retw
popf
jl
test
add
add
pop
and
push
push
push
lea
push
call
pusha
ja
add
test
add
mov
lods
add
add
add
add
int
add
pop
add
mov
testb
aam
jno
rcr
add
mov
mov
stc
sti
les
add
mov
les
scas
aad
bound
xchg
jb
mov
movsl
add
in
loopne
cmpl
add
mov
add
pop
xor
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
jae
int3
xchg
add
add
lahf
jmp
add
stc
cwtl
lret
fldl
add
cld
add
add
test
fisubrs
add
testb
add
add
mov
js
add
jge
pop
push
push
add
out
clc
aad
sarl
rorb
jb
mov
add
push
mov
jge
add
iret
mov
js
add
mov
in
mov
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
add
add
add
add
imul
loope
add
sahf
mov
bound
xchg
data16
mov
cmpb
xchg
cli
insb
add
mov
test
add
push
mov
lret
icebp
int
xchg
add
xchg
jge
jnp
mov
add
lcall
add
jle
test
add
add
add
mov
push
into
add
add
push
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
mov
pop
push
add
add
add
cli
add
mov
mov
add
add
add
sahf
jbe
mov
add
pop
add
flds
sti
add
add
add
xchg
add
loop
int3
mov
add
mov
pop
add
add
add
pop
xor
push
push
lea
push
push
call
pusha
cli
je
mov
add
add
add
test
addb
add
jl
add
cltd
add
mov
push
add
xchg
enter
mov
into
in
mov
out
push
add
scas
loop
add
data16
add
add
add
jl
xchg
add
add
mov
lea
pop
dec
push
push
lea
push
push
push
lea
push
push
call
pusha
add
mov
add
xorl
add
scas
outsl
scas
add
fsubp
add
add
add
add
add
add
xchg
cltd
dec
add
add
add
fnstsw
mov
rolb
movl
add
cld
add
cmpb
mov
add
popa
pusha
push
pop
add
add
add
hlt
lea
pop
sub
jmp
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
pop
add
mov
test
outsl
mov
loopne
rorl
add
mov
add
nop
push
ret
lahf
out
add
rolb
push
movsb
lahf
mov
test
add
xorb
stos
popf
ret
mov
rolb
mov
mov
bound
roll
mov
mov
lea
pop
sub
push
add
inc
pop
pushl
pop
push
push
push
push
call
xchg
std
popf
imul
outsl
loopne
cmpsl
mov
sbb
add
addl
pushw
test
add
add
add
roll
xchg
add
cwtl
add
add
push
std
test
mov
pushf
add
add
add
add
lret
ret
mov
add
pop
sub
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
mov
add
mov
scas
mov
test
add
mov
icebp
mov
imul
fidivrl
add
fistpl
popf
add
add
mov
push
popa
add
loopne
add
mov
test
add
aam
bound
pop
cmp
jne
push
push
push
call
lods
add
fsubrs
leave
shlb
movsl
arpl
mov
add
fadds
add
test
mov
add
mov
imul
add
int
gs
add
lods
add
push
xchg
out
cmpb
pusha
push
mov
add
push
add
pop
sahf
mov
cld
add
push
add
mov
add
add
add
lea
pop
mov
lea
push
push
lea
push
push
push
push
call
fsts
xchg
mov
add
add
scas
jae
popf
add
add
je
cld
add
add
addr16
pop
add
add
stc
fstl
out
xchg
repnz
add
add
lcall
add
lods
add
mov
in
loop
mov
in
enter
add
fiadds
test
rolb
add
mov
lea
pop
sub
mov
shr
push
push
push
push
push
push
push
lea
push
push
push
call
fstpl
add
pop
add
add
mov
mov
add
add
jle
add
add
push
jo
add
jo
mov
popa
imul
fwait
lods
clc
sarl
jge
add
shl
pop
add
xchg
pushf
filds
lret
add
lret
movl
add
jl
shr
fdivrp
add
cmpsl
push
fisubrl
addr16
fnstsw
mov
lea
pop
add
sub
push
lea
push
push
push
push
call
icebp
add
stos
mov
add
xorb
js
add
mov
loope
cmpsl
add
mov
mov
fucomp
jno
roll
out
mov
add
fiadds
sahf
test
int3
jae
int
xchg
push
add
stc
add
jbe
cli
add
xchg
loopne
add
scas
mov
gs
sahf
pop
faddl
gs
je
add
xchg
stc
add
lods
add
ja
mov
lea
pop
pushl
push
sub
add
pop
pop
push
push
push
push
push
push
push
push
call
add
stc
fucom
add
mov
add
add
ljmp
addl
enter
movsb
add
js
test
repnz
push
out
pop
add
add
xchg
jnp
add
xchg
add
out
lods
add
add
in
addl
add
push
fistpll
mov
mov
jbe
mov
add
iret
lret
in
cmc
mov
jae
add
pop
shr
and
sub
push
not
not
add
pop
cmp
jne
push
push
push
lea
push
call
imul
add
add
sbbl
add
push
push
mov
mov
roll
add
repnz
push
add
add
push
mov
add
add
sti
fisubs
add
decb
cmpsb
add
add
jmp
add
add
add
iret
add
add
call
mov
add
add
add
mov
lea
pop
leave
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
cmc
mov
fldl
add
lcall
add
add
mov
add
mov
add
enter
roll
in
add
add
leave
add
jp
icebp
cwtl
jb
rolb
add
add
add
add
popf
add
lret
mov
push
add
fiadds
ret
add
rolb
mov
popl
int3
add
gs
in
push
add
pop
ret
push
inc
add
dec
pop
push
push
push
push
push
push
push
push
push
call
push
pop
jae
push
xchg
imul
fistpl
scas
in
pop
pop
mov
out
add
add
pushf
add
add
fwait
push
push
lea
mov
movsb
flds
mov
add
xchg
fildl
push
pushf
addb
add
pop
add
add
enter
mov
add
adcl
fs
cltd
add
lods
add
pop
add
les
mov
jo
mov
hlt
lea
pop
mov
add
push
push
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
js
mov
add
add
pushf
mov
arpl
add
cwtl
popl
add
icebp
aam
mov
mov
add
add
add
pop
hlt
xchg
test
std
add
add
push
add
imul
scas
add
mov
add
scas
rclb
add
add
mov
add
jb
add
mov
lea
pop
push
push
xor
lea
shr
pop
mov
push
pop
lea
sub
push
push
push
push
lea
push
push
lea
push
push
call
jns
add
mov
out
out
add
add
mov
mov
test
into
enter
mov
cli
loopne
lods
lret
add
add
jns
xchg
push
call
mov
add
movl
outsl
add
add
add
not
xchg
add
rorb
lock
add
pop
jo
mov
lea
pop
mov
shr
add
push
push
push
lea
push
push
push
call
push
out
nop
add
add
loop
add
jmp
lret
add
add
jb
add
test
xchg
push
add
add
pusha
add
mov
call
add
add
add
add
add
push
add
add
in
add
add
ljmp
aam
aam
mov
add
mov
arpl
add
lret
jl
jmp
out
add
lock
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
push
ret
enter
in
jns
jge
stc
add
imul
pop
add
imul
shrl
push
in
fcompp
add
fmul
fnstcw
push
add
fisubrs
neg
flds
mov
add
out
add
lret
mov
pop
mov
into
enter
je
add
push
mov
shll
pop
add
mov
push
push
push
lea
push
call
pushf
jbe
into
fistpl
push
add
add
add
xchg
sti
fldl
add
mov
scas
mov
add
loop
jle
ret
add
fstpl
movl
leave
in
add
add
mov
je
flds
cwtl
jns
ja
lds
add
add
add
ja
add
push
sar
add
cmpsb
lea
fadds
jne
int
mov
hlt
lea
pop
add
push
lea
push
push
push
call
add
push
stos
mov
mov
add
add
fnstsw
add
add
add
imul
arpl
add
add
call
test
add
lret
repnz
add
add
mov
mov
xchg
mov
aad
jo
sar
pop
movsl
pop
xchg
scas
push
shlb
adc
notb
ljmp
add
add
std
push
add
add
add
add
insb
cld
cmpl
add
mov
xorb
cli
pushf
fsts
lret
cmpsb
jnp
xchg
pop
lods
push
aam
add
mov
add
mov
add
mov
shll
clc
push
add
into
jb
push
mov
lea
pop
mov
and
push
lea
push
push
push
lea
push
lea
push
push
call
add
jnp
add
test
add
std
out
add
add
pop
push
out
out
loopne
add
movsl
filds
pop
add
into
add
add
add
add
sarl
rcr
into
push
add
add
test
jnp
imul
scas
add
sti
les
sahf
mov
fisubl
mov
jae
add
add
add
lock
fmull
iret
sbb
jbe
push
push
push
push
push
push
push
push
push
call
leave
add
jb
add
jo
pushf
add
push
add
mov
mov
push
cwtd
jle
add
add
jne
add
push
xchg
stos
fbstp
mov
pop
popa
lea
lock
add
push
add
xchg
add
jecxz
ljmp
fadds
add
shrl
loopnew
test
loope
addr16
fidivrl
lret
ja
add
sti
add
add
out
ror
push
fcmovne
lods
mov
xchg
flds
hlt
lea
pop
add
push
push
push
lea
push
push
push
call
out
mov
add
fs
mov
add
xchg
movsb
fildl
mov
add
lods
add
add
add
lods
add
mov
mov
loopne
int3
add
mov
add
xchg
fcomps
leave
xchg
jecxz
mov
add
add
add
add
bound
in
add
push
xchg
mov
add
data16
inc
or
test
add
add
adc
jne
push
ror
pop
xor
push
shr
pop
pop
push
lea
push
push
push
lea
push
call
add
lahf
add
cwtl
movsl
outsl
pop
pusha
fadds
sti
or
push
fwait
jns
add
add
add
mov
fadds
in
add
andl
aam
aam
lret
mov
add
mov
jge
shrl
add
add
add
fsubl
mov
les
pusha
icebp
add
add
add
pop
inc
add
xchg
std
xlat
pop
mov
lea
pop
pop
pop
push
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
lods
js
lcall
add
in
int
jp
test
add
add
jnp
sahf
add
les
imul
mov
xlat
ret
in
add
xchg
fidivs
add
imul
add
add
fadds
mov
movsb
xchg
lretw
add
add
lea
pop
leave
ret
push
push
push
push
lea
push
push
call
pop
fucom
add
add
add
mov
add
add
add
push
push
add
mov
mov
lods
xchg
hlt
sarb
loope
add
sti
add
push
push
add
add
loop
jnp
add
jno
add
add
filds
xchg
cld
loopne
add
shl
popl
testb
push
arpl
pop
roll
lret
imul
add
mov
loopne
add
pop
mov
add
push
push
rol
shr
xor
add
pop
push
push
rol
add
pop
pop
push
ror
pop
pop
mov
push
push
shr
dec
not
pop
call
xor
pop
push
push
push
push
lea
push
push
push
push
push
call
jne
add
add
scas
aam
cli
push
loope
lret
imull
add
test
mov
incb
add
add
int3
fdivs
les
add
scas
add
add
add
add
insb
add
int
push
add
mov
imul
add
add
mov
call
pop
push
add
add
add
mov
lea
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
popf
fmul
jp
add
mov
mov
add
mov
roll
add
testl
jo
mov
cltd
adcl
mov
add
add
add
push
in
add
shl
add
add
js
leave
jae
mov
ljmp
add
add
add
ret
jmp
lea
pop
pop
push
dec
pop
pop
push
shl
ror
sub
pop
pop
push
push
push
push
call
ljmp
mov
add
add
bound
mov
mov
mov
mov
mov
mov
lock
jecxz
add
in
lcall
add
cwtl
popa
add
bound
push
fidivl
add
pop
fcmovnbe
ficomps
add
repnz
fidivl
mov
sahf
mov
jmp
pop
add
add
add
mov
add
rolb
scas
mov
lea
pop
leave
ret
push
push
lea
push
push
call
iret
roll
roll
fs
ret
jmp
add
sarb
fiaddl
popf
subl
lods
add
pop
xlat
pop
xchg
add
mov
xchg
add
testb
lret
rolb
add
test
add
add
stc
add
pop
aad
addl
add
fisubl
lds
push
fiadds
icebp
add
addb
lret
lea
pop
push
mov
push
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
test
add
add
lret
call
arpl
add
faddp
add
mov
outsl
add
std
add
fmull
push
push
add
arpl
add
add
rolb
xchg
add
add
add
mov
add
mov
mov
cmpsb
push
add
loope
cwtl
add
mov
push
jle
fmull
push
push
push
push
call
js
repnz
rcl
add
std
mov
add
pusha
add
add
mov
xchg
add
add
gs
je
push
jns
add
add
mov
add
jb
jne
add
jmp
mov
push
rolb
lret
add
int3
add
cmc
jecxz
pop
mov
lea
ret
push
ficompl
sarl
add
jns
enter
lea
pop
mov
push
lea
dec
xor
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
add
pop
in
imul
in
rolb
gs
add
add
imul
jbe
repnz
jne
cld
add
movl
add
incb
add
add
add
add
jl
add
add
fs
out
add
xchg
add
pop
pushf
add
iret
add
jae
add
mov
jae
stos
popf
add
fimuls
xchg
mov
data16
gs
pop
mov
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
push
call
lods
fadd
add
push
rorb
add
out
jnp
data16
cwtl
mov
nop
mov
add
add
stos
add
add
xchg
test
fcoms
fcoml
add
add
push
icebp
add
add
jge
add
add
pop
mov
lea
pop
lea
sub
push
push
lea
push
push
push
call
fldt
add
lods
add
cli
add
xchg
mov
add
xchg
push
pushf
lock
add
je
add
cli
add
in
pop
add
mov
add
pop
movl
loope
mov
cld
jae
xlat
jle
stc
iret
mov
add
in
pop
add
mov
xchg
mov
add
addr16
lea
pop
mov
push
sub
sub
pop
shr
add
mov
push
not
pop
add
pushl
popl
push
push
push
push
push
push
push
call
add
ja
add
add
enter
std
jle
movsb
add
out
mov
add
testl
add
add
push
out
jbe
add
add
jle
ja
rorl
shr
add
add
rcrb
push
lock
add
jae
mov
iret
add
fbstp
mov
add
add
jno
js
loope
mov
lea
pop
mov
push
xor
pop
add
push
push
push
lea
push
call
xchg
test
aad
shlb
add
nop
mov
add
add
add
call
add
mov
repnz
fistps
subb
xlat
xchg
mov
jae
add
shll
cli
std
mov
fmulp
add
jge
mov
data16
push
jae
push
pushf
add
fildl
popa
ret
add
add
add
pop
xor
lea
push
push
call
add
add
in
add
lcall
lret
add
add
popa
out
add
push
add
add
mov
mov
add
push
mov
jb
add
add
add
movl
xchg
add
add
xchg
mov
movsl
add
add
mov
add
into
add
nop
mov
lea
pop
mov
add
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
andb
hlt
xchg
add
ret
mov
in
jl
add
add
fldl
mov
pop
add
add
mov
add
xorb
add
xchg
adc
jl
cwtl
add
cld
pop
jbe
pop
into
clc
popa
cmpsl
push
lret
scas
je
xchg
bound
mov
lahf
xchg
add
add
test
mov
addr16
xor
call
add
push
not
sub
pop
nop
nop
push
lea
push
push
push
push
push
push
push
lea
push
call
ja
push
add
popf
add
add
mov
mov
add
jae
movsb
add
mov
mov
add
add
jb
add
sti
xchg
outsl
add
push
mov
outsl
add
jle
js
jl
add
mov
add
lods
add
and
cmp
je
push
push
push
push
lea
push
lea
push
push
push
push
call
testb
lret
add
add
mov
mov
xchg
add
add
lods
add
push
int
cltd
roll
add
int
push
add
test
hlt
cmpl
add
lahf
add
je
out
imul
addl
sar
add
mov
lret
add
arpl
nop
nop
inc
push
rol
lea
shl
pop
nop
nop
push
ror
ror
pop
cmp
jb
xor
jmp
push
inc
ror
pop
mov
add
push
push
push
push
lea
push
push
push
push
push
call
mov
fnstsw
int3
jle
mov
rolb
jp
mov
push
add
xchg
sarb
out
mov
add
addr16
add
nop
test
call
mov
add
xchg
jae
add
insb
jecxz
jns
add
testl
add
push
ja
add
bound
jo
mov
lea
pop
movzwl
mov
add
push
push
push
push
push
call
push
add
sarl
mov
add
add
subl
lret
xlat
incb
add
pop
popl
add
add
jnp
fists
add
fisubs
push
add
movsb
hlt
pop
add
add
xlat
test
mov
in
imul
lods
lock
add
pop
add
out
out
out
pusha
in
add
pop
mov
xor
xor
push
lea
push
lea
push
push
push
push
call
mov
mov
cmpsl
out
flds
lock
mov
aam
jle
pop
imul
add
add
pop
mov
ret
mov
in
add
add
rorl
jne
add
add
add
add
movsl
add
add
stc
gs
add
add
mov
lea
pop
shl
xor
push
push
push
lea
push
push
call
add
flds
std
mov
lea
add
in
add
roll
pop
add
add
out
mov
add
mov
stos
add
fsubr
add
push
loop
mov
in
nop
flds
jae
add
add
addr16
popa
mov
xchg
mov
cltd
rorl
lds
add
mov
test
icebp
mov
xchg
addb
mov
add
add
mov
pop
shl
push
lea
pop
xor
shl
xor
push
sub
rol
not
lea
pop
mov
push
sub
sub
pop
add
pop
push
inc
rol
add
pop
pop
push
add
pop
pop
push
shr
xor
pop
pop
push
push
lea
push
lea
push
push
call
andl
in
add
in
imul
fisubs
mov
push
add
lock
ja
xchg
jle
xlat
add
mov
add
xchg
loopne
add
add
pusha
add
jmp
add
mov
mov
flds
xchg
jp
add
test
add
push
xchg
int3
add
xchg
jle
xchg
add
xchg
mov
lea
pop
leave
push
not
not
rol
pop
ret
push
mov
push
push
push
lea
push
push
lea
push
push
call
jbe
addb
add
xchg
pop
add
add
add
stos
push
add
pop
add
push
out
lret
add
pop
add
cltd
add
jge
add
add
add
add
pop
xchg
xchg
mov
add
je
mov
add
add
add
mov
add
leave
sahf
add
cld
add
popf
sahf
lcall
add
pop
push
push
push
push
push
call
jno
add
test
add
fstpl
lock
xlat
jmp
sahf
scas
add
add
test
add
pusha
xchg
cmpsl
xchg
cmc
rolb
add
js
sahf
cld
add
pop
bound
add
add
out
cltd
loop
add
add
pop
in
lods
testb
add
add
pop
fsub
sti
cmc
ret
add
mov
mov
add
xchg
mov
js
add
pop
push
push
lea
push
push
push
call
lods
jb
les
add
add
push
pop
mov
jecxz
add
push
mov
add
in
int3
mov
add
in
add
mov
mov
mov
mov
add
out
add
clc
add
add
imul
xlat
add
xchg
divb
fwait
jge
add
add
leave
add
enter
test
mov
lea
pop
push
mov
push
inc
dec
pop
mov
mov
push
push
push
push
push
push
lea
push
push
call
enter
add
add
mov
mov
js
xchg
sti
add
mov
add
fadds
xchg
popa
icebp
lea
jo
add
xchg
mov
lret
sarb
add
sti
insb
pop
lods
add
sahf
int
mov
add
pop
mov
in
add
add
add
add
add
add
imull
out
add
icebp
mov
lea
pop
test
je
push
add
pop
mov
test
je
push
push
push
push
push
call
add
xchg
aam
incb
ja
add
add
xchg
imul
add
add
add
add
jne
pusha
outsl
aam
mov
movsl
jne
push
mov
add
add
add
mov
push
add
flds
flds
push
rolb
mov
sti
rol
add
add
xchg
js
mov
pop
mov
push
xor
add
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
push
call
popf
pop
ja
add
jno
scas
jb
add
pop
mov
fbld
movsb
cmpsl
hlt
add
incb
fdiv
jle
add
add
scas
add
movsb
mov
test
push
add
add
xchg
popf
add
add
cmpsl
loope
mov
fxch
sar
add
sti
arpl
mov
push
add
incb
fwait
add
pop
loopne
test
je
fdivr
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
call
jne
fdivrs
mov
add
fidivl
jae
add
nop
add
xchg
add
mov
stos
push
mov
add
push
add
add
add
add
jp
add
jne
add
xchg
fcmovu
lret
add
add
jno
add
arpl
add
mov
add
roll
jne
add
add
aad
add
scas
xchg
lds
add
sti
mov
lea
pop
inc
push
push
push
lea
push
push
push
push
push
push
call
jp
add
sbbl
fiaddl
in
fs
add
add
repnz
add
add
add
add
jge
insb
xchg
add
push
mov
call
mov
pop
out
push
add
cli
stos
out
add
xchg
add
add
pop
add
jno
pop
add
cltd
xchg
add
jbe
movsl
in
sti
jle
and
add
add
neg
add
rolb
add
aam
bound
cmp
je
push
push
push
call
mov
add
pop
add
mov
in
mov
add
fistps
add
add
add
hlt
jo
add
push
add
addb
mov
popa
add
add
cwtl
mov
add
loop
add
add
lea
stos
in
je
bound
add
data16
push
iret
xchg
jnp
movsl
pop
add
add
add
mov
xchg
in
insb
mov
lea
pop
test
je
mov
inc
push
push
push
lea
push
push
push
push
push
lea
push
push
call
stos
jno
clc
xchg
add
in
mov
add
loope
add
add
add
iret
xchg
lds
stos
add
mov
add
mov
add
push
add
push
add
add
add
nop
popf
add
ljmp
push
push
add
mov
cld
cltd
jp
fadds
in
js
push
mov
add
stc
add
add
pop
cmp
je
test
jne
push
push
lea
push
lea
push
lea
push
call
loopne
add
in
add
mov
pusha
int
jns
idiv
mov
add
in
je
test
add
add
add
add
jnp
sahf
testb
insb
add
mov
mov
add
add
std
pop
out
fs
testl
mov
scas
add
add
xlat
ret
add
negl
jbe
add
rolb
out
add
addr16
xor
push
dec
rol
pop
pop
pop
push
not
add
dec
pop
pop
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
lahf
popa
testb
add
add
pop
add
icebp
add
roll
xlat
add
cmpsb
lock
movsb
incb
jecxz
iret
pop
popa
loopne
stos
jge
add
add
jle
jp
mov
add
add
mov
add
filds
shlb
mov
add
jne
pop
hlt
mov
lea
pop
ret
mov
push
not
pop
inc
push
add
add
pop
cmp
jne
push
lea
push
call
addr16
loopne
addl
pop
add
add
add
add
pop
pusha
popa
add
add
add
add
add
push
add
add
fcmovnu
add
les
cmpsb
add
add
test
add
add
aam
scas
shlb
jbe
in
add
mov
add
flds
add
lods
add
imul
pop
mov
in
add
add
lea
pop
lea
mov
test
je
push
push
push
push
push
push
push
push
push
call
lcall
mov
add
add
arpl
add
ret
stos
add
push
lods
push
arpl
add
fwait
out
add
mov
mov
fwait
addb
hlt
add
jbe
add
aam
cld
add
pop
mov
add
add
add
loopne
add
pusha
jmp
xchg
data16
std
lret
jl
add
lret
out
mov
les
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
rolb
add
add
add
push
les
add
jae
mov
xchg
popa
mov
pop
add
mov
lock
add
add
cltd
add
insb
insb
movsl
add
lret
mov
mov
add
xchg
pop
jns
shr
fsubrs
imul
clc
mov
int
pop
out
js
mov
mov
mov
add
popa
push
stos
arpl
nop
cwtl
mov
pop
add
cmc
add
in
add
pop
add
push
lea
push
call
xlat
lret
add
add
push
jecxz
scas
movsl
add
aam
loope
pop
pop
add
test
add
fcmovne
add
cmpsb
bound
add
popf
add
mov
add
add
pop
imul
test
jl
add
add
push
add
mov
mov
popf
add
call
lods
or
les
loopne
test
stc
decl
dec
push
lea
push
push
push
push
push
push
call
fiaddl
mov
add
add
add
arpl
sbb
fiaddl
popa
pop
cmc
mov
add
addb
mov
notb
push
mov
add
add
lret
fsts
mov
pop
stos
ja
int
add
xchg
xchg
imul
add
pusha
and
test
je
push
sub
dec
pop
mov
add
cmp
je
push
push
lea
push
push
push
push
push
push
call
jecxz
roll
add
stos
rolb
add
add
icebp
ljmp
push
add
lea
jge
add
in
add
xchg
xchg
in
add
mov
add
add
add
sahf
mov
out
ret
popf
jo
add
pop
add
push
add
add
add
add
jmp
add
test
add
add
mov
lea
pop
jmp
xor
push
push
push
push
push
push
push
call
popa
add
add
add
mov
mov
add
fnstcw
jo
add
fldt
std
in
shll
scas
push
movb
add
add
jmp
add
mov
xchg
pop
add
out
add
lods
xchg
add
push
in
push
out
add
fldl
loop
add
stc
rol
add
add
arpl
stc
add
push
ljmp
push
xlat
scas
mov
mov
lea
pop
pop
pop
pop
push
shr
pop
pop
leave
push
push
push
push
push
lea
push
push
push
call
cli
push
pop
lcall
add
test
add
popa
out
jb
add
lea
mov
add
add
add
xchg
loopne
iret
add
add
addl
add
add
add
add
add
jp
testl
mov
test
fmull
or
lea
pop
push
lea
pop
pop
push
push
push
push
push
push
push
push
call
add
push
lods
sti
add
pushf
mov
jns
jnp
add
cli
aad
scas
add
ljmp
push
arpl
fwait
testb
insb
mov
push
add
add
lock
add
loope
jmp
add
add
jns
add
in
jmp
pop
add
add
cmpsl
mov
lea
pop
pop
pop
leave
push
push
push
push
lea
push
lea
push
call
stos
jns
leave
mov
add
xchg
sahf
into
int
add
fldcw
repnz
incb
add
movsl
mov
loopne
add
test
leave
add
icebp
mov
add
fsub
push
ja
pop
add
add
movsl
arpl
rcrb
mov
push
push
xlat
add
jbe
jne
fidivrl
add
add
lcall
ret
mov
pop
push
push
push
call
add
pop
mov
add
pusha
out
mov
shrb
add
in
clc
data16
mov
stos
mov
ljmp
xchg
add
mov
mov
sub
add
jecxz
mov
clc
add
add
fists
mov
add
call
add
mov
add
add
pop
testb
pop
add
movsb
mov
fadds
mov
lea
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
pop
ja
jl
mov
loop
hlt
jge
add
popl
in
mov
push
add
add
test
jae
add
repnz
add
iret
pop
add
add
pop
pop
in
lods
add
hlt
loop
scas
add
cwtl
pop
add
add
add
movsl
add
add
jno
mov
lea
pop
pop
pop
push
shl
shr
pop
leave
ret
push
ror
dec
add
pop
rol
push
push
push
push
push
call
mov
add
filds
push
add
add
mov
movsl
test
lds
sahf
stos
out
cld
add
add
jbe
addb
add
imul
add
jnp
loope
ljmp
mov
add
add
aad
add
sub
lea
mov
jne
add
jnp
add
jmp
add
pop
rol
xor
push
inc
lea
pop
inc
push
push
push
call
loopne
popa
add
mov
int3
add
mov
xchg
imul
add
add
add
add
pop
xchg
add
mov
add
mov
add
test
add
lret
add
cli
out
lahf
cmpsl
in
stc
fiadds
push
shlb
add
loopne
mov
cwtl
test
addr16
cmpb
jne
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
leave
pop
fcmovnb
in
add
adcl
add
popf
add
clc
movsl
lret
lret
mov
add
pop
add
mov
add
cltd
fsubl
mov
jge
mov
xchg
add
add
jne
mov
sahf
lods
add
test
pop
loope
pop
xchg
enter
add
out
call
arpl
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
push
xchg
mov
sti
movsb
xchg
mov
sti
stos
pop
mov
sti
movsb
sub
sti
in
mov
add
or
cmp
imul
dec
xchg
outsl
frstor
sub
and
push
add
in
mov
rcr
xor
xchg
andb
rol
push
call
or
sbb
jne
dec
jne
xchg
ds
adc
pop
cs
adc
fnsave
inc
stc
insl
cmp
ret
jp
mov
into
and
adc
out
inc
adc
lods
leave
stc
aaa
das
fnclex
loop
ljmp
xchg
pop
aas
add
out
jmp
jmp
scas
push
lcall
mov
mov
push
jecxz
call
lds
cmp
xlat
inc
dec
mov
cmp
push
sub
inc
fmulp
mov
cli
das
in
bound
mov
inc
aam
jne
push
lock
xor
push
mov
movsb
iret
sub
fistl
sbb
pushf
cmc
mov
stos
mov
mov
arpl
pop
lret
cwtl
dec
and
mov
das
stos
repz
aam
xchg
sar
into
or
int
notb
mov
jp
adc
xor
dec
sahf
stos
cmc
jmp
bound
and
push
and
lods
lret
stc
js
pop
pop
jecxz
adc
and
cli
sbb
xor
inc
jg
stos
add
cmp
je
scas
jmp
push
or
sub
scas
or
rol
cmpb
nop
cmpsb
aam
mov
cltd
fmulp
push
in
sub
jl
scas
imul
ds
sbb
pop
add
jo
cmp
dec
ljmp
add
ret
hlt
sbb
aam
insl
enter
xor
cli
fcompl
mov
cltd
mov
xor
mov
pop
jne
mov
int3
mov
push
pop
cmc
fldcw
aad
mov
stos
xchg
arpl
add
cmc
jg
jbe
mov
lods
test
mov
sbb
shll
sbb
shll
pop
mov
aaa
jl
and
mov
push
xor
jae
or
movsl
outsl
mov
pop
shll
aad
xchg
scas
mov
aas
xor
outsb
jg
push
mov
jge
or
cli
mov
loop
xchg
adc
lds
push
ja
stos
cmp
mov
popf
pop
push
data16
lods
bswap
inc
shrl
jge
mov
repz
ljmp
outsb
xchg
pop
sbb
jg
out
adc
repz
inc
pop
cmp
jno
daa
cmp
sbb
dec
fcomps
mov
std
aad
mov
xchg
mov
lods
sti
aas
cmp
xchg
rcrl
sbb
dec
out
movsb
mov
pop
xchg
shll
in
imull
cmc
in
sbb
jo
jle
out
pop
dec
add
add
rolb
sbb
sbb
add
push
pop
imul
adc
lods
mov
sub
mov
mov
push
dec
movsl
jbe
adc
adc
mov
or
pop
cs
xor
test
fldt
stc
inc
pop
std
dec
cmp
popf
fidivs
loope
lods
fildl
dec
push
into
sub
sub
pop
lcall
aas
jno
pop
jnp
cwtl
test
sti
and
lds
mov
out
push
outsb
lock
stos
aas
inc
jp
outsb
push
sbb
fstps
inc
test
imul
scas
push
out
mov
and
push
outsl
pop
test
in
jnp
jl
movsb
mov
lock
lahf
ret
add
fiaddl
nop
mov
gs
shrb
xchg
pop
xchg
add
mov
outsl
xchg
mov
or
push
push
dec
push
pushf
out
or
push
sbb
dec
lds
and
adc
in
or
imul
repz
in
icebp
inc
xchg
dec
adc
inc
movsb
cwtl
addr16
push
out
out
dec
mov
or
leave
push
adc
scas
add
out
push
pop
cmp
mov
add
add
sub
inc
xchg
sahf
pop
int3
aas
push
sti
cs
jae
enter
rolb
pop
pop
xor
sub
mov
notb
loop
les
mov
mov
sub
bound
imul
push
jno
test
in
jge
dec
or
add
adc
cmpl
popa
out
sarl
enter
dec
mov
sahf
ljmp
push
or
ds
mov
clc
pop
pop
jge
xchg
xchg
nop
movsl
out
pop
outsl
sbb
inc
sbb
cmp
lahf
xchg
leave
push
xchg
jb
pop
clc
mov
mov
or
std
out
mov
cmp
add
mov
sub
les
add
pop
pushf
inc
dec
sub
sub
mov
fstpt
les
test
and
call
aas
fnstsw
push
mov
xchg
xchg
adc
lahf
xchg
cmp
sbb
fists
or
sub
stc
xor
jmp
ljmp
mov
in
sub
xchg
mov
fisubs
push
lea
inc
mul
gs
xor
or
rcll
and
fisubl
mov
dec
imul
outsb
call
pop
dec
out
pop
jp
xchg
gs
pop
fiaddl
mov
inc
push
xchg
fcmovb
je
jns
test
xorb
imul
popa
push
mov
xchg
pop
sub
jb
ret
xor
push
lods
mov
cmp
jp
inc
dec
cmp
mov
and
loope
adc
mov
cmp
shl
push
mov
push
jns
cmc
mov
dec
xor
mov
push
pushf
je
inc
push
or
push
xchg
dec
sub
cmp
or
das
incl
addb
dec
fmuls
jg
in
pop
sbb
addr16
mov
stos
jecxz
test
cmpsl
sbb
xor
mov
loop
or
ljmp
fwait
fs
sbb
hlt
xor
das
mov
cmp
push
xor
or
sbb
mov
jnp
fprem1
shlb
test
mov
aam
repz
mov
or
pop
xor
lret
pop
dec
push
fbld
icebp
aam
adc
dec
or
cwtl
ret
pushf
mov
adc
jl
nop
sbb
fldcw
and
cld
pop
lea
xor
sbbl
adc
inc
sbb
enter
xchg
mov
lods
int
mov
data16
dec
stos
pop
in
xchg
xor
arpl
ljmp
dec
das
out
popf
scas
mov
sbb
data16
loope
mov
stos
xchg
scas
push
pusha
inc
mov
cmpsb
dec
mov
imul
xor
stc
jo
cmp
test
pop
arpl
js
or
mov
test
sahf
xchg
in
xchg
loop
insb
cmp
xor
test
incl
cmpsl
jo
adc
leave
add
xor
in
in
xor
fiaddl
pop
outsb
or
lea
fcmovb
mov
sbb
sbb
push
test
xor
xchg
push
dec
cmc
push
nop
push
fsts
sbb
addr16
repz
out
enter
cld
pop
das
pop
fwait
popf
subl
outsl
mov
adc
sub
jne
popa
in
in
mov
add
mov
fldl
fdivs
sbb
dec
push
cmp
pop
cs
push
mov
pop
add
imul
or
add
ret
jns
ss
scas
outsl
add
dec
push
fs
mov
ret
jb
testb
gs
in
mov
push
pop
or
add
test
or
mov
add
test
daa
stos
cmpsl
and
cmp
out
mov
icebp
xor
hlt
or
loop
or
cmp
into
add
outsb
in
cmp
lock
es
sahf
jbe
pop
inc
ret
inc
xchg
add
jns
dec
pop
pusha
in
inc
cli
sahf
jecxz
push
stos
test
je
outsb
push
xor
dec
jns
lcall
out
jecxz
mov
in
and
and
in
jns
test
rclb
dec
or
mov
xor
or
movsb
das
pshufw
jbe
inc
sbb
aas
add
mov
cmpsb
or
ja
lock
fwait
adc
arpl
sbb
xchg
int
repz
dec
pop
out
leave
fsubrs
add
jp
xlat
cltd
call
xor
lret
std
aad
fwait
decb
cs
xchg
loopne
push
popa
mov
jle
aaa
cmp
adc
inc
in
jecxz
cmpl
push
imul
push
repnz
jl
pop
sbb
jae
mov
cld
mov
or
pop
pop
ds
es
sub
mov
adc
sub
pusha
addb
enter
idivb
scas
rcrl
xor
or
popf
sbb
aaa
cmp
mov
je
mov
aad
call
push
inc
outsl
mov
and
push
hlt
mov
mov
mull
dec
into
sbb
je
add
xchg
std
movsl
repz
jnp
subb
aaa
add
ja
frstor
fwait
imul
lcall
lcall
sub
xor
outsl
std
push
pop
sub
mov
movsb
out
popa
cmp
push
mov
lods
je
ds
xchg
subb
jge
fs
adc
mov
mov
jmp
xor
in
movnti
pop
scas
addr16
insl
cwtl
mov
clc
incl
jae
stos
mov
movmskps
xlat
add
sar
lock
test
lods
fisttpl
out
jmp
pop
cld
cmp
sti
sub
movsl
daa
mov
fdivrs
add
jge
jge
sbb
or
sub
mov
sub
mov
hlt
xor
push
ja
ja
mov
mov
cmc
mov
pop
or
adc
xchg
pusha
xchg
pop
out
mov
cltd
aas
jb
push
dec
or
mov
cmc
sub
adc
mov
repz
adc
pop
add
or
pop
xchg
fs
cmpsl
psubusb
loop
in
cltd
subl
jae
pop
cmp
adc
mov
test
pop
pop
stc
fcoms
das
cli
and
pop
mov
adc
sbb
push
stos
outsl
stos
pusha
pcmpeqw
pop
xchg
xor
mov
pop
jae
mov
and
mov
adc
pop
cmc
push
lds
adc
push
sbb
out
roll
in
lret
cmp
stc
mov
jne
push
pop
leave
in
aad
inc
pop
inc
adc
push
insb
ljmp
sub
adcl
mov
out
dec
xor
xor
aas
or
mov
loop
sbb
mov
push
push
repz
xor
ds
push
push
mov
sar
iret
sub
vpslld
loopne
cmpsb
enter
cmp
into
sbb
mov
popa
push
addr16
mov
cmpsb
mov
xor
das
jp
ja
dec
mov
mov
or
sub
sub
add
adc
xchg
xchg
cld
adc
loope
imul
mov
xor
pop
incl
call
imul
shrl
mov
inc
xor
das
nop
ja
dec
outsb
arpl
daa
movsl
addr16
fstps
icebp
jnp
sub
das
cmp
int3
push
popa
aad
dec
inc
test
pop
sub
loop
mov
inc
in
xchg
add
icebp
dec
and
push
and
test
push
shll
scas
faddl
cmpb
sbb
or
mov
call
sbb
loope
mov
ficomps
sahf
aas
xor
out
div
fstpl
jns
pop
cmc
je
rcll
jns
lea
sub
or
inc
jno
shl
push
out
or
cmpsl
and
scas
cwtl
dec
jae
mov
pop
sti
or
clc
and
mov
js
or
jno
xchg
and
icebp
rcl
pop
je
push
add
iret
mov
sahf
ja
lret
icebp
push
adc
mov
addb
and
sub
outsl
jp
orb
fscale
clc
jnp
or
pop
sarb
lods
mov
push
insl
sub
sbb
jo
cmp
cwtl
das
icebp
pop
fisubl
xchg
mov
xchg
loopne
cmc
jbe
fistpll
fstpl
loop
data16
movsb
out
ret
aas
adc
mov
shrl
pop
in
sbb
dec
pop
rol
in
lods
lret
clc
nop
xor
in
stc
xor
or
sbb
cmp
aam
xor
xchg
imull
daa
lock
xor
jae
mov
or
inc
cmp
mov
clc
iret
add
aaa
mov
xchg
xchg
jnp
push
in
cmp
jnp
xchg
mov
xor
sub
inc
inc
test
rcr
mov
imul
out
and
outsb
fistpll
scas
and
idiv
insl
adc
push
orb
adc
jecxz
test
ljmp
mov
bound
test
ret
fiaddl
data16
mov
adc
popf
roll
push
mov
mov
cld
mov
stos
popf
push
and
pop
xchg
call
div
push
mov
in
or
fucompp
cmpsb
ja
push
pop
sub
bnd
mov
or
das
adcb
int
sub
sti
lods
rcl
shufps
push
push
add
ret
and
xlat
sti
adc
subl
mov
push
fs
xlat
in
push
mov
jne
and
cmp
mov
shl
je
leave
push
lcall
mov
cmp
int3
jmp
adc
xor
lock
dec
and
lods
lret
scas
xchg
inc
lahf
repnz
in
or
addr16
mov
loope
pop
push
test
cmovnp
sbb
adc
es
push
cs
or
int3
mov
add
adcb
pop
aad
dec
fstpt
mov
repnz
aad
jns
mov
xchg
cmp
mov
adc
or
int
xchg
mov
leave
dec
xchg
inc
adc
xchg
xor
mov
stos
subl
lock
gs
sub
and
pop
rclb
jno
xchg
jge
xchg
mov
adc
xor
outsb
mov
push
push
pop
push
sti
pop
fadds
arpl
mov
lock
repnz
jo
cmpsl
push
add
jmp
sarb
add
sub
outsb
adc
addr16
mov
inc
iret
inc
aad
mov
cmc
loope
dec
test
pop
cmp
add
insl
add
hlt
rcll
lods
xorl
cmp
shlb
or
mov
xchg
lahf
cli
mov
push
arpl
or
pop
mov
or
mov
cli
xor
and
aad
mov
lcall
or
ss
mov
stos
test
pop
daa
add
and
cltd
adc
orb
rorl
or
adc
insl
cmpsl
fdivrl
pop
sub
out
sub
stc
fxch
mov
mov
mov
cmc
fwait
add
push
lret
jge,pn
cmpsl
test
repz
leave
jb
roll
ret
ljmp
fwait
and
leave
out
and
inc
or
lods
or
push
cmp
cmp
pop
inc
test
pop
inc
xchg
rcrb
xchg
sbb
mov
xor
mov
sbb
push
lods
xchg
pop
test
frstor
jb
out
sub
rol
mov
pop
add
adc
add
in
fcmovnbe
add
mov
enter
shl
add
rcr
mov
daa
into
dec
jno
lock
push
pop
push
aad
push
sbb
push
into
xchg
mov
outsl
mov
push
push
push
sbb
imul
stos
sub
sbb
jae
or
cmp
daa
xchg
fildll
jle
jbe
leave
xorb
pop
pop
pop
jns
test
stc
cmpsb
and
mov
das
cli
fs
inc
mov
xchg
xor
lods
shll
inc
imul
push
xchg
pop
ja
dec
push
out
mov
dec
jmp
pop
pop
fbld
push
sti
repnz
das
dec
scas
push
jae
leave
daa
scas
mov
and
sub
sbb
lea
xor
and
add
inc
push
inc
push
daa
in
add
mov
sbb
bound
pop
ja
mov
mov
add
mov
inc
adc
inc
mov
das
mov
and
and
lds
ljmp
aad
pop
dec
push
les
fsubrs
jmp
ds
rcl
hlt
push
fdivp
dec
mov
aad
lcall
dec
inc
js
popa
in
into
jo
pop
jb
mov
bound
jmp
insb
inc
mov
out
jne
stos
inc
xchg
cs
mov
scas
jecxz
push
pop
sub
cld
repnz
andb
stos
popf
repnz
adc
pop
jg
fucomp
sti
jecxz
sbb
mov
in
mov
sbb
sbbl
xor
arpl
sahf
lret
mov
outsb
add
sbb
cmp
leave
sbb
test
imul
sub
jne
cmp
out
ss
enter
xchg
or
ds
add
push
inc
adc
daa
outsl
fisubl
xor
mov
clc
or
push
pop
lahf
repnz
aas
call
jbe
jmp
cs
into
xchg
decb
cmc
fs
movsb
gs
pop
fists
lahf
mov
nop
cmp
outsb
sbb
push
jecxz
gs
jae
add
in
mov
mov
jns,pn
or
loopne
movsb
jb
sub
pop
jb
std
das
in
lods
add
jae
jns
xchg
dec
lods
jp
rorl
pop
mov
xchg
sti
ficoml
cld
cmp
pop
subb
xchg
cmp
cmp
mov
mov
aam
ss
jge
inc
fadd
in
push
test
daa
cs
add
cmp
pop
inc
cmp
shl
add
lock
cmpsl
mov
jl
sahf
cs
clc
incb
push
cmpsb
daa
adc
repnz
pop
jbe
frndint
pop
vmovsd
and
sbb
call
movsl
ss
sub
or
sbbl
push
rcrl
mov
loopne
mov
in
push
fabs
imul
mov
mov
and
xchg
mov
mov
push
daa
repnz
xchg
jge
mov
mov
jl
inc
sbb
aad
cs
out
jl
scas
aam
in
push
fucomip
mov
adc
and
pop
dec
sub
das
add
xchg
iret
add
fistpll
pminub
rol
andb
push
push
pop
jle
jno
ja
fists
jb
mov
add
repnz
arpl
xchg
and
aad
sti
inc
aaa
jb
test
or
mov
jb
xor
leave
dec
hlt
and
and
aas
xor
sbb
cmp
movsl
jecxz
hlt
lahf
mov
mov
pop
or
lods
imul
xchg
xchg
push
xor
pop
mov
out
adc
push
popa
and
mov
dec
ljmp
adc
adc
push
or
adc
push
mov
jbe
or
or
cmpsb
fcoml
dec
dec
movsl
inc
cmpsl
adc
jo
int3
stos
add
mov
movsb
ja
lods
in
imul
inc
jmp
rolb
push
fwait
mov
ret
into
pusha
adcl
pop
jb
ret
rcrl
sub
inc
decb
int3
add
sub
rcrb
jbe
std
jno
mov
and
ret
xor
inc
and
stos
je
mov
mov
pushf
ljmp
dec
jmp
mov
pop
movsl
cli
push
jbe
aas
adc
fistpll
mov
scas
aad
lea
test
mov
mov
jno
xor
push
mov
dec
lods
scas
add
cmp
inc
xchg
jbe
pop
pop
push
push
adc
out
test
push
loop
xchg
fdivs
repz
les
sbb
lret
xchg
int3
pop
mov
or
pop
cmp
ret
jb
push
stos
sub
icebp
gs
mov
mov
mov
inc
mov
add
insb
ret
scas
movsl
dec
adc
stos
cmp
sub
into
das
dec
sarb
jns
shlb
pusha
scas
packuswb
sub
xor
scas
lret
sub
mov
add
mov
and
stc
dec
pop
jo
sahf
xor
out
xchg
xor
roll
mov
cmp
mov
dec
aas
xor
add
insb
aas
rolb
pop
lret
bound
sti
mov
mov
lahf
aam
or
lret
lret
cmp
pushl
subb
clc
into
out
jge
loop
jp
dec
in
les
scas
inc
adc
int
out
ror
andl
lods
inc
xor
or
sahf
push
pop
xorb
cmp
sbb
ds
mov
inc
jne
sub
int
pop
inc
or
lock
lahf
popa
adc
bnd
mov
inc
shll
fistps
mov
sub
sbb
mov
je
lds
roll
xor
pusha
jns
xor
mov
jb
sub
pop
sub
mov
mov
scas
scas
bound
arpl
inc
cli
xor
push
sbb
mov
jne
xor
push
neg
pushl
in
sub
stos
mov
ja
outsl
jae
addb
mov
mov
mov
out
mov
in
dec
outsb
xor
rclb
add
cmpl
xor
push
jp
jae
stos
lods
or
cmp
sbb
dec
cmp
xor
pushf
int
and
pop
loopne
mov
jmp
aad
inc
outsl
pop
test
sbb
push
cmc
mov
jecxz
push
xchg
fucomip
cmp
ja
arpl
adc
push
jge
popa
sbb
jo
jmp
adc
mov
test
mov
dec
jnp
mov
aaa
jle
sbbl
test
xchg
or
adc
inc
aas
mov
xchg
stos
int
insb
das
fdivl
loopne
dec
xor
mov
pop
mov
and
fnsave
jnp
pop
push
rcrl
pop
inc
sbb
fwait
sub
inc
cld
pop
adc
mov
dec
fbld
loopne
sub
or
xorl
pop
stc
fsubp
jmp
push
add
cltd
pop
push
push
dec
xchg
push
push
cld
sbb
pop
cmp
push
lods
bound
movsb
rorl
test
cld
dec
out
mov
xlat
subl
xchg
fwait
add
pop
push
stos
fcomi
shlb
in
lds
jns
pop
pop
xchg
pusha
xchg
sbb
jmp
neg
fcmovnu
dec
push
cltd
push
and
popa
cmpsl
add
mov
mov
jb
sub
dec
mov
mov
inc
add
xchg
std
and
or
cltd
xchg
xor
in
js
mov
sbb
fdivs
aas
jo
fnsave
outsl
leave
rclb
jbe
sbbb
into
shlb
adc
popf
adc
mov
bound
aaa
add
add
push
ds
sbb
fsts
sahf
ss
xor
addr16
sti
cmp
jmp
push
push
cmp
pop
repnz
stos
push
jle
xchg
ret
aad
jns
sbb
or
mov
xor
add
int
ror
push
repnz
lahf
inc
mov
das
shl
sbb
insb
out
rorl
inc
loope
xor
dec
iret
cmp
in
sbb
gs
xor
sub
nop
mov
xor
push
sub
mov
and
mov
cltd
xchg
mov
mov
mov
dec
mov
std
cli
push
and
cltd
cmpsl
arpl
pusha
push
mov
fistl
add
jecxz
dec
nop
pop
jecxz
clc
and
ficoml
xor
bound
mov
sub
mov
test
sub
test
mov
es
sub
in
mov
add
loop
jg
push
mov
movsl
sbb
std
cmp
addr16
int3
push
invd
or
aaa
cltd
insb
test
jne
lds
sahf
gs
ds
out
lret
fimuls
fucomp
sbbb
xchg
enter
sbb
pop
xor
test
mov
lahf
sub
mov
divl
push
inc
sub
jp
jae
dec
add
or
addr16
sbb
call
cmp
popa
mov
sbb
int
scas
dec
in
sub
das
cmpsl
movsb
lret
adc
push
mov
rcrb
mov
das
push
int3
or
mov
shrd
dec
jbe
and
addl
insb
lcall
mov
test
into
inc
add
sub
outsb
xor
rcll
scas
xor
jmp
mov
add
es
movsl
dec
ljmp
hlt
daa
sarl
xor
ss
pop
aaa
roll
xchg
mov
test
rorl
cli
adc
add
into
cmpsl
jp
xor
fnstcw
jne
ja
je
js
sbb
inc
jecxz
pop
test
inc
lock
outsl
mov
cs
bound
adc
xchg
xchg
push
jne
xor
xchg
leave
jmp
insl
jmp
shrb
add
mov
inc
cli
push
mov
das
fldl
insb
mov
iret
fisttpl
lods
pop
jb
xchg
ss
outsl
mov
shll
jp
mov
mov
xor
pop
pop
pusha
mov
add
clc
jp
mov
pop
imul
dec
adc
jg
scas
aas
iret
mov
roll
hlt
xchg
pop
sub
cmp
cmc
insl
sbb
arpl
mov
dec
sub
gs
sahf
and
adc
repnz
jl
test
add
cmpsl
and
in
mov
push
sarb
in
cld
stos
nop
mov
xor
cld
and
mov
jp
std
movsb
rclb
lods
jecxz
jns
stc
movsb
jl
xor
add
scas
push
outsb
xor
dec
or
mov
icebp
or
inc
lret
push
xor
gs
cmp
inc
adc
mov
cli
mov
mov
sti
push
cltd
fists
pushf
cmp
mov
mov
xchg
loope
stc
fnstcw
and
sbb
adc
sbb
cmpsl
xchg
add
push
movsb
xchg
arpl
bound
sbb
mov
sarb
loop
out
out
jae
nop
into
or
stc
jmp
int3
aam
dec
xchg
ds
imul
cmp
imul
add
dec
cmpsl
jp
jo
in
sti
shrb
mov
int
xchg
sub
sbb
dec
in
loope
push
pop
mov
or
out
jo
mov
daa
in
leave
dec
xchg
dec
dec
mov
icebp
aad
movsb
aaa
push
sub
mov
mov
mov
idiv
js
jge
rcl
imul
push
cli
int3
cs
insb
and
cmp
fdivrs
dec
cli
mov
push
xchg
fs
xlat
and
inc
shlb
enter
out
mov
and
gs
sahf
mov
ja
jae
out
leave
xor
imul
add
pop
fildll
xor
add
mov
mov
scas
or
sarl
sbb
pop
les
fdivr
sbb
cli
test
push
leave
add
lret
adc
or
adc
jb
sbb
bnd
and
pushf
push
in
jmp
pop
dec
sahf
jge
data16
das
xor
out
mov
cwtl
mov
scas
insb
cs
frstor
shl
xor
lods
aam
popf
xor
shrb
lods
xchg
add
call
scas
dec
popa
inc
xchg
and
das
or
xor
xor
xchg
add
fstl
idivl
cmp
inc
add
loop
jns
mov
arpl
xchg
and
cmp
jmp
dec
push
inc
stc
loop
out
rorl
cmp
mov
mov
push
and
xchg
popa
dec
lret
mov
jp
xor
jmp
data16
xchg
xor
roll
shlb
sub
push
in
popa
ljmp
add
hlt
jl
cmpsb
shrl
mov
push
xchg
or
cmp
sub
shr
cmp
loop
sahf
mov
lods
sar
scas
jg
xchg
pop
orl
inc
jmp
sbb
popf
push
into
xor
cltd
imul
cbtw
add
daa
and
add
and
adcl
insl
or
sub
dec
cmp
nop
rcl
sbb
push
adc
adc
xchg
sti
adc
inc
xchg
push
jno
arpl
jp
jae
orl
sbb
adc
stos
adc
nop
dec
mov
lcall
jmp
cmp
arpl
sbbl
add
jg
adcl
fmull
mov
imul
daa
in
pop
test
data16
pop
sub
adc
xor
addr16
xchg
mov
lret
out
mov
pop
shrl
pop
fs
pop
xchg
sti
clc
fwait
pop
adc
mov
adc
loopne
cltd
sub
sub
sbb
mov
bound
test
lret
mov
jl
or
push
leave
mov
push
fmuls
orb
xchg
xchg
push
aaa
lods
jno
dec
cmc
dec
aam
pushf
add
repz
in
xchg
rcrl
or
sub
lret
xchg
addr16
leave
xchg
daa
inc
sarb
dec
cmp
jns
push
adc
or
or
xchg
shl
mov
stos
push
arpl
mov
add
add
dec
pop
inc
lret
or
or
lret
lret
into
push
mov
jmp
xor
push
daa
movsl
push
gs
call
mov
std
mov
mov
or
sub
sbb
push
in
shl
and
xchg
fscale
and
jae
fsubrp
sarb
pop
push
cltd
das
mov
jnp
pop
dec
xchg
cli
sbb
into
add
and
lods
mov
xchg
fcmovb
cmp
and
lret
loop
xchg
shlb
xchg
out
xor
cli
cmp
mov
ds
movsl
jge
jo
les
ret
test
cli
inc
mov
nop
mov
mov
pop
std
int
lret
popa
popf
lret
clc
xchg
pop
dec
mov
push
pop
adc
lret
clc
pop
pop
jle
xchg
inc
fdivrp
mov
and
shrb
scas
ret
push
push
push
mov
mov
push
aaa
add
push
fists
pop
into
and
adc
pop
pop
dec
xchg
lret
out
sbb
fsubl
xor
mov
adc
lcall
dec
cmp
fst
jg
sub
adc
iret
out
inc
movsl
ret
out
pushf
or
scas
sub
pop
ljmp
cli
fidivl
scas
sbb
add
pop
aad
cmp
out
int
sbb
cmp
aam
jb
stos
pop
sarl
pop
in
lret
xchg
or
xchg
push
dec
sub
jo
sar
loope
gs
roll
imul
cmc
std
mov
loope
sub
cmpsb
ja
pop
lods
pop
sahf
cmc
repz
ja
inc
fdivrl
outsb
pop
pop
dec
push
int3
xorb
xchg
xchg
and
adc
stc
aad
mov
push
cmp
xor
sub
loopne
push
enter
mov
and
mov
xchg
pushf
jno
imul
jmp
gs
jae
mov
xchg
pop
push
lcall
add
lret
in
inc
popa
push
pop
sti
test
ds
mov
adc
pop
imul
jg
insl
aad
push
mov
popf
insl
inc
inc
push
xor
xor
xor
pop
adc
xchg
repnz
sti
in
adc
push
je
jae
add
jo
adc
dec
pop
rorb
into
adc
fists
jge
js
dec
stc
fsubr
jne
push
jb
pop
cmpsl
xchg
adc
adc
jne
mov
movsl
adc
sub
pushf
jne
fisttpll
mov
pop
pusha
mov
mov
into
cmp
xor
popf
add
lcall
or
push
mov
aam
xor
mov
cmp
or
lods
jne
mov
fnstenv
add
pusha
mov
push
cltd
sub
mov
sub
je
jne
add
jbe
or
and
aas
pop
aad
shll
repnz
fstpl
pop
jg
pop
lret
addl
ss
mov
pop
mov
dec
add
xor
cmc
jg
insb
icebp
divl
rcll
mov
xchg
imul
insl
push
mov
dec
adc
inc
jecxz
sbb
xchg
sbb
sbb
or
pushf
ja
xchg
loop
adc
add
es
pop
bound
xchg
outsl
sbb
daa
push
or
scas
sbb
add
test
or
lret
rcrl
add
stc
ja
mov
jns
mov
jno
mov
mov
jl
push
shlb
loope
into
cmpsl
jne
lods
data16
sub
fimuls
mov
pop
jno
mov
in
mov
fldt
sahf
lock
arpl
scas
cmc
xchg
mov
jp
repz
xchg
mov
das
in
dec
mov
and
adc
rorw
xor
xchg
cmp
clc
add
adc
push
mov
dec
jns
hlt
movsb
ficoms
in
pop
sbb
sbb
ja
and
mov
repnz
rcrl
mov
out
jnp
and
push
rcrb
loope
lds
mov
shll
xchg
mov
pop
sbb
xchg
push
xchg
loopne
sti
and
negb
in
mov
xlat
cmp
jbe
adc
mov
sarb
je
cli
je
jbe
stc
ds
daa
and
insw
lods
lret
cmp
stc
es
hlt
jae
jno
add
xor
pop
pusha
mov
cmp
mov
xchg
out
les
cmp
pop
mov
movsb
push
xchg
mov
test
mov
dec
cmp
test
cmp
push
ret
cmpsl
sbb
jne
xor
xchg
test
sbb
sbb
aad
insb
leave
rorb
int3
dec
mov
cli
scas
fisttpll
dec
or
inc
jg
std
push
dec
mov
gs
adcb
mov
clc
cmp
push
je
sub
pop
add
ljmp
ja
lea
roll
xor
mov
cmp
sbb
cmpsb
mov
jns
xor
adc
jmp
and
clc
xchg
xchg
fildll
sub
or
sahf
inc
mov
iret
out
mov
jmp
gs
mov
fdivs
sub
mulb
mov
shlb
shlb
sub
mov
cmpsb
dec
jb
adc
cmp
adc
inc
call
in
or
ret
cli
mulb
mov
aaa
and
repnz
hlt
mov
or
pop
cs
xchg
push
pushf
vmread
mov
rcrl
adcl
adc
push
fisubrl
movsb
icebp
outsb
aas
mov
daa
dec
or
test
movsb
aad
subb
adc
xchg
mov
or
aaa
xor
ret
push
xor
inc
lods
js
mov
pop
dec
int3
xor
cmp
std
add
xchg
fmul
cmpsl
dec
out
lahf
cwtl
cmp
cmp
add
scas
out
arpl
mov
aas
jnp
sbb
mov
cmp
sbb
jno
xlat
cmp
pop
add
sbb
fs
mov
or
sbb
jb
lock
cmp
scas
jnp
mov
and
mov
pop
enter
jae
push
inc
pop
jo
or
adc
mov
and
sbb
inc
bound
nop
es
push
fstps
cld
xor
cmc
jno
dec
xchg
and
adc
stos
jbe
adc
cmpsb
cmp
adc
lahf
sub
lods
je
fisttps
or
push
xchg
aam
sbb
pop
ljmp
sti
cmp
cli
jg
adc
pop
add
xchg
ss
jp
push
lret
test
push
hlt
fnstenv
and
dec
cmpsl
lods
or
push
test
movsb
pop
bound
leave
add
mov
imul
dec
stc
out
xor
popa
sbb
or
sarb
int
mov
push
mov
cmpsl
mov
ret
aam
inc
leave
mov
pop
push
jp
mov
dec
adc
pop
sub
adc
outsb
js
xchg
inc
scas
iret
sbb
mov
jno
mov
mov
xchg
outsl
mov
cmp
xchg
sbb
mov
mov
pop
push
loopne
mov
jmp
stos
lret
jecxz
adc
ljmp
lcall
cld
test
or
das
sbb
movsl
fcmovnu
sub
iret
clc
add
mov
mov
add
sub
xchg
stos
aam
out
mov
mov
rep
mov
cmpl
adc
xor
adc
mov
or
add
cmc
pop
adc
cmp
mov
xor
ret
push
xchg
cs
cmp
insl
imul
sub
mov
fs
cld
outsb
push
dec
mov
das
in
in
aas
push
cmpsb
cmp
aas
cli
cltd
in
repnz
push
test
loop
andb
les
ret
ljmp
add
arpl
cwtl
loop
jno
add
imul
test
shlb
bound
sub
sub
mov
inc
leave
xor
sub
push
iret
leave
mov
lods
insb
movsl
dec
sahf
inc
mov
out
mov
pop
mov
push
mov
arpl
es
jecxz
adc
dec
fstl
xchg
mov
lods
clc
xchg
mov
pop
inc
xlat
mov
pop
test
sub
jbe
xchg
clc
sub
filds
addb
xchg
test
lahf
push
or
into
pop
test
lcall
mov
mov
push
test
cmp
stc
mov
xor
lret
pop
int3
dec
pop
imul
sbb
fiadds
mov
jmp
loopne
sbb
clc
jbe
dec
inc
adc
push
decb
and
fwait
test
cwtl
inc
aam
repz
es
insl
popf
jp
sbb
mov
clc
xor
sahf
nop
cmp
cmp
cmpsb
daa
jns
idivb
or
pop
xlat
in
cmp
xor
push
push
jae
fldcw
pop
adc
add
xor
mov
adc
pop
incl
xor
ja
or
cli
xorb
mov
lahf
sub
fnstenv
xchg
xor
add
loope
dec
lahf
xor
sahf
add
mov
std
iret
shll
push
inc
sbb
xchg
loopne
mov
filds
lds
push
ds
in
jns
inc
mov
push
mov
push
adc
aad
mov
cmp
mov
push
or
lahf
adc
adcb
mov
sbb
cltd
fisttpll
loopne
push
inc
sub
cmp
push
arpl
cmp
jb
cwtl
and
cmp
leave
frstor
push
insl
jnp
dec
xor
jg
jmp
xor
jmp
mov
xlat
or
xchg
mov
jbe
int3
lea
cmc
lods
dec
push
mov
and
in
outsl
out
jecxz
mov
out
int
das
dec
std
leave
add
mov
call
xor
pop
mov
test
scas
outsl
pop
fwait
mov
inc
xchg
mov
testl
fstpt
and
out
and
push
pop
jo
push
mov
pop
and
jne
adc
push
out
jg
inc
mov
fcom
mov
xchg
incb
and
mov
negb
pop
rcrl
inc
bound
gs
cwtl
mov
mov
sub
stos
cmp
cmp
test
or
decl
adc
sub
into
or
lcall
cmpsl
aas
shl
mov
rclb
test
icebp
adc
shl
in
mov
sbb
adc
mov
add
jg
fwait
shrb
mov
jg
gs
gs
adc
cmpsl
adc
mov
push
lods
xor
push
daa
pop
push
clc
nop
mov
test
sub
inc
lahf
call
decb
les
xchg
mov
cld
xchg
jbe
add
and
jmp
mov
inc
sbb
add
mov
inc
and
loop
iret
iret
xor
cmp
jmp
movb
adc
shl
sub
mov
rorb
test
cmpsb
push
xchg
daa
stos
and
fwait
neg
adc
decl
cmp
pop
mov
push
mov
push
xchg
mov
cld
fld
pusha
push
pop
sbb
sbbl
into
mov
jo
arpl
sub
xorb
test
or
mov
push
lea
cmp
xchg
push
sub
popf
xchg
add
or
lcall
shrb
imull
adc
push
jl
xchg
and
pop
mov
cmc
xchg
push
xchg
xlat
push
popf
test
leave
xchg
xchg
in
sub
adc
sti
add
cmc
jg
jbe
jne
dec
xchg
jns
adc
sbb
lds
scas
aam
mov
or
push
aas
mov
or
mov
pushf
in
mov
fadds
lods
xor
lods
movsb
mov
dec
inc
add
xchg
gs
xlat
mov
loop
push
adc
inc
mov
sub
test
test
popf
stos
sub
loopne
scas
add
clc
cwtl
mov
rclb
popf
pop
iret
push
popa
xor
scas
pop
outsl
aam
sbb
pop
mov
pop
sbb
mov
cld
imulb
jno
icebp
jne
dec
inc
ficoms
pop
fbstp
adc
pushf
jbe
mov
jl
stos
gs
sub
or
cltd
sub
push
and
sub
xchg
sub
inc
xor
lds
mov
inc
xchg
ss
mov
icebp
push
dec
ud2
cli
sub
in
loope
ja
add
jbe
mov
mov
cmp
mov
mov
cli
cmpsl
cmp
adcb
inc
testl
cmpsb
enter
mov
mov
cmp
xlat
and
adc
dec
push
cmp
sub
mov
push
jns
aam
stc
fs
sub
sbb
jecxz
xchg
movsb
jbe
and
cli
mov
mov
ss
xor
dec
movsb
sbbl
es
fs
cmpsl
jmp
pcmpeqd
imul
sub
rcrl
das
nop
and
negl
or
mov
jnp
js
lock
pop
fildll
cwtl
rcrb
mov
dec
rcrl
lret
push
mov
jnp
jg
mov
jnp
mov
dec
out
cmc
pusha
fistpl
cmp
in
dec
fstps
push
shlb
fisubl
jle
sbb
push
test
xchg
mov
dec
in
adc
fcompl
mov
pop
rorb
adc
mov
test
xor
sub
scas
and
mov
cmc
mov
pop
sti
cmp
pop
dec
add
inc
push
fdivl
fstps
mov
pop
xchg
jbe
arpl
lds
ja
movsl
jno
outsb
dec
jl
jns
out
pop
or
xor
insb
and
push
or
jecxz
jl
mov
or
mov
adc
mov
push
mov
add
sbb
rclb
xor
add
xchg
fbld
jns
pop
and
mov
ja
cmp
add
insl
adc
push
mov
sbb
cvttps2pi
into
insl
insl
loopne
stos
rcll
das
jmp
dec
jne
dec
or
rol
aam
clc
ldmxcsr
aad
add
data16
repnz
sahf
mull
pop
push
sti
pop
mov
mov
inc
mov
xchg
loope
mov
les
dec
push
stc
cmpsl
ja
popf
xchg
or
rorb
adc
jb
out
mov
repz
mov
jns
fwait
cmp
sbb
rol
mov
imul
mov
sub
or
cltd
enter
mov
mov
inc
xor
dec
xchg
mov
in
dec
dec
pop
or
scas
nop
xor
and
pop
sbb
cmpsl
push
lock
dec
cmp
push
push
and
push
cmp
aas
lock
fwait
or
push
ja
mov
fiadds
add
sub
and
enter
cmpsl
test
int3
push
xor
jno
push
ljmp
mov
and
outsl
int3
and
pop
cmpsl
and
fwait
xor
or
add
out
xor
mov
mov
std
pop
pushf
int3
daa
mov
push
xchg
and
inc
inc
jnp
lods
jg
xor
push
lods
cmpsl
xchg
movsb
sbbb
jae
push
pop
and
jg
test
adc
pop
shrl
xchg
inc
or
sbb
sub
lcall
das
insl
push
jb
popf
xchg
rcrb
push
pop
pop
movsb
cmc
std
orb
shl
int
mov
push
mov
push
stc
or
inc
mulb
repz
ret
or
fcompl
test
xor
pushf
mov
inc
sti
xchg
mov
leave
sub
inc
xchg
xor
out
paddsw
shlb
dec
and
dec
and
mov
in
and
or
cmpsb
mov
mov
mov
je
inc
test
lds
push
push
xor
stos
xchg
stc
mov
fcoms
dec
in
cli
pop
out
push
push
loop
sarl
int
jmp
ret
fcompl
outsl
dec
clc
cmp
push
mov
test
push
test
xor
mov
sbb
xchg
les
pop
sub
out
pop
sti
jnp
cmp
loopne
aas
aaa
cltd
clc
xchg
scas
xchg
orl
push
negl
or
hlt
inc
ds
mov
jle
sbb
jg
or
data16
cmc
cmpsl
lret
push
rol
jmp
arpl
roll
ret
insl
xor
sub
adc
sub
fsubrs
xlat
sub
loopne
jecxz
mov
outsb
push
jno
test
mov
out
cld
test
or
push
in
sbb
inc
lahf
pop
shll
dec
movsb
mov
jp
sub
and
jne
pop
xchg
cmpsb
in
cmp
fdivs
add
rcrl
jle
lds
movsl
loop
out
or
pop
imul
mov
mov
cmp
push
inc
xor
lea
in
add
sub
cmp
mov
and
and
and
lods
mov
test
jns
push
out
mov
popa
pop
fidivrl
insl
jo
lods
leave
lds
mov
and
xchg
sti
dec
test
sti
adc
and
cmpsl
adc
test
outsb
aad
inc
inc
xchg
pushf
mov
orl
iret
mov
loopne
push
mov
dec
adc
leave
sub
pushf
test
fcomps
push
mov
test
jmp
jnp
xchg
xor
jae
clc
xchg
mov
push
adc
in
test
jl
pop
or
pop
adc
jnp
dec
rclb
cli
out
fisubrl
sub
test
leave
jbe
pop
mov
xorl
mov
lock
cltd
pop
outsl
iret
lods
loop
and
inc
sub
aas
je
mov
sarl
xchg
pop
notl
push
out
xchg
push
inc
pop
outsl
push
out
inc
test
push
lahf
sbb
adc
mov
xchg
std
fst
repz
sbb
iret
and
out
or
aad
fs
mulb
in
inc
jge
lea
mov
adc
orb
jge
xorl
icebp
sub
jb
ficoms
sbb
jecxz
mov
and
push
jge
test
mov
xor
mov
add
xchg
lahf
xor
pop
xor
mov
cmp
sahf
sub
push
mov
inc
fcomip
jnp
lods
inc
in
push
aas
push
das
pop
lret
pop
outsb
sub
mov
and
add
and
jge
scas
pushl
sahf
out
mov
pop
jle
mull
cmpsb
sbb
out
lea
push
xchg
loop
movb
dec
xchg
cmp
negb
lea
int
int
ljmp
shrb
test
pop
jno
nop
xlat
sbb
xchg
mov
cmp
pop
xor
pop
pop
jo
out
adc
push
ret
cmpsb
pop
mov
inc
inc
push
xchg
cltd
mov
push
scas
int
addb
mov
add
and
mov
pusha
cmc
stos
dec
pusha
cmp
scas
stc
cwtl
mov
ja
sahf
dec
or
pop
push
adc
dec
xor
aad
cld
out
roll
add
inc
xor
sti
mov
jnp
in
xchg
fucomi
mov
mov
adc
std
adc
icebp
cs
pop
sbb
pusha
xchg
rcll
mov
adc
fwait
sbb
xchg
dec
and
pop
push
lret
fs
out
andl
jecxz
das
daa
mov
push
dec
test
fildl
aaa
jge
inc
lea
out
sub
add
jns
in
pop
adc
push
pusha
ret
rol
mov
loopne
jmp
ja
sub
dec
sbb
pop
pop
ljmp
mov
daa
dec
mov
push
xchg
mov
inc
dec
aad
bound
gs
fists
pop
push
test
sbb
and
lea
xrelease
add
xchg
cld
push
fbstp
repnz
in
in
fnstsw
jmp
cmpsl
fcomps
sub
das
jp
stc
in
popf
mov
xchg
cld
add
imul
mov
jns
daa
data16
sub
mov
adc
add
nop
lock
insl
rcll
cmpsl
cli
nop
fsubp
ljmp
mov
cmc
mov
mov
mov
arpl
xor
mov
js
sbb
outsb
stos
lea
xchg
sbb
jbe
jo
pop
iret
mov
or
aaa
push
xor
cld
add
fistpll
lods
insb
sbb
fiadds
faddl
and
fisubrl
jecxz
mov
mov
mov
out
dec
dec
push
arpl
icebp
fwait
pop
loopne
ret
cmc
cmp
jmp
adc
repnz
cmp
movb
and
jmp
push
and
lds
sbb
fldt
jl
call
and
sahf
fwait
mov
dec
movsb
xor
stc
or
cmpsb
jnp
je
and
iret
call
dec
push
outsb
adc
cmp
pop
add
stc
adc
hlt
sub
cmc
rolb
or
sbb
int3
cmp
rclb
mov
mov
movsl
mov
insl
mov
jne
hlt
adc
loop
inc
mov
jb
nop
xchg
pop
scas
movb
cld
mov
xchg
outsl
leave
inc
test
mov
adc
ret
es
pop
adc
jge
sbb
loope
mov
pushf
je
pop
repz
ds
bound
lcall
fwait
outsb
in
cmpsl
outsb
xor
data16
js
shl
in
fimull
mov
or
lock
enter
cmp
push
out
dec
push
pop
sub
ret
imul
cwtl
or
imul
imul
jae
adc
sbb
mov
movsl
lret
shll
rep
out
add
mov
addb
ret
xor
inc
repnz
mov
sbb
insb
dec
aas
xor
adc
test
sub
hlt
jl
add
test
sbb
out
into
adc
fcoms
sub
daa
mov
lea
loopne
inc
out
push
adc
andl
lock
mov
or
sub
cmp
and
mov
mov
dec
dec
stos
icebp
icebp
mov
aam
xchg
and
dec
pop
rep
fdivrl
cmp
bnd
pop
push
push
das
sub
xchg
shl
popf
pop
sub
mov
dec
test
lcall
jmp
mov
popa
pop
xchg
lret
sub
push
mov
jle
notl
cmp
and
inc
ja
fldenv
push
pop
cmp
ds
dec
push
leave
int
es
sub
xchg
dec
inc
iret
nop
inc
or
inc
fstpt
decb
orb
sub
std
into
xchg
insl
ret
outsb
jne
daa
in
cmc
jae
jecxz
ds
ret
sti
clc
das
jecxz
lods
stos
popf
ret
ljmp
jnp
inc
in
cmp
popa
scas
sbb
push
mov
js
mov
mov
pusha
pop
lds
loop
fdivrl
jg
cmp
lahf
mov
or
push
fldt
or
sbb
mov
lock
push
or
ret
mov
mov
enter
lods
outsl
mov
adc
dec
iretw
mov
xor
daa
sub
lcall
mov
cli
ss
in
xchg
adc
dec
inc
xor
inc
int
lods
in
add
test
shl
movsl
popa
pusha
loope
cmp
les
cmp
mov
pop
sub
jno
leave
mov
push
stos
sbb
js
pushf
loopne
stos
popf
dec
jp
pop
lahf
sub
add
imul
repz
mov
cltd
pop
hlt
cmp
jb
stc
fiadds
inc
add
outsl
mov
jae
pop
push
mov
popa
imul
icebp
push
add
pop
inc
insb
cmp
ja
adc
out
popa
inc
lret
data16
call
xchg
cld
test
sbb
jno
adcb
inc
and
xor
adc
push
popf
or
or
mov
push
mov
sub
jae
push
adc
mov
fwait
pop
sbb
nop
mov
or
pop
mov
rcr
jne
adc
fidivs
xor
and
mov
xchg
push
push
roll
stos
lods
dec
out
push
dec
fs
inc
pop
out
pop
scas
loop
mov
xor
pop
pop
dec
dec
and
pop
xor
jns
inc
jecxz
in
aam
stos
pop
out
add
cs
and
fsubl
mov
pop
lock
or
test
lahf
xor
pop
call
aas
mov
xor
or
add
repz
and
std
cs
mov
sti
jmp
and
sub
shll
adc
inc
insl
cltd
pop
fildl
adc
mov
mov
and
xlat
push
pushf
pop
test
adc
push
fstl
xchg
inc
add
mov
mov
adc
dec
repz
fwait
sbb
stc
cli
dec
int3
inc
xor
lcall
in
push
xor
xor
dec
in
xchg
push
data16
cmp
adc
adc
inc
xchg
push
sbb
pop
out
adc
jp
or
add
cmp
ss
rorb
dec
sub
adc
inc
fisubrs
int3
mov
imul
push
push
imul
or
shlb
filds
jo
jne
outsl
mov
test
sub
dec
mov
scas
dec
add
or
popa
jno
xlat
dec
fidivl
mov
jae
mov
push
xchg
cmc
or
sti
and
daa
insl
jno
cltd
enter
or
push
mov
push
and
enter
sbb
repnz
sub
inc
mov
aas
xor
adc
lea
dec
mov
in
fcomp
divb
dec
xchg
mov
sarl
mov
test
jns
lds
xchg
or
repnz
push
push
sub
jne
aaa
and
push
xorps
subb
sub
sbbl
lahf
mov
sub
lcall
jae
xchg
popa
dec
mov
adc
outsl
inc
mov
sub
pop
jae
ficompl
imul
popa
mov
test
aam
ret
neg
clc
jg
fs
in
pop
xchg
jmp
stos
aad
cwtl
mov
xchg
loopne
xor
movl
pushf
or
ds
or
flds
cmp
xor
jbe
and
pusha
mov
xor
subb
imul
and
jge
fdivl
mov
sbb
pop
pop
pop
xchg
adc
int3
sbb
int3
lods
jb
stc
mov
pop
jb
and
push
mov
sbb
ficoms
lods
icebp
pop
mov
cltd
shrl
mov
das
pop
push
out
fwait
pop
in
jno
out
mov
es
xchg
add
xchg
jne
push
or
dec
fdivr
sub
popa
jns
mov
add
cmp
clc
mov
and
sbbb
je
in
pop
mov
sub
push
lds
xchg
xor
fistpl
js
fbld
aaa
std
jno
bound
fwait
cmpsb
outsb
aas
jmp
sbb
xor
sar
leave
add
fs
mov
mov
pop
ja
repnz
test
das
insb
subl
les
repnz
orl
stos
sub
xchg
sub
scas
or
xor
ja
pop
mov
jo
stos
repz
adc
jecxz,pn
jl
int
das
out
sub
cmp
sub
adc
and
mov
jle
mov
adc
cmp
aas
mov
dec
movsl
adc
cwtl
out
pop
jns
cmpb
std
jmp
stc
roll
mov
jg
push
cmp
mov
out
or
stc
out
lock
or
xor
int
and
ss
push
fucomi
outsl
cs
jecxz
xchg
fwait
mov
pushf
jns
adc
icebp
ds
repz
cmp
sbb
xchg
pop
pop
push
add
aaa
daa
shrl
jmp
xor
xor
inc
mov
enter
addr16
and
popf
inc
iret
popa
xor
dec
ds
bound
or
and
test
fnstsw
pop
cmpsl
pop
js
sub
push
js
xor
imul
cltd
jge
pop
test
mov
loope
in
dec
neg
ret
inc
push
dec
mov
icebp
scas
imul
in
jp
xlat
mov
sbb
add
js
ss
jno
rol
mov
decl
xchg
stos
jns
sub
add
addr16
bound
test
adc
pop
lods
jno
lods
insb
pop
scas
jb
push
hlt
pop
cmp
and
sub
mov
sub
or
mov
jae
push
push
dec
daa
adc
js
sbb
adc
lea
sti
xorb
sar
mov
cmp
mov
jb
in
mov
mov
sub
xor
mov
test
iret
dec
test
daa
sub
arpl
dec
mov
data16
int
lret
cli
xor
dec
ds
sub
inc
sti
xor
mov
out
lret
rcrb
lock
loope
sti
icebp
mov
scas
dec
sti
mov
inc
rorl
aas
jne
mov
fiaddl
sbb
xor
mov
or
xchg
add
dec
dec
xor
pop
jp
jnp
mov
ret
insb
mov
fiaddl
adc
adc
shlb
daa
dec
push
js
xor
lahf
add
mov
sub
cmp
lret
pop
lock
pop
ss
xorl
dec
mov
inc
int
test
nop
lea
pop
lock
and
sub
sbb
cmc
hlt
mov
bound
xchg
push
xor
sub
cmp
orl
lret
adc
imul
fdivs
cmc
dec
jno
jne
adc
aam
scas
cld
sbbb
cmp
mov
das
sub
and
insl
xchg
in
shll
mov
ret
inc
adc
xchg
lods
pop
xor
lea
daa
push
and
xchg
cmpsl
pushf
fmull
inc
add
fcmove
inc
and
inc
adc
aam
pop
jae
xor
leave
sub
push
loop
cmp
insl
fcoml
cmp
popf
xor
mov
push
and
xchg
imul
mov
xor
inc
add
add
xchg
subb
sbb
insl
hlt
mov
or
fbld
jmp
sub
popf
aaa
jge
addl
leave
into
pop
jb
insb
mov
inc
scas
inc
ja
cwtl
scas
cs
ljmp
add
add
call
jnp
push
bound
push
outsl
cmp
xor
jno
push
or
adc
fists
xor
pop
cmpsb
pop
aam
adc
mov
jg
dec
clc
mov
and
pop
push
sbb
lea
cmp
ret
dec
addr16
sbb
xlat
cli
rorb
loope
push
and
cmp
push
outsl
xchg
mov
xlat
mov
jle
jne
xor
cld
imul
sub
jmp
fdiv
mov
scas
sub
cmpsb
mov
push
mov
int3
out
imul
sti
or
mov
xor
lret
dec
add
jg
inc
xchg
mov
pop
jecxz
test
cmc
scas
push
jmp
rcrb
xor
mov
aad
jp
fcomps
push
loope
lock
add
lcall
outsb
inc
es
xor
in
mov
loopne
in
es
mov
jae
mov
scas
cmc
mov
sbb
jg
add
or
sar
add
mov
and
cwtl
cli
test
dec
cli
mov
cmp
or
jge
mov
icebp
lret
fsubp
cmp
xchg
xchg
sti
cmp
and
xchg
xor
mov
lret
cli
add
fdivs
push
sbb
aad
jo
gs
pop
lret
lea
inc
ljmp
out
lret
in
lahf
xchg
inc
fistpll
inc
jbe
mov
sar
in
sbb
cltd
mov
scas
mov
repnz
sti
sub
test
xor
int3
rcll
pop
mov
mov
lret
cmp
scas
std
mov
arpl
pop
lock
jnp
sbb
jle
dec
jecxz
pop
imul
insl
mov
scas
adc
jnp
jne
insb
sub
adc
je
js
out
stos
scas
push
cmpsl
ja
lods
dec
sbb
lock
out
test
and
outsb
in
mov
push
test
cmp
cmp
jbe
mov
mov
xor
sahf
mov
jge
data16
push
xchg
push
and
nop
mov
push
sbb
inc
call
inc
xorl
test
lods
inc
mov
ret
dec
fs
mov
fs
in
fsubl
xchg
in
out
add
dec
push
daa
std
pushf
inc
ja
imull
loopne
dec
mov
mov
hlt
sub
sahf
lds
stc
adc
andl
jge
out
inc
outsl
or
loopne
xchg
dec
xlat
ds
inc
and
jns
fwait
std
int
pop
int3
fnstcw
jl
jns
loope
dec
sub
repz
cwtl
mov
adc
out
mov
mov
sub
xor
xchg
push
out
and
inc
rorb
lea
xorb
pop
test
shll
icebp
pop
add
shlb
pop
inc
mov
lea
test
mov
lcall
sahf
scas
xchg
pop
pusha
leave
mov
pop
in
xchg
fstps
stos
data16
push
stos
mov
bound
add
test
cld
xor
jo
popa
or
fwait
or
mov
jcxz
ret
addr16
jbe
rcrb
cmp
lods
xchg
lcall
loopne
lds
ror
repz
pop
inc
mov
cmp
fs
call
inc
loopne
push
mov
cmpsb
imul
pushf
mov
or
lods
adc
or
lret
fidivs
test
sbb
or
repnz
fidivrs
cmp
scas
mov
push
xor
int
or
addr16
dec
dec
push
lock
loop
loop
shr
popa
test
jp
lret
notb
cmpsb
adc
ljmp
jle
mov
inc
mov
dec
mov
dec
gs
jb
lret
cli
jno
rcrb
sub
mov
ret
rcl
mov
mov
push
fistps
mov
test
sbb
mov
cwtl
jge
push
nop
icebp
mov
pop
jae
nop
out
js
push
lret
scas
jge
sbb
enter
jg
test
lods
in
mov
xor
jge
mov
xacquire
sub
pop
fwait
xchg
jecxz
jne
lcall
jb
aad
pop
cmc
push
ss
pusha
jp
sub
roll
movsl
pop
je
cmp
jne
xor
loop
and
in
sub
in
icebp
mov
stc
mov
aas
xlat
cwtl
loopne
mov
jl
icebp
roll
lea
fwait
cld
in
jge
aas
dec
test
insb
ss
mov
out
lahf
pop
insl
dec
js
loop
sub
stos
mov
mov
jl
sub
rcrl
into
sub
movsb
imul
and
cmp
jb
mov
int
xchg
cwtl
stos
mov
adc
sbb
pop
subl
lock
out
dec
imul
xchg
mov
xchg
or
xor
xor
ljmp
add
xor
xchg
dec
xchg
lea
fsubrs
scas
popf
jle
stos
cmp
movsb
sub
call
data16
mov
aaa
mov
fwait
adc
stos
inc
pop
sub
cs
ja
imul
push
mov
insb
lds
mov
lahf
loop
inc
and
test
xor
jmp
xorl
push
push
idiv
dec
enter
xor
shrl
addb
lahf
pop
loope
fsubrs
ret
rcr
shrl
adc
outsb
inc
jbe
jne
push
adc
xor
jnp
inc
cmpsb
sbb
lret
xor
jmp
frstpm(287
jmp
sub
xchg
mov
xchg
push
aam
jns
fildl
ret
and
std
pop
ss
fidivrl
mov
or
ret
push
fistpl
shlb
cmc
mov
inc
push
pop
popa
mov
data16
test
sub
xchg
mov
add
mov
ljmp
or
negb
push
testb
out
mov
jb
xchg
into
mov
aam
xlat
mov
pop
jae
movsl
xlat
or
xchg
in
cmp
mov
out
add
leave
cli
jnp
jb
cmp
mov
jnp
pushf
mov
mov
add
xlat
push
and
sbb
daa
cmp
mov
pushf
repnz
aad
mov
inc
sub
xor
xor
jmp
push
ds
notb
push
jnp
pushf
or
mov
cli
imul
jl
pop
and
cmc
jno
lods
xchg
clc
add
and
imul
sti
jbe
popf
dec
loopne
dec
mov
inc
outsb
jp
movaps
enter
call
and
hlt
daa
cmp
sti
mov
loopne
push
out
mov
push
inc
js
xor
imul
pushf
inc
pop
pusha
aas
in
push
xor
shrb
lds
movsb
pusha
adc
imul
pop
jmp
push
sbb
lock
mov
scas
ror
out
push
mov
and
in
ret
das
xchg
adc
jmp
pop
outsb
std
xchg
mov
mov
lea
adc
mov
or
int
mov
nop
sub
mov
dec
int
and
xor
jle
and
lods
mov
cmp
mov
xlat
sbb
cli
cmpsl
std
jbe
mov
mov
jbe
rorl
movsl
ljmp
pushf
cmp
into
imul
cmc
cld
sbb
pop
mov
inc
sub
push
xchg
push
mov
or
call
pop
push
mov
mov
cmp
lahf
dec
das
lods
pop
sti
cmp
mov
aam
sbb
sarl
xor
fildl
push
cwtl
and
incl
or
sbbb
out
jecxz
movsl
pop
and
add
sbb
sbb
jecxz
int
jg
mov
test
sub
dec
mov
pushf
sub
xor
and
cmpsl
adc
adc
pop
mov
insb
lds
xchg
fnsave
xor
xor
pop
sbbl
push
or
out
pop
lahf
cmpsb
and
mov
pop
inc
sub
movsb
movsb
dec
lods
adc
icebp
jbe
xchg
fwait
mov
nop
push
cmpsl
inc
bnd
mov
or
xor
push
out
fwait
dec
push
mov
bound
sub
adc
mov
mov
cmpsb
mov
dec
push
cmp
jl
xchg
fs
xor
bound
pop
mov
pop
or
add
arpl
mov
cmp
dec
pop
test
outsb
addr16
dec
xor
stc
jbe
test
sti
daa
enter
faddl
ljmp
push
jae
xchg
add
jmp
cmpb
cmpsl
fs
inc
lea
push
mov
pop
ljmp
fwait
movsl
out
jnp
add
dec
lcall
cs
or
xorl
mov
iret
stos
inc
mov
sahf
mov
mov
stc
ret
push
insb
ficoml
pushf
xchg
je
xchg
movsb
inc
fidivrs
xchg
and
push
lods
les
adc
jmp
daa
sbb
jecxz
jecxz
jl
pop
repz
cltd
mov
into
mov
aam
mov
mov
test
push
movsb
sbb
cmpsl
inc
cmc
adc
rorl
loop
pop
cmp
dec
test
pop
add
mov
gs
in
dec
iret
ret
dec
mov
adc
idivl
xchg
sub
cltd
xor
movsb
test
adcl
or
sahf
jno
sbb
rcr
stos
jmp
xor
repnz
inc
inc
xor
inc
stos
movsl
mov
into
fsubr
pop
pop
pop
aam
rcll
movl
adc
xchg
shll
sbb
cmp
mov
rcll
push
add
push
test
pop
jle
mov
test
mov
imul
jmp
pop
push
ja
sahf
pop
cmp
bound
jo
mov
pop
fiaddl
add
test
mov
call
xchg
repz
mov
shr
daa
les
idivb
jecxz
push
inc
repnz
pop
mov
fsubp
jmp
les
nop
xchg
add
shll
xchg
sahf
mov
cmp
shr
dec
ljmp
ficoms
and
mov
in
push
mov
lea
fsubrs
and
daa
xorl
int3
mov
xlat
or
push
fbld
push
in
sbb
sbb
jne
adc
lcall
sub
call
loopne
mov
adc
mov
mov
mov
and
mov
dec
addr16
data16
mov
pop
cld
sar
les
cmp
and
push
or
and
dec
pop
cltd
push
xor
lods
out
mov
cmp
mov
sub
cltd
cmp
sbb
sub
mov
lods
xorl
xchg
dec
insl
fldenv
daa
mov
jmp
pop
xor
xchg
jl
mov
mov
push
mov
sub
ja
sbb
jbe
stos
jnp
loopne
xchg
movsb
je
pop
mov
dec
xchg
out
jle
jmp
cltd
mov
bound
in
jmp
lock
repz
ret
in
mov
pop
sub
test
mov
adc
mov
inc
push
insb
and
xchg
push
mov
shlb
sub
jge
loop
or
and
testb
pop
repnz
sub
inc
xchg
push
lahf
sub
xchg
mov
and
pop
mov
jl
jecxz
out
cmp
push
cmp
aas
pushf
repz
dec
push
cmpl
fwait
scas
sbb
jle
das
in
call
dec
ljmp
jb
or
mov
shlb
sti
cmp
push
ds
pop
mov
repnz
cmpsl
in
add
cs
pop
imul
ficoml
cltd
xchg
je
cmpsb
aad
or
inc
sbb
sbb
pop
or
imul
sub
fmulp
movsb
fiadds
rorl
dec
pop
clc
xor
out
shll
pop
cmp
mov
pop
data16
stos
lahf
jmp
push
sub
push
ljmp
dec
fs
lods
sub
fisubl
dec
je
loope
mov
flds
and
push
xor
pop
mov
mov
or
add
mov
xor
aam
es
and
pop
sbb
cltd
jmp
dec
rcrb
jg
pop
push
test
mov
mov
inc
lds
ror
cli
jo
aaa
xor
test
cmp
pop
dec
int3
shll
xchg
inc
roll
add
jae
mov
sub
neg
fistpl
add
adc
jns
fdiv
push
mov
xor
mov
popf
inc
fsubp
jbe
or
push
add
add
cld
mov
test
mov
adc
je
rorl
flds
sub
jae
jo
sub
pop
add
aad
sbb
es
jp
lds
in
test
dec
lods
inc
cltd
nop
daa
jne
pop
cld
jne
in
andb
insl
sub
jno
int3
mov
push
frstor
ds
adc
mov
mov
dec
loopne
es
aam
repz
insl
adc
call
inc
jg
ds
add
clc
xorb
insl
cmc
mov
pop
faddl
mov
dec
sbb
sbb
push
xchg
push
mov
loope
pop
xor
bound
arpl
scas
bound
mov
ret
mulb
repnz
out
mov
cmp
stc
test
mov
sub
ja
pop
inc
outsl
fwait
mov
ret
sub
mov
das
sbb
fs
gs
pushf
sub
add
clc
pop
out
cli
sti
out
imul
xor
push
dec
inc
mov
roll
pop
sbb
jae
mov
outsb
test
push
xor
popf
sbb
or
xchg
jg
push
mov
add
fs
in
sahf
notb
cltd
add
cmp
or
in
and
add
jns
mov
mov
lcall
sbb
fimuls
lea
addr16
push
or
jb
mov
cmp
fwait
sub
mov
rcl
push
and
clc
dec
in
and
mov
lods
fwait
daa
sbb
int3
xchg
bound
call
jnp
xor
inc
pop
cmp
out
dec
jg
das
fcmovbe
pop
fs
mov
jns
pusha
ds
dec
add
xchg
and
push
mov
ret
mov
out
xor
out
and
repnz
add
dec
fwait
or
xor
push
xor
das
inc
sub
mov
mov
cmc
inc
mov
loopne
xchg
mov
aam
out
dec
into
sbb
pushf
popf
xor
mov
mul
adc
inc
add
dec
ja
movsb
dec
insb
push
stc
mov
cmpb
pmullw
aas
mov
add
cs
lea
fdivr
cmp
push
mov
mov
lcall
fmull
dec
aas
push
gs
cmp
test
xchg
test
or
stos
cs
jbe
ret
clc
addl
sarb
mov
cmc
jle
mov
les
jbe
jle
ja,pt
jg
sbb
jp
add
inc
inc
mov
movsl
mov
lods
xlat
cmp
lods
mov
pand
fldt
cwtl
cs
fimull
or
cmp
pop
fmull
lods
inc
jno
cli
push
rcrl
lds
ret
int
insl
loopne
cltd
inc
dec
inc
in
ljmp
gs
xor
dec
jle
gs
ret
pop
jne
out
ds
fs
fcoms
nop
fcoml
pusha
ficoms
repz
inc
push
fs
daa
arpl
xchg
cmc
in
cmp
sub
fcompl
cmp
mov
xchg
jae
insb
mov
mov
out
dec
fst
mov
mov
lret
pushf
mov
out
andb
enter
jmp
test
jbe
xchg
sub
dec
std
ror
cmc
sub
push
sahf
or
mov
ret
dec
aaa
adc
fucomi
xchg
lds
into
pmaxub
cli
adc
loope
test
mov
nop
mov
rcr
mov
adc
inc
shlb
xor
leave
movsb
xchg
jge
pop
popa
outsl
mov
jb
fimuls
fs
xchg
add
fcoms
pop
jecxz
xor
or
mov
cli
lret
mov
js
lea
mov
inc
aad
movsl
xor
loopne
jg
cmp
outsb
push
fucom
mov
sbb
pop
subl
leave
fstl
pop
and
nop
fidivrs
jmp
xchg
ret
pop
bound
xchg
les
lock
sub
push
call
push
jne
jb
mov
mov
arpl
loopne
and
stos
add
daa
xlat
and
cmc
rcr
sti
xchg
jp
or
das
inc
cmp
add
js
mov
sbb
ret
sahf
mov
outsb
pop
pusha
andb
mov
repz
add
xor
repz
xchg
inc
cld
jg
push
fcmovnbe
inc
nop
test
dec
add
rcrb
sbb
fcmovb
addl
adc
sub
mov
pusha
stos
jmp
and
mov
inc
mov
inc
xchg
inc
mov
in
mov
lea
adc
lock
mov
add
sbb
sahf
pop
ret
cmpl
sbb
cmp
xchg
popa
adc
rorb
cmp
mov
clc
in
and
push
insb
sahf
or
fstpt
das
push
test
xchg
push
pop
inc
sub
xchg
add
fs
fdivrl
xchg
fisttpl
daa
dec
jecxz
rolb
sub
cmp
scas
or
push
aad
jo
js
push
loopne
scas
scas
enter
cmova
in
iret
ret
fwait
pmullw
jmp
cmp
jl
push
mov
sub
xor
add
dec
jne
shll
lods
inc
stos
add
push
outsl
jge
nop
lods
mov
pop
dec
cmp
sbb
nop
stos
rcll
nop
ss
xchg
imul
fs
mov
cmpsb
dec
loop
nop
pop
imul
xchg
xchg
inc
adc
xchg
jae
lock
popa
xchg
sbb
stos
mov
fcmovnb
push
dec
leave
movsb
sarl
push
xor
cmc
dec
sub
clc
or
scas
in
loope
je
xchg
dec
push
pop
and
xchg
sub
pop
dec
sti
mov
into
jecxz
test
int3
inc
mov
lods
imulb
out
sbb
add
in
and
fwait
sbb
sub
popa
movsb
in
mov
lahf
inc
lret
push
in
das
in
outsl
arpl
fisttpll
psubusw
mov
sbb
lahf
test
cmc
call
xor
push
std
xchg
negl
cmp
ds
pop
mov
inc
js
jp
sbb
mov
fsubl
hlt
aad
clc
mov
dec
jbe
fwait
cmpsl
mov
lcall
mov
sbb
ret
mov
gs
aad
shlb
lret
in
cmc
push
push
jecxz
xchg
stos
mov
pop
data16
inc
das
clc
mov
adc
pop
mov
test
xor
int3
dec
jecxz
inc
out
pop
scas
pop
and
inc
out
mov
imul
insb
xchg
push
pusha
xchg
addr16
xor
xor
or
repz
and
adc
adc
xor
fsubs
pop
add
mov
push
pop
pop
add
mov
adc
out
xchg
xchg
jmp
mov
bound
pmulhw
adc
adc
or
dec
inc
push
fwait
scas
movsl
sub
and
hlt
popa
jbe
out
inc
rcrl
add
mov
sub
dec
mov
adc
nop
push
fistpll
je
dec
adc
fs
stos
inc
shl
rcrl
repz
rcll
daa
inc
dec
xchg
sarb
pop
int3
fs
inc
mov
pop
jl
inc
jae
lret
clc
xchg
inc
adc
les
addr16
mov
shll
push
rolb
fstpt
sarl
ret
dec
inc
gs
mov
and
push
jbe
hlt
dec
sub
push
movsl
or
xchg
popa
xchg
adc
scas
test
fidivs
mov
mov
push
test
push
movb
shll
call
pushf
lea
int3
and
and
or
negb
sub
pop
pop
scas
repnz
aas
in
xor
mov
push
and
jg
mov
insl
mov
mov
fdivs
push
inc
std
sub
ret
cwtl
and
mov
xorl
fistpll
push
xor
jmp
shlb
push
xor
sti
js,pt
in
repz
and
mov
sbb
mov
mov
add
jb
insl
mov
or
in
push
repnz
mov
xchg
push
inc
dec
popa
psubusw
popf
push
into
or
lock
sub
push
nop
leave
dec
mov
jb
xchg
or
add
cmp
lahf
fcmovnb
ret
jmp
fistps
testb
mov
dec
fstpt
imul
popf
pusha
add
cmpsl
in
dec
hlt
push
dec
jno
call
pop
push
pop
std
inc
mov
subl
ret
mov
shlb
jne
jnp
cs
idivl
fs
ss
push
cltd
pop
scas
adc
and
addl
cmp
dec
mov
xorl
in
lret
sbb
xor
lea
inc
push
dec
mov
aam
mov
jmp
filds
iret
sbb
and
mov
in
inc
pop
sub
pushf
frstor
lock
mov
leave
mov
ret
enter
dec
or
inc
jl
jnp
xor
lock
sbb
push
jecxz
insl
in
dec
adc
jecxz
aaa
mov
test
and
loop
inc
inc
std
push
and
xchg
int3
rep
xor
mov
jmp
into
sbb
lods
cmpsl
ja
push
movsb
dec
xor
loope
mov
lods
pop
inc
bound
in
imul
dec
in
mov
adc
xchg
and
rclb
mov
xchg
or
daa
je
cmpsl
lret
outsb
dec
inc
mov
push
mov
mov
cmpl
dec
jle
pop
loope
call
push
inc
jns
fs
inc
inc
mov
roll
add
push
mov
testb
sbb
loope
pop
push
sbb
pop
cld
inc
pop
movsl
stos
inc
rcr
or
lahf
add
ss
xor
and
fs
shr
push
mov
jbe
jbe
insl
xchg
jg
in
cmp
dec
push
popf
shl
cmp
pop
scas
mov
sbb
fld
cld
hlt
dec
and
in
idivl
cmp
daa
xor
adc
flds
iret
pop
add
xor
inc
in
sub
mov
xor
cmpsb
fidivrs
xlat
cltd
lcall
adc
jmp
mov
cmp
fldt
not
cmp
js
sar
dec
es
dec
inc
or
cmp
jmp
out
and
xor
shll
fistps
fldt
pop
xchg
into
pop
rep
xchg
das
lea
xchg
mulb
sub
adc
scas
jmp
popa
mov
imul
mov
dec
dec
call
xchg
aam
push
lcall
add
mov
enter
sbb
in
scas
pop
xlat
lret
outsb
lods
out
xchg
cmp
stos
in
sub
pop
ja
cmp
inc
lcall
mov
cld
ja
lea
xor
sbb
imul
cmc
or
jne
jo
add
out
inc
lock
insl
lds
mov
jb
push
adc
sbb
pusha
cmp
outsb
das
inc
scas
dec
or
pop
leave
pop
and
sub
rcll
out
clc
dec
stos
cmp
inc
stos
xor
xor
xchg
inc
or
xchg
mov
mov
push
fstl
leave
jecxz
cmpsb
sarl
out
jge
xchg
sbb
shl
or
jp
xor
push
and
push
inc
dec
int
popf
mov
sarb
ret
sti
push
adc
rolb
popf
push
xor
jl
rcll
jge
pusha
jmp
in
sbb
mov
sbb
inc
or
push
test
dec
repz
add
mov
inc
inc
popa
and
cmp
rorb
mov
add
inc
lea
or
cmp
mov
fs
pop
addr16
leave
rolb
or
cmp
hlt
inc
pop
push
mov
and
or
push
int
mov
push
pop
pop
lret
pop
or
xor
xchg
jnp
sti
inc
mov
cmc
repnz
cmp
mov
xchg
xchg
packsswb
mov
mov
test
test
fsubrl
std
int3
in
mov
push
pushf
and
ljmp
sub
outsl
cltd
adc
pop
addr16
push
jo
sbb
inc
cmp
in
lea
cmc
rclb
pusha
cmp
push
lods
cmpsb
fs
cwtl
sub
inc
pop
sub
lods
jg
fdivrs
xchg
pop
push
jbe
mov
mov
movsl
mov
int
fidivs
cmc
mov
pop
jl
inc
inc
mov
ljmp
xchg
adc
sbb
push
cmp
jmp
fnsave
sbb
fs
adc
push
dec
pop
mov
push
add
cmc
cmp
into
pop
cmpl
rcr
sbb
out
mov
cld
cltd
repnz
adc
cmpsb
je
xchg
fldcw
movsb
mov
les
shll
inc
cmp
mov
jo
xchg
fs
je
stc
in
repz
fwait
stos
push
xor
sub
int3
cli
outsl
loop
shl
enter
mov
inc
adc
dec
cld
sti
xlat
mov
pop
rorb
jp
and
jo
xchg
cld
loopne
aaa
shl
ljmp
addr16
enter
repz
push
xchg
fcmovne
pop
repz
test
in
push
idiv
gs
cmp
cmp
xchg
dec
call
or
dec
mov
pop
sbb
push
sub
and
mov
andl
sbb
and
ret
loop
call
or
dec
adc
lcall
dec
adc
xchg
and
lods
lret
out
inc
in
movsb
xor
jno
inc
into
aam
mov
popf
push
sbb
pusha
xor
mov
adc
cmp
push
test
or
in
push
mov
mov
xor
inc
mov
aaa
or
pop
cltd
sbb
jge
adc
testb
push
dec
cltd
dec
push
fucomip
and
xor
pusha
loope
lcall
jmp
xor
adc
pop
ss
filds
push
testl
or
pop
jmp
pop
dec
movsw
lock
xchg
or
lea
lock
ja
pop
push
ds
sbb
push
jmp
scas
hlt
stc
iret
lock
mov
dec
scas
xor
enter
cmp
push
dec
stc
adc
outsl
jl
dec
adc
jmp
sub
pusha
and
or
and
fdivr
data16
mov
mov
in
xor
mov
mov
pushf
sub
sbb
and
cmpsb
clc
xchg
xorb
dec
mov
movl
pop
xchg
sub
cmp
mov
xor
xor
es
and
shl
xor
rcrb
sub
dec
mov
sbb
cld
cmp
aas
cs
push
cmpsb
repnz
cs
mov
mov
pusha
test
cs
negb
mov
mov
push
jo
push
mov
out
out
inc
sbb
mul
inc
add
push
imul
sbb
in
dec
jl
in
mov
fistps
or
cltd
mov
inc
lods
dec
push
mull
out
add
push
call
bound
dec
cltd
pop
push
cmpsl
cli
push
sahf
pop
testb
and
xchg
push
push
aas
lcall
cltd
push
rorl
pop
loop
outsb
jg
arpl
scas
sar
outsl
insl
dec
fidivl
and
outsb
mov
xchg
loopne
inc
or
sbbb
addr16
lds
cli
push
push
rcrl
decb
cmp
xor
gs
cmp
into
leave
inc
adc
nop
insl
test
fmull
ret
aam
xor
and
int3
jl
cmc
push
xchg
imul
pusha
jne
inc
cs
call
ffree
cwtl
lea
or
icebp
jmp
and
je
push
sbb
sbb
call
pushf
xchg
cmpl
xlat
cmp
ds
sbb
in
push
jge
mov
mov
mov
jp
push
sbb
hlt
sub
sub
cmpsb
push
cli
push
nop
pop
or
clc
dec
xchg
mov
or
cmp
jb
gs
mov
cmp
shlb
or
mov
mov
dec
test
lea
mov
xchg
stc
dec
lret
cltd
push
arpl
xchg
jae
aaa
mov
mov
seta
add
data16
mov
orb
cmpb
push
sbb
cli
inc
and
bnd
mov
addr16
and
inc
push
sti
xor
sbb
hlt
pushl
aad
adc
in
jae
outsb
push
xor
fimull
fldcw
inc
jp
loope
adcl
pop
mov
jp
sbb
outsl
and
negb
test
push
and
xchg
rorb
mov
mov
jo
or
push
cmc
push
jb
lahf
ja
orb
cmp
mov
hlt
mov
dec
gs
cmc
in
push
xor
mov
and
jmp
lock
popl
xchg
cltd
mov
pop
lret
mov
ja
sub
cmp
repnz
scas
pop
xor
in
sbb
call
mov
mov
or
xor
in
xchg
movsl
incl
adc
pop
pop
sub
hlt
fcomip
insl
jnp
sub
subb
push
pop
push
out
cwtl
ss
mov
sbb
ss
movsl
sbb
fcmovbe
pop
push
movsl
bts
repz
push
in
jg
jl
jb
fstpl
dec
aas
add
inc
and
into
jbe
xchg
and
insb
insb
les
adc
pop
lret
jo
shrb
dec
lods
mov
movsl
inc
jne
das
divl
and
xchg
xor
jno
adc
outsl
ss
dec
ficompl
push
icebp
outsl
cmpl
sbb
push
movsl
cli
lret
sahf
imul
dec
and
xchg
in
bound
rcrl
jne
or
in
mov
pop
imul
xchg
sbb
test
jnp
nopl
dec
jae
leave
lds
aam
int3
test
mov
insb
ficomps
push
push
fists
xor
inc
inc
loope
out
lods
push
push
and
or
pop
add
lahf
cmp
loopne
sahf
jecxz
mov
xchg
mov
shrl
mov
leave
sbb
mov
mov
scas
sbb
xor
push
cmp
fisubrs
lock
lea
add
jno
inc
dec
lcall
into
loop
stc
aam
inc
and
mov
and
and
add
mov
sub
mov
xchg
lret
clc
mov
jl
xchg
fmul
mov
jne
dec
gs
rol
sub
aas
mov
je
sbb
adc
jb
push
cltd
lret
push
sbb
xor
or
adc
call
mov
xchg
xor
cmp
xchg
sub
mov
cmp
cli
push
nop
xchg
push
push
mov
push
setp
push
repz
lret
popa
pop
jge
lea
sarl
jecxz
mov
cmpsl
add
mov
push
sub
sbb
sbb
add
and
mov
inc
mov
nop
xor
stc
mov
fmulp
mov
jbe
dec
popa
in
fildl
or
std
push
daa
pop
ja
inc
pop
sub
pop
push
je
jg
rcr
xchg
xor
scas
jnp
cmpsb
push
imul
sbb
dec
sub
xchg
pusha
fs
cmp
ja
fisubrs
les
test
sbb
sub
cmp
mov
sub
in
sarb
xchg
and
test
jns
mov
in
push
push
enter
js
pop
inc
loope
or
push
fiaddl
xor
xor
mov
movsb
push
pushf
cmp
jle
lds
push
cwtl
and
aad
test
xchg
insl
fdivl
aad
sub
push
jo
cmp
mov
fwait
jnp
fsubs
insb
dec
and
cmp
ret
cmpsb
mov
sub
inc
sbb
cmp
jb
mov
adc
adc
and
cmp
push
adc
or
rcrl
dec
addb
dec
inc
mov
mov
in
xchg
xor
pop
cwtl
xchg
adc
xchg
cmp
bound
adc
stos
aas
mov
loopne
xchg
sub
mov
mov
lret
or
mov
lahf
cwtl
jb
test
pop
jg
pop
xor
xchg
push
cmp
lret
imul
cmp
js
fwait
pop
sbb
sbb
xchg
jge
or
jl
pop
in
jo
lret
cmpsl
mov
push
dec
stos
cld
lahf
jg
fcoml
aad
mov
icebp
mov
out
push
dec
mov
adc
push
int3
pop
mov
lock
mov
cmp
das
aam
icebp
outsb
ss
loope
mov
push
jl
jns
xor
mov
cmpl
clc
pusha
or
xchg
xor
xchg
push
fidivs
daa
cmp
jle
xor
and
inc
xchg
mov
mov
fcompl
repz
shlb
cmp
push
in
adc
mov
xor
mov
or
mov
xchg
std
dec
fwait
int3
js
mov
data16
jecxz
int3
sub
jnp
es
mov
ds
fmul
stc
or
fwait
divb
inc
xchg
hlt
ret
loopne
mov
mov
mov
mov
mov
xor
in
out
out
mov
xchg
push
mov
pop
lds
jp
pop
mov
outsb
shrb
dec
outsl
sub
cmc
imul
shlb
daa
insl
mov
das
aaa
cmpsb
cmp
pushf
fistps
sub
aas
sahf
popf
mov
sub
mov
push
adc
sbb
std
sub
mov
xadd
pusha
xlat
push
nop
mov
movsb
dec
xorl
stos
popf
bound
mov
out
fstpt
and
movsl
jle
cmp
inc
call
addl
push
adcl
dec
subb
cmp
mov
sbb
mov
imul
and
push
jecxz
stos
stc
mov
movsb
cltd
cld
pushf
adc
jb
sbb
add
inc
jge
cltd
lahf
cmpl
or
cmp
mov
mov
dec
jb
data16
mov
or
mov
or
sbb
lea
jl
js
pop
stc
mov
mov
cmpsl
pop
movsl
mul
ljmp
push
and
or
dec
dec
mov
push
pop
int
dec
inc
xlat
das
jmp
outsb
testb
push
nop
mov
adc
mov
mov
inc
loopne
loopne
jbe
mov
xchg
add
inc
fisttpl
adc
adc
repnz
mov
mov
sub
cmp
xchg
cmp
cmp
frstor
adc
push
fmull
out
jae
inc
pop
int
cmc
or
mov
in
mov
dec
dec
in
inc
movsb
sbb
repnz
mov
idivb
mov
imul
push
aad
jb
push
testb
into
mov
add
mov
sbb
xchg
jae
movsl
mov
rclb
mov
jb
outsl
cmc
shrb
andw
sub
std
fadd
sub
fwait
rcrb
sbb
dec
jbe
call
je
pop
cwtl
rcll
pushf
xchg
inc
xor
add
in
insb
xchg
pop
adc
inc
lods
fistl
inc
or
jnp
hlt
pop
in
pop
loopne
mov
sbb
les
mov
jns
aaa
lret
cmovno
mov
mov
and
ret
xchg
arpl
mov
jnp
add
lcall
inc
lret
dec
xor
fwait
dec
call
cmpsb
xor
sbb
cli
mov
lret
push
test
mov
inc
test
aad
adc
lock
hlt
mov
aam
arpl
sahf
lret
pusha
hlt
cld
xchg
cmp
jae
jo
push
xchg
mov
cltd
stos
movsl
pop
inc
les
insb
jecxz
adc
xor
pop
shlb
inc
inc
cltd
test
lret
iret
int
pusha
cwtd
lods
call
xor
inc
inc
sub
dec
push
stos
inc
sub
add
aaa
loopne
add
pop
adc
pop
or
mov
nop
out
addb
and
fs
pop
mov
orb
pop
in
push
adc
imul
rclb
rcl
ja
call
fsts
mov
or
mov
outsl
xchg
adc
shll
inc
shlb
jecxz
iret
test
mov
dec
jecxz
ret
pop
dec
sbb
cmp
sub
xchg
popa
push
or
cmp
dec
jg
lds
rcrb
mov
loopne
mov
cmc
jae
cmp
adc
cwtl
stc
sbb
imul
sub
in
mov
fsubrs
mulb
jnp
cmpsb
inc
xchg
out
addr16
les
out
lahf
cmp
sbb
mov
adc
adc
stc
sub
je
xchg
aam
cmp
cwtl
and
mov
in
cmpsb
fcompl
fmul
rcrl
shrb
adc
out
jmp
jnp
or
mov
daa
add
andl
push
jmp
jb
fwait
push
les
subb
adc
cmpsl
shll
mov
popa
push
cmp
into
push
loop
rcr
pop
ss
cmp
dec
xchg
aaa
push
jp
pushf
sub
or
mov
or
lret
cwtl
movsb
and
lret
lods
jecxz
icebp
lods
ja
lret
leave
add
xchg
jg
jae
push
inc
fdivrl
pop
pop
mov
jbe
xor
fisttpll
jb
outsb
test
test
ret
fnstcw
xor
movsb
cmpl
mov
push
popf
cmp
call
das
cwtl
xorl
mov
movsl
add
xlat
inc
repnz
outsl
dec
test
mov
into
lea
out
cmp
dec
xchg
adc
jecxz
adc
pop
inc
sub
test
adc
mov
leave
dec
cmc
sub
push
and
jmp
cmp
push
mov
ja
push
pushf
jmp
mov
push
and
filds
pusha
adc
and
out
or
repnz
jge
int
xor
stos
fstl
mov
jmp
rcrl
jae
jbe
aas
subb
adc
das
not
inc
lods
insb
fistl
lods
xor
aad
xchg
lret
imulb
lcall
jne
jne
test
loopne
mov
fildl
adc
sub
cmpsl
dec
pop
cld
dec
mov
int
into
lods
call
xchg
fisubs
addl
fstps
rolb
inc
lret
mov
jle
mov
mov
lods
and
xor
aam
mov
and
sbb
lea
jbe
ljmp
xchg
cwtl
sar
movsl
or
mov
cs
push
add
xchg
mov
jmp
push
call
movsb
jnp
xchg
cmc
mov
test
sbb
ja
test
imull
sbb
or
sbb
int
push
insb
xchg
sub
divb
cmp
pop
mov
test
ret
test
ja
mulb
xchg
lcall
out
xor
and
add
cli
push
dec
fnsave
aam
test
movsl
in
repz
std
pop
jno
adc
sbb
xor
ret
ss
je
push
ret
and
es
sub
cmp
fwait
xor
clc
mov
mov
ret
popa
push
xor
push
pop
ret
mov
fcompl
xlat
push
lds
loop
out
cmc
xor
sti
dec
pushw
icebp
lret
insb
push
into
add
js
cli
imul
faddp
cmp
lcall
cwtl
pushf
dec
or
insw
and
sti
cmpsb
outsb
cli
pop
not
and
scas
pop
inc
subb
arpl
nop
idiv
mov
jg
lods
neg
nop
lods
dec
loopne
inc
lret
loopne
cmp
pop
jl
mov
ja
cmp
mov
xor
xor
xchg
mov
out
bound
push
out
push
gs
data16
div
add
mov
cmpb
add
inc
mov
inc
js
inc
leave
loope
data16
xor
pop
dec
pop
xchg
bound
xor
nop
out
cld
pop
xchg
les
repnz
shl
mov
fsubs
jo
lods
nop
xchg
mov
cmp
pop
inc
outsb
popa
jb
test
dec
mov
rclb
fnsave
fnsave
jle
sub
adc
jno
push
and
jmp
or
aam
xor
inc
iret
ror
sbb
movsb
pop
mov
mov
test
dec
xchg
mov
sub
mov
shrb
mov
sbbb
dec
and
sahf
cmpsb
rcl
and
enter
fdivs
xor
adc
fldt
sbb
mov
insl
outsl
pop
inc
xchg
lds
dec
fs
adc
mov
fs
cltd
add
pop
pop
jle
leave
ss
lock
popa
lcall
inc
cwtl
subl
rcrl
pop
shrb
mov
push
add
pop
inc
divb
adc
inc
cmpsl
int3
imul
push
cmpsb
loope
je
jae
sar
mov
fnstenv
pop
cmp
pusha
cmp
pop
aam
dec
jl
mov
test
push
mov
pop
cmpsl
and
push
in
add
pop
push
inc
mov
cmp
pop
out
jb
lcall
mov
cmp
in
xor
push
rorl
mov
push
mov
daa
xlat
gs
or
fisttpll
xchg
mov
and
js
insb
jp
or
xor
mov
loope
dec
inc
push
or
icebp
or
lret
rolb
push
inc
bound
cmpsb
pop
daa
imull
imul
fwait
stos
push
add
mov
dec
fs
mov
dec
dec
fimuls
pop
mov
cltd
mov
testb
jp
add
sub
out
sti
pop
mov
rclb
test
scas
cmp
jecxz
cwtl
es
inc
or
sub
mov
mov
mov
aam
loop
xchg
repnz
imul
cmp
inc
cld
jecxz
push
pop
shrl
cltd
idivl
popa
adc
cs
pop
cld
icebp
mov
push
cmp
es
cmp
jbe
and
icebp
rcrl
int
jno
repz
fucomp
push
sbb
aas
fiaddl
pop
mov
sbb
std
insl
jns
jne
inc
or
mov
and
mov
mov
imul
jmp
sub
mov
cld
into
aam
je
mov
fmull
shrb
xchg
std
aaa
sub
pop
lock
cmp
sbb
aas
sar
mov
lcall
repnz
pushf
push
fldt
scas
dec
sbb
bound
jbe
clc
or
fists
dec
bound
fists
out
push
push
dec
jnp
sbb
ret
fsubrs
out
fidivrl
scas
cltd
push
push
xchg
pop
mov
or
dec
test
jo
sub
test
in
sbb
fcoms
movsl
push
sbb
lock
cwtl
pop
movsb
push
sbb
jb
hlt
push
ficomps
cmp
in
aaa
movsb
pop
cmp
push
mov
shll
mov
lea
sub
mov
sub
jle
popf
xor
fs
fwait
sbb
call
mov
mov
mov
push
mov
sahf
push
mov
mov
in
mov
sbb
inc
dec
xchg
add
in
gs
sbb
popa
xor
aaa
nop
jns
push
mov
mov
imul
xlat
enter
aam
xor
fadds
push
pushf
out
adc
dec
pop
add
icebp
addr16
xchg
stos
or
ja
jecxz
roll
jecxz
pop
mov
mov
dec
test
fwait
cs
fcmovb
clc
rcll
jbe
pusha
lods
pusha
mov
data16
insw
xor
sub
addr16
insb
push
test
dec
loope
inc
aas
lds
jecxz
sub
cld
in
lcall
inc
or
imul
cmp
jl
lret
aad
push
inc
push
mov
rcl
stos
popf
lea
add
jae
rcll
lret
adc
jle
ret
cmp
mov
mov
cmp
loopne
je
adc
push
sub
sbbl
push
jl
dec
xchg
fsubs
xchg
sarb
sarb
xor
enter
bound
ja
add
xor
push
jnp
aaa
jo
cli
mov
into
imul
stos
push
ret
push
mov
xchg
pop
sahf
daa
jb
push
xor
cmp
fsub
xor
jle
pop
lret
int
cld
cmp
orb
scas
add
iret
xor
mov
lods
cmp
mov
leave
adc
cmp
pop
xor
repnz
sbb
jp
enter
shl
fisttps
add
jp
stos
cmp
in
bound
push
pushf
and
pop
cmpsl
xor
roll
push
pop
pop
stc
js
test
cmp
sub
inc
mov
mov
add
xor
test
sub
in
loop
xchg
push
cmp
jae
fwait
xchg
push
dec
xchg
or
pop
cmp
rorl
aam
movsb
int
or
adc
ds
mov
sbbb
ljmp
cwtl
push
cmp
adc
cmp
fiaddl
pushf
add
add
or
xchg
xor
popa
aam
xchg
jle
pop
cs
daa
lret
xchg
pop
lock
push
jp
mov
ret
mov
dec
lcall
icebp
out
repnz
and
pop
push
fs
imul
fadds
cmpsl
sbb
xlat
and
xor
and
repz
dec
mov
xchg
sbb
addr16
and
gs
xchg
dec
int
push
and
sbb
lret
or
mov
shl
data16
xlat
pop
repz
push
sbbl
jns
shrb
bound
inc
inc
push
loope
imul
dec
sub
cmpsb
or
and
mov
imul
xor
fsts
jnp
insb
and
mov
iret
jmp
in
add
xor
out
push
add
jp
mov
push
xor
ss
dec
adc
aas
push
push
icebp
pop
js
add
shrb
jne
add
dec
sbb
dec
inc
xor
xchg
pop
test
mov
jge
and
lds
mov
pop
pop
push
inc
test
mov
sbb
scas
and
xchg
xor
fidivrl
cmp
lods
pop
mov
sahf
and
scas
lret
and
add
es
ja
push
pop
dec
pop
pop
or
int3
cmp
pop
fcompl
subb
xor
imul
jecxz
out
out
pop
fstps
push
xchg
lahf
pop
mov
je
imul
arpl
sbb
mov
mov
dec
lret
leave
cmc
ud0
jo
lock
push
leave
mov
fsubl
cltd
xlat
aam
js
das
je
ret
mov
adc
xchg
cmpsb
xchg
incb
fidivs
test
mov
je
fstl
adc
pop
popf
in
scas
sbb
addl
pop
daa
ja
mov
je
cs
jne
inc
bound
mov
dec
jbe
mov
dec
enter
mov
pop
dec
in
dec
xchg
sub
xchg
repz
dec
or
jns
popa
fnstenv
sbb
fs
fsubl
cmc
es
fiaddl
call
or
jnp
scas
push
imul
movsl
shlb
push
aam
sub
cmp
icebp
cwtl
xor
movsb
push
lahf
xchg
xor
add
mov
ss
sbb
int3
inc
mov
mov
les
sti
xor
push
mov
inc
xor
adc
xchg
int3
push
mov
fs
add
push
xor
stos
pop
scas
cltd
jno
leave
sbb
mov
pusha
mov
xor
bound
add
lds
inc
cs
call
sbb
cmp
mov
inc
fcomps
pop
out
push
nop
cwtl
in
mov
sbb
mov
stos
add
out
int
ljmp
sbb
lcall
pop
add
push
shrl
jp
adc
addb
imul
das
and
ret
fcmove
ret
mov
out
xchg
pusha
sub
mov
in
repz
addr16
ss
jbe
addr16
std
fldz
mov
mov
cmp
push
push
faddl
sbb
push
das
in
or
inc
push
inc
clc
sbb
idivb
sub
int
xor
outsb
out
dec
mov
pop
pop
ret
mov
ljmp
sub
fdivrp
sahf
jbe
mov
mov
repz
call
fwait
lods
fmuls
sbb
adc
dec
cmpsb
mov
rorl
fdivr
push
rclb
mov
inc
jo
or
add
mov
shlb
fdivs
data16
incb
adc
xor
inc
loope
lock
mov
orl
and
test
push
mov
mov
in
mov
fstl
jno
repz
mov
aam
enter
cwtd
jp
xchg
imul
cmpl
shll
out
mov
fstl
mov
mov
or
in
out
adc
lcall
mov
mov
cmp
pushf
movsl
sub
mov
scas
push
push
push
push
pop
jl
sub
imul
negl
mov
ja
add
inc
sub
mov
mov
sbb
lret
xor
mov
xchg
xor
out
out
aad
rcll
fsub
out
jbe
push
mov
dec
add
sbb
nop
or
vorpd
mov
xchg
movsb
mov
mov
mov
inc
dec
adc
adc
pop
push
or
pusha
jno
xchg
add
pushf
sub
pusha
sahf
adc
ret
call
mov
cmpsl
xor
pop
mov
movsb
adc
outsb
das
test
imul
xor
dec
leave
clc
cmpsb
push
xchg
notl
aas
dec
dec
cmp
lock
xor
les
outsb
in
arpl
dec
push
sub
jle
clc
sti
stos
repnz
lahf
mov
lea
pushf
xor
js
push
inc
adc
xor
lea
clc
in
cmp
aas
xchg
std
fildl
inc
fs
mov
cmp
pop
nop
bnd
bound
jb
mov
jg
mov
dec
adc
fwait
arpl
adc
inc
push
pop
stc
mov
outsl
pop
outsl
fwait
leave
xchg
cmc
in
repz
push
ja
xchg
aam
dec
add
inc
push
dec
and
ret
mov
out
adc
cwtl
xchg
push
pop
lret
ds
imul
scas
shlb
movsb
sub
or
cmpsl
push
out
xchg
cmpsl
cltd
dec
sub
leave
sub
pop
lds
sub
sbb
cli
fildll
test
int3
mov
shl
lea
rcr
je
mov
lret
nop
fcompl
clc
popf
subl
lock
ja
mov
inc
mov
lods
dec
into
lret
dec
sub
ja
sti
xor
adcb
and
aaa
dec
lcall
in
xor
daa
or
js
inc
cmpsl
or
jbe
cmp
fistpl
inc
loope
nop
sub
gs
xchg
sahf
jg
lods
fisubs
mov
push
iret
push
xchg
pop
je
add
iret
out
test
jmp
or
leave
hlt
int
and
mov
mov
jl
pop
cmpl
cmp
add
enter
cmp
fisubrl
xchg
or
sub
xchg
movsb
pop
cmpsl
cmpsb
xchg
and
jg
jne
daa
cmc
inc
push
nop
imul
add
jp
fnsave
daa
ds
jmp
rcrl
mov
jmp
test
mov
push
add
sbb
pop
dec
movl
adc
jbe
fstps
jg
xor
mov
aas
lcall
pop
popa
jle
movsb
mov
iret
push
shll
xor
push
pop
adc
xchg
outsb
push
jp
popf
nop
adc
sbb
push
scas
sub
lret
repnz
hlt
mov
xchg
test
movsl
das
aad
push
and
adc
sarl
or
add
pop
fwait
je
cmpsl
xchg
or
test
pop
test
dec
jo
test
mov
dec
out
sbb
cmp
add
ret
fdivs
enter
aam
jecxz
push
lcall
xor
mov
sub
fdivrs
aam
or
data16
stos
int3
fistl
pop
jle
push
xchg
aad
push
fsts
jmp
adc
out
and
das
insl
mov
push
rcr
dec
sub
xlat
jg
pop
cs
jp
push
xor
sub
dec
movsl
std
and
movsl
fldt
rcr
mov
push
inc
int3
ja
inc
hlt
sub
add
add
adc
and
rolb
mov
daa
xlat
stc
test
addr16
and
ret
mov
cmp
out
and
mov
daa
repz
into
int3
ret
xor
xchg
sbb
mov
ret
int
mov
popf
sub
pop
fnstsw
xchg
jmp
popa
lcall
filds
inc
pop
ja
movl
mov
dec
jne
mov
mov
popa
mov
inc
addl
or
mov
je
cmpsl
hlt
sub
cmc
mov
loop
mov
out
jecxz
negb
push
lock
jb
popf
dec
or
xchg
fisttpl
sti
icebp
sbb
mov
fisttpl
inc
call
push
scas
add
pop
xchg
lods
dec
repnz
ds
pusha
cld
or
pop
pop
sbb
jl
testl
stc
orb
out
cmc
dec
dec
ja
sbb
xor
popf
mov
inc
icebp
mov
scas
scas
inc
or
cmp
jno
lods
mov
cmp
mov
pushf
sarb
rcrb
cwtl
sub
mov
jae
scas
and
std
call
rcr
jb
inc
js
ror
and
mov
fnstenv
mov
or
scas
nop
shlb
loope
cmp
fimuls
and
jp
adc
lcall
fdivp
mov
pop
sbb
adc
mov
rorl
and
aas
fistpl
ljmp
dec
jno
jl
add
push
xor
shlb
mov
jecxz
rclb
adc
pushf
cmp
sub
hlt
pop
and
dec
xlat
dec
mov
mov
rolb
mov
jno
jle
and
std
and
in
std
xchg
sti
pop
ret
pop
dec
dec
call
cmp
dec
cmp
mov
sub
push
push
pop
lock
adc
test
scas
loope
cmp
lret
cmp
xchg
cs
or
rcrl
jmp
push
push
popf
mov
aad
imul
cltd
push
inc
pop
mov
gs
testb
fucomi
and
mov
and
jo
ret
push
push
lea
lcall
add
loop
add
pop
pop
mov
popa
aam
xchg
pop
push
or
lret
repnz
mov
pop
push
outsb
jle
jecxz
xor
jle
jae
push
sti
inc
pop
xor
daa
inc
in
mov
dec
sbb
fisubl
and
jmp
stc
push
test
sub
xchg
mov
call
mov
push
gs
fcompl
adc
mov
cltd
jbe
push
and
insb
mov
out
dec
shrb
xor
leave
pop
es
lahf
cmp
and
adc
nop
ror
mov
dec
fcomps
push
lret
pop
inc
xor
in
jp
lcall
jbe
sub
xchg
imul
mov
std
ret
sub
shll
jne
lret
inc
mov
add
jnp
push
outsb
loopne
ja
popa
mov
popf
roll
and
jbe
je
mov
inc
pop
pushf
test
or
mov
push
dec
popa
dec
inc
jp
jnp
cmc
dec
dec
and
mov
xor
mov
lea
adc
jno
shrl
mov
test
adc
enter
mov
dec
mov
add
pop
or
adc
mov
iret
inc
stc
mov
in
cmc
dec
stos
mov
mov
stc
sbbl
je
imul
xor
jmp
into
and
loopne
jns
adc
pop
imul
mov
scas
mov
lods
fisttpl
loopne
pop
scas
mov
or
xor
mov
pop
subb
inc
outsl
das
test
pushf
testb
mov
mov
adc
jb
pop
dec
xlat
pop
adc
cmpsb
jl
sbb
dec
shll
xchg
adc
push
xor
aas
frstor
push
int
mov
aad
push
and
xchg
jl
dec
test
sarb
aaa
mov
scas
das
mov
mov
dec
pop
std
jns
xor
mov
js
sbb
lods
loope
in
repnz
xor
inc
ja
sub
mov
pop
scas
jbe
std
and
mov
data16
ds
mov
inc
dec
sub
pop
xor
inc
sbb
sbbb
out
rcrl
in
xchg
aam
sti
and
xchg
fnstsw
xlat
mov
in
in
pop
aas
nop
push
dec
cmp
pop
sysexit
xlat
jmp
pushf
cmp
jle
insb
or
movsl
insb
sub
mov
sahf
pop
dec
cmp
jbe
loope
cmc
mov
popf
push
mov
insl
fbstp
mov
dec
mov
and
inc
cltd
icebp
cmc
cltd
rorb
icebp
int
cld
xchg
aaa
test
cmp
mov
mov
mov
sub
mov
int3
adc
dec
cwtl
into
jnp
xchg
addr16
call
mov
jle
mov
or
or
daa
pushf
jmp
mov
cld
pop
es
push
lods
mov
dec
arpl
out
mov
or
outsl
cmp
mov
xchg
cli
adc
icebp
lcall
in
push
popf
sub
popa
jno
mov
xor
push
sub
xchg
adc
lea
pop
xchg
pop
lods
xchg
aaa
push
imul
or
inc
fisubrl
inc
arpl
cmp
adc
lods
outsl
das
popa
mov
pop
hlt
clc
jge
adc
jns
pop
add
repz
push
pop
jbe
out
aaa
mov
xchg
mov
dec
data16
cmpsb
outsb
dec
aas
push
stos
out
cmp
stc
push
sub
fbstp
add
js
ljmp
mov
ja
sti
js
xchg
sbb
push
adc
out
cmpsb
xor
addr16
out
or
popa
inc
icebp
sub
sub
cmp
push
je
lret
sbb
js
pop
xor
lock
and
mov
in
mov
inc
out
sub
cltd
or
add
cmp
stos
push
ret
pop
std
xchg
ret
or
adc
jns
adc
pop
fisubrl
adc
adc
adc
sarl
rorl
sbb
and
out
lret
mov
in
rcll
adc
shrl
cwtl
shlb
jg
or
push
sbb
cmpsb
pop
out
fildll
jae
movsl
aas
repz
pop
jmp
add
xor
rol
pop
ss
addl
mov
inc
int3
mov
out
mov
cld
push
test
sub
scas
inc
ljmp
mov
or
dec
ret
movsl
test
xor
imul
loope
stos
stos
mov
mov
adc
push
imul
jl
jns
mov
cld
outsl
xlat
mov
push
dec
mov
inc
xchg
cmpsb
mov
in
push
inc
adc
rcll
jp
xchg
jo
add
imul
jno
or
xor
push
push
push
xchg
arpl
std
lds
roll
jb
push
inc
pop
into
jmp
popf
xor
pop
cltd
push
je
ficoms
mov
int
dec
not
popa
cmc
insb
and
cwtl
jbe
rcll
xchg
leave
mov
movsb
jnp
outsb
stc
lcall
and
dec
mov
sub
ds
adc
dec
add
jle
push
jns
out
push
cli
or
stos
clc
mov
adc
inc
add
lock
gs
lock
xor
jae
adc
iret
mov
dec
or
sub
lcall
mov
sub
mov
icebp
pop
pop
lock
fwait
adc
iret
lock
xchg
mov
loopne
inc
cmp
stos
sub
fisubrs
cmpsb
stos
dec
xchg
test
inc
jo
push
or
mov
inc
push
lea
popf
mov
fsubrl
lcall
xchg
add
xor
and
and
ret
lock
jae
adc
pop
ror
mov
aad
dec
inc
fdivs
test
and
push
mov
ret
mov
sub
cmp
sub
arpl
out
mov
sbb
adc
outsb
xorb
jg
or
lds
dec
fdivl
aaa
fwait
and
mov
sub
je
ds
in
lods
push
and
jle
gs
fidivs
das
pop
cmc
scas
sbb
mov
sub
hlt
mov
push
test
out
out
ja
push
cltd
push
sub
pop
out
gs
sbb
mov
inc
js
mov
cld
or
cmc
and
daa
sarl
sbb
jno
jno
or
out
mov
test
pusha
aaa
pop
push
nop
xor
inc
sbb
mov
push
icebp
pop
and
cmp
outsl
mov
add
fs
shll
hlt
shll
pop
fildl
sbb
loopne
shl
arpl
fistpll
mov
hlt
inc
xchg
dec
fsubp
inc
add
add
dec
mov
sar
imul
imul
lock
fwait
xchg
pushf
stos
les
lcall
jmp
inc
xor
jnp
test
and
or
jp
incl
adc
loop
or
ds
adc
add
fwait
xchg
pop
pushf
jbe
push
mov
enter
pop
push
bound
sbb
jle
sarb
nop
push
and
test
icebp
add
in
jb
adcb
cmp
and
pop
sbb
inc
sbb
je
pop
inc
or
or
inc
push
xchg
inc
test
jns
sub
pushf
mov
ret
and
pusha
xchg
pusha
sbb
std
fwait
adc
imul
jnp
xchg
jp
dec
in
sbb
xchg
cld
xchg
or
lret
icebp
and
cli
adc
sbb
imul
sahf
mov
je
mov
inc
popa
push
insl
cwtl
mov
mov
aam
popa
inc
sahf
daa
push
js
imul
subb
jns
inc
leave
and
in
pop
or
jecxz
sub
cmp
sahf
cltd
mov
ljmp
fwait
add
insb
xchg
fnstsw
mov
ret
add
adc
jno
xchg
rcr
mov
addl
xchg
adc
into
call
mov
pmulhuw
outsb
cwtl
shll
push
xor
outsb
mov
ret
push
push
add
or
dec
fcompp
jl
cmpsb
jne
scas
dec
xchg
test
and
js
sub
mov
cwtl
sub
push
cmp
pop
shrb
rolb
push
loopne
add
dec
cmp
xor
jecxz
outsb
xchg
pop
push
push
or
add
out
negl
pop
sar
hlt
push
xor
adc
jne
sbb
cmp
popf
repnz
nop
fmuls
sbb
xchg
sti
stc
inc
push
jmp
dec
dec
xchg
into
lea
sub
data16
dec
jp
xchg
fldt
movsb
leave
out
adc
movsb
ficompl
cmp
stos
jno
loopne
insb
inc
in
shll
or
jle
fildl
outsb
push
cld
pop
jg
ljmp
jge
sub
jo
push
dec
push
adc
mov
outsb
scas
cld
sub
jae
pop
insb
cs
cmp
jnp
mov
ret
popa
dec
inc
xchg
rorl
pop
cld
aas
dec
mov
sub
insb
and
test
adc
daa
movsl
sbb
dec
push
fisubs
leave
jge
jne
add
cld
xchg
icebp
scas
dec
fisttpll
fdiv
lret
push
iret
mov
mov
mov
fadd
insl
dec
mov
mov
mov
ret
test
fbld
idivl
mov
into
inc
pushl
cmp
dec
inc
or
adc
in
sbb
adc
js
or
aas
xor
addl
aad
imull
pop
sub
dec
inc
fistl
jl
jmp
insl
fisubs
hlt
rcrl
je
or
fistps
lods
call
sub
pop
add
out
or
out
mov
cmp
push
jnp
lods
push
lods
push
test
hlt
jmp
mov
aam
popl
pop
jnp
test
cmpsl
xchg
xchg
outsl
jecxz
in
outsl
push
mov
leave
sbb
int3
sbb
and
inc
fbld
xor
mov
cmp
test
lahf
stos
push
sbb
mov
xor
pop
pop
inc
mov
or
je
fwait
popa
xchg
scas
das
data16
ja
jno
mov
push
ja
or
aas
into
or
cmc
addl
add
cmpsl
xlat
jge
push
sbb
adc
push
add
shrb
xorl
shl
push
outsb
sbb
dec
xlat
dec
lcall
mov
sbb
push
scas
insl
or
sub
repnz
xor
xor
push
enter
fs
sub
rclb
or
test
push
sub
into
fwait
sarl
adc
orl
lods
outsl
mov
xchg
ror
mov
test
cwtl
jp
hlt
lods
inc
and
mov
mov
sub
stos
repnz
mov
leave
popf
jmp
aam
cmp
inc
mov
int3
dec
imul
push
jnp
sti
and
aaa
push
cmp
pminsw
lock
loop
sarb
orb
insl
pop
std
out
mov
test
hlt
push
mov
fidivrs
push
inc
push
adc
int
jb
and
push
lods
inc
ja
mov
sub
fimull
in
jns
mov
aam
add
adc
clc
pop
add
dec
nop
push
lahf
pop
out
mov
nop
mov
sbb
sti
cmc
idivb
mov
inc
add
es
jbe
ficoms
or
data16
cmp
sbb
iret
and
out
jmp
rorl
mov
mov
add
xchg
loopne
add
rol
aaa
and
subb
jno
mov
sub
inc
adc
ljmp
jno
push
ret
jmp
push
outsb
xchg
cld
mov
in
rclb
inc
cmp
jae
ds
pushf
cmpsb
cmp
xchg
or
xchg
xor
adcb
and
mov
or
int
dec
jns
lret
loopne
lret
cmp
pop
int
mov
pshufw
mov
imul
cmpsl
push
mov
push
dec
lods
mov
fs
sub
mov
jns
push
arpl
imul
fnstsw
aaa
ret
shl
loope
sti
push
fcompl
and
rorl
dec
xor
jbe
dec
out
popf
cmpsl
lods
xchg
dec
icebp
lret
rolb
mov
xor
add
sbb
xchg
jnp
movb
addl
pop
add
ror
mov
fadd
das
mov
pop
insb
cmc
inc
inc
aas
inc
loopne,pt
loope
jle
fstpl
aad
rorb
dec
add
pop
test
or
mov
sub
dec
sub
jp
sti
nop
insb
pushf
fadd
push
dec
xor
stc
lcall
dec
adc
jo
aad
test
mov
dec
loop
cmpsl
push
and
dec
add
and
pop
and
sub
add
test
jns
add
mov
mov
adc
inc
dec
fdivs
out
mov
stc
lahf
mov
push
mov
mov
cld
mov
mov
or
jle
ret
fidivrs
arpl
pop
mov
rcll
pop
jecxz
sub
and
dec
data16
xlat
mov
lret
push
lock
or
fwait
popf
das
xchg
or
fcoml
add
pop
in
sub
mov
sbb
cmpsb
mov
pop
fisttpll
lods
ror
clc
xor
cmp
add
inc
dec
and
or
jno
int3
and
dec
enter
jle
push
inc
xor
push
xchg
add
stc
jnp
push
sbb
xchg
pop
pop
fbstp
cltd
xchg
sahf
xchg
movsl
mov
icebp
shlb
out
cwtl
lea
jae
lcall
and
mov
or
inc
dec
inc
mov
add
lret
or
dec
in
push
jecxz
ret
addl
add
rcrl
mov
lahf
repnz
and
movsl
cs
dec
push
loop
mov
adc
push
in
aad
xadd
adc
and
sbb
hlt
mov
inc
or
xorb
repnz
mov
imul
out
les
inc
cmp
call
vcvtdq2pd
mov
cs
sub
add
cli
dec
xchg
sar
xchg
in
and
and
leave
gs
ficoml
pop
push
push
gs
orb
xor
inc
outsl
xchg
sar
insb
mov
push
imul
popa
fistpll
insb
sahf
stos
dec
xchg
ss
dec
iret
ds
icebp
bound
push
cmp
iret
es
xchg
mov
add
pusha
enter
sub
mov
inc
dec
hlt
movsb
pop
pop
mov
add
je
mov
movsb
fwait
add
and
fadd
divb
test
pop
mov
adc
sbb
xchg
movsb
cmp
mov
xchg
mov
mov
ss
push
mov
out
or
jmp
stos
rcrl
and
in
aad
xor
mov
xchg
mov
xchg
leave
adc
imul
fbld
rcrb
je
push
sbb
out
jo
test
xor
inc
sti
sbb
pusha
push
xchg
testb
add
hlt
mov
arpl
or
das
sub
cs
mov
stos
mov
ja
sub
adc
into
lret
out
pop
cmpsb
aas
lret
or
jecxz
jg
and
out
les
xchg
pop
or
mov
mov
outsb
mov
in
xchg
mov
aam
clc
pop
sahf
insb
sub
cmp
movsl
lods
jns
adc
insl
xchg
movsl
xadd
negb
xchg
pop
mov
add
call
test
movsb
in
movsb
leave
mov
jl
and
in
mov
stc
sub
imul
pop
mov
test
lret
mov
aaa
sub
push
sub
push
movsb
hlt
adc
mov
xchg
dec
mov
dec
jecxz
test
into
in
notb
cmc
sahf
pop
jmp
add
inc
jnp
cli
mov
xchg
push
mov
xor
loop
add
jo
fiadds
mov
mov
mov
mov
inc
adc
jmp
filds
test
popa
xchg
das
movsb
movsb
jb
jb
loope
push
in
adc
adc
mov
mov
cmc
sbb
into
xchg
mov
insb
imul
rcll
and
mov
neg
fadds
int
shl
scas
stos
pop
int
xchg
call
stos
mov
xor
cmp
pusha
movsb
xchg
ss
sbb
hlt
cmp
sahf
dec
add
xor
insl
pop
test
icebp
push
fidivrs
int
xchg
mov
mov
pop
fisttpl
sbb
in
hlt
cmp
int3
lahf
lret
add
pop
shrb
fs
cmpsb
leave
jmp
insb
daa
add
inc
xchg
push
mov
mov
pop
xchg
pop
mov
sahf
shl
mulb
sbb
lret
js
andb
pop
sub
loop
pop
sub
outsl
push
fbstp
sbbl
xor
jmp
jbe
enter
mov
insb
pop
mull
enter
call
push
insl
outsb
inc
xlat
imul
clc
mov
jecxz
divl
jl
jecxz
add
cs
jb
in
push
mov
mov
lea
scas
push
stos
arpl
and
cmc
or
das
cmp
cld
in
and
fwait
popl
aad
lcall
mov
pop
ficomps
stos
mov
andnps
sub
fwait
ret
xor
xchg
mov
and
movsl
les
call
outsl
mov
sbb
enter
test
mov
xlat
int3
repz
push
in
add
mov
xchg
and
adc
jo
fcomps
out
fmul
out
mulb
rcll
adc
sub
mov
add
pop
cld
mov
lods
or
cmp
lret
lahf
mov
out
pop
fildl
es
stos
pop
and
ljmp
push
pop
dec
cmp
loopne
adc
mov
or
movb
ljmp
jmp
mov
dec
push
sub
aas
sub
lret
xchg
test
imul
mov
dec
pop
movsl
mov
and
xchg
add
push
aam
cltd
xor
popf
push
jnp
fwait
jae
gs
dec
mov
pusha
fnsave
js
imul
lret
in
das
xchg
int3
nop
loopne
sub
fnsave
cmp
ret
pop
in
pusha
fwait
xchg
inc
xchg
xchg
aad
sahf
jb
pop
add
mov
xchg
jno
leave
fsubrs
and
call
pop
mov
sarb
jl
mov
fistl
jl
mov
in
push
out
mov
arpl
cld
xor
and
lea
sbb
mov
and
int3
jle
inc
pop
pop
fs
mov
sub
aas
mov
and
push
enter
push
jle
lahf
in
aaa
jecxz
fsts
inc
xlat
adc
adc
je
fsubr
popa
push
imul
mov
adc
xor
test
lds
xor
push
jne
push
call
xor
loope
cmc
hlt
inc
mov
fidivs
pop
xchg
mov
adc
mov
cli
mov
mov
aas
or
ffree
mov
cmp
pop
jo
inc
test
mov
push
je
test
or
nop
aas
jg
or
hlt
cmp
cmp
jo
mov
or
cmpsl
xor
test
push
loop
loopne
and
mov
add
or
es
jnp
fists
mov
lcall
das
xchg
inc
out
popa
pop
and
xchg
mov
dec
sti
ror
push
sbb
mov
mov
repz
scas
mov
pop
add
pop
jne
rol
test
cli
mov
pop
add
xchg
out
std
and
inc
scas
pushf
lret
mov
cmp
subb
jecxz
icebp
hlt
jmp
mov
xor
jmp
mov
loop
xchg
xchg
das
lret
cwtl
pop
xchg
cmpsl
pushf
push
sub
dec
jecxz
push
ljmp
dec
mov
daa
xor
fnsave
adcl
push
adcb
js
fsubl
xchg
adc
movsb
jbe
ror
push
es
lcall
fiaddl
and
xchg
add
mov
and
cmpsl
mov
out
xchg
mov
inc
dec
mov
or
and
dec
sbb
push
scas
ljmp
mov
jnp
jae
mov
fistl
jae
std
inc
xchg
fldt
mov
add
insb
lds
add
cmp
pop
popf
mov
pop
loope
roll
hlt
inc
int3
testb
sarb
lret
pop
ljmp
inc
xchg
icebp
scas
test
cmp
adc
cld
rolb
adc
lcall
inc
pop
sub
push
cwtl
scas
mov
xchg
jecxz
into
int3
mov
cmp
test
test
jns
inc
and
xchg
jecxz
jo
inc
add
xor
xchg
lods
mov
xor
push
push
jnp
out
test
jg
loope
ret
push
add
ds
cmp
in
aad
jbe
mov
adcb
mov
jnp
add
lds
jl
xor
mov
jp
scas
lret
loope
data16
cwtl
sbb
pop
cmp
and
mov
mov
xor
cmp
insl
ret
jbe
roll
and
out
fucomp
cmc
xchg
daa
mov
adc
fwait
cmpsb
or
mov
adc
loop
jle
or
pop
in
mov
mov
scas
sub
xor
popa
push
xchg
mov
dec
push
xchg
out
add
push
stos
jno
arpl
cmp
std
dec
cltd
int3
loop
pop
shll
add
mov
mov
jb
pop
xor
and
mov
dec
push
sub
shrb
dec
and
imul
lret
adc
adcl
cmp
push
jmp
hlt
and
mov
out
das
lret
push
jg
pop
pop
cld
inc
push
mov
or
lock
mov
jnp
repz
sub
rcr
dec
adc
aas
sub
mov
add
test
mov
daa
out
push
test
push
and
js
gs
add
mov
mov
adc
mov
fisubrs
lahf
popa
sbb
xchg
clc
push
or
arpl
push
sub
jg
fs
add
sbb
add
xor
inc
push
mov
or
inc
sbb
or
leave
lods
push
in
mov
jno
scas
sbb
sub
hlt
cmpsl
xor
adc
mov
fnsave
pushf
cmp
jno
cwtl
sbb
add
push
aaa
repz
and
sahf
mov
pop
cmp
mov
ss
mov
loope
jmp
in
call
sub
dec
xchg
adc
dec
dec
cmp
jmp
int3
ss
or
les
ret
lret
or
adc
loop
cmc
xchg
int
into
or
dec
or
inc
aad
mov
sub
arpl
lret
mov
cmp
xor
negl
inc
dec
and
pusha
push
adc
push
sarl
movsb
call
insl
shl
xchg
sub
and
pop
adc
sub
jns
mov
mov
inc
inc
cmp
mov
shl
insb
mov
inc
adc
bound
frstor
adc
mov
stos
sbb
stc
and
str
jae
inc
and
sbb
mov
dec
fsubs
movsb
and
iret
jbe
sub
daa
aam
cmp
popa
jae
push
aaa
outsl
mov
sbb
or
hlt
push
mov
scas
jno
pop
bnd
aad
stos
cltd
xchg
in
pop
xorl
sahf
mov
or
ds
loop
aas
jg,pt
mov
push
dec
jne
stc
pop
jp
movsb
lock
adc
rorb
sahf
lret
mov
inc
ret
nop
jecxz
inc
jle
jmp
cwtl
xchg
push
sti
xchg
imul
xchg
test
pop
pop
in
faddp
jns
sahf
inc
mov
pop
push
jno
xchg
loopne
cmp
rol
or
cmp
mov
mov
push
nop
dec
lods
xchg
enter
cmpsb
push
adc
sbb
cwtl
subb
jns
loope
fs
mov
mov
mov
mov
and
arpl
lcall
add
pop
fmulp
mov
push
addr16
pop
xchg
add
xlat
mov
imul
stos
add
inc
or
shll
push
push
sahf
xor
inc
jecxz
sti
xchg
scas
fimuls
repz
fwait
dec
shlb
sub
mov
dec
mov
xor
sub
adc
insl
leave
sub
mov
pop
shlb
or
jle
jmp
sbb
pop
imul
lea
jno
mov
ret
and
hlt
stc
jb
push
xchg
imul
jb
xchg
ret
in
mov
mov
jp
test
outsl
sbb
dec
pushf
dec
out
push
mov
repz
fbstp
dec
addr16
add
lret
mov
ret
int
or
add
cmp
dec
and
inc
sub
mov
ret
add
xor
test
jae
pop
fs
popf
dec
stc
cltd
test
add
shll
pop
fwait
mov
out
xor
mov
bt
cmp
mov
xchg
nop
hlt
or
orb
inc
mov
xchg
or
jle
jle
clc
fwait
inc
das
popf
adc
jno
mov
push
gs
jg
mov
mov
fadds
add
mov
add
jmp
test
lret
pop
inc
ljmp
das
xchg
test
sub
ret
jb
pop
mov
fs
cmp
cmpsb
aam
sub
out
mov
lcall
scas
fnstsw
sub
mov
mov
out
lahf
pop
fnstcw
mov
leave
mov
or
repz
inc
xchg
test
arpl
divl
out
stos
aaa
addb
add
xchg
negl
push
jb
xchg
icebp
out
dec
and
inc
mov
or
xor
mov
pop
jns
push
or
mov
and
not
popa
lahf
ret
add
cmpsl
xor
jl
and
add
inc
dec
push
imul
aad
fistpll
jecxz
add
pop
jbe
imul
sbbl
push
fdivr
ret
out
xchg
jmp
ret
pop
hlt
loope
xchg
fisubs
ds
jl
add
call
or
push
sbb
xlat
xor
lret
jns
loop
inc
sub
cld
fidivrs
dec
mov
and
lret
jns
jmp
or
es
mov
loop
sbbb
mov
pop
mov
sbb
mov
jbe
mov
imul
in
xchg
mov
in
ds
int
pop
mov
mov
sbb
fsubrs
fstpt
popa
lret
fs
pop
jle
stos
adcl
mov
or
push
adc
xchg
mov
sti
cmp
push
add
adc
sub
xor
mov
fmul
push
sbb
jmp
inc
notb
outsb
add
add
lds
inc
enter
popf
fsubl
mov
repnz
test
ljmp
orl
xor
dec
dec
or
leave
test
sbb
pop
subl
addl
mov
sbb
out
in
test
fbld
dec
inc
jl
push
xchg
scas
mov
mov
cmp
loope
push
adc
movsb
lea
sahf
mov
int3
cmp
dec
loopne
dec
incb
fs
lahf
mov
aam
stc
add
cmc
pop
testb
roll
fmull
and
xlat
sbb
push
push
ficompl
arpl
cmpsb
imull
sub
je
sbb
mov
int3
mov
jecxz
push
pop
adc
jbe
imul
mov
orl
out
pop
adc
xchg
loopne
push
mov
cmp
mov
inc
mov
ljmp
test
fidivrl
out
mov
lds
fsub
movsb
dec
mov
dec
jle
push
test
mov
xchg
cmp
jno
les
xor
and
notl
mov
incl
xchg
lahf
fcom
mov
stos
loop
in
and
cmp
pop
stos
cwtl
sbb
lods
mov
add
lods
sbb
or
test
cmp
into
mov
aad
aam
xchg
mov
into
xor
js
sti
mov
push
mov
or
xchg
into
push
push
scas
add
push
loopne
push
mov
jno
sbb
out
xchg
mov
adc
out
cld
sub
insb
testb
rclb
enter
fstps
lret
xor
pop
fidivrs
mov
pop
ds
rcl
mov
push
adc
lods
sbbb
jne
push
mov
mov
jecxz
cmp
mov
inc
shl
inc
ficoms
cmp
sbb
mov
push
adc
xchg
insb
mov
mov
adc
jge
stos
sbb
add
int
mov
inc
leave
push
insl
sbb
inc
dec
push
je
xor
testl
dec
pop
cmp
stos
fdivrl
push
and
pusha
lods
sub
loop
push
nop
loop
push
push
add
aad
sub
xlat
mov
arpl
cmp
int
adc
mov
stos
stc
xchg
jbe
mov
push
mov
pop
lahf
inc
mov
lock
add
cmp
mov
sub
add
js
scas
cld
inc
pop
cmp
fnstsw
sbb
dec
or
inc
rcrb
aas
insb
lret
jmp
add
repnz
mov
les
inc
jne
insl
bound
fwait
push
pop
hlt
adc
icebp
adc
test
cmpb
sbb
mov
mov
cli
fwait
jle
mov
cmp
pop
xchg
scas
loopne
jno
mov
xor
sbb
add
clc
or
mov
xchg
fsts
stos
xlat
add
leave
dec
cmp
and
and
push
jl
inc
and
mov
and
xchg
mov
insl
sub
mov
jb
add
psubw
ror
int3
movsl
push
cmc
inc
test
cwtl
loopne
pusha
push
xchg
imul
or
test
mov
xchg
cli
add
xchg
cmp
pop
jp
out
push
int3
out
lret
das
stos
mov
fdivr
sbb
into
dec
enter
data16
andb
clc
xchg
pop
jp
pop
jno
aad
mov
pop
mov
push
ljmp
das
fcomps
inc
outsb
aam
inc
rorl
or
dec
and
outsl
lea
jl
outsl
jl
mov
sub
dec
xor
das
sub
lds
lcall
lds
add
cmp
jno
jecxz
neg
mov
mov
jle
movsb
jnp
sub
fwait
and
scas
mov
xor
movsl
sbb
sar
mov
ret
add
cmp
in
hlt
push
adc
cmp
stos
adc
imul
loopne
mov
aad
sub
pop
das
sbb
sub
xlat
add
lds
mov
pop
add
loope
enter
hlt
dec
call
jl
mov
iret
test
sub
dec
cld
ret
xor
lds
insl
mov
push
inc
push
mov
pop
in
into
orb
mov
inc
imul
pushf
iret
pop
jl
sbb
jp
sti
lcall
cld
icebp
pop
xchg
sarb
mov
imul
xchg
out
movsb
outsb
negb
or
ds
cmp
sarb
sbb
imul
sub
pop
adc
mov
loope,pn
pop
xor
jno
rorb
adcl
sub
lahf
jg
stc
xchg
xchg
andb
adcb
adc
mov
andl
int
cmp
scas
mov
dec
mov
insb
aaa
mov
xchg
adc
inc
or
fwait
jecxz
int
gs
int
andl
cwtl
mov
sub
iret
push
into
push
aas
sbb
dec
js
mov
sbb
jo
ds
std
das
push
push
bound
icebp
call
sub
pusha
lock
jb
inc
movsb
test
loope
stc
lock
ss
ja
leave
push
iret
jno
int
adc
test
js
pushf
inc
push
outsl
int
sub
lods
lods
cmp
daa
xor
cmp
push
lods
sbb
in
faddp
cs
add
movsb
les
xchg
inc
ret
fmull
xchg
mov
sub
pop
scas
add
clc
jle
das
out
pusha
jmp
mov
movsl
inc
bound
dec
xchg
jp
loop
sub
push
dec
cmp
addr16
sub
push
mov
test
loope
mov
sub
mov
mov
nop
push
mov
cmp
pop
add
outsb
sub
jb
out
push
and
pop
das
and
in
cmp
xor
and
adc
rolb
push
arpl
sti
sbb
gs
cli
inc
lods
or
sub
mov
test
mov
test
cmp
call
pop
jge
lcall
das
cmp
fucomip
add
sbb
sbb
in
add
jg
sti
sbb
adc
mov
sub
out
adc
stos
pop
xchg
cld
nop
pop
out
pop
add
repz
mov
jecxz
cmp
mov
dec
out
push
xchg
xchg
mov
adc
push
sub
inc
pop
fs
inc
jle
int3
icebp
add
insb
xchg
push
iret
rcrl
popf
dec
pop
jp
pushf
in
dec
sub
sub
or
mov
sarl
and
sbb
pushf
cmpl
push
int
xor
ret
je
push
outsl
les
sub
and
stos
insl
adc
dec
lcall
iret
pop
cmp
pop
in
outsl
repnz
in
mov
jg
loope
push
outsl
lds
pop
out
sub
sti
mulb
call
sbb
push
and
jg
mov
inc
popf
cmp
adc
movsl
cmc
inc
andb
and
stc
imul
nop
lret
cmp
test
mov
mov
lret
inc
daa
xlat
push
ret
fs
dec
adc
adc
in
mov
or
scas
xlat
inc
or
in
scas
or
enter
jbe
sub
mov
jge
test
shlb
cmpsl
fnstenv
push
es
lods
xlat
in
mov
lea
inc
push
dec
and
jo
and
das
sbb
xchg
dec
dec
sbbl
fwait
les
xchg
sub
fdivrs
loope
lods
xor
sbb
out
inc
xchg
lcall
mov
mov
les
inc
arpl
adc
mov
add
pop
rcll
xchg
cwtl
cmpsl
call
jmp
mov
jge
pop
addl
sbb
out
pop
addr16
pop
jp
xchg
movsl
hlt
lea
loop
fdivp
lcall
add
or
sbb
movsb
leave
out
pop
dec
cwtl
sbb
sub
adc
aas
push
lods
mov
aam
inc
popf
out
mov
add
into
pop
or
outsl
addr16
dec
add
jnp
inc
lea
xor
je
ret
loop
mov
xor
mov
xchg
cmp
push
addr16
fsubrl
xor
inc
jp
out
repnz
popa
push
out
test
mov
push
in
hlt
into
test
xor
pop
or
xor
dec
in
ficompl
popf
nop
mov
repz
xor
mov
and
lcall
pop
loopne
xlat
pop
mov
mov
add
dec
xor
mov
push
imul
out
iret
inc
sbb
cmp
adc
jb
adc
mulb
xchg
lcall
sub
inc
pop
xchg
test
mov
ja
dec
or
aaa
pop
mov
loopne
inc
nop
mov
loop
xchg
movsl
mov
neg
outsb
mov
xor
or
sbb
cmpl
pop
adc
mov
jnp
loopne
mov
es
sti
xchg
add
jbe
int3
cmp
pusha
xor
inc
ja
sbb
clc
cmp
xchg
std
loope,pt
sahf
in
xor
out
mov
imulb
cmp
fwait
or
pusha
adc
xor
cmp
sub
xor
xchg
popf
or
mov
rcll
and
bnd
pop
movsl
addb
ljmp
and
sti
cs
jle
jb
mov
or
pop
xchg
pop
dec
inc
leave
imull
jae
mov
fs
xor
xor
mov
clc
inc
sub
pop
dec
xchg
xchg
je
decl
iret
xchg
pop
push
sub
sbb
stc
jns
push
jbe
sub
divl
mov
xor
insb
mov
scas
stos
lcall
pop
aas
adc
jecxz
dec
jg
xchg
jbe
shl
imul
pop
aas
rolb
scas
je
adc
pop
push
stos
add
adc
and
mov
inc
mov
or
test
inc
sbb
aad
and
sub
icebp
iret
cmpsl
jbe
aam
sub
popf
dec
movb
cmp
sbbb
jno
add
adc
add
add
push
into
push
add
adc
sub
mov
mov
sti
nop
fsubs
daa
jge
in
movsl
push
dec
lods
es
fistpl
insl
xor
lods
lret
in
loop
test
and
adc
call
sub
mov
out
lods
jno
or
mov
dec
xor
xor
adc
ret
jbe
out
mov
leave
fidivrs
scas
sbb
mov
adc
xchg
mov
push
inc
mov
xor
adc
stos
popf
in
push
push
divl
outsb
dec
lret
arpl
pop
loop
ja
xor
test
or
or
mov
in
or
sbb
pop
cmpb
fwait
jne
xchg
ds
mov
push
outsl
fmul
aam
jl
out
push
daa
int
fsubrl
add
dec
dec
inc
mov
jns
fs
push
sub
jb
loopne
dec
push
gs
sub
add
js
fimuls
loop
es
stc
push
into
dec
clc
add
push
hlt
ret
lcall
or
mov
flds
and
mov
fmull
push
ss
ret
movl
in
outsb
in
lods
cmc
int3
insb
push
dec
xchg
pop
scas
sbb
fistl
jno
jnp
cmpsl
adc
xor
xchg
imul
fwait
and
inc
dec
popf
daa
push
xor
xor
mov
mov
dec
arpl
int3
add
jno
ja
cmp
sahf
push
in
rcr
in
outsb
lods
add
call
jne
xor
inc
adc
jbe
mov
sub
adc
inc
out
mov
cmp
in
xor
test
xchg
and
xor
je
pop
mov
pop
ret
out
or
popf
jae
and
mov
roll
dec
xor
add
sub
insb
das
mov
cmp
mov
dec
mov
mov
cmp
insb
adc
fcmovb
outsl
add
sub
into
pop
data16
test
decl
scas
and
and
lea
xchg
pushf
jmp
ret
jb
adc
jl
fldenv
cs
fcomi
and
sub
mov
aaa
mov
cmp
mov
imul
xor
jmp
clc
jo
pop
jbe
adc
sbb
xchg
xchg
jle
int
lret
loope
lcall
out
xor
stos
test
enter
jbe
xor
jb
push
push
sbb
pop
or
dec
insb
pop
and
packssdw
stc
lea
mov
je
cmp
xchg
dec
or
lods
movsl
arpl
dec
fmuls
dec
ret
bound
add
push
rcrb
push
nop
or
mov
pop
jg
fmull
jnp
idiv
std
jbe
test
sub
cmp
pop
jbe
cmp
iret
js
sub
lods
xchg
or
dec
push
inc
insl
enter
lods
xor
fsubrs
imul
popa
clc
mov
loope
cmp
insl
push
cmpl
sti
mov
test
pop
pop
out
pop
cmp
ljmp
in
push
inc
jecxz
push
sbb
out
lahf
ficompl
cmp
orb
mov
ja
cmp
push
push
pop
sbb
xchg
lods
fadd
iret
lods
dec
mov
ficomps
pusha
add
jno
pop
or
loop
out
lods
dec
push
push
xchg
jae
adc
es
mov
push
stos
clc
in
testl
dec
xchg
cmp
push
mov
out
jae
xchg
sub
dec
aad
loopnew
and
mov
dec
jbe
jmp
and
mov
mov
jl
out
in
leave
add
jnp
and
xchg
cmp
aas
iret
add
aas
arpl
mov
jl
jecxz
les
out
jae
pop
daa
pop
add
cmpsl
mov
outsb
mov
mov
test
dec
daa
xor
sbb
dec
dec
jmp
dec
and
in
insb
icebp
mov
lods
ss
xor
popf
leave
and
scas
add
pushf
outsb
ja
mov
inc
jno
mulb
ja
sbb
into
ficomps
js
roll
bound
imul
data16
mov
rcr
mov
jb
sub
inc
cmp
je
xchg
sbb
push
in
or
fimuls
je
je
xchg
mov
fsubrl
jg
mov
data16
flds
stos
sbb
shrl
mov
jp
adc
cmp
pop
adc
mov
or
mov
nop
jp
data16
movsl
inc
ja
stos
xchg
xlat
xchg
imul
imul
dec
push
fs
inc
fidivrl
lcall
add
jl
push
aas
add
sub
adc
and
int
lea
push
mov
mov
xchg
and
out
pop
nop
addl
xlat
into
push
or
xchg
cmp
addr16
xchg
lcall
mov
cld
xor
sub
jne
scas
mov
fmulp
inc
fistps
jbe
fldl2t
ja
lret
imul
push
mov
mov
add
xchg
mov
outsb
push
xchg
in
cmpsb
push
sub
iret
test
mov
repz
addr16
je
xor
or
ret
jg
mov
inc
std
shlb
mov
test
pop
gs
test
jge
xchg
out
sub
mov
lret
movsb
and
push
ret
icebp
jp
sub
int3
shll
sbb
je
test
mov
dec
mov
sub
mov
cmp
shlb
mov
sub
cmp
mov
xor
addr16
daa
out
dec
mov
bound
je
xorb
cmpl
ret
cltd
fs
mov
and
add
mov
jno
adc
adc
call
mulb
push
push
fdivs
je
adc
mov
lahf
adc
sub
inc
sub
cmpsl
mov
sti
and
sub
je
bnd
testl
cmp
xor
enter
orl
sub
daa
sub
jp
jmp
lahf
mov
enter
xlat
movsl
popa
mov
out
xor
pop
push
pop
xchg
xor
sbbb
ret
cli
mov
jae
mov
repnz
lods
push
insb
sahf
xor
sbb
scas
sarb
jge
xor
cmp
adc
jo
or
sbb
mov
cmpsl
mov
push
push
popa
adc
pop
push
out
inc
add
sti
sbb
add
mov
jmp
andl
push
push
push
out
sub
pushf
imul
push
xchg
gs
clc
popf
sbb
add
js
pushf
xchg
sbb
cltd
mov
add
sub
push
and
mov
cltd
pop
jnp
insl
push
jp
mov
push
loop
push
popf
aam
fcoml
mov
sub
xchg
sbb
in
cmp
jo
mov
jge
out
les
mov
push
or
xchg
fldt
addr16
add
orl
pop
shll
sti
sbb
shl
jl
out
push
dec
pushf
aad
inc
xchg
xchg
aam
das
mov
insl
and
ss
outsl
stc
cmpsl
add
xchg
inc
xor
mov
pop
int3
sahf
or
pop
pushf
jns
repnz
cwtl
int3
insl
pop
xchg
and
or
mov
fs
cwtl
or
test
int3
aas
outsb
push
mov
shll
jbe
fsubl
cmpsl
mov
scas
ret
add
push
lret
cmc
xchg
rcr
xchg
mov
xor
fiadds
xchg
or
fbstp
std
fisubs
sbb
outsl
rorl
stos
xor
mull
cld
jecxz
nop
cltd
cltd
je
test
push
mov
mov
in
mov
loopne
fldt
insl
push
mov
cltd
insb
cmp
mov
jmp
int
enter
jge
or
xor
fisttpll
push
sub
xor
pop
and
scas
in
or
aam
jno
test
jns
sbb
sbb
aaa
add
jns
mov
lds
dec
pop
mov
pushf
into
sbb
mov
mov
xlat
icebp
mov
xchg
xor
jge
adc
jge
js
inc
sbb
sub
stos
icebp
clc
std
adc
lock
mov
popf
test
in
jne
sub
inc
adc
fidivs
xlat
sub
aam
stos
lcall
mov
and
lods
mov
push
push
fsts
les
mov
mov
xchg
ljmp
pop
psubq
xor
addl
cs
dec
aaa
les
mov
in
scas
scas
sub
imul
inc
xchg
fdivrl
outsb
pop
sbb
ja
cmp
int3
dec
call
dec
add
sbbl
mov
bound
inc
xlat
xchg
mov
mov
stos
mov
int
push
push
ljmp
shrb
rcll
push
stos
lea
mov
shlb
xor
lea
cmp
imull
cs
mov
push
rcl
pop
sub
push
pushf
sahf
sbbb
jno
fstpl
and
scas
das
jecxz
cmp
or
jg
push
insl
sbb
adc
jp
push
cs
xlat
dec
outsl
pop
pop
mov
adc
pop
in
pop
sti
cmp
stos
mov
fldenv
sub
push
jg
add
pop
push
jns
sbb
pusha
mov
sub
push
push
mov
pop
adc
arpl
sub
cmpl
inc
push
xchg
out
rolb
jne
cld
adc
call
inc
pushf
sbb
mov
xor
aam
loop
adc
xor
push
repz
imul
mov
mov
in
test
loopne
dec
and
scas
test
int3
hlt
or
cli
jb
mov
ja
les
lods
push
int3
cmp
mov
sbb
sbb
ljmp
and
lds
out
ret
jo
aam
mov
cmp
dec
enter
pop
jecxz
jle
push
cs
fidivs
sub
movsb
jl
mov
popf
and
stos
enter
inc
mov
gs
std
mov
push
and
test
arpl
sti
ljmp
dec
mov
imul
negl
popa
cs
lock
pushf
mov
pop
push
add
rorb
outsl
pop
fidivrs
pop
lods
sbb
stos
repz
in
cmp
comiss
mov
mov
jmp
mov
dec
fcom
pop
sub
dec
not
pop
ret
dec
scas
sbb
mov
mov
dec
lods
push
pusha
or
in
push
or
aam
les
mov
push
pusha
insl
inc
es
or
xor
add
jl
test
rol
push
adcb
fstpl
push
sub
mov
fwait
bound
into
push
fdiv
xchg
in
xchg
jnp
sub
repnz
test
xor
inc
lahf
pop
lahf
enter
push
sbb
cli
test
icebp
sbbl
scas
hlt
nopl
xchg
xor
jne
mov
popf
jl,pn
cld
dec
push
inc
and
mov
jp
movsb
sub
dec
addb
ljmp
icebp
lret
lret
adc
lea
mov
jmp
xchg
or
pop
pop
pop
or
pop
cs
mov
and
ss
lds
cli
lret
jge,pt
add
sbb
pushf
in
inc
test
add
or
lcall
pushf
inc
jl
and
sahf
in
cmp
mov
pop
imulb
ss
jb
dec
push
int3
in
xorl
call
pop
ret
loopne
testb
lcall
xchg
mov
mov
mov
sub
ds
shlb
lods
aaa
push
test
sar
or
enter
cmp
mov
mov
sub
hlt
xor
bound
shrl
int
test
aas
mov
testb
icebp
adc
ds
pop
push
jno
mov
popf
pop
loopne
add
aam
jmp
xchg
mov
mov
cmpsl
add
pop
ret
xchg
jb
mov
test
and
fcoms
insb
imul
mov
testb
out
orl
or
mov
aad
xor
aaa
cmp
fsubl
imul
push
mov
xchg
cli
ljmp
fscale
lret
or
xor
inc
inc
xor
in
rcll
sbb
addr16
pop
ljmp
cmp
sbb
pop
arpl
inc
mov
dec
push
nop
sbb
jbe
add
adc
lret
or
mov
lods
push
mov
mov
add
xor
cmp
jnp
push
jne
or
stc
pop
int
xchg
ja
test
cmpl
cmp
jg
dec
lods
add
sub
jp
cmpsb
dec
push
aas
push
jg
jp
dec
hlt
sahf
loopne
inc
sbb
rcll
or
sbb
jl
sbb
cmp
fsubr
rcrb
mov
cmp
sub
fcmovne
out
push
in
out
pop
popf
jmp
dec
dec
dec
lret
rep
fs
jo
lahf
mov
mov
or
hlt
ss
movntq
out
xor
xchg
loop
pop
pop
out
or
mov
pop
loopne
stc
xor
add
mov
mov
enter
mov
outsb
sub
aas
dec
bound
fcmovnbe
mov
out
je
and
mov
sub
aas
rcll
or
sbb
rorl
mov
rclb
inc
fdivl
add
lahf
and
or
lods
cltd
sbb
xor
inc
mov
loop
xor
shl
loopne
push
frndint
cwtl
xchg
and
nop
es
pushf
add
aad
out
inc
mov
or
sarl
cmp
loop
pop
dec
adc
insl
xchg
add
hlt
jbe
and
imul
sbbb
rorb
fwait
push
lcall
or
and
shl
inc
test
jne
mov
cmpsl
repnz
in
sub
test
push
js
inc
mov
xchg
jo
loope
in
cmp
dec
lea
out
pop
cltd
int
out
jl
cmp
sub
aas
mov
mov
fs
dec
ljmp
and
loop
in
xor
sbb
or
out
sarl
ja
inc
mov
and
jecxz
lds
add
inc
mov
mov
out
sahf
stos
pop
sarl
insb
push
sti
out
scas
addl
ficoml
inc
scas
dec
push
enter
cmp
bound
js
adc
xor
js
ficomps
out
add
jno
pop
jle
jnp
subb
jp
jno
int
jb
inc
outsb
lds
notl
mov
xor
gs
insb
or
leave
jne
cld
xor
jp
and
dec
fstpl
hlt
cwtl
mov
xor
xor
hlt
xor
mov
aam
jnp
aad
inc
and
gs
cmp
nop
push
outsb
push
pop
lds
popf
scas
and
ror
testl
mov
testb
rcrl
xchg
and
jns,pt
aaa
cli
push
cmp
jnp
and
xchg
and
fisttps
addr16
jb
movsl
jae,pt
pop
mov
cmp
testb
add
jg
or
add
mov
mov
xor
popf
mov
sti
ja
push
push
mov
mov
orl
ret
push
les
mov
std
divl
inc
sahf
xchg
cmp
das
jne
cmp
lret
daa
push
cld
sets
and
test
mov
ss
adc
scas
and
or
idivl
mov
out
shrb
sbb
ret
ficoml
loope
or
mov
rcll
add
ret
notl
enter
inc
mov
xor
std
arpl
dec
mov
jle
movsb
nop
out
push
dec
push
pop
insb
mov
scas
pusha
cs
sbb
adc
xchg
sbbl
call
leave
xorl
sub
jmp
lcall
fs
test
hlt
mov
mov
aas
movsb
jno
mov
mov
loop
dec
xchg
fldenv
std
and
pop
icebp
push
jle
hlt
cwtl
add
data16
xchg
les
iret
fmul
xlat
lods
add
or
std
out
xlat
int3
xchg
dec
cmpsl
in
xchg
push
pop
pushf
fldenv
lret
dec
jo
mov
scas
cmp
inc
cmp
rorb
cmc
sub
aaa
xchg
xlat
test
sub
hlt
das
inc
jno
adc
cmp
aaa
hlt
fcoml
jnp
scas
in
sbb
xor
mov
sarl
scas
insb
punpckldq
ja
test
shl
popa
hlt
pop
mov
dec
movsl
rcrb
cmpsb
adc
xchg
jmp
pop
in
xchg
imul
pop
scas
int
cli
mov
ds
dec
repnz
pinsrw
pop
outsl
es
rorb
int
fadd
adc
loop
cmp
cltd
jo
loope
add
sub
ss
xchg
mov
stos
rcl
mov
mov
push
xchg
fldenv
sahf
adc
adc
int3
or
shlb
sbb
filds
ds
ror
jo
jle
pop
sub
hlt
scas
cli
jecxz
rol
insl
cmp
test
mov
fs
in
mov
out
and
test
sbb
jne
add
lcall
loopne
shlb
int
pushf
cld
roll
loopne
pop
arpl
fstl
aam
mov
inc
test
mov
andb
jmp
mov
mov
stos
pop
inc
repnz
or
mov
adcl
sahf
sbb
scas
and
push
out
mov
mov
movsl
in
mov
and
ja
cmc
cld
adc
iret
fdivrl
pop
addr16
shlb
int3
rorl
jne
jbe
mov
dec
loopne
adc
out
and
stc
out
js
or
cmp
jae
fists
aam
addr16
aad
mov
mov
in
add
scas
and
test
outsb
dec
repnz
and
mov
lcall
and
imul
mov
sub
pop
fs
aad
aas
in
pop
and
ds
int3
push
dec
push
ja
or
mov
push
push
xchg
bound
or
xchg
in
push
fnstsw
ss
mov
pushf
je
repnz
inc
into
lahf
or
imul
scas
dec
or
leave
mov
dec
xchg
mov
pop
push
mov
cli
mov
sub
dec
loop
mov
lret
sbb
cmp
insb
dec
testb
fucom
imul
pop
ret
push
jmp
xchg
mov
push
sub
ficoml
in
mov
lcall
xchg
mov
sti
mov
cmp
out
dec
lods
xor
pushf
or
xchg
fisttpl
jg
cmp
cmp
mov
ja
jb
roll
mov
add
sahf
or
adc
jnp
sub
rorb
inc
cltd
int3
test
jns
rorb
mov
imul
lcall
sub
mov
imul
jle
jecxz
orb
mov
push
fmul
jmp
addl
je
jbe
out
mov
je
ss
roll
int3
jg
xchg
stos
dec
in
int3
cltd
xchg
addb
mov
pop
sub
xor
adc
dec
mov
sbb
int
adc
cmp
pop
cmp
sub
ds
int
sahf
pushf
pushf
cld
lahf
sbb
or
mov
imul
jbe
add
mov
or
stc
subl
cwtl
pop
push
lea
adc
cmp
sub
inc
dec
jno
cmpsb
insb
pop
cmp
adc
add
cmp
call
dec
loop
add
hlt
shlb
insl
push
dec
sub
iret
lock
push
fistpl
push
popa
das
outsb
movsb
pop
lcall
aam
popf
jle
cwtl
mov
insl
xlat
lahf
ds
cmp
xchg
iret
sbb
imul
fsubrs
clc
cmp
fucomp
rclb
jecxz,pt
mov
test
test
rclb
es
movsl
cmp
push
fsubr
mov
call
xchg
jmp
js
fld
mov
cmp
loopne
adc
jns
sub
leave
stc
jp
int3
mov
inc
jle
je
cmp
inc
pop
or
pop
outsb
arpl
cmp
test
sub
xor
ja
hlt
insb
sub
mov
mov
sub
out
fldt
cmpsl
out
add
mov
into
pusha
pop
sbbl
enter
enter
adc
xchg
ret
movnti
pop
fisubs
lahf
int
xchg
fistl
cmp
cltd
enter
cmp
mov
sub
sti
adc
mov
fistpll
aad
pop
loope
mov
push
xchg
clc
rcll
popa
dec
sub
out
fistpl
fisttps
jmp
xchg
rorl
sbb
inc
cli
cmpsl
call
dec
or
les
mov
inc
or
xor
xchg
mov
push
pop
add
jecxz
sub
mov
xor
dec
into
mov
jmp
icebp
or
addr16
int3
scas
lahf
filds
add
jne
loopne
pop
std
int
in
repnz
pusha
insl
jno
movmskps
xor
add
lods
js
aam
ja
xchg
stos
repnz
loopne
imul
lret
xor
loopne
sub
jo
sbb
mov
push
rcl
sar
call
insl
adc
pop
fmul
add
sub
cmp
repnz
pop
fs
rolb
jge
inc
outsl
icebp
inc
xchg
mov
mov
fs
xor
push
inc
push
adc
jns
mov
mov
scas
movsb
add
fldcw
inc
std
jnp
out
pop
test
push
aas
aad
dec
fwait
mov
bound
idivb
imul
sarl
adc
icebp
sub
ret
lahf
roll
into
aas
cmp
xchg
icebp
fnstcw
and
loop
mov
test
dec
sub
faddl
test
xchg
add
cld
and
pop
jmp
cmp
jg
inc
outsl
insl
lods
aas
dec
aam
inc
pop
and
sbb
or
adc
add
jecxz
mov
shll
fbld
mov
daa
adc
push
dec
das
ror
lods
or
and
pushf
fiaddl
mov
cmc
jnp
call
nop
sub
pop
fiadds
xchg
xor
inc
sbb
sub
dec
push
mov
lcall
xor
out
inc
xor
cmp
or
dec
pushf
stc
jecxz
nop
mov
dec
lret
mov
adc
and
cmp
xchg
jle
xchg
cmpsb
or
out
mov
fisttpll
test
nop
in
push
inc
mov
scas
and
xlat
in
out
mov
mov
nop
ss
push
mov
sbb
pop
or
jmp
cmpb
or
jg
in
sbb
mov
cli
pop
dec
pop
and
fmuls
add
mov
inc
lods
imul
and
popaw
mov
leave
dec
sub
sbb
jp
mov
inc
jae
shr
xlat
shll
shl
lcall
sarb
fists
push
and
out
push
jl
jecxz
xchg
adc
xchg
cli
movsb
nop
jb
sahf
mov
insl
leave
inc
adc
js
std
and
sub
jge
lds
or
pop
lods
mov
stc
mov
sbb
and
shll
pop
adc
push
jb
imull
cmp
loopne
mov
loope
xor
mov
inc
xchg
xor
mov
std
out
push
imul
xchg
roll
loop
push
in
push
in
repz
mov
ret
jno
mov
or
jecxz
mov
lods
and
lods
or
push
sbb
cmpsl
sub
sahf
flds
pop
inc
pop
or
inc
shlb
dec
and
mov
test
cltd
add
sub
xchg
and
or
mov
in
xchg
daa
cmpsb
push
jmp
push
inc
daa
int3
fisubrs
or
xchg
inc
sub
cmp
and
mov
fnstcw
dec
cmp
dec
adc
cmp
das
xchg
mov
xor
xchg
das
xlat
mov
push
sbb
jmp
in
aaa
test
inc
sub
pop
cltd
dec
adc
insl
lds
push
jnp
dec
or
imul
shrl
sub
fsubrp
jmp
sub
add
mov
lods
xor
dec
jle
and
dec
xchg
dec
cwtl
das
ja
aam
test
fnstsw
stos
sbb
jns
les
je
push
dec
enter
mov
dec
bound
adc
push
pop
pop
mov
mov
lret
xchg
jb
sbb
pop
stos
popa
sarl
xor
movsb
pop
int
cltd
fwait
mov
hlt
out
insl
push
hlt
pop
push
or
aaa
pop
push
and
inc
insb
sub
fildll
repnz
movsb
mov
inc
jmp
sub
testl
cmp
fsub
inc
push
aas
fisttpl
cmp
out
sarb
xchg
push
jp
dec
or
sub
jns
decb
lret
push
leave
adc
sbbl
out
js
dec
pop
jmp
rclb
xchg
in
inc
cmc
xchg
xor
mov
xchg
and
pop
fldl
hlt
pop
fmulp
lods
test
cli
fists
data16
sub
in
jo
fwait
lret
add
arpl
inc
aam
push
xor
dec
loop
adcb
int3
cli
jecxz
mov
dec
pushf
inc
out
push
mov
cli
cmp
test
dec
bound
and
lods
xchg
lcall
dec
imul
push
jae
push
scas
xchg
lods
andb
fs
gs
es
pop
imul
sbb
xlat
sbb
ja
inc
cs
mov
push
cld
outsl
sbb
jge
cmc
xor
imul
dec
out
xor
push
insb
push
xchg
out
push
popf
inc
bound
jo
in
jb
mov
lcall
push
shll
cld
add
popf
dec
mov
lret
sarb
and
xchg
ja
sbb
mov
jmp
or
push
pop
inc
aad
xchg
lods
in
fistpll
xor
sbb
popa
cs
pusha
in
mov
pop
mov
adc
cmp
out
inc
or
push
sarl
push
std
mov
mov
adc
loop
mov
mov
lret
inc
mov
xor
adc
mov
add
fs
pop
outsl
xor
rolb
add
add
dec
dec
dec
popf
push
in
aaa
jb
inc
call
mov
int
shrb
and
test
test
jl
sub
inc
out
add
sbb
and
fnstenv
icebp
cwtl
or
push
jb
inc
mov
les
xlat
scas
push
push
jno
or
mov
dec
xor
fnstsw
sbbl
mov
mov
dec
mov
jnp
je
push
dec
ror
xchg
cmc
push
cli
pop
cmpsl
and
pop
sub
ficoms
push
ret
mov
xor
mov
lret
fwait
jbe
pop
ret
fildll
aas
loope
int
ret
mov
out
mov
test
mov
mov
inc
pop
aaa
ret
push
insb
bnd
insb
inc
adc
push
jge
cs
mov
psubusb
mov
pop
leave
mov
sub
inc
or
enter
sbb
lret
mov
int
inc
test
add
jb
arpl
and
shll
push
das
or
jmp
hlt
ret
mov
adc
repnz
aas
lret
fcompl
loopne
in
dec
and
sbb
dec
fisttps
pusha
lcall
push
push
outsb
fisttpl
lahf
aas
fs
inc
lods
push
cmp
ja
scas
sub
bound
fcomps
jge
dec
add
pop
push
mov
rep
jl
inc
jg
mov
call
and
push
lahf
in
fucom
aas
adc
pushf
cmp
shll
shlb
jmp
add
sbb
shrb
mov
jno
jmp
fisttps
cwtl
outsb
cmp
aaa
fldcw
mov
imul
add
stos
scas
in
nop
fwait
jmp
sub
dec
jb
jns
push
inc
sbb
aas
push
popf
push
dec
xor
imul
mov
ds
add
cmp
cli
or
sub
jo
mov
jne
fwait
xor
std
test
fidivs
xor
loope
ds
xchg
cmp
out
jp
xor
int3
sbb
jnp
mov
push
add
xchg
stc
movsl
popf
push
test
int3
or
or
insb
int3
adc
mov
push
inc
adc
push
adc
pop
or
arpl
sub
and
xor
xchg
pop
addr16
out
sub
pushf
inc
sahf
push
cmp
push
pop
jle
pop
xchg
sub
jmp
push
cs
mov
insl
push
push
jae
mov
add
ret
dec
xor
icebp
adc
adc
cltd
push
js
insb
arpl
inc
add
in
sbb
and
dec
adc
xor
cmp
mov
ss
outsl
mov
mov
daa
and
and
dec
xchg
sub
test
leave
nop
lcall
lret
in
jl
ja
xor
mov
mov
ss
pop
dec
inc
mov
mov
mov
cmp
ss
jno
aas
add
lcall
mov
sbb
scas
push
and
jae
jp
rorb
jmp
shl
adc
add
ja
lret
lcall
aaa
lret
cmpsl
cmc
dec
outsb
sbb
or
lods
stos
or
fldl
cmp
incb
in
xchg
and
dec
dec
lock
jnp
dec
stc
inc
fldt
xadd
cmpsb
mov
scas
in
call
inc
imul
lock
dec
aaa
cmp
ja
je
and
int3
pop
adc
and
test
leave
lock
and
icebp
ja
sub
mov
or
cmp
cwtl
int
xor
imull
add
std
lock
adc
insl
inc
push
loop
or
sub
lcall
cwtl
fwait
mov
pushf
xchg
js,pn
mov
inc
push
jbe
mov
iret
in
stos
and
test
in
gs
ja
and
test
adc
rorb
scas
mov
pusha
mov
dec
jecxz
in
jno
pop
inc
push
jl
pop
cli
mov
mov
or
std
ljmp
sub
sti
imul
shr
data16
mov
shll
pop
fwait
or
jl
xchg
into
sbb
jno
imul
popa
insl
lea
int
insl
jecxz
ds
mov
jp
inc
int
mov
sti
or
in
xor
outsl
pop
adc
popa
mov
test
js
imul
mov
inc
in
xchg
pop
fs
loopne
pop
cmp
xor
cwtl
icebp
filds
ret
sahf
out
lea
dec
sbb
pop
xor
scas
jecxz
and
jo
pop
mov
stc
in
push
sub
rcrb
add
pop
sbb
mov
das
sub
stos
out
inc
call
inc
push
push
scas
sub
xchg
stos
add
pop
xor
out
repnz
movsl
pop
test
xchg
jecxz
sub
clc
and
pushl
mov
mov
cltd
adc
xor
push
fcoml
or
push
xor
inc
sbb
push
call
mov
and
inc
das
mov
lret
mov
and
jmp
imul
push
and
inc
mov
sub
jle
cmp
jg
aad
scas
out
sti
and
loopne
call
xor
and
or
cmpsb
and
rolb
mov
cmp
inc
les
int
sub
mov
loopne
lock
inc
lcall
leave
mov
sbb
push
mov
aaa
mov
and
lock
lods
scas
mov
pop
fdivl
in
call
test
or
cmpb
push
cmpl
sbb
decb
cmp
or
test
dec
scas
sub
xor
jle
jns
ljmp
outsb
lahf
aad
jns
mov
fdivr
into
jmp
sub
psubw
iret
in
out
stos
jecxz
imul
xor
dec
xchg
fmull
or
xor
sub
outsb
iret
sub
cmpsb
clc
scas
inc
xor
jl
sub
movsl
xchg
ret
xchg
xorb
mov
test
hlt
jae
sub
dec
js
stc
dec
or
push
sub
test
les
out
mov
imul
addb
xchg
push
mov
cmp
in
mov
adc
push
push
push
daa
mov
dec
ds
mov
cmp
cmp
push
lods
mov
das
mov
lods
push
mov
cs
aad
dec
sbb
mov
lcall
adc
push
xchg
sbb
out
addl
push
ljmp
mov
mov
sbb
mov
es
dec
pusha
pop
xchg
jg
in
cli
and
sar
fidivs
sub
mov
adc
out
lret
jp
pmulhuw
hlt
mov
fwait
sub
push
sbb
mov
shll
pop
mov
enter
sbb
xchg
jae
int3
sub
mov
fwait
stos
dec
movl
cltd
push
test
shlb
out
shr
mov
loopne
ljmp
das
ficompl
jne
inc
faddl
push
xor
out
fchs
cmc
jecxz
fcoml
xchg
call
repz
jae
lret
jne
push
xchg
add
add
sbb
inc
xor
sbbl
scas
pusha
icebp
hlt
imul
lds
mov
fadds
jp
xor
jecxz
lahf
push
outsl
lods
out
scas
and
push
stos
movsb
push
in
mov
in
and
cmp
ret
adc
lea
push
sub
adc
inc
inc
in
pop
ss
pusha
mov
repz
xor
push
push
xchg
lret
pop
mov
orb
xchg
lock
xlat
mov
nop
push
lea
cmc
jnp
loop
xor
fisubrs
mov
int
aaa
bound
out
mov
add
fiadds
jb
add
push
lret
aaa
cmp
jo
push
in
idiv
loopne
add
iret
je
mov
mov
adc
notl
popa
xchg
loop
pop
insl
lods
pop
stc
insl
mov
nop
mov
imul
mov
xchg
popf
mov
mov
add
arpl
jmp
and
xor
test
add
ret
hlt
rol
out
neg
cmpsl
or
lahf
push
pop
lret
jge
cmp
jns
repnz
cmp
xchg
pop
in
cmp
shr
xchg
clc
fimull
cmp
popf
rolb
das
aas
cld
lret
jge
jb
adc
pop
cli
jg
jmp
pop
pop
loopne
pop
shl
fcoms
push
push
xchg
scas
xchg
cli
xor
push
mov
jge
aad
sub
icebp
pop
stos
in
sbb
or
pop
out
jno
fwait
xchg
aaa
pop
cmp
clc
push
test
fists
inc
push
cs
cmpsl
sub
in
lds
inc
shrl
addb
daa
add
cli
aas
lea
mov
std
inc
popa
filds
cmp
sbb
pop
pop
pop
das
inc
or
test
jns
pop
insb
and
cmp
xchg
out
xor
jg
jecxz
arpl
call
push
cmp
xchg
adc
or
lock
in
frstor
sub
mov
adc
pop
jb
call
mov
dec
jmp
sbb
repz
jge
enter
mov
and
bound
jmp
enter
lret
inc
out
jg
pop
xor
imul
lods
xchg
cmpsb
loop
dec
or
lret
pop
jbe
insb
jb
lahf
and
push
test
jmp
fwait
mov
nop
out
clc
sti
mov
lock
fmuls
leave
and
and
dec
push
jns
je
sbb
adc
imul
imul
sub
test
add
mov
idivb
add
and
or
jle
das
mov
das
sahf
dec
inc
mov
push
cmp
mov
xchg
shlb
insb
cmp
xor
adc
repnz
dec
insb
sub
sbb
push
push
les
out
sbb
adc
mov
jl
xlat
jno
dec
ljmp
dec
shlb
pop
pop
gs
test
inc
jns
push
push
test
cmp
inc
add
add
push
xorl
stos
xchg
jl
daa
je
xor
push
jns
sub
jp
or
cmpsl
mov
jae
jb
cli
or
lret
push
sbb
ret
mov
aad
loopne
cmp
sub
and
xor
xor
rolb
dec
mov
call
movsl
fimull
xor
xchg
andb
rcrl
int
rclb
jg
jl
pop
xchg
pop
cld
mov
xor
cltd
fcompl
sbb
cmpsl
mov
xchg
les
ss
sbb
test
clc
in
inc
aam
sbb
adc
subl
xor
jbe
and
or
push
cwtl
iret
test
int3
jmp
outsl
shl
pop
sbb
jo
stc
shlb
pusha
dec
lds
jmp
sub
add
jecxz
mov
das
lahf
loopne
dec
stos
gs
push
mov
add
es
cmp
loope
cmpsl
push
int
jl
pop
push
jbe
cmp
or
movsl
xchg
stc
inc
out
mov
cmc
or
ret
add
dec
stc
divl
mov
ljmp
fistpll
dec
bound
lret
lods
fstps
rcrl
xor
arpl
xchg
jo
xchg
sbb
ljmp
xchg
cwtl
adc
push
and
cmpsb
and
ds
jnp
test
out
out
mov
aaa
scas
adc
in
cld
test
mov
jl
lock
mov
popf
ljmp
adc
xchg
cld
jl
or
inc
xchg
xor
inc
lds
pop
jle
cs
fstps
das
aam
ret
lods
lret
and
xchg
pushf
add
lods
jmp
pop
push
adc
dec
pusha
push
sub
test
imul
xor
jo
out
xor
jecxz
and
test
lcall
lods
mov
dec
mov
cmp
fldl
xchg
ljmp
lods
adc
pop
cmpsb
popa
call
mov
sub
imulb
cmp
pop
loope
ret
outsb
gs
adc
sbb
sub
xchg
add
mov
fadds
push
fidivrl
cmp
xor
in
stc
lcall
ret
fs
push
jp
inc
add
jb
filds
xchg
nop
dec
das
push
lcall
gs
mov
enter
pushf
cmpsb
imull
aad
hlt
pushf
or
les
push
loop
adc
adc
aad
dec
sbb
mov
cld
incb
call
mov
push
adc
and
ja
mov
inc
fcom
xor
ljmp
push
adc
sbbl
xor
testb
mov
cmp
add
cmp
xchg
mov
pop
dec
mov
inc
xchg
scas
adc
sahf
std
sbb
cmp
jle
or
call
push
add
ss
or
jmp
popa
dec
xor
xchg
xchg
test
bound
jae
lret
pop
adc
shlb
ret
pop
sbb
cmc
or
jge
mov
gs
scas
mov
test
sbb
pop
or
arpl
xchg
call
add
fistps
push
mov
sbb
fists
es
cld
or
adc
push
imul
mov
mov
popf
pop
js
out
pop
cld
cmp
add
std
ds
dec
aam
push
test
jbe
imul
loop
dec
cs
sub
mov
or
dec
mul
cmp
push
lds
adc
inc
mov
push
mov
ret
loopne
xchg
xchg
add
inc
shll
mov
mov
jp
int
or
pop
sbb
mov
cld
cmpsl
pop
sahf
inc
pop
pop
lods
dec
test
ret
adc
insb
ds
and
sbb
in
and
sub
ja
jl
and
fistl
mov
mov
inc
jge
mov
stos
xchg
inc
push
or
imul
dec
outsl
cmpl
push
lea
dec
push
ret
stos
andb
mov
jno
xor
lret
popa
push
sarl
lods
loopne
movsl
cmpsb
push
push
cmp
sub
outsb
outsl
or
in
mov
inc
adc
lds
bnd
xchg
jp
jne
scas
push
int3
call
xchg
dec
shl
cwtl
inc
icebp
or
mov
out
jle
lret
leave
adc
mov
push
imul
jb
rdmsr
and
ret
adc
inc
adc
seta
inc
testb
fists
mov
mov
xchg
pop
dec
and
int
ret
shl
sub
mov
int3
inc
cmpsl
inc
mov
xchg
xchg
cmp
or
add
xchg
ljmp
loope
sbb
push
cmc
mov
push
jge
xor
int
pop
push
leave
or
xor
xchg
inc
scas
adcb
xchg
cld
mov
clc
adc
mov
pop
test
cwtl
inc
jmp
and
cld
orl
xlat
and
call
clc
jmp
push
cwtl
sub
out
and
mov
not
aas
xor
mov
pop
mov
leave
pop
inc
jge
insl
bound
fwait
and
sahf
clc
or
mov
cmp
pop
shlb
mov
adc
and
mov
sub
xor
mov
out
mov
leave
inc
and
cmp
jp
fmull
pop
jb
repnz
ror
mov
jmp
sub
incl
mov
in
push
xchg
cld
xor
jp
xchg
jno
jne
cwtl
lods
sub
pop
data16
lea
push
dec
pop
dec
mov
mov
jno
ret
lcall
xor
outsb
mov
repz
lcall
cs
xlat
mov
ret
xor
aad
sbb
rcl
xchg
or
sbb
push
lods
adc
popw
ljmp
jo
dec
dec
cmp
sbb
adc
mov
mov
sub
xchg
push
in
inc
popf
fwait
js
iret
lahf
out
push
in
int3
mov
push
xor
ret
jae
test
lret
leave
add
test
clc
sub
push
addr16
es
rcrb
cmp
jne
jne
or
sub
adc
adc
add
mov
or
mov
mov
xorb
lea
mov
or
aas
mov
add
repnz
mov
adc
rorb
lcall
adc
clc
xlat
mov
das
push
lock
or
in
repz
stos
jne,pt
loopne
inc
push
or
ds
cmp
pop
push
daa
lds
cmp
cmp
lods
fwait
xchg
pop
add
xchg
leave
push
inc
pop
jno
into
test
cmp
scas
mov
sub
loopne
pop
mov
pop
sbb
sbb
inc
and
shlb
jae
push
es
lods
dec
fstpt
inc
fsts
int
sub
cmp
inc
sub
inc
loope
mov
in
jge
dec
addr16
into
into
movsb
or
cmpsl
xchg
cmpsb
outsl
pop
pop
xor
lds
lea
xor
push
into
xor
xchg
movsl
xchg
aad
nop
cli
xchg
adc
mov
sbb
cmc
cli
mov
dec
ja
rcrl
or
sti
sbb
or
aad
dec
or
inc
xor
sub
lcall
mov
aaa
dec
shrb
mov
push
add
jp
inc
inc
cmp
je
xor
ja
popl
sbb
pop
xor
sub
test
sbb
dec
xor
cmc
dec
mov
mov
mov
cld
jbe
scas
push
cmp
dec
mov
fisubl
scas
pushf
push
push
fistpll
add
jbe
fmull
pushf
dec
insb
pop
add
aad
lret
out
cld
mov
xchg
into
adc
lods
fstps
std
adc
ror
mov
fildl
ds
adc
jno
cltd
pop
je
sub
add
mov
roll
add
enter
call
pop
lods
cmp
mov
movsl
cltd
fwait
lahf
jne
jmp
out
cmc
xor
push
xor
rcr
rorl
xchg
dec
test
repz
adc
fwait
aam
out
popa
into
sub
loope
out
add
rcll
push
xor
lret
xchg
daa
mov
xchg
mov
add
jl
mov
cltd
daa
xchg
out
and
icebp
and
mov
sti
andl
sbb
int3
sbb
bound
inc
cmc
mov
into
mov
incl
pusha
sahf
mov
loope
xchg
mov
sahf
mov
and
lret
popf
jnp
pop
fmulp
call
repnz
sbb
repnz
jmp
outsb
xchg
test
xor
cli
out
xchg
push
push
xor
movsb
xchg
mov
imul
popf
les
in
daa
jbe
es
adc
pop
mov
push
add
les
mov
repnz
insb
int
cmp
ja
inc
cwtl
pop
xlat
in
inc
scas
rorl
fisttps
fcomp
and
iret
lret
mov
mov
mulb
dec
sahf
sub
cltd
fsubrl
jns
rclb
shll
pushf
test
pop
lods
jecxz
call
daa
xchg
and
stos
push
dec
les
adc
or
bound
das
mov
test
jp
xor
outsl
inc
in
push
jno
cmpsl
call
push
cmpsl
push
jle
mov
adc
jp
and
into
push
lds
jmp
push
fidivrl
push
add
mov
sar
lahf
or
mov
mov
sahf
sub
movsb
stos
xchg
imul
popf
subl
jo
inc
ffree
ja
lds
push
lods
add
addb
insb
enter
test
and
fmulp
mov
and
iret
xchg
push
mov
push
loopne
pop
cmp
sub
sbb
jb
add
out
mov
outsl
cwtl
out
or
out
mov
mov
pop
and
clc
xor
xchg
mov
push
or
and
add
jp
xchg
dec
xchg
mov
pop
fildl
or
sti
icebp
cmp
inc
jle
js
sbb
lods
icebp
popa
sbbb
cmpsb
adc
or
adc
imul
lahf
lock
push
fisttps
mov
loopne
int3
mov
leave
subl
jl
jmp
lods
mov
dec
insl
xchg
jle
xchg
or
xchg
stos
push
call
sahf
test
xchg
ret
mov
add
mov
xchg
lret
dec
shll
repz
push
ja
sub
fxch
xor
or
add
lods
inc
sbb
jbe
adc
or
xor
jne
jbe
scas
xchg
and
cmp
lods
mov
test
or
add
imul
add
xor
repnz
in
stos
cmc
clc
jbe
sti
adc
add
push
xchg
loopne
mov
aam
push
js
inc
cli
cld
dec
add
push
pop
jle
popa
neg
mov
push
rcrb
pusha
mov
stc
jb
mov
sbb
mov
jb
test
and
push
xor
jnp
addr16
and
pusha
add
inc
movb
fs
cmp
lret
int3
imul
mov
pop
das
xchg
mov
and
push
movsl
cmp
dec
or
push
sarl
movsb
mov
xchg
and
push
ss
xchg
jbe
js
cmp
cmc
stos
aad
add
xor
jle
sbb
out
mov
fs
lods
aas
out
xlat
ljmp
pop
mov
fwait
xor
adc
inc
aaa
pop
mov
test
pop
pop
fbstp
imul
pop
stos
xchg
enter
outsl
dec
jo
pop
data16
mov
sahf
je
cltd
sbb
cld
jecxz
ja
popf
div
or
fidivs
loope
and
nop
scas
inc
push
out
stc
das
xor
xchg
int
ljmp
lock
and
mov
gs
leave
leave
mov
add
pusha
call
pop
mov
mov
or
adc
cmp
cli
repnz
inc
in
rcr
fisubl
fnstcw
into
in
aam
push
sti
or
and
arpl
test
mov
jnp
mov
outsl
hlt
pushf
push
jmp
arpl
sbb
rcll
xchg
sahf
cmp
sbb
sbb
outsb
sarl
ficoml
sbb
fisttps
rolb
daa
outsl
loop
push
bound
sahf
scas
aas
sub
cmc
sub
inc
jp
sar
lea
xchg
stc
push
dec
ss
ss
push
sbb
inc
xor
jnp
dec
stos
fsts
and
dec
lock
iret
scas
and
dec
fistpl
loopne
sahf
mov
jl
jb
loop
lods
jge
pop
int3
ss
ja
lret
fisubl
lods
adc
jmp
pop
es
cmp
daa
sbb
inc
out
int3
mov
into
aam
lock
insb
jns
pop
ds
sub
outsl
xchg
pop
lods
in
inc
jns
insb
jmp
cpuid
inc
mov
scas
in
xor
jb
mov
push
and
mov
imul
pop
xchg
aad
xchg
xor
inc
ljmp
mov
jg
pop
pusha
mov
or
lret
popa
push
sub
lret
clc
mov
push
mov
mov
adc
dec
xor
sub
push
or
xlat
lahf
xchg
sub
sahf
test
es
sbb
ret
stos
test
sarb
push
enter
mov
xchg
jp
and
aas
aas
int3
fisttpl
fdivrp
inc
fcoml
sti
jle
bound
ljmp
or
movsl
mov
cwtl
daa
xchg
jmp
and
and
test
scas
xchg
imul
xchg
dec
test
testl
repz
add
jo
cmp
adc
jb
push
push
push
cmp
inc
call
loopne
scas
repnz
imul
jge
pop
inc
test
xor
sub
mov
jmp
mov
mov
in
cmp
stos
and
pop
sub
xchg
sub
mov
nop
cmp
xor
js
das
sub
sub
add
push
jns,pt
sub
cs
popa
imul
and
int3
fucomp
or
mov
fmuls
scas
adc
inc
push
add
jno
daa
mov
mov
lds
fwait
inc
sahf
int
insl
push
lods
imul
testl
lods
add
aaa
pop
mov
clc
mov
mov
pusha
cmpsl
jbe
mov
mov
hlt
lea
push
test
ss
mov
inc
andb
bound
push
mov
pop
push
inc
xor
pusha
dec
insl
in
not
mov
xor
pop
cmp
xor
int3
pop
mov
dec
cltd
ss
inc
pushf
insl
jb
cmp
xchg
clc
mov
cmp
clc
cmp
fcmovnb
jp
xor
push
push
js
clc
inc
pop
in
mov
fsubs
and
xor
ljmp
cmp
ss
pusha
jne
push
lock
mov
fistps
daa
inc
adc
jmp
test
mov
ror
icebp
hlt
dec
dec
int
fucomp
fbld
and
pop
sub
xor
test
aaa
xor
cmp
fwait
aam
out
xchg
enter
sbb
mov
push
or
das
mov
dec
xor
cmp
or
std
scas
jecxz
jl
or
es
test
or
cmp
loop
cmp
inc
mov
and
rcl
jmp
ja
xchg
js
cmp
sub
xor
nop
xor
xchg
ljmp
adc
push
xor
aas
aaa
push
stos
or
or
outsb
outsl
push
inc
xchg
aas
xor
addr16
add
cmc
pop
aas
xchg
sub
ret
mov
dec
lcall
dec
repz
dec
jge
pusha
aam
leave
jp
cmp
sbb
mov
rorl
xor
xor
hlt
lcall
cmp
mov
dec
arpl
mov
int3
fcoms
fstpt
insl
sbb
push
sbb
dec
cmp
xchg
dec
in
mov
mov
or
push
inc
clc
xor
in
cmpsb
mov
pop
sbb
ss
icebp
enter
jbe
test
rcll
inc
cs
xchg
sar
test
pushw
add
pop
or
add
lret
iret
cmp
insb
lcall
icebp
repnz
insl
lds
cs
inc
mov
and
sarl
int3
xor
lcall
pop
outsl
outsb
push
popf
push
mov
jmp
js
test
pop
ja
push
lcall
out
push
inc
push
sbb
dec
push
adc
push
mov
ljmp
xlat
adc
and
pop
aam
inc
imul
sub
xchg
jo
mov
sbb
divl
sub
jge
mov
pop
and
mov
aam
daa
mov
or
cmpsb
or
fwait
call
gs
mov
ror
fldcw
jne
mov
leave
imul
mov
xchg
ja
js
xchg
dec
push
test
sbb
stos
fdivl
es
push
sub
in
sub
adc
or
cwtl
hlt
mov
add
cmp
cltd
push
roll
cs
sub
test
out
adc
push
and
stos
dec
nop
iret
pushf
inc
aad
jae
mov
add
jo
xorb
jne
sub
push
jo
es
test
daa
mov
mov
mov
fistps
pop
out
lcall
jbe
dec
rorb
mov
std
lock
jle
mov
out
push
daa
std
sbb
sub
aas
and
divl
xor
fs
stc
test
pop
sub
mov
ret
add
dec
inc
and
mov
test
mov
bound
mov
jge
shl
das
pop
lret
add
das
lods
scas
xchg
mov
mov
iret
mov
jl
lcall
xchg
sub
cmp
mov
xor
mov
shlb
outsl
cmp
mov
jno
add
or
ret
loope
enter
pop
shll
adc
pop
and
push
push
mov
push
insl
cld
pushf
push
lret
pop
pop
insl
call
loope
les
out
nop
sbb
xor
int
lret
incb
rcrl
nop
test
into
add
jmp
clc
add
jp
mov
jb
ficompl
xor
scas
sub
lods
in
push
loop
jg
leave
jo
sbb
mov
pop
pop
and
or
jge
jle
sti
push
mov
adc
jae
mov
cs
movsb
jns
repnz
jle
scas
jmp
test
outsb
out
mov
mov
or
lods
cmp
push
imul
jge
ljmp
inc
cli
mov
cmp
lds
xchg
fcoml
rorb
push
pop
imul
daa
repz
inc
mov
or
mov
ficompl
mov
add
cli
xchg
cld
dec
pushf
and
es
sub
or
insl
movsb
jmp
jns
cmpsb
rorl
push
mov
adc
repnz
push
and
js
in
movsb
negb
loop
cmp
jne
popl
push
mov
fimuls
xchg
rcr
fcompl
outsb
jbe
mov
cli
shrl
repz
sbb
or
or
inc
ret
xchg
movsl
cmp
push
add
mov
dec
dec
movsl
dec
incb
mov
xchg
sbb
pop
lret
mov
push
cmpsb
loope
push
fsubl
scas
cmpsl
cmp
jg,pn
int3
and
je
or
push
mov
or
lods
xchg
push
fdivl
cmp
testb
in
testl
add
or
aas
inc
fnstenv
mov
mov
add
lcall
fists
test
add
shr
mov
adc
inc
subl
scas
subl
gs
aam
in
les
aaa
ja
mov
fs
cmp
dec
addr16
mov
dec
mov
inc
push
jbe
nop
fisubrs
push
jne
jno
mov
popf
push
repz
scas
sub
jae
or
mov
pop
pop
mov
mov
xor
test
jne,pn
shll
mov
fcmovnbe
scas
jbe
cmc
inc
ret
jp
loop
rorl
lods
adc
pop
es
mov
sahf
xor
das
fldl
jae
sbb
sti
pushl
sbb
and
insb
adc
repnz
xor
jl
icebp
inc
add
xor
mov
adc
out
xchg
sbb
je
ret
mov
in
pusha
test
sarb
push
in
push
aad
jns
push
push
popf
cmp
nop
pop
ja
xor
lcall
fiaddl
inc
sub
dec
pop
inc
lods
sarb
and
jae
hlt
iret
and
ja
add
aad
inc
test
lahf
inc
xor
cmpsb
jl
cwtl
mov
pop
icebp
mov
hlt
fcoms
scas
addr16
pop
repz
fdivl
mov
or
dec
movsb
es
add
inc
fwait
dec
pop
cs
idivl
xor
loope
pop
movsb
aas
stc
ds
xchg
pop
jne
sbb
or
in
jecxz
mov
ss
cltd
fwait
leave
inc
pop
ja
sub
in
inc
loop
xor
cmpl
xchg
inc
in
dec
jnp
pop
xchg
es
inc
aad
jge
daa
sub
arpl
loopne
mov
xor
ja
sahf
fldt
add
das
mov
mov
sti
dec
test
repz
mov
add
pushf
adc
cld
adc
test
cmp
mov
in
stc
sti
dec
pop
daa
xor
cltd
cltd
xor
or
adc
mov
pop
sbb
outsb
mov
jns
insb
ret
xor
leave
jbe
aaa
jns
xchg
push
sub
inc
int3
sbb
fdivl
inc
cld
dec
push
pop
or
push
inc
jnp
sub
xchg
sbb
faddp
inc
hlt
mov
in
or
dec
push
bound
add
sbb
pop
test
stos
inc
adc
pop
xchg
inc
dec
or
mov
cmp
pop
and
and
inc
aam
pop
or
sbb
ret
lret
das
addb
ds
pop
lods
jmp
cmpl
cmpsl
fst
push
sbb
pop
testl
cmp
push
cmpsb
cmpsb
xchg
lahf
mov
pop
xchg
fstpt
add
cmp
mov
insb
icebp
mov
dec
movsb
jb
faddl
adc
rorl
inc
fnstenv
xchg
sbb
cli
add
in
mov
mov
test
push
jecxz
pushl
jp
xchg
add
jle
out
jecxz
fiadds
leave
ds
idiv
inc
lock
add
dec
inc
das
leave
rcll
lcall
sub
test
idivb
icebp
dec
ja
pop
pop
inc
xor
and
lock
loop
mov
les
pop
in
enter
jp
mov
cmp
adc
ror
push
inc
repz
mov
pop
test
mov
loopne
test
cmc
jo
mov
push
andl
in
pop
jno
cmp
push
lods
dec
ret
push
shll
in
lret
xor
sar
sbb
or
sub
jle
mov
lods
add
ljmp
cwtl
xlat
mov
mov
sbb
cmpsb
dec
stos
mov
pop
xor
stc
ds
sti
xchg
mov
lea
test
jle
push
movsb
add
test
shr
jno
iret
add
mov
fsubr
mov
push
sahf
out
jmp
jecxz
push
cmpsl
mov
cmc
push
push
lods
cmpsb
filds
inc
lret
and
mov
testl
xor
jge
idivl
and
lahf
adc
inc
dec
xchg
push
stos
fstps
fnstcw
push
lock
mov
jmp
arpl
outsl
mov
scas
jbe
push
pop
loop
pop
xlat
mov
repz
ficomps
outsl
jp
aas
cwtl
fadds
dec
jns
jbe
mov
addl
sahf
push
pop
outsl
jbe
inc
mov
or
push
xchg
cmp
pop
pushf
ja
cmpsb
rcll
mov
roll
push
xchg
fsts
cmp
jl
addr16
jbe
mov
mov
pop
test
stos
mov
jne
test
sub
mov
aaa
jg
xorl
mov
scas
out
pusha
xchg
cmpb
sub
lea
adc
sbb
jns
cmpsb
icebp
ficoml
les
test
insb
sbb
jle
ret
mov
pop
mov
pop
jae
icebp
clc
fimull
mov
add
es
stos
loopne
jle
ret
mov
sbb
push
mov
daa
nop
sbb
mov
cltd
add
fwait
sbb
xchg
or
in
mov
mov
icebp
sbb
mov
mov
xor
sti
sub
rcll
mov
sahf
cmp
adc
sub
xchg
out
call
imul
inc
daa
leave
dec
nop
icebp
popf
push
add
add
adc
and
cmpsb
lods
sub
jae
rdtsc
mov
mov
sbb
and
mov
jne
fs
test
and
lods
adc
jle
push
push
lea
push
mov
push
mov
rcrb
jl
popa
ret
dec
sub
inc
mov
sub
mov
xlat
nop
sar
out
adc
pop
pop
add
mov
xchg
pusha
mov
or
and
addr16
mov
add
pop
rol
movsb
insb
fmull
cmc
jae
out
repz
movsb
and
cmp
mov
xchg
or
add
jnp
aam
shl
and
adc
pushf
and
add
xchg
xchg
shll
mulb
lea
mov
add
or
std
daa
in
inc
mov
xchg
inc
jnp
in
cmp
mov
sub
or
popf
sub
cwtl
cmpsl
sub
jbe
fsubrl
fstpl
loope
addb
push
fnstsw
sarl
cli
pushf
sub
stos
pop
mov
fcoms
jmp
cmp
push
outsl
inc
hlt
mov
adc
mov
xchg
ja
inc
pop
inc
cs
popf
das
push
push
jns
repz
lock
mov
test
xor
ja
xor
or
push
sar
dec
or
ljmp
xchg
shlb
mov
mov
mov
arpl
movsb
arpl
std
divps
mov
fnstsw
daa
mov
pop
adc
enter
imul
or
out
adc
sbb
test
push
stc
in
xlat
lret
or
out
mov
test
cltd
out
loopne
mov
push
adc
adc
sub
jge
stc
jp
push
pop
jl
loopne
pop
xor
sahf
pop
retw
ja
pop
sti
aaa
pop
cmpsl
push
data16
scas
jp
xchg
mov
mov
jecxz
xchg
jecxz
jb
push
or
scas
xlat
inc
xchg
mov
imul
push
cltd
divb
inc
scas
add
sbb
in
push
iret
jp
ret
jo
mov
adc
adc
es
and
mov
inc
dec
xor
push
out
fcoml
jne
nop
std
add
fisubl
je
jmp
movsl
sahf
ljmp
jg
cmpsb
lods
sub
shl
add
repz
cwtl
scas
or
ficoms
dec
xchg
and
in
mov
xchg
lret
sub
lea
inc
cmp
xor
cld
lods
mov
jp
int3
popa
and
cmp
mov
dec
decb
pop
mov
cmpsb
and
pop
fcomip
scas
imul
push
xchg
dec
fwait
icebp
addr16
cmp
fs
sti
sub
call
sub
cmpsb
or
aam
iret
cmpsb
mov
push
or
push
lahf
adc
out
outsb
push
mov
clc
sub
lahf
sbb
shlb
cmpsb
enter
jnp
sub
fisubl
push
pop
mov
push
or
lock
lahf
inc
jnp
aaa
imull
add
xchg
push
bound
mov
add
ljmp
jno
mov
xor
lea
test
in
sbb
subl
stos
mov
or
leave
mov
stos
cs
iret
rcrl
and
sbb
xor
fistpll
fildll
mulb
jp
sbb
and
mov
nop
pop
mov
aas
outsl
lcall
and
cmp
stos
pop
mov
cmp
mov
sbb
adc
test
imul
push
das
inc
rorl
ds
ja
scas
inc
aaa
in
mov
mov
dec
or
imul
in
push
inc
adc
cmpsl
mov
jne
insl
incb
inc
out
adc
inc
jns
dec
cmc
rol
in
sbb
jle
mov
jae
adc
dec
or
das
jns
adcb
dec
jl
jae
ficomps
mov
ret
dec
mov
mov
cld
js
add
pop
add
jecxz
loopne
pushl
cmp
adc
movsb
aaa
bound
sbb
popa
repz
jecxz
push
or
sti
sti
cmp
jns
sub
cmpsl
je
mov
push
cwtl
mov
faddl
in
mov
sbb
jno
sub
xor
mov
subb
mov
or
jl
fwait
cmp
push
cs
mov
insb
mov
xor
fmuls
mov
dec
ja
sbb
iret
ret
mov
inc
insl
sbb
xchg
ds
push
in
ja
push
push
inc
movb
mov
aas
cmc
pushf
ja
cld
cmp
pushf
mov
sbb
cli
mov
inc
lods
hlt
dec
add
negl
ja
dec
fimuls
jecxz
js
sbb
pop
push
sub
xchg
cld
stc
inc
xchg
aas
cld
or
sti
add
mov
fstl
js
add
xchg
mov
loopne
stos
sbb
clc
into
push
jnp
adc
in
or
ret
push
mov
and
adc
mov
movl
mov
lcall
jmp
inc
es
add
mov
xor
stc
dec
sti
test
sbb
test
mov
lcall
mov
rcrl
adc
pop
sub
jp
dec
xor
mov
in
cmc
xchg
das
aas
sub
pop
inc
fidivrs
nop
test
popa
jb
dec
pop
sbb
add
stos
sbb
dec
dec
push
in
ret
dec
add
jge
or
dec
jo
adc
iret
push
movsb
cmp
sub
sub
mov
jg
mov
inc
inc
sub
jns
inc
jle
mov
inc
dec
int3
lock
sahf
sbb
movsb
sbb
pop
push
jecxz
and
addr16
pop
imul
ss
lods
jne
push
jnp
movsb
inc
andl
cli
pop
out
xchg
dec
aaa
mov
sub
es
repz
and
flds
jge
fsubl
cmpsb
pop
mov
dec
dec
sbb
xlat
cmp
inc
and
xor
hlt
jno
mov
jno
or
fidivrl
sahf
mov
add
clc
sbb
and
int
fwait
mov
movsb
sahf
dec
xchg
xchg
loope
repz
xchg
enter
das
fcmovbe
jmp
fiadds
sahf
cmp
xor
push
outsl
cmp
lock
mov
outsb
xor
aaa
movsl
test
orl
shl
push
lret
jmp
jo
out
pusha
and
jmp
add
pop
bound
imul
je
lds
rolb
push
fsubs
dec
xor
movsb
stos
je
leave
mov
xor
sub
popf
adc
es
add
lcall
pop
mov
dec
mov
adc
push
js
ds
stos
scas
xchg
jae
dec
sbbl
bnd
shll
jno
sbb
and
jbe
clc
push
mov
repnz
xor
inc
fadd
jg
mov
insb
mov
dec
insl
push
and
or
jne
xchg
fmuls
sub
into
ret
add
gs
loopne
mov
mov
ljmp
cmp
ljmp
je
shll
lahf
pushf
xor
push
divb
enter
push
je
lock
stos
loopne
jns,pt
xor
imul
popf
cmp
loop
push
sub
inc
mov
or
pushf
int3
mov
ret
cmpsb
outsl
cmp
pop
fcoms
jg
jnp
jae
shl
fimuls
add
clc
out
scas
jmp
cwtl
test
push
mov
mov
pop
add
or
mov
pop
dec
push
imul
neg
cwtl
cli
in
xchg
fucomi
cmp
mov
pop
mov
cmp
mov
lock
xchg
mov
or
cmp
xchg
push
xchg
dec
add
vfmsubadd231pd
push
jbe
aaa
xchg
xor
imul
add
shll
xor
or
popa
js
push
imul
or
xorb
jg
push
add
loop
or
mull
jmp
dec
xchg
mov
imul
nop
and
jo
xor
xchg
gs
sbb
mov
or
cmp
or
lods
dec
rcl
jl
idivb
inc
xchg
jecxz
leave
and
and
fwait
mov
dec
lods
lods
jo
inc
sub
mov
or
inc
insb
xor
pop
mov
stos
aad
dec
loop
rcll
pop
add
xchg
pop
ja
pop
xchg
push
mov
subb
fidivrs
lods
imul
mov
int3
lock
add
das
xchg
lods
adcl
pushf
movsl
dec
mulb
jns
mov
insl
pop
xchg
loop
cld
iret
mov
fsubrl
into
insl
sbb
incl
mov
mov
mov
mov
or
das
scas
jmp
stos
xor
data16
xchg
cmp
rcrb
lods
out
or
subl
jle
cltd
dec
mov
nop
andb
adc
mov
aad
or
push
ret
outsl
icebp
jne
jns
xor
sub
lods
sub
pop
shl
nop
sbb
or
pop
dec
movb
ret
push
das
cmpsb
mov
sbb
sbb
and
and
aaa
fiaddl
mov
jp
mov
sbb
pop
sti
pop
sbb
push
popl
or
enter
in
pop
scas
dec
sub
sbb
mov
in
test
arpl
adc
mov
jo
aas
stos
xchg
jmp
push
mov
filds
icebp
push
xchg
xor
in
pop
add
stc
mov
mov
bound
sbb
out
pop
movsl
insb
sbb
int3
ja
xchg
pop
or
mov
and
rcll
sub
xor
lcall
mov
jmp
js
mov
icebp
ret
cs
mov
call
data16
and
test
pop
pusha
test
xorl
scas
stc
rcr
shrl
scas
loop
sti
test
loop
hlt
sbb
mov
push
fsub
arpl
std
jbe
fmull
mov
daa
aad
xchg
test
scas
imul
jno
and
scas
inc
fpatan
mov
lret
ret
and
in
test
inc
mov
inc
adc
mov
or
ja
gs
enter
push
mov
or
adc
in
dec
dec
ja
gs
push
fdivp
dec
cmp
inc
enter
jmp
mov
int3
loopne
loop
gs
pop
icebp
jno
xor
repz
icebp
js
icebp
movsb
cmp
pop
cmc
lahf
dec
mov
sarl
jecxz
js
push
movsb
or
aad
cwtl
dec
scas
push
aad
mov
out
and
adc
sub
mov
dec
and
sbb
ret
inc
mov
repnz
push
addl
mov
stc
add
xchg
insb
gs
negb
lret
enter
fimull
lret
mov
lock
repnz
in
addr16
or
adc
or
push
dec
cmp
in
cmpl
jg
xchg
push
xchg
mov
cmp
mov
cltd
mov
jle
ds
fcoms
rcl
sbb
xchg
adc
xor
test
xchg
xchg
adc
bound
jecxz
and
xchg
sarb
dec
ret
in
leave
mov
and
insb
add
cmp
insb
pop
ljmp
add
cli
arpl
sti
mov
inc
into
rcrb
mov
pop
mov
lret
jle
mov
sahf
or
lahf
scas
movsl
js
xchg
xchg
repnz
js
andl
sub
jae
fldcw
xchg
pop
cmp
pop
repz
xchg
stc
adc
push
and
push
adc
or
fs
add
xchg
imul
mov
insl
fimull
scas
lods
xlat
nop
daa
xchg
xor
jae
daa
pusha
mov
stc
icebp
adc
ret
jae
jecxz
shrl
mov
mov
or
push
push
add
cltd
cmp
pop
sbb
imul
shrb
push
or
into
clc
scas
cld
sbb
ss
fidivrl
scas
dec
out
pusha
ret
sbb
imul
mov
sub
fs
jmp
mov
test
mov
push
out
push
lock
jns
adc
popa
mov
cmpsb
cmpsl
mov
mov
mov
into
lret
xor
lcall
scas
cld
cmpsl
or
push
lods
addr16
mov
mov
inc
sahf
add
pusha
les
inc
paddsw
repnz
stos
fidivrl
insb
cmpsb
inc
roll
sbb
jp
xor
cmp
mov
das
pop
xchg
out
sub
xchg
mov
pop
sbb
and
xlat
fmuls
mov
lret
and
and
jmp
cs
or
inc
xlat
jb,pn
xchg
lahf
xor
jg
les
sbb
add
inc
shlb
mov
ret
jno
xor
repnz
add
mov
inc
push
sub
fs
cmc
or
add
and
add
nop
jge
orb
stc
imul
push
pop
fdivl
repz
pop
test
pop
daa
push
jmp
push
or
popa
stos
inc
inc
js
mov
ljmp
call
cmpsb
dec
sarl
xchg
aas
stos
adc
mov
js
lock
mov
orl
or
stos
xor
in
int3
mov
xchg
popa
insb
adc
cmp
push
arpl
orb
sbb
rcrl
xchg
movsl
xor
mov
test
sub
hlt
xor
and
sbb
fwait
push
cmp
mov
adc
sarb
shlb
push
sbb
in
hlt
dec
imul
jns
dec
pop
sbb
mov
add
ljmp
iretw
sbb
sbb
outsl
pop
dec
push
push
pop
cmpsb
sub
scas
jne
jo
jp
mov
adc
jns
or
adc
js
xchg
adc
fisttps
js
dec
mov
push
jne
push
mov
sahf
sahf
call
push
cs
push
outsb
jge,pt
jecxz
sub
sub
sbb
subl
iret
mov
popa
std
dec
sub
repnz
cmpsl
sbb
mov
jno
icebp
dec
pextrw
adc
ss
mov
enter
mov
mov
push
xlat
sysret
and
loop
mov
cwtl
addr16
mov
jle
adcl
std
das
xchg
fcmovb
out
mov
xor
ss
loope
pop
mov
inc
xchg
out
sbb
inc
add
out
inc
cmpsb
jg
push
popf
xchg
push
inc
scas
inc
dec
xchg
xchg
cmp
xchg
in
call
shll
push
hlt
inc
out
or
iret
mov
out
sub
mov
jmp
pmaddwd
sahf
das
pop
js
in
daa
in
cmp
adc
pop
mov
sbb
rcll
repz
xor
lret
xchg
loopne
adc
enter
dec
clc
mov
loope
cli
add
jae
and
pusha
pop
mov
mov
std
xchg
pop
push
add
fisttps
pop
scas
xor
int
mov
jge
and
xchg
fcompl
loope
sbb
icebp
pop
fs
orb
mov
sbb
xor
xchg
add
in
or
ret
xchg
sbb
mov
adc
pushf
roll
xor
mov
pop
mov
loopne
push
nop
roll
push
jl
sbb
jno
das
pop
roll
mov
mov
jbe
es
fiadds
cmp
lret
sub
mov
dec
movsb
sub
dec
push
test
shr
ljmp
push
test
pushf
cmp
mov
gs
xor
stos
inc
push
cmp
add
jnp
pop
mov
mov
rorl
stos
mov
cmp
pop
nop
pop
call
sub
mov
rcrb
fsub
jecxz
setne
ret
adc
lock
sub
mov
and
repnz
mov
lods
scas
cld
inc
roll
inc
xchg
pop
rol
mov
sub
mov
mov
or
cwtl
push
adc
imul
xchg
mov
out
pop
jg
out
mov
dec
jne
push
mov
lock
adc
scas
push
pop
sub
in
dec
jg
dec
iret
data16
mov
orl
test
sahf
cmp
or
xor
loop
fidivl
push
hlt
mov
into
push
cs
adc
scas
aam
stos
sub
cmp
and
pop
mov
stos
lods
insl
fldcw
mov
negl
mov
or
lret
leave
sub
fisubrs
rorb
sub
fwait
rolb
incb
mov
push
in
pop
pop
pop
outsb
mov
call
fstpl
mov
or
ret
repnz
sub
mov
repz
enter
dec
test
testb
shrl
sub
add
inc
sub
inc
js
loop
jl
leave
dec
and
fildll
dec
mov
jnp
dec
shrl
push
scas
pop
ljmp
lret
cmp
cmpsl
mov
pushf
mov
fisttpll
lret
inc
shll
jns
mov
inc
and
push
call
jae
add
outsl
testl
jnp
ja
lret
jp
fnstenv
lret
jbe
int
outsb
icebp
pop
push
mov
stc
mov
lret
add
mov
stos
cmp
outsl
adc
aas
fsubrs
inc
xor
imul
dec
in
insb
mov
adc
mov
adc
xchg
dec
mov
push
pop
push
arpl
leave
cmc
push
lahf
sbb
add
cli
les
mov
pop
jl
mov
out
imul
ljmp
leave
dec
aad
inc
and
cmpsb
mov
mov
sub
and
mov
mov
mov
add
les
push
lea
cmp
adc
dec
fidivrs
or
in
icebp
add
pop
int3
and
imul
add
mov
inc
ret
pop
pop
insl
adc
outsl
ja
sbb
and
or
std
outsb
fs
jb
sbb
add
push
sti
or
mov
add
fisttpl
xchg
aad
divb
adc
mov
out
pop
pushl
sti
lods
insb
mov
and
pop
in
loopne
dec
std
sbb
fs
adc
pushl
addb
leave
idivl
mov
fstpl
clc
xchg
fisubs
out
mov
xor
aas
hlt
xchg
sahf
aaa
jno
jae
ss
cltd
cmp
dec
ljmp
or
add
shll
clc
sbb
std
and
fstl
jo
icebp
mov
mov
push
dec
aas
scas
in
inc
stc
xor
xor
mov
sbb
data16
adc
mov
dec
ja
imul
mov
dec
fidivl
rclb
mov
fcoms
mov
pop
push
mov
sub
hlt
out
adc
push
stc
dec
mov
push
adc
xchg
popf
mov
cmp
adcl
push
arpl
push
aam
dec
arpl
jbe
sbb
xor
loope
mov
xor
xor
jecxz
or
nop
mov
xor
repnz
sub
ret
and
enter
mov
jp
in
ljmp
mov
xor
loopne
mov
xchg
push
or
sarl
pop
ficompl
jl
xchg
outsl
sbb
in
inc
cmpsl
insb
aas
aad
push
add
jge
es
add
push
lea
lret
and
hlt
leave
in
xor
out
adc
repnz
popf
int3
push
adc
mov
in
and
filds
shlb
sbb
sub
mov
in
push
sub
mov
into
mov
movsb
fcompl
hlt
jecxz
nop
mov
mov
mov
pop
pop
fldl
mov
xor
xchg
push
out
test
fsubrl
enter
dec
lcall
movsb
pop
push
cmp
push
xchg
jmp
jae
stos
imull
mov
mov
sahf
inc
mov
das
ret
adc
mov
lret
or
dec
mov
aas
mov
clc
fcmovbe
ss
pop
xchg
inc
pop
stc
push
pushf
sbb
in
push
sti
push
and
sahf
movsb
sub
fidivl
dec
gs
call
mull
mov
sarb
ljmp
cs
das
sub
jge
lahf
pop
mov
or
loopne
cmpsb
xchg
insb
rcrb
and
rclb
test
test
cmpsl
xor
mov
xchg
mov
sti
push
sahf
ficomps
push
ljmp
fwait
outsl
pop
sub
jmp
jno
loope
and
and
xor
stos
push
push
ret
xor
dec
pop
mov
sbb
pusha
xchg
sub
repz
pop
mov
pop
cs
inc
repz
pop
push
and
idiv
push
jae
popf
test
push
ret
cltd
cmp
sahf
shl
push
and
mov
mov
fistps
dec
js
mov
inc
test
cli
jo
mov
pop
addb
mov
jnp
or
pop
inc
repz
sarb
pushf
mov
push
dec
sbb
aaa
inc
pusha
inc
fcom
je
cli
xchg
inc
sbb
clc
fwait
mul
inc
or
test
lret
insl
xor
dec
outsb
pop
dec
nop
mov
pop
mov
gs
inc
cmp
pushf
xor
mov
testl
cli
dec
hlt
add
iret
mov
mov
push
hlt
repnz
jbe
clc
cmp
fnstsw
mov
mov
jb
insb
shrb
and
dec
push
jg
out
subb
dec
xchg
mov
pop
ror
es
adc
cmc
dec
pop
xchg
out
lods
xchg
mov
fimull
arpl
mov
sub
in
lock
loope
ret
rcl
shr
and
jno
and
jecxz
sarb
enter
call
and
test
lods
and
in
repz
pop
daa
movsb
add
mov
dec
push
js
jae
daa
or
js
inc
add
dec
mov
call
aam
sub
das
sub
cmp
push
add
into
outsb
mov
maxps
dec
mov
ret
fs
notb
adc
or
leave
adc
mov
cmp
mov
adc
cmpsl
sub
jne
jno
pushf
das
push
cltd
insb
in
and
mov
xor
out
test
dec
mov
mov
iret
add
std
jnp
or
mov
pop
shlb
out
rclb
jb
mov
cmp
mov
imul
adc
sbb
rclb
jle
cltd
call
pop
scas
pop
flds
aam
nop
imul
xchg
sbb
lahf
inc
mov
mov
dec
pop
imul
lret
out
push
js
or
push
sbb
shll
fs
shlb
jl
push
fstpt
cmpsl
push
nop
out
fiadds
mov
jne
dec
xor
jno
jl
dec
or
sbb
mov
inc
lock
les
pop
int3
rol
push
das
cmpsl
fistl
lss
sub
rcrl
push
loopne
dec
orb
mov
mov
lret
pusha
sahf
mov
hlt
adc
scas
mov
outsb
nop
and
lahf
stos
cmp
stos
sub
sub
std
push
and
imul
mov
insb
xor
add
lds
push
mov
repnz
int3
jecxz
out
popa
ficomps
das
test
and
mov
lock
cltd
jge
sub
lcall
inc
popf
pop
adc
adc
pushf
std
xchg
dec
lds
popa
icebp
lahf
adc
xor
sub
adc
cmp
int
int3
out
cmp
lods
mov
add
xlat
test
xchg
xchg
or
inc
call
push
mov
and
jmp
inc
add
ror
aas
xchg
enter
js
inc
inc
test
jecxz
stos
orl
and
adc
test
add
mov
sbb
sti
std
hlt
push
test
mov
jo
es
mov
mov
ret
sub
adc
int
pop
cmpsb
into
jo
pop
stos
cmp
sub
sub
testl
xorb
cmpl
ds
call
cmpsb
sarb
ret
lods
aad
inc
pop
jne
hlt
add
jo
cmp
push
daa
sbb
stos
mov
emms
and
xor
pop
xor
xchg
popa
cmp
mov
jl
std
inc
fsubs
xorl
dec
lcall
rcrl
js
in
jmp
jle
xor
out
movsb
push
jp
in
pop
bound
lea
dec
sbb
addr16
xchg
out
jecxz
cmpb
mov
dec
jns
popf
add
cmp
bound
mov
lret
stc
push
sbb
jmp
fists
inc
in
cli
mov
enter
fstpt
lret
js
fwait
sbb
mov
data16
int
mov
fcom
jns
sbb
cmpsl
mov
cmc
ljmp
lods
sub
and
lods
sti
neg
lds
fs
sub
loope
pop
int3
sar
insl
add
and
xchg
add
daa
shll
in
xchg
icebp
add
mov
dec
ret
hlt
push
mov
int3
sub
cmp
and
jge
cmc
xchg
mov
inc
pop
rcrb
mov
arpl
clc
xchg
mov
cmp
jmp
icebp
sub
inc
adc
movsb
loopne
lcall
lret
inc
mov
add
add
out
insl
lock
mov
movsb
mov
jb
pop
mov
pop
mov
lcall
shr
shl
xor
imul
jnp
sahf
repz
bound
inc
jge
jns
std
sti
vmovups
addr16
cmp
mov
jb
int
les
inc
or
fiadds
out
xchg
dec
mov
cmp
adc
mov
xchg
add
in
mov
jecxz
loop
mov
int
lahf
iret
dec
xorb
mov
insl
aas
rcrl
jle
call
pop
jge
lcall
sti
test
xchg
jl
mov
pop
sahf
sahf
cld
inc
push
ss
cmpsb
jmp
mov
imulb
sub
xor
sti
and
nop
scas
jae
insl
fsubl
dec
out
std
sub
pop
or
iret
cmp
ds
sbb
sarb
sub
sub
mov
lret
sub
idiv
ret
xlat
cmp
cbtw
fisubs
sbb
push
mov
push
sti
cli
mov
sti
pop
sbb
mov
aam
or
push
and
imul
out
rcl
outsb
pop
jecxz
dec
xor
sub
jmp
cmp
push
in
sti
roll
push
push
and
int3
test
mov
and
xchg
mov
ret
aas
or
push
sahf
jmp
incb
push
or
inc
mov
or
add
xchg
mov
shl
imul
enter
mov
imul
adc
cmp
cmp
frstor
add
test
fnstsw
xor
daa
and
stc
sbb
sub
push
jg
sbb
scas
in
divl
or
repz
ds
jmp
bound
mov
mov
lahf
push
cmp
mov
mov
jge
aaa
adc
lods
daa
fwait
mov
outsl
incb
adc
roll
xchg
inc
insl
mov
data16
jg
std
pinsrw
jp
mov
pop
xor
adc
dec
xor
leave
mov
rorb
and
cmpsl
ret
sbbl
cmpsb
jbe
jnp
pop
icebp
icebp
or
imul
jg
push
popa
outsl
ret
push
loope
adc
push
pusha
incl
repz
pop
cli
jle
std
inc
test
test
shlb
mov
adc
int3
cmp
jecxz
dec
cld
repz
xor
jne
das
pop
xchg
lret
push
jl
sbb
fwait
push
jp
shrb
dec
mov
adc
das
pop
xlat
cltd
repnz
inc
push
cltd
push
sub
ret
inc
sub
xchg
imul
mov
ds
inc
jecxz
mov
movsb
cld
inc
mulb
hlt
push
xchg
out
jmp
imul
mov
adc
push
xor
dec
lods
shrl
aad
mov
out
cmp
or
cwtl
push
jecxz
cmp
xchg
lcall
jb
inc
inc
push
xlat
cmp
and
pop
incl
cmp
minps
sbb
mov
fnstenv
sbb
stos
inc
ficoms
mov
je
sbb
pop
pop
mov
sub
dec
push
dec
jl
inc
xchg
or
xor
sahf
das
add
movsb
loope
in
outsl
cmc
pusha
or
jns
js
aad
push
loop
mov
shl
movq
data16
or
scas
repnz
and
dec
fsub
mov
test
out
add
pop
mull
and
push
addr16
jp
gs
out
dec
mov
outsl
fmuls
push
sub
jbe
sub
js
popf
sbbb
mov
cmp
or
mov
mov
cmpsb
es
adc
dec
cmc
sbbl
div
call
pop
push
push
pop
xor
sbb
dec
bound
sub
mov
aaa
xchg
xchg
pop
sub
out
inc
ljmp
sbb
mov
idiv
sub
cmp
pop
stos
out
and
mov
or
inc
push
xor
into
cmp
scas
mov
ljmp
imul
xchg
rclb
push
mov
inc
in
xchg
loop
xchg
or
in
dec
jnp
pop
inc
loop
je
mov
test
loope
rclb
and
insb
push
pushf
repnz
inc
mov
jge
lcall
es
pop
stc
mov
movsl
pop
and
mov
andb
iret
pop
imul
imul
lret
mov
jne
inc
dec
decl
push
dec
fwait
add
adc
call
jg
arpl
mov
arpl
push
cwtl
cmp
pop
inc
ss
dec
push
lret
shl
inc
std
pop
das
rolb
test
insl
dec
rol
in
pop
loope
test
xlat
pop
mov
sbb
stos
in
pusha
jne
rcpps
out
fdivrp
fcoml
arpl
jge
arpl
fwait
mov
adc
in
insb
xchg
pusha
add
fcmovnu
xor
or
pusha
mov
adc
mov
sub
cmp
jo
push
cmp
lahf
fbstp
pusha
cld
rcl
dec
addl
gs
jg
inc
jp
sbb
cmp
inc
dec
fidivl
cmp
fcoml
in
pusha
dec
imul
sahf
sbb
add
mov
pop
rcrl
xchg
mov
xor
lock
push
loope
add
das
push
loope
pop
sbb
dec
mov
dec
mov
mov
cld
stos
sahf
std
jl
mov
fsubl
iret
jno
scas
xor
movsl
xchg
cmp
in
repz
xchg
xchg
fwait
dec
mov
jnp
push
mov
fmulp
lcall
sbb
je
ror
push
sbb
sbb
mov
mov
es
xchg
jo
xor
ret
cmpl
mov
aas
mov
push
push
xor
lahf
jmp
ficoms
dec
xchg
push
sbbb
or
xchg
bound
es
xchg
jo
outsb
pop
aas
pop
inc
jnp
xchg
int
xor
outsl
daa
and
fwait
xor
xlat
pop
mov
aad
mov
ljmp
fidivrs
mov
adc
jg
aam
or
lcall
cmp
jge
addl
in
mov
fimull
bound
sub
and
push
fnstsw
scas
sub
inc
or
inc
popf
out
mov
pop
xor
sub
cmp
add
int3
sub
pop
mov
int
pop
dec
data16
push
sbb
push
stos
xor
jge
xor
sub
imul
or
pop
push
mov
sub
shl
fwait
jmp
xchg
test
test
testb
jge
pushf
lods
sub
jge,pn
pop
js
fcoms
jmp
mov
ret
imul
jbe
mov
adc
mov
iret
andl
sbb
jg
jnp
cltd
xor
push
nop
repz
pop
and
mov
cmp
ljmp
mov
push
rcll
clc
inc
scas
mov
mov
shll
jp
push
and
push
dec
aad
pusha
jns
inc
inc
adcl
cli
gs
aad
push
lods
aad
push
mov
pop
lea
jnp
cs
pop
js
xor
daa
push
sub
orb
sub
aaa
mov
lods
mov
sbb
dec
ljmp
filds
jns
bound
xor
push
pop
push
dec
mov
jne
sbb
dec
enter
cmp
notl
popa
jns
lret
lea
sahf
scas
cmc
sbb
xor
inc
sbb
mov
inc
filds
out
mov
ficoml
popa
xchg
sti
mov
mov
add
adc
push
sbb
cld
jmp
cltd
and
cmp
cltd
jb
push
sti
inc
sahf
cmc
dec
fidivs
push
rcrl
imul
pusha
sub
icebp
movsb
cld
aas
test
ja
aas
aad
dec
push
enter
leave
xor
or
adc
in
rcrb
mov
pop
pop
adc
cmp
push
xchg
sahf
sbb
adc
push
loope
sbb
xor
and
xor
mov
xchg
es
mov
cmpsl
in
std
pop
daa
sbb
test
outsb
negl
outsb
ss
je
mov
sub
sbb
bound
cwtl
pop
cmp
pop
aam
stos
icebp
push
inc
xchg
mov
daa
xchg
data16
cmp
aaa
or
fwait
mov
loopne
aam
ret
jns
scas
or
jle
test
or
mov
rcrl
clc
cld
outsb
enter
cmp
cld
movsb
in
push
hlt
dec
jb
dec
and
push
cmp
cwtl
adc
lods
fisubs
hlt
shll
mov
mov
lahf
ds
sbb
jo
pop
sub
pop
adcl
movsl
sbb
stc
jno
adc
bound
sub
dec
ret
xor
xchg
js
aas
adc
mov
ret
lcall
inc
in
imul
push
rolb
pop
int3
popf
push
bound
dec
cmp
ljmp
push
adc
ret
xchg
jns
cli
xor
xor
int
adc
cli
ret
pushf
cmp
inc
sarl
push
loopne
test
shlb
and
pop
and
mov
xor
lcall
mov
loopne
mov
push
clc
sbb
xchg
pusha
outsb
cld
flds
lret
dec
movsl
movsl
sub
xor
fdivrl
loopne
cli
aaa
xchg
sarb
outsb
shll
mov
adc
jb
pop
and
insl
cmc
jno
or
cmp
push
push
pop
mov
insl
pop
adcb
loopne
adc
enter
pop
cmp
dec
insl
or
cmp
adc
jb
sbb
mov
cmp
rolb
adc
jecxz
rclb
repnz
out
ds
push
orb
xchg
fidivrl
jmp
aaa
jb
insb
and
sbb
fldl
inc
xorb
call
rcrb
jle
cwtl
stc
sbb
mov
mov
dec
dec
mov
mov
cld
and
aas
div
popa
adc
jp
ret
movsb
xor
mov
jmp
psrlw
cmpsl
adcb
mov
mov
out
push
xorl
mov
out
fidivrl
cmpsb
dec
jge
movsb
or
xor
ljmp
and
aam
js
int
aad
add
out
xor
inc
out
cmp
into
shll
mov
out
mov
xchg
pop
mov
xchg
int3
rorl
and
cmp
mov
pop
or
cmp
lock
fnstcw
xchg
insl
xchg
loop
mov
insl
cmpsl
xchg
andl
scas
setl
push
mov
inc
shlb
in
push
cltd
icebp
cmpsb
ret
lods
mov
fisubs
sbb
test
lods
rcr
iret
cmp
les
xchg
add
dec
movsb
dec
fs
test
ss
xlat
lods
mov
push
int
cs
fiadds
mov
and
xor
dec
fsubrp
pop
into
pop
mov
aam
clc
inc
mov
das
in
test
xchg
jl
sbb
dec
in
cld
idivb
sbb
and
hlt
hlt
adc
out
sti
out
add
lock
cmp
cmp
clc
jb
stos
sub
jnp
je
push
fs
inc
les
stos
roll
sbb
lds
xchg
adc
stos
bswap
jecxz
mov
mov
orl
dec
test
xchg
mov
popa
push
sbb
gs
pushf
aas
sbb
pop
mov
movsl
das
xchg
xor
cwtl
pop
or
push
add
scas
dec
fisubrl
sbb
dec
gs
mov
lods
adc
and
in
stos
xor
jns
pop
mov
mov
test
mov
pusha
mov
mov
fwait
jne
daa
jecxz
cs
dec
loop
mov
or
repnz
push
jb
sub
sbb
pop
mov
xor
je
arpl
stos
test
insl
ljmp
daa
mov
movsb
inc
jno
sub
repnz
pop
jno
adc
mov
les
mov
outsb
test
out
aaa
imul
inc
mov
lahf
cltd
jno
jo
mov
stc
or
ja
jmp
les
mov
push
and
inc
mov
or
stc
mov
cwtl
lcall
test
inc
mov
xchg
pop
in
inc
adc
or
mov
imul
xchg
or
xchg
fistl
mov
cmpsl
repnz
fldcw
imul
in
cli
jmp
hlt
test
push
xor
fcomp
push
dec
aas
dec
scas
sbb
xchg
push
cmpxchg
pop
xchg
movsl
mov
and
in
adcb
push
cli
xchg
mov
inc
aad
cld
les
fs
incb
imul
outsl
push
adc
dec
imul
addr16
cmp
adc
scas
xchg
mov
cmp
adc
pop
sbb
nop
mov
xchg
inc
cmp
pop
rcrb
push
xor
fiaddl
aam
scas
add
jno
push
in
hlt
mov
test
xor
and
das
repz
sti
idivl
in
leave
xor
ficoms
inc
cwtl
or
sbb
mov
mov
mov
push
inc
mov
jae
mov
shl
mov
addr16
push
lock
lods
mov
rep
push
cmp
js
or
dec
sbbb
cmpsb
push
loope
push
aas
lods
fistps
push
and
fsts
cs
in
add
andl
fmuls
inc
cmp
sub
test
dec
dec
mov
sub
adc
sub
jns
aaa
aam
add
adc
lret
clc
dec
insb
lret
mov
lcall
shlb
or
mov
sahf
fistpl
aad
cs
sbb
addb
in
iret
movsb
icebp
push
shl
add
out
sub
nop
sbb
hlt
decb
xchg
add
fldt
arpl
test
mov
mov
insl
jge
lds
repz
fistps
sbb
inc
push
sub
xchg
scas
out
xchg
sbb
add
xor
dec
mov
pop
repnz
mov
or
das
bswap
cmp
xor
rol
sarb
sub
dec
movsl
jae
and
inc
lahf
out
ljmp
sbb
pushf
xchg
hlt
xor
mov
inc
mov
mov
xor
mov
inc
sub
inc
test
enter
addr16
pop
push
ja
orb
and
mov
push
addr16
fcompl
mov
int
add
sub
mov
sahf
mov
ret
std
mov
mov
sub
push
dec
dec
jge
sbb
fs
sbb
cmpsl
mov
orb
movsb
jbe
cmpb
in
out
fwait
jmp
imul
jg
or
mov
sahf
js
push
sbb
xchg
lods
imul
scas
mov
push
mov
icebp
mov
daa
andb
or
and
xchg
push
sub
inc
testb
rorb
test
pop
das
popa
scas
jp
loop
mov
push
pop
int
aas
aaa
lahf
adc
xorl
xor
std
nop
mov
call
mov
int
popa
rcrl
ret
mov
adc
rcr
in
inc
or
xchg
aam
jle
mov
add
shll
push
inc
xchg
dec
sbb
loop
mov
sahf
adc
sub
aad
cmp
test
int3
insl
mov
push
push
testl
iret
divl
out
or
push
imul
dec
jb
insl
loope
adc
scas
mov
dec
js
cmpl
das
mov
mov
adc
stos
xchg
adc
pop
bt
ja
stos
inc
sub
daa
xor
imul
sahf
stc
pusha
adc
shlb
imul
ret
sub
orl
or
xlat
xchg
ret
dec
js
pop
push
subl
mov
sbb
rep
test
mov
pop
movsl
xchg
mov
fcmovu
pop
ljmp
mov
data16
jns
popf
mov
lret
pop
ss
mov
in
mov
dec
add
rcrl
sti
outsb
mov
push
sub
movsl
test
cltd
daa
jbe
mov
lcall
mov
xorb
pop
inc
jbe
cmp
or
aas
sbb
cs
jge
sahf
and
divb
repz
mov
xor
fisttps
dec
sbb
adc
insb
aaa
xor
jl
outsb
pop
sbb
pop
adc
add
negb
xor
mov
xor
enter
sub
xchg
cld
test
pop
insl
jmp
loop
jg
scas
sti
sbb
jp
mov
jb
mov
out
inc
adc
mov
ds
xchg
ret
inc
jo
mov
les
xor
sub
lods
jb
adc
inc
cwtl
loop
add
pop
fldcw
mov
mov
jns
sub
mov
or
inc
push
mov
pop
sub
rcrl
jns
mov
jb
mov
sub
lret
aas
lods
sub
leave
xchg
jbe
in
cmp
rcrl
jmp
in
jmp
or
je
xchg
repz
jo
sub
jg
nop
loopne
inc
inc
aas
arpl
pop
sub
xor
jbe
push
or
sbb
mov
mov
popf
push
xor
jmp
or
add
inc
mov
mov
and
rcrl
int3
cmpsl
out
fsubl
adc
dec
insb
loopne
movsl
jno
jne
incb
movsl
inc
cwtl
dec
cld
roll
decl
aad
and
mov
sbb
xor
ffreep
push
xchg
testb
xchg
mov
xchg
cwtl
mov
jmp
push
int
mov
out
hlt
mov
xor
mov
or
roll
add
repz
cmp
out
pop
mov
jb
rclb
cmp
rorl
jbe
push
mov
mov
and
shlb
jae
push
ficompl
push
dec
dec
clc
adcb
xor
es
dec
fdivrs
ret
ljmp
pop
add
dec
and
out
and
pop
sub
adc
dec
xchg
jmp
xchg
fiaddl
and
push
pushf
xchg
out
imul
lds
call
add
jns
int
xchg
loopne
cmpsb
data16
in
push
iret
sbb
jl
xchg
fwait
or
cmp
sti
mov
mov
mov
cmp
sbb
mov
mov
data16
jbe
addb
divb
jns
sbb
cmp
subb
inc
inc
jnp
lods
out
ja
inc
xchg
push
mov
pop
popl
mov
adc
ret
mov
mov
xor
subl
dec
ss
int3
sub
sbb
mov
iret
and
leave
ret
sti
ret
mov
adc
lock
pop
pop
daa
popa
lcall
inc
add
in
in
lds
scas
xor
mov
sbb
push
push
rolb
sub
out
adc
sub
pop
push
mov
or
sub
outsb
sub
sub
cmpsb
pop
push
push
mov
sub
cli
out
movb
fcomps
sahf
xchg
cs
xor
or
mov
adcl
bound
dec
jno
sbbb
or
clc
cltd
jp
xchg
or
mov
std
cmp
sbb
andl
test
insl
repz
dec
xchg
pop
ds
daa
insl
inc
jo
mov
adc
fiaddl
jns
incl
push
enter
fmul
pop
aas
cltd
jmp
or
pop
dec
pop
mov
xchg
and
loop
cmp
jl
cmp
jmp
push
push
int
cltd
xor
fidivs
xor
mov
mov
jl
add
sub
movsb
push
cwtl
lods
sub
mov
cltd
sbb
fildll
outsl
addl
loop
or
imul
daa
je
pop
sbb
mov
cs
xor
sub
mov
and
stos
adc
das
les
mov
pop
xchg
outsb
cmp
arpl
sar
mov
cmc
mov
mov
mov
sbb
mov
jbe
bound
sahf
pop
mov
scas
cld
inc
jmp
mov
push
nop
xor
hlt
andl
rcrl
sub
xchg
lods
jp
push
std
ljmp
mov
scas
rcrl
dec
add
sbb
push
mov
out
add
sbb
push
and
loope
adcb
sub
inc
mov
pop
movsl
mov
std
es
pop
sub
dec
cltd
out
xchg
icebp
add
jae
adc
mov
pop
pushf
push
mov
aaa
paddusw
add
ljmp
adc
dec
outsl
jne
fdivl
sub
fdivs
cmp
mov
mov
stc
fbld
loop
in
lods
gs
push
aad
cmp
fdivp
push
sub
ds
sub
mov
fwait
jge
nop
lret
adcl
sbb
in
mov
test
and
lea
fnstsw
dec
ds
push
pop
dec
push
jo
mov
cmp
inc
jl
jl
cmp
ds
mov
mov
inc
movsb
xchg
pop
daa
inc
out
pop
jae
push
pop
cmpsb
pop
cld
inc
out
iret
mov
outsl
stos
nop
aas
les
mov
jge
fildl
pop
into
not
aad
inc
push
jmp
subb
add
push
inc
stos
les
sbb
dec
add
rcl
pop
xchg
adc
js
nop
xor
je
repnz
inc
enter
fimull
imul
fpatan
scas
out
jnp
cmp
repz
fdivrp
xor
push
mov
fwait
sahf
ret
fistl
mov
push
or
and
xor
dec
cld
add
inc
iret
outsl
jp
mov
pop
xchg
push
jae
xor
in
cmp
mov
aas
push
sti
and
daa
arpl
fisubl
xor
je
pop
pop
xchg
loope
jecxz
adc
mov
std
mul
jl,pt
jg
leave
jnp
lods
sbb
cs
clc
mov
scas
pop
push
xchg
push
out
lods
cld
ljmp
ficomps
sbb
cmp
out
inc
mov
pop
push
js
lcall
and
mov
sub
sub
pusha
mov
xor
leave
or
push
lea
dec
out
mov
mov
fldcw
inc
insb
push
push
dec
daa
inc
in
icebp
adc
clc
mov
shll
sbb
int
movsb
inc
cwtl
sub
inc
adc
repz
andl
sarl
mov
pop
adc
push
pop
mov
ficoml
push
xchg
pop
aad
insl
lods
int3
pop
mov
sub
mov
push
lods
xor
ljmp
lcall
stc
in
jbe
mov
mov
lea
lret
insl
mov
test
add
daa
sbb
mov
adc
inc
adc
cwtl
movsb
insl
fiaddl
loope
lret
repnz
mov
les
out
xchg
sub
sub
arpl
and
incb
add
call
cmp
test
and
jo
add
ljmp
push
pop
pusha
jnp
test
mov
fs
add
mov
jp
pop
adc
adcl
cmpsl
mov
loope
push
and
mov
fldt
lods
jge
jbe
or
ja
arpl
in
iret
mov
xchg
jle
scas
cmp
dec
jne
jns
sbb
pop
push
mov
data16
xor
insl
adc
into
push
mov
add
sbb
inc
sbb
mov
lods
fimuls
jecxz
mov
hlt
imul
jle
xor
jne
fcmovne
aaa
mov
mov
xchg
mov
mov
in
adc
xor
fdivrl
mov
add
and
adcb
negl
rorb
inc
xchg
mov
cmova
fsubr
xlat
std
lea
push
jns
std
fnstenv
mov
pop
push
rcr
xchg
adc
jmp
pop
cli
repnz
cmp
sbb
leave
mov
push
push
pop
scas
and
scas
in
sub
maskmovq
imull
enter
fdivp
pop
sahf
ficomps
xchg
gs
inc
notb
push
lcall
cmpsl
mov
inc
iret
popa
cmp
sahf
mov
jecxz
dec
cltd
inc
xor
and
push
mov
rolb
divl
cld
sbb
mov
lds
dec
pop
fisubl
and
inc
mov
lret
sahf
mov
mov
lods
leave
and
xchg
ja
jne
push
xchg
xchg
cmpsb
adcl
pop
jne
int3
mov
aam
test
cwtl
xor
rclb
jecxz
enter
stc
push
jnp
ss
pop
jne
test
add
inc
adc
sub
inc
add
in
adc
cmp
movsl
je
and
inc
pop
sub
add
jecxz
mov
jns
xchg
sub
push
cld
jb
sbb
adc
mov
popf
sbb
xor
das
mov
push
fwait
xor
adc
sbbb
sbb
orl
sub
mov
xor
divb
inc
sbb
cmp
dec
testb
nop
mov
push
jle
or
inc
outsb
xor
mov
xchg
hlt
add
mov
jno
rclb
sysexit
lret
outsl
sarb
or
dec
sbb
fs
movsb
fsubl
aad
jg
aam
ret
adc
push
xor
or
mov
add
jno
pop
mov
jno
les
mov
lahf
out
inc
rcr
cmpsl
jl
sub
cwtl
jle
cmp
or
inc
push
scas
jp
pop
fstl
scas
js
ja
pop
mov
out
push
nop
psubb
fnsave
std
nop
arpl
dec
loop
leave
sahf
add
fimull
adc
sub
pushf
jge
lret
inc
dec
cltd
pop
pminsw
mov
pop
in
add
lret
sahf
xor
pushl
push
adc
cmpsw
xor
push
cmp
out
push
adc
jecxz
push
inc
cmpl
mulb
and
les
jecxz
mov
and
ror
orl
mov
mov
sahf
aad
pop
sub
faddl
push
outsl
mov
sub
mov
sarb
test
rcrl
push
sub
and
and
scas
dec
add
sub
sub
divb
sub
mov
test
add
sbb
inc
leave
jnp,pn
shll
pushf
sbb
xor
dec
inc
jl
fdivl
xor
jmp
push
dec
pop
xchg
test
movsb
mov
push
out
jno
lret
mov
int
dec
adc
loop
in
cmp
fstpt
jmp
mov
push
lret
loop
mov
mov
sub
adc
ficompl
cmp
push
push
push
shll
and
lcall
lret
addr16
jno
adc
in
xor
int
addr16
cwtl
or
push
cmp
movsl
inc
inc
sub
shrb
repnz
sbb
pop
std
fwait
mov
cwtl
inc
scas
ficoms
xor
push
and
dec
inc
sti
pop
test
stos
in
and
aam
cmpsb
cbtw
mov
stos
cmp
pop
fscale
ja
sub
ret
dec
and
sti
aas
xchg
stos
xchg
push
add
jo
push
mov
movnti
mov
or
or
sarb
jbe
pop
mov
pop
ror
jl
xor
pop
pop
pop
add
jo
xchg
or
mov
and
push
mov
pop
mov
mov
mov
enter
push
aad
mov
test
xor
mov
xchg
xor
xchg
out
data16
adc
imul
mov
cwtl
push
pop
std
jp
mov
outsl
add
sbb
xor
jbe
and
mov
xor
adc
mov
push
outsb
movsb
dec
sub
mov
imul
repz
insb
mov
add
loop
inc
adc
outsb
decb
out
cmp
sbb
lret
leave
push
xor
test
arpl
test
shl
cmpb
icebp
out
adc
into
push
out
outsl
mov
mov
aad
dec
int
xlat
sub
cmp
jle
imul
sub
sub
xchg
sbb
and
add
push
ficomps
pop
push
repz
insl
and
fistps
push
rcl
bound
arpl
xchg
loopne
shlb
or
and
outsl
scas
fisubs
les
dec
movsb
sub
fsubs
jl
xchg
leave
push
cli
cli
push
repnz
mov
out
divb
jge
imul
adc
push
xadd
add
mov
pop
imull
jle
pop
into
jecxz
stos
adc
cmp
pop
cs
xor
sbb
xor
nop
fldenv
inc
adc
xchg
mov
mov
mov
nop
adc
iret
xor
pop
lea
stos
inc
jne
mov
pop
fldl
mov
and
shl
pop
or
push
out
add
popa
test
outsb
jp
and
call
cwtl
arpl
cld
es
jno
lods
sbb
imul
pop
jo
std
sub
adc
cld
mov
xor
dec
sub
test
mov
cld
insl
sub
mov
stos
cltd
push
aas
jle
xchg
inc
jle
lcall
dec
pop
xchg
sub
mov
xor
add
sub
cmp
cmp
fstps
pop
testl
les
lods
sub
adc
inc
push
ficompl
ds
mov
pop
aas
fs
arpl
cmp
fisubrs
inc
cmp
in
jmp
sub
pop
jne
pop
xorb
inc
ljmp
js
or
arpl
xchg
dec
and
movsb
aam
fsubrl
mov
les
mov
mov
mov
lock
cmp
aas
das
add
hlt
push
mov
xchg
shlb
stos
jl
mov
mov
mov
leave
cmp
ror
push
sbb
and
aas
add
jp
add
adcb
ret
mov
in
popf
mov
xchg
mov
adc
inc
ret
mov
out
fcmovnbe
int
add
fs
xchg
aaa
mov
fwait
jb
mov
sbb
pop
loope
sbb
lahf
addl
ret
loop
mov
insl
pusha
sahf
jg
shlb
sub
sti
les
das
inc
sub
shrb
mov
nop
call
pusha
push
mov
fstps
xlat
pop
adc
dec
test
call
xlat
mov
xor
aam
sbb
lea
icebp
jle
and
mov
cmp
sbb
jno
cmp
lret
in
ret
aaa
cli
cmp
sbb
add
cmp
int
mov
test
mov
add
roll
sub
pop
jno
mov
sti
ds
cmp
stos
mov
pop
mov
xorb
cmp
cmp
cmp
mov
sbb
loopne
adc
dec
jp
lds
xchg
jo
arpl
push
popf
lret
clc
stc
les
cmpsl
push
pushf
jnp
lret
adc
xchg
xor
sti
add
gs
jae
cmp
sbb
mov
add
jge
out
pop
xchg
and
pusha
stos
adc
add
mov
xor
das
in
lods
push
stos
mov
dec
xlat
jmp
pop
mov
jne
push
push
push
jb
je
dec
scas
jne
sub
cmpsl
pop
outsb
add
push
add
inc
cld
imul
and
cmpsl
imul
enter
xor
xor
orl
sub
xor
leave
mov
test
outsl
adc
sub
js
fsubs
and
lret
addr16
dec
xchg
pcmpgtw
mov
cmpsl
repnz
fs
pop
push
mov
xchg
nop
jge
sbb
icebp
cli
enter
add
push
leave
push
mov
mov
sbb
xor
ds
cmc
and
insb
xchg
pop
add
xchg
stc
mov
in
mov
test
and
into
sbb
shrl
fcmovnbe
jno
inc
outsb
ja
jae
jo
mov
pop
ja
int
outsl
inc
lock
shll
cld
pop
ss
jno
mov
ds
pop
cmpb
popa
sub
adc
addr16
dec
mov
out
inc
fwait
pop
into
loope
loop
out
daa
pop
out
pop
mov
jmp
fmulp
int
xchg
mov
sbb
fistps
dec
gs
ss
outsl
enter
xor
bts
out
mov
push
or
push
jns
jns
loopne
cs
test
or
pop
mov
pusha
add
xchg
push
and
xlat
mov
test
dec
mov
sbb
mov
adc
jecxz
movd
rsm
push
fimuls
push
push
fcomps
mov
jne
cmp
pushf
int3
adc
adc
add
mov
enter
ljmp
out
aad
mov
jge
cmp
loopne
cmc
in
jne
call
rcll
xor
iret
push
loop
aam
sub
sti
adc
daa
int3
rol
pop
fadds
inc
xchg
stc
add
les
cld
add
ret
jge
loop
inc
pop
cwtl
fidivrl
std
mov
aad
int3
push
sub
pop
jnp
ret
pop
int3
xchg
push
out
imul
adc
jl
ret
ret
in
pop
adc
dec
popa
iret
dec
cs
sub
push
mov
cmpsl
shlb
popa
ds
jmp
adc
jbe
inc
lret
xorb
fldt
mov
xlat
cmpsb
lods
xlat
loop
mov
ret
and
or
xchg
pushf
imul
loope
nop
xor
push
test
sbb
cs
xchg
bnd
xchg
pop
pop
js
subl
inc
shl
mov
pop
leave
adc
fucomip
pop
mov
out
arpl
in
into
jmp
dec
std
sub
pop
cwtl
mov
inc
dec
xor
rolb
and
push
mov
inc
sti
scas
push
push
pop
xchg
ss
pop
lret
outsb
fsubrp
sub
repz
lcall
inc
in
mov
test
and
lods
je
push
lcall
mov
mov
push
cmpb
mov
lret
or
mov
mov
and
js
int
mov
sbb
outsb
ss
xor
ficomps
repnz
mov
jo
jecxz
ljmp
in
lcall
stos
adc
fwait
jns
inc
inc
ljmp
roll
pop
testl
xchg
sahf
cmp
and
ret
add
movsb
gs
inc
ret
loopne
adc
es
out
sub
subb
loop
lcall
pop
aas
fwait
mov
in
or
imul
std
pop
js
push
xchg
xor
scas
mov
jb
sub
mov
mov
iret
movsl
jp
push
dec
fstp
repz
inc
loope
pop
loop
jae
or
outsl
jno
jl
cmpsl
and
xchg
ficompl
and
add
fucomp
mov
xchg
sub
jg
aas
and
mov
fs
xchg
or
inc
push
filds
aam
pop
inc
test
adc
or
cltd
mov
arpl
into
pop
in
sbb
xor
ljmp
dec
outsb
push
jns
int3
loope
lds
inc
xchg
xchg
sti
loop
shrb
clc
std
jmp
addr16
movsl
dec
not
inc
xchg
sub
push
jge
inc
dec
test
xchg
fimull
frstor
divb
imul
fnstcw
cltd
xor
inc
jns
mov
pop
inc
lahf
enter
ret
push
test
push
and
sbb
daa
fwait
loopne
xchg
fisubs
mov
mov
pop
pop
xor
mov
dec
stos
fwait
dec
test
add
notb
mov
jae
ss
scas
js
daa
pop
push
jp
mov
call
ret
ss
xchg
sub
mov
iret
sti
daa
aam
cwtl
mov
mov
cmpsb
inc
cs
inc
inc
shlb
fs
fimull
fistpll
sahf
fs
lret
push
cmp
stos
xchg
fdivrs
insb
lods
mov
sbb
imull
cmpb
cmpsl
leave
dec
ficompl
adc
pusha
leave
leave
ret
jo
gs
mov
mov
pop
push
popa
lret
and
add
dec
xor
stc
in
popa
movsl
mov
int3
xchg
and
lds
out
int3
leave
faddl
xchg
jo
and
add
mov
mov
pop
xchg
test
pop
les
push
outsb
push
rcll
addps
repnz
xchg
push
je
lret
lods
in
xor
jge
shlb
dec
imul
scas
push
cmp
mov
loope
out
scas
jle
xor
cmpsb
jmp
xchg
fdivl
stos
mov
hlt
lret
cmp
push
das
xchg
movsl
test
mov
sti
xor
nop
scas
outsb
mov
mov
or
dec
test
xor
cmp
dec
mov
enter
pop
sbbl
xor
call
test
or
shl
je
add
cmpsb
sbb
jecxz
movl
push
js
fadds
jg
xchg
std
mov
sahf
jno
data16
xor
in
lods
sub
scas
jmp
pop
lds
adc
jb
aaa
gs
sub
repz
ds
inc
lods
lods
movsl
mov
xchg
dec
mov
hlt
mov
adc
fildll
adc
jle
xor
shlb
ja
les
mov
bound
stos
and
cmp
and
test
sub
and
xchg
mov
das
add
icebp
xchg
popf
sbb
ljmp
cs
add
cmpsl
xchg
unpckhps
mov
mov
add
out
or
jmp
mov
daa
popf
and
mov
sbb
lods
nop
loopne
jmp
mov
stc
bsf
popf
loope
mov
sti
iret
add
mov
mov
call
roll
xlat
dec
inc
in
mov
add
and
sbb
xor
jle
mov
mov
inc
push
xchg
xor
jnp
ficompl
jecxz
aad
pusha
mov
stos
add
mov
and
sub
xor
in
subb
lods
cmp
mov
inc
stc
push
hlt
rcrl
fiaddl
aas
xchg
push
lock
lret
sbb
inc
add
leave
jp
je
xchg
lea
lods
pusha
out
jmp
push
push
ljmp
fisttpll
sub
inc
xchg
insl
cwtl
ljmp
les
xchg
mov
pop
out
dec
subl
dec
jne
xchg
stos
daa
mov
lods
imul
imul
lds
cmc
loope
cli
out
pop
dec
movsl
repz
sub
repnz
mov
adc
mov
not
inc
xchg
cs
jmp
outsb
pop
mov
imul
add
test
lods
hlt
ja
rcrl
stc
jns
aaa
int3
or
test
push
jge
imul
inc
adc
ret
adc
pushw
push
aas
add
call
mov
insl
insl
insb
dec
push
xchg
insb
or
lea
lods
rcrl
sub
dec
lcall
cmp
jno
xor
cli
ljmp
and
push
xor
pop
xorl
and
nop
and
push
test
pop
cld
int
stos
sub
push
cmpsb
out
xchg
stos
jb
mov
adc
dec
popa
push
ss
push
jge
cmp
push
cmpsb
jnp
push
sub
xchg
bound
jecxz
xor
xchg
stos
popa
push
cmc
out
xor
push
pop
or
out
jae
lds
arpl
std
add
daa
mov
int
das
cmp
mov
rcl
mov
push
scas
push
inc
mov
pop
in
push
ret
xlat
sub
leave
pop
es
mov
cli
and
jl
in
mov
scas
add
push
call
dec
jecxz
jns
jge
adc
ftst
push
sti
or
std
inc
das
cmp
lds
sarl
pop
pusha
xchg
jmp
pop
adc
push
fstps
bound
out
xor
push
sbb
fsts
cli
in
mov
ds
fnstcw
push
data16
xor
add
adc
push
xchg
cltd
push
or
dec
mov
scas
mov
rorl
daa
idivb
jecxz
cwtl
outsl
cli
pop
mov
push
test
xor
cmpl
sete
cmpsb
andb
push
fstl
ret
int
mov
jno
jge
inc
out
es
mov
mov
scas
xchg
or
xchg
mov
push
jecxz
mov
xchg
ds
mov
adc
dec
push
dec
mov
pop
stos
jmp
sbb
lock
in
lock
sub
in
push
adc
dec
lret
stos
mov
adc
fdivrs
popf
xor
and
and
sbb
mov
daa
shrb
cwtl
lea
dec
lods
sub
pop
cmc
or
dec
pop
sbb
pop
into
ljmp
xchg
jno
xchg
out
mov
bound
lods
rol
sti
dec
inc
xchg
push
fisubs
in
leave
fadds
and
sub
std
inc
mov
mov
and
sbb
int3
arpl
out
or
pop
repnz
cmpsb
pop
pop
inc
jmp
pop
out
cmp
aaa
cmpb
or
jg
test
lods
test
mov
adc
enter
xchg
imul
push
dec
hlt
movsl
loope
out
aas
nop
hlt
or
sahf
inc
rol
xchg
roll
repz
outsb
mov
jg
sbb
test
and
lahf
jge
mov
xlat
ret
add
shrb
sbb
arpl
ret
jg
inc
ds
pop
cmp
sub
jp
lea
psubq
fcoms
and
or
sbb
cltd
add
or
jbe
data16
pop
dec
inc
aam
nop
out
adc
call
and
inc
insb
inc
or
and
lds
mov
xchg
ret
adc
xchg
add
das
mov
mov
nop
pop
add
lret
add
xorb
iret
leave
repz
jo
ljmp
lods
incl
sub
mov
aas
mov
in
and
ret
and
or
movswl
movsb
outsb
pop
mov
mov
cltd
stos
es
lcall
rcr
iret
cltd
lahf
or
dec
movsl
jg
outsl
mov
rorb
dec
mov
jg
outsl
xor
or
lds
lea
mov
out
cmpsb
ljmp
gs
sbb
fnsave
pop
jmp
and
scas
lret
sub
lds
shll
dec
lods
mov
aam
dec
xchg
mov
incb
outsl
add
or
mov
stc
push
pop
pop
orl
test
cs
xor
std
ja
xor
fbstp
movsl
cmp
push
sahf
pop
test
jp
add
popa
push
adc
add
ret
int3
add
pop
inc
lret
fcmove
mov
fwait
insl
into
adc
les
arpl
aam
xor
or
cwtl
sbb
cmp
enter
lock
jnp
mov
lahf
mov
xchg
xor
jecxz
in
pop
push
jmpw
outsl
enter
xchg
xchg
dec
ret
fbld
mov
sub
lock
sub
out
jne
idivl
mov
pop
add
push
push
dec
dec
push
jl
push
mov
xchg
nop
adc
dec
mov
jnp
nop
test
jnp
dec
lods
add
or
push
lods
cld
push
xlat
lret
dec
sti
sarb
lret
sbb
decl
fs
inc
cmc
add
addr16
loop
inc
inc
ds
cmp
mov
cli
pushf
ss
fistps
jle
cmp
sbb
or
fiadds
outsb
inc
jo
adc
sbb
sbb
mov
js
adc
jge
cmp
hlt
outsl
and
pop
arpl
pushf
ljmp
pop
dec
test
bound
xchg
jecxz
adc
loope
ljmp
fcoml
shll
mov
sub
xchg
xor
cli
and
and
jb
gs
sahf
out
imul
sbb
jb
and
pop
imul
sbb
mov
cli
inc
add
mov
or
std
mov
icebp
sub
in
cli
mov
push
lret
aad
adc
add
adcl
push
je
out
lahf
mov
movsb
pop
add
rol
adc
and
sub
std
and
adc
mov
xchg
jl
jne
lods
clc
pop
stc
push
icebp
add
repnz
or
sahf
pop
jo
in
es
adcl
imul
add
dec
aaa
lcall
movsl
mov
adc
dec
daa
loopne
test
fdivr
pop
or
inc
jnp
xchg
loop
aaa
lahf
daa
movsl
xchg
shufps
aaa
sub
inc
mov
jns
aam
pop
push
outsb
fidivl
es
or
adc
cmp
dec
pop
and
sub
call
fsts
cmp
xlat
mov
ds
and
aam
stc
cld
clc
push
inc
mov
icebp
in
add
push
fildll
loop
in
sbb
add
mov
mov
or
sub
dec
mov
xor
pop
push
fwait
cmp
inc
dec
sub
cltd
cmpsb
fsubl
cmp
inc
and
push
adcl
cmp
sti
push
push
outsl
loopne
fs
or
leave
pusha
sbb
cld
adc
push
rorl
outsb
aad
fisttpll
add
push
push
jl
xor
pop
xlat
jecxz
dec
ss
push
xor
dec
bound
sub
icebp
js
dec
cmpsl
repz
mov
cwtl
add
div
jb
mull
jle
mov
mov
mov
cltd
insb
push
jns
fldcw
and
jo
das
dec
mov
cwtl
loopne
adc
lcall
jns
test
sub
cmc
adc
inc
xchg
inc
pop
jge
cmp
cwtl
sub
sbb
fprem
push
jecxz
mov
mov
cmp
jb
add
mov
adc
jmp
sub
shrb
jnp
aam
cltd
ss
and
xchg
mov
mov
pop
imull
clc
in
mov
mov
push
nop
cmp
loopne
cmp
out
pop
dec
jp
pop
test
xchg
dec
call
ret
loopne
gs
xor
ja
sub
sub
xor
jns
scas
sbb
cli
xchg
dec
pop
inc
leave
ret
roll
data16
loopne
add
je
jmp
daa
ljmp
cmc
sub
jmp
push
push
jne
out
add
jecxz
add
xchg
sbb
sbb
hlt
call
sub
mov
outsb
ret
mov
jl
push
xchg
das
pop
cmpsb
movsl
mov
dec
jp
pop
ss
in
adc
outsl
jmp
jno
adc
aaa
mov
mov
xor
add
out
cli
xor
and
and
add
mov
fsubs
and
xor
pop
adc
je
add
jl
mov
mov
xchg
xor
pop
hlt
push
sbb
add
call
sub
out
or
ret
and
cli
and
and
es
xor
cld
cltd
enter
push
loop
pxor
ja
mov
mov
je
dec
and
lods
rclb
jnp
xor
fwait
stos
mov
dec
fs
cmp
je
lcall
push
xchg
sub
in
push
or
imul
scas
push
outsl
popw
addr16
cld
std
mov
pop
add
push
arpl
dec
test
adc
icebp
inc
imul
mov
stos
loop
fldt
int
addr16
andb
outsb
mov
pop
test
in
or
shl
dec
xlat
xor
mov
ficoml
out
xchg
jns
pop
std
xchg
out
mov
push
xchg
sti
cmp
mov
xchg
data16
dec
xlat
fcomps
mov
xlat
sbb
mov
mov
mov
cltd
push
lea
inc
sbb
les
in
cmp
pop
shll
cmpsl
cld
or
dec
shrb
mov
mull
or
sbb
and
sahf
imull
lds
add
inc
mov
push
nop
cmp
sub
sub
cmp
sub
fnstcw
cmp
cmp
add
loop
lahf
xor
aaa
fcoml
orl
mov
repnz
push
scas
add
push
pusha
mov
inc
test
pop
andb
mov
mov
fsubrl
push
nopl
data16
daa
and
cli
lods
fsubp
iret
leave
daa
push
pop
push
lods
js
or
mov
fsubr
fnstenv
sub
dec
in
pop
push
out
out
inc
mov
push
aas
and
jp
cmp
sub
adc
es
rcrb
mov
pushf
test
add
xchg
cmp
outsl
or
lods
push
out
adc
std
sahf
push
dec
scas
aaa
mov
jl
mov
dec
je
arpl
push
shl
cs
out
xor
push
or
hlt
lcall
xor
add
adcl
out
nop
mov
movsl
adc
adc
add
lock
ret
xor
mov
lahf
sbb
cmp
stos
dec
dec
out
pop
or
pop
in
inc
inc
mov
fcmovne
cmpsl
mov
inc
mov
loopne
pop
pop
ja
jge
sub
popf
loope
cmp
mov
adcl
inc
mov
cmp
dec
sub
loop
aas
xchg
scas
or
call
adc
mov
int
push
lret
lds
dec
out
insb
and
addr16
fcomi
push
mov
out
xor
mov
and
gs
and
or
lcall
mov
cwtl
jae
insl
and
cmp
ud2
out
sbb
adc
cmp
pop
js
or
std
iret
icebp
mov
std
sub
mov
mov
dec
daa
mov
xchg
outsb
andl
cmpsb
or
fimull
nop
test
ss
xor
hlt
xor
mov
xchg
dec
sbb
inc
rcrl
in
jnp
push
mov
aaa
adc
out
push
xor
es
test
test
rep
jns
mov
test
ret
cmp
std
ss
stc
loope
int3
aam
cli
push
adc
xchg
and
adcb
xchg
cwtl
mov
popf
jbe
sub
roll
ja,pt
jg
add
dec
outsb
push
push
repz
jl
cld
mov
push
int
dec
insb
out
xor
jge
push
sub
lret
lcall
inc
cwtl
or
sbb
loope
mov
aaa
imul
ss
pop
sbb
sahf
mov
into
not
stos
and
or
inc
pushf
inc
icebp
mov
dec
mov
popa
cwtl
push
sub
stos
cmp
daa
xchg
adc
lock
sub
sbb
mov
push
lcall
imul
clc
fs
jge
xlat
sbb
jg
add
je
scas
add
sbb
and
mov
ret
xchg
das
sbb
and
mov
lock
mov
icebp
add
daa
inc
out
mov
push
jecxz
shl
insb
test
test
stc
divb
gs
dec
xchg
inc
mov
pop
xor
mov
and
out
push
loop
imul
xchg
popa
pop
adc
inc
push
imul
inc
inc
sub
fistps
jns
jle
les
push
aad
adc
jb
add
stos
and
cltd
jge
mov
and
push
inc
cld
test
sub
cltd
add
mov
and
out
imul
pop
in
inc
push
mov
pop
xchg
push
and
mov
inc
lret
popa
loop
test
fdiv
xor
sub
outsl
imul
inc
adc
rol
loop
adc
mov
xchg
cmpsl
push
dec
data16
mov
int3
mov
leave
mov
pusha
jnp
cmpsl
inc
arpl
ret
loopne
cmp
inc
dec
inc
mov
jb
je
shl
jmp
insb
andl
xor
push
and
ror
out
add
fwait
cmpl
push
data16
sahf
pop
cmp
xorl
dec
ret
jg
xchg
mov
xchg
mov
jb
xor
inc
int
in
sahf
sarb
test
cwtl
orl
sub
mov
push
sbb
sarb
xor
out
jae
xchg
pushf
into
pop
jge
stos
push
adc
adc
aas
sbb
test
sub
push
or
sub
adc
inc
sti
pop
int
sahf
adc
clc
push
std
mov
aas
sub
in
leave
sbb
je
iret
adc
js
pop
dec
and
lods
cmp
das
test
sbbb
fidivrl
dec
mov
jnp
adc
ljmp
add
jns
movsl
dec
or
cmp
and
in
add
and
loope
cmp
mov
pop
xor
push
adc
cmp
pushf
out
and
aam
sub
dec
dec
dec
cwtl
testl
lds
mov
mov
mov
in
adc
rol
ljmp
testl
mov
sub
lcall
add
arpl
xor
adc
xchg
pop
test
mov
aaa
pop
loop
lcall
pop
cltd
mov
xor
mov
adc
jle
rorl
ret
scas
ret
repnz
int3
mov
inc
sbb
inc
mov
idiv
xor
mov
xor
movsb
xlat
dec
push
or
daa
and
out
jp
clc
loope
dec
mov
pushf
jne
sbb
cmc
add
movsb
xor
adc
test
in
je
into
leave
int
lock
cmp
leave
pushf
or
pop
mov
jns
mov
mov
insb
in
mov
movl
xor
rorb
fdivl
xor
mov
add
xor
insl
sbb
xchg
sub
data16
pop
inc
insb
pop
or
sarb
nop
jmp
adc
call
inc
mov
push
pop
jbe
fisubrs
jl
mov
xor
mov
sbb
icebp
inc
mov
pusha
movsl
hlt
inc
sub
scas
gs
popf
test
push
mov
add
addl
test
bound
cmpsb
std
jns
dec
cmc
push
cmp
stos
andl
push
cmpl
orb
sar
mov
int
test
adc
mov
mov
dec
int3
and
sbb
popa
iretw
sub
or
sub
inc
in
xchg
sub
icebp
inc
es
pop
ss
aas
xchg
imul
nop
inc
cmp
add
dec
cmp
subb
stos
std
test
sbb
or
jl
inc
fldt
pop
enter
cmpsb
push
addr16
lret
xchg
fnstenv
sbb
sbb
out
loop
jmp
out
call
jnp
enter
test
jae
repnz
or
jmp
test
add
mov
push
cltd
sbb
inc
pop
push
daa
in
ds
daa
xchg
das
aas
mov
cmp
jp
roll
daa
dec
push
loopne
sbb
jo
mov
dec
stc
adc
push
jge
xor
mov
repz
ja
jno
ja
dec
pop
add
fbld
jmp
addb
cmc
cltd
adc
stos
mov
sbbb
loop
pusha
mov
jns
lea
or
and
enter
dec
jp
fsubr
adc
stos
xor
xchg
push
mov
xchg
mov
jbe
std
sbb
loopne
dec
jl
pop
push
jg
bound
pop
js
jg
iret
push
aad
cmp
xchg
cmpsl
mov
ljmp
and
xchg
loopne
sbb
rclb
mov
and
jl
idiv
adc
test
fdivl
fsubl
mov
cwtl
bound
fcmovnbe
sbb
mov
mov
xchg
shll
mov
add
pop
stos
enter
in
mov
add
test
push
xchg
ret
cld
add
es
mov
nop
pop
cmp
enter
fcoml
xchg
orb
sbb
jno
cmp
xor
mov
loope
dec
dec
sbb
xchg
pusha
xor
pop
mov
call
add
xor
mov
jb
dec
loopne
xlat
popf
ret
mov
mov
fldenv
aaa
popa
add
xor
cmc
xchg
jbe
outsl
pop
cs
lahf
fcompl
addl
push
ret
leave
std
push
pop
push
mov
popf
bound
pop
and
mov
sub
leave
mov
push
add
jno
inc
mov
dec
pop
pushf
enter
lahf
enter
pop
adc
jmp
dec
icebp
adc
stos
int3
xorb
fsubs
scas
or
lret
adc
xchg
push
movsl
sub
inc
pop
pop
jo
and
cli
dec
int
add
hlt
sti
sub
jo
pop
movsl
pop
std
sbb
mov
inc
adc
dec
mov
xchg
or
and
push
jbe
dec
rolb
and
xchg
repz
sub
dec
adc
mov
cmp
lahf
sbb
fdecstp
cmp
cs
or
and
push
cltd
xchg
nop
and
xchg
fisttps
jg
fsub
iret
push
add
arpl
cld
xlat
push
mov
sub
stos
icebp
push
push
outsb
inc
jns
popa
mov
pop
pusha
lock
pushf
or
ja,pn
and
fucomip
dec
sahf
popa
je
mov
sbb
aaa
push
lahf
jne
pop
aad
pushf
in
rclb
es
xchg
mov
jge
out
scas
add
push
rol
sub
pop
and
and
in
dec
cmp
fldcw
mov
add
sub
cwtl
mov
jbe
lea
push
std
outsl
lds
mov
jecxz
mov
std
loop
enter
mov
xor
pop
xchg
mov
lret
jns
lret
pop
sbb
pop
mov
mov
scas
cld
xchg
push
inc
xor
aaa
jne
xchg
es
pop
enter
js
nop
and
call
ja
pop
insb
inc
sub
mov
outsl
jne
sbb
aam
jmp
flds
sarl
jmp
rclb
add
mov
int3
dec
aaa
jle
cmp
into
stos
ret
pop
adc
mov
cmc
in
adcb
mov
sub
mov
adc
mov
add
aam
aaa
push
shrl
xchg
iret
andb
dec
les
mov
inc
out
cwtl
mov
dec
jl
test
adcb
mov
sub
dec
mov
sbb
pop
iret
xchg
adc
pop
ss
stos
dec
sub
nop
sbb
ficoms
inc
nop
inc
in
adc
bnd
orl
hlt
sbb
enter
lret
mov
inc
push
dec
xor
dec
push
push
sub
lock
in
ds
dec
repz
flds
hlt
jnp
decl
sub
nop
mov
push
ds
ds
dec
mov
cwtl
pop
or
insb
pop
mov
imul
add
dec
adc
inc
pop
ret
and
aas
add
jae
outsl
aaa
push
and
daa
mov
repz
fwait
pop
adc
testl
xlat
push
movsb
push
jp
sbb
push
hlt
pushaw
sar
outsb
pusha
cmc
cmpsb
popa
sub
lahf
lahf
mov
jg
cmp
andl
in
mov
stc
aam
lds
fmuls
icebp
imul
mov
dec
inc
insl
gs
pushf
jmp
push
jecxz
ret
dec
movsl
cmp
lcall
xchg
push
jno
push
jb
std
rolb
lret
adc
jp
cmpsb
mov
and
xor
mov
mov
xchg
das
cltd
pop
outsl
mov
fwait
setp
loop
push
mov
scas
clc
pop
sub
mov
pusha
lcall
push
mov
hlt
test
inc
aas
cmp
pop
inc
fwait
outsl
addl
lods
mov
add
xor
divl
jo
pop
mov
inc
rcr
sbbl
jp
mov
cld
sbb
dec
jp
pop
jle
push
and
mov
adc
add
push
sbb
cmpsb
inc
jo
into
in
dec
mov
jmp
mov
inc
aaa
call
hlt
ds
mov
lahf
pop
outsl
adc
xchg
or
imul
mov
xor
repnz
xor
jo
repnz
shl
fsubl
sahf
xchg
xor
xor
mov
stos
xlat
pop
push
or
mov
stos
push
adc
inc
gs
and
push
adc
fdivrl
xlat
add
sub
mov
push
fyl2x
pop
add
mov
cwtl
push
adc
jg
lcall
movsl
sbb
leave
stos
lock
sbb
push
xor
bound
jmp
mov
mov
repz
lea
lcall
fwait
sahf
mov
sti
sub
das
xor
jecxz
scas
inc
ret
orl
movsl
ljmp
jne
inc
push
sbb
cmpsb
or
movsb
xor
int3
lods
aas
jl
setp
push
push
or
jle
pushf
cmp
xorb
orl
or
xchg
sub
fimull
jmp
mov
xlat
adc
mov
push
shrl
in
lret
scas
in
and
mov
test
mov
popa
scas
fdivr
ss
pop
das
cmc
ret
loop
sub
leave
fxch
loope
adc
and
pushf
mov
jne
sub
mov
in
jns
jp
fnsave
inc
pop
jl
mov
add
clc
add
stc
insl
repz
dec
or
mov
push
jo
add
in
ucomiss
lods
icebp
cltd
inc
into
in
cs
iret
sub
loope
test
mov
cltd
jle
sub
mov
mov
adc
xchg
mov
and
ljmp
push
xchg
and
lea
sbbb
pop
js
pop
or
xchg
jg
cmc
push
popa
je
mov
mov
dec
jo
out
test
call
or
push
outsl
lock
movsb
lret
xchg
icebp
add
stos
sbb
xchg
stc
mov
mov
jae
cmp
clc
jl
xchg
or
push
mov
lret
je
insb
push
and
push
pop
push
aaa
test
mov
xchg
clc
adcb
or
repnz
sbb
cmp
mov
dec
cmp
out
pop
inc
enter
lods
stc
in
dec
js,pn
push
mov
ljmp
ret
addr16
ficoml
arpl
sub
push
push
rcrb
jne
sub
rcrb
push
mov
inc
lds
rcr
sbb
movsb
leave
inc
bound
int
hlt
xchg
xchg
inc
pop
test
push
push
xchg
jb
mov
lds
ds
dec
jns
movsb
add
mov
xchg
cld
int3
push
jae
lock
lahf
dec
xchg
lcall
pop
int
rorb
in
orl
jo
pop
vcvttpd2dqy
cmp
sub
inc
push
or
clc
and
xchg
int3
xchg
mov
and
push
jle
lret
in
mov
mov
jae
mov
mov
aas
or
outsb
lds
jae
jne
dec
sbb
dec
sub
inc
and
gs
ficomps
push
inc
mov
pop
call
cmpb
ja
mov
and
fcompl
cltd
jns
ss
inc
xchg
in
pop
sbb
pop
push
divl
inc
mov
sbb
in
inc
pushf
jmp
cmp
mov
rorl
shr
fwait
in
fimull
cmp
imull
dec
xlat
push
out
iret
test
push
fs
push
adc
insb
sarb
int
sub
out
xor
mov
dec
mov
adc
sub
rcr
shrl
inc
xlat
pop
add
and
push
push
out
inc
inc
mov
adcl
lods
ljmp
push
sti
incb
leave
ficoms
dec
lret
push
push
inc
insb
jmp
gs
add
ljmp
push
xchg
mov
push
mov
pop
xor
and
js
inc
inc
lods
jnp
mov
add
inc
dec
shrl
loope
stos
clc
inc
pusha
xchg
mov
cli
and
add
scas
lock
mov
adc
push
mov
mov
pop
cli
add
in
les
push
fnstsw
loope
pop
jo
xchg
add
clc
inc
xchg
fistpl
int
pop
lcall
pop
and
lds
cmp
push
daa
inc
dec
jge
push
mov
repnz
xor
or
ficompl
aam
or
pop
cmp
aad
inc
loopne
cltd
imul
ret
adc
lds
xchg
leave
clc
aam
fbstp
pop
sub
lods
fnstenv
inc
clc
int3
xorl
rol
sahf
inc
or
enter
push
ret
faddl
or
nop
xchg
inc
jl
in
inc
push
cmpl
push
es
insb
rorb
imul
fstl
aad
dec
insl
pop
add
sar
pop
mov
xchg
add
les
sbb
imul
out
cwtl
mov
push
jns
mov
cmpsb
and
mov
mov
addr16
insl
in
xchg
mov
dec
cmc
stos
xchg
lret
inc
mov
dec
xchg
pop
sbb
push
test
adc
enter
shlb
rcr
sub
jmp
repnz
xchg
out
es
pop
xchg
cmp
mov
sbb
push
clc
mov
jns
hlt
and
imul
arpl
ret
cmpsl
iret
int
mov
and
loop
and
or
lods
outsb
xchg
leave
dec
cmpb
jb
xchg
cli
jns
fstpt
shlb
xor
push
dec
std
fidivrl
dec
jb
pop
xchg
loope
or
rclb
cmp
sub
xchg
sub
popf
repz
insl
mov
sub
aad
addr16
enter
pop
mov
jle
pop
cmc
xchg
adc
nop
movl
mov
cmp
test
popf
movd
or
imul
movsb
xchg
jae
fcomp
mov
stos
xor
mov
pop
cmp
rcr
mov
cwtl
xor
mov
sub
xor
js
mov
and
repz
xchg
sahf
shr
sub
xchg
adc
mov
iret
outsb
lea
fiaddl
push
mov
mov
mov
adc
cmc
jecxz
adc
insl
mov
je
fcomps
fstl
std
mov
mov
out
mov
adc
rol
es
mov
lock
jg
enter
mov
pop
scas
stos
sub
mov
jns
shrb
inc
mov
clc
add
mov
repnz
in
cs
jle
movsb
data16
cmp
mov
mov
adc
jg
inc
pop
add
out
clc
adc
mov
mov
dec
cld
add
lret
push
inc
dec
xor
fidivl
mov
jo
xor
ja
xlat
xor
dec
sub
xchg
sub
add
test
fwait
rolb
sub
and
jecxz
pop
scas
pop
cs
daa
push
xlat
cs
rcrl
jg
sub
jbe
or
mov
add
dec
adc
test
cltd
pop
pop
pop
xor
mov
jle
aaa
push
fisttpl
cwtl
cmpb
sbb
xchg
xchg
xor
jb
push
sub
cmp
adcb
test
push
cmp
cmp
lods
push
mov
cltd
mov
xchg
sbb
sbb
leave
test
in
push
xor
pushf
inc
xor
xor
in
xchg
push
nop
fs
xor
add
push
jge
push
imul
jecxz
insb
fsubrs
inc
xchg
jmp
arpl
adc
xchg
lds
mov
nop
fcoml
or
xor
cmp
addr16
push
xchg
js
lahf
xchg
repnz
push
jge
loopne
stos
jmp
in
mov
mov
cmp
sub
sub
shrl
mov
out
int3
adc
lret
and
je
in
mov
xchg
pshufw
push
adcl
adc
call
shll
js
add
sub
lret
and
xorb
stc
inc
dec
cmpsb
scas
mov
mov
test
fbstp
pushf
rcrl
xchg
jnp
fstl
repz
std
loope
test
jp
push
fidivrs
add
inc
or
mov
vmovupd
loope
popf
pop
add
jns
push
pop
das
jb
or
rcll
or
test
mov
mov
rcll
cmpsl
xlat
mov
mov
mov
and
push
xchg
int3
fnstcw
mov
jmp
jns
ds
xchg
add
push
dec
mov
aad
lods
lea
aam
aam
sub
iret
aas
and
add
adc
jns
mov
pop
jl
mov
pop
cmpsl
int3
add
stos
fsubrp
adc
addr16
sub
pop
and
sar
int3
xor
aam
dec
jns
xor
lods
sbb
jae
ret
stc
inc
pop
out
pop
testb
iret
pop
sbb
jecxz
dec
ret
or
push
push
sub
out
mov
jge
dec
xor
data16
cld
dec
jae
mov
mov
cli
cmpsb
mov
adc
daa
pop
pop
push
rcrb
test
xchg
mov
push
scas
mov
xchg
inc
loope
repz
adc
dec
insb
rorb
adc
je
out
push
inc
lds
xorb
add
and
js
xchg
shrb
aaa
pop
mov
insb
icebp
gs
add
enter
fisttpl
push
jns
ret
pop
loop
jne
lret
sbb
inc
mov
cmp
xor
movl
sbb
ljmp
mov
xlat
mov
out
dec
adc
shll
fnsave
xor
sbb
mov
int
xchg
insb
push
icebp
jg
sarb
out
or
call
fimull
xor
and
add
or
in
mov
add
cmp
loope
sub
in
sub
mov
pop
stos
fwait
imull
jbe
in
sub
mov
xor
sbb
and
mov
mov
adc
lea
inc
gs
rol
adcb
pop
sub
add
insl
mov
jecxz
icebp
es
cli
mov
shlb
shll
outsl
push
mov
fidivl
jg
dec
es
cs
pusha
xor
jecxz
leave
push
jge
push
les
pop
push
xor
rcrb
push
sti
xor
push
adc
jmp
or
mov
pop
xchg
dec
cltd
mov
jmp
imul
cmp
inc
loop
xchg
or
mov
add
stos
inc
jne
gs
cmp
test
dec
cmp
jmp
sti
jmp
std
decl
lea
shlb
mov
inc
fs
and
inc
cli
or
adc
pop
stos
cmp
out
fs
daa
in
jg
loope
in
inc
in
xor
xchg
dec
inc
rcll
xor
mov
cmpsb
xor
das
push
je
cld
in
mov
mov
and
rorb
xorb
daa
movsl
pop
mov
mov
xlat
mov
dec
push
sub
insl
sub
push
pop
adc
hlt
daa
jecxz
sbb
aas
pop
inc
adc
and
xchg
sbb
lods
negb
outsb
mov
movsl
mov
cwtl
mov
xchg
in
leave
aad
adcb
fnsave
lcall
shl
test
cmp
sahf
cmp
push
cltd
push
sbb
andl
gs
insb
jmp
fs
push
loop
pop
adc
xchg
push
sbb
leave
push
popa
sub
mov
jl
ja
mov
mov
jb
bnd
fstps
push
xchg
sar
lcall
push
and
int3
stos
mov
sti
xor
mov
stc
push
push
lret
clc
xchg
aad
fsts
subl
inc
aad
sub
cld
idiv
call
and
testl
sbb
mov
int
xchg
and
adc
ja
pop
jno
xor
jb
clc
mov
dec
mov
xchg
push
jb
ror
lret
push
in
mov
xor
cwtl
mov
sbb
mov
repnz
jmp
mov
jge
mull
das
add
cmp
lea
push
jle
sti
jnp
push
add
and
pop
mov
push
xor
les
daa
adcb
daa
jg
xor
inc
push
inc
cwtl
or
mov
sbb
pop
popf
insb
ss
add
or
pop
jae
ret
ret
shlb
xor
push
dec
jno,pn
xchg
and
mov
sbb
cmp
inc
ret
dec
adc
mov
test
adc
mov
jle
ja
daa
jp
jp
xchg
xorps
aaa
inc
or
cmp
add
and
daa
icebp
xchg
test
dec
jl
jmp
or
jo
out
inc
jnp
cmc
das
fdecstp
pop
shrl
sbb
out
popa
pop
jp
out
dec
jnp
hlt
shrl
xor
orl
inc
dec
ds
xor
dec
xchg
push
in
cmp
sub
cmp
das
icebp
fdivrs
fwait
cwtl
dec
inc
stos
in
ficoms
ret
xor
cmpsb
cmpsb
out
mov
push
pop
ja
fiadds
dec
shlb
insl
out
xchg
ret
decb
rorl
movsb
js
jno
test
jecxz
pusha
stc
jl
mov
lds
divb
jle
repnz
movsl
sahf
je
mov
stos
outsl
inc
jle,pn
mov
xor
mov
lds
out
add
add
enter
push
out
lret
adc
inc
ljmp
cmpsb
push
lahf
or
mov
push
test
ficompl
addr16
popf
repnz
pop
jmp
add
xlat
mov
pop
mov
std
fisttpll
sub
push
pop
push
xchg
enter
out
and
push
xor
scas
mov
xchg
lods
inc
ficoml
mov
dec
cmp
inc
das
or
iret
xlat
mov
lods
nop
xchg
pop
push
and
sti
cli
xchg
push
ret
xor
mov
or
mov
xchg
jge
sub
pop
shll
pop
pop
mov
in
inc
mov
sub
sub
sti
dec
cmp
jge
cmp
dec
rclb
cli
sbb
jmp
mov
mov
orl
jnp
mov
stos
fadd
gs
test
rolb
and
addr16
push
lcall
and
jbe
lcall
sub
cmpb
cmp
imul
mov
out
test
cmp
icebp
sarb
inc
outsl
adc
stos
jns
mov
push
enter
push
leave
es
mov
jns
rcrb
ss
sahf
ret
fwait
inc
mov
mov
sbb
pop
loop
jp
inc
mov
xchg
or
adc
cwtl
add
clc
pop
inc
dec
xor
outsb
inc
sti
stos
or
push
jbe
jl
inc
outsl
outsb
ds
enter
stos
lahf
aad
push
mov
adc
push
cmp
mov
lock
daa
add
test
daa
loop
jo
shll
or
push
rcl
or
in
test
int3
inc
push
xor
xchg
test
mov
jne
or
pusha
rclb
fmuls
divb
mov
int
icebp
or
es
daa
jno
xor
mov
or
in
or
jge
mov
aam
ret
pushf
sub
push
shll
sbb
mov
aad
fsubl
mov
sbb
mov
je
sbb
add
nop
push
xor
jecxz
push
and
daa
fsubrl
ret
rcrb
or
aad
pusha
pusha
xor
cld
jnp
xor
mull
test
das
cltd
inc
addb
sarb
rep
sub
imul
sub
dec
pop
sub
out
fldenvs
test
dec
inc
es
movsl
orb
mov
fdivrl
ret
xchg
adc
mov
test
ss
jmp
iret
loop
loope
cwtl
dec
or
icebp
mov
adc
insl
mov
adc
sbb
rcrl
into
sbb
scas
jae
sub
je
ds
pop
lahf
jg
into
cmp
lds
scas
scas
add
and
sbb
push
testl
gs
les
xor
out
dec
bswap
pusha
push
lret
mov
js
cmp
and
or
inc
sub
addb
mov
sahf
repnz
cmp
fs
dec
jb
cmc
out
add
cmp
fcomip
xor
sbb
push
aad
jp
push
inc
jg
xchg
mov
adc
addr16
ret
repnz
pop
cmpsl
push
mov
cmp
dec
aad
jns
pop
pop
scas
cld
jo
arpl
cmpsl
mov
fwait
ret
cmp
cmp
outsl
mov
into
jecxz
or
shl
out
jno
pop
jmp
imul
outsl
pop
pop
xor
int
xor
mov
ret
ret
std
cmp
jb
jnp
inc
es
loop
sbb
call
sub
jmp
into
add
aaa
jl
lock
insl
cmp
ficoms
stc
arpl
xchg
xlat
cmp
xchg
adc
ficoml
addb
ret
cmp
orl
std
cmpsl
out
xchg
ret
inc
andl
inc
jnp
lcall
fwait
jb
test
add
xor
sbb
ljmp
add
push
sbb
das
arpl
inc
jne
out
cmpb
test
dec
in
push
lea
push
shll
inc
pushf
test
push
cmpsl
std
fisubs
inc
mov
add
lcall
mov
daa
outsl
addr16
jmp
dec
push
icebp
jne
in
push
hlt
cmp
inc
enter
int3
push
xchg
push
jle
aaa
cmp
in
in
cwtl
jmp
cmp
inc
or
rolb
and
mov
call
loope
sbb
xchg
sarb
in
xor
pop
sub
cmp
mov
dec
mov
push
xor
sbb
adc
mov
ja
in
and
jnp
or
cmpsl
popa
fdivr
inc
mov
cmpsb
dec
or
out
repz
andb
mov
jo
jl
dec
cmp
lock
cmp
jne
out
xor
in
pop
js
push
das
fs
mov
or
mov
cld
nop
les
sbb
enter
mov
add
sub
mov
sbb
cli
test
and
adc
jns
bound
push
dec
and
fcomi
adcl
enter
test
mov
sbb
pop
lcall
xor
leave
lahf
fs
add
leave
xor
sti
jmp
inc
movsb
jae
jg
cmp
ss
xchg
or
sbb
outsb
ror
fisubl
push
sbbl
lret
scas
push
inc
mov
and
lret
stos
das
mov
mov
sub
lcall
cs
push
fst
cmovl
nop
add
fs
stc
hlt
rorb
lds
in
mov
movsb
xchg
mov
jp
sbb
or
xchg
faddp
push
into
pop
in
out
cltd
je
movsl
sbb
and
lret
sbb
std
jmp
push
repnz
fcomp
pop
frstor
and
test
add
sahf
adc
repz
pop
xchg
and
mov
in
daa
sbb
and
jne
and
mov
stos
stc
push
aaa
lret
push
sub
sahf
cmp
push
addr16
dec
xor
std
mov
scas
subb
xchg
inc
or
scas
stc
loopne
pushf
repz
cmp
jmp
xor
loopne
xchg
mov
dec
mov
stc
xchg
mov
pop
cmc
pusha
mov
les
jg
add
aad
sub
pop
push
inc
mov
movsb
mov
cltd
and
ljmp
and
mov
xlat
outsl
into
stos
pop
out
push
push
test
mov
push
dec
icebp
cmp
mov
xchg
pop
mov
cmp
mov
inc
inc
cmp
and
xlat
dec
and
xor
lea
cs
lods
leavew
inc
inc
clc
xchg
dec
mov
sub
arpl
das
sbb
aad
or
mov
insl
inc
mov
pushf
xchg
inc
jecxz
fiadds
mov
stc
arpl
testb
outsb
testb
test
out
sbb
pop
fcmovnbe
inc
push
sbb
xor
and
icebp
loope
mov
js
je
push
ja
push
pop
in
push
dec
sbb
in
xchg
mov
dec
sbb
mov
jmp
rolb
inc
inc
js
test
in
adc
mov
dec
clc
pop
or
xchg
int3
nop
xor
pop
add
loop
inc
ret
or
cld
mov
cmc
clc
pop
sbb
push
dec
sub
jae
and
pop
cmp
addr16
cmpsl
dec
cmp
mov
xor
pop
test
into
fldcw
in
leave
sub
dec
ret
xchg
sub
movsl
fmuls
mov
cmpsl
enter
rcr
pop
pop
mov
inc
stos
js
xor
stc
ja
sahf
lds
mov
es
clc
ljmp
or
cmp
and
shll
mov
mov
std
cli
icebp
cmpsl
dec
sub
scas
dec
sbb
int
out
push
adc
test
stos
mov
sbb
fildll
fldcw
inc
dec
loopne
xor
mov
fs
data16
imul
adc
out
push
fmuls
push
sbb
outsb
imul
out
dec
sbb
subb
xor
and
pop
and
inc
cmpsb
lcall
in
or
stos
add
or
xor
fsubrs
sbb
inc
adc
pusha
pop
jg
xchg
std
mov
por
outsb
stos
ss
pop
or
xchg
iret
mov
jae
push
xor
mov
sbb
dec
outsb
inc
or
add
jmp
mov
imul
jecxz
jne
jge
dec
ds
ja
test
dec
repz
jecxz
push
je
clc
xor
or
stos
or
insb
rolb
out
and
jge
push
daa
pop
ret
divl
mov
add
cwtl
fimull
in
dec
push
xchg
sbbb
dec
ret
mov
dec
sub
mov
popa
push
jp
mov
stos
outsb
outsl
add
xor
inc
mov
push
fmuls
sbb
stos
sbb
sub
daa
jle
or
iret
roll
xchg
or
pop
mov
loop
out
add
mov
lret
push
jmp
scas
xor
cltd
jp
push
sub
jne
rcrl
cmp
or
mov
pushl
mov
jge
out
jno
sub
shlb
xchg
push
jle
dec
loopne
arpl
mov
inc
adc
or
push
and
stos
enter
jae
inc
mov
sbb
test
out
sub
std
pop
ret
ret
adc
add
cmp
test
lods
or
jmp
das
mov
stos
cld
out
call
inc
push
and
mov
lahf
push
scas
lahf
inc
jecxz
leave
iret
stos
mov
mov
mov
cmp
cli
es
stos
and
lret
insb
pusha
aas
dec
stc
adc
push
sub
outsb
rolb
xlat
xlat
pop
pop
xchg
or
sahf
sbb
and
xor
out
fucom
jl
imul
pushf
cmc
repz
cmp
idiv
cmp
stos
pop
mov
fdivl
lret
fcmovb
adc
inc
xchg
inc
cmp
lods
sbb
pusha
jb
cli
push
movsl
adc
inc
pop
das
ret
lret
pop
fimull
shl
mov
xchg
ret
pop
mov
in
mov
inc
mov
sbb
adc
roll
sub
adc
fs
aaa
rorb
pop
sahf
int3
pop
leave
mov
add
aaa
test
push
xor
ds
xor
insb
jge
mov
lea
ror
out
fcompl
cli
push
mov
cbtw
out
xchg
lret
pop
int
xchg
xchg
inc
lahf
into
cs
mov
lret
or
jbe
push
mov
lock
adc
sub
adc
or
cmp
cmp
sub
inc
mov
mov
pop
inc
dec
xor
xor
add
sti
jecxz,pn
addr16
lret
sub
arpl
xor
ficomps
stos
div
out
cwtl
fld
aam
and
lret
push
out
cs
xorl
stos
mov
je
rcrl
or
sbb
es
mov
repnz
nop
sub
ds
ds
nop
mov
out
mov
pushf
sahf
rolb
aaa
sub
dec
aam
icebp
std
out
dec
decb
sbb
in
inc
inc
loopne
inc
sti
dec
inc
and
mov
jecxz
or
dec
sbb
mov
xor
leave
das
xchg
push
pop
sub
repnz
mov
mov
nopl
adc
and
adc
xchg
andl
xor
rcrb
ss
pushf
sub
in
inc
sbb
leave
scas
outsl
mov
dec
cld
repz
push
push
or
dec
xorb
dec
test
out
mov
mov
out
les
orb
lcall
mov
push
jo
fsts
pusha
cmc
dec
cmpsb
mov
cmp
test
cmp
mov
push
sbb
mov
mov
adc
xchg
iret
jnp
lock
clc
mov
shll
test
jmp
push
jne
pop
and
and
push
loopne
mov
xchg
pop
adcl
xor
xchg
in
call
out
and
jo
jmp
loopne
out
fiaddl
xor
push
dec
mov
ja
inc
jmp
xchg
and
movsb
mulb
jecxz
lock
add
std
imul
mov
fdivl
add
fimuls
mov
mov
pop
scas
jb
es
daa
jg
cmc
xchg
add
push
jge
movl
mov
cld
push
js
sub
jle
cmp
pop
push
cltd
out
out
and
aam
iret
xchg
cli
xor
iret
sub
push
xchg
in
lahf
repz
fadds
pop
add
mov
lret
es
addr16
pop
insl
sub
sub
dec
fdiv
dec
mov
pop
lock
or
movsl
push
mov
daa
out
bound
push
push
jbe
jnp
rcrl
push
cld
or
decb
mov
or
jnp
mov
pop
mov
movsl
jecxz
dec
popa
mov
inc
push
adc
int
mov
pop
stc
xchg
insl
adc
dec
mov
ret
sub
mov
dec
imul
aam
mov
push
push
cs
or
jno
cmp
sub
cli
cmp
sub
imulb
std
sub
add
xor
test
pop
fwait
inc
sbb
add
rcll
dec
or
inc
cmpsl
lret
cmpsl
xchg
and
and
es
loop
mov
jmp
jle
negw
jl
push
cmpsl
dec
adc
jecxz
sarb
scas
cmp
sahf
xorb
inc
insl
loop
sub
lcall
jmp
dec
aam
lret
push
fsts
push
sub
call
sti
leave
movb
jb
ss
in
in
pop
add
std
jo
sub
inc
xor
popa
xlat
dec
aad
rolb
dec
push
insl
lcall
jo
popa
jno
je
jg
pop
ljmp
sbb
popf
pop
fildll
fisubs
mov
xchg
push
pop
pushl
fldl
in
rorl
pop
add
int3
pop
inc
xor
imul
xor
test
fldl
mov
in
scas
mov
rol
ret
in
daa
test
cmpsb
jae
or
add
cltd
adc
lods
popf
push
imull
mov
mov
sub
lret
cmpb
stos
lret
lock
cld
out
dec
bnd
decl
shlb
and
lret
add
fmuls
push
jb
mov
cwtl
xchg
pop
jno
sbb
inc
fwait
insb
sbb
mov
loopne
fidivrs
aad
imul
jno
shll
cltd
popl
sub
std
xchg
add
int3
inc
shlb
push
into
jl
xchg
scas
push
inc
stos
ljmp
out
push
inc
jp
fs
insb
cmp
loopne
adc
int
cwtl
pop
jbe
sar
stc
mov
dec
jnp
pop
push
sbbl
stos
ja
shl
pop
jae
adc
jnp
fldt
cwtl
push
test
sbb
inc
and
out
jmp
and
gs
cmp
or
push
pop
mov
fstpt
mov
xchg
subb
mov
sarb
orb
and
sbb
sbb
test
enter
xchg
sarb
mov
pop
dec
int
sub
movsb
lret
test
lods
pop
mov
sbb
std
inc
repnz
or
mov
stos
mov
add
mov
fisttps
scas
xchg
lods
icebp
push
mov
mov
adc
daa
cltd
fstpl
or
mov
out
lock
xor
adc
call
les
mov
mov
fnsave
jne
repz
sahf
into
lret
and
jb
mov
xor
pop
imul
mov
sub
pop
adc
aad
mov
lods
jp
pop
cmpsl
push
push
flds
jbe
xor
dec
jle
je
cmp
adc
stos
mov
fidivl
cmp
mov
loopne
push
mov
dec
add
push
dec
xchg
lock
int
dec
add
pop
icebp
jns
cmpsl
div
xchg
jl
push
in
sbb
xchg
add
cwtl
fisttpll
ss
aad
mov
notl
push
xlat
scas
sub
mov
jge
fistl
mov
aaa
inc
ss
scas
adc
xchg
or
mov
mov
or
outsb
arpl
pop
cmp
add
mov
fmuls
and
mov
outsl
pop
sbb
jne
or
inc
int3
clc
fcompl
mov
hlt
mov
sub
and
add
cwtl
inc
incl
gs
cmp
fstpl
adc
mov
lds
xor
inc
lods
jne
stc
outsl
out
and
push
test
cmpsl
lock
or
jmp
fistl
dec
push
jno
and
pop
mov
mov
push
enter
jecxz
jae
push
inc
jge
xor
sbb
mov
in
pop
pop
and
xchg
and
sarl
add
push
daa
icebp
loop
or
enter
enter
dec
mov
jo
stos
mov
nop
in
adc
and
in
jecxz
enter
push
addr16
fs
sahf
jb
push
rcr
inc
addr16
pushf
lcall
call
adc
inc
dec
and
sub
jg
repnz
sub
mov
sub
add
fiadds
xchg
cmp
test
stos
pop
adc
aam
jns
nop
pusha
xchg
sti
push
push
outsb
inc
aad
dec
inc
fadd
or
shlb
testb
fisubl
out
imul
pushf
sbb
add
fucomi
das
or
fidivl
push
jg
js
pop
pop
movsl
sub
ret
cmc
cltd
mov
arpl
push
test
and
loop
loopne
adc
xor
ds
mov
mov
dec
fwait
xor
inc
je
jg
add
hlt
jg
cmp
in
ret
addr16
dec
jb
jns
sub
cmpsb
fiadds
repnz
call
mov
das
movsb
loopne
call
sub
lahf
mov
aad
jae
cli
lret
mov
nop
add
in
xchg
in
dec
sbb
aas
test
rcl
sbb
jo
or
out
lahf
jmp
jae
xchg
jg
add
