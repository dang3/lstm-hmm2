sbb
add
mov
sbb
imul
add
mov
adc
and
nop
ficoms
mov
std
inc
cmpb
dec
and
mov
pop
rolb
or
stc
xchg
mov
rol
mov
mov
pop
outsl
mov
hlt
ficompl
scas
add
and
pusha
jp
jns
add
add
lds
rclb
repz
cmp
lea
hlt
gs
pop
lea
sub
andb
xchg
pop
and
call
movsl
js
loope
fistl
adc
xchg
in
stos
lret
das
into
dec
icebp
sbb
mov
data16
std
add
jecxz
xchg
inc
push
ret
cmc
xor
add
mov
lock
sbb
test
test
cmpsb
jne
cmp
out
and
bound
mov
fdivr
mov
mov
jo
cmp
fildl
sbb
dec
cmp
dec
f2xm1
aam
outsl
outsb
ss
and
orb
jmp
xor
lcall
jnp
jge
iret
out
xchg
dec
or
xchg
lods
mov
test
cld
push
mov
lahf
ljmp
test
stc
adc
movsl
repz
loop
iret
subb
out
cmp
loopne
add
fsubl
stos
xchg
dec
inc
push
and
orb
inc
inc
loope
dec
fisubl
ja
scas
push
scas
pop
pusha
lahf
stc
inc
lahf
lahf
sub
xlat
sub
movsb
pop
ja
sbb
mov
scas
mov
pop
dec
shlb
mov
sbb
inc
pop
sub
sbb
movaps
aaa
sbb
push
lret
cltd
inc
mov
xchg
push
push
xchg
daa
or
pop
xlat
nop
in
mov
mov
mov
mov
imul
clc
add
cmp
das
adc
mov
ds
jle
pop
mov
pop
xchg
sub
out
inc
pinsrw
in
cmp
add
shlb
out
sbb
jle
sahf
jl
jmp
adc
les
imul
loop
cmp
mov
addr16
push
pop
mov
repz
aaa
addr16
aaa
test
and
into
pop
adc
pop
jp
mov
pop
imull
jne
mov
and
cwtl
and
in
out
aas
adc
imul
mov
jl
pop
repz
and
adc
mov
rol
push
aad
das
out
cmpsl
pushf
cmp
stos
movsl
es
int3
stos
cltd
push
and
ficoms
or
mov
stc
lcall
pop
ss
ss
dec
cmpsl
les
mov
sbb
pusha
aam
sbb
lock
js
ja
xlat
daa
loope
sbb
out
nop
ljmp
xorl
int3
dec
xchg
push
cmc
sub
dec
push
outsl
lock
xchg
jp
push
gs
adc
lods
xchg
rolb
mov
sub
xor
aad
jae
jmp
or
cmp
cmpl
in
out
pop
or
pop
fidivl
gs
movsl
mov
lods
int3
dec
imul
dec
mov
sub
aam
std
popa
mov
stc
fsubs
pop
and
or
and
stc
repz
xchg
pop
jno
mov
fmul
jecxz
xor
xor
jnp
xor
pop
add
dec
shrl
add
scas
fbstp
imul
push
aad
fwait
dec
jo
mov
jmp
inc
adc
jb
mov
leave
out
pop
cmp
out
rorl
out
in
mov
mov
pop
and
ffree
mov
mov
test
sub
das
mov
ljmp
imul
sbb
movsb
xor
push
xor
mov
cli
ds
dec
and
rcrb
add
outsb
imul
aad
aam
xor
bound
pop
fisttpll
dec
addr16
out
lret
or
mov
mov
mov
pop
mov
push
mov
shl
cld
mov
mov
and
mov
movsl
jge
into
push
sub
push
adc
mov
fwait
pusha
hlt
inc
push
out
imul
and
add
aaa
sbbl
out
jecxz
mov
xor
xorb
lret
mov
jmp
movsl
scas
push
addr16
cmpsb
aad
rcl
repnz
or
mov
lcall
xchg
lcall
xlat
ja
inc
and
dec
push
ret
popf
aam
icebp
loop
xchg
dec
pusha
loope
in
std
cmpsl
pop
outsl
out
add
pop
xor
not
push
popf
adc
enter
mov
mov
and
push
popa
fisubrl
ja
cltd
ret
mov
test
jmp
cmp
sbb
xchg
lds
popf
aam
aad
les
je
inc
adc
adc
je
dec
or
sbb
lods
or
test
pop
das
orl
fdivr
jb
das
subl
inc
xor
pop
push
inc
into
mov
sbb
or
lods
popl
jge
aas
adc
shl
sub
push
sub
stc
ret
scas
lock
out
dec
stos
aas
add
mov
cmpsb
or
aad
lret
sbb
std
cmpsl
xor
mov
pop
std
push
scas
jg
cmp
hlt
jo
and
add
jle
dec
cmpsl
sbb
lods
xor
cmp
mov
inc
jmp
lahf
jne
jg
xchg
sti
cmp
sub
aas
inc
xchg
pop
lret
inc
popf
in
sub
repnz
aam
lock
cwtl
mov
mov
in
xor
push
daa
mov
scas
ds
cmp
inc
data16
jns
mov
jo
push
testb
xlat
les
mov
and
cmp
jns
loopne
test
sti
cmc
les
pop
inc
imul
or
inc
scas
jo
gs
cmp
movsb
jns
sbb
in
and
ss
hlt
rcr
in
call
mov
xorl
ss
fldenv
xchg
fiadds
shrl
aaa
xchg
js
xor
aam
mov
inc
lods
movsb
daa
push
pop
dec
leave
push
mov
inc
insl
adc
sub
or
jl
aas
cmp
and
cmc
bound
push
mov
jp
scas
out
cmpsb
push
leave
repz
sbb
push
xchg
mov
es
mov
adc
mov
das
dec
call
push
fiadds
cwtl
mov
lcall
out
adc
dec
jl
sarb
mov
fimull
stos
add
lock
test
lret
bswap
inc
popa
aam
jl
mov
pop
or
xchg
jge
imul
sarb
into
pushf
lea
push
in
adc
insb
iret
gs
inc
jge
lods
jb
push
adc
or
pop
test
out
fwait
jne
jbe
test
jp
jno
sarl
sub
mov
enter
push
add
sbb
scas
je
sbb
xor
aas
jp
dec
push
hlt
push
mov
add
lcall
mov
mov
jae
std
push
std
movsl
repz
add
inc
aad
std
cmp
scas
arpl
sahf
fmuls
dec
in
jns
repz
test
push
add
dec
js
in
cmp
jge
subl
or
flds
bound
push
mov
inc
ljmp
jb
mov
xchg
ficomps
cmp
dec
mov
jp
iret
ret
adc
inc
scas
mov
lds
inc
mov
pusha
ret
or
cld
xchg
test
sbb
push
scas
mov
pusha
loope
sub
mov
test
subl
lock
repz
add
leave
sbb
shrl
sub
stos
sub
pop
insl
loope
lea
aas
add
mov
sub
lds
call
sbb
cltd
xor
popa
adc
out
dec
insb
inc
sbb
xchg
pop
mov
add
mov
pop
es
popa
mov
hlt
adc
cmp
test
mov
lret
bound
inc
pop
into
in
adcb
fdivrl
mov
les
sbb
mov
dec
and
fstpl
cmpsl
sub
call
and
adcl
mov
and
cmpsb
xor
sahf
push
shll
xchg
mov
bound
leave
fcompl
pop
push
xchg
mov
dec
gs
mov
ss
lcall
adc
cwtl
mov
orl
icebp
xlat
dec
std
pop
imul
sbb
and
pop
push
mov
shl
sub
xchg
adc
jb
ror
ds
lods
sub
js
sub
and
mov
in
push
ja
pusha
imul
dec
mov
cmp
xchg
adc
scas
cmp
sarl
insb
ret
ret
jle
mov
bound
addr16
mov
push
lret
popa
jnp
sub
mov
jno
pop
mov
jp
mov
fucom
test
jecxz
push
movsl
xchg
mov
das
jne
fdiv
cmp
shl
repz
arpl
push
mov
inc
loop
fwait
or
dec
rcr
stc
push
mull
mov
xchg
xlat
cpuid
mov
push
stos
stc
lcall
dec
sbb
mov
insl
inc
std
test
cltd
add
or
pop
sarb
ffreep
pop
jecxz
sub
loope
and
sub
cmp
adc
pop
inc
cmp
repz
mov
mov
push
lods
int3
mov
sbb
and
sub
sbb
adc
xchg
xorl
or
andl
das
inc
mov
jmp
mov
pop
fwait
jno
mov
dec
daa
xchg
inc
loopne
or
inc
or
xor
mov
jnp
int3
out
cmpsl
mov
into
ds
sbb
add
stos
es
loope
mov
vandps
push
mov
dec
out
mov
push
testl
xchg
or
mov
psllq
orb
jle
jg
clc
fcoml
bound
push
ss
add
je
mov
dec
arpl
and
inc
mov
jo
adc
xor
xor
pop
jge,pt
dec
fidivs
dec
shrl
cmp
xchg
xchg
scas
repnz
dec
cld
jmp
xchg
lods
push
ss
push
dec
jno
mov
xchg
out
jle
test
xor
enter
pop
sbb
aam
sbb
not
inc
das
out
cmc
clc
cltd
add
fcoml
adc
lea
sub
xchg
je
test
out
sarl
mov
or
test
xor
jb
enter
mov
pusha
push
ficoms
cmpsb
pusha
aad
ds
pushf
pop
xor
mov
mov
cmp
stc
nop
sub
shrl
lahf
sub
or
cmp
mov
adc
push
daa
ljmp
sbb
mov
pminsw
mov
mov
insb
mov
popf
xor
into
std
pop
int3
cmp
jo
test
ljmp
and
adc
fistps
lock
or
sahf
cli
fcoml
ss
or
xchg
and
andl
test
mov
sbb
xchg
mov
mulb
out
es
mov
mov
xchg
shrb
and
or
xor
pop
movsb
adc
or
xchg
inc
adc
sti
xchg
push
fisubrs
sbb
pop
jp
mov
test
push
push
mov
sbb
add
dec
pop
xor
pop
and
popf
xchg
lahf
aam
enter
inc
mov
loopne
lods
xor
lds
mov
inc
in
ds
and
cmp
jl
cld
cli
cmp
jne
int
in
xor
icebp
push
mov
adc
data16
jmp
andb
enter
aaa
dec
fnstcw
rcr
add
icebp
add
pusha
dec
lahf
xor
jmp
lock
mov
mov
push
daa
cmp
sub
mov
or
and
fsubp
in
xor
js
jno
and
out
push
or
mov
push
jg
mov
push
fwait
rclb
mov
mov
loope
dec
out
loop
ret
out
mov
jmp
pop
adc
jg
jns
adcl
addl
rcrb
xor
xor
mov
bound
sbb
mov
and
and
dec
out
das
arpl
and
and
push
insl
les
adc
loopne
push
movsl
push
inc
xchg
sbb
dec
jb
cmpsl
add
mov
sbb
mov
cmp
fidivrl
fistpl
mov
push
xor
jle
lea
clc
dec
xadd
xlat
in
push
and
inc
incl
push
fmul
mov
mov
mov
dec
testl
adc
mov
mov
inc
inc
or
lock
mov
fdivrs
test
rclb
in
mov
cmpsl
shr
cmp
cmp
imul
adc
and
push
push
mov
insl
add
movsb
and
adc
inc
andl
outsb
icebp
push
js
mov
scas
jl
xchg
mov
adc
pop
jl
repz
test
fisubs
jo
cmp
sti
fwait
push
sbb
popa
ret
jno
pusha
push
cld
and
pop
repnz
mov
aas
pusha
xchg
mov
inc
je
mov
sub
fcmove
xor
mov
repnz
or
jp
dec
dec
lcall
adc
cmp
add
insb
cli
cld
ret
jne
xchg
cli
add
cmp
mov
pushf
out
out
repnz
adc
inc
xchg
bound
mov
sub
je
addb
sbb
aad
arpl
mov
test
rep
pop
loopne
cmp
cmp
or
push
out
dec
lret
mov
xor
jge
lock
push
mov
dec
xchg
adc
das
js
xor
dec
jmp
jl
or
ss
pop
and
aaa
pusha
sub
add
sub
mov
dec
mov
insb
hlt
mov
cmpsb
mov
in
into
rcrl
sub
add
mov
mov
xor
xor
pop
inc
subl
mov
xchg
inc
cli
mov
sti
cmp
push
mov
shl
daa
pop
stos
dec
and
in
mov
cwtl
loopne
adc
jae
dec
enter
imul
ret
loope
cmp
scas
fbstp
push
inc
rolb
mov
xchg
cmp
xchg
jmp
or
add
push
push
cld
push
add
or
in
inc
fsubrs
gs
lahf
faddl
lahf
xor
mov
shlb
dec
repz
jmp
sub
movsl
mov
ss
into
mov
nop
ss
cmpl
stos
jbe
mov
repnz
pop
scas
insb
jge
je
cmp
mov
mov
and
clc
pop
cmp
push
mov
cwtl
sbb
mov
push
add
insb
dec
mov
out
sbb
mov
mov
pushf
cmp
cmp
stc
add
data16
push
add
push
jecxz
sub
lret
mov
add
fcomps
in
jae
pushf
or
mov
in
and
xor
shlb
push
cmp
xor
lock
jge
aaa
push
inc
lods
not
mov
push
dec
fdiv
cmp
inc
popa
daa
mov
test
jns
mov
repz
push
sarl
sbb
mov
cmp
ret
add
mov
test
cld
sti
inc
mov
jp
jge
jb
pop
stos
pop
push
dec
lods
lea
andl
and
jbe
arpl
jle
pop
or
aad
pushf
mov
adc
mov
scas
mov
dec
popf
inc
or
pop
mov
and
mov
push
stos
ret
outsb
dec
arpl
fcoms
dec
push
nop
pop
push
adc
push
in
loop
imul
cmp
mov
xchg
sti
adc
sbb
jp
dec
pushf
mov
jne
es
xor
mov
idivb
clc
repnz
dec
push
movsl
mov
sub
push
cmp
sub
inc
jge
cltd
push
sub
shrb
mov
clc
dec
push
push
ret
and
lahf
sub
mov
repz
fnsave
test
into
mov
scas
pop
mov
push
gs
mov
lock
ja
or
lret
mov
sbb
push
idivb
push
leave
dec
sub
ds
lea
adc
loopne
cli
dec
roll
ficoml
push
adc
push
movq
stos
jb
pop
sbb
inc
fisubrl
or
lods
das
xchg
repz
inc
push
cli
popa
xor
mov
push
pop
sbb
call
lods
jge
cmpsb
bound
rolb
fildll
cmp
mov
ret
sbb
jp
mov
push
in
inc
icebp
scas
pop
jp
sub
fcomps
sti
cmp
xchg
and
mov
cmpsl
ljmpw
push
add
filds
mov
mov
imul
daa
pop
ret
dec
or
jp
push
mov
fwait
sub
loope
xchg
gs
sub
in
in
mov
fnsave
sbbb
rolb
push
nop
stc
add
loope
in
jl
divl
pop
mov
ds
sub
mov
push
out
pop
lahf
and
xchg
out
ret
in
repz
or
jnp
or
adc
add
and
mov
inc
or
mov
je
lcall
cmp
and
icebp
lock
pop
out
in
adc
sub
sub
mov
mov
cmp
ret
test
sub
mov
pop
js
scas
fisubs
loop
jmp
xchg
jl
rcrb
xor
ret
sbb
movsb
mov
pop
idivb
fadd
in
in
js
and
xor
aam
lea
popf
cmp
cs
pop
scas
dec
jecxz
inc
enter
add
addl
gs
int
out
arpl
jns
sbb
add
sbb
sbb
out
adc
cmpb
mov
and
jne
lcall
xchg
lea
imul
jle
mov
add
pop
mov
push
push
out
cmp
pop
sub
fcmovb
fwait
sahf
cmp
ss
add
mov
rcrb
mov
mov
add
xchg
push
sbb
dec
push
adc
imul
fmull
nop
test
jae
and
sti
shlb
xor
pushf
xor
and
pop
in
pushf
dec
incl
icebp
dec
xchg
addl
enter
cmc
std
push
in
push
mov
cwtl
pop
cmpsl
aas
sub
xor
adc
cltd
mov
xor
cmp
mov
add
adc
mov
cmp
mov
and
pop
xor
push
faddp
push
add
out
daa
subl
fcomps
mov
gs
dec
mov
xor
pop
add
test
imul
out
mov
dec
ss
enter
jo
cmp
push
inc
lods
push
xor
mov
xor
lret
test
loope
or
dec
in
or
notb
fbld
out
lea
jno
arpl
js
xchg
hlt
sub
xor
mulps
mov
adc
movsb
adc
push
fiadds
shll
in
mov
xchg
mov
les
push
fldenv
and
and
jnp
lds
jge
adc
stos
lcall
xchg
out
pop
out
hlt
mov
push
sub
push
xor
jl
pop
add
loop
sahf
dec
rolb
mov
ret
add
mov
pushf
cmpsl
and
xchg
add
jno
pop
push
jns
mov
xchg
out
iret
and
into
or
pop
cmp
fsts
fisubrs
rcrl
dec
sub
pop
ret
add
lds
mov
add
movsl
mov
lret
add
int3
shrb
jne
data16
loop
popa
mov
jns
pop
rorb
and
pop
leave
jp
imul
mov
or
lahf
subb
and
mov
lods
call
jge
and
mov
push
in
pop
aas
out
pop
mov
mov
negl
std
mov
inc
push
and
push
pop
lds
dec
jo
lea
enter
mov
add
pop
test
mov
add
sbb
cmc
xchg
stc
jle
xchg
sub
cmp
dec
movsl
adc
int3
subl
mov
cmpsl
clc
ss
inc
div
out
cmp
mov
pop
cld
cmp
inc
scas
clc
push
sub
jge
cmp
out
inc
xor
cltd
mov
mov
jbe
das
outsb
dec
add
mov
pop
sub
xor
pop
adc
scas
inc
cwtl
mov
pop
cmpl
mov
and
mov
xor
mov
adc
in
or
aam
add
loop
and
aad
cltd
cltd
add
and
aad
inc
jmp
adc
sti
fsubrl
and
jno
in
fisubrs
xor
ljmp
mov
ret
jno
inc
xchg
ss
xor
jp
mov
adc
lods
sub
movsl
mov
xor
std
sahf
cmp
mov
push
js
dec
gs
mov
push
enter
fldl
sahf
xlat
sahf
imul
shll
fs
loope
mov
aam
xor
aaa
mov
xchg
jl
mov
fwait
xor
rol
cltd
inc
cld
inc
mov
repz
lahf
enter
movsl
sub
sbbb
in
fiaddl
in
pop
lcall
jge
push
iret
mov
pop
icebp
xchg
xlat
cmp
nop
or
push
call
fs
mov
cld
or
dec
fnstcw
cltd
jg
and
imul
cli
push
cmp
mov
test
pop
dec
ret
int3
lcall
pop
jo
adc
jnp
jp
daa
imul
jo
incb
out
cmp
cmp
jb
xchg
pop
mov
mov
fcoml
mov
pop
clc
xchg
jge
scas
xchg
aas
cltd
sbb
dec
loopne
lock
imul
sbb
lcall
jp
sbb
cmp
jp
sub
mov
push
pop
jae
into
mov
test
in
inc
fisttps
dec
inc
jb
cmp
insb
fmul
addl
in
out
mov
xchg
or
xor
adc
and
out
lcall
lea
bound
mov
xor
and
mov
iret
cmp
mov
ret
stc
arpl
and
aam
cmp
insl
push
xchg
fwait
sub
cmp
dec
in
shl
jnp
mov
adc
xchg
mov
mov
clc
fwait
push
out
cmp
stos
mov
mov
push
pop
or
sub
adc
lahf
andl
pusha
cwtl
ds
adc
and
imul
cmpsl
push
pop
xchg
mov
sub
ljmp
jnp
pop
jno
mov
inc
mov
mov
sbb
inc
fistl
mov
jg
sbbl
arpl
jmp
je
sarl
push
dec
outsl
xor
push
add
aaa
scas
mov
push
ljmp
mov
xorb
cmc
add
sub
or
cmpsb
fnstsw
outsb
nop
add
mov
push
mov
cltd
shlb
mov
sbb
mov
inc
mov
je
pop
mov
fdivl
mov
imul
xor
dec
adc
pop
sub
push
pusha
int
into
inc
mov
pushl
and
mov
hlt
daa
pop
sub
xor
rorl
loope
cmc
mov
cld
and
sbb
push
pushf
xchg
aad
push
outsl
fildl
mov
mov
xchg
in
jmp
cmp
out
jmp
jns
push
sahf
insl
imul
lock
stos
imul
xorb
push
xchg
adc
jl
push
test
lahf
mov
stos
in
out
push
xchg
sbb
mov
jecxz
sbb
inc
lods
movsl
test
inc
cmp
cmp
es
sbb
dec
sub
adc
scas
mov
xor
test
adc
mov
je
cld
sbb
dec
push
cld
js
je
pushf
mov
sbb
or
imul
push
jecxz
xchg
xchg
js
xor
jo
xchg
nop
lcall
pop
je
dec
mov
pop
xor
insl
xorl
or
mov
fnstcw
lds
sbb
lahf
xor
fisubl
xor
sarl
inc
or
mov
pop
imul
cltd
aad
and
dec
push
jecxz
push
stos
push
adc
mov
cltd
push
pand
frstor
push
push
pop
gs
sarb
mov
les
out
adc
mov
inc
sbb
popa
mov
test
inc
mov
lret
xchg
jge
jmp
lret
sbb
call
outsl
repz
std
xor
pusha
mov
imul
sahf
pop
xlat
jecxz
stos
mov
inc
notb
xlat
call
dec
in
sarb
inc
push
outsl
and
cmpsl
cmp
test
jo
ds
cmp
lds
inc
and
cmp
and
cmpsl
sahf
mov
pop
fdivrs
pop
cld
mov
or
ljmp
test
mov
gs
dec
scas
cmpsl
addr16
jecxz
or
xor
dec
mov
pop
orl
pop
enter
cmp
xchg
inc
fildll
aaa
fs
xchg
cmp
xchg
and
jge,pn
push
cmp
repnz
pop
pop
popa
mov
ja
pop
xchg
jnp
dec
inc
push
dec
xor
dec
stos
out
or
out
ror
lods
dec
add
roll
cmp
xchg
inc
jp
ret
jb
cmp
push
and
cmp
add
std
scas
inc
int
or
pop
pop
dec
xor
ror
jecxz
je
pusha
mov
pop
mov
mov
test
xchg
popa
mov
je
mov
and
in
sbb
mov
jae
ss
mov
inc
dec
jmp
mov
inc
lods
push
mov
outsb
test
rorb
mov
sahf
pop
mov
push
popa
leave
or
sub
and
jnp
lret
test
fnstcw
pop
and
xchg
xchg
cwtl
inc
not
cmp
divb
mov
aad
das
push
rclb
cltd
into
fs
leave
shll
xor
inc
or
or
test
push
pop
std
mov
mov
add
mov
xlat
loop
mov
lods
shrb
mov
pop
lret
or
loop
outsl
pop
sbb
xor
lret
jb
jb
mov
mov
stos
fcomps
sbb
push
and
lret
es
call
pushf
push
mov
stos
out
in
ret
shrb
cwtl
das
pop
xor
notl
shrb
enter
stos
inc
push
mov
adc
or
xor
xor
xchg
or
jmp
pop
stc
adc
mov
and
jnp
arpl
fiadds
push
stos
push
xor
fists
outsb
sti
cmp
push
jle
pop
xor
leave
out
shlb
sub
jnp
ret
jmp
ret
lcall
pop
mov
push
mov
imul
int3
mov
push
ret
mov
fwait
cli
mov
incl
mov
arpl
data16
shl
scas
bound
in
add
mov
inc
jnp
push
dec
xor
jle
lea
mov
int3
pop
adc
jge
mov
pop
mov
dec
mov
pop
and
jle
aam
loopne
out
sub
xlat
pop
ret
xchg
fsubrs
into
hlt
in
push
iret
mov
fwait
pop
jp
add
fcomp
jns
and
xchg
xor
cwtl
fcomip
pop
add
push
cli
adc
dec
test
rcl
pop
js
aaa
xlat
dec
cmp
das
aad
xor
and
fstpl
xorb
cmp
cmp
loope
add
jno
cmpsl
into
jae
sbb
sub
or
dec
or
aam
ljmp
aaa
push
outsl
dec
lods
xor
repz
sbb
rorl
and
repz
je
addr16
jmp
cmp
mov
push
test
aaa
mov
push
xor
fstpl
scas
testl
in
xor
in
negl
dec
call
insl
dec
and
or
xchg
add
fimuls
shlb
aad
pop
fldcw
ja
in
xor
mov
inc
jp
cmc
bound
loopne
std
orl
inc
vcvtsi2ssl
cmpsb
dec
cmp
xchg
inc
fs
dec
ret
jo
jnp
xchg
or
sti
push
ds
ret
mov
push
push
sahf
mov
push
and
jmp
inc
push
sub
test
pushf
or
or
aaa
and
fcomp
xchg
adc
leave
fcoml
push
xchg
mov
pop
pop
ljmp
shrl
test
xchg
test
sub
mov
mov
mov
xor
gs
int
hlt
inc
call
mov
sahf
into
xchg
pop
ficoms
mov
stc
test
mov
xchg
outsl
dec
inc
sbbb
sar
imul
jmp
pop
xchg
xchg
loop
out
mov
add
push
mov
psllq
movb
mov
sarl
pop
mov
push
xchg
in
adc
push
dec
aad
ss
sbb
insb
and
in
insl
pop
sub
arpl
dec
mov
mov
cli
test
xor
rclb
pop
jbe
out
cli
lret
test
dec
mov
in
shl
xchg
sub
and
and
jp
cmp
sbb
in
cltd
or
ds
or
dec
xlat
jl
movd
inc
and
cmp
xor
sub
into
iret
jp
jp
mov
out
xor
push
movsb
imul
popf
mov
xchg
out
or
lcall
rorl
xchg
clc
mov
or
or
stos
dec
push
popf
add
out
popa
incl
mov
xor
shll
call
xchg
inc
push
addl
mov
dec
movsb
inc
ret
and
sbb
jmp
lret
mov
lods
and
mov
push
test
mov
push
es
arpl
cwtl
aad
and
or
push
push
mov
sti
sub
mov
aad
or
scas
jae
add
adc
and
push
mov
pop
xchg
pop
enter
ffree
imul
jbe
repz
dec
insl
mov
shl
sub
push
fdiv
cmc
xorb
jmp
jbe
sbb
cmpsl
jbe
jle
push
dec
or
mov
xchg
jle
es
dec
stos
mov
lea
fisttpl
lods
hlt
and
pushf
inc
or
mov
inc
shl
outsb
ljmp
cli
adc
test
lahf
call
cmp
fstpl
mov
pop
pop
lahf
je
sti
sbb
cmc
js
popa
and
fnstsw
mov
out
scas
into
adc
xchg
push
or
cmp
and
scas
inc
cwtl
pop
mov
inc
insl
je
xchg
ret
loope
test
es
pop
and
cmp
shl
mov
mov
jp
icebp
fistpl
cwtl
aam
popa
mov
daa
arpl
mov
das
mov
mov
push
test
sbb
loop
pop
push
movsb
add
das
lods
cwtl
push
push
xchg
mov
iret
dec
mov
das
sbb
push
xchg
cmp
outsl
fnstcw
and
sub
test
out
jbe
cmpb
xor
mov
movsl
mov
arpl
jb
and
and
movsb
and
adc
jmp
js
xor
enter
sbbb
repz
jp
pop
fs
jbe
pop
inc
pop
mov
cmovp
cli
sub
sahf
pop
cmp
push
add
push
jge
stos
out
push
jl
out
cli
orl
lock
sbb
or
push
bound
jbe
xchg
xor
xchg
dec
pop
pop
out
aas
inc
hlt
out
clc
pop
mov
out
mov
das
cmp
adc
gs
in
pop
test
popa
out
inc
scas
xchg
cmp
and
aas
cmpsl
mov
cmp
xchg
cltd
sbb
jnp
pushf
fisubl
movsb
mov
xor
dec
cmpsb
lods
jb
and
in
cmp
jl
dec
sahf
or
lock
xlat
push
cld
iret
outsb
mov
test
repnz
scas
pop
mov
mov
popa
sub
leave
shll
loopne
andb
xor
or
lods
imul
into
lahf
or
pop
test
push
sub
stc
shll
xlat
mov
ret
test
sbb
sbbl
jnp
jo
scas
sbb
cmp
mov
fidivs
add
movsl
sbb
fs
enter
jbe
mov
adc
cld
mov
clc
cld
data16
dec
pop
or
call
aaa
push
and
loop
int3
mov
jmp
and
fs
data16
aas
clc
jg
add
inc
pop
push
mov
fldcw
dec
les
cmc
ret
aam
ret
ret
sbb
mov
pop
xor
dec
adc
stos
in
movsl
pop
cmp
insl
xor
sbb
gs
xor
jae
mov
xchg
std
idiv
mov
lea
aas
je
add
inc
pop
cltd
and
xchg
pop
ret
mov
xor
dec
mov
imul
sbb
jno
aad
rcrl
xchg
paddsw
jae
ds
jae
leave
cmpsl
loopne
fnsave
pop
push
std
add
mov
out
stos
in
mov
lret
pop
mov
in
negl
xor
xor
leave
out
push
arpl
pop
dec
cmp
mov
and
cmpsb
xchg
nop
iret
hlt
shll
adc
mov
cmpsb
jns
nop
mov
inc
mov
fimuls
scas
popf
mov
jle
lret
lea
adc
xor
mov
push
jne
sbb
cli
inc
adc
fidivl
xor
lcall
and
jecxz
dec
out
push
frstor
loope
je
mov
sbb
mov
loop
rolb
jle
and
or
ss
stc
fstpl
and
jl
fcom
jecxz
pop
cltd
mov
scas
test
shlb
movsl
prefetch
movsl
push
cwtl
xor
xor
lcall
stos
sub
sub
mov
cmpsb
mov
cmpsb
xchg
clc
scas
sub
sbb
pop
sbb
lods
mov
ficompl
cmpsl
push
mov
mov
mov
add
fs
jae
dec
jb
mov
or
fmuls
fnstenv
adc
cmp
mov
mov
sti
pmaddwd
xchg
pop
movsb
mov
test
xchg
jmp
mov
xor
cmpsb
test
gs
or
es
daa
test
bound
mov
jp
aam
xchg
adc
sbb
jg
push
aam
sub
cwtl
jge
push
add
jmp
push
mov
in
xchg
sub
mov
aaa
test
outsb
ljmp
movl
sub
jp
sub
sti
xchg
repnz
fnsave
popf
mov
pop
imul
mov
test
shll
mov
xchg
mov
xor
xchg
fstl
xchg
das
or
pop
cmpsb
xchg
push
sbb
mov
or
mov
add
push
push
dec
out
sahf
ja
insl
cld
push
or
sbb
nop
sub
call
mov
ds
and
push
inc
xor
nop
and
mov
or
mov
pop
sbb
in
fs
inc
xchg
vmovhps
push
push
je
xchg
adc
or
loope
lods
mov
add
outsb
or
mov
xor
movsl
in
outsl
mov
dec
mov
scas
out
cmp
jbe
jne
sub
pop
ja
lret
mov
xchg
xchg
into
ret
jge
mov
bound
lods
movsb
push
outsb
add
das
movsl
lea
fs
and
push
orb
lock
rclb
es
xor
xor
mov
pop
jbe
out
jno
aas
popf
loopne
push
inc
enter
imul
ret
sub
repnz
cmp
repz
and
loop
fsubr
push
pop
test
add
xor
pushf
pop
inc
test
xchg
inc
cmc
mov
lods
jmp
sbb
add
mulb
int3
adc
lret
jno
cmp
add
data16
lods
cwtl
test
adc
orb
xchg
in
test
packuswb
dec
int
dec
jle
jae
es
mov
pop
pop
shll
mov
scas
out
jge
jmp
lea
jmp
jmp
or
call
cmpsb
ss
dec
das
ret
lret
cmp
mov
jae
aad
sbb
push
and
into
lahf
les
cmp
and
push
push
in
sub
das
mov
mov
outsl
sarl
xchg
fcoml
addr16
test
cmp
lret
fnstsw
jns
lds
ljmp
sbb
pop
jl
daa
dec
push
mov
mov
out
jnp
shll
mov
out
or
fimull
adc
fwait
add
jno
add
dec
loop
inc
mov
pop
rcrb
cmpsl
rorl
fmulp
mov
test
push
int
stos
movsl
mov
bound
push
fisubrl
adc
loope
dec
fwait
sbb
in
xlat
mov
cmp
lret
in
mov
push
lock
stos
cmp
lret
inc
sbb
loop
ss
scas
push
fsubl
inc
leave
mov
loope
pop
push
jp
ss
clts
push
sahf
cmp
out
xchg
sahf
dec
ds
sar
jge
mov
gs
push
shufps
push
cld
or
xchg
xchg
notl
pop
add
push
jg
xchg
dec
mov
ret
std
mov
rcll
movsb
push
jmp
testb
leave
cli
add
scas
jb
add
lds
mov
sbb
jne
jmp
imul
lret
ret
sarb
add
mov
mov
das
mov
arpl
mov
add
ficompl
and
or
mov
push
push
shll
xchg
rcr
test
lods
je
dec
push
push
adc
pop
jns
add
scas
jmp
dec
xchg
div
popa
dec
testl
inc
inc
arpl
decl
fistpll
je
std
mov
dec
hlt
jae
xor
push
imul
xor
into
xchg
adc
push
sbb
ja
mov
pusha
cltd
cmpsl
mov
pop
sbb
pusha
lret
and
test
xor
sub
ljmp
adc
nop
lret
loopne
jae
jecxz
fisttpll
arpl
shll
and
testb
xchg
bound
sahf
testb
test
clc
addb
out
and
sqrtps
outsl
xchg
int3
dec
shrl
sbb
popa
sbb
xor
and
and
imul
dec
mov
mov
push
adc
insl
mov
cmpb
popa
mov
stc
dec
xchg
test
in
imul
movsb
mov
js
adc
mov
in
shll
mov
sub
xchg
faddl
dec
cmp
push
pop
fcompl
repnz
call
pusha
mul
or
mov
inc
loop
or
movsl
mov
fsubl
push
es
mov
js,pn
lret
scas
mov
pop
mov
or
ljmp
dec
popf
out
les
jmp
insl
mov
cmpb
mov
inc
jge
aas
movsl
pop
insb
pop
mov
enter
data16
arpl
fdivs
xchg
leave
xor
lods
add
testl
push
and
sti
and
sahf
cmp
sti
iret
fwait
movsl
imul
cli
adc
sbb
sub
sub
es
dec
jb
aas
out
xchg
sbb
dec
stos
mov
cltd
dec
arpl
push
mov
fimuls
mov
cmp
push
mov
dec
pop
adc
call
jo
popa
scas
adc
jmp
adc
add
xchg
hlt
fdivrl
insb
pop
cmp
test
test
mov
push
jle
mov
enter
movsb
movsb
fidivl
rclb
jg
scas
fadd
cmp
data16
xlat
fistl
sahf
sti
mov
out
mov
cmpsb
jae
pop
and
pop
shll
mov
rcrl
inc
ds
sahf
and
pop
push
jp
dec
in
data16
mov
add
inc
xchg
add
hlt
and
test
push
inc
imul
repnz
sub
popa
jmp
pop
aaa
mov
icebp
loopne
aad
sbb
jnp
lods
mov
stos
enter
push
pushf
and
hlt
xor
shr
les
lods
inc
shrl
cmp
mov
ja
mov
movsl
out
loope
into
cltd
add
mov
adc
insl
aam
pusha
jge
in
outsb
mov
in
shlb
insl
dec
sub
and
fimull
ret
ud0
dec
cmpsl
dec
mov
lods
push
sarl
test
mov
push
stc
cmpsb
push
mov
sbb
int3
push
add
sbb
bound
dec
jne
or
ret
data16
in
fmull
jbe
add
js
repnz
jge
mov
jb
int3
lret
mov
bnd
jnp
cltd
cmp
or
sub
es
imul
cmp
or
rcrl
cmp
arpl
call
addr16
subl
dec
movsb
pop
popf
imul
and
sbb
in
pop
dec
xchg
fisttpll
xchg
push
enter
pop
xor
fldt
pop
sub
adc
in
sarl
inc
imul
pop
aaa
jno
cli
jnp
xor
int3
mov
sub
mov
repnz
mov
scas
sub
cmp
mov
rcll
addr16
fidivl
jmp
and
pushf
cld
nop
push
in
mov
js
test
inc
cmpsl
xor
sbb
into
dec
inc
cltd
jge
lret
mov
sti
cmp
cmp
out
cmp
pop
jns
ror
arpl
pop
pusha
and
xchg
shll
leave
pop
mov
sub
cmp
int3
in
in
iret
mov
cmpl
xor
fbld
jo
add
out
mov
inc
call
rcll
push
insl
cli
pop
cmp
std
adcl
xor
popa
into
js
pop
popa
pop
cs
test
pop
out
sbb
jo
cmp
pop
sub
push
fwait
push
aad
inc
push
dec
inc
adc
fidivs
xchg
repz
shll
sub
ret
ljmp
rcrb
cmp
adc
adc
cld
push
arpl
aas
lahf
and
ret
shr
inc
mov
adc
aas
mov
aas
mov
arpl
mov
pop
jno
push
out
lret
mov
loop
test
adc
loope
loope
mov
cs
mov
mov
int
push
push
int3
das
pop
sub
dec
out
cs
jp
push
xlat
ds
pushl
mov
iret
into
push
and
sbb
out
dec
and
sub
shrl
push
inc
pop
out
cli
push
stos
cmp
mov
ds
icebp
nop
xor
cmp
sub
leave
scas
xchg
or
adc
dec
sub
cmpsl
loop
scas
sbb
aad
nop
gs
sub
jb
int3
lea
jns
cmp
fcoml
pop
bnd
inc
push
sahf
ss
notl
or
or
ret
add
test
xor
fwait
inc
shrl
outsb
jbe
sbb
cltd
bound
mov
cld
cmp
stos
sbb
xchg
inc
inc
rclb
bound
jbe
enter
mov
inc
daa
xchg
insb
add
popa
ret
jns
cmpb
gs
test
hlt
cwtl
or
sbb
or
ss
push
das
lods
jne
push
pop
loopne
mov
jne
popf
insl
jle
mov
jle
push
lret
fs
mov
push
cmp
add
lods
lock
sub
xlat
repz
push
je
xor
add
aam
cmp
test
stos
into
cwtl
addr16
cmp
push
cmp
push
inc
push
push
fldcw
lock
add
lahf
jmp
mov
push
push
js
dec
mov
cli
sbb
hlt
jle
stc
mov
js
sti
addr16
test
fisubrs
xchg
sbb
js
iret
imul
pop
or
fsubrs
pop
cmp
leave
jle
adc
idiv
push
and
testb
mov
or
movb
dec
mov
into
loopne
dec
aad
hlt
inc
scas
scas
xor
jns
xor
in
xorl
pop
shll
paddusw
clc
xor
out
add
lods
jl
addl
xchg
pusha
jno
mov
nop
sub
aam
out
xor
insb
mov
mov
push
ja
lds
cmp
sub
mov
xchg
out
stos
adc
inc
pop
inc
push
rclb
xor
ret
fildl
inc
ss
and
fwait
cmp
cmp
push
cld
lods
xchg
lock
adc
cmp
mov
sar
sbb
ja
add
lret
pop
mov
in
sub
loopne
mov
or
pop
insb
cmp
push
adc
aaa
nop
ret
stos
inc
cmp
int
fdivrl
sbb
mov
or
dec
mov
int
cmpl
clc
pop
andl
sahf
cld
or
inc
pop
xchg
push
adc
mov
lods
inc
adcb
inc
adc
popf
gs
jp
sub
ds
icebp
lret
jbe
in
add
cmpsl
pop
repz
cwtl
add
nop
dec
outsl
pop
loopne
clc
fdivl
into
dec
lea
mov
imul
stos
fs
loopne
push
or
adc
add
xchg
xor
into
or
dec
stos
add
push
adcl
push
mov
push
repnz
lock
lock
jecxz
sbb
pop
adc
jecxz
shl
sub
sbb
pop
dec
jae
inc
pop
jno
sbb
dec
pop
lock
es
xlat
psubq
xor
loop
mov
pop
dec
ficoml
pop
sub
pop
cld
xchg
cs
adc
aam
jo
sub
or
push
pop
push
mov
inc
push
mov
out
jbe
scas
rolb
xor
inc
push
sub
nop
mov
fs
stos
aas
inc
mov
fcomip
cltd
mov
rorl
das
mov
dec
outsb
je
or
ss
aad
movsl
mov
add
add
lret
rcll
jle
sub
xchg
mov
or
gs
pushf
lds
push
xlat
das
daa
mov
mov
cmpsl
ja
je
aad
out
scas
inc
fdivs
lret
movsb
jo
inc
lods
adc
rorl
fistpll
jle
in
adc
imul
push
lea
or
and
jp
scas
sub
cmpsl
ret
aam
sub
sub
stos
xchg
inc
popa
mov
xchg
cmp
iret
jbe
pop
das
jecxz
sti
jns
and
insl
popa
jp
pop
in
push
cmp
push
lret
aaa
fmul
jg
int3
xor
int3
ss
cmp
pop
int3
outsl
cltd
mov
dec
jecxz
and
xor
sub
les
loope
insl
sub
je
and
xor
add
pushf
or
xchg
and
icebp
loope
call
xchg
cmpsb
mov
cmp
inc
call
js
add
mov
inc
jae
mov
and
and
js
add
xchg
adc
add
arpl
sub
fbld
mov
jne
jb
xor
mov
mov
jno
push
inc
stos
cmpsb
xchg
aas
sbb
xor
push
adc
sbbb
ds
push
push
test
pop
movsb
or
into
sti
inc
sqrtps
pop
loope
rcr
inc
mov
es
sahf
adc
inc
testl
push
sbbl
pop
int
lcall
lock
idivb
and
jl
fcom
or
dec
ficomps
jno
mov
adc
repnz
mov
lds
repz
clc
and
sub
out
lret
hlt
push
cmp
ljmp
mov
add
xor
mov
hlt
movl
mov
mov
ret
fs
lahf
dec
jae
push
jb
add
or
mov
daa
int3
dec
xchg
xor
adc
pop
add
mov
pop
dec
cwtl
mov
rcl
push
sub
cmp
mov
ljmp
mov
fdivs
mov
movsb
inc
or
lcall
outsl
ds
push
mov
pop
xchg
push
sahf
test
shll
mov
cltd
cltd
bound
aas
sti
scas
sub
xor
pop
rorb
fcmovb
dec
mov
xchg
jecxz
sbbb
push
popa
jl
push
mov
add
dec
add
mov
pop
jg
repz
xchg
ja
mov
mov
ja
jl
mov
adc
dec
or
in
fstpl
xchg
mov
xchg
xor
je
cmp
or
xchg
or
fs
mov
loopne
dec
add
movsl
or
shrb
add
inc
sub
sarl
sar
jno,pn
movsl
cmp
cmp
xor
jns
shrb
pop
cld
sti
mov
fcmovb
popa
mov
push
jecxz
or
les
jne
mov
or
pushf
fcoml
xor
dec
ss
sbb
addr16
inc
push
mov
popa
stc
cmp
xor
clc
pop
test
movaps
fisubl
jge
adc
rcrb
mov
dec
mov
add
push
cmp
inc
bound
es
or
sbb
xlat
pop
filds
add
xor
sti
jne
push
mov
outsb
mov
in
cmpsb
or
shlb
sbb
sub
mov
jg
dec
dec
sub
fs
adc
test
sahf
cmp
xchg
pop
out
loopne
js
jmp
pop
lods
testl
inc
push
divl
rcrb
fistps
inc
ljmp
jmp
hlt
loopne
pop
fsub
inc
xorl
fdivl
aas
rcr
xchg
jnp
pop
aad
sarb
mov
hlt
mov
cld
aas
loop
push
mov
loop
jl
mov
pop
loopne
lods
outsl
les
int
repnz
xor
or
fidivrl
pop
mov
mov
ficomps
inc
mov
jg
notl
mov
subl
cmc
push
and
test
sub
stos
int3
in
pusha
mov
aas
adc
das
push
loope
enter
jb
push
lds
xor
xchg
and
adc
jmp
fldcw
push
sahf
sub
adc
adc
pop
jns
push
loope
push
push
pop
dec
ror
fstp
mov
add
jg
lock
mov
lret
loop
js
sub
dec
popa
data16
mov
icebp
mov
jae
pop
dec
pop
xchg
enter
jmp
xor
mov
jge
je
jae
push
sub
pop
pop
rcrl
xchg
repnz
negb
xor
mov
dec
iret
xchg
lds
jae
xor
cli
aam
pop
out
int3
loope
pop
sbb
jl
dec
mov
jg
out
je
or
push
je
add
or
fmull
cmp
cmp
push
sub
inc
adc
pop
mov
or
push
xor
sub
mov
pop
and
jecxz
cmp
inc
cmp
mov
push
inc
mov
mov
inc
movb
dec
fcomps
pop
jns
xor
push
stos
mov
sahf
icebp
test
jno
test
stos
stos
cld
mov
xchg
ss
loop
jg
movsb
outsl
inc
sarl
int
jnp
sbb
jle
out
arpl
loop
es
pop
jbe
iret
rcll
insb
or
xor
loopne
rolb
mov
in
lock
inc
xchg
test
pop
in
cmp
or
push
subb
mov
and
lahf
xchg
cmp
repz
scas
mov
mov
lret
ss
and
cs
jmp
stos
icebp
mov
mul
fsubr
daa
or
xchg
in
sbb
xor
mov
popf
cmp
mov
mov
frstor
insl
and
push
jmp
bnd
push
sti
std
jb
push
shrl
add
inc
lods
and
or
mov
lret
fidivs
jge
decl
jg
mov
ret
popl
std
pop
faddl
shlb
pop
rolb
clc
lds
pushf
cmpsb
jo,pt
dec
xchg
or
xchg
pop
lods
ss
cmp
add
sub
lcall
cmpb
loope
or
daa
mov
js
loop
jp
jo
stos
out
pop
sub
or
into
xchg
fistl
push
push
pop
pop
pop
mov
dec
stos
jb
mov
or
hlt
daa
sbb
jne
lds
inc
mov
inc
stos
xchg
jno
daa
or
jo
cs
push
ret
ret
lcall
out
inc
in
adc
cmpsb
push
ljmp
loope
je
push
test
call
dec
int
and
push
add
adc
int
into
shrb
aam
sbb
mov
sbb
push
mov
pusha
jbe
icebp
sahf
add
xchg
jbe,pn
jne
fxch
xchg
js
push
into
test
jg
ret
mov
ljmp
repz
push
sub
and
sar
rcr
push
mov
add
jecxz
xor
fdiv
lds
dec
sahf
sub
cmp
push
les
mov
sbb
test
data16
scas
cltd
in
andl
jp
pop
inc
cmp
roll
pop
cld
out
nop
xchg
mov
xor
fildll
add
rol
dec
leave
push
aas
push
jno
mov
out
pop
pop
mov
pushf
insl
outsl
xchg
lcall
pop
push
inc
mov
push
xchg
movsb
pop
aam
adc
aad
mov
bound
mov
std
js
adc
lret
cli
mov
pop
in
jae
and
sbbb
mov
jl
ds
inc
mov
sbb
imul
fldenv
ffree
loopne
xchg
or
xor
jne
dec
xor
cmp
push
jmp
cmp
sti
cld
jmp
xchg
xchg
adc
in
inc
pop
sbb
sub
mov
pop
jg
incl
pushf
mov
sbb
mov
call
sub
aas
push
cmpb
bswap
lcall
bound
arpl
adc
shlb
jmp
mov
mov
cmpl
add
add
mov
cmp
movsb
mov
sti
push
mov
sub
inc
in
movsb
adc
cmp
mov
xlat
inc
mov
dec
ja
pop
mov
and
dec
scas
jecxz
xor
xor
sbb
xor
mov
sub
mov
jns
incl
jge
inc
data16
mov
add
iret
jl
sub
cmp
xor
fimull
sbb
arpl
mov
mov
xchg
es
call
int
mov
and
imul
out
setp
in
fnsave
xchg
test
mov
rclb
mov
divl
cs
cmp
push
in
out
imul
sub
fwait
loop
gs
das
sub
dec
cld
shlb
fcomps
pop
insb
popa
mov
leave
push
pop
cmp
stos
int
les
mov
mov
std
sbb
loop
fdivs
jbe
xchg
xor
test
shl
xor
or
xor
or
add
das
stc
pop
in
iret
dec
js
mov
mov
mov
inc
popa
loop
push
loopne
je
jmp
cmp
and
dec
mov
adc
xchg
push
inc
mov
xor
lahf
stc
add
jae
fistps
xchg
in
sbb
jmp
imul
jno
jge
lods
mov
stc
mov
push
enter
and
cmpsl
xor
add
fmulp
scas
cli
movsb
shll
adc
stos
insl
cli
arpl
in
into
xchg
xor
lods
push
xchg
mov
xchg
stos
fistpll
fidivl
lock
orl
fsubl
adc
out
xor
repz
sbb
clc
push
sti
nopl
shlb
push
ret
cmp
adc
add
add
std
dec
test
mov
push
dec
jno
mov
imul
jne
daa
mov
pop
mov
enter
and
outsl
adc
aam
in
jg
int
mov
or
and
xchg
adc
jo
fmul
xlat
dec
movsb
dec
xchg
lock
ret
jne
push
test
rcl
nopl
cwtl
mov
outsb
dec
aaa
xchg
cmp
dec
xchg
in
ds
jb
cmp
es
sbb
mov
jge
in
mov
hlt
imul
push
cmc
in
sub
add
les
sbb
sub
sub
mov
sub
ret
push
vmread
adc
das
sbb
xchg
sub
pop
out
mov
in
jns
cmp
cmp
aad
nop
addl
lea
jmp
mov
arpl
push
jp
push
jno
aam
mov
mov
pop
fwait
add
lods
add
jne
aad
cmp
popf
scas
pop
push
sti
pop
cli
fistl
sbbl
mov
xchg
mov
xchg
jecxz
and
daa
and
sar
sbb
daa
jp
int3
lock
push
pop
nop
aad
mov
scas
inc
and
dec
mov
xchg
xor
xchg
sbbb
push
xchg
cmpb
fstl
push
push
lret
mov
add
out
addb
in
ret
cld
imul
jmp
in
inc
lds
aas
loop
nop
add
imul
aam
pop
lock
cmp
enter
push
adc
mov
std
adc
dec
push
mov
aas
and
aas
add
gs
das
xchg
lock
or
int
scas
pop
adc
fistpl
push
and
adc
mov
ss
or
jnp
sbb
seto
adc
dec
fbstp
xchg
fimuls
push
iret
xchg
mov
fcompl
mov
je
add
sub
lods
xorl
sti
scas
push
mov
pop
lods
mov
lods
cmp
jmp
dec
xchg
scas
pop
and
pop
add
rcrb
mov
jnp
negb
js
and
mov
pop
pop
pop
push
int
add
jbe
int
js
dec
orb
icebp
hlt
mov
stc
inc
jg
fdiv
or
and
lahf
dec
mov
orl
fs
hlt
dec
pop
out
hlt
and
add
mov
imul
lods
jg
and
inc
pop
jge
ret
mov
add
add
and
mov
and
loopne
fstpl
xchg
mov
sbb
and
inc
jo
jne
xchg
movsb
call
fiadds
in
cmp
test
add
sti
xor
dec
cli
loope
imul
mov
xor
dec
and
sub
js
mov
shll
pop
inc
popa
pop
mov
mov
idivl
inc
fadd
jecxz
and
gs
lock
or
sub
cwtl
push
or
cli
or
lods
mov
push
mov
cs
mov
pop
inc
in
pusha
out
cmp
in
adc
cmp
stos
ljmp
frstor
jecxz
rorl
cmp
jb
pop
inc
shll
adc
cmpsb
adc
cmpl
jl
aaa
sub
scas
pop
lock
ret
inc
and
cmp
mov
xchg
sub
mov
cmp
data16
xor
pop
leave
jl
xor
adcb
xor
adc
cwtl
xlat
scas
cwtl
loopne
scas
inc
mov
sub
jle
fs
dec
aaa
mov
mulps
mov
cmp
and
cmp
pushf
sub
sub
pop
jge
cld
pop
and
aad
xlat
insl
xchg
mov
lahf
std
mov
shrb
add
cs
adc
xchg
dec
dec
push
sbb
call
fadds
bound
enter
jb
mov
and
fs
or
rorb
pop
mov
mov
icebp
ja
xlat
xchg
aas
clc
arpl
test
std
cmp
sahf
test
bound
mov
gs
lock
stos
andl
shlb
inc
rdpmc
pop
pop
imul
xor
movsb
jl
dec
popa
push
shll
inc
arpl
int
jb
push
cmp
insl
xorl
mov
adc
xchg
add
mov
sub
std
lods
jbe
ss
setnp
adcl
mov
jl
sub
sbb
push
add
sub
adc
pop
sub
shr
xchg
or
test
mov
orl
push
jae
fadd
jo
popf
adc
sahf
lss
outsb
nop
ret
or
lock
scas
pop
and
pop
jno
xor
daa
pop
sbb
sub
insl
push
fnstsw
out
test
jo
paddd
xchg
daa
sti
mov
int3
imul
sbb
sbb
pop
mov
stc
fdivrs
jge
loopne
aaa
in
mov
push
lea
xchg
mov
push
pop
inc
jmp
pushf
cmp
inc
and
mov
stc
mov
cmp
xor
jns
leave
daa
out
dec
test
adc
rorb
push
dec
add
out
fidivrs
cmpsl
faddl
sahf
fwait
mov
rcrl
js
inc
scas
push
imul
outsl
mov
rclb
inc
jle
jl
dec
arpl
leave
lea
mov
ss
pop
inc
movsb
popf
push
rcl
test
mov
xchg
xor
repnz
pop
xor
jb
and
mov
mov
jb
aaa
movsl
inc
push
repnz
and
sub
dec
mov
fldt
and
or
inc
fstps
sbb
stos
mov
adc
movsb
add
jo
mov
jmp
sub
cmpsb
gs
cli
daa
push
test
mov
sub
loop
or
pop
lret
in
shll
pop
fucomp
inc
mov
mov
adcb
cli
rolb
int3
aas
mov
adc
sbb
mov
lret
fidivs
jmp
rorl
xchg
adcl
icebp
xor
push
push
nop
jns
jne
les
or
xor
mov
jnp
inc
shlb
sbb
sub
in
pop
arpl
jle
push
and
div
pushl
xor
test
jl
aas
sub
pop
xchg
adc
dec
xchg
adc
adcb
jo
fcmovnbe
inc
clc
jl
gs
jnp
call
loope
mov
dec
fstpt
dec
pop
lahf
pop
jnp
shl
add
xchg
mov
movl
xor
imulb
mov
adc
sub
dec
mov
mov
or
pop
jecxz
add
test
push
jnp
pop
fwait
das
xchg
inc
add
insl
jno
jmp
add
mov
loopne
push
jle
not
testl
arpl
push
push
cmpsb
jl
pop
dec
xchg
sub
pop
mov
mov
es
or
inc
sub
pop
mov
adc
mov
pop
filds
sub
inc
data16
fwait
push
inc
xchg
mov
jb
dec
inc
rorb
push
loop
arpl
lock
arpl
hlt
mov
sbb
mov
push
xor
adc
scas
xchg
pop
jb
mov
jge
shll
add
pop
fsubrl
lods
cmpsb
or
add
sbb
out
jecxz
cltd
pop
out
mov
repnz
loope
call
add
push
mov
in
or
push
aas
jp
adc
test
call
or
jp
mov
xor
jg
xchg
pop
mov
xlat
cmp
mov
imul
and
xchg
cmp
or
cli
lock
pop
mov
mov
jnp
shl
push
mov
cltd
adc
cmc
inc
dec
xchg
and
insl
je
and
mov
inc
bound
or
enter
dec
shlb
dec
rcrb
lret
in
int
hlt
imul
lahf
mov
xchg
mov
lock
push
int
pop
int
sar
hlt
mov
in
mov
push
or
xlat
out
pushf
aas
outsb
push
dec
scas
jo
and
mov
pop
lahf
cmp
gs
mov
jns
push
pushf
into
andb
xchg
inc
cmp
adc
cmpsb
xchg
gs
data16
jmp
sub
sbb
sub
pusha
jl
pop
push
sbb
cmp
jp
pop
inc
cs
jns
jae
push
mov
lock
jecxz
and
in
sub
loopne
jg
push
lret
xor
pop
outsb
push
cmp
jnp
add
inc
clc
dec
sbb
lahf
out
xchg
fidivrs
and
sub
leave
adc
cmp
and
rcrb
mov
movsb
inc
ja,pt
mov
mov
cmc
add
jg
push
adc
add
sbb
fistpl
repz
je
es
enter
imul
cmp
add
mov
mov
xchg
push
sub
out
stos
js
aam
pop
cwtl
sti
push
inc
mov
inc
mov
jl
jno
mov
aas
jbe
mov
mov
mov
xor
and
sbb
push
cwtl
jnp
sbb
or
push
movsl
rorb
mov
lret
mov
mov
pop
out
mov
push
ljmp
loopne
sub
adc
test
xor
push
mov
inc
xor
xor
or
mov
lret
push
out
loop
outsl
push
cmpsl
inc
mov
add
jne
mov
mov
or
pusha
cmp
inc
mov
bound
and
xchg
and
stc
jmp
xor
jnp
xor
adc
ret
je
aad
repz
mov
jmp
push
into
icebp
movsb
mov
rcrb
mov
outsb
fsub
xlat
insl
sbb
int
int3
mov
ja
outsl
pop
test
push
xchg
outsb
cmc
pusha
mov
movsl
rolb
ljmp
popf
cmp
in
add
cli
loope
inc
mov
xchg
push
into
jmp
add
or
mov
call
jp
xor
ss
jne
push
adc
sti
das
xchg
push
dec
shrb
mov
into
sub
mov
es
js
negl
xchg
mov
pusha
ss
dec
mov
mov
fdivrs
ljmp
push
mov
jmp
movsl
inc
scas
mov
adc
mov
jbe
ret
ds
sbb
add
xchg
jbe
into
enter
imul
jmp
xchg
sub
push
or
push
sbb
test
enter
xchg
xchg
call
iret
sub
lea
push
faddl
pusha
out
inc
sbb
nop
adc
push
push
inc
jb
ret
push
inc
adc
jno
inc
cmp
and
ret
dec
adc
lods
bound
jo
xor
push
xchg
mov
xlat
pop
push
out
cld
js
pop
sub
pop
dec
andl
fiadds
cli
out
jb
push
roll
mov
sub
push
inc
insl
lea
shll
sub
push
dec
mov
nop
or
cld
xchg
inc
and
xchg
push
sub
push
jmp
ss
in
ljmp
jne
inc
test
popl
xchg
test
pop
xchg
inc
mov
int3
mov
cs
lods
hlt
mov
enter
ret
je
test
adc
lahf
dec
pop
xor
lahf
lods
into
mov
add
scas
lock
xor
or
jae
push
pop
pop
adc
cmp
inc
jecxz
xor
lds
adc
push
inc
aas
add
popa
mov
sub
inc
mov
or
and
jmp
mov
addl
or
scas
sbb
sbb
insl
push
sub
add
mov
xchg
adc
notb
daa
test
dec
xchg
fldt
shl
pop
repnz
adc
jae
sbb
xchg
out
mov
add
adc
mov
cwtl
push
xchg
mov
dec
push
ljmp
mov
lahf
mov
jecxz
inc
or
dec
push
dec
push
loope
test
stos
fcoml
add
and
fs
rorb
push
cmp
test
fdivl
push
cmp
ds
imul
loopne
ja
jmp
fistpl
inc
loopne
test
dec
dec
aad
stos
insl
decb
lret
push
cmpsb
add
int
xchg
sahf
xchg
jns
xor
movsb
mov
or
movsl
xchg
in
ret
mov
mov
xorb
cmp
lea
inc
fwait
movsl
cs
dec
inc
sub
inc
out
test
andl
in
js
out
xchg
insb
jmp
xor
lds
push
shl
pop
adcl
sbb
mov
push
das
daa
in
and
cmpsl
adc
sbb
cmp
ret
cld
ror
mov
adc
das
cmc
sbb
mov
inc
xlat
mov
insl
in
hlt
xchg
rclb
lock
dec
push
fadd
mov
xorb
addr16
cwtl
jb
cmp
data16
cld
fsubrl
jl
push
daa
leave
stc
cmp
jp
fs
popa
mov
inc
out
fildll
push
pop
loop
mov
mov
cs
add
xlat
xchg
repz
pop
ret
jb
mov
jne
cmp
push
mov
adcb
stc
xchg
je
iret
xor
push
imul
jae
jl
adc
lock
sub
test
divl
call
cmpsl
ret
mov
inc
sti
lret
test
out
mov
xchg
push
or
xlat
pop
mov
lods
sbb
cwtl
stc
rcl
hlt
pop
out
lea
sar
mov
cmc
test
jmp
stc
into
bound
push
jns
fdiv
sahf
push
orb
xor
in
mov
push
mov
push
loopne
jl
sub
xor
outsb
mov
jb
mov
and
js
arpl
shlb
push
mov
movups
xchg
pop
into
fldt
mov
xchg
inc
repnz
xchg
pop
pop
ret
clc
aaa
ss
jp
fst
and
mov
scas
das
mov
aas
mov
cmp
mov
negb
and
out
adc
or
mul
hlt
add
or
jae
xchg
cmpsl
xor
mov
mov
cmp
fnstenv
mov
mov
stos
sbb
pop
decl
sbb
dec
subb
xchg
push
sub
ja
in
push
into
jmp
sbb
sub
add
push
icebp
inc
loop
repz
pop
addr16
xchg
add
pop
xchg
decl
shrb
pop
aam
dec
fsin
aad
icebp
rcrb
adc
stos
les
ljmp
data16
std
invd
les
jmp
fstps
out
mov
pop
scas
fildll
pop
movsl
div
out
inc
loop
cmpsb
jmp
test
into
je
xor
js
cmpb
mov
into
call
pop
inc
scas
in
sub
loopne
imul
adc
mov
addw
sti
popa
mov
fldenv
mov
cltd
test
je
pop
inc
inc
jns
cmp
test
adc
push
aaa
outsb
xor
imul
pop
mov
inc
jge
test
pop
aad
mov
or
xor
call
in
or
imul
lcall
mov
shll
inc
xor
push
jne
adc
push
arpl
jge
push
es
add
push
and
int3
les
cmp
pop
aaa
mov
push
push
xor
scas
add
adc
push
xchg
and
xlat
in
js
jge
cmp
mov
stos
cmpsb
sbb
out
jae
arpl
cmp
sub
aaa
daa
push
sub
je
ljmp
jle
cli
mov
fildl
mov
pop
push
lods
xchg
rclb
unpckhps
nop
jle
jg
inc
outsb
adcl
push
negl
cmp
push
ja
xor
es
addr16
add
mov
scas
and
push
lret
lcall
fcomi
in
movb
pop
hlt
push
mov
sahf
inc
aas
add
subb
in
sbb
xor
mov
sub
pop
mov
in
inc
negb
xor
loope
cmp
testl
sarl
or
into
pop
bound
call
pop
mov
adc
insl
mov
jae
push
pop
cmp
and
cmp
adc
rcrb
aas
push
ja
or
xchg
sub
sub
and
jecxz
movsb
adc
adc
cmp
xchg
fsts
es
lds
or
push
std
aas
cmp
fs
addr16
nop
jbe
leave
and
or
inc
xor
adc
mov
das
pop
mov
mov
ljmp
js
shrb
in
popa
fs
mov
in
add
inc
push
cltd
adc
push
in
dec
cs
out
inc
jp
idivl
std
sbb
adc
mov
pop
inc
clc
rcr
cmpsw
mov
out
rsqrtps
aaa
sbb
fcompl
int
adcb
test
mov
sbb
adc
sub
int3
repz
mov
repnz
xor
imul
inc
xchg
mov
pop
xchg
xor
das
leave
jecxz
sahf
je
pop
addl
inc
pushl
hlt
mull
or
cwtl
je
negb
lret
cli
popf
cwtl
jle
lock
mov
arpl
mov
out
imul
call
ds
out
scas
loopne
add
das
jnp
lea
lret
sahf
jmp
rorb
mov
cmp
push
cmp
pop
and
and
arpl
pusha
xor
jb
mov
xchg
mov
scas
xchg
data16
dec
cmp
cmp
shlb
jbe
cmp
pop
mov
mov
or
mov
adc
popa
add
jno
add
xchg
call
lret
fists
repz
fisubrs
sti
xchg
out
mov
mov
mov
mov
out
icebp
xor
insb
mov
and
js
fsub
add
ja
enter
stos
cmp
sbb
rcll
xchg
loopne
jb
or
sbb
lock
cmp
adc
fldt
cli
inc
arpl
or
iret
xorl
popf
outsb
outsb
clc
sahf
pop
invd
addr16
xchg
cwtl
sti
dec
mov
mov
popaw
flds
sub
pop
mov
xchg
cld
sbb
lahf
jns
or
repz
fbld
arpl
push
dec
es
or
add
icebp
add
iret
lcall
lds
test
sbb
inc
mov
pop
lds
ja
dec
ds
mov
outsb
hlt
or
xchg
jmp
idivl
sub
inc
shlb
jp
test
jge
les
scas
sub
sti
cltd
aaa
loop
cs
in
hlt
out
movsl
inc
mov
loop
fcoms
jle
mov
push
lods
test
inc
call
in
mov
mov
aas
insl
cmp
and
fiaddl
daa
pop
data16
sbb
stos
jge
int3
dec
es
andb
shlb
clc
cmpl
mov
stos
test
inc
push
add
add
pop
adc
ljmp
push
dec
mov
fmuls
mov
add
pop
lret
mov
lret
xchg
xchg
lds
sub
int
push
xchg
pop
push
inc
mov
sub
mov
cmp
lods
test
cmp
adc
loope
cltd
dec
jo
cwtl
ljmp
pop
cmpsl
mov
mov
mov
lret
scas
jge
lcall
adc
cmp
or
jbe
fidivl
jae
xchg
and
rolb
js
or
pusha
push
jae
and
iret
xchg
jns
pop
in
mov
notb
mov
sbb
mov
cwtl
cmp
repz
mov
ss
stos
jae
inc
leave
add
insl
lahf
fldcw
je
popa
dec
and
sub
lahf
sti
xor
data16
pop
add
xchg
push
stos
xchg
dec
push
out
rol
or
orb
sbbl
pop
cltd
inc
adc
les
dec
test
rcrb
mov
inc
pop
cmp
cmp
cmpsl
movsl
mov
add
fisubs
mov
push
xchg
mov
jae
xor
sbb
fs
stos
inc
imul
adc
mov
ret
or
sbb
hlt
sbb
mov
pop
mov
push
pop
jns
add
sahf
es
insb
iret
int3
je
mov
insb
mov
out
jbe
leave
cwtl
adc
ja
adc
fimuls
sbb
fs
int
inc
sub
and
mov
aaa
loope
pop
icebp
sub
test
push
dec
push
insl
pop
into
pop
inc
mov
mov
addr16
push
xlat
lret
mov
jo
sub
dec
shrl
mov
pop
push
push
dec
out
or
in
inc
jns
sbbb
test
pop
jle
mov
sbb
push
or
fdivs
inc
cld
xlat
pop
inc
push
aad
iret
and
pop
mov
mov
pop
insb
pushf
dec
imull
sub
or
cmp
and
xchg
sbb
cld
cmp
push
xor
testb
or
mov
imul
adc
iret
mov
lret
rcrl
or
in
add
pop
cmpsb
cmp
dec
fs
ja
pusha
insl
mov
lock
push
xor
mov
mov
jbe
jns
out
icebp
inc
ljmp
mov
push
sbbl
lahf
or
adc
xor
jb
in
in
sub
cmp
xchg
popf
loopne
incl
cmpsl
enter
mov
mov
adc
pop
outsb
jnp
pop
loop
jge
test
sbb
cmpsb
je
imul
fs
movsl
xor
shrb
inc
repnz
ljmp
xor
adc
cmpsl
andb
loop
iret
lret
inc
mov
pusha
cwtl
pop
mov
clc
xchg
fiadds
pop
les
or
fcoml
inc
fisttps
lcall
cmp
jg
mov
sarl
cwtl
repz
cmpsl
leave
xchg
lret
icebp
sbb
fistps
gs
dec
lret
andb
jecxz
pop
mov
cs
or
insl
sbbl
xchg
pop
add
dec
ss
pop
and
inc
jns
fistpl
adc
js
test
nop
push
or
mov
adc
lods
jmp
mov
aas
inc
retw
fs
call
data16
or
and
jl
enter
cmpsl
aam
xchg
jecxz
or
cmp
sarb
pop
lcall
ja
jle
jg
dec
pusha
pop
ret
clc
cmp
mov
cmpsb
xchg
or
mov
daa
sub
cmp
add
dec
xchg
xor
mov
stos
cmp
jno
push
fwait
stos
push
je
mov
lods
out
pop
or
rcr
fiaddl
inc
push
inc
sub
ja
insl
mov
aad
test
in
ss
jmp
and
xchg
add
std
jne
cmpsl
addr16
xchg
movb
adc
and
insb
or
mov
mov
mov
push
jle
sub
out
testl
xchg
aas
push
into
scas
popa
mov
lcall
std
data16
xor
adc
jnp
icebp
xchg
fisttps
cltd
dec
pop
ljmp
and
xchg
adc
pusha
ja
outsl
dec
jo
ss
outsl
push
xor
cmp
xchg
xchg
push
pushf
hlt
mov
dec
aaa
hlt
pop
push
sbb
and
sub
iret
jecxz
popa
pop
inc
enter
syscall
les
sbb
dec
scas
add
addr16
sbb
and
das
cmp
nop
stos
test
test
test
lds
mov
ds
rolb
dec
sbb
inc
repnz
and
outsl
fcompl
decb
lret
shrl
fisubrl
addl
cs
fstl
outsl
push
rorb
movsl
add
mov
jnp
add
jp
adc
mov
test
ja
cmp
sbb
in
ljmp
or
out
sbb
lret
xchg
lods
adc
push
push
pop
in
inc
jb
fisttps
mov
rcr
dec
cmp
in
cmp
jbe
iret
shr
hlt
out
je
add
mov
gs
decl
jb
and
imul
leave
mov
inc
adc
movsb
push
cmp
push
push
hlt
xor
fcmovb
stos
dec
repnz
mov
pop
jmp
repz
data16
mov
xchg
or
jae
scas
mov
scas
scas
adc
or
push
in
xor
or
das
js
insl
lds
fcomp
fsubrl
test
out
add
inc
pop
push
push
or
js
addr16
insl
cmp
jmp
shrb
dec
stc
sarb
pop
scas
pop
popf
arpl
mov
sub
push
pop
scas
xchg
mov
repnz
jns
rol
dec
jmp
sub
mov
sbb
xchg
roll
mov
inc
aam
lret
xor
push
xchg
shl
pop
hlt
call
ja
and
pushf
mov
jno
popf
addr16
mov
fisubs
mov
jae
jle
dec
sbb
stc
or
outsb
mov
repnz
fimuls
lahf
pushf
and
xor
adc
ror
dec
ret
mov
push
pushf
push
int
cmp
jge
pop
or
pop
rorb
xor
mov
and
out
pop
cmp
std
mov
mov
inc
adc
jl
in
cltd
addr16
mov
push
leave
ds
sub
add
pop
jg
out
jne
or
cmpsb
inc
mov
test
or
jg
fistps
shrb
mov
sbb
sahf
pop
adc
sub
ss
mov
cmpsb
sbb
or
dec
insb
inc
mov
inc
push
pop
cltd
pop
out
xor
sub
jbe
cmc
mov
in
iret
dec
rol
repz
frstor
data16
xor
add
popa
pop
das
es
push
sub
mov
dec
adc
cmp
or
dec
dec
ret
imul
or
mov
ret
pop
hlt
mov
sbb
icebp
inc
and
repz
mov
dec
in
cmp
test
mov
fiaddl
xor
sub
int3
insb
mov
sarb
sbb
pop
cmp
pop
jle
pop
inc
mov
cmp
outsl
cld
mov
dec
in
lods
dec
cmp
adc
sbb
or
lods
sbb
xor
das
std
test
push
xchg
nop
test
sar
testl
pusha
xlat
sti
cltd
jne
mov
xor
insl
andb
dec
and
negl
inc
mov
rclw
mov
in
mov
push
push
xor
int3
xor
inc
mov
leave
pusha
outsb
insb
add
or
jl
sub
mov
adc
push
and
pop
scas
xor
xchg
mov
jns
test
inc
aaa
pop
inc
add
mov
std
popf
pusha
insl
cltd
nop
out
push
das
cmp
push
repz
push
lods
sarb
fld
push
push
hlt
outsl
cmp
rolb
rclb
jecxz
add
jg,pn
hlt
jnp
outsl
repz
adc
mov
add
pusha
insb
and
inc
rclb
xchg
sbb
sub
push
faddl
inc
mov
aas
cli
xchg
vprotw
std
shll
aad
sbb
test
shll
lea
sbbl
aam
addr16
pusha
lcall
xlat
pop
or
pop
dec
sub
push
push
lds
das
adc
mov
xchg
or
jg
pop
jno
idivb
and
fidivrl
sbb
mov
lret
lret
stos
subb
fistl
lods
cmp
push
cmp
movsb
xlat
arpl
sar
xchg
jne
xor
xchg
sbb
adc
dec
test
insl
loop
in
pop
shll
ret
cmp
mov
cmp
and
mov
sub
pop
pop
adc
stos
cmp
mov
and
es
jp
jl
loopne
ljmp
and
ret
jmp
jbe
mov
pop
push
arpl
pop
mov
inc
dec
push
push
pop
and
cmpsl
jne
xchg
stos
xchg
popf
aas
inc
sbb
xchg
cli
fsts
jb
cmp
icebp
mov
add
jl
lahf
fcmovbe
xchg
cmp
mov
xor
adc
mov
xor
xor
and
movsl
bound
arpl
mov
shll
jbe
push
out
lods
in
sbb
and
cli
mov
out
icebp
jmp
scas
fstps
movsb
xchg
cmp
pop
pop
out
ret
cli
fadds
mov
bndstx
bound
aaa
jecxz
mov
mov
or
jbe
jl
insl
es
or
test
movsb
mov
scas
cs
or
xchg
jl
das
mov
xor
mov
jmp
flds
in
mov
jl
arpl
jns
add
dec
or
cmp
xor
add
lcall
inc
es
add
jbe
mov
pop
out
test
out
in
faddp
xchg
jbe
loope
inc
xchg
das
mov
es
loope
adc
jbe
cwtl
iret
test
aam
repnz
add
push
add
and
ficompl
sub
xabort
xchg
leave
in
xor
out
out
pusha
pop
sahf
cmp
xor
xor
cmc
mov
mov
add
imul
mov
cmp
cmova
pop
mov
das
divb
out
mov
push
loope
lret
adc
out
cmp
hlt
cld
jns
in
push
mov
push
xor
aad
jmp
into
push
jns
cmc
push
add
dec
mov
mov
ret
outsb
fcom
jb
and
out
mov
lods
fidivrl
call
inc
mov
in
pop
insl
mov
notl
mov
aaa
pushf
leave
mov
sub
xchg
mov
mov
xor
aad
cmpsb
shrl
pop
sub
scas
iret
in
mov
push
loop
mov
test
sub
js
jg
adc
popf
ror
adc
sahf
pop
lock
outsb
js
jne
lcall
and
lds
mov
or
and
mov
mov
lea
jbe
cmpsl
into
int
repz
insb
rol
or
mov
push
cltd
sub
sti
mov
stos
jg
dec
stc
cmpsl
jo
or
jmp
and
insb
mov
out
push
push
mov
mov
dec
xlat
mov
subb
stc
orb
jae
cmp
mov
scas
sub
test
jg
push
mov
push
jmp
pop
out
add
xor
sbb
jnp,pn
and
imul
mov
ja
into
xchg
sbb
arpl
pop
inc
jmp
int3
jle
into
xchg
adc
pop
int3
out
xchg
lret
push
js
aaa
push
fstpl
adc
xorb
xor
cmpsl
scas
shlb
mov
mov
sub
and
jb
cmp
cmpsb
les
popa
rol
sti
arpl
pop
cmpsl
ret
cld
imul
push
xlat
sbb
lock
or
cld
cli
ret
push
popf
pop
or
push
in
sub
jp
jp
jo
xor
lret
inc
inc
dec
jg
fistpll
sbb
fidivs
pop
pop
cmp
inc
jl
jmp
jnp
xor
js
push
xchg
lahf
dec
fadds
outsl
add
loopne
divb
or
pop
cmpsl
fdiv
fnstenv
idivb
fidivs
lock
add
and
hlt
push
push
loopne
sbb
push
outsb
mov
into
or
dec
inc
sub
cmp
sarl
sbb
leave
fnstsw
and
ds
arpl
jp
test
insb
xchg
cmp
fcmovbe
dec
jae
cmp
lret
dec
in
jl
or
fxch
xor
xchg
or
push
repnz
insl
sub
xchg
clc
ss
sbb
xchg
cmc
rcl
jno
addr16
std
jbe
mov
pop
inc
push
pop
iret
in
fcompl
sub
pop
jno
mov
out
outsb
sahf
jl
inc
mov
repz
dec
clc
bound
pop
cmc
pop
pop
push
sti
inc
fistpll
dec
imul
mov
into
mov
filds
and
cmpsb
pop
imul
dec
push
pop
inc
mov
adc
jb
dec
and
dec
mov
mov
daa
out
adcb
adc
stos
je
rcrl
movsl
out
in
jle
in
cmc
fwait
popf
icebp
icebp
loop
or
jns
sub
push
xor
mov
subl
and
mov
in
jle
call
aad
pop
icebp
xor
mov
rcl
aam
jg
push
mov
push
lret
jg
inc
dec
pop
sbb
and
xchg
mov
add
imul
and
sbb
pop
sbb
mov
ud2
fwait
cmp
xchg
add
jo
mov
stos
xchg
xchg
push
dec
iret
xor
fwait
int
test
sub
push
pop
popf
dec
cmp
push
mull
aas
aad
insl
mov
addb
loop
push
xor
or
jbe
pop
in
fmull
fmull
push
mov
push
jecxz
sbb
fwait
lahf
jge
push
mov
rclb
imul
mov
cmc
test
xor
adc
pop
mov
xchg
mov
ret
dec
push
into
push
loopne
jae
cmc
fildl
xor
stc
xor
mov
das
adc
cmp
filds
push
cmp
pushf
mov
sbb
icebp
pop
insl
inc
mulb
push
aam
mov
popa
ret
adc
shlb
dec
jb
test
cmp
sbb
andl
adc
call
dec
test
push
lds
pop
callw
dec
insl
adc
pop
aaa
loope
fldl
out
jl
into
mov
ffreep
inc
dec
xchg
mov
push
xor
sbb
cmovo
dec
xchg
and
or
iret
popf
loop
push
pop
inc
ficoms
dec
mov
fwait
inc
ds
mov
in
xchg
ss
cmc
push
dec
rcrl
jnp
aaa
mov
out
cmpl
and
pop
aam
mov
inc
inc
push
fbld
pop
stos
clc
insl
loop,pt
orb
push
aas
mov
pop
je
mov
sbb
push
mov
add
mov
cmp
xchg
lret
mov
idivl
push
or
xor
in
roll
inc
cmpl
rcrl
xchg
jb
sbb
adc
mov
push
mov
sub
das
jo
test
mov
fistpll
sub
adc
sub
mov
mov
sub
dec
jmp
push
dec
scas
pusha
sahf
cmove
loopne
push
jno
insb
cmp
jl
cmpsl
repnz
sarl
mov
cmovno
les
das
xchg
mov
rorl
rclb
mov
jbe
pop
lock
lds
xor
shr
ret
dec
mov
insb
nop
idivl
aad
insb
xor
add
and
push
stos
adc
les
pop
popl
cmp
mov
ret
int
cmp
lods
xchg
lock
pop
jl
test
js
or
js
push
pop
jg
inc
inc
fs
inc
push
mov
in
and
lock
fcmove
and
in
xchg
js
mov
lahf
scas
push
movsb
fnstcw
xchg
out
leave
shll
cmpsb
out
push
addr16
es
jb
push
mov
lods
add
mov
js
pop
mov
dec
sarb
mov
add
push
jae
jae
mov
adc
sbb
add
push
notb
mov
push
mov
cmp
adc
mov
add
push
xlat
xorl
add
loopne
cmp
adc
jg
out
mulps
imul
sub
iret
gs
xor
or
fisubrl
jp
repnz
jne
dec
pop
lock
or
sbb
enter
push
ret
sti
scas
sub
imul
push
and
movsb
lock
in
ja
and
fimull
jnp
gs
movsl
and
das
cmp
repz
shlb
cld
int3
rolb
lods
mov
cmp
aaa
scas
pop
aaa
pslld
insb
dec
aam
pop
mov
or
insl
inc
addl
addr16
dec
mov
idivl
pop
mov
xor
jbe
add
sbb
sub
popa
mov
fisubrs
mov
sti
insl
xchg
pop
xchg
in
enter
fisubrs
pop
out
mov
cmp
loop
mov
fnstenv
push
popf
cld
test
inc
fisttpl
mov
mov
mov
fistps
test
iret
xchg
outsb
clc
out
movsl
xchg
push
sbb
addr16
cli
cs
jbe
and
lahf
jmp
mov
cmp
cli
aaa
sti
lods
xchg
testb
adc
insb
add
mov
or
nop
gs
xor
test
cmp
sbb
pop
ret
fildll
dec
jo
popa
negb
dec
fdivs
jmp
daa
push
imul
in
or
sbb
es
push
out
ljmp
inc
add
cmpsl
mov
and
je
std
and
clc
xchg
or
stos
pop
xlat
dec
aaa
lret
ss
xor
mov
lahf
push
lds
shl
mov
mov
fmull
sbb
loop
xor
negl
cltd
sbbl
shl
shlb
inc
push
jb
or
push
jl
test
cmp
shl
cmp
adc
fwait
in
xor
loop
int
lret
push
movsb
lods
push
and
xchg
insb
fcomps
pop
movsl
std
jl
cli
sti
jmp
out
mov
push
jmp
pop
mov
aas
call
shlb
xchg
cmp
sbb
ja
cwtl
dec
into
or
cli
jge
addr16
pop
sarl
xor
mov
arpl
clc
sbb
test
data16
in
int3
into
imul
test
insl
xchg
adc
repz
xchg
cmp
lret
xchg
xor
fildl
dec
rcl
mov
std
sbb
sbb
addr16
imul
add
sbb
mov
les
mov
fwait
enter
mov
dec
ret
popa
add
popa
icebp
ds
mov
lods
icebp
or
xchg
inc
andb
gs
lods
and
cmpb
nop
lods
mov
je
or
push
inc
fisubrs
stos
scas
mov
lds
push
int
mov
add
jg
xor
aaa
aaa
and
push
inc
rcr
xorl
std
xchg
rclb
sahf
leave
mov
lahf
xchg
andl
jb
test
mov
push
pushf
gs
fsubs
and
test
sub
xor
or
lods
and
sbb
adc
mov
iret
or
lret
xor
into
mov
sbbb
or
pusha
push
out
daa
aaa
sbb
rcll
rol
clc
adc
adc
jmp
div
mulb
or
adc
jge
mov
jae
iret
rolb
push
out
pop
xor
xchg
inc
in
and
inc
loop
out
or
mov
mov
jnp
mov
fsubrl
enter
test
inc
and
adc
mov
inc
push
test
movsl
xchg
in
int3
add
repz
dec
aaa
int
movsl
xchg
mov
pop
das
cltd
loope
mov
mov
iret
ljmp
movsl
lahf
test
les
xchg
loope
dec
xchg
loopne
add
push
adcb
lds
fldl2e
mov
cmp
test
outsb
dec
test
fs
fucomi
movsl
inc
push
inc
and
ja
sub
xor
push
xchg
sbb
mov
jp
push
adc
cmp
xchg
adc
xorb
jl
cmpsb
rcll
lods
pop
mov
enter
mov
push
xchg
gs
inc
stc
mov
leave
inc
and
and
cs
popa
nop
movsl
fmuls
lret
mov
ds
out
jmp
push
mov
loope
lods
in
mov
in
subb
mov
cwtl
loop
ret
aam
out
pop
aaa
xor
repnz
xchg
das
push
push
movsb
lahf
pop
xor
mov
adc
fisubs
stc
movsl
je
aas
stc
sub
mov
xor
push
leave
push
popa
jge
dec
and
or
nop
sbb
fisubrs
mov
or
sub
push
cmp
hlt
bnd
add
and
test
aas
into
pop
ficoms
xchg
sti
xchg
xchg
fs
jns
lret
push
out
cli
sbb
xchg
repnz
clc
mov
bound
adc
push
enter
jae
add
aas
mov
ljmp
push
scas
cmp
stos
pop
cs
mov
sub
jmp
arpl
mov
int3
sub
in
ret
jo
lret
cmp
test
imul
cld
icebp
xor
test
sub
and
adc
outsl
jcxz
repz
mov
jns
sarl
subl
mov
insl
lret
pop
mov
int
into
adc
inc
mov
ret
mov
cwtl
int
sarl
pop
jmp
mov
jbe
push
gs
cs
xor
paddb
test
xor
push
push
stos
movsl
cld
daa
or
adc
mov
or
push
fs
cltd
loope
out
add
fdivs
insl
cs
dec
mov
sub
fsubrl
add
mov
cmp
fmuls
roll
sbb
jmp
fcoml
inc
fdiv
outsl
mov
mov
stos
addl
hlt
sub
repnz
mov
adc
sub
mov
arpl
inc
xchg
cmpsl
pushf
negb
lret
and
xchg
push
xchg
dec
jg
lds
test
shll
imul
mov
iret
jne
ljmp
cmpsb
leave
ljmp
mov
inc
dec
shll
ljmp
pop
popa
ljmp
scas
call
mov
mov
cmp
lret
shrb
std
clc
xchg
inc
into
or
shrb
daa
sbb
push
xchg
mov
cmpsb
aad
js
cli
es
cmpsb
enter
leave
popf
and
sub
inc
jbe
jmp
dec
sbb
jge
addb
stos
js
or
fidivl
cmp
adc
sbb
fwait
mov
iret
inc
jecxz
jae
push
sub
mov
sub
sahf
cmp
xchg
out
xchg
stc
or
mov
mov
les
push
ja
roll
mov
icebp
or
sub
sbb
fmul
enter
or
xor
sbb
into
call
mov
aad
loope
fidivs
enter
lahf
xchg
es
fs
cwtl
js
push
jbe
mov
mov
cmp
dec
pushl
sbb
push
pop
mov
push
pop
fwait
mov
cs
jp
sbb
shrb
push
or
jae
lcall
fmulp
icebp
testl
cmp
pop
test
mov
stos
das
mov
aad
fs
movsl
xchg
mov
das
cs
xor
retw
sub
daa
jmp
es
push
mov
add
daa
dec
insl
sub
popf
sbb
mov
repnz
addl
dec
adc
jb
and
pushf
mov
test
popf
sti
sub
fcomp
adc
into
fnsave
inc
mov
and
mov
aad
test
push
lahf
or
adc
pop
mov
ficompl
adc
fiaddl
xor
pop
pushf
outsl
jo
gs
inc
push
andb
addr16
push
sub
out
inc
push
xor
inc
fdivs
loopne
add
mov
mov
imul
inc
xchg
pop
jp
push
je
aaa
mov
cld
pop
fs
movsb
in
xchg
rcrl
cmp
push
cmp
mov
add
xor
sub
stos
sbb
cmp
dec
jmp
cmp
and
ret
sub
movsl
pop
sub
daa
dec
lods
mov
push
pop
loope
and
test
and
test
ret
fldz
mov
mov
adc
push
int3
cltd
stos
push
add
hlt
imul
hlt
mov
in
jmp
lds
sub
loope
fs
or
call
pop
adc
scas
cmpsb
jle
pop
dec
out
mov
dec
shll
inc
inc
pop
in
inc
shlb
fimuls
repz
xchg
push
test
mov
cmp
cli
pop
lcall
les
stc
aam
out
shlb
cmpl
sbb
fstp
fimuls
mov
stc
xor
mov
add
mov
jp
lock
pop
xchg
cmp
adc
insl
lahf
movsl
and
andb
sarb
popf
xor
lgs
data16
shlb
hlt
jo
sbb
test
lret
dec
add
dec
adc
lret
in
mov
jo
es
or
cmpl
pop
pop
mov
cmp
mov
subl
insb
loope
out
popa
imul
inc
sub
add
enter
dec
cmp
dec
sbb
or
cmp
pusha
push
xor
int
insl
pop
jg
fnstenv
icebp
cmc
pop
lods
cmp
fldpi
jbe
sarb
push
pop
xchg
xchg
xchg
ja
push
xchg
lret
add
lret
fwait
in
or
push
mov
dec
mov
insl
pop
jne
movsb
pop
mov
sub
lret
fwait
cmp
sub
inc
leave
mov
mov
add
xor
test
push
sbb
ret
cltd
push
jno
pop
inc
testb
mov
scas
nop
js
inc
or
lret
mov
ja
bound
scas
jne
aam
lods
mov
xor
ss
dec
mov
in
aas
jnp
push
jne
add
sub
sbb
mov
clc
push
mov
andb
scas
sub
fstpt
inc
mov
fwait
jne
hlt
dec
adc
xor
pop
cmp
in
inc
je
loop
out
cmpsl
es
sbb
clc
imul
mov
inc
inc
movsl
pushf
orb
ret
or
int3
jge
leave
sbb
push
pop
xchg
jp
stos
out
addl
mov
and
jno
insl
cmpsl
ret
pusha
inc
inc
lahf
xor
out
test
add
lcall
cwtl
clc
cmpl
out
fimull
jb
je
mov
mov
sbb
xchg
push
mov
ja
mov
push
cmp
cmpsb
out
sbb
add
lds
mov
lods
push
clc
bound
push
cld
push
xchg
jle
fdivl
mov
in
mov
lret
sub
int3
xor
ss
push
pop
pop
and
mov
sub
out
cmp
scas
das
test
dec
inc
mov
jno
dec
push
cmpb
xchg
das
addr16
daa
add
xor
aad
adc
mov
sub
pop
xchg
pop
repnz
add
and
xchg
mov
adc
mov
sbb
rorl
aas
and
outsb
jp
xchg
cwtl
sub
sub
mov
push
stos
or
xchg
outsb
pop
cld
ja
mov
inc
cs
sub
sti
and
lcall
dec
xlat
inc
adc
int
out
stc
andb
adc
das
arpl
call
in
add
jg
mov
mov
jns
mov
mov
popf
rcr
insb
mov
pop
mov
push
dec
aad
icebp
test
mov
pop
pusha
mov
mov
or
mov
or
jb
stc
ds
xor
cwtl
lods
pop
and
push
xchg
out
pop
push
jno
sbb
push
int
xchg
and
ret
pop
jmp
dec
jnp
cmp
fadds
sub
xchg
inc
cld
test
loop
dec
cmpsb
lods
out
in
dec
jmp
sub
dec
inc
xchg
mov
stos
int3
jb
inc
gs
incb
jns
addr16
out
adc
aaa
fcmovb
call
push
push
xor
imul
push
outsl
aad
or
ja
sbb
lcall
jp
mov
add
sbb
rorb
xchg
xchg
cmpsl
jo
pmulhuw
pop
out
push
es
mov
enter
xchg
or
sub
leave
mov
iret
leave
sbbb
lea
mov
push
je
mov
or
dec
jno
test
mov
adc
ret
mov
mov
clc
rolb
dec
or
fildll
nop
cli
fisttpll
test
push
and
outsl
cmp
sbb
hlt
rolb
mov
mov
sub
pop
ss
test
scas
lods
ja
lods
sub
jle
out
push
les
inc
and
inc
out
pusha
jp
xor
sbb
inc
lds
arpl
push
fwait
xor
outsl
in
cmp
and
cmp
aam
popf
mov
mov
leave
pushf
jmp
stc
pop
and
sub
hlt
xlat
mov
out
ret
cmp
push
adc
ds
ja
outsb
popa
push
into
sar
sbb
push
fldl
stos
faddl
daa
mov
lods
mov
or
jg
aaa
xchg
rcl
push
xor
push
mov
pcmpgtw
call
inc
sub
adc
cmpsl
fwait
pop
rclb
sub
ret
movsl
into
int3
add
and
add
lcall
pop
mov
gs
adc
xlat
add
adc
lods
repnz
cmp
and
stos
inc
xor
in
in
addl
popa
hlt
rcrb
lods
sub
and
roll
adc
cmpl
rcrb
in
pusha
xchg
or
mov
mov
push
adc
shll
stos
int
out
mov
and
rolb
push
fisttps
pusha
je
rol
fdivrp
fldcw
jle
pop
stos
add
adc
adc
mov
notl
pusha
add
lds
cmp
cli
test
cld
and
or
push
push
pop
das
adc
fsubrs
mov
in
push
pusha
cmp
shrb
fsubrp
sbb
lahf
fistpll
mov
inc
jne
sbb
ret
pop
push
pop
pop
xlat
sub
mov
dec
adc
xor
fwait
pop
xchg
sub
mov
mov
repnz
xlat
stos
pop
mov
push
adc
dec
fnsave
adc
mov
xchg
mov
inc
push
repz
outsl
mov
fdivr
jp
cmp
or
jns
cmc
jb
push
cs
mov
cltd
jl
jp
push
outsb
scas
cs
inc
fucomp
push
sub
jmp
xchg
push
pcmpeqw
dec
mov
add
jne
jp
mov
mov
mov
and
xchg
in
sahf
xlat
sbb
lcall
and
movsl
dec
mov
jnp
inc
push
pushf
das
jecxz
out
fstps
ror
mov
xlat
dec
ss
mov
mov
pop
sub
aaa
xor
stos
jno
stc
jmp
cmc
pop
pop
js
repz
xor
out
push
loope
movsl
mov
inc
leave
rolb
hlt
arpl
xchg
dec
push
testb
push
xchg
dec
leave
out
mov
popa
lea
xchg
int
sub
int3
or
in
push
out
add
flds
nop
scas
lods
sub
rol
cs
in
jns
sub
call
mov
mov
les
mov
nop
nop
or
cmpsb
xor
pop
jbe
cbtw
mov
pop
fsts
nop
mov
cli
or
xor
pop
inc
add
xor
int3
mov
js
test
sbb
sub
repz
inc
dec
mov
in
xor
add
shll
push
mov
xchg
push
inc
daa
imul
enter
xor
test
inc
lods
cmp
jmp
push
in
adc
adc
jl
daa
movsl
fs
inc
fdivrl
and
mov
or
ds
lock
loope
js
js
fs
cltd
push
mov
int
xchg
and
push
xchg
jae
into
popa
push
xor
in
and
lds
pop
pop
movsl
sbb
or
add
xchg
jmp
fcmovb
je
xchg
addl
pop
add
clc
arpl
mov
movsl
cmpsl
scas
xor
ror
dec
hlt
sti
sbb
je
xchg
mov
cmp
dec
out
sbb
xchg
pop
cmp
fcomps
xor
fiaddl
sub
pop
aaa
adc
cmpsl
mulb
and
xchg
or
cmp
in
push
mov
test
lods
cltd
adc
adc
int
cmp
ret
and
dec
jecxz
inc
pop
ljmp
or
sbb
mov
sbb
push
push
cmp
add
ret
xchg
ja
stos
and
in
imul
push
cmp
cld
hlt
push
icebp
fmuls
hlt
aad
and
push
push
stos
add
pop
das
into
out
sub
inc
and
sbb
xchg
fcomip
dec
movsb
dec
out
das
xor
fisubl
aad
or
jmp
aas
cmp
les
xor
pop
mov
lahf
cmpb
test
adc
mov
stos
or
call
insb
idivb
pushf
jmp
fwait
pop
pop
jle
or
adc
div
pop
inc
cmp
adc
push
sub
das
ss
sub
loopne
inc
mov
adc
pop
pop
rcrb
cmp
sbb
cltd
sub
loop
push
into
hlt
nop
push
nop
xlat
push
inc
pushf
mov
je
push
xchg
inc
add
adc
xor
push
sub
jl
scas
pop
xchg
pusha
sarb
sub
fxch
or
jns
stos
ds
push
icebp
mov
ret
push
mov
mov
inc
adc
cmp
out
ljmp
mov
dec
cli
lret
movl
add
es
sti
sub
push
hlt
push
push
imul
ja
ja
sbb
testb
notl
sbb
popa
mov
mov
ss
es
movsb
test
jno
mov
or
jl
jp
dec
mov
dec
pop
cmp
mov
pusha
sbb
xchg
test
cwtl
mov
lock
and
insb
scas
mov
xlat
adc
test
lock
in
pusha
lcall
inc
mov
mov
mov
cmc
andl
and
in
fwait
cs
imul
push
or
rol
and
cmp
cmc
jno
pop
xchg
mov
sub
dec
push
mov
cmp
cmp
mov
cmp
out
push
movsb
dec
push
les
leave
or
pop
lret
arpl
iret
das
jnp
lahf
sahf
mov
push
mov
fidivrs
add
int3
stos
sbb
push
and
test
scas
fdivrl
adcl
mov
movsb
xchg
mov
xchg
xorl
fsubr
lcall
adc
jno
or
jmp
mov
fwait
pop
int3
jle
out
pop
push
int3
icebp
aam
jbe
adc
mov
jbe
pop
pop
aaa
xor
add
loope
cmp
mov
dec
addr16
push
and
add
shr
dec
mov
jle
pop
xchg
xchg
pop
mov
mov
in
cmp
and
shlb
int
loope
imull
out
inc
cmpsb
sar
clc
je
jmp
xchg
pop
push
hlt
test
ljmp
push
and
inc
sbb
aad
loop
cmpsl
lret
add
mov
push
jecxz
sub
shrb
loop
je
sub
into
xor
xor
jl
pusha
lahf
clc
cmp
mov
lods
fmuls
adc
fistpl
ja
fldl
inc
xor
dec
mull
push
sub
ljmp
stos
cmp
adc
dec
and
adcb
sub
push
ret
sub
hlt
xor
in
iret
xchg
in
push
inc
push
pop
mov
dec
mov
and
mov
lock
pop
hlt
adc
mov
jo
mov
push
xor
xchg
je
movsb
es
jnp
lods
push
insb
inc
jmp
pop
inc
sub
fucom
sub
sbbl
adc
decl
xchg
das
fdivr
xchg
orl
movsb
orl
stc
pop
sbb
or
mov
dec
loopne
stos
hlt
bound
mov
mov
fdivrl
scas
pusha
xor
xor
mov
mov
pop
mov
repz
leave
popa
pop
std
push
dec
loope
sub
jmp
jl
mov
hlt
pop
dec
xor
jnp
mov
jg
cmp
and
rep
xor
mov
lcall
mov
fs
push
popf
mov
xor
pop
test
sub
jno
mov
or
mov
pushf
push
mov
mov
inc
movsl
mov
sbb
je
push
into
mov
lcall
les
fildl
jae
es
sti
shlb
fnstsw
sbb
mov
and
pop
in
add
sub
push
shrl
sub
fdivr
sub
dec
imul
mov
popf
jl
fstl
jg
jmp
andl
jne
sbb
mov
lcall
mov
das
xor
inc
sub
aad
pop
or
sub
jg
out
arpl
ja
or
mov
mov
dec
push
push
aad
sti
in
fcoms
and
mov
add
mov
stos
cltd
xchg
jmp
test
mov
aas
loop
stos
test
pop
xor
jp
les
cmp
adc
jp
xor
movl
xchg
mov
xchg
stc
int
cmc
arpl
incl
lods
dec
jp
stc
and
xorb
test
sub
iret
test
repz
mov
inc
jmp
lock
xor
mov
xchg
int
pop
cld
mov
aad
inc
pop
jns,pt
or
mov
inc
sub
insb
dec
inc
jns
sub
mov
dec
push
sar
sub
imul
xor
lods
push
jle
or
repnz
call
xor
cmpsl
cmp
setp
sub
outsb
std
jmp
stc
mov
mov
cltd
mov
sbb
sahf
xor
xchg
adc
fwait
in
gs
popa
sub
ret
push
mov
rcll
popa
mov
pop
push
ja
dec
adc
outsb
loop
movsl
es
push
and
inc
inc
das
mov
adc
outsb
mov
addl
aaa
lock
out
mov
pinsrw
jae
xor
scas
xor
adc
xor
repnz
outsb
mov
and
icebp
jmp
push
int
inc
lock
jp
inc
mov
test
aaa
jmp
adc
int3
mov
sbb
dec
push
lds
push
lret
fdivrp
imul
or
adc
adc
mov
mov
sub
pop
push
hlt
sub
dec
dec
sbb
test
divb
lock
xor
test
xchg
gs
int3
repnz
test
dec
and
mov
xor
push
mov
dec
jl
inc
push
sti
xchg
mov
rcl
fadds
ret
push
mov
ret
push
or
roll
xor
lock
je
out
push
mov
test
rorb
mov
and
addr16
addr16
mov
jno
loopne
cs
mov
lcall
data16
ficomps
clc
or
jne
push
jle
cmp
stos
into
mov
ret
std
cwtl
mov
mov
dec
jbe
xchg
mov
ja
jecxz
icebp
pop
jne
and
fs
lret
xor
xor
shlb
adc
outsl
xor
int3
pop
scas
or
arpl
jmp
push
mov
pop
sub
jmp
aam
dec
pop
add
push
fisubs
xchg
mov
aas
or
mov
and
push
add
xchg
pop
int3
loopne
clc
sbb
dec
mov
aam
fistpl
sahf
testl
mov
add
dec
push
pop
jns
scas
cmp
jmp
imul
fsubr
dec
mov
jnp
push
iret
cmp
out
cltd
xor
repnz
lock
fs
sbbb
cmp
roll
ja
jne
sub
jbe
loop
pop
rolb
xor
jge
sahf
iret
shrb
fs
rolb
das
dec
cwtl
mov
das
pusha
mov
out
cltd
pusha
jge
mov
sbb
pop
lret
and
pop
add
xor
js
adc
in
adc
fnstcw
push
iret
xchg
inc
jle
jmp
out
pusha
hlt
ret
int
and
mov
clc
pop
xchg
imul
repnz
dec
imul
iret
dec
add
adc
cld
shrb
pop
mov
mov
test
push
push
in
cmp
xor
insb
mov
subb
jnp
cwtl
ret
or
popf
sahf
fs
jno
adc
push
vmread
repz
sbb
popf
pop
mov
jmp
xlat
mov
lret
andb
mov
add
mov
dec
xchg
push
push
xchg
cltd
sahf
push
jo
push
push
xchg
add
jge
inc
lret
es
aaa
dec
sub
mov
xchg
int3
je
xor
jo
gs
fstps
ja
mov
inc
es
cmpsl
fucom
ret
dec
sbb
nop
jl
ret
and
xchg
cmp
or
cld
lea
movl
push
dec
cmpsb
xchg
mov
int
push
jo
adc
cmp
push
es
inc
icebp
xor
sub
fldenv
ja
sti
jle
sbb
lods
movsbl
xchg
fstps
mov
add
pop
mov
pop
nop
and
fildl
inc
xor
addl
and
mov
xlat
scas
in
cli
jge
roll
rcll
fsubr
pop
inc
sbb
in
test
sbb
jbe
jns
dec
xchg
out
outsl
fwait
ljmp
add
jg
cld
gs
mov
roll
fwait
and
add
lret
rcll
cmpsl
mov
dec
mov
pop
shl
inc
test
rcrb
lods
jnp
lret
orl
insb
in
lret
push
mov
pop
int
xchg
push
mov
push
adc
mov
out
mov
pop
dec
out
and
inc
sub
lret
ss
mov
ds
movsl
pmaxsw
dec
xchg
dec
push
pop
mov
in
shlb
into
jo
mov
sbb
imul
add
jge
inc
cld
scas
xchg
push
iret
pop
mov
xor
cmp
scas
jge
adc
pop
pop
popf
loop
xor
iret
icebp
add
jmp
adc
or
lock
out
xchg
lret
out
pop
dec
jge
jp
pop
cltd
lock
cmc
mov
popf
sbb
cmp
and
push
mov
add
or
js
flds
shl
mov
xchg
xorb
dec
cmp
jmp
outsl
push
iret
cmpsl
xor
jno
dec
add
ss
cltd
xchg
mov
pop
cwtl
adc
mov
popa
repz
rcrb
sub
fmull
dec
aad
pop
and
loop,pt
lcall
jmp
dec
mov
and
mov
xor
pushl
or
jne
pop
pop
xchg
std
rclb
xor
lods
out
mov
out
int3
lods
pusha
aaa
mov
addr16
movsb
push
addb
jg
fmulp
cmp
mov
xchg
fcmove
mov
push
sahf
jne
shrb
mov
pop
stc
loope
int3
mov
movsl
mov
mov
mov
push
test
popa
nop
add
test
sbbl
mov
inc
inc
mov
pop
pop
out
lret
cmp
inc
jmp
cmp
inc
xor
xor
scas
stos
xchg
mov
dec
fdivl
addb
mov
push
scas
insb
or
jae
inc
test
lock
mov
dec
aas
mov
fwait
std
jle
adc
mov
pushf
inc
jo
and
leave
dec
jne
jl
jmp
or
ffree
sbb
mov
push
xchg
fwait
xlat
cmp
and
loop
bound
jbe
pop
into
sahf
mov
js
jo
fmull
dec
cmp
xor
cli
loop
adc
lock
push
jns
pop
lret
sarb
push
jno
ret
add
jo
sbb
add
mov
das
test
add
repnz
mov
push
stos
xor
rcrb
dec
sub
ret
test
stos
arpl
les
or
bound
jns
or
dec
xor
dec
fcoms
push
xor
orb
ja
sti
sbb
sbb
cmc
js
xchg
inc
xlat
push
dec
lock
dec
mov
mov
divl
xor
inc
dec
fisubl
call
aam
fsts
xchg
xchg
sbb
xchg
insl
nop
xor
pop
loopne
and
cmp
cmovge
cmc
lods
jnp
dec
xor
fs
test
push
mov
sub
je
cmp
and
fwait
add
lahf
dec
mov
popa
mov
xor
enter
imul
and
fwait
pop
push
inc
xor
jle
insl
mov
in
out
test
xchg
pop
inc
pop
xchg
repnz
je
std
pop
push
ret
mov
add
popf
fsubrp
sub
ret
jp
push
nop
xchg
mov
daa
andl
xor
fsubr
test
cmp
popa
jb
fldcw
inc
mov
dec
cli
push
dec
jbe
shrb
dec
cs
pop
cmp
jp
or
pop
pop
ja
shl
pop
sbbb
push
movsb
sub
ja
jne
movsb
sub
cs
addr16
maxps
lret
js
dec
and
pop
mov
pop
aam
loopne
stos
aas
loop
ds
leave
mov
ficoml
shrb
popa
and
jmp
sbb
push
jo
movsl
jg
gs
cmp
mov
sbb
call
mov
sub
imul
repnz
imul
pop
sti
xchg
and
mov
or
mov
dec
push
stos
pushf
jmp
sub
mov
push
ret
fildll
fs
pop
aas
loope
mov
xor
add
fcom
cmp
fdivs
inc
adcb
in
data16
lods
jl
data16
gs
lret
inc
je
mov
xor
mov
push
test
aaa
jecxz
aas
mov
mov
lret
les
idiv
dec
mov
popf
fmull
or
sbb
xor
inc
inc
call
cmpsl
imul
rcll
cld
push
cwtl
xchg
das
popa
stos
bound
push
mov
adc
loopne
push
inc
in
bound
pop
xchg
je
inc
call
push
addl
in
pop
fs
imul
in
test
rcrb
popf
dec
xor
mov
adc
xor
lret
stos
and
jge
mov
out
pop
push
ljmp
outsl
mov
loop
cmp
mov
mov
ret
sbb
mov
repnz
push
adc
idivl
push
jl
popf
mov
mov
mov
mov
push
mov
loop
adc
lods
faddl
je
nop
adc
dec
push
pushf
dec
aas
cmp
test
jbe
scas
cwtl
shll
test
int
and
sbb
test
push
aaa
inc
mov
hlt
mov
cmp
xchg
mov
fistl
jo
and
fsubrl
fcomps
sbb
or
jmp
fsub
sub
lods
mov
mov
or
addl
and
xchg
dec
pusha
inc
stos
outsb
jge
push
and
or
lret
out
add
test
add
daa
cltd
or
add
mov
orl
dec
shrl
xor
or
lcall
adc
mov
pop
leave
xchg
jo
push
pusha
insl
or
fs
lcall
jmp
xor
and
xchg
mov
adc
dec
lahf
xor
sbb
add
jmp
cmp
inc
cmpsb
stc
xchg
inc
push
fwait
rcrl
repnz
fidivs
jle
pop
decb
outsl
mov
dec
fisubl
jno
repnz
lea
adc
sbb
fsubr
sbb
pop
sbbb
sbb
outsb
sbb
xchg
shr
test
or
jns
jae
add
inc
mov
mov
sbb
fcom
shrl
movsl
jbe
jo
jle
or
or
xor
mov
pop
lods
or
inc
sub
mov
test
push
jl
les
out
sahf
lods
stos
test
jne
roll
pusha
push
inc
dec
ret
add
pop
push
insl
push
fcmovnb
and
in
fldlg2
xlat
dec
hlt
in
inc
sub
mov
cld
xor
or
lods
clc
je
jne
xchg
inc
lahf
jle
mov
pusha
movsl
stc
stos
mov
cld
out
std
jb
aad
add
xor
pop
jle
and
adcl
nop
pop
jne
bound
push
cmp
xchg
jle
rcll
sbb
aas
test
xor
dec
in
ret
in
xor
mov
iret
imul
mov
cmp
fwait
and
je
shlb
fiaddl
jecxz
pusha
push
ds
lods
pop
ja
inc
jb
sbb
out
lods
jmp
pop
nop
adc
push
sub
mov
mov
sbb
mov
and
es
cmpsl
lods
adc
and
push
mov
push
insl
sbb
mov
push
sar
mov
or
sub
movsl
lahf
icebp
push
inc
and
faddl
mov
lods
lahf
jne
mov
popa
adc
out
xor
outsb
jb
jno
stc
jb
mov
push
adc
pop
sub
in
push
jle
jmp
cli
and
adc
enter
or
nop
sbb
jl
xchg
lods
test
cltd
rorl
rorb
repz
mov
or
mov
inc
lret
cmc
aaa
pop
jmp
pop
push
add
dec
adc
dec
sahf
or
insl
lods
dec
cmovne
inc
xchg
mov
mov
jmp
sti
jecxz
jmp
int3
inc
jp
popa
adc
bound
lea
add
jg
dec
pop
sbb
pop
mov
cwtl
push
mul
and
out
sbb
xlat
nop
pop
cmp
iret
and
int
test
jb,pt
cmc
push
cwtl
pop
xchg
movsl
jno
xchg
push
pop
cmp
enter
mov
dec
xorl
add
fsts
lds
gs
adc
add
loopne
les
jmp
lret
je
add
inc
inc
inc
and
jno
std
xorl
test
lcall
xchg
jne
movsl
test
jl
push
cwtl
mov
adc
or
or
das
cmpsl
mov
int
in
adc
xchg
add
xchg
jl
ja
inc
repz
jno
cmpsb
std
mov
sti
hlt
shrl
inc
sbb
xchg
lret
in
jl
mov
es
idivl
out
rclb
in
cmp
cmpsl
jle
outsl
mov
pusha
sub
shlb
fucomp
xchg
push
lods
pusha
xor
push
jns
enter
outsb
pop
insb
add
ds
adc
mov
cmp
sub
inc
dec
jne
enter
pop
shrl
mov
js
xchg
lods
ja
mov
in
ret
negl
dec
jle
inc
xchg
adc
movsb
pop
cmp
and
jae
adc
sahf
jl
lock
std
cmp
jno
push
mov
dec
pop
mul
adc
xor
pop
xchg
push
push
pop
pop
inc
ja
pop
pusha
cmpsb
orb
in
loopne
and
movsl
push
repz
mov
jne
sub
mov
lret
decb
xchg
daa
jge
loope
orb
mov
stos
rcl
jge
int3
add
out
or
xlat
jge
xchg
pop
fcmovnbe
bnd
cmp
cld
nop
dec
or
je
ljmp
or
inc
push
orb
fistps
insb
call
ret
lds
out
cmp
sbb
insl
dec
add
dec
xchg
and
sub
jns
ds
and
int3
add
xor
dec
scas
arpl
addr16
lret
scas
fs
in
mov
out
je
test
ljmp
call
inc
scas
arpl
insb
or
stc
loop
cs
stc
mov
out
push
jae
sbb
jns
cmpsl
xor
sbb
pop
cmpsb
imul
pop
fdivrs
es
cmpsb
xchg
call
dec
mov
add
pushf
cltd
imul
jns
ljmp
hlt
mov
xor
mov
out
lret
mov
in
popa
xchg
pop
cmpsb
xchg
cmp
movsl
std
in
lcall
and
jmp
push
cmp
pop
gs
xlat
fdivrl
pop
xchg
aas
mov
les
xchg
pop
loop
add
lock
ficoml
push
les
adc
icebp
adc
adc
add
jbe
hlt
int
rorl
push
cli
sbb
push
adc
mov
stos
sbb
mov
sbb
pop
mulb
lcall
pushf
push
movsl
sbb
in
stos
mov
lock
push
add
jecxz
out
push
lret
mov
pop
stos
mov
mov
xor
scas
sbb
pop
adc
inc
enter
or
cmp
mov
cs
test
adc
cmpsb
movsb
sbb
add
sub
mov
jl
jg
mov
loopne
test
jg
out
and
and
rclb
int3
repz
pusha
fs
mov
adc
and
add
sbb
mov
scas
fstcw
jno
aas
popf
imul
jmp
test
hlt
mov
cmp
inc
jmp
jne
sbb
ret
add
dec
inc
ret
daa
cwtl
rorb
inc
je
lods
mov
into
pushf
fcmovbe
adc
sti
rorl
jecxz
sbb
jg
mov
push
into
mov
cmp
ret
aad
jle
scas
ja
jp
push
out
inc
add
outsl
in
out
sbbb
mov
ret
addr16
stos
popf
enter
pop
int
push
outsl
inc
push
mov
and
repnz
outsb
clc
push
addr16
repnz
mov
mov
cli
push
push
mov
shll
jne
hlt
or
jl
xchg
in
cwtl
ds
popa
fidivs
add
imull
cmpsl
mov
stos
xchg
ret
rcll
push
push
ds
cmp
pop
dec
sub
js
push
or
cmpsl
xchg
imul
push
cmc
push
sahf
ret
outsb
push
sarb
test
inc
jno
xchg
addr16
add
dec
lods
jle
mov
aaa
cmp
sub
cld
inc
inc
push
stc
imul
rcll
xchg
loop
and
mov
push
test
fwait
jnp
iret
mov
dec
push
dec
arpl
cli
stos
cwtl
xchg
cs
scas
xchg
jo
into
mov
and
lret
mov
addr16
sbb
pop
mov
fidivrl
int3
sub
xor
and
ds
xchg
mov
sahf
push
jo
out
rorl
ds
cmp
sbbb
cmp
cli
push
xor
mov
sbb
cmpsb
mov
lahf
cmp
push
xchg
add
pop
jecxz
js
dec
xchg
mov
jns
fidivs
push
aaa
mov
inc
xor
dec
xchg
ja
shrl
xlat
sbb
shll
sbb
orb
jne
pop
jp
pop
int3
cwtl
and
mov
push
ret
adc
cmp
arpl
adc
in
cld
dec
rep
and
adc
cltd
leave
inc
pop
mov
in
fidivrs
test
or
out
pop
in
in
rcrb
sbb
push
frstpm(287
push
rep
sbb
pop
inc
imul
pop
je
inc
test
xchg
jle
push
and
pop
xor
or
jg
shlb
je
in
lock
pop
outsb
mov
lds
sub
sbb
push
lcall
in
push
xchg
cmp
inc
loop
mov
jo
inc
inc
hlt
in
xchg
imul
cmc
push
pop
jp
dec
mov
cmp
pop
and
inc
stos
pop
push
es
sub
xor
je
inc
jb
pop
push
push
enter
cmpsb
xchg
int
es
mov
stmxcsr
fcompl
divl
xor
mov
shll
repz
loope
xor
inc
jnp
clc
idivl
jae
fwait
sarb
negb
push
cmp
call
mov
jg
dec
shrb
mov
rcrb
jns
sub
jno
fldl
xlat
lret
cmp
stos
cs
lahf
test
add
cs
jg
dec
push
fcmove
pop
and
popf
idivl
mov
in
add
inc
cmpps
stc
jg
dec
mov
test
xor
shr
mov
sub
or
test
push
xlat
add
ret
dec
jecxz
or
add
adc
out
sub
scas
pushf
xchg
push
mov
inc
dec
addr16
push
jmp
or
test
sub
and
push
sar
sti
js
xchg
or
xor
xchg
bound
push
insb
out
and
movsl
or
cmpsb
mov
cmpsl
and
sbb
mov
pop
adc
mov
loopne
add
sbb
outsb
add
fwait
xor
scas
out
loopne
mov
sbb
mov
fdivr
mov
mov
fcmovnbe
int3
lods
int
mov
inc
shll
push
jecxz
sub
or
ret
stc
lock
sti
or
inc
stos
imul
cwtl
scas
rcl
jg
cwtl
imul
mov
pop
cmp
movsl
lods
fmuls
sbb
nop
repnz
mov
mov
cmp
aam
lcall
and
insb
nop
std
leave
sbb
lret
scas
lods
iret
stos
push
add
push
add
xchg
sub
dec
sbb
pop
mov
dec
pop
push
and
sbb
sbb
xor
cld
scas
jmp
push
pop
or
out
jbe
jecxz
mov
and
sbb
mov
mov
lcall
sub
add
or
push
jge
jno
jnp
xchg
movsl
pop
fdivr
cmpsl
je
mov
cli
cmpsb
mov
popf
lods
mov
or
mov
sbb
pop
mov
aaa
insl
sub
ret
and
test
xlat
xchg
dec
cmpsb
and
frstor
ja
scas
fstps
orb
jbe
into
jp
adc
push
imul
jg
xor
leave
ljmp
add
pop
mov
add
lcall
dec
pushf
leave
add
xchg
mov
inc
xchg
adc
dec
jnp
inc
adc
push
inc
mov
adc
aas
testb
loope
or
pusha
inc
movsl
cmp
aad
dec
or
and
xor
arpl
into
jns
ss
lahf
fisubrs
pop
fisubl
fsubrs
ds
filds
pop
fimuls
lock
fistpll
push
insb
xlat
inc
mov
sbb
lahf
push
mov
adc
js
and
pop
jecxz
push
dec
stc
adc
mov
cmpsl
popa
or
rcll
mov
in
int
xor
gs
xlat
ret
jg
mov
iret
pop
push
adc
cmp
mov
adc
sbb
and
cli
mov
lea
adc
scas
mov
add
out
mov
inc
es
push
scas
push
loopne
mov
lods
mov
loop
dec
xchg
dec
fucomip
sar
addr16
aaa
mov
xor
pop
cld
xor
test
lods
or
orb
add
repnz
xchg
imul
xchg
mov
cwtl
xor
sub
dec
push
pusha
or
imul
rorb
pop
jl
xchg
lea
out
cmp
inc
shlb
xchg
sbb
and
add
out
sub
push
insl
btr
pop
pop
xor
xorb
push
out
mov
and
scas
add
scas
scas
sub
pop
add
lret
adc
add
or
lods
pop
sbb
pop
ret
inc
dec
fs
imul
lock
test
rep
dec
sbb
pushf
adc
pop
pushf
orl
ja
sbb
daa
addr16
test
popf
sub
cltd
mov
or
scas
or
stos
mov
jns
inc
pop
push
pop
jge
pusha
and
cmp
ss
mul
divb
in
xchg
jns
shr
or
cmp
mov
mov
leave
and
cmpsb
data16
push
inc
dec
sahf
stos
fstpt
jge
mov
ficoms
mov
sbb
fsubrs
dec
fcompl
test
xchg
add
jne
cmp
jb
roll
loop
sahf
popf
hlt
rcrl
ret
test
stos
push
aas
push
push
pusha
mov
sbb
test
out
push
push
shl
dec
sub
push
push
outsb
mov
cmpsl
dec
pop
or
imul
xchg
push
mov
mov
ja
out
test
sbb
cmp
das
movsl
mov
hlt
and
lods
mov
nop
gs
xor
movsb
jge
js
ret
loop
xorl
fwait
dec
xor
fcoms
mov
mov
or
js
push
popa
sub
mov
enter
xchg
daa
cmp
mov
aas
aad
pop
js
adc
lds
jb
mov
xchg
cmp
ffreep
jbe
movsb
and
adc
xchg
inc
jp
pop
je
fbld
push
xor
sti
adc
mov
fs
fbld
fidivrs
js
sbb
mov
fdivrl
dec
push
outsl
inc
in
jno
jns
mov
imul
lods
dec
insb
lods
repnz
cld
aas
dec
in
clc
jbe
sarb
add
lret
sarb
add
xchg
ret
jecxz
and
outsb
push
fnstcw
jl
xor
pop
jb
fwait
aad
lods
addr16
test
shlb
dec
sub
out
inc
sbb
in
mov
lods
xor
jecxz
cmpl
and
jb
pop
push
xchg
pop
movsl
lods
mov
aam
data16
cmp
fdivrs
adc
dec
adc
or
inc
inc
cmp
mov
xchg
cli
mulb
daa
sbb
pop
and
ss
arpl
fildll
jmp
loopne
cli
pop
cmp
xchg
rol
or
test
adc
pop
cmp
mov
ret
pop
add
ret
xchg
pusha
repz
adc
les
jg
adc
pop
adc
mov
shrl
mov
out
mov
push
mov
movsl
mov
cli
fistpll
inc
fs
fnsave
mov
pop
ret
dec
sarl
pop
call
jmp
movsl
cmpsl
es
lahf
andl
fninit
sbb
in
mov
push
push
or
or
inc
fwait
sahf
or
xchg
mov
in
cwtl
inc
dec
mov
dec
xchg
rolb
mov
pop
add
dec
adc
cmp
fldenv
or
inc
add
popa
and
hlt
enter
xchg
sti
xchg
push
push
mov
xor
loope
dec
cltd
jmp
stos
leave
push
xchg
jbe
add
mov
push
arpl
xchg
int3
dec
dec
out
mov
mov
or
mov
stos
jmp
cmpl
out
xchg
cmp
pushf
push
mov
loopne
cmp
adc
xor
mov
out
adc
scas
scas
xchg
jmp
lret
test
mov
adc
and
and
jg
inc
jae
pop
or
repz
outsl
pop
and
pop
inc
imulb
leave
jmp
adc
pop
int3
outsb
scas
daa
cmp
sub
add
xchg
outsb
and
mov
in
and
lods
pop
inc
test
mov
in
cmc
notl
pop
mov
pop
movb
mov
lock
js
cmp
push
and
mov
je
aas
daa
outsb
push
sub
and
or
push
push
icebp
sub
add
clc
push
dec
cmpsb
flds
int3
xor
fisttpll
dec
test
mov
adc
jb
stos
inc
pop
push
pop
popa
cmp
fdiv
cmp
negl
daa
dec
and
nop
ret
jecxz
cmp
mov
repz
ja
mov
pushf
test
jno
lods
and
and
ret
push
and
rcrl
loop
pop
enter
sub
inc
lods
xchg
hlt
jg
mov
ljmp
jno
clc
add
cmpsl
dec
xor
daa
inc
adc
jno
clc
das
cmc
shl
add
dec
push
adc
jl
jle
loopne
call
loope
sarl
jle
adc
add
mov
jg
rcrl
aad
stos
add
aaa
les
inc
lret
ret
jae
push
sub
add
sbb
or
push
insl
dec
negl
dec
push
pushf
pop
cltd
mov
in
dec
and
sub
decl
les
cmp
or
jb
nop
cwtl
adc
call
std
repnz
mov
and
prefetch
aaa
push
fwait
ret
jp
mov
jl
in
lahf
sub
jns
push
push
loopne
dec
mov
xchg
lods
popf
stc
jmp
arpl
xchg
ds
or
roll
movsl
andl
and
and
mov
cwtl
sti
test
mov
cltd
add
push
or
jno
jle
or
mov
cmc
sub
push
push
lock
sbb
bound
repz
rcr
aas
rcl
jmp
ljmp
lret
bound
pop
mov
shll
pusha
xor
ja
cmpsb
sbb
out
mov
imul
sbb
inc
xor
push
pop
push
fistpl
inc
jns
and
and
out
lret
testl
jge
cwtl
cmp
jno
jmp
inc
cmpl
insb
fmuls
inc
jno
sub
inc
mov
outsl
sub
cmp
insb
add
in
xor
dec
dec
xor
mov
pop
loope
adc
or
or
int
sar
clc
pop
pop
jb
insb
std
aam
pop
xchg
popa
test
mov
ret
rorb
or
jp
jne
fwait
push
cltd
dec
mov
ficompl
stos
rcrl
call
movsb
cmp
fs
out
icebp
nop
add
cmp
repz
das
test
jae
add
add
mov
inc
cmp
outsb
jne
push
mov
xchg
mov
cwtl
jbe
push
mov
test
lret
cltd
dec
pop
and
jo
adc
mov
mov
pop
lods
xchg
cmpsl
imul
pop
xchg
fsubrs
es
fsubr
inc
aaa
mulb
sbb
test
sub
repnz
pop
fbstp
adc
adc
in
mov
push
add
sub
xlat
jne
xchg
lret
pop
mov
pop
push
stos
dec
adc
pop
fwait
mov
mov
push
pusha
mov
jne
and
dec
xor
or
push
push
int3
push
add
cwtl
cs
push
stos
cwtl
adc
movsl
in
dec
dec
cwtl
xchg
cs
test
fcmovu
pop
xchg
imulb
loopne
es
addb
inc
inc
mov
shlb
loopne
ret
std
jmp
dec
adc
mov
lock
inc
je
add
ds
xor
jbe
pop
push
push
icebp
mov
jb
mov
or
sbb
pop
mov
jl
loopne
rorl
dec
movsb
adc
or
ds
push
mov
jmp
xor
cmc
inc
mov
inc
in
loope
fadds
dec
inc
ljmp
and
mov
adc
rorb
repz
stc
inc
gs
leave
insb
add
andl
mov
cmp
mov
xchg
scas
out
jne
push
icebp
xchg
js,pt
bound
mov
out
mov
scas
push
pop
ja
dec
in
adc
mov
adc
sub
xchg
pushf
mov
adc
cmc
or
std
and
js
enter
fs
scas
cmp
inc
or
add
pusha
sub
iret
add
mov
xchg
add
cmpsl
into
arpl
rclb
fldenv
and
xor
push
jb
cmp
dec
mov
sbb
adc
xor
ret
jns
mov
std
inc
mov
sarb
adc
jo
mov
xor
adcl
pushf
xchg
inc
xchg
sbb
ja
pop
adc
fcompl
repz
add
or
jmp
cmpsl
ja
fidivl
cmc
mov
das
sbb
loope
cmp
or
in
or
jle
dec
xlat
cld
mov
aaa
test
pusha
daa
int3
mov
add
mov
xchg
jnp
lcall
lret
rorl
fsubr
mov
and
adc
call
aas
xchg
arpl
mov
push
movsb
jmp
pop
les
into
loopne
jb
dec
fwait
mov
jl
hlt
inc
or
or
xchg
cmp
jp
es
jmp
or
insb
dec
mov
jge
dec
push
adc
jno
cmpsl
aaa
dec
jecxz
nop
sub
pop
shrl
pop
inc
in
stos
nop
out
dec
xchg
mov
mov
int3
mov
and
std
ret
ja
loopne
cs
mov
addr16
loopne
sub
mov
xchg
xchg
inc
ret
stc
jne
pop
hlt
lret
mov
leave
cmc
sti
xchg
cli
shlb
lock
xchg
in
pop
rorb
pop
orl
pop
hlt
and
fldenv
jno
repz
mov
test
cmp
dec
cld
sbb
daa
rorb
out
jge
cwtl
out
mov
jecxz
imul
pop
daa
ljmp
inc
pop
mov
or
jg
sub
subb
out
aam
std
out
jbe
out
jg
popf
lcall
fiaddl
fstpl
popa
pop
je
adc
pop
inc
jb
std
sub
sbb
or
pusha
fstps
pusha
ret
inc
mov
mov
adcb
or
and
movsl
and
adc
and
stos
leave
jb
pop
es
jns
jno
mov
daa
pusha
or
test
or
xchg
push
into
mov
aad
and
xchg
push
aaa
xchg
mov
outsb
push
adc
cwtl
add
mov
idivl
mov
in
repnz
cmpsb
test
clc
aad
sub
test
mov
pop
mov
movsb
ljmp
or
dec
push
int3
shll
push
jecxz
lods
aad
scas
pop
sar
add
or
or
add
jg
stos
cmp
mov
fidivrl
insl
xchg
and
ret
xor
aam
push
push
subb
rorb
inc
pushf
repnz
push
inc
pop
and
addr16
sbb
aam
into
movsb
lea
mov
and
or
fildll
das
imul
jmp
sbb
add
pop
and
push
ljmp
mov
mov
jp
loop
iret
pop
fimull
lods
cmpsb
sub
stos
jmp
cs
adc
jbe
and
movsb
andb
adc
mov
addl
mov
mov
cwtl
loope
daa
xchg
addr16
sahf
ss
cwtl
imulb
or
and
cld
fildl
gs
mov
sti
inc
loope
imul
fldlg2
stc
mov
insl
lret
and
nop
cmpsl
stos
jno
inc
imul
dec
mov
loopne
hlt
rcr
in
fistpll
fdivrl
sub
xor
pop
sbb
xchg
in
jbe
mov
push
dec
daa
or
mov
sub
or
lods
lea
inc
ljmp
shlb
mov
or
add
roll
mov
cmpsb
mulb
daa
and
push
xor
xchg
mov
gs
sahf
in
loope
andb
out
cmp
movsb
cmp
cwtl
cli
add
xchg
aaa
mov
test
clc
jo
pusha
fldl
sbbb
push
mov
jp
arpl
xor
xchg
sahf
aam
sti
lcall
cmpsl
pop
mov
jle
inc
mov
pop
ja
mov
and
nop
xchg
push
int3
out
in
mov
pop
inc
lret
sub
outsb
into
in
rolb
bound
mov
repz
add
jl
mov
push
lret
inc
outsl
repnz
cmp
loope
jb
xchg
movsb
mov
dec
pop
dec
add
addr16
push
sub
mov
jns,pn
shll
cmp
ficomps
mov
mov
hlt
xchg
jae
out
jmp
mull
mov
add
xchg
push
xorl
mov
imul
lds
or
jne
aam
add
mov
shlb
sbb
mov
insl
lahf
inc
lds
test
pop
fwait
aad
loop
push
push
cmp
inc
imul
mov
insb
in
push
adc
mov
in
outsb
in
jg
sbb
mov
sub
stos
imul
fsubrl
imul
jecxz
lds
dec
dec
xchg
scas
cmpsb
sub
scas
bound
xor
js
mov
cmp
lea
push
jge
sahf
pop
adc
jae
push
ljmp
xlat
div
jne
jp
shlb
add
shr
lcall
jg
js
cmpsl
or
pushf
pop
test
loopne
es
out
add
sbbl
dec
out
addl
pop
mov
sarb
es
sti
xor
popf
ret
inc
cmp
xor
cmpsb
test
insb
lret
cmpsb
lods
push
popfw
sarb
shl
out
push
fnstenv
pop
sub
daa
mov
ljmp
adc
imulb
call
jne
add
sub
dec
shr
sbbb
mov
outsb
sahf
sbb
pop
xor
pop
es
adc
fidivl
pop
adc
jno
jo
mov
sub
jmp
mov
jne
or
jl
iret
loopne
std
popa
mov
xchg
rorl
int
mov
adc
push
mov
jl
pop
mov
inc
or
mov
out
daa
xor
aad
xchg
pop
pop
mov
add
aas
cmpsb
scas
loope
push
out
test
xlat
or
cmp
std
dec
sub
jne
adc
loopne
fdivp
and
lahf
xor
psadbw
xor
out
xchg
loopne
xchg
inc
adc
popf
shlb
js
insl
aad
das
enter
fwait
in
or
jns
data16
and
dec
and
sti
adc
cmpsl
inc
das
ss
lahf
jnp
and
inc
imul
mov
pusha
xchg
adc
aam
sub
pop
and
cmp
and
mov
scas
mov
add
xchg
fwait
sub
fldenv
or
test
lret
mov
movsb
lcall
mov
lds
scas
mov
loopne
sbbb
pop
add
incb
inc
orb
adc
arpl
fidivrl
cmc
repnz
mov
jl
sub
inc
lods
push
add
or
popa
pop
mov
in
aas
push
push
iret
cwtl
pusha
jg
pop
and
ret
popa
xchg
xchg
fdiv
mov
aam
mov
ficoml
mov
in
adc
movsb
pop
fwait
and
incb
lret
in
sahf
inc
fwait
add
sub
adc
rolb
cwtl
aaa
es
out
push
jbe
data16
dec
cmpl
xchg
dec
aad
fidivl
test
popa
ds
pop
jae
mov
jne
mov
mov
jo
enter
or
inc
pop
test
inc
xlat
not
idivl
mov
dec
push
or
ljmp
mov
daa
cwtl
pop
push
mov
dec
add
into
or
inc
mov
arpl
adc
and
lcall
loopne
push
mov
stc
xchg
lods
out
mov
mov
xchg
call
daa
pop
scas
inc
idivb
call
dec
mov
outsb
loop
addr16
into
pop
push
shll
test
dec
mov
rol
inc
repnz
movsl
fldt
add
xor
pusha
hlt
inc
daa
pop
mov
fmuls
or
andb
lds
lock
cmpsb
enter
and
andb
mov
jg
stc
ficomps
or
out
sub
lahf
adc
lea
mov
inc
daa
rol
xor
xchg
stos
sbb
xchg
xchg
daa
sub
outsl
cmp
add
repnz
loopne
sbb
addr16
pusha
sub
mov
jecxz
not
pop
or
pop
mov
test
inc
cli
mov
mov
outsb
outsl
cmp
rep
ds
and
pop
add
orl
xchg
and
jo
and
pop
jb
pop
pop
jne
cld
xchg
push
pusha
stos
add
enter
jo
xor
dec
std
cmpl
mov
mov
out
shr
sub
mov
lret
mov
inc
mov
lcall
xchg
data16
testl
shll
in
pop
nop
inc
pop
test
and
lret
push
or
pop
push
shll
ss
and
in
mov
test
test
xchg
leave
push
xchg
subl
lock
pop
adc
cli
es
das
in
mov
inc
gs
jl
push
arpl
loopne
ljmp
lods
xor
lds
mov
adcl
dec
add
jge
inc
jns
rorl
dec
repnz
fldenv
sbb
mov
mov
les
push
mov
cltd
pop
jp
add
mov
aaa
inc
add
pushf
ljmp
adc
jp
js
mov
mov
mov
movsb
cwtl
pop
ficoms
or
xor
scas
loopne
cmp
or
and
adc
je
iret
cmp
mov
insb
xor
inc
and
cmpsb
shlb
popl
xor
and
mov
xchg
leave
adc
test
xor
scas
pop
dec
sub
jnp
in
test
popf
lock
lds
andl
testb
sarb
in
ret
divb
sbb
mov
sbb
and
or
imul
mov
pop
dec
mov
pop
xor
jne
xchg
pop
sbb
pop
dec
in
mov
out
xor
shll
loop
push
dec
jae
mov
data16
es
cmc
xchg
shl
stc
push
fs
jmp
sbb
add
call
test
idiv
add
pop
pop
ret
sahf
loop
fs
xor
or
sub
inc
js
enter
cmp
jmp
scas
es
fdiv
push
arpl
out
mov
aad
and
jmp
dec
jb
jle
push
mov
inc
add
fmulp
cmp
stos
xor
or
nop
mov
xchg
negl
out
mov
sub
lods
mov
adc
addr16
push
jb
pop
cli
cli
fsubs
in
add
cmpsl
insl
in
dec
pop
in
add
fistpl
adc
push
cmp
xor
inc
xchg
ljmp
sbb
sbb
dec
jb
into
and
xchg
lea
lds
cmp
push
push
jmp
mov
sti
inc
int
xlat
inc
adc
iret
pop
shrl
and
pop
jmp
inc
and
into
xchg
into
adc
rep
scas
ljmp
rcr
inc
out
popa
sub
inc
mov
push
fidivrs
jb
push
jle
xor
and
sub
lahf
sbb
pop
int3
xchg
lods
scas
sti
jae
scas
jnp
pop
push
sbb
push
mov
aas
sbbb
jb
mov
pushf
adc
lcall
pop
mov
xchg
mov
and
cmc
pop
pop
adc
mov
push
mov
cmp
das
into
push
sub
add
cmp
mov
push
sbb
imul
lods
insl
push
add
outsl
adc
push
dec
icebp
cmp
or
hlt
add
les
cmp
addr16
xchg
or
in
cmp
sub
out
sbb
adc
aad
xchg
es
das
pop
dec
add
xchg
cmp
inc
add
aas
lret
cmp
outsb
jecxz
inc
sbb
push
testl
stos
cmp
sbb
or
fs
cmpsl
in
data16
enter
pusha
ljmp
mov
sbb
pushf
pop
das
outsb
rcll
mov
push
mov
icebp
lods
fsubrs
fnstenv
cld
mov
xor
int
jne
andl
fisubs
arpl
adc
inc
idivb
push
or
addr16
xor
push
out
dec
sbb
rcr
mov
inc
push
sbb
out
out
mov
jmp
jmp
stc
mov
icebp
fs
cmpsl
shlb
orb
mov
divl
mov
jp
les
clc
imul
call
mov
in
rcpps
ljmp
fbstp
xchg
xor
dec
out
pop
push
ret
cmc
push
out
ja
sbb
and
faddl
cwtl
sbbb
jnp
inc
imul
repz
add
addr16
out
rorl
dec
aam
lahf
push
cli
or
push
or
jl
imul
je
fdivrs
addb
scas
xor
addr16
mov
in
xchg
sub
mov
enter
out
and
lahf
movl
scas
in
repz
mov
inc
das
or
pop
ds
dec
push
orb
mov
enter
mov
lods
shrl
pop
dec
or
cltd
popf
jmp
xor
dec
insl
cmp
jmp
roll
mov
and
cmpsb
push
lods
and
gs
push
adc
or
push
outsb
arpl
or
xchg
divl
pop
inc
sbb
mov
pop
in
inc
push
jp
mov
mov
mov
fwait
out
mov
scas
xor
push
lock
fildll
imul
ficomps
jg
xor
lret
mov
sti
dec
test
fidivrl
sub
cwtl
sbb
fs
lock
jo
push
sbb
xor
or
push
mov
mov
pop
jb
push
sti
mov
mov
int3
lret
call
or
sets
mov
fwait
or
sbb
xchg
pop
pushf
and
mov
lret
jns
scas
gs
mov
out
cmpsl
stos
sbb
and
push
in
cltd
lods
mov
orb
inc
jl
or
pusha
jg
sbb
xor
pushf
pop
cmpl
push
inc
xchg
nop
adc
jp
xor
ljmp
sub
int3
jnp
adc
sub
frstor
xchg
int3
pushf
xor
adc
in
aad
addb
add
mov
xchg
dec
cltd
and
or
push
adc
pop
les
shl
cltd
shrl
mov
outsb
mov
aas
mov
jmp
sub
sub
sbb
lods
push
jo
xchg
movsl
mov
ficoml
dec
mov
add
inc
test
fwait
cmpsl
addr16
inc
or
sub
ss
jle
dec
les
test
in
pushf
icebp
or
jmp
jne
adc
js
xor
insl
std
sbb
hlt
push
jp
mov
mov
out
xchg
pushf
adc
xchg
movsb
fnstsw
mov
fdivs
dec
push
and
jle
stc
negb
sahf
lret
aaa
push
lret
cmpsb
loop
ljmp
mov
cmp
or
jecxz
dec
jp
lret
fwait
pop
mov
mov
fptan
in
push
nop
dec
jae
xor
mov
cltd
and
and
icebp
cmp
push
mov
cmc
inc
stos
leave
notl
fisubrs
jl
adc
jecxz
jl
cmc
imul
bound
sub
fistps
push
sbb
mov
sub
add
or
and
pop
aam
movsb
imul
mov
dec
insl
add
push
sbbb
fsubp
out
leave
enter
mov
mov
inc
jp
pop
adc
jno
nop
fsubr
lock
push
or
sub
aas
daa
mov
ret
ret
adc
sti
lods
inc
rcll
scas
or
adc
incb
insb
orl
add
les
sbb
pop
in
call
inc
and
mov
dec
adc
enter
test
mov
mov
lahf
fiaddl
mov
shlb
ffreep
xlat
test
jns
and
push
negl
push
or
push
mov
mov
in
loop
mov
jns
in
std
repz
lock
int
popf
cmp
out
add
jae
cwtl
andb
adc
cwtl
ljmp
add
jne
in
and
dec
rorl
sub
jns
cld
bound
fucomip
mov
int3
push
dec
add
xorl
dec
das
jg
test
jae
cmp
jae
mov
les
and
push
inc
and
inc
or
mov
mov
pop
fcomp
xchg
dec
in
dec
push
pop
lock
mov
cmp
or
mov
add
lret
mov
and
leave
fadd
lds
pusha
sahf
nop
pop
pop
rcrl
mov
xchg
push
adc
insb
xor
or
jecxz
andb
sub
or
sub
sub
xlat
lds
dec
mov
sti
mov
popf
jnp
movsb
or
cmpsb
mov
shrd
sahf
inc
insb
xchg
mov
sbb
stc
addr16
xlat
in
mov
dec
mov
out
subl
testb
or
cld
sbbl
and
shll
adc
call
mov
test
mov
jb
jmp
push
mov
adc
dec
mov
shrb
and
in
nop
push
xlat
push
cmp
adc
ja
sub
push
sarl
cmc
cmp
pop
cmc
add
mov
jo
out
sub
pop
jle
jg
cmpsb
cmp
icebp
jge
push
xor
cmp
jge
in
stos
mov
negb
and
jns
call
push
not
sub
movsb
lret
xor
movsl
cs
xchg
test
popf
mov
loope
stc
xchg
jo
mov
ret
jecxz
jae
rcll
sub
in
aad
in
lahf
leave
sbb
add
push
inc
sbbl
lea
fdivr
add
test
xchg
dec
sub
xor
or
sti
xor
repz
cld
roll
xor
arpl
mov
sbb
repnz
aam
pop
or
rep
fisubrs
mov
and
inc
push
aaa
fnsave
fsub
hlt
add
dec
xor
mov
add
add
sub
ret
enter
out
in
or
in
push
adc
pop
hlt
pop
in
leave
and
mov
sbb
adc
mov
arpl
in
cmp
dec
mov
xor
cmp
movsb
add
faddl
and
rorl
adc
pusha
lcall
out
or
xor
or
push
lret
das
cmp
push
imul
add
or
mov
or
push
add
repnz
sarb
cmp
dec
je
xor
icebp
addr16
inc
xchg
cwtl
xchg
lods
pop
cli
fldl
nop
jo
jp
cmpsb
pop
scas
and
mov
fstl
arpl
mov
push
xchg
cmp
hlt
arpl
mov
xchg
xor
and
mov
mov
cmpsl
sub
stos
push
movsb
sub
push
sbb
sbb
sub
sbb
push
outsb
fistpl
out
das
pusha
jbe
inc
dec
mov
out
or
fstps
jb
arpl
xchg
push
push
pop
insl
fists
and
fsubl
data16
je
ret
ret
testl
sbb
xchg
ret
xchg
add
sbb
andb
jb,pt
xor
add
sub
repz
and
dec
ds
push
mov
ljmp
sarb
cmp
dec
and
ja
movsl
fiadds
xor
je
lods
stos
test
stos
pop
leave
mov
cltd
cmpsl
push
scas
or
jecxz
callw
xlat
mov
aad
sub
subb
sbbl
shlb
lea
pop
movsb
xor
jb
jge
fnstcw
or
inc
sbbl
push
adc
lock
aad
inc
adc
xor
push
cmpsl
outsb
add
pushf
aam
pop
xorb
mov
adc
daa
lret
cmp
insl
dec
aam
dec
iret
fsubrp
dec
jae
pop
dec
cltd
imul
ret
mov
cmpsb
xorl
ss
sub
scas
lods
mov
ds
adc
lods
insl
push
in
inc
add
sub
mov
imul
xor
sub
pop
jae
adc
add
insb
enter
imul
push
scas
xchg
cs
xchg
insb
jne
scas
mov
cmp
ret
hlt
ret
or
fcoms
ds
sbb
mov
mov
cmp
pop
lret
dec
clc
nop
jp
push
das
inc
sub
cmpsl
bound
fists
push
mov
xchg
or
aaa
jl
xlat
movups
aad
push
fsts
ljmp
repnz
or
lcall
insl
push
and
adc
mov
jmp
xchg
loopne
out
or
cmpl
in
out
cltd
dec
jl
cmc
mov
dec
sbb
sbb
rcrb
or
movsl
dec
xchg
jo
les
xor
jns
mov
mov
sbb
inc
outsl
lds
push
xchg
xchg
sub
mov
adc
test
jl
jl
aaa
mov
pop
adc
inc
aas
cmp
jne
enter
add
stos
in
fwait
mov
push
add
push
imul
push
push
push
insl
lock
pop
cmp
std
pop
pushl
pmaxsw
mov
pop
inc
inc
adc
fdivrl
pop
inc
xor
mov
test
and
out
sbb
out
push
enter
cmpsb
and
nopl
aad
xor
inc
cli
and
inc
push
pushf
mov
int
mov
cmc
mov
mov
fstpt
push
testl
or
or
out
and
push
loope
gs
inc
popa
add
les
or
lret
inc
xor
push
out
and
loope
ret
cmp
test
mov
cli
push
stos
in
les
inc
jle
mov
pushw
mov
and
and
dec
sub
add
dec
scas
adc
fadd
les
add
or
arpl
pop
cmc
jae
sub
sub
movsl
pop
mov
mov
addr16
in
and
dec
sub
subl
mov
cmp
ret
cmp
daa
add
mov
ret
dec
int
fwait
out
outsl
or
xchg
sbb
dec
adcb
sub
sub
mov
mov
popa
inc
ljmp
inc
and
mov
les
jg
pop
fnsave
rclb
jb
xchg
ret
adc
sahf
test
jmp
push
push
cmp
faddl
jg
rdpmc
lahf
mov
mov
sbbb
mov
mov
iret
mov
andl
sbb
xor
push
pop
inc
and
mov
test
enter
add
aas
mov
dec
push
jne
out
lret
and
rorb
push
fldl
push
inc
adc
pop
and
loopne
add
cs
movsb
clc
insb
xor
clc
jno
cmp
adc
hlt
pop
cli
sbb
pop
mov
dec
outsb
and
outsw
push
pop
shrl
popl
scas
and
insl
add
and
mov
jae
jae
adc
ss
and
leave
push
mov
sar
adc
or
xlat
outsb
lret
xchg
enter
fwait
lret
scas
cltd
roll
inc
push
clc
test
pop
cmp
pop
push
push
xor
adc
ja
addb
dec
jge
fdiv
mov
clc
jp
dec
push
insb
fiadds
push
adc
dec
and
push
or
push
dec
lcall
mov
inc
push
test
adc
mov
push
mov
jbe
pusha
mov
dec
popa
pop
inc
mov
jp
adc
sbb
pushf
aam
sahf
lret
cmp
cs
lcall
iret
dec
stc
push
fcoml
jns
loope
outsl
xor
in
mov
push
scas
call
test
sbbb
and
mov
add
xchg
jp
jno
adc
test
pop
jbe
repz
outsl
mov
cmpsl
mov
movsl
lea
inc
xchg
lock
inc
das
xor
mov
adc
mov
mov
pushf
jg
inc
jnp
dec
adc
pop
jl
xchg
in
scas
rcl
ljmp
cs
daa
lods
fcomip
es
dec
fs
in
push
pop
test
scas
aas
repnz
je
cmp
test
sub
and
int3
insl
in
icebp
or
inc
lcall
addl
push
ret
std
cs
loopne
push
mov
jo
popa
dec
or
jo
test
pop
add
mov
lea
jg
outsl
dec
jmp
lret
lcall
xorl
inc
pop
mov
loop
cmp
sbb
or
sub
mov
clc
or
into
jbe
pop
mov
cmpsl
outsb
subb
cmc
repz
jmp
pop
cmp
shrb
test
push
xor
addr16
shrl
scas
adc
xor
or
sti
std
enter
jg
sub
popf
sbb
das
popf
ja
imull
mov
sbb
and
shlb
inc
mov
rcll
mov
outsb
pop
or
cmpsl
lds
cwtl
jnp
xchg
jne
push
stos
ss
ds
push
fsubs
cmpsl
setle
pop
rorb
jecxz
pop
cwtl
adc
sbb
lds
jns
add
mov
jle
pop
sbb
add
jne
popa
test
loopne
cmpsl
mov
movsl
add
or
andl
out
xchg
in
xchg
inc
xchg
fldt
push
pop
ret
sbb
or
xlat
std
andb
push
mov
push
dec
rcrb
hlt
lock
aam
jae
xchg
arpl
fadd
repnz
nop
aaa
aad
pop
jnp
xchg
ljmp
sbb
call
and
mov
add
xor
mov
mov
and
test
xchg
ljmp
xchg
add
inc
push
push
fs
into
lret
fistl
divl
pop
jnp,pn
sbb
xor
mov
fcomp
mov
mov
jp
clc
mov
mov
or
fbld
jo
fs
sbbl
insb
and
push
out
loop
or
loopne
roll
insb
test
or
push
sbb
push
out
outsl
sbb
inc
imul
lret
iret
sbb
sbb
cmc
fnsave
idivb
inc
xor
mov
stos
aas
xchg
rclb
mov
rcrl
lea
mov
in
in
xor
in
xchg
inc
fwait
stos
inc
adc
imul
lods
addb
dec
mov
add
push
into
xor
push
inc
inc
push
fs
sub
insb
sbb
data16
inc
nop
push
bound
outsb
lcall
jne
and
jge
inc
push
scas
mov
push
leave
cmp
mov
mov
imul
xchg
jp
adc
les
bound
ret
fcomps
fidivs
push
mov
dec
fadds
call
jmp
xor
orl
aaa
and
clc
jl
sub
cmp
sub
ss
pop
inc
fnstsw
aad
cmp
pop
call
xor
jp
add
inc
test
xchg
xchg
loopne
pusha
and
scas
enter
xor
rcrl
or
sub
sub
ja
lahf
mov
jne
pushf
iret
cmp
arpl
enter
add
and
arpl
xchg
outsl
cmp
cmpb
dec
repnz
sub
push
jp
insb
or
dec
aaa
iret
mov
decl
mov
filds
daa
scas
jo
pop
mov
call
mov
loope
jne
test
fildl
xor
dec
sbb
cmp
repnz
inc
ret
jo
out
inc
xlat
aam
gs
dec
mov
inc
dec
mov
rdpmc
insb
out
mov
aas
or
hlt
popa
inc
xchg
enter
orl
pop
xchg
out
dec
cmpsl
in
das
push
sub
cld
push
mov
hlt
sahf
mov
mov
inc
push
sahf
mov
jnp
in
jp
push
aaa
sbb
enter
out
pop
inc
add
and
daa
ljmp
lret
test
cld
and
adc
jg
dec
cmpsl
jge
jns
in
fildl
and
sti
add
jb
sbb
jl
sbb
mov
fdivrs
iret
push
icebp
call
pop
xor
cmp
loope
addb
sub
xchg
lods
cltd
and
adc
out
fistpl
leave
mov
cmp
pop
fldenv
xchg
xor
xchg
test
push
xchg
add
int3
insl
hlt
mov
pop
pop
pop
and
jge
cmp
cmp
fsts
test
cltd
and
sbb
sub
shl
cli
and
mov
popa
mov
add
mov
jg
aam
out
rcrl
or
loopne
notl
psraw
cltd
push
arpl
aaa
adc
aad
stos
fcmovne
jl
insb
xchg
inc
dec
lds
jmp
push
mov
mov
pushf
push
mov
dec
xchg
sarl
mov
shr
stos
cmpsl
cli
jl
add
xchg
popf
mov
lods
outsl
mov
js
pop
adc
xor
int3
in
sub
inc
inc
andl
pop
iret
mov
or
or
pop
lcall
mov
clc
aas
aam
push
mov
push
push
mov
add
sbb
jp
enter
jnp
xchg
mulb
mov
negb
jo
out
cli
and
inc
pushl
shll
mov
cmpsl
xchg
inc
mov
imul
enter
sti
scas
mov
out
cmpsb
outsb
jle
sub
shl
sub
faddl
cmp
loopne
daa
movsl
fwait
xlat
rclb
mov
js
pop
loope
adc
repz
pop
hlt
xchg
push
nop
sbb
adc
je
adc
adc
mov
stos
cmp
stc
ljmp
push
mov
add
cwtl
fs
mov
jl
adc
dec
push
dec
mov
ds
cmp
add
and
sub
xchg
xor
pop
jb
lods
mov
push
ret
mov
into
test
sub
addr16
pushf
loope
decb
mov
adc
repz
je
mov
jb
scas
xlat
xor
push
std
pop
test
shll
cmp
sbb
jns
cwtl
pop
sub
xchg
loop
aas
aas
jle
inc
cld
in
push
aaa
bound
repnz
insb
mov
lcall
xor
cmpsb
mov
gs
out
out
or
xor
lods
shrb
jg
xchg
cli
sub
leave
sbb
push
icebp
mov
addr16
cwtl
fwait
rcll
pop
jmp
ss
cmp
mov
stos
jmp
and
out
push
or
jl
es
dec
fs
sti
notb
push
scas
sub
push
pop
sbb
shlb
push
enter
mov
std
outsb
adc
and
xor
add
test
ds
hlt
add
inc
or
or
pop
fwait
mov
iret
test
mov
lods
inc
out
dec
fisubs
push
xchg
inc
lods
das
stos
cwtl
jmp
fistpll
pop
sub
jbe
push
inc
out
lcall
test
mov
cld
hlt
out
test
push
mull
testl
movsl
pop
fsubrl
stc
pop
adc
xchg
popa
xor
push
inc
xchg
sub
jae
sbb
adc
xchg
xor
leave
shrb
mov
jae
notl
bnd
or
cs
and
popa
adc
xorl
pop
cmp
sti
imul
setno
push
fsubrs
cli
adc
mov
cltd
sbb
sbb
sub
sbb
dec
cmpsb
xchg
mov
je
idivb
insb
fisubl
or
test
sub
inc
sub
sbb
jo
push
jmp
mov
cmp
fwait
in
xor
jns
cltd
jbe
lret
lods
int
testl
ja
lods
popa
or
dec
ret
frstor
loopne
xchg
xlat
faddl
loope
in
inc
mov
out
jae
arpl
mov
cltd
mov
lods
popf
and
jo
insl
mov
xlat
inc
je
xor
lods
dec
mov
mov
fistps
lds
clc
add
adc
jno
add
frstor
ds
repz
std
jl
fcom
nop
in
mov
add
adc
outsb
nop
adc
loopne
mov
pop
movsb
add
loopne
cmc
pop
data16
call
icebp
test
pop
mov
dec
or
xchg
push
lahf
stos
out
dec
inc
cmp
and
mov
popf
and
xor
jl
jl
and
mov
cmp
xlat
das
aad
mov
or
fsubrl
adc
ret
insb
dec
xchg
icebp
push
scas
and
cmp
fsubs
push
cmp
and
mov
inc
int3
xor
xchg
push
xchg
nop
and
dec
mov
mov
out
xchg
mov
scas
imul
xor
pusha
pop
jg
push
fs
lret
xor
adc
pop
jne
popa
fwait
push
fwait
sarb
pushf
in
test
mov
pop
mov
notb
dec
cmp
mov
cmp
xchg
fidivrs
insl
push
stos
jecxz
mov
mov
or
mov
rorl
mov
in
ret
mov
movsl
jge
mov
jno
vcmpsd
and
gs
fsubp
add
mov
out
dec
mov
pop
dec
and
lods
idivb
mov
mov
fdivp
and
jl
inc
out
stc
sub
ret
mov
pop
adc
cmp
rorl
imul
sub
inc
push
fldenv
insb
push
int
inc
pop
mov
inc
je
xor
xor
arpl
dec
test
insb
lds
mov
adc
sbb
lcall
mov
loopne
outsl
stc
sub
and
fbld
out
cmp
or
sub
rcl
mov
fisttps
insb
cld
jb
mov
stos
test
pop
pop
insl
mov
mov
fildll
mov
or
cmc
outsb
sti
pop
iret
filds
fmull
shrl
enter
cvtps2pi
mov
cmp
sbb
ficompl
int
mov
test
mov
cs
push
push
mov
and
in
sub
jns
outsl
out
jns
rcrl
loopne
loop
sbb
mov
les
inc
ret
sbb
ds
iret
lds
iret
pop
sbb
inc
shr
cmp
pop
daa
daa
add
sbb
ljmp
fisttps
ret
lods
es
ljmp
aaa
aaa
rcll
cwtl
jbe
dec
aam
jg
jp
sub
sahf
mov
in
pusha
xchg
sahf
sbb
add
dec
ja
xlat
sti
xor
jbe
stos
fwait
imul
out
lcall
stos
fmull
pop
shl
jae
shll
movsl
mov
pop
inc
xlat
push
mov
filds
subl
mov
icebp
cs
and
adc
adc
aas
push
xchg
icebp
arpl
xor
jnp
scas
push
mov
jle
jae
mov
xor
mov
imull
push
cwtl
rorl
jno
jnp
scas
ret
push
gs
int3
cmpsl
aam
pop
mov
jb
das
popa
mov
fldt
gs
fisttpl
gs
adc
dec
add
popf
xlat
jae
add
lea
push
dec
mov
xor
push
adc
mov
cmp
out
and
addr16
enter
push
in
mov
test
ret
pop
rcl
ror
add
hlt
test
aas
mov
sub
xchg
hlt
shrl
mov
and
jno
add
push
aad
outsl
outsl
mov
push
in
lds
sahf
push
inc
stos
adc
pusha
xchg
or
lods
shll
xor
inc
dec
jns
lret
in
js
sub
fs
je
xor
xor
imul
or
filds
cmp
inc
mov
insl
addr16
push
les
fildll
shlb
dec
and
xlat
scas
notl
int3
fbld
inc
subb
and
mov
xor
popa
mov
xchg
in
dec
pop
xlat
or
lds
clc
data16
cli
mov
call
rorb
mov
idivl
sahf
roll
xor
in
jno
rcrb
test
mov
and
sub
inc
int
int3
imul
jl
arpl
add
sub
std
jo
scas
xchg
out
sub
mov
push
mov
je
mov
test
add
out
add
minps
add
inc
leave
cmp
sbb
jle
imul
fisubrs
cmp
test
push
orb
or
xor
lret
daa
lea
mov
mov
pusha
inc
je
xor
lea
shl
lret
pop
push
bound
sub
into
arpl
loope
sbb
fsubp
pop
xor
mov
sub
lea
movsl
movsl
shl
popf
mov
bound
into
loopne
dec
ss
imul
pop
ss
aam
enter
adc
dec
adc
addr16
dec
popa
jb
int3
jmp
cmpb
xor
cltd
push
pop
insl
add
repnz
imul
adc
xchg
mov
sarb
push
sbb
xchg
movsb
jmp
sbb
insl
bound
dec
jmp
pop
pop
pop
arpl
into
push
int
rorb
shrl
lret
sub
xor
sbb
aas
shll
mov
pop
jecxz
mov
pop
jnp
insb
loop
shll
pushf
out
aaa
jo
sbb
ficomps
gs
xchg
sub
fcmovne
iret
clc
push
or
inc
out
xchg
cmc
sbb
bound
daa
sub
lret
push
stc
orb
jne
js
gs
add
int
dec
imul
xor
mov
or
and
movsb
xchg
dec
dec
xchg
cwtl
inc
hlt
inc
dec
in
cmpsb
mov
mov
mov
cmp
pop
iret
mov
xchg
mov
adc
xchg
inc
pop
and
xchg
adcl
adc
ss
push
mov
ret
adc
insb
fidivrs
xchg
mov
push
fisubs
pop
sarl
mov
shll
mov
mov
dec
clc
aam
dec
nop
or
inc
adc
daa
and
dec
aas
leave
pop
pusha
inc
pop
shrb
and
mov
lea
lods
pop
sbb
xchg
or
sbb
pop
hlt
sahf
ret
mov
mov
into
mov
test
xchg
fs
mov
mov
dec
add
xor
dec
mov
xorl
jecxz
mov
add
sbbl
xchg
mov
push
rorl
or
pusha
or
adc
arpl
add
jbe
sub
bound
loope
adc
out
mov
sbb
push
xchg
inc
repnz
out
lods
roll
sbb
jb
clc
mov
jg
cld
data16
jmp
xor
push
cmp
and
imul
xor
cld
xor
imul
or
and
push
sub
adc
cmp
jne
sub
lods
loope
in
loope
hlt
cmpsl
test
out
dec
lock
mov
sti
xchg
sub
push
mov
inc
add
outsl
cmp
shll
cmp
scas
stc
jbe
sub
lods
mov
fidivs
sbb
xchg
push
push
cmpsl
int
xchg
xor
in
and
jg
mov
jb
clc
mov
in
lcall
jbe
mov
mov
xor
out
call
or
mov
rorl
add
adc
push
xchg
adc
movsb
addb
fs
negl
out
xchg
jmp
xchg
cmp
jne
sub
xchg
outsb
dec
fists
mov
outsb
inc
fwait
and
pop
push
call
mov
sbb
test
imul
ja
out
fmul
jb
scas
push
push
jle
in
fwait
sbb
adc
dec
aas
ljmp
in
cmp
jmp
sub
cld
pusha
add
dec
jge
dec
shll
dec
xchg
cmp
lods
mov
daa
mov
pop
pop
jb
mov
mov
fucompp
xchg
cmp
iret
fwait
xor
rcl
push
hlt
fsubs
negl
jnp
sub
dec
adcl
fwait
adc
fs
fwait
fs
or
out
dec
fmuls
xchg
mov
aad
cmp
add
xorb
or
arpl
das
dec
cmova
test
inc
cmp
test
ja
mov
adc
jl
push
sti
gs
xor
mov
insl
jle
sbb
pop
jno
push
pop
sub
pop
dec
sub
sahf
mov
add
out
xchg
sbb
fnstsw
or
xor
add
rolb
xchg
pop
jp
sbb
jge
dec
xchg
and
jg
xchg
pop
insl
jo
pop
insl
sahf
dec
outsl
jnp
out
add
es
movsb
dec
xchg
mov
fs
xor
or
mov
ds
xor
cmpl
mov
or
cmpl
dec
inc
xor
dec
pop
sarb
loop
pop
add
dec
cmpsb
dec
sahf
iret
pop
popf
iret
int3
cmp
fistl
test
test
sbb
cltd
js
sbb
lock
out
inc
mul
adc
mov
lcall
mov
xchg
jmp
sbb
mov
call
sub
ds
xchg
loop
pop
xor
pop
sti
sub
imul
ljmp
popa
cmp
pop
sbb
cmc
dec
ffreep
xchg
int3
fs
fdivrs
nop
and
xchg
or
fistpll
xor
sbb
jb
cmpsb
ror
icebp
mov
fstps
ror
pop
xor
lods
ret
push
mov
add
cmc
mov
pushl
push
lea
cld
jmp
pop
cmpl
hlt
mov
mov
cmp
sarl
test
test
mov
fidivrs
mov
jnp
fwait
in
test
jmp
sarl
dec
and
and
push
jg
cs
or
or
sub
mov
cmp
cmovnp
adc
div
loopne
jns
xchg
or
sahf
jnp
jb
mov
shrb
sbb
arpl
lahf
test
inc
test
jmp
std
inc
repz
adc
stos
add
or
and
push
pushf
adc
or
dec
xchg
adc
or
add
imul
lcall
ds
arpl
adc
pushf
cwtl
jno
mov
pop
outsl
cmp
sbb
or
or
adc
aaa
stos
mov
xor
mov
int
int3
in
cwtl
cmpsl
nop
adc
mov
xor
stos
idivb
lea
mov
pop
stc
fsubl
pop
inc
iret
xchg
dec
cli
mov
inc
mov
int
mov
pop
pop
dec
dec
mov
push
jp
inc
sub
inc
scas
sbb
mov
sub
push
fisubs
stos
sbb
cmp
sbb
sub
push
loopne
jmp
outsl
test
lods
ret
push
fldcw
aaa
iret
and
pop
mov
jmp
mov
adcb
lret
mov
mov
int3
or
outsl
fwait
cpuid
mov
int3
add
clc
cli
dec
and
shll
mov
push
push
hlt
push
cli
les
lods
cmp
mov
mov
mov
mov
mov
mov
adc
aam
js
push
es
cli
aam
inc
mov
out
es
pop
clc
and
sub
push
xchg
mov
sbb
gs
ljmp
inc
cmpsl
cmp
andl
jbe
scas
mov
cs
stos
jns
pop
cltd
adc
cmp
fisubl
fs
push
stc
idivb
gs
int
popf
cmp
inc
nop
or
out
stos
xchg
sahf
in
and
xchg
pop
out
sbb
jb
sti
push
jnp
jbe
cmp
cmp
ja
jle
dec
ljmp
mov
adc
jbe
dec
mov
adc
lds
jl
mov
lcall
cmp
pop
xor
mov
push
inc
jae
jb
shrl
dec
imul
adc
sahf
adc
pop
cmp
ret
dec
dec
xor
js
test
add
or
ficomps
daa
cmp
daa
out
daa
je
xor
mov
add
rcl
imul
rolb
insb
sarl
cmpsl
lea
leave
clc
and
movsl
xchg
adcl
lock
adc
mov
mov
pusha
mov
xor
sub
popf
roll
and
or
add
inc
mov
js
xchg
dec
push
out
and
mov
mov
les
cmp
lcall
mov
sbb
outsb
lock
loop
loopne
fisttpl
mov
sahf
sbb
lcall
cmpl
stc
adc
sub
jns
movsl
arpl
cwtl
dec
xchg
xchg
mov
dec
xchg
or
cmp
push
adc
stos
mov
fistl
stc
test
xchg
jne
addw
outsl
xchg
ja
imul
push
cmp
out
les
repnz
pop
lcall
add
movsb
push
pop
or
stc
or
inc
cmc
imul
sbb
jno
aaa
out
jns
mov
push
lea
xor
inc
mov
or
sub
add
sub
lret
adc
push
insl
test
jle
cmp
push
stos
int3
sahf
scas
mov
xor
enter
loop
test
adc
cld
pop
iret
leave
repz
out
add
xchg
loope
fstl
clc
inc
push
and
mov
lock
sbb
mov
mulb
jbe
mov
xchg
cmp
mov
add
popa
imul
push
push
mov
out
mov
inc
dec
mov
stos
inc
jo
mov
dec
and
out
lea
dec
pop
mov
test
enter
xor
rorb
sahf
mov
xchg
dec
inc
leave
cmp
mov
pop
push
jbe
scas
sub
lret
movsl
rorb
je
les
mov
js
outsb
rorl
das
push
mov
sbb
out
sbb
scas
dec
outsb
xor
xchg
adc
lcall
mov
popf
test
rolb
ds
not
add
xchg
lahf
and
repnz
ret
repnz
imul
mov
xchg
jp
dec
lock
xor
cwtl
dec
arpl
dec
sbbl
sub
or
cmp
fucomp
and
jp
test
dec
add
push
in
sbb
pop
inc
loopne
outsb
xlat
scas
pop
jbe
cltd
lcall
outsb
cmp
mov
and
jnp
arpl
lcall
jmp
ret
loop
xchg
nop
add
mov
popa
outsl
and
xchg
jb
dec
inc
dec
mov
scas
sub
add
xchg
arpl
and
xor
mov
push
lds
idivb
out
gs
sub
xor
fiaddl
testb
cltd
daa
hlt
loopne
sub
add
xorb
inc
iret
dec
ret
add
sbb
test
jle
andb
insb
repnz
sub
es
push
sarb
subb
pushf
add
repz
inc
fstpl
movl
fcmovb
leave
std
daa
icebp
aam
das
push
aaa
les
dec
aad
movsb
repz
dec
push
sbb
rcl
inc
pop
rorl
xlat
imul
pop
ds
add
mov
repz
mov
xchg
adc
mov
sub
into
in
mov
dec
mov
cs
pushf
and
in
test
and
xchg
pusha
sbb
fistpl
frstor
movb
rcl
btc
cld
and
js
test
push
mov
inc
div
repnz
inc
adc
jg
dec
sbb
insb
cmpsl
mov
xorb
jns
mov
repnz
out
push
jecxz
cmp
dec
js
jmp
xchg
insl
ja
push
mov
loope
push
dec
sbb
xchg
sub
pop
addr16
fisubs
pop
or
push
xchg
es
mov
add
mov
push
loop
imul
xorb
add
out
filds
mov
dec
xor
bound
int3
into
mov
push
cli
mov
mov
mov
mov
dec
std
mov
pop
leave
repz
leave
lret
lret
cmpsb
cld
pop
shrl
mov
mov
dec
aad
jg
dec
adc
add
mov
ja
xor
pop
in
xor
outsb
jle
f2xm1
lret
and
jp
scas
mov
int
out
stos
stos
jae
jp
imul
leave
xchg
jl
xchg
fistpl
sub
je
insl
rol
xor
addr16
fcmovne
cmp
mov
pusha
mov
cwtl
push
mov
clc
and
mov
cmpsl
in
fmul
mov
pop
fwait
pop
repz
daa
mov
ljmp
adc
pop
sbb
cmc
es
mov
imul
aam
add
in
xchg
mov
sbb
ror
out
and
and
fistps
fldenv
cld
jecxz
shrb
bound
push
or
inc
in
push
fs
hlt
mov
outsb
mov
add
repnz
or
inc
pop
cmp
jae
or
and
scas
addr16
push
stc
int3
addl
movsl
test
add
jns
pushf
sub
iret
xor
test
mov
cld
pop
mov
mov
subb
mov
sbb
loope,pn
sub
jl
ss
and
emms
movsb
jns
cld
out
rcll
rcrl
in
stc
fbstp
xor
jge
adc
stos
mov
sub
mov
stos
aam
jp
pop
incb
popa
add
mov
mov
arpl
leave
dec
je
outsl
and
mov
cltd
dec
movsb
sub
push
mov
stos
xchg
sub
orb
aaa
das
es
je
lcall
andb
aam
fsubr
sbb
mov
jno
xor
inc
mov
ja
dec
stos
mov
jo
pop
ds
and
mov
push
lea
sub
inc
sbb
cltd
roll
xchg
jns
imulb
or
aam
testb
je
mov
add
stos
xchg
es
negl
lret
cltd
xor
mov
aam
in
inc
arpl
mov
aam
call
pop
movb
mov
ja
mov
sbb
insl
aaa
aaa
je
lret
call
push
insl
lea
outsb
clc
jle
loopne
in
pop
call
push
mov
xchg
mov
enter
mov
push
rcrl
cmp
lea
pop
sub
xchg
out
and
fadd
dec
dec
rcrb
mov
lcall
push
adc
sbb
lahf
mov
mov
jbe
jmp
jne
sub
pop
mov
xlat
mov
mov
gs
scas
stos
jnp
mov
push
xlat
push
jnp
imul
adc
inc
jne
mov
push
lret
mov
xchg
mov
pushf
loope
mov
inc
nop
movsb
add
rolb
bound
enter
imul
cmp
cmp
or
popf
iret
mov
loope
fbld
dec
lcall
lds
loopne
shll
push
stos
shll
xchg
jge
sbb
sbb
rcll
sbb
cltd
pop
mov
pop
dec
xchg
pushl
xchg
movsl
xchg
inc
shrl
fstps
cltd
jle
inc
mov
shll
adc
lret
lret
and
adcb
outsl
mov
fisubrs
pop
and
push
cmp
and
mov
loopne
add
pop
fs
sbb
popl
fimuls
movsl
into
cmp
dec
dec
sbb
and
pop
xchg
push
stc
xchg
movsb
rcrb
lds
lock
xchg
dec
sub
cmpsb
or
jmp
lods
imul
xor
aad
pop
add
leave
outsl
sub
mov
ror
mov
xor
call
rcrl
fwait
mov
out
mov
fistps
test
add
jb
ficoms
pop
sbb
cmpsb
sub
out
xchg
xor
mov
jb
or
push
loop
or
int3
ja
shr
or
jmp
stos
sahf
sub
imul
mov
je
cmp
push
hlt
push
jb
fimull
out
push
adc
fs
mov
lods
in
dec
add
xchg
dec
hlt
pop
sbb
outsl
movsl
test
cmpsb
xchg
push
je
cmp
icebp
and
inc
jle
pop
push
mov
sub
xchg
ret
xor
loope
cli
lods
xchg
add
lahf
or
inc
hlt
pop
lods
insb
cwtl
dec
ret
mov
gs
lds
data16
push
frstor
pop
cmp
cld
mov
test
add
mov
jmp
punpckldq
pop
inc
and
mov
and
sbb
or
lahf
jl
mov
cs
push
or
cmp
push
mov
je
or
jecxz
outsl
movsl
fs
xor
dec
das
mov
cltd
loope
aad
jae
push
imul
scas
popa
pop
mov
movsl
inc
inc
jp
sub
mov
or
mov
xor
pop
clc
jae
ljmp
jl
xor
dec
sub
cmpsb
push
rcrb
leave
insb
pop
pusha
in
scas
sub
les
sti
dec
xor
adc
mov
loopne
shlb
cmp
insb
fistpll
repnz
dec
rcrb
pop
ljmp
jbe
imul
fstpl
push
cmpl
scas
lcall
and
mov
sbb
jmp
inc
lret
popa
xchg
lret
in
fwait
out
lds
mov
inc
or
pop
jno
push
aam
mov
adc
pusha
xchg
andl
int3
push
jl
inc
pushf
xchg
aad
xor
add
dec
dec
dec
pusha
push
inc
nop
mov
shll
sbb
in
ss
sub
xchg
push
scas
and
push
pusha
jle
mull
dec
sub
sub
jns
cld
mov
mov
push
xchg
mov
insl
clc
sarb
mov
dec
insl
push
rcrb
jp
gs
hlt
mov
shrl
scas
dec
sbb
leave
enter
xor
cwtl
jnp
pop
add
sbb
shl
jl
in
loopne
mov
mov
bnd
aad
push
insb
mov
in
mov
out
dec
adc
mov
adc
je
dec
dec
aad
or
aam
cwtl
fistps
std
mov
aad
pop
ret
je
cmp
mov
dec
sbb
adc
push
movsb
outsb
repz
cmp
or
adc
fbld
push
mov
pop
xchg
sub
fcmovbe
cmc
es
mov
adc
bound
lods
cmp
rcrb
inc
inc
arpl
add
js
mov
test
fwait
mov
clc
xchg
mov
mov
dec
mov
dec
xlat
mov
jecxz
sub
testl
mov
inc
sub
ds
xlat
mov
add
mov
push
loope
jno
push
iret
leave
scas
sahf
push
fnsave
mov
mov
inc
sub
gs
js
nop
clc
pushf
out
das
cmpsb
repnz
push
aaa
scas
pop
mov
int
jge
repz
and
rcr
sub
repz
sbb
cmpsb
push
inc
int3
loopne
outsl
xchg
lcall
xchg
or
sbb
or
or
div
pop
add
decl
shrb
aad
mov
push
mov
cmp
pop
dec
dec
push
lods
jae
imul
xchg
mov
adc
popf
out
rorb
jns
jge
pop
cltd
enter
dec
movsl
enter
push
dec
sahf
push
dec
sbb
bound
adc
subb
dec
jns
dec
movsl
mov
imul
fisttps
xor
mov
mov
test
mov
add
mov
test
dec
ret
xor
enter
adc
stos
pop
pop
stos
push
add
jne
add
repnz
cmp
mov
imul
lret
inc
inc
mov
pop
sub
js
nop
lahf
mov
inc
lcall
jne
sbb
lahf
scas
mov
mov
xor
popa
dec
xor
xor
sub
call
test
jo
sti
out
bound
fs
addb
loop
clc
fisubl
stos
lahf
xchg
jmp
idivl
mov
add
aam
adc
mov
and
push
out
ja
movsl
or
rorb
stos
sub
pop
scas
test
mov
dec
sarb
mov
ret
mov
add
xlat
movsl
aad
repnz
pop
mov
rorl
push
push
cmp
leave
mov
stos
lds
cli
lret
lcall
xchg
aas
out
test
or
js
cmp
fistpll
sub
and
cmp
mov
xchg
pop
mov
mov
jne
pop
call
pop
int
fwait
arpl
fiaddl
outsl
in
adc
out
jl
push
das
pop
fisubl
out
push
mov
cmp
addr16
test
inc
shll
cmpsb
adc
pushf
movsl
std
scas
ret
cmp
int3
mov
vandps
leave
arpl
insb
mov
and
pop
out
inc
cltd
sub
sub
mov
jge
das
clc
loope,pt
shrb
or
mov
adc
pop
and
imul
cltd
push
enter
rclb
in
fcoml
xchg
testb
aam
fucomp
sub
fildll
cltd
sti
mulb
adc
or
repz
gs
inc
out
leave
mov
xchg
add
jbe
xor
xor
pop
aad
mov
mov
shll
ds
xlat
sar
sub
sub
movsb
fisttps
scas
ret
or
repz
xchg
adc
mov
jnp
add
dec
cmc
pop
pop
pop
rcll
mov
pop
push
lds
incb
adc
xchg
scas
sub
insl
adc
mov
mov
sub
cld
dec
or
stc
cmpsl
cmp
movb
xchg
int
adc
cwtl
lret
ret
mov
pop
xor
cmp
sub
aaa
inc
inc
popa
add
shr
sub
jbe
rcl
pop
mov
loope
lock
xchg
hlt
xor
jge
push
dec
and
inc
cmp
mov
dec
add
in
xchg
shlb
or
push
dec
inc
ret
cmp
stos
roll
cwtl
push
push
cli
mov
out
ja
xchg
fimuls
add
pop
xchg
mov
daa
mov
cli
pop
cmp
xor
cmp
xlat
adc
adc
fildl
hlt
aam
xchg
dec
mov
xor
add
xchg
xchg
push
mov
pop
sub
jp
xor
sub
in
sahf
dec
dec
imul
adc
xor
test
icebp
push
sti
jecxz
icebp
icebp
adc
enter
stc
or
push
stos
setge
sub
fnstcw
inc
popa
lret
scas
mov
or
fadds
and
xor
adc
jp
jl
inc
popa
mov
call
jns
rcl
push
lock
aam
adc
lahf
inc
icebp
mov
lahf
cmp
mov
scas
mov
stc
xchg
lret
xor
shl
insl
lock
call
mov
dec
clc
mov
xchg
pop
ja
mov
ds
jnp
fsubrl
xchg
cwtl
and
mov
pop
pop
sub
or
jl
sti
cmpsb
mov
out
in
mov
popf
ljmp
add
bound
out
mov
xchg
or
xor
rcrl
or
sub
cld
outsl
popf
rcr
arpl
clc
sub
bound
enter
subl
mov
xchg
and
inc
mov
and
je
stos
xchg
into
cwtl
fs
jecxz
call
jns
pop
cmp
fmull
sbb
sbb
inc
insb
pop
leave
jnp
or
sbb
xchg
jno
mov
inc
mov
or
dec
cmpsl
adc
mov
outsb
pusha
rcll
xor
outsb
clc
jmp
jbe
lcall
push
ljmp
lret
sbb
jecxz
ljmp
mov
lds
ss
mov
sbb
insl
data16
jb
add
enter
inc
inc
addr16
stc
add
cmpb
lods
cmp
nop
lcall
adc
mov
mov
into
xor
fstpt
xchg
or
jne
arpl
in
push
orb
adc
in
ret
rolb
out
call
mov
popa
test
xchg
scas
mov
sub
jp
rcrb
data16
pop
xchg
dec
xor
mov
dec
adc
dec
mov
in
loope
push
dec
pop
jmp
jl
jno
add
ljmp
mov
or
fwait
aad
mov
inc
in
mov
movsb
je
jmp
popf
sahf
dec
andl
adc
fdivrl
jge
mov
imul
imul
in
sbbl
sbb
repz
nop
dec
jmp
mov
jge
test
clc
fidivs
scas
pop
mov
adc
sub
sub
les
lods
lret
sahf
ss
push
lds
dec
pop
adc
push
repnz
add
mov
ret
jl
sub
clc
push
mov
ds
lods
subl
adc
xor
lods
mov
jp
sbb
lcall
pusha
sbb
dec
loopne
lods
fdiv
pop
lock
mov
mov
int3
and
mov
adc
and
stos
add
enter
in
out
ja
push
dec
in
imul
xchg
fwait
ss
movsl
xchg
push
adc
in
cmpsl
repnz
fwait
mov
test
cs
scas
pop
sub
lea
idivl
sbb
push
pop
fcomp
jl
sub
fwait
jne
xor
inc
rcrl
test
pop
dec
cmp
negl
loope
sub
or
sbb
adc
xchg
jmp
push
bound
jmp
dec
hlt
outsl
enter
xchg
xor
mov
jp
mov
rorb
xlat
cmp
cmp
arpl
imul
addr16
sub
movsl
ret
clc
sbb
lds
repz
popw
push
fisubrl
or
sti
dec
jne
lock
xor
cld
mov
int3
cmp
les
outsb
xor
inc
mov
mov
dec
push
xor
subb
xchg
insb
daa
jae
out
insb
inc
jns
push
inc
push
add
jae
movb
adc
fidivrs
pop
cmp
dec
mov
sbb
xchg
push
inc
mov
xchg
imul
rolb
insl
push
iret
add
cli
dec
mov
icebp
mov
std
fcomi
les
mov
inc
add
cmp
in
js
cld
cmpsl
push
and
test
fwait
into
aam
mov
add
insl
mov
mov
loop
mov
popf
sbb
lahf
push
imul
fimuls
clc
hlt
inc
ds
mov
push
inc
sahf
ds
pop
aam
icebp
ljmp
xor
lcall
fwait
add
imul
inc
push
stos
aad
dec
mov
mov
pop
cmpsb
out
and
xchg
fs
mov
negl
fwait
adc
addr16
push
mov
jle
movsb
xchg
sub
and
mov
dec
and
stos
inc
pop
das
add
inc
lods
push
dec
popl
ljmp
clc
mov
mov
push
lds
mov
push
add
orb
pop
xchg
mov
ja
sbbl
xor
cwtl
cmp
jge
pop
inc
xchg
xor
inc
iret
sti
or
sbb
pop
in
inc
pop
pop
daa
xchg
or
fs
mov
inc
int3
stc
adc
jecxz
mov
mov
outsb
add
test
mov
jecxz
bound
jnp
out
out
inc
xor
and
mov
dec
int
dec
or
pop
jno
mov
sub
mov
mov
sbb
mov
pop
popf
loop,pn
cwtl
das
mov
lock
aam
pop
lods
inc
lock
jnp
cmpsb
sbb
pushf
dec
sbb
and
aad
xchg
inc
adc
dec
mov
jae
xor
aam
stos
leave
lahf
cmp
mov
cmpsl
scas
pushf
outsb
dec
add
adc
cli
adc
jno
mov
repnz
adc
insl
mov
fcomps
dec
mov
add
mov
xor
nopl
push
mov
adc
repz
nop
push
sub
cmp
push
mov
adc
sbb
jne
and
ret
stos
insb
mov
xor
cmpsl
mov
xchg
dec
mov
lcall
vcvtsi2ssl
aam
outsl
jl
adc
jp
flds
psrlq
leave
int
xor
xor
push
cmp
mov
xchg
inc
pop
mov
cmp
fnstcw
loopne
xchg
xchg
lds
repz
in
mov
xor
ret
in
jmp
xchg
es
jae
aam
push
inc
clc
xchg
xchg
jecxz
jge
inc
mov
add
xchg
inc
dec
mov
xor
push
add
or
jbe
mov
xchg
mov
call
bound
mov
mov
mov
add
cmpsb
pop
jo
dec
popf
push
les
and
mov
hlt
inc
jg
rcrb
enter
mov
pop
icebp
fs
mov
inc
lods
adc
mov
sbb
fcoml
pop
dec
sarb
stos
xor
push
dec
mov
mov
les
jg
test
loop
xor
xchg
xor
mov
test
cmc
test
pop
dec
divb
or
xor
shl
test
jp
fidivrl
pop
popf
leave
shll
popf
or
pop
aad
loopne
mov
jecxz
xchg
push
cmp
lret
enter
pop
xchg
rol
out
js
push
mov
sub
or
add
gs
cmp
pushf
aam
clc
mov
or
and
or
imul
scas
repnz
ret
into
ret
cs
push
inc
sbb
pop
fmuls
mov
and
mov
cli
mov
lret
jb
roll
jno
xchg
int
dec
mov
xor
adc
imul
pop
add
test
in
repnz
wbinvd
into
inc
aas
int3
insb
xor
imul
cmp
push
adc
rcrb
xor
add
ja
stos
fsubp
mov
add
sbb
subb
mov
sbb
lahf
aas
outsl
fldt
ljmp
xor
inc
popa
fldt
std
movsl
ss
call
lods
mov
cmp
sbb
pop
cmp
icebp
lahf
imul
xchg
addr16
xchg
fsubr
adc
insl
idiv
push
cmpsl
mov
mov
ja
aad
je
xchg
sub
pop
add
jp
xor
and
lret
dec
ss
or
inc
ret
and
stos
inc
and
daa
xor
aas
mov
lea
dec
clc
inc
push
ss
dec
int
in
jo
xchg
dec
lret
jge
xor
push
rolb
push
and
pop
ss
inc
cmp
jge
add
dec
jge
insb
dec
push
push
lcall
adc
sbb
cli
imul
jno
lods
push
xor
mov
std
jnp
rcrl
ret
pop
addb
inc
loop
push
insl
arpl
dec
adcl
popa
sbb
push
push
les
or
call
test
std
ret
xor
imul
mov
aas
mov
lahf
xchg
mov
cld
push
aaa
loopne
mov
dec
sarb
mov
cli
push
pop
mov
out
in
fwait
xlat
jb
mov
sub
outsb
ljmp
mov
test
dec
scas
cmp
into
mov
and
inc
jne
scas
rcrl
pop
shrl
bound
push
shrl
jb
mov
leave
push
xchg
jae
fisubl
insl
mov
test
push
shlb
pop
pushf
fmuls
movsb
dec
sahf
push
push
sbb
outsb
or
cmp
jmp
fwait
bound
xchg
test
imul
cmp
ss
mov
mov
dec
sub
jae
cltd
mov
das
lds
out
push
or
test
push
adc
in
sub
lcall
lds
lret
ja
mov
insb
fld
cmp
dec
cwtl
sub
icebp
add
shl
push
ds
popf
fsubrp
sahf
sti
mov
dec
lret
and
jno
cmp
pop
add
sbb
adc
and
push
mov
push
xchg
jmp
lcall
mov
jb
and
clc
adc
cltd
movsb
movsb
jnp
clc
lret
pop
daa
jmp
imul
mov
ljmp
xor
mov
adc
push
dec
int3
push
mov
stos
popf
mov
icebp
fwait
sti
aam
push
mov
xchg
es
loop
inc
je
jb
addl
pop
ja
dec
mov
and
lods
out
test
push
notb
fdivs
sub
dec
xor
aaa
inc
jle
scas
sbb
call
dec
or
test
fidivrl
push
out
jnp
or
pushf
sbb
stos
sbb
dec
xchg
shlb
fstps
cs
add
lods
sub
mov
sbb
sbb
push
aas
mov
jge
fbld
adc
scas
push
sub
xor
jb
dec
mov
ja
int3
scas
les
lea
jne
adc
inc
das
pop
pop
dec
jb
mov
cmp
test
mov
mov
xor
dec
dec
aad
mov
in
sbbl
imulb
mov
ljmp
scas
push
popf
divb
push
mov
in
mov
dec
scas
insl
lods
jmp
jno
lahf
mov
das
mov
sbb
mov
mov
lea
xchg
and
pop
cmp
mov
imul
lret
sbb
aaa
fisubl
jo
mov
sahf
lcall
call
shll
cmp
mov
dec
cltd
subb
pop
jns
xchg
out
dec
outsb
lods
cltd
sbb
xor
loope
mov
fwait
in
cmp
mull
push
stos
sbb
pop
mov
repz
lret
je
loop
pop
xchg
imul
mov
and
outsb
xchg
roll
sbb
jb
jne
lock
sarb
sub
sub
js
fsubs
nopl
and
pop
and
shlb
push
outsl
adc
int
mov
jbe
lock
fldpi
repz
mov
shll
pop
sub
mov
or
cmpl
xor
div
idiv
mov
ds
jecxz
leave
add
clc
loopne
sbb
and
mov
out
sub
dec
xor
pop
cmp
cltd
cmp
jnp
rol
test
popf
adc
enter
js
jmp
out
add
xchg
sbbb
lret
cs
ret
out
test
mov
outsb
sub
or
mov
mov
std
sahf
mov
jle
sbb
jmp
sbb
sbb
cld
int3
incb
jae
notl
or
aas
push
ret
pop
or
fstps
jb
aad
sbb
mov
cs
idivl
mov
cs
mov
pop
push
pop
lods
js
mov
inc
push
adc
cltd
out
fmuls
imul
mov
loop
das
lahf
adc
xlat
fucomi
das
les
cmpsb
add
into
mov
call
arpl
push
test
cmp
push
push
insb
xchg
andb
ss
insb
aas
ficoms
incb
jmp
outsl
adc
xor
int3
xchg
test
add
xchg
cmc
sbb
dec
jne
adc
xor
jmp
and
leave
jmp
push
push
xlat
push
push
mov
jecxz
mov
decw
rcrl
cmp
adc
mov
das
push
sub
jge
mov
cmp
adc
dec
and
loope
scas
xlat
dec
or
adc
fistpl
popa
pop
dec
iret
int
cmp
cmp
adc
stos
into
xchg
pop
test
outsl
inc
adc
dec
dec
sarl
dec
ds
add
dec
mov
in
int3
push
or
lds
and
sti
out
bound
or
mov
nopl
xchg
mov
std
sarb
test
cmpl
inc
mov
jae
fdivrl
icebp
adc
andb
mov
add
dec
stos
push
fimull
adc
scas
jge
lods
shlb
shl
cld
in
loopne
int
fs
mov
push
in
aaa
push
adc
mov
dec
jmp
rcr
out
in
cli
out
and
loop
and
sbb
sbb
test
std
add
xor
rorb
rclb
cmp
cltd
cwtl
outsb
iret
ja
or
push
cmp
sahf
adc
test
and
dec
loope
jae
push
pop
bound
ljmp
ret
adc
fadds
mov
jbe
test
mov
mov
daa
adcl
or
lahf
pushf
push
add
ss
scas
add
icebp
int3
cmp
or
mov
out
mov
sti
mov
pop
cmp
movb
inc
scas
outsl
mov
test
or
mov
mov
filds
sbb
mov
adc
sarb
mov
int3
es
gs
and
aad
or
sub
add
or
mov
lret
shll
cmp
dec
ds
js
ret
icebp
xchg
pop
dec
sbb
lcall
jp
push
xchg
pop
cwtl
adc
nop
test
sub
xchg
mov
jnp
fbld
enter
mov
insb
inc
fsubrs
and
outsl
adc
and
jp
clc
xlat
jno
add
mov
mov
rorl
pop
fsubrs
xchg
cmpsb
cmpsb
int3
sub
shlb
and
adcl
stos
hlt
into
test
lcall
jnp
lods
sub
shr
mov
loopne
or
lret
out
pusha
int
in
movsb
cmpsl
js
xor
cltd
out
jl
test
int
adc
fcomi
icebp
in
sub
lock
ss
xor
dec
repnz
frstor
lock
test
je
nop
inc
popa
or
inc
into
insl
cltd
fstl
ljmp
imul
mov
add
or
cmpsl
rcrl
hlt
jb
push
mov
sbb
mov
dec
mov
ss
std
pop
inc
dec
addb
xor
gs
mov
rclb
call
fidivl
cmp
psubusb
dec
std
aad
fmuls
mov
dec
pop
pop
rcl
test
enter
test
mov
nop
jge
sbb
repnz
outsl
lock
push
js
cmp
xchg
mov
fistpl
stos
sbb
test
shl
cltd
mov
adcb
in
dec
push
jbe
mov
pop
sbb
jns
hlt
movsl
clc
adc
jae
lcall
cmp
es
push
pop
adc
gs
mov
pop
mov
sbb
int
push
xchg
ret
dec
sub
mov
ja
mov
fists
fmuls
adc
mov
xchg
outsb
fisttpll
lods
sbb
and
aaa
adc
add
pop
out
pop
jp
push
stc
aad
mov
dec
mov
imul
mov
pop
movsl
cmpb
fwait
push
inc
lret
sbbb
les
mov
nop
ja
adc
mov
push
mov
into
push
or
cltd
jmp
dec
cmpsl
jnp
sbb
mov
jmp
sbb
and
mov
jno
fmul
lret
push
lret
sub
out
and
bound
into
or
rclb
inc
adc
xchg
mov
jo
loope
jbe
sbb
jno
xchg
outsb
sbb
cmc
aad
pop
add
xchg
popf
sub
mov
ss
xor
mov
xor
cltd
cltd
xlat
jae
test
int3
cmp
and
xchg
sub
push
cmpsl
rcrb
sti
das
lret
pop
fldln2
jno
push
shll
mov
jg
mov
sbb
out
std
mov
cmc
push
mov
icebp
imul
dec
or
sbb
and
call
xchg
jo
jbe
cs
xor
mov
jmp
xchg
pop
mov
adc
cmp
flds
or
inc
daa
enter
imul
insb
adcl
sub
push
les
ds
in
push
imul
int3
jl
xchg
xchg
mov
std
stc
inc
push
fsubrl
mov
push
test
xchg
xchg
por
cli
mov
ret
sahf
xchg
popf
fsubs
sub
dec
mov
push
gs
outsb
call
lods
mov
in
pop
loope
pop
mov
add
jb
out
leave
ja
les
cmp
lcall
dec
loopne
les
dec
cmp
nop
mov
div
mov
in
cmpl
daa
test
jmp
stos
pop
ds
jno
pop
lret
inc
mov
in
mov
scas
xchg
flds
sbb
outsl
jbe
xorl
insb
imul
cmp
push
icebp
add
pop
mov
push
mov
shr
jne
xor
sar
icebp
std
adc
sbb
loop
loope
sbb
mov
cmp
pushf
js
sti
pop
lds
xchg
out
mov
jl
test
imul
fnstcw
sidtl
jne
or
repz
mov
scas
cmpsl
cli
xor
and
jl
push
and
fcomp
cmp
sub
cli
ret
add
js
xor
xchg
xor
fwait
push
dec
jno
mov
xchg
cmp
push
sbb
aad
pop
xchg
cli
cld
int
ja
add
out
and
cmp
mov
fdivs
dec
jnp
stos
mov
lea
push
mov
imul
insl
mov
test
shll
loope
iret
push
idiv
xor
sbb
je
mov
push
mov
adc
xor
jg
cmc
aaa
dec
xchg
xor
sbb
data16
pusha
imulb
sbb
xchg
lret
bnd
jmp
push
jge
shl
jns
cmp
arpl
mov
jmp
gs
dec
idivb
out
dec
mov
sti
jbe
cs
addr16
sub
rcll
fwait
int3
and
push
leave
inc
fcomps
mov
sub
lods
mov
jg,pt
sub
mov
insb
sbb
sub
and
roll
stos
inc
pop
fcomps
shll
sub
fidivrs
sbbl
sarb
lcall
cmpsb
scas
ret
ret
outsl
push
jge
jns
cmp
es
stos
incl
sub
pop
mov
pop
test
or
fs
lds
jmp
push
inc
daa
jbe
outsl
mov
mov
lds
dec
pusha
cmp
shlb
addl
out
xor
xor
lods
lods
xchg
popf
test
pop
iret
es
adc
leave
and
ds
xchg
add
ds
or
jecxz
cmc
leave
cwtl
clc
movsb
sarb
sbb
mov
leave
jmp
mov
pusha
call
ds
dec
dec
filds
push
fs
mov
movsb
sub
cmpsl
sub
test
out
inc
fdivp
in
dec
cmpsb
loope
pop
sub
xor
dec
push
mov
rcrl
cmp
or
add
xchg
sbb
or
faddl
into
insl
insl
imul
hlt
sti
push
loop
push
mov
aad
jae
xchg
xchg
and
shlb
adc
push
or
cmpl
aaa
mov
pop
sti
jg
adc
test
or
bound
lahf
aaa
repnz
aaa
sbb
mov
cmc
ret
xchg
dec
pop
rcr
addr16
aam
cmp
lods
mov
clc
shr
scas
jecxz
dec
outsb
pushf
aas
hlt
xor
incb
mov
into
sarl
adc
int3
int3
jecxz
sub
daa
pop
cmpsb
rclb
sub
sahf
pop
or
daa
into
ss
std
dec
adc
mov
test
lret
ret
icebp
out
add
sbbl
cltd
push
mov
mov
call
mov
cmpsl
fs
addr16
imul
lahf
or
rcrl
push
jmp
data16
movsl
daa
cmpsb
fwait
xchg
enter
inc
adc
rcl
mov
lock
scas
ds
push
adc
push
rclb
stos
out
xor
jg
jbe
add
in
ret
dec
lahf
out
and
mov
cwtl
xchg
push
push
mov
hlt
sbb
lea
mov
push
dec
repnz
pop
aad
pop
aam
dec
push
cmp
xor
mov
mov
mov
and
add
mov
mov
bound
cmpsb
enter
add
inc
jno
or
sub
roll
pop
cmp
cs
addr16
adc
stc
inc
and
bound
scas
cmpsl
or
jb
pop
adc
mov
mov
cmc
fwait
icebp
and
jmp
int3
sbb
scas
adc
ret
nop
and
xchg
jg
push
xchg
pop
mov
or
jmp
repnz
add
cmp
mov
ja
cli
sti
dec
fildl
fimuls
xor
fwait
hlt
scas
fistl
int3
scas
in
fadd
jle
cmpb
aam
pop
lret
sbb
fst
or
dec
shrb
lea
dec
cmp
push
dec
lcall
jo
add
sbb
std
mov
jecxz
xorb
je
lcall
mov
push
sahf
sbb
in
repnz
sub
call
add
test
neg
push
insb
inc
aad
ror
lcall
cmc
push
dec
push
fldcw
mov
js
out
push
jg
sub
push
popa
sub
xor
xchg
cmpl
in
repnz
inc
outsb
xchg
mov
jno
jg
ja
add
mov
ds
pop
and
xchg
movsb
iret
mov
aas
enter
push
cmpsl
scas
iret
lret
loope
lahf
xchg
or
inc
mov
clc
bound
and
push
aaa
ficoml
or
fimuls
push
jl
mov
pushf
test
mov
mov
call
mov
orl
rcrb
or
and
cmp
and
inc
call
pop
outsl
cmpsl
lods
scas
pop
sahf
adc
cmp
orb
insb
js
inc
movsl
inc
cmp
jle
shll
or
negl
jmp
push
adc
ret
sarb
or
stos
mov
cmp
in
test
rdpmc
add
xor
add
test
xchg
sbb
xor
cmc
fidivrl
add
outsl
imul
mov
nop
les
xchg
mov
mov
xlat
int
mov
pop
mov
wrmsr
sub
cli
and
je
xor
cmpsb
out
dec
xlat
fdivr
aam
ljmpw
sub
jp
xor
filds
jbe
aam
push
and
outsb
call
adc
and
mov
loopne
mov
cmp
push
pop
ret
and
mov
jge
in
movsl
jae
push
adc
aam
adc
test
sub
pop
mov
aas
int3
lahf
aaa
jl
aad
push
cmc
xchg
ss
mov
push
in
cli
sbb
les
idivb
stc
pop
mov
adc
inc
mov
jae
ds
sub
xchg
frstor
and
das
iret
shl
ljmp
test
inc
adcl
into
inc
pop
xor
adc
mov
add
es
stos
ret
push
add
inc
xchg
lcall
or
dec
into
adcl
jge
in
cmpsl
hlt
or
sub
scas
sarl
outsb
sub
or
push
negl
arpl
lds
mov
imul
push
mov
cmovo
jns
lret
push
pop
hlt
sub
cmpb
push
aas
lret
inc
movzbl
js
test
and
xchg
jecxz
and
fmul
mov
push
iret
push
mov
out
rorb
and
lea
mov
loope
les
out
push
dec
xchg
mov
fisttpl
pop
inc
in
or
xor
xchg
xor
hlt
mov
mov
add
jns
addr16
xor
inc
in
add
test
std
shll
mov
lret
out
pop
pop
dec
mov
dec
fld
icebp
inc
push
insb
mov
mov
scas
popf
mov
iret
push
xor
and
rcrl
push
out
jno
fildl
mov
push
insl
testb
imul
mov
jbe
mov
xchg
loope
sbb
call
shl
and
push
jns
nop
and
jecxz
dec
cmpsb
ss
jno
gs
scas
repnz
or
gs
push
inc
inc
or
jle
fdiv
inc
imul
ljmp
rcll
xor
jmp
aaa
in
enter
sbb
mov
fidivs
sahf
into
ret
stos
ljmp
icebp
insb
pusha
cmc
mov
test
or
or
cmpsb
add
loop
out
arpl
call
push
sbb
cld
lock
add
rolb
adc
pushf
mov
jo
dec
fnstenv
mov
repnz
mull
loop
fisttpll
adc
mov
aas
and
js
test
repnz
nop
fsubl
jle
movsl
xor
dec
in
in
inc
adc
and
xchg
cwtl
jnp
pop
mov
push
mov
adc
xchg
xor
xor
sub
subb
bound
jns
popa
mov
loope
out
and
pop
pop
pop
adcl
inc
aam
pop
mov
pop
jb
inc
dec
fcmove
popf
out
ja
push
pop
wbinvd
add
cmp
jbe
int
add
inc
push
sbb
or
notl
sbb
sub
cmp
daa
gs
and
inc
insb
adcb
push
inc
movsl
mov
xchg
test
les
cld
or
mov
adc
aad
mov
das
dec
jo
hlt
xchg
iret
data16
out
cmc
jb
fsubl
repnz
xor
cwtl
aam
mov
push
fstpt
xchg
xchg
movsl
into
push
dec
mov
pop
mov
mov
add
arpl
sub
imul
ret
stos
into
out
mov
xchg
iret
out
inc
ret
jbe
add
loop
stos
push
es
xor
aam
pop
cmpsb
es
test
cmp
jne
imulb
sti
xchg
xchg
push
insb
jg
lcall
scas
js
xchg
aas
addr16
lahf
imul
or
adc
dec
and
imul
lcall
mov
pop
sbb
stos
iret
cld
mov
pop
gs
outsl
mov
xchg
test
and
dec
mov
popf
xor
ss
aas
sti
inc
sub
je
sarl
test
push
pusha
shl
pop
test
jle
outsl
mov
enter
jle
jb
jnp
std
lcall
cld
pop
lds
sbb
mov
sahf
mov
mov
nop
mov
mov
mov
sti
js
ds
add
xor
cmp
mov
cwtl
scas
mov
testb
pusha
and
les
and
adc
mov
cli
dec
sub
out
xchg
xor
rorl
nop
in
imul
xchg
popa
fmull
pop
and
mov
sbbb
mov
mov
ds
inc
xlat
loopne
sub
out
sub
lods
insb
lea
fnstcw
fisubl
sbb
add
xlat
jge
cmp
push
clc
pop
cmp
xchg
xchg
sarl
sbb
push
push
sti
push
ss
stos
mov
xor
mov
lods
or
inc
cmpsb
xchg
adc
jge
iret
xchg
enter
sahf
sub
sbb
and
cmpsl
jmp
fildl
dec
in
scas
mov
sbb
fstpl
mov
stos
out
loopne
and
pop
xor
inc
out
pop
cld
pusha
cli
push
std
sub
shlb
lcall
mov
lcall
mov
arpl
mov
mov
pop
out
adc
je
incb
scas
sub
jo
sub
hlt
imul
xorl
int
or
icebp
and
cmp
out
int3
dec
test
pop
hlt
dec
pop
mov
sub
fmuls
jmp
fisttps
xchg
adc
aam
cli
dec
adc
inc
iret
in
out
sub
sti
fs
out
in
fsubp
dec
push
ror
es
add
jle
dec
and
or
movsb
xor
test
sub
stc
enter
ss
or
popa
xor
out
or
shll
mov
adc
jno
dec
js
xchg
outsl
sub
js
mov
call
into
or
xchg
cli
insl
mov
push
imul
xchg
scas
and
popf
push
fdivp
filds
add
add
sub
ljmp
scas
jmp
outsb
in
cmp
movsb
repz
mov
mov
cltd
push
dec
xor
dec
mov
in
sub
dec
out
cmp
sti
inc
xlat
rorb
inc
pop
push
jmp
mov
pop
jbe
jae
ret
push
leave
icebp
js
cmp
push
mov
mov
jbe
orb
lock
xchg
insl
xlat
xor
xor
or
out
cmpl
mov
fwait
loop
out
push
rclb
mov
enter
inc
xor
rorl
adc
pop
add
int3
xor
push
leave
jb
inc
jle
add
test
cmp
sbb
fs
rep
movsb
inc
jecxz
sarb
iret
lds
pop
daa
lcall
dec
ss
push
sub
lock
pop
cmp
mov
jle
fidivs
adc
out
mov
dec
clc
dec
push
inc
out
sbb
int
sbb
rcrb
pop
aaa
push
and
jno
dec
push
mov
out
sbb
imul
and
hlt
adc
enter
mov
lds
out
js
jecxz
push
popa
lds
lahf
adc
repnz
lahf
fcmovnu
dec
stos
cmc
sbb
sub
sub
inc
push
enter
xor
adc
pop
dec
in
adc
sti
sub
idiv
sub
xor
test
xchg
mov
leave
mov
outsb
repz
jmp
repz
mov
test
add
enter
jns
cld
pop
jmp
mov
addr16
and
dec
lods
or
test
inc
mov
les
fists
xlat
daa
xor
das
ljmp
out
loopne
outsb
inc
xchg
push
cmpsb
fadd
push
and
or
pop
adc
aas
ret
mov
fwait
shl
adc
xchg
repz
pop
xlat
push
decl
and
inc
add
xor
xchg
xchg
pop
push
call
daa
lds
rorl
mov
cmp
sbb
daa
movsb
add
cmp
lret
sbb
sub
mov
cltd
cmp
fcom
sub
and
mov
popa
popf
cmp
xchg
add
xor
orb
cli
cwtl
shlb
data16
insb
in
push
or
or
adc
mov
pop
fisttpll
cli
shlb
dec
cwtl
rorl
mov
popf
lcall
inc
ret
mov
push
cld
pop
xchg
popf
ljmp
mov
movsl
mov
andb
fidivrs
or
imul
cmpsl
in
imul
aad
fwait
shrb
sub
mov
dec
cmpsb
repnz
add
notl
lds
cs
scas
dec
or
mov
lret
mov
shll
ret
aaa
xchg
movsb
ficoms
rolb
sub
or
lret
or
push
pusha
xchg
jb
mov
aaa
jb
dec
mov
xor
push
je
jecxz
test
out
and
xchg
adc
dec
mov
lock
sub
or
pop
jo
pop
dec
fldenv
push
xchg
test
test
in
adc
sbb
pop
cmp
stos
stos
mov
jg
out
loop
sbb
cmpsb
mov
stc
ss
cmp
dec
lcall
mov
es
test
adc
cltd
mov
ss
pop
in
add
int3
imul
scas
xor
push
lcall
mov
push
dec
sub
int3
cmpsl
xchg
fwait
xchg
frstor
mov
mov
cltd
cmpsl
insb
mov
loopne
aam
and
inc
imul
ficomps
rorb
mov
pushf
dec
dec
sbb
outsb
adc
jl
mov
mov
xchg
shl
rorl
addr16
int
insl
mov
lea
lods
scas
sub
or
sarl
mov
loop
notrack
dec
test
incb
scas
jecxz
jmp
ficomps
jne
sub
int
and
xchg
fistl
mov
adc
lods
or
arpl
ficoml
push
xchg
mov
stos
mov
nopl
mov
or
int
fstps
and
cli
imul
pop
imul
push
cmpsb
in
rcl
fisttps
cmp
cmp
pop
sahf
xor
in
cld
adc
mov
xor
inc
into
mov
fadds
inc
mov
mov
inc
push
xor
mov
ret
pop
push
sub
and
int
fst
xlat
ret
int
xchg
jle
mov
mov
xchg
cmp
push
sub
fcomp
mov
mov
int
dec
adc
nop
idivl
test
in
sub
movsl
fs
rclb
test
inc
adc
mov
cli
inc
cmpsl
xor
inc
mov
outsl
pushf
xchg
movsb
filds
dec
mov
cmp
mov
cmc
fucom
shrb
pushf
fwait
push
incl
aam
flds
mov
xlat
cld
pop
lods
cmpsb
inc
inc
mov
ja
nop
push
pop
insb
movsb
outsb
mov
adc
cmp
jno
add
repnz
inc
mov
and
out
lods
push
mov
push
xchg
shrd
jo
movsb
dec
add
arpl
iret
or
into
and
in
mov
push
fadd
fcomps
xchg
and
idiv
add
iret
push
sbb
dec
out
daa
jnp
mov
fcom
and
loope
push
xor
inc
pop
popf
cwtl
in
mov
jo
and
or
repnz
fdivrs
add
xchg
lret
push
xchg
push
clc
xchg
or
inc
inc
or
incb
adc
test
cmpsl
pop
jns
rcr
jp
mov
scas
push
sbb
inc
ljmp
fistpl
mov
lret
pop
add
inc
bound
inc
ret
push
movsl
in
mov
imul
mov
xlat
out
cmp
arpl
lret
loope
push
jl
and
inc
aam
add
loope
jnp
dec
push
jg
inc
cmp
popa
jno
xor
xchg
xchg
int3
add
or
loop
scas
test
inc
mov
or
insb
adc
sbb
repz
aas
fistps
sbb
jecxz
data16
loop
out
or
popf
jae
enter
cmp
aad
repz
pushf
in
test
insl
fldl
dec
jle
lahf
movsb
iret
add
out
pop
daa
in
sub
add
mov
xchg
push
out
in
das
lods
add
adc
jne
or
mov
pop
das
mov
aad
inc
dec
dec
js
push
push
jmp
inc
cld
lods
gs
mov
sbb
dec
mov
sahf
push
mov
lret
nop
sbb
jo
and
xchg
test
dec
popa
cmpl
aad
imul
pop
jmp
movsb
popf
and
xchg
pop
filds
rcl
dec
sbb
push
cmp
sbb
xchg
xchg
int3
mov
data16
sub
mov
and
pop
fisttpl
aad
inc
jae
xor
jbe
decb
push
fdivs
imul
fcompl
ret
pop
dec
jle
test
aad
and
movsl
mov
cltd
jnp
adc
and
int
aad
fdivrs
ret
adc
mov
mov
xchg
jmp
pop
mov
mov
insb
int3
ja
mov
or
nop
xchg
adc
mov
dec
nop
ds
rolb
or
out
ds
push
ja
gs
adc
sub
sbb
idivl
mov
lret
ss
dec
inc
push
adc
sar
jge
adc
jb
cmp
mov
ret
xchg
pop
andb
inc
cmp
jbe
lock
es
jae
cmp
cltd
jbe
push
or
push
xorl
xor
icebp
sub
xchg
in
xchg
aas
jecxz
in
pop
mov
jge
imul
xchg
popf
loopne
and
jbe
jg
adc
bound
clc
iret
mov
icebp
sarb
add
in
rcrl
and
mov
jb
inc
nop
dec
cmp
mov
sahf
push
dec
inc
aas
pop
push
or
mov
xchg
arpl
cmp
push
fldln2
mov
sub
rorl
lea
es
imul
or
xor
mov
pop
or
jl
das
test
xor
sbb
jecxz
jge
or
pop
cmpb
dec
je
sub
and
adc
push
in
mov
ja
xlat
inc
frstor
push
cmc
cmp
scas
and
in
fxch
adc
mov
lods
add
inc
cwtl
ret
mov
lock
js
test
sbb
clc
xchg
arpl
lcall
int
mov
jecxz
xchg
ds
ja
pop
jne
fstpt
in
ds
jo
mov
cmpsl
shrb
dec
out
cltd
int
lds
mov
mov
ret
cmp
xchg
mov
push
out
sbb
iret
test
stos
popa
mov
insl
daa
add
mov
fbstp
mov
icebp
jmp
iret
repz
lds
popf
shll
mov
xor
lcall
inc
mov
jb
xchg
and
lret
int
test
sbb
dec
test
mov
test
lcall
xor
stc
sbb
pop
gs
and
sbb
insb
adc
pop
jno
push
xchg
lret
fldt
in
or
add
and
out
xor
mov
adc
iret
icebp
int3
int
test
mov
sbb
into
loope
sbb
rolb
mov
xchg
sahf
jne
ja
jnp
sub
xorb
imul
lahf
and
dec
mov
sub
xchg
pushf
cmc
adc
pop
aam
popa
adc
inc
mov
lahf
fsubrs
ret
aam
aad
add
pop
scas
push
insb
and
call
pop
mov
or
fnstcw
mov
mulb
xchg
and
push
out
iret
sub
test
aad
mov
dec
into
shrl
arpl
into
icebp
fwait
shlb
shll
bound
fst
sbb
shl
mov
shrb
cmp
lret
popf
mov
pop
enter
pop
arpl
sub
movsb
mov
in
sub
sti
mov
push
loopne
and
test
in
or
ss
push
push
cmp
mov
fldcw
insb
pop
push
jmp
rolb
loope
or
mov
enter
jo
add
into
shrb
lock
xor
lds
mov
aas
jecxz
popa
or
fstl
mov
or
fistl
or
add
inc
icebp
or
jl
scas
sub
insb
je
pushf
arpl
cld
lcall
aam
dec
xlat
mov
xchg
cmpl
das
xor
cmp
sub
sbb
xchg
fsts
frstor
and
inc
dec
and
mov
push
sub
cmp
icebp
enter
and
ffreep
fbstp
fildl
lds
xchg
jnp
sbb
dec
lahf
sub
jle
je
inc
lods
enter
lods
jg
adc
push
sub
insb
mov
dec
aas
dec
push
xchg
ljmp
out
push
jb
pop
insb
sahf
sbb
sbb
lods
sbb
add
or
testb
add
stos
fs
xchg
std
or
cs
dec
dec
jo
pop
pop
mov
loopne
mov
cmp
insl
lock
and
test
mov
jns
dec
mov
stos
fidivs
dec
mov
xchg
mov
dec
test
jne
cmpsl
adc
shl
push
or
fs
jp
enter
fstl
jmp
pop
jae
sub
pop
or
pusha
or
and
sbb
mov
push
xchg
fnsave
imul
pushf
test
adc
lds
pop
or
rolb
mov
dec
or
and
pop
jae,pn
ljmp
mov
fisubs
jg
test
andb
fcos
inc
or
push
dec
mov
enter
mov
or
xchg
test
lret
dec
cmpsb
outsb
ljmp
loop
in
les
and
movsl
mov
jns
add
nop
or
fldl
in
add
mov
test
stc
push
in
std
pop
add
cmp
popf
int3
jl
xlat
les
mov
out
orl
or
lods
fwait
out
lds
mov
clc
mov
push
out
rcll
pop
repz
xor
adc
xor
push
call
aaa
ret
pushf
push
stc
mov
or
fcomi
sbb
sub
pop
jne
nop
fs
icebp
or
pop
inc
push
push
out
xor
outsb
mov
enter
jbe
sbb
nop
inc
inc
push
pop
fldl
push
sbb
jge
fsubrs
or
mov
sarl
fcompl
cs
sarl
inc
xor
int3
aaa
pusha
ds
push
stc
pop
shlb
mov
int3
jmp
xchg
stos
cmpl
cmp
push
push
fwait
xor
dec
int3
mov
mov
jne
xchg
jnp
and
inc
ds
fisubrl
cld
negl
sbb
test
mov
adc
or
movsb
sbb
lea
fisubrl
stc
inc
adc
js
in
or
ja
mov
or
mov
jmp
int
xor
or
or
gs
xchg
lods
cli
cwtl
mov
loop
pop
mov
lds
int3
inc
ljmp
lock
xor
jmp
lcall
mov
shr
bound
jmp
push
jl
test
iret
mov
das
fsubl
ds
or
mov
push
das
jne
push
push
mov
aaa
fisubrl
push
mov
and
pop
shrl
add
mov
pop
jecxz
jo
jns
jmp
sarb
inc
xchg
mov
test
inc
or
add
and
insb
test
jecxz
outsb
aaa
push
aad
sbb
cmpsb
jmp
xchg
ret
gs
aaa
pop
xor
lret
pusha
insb
rcl
incl
lock
fcoms
push
mov
out
sub
jl
fs
icebp
mov
ficoml
nop
in
movsb
push
pop
push
cld
loopne
icebp
push
mov
nop
sub
fwait
mov
outsb
out
add
push
pop
in
nop
jo
jnp
xlat
popf
aam
sub
shll
push
mov
sbb
inc
gs
mov
add
pop
leave
dec
pop
and
pop
mov
sub
out
rol
add
cli
test
and
push
lods
outsl
pop
and
push
xor
scas
subl
mov
and
les
xchg
xchg
jle
jmp
imul
xor
cmp
jecxz
loopne
xchg
imul
test
cmp
shll
adc
xor
dec
cmpsl
push
lcall
push
dec
lcall
and
sub
fcmovu
push
mov
mov
xorl
jnp
mov
stc
xor
repz
ss
testl
jae
add
orb
jo
mov
dec
dec
pusha
outsl
adc
mov
xchg
dec
add
sbb
mov
jne
adc
sub
push
add
icebp
or
push
dec
loope
int
clc
jae
push
out
mov
lods
xor
sbb
and
mov
xchg
mov
jbe
pop
imul
je
icebp
adc
adc
inc
jg
dec
mov
notb
data16
mov
inc
pop
mov
add
dec
out
arpl
jg
sbb
cli
pop
or
imul
call
add
test
or
jecxz
push
mov
xchg
mov
or
pop
int
or
into
push
xcrypt-ctr
cmpsl
lahf
ja
sbb
repz
je
out
popf
jl
push
js
adc
or
mov
pop
lds
ret
add
mov
fcmove
jae
cmpsb
sub
mov
jp
sub
repnz
mov
mov
dec
sti
push
jp
mov
or
mov
testb
dec
lods
xchg
and
mov
clc
sar
mov
and
in
add
adc
shrl
jno
mov
repz
repz
enter
mov
test
out
in
fcmovbe
jb
xchg
in
sbb
outsb
out
mov
fimuls
xchg
jmp
cwtl
das
cmpsb
inc
mov
sbb
jo
inc
xchg
push
mov
pop
negl
xchg
jnp
fmuls
pushf
stc
decb
mov
inc
iret
sahf
shl
xchg
jg
mov
decb
xchg
in
js
stos
enter
or
pop
adc
outsb
sbb
add
lea
insb
xchg
insb
jp
iret
fdivs
rcrl
and
mov
mov
ljmp
pop
popa
leave
jnp
ja
mov
stos
inc
shl
inc
sub
dec
sti
aam
enter
dec
xchg
adc
in
leave
xlat
cmp
shlb
std
shl
mov
sbb
cltd
inc
and
je
mov
lods
lret
mov
or
enter
add
push
jo
jle
push
aas
scas
mov
dec
pop
mov
lcall
inc
lods
mov
mov
cmp
ret
xor
sbb
push
sub
xor
or
adcb
lea
jb
sti
mov
std
fwait
mov
scas
lahf
push
add
jns
insb
jg
xchg
inc
ficompl
xchg
or
stos
stos
lahf
sub
or
in
and
mov
sbb
pop
nop
jnp
pop
lea
dec
push
pop
pop
dec
push
jge
add
dec
and
sbb
imul
push
adc
adc
dec
sub
cli
lods
fwait
inc
std
cli
pop
push
stos
or
mov
loope
mov
das
insb
arpl
mov
mov
xchg
mov
push
add
clc
mov
fistpl
les
mov
or
dec
lods
inc
pop
lret
aad
xchg
nop
test
test
int
rolb
inc
pop
cmp
lea
xor
xchg
push
pop
jge
lods
lods
adc
test
popa
mov
cmc
xorl
dec
leave
bound
stos
shlb
push
jge
fcmovnu
xchg
and
push
inc
sti
mov
push
lret
sub
bnd
mov
out
xor
adc
mov
das
in
jo
test
pop
movsl
stos
push
popl
jg
add
xor
cld
or
subl
mov
dec
sbb
je
xchg
jnp
fs
fsubrs
sti
movsl
mov
mov
push
dec
lret
jne
fidivrs
xor
xchg
popa
sbbb
xorl
bound
cli
sub
adc
and
or
pusha
ljmp
dec
pop
jle
aad
mov
jo
jo
inc
xchg
dec
and
mov
pop
test
add
stos
lds
push
mov
iret
xor
jle
int3
movb
jo
testl
into
sbb
jnp
in
int3
adc
jb
mov
dec
rcl
mov
fstpt
inc
pop
push
repz
mov
or
mov
inc
adc
lock
int
pop
popf
pop
pop
xor
test
add
adc
cmp
cltd
fiadds
push
test
mov
ficoml
arpl
pop
fyl2xp1
and
aas
popa
mov
sub
pop
add
dec
ficomps
push
ss
sbb
sti
nop
mov
inc
and
xlat
test
and
inc
add
loope
fdivrs
jb
dec
xor
xor
ljmp
and
loopne
scas
jnp
fimuls
jae
cld
jb
ret
jne
xchg
adc
xchg
pop
dec
jl
xchg
push
iret
mov
sbb
cmp
mov
jns
bound
pop
mov
sahf
imul
sbb
adc
push
pop
call
cmc
inc
mov
inc
inc
cmc
push
and
jnp
dec
inc
or
sub
jge
dec
sar
dec
addr16
and
push
dec
cmp
je
sub
adc
pop
sub
cmpsl
push
xchg
pop
lods
lahf
cwtl
sbb
mov
movl
pop
iret
pop
lds
outsl
add
in
imul
imul
ljmp
push
hlt
jmp
xor
sbb
repnz
loop
and
scas
rcrb
lret
fmul
cwtl
dec
inc
sub
xor
push
popa
dec
sbb
outsb
cld
mov
dec
imul
xchg
mov
fwait
je
push
mov
cli
cmpsb
sub
pop
call
sbb
and
insl
insl
mov
fstpt
inc
and
xchg
je
or
stc
push
xchg
out
xchg
ja
lods
or
cltd
stos
scas
fs
ss
mov
icebp
pusha
test
jl
insl
mov
cs
push
popf
sti
inc
dec
cmpb
dec
sub
repz
daa
js
pushf
movsb
fmulp
pop
in
pushf
or
jne
aad
add
pop
scas
subl
pop
push
pop
and
js
insb
cbtw
jmp
cmp
jno
lea
addr16
jb
aas
leave
push
add
stos
test
mov
popf
dec
mov
lods
fwait
data16
xor
enter
jg
adc
rcrl
pop
fwait
xor
rcll
insl
jb
and
loop
jnp
mull
pop
js
sub
test
dec
jb
jne
xchg
push
push
sub
adc
or
inc
addr16
arpl
into
aad
ret
inc
push
xchg
mov
out
test
lret
mov
sub
sahf
add
imul
in
mov
jl
jae
sti
daa
jp
sub
leave
jo
push
rol
daa
inc
sarb
fidivl
add
and
dec
mov
test
mov
lods
lcall
push
sbb
xchg
xchg
rcrl
cld
adc
gs
and
xor
mov
cmpsb
xchg
in
adc
stc
cwtl
jb
std
adc
jb
jge
loope
jno
cld
sub
inc
jle
inc
stos
pop
add
and
repz
data16
cmpsb
mov
out
inc
xchg
xor
and
rcrb
jmp
xor
dec
popa
push
adc
adc
mov
mov
mov
or
fucomip
cmp
sub
imul
jb
xchg
movsl
push
cmp
cmp
aaa
hlt
push
push
lea
iret
test
add
fildl
push
imul
subb
outsl
dec
jmp
out
insb
clc
pop
and
mov
or
pop
daa
test
jno
mov
fdivrl
fldt
and
lret
popf
xor
jns
jp
lock
ss
call
out
or
mov
cmp
jl
cmp
sbbb
fisubs
pop
xor
and
fwait
sbb
test
cmp
inc
or
and
pop
inc
xchg
and
jge
jg
pop
andl
dec
cmp
pusha
pop
call
fmul
mov
js
lret
sbb
je
lcall
nop
or
xor
dec
sbb
jbe
test
push
add
clc
mov
jno
push
pushf
mov
pop
addr16
jbe
inc
jmp
jge
hlt
jbe
inc
out
xchg
xor
out
roll
leave
idiv
popa
mov
sub
stc
mov
pop
xor
mov
cmpsb
mov
dec
mov
pop
add
sbb
ss
dec
jns
cmp
popa
lret
jae
int
adc
mov
inc
iret
nop
jl
jo
stos
clc
dec
xorb
or
aas
mov
mov
xor
lods
movsb
mov
push
dec
into
mov
dec
cmp
xchg
jbe
xor
and
aaa
rcr
cs
adc
pop
mov
and
xor
dec
loopne
rclb
jl
dec
jne
outsl
cmp
mov
inc
cmp
mov
mov
push
pusha
mov
scas
data16
lods
idivb
fldt
test
xor
loopne
jle
dec
enter
cwtl
push
push
je
fimuls
jnp
je
pop
repnz
insb
repnz
xchg
and
xor
mov
jb
push
incb
push
cmp
xchg
das
xchg
jp
roll
mov
and
adc
pop
scas
int3
in
fildll
sub
jae
adc
es
and
adc
mov
aam
adc
pop
pop
loop
in
inc
inc
loopne
iret
mov
stos
dec
mov
mov
out
sub
jecxz
cs
jle
cltd
or
xchg
pop
xor
or
fcmovnb
cli
std
adc
gs
push
arpl
fistpl
movsb
mov
add
ljmp
inc
push
add
xchg
ret
repnz
push
nop
dec
in
dec
pop
jl
std
ret
inc
xchg
cmc
dec
sbb
outsb
mov
push
or
fmulp
aad
push
jle
add
pusha
mov
popf
sbb
mov
enter
sub
push
push
scas
add
inc
sub
or
pop
mov
inc
sub
cmp
push
cmp
and
xor
inc
mov
inc
fwait
jp
loop
inc
adc
cwtl
test
and
je
dec
pushf
rcrl
lret
fsubs
cs
lea
adc
out
adcb
mov
cmp
scas
inc
xchg
sbb
sub
pop
push
jno
xchg
mov
add
js
int3
cwtl
insb
out
or
push
or
and
lods
jecxz
cmpsb
adc
ljmp
pop
pop
jge
ja
cmpsb
xchg
add
out
add
add
and
imul
push
frstor
mov
roll
cmp
mov
je
ljmp
mov
imul
sub
sub
nop
inc
mov
cs
js
das
adc
sub
lret
sbb
wrmsr
jnp
jb
mov
shrb
stos
aad
clc
lret
mov
mov
sbbl
mov
inc
mov
loope
xchg
mov
in
cmc
push
dec
ret
pop
sub
xchg
sahf
mov
mov
push
mov
cli
insl
adc
stos
xchg
pop
push
hlt
mov
lds
out
iret
xchg
rclb
pusha
pop
mov
movsl
daa
cmpb
es
cmc
mov
adc
push
clc
imul
dec
popf
sub
sbb
cmp
mov
mov
pop
nop
pop
xor
cld
push
shrl
iret
lret
push
mov
arpl
popa
filds
icebp
mov
xor
sbb
aaa
cmovg
and
mov
pop
stos
and
fidivrs
ror
outsb
sar
xchg
sub
arpl
fistl
inc
mov
mov
mov
inc
int3
xor
mov
enter
mov
stos
xor
mov
repnz
out
pop
sbb
shll
push
insl
xor
sub
push
xor
test
pop
or
sub
push
mov
cltd
pop
xchg
shrl
add
adc
dec
rcrl
addr16
sahf
cmp
or
outsb
shlb
ljmp
test
fbld
call
and
cmp
pop
xor
and
xor
or
cmp
ja
xchg
mov
nop
aas
shrl
xchg
sub
mov
xor
xor
sti
push
lret
out
test
jnp
dec
push
lcall
repnz
inc
add
aam
mov
out
leave
inc
pop
xchg
sti
arpl
inc
sbbl
mov
xchg
jecxz
sbb
lods
mov
into
loope
cwtl
pop
daa
jnp
add
lods
mov
xchg
test
fisubrs
mov
xchg
cmp
mov
ja
inc
clc
loop
jns
or
push
fiaddl
xlat
data16
push
popf
loop
cmp
in
mov
cmp
cmpsb
int
lock
cmp
sub
or
nop
dec
pop
inc
sub
push
dec
sbb
and
push
sahf
or
xchg
mov
insb
add
sbb
pop
mov
int
aaa
dec
xor
push
add
pop
ds
lahf
or
stos
cmpsb
sbb
scas
pop
mov
jmp
or
std
mov
sbb
das
andb
pop
loopne
fiadds
sub
add
roll
xchg
pop
out
cmpsb
jae
fs
dec
pop
xor
out
les
dec
loopne
push
xchg
mov
int
stos
nop
and
push
jle
push
add
push
dec
fcmovb
aad
repnz
cmp
rorl
or
pop
xor
push
dec
fs
and
pop
and
aad
cltd
lock
push
iret
mov
add
mov
or
inc
sbb
xor
jb
pop
mov
dec
add
xor
mov
xchg
fildl
loopne
sar
xchg
filds
push
dec
subl
dec
pop
aas
test
xchg
fcoms
ds
xchg
test
cmpsb
dec
nop
sbb
jnp
jle
sub
jmp
xchg
inc
or
push
mov
movsl
sbb
loopne
xchg
mov
divb
dec
push
test
dec
mov
in
repz
inc
outsl
jns
mov
fcmovu
mov
xchg
dec
scas
push
aam
or
fcoms
xor
cmp
xchg
aas
inc
or
int3
add
mov
push
decb
in
out
mov
mov
pop
ret
dec
loope
inc
daa
push
pop
xor
xor
sub
sub
shrl
test
cld
add
cmp
loope
popa
dec
inc
lret
dec
or
and
iret
adc
lret
outsl
sti
stos
xchg
adc
lahf
jmp
lods
movsb
sub
sbb
adc
iret
stos
dec
sub
out
push
xchg
cs
outsb
sbbl
sbb
mov
divb
and
aas
mov
add
xor
or
gs
push
push
jno
call
in
popf
mov
mov
adc
pop
mov
push
jecxz
loope
faddl
sub
or
cmp
add
es
push
aas
imul
sbb
popa
mov
mov
push
adc
cmpsl
push
icebp
incl
xchg
fldl
jns
test
pop
pop
adc
fstl
sbbb
fsubrl
mov
mov
mov
push
inc
jbe
dec
mov
cmp
fidivrs
repnz
stos
cmp
and
test
pop
lds
rcll
xorl
cmp
mov
pop
decl
mov
xchg
movsl
les
insb
dec
add
mulb
dec
add
rolb
xchg
ljmp
lcall
popf
mov
cltd
cmp
or
mov
xchg
adc
fcmovbe
add
lock
jnp
out
sbb
sub
out
add
sbb
jb
enter
cmpsl
sbb
xchg
addl
mov
pop
push
adc
lods
jge
fistpl
inc
aam
test
lods
pop
out
pop
lahf
adc
push
add
or
insb
lds
pusha
mov
jl
outsl
and
mov
dec
or
add
fsub
inc
mov
sbb
mov
xor
sub
mov
mov
jg
popf
pop
mov
hlt
ljmp
cmp
in
lods
add
mov
les
mov
mov
mov
add
sub
pop
imul
lock
mov
loope
ja
mov
enter
in
cmp
lret
inc
adc
fcomps
test
sbb
iret
xor
sub
mov
push
les
xchg
inc
push
call
sti
adc
sti
inc
or
mov
adc
mov
ss
fistpll
aad
fistpl
fcomi
aam
jg
fidivs
nop
jb
and
insl
outsb
xor
ret
push
enter
loope
ret
andl
dec
daa
sbb
cwtl
xchg
xor
mov
xchg
ret
add
dec
mov
mov
mov
jmp
ss
push
sub
mov
adc
ret
dec
pop
mov
pushf
jg
cmp
dec
or
scas
mov
gs
inc
and
jl
cmpsl
mov
jg
mov
cld
xchg
xor
mov
cltd
stc
stc
push
imul
iret
fistpl
mov
loope
shlb
inc
jns
in
sub
orb
pop
and
sub
pop
inc
sbb
mov
sbb
arpl
sbb
adc
or
add
mov
daa
cmp
push
rcrb
addb
insl
arpl
aaa
lret
push
sbb
mov
mov
and
cmpsl
insb
in
mov
mov
orb
je
xchg
sbb
data16
icebp
fldenv
rolb
sbb
mov
xlat
xor
xor
std
mov
in
sti
scas
shlb
pop
dec
fs
cs
cmpsb
rcll
jno
xchg
jg
gs
dec
sub
lret
xor
sbb
xor
sbb
mov
out
mov
lds
cmp
push
sti
jne
mov
lcall
outsb
mov
push
inc
insb
push
fdivl
push
dec
pop
push
in
xchg
cs
mov
outsb
mov
mov
movsb
mov
sti
jecxz
shlb
shrl
push
and
jne
xor
in
push
mov
and
jp
nop
mov
pop
mov
xchg
xchg
mov
in
jno
in
inc
int3
xchg
scas
fnstsw
movsb
or
cmp
jne
fwait
imul
out
inc
les
ret
pop
jp
jp
js
cld
add
xchg
jns
lods
dec
sub
loop
movsb
lret
jns
jg
inc
push
loope
sub
jo
in
enter
mov
adc
push
xchg
jbe
dec
jg
shll
rcrb
sub
mov
lds
repz
ljmp
adc
xchg
in
mov
or
aaa
sub
arpl
ljmp
push
mov
sub
insl
push
sub
mov
test
xchg
sbb
in
jl
jo
or
cmp
js
iret
rclb
lea
and
sub
fistpl
jmp
lahf
negb
pop
outsl
fldl
rorl
inc
mov
fildll
jns
xchg
ret
repnz
sub
subl
dec
lret
mov
mov
rolb
cs
xchg
mov
incl
movb
iret
and
movsl
mov
jge
push
push
ret
insl
mov
sti
xlat
shrl
push
push
push
aaa
or
cmp
pop
out
add
xchg
sub
insb
fs
xchg
out
js
jp
cmp
in
xlat
scas
insb
sub
jl
shlb
sbb
cmp
cmp
aaa
aaa
lods
and
movl
mov
mov
scas
popf
stos
jp
add
jp
jne
pop
pop
pop
inc
cmp
rcrb
cld
pusha
sarb
lea
xlat
js
out
scas
sbb
add
xor
sbb
sbb
and
int3
stos
dec
flds
cmp
xchg
sahf
xchg
or
mov
push
mov
aam
xor
cwtl
pop
push
scas
movsb
adc
shl
lods
sbb
jno
xchg
pusha
idivb
push
daa
xchg
pop
mov
insl
movsl
pop
mov
pop
fldenv
insb
push
pop
mov
mov
fidivs
mov
jae
rcrb
test
repnz
shrb
rorl
jae
cmpl
popa
lods
lock
cli
pop
pop
rorb
imul
ret
mov
sub
repz
pusha
sbb
imul
mov
call
ffreep
push
test
dec
mov
push
sbb
aad
and
or
and
fs
negl
fmuls
outsl
mov
fld
lret
in
fcompl
xchg
xor
scas
xor
out
addb
cmp
inc
adc
stos
cli
mov
test
aas
cli
xchg
nop
inc
xor
lods
aam
mov
mov
fdivr
fcmovb
cmp
jne
mov
fnsave
movsl
inc
mov
and
sbb
add
call
push
dec
push
xchg
add
inc
add
js
mul
gs
arpl
rolb
lret
int3
fildll
mov
xchg
hlt
inc
inc
nop
jo
sub
sbb
into
and
data16
jg
lahf
push
xor
enter
test
xor
add
enter
cmp
add
mov
lret
mov
data16
sbb
xor
ss
mov
jecxz
xchg
adc
jo
push
insb
lret
fldenv
dec
mov
mov
cltd
mulb
mov
mov
jo
mov
cmp
push
or
dec
and
push
cli
adc
mov
cmpsb
fstps
xor
inc
pop
mov
es
out
bound
sbb
movsl
lret
cmpsl
or
je
mov
daa
push
mov
aas
xchg
sbb
pop
pushf
push
jge
mov
scas
imul
dec
fnstcw
jmp
mov
in
pop
and
adc
mov
popf
ja
les
and
add
jae
lods
dec
fcomp
sahf
cmp
int3
leave
mov
xchg
cmp
cmp
add
add
into
es
and
scas
inc
scas
jb
std
enter
testl
stos
mov
lds
js
jl
mov
cmp
inc
and
leave
push
adc
sti
jae
jnp
stc
adc
mov
xor
sbb
cmp
mov
xor
mov
pop
xor
rcll
hlt
sub
sub
je
jno
jle
jg
jnp
arpl
andl
shrl
bound
mov
push
jno
mov
out
ds
ficomps
cmp
xor
mov
cs
idivl
xor
mov
setp
xor
cmp
jg
dec
add
mov
cmp
pop
cmp
dec
mov
jno
inc
pop
es
das
insl
popa
xchg
xor
and
cwtl
xchg
pop
push
xor
icebp
lret
sbb
loop
mov
fdivl
dec
sub
inc
mov
fldt
jecxz
je
pop
ss
loopne
mov
arpl
adc
xchg
lcall
cmp
mov
insb
data16
pop
int
insl
dec
mov
add
out
cmp
in
ror
push
cmc
xor
scas
add
loope
scas
jbe
lods
rcll
mov
aad
jg
lods
fiadds
stos
or
cmpsl
adc
dec
mov
xchg
add
pop
aaa
push
or
aaa
fs
mov
iret
adc
dec
or
popa
mov
js
mov
loopne
adc
bound
inc
fwait
scas
dec
fdivl
sub
js
pop
adc
inc
cmc
xchg
mov
out
jo
mulb
sub
add
std
stos
insl
push
les
je
sub
stos
sbb
cmp
sbb
xchg
and
popf
leave
push
mov
push
out
xchg
add
jmp
ja
cmp
xchg
dec
repnz
jne
mov
mov
addl
xchg
and
lea
inc
inc
sbb
and
andl
lahf
loope
fdivs
bound
pop
inc
jns
inc
xchg
mov
lea
mov
lods
fdivl
mov
imul
mov
out
sub
out
sub
lea
jb
inc
int
fs
int3
mov
or
cmpsl
add
mov
pop
pop
or
addr16
mov
sahf
lcall
and
scas
jge
nop
cmc
jne
aad
sbb
call
outsb
les
scas
sti
mov
and
dec
sub
mov
jmp
sbb
pop
out
rcrb
js
fs
xchg
lods
xor
sbb
imul
mov
movsb
outsb
dec
push
sbb
or
les
cmp
std
push
mov
jmp
pop
aam
xor
adcl
movsb
inc
mov
xchg
arpl
mov
sub
idivb
cmp
xchg
ret
in
xor
das
pusha
lret
ja
push
fmull
in
loope
push
sbb
inc
inc
mov
mov
pop
mov
adc
sahf
add
adc
push
push
jge
adcl
out
cmp
adc
cvtdq2ps
and
pop
push
push
rorl
cmpsl
arpl
cmc
mov
mov
leave
lds
push
idivl
lret
stos
xchg
lods
mov
xor
divb
pop
adc
pop
dec
pop
cs
and
pop
mov
and
pop
les
bnd
hlt
ds
icebp
fcoml
inc
test
mov
pop
xor
mov
fwait
mov
push
fstps
mov
sahf
mov
ret
inc
in
inc
mov
xorl
je
xor
daa
cmpsb
push
aad
in
pusha
xchg
sarl
imul
mov
xor
or
xchg
movsb
insl
push
pop
dec
pop
fwait
sbbb
int3
and
rcr
pop
popa
jmp
jge
stc
lods
push
jb
mov
vmread
lret
test
inc
dec
adc
insl
jl
xchg
repz
jbe
sarb
cwtl
lcall
arpl
push
push
push
cld
rcl
js
fcompl
int
or
sbb
ficoml
into
mov
jb
ljmp
cmpsl
shlb
insb
in
dec
in
cmpsb
in
mov
inc
rcll
icebp
or
jne
mov
bound
xchg
mov
mov
dec
ret
scas
nop
adc
call
vminsd
mov
or
xchg
gs
cmp
or
lds
jecxz
popa
sbb
or
dec
adc
orb
mov
mov
cmp
pop
sub
jp
mov
iret
sub
add
aad
mov
mov
jne
dec
or
mov
rclb
cmpsb
inc
ds
cmc
add
inc
push
inc
or
inc
sub
push
aad
inc
mov
dec
push
rcrl
cmp
ja
jnp
dec
in
inc
push
fdiv
pop
inc
add
adc
fisubs
cmp
lds
sahf
cmp
leave
daa
lret
iret
xchg
leave
out
cs
cltd
int3
xor
sti
shl
pop
shr
das
ret
push
mov
imul
lahf
test
sub
cmp
int
xor
in
ret
mov
dec
inc
jg
pushf
push
mov
insb
scas
xor
jno
pop
nop
rclb
fidivl
or
outsb
test
xchg
sub
addb
and
daa
je
sub
fcompl
xchg
cmc
inc
xchg
jbe
enter
scas
xlat
push
ja
pushfw
loopne
dec
mov
inc
repnz
mov
out
mov
das
sub
adc
cmp
xor
or
aam
push
add
mov
lea
sub
xorl
stc
dec
pop
sbb
scas
lahf
and
xchg
jecxz
lock
and
push
inc
sahf
jb
fadds
jno
shl
jbe
mov
or
adc
sub
insb
cmpsl
inc
test
cmp
fcmovb
cmp
mov
mov
push
fstl
cmp
scas
fsubrl
cmp
in
lds
pop
jo
scas
mov
mov
pop
pop
mov
outsb
inc
cmpsb
dec
notb
inc
jae
inc
out
mov
mov
lret
pop
fmull
nop
jmp
or
sbb
test
pop
push
xchg
sbb
popl
mov
imul
pop
cmc
icebp
or
xlat
push
cwtl
ret
xchg
clc
daa
shrb
shl
xchg
cmc
and
in
repz
jge
adc
outsb
enter
mov
movsb
fwait
out
stos
jle
xchg
gs
mov
mov
arpl
xchg
stos
sub
sbb
imul
call
outsb
mov
jbe
movsb
jbe
iret
add
and
cmp
aam
test
stos
out
jo
mov
bound
scas
mov
jno
dec
add
data16
inc
push
lahf
ret
mov
adc
cwtl
shll
mov
js
movsl
andb
dec
inc
add
mov
cmpsl
pop
mov
cltd
mov
stos
dec
imul
pushf
repz
or
aam
out
gs
insb
push
mov
sahf
mov
lahf
adc
mov
jl
xchg
das
xchg
add
sarl
fmull
rorb
fsubr
jno
sub
into
aaa
jge
add
fcoms
fstpt
bound
push
loop
pop
mov
jb
xor
mov
mov
aad
inc
or
stos
movb
mov
push
lcall
xor
jbe
lock
data16
mov
clc
dec
xor
or
cmpl
add
mov
mov
test
mov
in
push
imul
adc
xlat
sbb
mov
in
aam
icebp
ja
dec
lods
js
sub
ja
fildll
cli
push
jmp
cmp
in
aam
out
stos
inc
les
add
xchg
push
pop
pop
std
sbb
mov
or
pop
mov
and
push
or
outsb
and
cmc
out
in
movsb
lods
xlat
inc
xchg
add
data16
dec
add
loop
popf
xor
jb
xchg
and
push
pusha
push
sbb
xchg
mov
cmpsb
int3
push
jbe
out
pushf
loope
fildl
push
adcl
fucomip
or
loopne
addr16
push
fs
arpl
sub
mov
dec
push
imul
sub
mov
add
rorb
and
out
add
jmp
cld
mov
stos
test
mov
adc
pushf
int
or
sarl
jecxz
lret
test
xor
lret
fimull
faddl
xor
outsb
push
sbb
add
push
xchg
mov
out
mov
out
mov
jle
iret
mov
sarl
mov
push
test
into
sub
cmpb
lods
es
mov
ds
or
pushf
rorb
xchg
int3
movsb
xchg
mov
jno
adc
loope
mov
sarl
mov
adc
stos
mov
push
sub
jne
fcmovb
pop
cwtl
out
push
mov
and
jl
popa
adc
adc
xchg
sub
aam
imul
cltd
aas
add
sub
add
xor
loope
ljmp
fnstsw
push
pop
mov
pop
dec
ja
mov
loope
movsb
adc
sub
inc
sti
dec
inc
fiaddl
imul
movsb
mov
lret
std
jge
push
mov
add
push
add
rep
popa
lret
fxtract
test
mov
daa
adc
push
add
sti
sub
push
int3
test
xor
sbb
je
xchg
call
fwait
mov
movsb
aad
mulb
daa
stos
xlat
outsl
xor
mov
rolb
fadd
mov
ret
fisttpl
mov
inc
sub
fistl
jae
mov
nop
push
xchg
mov
jl
das
int
cmpsl
dec
gs
test
aaa
icebp
test
adc
test
lock
jmp
xchg
imul
lock
pop
xor
jb
inc
mov
dec
shl
pop
mov
cs
adcb
pop
xchg
sub
cmp
jnp
jns
jl
test
cmpsb
xchg
insl
mov
std
addr16
adc
int
cltd
stos
scas
or
rcll
popa
jno
adc
mov
loopnew
mov
paddusb
call
test
push
outsb
xor
mov
pop
out
fisttpll
ror
or
insb
mov
andb
mov
fs
pop
push
bound
mov
jo
daa
jle
mov
mov
adc
or
ss
xor
insl
xchg
in
cmp
xor
addr16
repnz
xor
fildll
xor
stos
push
ds
mov
push
push
add
and
leave
dec
std
dec
and
cmpsb
push
sbb
mov
addr16
mov
push
pop
pop
pop
fisubrs
lds
mov
push
pushf
or
mov
xchg
bound
or
mov
push
imul
inc
ss
push
repnz
inc
bound
aas
cltd
inc
pop
data16
arpl
dec
out
jmp
mov
mov
jno
cmp
inc
lret
sub
lret
mov
enter
xchg
and
dec
ss
cwtl
xchg
or
xor
in
xchg
ror
jnp
cmp
rcll
ja
cmpl
bound
int3
and
jp
mov
push
cmp
xlat
aaa
cli
cltd
ficomps
push
repz
xchg
repnz
add
cmpsl
pop
loopne
mov
and
mov
push
cmp
pop
addr16
cs
or
mov
xchg
cmp
loope
or
inc
sbb
into
outsb
sbb
push
adc
xor
add
pop
aam
add
add
xchg
lret
fdivrl
or
sub
inc
xchg
xor
stos
aad
inc
push
sub
mov
das
es
mov
cmp
inc
pop
mov
adc
incb
arpl
enter
adc
cli
lods
lahf
fldl
jl
sahf
daa
mov
movsb
add
add
and
repnz
or
icebp
add
mov
mov
test
imul
pop
and
dec
inc
xchg
inc
enter
fidivrl
mov
push
dec
push
mov
mov
sbb
xor
inc
shl
outsl
mov
test
cmp
jnp
cltd
bound
pop
mov
aaa
int3
inc
xor
rcll
xchg
movsl
xor
mov
xchg
and
lret
clc
outsl
sbb
pushl
call
push
sub
lods
sahf
stos
cltd
cmp
xchg
pop
lahf
rorl
push
les
inc
xchg
pop
popa
cmpsb
sub
mov
pop
mov
pop
mov
pop
popf
pop
sbb
popf
xchg
sbb
push
push
xor
dec
xor
cmc
xor
mov
cmp
sbb
iret
in
push
lret
mov
outsb
dec
std
cld
or
outsl
sti
test
push
ficompl
sbb
mov
jne
push
nop
xor
jo
sti
cmp
orl
pop
adcb
xor
sub
in
sub
rolb
fiadds
cmp
adc
sti
jecxz
fstl
scas
insl
xor
push
push
sub
lret
sub
cltd
push
loopnew
jmp
mov
scas
test
xchg
ret
out
push
inc
rcl
das
add
cwtl
cmp
mov
or
jecxz
arpl
incl
je
pop
fistps
bound
fnstsw
sahf
dec
jg
adc
mov
stos
xor
inc
imul
out
jge
add
sbbl
jge
mov
int3
stc
fsts
pop
in
out
hlt
cmc
dec
sbb
push
xchg
cltd
out
arpl
mov
in
arpl
sub
ss
int3
shlb
mov
out
arpl
mov
sbb
addr16
xor
jecxz
jp
jl
sbb
sahf
cwtl
int3
fs
xchg
xchg
mov
mov
xor
fdivr
hlt
mov
iret
pop
inc
adc
cwtl
push
xchg
outsb
scas
out
sub
shrl
clc
fldt
xchg
lods
std
test
mov
iret
mov
adc
leave
mov
jmp
popf
dec
or
cmpsl
stos
dec
sahf
jl
std
fimuls
int
repnz
push
cmp
or
js
sbb
ja
sub
jl
sub
cwtl
data16
arpl
xchg
movsb
rsm
cmpsb
in
js
mov
adc
popa
out
inc
iret
sub
repnz
pushf
xchg
xor
jp
jecxz
aad
sbb
shlb
sahf
adc
stc
scas
or
dec
and
mov
jbe
lret
fistpl
sub
mov
cmp
mov
shrl
outsl
inc
js
jne
pop
push
xchg
xor
and
mov
arpl
cmp
rol
divl
cld
shlb
jb
out
xchg
lret
xor
pusha
sbb
sub
xor
pop
jbe
mov
mov
xor
dec
lds
arpl
clc
sub
jl
cmpsl
ret
jle
ret
es
mov
xchg
shll
mov
sbb
leave
or
and
push
inc
jecxz
xrelease
inc
and
int3
sti
push
xor
ds
cs
add
loope
sbb
cmp
dec
insb
dec
aad
rol
sub
mov
ficomps
cmpsl
cmp
insb
decl
pop
ds
pop
cmovne
push
lock
ret
mov
das
sub
dec
scas
movsb
xlat
or
xor
jne
lods
pop
rcll
inc
inc
dec
push
inc
jl,pn
movsl
push
movsb
je
inc
mov
dec
jne
popf
inc
outsl
mov
jmp
arpl
andb
cltd
xchg
test
mov
nop
imul
bound
cmp
pop
sti
std
and
addr16
movsl
add
shrb
mov
and
sbb
add
call
mov
or
nop
add
stos
xchg
nop
mov
sub
pop
ja
jo
roll
adc
add
sbb
pop
mov
inc
push
daa
inc
shr
dec
pop
adc
in
mul
fildll
jne
mov
ljmp
das
fcomps
loope
in
ret
push
or
loop
push
jecxz
cltd
mov
and
add
add
sbbl
xchg
lret
fmull
leave
fwait
inc
in
dec
sub
ja
jns
add
xchg
ficoms
lods
in
pop
xchg
and
pop
mov
data16
jmp
dec
add
mov
xor
out
std
insl
pushf
je
cltd
sahf
and
push
cmp
mov
outsl
dec
int
imul
sub
add
mov
fcompl
movsl
stc
imul
xor
jmp
ljmp
push
pushf
je
mov
mov
or
jmp
divb
or
xor
mov
icebp
or
inc
or
ret
pop
negl
cmp
mov
cwtl
push
cmp
xor
push
cmpsl
jbe
xchg
lret
scas
or
ljmp
mov
in
and
xor
jp
mov
add
lcall
sbb
pop
nop
push
ds
in
and
fcmovnb
ficoms
jmp
jle
xor
sub
out
imul
cmpl
adc
inc
test
push
js
fwait
mov
jb,pn
in
les
fbld
daa
xor
int
idiv
pop
cmp
or
pop
int3
pop
lea
imul
in
into
xchg
jl
or
es
enter
push
cs
test
int3
movsl
mov
in
sub
mov
mov
xchg
es
cmp
dec
xlat
cmpsb
inc
clc
inc
lret
aad
ret
aas
dec
jbe
add
addr16
sub
xchg
std
cwtl
aaa
aad
xchg
js
test
out
mov
fnstenv
sub
inc
inc
dec
lret
and
jnp
lret
test
pop
mov
sbb
mov
int
pop
sub
cmp
mov
jl
inc
es
outsb
lods
shl
push
aam
into
pop
insb
adc
mov
sub
cld
mov
adc
cli
and
sbb
test
cmp
je
mov
mov
xor
arpl
test
fimuls
lods
or
mov
enter
mov
dec
pop
sbb
movsl
mov
mov
jno
xchg
enter
inc
cmp
inc
add
es
mov
push
outsb
in
sti
xchg
inc
mov
mov
cwtl
push
xchg
aad
sahf
jecxz
lret
pop
lea
or
mov
adc
divl
pop
mov
fucomi
sbb
repz
das
scas
xchg
dec
xchg
pop
test
fistpll
mov
xor
ret
cltd
jno
cwtl
mov
sarb
sahf
lods
addr16
out
addr16
lods
dec
das
mov
inc
sahf
sbb
jecxz
and
fistpll
jmp
mov
pop
sahf
push
push
sarl
inc
jbe
mov
ljmp
jmp
add
xor
jmp
adc
rorb
push
lret
xor
addb
imul
pop
sbb
dec
cmp
fs
xor
pop
push
insl
js
or
movsl
leave
test
mov
inc
sbb
sub
add
sbb
shrl
push
addr16
push
pop
jns
in
and
jnp
out
aaa
pop
adc
jnp
xor
push
mov
add
test
cmp
adc
test
dec
mov
mov
outsl
cmpsb
pop
pop
iret
pop
into
js
fs
mov
fwait
mov
inc
and
lods
xchg
cmp
addb
daa
inc
sub
adc
loop
push
push
mov
mov
pop
sbb
mov
pop
sbb
mov
dec
jae
mov
and
pop
movsl
out
pop
cmpsb
mov
mov
int3
daa
outsl
add
shll
mov
sbb
ja
in
mov
xchg
sbb
popf
xor
push
fldenv
mov
rcrl
xchg
cwtl
xchg
jmp
push
jecxz
pop
mov
sub
dec
out
std
mov
das
sbb
enter
xchg
aaa
aaa
sbb
ror
adc
xchg
push
jecxz
adc
xchg
add
add
mov
sub
dec
mov
inc
bound
loope
sbb
out
roll
repnz
jno
insb
xchg
add
call
pop
and
mov
sbb
sahf
push
xchg
lret
jle
xchg
or
roll
jae
loopne
jno
aam
scas
in
jg
mov
bound
jg
cwtl
test
jnp
cltd
je
sbb
sub
jecxz
std
sbbb
in
jmp
leave
outsl
cmp
movsb
mov
dec
xchg
pushf
ret
jle
call
nop
test
insb
ss
in
or
fimull
in
gs
adc
sub
pop
dec
cmp
mov
out
or
push
dec
pop
sbb
jne
jae
movsl
and
add
pop
jmp
imul
into
lret
rcrl
aam
xchg
add
ficomps
push
cltd
fistps
dec
mov
mov
jae
jo
inc
pop
lahf
add
enter
mov
mov
jno
outsb
add
cmp
add
nop
pushf
and
sbb
lcall
adc
jbe
dec
adc
sub
jo
xor
sbb
lds
inc
rcrl
ret
jecxz
xor
sbb
stos
jge
dec
repz
push
dec
out
negl
in
mov
enter
mov
cwtl
in
jo
idiv
aas
es
lcall
xchg
std
push
or
sbb
sub
imul
xor
mov
pop
test
das
xchg
adc
dec
insl
push
adc
outsl
inc
cli
std
inc
jg
inc
sahf
pop
into
cmp
or
outsl
cmp
dec
xor
add
adc
sbb
mov
gs
shr
jno
repz
insb
pusha
dec
pop
imul
aad
stos
cmpsb
sub
pop
and
scas
pushf
rorl
pop
pop
sbb
imul
std
les
mul
movb
mov
iret
xor
daa
daa
push
ds
sub
addr16
adc
mull
add
add
sub
jecxz
scas
dec
fisttpl
mov
cmp
sub
push
or
jnp
cltd
mov
aad
mov
das
sub
imul
xlat
insl
fldenv
addr16
jg
push
imul
sahf
push
push
lods
cltd
mov
sbb
add
lock
shlb
mov
fdivrl
xor
mov
in
adc
push
pop
stos
loope
test
add
fwait
aas
popl
movsl
mov
faddp
test
or
es
mov
repz
fs
call
imulb
jne
jp
ds
dec
dec
mov
mov
cli
pop
test
dec
popf
lahf
and
inc
xor
xchg
push
les
cmp
mov
sub
jg
push
icebp
pop
lcall
lcall
cmp
repnz
sarb
mov
out
lods
ret
out
je
popa
push
dec
xor
loopne
out
jne
clc
mov
mov
pop
loop
push
loopne
inc
adc
cmp
out
pop
loopne
mov
jle
mov
inc
into
lahf
enterw
push
xchg
push
fildl
sbb
movsb
sub
ret
ja
add
push
es
add
xor
scas
sub
loopne
xor
ss
imul
data16
fidivrs
mov
xchg
ljmp
xchg
mov
and
pop
rcrl
dec
mov
mov
ja
imul
sub
js
jecxz
xchg
cmp
lds
mov
enter
push
test
sbb
lsl
pop
xchg
sbb
adc
mov
ja
push
inc
negb
inc
cmpsl
ret
lret
es
sbb
dec
xor
jo
sub
sbb
push
in
lahf
jo
bound
or
prefetchwt1
adcl
push
pop
loop
pop
or
xchg
or
jge
mov
outsb
dec
frstor
xor
mov
add
repnz
pop
repz
pop
cmp
push
push
ret
fstps
movl
mov
lcall
ret
fistpll
lahf
fsubrl
lods
adc
lods
add
add
add
dec
ss
scas
loope
loop
inc
iret
add
mov
mov
imul
fidivl
pop
or
pop
mov
push
push
sbbb
mov
sub
mov
ror
cmp
pop
int3
xor
cmp
xor
push
sbbb
mov
ret
inc
sub
xchg
mov
cmpsl
inc
std
mull
mov
rorb
in
fdivrl
lea
jns
xchg
mov
adc
lods
icebp
mov
cmp
add
scas
lods
and
dec
enter
das
pop
pop
or
scas
mov
mov
or
pop
lds
divb
lcall
xor
cmp
iret
sbb
imul
pushf
mov
sbb
or
inc
push
clc
xchg
enter
or
add
sti
test
dec
roll
jg
cmp
adc
jnp
adc
and
dec
adc
out
cs
dec
pop
fsubr
dec
insl
scas
adc
sub
adc
outsl
popf
and
mov
fwait
sbb
iret
insb
jge
xchg
push
mov
popf
ds
in
aas
insl
push
push
in
xchg
mov
xor
or
mov
push
pop
push
ret
popa
jne
mov
push
cwtl
test
inc
stos
inc
add
test
out
outsb
insb
movsl
in
ja
jnp
call
mov
sub
dec
add
push
jo
inc
adc
adc
mov
sbb
aam
arpl
mov
mov
sbb
sub
mov
dec
jno
imul
outsb
lcall
enter
mov
in
lea
popf
xchg
pushf
aas
mov
jne
mov
lahf
mov
pop
cmp
call
test
movsb
xor
shr
arpl
sub
adc
ret
pop
shlb
fimull
xchg
test
das
inc
negl
sub
push
loopne
mov
hlt
or
inc
lcall
cmp
test
fdivrs
ret
mov
mov
in
or
orb
aas
sbb
mov
mov
pop
gs
jb
das
push
inc
and
int
repz
mov
pop
jmp
lcall
rclb
push
and
iret
adc
leave
repz
les
inc
fsub
xor
loopne
and
pushf
xchg
xor
jg
popa
data16
mov
lret
icebp
xorl
notl
dec
ss
inc
sbb
jg
cmpsl
sub
jbe
cmp
rcrl
mov
cmpsb
jnp
jbe
div
dec
mov
dec
inc
scas
fiadds
addr16
icebp
loope
ds
adc
or
xchg
popa
sbb
inc
add
push
pop
daa
xor
mov
xor
inc
in
call
aaa
ss
ret
mov
bound
push
or
and
pop
mov
inc
jecxz
idiv
mov
mov
pusha
or
fwait
nop
mov
xchg
std
repnz
xchg
add
je
loope
jecxz
jp
imul
push
or
xchg
sub
xchg
fldt
and
dec
js
hlt
mov
jno,pn
mov
shrb
xor
inc
cmp
pushf
or
out
push
add
fisubrl
js
mov
xor
ljmp
add
pop
in
addb
bound
jne
push
cld
aas
adc
daa
sbb
jb
fnsave
mov
outsb
notb
adcl
xchg
mov
push
test
lock
jo
jns
push
mov
adc
push
addr16
fstl
inc
addl
jmp
xchg
movsl
mov
gs
fcomps
into
aaa
add
pop
cli
popf
clc
stos
cwtl
subb
addr16
jle
xchg
dec
or
outsb
inc
xor
loope
mov
xchg
bound
adc
es
adc
xor
jne
in
push
mov
dec
cmpb
mov
push
out
daa
enter
cmpsb
inc
xlat
adc
pop
add
and
outsl
shlb
sub
icebp
inc
adc
push
jnp
sbb
lods
adc
adc
and
in
lds
fstps
test
or
xorb
stos
jmp
out
ss
add
xchg
ljmp
push
jae
push
cmpsl
mov
daa
dec
imul
nop
mov
push
mov
fwait
sub
not
push
insb
and
dec
roll
movsb
push
jne
idiv
dec
xchg
cli
add
inc
sbb
fnstenv
scas
add
jmp
xor
lock
xchg
rorl
lods
xor
into
jp
xchg
push
sbb
mov
outsb
push
sti
out
shlb
mov
and
jnp
adc
xchg
mov
mov
test
mov
pop
cmp
movsb
subl
inc
nop
pusha
and
cmp
or
pop
sub
inc
mov
mov
pop
out
push
mov
bound
inc
nop
sub
in
pop
xchg
push
xchg
stc
jns
xchg
or
jge
or
dec
enter
stos
lock
fdivrs
pop
or
lock
jns
int
cmp
sub
ljmp
mov
adc
fnstsw
pop
cmp
jl
add
push
adc
push
adc
int3
adc
lret
adc
pop
xchg
dec
xchg
mov
js
pop
sbb
out
aas
mov
outsb
dec
out
inc
cmc
xchg
roll
and
lea
xor
inc
loop
inc
gs
jmp
out
sbb
test
rorl
cmp
dec
adc
jl
rclb
add
int
inc
subb
mov
and
jecxz
sahf
push
mov
mov
pop
dec
add
xchg
sub
popf
cwtl
mov
andl
mov
push
ficoml
adc
stos
push
fbld
sti
sti
and
and
jp
fisubl
js
pop
bound
sbb
cmpsl
test
repnz
dec
pusha
add
or
js
test
shrl
mov
inc
in
push
sbbl
xor
scas
loope
push
stc
push
iret
test
ss
push
call
dec
add
inc
ret
dec
lods
sarl
inc
dec
and
dec
mov
jno
cltd
aam
int3
roll
mov
pop
sub
jne
push
rcl
aam
outsb
les
cmp
clc
lds
dec
out
cmp
adc
shrb
and
ja
rorl
rclb
push
fxch
adc
mov
ljmp
mov
fildll
xchg
add
dec
sub
fwait
movsl
scas
test
sub
enter
cmpsb
movsb
out
sub
mov
imul
xchg
rclb
push
fldl
int
or
loope
and
inc
sub
mov
flds
and
dec
mov
add
or
cmp
cmp
repz
sahf
data16
andl
lret
and
jge
cmp
mov
std
outsl
push
fcom
inc
fisubl
shlb
clc
and
mov
call
adc
insb
adc
push
pop
push
pop
js
sbb
mov
das
jge
jge
jecxz
inc
int3
ret
inc
jae
jae
imull
xor
inc
lret
pop
std
add
int
add
shrb
stos
dec
int3
fisttps
shl
sbb
in
sub
test
cmp
inc
aad
xor
je
in
or
ja
aaa
jbe
push
adc
cmp
ljmp
mov
jmp
mov
sub
inc
jbe
xchg
xor
sbbl
test
mov
mov
mov
fwait
inc
jns
push
popa
movsb
pop
mov
sbb
jmp
xchg
xor
and
aam
jnp
xchg
pop
xor
add
inc
adc
cmpsl
imul
cmp
inc
iret
test
fnstenv
test
sarb
clc
insl
push
mov
push
jbe
insb
das
mov
add
adcb
pop
popa
xor
lods
outsb
jne
inc
pop
xchg
fstl
inc
mov
js
dec
iret
jecxz
stos
sbb
incb
jne
sti
adc
mov
or
mov
sahf
cmp
and
adc
sub
mov
stos
aas
dec
out
mov
in
mov
dec
shll
sub
xor
rol
and
mov
lahf
hlt
rcll
xchg
xlat
cmp
loope
pop
outsl
xor
sub
insb
sbb
cmpsl
shll
ds
xchg
repnz
sub
mov
xchg
mov
fbld
hlt
push
repnz
dec
cmp
in
bswap
cwtl
popf
jne
sahf
xor
sub
add
outsl
ds
lods
mov
jne
andb
incb
in
jo
cmp
jnp
or
adc
mov
xor
or
inc
or
flds
xchg
dec
iret
aad
loop
push
repz
xchg
test
les
push
rcrl
adc
lods
sbb
jae
xchg
adc
sbb
jno
xlat
test
xchg
inc
es
popf
std
pop
repnz
pusha
andb
cmp
push
pushf
inc
add
leave
imul
insl
jmp
jp
lods
sub
sub
bound
mov
bound
xor
rep
adc
aam
mov
sbb
fyl2xp1
call
mov
xor
out
int
dec
cmc
adc
mov
or
cmp
nop
cwtl
cmp
add
ja
jo
repz
mov
into
sbb
jge
lods
add
adc
pop
mov
pop
adc
or
cmp
dec
lock
jecxz
push
pop
shrl
push
inc
jg
daa
push
cmpsl
fimull
subl
and
pop
in
orb
in
mov
push
arpl
mov
nopl
test
mov
add
sbbb
fcmovne
dec
xchg
ss
add
xchg
and
inc
mov
adc
jg
cmp
test
push
mulb
or
data16
test
clc
out
add
fstpt
xor
sub
lret
scas
lcall
cli
lcall
push
ja
outsb
push
ds
loopne
rol
adc
stos
rcll
lret
pop
aam
mov
push
adc
lret
aad
sbb
push
frstor
dec
xchg
mov
sbb
adc
lahf
jno
daa
fnstsw
dec
inc
insl
lahf
movsb
imul
rcrl
sub
out
out
shll
out
mov
int3
mov
in
mov
roll
or
adc
cmp
movsb
call
pop
cs
movsb
lods
dec
hlt
addr16
and
scas
mov
lods
sarl
cld
and
push
dec
ds
or
nop
mov
xchg
or
cli
ficoms
ds
shll
out
jmp
lds
mov
sub
mov
in
sbb
cmpsl
aad
je
inc
enter
jb
push
test
and
nop
or
xor
or
fpatan
inc
xor
cmp
add
inc
xorb
fs
mov
nop
test
adc
add
divl
stos
mov
or
leave
out
xchg
shr
and
jne
sahf
add
in
cld
mov
scas
test
rol
mov
lds
pop
or
jmp
sub
mov
push
cwtl
xchg
or
xchg
lods
jg
inc
fld
test
push
mov
pop
andb
sahf
mov
je
or
sar
adc
adc
mov
push
add
add
rcll
test
mov
insl
pop
fildl
aaa
cwtl
add
lret
sbb
adc
scas
sub
hlt
jle
push
jmp
dec
dec
cltd
sub
pop
decl
cmp
xchg
jbe
sub
xchg
sbb
mov
push
in
repnz
fsubrl
mov
xchg
push
addl
push
movsb
ljmp
jnp
jnp
mov
cld
in
fisttpll
jns,pt
lds
aad
xor
repnz
loopne
test
fbld
ja
cmp
fidivrl
jle
pop
jmp
dec
ret
fs
pop
mov
mov
xor
pop
sbb
cmc
sub
jae
mov
jb
cmp
ret
cmp
addr16
mov
out
out
movsb
and
repnz
dec
pushf
insl
add
dec
and
stos
popf
in
and
jnp
pop
inc
jmp
js
insb
loope
fcomi
pop
pop
and
dec
and
sub
lret
jbe
or
push
hlt
cmp
fisubl
roll
neg
js
push
jae
xor
push
cmpsl
out
adcb
dec
xlat
sub
sbb
adcl
scas
shlb
fsubs
dec
jb
jae
loope
inc
cli
push
adc
add
jns
sbb
pushf
sbb
push
mov
sub
gs
bound
push
push
jle
cwtl
out
cmp
pop
out
adc
lods
rcll
jg
mov
sbb
jl
in
mov
mov
loope
inc
ret
pop
js
shrl
sarl
add
jns
int3
mov
push
lods
call
shll
xlat
shl
mov
xor
test
push
mov
push
xor
and
inc
js
in
inc
adc
xor
dec
loop
push
sbb
push
cmp
pop
out
inc
adc
and
hlt
dec
repz
dec
clc
cltd
and
sbb
sub
imul
addb
shll
mov
adc
xchg
mov
aaa
out
mov
jmp
jo
ja
ljmp
aad
sbb
mov
add
xchg
cmpb
push
loop
out
push
in
ret
mov
cmp
push
mov
rolb
pop
lods
dec
dec
xchg
inc
adc
xlat
mov
jnp
lahf
inc
clc
jne
jmp
movsl
dec
xchg
mov
xor
aad
ss
hlt
int3
repz
mov
xlat
in
xor
and
stos
sbb
outsl
push
inc
fisttpl
mov
test
imul
lods
sbb
sbb
fsubl
notb
push
adc
pop
test
mov
mov
push
ss
lods
jecxz
mov
rcrb
enter
xor
sub
movsb
sti
mov
cmpsl
jne
dec
int3
or
mov
or
nop
xchg
test
xchg
xor
rorb
and
hlt
adc
jmp
sbb
mov
lret
popf
dec
sbb
roll
enter
xorb
movsl
mov
imul
js
mov
fistl
out
loope
andl
out
inc
mov
test
fimull
mov
or
bound
scas
mov
ds
adc
mov
roll
lock
inc
dec
jl
in
jge
outsl
xorl
and
stos
test
xlat
daa
ficoml
out
movsb
mov
sahf
hlt
sbb
and
sarl
jl
pop
loopne
push
push
data16
inc
mov
push
lea
sub
and
insb
fidivs
cmpb
cmp
ljmp
mov
inc
bound
sub
adc
push
xchg
pusha
adc
sub
jg
jmp
dec
ljmp
dec
repz
arpl
int3
lea
lahf
cwtl
mov
sub
dec
inc
xchg
xchg
fbld
insl
or
mov
jo
cmp
xor
mov
loopne
negl
cld
imul
pop
add
push
mov
sbb
dec
jmp
mov
imul
ret
bound
jns
rcll
fsubr
lret
sbb
and
in
fmulp
fcmovu
out
rcrb
std
scas
movsb
cmp
xchg
mov
cmp
insb
pop
inc
popa
mov
add
pop
push
repnz
inc
dec
xor
xchg
or
jnp
scas
pushf
outsb
xchg
cmpsl
ds
cmp
stos
xchg
mov
pop
cmp
dec
or
pusha
or
jle
cmp
mov
out
rorl
push
adc
iret
jl
cli
int
cmc
cs
aas
insl
xor
jmp
sub
mov
and
imul
jg
loope
xchg
paddsw
mov
xor
scas
dec
das
dec
sbb
int
cwtl
dec
push
cwtl
and
cltd
sahf
push
mov
lock
incl
jae
push
mov
mov
insl
jns
sbb
mov
xchg
mov
shll
mov
pushf
int
lret
or
mov
and
push
iret
push
xchg
mov
popf
dec
or
sbb
sbb
hlt
jns
pop
push
or
mov
mov
ja
jns
orl
test
jle
cltd
sub
sti
and
pop
mov
push
cmp
imul
sarl
mov
pop
cmpsb
pop
insl
cmc
je
mov
popa
inc
add
insb
addr16
hlt
out
in
add
adc
movsl
es
jnp
js
lret
mov
xor
pop
push
leave
sub
sbb
dec
enter
in
adc
inc
rcr
aaa
ja
ljmp
data16
insb
mov
sbb
outsb
inc
lret
sbb
inc
andb
push
testl
test
rorl
adc
jg
xor
fsubl
fmull
pusha
sbb
test
adc
pop
lods
fstps
xchg
xchg
test
or
mov
mov
jge
push
movsb
adc
fucom
scas
and
add
dec
cmp
pop
dec
sbb
lret
outsb
lcall
xor
xchg
mov
jo
push
loope
jbe
aad
rcrl
add
xchg
ds
sti
and
cmp
fcmovb
mov
sub
mov
mov
inc
mov
ficoms
dec
mov
mov
add
ja
ss
and
sbb
jp
pop
out
ss
jns
push
fistps
popa
and
pop
pop
jbe
or
mov
outsl
xchg
test
jbe
loopne
loope,pt
inc
scas
fwait
and
xor
pop
ret
scas
enter
test
lret
movsb
adc
and
addr16
movsb
testl
push
test
repnz
sahf
sub
push
shrb
xor
jecxz
mov
xchg
enter
sti
testb
fmuls
clc
scas
arpl
adc
fisttpl
lret
aam
push
cmp
adc
fwait
sub
sbb
scas
imul
sti
xlat
push
mov
sahf
shlb
mov
lock
add
dec
cwtl
mov
mov
lahf
pop
mov
dec
aas
adc
pop
mov
cmpsb
dec
fmull
out
aad
adcl
aad
push
pop
mov
mov
sub
stc
or
adc
sti
or
and
lea
add
adc
sub
outsb
popf
bound
out
cmp
jae
cmp
pop
jo
repnz
data16
stos
mov
lcall
in
push
repnz
arpl
in
or
insb
cmp
addr16
fdivp
inc
mov
mov
pushf
and
pop
xor
mov
xor
sub
push
loope
nop
fdivl
sbb
dec
mov
adc
mov
mov
inc
stos
les
js
out
ja
pop
add
push
sub
test
and
mov
popf
shll
pop
pop
das
rcll
adcb
jecxz
jns
xchg
ljmp
dec
aas
pop
pop
xor
inc
es
mov
shr
out
dec
push
xchg
and
sahf
dec
out
lods
scas
cs
jno
sti
mov
stc
rclb
aad
jl
scas
jb
sub
inc
pusha
dec
ret
mov
push
inc
in
insb
je
cmpsl
pop
bound
mov
ljmp
dec
mov
in
icebp
enter
dec
je
dec
out
mov
cmp
jge
xor
es
dec
in
push
inc
mov
jmp
adc
movsb
add
lcall
nop
xchg
sbb
lds
movsb
cmp
loopne
mov
inc
mov
fs
cmpxchg
nop
mov
lret
shr
ret
nop
insl
loope
push
xchg
mov
repnz
stc
push
jmp
cmpsl
pusha
or
adc
lahf
aaa
or
stos
dec
cmp
pushf
je
xchg
sti
add
pop
movsl
adc
pop
icebp
sahf
jmp
cmp
and
jo
out
jecxz
fwait
jg
arpl
fcomp
inc
or
mov
inc
movsl
inc
aad
xchg
dec
jbe
shl
sub
sahf
add
fst
dec
dec
dec
jmp
pop
repnz
popa
arpl
mov
movsl
mov
insl
dec
mov
push
into
aam
add
cmp
mov
pop
insb
mov
dec
into
ss
fisubs
jb
xchg
sti
cltd
lock
pop
ret
ret
xchg
add
jno
leave
inc
fwait
sbb
xor
cmp
mov
cs
push
xlat
sbb
xchg
mov
push
lods
jae
pop
lods
pop
cmp
cmp
push
pop
dec
mov
loope
cmp
bound
sbb
lock
mov
lods
orb
outsb
movsb
stos
mov
or
push
daa
push
shlb
mov
enter
out
or
mov
xor
mov
pop
lods
rcll
mov
xor
ljmp
push
adc
jno
push
jle
fwait
add
nop
adc
std
add
jecxz
fdivl
rorl
ret
cmp
sub
mov
loopne
dec
dec
movsl
and
out
scas
push
push
jmp
mov
sbb
inc
xor
add
out
insb
scas
movsl
and
push
cltd
ret
inc
sbb
push
push
ja
enter
mov
cwtl
and
adc
fwait
mov
cmp
dec
xchg
out
mov
cmpsb
scas
sub
imul
sahf
inc
std
pop
outsl
push
sbb
xchg
pop
lahf
mov
sub
sub
insl
xor
jb
shlb
mov
mov
cmp
xchg
aas
lods
test
mov
sub
cmp
dec
dec
addb
add
and
inc
es
loopne
mov
ds
daa
out
add
adc
call
fcoms
jmp
insb
mov
sub
ds
pop
jge
mov
inc
imul
incl
xchg
mov
cmp
mov
call
xor
popf
les
mov
scas
add
dec
dec
mov
mov
iret
dec
std
mov
lods
xchg
insl
cli
pop
pop
jp
mov
cmp
push
mov
mov
mov
ss
shlb
cmp
ds
xchg
loop
leave
mov
push
gs
test
aad
call
in
pop
outsb
xchg
and
lods
mov
mov
sarb
out
inc
cmp
mov
inc
shl
inc
fldcw
loope
js
add
add
icebp
jae
insb
and
sbb
int
call
lcall
push
jmp
adc
push
not
add
outsl
popa
mov
dec
sbb
bound
nop
popf
push
movsl
jp
jg
cltd
sub
jb
jmp
sub
xor
shrl
aas
imul
inc
adc
std
fs
ret
outsb
dec
fnstsw
sahf
popf
adc
stos
lods
mov
push
jae
daa
ljmp
imul
aam
imul
roll
or
mov
mov
ss
mov
mov
orb
or
jbe
and
stos
add
sub
pop
cmp
test
dec
adc
sbb
leave
out
pop
cmp
push
aad
mov
ljmp
js
xchg
shrb
jg
push
outsb
jo
scas
sub
xor
movsb
xchg
and
pusha
sub
mov
inc
mov
mov
cld
icebp
dec
lock
dec
push
jl
cli
mov
dec
fistpll
mov
xchg
mov
jp
mov
jecxz
pop
sub
ljmp
cltd
push
mov
leave
mov
lret
push
lret
jne
call
bound
les
sbbl
ds
das
cli
test
dec
push
testl
je
fdivrp
imul
cmpsl
xchg
pop
add
loopne
daa
faddl
push
inc
mov
push
mov
imul
cmc
scas
mov
jmp
mov
push
inc
jnp
enter
push
lahf
pop
dec
adc
and
adc
test
pushf
pushf
jle
call
in
pop
xchg
aas
pop
ljmp
filds
and
add
jmp
orb
and
or
or
push
rcrb
inc
mov
aam
lret
rcl
stc
repz
xchg
xor
sub
push
adc
cltd
shlb
lods
dec
and
lea
mov
push
pusha
lret
pushf
test
loop
fwait
jge
lock
in
lods
sub
adc
push
stos
xchg
stos
frstor
out
pop
mov
aad
aam
adc
inc
pop
test
mov
xchg
ret
jo
sub
push
pushf
ret
fsubrs
push
sub
or
sbb
mov
push
sub
loopne
jnp
pop
and
cmpsb
xchg
xor
stos
sub
mov
xor
les
cmpl
scas
bnd
cltd
jnp
adc
dec
adc
or
mov
cltd
mov
movl
cmp
lods
push
cli
add
cmp
lock
ret
fcompl
jne
jle
mov
aam
jmp
out
mov
dec
lcall
cmp
test
mov
sahf
scas
cmp
jp
pop
pop
rcrl
jl
add
xchg
stos
das
arpl
pop
mov
inc
dec
loop
sub
mov
cmp
cltd
mov
outsb
jno
mull
jmp
test
cwtl
movl
xchg
sbb
in
xor
lcall
stos
hlt
out
lods
shlb
shl
bound
lea
dec
or
mov
in
mov
push
outsl
setns
jl
rclb
pushf
stc
add
sub
mov
xchg
push
jmp
sbb
dec
mov
pushf
mov
loop
dec
xchg
pop
std
sti
imul
js
sbbl
mov
xchg
cld
jge
xor
sbb
pop
and
int3
outsb
lahf
subl
mov
xchg
in
nop
inc
push
repz
ret
clc
pop
scas
mov
insl
ds
xchg
inc
loop
sub
mov
jo
fiadds
push
pop
lret
mov
xchg
sbb
mov
mov
cli
stos
nop
out
mov
add
mov
xchg
lcall
cld
nop
or
ret
es
lock
pushf
cltd
mov
or
insb
ret
sbb
xlat
pop
call
mov
jne
adc
mov
icebp
dec
xchg
cmp
sub
mov
fneni(8087
fs
and
xchg
lods
or
and
push
pop
mov
mov
fisubs
call
mov
leave
pop
adc
test
mov
pop
xchg
arpl
pop
and
push
lods
ds
pop
shrl
stos
cmp
mov
xor
mov
mov
pop
sbb
gs
icebp
jl
imul
mov
pop
push
ja
fnstcw
xor
sarb
fidivrs
jbe
sub
notl
and
adc
push
push
inc
push
movsl
cmp
jnp
jmp
decb
ds
shrl
std
and
lock
push
cmp
xchg
call
add
out
fsubr
loop
dec
int3
cld
stc
lea
pop
cmp
icebp
je
and
push
iret
mov
loop
rclb
popf
popa
out
push
pop
or
push
lock
mov
mov
or
sub
pop
mov
aaa
rcrb
nop
add
jge
jge
imull
in
adc
mov
jmp
adc
addr16
inc
adc
js
cld
das
pop
or
xor
out
xlat
scas
mov
jp
push
aad
jl
jae
xchg
push
lret
sbb
dec
jmp
scas
dec
lods
loopne
lods
inc
adc
lahf
sti
push
inc
std
pop
ds
pop
aad
mov
cltd
push
enter
icebp
jp
sbb
mov
fwait
inc
mov
fnstenv
clc
lcall
pop
cwtl
or
pushf
outsl
mov
lahf
lret
jle
cs
cmp
in
xchg
outsb
mov
sbb
xor
pop
cmp
ret
mov
add
push
inc
mov
mov
fdivl
jecxz
inc
mov
dec
mov
pop
dec
pop
add
scas
repnz
push
mov
inc
sbb
cmp
imul
adc
or
negb
jg
cli
sbb
mov
fsts
shlb
in
push
scas
xlat
mov
daa
xchg
lea
cmp
nop
pop
data16
mov
ret
push
sahf
sarl
ja
imul
cltd
lock
divb
inc
mov
es
cli
push
fldl2t
fists
sti
adc
mov
jno
xchg
cmp
mov
xchg
test
aaa
inc
stos
mov
cmp
shll
sub
rcrl
test
sbb
jge
in
jns
rcrl
or
mov
add
lds
fwait
dec
mov
pop
fistl
push
mov
stos
and
jge
outsl
in
fsubrs
and
dec
inc
lret
iret
adc
ficompl
push
scas
lahf
inc
adc
jb
adc
aas
inc
push
push
fcmove
adc
xchg
jnp
loop
rolb
movsl
push
xor
outsb
aam
stc
push
les
aas
mov
frstor
rol
cmp
push
mov
add
xor
dec
jg
mov
jnp
std
inc
adc
es
xor
jmp
push
imul
push
xcrypt-ctr
cmpsl
fcmovb
push
jns
pop
mov
ja
les
es
sti
or
inc
mov
leave
call
adc
gs
cwtl
negb
cmp
inc
cmp
push
mov
repnz
sbb
cld
lret
or
enter
or
daa
out
imul
test
push
jnp
adc
js
in
call
jl
rcr
aaa
repz
aam
out
jns
je
mov
rorb
sahf
add
std
xchg
scas
mov
popf
sub
pop
je
jmp
mov
add
hlt
pop
push
rclb
mov
icebp
mov
sub
rorl
push
push
pop
sub
negl
lcall
testl
dec
loope
xchg
sub
pop
pusha
fidivrl
lods
imul
pop
sahf
mull
repnz
rcrb
and
ret
inc
sti
add
adc
cltd
call
push
or
cs
and
movsb
or
mov
xor
mov
call
sbb
test
cmpsb
in
nop
fs
sbb
jb
in
inc
cs
cmp
xlat
push
cltd
xor
mov
mov
lahf
jno
sbb
sub
dec
es
xor
pop
cmp
add
fs
jnp
ja
dec
mov
dec
jmp
mov
mov
mov
sub
push
sub
icebp
mov
cs
sahf
fstl
out
test
cmp
nop
push
add
cltd
decb
push
lods
xchg
dec
int
adc
dec
lcall
lods
testl
sub
addr16
mov
add
dec
and
dec
lds
stos
or
push
adcb
leave
inc
lahf
xchg
adc
or
arpl
fs
filds
test
mov
int
aaa
mov
ss
xor
xchg
mov
in
push
int3
dec
mov
dec
mov
orb
mov
dec
out
inc
sti
mov
shll
repz
dec
movsl
outsb
imulb
xchg
out
jl
mov
dec
sbb
insl
daa
lock
pop
enter
jnp
xor
adc
sbb
jp
scas
dec
mov
dec
jnp
repnz
das
xor
sbb
test
inc
and
in
divl
cld
xchg
cmp
fists
inc
in
push
inc
dec
xchg
int3
movsl
add
roll
cmpb
data16
mov
jae
sbb
mov
or
and
rolb
das
cmp
sbb
push
push
jne
or
mov
xchg
notb
xor
xchg
xchg
sbb
xor
das
xchg
adc
mov
mov
and
mov
xor
rcrl
shrb
dec
sbb
mov
adc
sbb
pushf
popf
aas
jns
adc
sbb
into
mov
jo
les
test
cli
stc
das
inc
clc
out
jg
leave
and
cmp
mov
call
cmc
mov
mov
cwtl
adc
loope
inc
push
xor
cld
jmp
ljmp
push
pop
push
push
sub
push
push
jg
dec
push
data16
sub
cld
into
enter
test
pop
cmc
in
mov
outsl
add
test
mov
jb
mov
test
ja
push
into
imul
es
loope
std
cmp
jmp
in
fcoms
jb
es
dec
out
xchg
mov
push
xlat
sbb
sarb
daa
pop
movsb
cs
loope
fidivs
or
pop
inc
jmp
ret
lods
xchg
sub
in
ds
push
xchg
in
mov
loopne
pop
dec
cmp
or
lods
mov
sbbl
loop
les
sub
nop
mov
mov
adc
mov
sbb
test
hlt
loopne
push
pop
and
ljmp
loopne
rcll
xchg
mov
mov
pop
adc
hlt
addr16
insb
loope
add
test
jge
add
ja
push
outsb
in
sbb
ret
fsubrs
cmpsl
inc
dec
test
jmp
inc
das
mov
mov
cmp
inc
or
nop
xlat
xor
cmp
add
mov
pop
inc
inc
gs
mov
pusha
jp
sbb
cmp
ret
stc
icebp
enter
mov
mov
movsb
lods
int
pop
fcomps
pushf
or
add
int
pop
lret
sbb
notb
call
push
jmp
sbb
cmpsl
dec
jl
adc
js
lcall
xor
push
scas
jns
push
cmp
adc
mov
jnp
xchg
js
dec
addr16
pop
and
test
mov
xchg
inc
insl
jmp
stos
testb
push
xchg
fsubs
xchg
sub
aad
mov
mov
and
in
add
adc
aad
mov
lcall
dec
pop
pop
push
xor
pop
inc
cmpsl
les
xor
repz
push
sbb
aad
push
scas
mov
outsl
add
mov
outsb
pop
ss
xorb
outsl
jae
inc
sbb
mov
rorl
mov
stos
dec
mov
testl
hlt
pop
idivb
sbb
out
push
cld
push
cmp
movsb
pop
jb
imul
cld
sbb
lcall
xor
shlb
pop
insl
xchg
in
call
mov
sbb
sbb
cli
inc
ret
daa
fisttpl
cli
movsb
bound
mov
lcall
or
shlb
dec
mov
xchg
xchg
in
jmp
xor
mov
push
xor
fnstenv
adc
test
es
push
sub
sahf
les
cmpsb
loop
cmpb
or
mov
daa
lret
push
cmp
jecxz
inc
dec
cmp
scas
ja
cmp
push
and
cmp
testb
inc
rclb
repnz
daa
and
sub
xor
mov
cmp
lret
fwait
pop
push
pushw
hlt
add
lock
and
pop
popf
pop
mov
xor
shrb
pop
mov
sbb
in
add
into
out
mov
lahf
ss
out
cmpsb
mov
mov
call
fmull
jle
xchg
xchg
enter
xchg
xchg
addb
cmpsl
adc
xlat
xchg
sbb
pushf
sub
adc
out
lock
pop
sub
sbb
push
sbbl
push
sbb
std
lret
jb
push
xchg
iret
jmp
dec
push
mov
fcomps
out
sbb
test
jl
int
adc
and
or
js
sbb
dec
scas
xchg
jno
cmp
mov
std
iret
testb
loope
aaa
jl
add
push
int
mov
orb
enter
arpl
add
mov
ror
and
or
and
cmp
clc
jns
push
stos
or
push
lods
js
jbe
dec
pop
push
sbb
mov
lret
fisubl
ret
cmp
inc
push
unpcklps
adc
loopne
cmp
jns
pop
ljmp
repz
iret
insb
filds
sbb
les
jbe
jb
pop
push
mov
into
test
pusha
int
std
sub
repz
repz
aam
xlat
sbb
push
test
out
adcb
loope
inc
pop
in
addr16
clc
mov
ds
cmpsl
in
rcrl
test
repnz
in
pop
push
sub
jae
jl
pop
ss
cltd
enter
jp
mov
test
add
cmpsl
rcr
xchg
call
xchg
imulb
in
push
sbb
xchg
decb
lea
rorb
adc
add
adc
mov
mov
dec
or
lahf
jge
test
aam
push
cmp
pop
push
js
js
cli
out
arpl
imul
outsl
and
test
cltd
insl
sahf
mov
mov
lret
jg
xor
inc
and
rcll
and
cwtl
stos
outsb
out
xlat
cmp
add
or
stos
mov
jno
into
out
lret
dec
int3
xchg
dec
inc
aam
mov
mov
sub
loopne
ret
pushf
push
sub
push
sub
inc
xor
sbb
sbb
repz
loopne
sbb
lcall
dec
iret
mov
or
inc
xor
scas
add
orl
jecxz
cmpsb
out
sbb
pusha
pop
cld
dec
scas
and
jl
pop
in
mov
repnz
xchg
or
adc
das
loope
scas
add
jae
pop
out
movsb
push
pop
imul
cwtl
aad
push
fisttps
clc
orl
es
in
int3
cltd
cmpsl
jne
ljmp
jle
leave
addr16
push
rcll
mov
push
or
movsb
lods
call
int
call
cmp
bnd
ret
mov
lods
scas
push
xor
or
jl
or
inc
std
and
pop
inc
inc
adc
imul
pop
pop
aam
data16
dec
push
sub
cmp
inc
lcall
jnp,pt
push
add
pop
fldt
mov
sbb
lret
inc
and
clc
popf
push
pop
pushf
lcall
shrl
mov
xor
xchg
test
cmp
sbb
jnp
out
xchg
sti
aam
cwtl
hlt
pop
fldt
popa
xlat
dec
dec
mov
icebp
mov
cmc
jge
std
repz
fisubs
aas
fstpl
jl
mov
cmp
cmp
fistps
fs
insl
or
stos
xchg
cmp
pop
mov
fst
jnp
imul
stc
pop
imul
mov
sbb
popa
push
adc
cmp
sub
stos
aaa
add
sahf
jle
insl
mov
pusha
insb
pop
bound
jge
sbb
hlt
or
js
adc
mov
ficompl
jbe
push
lea
flds
dec
loope
pop
adc
fistps
das
push
dec
and
nop
xchg
jp
xchg
mov
mov
les
pop
mov
dec
adc
add
inc
popa
dec
lods
js
mov
cltd
into
ljmp
fisttps
movsb
dec
inc
and
daa
inc
dec
push
push
xchg
push
and
je
mov
xor
pop
daa
mov
cmpsb
push
iret
cmp
lds
cmc
aaa
popf
fildll
pop
xchg
inc
xor
cmp
sahf
jbe
cmpsb
daa
sarb
test
data16
insl
ss
mov
cltd
adc
jmp
sub
sbb
cmp
inc
in
test
push
jecxz
and
or
jge
jo
mov
iret
ja
xchg
imul
dec
cld
icebp
lea
sbb
cmc
icebp
adc
and
xchg
aas
push
lret
xor
mov
sbb
mov
mov
stc
sbb
xor
mov
fbld
sub
insb
jns
and
out
jno
sbbl
jle
fstpt
push
loop
mov
inc
sub
test
lcall
rcrl
testl
movsb
mov
and
stos
or
fisubrl
lock
jmp
dec
repz
dec
out
xor
xchg
xchg
push
lcall
cmpsl
inc
or
xchg
sti
and
push
lret
adc
mov
fmuls
xchg
sarl
jmp
push
bound
jae
les
jns
insl
rcll
mov
dec
inc
aaa
rcll
ret
dec
shr
sub
sbb
out
jae
es
lods
in
jo
lods
in
das
mov
in
dec
imul
out
adc
pop
inc
mov
loop
lock
add
dec
cmp
cmpl
mov
addr16
pop
cld
mov
lock
sahf
xchg
push
push
xor
rolb
mov
in
or
out
call
fildll
push
or
data16
adcb
imul
js
jge
sbb
dec
test
and
xchg
xchg
lahf
jno
cmp
dec
sub
out
pusha
jno
out
cmp
sub
inc
and
push
pop
push
or
dec
in
repnz
sub
pushf
mov
sub
rsm
jne
insl
xchg
and
adc
mov
add
or
mov
out
mov
out
sbb
cmp
adc
into
andb
hlt
push
sbb
jnp
mov
and
sbb
lcall
mov
aaa
add
leave
dec
cmp
int3
mov
inc
bnd
outsb
mov
lret
jle
pop
or
or
test
fstpl
dec
std
xlat
fst
out
es
iret
clc
cld
mov
sbb
add
dec
mov
vmovaps
or
cli
je
movsb
jnp
aam
push
mov
xlat
and
roll
push
aad
mov
cmp
enter
rcrl
insl
and
vmread
int3
push
push
xor
flds
test
add
adc
sbb
xchg
mov
sbb
movsl
add
mov
jle
jg
xchg
lret
orl
ljmp
xchg
movsl
scas
fldenv
adc
xor
mov
sahf
and
or
push
testl
and
jg
push
addb
cwtl
mov
mov
shrb
ljmp
call
imulb
inc
cltd
xlat
xor
divb
test
ret
sub
lods
xchg
jg
and
ja
int3
outsl
jns
xchg
fildll
inc
push
lret
pop
test
out
xlat
cmc
fbld
push
js
shlb
pop
and
xchg
shrd
sub
add
mov
fnclex
jp
push
jp
hlt
loopne
aam
xchg
cld
mov
mov
mov
int3
ds
mov
shl
dec
ss
enter
cli
pop
sbb
or
xor
push
adc
fcmovb
xor
cmpsb
mov
xchg
xchg
daa
int
jbe
mov
mov
jl
aaa
mov
and
and
inc
shll
lret
push
fsubr
fildll
jno
xchg
sti
jno
pop
xchg
and
fdivr
repnz
push
loope,pt
mov
scas
lret
test
jl
das
cmpb
outsl
dec
arpl
repz
lret
enter
test
dec
inc
or
popa
add
mov
aas
jecxz
mov
or
push
add
neg
push
pop
mov
mov
mov
dec
add
ret
ja
inc
insb
xor
dec
arpl
pop
into
in
push
jge
adc
enter
inc
mov
out
leave
mov
fisubrl
or
mov
mov
ds
shlb
sub
lds
fcomi
sub
out
psubd
sarl
pop
in
and
test
mov
or
mov
pop
imul
sti
push
xor
in
pop
pop
push
xchg
repz
maxps
scas
pop
aaa
jp
mov
pop
inc
pop
andl
xlat
jmp
mov
sub
out
daa
test
lods
jmp
mov
fdiv
lret
stos
lea
test
add
xlat
subl
mov
lret
dec
repnz
sub
imul
jne
aad
adc
pop
enter
loop
ret
cwtl
aad
scas
pop
popf
mov
out
gs
and
xor
and
mov
mov
dec
scas
mov
pop
popa
shrl
jg
inc
mov
cmpsl
movsb
iret
int3
xor
inc
sbb
cltd
outsb
movsl
pusha
push
iret
xchg
notl
dec
xchg
cmp
outsl
cmpsb
hlt
lret
fidivrl
inc
push
xchg
or
imul
pop
sbb
and
call
ja
pop
scas
imul
or
inc
adc
and
or
mov
ss
jmp
pop
das
sbb
stos
inc
outsl
push
adc
mov
in
mov
jmp
mov
mov
fbld
rcll
mov
cmc
lret
mov
fwait
loopne
jmp
pop
push
mov
jecxz
pop
shrl
ja
cld
jmp
movsb
xlat
or
es
jmp
mov
rcll
aas
orb
mov
stc
jo
sarb
in
pop
test
cmp
push
sbb
loopne
fisubrs
int3
in
mov
ret
icebp
stos
lock
dec
mov
mov
hlt
adc
pop
loop
inc
mov
mov
das
mov
out
and
icebp
pop
fsubrs
leave
and
add
pop
xchg
and
cmp
pusha
out
dec
push
mov
lret
dec
jmp
pop
mov
xor
sub
call
push
mov
adc
or
dec
pop
in
in
adc
test
loop
adc
fs
jle
xchg
inc
jl
subl
adc
rol
jmp
xchg
mov
mov
add
pop
shl
pop
stc
jno
and
adc
cmp
out
push
call
fisubrs
fildll
pop
pop
and
iret
xchg
pop
jb
hlt
mov
repnz
cld
hlt
mov
and
mov
xchg
aaa
or
rorb
push
xchg
insw
xchg
ret
out
mov
and
add
mov
inc
ret
es
repnz
pushf
leave
into
mov
movsl
bound
ja
or
push
inc
mov
insl
dec
rcl
add
ret
popa
int3
mov
mov
push
test
adc
jne
test
jecxz
adc
ljmp
js
cmp
sbb
sub
fldenv
fistl
cmp
arpl
cmp
pushf
and
pop
fcompl
les
sbb
inc
mov
inc
sbb
outsb
sbb
or
adc
dec
adc
and
les
cmp
mov
test
call
sbb
jle
push
mov
fistl
test
sbb
sub
leave
add
xchg
sbb
lcall
push
in
push
jge
pop
sbb
repz
popf
lret
cmc
iret
gs
mov
sti
lods
pop
cmc
mov
sbbb
jl
and
stos
jge
add
loope
cmc
jl
and
mov
aad
xchg
xor
mov
or
aas
lods
push
pop
mov
negl
ficomps
iret
jne
inc
ja
inc
jno
aaa
shll
xor
dec
jo
test
jnp
ljmp
jle
mov
cmp
cmp
test
repz
sub
rolb
aad
xchg
and
in
rcr
adc
sti
jns
dec
loope
lahf
cmp
dec
enterw
mov
into
xchg
xchg
mov
cmc
inc
shll
cmp
or
inc
inc
and
sbbb
sub
add
sub
push
jno
lods
daa
out
les
pushf
mov
cmp
out
pop
mov
icebp
filds
stc
je
sub
push
iret
in
mov
pop
and
repnz
lds
pusha
push
jbe
sbb
movsl
fsub
sbb
jae
test
pop
mov
and
sti
jp
movl
adc
push
data16
add
shll
ret
mov
iret
leave
daa
aam
inc
fildl
out
cld
dec
adc
fisubs
jbe
cmp
jmp
aaa
es
rcll
cld
fdiv
lock
ret
mov
xchg
push
mov
xor
or
sti
push
out
sub
scas
in
jo
int
mov
addr16
push
rolb
adc
jnp
push
or
jecxz
int3
pushf
dec
scas
and
aas
lock
rcrb
jno
lock
inc
loopne
dec
add
adc
pop
or
jae
or
in
mov
push
fisttps
xor
insl
sbbb
outsl
dec
aaa
sub
push
cs
daa
cltd
test
pop
xchg
dec
cs
pop
add
mov
or
jno
mov
pushl
xor
jp
push
and
xor
cli
or
jo
popf
mov
int
ja
out
dec
push
ja
inc
dec
add
mov
stos
sbb
xchg
repz
dec
aaa
andl
fwait
imul
bound
fcoml
ret
xchg
fcompl
push
aas
or
in
mov
les
jmp
sub
jle
sti
iret
repz
loopne
lds
orb
mov
xchg
jl
add
addr16
stos
or
out
xchg
fwait
addl
jo
mov
mov
mov
dec
inc
daa
cwtl
jle
std
leave
mov
movb
arpl
sar
cmp
and
mov
mov
cmp
imul
ret
aaa
shr
add
repnz
fcmovne
imul
lahf
inc
jge
sub
test
and
pusha
dec
sub
dec
and
aad
xchg
xor
mov
and
test
add
ja
pop
cltd
lea
jne
jecxz
movsb
mov
and
mov
mov
ss
jmp
ss
push
xchg
push
pop
sbb
mov
xchg
pop
sub
mov
dec
jecxz
stos
fiadds
aas
xchg
imul
dec
mov
pushf
cmp
jg
sarl
fdivr
cmc
pushf
jp
mov
lock
push
hlt
pop
cmp
scas
push
or
outsl
xchg
dec
mov
cmc
xor
lea
adc
mov
fcmovbe
mov
push
repnz
xchg
sbb
pop
push
mov
jb
ja
jp
xorb
mov
call
imul
and
out
cltd
xchg
test
mov
pop
mov
es
push
outsl
int
mov
lock
repz
mov
int3
dec
xor
xor
cmp
fisubrs
cs
dec
mov
popa
xlat
xor
or
add
jne
nop
loopne
lahf
pop
test
shrl
lods
pop
int
incb
dec
inc
inc
les
push
sub
ret
push
cmp
aam
cmp
loopne
lock
mov
push
fisubl
fsubs
dec
scas
adc
lods
lock
lock
pushf
xchg
and
push
js
test
sub
sbb
iret
jno
dec
es
data16
clc
adc
xchg
jge
cmp
test
and
pop
jae
adcl
inc
and
push
and
pop
dec
popf
and
sbb
inc
mov
xor
inc
xchg
pminsw
mov
cmp
cld
adc
adc
cli
rol
sub
scas
lds
call
test
mov
push
lock
ret
fwait
int
inc
fstl
fildll
mov
mov
ja
movsl
leave
cmp
gs
jmp
aam
mov
lods
adc
aad
add
push
push
rcl
lock
lea
push
nop
sub
popf
repz
cltd
movsb
and
shll
add
inc
lret
rol
cmc
push
sub
in
jnp
ror
jns
std
clc
ret
xor
pop
fwait
cmp
inc
adc
mov
mov
or
add
mov
sub
repnz
sbb
xchg
test
adc
mov
pop
and
jbe
out
dec
mov
dec
outsb
out
adc
das
xchg
push
pop
push
jle
es
mov
repnz
pop
mov
sub
jmp
push
sub
arpl
and
inc
das
aaa
push
pop
lcall
sahf
inc
mov
jge
mov
pop
xchg
adc
gs
jp
lret
addr16
cmp
rcrb
aam
sub
cwtl
out
outsb
test
cs
cmp
pop
fistps
mov
out
aas
push
in
dec
movsb
cmc
data16
mov
test
inc
cmp
outsl
fcoml
into
cmp
jmp
mov
lret
test
sub
aas
lods
pusha
pop
push
sub
mov
popf
sbb
jg
mov
or
jl
cmpb
lods
xor
fiadds
divl
cli
popf
lock
fists
xor
loope
cs
stos
xchg
mov
mov
add
pushf
clc
mov
js
dec
fildl
sti
push
mov
cmp
cmp
fs
fisubrl
dec
pop
adc
ss
movsl
aaa
clc
jo
cmc
insl
cld
jl
mov
pusha
addr16
add
and
rcrl
mov
dec
cmp
hlt
jmp
ds
fs
inc
cli
aam
jns
cmp
cmp
adcb
inc
xor
cli
or
ljmp
icebp
sbb
fwait
cltd
mov
sbb
pop
mov
outsl
inc
pop
jl
shlb
mov
push
test
mov
cmp
hlt
stos
mov
lods
or
pop
mov
pop
ljmp
push
push
icebp
bound
es
jno
shl
add
mov
mov
dec
rorl
or
ljmp
test
adc
aam
xor
cli
inc
inc
test
push
popa
inc
inc
and
negb
int3
xor
cmp
push
je
cmp
add
push
stc
sub
and
out
pop
stc
movsb
loope
sub
call
xor
mov
bound
pop
leave
arpl
and
pusha
mov
movd
stos
sbb
es
push
std
pop
mov
inc
cmp
sub
insb
stos
dec
add
lock
js
test
dec
sub
inc
cmp
out
into
jle
dec
sub
jmp
ja
dec
scas
xchg
add
xorb
js
mov
or
stc
push
pop
bound
lds
sbbb
jo
jbe
je
lahf
insb
sub
fldl2t
jae
mov
or
aad
push
lea
cmp
xchg
lwpins
lret
in
test
cmp
or
insb
dec
mov
aas
push
mov
xor
cmp
inc
pop
jmp
mov
pop
jmp
jno
push
sub
in
sbb
inc
scas
in
pop
xlat
outsb
repz
movhlps
or
push
inc
mov
aam
cli
pushf
mov
sti
push
das
outsb
test
pop
mov
cmpsl
loop
xchg
sbb
fisubs
jno
pushf
loope
stc
sub
js
repnz
push
lcall
stos
loope
stc
shlb
lcall
adc
clc
ficomps
cmp
jge
inc
arpl
out
in
inc
orl
and
inc
push
jp
fsubl
testl
inc
pop
mov
push
repz
pop
aam
subl
int
movsl
inc
and
mov
adc
cmp
das
gs
lods
push
mov
mov
pusha
push
aaa
adcl
xchg
inc
testb
das
hlt
lret
jg
call
pop
pop
test
rorl
pop
aam
jns
fs
push
cmp
xor
into
in
je
xchg
jp
sub
enter
dec
jbe
xchg
jno
in
js
sub
enter
jnp
mov
movsb
push
mov
jmp
mov
or
adc
imul
and
xchg
fcos
jge
add
and
nop
or
cltd
sbb
inc
add
sbb
pusha
fisubrs
pop
sahf
in
push
shr
call
cmpsl
and
mov
or
cmp
lock
adc
lret
addb
call
mov
inc
mov
sub
and
lahf
stos
flds
mov
jle
cmc
imul
arpl
mov
push
cmpsb
aad
movsb
sub
in
lahf
adc
sbb
ja
insl
ficoml
lods
sub
pop
xchg
mov
push
jno
mov
mov
cmp
hlt
cmp
fsubr
test
xlat
push
xor
lods
icebp
cwtl
test
out
pop
jle
adc
nop
inc
mov
hlt
ss
sbb
push
leave
lcall
icebp
push
cmp
mull
cwtl
divl
fmuls
inc
dec
cmp
je
push
addl
fisubs
cmp
fcomi
jl
scas
pushf
sub
mov
cmc
mov
push
sbb
pop
mov
pop
dec
mov
roll
test
pop
aaa
outsb
push
icebp
cs
test
or
xor
lea
dec
and
fidivrl
cmp
xchg
mov
sbb
mov
cwtl
adc
sbb
rcl
mov
out
cltd
pop
test
jecxz
xor
sarl
pop
jecxz
push
incl
pop
xchg
lock
cld
das
mov
jbe
sbb
loopne
enter
addr16
adc
test
mov
jl
mov
clc
mov
arpl
xor
xor
dec
cmpsb
addr16
test
inc
movsl
and
or
inc
add
ljmp
xchg
pop
mov
xchg
iret
and
or
sbb
sub
cli
leave
add
lds
push
pop
decb
xchg
push
jns
sbb
inc
push
aaa
mov
loope
sahf
fidivrs
jmp
ror
sub
mov
dec
mov
sub
add
pop
xchg
jl
std
dec
jbe
call
sub
shlb
mov
aaa
push
andb
dec
loope
dec
mov
das
mov
ss
or
jnp
fistpl
ljmp
mov
sahf
stos
std
pusha
xchg
xor
mov
add
jnp
lcall
aas
sbb
adc
cmc
hlt
xor
in
lahf
or
mov
inc
popa
cwtl
ret
add
lcall
leave
and
cmp
mov
stc
fdivrl
xchg
push
test
movsb
out
sbb
setb
dec
pop
in
data16
inc
fcmovb
mov
cs
popl
mov
jae
inc
fld
mov
and
push
dec
or
test
fildll
ret
ss
stc
negb
adc
mov
into
push
cmp
cltd
fists
sahf
movsl
pop
and
ja
mul
xchg
cmp
lret
clc
fsubr
leave
test
shlb
and
scas
add
sbb
dec
dec
iret
mov
mov
sbb
push
js
into
gs
adc
loop
shl
movsb
add
jp
stos
out
mov
add
pop
cmp
cli
ljmp
xchg
xorl
addl
inc
data16
jmp
aaa
push
and
sub
lret
mov
jle
movsl
xchg
pop
push
add
lcall
jl
jne
adc
loope
rorl
ffreep
add
jae
inc
push
mov
in
mov
add
fstpt
xchg
nop
jecxz
dec
gs
movsl
pop
and
pusha
inc
sti
or
out
pop
and
pop
push
and
adc
mov
movsl
pop
xchg
mov
sub
cmp
push
jecxz
stc
sbb
aad
aam
rorl
xor
jbe
fisubl
sahf
push
jmp
cltd
das
test
loop
mov
xchg
lcall
movsl
xchg
and
xchg
arpl
or
loope
mov
cmp
std
pushf
add
add
xchg
sub
mov
inc
out
rolb
cli
lcall
jo
enter
sub
mov
clc
out
inc
mov
or
mov
mov
dec
xor
es
mov
sbb
sbb
ret
fimull
in
es
xchg
jl
lea
pop
xchg
cmp
inc
pop
mov
imul
xchg
stc
jne
lahf
int
sbb
enter
popf
imul
hlt
xlat
and
pusha
push
cmp
test
adc
rcrb
imul
mov
mov
scas
sti
mov
in
lret
movl
inc
out
lods
pop
call
aas
sti
adc
mov
add
adc
mov
mov
xor
dec
jns
and
lea
xchg
add
xor
jno
mov
xchg
mov
add
les
dec
jne
cmc
mov
stc
cmp
ret
inc
sahf
pop
pop
fcompl
rolb
stc
xlat
push
outsl
xor
push
inc
sbb
xor
stc
lcall
inc
fwait
xchg
and
pusha
mov
cltd
adc
pushf
push
adc
xor
inc
inc
dec
or
mov
jp
xchg
adc
subl
lock
std
out
insb
aaa
jmp
fmull
js
call
push
jmp
dec
mov
cmp
pop
fs
xor
arpl
mov
inc
in
aam
adc
stos
hlt
push
lods
fistps
nop
imul
hlt
jp
in
xor
xor
mov
push
mov
mov
or
push
lcall
ss
repnz
sub
jo
call
pusha
loopne
stos
add
stos
repz
ficompl
popl
jle
outsb
in
and
andb
out
aad
scas
add
subl
les
cltd
jmp
inc
popa
mov
ss
int3
jmp
fmull
call
add
mull
or
loop
xchg
js
lea
es
jmp
shrl
icebp
roll
in
cs
jmp
add
test
scas
cmp
sub
push
in
fsub
xor
add
sahf
pop
dec
lods
push
add
cwtl
and
out
pop
add
pusha
add
icebp
sbb
into
sub
pop
lahf
dec
inc
out
mov
lcall
fldl
sbb
cwtl
stos
mov
inc
xor
inc
xchg
or
int3
lret
adc
cmp
pop
clc
mov
mov
bound
arpl
and
inc
jae
push
jge
pushf
adc
cli
push
idiv
lock
sub
cmp
cld
roll
xor
outsl
fs
inc
push
pop
xor
cmp
flds
idivl
jae
adc
mov
insb
hlt
pop
adc
push
mov
outsl
inc
mov
and
xchg
xchg
inc
movaps
int3
out
loopne
rcll
loop
add
dec
shll
or
outsl
adc
push
scas
sub
add
repnz
sbb
out
in
aaa
or
cmpsb
push
stos
xor
lods
negb
fisubl
pop
dec
jne
fwait
cmp
lret
push
xor
lock
movaps
clc
xor
xchg
push
or
push
mov
inc
xchg
je
push
mov
popf
or
xor
cmp
mov
pop
cli
inc
cs
imul
insl
pop
cld
cmp
lds
dec
jo
cld
mov
push
js
sbb
rcr
clc
mov
in
inc
push
jge
and
dec
mov
pop
dec
insb
pop
xor
xchg
repz
cmp
lods
std
stc
xchg
fwait
jb
mov
xor
je
add
pusha
ret
repz
movsl
jbe
inc
jb
insb
sbb
mov
inc
adc
sbb
arpl
ret
loope
cwtl
sub
loopne
dec
xchg
in
cmp
dec
cmp
or
testl
mov
and
inc
and
xchg
adc
fistpll
fcomps
mov
test
sbb
lcall
sbb
push
pop
pop
sti
push
and
das
lock
pop
cmp
inc
jb
jp
lret
stos
xor
out
push
lock
pusha
das
lods
js
mov
loopne
push
lcall
pop
cld
test
fwait
push
xor
push
jmp
jb
into
popf
jno
cltd
and
adc
adc
scas
in
cwtl
xchg
cmc
xor
insb
push
testl
sub
test
pop
jmp
or
fwait
jp
sbbb
xchg
and
mov
mov
mov
and
fwait
push
jge
xor
or
ret
fwait
mov
fcmovne
rcrb
dec
jnp
inc
lcall
std
mov
scas
lea
push
roll
mov
cmc
push
lcall
idiv
int3
mov
pop
ds
leave
and
sarl
jnp
mov
sbbl
aaa
ds
fisubl
xor
and
loop
mov
cmp
pusha
xorl
adc
int3
dec
xchg
loop
subb
push
mov
icebp
test
aaa
inc
xorb
pop
add
and
or
insb
popa
xchg
inc
aas
jge
nop
cli
test
inc
mov
mull
push
mov
sbb
cmp
js
adc
leave
xor
cmp
scas
mov
mov
jno
push
inc
sbb
inc
push
add
out
pop
ljmp
mull
aas
adc
push
mov
jae
test
and
jae
cmp
dec
sbb
daa
xor
xchg
popf
mov
add
and
xlat
push
mov
loop
arpl
pushf
cmpsb
or
push
loop
pop
jae
fs
gs
ucomiss
mov
mov
movsl
adc
gs
mov
pop
jge
dec
cmp
sbb
jne
dec
jae
jb
cltd
jnp
inc
sbb
dec
pop
push
out
loop
or
push
inc
in
sbb
test
ds
out
ret
aam
jne
sub
lods
nop
jmp
inc
repz
cmpsb
insl
sub
cmp
jecxz
lock
lods
cs
cwtl
das
cmp
or
dec
mov
cwtl
loope
into
and
xchg
fstps
ds
shrl
pop
mov
lcall
sub
into
dec
out
int
push
sahf
pop
lods
ss
nop
mov
popf
mov
adc
fwait
sbbb
and
js
add
imul
mov
cmp
scas
fsubl
mull
sbb
push
mov
push
mov
lret
or
popa
lret
popf
inc
out
jmp
stos
xorb
xchg
pop
pop
dec
imulb
lfs
lret
jecxz
push
mov
iret
mov
js
in
scas
cmp
mov
aam
fnstcw
push
test
adcl
mov
xor
push
pop
xchg
stc
aam
ds
and
xor
aaa
cmp
hlt
push
mov
adc
jnp
push
mov
popa
push
cwtl
call
jb
dec
js
lods
push
pop
pusha
jnp
idivl
inc
push
and
outsb
fidivrs
adcb
sub
adc
daa
fs
adc
pop
dec
out
lock
xor
sti
jnp
and
push
orb
rcrl
push
dec
add
out
mov
pusha
pushf
add
xlat
mov
mov
mov
inc
xchg
and
ss
ds
sub
sahf
adc
push
push
or
lods
scas
xor
add
cmp
or
pusha
lds
jmp
xor
mull
mov
lods
mov
mov
sub
fsts
inc
jle
dec
add
inc
movsb
dec
repnz
fstl
decl
cmp
lahf
fnstenv
jns
mov
adc
lret
jo
xor
pop
dec
pusha
lods
fmul
outsl
pop
gs
sbb
pop
and
adc
mov
popf
lods
pop
and
push
cmpsl
pop
and
add
jno
iret
inc
sbb
jmp
shl
loopne
shr
fwait
test
sub
stos
adc
std
popf
mov
ret
fnstsw
mov
lcall
lock
addr16
cmp
pushf
sti
inc
push
addr16
mov
clc
rolb
dec
and
mov
sarb
les
ja
xor
popf
add
jmp
xchg
adcl
or
iret
add
xchg
jge
outsl
inc
call
inc
mov
aas
push
int3
aaa
xlat
jne
jg
lock
fwait
adc
xchg
add
outsl
mov
testl
rcrl
icebp
add
pop
fcmove
cmp
mull
xchg
sub
jge
push
out
pusha
mov
fwait
in
pop
ds
and
stos
xor
pop
out
mov
push
adc
ret
pop
lods
cmc
sub
mov
cli
mov
out
xchg
cmp
or
cmp
imul
or
xchg
jmp
jo
xchg
xchg
test
movsb
and
cmpsb
orl
push
out
cmp
ja
movsl
mov
popf
push
jbe
shr
testl
sbb
iret
cld
clc
mov
adc
loope
scas
jo,pt
in
int3
pop
mov
idivl
xchg
aaa
lcall
jp
lods
sahf
insb
add
int
jbe
div
mov
out
or
jae
repnz
adc
cmc
icebp
push
inc
push
call
and
fstps
xchg
sbb
push
adc
hlt
sbb
mov
sub
jmp
jb
mov
aaa
mov
push
gs
pop
inc
ljmp
ss
bound
add
insb
mov
push
ljmp
jmp
notb
into
push
mov
cmp
pop
cwtl
dec
jne
pop
repnz
fstpl
jle
xchg
ficomps
mov
xchg
addl
xor
cmp
mov
gs
je
or
repnz
shr
and
pop
test
jecxz
inc
imul
rcll
and
repz
cmp
inc
xlat
xchg
jl,pn
lret
xchg
jmp
sbb
aam
sti
jmp
rcr
shl
adc
mov
fiaddl
xchg
adc
xor
sbb
push
xor
in
fadds
sub
mov
mov
push
movsl
and
mov
mov
xchg
add
out
sub
pop
popa
stc
mov
fwait
lret
mov
push
lods
lcall
mov
decl
jno
mov
aas
rol
mov
jb
dec
and
les
sub
nop
add
push
pshufw
popf
jnp
scas
scas
lods
sbbl
fwait
loop
dec
dec
add
je
add
mov
or
fidivrl
cmc
outsb
jp
mov
filds
into
cmpl
test
and
inc
mov
cld
pop
push
fmuls
repnz
mov
mov
cli
sub
test
sub
negb
xchg
mov
push
adc
sarl
mov
xor
push
inc
mov
fldlg2
ja
popl
inc
pop
mov
aad
dec
or
aad
insl
mov
jmp
int3
inc
jbe
loopne
clc
or
push
stos
sbb
cmp
jl
roll
shll
pop
add
pop
xchg
movsb
ret
lods
test
xchg
in
xchg
push
sarl
cltd
mov
out
es
mov
movsb
jns
sbb
mov
insb
insl
jecxz
aaa
out
xchg
daa
dec
mov
pop
js
lods
pop
aas
lahf
repnz
test
jmp
inc
scas
pop
xchg
dec
subb
jnp
mov
xchg
jns
jno
and
cmp
cmc
lret
outsb
push
mov
mov
ds
jae
ja
push
jp
pop
sbb
sarl
lahf
push
sbb
cli
iret
lds
sbb
xchg
push
jns
or
sbb
mov
testb
jle
inc
inc
and
mov
add
and
iret
pop
xchg
jns
pop
lods
std
mov
out
add
hlt
sub
out
mov
out
scas
xor
fistl
in
pusha
divl
or
popa
pop
shlb
cmp
fildll
xchg
cmp
pop
aaa
jg
push
das
push
addr16
pushf
lock
mov
xor
in
pop
inc
cmp
ja
enter
sub
pop
pop
pop
jmp
xor
xor
xlat
sub
sbb
mov
outsb
scas
dec
xchg
cmp
cmpsb
add
in
scas
mov
mov
insb
rorl
icebp
ljmp
dec
fdivl
inc
jnp
and
sti
xchg
clc
adc
ljmp
gs
dec
jecxz
mov
cmp
cmp
das
jmp
adc
and
add
enter
adc
add
popa
mov
cmpsl
cmp
and
xor
xor
pop
xchg
xchg
dec
aad
xchg
leave
or
or
cmpsb
fidivl
rolb
or
clc
dec
add
mov
push
jae
cmp
mov
or
sub
jge
ljmp
inc
imul
jns
mov
subl
inc
sbb
daa
mov
outsb
and
fidivrs
popa
sub
sahf
adc
and
ret
push
movsl
out
add
leave
push
fwait
xchg
push
je
mov
dec
jo
and
int3
mov
lds
jmp
xchg
outsl
cltd
jns
popa
stos
inc
fbld
addb
mov
xchg
adc
ss
outsl
jnp
or
push
xor
sbb
aad
in
out
test
int
mov
pop
das
sbb
sbb
inc
pop
sub
data16
push
out
sbb
in
push
push
popw
sub
mov
dec
jns
mov
insl
adc
sbb
adc
add
xor
add
ret
loopne
xchg
movb
and
sbb
fidivrl
scas
stos
daa
test
ss
ret
add
fisubl
jecxz
push
shll
xor
out
stos
cmovle
mov
lea
ja
cwtl
sub
lahf
push
stc
or
adc
mov
out
xchg
inc
pop
push
shr
push
pop
sub
out
mov
sub
scas
mov
add
lea
ja
push
loopne
into
rorb
test
add
jg
out
mov
fstp
add
cmp
mov
dec
cmp
icebp
mov
add
and
fistps
dec
insb
lds
enter
in
imul
and
jg
ds
jmp
mov
stos
add
push
cmpsl
rcrb
jb
adc
inc
adc
xchg
dec
mov
xchg
mov
inc
cmp
push
insl
in
jb
and
or
jbe
and
push
mov
ret
in
mov
fnstenv
aaa
in
mov
sahf
and
jg
cmp
es
out
fildl
sub
sub
nop
mov
jl
imul
xor
addr16
lcall
push
mov
roll
fsubs
and
cld
cmp
js
rcrb
fcoml
loopne
or
sub
stos
inc
rcrl
fisubrs
lods
xchg
or
stos
pop
cmp
push
aad
scas
adc
aad
xchg
shr
cli
ja
push
add
pop
mov
xor
cs
jno
addr16
lods
test
ss
mov
unpckhps
loopne
or
sahf
push
inc
iret
cwtl
pop
and
sbb
pop
and
xchg
add
and
stos
rolb
mov
pushf
cmpsb
xchg
push
xchg
mov
out
imul
js
add
das
insl
mov
sub
fwait
shrl
add
xor
aam
fadds
cmpsl
addr16
xchg
gs
mov
dec
je
adc
lea
loope
je,pt
ja
cmpsl
aam
push
popa
imul
push
fwait
or
and
stc
lods
xchg
sbb
aas
test
jmp
int
or
in
xchg
rorb
push
mov
loopne
stc
dec
repnz
pop
int3
movsb
adc
jno
pop
dec
in
jmp
stos
das
push
push
data16
imul
aad
into
xchg
in
and
mov
cmp
sub
ret
mov
data16
scas
and
mov
mov
sub
mov
movsl
lods
inc
jmp
leave
cwtl
imul
sbb
call
add
pop
aam
push
mov
xchg
inc
dec
repz
cmp
pop
jecxz
mov
lods
les
fnstenv
xor
mov
or
mov
mov
in
xchg
into
push
pop
nop
pop
rcl
jnp
fcmovnu
push
pop
lock
mov
fnsave
mov
aam
xor
xchg
dec
and
clc
lds
and
adc
add
push
xlat
sub
sbb
out
lods
mov
xor
mov
jns
mov
push
sahf
test
jne
jb
xchg
cmp
fistl
icebp
dec
push
jb
jb
int3
cmp
insb
or
shl
rol
adc
mov
sahf
inc
mov
rolb
fcompl
and
outsb
testb
push
sbb
and
jle
push
or
push
fiadds
fldt
lahf
mov
rcll
add
hlt
jecxz
cli
jns
sahf
aas
scas
push
imull
xchg
das
push
test
jne
or
add
enter
cld
gs
ficompl
out
and
push
inc
lahf
inc
loope
gs
mov
lea
jp
lret
js
xor
imul
cli
mov
mov
sbb
insl
mov
sub
xchg
push
pop
ds
test
fcom
inc
lock
out
jp
mov
push
icebp
jp
xor
out
or
lds
jg
js
add
das
sbb
jecxz
popa
dec
pop
fsubr
popa
outsl
nopl
sbb
jmp
lcall
push
adc
je
in
add
es
xchg
mov
movsl
dec
xlat
fimuls
dec
mov
test
and
cmp
adc
jle
cltd
test
movsb
push
call
dec
sarl
test
push
das
imul
add
test
dec
push
sbb
rorl
lret
jmp
add
jl
dec
mov
cmp
cltd
clc
and
sbb
sbb
sub
xchg
daa
sub
dec
lret
xchg
mov
sub
cli
push
adc
jno
xor
push
cmp
sub
lret
popf
jne
jge
fwait
sub
or
and
int
cltd
cvtpi2ps
adc
and
cld
pushf
aas
lds
inc
mov
xchg
insb
adc
xchg
dec
xor
jne
xor
jmp
mov
adc
xchg
dec
cmc
add
cld
jno
repnz
cmp
inc
sub
pop
mov
pop
dec
dec
mov
xchg
nop
add
fsubrs
mov
lahf
test
fcmovbe
dec
or
xchg
ret
cmpsb
shl
xchg
cmp
outsl
adc
lsl
imul
gs
dec
mov
imul
por
pop
loopne
cmc
and
cmp
add
leave
outsl
lods
push
cld
dec
or
dec
icebp
cmpsb
leave
jo
or
cmp
or
stos
push
xchg
pop
mov
pop
push
cmpsl
push
aas
sbbb
add
cmp
jmp
sbb
inc
fldl
cmpsl
out
adc
nop
popa
popf
jle
xchg
lock
lods
push
fwait
xor
dec
xchg
adc
jmp
mov
daa
scas
loop
outsb
mov
mov
inc
inc
mov
in
dec
call
subb
es
stc
iret
xchg
jae
fisubs
pop
inc
in
les
add
negb
xchg
dec
pushf
jae
inc
repz
push
xchg
or
stc
in
mov
mov
and
and
ds
add
pop
shrl
cmc
lcall
and
mov
pop
out
jge
mov
mov
ds
cmc
push
lret
dec
loop
xchg
push
pop
sbb
xlat
sub
mov
pop
jns
out
push
ret
mov
repz
add
mov
ret
inc
dec
jb
sub
push
dec
push
mov
dec
loop
test
in
pop
dec
push
mov
pop
cs
sahf
push
mov
mov
gs
jl
pop
call
rcrb
and
pop
and
push
mov
jmp
xor
lahf
xor
pop
ja
fcmovnbe
mov
mov
lahf
cmp
xchg
add
mov
sub
lods
rcrl
bound
hlt
dec
sub
push
add
pop
mov
idivb
pop
les
jo
js
mov
jnp
insw
jne
fildl
data16
xchg
add
outsb
jo
aaa
dec
lea
cli
jg
inc
mov
cld
call
lret
arpl
in
xchg
nop
xor
jl
mov
dec
fwait
popa
cmp
stos
icebp
scas
mov
jns
and
cli
pop
jg
dec
sub
or
or
daa
mov
mov
ss
std
xchg
xor
or
add
adc
shl
sbb
add
test
mov
lahf
andl
mov
icebp
inc
inc
cmp
adc
xchg
xchg
lds
and
aam
pop
daa
sub
in
inc
fs
jg
cmp
pop
mov
dec
sbb
sarl
pop
mov
lods
scas
mov
insb
in
cmp
inc
mov
xor
dec
push
cmpl
mov
mov
dec
pop
inc
push
repnz
cmpsl
test
push
test
mov
pop
scas
cli
mov
lcall
es
dec
sbb
push
mov
or
lret
outsb
aam
or
dec
cmp
xchg
dec
loop
sub
cld
scas
push
pushf
mov
xchg
mov
je
push
sub
cmpsl
cmp
sahf
jmp
sub
mov
lcall
xchg
xchg
out
mov
sub
dec
inc
inc
or
daa
mov
adc
adc
dec
or
dec
add
in
test
frstor
sbb
lahf
fmulp
cmp
test
insb
push
pop
cmp
cld
mov
pop
sub
movsb
out
inc
aad
and
lock
sub
shll
dec
jecxz
and
out
xlat
cltd
mov
test
adc
mov
arpl
push
daa
add
popf
xlat
add
add
sub
cmc
add
mov
roll
lock
outsl
loop
push
ja
inc
push
imulb
mov
push
stos
adc
xor
scas
xchg
mov
mov
pop
sub
xorl
aam
dec
add
insl
jle
mov
or
jno
inc
outsb
lahf
addr16
stos
jmp
iret
daa
or
cmp
dec
daa
popf
clc
imul
xchg
push
gs
in
outsl
call
xor
out
fs
inc
cltd
lods
loop
pop
add
xchg
cltd
fs
add
pushf
imul
jecxz
rorb
jno
shll
push
adc
addr16
rorl
and
jle
pop
pusha
push
bound
aam
fmulp
xor
stc
lret
loopne
pushf
scas
jne
ja
aaa
lock
les
mov
xor
mov
pushf
adc
out
adc
or
xchg
jo
mul
jmp
xor
mov
inc
sbb
push
inc
cli
sbb
inc
mov
lods
adc
adc
je
jb
in
fstp
xor
pop
cmp
clc
ljmp
add
adc
push
lret
ljmp
loopne
jle
leave
lret
nop
out
push
std
mov
jnp
mov
dec
in
ljmp
pop
addr16
pop
add
inc
pop
div
pop
shlb
cmpsb
cld
mov
fwait
sub
shr
pop
dec
aaa
and
sub
ja
mov
stos
push
cwtl
cmpsb
inc
mov
cs
mov
out
sub
mov
lahf
mov
sbb
clc
test
mov
cmp
dec
push
xor
call
clc
or
adc
mov
mov
sahf
ss
dec
xor
lret
in
jmp
repnz
addr16
js
jp
fwait
mov
xor
imul
rclb
xor
adcb
inc
and
mov
cwtl
mov
mov
mov
and
mov
inc
xchg
and
pop
or
out
add
pop
add
outsb
addb
mov
dec
add
sbb
xchg
sbb
dec
inc
pop
ret
mov
lcall
mov
testb
out
adc
mov
aam
sbb
jae
xchg
lcall
fldcw
into
ja
jecxz
in
pxor
or
push
xor
mov
in
fisttpl
data16
jge
adcb
fidivrs
es
dec
popa
xchg
int
jecxz
inc
aad
dec
dec
or
mov
lcall
loopne
lret
stos
pop
xchg
iret
mov
sbb
add
pop
xor
add
fldl
lret
pop
add
mov
lea
rcrl
mov
or
aas
clc
mov
insl
popa
bound
dec
stc
push
dec
mov
fs
mov
fmuls
ljmp
mov
and
mov
icebp
test
xchg
stos
xor
adc
arpl
jo
fwait
jp
fistps
out
inc
arpl
dec
sbbl
pop
fisubs
mov
add
cmp
nop
push
adc
sbb
loopne
mov
adc
mov
jnp
dec
iret
and
in
pop
std
pop
sub
jl
in
pusha
ret
push
cmp
and
das
cmp
movsb
cmpsb
cmp
push
mov
ror
movsl
jg
push
pop
jge
mov
lcall
jp
pop
xchg
cmp
jecxz
lods
xor
mov
xchg
jecxz
clc
mov
loope
pop
adc
loop
jbe
lods
xchg
out
je
mov
xor
cmpsl
gs
xchg
sub
lret
test
lret
cs
and
push
cwtl
xor
icebp
cmc
lea
inc
mov
mov
push
xchg
mov
jbe
xchg
lcall
in
rcll
dec
cmc
push
imul
mov
jl,pn
sbb
fdivr
mov
cmpsl
pop
mov
jno
testl
cltd
mov
lods
sahf
add
ljmp
sub
popf
mov
jecxz
aas
movsl
dec
mov
adc
pop
lock
ret
test
adc
cli
rclb
mov
dec
dec
sub
sub
orl
xchg
loope
xchg
mov
pop
xchg
dec
jne
push
inc
cmp
xlat
xchg
cmp
pop
inc
sub
sahf
rcrl
sub
movsl
cmp
int
aam
dec
in
outsl
inc
dec
arpl
in
xchg
adc
jecxz
scas
daa
xlat
ss
pop
jae
cmc
fstps
pusha
sbb
fistpl
shl
imul
dec
stos
adc
xchg
mov
lock
hlt
sub
test
daa
lock
cmp
dec
aad
dec
push
jnp
cmp
xchg
sbb
popf
cmp
pop
out
clc
and
push
add
daa
push
addb
jge
icebp
int3
fimull
in
or
sub
test
mov
and
jmp
inc
dec
inc
dec
adc
outsb
dec
or
pop
gs
out
xor
sub
jle
mov
aaa
arpl
or
stos
jnp
arpl
push
inc
mov
addr16
arpl
pop
sbb
push
inc
arpl
rolb
in
mov
mov
lds
gs
mov
push
xchg
std
mov
mov
lcall
mov
cmc
fiaddl
fimull
sbb
sub
loop
sahf
mov
loopne
xchg
or
adc
dec
sbb
adc
add
pop
xlat
push
inc
sbb
pusha
inc
or
xor
aam
enter
dec
fstpt
pop
out
in
call
sub
sub
in
xchg
out
mov
pop
adc
inc
arpl
push
mov
adc
adc
jns
sbb
or
in
push
dec
cmp
push
js
sbb
xor
aas
add
ljmp
and
jge
fistpl
jg
sbb
rclb
shlb
rcl
shlb
adc
shrb
cmp
push
inc
xor
fwait
or
jno
sbb
lret
and
mov
int
or
rol
dec
lcall
movsl
mov
loope
pusha
adc
rol
jmp
add
imul
mov
xor
inc
mov
mov
hlt
pop
xchg
add
push
iret
sub
xor
mov
lahf
push
cs
mov
lock
movsl
mov
iret
mov
sub
pop
pop
test
dec
loop
xor
sbb
push
and
jns
mov
mov
nop
mov
test
test
jbe
sub
pop
mov
sahf
gs
in
out
or
inc
mov
test
xchg
jns
xchg
fimuls
mov
daa
in
add
mov
inc
add
xchg
test
sbb
mov
push
ficoms
ljmp
cmp
addr16
and
in
cltd
push
dec
jo
es
xor
mov
adc
cwtl
ds
mov
dec
test
jmp
mov
jns
es
out
add
test
aam
or
mov
xchg
or
adc
movsl
add
test
mov
shlb
enter
scas
dec
clc
mov
ret
aam
jo
sub
cmpsb
icebp
sti
imul
out
lret
push
outsl
mov
fs
cmp
and
sysexit
icebp
sahf
rcr
add
xchg
sbb
clc
xorl
es
mov
mulb
movsb
mov
jo
js
int3
cmpsb
arpl
enter
je
std
iret
xchg
bound
addr16
add
pop
or
ficoml
loope
dec
ret
mov
imulb
fstpl
push
lods
mov
mov
and
mov
cmp
lret
xor
push
into
inc
dec
xor
add
cmp
add
and
adc
adc
jnp
jle
sub
sub
scas
out
divl
scas
hlt
push
in
loope
cmp
ja
cmp
into
pop
xor
rcll
clc
pusha
cmp
or
std
pop
inc
lds
inc
cmp
and
fcompl
int
or
cmp
jmp
mov
dec
sbb
and
movsl
mov
and
mov
test
fmulp
jg
ror
into
jecxz
hlt
popa
and
dec
frstor
xchg
imul
out
out
call
mov
subb
imul
lret
push
mov
dec
sbb
mull
pop
and
shrb
sbb
inc
daa
jle
jmp
fcompl
lea
mov
sub
sub
sti
and
and
push
pusha
cmpsl
fcmovnbe
js
pop
enter
sub
add
add
flds
push
jge
lods
push
push
lock
inc
out
mov
inc
mov
andb
mov
sbb
mov
fwait
mov
lea
in
xchg
jp
or
popa
aaa
pop
cmp
inc
lahf
pushf
jne
pop
inc
or
pop
cmp
mov
xchg
adc
pop
sub
cltd
jns
test
fists
imul
into
jl
cmp
cmc
add
aaa
inc
mov
popf
pop
repz
cmp
stos
jl
mov
jmp
out
pop
dec
or
dec
loope
mov
iret
js
sub
loop
add
inc
pop
xchg
push
sub
mov
out
cmc
mov
iret
in
shll
divb
flds
ret
out
jns
sahf
pushf
cmp
or
add
inc
cmp
push
pop
push
push
enter
xchg
enter
cmpsl
push
sub
popa
sbb
mov
or
fwait
adc
push
ret
adc
stos
push
cmp
jns
popf
in
lahf
js
xchg
sbb
and
sti
out
repnz
stos
insl
divb
cmp
or
xlat
mov
xor
mov
insb
xor
xor
pusha
sub
lcall
mov
cmpsb
push
ss
push
std
or
xchg
add
cmp
xor
mov
lret
xchg
out
pop
add
mov
loopne
inc
xchg
repz
and
ljmp
cmp
xchg
mov
pop
inc
fwait
mov
pushf
stos
inc
xor
int3
adc
inc
arpl
xorb
jmp
pusha
fldcw
pop
out
aad
pop
dec
dec
sbb
ret
movsl
sbbb
mov
inc
pop
jae
mov
sbb
adc
mov
push
push
js
roll
pop
ja
cmp
pop
xlat
jmp
xchg
inc
pop
dec
cmp
addb
add
adc
mov
inc
inc
add
lds
dec
sarb
mov
jnp
adc
lret
push
enter
jae
outsl
testl
xlat
pop
jns
adc
dec
lods
inc
enter
and
push
jg
pusha
fwait
xor
or
add
and
xor
xchg
int
or
popf
and
inc
cmpsb
cwtl
call
fwait
jle
dec
inc
test
rclb
pop
insl
test
mov
stos
jmpw
test
ljmp
push
clc
pop
push
test
dec
sbb
push
rcrl
loopne
lds
rorl
in
cs
pop
in
imulb
aas
push
jg
pop
adc
cmc
mov
mov
xchg
out
popa
or
jmp
mov
pop
sbb
in
ror
repz
or
loopne
imul
int3
mov
add
xor
scas
adc
movsb
lods
rorl
jge
push
push
paddb
bound
loop
push
pop
fildll
sbb
inc
cmpsl
movsb
fsubrs
cmpsb
shl
add
repnz
ss
repz
les
ljmp
in
sub
dec
push
repnz
xlat
cli
push
aas
jne,pt
sbb
mov
fcmovbe
out
jne
and
sbb
sbb
push
arpl
enter
jno
push
adc
in
sbb
lcall
lret
mov
jo
lods
pusha
enter
test
ret
hlt
mov
sbb
rorb
xor
setno
inc
adc
and
cs
es
shrb
shll
popf
mov
ljmp
pop
cmp
and
push
mov
scas
shll
fistpl
xchg
jl
insb
into
fnstenv
std
xchg
lahf
xchg
sbb
inc
arpl
add
or
dec
and
mov
lcall
xlat
or
cmpsb
xchg
push
jbe
in
es
xorb
cmp
jnp
fcompl
cld
push
xchg
sub
shll
out
aaa
fldenv
js
out
aad
mov
fidivrl
fists
ret
fisttpl
jno
cs
add
mov
ror
into
mov
mov
mov
dec
mov
fistl
hlt
mov
jecxz
shll
pop
adc
push
adc
in
cld
inc
inc
pop
int
jge
pop
mov
cmp
mov
fcmovnu
in
out
push
push
fs
mov
sub
insb
imul
mov
es
and
xor
cmc
dec
ss
inc
adc
push
xchg
dec
gs
inc
int3
add
jb
lods
or
jge
add
stos
or
sub
jae
adc
loop
dec
cmp
leave
idivb
adc
roll
data16
arpl
jecxz
out
fcompl
add
out
fwait
mov
sub
je
mov
xor
adc
xor
icebp
test
mov
testb
jle
pop
jne
push
repz
adc
test
push
sub
mov
pop
add
xchg
dec
push
out
loopne
sbbl
cwtl
jl
xchg
popa
ds
aad
mov
lods
push
int
pop
push
push
mov
mov
pop
inc
cmp
lret
cmp
aam
xchg
pop
jecxz,pt
cmp
push
jle
inc
rol
and
fcoml
arpl
or
adc
adc
movsb
mov
add
jb
rcrl
outsl
cmp
mov
sub
pop
mov
imul
fsubs
in
aas
jle
rcll
dec
ja
adc
lahf
sub
movsl
mov
sahf
xor
daa
out
inc
push
jb
in
js
mov
dec
nop
cltd
lret
leave
or
scas
adc
add
daa
ret
xchg
je
mov
leave
jge
out
aas
mov
test
push
cmpb
popf
mov
push
cmpsb
std
xchg
jmp
ljmp
and
push
xchg
aaa
clc
pop
xor
addr16
xchg
pop
insl
push
xchg
aad
pusha
cmpsb
mov
pop
loope
insl
cmp
into
loopne
xchg
fistl
and
cltd
enter
aas
inc
int
ljmp
inc
popf
fidivs
cli
push
lods
pop
std
shll
cs
aas
or
js
and
sub
arpl
push
pop
je
dec
jge
rcr
add
ret
jns
testb
or
lcall
sbb
adc
movl
mov
xchg
ss
sahf
jl
mov
push
push
sbb
test
mov
fcompl
popa
out
mov
pop
jp
loopne
cmp
dec
pop
jmp
aam
or
subl
lret
mov
out
xor
mov
push
sub
movsb
jp
jne
xchg
cmp
call
fdivl
lds
lods
cmpl
add
dec
mov
or
out
dec
sub
arpl
dec
sub
push
mov
inc
sbbb
das
xor
fucomp
int
shr
in
inc
frstor
xchg
or
lret
fistpll
xcrypt-ofb
cmpsl
das
or
sub
ja
jne
cli
mov
pop
ss
mov
pop
adc
inc
sti
loopne
iret
mov
xchg
mov
jns
lea
ficoms
dec
dec
mov
mov
sbb
int
rorb
sbb
and
inc
mov
jecxz
rorb
jl
mov
fldt
in
push
and
or
in
arpl
jecxz
test
fcompl
push
jg
cli
loop
inc
pop
inc
andb
mov
sub
mov
lahf
data16
push
jbe
mov
arpl
or
in
or
pop
bound
add
push
mov
cltd
bound
jns
daa
inc
sbb
and
sti
xlat
test
addr16
andb
mov
rol
sbb
outsl
jge
loopne
stc
push
and
push
mov
out
shrl
xchg
mov
mov
dec
sub
es
imul
mov
lahf
add
stos
cwtl
mov
int
mov
lods
outsl
sub
loope
idiv
test
dec
mov
dec
dec
xor
mov
clc
xchg
add
andb
jg
sub
lock
jne
stos
lahf
movsl
sbb
scas
xor
test
add
push
daa
aad
cltd
push
les
sbb
or
lret
cmpsl
jge
fnstenv
pop
addb
mov
inc
sbb
mov
mov
imul
push
icebp
adc
aad
jns
jae
dec
jp
fadds
into
or
jmp
popf
mov
mov
mov
add
sti
or
or
popf
sub
mov
iret
cli
mov
loop
jo
add
push
mov
daa
leave
mov
faddl
inc
mov
pop
in
fimull
sub
mov
and
mov
ja
orl
imul
or
xchg
loopne
or
xor
xchg
inc
jle
cmp
dec
repnz
adc
js
xchg
and
aas
push
sub
pop
or
mov
adc
lods
push
loopne
jge
or
out
fimull
jo
pop
cmp
and
xchg
jns
out
xorb
scas
inc
dec
fldenv
sbb
xor
hlt
jl
or
cmc
push
sarl
fidivrs
jp
and
inc
js
sbb
gs
ljmp
push
aaa
xchg
pop
push
jl
outsl
or
mov
hlt
mov
out
cmp
cld
in
pop
xchg
lods
jnp
lock
rep
cmp
dec
shr
pop
lock
xchg
cmpsb
mov
out
mov
pmaxsw
cld
mov
mov
dec
movsl
jne
jmp
cli
sti
sahf
cld
jecxz
inc
insl
cmp
imul
test
test
inc
test
inc
pop
addl
cwtl
outsb
pop
pop
push
repz
in
stos
sahf
lock
enter
fs
xor
push
test
add
das
lahf
push
mov
sub
xor
cld
loop
clc
rcr
mov
push
int
mov
movsb
inc
and
mov
jl
andl
xchg
das
test
mov
inc
cmc
cmpb
popf
cmp
mov
je
push
jge
fs
scas
add
sbb
lods
test
jp
fdiv
mov
shll
fdivs
test
cmp
out
rcrb
pop
sub
xor
rcll
outsl
pop
arpl
clts
loop
jnp
mov
aaa
lock
pop
push
inc
xchg
xchg
mov
movsb
ftst
mov
scas
loop
mov
jmp
enter
mov
jge
inc
negb
mov
andb
pop
jns
pushf
and
adc
mov
and
push
pop
cmp
hlt
inc
or
push
xchg
insl
and
add
dec
push
in
pop
into
xor
jmp
xor
jno
sbb
cmp
out
xchg
mov
pop
pop
push
in
out
ret
in
gs
pop
sbb
jmp
fwait
insl
rorb
insl
jmp
jmp
ret
das
lret
xlat
movsl
fs
xor
loope
jno
mov
ror
movsl
mov
out
sub
jp
rcrb
mov
stos
sbb
dec
sub
loopne
xchg
sbb
adc
dec
loop
ds
dec
sbb
rcl
ja
ret
das
mov
push
rolb
in
mov
lret
mov
mov
daa
fiadds
int3
push
cld
xchg
addr16
mov
pop
pushf
adc
ds
mov
xchg
inc
test
add
sbb
and
in
lods
jns
loop
rcl
mov
cmpb
cmp
lds
loop
leave
sbb
push
mov
shl
cmp
pop
mov
cwtl
or
rcr
imul
pushf
scas
jne
push
rorl
pop
add
fwait
shlb
cmovnp
fisubl
std
cli
mov
jmp
xchg
daa
repz
into
loope
aam
dec
cli
int3
call
les
movsl
mov
mov
dec
daa
pusha
and
std
or
jge
pop
cmovne
int
pop
aad
sub
push
xchg
ret
mov
adc
loopne
loop
mov
fs
je
mov
test
in
fcmovnbe
push
sub
test
dec
pop
das
push
call
fdivs
cmpsl
xor
testl
jo
mov
mov
ficoml
pop
add
adc
mov
imul
dec
test
cmpb
push
and
out
stos
push
lcall
sub
cwtl
outsl
adc
cmp
lods
test
lds
mov
push
push
mov
xor
mov
in
jl
push
movsl
cmpb
and
sub
inc
shll
sub
incb
jge
jb
add
xor
mov
adc
int
xchg
pusha
insb
adc
lahf
lcall
mov
imul
jo
push
je
or
mov
mov
push
int
sar
fsubr
aam
fdivs
icebp
push
sbbl
sub
int3
mov
push
add
repz
shrb
in
bound
sti
jmp
xchg
jno
mov
int
clc
imul
icebp
ret
ret
mov
mov
out
shrb
cmpsb
les
fstpl
lcall
rclb
or
vminss
mov
dec
sub
shlb
mov
aas
fldenv
jb
in
push
sbb
les
shlb
mov
addr16
or
out
call
test
outsb
lahf
cmp
pop
ja
pop
push
in
xlat
loop
dec
idivl
add
ds
cmpsb
adc
std
add
iret
sti
loop
dec
mov
test
scas
gs
fstps
test
leave
movsl
cli
pop
sahf
mov
rcl
add
inc
inc
lahf
das
inc
push
push
aad
lods
push
xchg
xchg
mov
mov
vpshufhw
subl
mov
push
dec
je
loop
xchg
div
push
add
jge
inc
inc
movsl
mov
adc
cmp
inc
inc
mov
pop
bound
pop
fisubrs
or
add
aam
loope
test
aaa
adc
sti
mov
push
dec
xor
sbb
stos
insl
mov
jne
add
cmp
out
std
sbbb
hlt
mov
sub
pop
cltd
push
xlat
stos
inc
cmp
adc
cmp
sbbl
repnz
pop
cltd
push
push
mov
push
imull
jecxz
mov
enter
push
imul
or
cmp
paddb
push
fnsave
pop
roll
xchg
dec
dec
cmp
xchg
call
pop
cmp
lds
arpl
pop
addr16
insl
xchg
add
xchg
imul
pop
ljmp
sub
sbb
or
mov
adc
inc
out
popa
mov
divl
mov
lahf
dec
gs
ja
sub
xorb
iret
arpl
pop
xor
cli
cmp
mov
inc
insb
mov
test
outsl
xor
pop
jecxz
push
out
sbb
jecxz
and
mov
lret
js
es
aad
ret
aam
mov
mov
fmull
pusha
gs
fidivrs
ficoms
mov
sub
icebp
jp
inc
repnz
mov
mov
jge
mov
cmpsl
pop
into
mov
das
out
push
scas
inc
rorb
mov
mov
inc
or
mov
pop
inc
inc
inc
test
pop
movsl
adc
sbb
xchg
add
clc
adc
jns
cli
mov
out
dec
add
jl
mov
mov
mov
xchg
gs
push
xor
sub
xchg
sub
sbb
and
dec
cmp
dec
enter
cmp
sbb
fdivl
jnp
gs
test
cltd
or
out
cmpl
push
xchg
mov
push
mov
pop
cmp
stos
shrl
xor
adc
and
xorb
jnp
aaa
test
and
push
xorl
inc
int
adc
push
mov
sub
pop
cli
inc
jae
outsl
out
shl
xchg
sahf
cmp
cmp
inc
mov
es
xchg
hlt
cmc
lods
aas
push
pop
lods
fs
movsl
stos
inc
or
repnz
mov
mov
sub
fucomip
or
cmp
or
int3
mov
hlt
push
mov
add
lock
inc
pop
mov
pop
inc
dec
bound
ret
push
scas
js
sti
add
inc
lods
daa
lret
ds
call
push
mov
mov
out
aaa
cmp
loop
mov
jb
data16
notb
jp
aas
loope
lcall
loopne
mov
cmpsb
mov
fwait
push
pop
cmc
dec
add
stos
int3
xchg
xchg
or
jne
jg
jl
mov
ficompl
jno
fdivr
adc
adc
in
mov
push
push
lock
aaa
mov
rorl
das
mov
popf
push
pop
dec
inc
inc
test
rcrb
addr16
add
sub
sahf
push
jp
inc
aam
pop
outsb
fmuls
add
push
call
xor
adc
aam
push
xor
jae
call
popa
scas
lahf
xchg
stos
aas
mov
xchg
inc
pushf
push
shll
jg
inc
dec
outsb
mov
mov
fmull
insb
xor
mov
xchg
cmp
lods
incb
sbb
xchg
lcall
sub
mov
lcall
std
or
or
sub
int
sbb
mov
dec
xchg
add
pushf
jp
loopne
pop
pop
mov
pop
inc
adc
add
jo
into
adcl
cmpl
movsl
add
mov
sbb
cli
loop
adc
js
lds
scas
jno
inc
je
mov
stc
loop
shll
add
sub
jnp
sub
push
add
shrb
or
popf
dec
and
mov
add
flds
roll
outsb
popa
or
imul
fs
and
mov
jmp
or
int
mov
hlt
icebp
imulb
jle
xlat
mov
in
pop
int
insb
push
cmpsl
dec
rcrl
out
dec
lret
mov
xor
lret
addl
out
daa
push
lret
pop
jmp
push
js
outsb
ja
or
fnstenv
fs
adc
and
pop
cld
pop
test
sub
mov
dec
push
xor
sub
sub
or
xorb
int3
lods
js
adc
iret
inc
pusha
cld
ljmp
sti
movsb
xor
mov
clc
sbb
lock
mov
addl
mov
mov
cmp
inc
cmp
outsb
inc
fisubrs
int3
mov
mov
push
or
push
je
mov
mov
mov
and
dec
dec
mov
mov
jns
jge
mov
fwait
mov
mov
out
push
outsb
adc
mov
sbb
dec
jg
cmp
jae
add
sub
pop
leave
dec
and
mov
add
sbbb
stos
jle
insb
cwtl
mov
and
in
out
decb
imull
je
je
push
cmp
in
imull
mov
out
out
or
mov
les
jmp
cmp
mov
xchg
mov
adc
pop
jb
shll
imul
jne
loope
inc
adc
dec
imul
ds
jge
mov
cli
inc
fidivrs
or
addl
shrb
aaa
sub
aam
cmp
xor
mov
mov
movsb
roll
fiaddl
insl
pop
jne
xor
adc
push
cmovo
pushf
xor
lret
out
mov
jg
pop
or
sbb
dec
xlat
add
xlat
mov
ds
mov
adc
pop
pop
out
xchg
enter
jle
cli
mov
out
pop
xchg
and
outsw
mov
and
jmp
insb
out
and
mov
fsts
sbb
xor
jo
push
test
out
mov
aad
in
jle
js
repnz
daa
or
arpl
mov
dec
cmp
lcall
popf
mov
push
test
sbb
incl
std
cmpsl
arpl
test
and
xchg
mov
sti
or
push
insb
dec
movsl
addb
dec
dec
push
dec
mov
rcll
imul
inc
mov
ret
dec
movsl
fucomip
or
fwait
mov
mov
fiadds
dec
lock
xchg
pop
outsb
inc
fs
add
iret
cmp
pop
sbb
call
fcoml
mov
std
jb
push
push
popf
push
cmp
mov
roll
xchg
dec
sti
movsl
loop
repz
or
insb
mov
xorb
cmp
add
std
into
inc
divl
adc
emms
jno
jg
sub
jbe
mov
sbbb
pop
shlb
jg
and
mov
and
mov
fidivrs
and
add
jb
jbe
add
jne
inc
loopne
pop
or
jnp
movsl
testb
mov
testb
pushl
xlat
jb
cmp
mov
push
mov
pop
push
mov
and
sub
pusha
mov
mov
cmp
pushf
jg
cmp
add
xlat
xor
sbb
jg
nop
jno
fucomp
ret
ds
int3
mov
xchg
mov
sahf
bound
xchg
jae
roll
fidivrs
lea
jp
nop
add
in
cli
sbb
sub
idivl
in
popa
and
mov
lret
cmp
dec
mov
div
pop
add
push
jns
imul
sbb
adc
pop
in
in
rorl
mov
add
scas
cld
adc
ds
mov
pop
mov
jb
nop
lods
scas
jp
mov
stos
cmp
test
mov
sbb
popf
lahf
fsub
and
je
dec
adc
and
orb
mov
jmp
notb
lods
dec
int3
enter
movsb
add
movsl
mov
out
lret
fmul
cmp
push
push
hlt
xchg
fcomip
ljmp
sbb
es
push
push
cmpsl
pop
mov
pop
push
sbb
lock
repz
or
das
fwait
mov
mov
add
dec
loop
dec
lret
xchg
jg
xor
dec
mov
xor
cli
cmp
test
cli
cmp
mov
mov
add
xchg
pop
jg
sub
xchg
sub
xor
mov
ficoml
add
iret
fcmovnbe
add
or
jbe
mov
jnp
stc
test
es
xor
mov
dec
loopne
addb
clc
insl
xor
push
out
popa
push
adc
pop
push
ljmp
and
pinsrw
into
or
inc
repz
sub
sbb
jnp
les
pop
test
dec
mov
sub
add
mov
xchg
imul
mov
sbb
mov
icebp
cmp
cmpsb
lea
pop
dec
call
pop
mov
jg
loopne
imul
lahf
pop
sbb
insb
int3
je
jp
aad
popa
push
je
push
and
pushf
testl
add
stos
loopne
shll
fs
push
shll
push
jbe
mov
ret
fs
mov
jmp
pop
sub
adc
push
jg
cmp
sbb
pop
xchg
pushf
bound
mov
and
adc
push
lds
cld
xor
enter
fldenv
hlt
push
jecxz
push
add
out
sbb
lret
jl
mov
and
andl
out
mov
stc
sbb
movsl
test
lret
push
sbb
cmpsl
call
push
enter
lret
mov
movsl
jb
das
cmp
dec
or
loope
lret
lahf
jle
or
jp
jp
pushf
test
insl
mov
sbb
pop
jp
xor
loopne
mov
lock
mov
mov
sbb
xchg
and
scas
iret
lods
jno
bound
xchg
ljmp
into
int
jp
push
sub
jecxz
jp
pop
insb
test
aas
sbb
movsl
or
daa
aas
test
inc
mov
bound
xchg
add
es
push
and
lret
pop
leave
pop
add
loop
popf
stos
fstl
jmp
loop
push
fisttpl
mov
sbb
inc
and
pop
out
mov
gs
sti
outsb
fsubrs
inc
mov
mov
cs
pop
push
or
seta
shll
enter
dec
or
mov
mov
and
cmp
mov
xor
mov
push
mov
fistpl
outsl
jns
into
movsl
dec
push
push
insb
pop
pop
jbe
adc
fnstsw
inc
cmpsl
mov
mov
xor
pop
aas
pusha
mov
call
mov
sub
jle
jbe
mov
lea
or
cltd
push
mov
fidivl
inc
cmp
pop
cmpb
fnstsw
fwait
sbb
ds
mov
mov
push
dec
pusha
nop
enter
and
popf
call
add
jecxz
jecxz
mov
hlt
cmp
inc
pop
jge
cmp
popa
test
fxch
rclb
inc
cmpb
ret
inc
lret
movb
mov
out
test
inc
add
push
imul
mov
bound
sub
sub
mov
stc
jo
mov
scas
fdivs
xchg
std
popf
mov
fisubrs
loop
shlb
hlt
jp
fldenv
in
iret
fs
push
sbb
jmp
ds
loope
inc
inc
jmp
frstor
repnz
xchg
in
daa
pusha
shlb
stos
cmc
mov
push
cmpsl
shll
inc
or
mov
fs
sbb
push
push
add
push
adc
data16
and
shl
lods
cmpsl
xchg
push
push
jge
leave
push
cld
cs
daa
cmpsl
rclb
shrl
push
loope
repz
xor
dec
leave
call
repnz
ret
add
mov
lret
push
xchg
outsl
insb
movsb
popf
lcall
pop
xor
xchg
sahf
mov
bnd
xor
loopne
adc
pushf
mov
push
jmp
pop
lds
mov
cmpsb
lret
pushf
push
outsl
fcomi
daa
and
adc
dec
xchg
cwtl
cmpsl
inc
sti
mov
mov
add
and
adc
xchg
dec
dec
push
mov
test
or
mov
dec
cmp
sbb
mul
xor
sub
add
add
lods
add
arpl
je
push
jmp
repnz
jne
js
dec
lret
into
xchg
ds
or
xchg
repnz
fxch
jns
pop
addr16
ja
fcomps
sub
mov
es
pop
push
jno
push
shll
movsb
cmpsl
paddd
sub
fnsave
mov
dec
mov
frstor
into
and
or
idivl
xchg
jae
popa
mov
loopne
cmpb
add
mov
or
aam
imull
lcall
mov
xchg
adc
push
mov
test
sub
mov
xchg
or
add
push
cmp
sbb
testb
adc
pop
test
enter
pop
mov
ja
xchg
add
sub
das
test
stos
pop
or
daa
push
xchg
pop
aad
orl
mov
test
nop
pop
push
fisubrl
out
jae
lcall
push
push
xchg
idiv
das
sub
push
adc
pop
jmp
add
mov
cmpsb
loope
xchg
ret
push
xlat
jnp
sbb
or
rcl
test
mov
jb
pop
mov
popf
out
mov
int
inc
jmp
adc
sub
and
iret
insb
aaa
rorl
rcrb
inc
ret
push
fnstsw
pop
sbbl
testl
movsl
pop
leave
je
push
xchg
ret
add
lret
mov
push
inc
push
pop
xchg
dec
aas
loopne
roll
addr16
xorl
notb
stos
xor
lcall
vmaxsd
mov
and
dec
jmp
pop
mov
adc
or
gs
and
add
arpl
loop
lret
scas
inc
cmp
andl
inc
push
mov
mov
mov
outsb
sub
dec
sar
mov
and
mov
lret
ret
sbb
movsl
nop
loopne
jne
std
sysenter
pop
shll
mov
ss
cmp
add
mov
add
inc
and
push
sub
and
pop
scas
ljmp
sub
leave
pop
stos
dec
adc
pop
jge
pop
test
or
sub
and
pop
xor
xor
nop
xchg
mov
add
jnp
out
add
mov
int
insl
or
xchg
bound
sub
xor
std
shrb
pop
jns
int3
clc
mov
push
xchg
sub
dec
xor
xorl
dec
xchg
rcrl
scas
lret
fistps
jg
add
mov
dec
mov
cmp
sub
xor
mov
std
inc
cli
std
orb
cmp
ds
sbb
push
pushf
movsb
imul
jmp
aas
pop
inc
push
sub
dec
in
movl
jmp
jne
push
sti
mov
mov
stos
outsl
lds
mov
mov
aam
inc
jne
cmp
pop
mov
cmp
rcrl
sub
test
outsl
jno
or
mov
test
cmp
jl
mov
and
ds
cmc
add
mov
or
loope
aam
std
lret
pop
xchg
sbb
sub
add
jle
mov
jno
mov
mov
pushf
jge
or
sub
inc
jo
mov
mov
sub
int
or
dec
test
dec
dec
nop
jns
icebp
xchg
out
or
cwtl
pop
and
je
adc
mov
sub
lods
push
and
xor
push
or
shll
in
aad
pop
jle
jno
mov
pop
and
leave
cmpsl
rorb
and
jo
imul
cwtl
shll
jo
sub
xchg
inc
lret
loope
xchg
pop
std
sub
add
sub
rolb
insb
aam
bound
mov
mov
mov
dec
sbb
jl
sbb
dec
cmp
outsb
aaa
js
cmp
inc
imul
lds
lahf
and
cmp
fistps
cmpsb
xchg
fiadds
daa
scas
ret
imul
out
ds
ret
mov
pusha
cmp
jmp
adcl
scas
mov
mov
fsubl
sahf
je
std
dec
jo
into
lret
add
add
aas
lahf
sub
fcmovnb
clc
push
inc
stos
test
movsl
mov
cmp
jp
testl
cmpsb
xlat
dec
pop
xchg
and
add
sub
out
leave
mov
and
inc
push
pop
mov
test
fsubrs
stos
sbb
fdivrl
inc
sti
int3
pop
pop
iret
xchg
subl
mov
in
outsl
mov
add
jbe
jne
notb
out
clc
out
cmc
mov
mov
push
nop
mov
jmp
push
add
or
jb
mov
cld
or
and
adc
cmp
int3
imul
call
in
loopne
inc
inc
repz
xor
jl
lods
inc
in
xor
sub
out
std
or
scas
pop
cltd
or
std
jo
fsubs
pop
sbb
xchg
loopne
pop
pop
xlat
std
sbb
jle
lcall
jne
ror
repz
xchg
movsl
fsubs
sub
mov
daa
push
lea
push
jl
xchg
xor
call
jl
pop
jae
cmp
mov
icebp
nop
cmp
and
mov
insb
popa
test
mov
icebp
cmp
adc
mov
cwtl
idiv
negb
or
add
adc
sbb
mov
lcall
add
mov
aaa
push
movsl
jbe
add
into
jl
xchg
add
in
push
mov
mov
xchg
fisubl
fsts
mov
pop
test
adc
pusha
push
les
cmc
shll
aam
cmpsl
add
lea
cmp
loopne
aad
mov
stos
mov
or
lods
cmp
into
mov
adc
or
add
xchg
sarl
scas
test
test
mov
out
fidivrs
push
pop
test
ftst
sub
inc
xchg
cmp
shrb
sub
mov
dec
jmp
sbb
pop
fs
push
adc
paddusw
and
and
or
addr16
jae
ss
lcall
add
ret
pop
mov
jge
cmp
jne
pop
sub
sub
xchg
lret
jecxz
mov
inc
nop
test
xchg
mov
stos
js
addl
sub
jne
xchg
xchg
push
repz
and
and
mov
daa
or
js
xlat
cmp
ljmp
adc
pop
mov
rcr
dec
push
add
pop
sub
insl
push
ja
ja
cmpsl
push
mov
xor
outsl
test
mov
test
dec
repnz
xor
jns
dec
nop
xchg
push
cmp
mov
jo
stos
push
mov
aas
mov
je,pn
frstor
iret
sbb
insb
jmp
aam
ret
lret
jne
lret
adc
or
dec
jnp
es
or
jne
enter
jne
mov
pop
push
enter
xor
out
jbe
pop
test
jle
mov
jmp
push
mov
ss
xchg
pusha
add
and
lea
push
xor
mov
mov
cmpsb
scas
mov
je
pop
inc
fidivl
idivl
ret
insb
pop
cld
ret
fistpl
pop
jle
aas
cmp
dec
movsb
or
fimull
fiaddl
insb
mov
xchg
insb
jne,pt
ret
fsubrs
pop
and
sbb
mov
cmpsl
stos
insb
insb
sub
stc
jp
out
inc
xchg
cmp
inc
mov
aaa
inc
in
mov
xchg
test
mov
imul
ljmp
mov
jo
xchg
adc
cmpsb
add
mov
or
and
je
sub
pop
out
scas
mov
sbb
push
pop
lods
lods
mov
xchg
jecxz
xor
ret
fnsave
sub
dec
mov
sub
iret
js
xor
addr16
xor
or
pop
lcall
in
out
es
test
inc
mov
push
jge
es
popf
sbb
arpl
lcall
test
mov
mov
jge
addr16
xchg
dec
lea
and
or
pop
add
ljmp
adc
divb
add
or
loop
sti
xchg
xchg
mov
xchg
xchg
sub
or
fstpl
hlt
fisubrl
addr16
dec
sbb
cmp
ja
in
inc
sbb
inc
mov
jae
cmp
xlat
pop
aaa
mov
sub
adc
int3
inc
fldl
movsl
sbb
ljmp
arpl
sub
outsb
clc
enter
js
insl
cli
fstps
outsb
cmp
lock
mulb
mov
adc
gs
cmp
fs
mov
jg
cmp
int
adc
jae
jb
lds
add
sub
fucomi
arpl
arpl
sti
push
cltd
cmc
and
mov
and
xor
in
adc
pop
mov
mov
sbb
subl
mov
xor
outsb
out
add
in
xchg
out
stc
push
adc
inc
push
add
scas
pop
ds
mov
fiaddl
aas
push
dec
lcall
jl
xchg
dec
ror
scas
mov
popa
es
jne
jle
mov
out
push
add
jle
jg
xchg
xor
out
sub
movsl
in
inc
test
ja
dec
stos
stos
adc
mov
das
adc
add
pop
sub
popf
push
mov
movsl
rcrl
sub
repz
loopne
std
dec
pushf
pop
push
sub
mov
pushf
testl
jo
mov
add
lods
addl
sarl
or
sbb
and
cltd
inc
mov
test
pop
adc
or
xchg
adc
push
pop
iret
mov
sub
dec
test
xchg
push
stos
shlb
mov
and
in
test
and
sbb
and
shl
les
mov
test
orl
xor
xor
jp
repz
fisubrs
rolb
filds
ljmp
dec
dec
sub
popl
dec
imul
aad
mov
je
pop
adc
daa
popa
push
sahf
lea
jl
or
js
sbb
sbb
clc
cmc
sub
pusha
in
out
in
shl
into
arpl
insl
iret
iret
lea
or
repnz
popf
push
inc
mov
xor
int
clc
sub
or
dec
mov
lock
mov
sub
shlb
dec
xchg
xor
leave
lcall
and
sete
pop
xchg
into
or
push
popa
icebp
dec
push
roll
inc
push
mul
lahf
repz
mov
inc
push
jg
adc
xor
shrb
push
jg
push
mov
mov
mov
sti
sub
in
push
mov
shr
xor
dec
clc
mov
push
fcmovne
push
xor
adc
xlat
test
adc
notl
push
aam
and
xchg
cmp
inc
and
test
ss
out
or
test
and
lods
push
lods
mov
sub
pop
pslld
adc
leave
jns
mov
adc
fcomip
sar
jae
gs
mov
or
fistpll
push
adc
sub
scas
aas
test
lods
jae
inc
xchg
into
stc
loopne
and
jg
cmc
jo
sbb
xor
test
cmp
out
inc
jl
pop
stos
loope
fdiv
dec
pop
repz
jne
mov
add
mov
repz
cmc
stc
mov
in
lds
insl
pop
pop
inc
aad
mov
cli
decl
cs
or
lods
add
mov
inc
cli
xchg
aam
cltd
mov
test
and
mov
les
xchg
lods
xchg
push
in
add
dec
imul
sub
pop
mov
jecxz
repnz
and
cwtl
jge
pop
cmp
stc
mov
jmp
or
dec
adc
shl
data16
loopne
addr16
aaa
fdiv
gs
mov
mov
lods
sub
inc
mov
mov
loop
jne
sbb
imul
das
sarb
adc
scas
ljmp
pop
mov
mov
xor
inc
fisttpll
inc
loope
sbb
call
inc
mov
xchg
push
mov
dec
mov
lea
and
imul
inc
mov
push
leave
rolb
ljmp
rorl
push
mov
popa
xor
pop
call
push
push
sub
movsl
stc
shr
dec
orl
test
sbb
mov
pusha
cmp
or
mov
push
mov
sbb
popa
test
insl
xor
pop
xor
bound
push
cmp
out
xor
addl
test
ret
xchg
lahf
dec
mov
repnz
jnp
mov
lret
shrl
or
cmp
in
jne
jnp
fildl
cmp
pop
or
lahf
cmpsb
es
mov
mov
jl
stos
jb,pt
mov
jg
push
xchg
scas
jae
push
mov
xchg
subl
insb
jns
pop
sbb
scas
popf
pop
mov
jns
push
dec
push
mov
lea
test
or
das
gs
and
mov
out
push
das
insb
outsl
cli
mov
mov
outsl
add
add
je
pop
ret
dec
add
jo
xchg
gs
pop
jo
push
es
sbb
jmp
shl
test
popa
mov
out
aaa
pop
mov
xchg
loopne
add
sub
fdivl
pop
subb
mov
rclb
pusha
pop
and
ffree
add
xchg
inc
imul
test
dec
push
mov
daa
repz
ficomps
and
in
add
dec
popf
popa
or
mov
push
stos
adc
add
lret
loopne
std
mov
jle
pop
pop
sbb
and
cmpsb
icebp
aas
imul
adc
mov
xlat
mov
cmpsl
fmul
cltd
sarl
and
jg
jl
sbb
pop
xor
rorb
inc
inc
push
mov
popa
jnp
lea
or
in
mov
dec
cmp
sbb
jb
cmp
push
icebp
sarb
jle
sub
aaa
in
fs
push
arpl
inc
ljmp
cwtl
ret
fstps
add
dec
shlb
pop
dec
outsl
xor
jae
lret
jne
call
cmpsb
add
jnp
ja
nop
dec
adc
in
xchg
adc
aas
lret
sbb
ja
pop
cmp
call
nop
les
rorb
bound
cmp
mov
xchg
andl
pusha
xchg
sbbb
pop
sub
sahf
ficomps
sub
in
insb
add
add
xor
lods
bound
lock
into
sti
inc
xchg
xchg
loope
push
in
xchg
pop
cmc
dec
mov
xchg
xchg
fbstp
jns
fstpt
enter
shlb
inc
nop
or
add
sahf
pop
mov
insl
jo
fmull
add
and
jb
pusha
inc
jno
imul
fdivrp
jmp
loop
jg
push
xchg
mov
clc
leave
clc
inc
fdivrs
push
push
jmp
jmp
movsl
hlt
jne
pop
dec
jg
ljmp
mov
mov
rcrb
sti
push
mov
sub
mov
loop
jle
mov
into
or
jecxz
dec
iret
scas
fs
sub
aaa
outsb
das
rcrb
in
das
out
pop
and
and
adc
inc
aas
mov
dec
sub
add
mov
hlt
mov
subl
andb
outsl
ds
adc
es
out
xor
cmpsb
xor
dec
popa
lods
dec
mov
mov
pop
push
sbb
outsb
dec
lret
sbbl
adc
pmuludq
ja
jo
jp
vmwrite
es
xchg
add
shrb
pop
add
fldenv
jbe
sets
movsl
jl
ljmp
dec
lret
in
add
hlt
mov
enter
xor
adc
xlat
jns
jp
popa
jo
mov
or
imul
or
sub
in
jbe
mov
sbb
dec
shrb
fisttpl
cmp
and
inc
adc
adc
mov
xor
test
mov
in
roll
stos
push
dec
cmp
or
dec
shll
pusha
rcl
add
jecxz
mov
or
jg
in
int3
inc
or
je
aad
loopne
addr16
ja
addr16
pop
fwait
add
stc
fstpt
mov
loopne
dec
pop
mov
push
mov
call
out
cmpb
sar
pop
mov
jp
shl
sub
lods
lds
pop
pusha
imul
sti
push
pop
scas
stc
jp
jge
jmp
jp
adc
in
lods
push
dec
popa
rclb
push
pop
pop
aas
into
fwait
xchg
in
test
test
push
insl
sub
mov
in
or
adc
hlt
jecxz
adcb
dec
mov
in
rorl
out
and
sahf
jb,pn
inc
xor
stos
adc
repnz
call
cmp
dec
insl
popf
xchg
jg
jp
jne
inc
scas
sahf
pop
leave
push
lret
orb
push
dec
fwait
and
mov
or
cmp
add
mov
ja
xor
adc
or
push
scas
inc
mov
cmp
int
inc
pop
pinsrw
cmp
ret
int3
xor
inc
out
mov
out
add
in
movl
or
sub
mov
push
repnz
ffree
shrb
in
das
inc
fs
je
hlt
sub
jg
and
incl
xchg
mulb
sbb
cmp
mov
push
xchg
pop
push
stos
sbb
mov
icebp
adc
out
cli
mov
inc
cmpsb
dec
cmpb
cmpsl
in
andb
push
jl
push
pop
clc
dec
into
stos
xchg
mov
out
dec
adc
cwtl
jns
xor
imul
mov
ljmp
addr16
ret
push
mov
roll
push
mov
out
out
dec
adc
dec
les
scas
divb
cmp
mov
pop
cmc
mov
fwait
popf
mov
es
popa
jmp
aas
stos
mov
iret
sub
adc
mov
inc
jnp
push
scas
mov
xor
imul
xchg
add
adc
icebp
test
xor
pop
bound
mov
out
cmp
fsubl
dec
cld
dec
iret
popf
je
sbb
xchg
imul
subb
lahf
pop
dec
pushf
cmp
add
in
sbb
es
pop
aas
std
jns
cwtl
mov
incb
gs
xchg
cmp
xlat
sbb
add
or
jae
sub
jmp
mov
and
or
mov
mov
or
dec
fistpll
jno
mov
mov
mov
add
in
movsl
inc
add
mov
mov
daa
lret
loopne
sub
es
jmp
lret
pop
in
and
sti
push
leave
push
inc
push
push
mov
adc
adc
fdivr
mov
jo
push
lret
mov
jl
sbb
jmp
fs
xlat
jmp
or
mov
jno
rol
fs
testb
jg
xchg
inc
inc
xor
ret
xor
ret
test
xor
clc
out
movsl
clc
out
and
ja
lods
sub
arpl
aas
loope
add
or
in
push
pop
fidivrl
addr16
cwtl
mov
gs
leave
sub
xchg
ljmp
rcrl
and
orb
jmp
out
xchg
fnstsw
inc
sub
push
jne
clc
mov
es
cmp
cmpb
mov
sti
adc
popf
pusha
fimuls
adc
sahf
gs
pop
push
in
jo
mov
and
adc
clc
repz
loop
aas
rolb
mov
lods
scas
add
cs
scas
cmpsl
out
push
mov
fsubrl
push
push
add
sub
movsl
mov
push
mov
adc
cwtl
or
jmp
gs
xor
xchg
out
cmp
xchg
lds
sub
in
std
cwtl
mov
mov
mov
hlt
jge
test
popf
mull
pop
mov
sti
shll
jecxz
cmp
xor
adc
mov
add
and
inc
inc
cmp
imul
fsubs
push
and
frstor
pop
xchg
add
bnd
test
loop
cmp
popa
pop
andb
lea
mov
dec
ror
lcall
subl
shrb
sahf
inc
call
jbe
int
ss
mov
cmpsb
rcrl
fnsave
xchg
sub
lcall
icebp
or
in
add
dec
fcmovb
dec
dec
shlb
sub
xorl
or
mov
mov
in
mov
aam
mov
stc
xorb
push
scas
pop
clc
mov
push
loopne
fsubl
fcmovnb
jg
mov
or
jp
je
in
int
inc
out
cmp
lahf
inc
stos
stos
push
out
jnp
sub
test
add
lret
xor
dec
hlt
jb
lcall
imul
lret
xor
nop
inc
pop
sbb
pop
mov
int3
in
cwtl
lock
cmp
loope
pop
inc
ja
lret
jbe
and
adc
xchg
in
dec
add
repz
inc
and
xchg
cltd
xor
je
adc
xchg
pusha
ffreep
and
xchg
jmp
hlt
iret
or
stos
lods
in
insb
mov
jmp
vsqrtsd
jno
xor
cmp
push
cmp
repnz
push
cmp
pop
xchg
andb
int3
cmp
daa
movsb
or
subl
clc
dec
sub
mov
lock
les
push
repnz
scas
jnp
call
out
lahf
int
mov
and
cmp
aas
stos
loopne
mov
pusha
jg
cmp
popl
insb
mov
leave
nop
std
jp
pop
add
pmaxub
mov
lock
mov
push
add
lock
mov
push
in
in
pop
enter
sub
mov
ret
and
push
in
cld
fists
ret
mov
icebp
pop
mov
inc
xchg
adc
cmp
icebp
enter
dec
xchg
mov
out
movsb
aad
xchg
iret
xchg
xor
push
movsb
and
ret
cli
cld
scas
or
mov
and
fldt
popa
or
int3
add
mov
xor
and
xchg
enter
int3
lahf
jno
insl
cmpsl
xchg
dec
push
xor
sbb
das
sub
add
cmp
mov
test
mov
jne
sbb
pushl
pop
aad
sahf
sub
cmp
andb
sbb
cmp
pop
mov
dec
les
ss
jge
mov
inc
pop
call
dec
sbb
pop
xchg
outsl
sbb
xor
pop
popa
pop
cli
cmp
lock
and
dec
adc
rcll
bound
testl
pushf
or
mov
mov
mov
xchg
inc
dec
or
dec
inc
adc
push
int
pop
pop
lcall
iret
clc
pop
addb
and
repz
lahf
adc
popl
iret
js
add
xor
push
mov
out
mov
fdivs
cli
jmp
cmpsl
scas
mov
sbb
adc
push
das
pop
imul
add
jge
and
push
int
cmc
add
pusha
xchg
push
mov
sub
sahf
jmp
ret
xor
in
adc
test
lea
out
into
add
fdivr
outsl
push
jne
mov
sub
mov
push
sub
dec
mov
jne
lods
jl
data16
xchg
nop
or
lds
mov
jbe
cmc
aad
movsb
sbb
push
aas
lret
jle
fdivs
sbb
cmpsb
dec
xchg
sbb
dec
data16
sbb
bound
aas
lret
dec
push
cmc
sub
mov
aad
out
data16
pop
mov
data16
gs
fcomi
lea
ret
inc
cmp
pop
jo
scas
hlt
lcall
mov
mov
jecxz
stc
mov
mov
repz
lret
mov
enter
jnp
pop
add
imul
loope
les
jne
inc
in
xor
xchg
repnz
dec
jle
sti
rcrl
cmp
fisubrl
adc
ret
xor
test
icebp
popf
nop
push
inc
test
mull
enter
int3
popa
xchg
push
jmp
ds
outsl
decb
inc
mov
xor
mov
cmp
aaa
cmp
clc
lods
sti
imul
out
in
fwait
inc
dec
xchg
int3
mov
out
jl
inc
lcall
jae,pn
outsb
sbb
mov
lret
xlat
shll
sbb
push
js
xor
loopne
xor
cmp
in
je
push
xlat
mov
mov
imul
pop
ffreep
xor
jmp
xor
and
call
inc
xor
clc
add
es
jle
rorb
cmp
jbe
lahf
adc
out
aas
fistpl
push
pop
imul
std
out
jle
push
mov
dec
fildl
mov
les
push
adc
fcmove
or
data16
jns
fsubrs
sbb
sbbb
call
mov
movb
fdivrs
push
and
jecxz
push
mov
pop
push
mov
sbb
xchg
pop
jno
push
fnstsw
lcall
push
mov
jg
xchg
les
mov
addr16
jmp
push
lock
lret
mov
mov
push
mov
or
mov
xchg
push
jae
rolb
aam
clc
adc
test
mov
das
loop
sbb
std
inc
pop
fisubrl
mov
fcoms
lret
sub
add
push
movsl
and
xor
dec
mov
loop
cli
jg
outsl
xor
ds
stc
mov
sbb
rolb
lods
sbb
bound
outsb
mov
cmpsl
sbb
fistl
mov
jno
jle
lahf
lock
jnp
xchg
movsl
fldenv
pop
pop
test
clc
bound
imul
dec
outsl
es
push
cld
gs
lds
subb
jae
jmp
ret
enter
test
jbe
mov
adc
dec
xlat
cmp
lcall
test
aad
js
xor
loope
cwtl
dec
mov
shlb
iret
psllw
cmc
ds
adc
jp
push
sahf
loop
test
fs
daa
test
dec
sub
push
or
sti
and
cs
mov
mov
pop
mov
mov
shl
fldl
lret
and
std
mov
inc
cwtl
mov
addr16
pushf
jno
jle
inc
xor
inc
mov
bound
pop
push
fmull
insl
out
inc
and
cwtl
into
loop
popf
lock
push
sti
xor
jne
cmp
push
sbb
jne
and
inc
lods
adc
mov
mov
mov
dec
shll
inc
cmp
mov
dec
add
ss
mov
xchg
in
jae
repz
xchg
and
or
dec
adc
out
out
adc
pusha
popa
fistl
mov
jne
or
cwtl
pop
in
icebp
xchg
stc
test
jl
adc
mov
xchg
xor
cmp
das
pop
nop
out
sahf
scas
pop
std
sti
dec
push
cmp
fdivrl
push
pop
push
add
lret
sub
sarb
dec
and
loop
sbb
fs
xchg
mov
mov
add
pop
dec
fbstp
push
repnz
jb
scas
lods
add
mov
sbb
mov
mov
inc
inc
mov
out
out
xor
push
dec
shrb
aaa
fs
loop
cld
test
repnz
xchg
sub
cmpsb
mov
add
sbb
sub
je
fnstcw
jae
push
popf
sub
movsb
sub
xchg
pop
jmp
mov
popl
adc
or
or
fldt
adc
xlat
mov
jecxz
subl
fwait
movsb
fstp
or
inc
ror
in
fdivl
fsubs
inc
adc
mov
negb
push
clc
add
xchg
popa
adc
xor
mov
rcl
int3
xlat
shl
xchg
xchg
std
push
xor
andl
push
arpl
cmpsb
dec
push
pop
cld
repz
fs
xchg
cli
or
dec
pop
imul
hlt
js
cmp
bnd
popl
cmp
sub
roll
loope
jno
movsl
add
repnz
lahf
push
dec
mov
sub
cld
xor
popa
fnstcw
stos
mov
fsubrs
cmc
ficoml
movsb
fwait
adc
cli
aam
aad
mov
imulb
jbe
std
data16
dec
pop
js
scas
leave
push
mull
les
je
inc
cmpsl
addr16
jg
aas
mov
xchg
xor
dec
enter
pusha
lret
pop
pop
dec
dec
cmp
dec
inc
lahf
inc
test
push
inc
xchg
pop
gs
mov
dec
daa
sub
and
cmp
cmp
push
clc
push
push
iret
sbb
in
lcall
adc
xchg
test
fadds
xchg
in
xor
lods
xor
fnstsw
adc
push
loope
dec
mov
cmpsl
jnp
xor
dec
inc
ljmp
xchg
daa
sub
push
mov
jbe
aaa
lcall
cmp
mov
aaa
pop
lods
in
sub
cltd
xchg
lock
fisttpll
and
stos
push
mov
repnz
add
clc
sub
pop
rcr
into
inc
and
dec
push
imul
lds
out
mov
sub
das
out
or
data16
into
mov
mov
adc
sub
mov
sarb
fsubl
mov
cld
push
lcall
sub
inc
rorb
jge
add
repnz
fld
xchg
lcall
icebp
jp
mov
sub
inc
incb
jp
mov
pop
push
les
adc
pop
lret
mov
rcl
jl
pushf
push
dec
or
aas
or
dec
repnz
mov
decb
xchg
inc
sub
jg
mov
ret
cld
mov
dec
cld
add
addr16
pop
sub
jns
inc
mov
fldz
rcll
shlb
cs
and
push
push
push
jns
cmpsl
int
divl
jb
mov
cmpsb
sbb
sub
xor
scas
inc
insb
or
fisubs
lock
outsl
add
rcrb
mov
ja
hlt
addr16
jge
inc
aam
xlat
and
movsb
sbb
xchg
xor
aam
ljmp
jne,pt
fldl
and
fstpl
cmp
sar
sub
cli
and
shrb
cmpsb
mov
mov
xorl
andb
es
repnz
in
lds
bound
js
jae
pop
fnstenv
xchg
push
cli
into
insb
and
stos
cmp
cwtl
mov
add
push
xchg
icebp
rolb
dec
lods
lcall
add
inc
je
dec
repz
pop
lret
enter
inc
out
or
adc
mov
and
dec
or
inc
xchg
repnz
je
repnz
insb
shr
sbb
insl
inc
add
lods
adc
in
xor
fisubl
inc
xor
stos
or
jmp
xchg
setb
mov
dec
jl
popa
paddw
jno
sub
pop
pop
in
into
sbb
cld
push
shlb
jne
lock
in
xchg
icebp
sub
ja
aaa
cs
pop
in
push
cmpsl
icebp
jno
sti
dec
call
add
subl
dec
fldcw
stc
xor
test
adc
iret
addr16
dec
call
pushf
push
mov
mov
mov
or
add
arpl
pop
pusha
test
fcmovne
jl
movsl
fnstsw
imul
add
lret
or
fists
sbb
ljmp
subl
sub
mov
push
push
lcall
mov
xor
mov
push
adc
dec
mov
scas
sti
push
dec
xchg
je
sbb
out
test
rcll
xchg
and
cmp
sub
out
test
push
xor
pop
jb
outsl
lods
fnstcw
cmp
je
jno
data16
sub
xor
xlat
sbb
add
stc
inc
mov
sub
xlat
mov
mov
int3
pop
out
mov
mov
out
jmp
mov
and
mov
dec
es
test
dec
roll
js
mov
iret
jns
ss
scas
mov
xchg
mov
loopne
cmp
mov
xchg
mov
sub
insl
mov
pusha
enter
lahf
aad
cli
adc
sbb
adc
sub
jne
stos
popa
push
push
pushf
mov
dec
mov
aad
xchg
jl
jmp
leave
das
test
repz
imul
into
or
rol
pop
push
gs
lcall
lods
les
jb
add
lds
jns
jecxz
outsb
gs
jl
mov
addr16
mov
jg
aam
test
xchg
addr16
inc
mov
jp
gs
sub
addr16
out
and
adc
mov
and
sub
cmc
jb
push
call
in
mov
popa
mov
mov
sub
stc
jno
add
icebp
fs
in
cmpsl
xchg
jp
js
popf
add
testl
jle
test
dec
inc
push
dec
pop
dec
popf
jbe
cld
or
cwtl
or
adc
push
mov
push
call
push
mov
sub
je
push
mov
sub
out
dec
mov
mov
inc
xor
jle
scas
test
and
cmp
push
jae
dec
mov
aaa
sub
xchg
cli
pop
mov
mov
test
call
stc
push
or
push
shlb
add
rolb
movsl
inc
and
xor
pop
dec
mov
sub
xor
cld
out
xchg
mov
dec
jle
dec
lret
dec
in
adc
cmp
sbb
jge
shlb
outsb
scas
aaa
into
leave
jnp
fnstcw
mov
clc
lods
mov
ss
push
inc
das
inc
xor
lcall
test
or
xchg
std
mov
cmp
or
cmp
mov
sbb
cmc
in
test
or
inc
jg
push
push
lret
xchg
scas
sub
out
add
dec
int
out
push
mov
std
jmp
lods
add
fcomps
scas
hlt
test
call
push
outsb
cs
repz
insl
pop
repnz
sbb
test
jne
arpl
dec
push
sub
jge
in
pop
popf
pop
push
xchg
nop
popa
push
mov
mov
insb
xchg
adc
mov
stc
outsb
fsubrl
insb
icebp
jae
add
adc
scas
xchg
mov
vsubps
in
xchg
scas
jl
sbb
hlt
xchg
cmpsb
mulb
mov
stc
jp
sbb
scas
shrl
push
pop
push
cli
fists
xor
adcl
lret
out
xchg
or
xchg
xchg
loopne
xor
and
adc
outsl
mov
inc
pop
cmc
scas
gs
sbb
mov
fs
cmp
into
mov
push
add
fs
test
mov
cmp
test
or
pop
cwtl
push
mov
hlt
out
stos
push
mov
xor
and
jg
in
movsb
xor
push
nop
in
mov
icebp
pop
add
cs
aas
cmp
in
xchg
mov
fcmovbe
enter
mov
rcrl
push
and
adc
jae
mov
sub
test
lcall
adc
js
pop
sbb
mov
and
xor
dec
fnsave
out
lahf
shl
sub
push
sarb
mov
out
fwait
add
iret
data16
pop
cmp
jns
jle
push
pop
insl
add
into
dec
pop
jne
jne
push
loop
sbb
sbbb
jo
iret
or
enter
incb
loop
fbld
aaa
addr16
dec
popa
fwait
and
pusha
mov
cmp
pop
sbb
vmovlpd
out
cmp
sbb
mov
mov
or
popf
mov
lock
int3
inc
push
gs
xor
push
fucomp
cwtl
stos
pop
addl
jnp
or
ss
imul
cltd
cs
inc
cmp
addr16
mov
clc
and
dec
in
rorl
cmc
push
adc
pusha
jl
mov
mov
mov
mov
adc
bound
outsl
rcrl
xlat
jmp
push
notl
mov
fst
xchg
ret
xor
scas
adc
adc
cmpsl
movsb
fs
pop
inc
js
xchg
movsb
sti
fs
jl
ljmp
push
add
es
shlb
stc
push
and
mov
and
gs
ficoml
movsb
xchg
stc
add
leave
rorb
xchg
cmp
xor
xchg
movsl
out
movsl
push
and
jecxz
or
add
roll
inc
cmp
fcoml
adc
xchg
ret
mov
inc
or
repnz
popf
iret
sbb
sub
jl
push
adc
icebp
dec
mov
xor
push
dec
bound
xor
out
ljmp
mov
sbb
cmpsl
out
in
push
pop
je
ret
lahf
fisubs
sbb
xorb
or
cmp
inc
in
inc
call
fstpl
and
mov
jno
push
dec
cmp
jecxz
cmc
test
out
push
pop
mov
mov
add
out
imul
imul
cs
pusha
leave
sbb
mov
push
pop
dec
data16
fdivs
nop
push
jmp
and
dec
cmc
dec
adc
add
lods
xor
sbb
mov
mov
int3
ret
flds
mov
pop
clc
jmp
push
inc
daa
stos
jl
sbb
mov
and
adc
out
inc
cmpsb
inc
mov
adc
push
into
ficoml
stc
cmp
aam
loop
pop
and
cmp
daa
xchg
xchg
dec
sub
mov
stc
shl
in
stos
dec
mov
inc
mov
aaa
fbstp
cmpb
jle
xchg
cwtl
jno
xchg
fcomi
sbb
push
cmp
leave
loopne
cmp
cld
repnz
jp
jmp
add
mov
insb
and
xor
and
adc
push
dec
add
mov
je
xchg
push
dec
and
cmovne
fdiv
leave
or
in
aaa
fidivrl
mov
repz
mov
jmp
sub
out
lret
inc
fiadds
stos
mov
cltd
fsubs
pop
jg
out
nop
jb
gs
fisttps
pusha
divl
js
mov
xchg
sbb
and
mov
popf
and
outsl
and
out
or
scas
mov
and
movsl
divl
add
stos
sbb
rorl
push
mov
inc
test
inc
push
aad
mov
inc
enter
outsb
mov
dec
insl
gs
repnz
ljmp
push
push
adc
mov
jno
mov
mov
stos
push
and
adc
xchg
cld
je
pop
je
fstpl
mov
sbbb
jns
pop
adc
mov
repnz
movl
adc
out
imul
fsubr
pusha
sbb
out
out
inc
cmp
and
mov
addl
lea
xchg
pop
jmp
movsl
inc
inc
fdivs
push
ret
jno
and
mov
xchg
mov
imul
iret
push
cmp
jbe
jmp
inc
push
or
xor
and
xorb
in
mov
sar
subl
xor
mov
xor
cwtl
test
out
popl
fmuls
mov
mov
mov
lock
mov
sbb
and
dec
xor
je
fwait
out
imul
loop
mov
mov
ret
sti
cld
out
xor
test
xorl
int
ficoms
hlt
in
pop
scas
pop
jnp
fisubrs
dec
dec
and
arpl
lret
sbb
dec
xchg
xor
in
ret
dec
js
iret
mov
mov
mov
lods
push
push
jne
arpl
lret
inc
jno
jb
lods
xchg
jbe
jl
js
sahf
and
insb
xchg
push
and
out
int
shl
cs
movsb
stc
clc
or
aaa
insb
bsr
cmp
enter
fs
push
lret
stos
in
pop
pop
mov
adc
pop
inc
ljmp
jnp,pt
insb
pushf
jecxz
out
mov
testb
mov
dec
cli
scas
mov
mov
ret
iret
xor
repz
stos
fdivrs
dec
scas
mov
jmp
add
mov
mov
or
movsl
mov
dec
jmp
les
mov
cmp
mov
xlat
fwait
inc
pop
daa
add
xor
dec
xchg
push
ss
xlat
jbe
jmp
dec
mov
push
mov
leave
mov
lret
scas
inc
inc
mov
fcomi
pop
inc
dec
scas
sub
fprem
adc
pop
dec
mov
popf
cmc
insb
icebp
loop
imul
out
adc
mov
push
test
cmp
es
js
loopne
or
push
lahf
bnd
sti
ds
or
adc
mov
mov
popa
push
aad
pop
pop
adc
xchg
mov
push
repnz
pop
jl
mov
in
xrelease
xchg
dec
jp
rcll
mov
ret
sub
out
gs
decl
aam
out
movsl
pop
pop
dec
dec
mov
popf
lret
push
adc
jb
sbb
dec
es
cmpxchg
pusha
xor
movsl
imul
xlat
fisubl
data16
repnz
inc
jmp
adc
mov
std
adc
dec
xchg
decb
or
xor
js
enter
insb
cmp
push
push
push
enter
ds
fs
pop
pop
das
cli
into
push
jno
jmp
es
addl
sbb
mov
stos
test
push
or
out
cli
dec
dec
imul
mov
mov
push
inc
scas
lahf
or
jbe
sbb
mov
jnp
sbb
testl
jg
inc
pop
std
mov
push
adc
mov
and
xor
adc
test
sbb
inc
pop
stos
out
push
pop
ret
mov
adc
fwait
dec
and
push
das
cmpsl
xor
mov
add
sub
out
adc
mov
clc
faddl
scas
adc
cmp
jno
and
nop
jmp
jo
mov
or
lods
lods
xchg
adc
addr16
jg
and
repnz
sahf
add
aaa
cmp
adc
jns
push
mov
mov
jmp
test
fbstp
sahf
mov
adc
div
pop
jge
out
lcall
pop
and
testl
sub
pop
pop
mov
shlb
movsl
inc
repnz
mov
sbb
lcall
jb
lcall
dec
pushf
xlat
enter
rcrl
mov
ss
xchg
imul
sbb
and
and
mov
ljmp
aas
das
jle
or
out
fbstp
in
jmp
stos
js
test
pushf
aaa
add
iret
in
jmp
cmp
mov
mov
roll
xor
adc
ficoml
push
mov
leave
lahf
cmpsb
sub
test
xchg
mov
or
movsl
cmp
xor
addr16
inc
dec
pop
adc
mov
cmp
ljmp
jp
fcoml
dec
js
imulb
dec
adc
idivl
cltd
and
or
sub
mov
test
js
push
mov
push
pop
je
xor
in
rorl
adc
sub
pusha
jno
mov
xchg
pop
iret
pop
cltd
jne
lcall
push
fistps
rclb
mov
cmc
push
push
aad
adc
cmpsl
pop
jge
mov
mov
rcrb
insl
test
jg
out
inc
xchg
mov
fcmovnu
inc
push
shrb
mov
ja
mov
sbb
repnz
negb
push
add
frstor
xlat
cld
aam
das
or
out
imul
mov
stos
out
jb
sbb
sub
nop
fistl
nop
adc
mov
std
rep
push
dec
int
repnz
xlat
jns
addr16
call
ss
or
or
xor
pop
pop
mov
jp
mov
cmp
mov
out
arpl
testl
mov
gs
lods
add
sbb
sub
icebp
cli
aaa
nop
push
pop
jle
push
fdivl
or
fchs
out
shrl
pop
inc
loop
inc
cmp
lcall
mov
nop
xchg
jae
jbe
xor
pop
jno
sub
roll
push
insl
xlat
dec
addr16
sbb
adc
adc
dec
pop
push
adc
fcmovnbe
fnstenv
pop
call
xor
jg
mov
into
mov
inc
loope
repnz
lods
inc
inc
in
outsb
adc
mov
xchg
xchg
cmpsl
shlb
dec
cmc
mov
mov
or
test
les
sub
cmpb
fstp
sub
adc
cmp
iret
xchg
sbb
jno
or
and
lods
cmp
daa
xchg
notl
inc
inc
jne
movsl
sub
jge
test
test
mov
out
leave
mov
xchg
jmp
mov
and
xchg
sbb
stos
lods
fcompl
fs
fdivr
cmp
mov
cmp
adc
test
or
mov
test
out
hlt
dec
fwait
rcrl
jmp
inc
mov
js
inc
mov
push
xor
dec
out
sbb
inc
jbe
and
cmpxchg
xchg
pop
or
fisubrl
fisubl
lds
mov
decl
out
pop
mov
cwtl
xor
dec
mov
jno
shr
sar
push
mov
cmpsb
mov
std
xor
xchg
cmp
pop
rclb
push
idiv
cltd
pop
mov
arpl
push
stos
sbb
sub
xor
sbb
pop
fsubp
aad
jle
mov
andl
or
xchg
inc
ja
mov
bound
mov
leave
lods
or
cmp
push
and
inc
inc
nop
int
adc
inc
xchg
sbb
xchg
jg
inc
and
lods
cmc
jo
and
iret
cmp
push
jno
add
jp
lcall
pop
daa
cltd
insl
arpl
ja
rcl
sub
stos
sub
push
mov
arpl
mov
or
sahf
sbb
jno
movsb
or
in
pop
push
push
jb
ljmp
xchg
jns
jl
jg
dec
sub
jg
out
and
lea
daa
into
jle
pusha
das
div
jne
fsubl
adc
xchg
leave
pop
jb
mov
xor
nop
loop
mov
andl
loopne
adc
jae
fld1
cmp
sub
or
add
push
call
call
movsb
scas
std
fidivrs
mov
fnstcw
div
dec
mov
mov
popf
out
push
sahf
and
sub
loopne
push
mov
or
movsl
pop
mov
out
mov
lcall
shll
out
enter
xor
jbe
pop
mov
xchg
xchg
push
repz
repz
fsubrl
and
mov
test
mov
pop
jns
mov
push
mov
push
dec
mov
ljmp
arpl
dec
clc
addr16
shll
je
movsb
out
lahf
inc
push
add
mov
repz
sbb
or
jge
dec
xchg
xor
inc
iret
mov
pop
xchg
enter
fldenv
dec
ss
pop
and
inc
mov
add
lea
cmp
sub
outsl
dec
push
push
dec
iret
leave
push
cmc
dec
mov
adc
rclb
repz
inc
stc
in
mov
sbb
lea
mov
lcall
testl
jecxz
jae
push
aaa
inc
jle
mov
pop
orl
sbbl
and
jb
out
inc
pop
xor
addr16
mov
andl
adc
xor
sbb
mov
mov
lcall
sub
into
cli
imul
dec
mov
inc
cwtl
and
or
subb
test
xchg
in
movsl
pop
adc
xor
pop
mov
pop
sub
pop
dec
mov
mov
mov
or
aas
in
sub
fcmovbe
cmpsl
setb
pusha
pop
std
pop
cld
xor
sub
xor
adc
mov
jecxz
or
fidivl
icebp
add
insb
push
xchg
ret
sbbl
stos
jge
and
mov
mov
mov
sbbl
in
lahf
push
inc
leave
lcall
aam
loopne
adc
dec
sbb
adcl
stc
push
dec
outsb
mov
pop
lret
adc
clc
sub
lock
aad
ret
jno
js
inc
loopne
xor
push
pop
mov
enter
enter
xchg
xlat
inc
dec
mov
fnsave
add
adc
es
pop
insb
xlat
mov
filds
in
xchg
mov
dec
sbb
jecxz
in
push
xor
adc
mov
or
dec
cmp
sub
cmp
or
sbb
in
imul
pop
scas
xchg
jnp
imul
fs
add
push
cmp
rcrb
push
cltd
jo
sbb
fsts
mov
clc
loopne
pop
cltd
mov
sub
and
mov
stos
jnp
mov
movsb
pushf
xchg
fcomps
lcall
cmp
dec
mov
jns
out
rcr
int
xor
adc
test
sbb
xchg
inc
ja
inc
dec
lcall
dec
jg
sub
push
scas
js
imul
jle
jae
xchg
cmp
xor
mov
jp
push
adc
adc
inc
mov
sbb
cmc
inc
ret
mov
sti
dec
call
add
sbb
xorl
in
fdivs
sub
jp
mov
test
call
jne
test
add
clc
cld
dec
idivl
icebp
imul
fs
in
push
cmpsb
js
push
loop
xchg
sbb
xor
aaa
inc
pop
or
dec
imul
push
inc
mov
xchg
lods
sahf
insl
imul
xor
push
out
or
inc
imul
push
jo
xor
lods
xchg
sbb
mov
int
mov
adc
push
cmpsl
int
pop
mov
loopne
mov
and
or
mov
gs
add
repnz
push
pop
adc
adc
cli
fwait
inc
jnp
mov
data16
test
ja
test
std
mov
sbb
test
ret
inc
mov
sub
aad
sarb
arpl
lods
jnp
add
bound
push
cmp
or
or
icebp
inc
xor
int
adc
mov
dec
cmpsb
test
into
lret
mov
imul
repz
dec
jo
notb
les
mov
add
jo
mov
xchg
dec
lea
movl
xchg
mov
dec
xor
aad
sbb
mov
loope
mov
or
xchg
stc
mov
xorl
addr16
pop
cmp
inc
into
jnp
popa
test
out
mov
jg
add
xor
int
inc
sahf
rorb
push
insl
push
filds
rcrb
inc
or
pop
daa
xor
sub
xlat
rol
rcrb
insb
leave
mull
rcr
test
pop
pop
pusha
xor
lock
cmp
nop
std
or
test
cmp
fcomps
sahf
cli
inc
sub
js
xchg
mov
mov
mulb
mov
shrb
mov
jmp
popl
scas
cmp
scas
push
cmp
sub
sti
clc
sub
inc
shl
test
or
in
in
stc
js
or
mov
push
sahf
xor
mov
imul
jo
nop
dec
dec
movsb
sahf
rolb
fsts
sahf
test
insl
inc
xchg
mov
dec
push
add
inc
cs
jmp
jo
hlt
shll
ret
ret
and
stos
ds
cld
rol
add
mulb
and
xchg
or
lret
sub
rcr
add
nop
test
fnstcw
mov
out
mov
inc
xor
pusha
movsl
sbb
push
into
mov
test
sub
push
push
sbb
lret
ret
pushw
test
scas
dec
test
aaa
adc
test
or
xor
imulb
lds
rorl
xchg
outsb
mov
push
mov
scas
or
push
push
ret
gs
jnp
jno
adcl
mov
leave
fs
into
mov
iret
imulb
lods
sub
xor
out
fwait
daa
stos
imul
inc
orl
pop
inc
rcrb
xor
pop
into
int3
fidivrs
imul
push
sub
inc
fimuls
jbe
adc
add
imul
xchg
mov
sub
in
lods
mov
decb
jmp
leave
push
pop
xchg
xchg
sbb
lock
iret
lret
cwtl
mov
mov
mov
cmp
add
addr16
sub
jbe
pop
mov
cmp
adc
movsb
push
fdivl
repnz
test
dec
dec
or
inc
mov
shll
push
mov
pop
jp
push
push
sti
hlt
cmp
or
xchg
enter
cli
add
ret
idivl
mov
test
inc
stos
dec
and
dec
xor
sub
jmp
repz
mov
sub
adcl
imull
jle
adc
popf
mov
xor
lds
push
decb
out
movb
sub
shlb
sbb
mov
test
insl
jmp
insb
xchg
and
dec
mov
jle
inc
sahf
or
xchg
cli
push
cmp
scas
sbb
jbe
jbe
addr16
or
sbb
loope
push
push
pop
cltd
lret
mov
push
cmp
inc
sti
bound
rclb
pop
fmul
mov
fimuls
xor
push
pop
dec
mov
xchg
rcrb
and
out
mov
sbb
in
pop
jnp
test
insb
inc
sbb
cli
imul
adcb
push
or
rcll
adc
sbb
aad
lcall
out
lcall
or
into
rorb
push
jge
pop
fcmovnb
mov
leave
andb
stc
mov
ds
mov
test
neg
fdivs
pop
push
sub
adc
mov
sbb
mulb
nop
jmp
dec
mov
jne
mov
pop
and
mov
mov
fs
lods
je
repz
fstps
or
aaa
int
mov
inc
fwait
clc
mov
insb
fcoms
inc
xchg
cmpsl
xor
cs
enter
sub
mov
dec
cmpsl
add
adc
mov
rolb
sub
sub
push
ljmp
mov
dec
aaa
mov
test
mov
mov
out
push
enter
movsb
mov
jbe
cmp
xchg
jp
mov
cwtl
dec
loope
and
lds
mov
lea
pop
push
enter
sub
xchg
in
sbb
jae
insb
and
stos
mov
pushf
adc
mov
cmc
xchg
loope
cmpsb
pop
dec
fs
pop
sbb
mov
xchg
xor
push
bound
jo
lods
pop
je
lods
jmp
xchg
mov
mov
mov
xor
jno
add
into
aam
jecxz
inc
cwtl
xlat
daa
arpl
push
rolb
xchg
pop
and
movsl
jae
jecxz
in
movsl
pop
mov
sti
push
dec
mov
fcmovne
jne
xchg
orb
xor
in
fsubrs
popa
or
cmp
fists
push
and
sbb
push
cmp
mov
and
mov
and
sub
popf
mov
dec
fbld
and
cmpsb
push
mov
cli
dec
mov
pop
iret
in
imul
push
push
ret
or
insb
insl
xor
xchg
push
fsubs
shlb
pop
leave
jp
lret
cltd
add
ficoml
pop
fidivs
test
mov
clts
jae
loope
push
add
mov
test
sub
xchg
xchg
cmc
mov
dec
mov
mov
daa
test
jp
das
add
and
mov
jne
add
shlb
lret
roll
pop
into
mov
rcrl
mov
js
cmp
pop
rcrl
jnp
popa
in
add
or
fsts
ficoml
cs
pop
into
adc
ljmp
repz
ja
sbb
scas
and
inc
xchg
lret
popa
roll
cmp
push
pop
or
out
popf
add
loop
adc
mov
mov
addr16
dec
pushf
inc
shlb
daa
adc
jo
jns
cmp
outsb
stos
xchg
clc
lcall
pop
fisttpll
je
and
mov
mov
sub
mov
inc
outsl
insl
adc
je
adc
addl
iret
pop
mov
cmc
mov
test
movsb
xchg
inc
repnz
jp
pop
lahf
mov
push
leave
test
xorl
cmc
lret
leave
xchg
mov
das
sub
maxps
cmp
xchg
in
gs
pop
inc
cltd
mov
out
out
subb
push
pop
xor
mov
repnz
pop
add
arpl
adc
sbbb
addl
mov
push
out
test
in
fs
pop
xchg
pop
pop
mov
lods
xor
pop
stos
add
dec
adc
sub
out
outsb
call
inc
movsl
not
in
inc
mov
shr
push
dec
mov
mov
mov
xor
inc
mov
movsb
add
cs
mov
cmp
das
aad
rcl
aad
cmp
mov
sub
push
adc
jmp
cli
dec
leave
ja
add
pop
adc
inc
out
cmpsb
fisubrl
repz
call
es
cli
sub
xchg
shrb
stc
fcomps
sub
add
mov
push
push
or
mov
arpl
repnz
mov
mov
xor
push
pop
xchg
outsb
outsb
push
rcl
mov
lea
push
push
movsl
or
test
push
repz
stos
lret
lcall
or
vorps
xchg
pop
imul
add
mov
test
mov
test
mov
je
adc
hlt
or
sub
sahf
xchg
inc
aas
jae
mov
test
xor
ret
cs
dec
adc
push
adc
enter
fsubrl
xlat
mov
pushf
rcll
aam
inc
lret
aam
lcall
mov
cli
int3
mov
fnstcw
in
sbb
dec
scas
xchg
mov
cli
mov
mov
xor
iret
in
sub
adc
loop
movsb
sub
mov
dec
das
faddp
ja
xchg
xchg
mov
xchg
js
cmp
mov
lea
sub
mov
pop
shll
pop
xchg
cmp
lahf
xchg
xor
lea
or
fidivs
filds
cmpsl
mov
nop
frstor
push
test
cmpl
repnz
fwait
mov
scas
inc
or
dec
rorl
xchg
cmpsb
push
subb
and
clc
repz
rorb
sarb
cwtl
loop
mov
or
mov
jecxz
mov
out
out
adc
add
bound
jne
push
jmp
adc
jnp
ljmp
lds
cmp
jg
or
arpl
ret
mov
fs
jg
test
dec
dec
mov
int
hlt
aas
or
add
mov
test
scas
cli
shlb
ss
clc
scas
cwtl
push
ds
cmp
adc
add
js
test
dec
pushl
cmp
aam
ljmp
xchg
movsb
fnstcw
filds
lock
mov
mov
test
dec
sbb
loope
stos
loop
jmp
push
mov
lock
mov
fisubrs
pop
cmp
popa
out
jns
xorl
sahf
mov
mov
xchg
mov
xchg
int
push
popa
outsb
cmp
xor
push
cld
sbb
xor
popa
outsb
and
jnp
adc
ret
sub
inc
dec
ficomps
pusha
sub
fisubl
stos
clc
cs
loope
movsl
or
ljmp
mov
shlb
fxtract
rcll
ja
mov
mov
jmp
int
notl
and
add
test
test
int3
js
rcll
cld
in
lcall
fcoml
jnp
sub
push
iret
repz
mov
sub
scas
push
leave
cmp
test
mov
sub
mov
jne
mov
jae,pt
das
jo
insl
dec
mov
sarb
ja
inc
mov
into
fisubrs
add
fistpll
pop
cmp
pop
mov
xor
push
dec
test
sub
or
fmull
notb
rorb
loopne,pt
xor
and
mov
bound
loopne
loopne
shl
rclb
ljmp
add
aas
xchg
in
in
pusha
adc
cmp
out
jmp
add
mov
jl
outsb
test
push
loopne
loopne
inc
dec
cmp
imul
testb
fisubs
xchg
aad
mov
icebp
stc
sub
or
out
cmc
push
or
popf
add
mov
and
add
jnp
fwait
movsb
gs
imul
xor
adc
dec
adc
fidivl
cmp
ljmp
imul
fsubrl
cmpsb
adc
aas
pop
cmp
mov
sti
add
inc
jle
mov
out
mov
pop
and
in
jnp
xor
test
data16
sbb
or
sub
ljmp
iret
out
mov
and
jl
mov
sbbl
fcmovb
xor
pop
sub
andb
lcall
inc
jmp
ja
nop
pop
sub
mov
add
clc
mov
jbe
jp
insb
ss
lcall
inc
adc
add
test
imul
mov
ss
imul
jp
and
pop
inc
inc
arpl
aam
loop
aas
xchg
mov
push
in
adc
pop
xchg
cmp
icebp
jb
nop
iret
inc
push
popa
loop
orl
in
jecxz
adc
push
mov
push
clc
out
mov
scas
gs
inc
mov
cmp
aad
mov
jg
or
xor
push
imul
lcall
ret
loope
pop
or
sbb
cmp
lahf
dec
ficompl
test
fmull
dec
sbb
out
sbb
ror
ss
std
fildll
pop
jmp
addr16
stc
xchg
mov
shl
mov
ret
dec
push
icebp
xor
adc
pushf
add
in
jo
in
push
sub
adc
mov
icebp
inc
outsl
jns
pop
rolb
push
mov
sbb
inc
jnp
pushw
or
push
popa
cpuid
push
push
xchg
cmpsb
aad
push
adc
repz
cmp
out
sti
cmp
and
mov
aad
loop,pt
adc
mov
and
dec
rcll
das
cmpsl
push
inc
das
filds
nop
or
std
in
xchg
pop
cmp
pop
and
shll
jo
jno
cmp
mov
pop
pop
pop
mov
mov
stos
bound
fidivrs
cmp
pop
es
inc
mov
fildl
mov
loop
or
push
mov
enter
jo
aas
ljmp
xor
xor
fwait
out
test
or
shrl
sbb
xorl
push
fadds
adc
xor
cmp
and
dec
xchg
test
mov
jo
mov
mov
mov
push
add
cmp
punpckhdq
xchg
xchg
popf
or
adc
dec
cwtl
inc
cmpsl
mov
or
adc
lret
scas
lea
ret
shlb
in
inc
call
push
inc
and
repz
aam
mov
mov
mov
dec
pop
jge
fldt
divl
xchg
jo
or
sub
sbb
push
jns
in
add
xchg
add
adc
fstps
jno
mov
into
shlb
pop
das
hlt
cmp
les
or
mov
push
xor
dec
repnz
lds
and
sarb
push
mov
in
sbb
xor
cmp
adc
xor
call
mov
sbb
hlt
lret
aaa
shlb
fldl
push
ret
sub
pop
sbb
loop
jp
mov
add
pop
and
out
mov
sti
jl
cli
into
dec
or
fiadds
lcall
rolb
jns
mov
jo
push
or
or
inc
sahf
sub
sbb
mov
adc
test
out
cwtl
decl
add
inc
pop
adc
xlat
or
movsb
imul
xchg
jae
out
loop
xor
xchg
cmp
sbbb
jp
and
imul
iret
xor
dec
and
into
pusha
sub
mov
fmull
sbb
mov
out
movsb
sarb
mov
xchg
and
push
mov
mov
lret
pop
dec
sbb
arpl
push
mov
xor
or
daa
pop
es
hlt
bound
std
lock
xor
and
mov
sbb
scas
pop
das
gs
pop
sub
push
ljmp
int3
mov
into
push
ret
aad
adc
shlb
xlat
test
jg
mov
xchg
ds
cmp
pop
jno
xor
repnz
push
dec
out
mov
inc
das
xchg
aaa
dec
push
adc
bsf
fbstp
popf
aas
cmpsl
jno
mov
dec
or
mov
cmp
mov
shlb
xlat
sub
pop
les
pop
dec
fisttps
and
jns
add
outsb
bound
xchg
sbb
in
dec
sub
lahf
lds
mov
sbb
push
popl
mov
imul
fsubs
loope
adc
and
or
and
mov
sub
jns
lahf
mov
xchg
popa
aam
add
cmp
std
xor
fwait
sbb
add
pop
xor
in
add
pop
sub
mov
inc
jecxz
adc
push
add
icebp
mov
cmpsl
rorb
in
je
xchg
dec
push
mov
xor
ja
repz
adc
std
leave
insl
sbb
jle
shr
stos
cld
xchg
fsts
ficomps
loope
insb
roll
inc
lds
jl
mov
cmp
loop
add
insl
mov
lock
lods
inc
sahf
nop
jns
inc
ljmp
jo
and
push
int
je
add
mov
int
popf
xchg
lock
stc
cmp
movsl
out
pop
or
adc
push
lds
addr16
add
mov
mov
call
cmp
roll
ja
mov
notl
gs
dec
push
aas
punpckldq
fwait
dec
mov
and
or
repz
cmp
repnz
mov
dec
fmull
jecxz
push
xchg
hlt
xor
jb
popa
aaa
jb
insb
mov
mov
add
call
inc
cmp
loop
dec
or
sbb
mov
add
add
loope
mov
or
inc
out
or
cmp
xor
pusha
mov
dec
mov
mov
xchg
popf
ja
and
hlt
mov
add
xor
mov
pop
xor
scas
mov
jle
out
or
sub
nop
adc
inc
jl
cld
and
push
in
push
mov
movsb
or
int3
lahf
popf
xor
cmpsb
adc
enter
out
push
jmp
mov
bound
js
pop
je
xchg
cmp
call
xor
lods
jnp
mov
mov
shl
adc
addr16
and
or
lret
in
fisubl
lods
cmp
inc
jbe
xor
out
push
leave
sarl
ds
sbb
ljmp
into
sbb
out
jo
fiaddl
std
mov
stc
pop
xor
daa
and
cmp
mov
cmpsl
add
pop
ljmp
push
mov
iret
clc
pop
push
fucomi
add
addb
scas
inc
lock
jecxz
ret
mov
imul
pop
sbb
bound
jge
inc
xor
shl
and
dec
cmp
mov
mov
je
lock
mov
lret
mov
adc
ret
sbb
pop
jle
add
mov
out
andb
jge
sub
inc
mov
or
and
push
xchg
enter
jp
ja
out
adc
inc
pop
add
sub
stos
fistl
mull
xor
push
mov
mov
std
mov
xchg
cmp
pop
pop
lods
stc
cmp
mov
jmp
call
cld
daa
xchg
pop
pusha
outsl
packsswb
mov
flds
mov
dec
into
lock
inc
mov
arpl
imul
ret
mov
movsb
inc
cmpb
outsl
add
xlat
mov
xchg
pop
push
dec
mov
or
xchg
je
aam
fstps
push
mov
repz
sbb
iret
int
insb
inc
lds
aas
mov
imul
and
jecxz
xchg
std
iret
xchg
ror
les
push
sbbb
out
jo
and
out
push
inc
inc
repnz
imul
dec
mov
mov
mov
jnp
mov
jb
pushf
sbb
das
sahf
addl
movsb
sub
cmp
decb
sbb
or
mov
sbb
mov
int
mov
pop
or
mov
pop
jb
ss
fsubrl
out
xchg
nop
dec
xchg
pop
push
mov
mov
xchg
cmc
pop
loop
mov
ret
lods
lcall
negb
adc
dec
mov
push
add
ror
push
les
xchg
pop
ret
int
push
outsb
fucomp
cmp
lea
cmp
or
shll
mov
nop
push
push
dec
mov
xor
ja
push
push
insb
inc
cs
push
jg
in
fnop
cmp
fmul
pop
sbbl
cmp
fstpl
push
add
xchg
js
pop
mov
syscall
scas
or
loope
mov
orl
cmp
movsl
iret
cmp
ljmp
inc
mov
pop
xor
xchg
lock
mov
jno
cmp
das
cmp
loop
sbb
or
stos
inc
jg
inc
jmp
jno
ret
imul
mov
cli
test
ret
jb
ss
addr16
cmovl
or
loop
or
jge
mov
xor
xchg
add
ds
fucomip
subb
mov
shrb
adc
cltd
xor
sbb
ffreep
dec
iret
push
xchg
shlb
mov
pop
fisttpl
fs
mov
addr16
loopne
cmp
mov
sarl
mov
int
push
jg
xorb
popa
sub
rol
xchg
rcr
cwtl
icebp
and
in
leave
mov
mov
loopne
outsb
lds
int
lock
sahf
rcl
jnp
ret
or
dec
rcll
test
xor
jnp
fld
je
in
movsl
xor
xchg
pop
cmpsl
add
pop
mov
pop
add
movsb
and
xor
jge
div
in
xor
lods
push
cmp
repnz
arpl
mov
sub
mov
dec
mov
push
inc
and
add
loope
aad
mov
xchg
rolb
sbb
out
movsb
cmpsb
or
stc
mov
add
xchg
and
movl
pusha
or
dec
cld
insb
xchg
loop
pusha
push
fdivs
adc
daa
jb
sbb
fwait
and
les
fwait
popf
repnz
jb
and
in
ret
nop
fcoml
in
jl
into
add
pushf
out
out
cmp
mov
mov
jecxz
jne
mov
dec
xlat
mov
xor
xchg
sti
pop
mov
cmp
test
sbb
insl
out
mov
lcall
mov
adc
fs
adc
xchg
ds
pop
add
sub
shrb
dec
and
dec
jecxz
or
push
sti
or
jns
mov
cmp
sahf
addr16
aam
or
rcl
cwtl
vmovmskps
pop
cmp
loope
outsl
fildl
xchg
movsb
nop
iret
scas
lcall
xchg
add
daa
in
lock
jno
and
add
pop
idivb
mov
clc
add
in
or
pop
cmpsb
es
pop
add
jo
sub
jecxz
shl
mov
add
sbb
sbb
aam
mov
and
pusha
mov
sub
push
or
adc
hlt
xchg
ret
sbb
or
xor
jge
aam
inc
sub
xor
sbb
and
insl
movsb
push
add
jnp
jl
mov
dec
xchg
add
jecxz
faddl
es
imul
in
movsl
repnz
enter
popl
into
xchg
xor
jp
pop
imul
lds
out
xor
pop
mov
mov
mov
addr16
push
mulb
pushf
add
and
movsl
push
test
cmpsb
and
xchg
jp
incl
lret
shll
out
andl
in
in
push
xchg
adc
or
sub
add
int3
pop
mov
cmp
test
scas
jbe
jno
insb
mov
fdivrl
xchg
fwait
xor
fstpl
ljmp
add
dec
dec
pmulhw
movsl
std
mov
pushf
push
cmp
and
jmp
sub
jg
mov
sahf
ficoml
mov
sub
mov
or
aad
push
dec
scas
out
fidivrs
std
and
sahf
xor
mov
pushf
push
clc
pop
xchg
sbb
nop
mov
push
es
push
push
push
ljmp
xchg
cmp
cmp
jmp
scas
xchg
xchg
xchg
loopne
loope
jns
dec
push
out
sub
cmp
mov
out
lds
jnp
orb
push
imul
mov
mov
mov
imul
jnp
jb
repnz
imul
popf
iret
mov
gs
movsb
jo
test
jmp
xchg
adc
fnstcw
mov
mov
sub
stc
fwait
sbb
push
cld
clc
std
xchg
push
push
fsubrl
or
je
cmpsl
int3
loope
mov
pushf
fistps
shrb
mov
lcall
sub
int
and
add
jne
dec
jecxz
pop
or
in
sub
cltd
jno
cmp
xchg
jno
push
and
test
mov
push
lock
xchg
call
movsl
mov
sub
fstpt
pusha
mov
xchg
sbb
push
cmp
movsl
jnp
mov
xor
inc
outsl
cmp
lock
lods
mov
add
jp
or
stc
and
add
std
or
in
mov
xor
add
push
pop
lods
leave
aam
and
push
cmp
mov
test
lea
jo
fsubs
lock
sub
lret
mov
jl
or
mov
inc
or
dec
mov
add
or
loopne
addb
mov
add
jbe
cmp
outsb
mov
mov
jge
shlb
sahf
icebp
push
sti
xor
insb
fdivrs
mov
push
loop
pop
outsl
add
jbe
ds
dec
inc
mov
and
shlb
cmc
push
mov
je
jae
jnp
dec
test
ss
sbb
xchg
out
mov
push
fimull
cmpsb
pop
mov
rolb
stc
insb
lock
jg
cmp
ja
movsl
sti
daa
loop
lds
js
cmc
dec
push
loop
add
cmpsb
das
ret
in
mov
lds
testb
int
xchg
jg
jo
popa
scas
or
pop
xlat
xor
xchg
rcrb
ret
popf
jecxz
cmp
shlb
aas
mov
inc
rol
shr
mov
andl
jp
dec
popf
mov
lea
or
mov
movsb
loop
jge
and
shrl
xchg
ds
insl
fs
pop
inc
data16
adc
pop
loope
les
shlb
push
rclb
jg
push
test
push
popf
or
pop
out
cmpsl
lcall
repz
call
lods
push
lret
pop
mov
sarl
out
xor
rcl
lcall
testb
and
mov
cmp
pop
push
xchg
xor
lret
mov
pop
outsb
and
dec
cmp
sbb
out
cwtl
pop
sarl
jge
jle
cld
push
gs
or
or
xor
out
push
loope
lods
jg
pop
fidivrl
sti
or
push
aaa
add
jge
add
loop
in
sub
in
scas
andl
inc
out
mov
cmp
xor
jp
iret
loop
adc
fldl
and
mov
cmpl
push
into
scas
arpl
nop
cmp
jl
divl
fs
fsubr
adc
insb
mov
mov
jecxz
jle
mov
mov
mov
leave
inc
std
fcmovbe
jmp
push
add
dec
jb
add
movsb
std
lret
mov
das
outsl
dec
xchg
push
jle
stos
mov
es
jl
cmp
xor
sub
inc
jns
fiadds
xchg
xor
out
cs
fldl
add
mov
pop
cli
push
idivl
add
inc
mov
sti
mov
jnp
mulb
adc
push
dec
jne
lret
inc
cmp
jnp
xlat
icebp
sub
mov
fdivrs
imul
lahf
inc
popa
mov
test
repnz
pop
sub
xchg
mov
jo
stc
std
insl
xchg
add
jp
out
rcrb
or
scas
sti
or
inc
xor
mov
xchg
in
pop
and
nop
mov
test
mov
lahf
in
xor
ret
das
outsb
mov
xorl
dec
stos
lock
clc
insl
adc
pop
jne
push
ss
adc
nop
xchg
negl
jb
test
sub
jmp
enterw
mov
xlat
icebp
test
stos
mov
addr16
test
push
mov
outsb
les
inc
sbb
outsl
in
out
test
push
pop
mov
xor
mov
inc
pusha
and
mov
sub
sti
insb
daa
insb
push
cmp
mov
cwtl
pcmpeqb
nop
loop
sbb
icebp
pop
push
sub
xchg
mov
or
adc
sbb
scas
or
inc
xchg
push
and
fwait
outsb
dec
cmc
jmp
inc
push
cmpsl
sahf
inc
iret
or
adcl
sub
repz
cmpsl
dec
ss
iret
rcl
jecxz
xchg
pop
or
mov
jle
mov
adc
enter
outsl
or
adc
mov
inc
daa
inc
jno
or
out
movsb
xlat
cmp
clc
pop
and
dec
pop
cmp
jp
pop
xchg
pop
dec
subl
lds
dec
dec
bound
movsl
shlb
ss
loope
jno
mov
pop
jo
iret
sub
shrl
mov
sub
scas
jae
and
lahf
ret
pop
mov
cwtl
stos
les
loop
movsl
push
push
lea
ret
lds
and
mov
adc
outsb
fstpt
pop
or
cmp
je
repnz
xlat
frstor
iret
test
sub
inc
mov
xor
add
movsl
jge
rclb
xchg
and
cltd
sbb
popa
cmpsb
push
fdivs
dec
pop
lods
ds
imul
mov
push
or
lock
jbe
lods
sub
daa
or
lcall
fwait
bound
les
test
imul
fisubrs
sub
mov
mov
and
stos
mov
or
jmp
lods
shlb
fldenv
in
xchg
and
in
mov
add
sbb
lds
sahf
scas
das
cmp
xchg
movsb
inc
je
add
bound
arpl
xlat
test
and
sbb
aam
push
into
xor
inc
cld
imul
pop
jno
dec
gs
test
jp
and
lahf
jo
mov
and
sub
sub
popa
sub
inc
shlb
mov
jae
enter
xor
mov
adc
aaa
les
mov
xor
rcl
popa
test
mov
xchg
test
or
pop
jnp
nop
jp
fiaddl
xchg
pop
shll
pop
into
cmpsb
ret
data16
or
push
in
xchg
sbb
js
inc
sbb
xchg
iret
dec
fs
adc
mov
mov
sub
fs
push
adc
dec
mov
sahf
mov
stc
mov
out
cwtl
es
and
out
pusha
push
aas
sbb
mov
sbb
test
and
adc
popa
jecxz
roll
test
fmuls
mov
push
or
into
mov
stc
daa
push
pop
data16
cs
cmp
jne
jge
jge
inc
movsl
inc
mov
movsl
stc
into
std
test
aas
rol
dec
in
dec
fimuls
xchg
pop
xchg
movnti
pop
gs
pop
xor
xor
push
int
repnz
aam
add
or
test
or
pusha
fdiv
jecxz
scas
xchg
sbb
jns
insl
rolb
fnstenv
inc
shr
and
push
rclb
inc
pop
xor
sub
fisubl
jp
add
div
push
sahf
in
je
ljmp
adc
mov
ja
ds
and
fists
mov
cmpsl
lret
xor
pop
cld
jecxz
jle
arpl
out
jp
dec
mov
xchg
adc
add
pop
lret
std
loope
test
pop
subl
jo
out
jnp
jo
insl
and
bound
sbb
mov
int3
in
int3
cmp
call
cmp
sub
push
rclb
xor
les
cmp
push
pop
imul
mov
or
add
fsubp
aas
xchg
rclb
divb
inc
mov
lea
in
out
clc
shl
ss
fwait
adc
adc
add
stos
pusha
cmpsl
test
inc
mov
pop
jl
pop
xchg
cmp
push
push
jno
mov
xorb
and
cmp
mov
or
stos
adc
dec
pop
test
add
inc
mov
in
xor
pcmpgtw
jo
gs
outsb
mov
adc
or
pop
inc
pop
adc
js
mov
pop
mov
push
mov
je
mov
sbb
ret
das
arpl
jae
hlt
pop
or
or
ja
in
frstor
js
jae
dec
cmpsl
sub
sub
cltd
ds
addb
mov
xchg
mov
fstpt
fistl
divl
adc
movsl
add
pop
mov
add
movb
xchg
mov
push
out
xorb
cmp
xchg
add
lret
push
ss
sub
pop
arpl
mov
aaa
sbb
dec
test
call
cltd
cmp
adc
adc
adc
xchg
sub
repnz
mov
into
jmp
pop
cmp
sahf
outsl
ljmp
xor
stos
xchg
sbb
call
cmpsl
cmp
ss
mov
mov
inc
xor
mov
imul
lret
sbb
or
push
aas
dec
ja
decl
xor
adc
lahf
aas
nop
add
mov
popa
xor
sarb
jmp
dec
and
mov
sub
adc
stos
or
mov
mov
insl
imull
push
cwtl
pop
lods
bound
lds
sbb
pusha
jl
or
push
xchg
les
iret
jb
xor
adc
xor
jmp
xchg
cmp
xchg
mov
dec
sub
imul
call
or
xor
aaa
push
mov
aad
add
hlt
xchg
mov
negl
mov
in
xor
push
in
adc
pop
out
sbb
loope
xor
std
orb
xchg
mov
pop
lcall
clc
pop
stos
mov
pop
adc
push
repnz
sub
pop
mov
fimull
and
pop
dec
ljmp
mov
pushf
jns
pcmpeqb
pop
add
pop
cld
pop
in
cmp
xchg
je
rolb
mov
lods
gs
mov
das
mov
aaa
loop
gs
mov
shll
cmp
into
and
scas
jmp
inc
xchg
stos
daa
mov
ljmp
ds
popf
pop
fwait
and
add
and
int3
mov
dec
fidivrl
stos
dec
dec
inc
cs
aam
or
pop
dec
add
xor
movsb
les
sub
fidivrl
xchg
inc
mov
stc
mov
lahf
icebp
stos
push
xchg
inc
push
sub
mov
xor
ja
push
xchg
rorl
pop
sbb
fstps
add
minps
or
mov
shrb
out
stc
into
mov
inc
cmp
mov
push
lcall
std
jb
cmp
mov
and
movsb
das
mov
nop
repnz
js
outsb
adc
xchg
sub
mov
adc
movsb
ss
jg
and
paddusw
leave
ljmp
mov
dec
xchg
inc
sub
in
ret
clc
and
mov
xor
jmp
mov
pop
jmp
aas
mov
cmp
es
repnz
mov
xchg
sub
out
movsl
xchg
les
mov
dec
push
or
push
fsubrs
and
mov
xor
cmp
and
loop
xchg
arpl
test
jle
outsl
dec
jmp
fstp
or
enter
mov
push
or
push
ljmp
inc
lock
and
mov
fsubrs
mov
jo
pop
adcb
xchg
fisubrs
cmc
push
sahf
push
cmpb
and
out
jge
xor
jl
popf
fnsave
addr16
pop
fidivs
mov
nop
bound
push
xchg
hlt
inc
test
stos
nop
sbb
pop
gs
lret
add
sub
vpsubw
xchg
push
mov
leave
insl
xchg
in
fisttps
scas
mov
jno
int
les
sub
cltd
loope
mov
xchg
leave
aas
sbb
xchg
sbb
sbb
or
sbb
sbb
das
cltd
push
pop
in
lods
sti
into
daa
iret
cmc
lods
or
mov
stos
sbb
sub
js
lock
pop
sbbb
les
cmp
test
icebp
flds
pop
jns
shrb
ret
sub
or
mov
pop
sbb
sahf
adc
sbb
push
jmp
aaa
dec
call
out
imul
mov
push
inc
shrb
cmp
jl
jecxz
dec
arpl
test
jns
mov
xchg
mov
subl
jl
cmp
fs
push
pop
inc
mov
mov
data16
repnz
sahf
jg
and
xor
lods
jg
ja
pop
pop
xchg
push
lcall
xor
mov
shl
pop
lea
jecxz
mov
fistpll
enter
jmp
inc
sub
inc
repz
dec
jb
bound
sti
rol
insb
xchg
in
inc
xchg
mov
fidivrs
cmpsb
insl
popf
ja
inc
cli
adc
ret
imul
or
sbb
data16
enter
fisttps
outsb
cmpsl
sbb
in
jecxz
mov
adc
add
and
push
pop
movsl
pop
inc
leave
stos
fisubrl
loope
and
movsb
pop
mov
adc
and
ja
add
cmp
call
sbb
int
int3
jle
mov
adcl
pop
sub
inc
fwait
test
ljmp
jge
stos
xor
jge
jb
mov
jp
lret
or
dec
orl
inc
pop
push
ljmp
std
adc
jmp
lods
push
adc
xor
imul
test
pushf
movsb
and
loope
mov
jp
mov
pop
lea
adc
daa
mov
iret
add
cmp
out
jg
jns
js
ja
nop
test
fs
mov
loope
mov
scas
push
and
pop
cwtl
dec
jl
cmp
shll
stos
clc
ljmp
pop
popf
dec
ret
cmp
cwtl
dec
lea
insb
fs
pop
popf
outsl
rolb
xlat
outsb
mov
jns
movb
push
cmp
stos
xchg
xor
dec
jp
inc
clc
cmpl
ret
sub
fs
xchg
in
and
or
imul
cmp
dec
sbb
push
out
dec
aam
leave
sub
fdivr
dec
xchg
aam
cmp
mov
jb
aas
mov
sbb
mov
and
inc
imulb
jmp
mov
lods
adc
mov
daa
push
push
adc
jnp
lea
aad
dec
cs
sti
mov
jo,pn
sbb
jecxz
jg
cmp
and
dec
lahf
inc
inc
or
push
pushw
jne
or
loop
push
mov
cld
in
ret
xchg
int3
add
pop
lret
imul
mul
sbb
sbb
xchg
add
ja
scas
mov
or
xor
cmp
cmp
xor
aad
push
ja
pop
out
and
popa
xchg
push
add
mov
js
inc
sbb
or
cmp
pop
mov
out
dec
in
pop
xchg
ljmp
push
cs
cs
cmp
gs
icebp
dec
mov
push
fistl
dec
and
lock
push
pop
add
and
insl
shrl
and
dec
mov
arpl
daa
add
mov
data16
in
addb
je
mov
mov
add
mov
repnz
or
sbb
lcall
out
ljmp
mov
mov
add
xorb
mov
pushf
mull
or
add
pop
stos
cli
ret
adc
and
in
loopne
pop
jp
ss
cwtl
mov
test
aaa
sub
pop
scas
insb
aaa
sub
mov
out
xchg
dec
jle
loope
xchg
pop
popa
jnp
mov
jle
imul
test
mov
cmpsl
inc
pop
sahf
insb
arpl
mov
dec
xor
sti
negl
or
das
stos
pop
add
dec
mov
push
mov
or
cmp
insb
mov
rcll
shlb
outsb
rcrb
lret
jp
and
and
mov
mov
or
pop
out
lods
das
cmp
repz
aaa
cmp
rorl
pusha
inc
xchg
lret
jo
mov
mov
pop
cltd
mov
push
out
bound
movl
sbb
scas
shll
loop
fmull
ds
or
xlat
aam
jb
dec
jg
popa
fisttpll
xchg
adc
sbb
cmpl
rcrl
jno
cmc
ja
imulb
fwait
xor
adc
fnsave
mov
aas
sbb
ds
mov
in
daa
data16
mov
lods
xorl
mov
push
mov
sub
push
mov
es
aaa
dec
jbe
incb
or
inc
mov
sub
adcb
or
imul
and
xor
std
stos
rol
xchg
inc
adc
out
dec
movsb
jl
test
mov
cltd
dec
jns
pop
mov
sub
imul
xchg
inc
cs
movsb
add
lret
jg
or
jmp
xchg
roll
rcr
loope
xlat
and
shlb
mov
push
js
jns
xlat
test
imul
jae
sbb
mov
fisttps
sub
testl
sbb
lcall
lods
mov
loope
sub
divb
pop
mov
push
stc
das
pusha
adc
scas
fisubrl
in
xchg
fsubr
mov
popf
hlt
or
or
mov
cmc
call
pop
dec
jle
bound
subl
xchg
cmp
cld
testl
xor
mov
lods
or
jecxz
ret
sbb
add
nop
push
inc
fnstenv
cmpsl
scas
les
dec
sar
jbe
pop
lea
lahf
shlb
cmp
push
pushf
adc
ja
leave
mov
xchg
in
and
in
jne
fwait
idivb
sub
xchg
loopne
cli
inc
dec
sub
mov
jmp
in
inc
push
push
cli
jle
pop
add
aam
dec
test
ljmp
leave
push
adcl
mov
mov
call
mov
inc
inc
shrb
push
jp
mov
nop
pusha
pop
insl
or
clc
xchg
mov
fcomi
or
in
xchg
cmpsl
mov
xchg
sbb
or
loope
loopne
jge
inc
sub
jb
add
mov
cmp
cmp
imull
pop
fnsave
adc
lods
pop
jo
mov
dec
xchg
std
loopne
xor
mov
aam
mov
or
add
fsubrl
fwait
mov
xchg
fdiv
test
mov
xchg
xor
repnz
add
pop
addr16
push
xor
std
xchg
jb
mov
jo
mov
or
pop
mov
cld
jb
xor
inc
add
inc
movl
push
inc
sahf
movsb
ds
mov
inc
jo
std
out
movsl
cmpb
test
js
jns
jno
jmp
inc
xor
pop
adc
mov
sbb
dec
and
daa
ds
push
or
sar
lea
in
into
testl
lock
sub
stos
pop
ljmp
lods
sbb
xchg
lret
nop
repz
push
jbe
movsl
xchg
fistpll
test
sbb
pop
sub
xor
sub
add
push
inc
stc
cltd
mov
push
aaa
mov
pushf
pop
sub
test
cwtl
fsts
test
outsb
popf
xchg
lods
jb,pt
xchg
insb
push
outsb
or
fists
jae
ljmp
pop
inc
jl
daa
adc
adc
fs
data16
stos
out
ljmp
mov
addl
lcall
popa
push
scas
lods
inc
sbb
nop
xorl
mov
orl
mov
call
leave
int
jl
out
inc
pop
dec
ret
mov
lods
cmp
outsb
sbb
ds
push
enter
test
inc
inc
jge
pop
sub
sub
outsb
test
mov
sbb
cmp
cmp
sub
popf
loope
mov
mov
cltd
jnp
test
call
icebp
add
jmp
out
push
mov
mov
into
xlat
mov
jge
lods
out
inc
jb
stos
cmc
mov
jge
lret
jl
add
clc
or
cmp
lock
mov
jle
xor
dec
pop
inc
fimull
sub
adc
mov
push
cmp
mov
inc
adc
and
or
out
cmpsl
insb
ret
pop
cmpsb
ljmp
movsb
es
xlat
movsl
fcomps
push
mov
mov
xchg
xor
incb
scas
rcrb
mov
into
test
lock
out
fiadds
std
aas
xor
jbe
and
lods
aas
push
mov
mov
icebp
pop
stos
cmovo
js
std
add
xchg
jnp
sub
iret
roll
add
push
or
adcb
inc
fimuls
jbe
leave
leave
xorb
add
and
lock
xchg
leave
sarb
xchg
mov
jo
jo
and
mov
dec
or
shll
xchg
ja
xor
int
stos
inc
daa
stc
mov
aas
pop
cmp
gs
pop
fisubrl
insl
es
in
sub
or
dec
jbe
sub
in
aad
jp
int
imul
sahf
xchg
test
call
xorl
std
push
xchg
lods
pusha
addl
and
mov
jns
call
shlb
adc
xor
out
sahf
mov
lds
ret
sar
enter
mov
std
imul
ret
jb
lret
rorb
test
mov
pusha
fidivl
xchg
xchg
aad
arpl
rcll
inc
lods
cltd
pop
shll
dec
imul
pushl
sub
dec
stos
mov
aam
cmpsl
testl
int
loopne
std
xchg
out
and
test
pop
stos
sbb
push
adc
cwtl
xchg
mov
pop
push
inc
xchg
rcr
mov
repnz
lods
cld
fnstenv
cmc
aad
cmp
sbb
push
lahf
jecxz
pop
sbb
in
movsl
pop
sub
mov
push
stos
xchg
aaa
dec
in
out
inc
xor
adc
iret
push
xor
sbb
lret
jbe
add
pop
push
jg
xchg
fcmovu
mov
sbb
js
and
mov
dec
imul
mov
xchg
or
mov
cmc
pop
imul
imul
fstpt
pop
int3
dec
xor
pop
pop
aas
sbb
jnp
mov
lret
scas
sahf
mov
and
pop
and
push
into
or
inc
decb
xor
inc
stc
shrl
adc
mov
dec
jg
sub
pop
add
lahf
mov
lret
mov
popf
pusha
popf
mov
addb
pop
cmpsb
or
f2xm1
ficomps
adc
test
push
push
leave
hlt
mov
cli
lret
push
add
test
insl
cltd
stos
lret
ss
mov
pop
jne
cmc
inc
loope
sbb
mov
loop
lock
sub
mov
ss
cmpsl
push
nop
xchg
es
pop
js
inc
aad
adc
xchg
dec
push
mov
sub
daa
cmp
cmp
nop
enter
mov
test
test
imul
out
xor
xor
or
int
pop
mov
shlb
lret
sti
imul
mov
push
clc
mov
pusha
call
inc
nop
ds
sbb
pop
test
test
mov
hlt
mov
push
adc
mov
xor
fidivrs
icebp
test
popl
pop
out
cmp
divb
inc
pop
imul
into
aad
mov
ja
imul
fnstsw
outsb
cmp
fucompp
jae
dec
pop
lods
mov
push
cwtl
call
mov
fiaddl
inc
mov
std
adc
sub
jo
or
mov
bound
fs
aad
sbb
xor
iret
std
mov
mov
inc
push
negb
xor
cmp
mov
sahf
jno
xorl
push
test
add
mov
dec
in
push
sub
stos
fisubs
nop
mov
sub
push
jne
lahf
cwtl
adc
imull
ss
jle
jmp
mov
ljmp
outsb
testb
push
lahf
jnp
push
dec
xor
push
int3
sub
xor
adc
mov
dec
xchg
push
jb
out
xchg
jmp
movsl
aam
mov
mov
pop
jl
jmp
out
imul
inc
and
mov
cmp
push
incb
dec
and
faddl
jns
cmc
aam
push
insb
mov
pushf
push
pop
insl
add
and
adc
xchg
mov
lcall
mov
add
outsl
mov
clc
xor
aas
mov
mov
xchg
clc
xchg
mov
mov
mov
add
mov
inc
mov
out
cmp
push
push
or
sbb
cmpsl
sbb
mov
push
mov
in
into
cli
sub
cmp
dec
int3
inc
cltd
scas
dec
cmp
pop
add
pop
dec
xor
xchg
mov
pop
cmp
sub
cmp
sbb
xchg
ja
out
mov
push
sub
es
pop
adc
add
xchg
adc
xchg
pop
jp
ds
negl
sbb
xchg
sbb
pop
sbb
xor
shlb
push
push
xchg
xor
jmp
lret
and
fstpl
sub
rcrl
mov
call
sub
add
lcall
xorb
into
ffreep
push
ret
jg
mov
push
es
ss
sbb
push
lcall
mov
push
mulb
xor
imulb
add
jmp
and
mov
mov
xor
jbe
loop
pop
sub
sbb
xor
adc
loopne
jg
roll
push
nop
les
jno
ds
into
pop
pop
xor
aad
or
mov
xlat
dec
xor
xchg
fcmovu
and
mov
mov
mov
pop
push
stc
fs
xor
sub
and
and
mov
and
pop
sub
push
mov
frstor
fdiv
inc
xchg
dec
adc
and
xor
sub
dec
call
add
cmpsb
or
lock
add
mov
mov
cmpl
or
push
fstl
mov
inc
inc
xchg
sbbb
movsb
adc
scas
inc
mov
cld
aad
les
jae
popa
mov
mov
cmpsb
gs
jae
and
jle
jle
xor
addb
fnstenv
jp
daa
popf
stos
aaa
aas
outsl
lea
lods
shrl
or
push
xorl
out
les
jae
fs
cli
jge
add
mov
adc
test
std
mov
call
in
stos
std
test
mov
outsl
mov
pop
pop
inc
sub
mov
add
or
data16
movsl
cmc
push
inc
sahf
test
jecxz
dec
pop
add
insl
or
sahf
aaa
jno
dec
pushf
divl
mov
bound
fs
push
iret
mov
xor
testl
sub
and
push
and
mov
sahf
xor
xor
dec
hlt
pushf
int
xchg
lds
sbb
mov
pop
lret
outsl
sti
mov
mov
cld
sahf
fisubl
inc
jle
std
bound
add
mov
cmp
psubw
cmc
imul
sbb
mov
pop
push
sub
mov
mov
daa
and
cmp
fstpt
test
jmp
adc
xchg
fsub
daa
mov
mov
outsb
push
mov
jmp
push
mov
dec
mov
in
mov
out
and
lcall
sbb
fdivs
xchg
jo
dec
adc
add
and
scas
mov
dec
or
or
dec
or
mov
and
mov
or
addr16
inc
wrmsr
addr16
cld
into
adc
mov
lds
cmp
xchg
mov
mov
jo
push
dec
int
lret
lret
shll
push
cmp
push
mov
pop
mov
stos
or
jmp
inc
push
mov
jns
adc
cmp
std
sbbb
mov
in
sbb
dec
imul
je
and
outsl
stc
icebp
xchg
jnp
loop
cmp
outsb
pop
xchg
mov
cmp
loopne
pop
jae
inc
cmc
ja
sbb
and
movsb
dec
insb
dec
scas
inc
jmp
add
xchg
arpl
cmc
std
ficoml
lahf
ss
fsub
inc
dec
sbb
mov
mov
std
xor
stos
or
mov
mov
pusha
push
pop
jb
ds
test
js
sub
insl
out
dec
and
inc
scas
cmp
outsl
clc
test
aad
data16
add
push
sbbb
jg
int3
rclb
inc
loopne
movsb
es
in
andl
xchg
lods
add
jp
cmp
ss
cmp
in
add
test
xor
subl
out
mov
xchg
ror
ss
mov
dec
int
sbb
scas
fisttps
fisttps
fs
pop
pop
out
fimuls
in
mov
mov
cli
shr
out
jl
push
repz
mov
inc
cld
xor
cmp
pop
out
inc
sbb
xor
subb
rorb
or
std
gs
fidivl
dec
mov
adc
jb
js
push
andb
pop
and
fstpl
scas
push
push
das
sbb
jbe
push
aas
fidivrl
mov
lods
mov
xor
dec
lods
loop
jmp
in
jmp
cld
nop
shr
inc
cli
mov
cmp
test
mov
add
sbb
inc
add
jno
pop
pop
cs
mov
in
jo
rcll
pop
aaa
div
jp
inc
gs
iret
jge
rcrb
mov
push
divb
or
punpcklwd
mov
mov
addw
mov
mov
push
lods
or
push
ret
push
cmpsl
sbbb
adc
movsb
xchg
insb
lcall
mov
fldl
hlt
loope
cltd
mov
mov
arpl
cmpl
or
mov
rcrb
mov
inc
fdivrs
mov
lcall
bound
mov
cmp
arpl
ret
aam
pop
test
pop
aaa
push
aad
mov
dec
xor
pop
stos
inc
xor
cmpl
sahf
cmp
out
and
movb
call
movl
mov
jle
call
mov
sbb
out
mov
idiv
pop
xchg
and
addb
jge
push
lret
mov
pop
mov
aad
jmp
add
popa
mov
stos
adcb
cmp
jns
insb
mov
and
out
or
data16
push
or
dec
push
sarl
and
cs
push
push
outsl
mov
nop
insl
jnp
jg
mov
push
push
gs
mov
fcomps
neg
stos
flds
stc
and
bound
mov
stos
loop
lahf
and
mov
jo
arpl
sbb
je
adc
lods
dec
aam
lods
sub
js
cmp
dec
in
mov
nop
lret
mov
test
icebp
stos
sub
ret
lods
out
sbb
in
mov
loop
inc
gs
insb
addr16
leave
adc
jp
inc
push
stc
push
insl
rcll
or
and
sub
xor
xor
adc
xchg
ss
cmp
push
imul
xor
fsubrl
sbb
lcall
popf
es
enter
adc
pop
xor
ljmp
movb
fidivs
pop
andb
jns
jge
fwait
loopne
xor
cltd
ret
inc
leave
ds
inc
dec
sub
insb
inc
in
xchg
sahf
cwtl
push
and
cmp
jbe
jp
sub
pop
mov
mov
data16
add
sbb
mov
icebp
xor
mov
decb
lahf
push
xor
sbb
loopne
adc
pushf
adc
inc
xchg
aad
subl
loop
mov
rolb
movsl
shlb
and
nop
test
lret
add
sar
mov
sub
xor
sub
addr16
icebp
mov
push
test
ljmp
jge
stos
jmp
mov
push
aam
inc
ret
shrl
jmp
stos
mov
test
inc
dec
xor
out
cmpsl
jae
dec
mov
mov
test
cbtw
add
push
mov
jle
sbbl
and
ss
imul
movsb
outsl
adc
fnstcw
ljmp
cmp
cmp
dec
jo
arpl
es
mov
pop
jno
xor
mov
push
mov
dec
mov
into
xchg
cld
jg
pushw
xchg
out
rcrl
mov
jo
cmp
cmp
fisubrl
and
hlt
xor
dec
sar
mull
add
insl
xlat
repz
icebp
mov
push
push
frstor
sbb
dec
pop
inc
lock
and
rcr
mov
or
xchg
negl
mov
jmp
in
lock
adc
xchg
movsb
arpl
push
mov
push
aad
out
mov
mov
inc
xchg
inc
sub
ret
cmp
mov
jne
int
mov
aaa
pop
loopne
dec
mov
aaa
jecxz
xor
pop
xchg
jecxz
testb
adc
nop
cmp
cltd
jmp
or
jl
decb
mov
push
dec
add
xor
push
ljmp
pop
cld
test
pop
xchg
push
sbb
mov
xor
incl
cltd
xor
jne
addr16
rorl
cmc
imul
in
in
insl
fucomp
outsl
scas
mov
aaa
add
inc
lret
arpl
inc
adc
test
shlb
sbbb
xor
jns
orl
xor
stos
andb
imul
and
arpl
hlt
imul
add
cmp
mov
icebp
sub
cwtl
sub
fwait
in
and
inc
rclb
add
rcl
test
call
faddl
jecxz
fs
ss
sti
and
or
enter
cltd
call
lahf
cmp
sub
icebp
and
shlb
add
xor
iret
ljmp
or
mov
lock
cli
popl
jmp
iret
jns
in
cs
mov
ret
mov
add
push
lahf
xchg
sbb
out
xor
cmpsb
dec
add
cmp
and
aad
test
jae
test
add
jle
ja
push
sbb
lock
push
out
and
xor
jns
mov
in
jo
roll
mov
jne
sub
aas
cmp
xlat
test
icebp
mov
push
mov
mov
mov
cwtl
out
shlb
sti
out
bnd
in
hlt
lahf
popf
adc
test
lods
inc
ror
inc
sbb
inc
cmp
je
cmpl
mov
test
ret
jns
cmpl
js
mov
cmp
lds
cmp
repz
pushf
cmp
decb
adc
inc
hlt
mov
stos
aad
imul
imul
int
dec
jp
cmp
xchg
aaa
out
add
stos
jg
out
sbb
jle
test
bnd
fld
mov
mov
adc
xlat
xchg
out
repnz
xlat
dec
jge
lret
or
pop
jecxz
inc
cmp
xor
sarb
mov
xor
mov
in
dec
jb
imul
das
mov
sbb
out
adc
dec
loopne
sti
push
loopne
insl
mov
xor
dec
pop
adc
mov
lcall
pushf
mov
out
idivb
cmc
test
lods
inc
jae
cwtl
push
push
cmp
aam
ja
mov
add
xor
jecxz
dec
out
push
clc
adc
subb
push
mov
shrl
sub
mov
pop
mov
leave
lcall
roll
mov
lods
fwait
pop
push
in
in
xchg
in
xor
pop
xchg
subl
and
mov
push
in
gs
testl
dec
sti
push
inc
pop
sub
addr16
fs
inc
cmpsb
in
push
lret
bnd
les
add
leave
mov
mov
or
addr16
mov
push
push
shrb
andb
pop
dec
inc
loope
mov
and
scas
cli
push
dec
shl
dec
add
mov
lcall
imul
cwtl
jnp
mov
sub
loope
fmuls
dec
cmpl
lahf
mov
daa
jl
sbb
fsub
and
xchg
arpl
aas
sarb
fiadds
jae
daa
dec
pop
mov
xchg
jecxz
push
ja
fwait
test
mov
xlat
sbb
in
imul
xchg
loope
addl
mov
lret
std
dec
into
inc
fwait
mov
pop
das
bound
jl
xor
push
outsb
and
imul
jo
xlat
pop
jge
dec
sarb
mov
test
or
and
sbb
mov
loope
lds
inc
outsl
jnp
fs
pop
mov
aas
dec
jo
fstpl
aaa
xchg
xchg
lahf
lods
popl
sub
sbb
sbb
and
sub
fsubrs
sarb
icebp
jbe
fcoms
jbe
jne
mov
loop
mov
addb
subb
adc
or
jmp
mov
in
dec
imul
adc
xchg
sbb
add
out
nop
mov
int3
rclb
lahf
or
lcall
push
sbb
mov
rolb
pop
push
adc
sbb
icebp
rorl
test
cmp
das
push
clc
scas
xor
insb
loopne
gs
sub
clc
mov
loopne
aad
pop
jecxz
cmpsb
xor
ret
add
sti
dec
pop
bswap
movb
mov
out
adc
dec
mov
mov
dec
in
shlb
cld
lea
rclb
jle
and
daa
mov
popa
inc
mov
push
movsl
sub
cmp
adc
inc
dec
stc
dec
dec
cmpsl
jno
fildll
add
les
xchg
mov
cmp
gs
enter
lods
mov
stos
repnz
and
mov
movsl
jb,pt
push
jle
adc
rcl
shll
imul
xchg
add
mov
movsb
lods
in
sbb
push
push
test
lods
in
cli
in
xchg
fidivs
cld
mov
dec
imulb
pushf
push
sahf
mov
mov
lods
mov
cmp
fwait
push
adc
push
popa
push
inc
add
movsl
mov
pop
cmp
push
jl
outsb
xor
inc
cs
push
cmpsl
loope
loope
push
xchg
addl
and
adc
push
roll
or
dec
dec
push
or
dec
rorb
xchg
adc
inc
outsb
push
jns
andl
loope
jo
loopne
fists
cs
mov
xchg
je
pop
ja
cmp
fsts
lret
gs
andb
das
inc
mov
lahf
xchg
jl
mov
in
sub
pop
dec
and
sub
push
add
stc
xchg
stos
and
mov
daa
mov
ja
and
sub
mov
insl
dec
mov
in
jae
sbb
fwait
call
negl
cmp
sbb
xchg
int
ficoms
fs
push
rorl
mov
sbb
clc
cmpsb
xchg
rol
les
loopne
xlat
stos
movsl
scas
inc
out
mov
inc
in
icebp
clc
pop
lds
scas
shlb
fs
inc
inc
cmp
fs
cmp
test
sub
movsb
sbb
mov
add
push
aaa
insb
xor
lret
jp
sbb
daa
dec
add
add
sahf
test
inc
mov
mov
xchg
mov
repnz
xor
pop
mov
stos
out
pop
and
icebp
jo
or
push
sar
mov
pusha
sbb
sbb
imul
mov
xor
mov
jb
or
sub
push
rorl
push
push
jb
or
ljmp
sub
dec
and
rolb
mov
jp
scas
xchg
outsl
sbb
lret
sbb
sub
mov
and
pop
sbb
into
sub
mov
out
jp
insb
fstpl
daa
cwtl
dec
jne
jmp
jne
push
inc
fadd
add
int3
sbb
test
xchg
jg
mov
push
mov
cs
or
das
in
add
fucom
jno
das
mov
ljmp
imul
jnp
cmc
jne
pop
aad
fsts
ljmp
and
fs
xor
int3
xchg
add
cltd
daa
xor
fidivl
imul
mov
add
test
push
push
push
je
xchg
sbb
pop
pop
roll
dec
in
or
sti
xchg
or
cwtl
cs
lock
stc
sar
pop
jg
cmp
std
clc
xchg
add
inc
mov
jge
add
aam
inc
xchg
nop
cmpsl
loop
ss
shrl
xchg
add
int
xchg
sbb
push
mov
data16
arpl
cmp
sti
imul
mov
ds
cmp
sarl
call
loopne
sbbl
inc
push
in
sbb
adc
and
xchg
cld
es
mov
lods
fdivrl
push
cmp
addb
and
jl
cmpsb
xchg
loope
pop
int3
sub
nop
sti
fcomps
mov
pop
pusha
cwtl
jb
mov
xlat
jecxz
adc
stos
pmaxub
pop
lods
in
mov
adcb
das
in
push
push
push
mov
mov
in
mov
mov
jecxz
pop
cmp
and
jmp
lea
aad
outsb
xchg
clc
push
jl
mov
or
adc
ds
jbe
lahf
out
sbb
ja
xor
jle
sbbl
dec
fs
add
aaa
ret
popa
jle
call
pop
sti
and
mull
jge
or
mov
insb
pop
push
mov
dec
pop
jmp
inc
enter
cmpl
arpl
sbb
stos
cmp
insl
sub
push
fiaddl
adc
adc
rcrl
mov
cmp
sbb
push
mov
fcmovu
and
sub
jno
imul
mov
jl
fidivrs
push
aam
fdivl
xor
nop
adc
dec
push
rorb
adc
sbb
ret
sub
hlt
lea
or
lahf
aam
mov
and
clc
add
xchg
inc
xor
pop
dec
cmpsl
sbb
fisttpl
or
lret
jg
xor
iret
icebp
and
loop
push
pop
outsb
sbb
movsb
idivb
cmp
lret
push
xor
jno
cmp
loopne
jmp
ret
hlt
sub
rorl
cwtl
ret
iret
rclb
adc
inc
cmp
dec
dec
sbb
test
scas
mov
or
cli
inc
jmp
into
mov
push
mov
ja
adcb
movsl
test
test
loop
sub
jae
test
mov
jle
pop
ja
jl
test
clc
ret
pop
mov
sub
and
mov
inc
hlt
cltd
testb
mov
test
sbb
mov
jno
xchg
es
repnz
aad
int
mov
mov
bound
dec
cwtl
pop
push
repnz
mov
dec
mov
sbb
loope
adc
fst
and
repnz
rcll
or
xor
jae
mov
in
cmp
add
mov
je
in
sti
dec
outsl
push
mov
repz
pop
dec
inc
pop
pusha
scas
scas
or
mov
imul
mov
in
jecxz
jns
out
out
loope
sbb
or
xchg
lea
lods
push
js
call
mov
popf
stc
adc
jae
xchg
fisttpl
xchg
and
and
and
jl
sarl
clc
mov
jge
cmp
and
jbe
fldcw
clc
ljmp
sub
ds
mov
repnz
pop
xor
movsb
fwait
jne
dec
mov
mov
mov
ljmp
and
jl
fstpl
inc
or
jns
movsl
mov
ja
aaa
rep
roll
leave
fadds
cwtl
pop
push
mov
adc
pushf
xor
cmp
push
hlt
jle
stc
aaa
and
pop
mov
pop
cmp
shr
arpl
xchg
push
jae
inc
mov
pop
mov
rclb
jns
cmpsl
pusha
fcom
mov
or
ds
sti
jb
jnp
sub
shrb
je
stos
cltd
push
cwtl
clc
ret
sarb
mov
ret
loope
test
push
jne
dec
imulb
adc
out
or
or
sub
sub
lret
pop
leavew
insb
jg
xchg
push
xchg
arpl
roll
clc
out
jl
cmp
sub
add
daa
or
jmp
scas
adc
and
loope
loope
or
daa
out
std
lcall
std
inc
jp
dec
cwtl
dec
cmpsb
fistpll
popf
imul
or
jmp
jmp
push
ret
mov
push
fmulp
arpl
or
fisttpll
xlat
shl
test
jae
add
mov
mov
jne
mov
ja
cmp
xchg
scas
dec
xor
mov
mov
jnp
addl
push
and
mov
jae
push
std
aaa
mov
and
push
clc
sub
mov
sub
test
inc
adc
je
shll
add
xchg
out
mov
cmp
andl
orl
pop
mov
cmc
dec
pop
inc
cmp
mov
mov
in
mov
and
sub
or
jle
mov
dec
test
sti
xor
jecxz
fbld
lods
pusha
add
cmp
fnstcw
mov
add
xchg
out
outsl
push
jle
fdivs
cmp
mov
jle
add
arpl
jmp
fs
xchg
sbb
cmp
mov
xchg
aad
jnp
inc
in
idivl
add
jl
in
leave
or
or
push
cltd
or
pop
mov
cwtl
or
ret
push
test
ss
dec
pop
xor
xchg
mov
testb
outsl
ljmp
pop
adc
stc
insb
mov
in
add
pop
std
mov
adc
pop
popf
mov
mov
xor
lods
lock
adc
sti
or
nop
ss
insl
pop
push
ret
cltd
orl
inc
jmp
cmc
lock
mov
lahf
mov
push
popf
push
int
testl
xor
adc
andb
mov
mov
lock
addr16
and
pop
cmpsl
sahf
outsb
push
int
movsb
add
stos
or
fldcw
mov
rclb
push
imul
cld
mov
push
push
cld
push
lea
mov
js
rorl
clc
or
cmpsl
daa
sbb
nop/reserved
sbb
pop
rorl
pop
aad
lds
int3
adcl
aaa
add
movsl
cmp
jne
adc
and
or
aam
jns
xchg
sahf
inc
xchg
cmpsl
adc
push
adc
insl
incl
test
push
cmp
scas
push
stos
es
insl
jl
aam
icebp
add
outsb
outsl
inc
mov
dec
xlat
scas
cmc
mov
pop
xor
inc
call
push
jl
sahf
rcrl
sub
lret
mov
data16
xor
adc
cmpsb
xlat
xchg
pop
int
push
add
je
mov
cmp
adc
pop
popf
mov
repz
jl
jp
test
int
xchg
or
sti
sub
out
jl,pt
jno
adc
aam
test
xor
sahf
pushf
jg
adc
push
jns
out
or
fcomps
pshufw
xchg
fcoml
xchg
jo
push
cmp
and
rolb
xchg
xor
mov
fistl
xor
daa
cli
out
pushf
adc
dec
xchg
in
adc
cld
jp
mov
adc
dec
push
push
fidivl
test
or
or
sti
jge
and
mov
xchg
inc
div
and
pop
hlt
adc
in
into
insl
pop
cwtl
pop
xor
add
sti
stos
mov
or
sbbl
loop
xchg
out
out
fdivp
out
inc
xor
push
bound
or
rcrl
sub
aaa
and
pop
jbe
inc
repnz
and
add
xchg
enter
mov
inc
in
xchg
gs
xor
fstps
pop
inc
repnz
xchg
lds
aaa
outsb
xlat
shrl
sbb
or
inc
or
shlb
inc
clc
sub
ja
fldenvs
dec
push
push
mov
idivb
shr
or
sub
aam
pop
pop
or
and
xchg
fsubl
xchg
push
flds
cmp
insb
pushf
popf
mov
dec
mov
add
aad
test
cmc
addb
push
aaa
xchg
jl
loope
movsl
adc
cli
arpl
push
push
pop
loope
fs
pop
fisubl
fstpl
jmp
int3
mov
or
pop
cmpsl
repz
lea
out
cmp
testl
lcall
cmp
in
aad
jle
mov
stos
addb
enter
mov
lret
iret
out
jns
add
imulb
mov
call
dec
jo
add
inc
inc
fcomps
pop
jl
mov
pop
and
pop
pop
fucomip
out
fistps
pop
rol
into
mov
inc
insl
push
jl
loope
add
xor
dec
jb
leave
sbb
test
out
loop
or
pop
inc
iret
xchg
xor
andb
outsl
lods
test
inc
pop
cld
jecxz
xchg
or
fldt
pushf
imull
jg
push
fldt
mov
and
adc
pop
mov
pop
adc
xchg
adc
xor
pop
xchg
jae
push
xor
push
adc
jae
inc
pop
popf
lds
adc
out
xor
aad
fildl
in
sub
loop
ljmp
movb
push
pop
and
sub
iret
sub
frstor
out
xor
mov
cmp
ret
out
sub
daa
out
xchg
arpl
adc
sbb
orb
loop
inc
ret
stos
jo
xchg
jmp
cld
sub
into
popa
jno
pxor
push
or
adc
or
lahf
push
xchg
in
and
pop
sbb
mov
or
jmp
mov
sbb
sub
pop
roll
out
push
enter
push
je
push
test
xchg
inc
and
imull
aaa
mov
dec
adc
sub
pop
cmp
jns
jae
fwait
test
sub
and
lock
lods
add
cmpsl
mov
gs
push
ds
cwtl
mov
clc
iret
popf
cld
mov
loop
test
jns
dec
dec
jns
dec
xchg
arpl
mov
bound
add
inc
or
nop
es
lea
mov
shlb
outsb
pop
mov
xor
dec
outsb
and
push
mov
sbb
mov
icebp
xchg
mov
mov
jne
inc
push
insl
ljmp
pop
inc
cs
dec
shll
sub
pop
xor
adc
call
pop
and
fdivs
pmulhw
add
mov
lcall
aad
fwait
or
mov
mov
jmp
xor
fwait
int
xor
stos
mov
test
push
out
call
xchg
aam
push
inc
popa
add
sub
into
enter
adc
imul
mov
sub
add
or
lahf
data16
lock
jae
data16
insl
out
push
pop
push
hlt
or
dec
jae
cmp
lahf
pop
in
jnp
aad
sbb
sbb
decl
test
daa
aad
test
sub
shlb
stos
cld
lods
fwait
cmp
and
mov
cwtl
repnz
dec
pop
jmp
pop
sub
adc
call
mov
iret
pop
push
int3
ja
cld
and
xor
mov
xlat
xor
imul
fdivs
jne
fdiv
loop
sub
filds
out
mov
mov
sbbb
ret
rolb
inc
jg
imul
mov
bound
inc
pop
cmc
test
dec
push
add
cmpsb
push
mov
ljmp
lds
xchg
xchg
pop
out
xor
or
shrl
je
cmpsb
js
loopne
sub
jb
jg
fisubrl
sub
pusha
jb
cmp
clc
and
daa
dec
and
mov
add
inc
fs
mul
ret
loope
test
ror
mov
sub
add
hlt
jmp
cmp
imul
cmpsb
inc
fcoms
mov
cmc
jmp
adc
test
or
rol
inc
xchg
pop
cmp
repnz
ja
dec
jb
dec
popl
xchg
pop
xlat
mov
mov
aas
add
pop
mov
mov
out
pop
mov
fistpl
sub
fiaddl
addr16
inc
ficoms
push
out
out
incl
jge
in
mov
jmp
in
mov
fsubrl
push
movb
and
jbe
cmp
push
adc
xchg
cltd
mov
rorl
ja
adc
aad
bound
and
dec
xor
clc
cwtl
aas
ret
hlt
pushf
jg
cmpsb
mov
cmp
ret
cli
push
ficoms
stos
jb
push
push
and
pop
mov
pop
lods
pop
jb
cs
push
out
mov
loopne
sahf
test
mov
iret
ja
and
lock
lcall
repz
aaa
popf
mov
cmp
std
jnp
out
lahf
add
inc
sbb
jnp
iret
jmp
mov
pop
add
or
loop
test
or
cli
push
xor
add
or
jecxz
add
sbb
movsl
outsl
xorb
ret
jo
cmp
cmp
sbb
mov
inc
xorb
sbb
push
je
fsubp
pushf
xor
clc
mov
push
jecxz
inc
ss
ret
cltd
popa
jae
mov
movsl
lock
push
push
add
lock
dec
jl
pop
ljmp
sub
add
fbstp
pop
add
push
mov
fstpt
out
imul
insl
inc
stos
push
xor
addr16
pop
nop
sarb
rorl
leave
cmp
hlt
cmpsb
mov
pop
jge
jno
sti
insl
and
cmp
cmpsl
xchg
add
add
sbb
in
add
cli
sub
sbb
mov
xchg
add
sbb
sbb
lock
cmp
stos
jmp
icebp
pop
hlt
mov
xor
aad
orb
fs
sub
pop
popf
jp
xor
sub
fucom
xchg
pop
int3
sub
add
mov
out
jno
adc
xor
mul
jmp
pop
aam
dec
addr16
xchg
pop
or
xor
mov
arpl
lea
ljmp
pop
in
or
divb
jns
mov
daa
in
pop
xchg
fiaddl
mov
daa
pop
subb
push
mov
stc
push
lock
push
mov
js
loope
mov
lahf
hlt
mov
in
cmpsb
push
mov
rorl
test
inc
in
push
mov
outsl
xchg
inc
ret
xchg
xchg
out
cmp
mov
shrb
inc
xor
add
xchg
arpl
dec
xor
outsb
adc
bound
mov
and
les
sub
sbbb
repnz
mov
pop
ja
test
stos
jp
adc
adc
clc
mov
jge
jp
adc
dec
mov
aaa
mov
push
cmp
push
mov
out
ud1
xor
call
push
popa
jbe
fadd
gs
clc
aam
mov
mov
cmp
ja
adc
ficoms
sbb
rcrl
mov
cmp
jno
sub
xor
negb
lret
jno
cld
push
xor
add
loope
daa
cli
mov
lock
pop
push
jle
jno
jge
push
pop
test
shl
cltd
adcb
mov
rcrb
movsb
shlb
movsb
in
xchg
pop
dec
out
and
arpl
jbe
inc
pop
repnz
sbb
in
mov
fidivrs
jecxz
mov
and
jo
dec
and
sbb
cmp
popf
enter
xor
fcomps
cmpb
dec
pop
in
les
or
in
add
stos
push
mov
xchg
ret
incl
pop
jb
scas
roll
pop
ficoml
push
test
in
inc
stc
test
lea
xor
pusha
dec
and
mov
adc
jg
lds
scas
out
xchg
in
jae
xor
mov
adc
fdivs
les
ror
test
iret
mov
mov
ds
xor
push
mov
push
xor
loop
fwait
addr16
mov
aad
add
imul
mov
push
cmp
xlat
cmpsb
outsb
cmpsb
and
adc
ret
jmp
sub
push
mov
mov
jl
mov
fsts
jae
call
mov
decb
jecxz
stc
jns
mov
je
data16
aas
add
mov
cmp
mov
xchg
dec
mov
leave
adc
enter
jno
xor
cmp
cmp
iret
test
adc
mov
test
nop
leave
mov
fnstcw
ret
jo
xor
dec
mov
pop
mov
leave
repnz
jae
leave
cmp
mov
mov
mov
mov
mov
xor
push
mov
lea
imul
dec
push
jno
int3
mov
or
jmp
sbb
pop
loopne
xlat
ret
testl
mov
dec
pop
lea
sbb
ss
mov
ds
shr
or
mov
out
jl
clc
pop
xor
js
sbbb
sarl
stos
xchg
sar
inc
sar
dec
add
sub
loopne
data16
outsl
dec
and
lock
data16
pop
jmp
fstl
or
addb
shll
hlt
scas
lods
popf
mov
dec
cmpl
mov
dec
lret
jno
out
adc
pop
xchg
mov
mov
sbb
mov
cmp
dec
dec
adc
fwait
or
imul
mov
sbb
mov
test
das
aad
cmpsl
add
loope
nop
in
scas
and
sbb
adcb
or
push
and
cmp
sbb
add
in
inc
gs
push
filds
sbb
test
ds
mov
enter
lahf
and
mov
jae
inc
int
fcmovnbe
lret
fs
push
out
pop
lahf
aas
repnz
cltd
ret
fisubs
jl
or
xor
xlat
inc
inc
pop
push
addb
int
iret
mov
pop
repnz
jae
insl
or
sbb
cmpsl
stos
out
repz
mov
dec
xlat
jns
gs
fbstp
add
hlt
test
pop
int3
test
adc
loope
rol
jecxz
adc
pop
push
mov
test
hlt
push
scas
fprem1
or
sarl
psadbw
mov
cmc
and
cmp
pushf
ret
repnz
mov
in
ret
push
push
stos
jne
push
push
jg
bound
lock
das
inc
flds
fbld
inc
divb
es
push
out
and
lahf
iret
arpl
dec
cmp
jmp
sub
inc
iret
dec
inc
hlt
cs
and
clc
jl
cld
mov
jno
jnp
jge
lods
fiadds
loop
or
fs
pushf
push
xor
hlt
push
mov
sti
test
das
fcom
xchg
pop
and
pop
adc
dec
adc
mov
ja
cltd
fmul
andl
stc
mov
inc
lods
cmp
bswap
xchg
mov
fstpt
push
dec
nop
jmp
fnsave
jecxz
loop
dec
xlat
mov
test
gs
iret
testb
test
mov
lods
mov
dec
ds
xor
mov
jno
mov
icebp
fists
inc
mov
mov
mov
mov
push
repz
in
mov
in
and
cmp
mov
xor
ja
cmpb
jge
stc
mov
cmc
stos
cmp
dec
push
push
or
cmp
stos
aas
adc
jne
int
jb
push
clc
shlb
mov
stos
popl
pop
hlt
mov
clc
cli
sti
adc
loop
sti
ljmp
pop
loope
adc
mov
adc
ljmp
das
xchg
shlb
cmp
test
xchg
dec
lods
inc
mov
sbbl
push
mov
les
and
pop
mov
dec
arpl
aad
daa
sbb
in
jmp
mov
mov
mov
sarb
xchg
sbb
xor
std
xchg
pop
popf
dec
out
lods
jge
out
loopne
sub
cmp
xchg
arpl
scas
xchg
pop
test
addr16
scas
dec
dec
daa
or
push
pop
sub
not
cwtl
mov
ja
xchg
int
sbb
stc
pop
out
adc
shll
or
adc
cs
cld
insl
jp
psubq
insl
hlt
or
cli
imul
cmp
fmuls
mov
loop
and
fwait
cwtl
std
cmp
into
adc
cwtl
popa
in
enter
addr16
add
pop
movsl
cltd
sti
pusha
mov
in
inc
pop
mov
and
mov
imul
dec
mov
push
lcall
mov
push
repz
rcrb
out
movsb
push
sub
fs
fnstsw
or
test
stos
jp
std
out
and
dec
mov
dec
jge
test
pop
movsb
cmp
xchg
sub
pop
rcr
add
adc
xchg
in
sahf
es
fisttps
addl
pushf
test
inc
xchg
add
fcoml
out
fnstsw
jmp
lods
lock
add
lret
sub
ds
cmpsb
imul
mov
cmp
sbb
cwtl
nop
loop
repz
sbb
call
call
aad
ret
or
mov
addr16
jb
inc
push
mov
cmp
lret
ss
arpl
scas
popf
xchg
xchg
int
or
stos
frstor
cs
fisttpl
pop
mov
mov
mov
popf
sbb
shll
clc
xchg
add
aam
xchg
mov
mov
pop
mov
stc
push
mov
in
shrb
or
ss
mov
je
orl
out
imul
sub
push
sbb
mov
mov
outsb
or
pop
jne
mov
daa
es
sub
cmpsb
insl
xchg
cmpsb
fcompl
test
shrb
dec
mov
xor
adc
add
xchg
popf
sbbb
cmp
imul
sti
shll
ljmp
dec
mov
jmp
mov
sub
fs
into
or
rclb
inc
mov
xor
mov
and
fists
inc
push
int3
mov
xchg
xchg
fsubrs
loope
dec
add
dec
mov
inc
add
mov
cmc
and
and
enter
jns
add
xchg
lea
and
stc
popa
inc
sbb
popf
mov
dec
leave
fcomps
sub
xchg
mov
hlt
inc
shrl
stos
notb
adc
sub
sbb
insl
ja
inc
or
lods
ja
mov
xchg
push
ja
popa
add
pop
mov
out
jg
ds
mov
fwait
mov
dec
sbb
pop
sub
xchg
push
and
xchg
fsubr
jbe
cmp
or
pop
mov
adc
inc
xchg
mov
xor
fstp
js
adc
rol
sub
cld
mov
scas
mov
push
or
or
mov
bnd
mov
aaa
out
rclb
mov
add
nop
xor
push
mov
fnstsw
jne
push
push
jle
call
adc
or
dec
pop
lret
das
add
xor
fwait
ja
mov
lods
mov
lock
and
add
mov
mov
pop
test
std
data16
mov
or
jno
clc
cmpsb
xor
xor
mov
cmp
scas
pop
fsubl
repnz
in
xchg
je
adc
sbb
cmp
mov
sub
lea
dec
call
dec
push
test
stos
jo
stc
ja
std
out
mov
pop
sbb
mov
movsl
cmp
add
or
sti
in
cmp
or
pop
xchg
mov
out
test
cmc
fcoms
mov
cmp
cwtl
cmc
stos
imul
dec
mov
call
sub
or
leave
pusha
mov
xchg
int3
test
inc
jo
adc
aaa
int3
mov
arpl
adc
vpandn
push
shll
arpl
mov
fnstcw
add
cld
fdivs
loope
arpl
xchg
add
ret
and
mov
or
xor
mov
cmp
jle
rcll
aam
push
mov
push
shrb
stos
ds
aaa
pop
pushf
xchg
xor
dec
mov
jmp
ret
lcall
lahf
mov
mov
and
jle
xchg
fimuls
pop
xlat
pop
sti
dec
cmp
pop
add
xchg
mov
inc
xchg
cmp
btr
adc
ret
imul
mov
cmc
int3
cmp
int
push
dec
sbb
js
xorl
mov
enter
fsubrs
adcb
push
add
aas
mov
mov
insl
sbb
enter
cli
pop
xchg
mov
sub
sti
mov
add
mov
pop
hlt
pop
cld
fidivrl
and
or
enter
push
lock
in
adc
adcb
kmovb
cs
das
movsb
xchg
and
fmul
in
jmp
mov
mov
mov
out
pop
shll
ljmp
xlat
xchg
mov
imul
rorl
in
daa
jo
outsl
ret
bound
jmp
loopne
mov
sbb
popa
loopne
insl
bound
xor
test
out
sarb
mov
push
xor
repz
imul
pusha
dec
mov
dec
xchg
fldcw
add
into
jbe
push
pop
enter
push
pop
mov
xor
sub
dec
sub
fstl
or
outsb
push
cld
and
jmp
cltd
pop
lcall
ret
mov
cwtl
faddl
sub
dec
inc
rcr
jbe
jb
js
in
jnp
mov
movsb
mov
cmp
xchg
outsl
sbb
xor
xor
sub
dec
fistpll
shll
sub
inc
cmp
mov
sbb
bound
add
sbb
xchg
inc
cmpsl
fwait
push
xor
jg
cmp
ror
xchg
adc
add
pop
loopne
scas
stos
stc
and
add
sub
sbb
add
cmp
popa
cmp
aad
jge
test
jp
pop
cmp
dec
in
sub
sti
pop
jns
pop
test
inc
ficoml
push
dec
scas
mov
test
jae
xor
movsl
mov
aad
adc
sub
mov
stos
mov
jae
sbb
mov
pusha
add
fcoml
sub
pop
add
lret
imul
adc
xchg
xor
xchg
mov
sub
daa
sub
lock
xchg
xchg
add
push
js
cmp
sbb
pushf
je
leave
data16
or
loopne
movsl
xor
push
push
cmp
imul
inc
lds
xchg
push
scas
xor
mov
ja
in
js
js
in
les
jbe
jns
punpckhdq
enter
out
add
push
and
gs
xchg
push
ret
mov
repz
popa
xor
ret
mov
or
cwtl
cmp
aam
mov
add
test
fs
mov
or
lahf
push
ljmp
add
dec
jmp
sub
lods
jb
andb
pop
xchg
cmp
push
push
aad
adc
fs
xor
sbb
aam
add
mov
data16
shll
mov
xchg
test
leave
fwait
jmp
loope
stc
lods
shr
pop
lds
sbb
or
sbb
sbb
xchg
cmpsb
cwtl
ret
jb
fidivs
dec
popa
xchg
cmpb
adc
push
cmpsb
inc
mov
cmp
sbb
add
sbbb
push
xor
xchg
ss
mov
cwtl
sub
lret
or
test
in
mov
or
int
xchg
sub
add
insb
fstps
stc
out
push
pushfw
fcomps
xor
sbb
xor
cmpb
jae
cmp
push
test
jnp
pop
mov
nop
mov
pop
dec
gs
jp
xchg
dec
lret
movsl
stos
fisubs
rcrb
xor
push
pusha
fildl
popf
addl
out
ljmp
sarl
xchg
rorb
aas
into
js
repz
push
or
pop
jo
pop
cmpsl
cmp
in
jo
sub
fcmovne
fidivs
push
sbb
std
es
fmuls
mov
mov
int
and
cmp
add
sub
out
testb
and
add
dec
pop
xchg
and
repz
xchg
xor
mov
dec
or
push
fnstsw
jmp
stos
mov
mulb
js
test
inc
shl
xor
fcmove
je
xor
mov
sub
xor
jg
dec
sahf
test
lahf
xor
rcll
addr16
flds
insb
jae
mov
xchg
mov
and
sbb
lcall
ljmp
popf
jnp
mov
loope
js
inc
mov
out
cli
push
mov
fisttps
mov
mov
push
add
std
ret
sub
adc
mov
fs
aaa
sarb
je,pn
test
dec
pop
out
or
adcl
or
jg
dec
sub
mov
and
jnp
int
mov
aaa
cmp
dec
fidivrs
inc
out
sbb
insl
outsb
and
js
out
sbb
test
xchg
sub
aam
lods
and
jnp
pop
call
adc
fwait
test
fnstsw
jb
mov
push
pop
mov
into
jmp
push
sub
pop
dec
in
stos
cmc
dec
popf
dec
and
dec
xchg
add
test
cmp
jp
js
sbb
or
dec
lea
xor
iret
push
mov
jg
xor
or
dec
or
in
dec
pusha
inc
xor
push
pop
test
push
xchg
sti
cli
xchg
call
js
ret
jbe
pop
ss
pop
scas
loopne
outsb
push
xor
adc
icebp
lea
pop
mov
inc
insl
sub
test
pusha
icebp
lods
call
insl
sub
js
aaa
mov
jle
sbb
nop
adc
fistps
ficomps
movsb
bound
int3
lret
pushf
test
pushf
arpl
subb
test
outsb
dec
mov
rorl
in
cmp
inc
xchg
jle
and
gs
out
xor
add
jecxz
push
mov
add
push
and
lods
rcll
ror
lret
or
adc
jmp
pop
stc
shrl
push
and
les
jg
int
test
cld
mov
inc
dec
imul
dec
pop
sti
into
mov
add
ja
inc
mov
sub
add
movl
mov
stos
xchg
jns
and
mov
xor
jg
pop
sbb
jns
dec
outsl
lahf
xor
jge
dec
addr16
fsubs
sahf
movsb
sbb
aas
ficompl
mov
ja
neg
jmp
ret
dec
test
js
aaa
filds
push
mov
popl
jbe
xchg
clc
add
loopne
fwait
and
ljmp
mov
scas
jo
popl
xor
xchg
push
inc
adc
pop
xchg
aad
icebp
cltd
add
mov
mov
xchg
pop
push
add
xor
xchg
jb
cmp
movsl
lea
rclb
rorb
or
mov
or
sbb
jb
add
and
in
xchg
push
lahf
lahf
cmp
jle
pop
or
nop
repnz
iret
out
mov
shrd
xchg
dec
push
mov
add
bound
out
lahf
in
stos
scas
push
stos
jl
mov
xchg
cld
xchg
cltd
cmp
ds
addl
jb
push
test
mov
add
lcall
xor
mov
add
fnsave
cmp
dec
mov
xor
dec
aas
mov
sbb
xchg
in
call
repz
push
cmpsl
out
nop
xor
cmp
out
ja
adc
push
xchg
pop
lret
ja
xchg
pop
push
push
sbb
or
jle
mov
les
dec
inc
cmp
cwtl
adc
loope
stc
fwait
shll
out
and
or
sub
or
sub
fsubl
fsubp
data16
aas
mov
movsl
cmp
mov
xchg
cmp
test
mov
fsubr
pop
inc
gs
xchg
stos
gs
mov
sbb
and
pop
inc
mov
lcall
lods
loopne
jb
es
add
adc
xchg
negb
rcrb
shrb
mov
test
cmp
or
fcmovnb
inc
xchg
pusha
push
mov
jg
inc
stos
rorb
cmpsb
and
push
mov
cmc
and
push
mov
fnsave
add
aad
shr
movsl
mov
xchg
loope
or
push
pop
ret
push
sub
les
sbb
push
mov
xlat
and
xor
les
and
test
push
push
test
cmp
xchg
xchg
dec
dec
jge
orb
imul
inc
mov
inc
mulb
test
or
sbb
inc
pop
pop
inc
pop
mov
adc
mov
gs
sbbl
sub
iret
jge
inc
inc
call
scas
imull
and
pop
movl
mov
cmp
push
imul
fs
push
inc
rcl
mov
cmc
pop
int3
arpl
sbb
aam
dec
clc
inc
sub
rcrl
push
sbb
data16
popa
push
push
mov
scas
mov
mov
sbb
in
addl
pop
aad
hlt
dec
andl
mov
das
inc
ret
dec
daa
bound
adc
in
sbb
cmp
mov
add
cmpsl
hlt
divb
mov
xlat
xor
aas
xchg
mov
mov
pop
mulb
insl
std
xor
insl
mov
pop
out
push
shlb
jmp
dec
lcall
addr16
and
js
orl
dec
inc
scas
mov
in
mov
jmp
mov
aam
aam
fmuls
adc
or
dec
mov
nop
cmp
sbb
push
pop
daa
sub
xor
dec
lods
pop
rcl
cbtw
inc
xor
fstps
and
mov
mov
sub
cmp
add
and
shrl
dec
jg
stc
sbb
stos
decl
jbe
dec
sub
inc
std
out
lock
popf
jp,pn
addr16
mov
mov
push
mov
in
enter
cwtl
jno
scas
mov
jae
sub
pop
xlat
enter
xchg
shrl
stc
mov
test
jle
aam
pop
aaa
inc
lods
mov
mov
push
push
push
pop
pop
lret
jae
js
inc
pop
mov
insl
ds
or
push
xchg
pop
dec
sahf
lret
inc
shr
fists
hlt
pop
sti
aad
adc
push
jb
xchg
mov
pop
jl
ja
fsubp
subb
inc
mov
dec
cmpsl
mov
xchg
pop
imul
pop
push
cld
mov
orl
sub
add
cmp
popf
mov
ficoml
jnp
sub
mov
and
pop
xchg
int
push
cmp
in
jg
sbb
in
mov
xchg
shlb
jmp
sub
xor
das
sub
pushf
jb
ds
lods
imul
cmp
adc
stos
adc
mov
inc
repnz
mov
sbb
test
mov
cltd
cmp
pop
jnp
pop
push
cmc
cmp
pop
test
push
shrb
xchg
pop
repz
inc
jns
xor
mov
lods
jle
mov
cld
push
add
jbe
push
xchg
shrl
sbb
mov
fisttps
pusha
cwtl
dec
xchg
mov
sbb
pop
and
ret
cmp
jecxz
cld
xchg
sub
xchg
inc
leave
xchg
pop
jbe
jno
cmp
jb
enter
lock
fmuls
test
daa
xor
lahf
pop
dec
icebp
fdivrl
push
fldl
pop
dec
mov
mov
mov
push
inc
pop
dec
and
ja
sbb
lret
xchg
movsl
fstps
and
ret
in
popf
lret
out
sahf
cmp
mov
jns
push
call
add
push
stos
jo
ljmp
mov
mov
push
popa
popa
mov
jno
jne
das
inc
in
mov
lock
test
cmp
je
leave
cmc
gs
repnz
ljmp
adc
cmp
and
aas
scas
sub
mov
clc
stos
or
fnstsw
sbbb
cmc
cltd
jno
jp
out
sub
test
add
fldenv
enter
dec
xchg
clc
rcrl
jo
cmp
jle
addr16
loopne
jg
jge
imul
pop
mov
push
pop
xor
outsb
aaa
lret
or
inc
jb
mov
mov
testl
decl
mov
cmp
jae
dec
dec
pushw
mov
cmp
ljmp
xor
cmc
scas
insl
fwait
dec
jae
fiaddl
add
lods
or
call
incl
mov
call
das
mov
test
insl
push
cmp
movsl
sub
cltd
add
hlt
call
dec
or
dec
jns
sub
sub
xor
cwtl
and
push
adc
cmp
outsl
fwait
pop
icebp
sbb
fbstp
sub
dec
popf
xchg
fcompl
test
push
lea
push
fistpll
fstps
xlat
inc
pop
jl
sub
and
arpl
xchg
imul
sahf
pop
in
xchg
xchg
negl
insl
stos
pop
pop
mov
loopne
add
daa
mov
iret
jne
mov
std
aaa
cltd
aad
addb
loopne
lret
cmpsb
cmp
xchg
jmp
xchg
ljmp
fnstenv
sub
test
outsl
and
dec
in
push
lods
cmp
xlat
jno
leave
sbb
xor
jmp
jns
jecxz
inc
or
stc
mov
push
jnp
jb
rorl
mov
jno
sub
mov
xor
arpl
icebp
push
jb
mov
leave
mov
cld
sub
adc
mov
popa
addl
insb
or
test
inc
push
std
add
adc
cltd
in
fisttpll
out
nop
push
xor
jg
popa
xchg
outsl
rorb
jg
mov
pop
fdivr
outsb
mov
loope
pop
jnp
repz
xor
filds
xchg
popa
pop
pop
in
ja
call
in
cmp
mov
pop
pushf
iret
popl
jge
in
pop
mov
xchg
mov
imul
mov
mov
movsb
aas
mov
cmp
add
ds
clc
test
mov
add
xchg
pop
jmp
adc
movsl
jp
inc
sahf
inc
daa
das
fidivl
test
dec
cmp
addr16
lcall
cmc
in
push
pop
mov
xchg
mov
xchg
fcoml
call
jecxz
mov
sbb
mov
cmc
sbb
enter
push
test
je,pn
int
sub
dec
mov
pop
mov
pop
cmp
pushf
leave
pop
testb
int
and
enter
push
pop
imul
xchg
js
mov
loopne
loope
inc
mov
lods
icebp
jp
mov
lds
xchg
mov
adc
pop
push
clc
and
dec
add
data16
and
leave
rcrl
xchg
scas
loope
xchg
mov
push
in
cmpsb
push
pop
je
jns
aad
in
cwtl
test
iret
aaa
inc
test
outsl
and
adc
in
mov
jge
adc
aad
mov
cmp
aam
sub
mov
imul
into
mov
xchg
arpl
dec
add
popa
lahf
lods
mov
outsb
dec
decb
mov
inc
xchg
test
add
sahf
int3
test
mov
push
clc
fisubrs
subl
sahf
cli
inc
daa
fcomp
mov
lcall
mov
jmp
mov
lea
ret
inc
inc
jg
icebp
cmpsb
inc
sbb
push
out
in
mov
test
mov
fscale
ret
and
xchg
scas
mov
aad
rcl
jl
lcall
mov
pop
das
mov
mov
and
cld
or
fiadds
pop
cmp
call
xor
loopne
fcom
out
lods
xor
int
add
xchg
test
insb
sub
and
cmp
lods
fidivl
add
loopne
push
shlb
push
mov
inc
cmp
js
push
sahf
popf
pop
cmp
push
mov
mov
and
sbb
and
leave
dec
adc
sbb
repz
dec
mov
adc
js
cmp
mov
mov
mov
add
pusha
lcall
sbb
push
mov
mov
push
adc
insl
das
pusha
in
pusha
mov
xor
xchg
pop
lcall
out
push
xor
dec
push
mov
stc
xor
jmp
in
and
loop
mov
mov
pop
add
inc
xchg
lret
lret
in
ja
pop
mov
mov
in
mov
or
iret
mov
shlb
mov
nop
movsl
data16
dec
mov
xchg
push
dec
test
test
jb
jge
fdivr
jb
shlb
pop
insl
loope
in
and
jecxz
xchg
push
add
lahf
imul
jb
cli
lcall
lret
mov
inc
add
cld
fidivl
adc
xor
mov
fdivs
pushl
dec
adc
pop
lock
movsb
mov
fs
aam
roll
add
or
test
imul
icebp
insb
dec
leave
lret
dec
leave
jb
les
imul
cmpsl
imul
dec
jmp
dec
cmpsb
cltd
test
jnp
les
or
or
and
and
mov
dec
mov
fstenv
xchg
and
cmp
cltd
into
out
insb
mov
push
dec
gs
jecxz
mov
insb
adc
in
add
pop
lcall
inc
xor
mov
mov
fsubr
setae
das
js
jae
sub
push
mov
aas
or
and
int
pmullw
stc
fisubrl
bound
xor
outsl
stos
shlb
sbb
aaa
mov
lds
scas
cmp
test
jge
cmp
dec
mov
enter
and
fists
repz
repz
fwait
sbbl
outsb
mov
inc
pop
xor
push
mov
dec
insl
dec
fadds
add
outsb
pop
jae
jmp
popf
and
fucom
pop
nop
roll
pop
jbe
lds
pop
mov
int
inc
adc
cmpsl
mov
stc
rclb
xor
outsl
mov
cmpl
dec
sbb
pop
lret
cmp
push
daa
nop
enter
call
aaa
ja
adc
arpl
and
insb
xchg
stc
fildll
push
mov
sbb
adc
xchg
cmc
icebp
mov
cs
xchg
shl
fists
and
jo
jg
pop
out
into
push
cltd
movsl
out
push
pushf
mov
aaa
adc
in
loope
call
jecxz
enter
lret
je
out
push
test
adc
mov
int
dec
and
or
mov
add
sub
cmp
mov
push
adc
xchg
popa
icebp
stos
xchg
pop
xor
jno
jle
out
aam
lods
movsb
add
stos
imul
outsl
out
lret
movsb
sub
lds
sahf
mov
adc
push
aaa
adc
mov
lahf
arpl
inc
hlt
fucomip
lcall
lods
popf
mov
je
xor
dec
inc
jae
sahf
in
ret
nopl
mov
jecxz
inc
cltd
sbb
adc
xchg
xor
adc
xor
xchg
call
dec
and
dec
outsl
sahf
adc
jle
adc
xor
lret
mov
pop
les
jl
pop
pop
mov
push
add
shrl
cmpb
sub
lods
clc
and
pop
push
adc
popa
cmc
add
or
loope
adcl
pop
mov
sbb
cmpsl
mov
push
xor
pop
ja
xor
in
push
push
stc
dec
lds
in
and
mov
adc
mov
pop
mov
loop
rorb
mov
mov
loop
add
xchg
adc
lret
sbb
dec
inc
ljmp
les
rcl
int3
loopne
dec
subb
fmuls
popf
xchg
or
mul
inc
or
mov
aaa
pop
inc
lret
push
in
jb
push
mov
ret
cmp
ret
out
push
fisubs
add
test
cmp
mov
stos
out
lods
jb
inc
xchg
sub
fists
fwait
icebp
jne
pop
push
or
mov
in
mov
cltd
xor
dec
adc
fnstsw
in
or
lahf
push
fidivrl
mov
cmp
int3
bound
popa
jo
lcall
lods
dec
sti
repz
jmp
out
ljmp
out
repz
dec
mov
add
sub
fsub
dec
in
xlat
jno
mov
sub
pop
adc
jp
add
jb
outsb
jle
xlat
sbb
in
or
xchg
int3
fadds
xchg
sbb
aaa
jb
ret
cmp
push
ret
push
rcll
and
in
insb
cmp
dec
in
xor
adcb
mov
aam
xchg
outsl
icebp
cmp
es
sub
shrb
das
stos
loopne
mov
jge
pop
jns
push
sbb
cmp
and
mov
loopne
mov
ret
rorl
lods
rcll
sub
icebp
xor
push
loope
mov
jmp
and
sti
lds
jmp
xchg
and
fadds
gs
rsqrtps
dec
je
xor
cmp
cwtl
pop
add
mov
cmp
mov
fisttps
int
sahf
pop
ret
in
xor
cli
cltd
movsb
add
jg
xchg
sarb
push
mov
cli
daa
or
push
xor
adc
push
mov
pop
out
addb
scas
arpl
enter
ss
flds
loop
and
or
daa
adc
test
mov
mov
in
push
imul
add
jno
mov
mov
je
add
dec
xchg
loop
xchg
repnz
icebp
std
insl
sti
test
dec
sahf
sbb
ja
xchg
loopne
sahf
adc
mov
cmp
loopne
add
sbb
mov
pushf
movsl
loop
popa
or
test
lahf
aas
add
jge
in
xlat
ficompl
push
sub
mov
push
cmp
or
xor
popf
xchg
xlat
in
insl
je
aad
popa
std
pop
jns
mov
pop
jbe
jb
or
sub
fdivp
or
mov
cmc
jmp
sbb
xchg
testb
jae
push
leave
stos
mov
lds
add
lods
lret
pop
imul
cmc
mov
add
clc
push
sub
and
jbe
xor
cltd
mov
neg
dec
int
int
mov
jl
mov
cld
and
out
lahf
insb
pop
sbb
lcall
inc
es
insb
xor
in
int3
jns
or
js
lret
jnp
aaa
mov
sbb
out
int
cwtl
hlt
shlb
xchg
mov
dec
int3
pushf
pop
imull
mov
pop
or
xchg
mov
push
push
lods
icebp
xor
mov
std
xchg
inc
cmpsl
sbb
and
sbb
ret
aas
jnp
out
mov
pushf
adcb
out
lds
or
adc
fisttpl
add
hlt
fldl
xor
sbb
les
rorb
adc
push
addr16
push
fdivrs
inc
inc
int
mov
mov
add
into
xchg
cltd
sub
push
and
test
cld
inc
xchg
outsw
popa
insb
dec
push
fsubrl
js
or
sti
add
mov
mov
mov
inc
xchg
push
dec
cwtl
loopew
out
pop
or
mov
push
push
xor
jecxz
inc
sub
icebp
inc
sub
or
mov
out
and
dec
inc
arpl
dec
dec
lcall
jb
in
sbb
mov
add
sub
enter
or
sub
aaa
dec
sbb
or
mov
inc
fists
jle
js
jl
jae
and
bound
push
sti
stos
sbb
repnz
out
ja
jl
imul
call
jmp
stos
out
push
test
ficompl
jnp
or
mov
xor
ss
mov
insb
das
ret
xor
idivl
mov
les
adc
cwtl
jecxz
bound
mov
fsubs
ret
mov
sbb
jb
insb
sub
xor
sub
add
mov
jecxz
push
stc
cld
sbb
in
and
or
inc
lods
sti
or
cli
sbb
cmpsl
mov
int
lock
jnp
in
outsb
xlat
fs
push
mov
call
jg
fcoml
pop
jle
test
lock
mov
imul
dec
xchg
imul
out
push
dec
scas
cmpsb
shll
adc
and
jne
xor
xchg
xor
addl
fwait
pop
add
les
aam
cmpl
dec
push
mov
dec
jecxz
lods
mov
in
pushf
imul
add
testl
add
dec
push
pop
fisubrl
insb
imulb
decl
cmp
dec
inc
xchg
lods
in
out
sbb
hlt
mov
cli
loope
out
add
leave
leave
mov
sahf
shll
xchg
mov
or
adc
inc
pop
xor
cmp
sahf
inc
mov
rorl
std
in
xor
pop
addr16
mov
pop
add
cmp
mov
cmp
dec
je
xchg
fbstp
mov
cmp
mov
aad
arpl
fisttps
lea
movsb
cli
dec
mov
popa
pop
aas
mov
leavew
xor
and
push
mov
cmp
sbb
into
imul
xchg
aaa
stc
sbb
clc
mov
stos
sahf
fsubs
pop
popa
push
dec
inc
nop
dec
loopne
mov
scas
mov
cmpb
test
push
pop
mov
adc
pop
dec
pop
dec
call
out
mov
mov
stos
push
ret
jno
pop
push
xor
cmp
in
mov
test
adc
push
xchg
and
int3
xchg
adc
cmp
dec
sbb
fidivs
push
sbb
test
cwtl
pop
jne
lea
add
or
pop
adc
mov
xor
shlb
or
dec
xchg
movsb
jl
mov
pushf
adc
nop
or
rolb
push
mov
fldenv
and
xlat
out
adc
pop
mov
cmpsl
cmpb
pop
scas
mov
sbb
rcrb
mov
clc
push
nop
out
in
sbb
orl
dec
scas
adc
xchg
xlat
mov
push
xchg
subl
mov
pop
ret
in
popf
cmp
mov
addr16
sar
sub
roll
jp
into
into
fldt
gs
pop
cli
mov
dec
jge
xchg
jns
jle
fdivr
bound
out
popa
pop
cmp
mov
in
inc
mov
mov
mov
push
pop
sbb
xchg
push
out
sarl
push
pop
das
dec
inc
aam
int3
mov
loopne
mov
subb
xchg
test
stos
push
shl
push
mov
or
in
jp
iret
xor
push
arpl
jne
cmp
stos
push
jmp
aas
out
data16
sub
push
fs
stos
adc
subb
pop
clc
or
jge
add
sbb
mov
addr16
inc
lods
fnstenv
inc
adc
cmp
in
notb
dec
and
push
xor
or
mov
gs
pushf
adc
push
push
fwait
mov
mov
movsb
and
lods
repnz
jns
nop
mov
in
fcoml
jbe
mov
cmpsb
testl
pop
or
mov
jbe
sbb
mov
and
int3
pop
lret
mov
xor
push
frstor
imul
xchg
sub
ror
ret
push
les
push
jae
in
stos
je
mov
or
aas
push
popl
cmpsl
mov
out
push
pusha
mov
roll
push
fidivl
mov
mov
data16
add
pop
call
iret
push
mov
xlat
cmp
add
xchg
cli
insl
bound
cmp
faddl
dec
sbb
jo
imul
cld
mov
iret
in
rclb
ja
inc
xor
and
push
push
insb
jle
push
cmp
int
scas
fs
in
inc
push
lds
pop
dec
daa
lahf
xchg
dec
mov
xor
fsub
cmpsl
orl
loope
lods
mov
inc
xor
xchg
pop
dec
sti
adc
jmp
das
sub
movsl
inc
jns
inc
adc
cmp
xchg
lret
stos
push
jmp
jmp
and
into
and
jge,pt
or
cmpsb
xchg
aad
pop
out
inc
cmp
iret
push
popa
or
cmp
mov
cmp
dec
fwait
out
lods
mov
cmp
idivb
sbb
bound
ret
cmp
jb
cli
loopne
push
cwtl
aad
dec
push
sbb
insl
repz
cld
aaa
mov
adc
rcrl
adc
or
pop
mov
pop
fdivrl
cmp
aas
subl
std
cwtl
pop
jns
xor
add
add
push
out
add
add
lods
in
jne
or
int3
cld
popf
out
add
jp
loopne
cmp
adc
xor
push
imul
sbb
push
gs
add
dec
pop
fldenv
fcomps
cmp
loopne
in
mov
lahf
out
sbb
icebp
jne
fstl
dec
xor
mov
adc
and
mov
hlt
push
xchg
shlb
sbbb
xor
xchg
aas
rcrl
mov
clc
jno
push
ficompl
dec
dec
adc
lret
cmpsb
fs
test
test
or
pop
scas
scas
inc
xchg
push
cmp
jno
mov
jecxz
scas
rol
divl
or
inc
in
test
mov
push
fldenv
xchg
push
fcomps
jne
lock
lahf
add
jnp
out
insl
test
mov
movl
mov
dec
add
stc
mov
jl
jae
addl
inc
leave
test
cwtl
sub
pop
cmp
sub
outsl
shll
mov
dec
sahf
pushf
xor
insb
inc
or
sarl
popf
hlt
jge
pop
leave
je
push
jp
rcrl
into
inc
fcompl
sub
mov
mov
sub
aam
mov
test
mov
inc
call
or
pop
shrl
jmp
loopne
sbb
call
pusha
sub
cwtl
sub
scas
jnp
or
jp
and
push
daa
push
sub
loop
mov
jnp
in
js
and
loope
icebp
cmp
subb
xlat
cmp
dec
enter
shll
fildll
push
fs
or
xchg
dec
and
adc
pop
inc
jmp
pushf
jno
or
adc
jg
sbb
xor
fisubl
xchg
sub
xchg
sub
ss
pop
mov
fbstp
add
loopne
gs
fs
jo
jbe
jecxz
lock
xchg
adc
test
add
cltd
dec
int3
sahf
dec
push
adc
in
sub
sub
movsl
jg
push
notl
inc
std
jge
mov
push
es
fs
cld
lods
ret
and
pop
fcompl
cmp
dec
dec
addr16
xor
pop
cmp
sbb
cmp
mov
fwait
or
jo
lcall
imul
fisubl
sbb
shrl
cwtl
cs
hlt
pop
inc
cmp
cmp
cmc
test
jge
xlat
js
mov
jb
sarb
popf
inc
inc
iret
stos
cmp
dec
pop
mov
imul
scas
stos
xchg
shr
xlat
fcom
aam
sbb
insb
lcall
fisubrs
outsl
fwait
or
cmp
lcall
and
std
dec
mov
mov
sbb
add
clc
dec
cwtl
rorl
hlt
lods
fs
pop
mov
mov
fstpt
inc
cwtl
insl
popa
pop
sarl
out
sub
or
movb
push
dec
in
lahf
cld
dec
mov
adc
jle
mov
loop
xchg
cltd
out
push
push
in
xchg
cmp
xchg
pushf
or
repnz
push
push
roll
aaa
scas
das
inc
mov
mov
pop
and
pop
movsl
mov
jle
int3
mov
imul
pop
jns
adc
xor
imul
out
insb
cwtl
iret
mov
pop
and
sub
pop
pop
push
lea
xchg
aaa
fucom
pop
orl
pop
jb
mov
and
ror
data16
push
jnp
mov
xor
add
inc
int3
xlat
cmp
fsubrs
imul
push
scas
and
mov
pop
stc
mov
jmp
jae
lcall
pop
cld
stc
imul
iret
jmp
stos
shl
pop
sub
sbbb
lods
lea
cwtl
frstor
cmpsl
xor
insb
jo
push
or
push
cld
out
mov
and
hlt
mov
stos
cmp
mov
out
out
cmp
cmp
pop
out
leave
cwtl
add
ja
das
or
call
sub
out
cmp
fwait
int
stos
adc
fisubl
call
xchg
stc
push
jne
leave
sbb
sbbb
lods
jecxz
outsb
in
sbb
addl
cmp
inc
loopne
mov
jmp
inc
xchg
fadd
arpl
and
push
sbb
imul
xchg
in
mov
xor
outsb
cmpsl
inc
and
push
sbb
stos
movsl
sahf
sub
mov
push
push
adc
pusha
and
into
cmpsl
stos
adc
jecxz
mov
loop
addr16
scas
dec
mov
xchg
add
fsub
mov
pop
mov
add
shll
bound
mov
lock
and
push
mov
pop
pop
or
cmp
sbb
sub
mov
inc
xchg
cmpsb
popf
sbb
imulb
pop
fildl
into
movsb
pop
imul
shlb
in
mov
or
dec
mov
les
ror
add
push
lret
add
std
xchg
mov
movsb
push
cmpsl
push
aad
loopne
cwtl
sbb
mov
push
jno
bound
mov
lds
fiadds
shl
sbb
enter
clc
push
nop
push
aad
mov
in
push
imul
imul
jne
scas
inc
push
movsl
add
push
mov
and
mov
adc
ret
popf
dec
ret
sub
push
mov
mov
jle
int3
mov
push
mov
push
sbb
adc
xchg
jmp
je
sub
cvtps2pi
mov
or
dec
movsl
pop
popf
or
sahf
or
xchg
sub
xchg
fucom
add
aaa
outsb
movsb
xchg
xchg
adc
in
cmp
mov
roll
mov
xor
cmpsb
or
push
mov
testb
stc
mov
sbb
sub
divl
xor
push
dec
rcrb
fmuls
xchg
out
data16
nop
imul
int
and
js
dec
aam
jbe
cmp
popf
add
or
add
inc
test
ljmp
cltd
bound
stc
adc
and
mov
jne
lahf
inc
xchg
ja
jne
js
and
std
popa
maxps
test
mov
vmulsd
scas
and
leave
lret
lods
cwtl
and
outsb
xlat
inc
enter
insl
jge
out
lahf
push
outsl
cmc
outsl
iret
cmp
and
out
jmp
test
xchg
mov
fsts
cmp
insb
pusha
popf
leave
xchg
pusha
sub
or
loope
ja
scas
and
jle
fldcw
and
pop
test
lods
cmpsl
sub
mov
rorb
rcll
adc
xchg
lea
jg
rclb
sub
pop
and
inc
enter
cwtl
push
stc
movsb
dec
and
rcl
or
imul
jmp
repz
fisubrl
cmp
pushf
mov
fstpt
ljmp
inc
xor
and
fbstp
les
adc
in
xlat
ds
mov
add
push
push
ja
mov
xor
enter
jb
shlb
sub
and
xor
mov
cli
xchg
leave
push
out
js
or
xchg
test
outsl
movsb
dec
xchg
mov
mov
fnsave
jno
inc
and
mov
mov
dec
ror
adc
or
cmp
jle
adc
xchg
cmp
out
jmp
or
sbb
cld
pop
cmpl
pop
adc
jns
sub
je
jmp
shlb
stos
adc
add
out
in
je
or
xor
shr
repz
mov
clc
push
inc
jnp
inc
mov
or
or
lret
pop
scas
sbb
jbe
lcall
lock
jbe
cmp
dec
sbb
incl
lods
adc
add
xchg
sub
mov
sbb
sbb
ret
lods
sbb
push
je
push
mov
enter
dec
xlat
push
clc
push
inc
push
push
mov
cmp
ds
test
outsb
sahf
rcrl
out
scas
lods
mov
leave
clc
add
cli
cmp
rolb
fistpl
inc
je
cli
cmpsb
test
adc
lods
jle
bound
daa
cld
cmp
mov
repnz
ss
pop
pushf
pop
pop
fimull
stos
mov
faddl
mov
test
rcll
inc
jmp
xchg
bound
imul
cmp
dec
xchg
adc
dec
inc
hlt
inc
mov
mov
mov
outsb
fiadds
call
les
aad
rolb
mov
insb
mov
push
fisubs
dec
xchg
pop
lcall
mov
pop
add
cmp
call
stos
fcomi
push
sbb
insb
cmc
mov
pop
sub
daa
jge
mov
sbb
xchg
shrl
mov
pop
dec
rcrl
cmc
xor
notl
mov
movsl
and
idivl
fsts
cmp
mov
insl
imul
mov
dec
mov
rcr
pusha
movsl
push
xchg
add
adc
std
jns
or
lods
ret
add
popa
outsl
jae
inc
clc
push
shrl
outsl
push
int3
cli
and
add
xor
subb
mov
pop
icebp
mov
jl
xor
out
inc
or
bswap
xchg
and
and
jp
ds
mov
and
inc
mov
imul
mov
enter
mov
stc
into
je
cmc
mov
arpl
push
mov
mov
sub
xor
xor
call
bound
rorb
enter
movsl
fcmovnu
jbe
mov
sub
adc
aaa
arpl
hlt
add
pop
stos
hlt
xchg
lods
xor
sbb
cmpsb
or
sti
xor
or
push
outsl
xor
in
push
mov
jbe
mov
test
shlb
add
add
pushf
into
sub
arpl
push
xchg
pop
insl
push
lcall
jl
flds
sti
cltd
jmp
mov
lods
lods
into
fcmovnbe
add
or
fs
iret
add
sti
in
xor
xchg
outsb
xor
add
ret
fistpll
push
inc
and
push
sub
cmp
call
cmpl
mov
cwtl
ja
adc
mov
cmc
dec
dec
into
popa
in
inc
mov
movsb
test
in
cmp
push
cmp
dec
je
xchg
lds
cltd
rcrl
call
add
jnp
jns
movsl
mov
inc
mov
cmp
in
stos
jne
cli
mov
jmp
cmpb
jecxz
push
je
lahf
mov
mov
inc
addr16
xchg
lods
xor
jp
test
lahf
xor
es
test
inc
pop
xor
pop
shrl
mov
adc
hlt
sbb
adc
and
shlb
xchg
xchg
sub
mov
fbstp
xor
and
mov
in
jecxz
push
fucomip
adc
div
jns
outsb
sub
lahf
imul
pushf
mov
jne
mov
xlat
jo
inc
sbb
jg
sbb
jg
xchg
sahf
jecxz
int
pop
sahf
call
ret
mov
lret
or
mov
ficoms
sub
and
cmp
cmp
cmc
or
jmp
lods
jnp
mov
cmp
es
lahf
fwait
inc
out
push
push
popf
pushf
cli
lds
inc
loope
arpl
jnp
in
xchg
movsb
subb
test
or
adcb
mov
aaa
mov
xchg
push
lret
push
dec
pop
outsl
or
mov
add
mov
push
sbb
adc
cmpsb
push
sbb
sub
cmp
fisubl
sub
xchg
pop
ds
adc
pop
adc
jne
stos
imul
push
lds
pop
shl
subb
cmp
movsb
icebp
and
xabort
sbb
sub
jb
jp
mov
js
or
jge
mov
imul
sbb
je
inc
fidivrs
icebp
sbb
movsb
mov
push
xor
ds
adc
dec
and
outsb
mov
add
push
mov
inc
dec
adc
das
in
sahf
lock
aas
dec
mov
mov
scas
sub
mov
test
sbb
or
push
dec
les
cwtl
fwait
or
fistpll
sbb
push
xor
in
mov
loopne
and
sub
out
mov
or
clc
fucom
push
jl
dec
lods
push
push
loop
popf
rcrl
mov
jnp
imul
cmpb
mov
pop
adc
pop
cmc
aas
cmp
loop
nop
imul
dec
adc
leave
ss
push
lock
cwtl
stos
mov
push
repz
ds
jge
insl
shrb
jge
and
loope
pop
sbb
lahf
mov
push
movsb
dec
es
mov
lea
test
fldl
push
mov
jmp
push
gs
loop
mov
in
incl
sub
test
rolb
push
mov
movsl
lret
dec
mov
add
xor
or
int3
dec
jecxz
daa
pop
mov
int
mov
or
ret
scas
add
or
mov
cmp
je
xor
test
pop
imul
icebp
jg
lds
aas
add
pop
mov
lcall
outsl
popa
add
nop
stc
jb
adc
mov
lods
xchg
sub
cmp
cli
xor
push
mov
add
ljmp
pop
subl
dec
lcall
sub
lods
pop
mov
arpl
sbb
mov
jg
push
in
loopne
loopne
in
cmc
insb
js
xchg
dec
adc
xchg
loopne
mov
jle
cli
jle
mov
jge
dec
add
xchg
andb
inc
jno
pop
bound
xor
std
test
ret
pop
sub
cld
pop
addl
loop
js
sub
inc
cmpsb
ret
out
xor
in
shrl
dec
subb
sub
inc
inc
es
cmp
mov
outsl
cmp
pop
movsb
jno
in
adc
ss
or
dec
sub
and
and
jno
cld
stos
jno
test
imul
mov
jb
xchg
push
daa
lds
out
fldcw
negb
pop
mov
nop
lcall
je
int
in
cmp
sarb
lods
leave
jl
popa
std
mov
jnp
negb
les
js
push
push
je
sub
add
andb
dec
jo
ret
add
xchg
mov
paddsb
push
shll
mov
outsl
pop
add
sbb
xchg
mov
outsl
mov
leave
inc
push
popf
cmp
mov
inc
mov
cmp
loopne
cli
xchg
movsl
das
jecxz
dec
pop
arpl
nop
mov
bound
ss
mov
lahf
xchg
or
cmp
push
mov
sub
xlat
xlat
lahf
jnp
or
insb
jg
insl
and
adc
in
pop
pop
outsb
and
mov
mov
fs
pop
rol
lock
in
pop
sub
xchg
mov
mov
icebp
lds
push
shr
push
call
adc
lcall
dec
pop
push
test
enter
xor
in
aaa
pop
xchg
inc
or
stos
xchg
push
xlat
sbb
xchg
cld
jne
repz
mov
xor
mov
shlb
jno
inc
add
stos
inc
idivb
mov
xor
je
add
sbb
repnz
xor
das
push
frstor
mov
hlt
movsl
stos
lea
addr16
aas
push
jno
ss
xor
dec
xor
mov
js
movsl
ret
imul
sbb
mov
cmp
sbb
cld
sub
sbbb
xchg
loope
sbbb
rcr
inc
push
mov
xlat
jg
dec
ljmp
cld
mov
adc
shr
adc
stc
xchg
scas
sti
cmp
data16
push
sbb
push
movsb
in
push
pop
xorb
mov
sbb
fldl
fbstp
imul
fiaddl
int3
jmp
lods
cmp
outsl
mov
mov
outsb
and
dec
pop
int
xor
xor
in
test
fdivp
pop
dec
fcomi
loope
adcl
out
add
addr16
jle
lcall
clc
jnp
fwait
cmpsl
repz
mov
outsl
sbb
add
int
aam
pop
mov
insl
cmp
mov
fcmovne
gs
pop
movsb
inc
lret
ret
add
dec
lcall
sbb
ficoms
lret
xchg
and
cmp
stc
mov
clc
xchg
lret
fsubr
sub
mov
push
imull
mov
xlat
das
mov
pop
dec
jb
dec
jbe
cmpsl
mov
inc
pop
or
cmpl
push
nop
sbb
rep
movsl
call
insl
cwtl
insl
xchg
mov
les
add
neg
outsl
pushf
jns
cmc
ret
adc
jge
jg
hlt
out
insb
sahf
rol
and
out
xchg
or
lahf
imul
repz
add
leave
dec
cmovo
mov
in
mov
mov
addr16
js
lds
cld
pop
loope
cmp
fisttps
out
push
dec
adc
mov
jg
sub
xor
mov
pop
sbb
cmpsl
and
or
mov
and
xchg
cltd
es
mov
push
inc
ja
out
mull
call
je
xchg
or
inc
outsl
test
test
jmp
daa
sarl
call
jo
or
push
sbb
xlat
popa
jo
rcll
cmpsb
pop
enter
ret
ss
mov
adc
pop
and
cmp
dec
xchg
push
rcll
xor
add
ret
adcb
fsubrl
lods
cmc
xor
cmpsb
push
cltd
lds
repz
test
sub
mov
dec
aaa
add
aam
test
lcall
daa
aad
daa
jle
and
xlat
push
sub
cmpsl
jg
jns
jge
aaa
gs
ds
movsb
lock
push
inc
gs
loope
mov
inc
jne
movsb
bound
popf
mov
dec
into
xchg
pop
dec
inc
je
test
faddl
mov
sbb
mov
stos
lret
repz
push
lods
or
dec
mov
xchg
pusha
push
test
jge,pt
int3
sbb
push
push
jb
ja
call
pop
inc
push
inc
roll
leave
insb
lea
aas
leave
push
push
cli
insb
mov
inc
das
cmp
mov
lahf
sarb
xor
hlt
cs
ds
mov
bnd
pop
xchg
gs
cmp
dec
xchg
enter
das
jmp
cmc
lock
iret
imul
icebp
mov
cmp
mov
stos
bnd
sub
dec
dec
sub
mov
outsl
and
int
pop
dec
ljmp
out
push
test
jg
jno
push
inc
popa
ds
cmc
xor
adc
sub
fidivrl
data16
jne
mov
xchg
or
sbb
jmp
shll
ret
es
scas
cs
nop
xlat
jmp
xchg
sbb
ret
repnz
ds
pop
jmp
jmp
arpl
fmull
adc
sti
xchg
xchg
stc
mov
pop
push
enter
stos
mov
dec
sub
xchg
xlat
dec
subl
rorb
js
push
xchg
xor
fsts
daa
out
push
mull
xor
jne
adc
popa
mov
add
cld
int3
movsl
movb
adc
xor
cmpsb
mov
and
cs
inc
loope
movsbl
sub
sub
test
repz
push
outsb
pop
mov
pop
cwtl
sbb
sar
aad
repnz
xchg
pop
loope
and
int3
push
adc
aaa
call
in
jne
jge
dec
dec
push
test
lcall
push
push
out
add
mov
rcrb
arpl
or
mov
sbb
xor
mov
inc
fimuls
xchg
sub
cmpl
xchg
add
jno
inc
das
add
or
add
and
sub
cmpb
xchg
xchg
pushl
or
faddp
stc
mov
mov
mov
bound
pop
imul
cmp
push
push
jne
mov
fs
dec
inc
out
adc
aad
setge
lea
mov
out
in
mov
xchg
test
fsubl
mov
sub
iret
jge
xor
mov
rclb
shrb
push
or
push
negl
xor
cmc
mov
mov
jb
ss
inc
pop
sbb
les
sbb
jo
dec
sbb
icebp
or
pushf
cmp
jp
pop
mov
insl
jbe
dec
lods
lret
pop
xlat
inc
cmpsb
int3
jno
imul
fists
mov
jg
ret
incl
sahf
mov
out
dec
cmp
mov
ffreep
ljmp
fiadds
xchg
ret
cld
fisttpl
das
inc
movsl
sbb
dec
jo
loopne
jbe
pusha
cmp
and
dec
iret
cwtl
jb
push
in
int
repnz
test
or
mov
push
and
orb
lock
outsb
out
ljmp
hlt
sbb
dec
and
fldenv
push
jg
or
imul
jb
xlat
cmp
loope
dec
xchg
jg
cmp
into
leave
xchg
sbb
xchg
lret
in
and
addr16
and
iret
mov
or
repnz
movsb
iret
imul
sub
add
mov
test
adc
mov
repz
add
cwtl
fcomps
cmpsb
and
lahf
aaa
popa
popa
rcrb
je
dec
out
in
scas
mov
cmp
or
xchg
inc
sbb
clc
mov
xchg
push
xchg
sbb
aam
mov
sub
out
dec
je
or
push
shll
push
mov
fucom
fisttpl
mov
mov
orl
xchg
out
test
out
js
fst
xchg
or
mov
mov
inc
push
add
jl
mov
cmpsl
ret
dec
std
arpl
pop
ret
mov
pop
and
sbb
sub
clc
add
int3
fiaddl
sti
ja
filds
lahf
mov
daa
int3
push
pop
adc
addr16
lds
inc
push
dec
push
shlb
test
pop
push
repnz
add
add
int3
jle
push
movsl
test
mov
popf
out
pop
loopne
adc
das
push
cmp
push
sti
test
xchg
scas
lods
lret
add
dec
mov
sbbl
mov
pop
add
imul
ja
pop
push
lret
jmp
adc
or
gs
ds
mov
lret
jno
and
and
addb
int
cmc
arpl
stos
std
mov
mov
imul
push
jge
insl
mov
out
sbb
insb
lods
mov
divb
iret
sahf
mov
push
xchg
insb
mov
jle
pop
push
in
pushf
cmpsl
daa
aam
mov
pushf
dec
inc
int3
adc
xchg
hlt
pop
bound
cmp
addr16
adc
sahf
loop
cs
pop
sub
xchg
or
mov
xor
in
pop
aas
mov
fldl
sub
or
ja
xor
jne
or
in
mov
dec
test
jbe
and
nop
push
inc
xchg
fildl
sbb
or
or
gs
cs
scas
jle
mov
enter
add
mov
sub
sbbl
mov
sub
cmp
jle
mov
xchg
bound
cmpsb
mov
push
mov
cltd
gs
pushf
and
sub
cmp
sbb
daa
pop
ss
dec
jmp
daa
fimull
mov
fsubrs
call
bound
lock
bound
pop
sub
mov
fisubrl
push
push
cmpsl
ret
sbb
inc
out
cmp
pop
scas
push
lahf
lods
clc
mov
test
aam
inc
in
xor
aaa
scas
xchg
clc
push
jge
mov
inc
test
push
mov
sub
das
popa
loopne
sub
pop
fisubrl
insl
cmpl
loope
pavgb
cld
jg
mov
lret
out
int3
test
jg
xor
outsb
leave
fs
and
fisttps
adc
in
jle
daa
mov
dec
imul
sub
xchg
pop
sub
negb
inc
xchg
pushf
mov
adc
inc
push
xor
mov
or
les
movsb
jp
jb
shlb
adc
stos
fistps
sbb
popf
jl
outsl
jae
mov
in
xor
adc
loop
mov
out
lds
mov
sahf
sarb
out
call
popa
std
shl
rcrb
jl
push
xor
stc
and
mov
pop
push
push
jo
out
or
cld
sub
les
pop
jae
addr16
in
pusha
outsb
fs
pop
mov
inc
shll
sbb
pop
into
push
sbb
loope
daa
pop
jmp
mov
ret
or
icebp
out
ret
cwtl
add
inc
ljmp
dec
imul
insb
sub
mov
mov
pop
xor
bound
dec
enter
cmp
jno
mov
push
insl
jno
push
or
mov
and
mov
and
push
and
mov
jae
fisttpl
or
repnz
pop
shrl
pop
jl
icebp
rcrb
jb
push
popf
stos
ja
sub
cmp
inc
sub
push
push
pop
push
mov
pop
mov
addr16
js
aad
int3
jb
dec
adc
aam
mov
ret
dec
testl
and
add
mov
jb
inc
in
fstpl
sahf
in
nop
mov
xchg
add
xlat
cli
stc
std
lahf
sbb
sbb
dec
or
cmp
cmpsb
push
stos
call
jne
ljmp
dec
shl
inc
stos
sub
xor
xor
and
mov
xchg
fdivp
inc
fwait
sbb
cmp
les
and
xor
aas
pop
sbb
push
xorl
pop
and
cld
inc
add
out
jne
hlt
leave
pop
sbb
adc
loopne
pop
mov
test
nop
dec
mov
fisubs
loope
lret
mov
fstl
sub
pop
and
add
in
lods
sbb
lcall
jmp
adc
push
in
xchg
shll
push
or
xchg
leave
inc
rorb
sub
inc
or
insb
shlb
adc
jns
cmp
addb
mov
popf
loope
sub
mov
scas
and
add
cmp
inc
fwait
xchg
stc
push
xchg
ffree
mov
push
pop
lret
fadds
and
in
xchg
push
into
jnp
cmp
and
dec
and
arpl
cld
mov
rorb
fs
pop
fcomps
inc
nop
scas
pop
cmp
out
xlat
pop
loope
xor
and
push
lahf
rolb
stos
js
pop
jg
add
orl
ss
movsb
and
ret
mov
outsl
loop
lods
push
andb
fs
loopne
adc
xor
xchg
xor
jecxz
jge
inc
mov
sub
xchg
aam
push
mov
adc
repz
and
sbb
lret
inc
dec
add
addr16
fsts
cli
mov
in
insb
cld
mov
mov
or
push
adcb
out
jns
outsb
lahf
push
adc
push
adc
ret
mov
xchg
std
lods
inc
in
sbb
jno
xchg
cmp
fiaddl
jne
cwtl
sbb
pop
ja
mov
jns
in
gs
adc
add
pop
push
add
sub
push
cmc
sbb
sbb
cmp
jp
pop
sti
jo
das
data16
fsubl
xchg
repz
decl
repnz
adc
rcl
dec
fnstcw
mov
repnz
cmp
adcl
sti
imul
add
bound
add
subb
adc
fisubrl
pop
pop
fwait
dec
sbb
stos
or
scas
push
inc
jnp
sbb
sub
sar
sbb
mov
pop
mov
iret
sbb
add
cltd
sbb
or
lret
mov
ret
add
sub
lods
cmp
addr16
mov
shlb
testb
add
mov
or
xor
loope
hlt
js
out
in
jmp
cmp
sbb
jmp
sub
adc
jbe
aas
push
mov
and
fincstp
fdiv
dec
stc
xchg
push
mov
push
inc
xchg
adc
inc
xchg
adc
push
xor
out
movsl
push
movsl
or
outsb
pop
call
push
pop
xchg
pop
jp
test
in
mov
jae
subl
leave
mov
dec
and
cmc
lods
or
dec
xchg
push
xor
or
idivb
and
dec
lcall
push
cmp
or
xchg
ret
xlat
and
or
dec
xor
xchg
push
pop
ljmp
mov
lods
sbb
sub
pop
or
daa
push
stos
ret
aam
repz
out
lds
push
cmc
sbb
add
ja
les
mov
rclb
pop
addr16
aaa
mov
adc
ds
rcr
add
icebp
ss
push
int3
mov
cmp
jge
xchg
xlat
and
xor
jb
mov
cltd
and
mov
and
negb
push
mov
mov
test
push
dec
cmp
sbb
mov
xchg
popf
cmp
out
sbb
fsubrl
push
lods
or
pusha
data16
add
loop
cmpsb
pop
sbb
pusha
pop
loop
ja
pop
pop
jmp
aad
or
inc
jnp
test
loop
cmp
mov
dec
xor
jmp
outsl
or
cmp
out
cmpl
aas
jnp
cltd
or
dec
bnd
jae
mov
loop
push
shrl
ret
xchg
push
sbb
add
cmpsl
out
sbb
pop
lock
add
mov
in
out
repnz
lods
push
add
mov
push
mov
loope
pop
jg
or
test
mov
cli
xor
mov
and
cmp
arpl
pop
popf
jle
cwtl
jno
cld
cltd
jle
xor
sahf
jg
mov
mov
fucomi
mov
aas
and
mov
cltd
outsb
sbb
cmp
pop
push
les
mov
jns
ja
imul
loope
insb
pop
pusha
push
movsl
daa
adc
sub
mov
icebp
out
xor
sub
cmp
sti
xlat
dec
add
mov
test
iret
mov
dec
movsb
cmp
in
stos
ja
mov
mov
je
pop
mov
adc
mov
mov
cs
and
sbb
sbb
jne
add
adc
and
jae
lds
outsb
pop
pop
push
aas
and
adc
add
pop
sub
or
and
mov
add
fbld
in
push
mov
jmp
cmpsb
scas
mov
jle
iret
inc
rol
jmp
cmp
mov
jne
jecxz
or
add
pop
adc
cld
add
cmc
sbb
sarb
xchg
or
lret
das
and
jae
ret
xlat
stos
xchg
mov
mov
insl
dec
adc
stc
pop
imul
cmpsb
lods
testl
ljmp
lret
push
flds
into
mov
divl
popa
stos
xor
cmpsl
and
addr16
cmp
pop
sbb
mov
shlb
and
jp
push
add
lret
icebp
out
dec
sarb
mov
dec
push
jmp
das
mov
dec
jae
pop
cmpsb
adc
dec
and
cmp
xchg
fmul
aaa
and
negl
dec
fildll
sub
shlb
sbb
rcr
addl
pushf
lahf
orb
xor
push
outsl
sub
xor
cmp
dec
push
pushf
repnz
fldt
or
cwtl
xchg
sbb
mov
roll
test
popa
scas
sub
clc
out
jg
cmpl
cs
sbb
fdiv
jbe
test
dec
jmp
pop
popf
repz
test
add
in
repnz
mov
jmp
mov
cmp
or
ja
push
loop
jne
cmp
fimuls
sti
cmp
stos
jecxz
int
cwtl
popa
cld
mov
fdivrl
test
stos
cmpl
jle
fwait
xor
mov
rcrb
and
cmpb
movaps
loope
sub
mov
jmp
mov
mov
adc
inc
adc
push
cltd
xchg
iret
rorl
push
mov
rol
sbb
cmpsb
divl
gs
gs
das
or
cs
sub
test
dec
sub
pop
mov
mov
mov
clc
sbbl
pop
sarl
xchg
push
xor
je
addr16
test
shll
call
mov
mov
es
push
xor
inc
les
ja
in
lahf
sub
mov
jno
inc
pop
cmp
mov
addr16
xchg
inc
imul
insb
pop
push
mov
adc
inc
mov
xchg
xchg
mov
pop
pop
adc
leave
and
outsl
and
inc
out
inc
int
loop
cltd
xor
pop
negl
mov
xlat
arpl
xor
rorl
adcl
testl
popf
sbb
das
adc
xor
and
mov
push
enter
sbb
enter
mov
sbb
sbb
hlt
mov
jae
dec
das
jne
jb
dec
or
testl
fwait
xor
clc
jno
je
hlt
sub
pop
loopne
es
rcrb
movsl
je
xchg
xchg
outsl
sbb
jl
stc
push
test
movb
mov
js
dec
push
enter
pop
xchg
mov
pop
imul
lods
pop
push
in
mov
pop
dec
out
cmp
out
inc
mov
leave
dec
ret
std
push
inc
hlt
push
pop
jle
in
adc
mov
dec
clc
jb
popf
test
sbb
push
push
aaa
sarl
mov
jbe
ja
pop
pop
fsubs
push
les
test
xchg
shr
ja
cld
std
inc
mov
sbb
popa
aad
aam
or
cwtl
cmp
stc
nop
ljmp
popf
mov
movsb
mov
jp
push
dec
jns
dec
stc
xchg
cmp
mov
xchg
bound
mov
pop
or
lods
fstp
sub
shrb
cmc
nop
bswap
aas
imul
lret
iret
negb
push
cmc
inc
push
aam
fadds
sub
dec
adc
mov
pop
sbb
jmp
add
lods
clc
clc
push
out
fwait
sahf
inc
inc
loop
lret
cmpsb
sub
xor
cmpb
in
sbb
mov
and
pop
cld
rcll
add
jecxz
dec
jns
clc
repz
daa
into
pop
mov
test
iret
mov
repz
out
clc
fldlg2
xor
fisttpl
xchg
mov
jge
cmp
xchg
aad
aam
mov
pop
jg
push
cmpsl
pop
popa
subb
mov
add
lea
fucom
jp
add
outsb
pushl
xchg
xor
dec
lcall
inc
sub
inc
stos
dec
push
movhps
fmul
or
mov
pop
jl
rdtsc
pop
jb
int
hlt
push
movsl
mov
das
sub
or
lahf
rcrb
je
push
in
cmp
daa
mov
sbb
fisubrl
push
fnstsw
push
sub
jnp
add
aaa
and
insl
decb
cmp
roll
lea
xor
jp
cs
lret
fadds
sahf
sbb
mov
fldcw
inc
inc
pop
xchg
xor
push
lea
in
stc
mov
add
daa
xor
push
pop
int3
pop
add
sarb
mov
fcmovnb
ljmp
js
mov
mov
cwtl
mov
ljmp
int
ljmp
jl
loope
or
xor
lret
in
inc
inc
push
mov
cli
fisttpl
sub
xchg
push
push
pushf
fsubs
or
mov
mov
mov
scas
adc
leave
popf
cltd
push
stos
enter
xchg
jge
push
out
cwtl
jbe
das
xchg
push
icebp
repnz
jmp
mov
mov
mov
or
sub
lea
and
inc
add
add
out
push
add
push
pop
dec
stos
subb
cmp
dec
lret
dec
dec
push
ss
sbb
pop
into
sub
je
stc
mov
cmp
or
nop
hlt
sbb
aas
and
les
dec
adc
push
test
sbb
sub
insb
mov
sub
inc
inc
out
xchg
adc
es
std
cli
mov
and
pop
pusha
pop
mov
inc
xlat
xchg
pop
fst
test
pop
bound
aaa
push
cmp
jae
lret
int
sub
rcr
xor
mov
inc
adc
cli
push
add
aam
popf
enter
adc
fcomip
jae
stos
jnp
aas
sub
andb
xorb
repnz
adc
aaa
mov
xchg
pop
lret
outsb
cs
incl
sbb
out
int3
out
js
mov
jecxz
stc
bound
loopne
mov
outsb
mov
repz
jbe
pop
mov
inc
pop
mov
cmp
adc
push
das
add
inc
push
shlb
and
dec
mov
nop
mov
rclb
sbb
push
je
xor
aas
and
push
adc
loope
inc
lods
push
add
pop
add
loopne
stos
gs
xlat
xchg
das
js
addr16
dec
test
daa
ss
in
shll
test
addr16
cmp
dec
jg
cmp
push
movsl
test
xchg
lret
in
sub
and
outsl
push
mov
inc
ss
mov
adc
pop
adcb
mov
mov
stos
mov
jo
popf
adc
jne
sti
mov
pop
sti
loop
sub
push
push
and
mov
adc
out
fdivrp
push
jmp
pop
sub
aam
inc
or
mov
clc
cltd
filds
push
jno
aam
nop
iret
cmp
nop
sub
cltd
or
adc
add
push
stc
lret
gs
inc
cmpsl
rcll
lcall
mov
pop
xchg
mov
mov
rcrb
mov
mov
in
push
repnz
xchg
adc
pop
sbb
xor
jno
xchg
lahf
mov
test
jae
sbb
adc
adc
fxch
sbb
sub
mov
mov
push
add
dec
sub
pop
pop
shrl
cmp
cmovg
xorl
es
scas
push
pop
pop
in
fucompp
mov
lret
daa
addr16
sbb
sbb
mov
icebp
push
jp
loop
sahf
into
loop
cs
jo
xchg
jge
dec
daa
jecxz
cli
or
jbe
jns
push
pushf
mov
bswap
cmpsb
mov
xchg
mov
mov
outsb
int
push
jo
mov
mov
pop
test
icebp
leave
rcrl
dec
out
out
fisubs
push
out
insb
xor
movsb
dec
lods
pop
cmp
out
push
hlt
popa
pop
adcl
mov
xor
scas
sbb
clc
out
daa
ja
test
add
movsl
sbb
mov
jg
clc
call
iret
icebp
and
mov
jae
addl
mov
scas
sbb
jmp
hlt
ljmp
or
int
mov
ja
out
cs
test
pop
cmp
scas
scas
jp
shrb
dec
pop
rolb
rolb
mov
fwait
mov
adc
shrl
adc
test
or
add
pushl
mov
mov
mov
cmpsb
in
mov
sbb
ret
imul
stc
jmp
je
ret
sbbb
shll
sbb
xchg
add
jecxz
mov
cli
loopne
cmp
jno
mov
test
mov
mov
lds
repz
fsubr
and
mov
jno
dec
jle
xchg
scas
mov
cmp
mov
dec
les
mov
mov
sub
adc
fimuls
jp
adc
xchg
mov
mov
bound
xchg
enter
sub
decl
filds
iret
xor
das
push
je
popf
lods
cmp
xchg
xchg
shr
mov
or
jno
add
push
nop
xchg
js
mov
mov
scas
cmp
and
shrl
push
mov
and
lods
dec
inc
mov
mov
fldenv
mov
sbb
bound
add
ret
add
dec
push
test
ds
sbb
mov
bound
dec
and
in
fwait
cmpsl
cld
addl
fcmovu
lret
fstl
lock
sub
inc
xchg
sbb
adc
sbb
das
fbstp
xor
add
jae
mov
addl
cmp
xor
jmp
push
lds
pop
clc
les
dec
push
jno
test
inc
arpl
addl
popf
cli
icebp
sbb
popa
dec
jmp
cmpsl
lds
cmp
pushf
orb
mov
adc
mov
dec
leave
fwait
or
pop
nop
repz
dec
xchg
loopne
push
dec
mulb
iret
js
hlt
fimull
stos
push
sub
mov
or
faddl
sbb
adc
jnp
ja
movl
or
iret
jmp
insb
mov
adc
mov
jecxz
xchg
mov
jo
int
push
or
or
popa
jmp
pop
test
int3
bound
dec
jmp
xchg
pop
sbb
xor
xchg
in
mov
dec
aaa
mov
clc
lock
and
add
pop
mov
addb
jle
mov
je
sbbb
int3
je
loop
cld
push
enter
jb
xor
aas
call
adc
push
xchg
test
test
push
lret
add
fldl
adc
dec
cwtl
xor
arpl
jle
push
jbe
aad
in
addr16
mov
cmp
push
mov
movsl
jne
mov
stc
shll
stc
mov
push
mov
dec
int
mull
repz
divb
xchg
jbe
push
pusha
mov
cmp
nop
addr16
fdivs
jbe
sar
in
or
sbb
js
sbb
add
stc
mov
cmp
inc
movmskps
pop
mov
js
cmpsb
xor
mov
sub
iret
aad
pop
stos
cli
pop
leave
xchg
adc
mov
loope
mov
pushf
mov
add
xchg
cli
rcr
mov
cli
and
pop
pop
les
xchg
pushf
test
dec
sbbb
ljmp
push
fcompl
and
out
cmp
push
stc
sub
pop
or
out
dec
loope
insl
mov
arpl
mov
pop
jbe
sarl
dec
or
aam
push
pop
std
or
xlat
fsubs
adc
inc
jecxz
push
sbb
ja
push
pop
or
adc
xor
fcmovnbe
rcr
pop
and
jge
xchg
pushf
aad
stos
es
sbb
inc
les
leave
std
xor
shll
es
add
inc
pop
xchg
ficompl
mov
nop
fs
cmp
hlt
das
out
pop
add
cmp
cmp
mov
jp
mov
cld
push
repz
adc
add
push
cmp
aas
outsb
gs
in
jne
push
repnz
pop
sbb
dec
hlt
cmp
fwait
mov
aas
cmp
jne
mov
jp
xor
outsl
out
pop
inc
jo
int
sbb
mov
jmp
or
mov
jbe
mov
lods
test
rcrl
scas
insb
jecxz
mov
jns
sub
loope
sarb
push
fwait
movsb
test
adc
jae
stc
cmpsl
adc
dec
sub
xor
fstps
jno
jmp
jae
mov
add
mov
jns
js
inc
dec
loopne
in
cmpsb
call
out
sbb
pop
idiv
subl
jb
mov
adcb
xorb
lcall
sarb
adcl
cmp
push
scas
dec
pop
xchg
jecxz
cmp
sbb
dec
or
sbbb
cwtl
sti
iret
into
fnstsw
roll
mov
xchg
test
cwtl
pop
sub
in
punpcklwd
mov
mov
cmpsl
pop
pop
sbb
mov
mov
pop
fs
push
inc
dec
or
sbb
and
fidivrl
and
dec
clc
xlat
add
xor
fs
movsb
shrl
pop
sbb
inc
cld
pop
popf
cltd
pop
les
adc
cmp
xor
sub
loope
pop
cli
mov
jae
cli
sahf
cmpsb
lods
xchg
mov
insl
rorb
pop
push
imul
push
lods
scas
jmp
popf
sbb
push
shr
or
jp
ret
call
adc
mov
dec
test
movsl
outsl
ds
mov
adcb
stc
and
jg
ja
adc
gs
pop
cmpsl
mov
out
inc
add
lds
dec
lods
pop
mov
sub
clc
sbb
pop
into
jp
and
add
push
lret
aas
dec
sub
out
inc
test
or
popl
adc
jmp
ret
cmp
loope
inc
cmp
add
push
inc
cld
loopne
dec
mov
roll
xchg
pop
or
pandn
jmp
dec
mov
pusha
xchg
jne
cmp
jmp
ret
nop
jbe
and
push
in
mov
sbb
shll
sub
push
sub
lds
test
dec
adc
scas
jnp
stos
ss
dec
and
mov
scas
push
adc
xor
xor
xor
repz
mov
lcall
jecxz,pn
jmp
cmp
je
add
and
and
test
fistps
pop
test
adc
dec
push
nop
test
pop
subl
movsl
mov
pop
jle
xchg
cmp
daa
pop
jns
add
mov
loope
shrb
push
push
cld
in
pop
mov
shrl
mov
int
stos
mov
xchg
sub
or
xor
or
mov
int3
sub
leave
shr
xor
push
cmp
xlat
jbe
je
mov
sub
jne
mov
popf
mov
dec
lret
add
addr16
cmpsl
or
push
faddl
mov
mov
add
jmpw
pop
add
lahf
call
sbb
sub
mov
push
xchg
int
roll
je
or
maxps
xor
and
sub
mov
out
lea
adc
stos
xchg
cmp
test
leave
lds
daa
pop
mov
sbb
sub
sub
xchg
jg
xor
out
dec
pop
test
stc
pop
adc
inc
pop
mov
push
add
gs
jne
fdivp
lds
stos
cmpsl
in
lods
fstpl
and
pushf
cmp
out
cld
xchg
dec
mov
inc
mov
addr16
fldenv
loope
mov
jmp
cwtl
dec
or
or
and
loope
pop
inc
mov
andl
fidivrs
mov
adc
test
shrl
cli
jecxz
mov
xor
add
xchg
aaa
mov
add
push
mov
in
orl
xor
sbb
sbb
cli
addr16
repnz
roll
das
test
sahf
jno
cmpsl
cmp
ret
jle
popa
xor
xlat
sub
movsl
das
push
add
arpl
data16
mov
pop
inc
sub
fmuls
das
stos
push
pusha
imul
pop
inc
xor
outsl
cmp
xchg
ror
mov
pop
mov
mov
xlat
pop
jb
adc
push
test
dec
mov
inc
pushf
inc
aam
insl
fs
xlat
xlat
mov
mov
inc
adc
repnz
mov
imul
mov
in
ss
inc
imul
scas
and
xchg
and
int
daa
addr16
jae
stc
repz
and
cmp
mov
iret
neg
push
adc
cltd
repnz
cmc
and
or
sub
lock
rolb
andl
xor
hlt
cs
pop
out
adc
lcall
jae
iret
xlat
sub
pop
in
lea
frstor
data16
sub
pop
orb
or
or
mov
push
jge
hlt
mov
jg
scas
sahf
in
xor
insb
push
mov
or
jae
add
in
das
test
outsb
jo
jg
pop
aam
test
and
js
and
xchg
gs
add
iret
dec
test
push
in
mov
mov
pop
fistpll
or
add
ret
xchg
mov
jl
push
pushf
stc
subb
xor
imul
rcr
sbb
mov
nop
stc
sbb
add
or
jnp
loope
dec
push
test
imul
jae
and
jb
dec
pop
je
mov
or
xor
jb
or
lahf
dec
fwait
and
inc
rep
sbb
movsb
push
inc
mov
movsl
mov
insl
adc
cmc
les
xchg
jnp
jmp
stos
xchg
add
inc
fldenv
sub
jmp
pop
pushf
or
sbb
sub
and
push
icebp
mov
rcl
iret
inc
lret
mov
push
sub
out
dec
jg
mov
lret
cmp
cmpsb
jno
jp
pop
shlb
xchg
dec
or
cs
jb
dec
lea
mov
rolb
jae
adcl
pushf
and
mov
ficoms
mul
cmpsb
pushf
call
stos
lea
sahf
sbb
xor
add
jns
arpl
mov
bound
inc
int3
mov
lods
sub
fdivrs
adc
dec
jp
push
lods
pop
mov
sub
and
js
insl
mov
push
in
jmp
jle
push
shll
outsb
out
loope
sbb
aad
mov
mov
pop
shlb
inc
sub
or
sub
test
fldcw
out
out
cwtl
push
xchg
mov
fnstcw
add
addr16
mov
mov
leave
mov
insl
pop
mov
mov
divb
das
and
push
scas
push
nop
jge
push
fst
jne
fs
mov
mov
jmp
int3
movsb
js
add
loopne
xchg
je
sbb
mov
fs
pusha
fdivr
insl
daa
loope
data16
jo
out
jne
arpl
mov
and
rcll
xor
scas
jmp
in
inc
pushf
mov
rcrl
cmp
jae
mov
and
mov
loopne
test
or
fwait
aas
cld
mov
push
push
push
in
ljmp
mov
call
xor
and
cmc
aam
add
sbb
jle
and
mov
xchg
mov
sti
push
lds
pop
mov
inc
mov
stos
push
call
pop
push
jb
and
push
fisttps
fldenv
in
xor
scas
add
stos
js
cmc
cmp
pop
pop
cmp
or
fnstenv
pop
sub
mov
mov
pop
jmp
mov
aaa
xchg
adc
hlt
repz
gs
sbb
inc
jb
push
orl
xor
push
push
data16
cmpsb
jmp
repnz
cmp
icebp
and
int
pop
lret
cmpsb
nop
mov
adc
mov
imul
sub
mov
cmpsl
and
loopne
jno
pop
and
xchg
cld
out
push
push
data16
xor
inc
cmp
ret
cli
and
adc
test
mull
pop
or
addr16
cli
push
cltd
sarb
mov
loopne
fidivl
bound
xchg
fbld
std
out
push
mov
xchg
jp
or
aaa
mov
into
cwtl
bound
cltd
adc
pop
jb
sub
icebp
mov
imul
sarb
enter
ljmp
push
enter
jg
and
cmpsl
xor
pop
cli
xor
fcmovnb
enter
xrelease
mov
add
mov
push
cmp
lea
adc
mov
adc
xchg
dec
in
pop
test
lock
gs
xchg
gs
ret
xor
mov
lds
mov
cmc
pop
sbb
pop
xor
inc
add
gs
sub
out
push
mov
lock
in
xchg
mov
test
aas
imul
cs
and
int3
push
pusha
push
pop
sub
stos
ret
into
mov
dec
sbbb
or
data16
fisttpl
push
xchg
lahf
into
ja
mov
imul
add
jp
or
lds
push
push
cs
ds
push
out
test
les
test
add
sbb
addl
popf
notb
fcomp
test
lret
xor
or
add
pop
outsb
push
dec
push
rclb
pushf
push
sahf
sbb
lea
xor
scas
lods
out
xor
psubusw
mov
push
ror
jne
data16
mov
movsb
cmp
fst
test
popa
test
mov
call
fnstcw
iret
shrb
fucomp
test
js
xchg
aaa
push
pop
imul
xchg
dec
jno
sti
mov
cmc
out
insb
lret
pop
xchg
adc
mov
test
stos
sbb
xor
loope
les
cmc
and
leave
jmp
nop
in
sub
cmp
aas
xor
add
shrb
dec
cld
les
sti
lock
add
in
dec
mov
xchg
js
pop
sahf
push
imul
inc
js
or
test
jecxz
push
xor
add
xchg
popa
fstl
in
pop
mov
dec
rolb
mov
jg
xchg
icebp
push
pop
sbb
xor
cwtl
mov
loopne
jnp
pop
test
and
clc
sbb
pop
and
push
scas
xchg
add
adc
dec
inc
pop
xchg
in
fistpll
test
aam
clc
fsubrl
cmc
mov
sbb
sbb
out
mov
adc
ja
lret
jl
cmpsl
add
push
test
sub
loop
xchg
mov
pop
push
pop
dec
mov
and
lret
push
mov
fs
rclb
jo
inc
and
jp
int
xor
lods
stos
xchg
dec
adc
je
lret
push
shrl
push
aad
add
lods
and
lcall
mov
clc
push
xor
or
cmp
call
xor
jne
add
lret
and
mov
pop
jge
jns
mov
xchg
xchg
and
and
sbb
popa
movsb
sysenter
outsl
lcall
cmp
mov
xor
cli
mov
mov
mov
push
stc
sbb
inc
test
out
in
cmp
jnp
mov
cmp
mov
fsubrs
pop
arpl
lea
sbbb
lods
sbb
mov
mov
and
clc
out
xchg
stc
fimull
stos
lods
into
in
test
lret
fwait
or
inc
sbb
sbb
sub
pusha
push
ret
ljmp
sbb
or
mov
mov
pushf
stos
mov
popf
or
push
ftst
fucomp
pusha
mov
and
xchg
aam
xchg
pop
outsb
pop
cmc
jne
int3
dec
xor
fmull
sti
push
mov
jmp
lea
jge
in
cmp
popa
mov
jns
outsl
and
or
cmpsb
mov
mov
jnp
fimuls
mov
lret
andl
out
enter
mov
or
mov
jnp
jmp
fildl
outsl
jnp
andb
ds
outsl
sbb
fiadds
cmp
dec
stc
aas
dec
cli
shlb
lcall
out
movsl
push
sarb
cmp
xorl
push
adc
aam
int
mov
loopne
shll
dec
leave
movsl
sbb
rcr
pushf
lea
sbb
dec
sbb
cli
inc
and
inc
inc
mov
je
inc
adc
lea
insl
sub
and
push
pushf
sub
pusha
cmp
mov
aad
mov
dec
testl
dec
add
pop
dec
rolb
fwait
lea
leave
outsb
inc
lret
cmp
pop
and
lds
leave
add
lahf
insb
pop
sbb
jmp
sub
mov
or
enter
repnz
pop
xor
arpl
or
push
and
rcrl
inc
xchg
pop
add
mov
or
mov
fwait
mov
sbb
or
repnz
outsb
cwtl
adc
mov
dec
pop
adc
test
pop
and
pop
iret
xor
inc
mov
dec
outsb
mov
sub
adc
jle
push
mov
stc
and
xor
push
push
adcb
mov
dec
pushf
inc
call
dec
jle
mov
adc
xchg
sbb
pop
lods
stos
sbb
sub
push
sbb
and
xor
cli
rclb
subl
xor
andw
cmc
push
mov
int3
mov
inc
inc
loope
xchg
pop
sub
push
mov
inc
bound
mov
push
out
sbb
push
imul
adc
sbb
icebp
xchg
cld
popf
dec
mov
rorl
mov
add
and
dec
outsb
mov
std
mov
or
add
stc
inc
hlt
or
inc
lahf
jnp
sahf
adc
add
sarb
xchg
fwait
add
icebp
movsb
mov
out
test
pop
enter
lods
mov
and
fmuls
mov
ds
inc
mov
mov
xor
pop
ret
push
xor
stos
out
jae
test
stos
push
dec
test
jo
mov
in
repnz
xchg
mov
adc
jmp
sbb
rcll
pop
popa
bound
push
jo
popa
ffree
pop
loope
xor
mov
cmp
addr16
jb,pt
push
push
xlat
mov
stos
pop
fiaddl
add
cwtl
cltd
lret
std
and
mov
fistl
mov
inc
dec
cmpl
lret
dec
pop
call
xchg
imul
dec
pop
stos
test
add
mov
clc
jecxz
mov
mov
addb
mov
ss
icebp
fstpl
loope
in
push
adc
mov
cmp
sub
repz
rcl
xchg
push
idiv
andb
xchg
adc
repnz
push
ss
pop
adc
or
rolb
inc
dec
xor
gs
imul
mov
cld
jmp
inc
xlat
or
adc
movsb
insb
xorb
push
int
pop
inc
sub
int3
sbb
sahf
push
stos
dec
gs
mov
rcl
aas
sbb
pop
rorl
ljmp
pop
cwtl
loopne
pop
pop
out
lds
dec
js
dec
rolb
in
out
inc
lds
mov
shrw
jo
mov
inc
sarb
mov
js
add
push
mov
add
aaa
in
test
cli
pop
aam
std
sub
dec
xchg
cmp
cmp
aaa
imul
sete
imul
push
jae
lods
dec
leave
popf
push
ret
add
xlat
ret
mov
dec
or
cli
test
repz
xchg
dec
and
sahf
test
outsl
lock
out
xchg
lea
sarl
add
pop
xchg
xchg
loopne
bound
xlat
sub
fisttps
push
aam
xor
mov
stos
rolb
bswap
cmpsl
rolb
rcrb
js
mov
add
stc
fwait
outsb
push
cltd
cmp
mov
jbe
cld
sub
leave
cmp
sub
int3
adc
mov
mov
cmp
mov
ss
cmp
pop
stos
jecxz
mov
adc
dec
test
scas
inc
dec
popa
push
daa
and
pop
inc
sub
cmpsl
jae
pop
adc
inc
lds
lahf
std
add
into
fwait
mov
loop
xor
xor
jl
jl
inc
fdivrl
rcl
sub
jb
pop
mov
xchg
test
fidivrl
stos
xchg
dec
jp
push
push
add
je
cli
or
cmc
sub
fsub
and
adc
out
adc
leave
add
jb
loop
andnps
aad
xor
nop
or
in
jp
push
jno
cmp
push
mov
pop
je
and
rcrb
call
pop
rep
imul
jge
inc
imul
dec
xchg
popaw
sub
in
scas
pop
jp
sbb
cmp
shll
xchg
movsl
cmp
test
sub
repz
pop
pop
hlt
sbb
pop
stos
lods
in
xchg
dec
jmp
inc
inc
push
jl
jg
je
aaa
push
fstpt
addr16
data16
clc
xor
nop
pop
xor
mov
mov
mov
mov
cmpsl
inc
dec
mov
cmpsb
into
iret
fwait
sbb
pop
loop
pushf
xchg
out
jmp
jmp
push
pop
in
scas
adc
addb
cmpsb
sbb
nop
std
fwait
push
sbb
cmpsb
inc
leave
push
lcall
aaa
lods
aaa
imul
subb
cmp
shlb
popf
insl
in
repnz
jle
sbb
out
jp
aad
mov
lahf
scas
pop
xchg
xor
mov
popa
jno
movl
addr16
out
push
jecxz
sub
mov
push
push
or
and
ja
ficoms
cld
or
xor
repnz
jae
addr16
adc
in
cmp
gs
pop
scas
jg
fldenv
add
lea
gs
inc
mov
mov
cwtl
stos
test
lods
add
xlat
cmp
out
push
pop
lret
xchg
cmp
lcall
lods
cmp
and
bound
push
mov
aad
ss
mov
adc
pop
popa
mov
add
in
add
mov
mov
sbb
enter
pop
pop
or
sti
enter
push
and
aas
and
lods
mov
pushf
out
jl
inc
adc
scas
mov
pushf
data16
les
dec
jns
cltd
sbb
lea
pop
push
je
std
or
push
pop
mov
dec
xchg
push
enter
push
popf
int
mov
ficompl
cltd
push
adcb
aas
ja
dec
inc
cmp
in
std
xchg
scas
push
in
clc
xchg
out
imul
jns
cmp
nop
pusha
sub
inc
insb
add
cmp
test
stos
push
pop
mov
ljmp
mov
cmp
addb
ds
mov
imul
loop
push
insl
xchg
inc
popf
adc
mov
push
and
sbbb
sbb
sub
repnz
add
fsubrs
hlt
lahf
xor
mov
inc
inc
aaa
out
jb
adc
rorb
insl
jecxz
fstpl
dec
push
lods
sub
inc
fnsave
sbb
fsubrs
sub
aas
sbb
add
xchg
sarb
int
repz
dec
push
sbb
pop
daa
push
lds
and
cmpsb
mov
fs
cmp
in
inc
xchg
push
cmp
fldl
mov
push
and
out
inc
imul
enter
inc
and
cmpl
imul
dec
sbb
sbb
pushf
pushf
cmp
cmp
push
jl
jnp
pop
pop
push
mov
add
rcr
iret
mov
push
or
ljmp
cltd
into
test
xchg
rcrl
das
lods
movb
mov
or
call
insb
leave
add
xchg
cmp
dec
icebp
cli
inc
mov
xchg
mov
daa
out
bound
and
sub
lea
jg
out
add
cmc
lea
int3
inc
lods
mov
sub
inc
pop
daa
fnstsw
add
das
and
ja
mov
push
jae
sarb
loop
in
dec
lods
mov
fdivrs
sub
mov
cmp
inc
fistl
push
add
popf
xchg
dec
and
jg
dec
push
sti
iret
scas
not
mov
arpl
aam
js
sbb
decl
iret
ss
mov
add
cmp
or
lods
push
addr16
xchg
jmp
and
cmp
pop
pop
mov
idiv
in
fnsave
add
hlt
imul
adc
mov
pop
jae
fmuls
in
test
scas
adc
js
stc
mov
mov
pop
js
test
fwait
std
pusha
scas
jae
in
fwait
push
fwait
icebp
cwtl
int3
push
test
outsb
push
into
daa
fs
cwtl
mov
cmp
cmp
nop
sub
sbb
push
cmc
sbb
popf
lcall
cld
xchg
xlat
ret
cwtl
pushf
lea
lret
mov
adc
cwtl
ds
popa
mov
es
pop
mov
ror
in
stos
sub
shrl
mov
cmp
jl
das
sbb
add
add
pop
adc
jae
lods
loope
arpl
adc
pop
stc
push
add
testl
push
add
rcl
pop
sti
push
fidivl
andb
or
test
rcll
jb
add
jg
addr16
incb
sub
fimull
adc
cmp
js
aaa
dec
sbb
pop
ljmp
outsl
inc
adcl
jns
mov
ret
in
dec
sar
fstcw
jp
shr
icebp
mov
dec
mov
dec
fistpll
mov
jae
cli
push
ret
pop
lret
sbb
lods
mov
aas
mov
ret
pop
mov
pop
pop
ss
cmc
xor
outsb
and
push
and
enter
sbb
and
sbb
rorl
pop
inc
xchg
sub
jecxz
dec
arpl
inc
ja
push
mov
dec
int3
pop
je
jecxz
push
test
cmc
fnsave
out
cli
xor
or
data16
or
jmp
int3
adc
adc
dec
xor
out
push
cmp
leave
push
sub
cmp
mov
gs
or
fsubr
xchg
adc
push
stos
or
movb
xor
pop
pop
xchg
imul
jp
ljmp
lock
dec
inc
mov
rclb
mov
dec
push
fisubrs
outsl
daa
das
lods
cmc
pop
mov
lcall
lea
movsb
lret
jge
lods
fs
test
addl
sub
cld
aaa
imul
and
push
and
cmp
out
leave
jmp
cs
pop
cld
jnp
test
push
push
loopne
sub
test
pop
mov
jae
xor
mov
adcl
pop
outsb
in
pand
pop
cmp
cmpl
add
mov
je
mov
sbb
and
mov
divb
and
mov
cmpsb
push
push
mov
out
xchg
lret
or
loop
adc
or
add
push
inc
push
hlt
ret
subl
mov
sahf
das
cmpsl
cmpsb
lock
push
xchg
fistpll
adc
sbb
or
nop
inc
sub
std
inc
in
js
out
mov
mov
add
jge
or
cs
dec
mov
mov
mov
push
frstor
jne
nop
loopne
sub
ds
and
repz
insb
pop
mov
xor
addr16
jae
hlt
ret
arpl
add
dec
sbbb
popl
xlat
sbb
sbb
test
add
mov
xchg
cli
lods
sub
xchg
lods
aas
fdivs
sub
jmp
sbb
xchg
fisubl
inc
aam
scas
popa
fsub
inc
inc
stos
lcall
mov
mov
lds
jg
adc
mov
mov
mov
mov
mov
xor
mov
xchg
insl
lods
or
add
lds
mov
ret
hlt
pop
adc
aam
neg
cmp
popf
and
mov
pop
cmp
pop
clc
sub
sub
pop
mov
fcompl
sub
xor
adc
add
incl
add
pop
stc
stos
jae
test
lcall
mov
cmp
pop
mov
mov
dec
mov
in
jo
test
lahf
push
cmpsl
adc
lret
jb
xchg
xchg
jnp
ljmp
pop
xorl
fisubs
loopne
lcall
sbb
add
jns
es
out
shrb
add
leave
push
inc
out
imul
xlat
sub
lock
pusha
pop
sbb
dec
outsl
dec
popf
les
push
adc
std
ljmp
shll
dec
fimuls
jle
mov
bound
jbe
adc
xchg
mov
mov
rclb
insl
cmp
mov
inc
cs
fldl
lea
out
popf
das
xchg
lahf
subl
pushl
gs
sbb
test
ret
cld
imull
pop
shl
cld
insb
sbb
sbb
clc
int3
sbb
cmpb
and
fwait
nop
cmp
mov
stc
std
sub
lahf
or
les
push
movsb
cltd
aaa
into
shll
cmp
andb
mov
clc
ds
pop
hlt
xchg
cmp
pop
push
cld
mov
call
xor
push
sti
lret
sub
icebp
xchg
pop
lahf
mov
pop
sbb
add
xchg
and
or
dec
mov
cmp
adc
jb
inc
imul
test
cltd
add
push
dec
push
mov
inc
icebp
dec
mov
or
sbb
lret
sub
mov
inc
mov
mov
inc
icebp
lock
in
add
aam
adc
repnz
mov
cmp
lret
or
mov
rcll
pop
mov
mov
pop
mov
xchg
test
mov
mov
jg
pop
neg
stos
test
cmp
and
sar
mov
xor
cmc
std
repnz
sub
or
insb
adc
cmp
lods
push
jle
nop
call
cmp
add
xor
mov
jne
jb
ret
xchg
pop
push
leave
in
xchg
sub
icebp
xor
out
pop
jecxz
xchg
fwait
jl
xchg
mov
imul
adc
mov
fs
mov
shrl
repnz
in
dec
loope
in
xchg
sahf
scas
les
push
dec
dec
jo
mov
popf
jne
popa
shrb
in
jnp
jmp
das
out
dec
insb
cltd
mov
or
inc
xchg
cltd
xlat
or
cli
fcoml
sbb
js
mov
push
cli
pop
jmp
aad
jge
add
stc
subb
addl
out
enter
cmp
das
mov
sbb
xchg
in
addl
inc
dec
mov
loop
cmp
inc
ljmp
inc
jo
add
ss
cmp
in
inc
or
inc
lock
daa
jge
out
js
rcl
mov
inc
jp
xchg
mov
push
fst
pop
inc
jbe
into
mov
jo
cmp
jbe
nop
fsubrl
push
insl
or
and
lds
inc
push
and
adc
pop
xchg
xor
mov
scas
ret
roll
outsl
int3
inc
cli
or
xchg
cli
cmp
ficoms
lods
lea
lret
jmp
xchg
xlat
mov
fstpl
sub
lret
jae
inc
addr16
movsb
repz
push
negl
add
lds
push
cmpsb
sub
cmpsl
pop
dec
mov
test
test
pop
cmp
xor
jg
and
push
enter
pop
aas
scas
leave
mov
xor
shlb
push
icebp
dec
xor
mov
jmp
push
loope
in
test
sub
push
cmp
mov
push
mov
mov
jmp
mov
loopne
push
mov
jo
bound
jp
fwait
stos
in
dec
and
pop
cli
shll
mov
jbe
aam
push
inc
cmpb
out
out
cmpb
and
rclb
jb
in
add
pop
adc
pop
adc
subb
pop
imull
imul
or
rolb
xor
or
inc
jb
rcrl
enter
cmp
dec
push
loop
leave
in
inc
scas
inc
xor
aaa
add
inc
ljmp
push
mov
jge
pop
lods
cltd
imul
mov
cmp
sbb
cmp
ds
and
sbb
dec
mov
adc
sbb
pop
cmpsb
mov
les
jecxz
sub
inc
mov
pop
mov
sahf
xchg
fsts
outsl
popa
ss
movsl
xlat
out
jno
cmp
xor
hlt
inc
jb
ja
push
xlat
sbb
sbb
inc
mov
and
and
cli
or
inc
sbb
inc
dec
divb
fildll
sub
int3
xor
dec
xchg
push
in
sub
sbb
and
aam
test
or
xor
stos
xacquire
repnz
decb
mov
mov
enter
scas
seto
mov
lds
push
es
stos
push
or
sbb
loopne
mov
addr16
insl
repz
add
mov
and
mov
xor
jbe
inc
mov
sahf
loopne
xchg
test
mov
sbbb
jno
push
pop
push
adc
enter
repz
inc
dec
aad
sub
fldl
popa
out
lret
mov
mov
call
jmp
sbb
js
sub
shlb
or
into
and
enter
mov
or
or
rorb
int3
pushf
bound
fucomi
mov
push
jne
fwait
mov
push
dec
outsl
dec
cmp
loope
out
push
aas
ret
insl
mov
push
mov
cmpsb
das
jmp
jg
sub
mov
mov
sbbb
daa
mov
pop
sbb
pop
sahf
and
mov
push
pop
sub
popf
lds
rcrb
stos
addb
shll
lret
push
ss
cld
dec
popf
stc
cltd
mov
into
add
fimull
lea
push
and
xchg
imul
outsl
push
add
mov
xlat
or
repz
loope
cmc
cmp
inc
shll
cmp
pop
sahf
test
jge
mov
adc
ljmp
sub
cwtl
cli
mov
outsl
cmp
mov
push
lods
jno
lods
cmc
pop
jl
mov
addb
xchg
mov
fisttpl
lcall
add
test
xchg
loop
push
cmp
outsl
inc
sub
mov
mov
mov
and
rcrb
mov
das
shll
xchg
std
xchg
jl
sbb
mov
push
les
pop
mov
xlat
out
mov
jg
mov
sbb
mov
xlat
cltd
inc
sub
inc
push
insb
lods
sbb
out
xor
ret
adc
xchg
popf
pop
mov
test
or
mov
dec
ret
sbb
pop
loope
daa
mov
adc
pop
mov
pop
fnstcw
sbb
mov
mov
pop
adc
rcll
cmp
sahf
pop
mov
jle
cld
mov
mov
add
lock
xor
icebp
push
cmp
rcrl
arpl
lods
dec
lret
int3
adc
or
test
mov
das
out
loopne
dec
frstor
and
jns
adc
jmp
xor
inc
mov
push
aam
pop
mov
push
mov
out
ja
fistpll
mov
jg
rol
les
mov
divl
jmp
sbb
mov
iret
dec
sbb
push
lds
loope
mov
push
jnp
rol
scas
enter
xor
movsl
add
inc
mov
xchg
imulb
mov
xchg
std
mov
cs
cltd
add
dec
push
gs
mov
dec
and
in
add
xchg
jle
pop
push
jb
leave
mov
scas
mov
dec
xor
imul
mov
aad
repz
test
jle
xor
es
jle
loopne
inc
int
pop
adcb
jbe
addr16
add
jno
shl
mov
jle
cltd
mov
inc
test
outsb
add
iret
mov
icebp
xchg
js
outsl
lods
pop
mov
push
dec
cs
mov
cld
xchg
arpl
mov
cmc
mov
aaa
adc
les
jno
inc
sbb
data16
aas
out
mov
sahf
cmp
mov
repz
data16
push
fwait
rcrl
and
subb
out
bound
inc
add
jge
popa
mov
ja
stc
xchg
in
shlb
arpl
out
faddl
dec
pusha
lret
inc
mov
cmpsb
push
push
aaa
leave
lret
scas
mov
movl
jge
mov
aam
adc
stos
mov
sub
adc
push
mov
fisubs
xor
jl
jg
fildl
aas
cltd
sbb
or
sbb
pop
arpl
mov
xchg
int3
incl
xchg
jb
lret
fisubs
cli
or
xchg
mov
movsl
push
fnstsw
clc
aaa
pop
jmp
in
popl
cmp
dec
inc
sbb
ret
outsl
dec
xchg
addl
and
aam
xlat
xchg
pop
jg
adc
dec
aas
in
je
pop
out
into
push
push
fs
mov
lea
cmpsl
pop
loope
pop
mov
es
cmc
cmp
sti
scas
jbe
sub
pop
xchg
cmc
inc
or
loopne
push
push
aad
les
fldt
int3
or
es
jb
addr16
jnp
lds
out
std
out
jecxz
jnp
push
ja
out
push
mov
adc
adc
cwtl
pop
jl
mov
mov
jmp
les
sbb
shlb
rorb
outsl
sbb
ds
xchg
outsl
in
mov
ljmp
repnz
adc
cmpsb
xchg
les
daa
push
sbb
jmp
mov
or
cmp
das
mov
sub
mov
and
dec
cs
shlb
xor
mov
pop
out
mov
jnp
inc
iret
jl
loope
repnz
stos
ret
cld
clc
cs
sbb
test
mov
in
cmpsb
cli
push
cmp
subb
movsb
shr
out
pop
push
sbb
push
jb
xor
fisubrl
pop
incb
pop
out
adc
inc
es
scas
lods
js
cmp
xor
mov
jg,pt
push
cmp
mov
sub
jge
and
les
xor
push
dec
pop
jg
gs
insb
pop
into
mov
mov
xor
cmp
sbb
es
cmp
pop
xchg
sub
bound
sbb
adc
mov
cmpsl
inc
or
and
and
jmp
movsl
loope
jae
into
aam
loopne
sub
mov
neg
imul
pop
dec
jae
adc
dec
jne
xchg
cmpsl
popa
mov
fs
mov
cmp
xchg
pusha
sbb
or
sub
fsubs
ret
divb
or
clc
dec
mov
pop
inc
jbe
dec
ds
mov
popf
xchg
cltd
sahf
jno
adc
dec
mov
cmp
xchg
imulb
jns
test
mov
cltd
push
imul
mov
pop
push
dec
and
add
test
cmp
lds
pop
ss
mov
dec
imul
call
testb
and
pop
mov
and
mov
aam
and
popa
int3
ja
or
ss
mov
aad
pop
or
ljmp
icebp
add
inc
ja
mov
cmp
sub
lahf
movsl
data16
sar
pop
dec
fldcw
leave
jns
or
shrb
inc
rclb
mov
fidivrl
mov
inc
rcl
pusha
and
test
cmp
add
stos
adc
or
jae
mov
push
cmp
add
outsl
or
push
push
orl
cld
sub
push
mov
push
jle
jmp
push
lea
dec
inc
mov
inc
xchg
adc
xor
insb
imul
in
aad
sbb
shl
pusha
das
jmp
cmp
dec
in
mov
mov
mov
mov
jnp
dec
inc
jp
dec
es
scas
mov
xchg
sbb
rcr
fs
push
lea
orl
and
jg
mov
cs
adc
rdmsr
add
and
arpl
xor
pop
in
enter
outsl
mov
xor
loope
subl
fildll
push
mov
add
lahf
mov
jmp
pop
inc
shll
ljmp
rcrl
or
push
pushf
call
in
in
fidivrl
scas
aas
stc
ljmp
mov
adc
es
insb
addr16
fistps
pop
jnp
xchg
call
ljmp
addr16
pop
lahf
imull
mov
xchg
xchg
in
mov
fadd
push
add
out
out
enter
ljmp
repz
pop
movsl
cmpsl
call
add
sti
push
daa
subl
sbb
stos
movsb
testl
mov
sbb
jle
lea
out
rcl
add
popf
xchg
fs
jl
cmp
movsl
xchg
stos
stos
mov
add
bound
sarb
jbe
insl
mov
add
cmpsb
fs
inc
sahf
xlat
xchg
add
xchg
mov
sub
push
dec
cmpsb
mov
or
in
aas
push
test
jp
mov
adc
pusha
push
fmull
fadd
or
jle
xor
sub
repz
imul
cltd
jb
iret
ja
mov
out
test
cmpsw
adc
insl
ret
in
jmp
gs
lods
hlt
mov
call
sub
les
or
xor
jne
xchg
gs
sarl
dec
mov
aam
pop
ja
cltd
fdivp
xchg
leave
xor
dec
dec
loope
cmpsl
in
cmp
fwait
outsb
lea
and
push
daa
arpl
sbb
ret
dec
inc
jl
xchg
push
mov
rcl
pop
stos
mov
mov
sbb
add
in
stc
stos
jg
sbb
inc
xor
jge
pop
aad
inc
sahf
dec
sub
mov
movb
bound
xchg
shll
rorl
inc
test
movsl
mov
ret
aam
add
or
mov
test
in
rcr
and
test
out
mov
je
adc
ror
pop
lock
aam
cmp
xor
mov
mov
mov
inc
cwtl
mov
sti
stos
and
push
les
sub
push
jo
cmc
in
shlb
ret
dec
js
clc
xchg
xor
fxtract
sub
mov
enter
movsb
pop
sahf
jmp
test
push
shlb
or
xchg
push
push
sub
xchg
and
fisttpl
cmpsl
mov
cmp
sub
and
repz
call
sti
in
add
jo
pop
adc
xlat
stos
jne
xchg
fistl
add
jo
iret
add
das
pushl
mov
sub
pop
cwtl
inc
divl
inc
pop
sbb
cmp
push
or
lods
jno
mov
popf
jb
pop
imul
mov
sub
pusha
scas
arpl
push
inc
popa
cmp
push
addr16
pushf
int3
mov
jno
mov
or
mov
insl
push
std
pop
std
add
push
pop
loope
adc
je
in
fmull
inc
test
sub
xchg
adc
int3
jno
jnp
mov
mov
leave
or
push
ljmp
mov
in
js
stos
test
fcmovb
and
pop
add
jbe
xor
out
xchg
pop
dec
shl
ljmp
mov
or
cwtl
les
negl
pop
test
imul
jae
icebp
cld
mov
adc
sti
out
lock
inc
rcr
ret
dec
pop
data16
mov
rolb
or
jg
inc
shl
adc
out
fidivl
mov
test
jnp
imulb
popa
add
mov
pop
jp,pn
data16
fcompl
push
cmpsb
lds
mov
xor
mov
dec
push
pop
push
mov
repz
jo
int3
xor
cmpsb
in
leave
sub
push
and
inc
xchg
xor
mov
xchg
lret
mov
mov
push
fsubl
ret
fsubr
shrb
dec
mov
pop
xchg
aas
xor
cmp
pop
negb
xchg
mov
aaa
push
stos
pop
jecxz
and
sub
jae
out
test
cmp
mov
xor
lea
push
lods
dec
jns
in
sbb
push
push
dec
dec
cltd
xchg
xor
mov
and
out
mov
push
mov
insb
cli
sti
movsb
fildl
in
pusha
mov
adc
xchg
sub
loop
insb
mov
cs
and
cmpsl
mov
stc
imul
push
mov
xchg
pop
test
and
das
xor
and
iret
sub
mov
or
mov
ret
and
mov
or
sbb
cltd
cmovs
inc
cmp
fisttpll
push
mov
aam
jp
push
fadds
mov
sub
rclb
xchg
je
mov
add
inc
push
negl
add
jnp
pusha
fcoml
ds
fimuls
xchg
hlt
mov
out
or
adc
outsb
adc
mov
es
mov
and
mov
ja
sbb
lock
cmp
movsb
push
pop
int3
add
xchg
xor
xor
out
sub
hlt
loopne
xchg
loop
test
call
mov
outsl
or
shl
gs
pop
mov
daa
mov
in
or
sbb
add
inc
or
pop
insl
inc
shll
cli
mov
mov
cli
jo
push
inc
xchg
and
cmova
aas
push
jmp
cmc
xor
mov
out
inc
pop
or
cmc
repnz
inc
mov
mov
mov
in
cmpsl
in
aam
enter
sbb
in
sbb
sub
ss
add
iret
outsb
push
insl
push
dec
stc
pop
call
pop
out
mov
add
sub
push
add
out
adc
fsubr
aaa
js
mov
aad
mov
lret
insb
sbb
mov
ret
sbb
pop
shrb
cmp
cmp
addr16
les
inc
mov
call
in
jb
stc
push
int
xor
out
or
xchg
les
imul
rolb
mov
jo
push
xor
xchg
sub
cmp
jmp
mov
dec
and
mov
loop
xor
rorl
jae
adc
mov
inc
ret
les
xchg
xor
and
jo
dec
les
aam
xchg
sub
imul
push
movsl
jne
jle
dec
pop
js
and
add
fwait
es
or
out
adc
in
cmc
jp
into
test
pop
xor
adc
pop
add
arpl
popa
jecxz
js
out
jae
xor
adc
lods
ret
fisubl
popf
mov
mov
sbbl
inc
stos
outsl
sbb
sbb
in
test
movsl
hlt
les
inc
mov
test
dec
pop
push
push
adc
push
or
out
int
mov
or
inc
and
jno
inc
xor
popf
sbb
pop
pusha
mov
mov
movsl
lods
push
add
cld
sbb
imul
xchg
cld
pop
pop
sbb
mov
inc
gs
xcrypt-cbc
cmpsl
adc
loop
sarb
mov
xchg
insb
dec
xor
cld
pop
add
inc
mov
adc
outsl
in
pop
std
cs
inc
in
cmp
ds
push
cmpsb
mov
ss
scas
hlt
jo
test
cltd
mov
int3
fs
lcall
in
mov
rorl
mov
add
lods
dec
lods
add
or
push
shrb
and
inc
push
and
jo
add
repz
lea
and
cmp
jg
push
xor
das
push
ss
push
popa
out
cld
jle
lea
mov
ret
inc
dec
xlat
insb
fwait
adc
jno
call
push
test
daa
es
add
dec
ja
dec
rcll
int
out
je
cmp
fildll
in
lret
cs
lods
outsl
cmp
push
cwtl
repz
pop
aad
in
push
popf
xchg
test
dec
inc
shrb
outsl
repnz
stos
popa
push
jo
scas
mov
outsl
aaa
inc
je
xor
stos
and
aaa
mov
jmp
xchg
mov
push
jmp
push
mov
shlb
testb
mov
sti
mov
mov
mov
adc
les
pop
cmpsl
test
fmul
mov
dec
sarl
push
fiadds
mov
mov
hlt
ficoms
xlat
adc
pop
push
aad
sbb
repz
out
cmp
repnz
pop
loope
in
popa
mov
sbb
les
and
mov
push
adc
fnstsw
int
fstpl
out
idivl
pusha
hlt
adc
inc
cwtl
mov
fbstp
xchg
mov
xlat
push
push
cmp
gs
aam
lods
adcl
sbb
cld
mov
lods
push
xor
lods
and
dec
test
xchg
mov
fucomp
mov
mulb
pop
fcomip
sbb
sarl
mov
adc
out
xchg
test
out
xor
mov
mov
jnp
sahf
test
or
dec
sbb
icebp
push
jle,pt
pop
cmp
jae
adc
push
mov
in
mov
test
int3
cmpsb
mov
or
jbe
push
mov
nop
das
call
ss
and
mov
cmp
lret
or
adc
pop
pop
sbb
cmp
xchg
mov
cmp
xor
inc
xchg
movsb
and
push
mov
mov
xchg
loopne,pn
test
cs
arpl
insb
loope
lock
fstp
and
movsl
or
mov
adc
cli
sbb
mov
addb
loopne
sub
inc
clc
lret
sbb
sbb
jle
adc
cmp
iret
xchg
cmp
add
bound
jge
loop
push
shll
mov
jecxz
out
pop
lods
pop
das
xchg
icebp
scas
data16
or
ret
push
cmc
into
iret
xor
int
fildll
ret
nop
insl
push
leave
int3
cmp
lods
add
mov
into
fdivrs
xor
enter
jb
out
xchg
pop
cmpsb
push
and
dec
ret
adc
sub
push
insb
mov
scas
pop
subb
aam
push
movsb
xchg
test
ret
in
inc
lods
fdivrs
loope
lcall
push
lret
xchg
add
mov
add
gs
ja
push
fbld
or
or
and
mov
xchg
xorb
xchg
popf
daa
inc
out
daa
std
xchg
sub
mov
jge
popf
xlat
test
sar
fildl
mov
adc
mov
and
sub
leave
push
jg
pusha
jae
incb
test
or
scas
mov
cmp
add
mov
outsl
sbb
mov
pop
call
cwtl
lcall
out
stos
jge
int3
and
and
out
loopne
mov
cmp
popf
out
adc
loopne
adc
lahf
cltd
cmp
loop
mov
std
push
mov
ror
jne
in
outsl
add
dec
adc
and
out
fwait
add
cmp
pop
call
ret
add
sti
mov
aas
xor
xor
repz
enter
stos
adc
call
sbb
jb
jmp
mov
mov
sub
aaa
imul
out
add
jl
test
je
jmp
and
cmp
dec
call
jno
mov
push
test
test
lea
cmpsl
movsb
out
fs
xor
lret
sbb
mov
arpl
inc
leave
lea
imul
dec
xlat
jne
push
push
cld
in
fsts
jnp
stos
push
loopne
jecxz
mov
pop
adc
fidivrl
mov
repnz
mov
loopne
sbb
dec
jecxz
adc
lret
loopne
fimuls
or
xor
les
jo
cmp
test
jo
cld
cmp
pusha
ss
mov
add
mov
ja
sbb
add
out
mov
pop
xorb
push
or
lds
jl
mov
test
aam
push
mov
repz
int3
sti
scas
xor
cli
add
mov
mov
lods
sub
dec
pop
xchg
push
pop
add
ja
add
leave
dec
jecxz
bound
pop
in
std
test
fiaddl
dec
enter
idivb
lret
daa
scas
fsubr
test
dec
mov
cmpsb
aad
je
or
rolb
push
aam
jne
fcompl
cmpsl
daa
jb
or
test
inc
test
sbb
outsl
insl
icebp
pop
iret
mov
and
xchg
aad
add
les
clc
mov
int
cmpl
mov
push
sbb
lods
out
scas
ja
fs
add
add
cwtl
jge
push
add
push
enter
inc
sub
ja
mov
sub
push
sub
and
scas
je
mov
popf
push
movsb
scas
shll
xor
mov
ffree
cmp
fldln2
je
inc
xor
lea
rcrl
cli
inc
pop
cmc
cmpsl
pop
in
fnstsw
mov
insl
out
cmp
cmpsl
fnstenv
mov
stos
xchg
fwait
xor
xchg
lock
cmc
ljmp
and
lret
adc
or
mov
adc
inc
lahf
insl
movsl
cs
push
hlt
inc
das
xor
jno
adc
sub
arpl
jns
mov
dec
adc
scas
rorl
bound
cmc
sbb
sahf
adc
mov
jbe
repz
mull
cmp
xlat
loop
sub
test
inc
pop
cltd
adcl
xor
movsl
adc
and
pop
sbb
mov
ss
into
sub
xor
mov
cmp
in
cmp
sub
pop
dec
fmull
add
scas
dec
pushf
jmp
aas
cli
sbb
xor
inc
aas
sbb
xchg
inc
scas
jg
fdivp
mov
xchg
js
cmp
mov
adc
or
and
mulb
or
pop
test
adc
fstps
dec
push
push
sahf
sub
push
pop
rcl
xor
push
push
sbb
in
popa
sub
mov
int
pop
div
sbb
imul
mov
lea
mov
aam
or
in
add
dec
jl
sarl
rcll
mov
icebp
test
sbbl
je
pusha
mov
fmuls
xchg
mov
or
scas
adc
test
aaa
xchg
push
ljmp
xchg
cmp
cs
outsl
pop
fadds
pop
sub
add
add
lea
out
xlat
xchg
rolb
fld
pop
or
jno
jp
shl
std
push
pop
lret
dec
mov
xor
add
add
and
xorl
outsb
jno
push
xchg
nop
cmpsl
lahf
lret
adc
repz
lret
dec
data16
mov
jbe
jle
in
pop
adc
pop
inc
xor
mov
xchg
sahf
or
int
add
shl
fwait
xor
decl
js
jmp
pushf
insb
cmp
xchg
pop
in
add
adc
cmp
insb
nop
test
sub
dec
add
mov
push
dec
push
ljmp
or
push
pop
mov
arpl
fdivr
mov
nop
push
das
cmp
stc
loope
loop
sub
lock
fwait
cmp
or
xchg
dec
fmulp
and
sub
adc
mov
es
shlb
inc
adc
sahf
imul
lds
pop
and
sbb
rorb
or
ret
out
dec
mov
cli
pop
stos
aad
xchg
mov
pop
ret
push
xlat
mov
pop
scas
int
mov
es
or
popa
int
iret
shll
ss
mov
stc
sub
push
loope
push
xor
push
add
repz
adc
loop
jmp
xchg
insb
sub
dec
push
insb
push
scas
jmp
add
push
sahf
pop
mov
popa
es
sti
push
xchg
mov
mov
cmc
test
cmpsb
dec
repz
cmp
roll
cmp
fidivrs
lret
push
sbb
push
xor
pop
or
pop
mov
int
cmpb
lock
aad
mov
pushl
mov
add
aaa
loope
or
mov
mov
loop
dec
inc
dec
pop
rorb
inc
cltd
stos
sbb
adc
xor
call
sub
jbe
leave
shll
cmc
into
cli
popa
out
mov
mov
lock
aam
ss
les
xchg
shll
mov
adc
lds
or
jp
adc
sbb
fsubl
out
out
push
dec
cltd
cs
push
dec
push
add
test
fwait
jne
test
xor
sub
xor
jge
mov
cmp
cmpl
and
cltd
jns
push
adc
or
jbe
icebp
cld
lods
adc
push
scas
xchg
push
jmp
sub
inc
inc
jnp
hlt
lret
adc
and
cltd
mov
lret
mov
loope
rol
sub
mov
mov
cmp
pop
addr16
pop
loope
cmpsl
fnstenv
cwtl
dec
incb
outsb
xor
adc
inc
loop
add
lock
push
paddb
loop,pn
rorb
leave
pop
cmp
int3
mov
pop
push
push
mov
ss
out
push
jns
push
cmp
cli
pop
inc
fidivs
jb
add
push
imull
arpl
cwtl
call
and
dec
imul
lock
mov
rorb
add
cmpsb
fidivs
ficoml
mov
into
and
or
repnz
pop
out
pop
shrb
das
negl
add
sti
jge
cmp
loop
cli
out
add
daa
mov
int3
out
das
rclb
sbbl
or
aad
jae
rclb
sbb
mov
jmp
jns
push
mov
test
hlt
mov
stos
mov
and
clc
cmpsl
out
dec
test
dec
push
imul
push
xor
inc
das
xchg
movsb
outsb
mov
jmp
mov
dec
push
stc
into
hlt
or
test
in
sbb
sub
es
movsl
push
subb
pushf
jno
into
jae
sub
mov
cli
xchg
icebp
cmc
sub
out
stos
push
xorps
roll
mov
mov
aaa
fisubrs
pop
arpl
jle
and
sti
cwtl
push
jbe
xorb
mov
lods
popa
scas
jae
aaa
fisubrs
push
mov
ror
adc
sub
xchg
sub
jmp
stos
stc
bound
cmpsl
ret
xor
jl
out
push
inc
mov
out
ljmp
inc
insb
out
push
es
xor
mov
stc
jnp
sub
pop
loop
test
and
rol
mov
lods
in
inc
jmp
jecxz
jnp
popa
scas
push
aas
xchg
scas
adc
sbb
test
out
out
sub
js
jae
adc
or
lods
inc
cmp
xor
lret
and
jmp
sbb
inc
shlb
ret
mov
leave
push
out
orl
cmpb
imul
sbb
push
xchg
int3
pop
pop
add
fs
xor
xchg
pop
cmpl
gs
mov
add
adc
mov
rorb
imul
out
pop
pop
push
stos
scas
fidivs
mov
xlat
lods
incb
xchg
or
arpl
mov
fwait
cmp
push
test
data16
xor
jle
jle
sub
lret
cs
lods
movsl
pop
test
fsubrs
sub
xlat
mov
cltd
pop
jmp
ljmp
insl
adc
add
mov
xchg
add
push
das
mov
outsl
xchg
test
sarl
sbb
test
mov
scas
outsl
mov
mov
adc
ljmp
cmpsb
es
test
jae
test
mov
xchg
mov
sub
mov
int3
test
sti
push
lret
jge
aaa
pop
sbb
cwtl
mov
cmp
mov
fiadds
pushf
jo
mov
sub
lea
mov
ljmp
adc
cmp
loop
mov
push
mov
test
dec
and
mov
jg
xor
fwait
pop
ss
sub
das
push
sahf
pop
hlt
push
xchg
clc
sub
mov
iret
repnz
fidivrs
adc
mov
push
shrl
popf
mov
xor
jne
inc
pop
int3
subl
cmp
ror
scas
mov
inc
dec
cmp
inc
loopne
mov
inc
jo
xchg
test
push
mov
xchg
aad
xchg
and
and
cmp
adc
inc
xchg
mov
add
or
push
cmpsl
adc
dec
jmp
filds
add
xchg
cmc
hlt
test
hlt
push
sub
push
shl
sub
and
xchg
cmp
push
daa
mov
sti
test
add
out
repnz
icebp
sub
sub
sbb
lock
sbb
jg
repnz
pushf
inc
into
cli
pop
lods
into
add
lea
add
fistl
xor
popf
in
out
nop
and
or
and
sbb
xchg
shll
inc
lea
ret
xchg
lahf
jmp
lods
inc
sub
xor
inc
adc
call
fyl2x
xchg
dec
sub
je
push
fsub
jmp
sub
mov
mov
loopne
in
shlb
push
jge
sbb
mov
mov
jge
loope
fdivrl
aas
push
mov
xchg
aam
xchg
pusha
leave
mov
arpl
cmp
ret
jns
sbbl
arpl
push
pop
pop
and
out
jp
inc
xchg
imul
cs
out
out
pop
clc
xchg
fsubs
out
xchg
mov
mov
sahf
test
xchg
add
mov
inc
jb
lock
pop
fwait
mov
jl
xchg
ljmp
lret
inc
cmpsl
ret
mov
leave
pop
cld
push
out
push
mov
test
into
adc
jbe
icebp
xor
mov
fadds
bound
lock
adc
icebp
int3
dec
xchg
add
call
shrl
pop
or
xchg
mov
mov
xor
fcompl
cmp
js
aaa
cltd
lea
ret
mov
mov
xor
or
pop
in
mov
pop
sub
out
ja
and
jae
in
mov
stc
fwait
stos
sub
pushf
push
jbe
lret
jae
leave
imul
adc
push
add
fistl
repz
or
shrb
rcll
inc
or
cmp
ljmp
jle
push
or
xlat
adc
inc
mov
mov
js
or
shlb
jg
ss
lods
push
mov
loope
rorl
inc
inc
out
jge
pop
sahf
loopne
or
or
push
or
push
push
push
mov
frstor
dec
mov
inc
popf
mov
xor
xchg
sbb
mov
or
lahf
int
push
sbb
out
icebp
mov
mov
dec
lcall
add
mov
popa
mov
testb
jmp
pop
ds
push
push
and
inc
mov
and
jne
shll
and
cli
xor
bound
xchg
enter
mov
rclb
inc
xchg
or
sbb
loop
pop
sbb
jno
inc
out
pop
inc
cwtl
jmp
push
push
mov
mov
lret
fst
xchg
shrl
sbb
sub
test
lock
inc
dec
cmpsb
xchg
push
pop
movsl
adc
das
cmpsb
xor
daa
insb
negl
or
or
xchg
pop
lods
jmp
loopne
cmpsl
adc
sbb
mov
inc
mov
jp
mov
out
dec
imul
das
push
test
mov
mov
xchg
and
dec
inc
sub
cmp
mov
leave
and
mov
mov
test
insb
mov
dec
push
sub
pop
fucomi
xchg
or
and
push
aas
pop
mov
test
test
jne
aam
loope
push
inc
and
dec
shlb
jo
jo
movsb
push
inc
lea
sub
loope
add
dec
dec
lret
test
inc
sub
sub
and
pop
pop
mov
mov
mov
jb
sbb
hlt
push
rorl
or
imul
jne
in
jecxz
dec
push
mov
xor
cltd
jmp
jns
jns
clc
dec
or
stc
icebp
jo
push
push
pop
jg
out
popf
lods
addl
pusha
aad
pop
and
xchg
adcl
mov
popf
xchg
xchg
mov
data16
push
push
add
mov
pop
adc
or
aam
mov
fwait
jo
in
sbb
jnp
faddl
stc
stc
dec
adcl
mov
and
cmc
dec
mov
stos
movsl
add
in
add
sbb
aad
jge
or
xlat
lock
cmp
mov
gs
enter
xchg
push
xor
mov
xchg
and
movsl
add
addr16
imul
fdivrs
fsubrs
jecxz
scas
scas
imul
fwait
dec
mov
pop
test
add
mov
fsubs
xchg
ja
pushf
push
jbe
fildll
and
or
lds
sub
push
jne
lods
imulb
xchg
xchg
imul
pushf
cmc
hlt
out
jl
fistl
jbe
push
sub
xchg
push
dec
mov
add
rcrb
mov
cmp
fcoml
cmpsb
and
jno
stos
call
adc
gs
movsl
nop
mov
std
cmp
imull
pop
xchg
inc
js
in
push
jno
aas
xor
mov
adc
xchg
fmuls
push
or
jg
mov
mov
fbstp
test
inc
mov
xor
mov
orb
in
sub
jae
xchg
les
lock
mov
or
pop
stc
stos
and
or
or
jmp
cmc
stos
std
inc
push
xchg
loope
popa
les
pop
movsl
pop
jmp
mov
pop
pop
ljmp
pop
fdivr
jmp
xorl
mov
clc
push
sti
adcl
leave
aad
inc
add
add
lret
xor
rcrb
jmp
ret
jp
mov
push
push
cld
mov
stc
xor
enter
push
fwait
mov
test
jno
out
leave
je
mov
outsl
adc
cld
adc
sbb
call
cld
lea
xchg
add
pusha
outsl
dec
push
push
rcrl
jge
jmp
inc
jnp
addb
ss
jmp
jno
shlb
mov
xchg
in
fld
outsl
and
test
and
test
imul
mov
xchg
insl
sbb
push
test
into
mov
movsb
roll
push
mov
jb
inc
adc
xchg
cmp
add
xchg
nop
push
leave
push
rcrb
mulb
fistpl
mov
loope
ror
sbb
stos
mov
out
dec
popa
cmp
xchg
into
sbb
loope,pn
aam
and
dec
fimull
cmpsl
pusha
add
add
xchg
pop
daa
cmp
call
loope
stos
mov
rcrl
pop
fisttpll
and
clc
jbe
xor
ror
sub
std
js
gs
sbbb
daa
inc
mov
push
pop
jp
or
inc
jns
enter
jle
aas
cltd
fdivs
adc
jne,pt
ret
aam
lahf
fisttpl
aam
test
bound
xor
inc
mov
or
pop
ss
mov
dec
mov
inc
lods
mov
out
adc
pop
cmpsl
or
jne
aas
insb
xadd
aas
jno
test
or
mov
enter
enter
aaa
addr16
push
pop
pushf
hlt
fdivrs
and
jmp
xchg
cmpsb
sbb
jl
xchg
xchg
xchg
adc
xchg
mov
adc
cli
fwait
orl
into
test
fst
jp
adc
data16
cmp
jnp
xor
sub
out
mov
adc
jb
lcall
addr16
out
push
xor
adc
jle
push
aaa
cltd
mov
push
pop
push
sbb
or
lret
arpl
mov
push
ss
fcmovnbe
mov
dec
xor
mov
jne
jb
test
mov
ret
movsb
cmpsl
lock
sarb
aad
mov
xchg
mov
mov
add
lahf
inc
pop
popa
jno
jmp
push
mov
sbb
adc
imul
shrl
test
cmp
jae
lcall
and
push
cmpsl
mov
arpl
pop
test
dec
cmp
mov
adc
insb
addr16
shufps
add
sti
push
das
out
or
int
outsb
mov
ja
mov
imul
jnp
lret
inc
mov
sbb
mov
test
sub
cmpsb
rorl
test
dec
stos
mov
dec
sbb
xchg
popf
test
lods
jge
incl
in
leave
test
sbb
pop
pop
inc
dec
inc
dec
mov
daa
std
es
dec
fistl
xchg
cmp
cmpsb
push
adc
dec
mov
mov
push
cwtl
addr16
addr16
pop
push
shll
sar
lds
add
dec
xchg
addr16
lea
or
arpl
prefetch
push
imul
aad
add
dec
mov
cltd
das
jecxz
or
push
out
cmpsb
lret
sbb
mov
cmpl
pushf
repz
sub
cltd
daa
aaa
call
cmc
sarb
mov
push
jle
mov
stos
sbb
fisubs
add
cmp
fidivs
stos
fdivl
cwtl
sti
adc
add
or
sbb
movsb
out
mov
add
int3
es
jp,pt
xchg
fidivl
repz
sub
outsb
and
divl
sbb
and
daa
pop
xchg
loop
shl
fildl
sbb
push
aam
and
cmp
stos
jecxz
jbe
rorl
xor
mov
jl
fcoml
pop
adc
div
push
call
add
fimull
jae
rcr
nop
cwtl
push
shll
insl
inc
mov
push
add
rorb
dec
loopne
pop
push
jg
jg
clc
jmp
and
or
sbb
push
stc
lret
sub
adc
ja
iret
shlb
xor
imul
adc
jns
mov
inc
mov
mov
popa
adc
push
push
mov
xchg
cmp
lods
icebp
or
xchg
dec
push
adc
jge
sbbl
lds
idivl
mov
popf
lret
inc
lds
xchg
inc
and
scas
push
pop
addr16
call
push
mov
mov
mov
adc
sub
rcll
mov
sbb
pop
dec
add
data16
mov
inc
xchg
pushf
pushf
mov
fisttps
ljmp
xchg
jp
out
inc
and
cwtl
mov
pop
aas
in
sub
mov
dec
mov
mov
sbb
ds
jnp
lods
jae
dec
rorl
aas
and
xchg
and
out
fnstenv
ret
xchg
dec
sub
stc
push
test
pushf
inc
mov
add
dec
dec
push
sbb
xchg
adc
cmp
mov
fs
dec
mov
ret
fwait
movsl
mov
cs
cmp
mov
lods
divb
mov
pop
dec
sub
dec
mov
pop
inc
mov
enter
inc
pop
cmp
lcall
sbb
mov
jne
jl
push
fsubr
mov
add
out
push
cmp
lret
mov
outsb
rcll
xchg
xchg
ja
xchg
sbb
xor
mov
add
mov
cld
aad
ficompl
into
xor
test
sar
icebp
add
arpl
mov
les
testb
gs
add
lods
aam
shr
fwait
ror
xor
mov
call
aas
test
gs
jb
imul
mov
fldl
mov
sub
stos
mov
inc
mov
push
scas
aas
push
aaa
pop
ror
fdivs
jb
xchg
cmpsb
out
and
clc
jno
call
adc
out
push
mov
addr16
daa
add
mov
stos
ss
adc
mov
jo
adc
rolb
aam
sbb
or
jmp
cwtl
fildll
xchg
pop
testl
push
inc
lcall
inc
jmp
push
cwtl
daa
out
jnp
rcrb
repz
push
loope
clc
xor
decl
sbb
push
cmp
sub
push
fwait
hlt
sti
out
xchg
mov
sub
iret
data16
xor
pop
fidivrl
cld
mov
jnp
dec
push
stos
add
jne
add
repz
insl
clc
ret
jle
in
js
lret
stos
movsb
mov
mov
in
cmp
les
inc
sub
lods
or
and
ss
or
imul
xor
lahf
mov
sub
mov
mov
xchg
mov
ret
cmp
push
inc
jns
dec
fcmove
jg
mov
mov
mov
xchg
xchg
cmc
pop
je
adc
and
mov
push
js
jmp
inc
add
xchg
push
aas
fmull
inc
iret
add
fidivrl
ret
sbb
bound
cmp
ljmp
xor
call
lods
mov
divl
pop
lret
das
sti
and
daa
and
test
push
stos
imul
or
out
dec
inc
sti
cwtl
subb
cwtl
push
adc
jb
inc
add
and
std
adc
std
idiv
inc
cli
mov
xchg
leave
ror
mov
push
ljmp
push
or
arpl
mov
cmp
dec
out
stos
add
push
push
push
mov
sbb
loop
jp
movsl
mov
adc
dec
cmpsl
stos
pop
test
and
adc
jae
cmp
lds
imulb
jo
mov
addw
or
lcall
or
ds
adc
out
inc
loope
out
stos
adc
sub
dec
jle
xchg
je
add
loope
mov
mov
xchg
xor
xchg
mov
cmpsl
popa
push
jmp
loop
pop
mov
jo
fbstp
in
popf
and
push
sbb
add
rclb
pop
fs
jnp
scas
jbe
lahf
popa
mov
lds
pop
mov
jns
xor
sti
jp
xchg
push
sbb
xchg
or
adc
sub
push
je
scas
enter
shrb
repz
mov
add
or
fsubrl
adc
dec
gs
inc
cmp
test
push
xchg
cwtl
push
stos
sbb
lods
pop
data16
cmp
inc
xlat
mov
jae
mov
push
divb
call
mov
stos
or
adc
gs
mov
ljmp
fwait
or
xchg
fsts
cmp
adc
cmpsb
dec
fcoml
fsubrs
jp
mov
fwait
inc
inc
pop
repz
scas
gs
mov
inc
shl
int
cli
dec
clc
pop
add
jle
loopne
push
or
fstl
insl
and
aas
mov
aad
xchg
movb
mov
mov
ret
pop
push
xor
xlat
and
mov
das
add
bound
pop
pop
add
inc
lcall
movsl
adc
adc
fstl
adc
and
nop
dec
cmp
fstpt
dec
mov
cmp
in
xchg
adc
cmp
icebp
jmp
out
pop
cmp
jnp
cs
test
les
xchg
pop
mov
mov
adc
movsb
push
mov
cmp
or
les
or
mov
std
push
movsl
jp
jge
fistpll
pusha
cltd
pusha
mov
pop
js
or
cmp
mov
cmp
inc
dec
mov
test
sub
xor
cli
and
jle
in
cmc
cmc
push
mov
and
ss
mov
insl
sub
dec
ds
push
mov
xor
add
fs
dec
cltd
jmp
push
aam
data16
pop
lock
sbb
in
mov
rol
pop
call
add
adc
and
out
out
je
mov
or
lods
mov
rorb
push
das
adc
ss
pop
paddsw
scas
pop
xchg
xchg
add
repz
sub
fsts
fs
das
inc
sub
sbb
and
cli
mov
add
sub
mov
jge
push
and
jne
arpl
imul
sti
dec
es
adc
or
and
jle
push
lahf
clc
push
loop
push
cmp
mov
sub
jbe
lret
enter
dec
mov
scas
inc
leave
repz
scas
cmp
or
xchg
mov
fcoml
pushf
jl
rorb
adc
insb
stos
add
dec
cmpsb
jae
cmp
push
sbb
ljmp
fisubrl
pushf
movb
push
jb
jns
lahf
orb
lods
movsl
imul
push
and
imul
out
shlb
push
jnp
pop
mov
ds
or
push
or
push
movsl
fsubrl
push
inc
adc
and
jnp
add
lods
and
push
movsl
movsb
xlat
pop
sub
lock
push
xor
sarl
mov
xorb
enter
mov
cmpsb
dec
fsts
fwait
popf
push
and
mov
adc
push
push
push
bound
cmp
sub
adcb
mov
lds
leave
fnstsw
inc
add
or
sbb
dec
pop
cmp
mov
xlat
dec
dec
in
push
push
in
enter
pop
enter
fcom
pop
fsubs
test
fisubrl
les
jl
mov
test
and
es
jge
mov
mov
pusha
shl
loop
mov
push
cmp
xor
and
lahf
inc
jo
sbb
into
lea
ja
jnp
push
sbb
pop
fdivr
test
xchg
push
aad
lods
push
test
nop
dec
mov
test
mov
jno
es
sbb
push
lea
cmp
shl
mov
cmc
add
and
jg
mov
mov
push
xchg
jnp
cmp
jb
or
cmp
mov
mov
jle
xor
inc
pop
mov
int3
xor
pop
cmp
cmc
jne
and
lahf
enter
inc
sbb
add
add
mov
imul
out
scas
loope
aad
sbb
mov
mov
push
lret
pop
cmp
xor
icebp
dec
adc
push
test
ds
stc
leave
push
xor
ljmp
add
and
je
sbb
dec
sub
gs
fwait
dec
rcrl
pop
push
loop
addr16
xor
lock
xchg
add
cmpsb
jp
pop
xor
aad
jb,pt
jae
cmc
push
sub
popl
popf
arpl
out
jg
add
arpl
mov
stc
out
loop
jno
sbb
leave
mov
fstpt
xor
iret
mov
arpl
sub
xchg
imul
mov
lock
mov
mov
stc
cmp
inc
mov
mov
daa
mov
cltd
sub
pop
xchg
les
in
pop
xor
test
subl
je
dec
loop
nop
lds
pop
mov
and
push
icebp
sbb
mov
pusha
int3
inc
sub
nop
xchg
cs
cmp
cli
inc
pop
stos
std
orb
inc
aaa
mov
or
pop
enter
andb
mov
aas
insl
xor
cmp
mov
sti
loope
cmp
cltd
popa
out
mov
aad
xor
mov
ror
adc
sahf
in
je
mov
mov
das
outsl
cmc
jmp
out
and
jecxz
mov
aaa
mov
int3
dec
pop
sahf
sbb
insb
fbld
pushf
fsubr
call
sub
sub
test
mov
xchg
sub
push
jecxz
inc
repnz
or
enter
mov
inc
lods
jno
test
mul
ja
jl
ja
cmp
aad
stc
xchg
dec
pop
pop
jb
fsubr
lahf
popa
pop
sbb
imul
mov
daa
loop
sbb
or
push
ret
and
insb
lods
or
scas
cwtl
bnd
test
rcrl
and
lea
lods
sbb
mov
jmp
jbe
pop
pusha
mov
fnstsw
stc
jge
pop
sub
insb
out
aaa
inc
popa
pop
add
or
add
arpl
xor
fnstcw
into
insl
push
fnop
sbb
dec
repz
inc
xchg
icebp
xchg
adc
fistps
cmp
arpl
push
stos
outsl
mov
pop
daa
jbe
lahf
dec
sub
and
hlt
stos
enter
rolb
pop
lea
inc
cltd
push
and
and
pop
or
inc
push
sub
jmp
sahf
rcr
test
push
fsub
xchg
pop
out
mov
movsb
cmc
xchg
cmp
pop
sahf
mov
jne
mov
push
lret
push
xor
lret
mov
adc
pop
dec
add
jno
pop
push
popf
adc
lcall
mov
mov
dec
fwait
mov
test
loope
or
pop
pop
movsl
dec
jnp
loop
xchg
jmp
ljmp
push
cmpsl
es
ja
jmp
mov
leave
stos
xchg
mov
lock
out
jbe
sbb
lds
xor
scas
add
adc
xchg
imul
or
adc
in
fisubrl
and
js
pushf
or
fisubl
daa
les
sbb
lret
imul
clc
and
std
mov
add
imul
mov
xor
rorb
enter
fcomp
popf
xor
in
mov
inc
and
cli
xchg
dec
repz
xchg
mov
mov
cmp
pusha
and
inc
sbbb
sbb
aaa
cmp
and
and
jo
ljmp
inc
bound
lods
cmp
push
cwtl
push
loope
sub
or
or
aas
dec
mov
inc
sahf
mov
cld
push
insb
push
jle
arpl
std
mov
mov
cmc
jne
and
push
aad
jle
mov
mov
inc
mov
addr16
stos
dec
mov
push
imul
stos
cmpsl
gs
in
jnp
in
loopne
push
daa
sub
loop
fcoms
mov
int3
adc
or
rorb
je
lods
push
jge
mov
xchg
ljmp
sbb
jmp
sub
mov
pop
and
mov
or
or
sbb
pop
xlat
and
in
xchg
test
mov
inc
mov
dec
scas
jle
and
addl
xor
sbb
lods
mov
dec
xchg
addr16
pop
daa
insb
mov
in
jns
iret
test
mov
add
fwait
test
test
es
pop
enter
push
sbb
and
fsubrl
add
push
jecxz
and
scas
push
mov
or
test
test
pop
xchg
gs
mov
js
fdivr
mov
mov
mov
and
cld
clc
pop
imul
leave
rorl
ret
mov
ljmp
jbe
and
scas
lds
xor
pop
out
out
imul
jg
in
shl
repnz
jmp
aad
push
in
aas
xchg
stos
int
xchg
sbb
xor
outsb
or
dec
inc
xor
sbb
test
pop
jmp
xor
scas
out
es
aaa
add
out
stc
push
repz
jmp
mov
pop
mov
push
pop
add
popf
cld
fnsave
pop
sub
jecxz
loopne
mov
and
cld
mov
cltd
pop
and
dec
fildll
add
imul
lods
pop
push
out
mov
cwtl
sbb
aam
adc
pop
xlat
sarl
cmp
push
xchg
idivl
and
or
jo
outsl
outsb
stos
or
jmp
add
push
xchg
test
movsl
add
dec
fldcw
aas
scas
mov
insb
fisubrs
sahf
or
mov
cwtl
call
iret
leave
das
pop
stc
jmp
arpl
jle
imul
mov
icebp
cmpsb
int3
push
scas
jbe
lods
sbb
dec
cmpsl
in
mov
lods
cmpsl
mov
arpl
dec
pop
xchg
test
push
mov
sbb
pop
pop
sbb
es
mov
cmp
rcrl
mov
jno
inc
ret
je
mov
ret
cmp
sub
into
add
sbb
and
push
in
movsl
lods
mov
add
fbld
int3
pop
cli
les
sbb
or
fwait
test
enter
xchg
pop
add
fmul
mov
mov
fldt
cmp
loopne
cld
imul
out
push
std
mov
fisubl
add
out
sub
jge
sbb
mov
aas
add
mov
out
mov
mov
prefetch
or
dec
fwait
out
repnz
xor
pop
data16
test
mov
xchg
dec
xchg
movsl
or
stc
mov
lods
aas
je
mov
cmpsb
or
jecxz
scas
xorb
pop
pop
ds
jns
repz
sbbl
xchg
outsl
push
push
das
jnp
mov
adc
jae
sbb
es
sub
or
dec
int
test
jns
dec
xor
or
dec
gs
or
fucomip
xor
fcomi
pusha
aam
cwtl
xor
sbb
scas
xchg
xchg
imul
icebp
outsb
mov
cmp
inc
and
subl
std
mov
je
add
outsl
push
pop
or
popf
inc
xor
repz
fsts
leave
adc
out
sbb
jle
or
mov
pop
cmp
fwait
stc
adc
mov
and
xchg
inc
jnp
sub
mov
jae
iret
pop
repnz
or
pop
or
ret
jmp
arpl
adc
push
and
fs
push
lock
sub
sbb
pop
nop
sbb
adc
dec
in
cmp
adc
pop
jmp
mov
jle
mov
push
ror
in
mov
daa
mov
stos
out
push
mov
and
test
push
fs
and
dec
inc
fimuls
jmp
ret
sbb
in
data16
mov
xchg
pop
pop
inc
jns
inc
cmp
cmp
push
pop
mov
lcall
mov
int3
imul
xor
adc
adc
scas
test
push
xchg
bound
lds
imul
mov
add
pop
ljmp
ret
popf
fldt
pop
in
xlat
cld
push
lret
movsl
pop
mov
mov
test
call
cld
xchg
xchg
dec
fwait
sbb
fistpll
mov
imul
fstpl
inc
cmp
lods
cld
adc
xchg
rolb
sub
leave
xchg
loope
fnstsw
imul
xchg
inc
roll
pop
jno
and
ljmp
lods
nop
xor
outsl
outsl
xchg
das
sub
xchg
adc
in
add
stos
mov
mov
cmp
mov
std
inc
add
ds
push
leave
or
das
je
mov
pop
fwait
mov
test
push
loope
cmp
jle
scas
xchg
cmp
adc
or
and
mov
dec
xchg
mov
cmp
dec
mov
or
push
test
das
adc
popa
jg
addr16
jge
movsl
sbb
xor
fdiv
mov
imul
rcll
mov
xchg
lret
mov
sub
inc
adc
aaa
nop
shl
cli
sub
cmp
pop
inc
push
pop
adc
push
pop
aas
jno
jp
ds
jo
sub
mov
push
jns
cld
mov
add
fld
or
pop
sub
sarb
xchg
cwtl
mov
or
stc
in
ljmp
data16
and
pop
mov
daa
xchg
shlb
in
and
ret
sbbb
sub
push
rcl
ds
pop
pop
leave
hlt
sarb
inc
or
stos
jnp
into
xlat
ret
cmc
mov
mov
fwait
and
mov
gs
lock
lret
lahf
ljmp
xor
mov
inc
push
xchg
add
outsb
jmp
dec
test
cwtl
out
notb
imul
aad
in
dec
repz
mov
cmpsl
fildl
ret
mov
mov
popf
adc
inc
addr16
inc
sahf
out
ds
mov
pop
inc
jmp
sub
pop
pop
cmp
mov
ds
rclb
adc
mov
test
adc
sbb
lahf
xchg
mov
pop
pop
cmp
movsb
lcall
daa
fmul
dec
mov
add
sbb
mov
jmp
maxps
push
iret
adc
bound
jle
or
jns
lock
jle
iret
add
mov
jge
lret
loopne
repz
add
mov
aad
pop
daa
icebp
push
repz
ds
fdivs
xor
in
sub
lahf
xchg
xchg
clc
cmovle
xlat
movsl
outsl
inc
xchg
push
push
shl
jno
and
mov
popa
leave
jno
cld
test
cmc
and
sbb
jns
out
add
sbb
pminub
add
fwait
push
in
sub
mov
mov
inc
into
sub
daa
mov
adc
mov
or
sbb
lods
es
imul
sbb
lea
jb
in
lret
sbb
aad
or
adc
mov
daa
into
jmp
dec
leave
das
iret
sahf
outsb
xor
outsb
fnsave
mov
nop
insb
adc
mov
sbb
add
inc
xor
push
inc
call
jno
pop
ret
out
push
mov
stos
dec
cmp
xchg
mov
arpl
mov
add
pop
in
xchg
cmpsl
and
and
jno
rclb
fmuls
enter
test
hlt
orb
movsl
daa
xchg
rcll
cmpb
xchg
cmp
sub
rol
add
add
sub
xchg
clc
imul
icebp
lods
or
xor
mov
dec
loop
repz
call
dec
mov
push
add
lahf
jmp
xchg
xchg
lret
add
xor
in
jne
mov
adc
idiv
leave
aaa
stc
daa
add
sub
mov
shlb
hlt
addr16
or
inc
fsts
popf
lds
mov
outsl
add
push
push
inc
fldcw
inc
xorl
sbb
fisubl
loopne
lock
and
adc
sbbb
mov
and
popf
xor
or
fistpll
push
call
icebp
push
xor
jo
shrb
sbb
mov
cltd
stos
and
outsl
xchg
xchg
in
or
or
pop
jns
movsl
xchg
fwait
dec
xor
sbb
cmp
sub
les
in
data16
inc
pop
xor
dec
and
dec
mov
pop
xorb
int
std
jl
adc
aaa
mov
xchg
bound
adc
daa
jne
mov
pop
mov
out
fstpt
adc
pushf
inc
pop
cs
jo
fisttpll
and
xor
pop
cs
mov
aas
push
out
dec
inc
les
fwait
test
jno
fmuls
flds
cmp
xor
jae
inc
leave
inc
push
scas
rolb
mov
pop
jnp
shr
incl
insl
mov
cmc
out
int3
and
hlt
cmp
push
addb
mov
xchg
adc
aad
mov
mov
sbb
dec
mov
das
xor
cld
cld
in
data16
mov
and
rol
neg
sbb
mov
movsb
cmpsl
dec
testl
push
bound
arpl
popa
mov
sar
xchg
mov
push
inc
pop
fldcw
stc
clc
dec
mov
test
nop
sar
xchg
data16
pop
test
rolb
jae
cmpsb
arpl
mov
in
cmc
push
sbb
in
or
or
mov
and
ljmp
cmpsb
scas
test
jne
sbb
cmpsb
push
std
in
popa
xlat
add
pop
cmpsl
push
int
outsl
push
adc
stc
inc
mov
leave
adc
pop
setp
mov
rcll
and
and
pusha
pushf
pop
dec
push
shr
js
in
cmp
mov
stc
ds
cmp
outsb
and
addl
adc
push
sub
inc
cs
sub
mov
ljmp
pop
jecxz
or
jge
lret
xchg
dec
pushf
pop
and
fs
iret
push
xor
cmp
loop
push
mov
mov
cmc
das
xchg
mov
xor
inc
loopne
push
or
mov
inc
add
add
flds
pop
stc
fisubl
stos
add
sub
or
dec
pop
and
sbb
mov
dec
pop
imul
popf
add
push
jecxz
sub
mov
xchg
mov
dec
fs
mov
push
push
mov
lods
inc
xlat
dec
neg
jo
les
cmpsb
xor
mov
mov
call
xchg
into
in
sbb
inc
vfmaddsub213pd
aam
adc
stc
push
movsl
or
push
testl
push
fwait
sti
pusha
and
adc
mov
decl
mov
lret
lret
aaa
mov
int
push
push
int3
iret
std
rcrl
stos
cmp
adc
cmp
lods
xchg
mov
mov
cmp
mov
and
mov
fcomip
in
loopne
xor
addr16
jns
bound
addr16
scas
clc
mov
dec
leave
cmpsl
add
dec
rcll
jmp
push
xchg
iret
ret
fsubs
dec
xchg
test
into
xor
sbb
pop
xchg
jno
dec
das
dec
cmp
jmp
sti
fdivs
or
int3
ds
mov
mov
mov
lods
sub
sahf
mov
imul
mov
in
sbb
jle
rcll
jne
adcl
cmp
js
inc
aas
dec
arpl
pop
movsl
push
lods
fxch
in
adc
jo
outsb
xor
xchg
push
sub
lahf
adc
jb
fists
insb
xchg
push
in
jne
xor
repz
and
sahf
jge
js
ljmp
mov
mov
dec
shlb
call
test
and
cwtl
adcl
cmp
decl
inc
jno
les
addr16
dec
cmp
insb
aad
xchg
fcoms
stos
xor
ja
adc
pop
repz
adc
shrb
movsl
pop
sbb
shr
pop
xchg
mov
hlt
lret
jo
inc
out
dec
push
and
cmpb
cld
leave
rcll
mov
je
outsl
push
xchg
add
das
gs
jns
cltd
dec
mov
jp
jg
neg
iret
mov
jmp
push
pop
negl
jns
pop
mov
into
pop
das
bound
adc
pop
out
xchg
in
nop
std
fs
xchg
or
jg
push
push
dec
push
xchg
stos
enter
lods
mov
pop
pop
fmuls
pop
in
cmp
jne
push
or
xor
jp
inc
fwait
dec
cmp
mov
arpl
xor
ret
popf
and
test
jno
push
adc
pop
xchg
jns
jb
jg
mov
roll
cmp
cmp
mov
ret
data16
das
out
movsb
push
pushf
xor
and
filds
mov
shrb
out
fisubrs
inc
pop
lock
mov
ljmp
add
cmp
inc
sbb
neg
pop
stos
pop
mov
ds
inc
sahf
imul
pop
test
dec
repnz
jns
mov
jnp
cwtl
fdivl
repz
jecxz,pn
lds
mov
xchg
push
push
mov
data16
lret
ret
popl
ja
hlt
cmpsb
jo
jae
leave
xchg
jmp
push
sbb
mov
sub
pop
jle
jns
add
cmp
inc
jno
lahf
push
dec
repnz
push
loop
fs
sub
test
fwait
loope
in
fs
sahf
sbb
jmp
dec
setbe
cwtl
loopne
stos
inc
fildl
inc
fmul
mov
inc
cltd
inc
andb
cwtl
ret
subl
notb
js
pushf
cmpb
std
add
sbb
dec
sbb
add
js
adc
add
loopne
xchg
jle
pop
outsb
xchg
lea
mov
xor
ja
dec
in
pop
pop
dec
sbb
rorl
add
sub
mov
adc
shrb
cltd
loop
dec
adc
sar
outsb
cmp
enter
enter
sub
and
cmpsb
loope
lods
or
cmp
pop
stos
and
mov
mov
lock
jmp
fmuls
jae
insb
add
and
adc
daa
movsl
mov
mov
pushf
int3
pop
jp
inc
lahf
mov
sbb
and
adc
fisttps
jg
pop
or
jns
add
outsl
shrl
adc
xor
xor
pop
cmp
stos
push
jae
cwtl
pop
jle
fisubs
or
jno
aaa
ret
sbb
push
roll
mov
xchg
mov
dec
xor
shll
scas
mov
ljmp
adc
jmp
mov
push
mov
mov
fimuls
daa
mov
xor
mov
xchg
jbe
jge
sahf
sbb
loope
popa
cmp
jno
push
adc
mov
ss
jg
or
ja
leave
and
adc
mov
outsb
test
push
add
jge
nop
jmp
in
movsb
ds
sub
hlt
pop
call
push
ljmp
cmpsl
rcl
and
subb
pop
pop
cmp
ljmp
test
gs
lret
bnd
xor
lea
mov
mov
and
cs
pop
xchg
mov
sti
pop
adc
mov
pop
sbb
lock
sarb
stc
dec
add
aad
aad
adc
push
xchg
movsb
pop
cwtl
mov
or
jno
xchg
clc
or
cmp
cld
bound
push
addr16
es
sub
xchg
movsb
dec
push
popa
loop
cvtdq2ps
add
mov
pop
push
ss
nop
mov
pop
test
inc
out
xor
sub
lods
dec
push
mov
filds
adc
jno
ja
lea
sbb
sbb
xchg
adc
repnz
xchg
lods
cltd
mov
lds
repz
aad
setbe
pop
lods
cmp
repnz
test
fisubrl
pop
test
cmp
insl
dec
cld
addr16
or
or
sbb
jge
ljmp
dec
jns
mov
inc
in
mov
rcrl
or
in
push
or
pop
lock
call
cmp
pop
jno,pn
or
cwtl
xorl
cmp
xor
push
xchg
mov
xor
pop
and
and
mov
leave
jo
js
pop
fistl
push
mov
push
pusha
mov
test
dec
aad
js
push
add
jmp
mov
je
cmp
fisttpl
jge
jae
shl
jp
lret
outsb
pushf
cmp
cltd
incl
mov
lock
mov
cmp
rcrl
test
negb
movsl
xor
or
repnz
pop
cmp
pop
and
dec
dec
test
loope
pop
sbb
jecxz
mov
pop
in
test
cmp
hlt
repnz
loop
outsb
pusha
andb
dec
sbb
pop
mov
push
rcrl
mov
mov
addr16
push
push
mov
icebp
call
push
sbb
mov
ja
sbb
test
insb
add
xor
xchg
fidivl
fs
bnd
div
std
add
cld
jne,pn
ret
lods
mov
hlt
jae
filds
mov
mov
icebp
sbb
or
xor
xchg
pop
fistpl
sub
jg
rol
or
and
adc
xchg
mov
xor
mov
sub
fldcw
and
push
lcall
dec
mov
lock
lock
jb
in
lods
xor
fstps
sub
gs
jecxz
insl
sahf
pop
mov
jb
xchg
aas
sbb
jp
inc
into
xor
fwait
sub
inc
mov
mov
push
loop
jo
loopne
inc
out
fs
pop
mov
or
scas
inc
test
sub
or
in
out
inc
les
jnp
and
sub
push
mov
jns
jg
test
pop
xor
insl
sub
xchg
loopne
push
stos
and
repz
ja
icebp
inc
sub
cmp
dec
ds
dec
xchg
add
pop
jge
adc
push
fsubs
xchg
pusha
inc
jne
xchg
idivb
dec
idivl
cmc
jle
js
lds
xor
sbb
rol
dec
xor
cmp
notb
aad
push
mov
jecxz
add
adc
stos
mov
sahf
cwtl
dec
rclb
mov
mov
mov
data16
mov
stos
fcomps
iret
sbb
out
dec
jl
test
jae
das
insb
fstps
test
fcmovu
movsb
andnps
jo,pn
subb
int3
xor
repz
loope
mov
sbb
popf
cwtl
js
mov
ficoms
cmp
in
cmc
pop
sub
fcmovnbe
xor
clc
jecxz
mov
bnd
push
dec
xchg
dec
xchg
mov
test
sbb
xchg
ss
pop
sbb
test
pusha
aas
mov
add
push
jle
pushf
outsl
std
adc
data16
dec
dec
and
pop
push
lret
mov
add
lods
cmp
test
stos
mov
adc
clc
add
fdivrs
ja
cld
xor
cltd
jnp
pop
and
push
inc
pop
repnz
dec
ret
and
jle
clc
lods
push
into
test
xchg
add
roll
push
lahf
outsl
mov
dec
mov
lea
cltd
adc
lcall
shlb
loopne
pop
mov
or
outsl
dec
push
lcall
cmp
xchg
cmpsl
pop
inc
mov
out
jge
dec
cmp
aad
enter
push
dec
out
std
inc
sahf
dec
mov
xor
arpl
cwtl
rolb
mov
loopne
ret
sub
xchg
popf
or
mov
lret
loopne
sub
pop
leave
test
in
cmpb
push
push
xchg
or
xor
jb
lret
les
push
or
hlt
pusha
pop
movsb
cmc
rcrb
and
adc
mov
shlb
mov
mov
cmpsl
sub
sbb
push
push
push
pop
sbb
add
and
sbb
sahf
bound
cmpsl
mov
pop
dec
xchg
push
fcoms
in
dec
lret
mov
test
cmp
and
fmulp
push
lods
cwtl
xchg
cmpb
and
fwait
leave
cmp
sub
mov
push
mov
jno
sub
test
fwait
popf
arpl
in
lods
fwait
mov
sub
fwait
mov
push
cmp
push
fwait
popf
cmpsb
mov
punpckhbw
push
mov
jl
jns
shrb
pop
std
popf
add
sub
pop
sbb
sub
push
subl
xor
std
xchg
or
sbb
pop
clc
jbe
pop
sub
sti
push
push
sarl
push
jae
stc
test
imul
lods
pushf
outsl
xor
imul
sbb
mov
jnp
inc
mov
scas
lods
and
movsb
and
addl
aas
mov
dec
xchg
sub
scas
dec
out
add
jno
mov
ss
pop
das
fmul
pop
sub
rcl
mov
movsb
subl
pop
inc
push
daa
or
in
mov
icebp
mov
lret
pop
ss
add
jo
dec
xchg
rolb
lcall
scas
hlt
jmp
fdivrl
cmp
mov
je
mov
adc
sti
inc
lcall
xchg
cmc
push
xor
dec
xor
orb
sub
pop
add
sub
lock
mov
cmp
pop
push
cmpsl
es
int3
add
xor
test
push
fnstcw
icebp
mov
fwait
sub
cmp
inc
mov
fcomps
aam
push
or
imul
mov
inc
xchg
sbb
mov
xchg
jo
xchg
fdivl
bound
stc
sbb
push
xchg
popa
push
in
negb
test
add
mov
loop
dec
stos
icebp
xor
xchg
mov
std
es
lea
push
xchg
adc
xchg
insb
dec
cmp
pop
pop
push
arpl
repz
xor
cmp
jge
inc
cmp
inc
cmpsl
das
in
cmp
out
jae
mov
fcmovb
test
inc
rorb
push
inc
divl
add
xor
movsl
pop
popl
fwait
mov
fwait
inc
mov
and
mov
test
and
sti
fcmove
add
hlt
aas
incl
ja
sub
sub
xlat
mov
push
not
loopne
mov
out
mov
or
div
xorl
mov
aad
adc
loopne
movsb
xchg
or
test
out
ss
sub
add
shll
dec
jb
sub
js
xchg
inc
xchg
stos
call
rcrl
in
or
add
cli
test
mov
jnp
repz
test
int
fwait
and
add
adc
mov
push
add
push
inc
or
sarl
add
sti
xor
lods
outsb
pop
aam
adc
pop
arpl
ds
cmc
or
mov
repz
aam
inc
jecxz
cmp
add
lods
inc
and
rorb
aaa
mov
push
mov
popa
mov
fwait
jnp
cmp
xor
and
lea
add
sbb
lods
hlt
jmp
aas
cmp
cltd
inc
aam
cltd
xor
movsb
mov
cltd
or
mov
pop
sbbl
loope
ljmp
jmp
out
mov
aam
dec
xor
jecxz
out
hlt
dec
jno
pushf
and
inc
notl
xchg
hlt
cmpsb
fwait
jl
fcoml
jl
add
sbb
pop
sbb
xor
lahf
mov
adc
xor
into
stos
inc
sub
sbb
dec
test
mov
shl
fs
xchg
outsb
mov
popa
cli
cmp
insl
aad
movsl
push
ja
cli
sub
mov
icebp
push
cmp
scas
popf
dec
cmp
mov
and
fisttpll
mov
pusha
cmpsl
add
sbb
in
adc
jne
fimull
pusha
loopne
int
xor
pop
mov
or
lahf
push
test
or
mov
mov
xchg
std
and
sub
xchg
cmp
test
pop
dec
add
rcrb
jno
xchg
outsl
jno
and
mov
cmp
jnp
sbb
cmpsl
pop
dec
xor
or
pusha
sbb
xchg
inc
mov
outsl
xchg
jo
mov
mov
cmp
repnz
and
sahf
mov
mov
xchg
add
fmull
jo
pop
cmp
sbb
fdivr
mov
shlb
pop
jmp
mov
push
xor
cmpsl
cmovs
cmp
insl
idiv
jle
sbb
sbb
pop
jno
aam
mov
loop
mov
xor
dec
scas
and
jb
mov
cmp
test
movsl
mov
adcl
mulb
cmp
daa
inc
dec
sti
lret
in
in
or
cli
test
mov
pop
add
cmp
xor
xor
sbb
mov
xchg
mov
mov
loopne
mov
fsubs
push
test
push
bound
pop
mov
mov
inc
xchg
loopne
jge
bound
inc
mov
pushl
sub
clc
inc
and
in
xlat
fwait
jo
adcl
push
mov
in
nop
xchg
adc
sub
ljmp
icebp
sub
cmp
mov
ror
mov
fisttps
xchg
xor
mov
and
dec
out
xor
andb
push
icebp
adc
loop
sahf
pop
adc
js
sbb
mov
movl
in
xchg
push
call
aam
xchg
cwtl
xchg
dec
xor
pop
popf
data16
jo
int3
jge
fnstsw
fldt
fcoms
add
jbe
fs
add
cld
psrad
daa
inc
std
add
jno
add
inc
cmp
nop
mov
pop
xchg
fcoms
aaa
push
divps
pop
lret
add
int3
mov
xchg
lcall
pop
aaa
and
mov
call
clc
cmpsl
mov
cmc
hlt
lret
fcomi
mov
mov
xor
jnp
pop
lcall
std
popf
ret
push
stos
int3
ja
int3
inc
jbe
sub
jbe
dec
scas
pop
jne
and
push
std
inc
pop
test
push
jl
mov
stc
rorl
addr16
addr16
into
push
shrb
int
hlt
inc
dec
mov
popa
in
int3
enter
jb
cltd
or
push
cmp
fidivrl
mov
adc
adc
dec
and
jp
and
fimull
into
or
mov
push
mov
loopne
push
sbb
cmp
jnp
call
inc
dec
or
mov
mov
cs
cmp
jmp
jecxz
daa
in
push
nop
dec
jne
fdiv
fwait
sbb
jle
fbstp
cld
fadds
addr16
mov
pop
pop
imul
movsl
xchg
insb
cmp
imul
nop
and
mov
mov
xchg
sub
pop
and
clc
add
test
or
outsl
and
dec
jmp
add
and
stos
out
push
jbe
jmp
mov
mov
push
sub
push
dec
outsb
or
jp
push
jae
or
jle
sbb
bound
scas
loop
dec
sub
pop
int
push
pop
dec
jb
jnp
sub
mov
cmp
repz
lds
fnstsw
mov
loopne
movsl
cs
js
movsl
lcall
push
or
and
mov
fwait
mov
test
lret
call
ljmp
shrb
gs
fldcw
out
aas
test
lcall
lret
test
notb
sbb
sarl
and
jmp
mov
add
push
mov
mov
jb
inc
xor
enter
xlat
lahf
je
jns
sub
pop
adc
in
fiaddl
mov
loop
xchg
pop
das
mov
fmulp
xchg
popf
push
push
or
fisubrl
sbb
pop
aas
daa
test
pop
xchg
push
adc
xor
or
out
inc
mov
pop
jne
arpl
pop
adc
push
inc
pushf
xchg
fstps
into
loopne
xchg
mov
add
repz
sub
mov
xor
dec
and
add
lret
stc
ret
shlb
mov
xor
je
out
lahf
loope
xchg
pop
daa
sbb
push
sbb
xchg
out
pushf
push
lods
pop
mov
mov
sarb
scas
sub
push
sub
xchg
pusha
aas
sub
movl
jle
push
es
push
jle
mov
sub
in
mov
pop
mov
ret
mov
jl
inc
xor
or
xor
stc
inc
cmc
daa
xchg
lock
arpl
fdivrs
das
loope
mov
xchg
mov
adc
jno
addr16
inc
scas
test
sub
les
sub
xor
ret
xchg
mov
xchg
fidivl
add
ss
pop
adc
daa
mov
inc
adc
jnp
aaa
addr16
adc
sub
jae
sar
stc
in
and
pop
dec
pop
enter
ja
lods
lds
push
data16
pop
jbe
mov
jecxz
imul
jg
mov
mov
jp
sub
cmp
filds
arpl
push
xor
inc
mov
cmp
jmp
shll
mov
or
dec
insl
test
enter
dec
adcl
lahf
lcall
js
sahf
insl
xchg
imul
ja
adc
lock
or
sub
sbb
inc
push
cmp
dec
insb
arpl
push
jmp
shrl
mov
sub
shl
and
mov
or
jne
push
xchg
xchg
xchg
int
outsl
and
mov
xor
lret
dec
test
cld
mov
cmpsl
pop
mov
dec
loop
lods
movups
xlat
insb
pop
pop
pop
cmpl
push
lock
sbb
or
bound
or
add
jo
addr16
dec
sub
sbb
jae
or
lods
lods
into
sub
and
cmpsb
fwait
jnp
outsb
dec
mov
add
xchg
mov
lcall
inc
push
repz
lods
or
push
dec
idivb
sbb
xor
sti
js
jmp
jle
xchg
xchg
movsl
popa
sub
xor
push
insb
in
shrl
lock
dec
lods
jo
cld
inc
pop
pop
dec
movsb
mov
daa
and
cmc
rcl
outsb
sbb
lahf
iret
test
in
xorb
outsb
bound
xor
add
outsb
ret
je
and
fwait
js
jge
fwait
addr16
int
sahf
adc
jge
mov
aam
es
pop
push
out
or
sbb
pushf
mov
jbe
inc
xlat
ja
test
add
leave
add
mov
jecxz
fimull
mov
int
push
xchg
mov
dec
test
divb
test
or
scas
insb
imul
mov
add
push
push
jns
stc
cltd
fists
outsb
lret
into
jecxz
sub
pop
pop
pusha
andb
jne
imul
adcb
mov
add
inc
mov
jp
inc
cmpsl
cmpsl
std
outsb
push
add
imull
cmp
or
push
mov
cmp
xor
aad
sbb
cmpsb
bound
loop
push
leave
pop
push
inc
jne
cli
nop
jecxz
loopne
dec
jnp
sbb
push
pop
cmpsl
lods
cmp
dec
fldcw
mov
jae
in
inc
or
pop
xor
sub
mov
cmp
lods
mov
cwtl
dec
xchg
mov
jg
ja
cmpsl
jg
aad
mov
cmp
sti
out
add
sub
xchg
xchg
jne
cmp
arpl
mov
call
notl
xchg
xor
dec
les
test
fisttps
in
sti
sub
cld
fisubs
mov
mov
mov
jecxz
xchg
aad
icebp
mov
insb
mov
stos
dec
cmpsb
and
push
sub
addl
lds
pop
pushf
push
add
adc
scas
or
iret
frstor
fsubrl
adc
push
and
push
fdivrs
lret
and
mov
not
push
les
inc
out
loopne
sub
mov
xchg
push
and
fs
mov
sbb
test
sahf
lcall
pop
jnp
cmp
and
aas
jae
xor
scas
stos
xchg
aas
mov
jns
into
imul
xor
mov
add
jecxz
push
jecxz
rorb
sbbl
into
xchg
loope
xlat
imul
mov
sahf
jl
mov
or
cmpsl
adcl
ss
xchg
inc
xor
cmp
adc
into
dec
sbb
fdivrl
inc
je
mov
jns
scas
enter
push
loop
sub
out
and
popa
scas
int
sbb
mov
sub
pusha
out
or
inc
push
lcall
mov
push
loop
test
inc
sbb
mov
ret
mov
das
mov
and
pop
sti
mov
pop
mov
shl
out
mov
sbb
cmp
lss
pop
jle
js
stc
fiaddl
mov
adcb
or
mov
stc
aad
adc
or
pusha
xor
iret
stc
ja
fildl
push
jl
sti
mov
outsl
or
add
aaa
shr
out
bound
shrb
adc
cmc
stos
jns
cli
push
pop
mov
bound
jmp
add
rcl
mov
fstpt
adc
push
fildl
push
inc
cwtl
sub
pop
mov
xlat
xor
out
mov
xchg
adc
scas
xchg
jbe
gs
pop
nop
xchg
dec
jo
and
sub
sbb
sub
push
insl
je
push
jge
or
jg
mov
jmp
cmp
lea
inc
xchg
gs
xor
cmp
loope
adc
push
f2xm1
xor
inc
out
scas
je
mov
lods
pop
jecxz
and
pop
and
test
cli
mov
or
xchg
cwtl
movsl
popa
mov
or
sbb
fnstcw
sub
addr16
mov
pop
mov
pop
mov
adc
call
test
adc
outsl
aas
jo
xlat
std
orb
fwait
dec
sahf
enter
dec
inc
test
mov
inc
faddp
jp
sbb
js
rorl
clc
mov
push
sahf
and
add
aad
test
jbe
dec
lcall
add
mov
ffreep
jno
rclb
add
push
and
push
lcall
cli
das
aam
adc
sbb
cmp
jp
push
pop
lock
andl
cmp
sahf
lcall
shll
jge
adc
sarl
sub
xor
push
sbb
data16
aaa
cmp
fnstcw
push
xchg
orb
xchg
cvtps2pi
jl
mov
push
cltd
mov
sub
xchg
ret
cmp
lock
mov
cmp
push
int
nop
mov
push
or
mov
xor
or
dec
sti
insb
out
pop
imul
sub
shlb
loop
sbb
scas
cmc
lods
jl
inc
sub
cmp
orb
insb
push
leave
bnd
icebp
adc
xor
push
inc
adc
popf
rclb
int
mov
jle
shr
xor
adc
inc
ret
mov
outsb
mov
pop
xchg
dec
iret
pusha
pop
addr16
fs
inc
cmc
cmp
daa
inc
push
inc
ret
ret
and
push
aaa
dec
mov
mov
xor
push
les
popa
lret
xchg
icebp
xor
pop
leave
pop
mov
cmpsb
arpl
addl
cmp
pop
push
and
int
pop
nop
fnstenv
and
je
adc
add
push
pop
dec
aaa
fstsw
stos
imul
jnp
cmpl
push
mov
jae
sub
leavew
push
jno
add
fidivs
jle
or
js
test
in
jae
inc
inc
movsl
sbb
sbb
cli
addr16
push
mov
lods
sub
cwtl
inc
jns
sarl
sarb
inc
cli
out
cli
pop
mov
jns
sub
in
call
in
pop
and
ucomiss
insl
daa
adc
fildll
dec
daa
ret
xor
test
jle
or
xor
fwait
cld
push
xlat
adc
arpl
mov
jno
add
mov
clc
loopne
lahf
mov
orb
ljmp
xor
sbb
and
test
repnz
inc
in
imulb
sub
int
sahf
pushf
shl
sahf
rcrl
and
repnz
mov
jg
fildll
stos
xor
xchg
pop
mov
add
sub
ja
cmpsb
pushf
xchg
js
aaa
xchg
mov
fldl
dec
push
movsl
and
clc
push
scas
sbb
xor
inc
adc
sub
arpl
lret
push
jne
mov
stc
in
cmpsl
push
pop
add
and
cmp
xchg
jle
fldcw
inc
fwait
push
adc
adc
and
in
aam
sub
lock
jno
mov
xchg
mov
dec
fsts
pop
xor
adc
cltd
cltd
sbb
pop
jbe
dec
cltd
inc
mov
sar
or
cltd
nop
mov
js
xor
pop
test
aam
vcvttss2si
mov
stc
mov
pop
jnp
jp
xchg
mov
push
ror
adc
mov
push
fisubrl
pop
fimuls
mov
lret
mov
inc
and
inc
mov
imul
xor
pop
mov
out
scas
sub
jge
push
adc
aam
adc
pop
lea
or
pop
cmp
and
or
sbb
adc
inc
push
sub
aad
shrl
xchg
leave
pop
popa
mov
stc
cmovge
mov
call
push
bound
aad
in
or
fcomip
lret
out
pop
dec
push
fldt
cmp
rorb
lods
push
loopne
push
dec
jmp
dec
mov
dec
aas
jbe
lret
xor
scas
pop
and
cmp
imul
dec
ss
push
aam
ret
and
adc
add
fs
jge
add
and
jmp
jp
mov
inc
add
aad
fisttpll
pop
scas
and
pop
popa
aad
imul
lret
inc
jae
lahf
int
insb
sub
push
mov
scas
scas
add
xchg
and
push
nop
subl
loop
popa
pop
xlat
sub
mov
xor
ret
cmp
insl
mov
lds
inc
rorl
dec
pushl
cmpsb
enter
rclb
and
xchg
push
shll
mov
insl
sub
add
cmp
bound
imul
fwait
xor
dec
cltd
jl
shl
lock
mov
scas
adc
lods
int
push
cltd
cli
cmp
pushf
into
mov
repz
and
add
in
mov
jecxz
xor
cltd
pop
dec
mov
enter
inc
jp
xchg
iret
inc
sbb
cmpsl
bswap
pop
sub
or
addr16
cmp
adc
push
cmp
lret
fwait
stc
jg
or
in
cmpsl
inc
std
incl
stc
push
ret
mov
jae
aaa
mov
rcrl
data16
leave
sbb
loop
mov
lds
mov
out
outsb
mov
push
or
mov
xor
and
mov
jbe
cltd
pushf
ljmp
repz
dec
or
jno
and
loopne
data16
out
scas
jnp
pop
push
mov
cmp
imul
xchg
pop
inc
shrb
lret
leave
mov
push
lods
pop
lock
jmp
mov
mov
gs
lahf
xor
push
popf
popa
cmc
inc
cmpsb
pop
pusha
pop
rol
xor
lods
aas
inc
jb
into
or
or
cwtl
cmp
and
in
dec
dec
fcomi
mov
ret
sub
mov
xor
xor
mov
cmp
or
adc
jno
push
inc
push
enter
push
inc
and
out
dec
out
cmp
push
dec
mov
gs
mov
push
repnz
hlt
cmc
pusha
lds
clc
jne
lea
movsl
testl
out
pop
cwtl
std
pop
movsl
ss
outsl
mov
cli
iret
insb
popa
pop
pusha
lds
sub
dec
jl
inc
clc
ret
cmpb
or
aas
fsub
mov
rcll
sbb
sbb
nop
shll
mov
mov
call
mov
scas
xchg
xchg
pop
or
xchg
cmp
cmp
mov
iret
push
flds
add
push
loop
gs
dec
stos
and
add
lds
rcrl
mov
imul
insl
add
mov
test
jbe
mov
aas
inc
jo
arpl
pop
out
addb
push
scas
adc
mov
pop
lret
push
aad
mov
mov
sahf
out
movsb
or
mulb
dec
sub
xchg
inc
adc
in
lods
sbb
outsl
jge
add
xor
push
popf
xchg
adc
inc
cmpb
mov
sub
and
or
leave
sbb
mov
mov
leave
fs
xchg
test
jbe
jbe
stos
scas
lret
or
fidivrl
icebp
adc
and
outsb
fwait
push
enter
aam
inc
adc
idiv
mov
sub
pop
add
out
imul
jge
orb
add
and
mov
pop
fwait
xor
fucom
pop
mov
dec
das
sbb
push
daa
into
jmp
xor
dec
push
mov
mov
ja
lahf
ss
xchg
inc
jmp
bound
xchg
add
ret
pop
xchg
jne
or
insb
lret
ret
push
cli
mov
incl
push
out
pushf
mov
sarb
aad
out
je
xor
push
push
or
insl
sbb
shl
stc
add
loop
insb
shrb
nop
fs
sub
stos
je
xchg
enter
sbb
fisttpl
fsubl
dec
addr16
cmpsb
jg
hlt
ja
and
xor
dec
mov
jae
mov
jno
mov
adc
mov
enter
ret
int3
enter
xchg
add
bound
das
sti
popf
push
ficomps
xor
adc
push
cmp
inc
fcmovu
testl
lcall
ss
jl
xlat
push
xchg
addb
test
sbb
mov
mov
pop
mov
sub
pop
cmpsl
js
inc
adc
nop
xchg
pop
sbb
or
leave
xchg
mov
inc
xchg
xor
cmp
pushf
mov
arpl
jne
int3
jb
xchg
scas
pop
jae
lret
dec
mov
mov
cli
sbb
jnp
cmp
nop
bound
mov
leave
jae
shll
mov
in
sbb
std
pop
inc
jmp
sub
mov
repnz
shrb
subb
inc
or
inc
pop
call
lcall
xchg
hlt
into
mov
mov
jg
in
fistpll
clc
jnp
sahf
adc
and
push
adc
adc
call
leave
add
or
adc
inc
out
ret
imul
cmp
xchg
jnp
dec
test
sbb
imul
cli
cwtl
test
fwait
bound
cmpsb
movsb
fldt
cmc
mov
mov
sbb
fisttps
aaa
jmp
or
xchg
mov
aas
leave
hlt
push
arpl
add
test
test
jle
nop
dec
or
xchg
jbe
scas
jb
jbe
cmpl
mov
push
pushf
and
dec
ljmpw
pop
push
mov
xlat
mov
mull
or
inc
mov
out
and
mov
push
repnz
sahf
cwtl
in
push
sub
repnz
in
sbb
sub
cmp
in
dec
adc
iret
addr16
xor
or
fcomps
jecxz
jns
sbbl
bound
mov
adc
sbb
test
call
xchg
adc
jns
mov
fdivrl
mov
cmpsb
fisubrs
outsb
adc
inc
jecxz
lea
and
jnp
xor
push
and
dec
aam
out
sub
ret
jb
aaa
inc
popf
jge
lods
dec
mov
scas
and
xlat
rcrb
dec
cltd
sub
dec
xchg
pop
decb
push
ss
push
lret
dec
vcvttss2si
pusha
into
mov
or
in
sbbl
fld
es
cmp
cwtl
aas
mov
pop
fisttpl
lods
out
aad
mov
jecxz
sti
lods
fdivl
dec
mov
repnz
cmp
lock
stc
lcall
jno
ficompl
scas
dec
imul
add
xchg
and
lret
mov
bnd
jmp
and
jmp
fadds
stos
mov
push
inc
es
mov
sub
divl
loop
stos
cmpsl
out
push
int
cwtd
stos
lret
pop
or
mov
mov
push
dec
insb
and
sbb
xor
jbe
pushf
xchg
test
cmp
xchg
int3
lea
dec
lret
push
adcl
lret
out
imul
mov
lods
mov
cmc
sahf
xchg
aad
jo
mov
pop
shr
mov
pushf
lods
inc
into
lds
scas
leave
test
xor
pop
insl
or
out
int3
jle
jmp
sub
inc
jbe
mov
stc
xor
mov
push
shll
push
xor
lret
loopne
insb
aaa
xchg
mov
js
into
aam
fnstsw
jno
jg
dec
mov
je
aas
mov
pop
outsl
icebp
sbb
test
mov
and
dec
negb
cmpsb
pop
pop
mov
jecxz
shl
out
sub
jo
mov
imul
dec
lods
mov
mov
push
sbb
sbb
fsub
pop
pop
lahf
jnp
int
out
inc
lea
mov
int3
jb
pop
sbb
sub
loop
adc
xor
mov
leave
jns
mov
jmp
es
mov
xchg
ret
jno
loope
dec
clc
xchg
inc
sub
mov
andb
xor
inc
nop
and
aaa
or
pushl
test
js
idivl
insl
mov
sub
fwait
push
int
xchg
sbb
and
mov
test
cmp
das
mov
mov
iret
mov
fnstenv
pop
in
pop
inc
push
fidivs
ja
std
cmp
leave
mov
cmpsl
ds
in
ds
xor
shl
aas
cmp
mov
cld
mov
icebp
cmp
dec
out
sub
push
dec
jns
inc
neg
jle
mull
sahf
pop
dec
loop
gs
pop
mov
fdivs
dec
jl
fsubr
movsl
aaa
dec
mov
mov
xlat
fisttps
mov
mov
std
dec
cld
je
mov
push
mov
lea
mov
or
stos
or
pop
inc
in
and
or
test
or
js
or
gs
jbe
repnz
jl
xchg
pushf
shll
pop
push
es
ret
arpl
ds
push
nop
or
das
sub
adc
mov
into
jmp
push
pop
mov
mov
fadds
mov
test
mov
es
std
mov
sbbl
negb
ret
scas
push
arpl
push
jb
push
and
daa
push
adc
cmpsl
mov
pop
push
in
push
dec
sbb
pop
xchg
data16
fstl
mov
dec
stos
mov
cmp
adc
add
out
mov
les
jl
add
push
jmp
adc
icebp
gs
cmp
inc
sbb
sub
lods
lret
popa
xlat
push
mov
ret
pop
xchg
pusha
mov
lods
popa
mov
movsb
fidivs
push
and
sub
lcall
in
adcl
push
add
fs
push
adc
cmpb
inc
sub
lods
xchg
add
sarb
pop
loop
lahf
loop
mov
inc
jns
inc
adc
les
mov
push
fsubr
stos
add
xlat
dec
iret
arpl
xchg
inc
pop
ds
flds
push
jge
pop
sbb
sub
sahf
lock
roll
sti
xchg
cwtl
xchg
shrl
dec
xor
ja
mov
push
and
lock
movsl
inc
cmp
cmp
into
stos
dec
test
lock
xchg
sbb
cwtl
sbb
mov
insl
or
leave
xchg
cli
adc
aaa
popa
inc
shlb
sbb
notb
push
scas
push
jg
lock
movsl
jnp
inc
test
mov
mov
push
cmc
sbb
inc
mov
les
pop
fsubrl
adc
jae
lods
rcrl
cltd
inc
ret
and
pop
pop
movsl
push
cltd
cmpb
mov
in
dec
push
xor
adc
test
inc
imul
cmp
jns,pn
cli
adc
inc
mov
lods
dec
mov
daa
les
stos
or
cmp
outsb
xor
inc
jae
add
xchg
cld
sbb
sbb
jnp
loopne
stc
je
xor
lods
mov
test
or
ret
jo
das
pop
sub
add
pop
nop
sub
adc
xchg
and
sbb
xchg
mov
dec
sbb
shlb
popa
movsb
adc
jb
add
loope
xor
add
adc
mov
jl
push
fsubrl
push
lret
sub
sarb
ror
outsl
mov
dec
cld
mov
jnp
out
adc
cltd
mov
or
fnstsw
loop
pop
daa
cltd
cli
cli
or
mov
sub
sbb
sbb
dec
das
scas
xor
or
out
mov
mov
daa
or
push
jecxz
mov
jecxz
mov
fidivs
int
pop
jnp
movsb
cmc
cmp
subl
dec
adc
pusha
pop
cmpb
not
ficoml
pop
dec
and
sbb
mov
cmp
sbb
pop
cmpsb
cmp
imul
imul
shll
pusha
push
lods
push
aas
jecxz
fmuls
call
leave
fdivrl
dec
push
or
dec
sbb
cmp
xorb
jle
push
mov
dec
movsb
cmp
or
dec
popf
scas
jl
push
std
dec
xchg
mov
out
daa
clc
adc
sbb
push
dec
sub
inc
leave
push
test
sub
dec
lock
push
and
push
jb
mov
add
cmp
cmp
pop
in
andl
adc
das
mov
adc
pop
pusha
mov
jb
in
dec
enter
shrl
mov
xchg
insl
xchg
sub
mov
cld
push
dec
mov
shr
pop
std
fucomp
imul
mov
xchg
pop
push
jnp
repnz
movsb
enter
mov
sahf
xor
dec
and
out
xchg
pop
loop
pop
lret
xor
jo
scas
sahf
mov
psrlw
cmp
fnstenv
mov
insb
mov
subb
push
add
rol
xchg
dec
sub
punpckldq
push
mov
pop
lret
aam
and
loope
loopne
or
adc
pop
mov
sbb
loop
test
addr16
sbb
jl
dec
call
jmp
jne
adc
xchg
pop
cwtl
jge
jmp
sbb
shufps
gs
cmp
into
mov
pop
int3
iret
cs
fcompl
mov
mov
inc
imul
lcall
and
out
stos
fisttps
mov
pop
mov
stos
mov
pop
xlat
cmp
out
jbe
roll
cld
scas
cld
add
popa
mov
pop
adc
add
jmp
mov
sub
sub
inc
das
jp
ljmp
jo
rclb
sub
in
leave
cmp
fcmovnb
cwtl
mov
push
xchg
sbb
imul
mov
sub
sub
add
mov
jbe
imulb
pusha
sub
mov
int
xor
pop
xor
inc
pop
imul
xchg
pusha
add
jnp
dec
js
in
icebp
or
insb
cs
loopne
mov
add
pop
adc
int3
xchg
das
popf
or
dec
pop
loop
hlt
pop
dec
dec
push
shlb
imul
jecxz
bnd
pop
xchg
dec
in
xor
sbb
push
pop
xchg
lcall
push
out
in
cltd
in
dec
ret
lahf
out
sbb
pop
and
fiaddl
pop
out
inc
insb
jb
movsl
or
aas
jae
push
inc
lahf
bound
push
mov
imul
xchg
and
jge
lretw
js
inc
lret
call
xorl
mov
lods
push
les
rorb
fstl
into
mov
outsb
fdivs
dec
jle
xchg
jne
add
jl
sbb
push
mov
jno
out
int3
cmc
fmull
scas
sub
stos
xchg
adc
cli
js
fldl
jecxz
jl
mov
fcmovnu
mov
lret
xchg
inc
xor
xchg
mov
push
addl
notl
cmp
sarb
xchg
arpl
push
mov
insl
adcl
cmp
dec
jae
scas
sub
push
mov
lods
sahf
fildll
js
cltd
ret
xor
in
mov
add
mov
cltd
push
sahf
stos
xchg
mov
hlt
xchg
loop
test
pop
xor
sub
inc
ss
inc
testl
andb
cmp
stos
add
pop
lret
pop
xor
lret
xor
cmpsl
push
pop
mov
sahf
in
cmp
cmp
pushf
les
cwtl
jnp
mov
pop
fisubrl
sub
fisubrs
cmp
cwtl
and
xchg
pop
bound
sub
add
daa
fisttps
adc
fstl
outsl
push
mov
jmp
cs
leave
push
stos
movsb
pop
cltd
nop
add
and
mov
dec
stos
cmp
es
mov
jns
xchg
mov
stos
pop
insb
aad
sahf
and
inc
jl
mov
cli
test
adc
mov
scas
fs
hlt
pop
mov
jb
or
adc
iret
jo
lods
sbb
fldt
rclb
mov
ljmp
rcr
es
fistpll
sahf
push
jp
jp
cmpsb
sub
lret
cmp
xor
pop
pop
and
test
xchg
push
icebp
pop
sub
inc
rorl
loopne
inc
mov
lock
jae
sub
lcall
imul
jle
lcall
mov
and
mov
ret
pop
fiadds
gs
daa
testl
mov
mov
mov
dec
and
dec
incb
push
push
stos
testl
retw
out
mov
les
fwait
cli
stc
mov
dec
jns
sub
fmulp
and
fwait
push
clc
sahf
insl
xchg
mov
push
mov
mov
popf
xchg
pushl
fwait
mov
sbb
aam
shlb
mov
xor
ja
mov
jecxz
mov
lahf
insl
push
and
cli
sbb
scas
sub
push
orb
imul
popf
ficomps
or
and
inc
sbb
lods
sbb
mov
mov
lock
jbe
add
in
push
add
and
sub
xchg
mov
pop
xor
xchg
jae
dec
adc
or
and
mov
inc
xchg
push
test
pusha
mov
sbb
fsubrl
aad
inc
sbb
push
sbb
int3
imul
push
lcall
js
cltd
push
roll
push
mov
fildl
cmc
mov
pop
pop
sub
jp
push
imulb
inc
cmpsl
stos
mov
rclb
fcoms
and
out
cmp
pop
xor
jbe
sub
add
icebp
mov
nop
jge
dec
ret
insl
and
pop
rcr
xchg
xlat
mov
push
or
jp
jge
adc
mov
es
sub
test
icebp
jno
dec
jns
pushl
das
pop
ss
push
cmp
xlat
or
push
mov
xor
pop
int
repz
test
rorb
clc
add
inc
jp
mov
ja
push
cmp
or
cmpsl
add
inc
notl
sub
add
and
sub
mov
cmpl
popa
mov
dec
mov
lea
adc
mov
dec
lock
iret
scas
mov
outsb
xorb
inc
push
sub
outsl
test
les
xchg
mov
and
ja,pn
mov
pop
mov
mov
divl
outsb
lds
and
xor
pop
xor
mov
mov
pop
in
outsb
pop
rep
xor
call
lret
stos
jecxz
cmp
and
mov
jle
push
mov
lahf
aam
push
pusha
pop
xchg
sbb
or
push
or
adc
or
xor
xchg
adc
call
and
aad
inc
fmuls
add
adc
cmpb
mov
mov
aam
push
lock
ljmp
lcall
clc
xchg
cmp
cmp
mov
fs
stos
mov
fisttpl
clc
stc
mov
test
pop
push
dec
xchg
gs
push
testb
sahf
shl
inc
pop
cmp
jno
mov
imul
jmp
shr
mov
inc
mov
std
nop
pop
push
xlat
call
fsts
cli
sbb
arpl
and
movzbl
loop
into
or
cli
sbb
adc
jmp
xor
aad
xor
mov
inc
mov
and
cmc
cmc
dec
hlt
mov
and
lods
in
out
lret
mov
sub
clc
mov
call
mov
mov
add
shl
push
cmp
xor
imul
icebp
jl
jge
loop
jle
lret
sbb
aam
ljmp
hlt
mov
cmp
mov
sbb
mov
dec
lods
dec
or
mov
add
xor
scas
mov
lds
pop
or
cmp
sti
and
les
xchg
mov
ljmp
sbb
adc
fincstp
cmp
pop
cmp
pop
in
mov
mov
mov
add
cmpsl
dec
shll
mov
add
cld
sub
mov
or
sarl
push
push
fsubp
das
imul
push
mov
inc
test
cli
leave
pop
inc
mov
cli
mov
leave
sub
mov
dec
push
mov
mov
adc
sbb
dec
sub
les
mov
loope
xchg
sub
push
divl
loop
pop
jno
mov
add
test
and
jg
xchg
cltd
push
mov
mov
mov
int3
test
inc
notl
jo
cmp
icebp
mov
jmp
je
out
aam
sub
ret
mov
call
insl
push
dec
fstps
rol
xor
add
sub
mov
cmpb
jnp
lods
cmp
xchg
out
fdivrs
lock
inc
in
or
and
pushf
lret
fisttpl
sbb
js
inc
cwtl
add
in
mov
fdivrs
lret
xor
in
sub
ljmp
push
cmp
mov
shll
or
ja
pop
push
push
hlt
dec
fsubrl
imul
cmpsl
shr
push
cltd
sbb
dec
jo
sahf
out
mov
push
push
test
jae
roll
dec
out
push
adcl
jbe
dec
dec
dec
rep
xor
das
mov
pushf
dec
sub
push
jnp
test
jl
push
cmpsb
repnz
test
dec
sbb
cmp
out
dec
addl
lds
sbb
aas
call
cmc
mov
or
sbb
lock
mov
popa
fdivs
aad
in
into
std
ja
sub
jle
push
mov
movsb
test
sarb
inc
lds
in
cmp
orb
roll
pop
adc
fcmovne
stc
aad
daa
pushf
xor
ljmp
jge
jb
stc
loop
das
add
pop
ret
sbb
mov
loope
push
and
icebp
mov
test
mov
mov
mov
icebp
clc
push
aam
in
negb
rclb
cltd
jb
pushl
inc
dec
mov
int3
add
sub
ss
mov
dec
call
fs
fiaddl
sbb
addb
or
xor
lahf
addl
call
repz
fcomi
push
add
test
gs
mov
xor
or
mov
pushf
ret
shl
xor
jl
add
stos
jnp
and
xor
nop
push
dec
int3
mov
jns
arpl
lcall
pushf
xchg
lret
add
scas
cmp
pop
cmp
and
enter
xchg
mov
lret
add
in
testb
hlt
popf
pop
mov
out
bound
shrl
imul
aad
and
pop
xor
pushf
push
and
cmp
xor
cmc
jne
or
cmp
test
sbb
sar
xlat
cld
popf
adc
push
mov
dec
enter
int
ljmp
pop
push
inc
mov
mov
shrl
mov
aam
divb
mov
ret
insb
cmp
jg
lods
clc
cmp
mov
loopne
adc
dec
subl
sbb
mov
inc
pop
push
test
dec
stos
ret
test
mov
jbe
cld
mov
xchg
outsl
fisttpl
push
sub
adc
cmpsb
into
mov
scas
inc
xchg
test
popa
out
test
pop
shll
adc
loop
cmp
enter
jbe
hlt
aam
add
clc
pop
movsb
ret
std
data16
std
insb
mov
es
push
sub
adc
mov
xchg
enter
loop
into
xchg
test
pop
add
xchg
push
jne
addr16
clc
push
push
xchg
and
cwtl
mov
dec
divb
pushf
push
icebp
lret
pop
outsb
sub
mov
pop
mov
cmp
xchg
imul
push
mov
fstpl
lret
ss
sub
sub
push
jb
ss
cmp
jmp
pop
les
mov
stos
or
cmp
inc
mov
jge
or
pop
stos
out
pop
xchg
ds
ret
or
mov
or
out
lahf
ror
or
and
negb
fs
inc
adc
adc
cmp
mov
fxch
pusha
jnp
mov
adc
out
dec
mov
fnsave
jp
mov
outsb
jmp
jnp,pt
pushf
push
loopne
jp
mov
pushf
xchg
inc
pop
adc
xor
cmpsl
lret
adc
add
inc
addr16
in
int3
and
leave
enter
jbe
xor
scas
jns
fbld
orl
pop
push
sbb
or
popa
mov
mov
shrb
lcall
outsl
xchg
rorb
lahf
repz
movsb
pcmpgtw
and
cmp
add
push
sub
nop
sti
and
mov
xlat
movsb
inc
cmp
push
cmc
sbb
xlat
pushf
push
sbbl
scas
pusha
lahf
mov
add
ret
cmp
jmp
arpl
push
mov
xchg
nop
jle
push
xchg
int
sbb
in
rolw
js
enter
inc
jbe
or
divb
adc
mov
pop
adc
cwtl
fwait
lock
push
nop
fimuls
loop
jo
sbb
ror
mov
cmp
enter
ljmp
push
std
push
cmp
std
inc
fwait
dec
cmc
pop
pop
sti
dec
sbbb
repnz
jne
xlat
adc
mov
fldcw
std
fadd
inc
cmpsl
ss
jbe
cmp
xor
mov
sbb
xchg
add
fucomp
jg
testl
cltd
testb
pop
inc
or
sbb
mov
inc
and
mov
out
push
mov
xchg
mov
shrl
xchg
sub
xchg
ds
addr16
lods
mov
push
sti
lret
mov
scas
loope
mov
and
mov
cmp
rol
pop
jno
and
ficompl
dec
dec
xor
pop
mov
push
push
inc
adc
mov
int3
cmc
outsb
jge
ret
jp
cltd
ds
nop
psubsw
pop
popa
jne
add
lds
jo
sub
mov
iret
inc
es
push
enter
mov
fiaddl
jp
sti
aad
imul
fistpll
lea
in
xor
ljmp
push
ret
popa
insb
lock
je
pop
lret
or
call
push
sub
lret
add
jne
ss
add
adc
push
sbbl
stos
mov
jge
xor
sub
xchg
sub
in
add
mov
pop
and
inc
imul
inc
xor
int
addb
add
dec
addr16
roll
and
lods
mov
insl
cmp
in
fildll
jmp
sahf
cli
jmp
outsl
aad
pusha
lret
jmp
cs
xor
leave
ret
testl
pushf
decl
jbe
ja
or
add
std
xchg
xchg
jecxz
ficomps
lea
inc
adc
pop
xor
push
mov
jge
adc
repz
jb
pusha
mov
sbb
xor
xchg
cmpsl
cmp
out
bound
dec
sti
dec
addl
ja
in
sti
pop
pop
data16
mov
sbb
mov
psubd
add
push
add
je
stos
ljmp
cli
popa
ret
adc
push
and
add
sub
rcl
rcr
sahf
and
inc
aaa
jnp
inc
cltd
pushf
movsl
jbe
loopne
std
and
xor
sarb
mov
mov
and
push
xor
sar
dec
into
cli
adc
adc
mov
pop
push
js
aas
rol
pop
imul
fimuls
or
ffreep
sbb
pusha
stos
push
mov
and
mov
add
aaa
cmp
cmpsb
adc
xchg
push
mov
test
cs
xchg
data16
push
ljmp
mov
jge
iret
fucomi
fmul
mov
fsubr
dec
pop
dec
fisubrl
sbb
push
shll
sub
push
loop
mov
jge
jae
add
xor
scas
lret
js
shrl
cmp
movsb
or
bound
mov
mov
loopne
jle
cld
xor
adcl
stos
imull
movsl
mov
adc
subb
sub
dec
incb
sbb
scas
gs
sbb
rcll
xchg
mov
or
sbb
aad
mov
pusha
or
cmpsb
gs
add
sbb
xchg
cmp
stos
mov
movb
push
notl
push
mov
or
inc
jmp
sti
adc
incl
jno
jge
nop
das
ret
mov
movsb
ret
mov
xor
push
fdivrl
and
das
pop
adc
loopne
test
or
dec
insl
pop
lret
mov
scas
daa
dec
mov
arpl
pop
xor
in
ss
pop
sbb
mov
mov
scas
repnz
inc
addr16
adc
sbb
mov
push
inc
cmp
cmc
mov
inc
push
hlt
enter
andl
push
popa
pop
cmp
nop
fcmovbe
sub
add
mov
jne
xor
data16
push
ljmp
inc
lock
and
cmp
jo
jb
pop
jmp
cli
inc
int3
ficoms
or
daa
in
fcompl
jge
push
sbb
xchg
cld
pop
fildl
mov
enter
arpl
ljmp
sahf
xor
add
imul
loope
cld
add
insb
out
les
out
mov
jne
xor
ret
cmc
je
es
cli
leave
imul
mov
cmp
mov
movsb
fs
inc
or
rcl
lods
cmp
in
or
jle
inc
and
lods
jmp
fildll
jl
scas
repnz
mov
insl
shll
lahf
sahf
mov
lods
xor
xchg
jnp
sbb
inc
mov
dec
sub
rclb
mov
fmul
mov
adc
jg
push
push
cwtl
cmp
xor
push
mov
cmp
push
dec
bound
xchg
push
add
mov
lahf
sbb
es
stc
out
push
xchg
lock
stos
fiadds
in
ja
shll
push
mov
divb
and
ret
pop
inc
fistpll
out
sub
clc
xchg
out
add
jge
or
and
pop
jo
sbb
in
out
sbb
cmp
gs
mov
jl
popa
ljmp
or
dec
stc
in
jecxz
inc
and
sbb
cmp
dec
pop
lods
bound
fnstsw
mov
fsubrl
cmp
sarb
jo
mov
sti
hlt
push
int
addr16
xchg
xchg
daa
xor
xor
icebp
pop
jle
pop
int3
sbb
fdiv
push
fnclex
fdivl
lahf
add
lds
sub
lret
jle
inc
pop
ds
movsb
ljmp
mov
movsl
cmpsb
pop
adc
int
jo
loopne
push
and
loope
and
cltd
ret
in
cmpsl
cmp
xorb
pop
add
mov
das
mul
and
lcall
inc
div
dec
or
push
lret
mov
pop
leave
add
jne
and
dec
cmp
add
ret
mov
cmpl
adc
push
nop
cmp
dec
xlat
imul
lods
or
js
adc
js
and
rcr
pop
jle
test
dec
mov
adc
adc
dec
sbb
lds
mov
popf
addr16
ds
pop
mov
and
add
push
and
lock
data16
imul
adc
daa
push
in
orb
xor
sbb
sub
mov
xor
jp
push
cwtl
lods
pop
out
sbb
cmp
sbb
shr
xor
cli
fiadds
scas
sahf
js
cmp
ficomps
jp
inc
and
and
xor
or
ljmp
enter
push
addr16
or
cld
jecxz
or
inc
ds
bound
mov
nop
inc
ficompl
mov
mov
outsb
lds
jmp
cwtl
mov
cmp
fstpl
loop
sbb
inc
pop
xor
mov
and
push
or
lods
test
aas
das
stos
sbb
xor
xor
or
pusha
stos
sub
loop
ja
sbb
sahf
es
das
and
pop
push
mov
xor
pop
xor
lahf
sbb
mov
cmpsb
call
in
bound
lahf
iret
add
sbb
rorl
arpl
lea
pop
scas
adc
adcb
xor
mov
ds
hlt
cmp
cmp
mov
jnp
push
mov
hlt
xchg
pop
ljmp
or
dec
sub
out
out
dec
cld
mov
cli
insb
imul
dec
repnz
cmp
es
mov
mov
lock
add
sbb
mov
popf
mov
jle
rorb
js
adc
jl
icebp
cmp
jg
enter
cltd
mov
mov
sbb
into
push
mov
cmp
scas
pushf
mov
popf
sbb
adc
lret
mov
test
int3
rcll
jb
push
adc
test
mov
mov
jg
xchg
ret
push
jo
lods
out
ret
cmp
adc
jno
aaa
push
mov
shll
cli
add
jmp
inc
pop
or
scas
sti
popl
cltd
loope
jno
or
sti
mov
xchg
jmp
dec
sub
std
int
testl
add
sahf
jle
sbb
cmp
jnp
inc
imul
je
dec
ret
jne
ja
push
push
push
xor
aad
test
test
mov
or
cmp
mov
fcmovnu
pushf
aas
int3
sub
push
add
mov
aad
jbe
sbb
in
jmp
push
cmp
stos
stc
pop
out
fstl
jmp
jae
leave
adc
repz
dec
inc
clc
or
pop
mov
dec
repz
icebp
cmpsb
sbb
xchg
push
insl
mov
mov
inc
xchg
add
je
nop
inc
scas
outsb
xchg
dec
sub
cmp
jle
sbb
and
mov
addr16
pop
pop
jo
pop
xchg
jne
pop
fidivrs
fmuls
xor
mov
jns
movsb
insl
xchg
mov
mov
cmpsb
push
cmp
jae
mov
xor
lea
jo
sub
loop
and
in
outsl
mov
mov
or
invd
inc
ds
push
test
mov
rcrb
add
push
push
xlat
mov
mov
mov
sub
xor
fwait
loope
fldenv
pop
mov
jge
mov
inc
mov
jmp
sahf
stos
mov
insb
inc
mov
sub
bnd
je
cmp
sub
xchg
mov
inc
push
mull
xlat
xchg
jne
mov
jmp
pop
and
stos
lock
rorb
nop
fdivr
mov
inc
xchg
mov
shlb
inc
cmp
add
lods
sub
jno
stos
cmpsl
in
test
rcll
sub
rcrl
rcl
add
mov
jno
xchg
fmuls
out
mov
cmp
push
lret
push
aam
inc
mov
stos
dec
xor
aam
into
jecxz
cld
pop
mov
push
sarb
jne
popa
mov
es
pop
in
fnstenv
jle
stc
jbe
mov
xchg
lret
idivl
dec
mov
fnstcw
push
xor
jecxz
sub
pop
jl
push
push
jae
rolb
fwait
sbb
jae
inc
dec
and
pop
and
mov
or
stos
fidivrl
push
ret
ja
sbb
arpl
fxam
les
outsl
push
addr16
mov
inc
fisttpll
mov
xchg
into
pop
in
push
push
fstpl
cmpsb
movsl
and
aaa
pop
sub
or
push
mov
addr16
pop
inc
cmpsb
inc
sub
lret
imul
mov
das
sbb
pop
inc
push
push
in
push
push
add
out
lods
pop
nop
jns
int
test
dec
push
mov
add
fildll
leave
out
std
mov
xchg
mov
gs
ret
push
addr16
adc
push
adc
fstl
pop
mov
add
sbb
and
push
daa
xchg
cmpl
data16
inc
or
xor
enter
loopne
lcall
andl
popa
cmpsb
sub
into
or
stc
adc
cmp
inc
adc
test
push
push
fbld
pop
mov
xor
sahf
enter
lods
cmc
cmp
inc
sahf
sahf
cmp
mov
mov
jmp
nop
in
push
inc
cmp
pop
js
fbld
stos
aaa
stos
xlat
mov
jnp
loop
push
hlt
cmp
pop
or
aas
aas
inc
xchg
in
jb
movsl
int3
loop
shll
shll
and
cmp
test
mov
idivl
cmpb
mov
arpl
pop
jno
mov
push
xor
xor
cs
mov
sub
lret
push
sub
xchg
jo
and
fdivs
mov
fisubrl
jns
adc
sub
daa
sbb
imul
aad
es
aas
ljmp
aas
pop
hlt
cwtl
sub
pop
sti
pop
bound
sarb
pop
pop
outsb
jmp
fwait
outsb
sub
inc
insb
sbb
aad
scas
lahf
popa
jo
lds
icebp
dec
imul
sub
add
jb
push
aaa
dec
jl
aad
fistpll
mov
ds
mov
inc
and
pop
push
inc
mov
cmp
or
mov
lds
and
xor
jne
lea
cmp
pop
cli
add
cmp
pop
popf
sbb
shrb
cmp
decb
movsl
push
imul
pop
aad
jl
pop
cmpsb
mov
leave
jecxz
imul
jb
sbb
dec
arpl
arpl
mov
notb
js
lods
push
orb
daa
out
fcoml
dec
xchg
cmpsb
push
cs
shl
int3
repz
push
or
lahf
add
mov
inc
enter
xor
sub
xor
inc
pushf
loope
shrl
in
bound
push
add
ja
out
aam
dec
adc
clc
xchg
pushf
xlat
scas
add
mov
mov
iret
imul
mov
movsl
outsb
es
leave
pop
icebp
int3
es
repz
test
pop
mov
out
cmp
sbb
movaps
xchg
push
pop
popw
mov
cmc
out
addr16
sbb
mov
or
fwait
lods
xchg
push
aam
adc
js
xchg
mov
inc
push
movl
xor
fcompl
outsl
mov
xor
imul
nop
cmp
mov
mov
js
push
dec
xor
lock
mov
sti
ss
loop
mov
add
xchg
inc
jl
lds
xorl
rclb
aas
mov
jle
mov
rcll
nop
sbb
mov
xor
and
rorl
aam
popf
cmp
daa
into
pushf
lahf
in
in
fbld
rolb
lret
dec
add
scas
pop
cmpsb
repz
add
add
clc
shrl
xor
xlat
je
andl
rcl
xlat
ret
mov
mov
xchg
ss
hlt
pusha
clc
pusha
xchg
testb
push
inc
lahf
adc
xchg
mov
sahf
add
jne
sbb
outsb
xor
mov
ret
sbb
pop
jle
inc
xor
stc
and
pop
adc
sub
lcall
pushf
dec
or
movsl
rorl
sbb
xchg
adc
ljmp
jecxz
repnz
jmp
mulb
cmp
icebp
and
out
pop
push
adc
jo
push
das
adc
stos
xchg
aas
movsb
ds
aam
inc
leave
sub
mov
adc
mov
cmc
cs
add
xchg
lret
or
adc
popa
push
daa
jbe
add
repz
ret
xchg
sbb
call
pop
mov
shrb
aad
in
dec
mov
push
ret
push
sbb
loope
jmp
cwtl
adc
std
xchg
mov
enter
pop
popf
movsb
add
xchg
int3
and
and
xlat
faddl
popa
cmp
negl
out
pop
adc
aam
pop
add
inc
xchg
orb
or
loope
xchg
adc
mov
sbbb
mov
inc
shlb
push
mov
testl
repnz
fsubl
mov
xchg
in
add
lock
aad
and
pop
push
pop
cld
shl
dec
cmpsl
add
roll
sub
sbb
cli
stos
aaa
and
sbb
adc
cmovp
lea
push
xorb
fnstsw
xchg
call
push
pop
enter
clc
out
push
out
les
test
scas
test
mov
and
mov
dec
pop
rorl
mov
dec
mov
imul
cmp
dec
jmp
cmc
fs
mov
ljmp
lea
test
mov
inc
ds
pop
cltd
jnp
inc
shll
ret
pop
mov
mov
add
mov
sbb
or
inc
mov
xorb
leave
ljmp
and
fsubs
arpl
vaddpd
xor
xlat
pop
and
xor
lea
lahf
adc
adc
sub
rcrl
push
mov
mov
dec
xor
and
outsl
push
sub
ret
jp
ja
subl
xor
inc
sbb
andb
mov
mov
leave
cmp
sub
pop
and
out
inc
imul
dec
ret
stc
pop
fcomps
dec
fimuls
jb
dec
lea
xor
pop
pop
leave
push
pop
jmp
addr16
or
sbbb
das
push
mov
outsl
adc
mov
in
in
mov
decl
lods
mov
clc
divb
sub
mov
mov
stc
pop
ficomps
jl
arpl
xlat
jo
push
loope
rcr
mov
lcall
inc
gs
jb
cmpsl
inc
push
and
imul
test
sbb
lahf
push
inc
sbb
xchg
loopew
sbb
fmuls
jle
addr16
jns
sub
mov
sbb
inc
movsl
cld
lds
cmp
scas
xchg
xlat
pop
add
xor
mov
cmpsl
pop
pop
pop
sarb
movsl
mov
arpl
into
js
fistpll
lcall
jp
jg
nop
ret
inc
jbe
daa
push
cltd
test
scas
sub
mov
push
sbb
cmp
out
xor
cmc
push
call
push
mov
ljmp
shl
push
pushf
lods
mov
aaa
mov
mov
daa
xchg
mov
mov
insl
loope
sbb
popf
jb
cmp
sbb
sub
or
add
movsb
ja
inc
cmpsb
jg
notb
push
sbb
pop
jns
dec
shl
mov
lret
fistpll
scas
ret
adc
jne
addb
xchg
dec
jne
push
and
or
inc
daa
pop
jecxz
je
jge
cli
out
add
lahf
aas
cmpsb
or
xor
inc
lahf
je
lahf
cmp
adc
sar
aaa
push
or
jne
cmp
int
stc
push
sub
sub
int
outsl
cmp
and
xor
xor
pusha
orl
push
mov
sub
push
xor
lret
sub
dec
mov
ljmp
lcall
fs
jnp
jo
inc
loopne
insl
mov
mov
dec
push
pop
inc
lods
sub
xor
adc
insb
stos
and
loope
inc
hlt
xor
imul
scas
xchg
or
jnp
imul
test
or
lods
jge
inc
jbe
push
repz
scas
push
push
xlat
fidivrl
addr16
or
lods
ss
inc
mov
fstpt
pop
lcall
sbbl
inc
cmpsl
inc
jns
inc
push
pop
mov
aad
sub
cmp
or
iret
dec
push
add
adc
push
aad
and
sbb
aaa
dec
push
jp
dec
pusha
test
cmc
sbb
jnp
or
test
cmc
ret
fidivrs
lcall
sbb
pop
test
pop
nop
out
adc
int3
arpl
add
sub
lret
idivl
mov
mov
mov
or
cltd
mov
or
sbb
adc
mov
cld
push
mov
daa
pop
dec
lods
or
orl
jp
jle
aaa
mov
or
pusha
das
sbb
pushf
fcomps
or
and
rolb
mov
int3
stc
roll
or
ss
cli
lods
xlat
imul
xchg
jne
inc
fcoml
jae
inc
xchg
sbb
popf
out
add
fmuls
outsb
mov
push
shrb
jne
stos
jb
sbbb
lods
mov
dec
add
xchg
data16
cwtl
sub
push
adc
adc
sbb
cmpsl
add
sbb
repz
adc
int
add
mov
dec
lods
test
mov
and
std
jmp
cmp
or
inc
sbb
je
jl
sub
std
adc
dec
dec
inc
xchg
cmp
fistps
das
rcll
lcall
add
sahf
dec
insl
dec
mov
fdivrl
xchg
fcoms
daa
sub
inc
nop
popf
out
ss
push
movsl
fistl
xor
aam
mov
xor
scas
into
ljmp
dec
int3
adc
pop
xor
cwtd
fstpt
cwtl
push
andb
je
loope
xchg
mov
and
jno
jbe
lds
fwait
leave
inc
push
sbb
jbe
int
bound
sbb
mov
ja
add
cmp
inc
dec
rclb
push
fldcw
jne
sti
std
iret
add
shrl
out
adc
lods
in
push
adc
dec
mov
cmp
xchg
jl
dec
ds
jmp
dec
std
xor
pop
or
xor
push
cmp
ds
lea
test
and
sub
leave
pcmpeqd
ret
imul
cmc
mov
mov
and
push
pop
shrb
pop
cmp
jbe
add
push
scas
imul
push
adc
and
add
addb
lea
lahf
cmp
or
popf
jmp
push
mov
ljmp
sahf
add
inc
sbb
addr16
clc
sub
int
fcomps
lret
mov
cmc
lret
push
push
add
scas
cwtl
sahf
xchg
out
icebp
lahf
sub
sar
dec
mov
xor
jge
mov
sbb
fisubrl
leave
mov
fs
loop
in
jae
daa
xchg
push
insb
scas
inc
lahf
mov
fsubs
pop
fsubr
subl
js
daa
fistl
jb
cmp
xchg
lret
hlt
xlat
leave
mov
pop
xchg
insb
xor
xor
mov
cmp
fwait
loopne
cmp
outsl
xchg
mov
fdivrl
data16
inc
sub
dec
pop
push
repnz
jno
test
xorb
sub
mov
mov
inc
mov
outsb
shlb
jl
cmc
or
adc
pop
pop
mov
lds
rclb
pop
push
pop
mov
sbb
aaa
push
xchg
mov
add
insb
out
pop
xchg
mov
outsl
cld
jo
repnz
ja
stos
sbb
repnz
pop
iret
cmp
fsubr
jne
jo
adc
daa
dec
mov
mov
dec
and
cmp
push
jo
push
lahf
mov
adc
adc
les
pop
cmp
or
mov
outsb
out
dec
pushf
dec
cmp
adc
cmp
jl
adc
pop
dec
fistl
rolb
cmpsb
out
test
pop
or
mov
push
xchg
pop
jg
inc
dec
lret
push
mov
mov
shrb
jns
jns
hlt
sbb
lahf
xchg
hlt
jecxz
stc
sahf
lret
sarl
or
xchg
jno
jecxz
pop
jno
xor
out
sti
fidivl
stos
add
lcall
hlt
pop
sbb
dec
sti
mov
int3
ljmp
fidivl
xchg
and
mov
int3
mov
xchg
mov
mulb
push
sub
call
jne
cmpsb
mov
jbe
cmp
add
lcall
sub
xchg
mulb
lahf
sahf
pusha
add
add
push
leave
mov
test
aam
mov
out
rorl
xchg
rorb
jns
aad
test
movsb
inc
mov
stc
loop
pop
jb
dec
jecxz
add
xchg
insl
xlat
inc
xor
scas
stos
mov
les
pusha
out
mov
jl
popf
jbe
dec
fxsave
jge
xchg
sahf
adc
std
jb
ret
push
hlt
and
or
inc
js
lds
cmp
int3
js
jo
or
cmp
xlat
jnp
rcrb
icebp
pop
jno
sub
aas
jbe
inc
lds
xor
jge
aad
sub
dec
scas
pop
rcr
mov
xchg
cltd
mov
loope
lret
dec
pop
pusha
add
mov
sbb
pop
dec
outsl
aam
mov
ljmp
ret
sbbb
aad
or
roll
outsl
cmp
xor
mov
data16
jo
mov
icebp
jb
xor
in
movsb
imul
aaa
cmp
test
mov
imul
int3
xchg
mov
lcall
xchg
sbb
daa
rclb
cli
bound
mov
xchg
cltd
inc
sahf
cltd
jmp
adcl
mov
xor
arpl
cs
fcompl
lret
add
adc
dec
mov
repnz
das
jo
mov
cmp
push
pop
inc
rcr
adcb
sbbl
fcoml
cmc
es
push
in
push
mov
sub
add
adc
inc
sbb
bound
int3
in
fisttpl
cli
pop
cmp
sub
cmp
add
or
or
imul
int
imul
jg
mov
jge
cld
adc
inc
sub
in
test
xor
out
jnp
mov
addb
es
mov
not
or
jecxz
xchg
daa
jmp
ss
pop
negl
cmp
in
daa
daa
xchg
adc
mov
hlt
enter
movsb
lods
mov
mov
repnz
fisubl
push
mov
xor
loop
lds
pop
in
icebp
xchg
pop
imulb
xchg
rcll
data16
jp
cmp
cltd
lret
sub
aas
dec
test
jae
pop
iret
out
lock
mov
cmp
push
xor
pop
imull
test
out
enter
dec
jne
xchg
stos
adc
pusha
sub
sbb
jle
lods
bound
loopne
paddsb
insb
sbb
mov
fwait
cmpl
xchg
lahf
out
fcoms
xlat
fadd
loop
xchg
push
sti
outsl
fwait
xchg
ret
inc
aad
aad
aas
iret
xchg
pop
cli
fiadds
test
push
cmpsl
insb
mov
repz
fsts
fs
ss
insb
or
mov
pop
xchg
dec
test
shrb
push
int3
fsubr
fdivrl
jmp
mov
xchg
lds
mov
mov
lods
or
fiadds
lds
imul
xor
insb
mov
repz
jmp
rclb
xchg
xlat
pop
ret
pop
cmpsl
inc
int3
sbb
pop
jmp
xchg
jecxz
dec
jecxz
add
pop
ret
xor
test
movsl
dec
adc
outsb
push
es
pop
movsb
and
dec
cmp
inc
and
push
lret
xchg
imul
icebp
shrl
in
rorl
inc
out
xlat
psubusw
sbb
std
or
std
jbe
fsubl
lock
out
pop
xchg
xchg
movsl
jb
mov
lahf
mov
aas
xor
cmp
popf
dec
mov
outsb
daa
jne
ret
fbstp
lahf
stos
arpl
lods
mov
and
sub
and
inc
aaa
fdiv
ret
shll
nop
fistl
pop
inc
cmpsb
mov
movsl
idivb
or
scas
andb
leave
and
lret
lods
aas
mov
insb
mov
push
push
jg
dec
cmpl
call
adc
xor
pop
aad
daa
dec
or
ficoml
cld
pop
jmp
inc
clc
xchg
jg
aas
or
int
loopne
ljmp
stos
xlat
mov
stos
add
lret
jecxz
ss
loopne
out
or
test
pop
pop
mov
jae
jae
sub
sti
adc
mul
test
mov
xchg
lcall
jmp
inc
xchg
insb
outsl
jne
inc
mov
nop
or
push
fisttps
scas
jb
cmc
pop
add
mov
xchg
repnz
jbe
sub
pop
scas
push
rcll
jl
sub
pusha
outsb
xchg
in
cmp
xchg
pop
sbb
mov
or
mov
pop
daa
cmp
mov
push
mov
add
aas
data16
dec
push
jg
das
inc
inc
rcrb
push
popa
sahf
in
inc
sbb
push
shll
arpl
inc
push
pusha
pop
sbb
into
mov
lret
aad
mov
jns
mov
pop
xchg
mov
dec
mov
xor
adc
lahf
cmp
movsl
sbbl
scas
cli
inc
dec
ret
dec
insb
mov
cld
stos
lea
test
icebp
sub
ljmp
mov
push
or
push
mov
sub
sub
js
sbb
jge
int
test
fdiv
and
aam
lahf
addl
cmpsl
xchg
arpl
or
maxps
es
aad
mov
call
mov
cmpsb
push
cmp
adc
or
insl
shlb
xlat
mov
jno
cwtl
jb
jl
mov
cld
mov
add
cmp
dec
scas
insl
pop
mov
push
jp
pop
adc
imul
ss
xchg
sbb
cmp
cmp
outsl
ss
or
iret
add
mov
sysret
push
testl
pop
je
push
sub
aad
cmpsb
and
cmp
fwait
xchg
jno
xchg
add
addr16
hlt
mov
or
ss
mov
out
and
sbb
test
int
cmp
xorb
mov
ja
cmp
dec
mov
enter
xor
sub
js
or
dec
movsl
call
and
test
and
or
add
test
in
xchg
rorl
jno
stos
xlat
mov
push
ljmp
adc
aaa
adc
xchg
inc
ds
mov
xchg
jns
jle
mov
inc
test
sub
mov
mov
out
cwtl
fincstp
xor
or
cmc
cmp
mov
nop
cld
out
xchg
cmp
add
fisttpl
or
add
adc
popa
ljmp
xor
adc
pop
push
sti
outsb
add
add
ljmp
test
std
shlb
adc
test
sbb
mov
cmp
xchg
fisubrs
popf
inc
push
test
cmpsb
jae
addr16
jg
das
adc
out
xor
cmp
shll
test
jns
sub
aad
cmpsl
and
data16
cli
sub
xchg
mov
and
pop
mul
fsubs
test
clc
stc
push
xchg
popl
dec
push
aas
mov
inc
aad
ja
pop
pop
je
sub
lret
ja
cmp
inc
xchg
push
push
jg
int3
push
aam
mov
orl
mov
jnp
mov
sbb
dec
mov
or
test
das
ja
cmp
mov
leave
loopne
sbb
lret
or
mov
in
jge
pusha
outsb
and
sbb
pop
jns
rcrb
dec
xor
cmp
xor
push
leave
xor
adc
das
mov
test
fadds
fldl
adc
call
pop
push
in
bound
and
add
pop
or
stos
push
push
push
int3
lcall
adc
xlat
paddusw
rcll
repnz
sbb
xor
sub
add
push
cmp
xor
arpl
mov
outsb
rorb
push
and
mov
stos
aaa
mov
jne
lock
cli
sub
cs
add
lret
mov
cmpsb
int
insl
icebp
outsb
cmpsb
adc
sti
fldt
lea
mov
jo
or
sarl
jnp
sub
mov
jb
nop
test
fdivp
lea
xchg
cmp
push
mulb
inc
add
push
dec
lods
or
fisubrs
mov
add
mov
or
lock
sub
jae
movsb
lods
xor
inc
out
ror
ljmp
inc
or
and
js
jp
mull
add
inc
daa
jmp
xchg
dec
mov
test
pop
xchg
jno
mov
add
mov
adcb
insl
jmp
jbe
cmpsl
nop
fimuls
lock
jbe
add
repnz
pop
mov
jns
inc
test
shll
add
push
ja
mov
insl
jl
insb
xchg
insl
jl
mov
mov
int3
insl
push
xchg
pop
rclb
stc
lods
popa
fcompl
sbb
popa
and
into
add
std
xchg
ja
js
and
xchg
adc
stos
push
jge
sub
mov
lret
mov
mov
pop
fwait
push
aad
aad
inc
mov
aam
adc
and
mov
fs
mov
stos
lcall
mov
roll
ror
jae
icebp
filds
xchg
cmpsb
push
jo
jle
lcall
cwtl
inc
ds
sub
xor
push
sbb
mov
pop
mov
dec
xor
cs
mov
test
pushf
or
pop
call
gs
sbb
popf
pop
add
orb
sub
pop
adc
in
fsubr
sti
aas
and
xchg
int3
nop
mov
mov
push
adc
scas
push
cli
ljmp
incl
sub
movsb
inc
add
subb
xchg
out
ret
mov
push
test
rol
or
subb
adc
andb
rolb
out
lds
scas
mov
jle
adc
inc
jae
sub
cli
je
stos
and
xchg
sbb
pop
dec
jge
inc
mov
adc
fldt
fmul
decb
into
inc
pushf
stc
dec
lret
pop
push
movsl
pop
in
dec
gs
add
popa
cmp
adc
test
jle
push
call
xor
incl
cltd
xor
clc
adc
enter
les
pop
dec
inc
and
jg
ss
call
mov
inc
icebp
or
loopne
cmp
adc
or
les
es
push
adc
push
mov
out
dec
ljmp
push
jge
lret
pop
push
inc
test
or
xchg
scas
add
dec
adc
mov
inc
xchg
push
bound
pop
test
cmp
mov
xor
jg
dec
call
jo
jmp
xor
cmpsl
dec
pusha
iret
daa
mov
xchg
scas
add
nop
mov
adc
ret
pop
stos
loope
sbb
dec
fists
mov
int3
cltd
loopnew
out
xor
call
out
call
loopne
js
loope
mov
mov
scas
aas
aaa
imul
es
insl
mov
pusha
enter
mov
push
ficomps
repnz
int3
push
cwtl
repnz
dec
mov
jmp
insb
mov
mov
bound
stc
cmp
and
push
mov
cmpb
mov
jg
inc
imul
sub
imul
stos
xchg
jle
mov
jmp
data16
lret
mov
hlt
movsb
ret
int
outsl
dec
lock
jns
dec
mov
mov
xchg
popa
and
xor
mov
inc
popf
add
cmpsl
fisubrs
push
xchg
mov
lcall
sbb
mov
sahf
push
cmpl
jl
or
rolb
jecxz
sbb
sub
sbb
mov
es
pop
mov
xor
jge
repz
in
inc
sub
cmp
imul
lods
jo
popf
or
out
sbb
jns
ljmp
fwait
dec
xchg
fisubl
nop
filds
call
pop
je
dec
xchg
shrb
repnz
pop
imul
inc
jp
scas
ja
mov
jno
push
adc
or
fwait
jne
sbb
jne
repz
cmp
mov
inc
and
jae
loopne
enter
xor
arpl
jp
in
add
lds
adc
pop
xor
xor
xorb
call
and
repnz
shlb
inc
jo
xchg
adc
test
mov
mov
pushl
mov
push
arpl
popf
push
mov
imul
pop
jecxz
pop
shll
mov
inc
dec
ss
mov
scas
pop
lret
movsb
nop
cmpsl
stos
xor
ja
cmp
aaa
outsl
fcmove
ret
pop
mov
mov
cmp
pop
add
jno
pop
add
scas
rcrb
push
sub
outsl
lahf
adc
popf
sbb
fmuls
fs
mov
stos
loopne
idiv
pop
sub
sbb
pop
xchg
test
adc
dec
addr16
inc
push
repz
pop
cmpl
or
fs
loopne
dec
sbb
pop
push
jb
xchg
pop
jns
cli
scas
rcrl
dec
cli
sbb
and
jg
jae
and
dec
or
scas
das
mov
fisubrs
add
popl
push
sbb
xor
adc
arpl
arpl
movsb
lret
and
cwtl
adc
enter
add
dec
xchg
dec
add
cmp
repnz
cld
cmpsb
mov
jo
out
imul
aad
sub
ror
in
popa
pop
imul
pusha
adc
dec
lret
pop
out
cmp
sbb
cmp
lock
scas
push
sbbb
jne
mov
aad
rcr
xchg
inc
inc
sub
add
inc
stos
push
and
pop
shl
mov
subl
or
push
subb
jne
ljmp
jo
insb
and
dec
int3
andl
jmp
push
hlt
cmpsl
aas
das
add
mov
and
loope
into
adc
setbe
mov
dec
cmp
or
mov
xchg
fwait
cmp
xlat
addr16
inc
inc
gs
inc
daa
pop
cmp
idivb
add
jmp
stos
shl
mov
ds
enter
dec
lcall
add
enter
push
push
sub
push
and
test
mov
adc
clc
test
lods
daa
add
out
pop
fstl
fldt
xor
stc
mov
mov
mov
je
out
inc
push
inc
jmp
aaa
jecxz
scas
inc
sbb
and
mov
mov
addb
addr16
pop
imul
repz
das
mov
paddusb
cmp
aaa
mov
push
movsb
and
xor
aad
fnstenv
shll
aaa
sbb
scas
sbb
stc
pop
dec
test
repz
repnz
notl
mov
frstor
rolb
sbb
xor
out
test
enter
cmpsb
movsl
push
add
popf
xlat
nop
jg
sbb
add
loopne
sti
adc
inc
mov
int3
ficompl
sahf
vmread
pop
sub
and
cmp
fldcw
pop
out
test
int
test
inc
mov
dec
mov
ret
fwait
out
rolb
test
lods
mov
ss
mov
js
into
jp
mov
dec
xchg
fstpl
dec
or
repz
push
adc
mov
pop
sbb
jecxz
or
movsb
pop
ror
pop
xchg
cmp
jno
xchg
sar
jnp
scas
popa
add
nop
movsb
lds
or
add
pop
loope
popf
push
out
mov
or
cld
sbb
icebp
push
dec
mov
movsl
pop
sbb
or
repnz
xchg
and
sub
cmpxchg
in
jns
xchg
add
ret
std
pop
sarb
and
in
cs
fdivs
lock
pop
sub
push
add
jmp
or
mov
dec
pop
push
sub
sub
imul
dec
insl
push
sbb
arpl
add
push
mov
mov
jp
jae
jge
fdivl
lret
fwait
fwait
loope
cmpsl
lret
mov
out
in
cmp
sbb
popa
xlat
lea
inc
mov
cmp
mov
pop
imul
cmp
hlt
cltd
fcmovb
leavew
jge
test
mov
lock
push
into
jae
add
jne
faddp
int
out
fnop
xor
pop
mov
adcl
and
shl
rolb
scas
push
mov
testb
jb
jnp
cmp
push
cmp
fsub
and
and
aaa
lcall
mov
fildl
pop
jp
arpl
inc
mov
js
xchg
or
xor
mov
out
xor
inc
cmpsl
push
shl
push
sub
mov
enter
movsl
push
lret
sub
sbb
sub
ss
push
and
pop
inc
lret
sbb
imul
inc
pop
cmp
mov
dec
mov
repnz
and
mov
xor
shll
pop
mov
cmp
or
mov
repz
or
jo
cmpsl
aad
dec
sbb
je
sbb
data16
test
or
es
jp
loop
or
inc
pop
mov
sbb
jns
or
lds
insl
mov
adc
xchg
pop
ret
pop
mov
rolb
es
and
pop
vhsubps
push
test
inc
dec
std
movsl
ljmp
cmp
arpl
cmp
add
mov
test
rorb
xchg
xchg
xor
insb
pop
iret
or
xor
fisubrs
adc
dec
and
and
sarl
pop
fcompl
cld
stos
loopne
scas
les
xchg
in
in
aaa
lds
add
adcl
jbe
ja
jge
loopne
insl
and
inc
test
sti
xchg
mov
loopne
int
out
cmpsl
inc
and
rolb
inc
push
rorl
out
xor
dec
dec
sbb
fsubl
stos
out
loope
adc
push
aad
jecxz
test
je
mov
fcmovu
lahf
jne
dec
add
inc
into
sbb
pop
cmpsb
mov
das
sub
mov
addl
jmp
pusha
loop
or
out
scas
sub
mov
mov
push
shlb
and
pushf
xchg
dec
lea
lcall
test
es
rcl
push
xchg
cmp
hlt
iret
cmpl
inc
cltd
lock
mov
aad
insl
mov
pop
xor
pop
gs
push
inc
xchg
adc
xor
xor
cld
mov
sbb
rolb
push
and
in
add
jno
aad
jl
push
inc
out
imul
inc
mov
mov
dec
sarb
subl
sub
sbb
call
and
rclb
mov
aad
or
pushf
movl
xchg
xor
arpl
call
or
jecxz
in
movsl
fistpl
jbe
jo
cmp
sti
adc
mov
mov
and
add
pop
pop
daa
stos
xlat
in
dec
mov
push
les
xor
inc
nop
dec
je
jecxz
dec
fucomi
and
fiaddl
add
repnz
pop
repz
jae
pop
andb
inc
xor
add
ret
stc
imul
push
mov
and
and
and
out
in
pop
pop
push
dec
jb
cwtl
rclb
mov
aaa
outsb
cmp
xchg
bound
mov
pop
mov
or
jns
adc
popf
into
bound
mov
adcb
mov
mov
or
inc
adc
das
dec
jle
mov
jbe
or
test
ljmp
xor
icebp
push
mov
dec
addr16
imul
sub
or
imul
pop
and
and
sbb
aam
adc
mov
push
call
bound
push
test
cwtl
je
xchg
dec
and
lds
std
in
out
aas
cmpsb
adc
sub
dec
fwait
mov
lahf
test
dec
mov
fdivrl
mov
test
in
pop
and
sub
test
jo
ja
xchg
cmpsb
jl
and
cli
adc
out
inc
push
and
xor
jo
jae
sahf
repnz
fildl
xchg
fs
js
sbb
push
loop
int3
add
decb
xor
lcall
pop
int
xor
fisttps
es
in
jb
pusha
or
xchg
iret
insl
bound
jns
jae
fidivl
jg
mov
pop
inc
loop
fwait
cli
jecxz
dec
popf
in
lock
flds
leave
mov
pop
lahf
out
and
rcll
leave
cmp
dec
shrl
mov
fldcw
inc
mov
fs
xor
mov
aad
pop
pop
mov
cmpsl
push
and
stos
xor
mov
mov
aad
cmp
lahf
xchg
jl
xchg
clc
sbb
mov
sbb
lock
int3
lds
mov
adc
lds
cli
addr16
js
or
int
mov
adc
bnd
mov
stos
jmp
push
adc
fwait
inc
stos
into
insl
pop
shlb
mov
test
les
stos
sbb
or
inc
ret
xor
int
sub
bswap
mov
and
add
frstor
popa
sub
int3
inc
dec
fsubs
dec
das
mov
int
hlt
out
lret
mov
xor
adc
out
xchg
xor
pop
ror
dec
jle
orl
jp
ss
lret
jp
mov
loop
sbb
push
shrl
sub
pop
out
sub
mov
cld
mov
mov
movl
inc
push
fiadds
rolb
cmpsl
fldcw
cwtl
lcall
sub
cmc
aaa
inc
xchg
sti
fiaddl
dec
cmpsl
pusha
test
and
shrl
lds
add
adc
les
ret
push
sbb
mov
push
je
sub
call
fldl
push
mov
inc
jl
pop
in
iret
dec
push
mov
insb
cmp
pop
push
pop
imul
mov
pop
in
cli
inc
imul
icebp
cmpsl
scas
movsb
shlb
int
outsb
push
arpl
call
shr
popf
xchg
pop
fcom
add
outsl
xchg
cmp
fsubr
pop
addr16
mov
sarb
imul
lea
hlt
aad
cs
or
and
shlb
mov
insb
lahf
scas
add
dec
lock
jmp
out
inc
cltd
aaa
sub
jl
jle
repz
or
sub
adc
insb
jle
pusha
push
popf
sti
lret
push
hlt
cltd
loope
in
xlat
mov
push
mov
lods
push
or
and
cmp
mov
fnstsw
adc
es
dec
sub
adc
mov
mov
push
stos
mov
shlb
frstor
adc
add
jb
test
sarb
fistpl
xor
dec
mov
dec
jl
imul
ljmp
pop
mov
inc
push
adc
mov
test
jmp
fnsave
lods
cmpsl
adc
add
sbb
je
adcb
cli
test
mov
mov
stos
inc
ficompl
lock
aas
mov
pop
js
push
cltd
shll
sarb
mov
cmp
or
les
iret
inc
mov
or
push
push
dec
iret
mov
arpl
jnp
sahf
push
les
stos
loope
addb
test
idiv
xchg
daa
aad
mov
lock
sub
jns
mov
inc
popf
inc
out
es
xorl
jge
xchg
lret
js
fcmovnb
xor
ret
push
imul
xchg
xor
or
pop
jecxz
mov
stos
loopne
mov
mov
fcoms
inc
cmp
mov
sub
js
pop
mov
mov
dec
jp
or
sub
or
mov
push
mov
adc
clc
aad
cwtl
outsl
dec
inc
scas
mov
mov
fildll
adc
mov
loopne
and
add
test
mov
adc
dec
pop
cmp
das
ret
ret
push
cmp
jbe
sbb
inc
sar
dec
xor
lret
arpl
test
xor
movsb
int3
cmpl
leave
out
add
jp
negl
inc
fsubrs
test
scas
adc
xchg
push
cmp
nop
ljmp
lcall
mov
std
push
cmp
inc
pop
ss
add
xor
dec
or
fistl
xchg
push
and
lock
js
adcl
xor
jb
test
es
push
lret
xchg
xchg
ja
negb
lcall
jae
xchg
jecxz
insb
rorb
mov
jbe
clc
ja
adc
cli
ret
test
clc
pushf
add
xchg
test
call
inc
adc
in
cli
push
inc
fisttps
pusha
arpl
pop
mov
or
call
xor
push
negb
icebp
xor
or
jns
xor
xlat
cld
bound
pop
pop
jge
js
jae
and
mov
scas
test
cmpsl
sub
pop
pop
sbb
loope
rcl
cld
add
fs
std
aam
ljmp
repnz
push
lcall
xchg
outsb
aas
out
bnd
xchg
fdivrs
shl
or
inc
mov
in
ret
or
in
lahf
mov
mov
lds
push
lret
mov
jl
sbb
sbb
pop
dec
mov
or
add
in
nop
mov
js
cld
lret
cmpsl
dec
pop
add
aad
mov
cmp
dec
mov
jge
mov
test
mov
or
push
add
cmp
jne
cld
jno
xchg
cmpsl
push
scas
lcall
mov
mov
imul
add
push
adc
cwtl
es
aam
scas
pop
add
pop
dec
addl
and
nop
imul
ficoms
push
inc
scas
pop
push
cmp
cmpsl
pop
gs
mov
adc
stc
dec
lret
cwtl
jb
xor
bound
pop
aad
add
sbb
cmp
add
pushf
and
cmpsb
fsubrl
jp
push
dec
in
mov
gs
and
jbe
dec
inc
cmp
ds
inc
mov
and
push
push
icebp
rorb
fwait
stc
call
movsb
lds
jne
sti
out
test
popf
push
dec
fiadds
push
fwait
xchg
sub
dec
gs
lock
inc
cmp
loopne
pop
push
adc
xchg
imul
adc
xor
jg
mov
push
outsl
cmp
push
out
lcall
push
push
or
xchg
pop
jno
shr
sub
imul
pop
mov
rcr
imulb
movsb
arpl
adc
mov
add
xchg
dec
xchg
aad
sbb
lea
aad
rcll
imul
mov
dec
jecxz
sub
pop
xchg
daa
mov
inc
dec
jb
fsubr
pop
enter
icebp
rcr
mov
aaa
mov
push
aad
add
rcll
je
or
fstl
pop
loop
add
adc
or
mov
mov
lods
pop
pop
mov
fidivrs
xor
fs
ret
cmp
push
arpl
aas
adc
scas
mov
pop
outsl
imull
mov
out
inc
subb
inc
movsb
sub
or
inc
cwtl
ret
insl
ficompl
xor
rol
fs
sub
in
aas
test
xor
imul
jne
sbb
inc
lret
push
shl
stc
sub
fwait
stos
sbb
fistl
cli
adc
insl
ret
hlt
mov
jmp
and
jmp
fwait
arpl
sub
pop
or
xchg
shlb
test
hlt
jno
mul
sbb
mov
fildll
idivb
cmpsl
pop
or
mov
leave
faddl
out
mov
sub
cli
dec
sub
xchg
ret
paddd
xchg
mov
dec
aas
mov
adc
fidivs
movsb
sbb
jmp
ret
or
mov
lret
in
test
mov
lea
rolb
or
dec
mov
mov
dec
xor
lock
aaa
xlat
mov
ja
pusha
popf
mov
fcomi
out
lea
adc
outsb
clc
lahf
mov
pop
cmpsb
inc
adc
xor
outsl
xchg
call
pop
or
orb
or
mov
lods
inc
in
leave
sbb
mov
daa
sbbb
pop
shl
push
xchg
outsb
cmc
sbb
test
mov
repz
push
ja
push
leave
mov
pop
repnz
xchg
cmpsl
pop
je
cmp
mov
scas
in
pop
push
repz
mov
add
dec
and
push
cli
imul
push
inc
cmpsb
ja
ficoml
push
xchg
xchg
push
loop
imul
into
aam
imul
sarl
dec
clc
xlat
and
andb
mov
pop
pop
mov
int
ss
std
sub
jg
dec
pop
add
adc
dec
dec
inc
adc
stos
dec
cmpsl
pop
mov
insl
lods
ljmp
addr16
iret
mov
or
xor
mov
push
scas
cmp
jnp
enter
ja
adc
xorl
je
pop
out
in
test
scas
shlb
jns
daa
scas
stc
mov
stos
xlat
mov
sbb
xchg
xor
aad
xchg
jecxz
cmp
jns
add
inc
mov
dec
arpl
popf
cmp
adc
test
dec
and
xor
mov
mov
decl
sub
adc
cmc
fidivs
scas
or
stc
es
jl
mov
clc
mov
cmp
jmp
adc
sarb
mov
fdivrs
jae
jns
das
lock
sub
fisubrl
rcrb
mov
sbb
pop
fwait
sbb
xchg
add
push
int3
adc
scas
loopne
insl
mov
jo
cltd
faddp
and
inc
or
xchg
inc
shr
adc
rolb
xor
jle
and
cmp
dec
ret
push
sahf
fimuls
dec
add
xlat
mov
mov
in
or
cwtl
and
lds
adc
sub
shrb
mov
rol
inc
mov
std
out
xchg
roll
fstpl
sub
pop
pushf
rolb
popa
lcall
inc
fiaddl
push
pop
xor
mov
xor
inc
roll
xchg
jge
inc
jmp
stos
cld
xchg
mov
aas
mov
push
in
test
lods
aad
mov
push
inc
mov
cld
adc
add
and
xchg
mov
fsubl
or
jmp
or
inc
scas
push
lock
leave
inc
lret
lods
lret
stos
aam
xlat
movb
push
ret
mov
mov
pop
insl
cmp
leave
add
dec
push
sub
clc
sbb
dec
insb
out
push
je
imul
aas
pop
sbbb
in
mov
mov
jns
lret
into
int
lret
sti
in
or
shrb
adc
adc
mov
push
xchg
rorb
into
popa
jnp
inc
jnp
testl
insb
push
pop
dec
fisttpll
xor
pop
scas
icebp
dec
fcomi
cmp
mov
loop
cmp
ja
aad
out
lods
xor
std
data16
xor
repz
inc
or
shrl
shlb
jle
cwtl
cld
inc
aas
xlat
or
fwait
aaa
and
aam
arpl
ret
xor
jne
mov
sbb
das
add
int
imull
hlt
pop
dec
lea
imul
sahf
and
jnp
xor
movsl
xchg
cmp
shll
sti
sbb
add
pop
nop
add
repz
push
jle
sbb
les
inc
outsb
inc
pop
jp
push
popf
push
and
out
imul
pop
adc
cld
stc
sbb
and
dec
lock
fs
ss
lods
dec
lahf
adc
push
push
cmp
testb
pop
push
and
dec
fildl
sbb
ja
lea
mov
xchg
daa
bts
outsb
cmp
orb
adcb
lahf
mov
xchg
jmp
pop
out
clc
jnp
xor
lret
and
outsb
filds
lods
mov
fldcw
pop
mov
push
pop
clc
pop
and
fisubs
ds
out
and
inc
in
cmp
sbb
pop
jmp
imul
out
fistpll
xchg
into
sbb
stos
popf
test
sbb
ret
mov
cld
jbe
fcmovu
mov
jo
inc
lcall
xchg
and
jecxz
scas
daa
sahf
push
cmp
or
imul
mov
xchg
or
adc
inc
leave
cmp
push
adc
push
out
dec
adc
mov
aam
cs
push
jns
inc
rcrb
int3
loopne
dec
sub
out
push
idivb
mov
push
ss
imul
mov
int
movsb
cmpsl
pop
jmp
pop
fwait
jb
mov
mov
xchg
test
cli
pop
dec
cld
loope
lock
add
loope
pop
push
fldlg2
test
ret
pop
mov
test
pop
jmp
inc
cmp
pop
stc
aaa
jnp
push
fldt
jno
sub
mov
shlb
in
pop
mov
dec
xchg
pop
xor
shlb
fmull
arpl
std
push
sub
incb
pushf
jp
cld
int
or
sbb
insl
mov
mov
or
je
lea
cmpsb
nop
jecxz
inc
lret
push
inc
out
xor
xchg
or
jecxz
sub
ret
and
pop
jbe
add
cli
mov
ds
je
out
xor
adc
dec
mov
cmpsb
sub
jecxz
das
jb
testb
cmp
lods
out
xchg
lcall
mov
setge
gs
mulb
adc
in
push
sub
outsl
daa
xchg
xchg
in
fstpt
les
ja
cwtl
lock
int3
pusha
fcomi
pop
hlt
std
mov
push
sub
mov
rorl
inc
ret
inc
xor
jnp
push
ret
sub
in
lea
std
cmpsl
pop
std
dec
xchg
sti
in
xor
mov
int
and
mov
fstpt
pop
fnsave
inc
xor
nop
inc
test
out
add
lea
xchg
stos
cwtl
aad
popa
add
xor
mov
sti
jne
mov
fldenv
pop
jo
roll
inc
mov
push
pop
jecxz
xchg
push
movsb
insb
adc
cmpsl
inc
push
jno
repnz
jecxz
dec
cmp
movsl
lds
xchg
add
pop
mov
dec
mov
outsl
jp
mov
mov
cmc
fsub
call
scas
add
add
subl
sahf
fdiv
xor
pop
decl
nop
rcrb
mov
mov
cmp
jne
subl
fisttpll
xchg
lret
dec
inc
in
mov
jp
pop
cmovge
scas
cmpsb
mov
pop
inc
cmpsl
mov
pop
aas
cli
or
test
jmp
movsb
mov
mov
les
pop
in
insl
repnz
fdivrl
push
daa
enter
je
mov
mov
fsubrl
and
scas
jae
cwtl
adc
pop
sti
out
jecxz
pop
inc
pop
shll
pop
cmp
outsl
mov
rep
out
jne
insl
pop
enter
ds
fistpl
subb
es
scas
sub
das
adc
cmp
movsl
lea
mov
ret
sub
jle
lret
shll
inc
mov
cmp
popl
jo
movsb
mov
leave
in
push
mov
dec
jmp
in
fwait
sub
lahf
addr16
jecxz
and
testl
in
pop
push
inc
lods
push
add
testl
xchg
inc
xchg
add
push
mov
xchg
xchg
lret
ds
mov
cmp
cli
xchg
or
cwtl
mov
ss
daa
cmp
sbb
int3
ljmp
sahf
movd
sbb
xchg
into
pop
imul
adc
xor
int
dec
fisttpll
cmpsb
int3
int
dec
sti
pop
incl
cmp
cli
mov
adc
jmp
or
lcall
sub
xor
jo
shll
bound
js
push
inc
mov
adc
jae
cltd
roll
in
xor
cmp
add
lcall
mov
dec
lock
and
into
js
inc
mov
addl
lock
xlat
push
and
jmp
popf
lret
outsb
sub
dec
jns
and
mov
testl
shrl
pop
xor
and
test
jle
dec
adc
inc
test
cs
cmp
jbe
jg
cmp
lods
inc
add
cld
cmp
aam
jno
mov
ret
negb
push
adc
dec
add
loopne
sbb
lods
push
pop
xor
sub
jecxz
fbstp
lea
dec
cmp
ja
pop
fstpl
lods
daa
dec
aam
inc
pop
cmp
push
stos
aaa
add
mov
push
mov
xchg
sub
add
sbb
cld
jo
notl
fwait
lahf
lock
leave
mov
push
lods
mov
or
dec
pop
and
imul
jo
push
roll
loop
jo
aam
mov
pop
push
mov
sbb
mov
in
jp
cs
ljmp
aaa
add
out
or
repnz
inc
ds
jle
xor
adc
fwait
repz
xchg
and
push
or
scas
lcall
cld
scas
leave
dec
cmp
pop
frstor
mov
jnp
andb
mov
jno
int
imul
ljmp
jle
jmp
incb
xchg
sub
lds
fcmovnu
sub
jne
inc
arpl
sbb
cmp
sub
jbe
mov
into
or
jns
stos
insb
stos
mov
aaa
out
xor
xchg
mov
in
pop
pop
test
dec
cmpsl
add
sub
jmp
pop
incb
aad
dec
push
inc
std
sahf
mov
sub
or
rol
pushf
dec
andl
out
test
mov
mov
pop
and
je
dec
adc
mov
mov
in
ret
mov
pop
mov
dec
pusha
cltd
adc
push
and
and
and
mull
jb
leave
flds
jle
sarb
and
into
or
pushf
xchg
imul
cmc
mov
and
je
scas
mov
mov
scas
lea
popa
xor
inc
imulb
mov
lea
cltd
test
sti
int3
fiaddl
scas
shl
lea
aam
xor
push
cmpl
sub
sahf
out
sub
push
outsl
loop
mov
mov
ret
pop
scas
mov
out
arpl
add
fstpl
sub
and
jecxz
mov
xor
jecxz
dec
inc
pop
ja
negb
loope
or
pushf
mov
inc
les
jae
outsl
fstl
data16
lods
aad
sarb
pushw
mov
xor
mov
call
daa
int
bound
jp
mov
mov
sbb
ret
imul
mov
in
ja
jmp
popa
jno
pop
push
in
mov
mov
outsb
xchg
mov
push
or
cli
or
icebp
jne
mov
out
jge
adc
sub
mov
pop
add
stc
adc
mov
nop
insl
cmp
or
cmpsl
sbb
je
sub
or
out
jle
sbb
cmp
movsl
xor
rcll
mov
pop
mov
xchg
in
insb
scas
pop
cmpl
mov
mov
cmp
popa
nop
stos
adc
jbe
dec
ret
shl
jle
loope
jb
push
jnp
push
shr
pop
clc
push
lods
shll
pop
shl
insl
fs
inc
pcmpeqb
jne
xchg
lock
or
movsl
inc
jg
enter
notl
data16
jecxz
out
or
adcb
sbbb
fstpt
adc
push
add
or
fwait
cmpsb
jnp
rcrb
xor
adc
nop
dec
into
pop
nop
adc
fnstcw
leave
cmc
fcmovu
xor
mov
stc
mov
mov
shll
movsb
test
fildll
fs
test
int3
popf
add
sti
push
gs
mov
insl
repnz
nop
aaa
xchg
movsl
inc
loop
bound
push
pop
lods
lret
add
jne
adc
xchg
gs
jns
jg
andl
add
mov
mov
gs
pop
cmpsl
adc
lret
sub
popf
and
call
add
add
mov
add
fs
xor
stc
ffree
sbb
fisttps
cwtl
test
push
mov
dec
int3
fisubl
subb
xchg
sub
xor
dec
mov
sub
repnz
mov
jo
movsl
arpl
jbe
jnp
ljmp
cltd
inc
ss
ss
adc
lcall
adc
ljmp
jnp
sahf
adc
mov
fs
mov
aad
dec
roll
push
mov
fsubl
dec
test
out
mov
leave
cli
or
testb
jbe
xchg
sub
jle
cmc
mov
inc
xchg
mov
inc
or
sub
cmpsl
loope
cmp
push
pop
bound
imul
xchg
and
jmp
loope
loopne
pop
arpl
out
pushf
adc
xchg
mov
push
hlt
and
dec
pop
sub
jae
push
loop
sub
jge
mov
lret
icebp
arpl
add
add
sbb
jns
cmp
in
dec
jno
pushf
or
ss
dec
jnp
jo
cmp
and
stos
test
sub
adc
add
sbb
inc
xor
push
xchg
stc
mov
push
xor
into
cmp
or
push
mov
push
cmp
mov
jno
cld
jmp
and
inc
sub
dec
bndstx
ficompl
xor
jge
enter
outsl
sub
cs
ljmp
cltd
push
add
or
jecxz
adc
adc
lock
call
outsb
test
jle
push
pushf
adc
pop
out
mov
sub
pop
sub
das
or
div
divl
pop
jg
xchg
mov
cltd
ljmp
hlt
fisttps
mov
dec
dec
mov
xchg
dec
outsb
or
je
inc
icebp
lcall
loope
sub
mov
lods
pop
clc
push
mov
mov
xor
xchg
jb
mov
mov
push
mov
and
dec
int
sbb
push
loope
fimuls
mov
mov
mov
add
mov
aad
sub
scas
fnstcw
add
cmp
jmp
mov
cmp
out
sbbl
xchg
jnp
scas
mov
sahf
fisttps
addr16
ss
xchg
dec
out
lods
scas
ret
and
enter
dec
push
push
sti
xchg
mov
xchg
dec
and
inc
or
leave
nop
xor
jecxz
mov
repz
imul
sbb
cmp
sbb
pop
scas
xchg
lods
addr16
negl
xor
fsubrp
das
lcall
mov
aaa
dec
inc
pop
cmp
mov
std
jecxz
pop
iret
movsb
stos
xchg
mov
aaa
cmp
xchg
out
push
dec
roll
mov
std
sahf
notl
outsl
lcall
es
mov
jno
mov
push
or
cmp
or
cmc
scas
das
pop
push
mov
mov
and
cmp
ret
mov
mov
mov
cmp
cltd
pop
push
adc
pop
in
cmp
add
mov
imul
push
clc
lret
imulb
andl
push
in
lahf
ret
addr16
popf
mov
jnp
iret
das
mov
cmc
xorl
jno
mov
mov
jo
sub
push
inc
imul
out
xor
lret
test
and
cmp
cmp
sbb
adc
adc
pop
gs
mov
dec
pop
cmp
sti
int
in
shll
dec
mov
mov
lret
cltd
mov
shr
int3
sub
loopne
pop
lret
mov
movsb
iret
in
cld
lods
mov
andl
lcall
es
std
xchg
mov
arpl
clc
scas
dec
and
lock
mov
lcall
cmpsl
stos
push
push
cmp
rcrb
pushf
mov
fcom
jecxz
mov
decb
incl
or
loop
mov
sub
cld
and
jno
pushw
jbe
pop
cwtl
test
mov
popa
xor
stos
fs
lcall
adc
jno
mov
stos
shlb
push
rcrb
into
xchg
mov
aaa
cmp
fs
jl
mov
and
push
div
das
mov
jo
cwtl
jle
jnp
mov
in
pusha
out
iret
pop
out
out
xor
aaa
mov
fwait
jge
mov
addl
clc
cmc
andb
test
fcompl
ljmp
pop
mov
xchg
or
jns
mov
mov
in
sub
sbb
addb
cmpsl
test
mov
stos
test
stos
lahf
xlat
outsb
dec
push
mov
mov
push
cmpsb
movsb
sub
pop
sbb
xor
add
fwait
mov
iret
pop
push
movsl
sahf
cmp
jecxz
notl
ja
inc
stc
cmp
lahf
or
dec
mov
ret
and
and
fstl
ss
and
pusha
mov
mov
out
jns
push
lcall
int3
nop
or
xchg
push
pop
adc
sbb
xor
cmp
lods
xor
out
fadd
cmp
test
sbb
adc
or
in
hlt
push
mov
jb
inc
daa
mov
es
je
cmp
mov
cwtl
loope
ljmp
mov
fcmovb
dec
or
xor
aad
push
sub
mov
arpl
dec
sbb
lcall
xlat
cmp
popa
outsl
psrlw
xor
mov
iret
loope
dec
inc
dec
cmp
fldt
loope
into
xchg
insb
pop
jl
hlt
add
and
pushf
in
or
das
and
fwait
add
call
add
or
repnz
lds
mov
loop
dec
shrb
in
divl
test
jecxz
out
jbe
xor
add
gs
jg
fists
aas
fmuls
cmp
adcl
push
cmp
movsb
stos
cmp
cwtl
push
call
popf
lods
in
add
xor
sbbl
imul
fisttps
sub
je
adc
dec
mov
popa
sub
btl
add
push
mov
sub
sarl
mov
cmp
fwait
lret
dec
cmp
mov
test
fmul
ljmp
push
inc
mov
enter
jne
sub
mov
imull
mov
ficomps
xchg
sbb
add
inc
addr16
jle
cmp
lcall
cmp
adc
out
fdivl
dec
mov
and
test
fisttpl
add
lock
ret
ror
les
sbb
pop
jg
aas
dec
mov
test
adc
outsb
insb
xchg
mov
popa
arpl
fidivrs
test
jo
sub
jno
xchg
push
scas
push
or
mov
movsb
jne
pop
rorl
and
ficoml
lret
xor
push
cmp
jle
std
xchg
imul
mov
push
fbld
into
push
lret
or
test
in
cmp
mov
inc
add
shlb
and
inc
int3
sub
ja
inc
je
xchg
push
or
je
xor
sbb
pusha
cmpsl
imul
insl
pop
push
test
lret
ds
lock
push
and
idiv
dec
stos
shll
insl
jl
sub
mov
pop
add
test
icebp
in
iret
push
adc
pushf
rolb
and
push
aam
mov
mov
movsb
sub
add
pop
dec
scas
ds
rolb
movsb
repz
push
xor
movsb
lods
adc
icebp
popl
nop
jmp
ds
cli
sub
push
lds
cmp
cmpsl
xchg
cmpsb
jae
sub
outsl
sbbl
popf
lods
add
out
sub
xchg
inc
pop
push
out
test
xchg
out
lods
scas
jle
pop
cmpsl
icebp
dec
jae
mov
or
jge
mov
hlt
ret
mov
mov
negl
movsl
insb
in
inc
adc
into
jl
and
xchg
inc
cmc
push
pop
mov
cmpsl
mov
clc
push
mov
sub
test
mov
cltd
xchg
mov
das
imul
pushf
add
test
insb
cmp
add
pop
xchg
jecxz
xchg
ja
mov
push
ret
ja
xor
leave
test
ljmp
dec
dec
push
pop
add
jmp
push
jge
and
sahf
sub
fstpl
ss
sahf
rol
in
mov
mov
or
scas
push
dec
inc
jl
insb
mov
pop
out
mov
sarl
mov
mov
inc
jno
std
pop
cmpsb
andl
call
imul
sbb
push
mov
fidivrs
loope
sub
add
jo
mov
cs
dec
js
loope
mov
insb
mov
rcl
cli
cltd
inc
sbb
xor
push
mov
adc
mov
push
xchg
pop
cwtl
ja
jmp
inc
push
lret
movsb
sbb
xchg
push
ret
xchg
addl
ja
jnp
int3
dec
push
push
xor
and
mov
pop
add
jne
aam
pop
outsb
test
cmp
lret
mov
and
fisubrl
shll
xor
ret
jp
adc
lret
int
in
dec
pop
test
mov
and
mov
in
add
sahf
mov
pop
imul
rcrb
mov
loop
scas
dec
mov
test
lcall
adc
mov
sub
sbb
lret
fidivrl
mov
xor
add
add
mov
ja
push
jne
out
mov
mov
in
jecxz
fnsave
mov
lret
xchg
push
mov
pop
xor
into
clc
pop
and
popa
pop
fstl
flds
pop
sub
fcoml
xor
adc
cmpsb
mov
ror
inc
icebp
xchg
jno
bound
hlt
mov
aam
test
lret
int3
push
inc
pop
or
inc
lds
add
ja
popf
les
xor
orl
sbb
std
aas
cmp
mov
out
das
popf
imul
xor
dec
cmpb
pop
or
xorb
enter
out
cmc
repz
push
bound
xchg
pop
inc
xchg
push
sbb
ja
add
and
and
fbstp
pop
loope
jmp
dec
lock
push
pop
fcomps
movsl
add
push
mov
scas
push
inc
xchg
subb
stos
stc
ret
dec
xor
imul
mov
push
dec
sub
fimuls
in
mov
mov
adc
addl
aam
cltd
pop
scas
or
inc
xchg
movb
rcrl
fdivrs
call
mov
lock
dec
push
or
push
xchg
inc
stos
flds
insb
mov
mov
mov
nop
xor
shll
inc
adc
push
jecxz
xchg
cmp
lret
movsl
call
int
jg
jo
clc
xorb
xchg
mov
lea
in
lods
mov
ja
js
adc
add
mov
sub
sarb
sub
mov
cmpsb
loopne
pop
jns
lcall
fmuls
cmc
imul
repnz
cs
dec
fisttps
bound
sbb
sub
xchg
pop
cmpsb
inc
popa
dec
mov
fisubrs
in
jb
loope
mov
xor
pop
push
cmpl
sub
roll
inc
xchg
cmp
flds
addr16
inc
leave
movsb
sbb
rorl
push
pusha
adc
push
pop
lods
add
stos
fimull
jb
stos
mov
or
imul
in
shrb
xlat
and
in
test
xor
dec
pop
or
pop
imul
scas
dec
lcall
fistpl
adc
jno
sbb
mov
sbb
dec
adc
ja
inc
cmc
insl
call
scas
jb
adc
or
mov
aas
xchg
and
xchg
pop
mov
repnz
sub
mov
xor
jno
mov
xchg
shl
add
mov
push
cmp
out
es
hlt
push
mov
add
subl
out
cmp
xchg
xchg
aam
in
lret
clc
jbe
or
pop
cmp
cmpsb
or
outsl
cmp
jne
inc
outsl
js,pt
int
cmp
ss
jns
std
or
in
inc
shlb
xchg
dec
push
xchg
inc
mov
cld
stc
push
jge
loop
fistps
inc
rcr
or
dec
pushf
sbb
pop
repz
fcompl
pop
pop
push
sbb
cmp
pop
repz
sub
shl
popa
jg
sbb
es
subl
add
sub
adc
in
push
ja
mov
pop
repnz
enter
pop
popa
xor
test
add
mov
fstl
aaa
dec
popa
sub
mov
rcll
xor
sub
dec
jmp
das
call
inc
out
andl
addl
pusha
shl
jmp
out
and
adc
pop
loope
pop
ret
adc
fsubrs
cmpsl
int
popf
je
dec
movsb
mov
mov
or
xchg
cli
mov
pop
cmp
jnp
dec
mov
add
js
cmp
lock
scas
sub
test
pop
cmp
xlat
or
push
rcr
or
mov
std
xor
int
addr16
and
les
mov
ds
in
jg
and
jp
gs
out
out
iret
int3
fwait
pop
cmc
or
pop
cmp
ljmp
jno
dec
mov
sti
mov
popf
mov
arpl
inc
lods
and
movsb
subb
inc
test
lcall
hlt
sahf
stos
scas
or
fucomi
call
or
in
xchg
add
jle
and
loopne
xchg
jae
inc
outsb
pop
lret
xor
std
dec
aam
mov
cmp
sbb
and
adc
aas
cli
inc
loopne
push
outsb
fwait
sbb
push
dec
push
mov
sub
jmp
fldcw
outsl
aad
std
cmp
ss
int
or
push
dec
pop
jne
push
xlat
jno
insb
pop
sbb
imul
jo
adcb
lahf
or
aas
cltd
cwtl
aad
rorb
mov
push
ret
or
mov
push
inc
insb
test
jecxz
loope
mov
or
cwtl
pop
out
pcmpeqb
mov
movsl
decl
int3
dec
loope
xchg
fldcw
outsl
int
mov
or
mov
and
xor
fisubl
mov
xchg
shll
pop
ret
fs
dec
aas
sub
mov
fdivp
xchg
jne
xor
and
inc
int
inc
mov
mov
pop
adc
jbe
push
jno
jno
or
les
sbb
xchg
push
add
or
mov
outsb
jl
push
xchg
push
ret
addr16
and
cmp
int3
or
cmp
inc
or
out
cmp
jmp
cmp
adc
add
add
cmpsb
jbe
ja
and
les
mov
push
arpl
repz
mov
scas
aas
rorb
push
cmp
and
dec
xor
cld
ret
cwtl
sbbb
lcall
dec
pop
add
inc
dec
cs
or
inc
mov
xor
stos
push
push
pop
leave
repz
popf
lahf
cmpsl
ds
cltd
xchg
mov
push
addr16
adcb
push
mov
pop
pop
rclb
jmp
xchg
or
movsl
leave
pop
and
subl
test
jno
ja
ss
fwait
or
scas
xor
je
in
add
in
inc
dec
jae
test
or
pop
pop
inc
cmpsl
test
xchg
jae
mov
pop
adc
sbb
and
sar
pop
hlt
push
lock
xor
js
xchg
mov
mov
outsl
sub
mov
data16
pop
sub
xlat
pop
hlt
jl
cmpb
orb
sarb
and
mov
mov
flds
stc
loop
ficompl
shl
jl
test
fs
call
sbb
sub
out
sub
in
dec
js
add
inc
popf
xchg
ret
jno
mov
sahf
movsb
nop
adc
sbb
mov
push
xchg
xchg
in
sbb
pop
add
and
fstpt
inc
dec
mov
fs
dec
sti
fisttps
sar
ja
cmp
adc
iret
popa
mulb
jge
aad
pushf
sub
sub
and
add
mov
dec
enter
loope
mov
push
arpl
xor
stc
pop
icebp
jg
test
jno
sbb
aam
dec
test
movsl
dec
dec
mov
mov
push
repnz
adc
xor
xchg
aaa
icebp
sbb
sti
mov
out
stos
pop
inc
xchg
or
das
sub
mov
aam
jae
subl
out
mov
push
test
lds
shrb
icebp
pop
sbb
dec
fnstsw
rorl
test
cmc
mov
inc
je
mov
mov
ljmp
cmp
sub
jnp
stc
lods
or
imul
std
lds
add
fidivl
ss
cmpsl
mov
push
rorl
subl
bound
push
sub
or
shlb
in
pop
cmp
test
andb
mov
movsl
out
dec
or
pop
cli
std
iret
es
xchg
int
test
cmp
test
add
adc
imul
out
cmpsl
int3
icebp
ss
xor
pop
aad
fsts
daa
pusha
adc
and
mov
movsl
inc
imul
lahf
jp
les
sbb
scas
xor
xchg
push
or
mov
jge
aaa
call
jl
jp
lods
lret
outsb
cmpsl
pop
xchg
or
mov
xchg
jne
or
push
lds
in
and
push
addr16
orl
cltd
mov
stc
xchg
les
xchg
mov
mov
imul
pop
push
orl
js
sub
xor
lcall
jbe
movsl
test
shrl
dec
dec
adc
int
mov
mov
dec
mov
mov
popa
mov
rcll
js
mov
cmp
sbb
xchg
dec
push
mov
pushf
push
add
mov
cmpb
inc
faddl
xor
adc
loop
pop
js
fsubrl
cmp
cmp
sub
popl
clc
and
add
daa
scas
xchg
mov
fdivrl
push
mov
mull
sbb
adc
hlt
ljmp
cs
dec
jmp
or
js
popf
dec
inc
mov
xchg
xchg
mov
xor
jnp
repnz
fs
pop
pop
ss
gs
push
jnp
mov
fisubrs
loope,pt
iret
idivl
dec
fsub
movsb
pop
fs
fdivs
mov
leave
stos
mov
insb
or
cmp
loop
loope
or
pop
mov
fnstcw
popf
cmp
mov
mov
jmp
lods
add
sub
mov
sahf
orl
sub
xchg
jbe
imul
repz
mov
jbe
cmp
cltd
sti
ljmp
push
in
rcrb
outsl
inc
xchg
fisubl
aas
clc
arpl
mov
iret
dec
outsb
adc
lahf
cmp
rcl
or
push
xor
inc
sbb
sbb
jl
cmp
lret
mov
clc
jns
imul
popf
xchg
xlat
sbb
stos
aas
in
add
push
lods
push
dec
lahf
mov
add
pop
and
int
push
sbb
add
test
and
sub
pop
dec
cltd
popa
negb
jge
xchg
subb
scas
push
pop
adc
jb
or
cmpsl
enter
mulb
inc
jge
pop
shrl
bound
mov
jmp
lea
jg
and
xchg
in
in
and
out
sbbl
addr16
movlhps
push
or
pop
lret
clc
pusha
xor
pop
mov
inc
adc
xor
sarl
xchg
inc
sbb
add
sbb
ljmp
xor
imul
hlt
push
sub
sbb
jo
enter
adc
loope
dec
jno
aad
inc
pop
mov
sbb
pop
cmp
daa
lea
test
push
or
lock
pop
mov
inc
clc
jbe
call
shlb
sub
outsl
mov
daa
fadds
mov
jle
out
xchg
fmull
xor
sbb
push
xchg
je
test
inc
fld
jmpw
arpl
mov
test
icebp
jb
jns
mov
icebp
inc
xchg
jle
cmp
dec
push
xchg
cmpsl
lcall
pop
sbb
inc
and
jb
fdiv
push
pop
lcall
aaa
fisttpl
or
inc
imul
movsl
push
negl
repnz
fildl
fimuls
sarl
dec
and
xchg
push
dec
in
shll
mov
outsb
fnstsw
test
jmp
cmc
lds
xchg
inc
mov
mov
inc
push
notb
std
in
fldcw
cmp
clc
lret
mov
inc
int
jge
aas
xor
ret
push
sarb
loop
push
mov
rcrb
xor
aaa
bnd
aam
mov
dec
jp
jns
cmp
rclb
insb
mov
aas
out
fnstenv
in
popf
and
leave
fmull
testb
lds
cmp
lret
loopne
clc
cli
mov
mov
dec
dec
cmc
lcall
jb
pop
arpl
and
fs
js
stos
or
xchg
repz
mov
xchg
add
xchg
push
add
xchg
sbb
fwait
and
stos
mov
jne
notb
sub
inc
je
add
dec
std
xor
mov
fwait
adc
das
pop
in
popa
out
clc
shlb
pop
mov
jo
sbb
testb
xchg
mov
imul
mov
add
inc
mov
inc
test
in
scas
push
add
fistpl
sub
movsl
lea
add
cltd
nop
mov
cmp
sbb
andl
mov
shl
add
rolb
shlb
or
jb
mov
fstpt
je
pushf
or
inc
outsb
negb
mov
movsb
inc
ljmp
leave
je
dec
xchg
test
pop
stos
mov
inc
or
inc
push
or
jns
repnz
xchg
movsb
adcl
aaa
and
dec
test
inc
rcll
cmp
xchg
jb
mov
mov
inc
xor
aaa
in
adc
lahf
aas
sub
inc
mov
jae
cmp
loope
cmpsl
cmpsl
inc
add
icebp
addr16
icebp
cmp
mov
mov
jbe
jl
jnp
repnz
enter
aam
leave
cmp
jle
mov
jecxz
repnz
pop
xorl
hlt
fdivrl
dec
jp
pop
loope
pop
bound
inc
or
clc
inc
call
dec
inc
ficompl
lret
mov
add
mov
sub
dec
push
icebp
fwait
dec
xlat
dec
fdivs
mov
cld
fldenv
mov
shll
xchg
xor
jg
sbb
aad
jl
inc
push
add
push
dec
cld
mov
push
jo
mov
dec
cmp
js
sbb
bound
pop
mov
jge
pop
xchg
mov
or
or
and
xchg
and
dec
shll
pop
icebp
sti
addb
sbb
shlb
cmp
pop
in
mov
mov
mov
push
mov
imul
out
gs
and
xor
icebp
mov
clc
add
les
mov
mov
mov
jo
pop
jne
or
mov
lods
in
add
sub
idivb
imul
iret
mov
mov
cmp
jne
mov
dec
incl
arpl
mov
call
inc
clc
mov
data16
jle
paddb
imul
cmp
xchg
jmp
daa
sbb
push
sub
adc
sbb
inc
push
push
lcall
and
and
mov
enter
andl
aad
stos
add
xchg
cwtl
mov
scas
out
cltd
pop
sub
js
fcoms
sti
out
lret
push
enter
imul
pusha
outsl
data16
mov
fisubrl
cs
sub
inc
insl
add
mov
sbb
mov
cmp
cmpsl
xchg
test
std
imul
sub
add
fstpl
jne
cli
stos
test
pusha
scas
test
pusha
pop
std
clc
pop
ljmp
sahf
clc
jns
xor
or
rcl
mov
xchg
inc
pop
lret
dec
adc
sbb
cwtl
nop
xchg
pop
fwait
mov
int
pop
scas
loope
xchg
sahf
jne
sti
insb
leave
or
sub
daa
ret
sub
popf
xor
xor
pop
sarb
fmull
lret
add
push
in
movsb
cli
inc
and
cld
daa
pop
mov
les
xor
and
and
and
stos
stos
adc
push
int
es
xor
mov
cltd
loop
in
add
rcrb
addl
cld
jne
lret
test
xor
aam
cmc
adc
lret
pop
jl
hlt
icebp
mov
testb
mov
add
pop
jl
scas
andb
movsb
icebp
cmp
jge
roll
jp
adc
push
leave
ret
jmp
mov
mov
aas
lcall
dec
out
pop
xor
sbb
mov
jp
jns
jmp
add
sti
inc
addr16
mov
aas
pop
add
and
outsb
sub
out
xchg
repnz
cmc
xchg
loop
jne
inc
sbb
add
jb
adc
and
popf
lods
gs
lret
filds
ljmp
mov
pop
jno
adc
jl
std
push
xor
nop
imul
push
add
xor
rorl
js
cmp
sub
jb
xchg
push
rorb
jmp
dec
stc
mov
pusha
and
inc
in
adc
rolb
add
frstor
and
add
rcll
addr16
imul
test
jb
inc
repz
xor
add
jmp
fisttpl
nop
xor
xor
test
pop
xchg
dec
es
ret
xor
imul
js
xchg
sti
clc
add
push
shl
xlat
mov
cmp
or
insb
imul
mov
out
xchg
and
into
jnp
fmulp
popa
xor
xchg
roll
insb
mov
sbb
xchg
xor
stos
sub
mull
sbb
stc
mov
mov
mov
add
stos
mov
pop
out
push
cltd
stos
mov
mov
push
mov
dec
arpl
cmc
mov
xlat
in
mov
outsb
jp
nop
loop
jge
push
inc
cmp
ret
loope
shlb
jb
sbbl
dec
sub
xor
jnp
inc
fsub
stos
popf
pop
adc
ljmp
adc
sti
fildl
mov
push
pushf
push
inc
nop
sbb
lcall
dec
lret
mov
outsb
dec
outsb
jecxz
push
iret
loop
cmpsl
push
inc
fildl
jl
stc
mov
fs
xor
icebp
cmp
inc
mov
in
xchg
ljmp
jae
sub
pop
dec
mov
or
cmp
paddsb
lods
test
jmp
dec
in
mov
xchg
jecxz
xchg
adc
cmp
and
dec
inc
mov
test
jg
daa
mov
test
mov
mov
outsl
push
cmp
mov
push
lock
aas
fcmovu
cs
fs
pop
out
push
lods
mov
insl
setns
jno
scas
outsl
in
lret
nop
sbbb
xchg
clc
mov
inc
push
scas
cmc
and
ljmp
cli
adc
ljmp
lahf
dec
neg
daa
dec
in
adc
shl
jb
cmpsb
sar
mov
es
jp
sbb
cmp
push
hlt
ss
xchg
inc
mov
mov
jle
lret
add
sbb
sub
inc
ret
gs
pop
jbe
cwtl
aaa
cmp
push
sbb
jne
test
lods
inc
es
pusha
xchg
sub
ljmp
xor
adc
adc
dec
stos
mov
pop
or
add
call
popl
and
inc
mov
cmp
push
add
outsb
hlt
push
mov
insb
lcall
dec
jg
push
mov
mov
xchg
pop
shlb
loopne
push
fadds
outsl
adc
xchg
sbb
dec
and
out
movsb
out
push
lret
dec
xor
adc
mov
lea
jle
aam
mov
adc
cmp
mov
decl
xor
push
and
insb
subl
cmpl
push
mov
lahf
mov
or
pop
bound
push
ja
inc
mov
sbbb
test
xchg
mov
popf
pop
out
and
cmp
ljmp
ret
outsb
repnz
sbb
jno
iret
arpl
pop
xchg
call
push
ret
mov
pop
jae
outsb
inc
stos
xor
fcmovnbe
mov
out
inc
dec
xchg
call
mov
sahf
or
push
fstl
ja
js
push
mov
xchg
rclb
mov
mov
jecxz
sub
lcall
push
jp
mov
iret
das
stc
jecxz
push
mov
sbb
cmp
dec
fisttps
xchg
call
sbb
sbb
mov
xor
rorb
pusha
add
aad
cmp
push
outsl
lahf
lods
in
test
cs
in
xor
repz
outsl
jbe
xlat
out
jg
mov
xchg
add
movsl
jmp
repnz
pushf
test
das
sbb
jne
repz
hlt
cmp
push
xchg
in
jmp
jae
sarb
inc
outsb
pusha
idivl
clc
jnp
je
add
xchg
sub
sbb
nop
rol
js
repnz
ljmp
sti
aaa
push
sbb
mov
add
pop
jge
das
aam
std
jbe
jmp
loopne
push
xchg
lret
push
cmp
test
mov
push
inc
xchg
add
lcall
sub
imul
jmp
jns
ss
push
sub
test
out
mov
mov
in
adc
loope
xor
mov
cmpsl
xor
cli
jle
imul
cmpsl
push
xlat
xor
mov
in
fwait
xchg
les
adc
shll
es
mov
adc
add
ja
outsb
scas
add
push
es
mov
mov
add
adc
xor
xor
into
xchg
inc
add
out
pop
xor
mov
jbe
adc
int3
dec
inc
in
lods
adc
movsl
mov
rcll
scas
xlat
and
ficomps
adc
lods
cwtl
sub
xor
outsb
cltd
test
scas
call
loope
test
push
jmp
xchg
dec
and
imul
out
and
push
pop
jle
mov
in
notb
adc
flds
fiaddl
lcall
pop
mov
ja
mov
enter
stos
pop
sub
movsl
fbstp
mov
shrb
push
jne
fcoms
test
shll
adc
xor
ss
or
fimull
jb
push
cmc
shll
pushf
sbb
iret
xor
dec
into
and
xchg
ret
cmp
or
leave
fisubs
into
cmp
scas
mov
cmp
push
cmpsb
push
mov
fldcw
flds
sub
aas
push
add
and
cmp
scas
cmp
fcomip
nop
add
xlat
mov
mov
jbe
xchg
mov
mov
jmp
scas
mov
add
out
inc
fwait
test
int3
test
push
sub
cmp
and
gs
jb
or
inc
stos
and
call
xchg
aad
mov
xlat
xor
xor
adc
xchg
scas
sub
fwait
mov
sbb
test
into
sbb
cmpsl
push
js
aam
inc
repz
jl
sbb
jge
cltd
pop
out
dec
inc
sbb
out
fldcw
ficoms
push
adc
mov
push
push
push
mov
and
insb
lahf
setb
testb
loopne
add
push
xchg
sub
jl
cmpsl
popa
mov
xor
or
cmp
push
lret
adc
mov
mov
pop
adc
stc
scas
dec
xlat
cld
aas
or
dec
push
stos
repnz
adc
jns
xchg
test
or
fs
gs
dec
lds
fldl
ss
xchg
cmovne
jno
mov
xlat
and
cmp
das
push
mov
ljmp
sbb
mov
mov
ret
mov
lods
sub
inc
cwtl
cwtl
mov
clc
cmp
std
add
clc
scas
mull
sahf
jne
jecxz
pop
push
shlb
iret
movsb
fisttpll
mov
test
xchg
in
cs
lds
outsl
in
inc
subl
lods
push
inc
movsl
xor
lahf
jecxz
mov
xor
andb
mov
jne
or
repz
lret
xor
sbb
sbb
popf
cmpsl
push
popf
fistpl
xorl
mov
aam
dec
inc
mov
push
jb
aam
stc
mov
daa
subl
mov
and
data16
int3
scas
and
xorb
mov
mov
int3
jge
xchg
push
add
aam
aaa
sub
fcomp
cmc
cmp
test
mov
int
divb
dec
daa
cmp
push
cmp
shll
push
jg
xor
mov
clc
jmp
daa
cmp
adc
call
push
arpl
adc
xor
arpl
ljmp
mov
and
inc
push
pop
out
rol
push
mov
hlt
std
push
mov
or
and
inc
xchg
aam
dec
imul
push
or
xchg
aad
je
movsl
jl
testl
push
dec
pop
xchg
fdivrs
fs
sub
mov
mov
or
jp
fisubl
xchg
jp
ds
inc
push
cmp
sub
into
mov
xchg
test
int3
push
inc
push
stos
and
out
add
inc
lds
add
mov
inc
repz
sti
mov
mov
fwait
cmp
scas
loopne
or
dec
not
jo
fwait
insb
or
jmp
or
push
adc
push
pop
and
push
wbinvd
aas
stc
popa
cld
mov
mov
mov
inc
jns
xor
add
add
test
lods
xor
mov
shrb
mov
sti
mov
cmp
subl
sbb
rcrl
das
stc
and
daa
lods
or
adc
enter
sub
xor
scas
daa
mov
loopne
loop
jge
mov
loop
stos
ja
mov
das
ror
jge
mov
lret
ret
or
add
ja
movsl
sub
lea
int3
pop
mov
stos
xor
pop
or
clc
mov
fld
cmp
fbld
je
jno
movl
mov
imul
add
xor
and
xchg
sub
mov
jb
pushf
stc
sbb
in
loop
pop
fs
add
stos
cmpsl
or
negl
insl
sub
mov
rclb
pop
test
dec
movsb
std
jg
ja
mov
mov
loope
add
dec
inc
loope
int3
aaa
loopne
mov
loop
or
aaa
and
in
sbb
je
add
and
jmp
mov
jnp
inc
cmp
pusha
rorl
scas
pop
xlat
enter
out
aaa
sti
daa
inc
cmp
mov
push
adc
repnz
xlat
test
push
pop
xchg
adcb
aad
enter
xchg
in
daa
or
pusha
cltd
jno
loop
push
add
jns
aam
push
fwait
out
fdivr
xor
lahf
mov
sub
test
push
not
div
jae
out
sbb
lret
repz
mov
popf
les
cmc
js
lock
into
xor
clc
lock
out
ret
cmp
pop
pop
ljmp
pop
push
sbb
xlat
sti
ss
xor
sbb
sahf
push
adc
adc
imul
jne
and
push
notl
aas
jno
lods
adc
cmp
mov
lods
inc
mov
ja
adc
test
jne
and
dec
push
mov
shll
out
cltd
dec
jns
adc
cwtl
lock
adc
add
dec
or
in
stos
out
popf
dec
pop
sbb
or
add
mov
dec
add
pmaxub
aaa
and
leave
xchg
mov
cwtl
ds
lods
mov
cmpl
sbb
sbb
out
mov
adc
loopne
inc
sub
in
xlat
mov
movsb
ja
cmc
mov
lahf
xor
and
or
pop
mov
add
clc
cmp
mov
mov
fs
clc
in
and
repnz
sbb
idiv
aad
mov
push
xor
into
mov
je
test
scas
stc
push
aaa
cmp
jno
mov
ret
fisttpl
lock
fwait
mov
jb
cmpsl
xorl
scas
xchg
push
mov
push
movsl
xchg
test
popa
lods
daa
sub
dec
adc
in
jl
adc
or
inc
pop
mov
rol
in
cmp
test
sub
sub
mov
jp
push
scas
ds
rorl
stc
inc
sub
arpl
add
dec
aad
daa
pop
and
das
cmp
and
and
daa
inc
cmpsl
leave
mov
aaa
sub
addr16
adc
mov
test
fcoms
jg
add
cli
js
cmp
stos
jb
mov
push
test
imul
repnz
xchg
xchg
sbb
cmp
add
loop
and
jo
test
popa
push
cmpsb
lret
dec
fdivrl
hlt
jecxz
and
shll
hlt
bnd
mov
into
leave
adc
xchg
lds
cmp
roll
mov
stos
mov
mov
cmp
loope
mov
xchg
jbe
out
inc
cmpl
xchg
test
imul
fildl
mov
sub
and
pop
fldcw
clc
or
adc
popa
outsb
adc
bound
test
xchg
ss
push
into
sub
push
outsb
pushf
int3
cwtl
movsl
xor
fsubl
mov
push
sub
cmp
push
sarb
and
jno
ja
movb
or
int
mov
int3
rorb
mov
xchg
pop
lods
sbb
inc
pop
dec
mov
inc
movsb
push
xchg
push
mov
gs
je
pop
mov
adc
sbb
icebp
sub
pushf
cs
out
loop
stos
jnp
loope
lock
adc
and
fistps
dec
mov
push
xor
mov
not
push
stos
loopne
cmp
jmp
aam
ret
mov
js
mov
mov
pop
std
push
leave
push
leave
loopne
movsl
rcrb
or
movsb
push
das
les
insl
jmp
in
in
es
xlat
lea
push
into
mov
pop
inc
push
sbb
rclb
sti
lahf
out
jae
jae
cwtl
inc
hlt
cmp
mov
mov
cs
jge
jo
sti
inc
mov
icebp
bound
cmp
std
mov
pop
inc
inc
mov
xchg
pop
sar
mov
lret
jl
jmp
lock
and
push
sub
loope
adc
jle
imul
rolb
sub
sbb
pop
lret
xor
adc
and
in
jp
cltd
imul
push
iret
sarl
add
push
in
and
scas
stos
sub
sbb
movl
inc
imulb
jl
nop
dec
idivl
cmp
jo
insb
xor
dec
sub
imul
out
add
and
push
shll
xlat
stos
mov
xchg
mov
mov
pop
movsb
xchg
jns
rcll
aam
mov
fs
mov
mov
or
pop
cmp
jno
lcall
sub
mov
xchg
dec
pop
bound
in
mov
orb
or
test
aas
mov
je
iret
xchg
mov
pushf
mov
adc
jbe
shll
sbb
mov
mull
inc
inc
test
insl
loope
int
adcl
into
int
je
xor
lock
lock
cmp
leave
pop
pop
test
dec
mov
lock
sbb
inc
inc
fsubrl
and
xor
jnp
pop
loope
pop
cmp
ret
in
cmp
jp
or
jne
or
mov
adc
xchg
or
hlt
or
int
adc
sbbl
movsb
xchg
add
int
lea
or
shrb
jne
call
mov
mov
std
fstpt
mov
mov
dec
or
and
pop
add
pop
jae
out
aad
rorb
std
or
dec
mov
ret
and
loopne
cmp
out
leave
sub
xor
mov
adc
push
call
mov
xchg
and
test
inc
lcall
cwtl
sub
test
adc
inc
in
push
lods
aam
sub
icebp
or
mov
mov
dec
cmpsb
or
int3
lret
jae
jns
subl
es
and
aam
in
push
addr16
jns
call
addr16
or
insl
leave
cltd
jns
pop
popf
sub
fsts
es
cmp
or
add
ret
push
mov
in
mov
mov
stos
enter
call
dec
movsb
jnp
cmpsb
lret
jnp
push
mov
cmpsl
stc
decb
loopne
scas
mov
inc
fnstenv
outsl
push
in
inc
vpmuludq
pushf
jge
inc
push
fwait
xchg
nop
out
rcrl
stos
dec
fimull
pop
adc
stc
sub
repnz
or
mov
stos
adcb
adc
movsb
sbb
adc
push
in
movsb
dec
mov
ret
pop
cmc
shll
loop
mov
clc
jmp
scas
cmovge
jle
push
mov
cmp
rclb
or
or
inc
test
loopne
and
int
inc
mov
add
shrl
and
mov
cmp
mov
leave
test
mov
jge
mov
mov
adc
mov
das
inc
pop
adc
pop
orb
mov
mov
stc
lahf
jno
push
pop
push
fdivs
in
dec
mov
cmp
mov
add
and
cltd
movsb
sub
out
inc
fucomi
shlb
rorl
pop
mov
shll
inc
jbe
adc
sub
xor
sbb
je
xor
dec
bound
xor
stc
pushf
pop
pop
outsb
dec
fnsave
mov
shrl
ret
jnp
sbb
push
mov
lods
lcall
and
mov
mov
inc
xor
mov
lret
ss
push
or
push
ja
jle
cmpl
inc
outsb
testb
inc
sbb
jno
fs
jp
xchg
pop
fidivs
arpl
cmc
xor
xor
jne
xchg
and
adc
xchg
push
cwtl
test
aaa
cmp
jns
push
outsb
inc
mov
inc
mov
cmp
push
xlat
leave
ljmp
mov
jmp
daa
xlat
iret
lcall
push
daa
out
xor
xor
fs
pop
stc
sub
enter
bound
out
test
mov
movsl
aad
lods
fcoms
lcall
add
test
dec
sub
inc
psrad
cmp
push
inc
mov
into
dec
negb
inc
mov
ss
lcall
lahf
or
dec
ret
push
les
fsqrt
cmpb
lods
sbb
mov
arpl
push
test
adc
ret
or
idivb
test
loop
xchg
cmp
cmp
xlat
push
nop
xchg
and
ss
mov
in
pop
push
push
mov
cmp
aas
pushf
fstps
jns
xchg
testl
xchg
adc
out
pop
inc
inc
mov
lcall
fsub
mov
lods
pop
adc
aam
adc
orl
bnd
and
inc
not
ret
call
inc
pop
rcrl
add
fdivrs
in
adc
xchg
lcall
mov
sub
jo
cmpsb
scas
push
inc
mov
sahf
jns
push
pop
arpl
sbb
xor
adc
mov
subb
imul
inc
mov
enter
out
mov
mov
lret
and
adc
mov
mov
xorl
ss
jmp
inc
cmpl
cld
mov
enter
xchg
inc
inc
xchg
sti
cmp
mov
jns
aad
scas
jne
mov
jle
nop
js
inc
jb
sti
push
imul
mov
jno
push
popa
cmp
ljmp
pop
pop
in
mov
push
fstl
aaa
js
repnz
inc
jmp
aad
mov
sbb
test
cmp
and
ret
lea
jge
push
mov
fnstenv
push
mov
movsb
xor
mov
int3
out
mov
push
lcall
cmpsb
in
inc
test
pop
cmp
lea
xor
or
mov
or
mov
les
dec
sbb
fidivl
dec
push
ret
pop
call
hlt
std
or
imul
push
jle
mov
cmp
jge
mov
xchg
sti
sbb
in
pop
jns
fsubr
add
sub
pushf
sbb
push
repz
adc
or
sub
pop
and
sub
repnz
add
scas
pop
adc
mov
fdivs
jge
lods
fisubrs
lret
mov
sbb
mov
xchg
push
jp
push
mov
pop
fcmove
push
sub
arpl
inc
loope
negl
sub
orb
cmpl
sbb
and
pop
dec
cwtl
addr16
xchg
jb
jne
sbb
jp
ljmp
sub
add
fbstp
popa
add
sbb
pop
les
adc
mov
rcrl
inc
sbb
aas
int
push
movsb
adcl
loopne
sbb
cmp
out
movsb
xlat
int
ret
push
outsl
jecxz
push
sub
adc
gs
sub
sub
fildl
mov
jle
mov
mov
pop
inc
test
adc
dec
mov
mov
adc
cmp
push
adc
iret
sub
push
outsb
scas
mov
mov
scas
cmp
ljmp
sti
fadds
push
data16
push
jne
cmp
hlt
sti
sub
adc
in
cmc
xchg
je
and
ja
jp
dec
ljmp
push
push
loopne
gs
and
pop
cmp
into
jmp
popa
andl
jae
pop
adc
add
mov
in
fists
loop
rcr
push
in
sbb
psubusw
add
pop
ljmp
mull
add
adc
out
cmp
das
addr16
sbb
inc
jae
rolb
mov
idivb
xchg
push
jl
sub
nop
add
add
sbb
lret
mov
lret
adc
aas
mov
lods
ja
jp
add
inc
or
sbb
dec
mov
scas
or
cmp
mov
outsb
adc
aaa
out
mov
dec
adc
mov
les
adc
cmpsl
out
adcl
jo
xor
lea
sbbl
or
cmpsb
arpl
pushf
xor
rcrl
cwtl
cmpsl
inc
sbb
inc
mov
sub
lods
xor
rclb
pop
clc
inc
rorb
sbb
push
adc
and
ljmp
ja
js
jmp
add
inc
or
xchg
xor
adc
ljmp
les
repnz
popf
xchg
pop
sub
lods
jg
adc
pop
mov
scas
cltd
inc
movsb
popf
pop
sub
test
lods
adc
pop
rolb
jle
mov
adc
lret
decl
ret
inc
loopne
push
in
adc
scas
mov
pusha
lcall
ficompl
sti
cmc
mov
or
idivl
dec
fbld
dec
lock
test
and
mov
adc
cmpsl
ljmp
pop
pop
pop
repnz
mov
add
idivl
rolb
dec
xchg
adc
mov
jg
out
mov
test
mov
mov
xchg
ja
pop
jbe
sahf
dec
lret
xchg
movb
cmp
sbb
sti
sarl
push
push
mov
xchg
inc
std
bound
insb
jnp
pushf
popa
push
adc
jne
ret
xor
pop
sub
shl
out
pop
mov
sub
ficomps
iret
sub
push
adc
push
push
stos
mov
push
jp
mov
and
and
jl
push
jnp
mov
ret
lret
bound
add
out
imul
dec
lcall
loop,pn
test
xchg
sbb
jnp
mov
mov
xchg
ret
inc
xchg
sbb
negl
dec
sub
jno
mov
and
add
sti
add
fnstsw
pop
push
ret
cmpsl
stos
idivb
xor
sub
cmp
loope
bnd
rcrb
sti
inc
test
pop
inc
sbb
mov
movb
xor
les
jge
ljmp
add
stc
stos
add
jmp
mov
sbb
inc
xor
nop
out
mov
mov
pushf
sbb
or
dec
or
adc
adc
jbe
es
sub
cmc
push
xchg
sbb
ds
add
cltd
xor
jge
pop
adc
cltd
repnz
test
adc
pop
ficoml
mov
int3
repz
fisttpll
pusha
sbb
dec
fdivrs
test
push
sub
fsts
xor
js
and
icebp
fs
and
sbb
mov
dec
cld
repnz
pop
enter
jnp
fwait
jmp
divb
pop
sub
cmc
mov
pop
xchg
mov
push
and
sub
sub
pop
repz
dec
addr16
loope
es
mov
sti
flds
mov
pop
push
jg
jnp
stc
cltd
sub
repz
lock
mov
or
push
daa
test
mov
sahf
rorb
push
cmp
aaa
aad
mov
shlb
pop
cmp
xor
ds
insl
cmpsb
add
push
into
mov
dec
inc
cmp
mov
pop
aaa
push
dec
xor
test
bound
mov
pop
sbb
inc
js
test
or
jg
push
inc
mov
mov
jg
mov
sub
mov
adc
pusha
out
dec
mov
test
push
cmc
cmpsb
addr16
jmp
push
out
rolb
js
adc
mov
lret
je
daa
rcll
pop
push
std
lock
jl
icebp
adc
jl
cld
push
and
sbb
adc
adc
insb
push
addr16
mov
cmp
lods
je
jmp
mov
sbb
add
or
cld
push
and
sbb
push
aad
mov
jnp
sub
push
pop
or
and
popf
enter
out
les
xchg
sub
mov
dec
outsb
repnz
sub
mov
sahf
je
sub
sbb
xchg
les
jge
adc
or
aaa
push
enter
imul
ja
leave
js
addl
adc
mov
lock
das
jb
lcall
insl
cltd
inc
xor
pop
jmp
cli
arpl
mov
scas
loope
shl
lds
cmp
cmp
out
adc
imul
mov
sub
cmpsl
dec
sbb
push
movsb
cltd
ficoml
fisttps
mov
mov
daa
pop
sahf
sub
pop
jns
dec
sbb
mov
imul
cs
mov
adc
sub
add
pop
adc
cld
pop
mov
mov
enter
xchg
jnp
popf
sarb
out
int
imul
push
mov
adc
pushf
lods
adc
out
pop
add
add
stos
cmp
dec
cmp
sti
add
sub
push
imul
call
push
xchg
cmp
dec
dec
xor
add
scas
lds
cmp
pushf
outsl
sub
add
inc
dec
dec
pop
stc
jne
imul
lret
addr16
cmp
add
shlb
loop
in
adc
in
int3
push
cli
pop
sub
rorl
cmp
or
jle,pn
jle
jb
xchg
pushf
jno
aad
ljmp
dec
aaa
mov
andl
jae
add
add
xchg
sbb
pop
test
pusha
lods
xchg
mov
jecxz
scas
jmp
xlat
xor
in
test
je
mov
mov
pop
inc
les
movsb
fistpl
in
insb
mov
jbe
push
push
enter
movsl
push
movsl
arpl
scas
pop
pop
sbb
add
or
pop
stos
addr16
popf
mov
out
lods
iret
fcom
lcall
fistps
ja
or
das
or
mov
rcll
shll
push
lea
popa
aad
mov
popf
mov
clc
jne
arpl
pop
arpl
mov
cmp
cld
fmul
xlat
dec
pop
test
mov
jb
jne
dec
and
mov
cmp
pop
sub
clc
dec
xorl
mov
mov
mov
in
jecxz
in
ss
hlt
cmpsl
adc
adc
jb
inc
dec
ljmp
rorb
ds
mov
adc
sarl
mov
or
adc
cmp
outsl
mov
in
and
and
arpl
or
sbb
test
popf
dec
test
xor
or
addl
out
iret
mov
mov
dec
test
or
mov
into
mov
cmp
imul
jmp
fldl
adc
mov
aaa
add
sub
aam
add
push
addl
mov
pop
daa
or
add
imul
pop
aaa
inc
ljmp
xlat
mov
dec
cmc
leave
imul
mov
or
jne
sbb
sbb
add
sbb
outsb
mov
and
jae
cmp
call
cmc
dec
cmp
fcmovnb
and
xor
jae
ror
pop
mov
fadd
out
mov
aad
cmp
ja
imul
pusha
es
add
or
ss
pushf
fstpt
mov
test
andb
cld
outsl
mov
mov
xchg
shrb
sub
push
repnz
ret
test
pop
push
or
fucomi
out
les
cs
sbb
das
in
pop
movsl
push
push
movsl
stos
and
cmp
push
in
pop
adc
std
push
ret
loopne
mov
lock
xor
imul
repnz
pop
shll
push
loopne
jo
dec
ja
pop
fmull
in
enter
push
outsb
jne
xor
mov
pop
out
push
in
nop
push
and
loop
mov
dec
dec
jge
xor
enter
shll
lret
fidivrl
xchg
xor
pop
adc
dec
adc
xorl
mov
or
jge
pop
in
mov
ljmp
testb
loopne
xchg
adc
mov
das
and
fwait
cmpsl
ds
je
dec
adc
outsl
insb
pop
inc
jno
ret
inc
inc
sbb
mov
mov
call
stos
pop
loop
lods
jnp
push
rolb
mov
loop
jo
andb
mov
mov
mov
arpl
pop
pop
popa
rcrb
sub
in
or
mov
add
outsl
xchg
cmp
xchg
enter
incl
mov
adcb
repz
pop
test
xchg
jnp
fstl
jne
sahf
sbb
push
mov
mov
mov
lcall
cmp
cmp
inc
ret
cmpsl
call
dec
sbb
fnsave
repz
mov
aas
cmp
test
fimull
mov
fwait
jp
cmp
mov
es
adc
jns
ss
inc
mov
daa
in
hlt
sub
in
and
mov
dec
sbb
and
fst
repz
xchg
push
stos
cli
cmpsl
add
pusha
in
and
or
in
movsb
sub
fidivl
add
inc
pop
inc
mov
sbb
mov
stc
push
mov
adc
mov
lret
and
sbb
dec
jge
nop
dec
push
aad
int
cmpsb
rclb
movsb
mov
inc
pop
stc
leave
lcall
bound
fistpll
cmp
push
aad
mov
mov
xchg
mov
push
scas
rcll
enter
add
orl
ret
rclb
pop
xchg
jmp
insb
outsb
lahf
out
add
ficompl
inc
xchg
push
mov
jnp
mov
aaa
or
mov
xor
test
test
mov
push
xor
mov
scas
icebp
and
push
jno
or
mov
push
xchg
stc
and
fimuls
and
icebp
clc
pop
rcrb
xlat
xchg
lahf
dec
cltd
xor
pop
aam
sub
add
push
fldl
in
lahf
add
xlat
push
dec
inc
mov
lret
cmp
mov
pop
push
idivb
roll
loopne
mov
fldenv
loopne
test
push
sub
test
sbb
cltd
inc
into
pop
scas
loop
stos
je
pop
in
dec
xorl
pop
bound
mov
adc
inc
xchg
inc
cmp
jp
mov
imul
cmpl
jo
mov
movsl
insb
sub
daa
mov
sbbb
mov
daa
mov
arpl
dec
fmul
xor
out
in
sbb
jmp
into
add
hlt
or
in
inc
inc
movsb
cmp
dec
mov
repz
sub
or
cmp
in
inc
mov
mov
rolb
mov
jmp
insb
push
scas
mov
xchg
psubw
xchg
outsb
mov
es
fistl
cli
adc
pop
inc
xor
add
lret
mov
stos
montmul
cmpsb
ljmp
xchg
out
mov
iret
sub
jnp
lods
jae
mov
lods
imul
xorl
shll
fistpl
push
loope
int
sbb
fldcw
arpl
test
inc
adc
xchg
and
push
cmpsl
test
sbb
adc
or
ss
lret
mov
adc
jne
mov
inc
cmp
mov
test
andb
inc
sub
push
push
sbb
mov
mov
mov
inc
lds
jno
in
or
and
fbld
in
clc
negl
imul
dec
push
fistpl
adc
popf
sar
cmp
out
pop
adc
aad
pop
int3
or
lcall
xor
stos
mov
jg
pop
mov
jge
movsb
ja
mov
sbb
dec
pop
stos
das
in
xchg
test
sti
push
xor
dec
push
popf
dec
lods
ret
out
dec
or
pop
ret
mov
jno
cmp
enter
mov
dec
fdivrl
aad
pop
jno
call
enter
fidivs
dec
imul
stos
dec
mov
in
xor
cwtl
ss
stos
sbb
hlt
push
and
into
movsb
mov
fstl
out
adc
out
leave
addr16
shl
xchg
jae
cltd
jl
cmp
iret
xchg
rolb
outsb
hlt
mov
sbb
or
ret
lahf
sbb
pop
mov
sub
jbe
inc
xchg
mov
adc
int3
inc
mov
xor
mov
imul
and
cmp
repz
mov
mov
fsubp
incl
jp
push
ja
inc
ljmp
popa
push
fwait
dec
xchg
cmpsb
movaps
pusha
scas
or
cmpsb
xchg
int
int
into
adc
push
mov
loope
faddp
test
cwtl
int3
scas
xchg
and
cmp
pop
jmp
stos
jb
cmp
inc
dec
movsb
fidivrs
lret
or
fisttpll
aam
stos
lock
jp
lods
push
mov
inc
rorl
inc
mov
mov
mov
xchg
push
mov
push
add
push
mov
sahf
mov
lret
test
scas
sbb
cmp
rcrb
push
pusha
popf
adc
dec
shrl
xor
je
lret
dec
ja
enter
fcmovbe
into
inc
clc
or
push
sti
pop
xor
mov
cld
scas
insl
test
jns
shll
xor
cmp
divb
lods
push
push
or
sub
mov
outsb
call
add
add
loop
dec
in
push
shrb
or
push
int3
mov
out
adc
adc
les
and
and
gs
pop
mov
push
xlat
mov
xor
dec
add
mov
inc
pop
adc
push
mov
pop
inc
pop
add
adc
mov
pop
add
and
dec
mov
arpl
or
aaa
pop
es
cmpl
nop
xchg
xor
loope
cmp
mov
push
cmp
cli
lods
add
lcall
movsb
cmpb
stos
pop
mov
cwtl
pop
sub
mov
fidivl
popa
daa
jmp
in
bound
outsb
mul
in
addr16
loope
sub
mov
pop
psrad
xorb
in
xchg
movsb
jne
stc
dec
adc
nop
je
mov
and
arpl
xor
cmp
dec
mov
lds
inc
jbe
cmpsl
hlt
fimull
add
imul
push
sub
lock
out
jae
pushf
ret
dec
add
sahf
add
lds
dec
out
push
mov
pop
shrb
lea
leave
fisttps
sub
or
push
jno
mov
pop
xor
leave
push
mov
loop
cwtl
xor
clc
and
sub
pop
sub
lahf
shl
fcomps
test
movsl
and
xchg
unpcklps
mov
repnz
xchg
inc
out
sbb
loope
sbb
and
pop
pusha
cld
mov
int3
jno
lcall
cltd
fcoms
add
out
pop
jnp
lea
jo
cmpl
aas
sub
mov
jno
loopne
outsl
aas
repnz
cli
sti
stc
mov
sbb
cld
cltd
xor
pop
call
cmp
xchg
dec
ja
xchg
jge
sub
push
adc
shl
mov
sub
int
pop
test
lods
mov
xchg
pusha
mov
dec
stc
into
out
jmp
fidivl
mov
mov
fnstenv
sbb
add
push
xchg
enter
xchg
rcrb
and
movsl
push
cmp
lahf
jmp
aad
cmc
syscall
enter
mov
push
pushf
and
orb
sub
loopne
in
call
mov
lds
insl
int
sarb
push
je
ss
ret
ljmp
addl
push
jge
mov
stos
dec
mov
xchg
pop
lods
test
add
loopne
and
jb
ds
cmpsb
sar
sbbb
push
mov
les
pusha
xchg
jo
lcall
or
push
clc
push
bound
in
cs
xorb
iret
cmpsl
cltd
insl
test
loopne
inc
subb
jle
jne
dec
cmp
cmp
lods
lock
add
mov
das
mov
ds
adc
push
hlt
jnp
cmp
and
or
mov
xchg
outsb
fwait
inc
xchg
scas
jp
cmc
movsl
fcmovnu
pusha
inc
add
loopne
leave
cmp
mov
into
mov
out
cs
mov
imul
add
sub
jo
or
sub
adcb
mov
or
mov
imul
fdivrl
nop
cmp
and
xlat
and
mov
xchg
imul
jmp
sahf
cwtl
cltd
les
mov
mov
gs
insb
pop
and
mov
jle
mull
dec
mov
add
push
lock
rorb
mov
inc
push
in
cmp
scas
add
pop
mov
jne
sub
test
test
fsubrl
sbb
negl
jnp
cmp
in
je
ss
jl
pop
in
and
loope
icebp
outsl
xchg
fadds
push
test
outsb
out
adc
cmp
mov
scas
mov
jecxz
mov
popa
or
lret
pop
and
xchg
fbld
xchg
popf
mov
pop
xor
ret
stc
or
mov
and
push
sbb
lea
popf
int
movsb
cld
insb
test
mov
ret
jns
cmp
and
cmp
lods
scas
es
imulb
mov
outsb
sbb
inc
push
mov
dec
addr16
cmp
loope
movnti
jmp
arpl
push
lods
movsl
loopne
xchg
incb
cmc
inc
adc
mov
xchg
adc
mov
mov
test
pop
call
pop
aam
cmp
addl
xor
out
les
dec
test
mov
sub
push
out
jle
sub
mov
movsb
test
xchg
cs
dec
stos
rclb
nop
add
fucomp
aas
and
stc
push
jo
cmp
pop
push
cmc
push
dec
sahf
adc
sbb
les
inc
popa
and
mov
insb
xchg
xor
pop
mov
test
std
jecxz
cltd
mov
imul
mov
cmp
popa
jge
jecxz
xchg
leave
pop
xchg
push
lahf
sbb
out
add
adc
xchg
xor
fistpl
aaa
cli
and
sbb
pop
add
add
xor
push
in
loopne
jnp
push
push
jl
inc
arpl
ret
pop
movsl
mov
bound
fnsave
jo
mov
arpl
xchg
insb
aam
in
sub
std
ret
adc
xor
into
mov
ret
lods
cs
movsb
mov
aaa
mov
or
mov
int
fs
test
aad
mov
das
es
aam
inc
sbb
outsl
mov
mov
xchg
xor
das
or
cmp
mov
pusha
mov
xor
mov
aad
add
mov
daa
mov
push
popf
jmpw
popa
mov
test
daa
push
xchg
cs
add
ljmp
nop
xchg
jno
mov
push
rcrl
push
ds
insb
xor
arpl
outsb
inc
jmp
xor
sahf
cmpsb
mov
das
push
pusha
test
rorb
cmpsb
popa
mov
shlb
cmp
push
in
arpl
test
div
jecxz
insb
popf
pop
mov
or
fdivrl
adc
push
add
outsb
xor
mov
sahf
in
pop
pop
add
ds
movsb
mov
iret
add
ds
inc
push
add
push
sbb
hlt
adc
shll
arpl
gs
mov
into
add
pop
inc
xchg
in
push
out
daa
inc
and
pop
test
and
add
push
iret
or
push
xor
scas
mov
std
clc
mov
flds
das
incl
sub
repz
mov
int3
out
mov
lods
mov
cmpsb
sub
fstpl
icebp
xchg
inc
lret
in
cmp
adc
aam
add
push
sbb
jnp
lods
and
hlt
jg
dec
sbb
and
call
mov
push
mov
dec
fldcw
cmpl
jge
imul
iret
xchg
mov
scas
or
testl
data16
cmp
xor
jo
loope
call
in
push
sbb
add
mov
loop
pop
arpl
std
xor
jg
out
push
out
xor
mov
sti
repz
or
jb
mov
push
push
mov
insb
jns
fisubrl
push
and
push
sahf
fdivrs
outsl
andb
push
shll
loop
jp
jns
dec
vpunpckhbw
lds
in
jle
jl
aad
jp
mov
inc
fdivl
sbb
sub
xchg
daa
or
pop
add
mov
gs
cli
hlt
pusha
fs
cltd
cli
out
enter
and
xchg
cltd
stc
push
add
mov
lods
mov
push
out
daa
rol
mov
dec
jo
movsl
rorb
pop
arpl
xchg
pop
repnz
popa
sbb
pop
mov
ds
mov
fcmovne
sbb
add
sub
mov
adc
sarl
movsl
ret
inc
sub
dec
rsqrtps
push
cmpsl
shlb
iret
imul
and
inc
pop
cmc
sbb
push
test
ds
paddusw
inc
dec
rcrb
cld
movsb
pop
xor
sub
nop
sahf
sbb
inc
adc
out
cld
jb
jmp
and
and
sbb
movsl
ret
in
or
add
cmp
mov
sarl
xchg
sbb
mov
pop
fmull
or
lock
loop
lret
push
mov
mov
enter
xchg
dec
pushf
push
aam
add
mov
fsubs
or
and
sub
xchg
sbb
test
dec
jle
push
jmp
push
push
cmp
aam
shrb
into
out
sahf
stos
adc
decb
adc
cmpsb
jmp
add
xchg
xchg
jae
sti
add
jle
mov
or
in
je
push
mov
lahf
rcrb
sbb
adc
fucom
addr16
push
xchg
test
aam
iret
shrl
add
or
inc
rcrl
scas
mov
shr
jno
push
daa
adc
mov
das
shll
pop
filds
aam
jae
xchg
stos
jnp
jle
out
loopne
pop
out
mov
push
clc
out
adc
push
mov
stc
xchg
hlt
stos
mov
bound
mov
xchg
mov
test
jl
sub
xchg
xor
xor
add
xor
cmp
and
clc
lret
xor
pop
stos
fdivs
jno
xor
outsb
repz
sbb
out
pop
js
sahf
lods
bound
xlat
aad
inc
ss
into
jnp
lret
cltd
xchg
int3
test
cmp
mov
xor
repz
ja
pop
repz
jle
xor
mov
lea
sub
add
or
mov
jne
sbb
mov
xorb
gs
mov
xchg
mov
dec
pop
ret
inc
xchg
dec
fwait
jae
or
cmp
add
or
add
fnsave
addr16
ret
arpl
in
inc
mov
lea
enter
out
je
dec
jns
jno
xchg
cmpsb
std
cwtl
pop
inc
pop
mov
sbb
repz
cmpsl
sbb
in
pusha
outsl
inc
insl
jl
add
mov
push
inc
popl
fiaddl
popa
adc
sbb
fadds
inc
call
dec
daa
mov
push
popf
cltd
jg
scas
add
jbe
shrl
push
or
std
mov
popf
mov
sbbb
les
mov
cli
mov
in
xor
and
pushf
cmpb
jge
pop
mov
scas
dec
jge
cmp
out
adc
icebp
push
je
cmpl
inc
mov
fs
cmp
outsb
mov
ret
out
cmp
pop
sbb
inc
hlt
mov
xlat
cmp
xor
sbb
and
lock
adc
jecxz
xchg
icebp
or
mov
mull
pop
lahf
and
repz
jb
sbb
bound
inc
push
mov
ret
in
xor
jmp
push
arpl
in
inc
stos
ja
shrl
mov
mov
clc
xchg
imul
repnz
jg
nop
jmp
mov
imul
aad
pop
mov
push
repnz
ret
cli
add
sarl
and
cmp
imul
sub
xchg
adc
jge
mov
push
sub
nop
or
test
andb
or
stos
and
push
jl
jo
fsubrp
jmp
mov
repz
imul
sbb
les
mov
in
dec
sbb
nop
or
xorb
mov
cmc
mov
stc
clc
xchg
out
mov
and
into
sub
shrb
mov
mov
push
test
shl
sbb
or
cmpsb
inc
adc
mov
xchg
fimuls
aas
pop
ret
mov
jge
mov
mov
dec
xor
pop
ljmp
push
adc
enter
push
and
lods
jo
jbe
das
cmp
or
cmc
jb
cmp
sti
test
test
fldenv
inc
adc
cmp
add
sbb
inc
xorb
lods
pop
test
cld
call
inc
cmp
clc
cltd
int
push
lret
cmpsl
xchg
out
cmp
dec
sub
cmpsb
lods
dec
stos
sbb
mov
adc
xchg
arpl
push
mov
lds
jo
mov
cld
mov
cli
fstl
push
cmp
jnp
mov
stc
dec
vxorps
leave
pop
push
xchg
inc
leave
pop
dec
jne
js
negb
gs
sbb
mov
cmpsb
dec
enter
xor
push
cmpsl
hlt
jge
jp
cmp
mov
pop
loopne
push
lea
xor
cmp
adc
fidivrl
add
pop
mov
dec
fisubrl
test
inc
loopne
jae
xor
test
mov
inc
add
sub
xor
inc
xor
xor
shlb
adc
data16
mov
movsl
loop
xchg
or
push
pop
mov
popa
inc
add
iret
mov
nop
add
fisubrs
and
in
test
mov
mov
mov
xchg
sbb
mov
push
mov
out
add
cmp
scas
je
jecxz
and
in
dec
mov
dec
adc
lods
xor
popf
cmpsl
lds
movsl
xor
cwtl
lahf
aaa
xchg
out
stc
cmp
loop
or
or
xor
mov
and
xchg
scas
cmp
pmulhuw
push
repnz
xchg
js
dec
jmp
inc
faddl
push
adc
dec
add
dec
cmc
out
fbld
jo
dec
push
fs
sbb
jle
out
hlt
fnstsw
mov
push
test
out
mov
jmp
lret
sbb
mov
daa
pushf
xor
xor
add
movsb
sub
mov
adc
iret
sub
test
or
or
mov
jle
mov
pop
sub
hlt
sbb
aas
mov
push
nop
xor
ret
mov
add
iret
or
ret
aaa
bound
sbb
fiaddl
jl
and
mov
push
xor
sub
test
bound
jmp
daa
push
cmp
pop
cmp
mov
leave
popf
cs
popa
fcoms
jno
rcrb
dec
or
mov
add
mov
and
imul
sub
jmp
call
mov
jecxz
sub
sahf
or
add
inc
lcall
lods
xchg
and
scas
test
mov
es
fldenv
gs
popa
pop
pop
mov
popa
jo
outsl
popa
test
sbb
in
xchg
loope
sub
dec
into
cmp
cwtl
je
jp
cs
out
lods
popf
mov
jmp
sbb
arpl
add
mov
fwait
dec
nop
dec
jg
jle
lret
dec
outsl
shll
pop
mov
inc
push
loop
inc
jp
mov
lea
inc
and
mov
rol
mov
dec
std
or
pop
repnz
sub
cmp
add
sub
out
ss
out
pop
xchg
pusha
ljmp
add
dec
sti
outsw
adc
andb
xchg
rcrb
lods
inc
push
ret
push
sub
jbe
xchg
pop
pop
fiadds
cmp
mov
or
sbbl
repnz
sbb
cmpsb
or
and
std
xchg
mov
pop
pusha
pop
int
dec
xor
or
mov
setb
subb
mov
icebp
push
xchg
inc
scas
in
cmp
cmp
js
lahf
pop
fimull
push
leave
movl
pop
jno
xchg
xchg
jp
sub
sbb
jno
mov
lds
lret
in
mov
jge
xor
daa
jne
pop
pop
jg
inc
push
test
stc
jo
sbb
xor
out
rcr
xor
js
imul
xor
push
mov
ljmp
sahf
popa
repnz
iret
mov
pop
jmp
into
cwtl
addr16
xor
and
or
push
dec
test
push
or
mov
xchg
cmp
repnz
inc
jle
mov
mov
leave
in
dec
jecxz
cmp
shlb
jbe
and
lods
sbb
repz
and
cltd
clc
xchg
scas
xor
out
insb
and
sub
or
ja
js
fidivl
jle
lods
pop
daa
adc
test
iret
shll
push
mov
mov
pop
fisubs
pop
or
scas
push
jmp
cmpsl
mov
add
sti
sarb
sub
stos
repz
mov
mov
ds
xchg
je
testl
fcoml
ds
andl
cwtl
xor
lods
xchg
xchg
mov
pop
push
ret
pop
cmc
sub
jge
adc
hlt
pop
jbe
add
test
push
adc
pop
aaa
outsl
push
lea
sub
xchg
mov
sbb
out
inc
xor
imul
push
or
push
outsb
loopne
divl
cmp
mov
je
loope
push
or
xchg
mov
or
test
mov
lods
loop
or
insl
bound
sub
jp
mov
stc
mov
mov
adc
punpckhbw
jo
mov
mov
sbb
out
dec
cltd
adc
push
mov
mov
idivb
out
testb
dec
cmpsl
sahf
into
cli
mov
in
or
cmpsl
jnp
lds
pop
mov
and
icebp
push
cmp
loope
pop
mull
pop
push
negl
or
xchg
or
aas
sbb
adc
sarl
sub
loop
xor
inc
jg
xor
inc
and
and
mov
jp
sub
jbe
dec
nop
lret
jmp
mov
adc
sbbl
push
inc
cmp
addr16
add
arpl
arpl
ds
xchg
loop
outsb
inc
fdivs
rcl
or
scas
aad
lahf
leave
fistl
push
jg
into
or
mov
fidivs
pushf
sub
cmp
jbe
xor
ret
fucomi
mov
shll
xchg
and
jnp
movsl
mov
in
stos
lret
cmp
stos
negb
addb
arpl
sbb
pop
add
adc
adc
popf
aaa
add
imul
jb
sbb
and
xor
test
imul
fmuls
mov
in
mov
loope
pop
cwtl
rcll
adc
ret
and
pop
shl
add
lods
aaa
xchg
dec
fistps
ss
pusha
data16
pop
repz
xlat
inc
idiv
in
mov
lods
test
pop
movsl
cld
jl
jae
jae
add
iret
or
push
xor
sti
mov
xlat
mov
pop
mov
mov
lea
and
sbb
cmp
popf
cmp
xchg
negl
jge
sahf
and
shlb
or
outsl
inc
stc
mov
pop
xchg
sub
test
jb
sbbb
sbb
push
lods
mov
dec
adc
ljmp
push
in
cs
xor
mov
filds
mov
mov
pop
sub
loopne
and
jmp
mov
clc
ds
shlb
pop
imul
jo
ljmp
xor
or
sub
or
repz
mov
jbe
lods
imul
mov
scas
sub
scas
int3
push
mov
push
mov
or
dec
subb
je
pop
add
inc
fistl
jo
out
shll
test
daa
imul
les
es
scas
stc
pop
cltd
dec
leave
lods
xchg
and
sbb
jp
je
dec
das
test
in
sub
mov
cmpsl
popf
out
lea
mov
mov
mov
jecxz
cmpsl
outsb
test
mov
push
rcl
mov
out
outsl
or
dec
add
test
test
mov
sub
xor
leave
pop
adc
lahf
test
icebp
outsb
sbb
test
mov
cmp
test
in
sahf
and
mov
das
push
data16
add
jno
mov
sbb
fwait
cmp
fdivr
std
or
fbld
inc
cmp
fxch
mov
mov
mov
dec
cmpsb
loop
daa
andl
lods
dec
mov
mov
xlat
adc
imul
out
or
push
scas
mov
push
mov
in
add
mov
or
fildll
dec
out
iret
daa
inc
fisubrl
shrb
int3
adc
push
push
jg
or
data16
test
adcl
in
push
and
dec
sbb
lret
call
xchg
jnp
pop
push
xchg
mov
mov
jnp
inc
popa
cs
nop
rolb
sbb
sbb
mov
xchg
mov
mov
fisubrl
mov
in
int
pop
test
push
js
push
int3
shrl
int
call
lds
jp
scas
leave
lret
sbb
xchg
push
jne,pn
mov
cld
xor
lret
xchg
and
sbb
loope
in
lock
cmp
sbb
dec
dec
mov
out
sbb
insl
lock
pop
pusha
cmp
push
in
pop
mov
test
pop
mov
iret
pop
push
push
push
psubb
je
shrb
inc
dec
jo
jmp
mov
repnz
jg
and
test
int
test
addl
or
cltd
pop
mov
test
pop
inc
mov
mov
je
jp
add
mov
sub
or
xor
out
aam
xchg
sar
rorl
cmp
mov
test
loop
stos
hlt
addr16
xor
xchg
pop
sub
xchg
mov
sti
stc
mov
into
or
dec
shlb
sbb
and
mov
clc
xor
aam
or
jne
std
les
add
and
movsb
mov
clc
test
ficoms
test
jle
inc
ror
mov
adc
pop
or
inc
in
scas
je
test
in
fisttps
fs
in
ret
fldl
lea
divl
divb
jle
pop
inc
jge
repz
inc
mov
into
xchg
jbe
mov
sbb
xor
xchg
xchg
enter
or
cwtl
inc
lds
mov
subb
jle
push
push
scas
push
dec
stos
xor
jmp
mov
fwait
rorb
mov
sub
in
adc
jl
push
or
int3
subl
jo
push
test
inc
daa
sarb
adc
cmpsl
iretw
orb
fcmovnu
mov
cs
add
call
sbb
mov
je
pause
cwtl
pop
push
je
xchg
and
inc
fcomi
fistps
and
in
repz
add
xchg
jno
add
mov
call
lcall
fidivrs
fwait
mov
scas
out
mov
xor
mov
or
sub
pop
or
or
outsb
jns
cmp
lods
in
xchg
jbe
mov
orb
imul
sbb
xchg
in
push
xchg
add
adc
das
fbld
subl
cltd
push
xchg
rcr
jmp
inc
xchg
jecxz
inc
inc
jno
sbb
ss
or
or
mov
call
fldcw
cmp
jl
jge
call
jmp
mov
sbb
repz
push
mov
xlat
pop
push
cld
xchg
loopne
sti
fidivs
sub
xor
sub
mov
inc
cli
adc
das
dec
xchg
clc
xor
mov
push
lcall
addr16
or
xchg
mov
fisubs
cwtl
dec
fimull
shlb
cmc
insb
imul
dec
xchg
aam
pop
sub
or
les
pusha
push
ret
cli
enter
nop
push
aam
or
push
in
rcrb
mov
sbbl
sub
stc
dec
test
gs
mov
fnstsw
das
cmp
out
dec
push
gs
into
stos
fisubs
sub
mov
dec
add
dec
add
into
jne
push
clc
stos
dec
xchg
lds
repz
adc
mov
daa
pop
mov
and
jnp
notb
dec
int
inc
inc
push
insb
jecxz
xchg
mov
xchg
cli
mov
sub
je
xchg
arpl
xor
cmp
sbb
insb
add
in
cmpsl
jae
ljmp
leave
mov
xor
sub
fdivs
add
loop
ss
jl
movsl
rcrb
xchg
das
or
cmp
fcom
loope
aam
mov
aas
sbb
shld
adc
out
inc
fwait
mov
mov
xchg
dec
test
fsubr
insb
cmp
or
mov
rcrb
das
cmp
je
sub
sbb
and
fstps
jge
ret
add
sub
push
dec
xlat
mov
mov
cmc
xor
les
ljmp
pusha
pop
cmp
jg
movb
shr
js
pop
inc
push
cltd
outsl
add
jns
addl
push
loop
out
lcall
dec
inc
sti
push
in
or
insl
test
mov
xorl
jge
sub
adc
lahf
das
push
fisubs
daa
sub
out
jne
call
outsb
dec
sbb
dec
and
or
bnd
fcoml
cmc
sub
push
loop
test
les
int3
mov
or
and
sub
icebp
dec
push
xor
pushf
shll
js
dec
sbb
push
lret
sahf
cs
pop
daa
jns
jb
and
dec
sub
test
shrb
aam
lods
cmp
lret
enter
insb
dec
imulb
imul
outsb
ds
jno
pop
or
in
jbe
fsub
xchg
inc
aas
subl
enter
popf
pop
lret
and
dec
loopne
das
cmp
cwtl
cmp
sub
xchg
sbb
jmp
jp
cmc
shll
gs
fcmovnb
push
mov
mov
sti
push
ss
mov
inc
lea
into
daa
jne
loope
and
sub
sbb
fwait
and
aas
cmp
add
pop
lds
mov
pop
pop
into
ficomps
jmp
push
cmc
lcall
popa
push
cwtl
fidivs
mov
sti
pop
adc
hlt
adc
adc
inc
out
sti
push
push
cmc
pop
sub
push
pop
lods
mov
mov
and
sbb
mov
lods
mov
pop
cmp
pop
incb
and
stc
pop
mov
cmp
scas
xchg
test
loopne
inc
rorb
mov
aad
pop
adc
mov
test
in
mov
xchg
mov
fiadds
ds
movsb
pop
lock
iret
stos
roll
in
aaa
mov
mov
sub
pop
xor
aad
pop
sub
push
ret
add
sbb
mov
push
mov
inc
aas
mov
xor
in
dec
pop
cltd
jne
mov
inc
fbld
filds
mov
xchg
je
mov
leave
dec
roll
loope
cmpsl
mov
sahf
push
sbb
dec
inc
loop
aam
mov
add
mov
pop
imul
push
loopne
push
in
mov
sub
adc
in
lods
cmp
lods
mov
jne
mov
stc
es
loop
push
shrb
xor
xchg
jno
stc
outsl
mov
xchg
mov
push
not
inc
loope
mov
pop
add
jb
add
sbb
or
repz
push
cmp
or
icebp
pop
pushf
lds
jmp
rol
jmp
lahf
aam
xchg
xor
add
movsb
sbb
add
popa
xor
pop
cmp
xor
mov
inc
cli
test
mov
inc
jns
cld
lahf
movb
adc
pop
call
aad
cld
out
jno
sub
mov
sbb
popf
adc
dec
pop
loopne
out
dec
jb
sbbl
xchg
pop
mov
pusha
fcoms
std
push
cmp
mov
or
rcrb
inc
inc
mov
loopne
ja
inc
mov
push
cmp
aaa
int
push
pminsw
loope
test
jns
aad
ret
jecxz
inc
orb
movsl
addr16
dec
jnp
rorb
sub
cwtl
mov
sbb
into
xor
add
push
xor
repnz
add
pop
push
stc
mov
xchg
out
iret
out
inc
lret
push
dec
add
addl
mov
cs
pop
xchg
mov
lcall
add
xchg
stos
rcpps
push
xchg
movl
mov
cmpsl
cltd
cmp
mov
push
jb
push
and
jl
sub
lretw
fildll
mov
nop
mov
jp
and
js
adc
lret
pop
lods
sbbl
or
orl
or
xchg
jnp
pop
or
mov
cmp
cmpsl
das
aas
scas
insl
and
sub
mov
movsl
cs
jg
int3
out
hlt
xchg
mov
xchg
cmc
adc
fstpl
out
or
adc
mov
adc
idivb
into
push
mov
sub
fldenv
je
mov
or
stos
or
je
xor
adc
adc
pop
pushf
into
push
adc
xchg
push
jae
add
cwtl
popf
mov
je
sbb
mov
fisttps
and
and
mov
fimull
dec
cmpsb
mov
push
mov
and
jg
mov
dec
xchg
popa
cwtl
dec
jbe
testb
inc
cmpsl
mov
pop
sbb
pop
pop
out
andb
ficompl
jecxz
sub
int
mov
xor
aas
fbld
aam
adc
add
inc
mov
rcr
aam
jnp
js
fistl
jae
out
xchg
pop
inc
sub
jno
hlt
push
imull
pop
cs
cmp
ret
out
mov
jecxz
bound
inc
mov
mov
fidivl
sub
pop
insl
push
and
and
scas
cmovg
and
arpl
inc
ds
mov
out
fists
adc
jns
jmp
imul
in
rcrb
xor
mov
mov
fadds
in
xchg
xchg
imul
sbb
mov
mov
je
sbb
push
inc
or
lret
push
dec
cmp
loopne
bound
dec
dec
pusha
jb
clc
cmp
cmp
and
and
jne
fbld
jns
rcl
dec
sarl
jnp
mov
mov
jbe
hlt
fdiv
push
fwait
loope
shlb
jmp
dec
outsl
pop
out
stc
lods
cld
test
fstpt
and
sbb
mov
into
jecxz
cmp
jl
lcall
repz
int
dec
ret
xor
daa
jle
mov
daa
cmp
pop
jecxz
push
data16
bound
shrd
ret
dec
mov
and
xlat
neg
xor
mov
add
mov
das
jge
fsubrl
icebp
cmp
xchg
xor
jbe
lea
hlt
adc
das
push
mov
ljmp
scas
jae
jbe
adc
jno
in
mov
int3
inc
xlat
dec
imul
aam
mov
mov
mov
enter
mov
stos
jne
dec
mov
cmpsl
outsl
add
les
pop
jmp
inc
adc
cmpsb
imul
movsb
xchg
adc
sti
aam
jp
mov
mov
aas
push
adc
test
jecxz
subps
imul
sub
push
ret
mov
std
inc
push
rorl
mov
xlat
sti
sbb
jo
shll
xor
sbb
jb
adc
mov
insl
xor
push
xor
cmc
jp
lret
fisubs
mov
sahf
popa
aad
in
mov
into
cmpsl
cmp
lahf
pop
push
aas
sbb
dec
lock
sub
sti
pop
addr16
or
in
addb
sub
or
mov
insl
pop
scas
ss
adc
lods
sbb
imul
cmpsl
mov
xor
inc
shlb
mov
push
add
idivb
inc
cli
push
js
pop
insl
pop
pop
jbe
stc
popf
out
nop
jg
add
testb
test
dec
push
add
sbb
ja
cmpl
testl
mov
add
and
mov
hlt
data16
cmpsl
roll
popa
mov
inc
es
ljmp
stos
fs
cmp
xchg
dec
insl
dec
jl
and
push
pop
sub
adcl
in
fs
js
sbb
sbb
push
xor
incb
cmp
pusha
push
pop
dec
daa
cmp
loope
test
loopne
cmpsb
cmp
lds
inc
pop
test
jge
xchg
jmp
mov
adc
subl
inc
stos
sub
cli
sub
xchg
int3
fists
cli
outsl
add
pop
daa
aam
mov
cmc
xlat
xor
lods
shrb
jge
cmp
jbe
jae
xor
orl
and
fdivs
xor
add
xor
xchg
mov
push
pop
mov
iret
adc
in
mov
iret
pop
xor
leave
lcall
add
lock
sub
or
sub
loopne
xor
es
mov
in
out
repnz
sub
repz
cmp
loope
fcmovnb
or
pop
sahf
dec
fwait
mov
pushf
or
movsb
mov
dec
jg
cld
add
sbb
in
scas
pop
cmp
xchg
cmpsb
popa
daa
xlat
xor
adc
gs
loope
mov
mov
mov
pop
fldenv
push
loopnew
mov
mov
int3
int3
outsl
mov
mov
andl
addr16
and
iret
jle
popa
sahf
jbe
inc
loop
add
test
out
adc
stc
push
and
xlat
dec
inc
loope
in
imul
mov
push
repz
arpl
dec
fcoml
js
xor
enter
stos
push
adcl
xchg
and
pop
ljmp
stos
mov
nop
les
jl
shll
in
pop
xor
push
arpl
aam
mov
pop
outsl
push
mov
movsl
pop
test
xor
dec
jbe
jbe
arpl
xchg
shr
dec
cmp
pop
push
pop
mov
in
loope
and
jmp
repnz
add
gs
lds
and
ljmp
subl
push
popa
enter
les
js
leave
xchg
aas
jg
enter
pop
fcmovu
jne
mov
fldcw
icebp
iret
or
imul
mov
ljmp
push
scas
scas
pop
sub
jnp
cmp
xchg
mov
aas
fwait
jbe
inc
in
movsl
es
xor
push
mov
xchg
sbb
jle
inc
inc
jb
mov
xchg
loope
fimuls
dec
cld
ljmp
push
pushf
pop
add
cli
mov
stos
sbb
ljmp
sub
adc
mov
insb
and
push
stos
ljmp
mov
jnp
dec
cwtl
fidivs
bound
aad
std
jnp
int
int
xchg
ss
lea
mov
and
cmp
rol
or
cmc
xchg
out
rolb
and
or
in
xchg
xchg
mov
hlt
arpl
or
in
out
lock
fwait
cmc
inc
xchg
popa
pop
clc
dec
and
popf
lcall
stc
sarl
andl
jmp
call
sub
fimuls
fisttps
sarb
and
pushf
rcr
sbb
sbb
lods
mov
jecxz
lret
push
add
jecxz
jmp
push
push
outsb
jns
ret
sub
insl
psubusb
es
xor
jl
lcall
inc
fimull
xor
shrb
cltd
dec
dec
fcom
inc
and
and
dec
pushf
leave
ror
dec
aaa
inc
sbb
mov
push
shl
out
adc
aaa
pop
inc
shl
pushf
mov
popf
arpl
xor
push
mov
loopne
xlat
in
ret
inc
orl
ds
sbb
clc
cmc
ror
adc
popa
movsb
inc
adc
adc
sahf
arpl
ds
push
test
test
lock
fwait
mov
pop
insb
fdivrp
jo
insb
sbb
cld
lds
hlt
or
inc
icebp
movsl
cmp
push
inc
nop
js
cmp
arpl
lds
push
jne
test
stos
pop
push
sbb
stc
insb
sarb
rclb
or
cmpsb
arpl
stos
notb
mov
pop
push
add
sub
sti
add
or
add
dec
shrl
sar
push
loop
cmp
push
cmpsb
or
dec
xchg
in
xchg
push
jae
dec
rcl
jnp
xchg
shrb
pushf
addb
imul
movsl
mov
and
cmp
sbb
push
xchg
sbb
push
fcmovb
mov
push
outsl
lcallw
lcall
xor
lock
insl
push
sbb
ljmp
scas
cmp
test
jbe
dec
dec
jl
cs
and
fcomi
push
outsb
cwtl
or
add
jne
xchg
and
jb
aas
jno
mov
jmp
scas
mov
lock
leave
xchg
out
test
sti
and
xchg
sar
cwtl
cli
fistl
jecxz
insb
cmp
mov
add
adc
or
nop
lods
pop
scas
adc
ds
mov
int
sbb
call
inc
xchg
cmpsb
and
mov
mov
pop
leave
out
sub
ljmp
into
pop
inc
jp
mov
jb
pop
jne
mov
xor
adcl
icebp
lcall
add
loop
sbb
int
pop
mov
iret
jb
mov
push
mov
mov
lea
push
add
xchg
jmp
gs
nop
cmp
add
push
jnp
jo
js
or
xor
icebp
xchg
pop
orb
sahf
ror
das
push
sub
sahf
loop
xchg
stos
dec
sub
loope
push
dec
mov
pushf
ret
lahf
loope
insb
test
rolb
or
pop
mov
cmp
pop
mov
xchg
xchg
insl
cli
icebp
mov
ret
pop
les
pop
incb
xor
repnz
mov
push
cmpsl
jmp
jbe
mov
outsb
xchg
andl
add
stc
dec
adc
mov
andl
mov
xor
mov
push
fidivs
cmpsb
sub
dec
sti
mov
mov
sbb
test
pop
adc
imul
mov
dec
mov
or
jnp
outsl
or
cmp
dec
add
dec
jl
insb
outsl
decl
mov
fidivrs
add
lret
lret
pop
ss
push
xchg
sti
lea
cmpsl
test
jmp
sub
dec
or
dec
mov
loopne
mov
push
cltd
mov
pop
push
ds
push
jp
iret
adc
aam
icebp
outsb
popa
jnp
jns
jl
scas
add
popa
js
pushf
fs
mov
inc
lcall
mov
dec
pop
in
imul
dec
mov
pop
cmp
cmp
in
in
dec
fadds
sti
stos
daa
lock
or
xor
in
add
dec
test
pop
adcl
aam
push
ljmp
fcmovb
out
jne
or
xor
aaa
cwtl
pop
or
cmp
stos
inc
inc
aam
pop
pop
mov
and
mov
cmp
jmp
and
pop
mov
xchg
and
dec
xchg
or
stc
jmp
int
inc
sub
and
out
push
repnz
or
and
test
xlat
push
xchg
jae
mov
popa
aad
sahf
xchg
mov
xor
dec
lea
mov
cmp
outsb
dec
cltd
popa
addb
repnz
je
mov
cmp
adc
xchg
out
mov
mov
xor
dec
push
mov
enter
dec
fwait
push
outsb
out
std
jecxz
insl
cmpsb
loope
and
jae
hlt
iret
outsb
pusha
int3
adc
jb
scas
add
mov
or
aas
mov
and
popf
and
xchg
popf
idivb
xchg
mov
xor
out
push
inc
inc
mov
cmpb
leave
sbb
test
xchg
sub
imul
jp
int
mov
jae
xchg
or
jge
inc
mov
test
cli
stos
aaa
pusha
xor
mov
mov
xor
stos
push
mov
int
sub
outsb
and
test
outsb
dec
cltd
xchg
in
test
push
pop
in
cltd
sahf
xor
dec
adc
push
popf
jns
ffree
pop
push
lock
add
sub
imul
pop
inc
mov
data16
int3
inc
lods
sbb
adc
pushf
pop
cmpsl
or
test
mov
sub
sbb
and
add
cwtl
mov
mov
ss
mov
jns
gs
cs
sub
push
pop
lock
sarb
and
in
repnz
cmp
fstpt
xor
pop
mov
jmp
mov
pop
adc
stc
movsb
fbld
neg
xchg
fimull
popf
ror
jle
xor
negb
xchg
inc
loop
dec
and
pop
cwtl
mov
pop
das
iret
inc
inc
xor
sbb
shll
add
iret
ljmp
addr16
add
add
adc
mov
pop
je
mov
in
stc
jge
sub
in
into
sub
add
or
lea
add
push
mov
jo
mov
rcrb
sbbl
dec
mov
mov
enter
mov
adc
xor
outsb
sbb
pop
ret
decl
mov
mov
push
jae
xor
or
imul
and
dec
out
add
adc
cltd
test
lcall
sub
cmp
std
mov
int
dec
dec
cmc
dec
insl
xchg
jl
mov
aas
mov
shll
adcl
dec
scas
xor
flds
fistps
inc
mov
int3
lea
xchg
ret
xchg
xor
icebp
jbe
and
pop
cs
xchg
ss
jl
jle
jno
sbb
or
and
xchg
leave
sub
jb
fwait
mov
inc
rcrb
dec
xor
shll
add
gs
je
xor
add
incb
mov
adc
gs
jle
push
popa
es
fbld
les
rcr
mov
aaa
jge
jo
rcll
nop
xchg
cmc
sub
xchg
xchg
mov
test
nop
iret
in
pop
add
push
mov
and
enter
jg
dec
aad
inc
xchg
sub
stos
jb
ds
je
inc
xor
mov
push
lret
and
andb
xchg
test
adc
cmpsl
cmpb
addb
mov
leave
lret
add
pop
xor
aad
leave
xor
mov
lret
movsl
movl
inc
xchg
mov
mov
mov
cmp
enter
std
jbe
fnstenv
imull
xor
loop
movsl
fwait
pop
iret
mov
or
aas
imul
aaa
or
inc
adc
cmp
fsubl
xor
and
outsl
lea
and
cmpsl
pop
outsl
int3
inc
mov
outsl
cmp
or
dec
sbb
pop
pushf
pop
pop
movsb
int
aaa
popa
xor
and
pop
in
pop
push
out
mov
repz
repz
pop
int
in
std
scas
sbb
jg
push
outsb
iret
test
jecxz
enter
mov
sbb
pop
test
scas
loope
icebp
inc
inc
dec
pop
add
sahf
lock
gs
push
ss
adc
mov
fldt
pop
pop
divb
popf
je
rcrb
aam
div
rolb
orl
stc
cmp
sub
dec
jne
sarl
lahf
iret
loope
enter
cmc
rcrl
dec
icebp
jb
scas
adc
shr
sub
shl
mov
pop
xchg
or
out
sub
cmp
inc
push
sti
nop
imul
ja
inc
push
loop
cmp
cmp
and
xor
dec
xor
adcb
enter
adcl
pop
pop
cwtl
mov
fcompl
dec
aam
xlat
add
sub
mov
pop
out
mov
jg
lds
dec
cmpsb
adc
mov
lods
xor
scas
lock
mov
push
js
pop
dec
xchg
shll
test
lods
fucom
mov
dec
mov
push
sbb
scas
imul
push
repz
repnz
mov
push
scas
repnz
shll
jne
fwait
mov
out
in
push
xlat
mov
in
movsl
jecxz
xchg
jle
mov
mov
scas
stos
fdivr
push
mov
sub
cli
es
rcrb
add
bound
andb
add
jnp
push
jne
pop
adc
test
pusha
mov
lcall
imul
daa
in
or
mov
mov
cmp
das
dec
adc
lcall
dec
push
or
push
cmp
arpl
mov
ss
adc
mov
mov
fidivrl
fst
dec
mov
xchg
xchg
cmpl
jo
addr16
pusha
adc
fwait
or
adc
mov
mov
data16
dec
jge
sti
xchg
scas
jp
mov
ss
sub
gs
mov
cmp
in
adc
idiv
cs
in
xchg
sti
dec
pop
push
mov
pop
dec
ficoms
mov
jns
and
dec
mov
bound
arpl
xor
jp
cltd
xor
xchg
mov
fistl
lahf
mov
rcrb
lret
xchg
jne
push
fidivl
push
or
dec
xorb
lock
push
ljmp
push
or
jbe
repz
xor
cmp
clc
fistpll
daa
cmpl
fistpll
loopne
iret
scas
add
pop
jo
push
cmp
in
dec
clc
gs
pushf
pop
fsubrl
scas
shll
dec
push
xchg
fisubs
and
in
and
dec
push
cmp
cmp
fistpll
lea
sbbb
or
shrl
push
sbb
popf
loope
inc
sbb
lods
lds
push
jmp
sti
lret
jg
rcll
loopne
sub
add
jl
xchg
fcmovnu
sub
daa
push
outsl
sub
sbb
xor
movsl
call
jo
enter
pop
in
and
scas
stos
mov
mov
push
xorb
pop
mov
insl
jbe
adc
cmp
leave
fwait
stos
jg
fxch
pop
adc
mov
xorb
movsb
pushf
jmp
lds
push
test
mov
lcall
add
je
cwtl
std
push
dec
or
mov
and
push
sbb
inc
inc
cmp
aad
push
adc
sbb
popa
mov
dec
rcr
dec
push
mov
aad
sub
add
push
xor
inc
clc
push
pop
xchg
or
cwtl
pop
stos
pop
iret
ret
mov
pop
inc
nop
arpl
dec
push
push
ljmp
push
lahf
adc
mov
and
mov
pop
dec
or
sub
dec
or
insl
arpl
in
mov
dec
and
cli
mov
push
lahf
lcall
sarl
push
lods
arpl
outsb
dec
and
mov
lcall
sarb
mov
stc
in
sub
jl
out
insl
int
into
and
in
repz
ljmp
bound
mov
repnz
ret
adc
xorl
sub
mov
xchg
jb
mov
addr16
mov
and
dec
sbb
xchg
sti
or
mov
aad
cli
mov
jbe
inc
dec
ss
pop
cmpsb
xorb
adc
dec
jb
ss
imul
call
cmp
pop
sub
ret
popf
and
sub
mov
cs
cmp
div
test
fistpll
cmpsl
add
lods
test
cmpsl
loop
pop
push
mov
sub
add
xorb
cmp
test
sbb
jbe
dec
mov
rcl
test
jo
dec
std
in
idivb
push
call
outsl
and
in
popa
jae
lods
pop
cmp
cmp
adc
int
xchg
mov
sbb
outsl
out
aam
dec
push
int3
xchg
mov
dec
cli
adc
mov
pop
pop
push
incb
adc
pushf
stc
cld
push
ret
fs
lahf
cld
inc
mov
fisubl
hlt
sub
ret
push
sti
out
mov
inc
add
sub
stc
mov
mov
fs
nop
lods
pushl
nop
out
sbb
cs
mov
clc
lret
mov
ja
stos
icebp
out
inc
lods
mov
cmp
dec
cld
ret
jle
es
arpl
movsb
mov
pop
jmp
enter
mov
xchg
dec
out
not
mov
mov
out
ret
xchg
inc
mov
je
jg
outsl
or
daa
fiaddl
call
shll
xchg
ficomps
outsb
fisttps
xchg
fcomps
mov
xor
fwait
mov
in
sub
sub
sub
mov
stos
mov
scas
fnop
clc
jne
and
nop
imul
push
lret
test
and
pushf
adc
sti
push
mov
fxam
xor
push
hlt
jnp
movsl
in
js
scas
push
mov
sub
call
sahf
fcmovu
adc
data16
pop
jo
and
shrb
lds
jo
movsb
rcrb
into
fisubrl
jle
mov
sub
out
mov
fwait
scas
scas
jge
sbb
imul
xor
pop
fistps
push
mov
inc
into
xchg
dec
xchg
inc
pop
inc
sbb
loopne
lea
mov
mov
mov
rol
cmp
loope
sbb
cmc
jge
jl
mov
out
hlt
icebp
js
outsb
cmp
pop
shlb
mov
jp
fcmovnbe
and
add
lods
mov
adc
mov
mov
and
pop
adc
insb
adc
push
lret
push
push
in
pop
cmp
paddb
ret
add
icebp
fldenv
lock
not
jne
fildl
and
xor
mov
adc
rorb
cmpl
gs
popa
fwait
inc
movsl
or
pop
fmuls
adcl
dec
cmpsb
rorb
sub
in
sahf
or
mov
out
dec
mov
jl
sub
push
dec
insl
inc
xchg
adc
adc
fisttps
scas
es
pusha
arpl
fcomps
mov
dec
push
cmc
sub
add
cmp
dec
cs
inc
push
arpl
and
cmp
cmp
pop
pop
fwait
insl
xchg
mov
push
out
dec
sbb
cmp
das
jmp
cmp
repz
pop
clc
je
or
enter
gs
fisubrl
sub
dec
inc
mov
and
mov
pop
leave
push
jge
cli
jmp
fidivl
cwtl
push
and
pushf
cmpsl
cwtl
dec
pop
mov
cmp
and
dec
insl
popf
cmpsb
mov
divb
aaa
cwtl
sarl
inc
inc
adc
pop
inc
jb
sub
cld
mov
call
insw
cmp
pop
in
sub
lods
xchg
and
int
insb
or
dec
mov
sub
je
mov
dec
insb
ja
adc
push
das
sbb
out
icebp
or
xor
sbb
and
sbb
outsb
adc
sbb
jae
enter
xchg
shlb
push
pop
sbb
inc
mov
xor
jbe
call
orl
pop
andb
xlat
lods
xor
test
sti
xchg
adc
dec
mov
inc
call
pop
inc
test
mov
sbb
arpl
orb
xchg
fildl
sub
xchg
mov
fstpt
ja,pt
add
fldt
aad
shr
mov
fcmovnu
ja
mov
or
push
pop
sub
push
ljmp
add
lea
push
addb
out
cmp
jl
fadds
int3
inc
pop
mov
jno
push
ret
inc
stc
inc
and
mov
xchg
dec
mov
icebp
fstl
jle
sbb
and
fmuls
jecxz
pop
scas
scas
in
or
xor
cmpsb
mov
das
out
ja
jno
mov
inc
mulb
out
jmp
sti
es
loopne
jmp
mov
int
push
inc
sbb
aaa
mov
ficompl
mov
cmp
lahf
insl
lods
dec
enter
dec
aam
pop
leave
inc
lods
cmpb
sbb
jge
jge
inc
test
mov
and
or
mov
clc
or
sbb
xor
mov
fsubs
movsl
aas
aam
mov
pop
and
jb
sub
cli
and
into
inc
data16
mov
mov
pop
and
shlb
mov
sbb
fwait
dec
incl
imul
xchg
cmp
out
lods
scas
pop
out
or
ret
jae
iret
adc
cwtl
inc
or
int3
aam
jle
xchg
test
inc
ljmp
pop
lret
pop
sub
or
insb
sbb
ficoms
mov
orl
xor
repz
clc
pop
pop
sbb
xchg
mov
jb
enter
pop
push
dec
mov
aas
mov
adc
xor
rcll
lahf
in
fbld
fcomip
sbb
data16
inc
xchg
or
shl
lods
add
dec
pop
mov
adc
mov
rorl
fs
sub
rolb
fistps
pop
sub
adcb
ret
mov
jns
int
xchg
std
cmp
shll
lock
add
daa
pop
pushf
test
adc
cmpsb
rcll
inc
in
fsubs
pushw
jne
mov
jmp
xchg
push
dec
and
and
adc
add
out
repz
mov
xchg
push
push
lods
pushf
incb
sti
test
mov
or
dec
sub
fst
push
mov
lahf
test
loope
jmp
dec
mov
test
add
cmp
jae
imul
mov
adc
jp
movsl
cmp
sbb
ljmp
and
pop
lds
dec
mov
je
shll
mov
jle
pop
inc
mull
mov
iret
jl
mov
fnstsw
pop
pop
adc
and
adc
cs
call
cmpsb
mov
sbb
and
jo
mov
and
adc
xor
jecxz
dec
add
or
cli
bound
mov
sbb
pop
inc
cmpsb
jmp
sub
sub
mov
mov
inc
mov
in
shrl
popf
inc
push
cmp
ds
adc
fcoml
mov
sub
jb
test
into
mov
inc
out
sbb
dec
push
add
add
movsb
nop
insl
mov
imul
lret
negl
push
adc
iret
in
pop
test
jno
jmp
mov
shl
test
insl
rcr
gs
or
adc
shr
add
fsubr
rclb
mov
cltd
outsl
jp
adc
fbld
ja
mov
push
andb
sti
aaa
loopne
out
sub
cld
sub
lock
add
pop
pushl
jecxz
and
inc
ja
fcoml
pushw
outsb
mov
dec
cli
adc
adc
cmp
dec
stos
leave
sti
mov
jae
test
stos
dec
push
and
lds
push
inc
inc
pop
lock
jns
scas
mov
mov
push
iret
mov
sbb
mov
sub
in
sbb
mov
mov
mov
inc
mov
cmp
and
hlt
in
aam
push
cmp
stos
aam
enter
out
inc
mov
repz
lea
or
mov
pop
lods
rorl
cltd
jb
int3
jle
pop
mov
fidivs
daa
andl
mov
jne
push
mov
cwtl
data16
cltd
addr16
jg
pop
push
pop
ret
add
cs
sub
outsl
add
push
push
adc
insb
mov
push
inc
inc
dec
pop
mov
es
dec
imulb
mov
sahf
xchg
insb
faddp
mov
shrw
xor
jno
jno
pop
sbb
jo
ss
sub
cmp
ss
addl
shr
stc
outsb
sub
fists
dec
and
add
and
mov
mov
pushf
outsl
ss
aam
mov
inc
rcrl
inc
mov
sbb
dec
mov
jecxz
xor
fwait
and
repnz
adc
int
pop
bound
arpl
xorb
lcall
push
pop
or
pop
idivb
add
push
fimull
ljmp
xchg
pcmpgtw
sub
xor
leave
inc
ds
fstl
or
xor
pushf
lcall
pop
jne
fmull
pop
xlat
xor
cmc
dec
and
jae
mov
repz
outsb
scas
into
jg
dec
ljmp
jne
push
dec
cmp
aaa
int
jb
adc
inc
push
je
loope
scas
enter
jp
daa
rcll
aaa
test
mov
insb
sbb
dec
push
xlat
mov
or
or
into
xor
xrstors
jbe
add
cmp
mov
aaa
xchg
push
daa
xor
adc
inc
hlt
arpl
add
pop
jmp
xchg
push
xchg
and
pop
enter
leave
push
shl
popa
add
push
xor
push
shl
ret
mulb
xchg
stos
subl
pop
jl
jne
subb
pop
mov
add
lods
mov
out
shr
outsl
sbb
mov
neg
sbb
cmc
loopne
xor
int
sbb
jmp
cli
or
inc
mov
addl
cmp
adc
sti
cld
jmp
or
out
xchg
mov
jae
mov
adc
adc
pop
mov
hlt
push
sub
scas
mov
mov
adcb
xchg
iret
fwait
je
scas
push
add
dec
mov
repz
sbb
push
pop
hlt
mov
jmp
xchg
movsb
test
and
lods
dec
and
scas
pop
int
xlat
ja
cmpsb
test
mov
and
cs
adc
icebp
in
into
cmpsl
adc
call
mov
pop
pushf
jle
les
jle
cli
push
imul
test
sbb
test
and
testl
iret
or
clc
pop
in
int3
loop
or
add
dec
jne
fmul
aas
and
xchg
jnp
out
pop
push
sub
lock
pop
pop
sahf
test
dec
repz
aam
sbb
mov
xor
mov
das
ja
and
and
call
mov
loope
fdiv
sub
dec
jle
fwait
push
mov
jne
daa
inc
or
pop
xor
and
repz
lea
repnz
adc
pusha
mov
pop
mov
cmp
jge
push
or
dec
fwait
mov
das
cli
add
pushf
popa
push
arpl
push
rcrl
dec
arpl
xor
pop
daa
es
repnz
dec
and
scas
outsl
lods
into
inc
jmp
clc
jp
inc
and
xchg
and
add
dec
aam
fwait
mov
xchg
hlt
sbbb
jp,pn
ds
in
inc
mov
data16
pushw
pusha
sub
cmp
rorl
mov
lods
mov
icebp
lds
cmc
or
adc
add
mov
popa
pop
jne
add
imul
fdiv
mov
lods
adc
or
mov
jg
leave
and
jnp
and
jecxz
push
fcmovb
xlat
shlb
push
jl
dec
jge
cmpsl
sub
aam
je
insb
jge
je
jns
lret
fsts
mov
inc
ljmp
sub
je
pop
fiadds
xor
jp
icebp
fmulp
jae
push
into
pusha
fdivrl
jg
ret
sub
in
test
roll
mov
fsts
or
fistps
dec
dec
adc
mov
scas
in
sbb
rcl
push
std
xor
movsl
daa
xor
pushf
or
pop
aaa
fisubs
sti
rcrb
repz
xchg
andb
push
popa
cld
loopne
pop
sub
mov
mov
iret
lock
pusha
jns
dec
mov
jne
push
and
xchg
in
jns
fs
movsb
jae
add
sbb
lods
aas
outsb
hlt
stos
mov
lock
pop
sbb
in
mov
pop
icebp
xchg
sub
mov
cmpsl
cwtl
or
or
jl
sti
jns,pt
inc
out
lar
pop
nop
inc
mov
scas
das
ss
mov
mov
loopne
sub
cli
push
fadd
inc
mov
mov
jb
addr16
adc
shrb
std
out
mov
test
cmp
mov
pop
insb
pop
adc
call
movsb
xor
aam
xchg
cld
nop
inc
in
sub
ljmp
int3
add
int
mov
fs
mov
in
pop
aaa
aam
repz
inc
iret
test
adc
cmpl
mov
push
aad
pop
leave
ja
mov
mov
push
xchg
inc
mov
test
fstpl
push
sbb
cmp
xor
shrb
lds
scas
imul
je
xchg
lret
sub
int3
jle
sub
adc
push
or
clc
mov
xor
lods
xorl
outsb
mov
and
aam
repnz
or
test
testl
mov
sbb
mov
xor
mov
push
daa
out
mov
mov
xor
jb
push
cmpsb
cmpsl
aam
popa
scas
cmp
xor
xchg
adc
lahf
pop
popl
cmpsb
push
fs
xlat
lahf
lahf
inc
sbb
xchg
es
repz
mov
sahf
pop
dec
mov
and
das
mov
out
in
sub
movl
lea
mov
pop
adc
int
mov
test
push
and
lea
ds
jns
mov
mov
out
dec
xchg
icebp
outsb
mov
or
jno
mov
or
mov
adc
or
mov
in
pop
das
cmpsl
in
sbb
and
test
add
push
inc
or
and
jle
cmp
lret
fmul
test
jae
les
cwtl
aaa
call
aaa
inc
je
ds
mov
push
mov
shr
adc
sbb
pop
push
movsb
push
test
push
or
xchg
pop
cmc
imul
sahf
scas
mov
pop
cmp
sti
xor
rcrb
jecxz
mov
pop
mov
pop
jae
push
mov
es
inc
in
xor
add
xor
shrl
inc
fwait
cmp
ret
adc
loop
insl
popf
lret
mov
add
jae
mov
outsb
cmp
sbb
cmpsb
pushf
dec
or
push
mov
out
cld
scas
lret
sbb
jmp
cmp
push
sub
mov
in
test
xor
insb
sub
and
mov
pop
mov
sub
arpl
fidivs
pop
fistps
push
mov
in
add
pop
paddusb
cmpsb
jl
les
pop
icebp
and
shrb
in
movsb
inc
xchg
push
js
jb
lods
pop
rcll
add
pop
outsl
push
loope
push
inc
subb
cli
jns
inc
adc
mov
fimull
push
add
sarl
and
and
xchg
push
mov
das
mov
popa
movsl
cmp
pop
mov
jae
leave
test
dec
pop
cld
ficomps
mov
sub
stc
jmp
inc
xchg
idivb
inc
ja
fldenv
fwait
mov
fiaddl
xor
pop
jno
ja
sti
sub
jb
aam
or
push
ljmp
cmp
cmp
mov
psubusw
mov
negb
roll
mov
sti
cmp
sbb
in
sub
jmp
enter
jle
sbb
sarb
gs
jge
sub
jnp
in
imul
data16
or
test
fimuls
icebp
cmp
pop
pop
xchg
xor
je
in
movsl
adc
sarl
sbb
test
jns
shrl
fisttps
or
fadd
cmc
popf
bound
xchg
inc
shr
and
mov
inc
mov
mov
xor
test
sbb
mov
out
std
xchg
in
sbb
das
mov
aad
jo
lret
repnz
sahf
call
pusha
dec
mov
test
sbb
outsb
out
mov
enter
add
push
jbe
bound
mov
clc
add
jl
lods
or
mov
inc
dec
cld
and
xchg
pop
scas
add
popa
lods
std
push
sbb
bound
std
movsl
dec
stos
push
push
mov
cmp
adc
lea
arpl
add
mov
push
out
mov
or
jg
std
das
inc
jle
adc
lahf
ret
xchg
movsb
pop
loop
int
je
outsl
bound
in
loop
je
lods
inc
lret
push
movl
or
ja
lahf
inc
sub
cld
cmpsl
ds
adc
mov
push
test
inc
jmp
shl
jns
bound
and
or
mov
daa
mov
push
and
sbb
scas
aad
xchg
xor
push
pushf
mov
pop
aas
jmp
adc
faddl
bound
add
daa
or
adc
inc
in
mov
fucomi
xor
gs
mov
mov
lcall
add
out
in
or
movsl
and
inc
dec
dec
jge
insl
lods
lret
lcall
cmp
xor
xor
hlt
jmp
xor
sbb
out
mov
fldenv
push
lret
stos
and
les
inc
mov
jle
lods
pop
jg
in
ljmp
or
adc
mov
cmp
hlt
lcall
test
jne
dec
sbb
in
aad
and
mov
xor
jo
sub
xor
push
or
sub
sbb
xchg
sub
nop
loop
xchg
pop
fstps
in
jle
das
sahf
fldl
addb
leave
sbb
jmp
cmp
idivb
dec
inc
icebp
mov
fwait
sub
in
les
push
jg
sub
jecxz
add
sub
lcall
gs
mulb
jns
pop
inc
rclb
sahf
jl
loop
adc
icebp
sbb
adc
data16
mov
iret
and
imul
fsubrl
fcmovu
jae
cld
cmp
cmc
inc
pop
xor
and
jl
cltd
pusha
push
add
jg
mov
gs
and
sahf
in
int3
sub
mov
and
and
sbb
loopne
jns
cmp
je
test
adc
xchg
test
mov
mov
jne
arpl
jo
pop
mov
inc
jge
jp
in
cmpsb
push
arpl
pop
and
hlt
sti
repnz
mov
je
les
or
sbb
sub
push
lret
jns
mov
aad
pop
mov
cmp
gs
mov
jge
lahf
in
sub
decb
mov
fisttpl
adc
adc
shlb
xchg
adc
or
sub
sub
and
cld
add
push
sbb
cmc
mov
and
xchg
jne
xchg
push
dec
xor
iret
sbb
mov
jle
inc
int3
dec
sbb
jge
lds
inc
lahf
div
xor
adc
shlb
or
xor
imul
mov
clc
cmp
iret
into
lock
push
pop
movsl
add
and
add
push
jo
not
add
fildl
xchg
lods
adc
pop
xor
ss
aad
pop
add
xlat
stos
pop
mov
mov
mov
sbb
sbb
jge
and
adc
imul
inc
mov
fcoms
jbe
jae
ret
inc
mov
xchg
aaa
es
mov
pop
push
or
ja
nop
push
pop
lods
mov
adc
aad
aas
jle
jno
jl
mov
and
pop
lcall
xlat
fprem
popa
sbb
rol
test
call
lret
pop
or
push
sub
ficompl
mov
mov
and
sub
xchg
fimull
pop
sbbb
push
rorl
lret
jb
push
sub
fs
xor
bound
ljmp
xor
jmp
daa
jmp
das
outsb
rclb
ja
jge
idiv
inc
xchg
mov
stos
push
rcrb
push
mov
divb
mov
movb
mov
dec
xchg
mov
mov
xchg
mov
adc
push
rcrl
fadds
out
lds
fisttpl
jg
js
xor
and
rcr
mov
sub
xchg
push
xchg
jp
adc
push
mov
insb
in
jae
aad
test
mov
jl
mov
inc
xchg
mov
test
call
ja
sbb
leave
das
cli
jns
ds
jbe
fimull
mov
cmp
inc
and
out
bound
mov
lock
ljmp
or
jmp
es
adc
push
test
das
mov
popa
mov
sar
pushf
in
push
add
gs
out
out
fsub
mov
mov
mov
mov
mov
popf
cmpsl
dec
cs
sub
add
xchg
test
ds
jecxz
xchg
pusha
inc
in
add
scas
jno
xchg
lcall
xchg
jp
jbe
mov
push
fisubrs
iret
cmp
pop
lahf
notb
adc
mov
bound
mov
insb
fnstsw
mov
push
xlat
pushf
cmpb
out
mov
xchg
xchg
inc
imul
sbb
insl
xchg
mov
fcmovnu
jmp
fsts
xlat
cmp
je
mov
xor
fs
jae
xchg
pop
cli
in
fnstenv
and
jns
push
mov
pushf
push
out
lahf
mov
clc
popl
int
ja
push
in
jmp
and
outsb
test
cmp
jb
jnp
pop
inc
mov
lret
shrl
ret
adc
pop
jns
arpl
faddl
fists
inc
jle
inc
jo
xchg
dec
inc
jp
dec
push
push
divb
and
jg
les
std
jb
dec
push
lods
push
mov
leave
xor
scas
jns
or
loopne
insb
rorb
sbb
mov
mov
jge
push
push
pop
cmp
shr
fwait
xor
dec
push
in
not
mov
pop
mov
xchg
push
js
int
bnd
adc
jmp
pop
ret
mov
adc
out
and
add
xchg
imul
mov
ja
adcl
fisttps
mov
outsl
add
adc
sub
jg
jecxz
jl
pop
imul
add
push
faddl
push
push
add
loopne
lds
inc
mov
mulb
sbb
lcall
cs
lahf
inc
mov
xchg
xchg
lret
inc
and
das
adc
and
popf
sahf
fwait
mov
inc
insb
push
cld
aas
aaa
pop
int
or
shl
pop
dec
cmp
or
adc
or
pushf
jnp
cmpsb
cmpsb
or
mov
call
jecxz
add
adc
movsl
xchg
mov
rol
cmc
pop
xchg
jmp
jg
sahf
notl
xchg
popf
mov
cmc
xchg
dec
xchg
cmc
inc
stc
sbb
jge
mov
aad
push
add
sti
adc
pop
pop
insb
xchg
subb
fisttps
mov
int3
xchg
mov
fwait
dec
or
cmp
mov
adc
inc
lock
push
imul
jl
negb
js
notl
push
or
cmp
insb
jmp
dec
adc
inc
cmpsb
clc
sarb
pop
aam
imul
mov
test
xchg
xchg
aaa
pusha
ljmp
fstl
push
adc
flds
sbb
repz
sarb
pop
lret
movsl
arpl
add
push
inc
sbb
in
adc
sub
lods
je
gs
xor
outsb
inc
int
jmp
cmp
pop
lea
shrl
daa
xor
sbb
and
sub
xchg
insl
int3
cmp
fistpll
movsb
mov
sbb
pop
mov
sar
xor
fsubl
insl
dec
loop
scas
popa
notl
stos
stc
dec
jmp
scas
xor
fldt
jo
mov
pop
stos
xor
jae
fistpl
jae
clc
into
pusha
xor
pop
loop
loop
mov
xor
ficomps
sbb
pop
cmp
mov
into
icebp
sub
mov
int3
repnz
lods
fucomi
test
ret
test
push
loop
popa
cli
or
mov
lcall
loopne
lret
insb
outsb
rcr
push
push
cmp
daa
fsubr
jne
sbb
cmpxchg
arpl
rolb
popf
rclb
fldenv
shll
dec
add
mov
rcrb
sbb
je
sbb
int
movsl
sub
inc
roll
cmc
roll
les
rcl
push
add
push
fidivs
adc
cmc
add
or
adc
add
xor
push
xchg
ss
add
scas
pop
mov
jnp
stc
mov
sbb
adc
dec
dec
mov
jno
dec
sub
test
xchg
fstps
jecxz
les
dec
and
icebp
rcr
dec
ja
hlt
jns
shll
mov
dec
js
repz
cmp
sbb
and
xchg
in
movsb
cmpl
aaa
xor
repz
rcrb
pop
sub
or
rolb
mov
mov
mov
sub
pop
sub
inc
pop
das
push
jnp
aad
and
push
mov
rcll
pop
pop
sub
inc
push
out
out
push
fmull
or
lods
or
push
lret
loope
roll
add
outsb
push
cmp
lock
addr16
out
loop
push
icebp
loopne
popf
lret
mov
das
mov
scas
pop
xchg
and
push
and
test
stos
sahf
ret
das
mov
pand
and
lahf
mov
fistpll
cmc
fs
sarb
push
push
mov
inc
hlt
or
inc
push
add
mov
icebp
xchg
cltd
cmp
mov
pushf
mov
jl
rcl
push
popf
pop
outsb
testb
clc
sbb
in
lods
add
es
das
xlat
xchg
jne
rorl
ljmp
dec
in
dec
pusha
scas
das
cmpb
cmp
push
loop
das
fs
inc
push
dec
scas
jns
cmpsl
cmc
dec
pop
and
js
push
lret
inc
sub
adc
int3
add
into
adc
adcl
inc
inc
mov
inc
gs
inc
xchg
popa
stos
out
cmp
lods
pusha
lret
add
jp
and
adc
cmpsb
lock
sub
mov
jecxz
cmp
mov
je
jne
scas
sbbb
bound
test
in
sahf
and
shl
ficoms
cmpsl
ja
adc
adc
dec
movsl
cmp
sub
imul
rcll
icebp
or
push
negl
jge
bnd
sbb
inc
cmpsl
out
lret
xchg
cmp
xchg
mov
xor
xor
popa
sahf
pusha
in
cmp
icebp
xor
sbb
dec
sarb
sub
leave
jmp
dec
mov
mov
addb
nop
test
in
sub
sbb
mov
jl
mov
cld
popa
lods
test
stc
pop
scas
dec
pop
mov
mov
mov
inc
or
mov
rol
popa
add
or
jle
inc
roll
mov
xor
adc
mov
xlat
jmp
rclb
pop
jno
scas
das
jb
mov
mov
mov
dec
cmp
mov
int3
ljmp
sub
dec
pop
fwait
and
mov
rol
sar
xchg
and
int
jo
adc
push
push
fidivs
stc
or
les
jo
pop
unpckhps
lahf
jne
dec
scas
mov
adc
push
sub
and
lea
push
pop
faddl
xchg
push
int3
inc
stos
ret
inc
push
loope
mov
mov
push
xchg
syscall
mov
enter
data16
and
dec
mov
cwtl
jmp
dec
xchg
mov
fdivp
movsl
inc
add
mov
shll
stc
cwtd
in
xchg
clc
jp
lea
mov
mov
xor
jb
mov
cmpsl
dec
das
push
xor
ret
addr16
mov
jg
and
mov
nop
es
jb
and
jmp
in
push
push
lahf
xor
popa
loop
rorl
loopne
xchg
pusha
push
jae
adc
fsubl
mov
call
push
xchg
or
in
ficomps
ds
repnz
adc
ror
invd
jbe
test
movsl
mov
clc
mov
ja
popa
sub
nop
clc
pop
push
sub
sti
aaa
jmp
jp
or
mov
xchg
mov
movb
and
dec
jne
push
pop
sbb
add
jge
jle
mov
xor
std
in
sub
out
jg
popf
fucomi
jne
pop
push
xor
inc
int3
call
aas
repz
subl
add
sub
aad
xor
sbb
add
cltd
hlt
mov
xor
daa
test
lret
out
or
sub
cmpsb
aad
lahf
popf
jp
sub
xor
rorl
aam
imul
inc
jnp
std
testl
jne
add
jbe
adc
icebp
fs
push
or
jmp
popa
es
pop
call
or
pop
scas
subb
shll
sahf
stos
or
mov
push
xchg
or
aam
xchg
popa
aam
mov
repz
mov
out
popf
jle
add
sbb
sbb
sub
outsl
lods
cld
andl
lcall
stc
xchg
xchg
jae
mov
jg
inc
inc
iret
sub
xchg
cs
pop
sbb
lods
mov
or
push
inc
add
xchg
mov
repnz
stos
xchg
adc
xchg
lret
mov
ljmp
xor
lea
mov
loop
sbb
rcrl
loopne
mov
cmpb
mov
outsl
mov
jae
xchg
cmp
fnstenv
and
in
addr16
pop
and
rorl
lock
out
mov
cs
lock
fisttps
mov
hlt
fwait
lods
mov
icebp
pop
xchg
iret
aam
mov
and
pop
dec
rcrb
ret
jbe
adc
ror
and
mov
adc
aaa
push
mov
imul
sbb
fcomps
hlt
pop
adc
cli
into
popl
daa
mov
cmp
sbb
repnz
ljmp
and
int
jns
imul
adc
rorl
mov
dec
arpl
xchg
lds
mov
pop
pusha
dec
leave
xchg
sbb
inc
out
out
fwait
out
xor
test
dec
sbb
xchg
ret
add
add
pop
cld
ja
outsl
lcall
sub
shll
adc
shl
lock
add
mov
popa
add
repz
pop
cmp
sbb
add
fdivl
sub
insl
insb
mov
adc
jne
aam
idiv
icebp
out
subl
xchg
mull
push
fs
push
push
push
inc
push
xor
sub
cli
popf
test
lcall
gs
in
adc
inc
push
mov
leave
stos
iret
fldt
sahf
push
mov
mov
xchg
xor
add
outsl
lret
pop
or
push
aaa
push
es
out
in
addr16
sbb
mov
mov
adc
movsl
xor
outsl
xchg
fldl
adc
cwtl
aad
add
or
pop
rcl
push
sbb
ljmp
adc
lea
iret
push
push
js
cld
mov
mov
insb
jbe
loope
es
cltd
pop
and
stc
add
inc
fprem1
loopne
sbb
test
mov
add
data16
ds
mov
xchg
cmp
rorb
mov
jp
xor
pop
adc
int3
popa
out
lea
lods
push
push
cmp
jne
mov
imul
sbb
shll
pop
pop
pop
out
repnz
push
sti
pop
push
movsb
pusha
jecxz
cld
xchg
dec
xchg
lock
pop
adc
fst
arpl
cmc
xor
mov
dec
test
js
inc
sti
lods
mov
popf
bound
lods
or
inc
test
aas
out
cmp
mov
jl
sbb
sub
iret
or
mov
push
jmp
mov
xlat
add
cwtl
jne
adc
scas
cmpb
lods
cli
fisubs
jp
ret
popa
lock
cltd
mov
push
or
in
test
sub
decb
mov
sub
rcll
fnstenv
sub
inc
push
mov
es
xchg
inc
mov
and
lods
std
inc
int3
push
jno
dec
fs
lret
gs
ffreep
dec
dec
dec
pop
jmp
lret
ds
aas
shll
xlat
in
das
cmc
xchg
data16
cmp
xchg
push
adc
or
jl
jl
and
imul
fcoml
xchg
or
jno
xchg
fcmovne
fnstenv
inc
mov
cld
inc
add
xchg
daa
dec
push
sti
mov
mov
jb
pop
ds
cltd
ljmp
es
pusha
scas
adc
add
pop
fisubrs
mov
cltd
inc
xlat
jno
jo
dec
scas
imul
cmp
pushf
aam
lods
inc
fwait
clc
test
mov
mov
icebp
xchg
clc
lock
pushf
stos
loop
sub
test
and
xlat
xchg
cmp
mov
outsl
push
stc
push
movsb
jg
jmp
xchg
test
lea
popa
mov
stc
fsts
push
mov
sti
out
xchg
call
test
movsb
mov
adc
scas
mov
add
cmp
push
jecxz
mov
mov
dec
xlat
sbb
rorb
sbb
imul
loopne
xchg
lods
add
in
add
xchg
and
in
je
mov
in
ret
in
add
sti
cltd
out
adc
push
push
mov
negb
jae
in
jp
jo
inc
stos
mov
mov
adc
push
push
mov
outsl
shl
dec
popf
fsts
jg
loopne
xchg
sbb
int
dec
inc
xor
sbb
mov
inc
sub
pop
push
ds
hlt
inc
fucom
sbb
je
lods
and
mov
repnz
mov
xchg
cs
or
scas
pop
loope
xor
add
fdivl
cmp
inc
jns
cmp
movsb
lds
out
sbb
push
ds
mov
pop
sbb
adc
dec
lock
xchg
aam
insb
cmp
mov
jecxz
xor
pusha
xchg
je
test
test
repnz
add
mov
push
mov
aad
aas
in
call
aad
mov
incb
in
int
pop
inc
in
loopne
jecxz
cmp
pop
arpl
dec
dec
stos
mov
gs
cmp
cmpsb
repz
pop
sbb
fs
pushf
adc
movsl
popf
scas
fstpt
pusha
jge
pop
fs
inc
int
or
mov
xchg
pop
jb
lds
stc
cltd
int3
cmc
int
push
imul
xor
sub
lock
cmc
push
data16
test
adc
mov
call
sahf
mov
lret
lods
aaa
stc
add
jno
xor
pop
aam
imul
xchg
xchg
sub
inc
les
int3
scas
in
rcl
jbe
inc
dec
cmpsb
sete
test
in
nop
and
pop
adc
imul
sbb
loop
mov
or
loopne
and
scas
roll
sarb
cwtl
and
lret
ljmp
add
mov
dec
imul
cld
xchg
scas
mov
pop
dec
inc
fs
xor
icebp
negb
mov
push
and
jo
push
jno
adc
jmp
jno
mov
add
mov
cwtl
jge
cmpsb
out
sub
add
pop
std
rcrb
das
adc
ds
or
out
dec
leave
jns
mov
scas
inc
ror
enter
adc
jle
pop
and
adc
jns
ljmp
mov
icebp
xchg
mov
add
cmp
adc
mov
imul
sub
sub
pop
mov
sbb
cltd
fdivr
leave
mov
push
cmp
fs
inc
jp
xchg
popf
gs
mov
lea
mov
rcr
negl
je
mov
js
cmpsl
bound
mov
adc
add
lods
movsb
xlat
popf
fiaddl
lods
mov
add
dec
int
idivb
mov
outsl
pop
outsl
push
aas
clc
xor
sub
push
data16
in
pop
movzwl
fstps
pop
mov
lret
sub
scas
xchg
leave
xchg
xchg
jmp
push
jno
lret
and
push
aam
mov
jns
xor
xchg
sub
jle
cmpl
aas
stos
sti
orb
xor
pop
push
imul
ja
mov
pop
nop
mov
jg
rcrl
insb
stc
cli
mov
dec
aad
out
lods
sub
push
jl
out
add
add
lcall
popf
pop
leavew
std
mov
lcall
aad
dec
dec
xchg
arpl
xor
jnp
lahf
pop
and
jle
and
stos
cmpsb
sbb
mov
jle
push
dec
or
cmc
cmp
push
sbb
mov
dec
push
stos
std
add
negl
icebp
or
jae
pop
dec
out
std
andb
lea
adc
pop
and
mov
in
fsubs
scas
ror
fcmove
and
xchg
jg
test
scas
ret
xchg
es
jp
adc
inc
sbb
push
test
in
aaa
add
inc
out
sahf
push
jp
sbb
mov
fadds
pop
cmpsb
outsb
xlat
inc
jae
fwait
test
xchg
int
mov
push
sub
lea
cwtl
jmp
cmpb
gs
fwait
jl
sbb
mov
pop
pop
movsb
push
fsubrs
sbb
popf
lea
enter
mov
mov
xchg
testl
sub
fbld
shll
sub
lret
in
add
pop
sub
jo
arpl
out
jl
add
in
pop
rorl
inc
xchg
aas
mov
test
loop
and
mov
movsl
or
pushf
lcall
pop
insl
push
adc
mov
imul
cwtl
pusha
mov
jo
nop
cmp
mov
and
cmp
dec
ds
cmp
ret
and
sub
imul
ret
xchg
mov
clc
mov
in
hlt
scas
xchg
xorb
ret
sbb
and
jns
lret
fxch
mov
dec
adc
ficoms
add
jle
lea
cmp
scas
mov
mov
mov
lret
gs
lahf
cmp
push
push
ss
mov
adc
nop
mov
cmpb
mov
loope
mov
lahf
and
out
pushf
sub
sub
popa
xchg
jecxz
pop
xchg
dec
jp
int
bound
cmp
int3
mov
sarb
aam
pusha
dec
fldenv
lock
daa
loopne
pop
ficoms
sti
pop
mov
int3
sbb
xchg
mov
mulb
cmp
jl
dec
insl
pusha
sbb
scas
xchg
mov
mov
fnstenv
ds
jmp
cli
pop
mov
outsl
lods
out
arpl
outsl
dec
jae
xchg
idivl
sahf
fsubl
adcl
mov
stos
or
inc
xor
push
cmp
jne
fmulp
bound
jp
jge
cltd
mov
mov
imul
inc
mov
adc
add
mov
rolb
jp
and
mov
test
aaa
imul
test
adc
fcompl
mov
jp
nop
mov
lcall
jae
jge
into
and
mov
mov
mov
dec
aam
enter
je
mov
and
daa
sarb
cli
push
jb
sti
loop
rorl
out
xchg
jmp
lea
cmpsl
clc
jecxz
mov
clc
pop
mov
cmpsl
mov
fmuls
dec
nop
outsl
sarb
pop
test
dec
cwtl
add
daa
ret
andb
cmpw
mov
es
fsts
pop
enter
mov
mov
fists
push
xchg
mov
and
outsl
mov
les
movl
pushf
imul
mov
imul
mov
and
test
push
xor
or
push
jl
xchg
mov
leave
mov
sahf
push
gs
mov
sarl
jo
push
dec
shl
and
xchg
xchg
jmp
sub
pop
mov
leave
cltd
pop
ljmp
push
cmp
test
sbb
mov
inc
subl
jmp
jb
adc
dec
adc
iret
and
mov
aad
fs
loop
stc
adc
sub
in
mov
iret
mov
das
fisubrs
scas
pop
xor
daa
xchg
jnp
xor
mov
dec
jae
and
mov
mov
add
loop
inc
divl
test
and
push
fcmovu
xorl
and
int
lds
jae
scas
sbb
mov
adc
aad
out
call
xchg
or
push
or
inc
test
test
cmpsl
in
xchg
mov
in
clc
jbe
rcrl
cmpsb
imul
iret
mov
mov
pushf
in
out
in
loop
xor
mov
mov
insb
cmc
push
inc
mov
out
int
mov
aad
nop
cmp
rcrb
mov
xchg
xchg
adc
fstl
xor
mov
pop
loopne
ja
movhps
ror
js
cmp
imul
cld
jnp
jecxz
inc
call
and
add
jno
jmp
test
xchg
loopne
pop
nop
push
sbbb
mov
push
cmc
push
mov
cmp
push
stos
cmp
aam
xchg
mov
int3
push
std
mov
inc
xor
addr16
loope
dec
lds
add
loopne
mov
addr16
lock
mov
stos
cmp
and
in
icebp
add
jl
add
lods
xchg
mov
repz
add
sbb
mov
push
ffreep
pop
out
shl
push
mov
dec
popf
popa
pop
pop
push
mov
sahf
lret
rcrl
push
lods
test
and
std
sbb
mov
das
push
in
adc
loope
xchg
and
outsb
or
negl
and
mov
or
pop
addr16
jo
jb
dec
or
into
in
cld
outsl
sub
mov
push
cmc
stos
sbb
in
jp
and
stos
into
mov
push
mov
sub
jne
je
rcrl
gs
scas
shll
pop
sbb
or
es
jl
xor
jge
cmp
or
push
clc
adc
sbb
sbb
mov
and
xchg
jl
cmp
dec
int
outsb
jae
jg
lret
pop
push
testl
sarl
ja
imul
pop
les
push
add
out
jae
lahf
sbb
popf
sahf
mov
imul
xor
mov
cmc
ja
movsl
ljmp
xchg
testl
sub
lea
ficoml
scas
jnp
xchg
mov
cli
cld
adc
lahf
mov
out
mov
js
jecxz
arpl
fstl
inc
jbe
arpl
jns
cmp
mov
fiadds
int
rcrb
fcomip
jmp
daa
pop
cmp
xor
sbb
shll
out
pop
adc
sbb
test
std
into
adc
inc
aas
je
push
xchg
or
mov
fisttps
mov
leave
jbe
push
lods
push
xor
xchg
shll
add
add
inc
inc
and
sub
jae
je
aam
adc
repnz
ljmp
popf
xor
mov
adc
dec
or
dec
adc
scas
add
sub
ret
mov
fs
ljmp
into
andb
aad
push
sbb
cli
inc
mov
stos
lods
jecxz
jecxz
mov
imul
scas
add
pop
les
lret
scas
jge
jge
imul
sbb
aad
enter
shll
cli
imul
adc
adc
mov
into
xchg
mov
jmp
and
dec
push
cmpsb
pop
mov
jge
xor
jo
mov
mov
push
mov
mov
jl
fdivrs
daa
movsl
sub
jo
push
pushf
xor
mov
mov
pop
inc
test
pushf
add
or
push
ret
and
rol
xor
dec
sub
mov
inc
push
iret
dec
mov
out
jb
imul
test
ret
mov
rcrb
test
pop
lods
fst
sbb
inc
ret
inc
dec
fisubrs
inc
jp
pop
pop
xor
mov
add
cmp
sub
cmp
or
icebp
movsb
sbb
cmp
adc
mov
repz
sti
xchg
dec
ss
shrb
mov
xchg
xchg
xchg
hlt
adcb
mov
adcl
clc
push
adc
push
add
ja
sub
and
jmp
es
inc
mov
sbb
pop
cmp
andb
pop
lock
fucomi
lea
xlat
xor
movsl
pop
fldcw
pop
in
sub
pop
cmp
push
mov
or
faddl
sub
cmp
popf
rorb
in
or
out
jg
dec
insl
sbb
sbb
xor
or
inc
mov
or
out
mov
cmc
add
dec
iret
addr16
out
ja
jbe
mov
push
rcrl
add
adc
pop
in
jg
lea
ret
out
lcall
repnz
mov
lret
lahf
xchg
mov
scas
js
movsl
xchg
add
int3
out
and
jae
leave
add
std
pop
pushf
mov
test
fcoms
rclb
lcall
pop
mov
loope
cmp
test
das
push
pop
adc
inc
out
es
adc
cmp
or
loop
lret
inc
rclb
mov
mov
loopne
loop
out
jns
cmp
mov
and
mov
prefetchw
or
mov
sahf
dec
mov
mov
push
pusha
add
mov
fidivs
sub
mov
cmpsl
mov
or
fdivrl
adc
adc
xchg
movsb
pop
cltd
je
jp
fisttpl
add
imul
mov
mov
and
sti
sub
lcall
or
and
adcl
sub
add
sub
jl
cmc
dec
push
and
jnp
mov
push
jg
mov
push
mov
adc
mov
sub
stos
je
mov
mov
scas
mov
inc
jecxz
inc
popl
or
add
test
fidivrl
xchg
addr16
and
lret
push
add
pop
add
fdivs
adc
lcall
data16
fwait
stos
movsl
pop
je
int3
mov
mov
add
and
gs
xchg
dec
jp
pop
inc
outsl
add
cltd
jp
xchg
push
fiaddl
stos
outsl
xor
push
mov
enter
mov
shl
repnz
mov
push
adc
js
fimuls
add
loope
cmp
lods
and
repnz
and
xlat
int3
dec
cld
pusha
sahf
jno
in
out
ds
iret
lcall
mov
and
outsl
dec
jae
push
leave
pop
dec
es
popf
pop
mov
mov
repnz
add
sbb
jmp
fistps
loope
xchg
cmp
inc
pop
stos
sbb
repnz
cmp
sbb
adc
sbb
xchg
dec
xchg
and
in
rcrb
adc
adc
icebp
sahf
xor
js
pop
insl
addr16
sbb
dec
stc
inc
xor
les
pusha
xchg
add
mov
js
push
pop
ss
cld
dec
xchg
repz
jmp
ret
es
or
test
stc
push
xchg
xchg
pop
xchg
lock
xlat
outsb
into
es
pop
xchg
pop
xor
adc
inc
mov
xor
stos
or
add
fstpl
adc
repnz
mov
xor
adc
cltd
push
ficoms
ficoms
pushf
icebp
scas
in
push
daa
jbe
or
jmp
push
je
shlb
in
loope
sbbl
or
jecxz
mov
xchg
adc
push
jae
iret
add
test
push
adc
andb
test
sub
xor
or
jle
std
imul
mov
test
dec
push
shlb
dec
aaa
cmp
and
add
jb
xchg
lret
adc
mov
jmp
mov
notl
jmp
and
nop
movsb
rorb
fstl
mov
pushf
lret
cmp
hlt
pop
stc
adc
clc
hlt
in
fidivrs
sti
push
jnp
adc
mov
testb
pop
cltd
inc
stc
dec
fldl
sub
xor
sbb
aad
xchg
test
les
popa
dec
outsl
andl
jl
mov
leave
mov
mov
ret
adc
pop
scas
dec
fimuls
sti
pop
jne
int
push
or
xchg
sbb
mov
inc
sbb
out
mov
mov
push
fcmovnbe
or
push
int3
mov
lock
or
adc
insb
mov
mov
xchg
pop
push
lods
or
dec
jne
sti
test
xor
call
and
jg
inc
pop
cmpsb
aas
leave
js
repnz
lcall
dec
xor
xchg
and
sbb
push
cmp
sub
add
jle
stc
sub
adc
nop
das
enter
insb
push
sbb
dec
aas
ljmp
add
lcall
jecxz
sbb
aam
movsl
cwtl
or
popl
cmp
push
in
rorl
movsb
mov
subb
lcall
add
xchg
jnp
das
pop
jg
bound
sbb
xchg
mov
in
sbb
cmpb
outsl
xchg
xchg
jle
push
sbb
int
movsl
in
out
into
add
push
int3
leave
mov
pop
ja,pt
mov
sub
mov
and
out
push
xor
in
xchg
into
flds
addr16
pop
push
mov
lea
pop
push
push
sbb
sub
int3
or
out
jl
arpl
mov
sbb
mov
cltd
push
mov
add
inc
sbb
sbb
adc
and
pop
mov
pop
push
ret
icebp
pop
xor
xor
jmp
mov
mov
lret
test
inc
mov
outsb
cmpsl
pop
imul
xor
cld
push
cmp
insb
aad
push
mov
jp
or
cmp
fstpt
movsl
lret
dec
sbb
movsb
mov
in
in
mov
lea
shlb
dec
int
cld
pop
sbb
dec
cwtl
cmp
inc
lods
stc
movsl
callw
rorb
sti
dec
lahf
hlt
movsl
ss
addr16
push
sarl
pusha
cmp
aaa
pop
ja
fsubrl
les
iret
daa
jbe
lods
or
xchg
pushf
fwait
mov
jno
sti
xchg
mov
les
call
sbb
icebp
je
jecxz
ror
jno
iret
pop
pop
sti
icebp
jb
stos
xor
std
adc
mov
xorl
jae
dec
lock
daa
add
sbb
add
mov
push
adc
inc
sub
lea
cmpsl
mov
jb
jno
sub
inc
insb
das
inc
lds
jmp
jns
mov
in
jae
xchg
pop
ja
pop
xchg
cmp
dec
mov
mov
imul
xchg
mov
add
out
out
aad
xor
xchg
cmp
enter
and
shll
imulb
xchg
in
xchg
cmp
inc
popf
enter
mov
sbb
lock
loopne
inc
xor
and
add
pop
jg
repnz
and
cltd
cli
dec
cmpsl
xchg
es
xchg
adc
js
push
cld
cltd
hlt
jne
push
jp
or
xchg
add
roll
mov
std
ret
mov
adc
xor
mov
cmc
pop
cmpsl
cltd
xor
and
adc
ret
sub
dec
cs
dec
sahf
hlt
mov
sub
in
je
cmp
mov
pop
sbb
cli
pop
clc
int
loope
mov
adc
xor
sub
xchg
arpl
shll
xorl
ret
and
push
ret
jmp
inc
cmp
movb
mov
mov
dec
das
out
test
add
mov
jnp
jmp
loopne
cmc
xlat
and
sub
daa
adc
jge
and
arpl
adc
mov
shrl
push
pop
dec
mov
mov
pop
sbb
mov
js
arpl
cmp
outsb
sbb
loopne
xchg
push
pushf
pop
jecxz
cmp
lcall
rcl
and
jecxz
jecxz
xchg
xchg
stos
or
lret
xor
push
pop
loop
repz
clc
inc
push
jno
ficompl
mov
pop
mov
dec
test
xor
pop
xchg
insb
xor
jnp
cmpsl
call
addr16
cwtl
pop
xchg
jbe
lock
repnz
popa
out
xor
cmp
cmc
pop
imul
movsb
nop
sti
or
or
fisttps
gs
into
pop
das
fisttpll
imul
push
add
push
jle
cltd
push
scas
xor
adc
mov
dec
pop
mov
addr16
outsl
or
out
mov
mov
addr16
shll
mov
mov
scas
and
dec
pop
fnstenv
cld
sub
sbb
xchg
add
jb
es
fildl
rolb
push
std
pop
test
pop
or
jge
lods
out
cmp
adcb
xlat
cmp
mov
lock
shrb
mov
sub
mov
rcl
add
cld
dec
js
push
sub
cltd
mov
dec
push
gs
mov
icebp
sbb
ds
shlb
jb
scas
popa
sti
popa
fbstp
aas
test
push
addr16
clc
pop
dec
inc
mov
out
fiadds
sbb
and
cmp
scas
mov
mov
loop
jecxz
das
jge
ret
pop
jnp
mov
jbe
lahf
xchg
mov
repnz
dec
and
xchg
mov
out
mov
popa
sarb
add
stos
negb
dec
sbb
pop
adc
xorb
daa
pop
repnz
add
in
sbb
mov
fstpl
scas
add
mov
pop
jge
bound
fmulp
and
inc
jg
inc
negb
add
inc
pop
cltd
or
cld
push
daa
iret
repnz
mov
jbe
rorl
hlt
inc
push
sub
or
push
out
push
pop
aad
mov
aam
fcomps
dec
mov
add
adc
ss
jne
push
addr16
mov
sub
lret
push
add
aam
fisubrs
std
into
mov
or
rorb
adc
dec
test
xor
jle
in
stos
ret
sbb
mov
xchg
xor
lret
into
pop
mov
fcoml
lods
push
xlat
and
adc
or
dec
aaa
imul
arpl
movsl
jbe
jbe
push
test
add
fs
sbb
inc
cmp
mov
push
movsb
pusha
loop
gs
push
lods
inc
fadds
loop
je
pop
xor
pusha
jg
cmp
push
test
inc
aad
les
dec
sbb
test
add
push
push
mov
aam
mov
es
jmp
push
mov
in
push
fistpll
mov
or
test
or
negl
push
out
mov
stc
and
int3
mov
mov
leave
das
push
test
out
out
out
pop
xor
repnz
outsb
and
ret
jge
movsl
or
ret
xor
mov
cmp
jecxz
add
sbb
push
push
adc
fdivs
jne
fnstsw
mov
popa
aaa
xor
pusha
and
sar
mov
call
inc
xor
mov
cld
and
push
out
push
shll
push
mov
add
sar
mov
inc
outsw
mov
ret
jle
sub
inc
push
xor
push
mov
outsl
and
ficomps
shlb
sarl
test
mov
call
pop
mov
movsb
rclb
or
mov
cld
inc
add
les
jecxz
sti
push
dec
sub
and
addr16
fdivp
sahf
mov
pop
and
das
jg
pop
sbbb
pop
idivb
stc
pop
divl
in
into
test
pop
jae
cltd
xchg
mov
repz
out
sbb
adc
test
cmp
push
inc
mov
dec
add
sbb
jno
cltd
imull
addr16
pop
fldt
xor
xor
mov
cmp
adc
adc
add
pop
mov
int
jne
xor
add
mov
push
ficomps
gs
push
mov
cltd
jl
ret
adc
and
fisttps
in
xchg
movsb
or
pop
or
adc
ja
push
mov
push
test
mov
sub
sub
mov
and
rol
stos
mov
inc
fists
stos
pop
testl
test
outsb
xorb
pop
dec
xchg
data16
test
outsb
mov
loop
mov
repz
mov
dec
push
xchg
movups
adc
js
xor
std
aas
jl
dec
dec
push
cmpsb
push
inc
imul
imul
xchg
movsl
cmp
xor
mov
or
out
cld
es
xor
cmc
inc
push
je
adc
mov
pop
dec
jmp
sub
fimuls
into
adc
loop
mov
jbe
xor
loope
mov
cli
daa
arpl
insb
adc
xor
dec
roll
mov
lods
cmp
imul
pop
ret
hlt
insb
sbb
das
movsb
hlt
inc
mov
addb
test
mov
dec
pusha
dec
xor
sti
popf
xchg
push
dec
ror
cmp
ficompl
scas
mov
push
or
mov
int3
fisttpl
pop
test
push
dec
add
out
sub
lock
jae
sahf
cmpl
adc
imul
or
mov
adc
testl
lret
mov
pop
cmp
xor
fcmove
loop
jg
push
sub
lds
mov
lock
in
jne
lahf
push
and
push
aaa
out
in
pop
push
test
sub
pop
and
cmpsl
test
jmp
sub
lcall
xchg
sub
fiadds
testl
sbb
cmp
fisttpll
insl
leave
cmp
mov
xor
xor
jne
insl
jb
int
pop
lods
enter
repnz
cwtl
repz
mov
aas
add
add
xor
sbb
iret
test
or
inc
enter
popf
clc
inc
and
xor
dec
pop
jp
cmp
into
stos
insl
out
jnp
xor
lds
xor
fidivl
mov
mov
loop
outsb
daa
add
xchg
leave
ror
mov
nop
inc
xchg
hlt
push
xor
mov
mov
aas
add
push
insb
jmp
popf
xorl
push
xor
rorl
add
call
cli
jmp
cmpxchg
xlat
lret
xor
jg,pn
or
test
and
jmp
dec
rol
push
loope,pn
cmp
cwtl
cmp
rcll
rorb
in
dec
jbe
or
testb
push
cwtl
rcll
mov
rorb
pop
pop
add
stos
jns
popf
sti
mov
mov
outsl
imul
nop
cmpsb
push
jge
lods
lods
test
enter
pop
pop
nop
frstor
rorb
sahf
adc
pop
xor
cmp
loope
mov
jae
lret
xchg
fmul
or
sbb
lds
push
icebp
or
mov
sub
stc
or
cmc
dec
in
xchg
push
or
or
loopne
sub
inc
int
lret
jl
sahf
nop
aam
in
mov
test
faddl
in
or
lahf
adc
cmp
push
mov
dec
aaa
inc
add
sbb
or
das
daa
int3
xlat
jno
mov
rolb
lea
add
pop
insl
mov
sub
mov
lock
xchg
popf
stc
sub
sub
loop
add
pop
out
repz
mov
sub
pop
push
test
clc
or
lret
mov
lret
int
ja
sbb
es
loopne
push
divb
add
inc
dec
das
daa
pop
inc
sbb
out
pushf
arpl
shll
jecxz
cmp
push
pop
les
sub
das
pushf
lea
and
cmp
mov
mov
sbb
sub
mov
cmpsl
push
arpl
xor
sub
stc
pop
aaa
lret
xchg
cmp
addb
pop
push
dec
aaa
cs
jns
sub
push
outsb
pushf
es
mov
adc
cmp
mov
add
das
cmp
mov
push
outsl
inc
dec
push
into
xchg
repnz
adc
xchg
popf
ret
push
jbe
xor
xor
stc
add
lods
mov
xor
stos
or
sbb
inc
and
in
jae
add
loop
cltd
stos
into
add
sarb
and
out
jg
xor
daa
cli
fldl
push
inc
mov
push
sbb
and
inc
cmp
aas
scas
fildll
orb
cmpsl
sbb
xlat
pop
sahf
inc
mov
push
mov
inc
jp
dec
dec
jne
mov
shlb
pop
out
xchg
pop
pusha
nop
fwait
bound
lret
lods
push
xchg
fisubrs
das
mov
loop
cmpsb
xor
push
cmp
ds
jbe
flds
pshufw
cmp
cltd
and
cmpsl
in
or
pusha
in
or
push
inc
cmpsb
add
mov
adc
inc
jge
pop
dec
adc
and
pop
dec
call
sahf
daa
ljmp
jae
cwtl
push
in
dec
lret
and
xorb
cwtl
aam
xchg
subb
dec
jae
idivl
xchg
mov
fsubs
es
in
xchg
addl
dec
movsb
mov
es
push
add
inc
sub
push
add
ficoms
jne
aad
pop
inc
ret
cmp
mov
jns
xchg
dec
popa
cmpsl
outsb
lods
dec
add
sbb
push
cmp
xchg
shlb
sbbl
leave
xlat
xchg
pop
fsubrs
mov
dec
xor
mov
shl
fldenv
fsubr
mov
add
dec
sahf
xor
lret
mov
add
xor
das
dec
push
lahf
inc
mov
fwait
subb
dec
in
movsb
mov
xchg
in
and
clc
or
xor
mov
sti
sub
jb
and
jle
adc
in
cmp
xchg
out
cs
pop
push
jo
testl
test
sbbb
aaa
iret
pop
mov
xor
mov
pop
movsl
and
sub
aad
xor
jp
js
pop
inc
dec
imul
in
and
out
push
push
outsb
jmp
inc
loop
out
test
sbbb
aas
inc
add
mov
and
mov
or
push
pop
inc
push
data16
lret
pop
cmp
dec
inc
add
insb
push
xor
xlat
mov
cmpsb
mov
cmpsb
xchg
inc
stos
popa
rcr
xor
rolb
dec
loopne
je
sbb
pop
sub
or
clc
sub
mov
and
incb
scas
scas
out
fidivs
add
imul
adc
dec
mov
mov
test
outsl
nop
loopne
popf
out
mov
mov
and
add
sub
jle
mov
adc
lcall
test
fiadds
inc
inc
sub
xchg
push
test
inc
jg
loope
pop
js
popf
je
cltd
cmp
lods
pusha
imul
and
inc
adc
mov
push
or
mov
inc
pop
sub
xchg
dec
pop
cli
fwait
and
dec
shrl
and
aad
in
mov
pop
movsb
dec
sbb
mov
or
jmp
addr16
dec
pop
lods
data16
mov
ljmp
arpl
xor
out
dec
data16
mov
repz
xor
cmp
mov
pop
call
add
xchg
dec
sub
das
into
dec
pop
sub
jp
scas
or
inc
lret
in
imul
mov
out
lods
sti
orl
hlt
loopne
rclb
js
fstp
or
aas
out
aas
jae
mov
sbbb
sub
dec
xor
jge
into
dec
idivb
and
cmc
outsb
es
add
and
aaa
insl
push
in
mov
jg
imul
cmp
pop
test
and
mov
movsb
cmp
iret
pop
xor
cltd
jo
push
and
roll
mov
xor
mov
fiadds
push
arpl
mov
mov
jae
rcr
mov
mov
xor
cmpl
mov
cwtl
test
push
ja
stos
pop
sbb
xchg
push
in
mov
xor
pop
fisubrs
add
aad
cmpsb
jmp
out
jns
ja
out
jp
push
dec
test
push
shrl
adc
sbb
mov
xchg
loop
sbb
cmc
loope
sbb
cltd
dec
insb
mov
xor
movb
notl
xor
mov
dec
scas
test
sub
dec
jae
insl
mov
push
rol
mov
pop
pop
sbb
stos
scas
insb
sub
sbbb
shld
leave
add
sub
movsb
push
add
sbb
outsl
gs
dec
lds
sbb
adcb
cmp
add
fwait
je
scas
cltd
sub
repnz
push
shll
mov
sub
lret
aam
add
sbb
cli
xchg
paddd
pop
test
pop
movsb
xor
out
shr
inc
push
sbb
icebp
stos
add
faddp
and
cld
rorl
test
push
jmp
aas
cmpsl
je
add
stc
call
cwtl
pusha
movsl
pop
into
mov
xor
in
roll
push
push
mov
nop
adc
dec
in
popf
int3
xor
fisubs
adc
mov
mov
or
std
fwait
sbb
mov
mov
mov
lds
pop
and
je
or
jns
xchg
stos
cmp
inc
sbb
adc
mov
inc
sti
pop
orb
pop
in
inc
jo
jo
scas
xor
lock
and
ret
lcall
add
xchg
stos
and
sahf
enter
popa
mov
lods
push
pop
add
add
sbb
mov
aad
repz
fists
or
outsb
and
cwtl
cmp
flds
xchg
stos
lods
ja
fidivrs
jecxz
pop
push
inc
fmuls
xchg
push
fs
push
or
cmpsl
ret
xchg
push
lods
test
ss
jp
mov
xor
sbb
jae
xor
mov
fidivs
test
sarb
fcomps
jno
std
mov
mov
pushf
xchg
pop
rorl
mov
es
inc
push
sbb
sub
mov
xchg
sub
mov
cmp
push
mov
push
imulb
mov
xchg
mov
mov
insl
jecxz
int3
addl
xchg
rolb
push
mov
xlat
popa
lret
imul
push
in
rolb
int
push
dec
adcb
arpl
jge
or
shlb
mov
and
out
mov
dec
bound
fs
fsubl
cmp
pop
lea
js
lock
cmp
push
ja
imul
iret
cmp
cmpsb
cmpsb
clc
fs
mov
inc
jne
insb
or
bound
sub
xor
mov
in
loopne
in
insl
inc
sbb
jae
or
mov
sar
push
enter
pop
aas
xor
mov
repz
dec
rol
cmpsb
xlat
enter
push
stc
dec
insb
add
or
sti
enter
adc
shlb
pop
push
jecxz
cltd
cltd
and
and
popa
mov
cmc
xor
jb
addr16
je
ds
subb
jne
roll
rorl
jmp
inc
or
dec
adc
lods
ficomps
jbe
jnp
in
push
andl
shll
and
scas
adc
popf
inc
adc
loopne
call
idivb
ja
push
xchg
out
in
js
fs
push
adcl
lods
aad
mov
dec
xchg
xor
call
inc
adc
sbb
jns
inc
stc
xchg
movswl
and
stc
ds
jg
test
fldt
jnp
dec
add
mov
jmp
or
daa
adc
fs
adc
mov
sub
sbb
jb
mov
mov
xor
xchg
sub
lods
xor
ret
dec
dec
fisubrs
xor
push
xchg
lock
lds
test
mov
mov
add
mov
stc
int
jb
add
and
adc
pop
mov
popf
push
fld
adc
ja
popf
jne
dec
scas
sub
push
enter
jge
aaa
dec
and
sub
imul
fisttpl
shll
pop
fnsave
lahf
mov
ja
cld
cltd
lahf
mov
sub
cmp
cmp
add
inc
scas
stos
repz
mov
popa
mov
mov
leave
sbb
adc
cld
das
inc
jle
cmp
cli
sahf
test
setae
shr
mov
push
ljmp
jecxz
imul
movsl
repnz
call
ljmp
cmpsl
ret
or
cld
push
nop
call
daa
mov
fstl
adc
and
insl
add
or
add
pushf
mov
ret
or
hlt
loopne
push
or
cmpsb
mov
pop
out
mov
ss
xor
test
out
inc
jno
mov
lds
mov
ret
cli
mov
out
pop
cmp
gs
and
mov
jl
dec
rclb
mov
ficoml
sar
rolb
lods
test
add
pop
leave
rcrl
decl
rcrb
rol
gs
cmpsl
jb
pusha
aaa
test
js
popa
ret
lret
ljmp
pop
ja,pt
mov
sub
fstpt
or
adc
iret
out
push
sarl
lret
inc
sbb
clc
mov
cli
lods
mov
iret
hlt
adc
leave
aas
jp
je
bswap
aam
sbbl
and
jle
call
push
in
imul
test
stc
cwtl
jo
shll
int
std
insb
pop
in
imul
and
cmpsl
addb
push
call
jo
clc
xchg
loopne
repz
sbb
loop
xorb
or
mov
movl
hlt
pop
shlb
sahf
das
loope
fwait
cmc
jmp
pop
jns
push
pop
arpl
enter
jge
sar
xor
sbb
dec
dec
out
mov
insb
loopne
mov
std
iret
inc
repz
rcll
push
iret
push
pop
adc
jle
or
mov
cmp
hlt
aad
fsubl
add
pop
or
mov
add
add
mov
das
pushf
arpl
pop
inc
mov
inc
and
out
testb
or
or
mov
mov
lea
push
xor
das
loop
pop
xor
or
out
rcll
inc
jb
mov
mov
stc
stos
mov
data16
es
lahf
dec
aam
aas
cmp
ja
or
or
xchg
mov
cmp
xchg
dec
pop
aaa
bound
push
shlb
push
sbb
sti
xor
cmp
cmp
mov
pop
or
push
test
fstpt
sub
stc
mov
lods
add
fwait
aam
xchg
movsb
adc
scas
hlt
or
mov
mov
cmpsb
lock
rcrb
lret
mov
int
dec
mov
inc
pop
or
mov
xchg
cmp
cli
jo
dec
outsl
cmpsl
cmp
dec
ds
mov
cmp
sti
test
lea
add
lret
pop
push
lret
sbb
out
pop
jge
mov
mov
jmp
lods
cmp
mov
bound
mov
inc
add
or
rcrl
js
pop
dec
pop
mov
jno
pop
mov
xchg
mov
xor
xchg
movsb
clc
jge
ss
rolb
fwait
mov
jg
inc
xor
xor
cwtl
mov
movsl
bound
dec
and
jge
mov
into
jne
push
mov
ja
mov
mov
outsb
movsb
leave
rcl
push
test
push
mov
xorb
dec
inc
and
mov
in
repz
out
in
lret
mov
push
in
inc
jg
sub
cmp
cld
int
icebp
dec
add
xor
das
and
mov
data16
dec
into
mov
xchg
cli
pop
rclb
cwtl
arpl
aaa
std
data16
stos
and
or
sarl
mov
adc
xchg
mov
out
dec
dec
xlat
addr16
push
je
xor
sbb
sub
je
ljmp
test
rorl
aad
jnp
lret
add
aas
outsl
xor
or
mov
cmpsb
or
push
xor
fnstsw
jecxz
pop
push
jmp
in
xlat
adc
lcall
add
mov
andl
mov
and
xor
jns
push
xorl
ds
or
xchg
sbb
pop
lret
jle
gs
ret
push
cmp
jp
add
or
pop
mov
push
add
or
and
insb
push
xchg
push
mov
fimuls
inc
iret
leave
sub
jmp
icebp
sbb
data16
and
push
inc
push
fnstenv
xor
inc
out
adc
push
mov
lods
mov
ds
pop
jae
sub
cmpsb
pushl
sti
and
adc
sub
inc
pop
loop
clc
push
and
in
into
fldl
cwtl
jmp
in
nop
push
rclb
push
cmp
jae
adc
outsb
add
pop
or
jbe
insb
xor
inc
cmpsl
rcll
cmc
inc
pop
mov
sbb
and
pop
mov
and
in
mov
rorl
xor
fwait
mov
iret
in
mov
sub
jno
loope
xor
fildll
cmp
mov
add
sub
jmp
and
je
and
out
jbe
sbbl
pop
ret
mov
xchg
xchg
and
add
push
jne
inc
sbb
mov
xcrypt-ecb
cmpsl
dec
inc
mov
lahf
gs
lods
push
clc
push
ret
push
fisubrs
cmpsl
test
mov
pop
mov
cmp
pop
mov
adc
lods
cmp
push
push
push
dec
aaa
sti
loope
add
xchg
add
inc
loopne
xlat
and
shll
and
addr16
push
pushf
pop
dec
dec
mov
aam
xorb
fcoml
xor
pop
hlt
enter
adc
adc
or
inc
aad
push
jle
mov
adc
xchg
push
adc
arpl
mov
pop
outsl
add
pusha
fistl
jmp
sub
fdivs
dec
outsl
push
pop
aas
add
adc
or
adc
pop
arpl
inc
aaa
lahf
test
test
repnz
data16
xchg
cmpsb
add
and
setbe
sti
cli
imul
imul
insb
cmp
push
xchg
fists
shl
inc
xchg
jl
rorb
jmp
ds
jl
pop
adc
dec
loope
mov
mov
adc
out
jno
inc
mov
ljmp
xchg
add
repz
movsb
jl
push
hlt
mov
inc
or
and
adc
cmc
push
hlt
movsb
mov
arpl
ljmp
or
je
mov
leave
scas
rolb
repz
dec
dec
push
rclb
dec
push
add
cmp
mov
mov
xor
inc
std
cmp
test
ret
fimuls
cld
cmpsb
out
xchg
xchg
sub
dec
addr16
enter
cmpsl
mov
test
sti
shll
scas
or
fwait
dec
adc
jo
mull
shll
pusha
shll
fnstsw
adc
and
sbb
int3
mov
mov
mov
daa
mov
out
or
jnp
mov
mov
add
cmp
push
xchg
fwait
sbb
arpl
loop
jp
stc
pop
or
scas
mov
test
outsb
add
cmp
ja
shr
sub
xchg
mov
cmpsb
rcrl
dec
negl
mov
scas
push
inc
pop
cmp
sahf
jl
sti
xor
push
test
xor
xchg
sbb
adc
orb
inc
jbe
and
inc
jge
popa
push
xor
add
scas
mov
and
push
pop
xor
push
mov
add
sbb
pop
jle,pt
cmp
pop
ss
les
sub
leave
idivb
push
mov
jmp
mov
pop
jl
fs
dec
mov
dec
adc
push
cwtl
xchg
pop
mov
sbb
adc
gs
cmpsl
pop
pop
fs
loope
lds
or
outsl
dec
cmpsb
in
out
push
pop
push
cmp
mov
data16
out
xor
sbb
inc
mov
jle
jnp
iret
cmp
xor
sbb
orl
mov
ja
ret
xor
lahf
fwait
sub
outsl
icebp
xlat
push
lds
dec
imul
sub
xchg
lahf
int
xor
pop
xor
fisttpll
sub
test
into
jp
xchg
lcall
xchg
das
lods
dec
fstpl
jns
in
mov
inc
add
gs
subl
ret
int3
fistpl
mov
out
nop
outsb
sti
out
mov
cld
rorb
es
xlat
jmp
sarl
push
lcall
outsl
mov
jns
cltd
mov
aad
mov
xchg
int3
mov
push
hlt
sub
outsb
push
fcoml
xlat
sub
cs
mov
aas
divl
mov
mov
jnp
test
mov
das
mov
cwtl
es
or
add
jecxz
bound
mov
test
ljmp
push
adc
icebp
dec
lods
mov
js
cmpsl
mov
pop
les
and
cltd
push
inc
jns
pop
in
jmp
push
mull
jecxz
lods
fisttpll
jmp
cmpsl
mov
cmp
shlb
sub
mov
cmp
adc
xor
dec
dec
cmp
inc
and
adc
stc
shl
jae
loope
sub
scas
mov
cwtl
fcomi
inc
adc
sti
aaa
bound
in
mov
arpl
pop
fcoml
mov
icebp
jae
xor
mov
push
popf
icebp
sbb
mov
fnsave
fisttps
ret
ret
sub
in
not
or
into
add
shr
cli
fldenv
sub
mov
inc
add
sbb
push
mov
nop
mov
mov
xor
push
mov
cmp
mov
enter
xlat
lahf
pop
inc
shll
sub
xchg
xor
bound
pop
leave
std
in
test
jb
lret
or
sub
xchg
loopne
jb
les
outsl
lret
lcall
mov
mov
mov
lcall
push
pop
sub
jb
shrb
ret
sbb
in
pusha
or
mov
mov
push
xchg
sub
cmp
push
nop
jmp
imul
rcrl
push
inc
or
xor
js
out
mov
inc
movl
in
pop
sbb
sarb
repnz
cs
rolb
push
stos
out
inc
faddl
sbb
push
shrb
xchg
sub
sbb
fisubs
and
dec
xor
rol
sub
jmp
mov
add
dec
popf
jl
or
push
inc
fbld
lret
sbb
pop
mov
mov
shlb
enter
sbb
push
xor
cmpsl
and
xor
cli
arpl
xchg
jle
mov
sub
out
mov
inc
mov
in
cmp
lcall
nopl
outsb
sbb
xchg
mov
xor
push
push
mov
mov
jns
insb
xor
ds
jg
fdivrl
adc
stos
hlt
popf
dec
pop
inc
sub
out
leave
nop
push
pop
and
test
and
gs
mov
sti
mov
fisttps
sbb
rep
aas
test
push
shlb
stos
fdivs
fcmovbe
mov
test
fstpt
cmp
in
sbb
or
mov
or
mov
add
or
dec
cmp
mov
adc
in
dec
cmp
aas
mov
push
call
sbb
jno
sbb
dec
aad
arpl
push
call
mov
and
pop
and
xchg
jno
cli
cmp
stos
call
gs
mov
mov
std
push
adc
mov
clc
pop
push
repz
sahf
rolb
cs
jl
push
lods
lea
pop
daa
and
js
movsl
jg
dec
xor
es
adc
gs
xchg
bound
jg
out
outsl
in
sbb
mov
mov
push
mov
xchg
push
inc
stos
ffree
test
fsts
cmp
inc
mov
into
pop
scas
das
loope
or
push
and
repnz
and
adc
iret
imul
jle
or
cld
pop
frstor
and
push
mov
cmp
lret
or
xlat
stos
push
lret
pusha
push
inc
pop
mov
pop
out
push
mov
push
push
sub
mov
test
cmpsl
mov
xlat
mov
sub
add
xlat
in
das
insb
mov
xchg
sbb
xchg
je
sub
adc
loop
pop
ret
jl
xlat
xchg
push
dec
jp
xor
or
imul
fwait
daa
cld
popa
in
movsl
push
push
jns
popf
nop
pop
int3
lods
and
mov
repz
mov
sbb
lods
idivl
xlat
xor
xor
imul
out
pop
xchg
popf
jmp
nop
sbb
adc
or
insl
enter
pusha
mov
sbb
lret
add
lahf
jae
rorl
mov
adc
sbb
push
leave
mov
or
fists
sub
sarb
inc
mov
push
mov
fdivrp
dec
add
and
pop
leave
popf
fisubrl
icebp
mov
int3
scas
and
clc
int
and
adc
and
jmp
addr16
jnp
scas
jne
mov
add
inc
xorb
jae
xchg
jae
cmc
pop
stos
jae
aam
dec
das
in
lods
xor
aad
xchg
bnd
lret
xor
lcall
mov
pushf
lret
ljmp
cli
cmpl
inc
repnz
pusha
movsl
movsbl
in
repnz
push
cmp
pop
iret
sbb
repz
and
mov
dec
cmpsl
mov
dec
inc
xor
lret
test
dec
xchg
jp
lret
add
dec
sbb
popf
sbb
imul
push
aas
outsl
cmp
and
ret
jge
or
jno
adc
adc
jne
inc
push
cltd
push
vmovaps
jge
cltd
movsl
arpl
inc
out
andl
pop
or
push
outsl
sbb
int3
sub
xor
sub
xor
jnp
icebp
aam
sub
inc
int3
inc
add
fcmovne
sub
mov
push
lret
mov
or
divb
outsl
push
and
inc
roll
inc
or
adc
adc
imul
adc
dec
cs
lock
push
into
popa
xor
dec
cmp
pushf
iret
mov
out
and
or
aaa
icebp
adc
inc
int
mov
sahf
shlw
inc
mov
mov
xchg
mov
xchg
mov
dec
lea
sub
add
jo
xor
repnz
pop
jno
mov
jle
cmp
cmp
shrl
imul
inc
icebp
call
cmp
stos
ds
jae
sarl
insl
add
rcrb
push
xor
rcll
push
test
sti
insl
js
jne
sti
data16
push
test
test
imul
cs
inc
jl
mov
or
test
in
mov
test
add
or
js
aas
aas
out
jno
notb
fsubl
loopne
mov
jmp
xlat
int
fbld
mov
dec
mov
or
mov
inc
inc
or
jno
dec
jae
std
mov
mov
ljmp
mov
add
sbb
xor
lahf
pusha
fbstp
int
jne
das
mov
pop
inc
dec
cmp
cmpsb
or
cmpsb
popa
jno
orl
sahf
sbb
sbb
lock
mov
ds
xlat
pop
ret
mov
cmp
xchg
ja
pop
loopne
sub
imul
add
mov
add
and
and
mov
xor
jb
sub
mov
adc
jge
sub
test
jle
xor
loopne
dec
fcom
push
popa
lret
mov
pop
orl
lods
push
mov
cmp
sub
jns
inc
and
shll
loope
dec
inc
adc
int
pop
orl
std
add
xor
int
sub
icebp
jge
push
enter
fwait
dec
stos
mov
pusha
js
lret
dec
clc
sti
js
xchg
test
shl
mov
pop
mov
lods
test
adc
leave
push
xchg
pop
xchg
shr
push
nop
ret
cmp
rcrl
or
dec
jp
mov
aam
and
dec
mov
add
test
inc
jb
mov
loopne
adc
lea
fstpt
cli
stos
xor
push
jno
inc
adc
test
push
lds
dec
daa
imul
cwtl
ss
inc
pop
enter
leave
aad
mov
mov
leave
sub
test
aad
pop
xchg
in
and
cmp
daa
aaa
dec
adc
lea
aas
push
adc
inc
sbb
roll
cmp
pop
mov
xchg
jmp
mov
hlt
xchg
xchg
mov
jno
gs
ret
imul
mov
xlat
and
xchg
lret
je
pop
dec
mov
jecxz
inc
jecxz
cmp
jmp
mov
xlat
call
fisttpl
or
push
push
xor
dec
inc
or
inc
and
js
aam
mov
cmp
fdiv
jns
in
aaa
dec
dec
sbb
jmp
push
dec
and
jl
sub
fimuls
dec
stos
ljmp
sub
cmp
push
and
jle
pop
inc
mov
inc
cmp
dec
clc
lock
mov
jge
mov
mov
or
leave
cmp
push
stos
pop
add
fnsave
fmuls
dec
mov
clc
cmp
ret
subl
test
adc
rclb
cmp
cmc
movsb
rcll
out
std
and
lcall
inc
add
cmp
stc
mov
dec
lds
adc
call
sub
or
xlat
out
mov
pop
arpl
lods
add
stos
pusha
lret
adc
popf
data16
xchg
sbb
mov
fsubrl
sbb
bound
sbbl
dec
jbe
dec
insl
rclb
sbb
ret
or
lods
mov
cmp
int3
add
enter
pop
mov
push
int
adcl
cmc
cmp
inc
or
lds
faddl
jbe
mov
cs
jnp
sub
daa
je
cmpsb
jl
call
fwait
jo
mov
mov
push
sbb
push
xor
ss
mov
call
sbb
test
push
les
mull
jge
out
mov
fcmovb
pop
ret
add
pop
xchg
pop
imul
pusha
mov
test
push
push
jnp
and
cmp
in
mov
bound
or
dec
test
imul
flds
xchg
cs
push
in
aam
std
push
xor
roll
pop
xchg
mul
ficoms
stos
jno
and
scas
into
mov
jge
jg
mov
icebp
push
ss
xor
mov
popa
insl
push
rol
ret
and
fistps
adc
mov
in
xchg
mov
out
xor
movsb
adc
push
adc
push
cmp
cltd
sub
cmpsb
add
push
mov
mov
mov
xor
enter
and
jmp
push
or
aad
mov
sbb
push
in
inc
pop
inc
cli
pop
or
mov
or
mov
sbb
cwtl
movb
int
jbe
add
lea
push
out
inc
dec
fildll
dec
sub
call
rolb
pop
dec
ljmp
rcl
pop
jno
push
sbbb
jmp
inc
nop
mov
inc
or
pop
test
movsb
inc
nop
and
jle
adc
fsubs
sarb
mov
dec
int
xchg
add
js
pop
jae
sarl
jae
ret
aaa
test
ljmpw
dec
test
rcrb
xor
or
add
jnp
sarb
mov
idiv
cwtl
inc
rcr
popa
leave
jl
mov
out
push
mov
xchg
out
enterw
xchg
mov
dec
rcrb
fsubr
out
pushf
push
into
in
dec
call
dec
sub
imul
mov
iret
lret
dec
inc
insb
dec
inc
mov
lcall
aas
out
xor
pop
push
push
popa
add
pushf
or
test
mov
sarl
out
stos
sub
cmp
sbb
lea
mov
mov
dec
cmp
or
push
rcll
jl
xchg
in
inc
cmp
mov
in
popf
adc
ret
mov
cwtl
addl
xorb
add
adc
or
mov
xor
pop
sub
pop
sbb
fcmovu
pop
lock
xchg
cmpb
push
loope
mov
loope
popa
sahf
dec
cmp
jb
cmp
sbb
push
push
xchg
dec
cltd
int3
orb
mov
mov
fiadds
repz
sbb
fsubrl
frstor
call
aad
xor
das
outsl
aam
mov
xchg
cmp
jmp
insb
mov
jno
fwait
insb
sbb
xor
pop
mov
cld
data16
mov
test
or
xchg
pop
push
loope
call
mulb
movsb
add
imul
inc
aas
xlat
aas
and
cmc
ds
je
cmp
inc
sti
aas
push
mov
inc
dec
arpl
xlat
scas
dec
or
test
cld
cmc
ja
mov
shlb
inc
jo
stos
and
push
xor
pop
sub
and
mov
cmp
adc
sbb
andb
dec
cmp
pushf
cltd
push
add
ds
lds
push
and
lcall
inc
fistps
or
aas
call
xor
pop
in
lret
sub
lds
mov
ret
dec
mov
pushf
dec
inc
inc
add
xor
inc
icebp
gs
shlb
push
daa
or
loopne
mov
sub
movsb
dec
push
pop
lahf
cmp
jecxz
sarl
jae
shll
or
pop
popa
add
mov
mov
aaa
add
jg
cltd
adc
rcll
push
fiadds
jle
clc
xchg
pslld
repz
imul
repnz
mov
pop
dec
pop
jmp
bound
jo
mov
frstor
pop
dec
or
mov
mov
push
cli
call
incb
push
stc
or
inc
adc
pop
cmc
mov
pop
pop
cmp
sub
fiadds
mov
fildl
and
jo
das
ljmp
lods
sbb
xlat
andb
jo
add
cmp
outsb
pop
inc
xchg
jecxz
mov
lret
inc
jg
push
outsb
cli
pop
in
lods
outsb
movsb
add
dec
push
mov
and
pop
inc
cmpsl
pop
in
fcompl
notl
sbb
js
jnp
ret
inc
lock
jae
je
adc
cli
outsb
clc
sbb
or
leave
push
adc
popf
int
aam
cmc
pop
es
sbb
sub
aaa
mov
add
imul
outsl
insb
ss
pop
cwtl
ja
cld
lods
mov
sub
dec
add
and
popf
icebp
inc
repz
in
cmp
xor
fdivr
xchg
cltd
mov
mov
mov
jae
cmp
pop
int
in
pop
pop
mov
lea
lret
push
mov
fdivrs
xor
pop
cmp
add
nop
daa
pop
mov
rclb
jmp
inc
das
mov
cmp
mov
and
outsb
xchg
and
inc
dec
cwtl
cmpsb
jnp
mov
lret
es
cmp
subl
adc
lahf
es
bound
mov
mov
mov
mov
cmp
mov
xor
push
dec
adcb
mov
insb
mov
aaa
cmpxchg
shrl
mov
pop
sarl
lea
mov
mov
and
push
idivl
cmp
xor
sbbb
jmp
jl
stc
out
dec
push
das
dec
lret
es
sbb
lret
jg
pop
pushf
add
pop
or
rcr
jns
test
push
fwait
repnz
mov
cli
nop
in
mov
xchg
repz
aam
xchg
lret
out
sbb
ds
popf
xor
insb
adc
adc
push
jg
fdivrl
call
aad
or
enter
roll
popa
lods
aam
lret
jns
faddp
cs
in
sub
adc
stc
in
je
adc
loopne
cmpsb
pop
lahf
cmp
int
int
xor
inc
xchg
and
rorb
mov
lods
inc
es
lds
sub
ret
xor
shll
mov
aad
lret
add
and
xchg
ja
ret
mov
pop
and
pop
fcmove
xchg
cmp
sti
push
push
lret
cmc
dec
or
mov
aam
jo
jle
adc
ret
and
jb
push
mov
push
pushf
sbb
xor
pop
stos
test
xchg
push
jle
or
add
jo
push
pop
inc
xor
mov
mov
cmpsb
shll
scas
jae
fisubrs
or
mov
aam
xchg
cmp
xchg
jl
jae
ljmp
stc
cld
jb
pop
popf
hlt
mov
jae
lea
lods
js
cmp
ds
cmpl
gs
pop
les
out
pop
xlat
mov
inc
jno
sbb
and
jle
mov
pop
inc
mov
stos
push
out
jo
sub
xor
pop
and
fs
insb
rcrb
cwtl
ret
cbtw
scas
jbe
mov
xlat
leave
imul
enter
jmp
insl
or
cmp
ss
pop
loop
or
cmp
xchg
dec
loop
pop
andb
enter
nop
xchg
xchg
loope
add
inc
cmpsl
shlb
in
dec
in
push
and
or
xchg
fcmovne
sub
bound
xor
jb
popf
enter
js
lea
lret
lcall
scas
pavgb
lods
dec
idivl
dec
es
aas
pop
mov
int
inc
fsubrs
jae
adc
aaa
pushf
sub
lods
aas
fmulp
fs
insb
mov
add
js
mov
jp
adc
xor
dec
push
fisubl
lods
xchg
add
leave
fucomp
enter
insl
push
frstor
inc
sub
xchg
gs
lods
fstl
ret
jge
xor
repnz
ja
adc
insb
hlt
leave
and
sarl
mulb
shll
adc
sub
cmp
ss
pop
push
sbb
adc
cmpsl
pop
push
cmp
sbb
scas
stos
fisttpll
stc
or
adc
imull
dec
outsb
stos
ret
xor
mov
xchg
cmp
inc
dec
dec
xchg
dec
mov
call
rcll
push
inc
jecxz
xor
jmp
sahf
fs
aad
in
loop
mov
and
push
loop
pop
add
loop
lcall
mov
push
push
pop
xor
stc
shl
lret
jmp
dec
inc
sahf
imul
insb
mov
sub
or
daa
mov
push
sbb
into
mov
sti
pop
out
mov
and
les
inc
leave
add
pop
aad
xor
and
jle
dec
sahf
call
sbb
xchg
mov
dec
add
xorl
movsl
incb
test
in
or
frstor
cmpsl
imulb
repz
sbb
xor
mov
rclb
pop
push
xchg
add
jmp
xchg
cs
pop
add
jecxz
sbb
jmp
fcom
enter
jae
and
mov
test
mov
sub
mov
or
cmc
and
mov
dec
adc
adc
xor
outsb
xlat
insl
movsl
pop
xor
mov
rolb
in
cmpsl
xchg
adc
adc
shrb
dec
sbb
mov
sahf
arpl
aad
pop
add
loop
ret
jns
test
outsb
and
fcoms
xor
xor
les
test
clc
sbb
or
movsl
sbb
ret
repnz
push
xor
leave
jbe
add
pushf
adcl
jne
bound
pop
enter
jp
or
cmp
pop
lcall
mov
pop
bound
aaa
jmp
dec
fs
das
inc
imull
jmp
dec
jne
dec
or
mov
cmp
or
orb
arpl
xchg
jge
xchg
sbb
mulb
pusha
stc
pusha
dec
mov
js
mov
es
mov
hlt
movsl
frstor
in
sysexit
jp
mov
stos
push
lret
mov
pop
fs
in
jp
inc
dec
pop
stos
lock
loopne
pushw
cli
and
or
mov
xor
add
std
or
mov
movsb
adc
sti
notb
or
scas
mov
jmp
xor
mov
cmpl
cmc
fdivs
ret
int3
dec
inc
fbstp
pop
std
outsl
int3
mov
popa
notl
push
inc
in
xchg
les
push
idivb
push
cmc
bound
dec
test
mov
stc
mov
adc
adc
nop
je
add
push
xor
iret
cld
fidivl
in
outsb
jo
pop
popa
in
add
jl
jp
xchg
push
aad
add
sti
ja
aam
dec
xor
jns
iret
int3
inc
scas
mov
mov
cmp
js
bound
lock
dec
adc
sbb
inc
or
insb
fimuls
stos
pop
jne
in
movsb
jmp
jb
inc
cs
mov
mov
xchg
ljmp
lahf
cmpsl
out
cmp
jb
cmc
sbb
in
jg
insb
cs
pop
add
rorb
aad
xor
push
notl
adc
jnp
pop
or
popf
add
jb
sub
andl
std
jge
jno
or
mov
mov
adc
mov
jmp
jecxz
adc
popa
push
enter
xchg
xchg
inc
mov
ficoml
mov
push
shlb
mov
cmpsb
lret
sbb
pop
stos
adc
andl
in
xchg
test
hlt
jg
sub
fidivl
es
out
jge
es
gs
xchg
pop
insb
icebp
sti
dec
in
jns
flds
std
mov
jo
push
mov
jge
enter
and
cmp
mov
je
jmp
rclb
jg
lock
out
into
pop
ret
in
shrb
mov
dec
or
ljmp
sub
dec
push
icebp
mov
cmp
push
call
mov
test
xchg
mov
imul
mov
jp
inc
je
repz
push
cmp
xchg
mov
inc
lret
jae
inc
hlt
mov
fdiv
pop
adc
int3
push
js
bound
pop
xchg
mov
lea
imul
jno
int
jp
popf
std
sub
xchg
aas
fs
push
mov
icebp
call
mov
ret
adc
pop
adc
xor
jne
adc
push
test
mov
sbb
pop
add
adc
sbb
cmpsb
mov
mov
shll
inc
mov
dec
in
punpcklwd
xchg
sbb
stos
xchg
insl
and
sti
inc
les
aad
pushf
pop
or
lods
add
push
mov
pop
loopne
outsb
mov
lret
push
xchg
jae
test
dec
stos
fisubs
cmp
push
pushf
mov
pop
add
shll
cli
mov
sbb
into
cwtl
cmpsb
ljmp
clc
push
lret
popa
sbb
cmp
sbb
sbb
hlt
cmp
or
fisubrs
mov
cmp
bound
ficoms
incl
cmpsl
pusha
test
push
dec
loop
mov
mov
mov
pop
stos
adc
pop
cmp
xchg
jp
das
mov
jmp
lahf
mov
sub
in
add
add
xor
aaa
pop
adc
xchg
push
xor
add
push
repz
mov
es
into
out
fs
push
fdivrs
jmp
adc
cs
dec
xchg
jne
mov
dec
jo
idivl
fdivrs
out
push
mov
lds
or
inc
pop
lds
add
mov
dec
mov
enter
jbe
leave
repz
scas
dec
mov
add
std
outsl
sbb
inc
push
movsl
pushf
int3
shrb
adc
mov
adc
jbe
in
pop
xchg
mov
pop
and
or
xor
out
pushf
or
cmp
xchg
push
gs
jle
xchg
xlat
es
inc
jmp
cmc
adc
xorl
pop
enter
loop
mov
sar
sbb
popf
jbe
inc
scas
je
int3
mov
and
sbb
ss
repnz
mov
sub
mov
les
jno
push
xor
rorl
dec
pop
lods
out
xor
sub
mov
aam
and
add
push
fisttpl
ret
fisubl
ljmp
add
popa
sahf
and
cmpl
cmp
div
imul
testl
ret
insl
shr
std
sbb
ret
jb
xchg
adc
jl
sub
or
outsl
cmp
add
es
adc
xlat
xor
mov
push
sbb
icebp
xor
mov
jge
insl
push
fdivrl
out
popf
push
in
add
out
lret
jle
pop
inc
sbb
mov
cmp
rolb
aaa
cli
adc
ja
scas
jb,pt
lcall
xor
scas
pop
mov
dec
jecxz
push
loope
push
mov
xchg
push
lret
pop
push
scas
fcmovu
pusha
cmp
and
std
jns
leave
sbb
jmp
inc
movsb
lret
loopne
test
inc
iret
aaa
int3
dec
loopne
ljmp
sahf
jns
xchg
popf
lret
mov
or
ds
add
cld
mov
pop
scas
ror
bswap
je
je
jnp
adc
jbe
xor
mov
add
xchg
or
shrb
loop
pusha
xor
fdivl
lea
mov
xchg
out
js
mov
push
pop
or
loopne
test
dec
cmpsb
pinsrw
inc
or
jnp
push
iret
or
iret
jno
sahf
and
mov
dec
and
mov
mov
xchg
or
dec
popl
movb
or
es
xlat
mov
dec
movsb
loope
ds
pop
push
idiv
test
mov
jb
aaa
xor
repnz
scas
mov
mov
mov
mov
xor
je
aaa
loope
out
pop
pop
repnz
cmp
sti
lahf
in
pop
lret
push
insl
adc
sub
dec
cmpsb
fiaddl
aas
mov
mov
movsl
fcmovu
fwait
out
mov
jo
xlat
es
jae
jl
imul
xlat
cmp
mov
cmp
or
repz
fcoml
sub
xchg
jno
outsl
sbb
mov
ja
cmpsb
inc
jno
jge
cmp
data16
lods
insb
and
ds
push
push
sub
cmpsb
pop
push
cwtl
or
xor
sbb
and
push
add
adcb
mov
cli
jno
dec
mov
cmp
addl
mov
push
xchg
push
mov
jge
pop
xchg
or
testl
test
cmpsb
xorb
movsb
xor
lods
sti
and
push
jns
fbld
sbb
rorb
xchg
mov
push
jae
xchg
cmc
imul
fwait
mov
lock
xor
xor
and
add
icebp
incb
jp
pause
js
pop
xor
jle
pop
js
movsb
xor
dec
inc
mov
mov
clc
jl
lret
bound
dec
rcll
movl
xchg
cltd
sub
aaa
dec
add
ss
mov
in
scas
mov
jno
ja
push
repz
xor
dec
int
dec
aam
rcl
hlt
and
rep
in
dec
lahf
ds
sbb
loopne
xor
and
and
jge
xchg
jmp
pop
inc
ret
mov
hlt
jl
enter
dec
pop
adc
and
sub
mov
dec
jns
mov
nop
ja
call
sbb
std
mull
aad
call
jecxz
sahf
lcall
inc
das
call
and
or
mov
add
xchg
xor
pop
jge
cltd
and
cmpl
add
mov
movsb
or
cmp
shll
fldt
je
pop
cs
aad
stc
push
jnp
push
and
push
mov
stos
aam
inc
mov
cmp
arpl
test
jg
jnp
mov
outsb
push
inc
jnp
int3
outsl
ljmp
inc
les
jbe
test
cld
andb
hlt
testb
inc
xchg
sub
xor
xchg
jge
imul
shrl
rclb
daa
iret
repnz
data16
aad
or
and
xor
mov
xchg
imul
mov
pop
sub
negb
push
sti
jp
jbe
popa
push
scas
stc
das
sahf
or
inc
aad
aaa
push
lcall
add
push
or
mov
jmp
jmp
xchg
in
outsl
pop
dec
lea
push
pusha
add
pop
fnstcw
sub
out
int3
pop
mov
mov
inc
and
jbe
adc
orb
test
push
repz
fcmovu
or
int3
lods
pop
mov
pushl
popf
pop
shlb
outsl
sub
loope
mov
xor
inc
push
mov
jo
ljmp
mov
inc
jae
lods
ljmp
pop
push
ds
jecxz
mov
ret
out
es
gs
xchg
pop
imul
cmp
fsubl
dec
into
jge
je
sub
fs
test
in
pop
and
xor
inc
mov
jbe
out
hlt
push
clc
shl
repz
mov
cmp
dec
lock
sbb
mov
and
outsb
ss
fbstp
pop
lret
lcall
into
jecxz
aad
cwtl
movsl
inc
sbb
leave
mov
popf
cmp
bnd
mov
mov
loopne
fldpi
je
out
jle
leave
dec
mov
sbbl
fsubrp
adc
push
and
sub
push
fwait
sub
adc
sbb
cli
pop
cmp
clc
xchg
mov
mov
xchg
call
sub
stos
pushf
imul
pop
cmp
rol
lock
inc
ret
lea
sub
mov
aas
loopne
jle
lea
or
rorb
ret
mov
push
or
add
movl
cmp
cmp
jae
in
pop
mov
jo
inc
mov
pusha
xchg
mov
push
ljmp
jo
lods
out
jns
and
lahf
pop
lcall
lret
std
sbb
jecxz
and
pop
enter
cmp
inc
jmp
xchg
and
add
pop
outsl
pop
mov
jmp
sub
mov
int
imul
nop
mov
daa
sub
addl
cmp
cmpsl
cltd
test
aaa
xor
or
push
lods
push
push
push
mov
clc
nop
pop
jb
adcb
push
inc
sbb
and
cmp
mov
pop
scas
pushf
ds
jmp
pop
cwtl
addr16
adc
mov
cltd
inc
arpl
icebp
popa
xlat
inc
rcrl
inc
test
sbbl
repz
inc
stos
inc
scas
cmp
cmp
insb
xor
cld
mov
iret
add
stos
je
xor
xchg
sub
xor
loopne
sbb
test
shl
inc
xor
jmp
pushf
adc
or
pop
xchg
js
mov
mov
push
aas
xor
das
mov
push
call
ret
jns
mov
mov
xchg
div
xchg
rcrl
fbld
dec
inc
jmp
fiaddl
xchg
lahf
out
pop
pushw
lcall
mov
inc
movsl
pop
sub
jl
ss
mov
in
mov
or
mov
jg
lret
rorl
jge
sub
std
std
jbe
jp
jg
notl
daa
lea
xchg
add
mov
in
mov
cmp
adc
stc
sti
mov
inc
les
push
xor
dec
or
fwait
testl
icebp
nop
mov
cmp
inc
popf
adc
lock
pop
pop
mov
sub
xchg
jg
mov
repnz
pop
mov
cmp
mov
andb
in
push
insb
aam
push
add
sar
and
imull
or
fisubl
sub
test
jne
add
inc
mov
jno
push
dec
stos
dec
stos
inc
add
cmc
xchg
push
inc
loop
xchg
xchg
lea
call
jne
jo
pop
adc
out
inc
data16
push
and
cli
mov
mov
jl,pn
adc
adc
adc
xor
and
xor
mov
mov
jg
or
push
mov
pop
xor
push
dec
jbe
dec
out
push
cmp
out
imul
push
pop
mov
xchg
outsb
jecxz
push
jp
pop
int3
js
rolb
push
push
and
stos
cmp
ljmp
aam
push
and
fbstp
mov
in
and
int3
sbb
int
repz
out
in
mov
pop
cwtl
or
jle
cmc
call
mov
sub
push
pop
mov
sbbl
scas
xor
add
mov
or
and
adc
into
rcr
ficoml
push
pop
add
or
out
fcos
xor
js
jnp
aam
scas
add
dec
cmp
and
add
adc
leave
pop
cltd
addr16
ljmp
sub
icebp
dec
leave
fistpl
inc
push
push
sbb
mov
xchg
pushf
lods
ret
lds
out
cld
xchg
in
cmp
push
and
xchg
sub
bound
add
add
adc
movb
cmpl
ds
imul
test
stos
lret
pop
dec
push
test
outsl
int
or
add
xchg
jnp
mov
fwait
cmp
fdivrp
xlat
xor
popf
dec
pusha
sbb
popf
xor
popa
lods
and
cmpb
pop
dec
loopne
jmp
fists
inc
pushf
or
and
les
cs
xchg
in
dec
loope
imul
and
jns
inc
popf
arpl
hlt
popa
fidivl
push
pop
test
inc
push
cmp
ljmp
int3
hlt
dec
adc
or
push
push
fildl
sahf
insb
pop
sahf
mov
sahf
in
pushf
sbb
mov
int
jne
ss
call
call
mov
xchg
negb
xor
lock
shrb
lods
add
out
dec
mov
lods
jle
sbb
adc
and
ret
xor
adc
insb
test
imulb
cmp
xor
std
push
sub
lods
cmpsb
xor
add
icebp
jne
lods
jns
jns
jp
inc
push
or
loope
xchg
xchg
pop
push
std
mov
sub
or
jns
pop
xchg
push
adc
mov
in
cld
dec
dec
call
dec
adc
clc
aam
push
mov
inc
push
jae
jge
dec
cmp
pop
cmpsl
lret
xor
gs
ficoms
sbb
and
or
ret
mov
cmp
and
loop
mov
fstps
add
sub
in
pop
mov
sub
stos
insl
test
lcall
mov
sbb
inc
xchg
in
or
mov
call
xor
cwtl
push
jecxz
mov
mov
sbb
nop
lods
and
sbb
lock
gs
mov
and
mov
fnstsw
sub
test
ds
sbb
sahf
mov
xchg
push
cld
pop
insl
popf
ret
pop
add
jp
in
jge
stos
not
mov
and
push
call
jecxz
ss
inc
scas
mov
lods
mov
mov
dec
mov
jno
add
js
mov
jb
leave
pop
mov
in
popf
dec
jge
xor
xchg
add
inc
ljmp
mov
inc
mov
pop
out
leave
sahf
lret
push
pop
mov
jnp
pop
dec
cmpsb
int
cmp
mov
inc
loopne
mov
xlat
push
mov
adc
adc
sub
clc
bound
addr16
or
jnp
push
push
inc
pop
inc
sti
lea
dec
xchg
flds
mov
xor
dec
cmpsb
in
xchg
sahf
sahf
adcb
jg
lcall
xchg
mov
es
dec
aam
leave
xchg
cs
xchg
outsb
xorl
adc
stos
push
and
xor
sti
inc
gs
testb
push
and
sti
add
xor
jg
outsl
mov
mov
in
into
pop
or
xor
mov
push
mov
mov
sbb
test
pop
ficoml
sbb
mov
enter
pusha
dec
mov
test
and
aam
inc
xor
xchg
clc
xor
xchg
or
xchg
out
xor
enter
fldenv
xchg
sub
xchg
push
pop
push
imul
outsl
dec
icebp
cmp
outsl
lea
pop
rcll
adc
mov
gs
sbb
cli
cltd
lret
aad
iret
inc
movsl
mov
push
or
pop
mov
fst
in
add
jle
cmp
cwtl
out
and
and
dec
dec
mov
rcrl
dec
push
dec
mov
sti
push
push
sbb
mov
pop
mov
inc
test
loop
lea
popa
cmpl
loope
mov
jne
adc
stos
inc
mov
loop
lcall
aas
mov
pop
scas
outsl
int
in
xchg
lcall
mov
test
mov
std
gs
mov
pop
int
out
push
fisubs
loope
pushf
stos
and
stos
stc
cmp
push
mov
inc
cmp
mov
rorl
pushf
loope
lcall
scas
pushf
sarl
sub
mov
sbb
orb
push
data16
xchg
and
out
jecxz
je
xlat
jl
add
mov
sbb
jg
rorl
cwtl
mov
inc
sub
xchg
dec
sbb
or
rcrb
insb
jne
cmpb
sub
mov
mov
std
push
jbe
or
jno
ret
inc
xchg
xchg
clc
sub
fcomps
sub
or
rcr
in
aaa
mov
adc
jg
adc
leave
std
clc
jl
sub
sub
pop
mov
out
add
mov
aad
movq
xor
ss
notl
cmpl
call
mov
dec
movsb
add
xchg
pop
mov
test
push
data16
je
pop
loop
xchg
dec
int
ret
mov
xchg
mov
out
ret
push
cmc
and
clc
push
insl
inc
cwtl
jbe
mov
dec
fcmovu
cmp
mov
dec
push
jb
or
lret
sub
movsb
sti
mov
and
cmp
xlat
push
leave
inc
mov
mov
adc
andl
xor
jle
mov
pusha
push
push
sbb
in
mov
movsl
and
addr16
xor
mov
dec
jmp
pop
jmp
cmpsl
daa
jge
add
adc
pmaddwd
ficoms
sbb
leave
pop
hlt
push
lea
imul
negl
fldl2e
lahf
xchg
nop
ret
sub
loope
jno
add
aaa
mov
sub
and
xchg
pop
fiadds
and
aaa
adc
inc
lods
addr16
cmpl
sbb
test
scas
cli
dec
jae
inc
cld
sahf
jne
loop
or
jp
cmp
push
std
and
popa
movsb
jg
prefetcht1
or
push
popl
jbe
les
sbb
mov
out
inc
and
lret
add
aam
pop
fmull
cmc
add
sbb
push
ret
stc
adc
pop
add
gs
xchg
addr16
movsl
cltd
push
sbb
out
mov
fdivrl
leave
scas
test
inc
inc
out
push
in
shr
pop
sahf
pop
inc
and
imul
jge
ljmp
xor
mov
out
inc
mov
outsl
icebp
sub
dec
lret
mov
or
movsb
jg
bound
cmp
sar
divb
jae
std
mov
push
sarb
fistpl
data16
add
xor
mov
int
inc
sahf
cwtl
push
add
inc
inc
ss
cmp
inc
push
idivl
jb
pop
insl
cmc
fs
xlat
cmp
xor
mov
pop
sbb
push
or
je
lods
fwait
sbbl
lods
jne
ss
dec
dec
scas
and
testb
dec
lock
out
cmp
movsl
aad
int
mov
adc
mov
inc
push
lcall
cmp
push
js
les
sub
mov
add
pusha
sbb
bound
inc
outsb
mov
cmpb
les
fs
je
add
out
dec
fidivrl
andb
inc
sub
mov
add
in
out
movsb
mov
fwait
imul
push
jae
inc
or
xor
adc
or
mov
les
sub
jp
xor
and
pop
int
insl
and
dec
jnp
mov
sarl
lock
aad
mov
push
xchg
xor
addb
es
mov
xor
pop
xchg
adc
js
cwtl
pop
xchg
cltd
jo
popa
out
xchg
outsl
cmp
cs
in
imul
xlat
sbb
pop
lods
jnp
cwtl
jae
leave
pusha
fs
jnp
adc
mov
mov
jp
into
out
mov
or
jge
les
cld
in
inc
mov
rcr
jle
imul
mov
or
inc
push
ljmp
sub
idivl
lret
mov
or
movsb
mov
ja
and
sbb
aad
push
dec
popf
push
jae
cmpb
fs
loop
stos
jmp
movsb
ds
pop
pusha
pop
mov
outsl
or
out
insb
imul
ja
lahf
push
movsb
mov
sar
mov
outsb
mov
int3
jb
push
sub
arpl
jo
lock
mov
test
sti
cwtl
push
xor
out
adc
loopne
jmp
repnz
mov
xor
push
nop
cmc
loope
push
negb
and
inc
mov
loope
clc
cmp
rorb
push
pop
push
lock
cmpb
lods
fwait
pop
movsb
dec
out
pop
outsl
sub
test
cwtl
stos
stc
xchg
lds
ja
pop
adc
movsb
les
dec
mov
ss
adc
cld
dec
lods
inc
push
fwait
rclb
mov
add
pcmpgtd
or
pop
or
fildll
movsb
lods
cld
stos
cmp
jl
or
cltd
lret
mov
lods
jae
imul
jne
sarl
adc
rcr
pop
cmp
inc
fsubs
xchg
cld
push
cmp
mov
movsl
xchg
xchg
or
lret
xchg
xchg
out
rcll
push
test
cltd
push
cs
add
callw
dec
lods
fwait
xchg
ror
pop
inc
add
incl
bound
xchg
daa
arpl
jnp
jno
pop
fistpll
sahf
sbbl
leave
int3
ss
jne
rcl
dec
lock
divb
arpl
fstpt
jbe
loop
dec
test
mov
in
push
or
xor
sub
mov
shll
mov
and
adc
pop
mov
add
and
or
fisubs
es
cmpsb
sub
add
leave
test
sbb
ret
std
dec
mov
jge
sbb
sub
jmp
pop
scas
repz
or
fcoml
push
lock
iret
mov
adc
mull
mov
fistl
cwtl
stos
outsb
cltd
sbb
rorb
dec
jno
loopne
xchg
xor
loop
movsl
add
jbe
jle
pushf
sbb
mov
shlb
sti
stos
es
js
iret
ljmp
and
inc
data16
push
aaa
imul
inc
aam
stos
jp
adc
lcall
cltd
push
jp
mov
repnz
cmpsl
decb
xor
addr16
orl
in
test
imul
mov
dec
mov
pop
sub
insl
and
pop
inc
add
es
jnp
mov
pop
out
mov
ss
roll
jmp
xchg
and
pop
jo
mov
call
rcrl
jbe
jb
pop
jae
ss
ss
out
aaa
into
mov
aad
mov
cli
jl
jg
stos
cmp
clc
testb
scas
mov
xchg
inc
aaa
dec
idivb
insl
mov
xchg
frstor
pop
nop
pop
or
inc
loop
popa
movsl
dec
mov
addr16
mov
cld
test
ret
xchg
sahf
cmc
shrl
or
adc
enter
test
push
xor
mov
cmp
or
jb
mov
push
orl
cli
sub
or
jns
xchg
pop
inc
jne
xor
jle
mov
in
loopne
inc
mov
sbbb
insl
jne
mov
sub
pop
int3
xchg
xor
lock
sub
mov
mov
pop
add
xor
ds
loope
mov
mov
jno
dec
push
dec
imul
mov
int3
dec
sbb
rcrl
inc
push
jbe
sbb
sbbl
sahf
add
repnz
repnz
lock
pop
rcr
outsl
push
fistpll
xchg
dec
push
cmp
push
jno
adc
pop
cmpsl
out
dec
stos
or
pusha
and
cli
enter
add
dec
jb
insb
prefetch
xor
cld
pop
mov
add
fnstenv
out
das
add
xchg
out
leave
hlt
rorl
adc
test
inc
xor
insl
add
push
hlt
sub
jp
sub
pop
mov
push
in
cmpsb
arpl
adc
dec
or
gs
call
ds
pop
std
mov
out
in
sbb
push
jno
push
addb
or
decb
adc
mov
stos
jg
fidivl
xor
int3
inc
out
add
mov
outsb
or
push
mov
xchg
ss
add
mov
rorl
int
fistl
pop
addb
mov
xor
mov
and
lods
pop
scas
xor
xchg
hlt
mov
push
jo
adc
divb
xchg
imul
adc
int3
icebp
iret
and
call
test
mov
inc
sub
push
pushf
sbb
push
dec
mov
mov
mov
xchg
addb
sti
xchg
fdivs
or
outsl
sahf
lods
pop
fld
test
iret
les
imul
scas
pop
jecxz,pt
das
jmp
jmp
xor
sbb
lock
fcomps
mov
mov
cld
cmpb
inc
pusha
daa
push
sahf
ret
mov
jb
out
mov
adc
shll
mov
mov
add
mov
lods
mov
and
aaa
push
mov
hlt
les
into
inc
sarl
mov
pop
enter
pop
adc
test
mov
xchg
fwait
and
cmp
loopne
daa
std
push
jae
lea
lods
sbb
sub
inc
out
clc
pop
and
aam
jne
and
mov
mov
fisttpll
dec
xlat
sbb
and
enter
inc
sti
stos
inc
test
mov
ja
mov
pop
iret
leave
repz
sti
add
lock
sub
xchg
and
mov
fstps
sub
cmp
adc
mov
push
sbb
lods
das
xor
jl
call
negl
sub
outsl
pop
add
dec
scas
mov
add
js
xchg
iret
and
push
xorl
add
or
out
push
jne
mov
mov
pop
inc
jg
outsb
leave
fcoms
sbb
fdivs
movsb
cmpsb
push
cmp
pop
ljmp
jo
mov
popf
push
dec
ret
dec
mov
push
inc
pusha
or
out
sbb
and
and
int
jo
mov
cmpsl
inc
mov
test
cmp
frstor
mov
jmp
jmp
nop
push
sub
push
add
cmp
rorl
loopne
mov
stc
loop
xor
les
add
in
push
arpl
cmpsl
mov
jecxz
lds
bound
imul
jl
icebp
adc
stc
push
push
test
aaa
addb
inc
rclb
mov
and
hlt
test
cmc
or
out
mov
sub
inc
or
add
dec
mov
or
or
sbb
insl
enter
jae
aam
jmp
idivb
dec
pop
mov
xchg
jmp
out
jge
lea
cmp
mov
or
aad
jb
lcall
mov
or
in
out
xchg
push
add
fistl
push
xchg
push
sub
int
xchg
xchg
inc
movsl
js
adc
daa
mov
inc
push
cld
push
pop
xchg
mov
ficoms
into
push
mov
inc
jns
inc
mov
roll
cmp
lret
out
push
icebp
jb
lock
imul
mov
int
in
cld
sub
cld
sub
outsl
cmp
cmpsl
lea
add
inc
or
cmp
dec
insb
imul
fs
mov
push
sbb
pop
out
popa
jecxz
inc
jno
pop
int
add
ljmp
mov
xlat
inc
push
pop
aas
adc
jb
cmp
movsl
xchg
sbb
jl
ret
int3
xlat
push
in
rcrb
test
lods
aaa
add
sarl
xchg
cld
mov
dec
sahf
add
mov
pop
adc
outsb
xor
or
mov
sbb
add
xchg
push
daa
jp
xor
outsl
sbb
orb
pusha
mov
xchg
cmpsl
outsb
xchg
sbb
xchg
mov
mov
cs
mov
add
leave
sub
jg
pop
cmpsl
ljmp
mov
cmpsl
mov
cmpsl
fistpll
push
mov
inc
out
xor
add
sahf
sub
mov
loop
inc
pop
xchg
insb
and
out
add
sarb
lahf
inc
scas
adc
jge
ret
xchg
xchg
jnp
fisttpll
aam
mov
inc
xchg
mov
leave
out
std
inc
mov
cmpsl
addr16
into
add
mov
das
jne
fistpl
adc
dec
daa
mov
stos
jne
xorl
jo
or
mov
xchg
jns
outsb
fxch
mov
ljmp
cmpsl
out
adc
sti
call
sbb
mov
clc
or
inc
ljmp
das
xchg
imul
arpl
sahf
lods
lods
lret
or
pop
add
je
jmp
test
inc
inc
fs
xadd
mull
stos
ret
jl
arpl
and
shr
mov
or
test
leave
addb
das
sub
lret
in
mov
jecxz
dec
cmpsb
test
rclb
push
xor
clc
jecxz
push
inc
mov
cmpsl
loop
push
sahf
xor
sbb
mov
lods
xor
lret
mov
pop
inc
xor
pop
scas
lods
mov
fstps
push
xchg
xchg
pop
and
pmullw
ret
sub
fs
push
mov
mov
push
pop
cltd
ja
loop
and
pushf
mov
jle
rcrb
jnp
bound
mov
inc
aaa
pop
aad
movsl
inc
in
mov
fcomi
push
and
mov
movb
push
out
orb
xchg
stos
ja
cmc
xor
mov
push
dec
mov
in
test
cld
and
xor
repz
test
aaa
pop
or
jb
cmpb
aad
push
les
rol
mov
clc
movsb
pop
jb
pop
xchg
rorl
cs
push
rorb
icebp
xor
push
mov
dec
xchg
popf
std
mov
in
mov
xchg
nop
fldl
out
cmp
and
sbb
js
pushf
jnp
scas
movsl
movsb
shlb
aas
mov
adc
pop
xor
push
aad
mov
add
adc
sub
dec
dec
es
push
xor
sbb
xchg
push
sahf
dec
xchg
roll
pop
xor
out
or
scas
mov
inc
or
inc
push
add
xchg
xor
pushf
sub
addl
enter
pop
std
mov
lds
cmp
and
mov
pop
sub
inc
pop
pop
popa
sub
inc
dec
loopne
mov
pop
outsb
sub
sbbb
dec
xchg
pop
repz
sbb
jnp
cmc
xchg
arpl
pop
jmp
adc
jl
xchg
ret
xchg
jae
fs
icebp
mov
cs
lods
stc
xor
popa
mov
jbe
int3
inc
leave
cmp
sti
adc
rorb
outsb
dec
push
mov
pop
lea
jg
xor
sbb
pop
jae
out
push
lds
lret
xlat
sbb
jg
push
jb
mov
and
enter
outsl
jo
push
ljmp
movb
lock
jmp
or
push
sarl
cmp
jmp
inc
ljmp
mov
sub
jp
inc
dec
pop
jne
xor
test
jl
ret
movsb
cmpsl
outsb
orb
xorl
iret
jo
ljmp
js
sbb
dec
repnz
pop
and
fildl
je
push
fimuls
sti
mov
mov
pop
pushf
lock
mov
shlb
cmp
scas
mov
in
aaa
xchg
add
cltd
cmp
push
dec
inc
stos
push
xchg
fcmovu
push
xlat
mov
xorl
fidivs
imul
push
sbb
ss
ret
fildl
inc
in
inc
out
mov
movzbl
inc
pop
fsubrl
lea
or
xor
shrb
sub
pop
arpl
push
push
mov
xlat
ss
dec
push
sarl
mov
inc
mov
pop
std
add
push
push
mov
flds
dec
scas
lahf
xchg
mov
mov
mov
arpl
sub
adc
ja
es
addr16
or
mov
fmulp
mov
mov
and
adc
jge
roll
test
xchg
jns
pop
ja
inc
rorb
add
sbb
inc
pop
mov
js
jae
clc
ja
pop
int3
outsb
in
es
insb
xchg
add
cld
outsb
addr16
dec
cmpsb
mov
cmp
xlat
cmc
sub
int
in
aas
xchg
fcoms
jae
cmp
addr16
mov
insb
add
outsl
and
add
movsl
in
cmp
icebp
xchg
dec
push
pop
pop
mov
mov
or
jmp
mov
push
sub
scas
mov
sub
test
inc
cmp
int3
xchg
call
adc
movsl
movsl
sbb
mov
in
rol
inc
aaa
add
mov
push
push
rcll
mov
xchg
add
inc
pop
xor
aad
mov
je
sarb
xor
call
xchg
or
adc
mov
gs
lock
pop
jne
sub
dec
push
adc
cmpsl
push
sbb
dec
or
mov
mov
hlt
inc
push
cld
xchg
out
pushf
xchg
push
sar
inc
mov
sub
xor
or
jle
shl
shrb
sbb
lret
sbb
shlb
sbb
mov
dec
emms
sub
or
fsubrl
pop
add
xor
sbb
add
or
mov
into
fidivs
adc
pushf
mov
push
int3
cmp
cmc
imul
cmp
fdivrs
push
mov
inc
push
xchg
outsb
mov
popf
jo
popa
xor
cmp
jns
ret
pop
in
repz
push
insb
lret
adc
sahf
stos
xorl
push
sbbl
adc
xor
ret
cld
cwtl
xchg
imul
arpl
xchg
and
dec
jge
lret
jl
roll
jge
and
in
shlb
jg
pop
es
jns
mov
xor
mov
int3
and
loopne
sbb
je
mov
jno
clc
inc
movsb
jnp
fsubrs
xor
xchg
xchg
adc
shl
pusha
int3
dec
sub
jmp
ds
vmovdqu
test
in
xchg
xorl
jp
packsswb
outsl
xchg
ficoml
in
mov
cmp
mull
and
xchg
jb
pop
mov
rol
mov
jmp
adc
ja
imul
fdivrs
jecxz
mov
out
addr16
cmp
sub
insl
add
cli
xor
jne
inc
ljmp
popf
add
xchg
mov
in
and
loopne
loop
mov
adc
test
and
dec
xchg
push
lods
ss
sbb
out
outsl
add
jge
push
mov
stos
fdivrs
mov
fisttps
shrl
pop
or
lods
push
andb
cmpsl
testl
cltd
add
aas
in
repz
dec
movsb
lods
dec
pop
cltd
mov
ljmp
call
sbb
or
jbe
icebp
addr16
stc
sbb
bound
shrl
mov
jbe
popf
xchg
nop
icebp
ds
mov
cli
loop
cwtl
add
incl
ss
bound
cmp
bound
mov
push
jnp
shrb
jge
loop
xchg
jg
fadd
mov
cmp
loope
repnz
ja
arpl
ja
xchg
fwait
test
cmp
or
sub
insl
jne
cmp
iret
xchg
clc
int
and
rcr
fbstp
mov
shlb
mov
test
dec
imull
mov
adc
push
mov
adc
fimull
cmp
popa
test
les
jmp
adc
loop
cli
cld
jecxz
out
push
push
popf
js
outsl
mov
cmp
mov
aas
rcr
mov
arpl
dec
sarb
in
jl
rcl
xchg
test
bound
ja
mov
es
pop
fsubr
pop
aad
push
ficoms
add
pushf
insl
aaa
cltd
fwait
inc
loope
daa
daa
or
int
add
mov
jl
lahf
call
sahf
test
scas
fmuls
fs
mov
das
lret
fdivrl
aaa
test
aas
cmc
adc
sub
outsb
stos
popf
mov
jns
and
push
popa
cmpsl
cmp
pop
pop
fistpl
punpcklwd
mov
and
jecxz
mov
fdivl
inc
ja
mov
push
push
xor
push
aad
in
sti
loop
fbstp
jo
or
scas
fwait
daa
test
and
jecxz
int
cltd
sbb
or
xor
pop
xor
xchg
sarl
xchg
fsts
ret
iret
arpl
and
pop
iret
mov
dec
add
push
pop
cmc
repz
fwait
pop
jl
xchg
sbbb
stos
add
int
fs
pusha
xlat
lahf
dec
bound
xor
sbb
ljmp
das
loope
pop
shlb
dec
call
insb
jmp
xchg
test
xor
mov
call
arpl
add
mov
lcall
and
jl
or
jno
xchg
adc
lock
dec
sbb
test
sti
cmpsb
inc
aad
mov
and
fs
xor
ds
je
pop
js
notb
sub
ret
cli
lea
jle
icebp
dec
ret
in
test
and
pusha
ja
jns
or
fneni(8087
mov
and
xchg
sub
call
pop
notl
mov
pop
ret
sbb
dec
shl
popa
mov
ret
xchg
pop
jb
in
stos
insl
dec
xor
ja
cs
aaa
xchg
inc
sbb
jl
and
add
mov
stc
xchg
scas
pop
pop
jp
adcb
test
mov
stos
lods
fidivl
das
add
sub
sub
xor
add
mov
lcall
cmp
bound
cmpl
addl
cmp
mov
lods
call
aam
jns
ljmp
adc
xor
cltd
add
ret
sahf
push
sub
push
or
in
in
pop
imul
inc
repz
inc
repz
lea
pop
enter
fsubrl
aam
pushf
int3
push
jge
dec
push
sub
ds
std
adc
jno
cltd
in
mov
cli
ss
dec
xor
pop
jmp
mov
neg
cmpsl
ja
lcall
inc
mov
push
dec
jae
shrb
push
popa
or
inc
gs
shll
insb
push
xor
or
jno
cmp
ljmp
mov
push
xor
dec
cmp
rclb
cli
pop
mov
lcall
cwtl
jl
cmp
xacquire
pop
or
xchg
outsb
pop
push
or
inc
shrb
jnp
mov
push
fdiv
adc
pop
mov
les
push
dec
test
outsl
inc
pop
cmpsb
mov
andl
mov
lods
pop
outsb
lods
jae
push
sbb
mov
mov
test
jae
pop
and
jmp
imull
mov
inc
xor
sub
adc
cmpsb
mov
mov
jb
out
subb
lea
jge
pop
in
adc
scas
xor
sub
fldl
xor
mov
mov
insb
fistpl
and
xor
shll
or
aam
pushf
and
push
fsts
push
pop
ljmp
out
mov
sbb
rcl
jnp
adc
inc
push
adc
ljmp
dec
add
xchg
fidivs
mov
in
xor
int
pop
dec
popf
les
cmp
mov
sbbb
iret
mov
dec
and
lcall
sbb
daa
sub
xchg
mov
dec
mov
cltd
fdiv
push
das
insl
movsl
js
rclb
arpl
cmp
mov
sub
and
adc
imul
ja
dec
xorl
test
cld
stos
fwait
sbb
jl
mov
dec
xlat
cmpsl
cmp
iret
inc
adc
xor
dec
std
inc
cmpsb
imul
or
inc
int3
int3
or
aaa
sbb
sbb
aaa
out
mov
stos
push
ja
fmull
ja
inc
int3
aas
notl
dec
or
inc
inc
aaa
xor
shlb
jmp
es
sbb
and
fisubs
pop
jo
fisttps
lods
sbb
imul
xor
int
aad
mov
mov
in
push
xor
push
xor
addl
aam
cs
insb
push
fsubl
fistps
arpl
xchg
popf
sub
cmc
hlt
inc
call
int3
or
lock
clc
int3
mov
add
test
out
mov
outsb
dec
sub
icebp
test
movsl
test
fistpll
jnp
push
leave
pop
stos
cmovnp
mov
add
cmpsl
lcall
add
cwtl
and
cmp
jge
push
or
jne
filds
scas
je
dec
jno
mov
loope
push
fisttpll
mov
mov
daa
ret
pop
sbb
repz
inc
cmp
das
cmp
nop
cli
into
pusha
lret
fidivl
leave
nop
sub
push
push
pop
cltd
fwait
movb
std
loopne
mov
push
les
gs
out
addr16
negb
sbbl
jmp
pop
lock
mov
lock
insl
mov
fdivl
sub
jb
aam
xchg
js
outsl
loop
cmp
jb
jmp
pop
xchg
xor
daa
mov
xchg
ret
push
dec
mov
xor
inc
mov
push
mov
mov
ljmp
cmpsb
dec
mov
popf
jb
mov
pop
arpl
push
inc
int
pop
int
mov
adc
js
pop
in
subb
push
ss
jg
jae,pt
daa
iret
mov
ja
mov
xchg
sbb
paddd
and
mov
cmp
xchg
mov
xor
sub
inc
stc
fisubs
mov
call
test
insb
or
std
jge
lret
pop
insl
or
xchg
int3
xor
jge
push
out
fucom
cmp
add
repz
fcoms
mov
mov
out
or
jl
decl
test
sti
arpl
mov
lock
push
inc
fidivrl
fsubrl
in
adc
jb
lahf
push
shl
push
cltd
mov
jle
cltd
sbb
mov
sbb
daa
mov
leave
enter
and
stos
divb
ss
push
pop
adc
add
mov
leave
pop
das
mov
mov
mov
jl
and
mov
mov
jp
mov
inc
enter
cli
fs
dec
jns
jne
xor
outsl
xchg
jae
and
inc
mov
push
sarl
or
sub
xor
pop
loopne
cli
jge,pt
sub
add
and
push
add
sahf
and
jb
pop
xchg
sahf
mov
int3
xchg
cli
mov
push
and
cmp
divl
ds
mov
dec
jmp
mov
ret
inc
pop
add
jne
clc
adc
inc
iret
lret
in
inc
icebp
push
nopl
add
add
xor
xchg
sti
push
push
inc
or
sarl
pop
inc
pop
gs
jl
mov
jae
adc
jecxz
je
inc
mov
fucomip
sbb
xchg
ljmp
in
cmp
dec
mov
in
sub
into
movl
jp
popf
add
inc
mov
in
call
or
pop
test
mov
sub
notb
xor
inc
rol
fs
in
leave
std
std
test
push
mov
jmp
sub
mov
mov
xor
repnz
in
sub
repz
push
cmpsl
cltd
and
mov
xchg
xchg
loope
repnz
inc
xchg
stos
inc
es
test
mov
andl
adcl
or
js
rorl
nop
mov
inc
xor
mov
in
push
jp
repz
cmpsb
cli
pop
sbb
xor
xchg
mov
jno
enter
int3
in
jp
shrl
pop
dec
bound
cmc
cwtl
icebp
cmp
cmp
jecxz
mov
aas
popa
add
push
xchg
lods
sbb
daa
and
cmp
mov
xchg
push
push
lahf
clc
imul
and
leave
pop
stos
cld
sub
js
in
or
sub
test
insb
call
xor
xor
mov
xchg
mov
or
add
gs
outsl
mov
sub
out
add
cmpl
pop
mov
sub
cmp
sub
cmpsb
and
push
outsl
pop
inc
popf
jle
push
fbstp
aas
sbb
daa
pop
sahf
movsl
push
push
sub
push
es
lds
movsb
mov
popa
fimull
mov
pusha
fs
outsl
lods
stos
je
ja
pop
xor
mov
in
stos
rorl
ss
push
adc
jno
loopne
dec
mov
jno
nop
rcr
adc
xchg
std
test
push
pop
xchg
add
mov
dec
mov
lods
sbb
aaa
sub
test
xchg
shrb
outsl
pop
mov
push
stos
lods
sbb
mov
jle
add
repnz
cmc
popf
cmpsb
jbe
cmpsl
sbb
pop
mov
adcb
jnp
mov
push
xor
xchg
push
xlat
sub
shrl
dec
pop
testl
dec
rorl
sub
mov
sub
lahf
adc
jns
ljmp
pop
inc
mov
pushf
test
mov
lahf
test
sti
xchg
cld
imul
mov
adc
pop
and
add
pushf
fildll
fsubrs
pushf
or
sub
pop
pop
sbbb
js
push
out
mov
inc
push
add
subl
jle
insl
mov
ret
fwait
lcall
inc
and
push
inc
sahf
push
push
mov
ficoms
nop
inc
xchg
push
mov
inc
xchg
xchg
sbb
in
stc
movsb
subb
lahf
iret
mov
aad
aaa
xlat
xor
scas
jno
xchg
jnp
push
daa
aas
jge
mov
aaa
outsb
lods
ljmp
imul
mov
arpl
xchg
gs
push
cmp
push
push
mov
popf
divl
sub
inc
repz
cmp
pop
loope
fwait
subl
loopne
inc
or
jns
fbld
mov
xchg
push
push
xchg
sbb
bound
push
inc
sbb
push
jo
clc
rorl
or
mov
sti
jo
fcmovbe
out
jbe
lret
jle
sarb
movsl
or
push
pop
xor
inc
aam
adc
mov
lea
jb
cmp
inc
jns
jmp
sbb
push
cwtl
xor
cld
movups
mov
scas
push
mov
or
xor
fdivrl
mov
cmp
popa
or
push
stos
cld
repnz
dec
mov
xchg
adc
add
imulb
xor
mov
sbb
fnstcw
inc
fst
xorb
jmp
loopne
inc
rcr
jnp
repnz
lret
push
pop
iret
dec
xchg
cwtl
shrl
movsb
and
aam
and
clc
dec
add
or
mov
jl
roll
adc
pop
fsubrs
rcll
and
jl
aas
in
cltd
pop
test
push
adc
or
mov
rolb
imul
addr16
add
mov
jo
push
mov
idiv
cld
xlat
mov
push
fnstcw
cmc
xchg
rcll
pop
mov
inc
or
ja
call
cltd
enterw
and
addr16
es
push
push
mov
imul
jns
int3
push
lahf
pusha
movsl
mov
cmp
outsl
jecxz
and
pop
or
addr16
xlat
push
cmp
sbb
testb
outsb
ss
xor
push
sbb
adc
stc
dec
mov
movsb
lret
fidivrl
pop
sbb
mov
mov
fdivs
aam
mov
lock
xor
and
dec
mull
shl
jns
je
sub
and
mov
add
pusha
inc
push
movsb
aam
dec
in
cwtl
dec
jnp
call
popa
push
mov
je
dec
xchg
cmp
cltd
xchg
sub
push
mov
lcall
bound
fwait
lea
aaa
adc
mov
adc
jg
stc
into
add
add
fldt
mov
jg
jnp
and
xchg
popf
add
outsb
lods
in
sahf
lahf
clc
and
push
mov
jle
ret
and
xchg
mov
in
shrl
cmpb
dec
stos
mov
and
movaps
es
ret
leave
addl
or
inc
pop
mov
pop
xor
testl
mov
jg
sahf
mov
int
mov
imul
xchg
and
mov
fdivrs
fildl
loop
or
adc
stc
scas
mov
out
sbb
pushf
xor
xchg
or
mov
popa
jae
xchg
push
ss
loope
or
js
lods
push
scas
mov
lcall
pop
out
mov
push
imul
fsubrl
inc
dec
jnp
adc
cmp
mov
mov
pop
mov
push
rcll
mov
xlat
out
xor
fcomps
lods
mov
mov
xor
jno
inc
ja
sbb
mov
fsubr
mov
daa
movsl
nop
shr
rorl
jl
dec
icebp
jle
adc
lods
stos
xor
jns
pop
int3
push
xor
cltd
aad
andl
push
sahf
cs
mov
ds
outsb
cmp
adc
add
xchg
testl
stos
fwait
ret
jae
jg
cmp
movsb
dec
lret
imul
out
js
rcrb
je
cltd
subb
adc
mov
lret
adc
lcall
xchg
jae
add
add
jp
in
adcl
fistpll
int3
subb
push
inc
push
cld
adc
adc
fwait
test
push
mov
push
jbe
js
stos
out
orb
add
mov
andb
cmp
fs
cmp
xchg
mov
inc
add
fisubl
push
sub
out
cmc
push
cmp
stos
xor
adc
btc
mov
lahf
lds
mov
jle
cmp
loop
push
xchg
ficompl
shrl
addr16
push
nop
and
in
or
cmp
cltd
pop
dec
cli
pop
jns
gs
inc
popf
insl
or
dec
mov
add
in
push
ja
pop
inc
sbb
inc
pusha
adc
pop
fbld
mov
and
int3
pop
pop
mov
mov
inc
mov
push
jp
adc
test
enter
cmp
out
dec
and
pop
jle
addr16
jmp
addr16
int3
inc
add
xchg
mov
jl
jmp
xchg
jmp
rorl
cmpsl
jmp
xchg
les
fwait
leave
fisubs
hlt
inc
inc
pop
xchg
in
mov
loop
mov
cmc
dec
mov
ret
adc
lods
in
cmpsb
sub
andl
imul
fists
xor
mov
adc
cvtpi2ps
dec
dec
insb
repz
incl
mov
xchg
stos
scas
or
sub
lea
into
xor
test
arpl
cmp
and
leave
adc
imul
pop
lea
mov
pop
mov
pop
scas
ljmp
and
dec
ret
jns
es
xor
cmc
je
push
gs
cmp
cwtl
jge
inc
adc
inc
mov
std
lea
pop
hlt
cwtl
push
inc
and
jle
pushf
jge
dec
jmp
mov
notb
xchg
jmp
jmp
stos
imul
stc
icebp
dec
sbb
cltd
jecxz
jl
adc
dec
shlb
push
idiv
mov
dec
ja
sbb
mov
jge
repz
lcall
add
and
add
fldcw
movups
sbb
mov
sbb
int3
cli
rcr
out
imul
adc
cld
pop
fmull
xchg
mov
cld
out
daa
js
mov
and
cmc
cmpsl
enter
fstl
sti
test
jnp
stc
mov
xlat
int3
rcrl
push
sbb
sbb
aam
or
adc
jecxz
leave
out
imul
sub
sbb
mov
aas
rcr
cmp
test
mov
add
mov
bound
addr16
lea
mov
adc
cmp
lret
sub
push
mov
push
and
mov
sub
stos
jo
test
inc
or
push
mov
sub
add
xchg
push
mov
dec
xor
sub
jp
test
mov
sbb
add
inc
lods
add
dec
mov
aaa
idivb
adc
test
inc
pop
fwait
sarb
xor
shll
nop
rcl
iret
shl
mov
lea
dec
inc
pop
loopne
nop
dec
into
out
cld
add
cmovl
lods
mov
movsb
or
and
loop
sbb
adc
dec
adc
call
scas
inc
cld
out
loopne
sbb
jbe
inc
loop
xchg
lods
loop
xchg
jle
outsl
mov
sub
xchg
fprem
in
sub
inc
mov
push
jae
mov
pop
inc
bound
inc
pop
mov
out
jb
xchg
ss
xor
or
adc
inc
mov
push
xchg
jl
sub
and
out
mov
call
xor
mov
lock
xchg
lods
cmpsb
pop
into
cld
repz
fdivrs
pop
fstl
push
mov
xor
jge
cli
mov
pop
test
push
lret
js
je
push
mull
push
pop
repnz
fbld
xchg
sub
into
xor
bound
pushf
jle
push
mov
xchg
inc
dec
pop
push
pop
dec
aam
sahf
jbe
sahf
mov
adc
out
out
ja
lret
add
lret
lret
std
dec
cmp
dec
roll
and
jns
cltd
push
xchg
test
sahf
je
or
data16
ja
subb
cmp
test
sahf
or
sarl
mov
sbb
jnp
adc
aam
mov
add
ljmp
xor
inc
loop
and
call
dec
in
loopne
add
pop
cmc
shr
push
dec
dec
pushw
sub
xchg
fistl
iret
dec
dec
mov
sbb
dec
sbb
inc
nop
push
mov
xchg
and
adc
lahf
pop
inc
mov
and
sti
cli
mov
outsb
clc
lock
pop
sub
ss
into
push
jb
ret
xchg
aaa
insb
push
dec
dec
push
subl
sti
fbstp
scas
test
push
inc
or
bound
aam
adc
dec
or
stos
mov
enter
pop
mov
cmp
push
cmpsb
sbb
mov
test
daa
sti
xor
and
hlt
mov
cltd
jne
xchg
je
inc
push
fnstsw
push
push
xor
inc
jmp
mov
imul
or
jno
sti
repnz
in
jl
jl
push
jne
mov
or
repnz
mov
cmc
adc
push
aam
xor
sti
push
pop
cwtl
hlt
mov
shlb
fbstp
cwtl
pop
xchg
daa
and
sub
imul
push
inc
orb
das
rcr
jns
ds
imul
out
into
repz
es
sub
xchg
imul
pop
jne
shrl
pop
sub
psubusb
cmpsl
in
ror
cmpsb
loopne
add
pop
lcall
lea
xor
mov
sub
js
std
push
adc
rcl
pop
lret
mov
cmpsb
test
je
adc
ret
dec
daa
addr16
jecxz
lds
fbld
jbe
js
lcall
bound
xor
xchg
sbb
jo
jmp
lock
fistpll
ds
push
movsl
and
mov
les
dec
popa
paddd
in
pop
lods
lahf
cmp
fstps
into
adc
in
xchg
ss
ds
sahf
xor
push
fdivrs
xchg
xchg
mov
fistl
inc
or
jp
aam
inc
push
enter
mov
imul
or
sbb
pop
mov
mov
pop
cmp
fstps
mov
outsb
xor
xor
ret
push
imul
enter
pop
cmp
or
stos
les
mov
pop
push
mov
mov
iret
cmp
int
out
js
scas
mov
sbb
adc
adc
pop
leave
cwtl
sub
adc
jnp
int3
ficoml
ret
inc
pop
and
sbb
dec
sbb
ds
mov
mov
fildl
pushf
cwtl
fidivl
loopne
hlt
fcomps
xor
cmc
fbstp
fcoms
popf
or
movsl
sub
mov
adc
jmp
xchg
daa
mov
or
out
sub
rorl
push
xchg
pop
aad
mov
lds
test
add
mov
jo
outsl
pop
out
outsb
adc
adc
push
jge
hlt
dec
cmp
sbb
add
sub
in
inc
cmp
xchg
mov
add
xor
stos
mov
rdpmc
pop
xchg
push
es
xchg
dec
jbe
mov
inc
roll
negl
add
stc
jns
fs
and
and
ljmp
dec
pop
aad
aad
call
add
je
aas
xchg
icebp
je
add
test
fs
inc
imul
cs
lcall
cli
lea
ret
sbb
setae
call
ds
mov
cld
or
push
adc
pop
pop
int3
jmp
ficomps
and
jae
dec
xlat
jle
cmpsl
je
jg
lds
mov
nop
jmp
sub
cmp
mov
xchg
jo
pusha
movsb
xor
push
pop
inc
add
or
cli
jne
dec
xchg
ss
mov
sbb
imull
test
in
pop
das
adc
xchg
mov
adc
in
inc
mov
in
add
mov
mov
shlb
addb
imul
insl
xor
and
and
pop
or
imul
push
push
xor
xchg
mov
int3
pop
aas
rorb
mov
cwtl
and
insl
push
sub
pop
js
stos
mov
xor
rcll
sbbb
cs
rol
cmp
push
adc
inc
ret
pop
rolb
test
inc
pop
mov
orl
pop
sbb
xchg
cmp
jb
int3
je
subb
lock
pusha
push
in
ljmp
in
pop
dec
adc
pop
dec
int
and
xchg
cs
xor
les
in
sbb
add
inc
mov
mov
test
add
cmp
enter
xor
mov
fldt
sbb
mov
mov
or
lock
jle
mov
arpl
pcmpeqb
and
stc
inc
push
out
loop
dec
or
jmp
xor
loop
movsl
dec
cmpsb
leave
fists
imul
mov
and
ret
adc
in
sub
cld
jno
xor
xor
add
ja
repz
mov
nop
mov
sbb
fsub
xor
bound
adc
cmpl
iret
cmp
sub
lods
rcrb
jmp
and
xor
adc
xchg
stos
xor
sti
add
pop
aaa
sub
scas
fnstsw
dec
pop
pushf
call
lret
push
clc
mov
les
inc
les
lcall
adc
push
sub
mov
repz
jae
mov
pop
and
xchg
sbb
xor
push
lock
cltd
fistpll
push
in
and
stos
fisubrl
nop
jle
jge
test
jecxz
xchg
cmc
cmpsl
mov
shrb
pop
test
adc
add
mov
aaa
lock
into
les
test
mov
or
or
movsl
out
dec
xlat
call
ja
scas
jne
pop
sbb
or
jg
mov
lods
jo
inc
jl
cli
filds
imul
les
gs
jle
filds
in
test
pop
adc
je
ja
cmpsl
mov
repnz
data16
sahf
mov
pusha
shr
and
daa
rcrb
imul
popa
nop
jmp
push
aaa
stc
test
arpl
and
dec
xchg
scas
sub
popa
ficomps
cmp
pop
insb
adc
jb
int
mov
inc
pop
adc
shlb
push
push
ss
int3
and
int3
push
cmp
jge,pt
pusha
subl
cld
ja
pop
aam
fldl
cmp
mov
sti
imul
movl
dec
popf
or
push
push
adc
mov
add
inc
push
inc
aas
ja
clc
insb
and
aam
mov
mov
nop
and
push
push
and
iret
mov
pop
and
fistpll
cmp
push
test
cmp
pop
sub
add
adc
int
push
adc
mov
aad
stos
icebp
call
inc
mov
jge
mov
scas
inc
xchg
and
stc
fidivrs
loopne
outsl
mov
xchg
xchg
cmp
ret
xchg
addr16
xchg
mov
mov
or
or
rorb
fabs
add
test
int3
xor
mov
and
icebp
push
pop
mov
sub
adc
arpl
dec
pop
mov
or
cmp
sub
addr16
movsb
or
mov
mov
cmpsb
hlt
xchg
and
sbb
scas
fs
push
push
push
lods
jae
cmp
cmp
cmpsb
and
inc
jo
mov
pop
sub
icebp
adc
clc
push
cltd
push
cwtl
mov
lret
lret
pop
sysenter
cmp
decl
add
psllw
pusha
in
pop
je
lea
clc
imull
adc
jl
or
mov
jae
pop
aam
lea
push
push
je
popf
test
xchg
push
mov
aas
lock
sbb
imul
scas
and
pop
sbb
loopne
push
dec
cltd
inc
mov
loopne
cmp
pushf
jns
das
mov
mov
cltd
push
and
hlt
sbb
sbb
push
xchg
mov
mov
int3
js
ret
or
dec
lret
enter
sbb
jmp
aas
jg
mov
in
dec
xchg
std
ja
mov
in
scas
adc
mov
imul
push
arpl
pop
lret
pop
pop
and
movsb
cmp
dec
test
cmpl
insl
pop
pop
xor
xor
fsubrs
stos
inc
lret
movsl
ja
loop
lds
mov
xchg
and
dec
pusha
nop
fimull
jge
dec
xlat
inc
mov
add
inc
lahf
iret
mov
cmp
or
addr16
push
mov
mov
cmp
jmp
inc
cmp
subl
push
xchg
jbe
xlat
pop
add
push
lods
mov
lcall
hlt
push
mov
dec
notl
lahf
xchg
add
push
lock
call
or
or
imul
pop
add
add
adc
sbb
popf
testb
xchg
lret
pop
xor
int
push
mov
inc
pop
imul
fsubrl
xchg
or
cs
adc
sbb
jecxz
inc
mov
jecxz
dec
mov
nop
test
lods
pushf
insl
xor
rcrb
popa
imul
mov
stos
fld
sub
les
roll
lea
mov
dec
mov
mov
and
insl
scas
jae
shlb
movsl
xchg
cmp
out
lods
dec
pop
hlt
je
cltd
push
jle
mov
lcall
pusha
inc
mov
mov
loopne
scas
in
push
cmpl
repnz
xor
out
outsb
pop
sbb
push
stos
les
sahf
or
push
enter
inc
stc
fwait
dec
cmp
aam
test
in
mov
add
mov
cmpsl
addr16
mov
ds
ret
icebp
je
mov
or
mov
and
sub
adc
adc
scas
inc
jge
cmpsb
mov
stos
in
jecxz
nop
mov
add
fisubs
or
push
movsl
sub
add
daa
sbb
loop
mov
mov
cwtl
out
jno
dec
dec
xlat
and
mov
and
shll
loopne
jns
and
dec
jl
mov
sub
lret
rorl
fidivl
push
js
scas
push
xchg
push
dec
ret
add
xor
lods
cmp
inc
lret
pop
or
mov
loope
sbb
jb
clc
fs
popf
xor
cmp
cmp
cs
clc
loopne
mov
add
jg
push
sub
jecxz
lret
sahf
pusha
push
les
push
dec
fiaddl
pusha
repz
movsl
test
repnz
lcall
inc
scas
out
xorl
sahf
dec
xlat
jnp
into
iret
pop
js
lods
in
in
inc
testl
jle,pn
mov
xchg
inc
sbb
dec
xor
loop
fadd
testb
pushf
sar
mov
ret
je
ret
dec
popa
in
mov
mov
int
dec
cmp
lret
ja
adc
or
or
pop
mov
mov
sbb
lods
lea
lods
cmpsl
jne
mov
aas
cmpsl
aam
jns
subl
jb
and
jae
push
lret
adc
negb
push
hlt
dec
or
jae
jno
mov
shll
pop
and
push
outsl
loop
or
in
push
fildll
pop
aam
jl
mov
jg
addr16
je
pop
adc
sbb
xchg
cld
std
aam
ret
jl
push
data16
xchg
jne
test
mov
push
cmp
mov
movsb
mov
fdivs
mov
enter
addr16
arpl
cmp
sub
xlat
jbe
and
lods
iret
mov
cmp
mov
adc
mov
jg
or
mov
xchg
rcll
mov
fldt
xorb
stos
dec
and
cmp
pop
inc
sahf
lods
push
ja
mov
lods
cmpsl
notl
aam
push
stos
cmpsl
pop
arpl
shlb
in
cmp
lds
test
jbe
frstor
js
add
into
lahf
mov
imul
dec
push
push
mull
call
jl
sub
xor
scas
rcrl
aad
addb
push
imul
test
push
xlat
adc
sbb
ret
push
sbb
mov
mov
sub
jecxz
imul
push
pop
inc
lods
xchg
xchg
ret
repnz
clc
mov
unpckhps
ljmp
fwait
dec
mov
scas
div
push
or
js
pop
sbb
pop
mov
ficoml
pop
sbb
xchg
nop
jae
dec
sbb
sarl
outsl
ljmp
cmp
call
mov
pop
das
mov
push
mov
icebp
push
loop
push
lahf
pop
sbb
popa
lods
repnz
push
movsl
icebp
stos
cmpl
jno
mov
jo
pop
hlt
in
sbb
and
mov
lods
imul
test
in
mov
sbb
add
push
cwtl
andl
mov
push
loope
incl
xchg
lcall
jmp
loop
lret
mov
in
mov
mov
push
cmc
test
push
pop
xrelease
repz
mov
out
or
add
in
mov
mov
cmp
popa
mov
pushf
inc
cmp
dec
sbb
test
sub
xor
cmp
je
mov
out
movsl
out
mov
test
sbb
fimull
scas
push
jns
jno
xor
test
inc
ljmp
xor
enter
popf
lods
cmp
ljmp
sub
lret
pop
test
in
rclb
adc
jbe
in
adc
rorl
aaa
ss
mov
mov
ss
movsl
xor
pop
cmp
xchg
xor
mov
movsb
in
das
xchg
mov
xor
cmp
or
xchg
outsb
sub
cmp
lods
das
mov
and
nop
data16
loope
xchg
ss
cmp
sbb
lock
loope
imul
jnp
inc
pop
inc
cs
mov
arpl
mov
out
pushf
xchg
dec
inc
loope
jae
aam
mov
nop
inc
pop
test
xchg
es
cwtl
inc
mov
xor
adcb
leave
adc
xor
mov
insb
push
sub
mov
out
dec
sub
inc
mov
cmp
lret
dec
adc
adc
sti
andb
add
lock
cmp
or
pusha
mov
in
xchg
bnd
jmp
pop
movsl
cmp
pop
das
shll
pop
ret
add
ss
out
add
jge
inc
std
lods
jle
outsb
ss
jle
add
pop
sar
cmp
jmp
pop
mov
adc
jbe
out
repz
cmpsl
mov
jo
lock
outsl
sbb
pop
lock
mov
pop
sbb
mov
int
iret
mov
cmp
or
out
repnz
xor
or
adc
out
out
mov
inc
shl
sbbb
lret
popa
decb
decb
lea
aad
in
mov
jp
add
push
jge
add
push
jle
clc
jb
lret
cmp
mov
dec
adc
cmp
lods
into
pop
mov
cmc
push
adc
jo
adc
icebp
cmp
jno
mov
inc
add
inc
repz
or
add
adc
daa
cltd
mov
mov
push
mov
rorl
add
mov
bound
sbb
lcall
lds
inc
cmpsb
in
xor
push
push
in
fiadds
pop
hlt
rcrb
dec
dec
and
les
fisubl
sbbl
ljmp
adc
int
das
xor
hlt
mov
adc
adcl
and
test
test
or
std
mov
das
out
adc
or
outsb
sub
lods
push
cmp
lcall
sub
mov
inc
mov
divl
lcall
aad
dec
jae
enter
inc
jns
xor
jae
add
int
enter
stos
and
test
pushf
add
aad
sub
movsb
les
in
push
js
sub
xchg
imul
mov
and
into
mov
xor
xlat
repnz
push
test
pop
stos
scas
dec
movsb
mov
pushf
lods
mov
mov
pop
or
and
repz
xor
sub
push
cmpsl
popa
scas
cmp
cmp
dec
dec
adc
push
mov
xchg
mov
inc
cltd
sub
into
std
imul
dec
lahf
cli
lcall
adc
iret
sub
lahf
cmc
mov
mov
cmp
ja
inc
pusha
fsts
dec
stos
lahf
es
lock
cwtl
sub
shrl
or
xor
cmp
gs
sbb
sbbl
in
xchg
in
jl
push
jle
stos
push
nop
xor
outsb
es
mov
xchg
loopne
xchg
mov
lea
cwtl
xchg
dec
mov
xchg
lahf
mov
testb
jle
inc
cmp
push
inc
mov
movsb
pop
inc
lds
sahf
movsl
sarl
jg
aas
test
jmp
cltd
popa
ret
jg
call
loope
enter
test
cld
xlat
cmc
ret
scas
cmp
jae
mov
adc
mov
enter
hlt
cs
sbb
shlb
push
pop
xchg
mov
add
in
and
dec
sbb
lods
stc
cmpsb
adc
jecxz
push
inc
addr16
mov
ret
dec
shrl
fidivrs
dec
repz
in
scas
jg
inc
js
and
jle
jg
aas
dec
lcall
cs
push
movsl
add
push
cmp
imul
mov
mov
adc
popf
out
lret
neg
dec
adc
lock
xchg
fs
add
adc
or
push
sbb
dec
shr
inc
and
clc
ret
add
jge
fdivrl
inc
inc
fs
jp
dec
and
test
adc
icebp
daa
dec
adc
cmp
shl
in
dec
xchg
adc
push
cmp
daa
mov
imul
sub
addb
ret
sub
push
rcll
mov
fsubrl
push
int
punpcklwd
lock
dec
cmp
pop
je
cmpl
rol
pushf
leave
insb
fsubr
mov
adc
pop
mov
push
shrb
xor
mov
mov
push
adc
bnd
inc
out
xor
in
into
mov
inc
incb
es
and
mov
jbe
pop
setg
lret
push
scas
mov
mov
dec
adc
adc
cmp
xchg
inc
mov
adc
movlps
jnp
int
in
inc
int3
lcall
lods
mov
mov
and
ss
stos
push
test
dec
lods
push
xor
bound
jnp
iret
xor
fs
je
mov
dec
dec
pop
mov
out
xchg
adc
loopne
mov
adcb
push
scas
sbb
mov
enter
ss
ret
frstor
iret
adc
mov
shll
lods
jne
jg
sbb
inc
divb
mov
mov
mov
push
andb
testl
mov
add
jle
adc
cld
cmpsb
stc
inc
inc
mov
xchg
and
mov
xor
jbe
inc
pop
gs
mov
faddl
out
lods
es
xor
loop
repz
bound
cmp
mov
clc
fldenv
cmp
mov
xor
add
mov
inc
cwtl
daa
lret
cmpsb
or
push
and
gs
push
nop
shl
sysexit
sbb
sbb
mov
cmp
les
xchg
mulb
add
lock
test
push
xor
ss
cli
dec
shll
leave
inc
ficoml
xchg
lahf
cmp
inc
mov
es
mov
push
inc
test
andl
or
into
pop
mov
stos
push
stos
movsl
sub
jne
fidivrs
cmc
sub
pusha
xchg
add
lock
test
jno
das
int3
jg
jae
shlb
scas
jecxz
into
adc
cmp
and
inc
clc
adc
jge
inc
sub
mov
push
xor
and
adc
mov
xor
and
mov
out
lods
mov
cli
cli
or
scas
icebp
les
int3
mov
inc
xchg
mov
or
add
subb
iret
enter
cmp
and
repnz
shl
test
scas
mov
jae
or
inc
lcall
js
pop
xchg
pop
mov
xchg
cmp
push
jge
ja
loopew
mov
ror
in
pusha
shll
add
dec
jnp
mulb
ret
dec
add
xchg
cmp
movl
sbb
jae
fstps
out
jne
mov
repnz
cmpb
pop
cmp
lret
inc
cld
test
mov
mov
call
xchg
push
call
das
sbb
xor
mov
mov
jb
sub
mov
sbb
mov
mov
je
mov
imul
push
ljmp
jae
popf
stos
inc
loope
jl
and
ret
jbe
or
jmp
sbb
ficoml
inc
icebp
jae
or
cmp
fwait
inc
dec
sbb
imul
cmp
dec
lahf
mov
or
inc
or
mov
test
sbb
scas
xchg
sbb
xchg
aam
adc
jb
dec
fcomp
xchg
jo
mov
fdivrl
jne
mov
mov
adc
fldenv
xor
faddp
sbb
jo
adc
cltd
jnp
dec
cmc
test
insl
mov
arpl
bswap
in
cli
loop
fiadds
pop
or
cmpl
call
pop
out
dec
cmovb
orb
clc
jecxz
and
aad
mov
incl
popf
sbb
shrb
jecxz
pop
cmp
mov
or
xor
xchg
xor
insb
xorb
add
daa
mov
mov
sub
xor
cmp
mulb
nop
loopne
or
sub
add
fs
addr16
xor
inc
mov
in
adc
or
imul
mov
adcb
loopne
sub
jge
mov
je
pop
jno
call
es
add
or
sbb
filds
xor
cmpsl
sbb
jmp
xor
iret
rcll
push
outsb
test
adc
enter
lahf
test
push
mov
cli
scas
fcompl
dec
pushf
xchg
sub
test
aam
das
iret
in
rclb
inc
in
dec
or
cli
add
lahf
cmp
adc
call
dec
shll
fists
or
je
cld
sbb
rcl
add
inc
rorl
mov
push
mov
lcall
jno
and
inc
pop
outsl
cmp
mov
addr16
or
or
test
imul
xor
and
shrl
add
mov
push
mull
repnz
sub
pop
mov
lret
inc
roll
mov
mov
imul
cmpsb
fiadds
pop
mov
mov
aam
inc
and
test
stos
xchg
out
push
lds
stos
inc
push
fsubrs
sbb
jmp
add
inc
jl
push
cmpb
pop
jb
push
cmp
lret
loop
mov
imul
fdivrs
shlb
in
mov
lea
xchg
sbb
outsl
xchg
or
das
stos
fs
push
push
popa
jecxz
fidivrs
hlt
sbbl
xorb
lahf
int
adc
emms
push
dec
lods
mov
and
ret
dec
into
mov
je
jg
push
les
int3
insb
mov
and
daa
mov
adc
sbb
sub
mov
mov
add
xchg
mov
inc
cmc
mov
ret
outsl
imul
aad
pop
push
push
sbb
popf
pusha
sti
lahf
loop
faddl
loopne
filds
js
jg
movsl
push
popa
fwait
shlb
roll
loop
cwtl
inc
lea
push
ljmp
xchg
jb
sbb
test
adc
hlt
adc
scas
and
in
jle
add
dec
addr16
sub
mov
fcmovnb
rorl
lock
jae
dec
push
dec
add
add
cltd
shr
pop
or
mov
fwait
out
es
lret
fldl
inc
lcall
sbb
lea
sub
pushf
insb
enter
pop
gs
cmp
inc
push
mov
xor
bound
mov
shlb
test
fadds
sti
aam
idivb
cmp
push
aad
mov
pushf
aaa
xchg
pop
sbb
inc
xchg
popf
loope
mov
sahf
xchg
pusha
mull
cmp
add
ret
hlt
dec
pop
pop
mov
cmp
je,pn
jg
mov
mov
arpl
nop
pop
mov
push
cmp
add
arpl
add
jo
adc
in
stos
pop
adc
inc
mov
and
pop
pusha
push
repnz
repz
loope
lods
xor
mov
dec
add
imul
andl
mov
xchg
jg
stos
pushf
xchg
loopne
or
fwait
sbb
hlt
rcll
xchg
pop
jbe
xor
adc
sub
and
jle
mov
fiaddl
push
pop
lret
xchg
sbb
cmpsl
mov
pop
cmp
dec
sub
enter
jae
hlt
nop
adc
out
stc
es
ss
icebp
mov
xor
call
daa
cmp
inc
stc
outsb
shrl
sub
add
lds
add
test
mov
sbb
mov
notb
imul
mov
jne
or
sub
jne
or
fldcw
sub
inc
or
movsl
outsl
aad
sbb
mov
jnp
and
fisubs
nop
mov
neg
mov
sar
dec
pushf
test
inc
lods
inc
adc
adc
jne
sahf
sbb
out
push
lea
es
fsts
or
jecxz
and
inc
in
fs
jecxz
inc
rorl
fdivr
dec
ja
cmp
cmp
cmc
and
out
fnstcw
cmpb
mov
jp
fwait
cli
jbe
push
mov
lds
shrl
addr16
sti
cld
shl
mov
add
jp
xchg
inc
add
push
push
dec
push
stc
shr
xchg
mov
lahf
xchg
nop
mov
loope
fwait
jae
out
notl
inc
pop
push
pop
xlat
ss
insl
xor
in
pop
inc
xchg
lcall
pop
ja
and
jbe
jns
sbbb
shl
test
cmc
test
out
stos
sub
cmpsl
mov
push
mov
mov
adc
and
push
add
nop
imul
scas
push
mov
int
loope
mov
lods
jne
bound
lea
pop
emms
js
and
data16
sbb
cltd
xor
pop
xlat
xchg
fadds
lds
es
add
mov
xor
out
jbe
mov
repz
out
inc
mov
or
jl
jno
xchg
inc
rcrb
push
push
enter
xchg
int3
mov
add
inc
popa
pop
sbb
shlb
fimull
cmp
xor
inc
push
ffreep
xchg
push
jmp
int3
scas
push
push
enter
lcall
pop
push
and
outsb
push
sub
call
jg
leave
ss
jecxz
pop
sbb
xchg
push
sbb
cmc
arpl
std
and
sbb
shrb
mov
jecxz
ret
fisubrl
lret
cmp
adc
jno
rclb
call
mov
dec
xchg
xchg
jg
push
pop
lcall
jg
jg
dec
dec
mov
into
imul
mov
sti
outsb
clc
je
shrb
mov
xor
mov
stos
inc
icebp
cmc
fs
enter
and
mov
push
xchg
subl
dec
int3
out
mov
scas
outsb
push
adc
dec
cltd
jmp
inc
add
pop
lds
fiadds
push
cmc
cwtl
or
lock
xchg
jbe
dec
das
mov
scas
push
or
stc
cmpsl
push
and
loop
push
add
inc
xchg
xchg
test
push
xchg
icebp
insb
adc
es
dec
addb
sbb
jmp
insl
repnz
mov
sub
mov
sahf
xchg
pop
hlt
hlt
adc
sub
mov
sbb
jnp
cmp
mov
scas
adc
sub
add
xor
pop
ret
lods
cli
inc
in
cmp
push
cmpsb
mov
imul
icebp
pop
and
push
fadds
adcb
cmp
mov
stos
inc
ljmp
push
sub
jo
ss
sbb
add
jg
xchg
pop
test
stos
jmp
arpl
xor
fmuls
ja
ret
call
pop
add
testb
xchg
lock
ret
cmp
test
xorb
mov
in
xchg
inc
or
bound
rorl
stos
cwtl
mov
push
aaa
jae
test
sub
mov
mov
sahf
loopne
mov
mov
jl
xor
in
xchg
or
mov
push
hlt
sahf
push
mov
fwait
mov
sbb
adc
cmp
bound
xchg
test
imulb
fistpll
adc
shll
dec
jno
out
cmpsb
pop
sub
push
cmpsb
pop
js
xor
cmp
sub
aam
jmp
sbb
push
in
push
ret
push
mov
cmp
jecxz
je
jo
inc
or
sbb
jo
mov
lods
lcall
div
addr16
xor
sbb
dec
rcrb
pop
mov
push
outsl
jmp
test
xor
sbb
data16
into
inc
sbb
and
cmp
pop
jnp
pop
mov
jecxz
cmp
filds
test
call
insb
test
loope,pn
mov
cmc
push
in
adc
mov
mov
icebp
push
mov
jge
aad
jp
mov
int3
repz
mov
int3
cmovae
addl
lcall
pop
ja
into
pushf
jmp
nop
lock
ss
mov
add
cli
xor
hlt
fwait
mov
push
sub
mov
in
and
jno
and
das
adc
ds
sbb
loopne
popa
push
mov
jl
mov
xor
arpl
mov
xchg
negl
inc
cmc
mov
xchg
pop
pop
movsl
mov
jo
push
sub
aaa
scas
sbb
sti
test
cmp
and
clc
insb
xchg
jnp
jne
and
shll
and
gs
shl
or
shll
sub
sqrtps
ss
sbb
mov
mov
hlt
fmulp
loopne
xor
test
push
pushf
div
xor
dec
cmp
adc
in
add
out
loope
cmp
push
mov
fldl
sbb
insb
add
xchg
dec
mov
jae
sub
out
mov
imul
mov
mov
stos
adc
faddl
push
add
nop
fimuls
cmc
hlt
jb
xchg
inc
or
mov
clc
ds
sub
cmp
repz
fdivl
cli
sbb
push
add
das
mov
ds
into
inc
mov
cmc
push
pop
rol
push
stos
adc
xchg
iret
lahf
inc
sbb
sbb
pop
out
or
negl
cld
jae
les
xor
sbb
enter
and
mov
test
add
dec
cmp
lds
xchg
lock
lret
test
push
lahf
push
fsubrl
push
push
mov
test
or
cmpsb
hlt
sbb
dec
rorl
add
and
jl
jmp
or
jb
fstl
pop
lods
mov
xchg
lods
push
xor
sbb
sub
inc
cmpsl
xchg
push
out
lret
testb
mulb
inc
xor
movnti
jno
xor
push
jecxz
dec
xor
dec
jmp
ss
cmc
fldl2t
pop
and
push
out
sub
or
pop
and
add
bound
movsb
adcl
adc
mov
jmp
movsl
xor
xchg
add
and
subb
and
aad
adc
aam
jae
mov
out
jmp
push
mov
int
fldenv
pop
inc
mov
nop
cmc
sub
popa
xor
cmc
inc
xlat
repz
test
dec
sub
es
mov
insl
cmp
mov
or
add
in
push
pop
shll
dec
repz
cwtl
sub
repnz
jne
dec
test
ss
mov
loopne
jb
movsb
pushf
scas
mov
sbb
arpl
hlt
xor
cmpsl
jo
std
inc
sub
out
popa
ret
xacquire
fimull
and
cmp
aas
add
outsl
ljmp
xchg
xchg
fwait
aaa
xor
dec
enter
fwait
jmp
xlat
popf
jl
fimuls
add
ja
and
push
inc
std
ja
mov
mov
dec
les
and
stos
addl
lret
fsubs
xchg
inc
pusha
in
mov
fldt
xchg
xchg
mov
out
in
outsl
jp
imul
imul
aaa
scas
push
or
push
xchg
les
sbb
cmp
or
stos
jmp
adc
inc
ret
xchg
adc
in
sub
mov
ja
pop
inc
push
addr16
jno
mov
jmp
int
repnz
fwait
fs
mov
dec
pop
push
pop
or
push
sub
aad
mov
out
shrb
add
or
mov
push
out
inc
lret
jmp
mov
or
out
lcall
inc
push
sti
push
and
fstpt
es
and
jmp
cltd
inc
mov
push
xor
enter
xor
hlt
inc
out
sti
dec
in
aaa
fidivl
test
lret
mov
ret
and
fadds
dec
mov
jmp
xchg
adc
hlt
xor
cmc
xchg
ss
mov
repnz
mov
and
pop
push
jmp
cmpsb
cltd
fisubrl
daa
adc
cmpsl
mov
push
imul
adc
daa
push
lds
js
das
mov
imul
sbb
push
mov
or
push
adc
push
mov
adc
ffreep
adc
jle
push
imul
out
daa
xchg
sti
cwtl
add
xchg
insb
mov
jno
mov
jae
xor
js
stc
gs
scas
loope
scas
inc
push
xor
rcll
sbb
repnz
cmc
dec
mov
sbb
pop
lret
jge
mov
pop
dec
ljmp
test
sar
mov
loope
notb
bound
sbb
mov
sub
xor
cli
adc
je
out
adc
arpl
test
repz
out
pop
or
ljmp
in
or
mov
aaa
mov
push
add
push
or
icebp
mov
lods
mov
pop
mov
mov
mov
fisttpl
in
xor
movsl
out
ds
jp
pop
imul
xchg
pop
xchg
jge
push
js
ret
in
or
pop
push
xchg
in
lea
inc
int
mov
and
mov
push
fmull
xor
shll
das
fstpl
inc
push
fwait
ljmp
inc
rol
inc
jns
lds
jmp
jp
arpl
lds
ja
mov
xor
nop
push
popf
ljmp
mov
scas
rorb
pop
xlat
pop
insb
push
rcr
fs
xor
icebp
jnp
or
xlat
xor
xlat
stos
test
sub
cmc
mov
xchg
push
cmp
imul
push
bound
roll
movsb
popa
out
jecxz
lods
pop
fimuls
adc
jp
lods
bound
and
lret
jns
push
out
or
icebp
push
mov
jmp
jb
gs
iret
dec
int3
shrl
jno
xchg
pop
pop
movsl
addl
add
and
push
imul
scas
sbb
stos
pop
sbb
jg
adc
dec
and
cmpsl
cwtl
adc
xchg
and
out
sbb
shll
inc
clc
jg
sub
jno
sub
push
mov
mov
aam
in
xchg
sti
cld
push
in
xchg
inc
inc
xorb
aam
jae
mov
xchg
cld
xlat
cmp
movsb
cmp
clc
stos
xchg
inc
pushf
cs
jnp
gs
mov
adc
mov
mov
mov
nop
or
clc
pop
ja
cmc
pop
inc
stos
aam
jae
scas
push
cmpsb
stc
and
mov
mov
mov
mov
fcomip
dec
stos
jle
movsb
dec
shll
jge
ja
inc
cltd
mov
xchg
mov
fs
dec
add
inc
mov
xchg
ja
cmc
adc
repnz
push
and
jno
jne
aas
fwait
sub
popf
mov
in
inc
jp
sub
clc
mov
outsb
xor
mov
pop
aam
cwtl
std
mov
add
xor
xor
sbb
cmpl
repnz
add
lds
lock
je
lret
inc
push
add
mov
adc
sub
fildll
xchg
movsb
sbb
push
jl
test
jmp
aaa
rcrb
repz
inc
cmp
lods
pop
xchg
fadds
mov
sahf
cs
cli
out
jnp
add
mov
or
test
ds
fs
pop
jmp
push
lods
xorl
in
xor
mov
mov
aaa
cmp
cli
call
shlb
in
xlat
inc
and
sub
fdivl
test
pop
repnz
mov
xor
xchg
lea
shr
shrb
add
lahf
rcr
adc
fcmove
xchg
scas
mov
mov
fisubl
mov
add
aas
lret
xor
mov
dec
fcmovnu
roll
cltd
enter
mov
adc
in
mov
mov
inc
xor
push
lods
mov
insb
cmp
out
mov
jo
mov
add
lcall
xlat
dec
jb
lods
sbb
outsb
lret
in
push
mov
pop
and
pop
pushf
mov
xlat
mov
add
adc
dec
outsl
loope
repnz
imul
mov
out
shl
mov
stos
movsw
idivb
pop
gs
and
mov
sti
xlat
sub
and
bound
xchg
inc
mov
test
push
or
lock
jle
pop
pop
int
inc
das
les
jae
dec
add
xor
sbb
repz
call
lock
adc
fwait
loopne
sub
movsl
xor
arpl
push
pop
stc
cli
xchg
jbe
js
jnp
inc
pop
inc
push
in
sbb
ljmp
pop
sub
sbb
mov
push
add
and
pop
jecxz
notb
xchg
jmp
dec
cmp
mov
push
mov
hlt
pop
inc
inc
pop
pop
adc
push
or
jno
loopne
outsl
loop
pusha
loope
add
cmc
pushf
roll
sub
pop
cld
sbb
dec
aas
les
mov
pop
adc
add
cmc
imul
jbe
outsl
iret
xchg
lods
ss
lret
adc
movsl
mov
add
cmpsl
jle
leave
jl
pop
ja
lret
add
insl
pop
cmp
stos
or
jns
insb
push
adc
inc
shrl
je
sub
lds
mov
nop
inc
push
mov
adc
xchg
ss
pop
pop
jecxz
movsl
or
jae
insb
outsl
pop
mov
xor
jmp
xchg
or
push
xor
push
cmp
out
es
lret
shl
xor
mov
push
cltd
shll
repnz
lahf
and
lcall
inc
pop
imul
and
or
imul
pop
adc
jnp
mov
mov
cmpl
movsl
xor
dec
push
lods
sbb
repnz
xor
add
cmp
mov
sub
pop
dec
dec
aam
mov
mov
repnz
adc
test
sahf
or
pop
cli
cmp
and
mov
js
inc
pushf
xor
shr
xchg
add
insb
cmp
mov
fnstenv
push
mov
push
fimuls
inc
or
js
outsl
inc
dec
subl
icebp
fists
or
dec
fs
es
test
add
ret
push
lret
inc
negl
jns
sbb
inc
sarb
inc
aaa
icebp
lds
inc
xchg
sbb
xorb
es
lea
cmp
adc
push
loope
shrb
dec
stc
fs
or
and
xchg
clc
lds
movsl
jnp
outsb
mov
sub
adc
cmpsb
popf
xchg
and
mov
data16
rorl
addr16
out
cmp
jg
mov
fildl
xchg
shll
push
rorl
imul
inc
pop
cmpsl
subl
push
xchg
pop
jb
sahf
sbb
lods
js
aam
or
popf
mov
push
inc
or
std
lods
mov
rorb
cmpsl
jnp
in
mov
insl
jo
ljmp
repz
addr16
shlb
push
idivl
icebp
xor
repz
mov
xor
xchg
cmpsl
xchg
mov
xor
sub
sbb
or
push
mov
das
push
dec
sbb
xchg
shlb
fisubl
add
sub
outsb
mov
sbb
mov
jno
xchg
inc
repz
sub
xlat
cmp
jae
jge
stc
dec
jo
dec
sbb
fdivrp
stc
and
fisubl
mov
lea
xor
lret
std
insb
shrb
xchg
lret
decb
lock
xor
and
sub
mov
repnz
dec
fs
xor
out
fsubs
ret
mov
adc
jmp
repnz
dec
lcall
call
sub
cli
xor
sbb
outsb
sti
icebp
cs
lret
add
rcll
and
mov
cmp
lcall
cmpsl
arpl
add
testl
sarb
enter
push
je
es
bnd
mov
outsb
mov
popa
roll
mov
or
sub
mov
add
imul
pusha
into
lock
mov
add
push
inc
fwait
mov
fadd
push
aas
xchg
insl
loopne
pop
mov
scas
cmc
inc
movsl
push
test
scas
insb
loopne
shrl
mov
xchg
in
xchg
adc
xor
mov
inc
cmp
pop
xchg
adc
cltd
xchg
int3
shll
movsb
mov
cmpsl
add
pop
add
xchg
adc
popf
adc
adcl
pop
xor
lock
fidivl
sbb
sbb
and
inc
outsl
pop
pushf
pop
push
dec
das
sbb
std
adc
cmp
mov
xor
xchg
xor
xchg
mov
adc
push
mov
mov
bound
andb
pop
or
test
mov
in
fsin
shlb
dec
cmp
lds
ficompl
jmp
je
hlt
xchg
sbb
outsb
push
dec
loope
repnz
popa
xlat
jns
cmpb
push
dec
mov
sbb
popa
inc
cmpsb
mov
or
or
insl
mov
adc
cmp
jp
lods
sbb
mov
xor
outsl
cltd
push
mov
in
push
or
cmp
cmp
hlt
notb
and
hlt
and
jp
frstor
loopne
mov
pop
fwait
push
xor
lds
test
into
aas
mov
xchg
cwtl
fbld
inc
jmp
mov
in
sub
repz
cmpsb
push
lods
sbb
dec
pop
fistpll
stc
jge
cld
adc
push
dec
push
xchg
mov
cmp
mov
adc
jno
mov
aam
inc
dec
lea
mov
dec
sarl
xor
lds
hlt
xchg
inc
and
add
xlat
pop
insb
sub
mov
pop
or
mov
inc
xor
cmp
ja
lahf
cwtl
jp
push
mov
out
cltd
mov
sbb
cmc
sub
dec
inc
test
sbb
repz
mov
insl
dec
jb
or
sub
pop
pop
mov
mov
cmp
dec
popf
mov
pop
popf
dec
jp
fisubrs
scas
sbb
xor
mov
xor
mov
je
ljmp
es
cmpsl
push
imul
and
mov
aaa
xor
in
cmp
dec
sti
orl
pop
and
mov
leave
lret
clc
add
pop
les
lret
and
adc
orl
repnz
xlat
clc
add
dec
sahf
loop,pn
std
and
push
fs
jecxz
and
xorb
repnz
les
xchg
and
pop
xor
ja
loop
ds
cltd
push
fldenv
push
mov
pushf
iret
mov
add
mov
mov
and
test
mov
mov
push
mov
mov
int3
lret
lds
xchg
cmp
mov
icebp
xchg
rcrb
fistpll
inc
and
inc
test
mov
or
inc
mov
stos
and
insl
call
push
sbb
xchg
sti
jp
fistpl
les
rolb
ds
sbb
sti
dec
pop
pop
lods
push
outsb
leave
jmp
mov
jl
xor
lret
mov
nopl
ds
dec
outsb
ss
xchg
lods
lea
popf
and
adc
je
cmp
push
loopne
push
sub
xchg
out
add
outsl
sub
fbld
fwait
xchg
inc
fisttpl
js
int
sub
popa
scas
mov
fwait
popf
insb
inc
cld
sub
fnstcw
or
mov
shlb
and
adc
dec
add
arpl
xchg
mov
popf
or
insb
mov
jge
dec
and
and
adc
popa
fmul
push
or
adc
call
dec
pop
mov
loope
outsb
stos
ret
lods
jmp
xchg
push
fwait
sub
add
cli
jo
in
cs
sub
pop
call
leave
ljmp
mul
out
sub
sahf
jae
inc
imul
dec
lods
xchg
fs
xchg
and
ds
pop
imul
lahf
jmp
nop
sub
out
cmpl
push
ret
jb
fisubl
fldcw
fistps
jo
xlat
jo
mov
cmp
aaa
int3
sub
jle
mov
xchg
xchg
sbb
popl
cmp
inc
and
pop
lcall
je
lds
je
mov
sbbb
pop
cwtl
rcrb
movsl
clc
mov
jl
mull
sub
cltd
pop
jnp
inc
xor
ja
ja
fildll
insl
dec
ror
mov
inc
lods
js
pop
ljmp
stos
lahf
and
jo
loope
nop
and
in
repz
xchg
sahf
or
jnp
dec
jbe
mov
and
addb
js
fdivrp
enter
jecxz
pop
call
xchg
clc
and
cld
fisttps
mov
or
jb
andb
lods
sbb
mov
sbb
rcll
inc
or
and
add
outsb
mov
sbb
ss
das
cmpsb
gs
fsts
or
shll
loopne
dec
das
inc
clc
loop
or
xchg
outsb
xchg
ja
xor
loop
pop
and
hlt
and
xchg
lods
pop
lahf
jge
cmpsl
cmpsb
scas
jae
mov
xor
test
pop
idiv
cmc
xchg
mov
test
popa
add
push
and
mov
mov
or
js
mov
popf
repz
out
movb
jmp
mov
stos
pop
jae
nop
hlt
adc
lock
xor
ljmp
imull
test
mov
ljmp
scas
int3
andl
xchg
pusha
dec
imul
xor
dec
mov
pop
fwait
pop
mov
xchg
in
pop
loope
xchg
insb
imull
fwait
mov
rcrb
repnz
pop
cs
std
add
icebp
mov
cmpl
ja
adc
clc
jb
adc
jecxz
nop
sub
push
leave
mov
xor
lock
sub
ret
push
or
add
mov
xor
fstpl
xbegin
mov
add
mov
push
inc
movsl
jl
and
or
lock
aam
pop
std
fiaddl
lods
outsl
cmp
in
inc
inc
lret
loope
push
and
xchg
icebp
fisttpll
repz
data16
ja
out
jmp
popf
cmpsb
or
xchg
aas
push
cmp
mov
in
inc
pop
push
mov
pop
inc
mov
xchg
xchg
mov
xlat
shrb
lods
aaa
arpl
xchg
fwait
clc
and
inc
and
add
inc
ret
fidivl
fstps
and
pop
das
jecxz
std
lret
ret
pop
mov
subb
xchg
dec
jl
arpl
xor
jnp
push
cwtl
loopne
fbstp
jp
lret
in
pop
dec
adc
cmp
pop
xor
shrl
lahf
jl
rcll
mov
pusha
inc
rcrl
xchg
xor
in
loopne
fdivr
xor
push
jmp
iret
insl
out
xor
aam
stos
mov
aam
add
pop
int
pop
adc
or
mov
es
xlat
adc
xor
jecxz
sub
fmul
imul
mov
pop
repz
dec
jmp
lds
and
insb
jecxz
std
enter
push
push
or
cwtl
mov
lea
movzwl
xor
jp
mov
dec
in
or
sub
mov
jle
mov
pop
movsb
mov
stos
or
push
lret
cmp
outsl
fcoms
adc
add
push
dec
add
add
push
pop
or
subl
pop
adc
std
jge
inc
mov
pushf
adc
idivl
in
out
ss
aaa
div
test
push
aam
dec
pop
jne
jae
jmp
or
mov
lds
xor
sbb
jo
sbb
lds
xchg
push
int3
mov
dec
test
wbinvd
pop
rcrl
mov
mov
add
jae
mov
sub
lods
cltd
or
rolb
adc
loop
in
out
shll
es
aas
ja
xor
push
aam
or
lahf
add
into
inc
out
inc
andl
insl
les
mov
push
std
fildll
xor
xchg
ret
aaa
cli
push
ret
lock
nop
cmc
std
jp
mov
rcll
sbb
enterw
fnstenv
rol
not
sahf
movsl
lret
int
jb
dec
int
push
flds
push
sub
in
aaa
daa
push
fwait
enter
pop
insl
repnz
push
push
fsub
fistpl
push
int
cli
mov
pop
mov
add
sti
scas
inc
push
push
xorb
push
loopne
cmpsl
inc
adc
add
sbb
mov
add
stc
sub
scas
push
dec
mov
cwtl
and
in
aaa
daa
fisubl
sbb
shl
faddp
add
in
lret
in
subl
add
out
mov
aam
push
sub
les
push
cmp
dec
cmpsl
cmpsl
mov
pop
out
fwait
in
adc
jno
sub
scas
jns
dec
fists
ss
mov
sbb
xor
lret
sbb
and
dec
jb
iret
or
lock
das
push
sbb
mov
not
xor
adc
pop
inc
lods
dec
jnp,pn
inc
out
jmp
jne
nop
mov
out
outsl
int
scas
enter
adcl
mov
nop
data16
in
xchg
xor
shrb
cld
or
sub
imul
xchg
stos
push
xchg
fndisi(8087
ljmp
mov
out
or
ds
pop
arpl
test
test
jmp
mov
sti
mov
into
cmpsb
rclb
adc
pushf
mov
movsl
stos
adc
fnstenv
shl
pop
push
cmpb
sar
jb
jno
mov
lods
testb
mov
mov
xchg
lahf
xor
mov
lcall
dec
cmpsb
rep
sub
sub
outsl
bound
jno
mov
dec
sbb
push
nop
jo
jno
sbb
in
ffreep
call
cmp
cs
cld
jae
in
sbb
pop
insl
lret
test
xchg
repnz
js
jg
sbb
out
sbb
and
mov
inc
jp
mov
cli
test
fdivrp
mov
das
cwtl
xchg
icebp
jbe
outsb
push
sub
fiaddl
popf
pop
inc
fnstcw
outsl
fsubrl
sub
mov
fwait
enter
das
fstl
cmpsl
roll
and
and
pop
scas
mov
add
pop
and
pop
loope
stos
stc
in
dec
pusha
mov
pop
in
divl
jbe
inc
push
jno
jp
pop
outsl
add
add
cmp
lods
pop
sahf
sbb
sbbl
pushf
sub
cmp
es
fildll
sub
les
leave
fisubs
fcos
imul
pop
rcll
pop
cs
jp
xchg
ljmp
mov
sub
xchg
imul
and
in
xchg
mov
mov
icebp
lahf
mov
adc
xor
mov
fcmovnbe
sub
add
mov
loope
xchg
pop
lea
ljmp
movd
sbb
hlt
lods
mov
adc
fs
scas
daa
push
cmp
xchg
data16
xor
jo
push
adc
mov
cmc
mov
mov
sbb
mov
jecxz
out
imul
orb
std
dec
or
cltd
frndint
lahf
sub
mov
mov
call
getsec
pop
xchg
fnstcw
push
mov
cmpsl
sahf
sub
out
mov
sub
shlb
xchg
cmp
pop
dec
rclb
push
cmp
scas
jae
movsl
fcomi
adc
and
in
cmpsl
sbb
sub
push
inc
and
xchg
cmp
lcall
hlt
pop
outsb
pop
dec
ja
cmp
mov
bound
adc
cltd
jmp
jmp
push
and
ds
mov
jns
lods
cmp
mov
jns
or
mov
or
mov
fwait
movsl
jae
mov
cmp
sbb
stos
xor
push
call
lock
gs
mov
cld
inc
xchg
add
sbb
jg
repz
push
xor
xor
shll
stc
ljmp
pop
and
test
ljmp
jmp
cwtl
scas
repnz
ftst
out
mov
lret
clc
andb
pushf
mov
and
cmpsl
dec
pop
data16
jns
mov
add
repnz
in
cld
jge,pt
imul
xor
scas
jno
and
scas
std
and
rclb
outsb
int
jns
cld
push
mov
mov
sbb
gs
sub
insb
cmp
add
jge
sbb
push
ja
int3
loope
dec
xor
sub
icebp
cli
fs
subb
add
xor
shrl
int3
push
sbb
cwtl
adc
sbb
cmp
mov
dec
push
mov
and
jge
mov
sahf
aam
pop
adc
fcompp
pop
clc
negb
addl
or
imull
mov
sbb
mov
std
popf
ds
mov
mov
cld
inc
bound
mov
aaa
loope
xor
inc
movsb
outsl
push
add
xchg
bswap
pop
pop
mov
xor
fdivl
cmp
ds
lret
insb
jmp
mov
addr16
inc
add
push
pop
sbb
inc
js
bound
add
loope
jp
jno
loop
imulb
jbe
or
repz
cli
inc
cmp
mov
adc
mov
add
mov
sub
aad
dec
mov
ja
daa
dec
leave
and
mov
or
out
addr16
jbe
jnp
stos
dec
cwtl
inc
mov
xor
cli
mov
nop
mov
rcrl
and
popa
lcall
sbb
cmpsb
cmp
mov
inc
ret
mov
jae
push
cs
cmpl
aas
inc
pop
jne
jno
cmp
lock
loop
pop
lcall
sub
rorl
shl
cmp
test
sbb
repnz
stos
es
popf
sub
dec
fnstsw
ljmp
in
cmp
mov
jne
stos
scas
mov
xor
lahf
cmp
jge
xchg
push
adc
data16
sbb
push
loope
das
jne
test
call
xchg
shrb
xor
adc
mov
andl
and
cmp
roll
call
push
lods
in
hlt
cli
xchg
iret
xchg
mov
mov
mov
mov
insb
jo
in
fwait
in
mov
sub
movl
incb
enter
cld
cmp
push
outsb
fwait
inc
lods
jl
cmpl
aaa
pop
jmp
sbb
mov
cmp
push
and
hlt
imul
loope
sub
mov
sbb
sub
push
cmp
adc
cmpsb
pop
jno
add
lea
and
leave
inc
sar
inc
cmp
push
jo
lcall
daa
mov
mov
pop
sbb
stos
add
les
adc
jns
aas
cltd
jge
sub
mov
fcompl
call
rcrl
mov
lock
bound
push
outsl
out
leave
inc
add
xor
test
loope
xor
je
dec
mov
stos
mov
fldpi
ficompl
xchg
and
movsb
mov
fsubrs
ljmp
nop
dec
rorl
pop
out
call
adc
insl
sub
in
and
adc
repz
xor
shl
ret
sbb
adc
and
repnz
rcl
aad
lock
inc
pop
and
aad
or
cmp
sbb
mov
std
stos
pop
pop
mov
jp,pt
push
push
out
sub
lret
mov
fistl
or
dec
mov
scas
jg
mov
out
and
sub
or
test
mov
lea
sbb
xor
lods
and
xchg
mov
fs
mov
popf
xlat
lods
adc
mov
loope
sub
rcl
mov
cmc
mov
int3
mov
flds
dec
ret
xchg
or
pop
fisubs
mov
pushf
inc
mov
pusha
xchg
push
pop
xchg
mov
icebp
dec
mov
adc
orl
pop
loopne
data16
jecxz
inc
test
stc
lock
cmpsl
adc
daa
icebp
bound
inc
sti
mov
push
and
inc
inc
push
into
gs
ds
cmp
call
jo
mov
das
imul
xor
mov
push
jo
push
xchg
sub
pop
ljmp
jbe
pop
in
pop
cmp
mov
leave
sahf
xlat
jo
shlb
mull
add
dec
negb
in
jne
int3
push
xchg
mov
les
jg
out
or
fstp
icebp
leave
roll
std
xchg
push
cmpsl
out
ja
lcall
ljmp
lock
repz
add
pop
scas
mov
inc
lahf
cmp
xchg
mov
mov
dec
sbb
es
xor
insl
cmpsl
sarl
iret
imul
sbb
jb
fs
mov
jg
dec
and
cli
or
inc
cmp
sahf
divl
ss
or
inc
cmp
push
inc
jp
dec
sahf
bound
jbe
insb
lret
into
fdivr
mov
dec
pop
xlat
mov
fistl
cmp
mov
repz
and
subl
adc
das
int
sbb
jp
cmp
in
jnp
loop
in
mov
lods
add
fs
dec
ja
gs
fsubs
xorl
inc
into
jge
xchg
sbb
lds
int
je
imul
stc
lcall
jnp
lret
or
mov
in
fs
pushf
stos
icebp
mov
sub
sarl
cmpsl
stc
int3
sbb
shlb
in
fildll
dec
pop
dec
sub
fstpt
xchg
jle
imul
mov
add
inc
push
mov
dec
cmpsb
mov
pop
lods
stos
enter
clc
rorb
popa
cmpl
out
ja
cmp
fwait
imul
mov
add
push
fidivrs
aas
mov
out
daa
loopne
mov
mov
in
inc
pusha
nop
xor
xchg
lret
adc
add
jmp
jecxz
cli
rol
jge
xorl
mov
pop
jmp
sbb
mov
mov
test
add
xor
int3
mov
ljmp
sbb
ljmp
mov
cmp
loopne
push
adc
pop
mov
mov
fcoml
inc
xchg
push
pop
jbe
and
mov
mov
es
xor
or
inc
les
repz
pop
sbb
mov
dec
loop
mov
cmpsb
in
push
or
mov
and
sub
loopne
xor
push
fsubrl
mov
call
mov
jmp
cmpsb
lcall
inc
fdivrl
cld
ss
cmp
jbe
popa
fldz
sub
cli
adc
mov
mov
and
push
pop
testb
cmpsl
cmp
ret
imul
neg
jno
and
cld
mov
sbb
sub
insb
cld
call
stos
jnp
mov
mov
lods
loope
fwait
dec
jnp
cltd
nop
mov
jno
mov
dec
push
dec
ret
dec
cmp
mov
mov
std
push
int3
jecxz
mov
and
cmp
inc
stos
adc
mov
jl
outsl
jle
movsb
sahf
je
mulb
mov
sbb
clc
fwait
mov
xchg
add
adc
ret
jecxz
dec
pop
loope
mov
jae
pop
movsb
into
jecxz
mov
inc
add
call
in
dec
dec
sbb
xchg
mov
incl
cmp
jno
xlat
lock
mov
adc
sub
sbb
ljmp
sbb
sbb
ss
push
in
iret
pop
sbb
cmpsl
stc
ja
xor
aam
movsl
fstpl
xchg
pop
cld
fnstenv
push
inc
xor
jge
mov
or
stos
push
cmp
ljmp
je
pop
push
daa
sub
inc
mov
push
out
das
cmc
sarl
into
lret
popa
mov
jmp
iret
sti
popa
js
pop
sub
jg
mov
testb
cmp
imul
enter
pusha
fsubrs
xchg
add
fadd
mov
movsb
mov
sbb
sbb
jmp
xor
inc
inc
lds
mov
fstp
stos
js
fs
lods
push
pop
sub
xor
mov
in
jl
sbbb
gs
cmp
std
sti
xchg
add
xchg
pop
enter
aam
jmp
sbbl
inc
scas
cmp
cmp
push
pop
push
mov
repnz
inc
fcmovne
jmp
or
andb
push
adc
pop
push
jae
lods
cmp
inc
add
rolb
cltd
jbe
and
test
pop
add
lods
jns
mov
inc
je
or
mov
loope
mov
xchg
sbb
lock
dec
out
cmp
pop
imul
adc
clc
cmovne
jg
adc
fs
lods
call
mov
cltd
push
mov
push
mov
adcl
sub
xchg
data16
loope
cltd
fstl
aaa
out
xor
sub
cmp
add
cwtl
es
cmp
add
pop
jns
clc
and
pop
jg
std
cli
hlt
fstpl
cmc
in
pushf
imul
into
movsl
jl
sub
test
push
ss
aam
and
inc
hlt
jnp
pop
xchg
jnp
testb
jge
sbb
adc
sti
out
push
jo
dec
lods
lret
fsincos
xchg
stos
mov
cs
fs
adc
add
xchg
pop
out
jo
enter
jle
incl
sti
mov
push
pop
ret
rorl
sbb
orb
sub
faddl
add
dec
push
lea
shrl
lcall
xchg
cltd
andb
jo
mov
das
scas
test
adc
mov
mov
push
enter
push
mov
sbbb
aam
pop
cmpsb
xor
ret
and
fimull
xlat
sbb
push
jns
lock
sbb
fisttpll
call
nop
insb
push
pop
add
data16
adc
cltd
push
push
loop
jae
xchg
out
std
popf
jecxz
out
push
or
xlat
pop
mov
pop
push
mov
loope
jge
or
dec
cmc
cltd
add
bound
aas
pop
fldl
mov
ja
aad
jbe
xor
mov
adc
mov
nop
insb
push
sbb
push
sub
inc
or
mov
je
iret
flds
lret
or
popf
lods
leave
adc
lcall
sbb
jp
sub
lea
mov
out
shl
adc
ret
or
cs
xorb
or
test
adc
cmp
adc
xchg
js
fbstp
inc
and
and
mov
lods
test
add
or
xchg
push
test
xor
xchg
sbb
shll
dec
scas
shl
mov
outsb
dec
and
mov
fstpl
fists
sbb
pop
in
stc
push
cmpsl
push
push
xlat
or
inc
cs
jmp
dec
xchg
add
xchg
movsb
notb
mov
push
insl
mov
sbb
mov
mov
into
jnp
daa
dec
xor
mov
push
mov
testl
loope
gs
push
xchg
pushf
loope
inc
jge
sub
push
enter
je
and
sbb
sahf
xor
iret
push
jno
loop
loope
je
subb
mov
scas
sahf
js
loop
jb
mov
mov
test
repnz
sbb
adc
shlb
mov
shr
xor
push
xchg
dec
xchg
outsl
sarb
int3
cwtl
mov
in
movsl
loop
xchg
fistpll
or
sahf
or
arpl
loop
nop
sbb
jle
xchg
xor
pushf
cmp
lahf
pop
sar
popa
push
push
mov
and
inc
fidivrl
aad
inc
imul
ja
mov
push
push
icebp
inc
test
filds
lahf
pop
push
push
dec
shll
and
sub
inc
js
stos
sub
scas
jno
lds
pusha
push
jecxz
js
test
mov
pop
jno
std
in
movsb
cs
cmpsl
cmpb
mov
stc
mov
repz
call
xchg
or
mov
call
imul
xchg
jg
pop
jmp
inc
je
icebp
sbb
jmp
xchg
adc
mov
std
cmp
pushf
lret
aaa
cmp
gs
bswap
xchg
out
ficoms
cmp
repnz
mov
mov
je
pop
lds
movsl
add
and
adc
inc
dec
testb
jle
filds
xor
xchg
cli
sti
loope
and
sbbl
cmp
push
push
pop
mov
aaa
pop
std
in
scas
sbb
rorl
addl
subb
je
movsl
xchg
hlt
scas
pushl
push
cmp
pop
xor
add
je
repz
xor
mov
push
vzeroupper
add
fsubrs
out
push
imul
repnz
arpl
jecxz
dec
adc
ss
int3
and
cmc
gs
aas
jne
cmp
lret
cli
bound
jge
inc
and
leave
test
ds
mov
push
out
inc
xchg
dec
loope
cltd
outsl
lahf
test
fwait
popf
mov
aaa
movsl
aaa
outsb
pop
lahf
das
cmpb
xor
repnz
mov
rcl
mov
out
cmpsb
cmp
lret
push
xorb
arpl
pushf
test
sub
lods
mov
ret
sbb
nop
nop
xchg
lds
xchg
daa
cmp
and
cwtl
push
gs
jp
fimuls
ljmp
scas
mov
lods
xchg
or
inc
add
inc
sub
sahf
push
adc
rcrl
jmp
fs
mov
pop
dec
fidivrs
lret
xor
cmpsl
outsb
test
pop
stos
sub
lret
mov
test
lods
adc
fs
iret
scas
incl
daa
dec
aaa
sub
cmc
lret
stos
js
inc
stos
xchg
loopne
add
or
outsl
pop
mov
sbb
pop
push
and
push
shll
add
popf
sub
cmc
pop
rcl
pop
repnz
test
fs
sub
outsl
scas
movl
jb
addr16
add
push
pop
pop
jne
test
fcmovnu
mov
in
mov
push
mov
lock
or
test
adcl
fcomp
sub
add
inc
test
add
outsl
int3
sbb
inc
pop
dec
int3
subl
mov
mov
mov
pop
sub
sbb
cwtl
rolb
pop
call
mov
jne
fstpl
in
pop
nop
sub
mov
enter
jl
xchg
lretw
or
rolb
ficoml
sarl
mov
divl
mov
imul
fldenv
test
push
sbb
inc
cmp
jb
sub
xor
fsubl
aam
push
xor
mov
pop
lock
adc
jbe
bound
jno
cmpl
cmpsb
nop
pop
push
sti
jg
cwtl
dec
scas
dec
lret
je
mov
rorb
mov
bound
add
jge
dec
add
scas
or
sub
xchg
subb
xchg
hlt
sbb
dec
xchg
in
outsb
fldenv
add
inc
push
cmp
ret
cmp
adc
movsl
jnp
call
rcrb
rol
xchg
js
negl
cmpsl
and
xchg
sahf
lahf
jnp
or
jg
dec
sub
ds
cmpsl
pusha
daa
stos
sub
add
and
imul
sub
mov
jae
dec
gs
push
jnp
mov
push
inc
outsl
xchg
cs
xchg
and
lds
sub
and
ja
dec
adc
pop
fcompl
cld
xor
xchg
mov
mov
dec
cmp
mov
push
int
push
lock
cmc
cmp
mov
jecxz
mul
inc
fstps
es
jb
push
sub
xor
cmp
mov
dec
inc
ss
clc
cwtl
andb
xchg
insl
or
xor
ds
sub
out
int3
add
data16
push
mov
pop
loopne
pop
cmpsb
lahf
stos
dec
cs
sbb
push
sub
shll
jno
nop
mov
jne
insb
push
xchg
inc
dec
adc
pop
push
push
stos
sbb
jecxz
inc
xchg
or
jne
ds
repnz
lret
xchg
punpckhwd
dec
pop
pop
xchg
lret
sub
mov
or
je
cli
xor
adc
mov
test
shll
sub
dec
mov
and
adc
jmp
xchg
push
pop
dec
outsl
decl
mov
push
push
cmp
dec
pushf
xchg
cmp
outsb
test
inc
and
addr16
dec
and
scas
insb
adc
sahf
ss
shlb
cld
or
dec
fucomip
jbe
cmp
ficomps
lahf
or
xchg
icebp
cli
nop
push
aaa
sbb
scas
adc
ja
lods
dec
inc
in
pop
mov
rol
mov
add
das
adc
jne
dec
pop
and
cmp
pop
in
int
mov
mov
neg
jne
mov
adcl
rcr
out
xchg
mov
inc
stc
loopne
dec
loope
daa
pushf
add
xor
dec
jo
popa
push
xchg
push
cld
adc
pop
jg
mov
sbb
push
sbb
pop
mov
cli
pop
dec
push
in
sti
jp
push
sbb
jb
mov
cs
cwtl
hlt
ljmp
ljmp
cwtl
arpl
mov
jno
cmp
jl
out
dec
mov
sub
in
mov
lods
ss
mov
popf
hlt
stos
pop
adc
adc
lods
inc
jns
xchg
push
mov
or
or
shll
mov
setne
fildl
or
sbb
xlat
push
pop
xchg
mov
push
sub
clc
or
and
ss
movsb
xchg
push
sub
fstl
adc
hlt
mov
mov
mov
adc
lods
repnz
or
add
pop
sbb
bound
push
mov
sahf
sub
in
ss
push
jecxz
push
push
ljmp
cmpsb
popf
jo
xchg
test
in
insl
and
test
ljmp
add
stc
fsts
cwtl
enter
push
inc
sbb
mov
enter
dec
lock
sbb
mov
jo
inc
es
xor
lock
ja
inc
mov
cmpsb
xor
hlt
scas
std
lods
repz
xchg
popa
dec
lds
sti
out
aam
xor
cmp
ja
testb
loopne
insl
pop
js
fwait
pusha
push
push
jl
cltd
sbb
adc
xchg
in
mov
or
mov
push
pop
mov
mov
fidivrs
pop
out
push
scas
jb
pop
jae
cmp
push
jbe
mov
pop
jnp
xor
iret
testl
cmp
xor
and
aad
cmp
das
mov
leave
mov
sbb
pop
pop
xor
loope
test
xchg
sbbl
fs
adc
popf
and
add
mov
sahf
jp
push
imul
lahf
jne
call
insl
mov
cmp
ds
lcall
push
pop
and
cmp
shlb
in
mov
insl
ret
rcrb
aas
pop
adc
mov
mov
addb
cmpsl
and
sub
push
lods
pop
dec
in
je
dec
inc
int
inc
xchg
popf
shr
lods
mov
ret
std
stos
pop
aam
leave
pop
ret
adc
push
test
daa
jno
insb
cmc
sub
daa
push
in
test
push
sbb
push
sbb
aam
sahf
adc
cwtl
mov
pushf
and
pop
mov
cmp
xlat
and
or
loop
dec
xchg
add
adc
push
clc
dec
pop
in
sub
pushf
lods
pushf
clc
pop
add
xchg
jne
out
xor
dec
out
cmpsl
sbb
push
test
inc
daa
call
pop
mov
push
and
enter
dec
ret
jp
jns
loop
test
pop
cli
std
and
hlt
lahf
sub
das
scas
aaa
flds
sbb
xchg
es
add
lahf
pop
ss
outsb
insl
mov
xchg
mov
sarl
mov
or
mov
js
pop
aam
add
xor
mov
cwtl
test
dec
inc
lods
dec
inc
push
add
ds
fnsave
sbb
repz
shll
mov
dec
movsb
push
sbb
inc
sbbb
xchg
push
movsl
gs
cld
stc
mov
lea
leave
sbb
gs
mov
mov
push
mov
xor
or
jl
into
loope
inc
xchg
mov
rcrb
jle
xchg
stos
insl
jnp
dec
push
jg
push
pushf
push
xchg
or
and
lods
mov
cmp
xlat
add
das
or
lcall
pushf
pop
insl
cmpsl
and
cmpsl
sahf
jmp
je
dec
add
or
rorl
fisttps
movl
out
mov
or
jb
mov
mov
loopne
stos
insb
xor
inc
gs
ss
aad
je
sub
jne
stc
push
int
inc
in
sub
fsubrl
loopne
xchg
push
sub
cmp
add
jb
test
add
pop
push
push
sbb
cli
fchs
xchg
jecxz
fisubrl
call
fcmovnbe
imulb
xor
mov
mov
push
mov
xor
jb
out
ficompl
adc
outsb
lds
xchg
adc
cmp
ja
push
xchg
pop
add
cmp
xchg
pop
xchg
divl
leave
xchg
jle
xchg
adc
out
ljmp
dec
inc
mov
mov
lcall
call
push
pop
enter
in
pop
movaps
inc
std
imul
cmpsb
inc
dec
mov
fiaddl
sub
dec
hlt
xlat
pushf
cmp
bnd
test
adc
and
fucomip
aad
negb
call
and
cmp
mov
and
leave
cs
fistpl
xchg
sbb
mov
and
aad
xchg
xor
or
test
bound
shl
das
int
fidivrl
ret
fidivrs
lds
movsb
dec
push
loop
bound
test
outsb
in
ret
imul
or
mov
or
jge
aad
sub
adc
push
mov
test
mov
std
movsl
or
jnp
movsb
shl
cltd
pop
push
lods
push
xor
pop
fiadds
mov
fs
lcall
dec
cmp
or
mov
cltd
dec
push
in
mov
pushf
sbb
aas
mov
push
daa
dec
shrb
push
mov
jno
xchg
loope
lahf
das
adc
cmp
dec
and
jmp
std
stos
sbbb
das
clc
sub
push
jns
repnz
sbb
mov
sbb
enter
inc
xor
cmpsb
jp
cmp
popf
and
xchg
je
inc
pushw
mov
xchg
pop
adc
addr16
aad
cltd
add
sbb
gs
or
call
xchg
testl
xchg
pop
push
iret
bound
aad
mov
inc
aad
fidivrs
mov
push
out
aaa
push
pop
cwtl
push
addr16
jmp
push
jl
jge
ja
test
mov
or
xor
leave
and
pop
mov
adc
stos
jle
push
xchg
mov
inc
jo
jne
aaa
das
xchg
dec
xor
ljmp
inc
stos
js
test
push
mov
jge
jge
out
xchg
dec
cmp
add
mov
in
xchg
cli
push
sbb
clc
xchg
test
fsincos
jge
test
sub
mov
cmp
sti
fwait
std
cmpsb
je
sbb
mov
int3
sbb
add
rorl
out
jmp
sbbl
cmpsl
mov
sub
stc
imul
js
fists
inc
cmc
or
fcompl
repz
add
cmpsb
and
clc
sbb
lods
mov
xor
clc
sub
or
ret
stos
jecxz
add
xchg
mov
call
data16
and
cld
mov
lahf
sbb
ja
xor
in
fiaddl
rorb
push
mov
pop
mov
dec
rcrb
incb
cmp
stos
mov
lcallw
or
push
jge
cwtl
jns
nop
lods
xor
adc
subb
aad
daa
mov
jnp
loop
int
sub
mov
add
jl
pushl
jecxz
decb
ds
add
leave
or
sbb
stos
inc
xchg
mov
or
adc
les
jmp
ret
fcmovnu
push
cmp
xchg
xchg
add
filds
xchg
push
popa
in
xchg
das
pop
xchg
popa
jne
rcrl
mov
repnz
fwait
aaa
and
cmpsl
and
add
rolb
icebp
xchg
jae
cltd
and
jo
push
out
fdivp
sbb
pop
cs
pop
fsubr
mov
add
xor
xor
fidivrs
mov
pop
xor
inc
addr16
xchg
mov
aad
adc
jle
sbb
je
je
mov
shrl
pop
scas
shrb
repnz
adc
sbbb
sub
cs
sbb
cmc
fbstp
imul
loope
mov
js
mov
mov
ljmp
xor
jno
or
fdivrl
cmp
movsb
sub
xchg
mov
inc
push
jmp
cmp
sbb
cwtl
mov
ljmp
push
pop
mov
push
leave
movsb
mov
ljmp
popf
test
sbb
jecxz
inc
insl
out
jns
mull
xchg
jmp
push
andb
dec
cltd
inc
loope
pop
and
or
in
jmp
cmpsb
shll
or
roll
ss
lcall
nop
fisubrs
mov
ret
lcall
fistpl
xor
out
lods
push
mov
nop
testb
int
imul
mov
mov
cmpsb
jg
sub
mov
add
data16
clc
xor
fisubs
imul
sbb
cmovns
outsb
xor
fsubl
std
jp
leave
movsl
pop
das
lret
test
mov
pop
pop
cltd
xor
push
icebp
imul
mov
mov
add
add
or
cmp
jnp
and
pushf
loopne
jb
push
jmp
enter
loope
lea
leave
push
lods
and
xchg
cmp
xchg
fisttpll
push
sub
fistpll
xchg
mov
testl
outsb
sbb
push
sub
push
xchg
adc
lret
fwait
sub
ds
jnp
adc
cli
hlt
stos
cmp
inc
dec
popf
sub
gs
mov
or
aam
shll
dec
jge
push
shrb
xchg
test
push
orb
cmp
stos
jbe
insb
ret
xor
mov
ret
sbb
sbb
pusha
mov
int
rcl
mov
cmpsb
sti
xor
sbb
test
mov
out
cs
lods
aad
out
push
add
in
inc
sahf
insb
out
call
and
test
sbb
ja
jo
pop
mov
adc
shll
mov
mov
mov
jmp
pop
adc
pop
test
mov
lcall
inc
jge
dec
mov
pop
aaa
dec
arpl
and
lods
push
cmp
push
cld
scas
rsm
shrb
inc
stos
sub
lcall
aad
mov
inc
dec
sbb
xor
fldenv
inc
iret
daa
jle
pop
push
or
push
in
xor
out
xchg
push
dec
mov
or
adc
inc
addb
rorl
cmp
sahf
gs
notb
mov
rcl
dec
xchg
pop
and
frstor
mov
mov
lahf
fisttpll
outsb
stos
subl
outsb
jl
jnp
stos
sub
idivb
fists
push
ja
inc
mov
mov
inc
push
inc
mov
mov
push
je
sub
mov
push
dec
xchg
push
jno
sbbb
push
add
test
xchg
mov
fisubrl
mov
adc
cmp
ret
sbb
hlt
dec
jbe
out
adc
mov
lret
inc
fstpt
mov
adc
inc
repz
sbb
test
gs
pushf
xchg
cltd
or
data16
sbb
sub
xor
std
push
mov
add
pop
push
hlt
lods
scas
pop
testl
jns
sti
test
addb
mov
mov
inc
push
jg
repnz
inc
pushf
roll
ret
push
pop
cmp
enter
mov
mov
jecxz
cmp
movsl
iret
leave
jp
sahf
lods
repz
inc
ljmp
cmp
pop
or
xor
lea
mov
dec
dec
sub
stc
sbb
jne
int
mov
hlt
cs
adc
and
dec
fidivl
mov
or
sarl
loop
test
xor
and
push
xor
mov
int3
mov
pop
aas
mov
cld
fadd
add
cwtl
ds
ja
in
js
fbld
in
test
not
in
mov
loopne
inc
lret
fisubl
rclb
adcb
popf
dec
nop
push
xchg
ja
pushf
xor
mov
push
dec
jno
jp
popa
jle
sub
cmp
mov
or
stos
adc
push
cmpsb
cltd
xchg
in
insl
decb
out
pop
add
popa
sahf
and
add
jne
aaa
cmpsb
ja
mov
pop
add
scas
adc
add
in
xchg
jl
inc
inc
mov
cmpsl
lret
mov
stos
jp
es
aas
or
out
ret
flds
jecxz
daa
pop
push
insb
jmp
mov
andb
mov
dec
xor
test
imul
popf
imul
cmp
mov
in
add
push
cmp
cmp
into
ja
cmp
sub
loop
rcrl
dec
sbb
xor
mov
sbb
sbbb
xor
js
cmp
mov
cli
jnp
nop
adc
popf
mov
and
mov
popf
daa
imul
or
cmp
loope
add
and
inc
inc
xor
jecxz
push
add
xlat
stos
sub
repz
cs
mov
mov
jbe
adcl
xchg
fldenv
adc
dec
xor
popf
mov
fwait
jl
shr
sub
push
mov
pushf
mov
sub
loopne
es
sub
in
movsl
inc
mov
cmp
call
adc
push
push
jbe
out
popa
dec
jecxz
mov
orb
insl
fistpll
push
fsts
lds
jecxz
outsb
js
xor
adc
loopne
fidivs
cli
add
sub
xorl
push
sbb
mov
ljmp
pop
imul
mov
inc
and
ljmp
mov
xchg
sub
je
insb
test
lods
stc
pop
ret
xchg
fsubrs
stc
fdivl
or
cld
cltd
adc
xor
scas
inc
sub
movsb
cmp
ljmp
stc
ret
inc
icebp
ret
int
push
push
mov
rorb
dec
out
inc
ja
xor
push
pop
cmp
popf
sbb
loopne
stc
repnz
mov
out
xchg
aaa
sbb
mov
loopne
add
fs
fisubrl
repnz
les
and
xchg
jmp
sbb
les
js
jnp
and
mov
repz
adc
insl
add
jge
xor
fiaddl
add
push
iret
sub
xchg
pop
mov
loopne
popa
jg
scas
or
mov
inc
sub
int
stos
mov
inc
xlat
mov
lcall
int
fiaddl
add
cwtl
in
mov
push
icebp
je
outsl
pop
and
xor
rcrl
test
or
orl
sub
lds
mov
dec
mov
test
mov
jle
pop
into
aad
addl
loopne
mov
fistpll
dec
cmp
mov
mov
adc
inc
jp
aaa
cmpsl
mov
xchg
adc
mov
mov
jae
rorb
rcrb
xchg
loop
push
daa
lahf
jae
push
lcall
shll
jae
loopne
stc
lods
add
and
mov
arpl
lods
xor
xor
repnz
pop
or
adc
test
ret
je
cmp
in
jns
lods
xor
shll
fdivl
push
shll
ret
in
inc
out
and
push
jp
mov
scas
pop
push
outsb
inc
cmp
lret
push
and
dec
movsb
lock
add
jl
loop
xor
mov
or
ret
xor
sbb
cmc
ja
mov
loopne
push
add
ds
jb
sub
and
cwtl
jne
js
mov
mov
sub
stc
push
adc
mov
mov
hlt
fstl
jmp
pop
fwait
or
cli
mov
movl
push
cld
mov
fldl
aaa
xchg
push
inc
mov
mov
aad
jecxz
std
pop
sub
ja
mov
movsl
outsl
jmp
lcall
dec
stos
lea
enter
inc
push
popa
cmc
clc
xchg
mov
mov
int3
xor
pop
jno
shl
repnz
pop
in
sbb
repz
bswap
push
mov
mov
jb
xchg
test
flds
add
loop
test
or
or
push
jns
sub
dec
xchg
jae
adc
jns
and
lods
fisubrs
xor
aam
adc
arpl
dec
ret
xchg
inc
dec
lds
pop
fcompl
push
das
adc
jmp
js
imul
pop
inc
dec
xor
xchg
scas
ljmp
push
xchg
ja
pusha
or
cmc
ret
add
shl
or
jecxz
or
test
lahf
push
into
stc
sub
into
orb
ljmp
xchg
pushf
aas
fstpt
cmp
idivb
lods
jb
fisubl
mov
mov
cmp
cmpsl
leave
insb
and
push
nop
jae
pop
cmpsb
ret
test
jmp
lret
xor
mov
in
aad
add
enter
and
lret
enter
mov
iret
std
out
and
inc
cltd
imul
clc
ljmp
add
push
dec
sub
push
adc
add
bound
loopne
pop
sarl
bswap
or
notb
mov
das
push
mov
les
shll
pop
fiaddl
mov
push
aam
sub
mov
pop
jne
mov
xchg
cmp
scas
outsb
ret
push
add
mov
out
adc
inc
loop
push
cmp
loopne
js
adc
sahf
in
shrb
adc
push
push
and
add
lcall
in
lds
in
mov
lea
inc
subl
pop
sub
adc
sub
dec
jns
pop
adc
popf
jg
bsr
cmp
ss
js
pop
fwait
sbb
xchg
push
in
sbb
mov
adc
stos
imul
fstpl
movsb
in
sahf
cmp
fisubrs
and
sbb
jmp
add
subb
jns
shrl
imul
pop
dec
filds
movsb
ds
pop
add
out
jle
mov
mov
push
sub
inc
les
mov
in
stc
ss
hlt
nop
pop
xchg
pusha
xor
faddl
aas
inc
push
cltd
dec
pop
xchg
mov
enter
add
loope
push
arpl
and
fs
dec
mov
es
lret
and
sahf
lods
rol
insb
mov
push
dec
sbb
imul
leave
push
dec
js
sub
push
rol
je
arpl
lds
adc
mov
dec
ljmp
idivb
mov
test
popa
shrb
addb
or
sar
rolb
mov
jns
pop
in
popa
adc
and
or
mov
aas
xchg
pusha
inc
pop
test
jp
aam
xchg
lods
or
pop
loop
mov
jmp
aaa
xor
dec
fucom
outsl
push
fildl
xchg
mov
and
dec
mov
inc
push
inc
aad
lds
mov
pop
jo
fdivs
lret
in
cmp
pop
mov
arpl
mov
repz
mov
xor
or
add
pushf
dec
scas
jns
jae
andl
into
inc
fcom
test
adc
ds
lret
dec
stos
sti
cld
mov
sbbl
sub
ljmp
push
adc
pop
push
or
es
mov
aas
add
jl
dec
push
inc
cltd
fsubs
and
fmull
lock
and
lret
sub
and
or
add
jp
lahf
jae
xor
push
mov
call
adc
xchg
sub
std
lea
sub
fsubl
xor
and
mov
jg
mov
or
mov
movsb
inc
imul
inc
mov
stos
shl
cmpsb
and
pop
or
mov
and
mov
stos
cmpsb
push
inc
in
ror
int
mov
jnp
dec
and
leave
pop
pop
in
mov
push
and
ss
imul
fbstp
mov
outsb
pushf
shlb
lds
lds
leave
lods
cld
sub
stos
sarb
lods
insb
jle
fs
mov
mov
cmpsl
sbb
dec
popf
mov
incl
stos
jbe
mov
xor
lea
pop
aam
ljmp
add
stos
jle
imul
mov
dec
jo
pushf
cmp
fcom
out
sub
fildll
aas
es
jle
sbb
cmp
stc
adcb
cs
or
inc
xchg
sbb
sub
adc
mov
into
push
rcrb
fadd
xor
lret
fwait
aam
fucomi
cmp
cld
or
adc
lret
mov
or
test
sahf
cmp
sbb
mov
inc
pop
data16
rorl
mov
mov
and
cmp
cmp
imul
scas
sub
negl
addr16
es
dec
or
call
inc
clc
cltd
xor
jmp
scas
sub
into
dec
roll
jnp
mov
cwtl
xchg
mov
aad
outsl
jbe
lods
mov
and
jl
inc
aad
pusha
fs
cli
in
mov
xchg
pop
popa
ror
add
mov
jp
sbb
loop
sub
rcrb
int3
mov
ret
add
and
aaa
inc
jp
imul
push
test
sbb
adcl
js
in
xchg
mov
sbb
add
lret
fistpll
outsb
push
jbe
outsl
inc
stos
and
pushf
dec
out
mov
std
movsl
out
in
outsl
sti
sub
xchg
jmp
mov
push
setnp
jno
push
cmp
dec
test
add
inc
fistpll
das
cwtl
cmp
adc
fisubl
nop
and
icebp
orb
or
jp
fcompl
jae
jne
mov
sbb
popa
cld
loope
insl
xchg
mov
push
xorb
sub
in
and
jnp
repz
xlat
add
jno
mov
repz
pop
sbb
out
jae
lock
push
loope
cmp
sti
es
std
mov
fldt
cmp
aaa
push
sahf
inc
mov
sub
mov
repz
mov
shll
jnp
push
shlb
adc
add
mov
ljmp
mov
cmp
jbe
cmp
mov
pop
movsl
mov
rcrb
loop
test
pop
fadds
aaa
sbb
aad
idiv
andb
hlt
push
push
push
jmp
sub
pushf
dec
xor
jmp
mov
cmp
xor
in
adc
dec
int
mov
dec
outsl
jg
es
sbb
jl
fcmovnu
pop
pop
sarb
mov
mov
push
ja
sahf
inc
and
or
rcrb
ret
bswap
or
lods
inc
jg
xchg
jno
test
loope
lahf
pushf
mov
inc
push
rolb
jae
push
lret
pop
xor
lcall
sbb
fcomps
rcrl
dec
dec
xchg
scas
div
scas
pop
dec
pop
add
bound
pop
fiadds
bound
sbb
stos
push
repz
jb
xchg
aaa
pop
xchg
cmp
or
test
cld
pop
loopne
sbb
insl
jp
mov
popa
sub
cwtl
xor
lea
jbe
cli
dec
push
fisttpll
ss
daa
jb
xchg
loop
icebp
filds
and
fsubrs
hlt
dec
and
mov
pop
jbe
stc
lret
xchg
gs
inc
mov
stc
imul
bnd
inc
sub
and
shrl
stc
inc
cmpsl
int
out
test
fcmovnb
or
int3
xor
jns
out
rcrl
push
adc
jg
mov
pop
sbb
jae
mov
inc
sbb
cmp
add
ljmp
mov
inc
out
sub
je
iret
jb
pop
add
mov
incb
mov
mov
lds
push
sbb
sub
sar
and
popl
in
pop
lea
sbb
ds
lret
orl
jns
mov
stos
mov
ss
pop
gs
jo
icebp
enter
movsb
dec
movsb
das
push
iret
out
or
and
jmp
xchg
xchg
rol
or
inc
lea
xchg
popa
xchg
adc
mov
jnp
test
adc
jge
into
mov
decl
dec
leave
dec
cmp
mov
mov
xchg
push
push
int3
shr
imul
out
dec
shll
xchg
xchg
mov
out
jg
loop
pop
nop
xor
mov
and
pop
cs
sbb
cmp
xchg
push
mov
xlat
sahf
pop
mov
add
inc
jmp
sahf
sbb
lret
inc
in
xor
addr16
jo
push
sub
pop
mov
es
add
and
pop
call
and
loope
or
gs
xor
sub
test
pop
cmc
sub
jge
xchg
xchg
int3
push
leave
fistpl
jmp
dec
je
jg
push
imul
jle
ss
aas
movsl
in
mov
or
into
cs
out
cli
mov
push
fsts
and
jg
out
add
mov
call
cmp
add
sub
adc
mov
mov
outsb
xchg
inc
pushf
hlt
mov
ret
popl
bnd
xchg
nop
inc
mov
in
push
or
rclb
repnz
clc
mov
xchg
arpl
jae
rclb
jp
dec
insl
or
sbb
cmp
addr16
or
es
icebp
cmpl
icebp
imul
add
or
dec
scas
imul
loopne
mov
mov
fisubrl
daa
lret
pop
bound
into
ret
out
movsl
dec
cld
pop
ljmp
and
dec
loop
mov
aad
jge
stos
push
pop
push
jmp
pop
lds
popa
pop
inc
ds
icebp
divl
loop
arpl
push
mov
adc
sti
adc
stos
jmp
dec
ljmp
sub
test
popf
mov
rcr
xchg
mov
scas
movsl
les
lret
jne
sbb
jnp
cmp
orl
cmp
push
and
pusha
xchg
clc
add
aaa
lds
or
mov
or
inc
xor
push
xor
fs
sub
subb
xchg
push
xchg
pop
push
add
pop
gs
mov
clc
daa
xchg
jb
pop
inc
icebp
cs
jp
push
or
lret
sti
sbb
xor
mov
iret
stc
dec
xchg
mov
xor
popa
inc
mulb
mov
mov
mov
pop
jmp
sub
jno
movsb
inc
mov
sbb
test
cltd
into
xchg
je
iret
push
inc
mov
xchg
mov
adc
jb
sti
mov
cmp
jb
sbb
cmpsb
lret
mov
cld
dec
lcall
adcb
dec
or
int3
jno
stc
xchg
pop
and
shr
or
mov
dec
orb
fmull
sbb
addr16
inc
js
push
xchg
aad
mov
in
leave
in
movsb
xchg
icebp
loopne
jg
notl
rorb
jp
xor
ficoml
sbb
xor
push
repnz
sub
jle
aad
sarb
shlb
push
mov
rolb
and
lcall
aas
stos
cltd
data16
popa
lock
jl
pop
loop
push
out
push
incl
addb
inc
jmp
punpckhdq
push
in
stos
jnp
pop
add
cmpsl
sub
jg
shlb
and
sub
pop
xchg
es
add
cmp
dec
fadd
mov
iret
lods
xchg
clc
mov
inc
mov
cmp
fwait
scas
xchg
stos
jns
or
out
shlb
dec
push
lret
fs
loope
outsl
fdivr
jp
aaa
repz
jbe
adc
cmpl
shlb
xchg
ja
fldl
push
shl
lods
icebp
jno
push
push
sarb
and
repnz
cmp
pushf
test
sbb
rcrb
sub
and
or
lea
jmp
jo
and
movlhps
mov
ret
ficomps
xor
fcmovbe
adc
mov
pop
sub
in
jp
aam
xor
cmp
inc
and
xlat
es
shll
addr16
push
test
jae
jl
fbstp
mov
sbb
mov
sahf
mov
xor
addb
jo
iret
push
sbb
in
lcall
imul
dec
insb
adc
sub
in
sbb
cmp
jmp
fistps
inc
mov
jo
aad
mov
and
dec
jecxz
subb
pushl
stos
xor
adc
xchg
sbb
sahf
cmp
int
lods
adc
xchg
sbb
pushw
inc
push
push
into
orb
or
lcall
inc
jle
adc
loop
cld
in
dec
incb
push
fidivrs
jbe
jmp
lock
nop
mov
orb
jne
pop
lods
mov
mov
lods
or
inc
add
bound
xor
ja
inc
jl
pop
push
adc
pop
in
data16
xchg
xor
cmpsb
sbb
ror
inc
jge
mov
sahf
dec
pop
push
inc
lahf
xor
flds
ret
and
adc
insb
gs
mov
mov
add
test
sub
sbb
xchg
cmp
mov
addb
fnstcw
adc
outsl
jl
push
test
les
lret
rcrb
inc
mov
push
and
pop
cmpsb
stc
adc
pusha
mov
mov
pop
ljmp
shll
and
pop
xchg
sub
jno
sbb
pop
sub
faddp
clc
rcl
sbb
mov
pop
adc
and
les
stos
scas
or
lock
sbb
dec
dec
pop
jl
cmpl
mov
pop
lcall
or
das
cmp
lock
mov
cmpsb
test
loopne
xchg
adc
mov
mov
ret
mov
and
sub
out
push
push
sub
test
mov
or
xchg
scas
inc
jno
loope
inc
mov
fs
filds
jmp
push
into
cltd
imul
jl
sub
dec
test
cmp
push
int3
mov
cmp
pop
add
pushf
mov
or
enter
jge
roll
sub
jg
push
and
ds
push
ret
into
jne
bound
push
cmp
dec
cwtl
or
pop
jecxz
fldenv
in
lahf
stos
push
push
dec
jge
gs
sub
lcall
push
je
mov
loopne
aaa
mov
mov
sub
or
jo
dec
test
inc
aam
call
divl
mov
push
and
or
inc
push
mov
daa
adcl
and
adc
icebp
movsb
jge
sub
punpckhdq
xchg
cmp
pop
push
add
sahf
add
push
adc
in
adc
iret
add
and
sbb
ret
mov
movhps
mov
inc
pop
pop
popl
mov
inc
es
dec
add
sbb
dec
mov
lcall
cmp
es
mov
cmp
cmc
jb
jne
dec
pop
mov
cld
movsl
jbe
sbb
daa
add
xchg
sbb
inc
lret
mov
jle
loope
add
call
jbe
push
mov
sbb
rol
sbb
lods
movsl
mov
js
fadds
imul
xchg
movsl
fistl
shl
lret
push
inc
repz
int
sbb
insl
push
mov
sub
jecxz
mov
xchg
xchg
scas
repnz
test
push
aas
int3
lret
adc
jle
add
add
in
xchg
fsubrl
lcall
and
mov
or
stos
and
ficoms
scas
inc
mov
and
pop
lds
in
mov
negl
lods
movl
push
sbb
sub
mov
das
nop
sbb
fadds
and
add
mov
pop
xor
clc
xchg
sbb
sbb
mov
fs
scas
xchg
sbb
jbe
mov
lret
jo
push
mov
inc
adc
outsl
cmp
and
lcall
push
test
ja
into
push
mov
pop
push
add
jo
push
pop
mov
pop
adc
pop
repz
mov
fimull
dec
mul
sub
and
std
mov
sbb
add
or
jb
int
les
out
or
push
sahf
aaa
scas
loope
ds
pop
mov
negl
daa
outsl
cmpsb
vmovlps
jne
adc
cmp
hlt
xchg
std
jmp
dec
test
adc
enter
push
lea
out
or
jecxz
add
mov
adc
xchg
js
and
dec
push
sbb
lcall
aaa
add
push
xchg
fsubl
mov
out
sub
fldcw
push
adc
das
stos
fcoml
mov
fsubs
sbb
loop
pop
sti
cmp
lret
int
inc
push
leave
jg
and
sahf
incl
je
mov
and
addr16
cld
rolb
xchg
bswap
ret
dec
pop
aas
gs
push
js
mov
nop
pop
and
movsl
rcrb
jbe
sahf
test
into
cmp
sbb
sti
shlb
push
pop
push
lods
or
push
pushf
ror
mov
push
dec
movsb
cmp
mov
frstor
adc
scas
imul
pop
mov
mov
mov
movsl
cs
pop
cmp
out
outsb
sbb
jnp
mov
sub
mov
sub
orb
shll
aad
mov
adcb
and
ljmp
fwait
inc
imul
mov
sub
sbb
push
push
test
adc
adc
movsl
ficompl
cld
arpl
push
cltd
mov
lock
mov
out
leave
cltd
pop
adc
addr16
xchg
cmp
out
imul
aaa
push
mov
subb
push
dec
or
mov
xor
jae
mov
sub
daa
xchg
insb
push
jb
mov
loopne
inc
or
sahf
or
adc
loop
lods
or
mov
dec
loop
out
fisubl
addl
imul
movzwl
mov
sar
cli
std
push
push
stc
mov
xor
mov
insl
push
push
sub
jbe
adc
fldpi
out
enter
xchg
mov
std
les
lcall
and
scas
cli
cmp
mov
mov
push
cltd
push
fsubl
and
outsb
xor
jmp
sarl
mov
push
sbb
cwtl
aam
clc
lahf
pop
idivl
push
in
insb
jle
and
inc
xchg
xchg
pop
mov
mov
ftst
pop
in
rcrb
mov
add
jp
lret
jae
and
xor
int
nop
jecxz
inc
std
lret
jmp
inc
mov
mov
or
xchg
in
mov
or
sub
dec
pop
stos
outsl
test
aas
in
or
shrl
cmp
in
loope
rorl
clc
mov
loopne
shll
push
mov
test
push
mov
dec
sahf
mov
push
nop
pop
popf
adc
xchg
and
jae
arpl
xor
mov
aam
cltd
mov
sahf
sub
cmp
push
xchg
lock
ret
jecxz
push
and
test
push
sbb
and
sbb
add
xchg
xchg
jecxz
rclb
jp
inc
into
outsl
dec
pop
icebp
dec
mov
jae
push
push
push
inc
push
sbb
cmp
cmp
mov
mov
daa
ret
jle
push
push
sbb
es
sub
dec
jno
jb
mov
scas
and
or
dec
iret
pushf
cld
icebp
rcrb
fldcw
in
sbb
clc
xor
jl
insl
cli
fs
ljmp
sub
jl
and
orl
sti
mov
ja
sub
xchg
mov
add
xchg
aam
int
outsb
jmp
add
lods
std
inc
test
pop
or
mov
test
mov
arpl
popf
ds
cltd
push
sar
stos
cld
xor
push
mov
inc
mov
cmp
add
jp
lret
and
cmp
cmpb
cmc
mov
out
xor
sti
repz
shrb
lahf
xor
pop
jo
lahf
int
adc
outsl
cs
cmp
mov
xlat
xchg
add
insb
bound
push
jg
mov
jmp
ds
push
xchg
add
push
pop
lds
cmpsl
sbb
mov
rclb
cmp
das
cmp
pushf
push
js
roll
in
push
cmc
arpl
pop
cmp
add
int3
xor
movsb
xchg
jno
push
mov
dec
test
stos
lock
icebp
inc
mov
inc
nop
jge,pt
mov
xor
lea
xorl
cmpsl
andl
fidivl
cs
loope
and
xorl
pusha
fmull
outsl
ret
fsubs
ret
addl
cld
movsl
test
cmpsb
jmp
push
icebp
aad
xor
rcr
orl
negl
out
mov
js
mov
cltd
jae
xor
or
push
pop
fwait
push
sahf
sub
test
imul
pop
das
ficomps
nop
mov
stc
mov
lret
leave
mov
pop
popf
mov
sbb
lods
push
sub
mov
inc
repnz
lret
xchg
data16
outsb
out
mov
xchg
stos
fwait
test
mov
cld
daa
pop
les
rclb
add
pop
mov
or
jp
out
insl
push
sbb
jne
xchg
jge
inc
icebp
mov
aad
out
dec
popf
subb
cmpb
dec
cmpsb
and
xchg
out
ficoml
xchg
rcrl
dec
cld
xchg
sahf
jb
xor
jle
or
pop
or
pop
lcall
outsl
lods
xor
sub
push
add
movsl
mov
lock
mov
sub
push
mov
dec
ficoms
fnsave
add
mov
cmpsl
mov
or
mov
mov
hlt
lret
mov
pop
mov
pop
xor
add
jb
adcl
mov
xlat
dec
or
cli
pop
cmp
or
cmp
mov
push
gs
mov
or
aaa
xchg
xor
jns
mov
xor
push
xchg
outsb
push
sub
sti
cwtl
fidivl
mov
cmp
hlt
into
sti
divl
sbb
push
pop
lahf
mov
cmp
ret
or
and
dec
fwait
cli
and
mov
xchg
sbb
cmp
bound
xchg
mov
sti
mov
fsubr
mov
mov
adc
mov
das
or
fwait
pop
and
push
test
add
cmp
inc
lds
xlat
shlb
and
fcomp
push
jge
and
pop
ret
mov
push
movsl
daa
out
ficoms
hlt
cmpsb
jp
add
fsubp
mov
cmp
push
adc
mov
pop
ret
repz
fcoml
js
sbb
inc
fcmovne
xlat
mov
lods
and
ret
ret
divl
iret
cmp
or
pop
xchg
and
sbb
cmp
ficoms
test
sti
pop
or
xlat
unpcklps
sub
mov
loopne
in
adc
out
lret
jno
fmull
cmp
lea
je
cli
cmp
scas
dec
fucomip
push
sbb
std
jo
cmp
in
cmpsb
in
scas
lcall
xor
mov
and
cmpsb
stc
add
sub
dec
jne
jae
add
dec
push
pop
mov
sti
adc
mov
xor
dec
int3
xor
ds
popa
imulb
mov
cmp
xor
push
int3
push
adc
rcrb
sub
aas
data16
xchg
fisubrl
hlt
push
jne
scas
or
pop
lea
jl
xchg
inc
test
jle
xchg
or
jae
iret
jbe
rcrl
xor
sub
adc
daa
sahf
dec
shll
dec
arpl
push
clc
jge
test
adc
fs
xchg
fcoml
cwtl
shlb
fsubrs
cmc
pop
pop
iret
iret
stc
movl
jecxz
addb
mov
cwtl
push
pop
mov
loop
pop
movsl
imul
add
inc
jl
cmpsl
mov
add
cmpsb
cmp
mov
sarl
mov
shl
xchg
out
testl
pop
aaa
cmpsl
fwait
mov
into
inc
lods
in
insl
jb
jp
cmp
mov
iret
adc
or
push
inc
jp
sbb
inc
add
adcl
cmp
into
out
jne
lret
pop
pusha
cltd
hlt
out
sub
push
lahf
nop
sbb
mov
mov
cmp
fucom
lock
mov
mov
dec
sub
daa
dec
enter
cli
xchg
loope
add
inc
mov
fwait
dec
mov
dec
shll
fsub
scas
and
scas
sbb
cmp
xchg
daa
out
popf
inc
push
sbb
cld
arpl
call
fnclex
or
inc
sub
addr16
ret
sub
add
sbb
cmp
aas
adc
sahf
lods
xor
ss
dec
push
out
sbb
adc
xchg
arpl
ret
dec
jo
xchg
nop
push
pop
jg
xchg
jo
lret
push
cmp
sbb
shrb
xor
adc
rcrl
nop
roll
cltd
sti
cmp
test
push
idiv
mov
test
pop
mov
mov
int3
dec
sbb
push
adc
jnp
cs
sbb
xor
xchg
notl
mov
nop
push
iret
loopne
sahf
popa
shlb
dec
xor
or
pop
in
test
xor
lock
lods
pop
imul
int
arpl
sub
xchg
push
hlt
sbb
lret
lds
lods
push
and
mov
bound
sbb
mov
pop
jnp
mov
cmpsb
mov
inc
sub
inc
imul
fidivrl
popf
fndisi(8087
dec
aas
pcmpeqb
loopne
push
in
jmp
push
cmc
insl
jge
mov
adc
cmp
fdivs
jl
pushf
adc
xlat
pusha
data16
test
jbe
sbb
xchg
add
push
push
arpl
mov
and
jmp
dec
xchg
adc
aas
pusha
outsb
xor
add
xchg
fnstcw
jae
inc
lret
jecxz
adc
push
fdivs
in
rcr
inc
icebp
repz
and
inc
mov
push
sub
add
das
add
icebp
mov
inc
out
adc
cs
mov
dec
ret
add
cmp
inc
mov
sbb
dec
jmp
nop
xchg
mov
negb
and
in
or
add
adc
dec
dec
mov
xchg
push
test
lds
xor
pop
xchg
jge
outsb
cmp
xchg
cwtl
jno
mov
out
lret
repnz
ds
pusha
sub
xor
push
inc
xorb
cmp
pop
xor
add
lahf
shrl
arpl
cmp
imulb
test
arpl
add
cwtl
inc
inc
dec
inc
xchg
push
mov
mov
mov
lods
adc
xchg
sub
xlat
and
push
nop
add
push
push
sbb
icebp
rcrl
jae
mov
pop
rolb
dec
jle
mov
mov
out
out
mov
push
jbe
dec
loope
test
fadds
aas
ds
jno
pop
insl
popf
mov
loop
mov
xchg
push
pop
mov
mov
fsubrs
repnz
cwtl
into
orb
adc
push
add
aaa
cwtl
lcall
enter
data16
jmp
and
pop
xor
ret
push
and
in
in
and
xchg
mov
in
ds
je
mov
loop
les
test
push
or
lahf
mov
dec
mov
cmpl
mov
imul
mov
xchg
and
mov
cmp
push
cli
lcall
and
jmp
xchg
into
dec
fcomps
mov
fidivrl
scas
sbb
fsubrl
scas
cmp
in
and
and
mov
push
add
sub
and
sbb
inc
mov
inc
mov
je
mov
cmp
cmpsb
jno
and
sti
pop
or
loop
fsubrl
or
push
cmp
cwtl
dec
cld
add
icebp
cmp
pop
rorl
jno
je
out
ja
jo
pop
push
clc
xor
or
pop
mov
cmc
inc
pushf
into
gs
lahf
incb
adc
and
mov
pop
adcb
and
lahf
and
dec
inc
shrb
or
adc
les
scas
add
sbb
add
sbb
popa
roll
lahf
xor
loop
jl
sub
inc
ljmp
cmpsl
sub
pop
aas
or
stc
call
jecxz
in
xchg
add
xor
mov
jl
push
mov
push
xlat
mov
push
negl
andb
cli
pop
mov
mov
sbb
stc
or
and
ret
fistpl
mov
fdiv
adc
ror
jae
mov
test
inc
loopne
not
clc
and
push
sub
pushl
mov
scas
fwait
mov
cltd
mov
mov
imul
jns
mov
scas
movsl
mov
dec
adcb
fwait
jp
adc
orl
jl
mov
jmp
lea
decb
data16
mov
stc
scas
stos
push
jl
mov
fucomip
out
pushf
inc
rcrb
scas
push
mov
and
mov
inc
aad
gs
mov
inc
mov
and
or
pop
jae
iret
xor
imul
adc
incl
mov
xchg
pop
xchg
push
xor
sbb
pusha
inc
lcall
test
loop
imul
daa
sbb
lods
sarl
leave
cmp
mov
or
andl
sbb
cmp
sub
mov
sub
imul
jmp
or
data16
ja
in
or
push
fs
lcall
jmp
dec
mov
mov
mov
insb
pop
jmp
mov
mov
pop
jne
lds
lock
and
and
add
inc
mov
call
inc
outsb
mov
jecxz
in
add
xchg
iret
pop
jp
rolb
pop
int
fbld
ljmp
jb
movaps
adc
int
sti
jo
push
dec
push
jns
push
in
jno
mov
loope
mov
mov
inc
scas
iret
mov
aam
jle
imul
test
stc
mov
out
mov
stos
js
outsb
orl
push
cmp
xorl
xor
dec
jno
arpl
sahf
push
stc
jno
in
pop
leave
cmpb
loope
call
loop
lret
insb
jmp
mov
fcoms
popf
jno
ds
imul
mov
int3
xor
iret
outsb
movsb
pop
pop
or
pop
movb
cmp
test
in
mov
dec
out
cli
push
and
lret
lods
data16
mov
pop
dec
clc
xchg
pushf
add
loopew
mov
arpl
enter
add
jecxz
pop
pop
pop
jbe
xor
ret
xchg
cmp
inc
xchg
cmp
dec
jmp
iret
fs
gs
pop
dec
mov
mov
mov
imul
inc
lds
fsub
push
out
jp
movsb
dec
icebp
ficoml
adc
sbb
jb
call
sbbb
xchg
test
xchg
cmpsl
shrl
test
jnp
jo
out
les
mov
fsubrs
ja
mov
mov
movsl
jle
sub
lret
stos
push
cmp
mov
mov
pop
and
std
out
xlat
lcall
jo
adc
mov
and
push
pop
test
popa
mov
sbb
cmpsl
inc
sub
jne
and
and
cltd
lret
loop
fsts
sub
sbb
outsb
jle
je
in
insb
pop
inc
lret
aas
mov
aad
and
sbb
idivl
push
and
mov
adc
add
mov
insb
mov
xchg
xchg
mov
cmp
mov
adc
out
cmpsb
cmp
callw
mov
mov
roll
push
sti
push
inc
lret
add
mov
pop
dec
pop
int3
sub
fstl
aas
cmp
dec
popf
xor
xor
je
xor
sbb
arpl
push
cmp
pushf
dec
xchg
jl
or
mov
pop
rorl
test
jecxz
xchg
jle
xchg
or
lret
pop
ret
repz
out
hlt
fadds
out
pop
mov
pop
xchg
js
add
cmp
cs
push
xor
inc
jnp
das
mov
cmpsb
das
adc
inc
ljmp
test
ds
or
aam
dec
sbb
mov
gs
xchg
mov
dec
sbbl
adc
cmp
sti
and
push
dec
dec
cmp
jnp
cmc
mov
mov
xchg
adc
pop
xlat
nop
jmp
and
sub
cmp
mov
jns
sub
or
ss
fnsave
and
cmp
ret
pop
jl
xchg
imul
cmp
fldln2
and
cmp
decb
subb
jg
cmp
stos
movsl
sbb
fcmovu
dec
pop
jnp
aam
mov
iret
lock
jecxz
outsb
scas
fs
add
jmp
xor
cld
aad
sbb
mov
ret
jl
dec
fwait
pushf
ficoml
in
js
cs
ljmp
add
int
hlt
cmp
rcrb
mov
ret
lret
shr
movsb
in
xchg
daa
push
in
push
dec
daa
mov
or
in
mov
inc
daa
mov
aam
inc
inc
adc
xor
pop
mov
jo
es
mov
sahf
mov
mov
into
lcall
jne
adc
lods
mov
je
shlb
mov
aad
dec
sbb
stos
test
cmp
sbbl
sbb
dec
aad
fiaddl
dec
xor
pop
dec
mov
mov
std
mov
pop
in
adc
dec
xchg
xchg
or
es
cmp
push
push
or
lret
or
adc
pop
push
sub
mov
ficoml
push
mov
mov
add
xlat
add
test
scas
mov
jno
fnstenv
je
and
ss
imul
fsubl
test
outsl
jne
add
mov
nop
cmp
hlt
fadd
and
mov
incb
sub
shlb
cwtl
lret
sbb
andb
and
xchg
ja
es
jns
inc
xor
sbb
fcmovnbe
xor
lcall
inc
out
or
inc
fstpl
icebp
add
xor
loop
cs
mov
pop
dec
or
mov
arpl
and
fwait
sbb
jp
sarl
data16
daa
push
je
pop
push
inc
movsl
lds
enter
outsb
or
scas
jp
js
insb
add
mov
leave
pop
sub
mov
push
fldt
jne
xchg
adc
lahf
adc
dec
mov
pop
inc
push
xchg
pop
add
dec
fwait
sub
loopne
rcl
les
insb
jnp
sbb
fisttpl
int3
sub
inc
rorl
test
jns
mov
lcall
pusha
or
xchg
or
jae
or
call
jmp
lret
mov
jo
push
mov
aam
inc
lea
addr16
rolb
in
aaa
loop
push
add
insb
insl
aas
loope
cs
push
sub
jo
mov
lahf
xchg
push
lret
daa
lret
and
cmp
mov
mov
idivl
pop
stos
aas
push
mov
enter
das
in
test
xor
adc
mov
dec
std
cmpsl
sbb
cwtl
stc
mov
imul
and
sbb
popf
movsb
xlat
push
jge
out
mov
cmp
sub
sub
loope
fcomi
pop
adc
dec
fstp
push
push
outsb
orl
imul
push
mov
std
xor
xchg
mov
or
out
stc
lahf
dec
xlat
clc
jl
or
fisubl
adc
jle
cmp
into
pop
jge
xchg
jmp
jmp
lds
lods
xchg
pop
loop
inc
adcb
adc
inc
cli
mov
cmpsb
jge
inc
leave
jp
out
aas
and
sbbb
xchg
adc
enter
jbe
movsb
inc
pop
mov
rcrb
icebp
sbb
cmp
int
dec
rorl
in
daa
pop
int
sahf
std
jecxz
push
lea
xchg
mov
mov
ljmp
popf
mov
imull
jb
ret
std
in
subps
enter
dec
cmp
sbb
adc
jle
jbe
mov
aad
mov
outsl
mov
jo
sbb
sbb
xchg
mov
or
je
adcl
call
lahf
jmp
push
or
xchg
xchg
in
and
pop
and
ja
ret
add
movsl
into
icebp
inc
in
ret
cmp
popa
cmp
orl
add
test
les
inc
aad
push
or
xchg
xchg
inc
mov
xchg
sbb
cld
ss
xchg
mov
scas
and
sub
hlt
loop
adc
sub
in
out
lods
ds
cwtl
xor
xor
ss
fwait
lahf
add
es
subb
les
add
es
insl
outsb
outsl
xor
push
dec
arpl
mov
lods
pop
outsb
push
dec
lods
mov
or
or
push
sti
sti
mov
mov
add
dec
jbe
stos
sti
jb
ja
add
mov
mov
xor
lods
out
fcmovne
pop
inc
push
sbb
jo
sub
push
hlt
incb
xlat
adc
inc
mov
mov
jnp
ljmp
repnz
out
push
movsb
insb
cmpb
cld
pushf
fdivp
cli
xor
insl
loopew
dec
addr16
outsl
das
push
rorl
jg
xchg
test
enter
inc
xchg
mov
adc
mov
test
test
jb
lret
add
inc
fcomp
pushf
stos
pop
fimull
icebp
xchg
cmp
xchg
lcall
add
in
and
hlt
sbb
sti
cmp
push
out
inc
aad
add
scas
xorb
jecxz
push
and
dec
movsb
push
push
xchg
cmp
mov
filds
mov
dec
sbb
aam
jbe
pop
inc
sarl
push
jg
xchg
sarl
rdmsr
cmp
andb
cmp
ja
jge
jecxz
subl
dec
dec
push
andb
xchg
mov
adc
rcrb
push
fistps
add
sbb
and
or
jno
dec
hlt
mov
xchg
push
dec
mov
add
aas
pop
fs
fldcw
dec
xchg
das
iret
xorl
pop
jne
lds
orl
arpl
jne
test
sbb
repz
pusha
adc
scas
sub
pop
hlt
cmp
iret
fs
sub
inc
or
rolb
xorl
and
push
std
ljmp
es
cmp
xlat
inc
jl
push
data16
pop
sub
xor
dec
cmc
es
dec
push
cli
jb
imul
bound
mov
jo
test
in
hlt
stc
dec
scas
jno
scas
ret
sbb
cmp
mov
inc
mov
cld
das
sbb
xchg
xchg
cld
push
cmpsl
stos
pop
lcall
pop
data16
or
daa
add
sahf
leave
lds
popa
into
dec
cmp
mov
imul
pop
jbe
or
mov
fisttps
xchg
xchg
adc
fnstcw
fbld
push
negl
and
mov
lds
add
xorl
out
or
test
pop
ret
les
inc
adcl
jecxz
negb
sbb
fdivp
ucomiss
or
mov
cmp
lret
scas
inc
scas
fcoms
iret
dec
lods
out
xor
add
out
hlt
jle
inc
adc
pop
pop
jb
lods
nop
cmp
add
sub
pop
dec
pop
jg
mov
mov
fldl
inc
loopne
push
pop
lods
gs
jecxz
xchg
sarl
stos
lahf
in
int3
aas
in
dec
inc
jecxz
popa
lret
lahf
push
out
add
in
test
mov
cmp
insl
loop
fisttpl
jno
jp
pushf
cmpsl
jo
xchg
in
imul
dec
cli
dec
in
push
push
pop
jbe
and
sbb
ljmp
in
xor
dec
lea
sbb
xchg
loope
xor
cmp
stc
or
mov
or
movsl
mov
stos
lods
lock
mov
daa
popl
int3
adc
push
loopne
push
dec
ffree
gs
xchg
push
sbb
mov
mov
cli
inc
hlt
outsb
ret
mov
mov
adc
sbb
mov
test
daa
out
cld
mov
daa
int
dec
mov
and
add
push
int
pop
push
pop
lret
or
adc
rcrb
mov
adc
push
and
cmpsb
das
xor
mov
in
rcrl
popa
pop
jb
mov
push
rol
sbb
mov
cmp
popf
arpl
int
mov
movsb
pushw
out
imull
aam
dec
int
jno
lret
pop
inc
js
dec
std
mov
pop
nop
lea
pop
or
adc
lods
lods
and
cltd
cmp
roll
dec
adc
inc
lahf
dec
cmp
ds
fisubrl
xor
lret
roll
mov
xchg
xor
pop
add
stos
jne
clc
mov
xchg
loop
sbb
sub
sbbb
in
cmpl
inc
hlt
push
orb
loope
xchg
or
xchg
inc
insl
test
mov
aad
xchg
xchg
sbb
jp
jecxz
ffree
hlt
inc
jecxz
daa
push
repz
push
repnz
int3
int
and
decb
dec
sub
mov
int3
sti
mov
xchg
in
xor
dec
push
sub
scas
lret
mov
sbb
mov
xchg
mov
push
mov
sub
mov
shll
neg
and
cmp
cmp
sub
arpl
pusha
cltd
cmp
xor
jg
pop
aam
mov
inc
arpl
xchg
icebp
in
je
cmpsl
jne
adcl
cmp
jmp
ret
fwait
lahf
cwtl
inc
lds
cmp
lret
mov
int3
icebp
aad
js
mov
out
cmp
dec
pushf
mov
and
mov
or
iret
push
cmp
stc
pusha
mov
xchg
jnp
mov
pop
mov
cmp
out
jg
lock
push
pusha
inc
cld
test
jmp
repnz
addr16
enter
loopne
mov
push
test
shll
subb
jno
xchg
add
xor
data16
push
insw
xchg
mov
push
add
sub
test
xchg
pop
bound
leave
sbb
or
add
ljmp
fstpt
pop
lahf
cmp
pusha
xor
in
repnz
movb
push
lahf
mov
sbb
stc
xchg
pop
lods
pushf
mov
sbb
in
leave
mov
push
jg
jg
stos
mov
test
add
sbbb
mov
cmp
mov
xchg
dec
inc
cmp
aam
fnstsw
push
subl
sbb
out
cltd
adc
xchg
cmp
sti
cltd
ds
es
mov
xor
sub
les
add
incl
push
cli
ret
mov
adc
xchg
xchg
and
pop
push
cmp
push
add
out
jo
idivb
lcall
popf
out
fbld
rolb
xchg
in
pop
mov
and
movsb
cmp
gs
dec
adc
mov
mov
mov
push
pop
in
cmpsb
and
cwtl
add
test
jg
mov
jns
xchg
je
test
stos
jg
xlat
sub
test
sbb
lcall
xchg
mov
xor
dec
lahf
mov
js
fcmovbe
push
pop
adc
popa
or
push
movsb
add
enter
out
adc
jb
add
fwait
cmp
mov
or
xchg
adcb
xor
movsl
out
dec
xchg
jecxz
xchg
imul
insb
ja
jae
gs
mov
and
pop
add
ljmp
les
xchg
ds
inc
in
mov
pushf
cmovg
adc
cmp
fidivs
nop
jae
jbe
xlat
sbb
in
xor
sub
sbb
dec
xchg
stos
push
cmp
lods
mov
movsb
paddw
sbb
mov
adc
fiadds
out
mov
jae,pt
jb
dec
icebp
inc
mov
imul
inc
sub
sub
xorb
aam
xchg
mov
rcrl
cmpsl
lret
cmp
sbbl
xchg
ret
dec
jo
aad
mov
push
xchg
sub
popf
or
sahf
mov
push
mov
roll
repz
jae
push
push
sbb
mov
test
fldz
cmp
icebp
fstpt
xlat
pop
fmull
mov
aam
insl
add
mov
add
or
ds
and
push
cs
push
xchg
pop
cmp
leave
frstor
jmp
movsl
push
push
shrl
stos
aad
add
sub
and
sarl
subb
ja
repz
xchg
sbb
xor
ja
xchg
pop
aaa
pop
fiadds
out
jbe
cmp
into
push
xchg
push
sbb
fsubrl
dec
pop
fistpl
sub
out
loopne
out
fldenv
nop
sub
nop
insl
fwait
jno
pop
gs
pop
jle
sbb
push
jno
loope
lret
ds
push
xchg
push
cmpl
lods
adcb
or
fld
jno
sahf
mov
or
out
dec
icebp
aam
add
adc
out
outsb
movsl
imul
leave
ja
lock
in
jge
xchg
lea
cmp
push
fstpt
test
aaa
push
inc
xor
fildl
inc
adc
sub
loop
sarl
mov
test
xor
sbb
jnp
or
imul
inc
push
lret
mov
loope
sahf
imul
cli
push
out
popl
sub
out
jmp
dec
mov
lods
xchg
jmp
cmp
push
xor
mov
movsl
idiv
dec
dec
daa
pop
xor
cwtl
inc
sahf
sbb
mov
movsl
call
dec
xchg
inc
push
jns
sub
orl
rclb
aas
sub
mov
mov
and
mov
cmp
fyl2xp1
enter
icebp
fidivs
cwtl
int3
movsb
and
testb
mov
mov
cmp
aas
add
movsl
clc
call
mov
fnstsw
xor
fwait
jle
pop
push
add
es
scas
mov
mov
mov
and
inc
mov
mov
ror
aad
dec
lret
sbb
aam
push
dec
cmpsl
cmp
lahf
repnz
scas
pop
lock
js
xlat
sahf
repnz
fcoml
add
xor
cmp
fnsave
out
fcompl
iret
or
xor
xchg
lahf
push
popa
xor
fwait
xchg
jnp
or
inc
js
dec
test
mov
sbb
push
lret
jne
mov
das
mov
inc
xlat
fiadds
ds
stc
mov
lahf
cld
mov
mov
pop
rcrb
dec
sub
adc
push
adc
hlt
das
mov
or
aas
ja
or
cs
jae
xlat
pushf
pop
data16
popf
hlt
or
push
mov
inc
arpl
cmpb
dec
cmp
ss
jl
push
or
push
push
mov
js
adc
cmp
mov
mov
push
mov
dec
stc
cmpsl
pusha
out
shlb
sub
xchg
imul
inc
iret
jo
mov
movsl
jmp
adcl
enter
dec
jbe
push
mov
pop
pop
add
lea
lock
das
mov
cld
nop
push
leave
inc
daa
inc
jge
pop
sub
inc
mov
scas
lds
push
ret
rep
mov
ja
push
mull
cmp
test
xchg
pop
or
jl
xor
into
pop
orb
inc
nop
sbb
push
into
pushf
cmp
mov
jmp
addr16
dec
scas
pusha
roll
mov
or
mov
inc
into
mov
xor
mov
add
xor
popf
aaa
sub
mov
hlt
push
scas
sub
mov
inc
xor
shrb
mov
out
add
xor
int3
mov
lcall
push
fstl
cltd
test
popf
jle
ret
int
in
gs
add
cmp
ret
fildll
andb
cmp
fildl
cwtl
rorl
mov
push
fcompl
testl
shl
mov
inc
orb
mov
addl
out
mov
xor
int3
adc
mov
dec
fpatan
jo
mov
sbb
popl
mov
mov
dec
lret
cltd
inc
push
jle
inc
pop
xor
cltd
out
dec
aas
into
cmpsl
iret
push
xchg
in
ja
mov
xor
cmp
or
ja
sbb
cmp
or
push
or
push
jo
mov
sbb
pop
insb
mov
pop
ljmp
mov
outsb
adc
pop
imul
pop
inc
cmp
clc
std
int3
xchg
int3
jne
cmc
ss
rcll
scas
repnz
pusha
lods
hlt
rol
mov
adc
fisubrl
aas
negb
mov
or
gs
lds
push
clc
pop
stc
pop
call
repnz
mov
sub
fwait
sub
inc
push
inc
test
fildl
sahf
cmc
push
fidivrs
mov
pop
jns
mov
cwtl
inc
cmp
testb
or
xor
test
mov
cwtl
push
inc
out
bound
jecxz
jg
in
xchg
mov
iret
arpl
adc
push
or
inc
add
pop
pop
loop
dec
fdivs
cmp
in
xor
out
cmpl
pop
iret
inc
shll
adc
mov
out
popa
pop
lds
stos
or
sbb
arpl
xchg
xchg
jmp
pop
aad
pushl
or
jae
flds
and
mov
leave
sbb
mov
arpl
out
gs
aas
mov
pop
push
add
mov
mov
cmp
add
movsl
mov
mov
sub
cmc
xor
xor
mov
insl
loope
and
movsl
aaa
sub
mov
push
clc
jb
add
into
pop
dec
clc
mov
sbb
outsl
mov
dec
xor
cmc
ljmp
mov
rol
cmp
stos
shr
jb
ss
xchg
add
cmp
in
pop
outsb
and
jbe
dec
movsb
sub
pop
lods
scas
fadd
das
rorl
adc
mov
clc
and
sbb
mov
cmpsl
imul
mov
aaa
mov
pushf
nop
jecxz
push
lret
inc
sbb
push
jecxz
int
pop
push
push
jne
test
xchg
adc
xchg
fstps
pop
mov
mov
push
into
inc
test
cmpsb
rcll
mov
pop
cmp
cmp
sbb
mov
mov
int
fiadds
sub
loope
jns
push
jne
add
and
xor
push
xor
cltd
mov
or
adc
push
dec
clc
pop
out
mov
mov
into
fisttps
jmp
inc
dec
sub
sub
int3
mov
pop
jbe
jge
inc
mov
push
sub
out
jns
inc
dec
fsubs
xor
dec
inc
shl
ret
push
or
xchg
fildl
push
push
and
mov
or
outsb
push
push
mov
push
pop
xor
lock
outsb
mov
mov
lret
adc
rolb
into
xchg
cld
push
insb
cli
jle
movsl
mov
addr16
xchg
pop
jp
push
leave
sbb
dec
mov
pop
jmp
hlt
adc
inc
or
and
dec
pusha
mov
push
cltd
mov
leave
clc
mov
inc
pop
inc
jno
jge
cmc
jae
push
xlat
test
testl
xor
xchg
sbb
mov
cmp
or
cmc
lods
ds
adc
sbb
out
ja
xor
ljmp
mov
fcoml
mov
xchg
mov
sub
lods
fadds
ja
dec
jae
xchg
jne
insb
pop
jl
icebp
rorb
push
enter
pop
insl
jg
xchg
pusha
shlb
test
mov
fnsave
mov
adc
pop
push
xchg
adc
inc
cmp
data16
mov
or
jge
mov
cmp
sub
and
stos
mov
xchg
sub
or
mov
xchg
pop
jb
adc
dec
xchg
add
push
cmp
movsl
jmp
push
mov
xor
add
and
push
daa
push
sti
fisttpll
add
pop
push
dec
lahf
fldenv
or
pop
mov
cmpb
scas
in
jle
mov
imul
and
scas
repz
dec
iret
bound
aaa
ret
push
sub
ds
sarb
mov
jmp
subl
pop
add
imul
push
sub
shl
subb
es
inc
hlt
or
scas
cmpsl
in
xor
shlb
insb
dec
ja
and
aad
sbb
daa
mov
sti
push
ss
insb
sub
xchg
jbe
dec
sub
aaa
enter
cmpsl
lds
in
enter
andl
adc
mov
repz
adc
xchg
jecxz
outsl
add
enter
jge
push
push
pop
push
fwait
sbb
mov
adc
push
and
push
and
pop
outsl
adc
cmpsb
jle
push
enter
jno
lcall
sbb
scas
outsb
andb
xor
sub
stos
sbb
test
enter
aad
mov
xor
adc
sti
cmc
ret
pop
inc
test
clc
mov
mov
add
dec
jge
into
data16
push
bound
push
mov
rcr
add
jmp
xor
sbb
inc
pusha
imul
adc
inc
inc
leave
lret
pop
rolb
ret
xorb
out
lret
and
lret
aaa
xchg
ljmp
cmpsl
jae
add
decl
iret
add
sbb
std
mov
aam
decl
scas
arpl
sub
cmp
adc
mov
stos
test
inc
fs
nop
push
repnz
jp
cmc
pop
sub
inc
outsl
push
addr16
icebp
mov
jo
xchg
shl
push
nop
xchg
mov
sub
sub
pushf
jo
push
or
pop
jl
xchg
jns
in
sbb
int3
inc
ret
sbbl
ret
scas
je
cmc
fstl
jge
xor
iret
outsb
push
cld
pop
adc
jns
or
movsl
rcrl
fnsave
push
dec
mov
push
out
lds
mov
iret
mov
push
mov
movsl
inc
push
fists
pop
notb
xor
jno
clc
push
inc
fisttpll
inc
add
jmp
leave
out
fisttpl
setbe
cmp
or
aad
or
inc
mov
xchg
dec
dec
add
push
imul
les
xchg
mov
popf
bound
icebp
in
subl
idiv
cmp
pop
dec
mov
in
test
daa
mov
std
roll
cld
or
add
cmp
aas
jae
push
enter
push
lock
loope
jg
xor
inc
stos
cs
xor
mov
andb
mov
jb
pop
mov
inc
pop
lea
push
imul
popa
sub
push
mov
rcr
stos
pop
sahf
add
mov
mov
jo
or
pop
test
jl
addl
sahf
xor
jmp
adc
pop
inc
ret
mov
ss
mov
shl
out
pop
sbb
cmc
mov
lcall
pushf
lcall
fistpll
add
inc
jnp
push
dec
jae
test
out
leave
mov
xchg
in
mov
sbb
dec
jmp
or
or
jl
movsl
ss
pop
ret
rcr
dec
icebp
push
loopne
mov
or
sbb
outsl
mov
sub
mov
and
imul
hlt
sub
aaa
popa
int3
push
push
cmp
adc
xchg
test
dec
sbb
add
xchg
and
insb
fwait
nop
cmp
sub
in
hlt
stos
cmpb
test
and
add
sbb
daa
jne
shr
sbb
mov
jnp
push
push
cmc
scas
dec
cmc
or
xor
outsb
int
ljmp
loopne
and
rcrb
mov
aaa
push
xchg
out
adc
call
mov
sbbl
imul
adc
mov
cld
call
xor
mov
push
movsl
xchg
push
cld
scas
sub
cs
or
inc
lock
shll
jo
mov
push
insl
or
xchg
cwtl
push
lock
insb
xchg
out
pop
cmpsb
into
push
dec
and
add
sbb
data16
xchg
adc
aad
mov
add
dec
mov
lods
dec
jge
mov
mov
jno
push
aas
pushw
pop
lods
xor
rcrb
push
xor
pop
push
dec
orb
inc
lods
sub
idivb
addr16
pop
loop
addl
in
pop
lock
add
cld
adc
aas
pop
ds
fnsave
push
push
mov
lret
xchg
clc
jmp
or
shll
pop
push
fdivs
jae
sahf
fldln2
or
int
cmpsb
and
pop
sbb
inc
inc
out
mov
stos
fiaddl
cmpsb
sbb
test
sbb
mov
mov
pop
xchg
or
or
mov
mov
je
mov
push
xchg
sbb
sbb
sub
aas
sbb
mov
xchg
dec
test
pop
push
mov
in
add
and
into
push
cs
jb
jns
out
and
and
bnd
loopne
int
cmp
arpl
cmc
xchg
mov
or
divb
push
mov
and
cmc
clc
mov
pop
cltd
inc
dec
fsts
add
scas
xchg
mov
loop
cmp
lahf
sbb
ror
out
imul
mov
dec
lcall
adc
arpl
in
aas
xchg
incb
lds
mov
rol
mov
mov
mulb
idivb
out
xchg
sbb
sbb
insl
repz
xchg
cmp
cmp
cli
inc
xlat
or
add
mov
push
jns
adc
cmp
push
cmp
les
imul
sbb
cwtl
jne
adc
hlt
sbb
lcall
xchg
arpl
and
xor
adc
sbb
mov
or
jb
mov
dec
test
push
push
ss
loope
imul
mov
xor
scas
xchg
jne
mov
into
add
xchg
je
testl
and
adc
and
addl
int
pop
rorl
loop
pushf
xchg
pop
sub
xlat
mov
out
xor
js
jmp
fildll
mov
int3
pop
or
fisubs
xor
ja
dec
adc
rcll
cs
dec
out
sti
enter
repz
mov
xchg
mov
xor
mov
xor
mov
out
fsubp
xchg
push
jb
inc
xchg
dec
or
cmp
fwait
or
mov
sbb
sbb
sub
mov
ds
inc
mov
mul
scas
sub
repz
and
cmovge
jmp
repnz
push
mov
dec
lret
sbb
xor
pop
arpl
clc
insl
aam
sbb
cmp
pop
lret
inc
push
xchg
aaa
cmp
jo
in
xlat
sub
push
jg
mov
and
mov
fdivrp
ss
test
push
mov
push
cmp
lods
inc
pop
mov
or
inc
shlb
or
mov
stos
mov
std
loop
addr16
or
mov
pusha
or
in
lds
adc
sub
pop
mov
mov
ret
sti
loop
pop
push
cmpsb
outsb
mov
push
xor
loop
sub
jmp
lods
mov
jle
mov
shrb
xor
ffreep
xor
or
leave
mov
insl
cmp
in
fxch
out
jl
loop
out
dec
mov
stos
sbb
movsb
jle
iret
pop
push
jp
test
cmp
xor
gs
cmp
fs
sbb
xchg
cwtl
dec
and
jae
cld
cmpb
nop
pop
rcrb
pop
pop
orl
ficomps
jg
inc
imul
shlb
ret
mov
add
mov
jle
shll
jnp
setl
testb
pop
in
in
stos
lods
mov
ja
rorb
dec
pop
stos
pop
mov
pushf
insb
pop
les
mov
jp
ljmp
fdiv
fisubrs
xor
imul
adc
incb
mov
jnp
xchg
popf
pop
pop
xchg
xchg
or
cmp
xorl
lret
iret
jmp
scas
pop
inc
adc
push
sti
inc
xchg
pop
rorb
inc
or
add
xchg
xor
jecxz
shrl
mov
leave
sbb
pop
js
pop
and
filds
jns
cwtl
out
dec
loop
popa
sarb
ljmp
and
mov
push
cltd
adc
add
icebp
add
rcll
inc
sub
cmp
sarl
popa
int3
adc
icebp
lret
in
xor
rcl
jecxz
ret
dec
lret
cmc
shll
jl
insb
dec
testb
cmp
push
inc
add
push
jnp
push
jno
inc
fiaddl
mov
xchg
mov
jo
cltd
hlt
das
sub
cmp
stc
neg
pushf
jge
xchg
cli
jne
cmpsl
dec
pop
adc
mov
xor
ds
jp
push
mov
outsb
sub
adc
push
and
fistpll
outsb
mov
mov
insl
jl
imul
xchg
mov
mov
xor
or
adc
sbb
js
xchg
test
mov
push
stos
movl
mov
mov
sahf
andl
or
jno
mov
divl
addr16
adc
lods
push
in
aaa
xchg
mov
lock
das
jecxz
or
and
xlat
xchg
dec
inc
jmp
inc
je
xchg
add
xor
in
cmp
fdivrs
adc
cmc
sub
cli
mov
mov
daa
loop
inc
push
mov
negl
cmp
mov
out
mov
mov
out
pop
adc
xchg
cmp
adcb
adc
andl
shrb
pop
int3
adc
mov
idiv
jmp
xor
dec
leave
pop
jmp
or
xor
in
imul
xor
adc
fdivs
roll
sub
jecxz
inc
mov
add
sarb
and
cli
cmpb
mov
stos
ret
shll
fisttpll
cli
movsb
in
out
pusha
mov
cmp
mov
pop
push
cmp
xor
arpl
mov
repnz
mov
or
xchg
push
mull
inc
mov
jle
dec
movsb
mov
pop
in
push
mov
in
rolb
test
nop
jns
imul
lea
leave
lods
loope
push
iret
sbb
sub
mov
mov
add
cmc
stc
in
jg
inc
test
stos
mov
js
cltd
repnz
xlat
mov
in
mov
push
ja
nop
je
outsl
pop
loop
or
ror
xchg
jbe
and
cld
inc
pop
mov
dec
jl
lods
adc
cltd
cmpsb
mov
add
insb
enter
add
dec
cmp
mov
or
xor
mov
jo,pt
test
pop
lods
rcrl
xchg
aam
lea
sbb
inc
mov
or
cs
jp
ja
pusha
test
cs
in
stc
ja
cmp
or
into
or
add
incb
mov
add
imul
add
xor
jl
addr16
pop
or
adcl
loop
lret
jmp
sub
popf
cmpsl
xchg
dec
cmp
cmc
rolb
add
adc
loopne
pop
inc
insb
and
out
scas
cmp
jg
xlat
cmp
add
push
jno
and
pop
fwait
daa
fistps
push
cmp
int3
xor
xchg
cwtl
shll
daa
sysret
inc
xchg
jnp
mov
xor
in
xchg
push
push
lock
cmp
sub
jle
test
mov
pop
sti
cmp
outsb
test
fwait
sub
sahf
fwait
jmp
sub
ljmp
mov
push
insb
inc
inc
push
sub
mov
cmpsl
xchg
pop
pop
mov
push
xor
test
inc
aad
xor
cmp
or
int3
or
aas
lock
idivb
stos
xor
cmp
out
loopne
sarl
loop
subl
xchg
mov
push
xor
cltd
cmp
aaa
test
sub
mov
jae
fwait
pop
mull
cmp
sar
add
pop
pop
mov
gs
sub
dec
leave
pop
add
mov
push
sbb
mov
sub
mov
icebp
or
push
xchg
xorl
sub
loopne
call
lret
js
sahf
out
sub
sbb
jo
je
xchg
cmc
cltd
movsb
sti
out
jb
cmpsl
xor
cmp
add
jno
jmp
adc
add
push
or
ret
insl
cmpsl
jp
adc
jb
outsb
adc
jg
dec
jnp
push
push
ret
hlt
es
sub
pop
ljmp
push
rclb
shl
cmp
daa
dec
dec
test
mov
shll
mov
pop
adc
jnp
shll
scas
xchg
jge
pop
cmp
aas
stc
add
push
cmp
test
adc
daa
repz
cmp
sbb
call
and
xlat
rcll
outsl
fucomip
and
mov
sarl
aas
adc
cmp
shl
lock
fwait
neg
xchg
call
shl
mov
lret
push
ret
inc
jle
and
cmpsb
es
or
imul
jle
in
adc
addr16
jl
lret
sbb
push
push
in
into
inc
js
inc
inc
jbe
jne
xor
ljmp
out
scas
je
imul
test
pop
cltd
insb
cmp
sub
jge
mov
and
out
pop
rcrb
or
and
std
pop
inc
mov
enter
cwtl
out
push
adc
scas
insl
cltd
mov
shrl
imul
fs
in
cmp
sbb
or
xorl
sub
jmp
adcb
pusha
fmulp
call
repz
dec
out
imul
rorl
and
clc
mov
push
cmp
lcall
mov
cmc
dec
ds
arpl
out
aam
cmpsl
sbb
xor
jnp
mov
pop
clc
pop
daa
xor
and
sarl
mov
mov
mov
pop
push
xor
insl
jne
stc
addb
xchg
push
cmp
fs
fidivrl
cwtl
push
xor
test
icebp
sbb
dec
push
data16
insl
roll
adc
std
aad
lods
dec
aaa
pop
popa
cwtl
in
inc
cs
lock
or
mov
pop
mov
lock
push
lock
jp
mov
jl
jae
dec
jo
jo
dec
icebp
xchg
ss
dec
pop
les
mov
mov
sti
mov
aas
arpl
sbb
int3
pop
call
loope
sbb
xchg
push
mov
mov
add
sti
or
fmull
das
push
je
jg
repnz
pop
cmpsb
lcall
fs
out
xor
xchg
aam
or
add
xchg
test
push
sbbl
jno
data16
mov
out
bound
cltd
cli
addb
shll
shlb
fistps
sbb
test
cmc
jp
mov
mov
add
jne
push
xchg
jns
jae
out
mov
jecxz
into
aaa
jbe
pop
dec
or
mov
scas
jae
call
test
sbb
mov
scas
jecxz
fnstenv
xor
jp
push
xor
incl
fisttps
xor
std
dec
pusha
cwtl
idivl
xchg
xchg
movb
sahf
sahf
enter
aas
testl
xor
js
ret
fs
ja
or
dec
push
inc
lcall
dec
add
xchg
stos
xor
mov
push
jp
jmp
mov
mov
mov
and
push
in
cmp
sbb
pusha
call
shrb
dec
lcall
lods
xor
jmp
jp
sub
push
leave
clc
xchg
xor
test
out
icebp
repz
push
mov
fisttps
or
loop
cmp
cmp
clc
mov
dec
insl
cmp
sahf
jne
bound
dec
push
xor
ss
int3
imulb
std
aad
shl
enter
and
shlb
xor
xlat
mov
ret
fwait
sbb
sbb
dec
dec
fistpl
repz
xor
scas
xchg
adc
stos
mov
test
fistps
fbstp
sbb
adc
rcll
cli
inc
popa
mov
bound
dec
mov
fwait
jb
nop
pop
lods
shlb
lahf
jne
hlt
push
mov
xchg
outsl
fistpll
or
popa
or
or
pop
scas
popa
punpcklbw
mov
lods
in
sbb
cmp
dec
xchg
fs
pushf
mov
jge
clc
les
lahf
faddl
lods
cltd
into
loop
add
adc
xor
add
int3
movl
dec
mov
pop
sahf
mov
aas
cmp
repz
bound
mov
fmulp
xchg
xlat
repz
rclb
xchg
jp
nop
daa
pop
jno
jmp
pushf
out
push
ds
sti
aas
hlt
bound
ds
lahf
pop
pushw
stc
xchg
std
xlat
sbb
loopne
xchg
mov
inc
xchg
outsb
mul
aaa
popa
xor
repnz
or
pop
inc
jbe
jno
faddp
jp
dec
das
jp
fidivrl
xor
push
xor
xchg
inc
test
movsl
fcmovnu
inc
xor
mov
add
push
xchg
lcall
or
loope
mov
ficoms
mov
insb
stc
loop
pop
or
cld
testl
loope
adc
les
cmp
jl
mov
in
mov
cmp
inc
out
or
mov
mov
stc
test
jb
loop
xchg
jo
cwtl
rclb
lret
mov
sbb
test
and
push
movsb
push
jl
or
sub
pusha
mov
mov
popf
xchg
fldlg2
fdivrs
stc
js
push
mov
ret
rorb
sub
shlb
dec
push
jle
adc
or
sahf
lret
fbstp
mov
gs
jmp
pusha
dec
gs
push
dec
gs
mov
add
push
and
xchg
test
sbb
push
pop
cs
mov
testl
mov
cmp
js
imul
mov
jo
cmpl
imul
pop
mov
fcompl
fldl
nop/reserved
jecxz
les
add
mov
lahf
or
aad
xchg
popf
lahf
pop
loope
les
cmp
lahf
test
push
xchg
fldenv
push
clc
push
sub
dec
mov
mov
fldl
in
sub
gs
cmp
sbb
pop
push
cmc
xchg
mov
add
mov
icebp
repnz
loop
lock
jne
jnp
lahf
lods
inc
cli
aaa
and
insl
enter
imul
fnstsw
cmpsl
adc
push
out
ret
push
jns
cmp
sahf
xchg
xchg
sarl
lea
adcl
inc
cmp
mov
fdivp
fldl
push
adc
inc
js
dec
pop
loopne
orb
fdivrs
fneni(8087
imul
adc
xlat
hlt
and
lods
inc
cmp
shlb
xchg
hlt
popf
mov
aaa
inc
pop
add
pop
call
into
sbb
or
popa
lret
cmp
scas
fimull
shll
adc
sub
push
maskmovq
imull
dec
aad
icebp
and
pop
jb
jns
in
in
repz
into
std
test
imulb
push
out
cmp
hlt
ja
sub
les
sti
adc
out
xor
icebp
fidivs
adc
ja
scas
jnp
xchg
leave
jle
jecxz
mov
cmp
mov
adc
rcll
scas
mov
mov
loope
mov
pop
xchg
jbe
sbb
scas
add
mov
xchg
jp
cmp
aas
push
rorl
sbb
adc
xlat
aas
push
call
test
lods
cmp
sbb
jp
ljmp
jbe
jbe
ret
cmpsb
xchg
dec
push
repz
fsubrs
ss
dec
imul
jo
dec
shlb
cs
imull
fcmovnbe
mov
mov
push
pop
mov
push
sbb
sbbb
int3
leave
mov
xor
aas
jo
lcall
sub
jl
rcll
xchg
xchg
test
jp
lods
xor
jb
fbld
mov
jb
sbb
push
cmpsb
ljmp
ja
clc
xchg
leave
mov
faddl
push
outsl
mov
into
push
cmp
jge
sub
or
ljmp
cmpsb
popa
or
and
mov
xchg
adc
clc
cmp
in
cmpsb
mov
sub
movb
sbb
push
inc
repz
mov
pop
cwtl
dec
add
daa
addr16
cmp
ret
fildll
rorl
mov
sub
call
hlt
jl
dec
push
pop
add
mov
push
push
es
movsb
test
add
jl
cld
je
sub
inc
in
adc
xchg
sbb
test
mov
mov
and
dec
jb
adc
aas
repnz
mov
test
xchg
decb
cmp
add
das
enter
les
out
inc
movsl
enter
xchg
fxch
adc
icebp
add
insb
fnsetpm(287
insl
or
mov
and
in
push
pop
cmp
mov
dec
dec
and
mov
mov
ss
test
mov
xor
inc
or
push
jno
xor
aad
pop
rclb
dec
add
int3
inc
jne
insl
loope
dec
cld
negl
es
and
xchg
bound
or
cld
ss
scas
dec
dec
mov
adc
xchg
xlat
stos
aam
sub
aas
cltd
je
jnp
sahf
ds
dec
jb
lcall
into
fucom
daa
out
dec
dec
mov
cmpsb
pop
xor
sub
leave
cld
sub
les
or
cmpps
fpatan
inc
adc
sub
in
iret
pusha
cmp
fwait
lds
stos
cltd
mov
popa
insb
dec
jno
xor
es
scas
dec
inc
mov
mov
popf
data16
subb
aam
cwtl
cs
push
jne
inc
sbb
push
push
pop
fldcw
push
mov
call
sbb
setnp
mov
adc
cmp
push
xchg
add
out
inc
pushf
xchg
test
jno
mov
rcrl
jns
movsl
dec
and
movb
inc
sub
ficomps
fdivrp
rcr
xchg
push
jb
outsb
rcll
adc
xor
inc
scas
aam
data16
repz
or
xorl
jecxz
xchg
stc
test
out
sub
pushl
pushf
pop
sbb
loopne
sub
cs
fdivs
addr16
mov
cli
xchg
int
ret
ljmp
push
in
mov
dec
ds
mov
rcl
stos
xchg
mov
movsb
mov
sub
and
jle
icebp
into
adc
pop
dec
cwtl
fucomip
mov
xchg
int3
pop
jl
or
and
aad
dec
popa
shl
jno
inc
int3
pop
or
insb
sbb
add
stos
mov
and
cmp
cwtl
xchg
jp
pop
pusha
dec
xlat
subl
fstps
xchg
sarb
jbe
popf
mov
stos
lock
in
lds
push
add
leave
fcoms
add
ja
xor
add
adc
in
scas
dec
mov
jmp
mov
xorb
mov
cmp
inc
mov
stc
test
gs
mov
pop
push
add
or
test
icebp
lahf
fs
xor
daa
movl
insb
imul
repnz
cmpb
mov
sahf
cltd
xchg
jb
filds
add
inc
pop
shrb
arpl
in
sub
addr16
pop
pop
push
mov
and
iret
push
mov
xor
cmc
xchg
sbb
fimuls
stos
lcall
bound
mov
pop
movsl
mov
je
mov
mov
enter
sbb
add
lcall
pop
push
xor
cmp
into
xchg
jo
adc
cltd
loop
std
add
in
jbe
and
xchg
repnz
mov
fldl2e
and
in
dec
inc
lods
jnp
pop
jle
sub
dec
dec
sub
mov
sarb
xchg
mov
aam
mov
inc
mov
loopne
je
add
movsb
adc
mov
inc
inc
lahf
in
rcl
test
cmp
int
adc
out
mov
mov
xchg
out
aaa
inc
mov
ds
scas
mov
faddl
mov
add
sbb
sti
mov
xor
sub
xor
cltd
ss
shll
shlb
inc
insb
cmp
mov
sub
dec
or
lret
mov
sti
jo
mov
and
dec
rcll
cltd
jo
into
sub
mov
mov
xor
or
push
movsl
std
or
push
mov
inc
dec
icebp
lret
inc
aaa
fldenv
dec
ds
adc
adcl
cwtl
scas
cmp
test
int3
pop
inc
pop
jle
cmpb
and
out
sub
xor
loopne
scas
lret
shll
and
sub
cmpsl
fisttpll
hlt
jbe
lret
iret
loope
sbb
lods
and
push
iret
and
outsl
xor
dec
cmp
inc
gs
jp
jnp
imul
mov
and
sbb
push
lret
mov
lods
es
stos
mov
adc
xchg
or
popf
pop
test
inc
xchg
iret
insl
cld
mov
iret
scas
mov
ja
out
imul
call
add
loopne
aas
in
cli
adc
scas
xchg
movsl
pop
or
negb
out
clc
popf
das
aaa
mov
inc
or
ret
popa
cmc
sub
aad
andb
xor
ja
jbe
int3
sub
sbb
sahf
shl
inc
mov
ret
outsb
cld
dec
inc
fisubs
inc
push
xor
dec
cmp
sti
fldcw
dec
sarb
cwtl
inc
ja
popa
adcb
xchg
popf
aas
cmp
es
and
add
stos
inc
jnp
lods
icebp
lock
repz
dec
std
dec
add
mov
inc
cmp
xor
orb
mov
xchg
je
adcb
cmp
mov
xchg
imul
inc
lahf
xor
adc
cmp
stc
insb
xchg
xchg
mov
fs
push
jns
xchg
xor
mov
adc
ret
add
adc
pop
repz
out
fsubr
loopne
pushf
sbb
inc
pop
adc
push
adcl
mov
call
sahf
push
cmc
aad
out
mov
pop
icebp
div
arpl
pop
push
mov
fiaddl
push
jp
fldl
cwtl
mov
cmp
std
cmp
cmc
imul
fcoml
movsl
stos
shr
mov
sarb
lods
rclb
pop
addb
sbb
xchg
mov
jne
lock
cmp
push
inc
enter
sbb
movsb
pop
push
adc
es
add
loopne
push
sbb
aas
xor
pop
pushf
cmp
inc
sbb
mov
sbb
clc
addr16
add
mov
rclb
xchg
outsb
and
or
inc
pop
add
mov
pop
movsb
xor
adc
and
ljmp
jne
mov
repz
movsl
lods
sbb
rolb
cs
leave
cmp
out
jmp
shll
mulb
insl
sbb
out
movb
jge
jecxz
adc
fisubl
aaa
popa
and
ret
es
dec
inc
xor
sub
push
mov
cmc
lods
sbb
int
lret
xor
push
or
push
test
inc
dec
mov
or
scas
fwait
cmp
pushl
arpl
add
mov
leave
sahf
das
sub
push
mov
std
lcall
sub
push
mov
jp
and
push
fimull
enter
shlb
xor
xorl
out
add
and
cmp
jo
pop
outsb
ret
mov
push
mov
xchg
mov
mov
sbb
rcrb
mov
pop
in
mov
mov
iret
cmp
es
popa
lds
ss
inc
sbb
fs
fsubrl
or
adc
adc
and
pusha
das
xor
adc
insl
scas
out
or
call
repz
cmp
mov
pop
mov
add
jp
inc
into
lret
cltd
mov
or
xor
scas
xchg
cmpl
and
sti
jl
push
xchg
test
fcomi
mov
cmp
daa
and
jmp
jecxz
ret
enter
loop
cmpl
popa
or
movsl
jle
es
gs
dec
and
pop
pop
repz
iret
xor
xchg
xchg
mov
paddd
inc
xchg
ds
test
push
xchg
jns
popa
cmp
sub
je
pop
inc
jae
shrl
fs
ja
aas
imul
movsb
fadds
std
outsl
pop
data16
mov
mov
aas
or
imul
scas
xchg
call
shll
shl
js
sti
aam
jae
adc
mov
nop
lret
sbbl
push
mov
test
fnstsw
imul
call
sub
push
lock
pop
and
shll
mov
pop
adc
sbb
or
push
mov
dec
adc
inc
adc
mov
int3
and
testb
mov
cmpsl
xchg
test
mov
mov
gs
fstl
or
sub
adc
xorb
xor
leave
movl
sbb
dec
iret
lods
push
rorb
insb
arpl
push
leave
daa
xor
push
push
loope
add
loopne
cmc
scas
push
mov
and
test
pusha
pop
mov
decl
leave
xor
jo
and
fstps
or
cli
sub
insl
mov
and
imul
ja
mov
xchg
sub
repnz
mov
add
inc
mov
test
aaa
pop
lret
test
jo
ret
hlt
xor
add
pusha
push
outsl
cmp
cmp
jecxz
out
outsl
dec
push
sbb
lret
addb
xor
mov
jge
loope
adc
and
popl
mov
push
sahf
test
cmp
or
inc
lret
push
leave
push
sahf
movsl
or
mov
mov
and
cmp
sub
roll
xchg
and
shl
pushf
inc
cmpsl
jbe
mov
inc
jp
repnz
in
pop
sub
push
or
addr16
pop
ret
dec
adc
mov
push
sbb
dec
mov
xor
push
xchg
sub
push
push
sub
ds
aaa
mov
inc
in
and
pop
stc
xor
inc
cmp
ss
lds
cmp
inc
repnz
and
jle
call
xchg
push
addb
xchg
mov
mov
or
jns
daa
data16
jmp
in
popa
jo
pop
sbb
mov
jnp
ret
loope
js
out
sbb
and
xchg
inc
shrb
in
lahf
sub
or
outsl
mov
and
mov
jb
repnz
pop
fbstp
fsubs
ret
mov
jb
jbe
mov
data16
cld
mov
lret
xchg
ss
cmp
fisttpl
xchg
xchg
lods
fsubrp
push
fistl
xchg
movsl
cmp
jb
xor
jbe
mov
insb
int
xchg
movsb
mov
push
push
fstpt
xor
pop
les
sub
fucom
cmp
xchg
popf
addr16
inc
test
lcall
fnstenv
jnp
add
sbb
inc
jns
into
jl
notb
lea
xchg
xchg
test
mov
rclb
fisttpl
adc
dec
std
arpl
push
xor
mov
test
cmp
pop
inc
cmp
movsb
jle
push
adc
sub
ljmp
out
cmpsl
stos
dec
leave
mov
call
shlb
xor
rol
xor
cli
cld
add
cltd
adc
lea
in
push
add
arpl
test
popa
test
ljmp
cwtl
outsb
dec
inc
and
xchg
jns
cmp
ja
dec
pop
scas
jg
add
hlt
daa
cmp
in
rorb
nop
fdivrl
int
jb
popf
xor
enter
add
ret
fsubl
inc
repnz
sub
sbb
xor
call
pushf
scas
pusha
jnp
aam
addr16
xchg
test
cmc
cltd
pop
js
jne
gs
push
in
lods
jle
cwtl
push
adc
std
add
pop
inc
incb
inc
repz
aam
ja
jne
dec
xchg
int3
inc
jl
rolb
loopne
aaa
lods
mov
adc
inc
mov
imul
sarl
jo
push
jae
js
jnp
xchg
out
mov
xchg
fs
jge
mov
mov
inc
lods
jnp
testl
call
in
push
jns
pushf
mov
adc
pop
cltd
sub
hlt
shrb
cwtl
dec
dec
lret
pop
dec
lcall
xchg
out
mov
push
or
add
fwait
rcl
xchg
mov
fcoml
push
cmpsb
fnstcw
stc
rcrl
xchg
dec
push
fnsave
sbb
adc
inc
ds
cmp
xchg
or
jmp
sub
cmp
adc
pop
imull
add
scas
add
popa
or
jb
dec
add
gs
ds
push
pop
xorl
lret
rcrb
xchg
sarb
jo
icebp
fld
movsb
add
inc
lret
inc
pop
dec
inc
xchg
mov
jbe
cmp
xlat
sub
cmp
xorb
jg
mov
addr16
fdivs
rcl
dec
push
test
mov
xchg
jp
adc
mov
sbb
call
lret
adcl
je
mov
sbb
loop
jecxz
xchg
or
and
loopne
cld
mov
sub
cmp
outsb
outsb
aaa
daa
lds
out
add
and
in
inc
dec
data16
or
rcll
aam
cmp
ss
xor
push
mov
ss
pop
inc
stc
push
adcb
and
mov
sar
lcall
mov
xchg
outsb
inc
push
out
and
mov
and
sbb
xchg
pop
in
lea
sub
pop
sub
out
mov
test
es
inc
lret
test
add
xor
pop
xchg
fcoms
and
xor
sub
mov
int3
xchg
in
dec
pop
stos
push
xchg
fadd
push
aaa
les
leave
mov
or
or
pop
lea
xchg
or
mov
push
cmpsb
clc
out
jp
pop
cmp
adc
lcall
xchg
push
outsb
jnp
or
clc
aam
adc
in
js
fmul
fsubrl
aam
push
nop
sbb
mov
lret
jo
mov
inc
xchg
movsb
push
aam
mov
cmp
jns
scas
dec
out
andb
movsl
out
imul
xchg
mov
in
lock
mov
shrb
push
and
ret
cwtl
or
insb
aad
fstpl
lea
sub
dec
sbb
pop
sbb
int3
pop
sbb
gs
out
in
or
rcl
sti
scas
ss
mov
loope
push
test
adc
pop
dec
repnz
jae
sti
cmp
add
cwtl
xor
movsl
and
fcomps
lret
or
and
movsb
test
rol
inc
ss
fistpl
push
xor
orl
scas
xchg
cmp
fwait
mov
add
jg
pop
mov
lret
fimuls
lret
add
sti
cmp
dec
mov
mov
movsb
fsubs
fistl
int3
mov
pop
lret
into
push
or
jmp
aaa
sbb
movsb
das
addr16
pop
daa
adc
push
mov
mov
divl
push
mov
sub
or
adc
jno
xchg
test
mov
dec
clc
ficoml
in
mov
rorb
rorb
pop
andb
imul
and
jo
xor
jno
dec
test
add
je
pop
fndisi(8087
cs
fidivrs
stos
adc
int3
dec
inc
pop
mov
mov
movsb
xchg
inc
push
aas
push
jb
inc
test
notl
xchg
adc
jmp
mov
pushl
mov
dec
loop
into
insb
pop
leave
mov
push
push
sti
in
int3
pop
pop
pop
into
add
xchg
lcall
clc
push
lds
sub
test
imull
scas
lret
data16
or
incl
mov
jmp
inc
out
aam
test
imul
inc
add
stos
scas
nop
rolb
jle
movsb
or
fstps
rcrb
xor
mov
sti
es
dec
fdivl
shlb
imul
push
push
movsl
mov
xchg
int
scas
or
andl
and
sub
push
xor
fs
inc
out
mov
adc
xlat
pushf
in
adc
inc
jnp
inc
jecxz
pop
lea
clc
inc
cmc
stos
adc
lret
pushf
and
sbb
insb
adc
and
push
in
mov
push
int
call
cli
push
cli
imul
adc
xchg
pop
xchg
sub
mov
pusha
xchg
shll
lret
js
xorl
imul
jnp
inc
aam
ds
sahf
pop
hlt
push
mov
jne
mov
jne
sub
push
add
cmpsl
dec
adcl
xor
shrb
sbb
adc
dec
lock
daa
mov
or
xor
pop
mov
xor
fdivs
test
sub
scas
mov
ja
adc
pop
mov
neg
jnp
loopne
sub
imul
jns
mov
adc
repz
dec
idivl
outsb
fldcw
push
in
inc
popf
adc
dec
add
dec
lock
adc
test
mov
stos
or
call
jl
pop
or
mov
subb
jecxz
push
xor
out
js
dec
xorl
pop
nop
cmp
adc
jmp
sbb
xchg
cmp
pop
inc
icebp
push
mov
popa
and
rorb
push
dec
cmc
clc
adc
lret
sbb
aam
mov
mov
inc
pop
jb
outsl
or
mov
jne
data16
jno
jae
dec
adc
ljmp
fdivr
jne
mov
sahf
mov
adcl
aas
sub
xor
mov
stos
xchg
iret
lods
jne
iret
mov
pushf
pop
test
stos
insl
out
mov
push
outsb
movsb
sbb
pop
test
popf
movsl
mov
scas
adc
inc
sub
aad
adc
add
mov
popf
sub
xlat
mov
jp
adc
xchg
leave
rcrb
jge
js
jmp
repz
shrb
popa
pusha
fstl
leave
mov
outsb
mov
pop
int3
addl
pop
mov
cld
sub
hlt
inc
loopne
jmp
mov
in
cmp
push
jp
or
cwtl
push
fnstcw
sub
adc
push
xor
push
orb
jae
dec
jo
mov
xchg
or
pop
sub
cmpsb
add
inc
imul
sub
adc
rcr
push
or
jg
mov
ficompl
stos
xchg
test
jno
add
int
mov
sbb
loop
dec
lods
test
daa
les
push
and
out
cmp
mov
scas
sti
mov
aam
mov
gs
mov
xchg
inc
adc
mov
insb
adc
adc
in
and
lods
sub
inc
cmpsl
cmp
xor
mov
add
jnp
xchg
or
mov
pusha
divps
mov
scas
jg
addr16
xlat
mov
inc
push
test
aad
loopw
cs
loopne
xor
fsub
sbb
xor
mov
dec
mov
stos
cltd
stos
outsb
xchg
cmc
ja
bound
dec
les
pop
push
sbb
mulb
inc
xor
lret
repnz
xor
sbbl
in
out
into
inc
in
sti
iret
popa
scas
lcall
adcb
sub
push
testl
mov
das
cwtl
mov
mov
into
cmp
int
rcrb
mov
ret
pop
and
pop
adc
imul
test
inc
ret
mov
mov
mov
push
or
call
jmp
fs
std
lods
xchg
cmp
dec
or
xchg
mov
cmp
push
sbb
mov
test
decl
xchg
dec
fcmovu
xor
in
outsb
sub
jnp
add
mov
push
add
fidivl
fmulp
dec
push
jl
add
jge
test
cs
jle
jno
neg
mov
je
add
test
fwait
xchg
mov
pop
dec
clc
cs
jae
out
pop
jg
mov
fisttpll
sbbb
addr16
adc
shrl
dec
jns
xchg
in
or
xchg
negb
call
loopne
pop
lods
xor
add
adc
sbb
mov
clc
roll
fldenv
mov
in
sub
sbb
sub
or
cmpsl
mov
mov
cmpsl
adc
scas
and
jb
repnz
push
fistl
jp
pushf
dec
lret
in
inc
xchg
stc
xor
pusha
push
aam
ljmp
testl
into
popa
fistps
xchg
int3
push
das
psrld
in
cmp
jg
stc
iret
adc
inc
cltd
mov
enter
pop
aad
pop
push
xchg
out
movl
xor
aaa
xchg
neg
or
mov
sbb
sbb
xor
icebp
mov
cmp
jae
xor
out
mov
sub
jge
sbbb
xor
addr16
jns
cwtl
dec
ss
push
or
cmp
cld
xor
iret
popf
leave
adc
push
je
push
dec
lahf
dec
icebp
cmpb
push
cmp
dec
push
call
jne
mov
mov
add
xchg
addr16
out
cmp
sub
dec
fisubrs
inc
iret
or
ret
out
rcr
push
or
inc
fisubl
cli
adc
fadd
or
pop
mov
pop
sub
jno
mov
nop
pop
aas
xor
icebp
lds
scas
sub
loopne
adc
cwtl
ret
out
mov
mov
scas
pop
xlat
cwtl
leave
pusha
je
pop
jmp
pop
or
neg
mov
xor
dec
repz
adc
iret
xlat
insl
push
ucomiss
mov
test
cmp
jmp
scas
pop
mov
imul
orl
jmp
xchg
inc
cmp
inc
aad
stos
sub
mov
mov
lret
sbb
aaa
clc
out
loope
ljmp
xorb
pop
flds
adcl
fs
inc
mov
and
mov
xor
loope
fstps
mov
mov
mov
and
and
jb
pop
call
jno
cmp
lahf
mov
mov
test
sar
mov
fidivrs
ret
jp
adc
xor
int
sbb
leave
movsb
sbbl
cmp
pusha
adc
sbb
out
in
repnz
add
pop
call
cmpsl
or
aas
test
push
mov
pop
loopne
fsubrl
outsb
lods
test
inc
int3
ljmp
sub
or
stc
cltd
mov
cmp
in
daa
and
inc
sbb
loope
jo
xchg
sub
mov
fwait
clc
gs
in
fcmovnb
cmp
xchg
frstor
lds
call
movb
fsubl
and
loope
insl
pusha
pop
mov
adc
and
pop
xor
mov
cmp
insl
cmp
dec
adc
push
or
sahf
shl
rolb
imul
inc
pop
insl
xchg
jns
jnp
push
mov
mov
xchg
xchg
pop
mov
mov
out
jle
or
lahf
jge
hlt
lods
outsl
lods
sbb
cltd
rcll
push
and
xchg
sub
push
sbb
inc
lds
std
lcall
bound
mov
lret
mov
and
mov
fdivl
mov
sbb
jge
lock
pcmpgtb
jo
test
sbb
inc
mov
push
jbe
pop
and
push
cmp
cs
push
outsl
pop
cmc
in
sub
into
add
fisubrl
dec
movsb
adcb
pop
pop
arpl
call
test
outsl
cmp
mov
ja
ret
cmp
pop
iret
stos
scas
imul
out
cmp
shlb
add
jp
testb
or
movaps
mov
imul
fcmovnb
lahf
sarl
lret
pop
and
cmpsl
imul
negb
aaa
mov
xchg
bound
push
js
cld
mov
fldenv
test
or
and
sbb
fimull
cmp
mov
ss
mov
and
ret
add
cmp
rcl
xor
push
mov
pop
xchg
rcrl
outsb
sbb
enter
clc
push
xor
jns
and
cld
xchg
jg
dec
lock
fdecstp
sub
sub
adc
cmp
repnz
pop
xchg
lods
xor
sbb
int3
andb
sar
and
add
lahf
xor
push
jno
jns
lods
fidivrs
add
repnz
jb
mov
xor
add
and
sub
adc
icebp
aaa
dec
or
and
mov
dec
mov
pop
push
dec
fdivl
mov
fbstp
out
xor
mov
xlat
cmp
dec
jmp
std
js
mov
stos
mov
cmp
es
popf
add
push
lret
inc
icebp
mov
ror
add
mov
adc
aam
inc
jno
aaa
hlt
push
lcall
bound
or
addr16
mov
int3
xchg
outsl
inc
inc
aad
cmp
shrl
fisubrl
aam
mov
jb
mov
movsl
cmc
xor
jnp
repz
sub
stos
fwait
loop
xor
fdiv
in
pop
xchg
push
in
rcrl
cmc
lret
xor
and
push
jbe
andl
loopne
jnp,pt
sbb
scas
mov
xorl
bound
mov
iret
lods
jecxz
inc
lods
xchg
push
es
fcmovnb
jo
jne
mov
mov
xchg
aaa
mov
add
jp
js
jmp
push
lea
mov
push
shl
mov
stos
jge
mov
add
xor
or
jo
test
inc
pop
sbb
outsl
add
out
clc
imul
xchg
xlat
rorb
enterw
or
adc
mov
ja
lds
jno
push
subb
push
push
mov
jl
popa
shlb
testl
imul
jecxz
rorl
sbb
lods
sub
sti
inc
jne
dec
ja
enter
mov
sub
lcall
inc
jecxz
push
fists
sub
xor
dec
cmp
xor
adc
sbb
roll
xor
ja
out
or
mov
mov
stc
mov
icebp
xlat
scas
cmp
movsb
lret
add
lock
pop
popa
inc
pop
cmp
jae
data16
xchg
pop
or
icebp
inc
rorl
mov
test
repz
call
sbb
jmp
mov
lods
jmp
fs
inc
aam
pop
adc
ror
iret
fnsave
adc
dec
fisttpl
push
xor
xchg
pop
jo
in
xchg
jb
jae
adc
push
loop
js
mov
inc
xor
imul
cmpsb
in
test
call
mov
fisubs
ret
dec
adc
push
das
inc
add
iret
or
loop
std
mov
ds
filds
adc
sbb
popa
jbe
xchg
enter
lods
clc
aam
testb
jns
into
cmp
xor
outsl
jne
loop
dec
and
jb
pusha
or
adc
fs
cmp
jmp
pop
pusha
sub
mov
mov
int
adc
pushf
and
daa
insl
push
pop
add
icebp
loop
fwait
mov
enter
rorl
pop
xchg
mov
push
xlat
movsb
int
pop
adc
loop
lcall
and
jp
ret
sbb
outsl
sahf
cs
jns
repnz
dec
inc
stos
rolb
mov
mov
stos
pop
sub
lods
add
inc
cs
mov
movsb
pop
movsb
int
adc
jl
add
mov
notl
scas
out
mov
data16
data16
cltd
jns
cmpsl
and
sahf
dec
sarb
scas
pop
and
fisubs
ret
add
adc
mov
mov
mov
mov
cmpsl
cltd
cmpsl
jmp
inc
sub
aam
jmp
repnz
mov
mov
cmc
and
ret
push
add
xor
dec
sub
leave
cmp
mov
dec
add
mov
in
scas
xor
gs
inc
cld
ja
std
imul
mov
xor
and
pop
xlat
test
popf
fisttpll
mov
dec
push
rcr
sbb
or
mov
jmp
ljmp
into
addr16
or
out
jnp
and
mov
aad
in
movsb
aas
icebp
sub
add
mov
js
sub
gs
fiadds
icebp
mov
add
sarl
xchg
cwtl
out
adc
xchg
bound
or
mov
enter
push
fiaddl
push
enter
mov
xchg
inc
jle
stc
xor
jmpw
inc
mov
clc
les
pop
mov
jle
xor
sub
xchg
js
lcall
cmp
dec
repnz
out
pop
add
jo
push
push
hlt
sub
xor
pop
ja
fiaddl
mov
sub
test
mov
add
dec
dec
push
fcoml
add
fsubr
jg
cmpsl
mov
pop
cmp
sub
pop
sbb
dec
add
psrad
gs
cmp
sub
dec
cmp
xor
mov
lds
sub
mov
cmp
loope
push
sbb
inc
int
sub
push
or
xchg
dec
xchg
shr
mov
aam
add
stc
ss
pop
in
mov
xlat
sbb
xor
das
adc
scas
into
movsl
dec
pop
pop
cmc
sbb
stc
sub
popa
data16
lds
popa
sub
cltd
lret
insb
mov
xchg
imul
repnz
mov
mov
sbb
addl
jno
dec
lcall
push
imul
sahf
push
shll
hlt
mov
jbe
sbb
fs
fmul
fidivl
call
mov
leave
pop
add
ljmp
ljmp
xchg
or
lahf
jns
xor
jl
popf
and
dec
mov
xchg
push
and
pushf
xchg
jg
nop
inc
das
fmul
pop
repnz
sar
cmp
lea
push
adc
scas
sahf
test
clc
stos
int3
push
fs
jmp
ss
or
xor
add
xchg
test
mov
jl
jo
inc
pop
sub
test
std
das
jno
push
aas
and
inc
test
jnp
cltd
sub
cmp
xchg
rol
and
popf
push
lods
rcrl
mov
jbe
loope
xchg
jnp
and
pushf
ficoms
mov
dec
in
and
xchg
ljmp
xchg
test
sub
in
fwait
xchg
fldlg2
lret
dec
ljmp
pusha
mov
mov
outsb
addr16
jg
outsb
or
gs
test
aaa
inc
sub
push
sarl
push
mov
lcall
lock
sub
jb
xlat
adc
mov
mov
loopne
sub
leave
adc
mov
and
jecxz
sub
dec
call
insb
cmpsl
mov
loopne
sub
das
cmpsb
leave
addb
add
fisubs
or
and
dec
push
push
arpl
pop
das
cmc
xor
cld
int3
ficoml
cmc
and
dec
mull
arpl
lcall
into
lea
not
sub
lret
xlat
filds
sbb
inc
sbb
dec
shll
sbb
and
pusha
scas
loop
push
idivb
mov
push
test
in
out
es
or
js
pushf
jg
add
push
or
mov
fsubs
addr16
jnp
cmp
add
jmp
lods
sbb
pop
loopne
nop
xlat
imul
ja
test
or
test
push
fisubl
cli
xor
mov
push
in
xor
cmp
movsl
add
xchg
shrl
loop
push
pop
inc
stc
mov
push
sbb
inc
push
imul
push
jl
icebp
inc
push
pop
mov
pop
cli
mov
xor
xchg
pop
mov
push
stc
add
push
sbb
jo
jne
faddl
ljmp
sti
dec
scas
xor
sub
mov
cmpsb
int3
mov
call
jmp
and
dec
xor
idivb
cmp
sbb
push
jne
push
lret
addr16
jnp
mov
sub
dec
mov
mov
jmp
inc
stos
inc
adc
mov
dec
pop
dec
nop
out
add
test
lods
push
sti
js
add
pop
dec
cmpsl
ret
mov
dec
insb
sub
jbe
cmpsl
jp
inc
shlb
adc
cltd
push
xor
insb
mov
call
xchg
int
mov
ljmp
and
test
stos
jbe
cmp
mov
test
jp
xor
loop
movsb
sti
ret
insl
mov
sub
movsl
or
cld
pop
inc
push
insb
gs
leave
pop
jmp
lods
cli
cmp
mov
pop
rcll
adc
lret
push
addr16
push
and
mov
pop
jle
das
dec
xchg
cltd
xchg
jp
movsb
adc
mov
fisubs
or
jbe
mov
xchg
subb
push
imulb
jl
xchg
push
jge
sahf
mov
repz
imul
xor
cltd
popa
xchg
aas
pminub
ljmp
and
cli
shrl
cwtl
cwtl
mov
pop
adc
adc
mov
mov
adc
push
in
fs
ret
lahf
in
ja
xor
and
and
js
out
repz
test
test
dec
hlt
and
mov
shlb
enter
cmp
and
ljmp
dec
mov
stc
mov
ljmp
inc
cltd
xorl
in
test
out
mov
sbb
mov
in
sti
xlat
sub
jo
mov
stos
push
insl
imul
je
pop
jmp
xorl
lret
jno
popa
sarl
mov
addr16
cmc
lock
imul
lret
pop
mov
cmp
jmp
cmc
sahf
shl
shll
mov
test
jbe
jp
in
leave
fwait
dec
push
inc
std
out
enter
or
sub
sbb
xchg
stc
mov
mov
sbb
cmpsl
scas
lret
cli
ljmpw
or
pop
lds
jle
shl
stc
scas
and
push
stos
pop
pop
fsts
cmp
push
add
jecxz
cmp
pop
nop
pop
dec
adc
bound
pop
xlat
push
fs
push
mov
iret
popa
and
adc
or
jno
mov
pop
aam
insl
popf
incl
add
mov
fisttpl
jge
pop
popf
jge
movsl
jnp
lods
pop
or
xor
out
sub
scas
cmpsb
sub
pop
jge
add
cmc
call
xor
js
scas
in
loope
xchg
hlt
cmp
movsl
jecxz
aas
in
icebp
fwait
xchg
lds
push
sbb
pop
cmp
adc
sub
mov
ret
imul
out
cmp
mov
jno
adc
xor
xor
movsl
cmp
leave
mov
add
xchg
push
gs
jl
or
push
ficoms
stos
push
int
mov
lock
out
pop
and
int
test
dec
pop
dec
cmpsb
jp,pt
xchg
bound
mov
and
rcrl
addr16
xchg
fisttps
ljmp
shlb
or
push
int
mov
popf
pop
fldenv
lds
fildll
inc
fisubl
jbe
adc
xchg
mov
mov
and
xchg
inc
xlat
or
cmp
push
test
mov
or
loope
out
jl
add
xchg
inc
jle
and
mull
push
fmulp
shlb
jae
mov
fistl
lret
pop
gs
shr
xchg
push
pop
sbb
dec
mov
dec
dec
xlat
test
imul
jecxz
movsl
outsb
dec
stos
mov
rcrl
lea
cmp
out
push
pop
push
cmp
jecxz
xchg
sbb
lods
dec
or
inc
stc
jmp
rcrl
rol
adc
cmpsb
inc
xor
sbb
pusha
xchg
inc
pop
das
mov
ret
dec
gs
push
pop
int3
test
gs
mov
jle
stos
add
fs
es
ss
push
adc
test
loope
fdivrl
or
popf
cwtl
and
mov
ljmp
clc
xchg
pop
sub
fadds
xchg
lret
xchg
xchg
inc
inc
js
cmpsl
mov
push
pop
xchg
push
je
jb
xchg
fdivrl
xchg
or
test
test
idivb
repz
pop
mov
sar
jns
xchg
fnstcw
xchg
jnp
pop
or
in
fidivrs
cmp
sub
pop
ljmp
ss
pop
fcmovbe
cmc
dec
js
stos
jle
adc
nop
jle
fistps
dec
insb
adc
sbb
popf
iret
mov
sbb
imul
mov
xor
dec
xor
roll
fsub
xchg
inc
in
dec
rcr
mov
adc
les
adc
and
xchg
stos
cwtl
mov
cltd
pop
xchg
sub
cmc
and
les
cmp
add
mov
push
sub
les
rclb
negl
jmp
mov
dec
daa
dec
lods
pinsrw
adc
mov
scas
jecxz
cmp
push
mul
sub
pop
ljmp
test
ret
ficomps
xor
lahf
pop
daa
push
mov
or
aaa
push
mov
loop
bound
mov
hlt
xchg
cwtl
fs
jbe
push
and
test
xchg
scas
jb
shlb
mov
stos
data16
lret
stc
mov
pop
fdivp
push
jp
cltd
cltd
push
in
and
in
mov
push
out
inc
push
dec
mov
aaa
in
xor
inc
daa
insb
add
inc
imull
cmpsb
mov
mov
push
test
sti
scas
js
adc
push
fistpll
cld
pushl
lods
pop
icebp
and
xor
ja
adc
push
mov
sbb
mov
sbb
jle
fbld
out
out
mov
into
jmp
sub
mov
cmp
mov
push
cmpsb
and
dec
pop
push
imul
ds
mov
pop
xor
faddl
int3
pop
mov
dec
ja
fiadds
je
push
pop
inc
sbb
sub
xchg
jbe
out
std
dec
xchg
es
add
jbe
mov
lock
out
mov
arpl
xchg
inc
popf
pop
fcomi
sbb
sbb
and
and
lods
out
cmpsl
dec
cwtl
xchg
ds
xchg
loopne
sbb
shll
je
leave
sbb
mov
or
or
sub
jo
loopne
xor
shlb
aas
xor
shlb
loop
ret
mov
scas
fmull
jb
aas
mov
sbb
lcall
push
mov
iret
xor
out
pop
pushf
mov
jmp
and
or
movb
push
mov
mov
jno
mov
sub
add
adc
fdivrs
sbbb
fistpll
outsl
mov
repz
fdivr
iret
out
lahf
lods
pop
mov
imul
je
scas
ds
cmpsb
add
mov
insb
inc
ret
and
cmp
jnp
mov
out
sbb
decl
mov
pop
and
jmp
test
pop
loop
les
push
jns
scas
sbb
not
mov
test
push
je
or
cltd
pop
mov
daa
and
sub
sbb
outsb
xor
in
pop
cmc
push
add
das
jne
in
inc
inc
mov
xlat
sbb
sbb
hlt
jno
adc
lcall
clc
xchg
jns
pushf
push
rcrb
pop
dec
inc
insl
decb
jbe
nop
aaa
jae
out
jecxz
in
fwait
loopne
or
repz
jg
in
cmp
dec
jle
popf
pop
addr16
sbb
sahf
inc
push
xchg
cmp
xor
and
jge
mov
mov
xchg
add
push
daa
mov
inc
jo
popa
fs
jg
mov
or
fbld
xchg
pop
jne
arpl
repz
lahf
push
out
test
ja
sti
ret
stos
cmp
lock
ja
aaa
shlb
sbb
xor
bnd
xchg
dec
mov
adc
jbe
xor
or
lods
mov
insl
sub
in
decb
bound
test
sbbb
push
add
in
jmp
loope
push
cmp
pop
jle
je
jp
sub
push
dec
loope
inc
push
sbb
dec
lcall
icebp
sub
or
rcr
hlt
mov
imul
xor
pop
fstpt
cli
roll
mov
cld
lods
aam
cmpsb
enter
mov
mov
lahf
aas
andb
scas
dec
into
aas
mov
test
mov
mov
aam
fiaddl
sti
xchg
movsl
fisubs
mov
mov
stc
fnstcw
shrb
iret
cmpsl
sub
xchg
sbb
jns
mov
aaa
or
insb
cltd
jecxz
enter
cltd
js
adc
lds
loop
data16
insl
mov
sti
daa
pop
and
cmc
dec
repz
in
push
add
inc
inc
xchg
dec
sbb
repz
popl
inc
push
mov
repnz
xchg
add
cmc
call
testb
pop
loope
gs
cwtl
loope
push
aad
sbb
dec
bound
cld
das
loop
lret
and
xchg
xchg
ret
inc
fsubrl
ret
movsb
jbe
xor
cmpsb
sbb
lods
aad
xor
testl
lahf
leave
pop
push
cwtl
push
insb
out
cwtl
sub
popf
xchg
enter
std
push
out
lods
jne
clc
mov
inc
inc
test
je
sbb
dec
push
in
push
cmpl
add
push
aam
xchg
test
pop
stc
je
rcr
mov
xchg
adc
add
imul
cld
push
movsb
mov
jmp
jno
fistpll
and
adc
mov
and
push
ss
mov
inc
cmovo
movl
xor
add
adc
bound
jae
inc
in
push
and
std
dec
jl
in
divb
mull
sbb
add
add
sahf
inc
pop
loope
mov
leave
jecxz
fdiv
xchg
addr16
std
lds
sbb
xor
push
lahf
shrb
imull
mov
mov
pop
xchg
dec
rolb
or
mov
mov
mov
add
mov
cltd
dec
and
mov
xor
mov
enter
imul
add
mov
lods
adc
mov
mov
shrb
add
fnsave
xchg
call
hlt
stc
int
or
inc
push
mov
jl
js,pn
jg
pop
push
push
jg
inc
adc
in
sub
xchg
roll
jecxz
push
and
in
sbb
pop
push
push
sbb
and
cmp
mov
stc
adc
sub
ljmp
shl
scas
jo
lods
pop
out
and
lea
lods
fdivrs
in
mov
xchg
loope
inc
icebp
fidivs
sbbb
into
lods
xlat
sbb
jmp
mov
mov
test
jecxz
or
adc
dec
pushf
repnz
test
arpl
fldl
movsb
cli
ficompl
nop
mov
fistl
inc
pop
push
mov
xor
inc
aas
cmp
dec
das
cmp
jno
es
std
fistl
jnp
jns
lock
add
flds
rol
or
dec
xchg
pop
rcrb
mov
inc
ds
xor
popf
arpl
leave
or
inc
lock
cmpsl
repz
xor
xor
pop
push
bound
lods
fmul
sub
jb
lock
pop
pop
repnz
ss
stos
mov
inc
movsl
and
outsb
inc
test
ret
clc
sti
divl
inc
loopne
adc
add
cmp
lea
dec
dec
pop
shll
xor
fcmovnb
hlt
pop
xchg
fiadds
mov
sub
pop
stos
loope
notb
xorb
mov
sub
popf
add
inc
outsb
jb
xchg
mov
mov
sahf
cmp
mulps
mov
push
and
nop
and
out
aaa
sbb
cld
out
jmp
int3
cld
jmp
push
test
and
xor
cli
fcoms
pop
inc
ja
pop
cld
popf
xor
or
xchg
or
ljmp
jg
cmp
and
push
imul
movsb
fnstsw
fsts
jne
je
andb
adc
sbb
sub
or
xor
xchg
jo
cwtl
ljmp
sub
loopne
dec
cmp
ficoml
push
jo
cld
pop
fisttps
cmpsb
lret
je
and
xchg
mov
mov
divl
mov
and
mov
mov
sbb
adc
in
adc
sbb
and
aad
call
add
imul
dec
push
imul
sti
push
out
adc
sbb
xchg
cli
jge
fmuls
mov
inc
lret
lahf
mov
jmp
call
sub
loope
lds
mov
dec
mov
mov
in
popa
aad
outsl
das
mov
mov
shll
outsb
or
loopne
in
and
lret
inc
pop
xchg
lods
gs
mov
cmp
sti
cmc
data16
mov
lret
rol
cwtl
cmpsl
ljmp
adc
cmc
and
je
mov
addr16
or
mov
cmp
mov
andb
movsb
cmp
repnz
pop
pop
sbb
add
rcll
jl
sbb
cld
jno
movsl
jle
sub
mov
pop
push
cmp
or
pusha
add
call
cli
shl
das
push
and
dec
movl
inc
xlat
inc
xchg
decb
insl
mov
cld
mov
adc
adc
insb
jp
xor
in
xchg
lds
and
jb
lods
mov
sbb
faddp
sbbl
repz
cmpsb
sahf
jg
ljmp
sub
adc
int3
mov
hlt
iret
push
adc
negl
clc
mov
jnp
jg
mov
ss
outsb
or
lret
xor
nop
jg
pop
push
fld
icebp
divl
xcrypt-ofb
cmpsl
out
cmpb
imul
lahf
adcb
test
test
in
push
jno
subb
mov
mov
xchg
in
in
loopne
jecxz
dec
mov
push
lock
cmpsl
and
pop
outsb
pop
insb
daa
roll
sub
or
inc
out
fwait
js
mov
cs
mov
jnp
adc
lods
fs
xor
mov
ficoml
push
and
and
add
pop
rclb
pop
mov
mov
jnp
out
xlat
lods
push
mov
into
add
dec
mov
and
jb
out
cmp
pop
in
mov
fsubrl
mov
scas
mov
mov
outsb
dec
sub
xorb
insb
lds
push
lret
jmp
dec
sub
rolb
out
push
jbe
and
outsl
das
push
mov
jnp
add
fldl
lretw
or
fwait
jl
mov
aas
sbbb
rclb
popf
stos
sub
adc
popa
dec
or
sbb
jge
add
rcrl
add
sbb
mov
ds
inc
movsb
stos
cmp
sbb
jns
pop
fcmovnu
les
inc
sub
jne
shlb
pop
mov
out
pushf
xor
mov
push
add
popf
jmp
pop
add
mov
sahf
pop
ret
stos
jge
or
xchg
add
dec
jne
cmp
sub
iret
imul
xchg
imul
or
repz
mov
movsb
dec
cmp
jbe
xchg
add
dec
aaa
jno
es
or
stos
daa
cld
or
pop
fcoms
xchg
cmp
stc
jns
jb
pushf
ret
insl
dec
cmp
fdivrs
das
lret
xlat
mov
sti
push
mov
stos
push
mov
scas
shlb
push
sbb
and
or
jae
push
movsb
dec
in
movsl
loopne
xchg
inc
mov
aad
adc
je
push
mov
pop
and
call
cmpsl
mov
sub
imul
scas
in
pop
adc
rorl
je
lds
xor
stc
pop
cmp
lock
int
out
lods
push
insl
mov
jbe
or
cmpl
int3
sbbl
xchg
and
cltd
mov
subb
int
repz
stc
shlb
or
sub
mov
cld
out
push
sbb
and
out
adc
cmp
pop
sub
negl
imul
sbb
push
xlat
cltd
cmp
cld
leave
popf
mov
add
movsl
fidivrl
sti
out
pop
daa
pop
add
xchg
sbbb
push
sbb
insb
lahf
stos
xlat
cltd
aas
jnp
jbe
push
adc
pop
xchg
pop
dec
jmp
outsb
hlt
xor
dec
mov
adc
mov
adc
and
xchg
fiadds
es
scas
xor
mov
ficompl
outsb
jge
inc
arpl
pop
push
aaa
dec
xor
add
shll
dec
bnd
popf
mov
loopne
mov
push
sub
xor
mov
dec
sub
inc
in
out
loopne
jge
push
mov
fcmove
faddp
arpl
and
jmp
and
xchg
int
jmp
sbb
lods
repnz
das
mov
sub
mov
pop
test
repnz
sbb
inc
cmc
cli
jmp
fdivs
in
clc
in
push
mov
inc
sub
ja
jno
sti
pop
lret
loopne
xchg
das
movsb
inc
je
mov
sbb
pop
insb
fucomip
pop
pop
push
repnz
push
add
mov
insl
mov
jno
xor
xchg
rorb
lahf
fiadds
inc
das
scas
ds
stc
rorl
mov
loop
push
cwtl
jbe
addb
repz
and
sub
mov
je
fcmove
push
pop
sbbb
sbb
int
lret
sub
xchg
js
rclb
jnp
cmp
testl
xchg
add
and
adc
or
sbb
cmp
hlt
stos
int
and
fwait
dec
mov
push
call
mov
shl
cmp
lea
lcall
daa
cmp
into
push
xor
jmp
jge
or
mov
adc
adc
cmp
cwtl
pop
jecxz
pop
and
ror
pusha
push
xorb
dec
into
repnz
mov
mov
orl
sti
clc
in
jp
into
mov
test
sub
int3
pop
inc
push
cmp
push
inc
pop
aad
mov
or
idivb
mov
jne
xchg
jl
pop
sbb
push
aas
jle
xor
and
mov
pop
and
jg
mov
sbbb
push
sub
push
or
arpl
xchg
out
jecxz
push
sbb
idivb
sbb
or
cmp
in
push
jecxz
out
sar
and
loope
leave
mov
jle
aad
orb
inc
sub
shlb
xchg
mov
movsl
dec
jecxz
pop
addr16
addr16
mov
testb
and
adc
cmp
movl
or
fildll
xor
and
mov
pop
ficomps
jno
flds
leave
cwtl
jp
je
inc
loope
lea
cli
lcall
push
xorb
jp
rorl
es
sahf
xchg
sub
cli
sti
cltd
cmp
mov
sub
shl
cmc
inc
xor
mov
and
stc
mov
loop
push
test
lret
daa
sub
sub
notl
push
dec
mov
out
je
mov
ljmp
xor
or
or
clc
jno
push
push
sbb
inc
popf
sti
stos
cmpsl
mov
xor
ljmp
call
inc
cwtl
test
jns
mov
xor
sub
jns
popf
jne
insb
sbb
lret
and
adc
cmpsb
or
dec
fwait
aam
popa
and
lds
rcrl
into
sar
sbb
outsl
repz
pop
xchg
in
test
inc
dec
sbb
jo
js
dec
pop
mov
inc
cmp
sbb
jns
rorl
iret
push
rol
inc
mov
lods
dec
pushf
aas
cmp
leave
cmp
mov
mov
fsubs
inc
cmp
mov
addl
jne
push
sbb
in
mov
in
lea
add
push
lods
inc
into
pop
xchg
jae
fisttpll
adc
and
clc
mov
gs
xchg
jns
xchg
in
notb
mov
jb
sub
inc
test
std
push
push
stos
mov
lock
ja
insl
iret
call
in
rcl
mov
and
inc
popl
cmp
inc
std
jge
mov
daa
ds
ljmp
pop
mov
sub
jns
add
ljmp
stos
fs
sbb
lret
shll
mov
mov
icebp
xchg
xor
jns
add
jb
lahf
mov
test
push
mov
or
adc
sbb
mov
or
movhps
cmpsb
les
ficoms
imul
cmp
movsb
pop
dec
movsl
lahf
xchg
rorl
rclb
mov
aam
jb
mov
ljmp
mov
push
mov
enter
and
cmc
insb
test
and
test
cmpsb
cmpsb
push
push
ljmp
mov
xorb
xchg
lret
push
push
and
mov
std
push
mov
ds
inc
pop
out
push
inc
ljmp
mov
sub
dec
push
dec
mov
inc
xor
sub
adc
jecxz
or
push
mov
ficoml
sarl
adc
bound
scas
dec
or
stos
out
and
and
incl
lock
adc
daa
add
xor
add
and
shlb
push
push
mov
cwtl
mov
xor
mov
aam
gs
sub
inc
cmp
jp
fidivl
xchg
shrb
leave
cltd
arpl
sub
mov
outsl
xor
clc
and
xchg
adc
iret
mov
ja
in
fcmove
and
mov
iret
pop
int
jecxz
fidivrs
dec
jno
mov
pop
sub
inc
sub
jmp
or
out
pop
repnz
outsb
pop
jecxz
cwtl
and
insb
xchg
mov
push
rol
mov
ret
jmp
lods
inc
dec
mov
int
push
xchg
sahf
fstpt
int
pushf
dec
xchg
pop
cmpsb
aaa
mov
cmp
lret
jmp
xor
sti
dec
test
lds
aas
popl
mov
fmull
mov
std
sub
or
inc
mov
xor
pop
pop
add
jb
sub
or
pusha
nop
jge
loop
pop
stos
in
jg
inc
shrb
pmaddwd
lret
xchg
jno
gs
or
xchg
adcl
xor
xor
xchg
inc
test
bound
dec
mov
popa
aad
cld
inc
mov
das
mov
and
sub
filds
cmc
sti
out
push
mov
xchg
sbb
fbstp
inc
mov
std
fimuls
arpl
movsl
popa
xor
push
add
push
ljmp
xchg
imul
add
rcrb
insb
mov
repnz
cmp
xchg
sahf
and
sbb
subl
js
pop
and
pop
shrb
jb
sbb
rorl
nop
adc
loope
iret
outsl
int
and
adc
sub
inc
sub
xchg
jl
mov
out
pop
or
dec
inc
xor
add
inc
adcl
jle
lds
clc
popf
sub
xor
xchg
mov
fimuls
mov
icebp
nop
dec
sbb
mov
mov
mov
ja
xor
jle
aas
hlt
jns
xlat
and
fmull
mov
aaa
dec
mov
pusha
push
loop
mov
cmpsb
icebp
stos
mul
daa
lahf
mov
test
add
pop
sub
scas
sbb
cltd
test
mov
call
enter
inc
into
mov
arpl
lock
je
dec
xor
pop
cld
and
jnp
and
std
mov
or
cmp
xchg
sbb
mov
sub
mov
test
std
aaa
test
int
push
les
push
mul
cmpsb
xlat
jne
add
pop
out
push
aad
mov
and
and
mov
cmp
in
aam
sbb
mov
mov
fcmovnbe
aas
mov
out
xor
jne
jo
mov
and
popf
neg
aaa
ss
out
ret
sbb
or
add
inc
jmp
lods
fmulp
cld
xor
jno
es
aad
mov
dec
jbe
out
xchg
inc
pusha
push
imul
notb
sbb
jae
in
xor
pop
and
insl
jb
push
bound
inc
or
or
imul
push
bound
mov
fildll
pop
loopne
pop
stos
mov
cmc
mov
imul
cltd
aaa
dec
popf
jmp
in
movsl
in
jmp
adc
mov
repz
fistpll
loope
scas
xchg
das
push
inc
pop
mov
and
jns
popa
mov
jge,pn
inc
add
push
data16
jle
icebp
and
mov
mov
sub
inc
ljmp
mov
fsub
stc
mov
cli
pop
dec
inc
sbb
sub
int
adc
sahf
cmpsl
fcomi
sub
push
je
ljmp
xchg
mov
or
or
ds
or
nop
jne
jbe
in
ret
xor
pop
in
sbb
out
in
cmp
sub
mov
and
hlt
sbb
aam
mov
xchg
ret
jl
addb
mov
lcall
lds
xchg
push
or
stos
cmp
mov
pop
inc
sbb
sbb
mov
insb
xchg
mov
add
push
arpl
enter
mov
mov
imul
in
mov
jae
pop
jae
fmuls
pop
xor
out
mov
push
dec
xlat
and
dec
and
push
loope
push
and
mov
push
test
popf
test
sar
jno
cmp
jecxz
jb
cmp
xchg
xchg
xchg
fwait
in
inc
xchg
dec
dec
pop
jmp
sub
dec
pop
push
cld
push
je
xor
mov
and
ficoms
push
cmp
push
iret
mov
stos
cmc
sbb
push
adc
cmpsb
repz
mov
pop
cmpsl
fwait
jne
inc
insl
push
pop
jne
xchg
pop
xchg
leave
mov
sbb
mov
clc
sub
cmpsl
inc
fwait
adc
lret
push
lock
ja
pop
inc
or
push
dec
xor
aas
xor
push
inc
in
xchg
testb
pop
sub
mov
lcall
mov
mov
sarl
call
jmp
mov
lods
adc
scas
mov
mov
cmp
leave
popf
or
std
out
xchg
ja
out
in
sub
xchg
push
cwtl
sub
in
adcb
and
insl
mov
dec
int
cmp
addr16
inc
xor
or
sbb
cmp
pop
popa
test
cs
jge
pop
inc
popa
pusha
mov
push
std
mov
adc
jmp
lahf
jnp
fcmovu
adcl
pop
mov
add
sbb
push
lret
push
cltd
inc
sti
and
inc
test
cs
sbb
mov
iret
shr
sub
and
insl
or
xchg
cltd
aam
jl
xchg
push
push
and
push
test
fildl
aad
icebp
dec
push
pop
dec
inc
adc
sub
jmp
and
ja
enter
jg
push
cltd
add
add
fstps
jg
pop
add
mov
arpl
mov
in
adc
in
lcall
aas
cs
pop
lcall
or
cltd
out
out
jmp
enter
mov
addr16
cmp
incl
sbb
jmp
inc
enter
sub
out
fwait
stos
cmp
je
sbb
push
adc
hlt
stos
lods
add
jmp
jae
mov
adc
jecxz
repz
ds
cmp
leave
dec
pop
adc
jle
xchg
les
or
cmpb
and
orl
ss
repz
dec
ds
loopne
or
cmp
hlt
nop
push
daa
out
test
mov
push
stos
pop
adc
lahf
sbbb
adcb
clc
and
sub
cmc
test
popf
setg
push
lods
pop
sub
mov
xlat
cmp
daa
aas
outsl
mov
imul
push
mov
rcrb
jmp
cs
push
aaa
iret
aam
jg
je
movsb
out
cmpsb
adcl
xlat
xlat
adc
sub
sbb
dec
aam
popa
mov
stc
arpl
lds
and
push
xlat
repnz
sarl
mov
fs
pop
dec
sar
cmp
xchg
push
ret
addl
jo
in
sbb
lock
sbb
iret
xchg
movsl
inc
ds
stos
std
xchg
daa
push
mov
inc
inc
and
ret
stos
push
mov
enter
sub
dec
and
stos
mov
fcmovnu
lret
pop
pop
inc
addl
mov
adc
loopne
push
and
inc
sub
imul
push
fs
aad
bound
popf
push
aas
cltd
mov
rolb
mov
sar
or
sbb
leave
pop
push
orb
outsb
cmp
loope
mov
pop
inc
mov
xor
and
loopne
stc
int
pcmpgtw
mov
push
pop
mov
dec
stos
cmp
or
mov
pop
add
push
cld
inc
inc
jbe,pn
insb
js
jl
mov
mov
jmp
cmp
push
jg
shll
cmp
popf
in
sub
push
or
lods
sub
or
sbb
loope
or
add
xor
ss
jo
std
lods
xchg
clc
insb
push
int3
jg
dec
mov
data16
pop
aam
insb
psubb
inc
in
cwtl
xchg
out
faddl
addr16
dec
xor
pop
adc
jecxz
dec
push
fadds
add
inc
inc
sub
lret
in
mov
mov
cmp
xchg
dec
pusha
pop
out
popa
add
xor
cld
lahf
out
pop
mov
inc
mov
jo
sahf
out
repnz
adc
inc
test
push
mov
aas
rcrl
out
jnp
sahf
xchg
lods
sub
push
and
sahf
sub
xor
adc
lret
push
icebp
jl
mov
inc
popa
test
jns
sub
pop
fdivs
iret
stc
and
shll
andl
shll
mov
pop
mov
pop
mov
bound
mov
lret
out
xchg
in
jne
mov
mov
pushf
paddb
jg
into
lcall
fadd
rclb
add
lods
cmp
and
jno
sub
sbb
xchg
cwtl
int
lods
dec
icebp
and
cld
jb
stos
pushf
and
fsubrp
jmp
and
add
sbbb
in
adc
pop
mov
push
lcall
add
push
rolb
mov
jp
movsl
xchg
push
bound
scas
lret
push
mov
xor
jle
jp
or
pop
insl
ret
bound
cmpsb
insb
test
pop
imul
sahf
dec
inc
std
xchg
cs
xor
stos
pop
fs
push
sbb
dec
push
or
jmp
dec
push
jns
test
adc
sub
cmp
jmp
hlt
add
mov
add
divl
cmpb
dec
xchg
push
sbb
xchg
stos
idivb
or
mov
cmp
idivl
in
push
sub
and
sbb
adcb
and
sahf
push
mov
jno
jp
or
movsl
out
fistpl
fs
cmp
jns
pop
pop
lret
sbb
mov
movsb
adcb
push
icebp
pop
aam
add
jmp
call
jge
cmp
into
push
sbbb
inc
int3
xchg
out
nop
loopne
add
or
or
ficomps
insl
hlt
fs
adc
and
pop
mov
hlt
mov
lea
mov
sbb
xchg
mov
into
adc
nop
and
mov
dec
scas
push
mov
inc
mov
mov
jo
sub
in
push
xor
mov
mov
aas
push
imul
dec
sbb
xchg
ret
adc
and
sbb
adc
cmc
add
jmp
pop
sti
rcrl
mov
je
loop
sbb
mov
mov
mov
and
rol
or
fs
add
fdiv
adc
cwtl
insb
or
sub
call
ja
adc
mov
mov
sub
imul
sub
jns
std
pop
mov
shll
daa
popa
jno
jle
mov
out
ljmp
ret
jmp
shlb
notl
bound
push
dec
push
jo
fsqrt
scas
xor
je
or
inc
sbb
cltd
outsb
adc
push
insb
jp
inc
add
mov
pusha
inc
or
lret
inc
movsl
cmp
test
push
loop
loop
push
mov
or
xor
insl
aaa
fs
lock
stc
loopne
gs
mov
push
xchg
movsl
xor
scas
shll
pop
in
ds
sti
lret
mov
rcrl
pop
lret
push
or
pop
test
cmp
shlb
out
inc
sbbl
nop
shlb
arpl
adc
inc
or
pop
sub
xchg
mov
jl
and
xor
dec
jge
sbb
pop
lcall
inc
das
aaa
sbb
shll
mov
push
ds
cli
stos
test
cmp
lock
out
shll
in
dec
cmp
add
ficoml
lea
outsl
lcall
addr16
bnd
and
sbb
and
inc
fcomi
inc
jg
inc
cli
jmp
sahf
lretw
pop
jg
int
les
stc
pop
stc
xlat
xor
out
jnp
push
add
ret
cmp
cmp
ljmp
add
xlat
jecxz
stc
sub
dec
mov
and
ret
jp
sbb
or
jmp
dec
adc
js
sti
je
lds
out
dec
sbb
in
cmp
jg
adc
dec
in
jb
jge
inc
xor
ret
fucom
mov
aad
and
mov
out
sbbb
jp
xor
jns
ss
jecxz
icebp
pop
popa
sarl
xor
jns
cpuid
pop
sub
outsb
sub
outsb
push
dec
cli
mov
pop
sub
add
mov
jle
or
jns
sahf
jle
cmp
fimuls
add
lods
dec
pop
arpl
cmp
lret
scas
fsubl
shll
daa
cmp
out
fs
push
int3
mov
sub
inc
stos
xchg
mov
arpl
call
push
daa
mov
mov
pop
pop
cmp
push
pushf
cmp
and
mov
sub
data16
je
sarl
cmove
sub
test
stos
por
push
int3
jmp
and
mov
cmp
dec
cli
arpl
inc
je
imul
ret
jno
std
pop
daa
fstps
lods
mov
mov
stos
push
cmp
fucomip
shrb
pop
sbb
sbb
out
mov
bound
pop
adc
aaa
mov
sbb
lcall
loope
xchg
pusha
cmp
add
mov
cmp
daa
fucomip
or
lds
loope
mov
fbstp
mov
negl
xor
adc
sbb
roll
xor
mov
lds
sti
faddl
movsl
lret
out
xlat
pop
sbb
cmp
popf
add
xor
pop
ret
mov
mov
andl
sbb
das
inc
push
add
sarl
gs
repnz
inc
or
cld
or
push
add
adc
fildl
shrl
dec
loop
in
push
jbe
push
dec
jg
xchg
jnp
mov
mov
mov
iret
insl
inc
in
fs
loope
cwtl
xchg
push
mov
sub
fs
or
fstps
es
imul
pop
xor
adc
test
adc
inc
jo
lea
shl
push
test
dec
xchg
and
adc
stos
gs
or
pop
and
enter
lahf
mov
sbb
push
out
dec
adc
pushf
fwait
dec
jb
shlb
arpl
ds
push
pushf
add
adc
add
mov
aad
xor
jmp
insl
pusha
mov
jae
xor
jp
cmp
rolb
push
inc
jge
xchg
mov
in
loop
repnz
and
dec
dec
ret
dec
stc
shrb
xchg
out
add
sub
add
jno
adc
pop
repnz
lcall
and
sbb
push
jl
or
sub
test
cmp
repnz
test
lods
mov
dec
xchg
pop
iret
insl
shl
aam
add
jb
test
mov
popf
push
in
sub
nop
pop
xchg
pop
sbb
dec
ds
sbb
jle
cltd
imul
dec
xor
lea
orb
jne
test
inc
aam
out
outsl
push
iret
adc
ds
negl
adc
lods
mov
or
adc
xlat
insb
repz
jo
mov
mov
pushf
jmp
dec
xor
leave
add
imul
sti
xor
inc
pop
push
and
std
sub
js
and
ret
ss
pop
aas
into
add
pop
iret
test
mov
imul
push
lods
mov
aam
neg
inc
arpl
scas
add
lock
ret
mov
xchg
and
xchg
jge
lret
pop
data16
xlat
or
in
out
xor
sub
xchg
xchg
xchg
jo
fildl
pusha
and
nop
lock
or
mov
pop
clc
xchg
jns
shlb
out
lret
dec
je
sub
popf
hlt
mov
negb
mov
adc
adcb
ss
sbbb
mov
mov
lret
fs
mov
inc
imul
clc
mov
dec
mov
ret
pop
mov
ffreep
inc
testl
mov
loop
jle
in
repnz
aad
pusha
sahf
ja
cmp
mov
stos
ljmp
xor
aad
fldcw
and
ljmp
mov
or
fs
fstl
mov
lret
leave
sbbl
and
sub
test
enter
fdivl
std
icebp
int3
mov
xchg
push
xchg
cmc
inc
fldenv
into
nop
shlb
faddl
sub
adc
cmc
xorl
add
ret
fcmovne
out
or
enter
mov
lahf
dec
addb
mov
xor
fdivr
inc
pop
cmpsb
fwait
cmp
jo
sti
xchg
pop
xchg
insl
mov
dec
adc
mov
in
pop
inc
sub
pop
pop
enter
lahf
xor
test
cli
mov
fs
inc
sub
inc
pusha
pop
mov
sub
push
enter
ja
cmp
daa
pop
mov
movsb
push
sub
dec
fisubs
xchg
fists
mov
fwait
lret
outsl
mov
hlt
adc
adc
shll
lcall
mulb
xor
mov
xor
mov
cmpb
mov
scas
xor
leave
shll
mov
out
cmp
ljmp
in
ret
lret
xchg
outsl
push
sub
xor
xor
aad
dec
fnsave
cmp
mov
xlat
repz
adc
rol
mov
xchg
push
in
jae
mov
or
xchg
pop
inc
mov
hlt
mov
add
repnz
insl
push
sbb
imul
mov
jo
jl
jecxz
dec
lret
out
sbb
call
mov
push
mov
adc
repz
push
or
orb
pop
mov
leave
mov
imul
xchg
ss
xchg
je
in
push
jl
sarb
xlat
sub
jno
sbb
outsb
ljmp
push
push
icebp
mul
hlt
mov
mov
mov
cs
mov
into
xor
mov
xor
inc
pop
mov
sub
mov
cmp
les
rolb
inc
icebp
fbld
fs
mov
popa
std
inc
dec
cmpsb
xchg
mov
jge
xchg
int3
in
int3
iret
mov
movsl
sbb
pop
nop
push
verr
stc
arpl
repnz
xor
push
or
out
shlb
fdivrl
xchg
adc
sbb
cpuid
cld
xor
lcall
cmpsl
push
add
in
jg
cld
dec
mov
cli
hlt
mov
adc
arpl
insl
repnz
cmp
imul
fisubs
mov
lods
int3
mov
dec
dec
inc
nop
dec
dec
fiadds
add
cli
sti
dec
or
call
inc
mov
dec
andl
cs
daa
rorb
sub
test
pop
ret
adcl
pop
mov
add
pop
jp
mov
cmc
xor
sarl
dec
lds
shll
mov
xlat
aad
xchg
dec
dec
jbe
pop
adc
jnp
jmp
fisubl
repz
inc
inc
dec
aam
jbe
mov
xor
pop
daa
pop
addr16
iret
movsl
and
pop
js
in
lds
test
jecxz
mov
mov
cmpsb
dec
in
stos
ret
cltd
rorb
mov
cmp
push
ret
lret
imul
mov
fbstp
jl
and
xorb
scas
fbstp
cmp
pop
add
cmp
sbb
popf
pop
cmp
mov
test
jge
jb
sbbl
cs
sti
cmp
imul
lret
repnz
adc
aam
dec
lea
mov
ljmp
shlb
cmp
decb
and
and
loopne
mov
mov
mov
imul
jmp
sbbl
cli
dec
dec
icebp
aaa
inc
inc
lods
mov
or
pushf
cmp
lahf
insl
pop
or
cld
imul
jb
arpl
or
enter
cli
sahf
cmp
movsl
inc
jl
or
ss
pushf
add
sbb
sbb
jge
daa
jmp
fsub
insl
cmpsb
lods
jnp
jg
cmp
je
dec
dec
mov
cmp
add
stc
rcl
ds
inc
xchg
fadd
mov
test
mov
out
imul
fiaddl
mov
pop
push
dec
inc
mov
test
xchg
or
add
mov
lret
inc
dec
ljmp
or
lret
inc
mov
and
nop
mov
rcr
sub
inc
rol
dec
or
daa
fimull
sub
xchg
in
call
andb
leave
shl
adc
out
filds
mov
add
add
push
lds
sub
adcl
mov
leave
cmpsb
lcall
out
hlt
out
in
ret
cmpsb
pop
pop
rol
in
adc
pop
xchg
xor
shl
mov
cmp
push
xlat
pushf
jmp
fs
dec
out
adc
add
cmp
add
popa
imul
pusha
daa
sub
test
and
add
and
push
xor
cmp
daa
cld
in
cltd
addr16
scas
rcl
push
add
mov
xor
mov
mov
je
xor
pop
xchg
sub
insl
xchg
repnz
repz
nop
dec
adc
jmp
cwtl
xlat
push
or
insb
pusha
adc
rcrb
inc
push
orb
repz
mov
cmp
lret
or
ret
dec
int
int3
orb
and
push
into
pop
mov
leave
ss
mov
pop
loope
dec
sub
push
call
fsubr
push
push
sbb
mov
sbb
push
adc
cmp
ss
into
adc
fidivs
jmp
aas
ret
repz
jmp
iret
xor
xor
lea
and
cwtl
movsb
sarb
pop
lds
or
jp
jecxz
xor
inc
pushl
ds
scas
xchg
cmp
scas
mov
clc
adc
cwtl
ljmp
push
xchg
push
jl
jl
mov
and
jns
imul
jae
add
sarb
das
cmp
fwait
cwtl
nop
jle
nop
or
xor
in
fisttpl
xlat
lahf
pop
push
fs
xor
out
or
mov
insl
iret
push
pop
je
pop
shlb
mov
repz
sbb
mov
jp
or
adc
pop
dec
jp
idivb
mov
insl
jnp
mov
fucom
fsub
inc
push
cmpsb
add
and
mov
insl
sarb
inc
frstor
inc
xchg
mov
cmp
lods
sbb
or
mov
pop
add
sbb
adc
dec
daa
sub
ret
bound
sbb
mov
xchg
pop
nop
pop
push
jl
rorl
jge
jne
pop
sbb
rcll
cltd
xchg
popa
mov
xor
xor
xchg
xchg
ja
or
xor
pop
in
loope
lret
hlt
mov
mov
ljmp
xchg
sbbl
mov
jmp
enter
scas
mov
adc
loope
das
cmp
mov
inc
outsb
pop
cli
leave
pop
sbb
mov
adc
pop
movsl
mov
inc
loope
xor
loopne
inc
and
in
adc
mov
mov
movsl
fs
jo
mov
pop
and
fisubrl
mov
jl
add
push
jg
xlat
mov
shll
sub
insb
fadd
push
lods
movsl
arpl
popa
adc
int3
push
dec
sti
inc
popf
cmp
scas
pop
dec
sbb
or
mov
ljmp
mov
hlt
sbb
xchg
sub
in
stc
lahf
into
icebp
std
adc
dec
mov
test
faddp
pop
out
push
testb
je
mov
aad
cmp
jno
xlat
fldt
cmp
popa
inc
popf
adc
cmpb
or
leave
mov
push
pop
test
lret
mov
out
dec
sub
sysenter
ret
mov
jg
pop
push
scas
add
sbb
cli
sti
cmc
jae
repz
mov
mov
mov
sbb
dec
pop
cli
inc
scas
pop
hlt
insb
sbb
mov
jne
pop
gs
ret
push
sbb
sub
lahf
jbe
jmp
cmp
push
ss
inc
imul
pop
out
ljmp
push
mov
sbb
dec
aam
je
insl
fdivrs
popa
clc
repz
inc
hlt
ss
adc
call
sub
fcoms
roll
in
mov
aas
fldl
mov
sub
cli
imul
std
jbe
mov
pop
and
mov
push
test
jns
test
addr16
sbb
loopne
addl
je
pop
sub
cmp
mov
ret
fs
test
pop
jo
dec
adc
sub
daa
pop
mov
outsb
xchg
jle
call
xchg
outsb
xor
add
sub
ficomps
mov
imul
xchg
push
imull
or
ficompl
xor
add
subb
add
jnp
cld
repz
cltd
in
dec
lods
sti
mov
mov
pop
pop
rorb
cmpsb
fcomps
inc
in
jno
xchg
push
pusha
lea
mov
xchg
xchg
inc
fidivrl
loopne
aam
insl
mov
cmp
or
add
adc
cmc
pop
xchg
push
mov
push
loop
xchg
xor
adc
movsl
mov
cmp
outsb
fistl
std
push
xchg
cmp
int
test
pop
cmp
jnp
cmp
add
mov
testb
rcr
inc
jmp
loop
push
gs
cli
lea
inc
test
in
jno
nop
aam
jmp
jp
sbb
imul
pop
push
lods
xchg
mov
cltd
dec
loop
rcrl
xlat
ret
jns
test
push
sbb
mov
mov
cs
call
rorb
cltd
ljmp
add
mov
and
push
mov
adc
inc
cmc
in
fnstenv
out
testb
sbb
push
lea
imul
mov
pop
int
sbb
jns
xor
lcall
dec
movsb
mov
mov
aam
int3
hlt
cmp
push
dec
mov
push
leave
cld
mov
faddl
dec
hlt
mov
pop
lods
subl
mov
mov
xchg
rcrb
cmc
pop
sbb
hlt
into
ljmp
pop
sti
add
inc
cmpsb
rorb
pop
jg
dec
ret
push
rorl
rcr
bound
xchg
nop
push
stos
jecxz
xor
sbb
or
add
sbb
lods
in
daa
cs
pop
cmc
inc
cmp
hlt
mov
jo
sbb
fwait
adc
test
mov
lcall
in
fxch
push
pop
cld
or
lcall
loopne
lea
sahf
xorb
sub
add
repz
inc
adc
pusha
sub
jp
mov
cmp
in
sub
jb
insl
jp
and
test
xor
cmc
outsl
test
mov
sbb
and
sbb
in
scas
out
rorb
or
cld
mov
mov
mov
mov
pushf
or
mov
scas
sub
xchg
movsb
shll
les
mov
push
icebp
ret
sbb
dec
and
lcall
or
xor
roll
xchg
dec
lds
in
les
fs
and
popf
add
shlb
or
xchg
gs
mov
inc
subb
cmp
dec
cmp
add
popf
dec
pop
mov
jp
push
pop
dec
lods
ja
cmp
add
xor
imul
jg
aaa
ret
or
arpl
push
inc
jnp
dec
rorb
mov
dec
add
dec
mov
int
push
sub
inc
cmp
mov
ss
into
sarl
mov
mov
and
out
test
rcrl
jae
add
enter
inc
dec
xor
sbb
jge
lcall
cmp
mov
rclb
ret
in
mov
mov
pcmpgtw
push
xlat
cmp
and
fwait
aas
mov
nop
fistl
lds
aas
pop
mov
lods
fsubrl
outsb
lret
and
sarl
add
loope
dec
loope
sub
xchg
mov
in
rclb
mov
ljmp
jmp
push
jmp
or
decl
pop
aas
mov
fwait
js
fwait
test
add
lods
push
sub
and
and
sub
xorl
and
and
cmp
lret
cmp
sub
mov
xor
push
jmp
lcall
push
xchg
jl
les
sub
pop
jp
dec
rorb
pop
pushf
push
std
cwtl
stos
subb
cmp
dec
adc
dec
out
daa
xchg
push
loopne
sbb
addr16
shrb
mov
sub
push
pop
sbb
sbb
mov
sar
xchg
test
xchg
in
mov
sbb
movsb
pop
add
loopne
stos
pop
ficoml
jno
cmpsb
jmp
negl
and
mov
adc
adc
insb
jecxz
ljmp
cs
out
sbb
jb
dec
wrmsr
mov
sbb
cmp
outsl
inc
inc
mov
popa
sbb
cmp
jl
outsl
or
imul
outsl
aad
pop
sub
testl
test
imul
mov
cmp
push
test
mov
xchg
imul
aaa
movsl
orl
pusha
rolb
xchg
sub
cmpsb
mov
push
pusha
cld
inc
sti
or
out
gs
pmaxsw
rcll
jns
sbb
stc
add
inc
mov
popf
add
mov
les
aas
popf
sub
mov
jnp
outsl
bound
loopne
push
movsb
mov
cmpsb
jbe
cs
or
rol
push
mov
or
cld
fs
stc
rorl
xor
subl
loop
dec
jnp
cmp
xor
fisttpl
popa
lods
push
cmp
xor
or
cltd
xchg
push
push
push
dec
incb
les
je
fsubs
fldt
xchg
sub
fmull
cld
dec
mov
in
test
or
jge
sbb
sbb
fidivl
jbe
pop
inc
and
cld
es
movsb
inc
jmp
lods
inc
stos
js
add
mov
shl
sub
fldenv
or
sub
repz
push
aad
insl
mul
jecxz
mov
jno
out
sub
xchg
icebp
std
lret
jns
sbb
pop
pop
inc
inc
mov
incb
add
pop
cs
mov
insl
shlb
inc
lods
into
movsl
notb
pop
push
test
les
mov
popf
sub
repnz
hlt
pop
dec
mov
cmp
add
jnp
xor
arpl
call
sbb
add
outsl
push
int
mov
aad
or
test
data16
inc
stos
popf
daa
je
dec
loopne
cs
add
mov
xchg
dec
jbe
push
mov
in
fcmovne
push
dec
shl
cld
shll
pop
adc
lret
jecxz
cmpb
lods
mov
sti
jecxz
fistpl
clc
cld
aas
inc
xchg
mov
lock
sub
adc
pop
imul
out
jp
test
pop
mov
movsl
add
xchg
jo
movsb
sbb
push
dec
push
rorb
jne
sub
or
ljmp
adc
cmp
aas
or
mov
fists
inc
sub
pusha
in
mov
and
enter
add
repnz
lods
std
repz
loop
arpl
mov
mov
or
mov
jae
insb
test
addb
loope
loopne
aas
out
and
and
out
inc
clc
xor
jl
and
push
dec
jo
dec
outsl
pop
loop
xchg
fs
gs
scas
push
push
je
ficoms
xor
test
lret
and
xor
mov
dec
out
test
pop
fdivrl
mov
xchg
das
stos
jo
cmp
sbb
xor
aad
sbb
sahf
lcall
stos
ss
pop
mov
loopne
lret
das
add
add
jl
les
sbb
fwait
pushl
mov
dec
lret
sbb
nop
lds
insb
dec
mov
push
rol
and
xor
lods
inc
jnp
test
and
test
jecxz
cmpsb
pop
cmpsb
sbb
cmpsb
jae
mov
cld
cs
repnz
cmp
cwtl
push
call
sbbb
pop
xchg
mov
inc
cmp
outsl
fwait
sbb
sahf
jae
out
sbb
inc
das
jl
push
daa
xlat
or
test
add
ljmp
sti
loop
test
jns
aam
adc
inc
imul
enter
ja
test
shlb
cld
divl
loope
das
fbstp
cli
adc
cwtl
pop
jg
test
gs
into
cltd
popf
loopne
in
jge
sti
dec
stos
stc
ss
adc
inc
mov
pop
add
and
sub
adc
sub
subl
js
sub
and
sarb
or
xchg
clc
nop
test
test
cltd
and
mov
out
cmpb
xlat
lret
stc
ja
gs
cwtl
rcrb
mov
ds
shlb
mov
dec
mov
cmp
cld
stos
aam
call
shl
scas
cmp
add
or
fnstsw
test
hlt
inc
xchg
fs
out
cmpsl
jle
or
nop
adc
sbb
xchg
mov
add
es
sahf
test
arpl
mov
int3
mov
insb
cmpb
push
mov
add
mov
test
xor
or
inc
dec
sbb
das
imul
push
cld
cmp
cs
stos
inc
sub
add
orl
gs
scas
aaa
fs
lret
jl
lret
ds
pop
push
xchg
pop
cmp
nop
insl
mov
out
roll
movsl
lods
adc
add
pop
test
shrb
out
daa
dec
cmp
mov
clc
push
xor
sbb
fcomps
dec
data16
mov
xor
sbb
xchg
mov
in
adc
pop
sbb
jmp
mov
ja
jge
cmp
adc
gs
clc
sbb
jp
or
popa
add
icebp
ret
test
xor
jae
push
iret
cli
adc
lret
je
cs
movsb
shll
imul
mov
mov
xchg
jp
sbb
cmp
pop
scas
sub
push
inc
pop
push
mov
dec
lock
in
adc
cmp
aas
inc
imulb
jmp
mov
xor
stc
popa
loope
enter
and
push
mov
jmp
call
ds
mov
mov
scas
mov
rorl
xor
int3
or
or
aam
jne
js
and
adc
sti
decl
mov
stos
mov
sbb
daa
fsubrp
xor
sbb
out
cmp
mov
rcrl
ljmp
inc
mov
orl
fs
in
push
fidivl
fstpl
inc
inc
rcrl
mov
rol
jb
data16
pop
jns
jmp
jbe
pop
rcrb
fwait
add
adc
outsl
mov
inc
mov
jecxz
xchg
inc
jl
je
adc
movsb
and
add
and
test
lods
sbb
ret
lret
je
xchg
icebp
mov
jb
xchg
xlat
std
hlt
xor
jle
xor
popa
cs
and
pop
roll
sarb
rcr
fdivl
inc
imul
xchg
rolb
and
ret
out
sbbl
push
and
loopne
sbb
shrl
cld
inc
and
clc
loopne
and
lock
dec
push
and
inc
adc
mov
fnstsw
mov
mov
mov
mov
jo
out
fcoml
mov
cmp
dec
flds
outsl
adc
mov
lret
push
push
xchg
pop
mov
movsb
fcoms
cwtl
mov
loop
xor
in
std
jmp
sbb
ret
or
dec
notl
repnz
push
adc
popf
push
add
cli
xchg
mov
pusha
mov
jmp
xchg
inc
mov
push
jmp
aas
out
fldl
xor
mov
cmp
in
test
ficomps
aaa
iret
bound
mov
jecxz
test
xlat
dec
xchg
push
pop
es
add
ja
in
add
sahf
imulb
inc
add
clc
cmp
xor
lds
sbb
jbe
loop
cmp
and
nop
jno
and
sub
dec
inc
nop
jnp
mov
and
jl
in
mov
lods
mov
mov
and
mov
loop
mov
test
fmul
jmp
dec
or
popa
aam
mov
lahf
enter
cmp
push
stc
pop
dec
cmp
mov
add
add
ret
cmp
sar
aam
sub
mov
inc
ret
or
imull
sbb
mov
jns
and
cmp
lret
icebp
cmpsb
popa
jmp
repz
std
lds
shlb
in
aaa
out
aaa
scas
dec
jmp
add
call
mov
mov
mov
into
fstl
aaa
lret
nop
inc
arpl
rcrb
imul
aam
insl
roll
add
pop
in
or
mov
push
mov
sbb
movsl
mov
out
push
cwtl
roll
aad
push
sub
ret
mov
std
shl
or
jge
repnz
scas
cmp
xor
test
mov
push
das
lcall
iret
lods
push
and
pop
je
call
xor
sbb
adc
dec
lods
and
cmp
sub
das
lea
add
movsb
das
cmp
movsb
and
dec
stc
sbb
sub
add
or
sbb
out
gs
jo
pop
sub
in
test
or
jbe
mov
out
pop
mov
sbb
out
xor
pop
subl
mov
sbb
adc
or
or
xchg
out
scas
out
dec
push
sub
shl
push
lahf
inc
cmp
cs
xchg
pop
jno
mov
jl
bound
out
adc
push
push
ficompl
adc
add
lods
mov
repz
nop
roll
xchg
inc
shrb
pop
xor
popa
pop
inc
testb
pop
and
mov
dec
es
in
adc
lea
out
sbb
jnp
out
fcoms
inc
pushf
xchg
sub
mov
icebp
cmp
fmull
out
inc
sub
in
notb
sbb
ret
lcall
dec
sub
fidivl
aaa
mov
jno
or
xchg
js
inc
push
mov
jb
popa
and
dec
out
pop
mov
lods
xchg
lret
fistpll
loope
into
pusha
mov
in
test
xchg
mov
arpl
movsl
popf
push
ss
stc
cmp
mov
or
cmp
adc
out
add
ficompl
pop
and
fldl2e
inc
cmc
rorb
into
add
sbb
mov
stos
mov
mov
dec
js
loopne
add
sahf
xlat
shll
adc
stos
jbe
bound
call
jnp
adc
pop
inc
je
stc
dec
rcl
cli
adc
inc
dec
out
stc
or
mov
ds
test
xor
pop
shlb
jb
jg
std
cmp
mov
flds
divl
inc
data16
ret
jb
mov
dec
pop
outsb
outsl
jne
ret
sub
dec
sbbl
test
bound
in
mov
movsb
mov
lds
xlat
inc
adc
dec
mov
sub
pop
mov
sti
in
inc
mov
inc
mov
cmp
jb
xchg
and
push
imul
std
aas
inc
mov
cs
jnp
dec
imul
shr
mov
fcoml
mov
jne
dec
jg
mov
insb
pop
mov
xchg
fildll
xor
cltd
push
cmp
scas
dec
dec
cmp
adc
mov
xor
push
jmp
dec
roll
leave
mov
ret
pusha
jg
ds
and
or
js
das
cmpl
or
jns
xchg
lock
mov
or
sbb
xchg
mov
mov
cmp
cmovnp
ret
mulb
and
inc
jne
test
data16
bound
sub
adc
pop
je
ud2
pop
or
or
pop
mov
xor
mov
cmpsl
repnz
jb
lods
fcomps
lret
lods
cmp
cs
neg
cmpsl
jnp
lea
mov
test
inc
movsl
mov
jb
dec
gs
adc
in
insb
ja
andl
pop
out
jle
ljmp
data16
aas
lods
bound
xor
in
in
sub
idivl
lret
push
rorb
inc
rolb
inc
add
add
shll
inc
and
imul
scas
and
mov
popf
cli
ficoms
mov
sub
rcl
add
cmp
xor
fdivp
cmp
popa
mov
or
les
or
push
fisubrl
inc
mov
push
les
pop
leave
mov
fsubs
int3
and
sub
not
dec
sbb
add
cmp
loopne
mov
and
iret
loope
push
mov
stos
dec
inc
add
cmpsb
outsl
lock
pop
shlb
add
movsl
cli
sarb
and
xchg
call
dec
pop
insb
and
idivb
inc
scas
hlt
push
mov
repnz
incb
jns
push
or
cmp
cmp
cli
cld
out
test
test
movhps
lcall
cmpsb
cmp
imul
sbb
sbb
in
jae
jl
cmp
mov
mov
push
stc
push
aas
aaa
sbb
lret
cmp
lcall
adc
scas
or
ss
mov
and
mov
cli
lret
mov
and
cmp
inc
scas
sbb
sahf
sub
ficoml
pop
hlt
adc
insb
ret
cmpsl
shlb
lret
push
decl
pop
xor
sahf
mov
sahf
int
in
jge
mov
xchg
loop
data16
enter
lret
mov
in
and
and
je
add
jle
testb
cmp
aad
cmc
in
jns
xchg
jo
pop
and
mov
cmp
xchg
adc
stc
fld1
mov
jbe
out
je
test
js
mov
cmpsb
xor
ret
je
pop
fistps
pop
cmp
push
mov
cmc
sub
fwait
xchg
jp
jmp
cli
mov
mov
sub
lcall
mov
xchg
push
push
jg
dec
adc
sub
pop
rcll
xor
xchg
xchg
lahf
mov
ja
lcall
push
and
or
out
dec
pop
cmp
hlt
xor
push
shl
test
mov
mov
sub
push
loop
jmp
fsubr
js
jmp
cmpl
bound
push
sbb
pop
and
mov
dec
pop
lcall
test
data16
mov
pop
pop
sub
xor
movsl
test
icebp
mov
pop
test
inc
push
repz
lea
lret
inc
cs
mov
outsl
sbb
insb
adc
fiaddl
cmp
cli
jecxz
hlt
mov
push
rep
pop
std
jmp
mov
xor
add
pop
mov
into
jne
xchg
or
mov
mov
or
lea
push
bnd
pop
cmp
ja
hlt
filds
adc
sub
mov
pop
inc
lcall
xchg
jle
fldt
adc
jecxz
add
fidivs
addr16
lahf
jmp
mulb
arpl
scas
or
icebp
inc
out
or
bound
sti
lret
mov
popa
nop
pop
enter
bnd
enter
mov
cs
lcall
add
std
inc
xchg
adcb
pop
xchg
dec
or
bound
dec
push
out
mov
imul
cltd
xchg
mov
stos
fnstenv
aam
cmp
or
adc
pusha
cs
lcall
jae
sti
sub
in
pop
into
adc
loope
sub
rorl
std
adc
addb
out
out
mov
adc
repz
jge
jns
mov
ret
insb
inc
push
add
cmp
lahf
rcrl
shll
loope
test
in
and
mov
in
adc
and
enter
xor
inc
enter
sbb
or
sub
mov
push
dec
sub
and
mov
repz
mov
adc
cmp
xor
adc
mov
clc
sbb
lods
add
daa
negb
cmp
popl
pop
es
fidivrl
mov
lods
fdivrs
mov
lds
add
push
jmp
jge
cmp
imul
es
out
pop
jmp
ret
inc
rolb
xchg
adc
clc
lahf
insl
push
testb
xchg
scas
fisubl
cld
mov
inc
adc
adc
dec
sti
push
lret
aaa
push
xlat
jge
or
pop
stc
fnstenv
mov
roll
xchg
scas
mov
les
jmp
xchg
cmc
movsb
out
xchg
test
adc
jo
push
fisubs
sub
push
add
dec
imul
ret
test
or
popa
pop
cmp
xorl
push
js
pop
mov
fadds
xchg
iret
lods
jmp
sub
repnz
and
pop
xchg
shr
add
adcb
sbb
jnp
xchg
xchg
in
mov
xlat
push
icebp
je
lea
das
push
sbb
mov
jns
orb
xchg
data16
adc
pop
test
movb
inc
mov
arpl
dec
mov
aaa
shlb
push
or
shll
mov
aam
or
add
sbb
cld
int
mov
mov
or
add
jle
stos
movsb
or
int
xor
sub
xchg
fmull
imul
xor
sub
cmp
hlt
jmp
pushl
dec
pushf
pop
in
push
add
sub
ja
mov
sub
scas
sub
shll
add
lcall
leave
mov
and
je
out
jns
pop
jl
dec
jo
scas
sti
int
or
fistl
adc
mov
xor
xor
test
mov
mov
jmp
sahf
rcrl
fnsave
pop
xrelease
call
lods
aas
pop
std
mov
sub
dec
inc
push
or
sub
popa
jne
fidivl
lods
in
jl
divb
push
in
addr16
sub
cli
out
imul
adc
xchg
pop
sbb
and
pop
sbb
adc
popf
sub
ror
iret
jmp
or
sbb
shlb
sbb
aam
icebp
aam
push
push
mov
fcompl
xor
add
insb
das
sub
fists
inc
add
mov
jno
shr
or
testb
push
adc
adc
test
mov
inc
push
dec
out
mov
aad
pop
hlt
or
sti
aaa
push
pop
adc
push
jbe
into
cltd
push
lds
sbb
add
sbb
lods
sub
xchg
rorb
cmpsb
pop
or
lret
fdivr
mov
dec
adc
ror
push
and
sub
jns
mov
pusha
insl
inc
adc
cmp
lods
or
hlt
mov
sbb
xor
cld
and
aam
stos
pop
int3
les
xchg
jl
mov
lock
into
outsl
insb
inc
mov
jecxz
jns
aam
sub
std
adc
repnz
pop
loop
dec
rcrb
ljmp
push
dec
lahf
cmp
lcall
mov
xchg
lret
fwait
inc
mov
adc
pop
cmp
mov
pop
shll
xchg
mov
cli
mov
daa
repz
pop
xlat
push
stos
push
fsubrl
sbb
jecxz
sub
mov
lock
pop
repnz
aas
xor
movsl
mov
and
mov
mov
mov
pop
fwait
cmp
shlb
adc
xchg
inc
fldcw
data16
sahf
or
adc
subl
sub
or
xchg
jmp
mov
rcrl
dec
push
dec
mov
ret
xchg
clc
cmc
mov
mov
hlt
mov
inc
xlat
sbb
mov
imul
jp
imull
and
cmp
adc
inc
lcall
ja
xor
and
dec
mov
in
jecxz
stos
pop
jb
mov
stos
cmp
insb
lods
push
and
lcall
and
xlat
loope
pop
dec
lret
sbb
ja,pt
sub
call
shl
xchg
orb
dec
loopne
aam
mov
push
push
les
push
jmp
pop
mov
mov
add
mov
aad
mov
pop
adc
pop
mov
pop
icebp
cmpb
orb
mov
push
lds
inc
mov
sub
xchg
cld
xchg
xchg
xor
xchg
gs
push
cmp
les
adc
aaa
mov
xor
cmp
stos
cmp
aad
aas
fcompl
cmpsl
movsl
jl
cmpsb
rcll
aad
out
adc
dec
lods
imull
fldl
or
lods
clc
imul
cltd
sub
lods
out
inc
fldcw
imul
xchg
xor
int3
fistpll
pop
push
cmp
or
push
mov
mov
cmpsl
jmp
cmp
loope,pn
jmp
ret
adc
in
add
mov
shr
jno
or
dec
sub
pop
mov
xchg
stos
jbe
push
adc
add
mov
adc
je
sub
push
jne
pushf
arpl
jg
xchg
or
arpl
gs
rorb
xor
adc
jmp
iret
in
dec
or
cld
or
cmpsl
push
jmp
and
test
xor
fs
cltd
sbb
dec
or
cmp
mov
xor
clc
xchg
or
pop
inc
dec
cmp
xor
inc
xchg
fwait
nop
jmp
into
cmpsb
out
iret
dec
mov
add
jg
cwtl
xor
add
test
dec
shlb
sahf
gs
aam
cmp
cmc
mov
inc
jl
bound
fs
stos
enter
inc
test
ljmp
or
push
jl
lret
repnz
int3
test
es
mov
pop
inc
mov
out
mov
push
data16
ror
mov
scas
fcomp
jg
lods
mov
sub
push
or
mov
add
pop
add
xchg
sub
sub
shll
or
lret
jmp
into
sub
ret
roll
sti
and
ret
xor
pop
outsl
jno
data16
dec
pusha
jmp
fisubs
fnstenv
pop
push
sub
sub
int3
sbb
imul
mov
repz
mov
and
mov
mov
inc
mov
int
pop
bnd
lret
xchg
xor
push
pop
ss
cwtl
lret
jge
jnp
jp
decb
outsb
adc
hlt
lods
xchg
ret
adc
outsl
incb
dec
dec
jae
jo
jecxz
mov
cmp
loop
push
mov
push
sub
push
ficoml
inc
data16
sbb
jb
xor
cmp
dec
push
repz
rcrb
pop
shlb
fucom
shll
cltd
dec
push
aam
in
mov
cmp
add
loope
stos
or
mov
iret
jne
loop
popa
lret
incl
bound
repnz
jmp
lea
syscall
arpl
lcall
repz
xorb
xchg
aad
adc
xchg
pushf
fnsave
cmpsb
daa
pop
xor
jnp
cmp
mov
into
idivl
and
inc
aaa
jp
stc
xchg
inc
and
add
push
rol
xlat
pushf
test
lods
imul
lods
stc
push
mov
cmp
je
sub
leave
repnz
xchg
cmpsl
loop
fldcw
cmp
sarb
pop
cmp
inc
xor
jle
repz
adc
test
jno
dec
call
mov
inc
int3
cwtl
pop
enter
das
je
adc
lods
inc
into
mov
scas
and
xchg
lcall
mov
push
in
shl
mov
mov
dec
add
pushl
sbb
movsl
mov
sbb
and
in
nop
cmp
es
dec
std
test
fisubrs
mov
sub
pop
add
pop
lods
ja
rorl
lods
or
fwait
mov
repz
rclb
pop
fs
fistpll
or
or
mov
dec
push
je
sahf
loop
xor
out
into
lret
jmp
int
and
mov
ss
cltd
sub
insl
fidivrs
out
add
andb
test
adcl
cmc
dec
ss
xchg
inc
cmp
ss
dec
adcb
nop
daa
loopne
sbb
testl
push
icebp
sbb
das
lods
imul
xchg
bound
arpl
mov
fsubrs
ja
mov
push
nop
orl
and
xchg
inc
mov
xor
cmp
hlt
xchg
jmp
fistpll
inc
sub
sub
jno
ljmp
jp
sub
je
aaa
mov
imul
pop
fs
mov
sbb
leave
ret
icebp
in
testb
clc
sti
pop
daa
mov
mov
fdivr
jmp
jecxz
xlat
aam
pop
enter
in
mov
in
jmp
cmp
dec
test
cld
xchg
and
cmpsb
mov
xor
sub
cmp
jns
and
hlt
fcoml
sbb
in
or
in
xchg
int3
icebp
pop
jle
cmp
ret
push
fcmovnbe
fstpl
xchg
pop
sbb
cmp
cwtl
mov
inc
dec
out
xchg
dec
cmpxchg
cmpsb
jnp
cmpsl
push
pop
pop
es
icebp
and
cmp
inc
mov
push
in
mov
mov
shlb
repz
sar
jnp
push
orl
mov
aam
pop
cmp
es
sub
jle
dec
scas
push
cwtl
mov
cwtl
outsb
mov
xor
xchg
lods
es
sti
add
ja
push
rcrb
adc
pop
test
xor
cmp
lret
sahf
mov
ret
pop
test
inc
mov
std
icebp
mov
jl
add
sub
dec
adc
sub
and
ret
adc
cmp
inc
lods
ret
pop
pushf
cmp
repnz
pop
shlb
or
lods
xlat
lahf
dec
xchg
fsts
or
adc
es
pop
inc
push
inc
cwtl
xchg
dec
scas
movsb
cmpb
sbb
jg
add
dec
xor
icebp
adc
mov
mov
dec
arpl
pushf
mov
jecxz
dec
fadd
inc
lahf
xchg
or
cmovge
in
js
call
mov
sub
jp
popf
pop
data16
div
sbb
std
push
ds
mov
push
jge
cmp
mov
arpl
ds
add
ret
test
idivl
mov
jo
in
lods
add
add
sbb
jge
ja
jl
bswap
mov
push
or
loope
cmp
mov
sbb
test
call
or
cmc
call
inc
test
push
movsl
ja
add
dec
gs
outsl
cwtl
ja
xlat
leave
dec
jne,pt
add
fldl
rolb
adc
mov
mov
xchg
xor
stos
jge
and
push
push
sti
or
mov
add
inc
stc
mov
cmp
mov
js
ficoms
stc
mov
bound
test
mov
push
push
fsubrl
adc
test
jae
fldenv
push
cmp
sub
rol
int3
test
fwait
xchg
gs
mov
daa
shl
in
jno
push
sub
stos
add
popa
test
out
popf
fimuls
push
jns
sbb
out
push
dec
fisubl
sahf
dec
lahf
mov
in
add
xor
stc
push
test
inc
add
lock
mov
mov
scas
aam
adc
mov
lret
shll
mov
outsl
pop
scas
cld
cld
mov
es
push
push
outsb
lcall
notb
add
gs
fbld
cmpsb
lret
jae
testb
scas
rcrl
rcrb
mov
addb
incl
mov
lea
mov
in
cli
adc
xor
mov
inc
adc
or
or
shr
mov
mov
out
sbb
jle
rclb
sub
cmp
mov
pop
nop
cmc
stos
sub
pop
rorb
add
sbb
in
xor
int3
addr16
jnp
mov
int
mov
cmp
arpl
repnz
sbb
mov
push
jne
add
aam
push
or
jns
xchg
cmpsl
mov
jae
loope
mov
mov
sub
test
test
pop
rcr
hlt
movsb
xchg
lcall
dec
adc
mov
repnz
push
mov
xor
mov
push
adc
xor
add
push
icebp
cs
imul
inc
or
push
push
inc
mov
pcmpgtw
cmp
mov
scas
dec
xchg
adc
mov
int3
sbb
mov
or
pop
lahf
jmp
pop
jae
sahf
ret
push
iret
add
and
mov
dec
jl
cmp
nop
xchg
test
andb
ret
out
sbb
sbb
rolb
xchg
inc
xor
aad
shl
les
mov
jge
add
adc
and
lds
sti
xor
fwait
mov
imul
insl
addr16
lods
pusha
arpl
hlt
scas
rcr
adc
inc
hlt
push
inc
in
das
repz
roll
insb
cmc
jb
pop
cwtl
stos
insl
mov
or
std
sbb
lret
out
xchg
js
loopne
mov
add
int
mov
xchg
add
lret
or
aam
call
inc
test
int
es
dec
ljmp
push
sub
pop
lcall
xchg
call
pop
hlt
movsl
sahf
pop
icebp
mov
xlat
lret
sbb
jp
jecxz
int3
xchg
mov
push
pop
loope
jnp
movsl
testl
outsl
xchg
dec
mov
add
in
pop
dec
cwtl
pop
in
and
pop
loopne
cmp
jns
sub
xor
or
into
cli
decl
aad
mov
int3
mov
dec
loop
stc
and
push
inc
int3
dec
jmp
dec
addr16
inc
cmp
mov
jmp
or
pop
out
shl
pop
mov
dec
clc
out
xchg
adc
inc
rcrb
pop
out
push
pop
fsubrl
out
nop
imul
andl
les
aas
sub
push
ret
push
leave
fwait
mov
js
pusha
lods
mov
xor
aas
icebp
push
jl
cmpsl
mov
test
int3
cmp
pop
mov
push
inc
cs
fs
and
xchg
pop
test
sbb
arpl
das
push
push
mov
aam
test
sub
out
push
cwtl
int3
and
jge
fimull
int3
pop
fwait
xor
jmp
out
decl
insb
ret
fidivl
stc
adc
cli
sbb
inc
inc
testb
and
sub
rcll
in
fistl
aaa
inc
push
in
sub
fwait
dec
push
inc
imulb
cs
iret
xchg
pop
pop
js
out
ljmp
call
or
cmp
nop
lods
in
xor
ror
sub
or
test
fcomp
iret
insb
lds
daa
arpl
inc
cs
add
idivb
inc
test
in
gs
push
pop
or
mov
not
jp
mov
fidivrl
int3
cltd
out
pusha
bound
xor
call
and
mov
dec
jp
cmpl
push
jmp
push
inc
cli
and
adc
or
lret
inc
or
movsb
je
inc
push
add
add
jmp
loopne
or
imull
mov
adc
cmp
fmuls
push
cmp
aas
loopne
cs
and
sbb
xchg
push
adcb
xchg
lret
push
xchg
dec
adc
loop
arpl
push
stos
pop
fwait
dec
inc
out
mov
and
xchg
mov
pop
fists
sbb
pop
mov
shl
inc
lret
sub
ja
xor
incb
cmp
add
adc
scas
mov
dec
sarb
sub
xchg
xorb
mov
call
mov
dec
jns
jbe
repz
stc
push
ljmp
pop
push
out
mov
cmp
dec
mov
mov
popf
add
dec
jmp
jmp
arpl
rol
xchg
mov
or
ljmp
mov
push
mov
inc
cmc
xchg
jae
test
push
movsb
sub
pop
ja
lds
sub
adc
movsl
push
xlat
pop
movsl
movsb
mov
lea
movsl
push
and
mov
pushf
dec
out
inc
jecxz
mov
mov
shrb
or
pop
pop
pop
and
pop
dec
add
test
or
aad
pop
loopne
mov
pop
xchg
xchg
dec
loope
shll
push
scas
inc
or
push
popa
insl
cmp
addr16
add
mov
dec
int
sub
push
adcl
xlat
mov
sub
or
jno
lds
insb
fwait
insl
std
xchg
push
fcoml
test
rolb
pop
ja
jae
fsubp
mov
iret
pop
das
fidivrl
inc
les
sbb
stos
out
ret
scas
fcomi
ss
movsl
adc
pop
xchg
mov
dec
mov
aaa
inc
jl
loope
fcoml
pop
orb
stos
sbb
pushf
test
xor
fwait
mov
pushf
cs
mov
pushf
stos
das
adc
mov
push
cmp
inc
mov
cmp
mov
cltd
push
stos
push
mov
adc
ja
add
push
gs
sbb
add
and
fisttpl
stos
cmpsl
outsb
ficoml
mov
adc
jnp
dec
xchg
call
jnp
les
outsb
push
push
jns
mov
out
push
subb
inc
mov
pop
aaa
mov
adc
icebp
jmp
mov
divb
mov
inc
movsb
lods
dec
cmp
or
sbb
dec
call
mov
cmp
stos
pop
cmpl
mov
dec
stos
xor
movsl
mov
aas
push
pop
fucomp
mov
movlps
sub
sbb
sub
mov
inc
jg
push
lods
cmp
repz
mov
jns
push
sub
mov
inc
or
cli
rcll
pop
cld
mov
cs
movb
push
jne
push
adc
push
cld
arpl
jle
dec
mov
imul
mov
and
jl
in
mov
repz
call
ret
or
pop
out
gs
sbb
dec
in
stc
ljmp
jne
iret
bound
xor
sub
mov
lock
lock
jle
jo
mov
rolb
pop
jae
or
sbb
push
pop
sub
rorl
adc
stos
sub
push
and
ret
gs
fidivrs
int
jno
pop
stc
inc
es
xchg
adc
popa
push
cs
push
lret
decb
and
lret
mov
add
xlat
mov
ja
adc
cmp
xchg
sbb
sbb
cmp
rcl
clc
mov
mov
cli
jbe
dec
jnp
fldcw
push
or
iret
test
into
push
nop
add
rorb
push
mov
cmc
mov
pop
sbb
std
mov
xchg
push
jb
stc
cmp
adc
xchg
aaa
xor
sbb
stos
sahf
or
fadds
mov
mov
and
push
xor
lock
scas
xor
mov
aas
jmp
loope
lds
dec
or
out
repz
mov
pop
shl
push
enter
shlb
popa
mov
push
pop
imul
sub
inc
mov
outsl
je
out
jo
je
loopne
and
in
pop
push
inc
jnp
xchg
mov
lods
mov
sbb
pop
and
fcoml
je
xchg
jmp
mov
orb
pushf
adc
or
ljmp
pop
mov
xor
rcrb
jb
cli
int
lahf
mov
sbb
and
cs
int
cmpl
aad
daa
aam
cmp
push
lds
adc
jmp
popf
xchg
insb
int
xchg
loopne
repz
jnp
mov
mov
mov
mov
mov
fldcw
lods
es
jnp
mov
pop
xchg
pusha
incl
lret
loopne
dec
pop
shll
dec
fsubrs
dec
hlt
outsl
lods
out
pushf
enter
popf
sub
dec
push
xor
pop
push
xor
jbe
mov
out
pop
pop
mov
leave
mov
stos
mov
ficompl
or
mov
mov
cmpsl
push
add
mov
call
push
add
adc
aad
loope
imul
gs
jl
add
out
and
int
add
mov
stc
jge
stos
adc
push
iret
cmpsb
and
subl
xor
shlb
lahf
cmp
int
outsl
dec
insl
mov
add
lds
pushf
insb
add
bnd
cmc
mov
jb
and
sti
inc
xor
push
lds
ret
stc
loope
loope
adc
out
lcall
outsb
jno
xchg
adc
sbb
push
dec
jnp
insl
add
lods
cs
mov
bound
stos
scas
rcll
sbb
ljmp
push
jns
sbb
fnsave
std
imul
fwait
jno
jnp
mov
adc
xchg
test
push
rorl
ret
push
mov
sbb
ficoml
add
jbe
and
push
insl
mov
data16
lcall
sub
dec
aaa
mov
push
jno
test
jae
dec
jg
frstor
dec
pop
inc
stos
sbbb
jb
jbe
pop
lock
mov
cmc
add
rorl
xchg
stos
add
cmpsb
push
mov
mov
xchg
addr16
mov
das
xchg
mov
movaps
stos
adc
sbb
cmp
paddq
push
lret
pop
es
lods
or
adc
popa
adc
mov
xor
push
add
push
rcrb
fmul
les
xor
jnp,pn
and
fiaddl
inc
imul
je
adc
in
int3
test
out
fcmovnu
sbb
repz
cmp
fsubp
mov
in
jo
stc
or
pusha
daa
rcll
push
xchg
pusha
scas
cmp
cmpsb
rcrb
mov
push
sub
js
test
cmp
dec
sbb
inc
fwait
es
inc
mov
cli
xchg
call
orl
pop
and
or
rep
data16
jp
and
outsb
jbe
xor
jbe
in
ret
mov
xor
xor
test
push
add
or
loopne
cltd
loop
test
sub
rclb
out
test
sbb
mov
lds
sarl
insb
and
ret
popf
mov
xchg
mov
mov
clc
fmul
push
xchg
out
ja
mov
xchg
push
shll
les
pusha
je
in
loope
xchg
or
fldenv
out
pop
and
add
jae
jnp
out
or
rclb
mov
inc
lahf
push
jle
out
into
out
mov
xor
jae
xor
mov
pop
dec
cmc
xlat
shll
mov
in
inc
imull
test
mov
mov
int3
shl
fdivrl
add
xor
int3
cli
xchg
add
xorl
mov
inc
in
shr
inc
nop
mov
jl
or
movsl
cli
jmp
repz
lret
out
dec
ficompl
dec
cmpsb
push
ficoml
data16
loop
push
pop
mov
int3
mov
aam
push
out
sub
cmp
data16
dec
push
xchg
jns
inc
mov
jnp,pn
pushf
mov
mov
or
mov
mov
rcr
or
fs
aas
xor
add
jg
and
or
xlat
addr16
xchg
sbb
in
out
and
inc
push
andb
mov
out
cmp
sti
pop
loope
das
mov
mov
mov
int
inc
pop
fisubs
sbb
sub
jae
mov
fsubrs
cmp
in
and
imul
pop
mov
fmuls
jmp
cmpsb
rclw
inc
adc
enter
mov
jmp
or
test
ja
fisttpl
inc
out
mov
arpl
sub
out
xchg
xchg
pop
mov
jne
jo
push
xor
mov
mov
pop
adc
mov
jae
xchg
js
jns
push
or
cltd
dec
movsb
loopne
pushf
sbb
cs
dec
push
arpl
mov
xchg
rcl
iret
test
pop
xchg
popa
or
repz
pop
and
and
jp
les
ret
sbb
and
jmp
test
and
xor
lds
sarb
pop
mov
cld
add
add
and
loop
mov
imul
xchg
mov
xor
ret
test
mov
arpl
ret
xor
iret
pop
jp
pop
imul
inc
mov
and
xor
cmp
and
mov
pop
sub
je
mov
ret
loope
and
mov
in
std
push
fists
std
aas
xor
cmp
movsl
push
ja
icebp
mov
shlb
arpl
push
int3
mov
adc
xor
and
jp
pop
xchg
jne
add
movsb
lods
stos
arpl
hlt
fcoml
fsub
adcl
dec
sbb
mov
sbb
lret
jge
out
xchg
mov
and
sbb
pushf
ja
dec
movsl
mov
inc
aaa
aam
cltd
sbb
cmpsb
rolb
pusha
pop
jae
test
sti
dec
andl
add
cld
movsl
push
or
cmpsb
dec
jecxz
sub
in
xor
mov
sub
popf
sbb
test
inc
mov
sbb
das
xor
xchg
sub
out
out
lock
lret
dec
loopne
movsl
dec
sbb
ficomps
sbb
mov
adc
aam
fstpl
ret
dec
push
fisttpl
insb
adc
and
nop
add
pop
movsb
aaa
lahf
adc
icebp
jecxz
in
mov
fwait
xor
outsb
jmp
scas
test
mov
shll
xlat
data16
and
inc
stc
insl
mov
aam
loopne
xchg
inc
loopne
js
cli
xchg
lret
fldt
sti
jge
iret
push
mov
xchg
jecxz
pop
adc
add
sub
sti
and
or
inc
inc
jne
xchg
xchg
sbb
push
lock
sub
push
push
jle
outsl
xchg
stos
add
orl
leave
iret
mov
loope
jle
popf
fsts
add
cli
xchg
push
lret
jne
or
pop
cmp
negl
imul
scas
mov
sub
push
leave
mov
addr16
push
imul
mov
cmpsb
sub
push
dec
pop
loopne
sub
sbb
imul
mov
ficoml
pop
addl
mov
frstor
inc
sub
ljmp
jle
roll
loopne
nop
mov
js
mov
aam
push
sarl
mov
push
add
cmc
pop
outsb
cmp
mov
in
inc
add
mov
mov
hlt
test
rorl
nop
out
jb
jl
xlat
stc
and
int3
inc
sbb
in
mov
and
xchg
dec
in
jo
push
int3
jge
inc
sbbl
jno
popf
mov
imul
and
gs
out
imul
lea
sub
xchg
je
lcall
push
mov
or
jl
cltd
leave
inc
adc
dec
sub
sbbb
cwtl
jne
push
fsubr
aad
adc
fs
and
mov
dec
cs
test
lret
lahf
adc
mov
mov
fcomps
jmp
pop
mov
xor
cmpsb
mov
mov
scas
lods
rcrl
mov
mov
dec
mov
js
ss
xchg
sub
push
cmp
xor
dec
pushf
dec
sbb
xor
push
enter
les
pop
mov
popa
ja
aad
and
pop
jge
push
out
ret
out
add
mov
fcompl
frstor
adc
adc
sarl
xor
jbe
insl
dec
arpl
lods
xchg
mov
mov
data16
sub
fxch
cmc
addr16
insb
push
cld
cwtl
test
movsl
xor
shr
adc
shll
xor
sbb
and
out
mov
or
lcall
jmp
pop
mov
inc
jmp
jge
cmpsl
add
mov
mov
fstpl
loop
loop
jle
xlat
daa
or
jmp
outsb
stos
ficomps
movsl
or
push
mov
call
jp
fimuls
das
cltd
ret
arpl
lret
or
rolb
dec
adc
pop
dec
mov
ret
mov
rolb
lds
inc
imul
push
in
testb
ss
jecxz
push
adc
insl
dec
dec
ds
fisubl
subl
loop
or
je
nop
xor
push
rcll
jecxz
pop
imul
mov
mov
cmp
lret
std
xor
dec
jecxz
dec
mov
mov
mov
inc
add
xchg
and
rcrb
int
pop
lds
mov
leave
jo
dec
adc
icebp
lds
adc
daa
addr16
mov
jmp
rcrl
fs
mov
daa
je
adc
fdivrl
addr16
mov
into
sbb
mov
xchg
fwait
sbbl
aas
and
cmpsb
test
flds
add
jb
or
out
fidivrs
or
xchg
adc
pop
in
mov
decb
xor
inc
out
and
mov
ret
outsl
test
out
lret
mov
lea
inc
ud2
mov
push
repz
das
dec
cmp
or
jbe
cltd
aam
lock
push
and
pusha
push
test
jb
outsl
nop
out
scas
push
xchg
and
xor
inc
loope
sub
jl
cmpsl
dec
push
jo
and
loopne
bound
mov
add
xchg
xlat
cmc
and
fwait
lahf
ret
sub
rclb
lea
jb
sub
out
xchg
rorb
test
ja
int
fwait
sbb
out
lret
jb
pop
inc
popa
push
sahf
cmp
mov
cmp
mov
and
popa
jo
mov
mov
add
push
xchg
test
arpl
cmpsb
push
lock
or
sbb
mov
icebp
sar
scas
imul
mov
sbb
push
fdivrl
pop
fcompl
pop
outsb
cmp
cmp
pop
movsl
mov
push
push
pushf
fiaddl
shl
pop
call
push
push
out
add
insl
inc
aam
cmp
fistps
dec
mov
xor
aas
xor
arpl
dec
sub
jb
icebp
jl
insl
sub
insb
add
sbb
add
negb
xor
js
xchg
popf
popa
or
and
inc
cmp
cli
dec
xor
lahf
mov
pop
jne
jmp
or
mov
movsb
add
mov
data16
int
arpl
xchg
out
nop
mov
int
mov
xorb
pushf
xor
pop
out
in
push
loope
jne
fst
ret
push
test
shrl
add
xor
andl
jo
test
jge
inc
hlt
shrb
add
pop
ja
out
outsb
sti
lea
xorl
lods
test
sbb
movsl
push
pop
mov
xchg
mov
dec
push
jle
cli
addr16
dec
dec
ljmp
cmp
push
sub
jne
fadd
ljmp
std
into
loope
rcpps
test
jb
lcall
shlb
pushf
sub
cld
sbb
and
int
aas
ja
xchg
push
arpl
mov
push
jo
adcl
sbb
sub
jno
rorb
icebp
cs
inc
push
pop
mov
rolb
mov
enter
cmp
insb
mov
or
lret
pop
add
outsb
cld
and
popf
xor
js
fimuls
out
push
jno
pop
mov
fucomip
mov
xchg
sbb
jecxz
push
mov
cmp
nop
ret
lds
imul
xchg
and
fcoms
fiadds
es
insl
ret
mov
sbb
pop
mov
hlt
insl
push
adc
xchg
pop
xchg
imul
fs
test
lret
jg
es
dec
cltd
cmp
popa
adc
jmp
inc
cmp
and
inc
int3
lds
repz
sub
xor
dec
add
push
cmp
inc
sbb
fwait
push
dec
lds
inc
test
repnz
cs
stos
shll
jmp
jne
negb
jae
jp
push
rol
sbb
iret
xchg
xchg
mov
loope
jbe
push
pcmpeqd
mov
into
xchg
in
lds
cmc
fst
cmp
xchg
stos
negl
pop
or
shr
mov
call
pop
repnz
xchg
mov
jno
cmpsl
cmp
in
js
mov
jno
in
jo
xor
fldz
dec
dec
iret
push
pop
lods
leave
cmp
movsl
ja
cmpsb
fwait
sarl
enter
push
pop
and
mov
cs
idiv
sbbl
idivl
movsl
ret
fistpll
add
subl
mov
lods
pop
test
jl
xor
lahf
push
addr16
cmpl
leave
es
mov
dec
mov
xor
not
sub
jecxz
add
mov
xor
mov
in
hlt
xchg
repz
ljmp
in
pop
jae
push
mov
pop
aad
clc
call
insl
iret
std
call
sbb
neg
add
jns
cmp
push
and
aas
sub
push
in
stos
push
sbb
add
lea
vandpd
lods
dec
fcmovne
pop
sbb
leave
xor
js
jg
and
push
int
clc
sub
bnd
push
icebp
jno
mov
lahf
fsubl
cmp
sub
adc
mov
scas
inc
sub
aas
sbbb
shrb
lret
cltd
push
fdivs
adc
dec
xchg
shll
frstor
andl
inc
movsb
adc
shll
flds
sub
test
jno
mov
add
test
das
xor
xchg
arpl
lock
dec
pushf
div
repz
xchg
mov
fsubp
dec
lods
inc
xchg
sbb
loop
dec
jge
imul
cld
out
imul
xchg
das
fmuls
or
mov
and
push
rcrb
jge
pop
mov
les
dec
outsb
xchg
jge
sub
mov
outsb
cmp
mov
mov
sub
mov
sbb
or
pop
fucompp
sub
cmpsb
pop
rcl
mov
add
sbbb
mov
test
jae
mov
ljmp
xchg
ret
das
mov
xchg
mov
adc
mov
and
inc
ja
xchg
or
in
or
lods
sub
rcr
negl
sahf
or
xor
xor
mov
push
adc
iret
out
mov
popf
clc
and
or
aad
fcoms
jbe
hlt
ss
rcrb
hlt
cmp
inc
andl
test
inc
enter
inc
sub
insb
add
scas
cmpsb
aam
push
cmc
lcall
push
jg
jae
sbb
add
lock
mov
data16
daa
hlt
pop
pop
imul
shl
add
call
jg
xchg
std
push
xchg
sbbb
jp
add
je
inc
testb
outsl
test
and
push
cmp
and
rorb
xlat
enter
xchg
jg
mov
xor
pop
pop
pop
in
inc
xchg
add
call
pop
mov
jns
lcall
xor
pop
dec
je
mov
fwait
lea
mov
fs
pop
dec
mov
idivb
imul
data16
out
leave
jo
xchg
mov
aam
in
pop
sub
add
lods
lock
pop
repnz
or
daa
frstor
mov
fcomp
pop
pop
das
insl
stc
lds
sub
or
xor
out
stc
mov
enter
sbb
hlt
inc
push
rcrb
xchg
xchg
sarl
in
popa
mov
pop
aam
sbb
lcall
xchg
lods
or
imul
adc
aaa
push
lret
cmc
mov
es
mov
outsl
cmp
sbb
push
mov
popa
aad
jbe
dec
add
and
bound
mov
push
out
aaa
and
cmp
fs
jle
adc
lods
push
cmpsb
out
idivb
xchg
sbb
or
idivl
xchg
xorl
cmp
lret
xor
push
jmp
stos
sahf
inc
pushf
inc
sub
mov
rep
xchg
stos
inc
frstor
mov
mov
cwtl
jp
fmull
int
cltd
add
dec
sti
jne
adc
mov
pop
cmpsl
and
dec
stos
ret
loop
cwtl
cmp
cmp
xor
xchg
insb
lret
cmc
cmpsb
fcmovu
cli
and
icebp
mov
adc
jns
pop
jp
pop
and
pop
mov
sub
inc
sti
push
fsub
cmp
jne
mov
xchg
push
int
dec
sub
rol
push
lods
out
add
mov
xchg
and
lea
data16
sbb
fcompl
xchg
int3
div
movsl
incb
push
inc
sub
fsubrs
sub
add
cmp
or
add
sbb
outsb
stos
add
jmp
jae
lret
test
sbb
or
outsb
outsl
leave
jp
stos
iret
pop
mov
push
js
mov
push
cs
add
cmp
sbb
cmpsb
mov
xlat
loop
or
or
xchg
dec
movsb
xorl
js
es
cmp
xchg
popf
xchg
cmp
lods
fstl
sbb
movsl
int
mov
xor
in
adc
lea
inc
push
xchg
fucomi
int
xor
inc
fadds
stc
sub
push
adc
xchg
cmp
pop
jns
xchg
adc
subl
xchg
mov
mov
jnp
xchg
adc
xor
jl
pop
inc
sarl
jecxz
call
lods
call
jnp
lret
pop
mov
push
fdivl
jbe
in
addr16
sub
inc
icebp
iret
sbb
adc
insl
dec
and
lcall
and
jbe
jne
sub
daa
cmpsb
cmp
push
into
or
push
push
xor
mov
sbb
movsl
subl
xor
daa
mov
out
arpl
mov
xchg
mov
jnp
or
cli
out
cld
jecxz
or
push
fs
adc
mov
cmp
loope
xchg
mov
sti
sub
pop
bound
mov
fmul
outsl
lods
adc
iret
out
or
aaa
fldenv
push
xchg
cmc
das
std
pop
mov
mov
xchg
xorb
push
mov
cmp
xor
into
sub
scas
cmp
pop
jb
xor
push
mov
dec
sbb
cmpl
cmp
adc
pushf
mov
stc
cmp
stos
xor
out
pop
mov
cmpsl
mov
loop
stos
or
adc
xchg
sarl
mov
jb
pop
xchg
jae
mov
adc
testl
rcll
fisubl
cwtl
dec
stos
in
rcrb
ds
fcmovne
sbb
xor
push
call
aaa
mov
aas
jmp
cmp
movsl
jle
xchg
mov
imul
ja
mov
push
cmp
imul
sub
mov
sbbl
mov
mov
mov
cmp
fs
dec
in
in
mov
ret
fsubl
jg
imul
mov
mov
xor
clc
add
xchg
aas
pop
repnz
rolb
sahf
pusha
jno
mov
adc
aam
xlat
adc
pop
mov
pop
into
jns
shlb
mov
dec
and
aas
mov
lret
add
sahf
sahf
shll
shll
out
xchg
pop
js
loope
sub
or
shlb
and
popf
sbb
sbb
cwtl
rcr
adc
leave
xchg
lds
ret
loopne
test
mov
jecxz
jp
cltd
daa
fnstcw
xor
push
dec
xor
sub
pop
or
and
cli
popa
lahf
mov
or
xchg
cltd
lock
or
lods
icebp
mov
cs
out
xchg
pop
int3
xchg
dec
insb
filds
fisubrs
inc
and
adc
sbb
xchg
arpl
sti
mov
or
adc
lahf
push
xchg
dec
push
fmul
pop
inc
arpl
sub
test
test
sbb
add
pop
mov
pop
testb
popf
scas
call
jecxz
pop
popf
inc
clc
or
stos
test
das
mov
pop
movsb
and
adc
fstpl
or
or
nop
jae
pop
stos
add
je
in
xchg
loopne
xor
xchg
scas
jl
push
lds
nop
adc
sub
inc
and
push
inc
mov
push
and
jmp
jns
adc
xchg
stos
in
pop
cmpsb
lcall
movsl
push
in
pop
scas
dec
and
mov
aas
pop
jmp
in
add
pop
mov
mov
sbb
mov
outsl
adc
or
jl
fsubrl
push
loopne
add
insb
add
lret
push
mov
das
call
aas
jg
addr16
in
mov
insl
enter
cmp
nop
and
or
sbb
outsl
cmpl
test
in
in
mov
or
dec
mov
ds
xchg
out
cmp
mov
cmp
and
mov
push
dec
aaa
pop
ret
push
mov
push
cli
outsl
ja
mov
add
sbb
gs
mov
mov
sbb
add
ret
mov
ret
or
xlat
ret
mov
stc
fcoml
sti
mov
sub
and
fucomip
fs
jp
pop
in
mov
add
or
aam
call
sahf
push
push
inc
loop
mov
sub
scas
push
pop
fsub
rcrl
jns
je
out
push
pop
int
popa
std
sub
mov
jne
movsl
stos
hlt
and
imul
out
adc
xor
pop
mov
fmuls
cltd
mov
mov
es
ljmp
sbb
cmpsl
nop
add
rclb
mov
pop
fbstp
dec
clc
cmp
add
fldln2
shr
dec
and
mov
cmp
add
mov
push
mov
js
mov
xchg
test
jle
imul
or
pop
add
lods
in
push
or
pop
imul
js
pop
cmpsl
xchg
jno
sub
in
test
inc
pop
popf
cwtl
aaa
icebp
in
jg
outsb
adc
sub
int3
pop
lds
fs
arpl
jecxz
std
sub
pop
dec
dec
aam
stos
mov
test
gs
cmp
lea
int
roll
jnp
scas
scas
jns
cmp
fistpl
mov
lret
adc
rorb
ds
add
sbbb
dec
cmp
sbb
cmp
add
sub
pushl
lret
or
push
sub
ss
pop
outsl
inc
jecxz
scas
fimull
xchg
in
test
mov
test
aas
clc
fs
fnstenv
jmp
xor
lods
jo
inc
mov
pop
mov
jecxz
sbbl
es
cwtl
pop
testl
add
xchg
jns
inc
jb
mov
dec
cmpsb
movsb
sbb
dec
xchg
std
pop
inc
sub
inc
call
and
nop
mov
in
pusha
mov
and
loop
fbstp
adc
repnz
sub
ror
shll
test
mov
jg
sbb
mov
and
repnz
mov
adc
stc
inc
aas
jge
dec
sub
pop
add
in
or
outsl
inc
std
push
out
gs
int3
dec
ret
adc
push
jp
in
stos
test
xor
lock
add
pop
scas
sub
or
data16
dec
sub
je
jle
aad
fidivl
ret
out
pop
add
add
inc
call
call
xchg
gs
call
add
dec
ret
or
sbb
dec
lret
daa
mov
in
sub
jl
adc
pop
outsb
je
daa
je
mov
test
lret
xchg
mov
mov
popf
sbb
stos
out
ret
mov
mov
imul
jb
xor
mov
mov
xorl
sub
cs
mov
es
lods
sahf
fdiv
xor
adc
mov
and
pop
jp
push
sub
cmp
insl
sub
or
lods
dec
sub
pop
call
inc
pop
hlt
fdiv
mov
jne
add
in
aas
jnp
jnp
mov
into
mov
dec
or
out
dec
mov
fisttpl
ds
pop
popf
push
shlb
les
andb
xor
pop
pop
mov
lret
push
pop
dec
in
pop
pop
xchg
outsl
mov
xlat
xchg
bound
mov
shr
jne
add
mov
jb
lock
ljmp
cld
aam
loope
mov
cwtl
iret
jmp
daa
cmpsl
push
dec
sbb
jp
sub
mov
push
sub
adc
xchg
mov
out
scas
es
add
add
jge
pop
iret
jle
fisubl
sarb
adc
insl
scas
push
testl
pop
sub
test
test
xor
sti
neg
daa
sbb
push
les
adc
xor
popa
ljmp
pusha
xor
bound
movsl
lods
and
xchg
mov
int3
pop
mov
shrl
xlat
sar
fstps
dec
cmpsl
and
push
mov
decb
pop
in
or
cwtl
cmp
pop
dec
cwtl
mov
dec
dec
push
dec
fcomps
dec
push
fcomip
push
pshufw
stos
sbb
insl
dec
xchg
mov
adc
jmp
insb
lods
push
mov
scas
adc
mov
pop
pop
jae
in
pop
subb
dec
out
or
cmp
mov
add
sub
lret
cltd
pop
aam
add
mov
sbb
push
jl
stos
or
ss
cmp
add
andl
push
xor
cld
inc
mov
push
cwtl
popa
daa
lahf
mov
fs
sbb
movsb
mov
aam
dec
and
mov
movsl
mov
xchg
dec
loope
stos
and
mov
lds
popa
and
inc
aas
fsubrs
pop
inc
into
outsl
dec
push
lahf
in
xchg
mov
jp
lods
xor
add
sub
inc
xchg
loope
inc
push
sbb
std
cld
inc
adc
adc
in
mov
lahf
and
mov
push
mov
test
mov
popf
iret
aaa
mov
imul
add
fwait
out
mov
testb
out
jle
imul
mov
fists
pop
cmp
clc
sub
sahf
mov
mov
sbb
inc
daa
xor
jo
add
jb
out
jp
lcall
sarl
adc
xlat
je
negl
add
add
inc
shlb
push
int3
stos
incb
rcrb
push
dec
in
pop
mov
pop
cwtl
mov
sbb
jecxz
mov
or
sahf
jo
imul
xchg
pop
sbb
and
les
out
xor
out
lods
mov
cs
in
jno
jb
sti
scas
scas
fists
fisubl
ja
push
xchg
push
popf
arpl
fmuls
and
movsl
cmp
lds
in
out
inc
sbb
mov
out
add
or
xchg
or
jge
inc
mov
pop
mov
pop
cli
mov
xchg
imul
push
cmc
mull
or
je
dec
sbb
popf
fidivs
jns
movsb
push
xchg
jecxz
pop
pushw
lods
lahf
loope
stos
xchg
and
pop
je
sub
mov
arpl
in
shlb
imul
adc
mov
inc
scas
in
sbb
jb
or
jecxz
dec
or
xlat
int3
pop
adc
adc
push
incb
dec
xlat
lahf
int3
lods
fs
ret
std
jns
int3
sbb
jb
inc
ds
fadds
add
or
mov
orb
jl
mov
lret
subb
and
mov
sbb
enter
movsl
adc
fimull
iret
idivl
mov
icebp
mov
rclb
stos
mov
pop
push
shlb
or
aam
pop
jg
pop
gs
daa
inc
cmp
sbb
ret
push
pop
mov
movsl
push
ret
cld
adc
sub
sti
dec
popf
and
pop
icebp
adc
fisubrl
ss
dec
cld
or
vpmaxsw
fisubl
push
leave
adc
arpl
mov
mov
sahf
std
sti
ljmp
jmp
pop
fcoml
push
pop
fldt
incb
mov
jecxz
int
jl
imul
mov
xor
xchg
dec
dec
push
es
cltd
mov
aam
fdivp
scas
int3
xor
loope
and
xchg
add
pop
mov
ficompl
mov
cmpsb
push
push
cs
insb
pop
scas
popf
pop
sti
inc
mov
mov
pop
int3
mov
in
jo
pop
push
icebp
xor
dec
jae
xchg
push
rcrb
lods
testl
jb
cs
es
gs
fyl2xp1
adc
xor
push
mov
test
incl
sbb
leave
push
push
fisttpl
movsb
cltd
add
and
xlat
jne
xchg
leave
popf
jmp
icebp
imul
and
sbb
jbe
leave
push
xchg
inc
addr16
xchg
mov
sub
mov
or
sbb
xor
sbb
and
sub
mov
and
mov
mov
in
movb
inc
std
fisttps
jge
ficoml
and
cli
mov
sbb
lret
push
and
mov
push
mov
add
je
test
inc
movl
sub
push
dec
loopne
cmp
dec
cmpsb
and
sub
sbb
cld
movsb
cltd
jle
add
lcall
xchg
inc
xchg
int
loope
mov
stc
lock
mulps
xor
sti
jo
sti
xchg
in
or
in
mov
bound
sbb
push
jl
rcll
ret
mov
mov
rolb
mov
add
xchg
pusha
aaa
test
sbb
das
stos
pop
adc
push
jle
ret
add
xor
xchg
or
inc
cmp
jns
dec
sbb
fmuls
data16
push
fs
dec
mov
sbb
and
mov
push
ja
push
add
cmp
scas
pop
inc
xlat
inc
jb
rorb
xor
data16
loopne
adc
jae
fmull
xchg
pop
and
in
mov
or
sub
sub
push
dec
and
inc
mov
cli
lahf
std
jg
jne
fistpll
inc
lods
icebp
dec
push
in
repnz
and
pop
dec
sbb
arpl
mov
and
fildll
jb
mov
xchg
xchg
add
aas
add
out
sub
jl
sub
in
mov
leave
sub
pop
dec
loop
sbb
ficoml
incl
xchg
mov
add
xchg
cmc
jecxz
adc
jo
jae
and
inc
or
lcall
lods
jb
adc
jecxz
or
push
and
loope
in
shl
mov
and
push
lcall
adc
xor
push
cld
inc
pop
mov
mov
in
aam
in
ret
adc
aaa
mov
jge
mov
xchg
outsl
push
pop
pop
incl
dec
bound
cmc
xchg
cmpsl
mov
cld
xchg
dec
lret
stos
jae
sub
inc
rclb
lea
cmpsb
dec
ret
test
testb
dec
cmpsb
lcall
push
pop
cs
sbb
jbe
jmp
fucom
mov
stc
dec
mov
fisttpll
sbb
iret
and
inc
mov
nop
adc
xchg
fstpt
imul
int3
mov
out
cltd
push
movsl
cmp
in
faddl
pushl
insb
loopne
in
ret
push
inc
das
mov
in
push
ljmp
jne
mov
loop
xor
pop
xchg
cs
movsl
cmp
fnstenv
repnz
xchg
out
popa
jns
mov
dec
mov
sti
clc
imul
lret
xor
test
xor
bound
stos
push
sbbb
cmpsl
fstpt
rcr
imul
lret
xchg
inc
test
shlb
dec
js
mov
dec
ret
dec
mov
lret
pop
lods
mov
sub
mov
sub
sbb
xchg
jle
add
jecxz
stos
cmc
ret
and
mov
insb
jge
xchg
xbegin
pusha
sub
std
lea
push
xor
mov
xchg
mov
je
xchg
cmp
outsl
pop
sub
xor
or
gs
mov
stos
add
cmc
loopne
out
lahf
mov
aam
leave
cmp
fisubrl
push
adc
jp
popa
push
or
mov
mov
or
sub
dec
mov
subb
or
shrl
jg
cmpsb
lret
lret
xchg
jecxz
pushl
test
push
jecxz,pn
popa
cmc
jae
and
pop
daa
mov
fistl
fadds
ficompl
sbb
dec
pusha
push
mov
dec
loop
dec
mov
mov
cmc
loop
adc
and
pushf
xchg
cmc
fwait
js
fs
popa
jl
cmp
mov
dec
dec
sbb
pushf
mov
inc
and
arpl
add
add
xlat
xor
icebp
fidivs
inc
daa
int3
mov
inc
sbb
or
mov
inc
pop
and
aaa
lea
mov
jge
cld
mov
or
shlb
lods
in
and
sbbb
xchg
xchg
pop
inc
pop
mov
lret
iret
push
shr
fimull
mov
lcall
or
dec
sub
jg
pop
sub
adc
insl
cwtl
stc
lcall
ds
jecxz
test
pop
popa
push
jmp
daa
xor
outsb
rcll
jne
scas
xor
mov
jnp
sub
push
lahf
shrl
shll
sbb
aam
inc
das
ds
orb
jnp
jecxz
push
jecxz
lret
sbb
aam
mov
rolb
sbb
inc
push
mov
sbb
pop
fdivrs
into
and
adc
fwait
cmp
imull
ret
lret
xor
and
lods
or
or
es
rcrb
inc
fimull
add
xchg
sbb
jmp
mov
pop
loop
push
mull
mov
push
inc
arpl
inc
push
add
pop
sub
adc
in
popl
scas
cmp
jg
or
adc
outsl
enter
jge
addr16
push
movsb
and
icebp
lret
mov
cmp
push
loopne
scas
add
outsb
mov
lret
loop
adc
repz
popf
pop
das
in
and
lods
in
daa
jae
das
lods
push
inc
or
movsb
mov
mov
xchg
cmp
adc
loop
lods
push
mov
pop
xor
or
push
inc
jnp
add
es
push
lahf
add
cmp
sbb
ret
xchg
add
cli
mov
adcl
ss
ds
xchg
jbe
xchg
out
push
jp
inc
and
fimuls
div
pop
test
cmp
movsb
mov
cmp
out
and
lds
pop
or
fidivs
or
sahf
mov
idiv
or
roll
cs
cmp
hlt
jo
mov
stos
mov
leave
outsb
je
fdivrl
cltd
push
mov
cmpsb
sbb
pushl
xor
inc
mov
in
dec
fs
out
push
jb
icebp
fs
add
int3
cmp
icebp
pop
mov
xchg
cmp
sbb
sub
and
jo
jg
shll
dec
lock
and
inc
imul
lock
cwtl
rorl
push
xor
inc
stos
push
enter
fldl
fwait
jle
test
cmp
inc
lret
push
cmpsb
repnz
cmp
mov
pop
fadds
and
movsb
inc
and
call
repnz
jl
pop
aaa
data16
pop
mov
adc
mov
sub
lea
out
out
es
jbe
lods
adc
pop
cmpsb
cld
lock
jl
repz
xor
pop
mov
add
ja
ret
je
add
pop
cmp
jp
sbb
dec
in
lods
pop
jle
ret
sbb
dec
mov
pop
xchg
cltd
cmpsl
pop
repnz
mov
cs
stc
iret
and
sub
or
mov
jne
mov
xchg
inc
loope
xchg
insl
stos
shlb
les
sarb
or
xchg
subl
addr16
mov
addr16
clc
and
cmp
sbb
leave
cmp
xlat
negb
loopne
nop
dec
push
in
adc
and
push
xor
lahf
push
je
jl
push
imul
mov
idivl
cltd
cvtps2pd
insl
je
add
dec
lcall
sub
fwait
inc
movl
cwtl
xchg
push
dec
cltd
jne
scas
enter
clc
fstl
ja
movsb
pop
pop
jns
sahf
sbb
ss
sti
rcrb
pop
nop
add
negl
in
xchg
jg
and
insb
fs
jne
sahf
jmp
or
scas
xor
stos
xlat
pop
fucom
mov
adc
mov
xchg
in
pop
push
mov
jg
add
inc
xchg
negl
jg
mov
mov
repz
xchg
sbb
inc
scas
nop
sbb
pop
adc
cmp
shld
xor
shrb
repz
sti
or
je
dec
xchg
pop
inc
repz
and
inc
fs
imul
or
pop
pcmpeqb
and
ja
cwtl
cmpsb
xchg
push
test
jo
push
aam
scas
int3
rclb
popf
dec
aas
jecxz
stc
cmp
mov
pop
pop
sbb
mov
fcmovb
push
out
out
pushf
cs
mov
je
cmpsl
jg
dec
pusha
and
scas
mov
popa
fs
lahf
xchg
mov
mov
shll
or
pusha
mov
cltd
xchg
rorb
cmp
inc
dec
mov
test
lahf
shrd
inc
cli
xor
push
push
imul
inc
ljmp
js
jb
mov
imul
xchg
mov
xchg
out
push
push
jno
xchg
sbb
shrb
lahf
vucomiss
xor
out
imul
jmp
cmpsl
sub
shrb
ds
popf
int3
das
cmp
cmp
fcomps
insl
adc
and
mov
push
rolb
or
adc
popa
jne
adc
mov
leave
mov
xchg
xor
inc
sub
cmpsl
push
and
test
aaa
hlt
push
sbb
sbb
fldl
adc
add
in
cmpsb
inc
sbb
nop
sub
fidivrs
sub
cmp
jb
subl
jae
add
subb
iret
mov
nop
dec
or
xchg
dec
or
popa
pop
push
sarl
jo
loop
test
rorl
insl
cmp
adc
mov
mov
jb
sbb
jle
cmpsb
mov
mov
and
fbstp
out
iret
fcoml
push
push
sub
repz
data16
fsubs
cltd
jb
or
cmp
add
sbb
inc
outsb
mov
pop
and
cmp
adc
fidivl
xor
inc
push
add
push
jge
mov
fs
ret
cmp
fnstsw
popf
sub
mov
push
call
lcall
js
imul
les
mov
fbld
popf
pop
inc
mov
arpl
push
mov
mov
mov
sti
xchg
cmp
mov
cmp
jbe
adc
test
aas
das
ds
iret
push
jle
loop
jp
jb
sti
scas
enter
jo
mov
mov
in
and
clc
mov
iret
mov
imul
mov
adc
push
stos
mov
mov
in
inc
push
fbld
sbb
push
addr16
cmp
std
jb
mov
xor
mov
out
pusha
inc
sbb
je
sub
adc
pop
push
pop
insb
sahf
mov
mov
mov
and
adcb
and
add
pxor
push
mov
mov
jne
xchg
mov
and
mov
xor
pop
les
sub
daa
jmp
scas
scas
add
and
jmp
ss
xchg
popf
rcl
aas
dec
call
and
jg
inc
outsb
out
pop
clc
jecxz
ljmp
pusha
daa
loopne
dec
in
or
pop
iret
lcall
setnp
flds
lods
rorl
or
jecxz
fmul
add
push
mov
into
stc
rcll
sub
xor
xor
sub
push
push
adc
pop
lock
mov
bound
orb
loope
movsb
xchg
mov
dec
adc
les
jbe
test
lea
lret
popa
cmp
sbb
mov
add
fdivr
imul
aam
dec
and
int
loopw
enter
cmp
test
mov
lods
sub
inc
mov
push
bound
mov
add
es
inc
imul
jmp
mov
test
mov
dec
into
inc
push
jb
ss
sub
push
and
pop
sub
sbb
outsb
pop
xor
mov
mov
test
data16
fsubl
mov
leave
pop
fdivrl
add
insb
aaa
lea
test
adc
pop
jne
inc
sub
lock
push
cmp
push
jae
lea
repz
lahf
push
lret
fs
push
les
jns
scas
inc
subl
sbb
dec
outsl
sbb
pop
shll
pop
jl
xchg
xor
pop
pop
mov
outsb
lea
test
push
xchg
adcb
fsub
pop
das
jecxz
or
inc
xchg
lds
scas
sub
out
ljmp
mov
stos
stc
pusha
stos
mov
dec
jae
mov
in
add
test
mul
mov
dec
jbe
out
sbb
jge
dec
cmp
sbb
adc
sbb
jp
call
fiaddl
or
pushf
icebp
stos
add
and
cmc
sbb
stos
or
cld
test
cwtl
lret
push
mov
xlat
out
pushf
leave
gs
add
jle
xchg
dec
das
lahf
dec
or
xchg
pop
xchg
movsl
ljmp
sti
dec
leave
sti
lcall
dec
dec
xchg
outsl
add
xchg
pop
xstore-rng
cmpsl
inc
stc
insl
sbb
xchg
add
imul
cmpsl
mov
gs
add
loop
push
mulb
out
cmp
cmpl
stc
sub
loope
dec
xchg
popf
jns
test
mov
mov
test
xor
add
mov
shlb
lahf
call
pop
ret
js
adc
pop
cld
cld
lcall
push
jno
adc
inc
pop
call
repz
loope
or
mov
notb
xchg
cld
imul
loope
xorb
ja
cs
mov
adc
xlat
jb
fistl
es
push
mov
mov
xchg
popa
jp
mov
mov
daa
dec
lock
add
dec
xchg
cmc
ror
add
stos
pop
movsb
lea
jne
aad
mov
bound
inc
ret
jnp
fiadds
mov
pop
fst
sub
stos
add
mov
mov
adc
xor
aas
decl
fidivl
adc
mov
mov
lcall
aam
push
or
iret
xlat
sahf
mov
sub
and
aad
cmc
lcall
adc
jns
jnp
aad
icebp
add
movsb
pop
popa
or
push
iret
js
scas
sbb
and
out
fildl
push
outsb
sub
mov
push
xor
adcb
push
lods
sub
adc
or
lret
ds
jns
jl
xor
or
or
dec
cmp
mov
cmc
or
pushf
or
cmc
inc
xor
xchg
mov
out
gs
gs
xor
pushf
jbe
enter
int
mov
mov
clc
mov
xorl
es
jno
push
rorb
push
mov
jb
test
cmc
jae
add
repnz
sub
jb
push
stc
mov
cmp
xor
imul
in
in
dec
fidivrl
in
adc
cmpl
jl
jle
fisubrl
xor
adc
jnp
insl
add
aas
hlt
pop
popf
mov
out
sahf
xor
pop
xlat
je
mov
and
scas
aam
mov
inc
cmpsb
xor
pushf
outsl
sub
jnp
lret
jg
xchg
or
mov
add
lsl
xchg
imul
pop
in
or
or
and
xlat
xor
lret
jno
jae
fsubs
xchg
adc
std
lret
inc
movsl
repnz
jnp
fstpl
inc
inc
cmp
js
sub
pushl
sbb
ror
cs
xchg
add
dec
mov
nop
dec
dec
push
imul
mov
loop
sbbl
mov
nop
push
mov
cltd
shrl
scas
lds
inc
ja
ds
sub
xchg
scas
push
in
movsl
dec
mov
popf
inc
loop
clc
scas
addr16
jl
fisubrs
add
xchg
test
pop
lods
push
data16
popf
jp
add
jg
outsb
out
mov
cmc
inc
insl
or
icebp
fcmovnu
lea
mov
push
into
loop
stc
pop
pop
les
bound
pop
mov
jae
out
movsl
xor
xchg
ror
movsl
mov
movb
jae
cs
xchg
and
dec
scas
ret
js
mov
sbbl
fsubs
ds
sbb
sbb
sbb
dec
dec
inc
mov
jp
imull
bound
hlt
push
cmc
fnstsw
and
mov
sub
pop
cmc
or
mov
jbe
popa
hlt
adc
cs
les
insb
out
and
clc
addb
lahf
popa
mov
scas
lods
cmp
inc
push
xchg
imull
xor
imul
xlat
pop
fs
lods
or
mov
pop
mov
into
inc
out
sub
or
ret
add
fsubs
lods
or
cmp
sub
shll
insl
and
sub
stc
je
repnz
jb
inc
leave
outsl
insb
pop
push
cmc
sub
notl
jmp
adc
sub
mov
in
lret
jne
or
sbb
push
stc
hlt
inc
jbe
sti
out
and
icebp
jp
std
mov
push
rol
rcll
cmc
lds
xchg
hlt
test
fs
insl
add
cmpsl
and
lret
in
cmpsl
mov
cltd
mov
cmpb
into
dec
jns
mov
addb
lahf
jno
inc
dec
pusha
cmpsl
dec
and
test
xchg
inc
test
cmp
or
inc
adc
inc
ja
les
mov
jbe
cmp
cs
and
outsl
pusha
sub
mov
insl
pusha
in
xor
fisubl
fcoml
adc
cmpsl
inc
repz
hlt
testb
out
mov
pop
out
dec
ljmp
lahf
add
repnz
mov
mov
fdivs
daa
shlb
test
cs
stc
cld
test
pop
xchg
in
and
or
jg
inc
push
dec
push
fstpl
out
xor
loope
add
cmpb
mov
testb
lcall
ja
push
jge
shlb
jae
xchg
inc
mov
sti
lods
jle
push
sbb
lods
adc
ja
mov
adc
rcll
add
mov
pushw
outsb
pop
xor
or
jae
test
sahf
rcrb
jge
mov
mov
push
cmp
and
adc
loopne
inc
or
out
aas
insl
push
sbb
mov
sbb
popa
adc
divl
test
loope
mov
pop
cltd
pop
and
gs
insb
out
aam
push
mov
mov
popa
fisttpl
out
or
xchg
lods
xor
inc
pop
lret
xor
imul
pushf
mov
cmp
aaa
mov
or
push
addr16
or
rcrl
sub
add
daa
sbb
inc
imul
sub
cmovne
test
push
jl
leave
fcmovbe
mov
scas
lods
jbe
lods
cltd
mov
mov
incb
not
mov
jnp
fisubrl
sti
jecxz
sbb
lret
in
call
stos
jbe
faddl
push
add
sub
push
lea
lods
mov
popf
mov
dec
push
and
mov
xor
sbb
clc
lcall
pop
adc
inc
scas
dec
rorl
fisubrs
mov
rcl
push
jb
popf
sub
push
sbb
fcoms
adcl
pop
mov
mov
cld
push
fsqrt
push
and
sbb
cmp
push
test
lcall
dec
mov
div
lcall
pop
jns
or
movb
dec
and
lret
xchg
ljmp
call
jl
push
xchg
add
mov
cli
arpl
mov
mov
xchg
enter
fisttpll
ja
sbb
jge
add
inc
pop
repnz
fwait
cld
in
sahf
pop
daa
lcall
test
xchg
pop
stos
ljmp
jle
mov
lods
xor
ret
test
ja
sub
sub
ss
fimull
pop
inc
or
insl
std
jp
sbb
push
mov
and
xchg
div
ret
xchg
movsl
push
pand
push
xchg
sub
jae
mov
xchg
out
or
push
movsl
lcall
xorb
xchg
cmpsl
cwtl
mov
sbb
sbbb
lock
push
pop
call
mov
push
call
xor
xchg
xchg
repnz
jg
pmulhw
sbb
jbe
push
cmp
adc
pop
fisubrl
mov
pop
mov
mov
push
out
mov
add
dec
xchg
addr16
add
hlt
int3
popf
cmpsb
cmp
pop
push
mov
js
push
or
mov
sub
jo
jns
std
pop
outsb
movsb
jecxz
stc
testb
cmpsb
xchg
push
xor
int
xorl
scas
aad
pop
stos
pop
in
cmp
jb
sbbb
sub
cmp
dec
insl
xchg
mov
ret
add
inc
sbb
mov
mov
fxam
test
lds
out
das
mov
push
hlt
jb
repnz
inc
adc
mov
mov
and
sub
cmp
pop
out
mov
cwtl
mov
jb
xchg
jne
daa
inc
inc
pop
aaa
fisttps
or
adc
bound
in
xor
cmpsl
xor
xor
xchg
jbe
pop
ret
pop
cmp
add
or
and
push
fs
mov
fstpt
sbb
cmp
cmc
cmp
jno
outsl
push
lea
fbld
push
or
mov
out
cmp
or
cwtl
mov
or
mov
push
mov
mov
xor
bsr
inc
xor
xchg
dec
and
or
lods
dec
sub
and
pop
mov
vsqrtss
pop
cld
push
ss
pushf
imul
jecxz
outsl
fcmovnbe
jnp
pop
in
sbbl
test
ja
loope
sub
sub
cmp
ret
dec
jmp
mov
movsb
sub
xchg
fdivl
mov
data16
repz
loope
and
push
mov
dec
push
or
xchg
data16
xchg
mov
cmp
jno
sbb
stc
xchg
add
sbb
push
in
inc
mov
fwait
jle
adc
scas
pusha
and
push
xadd
adcb
sbb
ficoms
xchg
mov
test
das
fstps
in
dec
arpl
test
js
xchg
cmc
test
inc
addr16
add
xchg
pop
cli
sbb
in
mov
mov
call
lock
jle
nop
mov
cmpsb
pop
or
ja
js
sub
xlat
push
jne
pop
push
enter
sub
mov
test
xchg
fs
ficoml
mov
out
lret
outsb
cli
xlat
jmp
xor
shr
mov
and
pop
add
xchg
in
cwtl
adc
pop
jl
popf
or
jge,pn
add
sbbb
iret
mov
stos
cwtl
stos
arpl
cmp
fsts
add
test
jne
popa
bound
mov
or
or
cs
ficoml
icebp
pop
and
ljmp
movsb
cs
cmp
push
cmp
bound
int3
nop
mov
imul
shl
xor
mov
mov
mov
in
inc
mov
mov
xlat
or
stos
inc
divb
dec
add
inc
and
ja
jge
xor
inc
inc
xchg
jecxz
mov
pop
div
push
push
movsb
and
pop
sub
frstor
sub
inc
lret
and
jecxz
push
sub
mov
cltd
adc
aas
out
push
xchg
cmp
and
ret
cmpb
cmp
push
je
repnz
sub
scas
outsb
xchg
inc
xor
sub
out
repnz
or
data16
push
arpl
loopne
pushf
rorb
popa
cs
sti
mov
mov
out
mov
rolb
leave
out
lret
dec
lea
out
push
sub
push
pop
mov
dec
sbb
pop
lea
mov
sbb
stc
add
pop
cmp
xor
or
pop
jns
cmpl
jmp
and
lret
xor
in
sub
mov
xlat
sbb
js
jo
jge
push
aad
pusha
sbb
popa
push
push
pop
test
mov
push
enter
adc
addr16
sub
outsb
cmp
and
mov
adc
je
ret
cwtl
lahf
push
jns
inc
aam
xchg
jae
roll
repz
adc
dec
cwtl
cmp
cmp
fucom
out
je
or
das
mov
addl
and
dec
sub
movsl
stc
or
les
push
fistl
mov
xor
in
xchg
aaa
mov
fstpl
mov
cltd
hlt
les
shrl
lock
mov
sub
jbe
add
push
arpl
adc
pusha
shl
in
xchg
data16
lock
aaa
xorb
mov
mov
adc
ss
sbb
fisttpl
cs
sti
lret
clc
and
dec
cmpsl
and
insl
push
mov
cmpsb
or
mov
cmp
jno
scas
jg
push
dec
in
add
jns
scas
sahf
push
inc
adc
test
and
repnz
push
pop
into
rcll
jbe
popf
lea
xor
shll
mov
in
in
fcoms
fwait
test
push
pop
call
cld
scas
or
into
test
popa
xchg
inc
int3
cwtl
mov
pop
push
jg
add
orb
mov
in
lds
scas
and
stos
push
movsl
lock
clc
lods
cmp
push
imulb
rclb
dec
mov
and
int3
ss
in
sbb
xchg
loopne
add
or
jnp
mov
iret
out
jecxz
lods
mov
adc
jg
xchg
add
popa
mov
pop
inc
outsl
out
cmp
cltd
cwtl
cmp
mov
pop
xchg
adc
je
cmp
add
mov
in
daa
sbb
cld
addl
lods
fidivs
loop
shll
jae
sub
mov
jno
pop
xlat
sub
or
data16
pop
cmp
and
adc
pop
mov
dec
rolb
xorb
sbb
add
xchg
vmovhps
ljmp
sbb
adc
imul
in
scas
jbe
filds
jae
dec
pop
inc
jo
mov
sbb
test
scas
push
dec
in
sub
xor
lret
popa
xchg
adc
cmpsb
das
sar
mov
push
leave
iret
adc
add
jb
pop
xor
push
cmp
das
jo
iret
mov
ss
dec
sbb
aad
cmp
lods
xor
stos
mov
rcrl
jp
rcll
dec
std
ret
mov
pushf
sub
adc
pop
mov
lods
xorl
or
in
into
mov
jbe
xchg
dec
js
add
sub
cwtl
sbb
repz
push
sbb
ss
mov
sbb
ret
iret
mov
xor
push
sub
fbstp
xor
xor
mov
push
push
push
xchg
inc
or
xor
and
std
mov
or
and
cmp
dec
movsb
insl
lcall
add
ds
mov
cltd
pop
jae
cli
dec
or
shr
adc
out
mov
xchg
jnp
into
rorb
ds
pop
out
aas
movsl
lods
xchg
fwait
mov
pop
sub
andb
pushf
jno
fcoms
jg
mov
xor
jmp
adc
mov
jge
dec
imulb
lcall
stos
xor
mov
into
std
aad
arpl
fcoms
shll
fs
data16
jne
fbstp
jmp
pop
shl
into
int
loopne
mov
adc
or
ljmp
popf
and
loope
mov
adc
test
sbbl
test
jmp
or
jbe
or
mov
enter
mov
ja
ljmp
pop
xorl
sub
fwait
cmp
jecxz
ljmp
lods
pusha
push
lret
xchg
jp
or
inc
sub
mov
int3
cmp
mov
aas
xor
add
bound
imul
xor
and
pcmpgtd
mov
cmp
and
fxam
fdivs
lea
xchg
movsl
jno
mov
xor
test
test
mov
rclb
cld
and
sbb
pusha
fistl
sbb
call
fistl
mov
outsb
movl
xchg
lds
cmpsb
jecxz
shlb
mov
je
rcrl
sbb
hlt
push
add
jecxz
xor
fisubrl
pop
push
sbb
pop
push
xor
cmp
mov
cmp
sbb
fsubs
mov
mov
js
pop
adc
push
insb
dec
testb
sub
insb
das
and
push
add
mov
mov
and
jge
xor
inc
sub
std
out
cmp
pop
inc
sbb
fs
mov
les
lods
out
sub
cmp
xchg
cmpsl
sarb
dec
mov
or
inc
roll
add
pop
call
arpl
xor
mov
cmp
push
fdiv
push
rorb
dec
mov
call
adc
dec
and
out
jae
pusha
sti
add
rcr
test
adc
cmp
or
mov
mov
lret
push
mov
adc
scas
xchg
mov
adc
sub
push
mov
stc
out
iret
or
jne
mov
and
push
test
repnz
in
arpl
mov
fmull
mov
andl
int3
pop
insb
jo
out
cmpsl
adc
test
aam
mov
jo
mov
jbe
fistpl
lret
aas
mov
cld
cmpsl
jecxz
shrl
add
inc
das
in
popa
sbb
lock
in
int3
rorb
cmc
hlt
jnp
jl
or
out
push
cmc
and
push
popf
out
cmp
sub
dec
jp
lcall
fs
dec
dec
icebp
movsl
loop,pn
or
cmp
sbb
sub
jno
pop
push
mov
sbbl
mov
in
jb
dec
jmp
hlt
cld
jbe
mov
or
iret
fwait
mov
rclb
fisttps
into
cld
push
jo
pop
outsb
shll
mov
je,pn
xorl
inc
sub
inc
cmp
out
dec
push
stc
mov
lcall
negb
and
dec
bound
ds
mov
jne
outsw
test
stos
rol
cmp
or
scas
pop
repnz
mov
out
in
pop
pusha
adc
mov
rorb
cmp
repz
lret
call
sub
pop
add
popf
sbb
inc
push
aam
insb
push
sub
cmpsl
pop
pop
dec
testl
cmpb
mov
cwtl
mov
mov
test
and
shl
adc
cltd
push
shr
mov
add
lds
and
push
add
sbb
test
push
dec
lret
xchg
push
or
xlat
sbb
sbb
clc
or
and
daa
jg
cmpsl
imul
mov
pop
ljmp
int
jo
sub
pushf
fdivs
push
shl
cmp
cmpsb
out
mov
inc
mov
stos
adc
rorb
mov
jmp
sbb
out
mov
dec
or
inc
xor
in
lret
sub
pop
ret
push
mov
mov
and
sbb
jns
mov
mov
pop
xchg
addl
push
lods
int3
insb
add
fistl
jne
decl
outsl
in
inc
cmp
daa
inc
mov
cwtl
cmp
enter
fs
pushf
sub
add
adc
scas
mov
mov
jnp
and
sti
pop
cmp
cmpsb
push
loope
lds
aam
xchg
int
push
mov
in
pop
aaa
je
xchg
inc
pop
xor
mov
stc
xor
into
add
fnstenv
out
mov
dec
adc
mov
cmp
lods
mov
jno
pop
adc
sub
add
sub
mov
lock
add
lahf
cmpsb
js
std
mov
test
sub
pop
cwtl
mov
subb
sbb
xor
loop
push
mov
cmp
mov
cld
call
cmp
xorl
stos
cli
add
movsl
push
inc
or
out
lods
jecxz
sbb
sbb
sbb
pusha
xor
lret
jp
scas
sbb
out
xor
jle
bound
add
mov
fistps
andb
ja
testb
cmc
subl
stos
lahf
jne
mov
add
scas
stos
add
push
fmull
mov
xor
lcall
jbe
mov
sbb
mov
pop
adc
movsl
mov
sbb
shrl
clc
push
sbb
inc
jge
jno
mov
jp
mov
xor
iret
mov
adc
add
out
push
add
or
mov
andb
or
pop
mov
push
mov
adc
hlt
test
out
std
int
int3
mov
pop
mov
inc
xlat
bound
test
mov
popf
rcll
stos
mov
pop
aas
pop
test
out
mov
int
inc
dec
icebp
orl
mov
scas
push
loop
int3
into
pop
cmp
stos
sub
fcmovnu
pop
pushf
pop
popf
inc
shr
pushl
mov
cld
cwtl
pop
dec
dec
jg
mov
sub
arpl
mov
inc
mov
leave
pop
mov
imul
aad
jp
mov
pushf
cmp
fidivrs
xchg
outsl
jl
out
imul
push
fs
imul
inc
pop
cwtl
scas
sbb
cs
push
mov
add
mov
ljmp
sarb
jae
mov
xor
inc
ds
popa
enter
sbbl
xchg
cmp
les
test
fldt
push
or
add
std
xor
xchg
jnp
xchg
out
sub
push
xchg
cmp
ds
jae
test
cmpsl
cmp
pop
dec
aas
and
dec
fstpl
in
fildl
imul
adc
pop
aam
mov
inc
mov
jns
inc
stos
sbb
icebp
insb
lods
inc
dec
icebp
imul
cmp
cmp
aad
cmc
mov
adc
xchg
xchg
or
rcrb
loop
insl
inc
lea
mov
inc
sbb
push
mov
mov
mov
mov
popf
in
loope
lret
jb
xchg
xchg
cwtl
xchg
divl
xor
jae
inc
popf
aad
xorb
and
xchg
out
jg
and
roll
jne
mov
mov
jmp
je
and
stos
and
push
repz
jecxz
push
push
xor
jne
and
sub
pop
add
sub
pop
xor
int
lret
cmpsl
aaa
lock
cmp
cmp
movsl
pop
lcall
cld
mov
cmc
sbb
into
outsl
adc
sbb
mov
into
sbb
push
ret
pusha
xchg
fiaddl
pop
mov
mov
shlb
push
push
inc
jae
jnp
prefetchwt1
dec
cli
mov
or
pop
mov
inc
mov
out
pop
adc
add
fs
push
add
repnz
daa
pop
out
cld
iret
fwait
adc
mov
nop
sbb
dec
mov
cld
or
fsubr
test
stc
bound
lock
arpl
mov
icebp
or
or
add
fwait
cwtl
and
fs
sti
pusha
cmpsl
lret
cli
push
sub
cltd
mov
xchg
cmc
sub
icebp
or
mov
lds
xchg
fcmove
mov
sbb
push
mov
add
push
outsb
add
fiaddl
mov
je
inc
fidivs
lds
fwait
mov
push
push
jo
lret
xor
imul
out
or
or
pop
test
jb
and
outsb
mov
cmp
or
ss
mov
sahf
in
insl
inc
xchg
mov
data16
adc
jnp
jae
fwait
addr16
inc
rcll
ljmp
jmp
jle
add
xchg
testb
push
push
fadd
sbb
push
in
jns
pop
mov
xchg
xchg
inc
jbe
mov
xchg
loope
mov
test
enter
mov
dec
lods
lahf
fwait
pushf
dec
rorb
mov
mov
lods
in
shlb
jnp
dec
notb
jo
push
xchg
popa
xchg
xchg
enter
adc
movsl
dec
ret
sarb
jl
add
jp
outsl
enter
fistpll
test
push
nop
dec
mov
dec
push
jne
xor
lret
lret
mov
xchg
aad
and
jp
nop
pop
jae
rcl
pop
push
ja
or
lcall
arpl
mov
out
leave
mov
call
test
cmc
mov
cmpsl
test
jg
xor
iret
ret
dec
pop
pop
xor
mov
fwait
jl
mulb
outsl
or
dec
pop
xor
inc
orb
adc
push
lods
and
sbb
fisubrl
shrl
and
jle
add
xchg
in
sub
call
gs
sti
sbb
or
les
xchg
aaa
xor
lock
push
bnd
shlb
test
mov
push
ds
iret
jle
loope
cmpsl
das
adc
jne
inc
mov
ret
sub
pushf
xchg
aas
cmpsb
ret
adc
movsb
xor
cmpsb
sub
in
fmull
jno
and
hlt
cmp
xchg
sub
pop
jecxz
push
pop
jae
and
pusha
mov
pop
xor
loope
dec
adc
ret
in
xor
repnz
dec
dec
add
push
sub
add
sub
jge
dec
lock
mov
aad
jae
ljmp
dec
shl
cmove
inc
xor
xor
loope
in
xor
lret
jp
lock
dec
std
push
cmp
mov
mov
inc
test
mov
push
push
mov
es
or
cmp
ret
adc
loop
in
jns
add
outsl
xchg
ret
cwtl
hlt
inc
pusha
jbe
mov
mov
loope
decb
or
add
fcompl
daa
jno
shrd
int3
xor
mov
rorb
push
aam
mov
mov
insb
sub
sub
inc
push
enter
testl
inc
adc
popf
xchg
sti
ss
add
xor
rorl
jne
iret
subl
dec
xor
mov
mov
lds
jne
addr16
sbbb
add
mov
sti
adc
outsl
inc
sbb
pusha
clc
jp
movsb
jno
insl
data16
dec
int
or
pop
pop
adc
cmp
shlb
sub
hlt
roll
mov
pop
imul
push
int3
call
mov
and
cmp
mov
jo
mov
sbb
in
mov
inc
mov
int3
xor
dec
cmp
jmp
sarl
push
fidivrl
dec
cmp
iret
adc
sub
mov
jo
add
test
sbb
xchg
mov
push
adcb
adc
inc
add
loop
xor
out
mov
test
inc
insl
cld
loop
xchg
jnp
insl
fwait
push
in
xchg
adc
inc
stc
inc
jnp
xchg
out
popf
fcmovb
int
sub
mov
push
sahf
sub
aad
out
pop
fwait
inc
aam
adcl
or
arpl
jmp
mov
dec
jnp
lcall
lcall
dec
out
in
movsb
xchg
jecxz
jge
sarl
mov
popf
aad
cltd
jg
cmp
xor
push
pusha
dec
push
in
pop
and
out
test
sahf
in
jl
or
je
leave
mov
jle
push
test
pop
and
inc
test
adc
stos
nop
sub
nop
std
outsl
out
mov
rcrl
imul
rorl
pusha
shr
stos
or
xor
je
xchg
mov
outsb
cli
xchg
jnp
cltd
xor
jle
adc
pop
push
mov
jle
pop
inc
int3
out
aas
or
into
es
mov
mov
push
dec
shrb
adc
push
pop
inc
in
es
jbe
and
add
idivb
nop
cmp
jb
int3
scas
adc
dec
testb
or
jns
out
inc
pop
inc
mov
enter
pop
sbb
push
adc
jb
insb
mov
sub
push
ds
pop
xchg
xchg
mov
rcl
mov
icebp
rcll
cmp
loop
out
mov
lock
inc
jle,pn
pushf
shll
sub
sbb
and
push
adc
imul
adc
sub
or
cli
and
adc
nop
dec
nop
adc
fs
mov
xchg
adc
test
lock
mov
out
out
imul
xor
xor
mov
push
push
lcall
js
pop
in
call
popa
push
push
jge
pop
inc
jne
insb
dec
outsl
jbe
push
iret
pop
cmpsl
add
std
idivb
or
sub
jne
sahf
outsb
mov
add
repz
in
xor
shrl
sub
mov
cmpsl
xchg
lret
adcb
sub
lds
hlt
enter
xchg
lds
push
mov
in
ljmp
xchg
push
test
sbb
stc
pop
repz
xor
sar
mov
call
scas
pop
xor
sbb
loopne
pop
mov
push
lods
or
pushf
mov
sub
repz
sbb
jecxz
popf
push
icebp
sbb
shrl
mov
movsb
cmpsb
inc
push
and
les
cmp
mull
pop
adc
popa
sarl
add
popaw
inc
lods
int
pop
jns
shrl
movsb
xchg
gs
xor
mov
xchg
cmpsb
and
push
mov
jge
xchg
or
sbb
jp
dec
insl
aas
popf
fisubs
fisubs
pop
ja
xor
sahf
xchg
adc
lock
inc
inc
jl
fwait
lret
jns
std
xchg
and
daa
inc
mov
add
repnz
scas
cmp
mov
clc
std
add
cmpsb
sti
xor
aaa
ljmp
inc
out
test
lcall
sub
bound
mov
loop
mov
in
cmp
push
or
lock
or
jne
push
clc
cmp
in
mov
xor
das
das
stos
xchg
stc
sub
pop
cmp
ja
hlt
daa
fwait
lcall
add
test
adc
pop
xor
add
push
push
adc
jecxz
lds
lret
pop
faddl
aad
xor
cmpsb
cld
fildll
sbb
pop
push
test
sub
sub
pop
in
loop
xchg
repz
cltd
rcrl
sbb
test
xchg
inc
ja
mov
push
mov
fisubrs
inc
adc
jle
test
rcll
mov
sahf
aaa
lret
pushf
ss
fsubrl
mov
fistpl
sti
inc
mov
mov
rcl
jl
lods
ds
daa
jle
sbb
jecxz
cmp
ds
fsubs
jg
mov
movsl
call
loope
lods
sbbb
sub
es
or
cmp
push
loop
adc
push
fwait
mov
enter
js
mov
es
cltd
xchg
orl
and
fistpll
sub
in
and
jno
mov
sub
das
pop
mov
fwait
mov
sub
sub
inc
mov
pop
cld
gs
jecxz
mov
insb
movsb
fsubs
cmc
addl
sarb
fs
jecxz
popf
cwtl
push
cmp
or
mov
rol
icebp
adcl
enter
mov
outsb
pop
insb
cwtl
push
sahf
ja
or
dec
mov
cwtl
test
mov
jmp
push
out
cmpsb
sub
lods
add
sarb
or
ljmp
jns
add
jo,pt
arpl
fldcw
std
inc
rolb
dec
mov
or
insl
lea
adc
out
sti
mov
pop
xchg
add
cmp
rorl
jo
mov
loopne
and
test
xor
cld
movl
mov
sub
or
jbe
push
fwait
push
xor
sti
push
imul
icebp
or
jbe
and
xor
mov
sbb
arpl
scas
push
xor
fsubs
je
or
ret
push
sub
cmp
jne
mov
pop
into
push
sbb
inc
mov
pusha
fisubrl
and
add
adc
adc
xchg
leave
mov
fbstp
in
addr16
xchg
pop
xchg
mov
shrb
jle
addr16
bound
push
sub
popf
pusha
sarl
pop
test
push
mov
cwtl
sub
mov
nop
jno
xor
add
lock
es
inc
xor
mov
or
or
mov
outsl
inc
out
jmp
inc
or
jl
loopne
xor
loope
ss
cmpsl
loopne
movsl
movsb
jb
and
sbb
cmp
rorl
imul
xor
cld
je
mov
stc
xor
lret
push
in
dec
mov
inc
mov
add
push
shrl
xchg
mov
cwtl
xchg
fisubl
nop
pop
roll
mov
int
pop
jns
lds
lahf
js
adc
mov
mov
stc
popa
inc
lret
pop
out
cmp
inc
popf
pushf
cmp
aas
enter
add
xchg
aas
inc
outsl
in
push
or
scas
pop
fnsave
mov
push
inc
add
bound
int3
xchg
and
mov
dec
in
fs
jne
and
or
sub
in
mov
mov
in
rorl
faddl
lea
aad
stos
in
sub
popa
fcmove
inc
and
ja
clc
addr16
into
fiaddl
jmp
and
dec
test
push
cli
dec
jae
stc
jge
sbb
sub
mov
sbb
push
jmp
out
aas
in
bound
hlt
ret
add
jae
jno
mov
aam
cmp
inc
cmp
push
dec
lret
fdiv
and
roll
xchg
scas
add
jle
adc
push
ret
jbe
test
ljmp
call
out
test
mov
pop
add
xor
in
fisttps
and
dec
and
jne
add
xchg
mov
data16
mov
push
sbb
sbb
outsb
add
dec
cmpsb
popa
scas
cmp
movsb
or
xchg
sbb
adc
sarl
in
or
and
fdivp
xor
jne
xor
stos
andl
cmp
cwtl
shll
adc
cwtl
inc
mov
adc
mov
mov
push
loopne
sub
add
cmpsb
jp
or
test
mov
mov
iret
mov
pop
stos
repz
das
mov
in
sbb
test
xchg
dec
pop
clc
fiadds
mov
adc
test
sub
int
lods
xchg
notl
mov
inc
hlt
jle
push
inc
jae
imul
std
lea
jae
xchg
push
enter
das
fadds
popf
xor
sar
arpl
popa
popf
lock
not
loop
jmp
int
cmpsb
testb
adc
ficomps
mov
je
adc
dec
cmp
test
jmp
xor
adc
pop
cmp
shrl
pop
lahf
les
cmp
mov
mov
test
xor
push
xchg
cltd
jnp
ds
repnz
mov
sbb
movsl
push
mov
cltd
mov
lods
jo
sbb
push
fwait
lock
jg
in
scas
cmp
mov
xchg
iret
in
stc
sub
repz
add
inc
nop
mull
push
fcmovb
xchg
les
scas
jae
add
sbb
jb
xchg
inc
out
stos
or
outsb
fisttps
fidivrl
inc
sbb
inc
out
addl
adc
dec
mov
es
mov
push
dec
test
andb
das
movsb
xchg
adc
xchg
outsl
in
call
aad
and
xchg
and
scas
cs
or
pop
das
stos
stc
dec
call
pop
outsb
add
mov
cmc
mov
pushf
orb
mov
shrb
or
movl
inc
inc
aas
lret
addr16
mov
sbb
jb
popf
out
jp
pop
pop
and
inc
sarb
sub
xor
pop
add
adc
sti
dec
mov
or
inc
or
xchg
sub
jmp
in
rcll
lcall
jb
cltd
fildl
out
inc
imul
pop
inc
xor
sbb
out
pop
rclb
bsf
inc
sub
sbb
xor
sahf
je
xchg
jns
bound
fmull
shll
mov
icebp
and
cltd
ja
xor
pushf
mov
pop
loope
mov
and
or
leave
mov
jo
leave
or
test
mov
cmc
add
jmp
cmp
stc
and
mov
std
pop
mov
rorl
outsl
sbb
xchg
mov
mov
je
cmpsb
dec
jno
mov
icebp
dec
lcall
leave
incb
mov
scas
jmp
pop
inc
mov
mov
scas
jg
es
movl
xchg
adc
cmp
mov
xor
jnp
add
pop
es
jmp
mov
js
adc
push
cmp
xchg
lods
or
sub
mov
testb
into
xchg
repnz
aam
fstpl
pop
js
push
mov
shrd
xor
jo
push
xor
jae
pushf
dec
sub
jl
mul
sbb
add
push
loop
hlt
add
xor
or
decl
sub
or
dec
jle
sub
pop
fstl
fisubrl
ret
sbb
or
ret
adc
or
in
shrb
inc
aas
pushf
in
pop
cmpsl
das
add
fwait
aaa
inc
ss
inc
pop
out
xchg
sbb
and
or
popf
inc
lea
clc
movsb
cmp
es
inc
stos
pop
cmc
jle
popf
adc
sbb
add
shr
fwait
or
and
cld
mov
xchg
xor
jle
ds
leave
imul
add
sub
in
push
add
mov
push
mov
lock
dec
jns
cmpsl
fwait
jb
or
into
int
cmpsb
cli
cmc
sbb
loop
adc
dec
sbb
xor
mov
mov
lds
nop
cmpsb
loope
imul
into
std
xchg
nop
add
dec
incb
pop
add
mov
jno
int
sbb
pop
mov
and
dec
inc
xchg
jae
sahf
pop
fimuls
mov
mov
sbb
ljmp
inc
cmpsl
cmp
pop
jne
mov
mov
mov
and
testb
or
xor
jno
movb
lahf
out
cli
add
out
nop
test
orl
fiaddl
jecxz
push
faddl
pop
push
leave
push
hlt
insl
inc
insb
jo
push
or
sub
pop
and
lock
sub
insl
push
insl
jl
addb
dec
xchg
lods
push
xor
popf
rcrl
push
paddusb
sub
xchg
gs
adc
push
repz
dec
in
push
or
xchg
cld
cmp
scas
mov
ficompl
inc
shlb
add
int
push
frstor
rclb
mov
pop
movsl
or
mov
jo
scas
arpl
cmpsl
pop
inc
js
xchg
test
pop
das
pop
mov
cmp
xchg
arpl
push
inc
test
xchg
data16
lds
sbb
mov
fists
mov
std
daa
aaa
fucomi
and
sbb
sub
rolb
inc
add
int
xchg
faddl
xor
push
mov
sbb
inc
add
push
aas
dec
xor
cmpl
lds
loope
stc
mov
mov
push
bound
push
mov
popf
femms
lea
sub
sbb
lds
push
sub
cs
or
cmpsb
push
lret
pop
imul
jne
jmp
jl
push
data16
mov
orl
ficompl
push
scas
pusha
adc
sbbb
fs
push
xor
sbb
add
jb
jl
mov
adc
sbb
cmp
out
lods
cmp
adc
mov
adc
jg
loop
push
xchg
or
jmp
mov
adcb
push
lcall
cmpsl
movsb
jecxz
push
outsl
sub
mov
jmp
mov
popa
push
aad
mov
outsb
xchg
stc
inc
test
push
orl
xlat
rolb
imul
mov
sbbb
jp
jae
fcoml
nop
dec
sub
aaa
jle
and
mov
dec
mov
pop
lcall
test
enter
jnp
mov
xchg
pop
adc
jl
mov
imul
enter
inc
shrb
in
mov
lods
add
or
daa
or
daa
jecxz
adc
and
jns
in
int
xchg
mov
out
mov
jno
inc
dec
pop
iret
in
aad
jne
add
out
enter
cmpsb
scas
and
nop
sti
pop
jle
adc
testb
aad
jmp
das
sarb
dec
popa
sbb
scas
mov
rcrl
ja
mov
add
xchg
mov
mov
or
xor
shl
pop
mov
insb
leave
mov
int3
test
leave
orb
hlt
jmp
enter
xlat
push
cs
pop
fisubs
xchg
pop
jbe
xchg
sub
int
jne
xchg
and
sub
imulb
xor
int
js
xchg
mov
jmp
pushf
sbb
cli
in
movsb
jg
inc
and
mov
push
insl
pop
inc
aam
fwait
cmp
adc
fldcw
dec
imul
xor
mov
fmul
popa
cwtl
sub
pop
xor
jl
fiadds
mov
mov
and
cmp
add
cmp
sub
cltd
test
cmp
out
scas
pop
sub
scas
push
lock
sbb
push
iret
pushf
inc
push
or
mov
nop
icebp
push
pop
mov
por
xchg
add
and
inc
xchg
out
cmp
sbb
insb
jl
scas
fs
jo
mov
push
addr16
ror
ret
je
sub
loope
dec
insl
cltd
mov
aam
mov
inc
popf
mov
outsb
pop
xor
dec
mov
fmuls
stc
pop
jo
sti
xchg
faddl
pop
pop
inc
xor
or
xor
leave
cld
dec
dec
loop
ljmp
push
mov
cmpsl
adc
dec
jno
loope
std
imul
shll
adc
cmp
dec
hlt
cmp
mov
mov
icebp
pushf
lret
sahf
pop
mov
jmp
data16
and
jge
xor
pop
sbb
mov
dec
punpcklwd
ja
into
mov
adc
push
sbb
cmp
in
add
sbb
jne
pop
xorl
imul
mov
jecxz
sbb
shl
ss
cmp
cli
cli
fistl
mov
jmp
lea
sbb
in
push
scas
inc
inc
push
cmp
mov
movsb
div
dec
sbb
adc
std
subl
gs
xor
ret
aad
fidivs
push
xchg
sti
cmp
fs
fsubrl
insb
sub
popf
push
cmpsl
iret
xlat
inc
inc
dec
push
inc
sahf
popl
mov
addl
cmp
icebp
sti
icebp
inc
dec
inc
pop
out
jmp
adc
mov
add
xchg
cli
mov
jnp
and
jmp
das
pop
dec
mov
scas
idivl
mov
loope
rorl
sub
lret
and
xchg
mov
mov
pop
lds
jl
mov
sbb
mov
insb
imul
push
mov
enter
and
popf
push
dec
fistps
daa
pop
loope
mov
xor
nop
aas
push
fwait
mov
outsb
addr16
mov
and
mov
and
cltd
fiaddl
pop
inc
int
jns
xchg
pusha
push
mov
lret
jmp
push
scas
pusha
cwtl
jb
insl
inc
sbb
idivb
sbb
inc
out
pusha
testl
sbb
loop
jle
jnp
adc
cmp
jmp
adc
aad
popa
and
test
ficompl
xchg
dec
sub
pop
ss
imul
arpl
dec
jg
fcmovb
in
xchg
fldenv
ret
inc
lock
xchg
or
dec
jae
aad
test
mov
movsb
push
scas
out
aam
movsl
lods
add
pushf
movsb
loop
pop
mov
mov
xor
ds
cli
popf
mov
mov
pushf
movsb
shlb
jnp
stos
mov
lahf
ljmp
nop
fcoms
jb
mov
xchg
jg
xor
dec
loop
push
jp
nop
insl
repnz
cmp
adc
push
cmpsb
imul
sbb
or
push
sub
outsb
push
push
cmc
repz
test
data16
lcall
shrl
call
sub
pop
cmp
pop
adc
fidivl
mov
push
call
mov
adc
ds
adc
ljmp
xor
sub
js
cmp
pushf
inc
scas
inc
rol
aaa
dec
lock
cs
ds
sbb
cmp
add
imul
psraw
js
outsl
mov
jge
aad
add
cmpsl
lds
test
cltd
sub
sbb
mov
adc
xchg
aam
jmp
sbb
mov
push
xor
mov
push
in
mov
repnz
jb
push
xchg
lea
dec
adcb
fcompl
ret
xchg
or
jbe
repz
shl
xor
lea
dec
jnp
repz
lret
int3
das
js
les
jp
xor
mov
int3
push
les
sub
add
iret
fwait
lahf
dec
pop
ret
int3
or
jge
mov
push
sarl
std
mov
jmp
cmpsl
add
pop
test
repnz
movsl
into
aad
mov
out
int3
aas
dec
insl
or
or
aas
add
lods
jae
imul
xchg
push
rcrb
lds
sbbb
ds
das
mov
jle
sub
insb
fisttps
and
sbb
hlt
test
sub
adc
rcll
ljmp
sahf
aaa
xchg
sahf
out
mov
mov
stos
aad
pop
cmp
adc
jmp
sub
dec
pop
out
xchg
stos
sbb
mov
test
or
pop
dec
fiaddl
inc
lcall
mov
out
adc
out
and
sbb
mov
loopne
inc
mov
sbb
jle
in
cmpsl
xor
sub
sbb
and
ja
scas
fsincos
inc
fcom
jmp
mov
xor
aaa
xor
push
push
aaa
jnp
cmp
bnd
test
sbb
cmc
imul
mov
push
in
std
push
jle
outsl
xchg
xchg
pushf
imul
bound
mov
dec
xor
fsubr
push
movsb
cmpl
dec
insl
inc
lods
in
mov
mov
int3
dec
mov
mov
es
push
xchg
ret
xchg
cmpsb
dec
mov
mov
sub
stos
push
ja
add
lcall
fs
mov
dec
in
jbe
or
xor
imul
icebp
lahf
fwait
mov
shlb
mov
imul
cmp
mov
lds
loopne
pusha
in
rcll
mov
inc
adc
pushf
enter
shlb
gs
lods
fistps
xchg
inc
push
xor
inc
out
test
sti
arpl
lds
inc
jne
pop
movsb
push
int
aaa
icebp
iret
out
pop
push
mov
mov
pop
mov
aas
push
jb
sub
sub
and
lret
jo
addb
mov
lods
loope
enter
dec
repz
cmp
sarb
or
cld
push
repnz
or
dec
mov
addl
sar
stos
mov
ret
pop
push
mov
or
call
sbb
add
arpl
sti
in
add
jb
decl
dec
int3
out
js
incl
pop
movsl
dec
outsb
dec
dec
fistl
enter
jg
sbb
pop
leave
imul
in
jns
xchg
mov
lods
int3
pusha
xchg
in
divb
test
stc
jecxz
loopne
mov
lods
mov
pop
fadd
lods
pop
ja
les
scas
push
lret
loop
push
popa
ja
add
sub
into
rolb
fwait
test
mov
push
jecxz
loopne
push
call
popf
les
pop
popf
sbb
inc
cmp
jbe
stos
lods
cli
aaa
scas
popf
mov
fisubrs
sbb
sub
cltd
and
push
mov
pop
push
add
mov
jb
sbb
addr16
and
mov
jnp
jns
int3
pop
clc
mov
pop
mov
pop
xchg
cwtl
addb
addb
push
xchg
fmull
xor
ret
sbb
xchg
xor
and
xor
push
mov
nop
jnp
xchg
test
mov
outsl
loopne
jae
int
sub
sbb
icebp
add
lret
daa
pop
mov
insb
xchg
or
jecxz
addl
jbe
stc
in
push
sub
fwait
lret
movsb
arpl
lahf
cwtl
fistpll
fs
ss
dec
sbb
sub
xchg
or
cwtl
addr16
pop
and
lea
add
out
inc
out
out
mov
arpl
mov
xor
adc
es
ret
jl
sbb
sbb
je
faddp
pop
into
sbbb
inc
out
dec
push
add
loopne
cwtl
hlt
mov
leave
cwtl
adc
loope
mov
dec
daa
xchg
gs
add
or
jmp
bswap
mov
cmc
mov
nop
ljmp
int3
imul
or
notrack
cmpsb
pop
scas
mov
loope,pt
gs
cmpsl
add
jne
adc
rcrl
ds
aad
cmp
jns
adc
add
fmull
cmc
loope
and
clc
mov
cmp
dec
fisttpl
mov
or
xor
xchg
inc
push
fisttps
ficomps
mov
std
mov
in
lock
xor
mov
adc
scas
hlt
xchg
xchg
dec
pop
loope
pushf
push
shll
push
js
rcl
cwtl
nop
xchg
out
lods
test
sbb
cmp
pop
jno
cmp
jnp
push
adcl
filds
add
mov
mov
roll
addr16
inc
inc
jae
fwait
sbb
ficomps
jecxz
insl
jge
lret
xchg
hlt
push
or
into
shrl
adc
xchg
ja
add
or
mov
icebp
stos
pushf
shrb
jb
fistpl
dec
mov
sarb
add
fdiv
js
jg
mov
cltd
gs
and
fldl
lret
pop
aaa
cmp
xor
fsub
aaa
xchg
hlt
mov
jne
pop
mov
inc
movb
fimull
xor
out
mov
in
mov
insb
orl
jns
adc
stc
and
lods
lods
imul
stos
add
imul
jle
sub
push
loopne
add
into
adc
test
dec
rcll
popa
std
sub
and
mov
xlat
push
xchg
mov
cmp
lahf
mov
mov
sub
mov
xor
loop
sar
adc
fwait
mov
pusha
pop
mov
jb
inc
add
xchg
xchg
les
xor
js
inc
popf
aas
inc
xchg
add
sti
push
add
stc
xor
mov
rorl
add
shrb
fldenv
clc
xchg
mov
je
and
int3
inc
sti
adc
pop
shrl
or
inc
pop
shll
xchg
adc
dec
testl
push
dec
fistl
add
mov
mov
sahf
mov
loopne
mov
xchg
daa
cmpsl
pop
leave
aam
sahf
jp
je
mov
mov
mov
or
or
push
test
mov
xor
int
es
sub
arpl
cmpsb
popf
and
negb
call
add
jp
out
sbb
and
bound
out
cld
shr
cmp
cmp
pop
inc
loop
mov
mov
add
inc
mov
dec
push
push
inc
loopne
shlb
adc
test
cmp
mov
jl
push
mov
test
out
xchg
idivl
cs
es
out
or
lods
push
xor
out
mov
adc
jns
ret
movsb
mov
inc
mov
jbe
out
fldt
add
dec
sbb
mov
mov
call
rcrl
shll
inc
mov
adc
insb
mov
jae
cmpb
and
jns
les
cmp
notb
jno
stos
out
mov
subb
loopne
stos
mov
xchg
outsb
shlb
adc
negb
loope
pushf
jge
or
jb
mov
pop
je
xchg
lahf
dec
std
mov
fnstenv
movsb
mov
pop
iret
dec
jns
repz
lea
sar
arpl
rol
push
mov
cmp
mov
and
push
cmc
lret
lea
das
mov
or
cmp
repnz
xchg
or
js
mov
int
leave
loopne
movsb
mov
mov
adc
push
mov
fisubs
pop
hlt
push
adc
dec
fwait
pushf
pop
adc
aad
mov
fidivl
xor
cmpl
les
mov
fdiv
xchg
imull
jmp
xchg
jecxz
add
fisubrl
mov
dec
cld
mov
adc
icebp
dec
and
stos
adc
cmp
iret
sub
jno
push
mov
push
pop
adc
ficompl
pop
ja
insb
sarl
fsubl
add
mov
mov
cmc
in
mov
mov
test
popf
cmp
sub
push
dec
lret
lods
mov
xchg
fistpll
pop
or
sarl
push
sbb
call
jecxz
mull
les
ja
push
sbb
add
arpl
and
stos
jle
sbb
xor
leave
movsb
ljmp
inc
sahf
xchg
mov
cmc
sti
pop
aam
push
push
xchg
sahf
icebp
and
push
mov
push
imul
bnd
pushf
or
popa
push
mov
xchg
and
dec
les
cli
idiv
insb
push
lea
push
push
dec
push
adc
les
adc
outsl
leave
sub
sub
mov
repz
mov
arpl
pop
dec
shrl
jno
lods
subl
cld
daa
dec
pushf
aam
sub
xor
dec
mov
mov
out
loopne
and
xchg
outsl
sbb
push
sbb
out
mov
dec
pop
pop
lods
ret
pop
xchg
aas
in
cmp
stos
gs
mov
out
daa
adcb
out
mov
inc
mov
jl
mov
adc
dec
inc
mov
mov
movsl
xor
sahf
lahf
xchg
sub
jae
adc
cs
pop
jl
out
ret
loop
pop
push
sahf
cld
adc
mov
add
add
mov
mov
cli
aad
hlt
sub
inc
push
and
jmp
popa
or
imull
inc
je
jne
js
sbb
push
push
push
popa
push
stc
mov
rcrl
pop
out
xor
jge
push
mov
or
sbb
shlb
adc
or
cwtl
fcompl
mov
jo
orb
leave
ffreep
dec
fs
inc
pop
pushf
jp,pt
cmp
sub
fistpll
or
mov
ret
xchg
clc
push
leave
fwait
movl
jl
inc
repz
popf
lret
enter
xor
iret
sub
pop
aaa
ret
int
mov
pusha
hlt
inc
scas
std
je
dec
pop
pop
cmpb
xchg
push
outsb
outsl
hlt
sbb
xchg
adc
into
out
mov
mov
cltd
adc
mov
add
mov
aam
cmpsb
sbb
xchg
cmp
xchg
aaa
pop
jo
out
dec
sub
insl
outsl
int
and
pop
les
inc
imul
imul
stos
movsb
sbb
mov
repnz
mov
lods
cmp
inc
push
add
fs
mov
movsb
out
pop
cmp
and
pushf
xrelease
lds
add
stc
fidivs
jns
mov
mov
pop
lods
sti
popa
xchg
out
arpl
filds
add
add
insb
mov
jp
jmp
sub
out
mov
in
pusha
lret
add
and
jl
xchg
sub
pop
rcll
sub
pop
jnp
enter
xchg
data16
fdivrp
jae
sarb
loopne
sbb
add
lea
xchg
lretw
xchg
xchg
mov
adc
jno
mov
xchg
mov
ret
mov
arpl
ja
cmp
xchg
jg
sub
jl
lods
jmp
cwtl
int
out
jecxz
fldl
sub
jnp
scas
xchg
clc
cmp
jb
push
add
mov
iret
pop
cli
test
jns
sub
sbb
lds
jecxz
push
add
xchg
mov
mov
xchg
cs
dec
stos
cmp
mov
cmp
inc
fsts
je
ffreep
insl
jnp
inc
jl
scas
cli
fdivr
xor
sbb
movsb
jecxz
scas
aad
adc
imul
mov
aaa
out
into
mov
dec
mov
call
add
push
mov
and
stos
dec
in
decl
push
mov
adc
lret
jb
jmp
addr16
ja
sbb
sbb
xchg
dec
stos
repz
xor
pop
jmp
dec
cmp
es
mov
adc
pop
fdivl
xor
pop
int
lods
pop
sar
addb
jge
and
inc
lret
pop
dec
fdivrs
ds
jge
xor
mov
mov
lea
std
dec
push
std
or
push
mov
cmpsl
outsb
lds
outsb
and
dec
mov
mov
scas
arpl
ficomps
or
cmp
mov
repz
jae
mov
pop
sarb
inc
or
hlt
jg
cs
orl
and
add
gs
pop
mov
cmp
shlb
mov
or
adc
sbbl
addl
sub
lea
cmpl
add
leave
mov
out
xor
adc
and
push
in
gs
jle
adc
push
fs
clc
adc
cmp
ds
repz
call
push
and
fcomps
and
mov
xchg
xor
or
test
shrb
movsb
shll
pop
mov
dec
insl
xchg
push
jo
mov
pusha
mov
xchg
and
xor
mov
add
pop
jb
jp
gs
jecxz
int
mov
addr16
sub
imul
pushf
pusha
gs
or
add
or
in
pop
out
jno
int3
push
loope
dec
fiaddl
jne
jb
loop
fisubrs
data16
sti
and
jecxz
lret
aad
cwtl
mov
jns
scas
clc
and
mov
addb
cmc
cmp
cmc
pop
nop
popf
jo
mov
bswap
popa
inc
mov
repz
and
push
rcrb
mov
pop
mov
pop
lret
push
fcoms
jecxz
and
les
inc
scas
movsb
push
shrl
in
mov
push
gs
dec
or
jecxz
sub
sub
outsl
das
inc
sbb
mov
xor
lock
mov
or
scas
mov
sti
mov
push
and
hlt
mov
cmp
gs
jge
hlt
fldl
pop
sbb
push
aas
pop
mov
stc
inc
cmp
mov
and
sbb
sahf
pop
xchg
fildl
adc
inc
out
mov
jmp
mov
fsubrs
cwtl
or
dec
xchg
and
movsb
xlat
pop
arpl
xor
pop
sub
frstor
cli
cmp
mov
cmpsb
mov
jo
xchg
in
ret
jecxz
out
push
das
shll
test
add
mov
orb
test
fstp
aam
outsl
and
repnz
dec
ss
jl
mov
sbb
xchg
movsl
lret
test
fdivrl
lods
lds
add
aas
repz
ss
sbb
lds
pop
jmp
xchg
pop
cmp
cmc
and
movsl
mov
repnz
dec
outsb
xchg
fstpl
imul
shrb
cmc
push
out
sahf
cmpsl
mov
inc
add
and
lods
jle
mov
adcb
push
or
mov
mov
and
je
jmp
xor
pop
stos
push
jg
inc
or
push
cmp
in
cld
loope
mov
or
xchg
repnz
inc
mov
cmp
ret
bound
in
xchg
roll
mov
xchg
loop
adc
out
pop
fistpll
lea
outsl
cmp
xchg
fwait
mov
rcrb
data16
ret
inc
adc
jp
push
dec
aam
mov
rcll
cs
repnz
jo
mov
scas
js
dec
insb
icebp
icebp
movsl
in
mov
jbe
lock
arpl
pop
filds
push
cmp
and
xchg
mov
gs
push
repz
shlb
sbb
fdivp
jle
mov
sti
xor
pop
fistpl
xor
mov
stos
mov
cwtl
adcl
pop
inc
out
jp
push
inc
out
xchg
clc
ja
push
popf
sub
jb
pop
ror
in
mov
fistl
pushf
mov
mov
mov
xor
sbb
xchg
mov
xchg
adc
or
mov
inc
sbb
mov
mov
push
mov
mov
cmp
adc
xchg
lcall
sub
cmc
mov
add
faddl
mov
pusha
or
inc
loop
push
xor
jle
iret
adc
sub
ja
pop
jp
in
sub
jbe
cwtl
pop
xchg
fidivl
in
imul
sbb
ljmp
repz
add
arpl
psllw
lods
lds
leave
shll
mov
outsb
sub
xchg
push
lds
inc
fmull
dec
mov
es
in
enter
jns
xchg
gs
push
push
sysenter
add
sub
sti
enter
in
xor
arpl
gs
pushf
sarb
sahf
test
jp
jl
adc
mov
dec
scas
sub
jp
mov
add
loopne
fwait
mov
push
data16
mov
lret
jnp
mov
xchg
dec
mov
jno
in
shlb
dec
out
loop
sub
outsb
dec
dec
test
or
cmp
adc
jle
andl
ret
negb
fsts
sbb
mov
dec
mov
push
into
add
jnp,pn
pop
pop
das
push
push
push
iret
dec
mov
add
pop
movsl
js
stos
xor
xor
ud1
dec
gs
pusha
inc
dec
xor
subb
in
pop
dec
jg
orl
decl
push
rorl
mov
mov
jge
sbb
leave
inc
pop
jg
lahf
mov
pop
loop
fwait
xor
adc
rcrl
cmp
sub
xor
pop
sbb
lcall
or
cvtps2pd
addr16
movsl
lahf
push
fsubl
and
jle
iret
ja
xchg
fwait
loopne
into
mov
xchg
adc
push
pop
or
inc
jo
scas
mov
rcr
push
repnz
mov
pop
addr16
mov
sbb
sbb
jecxz
aas
push
mov
popa
push
inc
rcr
and
bound
add
ljmp
lock
enter
in
sub
or
sbb
add
inc
xlat
jo
inc
popa
mov
lds
inc
xchg
xlat
cmpsb
adc
fstpl
out
testl
jg
mov
dec
gs
leave
test
push
mov
mov
xchg
stos
in
pop
jle
ljmp
in
into
sub
out
pushf
mov
xchg
loopne
aas
insl
cs
gs
jno
jns
jmp
fists
insl
fsubrp
jp
jp
mov
test
jp
pop
add
add
push
loop
inc
rcl
in
mov
ss
popf
push
add
xchg
and
push
popa
add
mov
enter
cmp
add
pusha
fimull
je
push
ss
lods
cmc
in
mov
xchg
mov
outsb
pop
push
sub
call
loope
push
jnp
bound
das
jmp
xchg
sbb
mov
jne
add
jge
push
ljmp
jl
inc
sbb
ja
mov
xorb
cmovl
rorl
fcomps
sti
shlb
xor
adcb
adcl
enter
movsl
push
imulb
adc
arpl
repnz
std
mov
cmp
mov
mov
and
cmpsb
mov
mov
adc
adc
vmovhps
in
pop
mull
or
xor
push
sti
pop
test
cmp
dec
jmp
xchg
add
imulb
mov
pop
icebp
adc
jne
jp
icebp
loope
lods
sbb
sub
xchg
cwtl
je
push
push
imul
arpl
inc
out
enter
jge
jne
and
lods
dec
sti
mov
pusha
adc
push
stos
scas
out
jb
mov
cmpsl
fisubs
push
call
lret
push
cmp
jnp
mov
push
sbb
mov
xor
dec
arpl
mov
shlb
and
leave
xchg
shrb
ljmp
mov
notb
mov
or
inc
arpl
xchg
out
mov
pop
lods
pusha
or
xor
cmc
jb
movsb
jne
addb
push
fcmovnbe
ja
add
shl
inc
sub
jb
mov
inc
dec
sti
jp
ljmp
fcmovbe
cmp
inc
jne
fcomp
and
add
sbb
jbe
pcmpgtw
pop
xor
pusha
sub
cli
and
inc
jecxz
xor
aad
iret
xor
push
push
hlt
roll
add
jecxz
scas
dec
and
roll
cwtl
into
sub
pusha
push
xor
and
testl
stos
imul
push
fcompl
cmpb
add
mov
pop
out
cmp
push
mov
pusha
enter
cmpsb
inc
sbb
out
stos
inc
paddb
lds
adc
loope
xlat
inc
fwait
shl
sub
dec
stos
test
xchg
f2xm1
out
xor
lock
ja
mov
iret
sub
je
cmc
cli
jg
or
aas
dec
lods
inc
add
jg
ljmp
push
test
jns
rolb
xor
std
jmp
sti
dec
imul
cmp
in
mov
das
push
fdivl
lods
gs
shrb
mov
test
mov
fsubrp
xchg
mov
lcall
iret
fiadds
orl
sbb
mov
repz
inc
dec
popf
push
popf
es
push
cmp
or
xor
pop
push
or
sbb
xor
test
out
jne
mov
sahf
nop
mov
sub
lds
mov
mov
in
mov
hlt
addr16
add
cmp
hlt
xchg
cltd
lcall
bound
xor
adc
out
pusha
stos
lods
mov
insl
jns
pop
test
add
dec
mov
int
mov
push
push
imul
push
ja
lret
icebp
push
inc
popl
and
adc
jle
xchg
bound
dec
mov
loop
pop
stos
pusha
inc
out
sbbb
add
jmp
enter
ret
movsb
das
loopne
aad
xchg
sarl
mov
inc
xor
dec
push
adc
mov
aam
xchg
mov
ret
inc
lcall
push
mov
or
adc
mov
iret
xlat
in
xor
mov
jle
mov
sbb
cmp
and
mov
lcall
and
dec
mov
adc
insb
add
jg
in
mov
leave
pusha
adc
leave
rcrb
xor
aaa
dec
sti
stc
push
push
ficompl
dec
mov
stc
lock
jne
or
pop
scas
dec
add
mov
mov
mov
xchg
inc
aaa
xlat
xchg
adc
sub
aas
cmp
jmp
cmc
pop
cld
jecxz
mov
and
scas
fistl
test
or
jmp
sbb
dec
lahf
int3
iret
pop
movsl
cmova
jecxz
repnz
jo
clc
aas
ret
push
fistpl
sub
mov
sbbl
and
int
mov
and
arpl
fwait
loop
mov
subl
repz
fidivrl
fsubrp
xchg
mov
and
lock
or
xchg
ljmp
adc
cltd
aas
add
sarb
fisttpll
out
test
outsl
xchg
mov
ljmp
iret
mov
test
xchg
mov
sub
fstp
mov
push
cmp
addr16
mov
jecxz
mov
clc
cli
or
xor
lock
out
lahf
inc
divl
push
das
lock
pop
mov
adc
imul
lret
repnz
pop
lds
movsb
and
jb
insb
dec
jg
add
pop
cli
push
xchg
push
inc
stos
adc
pop
jecxz
fdivrs
xor
dec
and
adc
dec
cs
cmpsb
fsubl
and
dec
fs
dec
push
out
mov
cmpsl
sub
pop
sub
jg
add
lret
mov
lcall
mov
ret
xchg
pop
fldenv
add
imul
loopne
add
mov
sbb
add
aam
negl
jge
mov
dec
rcrb
sarl
cmpsb
rcrl
adc
mov
mov
sub
dec
push
je
test
add
in
adc
mov
mov
ret
jmp
jle
mov
movsb
bound
add
ret
in
das
loopne
xchg
cmp
or
xchg
pop
sub
pop
daa
movlps
or
xchg
jmp
jae
fwait
insb
add
bound
jmp
fildll
cmc
hlt
xor
pop
push
or
clc
inc
lock
mov
dec
mov
repnz
inc
or
nop
mov
data16
xor
arpl
ret
movsb
aaa
out
mov
test
in
std
push
mov
push
xchg
aam
pop
lahf
xchg
or
int3
add
dec
adc
loop
je
xor
subb
or
cmp
leave
rcll
adcl
repnz
inc
stos
push
push
out
sbb
pop
ret
jb
mov
js
notl
sbb
jne
cmpsb
out
fsubl
jo
push
add
lret
cwtl
callw
xchg
push
scas
jns
aaa
push
enter
nop
jp
outsl
dec
lahf
cli
fcomps
xor
stos
ficompl
aam
repz
mov
push
lea
add
inc
pop
mov
sbb
xor
fs
xor
outsl
mov
nop
repnz
xchg
jnp
push
icebp
push
stos
dec
in
mov
leave
test
mov
and
push
mov
jg
xor
call
ficomps
mov
mulb
mov
lcall
cld
cmpb
bound
jnp
sub
test
fst
push
sbb
inc
mov
out
out
adc
cmp
in
xchg
add
cli
cmp
icebp
xchg
adc
xchg
pop
rcrb
test
fld
fistps
in
lret
add
test
mov
imul
sbb
icebp
leave
push
dec
jne
repnz
or
out
stos
repz
aad
jp
and
push
or
ficoml
aas
in
jae
int
sar
insb
mov
or
fsubl
test
push
sbb
ret
lret
xor
lret
fiaddl
fcoms
pop
ds
sub
loop
scas
cvtpi2ps
xor
pop
imul
xor
scas
push
gs
mov
xor
push
pop
out
lock
iret
or
xlat
cmpsl
jbe
jnp
repz
xchg
lcall
inc
mov
out
mov
cmpsb
sub
mov
pushf
adc
ret
mov
xor
je
inc
stos
mov
sbb
jmp
popf
push
inc
imul
mov
repz
dec
test
xchg
adc
bound
dec
cmpsl
xor
adc
insb
mov
scas
cld
sbb
lret
pop
pushf
sbb
out
add
ljmp
mov
sbb
in
jecxz
mov
and
shrl
sub
fdivp
out
fiadds
movsb
or
jbe
imul
cwtl
stos
ret
movsl
mov
cmpsl
mov
mull
fiaddl
xchg
dec
cmp
xor
shlb
ds
add
jne
out
xchg
out
sub
adc
inc
fs
lcall
lock
in
test
inc
xor
sbb
dec
ror
xor
and
xlat
daa
or
in
test
hlt
mov
aaa
or
aam
xor
cwtl
push
stos
cs
jnp
pop
pop
and
push
lea
lcall
adc
je
das
pop
jl
jge
cmpsb
scas
jp
jle
mov
loope
daa
daa
pop
outsl
lret
push
lret
or
xchg
push
push
inc
jbe,pt
xor
cltd
adc
aaa
nop
dec
mov
movsb
insb
add
loope
push
or
pusha
pop
out
pop
cmp
dec
adc
push
pop
adcb
mov
xor
mov
or
or
jb
or
andl
scas
xor
xor
js
aas
mov
xchg
push
push
call
push
ja
cmpsl
iret
fistpll
xor
cmp
mov
out
dec
dec
sub
test
out
cmpl
shrl
sub
jb
imul
mov
sbbl
inc
inc
cld
inc
icebp
movsl
int3
fcmovnb
xor
sbb
fcmovu
cmp
push
movsb
sahf
das
aaa
xchg
push
in
clc
dec
pop
jmp
imul
jge
fwait
mov
sbbb
inc
dec
into
testl
les
into
cmc
inc
pusha
push
add
ja
cmp
loope
or
and
push
adc
sbb
mov
jae
lret
mov
add
lcall
arpl
loope
jno
dec
cmc
ret
aam
lds
ret
inc
pop
repz
dec
rcr
and
sbb
popf
pop
jns
xchg
popa
int
pop
rol
loopne
sub
pushf
cld
int
mov
dec
and
iretw
loop
jne
dec
xchg
ja
fwait
push
and
cmc
mov
mov
adc
das
fimull
out
jae
push
inc
and
cmp
in
test
sarl
jmp
into
out
push
inc
cmp
lret
xor
mov
mov
unpcklps
pop
dec
das
mov
mov
xor
sub
add
lods
jmp
mov
pop
fcoml
mov
mov
js
inc
cmpsl
aam
or
fstl
movsl
in
shlb
or
xchg
mov
cmp
xchg
mov
mov
add
mov
mov
add
and
stc
call
sbb
jne
popf
xorl
inc
out
mov
insb
mov
xor
gs
sbb
enter
mov
push
xchg
adc
movsb
lahf
or
gs
rorl
mov
push
loopne
xor
cmp
xchg
pop
jge
lcall
sbb
std
adc
lcall
ja
out
push
adc
mov
test
sub
adc
sbb
orb
call
sub
in
ljmp
inc
fucomi
inc
xor
xchg
push
cmp
inc
popf
xlat
call
in
jecxz
mov
mov
je
ret
lods
push
adc
xor
and
sbb
mov
fwait
or
cmpsb
test
decb
test
cmp
adc
ja
repnz
sti
xchg
lret
aas
push
inc
dec
and
lods
mov
aam
pop
repz
or
out
cmpsb
inc
cmc
mov
cmc
mov
lock
push
into
addb
rcrb
fsubr
insl
adc
inc
dec
xchg
rolb
imul
jb
adc
xchg
pop
stos
shrb
or
dec
xor
pop
add
int
push
ja
test
outsl
push
aam
or
into
mov
jb
and
out
shrb
enter
leave
xchg
add
fistpl
sbb
mov
fcoml
stos
push
rcrb
insb
mov
adc
pop
cmp
or
mov
push
add
shl
pop
jmp
mov
jb
fpatan
cmc
stos
clc
xchg
add
mov
nop
xchg
and
jecxz
les
outsl
jmp
inc
nop
xor
loopne
push
adc
pop
neg
insb
xor
int
jg
sbb
and
or
or
mov
add
pop
loop
jmp
icebp
inc
fidivrl
call
mov
in
aaa
jbe
xor
dec
sub
test
adc
fistps
jae
xchg
sub
lods
cltd
rcrl
jne
test
add
jne
gs
clc
mov
adcl
mov
cmp
andb
aam
fsubl
stos
popa
shrl
ljmp
in
sub
cwtl
mov
push
xor
add
xor
lcall
pop
push
pop
and
mov
xchg
aam
jmp
roll
mov
cmpsb
mov
out
orb
jmp
gs
je
addl
xor
clc
and
pop
dec
mov
xor
insl
xor
jnp
lahf
adc
in
ds
lods
push
adcb
xchg
and
cmp
mov
mov
rcrb
adc
rclb
aaa
jle
aad
push
xlat
insl
add
mov
out
in
mov
xor
add
inc
pop
aaa
mov
adc
lods
sbb
xchg
mov
sbb
mov
popl
jbe
lcall
sub
movsl
icebp
stos
xlat
ss
mov
jno
loop
adc
jno
adc
cld
scas
jecxz
xor
jb
rorl
jge
and
and
adc
or
push
lret
sub
dec
jmp
or
fsubl
leave
fucom
sbb
push
push
int3
outsl
imul
aad
popa
xor
adcb
dec
lock
pop
aam
inc
push
inc
movsb
push
cltd
fisubrl
mov
arpl
or
lret
pop
push
add
fadds
mov
fisubrs
fsubs
ret
and
lret
jnp
jne
gs
loope
dec
loop
jb
std
adc
or
pop
xor
inc
mov
inc
push
loopne
icebp
subb
pop
xchg
dec
add
pop
dec
stos
int3
mov
cmp
negl
jo
mov
sub
aas
sub
add
push
add
inc
lret
sub
les
sbb
in
pop
mov
aaa
rcll
ret
das
mov
test
shll
aas
pop
imul
jl
mov
add
mov
imul
mov
scas
std
add
pop
fimull
xorl
es
xchg
fcomp
push
jne
pop
push
into
push
clc
cmpsb
and
pop
xorb
outsl
push
pop
cwtl
adc
inc
cmp
dec
stc
add
sub
pop
mov
shl
cmc
sbb
in
mov
dec
es
ret
cmp
push
cmp
scas
in
xlat
lods
ret
popa
int
cmp
push
mov
xlat
aas
xchg
inc
xlat
lods
sarb
jg
ljmp
aaa
fistps
or
inc
sub
enter
add
pop
daa
outsl
xchg
pop
jo
pop
stos
mov
mov
pop
mov
xor
stc
xlat
pop
jae
push
int3
push
enter
outsb
mov
in
xor
cmp
dec
outsl
push
jmp
sbb
imul
or
dec
xchg
or
sbb
cmpsl
pusha
stos
jle
adc
sub
push
cmpsl
jge
inc
mov
mov
dec
ljmp
divb
movsl
pop
mov
enter
dec
xor
frstor
jge
sahf
cmovno
out
pop
lock
xchg
pop
xchg
sub
mov
orb
test
and
jae
rcl
popaw
mov
inc
dec
push
xor
sub
std
dec
inc
ljmp
push
mov
xchg
inc
push
mov
enter
pusha
push
xchg
cmpsl
out
pop
ret
add
cmp
pop
xor
arpl
gs
iret
sbb
pop
js
mov
xchg
fildl
movsb
test
xchg
sbb
dec
dec
xchg
les
mulb
data16
leave
sbb
push
ds
mov
leave
movsl
lret
fwait
push
push
mov
iret
sub
jecxz
insb
and
lods
inc
fs
out
leave
add
ret
hlt
jle
int3
lods
xchg
ljmp
test
jl
call
daa
iret
fcmovnbe
cltd
cltd
mov
insl
cmp
xor
lret
add
cmpb
dec
das
mov
xor
lds
sub
pop
movsb
mov
or
mov
mov
pop
xor
insl
jno
pusha
xchg
ss
jge
fbstp
loopne
push
and
imul
loop
test
push
fistpl
adc
imul
or
add
stos
and
jl
movsl
cmpsb
aaa
xchg
lret
gs
jp
mov
cmpsb
pop
scas
negl
filds
repnz
dec
stos
cmp
sub
inc
sti
jp
xchg
cmp
xchg
jg
cmp
inc
sub
in
test
pop
fldt
icebp
inc
hlt
xchg
test
jle
out
mov
cmp
xchg
out
cmp
mov
out
push
cmp
xchg
lcall
cmp
mov
stc
lret
xchg
cmp
clc
or
lods
jmp
negl
jle
aam
add
stos
cmp
mov
xchg
pop
mov
mov
and
push
mov
xor
mov
push
inc
mov
sub
lds
lea
adc
fistps
cmp
jl
jb
add
jne
imul
cli
add
pop
scas
ja
arpl
add
popa
lret
dec
ljmp
mov
mov
idivb
mov
scas
mov
cwtl
xor
xor
ljmp
lahf
adc
jae
repnz
xchg
xchg
jns
xchg
push
shll
xchg
ror
imulb
in
loop
mov
xlat
fimuls
loop
divl
cmp
sub
in
dec
or
xchg
loop
movsl
sti
lods
std
cmp
sub
mov
scas
sub
cwtl
or
test
mov
jg
pop
jg
fwait
jo
movsb
cmc
outsb
pop
fnclex
adc
inc
xchg
lcall
stos
out
bound
testb
push
inc
mov
cmp
int
mov
mov
ds
push
movsl
jecxz
fcompl
xlat
mov
stos
loopne
mov
sub
aas
push
add
mov
mov
mov
lret
inc
jl
movsl
scas
xor
sub
or
push
addr16
iret
les
push
popw
dec
ret
je
mov
jmp
fcomps
das
pop
mov
push
xor
jmp
jb
push
aaa
and
xlat
movsb
cmc
andb
or
pop
sub
jo
cmp
std
lahf
rorl
add
pop
add
sbb
cs
jl
lods
inc
fisttpl
dec
nop
ljmp
push
pop
and
in
repz
sbb
cwtl
leave
pusha
adc
jno
dec
pop
aas
push
push
iret
shl
hlt
jbe
xchg
fisubs
or
or
mov
addb
mov
aad
fsubrs
xchg
jns
fisttps
test
divb
in
pop
and
pop
shl
pop
cmp
push
xor
push
dec
xor
cwtl
inc
adc
pop
add
dec
into
cmp
icebp
xlat
stos
dec
cmpsl
or
call
cs
push
aam
rorl
ret
inc
in
mov
pop
and
data16
lret
mul
out
cmp
sarb
test
jle
nop
dec
out
mov
sbb
mov
mov
ficomps
mov
add
jae
std
xchg
pop
add
cmp
mov
pop
scas
and
jge
xor
inc
mov
fists
cmp
mov
aas
fs
mov
inc
mov
mov
out
mov
mov
mov
insb
dec
mov
mov
adc
in
fidivs
cs
jmp
pop
adc
sbb
mov
dec
adc
add
mov
lock
lahf
shrl
cltd
das
xor
push
pop
inc
xor
pop
test
cmpsl
mov
repz
jbe
mov
and
mov
jb,pt
xor
push
ja
and
xor
insl
sbb
shrb
mov
movsl
jmp
adc
rcr
pushf
ret
jmp
stc
daa
das
mov
fcompl
sbb
mov
or
cs
jmp
adc
lahf
mov
cld
aad
mov
xchg
jno
and
mov
jp
nop
sub
xor
stos
cmp
imul
fs
dec
sub
mov
es
cmp
lea
sbbb
jge
inc
cmp
push
pop
pusha
mov
sbb
stc
inc
imul
mov
aas
bnd
pushf
xor
xorl
fcoms
xchg
ljmp
sub
cwtl
in
xor
push
xchg
int3
mov
push
out
mov
push
je
or
xchg
bsr
insb
cmp
ds
jp
bound
inc
push
dec
orb
ss
js
pop
jp
push
loop
shrl
jno
movsb
dec
mov
sbb
out
ljmp
lods
movsb
xor
sbb
pushf
pushf
push
je
pop
mov
and
jnp
out
cmp
xchg
arpl
incb
cmp
fstps
cli
aaa
xor
jb
dec
shr
ja
notb
imul
jge
stos
adc
inc
mov
cmp
add
mov
testl
push
mov
cmpsl
stc
xor
push
les
sub
xorl
sbb
lock
inc
push
out
lods
clc
lea
ret
test
add
pop
std
repz
mov
add
loop
jp
add
sarl
out
sarl
in
cltd
ret
push
fisttpll
ss
jmp
dec
lcall
movsl
sbb
adc
test
arpl
cmc
dec
adc
dec
ja
repnz
test
fnstcw
rclb
adc
js
fimull
inc
out
push
pop
divl
or
push
dec
test
pop
cmp
cld
shrb
jp
call
adc
mov
lahf
icebp
scas
inc
imul
pop
aas
enter
xor
and
pop
mov
mov
xor
in
insb
push
rcrb
icebp
xchg
push
les
sbb
nop
cmp
mov
dec
js
cmp
mov
xchg
shr
mov
das
lahf
xor
out
je
jecxz
fwait
test
pusha
ss
add
call
pusha
cmp
cwtl
std
call
cmp
sub
out
push
out
jne
inc
pop
or
push
cltd
leave
in
dec
pop
out
out
std
add
inc
sbb
and
xor
xor
cmpsl
or
fxch
mov
sbb
sbb
mov
icebp
ret
shl
stos
and
int
mov
dec
js
cmp
cs
mov
or
ds
mov
push
jae
sub
shlb
pop
data16
add
iret
push
out
jp
int
or
dec
jbe
gs
xchg
xor
test
mov
out
sbbl
push
mov
xchg
cmp
cmp
dec
sub
sbb
cwtl
add
cs
lods
jge
pop
push
xor
inc
adc
mov
jl
push
aaa
aam
jp
es
ficomps
sbb
mov
fadds
pavgb
adc
or
outsl
adc
push
sub
sbbb
gs
xchg
sbb
scas
inc
lret
cmp
lret
pop
bound
inc
test
mov
mov
push
xchg
das
outsl
daa
insb
push
push
ss
adc
ja
sbb
cmp
mov
or
pop
mov
jae
lahf
hlt
fisttpl
subl
inc
jae
pop
loopne
ja
lea
mov
pandn
leave
push
mov
dec
orl
jmp
mov
sahf
aas
xchg
mov
mov
mov
daa
jb
jo
in
fistpll
mov
xor
jo
jmp
pop
ss
jg
inc
ss
mov
or
fs
out
sbb
je
cmc
or
mov
dec
aam
mov
imul
std
jnp
cs
iret
sub
clc
xor
shll
xor
push
jns
imul
add
js
lods
xor
out
xchg
cmp
cmp
add
ljmp
leave
je
lahf
pushf
push
daa
in
sbb
cli
mov
pop
stos
pop
je
sbb
das
leave
mov
bswap
lods
cmp
loopne
mov
into
cld
cwtl
inc
insl
push
fsubr
sbb
ds
hlt
jecxz
stc
mov
pop
push
pop
jns
testl
mov
and
addr16
ret
cmp
js
mov
xchg
out
cld
push
lcall
out
inc
mov
pop
sub
cmp
jbe
js
dec
gs
lcall
lock
and
lods
dec
inc
jnp
daa
inc
fdivr
dec
pop
push
lea
jae
dec
dec
mov
mov
xor
cs
es
mov
out
cmc
dec
ror
repnz
add
addb
xchg
xchg
xor
arpl
push
cmp
push
cmp
negb
mov
fsts
push
push
sbb
inc
xor
push
xchg
pop
mov
sbb
mov
cmpl
repnz
mov
shlb
jmp
sbb
ljmp
cmp
inc
aad
dec
mov
sub
outsl
aad
xchg
sub
jle
sub
xchg
cmp
dec
std
jle
insb
jmp
inc
push
and
and
inc
lcall
in
mov
dec
mov
sbb
or
popf
ja
or
imul
test
cmp
push
cltd
mov
push
adc
cmp
cs
ljmp
cmc
lret
cmp
pop
adcl
jmp
clc
jno
mov
mov
div
inc
arpl
jno
or
sub
xchg
int3
push
pop
loop
fisttpll
xchg
cmp
adc
sub
jb
jbe
push
push
and
jg
sbb
pop
jp
mov
xchg
cmc
or
jns
and
xchg
mov
jmp
ja
mov
out
inc
push
rcl
lds
stc
dec
inc
inc
sbb
sbb
scas
nop
push
es
push
jnp
xor
push
pop
add
cmc
jmp
cltd
sahf
out
add
js
adc
push
loopne
sahf
cmp
inc
jne
inc
add
lds
mov
popa
pop
je
pop
daa
sbb
call
jnp
leave
mov
ds
and
fiadds
int3
cwtl
sub
xchg
enter
adc
fwait
or
les
orl
rolb
xlat
push
xor
or
loopne
ret
pop
fistps
aad
shlb
inc
stos
xlat
adc
lds
or
sbb
and
js
or
lds
imul
adc
xchg
push
icebp
dec
mov
daa
shll
cmp
mov
lret
adc
fmull
mov
rcrl
call
or
push
addr16
xchg
and
std
cli
loopne
pusha
dec
cmpb
stos
in
nop
shlb
pop
sub
mov
repnz
mov
repnz
mov
jl
sbb
shrb
xchg
adc
jo
sbb
sbb
sub
ja
cmp
cmp
cltd
jbe
aam
or
cli
in
cs
insl
lcall
sub
jg
ljmp
mov
xchg
push
add
and
in
scas
repz
xchg
dec
adc
jo
pop
sub
cltd
fs
lea
dec
xor
loope
adc
dec
fldcw
dec
addr16
lcall
mov
ja
scas
js
push
bound
ret
xor
neg
mov
mov
cmc
sbb
outsb
add
sub
dec
ljmp
mov
mov
enter
dec
enter
pushf
sub
and
jle
jl
or
xchg
aas
daa
mov
outsl
in
cmp
cld
loopne
fs
push
mov
xor
inc
imul
outsb
xchg
pop
pop
lods
xor
add
push
lods
jno
mov
roll
sbb
mov
xchg
popf
ret
adc
sub
sbb
enter
call
int
push
nop
scas
adcb
mov
add
js
scas
xchg
stos
mov
ja
sbb
xchg
xchg
scas
jns
scas
jp
mov
cmp
dec
cmp
or
jnp
call
jp
inc
mov
xchg
dec
jecxz
ret
das
fwait
movsb
add
mov
stos
fstl
jp
sub
scas
and
dec
pop
bound
or
mov
loope
jne
clc
scas
pop
loop
xchg
cmpsl
sarl
jecxz
inc
loopne
mov
dec
and
into
adc
mov
push
aaa
fcoms
sti
andb
sbb
and
mov
call
popf
mov
dec
inc
fisubrs
aaa
sub
mov
mov
std
insl
bound
cmp
les
jg
inc
cmp
movsl
xchg
lahf
sbb
dec
out
jecxz
lds
daa
xchg
jecxz
mov
ret
and
mov
xchg
clc
cs
loopne
sub
adc
or
in
push
mov
adc
hlt
sbb
mov
sbb
push
lods
xor
nop
cmc
iret
xor
shrb
in
inc
pop
or
inc
or
aad
leave
mov
mov
call
fwait
stos
dec
imul
lods
fisttpl
mov
lods
movsb
jg
outsb
nop
pop
fsubs
add
inc
sarb
outsb
mov
lret
pop
pop
and
push
lcall
insl
push
inc
in
repz
fs
sub
imul
pop
mov
lcall
ret
dec
adc
cli
dec
fistps
insb
mov
in
jnp
and
mov
dec
mov
jno
test
loopne
in
lock
loop
imul
aas
cmp
popa
into
jmp
nop
aad
pop
mov
andl
mov
inc
incb
add
xchg
mov
mov
pop
xchg
cmp
sub
xchg
mul
insb
add
movsl
out
fnstcw
movsb
popa
lds
ret
push
push
subb
outsl
lods
pop
mov
lea
dec
sti
popa
cmc
pop
lcall
leave
movsl
push
xor
pop
ror
loope
negl
sbb
dec
xchg
enter
xchg
cmp
data16
leave
pop
sbb
cmp
movsl
mov
addr16
std
and
mov
test
cs
lods
ljmp
movsb
adc
cmp
inc
inc
inc
cmp
mov
sub
fs
aad
aam
mov
xor
daa
adc
out
xchg
in
mov
lods
je
dec
add
bound
mov
movsb
mov
dec
bnd
sub
aas
mov
mov
leave
push
cli
ds
jecxz
ja
mov
push
repz
cmpsl
aam
xchg
jno
scas
dec
sahf
add
stos
scas
push
push
push
out
fnstsw
xorb
jmp
aad
add
push
mov
mov
je
loop
push
jns
jo
jge
or
push
inc
ljmp
adcl
or
xor
pop
dec
and
lcall
pop
in
cmp
fcomp
and
jbe
inc
iret
xchg
movsl
daa
jg
push
jl
mov
fistpl
call
pop
inc
cmpb
cmc
pop
mov
adc
mov
addr16
sbb
mov
pop
mov
in
mov
pusha
notl
data16
outsl
mov
fcmovnbe
popa
xchg
or
mov
cld
fbstp
lahf
lds
call
std
push
inc
inc
and
add
cmc
pop
sbb
out
adc
pop
imul
mov
int3
pop
and
cld
fbstp
push
inc
insb
das
dec
cwtl
in
fcomi
ljmp
ljmp
push
xor
pop
sbb
mov
jle
rcl
sub
pop
or
push
jae
stos
lock
loope
les
dec
mov
jns
pop
push
dec
push
jecxz
aam
lahf
sub
test
in
xchg
idivl
dec
je
lret
inc
dec
and
mov
cmp
and
mov
jg
sub
sbb
sbb
jb
iret
insb
push
bound
push
and
xorl
jmp
shr
imul
movsb
cmp
mov
add
push
or
sbb
loope
imul
mov
jne
out
popa
sbb
repz
sahf
testb
cmc
clc
jge
imul
dec
inc
mov
insb
stos
add
xor
xor
ficompl
cmp
adc
ret
mov
adc
jnp
mov
xchg
jmp
ficomps
enterw
repnz
in
push
lock
cmp
shll
mov
xchg
sbb
push
cmp
mov
enter
cmpsb
pop
shlb
adc
push
xchg
push
push
xchg
or
jb
cwtl
popl
lea
sub
mov
cltd
pushl
aad
push
pushf
pop
test
pop
push
sar
push
repz
aam
sub
inc
push
je
inc
aas
xchg
ljmp
shl
rorl
xchg
push
mov
mov
ret
movsl
imul
movsb
mov
xor
sti
out
mov
andl
add
in
ficomps
dec
adc
cmpsb
lds
mov
lds
iret
jmp
outsl
sti
rclb
in
in
pop
mov
inc
add
icebp
ret
cld
lods
jecxz
mov
lcall
xor
pop
sti
jg,pn
adc
or
nop
pop
and
adc
in
mov
in
das
cmp
jb
shlb
jo
xchg
cmp
xchg
sub
test
xor
fwait
test
dec
or
dec
repz
loop
lret
sbb
orb
adc
jbe
dec
xor
pop
mov
sbb
adcl
dec
xchg
pop
sbb
push
xchg
mov
js
sub
adc
mov
adc
cli
jecxz
dec
fimuls
adc
stos
adc
xchg
pop
fidivs
int
dec
pop
repnz
adc
dec
pushf
pop
xlat
adc
inc
test
inc
popf
or
testl
pop
xor
xchg
cld
push
xor
nop
pusha
xchg
push
pop
int
xor
loope
scas
fildll
and
push
mov
stos
ror
daa
lcall
add
setbe
cmp
mov
mov
jns
orb
pop
aad
pop
test
mov
cmpsl
xor
into
cs
jnp
out
sub
sub
jge
outsb
outsb
xor
and
xchg
stc
and
push
jne
mov
and
jge
xor
cmp
mov
mov
xchg
and
mov
mov
pop
adc
les
push
lods
cltd
inc
cmp
or
mov
push
divb
inc
fisttps
ret
push
xchg
and
sbb
imul
cmp
xor
xor
mov
stos
lods
testl
mov
push
aad
pop
push
addr16
mov
mov
inc
ss
ret
push
inc
mov
lahf
int3
cltd
repnz
cmpsb
xchg
sub
popf
rcll
and
inc
pop
or
sbb
jle
orb
jge
xchg
or
lret
cmp
jle
add
cmp
mov
or
std
sbb
and
push
sbb
adc
xchg
jne
outsb
mov
jns
add
push
call
mov
or
shrl
insl
lods
inc
push
out
imul
jle
inc
jmp
shrb
clc
mov
nop
cmp
mov
mov
pop
in
scas
sti
out
and
aad
test
sahf
loopne
mov
ljmp
mov
pop
subb
clc
sub
mov
and
int
ja
add
cmp
test
and
popf
add
loope
icebp
cmpsl
sub
test
cmp
push
ja
clc
repnz
daa
out
scas
mov
insb
mov
mov
jb
pop
ljmp
or
arpl
xchg
inc
lret
jno
cli
sbb
mov
loopne
enter
lahf
ja
movsb
icebp
loop
mov
push
push
mov
or
test
push
pop
dec
sub
lret
lods
sarb
pop
fiaddl
cmpsb
rorl
jecxz
mov
adc
xchg
or
imul
mov
pop
mov
lods
sbb
xchg
imul
stc
lea
repz
out
add
add
mov
mov
dec
mov
stos
or
or
out
ja
sbb
lock
subl
push
mov
fildl
cld
ret
mov
into
cltd
dec
mov
lea
add
rclb
ret
cmp
or
jge
loopne
cmpb
cmp
mov
aam
lcall
sbb
out
aad
int3
ret
or
mov
shrb
cwtl
dec
inc
adc
jno
cmp
pusha
sbb
xor
sub
frstor
mov
and
hlt
pop
inc
xor
add
iret
mov
inc
mov
jecxz
and
mov
test
push
addr16
inc
mov
xchg
popf
mov
mov
clc
pusha
xor
test
je
add
sbb
and
push
mov
pop
lods
pushf
push
das
cmp
aad
popf
jbe
rclb
shll
add
pop
outsl
mov
ja
pop
xchg
aas
int3
cs
mov
repnz
dec
sub
fs
js
mov
divl
sbbb
out
xor
insl
cmp
sbb
mov
stos
sbb
dec
inc
iret
mov
es
mov
cmc
xchg
jno
lahf
mov
push
push
dec
xchg
inc
and
mov
mov
mov
pop
sti
push
xlat
aas
fisttpl
sub
ljmp
and
sub
fsts
add
roll
xor
sbb
rorl
enter
sub
sbb
pop
ror
push
sub
xchg
or
mov
in
ret
jmp
ret
mov
push
nop
ret
push
pop
and
fs
xor
jmp
cltd
jp
sbb
stc
icebp
sbb
in
test
push
int3
ror
test
xchg
out
cmp
lea
adc
push
enter
icebp
rcr
int
push
pushf
call
mov
xchg
pop
fwait
pop
sti
lods
and
or
fimuls
add
or
xchg
addr16
sti
fistps
jb
loop
das
push
into
call
mov
mov
adc
pop
jg
dec
fdivs
push
lods
cmp
stc
push
jge
aam
adc
add
sub
subb
fbstp
inc
and
push
add
sub
dec
dec
mov
int3
pop
xor
pushf
test
ret
push
push
sbb
inc
scas
and
rclb
mov
mov
rcl
add
adc
es
or
rcrl
mov
imull
notl
test
mov
push
bound
lods
cmpb
test
fstl
cwtl
test
push
inc
enter
cmp
dec
lds
fbld
das
and
int3
mov
popa
cmp
lea
sub
outsl
scas
stos
pop
xor
loopne
leave
mov
clc
scas
inc
push
mov
and
lock
mov
in
ret
inc
sarb
out
xor
test
xchg
add
dec
lahf
push
xchg
sub
mov
mov
mov
dec
lahf
pop
xchg
fmull
xchg
adc
push
push
shll
ds
cmc
inc
ds
out
mov
xlat
xor
js
roll
sti
cltd
sarl
not
or
dec
xor
sub
stc
aad
out
or
and
cmpsl
or
xor
fwait
mov
js
fimuls
jmp
or
fs
jns
jle
adc
aad
or
out
mov
scas
stos
push
xchg
sbb
ficoms
out
inc
mov
scas
pop
jo
call
add
dec
xchg
add
push
je
cmpsl
daa
test
dec
loope
adc
xchg
and
cs
imul
adc
sbb
daa
loope
jg
mov
je
dec
fwait
xchg
cmpsb
fwait
jmp
inc
cmp
mov
popf
cmp
and
aaa
pusha
jne
jbe
add
jne
es
push
adc
mov
pop
or
jae
mov
or
les
pushf
sub
stos
mov
adc
xchg
push
out
inc
stos
add
and
lret
sarb
stos
test
dec
shlb
add
adc
in
mov
cmp
cmp
mov
data16
test
mov
out
lds
outsb
cmp
into
xor
sbbl
jns
push
fmul
lret
ret
cmp
jbe
inc
mov
xchg
cmp
icebp
enter
aad
jle
mov
jo
and
test
mov
sub
cs
loopne
rol
test
pop
jecxz
sub
imul
inc
inc
imul
frstor
cmp
test
push
aad
cmpsl
sbb
pop
adc
jmp
sbb
add
push
pop
sbb
adc
addr16
popf
inc
clc
div
jecxz
or
pop
cmc
test
mov
mov
cmpsb
push
aas
mov
or
sbb
push
sub
xchg
inc
and
mov
xchg
jae
in
xor
in
es
icebp
pushf
mov
adc
and
dec
adc
lcall
popa
mov
mov
push
aad
dec
decb
ja
into
scas
xchg
jb
ljmp
ds
xlat
dec
arpl
int
adc
sbb
mov
loopne
mov
out
inc
les
dec
xlat
repnz
mov
das
xchg
dec
xor
mov
cmc
push
jo
pop
mov
fdivr
pop
hlt
scas
js
popa
ss
mov
inc
and
fisttps
pop
scas
stc
fimull
fstp
outsb
movsb
inc
imul
outsl
cs
cmpsl
lret
in
ficoms
imul
pop
sbb
push
xor
rclb
test
push
jns
enter
cmpsb
ja
add
fisubrl
xor
fwait
xchg
addr16
inc
inc
sbb
fadd
repz
into
je
ret
or
setae
inc
sti
jge
fs
imul
inc
xchg
hlt
mov
xor
add
or
stc
rcrl
jmp
jecxz
mov
loopne
sub
gs
or
ds
sti
dec
leave
cld
mov
pop
dec
push
fiaddl
test
pusha
call
leave
jns
mov
xchg
mov
lcall
cmp
xchg
fcmovnb
jbe
fidivrs
sbb
arpl
mov
push
jne
xchg
or
mov
mov
push
jle
adc
add
cs
lods
test
xlat
or
inc
vpackuswb
ds
xchg
into
xchg
repnz
loopne
sbb
sub
dec
cmp
out
or
out
ss
or
popa
lahf
cmp
aad
pusha
sbb
mov
xchg
cmp
lods
mov
arpl
adc
and
and
unpcklps
pop
dec
pop
sahf
test
or
leave
sub
js
pop
pop
in
mov
outsb
push
push
sub
xchg
dec
push
push
das
mov
loop
push
mov
jge
aad
divb
notb
daa
scas
pop
push
adc
pop
stos
fnstcw
and
dec
out
lcall
cmpsb
push
ss
scas
data16
shll
push
stc
jmp
jmp
imul
repnz
sub
sahf
lcall
cld
or
mov
mov
adc
lock
add
je
adcb
sbb
leave
push
decl
and
sub
sub
push
filds
cld
in
or
sbb
mov
pop
mov
call
daa
xchg
in
aaa
cmp
dec
stos
mov
cmp
mov
sarl
mov
cmp
mov
std
jbe
pop
pop
sub
xchg
int3
sub
lret
clc
bt
or
xchg
int3
pop
cwtl
mov
push
je
mov
loope
xchg
push
std
lods
repnz
add
push
sub
xlat
shr
adc
mov
inc
rcl
xchg
out
lods
into
out
imul
sub
je
xor
adc
ss
repnz
sbb
sbb
pusha
aas
into
insb
cmpsl
imul
cmp
aam
lods
add
repnz
vhsubpd
sti
fdivrs
in
sbbb
stos
ficoml
fsubrp
push
test
push
jle
inc
and
aam
jle
jne
loopne
pop
mov
sti
push
add
daa
sbb
sti
jo
xor
lcall
out
cmp
repnz
lret
adc
test
ret
push
jne
inc
xor
pop
dec
mov
pop
mov
cmp
test
xchg
rcrl
and
cmp
divl
idivl
in
xchg
push
sbb
pop
push
stos
cmc
ljmp
loop
lahf
cli
outsb
add
sub
push
push
shlb
ret
cltd
cmpsb
mov
inc
mov
stos
cmc
or
and
xchg
imul
jecxz
movsl
fiadds
lods
mov
cmp
in
fisubrs
fs
mov
add
jns
outsl
xchg
enter
and
jbe
pusha
aaa
aad
in
subl
imul
pop
rol
dec
into
cmp
shll
mov
mov
mov
mov
ret
sbb
stos
dec
repnz
dec
or
push
inc
mov
mov
stos
sbb
inc
scas
insb
das
leave
fisttpl
cld
mov
jnp
test
stos
mov
outsl
popa
mov
pop
outsb
insl
in
or
mov
jo
jbe
pop
xchg
sbb
sbb
mov
cmp
or
or
outsb
repz
and
and
dec
hlt
push
mov
aaa
sub
add
outsl
cmpsb
gs
pop
add
ljmp
mov
lods
data16
scas
cmp
lds
int3
pop
aaa
and
mov
dec
xor
lock
jge
xchg
test
cmp
pop
adc
or
shlb
inc
iret
xor
cs
adc
repnz
cmp
jns
or
mov
add
popf
addb
inc
repnz
xchg
adc
sarl
test
popa
adc
iret
add
mov
stos
xor
pop
repz
outsb
pop
imul
dec
mulb
push
dec
add
add
push
lods
push
pushf
cmp
push
xchg
in
aas
out
adcl
inc
rcrl
jb
mov
mull
inc
fwait
jns
lret
or
lods
jb
mov
push
pop
mov
dec
pop
imul
mov
sbb
insb
fsubs
les
addr16
xchg
stos
xor
pop
test
je
dec
inc
out
mov
mov
lea
push
cmp
push
lea
xchg
sbb
pop
je
loop
jo
call
pop
inc
pop
inc
lods
push
ror
dec
fldl2e
mov
push
fwait
jns
icebp
icebp
inc
sub
pop
and
mov
lock
call
jg
xlat
adc
xchg
repz
out
jle
cmp
jg
outsl
xor
mov
aaa
xchg
jmp
jle
or
jecxz
pop
pop
inc
jno
xchg
dec
push
and
mov
addr16
pusha
mov
cwtl
fisubl
std
xchg
push
repz
out
ror
or
outsl
or
mulb
cmp
imul
or
sbb
insb
hlt
stos
and
cmpsb
xchg
xor
movsb
mov
cmp
rorb
xor
lret
jnp
loope
popf
stc
xchg
pop
dec
xor
outsb
sbb
mov
icebp
testb
xlat
lcall
xchg
cmpsl
pop
int
mov
jl
inc
xor
and
pop
xchg
sbb
mov
inc
cltd
iret
enter
lods
push
test
mov
aad
pushf
push
ret
mov
popf
jb
sub
das
rorb
in
dec
roll
jno
mov
ret
mov
fs
push
inc
mov
add
divb
cmc
and
adc
and
test
lret
push
lods
xchg
aam
lea
enter
jae
sub
shrl
push
mov
mov
mov
gs
pop
pop
and
cmp
push
clc
aas
xchg
xor
ss
add
mov
mov
adc
inc
mov
pop
outsl
roll
mov
adcb
pop
mov
sbb
mov
in
aas
aas
dec
pushf
inc
or
das
repnz
lods
lods
dec
xchg
and
in
test
mov
rorb
fisubl
cmpsb
xor
pop
inc
data16
cmc
or
or
call
jno
adc
lea
mov
mov
push
loop
jo
aaa
test
out
xor
lods
les
in
cmp
cs
pop
rcr
mov
negl
push
add
ret
pop
pop
out
ret
in
mov
mov
mov
xor
daa
or
out
scas
loope
imul
addb
push
stos
xor
adc
jecxz
lds
in
jmp
lods
mov
arpl
lock
popa
into
repnz
jns
in
fisubrs
jbe
sbb
rorb
jle
outsl
insl
stc
adc
adc
cs
aam
adc
mov
out
jmp
pop
pop
jne
stos
arpl
pop
movsl
cmp
mov
lahf
aam
jg
negb
sbb
mov
push
sub
rcrl
lds
push
sbb
mov
mov
shll
add
ret
jbe
mov
adc
ror
dec
pop
out
je
and
push
mov
rolb
push
mov
mov
fsubr
shlb
cli
push
prefetch
shrl
sub
push
loope
aad
xlat
stos
in
jno
scas
leave
or
jbe
incb
lods
mov
mov
mov
iret
and
in
je
or
and
inc
subl
fisttps
jb
xchg
adc
or
loopne
cwtl
mov
dec
insb
jp
iret
add
aas
jo
js
mov
ret
rcr
pop
xchg
mov
leave
fisubrs
call
mov
xor
sti
push
mov
mov
andl
jae
js
js
inc
insb
out
icebp
popl
cmp
mov
shll
xchg
jne
jge
sbb
adc
icebp
jns
mov
jle
mov
int
or
aam
das
roll
arpl
jne
repz
pop
cmp
out
add
enter
insl
xor
jmp
movsb
adc
bound
dec
outsl
std
cmp
jecxz
and
push
lods
jecxz
mov
sti
add
inc
stc
idivl
fisttps
out
das
pop
adc
cmp
push
mov
mov
inc
push
movsb
js
xchg
mov
je
lret
mov
repnz
loopne
jmp
loop
push
or
fsub
mov
scas
lock
loopne
jb
rcrl
jno
addr16
stos
adc
add
sbb
add
in
ss
xlat
mov
fcompl
jg
jle
add
mov
xchg
subl
rol
xlat
sub
ds
test
mov
dec
ja
iret
pop
arpl
lea
cmp
arpl
and
adc
pusha
test
stc
mov
lahf
pop
pop
push
cmc
cmpsl
push
dec
or
sub
js
adc
xor
jo
push
mull
jle
scas
cmp
mov
push
loope
fs
add
mul
sub
jp
les
fldcw
jl
and
call
addl
add
fldenv
lret
push
in
cs
sbb
gs
dec
loope
mov
xor
int3
jbe,pn
roll
fcoms
push
sub
xchg
mov
or
int
inc
pop
push
cmp
js
sub
les
add
das
inc
ja
inc
pop
imul
cs
push
xor
sbbb
imul
jno
cmp
sub
iret
add
sbb
clc
adc
mov
scas
xchg
push
pop
inc
dec
jecxz
in
aaa
test
cmp
nop
mov
push
inc
pop
add
or
pop
and
mov
jl
sub
push
mov
jo
and
sub
jl
test
sub
pop
cld
pop
movsb
stc
dec
jnp
or
pushf
sar
mov
shr
dec
and
or
jne
adc
inc
stos
icebp
test
negb
jne
jecxz
pushfw
iret
fdivrl
popf
fstpt
sub
or
xor
push
loope
stos
xor
cmpsl
inc
jne
cmp
jb
adc
xchg
iret
jnp
aad
lock
insl
jb
lea
dec
mov
inc
xchg
adcb
out
pop
xor
addr16
xor
pushf
pop
mov
push
inc
pop
sbb
sub
xchg
mov
adc
addr16
mov
pushf
popf
data16
loope
xchg
mov
pop
xchg
sub
enter
xor
pusha
fisttps
xchg
xchg
mov
jno
mov
mov
outsl
xchg
mov
xor
inc
adc
fldcw
out
imul
bound
in
xchg
inc
iret
int3
mov
int3
sub
mov
mov
or
mov
imul
sbb
xor
lahf
jbe
xchg
pop
pop
sub
test
outsb
sbb
popf
mov
flds
xchg
daa
mov
xor
jl
push
or
xor
xor
ljmp
mov
lret
lcall
int3
enter
iret
xchg
fbld
adc
gs
ret
cltd
inc
cmp
jo
mov
jne
pop
jp
dec
sub
fs
or
cmpsb
pop
sbb
mov
sub
push
add
and
jmp
hlt
arpl
pop
or
add
cwtl
or
jl
js
je
or
sarb
aam
pop
cmp
lock
daa
mov
fcmove
dec
scas
inc
add
outsl
cmp
add
pop
arpl
movsl
xor
lds
add
or
call
xchg
sub
cltd
bndldx
test
inc
add
sub
inc
mov
sub
pop
iret
xchg
xor
dec
mov
loopne
mov
dec
insl
mov
pop
and
scas
insl
jnp
pop
adc
cwtl
repz
fiaddl
jmp
and
add
sbb
jno
mov
jecxz,pt
sbb
cmp
bound
inc
sub
mov
arpl
inc
dec
sub
xchg
inc
push
loop
pushf
pop
popf
inc
in
xchg
arpl
jge
jae
stos
adc
inc
dec
leave
or
push
sarb
in
cltd
mov
aam
cld
sti
inc
xor
imull
xor
ss
mov
pop
fisubs
gs
or
or
sub
push
and
aam
les
or
jp
shll
push
and
leave
push
aas
sub
and
inc
scas
in
popf
sti
push
sub
movsl
inc
mov
out
repnz
dec
ja
pop
pop
inc
inc
pop
pop
lret
ret
ljmp
icebp
imul
jle
fmul
pop
fnstcw
shl
iret
or
mov
jbe
aas
jg
imul
and
xor
lods
ds
enter
stos
into
push
inc
movb
adc
push
in
mov
cld
jmp
sbbb
push
jbe
aam
stos
mov
bound
mov
adc
mov
mov
sub
mov
movsb
cmp
mov
shll
dec
rcl
push
dec
stos
les
mov
lock
cmp
test
aas
ss
out
xchg
out
idivb
or
xchg
aaa
aas
movsb
out
and
push
jle
std
pop
popf
dec
inc
out
xchg
icebp
adc
mov
sub
sahf
sbb
or
xor
xor
mov
sbb
pop
mov
popa
jne
aaa
push
jle
mov
xchg
pop
scas
xchg
xchg
lods
js
push
ja
leave
leave
push
pop
lret
mov
xor
lds
or
in
sub
mov
xor
stc
lea
jne
pop
lret
cmp
fldcw
sbb
or
lretw
orb
test
push
cs
js
hlt
sub
mov
je
xchg
fs
jmp
or
or
loopne
add
aam
mov
xor
mov
in
adc
ljmp
xor
jmp
daa
pop
fwait
iret
pop
rol
push
jl
jbe
movb
or
cmp
mov
push
inc
lods
gs
inc
inc
mov
das
cmpsb
std
nop
nop
mov
jb
mov
lds
or
int
or
mov
and
adc
xor
or
xor
std
fimuls
flds
jno
xchg
ds
and
or
inc
dec
ds
xor
mov
loope
in
dec
cs
xchg
out
inc
sti
add
aaa
inc
mov
cmpsl
ret
cmpsl
push
cmp
sub
mov
jl
mov
je
jae
push
adc
jp
int3
jns
ds
sub
and
mov
daa
test
cmp
mov
dec
inc
out
xchg
and
or
popa
scas
ss
mov
outsb
xchg
sub
mov
adc
loopne
clc
aas
loope
mov
test
dec
imul
out
daa
fstpt
push
pop
adc
or
or
lcall
cwtl
xor
shrl
inc
add
mov
xchg
push
test
mov
in
loopne
cmpsb
das
sub
cmp
cmp
inc
pop
mov
cmp
divb
xlat
push
mov
pop
mov
mov
cmc
pop
xchg
std
dec
sub
mov
insl
popf
in
pop
push
push
dec
je
imul
adc
popf
je
or
hlt
adc
ret
cvttps2pi
lcall
push
sub
jle
pop
push
into
mov
je
mulb
stos
je
mov
inc
ss
lods
push
dec
lcall
dec
addl
mov
lods
test
loop
mov
aad
push
add
adc
sbb
sbbl
pop
insl
mov
loop
das
das
mov
flds
ds
inc
icebp
arpl
xor
out
mov
push
jl
or
xchg
xchg
lret
movsl
cmpsl
fcmovnbe
mov
inc
rorl
lds
xor
js
mov
sbbl
or
xchg
dec
inc
push
xchg
out
aaa
pop
jl
shll
aaa
adc
cwtl
fisubl
lods
std
loope
push
lret
adc
into
subb
dec
out
inc
inc
cltd
repnz
and
fdivl
jp
xchg
mov
mov
lods
jl
xchg
outsb
pop
movb
popf
lret
loope
xchg
cs
xor
fisttpl
ja
pop
into
enter
iret
mov
xor
mov
fisubl
push
pop
cmc
cmpsb
aam
mov
mov
loopne
iret
pop
mov
push
cmp
mov
mov
mov
enter
jge
aam
into
push
sbb
add
mov
jo
inc
sbb
mov
sarl
shlb
ret
jno
jmp
sbb
popf
inc
ret
adc
lock
imul
or
dec
incl
lea
mov
out
jmp
sti
aad
dec
insl
ja
aas
adc
movsl
pop
pushf
jmp
xor
gs
stos
mov
int
mov
insl
push
int
dec
inc
and
int
rcrl
jb
sbbl
jg
sbb
in
cmp
je
cmp
fistps
dec
xchg
ljmp
push
arpl
and
xor
orb
sahf
out
ret
stc
mov
in
cmp
mov
pop
xor
mov
push
in
rcrb
orl
sbbb
imul
xor
xchg
mov
sub
push
mov
pop
dec
sub
mov
or
ret
andl
jp
test
mov
push
push
jl
xchg
int
icebp
lahf
add
lds
xchg
ds
jmp
add
dec
inc
test
pusha
push
push
and
ret
push
sbb
jne
sub
mov
inc
jge
mov
push
test
push
fs
mov
mov
shlb
xor
mov
call
insl
and
push
pop
jno
iret
push
dec
jge
shr
inc
pop
dec
hlt
jns
or
repz
jae,pn
repz
cltd
adcb
mov
push
fnstsw
stos
ret
rclb
cmc
mov
push
sub
inc
cwtl
inc
iret
cmc
cltd
cmpsb
add
repnz
jns
pop
cmpsl
xor
lcall
and
stc
cmp
imul
mov
shrb
jle
cmc
bound
mov
outsb
cli
cmc
dec
insb
shll
cmpsl
fcoms
mov
adc
pop
sub
data16
add
daa
mov
movsl
and
movsl
inc
cli
cmp
ljmp
dec
push
xchg
rolb
lods
jno
adc
jmp
sub
cmp
ret
push
mov
add
sbb
lds
xchg
sti
negl
cs
pop
adc
jecxz
or
mov
stc
pop
sub
dec
data16
jl
pop
lods
add
test
or
into
inc
push
jmp
into
out
jecxz
lds
push
nop
pop
pop
mov
adc
enter
xor
movsl
adc
and
xchg
dec
jmp
pop
pop
daa
cmc
jge
xchg
mov
sbb
jno
inc
mov
sub
jp
ret
repnz
xchg
movsl
ljmp
dec
push
or
lret
lods
mov
sbb
pop
loope
imul
add
imul
xorl
cmpb
dec
add
aam
gs
push
or
adc
aas
push
cmpsb
inc
cmpsb
shll
push
test
les
cmp
xchg
stc
sub
mov
inc
add
cmp
mov
in
mov
and
aas
cld
dec
das
xchg
pop
arpl
sbb
cmpsl
iret
fnsave
mov
cmpsb
jns
or
or
or
push
arpl
push
cmpsl
insb
ret
and
mov
jo
sub
pusha
shl
or
stos
xor
out
dec
addb
sub
xchg
nop
fidivs
mov
jne
std
jl
fnstsw
icebp
imul
push
test
mov
dec
mov
enter
ret
inc
leave
mov
adc
mov
pop
lea
jecxz
and
shrb
xor
push
push
cmc
and
adc
jne
push
mov
hlt
sub
mov
jns
sbb
pop
mov
imul
cs
cmp
push
std
cmp
pop
xchg
pop
xchg
loop
pop
jae
mov
adc
adc
iret
repnz
push
test
xchg
lret
insb
dec
or
or
jle
jb
mov
fisubl
rolb
fiaddl
shrl
sub
mov
mov
test
mov
dec
aaa
and
out
mov
jns
jb
fstps
xor
mov
test
mov
xchg
sbb
mov
int3
fdivrl
jbe
in
cmpsb
rcrl
popa
aad
inc
ret
out
push
fs
insl
hlt
adc
jmp
mov
pop
mov
sub
test
arpl
pusha
fstpt
xlat
fdivs
nop
mov
pop
mov
pop
xchg
pusha
mov
and
jge,pn
mov
and
lret
les
stos
fs
in
jbe
inc
mov
jns
dec
mov
repnz
imul
or
es
cmpsl
xorl
movsl
mov
movsl
push
gs
cmp
insb
leave
in
lret
mov
or
psubw
pop
mov
push
jne
lea
xchg
movb
push
and
sbb
fwait
pop
subb
sub
bnd
or
ja
xchg
ds
push
mov
icebp
aad
xor
push
pop
jnp
fldl
mov
pop
rolb
mov
add
imul
adc
fistpll
filds
xchg
rcrb
sbb
xor
push
inc
mov
add
push
loope
push
push
pop
and
leave
addr16
mov
add
clc
mov
int3
sub
ficoml
es
jge
ret
jbe
mov
hlt
aas
xchg
mov
mulb
out
fnstenv
aas
fwait
sbb
test
out
pushf
xchg
jmp
clc
jecxz
ret
inc
les
push
clc
lea
shlb
cltd
adc
push
das
inc
sbb
cmp
and
add
and
sbb
push
and
ja
cltd
xchg
jcxz
dec
test
ja
xor
loope
adc
inc
jb
mov
jne
mov
inc
ret
jns
and
int
jecxz
out
or
and
mov
cld
cmp
call
pop
mov
or
rcrl
xchg
sbb
xchg
cmp
add
add
adc
push
es
ljmp
and
sbb
stos
jo,pn
jns
leave
ss
push
xchg
movsl
decl
arpl
bound
inc
in
jbe
jp
enter
jnp
push
sub
cwtl
lahf
outsb
stos
pop
aas
out
xlat
jle
xor
mov
dec
pop
imulb
loop
sbb
cmpl
loopne
or
cmp
mov
sbb
xchg
out
pop
out
push
sbb
and
aad
adc
call
inc
sub
mov
dec
clc
inc
ljmp
mov
add
pop
adc
adcb
mov
out
cmc
sub
ret
inc
and
xchg
sub
scas
sbb
and
cmc
mov
mov
repz
cmp
fisttps
jl
int3
rcr
xchg
push
cmp
jae
enter
mov
dec
scas
sub
icebp
movsb
out
insb
mov
xor
clc
and
icebp
imul
pop
xlat
jno
pusha
hlt
or
and
sub
cmp
add
loope
inc
dec
jl
shlb
push
loopne
pushl
dec
loope
test
es
push
lahf
mov
cmp
mov
sahf
mov
testl
mov
aam
in
lods
nop
dec
inc
loop
aad
pop
insb
lcall
add
push
inc
adc
adc
mov
imul
lods
push
cmpsl
ds
add
xor
sub
cmpsb
in
mov
xchg
out
es
inc
jle
xchg
fstps
into
sub
add
xchg
ret
add
xchg
add
push
in
xlat
les
insb
push
movsb
sbb
push
out
mov
in
mov
xor
push
out
fsubrl
jle
rcl
mov
ficomps
jle
das
sub
mov
fimull
ljmp
stc
loop
push
dec
int3
sbb
adc
jl
enter
jbe
loop
das
xchg
cltd
outsl
dec
pop
data16
stos
or
movsl
jg
pop
jg
into
dec
mov
cmovb
inc
shlb
in
mov
push
push
lods
gs
xchg
mov
movsl
cmp
push
and
mov
andb
push
xchg
xor
leave
inc
rcr
adc
push
out
das
test
dec
mov
movsb
lods
outsl
add
cltd
cwtl
dec
orb
clc
xchg
push
mov
sub
enter
xchg
ds
pop
testb
loop
push
inc
enter
mov
push
dec
sub
imul
inc
push
dec
and
loopne
or
ljmp
jns
dec
cli
lret
pushf
and
mov
cmp
xchg
loopne
mov
sbb
outsl
mov
bound
and
cs
cld
aaa
sub
ljmp
pop
cwtl
rorl
ljmp
mov
and
repz
mov
jne
loopne
jmp
jnp
and
int3
mov
mov
loope
jb
cmpsb
xchg
push
sbb
push
jns
mov
mulb
lahf
add
jecxz
mov
inc
push
mov
lea
add
xchg
xchg
mov
dec
mov
fidivs
fmull
jnp
mov
fisubrl
into
xchg
dec
loopne
mov
jne
out
ss
sub
in
js
and
ja
scas
xchg
pop
lock
daa
out
int3
sbb
outsb
popf
scas
push
pusha
xchg
adc
test
cmp
ds
jg
push
pop
dec
repnz
lea
mov
xchg
daa
mov
cmp
rcrb
ljmp
cmc
mov
out
add
in
sti
add
cli
addr16
movsb
mov
xchg
cmp
je
shll
cmp
sbb
mov
repnz
cmp
fwait
dec
pop
sub
ret
cwtl
ljmp
push
mov
cwtl
out
inc
cmpsl
jns
add
cltd
mov
aad
dec
les
cld
mov
lods
aaa
jmp
jl
clc
imul
ss
xor
pop
mov
es
mov
jmp
int
inc
push
lret
sbbb
ret
sub
inc
in
fisttpll
adc
ja
adc
rolb
ja
mov
add
push
push
daa
adc
jle
repz
nop
xchg
push
in
fdivl
gs
xor
insl
jo
daa
leave
int
xor
test
das
mov
inc
inc
cmp
and
stc
xlat
loopne
repnz
pop
test
fstl
popa
mov
sub
xor
movsb
cld
pushf
sub
add
cmpsb
add
aas
pop
cwtl
fildl
cmp
mov
fistps
xchg
pop
inc
xor
fidivl
add
in
xchg
es
mov
push
ret
mov
fiadds
mov
fildl
cmp
inc
stos
in
out
lock
out
es
fwait
mov
sbb
sub
fmull
mov
adc
mov
call
sbb
sub
sarb
sub
pop
jns
pushf
cmp
pusha
adc
shrb
mov
xor
pop
pop
pop
ljmp
shl
xor
push
dec
iret
mov
ds
xchg
xor
xchg
pushf
cmpsb
out
push
sub
fidivl
popf
jne
add
in
dec
mulb
inc
loopne
in
aam
xorb
inc
sbb
shlb
jl
clc
aad
std
je
pop
sbb
cmp
inc
sub
adc
hlt
out
push
test
jne
sbb
fucomi
pusha
idivl
mov
jmp
xor
xor
add
js
inc
fsubrp
cmp
mov
or
adc
xchg
add
stc
mov
mul
insb
pop
cmp
data16
shl
dec
nop
jno
jecxz
fmul
in
icebp
mov
test
sub
je
js
stos
and
pop
mov
xchg
fs
jne
les
inc
stc
imul
sbbb
add
ficoms
jno
popa
popa
xor
pop
loope
pop
int
sahf
aad
cs
fimuls
fcmove
cmp
dec
cmp
sub
pop
cmc
inc
mov
cmp
mov
mov
cmpsb
sti
popa
xchg
fldenv
fildl
scas
jle
scas
repz
inc
inc
loope
pop
scas
add
outsw
sub
fadds
mov
mov
push
repz
jl
les
adc
push
xchg
dec
les
es
mov
or
or
enter
nop
pushf
addr16
fwait
lret
cwtl
pusha
or
adc
stc
dec
popa
mov
sub
ss
push
loopne
fidivrl
jge
outsb
sub
xor
icebp
iret
pop
sbb
mov
push
iret
filds
std
aam
add
and
les
and
adc
jmp
jo,pt
call
je
mov
or
xchg
shl
ljmp
and
xchg
es
sarl
mov
inc
dec
inc
mov
dec
dec
jne
addl
repnz
jns
sbb
sahf
push
jns
and
pop
cwtl
mov
sbb
fcompl
xor
xchg
push
das
mov
push
ret
pop
pop
sub
add
cmp
pop
daa
out
dec
xor
movsb
insb
sbb
mov
pop
and
pop
xchg
jb
dec
iret
in
inc
data16
or
jmp
xchg
push
scas
and
dec
test
imul
adc
jb
add
mov
xchg
aad
cmpsl
or
jne
jno
in
fwait
popa
popa
jnp
repnz
mov
fsubp
lock
pop
ljmp
mov
xor
mov
gs
push
loopne
and
xor
cltd
out
xchg
cli
cltd
dec
push
push
lods
dec
stos
imul
sub
in
push
and
lret
jg
sub
jne
pop
sbb
jg
fiadds
mov
stos
pop
or
push
arpl
inc
lock
pop
mov
push
sbb
mov
aam
push
mov
add
fs
cli
lock
push
inc
sub
and
mov
inc
mov
loop
xor
es
push
adc
cmp
cwtl
mov
test
stc
sub
cmpsl
in
cmp
push
dec
mov
sti
mov
not
jb
std
stc
cmp
and
mov
add
mov
inc
es
rclb
arpl
push
lock
dec
sti
call
imul
test
lcall
dec
outsl
adc
xlat
and
mov
inc
lds
cmp
in
dec
sbb
mov
mov
xchg
lcall
adc
adc
rdrand
jne
pop
fadd
jno
in
sub
mov
and
inc
sub
xlat
lock
sbb
andl
out
inc
stos
stos
cltd
push
sarl
test
cmp
subl
movsb
mov
dec
xchg
sub
sahf
jno
ror
rclb
sbb
and
aam
into
test
orl
xchg
xchg
mov
add
mov
inc
lods
add
sarl
push
lods
cltd
push
cmpsb
dec
mov
mov
rcrb
mov
xchg
mov
out
xor
push
sub
jo
push
test
sbb
or
inc
xor
clc
mov
pop
stos
dec
xchg
pusha
inc
adc
add
mov
sub
mov
jle
lea
les
push
stos
ret
clc
cmp
pushf
jp
fldl
arpl
lret
add
cmp
repz
jp
sbb
sti
add
or
push
xchg
sbb
push
int
lcall
leave
xchg
mov
repz
hlt
or
mov
jle
sub
or
lock
add
fwait
ds
cltd
jnp
dec
xchg
dec
cmc
out
mov
dec
jecxz
in
in
aam
and
inc
sub
rcrb
and
dec
outsb
lds
lods
xor
mov
js
mov
lods
xchg
push
out
inc
mov
call
clc
push
into
clc
lock
sbbb
pop
popa
xlat
loopne
leave
pop
add
mov
dec
sbb
adcl
pushf
sub
push
pop
lea
mov
xor
stos
adc
lods
and
bnd
lock
ret
in
stos
inc
lea
lea
insb
movsl
mov
xchg
sbbb
shl
cltd
lret
cmpsb
in
scas
inc
push
mov
es
outsb
inc
xor
shll
sti
das
mov
dec
dec
fidivs
cmpsb
or
in
emms
cmp
arpl
outsl
jb
jl
push
icebp
mov
lods
fstp
mov
lods
clc
rcrl
add
sti
pop
mov
sub
cmp
adc
repnz
cmp
sbb
fsts
pusha
es
movsb
inc
rcrb
das
repnz
and
in
xor
xchg
xor
sbb
mov
outsl
cmpsl
xchg
lea
hlt
jmp
aam
inc
xchg
push
inc
push
out
or
xor
inc
cmp
scas
sbbl
bnd
dec
stos
int
lea
sub
fadd
adcb
cmpb
xchg
mov
jo
cmp
out
sbb
mov
daa
push
nop
jl
adc
mov
adc
push
popa
cmp
ret
test
je
jge
insl
lcall
xor
dec
movsl
mov
jle
dec
addr16
icebp
addl
dec
mov
das
dec
dec
push
rol
roll
mov
pop
mov
xchg
int3
fdivrl
jg
data16
mov
pop
test
jmp
mov
fsubr
mov
fmull
mov
mov
and
dec
in
push
jnp
adc
out
fcoms
fcomip
loopne
test
sub
pop
mov
adc
pop
ret
mov
shl
cmpsl
int3
out
cwtl
mov
addr16
lock
aaa
pusha
dec
cmp
divl
sahf
mov
add
ret
arpl
push
loop
xchg
iret
xchg
aas
adc
jnp
add
jg
and
pop
dec
inc
enter
adc
lods
scas
aaa
mul
aas
orb
dec
pop
cmp
fldl
xor
pop
jb
clc
ret
lods
sub
and
orb
sub
insl
cltd
cli
sub
mov
cltd
push
inc
and
pop
mov
shlb
mov
nop
add
fisubl
push
xor
xchg
push
mull
in
xlat
call
add
push
adc
fwait
or
daa
fnstenv
and
out
leave
in
cli
jmp
popf
inc
rolb
roll
in
inc
movswl
nop
cli
jp
pop
mov
mov
xchg
shl
push
lret
jb
push
lea
jl
dec
push
pop
mov
mov
icebp
stos
push
out
jle
int3
daa
rolb
rcrb
add
aam
dec
lods
xor
cmp
or
mov
push
push
popf
ret
or
fstpl
fldt
in
xchg
or
cmp
cltd
out
rclb
aaa
push
add
pusha
testl
repz
loop
inc
jg
dec
inc
mov
jp
mov
fwait
cmp
pop
pop
mov
lret
sti
popa
js
mov
jne
test
and
add
xchg
pop
js
cwtl
jge
xchg
scas
lcall
fidivrl
loop
loop
cmp
and
test
insb
out
jg
push
lods
or
out
test
jl
sbb
mov
cmp
mov
xor
ljmp
mov
jnp
sbb
pushf
pop
pop
lock
enter
sti
adc
ret
mov
movsl
into
outsl
dec
jle
xchg
mov
adc
pop
dec
in
mov
and
roll
mov
mov
inc
and
lret
pop
pop
pop
movsl
mov
push
sbb
loop
imul
and
push
repz
mov
and
insb
cmpsb
jbe
pop
sbb
cmp
and
test
lret
inc
loopne
cmp
push
aam
jmp
pop
mov
out
and
lahf
repnz
mulb
jecxz
mov
lcall
data16
mov
add
leave
mov
fnstsw
push
adc
xlat
xor
mov
add
ficoml
sub
and
ljmp
sub
jns
test
xchg
enter
mov
andl
cmp
sahf
je
xchg
aaa
mov
insb
jl
shrb
fsub
mov
or
fmul
lods
pop
je
and
loop
mov
dec
xlat
sub
outsl
inc
lret
mov
add
jno
daa
sub
sub
or
or
popa
cmp
push
pusha
pop
ss
lret
fldcw
mov
mov
aaa
pusha
pop
pop
push
mov
jl
loope
aad
imulb
push
sub
adc
std
adc
fdiv
cltd
pop
out
push
mov
fistpll
push
aad
dec
sub
in
int
add
dec
subl
pop
into
adc
nop
sbb
std
pop
pop
cltd
jb
out
fisubl
mov
movsl
lret
and
mov
ret
add
mov
mov
enter
add
dec
sub
outsb
mov
cmpb
in
cli
mov
inc
push
pop
and
lods
mov
lret
test
mov
xor
sbb
testl
jae
add
pop
cmp
xlat
int3
mov
scas
jnp
mov
push
dec
int3
mov
pop
mov
cltd
mov
out
jo
movsl
shrb
jbe
movsl
loopne
jnp
cli
adc
xchg
mov
inc
into
aam
dec
loop
hlt
mov
mov
sbb
and
loope
mov
mov
add
je
testb
pop
ja
xchg
xor
in
or
out
or
inc
push
dec
outsl
xor
outsl
jo
pop
shll
jmp
xor
or
bnd
into
movsl
or
sub
lcall
cmpsl
lods
ds
inc
dec
add
into
lea
push
mov
mov
filds
and
push
dec
out
ds
jp
cli
xchg
xchg
int3
dec
mov
mov
cmpl
xchg
bound
or
inc
sub
jle
xchg
xchg
inc
jne
out
fidivl
push
mov
insb
mov
std
hlt
testb
sahf
stos
andl
pop
add
add
or
insb
and
sbb
mulb
sbb
mov
pop
pop
push
mov
in
mov
add
mov
shll
fs
xchg
xchg
movq
sbb
je
aam
and
mov
fwait
push
and
subb
pop
js
and
cmp
jmp
xchg
mov
leave
ror
pop
or
xorb
notl
jb
ret
test
mov
out
sub
fdivr
push
cmp
neg
stc
mov
push
adc
inc
xchg
inc
enter
stos
jmp
fsts
cmpsl
inc
cld
add
hlt
mov
xchg
sahf
push
pop
int3
lods
xor
cmp
cmp
popa
adc
stos
test
js
iret
lahf
fldenv
mov
lret
hlt
lods
outsb
or
sbb
cmpsb
mov
imul
sbb
pushf
jmp
mov
test
mov
or
rorb
sbb
add
daa
mov
ss
cmp
mov
adc
and
nop
or
pop
mov
xor
adc
jl
inc
imul
inc
pop
mov
xor
lock
cmp
push
lea
jbe
xor
adc
pop
mov
imul
or
loope
shlb
pop
sub
adc
rorb
jge
popf
lods
push
scas
das
cmpsl
pop
xor
ret
fsub
cld
push
cs
cmp
loopne
and
pop
addr16
jg
push
xor
and
scas
cld
cwtl
dec
int3
mov
xchg
mov
rol
lea
sbb
add
mov
and
inc
and
push
or
adc
jle
lock
ds
pop
sub
sub
jbe
call
js
sub
jle
stos
gs
test
les
ds
pop
pop
jae,pt
in
enter
jo
lods
dec
xchg
jge
jbe
adc
out
xrelease
mov
jb
jne
sub
sahf
js
xchg
dec
or
adc
test
xchg
pushf
mov
aaa
pushf
xor
ror
and
add
dec
aam
cli
imul
mov
xchg
and
jbe
int3
or
mov
sub
push
aaa
lcall
dec
sub
dec
ss
repz
add
outsb
test
cmpsb
imul
xchg
lea
adc
jne
pop
fnstenv
xor
je
repz
dec
cltd
cmpsb
movd
addr16
icebp
push
mov
or
mov
stc
xchg
cmp
inc
xor
icebp
sbb
scas
arpl
and
daa
jo
add
jne
stos
xchg
xchg
xchg
cmc
pop
sahf
dec
arpl
fldl
pop
sbb
ja
int3
into
neg
in
fdivs
cli
insb
dec
pop
xchg
adc
sub
push
dec
stos
aaa
lea
push
jno
and
mov
adc
sub
sbb
adc
andl
cs
sub
or
dec
and
add
cmp
sub
sti
loop
loop
xchg
jl
nop
cmp
fcoml
mov
sbb
pop
inc
jecxz
dec
mov
jno
inc
xor
shrl
repz
imul
cs
jbe
sbb
xor
mov
dec
mov
jp
pop
out
mov
and
orb
rol
in
stos
mov
je
stc
xchg
cmp
add
cld
push
jg
add
mov
adc
sbb
mov
dec
mov
pop
adc
inc
xchg
in
flds
or
in
add
adc
cmpb
loop
pop
mov
xor
fldcw
test
lds
jae
cli
lahf
adc
sarl
mov
mov
pop
imul
loopne
mov
and
add
jns
sbbb
popf
xor
adc
in
fadd
popf
iret
mov
mov
xchg
ss
loopne
adc
cmp
lahf
inc
aas
mov
lcall
xchg
dec
push
loopne
daa
test
pushf
andl
xor
pop
adc
insb
push
push
int3
xlat
imul
push
in
jle
push
add
xchg
push
add
jae
xor
subb
enter
xlat
pop
mov
fcom
jbe
icebp
sub
insl
sbb
dec
sub
cmpsl
sub
inc
test
fidivs
aam
mov
xor
xchg
icebp
sti
push
jns
push
shr
or
call
iret
and
mov
mov
cli
sar
pushf
and
xchg
or
cwtl
cmpsl
aas
cmp
jp
mov
jl
jmp
and
push
pop
xchg
pop
cld
jg
addb
mov
dec
add
xor
inc
and
sahf
movsl
and
jp
bound
xchg
ja
push
cwtl
ficoms
add
lret
ss
mov
mov
cltd
das
jo
fsubrs
inc
outsl
jnp
inc
adc
loope
repnz
fcoml
sbb
in
xor
in
loope
and
mov
or
xorb
dec
clc
movsl
addr16
jge
popf
mov
adc
jno
insl
int3
scas
xchg
sbb
out
mov
call
lods
lcall
push
mov
xor
je
inc
sub
stc
cmp
add
fistl
fxtract
into
fs
arpl
insb
push
cld
jne
insl
adc
push
jns
jg
dec
xor
dec
sahf
lret
or
je
and
mov
adc
popf
dec
mov
js
jb
daa
std
mov
inc
sub
iret
cmpsb
add
push
dec
lahf
mov
inc
loopne
mov
or
inc
inc
jmp
pop
cmp
arpl
stos
xchg
into
imull
aam
adc
xor
loopne
or
shl
add
mov
stc
jb
push
testl
sub
mov
xlat
jecxz
mov
jmp
dec
xchg
pop
int
lea
pop
push
test
sub
sarl
ja
pop
mov
aam
mov
cmc
push
aas
jle
dec
sahf
sbb
pop
push
mov
lock
mov
imul
call
movsb
sahf
mov
xchg
push
xor
lret
mov
inc
cmp
dec
rorb
nop
int3
add
dec
ret
fsubr
lods
adc
testb
bound
and
loope
or
cmp
sbb
mov
and
xor
dec
pushl
aam
mov
lret
dec
in
mov
inc
loopne
fnstsw
pop
cmp
cmpsb
cltd
inc
sbb
xor
cmp
shlb
mov
dec
push
loop
push
lcall
push
testb
fwait
imul
mov
pop
xchg
lahf
cs
pop
sub
icebp
lcall
pop
xchg
adc
sbb
cld
sbb
nop
or
ret
enter
sbb
cmp
mov
idivb
sub
incl
adcl
andb
int
mov
lock
adc
xor
mov
xor
rorl
scas
xchg
mov
lahf
or
inc
int3
jo
bound
mov
push
pop
jg
nop
push
stc
pop
cli
and
daa
incl
rcll
jl
out
pop
push
mov
mov
daa
in
jl
sub
sub
add
scas
movsb
in
ds
int
add
shlb
pop
sub
sqrtps
popa
repnz
mov
fistpl
insl
addr16
cmp
iret
insb
movsl
pop
mov
int3
fs
scas
mov
outsb
frstor
sub
loopne
mov
mov
add
sub
pop
scas
inc
sub
or
pop
cmp
dec
jmp
mov
lcall
sbb
jl
cmpsl
ss
inc
test
aam
enter
clc
lea
pop
cmp
adc
pop
mov
adc
scas
mov
lods
stc
xchg
fisubl
cmp
inc
sub
mov
pop
jp
std
lock
inc
mov
inc
mov
fldenv
outsl
jae
out
or
rolb
stc
xor
add
add
fidivs
and
fisubrs
xchg
leave
cs
pop
add
popl
xor
jl
outsl
cmp
out
cmp
ret
jle
mov
insl
adc
mov
aaa
add
mov
scas
push
mov
imul
mov
fldcw
lods
inc
xor
mov
dec
fistps
pop
lods
add
outsl
cld
and
in
jae
xchg
cli
xchg
mov
dec
pop
jae
cmp
inc
insb
cwtl
xchg
fisttpll
and
in
daa
mov
or
cmpb
mov
push
inc
repz
or
enter
pop
imul
mov
inc
xchg
sbb
imul
rcrb
xchg
mov
enter
nop
sbb
arpl
jg
icebp
lahf
pop
call
xchg
fidivs
or
movsb
loopne
cmp
sbbl
rcr
push
movsb
mov
imul
xchg
xchg
sbb
rclb
shll
push
ljmp
pop
mov
xchg
lret
addr16
sbb
cmp
cmp
pop
cmpsb
adc
jmp
sub
int3
loope
adc
jo
orl
cmc
scas
sub
cmp
scas
ds
pushl
pushf
sbbl
push
push
add
xor
mov
js
pop
jp,pn
stos
imul
fwait
dec
ret
fwait
movsb
sbb
lock
inc
xchg
shl
gs
mov
mul
aam
into
jp
push
xlat
push
outsb
rolb
lahf
fdivr
bound
xchg
daa
xor
les
jnp
dec
shlb
dec
mov
inc
data16
inc
fistl
into
jae
popa
jp
dec
sahf
add
sub
pop
out
push
lret
add
iret
push
out
push
bound
gs
xorb
mov
ret
adc
cwtl
mov
stos
mov
jmp
das
and
int3
in
mov
push
dec
shl
xor
xorl
imul
add
pop
stc
imul
dec
push
pop
mov
sbb
jecxz
inc
fwait
out
imul
shl
pop
push
and
fst
and
adc
push
jecxz
and
and
dec
and
push
mov
addr16
or
push
inc
sbb
add
jnp
imul
jns
js
pop
loop
push
fidivrl
sub
mov
adc
aas
pop
repz
outsb
mov
pop
pusha
lcall
into
cmp
jl
mov
dec
subb
sub
mov
add
jecxz
pop
into
out
into
loopne
enter
xchg
inc
add
mov
and
pop
add
mov
xor
lods
test
mov
mov
mov
in
outsl
inc
rclb
das
sti
or
lods
ss
aas
iret
clc
cmpsb
cltd
fistps
cld
sbb
sbb
and
jge
and
fisubrl
testb
adc
lahf
add
ret
repnz
pop
cltd
add
std
mov
push
cmp
mov
scas
call
push
into
sub
cmc
add
jl
cmpsl
fbstp
mov
xlat
lahf
sub
lret
mov
mov
cmc
lds
addr16
insl
xchg
dec
xor
test
scas
cmp
cmp
jg
arpl
jl
js
aas
adc
cmp
repz
iret
and
movsl
sarl
dec
pop
call
fists
xchg
pushf
aam
ja
dec
dec
enter
xchg
mov
or
mov
inc
adc
inc
enter
jp
clc
loopne
dec
xchg
xchg
leave
sbb
call
xor
imul
test
das
repz
jb
fisubl
pop
mov
jns
dec
mov
pop
and
std
xchg
arpl
lods
jno
jge
dec
xchg
mov
lcall
mov
xlat
push
push
imul
pop
xor
aaa
jg
movb
or
cmc
in
enter
insl
and
mov
sahf
in
sbbl
aam
clc
mull
add
mov
cmp
loope
mov
adc
mov
test
ja
inc
loopne
dec
xchg
ja
jae
sub
adc
ret
xchg
lods
imul
push
aam
sbb
fs
lods
push
add
add
int
or
in
dec
and
sub
xor
or
sub
sub
xor
mov
adc
xchg
bound
push
push
jle
push
mov
or
cmpsb
pop
cli
addr16
testb
rcll
mov
xchg
inc
in
dec
stos
aas
cmp
xlat
push
inc
and
fidivrl
xchg
cmp
push
movq
cmp
mov
into
je
lea
or
cmpsl
jecxz
cmp
pushf
push
lods
or
in
sbb
jecxz
adc
jo
mov
rep
ds
add
sysenter
and
inc
lahf
mov
pop
pop
mov
sti
in
pop
xor
xor
jp
mov
pop
and
aaa
mov
movsb
sub
dec
sbb
sbb
lea
xor
add
xchg
incb
mov
xchg
sbbb
insl
hlt
or
inc
ret
pop
adc
sub
flds
add
push
subl
scas
jae
popf
jns
push
lret
sbbl
push
popf
fidivrs
cmp
sbb
inc
fwait
pop
adc
jne
jg
mov
fisubl
adc
out
das
lret
xchg
rcrb
xor
dec
xchg
dec
flds
or
mov
cmp
push
cltd
xchg
dec
push
jae
mov
pop
sub
pop
or
jnp
mov
xchg
std
iret
cmp
or
out
lcall
or
sub
mov
leave
daa
test
and
mov
inc
mov
and
popa
push
mov
pop
push
imulb
dec
xor
add
hlt
xchg
test
push
xchg
mov
and
call
fstps
pop
cmp
data16
or
adc
inc
cli
cmp
mov
jno
sub
cmp
int3
sbb
xchg
pusha
outsb
mov
popa
pop
ret
lret
adc
test
lahf
mov
jp
stos
adc
adc
mov
jae
in
adc
mov
push
adc
jmp
jge
xor
sbb
lret
scas
dec
jge
push
cs
push
scas
out
sbb
mov
lahf
mov
lods
xlat
jne
mov
and
pop
and
cmpsl
ret
int3
in
out
pop
dec
stos
stc
test
ja
pusha
mov
sub
popf
push
or
jo
ja
xor
cld
imul
outsl
das
dec
cmp
out
dec
mov
mov
and
loop
xchg
into
mov
dec
xchg
fxch
dec
dec
ja
xchg
mov
repz
enter
sub
and
push
adc
shll
inc
adc
mov
test
addl
fcomp
sbb
shr
test
cltd
popa
push
inc
add
xchg
cltd
jmp
xor
and
and
loope
lea
mov
fdivr
cld
jne
mov
inc
or
inc
mov
shrb
pop
mov
addb
sub
sbb
push
shlb
or
outsb
xor
sbb
cmp
iret
shll
sub
push
mov
mov
jo
nop
jnp
xchg
int
fs
mov
clc
std
pushf
lret
sbb
cwtl
inc
and
inc
mov
jge
cld
lcall
sub
jno
aad
pop
jns
pop
add
rol
popa
lret
mov
mov
in
cmpsb
pusha
sti
imul
pop
dec
adc
mov
pushf
cli
lcall
mov
sbb
jl
inc
fwait
and
test
cmpsl
ret
sahf
push
stos
ret
pop
sbb
add
ret
into
push
mov
sub
sub
ret
mov
and
push
add
rcrb
enter
imul
xlat
cmp
or
mov
loop
test
lret
stos
aas
mov
inc
arpl
mov
jb
mov
mov
outsl
mov
inc
stos
cmp
xchg
cltd
xchg
adc
stc
adc
lods
xchg
sub
cmp
rcll
lcall
xchg
jns
pop
mov
call
sti
rcrl
inc
scas
jmp
dec
mov
je
pop
mov
int
fwait
stos
les
sbb
push
mov
hlt
mov
aaa
or
xchg
popf
das
cs
lock
jle
or
or
test
leave
adc
or
xchg
xchg
sbb
rcll
or
bound
iret
lods
popa
lret
add
test
dec
pop
push
dec
imul
cwtl
mov
daa
lea
mov
sahf
mov
dec
xor
test
or
shlb
push
sub
clc
and
add
xchg
rcrl
push
bound
imul
jnp
mov
xor
xchg
out
push
push
jae
xor
mov
dec
ret
out
fnstcw
lea
push
pop
jnp
das
push
addr16
dec
aam
test
adc
adc
aaa
sbb
xor
mov
jp
adc
test
sbb
scas
xchg
push
cmp
dec
pop
sbb
dec
arpl
cmpsl
clc
es
adc
int3
out
pop
shrb
and
std
adc
cmp
pusha
aaa
aad
loop
ljmp
add
loopne
nop
adc
imull
inc
aaa
fldt
dec
and
mov
dec
hlt
pop
out
popa
cld
out
call
lahf
and
sbb
sub
fbstp
or
ljmp
cs
mov
xor
add
ret
in
outsb
out
imull
outsb
or
test
xor
or
pop
stos
add
xchg
inc
cmpsl
lods
in
aas
xchg
mov
movsl
pop
call
jne
or
mov
pavgb
adc
gs
scas
shl
mov
pop
add
repz
xchg
es
mov
xorb
dec
test
sbb
xchg
jmp
stos
decb
mov
mov
pop
inc
adc
lods
mulb
push
subl
ficoms
mov
fdivl
fstp
in
lods
loope
pop
and
icebp
cmp
push
adc
cltd
adcl
test
sahf
jp
in
inc
mov
insb
ret
or
mov
or
stos
dec
or
push
stos
shlb
div
jge
mov
je
or
xor
pop
clc
daa
pop
and
pop
sub
cmp
xchg
push
pop
push
sbb
pop
add
mov
mov
xchg
ljmp
lods
mov
in
push
xor
jl
out
int3
adc
push
test
inc
dec
ret
jne
cmp
lret
das
xchg
jb
cmp
aas
pushf
les
movsl
pop
rcrb
push
inc
mov
sub
ss
mov
fstps
les
int
gs
dec
xor
enter
and
bound
add
xchg
xchg
cmpsl
jp
cltd
pop
and
jo
movsl
jne
lret
pusha
sti
fs
cmp
mov
lods
into
in
jb
cmp
jno
mov
add
pop
lods
cmc
lret
notl
test
sub
jle
fsubp
pop
std
or
test
dec
jle
cmpb
jecxz
mov
ret
je
dec
push
mov
test
pop
enter
ss
xor
into
loop
stos
insb
lea
mov
xorb
mov
insb
fwait
mov
xor
sub
nop
mov
repz
jo
rorb
jle
mov
add
mov
aam
mov
orb
xor
pop
movsl
aad
push
lahf
mov
negb
and
fwait
adc
mov
dec
and
loop
adc
xor
lods
lcall
lea
dec
dec
pop
arpl
jmp
adc
sub
popa
push
les
xchg
add
or
inc
add
or
test
mov
sbb
cmp
pop
sub
add
cmc
movl
test
cli
push
or
fimuls
int3
ja
out
mov
fildll
das
push
daa
mov
int
daa
inc
pop
or
xchg
stos
sahf
outsl
push
int3
sub
sub
adc
subl
rorb
jmp
out
rdmsr
rcl
add
cwtl
out
pop
outsl
fcmovb
jmp
es
imul
out
jb
in
mov
and
js
pop
mov
inc
sub
dec
mov
xchg
subl
das
pop
jg
and
scas
jns
adc
cmpsb
mov
ljmp
shl
les
dec
inc
push
sbb
addb
push
cwtl
and
enter
loopne
shll
adc
cmc
dec
sub
jg
mov
cs
sub
push
movsl
pop
push
out
xlat
add
and
iret
ficompl
push
loope
ret
stc
sbb
jno
stos
pop
cmp
jbe
pop
adc
mov
outsb
mov
inc
pop
addl
push
popa
sti
mov
or
rclb
push
pop
cmc
rorl
and
mov
cmpsb
ret
ret
ret
fldt
outsb
adc
inc
inc
mov
and
xchg
out
xchg
addl
outsl
or
outsb
xor
arpl
stos
in
lret
adc
mov
ss
std
rcl
je
pop
out
push
push
movsl
idiv
adc
lcall
cli
fwait
pop
hlt
pushf
xor
adc
loopne
push
es
in
fsub
enter
xor
adc
mov
and
jns
xchg
mov
ja
sbb
sub
into
cmpsl
jnp
in
cmpsb
mov
push
icebp
pop
push
repnz
and
aam
or
dec
out
sahf
pop
sub
subb
sbb
jne
frstor
insb
pop
push
push
xchg
aam
repz
cmp
jae
cltd
aas
insb
mov
xor
add
and
int
daa
pop
nop
movsb
jp
push
pop
jge
out
pop
daa
fs
aas
das
or
inc
pop
in
mov
fwait
rcrb
hlt
cmpsb
imul
mov
xchg
add
lds
pusha
leave
and
mov
adc
mov
mov
cwtl
cmc
incb
xor
sbb
out
popf
cmp
mov
pushf
jbe
jl
sarb
add
push
aam
outsb
aas
mov
sub
sbb
xor
push
insb
adc
insb
stos
int
std
xchg
xchg
sbb
xchg
jnp
lods
int
adc
adc
inc
fcoml
pop
repnz
pop
and
mov
mov
cmp
imulb
aad
or
add
adc
jae
dec
stc
stc
mov
sbbb
sbb
loope
xor
and
xor
or
pop
test
push
cltd
aam
js
xor
cmp
sub
lea
ret
sub
outsl
stc
push
movsb
sbb
add
jle
lds
lods
clc
mov
aad
aad
in
mov
xchg
push
or
in
mov
in
sbb
leave
pop
insl
and
into
dec
int3
lods
fistpl
popf
cmp
jne
pushf
out
mov
decb
pop
push
icebp
mov
jae
cmp
xchg
sub
push
push
into
jnp
or
xchg
test
cmpsb
pause
in
jle
enter
cli
icebp
mov
loope
xchg
xor
addr16
movsb
lret
loop
xlat
mov
clc
jbe
and
in
adc
fadds
data16
mov
lods
in
out
in
jp
aad
jl
aaa
fisubrl
push
repnz
bound
jb
mov
or
jno
into
add
ja
or
mov
cli
imul
inc
lret
pop
pop
cld
testb
into
xor
ja
lods
shrb
jb
mov
gs
inc
sahf
mov
push
stos
int
cwtl
ss
mov
pop
pop
mov
xchg
loopne
arpl
stc
jb
mov
sub
lahf
pop
rcrl
push
test
cmp
cli
fstpl
mov
and
popf
or
pop
js
enter
push
pop
leave
cmp
mov
mov
xchg
push
hlt
insl
pop
jmp
push
aam
xor
dec
jo
in
cmp
inc
or
dec
jp
leave
inc
idivl
pusha
pusha
push
add
daa
adc
adc
loope
fistpl
iret
mov
mov
adc
es
pop
fmul
shll
pop
in
jae
sbb
in
repz
push
pop
inc
jae
pop
out
cmp
cmp
into
lock
imul
jne
negb
dec
das
adc
imulb
stos
aam
mov
out
adc
lods
xchg
fiadds
rcll
push
dec
imul
xchg
lods
stc
cmp
lea
iret
dec
orb
or
jnp
in
sbb
mov
test
gs
fwait
mov
and
or
ljmp
inc
mov
sub
into
dec
push
repnz
or
lods
mov
int
stos
lret
hlt
bound
xor
rcl
pop
and
mov
aas
das
cmp
xor
test
push
adc
popf
fnsave
adc
sub
lea
jle
sbb
mov
out
sbb
dec
test
bound
test
pushf
xchg
out
je
sub
lods
push
mov
mov
xchg
push
or
pop
push
aas
lea
mov
mov
sarb
fidivrl
test
push
call
push
pop
cs
sub
loop
aad
gs
adc
xchg
add
and
cmp
mov
repnz
mov
inc
push
shlb
sbb
mov
and
scas
mov
shlb
insl
loop
fadd
adc
or
pop
inc
pop
test
push
jl
push
leave
pushf
arpl
dec
jmp
vmlaunch
and
lds
aad
xor
and
data16
push
mov
or
pop
mov
rcrb
xchg
scas
loopne
pushf
push
cmp
xlat
sbb
in
inc
add
roll
pop
aaa
or
lds
ja
test
inc
bound
popf
shll
rorl
xor
mov
pop
test
and
out
lods
cmp
scas
aam
in
call
sbb
arpl
imul
ret
jmp
aas
cltd
cwtl
cmpsb
sub
out
stc
mov
je
bnd
or
xor
sbb
lret
xacquire
inc
mov
fmuls
iret
fistpl
in
mov
mov
xor
shll
mov
out
fs
inc
dec
out
out
adc
int3
out
jg
shlb
lock
dec
pop
rorl
in
andb
cltd
mov
cmp
pop
outsl
xlat
jmp
ret
sahf
sub
mov
arpl
int
rcr
or
int3
add
jge
cmc
cwtl
test
mov
data16
stos
sbb
cmp
ret
fstpt
loopne
mov
repz
push
test
test
jge
out
push
ss
jecxz
iret
push
cld
mov
sbb
jmp
aam
pop
cmp
ljmp
gs
loope
pop
adcb
mov
hlt
sbb
imul
pop
mov
or
xor
jge
mov
cmp
mov
shlb
add
inc
fcmovnb
push
pop
pop
cmpsb
push
daa
xchg
bound
xor
fyl2x
adc
imul
push
outsb
in
push
inc
out
sub
sbb
inc
push
and
sti
pop
inc
mull
xor
pop
popf
push
sub
inc
iret
pop
mov
pop
stos
inc
mov
and
dec
push
or
and
pop
jae
out
nop
or
inc
xor
movl
jecxz
jbe
leave
outsl
adc
push
outsb
shrb
rcrl
jb
inc
rorl
sahf
dec
loop
out
lods
ret
popl
pushf
cmp
aas
mov
mov
addr16
imul
aas
ficomps
jg
fildl
pop
inc
jns
xchg
xchg
out
mov
mov
dec
shlb
pushf
add
loop
addl
push
mov
xor
or
fcomip
iret
xor
mov
mov
sbb
lcall
mov
aas
push
shlb
xor
pop
rcrl
out
jns
sub
enter
pop
test
test
cmc
cmp
mov
jecxz
cmp
dec
out
mov
push
mov
jne
dec
es
lret
lret
insl
test
icebp
sbb
mov
xor
cmp
adc
mul
fldt
inc
cmpsb
add
cmp
xor
mov
and
test
iret
cli
aam
std
jnp
pop
add
out
ja
mov
fidivrl
out
fstpl
sbb
xchg
adc
xor
aaa
test
mov
jns
push
rolb
popf
pop
lss
sub
mov
aad
adc
stos
sti
or
outsl
notl
dec
hlt
jge
mov
pop
pop
pop
add
insb
cld
push
fistps
testl
test
aam
cwtl
dec
dec
sbb
loopne
mov
addr16
test
xor
mov
adc
mull
hlt
lahf
pop
lahf
jns
xchg
test
xchg
lods
push
jnp
mov
dec
andb
ds
outsb
add
mov
jl
dec
mov
lea
lea
mov
gs
jmp
jo
fdivrl
int
mov
push
scas
fdivrl
ud2
cli
das
or
or
mov
mov
push
mov
gs
dec
inc
mov
add
add
clc
movsl
and
pop
dec
push
rcll
icebp
dec
aas
in
jns
leave
sahf
xor
mov
jbe
je
mov
lret
mov
sahf
iret
pop
movsb
sub
push
insb
xor
loopne
mov
sti
movsl
jbe
or
fimuls
pop
fmul
mov
dec
add
sub
or
in
imul
popf
mov
fucomi
jne
push
mov
xorl
insl
mov
jae
lahf
fists
pop
or
inc
fs
xchg
ljmp
iret
lea
push
sti
xchg
sub
inc
mov
movsb
mov
scas
bound
mov
and
cli
pusha
push
fbstp
sub
inc
mov
sti
xor
adc
aam
std
xchg
es
pop
or
mov
push
pushf
arpl
test
push
in
addr16
add
fwait
push
adc
cmpsl
pop
adc
enter
test
outsb
xor
and
sbb
push
insb
sub
inc
imul
cmp
divl
xchg
push
inc
xchg
cwtl
pop
push
mov
aaa
pop
lcall
jno
cmpsl
push
push
jl
rcll
test
sti
xchg
inc
stos
mov
je
inc
jno
xchg
nop
xchg
pop
enter
cmp
push
scas
mov
inc
sbb
out
aad
mov
gs
lds
or
jne
sbb
push
pop
jne
push
sbb
mov
pop
icebp
add
hlt
out
mov
ss
inc
dec
jmp
test
cli
push
mov
mov
js
sub
mov
mov
and
pop
pop
les
mov
je
in
ss
testb
test
pop
xor
or
fsubrp
adc
insb
lods
mov
shll
adc
aas
dec
int
jg
sar
jg
adc
add
popw
add
sbb
scas
or
push
mov
lods
jge
arpl
inc
cmp
xchg
mov
push
add
sub
cmp
adc
xor
in
jmp
sub
push
out
jbe
mov
adc
push
xor
rorb
fucompp
mov
aaa
cmp
pop
outsl
mov
or
movsb
repnz
push
imul
adc
lar
and
mov
mov
push
cmpsb
dec
xorb
js
rcr
out
fldl
add
outsl
orl
push
and
jbe
dec
mov
mov
jnp
mov
mov
mov
jnp
inc
xchg
inc
clc
mov
pop
enter
arpl
js
push
fld
fs
adc
daa
mov
sub
mov
shll
mov
add
loopne
mov
sti
push
std
mov
adc
dec
sub
sbb
popf
popf
popa
xchg
dec
lcall
cmp
in
arpl
pushf
pop
jnp
xchg
and
repnz
aaa
scas
scas
test
hlt
mov
push
xchg
mov
pop
cmpsb
pusha
ret
add
mov
loop
ror
stos
icebp
add
mov
inc
and
fists
jle
xchg
pushf
cmp
out
pop
fstpl
cmp
das
sbb
mov
cmpb
pop
mov
stos
pushf
fcmovne
outsb
es
jecxz
lock
repz
std
scas
adc
lea
push
sbb
mov
out
jo
fwait
sti
fdivr
lods
movsb
dec
ret
mov
movsb
jbe
decb
ljmp
fcompl
sbb
cmpsb
pop
pushf
ljmp
cld
repnz
jle
fistpll
and
das
call
sub
mov
hlt
jl
lcall
push
jp
mov
lahf
insl
mov
cmpsl
or
and
mov
in
shlb
xchg
mov
pop
sub
out
push
or
mov
mov
or
jl
mov
clc
xchg
sbb
inc
add
lds
mov
xchg
jns
ret
add
fidivrl
jge
popf
ret
test
sub
cltd
imul
mov
push
mov
fsub
mov
inc
les
lods
loopne
movsb
jo
outsb
stos
fstp
stos
or
or
or
and
adc
leave
jbe
popa
bound
outsb
push
inc
mov
or
fmuls
mov
shr
in
das
popa
sub
rclb
scas
hlt
xor
es
push
push
mov
push
pop
imul
and
adc
popa
xor
cmp
scas
adc
adc
pop
xchg
iret
nop
lret
cmc
xor
ljmp
mov
jg
es
or
nop
in
sub
and
ret
adc
mov
fnstsw
je
pushf
addr16
inc
and
aam
xchg
push
jbe
popf
jge
aam
push
jmp
fistpl
adc
push
mov
push
or
stos
sub
jno
rorb
daa
or
sub
pop
sbb
sbb
jne
cmc
mov
cmp
rcrl
nop
stos
mov
not
mov
fisubs
imul
dec
pushf
mov
lds
leave
or
js
dec
xor
lods
in
dec
loope
mov
inc
inc
mov
iret
mov
xchg
mov
cwtl
mov
add
fimull
lods
push
and
outsb
mov
xor
imul
push
popa
sub
cmpsb
in
mov
cmpsl
movsb
scas
std
add
jns
inc
sub
pop
outsb
xchg
in
int3
fwait
outsb
mov
mov
lock
jp
movsl
aad
sbb
iret
dec
inc
cltd
sub
stos
out
mov
pop
enter
push
mov
int
xor
xor
cmc
push
pop
ror
sub
rcl
xorl
push
jl
je
stc
shll
clc
cld
or
enter
lods
dec
xor
sub
enter
mov
pop
rclb
add
mov
add
out
pop
inc
sbb
sub
mov
push
js
repz
xchg
mov
inc
xchg
aad
scas
inc
in
adc
ucomiss
or
mov
movsb
sub
sbb
iret
in
and
in
pop
popf
fldcw
sbb
outsl
out
fisubrl
cli
mov
jmp
test
daa
xchg
or
dec
lret
icebp
mov
lret
jae
lret
std
ret
insl
add
enter
sub
pop
fnstsw
push
rorl
das
pop
lret
fcmovbe
dec
jmp
icebp
mov
sbb
xchg
mov
and
cmpsl
mov
outsl
movsl
mov
js
in
in
popf
cmp
add
add
mov
inc
mov
test
xchg
mov
fistpll
sub
jae
dec
or
mov
pop
loope
movsb
je
cmp
xor
pop
cmp
cmp
int3
mov
inc
test
mov
daa
das
imul
mov
pop
mov
xchg
divl
pop
dec
cmp
js
test
repnz
pop
jge
dec
sub
rorb
addr16
scas
jp
sarl
mov
imul
xor
rorb
fucomp
pop
outsb
add
push
ds
inc
fnstsw
gs
bound
bsr
das
mov
cmp
out
ds
adc
xchg
xchg
push
jmp
in
ret
call
jne
test
rclb
sbb
jno
jo,pn
mov
in
push
aaa
js
lods
or
insl
inc
inc
dec
push
sbb
lret
std
jno
pop
into
stos
fs
stc
push
mov
fwait
jecxz
cmpsl
imul
xchg
cwtl
mov
adc
loop
push
sbb
push
push
xchg
jns
pop
into
mov
xchg
add
cmp
sub
lds
push
inc
jnp
repnz
gs
cmp
jns
leave
cltd
mov
addr16
sub
test
test
inc
jb
gs
jg
pop
mov
pop
fcomps
mov
dec
inc
lods
cld
jg
push
decb
xchg
push
ljmp
int
mov
inc
lea
movsl
fnstenv
xchg
jle
mov
shrl
pop
mov
inc
mov
mov
mov
add
xor
rclb
dec
ds
add
mov
jmp
shlb
sbbb
xlat
pop
and
cmp
into
pop
mov
aam
mov
mov
int3
movsl
adc
pop
xchg
dec
pop
ss
aad
jbe
cmpsb
rcll
push
dec
xor
call
adcb
lods
or
mov
xchg
cld
push
enter
clc
push
xor
lret
adc
xchg
push
inc
adc
adc
mov
adc
mov
jnp
popa
push
icebp
nop
cmpsb
daa
cmp
nop
aad
out
adc
sub
scas
pop
cmp
jno
push
xchg
inc
adc
dec
jle
es
sub
repz
mov
jno
lds
pop
ljmp
push
int
inc
cmpsb
ficompl
incb
test
pusha
mov
repz
xchg
inc
test
fsubl
es
sti
cmp
inc
gs
adc
sti
pop
in
mov
mov
imul
mov
fdivr
or
pop
es
push
orl
bound
popf
in
adc
fmulp
inc
insl
pusha
icebp
sub
xchg
movsb
cmpsl
shll
cmp
int3
clc
jo
pop
add
xorb
xor
dec
outsb
cmp
ret
pop
push
loop
cmp
dec
and
xchg
loop
loop
push
test
cmpsl
mov
lret
mov
inc
inc
add
add
repz
lods
xor
add
mulb
inc
nop
test
dec
push
cmpsl
mov
sub
xchg
imul
pusha
es
gs
fcoms
and
out
out
cmpsb
fdivrs
inc
cmp
sub
push
cli
push
jg
in
shll
xchg
push
sahf
jecxz
pop
sbb
sahf
insl
mov
dec
cmpsl
xor
push
push
xchg
loopne
out
sub
sub
fcoml
insl
inc
and
addr16
in
xor
push
insl
movsl
pusha
mov
addr16
pusha
add
or
push
inc
and
stos
movsl
scas
lret
scas
inc
pusha
jno
mov
andb
lds
inc
adc
add
out
std
jmp
mov
push
pop
mov
pushf
mov
jbe
ds
pop
ds
ss
jl
cmp
test
fcoms
hlt
mov
mov
and
sarl
ljmp
add
push
icebp
orb
push
imull
mov
cmp
add
movsb
pop
movsb
mov
jl
sub
test
mov
cltd
je
ficompl
cmpsl
xchg
in
ret
repnz
iret
dec
ds
orb
jle
stos
mov
in
and
sti
insb
pop
push
jmp
lock
cwtl
cmc
cwtl
cmp
push
dec
outsl
movsl
sbb
sub
daa
xchg
ret
sub
cld
jp
nop
fsubl
jmp
xchg
out
xchg
jo
out
push
jmp
jg
test
dec
xor
xor
bound
ror
fiaddl
xor
and
sahf
lret
gs
dec
aam
cmp
push
push
insb
dec
leave
jno
xor
mov
push
xchg
loopne
inc
mov
jae
ffree
icebp
mov
cmc
inc
adc
int3
jmp
rol
cli
lret
aas
nop
aaa
xchg
mov
sti
int
dec
shll
fwait
push
jb
dec
mov
jecxz
seta
sbb
retw
sub
jne
ret
andl
mov
add
cli
in
jo
mov
int3
lds
cmp
xchg
mov
xor
cmp
mov
mov
fnstcw
hlt
jo
mov
jo
sub
pushf
cmp
scas
fcoml
out
lods
jns
or
out
lret
lret
fwait
subb
dec
sub
mov
mov
or
lods
cs
repz
aad
adc
orb
add
out
push
xor
addb
lods
push
adc
push
xchg
aaa
cmp
outsl
stc
leave
in
push
ficoml
jmp
cmc
sbb
rorl
or
push
lods
test
xchg
aam
xchg
push
ss
add
jge
mov
pop
shr
push
fstl
dec
jne
pop
data16
clc
fistps
punpckhbw
lcall
mov
push
aas
and
hlt
jb
nop
cmp
mov
ret
pop
ficoml
xorps
inc
enter
inc
je
xor
rcrb
xchg
out
and
dec
push
in
jp
cs
push
mov
add
sbb
cs
jns
in
mov
and
es
mov
roll
xor
fwait
dec
mov
cld
xchg
and
js
out
je
rcr
fimuls
insb
cmpsl
mov
iret
xchg
inc
ret
jl
add
jle
sbb
adc
lret
mov
inc
outsl
pop
adc
into
enter
pop
pusha
ja
jge
test
jle
mov
add
outsl
fdiv
inc
xchg
sbb
inc
sbb
aaa
rclb
push
test
lds
xchg
scas
and
lret
xchg
jnp
adc
mov
or
xor
mov
es
icebp
lahf
and
fwait
sti
cmp
ljmp
mov
jle
pop
mov
test
push
daa
mov
orps
and
loopne
add
and
mov
addb
popa
sbb
aad
pop
imul
in
adcb
sbb
ljmp
lahf
in
inc
cmp
mov
ljmp
fbstp
xchg
push
mul
mov
xchg
add
dec
pusha
or
ret
decl
add
and
xor
push
in
cmpsl
add
or
out
loope
cmp
fsubl
es
out
inc
ds
push
out
mov
xor
push
fstpt
push
dec
add
dec
mov
int3
shr
xchg
je
lahf
or
pop
dec
xchg
adc
and
mov
dec
xchg
test
push
sarl
sub
and
nop
shlb
xchg
jge
and
testl
movsl
mov
sbb
sbb
mov
add
dec
push
mov
sar
fs
out
jno
push
incb
pause
mov
clc
shrb
shrb
mov
xchg
add
in
js
rcrl
stos
xor
push
fstpt
aaa
cmc
fistl
lods
mov
sub
xor
ja
and
mov
push
inc
mov
ret
call
dec
push
push
xchg
jno
sub
sub
xchg
adc
sub
pusha
stc
mov
sahf
sub
adc
mov
les
setle
sbb
jmp
jne
hlt
lods
xlat
das
and
scas
inc
ss
add
fisttpl
push
jecxz
jne
cwtl
inc
cmp
fwait
cmp
es
dec
mov
xor
pop
cwtl
imull
pop
or
imul
jecxz
jns
popa
dec
fimull
or
push
mov
xchg
sub
push
and
pop
popf
arpl
movsb
enter
loop
pop
lds
sub
mov
or
cmpsl
outsl
cld
inc
and
mov
cmp
adc
out
mov
es
lret
xor
mov
out
sub
repnz
arpl
iret
add
xor
out
addr16
sub
rcrl
into
rolb
lea
in
out
cmp
dec
inc
data16
jns
or
fdivl
and
out
cmpsl
jmp
insl
jo
push
lods
inc
insl
movsb
call
push
push
fs
movsl
jno
mov
cld
cmpsl
outsb
repnz
jl
nop
data16
mov
mov
iret
clc
imul
adc
icebp
mov
aad
ss
push
mov
jge
push
movsb
negb
les
sbb
bound
cltd
mov
mov
pop
lods
notl
jle
mov
pop
aad
sub
es
cwtl
es
lds
adc
xchg
insl
fsubs
dec
pop
cli
pop
inc
scas
popf
enter
fistpll
in
push
pop
mov
jmp
xchg
sbb
adc
mov
push
shlb
das
mov
jge
dec
mov
arpl
jno
xor
leave
test
outsb
cmp
rolb
mov
sbb
and
mov
sbb
aaa
sarb
xchg
daa
popf
test
rolb
jp
mov
ret
outsb
popf
sub
and
rcll
mov
fcmovnb
sti
xor
cltd
jo
or
or
fnstenv
out
or
std
xlat
aas
loop
into
jecxz
mov
sub
xor
idivl
insb
inc
or
test
mov
rclb
ljmp
xchg
push
xor
loopne
xchg
push
mov
dec
fwait
xor
pop
mov
and
xor
test
jp
inc
imul
int3
mov
jno
call
push
mov
outsl
pop
flds
pop
fisubl
sub
dec
outsl
cmp
inc
stos
loopne
imul
cmp
ja
pop
and
add
aad
sbb
mov
adc
xchg
sbb
out
or
sbb
rcr
adc
in
lret
outsl
ljmp
js
mov
jl
mov
mov
nop
enter
movsb
mov
sub
jne
mov
jmp
ret
test
push
add
ret
adc
mov
sub
aas
sti
mov
clc
fstpl
mov
xor
add
sub
shr
inc
cwtl
fld
add
sbb
mov
pop
dec
add
repz
ret
sbb
fcmovne
inc
cmp
dec
das
jne
or
movsw
inc
fwait
mov
and
push
ss
and
push
sarb
dec
jae
in
lret
lret
mov
cmp
or
fnstsw
adc
dec
sub
cmp
ret
cmp
sbb
push
shr
jge
mov
push
jbe
mov
icebp
jnp
lret
or
dec
aad
pop
ljmp
xchg
mov
fwait
iret
jne
dec
imul
cmpsb
cmpsb
mov
sub
xchg
or
ljmp
js
daa
daa
int3
pop
int3
sbb
dec
mov
das
sub
jbe
neg
sbb
pop
inc
cmp
outsl
stc
les
int3
fwait
aam
into
jl
cmp
or
cmc
mov
jl
fildl
je
rcll
mov
jp
xchg
adc
and
add
stos
add
in
loopne
push
imul
mov
andl
jmp
jg
test
mov
les
test
jb
fstps
add
mov
push
sub
popf
jg
xchg
mov
dec
btc
bound
mov
adc
jne
mov
adc
jnp
or
and
ret
fidivl
popa
int3
cld
int
xor
aas
repz
mov
shrl
mov
sbbb
leave
adc
sbbl
call
adc
sbb
pusha
xor
aas
cmp
mov
xor
es
mov
inc
mov
stc
pop
shlb
xchg
test
mov
cwtl
sub
cmp
in
mov
xchg
sub
jne
movsb
sbb
mov
xchg
outsl
js
mov
leave
inc
loopne
mov
sub
or
xlat
les
xor
aam
mov
out
cmp
mov
in
fidivl
cs
jno
sub
test
sub
mov
les
mov
pop
out
pop
imul
jae
mov
jmp
les
imul
jo
inc
sbb
test
cmpsl
lds
sbb
vandnpd
cltd
jmp
add
add
lods
addr16
dec
xor
fucom
ds
std
xor
mov
imul
mov
push
out
push
ljmp
stos
push
fldl
mov
dec
jo
shrb
and
jae
and
shrl
jns
jle
adc
add
adc
jmp
or
pop
pop
mov
out
push
push
in
cmp
push
jo
mov
dec
mov
cmp
inc
dec
mov
scas
and
push
jne
sub
es
es
mov
dec
inc
xor
mov
pop
test
cmp
xchg
and
idivb
inc
pop
jmp
js
mov
adc
scas
mov
cwtl
roll
adcb
negl
dec
out
add
adc
cmp
repnz
mov
xchg
sbb
bound
insb
fstl
and
mov
outsb
pop
fidivl
sti
jne
subb
shlb
lods
add
outsl
loope
je
in
mov
flds
leave
insb
rcll
inc
notl
adc
or
push
ret
add
test
imul
mov
jg
outsl
cwtl
jp
clc
add
pushf
xchg
xchg
jne
mov
sub
cmpsl
test
addr16
loope
mov
jecxz
bound
xchg
test
in
sbb
jb
arpl
inc
and
lahf
pop
idivl
adc
lods
sbbb
andb
or
jecxz
js
imul
jne
adc
lcall
shlb
sqrtps
and
xor
cmp
push
cmp
test
flds
add
jo
xchg
test
enter
sar
inc
jae,pt
mov
add
aam
mov
jne
inc
mov
add
gs
add
aam
xchg
lods
in
mov
int
repz
add
fwait
xlat
dec
aas
incl
jle
dec
ret
loope
xor
lock
add
cwtl
adc
and
pop
and
and
and
test
add
cmp
push
xlat
mov
cmp
repz
xchg
subb
loope
cmp
aam
inc
stos
push
inc
inc
rol
pushf
sub
divl
or
fsubrl
sti
ds
cmp
das
mov
push
subl
dec
arpl
add
push
loope
movsb
sbb
sub
pop
cmpsb
mov
into
insb
sub
mov
outsb
inc
inc
fnstenv
out
movsb
daa
mov
dec
or
push
cmpb
ret
pop
std
hlt
or
orps
push
in
stos
loop
adc
in
push
mov
push
push
rcrb
sub
mov
pop
dec
xlat
inc
popf
stc
jnp
lahf
sub
pop
repz
jbe
jl
dec
insl
pop
fstl
stos
lock
mov
mov
in
jne
mul
add
gs
aam
cmp
fsubrl
dec
cld
cmpsl
pop
adc
enter
add
mov
inc
mov
inc
sti
cltd
int3
jle
xor
jo
xor
pushf
pop
lret
mov
dec
data16
cmp
call
push
into
lret
adc
pushf
xchg
std
test
mov
daa
xchg
loopne
xchg
jns
loope
lock
mov
adc
xlat
lea
mov
orl
inc
pavgb
sub
inc
les
mov
imul
xchg
fsqrt
mov
je
mov
rol
xchg
popa
mov
fs
cmp
rorb
add
push
fnstenv
stos
xor
ljmp
fstl
lock
push
stc
or
jne
and
or
or
out
xlat
stos
scas
adc
cmp
inc
std
pushf
negb
or
lret
ret
push
adcl
dec
mov
xlat
jmp
leave
fiadds
das
roll
addl
xchg
mov
stos
jnp
cmp
jne
mov
pop
mov
sub
jo
inc
push
sub
popf
dec
out
push
test
add
push
cwtl
test
and
mov
push
int
fisubs
lret
and
or
in
xchg
jne
int3
pop
mov
jecxz
sub
pop
dec
aas
sbb
repz
lods
add
sub
lcall
mov
cmc
test
std
test
xchg
fidivl
jp
fstps
push
sti
sbb
mov
mov
jecxz
sub
jno
movb
pause
mov
adc
or
jecxz
pop
jg
cmpsl
jae
add
je
mov
test
mov
outsb
insl
cmp
fildll
sbb
fidivrs
push
ds
xchg
bound
mov
push
cmp
mov
jg
mov
mov
aas
pop
call
sub
adc
jnp
cmp
cmp
fadds
std
add
adc
or
sbb
test
std
clc
adcl
mov
fwait
cmc
outsl
mov
iret
sub
push
jp
jns
jae
and
cmp
fwait
ret
mov
aam
cltd
xchg
lds
test
clc
mov
add
shlb
sbb
sub
mov
dec
mov
push
orl
jb
xchg
adc
xor
mov
aam
add
xchg
mov
insb
pop
iret
cmpsl
add
mov
dec
fidivrs
lcall
cmp
push
and
or
int
mov
xchg
add
or
sti
out
mov
cmc
mov
push
cltd
outsl
aaa
cs
push
popa
push
mov
clc
cld
out
push
sbb
lods
cwtl
imul
shl
leave
cmp
adc
fwait
mov
add
outsb
jle
mov
in
and
adc
push
testl
cs
mov
cld
sub
cmp
mov
push
test
mov
das
pop
popa
notl
cmp
das
stos
mov
sbb
lcall
out
mov
out
fs
loope
fs
outsl
xor
jns
outsb
call
add
addr16
int3
pop
pop
and
add
les
cld
orb
pop
ljmp
sub
repz
push
popa
dec
lea
add
pop
enter
mov
adc
cmpsb
stc
mov
pop
test
pop
std
shll
pop
push
push
push
stos
stos
lret
lahf
adc
adc
sbb
xchg
or
jg
aas
and
pusha
cmpsb
sahf
fwait
int
in
daa
cmpsb
loopne
mov
movsl
dec
or
stos
or
adc
les
cmp
mov
jbe
iret
fdivs
lret
jb
lods
nop
clc
dec
cmpsb
insb
sbb
test
and
push
es
sub
jns
push
aas
push
hlt
stos
dec
xor
add
dec
xchg
cld
mov
jl
imul
cwtl
test
iret
gs
lock
jb
xchg
lods
push
sub
ret
mov
xchg
add
xor
mov
imul
popf
fdivr
cli
cld
mov
das
sub
adc
mov
repz
mov
pop
add
sti
lret
cs
cmpsb
push
jg
xor
jb
movsb
inc
and
jle
jmp
out
enter
adc
inc
fbld
xchg
adc
dec
xchg
gs
ret
mov
adc
in
aam
mov
xchg
xor
inc
popl
and
outsb
aad
inc
loop
pop
fwait
jnp
sbb
push
repz
sbb
mov
icebp
addl
int
cmp
push
add
stos
movsb
cs
test
push
add
dec
lcall
sti
test
ss
and
in
dec
repz
testb
mov
or
sahf
stos
stc
test
repz
mov
push
push
adc
adc
loop
lods
xlat
or
cli
insl
orl
lods
negl
mov
push
cli
incl
pop
jmp
push
lcall
mov
in
xlat
ficompl
hlt
xchg
adcl
cmpsb
scas
sti
mov
imul
pop
in
addb
in
gs
ljmp
mov
ljmp
inc
xor
jmp
pop
addb
add
push
xchg
jno
daa
adcl
or
iret
inc
cmc
fisttps
xchg
in
mov
pop
scas
sti
xor
into
cmp
aam
and
into
stc
call
sti
mov
out
sub
mov
xchg
mov
and
and
sti
xchg
dec
xor
or
jae
jle
dec
movsl
mov
sti
xor
movsl
mov
jle
cmpb
push
push
int
or
mov
xor
es
rcrl
push
daa
fldenv
xor
outsb
cmpb
call
sub
xor
add
xor
mov
mov
in
mov
lcall
pop
or
ds
lret
jle
sub
push
pop
push
dec
int
fidivs
adcl
mov
movsl
loopne
mov
jle
ja
sahf
scas
ficomps
wbinvd
fisubrs
mov
stos
push
sub
je
aaa
mov
je
ja
enter
insb
xchg
or
mov
xchg
push
sbb
push
cmp
test
mov
mov
xchg
or
rorb
push
dec
add
add
popa
lea
fadds
je
stos
mov
movsb
jg
sbb
pusha
ja
or
jne
xor
jecxz
adc
idivl
sti
sub
pusha
sbb
jg
lret
cli
mov
ljmp
mov
adc
mov
xor
cltd
les
xor
test
add
add
sub
repz
inc
das
in
cmpl
inc
add
dec
mov
or
test
out
insb
leave
inc
mov
into
inc
adc
arpl
rcl
mov
cwtl
fmul
mov
sbb
cmp
imul
movsb
mov
lods
sti
lret
xchg
mov
stc
sub
scas
and
cmp
shl
jns
cld
lods
sub
mov
mov
lock
mov
filds
mov
addr16
stos
add
jecxz
popf
imul
js
sbb
sub
popa
xchg
sub
insb
push
jp
aam
lock
adc
jo
cmp
lret
xor
jo
pushf
inc
add
lret
rorb
jp
pop
sbb
or
fs
clc
daa
adc
sarb
mov
push
mov
ja
pop
mov
stos
movsl
cmp
cmpsl
sub
test
sub
inc
addb
jbe
test
sub
scas
xchg
or
stos
test
xchg
adc
ficoms
fldcw
cli
ss
stc
mov
test
adc
pop
mov
and
out
pop
cli
andl
out
cmpsb
out
jbe
xor
cmp
inc
pop
inc
or
cli
lret
and
inc
adc
fcmovb
sub
cwtl
pop
fwait
mov
aaa
fsubl
loopne
or
mov
mov
cmp
sub
mov
adc
or
les
outsb
pop
pop
iret
dec
add
xchg
cmc
pop
jecxz
aad
dec
inc
cmpsl
jne
or
cmp
xor
inc
pop
and
cli
lret
bnd
test
add
mov
mov
and
jno
mov
das
loop
sbb
dec
out
jl
jl
mov
aas
dec
ret
xchg
stc
xchg
js
mov
mov
and
push
xchg
jno
cmc
push
inc
cs
pop
fcoml
lods
leave
fwait
dec
outsb
movsl
std
pop
jecxz
dec
cli
cmpsl
shll
movsb
mov
sti
daa
xor
inc
das
out
test
cmp
in
in
xlat
decb
out
or
fisubs
or
pop
xchg
xchg
cmp
add
neg
and
mov
jno
lock
jp
lds
pop
sbb
jno
or
mov
lahf
nop
or
xor
shl
imul
test
inc
fnstenv
dec
mov
lret
dec
sbb
pusha
roll
enter
mov
scas
lds
jo
or
repnz
jno
lret
roll
mov
les
das
jmp
adc
push
repz
in
test
jp
popl
fnstsw
dec
push
cmp
fldcw
in
les
and
mov
jle
inc
mov
jae
dec
dec
mov
mov
cs
inc
out
cld
es
fildll
jl
aad
out
jle
push
cmp
push
out
mov
sbbl
cmp
add
sbb
mov
jmp
mov
sbb
jg
sbb
popf
sub
adc
mov
lret
push
cltd
jb
data16
fcomi
dec
lea
dec
adc
pushw
ja
and
xchg
sbb
cmp
rolb
sbb
pop
popa
mov
lret
andl
imul
ficoms
jae
xchg
in
fcomp
adc
jge
mov
test
adc
mov
sub
cltd
push
clc
and
add
add
mov
add
pop
fcomps
add
popw
mov
or
inc
sbb
insb
or
ss
mov
xchg
pop
cmc
mov
lock
out
sub
mov
add
pusha
lret
mov
pop
add
xchg
movsb
jns
outsl
dec
loopne
iret
xor
xchg
or
pop
es
sbb
fldenv
std
mov
test
fwait
ljmp
push
mov
lcall
mov
mull
dec
mov
shrb
pop
cmp
xor
or
lret
xor
aas
cmp
cmp
test
and
mov
xchg
inc
cli
call
outsl
add
out
jl
sub
pop
bnd
xor
data16
incl
add
mov
mov
push
push
loope
sub
add
pop
jl,pn
out
int
sub
fists
mov
sti
sub
aaa
addb
outsl
xlat
add
pop
ret
bound
ja
insb
mov
pop
mov
aam
insb
sbb
test
out
or
or
and
outsb
sbb
xchg
cwtl
repnz
add
inc
int3
inc
ds
pop
popa
iret
pop
cmp
adc
clc
adc
mov
ljmp
pop
xchg
cmp
sub
and
push
filds
cmpsb
mov
push
and
push
inc
xchg
gs
mov
mov
stos
ljmp
or
leave
adc
mov
fdivrs
sbb
in
jbe
mov
aas
inc
jae
jno
mov
and
dec
push
ret
gs
rcr
mov
movsl
aam
push
icebp
cmp
adc
js
subl
iret
hlt
mov
jnp
adc
xor
mov
dec
rcrb
jne
stos
push
aaa
icebp
sbb
add
cmp
pop
cli
push
dec
gs
or
sbb
pop
nop
xor
sahf
out
popf
sar
leave
pushf
add
sbbb
xchg
add
jl
cmp
lods
cwtl
inc
push
dec
xor
pop
pop
mov
stc
sub
mov
stos
enter
push
xor
js
loop
pop
sbb
xchg
sub
xchg
pop
dec
pop
sbb
add
loopne
std
mov
sub
lods
loopne
sbb
sub
inc
ret
push
shrb
insb
fstps
mov
insb
mov
dec
dec
stos
scas
adc
xchg
add
mov
mov
xlat
cli
xchg
xchg
mov
fisttpll
xor
cmc
mov
div
gs
mov
fcompl
hlt
lea
mov
mov
daa
dec
jl
ret
repnz
subb
addr16
loope
dec
iret
cmpl
adc
cmp
shl
fwait
pop
or
outsb
fs
and
mov
inc
sub
pop
aas
repz
iret
leave
pusha
mov
sbb
mov
adc
cmpsl
aas
mov
or
jmp
xchg
inc
and
dec
add
scas
jl
inc
inc
xchg
ss
outsb
xchg
andb
les
cmp
sbb
sbb
xlat
jbe
movsb
add
pop
das
dec
jle
pop
and
insl
ss
add
add
je
sub
dec
sbb
xchg
lret
aas
sub
fdivs
pusha
jl
hlt
jno
and
adc
xchg
cmp
loope
or
push
imul
jl
xlat
dec
mov
iret
into
add
cltd
cwtl
jge
aaa
pop
sub
loop
add
or
in
or
cmpl
les
jne
mov
je
push
negl
addr16
pop
mov
aad
xor
cltd
pop
mov
mov
rcl
inc
mov
dec
push
loopne
mov
inc
sub
mov
in
in
mov
push
mov
adc
aam
jbe
pop
fdiv
push
jmp
pop
out
leave
adc
xchg
or
push
lock
pop
ret
adc
roll
adc
push
stc
add
stos
scas
sub
inc
aad
nop
fimuls
and
sbb
pop
and
shr
xlat
test
mov
xor
sub
mov
stc
dec
loop
inc
pusha
dec
in
add
call
ss
xor
in
ffreep
out
mov
les
xchg
movsb
xor
sarb
mov
jbe
jge
adcb
pop
bound
insl
jbe
sbb
adc
mov
das
aaa
filds
aaa
add
xchg
adc
mov
popf
and
mov
mov
add
jle
cmp
jle
xorb
sbb
subl
out
inc
sbb
mov
sub
std
hlt
mov
xor
inc
addb
lret
sbb
mov
jl
or
cmp
or
stos
fxch
mov
testl
xchg
nop
xor
dec
fnsave
pop
xchg
fsubrl
imul
push
mov
ljmp
pop
aad
sub
pop
adc
mov
arpl
inc
add
enter
mov
push
and
subb
sarl
xlat
mov
jmp
mov
or
sti
mov
push
xchg
gs
and
push
push
stos
ret
test
std
xchg
rcrl
mov
dec
add
popa
add
aas
int3
fldcw
ror
inc
loop,pn
stc
ljmp
xor
mov
sbb
xor
dec
xchg
jae
dec
mov
outsl
mov
cli
std
mov
leave
lods
mov
cltd
mov
les
pop
dec
xor
lcall
loop
add
fisttpll
xchg
pop
idivb
xor
out
add
fcomp
push
js
or
push
cmp
je
dec
jae
andl
leave
fwait
in
xlat
mov
lcall
jbe
in
orb
pavgw
cmp
cmp
movsb
mov
shrb
stos
fstpl
xor
inc
call
dec
sbb
dec
shll
fisttps
fidivl
lea
scas
mov
pop
stos
loop
jecxz
popa
jae
cli
inc
mov
popa
lret
loop
jge
int
mov
stos
stos
mov
or
push
jmp
dec
clc
rcrb
enter
pusha
push
mov
and
push
ss
dec
xor
sub
add
lcall
jecxz
adc
shrb
mov
lea
add
lea
clc
or
adc
data16
and
mov
mov
loopne
inc
lcall
jb
pushf
in
aam
sbb
push
mov
lds
gs
mov
mov
rcrb
pop
inc
fistl
pop
int
pop
fstpt
mov
add
fldl
mov
sti
xor
jl
xchg
testb
out
dec
shl
or
loope
jne
lret
adc
mov
scas
and
pop
add
jae
sub
push
mov
and
sbb
mov
ret
adc
insb
xchg
add
and
sbbl
mov
imul
aad
std
fiadds
fs
dec
mov
out
arpl
imul
addr16
xor
inc
inc
insb
stos
repnz
fwait
sbb
insb
xchg
pop
add
out
and
and
xchg
add
pop
mov
pop
push
popa
xorb
pop
outsb
xchg
lret
pop
dec
cmpl
dec
cmp
je
mov
nop
sahf
inc
std
fs
mov
out
sar
jno
pusha
in
lret
outsb
pop
inc
pop
pushf
mov
scas
loop
fwait
loop
xchg
rsqrtps
addr16
or
xorl
push
or
scas
je,pt
dec
jae
ljmp
out
cmp
mov
mov
jge
xchg
cli
and
pop
mov
mov
div
mov
or
in
xchg
mov
cli
and
imul
mov
out
and
lret
adc
out
push
xchg
push
test
popa
mov
popf
jnp
or
dec
or
popf
jmp
push
sbbl
test
test
dec
adc
xchg
cmp
lods
mov
das
jo
iret
or
cs
jo
jl
add
or
andl
adc
dec
bound
inc
cmp
xchg
jne
pop
sbb
jne
and
pop
in
aad
rorb
mov
repz
jbe
je
pusha
mov
imul
pop
int
lcall
pop
add
jns
cmpsb
xor
es
jb
cmpsl
push
jge
popa
or
xchg
jns
dec
fldenv
inc
out
shrl
insb
adc
pushl
push
or
inc
sub
sti
iret
mov
adc
push
dec
mov
cmpsb
adc
mov
mov
test
pusha
pop
xchg
mov
popa
mov
add
cmp
or
test
cmp
pop
inc
scas
sbb
sbb
inc
mov
loope
adcl
jmp
lods
xchg
gs
sbb
cmc
rcrl
jecxz
inc
imulb
mov
mov
sbb
test
jecxz
mov
rcr
add
sub
sbb
inc
and
jno
pop
dec
mov
inc
addr16
mov
sbb
push
into
lds
inc
mov
add
push
pop
pop
rcr
int3
movb
dec
adc
or
movsb
div
fnstenv
push
lea
outsl
lret
aam
sub
lahf
roll
mov
insb
lcall
jbe
push
and
jne
adc
cli
fstpt
imull
ret
es
adc
push
repnz
pop
clc
shl
in
cmp
stos
shll
pop
pushf
scas
push
jno
add
push
stc
mov
mov
cmp
enter
xor
mov
inc
xor
mov
push
sub
adc
pop
mov
mov
push
lods
call
jg
jle
and
adc
inc
mov
add
cmpsl
cmp
aaa
jp
paddd
bound
push
or
or
add
mov
mov
cmp
ficoms
add
push
pushf
adc
out
inc
ljmp
icebp
pop
mov
daa
lods
push
test
enter
sbb
sub
mov
inc
gs
aad
jnp
pusha
add
je
pop
sbb
sub
ret
cmpsl
aad
push
clc
mov
imul
outsl
in
dec
mov
je
mov
mov
ret
iret
lds
add
sbb
pop
les
lods
jno
loopne
add
dec
ja
repz
xor
jo
mov
pop
rcrb
mov
inc
mov
inc
hlt
mov
or
rol
and
and
popf
or
jecxz
lock
xchg
xor
jb
push
ja
scas
imul
arpl
cwtl
aad
bound
lods
xchg
mov
jbe
push
adc
jne
popa
xchg
repz
aam
jbe
lods
mov
cmp
add
shll
shl
add
icebp
inc
insl
test
fmull
add
xor
sbb
sbb
add
jae
push
sahf
jp
ds
pop
rolb
scas
sbb
decb
loope
out
push
xchg
std
xchg
sub
sub
jle
arpl
jo
mov
xor
inc
aad
fisttpl
mov
test
faddl
pop
mov
sub
out
jp
mov
lcall
or
pop
shr
dec
mov
ret
lret
cmp
adc
ljmp
fsubp
sti
and
or
xchg
imul
nop
jb
js
dec
cmpsb
loop
push
aam
pop
or
sbb
cmc
and
dec
fldl
cmp
ds
adc
lods
nop
mov
sbb
mov
call
pop
cmc
fdivrp
daa
ret
clc
mov
push
jmp
xchg
xor
mov
hlt
or
sub
mov
mov
in
adc
mov
test
shrl
push
jge
jne
rorb
sbb
jmp
jmp
rorl
test
lahf
sub
cs
cmpsl
adc
mov
xchg
into
stos
push
xor
and
rol
cs
loop
push
pop
lods
mov
add
adcw
cld
lock
xchg
push
test
in
mov
leave
jmp
xor
out
push
xor
adcb
jo
neg
icebp
rcl
ljmp
pop
add
jae
daa
icebp
pop
cmpsl
mov
xchg
fisubrl
and
mov
rcr
iret
pop
add
imul
sbb
cmc
push
inc
or
in
add
cmpsb
arpl
sub
push
idivl
fldt
addr16
jb
mov
xor
push
stos
jmp
pop
xor
hlt
cs
jno
divb
ja
xchg
xlat
and
nop
stos
cmpsl
pushf
gs
sub
je
rclb
imull
jmp
inc
movsb
jmp
data16
mov
xchg
fsubrl
out
test
lods
jno
pop
shrl
or
pop
inc
and
sbb
xchg
mov
dec
mov
in
mov
and
xor
cltd
push
roll
mov
fsubrs
cvttps2pi
jno
xor
jnp
arpl
mov
das
in
sbb
dec
cld
xor
jno
adc
pop
dec
aas
cmp
in
outsb
and
pop
gs
aad
jecxz
imul
push
test
pop
or
mov
cmpsb
adc
and
leave
mov
jb
aas
je
jae
je
mov
pop
cmp
add
or
add
leave
jb
push
jae
pop
inc
popf
lret
cs
arpl
jl
lcall
pushl
cld
outsl
and
icebp
inc
sar
movsb
stos
std
mov
shll
push
lods
mov
cld
bswap
movsl
mov
add
mov
stc
scas
inc
jne
cmc
push
adc
movsl
adcb
push
xor
jb
sbb
andl
pop
jp
mov
pushw
pop
test
jmp
call
jl
test
adc
fiadds
xorb
fdivrl
sbb
ljmp
rcll
mov
xchg
clc
pop
mov
dec
fldcw
inc
clc
push
sarl
mov
sub
icebp
jmp
ljmp
gs
xlat
pop
mov
xchg
shll
jae
or
jbe
inc
lret
mov
jno
sub
jg
xchg
lock
add
xor
lret
pusha
xor
test
aad
lret
loop
push
mov
cltd
leave
pushf
mul
jg
sti
pop
cs
sahf
aad
stos
icebp
cltd
leave
nop
ret
dec
mov
dec
dec
lods
out
xchg
add
loopne
and
ja
test
ljmp
pushf
push
xor
rcll
jg
sti
xlat
psubusw
jle
frstor
xchg
mov
add
pop
mov
xor
sub
inc
jbe
lret
or
int
les
cmp
jl
ljmp
imul
xchg
lods
jo
inc
fisubrs
loopne
push
movsl
cmp
test
out
mov
mov
adc
push
cmp
xor
sub
idivl
pop
in
jbe
scas
sbb
sbb
aad
mov
adc
add
addb
sbb
shrl
mov
xor
jmp
roll
sbb
xor
paddb
and
and
mov
mov
cmp
call
xchg
jne
jg
fdivrp
ss
fmull
jmp
and
scas
rcl
je
pop
add
setns
mov
push
or
jp
out
xchg
cwtl
add
roll
jg
adc
int3
pop
dec
imul
fcomp
popf
inc
adc
mov
daa
out
lahf
aas
aam
shrl
pushf
leave
lahf
loope
cmp
mov
mov
inc
jns
and
mov
out
loopne
sub
mov
sbb
fcoml
dec
repnz
sahf
jo
scas
daa
ret
loope
cmp
pushf
test
push
xchg
aam
or
jns
fistps
push
push
cmpsl
es
sbb
sbb
sub
ficoml
clc
or
loopne
addb
mov
fwait
nop
sub
jnp
gs
dec
js
adc
outsb
popf
jnp
jmp
subl
and
mov
pop
push
pop
clc
push
pop
dec
jne
cld
loopne
ljmp
push
xor
andl
mov
push
jle
out
nop
movb
dec
and
xchg
mov
sahf
das
sahf
pop
lcall
dec
fistpll
push
loope
dec
dec
andl
test
mov
push
fcmovnu
cli
loopne
push
pop
je
dec
cmp
jo
std
mov
shlb
cmpsb
into
fldt
sarb
mov
inc
lret
sub
into
inc
scas
jmp
push
into
bnd
sub
in
add
or
push
sbb
bound
mov
js
sbb
out
popf
aas
add
dec
sub
pop
and
sbb
xchg
lahf
push
jb
mov
je
sub
nop
es
orl
addr16
popa
ret
outsb
xchg
and
cltd
lret
mov
inc
dec
das
xchg
sbb
pop
pop
imul
daa
insl
cwtl
jge
push
loopne
les
les
inc
mov
orb
pop
outsl
and
jp
sbb
adc
roll
cmpsb
mov
fwait
shr
mov
mov
xchg
ja
mov
mov
gs
mov
add
and
lahf
rorl
out
addr16
repz
sbb
add
movsl
push
lds
push
das
sub
test
sbb
mov
repz
data16
push
mov
mov
jl
enter
call
pop
add
mov
stos
mov
lock
aaa
add
mov
sbb
out
add
addr16
mov
sbb
negb
loop
sub
mov
mov
adc
jge
and
jmp
mov
mov
sub
cli
add
mov
in
rcl
pop
xchg
adc
xchg
sbb
mov
sub
and
je
in
fld
mov
data16
repnz
xchg
sahf
sbb
mov
out
jae
dec
aas
fidivrs
cltd
inc
and
xor
and
test
jns
and
ret
pop
dec
xchg
mov
mov
sub
sub
inc
adc
jecxz
fistl
cs
xlat
pop
push
lods
mov
movsl
shr
push
pop
pop
and
push
xchg
add
push
loope
inc
adc
icebp
sub
and
mov
push
aam
sbb
arpl
mov
pop
shrl
scas
movsl
outsb
mov
scas
jne
xor
mov
cld
jmp
aad
decl
add
je
cmp
jge
adc
mov
in
cwtl
ret
push
sbb
aas
mov
pop
lahf
imul
sbb
scas
into
mov
add
sahf
fs
dec
sbbl
pop
insb
cltd
sbb
aaa
add
call
dec
mov
hlt
dec
mov
mov
aam
in
sub
int3
movsb
int3
adc
mov
aam
cs
ljmp
fadds
fnsave
jns
loop,pt
cli
sbb
dec
cmpb
mov
adc
daa
pop
lods
bound
pop
aam
bound
and
hlt
pushf
inc
or
sub
dec
jne
dec
adc
stc
or
xor
gs
push
sbb
nop
cmp
add
pop
xchg
fwait
xchg
test
mov
andl
lods
sbb
stos
sub
pop
xchg
xchg
mov
pop
lahf
stos
jae
push
aaa
fs
ds
dec
jb
and
push
mov
xor
sar
pop
mov
das
sbb
dec
imul
or
sbb
test
das
int
rcr
fcoms
lea
clc
xor
push
cmp
call
sub
lcall
ror
lcall
jne
into
cmp
cmp
mov
popa
sbb
sub
cmp
or
stc
mov
orb
pop
jmp
mov
lds
aam
popa
mov
push
adc
lret
mov
adc
shl
xchg
mov
xor
or
xor
sub
push
scas
pop
push
rcrb
leave
mov
add
jmp
add
mov
inc
shll
or
push
in
stos
sbb
das
sarl
pop
or
stos
add
ret
or
mov
in
pop
xchg
in
fdivl
mov
pop
cmp
jge
mov
sbb
and
fstpt
shlb
cmp
inc
je
std
push
hlt
adc
out
roll
insb
add
adc
dec
xchg
subb
je
aam
sbb
inc
xchg
mull
and
sbb
lods
lods
pop
sub
push
mov
bound
jge
cmpsb
xor
data16
pusha
adc
in
mov
fidivs
xor
push
mov
and
shll
mov
adc
push
sub
lds
xor
push
test
jae
jmp
ret
imul
shrb
dec
add
cmp
out
push
sub
xor
insl
push
decl
and
sbb
inc
into
push
fwait
push
subl
push
or
inc
pop
loop
movsb
cld
test
inc
stos
jbe
popf
jmp
mov
sbb
imul
push
scas
push
stc
test
test
mov
push
into
jb
incl
adc
cmp
dec
mov
jns
outsl
out
cmp
lret
loopne
and
jge
cltd
mov
into
jl
pusha
xor
sub
out
rcrl
and
lock
popw
fdivs
jmp
addr16
aas
aas
inc
mov
sti
xchg
xor
add
sub
lret
insl
scas
sbb
scas
popl
data16
and
sbb
fucomi
scas
mov
or
push
dec
ja
loope
xchg
mov
mov
rcrl
nop
or
xor
lahf
ficoms
cmp
pop
and
jmp
lods
roll
imul
lock
mov
test
jecxz
insb
cmp
push
repnz
bound
ss
lret
out
daa
dec
hlt
imul
ljmp
jmp
jecxz
xor
sbb
aad
jmp
stos
icebp
pusha
add
cld
hlt
repnz
lahf
sti
inc
or
popa
mov
push
faddl
add
in
rcrl
jl
bound
js
push
sbb
int
push
and
mov
sbb
push
or
inc
notl
outsb
sarb
cld
mov
aas
fdivl
sub
mov
push
jle
aaa
xor
sahf
xchg
pop
and
sbb
mov
xor
lods
mov
sub
pop
jecxz
insl
mov
pushf
dec
les
adc
and
out
scas
insb
xchg
hlt
mov
and
and
xchg
xchg
jl
jae
inc
pusha
pusha
fwait
add
cmp
ret
xor
jecxz
stos
movsl
mov
mov
mov
sub
mov
icebp
in
lahf
shlb
push
loop
and
pop
subb
push
out
push
fwait
mov
jns
cmp
andb
scas
or
std
pop
add
xor
push
ljmp
jns
popf
push
fbstp
or
jg
nop
mov
pop
adc
dec
sub
cmp
loopne
aaa
ficoml
inc
mov
push
out
inc
sbb
cwtl
shr
xchg
les
call
cli
sub
rcrb
cld
or
fwait
dec
cmp
adc
jnp
xor
add
or
jno
mov
in
sbb
fistpl
out
test
pop
and
or
jl
stc
fdivr
dec
push
cmpsl
push
pop
adc
xor
stos
scas
mov
movsb
out
sbb
push
or
dec
jae
cmc
lcall
adc
sub
mov
mov
insb
mov
rep
pop
jecxz
out
sahf
cs
addr16
call
pop
clc
rol
inc
jnp
addr16
mov
mov
inc
iret
loope
mov
push
push
mov
sbb
movsb
push
push
lods
xor
sub
frstor
rorl
imul
inc
loope
mov
mov
idiv
int3
sahf
inc
jge
dec
add
bswap
pop
pop
mov
sbb
xchg
push
sti
adc
in
mov
pop
fmull
mov
fwait
dec
sub
or
pop
rorl
or
mov
mov
addl
and
movsb
pop
das
fwait
out
test
shufps
shlb
mov
mov
mov
out
stos
aad
push
fnstcw
lods
push
les
ret
sbb
call
and
add
jle
mov
test
fdivrl
sub
jp
sub
ss
sarb
jnp
push
and
sbb
push
movsb
mov
insl
ljmp
mov
mov
pop
cmpsb
cltd
cmpsb
rcl
test
jl
out
or
push
sub
insb
pop
mov
test
inc
rcl
cmp
fs
mov
pop
jecxz
nop
fmul
and
sbb
pop
xchg
push
push
push
jno
cmp
xchg
xchg
adc
sub
pop
push
arpl
pop
push
in
xchg
sbb
or
dec
fdivrs
inc
sub
mov
out
add
cltd
dec
jne
xor
lods
add
push
fisttps
cmpsb
cmp
fists
adc
movsl
pop
pop
xor
lcall
push
cmc
xor
cltd
add
xorl
mov
sbb
xor
lods
adcl
lret
mov
push
xchg
mov
adc
fimuls
mov
lods
mov
and
dec
aam
xchg
in
push
cmp
mov
mov
inc
jbe
movsl
jb
jmp
mov
xlat
leave
dec
shlb
mov
mov
lret
push
xchg
int
mov
dec
test
mov
pop
das
and
nop
das
ss
push
xchg
fists
popl
jb
test
ljmp
mov
mov
repnz
adc
int3
lret
xchg
in
mov
cmp
adc
jb
repz
clc
stos
pusha
cmp
stos
dec
push
mov
leave
mov
mov
lahf
pushf
es
movsb
mov
or
fisubrl
test
inc
pop
xor
sub
mov
mov
sahf
lret
lock
sbb
xorb
js
jne
jecxz
lea
jmp
out
shll
adc
push
jge
imul
sub
rcr
dec
sbb
pop
xchg
outsl
mov
test
lea
jbe
sarb
and
xor
imul
les
je
sbb
dec
scas
push
aam
mov
sbb
mov
in
push
scas
cmpsb
adc
pushf
jbe
fwait
dec
ljmp
mov
loope
pop
gs
sarl
sub
xchg
lahf
mov
mov
test
add
dec
out
shlb
sub
aaa
stos
mov
adc
and
arpl
imul
mov
sti
faddp
push
out
inc
mov
push
mov
sbb
je
lahf
pop
sbb
fadd
shrb
adc
cs
lods
stc
mov
int
sub
into
insb
xlat
add
in
test
mov
xchg
mov
mov
xor
adc
mov
pop
push
fsubp
and
cwtl
jno
int
pop
lcall
fdivp
scas
xlat
leave
jno
jmp
mov
cmp
push
mov
jnp
les
addr16
cltd
jmp
cwtl
jmp
mov
xchg
jae
aas
in
cmpsl
or
lock
mov
in
icebp
mov
cltd
xchg
sbb
cwtl
loopne
lret
pop
and
shll
xchg
enter
roll
arpl
pop
lea
jecxz
cmp
jecxz
jge
xor
cltd
xchg
cmp
repz
ret
jae
cmp
or
xchg
mov
lret
and
fwait
in
cmpsb
icebp
ljmp
mov
xchg
popf
jmp
inc
inc
sbb
ss
fimull
filds
push
repnz
push
neg
sbb
nop
stos
cli
jg
gs
adc
cmovs
hlt
xor
and
shl
fldt
shrl
jb
sti
dec
dec
xchg
aaa
stos
jl
sbb
insl
mov
lahf
hlt
jle
nop
pop
mov
dec
loope
xchg
mov
push
push
decb
int3
xchg
popf
jecxz
in
push
aam
pop
addr16
cwtl
movsb
enter
jge
sub
xchg
insb
xchg
fcom
xor
xlat
mov
mov
mov
lods
outsl
incl
arpl
arpl
pop
dec
rorl
sahf
mov
outsl
sarb
cmpsb
sub
arpl
adc
jmp
int
movsb
push
aad
jmp
cwtl
lock
movsl
inc
add
fidivs
inc
rolb
jmp
sub
sbb
cli
sbb
jle
in
fwait
pop
out
aad
or
mov
cmpl
dec
mov
dec
push
and
dec
sub
ljmp
and
xchg
jnp
fsin
dec
pop
adc
cmpsb
adc
mov
out
repnz
dec
cmpsb
clc
adc
adc
stos
push
mov
jle
cmp
or
stos
idiv
js
jecxz
mov
xor
and
fistpl
dec
xchg
nop
and
popa
inc
sub
int3
add
adc
test
mov
lcall
xchg
inc
pop
cmpsl
jb
cmpsb
adc
aaa
xchg
push
push
jne
jle
out
sub
rorl
mov
or
repz
jg
hlt
mov
mov
mov
fnstcw
inc
inc
out
call
jmp
das
dec
and
dec
or
shlb
add
addr16
adcl
lret
inc
and
mov
popa
sbb
mov
dec
jg
push
mov
dec
mov
rcrl
xchg
xchg
xchg
cmp
jg
or
pop
cmpb
push
lea
stos
fs
mov
add
inc
adc
repnz
outsl
jne
adc
fadd
cmc
call
dec
xor
out
sub
adc
filds
loop
cmpsb
add
or
xor
insl
pop
jb
mov
or
negl
fwait
mov
jae
push
mov
cli
bound
push
lcall
lcall
mov
jecxz
mov
insl
push
aas
clc
xchg
repnz
gs
pusha
sub
fwait
xlat
cmp
dec
enter
sbb
pop
sti
sti
stc
arpl
frstor
xchg
push
repz
xchg
in
pop
push
push
mov
movsb
pop
sub
push
mov
mov
push
ror
cmp
int3
pop
xchg
cmpsl
add
or
jecxz
mov
cmc
ljmp
add
fs
test
pusha
out
xchg
dec
hlt
push
mov
xchg
push
incb
cmc
mov
cmp
js
xchg
call
mov
cli
mov
jge
fidivrl
pop
filds
sub
subl
and
dec
and
pop
ljmp
xchg
push
stos
ret
inc
adc
nop
dec
xchg
int3
mov
test
add
pop
jp
imul
inc
daa
mov
aas
ja
ds
pop
sub
outsl
jns
in
jg
pop
add
sub
lock
adc
incb
sbb
rcr
mov
inc
push
push
test
stc
ret
fadds
cmpsb
and
adc
lahf
and
in
xchg
into
push
jne
jge,pn
push
inc
inc
clc
popa
inc
push
inc
pop
enter
sbb
push
or
jmp
fstl
cmpl
imul
and
pop
idiv
inc
lods
int3
mov
jns
test
repnz
mov
in
xor
xor
shr
or
into
testb
in
or
and
pusha
nop
ljmp
hlt
mov
aaa
dec
arpl
imul
push
mov
or
and
adc
clc
dec
lret
cmp
dec
push
movsl
loopne
into
sbb
jnp
arpl
lahf
loopne
test
cmp
addr16
lcall
sahf
out
cltd
movsl
add
push
add
xchg
lret
xchg
xchg
mov
or
insl
pop
mov
je
movsb
push
testl
add
sbb
mov
inc
jl,pt
ss
and
test
jb
lcall
mov
jno
lret
popf
repz
sub
xchg
repz
jae
or
loope
int3
cld
in
imul
sub
pop
xlat
cmpb
cs
dec
jecxz
xchg
sbb
arpl
dec
push
scas
in
sub
lods
sbb
inc
fimuls
push
push
popa
ja
mov
push
pop
pop
ds
add
xor
pop
dec
popf
mov
lcall
in
or
mov
xor
out
sbb
xchg
sti
hlt
inc
std
or
add
inc
sbb
pop
shrl
cmpsl
jns
xchg
sarl
or
push
sub
jmp
mov
lods
and
leave
and
cmpsl
out
fiadds
sub
push
aas
jge
sbb
adc
lods
lahf
mov
mov
pop
mov
std
test
add
sbb
mov
arpl
jp
xchg
inc
cmp
ss
fsubrl
dec
roll
mov
es
js
or
fdivl
xchg
sti
sbb
jns
addr16
sbb
es
roll
add
mov
pop
call
cmp
es
ljmp
faddl
jno
add
pop
xor
pop
cmp
cmpsb
xchg
dec
les
popa
sub
dec
pop
pop
mov
ret
fisubs
into
mov
outsb
adc
push
inc
add
in
mov
cs
mov
out
into
and
add
dec
stos
fs
les
in
and
dec
bound
dec
jae
lahf
jl
add
mov
sub
jp
mov
outsb
popa
mov
push
or
shll
xor
lcall
dec
adcl
or
xor
test
jno
add
and
mov
add
es
movsb
test
fs
stc
ret
cltd
pop
add
pop
mov
mov
xor
lret
mov
jl
fiaddl
lret
jo
insl
negb
fstpl
sub
dec
sub
push
sub
pop
cli
and
xchg
and
xchg
bound
push
adc
inc
dec
jp
mov
cld
out
addb
rorl
bnd
sub
fs
push
andl
imul
or
inc
sti
cmp
or
int
imul
or
add
lea
into
incb
hlt
ret
repz
notb
lods
mov
add
sbb
call
cmp
mov
out
mov
dec
or
popf
mov
gs
sbb
fs
and
aaa
dec
or
repz
or
dec
rol
mov
xor
adc
push
movsb
adc
sar
push
aas
or
add
enter
push
das
fmull
jbe
daa
mov
cwtl
cmc
clc
insb
shll
mov
scas
aad
mov
or
cmp
mov
andb
ss
xor
pop
cmp
and
ljmp
mov
decl
imul
inc
xlat
lcall
lea
jmp
mov
lahf
inc
andl
es
imul
cmp
xlat
push
fs
jnp
push
sub
jb
insb
scas
cld
mov
cwtl
and
sub
sahf
arpl
lea
push
pop
and
push
and
add
repz
aaa
cmc
inc
iret
cmp
aad
and
jle
pop
or
sahf
es
ret
xchg
ds
xor
dec
mov
test
dec
jecxz
rcll
sbb
adc
and
inc
into
pop
aaa
xchg
pop
loopne
dec
mov
out
out
cmp
ljmp
inc
or
lea
mov
sbb
out
clc
mov
in
popa
or
test
shrl
ja
adc
dec
loopne
ss
leave
pop
sbb
lods
jmp
adc
test
push
or
push
orb
adc
push
movb
push
or
outsl
or
sarb
nop
dec
jb
push
mov
sti
jle
fnstcw
imul
cld
push
rolb
mov
gs
adc
rolb
push
ss
stos
dec
loope
mov
mov
jl
mov
shr
push
fs
int3
notl
pop
push
or
fwait
clc
pop
data16
leave
mov
push
int
inc
inc
ror
mov
stos
jnp
push
add
or
lcall
add
xlat
mov
adc
es
int3
sub
scas
lods
testb
lea
sub
adc
xor
inc
mov
addr16
push
popf
in
lods
push
pop
in
pop
sub
cmp
push
test
pop
mov
jb
aas
pop
es
inc
loope,pn
jne
call
xor
lods
mov
and
xchg
xchg
cmp
addr16
mov
mov
jno
sbb
pop
cmpsb
dec
loopne
sbb
jb
add
cwtl
mov
andb
xchg
fbstp
or
pop
xor
mov
and
mov
movsl
fldl2e
repz
das
adc
sub
sub
add
cmp
pop
popf
jge
cmp
push
cmp
pusha
add
xor
les
push
rol
imul
in
push
fidivrl
adc
rcll
fcoml
push
int
xchg
leave
in
dec
jg
inc
adcl
outsb
mov
cmp
mov
jb
mov
pop
jne
popf
and
push
rclb
sbb
cwtl
fistps
ret
out
push
adc
repnz
ret
jl
push
jmp
or
jnp
or
cld
jle
lods
adc
push
push
sub
lock
mov
add
jne
xor
stos
gs
lds
hlt
cld
out
popa
mov
pop
xchg
out
add
test
int
test
dec
pop
mov
pop
push
adc
and
outsl
add
les
inc
jl
addr16
mov
cmc
sub
out
add
in
fwait
leave
into
icebp
fisubl
or
lea
inc
mov
push
pushf
xor
cmpb
pop
jb
sub
aad
sbb
scas
rep
test
cltd
lods
jmp
xchg
mov
mov
inc
insl
pop
icebp
push
mov
pop
popf
sbb
dec
pop
xchg
xchg
mov
add
rorl
dec
push
out
xchg
shlb
jp
jmp
mov
pop
notl
movsb
mov
adc
adc
cmp
into
movsb
stos
rol
add
je
push
mov
push
gs
push
mov
or
push
in
sti
sahf
aaa
cmp
push
pop
je
mov
and
cmp
cld
gs
xor
enter
xchg
sbb
jno
dec
mov
xor
shrl
mov
xchg
xor
push
xlat
rolb
add
xor
adc
leave
mov
fs
xchg
stos
dec
sbb
dec
mov
jmp
outsb
shll
pop
sub
xlat
push
int3
lock
xor
jb
lock
into
nop
test
or
mov
pop
pop
lea
mov
mov
dec
ret
pop
sub
jecxz
popf
cmp
int
push
sub
jmp
jno
mov
jno
out
fs
in
adc
cmc
add
adc
sub
mov
mov
xlat
xchg
sbb
shll
dec
jo
sahf
iret
adc
stc
rolb
jnp
push
pop
xor
sbb
imul
nop
mov
outsl
mov
iret
push
dec
mov
xchg
adc
pop
sbb
cmp
movsb
gs
or
loope
inc
mov
jmp
outsl
call
aaa
inc
or
in
mov
fistl
dec
add
xchg
loop
mov
or
inc
add
aam
bswap
sti
div
into
inc
lret
inc
std
imul
xchg
in
jno
dec
rorl
push
mov
je
mov
cwtl
cwtl
mov
sub
sahf
frstor
loopne
rclb
push
stos
xchg
fisubrs
push
fidivrs
frstor
push
mov
sbb
movsl
ret
dec
rcl
dec
or
mov
lcall
popf
push
clc
cmpb
and
lods
mov
into
loope
lret
scas
stos
in
notb
movl
push
pop
insl
dec
clc
cltd
in
test
es
cmc
dec
pop
sbb
cmp
mov
sti
push
pop
jo
adc
cli
push
mov
outsb
sub
or
lret
shrl
stc
iret
scas
dec
sarl
mov
sub
rcrl
divl
enter
ret
test
push
jmp
in
les
and
adc
mov
and
out
idiv
push
mov
cmpsl
in
sbb
add
loope
jne
sub
dec
mov
push
xchg
xor
fcom
pop
dec
rorl
sub
xchg
pushf
das
cmp
pop
daa
adc
jo
or
add
repz
in
ja
les
push
mov
sub
aas
arpl
or
popf
enter
int
xchg
test
sub
std
mov
push
mov
inc
xor
and
lock
push
pop
jg
fwait
pop
mov
aas
inc
sahf
filds
add
sti
ret
sbb
or
dec
sbb
sbb
mov
scas
idiv
js
getsec
push
inc
cli
or
sbb
call
dec
or
cmpsb
fbld
jge
scas
pop
ret
data16
loopne
xor
cmovno
leave
popa
dec
xor
fstl
push
dec
push
shr
data16
jns
pop
pop
mov
aam
pop
cmpl
cmp
je
lret
bound
mov
and
scas
cmp
add
jmp
mov
pop
lret
outsl
mov
and
adcl
and
loope
sub
or
adcl
movsl
mov
and
pop
mov
roll
jnp
push
push
addr16
lahf
out
xor
adc
out
orl
ljmp
dec
cmp
lcall
xchg
cmp
pop
xchg
xor
cmp
test
and
shrb
mov
loop
or
inc
test
icebp
push
xor
push
dec
sarb
mov
or
in
ss
test
movb
adc
int3
add
stos
fldl
adc
scas
adc
das
pop
enter
inc
sub
or
mov
loopne
ja
pusha
outsb
gs
out
pop
push
inc
adc
sbb
jb
data16
lods
mov
cmp
or
pop
sub
inc
pop
lret
mov
xor
data16
out
cmp
scas
jbe
push
test
sbb
and
xchg
sbb
insb
push
add
push
leave
mov
sbb
cld
add
ljmp
into
and
sub
cmc
out
jbe
inc
std
jbe
dec
dec
gs
cmc
and
jb
in
shl
mov
mov
into
jae
call
or
cmp
ror
aam
jno
lds
repnz
fs
xchg
aam
popa
cld
sub
ljmp
ljmp
add
push
xor
adcb
cmp
push
das
xchg
xchg
push
cmc
xor
outsb
mov
fldt
test
out
mov
ret
call
add
dec
mov
xor
xchg
jl
cwtl
test
jbe
inc
push
fs
lret
or
pop
les
icebp
xchg
push
ljmp
lods
xchg
mov
ficompl
mov
in
subl
dec
jmp
loop
mov
imulb
imul
or
rorl
pop
dec
adc
stc
jg
clc
aaa
push
sbb
sbb
pusha
mov
in
cmpsl
push
pop
loopne
rcrl
fneni(8087
shrb
jg
dec
hlt
sbb
icebp
int3
adc
clc
xor
mov
maxps
cmpsl
jo
pusha
movsb
adc
or
add
adc
xor
movsb
ret
loopne
mov
shlb
into
push
add
cmpsb
push
std
push
xadd
cmpsb
mov
call
jae
das
or
insl
notb
add
rorb
cli
inc
and
dec
or
mov
fimull
shl
mov
sbb
mov
mov
cmc
cld
jl
xor
push
mov
testl
push
or
popl
aas
jb
adc
cmp
mov
xchg
add
out
sarb
and
sbb
xchg
sbb
sub
imul
pushf
mov
sarb
and
xchg
iret
sub
ljmp
outsb
adc
cltd
mov
das
xor
push
rol
shrb
push
adc
sbbb
sbb
inc
dec
push
jno
mov
ret
je
cmpsb
or
jg
ss
fcomps
in
ljmp
jb
and
push
mov
or
pop
mov
jbe
xchg
xchg
clc
leave
imul
xchg
les
jnp
int
jg
dec
fnstenv
mov
sub
bound
icebp
xor
scas
mov
mov
outsb
imul
popf
scas
dec
cmp
mov
dec
test
int
mov
fdivr
std
cmp
in
pop
mov
cld
js
jle,pt
cmp
push
mov
jmp
data16
xchg
cltd
sbb
movsl
dec
ja
icebp
cmpsb
mul
in
mov
cs
mov
push
push
popa
add
aaa
pop
clc
fsubrl
test
pop
push
pop
sub
rorl
gs
or
sub
inc
dec
imul
dec
add
std
mov
test
adc
mov
pop
sbb
loopne
cli
and
js
inc
inc
pusha
iret
rcrb
mov
push
popf
dec
pop
mov
pop
test
add
dec
loopne
jle
lret
out
cmp
sbb
shrl
ljmp
push
cmp
dec
or
aas
std
jo
pop
icebp
mov
and
and
inc
cmp
into
ficompl
xor
mov
dec
mov
lcall
lret
cmpsb
add
ds
push
es
push
rorl
push
sub
in
lcall
or
xor
inc
adc
test
add
pop
push
xor
add
or
loop
int3
aad
pop
orb
lret
and
sub
std
add
xor
mov
out
push
add
xchg
xor
nop
xchg
sub
out
mov
xor
pop
mov
shlb
jnp
dec
popf
dec
mov
jge
and
sub
ficoms
xchg
mov
shll
cmp
sti
outsb
out
in
test
ds
fsub
ja
mov
arpl
and
jne
pop
xor
loope
call
push
scas
mov
sti
xchg
ja
test
hlt
add
cmp
mov
aam
jne
inc
dec
fnstenv
jge
jl
mov
sub
push
jle
mov
daa
lock
push
push
add
stos
xor
sbb
movsb
push
fsubrl
je
inc
sbbb
dec
xchg
fidivs
xchg
loopne
int3
jmp
out
sbb
cltd
fs
in
inc
pushl
sbb
jb
sbb
leave
ficoms
mov
je
mov
push
roll
push
popa
sub
mov
xlat
jo
nop
rcll
cli
mov
cwtl
and
cmpsl
xchg
add
mov
fsts
add
inc
inc
push
std
out
shrb
pop
cltd
jle
mov
inc
lret
inc
ljmp
xor
mov
push
cs
loope
inc
lods
mov
ljmp
stos
pop
sbb
adc
add
out
out
movl
mov
push
xor
mov
jle
fs
pushf
lcall
ret
lcall
or
sbb
jecxz
cmp
repnz
fisubl
xchg
nop
repz
mov
add
rcrl
cltd
add
shr
mov
push
jno
lock
daa
cld
push
js
mov
in
pop
adc
fwait
adc
stos
pop
push
lret
sbb
sahf
jae
pop
into
fcmovb
pushl
xchg
jp
cmp
std
pop
aaa
aad
sbb
outsl
cmpsl
fcomi
and
test
lret
fldenv
push
hlt
leave
mov
mov
adc
jae
ljmp
ja
repz
or
test
lods
cltd
insb
xchg
or
inc
push
in
push
lods
into
pop
sub
push
test
inc
and
lahf
push
inc
rcrl
sub
pop
es
int
lods
add
mov
test
fimull
jbe
gs
jl
xor
xchg
aam
push
rol
lret
pop
add
jmp
xchg
or
std
enter
cmp
inc
xchg
xlat
cmp
jmp
jp
adc
int3
xchg
insb
fwait
mov
sbb
dec
aas
rorl
inc
push
ds
add
addb
sub
insl
sub
mov
mov
jmp
mov
ficompl
in
clc
outsl
test
push
mov
fists
push
ficoms
ja
or
inc
loop
push
jg
popa
fsubrs
pop
in
fadd
js
xlat
push
iret
lea
mov
xor
push
xchg
and
je
xor
js
and
jb
mov
shr
addl
sahf
es
inc
mov
jo
mov
loope
in
dec
push
or
pmulhw
cltd
outsl
dec
mov
cld
cmp
dec
jle
sbb
mov
xchg
fs
xchg
jecxz
or
notb
mov
and
arpl
sub
inc
mov
sbb
bound
push
pusha
out
shlb
lret
cmpsb
movsb
mov
fmull
cld
lods
cmp
out
sbb
aad
mov
mov
push
icebp
push
lahf
fisubrl
jp
outsl
push
stos
rorb
mov
sarl
das
xchg
idivb
push
jo
int
mov
adc
add
xlat
mov
test
sbb
cwtl
jg
not
shlb
xchg
xor
fwait
jno
lds
inc
aas
pop
and
jne
mov
and
sbb
cld
inc
aad
aam
in
addr16
mov
sub
inc
out
mov
fnstenv
aam
mov
jno
out
ds
push
jle
into
dec
cmp
inc
insb
iret
mov
ja
ljmp
in
leave
negb
enter
xor
mov
xchg
adcl
mov
inc
cmp
out
sbb
outsb
pop
fdivs
aam
pushf
addr16
es
cltd
lods
or
fiaddl
daa
adc
or
xor
in
pop
jl
nop
div
inc
mov
adcl
je
push
in
mov
lods
push
mov
add
lea
ja
mov
jne
xchg
popf
and
dec
push
inc
mov
xchg
popf
sarl
je
repnz
lock
idiv
xchg
push
imul
pushf
jbe
mov
sbb
push
addr16
shll
loop
sbb
mov
or
enter
dec
inc
icebp
jae
insl
nop
or
sbb
inc
jmp
jo,pt
dec
inc
xor
mov
cmp
in
jecxz
ss
sbb
mov
js
jmp
mov
js
push
cmp
pusha
jecxz
test
and
pop
add
stc
adc
icebp
push
sbb
inc
stos
cli
add
mov
jbe
xchg
test
jno
and
in
nop
int
out
xor
lret
mov
jecxz
cmp
add
pop
mov
out
sarl
cmp
xchg
xor
xlat
mov
sub
pop
les
mov
test
adc
outsl
sbb
xchg
sbb
outsl
arpl
adc
call
adc
lds
add
dec
mov
inc
pop
mov
int
add
or
cltd
cmp
xchg
and
shll
or
pop
sahf
jmp
push
adcb
iret
and
int3
xor
int
je
push
js
mov
adc
sub
and
inc
pushf
fldenv
xchg
mov
stos
adc
or
jp
repnz
xchg
out
ljmp
and
dec
mov
mov
testl
jl
leave
addr16
nop
add
add
mov
test
rcll
xlat
outsb
loop
inc
jne
mov
push
push
pop
xor
aaa
xor
in
lods
insl
hlt
and
jmp
push
mov
add
xor
push
iret
lahf
adc
jp
daa
mov
lods
out
das
mov
nop
call
js
arpl
pop
hlt
jmp
imul
stos
push
in
rorb
divl
movsl
mov
addr16
xchg
mov
mov
mov
gs
enter
mov
adc
in
rorl
cmpsb
das
int3
ret
mov
mov
mov
cmpsb
cmp
xor
sub
addr16
inc
cli
repz
inc
xlat
sbb
xchg
or
test
pop
ret
fcomps
pop
imulb
xor
outsb
sti
mov
cmp
mov
call
xor
jb
xchg
test
and
aad
add
jmp
es
fcompl
adc
push
push
out
insb
lret
push
cmpsb
mov
inc
insb
lea
outsl
ss
jmp
lds
dec
jo
mov
nop
into
dec
mov
sub
jns
sbb
push
ret
sbb
loope
dec
in
call
dec
mov
push
hlt
mov
sub
shll
repnz
lcall
mov
push
pop
add
push
mov
in
add
dec
jb
movsl
lahf
cmp
jmp
out
gs
dec
out
imul
movsb
or
in
imul
xor
iret
add
jg
imul
xchg
ficoml
mov
int
ret
add
add
pop
sub
ret
dec
dec
xor
imul
clc
sub
and
mov
push
ljmp
outsl
jle
and
mov
imul
pop
pop
out
ljmp
rcrl
mov
loopne
lds
sub
pop
bound
fsts
sbb
dec
cli
std
pop
das
test
cmpsl
xor
cmp
sbb
cli
cmpsl
add
mov
mov
xor
sub
or
sbb
aaa
mov
data16
dec
or
inc
adc
stc
ret
cs
sbb
in
add
mov
mov
cmpsb
add
scas
adc
lret
out
std
aas
mov
aad
filds
mov
xor
lods
dec
mov
dec
jnp
dec
or
scas
stos
ss
enter
sahf
inc
push
clc
lock
inc
pop
jg
aas
rcrb
pop
aam
add
sub
jbe
inc
inc
and
insb
or
out
dec
sbb
push
sbb
in
ror
jle
pop
and
jge
in
pop
int3
inc
xchg
pushf
push
imul
adc
pop
sahf
xor
sbb
lods
sub
mov
fistpll
jne
ret
ss
shl
pop
imul
push
test
ret
and
out
xlat
mov
sahf
mov
sbb
cmp
addr16
pop
lcall
xchg
inc
and
mov
std
adc
pop
ljmp
and
mov
out
lds
mov
fs
xor
hlt
jb
xor
pushf
mov
outsl
popa
pop
mov
or
inc
mov
mov
xlat
fs
push
aaa
outsl
jae
jb
cmp
or
mov
gs
pop
and
add
outsl
push
imul
mov
jns
std
rclb
mov
cltd
in
outsb
pop
add
or
aam
inc
dec
insl
cld
shlb
imul
prefetcht2
mov
mov
aas
int
das
add
push
jge
add
and
stc
mov
stos
push
das
or
push
scas
hlt
cwtl
cltd
adc
add
mov
movsl
or
loop
and
lock
push
repnz
jb
push
shll
lcall
into
or
fsts
cwtl
pop
push
xchg
sbb
enter
mov
or
repnz
fisubrl
adc
out
ret
test
adc
cmc
ret
mov
jge
xor
sub
popa
mov
inc
shl
out
pushf
xor
into
popf
mov
cmp
cmp
pop
lahf
in
mov
adc
push
cmpsl
xchg
lea
stc
and
pop
jne
repnz
cwtl
hlt
cmc
in
fadd
mov
push
mov
out
sub
or
xor
mov
mov
jno
pusha
testb
scas
mov
imul
sub
adc
or
in
cltd
fisttpl
insb
dec
mov
cmp
dec
or
push
and
inc
or
mov
orl
stc
pushl
sbb
lcall
push
mov
pop
aam
int
test
inc
inc
sarb
loope
out
mov
mov
push
popa
popf
dec
outsb
dec
in
push
and
push
mov
push
aas
outsl
jb
mov
push
pop
jg
mov
mov
enter
xor
sub
jecxz
cmp
fs
leave
sub
and
inc
clc
leave
mov
dec
xor
adc
pop
jns
jno
in
xchg
inc
aaa
test
jecxz
inc
sarb
es
iret
jne
adc
leave
addr16
mov
std
jnp
mov
xchg
out
jne
inc
fstpt
jne
pop
pop
fcoms
mov
bound
repz
cmc
push
jne
imul
mov
and
cmp
mov
sbb
xchg
hlt
mov
nop
mov
lea
gs
sahf
mov
adc
mov
movq
xor
or
jg
scas
fs
dec
fwait
mov
cltd
xchg
test
xchg
cli
push
xchg
cmp
add
shll
xlat
push
push
es
out
inc
add
push
mov
or
aam
outsb
pop
push
repz
ret
xchg
sub
cmp
ficomps
cmpsl
ja
dec
shl
or
push
clc
imul
das
cmc
rep
push
movsl
test
insl
mov
cli
jmp
add
xchg
jo
cmp
out
lcall
mov
dec
outsl
dec
mov
lret
push
push
mov
fisubrs
test
cli
arpl
movsb
push
inc
xor
push
inc
repnz
outsl
cmp
dec
in
ret
pop
cmp
xchg
lret
fs
xlat
fsts
inc
pushl
mov
xor
pop
or
arpl
ret
jl
dec
cltd
add
xor
pop
movsb
ss
daa
mov
jmp
dec
sbb
jns
pushf
test
mov
rcll
push
outsl
mov
idivl
cltd
cmp
mov
and
insl
xor
push
and
xorb
sti
imull
and
jo
lcall
pop
jb
cmp
and
mov
out
andb
mov
cs
call
bound
pop
rcll
jp
jmp
sbb
or
pusha
rclb
notb
pop
sahf
mov
std
insb
neg
subb
test
sub
jle
sbb
mov
cwtl
dec
sbb
or
jns
cmpsb
push
adcb
xor
outsb
xor
das
inc
ja
xorb
mov
loopne
mov
cmc
js
aam
bound
mov
xchg
negb
inc
and
hlt
sbb
sbb
xchg
outsb
es
nop
mov
xchg
in
leave
inc
sbb
mov
loop
xchg
dec
fsts
std
or
mov
inc
imul
movsl
call
stc
imulb
gs
das
popf
push
out
adcb
add
and
inc
inc
mov
mov
mov
pop
aam
insb
add
in
popa
dec
in
inc
test
or
add
fimull
push
sbb
std
push
mov
movsl
shl
into
mov
jmp
sub
dec
xchg
xor
xchg
add
dec
clc
jno
sub
sub
cwtl
cmp
psubusb
mov
xor
or
mov
cmc
jno
out
jb
stc
enter
push
jle
push
nop
icebp
ret
into
mov
xchg
jmp
orb
inc
repnz
nop
add
add
jmp
cmc
pop
inc
xchg
out
push
das
and
dec
fcompl
pushf
lods
cmp
aad
add
sbb
lret
mov
sub
fmull
adc
daa
daa
aas
outsb
sub
aas
push
xchg
mov
lods
push
sub
repnz
lds
enter
cltd
fs
adc
das
rclb
fldt
cld
loope
mov
sub
insb
pop
stc
test
push
rcll
outsb
test
mov
inc
lods
and
sub
jo
pop
and
or
daa
inc
in
out
sub
lock
fstps
int
imul
cwtl
or
sub
shl
mov
and
sbb
jo
sbb
ja
arpl
mov
scas
in
xchg
int
inc
lds
cmp
rolb
push
test
lods
arpl
cwtl
fidivrs
insl
sti
jmp
mov
dec
nop
fldenv
inc
xchg
fimuls
xchg
repz
aad
jmp
jbe
or
lret
decl
sahf
or
imul
lret
mov
xchg
int
orb
sub
push
push
mov
adc
xchg
imul
lcall
cmp
bound
test
fidivrl
lods
jmp
insl
out
divb
out
sub
mov
ss
sbb
push
cmpl
fldt
iret
roll
test
push
inc
fnstsw
sbb
mov
out
and
jae
pop
ja
add
pop
popa
add
hlt
ret
jl
mov
mov
xchg
mov
jmp
pop
jbe
mov
mov
jbe
enter
out
adc
int
sbb
sbb
inc
or
cs
loope
jmp
icebp
insl
and
adc
scas
in
rcrl
pop
or
mov
cli
scas
mov
jecxz
pusha
inc
mov
out
jbe
push
fucomi
daa
mov
and
iret
mov
jle
sub
not
pop
cmovs
adc
das
fidivs
clc
outsb
pusha
clc
add
mov
stos
sub
sub
cmpsl
mov
mov
mov
pop
cwtl
in
mov
sbb
xor
movsl
aas
imul
jns
pop
cmp
jg
add
popa
repnz
xchg
roll
and
inc
jle
mov
jg
in
pop
push
lret
test
in
sbb
dec
lock
and
das
dec
mov
test
fwait
dec
sbb
mov
sub
lahf
ss
push
dec
push
inc
sbb
bound
inc
inc
divl
sub
pusha
stc
mov
into
xchg
addr16
int
push
divb
dec
adc
std
test
or
cld
dec
sub
jb
stos
nop
xor
push
bound
stc
add
nop
mov
add
jae
daa
jg
or
negl
xor
cwtl
popf
xor
xchg
mov
or
test
pop
add
in
ja
adc
movsl
sbb
psrlw
and
inc
loopne
mov
or
jmp
adcl
test
cmpl
mov
pop
jle
arpl
in
xor
neg
out
loopne
and
sbb
sub
insb
fmul
movsb
or
inc
sbb
cld
push
outsb
and
dec
js
xchg
dec
je
cmp
cmp
iret
jecxz
and
popf
bound
xor
xor
jge
or
xor
imul
dec
rorb
std
sub
insb
xchg
adc
push
jp
bound
lea
out
out
hlt
mov
adc
fs
loope
push
movsb
xor
mov
and
fucom
pop
mov
and
cmpl
inc
cmpsb
cmp
sub
sti
rep
gs
push
cwtl
int
xchg
xor
and
mov
fnstcw
fcoms
shlb
aam
jae
dec
sbb
test
call
cmp
cmp
rcrb
dec
cmc
xchg
loopne
jne
into
int
inc
jg
div
push
imul
aam
pop
push
push
add
fldcw
mov
lods
leave
lds
inc
test
cmpsb
jmp
jns
push
repz
les
and
sbb
jns
cltd
cmp
push
ds
xchg
xchg
xchg
sub
lret
jecxz
mov
push
sub
ret
inc
adc
lea
jae
xor
mov
ds
or
movq
mov
notb
int3
lock
movsb
push
cmp
clc
mov
pop
and
ja
mov
push
sbb
xor
dec
or
jl
sub
xchg
repz
fmuls
fldcw
mov
mov
cmc
mov
andb
dec
adcl
cli
daa
lea
and
sbb
testb
mov
mov
dec
out
pushf
push
jae
mov
xlat
fdivl
push
repnz
inc
sbb
pop
pop
cmp
mov
dec
sub
js
fildll
push
mov
pop
outsl
cmp
xchg
push
movsb
lahf
lret
adcb
cwtl
cltd
xrelease
xor
shll
sbb
or
int
jae
dec
mov
mov
jbe
das
rcl
scas
mov
cmp
mov
mov
xor
mov
pusha
sub
pop
adc
lahf
mov
mov
dec
lock
xchg
inc
jmp
mov
dec
jno
lcall
in
cmp
mov
adc
mov
mov
insl
test
js
sbb
and
fstpt
jge
ret
sbb
push
xchg
add
movsb
inc
jg
mov
sti
movsb
adc
push
mov
mov
push
and
xor
or
xchg
sbb
fldl
out
lahf
aaa
enter
adc
mov
xchg
test
shrb
mov
jmp
mov
sub
inc
out
push
and
cld
and
popa
dec
xlat
insl
cmp
xchg
shr
add
adc
mov
xorb
sub
or
push
rcrb
sbb
mov
mov
rorl
cs
xlat
jge
add
lea
stos
out
mov
xor
test
int3
add
cli
in
sbb
cld
xor
xchg
or
push
in
jge
repnz
out
sbb
shlb
and
push
sbb
aad
sahf
loop
jbe
test
rcrb
imul
outsb
or
cs
popl
cmp
addl
stos
pushf
jp
sbb
adc
mov
test
ds
mov
mov
or
jnp
sbb
lret
aas
fidivs
and
mov
test
int3
test
into
fs
pop
leave
inc
fmuls
xchg
push
pop
pusha
xlat
mov
pop
or
in
or
mov
mov
sbb
js
cmp
test
movsb
xorb
fs
pop
cmp
mov
sub
jnp
addr16
inc
int
movsl
scas
outsl
lahf
adc
pop
stc
xchg
scas
jmp
or
xchg
push
adc
lret
out
stc
rolb
aaa
cmp
sub
das
jnp
mov
jae
mov
div
mov
call
xor
add
xlat
aad
imul
xor
pop
push
mov
jno
gs
lock
punpcklwd
stos
int3
sahf
jle
lret
mov
sarl
roll
sub
mov
enter
fcmovnu
xor
adc
jge
fisubrl
loopne
sti
ljmp
ss
sbb
lahf
push
aaa
sbb
adc
lods
cli
xor
fisttps
pop
pop
push
dec
mov
leave
test
mov
in
push
imul
movaps
lods
ljmp
add
cli
mov
jge
cmp
repz
shr
fistl
sbb
call
mov
sub
mov
cmp
mov
jb
nop
mov
insb
mov
xor
inc
std
out
sete
pop
sbb
xchg
int3
or
out
icebp
jl
dec
fnstsw
sub
bound
enter
xor
cwtl
push
gs
sub
testl
add
enter
mov
jge
jmp
jmp
fidivs
das
jmp
mov
push
sub
cwtl
adc
pop
xchg
data16
in
cmp
push
loope
aam
clc
push
loop
xchg
add
sub
stos
sbb
pop
cmp
mov
out
out
xlat
shll
ja
decl
sbb
push
sub
cmpsb
hlt
cmp
push
mov
out
jo
in
int3
lods
cmpsl
mov
adc
push
xchg
cs
loopne
and
add
cmp
je
add
jae
lcall
and
mov
std
push
inc
lds
pop
pop
jnp
filds
dec
out
ficoms
xchg
mov
fwait
sub
push
inc
mov
push
xchg
jge
pop
lret
mov
cmp
mov
fsub
pusha
jne
out
inc
xor
or
or
cmp
outsl
pop
push
outsl
cmp
dec
ss
cmp
imul
push
nop
aas
insl
and
cmpsb
mov
pop
out
das
sub
push
xchg
sub
das
popf
rep
sub
lods
sahf
jb
leave
pop
test
lea
push
push
or
inc
or
test
inc
push
scas
ss
fsubr
stc
gs
icebp
dec
imul
mov
fisubrl
sarl
jle
lods
xchg
mov
sti
inc
ja
inc
outsb
fstpl
ljmp
inc
push
jne
repz
mov
jecxz
mov
cwtl
jo
ret
mov
push
andb
inc
test
cld
pop
cmp
inc
pop
pop
pop
addb
aad
push
enter
inc
stos
je
cmp
jns
xor
es
jmp
add
subl
fs
arpl
cli
test
decl
xchg
and
fcmove
dec
add
or
les
sbb
mov
notb
jg
stos
inc
sub
push
jo
and
sbbl
pop
call
sbb
mov
stc
data16
and
jnp
cmc
and
push
push
pusha
mov
or
mov
jbe
sub
push
call
push
jl
andb
jl
call
or
mov
or
pop
push
mov
insl
push
sar
pop
aaa
ss
mov
sub
bound
xchg
shrb
cmp
dec
cwtl
and
les
mov
and
int
ret
in
pop
stos
push
clc
bound
cmc
stc
in
in
sbb
test
inc
rcrl
or
popf
test
sbb
xchg
insl
mov
call
and
pushf
inc
sbb
enter
xor
call
filds
loop
nop
cmp
xor
push
roll
ret
aas
test
repz
mov
iret
inc
data16
in
test
or
mov
jno
mull
or
adc
adc
mov
stc
ljmp
mov
jg
fadd
sahf
pop
mov
div
ss
add
jl
jns
jae
push
std
imul
push
scas
in
stc
test
lahf
movb
pop
mov
push
pop
cmp
fcomps
or
int
dec
lahf
lods
inc
cltd
cmp
jo
addr16
icebp
mov
xor
mov
scas
mov
pop
mov
mov
or
out
mov
xor
xchg
jbe
mov
dec
sbb
dec
jmp
mov
push
mov
subps
pusha
in
mov
arpl
mov
xchg
shll
or
mov
inc
or
and
call
fwait
lods
push
cmp
or
push
repz
inc
jg
jbe
or
emms
pop
fadds
sbb
mov
mov
into
hlt
inc
clc
popf
in
jno
insb
iret
test
rolb
push
xchg
and
hlt
je
xchg
pop
jp
lgs
mov
movsb
cmpsb
and
inc
adc
aam
aaa
inc
xor
xor
lock
movb
xor
sub
setbe
xchg
shl
push
rolb
test
mov
inc
mov
mov
jno
jns
sub
rolb
fs
cli
out
iret
mov
aam
mov
nop
cli
xchg
cld
xor
jecxz
pusha
push
sub
dec
mov
push
sub
int
and
out
xchg
inc
test
das
dec
call
mov
test
add
pop
aas
fiaddl
jmp
sarl
fcmovb
sarb
cmpl
inc
sub
inc
cmp
dec
mov
jno
cmp
rorb
lea
rclb
sbb
fadds
and
push
xlat
in
push
xor
xchg
stc
inc
cmp
iret
movsb
sub
push
shrb
aas
inc
add
cs
mov
jno
mov
lret
dec
or
inc
adc
call
or
lcall
sbb
cmpsl
xchg
cmp
inc
fwait
mov
jl
call
xchg
dec
xor
das
sbb
mov
test
xor
bound
sbb
ljmp
jp
shlb
cmp
repnz
jg
repz
rorb
mov
imul
xlat
xlat
mov
sbb
inc
std
fsub
sbb
lock
insb
cmpsb
jmp
inc
xor
lds
mov
nop
mov
xor
jns
inc
dec
dec
push
lods
add
inc
out
cmp
mov
xor
fwait
push
xchg
ret
je
adc
icebp
cmpl
and
and
pop
lods
cmp
mov
add
push
mov
es
popa
aas
push
repnz
sbb
push
mov
loopne
push
add
aaa
sbb
pop
in
jae
xor
or
daa
sbb
fwait
mov
dec
cmp
insb
mov
shrl
popa
pop
cmp
push
jno
and
push
pop
pop
mov
ds
imul
aas
push
leave
xchg
sbb
xchg
xchg
movsb
dec
cmp
mov
daa
xlat
jg
loopne
mulb
je
cmp
inc
and
and
data16
mov
data16
mov
add
sbb
sbb
loope
ds
or
and
xor
push
and
xchg
push
loop
mov
pop
mov
inc
out
adcl
mov
cmp
xor
aad
cmpsl
bswap
sbb
test
aas
shll
mov
insl
sbb
or
andl
sbb
bound
mov
out
test
rcr
fsubs
mov
gs
scas
jns
xchg
sbb
lock
std
jecxz
dec
inc
sti
mov
pop
mov
adc
rolb
push
idivl
std
stos
or
sub
dec
push
or
sub
jae
mov
in
stos
cli
push
hlt
cmp
mov
sarl
lds
aaa
and
push
pop
leave
mov
pop
ss
aaa
xor
jo
rcrl
lcall
mov
cmp
fsts
xchg
pop
mov
xor
adc
fstl
pop
mov
repnz
pop
out
sbb
push
sub
dec
xchg
or
mov
xor
inc
lret
mov
adc
scas
push
sub
add
dec
mov
cmp
test
and
imul
adc
xor
mov
setl
fwait
jne
xchg
dec
pop
imul
sbb
sub
cltd
sbb
jns
cs
mov
mov
fs
xor
iret
inc
imul
aad
xchg
xchg
push
cmovne
gs
cld
lcall
pop
adc
mov
hlt
mov
out
loopne
mov
cli
lods
loop
mov
iret
or
xor
loop
jns
in
sahf
fchs
xchg
mov
mov
int
add
into
cmp
push
or
hlt
push
push
out
addl
jg
push
or
imul
popa
iret
rorl
fildll
test
sti
stc
jmp
mov
pop
pushf
push
pop
imul
pop
cwtl
pop
adc
loope
loop
cmpsl
push
lock
notb
mov
jecxz
dec
cmpsb
push
sbb
sbb
sub
bound
gs
insl
rorl
jno
and
fldenv
mov
push
sub
cmp
cmpsl
push
jnp
inc
sahf
jno
data16
dec
hlt
fadd
sbb
pushf
icebp
pop
inc
pop
popl
xchg
outsl
jns
dec
and
pop
push
xor
fidivrs
nop
mov
inc
shrb
push
shrb
movsl
dec
jnp
cmp
movsb
fcmovnb
repnz
dec
add
pop
scas
push
imul
mov
push
addr16
jnp
stos
and
les
lret
cwtl
xchg
out
inc
inc
scas
insl
pusha
std
push
lds
out
xchg
cmpsl
mov
sub
iret
aaa
imulb
inc
lea
js
insl
mov
mov
mov
or
stos
mov
sbb
and
fcmove
rcrb
out
sbb
jns
add
pop
xor
out
push
xchg
dec
lea
movsb
fbstp
mov
cwtl
sub
mov
xchg
adc
bound
cmp
mov
call
leave
into
outsb
inc
pop
popa
outsl
gs
bound
hlt
shll
addr16
mov
mov
enter
jbe
sub
movb
icebp
test
jns
jbe
xchg
decb
xor
mov
decb
clc
mov
out
inc
push
adc
cli
cmp
test
xlat
push
xor
rcr
in
or
subl
push
lods
mov
cmp
sbb
call
xchg
inc
aam
jle
xorl
xlat
fcmovbe
cwtl
fisubl
inc
pop
imulb
and
cltd
sbb
jge
cmp
into
out
jno
popf
push
out
mov
pop
mov
mov
addr16
aaa
clc
and
jecxz
loope,pn
push
adc
xchg
ret
pop
xchg
ljmp
inc
nop
cmp
in
pop
aaa
and
out
das
iret
cs
xor
sbb
enter
xor
lock
test
ja
mov
push
adc
popf
jne
aaa
stc
cmp
gs
cmp
repnz
pop
stos
sbb
inc
pushf
mov
inc
cltd
pop
sgdtl
rcl
movsl
push
dec
inc
sbb
in
iret
daa
ror
fcoml
sub
and
and
mov
fdivrl
sub
jae
mov
or
sahf
cwtl
jnp
cmpsl
fdivl
cwtl
out
or
std
out
pop
mov
push
lea
outsb
notb
mov
xchg
and
dec
sub
shl
inc
push
xchg
dec
cmp
xor
iret
das
sbb
lock
or
mov
into
imul
cmp
popl
fisttpll
inc
mov
jo
into
adc
push
cmp
mov
les
int
cmpb
add
push
jp
lea
loop
ja
cli
or
loope
adc
xor
jne
xchg
add
nop
inc
aas
lret
sub
ficoml
sbb
fisubl
push
scas
lahf
cmpsl
fwait
mov
mov
fsubp
sbb
push
cs
cli
test
sub
fidivrs
loop
add
les
adc
int
ljmp
mov
repz
push
push
dec
or
gs
xor
mov
mov
jno
shll
decl
aad
repnz
jmp
in
jp
cwtl
fimull
sbb
adcb
add
xchg
aad
add
jle
ficompl
xchg
fwait
add
dec
pop
push
mov
clc
xchg
ret
push
push
jmp
push
cmc
dec
es
leave
adc
jge
test
sti
mov
sahf
pop
fidivl
lea
stos
pop
ja
mov
js
mov
xor
aas
mov
push
mov
lret
mov
xchg
scas
xchg
ret
lahf
sahf
xchg
push
push
add
js
aas
lods
xchg
sti
cmp
mov
xor
pop
in
cwtl
mov
lret
sub
mov
xchg
push
push
fstpt
adc
and
mov
mov
adc
adc
mov
mov
roll
fildl
cmp
mov
push
xchg
mov
ljmp
jp
lret
push
adc
std
jmp
clc
insl
inc
jge
pusha
jae
imull
xlat
cs
aaa
repz
fwait
stc
outsb
jmp
push
mov
inc
sahf
icebp
lds
lea
cmp
aad
xchg
pop
insl
pop
andb
mov
mov
sbb
jne
popa
bnd
dec
lds
iret
pop
mov
xchg
cmpsl
xchg
imul
mov
mov
addl
icebp
mov
xchg
into
lret
ljmp
pusha
imul
sub
lock
addr16
test
notb
xor
dec
insb
adc
sahf
pop
inc
lahf
xchg
xchg
and
and
xchg
or
lds
push
push
jmp
aam
lcall
push
dec
pusha
in
and
xchg
pop
es
xor
jle
mov
das
mov
add
lods
inc
rcl
jb
jnp
dec
pop
imull
mov
pop
negb
and
adc
mov
insl
dec
jne
scas
scas
adc
sub
mov
mov
xchg
rolb
mov
cmp
xchg
sahf
ss
xor
xor
mov
cmp
sbb
inc
push
orb
mov
lahf
imul
inc
leave
test
into
aaa
pop
sti
fwait
aaa
xlat
inc
insb
mov
movl
pushf
pop
jns
int
mov
loope
sbb
pop
jae
push
sarl
int3
cmp
dec
add
dec
fdiv
aas
stos
mov
and
add
jo
jg
std
xor
stc
jg
sub
cmc
mov
xor
or
out
pop
repnz
adc
popf
inc
data16
mov
aaa
into
bound
nop
sbb
mov
test
push
sub
aam
xchg
cmp
fidivs
push
inc
xor
dec
jns
jne
cwtl
or
notb
test
adc
shrl
mov
out
jno
mov
mov
imul
sub
sbb
add
jp
cmpsl
inc
popf
dec
subb
leave
cvtps2pd
je
mov
paddusb
fdiv
insb
add
imul
jbe
stos
and
adc
cmpsb
cli
clc
insb
push
mov
andl
gs
pusha
or
push
fists
scas
les
or
clc
mov
cmp
ss
inc
mov
and
incl
xchg
inc
xchg
dec
cmpb
std
pop
sub
ret
adc
shll
add
push
pop
cmpb
aad
js
jnp
dec
imull
leave
mov
scas
flds
dec
xor
shrl
imul
je
pop
fs
popf
push
testl
lcall
aas
xlat
cmpb
dec
jo
mov
sbb
jb
xchg
loop
das
mov
pop
arpl
popf
sub
es
imul
lcall
jg
adc
xchg
sarl
fucomp
cmp
decl
dec
adc
adc
enter
fnsave
ljmp
inc
fcoml
mov
fcomps
push
jl
cmp
test
sub
xchg
jmp
mov
stos
mov
dec
sub
xorl
pop
das
mov
mov
pop
dec
mov
iret
push
divl
mov
iret
xchg
mov
mov
rclb
adc
and
in
ds
daa
jmp
or
clc
pushf
lret
sub
push
sub
imul
jmp
jge
loopne
sbb
adc
or
jno
bound
jnp
sub
movsl
jb
cltd
iret
in
pop
xorb
mov
test
push
idivb
pop
int
enter
clc
jmp
inc
adc
jp
add
push
cmpsl
mov
movsb
filds
mov
lods
or
xor
fnsave
dec
leave
mov
inc
push
xchg
mov
mov
lods
cmp
pop
or
fildll
cld
xchg
inc
jmp
mov
rcl
and
xorl
iret
add
dec
lcall
jns
and
cmp
fnstsw
and
xchg
cmp
bound
loopne
add
sbb
icebp
scas
out
sub
lret
dec
mov
push
fldl
test
subl
movsb
jns
dec
sub
scas
xor
mov
push
imul
cwtl
hlt
out
shrb
addl
outsl
jo
xor
dec
subb
mov
add
mov
add
pop
push
pop
scas
xchg
popa
addl
mov
inc
stc
call
rorb
fisubrs
test
jns
xchg
or
aam
dec
stos
in
mov
scas
ret
das
iret
rcr
ret
xor
xor
cmp
rcl
cli
cmc
dec
pop
clc
mov
cs
test
std
in
pop
in
jnp
ljmp
cwtl
enter
mov
or
jl
js
shrb
lea
xchg
jne
inc
fbstp
and
push
movsl
lahf
jmp
or
cmc
push
sti
jno
fwait
ss
cld
jnp
sub
pop
xor
mov
push
jge
outsb
mov
sbb
out
repnz
adc
pop
inc
ja
push
mov
cmp
movl
lods
daa
lahf
sarb
cli
jo
aam
sub
idiv
psllq
mov
dec
pop
adc
add
sub
std
jecxz
mov
js
shr
xchg
jb
mov
lods
push
xor
in
jmp
xor
es
add
cmp
dec
call
jno
outsb
dec
push
xor
xor
out
mov
pushf
jne
fisubl
push
jp
inc
lea
cs
push
cli
jne
mov
pop
in
shrl
jle
shlb
jl
sbb
add
jp
adc
push
add
push
cld
scas
xchg
addb
push
leave
push
or
inc
in
and
mov
pop
jo
repnz
dec
xorl
clc
inc
mov
fnstenv
out
dec
or
out
mov
in
mov
cmp
mov
cld
jl
dec
xor
jns
ret
mov
aad
mov
lds
mov
outsb
idivb
mov
in
jne
decl
mov
scas
mov
dec
sbb
lcall
incl
ret
mov
xchg
cwtl
xchg
push
fbld
push
xorl
xchg
cltd
lea
fdivs
das
mov
pop
insb
decl
push
inc
cmp
cwtl
dec
inc
scas
mov
pop
sub
pop
mov
pop
pop
add
push
and
mov
mov
ficompl
iret
and
mov
int3
xor
sub
repnz
cli
jns
sub
xlat
in
test
or
outsb
daa
sarl
xchg
inc
xor
push
xchg
xchg
mov
cmp
fimuls
bound
jmp
js
pop
mov
jmp
xchg
scas
add
in
in
in
push
push
jecxz
pop
in
lret
mov
pushf
jno
iret
add
pop
mov
mov
mov
cmp
adc
imul
jmp
mov
lock
sub
dec
repz
int3
and
mov
sbb
sbb
int
leave
mov
add
leave
std
pop
icebp
mov
or
test
xchg
mov
sub
inc
xlat
adc
rcll
loop
aas
mov
clc
ja
jge
test
rorl
cwtl
jmp
icebp
clc
xor
xchg
fnsave
cmp
loope
adcl
sbb
cmpsb
inc
xor
cmp
add
neg
cmp
dec
jnp
jns
and
rorl
ja
pop
inc
in
fwait
popl
cli
cs
jmp
lods
jo
adcl
pop
imul
xchg
push
pop
mov
cmp
adc
sbb
xchg
int
jg
aam
movsb
push
mov
xchg
pop
dec
xchg
jno
push
rorl
xchg
pop
test
xor
clc
sub
adc
jmp
int3
mov
mov
enter
js
jecxz
subl
xor
into
xor
mov
arpl
arpl
sbb
fcom
inc
ret
jmp
bts
test
test
int
fistps
xchg
call
sahf
or
cmp
jp
sti
mov
dec
and
or
mov
movsl
sbb
in
mov
pop
ficomps
lods
and
mov
mov
int
mov
or
ljmp
and
cld
cmp
xchg
pop
sub
sbb
mov
and
lods
adc
cmp
int3
es
xor
rolb
xlat
xchg
pop
mov
movsl
mov
push
pop
xor
push
xchg
xor
popa
sti
jcxz
pop
mov
add
into
fs
or
jb
adc
popf
cmc
jp
inc
pop
lcall
push
jle
and
add
fmull
mov
pusha
or
imul
xchg
out
lods
sbb
and
loopne
push
and
mov
wrmsr
mov
notb
sub
cmpsl
fwait
cld
fidivs
pop
mov
mov
pushf
movsl
sbb
and
inc
fwait
shll
scas
rolb
mov
arpl
jl
push
xchg
inc
pcmpgtd
jae
mov
loop
and
cld
push
adc
xor
adc
imul
mov
bound
fimuls
inc
loopne
xor
js
jmp
nop
pop
xchg
scas
outsb
dec
fwait
inc
mov
fidivrs
dec
jle
filds
nop
dec
adc
das
mov
cmpsb
bound
rorl
roll
push
and
fwait
and
loope
adc
sbb
pusha
loope
icebp
inc
ficoms
jmp
sub
push
call
es
sbb
movsl
rol
cmpsb
push
ljmp
dec
adc
rcrl
push
xor
jle
ret
ds
dec
and
pop
sub
pop
xchg
adc
and
jge
bts
aam
inc
pop
jae
out
mov
mov
ret
jmp
and
dec
sub
adc
push
jmp
scas
dec
ds
lea
sti
in
mov
subl
sub
or
cmp
lahf
xor
ja
fisttpl
push
inc
jno
shrb
cmp
sbb
shll
xor
dec
repz
mov
jmp
mov
icebp
fwait
sbb
cmpsb
and
cmp
lret
adc
adc
test
dec
pop
popa
ds
and
hlt
arpl
das
fisubl
xor
leave
fstpl
hlt
and
das
cmp
outsb
inc
cwtl
aas
sbb
andb
push
cmp
pop
aam
sarb
sub
ficoms
jo
mov
dec
jne,pn
push
jle
add
insl
sub
mov
mov
cwtl
nop
add
cmp
mov
jne
cs
fcoms
das
iret
arpl
lds
jbe
sbb
js
xor
out
loop
mov
inc
inc
jmp
xchg
add
mov
add
jge
pop
ror
std
mov
testl
shrl
lds
jne
jmp
and
arpl
jb
inc
aaa
test
mov
jge
xchg
jbe
nop
mov
leave
and
das
les
xchg
jb
mov
inc
mov
insb
aad
jne
jbe
and
call
xor
ljmp
add
push
dec
imull
imul
mov
xchg
mov
or
fldl
lahf
push
js
lock
pop
sbb
or
out
div
lds
push
mov
cmp
imul
fldcw
cs
cwtl
cmp
adc
jns
dec
adc
mov
in
test
scas
jb
sbb
divl
sti
test
aad
fsub
jge
testb
adc
cmpsl
fcom
aad
in
push
in
aad
enter
push
lret
or
loop
arpl
lret
xchg
pop
inc
mov
sub
and
rcrl
fsubs
pusha
mov
ror
imull
add
adc
mov
and
mov
pushf
pop
lods
into
data16
ds
pop
add
push
mov
xchg
push
jae
stos
repnz
mov
adc
push
push
sbb
lock
adc
lahf
pop
and
sbb
or
push
mov
fistpl
imull
fwait
popf
rcr
std
mov
push
jl
xrelease
test
outsb
or
call
mov
cli
mov
subl
in
fwait
mov
sbb
mov
cwtl
shrl
push
ficompl
dec
out
dec
ljmp
and
and
rorb
testb
add
pop
popf
xlat
es
cs
pop
inc
mov
adc
cs
and
repnz
or
iret
xchg
or
cmp
lcall
movsb
aaa
cmp
inc
out
adc
dec
jbe
and
shr
pop
sub
por
test
cmp
ret
repnz
sbbl
push
ffreep
cmpb
dec
icebp
xor
sbb
test
rol
or
ds
lcall
hlt
xor
js
push
insl
mov
movb
test
pop
pop
in
movsl
stos
adc
stc
sti
roll
jno
jg
xchg
inc
inc
test
in
push
clc
mov
rcr
adc
sarb
and
shll
cld
xchg
js
adc
xor
jmp
pop
in
push
repnz
rep
mov
dec
and
pushw
inc
push
repz
pop
ss
and
jmp
mov
jno
sub
scas
push
sub
inc
rorl
mov
and
lock
pop
rorb
jg
js
and
popf
jp
jo
pop
repnz
push
jne
loopne
sub
pop
xchg
in
cmp
jne
lods
dec
jp
and
jl
sbb
loop
push
dec
and
push
xchg
in
and
xchg
iret
mov
loope
push
aaa
inc
xchg
icebp
mov
leave
inc
js
out
sahf
mov
mov
enter
lret
lret
psubusb
movsl
lods
loope
or
out
lret
xchg
pop
pop
ljmp
adc
cli
jae
pusha
cld
push
rcl
inc
loopne
mov
aaa
mov
test
arpl
push
arpl
xchg
lods
es
xor
mov
jecxz
imul
lcall
loop
les
jne
rorb
cmp
pop
cmp
mov
icebp
mov
jge
jno
mov
mov
dec
lcall
vpsubusw
shlb
mov
repnz
inc
jmp
jge
xlat
xor
jo
fistpl
ja
pop
add
inc
cmp
or
das
jmp
not
es
sbb
xor
sbb
ret
jecxz
test
and
push
jp
xor
sub
ret
and
and
inc
and
leave
fmull
ja
or
xchg
and
sbb
jmp
xor
or
xor
push
adc
movsl
movsb
mov
fsubl
pop
hlt
xor
xchg
mov
fldcw
mov
and
and
cs
sub
mov
fadds
movsb
in
or
mov
push
push
pop
mov
mov
sbb
jl
rcll
mov
mov
rol
movsl
jmp
out
loope,pn
ret
inc
out
mov
pop
push
push
mov
mov
cmp
sbb
xor
out
in
pop
inc
adc
adc
testb
and
or
arpl
pop
add
add
stos
cmpsl
or
lea
inc
leave
mov
mov
push
mov
pop
insb
push
imul
jbe
cwtl
pop
dec
imul
into
lods
pop
fdivrl
jae
cmp
sbb
movsl
sbb
lret
test
mov
addr16
adc
sub
bound
inc
and
popf
popa
in
push
sbb
push
push
adc
mov
add
popf
cmpb
xor
sub
cmp
insl
push
pushf
dec
push
fisubl
dec
pushf
mov
mov
arpl
pop
fmull
jae
jbe
iret
cwtl
in
lcall
or
test
je
sub
cmpsl
insl
xchg
mov
jns
mov
mov
add
jne
les
pop
sbb
sarb
inc
or
fwait
jmp
bound
lea
jns
cmpsb
iret
jno
in
out
int
or
les
sbb
loopne
loop
fucomi
lcall
inc
mov
imul
loopne
cmpsb
test
pusha
push
out
aas
mov
out
fdivrl
pushf
mov
jo
jecxz
inc
test
mov
popf
sbb
mov
push
push
daa
push
insl
cwtl
lock
daa
jecxz
das
fimull
mov
pop
mov
xchg
jl
cmp
pusha
cwtl
sahf
pusha
shlb
mov
test
xorb
stos
out
in
int
pop
lods
dec
stos
jae
incl
cmp
push
fcmovnbe
mov
aam
fwait
xor
rorl
sahf
sub
fwait
add
scas
rclb
iret
into
push
rcrl
and
aaa
mov
jg
pandn
ljmp
xor
aam
sbb
stos
push
sub
cmc
pop
xor
and
and
sbb
cmpb
lret
movsl
xor
sub
inc
cmp
movsl
adc
in
adc
adc
outsl
lods
outsl
adc
xlat
or
and
inc
cltd
push
pop
mov
sub
dec
pop
fsub
fnstsw
movsb
mov
mov
adc
mov
cmp
cmp
es
mov
adc
test
mov
scas
jnp
test
lcall
xchg
mov
push
fmuls
lahf
sbbb
mov
lock
or
jmp
mov
lcall
lret
inc
or
sub
add
dec
push
xchg
pop
dec
push
into
mov
mov
pushf
push
fdivrl
or
cmp
pop
and
pushl
inc
lods
inc
and
or
jge
outsl
jmp
bound
dec
jle
xchg
sti
or
hlt
cmp
jg
mov
jbe
int
jg
imul
addr16
shl
cmpsl
dec
subb
in
sub
dec
outsb
loop
mov
subb
sub
jnp
das
cmp
jnp
das
fbld
inc
or
fninit
out
push
cld
sti
std
orl
out
mov
loopne
es
jmp
ret
add
sub
sbb
xor
xchg
pop
je
in
lcall
inc
sti
stos
les
cmpsl
sbb
cmp
jg
rorb
adc
fisttpl
xor
or
add
movsb
imul
out
js
scas
sub
pushf
push
shll
sub
insl
dec
sub
insb
je
xor
and
cld
test
dec
ljmp
icebp
ds
jge
aaa
mov
and
aas
bound
mov
or
inc
xor
mov
test
sub
test
stos
sbb
cmp
test
ret
mov
xchg
mov
xor
adc
xchg
push
enter
cwtl
int3
mulb
jbe
mov
mov
dec
int3
mov
lds
fnstcw
mov
sbb
sbb
push
dec
nop
add
mov
aam
rcll
aam
aam
ljmp
cmp
idivb
mov
bound
push
push
movsb
dec
testl
adc
mov
sub
repz
jae
sbb
inc
ljmp
mov
repnz
aaa
jbe
mov
inc
out
xchg
fidivrs
je
xchg
xor
pop
repnz
imul
pop
lods
enter
and
pusha
pop
sbb
pop
jge
fwait
sbb
jb
sbb
ljmp
in
iret
iret
lret
hlt
mov
dec
test
imul
dec
xchg
lods
dec
aad
pop
lea
xchg
dec
jns
fimull
jno
ss
cmp
jo
sub
jne
or
das
mov
bound
sahf
jo
insl
test
cmp
je
stos
inc
xor
pop
xlat
stc
test
sahf
mov
ss
mov
popf
std
pop
sub
ret
das
mov
mov
xor
and
dec
jns
mov
jl
mov
nop
loop
stos
mov
push
std
jl
mov
pop
nop
movsl
and
imul
test
mov
icebp
out
xchg
adc
mov
rcl
popa
add
aaa
enter
int3
call
mov
mov
push
sub
mov
or
push
mov
rclb
push
rcll
pushf
negl
mov
outsl
das
mov
je
fisubs
movsb
dec
sbb
movsb
adc
scas
test
or
rcll
mov
in
lods
pop
push
into
aaa
mov
fistpl
imul
push
mov
push
sahf
jbe
inc
sbb
fistl
jnp
adc
rcll
fisubrl
daa
sti
mov
dec
adc
stc
mov
mov
dec
push
arpl
pinsrw
and
push
inc
mov
xchg
push
mulb
adc
push
push
sbb
ljmp
mov
shlb
fs
aad
das
les
cmpsl
outsb
aam
rcrl
xor
push
fwait
sub
popf
lock
xchg
pushf
pop
inc
jno
lea
decb
mov
popa
insb
popa
cmp
test
and
cli
mov
daa
stos
mov
mov
cltd
push
jb
jmp
mov
cmc
dec
and
shll
cmp
mov
lea
push
add
or
out
ljmp
aas
les
mov
fildl
pop
ss
les
ljmp
add
ds
adc
je
movsb
cs
push
sub
and
inc
icebp
jb
pop
mov
adc
int3
frstor
jecxz
adc
xorps
sub
hlt
cmp
rcll
and
mov
pop
sar
xchg
mov
pop
ss
mov
xchg
fstl
add
es
sarl
xlat
cwtl
aas
jnp
xchg
adc
pop
shl
lods
sub
add
cmp
test
mov
mov
mov
repz
je
shll
dec
sbb
xchg
pop
arpl
call
pop
sbb
into
mov
inc
sbb
sbb
pop
pop
je
sbb
xchg
cs
aaa
int
xchg
push
shr
jmp
fidivs
xchg
push
sbb
sarl
push
sub
sbb
mov
mov
or
cli
movsl
in
add
movsl
clc
js
dec
or
push
and
or
lds
push
xor
std
add
popl
xor
fwait
stos
xlat
mov
push
add
mov
push
add
imul
ss
movsb
pop
das
test
xchg
out
xor
scas
push
enter
mov
mov
in
lahf
rorb
sbb
sbb
lds
cmp
repz
inc
testl
movsb
test
cmpsb
push
cwtl
imul
and
dec
outsb
pop
iret
cltd
add
js
mov
adc
lcall
sub
movsb
lret
jno
mov
int3
add
xor
inc
xor
iret
imul
ljmp
jmp
adcb
negb
pop
push
data16
push
ret
jno
sbb
enter
xchg
lcall
mov
xlat
xor
mov
mov
dec
xchg
sbb
or
and
sub
ss
cmpsl
out
lret
jl
test
bound
test
addr16
and
out
dec
mov
jecxz
cmp
js
jg
mov
outsl
cmp
hlt
cmpb
imull
xor
inc
lret
inc
or
test
scas
mov
inc
lcall
mov
push
sti
pop
lds
shl
jmp
ss
mov
xor
gs
int
xor
roll
push
jb
clc
outsb
add
cmp
mov
pushf
lock
push
fstl
cwtl
addr16
in
cmp
outsl
popf
sub
lds
lret
hlt
mov
loopne
pop
fcmovu
pop
out
push
loopne
add
xchg
sbb
lds
mov
stos
mov
nop
stos
pushf
push
cmc
lods
das
jecxz
int
mov
xchg
pop
dec
pop
cmc
pop
xor
adc
imul
lock
rcr
out
pop
dec
sub
mov
aas
inc
and
lcall
imul
mov
int
jb
adc
cld
rolb
dec
sbb
cmp
bound
mov
dec
sbb
xor
and
scas
shrb
mov
lret
aam
rolb
jge
out
out
loope
adc
outsb
push
mov
aam
mov
imul
mov
xchg
loop
sti
sahf
stc
dec
bound
mov
cmp
js
mov
add
jecxz
ja
cmc
mov
inc
adc
sbb
ja
aad
add
dec
rorl
aaa
inc
notb
cmpsb
jp
pop
mov
out
test
dec
pop
push
mov
mov
sbb
jp
fldl
pop
sbb
or
mov
in
ja
lods
sbbl
fstp
adcb
jmp
ret
out
sub
xchg
popa
jmp
mov
mov
or
inc
mov
xor
jnp
adc
pop
push
mov
xlat
or
and
push
ret
mov
stos
mov
outsb
out
push
jecxz
inc
jmp
cmp
mov
inc
and
icebp
push
sbb
scas
outsb
mov
fnstsw
xor
mov
pop
adc
xor
repnz
push
push
sahf
xchg
push
mov
mov
xor
jns
pusha
out
ja
and
mov
jbe
jmp
pop
push
cmp
ljmp
inc
scas
add
stos
pop
cmp
outsb
mov
add
enter
out
loop
mov
orl
sbb
pop
int3
and
or
push
adc
or
pop
outsb
mov
adc
outsl
xor
sbb
and
xor
and
and
out
imul
xor
xchg
ja
clc
pop
jb
dec
push
insb
mov
ror
adc
into
push
lea
jle
cmp
add
xor
in
test
or
inc
xchg
sbb
repnz
dec
push
popl
in
out
shll
add
xor
jns
test
jecxz,pn
ret
rcrb
dec
pinsrw
adc
dec
push
or
mov
test
jae
lret
cld
sub
jno
and
sub
pop
mov
je
cmc
jp
aam
mov
fsubrs
loopne
sub
and
dec
pop
push
mov
xlat
dec
cmp
mov
addr16
pop
inc
or
pop
ja
pushf
add
cmp
bnd
rolb
in
mov
and
cmp
and
xchg
iret
fiadds
outsb
fs
mov
pushf
and
js
hlt
jb
inc
fwait
outsb
xchg
pusha
mov
int
add
mov
sti
cld
dec
adc
sub
emms
adc
js
es
add
daa
lret
mov
test
addb
subb
cmp
lock
mov
mov
mov
mov
sub
lock
neg
cs
lods
pop
fxam
mov
push
pop
pushf
in
bound
mov
pop
lea
add
aam
sub
decb
jne
decl
leave
scas
xor
mov
fldt
jl
and
add
lods
insb
mov
mov
outsb
daa
xchg
test
pusha
fimull
insb
adc
lods
jg
or
cmpsb
shl
sub
cmp
aam
sbb
dec
lret
add
mov
divl
jmp
or
jg
push
mov
dec
aas
push
or
pushf
inc
xor
fldl
loopne
xrelease
jae
shrl
pop
mov
add
cld
push
dec
stos
inc
sbb
das
outsb
fwait
lods
test
aas
inc
pop
in
inc
mov
lock
insb
push
clc
push
notl
inc
dec
or
dec
fst
xor
mov
in
gs
pushf
jge
mov
push
std
mov
addr16
inc
push
mov
mov
inc
adc
inc
cs
add
mov
dec
jo
pop
ljmp
outsb
fidivrs
mov
in
pop
in
jns
mov
or
aad
js
mov
pop
lahf
or
mov
cmp
or
pop
call
pop
hlt
jo
pushf
pop
mov
sbb
jne
out
cltd
mov
loope
jnp
clc
mov
out
aad
jle
mov
push
test
mov
xchg
pop
jno
dec
insb
cltd
add
insl
and
sahf
ljmp
inc
cmp
incl
roll
mov
mov
mov
imul
dec
out
in
push
inc
xchg
jae
aaa
mov
popf
out
mov
dec
pop
push
dec
bound
test
push
jge
dec
push
mov
adc
rcll
lods
jae
imul
or
adc
inc
test
xchg
jnp
scas
mov
in
jp
and
or
mov
insb
dec
popf
das
hlt
and
in
lods
xor
inc
aaa
lahf
cmp
test
in
incl
cld
mov
scas
dec
dec
sbb
popa
scas
cld
mov
call
jge
mov
out
xor
fs
testb
in
mov
outsl
movq
mov
and
and
jecxz
mov
mov
in
push
test
loop
jg
into
cmp
push
shll
into
or
idivl
gs
push
jecxz
xchg
lods
fyl2xp1
mov
cmp
iret
jbe
testb
cmp
cmp
int
jae
lods
jbe
cmp
xchg
xchg
jecxz
cmp
mov
popf
nop
mov
in
in
outsl
icebp
dec
lcall
xchg
xorl
jg
jecxz
cltd
adc
mov
dec
fldt
cmp
test
mov
jae
mov
jne
pop
clc
fwait
lds
mov
out
hlt
mov
in
fs
in
xchg
push
add
out
shll
push
sub
arpl
or
stc
jmp
mov
enter
loop
and
subb
jns
jo
fisubl
aam
jo
test
mov
push
add
in
adc
scas
mov
mov
cmpsb
mov
pop
into
rep
fdivrs
in
mov
insl
cmp
notl
dec
adcb
jp
repnz
pop
cmp
cltd
cmp
gs
mov
in
cmp
ficomps
push
lea
mov
ret
mov
xchg
pusha
cmp
ret
lcall
std
ret
lds
mov
fdivrl
mov
ret
loopne
push
xchg
xchg
into
mov
sub
xor
sub
pop
dec
push
jmp
xchg
ss
clc
jp
lods
xor
movsl
clc
add
out
inc
cmp
jae
int
add
sbb
or
in
aam
scas
out
sbb
add
cli
sub
cmp
aam
bound
xchg
mov
addr16
cmpl
mov
dec
mov
adcl
mov
jge
mov
fidivrs
mov
movsb
scas
add
xor
xchg
jns
push
dec
int
ja
inc
jecxz
movhps
jmp
pushf
mov
lea
mov
shlb
xor
push
pushf
dec
lea
adc
pusha
push
and
xchg
mov
add
lds
rorb
outsb
jns
push
lds
sarb
xorb
pusha
inc
jo
sub
inc
fucomi
lds
sarl
ret
sbb
cltd
sti
dec
out
push
aaa
mov
sahf
jno
test
or
aam
in
ret
stos
cmc
push
ja
mov
dec
inc
jl
fists
out
adc
inc
testb
sbb
and
mov
cmp
jns
xchg
setb
sbb
sub
repz
jbe
mov
pop
inc
js
adc
dec
push
mov
fwait
and
push
stc
mov
pop
mov
rcrl
outsl
sub
into
xor
loope
adc
insb
cmpsb
xchg
pop
inc
dec
lcall
mov
jno
out
imul
jge
xor
jb
jae
adc
xor
mov
popf
imulb
inc
jnp
in
inc
xlat
or
notl
in
mov
fs
adc
mov
insb
mov
lods
imul
sarl
mov
jne
lret
and
push
ja
imul
mov
xchg
out
loop
or
out
lods
dec
scas
cmpsl
or
cmp
jle
ret
call
pop
dec
and
fisubs
sbb
arpl
push
ficomps
loope
in
out
inc
jg
testb
jle
jnp
mov
sub
adc
sahf
xchg
in
call
bnd
inc
nopl
scas
orb
lods
sub
mov
inc
jb
icebp
jo
pusha
mov
data16
dec
ss
push
out
arpl
adc
fsub
mov
dec
shl
lahf
xor
out
fdivs
xchg
jnp
push
add
ljmp
sti
fcompl
lods
mov
adc
xchg
sti
enter
inc
iret
mulb
mov
dec
jne
push
adc
lods
pop
add
pop
scas
out
cmovs
dec
outsb
push
in
pop
js
xlat
xor
xor
pushf
dec
xchg
cmpsb
or
mov
mov
add
out
test
clc
fcoms
xchg
xchg
mov
dec
shll
mov
cmp
jmp
rcrb
jp
cld
xchg
jge
aas
shll
popa
and
cmp
js
int
or
dec
sub
dec
movups
lret
rcrl
dec
lock
dec
in
pop
scas
mov
mov
orb
in
and
xchg
scas
stos
testb
mov
repnz
xor
sub
mov
cmp
and
cmp
int3
cmp
adc
add
data16
adc
mov
sbb
pop
or
mov
xchg
aas
les
fwait
mov
xchg
or
adc
jae
es
stos
lds
insb
cmpsl
repz
mov
cwtl
imulb
pop
mov
jb
dec
xchg
jb
movsl
dec
data16
xchg
mov
stc
mov
add
inc
jne
in
pop
cmc
add
mov
xchg
stos
and
xor
pop
hlt
in
js
adc
hlt
push
mov
and
inc
arpl
out
cmp
jae
xchg
mov
test
aas
mov
insl
popa
push
sbb
dec
mov
mov
test
fwait
lds
enter
jl
xor
jae
sbb
fcompl
push
popa
mov
cmp
xchg
lret
popa
mov
jno
pop
adc
jae
xor
aas
xchg
mov
push
out
aas
mov
add
xchg
mov
dec
out
sub
push
push
inc
in
lret
jmp
in
inc
outsb
push
push
loop,pn
pop
in
xor
lcall
jnp
scas
das
test
push
rol
ret
pop
add
fwait
xor
push
icebp
push
mov
std
jbe
mov
js
or
push
orl
bound
test
xchg
aad
es
add
and
mov
cmp
add
aam
popf
lcall
lahf
cwtl
mov
jmp
and
jmp
enter
dec
push
adc
pop
push
jmp
aas
dec
imul
loope
add
shll
push
ret
add
xor
ja
dec
cmpsl
stc
fs
std
ret
xchg
jmp
mov
scas
jns
sub
pusha
out
cmp
call
xlat
or
xchg
es
int3
rcr
mov
int3
sub
jle
fadds
cmp
lret
pop
xlat
enter
cmc
js
or
imul
dec
cltd
cmpsb
stos
iret
std
jnp
mov
dec
mov
call
lret
mov
aaa
adcb
adc
icebp
mov
cld
loopne
loopne
loopne
mov
mov
mov
rcll
daa
cs
and
insl
or
mov
add
sbb
cmpsb
mov
pop
nop
xor
pop
scas
mov
adc
dec
movsl
mov
xbegin
and
or
jecxz
out
adc
loope
inc
pop
les
outsb
clc
push
and
aaa
daa
sti
sub
jne
lret
push
xor
popa
cmc
or
sbb
xchg
cld
pop
mov
dec
and
lods
mov
mov
fs
dec
icebp
sarl
xor
and
push
dec
pop
xlat
inc
inc
inc
dec
data16
cs
jb
pop
mov
push
add
jecxz
xor
cmp
xor
shrl
imul
push
fcompl
and
push
arpl
gs
mov
fists
cmc
pop
std
lods
loopne
inc
imulb
cmp
movsb
lcall
jns
lods
adcb
inc
mov
jne
nop
into
scas
arpl
aaa
imul
je
inc
pop
sub
stos
inc
dec
test
jge
lea
scas
cmp
lds
jnp
ljmp
and
cltd
imul
test
mov
pop
dec
add
pop
loopne
loope
mov
mov
ret
inc
stos
inc
mov
sti
jne
or
pop
fisttpl
sub
sbb
mov
jge
fistpll
dec
gs
jg
pop
stc
xor
andl
jg
dec
inc
mov
ret
lret
xor
jle
lea
shlb
push
imul
jg
lret
jns
ret
ds
inc
fstpt
jnp
les
or
outsl
dec
cmp
cmpsl
or
test
jmp
testl
das
cmp
cmp
cmp
repnz
add
mov
xchg
xchg
imul
in
cmpsb
xchg
js
dec
pop
test
sub
lea
sbb
mov
dec
fs
jecxz
out
push
xchg
push
sbbl
mov
adc
popf
js
ret
cmc
lock
push
cmp
out
addr16
lock
notb
movsl
push
lds
mov
ja
xor
jmp
lcall
inc
int
sahf
mov
jae
loop
mov
jle
aam
fstps
mov
push
stc
mov
lea
push
loop
mov
push
jns
inc
push
mov
jno
sti
push
fwait
mov
inc
in
scas
data16
pop
jmp
sub
aad
inc
test
addr16
mov
jg
fwait
sbbl
loop
loop
sub
out
xchg
lahf
sub
out
enter
cs
jbe
incl
push
xchg
stos
stos
cmp
cmp
inc
sub
push
lret
sub
clc
xor
mov
out
mov
cld
xchg
cltd
negb
jne
adc
inc
push
cmp
cmp
scas
or
inc
cmpb
adc
jg
aas
popa
scas
sub
inc
fiaddl
xchg
inc
and
in
jo
popf
adc
data16
xor
js
cmpb
stc
jg
ljmp
cmc
cmpsl
rclb
push
cmp
add
dec
adc
fwait
xor
mov
cmp
mov
and
xchg
mov
inc
test
ret
and
cs
in
mov
hlt
adc
fimuls
mov
and
lods
push
pop
and
xor
pop
mov
jmp
nop
popf
mov
jb
adc
cmp
dec
mov
fsub
lds
fmull
stc
pushf
mov
cmpsl
inc
mov
orb
lahf
andl
jge
cs
xchg
lods
or
outsl
fisubl
mov
ffreep
mov
push
dec
movsl
lahf
fwait
hlt
inc
cwtl
push
lahf
inc
scas
mov
lds
leave
push
es
int3
mov
pop
lods
and
xchg
push
dec
xlat
mov
fcmovu
xor
fwait
sub
jne
into
stos
cmp
data16
mov
icebp
cmp
dec
lcall
xchg
std
mov
jno
sbb
cli
xor
xor
inc
mov
jo
push
jl
inc
dec
arpl
into
mov
cmp
cmc
mov
jnp
jnp
dec
lds
popf
addps
dec
stos
nop
pushf
sbb
loopne
adc
leave
sub
add
ljmp
insb
or
sahf
pop
or
lcall
outsb
jne
jbe
jmp
sub
dec
scas
and
dec
xor
xor
jne
inc
push
test
or
stc
fidivrs
hlt
xor
pop
jb
inc
push
jmp
push
push
inc
mov
mov
cltd
cmp
sbb
lods
sub
sub
pop
insl
orb
push
rorb
fs
mov
mov
adc
lock
cmc
outsb
js
jge
push
call
mov
or
xor
int
or
and
mov
fwait
inc
enter
dec
loop
cmpsl
rclb
clc
mov
adc
cltd
sahf
sub
add
es
repz
std
push
imul
and
test
inc
push
cmp
int
push
shrb
add
mov
or
jns
adc
fildll
mov
cli
or
and
mov
cwtl
loope
push
in
sti
outsb
lock
inc
and
and
dec
in
fidivrl
outsl
inc
dec
divb
jle
mov
shrb
ljmp
jbe
mov
jns
out
mov
or
jp
stc
jnp
pushf
incl
shlb
popa
inc
sub
or
cmp
mov
xchg
ficomps
xchg
movsb
lahf
insl
ffreep
cmpsb
pop
adc
je
hlt
flds
or
rcll
adc
scas
iret
fidivrs
repnz
rol
pusha
in
addr16
mov
cmpsl
lds
shl
es
or
sub
mov
cli
clc
jg
inc
and
daa
loopne
lret
icebp
cmp
inc
js
in
add
push
scas
and
subl
test
and
mov
sbb
in
sbb
xor
push
outsb
movsb
xchg
or
push
mov
fisubrs
icebp
adc
aaa
and
call
rcrb
push
mov
lods
fdivs
out
sbb
fcomps
enter
and
in
fisubs
mov
fwait
test
sub
pop
fyl2xp1
jb
testb
notl
test
or
mov
adc
xor
sub
mov
xchg
adc
dec
mov
loopne
cmp
inc
adc
fwait
mov
stos
outsl
outsb
cmp
cmp
add
jmp
inc
cli
sbb
arpl
inc
jne
inc
les
ret
lcall
lock
loop
jg
ss
mov
xor
cmp
popa
movsb
mov
ja
loope
int3
ds
fists
jmp
and
mov
sti
ret
jb
loope
dec
push
lret
cmc
jb
mov
loopne
dec
cmpsl
cs
dec
outsb
xchg
dec
or
and
jl
add
fildll
cs
or
fmull
ljmp
mov
mov
roll
xlat
jne
pusha
or
pusha
mov
lret
mov
clc
pop
dec
fwait
in
xchg
ds
leave
int
jle
cwtl
lcall
adc
repz
out
push
lods
add
sti
xchg
mov
shlb
das
aaa
loop
adc
xchg
stos
ds
push
xor
mov
out
pop
xor
jno
cmp
in
ds
push
sbb
add
je
xchg
aam
lahf
mov
sbb
sbb
subb
and
es
cmpsb
mov
test
jmp
test
js
jno
mov
mov
or
xchg
nop
stos
outsb
xchg
dec
jnp
fistpll
imul
dec
cmc
pusha
cltd
rol
mov
inc
stos
jg
jnp
mov
gs
mov
jno
push
andb
jl
sbb
xchg
mov
popf
arpl
cmp
mov
sub
cltd
pop
and
dec
gs
aad
sbbl
mov
sub
pop
mov
push
ljmp
mov
aam
stc
outsb
mov
outsb
outsb
sbb
aaa
js
call
pop
xchg
imull
xchg
loope
jg
xor
and
ljmp
push
mov
call
cli
adc
repnz
pop
push
dec
sub
mov
or
dec
mov
cmp
aad
mov
insl
cmp
outsl
mov
xlat
clc
mov
scas
sahf
and
push
in
sub
cmp
mov
push
ja
pushl
inc
jge
dec
push
lea
jno
and
inc
out
sbb
mov
sti
push
jmp
push
mov
pusha
mov
inc
adc
jns
add
nop
cwtl
loop
xchg
inc
cltd
jp
int
jns
subl
pushf
sahf
or
adc
clc
mov
or
cld
sub
pop
jmp
mov
sub
pop
les
pop
mov
iret
jl
lods
ret
and
ret
pop
sbb
icebp
movsl
xchg
push
jge
test
mov
or
cltd
ja
in
dec
xchg
adc
movsb
jecxz
fs
andl
xchg
call
adc
push
ss
in
sbb
or
les
add
jae
mov
stos
shll
xchg
mov
jne
enter
cs
icebp
imul
mov
hlt
mov
adc
xchg
xor
or
mov
jmp
cmpl
xor
jae
dec
fs
pop
fnstsw
dec
js
cmpsb
mov
mov
xchg
xlat
test
and
mov
cli
inc
js
je
incb
dec
push
mov
aam
sub
pop
jnp
pop
xchg
xchg
inc
fnsave
jle
popa
cmpb
loope
cld
cwtl
arpl
xchg
jg
test
jg
jae
jl
dec
in
test
neg
pop
dec
cmp
cli
or
std
in
sub
push
movsl
mov
xor
mov
mov
out
mov
dec
mov
fnstsw
xchg
pop
aad
xor
mov
into
cld
sub
mov
pop
mov
and
mov
cltd
adc
pop
fildl
lds
sub
dec
push
pop
push
cmp
xchg
inc
mov
pop
jns
and
outsl
push
test
fwait
stc
daa
pop
adcb
xchg
pop
lea
cmp
fcoms
stos
mov
frstor
ss
mov
outsl
xlat
jb
je
inc
xor
fcomps
imul
dec
loopne
add
mov
xchg
fimuls
dec
inc
xchg
dec
lock
dec
int3
andb
or
mov
mov
sbb
xchg
sarl
rolb
or
hlt
sti
jbe
and
das
push
push
xlat
mov
mov
sbb
sbb
loop
mov
add
mov
adc
lods
je
push
inc
out
rorl
fsubl
mov
testb
mov
adc
pop
leave
push
xchg
int3
mov
adcl
xchg
sbb
fstpl
sub
cld
xchg
cltd
out
pop
push
les
xor
daa
push
fs
mov
std
or
jae
mov
jp
xchg
bswap
call
inc
ljmp
test
jl
sbb
sbb
jns
inc
std
mov
sub
mov
loop
sarb
ficoms
inc
sbb
pushf
arpl
dec
leave
repz
cld
and
je
adcl
jmp
ds
sbb
stc
ja
sarl
ret
inc
mov
popa
iret
inc
subb
xchg
sub
sub
mov
mov
das
push
sub
jbe
das
inc
fwait
mov
or
clc
mov
push
push
arpl
jbe
rcrl
pusha
jae
lock
rcrl
filds
cmp
ss
imul
sub
and
mov
sbb
mov
xchg
fcmovne
dec
subb
sbb
out
imulb
outsb
cmp
dec
enter
lcall
or
aad
adc
xor
inc
scas
and
pop
iret
mov
in
dec
dec
or
testl
xor
ret
pop
test
pop
dec
and
mov
lods
out
ror
test
jo
xchg
xchg
jne
sbb
mov
xchg
sub
jmp
xchg
adc
xchg
lret
lock
pop
sbb
fwait
and
sahf
dec
icebp
jbe
cmp
popf
movsl
test
xor
jno
mov
pusha
dec
mov
and
in
negl
cmp
daa
mov
daa
jle
mov
push
push
mov
stc
add
mov
sbb
loope
ret
es
cli
pop
push
xor
push
fsts
test
or
in
dec
das
jmp
pop
dec
mov
aad
pop
pop
shlb
xchg
sub
adc
rclb
stc
adc
push
out
sbb
cli
mov
loope
jmp
scas
mov
popf
rorl
stos
mov
sarl
dec
in
hlt
out
setge
or
mov
gs
mov
pop
ret
mov
pandn
lcall
sbb
aam
aam
adc
or
adc
adc
mov
ds
add
test
daa
dec
dec
inc
inc
push
sbb
int3
jecxz
jne
xchg
xchg
jns
xchg
jbe
rcrl
sub
dec
cli
mov
mov
pop
lds
aad
hlt
mov
xchg
cli
mov
and
or
jnp
push
repnz
mov
lret
clc
cmc
ljmp
shlb
jmp
sub
loopne
xchg
popa
movsl
stos
adc
mov
bound
orl
cmpb
jae
leave
ja
ret
ja
dec
sub
fisttpl
aas
dec
std
int
dec
jmp
jle
popf
add
add
lds
std
jae
cmpsl
iret
repnz
mov
mov
inc
pop
inc
mov
aad
int3
mul
pop
outsb
xor
out
mov
repz
sbb
shrb
xorl
mov
jno
outsb
jbe
mov
xlat
mov
cmp
push
xlat
push
mov
icebp
xor
sbb
mov
nop
loop
mov
mov
js
sbb
xor
push
mov
xchg
lahf
xchg
jle
shrb
pop
jl
bound
mov
push
in
jmp
aas
repnz
fnstsw
dec
ficoml
cmpsl
xor
adc
mov
mov
orl
ret
test
jo
xor
das
dec
xchg
stos
lahf
ss
dec
dec
movsl
mov
fildll
jno
push
out
push
stos
ljmp
ficompl
mov
adc
int
je
loop
sub
icebp
test
cmp
fmuls
inc
push
roll
out
stc
fidivl
xchg
xor
xchg
mov
or
inc
pusha
jl
gs
jb
sub
fs
cld
mov
inc
mov
pop
ljmp
jae
cmpsl
inc
clc
scas
push
fsubl
cmp
lret
mov
cmp
in
aaa
js
iret
cmc
lret
mov
fucomi
xlat
insb
cwtl
sbbb
ljmp
pusha
ja
outsb
xchg
pop
push
fidivrs
stc
fcmovnbe
xchg
test
xchg
sahf
insl
xlat
push
xor
push
sub
xchg
mov
cld
cmpsb
clc
fwait
out
leave
lret
add
fists
and
push
mov
pop
rclb
push
xchg
or
insl
addr16
mov
into
sbb
ds
push
xchg
inc
addr16
repz
mov
mov
out
mov
cmp
adc
sbb
lcall
stos
scas
dec
test
sbbl
cmpb
mov
mov
pop
or
inc
sbb
xor
je
jmp
sahf
test
arpl
mov
mov
mov
mov
loopne
xchg
pop
repnz
int
popw
jae
adc
cs
mov
in
mov
pop
ficoml
mov
fwait
ret
or
pop
xlat
dec
sub
fnstcw
xor
mov
mov
movsb
mov
sub
test
movsl
pop
aaa
lret
loope
es
xchg
jno
rcrb
outsl
fcompl
xor
cmp
and
mov
loop
mov
jp
add
push
cld
push
cmpsb
dec
movsb
sahf
leave
je
sub
inc
in
std
push
pushf
imul
in
mov
gs
dec
inc
decb
push
or
les
adc
cmp
xchg
cmp
sub
dec
push
pop
loope
in
dec
mov
mov
sub
and
andl
inc
push
xor
call
adc
push
pusha
jne
movl
sub
loope
jb
fsubrl
hlt
or
xor
inc
dec
mov
xchg
lea
ret
jns
test
jmp
js
icebp
push
mov
enter
testl
bound
out
sub
incl
mov
push
std
and
push
sub
ljmp
pop
jns
daa
xchg
jo
sbb
sub
mov
sti
aas
dec
push
jb
dec
rorb
push
lret
adc
inc
mov
hlt
add
jecxz
sbb
sbb
mov
push
faddl
jge
fisubrl
stos
and
leave
inc
or
leave
test
jl
cmc
push
xchg
lods
rol
loop
sbb
movsl
out
sub
insl
test
adc
call
cmp
mov
ret
nop
mov
in
out
fcmovbe
adc
adc
mov
push
sti
lret
cld
orl
push
xchg
rcrl
jne
nop
in
incl
push
adc
dec
call
pushf
sbb
dec
out
bound
pop
cmp
lods
jae
lahf
adc
shl
pop
sub
mov
out
clc
lcall
inc
rolb
xor
repnz
ret
mov
out
pop
in
scas
test
pop
cmp
popf
xchg
mov
imul
out
cmpsl
fld
test
into
or
nop
push
in
inc
and
aad
adc
xor
sbb
push
jge
dec
adc
xchg
inc
popf
jge
cwtl
popf
sarb
cmc
and
cwtl
ret
nop
int
shll
sbb
fwait
cwtl
dec
mov
jp
bound
test
in
subl
pop
mov
xchg
rcrl
sbb
mov
adc
cmp
and
sahf
clc
xchg
xor
sbb
popf
and
inc
xchg
imul
mov
lcall
add
test
dec
mov
mov
inc
ljmp
lods
cwtl
cmc
push
stos
push
js
xchg
fmuls
sub
nop
xor
clc
adc
mov
es
je
adc
fstps
cmp
es
lret
mov
dec
stos
jecxz
jo
daa
mov
cmp
fxch
ret
mov
mov
fsubrl
push
push
ljmp
cli
cmp
jne
insb
rcr
push
or
mov
cmp
imul
xchg
sbb
mov
shrb
xchg
inc
adc
lea
je
xchg
add
jnp
call
push
test
add
sub
hlt
push
fsubrl
pop
aas
or
or
in
xchg
cmpl
pop
daa
pop
mov
stc
hlt
fwait
mov
push
cmp
mov
xchg
jg
cmp
jae
mov
cmp
std
jmp
dec
pop
mov
in
les
les
jmp
lahf
mov
ljmp
or
dec
imul
add
push
outsb
test
jle
push
and
sbb
sbb
mov
mov
xchg
repz
add
je
mov
inc
fadds
cmp
jl
or
in
sub
decb
push
xor
mov
imul
sahf
or
mov
pop
in
and
add
adc
adc
loop
cmp
mov
cmp
pop
div
mov
pushf
sbb
dec
adc
or
repz
sahf
ds
mov
test
ficompl
test
sahf
enter
mov
dec
cmp
sub
mov
jp
call
ret
pop
add
bound
xchg
loope
stos
lock
leave
inc
jns
test
or
jge
cmp
fs
emms
push
jmp
jb
sbb
mov
sbb
xor
mov
aad
dec
ror
xchg
inc
inc
pop
adc
push
hlt
add
in
movsl
stos
jb
je
inc
cmp
mov
push
push
mov
stos
nop
sbb
jae
xor
sub
cli
dec
je
add
jb
mov
push
xor
push
mov
and
or
xchg
add
add
push
or
jae
mov
push
out
cmpb
outsl
push
or
xchg
inc
dec
mov
xchg
jbe
xchg
or
or
jnp
daa
pop
adc
mov
lret
jle
xor
push
xor
or
loope
dec
lcall
outsl
test
and
mov
push
mov
lret
sub
in
int
stc
daa
mov
adc
lahf
mov
out
test
jge
mov
jo
jae
fstl
mov
pop
add
orb
and
push
mov
mov
insb
fidivrl
popa
xchg
call
loope
nop
jp
ss
loope
jno
pop
lds
mov
dec
push
sbb
jg
nop
push
int3
push
sub
lea
dec
jo
adc
mov
das
mov
decl
dec
sub
mov
lcall
jb
pop
cmpsl
jmp
xor
in
xor
sub
gs
and
cmp
stc
adc
lret
es
push
inc
mov
mov
push
pop
data16
pop
and
cltd
or
inc
cmp
lods
imul
inc
sbb
sbb
out
pusha
adc
repz
xchg
lret
mov
sti
pop
jl
pop
js
shll
adc
pushl
jo
scas
mov
clc
or
jp
fdivl
fnstsw
lea
stos
xchg
je
sti
push
imul
adc
out
jb
cmp
das
test
xchg
cmp
lcall
xor
std
jle
in
xchg
and
push
orl
sub
pop
add
outsb
xor
or
dec
xchg
push
outsb
pop
lret
nop
mov
xchg
dec
push
jae
push
ret
mov
pop
sbb
stos
jp
test
out
mov
rcrb
aam
push
rclb
sbb
rdmsr
pop
enter
xor
mov
push
mov
aad
xor
adc
xchg
jo
pop
add
aad
mov
xor
fst
jp
xchg
xchg
add
outsb
and
in
cmp
movd
repz
in
out
loop
insb
xor
xor
idiv
lods
dec
enter
inc
jbe
xor
in
jne
sti
mov
in
sub
in
mov
pop
into
push
fs
out
jecxz
sbb
fiadds
es
or
mov
lods
mov
out
push
out
cmc
mov
add
out
cmp
gs
cmp
push
jae
mov
push
adc
xacquire
fcomi
and
xor
mov
xchg
fwait
adcl
enter
imul
cwtl
mov
pop
fwait
xchg
pop
movsl
je
inc
arpl
sub
outsl
jns
sbb
cmp
push
gs
push
mov
call
lds
mov
and
pusha
aam
aas
cmp
icebp
cmp
adc
mov
mov
push
mov
in
cmp
mov
xor
pop
sti
push
arpl
inc
movsl
cwtl
push
popa
aam
xchg
sbb
mov
sub
dec
sbb
pop
int3
dec
xchg
out
or
dec
clc
cmp
mov
mov
les
pop
pop
out
out
mov
sbb
das
mov
arpl
xor
dec
cmp
pushf
rolb
xchg
dec
inc
addb
dec
push
push
inc
fsubrs
scas
or
xor
lret
or
push
jmp
jp
test
daa
loop
mov
jno
cmp
add
in
push
cmp
inc
add
js
push
mov
xchg
xchg
pop
add
pop
adc
aad
dec
jle
je
pop
stc
icebp
gs
or
jg
rcl
shlb
shll
mov
arpl
pop
xlat
mov
or
lcall
ljmp
xlat
and
xor
ret
loop
mov
loope
xchg
inc
adc
fwait
adc
fwait
shlb
mov
xor
out
push
or
xchg
cmpsb
stos
sbb
or
adc
addr16
aam
sbb
pop
lret
sbb
xchg
mov
out
jmp
mov
pop
gs
xchg
jle
cltd
adc
jge
and
movsb
fcoml
setb
inc
jns
add
pushl
stos
rcrb
loopne
sub
gs
cmp
icebp
stos
jecxz
xlat
mov
dec
imull
decl
dec
call
lea
sub
test
mov
sahf
mov
mov
cmp
in
jmp
jne
mov
stos
fcoms
fistps
or
js
das
and
nop
out
add
lds
or
enter
sbb
mov
mov
repnz
pop
mov
into
rcll
add
push
loope
add
out
mov
pushl
dec
jge
daa
cld
xor
sub
cmpsl
filds
add
xchg
inc
inc
es
mov
scas
test
sub
mov
add
cld
aam
dec
lock
jbe
mov
xor
cmpsl
out
xchg
mov
push
insb
iret
xchg
mov
das
mov
cwtl
lock
xor
or
mov
mov
int3
cmp
mov
movl
std
je
cltd
jmp
ds
xchg
lahf
mov
scas
fstpl
std
insb
ds
hlt
cmp
cltd
mov
fisttpll
sbb
or
leave
loopne
push
and
std
cmpb
pop
pop
sub
cmp
pop
mov
lea
scas
outsb
add
jns
sub
clc
fnstenv
and
xor
inc
jl
mov
loopne
pop
push
fisubrs
jno
gs
and
or
xchg
in
push
lret
test
adc
test
int
jle
pop
ljmp
or
push
push
faddl
xchg
leave
call
mov
stc
lock
fs
add
jmp
cmpl
and
in
push
movsb
cmp
aaa
sub
push
bound
shll
dec
adc
mov
rcll
std
into
push
loope
dec
ja
xchg
mov
cmp
xor
in
mov
testl
mov
loope
cmp
insb
movsb
inc
in
imul
lods
lret
fwait
lods
sbb
cmp
sbb
mov
xor
adc
in
data16
sbb
or
bound
xchg
xchg
adc
jno
jb
fwait
je
enter
inc
mov
dec
push
enter
dec
pusha
ds
mov
adc
cltd
out
popw
xchg
dec
push
cltd
je
xor
mov
iret
add
xchg
push
std
jp
ret
mov
mov
rolb
push
icebp
lret
cmp
cmp
mov
enter
sbb
push
xchg
ss
daa
jnp
ffree
jg
cwtl
fisttpl
pop
int3
inc
sub
jnp
cmp
ret
ljmp
jbe
mov
daa
out
loop
daa
xchg
pop
or
pop
sahf
loop
or
pop
push
cwtl
mov
lcall
mov
aam
cwtl
leave
cwtl
fwait
add
push
sbb
out
ret
in
sbb
dec
jno
add
or
inc
and
or
or
test
xchg
adc
sub
inc
pop
loope
push
adc
pop
jae
aad
jmp
orl
pusha
imul
clc
mov
sbb
packsswb
dec
or
insb
mov
das
inc
jae
daa
or
fs
or
xchg
mov
fdivs
sub
xchg
dec
arpl
dec
xor
mov
js
fbstp
fsubl
mov
shll
adc
add
mov
andl
test
icebp
dec
in
sbb
out
fstpl
mov
xchg
cs
cwtl
ss
gs
mov
jbe
aam
xchg
out
adc
cmp
decl
inc
add
inc
lods
and
out
adc
movsb
call
xlat
fldcw
stos
fwait
insl
shll
add
mov
test
cld
or
cmp
jmp
ss
pusha
xchg
xchg
rclb
sahf
fidivrl
dec
xchg
push
xor
in
xchg
lcall
mov
mov
in
es
or
cmp
testl
jae
lret
je
data16
xchg
fwait
jae
pop
dec
pop
xchg
test
adc
ffree
call
add
call
adc
fcmovne
push
mov
in
imul
movsl
mov
inc
or
pop
mov
dec
xor
mov
sbb
movsl
mov
adc
inc
jns
imul
stos
loop
sbb
fs
push
pop
xchg
inc
and
scas
and
mov
xchg
fwait
pop
mov
sub
push
int
les
mov
dec
movl
mov
out
out
mov
xchg
dec
push
cmp
cmp
daa
fiaddl
sub
push
mov
push
aam
mov
pop
insb
mov
jns
cmpsl
add
push
adc
aad
fnsave
jne
lods
cltd
push
cmc
adcb
int
loope
mov
dec
leave
movsl
jmp
scas
mov
add
pop
mov
das
add
hlt
jp
lock
dec
lret
jns
pop
lock
cmp
or
mov
fmull
cld
mov
cmp
out
div
jmp
mov
idivb
pop
shlb
loopne
out
dec
jns
ret
hlt
ja
inc
xor
loopne
cs
xchg
leave
mov
ds
dec
xchg
inc
sti
cs
int3
daa
sbb
sbb
mov
xor
imul
fld
inc
jmp
mov
test
int3
hlt
sub
mov
aas
inc
push
leave
test
sbb
test
pop
loop
cmpsl
sbb
mov
mov
in
ficoms
dec
loope
push
xlat
inc
shll
add
dec
sub
sub
mov
or
mov
lret
sub
mov
test
xchg
test
pop
mov
push
pop
pop
add
sub
push
gs
in
add
add
inc
push
cmp
into
fsubl
enter
cli
in
int
std
lock
mov
loop
cmp
je
mov
movsl
inc
pop
pop
pusha
sub
jnp
nop
jp
pop
or
ljmp
and
sbb
ret
xlat
jne
popf
xchg
insl
paddw
cmpsl
fiadds
out
movsb
push
fsts
cli
int
pop
xchg
stos
enter
lea
xchg
push
out
cwtl
fnstcw
dec
popa
test
test
dec
clc
sub
repz
push
mov
jmp
mov
rorb
movsb
mov
inc
test
fnsave
test
cmpb
add
in
or
int3
mov
sbb
loope
mov
leave
dec
jns
imul
bound
inc
rcll
or
jns
mov
movb
je
insb
je
add
inc
movsl
lahf
fs
es
xchg
mov
xchg
rcrb
lods
outsb
mov
sub
dec
push
xchg
in
push
scas
nop
popf
dec
mov
lea
jns
mov
cltd
movsb
and
in
xlat
popa
scas
mov
in
adc
dec
imul
add
addb
jb
ds
int
es
xlat
lcall
popf
pop
add
dec
fs
jbe
shll
pop
gs
mov
cmp
sahf
rclb
inc
mov
sub
sti
jge
add
lcall
fwait
cmpsl
lods
sar
pop
les
cld
lds
inc
xchg
cs
mov
mov
or
push
outsl
dec
sub
and
pop
xchg
mov
call
adc
incl
loop
es
test
mov
xor
imulb
jnp
rorl
out
dec
das
lcall
xlat
dec
pop
xchg
inc
inc
sbb
pusha
cmp
mov
ficoml
sub
dec
mov
call
bound
cmp
cmp
or
add
out
nop
push
test
jge
sbb
push
rol
sub
aam
dec
cmpsl
cmp
fiadds
jge
sbb
pmaddwd
push
adc
cmp
stos
xor
fs
or
pop
or
cmp
mov
jae,pn
push
xor
xchg
js
fsub
mov
shrl
add
add
cmp
fmull
outsl
fstl
lcall
mov
repz
popa
adc
cmp
ja
xor
enter
adc
imul
ret
xchg
cmp
addl
dec
push
jns
pop
or
mov
lcall
push
aam
ja
jecxz
cltd
pop
dec
imul
adc
cmp
xchg
shrb
js
icebp
and
lahf
push
sub
xchg
inc
scas
push
jle
mov
call
cmp
inc
dec
jae
cmpl
or
xabort
iret
scas
push
mov
xorl
rclb
cmp
dec
jle
dec
aad
jl
in
imul
int
dec
sub
sbb
pop
adc
std
out
int3
mov
pop
cmp
mov
sbb
frstor
out
popa
mov
sahf
push
add
dec
inc
inc
mov
rcl
rcll
cmp
mov
cmp
mov
jg
pop
outsb
loop
add
jle
mov
xchg
subb
mov
iret
jnp
add
fwait
inc
push
mov
push
in
inc
cmp
pop
leave
insb
leave
and
subb
jae
hlt
add
cmc
inc
bound
mov
adc
inc
call
shlb
dec
mov
jnp
out
mov
mov
push
xchg
cmp
dec
xor
test
in
aam
scas
mov
xor
adc
ret
jns
daa
cmpl
subb
dec
dec
jb
aaa
pop
loope
fsub
lea
ds
add
lds
rorb
popa
shll
or
dec
std
out
mov
testb
mov
mov
pop
pop
or
pop
loop
add
jne
cmp
push
pop
xchg
mov
and
hlt
adc
sub
ret
mov
ret
in
fcmove
mov
shl
or
in
aad
pop
imul
popa
push
push
imul
push
or
fnstenv
loopne
fidivrs
push
mov
xorl
pop
pusha
push
fdivr
sbb
add
stos
push
xchg
subb
jno
cld
xchg
popa
xor
lea
xor
mov
mov
jmp
jo
jge
push
jns
push
jns
les
cmp
cmp
xchg
xchg
sub
jmp
es
fs
xchg
ljmp
cmc
pusha
xchg
imul
fsubrs
mov
cs
push
xchg
in
xchg
mov
insb
dec
outsl
lret
test
cmp
lock
lret
dec
ret
loop
leave
add
mov
jno
stc
inc
adc
pop
popf
popf
lea
jmp
pop
out
sub
stos
in
sti
insb
divb
nop
jg
cmp
pop
dec
inc
mov
add
jge
sbb
mov
xor
xor
shrl
sub
in
add
vmread
sub
jg
pop
push
loop
mov
into
pop
push
xchg
maxps
fidivs
insl
fcomp
lret
imul
mov
jmp
leave
into
aas
jmp
cmp
ret
ret
mov
pusha
xorb
push
xor
nop
mov
pop
leave
mov
xor
push
rcrb
outsl
xchg
clc
scas
and
inc
xchg
pop
or
add
add
cmp
push
inc
pop
jle
xchg
fwait
mov
pop
ja,pt
sub
lods
dec
cmp
out
cs
cld
add
sub
cmp
iret
add
sub
mov
jbe
mov
outsb
xor
insb
or
push
mov
sbb
sti
fs
and
inc
cmp
add
popf
insl
das
add
pop
pop
and
shll
popf
out
pop
push
mov
pop
mov
shrb
push
jb
lret
sbb
dec
fs
out
sti
xchg
dec
pop
sahf
pop
sbb
or
mull
icebp
xor
push
mov
pop
cmp
aad
jl
dec
mov
add
and
in
xchg
sbb
imul
cli
outsb
aad
in
mov
push
sub
loope
or
and
cs
or
lock
adc
ds
and
lock
pop
xchg
jp
push
mov
dec
xchg
lods
out
popf
ja
or
cmc
hlt
inc
push
inc
jg
mov
adc
add
movl
call
add
fldcw
xchg
imull
out
mov
jae
inc
stos
xlat
mov
rcll
enter
mov
xor
xor
xchg
pop
sbb
clc
or
call
mov
mov
pop
aam
xorl
sub
xchg
rol
daa
sti
addr16
ja
sbb
xor
sbb
addr16
insl
int3
pushf
aad
jo
jo
push
rcrb
test
fs
fwait
dec
imul
mov
add
dec
sahf
and
inc
mov
cwtl
mov
lret
insb
sub
add
fsubrl
adc
call
mov
add
ror
das
jne
push
int
xchg
roll
out
dec
rcrl
mov
jmp
push
out
mov
cld
into
mov
fs
arpl
jno
mov
mov
mov
hlt
add
add
push
es
aaa
pop
cmp
addr16
jge
pop
push
sbb
imul
ret
xchg
pop
rcr
mov
cltd
mov
int3
clc
mov
jle
or
outsb
push
pop
hlt
aas
shll
ficompl
xchg
scas
imul
in
pop
ret
adc
addr16
enter
mov
ljmp
inc
js
pusha
cmp
orb
mov
xor
mov
inc
dec
mov
adc
call
mov
add
xor
insb
pop
jmp
push
mov
mov
xor
sarb
jp
add
mov
jb
sbb
ja
push
mov
or
sbb
cmpsl
mov
push
addl
dec
mov
push
and
sub
enter
cli
dec
sbb
dec
data16
push
jmp
mov
push
jno
incb
xchg
gs
data16
movsl
jae
ret
cmc
cmp
push
or
sbb
gs
mov
mov
scas
or
inc
mov
test
movl
aas
lahf
int
mov
stos
imul
add
sarl
dec
aam
cld
inc
sbb
mov
loopne
nop
push
int3
std
adc
pop
mov
add
arpl
jl
lret
and
mov
push
cmp
mov
fs
mov
mov
rol
add
and
mov
lods
mov
or
add
rcr
fstps
sub
cli
out
jg
in
fistps
add
or
add
xchg
mov
lahf
dec
in
cli
lahf
jno
jnp
or
imulb
jecxz
imull
cli
push
fiaddl
dec
xlat
sub
inc
stos
cs
addl
mov
mov
sub
jle
testb
rorb
test
or
pop
scas
mov
inc
outsl
stc
lret
data16
push
dec
dec
adc
mov
mov
shlb
popf
push
jnp
stc
and
test
repnz
cld
xor
enter
rorb
xor
mov
mov
adc
lods
addr16
sub
fs
push
dec
daa
xchg
dec
outsb
and
cli
pop
mov
ds
pop
mov
xchg
dec
iret
int
pop
inc
in
fadd
ffreep
sahf
sbb
popf
mov
and
mov
mov
mov
jae
or
mov
lea
arpl
shrb
lret
imul
pop
lcall
andl
jecxz
cli
sbbl
cmc
outsb
mov
ret
ja
sti
pushf
and
inc
hlt
je
dec
mov
arpl
ret
push
ret
popl
aad
jns
aad
lods
scas
and
ds
in
mov
inc
clc
jae
add
lret
cmpl
neg
in
mov
or
xchg
jmp
cmp
xchg
outsb
insb
pushf
mov
lods
fisubl
cwtl
adc
sbb
xchg
movsb
insb
xchg
pop
or
es
or
scas
dec
sub
sub
outsl
sti
sub
and
mov
pop
popf
pop
js
stc
push
stos
mov
shr
mov
add
call
jge
or
xchg
test
xor
insb
fadd
jg
mov
out
xor
jns
lcall
js
mov
or
addr16
decl
jno
aad
cmp
mov
push
repnz
bound
imul
shr
dec
add
clc
fcomps
repnz
fildll
jno
rcrb
mov
mov
dec
iret
and
jecxz
pop
mov
lods
es
xor
mov
adc
xchg
mov
mov
nop
ljmp
mov
sti
aas
pusha
pop
mov
fstl
and
mov
dec
xor
inc
outsb
add
fsubl
jmp
test
add
movsb
fistl
sub
cmpsl
push
lahf
and
pop
add
pusha
cmp
mov
xchg
mov
pusha
pop
rcrb
xor
jle
cltd
push
fcompl
or
pop
push
out
fstpl
gs
pop
test
jo
js
xchg
mov
pop
mov
jmp
or
jmp
push
xchg
ljmp
inc
jl
and
mov
cwtl
jae
lods
pop
lds
out
xchg
push
fdivs
push
mov
pop
jo
ficomps
inc
hlt
inc
fcom
jne
dec
adc
js,pn
or
test
popf
push
scas
inc
and
mov
sbb
xchg
cmpsl
mov
jo
arpl
arpl
loop
loopne
in
lret
popf
sub
notl
sahf
jne
es
test
mov
cld
sti
aaa
scas
xchg
jnp
push
or
xor
ds
cmp
stc
cmp
rcrl
bound
fnsave
jbe
push
push
push
int
jmp
das
xchg
movsb
cmpsb
xor
gs
sbb
dec
push
pop
sbb
fisttps
lret
scas
clc
repnz
push
dec
xchg
jb
pop
push
cmp
dec
cmp
and
dec
push
push
mov
mov
sbb
cld
lcall
pmuludq
sbb
push
ss
add
sahf
fs
cmp
repz
or
cs
or
mov
loop
dec
pop
add
mov
sub
dec
adc
mov
mov
and
mov
jae
xor
lods
xchg
popf
pop
or
sar
push
push
sbb
inc
inc
leave
scas
xlat
cmp
movsl
scas
and
popf
or
out
sub
ss
sbb
pop
mov
xlat
rep
call
push
cmp
xor
aam
enter
lahf
popa
xchg
bound
jns
sbb
ret
pop
fildll
sahf
adc
push
sbb
or
dec
push
cli
fsubrl
inc
popl
adc
ds
cld
sbb
les
test
mov
inc
gs
stos
push
insl
inc
jno
xchg
jns
adc
xchg
cmpsb
rclb
mov
in
sbb
sub
mov
pop
leave
xor
fnstenv
inc
leave
dec
int
pushf
pop
nop
imul
movhps
inc
xlat
pop
out
cli
or
pop
xor
sbb
push
or
push
add
cmp
cmpb
mov
cwtl
adc
inc
push
in
mov
mov
sub
aaa
scas
jmp
ret
lcall
inc
pushf
push
repnz
push
in
ret
inc
and
idivb
mov
pop
jbe
mov
addb
lcallw
pop
int3
or
jns
ljmp
enter
invd
sbb
push
filds
xor
lods
jno
dec
leave
cmpsb
pop
and
mov
xchg
jno
mov
dec
mov
pop
in
movsl
cltd
pop
sahf
jecxz
dec
faddl
xor
repnz
clc
pop
push
add
outsl
mov
sbb
cmp
js
rcrl
xchg
iret
pop
hlt
ds
add
repnz
jle
pause
and
jmp
pop
bound
test
ljmp
enter
dec
fstpt
inc
add
adc
sarb
inc
int3
jno
sbb
or
adc
dec
dec
mov
faddl
push
arpl
xchg
sti
pop
xor
jmp
ret
push
sbb
or
aaa
add
xchg
cli
inc
leave
es
stos
outsb
loope
jmp
js
fldt
movsb
push
xor
sbb
push
push
push
xor
jae
ss
adc
cs
xor
mov
add
pop
ficomps
sbb
out
ljmp
mov
add
and
js
das
sub
xchg
dec
dec
nop
sbb
mov
mov
shrl
xchg
adc
dec
xor
clc
in
lcall
popf
and
or
dec
push
insb
xchg
jecxz
pop
and
inc
imul
sub
lcall
cmp
cmp
mov
sbb
imul
sti
lret
xor
in
movlps
jno
imul
test
push
jo
in
push
mov
out
lods
jge
mov
loop
push
adc
movsl
dec
mov
call
pop
and
xchg
xorl
jl
jle
dec
pop
sar
jmp
mov
pop
decl
or
orl
out
xchg
pusha
mov
lods
sbbb
lcall
jo
outsb
cmp
add
call
or
or
xor
es
fiadds
cltd
aam
in
mov
adc
lods
adc
jle
stos
test
xchg
sbb
mov
sub
jle
xchg
aam
dec
icebp
shlb
mov
repnz
pusha
idivb
or
imul
mov
cmp
pusha
push
jecxz
push
decb
inc
in
xor
xor
add
mov
imul
xchg
jge
aas
test
add
ljmp
stos
cmc
pop
xchg
mov
mov
andl
mov
jo
pop
aas
cli
cld
je
int3
xor
xchg
mov
enter
jp
add
lcall
sbb
fsubs
cmp
ds
aas
sbb
jmp
mov
add
cmpsl
hlt
add
xor
add
repnz
cmp
or
fisttpll
xor
adc
imul
ds
mov
xchg
push
jmp
xor
cltd
jecxz
or
rolb
jg
and
mov
test
push
in
and
or
in
dec
nop
lods
subb
and
dec
add
call
dec
jae
lds
or
mov
or
xchg
jns
push
int
test
cli
ja
xor
lock
pusha
jne
sti
jnp
and
imul
cs
stos
and
sub
pop
aaa
out
or
ficompl
sarl
pop
jecxz
xchg
cli
lret
stos
test
mov
or
mov
inc
or
in
jbe
ss
lcall
ljmp
repnz
xchg
jnp
sbb
mov
mov
fdivs
stc
jb
and
pop
es
aad
push
xlat
mov
or
push
and
mov
dec
jo
rclb
xorb
loope
jns
adc
hlt
sbbl
xor
xchg
negl
cwtl
sub
je
mov
mov
out
cmp
outsb
outsl
aaa
jmp
in
mov
aaa
stc
push
notb
leave
sarb
aas
pusha
sbb
mov
jge
jg
dec
push
js
fisubrs
dec
dec
mov
clc
pop
fucom
repz
xor
data16
outsl
aam
push
sbb
outsl
xor
mov
xor
gs
mulb
ds
nop
stc
and
popf
mov
arpl
xchg
cmp
ljmp
aas
add
inc
adc
bound
xor
jl
test
sbb
and
aas
xor
es
inc
xchg
sbb
mov
sbb
push
xor
clc
std
jge
test
xlat
cmp
pop
sub
out
sbb
jg
dec
stos
adc
push
sbb
adc
and
sahf
movsl
in
cwtl
cmc
test
mov
aas
arpl
sti
cmp
mov
push
lods
insb
lods
jmp
stos
xchg
jmp
xchg
leave
adc
jl
fnsave
mov
int3
sub
xchg
pop
stc
sbb
jecxz
loopne
pop
xchg
adc
mov
popa
in
dec
stc
fldt
inc
jnp
xchg
xor
and
jns
jp
mov
gs
outsl
sbb
clc
jnp
mov
fcmove
aam
icebp
imul
pop
sub
lea
repz
loop
mov
sti
cltd
fs
sub
or
cwtl
add
mov
jmp
stos
mov
nop
adc
test
ljmp
jbe
pop
roll
dec
data16
test
mov
and
out
mov
xchg
lret
mov
push
jbe
jae
rolb
push
rolb
jb
jg
divl
jo
cs
push
adcl
popa
mov
lcall
sbbb
mov
dec
fdiv
ffree
cmpsb
pop
sub
out
xchg
xchg
dec
sbb
les
in
jbe
repnz
fsubrl
mov
or
sub
push
sbb
adc
sub
ljmp
repnz
popa
cmp
lock
jae
bnd
pop
pushf
push
fdivr
jle
insl
fdivrp
or
xchg
shrb
out
push
das
inc
cmp
cwtl
pusha
loopne
rcrl
and
lods
jb
fnstsw
cmp
xchg
jl
jl
adc
push
outsl
xchg
jp
in
jge
push
and
enter
xchg
in
xchg
ljmp
fs
sbb
pop
in
ljmp
cli
out
lret
push
iret
cld
leave
les
sti
jns
xor
ljmp
pop
dec
inc
xor
decl
clc
sub
add
es
xor
aad
jmp
mov
in
sbb
sub
jb
shll
out
and
stos
mov
inc
push
stos
dec
arpl
hlt
data16
popa
std
fwait
jb
jecxz
insb
stos
mov
and
fstpt
xchg
jl
xor
push
xchg
xchg
ret
sub
and
js
dec
inc
shlb
xchg
pop
mov
mov
mov
sub
test
push
lea
aaa
pop
xor
iret
mov
or
cmp
bound
dec
rolb
mov
mov
sbb
je
pop
jmp
push
gs
shlb
scas
and
jns
iret
pop
lcall
fs
push
cs
or
cmp
loope
stc
inc
sbb
push
and
hlt
fidivrs
insl
push
rcrb
orl
xor
ret
inc
popf
jno
test
jl
cli
or
mov
inc
or
xchg
mov
xor
mov
shrl
and
xor
xor
sub
adc
test
movsl
daa
xor
ljmp
rorl
repz
inc
add
lds
inc
jp
addr16
pop
hlt
test
lock
push
cmp
mov
shlb
jnp
stos
dec
jecxz
sub
mov
jmp
mull
inc
shrb
mov
push
or
inc
adcl
push
lea
jecxz
mov
xchg
cmc
mov
in
fs
test
lahf
adc
out
mov
inc
lods
jo
stc
push
adc
ja
mov
shll
push
inc
pop
cmp
int3
xchg
inc
pop
scas
pusha
xchg
push
xchg
stos
mov
xchg
xchg
ficoml
int
adc
imul
aaa
lret
mov
test
push
mov
fimull
push
jmp
data16
dec
sti
xor
scas
int3
add
fists
sti
js
sbb
and
or
dec
pushf
jae
sar
std
fcmovbe
sub
mov
sub
inc
jmp
xchg
inc
add
mov
ljmp
or
jle
pop
mov
inc
sbb
hlt
mov
rcll
popa
adc
decl
sub
int3
adc
repz
mov
mov
jl
mov
dec
mov
and
xchg
dec
push
xchg
paddsb
jge
lret
test
pusha
scas
stos
shlb
imul
imul
in
adc
pop
fbstp
or
aas
inc
and
push
push
idivb
or
call
push
aad
sbb
js
mov
xor
ficomps
lock
loopne
jl
pop
mov
pop
mov
xlat
hlt
test
add
lock
adc
and
mov
sbb
jnp
mov
es
adc
fucomip
movsl
push
insb
jno
cmp
inc
stos
fmuls
shlb
or
fldl
decl
sbb
ja
xchg
dec
lock
popf
sbb
daa
leave
or
dec
fsubrp
mov
or
mov
aam
mov
xchg
dec
xor
cld
pop
roll
sbbb
push
mov
gs
outsb
dec
leave
mov
aaa
out
xchg
or
push
xor
adc
aam
test
adc
pop
pop
cmp
sbbb
dec
loopne
ljmp
push
sbb
fsubrs
bswap
adc
cmp
push
imul
and
or
fstpt
cltd
inc
xlat
and
sbb
add
call
test
or
inc
test
jae
push
ss
or
hlt
js
imul
or
cmp
subb
push
bound
xchg
mov
popf
mov
cmpb
inc
jg
mov
sbb
cmpb
xor
lea
lds
das
dec
loop
fnstcw
add
adc
pushf
mov
ja
or
sbb
pop
or
cmp
aas
push
pop
jne
popa
call
loope
dec
jmp
cmp
sub
or
xor
outsb
fwait
sbb
aas
cld
pop
pushf
cli
xor
cmp
push
sub
bound
rcrl
fwait
xor
leave
idivl
enter
idiv
imul
or
jb
mov
mov
or
out
aaa
dec
mov
push
fs
add
push
inc
in
and
outsb
pop
call
cli
rcll
jle
pop
jl
inc
cmp
test
jle
loope
lock
outsb
push
fsubrp
sub
xchg
outsb
mov
das
mov
pop
popa
ficomps
xor
jmp
ficoms
add
pop
out
mov
mov
nop
pushf
pop
pop
sahf
pop
pop
adc
mov
sarl
nop
fcomi
cmp
cmp
add
test
cltd
mov
fmul
mov
mov
fs
std
or
or
pop
adc
xchg
mov
push
mov
clc
and
and
sub
lods
je
fistl
mov
insb
int
add
add
adc
jns
xor
push
nop
jmp
fnstcw
enter
popa
pop
push
sub
leave
mov
mov
push
cmpsb
movsl
jmp
cmp
divb
test
movsb
mov
cwtl
popa
xor
call
inc
lret
mov
sbb
add
pop
aaa
shlb
sub
mov
in
dec
into
and
inc
push
jb
push
int3
xor
aad
push
pusha
mov
cmpb
sub
ja
cwtl
adc
mov
mov
popa
cmpsl
xorb
adc
shrl
push
test
movsb
pop
pop
ja,pn
cmp
stc
inc
or
aas
push
mov
out
jge
lea
into
repz
pop
imul
ljmp
in
cmp
gs
mov
sbb
jp
js
push
add
je
ret
popf
addr16
rorb
outsl
xor
push
movsl
divb
pop
lret
adc
out
inc
imul
mov
fidivl
or
sbb
je
and
xor
imul
and
xor
mov
clc
popf
jns
out
inc
sub
or
lock
jbe
repnz
testl
mov
or
out
ja
fistps
pop
sub
add
insl
mov
or
lahf
xchg
dec
cltd
mov
test
sub
les
fs
or
push
mov
out
jecxz
ljmp
std
dec
adc
or
aam
hlt
mov
xchg
cwtl
sbb
dec
subb
fwait
inc
pop
jb
pop
call
jns
enter
int
mov
push
xchg
stc
inc
mov
fadds
xchg
adc
shr
gs
pop
leave
nop
add
pop
rdtsc
movsb
bound
and
fs
std
mov
fwait
xlat
sub
cmp
outsl
adc
dec
xchg
popw
push
dec
inc
and
ret
arpl
pop
clc
add
mov
xlat
mov
cwtl
dec
cmp
dec
xor
fs
sub
and
xor
fldcw
xor
inc
pop
test
or
cltd
sti
arpl
mov
inc
es
pop
cltd
sub
scas
dec
jnp
movsl
mov
test
inc
push
adc
scas
cmpsl
xlat
push
loop
cmc
stos
loope
jmp
ljmp
and
les
sbb
rclb
add
mov
icebp
fdivrp
movsb
out
js
lahf
and
sbb
sub
push
outsl
inc
mov
shrb
adc
push
cmp
xchg
pop
mov
test
out
loopne
mov
or
ljmp
cmc
stos
xor
sub
mulb
je
stos
jl
in
or
out
push
loopne
adc
repnz
pop
pushf
mov
sub
lods
xchg
sbb
dec
xor
mov
sub
mov
or
cmpb
popa
orb
popa
adc
and
mov
mov
negl
pop
loope
cmp
test
mov
je
ret
adc
xchg
out
sub
pop
and
lods
lcall
jo
fidivs
cmp
cwtl
cmp
push
scas
outsb
mov
jbe
add
sbb
int3
push
mov
movsl
pushf
mov
jge
test
dec
test
mov
jne
inc
frstpm(287
add
enter
lret
push
ljmp
sbb
daa
jl
jb
add
cmp
mov
pop
sub
popa
xor
sub
cwtl
clc
xchg
rol
xor
daa
imul
mov
jg
push
xor
or
insl
jns
cmp
test
loopne
inc
push
into
nop
jge
pusha
ds
daa
adc
mov
popf
mov
out
mov
inc
push
pop
arpl
and
les
sub
cmc
sub
jno
inc
push
xchg
cmpb
mov
sbb
lods
lcall
movl
inc
inc
outsl
mov
les
sub
cmp
mov
cwtl
push
lds
or
pop
add
in
add
or
fnstsw
cmp
push
sub
mov
or
sub
bound
adc
out
flds
out
inc
bound
dec
mov
repz
and
mov
hlt
and
pop
pop
movsb
fisubrs
pop
mov
mov
pop
and
add
into
repz
cltd
std
insb
mov
repnz
inc
hlt
fs
mov
inc
add
fld
push
xor
sahf
fsts
jb
stos
cmp
xchg
mov
xor
and
or
das
mov
ret
jbe
je
ret
std
cmp
and
test
inc
pushf
imul
int
enter
loop
mov
and
fdivs
xchg
sbb
ja
inc
pop
out
scas
mov
mov
lret
mov
jns
loope
or
inc
mov
andl
cmp
je
cmpsb
push
popa
mov
sub
sbb
and
jb
pop
adc
in
out
cld
rcll
fadds
mov
inc
or
add
je
jmp
mov
lds
jo
mov
jno
mov
rep
inc
xor
subl
in
dec
push
cmovs
push
or
add
popa
jnp
mov
inc
pushf
test
push
sbb
push
scas
dec
and
sub
cmc
xchg
hlt
pusha
adc
lret
adc
xchg
mov
push
and
xor
cmpsl
test
out
dec
xchg
rolb
shlb
pop
push
jo
mov
imul
mov
jle
jmpw
nop
mov
sub
arpl
dec
sub
je
es
mov
cs
jnp
test
jl
sbb
shrb
mov
fs
sub
xorb
push
lret
sbb
sahf
and
cli
and
hlt
mov
jl
push
ret
andb
or
mov
or
pushf
xchg
rcrb
mov
jl
dec
rep
push
pop
cmp
into
addr16
iret
lea
and
mov
mov
mov
jno
and
lods
pop
std
aad
inc
aam
aad
dec
jmp
leave
adc
movsl
cmp
inc
loopne
jl
sub
outsl
sahf
faddl
adc
lret
xor
repz
push
mov
cmp
jne
repz
aas
movsb
insb
ljmp
test
cs
xor
sub
int3
lcall
jae
cmp
push
xchg
inc
and
je
cmp
adc
imul
aas
ret
cmp
or
add
sbb
xchg
out
xorl
xor
jnp
push
or
popa
pop
add
mov
jge
addr16
or
pop
or
lock
movsb
sub
inc
cmpb
and
ret
repnz
js
sub
pusha
sub
sbb
lods
dec
dec
dec
and
dec
adc
out
xlat
fimuls
xchg
pop
dec
or
repz
inc
jne
pop
cltd
out
lods
test
sbb
push
fisubl
test
in
pushl
sbb
inc
into
adc
hlt
mov
jnp
repnz
lcall
loop
mov
xchg
cs
mov
clc
xor
loopne
cld
mov
jg
sbb
in
cmp
rorb
iret
mov
in
push
cs
lahf
dec
mov
xchg
in
sub
and
cmpsb
and
mov
into
mulb
xor
cwtl
push
scas
fcomps
mov
adc
gs
adc
sub
sti
and
pop
ljmp
push
cmp
xchg
adc
test
pop
mov
dec
or
or
std
jge
dec
pop
cmp
mov
jnp
cmp
xchg
mov
shl
add
push
imul
rcll
jp
cmpsb
jnp
cmp
jne
cmp
iret
shrb
shl
jg
xor
pop
mov
mov
jle
hlt
fsts
mov
fsubs
xchg
out
mov
jno
pop
adc
ret
lock
repnz
addr16
sub
cmp
or
mov
test
adc
and
adc
shrb
inc
xor
cmp
int3
mov
xchg
pop
pop
jae
mov
push
lods
or
sub
and
mov
adc
push
xor
cmpsl
cmp
sbb
or
cmp
mov
lret
in
shll
sbb
adc
dec
aam
loope
aaa
mov
dec
outsl
ficoml
subb
jecxz
outsl
sahf
push
mov
jo
push
jno
mov
add
pop
inc
cmpb
pmulhw
cmp
xor
xchg
mov
into
lods
pop
xor
das
mov
mov
mov
cwtl
clc
add
test
int3
fwait
ret
addr16
int3
test
jne
and
inc
scas
xor
add
insl
sub
inc
adc
add
mov
cmp
pop
mov
inc
fcomps
loop
and
and
out
fists
cmp
out
xor
adcl
addr16
lahf
out
faddl
or
push
testb
aaa
rcrl
mov
cmpb
icebp
jae
xchg
testb
cs
add
in
movsl
scas
push
jge
lcall
mov
pop
outsl
or
mov
jb
xchg
sbb
sub
add
or
fwait
daa
rol
sub
int3
xchg
mov
fnstsw
fsub
out
dec
test
jge
addr16
xor
shlb
jbe
repnz
out
xchg
mov
ret
icebp
jecxz
mov
fs
sbb
dec
sbb
xor
inc
arpl
shll
jns
xchg
leave
lock
pop
dec
iret
sub
lea
lods
pop
jge
iret
hlt
out
popa
mov
test
pop
out
gs
and
sbbb
mov
jp
outsl
xchg
jecxz
or
mov
shlb
movsl
jne
outsb
aam
lock
inc
xlat
xor
or
sub
dec
cltd
adc
inc
leave
cltd
pop
push
fidivs
shrb
iret
imul
push
jnp
push
dec
aaa
add
sbb
mov
xorb
adc
enter
inc
jne
push
cmp
add
mov
out
xor
and
daa
jle
fadds
fs
mov
in
rolb
and
mul
in
dec
xor
pop
adc
mov
sub
inc
mov
dec
jae
out
lret
adc
xchg
cmpsb
jmp
inc
pop
clc
mov
ds
pop
xchg
mov
stc
fidivs
jb
les
sub
mov
insl
inc
shl
mov
testl
popf
cltd
aad
movsb
pop
ljmp
mov
xchg
inc
mov
push
in
jecxz
jbe
inc
add
cmp
fwait
shll
push
sbb
push
fnstenv
js
je
mov
pop
shlb
mov
stc
fstl
int3
ficompl
add
mov
inc
ret
mov
out
cvtps2pi
mov
sub
sub
push
and
call
bound
ljmp
dec
cmp
jp
mov
test
mov
add
push
sbb
lcall
test
test
or
outsl
xchg
nop
into
nop
subl
xlat
lret
les
xlat
lcall
mov
imul
mov
xchg
cmp
les
push
lahf
or
scas
fsubrs
push
mov
xor
mov
sbb
mov
fldt
nop
mov
imul
test
and
sbb
sub
pop
xchg
adc
push
gs
ja
xchg
xchg
and
out
aam
pop
aaa
js
pop
das
stos
inc
mov
xor
leave
lea
sbb
xor
adc
sti
adc
adc
inc
dec
mov
and
push
mov
adc
fs
push
add
mov
mov
xor
lahf
test
cmp
push
xor
jmp
push
cli
rcll
into
pop
ja
cmp
test
sbb
movsb
repnz
rorl
mov
in
ftst
stc
outsb
xor
xchg
xor
outsl
decl
dec
cmp
ljmp
add
mov
js
or
aam
gs
push
or
inc
push
push
insb
mov
js
xlat
stos
imul
mov
xor
in
mov
popl
imul
xchg
pop
cmpsb
stos
subl
aam
movsb
ret
adc
jge
clc
xchg
add
inc
das
jg
aad
or
dec
push
sub
mov
push
jo
mov
xchg
cmp
sahf
jecxz
mov
lods
test
ss
aad
xchg
daa
and
xor
dec
jl
aas
inc
insl
mov
fbstp
fmuls
popf
test
in
cld
je
mov
sub
outsb
outsb
test
pop
push
mov
addr16
popf
xor
mov
dec
pushf
imul
mov
push
jo
push
sbb
mov
push
cmpsb
xchg
int3
lods
fimull
or
enter
jle
push
push
adc
lret
xchg
out
cmp
cmp
ss
mov
mov
insb
push
stc
sub
ss
xchg
fabs
popa
iret
jle
mov
bound
call
or
out
mov
ret
and
cmc
int3
cmp
mov
mov
adc
out
push
test
mov
bound
fldcw
repz
rolb
add
das
lock
sbb
cmp
out
sbb
shlb
push
fstl
pop
in
loop
int
test
fdivrl
jne
push
sbb
inc
es
xchg
or
mov
test
bound
cmp
gs
push
push
lahf
mov
out
jns
sahf
jge
gs
fldenv
inc
adc
cmpb
adc
and
ja
xorl
cld
xchg
loope
add
sti
inc
and
ljmp
ds
bswap
and
test
mov
mov
sbb
cmpsl
and
mov
iret
adc
sar
adc
cwtl
xchg
leave
dec
push
dec
xchg
jbe
ret
scas
xchg
data16
sahf
sbb
push
or
add
xor
pop
aaa
hlt
xchg
xchg
fld
sub
daa
and
push
out
jge
mov
lds
inc
stos
scas
mov
sbb
push
mov
xchg
movsb
mov
mov
es
or
test
mov
lahf
or
in
cs
adc
into
pop
inc
jb
mov
lahf
add
ret
push
add
test
pusha
loop
mov
jns
push
fildl
xchg
inc
and
sbb
pop
mov
adc
cmp
js
jns
out
add
inc
lea
and
je,pn
push
inc
les
notl
pop
popa
cmp
push
add
cmp
cwtl
cmpsl
fistpll
sub
pop
inc
in
iret
nop
and
movl
jno
and
pop
je
push
in
insl
pop
cmp
out
jne
sbb
int
out
pushf
add
mov
cmovns
cmc
mov
negb
push
cltd
add
test
and
or
sbb
leave
lcall
mov
outsb
rolb
ljmp
ds
xor
push
xchg
lock
leave
imul
add
pop
pop
mov
jns
subl
mov
add
lods
dec
test
mov
adc
shlb
mov
imul
pop
xor
dec
icebp
nop
lods
vhaddpd
push
idivl
adc
xchg
pop
jns
mov
mov
mov
test
popa
sbbl
imul
gs
sarl
xor
mov
xor
fwait
dec
nop
rolb
insl
jo
mov
daa
push
fidivs
sti
push
sub
iret
cmp
mov
cwtd
rol
mov
mov
repz
cli
loop
sub
mov
add
cmpsl
dec
mov
xor
push
lea
lahf
sub
test
enter
xchg
test
mov
mov
cltd
test
movsb
mov
xchg
cmp
mov
lods
dec
in
inc
mov
and
lds
xchg
shlb
add
push
pusha
push
adc
add
or
int3
loope
xor
sub
jmp
sti
lods
iret
fistpl
enter
cwtd
mov
scas
inc
leave
shlb
mov
pop
lock
popa
mov
pop
dec
les
cmp
outsb
adc
out
dec
inc
jmp
stos
sub
ljmp
fcos
aam
mov
dec
scas
xchg
sbb
loopne
rorl
outsb
or
aaa
push
frstor
test
mov
fdivs
and
int3
es
add
push
pusha
or
aas
pop
mov
gs
bound
in
mov
mov
pop
sbb
cmp
fucomip
divl
leave
mov
xchg
jne
mov
cmpsb
test
ret
pop
sub
xlat
test
daa
push
rep
ret
sub
inc
jmp
sbb
lods
insl
imul
push
sub
mov
add
fwait
inc
pop
push
lods
jno
loope
rcrb
dec
sbb
pop
imul
xor
mov
movsl
aad
mov
mov
ret
cmp
pop
pop
mov
dec
stc
inc
ja
sbb
push
add
sbb
sbbb
popa
jns
out
push
dec
or
dec
jne
push
bnd
pop
daa
and
cmp
shll
xchg
stos
pop
xchg
mov
push
add
in
dec
ss
iret
addr16
stc
lds
es
jg
test
sbb
or
lcall
sub
mov
sbb
loop
je
or
or
jecxz
dec
lock
mov
sbb
push
cli
sub
out
subb
test
dec
cmc
test
fcomps
lea
in
icebp
ja
mov
les
unpcklps
xchg
out
adcb
sub
xor
movsb
xor
and
outsb
loopne
push
imul
dec
lahf
inc
imulb
movsb
xor
xor
popa
fstl
stos
and
test
int
fisttpll
loopne
add
mull
pop
dec
jns
std
andb
mov
jl
mov
ljmp
out
mov
or
ja
mov
cmpsl
dec
insl
jns
cmc
add
pop
push
ret
inc
add
fists
mov
lods
jno
bound
adc
dec
dec
xlat
ret
loopne
cmp
push
push
pop
into
lea
and
and
idivb
push
lea
push
repz
mov
mov
adc
lods
jae
clc
cmc
pop
push
out
pop
out
lahf
adc
movsb
jb
sbb
out
dec
fmul
leave
repz
ret
xchg
dec
xlat
and
mov
inc
adc
sub
sub
rol
lods
cmp
xchg
into
inc
lods
push
lods
and
test
dec
into
and
adc
repz
jnp
or
sub
movsb
fwait
call
cmpb
rolb
stc
dec
mov
lret
cwtl
ret
and
cmp
subb
adc
repnz
xchg
push
mov
jecxz
in
add
lcall
jge
enter
cmp
aad
stos
inc
push
sbb
ror
adc
test
bound
push
clc
popa
mov
jg
rcl
dec
ret
sbb
mov
xchg
push
daa
jbe
or
xchg
pop
and
mov
and
mov
in
je
in
in
lcall
ja
jno
nop
sub
jle
rorl
push
xchg
mov
sbb
inc
jns
inc
sbb
pop
lods
adc
push
inc
sub
aam
mov
push
sub
add
mov
xor
pop
inc
mov
mov
or
sbb
ret
lcall
cmp
push
std
inc
push
and
fsubrl
addb
pop
sbb
sbb
xlat
out
adc
sbb
xchg
jno
pop
mov
aad
cmp
sbb
pushl
and
xchg
inc
adc
lods
iret
aaa
lahf
dec
mov
xchg
mov
in
cmc
add
aas
and
cwtl
push
push
gs
scas
mov
scas
push
jecxz
push
test
mov
shlb
jno
shrb
mov
xchg
lahf
xchg
mov
test
sahf
imul
add
sub
and
xor
test
aam
subb
ljmp
les
in
mov
filds
mov
repz
add
js
fldl
add
add
sbb
fidivs
out
das
scas
push
scas
xor
test
push
lret
pusha
mov
jae
sbb
push
loop
jle
ror
movsb
jns
push
mov
scas
pop
push
add
test
xchg
pop
mov
push
icebp
cmp
dec
pop
out
test
and
into
inc
or
jne
push
lret
test
and
pop
outsb
cli
fisttpl
dec
dec
jle
xchg
addr16
loope
xor
push
hlt
sbb
xorps
jecxz
mov
adc
push
mov
mov
and
fimuls
inc
mov
dec
mov
mov
jle
push
add
jbe
and
popa
adc
cmpsl
jge
mov
ss
std
inc
popa
outsl
sbb
mov
add
jb
push
je
lret
sbb
inc
or
push
cmp
push
dec
loopne
test
push
repz
adc
lods
stos
add
jb
or
pop
sar
xlat
cli
push
and
jle
mov
adc
or
fsts
mov
cmp
shrb
daa
lret
adc
mov
mov
and
add
xor
das
jb
or
sub
push
cwtl
rorl
aaa
xchg
jp
sbb
add
aam
and
in
sbb
cmpsb
popa
cmc
loope
push
pop
xor
or
mov
ja
jmp
in
imul
push
loope
mov
inc
add
or
cli
nop
int
movl
or
nop
bound
xchg
out
mov
or
repz
daa
add
in
dec
cmp
push
into
dec
add
out
subb
push
test
pop
test
mov
push
push
sbb
addr16
or
dec
fisttpll
cmp
fisttpll
cmp
jae
sub
pop
ficoml
imul
sbb
lods
sbb
sub
dec
fwait
cli
cmpsl
sbb
jns
jle
pop
int3
insl
cmpsb
push
shr
cmpb
aas
fs
int
jge
ja
pop
jo
jg
jmp
arpl
xor
xchg
sbb
pop
and
incl
fidivrs
or
je
dec
clc
sbb
mov
out
aad
and
pop
push
push
andl
push
inc
cmc
gs
psubb
xchg
loopne
iret
xchg
mov
stos
dec
pop
or
and
push
mov
int3
mov
addr16
pop
vpaddq
jle
sub
lock
hlt
mov
sbb
das
push
pop
in
cmp
imul
jb
lods
clc
movsb
test
mov
pushf
mov
aas
push
fisubrs
cmp
adc
push
loop
sub
je
add
jp
negb
loope
aam
cmp
lcall
ficoms
arpl
xor
push
orb
negb
gs
adc
jmp
or
cmpsb
cmpsb
inc
data16
mov
imull
sbb
clc
xchg
sub
dec
mov
call
inc
sarb
scas
testl
adc
dec
pop
mov
repz
std
adc
stos
into
aad
out
or
add
dec
es
imul
sahf
imul
movsb
dec
clc
jecxz
inc
adc
push
adc
jnp
sbb
icebp
pop
loope
jne
lds
push
add
aaa
cwtl
or
outsl
adc
and
mov
out
jmp
xorl
das
jae
aas
loopne,pt
cmp
test
mov
or
jb
aam
movsl
shr
inc
cmp
and
sahf
push
add
call
cmpsl
xchg
sbb
sbb
je
add
and
test
or
movsb
mov
push
rolb
sar
push
insl
sbb
jbe
lahf
rcrb
shl
pop
sub
pop
divl
rclb
xchg
cmpsl
es
dec
loop
out
add
inc
cmp
imul
lock
xchg
pop
or
frstor
xchg
loop
cmpsl
fwait
push
xlat
cmpsl
sbb
adc
mov
jp
xchg
filds
or
pop
and
adc
push
pop
iret
enter
pop
and
in
sub
cmp
mov
pop
dec
dec
mov
or
push
pop
jmp
fs
je
and
inc
jle
mov
aad
or
cmp
inc
ja
fwait
in
das
xchg
xchg
push
push
inc
call
in
adc
or
shrb
popa
dec
sub
inc
push
sbb
cld
jp
mov
cmp
jge
push
outsl
fdivl
sbb
cmp
jno
push
mov
popa
sub
fisubrl
in
mov
cs
xor
pushf
pop
fidivrl
loope
inc
shr
cmp
stc
out
sbb
test
cmp
inc
push
shll
gs
mov
xchg
scas
outsl
aad
jge
int
fcmovu
popa
or
jl
xchg
out
lcall
xor
xchg
jl
xlat
imul
loop
rcrb
sub
pop
in
jge
sbb
je
push
daa
fisttpl
pop
pop
insb
jecxz
sub
mov
ljmp
stc
and
fsubp
rolb
pushf
jns
cmp
jb
adc
test
movsl
stos
in
xchg
repnz
jae
loope
ljmp
aad
das
sbb
push
pop
inc
sub
loop
mov
pop
jmp
ficomps
inc
add
aaa
mov
clc
mov
xlat
sbb
xor
xchg
idivb
sbb
fldl
scas
jl
pop
dec
in
jle
pusha
adc
cmp
js
fimuls
xchg
pop
or
fstl
mov
xchg
add
xchg
mov
movl
loopne
push
add
shll
cmp
push
cltd
out
mov
mov
jo
fcomps
and
ret
adc
lods
inc
movsl
sbb
jge
xorb
push
lock
enter
ss
xchg
lcall
cmp
imul
mov
push
and
test
lret
rclb
rorl
or
mov
dec
dec
adc
fstpt
fisubrl
cs
cltd
push
nop
loop
mov
lcall
jge
xchg
jns
inc
mov
adc
push
xchg
insb
bound
call
out
push
mov
inc
rorl
leave
insl
inc
mov
inc
dec
outsb
in
arpl
cmp
add
cmp
xchg
sbb
call
insl
movsl
xor
daa
andb
jge
xorl
xor
mov
out
push
stos
sub
xchg
fildll
fistps
sbb
test
test
add
iret
cmp
ds
sbb
inc
mov
xchg
lcall
xchg
cltd
add
leave
push
repz
mov
dec
sub
dec
dec
out
mov
sub
bound
std
fldl2e
roll
dec
xchg
lods
mov
bound
std
mov
mov
adc
rcll
push
out
ret
adc
mov
fistpll
and
push
xchg
xchg
mov
mov
pop
int3
and
and
hlt
dec
xchg
cmpl
int3
int3
inc
pop
lock
stos
hlt
popa
or
test
jg
push
pop
aaa
cwtl
stos
pop
mov
mov
rorb
sub
stos
das
out
aad
mov
scas
or
cmpsb
pop
sub
adc
or
aam
cmp
hlt
inc
push
out
sbb
add
adc
aas
push
stos
xor
pop
sbb
mov
insl
nop
cwtl
movsl
out
repnz
adc
push
inc
aam
pop
pop
stos
sbb
mov
mov
dec
push
jmp
shlb
xchg
movsb
mov
sti
mov
hlt
ss
orl
mov
sub
xchg
dec
adc
fstpl
sub
inc
fldl
xchg
mov
cld
push
cmp
push
mov
call
xchg
lods
mov
arpl
mov
push
test
outsl
adc
out
ret
pushf
pop
das
and
xchg
loope
mov
adc
data16
int
movsb
lcall
sti
jle
xor
jp
test
rclb
cmp
sbb
cld
xchg
insl
ret
mov
int3
lods
orb
sti
daa
pop
or
xorb
call
cs
sahf
jmp
pop
xchg
push
push
iret
clc
cli
aam
jmp
jbe
aas
stos
jo
sti
lds
inc
jge
bound
js
aas
mov
jge
das
aaa
dec
and
sbb
jmp
mov
stos
aas
or
clc
xor
dec
mov
cmp
push
mov
mov
sbb
push
lods
and
cmp
stos
test
push
mov
or
push
nop
push
or
pop
sbb
test
mov
loopne
push
or
mov
dec
test
lea
les
xchg
fwait
lret
aad
sbb
mov
stos
les
xchg
call
repz
outsb
out
imulb
mov
dec
mov
adc
shlb
mov
mov
sbb
xchg
sahf
pop
adc
sub
imul
inc
jno
mov
out
insb
cmp
dec
iret
mov
mov
mov
ficompl
xchg
adc
out
imul
repnz
loope
pop
notl
cs
in
xchg
cli
add
jo
xchg
out
xor
adc
and
mov
sti
in
stc
push
scas
adc
sbb
inc
inc
cwtl
mov
xchg
in
out
and
adc
jp
or
scas
lret
in
adc
test
add
sahf
test
push
fwait
gs
mov
int3
sub
push
cwtl
test
sti
adc
into
adc
ljmp
mov
fmuls
lret
fbld
out
mov
shrl
fidivs
and
repz
aad
pusha
pop
mov
sub
in
xor
pop
pop
dec
arpl
jb
xchg
inc
int
stos
and
popa
mov
cmpsb
arpl
lods
push
out
pushf
clc
push
push
add
jbe
sbb
mov
lret
das
jns
add
int3
jb
aad
ss
or
lock
aam
sahf
xchg
cmp
push
fs
out
repnz
add
and
arpl
je
adc
loope
xchg
daa
jecxz
cmp
stos
sbb
imul
pop
stos
push
dec
xchg
frndint
icebp
xchg
adc
push
and
aad
add
aas
int
mov
and
pusha
js
pop
inc
jle
or
out
rolb
cltd
inc
movsb
repz
stc
and
push
cli
ja
jmp
dec
rcrb
mov
bts
mov
sbb
mov
mov
popa
out
jno
sarb
cwtl
adc
notb
sti
enter
push
xchg
adc
adcb
xchg
sub
mov
pushf
mov
or
ja
lcall
mov
jbe
jno
inc
fs
sbb
or
sbb
xchg
data16
mov
test
fcmovnbe
xchg
sbb
mov
cli
xor
xor
arpl
inc
xchg
cmpsb
pop
mov
shll
pop
sarw
and
xor
add
clc
mov
sub
out
dec
in
test
xchg
push
adcb
or
xor
push
and
or
inc
or
call
push
sbb
shll
cmpsb
inc
ja
imul
mov
mov
xchg
mov
cli
pop
lret
movsl
hlt
cmpb
mov
mov
mov
fidivs
fs
adc
mov
ljmp
fs
add
adc
leave
push
dec
test
and
sti
rorb
jnp
sub
adc
push
xchg
adc
xor
das
push
icebp
push
add
inc
movsl
xor
sub
push
pop
inc
xor
js
lock
insl
leave
mov
shll
loopne
fwait
out
ljmp
add
sarl
enter
std
ljmp
dec
loope
or
dec
lea
imulb
testb
lcall
mov
cmc
stos
pop
idiv
lock
out
aas
sub
loopne
cmpsl
imul
adc
insl
nop
mov
shrb
lret
fldcw
les
test
fiadds
xchg
adc
push
test
jbe
lock
push
aaa
loope
gs
add
mov
sbb
inc
js
mov
cmp
mov
add
lret
outsl
stos
sub
stos
jmp
arpl
enter
enter
jne
cld
stos
test
into
pop
in
or
sub
outsl
movsl
icebp
mov
inc
jnp
fwait
notl
lock
pusha
pop
jl
insb
int
popf
insb
mov
push
xchg
and
scas
or
inc
decl
sbb
arpl
jmp
scas
mov
push
cld
mov
fmul
or
push
cli
repz
repz
hlt
cmp
inc
push
jmp
cmc
mov
xchg
pop
shll
out
sbb
test
ret
std
mov
inc
push
lcall
pop
das
mov
pop
jle
int
push
nop
repnz
les
aam
aam
divl
je
stos
scas
cmpsl
stos
scas
or
mov
in
mov
mov
gs
out
mov
orl
cmp
ja
dec
pushf
jp
in
out
cld
ffreep
xchg
daa
jge
add
mov
lcall
lock
aad
cmpsl
inc
lret
sti
inc
stos
push
daa
jmp
xchg
push
insl
inc
jnp
add
push
dec
stos
shll
xor
mov
mov
push
mov
out
repnz
je,pn
add
mov
repz
mov
mov
inc
les
aad
clc
dec
test
movsl
icebp
loopne
mov
outsl
adc
jno
nop
push
xchg
xor
jle
and
xlat
mov
jbe
mov
adc
lahf
xchg
in
out
jbe
lds
fldenv
aas
pop
pop
lea
cmp
jae
dec
push
lds
and
and
mov
orb
inc
or
lds
loopne
dec
jns
sbb
aas
push
xchg
dec
nop
ljmp
movsl
sbb
jns
sub
xchg
mov
out
hlt
and
cmp
out
das
fnstcw
pop
push
test
add
push
sub
add
add
in
sub
dec
add
mov
push
clc
roll
pop
mov
mov
jg
cmp
mov
scas
call
sub
or
ficomps
dec
scas
inc
negb
mov
insb
adc
das
lret
adc
insb
cmpsl
pusha
cmp
test
xor
xor
pop
pop
mull
das
cmc
leave
adcb
pop
cmp
pop
insl
mov
shlb
lret
fs
and
popa
push
lock
bound
sarb
and
mov
insl
outsb
pop
nop
inc
pop
jo
jns
add
mov
lock
mov
mov
sbb
in
pop
mov
imul
jmp
dec
or
scas
mov
sub
push
pop
in
mov
cmp
adc
cmp
push
mov
add
movsb
sbb
int
push
sub
adc
das
fnstcw
inc
add
clc
adc
and
lahf
xchg
adc
outsl
cmc
inc
push
inc
hlt
sub
cs
lods
xchg
pop
jl
xchg
push
js
into
mov
rcr
jb
popa
stos
sub
ja
and
stc
cmp
lret
add
cmp
roll
push
int
mov
jg
fadds
pop
out
and
addr16
aas
xchg
jp
cmpsb
mov
in
xor
outsl
add
loop
mov
scas
shrb
fisttps
repz
adc
jbe
icebp
jp
mov
data16
push
ljmp
inc
jp
pop
incl
gs
out
jae
add
xor
leave
test
lods
iret
dec
sub
in
dec
pop
adc
and
inc
mov
sbb
sub
lods
add
das
adc
xor
push
or
movsl
andb
push
out
insl
add
xor
and
ss
cmp
cmpsb
jns
out
pop
mov
dec
movsl
mov
xor
fimull
push
jno
xchg
shll
xadd
rolb
outsl
cltd
fisttpl
loopne
add
lods
fldl
cmp
mov
stos
xchg
outsl
scas
or
lcall
add
into
inc
adc
divl
pop
sub
stos
lea
inc
mov
push
push
stos
cmp
fstl
push
hlt
scas
std
ljmp
movsl
inc
sbb
clc
fwait
cmpsb
xchg
push
aam
and
xchg
cs
popf
outsl
dec
pop
in
clc
and
or
es
cld
add
scas
sub
sahf
and
jbe
sbb
andb
gs
lods
jge
mov
mov
lret
ja
add
lods
scas
mov
jecxz
gs
jmp
into
fs
mov
cmp
lods
inc
rorl
pusha
sbb
int3
mov
push
pop
loop
shll
push
inc
push
xchg
cmpsl
outsl
cmpsl
enter
pop
xchg
pop
mov
xlat
ss
xlat
fsubl
sarl
pop
call
shrb
loopne
fidivrs
jne
lds
inc
cmp
adc
mov
jo
mov
jg
mov
aas
and
mov
xlat
movsl
mov
add
push
ficomps
loopne
roll
mov
dec
cmp
ret
in
mov
je
xchg
pop
fst
mov
inc
jl
scas
xor
cmp
mov
jge
or
mov
jnp
ss
push
mov
mov
imul
cmp
mov
aam
dec
add
or
cli
jge
cmp
aas
xor
es
or
call
inc
subb
and
cs
jp
movsl
xchg
jbe,pt
ret
push
sar
jb
jge
stc
xor
cmpsl
loope
test
aaa
loope
test
lcall
adc
add
jbe
loope
inc
repnz
daa
inc
add
inc
push
sbb
out
mov
push
setge
aas
jmp
cld
push
stos
enter
fmuls
cmp
jo
cmp
out
inc
ret
adc
ret
jbe
inc
test
daa
fstl
push
lock
roll
in
je
dec
in
cmpsl
pop
aad
mov
and
fcoms
push
loop
lret
inc
ljmp
addr16
shll
adc
xchg
cmp
hlt
shrl
fs
sub
or
xchg
leave
aaa
mov
sub
mov
andb
push
cmpb
aad
jge
inc
pop
fidivrs
push
sbb
add
mov
pop
clc
jl
test
inc
pop
hlt
and
mov
arpl
test
nop
cmp
inc
in
in
in
pop
mov
jnp
ds
pushf
jecxz
sub
enter
adc
mov
mov
sub
rcl
pop
es
jmp
push
js
mov
mov
mov
pop
cli
inc
dec
loope
lret
sub
mov
enter
arpl
push
lock
les
mov
xchg
and
arpl
out
daa
sub
subb
adcl
das
call
and
lods
outsb
xor
add
daa
ds
or
shlb
js
add
dec
and
cmc
nopl
adc
push
jge
cmp
shl
push
sbb
arpl
push
into
stos
and
test
add
hlt
pop
pop
adc
or
fadds
lods
mov
lahf
les
insb
fst
adc
add
push
lahf
sub
sahf
in
cltd
insl
fs
pushf
xchg
into
cltd
mov
testl
int3
sub
test
push
or
push
or
cmp
fbstp
or
xor
or
outsb
dec
and
imul
inc
shr
lcall
mov
or
inc
pop
std
push
jnp
xchg
dec
fistps
jl
cmp
mov
add
lret
mov
pop
sub
jecxz
lcall
sbb
out
fimuls
cmc
mov
cld
and
xchg
es
stos
popa
and
shlb
mov
sbb
stc
xchg
imul
inc
cmp
scas
dec
mov
loop
push
aas
mov
pusha
es
in
push
daa
in
leave
dec
xchg
js
mov
jmp
and
jo
fimull
or
adc
mov
fwait
xor
sti
nop
idiv
out
inc
jp
ud0
sarl
icebp
out
out
mov
jmp
les
pop
ret
repz
dec
popf
dec
jp
gs
loop
mov
int3
mov
xchg
push
ja
jb
adc
push
lahf
dec
mov
cmp
mov
inc
fnsave
xlat
cld
fwait
jnp
cwtl
inc
movsl
sahf
jge
or
mov
scas
dec
xchg
out
mov
or
cmp
pushf
daa
mov
test
xchg
inc
fistps
add
ret
cmp
pop
fimull
push
test
cmp
or
pop
mov
shlb
addb
inc
mov
xor
fdivrp
in
cmpsb
inc
xchg
aam
pushf
aad
idivl
jb
jb
cmp
inc
aaa
push
inc
xor
es
inc
pop
lahf
enter
sbb
mov
pop
andb
ljmp
cmp
in
int
inc
jl
push
popa
xchg
arpl
mov
lea
out
into
xor
sub
rolb
in
adc
mov
cmp
xchg
lock
mov
scas
xchg
lds
outsl
xchg
cmp
lret
cmpb
movsb
sbb
pusha
inc
mov
xor
filds
jp
sub
les
pop
pop
jl
inc
sets
lahf
xor
push
addl
inc
pop
mov
xor
xchg
add
xchg
mov
call
out
sub
aad
sub
shrl
rol
ret
sub
add
inc
mov
sub
jo
mov
cmp
lds
cmp
data16
loopne
into
iret
std
dec
in
pushf
gs
sbb
cmp
std
xchg
mov
cmp
push
add
int3
mov
jne
mov
mov
ja
jns
or
or
sti
adc
in
pop
sahf
imul
add
mov
cld
mov
mov
mov
std
adcb
mov
cs
fidivrs
leave
repnz
inc
out
je
jb
movsb
imul
sbb
repz
push
addr16
mov
ljmp
cmpsl
dec
imul
movsl
adc
mov
repnz
fs
imull
adc
sub
sar
ret
mov
sbbl
test
shl
jle
inc
mov
mov
xchg
lahf
add
int
pusha
add
sarb
dec
push
push
call
push
fldlg2
sti
or
sti
dec
or
inc
por
nop
add
xchg
sbb
add
and
jns
push
lea
pop
push
push
and
fwait
popf
aaa
mov
bound
inc
or
sbb
in
sub
cmp
mov
inc
add
in
pusha
sbb
jno
xlat
or
jmp
aad
xchg
mov
xchg
pop
push
pop
cli
sti
sbbb
movsl
int
int
inc
dec
mov
xchg
int
adc
sub
in
jle
jmp
cmc
xor
loopne
xchg
mov
sbbl
je
jae
pushf
aad
jle
push
fisubl
mov
or
add
popl
pop
dec
call
adc
push
sbb
cmc
sbb
pop
add
xchg
add
movsl
into
mov
xchg
fldt
xchg
mov
das
push
movl
cmp
daa
in
jnp
pop
aaa
iret
xchg
test
mov
out
xor
fwait
pusha
sarb
adc
dec
mov
push
xor
test
addr16
cmp
outsl
push
add
andl
xchg
cmp
sbb
or
jmp
idivl
stc
or
jbe
push
leave
scas
fstpt
jbe
mov
hlt
loop
inc
scas
sub
fwait
pop
inc
sub
sbb
add
or
mov
or
iret
test
push
and
inc
leave
or
nop
pop
pop
dec
shrl
adc
aaa
add
jnp
dec
jmp
shll
push
or
mov
daa
movb
out
pop
fcomps
sbb
inc
cmp
mov
adc
icebp
ljmp
hlt
mov
cmp
rorb
imul
das
jg
mov
push
jb
inc
push
or
jge
cmpsl
movl
or
sbb
cld
and
add
dec
in
or
stc
loop
lahf
sbb
into
push
pop
sbb
adc
popl
test
outsl
inc
mov
adcb
xorb
push
lods
gs
add
mov
push
and
loope
testb
cltd
pop
push
push
iret
sbb
movsb
mov
enter
aam
cmp
int3
sbbb
mov
cli
mov
jp
sbb
mov
xor
sbb
call
cmpsb
pop
pop
movsb
xchg
pop
xchg
dec
sbb
push
inc
lods
fcoms
sbb
in
data16
dec
stos
adc
call
sub
xor
mov
jno
jno
mov
shrb
cmp
mov
sbb
or
pop
repnz
lods
pusha
pop
xchg
repz
stc
std
push
test
jo
loope
pop
adc
sub
sub
inc
pop
or
and
pop
pop
sub
lods
dec
sbb
pop
fstp
jnp
test
sahf
mov
test
ret
dec
mov
sub
push
pop
push
outsb
loopne
stos
pop
insb
fsubrs
notl
loope
incb
and
lods
pop
inc
sbb
into
adc
mov
aaa
sbb
dec
in
out
pusha
les
mov
sub
pop
jmp
mov
jmp
aaa
jecxz
pop
jmp
or
mov
and
mov
sbb
cmpsb
movb
cmpsb
pop
std
xor
xchg
adc
mov
ljmp
pop
and
stc
or
cs
jno
pop
xchg
fstl
pop
cmpsl
loop
int3
xor
test
lcall
xchg
cs
rcl
mov
xor
jecxz
jle
add
nop
push
inc
pushf
dec
aam
jmp
mov
add
test
arpl
xchg
mov
scas
inc
neg
xor
xchg
mov
pop
jae
lret
mov
mov
arpl
jo
ret
mov
push
or
cld
mov
je
in
mov
mov
add
mov
push
and
test
xor
mov
sub
arpl
push
cmp
push
push
out
and
lds
dec
push
call
fwait
arpl
xchg
mov
pop
sbb
add
dec
js
pushf
std
jmp
mov
push
mov
push
mov
popf
jmp
ffree
out
out
inc
fdivrs
cwtl
pop
sbbb
lods
cwtl
jmp
fs
shlb
fsubl
ret
lret
add
adc
sahf
and
pop
int3
std
fcmovb
mov
mov
je
sbb
cmp
mov
int
int
mov
push
jb
push
loopne
xchg
fimull
ficoms
sub
mov
xchg
mov
nop
bound
rorl
js
cmp
pop
fstpt
dec
mov
fldl
mov
xchg
in
scas
jb
push
push
lds
pushf
jne
or
xchg
cmpsl
sti
rcl
ds
and
pop
rcrb
and
popf
sub
xlat
cmpb
aam
xchg
test
insl
ret
cmpsl
push
jns
mov
sar
fmull
pop
sub
xchg
push
jg
mov
js
and
add
movzwl
push
mov
dec
repnz
loopne
arpl
push
in
xchg
test
push
shrl
xor
outsb
mov
imul
aaa
fwait
jns
jo
lahf
popa
repnz
jb
fidivs
arpl
out
dec
inc
mov
jg
ljmp
andl
mov
gs
pop
pop
push
jge
inc
mov
xor
fs
or
ficompl
push
push
push
dec
cmp
lods
inc
mov
pop
das
xor
repz
jae
icebp
orl
mov
movsb
xchg
daa
fimuls
pop
sti
cmpsl
mov
dec
popa
add
movsb
push
std
daa
imul
mov
jae
cmp
mov
pop
test
sbb
xchg
inc
out
ret
inc
lcall
icebp
xor
arpl
push
daa
je
inc
jae
mov
xchg
and
arpl
cmp
add
mov
rcrl
pop
inc
push
lds
and
pop
out
js
sbb
cltd
sahf
in
int
cmp
fimull
out
adc
shrl
mov
xchg
movsl
lds
push
mov
dec
jne
and
popa
adc
push
mov
cmovge
push
adc
les
sbb
pop
pop
sbb
xor
dec
inc
add
popa
and
add
sbb
mov
cmc
icebp
add
inc
jb
push
outsl
or
loope
mov
lret
xchg
mov
xor
fldenv
pop
mov
idivb
and
pop
rcrb
pop
fisubs
adc
iret
divl
jo
clc
bound
push
sbb
lea
ja
push
xchg
mov
insl
adc
mov
out
sbb
jo
scas
loopne
cld
sti
inc
mov
mov
or
pop
and
and
pop
dec
nop
pushf
inc
es
dec
icebp
cmp
ficoml
cs
sti
enter
or
push
movsb
xchg
push
in
xchg
jno
test
adc
lea
je
xchg
cmp
or
loopne
icebp
push
adc
sbb
cmp
nop
pushf
cmpl
outsb
mov
mov
xchg
push
lock
data16
int
or
scas
sahf
mov
in
daa
int3
mov
and
sti
sbbl
pop
out
in
jmp
ja
popa
mov
loope
or
mov
mov
lods
cmp
mov
incb
ds
dec
sub
mov
lret
cmp
outsb
jae
add
dec
jne
or
dec
lds
lea
xor
fnstsw
ljmp
stos
sub
adc
push
add
test
shlb
dec
xchg
in
addb
or
icebp
cmp
push
xor
lock
sbb
mov
mov
iret
add
fwait
jle
subl
or
pusha
pop
mov
stc
push
push
and
pop
jno
into
stc
pop
sub
cmp
jecxz
push
mov
int
roll
push
leave
in
stc
lods
and
and
in
or
lahf
sbb
jns
cmpsl
push
adc
or
into
mov
xor
rcll
cvtps2pd
pop
dec
imul
aad
ret
fisubrs
jge
push
lods
jno
rcrb
jmp
inc
pop
scas
sub
mov
inc
stos
sub
ficompl
ret
sbb
mov
jne
or
mov
aad
jnp
pop
cmpsl
dec
jno
arpl
mov
cmc
xor
and
rcrl
orb
dec
data16
outsl
or
add
xchg
cmp
jbe
fildl
add
les
pop
pop
add
cmp
xor
insb
xor
push
jae
or
test
xor
popf
jmp
mov
ja
leave
ret
add
sub
and
push
dec
cmp
int3
dec
aam
clc
fldt
cli
and
mov
scas
test
jmp
xor
testb
mov
jmp
imul
mov
decl
icebp
call
ljmp
pop
pop
dec
pop
test
xchg
pop
pusha
lret
leave
in
jl
dec
mul
push
scas
aas
adc
popf
adc
lret
out
aaa
jg
ss
lock
adc
rclb
icebp
in
nopl
outsl
cmc
shl
adc
push
bound
cwtl
ljmp
cmp
mov
jae
sbb
push
cmp
int3
stc
ss
cmc
xorl
pop
cmp
jg
stc
loope
push
xor
pop
ja
sub
jge
insb
and
fnsave
cmpsl
push
push
insl
lcall
jl
pop
adc
scas
mov
inc
xor
punpcklbw
add
and
adc
mov
xchg
fwait
sbb
dec
pop
sbb
push
out
or
in
inc
mov
scas
lock
ja
in
sbb
mov
dec
stc
sbb
mov
and
xchg
dec
push
mov
pop
in
xor
dec
es
fsubrl
sub
ret
arpl
mov
fwait
int
pop
jae
cs
lcall
adc
movsb
xchg
push
mov
outsb
sbb
inc
aad
fistl
sbb
and
push
inc
ror
xor
push
sbb
and
test
lods
cltd
test
jl
or
leave
shrb
fbld
das
or
daa
outsl
fdiv
cld
xchg
fisubs
daa
dec
pusha
xchg
jmp
sbb
popa
sub
mov
ss
mov
repnz
xchg
push
das
fstl
sahf
ret
sub
pop
mov
and
nop
test
dec
call
mov
pop
jmp
mov
or
fdivl
dec
cltd
in
notb
hlt
sbb
clc
mov
shrl
adc
dec
cmpsl
and
sub
cmpsl
cmp
test
or
lcall
repnz
popf
lret
and
sub
out
adc
jg
cmpsb
dec
xchg
cwtl
in
or
pop
jle
aaa
xchg
push
rcrl
mov
xorl
jmp
leave
std
aaa
jnp
stos
or
sbb
push
and
sbb
xchg
gs
jb
dec
out
dec
lcall
call
ret
sbb
add
dec
rcrb
in
and
jge
outsb
pop
mov
cld
mov
sbb
add
cmpsl
pop
or
les
pop
movb
inc
mov
xchg
cmp
add
adc
maxps
data16
outsb
xor
lods
jmp
int3
push
insb
lret
mov
mov
das
cmp
cli
xchg
test
mov
jp
jecxz
test
std
xchg
loope
push
fcmovnb
mov
cmp
mov
adc
push
and
bnd
clc
jle
adc
mov
pop
sub
and
jp
adc
adc
adc
ljmp
push
mov
addr16
jle
jo
or
cmpsl
es
mov
aaa
roll
daa
jmp
imul
dec
jecxz
adc
ljmp
inc
mov
sbb
lock
negb
shll
push
adc
in
pop
loop
repnz
dec
stos
cmp
js
mov
inc
push
pop
loopne
gs
fcoms
and
insl
fnstsw
mov
mov
js
dec
push
out
xor
int3
sbb
mov
and
gs
xchg
movsb
gs
insb
adc
scas
movl
adc
jbe
cmc
mov
jns
les
or
sbb
adc
cwtl
pop
mov
add
test
sahf
push
pusha
into
jmp
jg
repz
leave
sub
mov
xchg
pop
and
mov
out
mov
pusha
cmp
stos
lods
loop
mov
cmpsb
and
xchg
stos
ficompl
aaa
push
lcall
sub
movsb
dec
mov
ss
push
stos
pop
inc
cmp
mov
adc
pop
or
in
jle
cmp
int
or
sbb
jb
shl
fsubr
scas
in
mov
in
xchg
cmpsb
cmp
lds
mov
add
frndint
push
mov
lods
out
test
shll
hlt
mov
hlt
test
imul
lcall
dec
sub
jo
adc
push
js
mov
sub
pop
add
pop
jno
dec
adc
and
sub
cli
mov
scas
sub
lahf
sub
sub
cmp
pushf
dec
imul
loop
fs
jge
push
sbb
aas
jl
mov
outsl
imul
dec
mov
mov
jns
cmp
out
outsb
leave
xchg
jo
lcall
sub
lock
out
pusha
mov
cmpsl
clc
and
xchg
int3
add
mov
outsl
andl
sbb
and
mov
xorb
cld
sub
jo
add
imul
jl
sub
pop
or
and
mov
lret
aaa
mov
lock
xchg
xchg
xchg
xor
pop
cmc
xlat
add
mov
out
jmp
pop
and
sub
subb
sub
cmp
insb
lods
and
int
and
lret
push
lret
lret
out
mov
cmc
mull
adc
dec
dec
add
clc
addb
xchg
xchg
test
in
cmp
cmp
jb
fldt
jns
cmp
clc
sub
pop
adc
add
cld
outsl
mov
out
frstor
cli
int3
stos
fcompl
aas
and
pusha
jge
push
leave
mov
shrl
and
or
flds
add
fidivs
pop
maskmovq
testl
subb
adc
sub
lcall
mov
cmc
adc
in
scas
push
jmp
xchg
movsl
mov
or
and
sbb
jns
cmp
outsb
mov
ljmp
jecxz
sbb
or
in
xor
sub
sbb
bound
les
pop
clc
xor
rorb
lahf
pop
fucomi
lock
add
ret
dec
rcll
or
sti
adc
push
xchg
ljmp
fwait
loop
fsts
sbb
ss
dec
add
cmp
mov
sub
dec
xchg
jmp
push
lods
inc
fcmovbe
mov
cmpl
push
mov
sub
mov
pushf
ds
push
jmp
mov
xor
mov
mov
fs
scas
call
into
ficoms
sbb
pop
mov
sub
out
dec
lock
xlat
pop
pop
mov
sub
lods
push
cmp
sub
fnstsw
or
enter
jno
test
xor
or
rcr
jns
push
je
div
out
out
jb
xor
leave
mov
jmp
push
nop
mov
incl
rcrl
orb
push
imul
jmp
push
cltd
mov
ja
adc
add
inc
jmp
aad
and
dec
inc
addr16
sbb
aaa
das
jae
test
sub
ja
rcll
shlb
mov
jge
push
sub
dec
xchg
pop
push
xor
test
vpcomuq
leave
mov
subb
fxch
xchg
mov
imul
mov
pop
mov
stos
aam
scas
loope
ds
dec
js
pop
adc
movsl
subl
leave
popa
jbe
insl
dec
loopne
add
jp
loope
test
scas
xor
aaa
cmp
addl
jp
in
mov
push
scas
dec
jne
mov
ja
fdivrl
push
pop
movsl
in
cmp
and
jp
jecxz
popa
sar
cmp
rcrb
popa
out
jl
mov
aaa
mov
maskmovq
scas
lret
mov
mov
imul
jp
fldenv
sbb
pop
jno
dec
cmp
inc
push
xor
loopne
dec
push
inc
test
mov
lds
pop
jmp
repz
outsb
mov
or
std
scas
mov
pop
push
cld
sub
lret
pop
jae
clc
rcll
in
icebp
leave
mov
mov
or
xchg
jns
lods
and
out
adc
inc
adc
cmpsl
jle
pop
popf
mov
lods
jae
dec
sbb
sub
gs
rcl
sub
subl
nop
fiaddl
mov
jmp
xchg
cs
cmp
adc
mov
mov
cmp
cwtl
cmp
das
mov
into
sub
in
jge
or
movsl
dec
arpl
pop
outsl
mov
pop
stos
xlat
mov
fidivrl
movsb
iret
sbb
adc
jle
xchg
push
es
aas
xor
fistps
fstl
int3
test
cmp
ret
cltd
cmp
lcall
bound
sub
aas
cli
jne
ljmp
fsubrs
add
repnz
mov
jp
inc
sbb
or
mov
hlt
fs
or
out
mov
jne
test
mov
ret
mov
dec
and
xor
xchg
call
push
nop
xchg
lock
ss
std
addl
push
dec
ret
mov
mov
dec
dec
lcall
ret
outsl
repz
packsswb
stc
adc
and
xor
sbb
mov
xchg
xchg
jae
outsl
mov
int
xlat
cmpsl
andl
push
enter
lock
xor
mov
mov
gs
mov
add
shl
mov
addr16
lds
movsb
xlat
push
loop
mov
push
push
xorb
mov
ljmp
pop
sbb
sub
decl
adc
cmp
dec
or
jl
sti
mov
pushf
mov
xor
sub
out
ja
mov
fsub
xor
out
mov
gs
mov
ljmp
mov
adc
int3
push
arpl
dec
repnz
in
or
imul
mov
add
sbb
pop
cltd
andb
jne
ss
xlat
into
mov
enter
lods
daa
xchg
adc
mov
fdiv
mov
imul
push
dec
fnstenv
loop
pop
je
ret
lods
movsb
ja
cmp
or
sbb
repz
adc
mov
push
ret
int3
loopne
lds
out
dec
pop
and
cld
sbb
aaa
fincstp
inc
mov
and
ss
jb
cmp
sbb
push
outsl
or
test
jg
sub
and
push
daa
testb
pop
enter
test
sub
in
arpl
rolb
incb
ret
testl
ss
inc
gs
adc
cwtl
mov
repz
pop
add
mov
add
pop
gs
jmp
rcrb
and
test
popa
adc
mov
xor
out
aad
pushf
loop
aam
pop
lahf
xchg
mov
cmp
in
adc
sbb
mov
std
mov
call
jmp
xor
pop
addr16
aas
leave
mov
cmpsb
mov
mov
loopne
fbld
adc
sbb
cmp
sti
and
fmull
leave
hlt
jno
add
roll
jle
push
pop
pushf
mov
clc
mov
std
sarb
fs
das
adcb
sub
dec
jns
pop
mov
insb
dec
add
and
pop
mov
adc
cmpsb
lret
movsb
hlt
mov
mov
push
stos
ljmp
pushf
enter
xchg
and
das
insl
fnstcw
xor
push
jp
int3
scas
in
stos
cmp
mov
adc
scas
push
xor
ja
je
aaa
mov
mov
data16
xchg
cli
std
sbb
pop
dec
jns
inc
xor
sbb
cmp
push
inc
insl
aas
pop
clc
fidivs
cmp
in
lods
mov
mov
jle
sub
stc
xor
pop
int
cltd
hlt
insb
ss
mov
lods
xor
push
sbb
inc
outsb
test
ljmp
jo
dec
pop
ficomps
mov
or
subl
mov
add
into
pop
dec
lock
adc
into
and
cwtl
rorl
xorl
clc
xor
cld
ret
adc
inc
out
or
pushf
xchg
into
cs
jmp
std
mov
lcall
mov
dec
sbb
mov
dec
pop
mov
in
push
xchg
int
pop
ret
decl
push
pushf
test
ja
std
sbb
aad
jl
movsb
dec
inc
adc
cmc
push
in
xchg
mov
mov
sbb
sub
mov
or
out
push
xchg
push
xchg
faddl
enter
imul
lea
gs
data16
add
scas
mov
fisubrl
cmp
xchg
in
out
add
mov
pop
movsb
negl
insb
xchg
insl
mov
fadds
cmp
clc
add
shrl
ret
jno
xor
lcall
sub
and
jg
push
aaa
stos
ss
pop
or
cltd
ret
push
dec
inc
cwtl
push
push
lahf
iret
mov
sti
jne
les
adc
cmpsb
int3
or
xchg
cmp
in
sub
ds
mov
push
scas
jo
data16
ret
es
packsswb
and
and
bound
push
mov
dec
mov
or
stos
fwait
xor
stos
dec
popf
or
daa
int
mov
lods
mov
shrb
pop
cmp
jbe
call
dec
in
push
ds
jecxz
outsl
sbb
insl
out
test
dec
loop
iret
fidivl
push
sub
insb
push
fidivrs
popa
add
popa
loop
sub
push
sbb
mov
pop
mov
xchg
xor
push
adc
xor
ss
sbb
bound
xor
mov
fildl
in
popa
inc
subl
ret
iret
jmp
movsl
xchg
mov
jle
leave
inc
xchg
pop
dec
filds
adc
pop
imul
aaa
movsb
mov
jne
mov
jge
int3
negl
scas
xlat
push
mov
imul
mov
mov
or
sbb
mov
xchg
xor
mov
enter
xchg
dec
mov
stc
nop
loopne
and
push
dec
mov
shr
bound
repnz
or
ret
icebp
xchg
and
in
cli
and
in
scas
xchg
lock
fsts
clc
sbb
adc
cmpsb
jg
mov
imulb
adc
mov
scas
hlt
mov
push
cmp
xchg
insl
push
mov
and
repnz
xchg
inc
push
sub
fimull
popa
outsb
jl
push
pop
orb
adc
adc
ret
inc
adc
in
cmc
pusha
jle
pop
add
xchg
pop
add
lahf
mov
mov
sub
shlb
xchg
jge
leave
xchg
lock
cmp
mov
cmp
adc
test
enter
pop
and
arpl
xlat
cld
int
add
push
in
rcrb
pop
scas
ss
arpl
fcoms
or
xchg
xchg
push
cwtl
xor
pop
sti
gs
sub
jmp
repnz
bound
pop
and
std
sub
or
cli
jle
jne
jg
shll
push
les
cmovs
dec
rcrl
dec
lods
pop
fucom
jge
aaa
les
insl
xchg
adc
sti
inc
jbe
mov
imul
push
adc
inc
lea
sub
mov
jmp
gs
insl
jp
ret
scas
jo
dec
test
shlb
or
movsl
adc
lds
popf
dec
cld
fs
sub
mov
push
js
jp
push
dec
ret
iret
sub
lods
cmp
jp
in
mov
xchg
xchg
in
repz
mov
mov
stc
mov
fwait
inc
insb
testb
push
repnz
dec
inc
leave
ret
jo
adc
lahf
jo
loopne
outsb
xchg
mov
out
mulb
xchg
insb
cmp
sbb
xchg
jae
repnz
xor
scas
cmpsl
xor
insb
enter
jmp
adc
push
cld
mov
test
xchg
and
jl
pop
repz
xchg
aas
adc
dec
xchg
mov
vmovd
addb
cmc
clc
pop
or
mov
xlat
jnp
mov
xor
jg
fadds
ret
and
xor
out
cmp
mov
mov
mov
and
and
fsts
in
test
and
add
dec
xchg
push
movsl
js
in
mov
insl
cld
pop
das
addl
cmp
sub
add
inc
xchg
jp
add
pop
test
mov
scas
mov
pushf
mul
inc
add
call
out
xor
insb
int
inc
lds
sahf
std
pop
xor
pop
outsl
pop
xchg
sbb
or
cli
mov
cmp
cmpsb
jle
sub
xlat
cld
pop
outsl
in
and
rcrl
inc
adc
xchg
lods
scas
aaa
mov
inc
lret
xchg
popf
pop
dec
into
loopne
aaa
push
mov
outsb
inc
fdivrs
cld
mov
pop
lods
repnz
imul
popf
fsubrl
clc
xor
and
rol
mov
push
push
mov
xor
mov
jns
clc
dec
jo
ja
test
mov
repz
push
or
out
popf
pop
clc
shll
push
adc
incl
cmp
popa
jns
push
scas
insl
out
add
bound
xchg
scas
inc
imul
dec
mov
loope
dec
mulb
push
in
dec
lods
cwtl
test
paddw
pop
sbb
lahf
cmp
xchg
das
aaa
cltd
jb
push
xchg
imul
and
jp
xchg
dec
xchg
or
cld
lret
push
popa
xchg
data16
adc
xchg
cmpb
pop
scas
pop
inc
loop
xchg
cmc
test
pop
mov
jns
adc
bound
gs
lret
cwtl
lods
enter
jbe
xchg
adc
dec
cltd
nop
jne
mov
dec
test
sub
in
repz
into
inc
leave
pop
sbb
sbb
es
sarl
sti
sbb
jmp
dec
pop
mov
rcll
xor
cmp
mov
lcall
in
jle
mov
jmp
mov
iret
iret
in
sbb
jbe
inc
mov
inc
inc
inc
push
fiaddl
out
or
dec
pop
adc
mov
jo
xchg
hlt
mov
cmp
ret
pusha
sub
lret
sti
in
cmpb
call
sbbb
or
or
ja
iret
cmp
cmp
cld
pop
mov
cmc
test
dec
push
and
ss
fneni(8087
lret
add
push
mov
add
jbe
jne
stos
dec
dec
sub
mov
leave
imul
loope
fwait
xchg
pop
and
sbb
ret
sbb
jp
mov
mov
fadds
lret
outsl
mov
jg
in
cmp
jge
or
lock
mov
mov
lods
ja
jp
sbb
inc
add
or
out
sbb
sbb
fwait
leave
lahf
mov
enter
and
hlt
aaa
and
cs
push
in
jnp,pn
sbb
inc
out
sub
and
pop
mov
ss
dec
imulb
test
xor
subb
pop
inc
pop
aam
xor
int
push
sarb
push
inc
je
adc
inc
cmc
test
mov
lods
arpl
lcall
dec
dec
cld
insb
std
push
test
mov
add
jge
and
aaa
lea
dec
push
xchg
push
xchg
or
sbbb
mov
cmp
les
jg
enter
enter
pushw
imul
inc
icebp
into
dec
mov
mov
js
inc
jge
xchg
sub
sub
shlb
pop
lret
inc
leave
iret
push
loopne
iret
jecxz
aaa
loop
pop
mov
mov
add
pop
xor
pop
mov
test
adc
out
push
cmp
nop
jge
sbb
cs
jb
mov
addb
cltd
enter
dec
or
or
pop
fcomip
pusha
sarl
stc
or
jg
mov
bnd
idivl
in
shl
cmp
mov
repnz
imul
mov
mov
outsl
or
cmp
ret
pop
cld
repnz
sahf
orb
ljmp
mov
or
aam
sbb
test
dec
lods
adc
sbb
xchg
das
pushf
xchg
jmp
or
jmp
dec
rcr
xor
push
lods
inc
fnstcw
pop
lcall
add
cmp
in
xchg
sub
out
push
bound
cmc
loopne
pop
add
sbb
or
ret
mov
push
lds
fsubl
dec
std
daa
ljmp
test
xchg
and
insl
xlat
mov
push
rcrl
mov
es
jge
repnz
dec
aas
decb
xor
mov
rol
pop
jmp
adc
add
mov
stos
mov
out
loopne
dec
shrl
xlat
fsubr
and
lods
cmpsl
addr16
xor
dec
shl
das
outsl
cmpb
je
dec
daa
sub
arpl
dec
add
test
dec
sbb
pop
dec
jbe
clc
das
rcr
lea
arpl
sarl
push
or
out
imul
sub
cmp
dec
add
ret
sub
push
arpl
jmp
bound
in
add
cmp
lret
insl
adc
adc
arpl
fldl
jp
call
adc
out
fidivs
mov
cmp
outsb
hlt
flds
je
sub
pop
adc
xchg
out
mov
jmp
loop
fmull
cmp
jae
test
sub
dec
clc
inc
std
push
jecxz
push
pop
xor
loop
addr16
dec
fs
mov
inc
cs
dec
aas
xchg
shrl
iret
jle
and
cmpsl
jne
inc
leave
mov
inc
pop
enter
aam
mov
lret
adc
sub
adc
inc
icebp
lret
mov
cmp
imul
push
push
add
mov
cmp
loope
pop
stc
fstl
stos
lahf
xlat
lahf
insb
or
addb
adc
mov
fmull
mov
lea
and
outsl
movsl
sub
push
ljmp
sti
push
mov
je
scas
enter
mov
adc
xchg
pop
add
sbb
jbe
bound
xor
test
xchg
mov
scas
inc
sbb
leave
pusha
jl,pt
adc
jle
push
sub
push
stos
cld
mov
push
cwtl
fdivrs
outsl
testl
rcl
push
nop
mov
or
ret
xor
les
sbb
cltd
mov
arpl
push
inc
in
or
out
push
es
outsl
pop
jmp
pop
xor
sahf
iret
imul
cmpsl
adc
xor
add
fidivl
in
cld
sub
add
sub
subl
dec
outsl
leave
pop
aas
mov
leave
xchg
inc
sub
lret
add
sub
call
std
aad
in
scas
or
cmp
shrb
sbb
clc
inc
jge
dec
mov
sbb
inc
xor
clc
sub
jnp
add
pop
aas
adc
cmc
adc
in
mov
mov
sub
push
sub
mov
jb
cmpsl
pop
cmc
fwait
xchg
push
shll
js
icebp
mov
inc
adc
shlb
enter
xchg
imul
add
sbb
clc
data16
idivb
out
loopne
dec
outsb
sub
data16
out
and
jae
mov
sahf
gs
shlb
int3
out
push
addr16
add
js,pn
pop
cs
shlb
lahf
out
mov
dec
je
and
lret
xchg
aam
insb
push
stos
sbb
xor
js
push
xchg
lahf
roll
or
push
push
inc
inc
cmp
fstpl
mov
popf
in
faddl
insl
or
leave
imul
inc
fbld
jle
mov
call
ret
fdivr
pusha
daa
sub
hlt
push
or
or
jns
mov
pop
mov
mov
push
xor
add
mov
popa
jae
ljmp
adcb
jle
pop
mov
lcall
test
inc
or
pop
nop
jecxz
or
xor
dec
enter
push
dec
fbld
mov
popa
mov
out
mov
jne
dec
push
test
fdivr
movsl
or
xchg
imul
std
mov
inc
jne
mov
pusha
addr16
mov
repnz
sbb
pushf
scas
sbb
cmpsb
je
popf
sti
into
roll
mov
xchg
sbb
adc
ret
mov
xchg
pop
mov
shll
or
mov
xor
shl
aam
xor
pushf
pop
sbb
and
adc
or
orl
cmp
jmp
xchg
push
jl
ret
fidivs
mov
test
outsb
int3
jmp
std
jb
andb
pop
mov
addb
repz
inc
cmpsb
fcomp
es
dec
arpl
stos
cmp
cli
push
mov
jae
dec
add
push
pop
sub
push
in
jmp
mov
jle
cmc
dec
xor
or
xor
enter
inc
inc
lock
int3
xchg
sub
and
mov
outsb
fs
inc
push
cmp
lock
test
inc
or
pusha
sbb
out
dec
dec
pop
cmp
xchg
movsb
dec
int
mov
jmp
fbstp
add
jle
in
fidivs
and
test
int
push
pop
and
sahf
pop
test
cmpps
inc
aas
fcomps
jae
roll
outsl
push
ljmp
sahf
jmp
dec
lret
jge
cmp
loope
int3
out
xor
mov
ficompl
stc
ret
push
or
call
dec
enter
push
dec
add
int
and
dec
stos
das
push
scas
cld
fildl
push
inc
mov
pushf
repnz
mov
stc
xchg
or
inc
push
push
jnp
cli
js
pop
inc
xchg
popf
test
movsl
or
aaa
xchg
repnz
repnz
int3
out
adc
popf
es
lea
or
fisubl
test
pop
mov
jecxz
sub
sarl
into
pop
inc
ficomps
push
push
addr16
sbb
sahf
dec
mov
mov
mov
push
adc
and
ss
ja
test
jl
int
sub
call
xchg
sub
pushf
jl
push
outsb
inc
inc
mov
cmp
jo
mov
addb
add
inc
imul
adc
or
adc
dec
cmp
and
inc
sbb
in
or
divb
pop
jae
jo
pop
int
jnp
xchg
push
fildl
orb
lods
mov
scas
pop
scas
jne
add
mov
mov
pop
fs
std
xchg
shr
xor
inc
je
sbb
push
sub
stos
aad
hlt
lcall
sub
add
mov
jl
pushf
push
pop
lods
iret
in
rcll
lret
fnclex
in
jmp
inc
mov
push
pop
xchg
lods
or
pop
pop
inc
cwtl
sub
test
lcall
sbbb
cmp
ljmp
js
xor
adc
push
cs
sub
inc
outsb
mov
lods
xchg
jecxz
out
push
aas
ror
mov
pop
mov
loop
push
es
in
popa
sahf
push
add
hlt
jmp
loopne
gs
push
inc
mov
lea
jo
xor
xchg
adc
xchg
sub
outsl
test
fcomps
adc
in
xchg
push
push
fistpll
pop
mov
sub
dec
add
xchg
mov
add
or
sub
pop
cld
lahf
fwait
cmp
jl
lret
popa
hlt
mov
add
ret
cmpb
inc
inc
lret
popf
cmpsb
push
adc
cmpsb
lahf
jge
sbb
push
cmp
pop
jns
sub
subl
stos
mov
cli
ljmp
popfw
fildl
rclb
cmp
pop
jae
jns
sub
rcrl
mov
and
sub
movsb
imul
jns
rolb
lods
and
insl
inc
mov
adc
in
cs
sub
dec
push
push
cmc
mov
dec
pop
or
out
or
jne
orb
adc
jne,pt
test
cltd
cmp
stos
lea
pop
xor
stos
push
jnp
jno
adc
dec
fnstenv
fdivrl
loope
sbb
inc
push
jge
fwait
jno
ficomps
push
cli
jp
or
enter
xchg
add
adc
test
test
xor
add
test
mov
fcompl
inc
dec
add
push
ss
ficomps
pop
dec
rolb
orl
jge
fldenv
ljmp
pop
xchg
movsb
idivl
pusha
test
jge
call
adc
push
and
pop
in
dec
or
cmpsl
lret
aam
jb
sbb
sti
lahf
mov
loop
jb
fists
or
push
or
mov
mov
jb
xor
jecxz
mov
xchg
dec
roll
popa
add
test
xchg
push
icebp
and
pop
cmp
fildl
add
mov
cwtl
mov
out
std
jb
stc
push
or
icebp
fidivl
mov
sbb
call
add
cwtl
and
pop
mov
mov
pop
pop
ljmp
loop
jecxz
daa
xor
sbb
int
scas
cmpsl
test
jle
aam
inc
in
add
sub
dec
scas
mov
out
and
imul
icebp
mov
xlat
adc
outsl
ret
or
dec
std
adc
xlat
rclb
std
or
mov
xchg
dec
jns
cmc
frstor
cmpsl
dec
pop
cmp
lea
and
mov
cmp
je
xchg
cltd
mov
mov
mov
cmp
pop
into
dec
mov
fstps
cmp
xorl
sub
or
outsb
mov
dec
mov
sbb
sub
inc
dec
mov
jns
popl
mov
mov
pop
sub
lahf
fcmovnb
stc
gs
pop
popf
mov
jne
movl
jle
lea
jne
add
push
lea
cmp
popa
sbb
mov
or
enter
or
add
imul
jns
repz
mov
push
push
pop
push
jae
lds
ja
mov
mov
jb
cld
mov
outsb
dec
pop
in
idiv
cld
dec
das
int
adc
cmp
xchg
jl
cltd
fsubs
push
inc
les
jno
out
push
orl
loop
sahf
jmp
xchg
pop
ss
aaa
scas
je
and
cmpsb
xchg
fadd
jg
test
jnp
ret
mov
std
xchg
in
fwait
xchg
cmp
mov
lods
js
repnz
lahf
stos
jne
in
dec
cwtl
pop
dec
test
int3
mov
pushf
push
jns
push
lret
in
aaa
xor
sbb
xchg
push
or
lret
mov
aam
adc
dec
fcoml
mov
xor
push
lods
mov
je
enter
ljmp
cmpsl
dec
add
loope
scas
dec
push
cmp
add
in
sbb
mov
arpl
xor
inc
pop
or
jmp
fucomp
push
scas
fldt
enter
ret
jo
jbe
insb
sbb
in
daa
dec
pop
lahf
bound
jecxz
mov
rolb
shrb
pop
sbbb
sub
imul
pushf
adc
pop
rorb
sbb
loop
mov
out
repnz
sbb
aaa
and
xor
xor
sahf
shl
loope
leave
repnz
lret
inc
dec
in
mov
call
lock
xchg
enter
push
mov
jae
loop
jp
ds
in
mov
cmp
or
aad
jp
arpl
jecxz
pop
cmp
in
sbb
or
pop
pop
inc
xor
leave
popf
mov
fimuls
ja
incl
and
sbb
aam
and
mov
xor
lahf
inc
push
mov
addb
inc
jmp
adc
outsl
dec
stos
lds
adc
test
mov
orl
xor
imul
ljmp
shll
inc
fsubrs
stc
inc
mov
out
xor
and
aad
and
sub
cwtl
mov
repz
out
pop
out
push
sub
daa
ret
in
add
xchg
sub
add
or
scas
aad
fmul
or
hlt
ds
mov
je
push
cmpsb
mov
in
les
push
inc
jne
out
push
push
bound
and
fucomi
sbb
mov
das
xchg
mov
push
add
and
add
aad
jb
xchg
ds
pushf
cmp
sbb
xchg
outsb
lcall
dec
movsl
ret
pop
mov
jmp
cmp
sub
jl
push
mov
xchg
push
add
mov
outsl
mov
aam
jle
daa
inc
pusha
inc
inc
push
arpl
mov
aaa
cmc
fs
aad
out
xorb
cmpsl
adc
insb
mov
es
fiadds
and
cli
and
mov
mov
rorb
or
pop
jl
pop
push
push
cmc
push
cmpsl
stc
shl
in
pop
fwait
dec
insl
xchg
ja
movsl
addr16
enter
subb
or
push
sbb
ljmp
xchg
fidivs
or
dec
add
stos
sub
jns
fmul
add
mov
xchg
testl
sbb
xlat
popf
ret
mov
clc
adc
inc
das
xchg
in
mov
cmp
lds
mov
or
cmp
loopne
push
stc
jg
adc
inc
rorl
adc
mov
cwtl
shlb
dec
adc
inc
pop
push
cli
xchg
ret
jne
lahf
dec
dec
mov
sbb
imulb
xchg
nop
cmp
dec
shll
data16
stc
jl
jb
jge
cmp
into
mov
popf
mov
sbb
movsl
mov
jne
in
lea
or
sub
cmp
push
add
sub
pop
xchg
push
pop
lods
addr16
mov
mulb
push
push
mov
adc
jno
mov
jmp
popa
jbe
xchg
sub
idivl
lcall
mov
jmp
and
jnp
mov
scas
cmp
push
sbb
add
add
dec
dec
sbb
pop
push
popa
push
add
sbb
jns
aas
jmp
add
jbe
movsb
les
fsubp
pushf
or
cwtl
insl
sub
sub
mov
and
jns
push
sbb
xchg
cmc
fmul
inc
pop
push
adc
or
mov
and
mov
cmp
stos
sub
pop
pushf
or
mov
pop
in
push
mov
sub
xlat
out
mov
mov
loopne
iret
mov
sub
aam
push
pusha
lods
fwait
icebp
xchg
cwtl
add
fsubrl
shlb
dec
xchg
pop
sbb
js
mov
pushf
mov
movb
shlb
mov
push
adc
lock
sbb
enter
xor
ljmp
push
inc
adc
repnz
mov
jecxz
rcrb
lea
cmp
xchg
cmp
mov
int
dec
jbe
popa
push
dec
fldt
mov
pop
or
cmp
clc
push
add
and
and
lahf
xchg
mov
pop
sbb
cmpsb
xor
repz
xchg
pop
pop
add
popf
ljmp
adc
pushf
test
ret
cmp
test
outsl
lret
push
push
inc
pop
inc
jo
add
hlt
jo
inc
lock
call
jb
dec
add
inc
jnp
sub
rcrb
and
push
out
inc
sbb
pusha
fimull
jg
sub
cmpsb
push
in
cmpl
jb
lock
jbe
fcoms
ds
repnz
lds
test
dec
fisttpll
inc
dec
jp
call
movl
ljmp
pop
fwait
add
js
add
mov
and
or
xor
fisttpll
dec
sub
xor
in
out
cmp
mov
in
movsl
pop
sarl
mov
les
add
sbb
cmpsl
dec
test
dec
test
scas
mov
jae
mov
out
sbb
aad
arpl
push
lcall
mov
stc
icebp
sahf
aad
aaa
cmp
inc
inc
imul
add
test
mov
mov
call
jp
push
xlat
orb
notl
sub
lcall
mov
add
jb
popf
scas
leave
nop
fsubp
insl
inc
in
mov
or
xor
test
sbb
and
xor
sub
and
push
cmpb
push
rcll
xchg
xchg
mov
outsb
sti
add
mov
push
leave
and
add
adc
or
dec
mov
and
ja
jp
xchg
jbe
or
xchg
sub
or
sub
out
sbb
mov
sub
into
sub
cltd
mov
add
testb
in
loopne
mov
pop
xchg
imul
push
das
mov
fcmovnu
xchg
fisubrs
hlt
pop
xor
mov
fnstsw
inc
jns
int3
out
push
mov
lret
loopne
jecxz
lea
loope
and
sbb
sbb
mov
xor
loop
push
mov
push
add
sub
rorb
mov
addl
movsl
sbb
pushf
sbbb
imul
adc
dec
inc
idivl
mov
insl
int3
repnz
or
fstpl
push
mov
mov
push
pop
dec
mov
inc
cmpb
lahf
sbbl
and
xchg
lods
les
mov
enter
xchg
pop
mov
leave
sub
add
fistl
and
lret
xlat
cmp
jns
insl
push
xor
mov
add
dec
shrb
mov
pop
pop
mov
xchg
repz
sahf
movsb
rol
inc
ret
add
repz
cmp
xchg
fcoml
cli
push
sub
lahf
movsb
in
rcrb
in
xor
shrl
inc
jle
nop/reserved
sub
mov
dec
push
test
jnp
cs
outsb
jge
push
ss
cmp
test
xor
aad
fdivl
mov
pop
movsl
adc
arpl
pop
inc
dec
sarb
jne
sub
mov
adc
mov
rcll
adc
sub
adc
push
sub
sbb
in
sar
inc
shlb
movsl
notb
xor
mov
inc
hlt
mov
lahf
xchg
pop
imull
fists
movsl
xlat
mov
sbb
aad
lods
and
or
add
lea
pop
in
mov
mov
mov
jg
and
sbb
sub
cmp
movsl
rcrb
dec
inc
divl
lcall
or
daa
dec
mov
fstl
iret
nop
jns
clc
push
mov
inc
or
clc
pop
jecxz
cmp
jae
sub
adc
pop
fldcw
mov
fdivrs
mov
or
rcl
lret
dec
sub
std
sub
sub
cmp
add
push
sub
adc
mov
xor
push
jnp
leave
outsb
sub
subl
stc
test
rorl
popf
shl
jp
cld
fmulp
pushf
xchg
cli
adc
sti
lahf
not
test
test
dec
add
pop
jae
xchg
aam
mov
dec
pop
leave
jbe
jbe
fnstcw
sbb
push
pop
imul
push
leave
jns
mov
push
fistps
add
outsl
add
mov
sbb
mulb
popa
xor
xchg
popf
mov
test
popa
aam
movsl
push
dec
data16
nop
pop
es
fisubrs
jl
push
mov
pop
mov
cmpsb
pop
mov
repnz
out
mov
sub
xor
mov
inc
enter
sub
jo
cwtl
inc
mov
xchg
adc
push
mov
adc
jmp
lock
icebp
and
mov
pop
cs
mov
mov
dec
push
into
adcl
mov
int3
push
xchg
jne
fmuls
jnp
cmpsl
cmp
xchg
sub
popa
ret
mov
leave
mov
sbb
repnz
cmp
jno
xchg
pusha
push
mov
aas
or
add
push
rolb
mov
sub
iret
ljmp
scas
xchg
xor
sbb
sub
fwait
pushl
decb
outsl
in
sbb
jo
std
mov
add
xor
popf
and
sub
pop
mov
out
xor
jecxz
inc
imul
jmp
adc
add
or
xchg
popa
sub
lods
je
mov
leave
and
subl
pop
dec
ljmp
sub
sarl
cmp
mov
pop
fldenv
stc
repz
ficoml
sbb
fdivrs
push
fbld
ljmp
pop
stos
cmc
add
aad
sbb
mov
inc
inc
sbb
imul
add
rcll
daa
cmp
bound
or
fwait
pushf
sarl
mov
mov
mov
clc
popa
xor
dec
out
xchg
jmp
mov
stos
lods
movb
sti
jae
out
xchg
push
stos
sbb
cs
push
test
std
mov
sub
jbe
test
in
int3
push
ret
push
jle
ret
and
test
fistpl
daa
mov
loop
add
jne,pn
add
rcrl
std
in
mov
inc
scas
and
std
jns
sub
ret
idivb
push
mov
sbb
jo
cmp
clc
mov
add
fld
cwtl
loope
fwait
or
les
aam
mov
push
sbb
hlt
or
mov
add
pop
aaa
xor
fisttpll
ljmp
lods
mov
push
jl
je
jno
pop
jcxz
fwait
pop
out
mov
into
inc
push
xlat
adc
adc
mov
mov
sahf
cmp
cmp
pop
add
cmp
fisttpll
ds
jecxz
fimull
and
stc
fwait
dec
xlat
jle
pop
xor
sbb
sub
jne
inc
cwtl
push
inc
mov
push
lahf
outsl
mov
mov
xor
jne
fmul
mull
ja
inc
loop
out
and
sbbl
inc
add
mov
repnz
adc
in
fsubrs
xor
sub
imul
cmc
push
mov
or
mov
or
push
ret
das
xchg
es
sar
dec
mov
fs
lcall
movsl
mov
fldcw
pop
or
mov
gs
mov
cmp
push
mov
and
or
jecxz
adc
and
or
sti
pusha
lds
dec
inc
mov
lods
sub
or
pop
add
push
gs
xchg
js
pushf
ret
test
push
mov
arpl
sbb
andl
xchg
mov
test
insl
rcr
and
in
jnp
xchg
leave
data16
sub
dec
call
and
push
filds
mov
lods
cmpsb
loope
aad
push
jnp
push
xchg
mov
outsl
push
jne
sub
aas
lret
or
leave
rcrl
xchg
push
sbb
jmp
add
fildl
inc
cmp
sarb
mov
and
push
cld
in
addb
sti
div
adc
inc
inc
in
mov
add
jp
dec
add
mov
call
cmpsl
mov
push
popa
int3
mov
outsl
mov
mov
mov
sbb
mov
stos
mov
cmp
xchg
lods
jns
jge
int3
add
rclb
inc
inc
inc
enter
cmp
pop
rcl
adc
lods
in
shlb
int
push
rcrb
or
xlat
rclb
in
insl
int
xchg
mov
scas
jbe
nop
mov
sub
mov
hlt
sbb
cmc
push
xchg
mov
sbb
xor
loop
cmpl
sub
adc
dec
xchg
mov
xchg
mov
jb
mov
ljmp
xchg
adc
xor
jecxz
push
cmp
out
adc
test
imul
push
add
sahf
jmp
lahf
mov
std
jg
nop
add
and
push
and
cmp
jns
or
out
jb
mov
scas
mov
xor
pop
dec
subb
fldl
aas
or
mov
pop
daa
push
pop
or
iret
xor
fisttps
and
jp
test
insb
les
stos
hlt
sarb
repz
loopne
fs
adc
adc
daa
xchg
cld
xchg
in
popa
dec
fstpl
pop
sub
cmc
jp
mov
int3
fwait
dec
dec
xchg
and
push
push
aaa
lcall
loopne
push
jbe
jbe
and
cld
mov
jns
pop
stos
fs
mov
pushf
gs
int3
pushf
adc
es
dec
add
shr
loop
mov
sbb
fcom
jne
in
pusha
hlt
add
sub
subl
das
cmp
mov
test
push
outsl
ret
xchg
and
sarb
pusha
or
add
pop
ds
dec
sbb
or
mov
xor
scas
xlat
std
sbb
jl
lods
lock
dec
dec
notb
ret
cli
fidivrs
pop
mov
divb
dec
jo
push
push
jmp
dec
jmp
dec
lods
pop
jnp
jle
outsl
inc
scas
xor
clc
xor
and
xlat
fistpl
mov
xor
mov
xchg
jecxz
or
mov
mov
add
jno
or
rcll
adc
popa
jo
mov
sbb
ret
mov
xchg
jbe
lret
jb
dec
mov
mov
mov
fidivrs
jne
xor
notb
mov
jns
sbb
test
dec
dec
repnz
les
fsubr
rclb
pop
or
ret
ret
lcall
mov
inc
or
dec
es
jl
mov
cmp
dec
push
ja
xchg
out
shlb
jmp
or
lcall
cmpsl
pop
stos
lcall
jle
es
mov
test
push
sti
sub
sub
test
cmp
iret
cmpsb
xchg
dec
in
add
out
clc
in
xchg
push
jecxz
fmuls
mov
stc
mov
outsl
mov
jno
fs
aad
sub
push
cmp
inc
enter
add
sbb
ffree
icebp
movsw
test
insl
pop
sarl
pop
xor
inc
insl
ret
push
flds
dec
sbb
or
pop
or
subl
sub
inc
test
insl
dec
and
sbb
stos
add
popf
lds
jl
mov
hlt
xchg
xor
jg
je
sub
cltd
and
sub
fmul
sub
inc
adc
addl
sub
or
dec
lods
int
inc
adc
xchg
pop
jo
test
jnp
jne
testl
push
pop
push
sub
pop
jb
or
sahf
add
dec
inc
imul
test
xchg
mov
sub
adc
xchg
dec
sbb
rcrl
dec
popf
sbb
cmp
and
mov
hlt
insl
jo
jge
testl
jo
xor
out
or
adc
adc
insl
push
mov
xor
into
pop
push
xor
pop
call
ret
into
ja
cmp
xchg
jmp
sbb
jmp
out
cmp
test
ja
mov
add
in
dec
imul
push
dec
mov
mov
roll
xchg
cmp
mov
data16
add
fnstsw
pop
aas
mov
dec
in
fisttpl
mov
lods
mov
mov
dec
inc
push
push
mov
sbbl
pop
cmp
adc
push
lods
test
addr16
je
jb
push
add
jbe
dec
mov
je
sar
sti
jl
lret
addl
cmpsb
jb
enter
mov
enter
sub
dec
mov
ljmp
in
ljmp
jbe
sahf
sbb
xchg
call
xchg
hlt
mov
add
and
sub
les
aam
add
sbb
adc
jb
insl
mov
jmp
adcl
mov
aam
dec
mov
rorb
ss
in
dec
insb
push
adc
adcb
and
cmp
jecxz
cli
ja
mov
or
pop
hlt
jae
mov
orb
or
pop
dec
int3
lea
movsb
inc
lret
cmp
push
push
lock
lods
adcl
les
decb
stos
mov
data16
stos
cli
fucomi
cmpsl
jecxz
loop
jb
pop
push
jp
fistpl
andl
lret
push
ljmp
bound
inc
pop
sbb
jo
ljmp
fisttpll
cmpsb
cmpsb
mov
xlat
lods
pop
jge
sbb
or
sahf
ja
lret
push
jno
sub
addr16
xchg
push
jno
imul
dec
jae
add
cmc
hlt
and
mov
jb
pop
jo
mov
loop
imul
or
push
mov
aas
andb
pop
jbe
pop
mov
xchg
sub
aam
xor
jg
inc
or
lahf
loope
add
xor
pop
lds
pop
dec
dec
sub
inc
pop
jnp
push
mov
cmpsl
rcrl
pop
xchg
out
mov
inc
xchg
jp
and
imul
ret
call
sub
aas
into
fistpl
in
cmpb
das
sbb
outsl
pop
inc
jns
xchg
mov
dec
dec
inc
bound
popa
xor
inc
scas
das
out
or
sbb
adc
adc
popa
push
sub
inc
lock
pop
sub
mov
mov
pop
xchg
push
pop
ret
jmp
mov
xchg
loope
lahf
imul
lret
sbb
outsl
or
cmp
dec
gs
and
sahf
js
jns
push
int
fsts
pop
je
out
cmp
popa
jns
jmp
test
dec
stos
fstps
negb
sub
in
cltd
mov
add
mov
test
gs
dec
mov
lds
or
sti
aas
jne
and
or
mov
or
sbb
into
inc
inc
mov
fistpl
dec
sub
clc
ret
sti
dec
mov
jl
dec
cmp
clc
and
push
mov
and
cmc
or
or
inc
fwait
mov
sbb
punpcklwd
nop
inc
push
int
mov
rolb
xchg
dec
lret
xor
test
jnp
repz
mov
jmp
and
pushl
push
push
imul
jae
sbb
xor
ja
sbb
inc
mov
rcr
push
cmp
ret
ljmp
jge
gs
and
dec
mov
es
xor
nopl
mov
dec
imul
mov
pushf
jle
ds
xchg
into
movsb
or
dec
shlb
mov
sub
lods
int
lds
in
mov
std
sahf
xor
ja
lods
push
in
cmp
cmp
mov
cmp
mov
flds
lcall
data16
xchg
sarl
ds
bound
loopne
push
inc
pop
xchg
push
sbb
test
adc
test
aam
data16
adc
out
push
hlt
into
cmpsb
dec
stos
lret
pusha
sbb
inc
push
jge
add
mov
or
xchg
mov
mov
out
fsubs
mov
loope
fdivl
mov
and
jnp
das
jp
test
sbb
push
int
xor
ret
sahf
out
test
out
xchg
cmpsb
mov
xchg
mov
dec
mov
dec
mov
sub
mov
loopne
sbb
sti
insb
fiadds
add
xchg
pop
jns
dec
arpl
rcll
mov
sub
mov
pushf
vmread
mov
hlt
xchg
daa
sbb
pop
sbb
lea
cmpsl
out
mov
pop
lcall
inc
test
pop
push
dec
xor
add
or
sahf
imull
push
cld
cmc
loope
mov
add
pusha
sbb
mov
mov
inc
dec
add
cmpb
aad
inc
push
inc
pushf
repnz
xor
out
inc
repz
mov
out
jecxz
cld
insl
pop
insl
repnz
jg
pop
ljmp
shlb
dec
dec
pop
push
gs
or
mov
pop
xchg
mov
out
jmp
insl
clc
inc
sub
jle
mov
mov
mov
jns
cmc
inc
cs
push
or
popf
jge
andl
mov
lcall
mov
lret
loop
sbb
in
roll
cltd
test
pusha
aam
cmp
lods
push
mov
and
adc
or
sarb
cltd
jg
repz
inc
add
mov
cmp
sbbb
scas
add
pop
jne
mov
cmpsb
insl
xchg
ja
cwtl
lret
iret
sahf
sarb
mov
sahf
stos
aam
lcall
jecxz
xlat
add
ja
in
mov
mov
ds
daa
sub
into
rolb
js
cmp
int3
es
repz
add
xchg
es
mov
iret
rcl
dec
push
mov
jnp
mov
insl
in
dec
xchg
push
jb
loop
jns
push
test
mov
mov
iret
cmpsb
dec
sub
shrd
mov
fidivrs
inc
fisttpl
adc
in
and
and
cmp
inc
dec
lock
jmp
sbb
sub
nop
shl
cmp
ficoms
sbb
iret
mov
mov
push
add
push
in
aaa
xchg
pop
ljmp
cld
stos
jne
jp
pop
in
or
cwtl
add
xchg
gs
shrb
imul
lcall
clc
cmc
xchg
shrb
jnp
xchg
loope
jmp
decl
dec
enter
jp
bound
xor
test
mov
xchg
add
cmpsb
xor
and
int
push
pusha
add
pop
imul
jle
xchg
ja
jb
mov
inc
fiadds
dec
out
adc
jmp
in
dec
xchg
jne
sbb
and
cmp
dec
adc
ds
mov
add
aad
cmp
sub
or
sbb
xchg
and
aad
mov
adc
sbb
icebp
inc
mov
xchg
movsl
lret
pushf
push
stos
push
jp
and
test
push
sub
sub
outsb
inc
cmc
inc
cmpsl
popf
ss
mov
adc
xchg
lds
jg
mov
mov
ss
mov
sub
xor
je
dec
call
cmp
gs
sub
cmovo
jecxz
nop
std
push
inc
dec
movsl
add
jns
dec
popa
es
jl
xor
add
popa
ret
push
sbb
mov
js
call
xchg
mov
jp
dec
jae
push
popl
mov
out
je
jg,pt
cmp
lods
dec
mov
inc
aam
ja
mov
mov
pop
ljmp
mov
cmp
pop
imul
sub
adc
pushf
add
add
ja
sub
xchg
mov
xchg
ja,pn
fwait
push
sub
ljmp
outsb
push
cwtl
jp
or
mov
jns
fnstcw
xor
xlat
shlb
sbbl
loope
rcrl
or
inc
int
cli
cmp
inc
addr16
push
test
cmp
push
push
or
mov
aas
rcrl
cmp
movsb
popa
cwtl
mov
icebp
mov
jnp
fmulp
int
lds
dec
notb
push
or
push
xchg
ss
std
cmp
mov
adc
mov
dec
cld
lds
mov
lahf
pop
ljmp
iret
xor
xchg
and
pop
stos
movsb
icebp
rcll
arpl
xlat
xor
inc
repz
shlb
xchg
lea
insb
iret
sub
loop
jno
fcoml
lock
loop
push
adc
aam
addl
jmp
xchg
mov
gs
imul
les
jns
xchg
cmp
mov
or
cmpb
inc
fwait
outsb
add
shrb
dec
adc
xor
enter
loopne
pop
rorb
call
or
lahf
mov
sub
mov
test
icebp
je
mov
push
decb
inc
movsl
and
es
pop
lds
or
adc
sub
sahf
flds
loop
sbbb
scas
outsb
daa
pop
and
lods
or
int
int
inc
out
les
cmc
or
ja
pop
nop
mov
negl
xchg
pop
jnp
cmp
jo
movsb
bound
add
movsl
inc
int3
int3
pusha
aas
outsb
inc
or
ds
push
aaa
mov
cmp
cmp
lds
jle
mov
xchg
push
loope
adc
clc
mov
or
les
pop
dec
in
out
xor
fbstp
inc
pop
sub
add
or
inc
insb
dec
clc
sub
cmp
xor
call
xchg
xchg
push
cmp
inc
mov
int3
mov
cs
sbb
pop
inc
mov
lods
push
add
leave
out
cmp
insb
xor
push
popf
enter
xor
test
movsb
call
test
mov
cmp
jo
inc
inc
mov
ja
push
push
or
cmc
mov
push
xorb
test
mov
mov
xchg
jb
call
mov
icebp
fwait
xor
pop
and
fmuls
jge,pn
adc
jge
jecxz
in
push
in
pusha
push
add
lahf
pop
mov
fdivrl
leave
orl
inc
dec
lods
and
xchg
or
movsl
mov
rcll
adc
xchg
imul
fwait
rcll
or
sbb
dec
std
mov
fisubrs
xchg
dec
lods
push
sbb
das
add
xchg
inc
lods
mov
negb
cmp
xlat
adc
xor
insb
pop
inc
insl
mov
imul
aas
scas
ret
mov
jmp
repz
inc
stc
mov
testl
aad
mov
mov
jge
ficomps
sbbl
mov
add
dec
je
fistpll
mov
adc
hlt
push
lret
inc
call
sbb
bnd
nop
mov
jle
cmp
icebp
in
lods
orl
jl
xchg
mov
push
in
data16
dec
in
pop
inc
mov
push
daa
sub
jl
push
inc
pop
and
in
xlat
jno
inc
in
leave
test
mov
ds
out
lds
sbbl
pop
sub
enter
rcl
sub
push
out
inc
mov
mov
push
pop
fdivp
jge
sbb
jmp
mov
or
fs
add
sub
ret
jb
xchg
or
sub
ret
aaa
jnp
sub
cmp
mov
pop
ret
cwtl
test
lods
push
inc
pop
xor
mov
repz
fs
inc
fcomip
ret
xor
cld
xchg
test
stos
mov
mov
loop
sub
ficoml
sbb
bound
pop
mov
loop
pop
jl
pop
or
cmc
lret
xchg
outsb
push
mull
cmp
jle
jecxz
repnz
mov
xchg
mov
mov
test
in
mov
mov
cmp
int
stc
mulb
iret
push
stc
and
add
xlat
test
adc
xor
push
mov
sbb
mov
aaa
mov
sub
push
xchg
xchg
push
jno
mov
adc
dec
aam
xor
pop
sub
lock
cmp
jne
sti
lret
in
mov
mov
push
jno
hlt
cld
cmc
fcoml
inc
fisubs
ja
sub
and
xchg
pop
xor
data16
dec
xor
mov
push
scas
imul
mov
icebp
ret
aas
dec
mov
ret
jo
jae
mov
in
sar
dec
push
fwait
stc
mov
mov
xchg
cmpsl
add
scas
pop
or
cmpsl
cmc
cli
sarb
addb
pop
and
xor
mov
push
fildll
pusha
loope
push
add
aaa
das
mov
jge
sbb
leave
or
cmpsl
insl
and
adc
aad
cmpb
js
ror
sub
lock
cmpsl
cltd
push
jnp
lret
mov
jg
fs
fwait
pop
jmp
aam
sub
fisubs
adc
mov
dec
nop
call
inc
in
sbb
mov
mov
js
jmp
jle
xchg
inc
jl
sbbl
lea
pop
idivl
mov
mov
mov
insb
and
mov
push
int
push
stc
out
adc
or
ja
jne
ret
dec
scas
outsl
inc
incl
mov
push
or
cmp
pop
std
xor
adc
sti
push
pusha
loope
jnp
arpl
xchg
jns
xor
pop
pop
je
push
lret
repnz
pop
in
imul
loope
push
rcrb
mov
leave
mov
stc
int
adc
mov
jmp
dec
stc
loopne
jl
jb
adc
out
bswap
mov
jmp
push
pop
and
jbe
outsl
xor
pop
mov
cwtl
or
push
mov
das
mov
pop
mulb
inc
cmp
pop
mov
popa
lcall
mov
fwait
out
repz
pop
cmp
dec
movb
dec
sub
jnp
gs
xor
cmc
mov
sbb
cmc
dec
fs
popa
pushw
cmpsb
loopne
test
push
xchg
sbb
sub
sub
mov
nop
ljmp
inc
jo
and
addr16
loope
fs
dec
mov
push
fcmove
cmp
xor
ret
push
in
enter
sbb
arpl
loop
call
imul
out
adc
jle
dec
mov
lret
mov
xor
mov
outsl
push
rolb
leave
pop
dec
inc
mov
cwtl
leave
inc
xor
xor
popa
pop
add
jns
pop
cmp
stos
fimuls
mov
cmp
push
mov
repz
inc
mov
push
daa
push
mov
mov
faddl
sahf
ret
mov
pop
mov
mov
push
inc
std
and
dec
aam
int
xorb
xor
jbe
mov
cltd
frstor
adc
mov
adc
push
je
mov
xor
lods
jl
xor
and
loope
xor
xor
sub
sbb
push
pop
fcomps
lea
hlt
add
pusha
aas
popl
ja
addr16
cmpsl
xor
push
dec
mov
cwtl
pusha
xchg
mov
xor
push
std
or
push
pop
pushf
aad
sbb
shrb
lock
pusha
jb
rorl
sub
mov
cwtl
sbb
stc
adc
fstpl
pop
shrb
lods
fwait
push
push
lcall
sub
push
je
xlat
mov
mov
lods
fmuls
push
fildll
mov
or
xchg
pop
mov
mov
out
ret
dec
scas
in
rcrl
jecxz
and
mov
cmp
jbe
mov
push
int3
scas
rolb
daa
pusha
subb
mov
sarl
in
iret
sub
int
rcrb
fwait
sahf
and
ljmp
adc
dec
ret
hlt
add
jns
pop
in
iret
loopne
pop
ljmp
jbe
or
iret
mov
loop
inc
push
and
imul
ss
xchg
test
xchg
lahf
cmp
jns
push
xchg
mov
mov
or
mov
inc
dec
cwtl
popf
test
push
and
lds
inc
inc
xchg
and
filds
fcmovnbe
xchg
sbb
lock
test
inc
dec
or
imul
mov
adc
arpl
lods
xor
out
push
cli
int
stos
divb
push
mov
inc
cmpsl
in
jge
inc
cli
mov
mov
mov
icebp
and
call
lret
push
ds
and
xchg
dec
cwtl
ja
lahf
add
mov
mov
push
sbb
lods
stos
out
inc
and
les
push
cmpsb
mov
addb
xchg
inc
rorl
arpl
int
sub
orl
adc
push
jne
cld
sub
inc
rolb
sbb
sbb
aam
popa
sub
xorb
in
incl
jmp
in
mov
stc
add
xchg
fs
inc
inc
nop
adc
mov
nop
hlt
fcmovnu
fcoml
call
xchg
push
push
fs
xchg
cli
push
andl
sub
aas
mov
xor
dec
cmc
test
in
mov
add
in
out
sbb
jmp
seta
je
mov
inc
rorb
xor
incl
pop
sbb
lret
ficoml
pop
jge
adc
inc
push
xchg
jge
or
cmp
mov
mov
cmp
iret
movsb
sbb
jp
cwtl
push
shl
mov
outsl
mov
lea
int
js
mov
lahf
shll
adc
fdivrs
call
jo
cmpb
sub
xchg
mov
inc
xor
inc
mov
cmp
int3
adc
or
mov
dec
xlat
out
lahf
pop
dec
pop
jne
add
inc
pop
jge
add
in
sub
mov
mov
test
push
sub
sbb
jo
xchg
xor
cmp
into
out
mov
sub
mov
sbb
outsl
or
inc
push
popa
inc
out
jge
mov
pop
movsl
jecxz
enter
pop
fcmove
sub
test
sti
pop
mov
sub
xor
push
jno
rol
ja
dec
sahf
ds
xor
jb
or
adc
enter
in
cmp
mov
fdiv
insl
sub
scas
and
xchg
sub
aad
enter
cmp
mov
scas
fnclex
xchg
sub
in
add
fsubs
test
add
dec
push
imul
mov
andb
cmpsb
sub
sti
dec
dec
popf
adc
clc
push
dec
lock
mov
or
dec
clc
mov
xor
test
mov
rorb
or
fmull
ret
and
mov
push
pop
sub
fistpll
shll
scas
fs
jae
xchg
daa
test
scas
mov
int
inc
stos
jecxz
inc
rclb
mov
pusha
jle
xchg
add
and
jo
mov
test
nop
outsb
pop
fst
enter
lods
mov
pop
pop
xchg
and
cmc
roll
pop
pop
mov
imul
push
sbb
mov
test
loope
arpl
mov
repz
lods
pop
xor
mov
sub
bound
push
pop
cld
mov
fwait
sub
pop
push
add
inc
loop
mov
incb
addl
lahf
lds
loop
rcrl
xor
or
popf
jmp
rcr
orl
cwtl
inc
push
cmp
or
scas
shlb
mov
ficoms
xchg
rcll
fisttpl
popa
jns
inc
lret
add
mov
fcoml
jge
xor
in
inc
dec
pop
movsl
pop
cld
pop
movb
fistl
out
push
or
pop
fwait
sub
xor
sahf
sub
mov
lahf
cs
pop
mov
mov
or
push
sub
mov
sub
inc
xor
jae
add
fldt
push
jl
sbb
aad
bound
lods
mov
push
in
xlat
pushf
pop
scas
mov
xlat
shlb
aas
test
repnz
cmp
or
arpl
lds
stc
movb
addr16
adc
aas
inc
sub
fadds
es
xchg
int
adc
bound
pop
inc
std
ja
and
inc
arpl
mov
jecxz
scas
and
sbbl
push
mov
ljmp
jl
sub
lds
lods
mov
sbb
add
jb
add
lods
sbb
cmp
gs
lahf
stc
add
in
cmc
icebp
js
xlat
fdivp
push
mov
inc
stc
mov
pop
repnz
jno
mov
in
mov
mov
mov
adc
das
das
mov
test
lret
sub
sbb
ljmp
ret
add
or
jae
jno
imul
jg
and
xor
mov
out
dec
xchg
mov
insl
mov
pop
js
das
popf
std
pop
popf
test
and
sub
scas
cmpsb
test
movsb
fmulp
mov
jae
repz
cwtl
cmp
xchg
mov
push
test
mov
push
cli
inc
cmp
stos
jl
cld
mov
dec
int
shrb
sub
cmpsl
das
pop
and
xor
xor
ljmp
cmpsb
out
shr
and
bound
dec
push
cmp
sub
jg
shlb
jno
add
les
mov
pop
movsb
out
dec
xlat
testb
loope
dec
pop
in
jmp
xor
mov
xorl
add
jle
mov
lret
pop
in
jp
xor
lods
push
test
mov
das
push
cmp
stos
push
mov
xor
mov
mov
cwtl
push
scas
jne
lock
les
sub
sub
mov
push
cmc
sahf
daa
xorb
repnz
push
rolb
mov
inc
outsl
jnp
fistl
and
les
in
jle
lock
icebp
sti
jns
mov
push
aas
adc
cmpb
psrld
stc
mov
cmp
cs
cmp
mov
fdivl
inc
and
fistpll
ret
popf
pushf
adc
scas
xor
mov
in
rorl
cmc
cmp
dec
xor
inc
fwait
enter
lods
jle
cmp
aaa
lock
sbb
cld
or
push
fwait
pop
mov
or
imul
mov
stc
xchg
pushf
mov
insb
or
jne
ret
test
jb
movsb
lret
int3
test
nop
and
test
adc
cmp
sbb
stc
leave
cmp
xchg
and
push
and
inc
stc
jno
push
jae
out
mov
sbbb
stos
gs
es
jmp
add
lret
daa
add
cltd
test
shll
scas
or
cmp
or
xor
adc
sub
aam
out
inc
mov
ret
int
imul
pushf
pop
xchg
into
stc
and
push
repz
sbb
add
std
add
cmpxchg
push
cmp
fstpl
and
xchg
inc
cwtl
and
sbb
xor
push
mov
sub
andb
cmp
dec
push
and
push
add
xor
jmp
es
jecxz
cwtl
dec
aam
xlat
sbb
nop
sahf
push
cmp
cs
dec
adc
fwait
lock
jne
sub
je
fucom
mov
sar
push
arpl
push
arpl
mov
cld
andb
jecxz
imul
mov
mov
cmp
fsubs
mov
stos
or
add
cmpsl
mov
lds
jnp
stc
hlt
inc
sbb
dec
xor
mov
fmuls
mov
dec
popa
pop
aaa
lds
mov
xchg
test
divl
rol
cltd
sbb
xchg
mov
fiaddl
xor
je
xor
mov
sbbb
inc
leave
je
inc
popf
sbb
mov
or
aad
sbb
hlt
adc
push
bound
cmpsb
aam
push
imul
fidivrs
into
stos
rcrl
hlt
std
sub
xor
fcoms
cmp
mov
or
dec
shlb
jo
sti
push
int
pushl
lcall
sub
addr16
into
jge
das
jg
mov
mov
jns
cs
mov
push
jns
sub
mov
lret
movsb
and
or
jno
into
mov
jae
dec
filds
movsb
sub
ss
push
dec
fwait
lret
loope
fwait
clc
lret
fcoms
daa
dec
add
je
push
adc
add
or
adc
jl
les
xor
xchg
or
aad
fistpll
push
adc
insl
ljmp
out
lcall
out
push
adc
fisubrs
es
xchg
daa
arpl
adc
push
in
xor
push
out
lea
popf
pop
mov
shr
out
mov
xor
mov
sbb
in
inc
ret
movsb
mov
out
fnstcw
add
or
xor
jl
jge
xchg
push
inc
mov
dec
jbe
hlt
mov
repnz
dec
xor
jl
cmp
mov
jbe
gs
jne
movsl
cs
std
outsl
out
inc
inc
outsb
fdivrs
lret
decb
xchg
dec
insb
shlb
push
hlt
push
test
push
cmp
mov
or
add
call
jmp
loop
and
movsb
jb
jecxz
popf
fcmovu
push
dec
into
mov
pusha
loope
lcall
or
mov
xchg
cmp
add
divl
ljmp
inc
in
mov
xor
push
mov
jne
mov
sub
mov
loopne
and
sbb
in
out
arpl
jl
and
jmp
mov
outsl
cmp
adc
test
int3
sbb
xor
xchg
inc
stos
cltd
sub
mov
insb
lock
cmp
iret
iret
mov
ljmp
hlt
inc
shl
in
filds
mov
xchg
mov
dec
mov
out
dec
sub
lds
jge
jb
mov
imul
add
mov
and
in
or
sub
sub
pop
cmpb
pop
pop
fdivrs
mov
aaa
aad
and
mov
subl
sti
sbb
push
scas
or
lahf
mov
dec
dec
mov
xor
xor
cmp
imul
and
int3
call
aas
les
sub
je
xchg
loop
mov
sub
jae
sub
and
sub
mulb
aaa
imul
and
mov
in
and
xchg
mov
adc
int
ret
imul
sub
xchg
add
bound
out
insl
push
push
movsl
int3
xchg
lcall
popa
test
les
add
adc
hlt
and
ror
jnp
sbb
int
rolb
pushf
or
xchg
pop
mov
and
je
and
jmp
xchg
inc
dec
or
arpl
sar
stos
push
sti
loope
lea
mov
xor
mov
sarb
mov
sub
mov
mov
call
inc
call
inc
nop
mov
lret
mov
dec
out
push
xor
loop
adc
sbb
cmc
and
mov
sarb
cs
andl
das
pop
popf
xor
mov
or
les
or
in
mov
pusha
insb
ja,pt
dec
mov
test
cmp
add
testb
push
repz
mov
jmp
mov
pop
mov
repnz
repz
inc
xchg
repnz
xlat
lcall
sti
add
stos
cltd
xlat
jns
bound
xlat
sub
rclb
cmp
mov
and
or
xchg
pop
sub
mov
das
push
dec
sarb
jl
pop
int3
sbb
mov
les
add
jno
and
inc
push
jge
fstl
mov
rorb
push
pop
test
and
bound
nop
mov
mov
jne
jne
push
push
mov
das
adcl
dec
push
pop
xchg
mov
cmp
int3
or
fsts
ja
cltd
pop
inc
add
sbb
aam
sub
dec
jmp
sbbl
jbe
mov
adc
cmp
fmulp
cld
das
or
sbb
andl
inc
or
ja
loope
inc
jmp
xchg
hlt
scas
out
inc
xor
call
jmp
add
jno
mov
leave
mov
mov
add
sub
outsb
xorb
into
xchg
jp
inc
lds
pop
dec
mov
int3
push
scas
jl
mov
xor
xchg
imul
mov
xor
rcl
xchg
sub
fstenv
test
mov
pop
xchg
jmp
mov
popl
or
ja
decb
dec
xor
xor
xchg
div
or
mov
jg
jno
mov
dec
xlat
movsb
dec
aas
es
adcb
insb
push
ret
cld
mov
xchg
aad
mov
dec
dec
mov
jne
adc
popf
loop
push
insb
orl
jo
mov
pop
les
incl
pop
nop
sub
sub
lds
cld
ficompl
movsl
push
inc
cld
pop
lret
mov
fisubrl
dec
pop
mov
shrl
cli
push
sbbl
or
je
or
lea
lea
lock
in
adc
enter
ljmp
hlt
jle
jns
pop
iret
inc
jo
dec
inc
mov
repz
jnp
insl
xchg
lret
lds
lar
test
push
and
jnp
sub
es
filds
fmull
cld
mov
lea
repnz
jle
inc
adc
push
movsl
pusha
ds
stos
xlat
mov
mov
dec
push
mov
push
stc
adc
ret
pop
ds
fisubrs
stos
hlt
sbb
dec
mov
movsb
inc
jl
jbe
xchg
sub
or
insl
push
push
pop
inc
outsl
inc
adc
adc
popa
jl
sbb
fimuls
pop
aaa
xchg
pushf
test
or
scas
inc
mov
sub
test
inc
fdivr
cwtl
fdivrs
ljmp
add
cli
std
jp
sahf
sbb
dec
rolb
push
pop
pop
push
or
cmpsl
adcb
rclb
pop
das
jge
insb
jmp
xor
or
aaa
sub
sahf
inc
nop
in
mov
xchg
mov
xor
and
aam
cmp
stc
bound
and
mov
outsl
adc
fs
xchg
jp
mov
data16
or
das
adc
sub
xchg
mov
ss
lea
into
sbb
into
shlb
jo
into
adc
test
mov
scas
lods
mov
fs
add
shrb
add
negb
cli
jp
movsb
jae
push
xor
dec
sbb
repz
call
je
jbe
icebp
ja
mov
cmp
xchg
out
lods
sbb
add
shlb
in
mov
movntq
fiaddl
in
data16
pop
dec
and
dec
pusha
cwtl
bound
scas
mul
cli
xchg
imul
imul
jno
lret
int
cltd
test
push
mov
into
sub
cld
cmp
cmp
jnp
pop
push
out
push
jge
je
dec
push
pusha
inc
xchg
adc
lods
sub
rcrb
addr16
hlt
and
std
xchg
jo
loop
mov
mov
cmpsb
imul
adc
std
and
cmp
dec
add
xchg
adcl
fiaddl
inc
fnsave
fsts
fldenv
aam
jns
dec
cwtl
jb
pushf
mov
and
push
in
cmpsb
mov
pop
push
fldcw
pop
push
xor
bound
xchg
insl
xor
je
cmp
das
pusha
icebp
arpl
sub
mov
push
fs
clc
fstps
mov
rorb
sub
dec
cmp
nop
sub
add
nop
cmpsl
sub
insb
nop
sub
pushl
xchg
mov
inc
fnstsw
cli
js
mov
mov
arpl
loop
cld
sub
scas
aad
mov
repnz
das
out
pushf
test
and
int
push
mov
sbb
or
mov
or
ret
fsts
mov
mov
lock
cltd
pop
test
in
daa
dec
movsl
cmovge
cmp
mov
ljmp
das
adc
ja
fwait
ljmp
jns
idivl
jg
xchg
xor
loope
fwait
xchg
pushf
rcrb
sbb
popa
pop
pop
lcall
xchg
adc
jmp
jnp
cmp
popf
or
mov
ss
mov
repnz
sbb
ret
sbb
lods
not
inc
mov
aam
xchg
sub
xchg
jbe
sub
inc
sbb
push
test
push
adc
mov
mov
jno
test
lock
pushl
push
popf
jb
out
xor
mov
dec
push
shrb
mov
scas
push
in
stc
popa
out
stos
call
popf
xor
repz
jmp
in
cs
addr16
pop
out
cmpsl
mov
add
shrb
xor
mov
mov
pop
stc
cmp
add
push
add
pop
in
imul
push
stos
or
ret
stc
mov
movsl
inc
jno
jbe
xchg
sub
sub
dec
jnp
mov
gs
addr16
fidivs
add
lret
cld
std
ret
sbb
inc
pop
xorl
push
add
outsl
pusha
sbb
pop
cmc
es
mov
outsl
sbb
inc
mov
stos
pop
aaa
sbb
aad
or
fbld
or
int3
sbb
push
popf
xchg
fs
xor
xor
dec
sti
and
repz
jbe
gs
or
lea
scas
mov
push
fcmovb
cld
inc
cmpsb
add
push
add
pop
rorb
cli
ja
mov
push
ljmp
call
or
loop
inc
xchg
inc
out
std
sub
inc
add
adc
mov
mov
cli
test
sbb
imul
in
call
inc
aad
push
into
or
jge
icebp
fwait
test
push
jo
les
lea
outsb
cli
sub
rolb
nop
push
mov
bound
jmp
les
out
jb
ret
fistpl
in
jo
adcl
loop
push
lods
sbb
enter
shld
loope
test
mov
xchg
testl
arpl
xchg
fmul
lds
sbb
or
fbld
sbb
mov
es
sbb
mov
adc
jg
ficoms
xlat
jge
outsb
sbb
inc
inc
or
inc
lods
in
ret
push
nop
jge
xchg
jp
push
xor
inc
fbld
xchg
ss
mov
xor
addr16
rclb
add
and
cmpsl
int
xchg
subb
into
pop
fdivl
jge
aam
dec
add
adc
ret
enter
mov
mov
mov
or
and
inc
mov
jle
cli
mov
and
mov
icebp
data16
pop
push
andb
lahf
imul
insb
xlat
mov
stc
test
std
iret
lcall
inc
cwtl
mov
int
in
test
mov
fidivs
popa
mov
mov
cs
in
sbb
inc
nop
ss
rolb
mov
mov
repz
pop
pop
outsb
fisubrs
mov
or
push
addr16
repnz
jno
mov
nop
flds
cmc
pop
sub
adc
adc
das
aam
icebp
outsb
ret
mov
outsl
shll
out
xor
dec
mov
dec
mov
adc
push
inc
aas
fcompl
into
into
push
ss
lock
dec
jns
lock
push
push
cltd
addl
aam
push
dec
xchg
imul
sub
stos
pop
cs
mov
fildll
pop
dec
mov
out
xchg
push
add
mov
mov
pop
xchg
repz
xchg
pop
out
push
lcall
add
cmp
xchg
jp
std
sub
lret
cmp
mov
adc
jle
gs
mov
or
mov
push
mov
out
pop
sub
iret
pop
add
sub
mov
loopne
or
lea
mov
pop
jb
ficomps
xchg
ljmp
dec
and
lods
jmp
mov
push
and
add
lret
mov
sahf
or
test
popa
lahf
mov
mov
dec
mov
inc
std
clc
inc
cmp
cwtl
xchg
fsubl
add
cmpsb
arpl
std
sub
lahf
loop
iret
enter
adc
inc
scas
add
pop
mov
push
or
jge
sub
cmp
mov
addr16
sbb
les
inc
and
mov
pop
stos
xchg
xchg
pop
push
rorl
jle
dec
and
or
in
cmp
popfw
in
js
imul
out
or
dec
mov
cld
repnz
mov
cmc
popa
dec
arpl
stos
test
jns
adc
scas
inc
shl
inc
icebp
and
int3
div
stos
sbbb
or
adc
call
adc
ja
adc
inc
mov
addr16
movswl
and
lods
xchg
jp
xchg
addr16
popf
or
inc
cmpsb
or
sub
mov
lea
or
jle
pushf
out
cli
test
hlt
je
jmp
dec
test
cmpsl
movsb
test
and
jae
dec
loopne
push
lcall
mov
add
push
int
xorl
loopne
into
cmpl
cmc
inc
jnp
pop
cmpsb
adc
int
test
jbe
and
sti
mov
jo
dec
sbb
cmp
xchg
lea
cmp
inc
xlat
faddl
add
pop
sub
ficompl
inc
test
push
mov
cmp
pop
or
mov
shlb
sub
inc
mov
adc
fcoms
and
push
popa
jp
push
loopne
test
fwait
int
popa
mov
movsl
scas
fldenv
pop
ret
add
xor
push
mov
loop
mov
pop
js
sahf
int3
out
inc
jb
or
jl
jle
vdivss
mov
std
lret
iret
mov
sub
pop
cmp
pop
clc
aad
add
roll
mov
xlat
loopne
dec
test
cmp
ljmp
jno
js
idiv
lcall
fdivr
scas
es
jae
jbe
sahf
call
shrl
jg
fcomps
sahf
lods
jecxz
adc
fwait
mov
dec
xor
jle
lods
lea
add
push
loop
mov
inc
or
push
pushf
push
leave
mov
mov
js
cmpb
adc
sbb
ljmp
mov
add
push
dec
mov
outsl
xchg
mov
frstor
clc
lock
or
sbb
pop
sbb
and
mov
ljmp
out
ja
push
leave
jmp
mov
push
adc
and
js
stos
mov
sti
or
and
cmpsl
test
mov
mov
or
out
movsb
jg
mov
jmp
cmc
pusha
pop
test
dec
int
sub
rcrb
inc
sahf
dec
mov
aad
jg
sbb
and
mov
cmpb
outsl
and
stos
insl
jbe
lret
dec
fwait
subl
inc
pushl
insb
cld
outsl
stos
inc
cmp
jbe
aaa
pop
aas
mov
nop
cmpsl
jecxz
jge
cmp
das
add
jmp
shll
aam
mov
pusha
lds
push
push
add
xchg
adc
out
xchg
dec
xlat
imul
frstor
xor
xor
sbb
adc
lret
in
int
dec
jl
jmp
cmp
sbb
dec
iret
pop
xchg
dec
sbb
das
data16
xchg
movl
sbb
outsl
mov
jb
fst
ja
pop
lea
mov
lods
jb
les
icebp
mov
or
jmp
fs
mov
push
shll
mov
mov
lds
outsb
lods
mov
xlat
rcrl
outsl
mov
cmpsl
xchg
or
fs
push
push
or
lods
shr
ror
mov
imul
xchg
add
dec
pop
cli
aas
cmc
inc
mov
mov
rcr
adc
mov
adc
lcall
leave
pop
pusha
jg
imul
pusha
fcoml
add
iret
ja
je
mov
icebp
push
ret
xor
fcmovne
adc
and
addr16
js
pop
or
jg
fsts
mov
and
or
ficompl
cmpsb
or
mov
in
inc
jno
inc
lods
jecxz
push
clc
jl
add
fmull
lock
das
jne
fmul
ja
mov
add
cli
sub
insb
test
push
insl
imul
cmc
lds
pop
dec
mov
cwtl
pusha
and
fsubp
mov
push
push
cmp
dec
and
pop
into
mov
popf
testb
cmp
xchg
and
cmpsb
imul
or
pop
movsb
sbb
inc
es
mov
sbb
adc
mov
sub
jmp
in
repz
insb
jl
les
fistpl
jno
push
ficomps
sub
loopne
sahf
popa
push
cmp
ljmp
outsl
add
stc
xor
xchg
shlb
arpl
inc
loope
imul
pop
pop
jae
inc
pushf
jne
mov
nop
add
leave
in
mov
arpl
in
pusha
pop
imul
pop
sbb
jno
aaa
dec
loope
test
testb
int3
inc
mov
cmpsl
test
pushf
jb
mov
or
mov
enter
ds
sub
aas
sub
mov
cmp
xor
add
adc
fstp
fisubl
sahf
mov
jno
jmp
das
cmp
jne
roll
jo
cmp
adc
inc
dec
sti
js
pop
sbb
andl
mov
or
pop
pop
xchg
sbb
imul
xor
adc
pop
push
jg
out
mov
js
repnz
sbb
rcrl
sbb
jmp
xlat
xchg
mov
xchg
outsl
push
out
pop
fidivrs
stc
push
sti
stos
cmp
pop
enter
pop
cld
dec
lret
push
cld
cmp
jge
ret
mov
ss
mov
sti
push
pop
test
outsb
pop
test
pop
movq
jp
jp
lods
gs
mov
mov
pop
mov
imul
adc
ljmp
fidivrs
stc
test
mov
xlat
out
pop
mov
pusha
cltd
out
adc
dec
fdivl
jo
mov
icebp
popf
mov
je
ret
adc
scas
jg
in
cli
cli
jp
test
gs
in
sbb
mov
jg
push
sub
pop
mov
mov
repnz
inc
nop
jge
ljmp
or
or
jle
push
mov
xchg
pop
mov
addr16
push
aad
icebp
xchg
fdivp
dec
loop
pop
sahf
fldenv
or
in
cmp
jp
call
les
and
sbb
sahf
mov
lods
mov
imul
sarl
in
mov
subb
loop
push
or
push
movsl
mov
popf
mov
outsb
jne
sub
fimuls
jb
fs
mov
movsb
and
jnp
div
cmp
fisttpl
cmp
addl
ljmp
inc
and
add
imull
hlt
mov
out
inc
clc
decl
mov
jg
xchg
jae
pop
fldt
pop
sub
out
out
adc
dec
dec
sbb
mov
push
adc
push
std
inc
stc
pop
jne
cmp
ja
popf
or
jb
ret
mov
xor
jge
shrl
pop
out
insl
enter
ret
jno
push
int
xor
mov
test
cmp
pop
iret
add
xor
into
pop
das
mov
push
xor
aad
sti
sahf
stc
and
inc
neg
test
cli
add
xor
mov
mov
and
test
add
mov
pop
dec
enter
cmp
sbbb
cmp
in
test
mov
js
sbb
push
out
lea
pop
arpl
loopne
arpl
fmulp
imul
out
lcall
stos
or
pop
inc
pop
bound
xor
ret
mov
add
outsl
ret
mov
jge
sbb
xor
lock
or
popa
add
ljmp
aaa
push
pop
pop
dec
or
mov
outsb
in
lds
sub
sbb
movsb
gs
jle
ss
mov
hlt
int3
imul
psrlw
jle
jl
mov
mov
hlt
jge
lret
call
cli
js
orb
jge
popa
add
and
lahf
leave
ljmp
cmpsb
dec
pop
test
pop
xchg
adc
icebp
add
std
loope
push
sbb
xor
inc
imul
push
inc
iret
mov
push
cmp
test
bound
pop
stos
xor
sahf
push
push
sbb
push
mov
jge
mov
add
xor
sub
mov
btrl
xor
add
dec
pop
add
fadd
ljmp
lds
push
test
shrb
and
rcll
out
sbb
xchg
jl
inc
xchg
ss
out
mul
jo
lds
lock
sahf
push
pop
repnz
push
cwtl
popa
std
test
fsts
fcmovnu
or
in
or
inc
mov
dec
jecxz
outsb
cmpsb
adc
fucomi
pop
ss
enter
stos
lods
ja
and
arpl
jecxz
mov
daa
stos
int
cmp
out
and
out
testb
in
jns
int
pop
aas
mov
inc
sbbl
fucomi
pop
lods
push
imul
fdivrl
int3
jne
mov
mov
and
rolb
notl
mov
cmp
pop
or
jne
pop
pop
cmpsl
icebp
sbb
repnz
jecxz
ret
sbb
nop
aaa
test
addr16
mov
sub
xchg
shl
adc
xchg
or
std
mov
dec
xchg
stos
call
xchg
pop
mov
repnz
sub
cwtl
jb
push
or
rclb
mov
jecxz
add
mov
pop
pusha
fiadds
and
lret
rcr
dec
iret
adc
jp
filds
inc
mov
test
cmpsb
adc
je
setg
loopne
add
cwtl
push
mov
adc
push
ljmp
pop
ljmp
sahf
stc
les
into
sbb
mov
pusha
in
lods
cmpsb
sub
adc
addr16
jg
xchg
adc
mov
mov
add
and
pop
add
pop
jne
or
jge
mov
scas
testb
icebp
push
mov
repz
push
in
mov
rorb
inc
pushf
lcall
data16
stc
ret
push
dec
ret
movsb
insb
shll
dec
push
xlat
dec
pushf
cmp
cs
sbbb
mov
je
push
xchg
ret
mov
ret
shlb
dec
fsub
xchg
pop
cwtl
and
aaa
nop
in
arpl
andl
sti
sahf
or
pop
pop
hlt
in
pop
xor
cmp
cmovnp
jge
das
sub
movsb
cld
ficomps
jae
pop
push
jno
test
push
mov
mov
insl
addr16
imull
es
cmp
inc
sbbl
jne
cld
daa
or
stos
sub
xchg
jg
stos
inc
pop
iret
ror
add
iret
mov
fisubrl
pushf
push
repz
xor
sbb
fisubl
pusha
lahf
lds
and
fs
push
mov
dec
push
inc
ds
insb
int
adc
pop
adc
cli
jg
stc
lcall
nop
xor
fcom
test
dec
add
xor
icebp
cltd
sbb
dec
xchg
lret
out
lahf
mov
xchg
push
sub
es
add
mov
xor
clc
fcompl
imul
es
push
fchs
xchg
inc
daa
mov
xchg
adc
dec
clc
icebp
cmpsl
lock
sub
and
inc
lods
and
xor
add
jno
adc
cli
mov
lds
push
pop
rep
xor
sarl
mov
out
sub
mov
gs
ds
mov
icebp
jge
or
ja
sbb
mov
fs
aaa
jae
mov
leave
mov
push
loope
shll
cmp
ljmp
lahf
mov
rcr
cmp
adc
xor
push
outsb
addr16
fmull
and
idivl
dec
loope
shrb
pop
call
sub
sub
pop
sub
xchg
stc
xor
movsb
in
push
pop
les
lock
adc
stos
jne
add
sub
cltd
andl
cmp
add
inc
hlt
cmp
inc
mov
xchg
add
lock
rol
adc
out
loop
fdivr
imul
jg
lret
repnz
xor
dec
pop
push
mov
fistps
aas
adc
or
jbe
aam
aad
jg
rolb
or
push
cltd
addb
scas
les
jecxz
out
jmp
loopne
push
lret
push
mov
fucom
mulb
push
ljmp
or
enter
ss
ljmp
fisttpll
fs
push
jae
xor
arpl
and
inc
fdivrp
inc
arpl
shlb
shll
fsubp
lds
sub
cmp
mov
lds
mov
inc
mov
pop
adc
jb
lret
and
repz
jae
or
jmp
ss
jae
add
das
xlat
jbe
test
xchg
es
sub
test
dec
scas
mov
sub
in
js
lcall
scas
jmp
sbb
imul
in
inc
pop
push
inc
stos
dec
mov
inc
jmp
flds
inc
int3
inc
scas
dec
popf
punpckhwd
push
sarb
cmp
cld
xor
add
push
or
repnz
sbb
xlat
inc
and
ret
loopne
imul
fcoms
lahf
out
add
or
sub
adc
fwait
fs
jp
push
push
ds
sbb
outsb
or
test
mov
fs
mov
pop
cmpsb
jbe
sahf
add
bound
mov
mov
shrb
loop
inc
jae
test
cmpsl
repnz
adc
stc
dec
cmpsl
pop
mov
jmp
xor
inc
ret
insl
int
push
jbe
add
insb
xlat
lock
xor
cwtl
xchg
mov
dec
xchg
inc
push
out
cmpsl
pop
push
mov
insl
cmpsb
sarl
inc
mov
mov
js
stc
das
test
cwtl
imul
cli
sarb
in
outsb
and
dec
js
pop
rorb
cmpsl
xor
cwtl
test
xchg
insb
add
mov
pop
pop
mov
cmp
test
push
push
cmc
mov
aas
jbe
ret
nop
mov
pop
ja
xlat
stc
sub
cld
add
in
addr16
aas
jns
or
adc
pop
jp
mov
add
and
flds
repz
pop
push
test
pop
jmp
dec
stos
test
out
pusha
into
dec
and
fcomi
cmpsl
cwtl
loopne
dec
imul
pop
loopne
jne
mov
push
sub
fdivrl
clc
xchg
jle
nop
or
mov
ds
mov
iret
cltd
jbe
into
dec
sbb
dec
cmp
sbb
loopne
fdivrl
push
imul
imul
pushl
out
cmp
jecxz
inc
pop
push
movsb
std
adc
pop
cli
aaa
aad
push
sahf
gs
sub
cwtl
test
jecxz
xchg
push
pop
rcll
shll
add
jnp
aam
fnsave
nop
mov
push
pop
sub
cmc
loop
jecxz
inc
jo
ret
pusha
mov
pop
scas
ret
mov
pushf
mov
outsl
lds
test
cmp
out
adc
fadds
push
pop
mov
add
mov
add
push
or
mov
mov
insl
ja
aas
int
mov
and
mov
add
jae
mov
iret
cmp
push
inc
mov
add
pop
cwtl
add
clc
or
jge
pop
mov
call
sbb
pop
mov
and
sub
negl
jmp
jbe
pop
sbb
sahf
jge
sti
mov
filds
inc
movb
movsb
lret
inc
in
lret
mov
jnp
cmp
addr16
mov
jne
add
fstp
sbb
bound
mov
outsb
adc
cmp
ljmp
enter
mov
push
jns
inc
in
pusha
push
scas
add
sub
xor
or
and
xor
push
cmp
mov
pop
push
mov
mov
or
js
jae
mov
dec
sub
daa
mov
testb
jl
mov
sbb
test
inc
cmc
inc
test
int3
arpl
dec
mov
xor
and
pusha
lret
mov
jp
mov
ss
cmp
jne
sub
xchg
in
mov
es
adc
ret
or
sti
fwait
ret
mov
fwait
inc
xchg
and
cmp
mov
mov
mov
lret
jmp
gs
xor
xor
cmp
out
push
mov
mov
ljmp
testb
push
xor
mov
sub
repnz
add
cmp
test
push
add
or
in
xchg
out
imul
mov
mov
jp
dec
or
stos
test
pop
lea
les
sbb
divb
inc
jmp
loopne
ret
out
dec
xlat
mov
daa
inc
xchg
daa
lahf
in
inc
mov
jae
int3
cmp
sahf
pop
out
xchg
mov
sub
xchg
lret
mov
cmpsb
das
jp
repz
insl
sbb
shl
ret
xor
sbb
sbb
loopne
lds
adc
fsts
pop
lods
mov
adc
call
jge
out
push
ds
or
loop
push
fs
mov
aam
xchg
rcll
mov
push
dec
push
pop
pushf
divb
push
popa
mov
pop
dec
mov
mov
rcll
xchg
icebp
icebp
adc
mov
testb
jno
shrb
or
push
rcl
inc
mov
push
fstps
jae
adc
das
fisubrs
push
std
push
outsl
and
insb
push
pop
push
sub
mov
push
xchg
xor
jecxz
in
pop
bound
insb
mov
ljmp
push
mov
inc
sbb
sbb
into
nop
jns
mov
adcl
std
shll
mov
pop
inc
add
test
pop
mov
push
xchg
jne
pop
aas
sarl
outsl
sub
cmp
or
xor
loope
push
sub
and
inc
imul
ljmp
mov
test
out
paddw
lcall
les
icebp
jmp
inc
leave
mov
iret
adc
loope
mov
mov
pop
xchg
add
xchg
xor
jmp
jmp
notb
sbb
and
or
les
daa
or
dec
push
sub
mov
hlt
jno
outsb
or
add
loope
nop
xor
test
sarl
stos
lea
mov
mov
shl
mov
fnsetpm(287
call
shlb
push
lret
mov
dec
jae
stos
std
std
mov
daa
sbb
cmp
test
ret
cmc
mov
cmpsl
ffreep
push
xchg
fwait
out
add
add
fcoms
test
adc
lcall
or
push
jmp
pushf
xor
jae
into
xlat
mov
adcb
push
push
mul
xor
shrb
xchg
pop
insl
push
sbb
pop
mov
into
or
cmp
and
sub
sbb
mov
dec
xor
test
sub
inc
jns
cli
sbb
sub
jecxz
and
stc
hlt
push
jp
sahf
jno
cmpsb
xor
into
outsl
in
cmpb
jecxz
enter
insl
test
adc
adc
mov
mov
fs
mov
fs
fwait
icebp
xorb
in
dec
fimuls
loopne
por
mov
rcll
pushf
js
xlat
mov
xor
sbbl
push
stos
xchg
divb
pop
xchg
adc
popl
ret
loop
and
jg
mov
rcrl
stc
adc
sarb
cs
xchg
mov
lcall
popf
pop
xlat
rcrb
fsubrl
xlat
add
iret
add
push
bound
repz
hlt
repnz
mov
enter
repnz
std
outsb
and
push
and
pop
sub
pop
add
cmp
push
mov
cmpsb
add
jae
cmp
loope
sub
xor
or
cmpsl
ret
adc
cmc
mov
repz
std
xchg
add
lea
lods
jno
mov
xchg
pop
adc
call
sub
mov
mov
and
imul
push
mov
loope
or
dec
int3
bndstx
push
mov
add
lcall
int3
out
cmp
mov
std
out
testl
aaa
enter
hlt
stc
jmp
js
dec
stos
clc
sbb
inc
mov
leave
das
xchg
lea
int3
cs
add
inc
mov
push
pop
xlat
mov
jnp
mov
lcall
pop
jecxz
fldl
push
xorl
or
mov
mov
push
ss
repz
sahf
dec
push
ss
sarl
jnp
les
data16
xlat
mov
xor
andl
or
enter
sbb
movsb
loopne
fwait
pop
jmp
add
dec
cli
dec
bound
shrb
fstl
into
xchg
mov
ret
xchg
adc
clc
clc
xor
je
push
mov
cmp
sti
mov
inc
fincstp
jle
adc
sub
adc
mov
sub
dec
mov
cli
adc
add
jno
sub
and
push
mov
orl
adc
inc
pop
adc
sub
xchg
pop
iret
xchg
cmpsl
cmp
fwait
dec
add
mov
adc
pop
mov
pop
dec
out
push
xchg
adc
mov
sub
mov
fstp
fimull
mov
pop
or
push
jp
hlt
jnp
inc
aas
xchg
cld
sbb
mov
insl
adc
xor
xchg
and
xor
xchg
stc
orb
popa
cld
ljmp
test
xor
mov
dec
sbb
imul
in
fidivl
cmp
mov
fdivrs
stos
pop
hlt
ds
rclb
stc
out
or
fisubs
push
xchg
imul
je
pop
mov
inc
icebp
sub
mov
add
jo
jns
jae
sbb
jg
push
mov
ss
data16
push
dec
push
pop
dec
dec
int
mov
cmpb
jae
jmp
mov
fwait
lret
lds
sub
mov
jg
int3
test
pop
inc
cwtl
cld
jp
orl
jae
xor
rclb
outsb
shl
push
gs
dec
jmp
inc
mov
mov
mov
dec
ret
sub
inc
movsl
xchg
mov
xor
fcomi
ficomps
aad
push
adc
mov
add
sub
js
lret
ds
jb
sub
push
and
and
sbbb
lods
inc
sub
push
jle
sub
test
iret
imul
jecxz
cs
sbb
ss
pushf
fnsave
sti
ret
inc
mov
adc
adc
fs
xchg
xor
lds
and
mov
imul
add
cmp
jecxz
and
pop
scas
pushf
xchg
cmpl
je
push
jne
jl,pn
stos
mov
clc
push
ror
mov
daa
xchg
mov
xor
mov
pushf
inc
repnz
fmul
filds
into
dec
cli
insl
daa
jecxz
sbb
adc
jae,pn
pop
lret
les
arpl
or
outsb
cmc
push
mov
lea
xchg
fadds
pop
xor
cmp
inc
stos
je
pop
es
scas
jp
dec
ds
lds
out
inc
out
mov
inc
test
pop
cwtl
call
fstps
jnp
ret
push
and
push
fisubrl
add
jb
test
adc
xchg
cmpsb
xchg
mov
mov
ret
aad
xchg
sti
fsubrl
shl
ret
or
mov
js
adc
fucomp
lods
nop
imul
dec
out
fsub
mov
pop
fimull
fxch
jae
adc
mov
dec
hlt
mov
xchg
in
gs
stos
sub
stos
sub
ret
out
and
fldenv
and
sub
sarb
out
dec
jmp
pop
jmp
xor
sbb
sub
mov
icebp
es
and
cmp
push
cld
arpl
inc
jo
sbb
sbb
pop
mov
xchg
les
mov
outsl
jo
pop
push
xchg
std
aam
lcall
lods
movsb
inc
cwtl
into
ss
pop
adc
dec
dec
fxam
out
sahf
shrl
pop
and
mov
mov
inc
mov
and
mov
test
stos
add
push
sbb
scas
fst
dec
push
getsec
andl
int
out
dec
jno
rcrb
push
mov
cmpsl
xlat
push
mov
jecxz
and
clc
lds
push
mov
arpl
and
cmpsl
mov
jbe
inc
jg
dec
rcrb
fcoml
popa
xchg
add
ret
fsubl
mov
imul
hlt
je
into
cmp
add
divb
ljmp
pop
imul
test
jbe
out
scas
imul
sub
sub
stc
imul
je
into
faddp
scas
repz
and
scas
adc
push
enter
ljmp
lcall
addr16
mov
mov
movntq
out
incb
insb
call
or
lahf
jno
aad
pop
sarb
push
xchg
rorl
and
cmp
jecxz
inc
fmull
pop
cmp
loope
clc
repnz
adc
sti
xchg
adc
popf
fiadds
lock
mov
jne
sbb
insb
ficompl
and
jmp
xchg
insb
lds
rorb
gs
jmp
and
cwtl
imul
mov
loopne
mov
sub
stos
aam
inc
mov
sbb
dec
shlb
or
ja
pop
sbb
xchg
cmc
popf
dec
push
or
push
xlat
es
push
dec
popf
sbb
mov
addr16
popf
mov
fimuls
jo
fbstp
ds
pop
clc
mov
xor
push
shrb
jp
sbb
push
outsb
sub
ret
and
sbb
fwait
mov
divl
xor
push
xchg
sbb
outsb
dec
xor
in
sbb
iret
outsl
sahf
or
stos
mov
fwait
jg
jnp
pop
mov
mov
pop
shlb
sub
mov
aad
pop
pavgw
inc
insl
pop
push
clc
inc
int3
clc
xchg
jle
shl
add
adc
movsb
or
dec
stos
cwtl
leave
sbb
insb
xchg
or
inc
outsl
cltd
inc
incb
test
loop
inc
push
fadds
popf
lret
fisubl
fmulp
adc
jp,pt
push
xor
daa
iret
jecxz
repz
ret
int3
lods
adc
xor
xor
mov
iret
cmpsl
imul
scas
jecxz
cmp
and
mov
sbb
stc
xor
mov
into
mov
xor
or
outsl
jl
xorl
jae
mov
cmp
mov
jae
repz
scas
inc
inc
scas
aad
leave
ret
jae
movsl
lret
push
sbb
not
test
pop
das
mov
pop
call
lret
cmpsl
inc
push
pop
rcll
jge
loop
jg
xor
mov
aad
outsl
push
cltd
scas
dec
out
inc
sbb
addps
fwait
xlat
xor
lea
mov
ret
ret
out
clc
repnz
pop
daa
subb
ljmp
jne
add
inc
adc
push
sub
inc
mov
mov
lret
repz
fnstenv
fst
and
test
xchg
xor
test
mov
sbb
lcall
pusha
out
loopne
ret
pop
enter
or
lret
or
imul
icebp
and
inc
sub
xor
add
xchg
out
mov
fdivrl
pushf
xchg
xchg
push
mov
xchg
push
test
out
cmp
rcrb
pop
adc
or
out
cmpb
sub
adc
xchg
cmpl
repz
loop
lcall
jmp
cmp
mov
push
jmp
or
cli
or
aad
xchg
xor
xor
outsb
mov
popf
mov
jge
inc
mov
xchg
cmp
xor
popf
mov
dec
ss
mov
xchg
push
ja
add
dec
mov
cmp
jae
push
push
add
and
pop
jo
mov
inc
shr
mov
in
push
std
xchg
cmc
pusha
sub
add
add
aas
jp
test
stc
jae
das
pop
shll
outsb
xchg
sbb
mov
pushf
add
or
xchg
aam
xor
pop
sbb
xchg
fwait
cmp
lret
outsl
or
sub
ret
loope
dec
cmc
inc
mov
test
das
rcl
mov
clc
sti
lea
and
scas
dec
jne
xor
or
inc
gs
jno,pt
in
mov
fcmovnbe
fwait
mov
xor
in
sbbb
fiadds
fcoml
cld
sbb
mov
sub
cmpsb
int
sub
push
js
lahf
jno
notl
dec
cmp
fwait
ret
pop
bound
loope
loope
push
les
cmp
scas
pop
std
outsl
mov
outsb
rorl
ficomps
sub
in
fldcw
in
mov
or
inc
outsl
stos
or
repz
pop
fidivrs
xchg
mov
jb
adc
test
in
int
mov
dec
hlt
push
test
inc
or
cmp
pop
inc
push
sbb
add
jnp
fs
inc
adc
ret
or
pavgb
lods
add
or
testl
imul
pop
mov
cld
insl
or
cmpl
cld
jo
push
mov
inc
lock
inc
cld
in
mov
add
std
ret
loopne
adc
xchg
mov
adcb
leave
inc
jo
enter
xor
adc
or
js
in
divb
movsb
pop
fs
xlat
or
xor
sub
push
fs
push
lcall
and
pop
adc
movsb
not
test
test
fstps
ret
dec
popf
pop
xchg
sbb
jno
cmp
or
xor
lahf
gs
mov
loop
push
dec
push
push
hlt
pop
or
fwait
in
or
inc
xchg
or
and
pushf
xchg
pop
testb
jbe
mov
mov
and
popl
mov
or
mov
mov
lea
lods
mov
dec
sub
xor
jl
int3
jo
repz
mov
and
loope
movsl
xchg
aad
mov
mov
adc
or
or
cmc
pop
nop
shl
cs
or
cmp
loope
movsb
mov
and
aad
mov
pop
call
or
jne
fbstp
ret
sti
out
test
lret
sti
jb
sub
sub
mov
or
subl
adc
rcrl
xchg
push
inc
jo
fs
into
pop
cmp
call
fmull
in
into
loopne
and
sbb
jbe
pop
xchg
mov
sbb
mov
hlt
or
mov
jne
mov
test
fstps
aad
ret
fidivrs
xorb
js
mov
adc
das
pop
jg
sub
aaa
aam
push
roll
cwtl
adc
cld
aaa
lret
lcall
adc
int3
mov
cmp
mov
jo
iret
jnp
cmp
sbb
cmpl
mov
mov
arpl
dec
cmpsb
jmp
inc
cmpsb
inc
arpl
loopne
movsl
jo
pop
inc
inc
rcrl
movsl
inc
outsl
scas
jnp
lcall
inc
std
cmp
dec
cmp
out
and
fnstsw
gs
sbb
mov
lock
stos
adc
rol
call
pop
and
in
test
pop
aad
or
outsb
out
inc
xchg
lds
mov
sahf
or
das
adc
mov
xchg
dec
mov
sub
cmpsb
lret
xor
add
push
ljmp
jns
rorb
push
mov
push
and
pop
fcoml
aas
push
lods
or
or
test
not
push
jmp
jo
push
in
int3
mov
xchg
jne
cmpsl
mov
lea
mov
or
sahf
sbb
inc
sub
pusha
mov
insl
push
ret
xor
adc
iret
divl
pop
nop
xor
mov
jae
and
inc
xor
inc
adc
push
xchg
push
cmp
daa
aam
out
or
and
fstpt
loope
mov
push
es
add
icebp
mov
lock
es
xlat
leave
mov
dec
adcb
sbb
inc
add
sub
test
pop
pop
pop
sbb
jle,pt
movsl
cmpsb
loop
or
inc
cs
in
dec
xor
xlat
shll
mov
and
lahf
cmp
inc
test
cwtl
or
xchg
in
mov
adc
shrl
sahf
mov
out
mov
lret
subl
js
pop
sub
pop
movsb
mov
jmp
mov
mov
mov
into
dec
test
arpl
dec
adc
pop
aad
cmpb
mov
fcmovb
outsb
xchg
sub
inc
mov
pop
stc
sahf
or
cmp
popf
push
subl
sar
mov
stos
mov
hlt
mov
pop
jb
cld
lcall
aaa
push
inc
adc
jns
data16
mov
pop
dec
sbb
in
mov
mov
xchg
add
dec
jno
push
mov
push
mov
pop
sub
cmp
mov
jle
cmp
test
and
adc
das
and
adc
testb
push
sub
push
xor
decb
jle
fists
jg
in
add
xchg
xor
hlt
mov
aad
sub
and
jmp
jg
sub
xchg
outsb
and
shrl
ljmp
pop
add
mov
cmp
cltd
stos
sbb
in
fwait
mov
lret
add
dec
insl
mov
lea
jmp
shlb
mov
das
rolw
palignr
cmpsb
test
ficomps
or
adcl
dec
dec
inc
and
and
subl
cmc
xor
adc
inc
test
test
mov
lods
push
negl
push
lea
fldcw
add
loop
jl
jnp
push
pop
popf
or
sub
push
fsubl
mov
mov
pop
mov
in
jecxz
cwtl
cltd
cmp
imul
pushw
mov
sbb
adc
adc
fs
sbb
incl
les
pop
ror
stos
and
cmpsb
movsb
or
lahf
sbb
jno
call
dec
lods
xchg
xchg
insl
dec
incl
out
mov
fsts
loop
sub
inc
pop
mov
mov
aad
cld
loop
mov
test
jge
cmp
ss
lods
lcall
jg
and
jmp
jle
popa
scas
aaa
jae
pop
and
cmp
ss
cmpsb
jo
sub
faddl
pop
ss
xchg
aad
xchg
imul
clc
xor
xchg
subb
add
jp
stos
movsl
pop
subl
ja
dec
insl
mov
lahf
jbe
add
fdivr
sub
mov
mov
mov
repnz
mov
push
nop
jp
dec
test
inc
jl
xchg
push
loopne
mov
sbb
mov
mov
lret
bound
icebp
cmp
jb
in
jp
mov
aad
aas
add
shll
or
or
aaa
cltd
ds
mov
idiv
lcall
push
push
scas
cmpsl
dec
inc
pop
outsl
inc
adc
cmp
lds
aam
jb
cltd
pop
bound
les
gs
clc
std
mov
xor
cmp
adc
adc
and
std
mov
or
dec
push
push
enter
stc
or
xor
int
es
addr16
or
xchg
popf
lcall
xor
loope
cwtl
xor
xor
pop
dec
or
into
dec
hlt
sbb
fildll
std
repnz
xchg
cmp
in
sbb
js
orb
sub
jg
cmpb
outsb
push
insb
orb
add
jo
xchg
decb
inc
xchg
pusha
into
push
jbe
cmp
sub
inc
xor
mov
lret
sti
popa
pop
dec
or
mov
xchg
insl
push
mov
sub
ret
sub
jge
movsl
inc
mov
out
jnp
cmp
ss
enter
sbb
mov
scas
xor
add
stos
push
sti
movsb
out
repnz
push
and
cwtl
xlat
dec
push
ja
outsb
push
divl
lods
adc
jbe
and
push
shll
pop
scas
xchg
mov
pushf
shl
out
jecxz
or
push
shr
and
xor
pop
inc
pop
roll
sbb
repz
jl
or
pop
das
mov
stos
enter
cmp
sub
sahf
stos
cmpb
imul
sbb
pop
sub
iret
sub
les
scas
aam
mov
cli
mov
addr16
insl
addr16
cmp
pop
out
xchg
cld
dec
xor
jns
repz
out
cmp
sarl
outsb
cs
fcompl
popa
jg
loope
addl
inc
adc
adc
les
mov
rcll
stc
ret
sbb
inc
jmp
mov
mov
and
bound
sti
stc
xchg
xchg
ftst
jnp
jl
lret
mov
xor
mov
enter
jno
mov
pop
xchg
jmp
dec
or
lods
sbb
push
shlb
popa
pushf
iret
fstpt
insl
and
cmp
aas
imul
adc
incl
or
mov
push
test
dec
inc
xchg
jae
test
pop
sub
push
jne
and
push
mov
movd
jne
enter
jnp
sbb
addl
sub
xor
adcl
jmp
add
mov
ljmp
sbb
int
inc
icebp
jbe
arpl
push
xchg
orl
or
pop
iret
pop
iret
xchg
cwtl
out
incl
mov
xchg
and
lds
movsl
sbb
jge
and
cwtl
jecxz
mov
int3
and
cmpl
dec
xchg
and
in
stos
imull
data16
sbb
inc
jo
adc
nop
push
inc
pop
test
push
jmp
sub
xchg
fiaddl
jne
or
jg
incb
insl
cmpsb
cli
dec
cmp
rcrb
cmp
cmp
popf
out
cwtl
cmp
push
xchg
jmp
fsubrp
sub
xorb
in
mov
mov
fstp
and
push
or
mov
push
mov
orb
mov
cmp
mov
push
cmc
mov
orb
addb
inc
push
out
jae
imulb
and
and
ds
pop
leave
add
or
aas
gs
pop
arpl
fwait
dec
daa
aaa
pop
mov
and
repnz
dec
gs
fstpt
mov
and
and
jns
enter
xor
inc
mov
shrl
inc
add
cmpsb
xchg
adc
roll
inc
scas
and
add
adc
inc
fcoml
push
aas
ret
insl
cmp
movsb
pop
rolb
les
jae
outsl
cwtl
sub
cmp
mov
mov
jmp
pop
cwtl
or
xchg
xor
orl
xor
mov
test
in
push
fildll
iret
mov
daa
lret
adc
sub
pop
pop
xchg
movsl
out
sbb
outsl
jo
adc
pmullw
insb
push
jg
mov
adc
inc
bound
aad
imul
and
sahf
pop
and
ret
fisubrl
repnz
sub
push
adc
mov
ret
mov
scas
push
call
loope
fldt
push
mov
fucomp
lea
push
and
imul
sarb
pop
mov
cmc
jmp
sbb
push
fists
xor
cmp
mov
mov
repnz
xor
xchg
pop
in
shrl
mov
xor
mov
testb
dec
sarb
mov
or
js
adc
push
sbb
mov
iret
pop
push
jg
rclb
je
stos
fcomip
fsubrs
add
sbb
dec
enter
sub
add
add
xlat
push
stos
sbb
push
ljmp
xchg
jecxz
loopne
mov
call
adc
sahf
popa
loope
aam
and
jne
loopne
das
mov
jge
lods
nop
and
xchg
cmp
xchg
lds
addr16
dec
ret
mov
add
pop
pop
insb
dec
mov
test
out
add
adc
rorb
cld
jb
xchg
mov
adc
lock
dec
and
push
sbb
inc
in
and
jb
ror
sub
push
xchg
insl
adc
pop
iret
push
dec
gs
mov
pop
cmp
out
push
or
push
mov
jno
jl
pop
ss
rorl
fadds
add
pop
xchg
mov
mov
movsl
adcl
sti
fdivs
sahf
mov
jecxz
pop
mov
call
push
or
add
lods
push
jne
cmpsb
iret
rcrb
out
add
les
jp
and
jbe
loopne
in
or
xchg
xchg
and
fimuls
adc
add
mov
ret
cmp
cld
and
stos
int3
iret
push
inc
add
orb
xchg
pop
outsl
ja,pt
push
sti
fidivrs
push
push
out
sahf
push
jbe
sub
pop
dec
je
mov
jmp
add
adc
adc
call
roll
andb
and
or
adc
push
sbb
shrb
hlt
xlat
les
inc
sub
lods
in
and
sub
xchg
bound
lock
xor
add
pop
or
cmc
das
aaa
mov
and
test
sbb
das
pop
mov
dec
mov
xor
xchg
add
inc
pop
repz
bound
xchg
les
mov
sbb
xchg
subl
push
fmull
outsb
int3
pop
out
cmp
sbb
mov
call
dec
flds
sbbb
jg
dec
lods
cmpsb
mov
mov
ds
add
aaa
out
clc
cmpsl
cmp
mov
xlat
enter
pop
xlat
jnp
mov
or
cmpsl
daa
mov
and
push
inc
mov
fs
aad
mov
hlt
imul
add
push
std
gs
bnd
xor
cs
cltd
ret
mov
lret
mov
or
push
mov
ficoms
lret
mov
lret
inc
inc
dec
or
stc
mov
out
fdivs
push
lock
std
push
push
push
arpl
jnp
cmp
dec
aas
xchg
xchg
pusha
aaa
test
add
dec
insb
cmp
shrb
cmpsl
mov
or
add
call
xor
push
cmp
imul
inc
sub
out
inc
inc
mov
jne
movsl
jae
and
cltd
add
jbe
int3
mov
daa
dec
imul
or
hlt
mov
mov
inc
sbb
lds
jp
jmp
aad
jmp
mov
lret
inc
xor
xchg
sub
push
and
push
inc
int3
repnz
sub
inc
add
mov
jmp
out
mov
rcrl
push
cmp
fstps
or
pop
jl
cld
mov
mov
and
mov
xor
mov
ret
pop
jne
inc
jg
jp
xchg
notl
mov
add
inc
xchg
subb
cmpsl
loop
fsub
dec
negl
dec
stos
cmp
dec
or
out
push
sub
aas
xchg
mov
mov
data16
mov
outsl
pop
mov
cmp
cs
shll
xchg
mov
mov
mov
push
mov
xchg
pop
sub
xchg
push
mov
xchg
mov
xor
mov
xor
inc
or
push
mov
mov
push
push
cwtl
imul
lock
mov
xor
dec
ds
stos
push
dec
pslld
push
gs
aas
nop
pop
mov
jle
mov
lahf
push
adc
repz
lods
testb
jbe
loopne
mov
popa
cli
mov
stos
hlt
daa
push
sarb
or
sti
xor
xorl
xchg
mov
pop
out
jl
outsb
pop
push
pop
sbb
data16
push
jp
sbb
sbb
sbb
mov
mov
rorl
lods
addr16
dec
push
notb
inc
js
push
inc
jbe,pt
dec
insb
mov
inc
pop
faddl
nop
push
aaa
inc
dec
xor
pop
data16
outsl
int3
adcb
lods
fadd
fucom
mov
mov
ljmp
jne
xor
psubw
push
inc
push
fwait
jae
lahf
push
mov
mov
or
mov
or
push
inc
stc
inc
std
cmp
sub
mov
jns
inc
xchg
push
push
mov
scas
pushf
sbb
inc
out
dec
lods
das
mov
xchg
mov
sub
sub
adc
jle,pn
push
add
insb
push
rcrb
lock
out
outsb
push
adc
xlat
sub
jnp
in
fcmovu
push
mov
outsl
dec
sti
push
sbb
sub
or
cld
push
inc
fdivp
dec
mov
iret
dec
cwtl
dec
aas
imul
jmp
in
pop
in
les
incl
jo
test
mov
ljmp
les
jae
lahf
inc
mov
lea
mov
fbstp
jl
sbb
testb
ret
sbb
adc
lcall
icebp
xlat
inc
push
jg
jnp
sbb
xor
and
ja
adc
mov
je
daa
cmpsl
sbb
in
fistpl
cli
or
loope
sbbb
gs
aam
sub
test
lahf
jne
fistps
cs
xchg
jns
mov
int
aad
adc
das
imul
mov
mov
xchg
rcrl
jo
test
cs
mov
test
push
pop
mov
sarl
mov
mov
out
arpl
mov
add
add
xlat
and
add
mov
add
stc
sbb
fcmovnbe
jne
fldenv
mov
xchg
lods
daa
jmp
lahf
test
jge
sub
idivl
enter
insl
shll
popa
sbb
bound
push
iret
les
adc
push
xchg
xchg
sbb
aad
les
xor
and
mov
jo
mov
xor
mov
pop
mov
test
arpl
sar
fdivl
pushaw
and
icebp
sub
movaps
clc
xchg
repz
and
pop
aaa
cltd
gs
push
ret
test
pop
pop
pusha
push
es
rclb
imul
sub
and
inc
out
clc
daa
mov
adc
adcb
inc
inc
lcall
ficoms
push
in
push
fwait
out
pop
pop
ret
inc
jae
or
sbb
sub
inc
mov
cmpsl
fldt
dec
mov
aaa
rcrl
or
adc
hlt
jge
stos
call
dec
lods
insl
mov
cmpsb
fstl
sub
les
ret
push
xchg
xor
cmp
xorl
sbb
push
mov
push
imul
or
dec
movsb
call
sbb
nop
cltd
dec
sub
add
inc
out
jle
xor
mov
jmp
int
scas
dec
bound
dec
adc
xchg
test
ret
mov
pop
xchg
andl
dec
movsb
and
push
adc
pop
pop
nop
add
dec
or
mov
fisubrl
lahf
pop
jne
pop
push
dec
jp
inc
xor
xchg
inc
jne
cmp
jnp
xchg
or
inc
shrb
pushf
data16
clc
andl
popa
add
mov
icebp
jns
lea
inc
inc
sub
cli
inc
ljmp
xchg
scas
mov
jg
cmp
mov
fs
mov
inc
xchg
idivl
xlat
inc
xchg
add
lds
dec
addr16
push
in
xchg
movsl
or
js
mov
add
lret
mov
mov
or
into
lret
jae
ds
cmc
add
jmp
mov
mov
cmc
cs
push
pop
std
cmp
sti
mov
mov
push
aam
jno
clc
sub
dec
sahf
mov
jge
mov
sub
xchg
fisttps
inc
clc
int
adcl
imull
fiaddl
sub
sbb
mov
mov
mov
dec
jno
enter
cmp
lahf
lret
sub
dec
hlt
inc
cmp
cmp
arpl
vmovapd
fsts
dec
add
enter
shlb
lret
sub
cmc
adc
or
imul
cmc
es
add
jge
or
mov
out
lock
jg
push
sub
inc
arpl
testl
push
cmc
fisubl
sbb
sub
shrl
dec
mov
rcrl
xchg
push
int3
testb
or
ffree
cs
and
outsl
inc
push
into
jecxz
insb
rcr
mov
call
mov
fdivrl
push
orb
shll
mov
pop
xor
sysret
lds
xchg
ss
jl
pop
jns
adcl
cmp
movsb
and
fists
mov
mov
jl
inc
mov
daa
outsb
xchg
shrb
xchg
imul
in
int
xchg
and
fidivrs
mov
push
dec
cld
jbe
int3
shll
ret
xchg
and
inc
cltd
jl
sbb
repz
and
sbb
insb
es
mov
xor
insl
sahf
aam
jl
aad
call
addr16
push
pusha
mov
mov
in
mov
sti
inc
mov
mov
dec
add
insl
or
out
cmpsl
leave
out
cmp
xor
sub
outsb
cmpsl
add
push
inc
faddl
inc
dec
add
xchg
jbe
dec
ret
mov
ret
sub
xchg
xchg
nop
push
lock
mov
sbb
or
test
imul
jbe
mov
pusha
mov
in
sub
out
push
addl
dec
repnz
aaa
movsl
sbbb
adc
lock
frstor
adc
adc
jle
repnz
mov
or
mov
push
add
icebp
imul
stos
add
mov
lret
lea
in
cmpsb
fsubs
and
loopne
and
repz
add
fs
inc
sbb
mov
addr16
fcomps
sbb
popf
stc
mov
adc
push
dec
mov
jno
hlt
and
pop
sbb
cmp
test
mov
pop
jmp
sub
scas
sbb
xor
es
es
cltd
mov
sarb
sbb
xor
pop
das
jnp
cwtl
ret
jae
sub
shl
cmp
das
xchg
mov
scas
cwtl
lock
dec
add
cmp
popa
out
and
stc
jno
adc
or
std
ficompl
out
or
jns
adc
xchg
sbb
rorl
pop
sub
jns
or
xchg
push
mov
ja
rcll
jge
jnp
repz
xchg
pop
sbbb
comiss
sub
insb
mov
test
bound
and
insl
and
xor
and
pop
push
lret
jae
negl
mov
adc
add
cmp
fcoml
out
push
mov
xchg
mov
cmpsb
mov
mov
sbbb
jg
jnp
sub
inc
movsl
ja
scas
test
lahf
scas
ret
pushf
lahf
stos
mov
fdivl
mov
push
pop
ror
inc
rolb
fsub
push
xchg
je
adc
je
inc
sarb
cmp
js
int
int
cmpb
cmp
inc
daa
in
add
mov
call
enter
mov
fwait
ret
clc
xchg
out
jmp
subb
xchg
fstpl
xlat
push
sarl
dec
push
mov
mov
out
fld
jecxz
loope
cmp
sub
cmp
icebp
adc
loopne
int3
pop
push
addr16
sub
mov
mov
je
or
sbb
mov
mov
xor
lods
cltd
push
lods
lods
mov
leave
lret
xchg
jo
pop
lods
mov
xor
jl
mov
aad
addl
adc
out
cmp
enter
sbb
mov
sbb
test
imul
hlt
adc
int
mov
movsl
inc
cmp
mov
clc
testl
add
into
inc
xlat
fisubrs
fstpl
adc
xlat
push
add
xchg
or
add
pushl
stos
jne
arpl
in
adc
and
pop
adc
xor
adc
es
ss
lock
shlb
sbb
loopne
loope
jmp
dec
inc
inc
bound
js
je
push
adc
fidivl
fidivs
shlb
rclb
cmp
xchg
out
mov
out
roll
outsb
pop
jnp
push
add
xor
mov
jle
sub
lea
repz
shlb
sbbl
leave
mov
cmp
xor
cld
lods
inc
inc
sbb
dec
int3
sahf
mov
fucomi
enter
xor
mov
ret
rorl
shrb
cmpsl
int
enter
inc
sbb
mov
pop
scas
pop
insl
sbb
in
sbb
xchg
test
push
xor
test
mov
jno
xor
cmc
mov
dec
mov
xor
neg
repz
arpl
and
loopne,pt
add
pop
les
mov
setne
xchg
lds
incl
fstpl
fsts
inc
ja
or
adc
icebp
daa
jbe
lock
lahf
inc
mov
ret
pop
shr
repnz
sub
mov
cmp
js
sbb
xor
jae
sub
aaa
or
bound
movsl
lds
daa
repz
push
outsb
adc
aad
xchg
jl
push
xor
mov
mov
mov
or
inc
xor
pop
adc
adc
cmpsl
repnz
add
pop
cmp
fcomip
aas
and
je
dec
shlb
cmp
cmp
cmp
ret
mull
push
mov
aaa
inc
pop
cld
inc
lock
adc
lods
les
aas
xor
pop
and
mov
test
in
xor
fsub
xchg
mov
jb
sbb
mov
and
xchg
push
imul
loopne
pushf
test
jno
pop
sub
xchg
pop
pushf
iret
mov
cmp
arpl
sti
lcall
lret
cltd
sub
jns
jp
push
or
adc
adc
adc
mov
xchg
gs
dec
insb
lds
fcompl
xlat
aas
jbe
popa
mov
hlt
cltd
inc
mov
mov
sbb
mov
mov
pop
out
dec
cmp
stc
and
or
ljmp
rcl
mov
mov
test
notb
pop
cmp
roll
mov
daa
movsl
cmp
cmp
sahf
dec
pusha
dec
int3
push
fisttps
cltd
inc
sbb
or
or
dec
add
pop
add
ret
dec
xor
or
jp
cmp
in
sub
jae
push
dec
inc
mov
sub
push
mov
std
pop
mov
push
ret
jmp
gs
leave
pop
xchg
ret
xchg
jge
mov
push
xor
sarl
ljmp
adc
stc
sarl
dec
and
cmp
mov
push
mov
ret
push
repnz
ficoms
jmp
aas
lods
test
sarb
mov
push
adc
aad
mov
add
push
pop
pushf
inc
jae
mov
movsb
adc
pop
pop
arpl
pop
repnz
stc
pop
cs
xchg
repz
push
inc
pop
adc
in
data16
das
mov
pop
in
stc
and
xchg
push
out
adc
pusha
sbb
lcall
aas
add
mov
jg
addr16
pop
int3
adcb
or
mov
xor
out
sahf
jg
flds
dec
aad
cmpl
mov
mov
aas
mov
cld
jge
push
out
fs
insb
jno
adc
lcall
dec
movsl
ds
lods
fsubrs
js
enter
pop
lret
inc
mov
mov
cmp
out
cmc
push
outsb
cmc
in
add
enter
movsb
cmovo
push
repnz
pop
dec
scas
push
in
jno
mov
rcrb
dec
lcall
xchg
xchg
dec
mov
mov
js
lods
jae
push
sub
iret
and
xchg
clc
aas
pop
pop
mov
scas
daa
mov
fmulp
cmp
adc
gs
mov
mov
ret
xchg
dec
lea
cmp
push
mov
icebp
push
jge
setno
pop
fsubrs
mov
add
lahf
test
dec
push
jmp
ret
aas
ja
jno
and
mov
loopne
mov
int3
xchg
pop
adc
movd
push
mov
mov
in
inc
push
inc
jno
rolb
inc
icebp
in
mov
mov
mov
inc
mov
mov
aas
jp
cmc
cmp
mov
addr16
hlt
enter
scas
cvtdq2ps
mov
pop
push
popa
jecxz
mov
aas
push
shlb
jle
jb
pushf
and
daa
inc
cmp
inc
aad
mov
pop
pop
add
jmp
inc
js
iret
dec
ret
cli
push
jl
in
dec
push
cld
fdivl
mov
fnsave
out
mov
lock
and
adc
into
outsl
mov
mov
nop
adc
mov
inc
stos
sti
add
cmp
dec
stc
std
jl
out
sarl
mov
cmp
movsl
adc
ret
mov
jmp
out
xor
sub
sbb
aaa
xchg
adc
sub
xor
enter
nop
xor
dec
nop
jo
sarb
add
outsl
jne
fsubrs
call
pop
pop
mov
adc
xor
loopne
mov
aas
decb
inc
sub
jle
push
dec
add
fsubp
data16
xchg
pop
jp
mov
inc
popa
or
pop
pushl
cld
repz
popa
sub
movsb
js
inc
ds
inc
inc
fstpl
or
inc
jg
imul
outsl
in
cmp
out
shrb
iret
adc
push
sub
std
pop
out
push
ret
fistpll
pop
jo
hlt
movsb
mov
adc
lret
aaa
add
xlat
jl
cmp
int
inc
lahf
in
rcr
cwtl
push
movb
pusha
jmp
cmpsl
ja
in
pusha
cmp
sti
jge
add
or
adc
enter
adc
adc
cmp
xorl
js
xor
mov
repnz
aad
mov
ret
xchg
inc
fs
push
pop
sub
xchg
mov
dec
jns
mov
int
mov
pop
jns
outsl
mov
mov
arpl
jbe
pop
lret
repnz
pop
xor
add
stos
mov
mov
mov
scas
add
pop
pop
jae
insl
add
out
loopne
inc
dec
lods
and
pop
sub
cltd
xor
lahf
sub
lods
push
push
pop
jo
adc
fldcw
imul
shlb
into
rcrl
pop
leave
sbb
xor
push
push
fdivl
sbb
pop
fdivrl
stos
mov
add
repnz
hlt
sbbb
pop
shrl
in
fdiv
mov
push
or
nop
mov
pop
push
and
cli
and
xor
mov
push
inc
lcall
xchg
std
adc
test
negl
jb
leave
lret
fdiv
lret
push
fstl
pop
dec
mov
xchg
lret
call
adc
xchg
xchg
outsb
sbb
cmp
mov
imul
push
and
bound
push
sti
scas
inc
push
jno
cmp
pop
icebp
rolb
int
jmp
jg
mov
out
dec
xor
inc
in
inc
push
scas
mov
std
adc
int3
fadds
add
mov
mov
out
adcl
bswap
jb
lret
jge
mov
sub
jl
sbb
loopne
push
subl
adc
out
lds
ret
cmp
jl
jno
or
jmp
leave
iret
scas
mov
jns
add
das
xor
mov
ljmp
es
add
inc
push
insl
push
sahf
xchg
adc
jecxz
rclb
mov
or
je
push
cmp
lret
pop
or
outsb
jne
xlat
data16
int3
out
leave
add
in
lods
or
aaa
push
dec
je
lcall
sub
sub
pop
sub
in
shlb
xchg
fstpl
push
xor
testb
test
pop
arpl
loope
outsl
sub
and
cli
pop
ljmp
xor
or
xorb
outsl
sub
dec
jecxz
fcoml
fldenv
cmpsb
xlat
out
inc
out
sbb
pop
mov
cli
fdivrs
ja
lds
pushl
call
adc
xchg
inc
iret
int3
lock
cld
adc
stos
ror
inc
xorb
lret
push
inc
mov
cmc
mov
inc
stc
push
xorb
fimull
add
cmp
in
xchg
or
xchg
imul
xlat
pop
es
inc
pop
jmp
fs
das
int
inc
rorl
xchg
hlt
fidivl
pop
cld
and
subl
out
insl
sbb
sub
pop
lahf
shl
add
mov
jne
inc
leave
inc
subl
pop
mov
pop
ret
and
xor
in
addl
cmpsl
mov
dec
repz
int
sub
and
dec
cli
repnz
xchg
pop
dec
jo
mov
loope
lret
push
mov
mov
aaa
shll
jp
les
iret
sub
cmp
dec
pop
xchg
mov
inc
movsl
leave
addl
mov
cmp
outsl
notl
popa
mov
fnstsw
movsb
aam
sahf
push
adc
pop
push
cli
sbb
lds
push
mov
and
inc
xor
test
dec
inc
sti
jle
stc
fistl
adc
in
lock
sub
cmpsl
sub
gs
int
inc
sub
cmpsl
subl
dec
jg
cmc
mov
mov
inc
or
mov
mov
std
lret
lds
mov
adc
or
sbb
cmp
inc
hlt
sarl
addr16
scas
push
and
subl
mov
adc
dec
jae
call
iret
mov
adc
push
ljmp
insb
subb
mov
fstpt
cmp
roll
fmulp
fdivrl
push
cmp
ljmp
adc
scas
jne
sarb
mov
sub
fdivl
fcomip
or
add
mov
mov
int
sti
sbb
loope
rcr
notb
xor
orb
xchg
gs
cmp
les
jo
insb
pop
sahf
sub
out
int3
test
push
dec
or
shl
cmp
mov
mov
inc
fidivl
out
inc
add
mov
cld
int3
and
imul
cmpl
push
sbb
out
push
mov
push
mov
call
add
shlb
add
lret
xchg
push
mov
cmp
pop
xor
out
es
xor
lret
cmp
sub
cmpsb
incl
or
dec
fldt
les
mov
rorb
mov
xor
push
xchg
xor
ja
int3
inc
and
and
sti
sti
ljmp
aas
push
push
ljmp
shlb
jae
rcrl
testb
sbb
les
dec
pushl
and
pusha
sub
push
sahf
xchg
sbb
addr16
sub
js
cwtl
xchg
repz
fsts
scas
fwait
andps
loope
pop
fdivs
dec
xor
fucom
pop
repz
lret
out
push
aaa
jmp
xor
xchg
sub
push
imul
or
push
movsl
aam
jo
sbb
out
aad
mov
push
xchg
lret
loop
imul
mov
xchg
cltd
pop
mov
adc
in
mov
cmp
mull
orb
bound
pop
push
or
push
cmc
pop
mov
sbb
fxch
xor
stos
stos
enter
shrl
aam
fs
jp
mov
lret
xor
sbb
xchg
insl
call
test
ret
jl
sub
out
rcrl
xorl
mov
inc
push
cmp
inc
ret
fcmovnb
mov
ds
xchg
xor
mov
sbb
repnz
and
stc
jae
div
mov
push
lret
sbb
and
push
cmp
push
fs
lret
inc
mov
stc
ja
stos
outsl
add
push
test
push
xor
pop
mov
call
ret
sub
test
mov
pop
or
cmp
mov
rcl
paddsw
cli
add
shlb
leave
pop
lods
push
lods
fs
push
or
mov
and
daa
stos
pop
int3
xor
push
std
adcb
cli
xchg
icebp
xlat
call
mov
aam
pop
adc
pop
fcmovne
cmc
push
push
push
sub
repz
dec
xchg
and
andb
push
out
jbe
pop
insb
xchg
sub
and
xchg
add
cmp
mov
ljmp
adc
mov
fidivrs
pusha
fisubrl
or
jl
rol
mov
push
mov
cmpsl
mov
xor
leave
arpl
cmpl
ja
cs
out
push
mov
imul
icebp
outsb
push
in
shll
cmp
insb
xor
or
xchg
lods
dec
inc
loopne
sub
jmp
das
and
jp
orl
dec
xor
add
mov
add
sbb
movl
pushl
or
stc
out
out
idivl
push
or
shll
test
cmp
scas
cmp
jno
in
push
lods
xlat
xchg
mov
popf
movsl
clc
mov
jne
mov
mov
xchg
ret
adc
xchg
pop
push
sbb
pop
stc
cwtl
outsb
jbe
jmp
scas
add
fwait
and
inc
scas
shll
or
jmp
add
fmull
imul
mov
icebp
mov
sahf
imul
push
imul
es
mov
iret
pop
pop
jne
ljmp
mov
out
scas
iret
jmp
xchg
sub
enter
jo
xchg
jbe
and
clc
in
in
jp
enter
xchg
and
rorb
cmp
insl
cmc
dec
xchg
and
dec
cmc
jns
loop
test
imul
inc
loop
jle
rolb
repnz
sbb
dec
fisubrl
std
mov
int
jmp
sbb
pop
arpl
imul
rolb
or
stos
mov
loop
and
lret
mov
in
jns
ficomps
mov
add
ljmpw
roll
mov
push
mov
dec
in
es
inc
cmp
xor
dec
mov
xor
sbb
fstl
push
mov
ds
idivl
mov
adcb
loop
int
jp
xorb
dec
rclb
dec
push
je
andl
js
pusha
xor
pop
out
xchg
out
xchg
dec
aam
idivb
rcl
aaa
adc
hlt
pop
mov
repz
xchg
push
pop
mov
push
mov
push
mov
loopne
mov
inc
inc
out
xor
xchg
push
push
add
ret
mov
pop
fisubs
test
xlat
ja
xlat
out
mov
jmp
xor
push
xchg
pop
jp
push
outsl
test
xlat
sbb
xor
clc
push
sbb
and
push
mov
mov
test
rorl
testb
push
add
js
adcb
popa
addr16
pop
in
jecxz
call
int3
test
bound
mov
loopne
ret
xchg
je
lret
inc
loop
xor
mov
mov
lret
mov
rorl
xchg
inc
nop
xlat
xchg
pop
adc
sub
push
les
add
sbb
ficomps
sti
stc
inc
fistpl
sub
xor
das
bound
gs
sub
mov
or
div
loopne
dec
roll
jg
addr16
out
fbstp
dec
lds
mov
add
jno
lock
fisubl
jl
addr16
sub
or
dec
adc
xor
stos
sub
mov
pushf
out
data16
pop
popf
call
jge
subb
pop
lret
or
dec
movsl
jns
add
inc
in
call
lods
push
out
bound
xchg
dec
or
loope
ficompl
cmp
mov
adc
xor
dec
xchg
sbb
or
jmp
push
add
mov
inc
sbb
shl
jns
aad
and
sub
jne
jo
xor
lods
repnz
jmp
push
xchg
or
insl
pusha
push
or
push
and
mov
sub
and
inc
xor
daa
pop
stos
mov
je
cmp
add
mov
xor
add
ret
push
xchg
cmp
xchg
push
aaa
sub
into
and
xchg
lret
mov
pushf
dec
jecxz
inc
add
jb
shl
jle
jecxz
xchg
mov
mov
xchg
sbb
jecxz
inc
mov
outsl
dec
xchg
test
ja
inc
jle
jl
sbbb
xchg
jmp
aad
insl
mov
jae
sbb
add
push
mov
xchg
pushf
pop
cmpl
and
and
js
js
aam
fldcw
nop
pop
into
and
xor
dec
addr16
push
sahf
add
ret
mov
inc
cmpsl
xchg
push
bound
adc
cmp
dec
or
pop
inc
mov
pop
sar
cmc
inc
aad
ljmp
mov
mov
xor
movsb
mov
shrb
int
xor
jbe
mov
daa
fwait
jmp
icebp
sub
fidivrl
lea
lahf
movsl
cmc
aad
in
mov
adc
add
mov
fwait
clc
lock
dec
cmpsl
pushf
push
dec
scas
loop
sbb
pop
gs
aaa
jne
push
cmc
jbe
mov
addb
leave
push
fisttpl
fstpt
repnz
mov
mov
outsb
fptan
xchg
inc
pop
imull
dec
or
rorl
sub
dec
insb
mov
jno
push
js
outsl
mov
decb
inc
and
ljmp
add
lret
sarl
mov
shl
cmp
dec
fcompl
fwait
or
ss
outsl
mov
hlt
jmp
mov
push
pop
xchg
mov
adc
inc
clc
push
adc
sbb
sub
cli
cs
xchg
subl
aas
sbb
mov
mov
adc
adc
and
xchg
jl
inc
add
divb
pop
sbb
shll
movl
in
imul
xchg
jbe
lcall
nop
add
in
pop
jmp
cmp
push
imul
mov
dec
loope
inc
and
and
pop
addr16
pop
inc
out
jbe
lds
cmpl
sbb
stc
arpl
fistpll
mov
or
sarb
js
or
mov
jl
adc
lcall
xor
loopne
push
xor
push
lcall
pop
pop
fdivs
push
aam
rcrb
dec
popa
lahf
inc
lea
push
rorb
adc
cltd
test
pushf
jbe
cltd
pushf
dec
mov
xor
fnsave
push
dec
fwait
int
cli
mov
les
cmp
lcall
sub
add
add
and
lds
mov
push
dec
sbb
jns
xchg
inc
lcall
cld
dec
mov
dec
out
das
pop
push
xchg
xchg
adc
mov
outsl
into
cmp
lds
imul
scas
sub
xor
adc
out
dec
mov
scas
lods
push
jp
sti
and
jns
sbb
ret
dec
stos
sub
js
cwtl
pop
add
jmp
shl
push
inc
dec
cmpb
push
hlt
out
loopne,pt
sbb
aas
mov
mov
cli
pop
sub
push
sub
or
cltd
mov
test
ss
cltd
jl
xor
mov
imull
lret
rorl
aad
lock
stos
sub
rcrb
sub
jbe
in
inc
pop
aam
inc
outsl
or
es
sti
and
or
insl
or
xchg
or
lods
xchg
int3
inc
cltd
in
lds
xor
mov
subl
call
cmp
hlt
mov
arpl
adc
ss
jg
imull
jbe
lahf
and
outsb
fildl
adc
cmp
xchg
bound
fdivl
scas
inc
out
pop
std
cmp
inc
or
es
in
mov
sbb
and
jae
test
loope
jp
jae
mov
xchg
sti
popf
pop
push
addr16
sbb
xchg
dec
and
inc
cld
and
movsb
adc
addl
aas
lret
push
out
jg
pusha
out
scas
cli
repnz
popf
cmpl
cmp
push
mov
mov
mov
dec
int
lahf
jmp
scas
or
fnstcw
jge
cmpsl
jne
inc
and
dec
hlt
out
xor
dec
lcall
add
mov
pop
jg
ljmp
jmp
jb
sbb
jge
mov
mull
in
push
sarb
aam
dec
mov
int
aaa
push
in
mov
cmp
and
push
sbb
iret
pop
xor
push
lds
cmp
xchg
xchg
adc
jle
inc
xchg
fistps
popf
sbb
fildll
leave
incb
cli
lock
push
lods
xchg
aaa
jnp
jmp
push
dec
xchg
rsqrtps
mov
ret
sbb
xor
xor
inc
xor
xchg
in
xor
pop
mov
es
adc
mov
scas
std
sub
sub
or
test
xor
ds
bound
cmp
pop
cli
jmp
push
inc
jecxz
in
xor
cmpsb
test
pop
inc
mov
icebp
inc
mov
mov
enter
js
xchg
mov
lock
mov
inc
sbb
dec
sbb
stos
outsl
xchg
jle
outsl
cmpsl
sub
cmp
pop
inc
fwait
out
pop
arpl
fsubrs
mov
jno
or
or
hlt
jae
jno
cld
repz
mov
sbb
cmp
cmc
pop
or
mov
xor
sbb
fildl
sbb
mov
rorl
popf
mov
bound
xchg
loope
ret
shr
and
dec
xchg
xor
outsl
mov
mov
test
inc
movsl
ljmp
cmp
ss
stos
movsl
iret
clc
cmp
stos
les
sbb
std
xor
aaa
sbb
shrl
pop
mov
sub
push
bound
arpl
mov
or
inc
movsl
dec
test
jo
or
outsb
shlb
loop
adc
repnz
or
mov
mov
out
or
jmp
ja
mov
jg
xchg
cltd
sbb
subb
adc
loop
lds
cmpsb
pop
ret
xchg
fildll
pop
std
test
cmp
insb
fimull
pop
push
sti
aas
dec
add
xorb
mov
clc
cmpsl
or
add
int
divb
scas
loop
mov
or
data16
je
jge
push
push
fs
mov
xor
adc
add
xlat
mov
stos
or
aam
mov
mov
les
mov
sub
enter
adc
rcll
mov
out
lods
mov
test
insb
out
les
cltd
js
daa
push
and
sub
jmp
dec
pop
imul
jge
xchg
loopne
push
dec
hlt
test
pop
iret
pop
testl
iret
pop
mov
cmp
or
lods
imul
insb
inc
je
movsl
iret
imul
cwtl
sub
xor
mov
or
mov
push
daa
mov
push
repz
inc
cmpl
inc
stos
addr16
ja
cmp
jae
xabort
test
add
xor
cmpsl
sub
add
loop
data16
mov
pushf
das
inc
frstor
mov
enter
mov
add
lret
inc
mov
js
repnz
shll
iret
pushf
rclb
jecxz
pushf
fdivrl
repnz
dec
js
mov
jae,pn
xchg
mov
mov
jg
es
sbb
mov
lret
data16
mov
repnz
jns
pop
xchg
mov
cs
cmpsb
stos
mov
pushf
cmp
ret
jg
divl
fists
mov
in
movaps
filds
insb
addr16
mov
faddl
push
add
popa
lea
adc
int
mov
cmpsb
loopne
das
or
lcall
adc
sub
xchg
pushf
fwait
test
push
std
jecxz
repz
add
cmp
mov
inc
insl
mov
mov
loope
mov
mov
ss
out
xchg
jecxz
jns
ret
cmp
testl
inc
pop
or
xor
loop
mov
test
ret
cli
pop
push
cmc
push
sbb
call
hlt
stos
in
icebp
xor
pop
sbb
adc
fimuls
jb
sbb
loope
jae
scas
iret
ret
int
mov
pusha
movsl
xchg
cmpsb
in
mov
cwtl
outsb
mov
outsb
xor
mov
loope
inc
pop
stos
call
imul
dec
add
stos
inc
fwait
std
fdivs
insb
loope
jmp
das
dec
xor
iret
sahf
push
inc
dec
lds
test
sub
xor
andl
inc
cmc
mov
push
push
aad
js
jae
aaa
and
and
lahf
rcr
movsb
imul
and
stc
mov
sub
mov
sbb
dec
push
or
dec
hlt
sbb
imul
cwtl
data16
push
pop
rorb
aas
mov
loop
cs
sbb
and
xor
hlt
hlt
or
jbe
lcall
arpl
insb
leave
in
int3
xchg
test
mov
in
aaa
xchg
mov
jae
pushf
mov
test
out
mov
mov
sbb
sbb
jl
adc
movsl
adc
fwait
adc
outsb
hlt
gs
jbe
out
dec
jl
xchg
cltd
push
jae
xchg
orl
insl
fadd
mov
in
mov
int3
dec
xor
cmp
std
push
add
mov
outsl
sub
pop
fbld
or
stc
pop
cmc
lock
xchg
femms
cmc
pop
sub
jecxz
nop
cwtl
push
cmpsb
in
push
sbb
lock
rorl
pop
or
call
mov
cmp
aaa
sti
pop
and
sbb
push
or
pop
fisttpl
shlb
inc
mov
ficoml
sahf
push
aam
imul
xor
sbbb
jno
add
cld
jne
lds
inc
mov
or
cmp
push
and
xchg
call
inc
dec
sarl
cmp
fdivl
push
xor
dec
add
mov
outsl
mov
cld
cmp
cmp
icebp
ret
jmp
and
mov
int
lcall
dec
mov
push
mov
cli
popa
test
lock
add
js
das
je
and
and
xchg
jmp
ja
adc
or
inc
icebp
jno
enter
fs
add
roll
push
cmp
inc
test
aaa
ds
mov
lods
frstor
imul
push
sub
bt
push
leave
sbb
pop
bound
fisubrl
or
adc
lahf
stos
cmpb
fprem
cmp
gs
jnp
sub
xor
les
mov
cwtl
fldt
test
jge
jge
inc
stos
adc
and
and
mov
ret
push
push
imul
ror
ja
sbb
pop
imul
and
fs
jmp
jne
xor
mov
xchg
or
sub
dec
mov
mov
jo
and
mov
jbe
cmp
scas
lret
stc
xchg
mov
jge
lods
sbb
mov
dec
stc
and
mov
push
push
push
rclb
lock
hlt
jl
and
mov
mov
nop
sarl
mov
jle
insl
add
mov
pop
or
or
cmpsb
or
lret
imul
push
xchg
out
inc
cmp
daa
add
add
adc
xor
mov
push
inc
cmp
mov
mov
dec
scas
out
mov
and
sbbl
inc
jle
mov
dec
cmp
sti
cmpl
add
xchg
loope
add
cmp
loopne
sbb
inc
test
push
mov
sbb
push
dec
add
jg
sub
lahf
ret
pop
xchg
push
fisttpll
lock
roll
push
sbb
insl
dec
jne
sahf
cmp
xor
jnp
sbb
call
lea
aam
mov
data16
pop
and
mov
ret
add
sub
movsl
mov
outsl
out
pop
push
lods
push
xor
stos
adc
cmc
shll
call
pop
aas
int
xor
mov
xchg
imul
mov
cs
aam
shlb
into
inc
jmp
pop
jae
mov
inc
jg
out
xchg
add
mov
xor
sub
and
call
enter
addr16
insb
js
cmp
and
mov
imul
xchg
mov
insl
mov
cmp
std
outsl
cli
adc
and
movsb
jbe
pop
add
and
dec
pop
repnz
sti
test
mov
dec
outsb
jno
inc
sub
jg
shll
fldl2e
fcoms
sub
pop
sti
mov
lret
adcb
inc
out
call
fneni(8087
mov
xor
pop
aam
lcall
rolb
aas
add
adc
cmp
xchg
or
mov
cltd
loopne
sbb
fcmovbe
jns
scas
and
inc
push
cmp
xor
lock
fs
or
inc
bound
cmp
not
incl
mull
mov
sbb
fsubs
mov
add
mov
jp
xchg
inc
shlb
xchg
bound
sahf
jns
add
push
jnp
fldenv
mov
lods
ljmp
fisttpll
stc
movsl
inc
mov
dec
into
xchg
subl
push
mov
aam
jg
ret
xorl
loopne
dec
mov
fdiv
xor
xchg
ljmp
jno
push
xorl
ud0
jg
jo
es
lods
xchg
jns
xor
or
mov
fisubrl
cld
psrld
gs
pop
inc
cld
cltd
lahf
iret
xchg
and
inc
loopne
xchg
out
lea
lods
cld
jb
fsubrs
mov
pop
sbb
stos
or
shrl
or
leave
or
inc
jo
mov
cmp
mov
jl
movsbl
and
or
outsb
pop
je
dec
jns
insb
xor
sbb
imul
test
into
lcall
dec
scas
dec
xchg
mov
sbb
stos
int
pop
mov
sbb
xchg
pop
inc
divb
es
sahf
pusha
xchg
or
pusha
dec
jb
clc
or
shrl
mov
outsl
jne
dec
es
nop
adc
xchg
mov
add
bound
mov
mov
pop
test
mov
inc
ret
push
subb
xchg
pop
pop
jecxz
xlat
or
inc
mov
mov
out
jmp
and
loope
push
xor
arpl
push
in
xor
sarl
loopne
sbb
inc
add
daa
xchg
cwtl
jp
std
stc
ss
jge
add
pusha
mov
popa
push
mov
mov
xchg
or
fistl
pop
mov
call
lea
mov
push
push
in
jle
pop
mov
cmpb
jo
mov
cmc
lock
inc
popf
xchg
cmp
fiaddl
or
push
mov
cmp
pusha
out
dec
xchg
test
cmp
iret
leave
cmpsb
es
mov
enter
jg
loop
inc
xor
fimuls
ficomps
bound
mov
scas
dec
jbe
ficoml
arpl
test
out
jns
lods
pop
sarb
cmp
adc
mov
adcl
push
and
push
add
fistl
in
in
cmp
cltd
push
inc
inc
ljmp
je
fisttpl
lods
add
lock
nop
out
sub
dec
aaa
invd
sub
test
inc
cwtl
outsb
push
xchg
imul
mov
hlt
scas
ljmp
clc
sahf
push
adcl
icebp
mov
xchg
in
test
clc
cmp
int
mov
sub
pop
in
jl
mov
je
subl
sbb
cld
inc
push
test
adc
xlat
jle
daa
and
lcall
jae
or
pop
out
lea
pop
inc
test
add
xor
cmpsb
push
xlat
std
or
pop
inc
fsubrs
sbb
cmp
pop
inc
and
int3
sbb
int
push
test
mov
push
cmp
add
adc
subb
and
jb
lock
mov
push
ja
add
dec
sub
add
rclb
and
std
mov
movsb
int
cmp
stos
xchg
aad
lea
adc
or
jns
call
orb
and
jmp
das
out
fdivrs
pop
mov
enter
lock
xor
imul
test
mov
sbb
divps
push
pop
cmpsb
add
test
cmpsb
mov
test
cmpsl
imul
fwait
mov
fsts
add
lds
xorb
popa
lahf
add
leave
jp
sahf
mov
popf
repnz
push
and
dec
pop
xor
xchg
fstpt
inc
mov
aad
add
fidivrs
pop
xor
inc
scas
xchg
pop
mov
fcoml
xor
lea
jmp
cltd
dec
jnp
lods
xor
pop
in
push
sub
hlt
shll
test
mov
in
dec
jne
push
imul
arpl
pop
xchg
push
jbe
pop
lods
xchg
je
mov
xorb
add
jnp
mov
and
mov
rolb
call
mov
jne
xchg
sub
pop
clc
test
sbb
sbb
mov
or
xlat
popa
std
pusha
test
lods
ja
pusha
push
hlt
out
popf
push
mov
add
xchg
ficomps
pop
add
sbb
xchg
cmp
jmp
stos
ficoml
fdiv
xor
xchg
iret
test
mov
cmpsl
sbb
add
add
cli
popf
and
xchg
fiaddl
or
stc
loopne
aas
int3
xchg
mov
mov
mov
sbb
or
icebp
jl
ljmp
lahf
mov
sub
cmp
pop
cmp
add
mov
and
mov
lret
fwait
xor
js
inc
je
push
arpl
jbe
add
subl
out
sbb
add
lahf
imul
hlt
xor
pop
xchg
mov
outsl
clc
and
lahf
cmpsb
std
lods
inc
sub
rcrl
ja
mov
jecxz
mov
orb
push
add
outsl
jl
roll
call
out
or
mov
pop
xchg
dec
scas
ficompl
or
aas
icebp
lds
cmp
lea
xchg
mov
add
push
jg
mov
fnop
lock
sub
sbb
xor
pushf
mov
ja
jge
jbe
cld
dec
pop
cli
xor
loopne
mov
inc
pop
xchg
add
out
pop
mov
push
jne
dec
or
push
pop
pop
xchg
stos
adc
jle,pt
mov
icebp
cli
inc
stos
pusha
pop
leave
xchg
cmpsl
or
xchg
xchg
adcb
iret
jo
xchg
cmp
dec
mov
je
pop
inc
add
xor
cmp
mov
mov
fcmovbe
mov
sub
scas
addb
push
stos
sbb
adc
push
mov
sbb
mov
mov
int3
or
push
dec
push
dec
mov
nop
xchg
and
xor
ljmp
add
add
outsb
push
lods
cmp
mov
mov
out
test
inc
lods
xor
imul
jo
out
test
mov
loopne
add
test
push
lcall
or
cld
jo
inc
addl
out
xchg
mov
adc
jbe
int
inc
dec
out
popl
jbe
mov
ficomps
enter
dec
andl
mov
jne
loope
rclb
scas
loop
adc
fwait
xor
cmp
lret
insl
xchg
cmp
push
pop
int
rcrl
cmpsb
fidivs
es
adc
xchg
xor
sarb
loope
sub
dec
cmpsl
stos
mov
movhps
movsl
pop
subl
push
loope
push
xor
decl
jl
mov
and
mov
pop
ljmp
popf
add
lock
add
mov
push
inc
jne
fs
shr
jl
mov
pop
add
rolb
shlb
jne
sub
scas
jnp
or
daa
mov
mov
es
in
out
into
fists
push
std
lods
pop
push
cmp
mov
clc
popf
adc
inc
data16
nop
sahf
test
mov
cmpsl
and
xchg
mov
int3
daa
movhps
js
push
adc
cltd
movsb
fstps
stc
movsb
xor
ret
mov
pop
jnp
out
xchg
pop
lea
mov
sbbl
mov
bound
fs
push
dec
inc
adc
jecxz
outsl
inc
push
dec
icebp
loopne
dec
out
mov
push
ret
and
or
addr16
xlat
sbb
test
test
pop
push
imul
aaa
pop
adc
out
sub
push
inc
dec
inc
test
lods
pop
push
sbb
push
outsb
cld
test
in
sbb
cmc
inc
mov
imul
scas
test
add
sbb
xchg
stc
and
leave
das
sub
fstl
in
push
call
scas
leave
jns
cmpsb
mov
and
sbb
xor
mov
xor
stc
es
loope
es
mov
popa
xchg
fsubl
cwtl
xor
cld
jmp
lock
jp
das
jo
add
xchg
dec
xor
pusha
mov
pop
hlt
inc
fwait
shll
retw
mov
repz
icebp
addr16
stos
inc
andb
push
jb
and
push
jecxz
loopne
jno
sahf
test
xor
and
mov
dec
push
int3
ja
aad
cmp
mov
mov
or
aaa
mov
in
pop
mov
or
insl
int3
adc
jp
or
out
sbb
jb
xor
in
test
inc
adc
scas
jle
test
or
insl
cmpsb
pop
outsb
adc
scas
cmc
fiaddl
jae
addl
lret
hlt
mov
dec
ret
mov
iret
dec
lea
call
imul
rcrb
push
sti
mov
clc
xchg
xchg
mov
sti
cmp
dec
sub
out
out
inc
insl
jbe
xchg
lock
loopne
mov
hlt
push
iret
mov
pop
test
leave
int
push
scas
xchg
mov
fcomps
cmp
inc
inc
mov
imul
shll
add
xchg
sbb
dec
xor
mov
mov
or
pop
pop
sub
push
mov
and
push
sti
mov
jle
or
stos
fbstp
cmpsl
push
mov
popf
fistpl
test
push
es
inc
mov
mov
and
adc
cmc
fwait
setp
xor
lock
pop
inc
push
imul
test
and
jecxz
fldenv
cmc
icebp
push
je
insl
movsl
les
push
std
cltd
jmp
lods
xchg
fsubs
iret
mov
in
mov
outsb
mov
in
outsl
push
mov
add
mov
and
mov
fsubr
loope
dec
lea
aam
jecxz
lds
jne
mov
xchg
push
or
cli
mov
enter
push
inc
aam
jbe
ret
pop
pop
std
pop
dec
cmp
mov
inc
push
adc
xlat
add
cltd
mov
sub
sub
ss
cmovge
rcr
es
cld
addr16
pop
mov
test
sahf
mov
cmpsb
mov
xor
mov
jle
fcompl
dec
ret
arpl
aam
add
hlt
add
dec
movb
jecxz
orl
repz
cmpsb
lock
rolb
mov
shr
clc
xor
cmp
mov
or
mov
imul
sbb
mov
lods
int3
imul
xchg
and
fistpll
adc
push
jmp
aad
pop
mov
mov
pop
shlb
add
cmpsl
test
cmp
test
cmpsl
pop
and
sbb
testl
inc
mov
jns
adc
cmp
sub
lcall
lcall
ss
mov
popa
xor
lods
loopne
inc
ss
add
jl
repnz
or
push
lret
xor
cmpsl
jg
mov
pop
out
jne
mov
mov
pusha
or
out
lods
fildl
mov
adc
lahf
fstl
inc
ss
push
in
jecxz
xor
mov
test
xchg
lea
and
fisttpll
in
popf
inc
dec
adc
add
and
sub
rolb
inc
add
adc
jne
idivb
sbb
and
pop
jbe
ljmp
mov
arpl
lcall
dec
das
jge
roll
adc
mov
sbb
js
ror
icebp
es
jns
dec
sub
and
sbb
mov
cmpl
adc
ja
adc
inc
loope
pop
inc
jnp
sarl
imull
sar
les
popa
push
add
inc
fimuls
in
add
sub
test
push
inc
lret
arpl
push
sub
gs
pop
mov
jne
mov
loopne
xor
cmp
and
push
imul
jno
fnstsw
mov
bound
push
mov
je
pop
fistps
ret
es
add
push
push
inc
jo
jns
leave
shrb
cli
push
scas
xor
jnp
jmp
test
ja
inc
sahf
mov
mov
inc
aam
int3
insl
loop
push
dec
push
push
pop
pushf
or
and
xchg
mov
and
ret
xor
cmp
jb
fsubrl
lret
aas
adc
and
gs
add
test
pop
lret
nop
je
mov
xchg
jae
xchg
or
push
popf
loope
jae
sub
cmp
sbb
dec
fsub
jmp
mov
fmull
inc
sbb
pop
pop
mov
imul
xchg
mov
xor
aad
stos
mov
into
leave
inc
sub
and
stos
or
cltd
aaa
adc
js
push
leave
inc
sub
cmp
dec
data16
add
push
pop
xor
jecxz
mov
into
jle
sbb
pushf
in
lret
mov
xchg
mov
mov
aad
jbe
adc
adc
xor
sub
cmpl
int
arpl
mov
or
imul
std
mov
xor
and
dec
mov
cmc
mov
lea
and
jecxz
and
inc
enter
adc
inc
pop
scas
jnp
aas
adc
int
or
cmp
js
xor
movsb
push
fisubl
sub
xchg
in
das
push
pop
fnsave
xor
fistps
adc
pop
sbb
dec
jae
decl
cmp
jp
int
out
gs
pop
fbstp
push
and
push
cmp
out
and
inc
std
push
rolb
mov
xor
out
sarl
repnz
pop
lods
aaa
test
icebp
int
xchg
push
push
cmpb
int3
xor
or
mov
ret
mov
movsl
ja
jmp
sub
and
sti
test
lods
xchg
cmp
jg
lret
xor
pminsw
cmp
lret
mov
lahf
sub
fistps
sarl
mov
fidivl
jg
les
mov
sarl
pop
lea
cmc
std
adc
cmc
stos
hlt
push
hlt
movsb
insl
dec
add
jmp
cmp
aaa
jmp
out
or
shrb
in
rcrb
insb
stos
mov
mov
or
pusha
sbb
mov
out
std
push
jmp
cmp
movsl
jge
pop
add
fiadds
out
fsub
addb
test
pop
cmpb
sub
icebp
inc
or
dec
fs
arpl
out
enter
mov
dec
lea
inc
mov
mov
or
je
das
xor
jp
pop
cmp
aaa
xchg
icebp
test
pop
loopne
dec
adc
inc
sub
shl
add
jle
xchg
addb
repnz
sub
pop
es
sti
fs
out
inc
xchg
aad
data16
lret
clc
stc
shlb
push
adc
xlat
dec
test
rcrl
mov
out
or
jb
js
adc
fnstsw
jno
push
xchg
insb
scas
or
cmp
lret
pop
add
enter
push
aad
sbbl
in
sub
pop
add
jo
addr16
idivb
out
mov
and
enter
pop
push
fdivrl
leave
cltd
jle
lds
and
hlt
clc
pop
aad
and
dec
mov
cmp
xchg
pop
mov
mov
sbb
fsubs
inc
jae
ljmp
negl
nop
jnp
dec
pop
mov
clc
and
mov
inc
sub
test
xchg
movsb
adcl
aad
adc
iret
pop
mov
mov
pop
int3
repz
inc
adcl
ja
push
ja
rorl
inc
mov
or
aad
or
jecxz
inc
xor
test
xor
mov
lock
pop
mov
dec
dec
xor
fisubs
sbb
add
ret
mov
shlb
sub
xchg
movsb
int
mov
push
cmp
and
cmp
in
fildl
ret
mov
lock
gs
xorl
orl
test
push
and
push
dec
cmp
mov
daa
in
into
das
out
mov
notl
mov
cmp
les
fwait
cmpsb
sub
imul
or
pop
scas
test
xchg
lahf
ss
push
dec
xchg
shll
pop
ja
lea
inc
ja
mov
pop
inc
or
cmp
dec
mov
push
mov
sub
mov
shlb
enter
inc
out
xor
dec
sub
daa
mov
mov
pop
add
sub
push
icebp
ljmp
sbb
orb
sti
popf
call
into
rcr
stc
mov
aam
addr16
cwtl
movsl
mov
inc
xor
sbb
mov
or
jge
adc
adc
or
xlat
rol
sbb
or
mov
lock
mov
inc
fsub
clc
loope
dec
lea
adc
sub
mov
push
dec
push
add
shrl
cld
jge
vphsubdq
rorl
jno
sub
out
test
iret
pop
dec
push
fcmovu
insl
mov
inc
mov
sbb
loope
jns
adc
lods
pop
arpl
push
mov
in
sahf
push
cmp
in
jo
dec
rorb
jno
mov
xchg
shll
and
xchg
xor
push
pusha
fs
mov
or
sub
ljmp
jecxz
fwait
ja
cmpsb
xchg
inc
cmpsl
out
pop
daa
test
sbb
adc
lret
push
or
hlt
inc
pop
xor
lods
mov
sub
sub
iret
mov
lods
jmp
push
fmull
negw
dec
movsb
mov
ja
dec
jl
fistps
incb
and
pop
in
push
aas
mov
dec
jno
jns
hlt
sub
jg
xchg
js
jg
gs
movsb
cmpsb
aad
mov
adc
and
stc
cmp
shr
or
int
mov
ljmp
and
jae
inc
into
mov
sub
adc
jl
xor
mov
push
add
push
jge
repnz
gs
mov
xor
dec
test
jnp
in
lret
insl
pop
mov
and
shrb
xor
mov
mov
mov
add
pop
adc
lret
add
dec
lods
test
inc
test
xchg
rcll
andb
iret
push
jns
fwait
mov
rcrl
pop
pop
and
in
jb
xor
xchg
jne
imul
mov
or
les
js
push
cmp
mov
dec
push
movsl
js
xchg
pop
and
ja
ret
xchg
int3
out
outsl
and
xor
sbb
fbstp
std
mov
aam
inc
or
cli
pop
jg
inc
lds
call
push
jle
imul
mov
insb
cmp
add
adc
mov
stos
cmc
insl
jns
lea
xchg
test
fsts
cld
pusha
adc
outsb
mov
push
xchg
pusha
jge
adc
lret
fistpll
movsb
pop
xchg
pop
out
stc
add
stc
jae
rcr
jnp
ljmp
sahf
inc
jae
rcrl
out
inc
fwait
add
inc
cmp
cmp
mov
mov
fnstcw
je
adc
stos
jg
xor
imul
rclb
add
inc
shlb
sub
scas
add
or
adc
movsl
push
mov
lock
or
repz
pushf
xchg
ja
mov
pop
filds
insl
icebp
testl
insl
mov
mov
pop
test
test
pop
movsb
stos
mov
cmp
or
mov
dec
out
push
xchg
or
lcall
sub
adc
mov
hlt
fwait
jmp
rclb
je
and
aam
mov
pop
test
xchg
xchg
into
jl
inc
lcall
test
je
xchg
ds
xchg
pop
or
mov
adc
gs
sti
mulb
pop
xor
leave
iret
push
sbb
lock
mov
outsl
jecxz
arpl
push
cmp
add
pop
xchg
repz
xor
pop
shll
addb
push
push
std
xchg
lds
call
push
dec
sbb
lret
cli
xchg
xchg
stc
xchg
loope
int
and
fwait
jo
mov
xor
jne
lahf
lret
ja
arpl
fistpll
jbe
xchg
sbb
test
jbe
call
pop
cmp
or
cmp
fcoms
aas
pop
fisttps
add
cs
hlt
add
xchg
adc
stc
mov
lahf
inc
xor
cmc
sub
push
das
adc
add
lahf
pushf
je
pop
or
xlat
cmpsl
nop
and
in
hlt
stc
xor
jg
and
aam
jnp
cmp
mov
xchg
sbb
js
cmp
sbb
int
adc
lds
mov
sahf
xchg
cwtl
cmp
sub
jl
mov
popa
pminsw
test
fidivl
jo
lret
das
cmp
imul
jo
lock
sub
iret
cmp
push
out
fdivrs
inc
icebp
stc
lea
movsb
dec
cmc
sbb
rcr
int
mov
loop
inc
shlb
sub
movsb
cmpsb
push
mov
pop
and
jb
stc
jl
or
fsubrl
or
pop
insb
in
push
int3
jne
lret
arpl
ljmp
dec
test
in
outsb
mov
jl
fsubrs
push
icebp
aad
inc
xchg
inc
pusha
pop
inc
jg
xchg
popw
jge
insb
xorb
xor
or
scas
mov
lds
and
cs
fcmovnbe
mov
jcxz
pop
sbb
cmpsb
adc
inc
push
scas
int3
bound
cmp
fmul
mov
je
push
xchg
add
push
xchg
leave
clc
push
std
sbb
sub
roll
mov
jnp
gs
js
dec
loope
cwtl
or
push
push
test
clc
shlb
mov
mov
adc
fisttps
pop
adc
xchg
das
sub
xor
out
mov
add
leave
loopne
jle
adc
daa
adc
sbb
popf
lret
popa
outsb
push
inc
test
mov
mov
adc
pop
in
mov
lret
pop
cmp
cmpsb
stos
test
dec
negb
movsb
fistpl
mov
stos
xchg
cmpsl
cwtd
dec
call
sbb
mov
push
mov
jae
les
mov
cs
rclb
rorl
cmp
in
pusha
cmp
xor
cmp
mov
add
or
movsl
aas
imul
jg
lock
pop
xchg
xor
or
pop
inc
push
dec
nop
mulb
cmp
scas
test
arpl
cmp
sub
inc
outsb
mov
es
pop
push
or
xchg
addr16
aas
add
cmp
and
xchg
testl
adc
mov
mov
lret
mov
inc
sub
add
mov
xchg
inc
jbe
mov
rcrb
ficoms
cmpsl
adc
cmp
xchg
cmp
cmp
imul
inc
dec
mov
cmp
mov
adc
cmc
jge
stos
sub
inc
fucomip
fidivl
xor
sub
inc
adc
aaa
push
pop
iret
cli
dec
je
les
repnz
int
mov
jae
int
fs
jo
sbb
aas
shrl
cmc
mov
lds
clc
jb
outsl
mov
mov
lea
mov
mov
lahf
push
sbb
cs
xor
outsb
out
lret
ret
push
leave
adc
xchg
cmc
aad
enter
or
and
fcmovnbe
dec
inc
stc
push
aam
out
imul
in
mov
int
pop
rolb
push
jg
ja
incl
pop
rcll
arpl
movzwl
fldl
cs
stos
faddp
sbb
and
mov
movsb
out
jl
mov
lret
cli
jl
das
lret
in
mov
fsin
test
out
mov
jmp
rolb
xchg
and
shrl
dec
scas
sub
jp
aas
popa
je
aaa
adc
cltd
cmp
cmpsb
data16
pop
jb
lret
stos
repz
mov
add
data16
add
jne
dec
push
jbe
cmc
lock
call
aas
mov
push
add
imul
cmp
stos
and
sub
sbb
mov
mov
test
pcmpeqd
jmp
bound
inc
rcr
dec
adc
aad
out
mov
xor
imul
add
hlt
pop
ja
mov
cmc
jg
jecxz
sbb
mov
dec
mov
std
mov
loop
loopne
push
jns
cli
lods
push
sbb
insl
cmp
fwait
push
push
dec
inc
jge
adc
push
sarl
fildll
clc
add
adc
hlt
pop
nop
jmp
movsb
sub
xchg
shll
and
sbb
stos
mov
lds
add
shll
andl
add
pop
pop
scas
push
and
stos
cmp
pop
bswap
stc
cli
xchg
inc
push
ds
int
mov
ror
stos
or
dec
sti
adcb
mov
jmp
mov
loope
jp
cmp
mov
test
mov
call
add
adc
cmp
jae
sti
mov
inc
sub
push
dec
daa
dec
jg
les
shll
xlat
push
push
cli
jmp
mov
testb
xorb
les
fs
mov
inc
jl
xchg
xor
daa
ret
movsb
inc
movsb
dec
dec
add
fcompl
or
push
mull
push
jb
and
push
in
dec
inc
jae
xchg
fadd
popa
xor
outsb
jmp
mov
stos
mov
mov
push
or
lock
cmc
jo
pop
mov
cmp
dec
and
mov
bound
jecxz
sbb
lods
fldt
lock
test
push
mov
adc
out
cmp
dec
std
sub
push
xchg
cmp
push
cmpsb
mov
cmpsl
cmpsl
je
jecxz
sub
sarl
cld
sub
cmp
test
idivb
in
repnz
rolb
movsb
xchg
push
pusha
xor
push
jecxz
mov
sbb
bound
in
jle
rcr
jp
push
gs
mov
cs
lds
addl
mov
leave
out
cwtl
mov
inc
ja
push
cs
xor
lods
int
pop
leave
data16
and
mov
jecxz
pop
cs
fnclex
or
mov
test
sub
push
mov
ljmp
les
lods
aad
lods
jmp
mov
sub
inc
adc
das
int
jecxz
sub
mov
outsl
mov
push
clc
fdivrs
jle
daa
test
pop
aad
sbb
or
push
into
fcmove
xor
aas
in
sub
test
cmpsl
stos
pop
ret
aad
push
es
int3
cmpsb
test
rol
mov
mov
or
lock
subps
pop
je
iret
mov
xchg
mov
sahf
sub
dec
jg
sti
bound
test
nop
mov
mov
pop
xchg
jno
cwtl
rcl
sub
out
data16
out
loope
pop
jecxz
shlb
dec
repz
sbb
push
cmp
lret
xchg
xchg
gs
call
inc
test
pop
je
enter
xchg
cmp
pusha
cmpb
fildl
sub
jns
mov
lock
or
and
cmc
pop
mov
aas
cwtl
lcall
lret
inc
cmpsl
incl
les
xor
adc
repz
sub
scas
ror
shlb
cmp
jmp
mov
sub
ret
out
xchg
test
popa
xor
aas
pop
in
or
paddw
mov
sbb
stos
idiv
in
lock
xor
cmp
sbb
in
hlt
fiaddl
sbb
sahf
xor
in
loop
sub
pop
and
push
divb
cmp
jle
bound
xor
adcb
sbb
inc
mov
addr16
and
pop
xchg
dec
repnz
add
dec
ljmp
jge
mov
leave
mov
aam
pop
adc
mov
jae
mov
fxch
inc
es
repz
xorl
xor
lret
out
mov
js
xchg
scas
clc
je
jns
inc
cld
sbb
shrb
in
push
les
xchg
inc
xchg
int3
dec
sub
pushf
shlb
repz
enter
movsl
pop
and
sbb
ljmp
dec
cmp
or
test
mov
cwtl
push
sbb
inc
sub
xor
pop
ficoms
imul
pop
sbb
das
sbb
shrb
lahf
incl
hlt
lds
aad
test
pusha
lcall
xchg
lret
popl
ret
sbb
cmp
pushf
push
in
lahf
sbbl
pop
sahf
xchg
push
repnz
daa
push
jne
arpl
outsb
ljmp
xchg
daa
in
adc
and
push
mov
mov
cmp
push
pushf
or
ret
inc
or
test
or
ret
inc
fldz
cmp
shll
repz
mov
fbld
xorb
stos
mov
repz
lods
or
decl
and
frstor
add
lds
shrb
cli
rolb
sti
mov
cmpsb
mov
loope
test
dec
inc
push
stc
pop
lock
pop
fisubs
pop
mov
hlt
faddl
or
scas
sub
lods
cld
mov
repz
lret
mov
and
mov
push
mov
lret
pop
cmp
sbbl
mov
pop
es
or
iret
iret
pop
insl
js
arpl
add
adc
enter
stos
movsb
lea
mov
sarb
imul
addr16
movsb
adc
mov
test
sub
add
xor
push
bound
cld
mov
xchg
test
cmp
pop
shrb
xchg
insl
aad
fdivrl
cmpsb
rorl
xchg
lret
movsl
cmp
jecxz
xchg
test
cmp
cld
pop
gs
cli
gs
arpl
jae
mov
rcl
cmp
je
inc
lea
popa
jmp
insb
cmp
nop
jne
inc
mov
data16
int3
out
xor
xor
xor
inc
data16
jl
pop
adc
cmp
fs
mov
sbb
sub
xchg
push
sti
push
sbb
mov
mov
jmp
push
loopne
aad
in
loopne
mov
dec
push
mov
adcb
addl
outsb
cmp
orl
movsl
push
pop
ret
leave
stos
dec
push
fisubrs
lock
xchg
pop
xor
int
pop
lret
out
add
popf
dec
lahf
dec
nop
cmpsb
mov
dec
sub
jae
mov
stos
ret
jp
imul
push
mov
lea
mov
cli
add
push
cmp
fistl
cmpb
arpl
inc
fisubrs
jge
xor
call
push
stc
les
lret
adc
mov
mov
jno
xor
add
leave
push
daa
mov
jp
cmp
lods
inc
inc
loope
lea
enter
fnstcw
out
dec
pop
dec
mov
shrl
inc
pop
lea
and
cmpl
or
add
and
out
dec
push
movsl
jno
aad
aaa
sub
mov
into
mov
cmpsb
or
xor
inc
cs
cld
arpl
mov
lcall
dec
cmpsb
ss
add
test
sub
mov
and
and
pop
bound
dec
sub
mov
sub
xor
sbb
into
cmp
dec
enter
bound
xchg
mov
lea
iret
mov
mov
sbb
inc
rcrb
sbb
mov
ja
rorb
testl
fmull
xlat
xor
out
pop
js
or
inc
cld
sbbl
sub
cltd
dec
fwait
dec
push
jb
mov
pop
cltd
icebp
xor
das
in
mov
sub
test
or
mov
dec
mov
or
xchg
je
and
lock
pusha
xor
mov
mov
cltd
mov
xchg
or
pusha
push
fucom
xor
dec
jl
push
andb
mov
push
mov
sbb
lds
pop
pop
mov
pop
and
dec
test
cmp
aam
lcall
mov
js
test
lods
add
sahf
mov
into
loope
push
lods
jbe
xchg
adc
lods
cmp
jno
add
xchg
ja
cltd
rorl
or
adc
out
cltd
or
int3
rcrl
in
and
flds
lds
sbb
ret
inc
inc
es
jno
lahf
add
shrl
int
dec
icebp
and
out
outsl
fstpt
cli
and
lcall
test
insb
aas
in
mov
pop
pop
add
mov
leave
push
cmp
mov
pop
jne
mov
into
mov
or
push
popa
sbb
sub
and
pop
cmp
or
sub
xchg
in
mov
nop
leave
cmc
dec
mov
add
rclb
nop
out
outsl
cmp
jle
cmpsl
xor
mov
sbb
mov
int3
cmp
push
mov
xor
jae
pop
out
xchg
cmc
daa
and
dec
sbb
scas
push
jge
sbb
sub
stos
popf
cmp
pop
mov
ss
mov
mov
in
pop
mov
xchg
jno
adc
jge
test
sub
mov
add
mov
mov
dec
xor
fstl
push
pop
das
push
cmpl
xchg
sub
pusha
xchg
cltd
push
ja
jno
fnstsw
and
pop
int3
scas
inc
and
mov
ror
jb
dec
xor
cmp
mov
jae
mov
std
daa
notl
les
push
pusha
add
lcall
inc
mov
mov
mov
testb
mov
stos
out
aaa
mov
repnz
cmpsl
add
data16
mov
scas
jo
pop
lret
ror
xchg
js
jle
xchg
out
test
das
pop
push
jge
xor
imul
ljmp
aad
fildl
das
mov
xor
fmul
cmp
stos
jmp
cmp
cmp
je
push
jge
xchg
mov
or
jno
cli
dec
icebp
aad
call
pushl
sub
loope
pop
iret
xor
cmpsb
shlb
lods
cld
jae
jno
loope
das
fldt
movsb
sbb
xchg
mov
pop
sub
push
jo
push
testb
cmpsl
sub
and
aas
mov
addb
inc
dec
outsb
mov
jg
adc
pop
imul
mov
pushf
push
pop
xchg
mov
inc
rorl
cmp
mov
aam
or
movsl
ret
cli
cmpsb
inc
dec
add
sbb
lcall
xor
add
pop
mov
dec
loope
fisubrs
into
xchg
dec
mov
xchg
repnz
fimull
ror
fimull
js
cmpb
sub
fwait
adc
inc
push
xor
cwtl
dec
jne
mov
setnp
push
push
add
fisubrs
adc
jg
mov
mov
dec
sbb
pop
out
pop
cltd
sub
sub
inc
jmp
mov
or
mov
dec
mov
dec
jns
pushf
xchg
mov
cmp
sub
data16
xchg
push
and
movsl
repz
add
cmpsl
jg
sbb
xchg
fnsave
jo
aaa
xor
xor
shrl
lcall
addr16
add
in
mov
mov
loopne
mov
sbb
push
andl
cltd
pop
xor
lds
push
sub
or
insb
fmul
ret
or
pop
or
mov
mov
and
andb
inc
fmuls
mov
in
roll
inc
push
mov
and
cwtl
rorl
mov
inc
add
sbb
lea
pop
icebp
rep
add
negl
sub
pushf
pusha
pushf
mov
jecxz
push
divl
jp
call
aas
mov
dec
jmp
xchg
xor
xchg
mov
ret
lret
jo
clc
adc
xor
mov
test
ja
iret
mov
dec
add
loopne
aad
pop
cmp
cmc
pop
adc
add
push
lds
sbb
adc
aam
push
mov
scas
mov
ds
push
add
movsl
fwait
cs
sbb
jecxz
movsb
stos
add
shll
sbb
xchg
push
xchg
fstpt
mov
scas
adc
mov
jmp
jnp
rcrb
icebp
and
mov
lret
xor
lea
add
and
and
xchg
add
mov
mov
int
mov
hlt
shr
stos
lahf
jp
lret
sub
test
dec
lea
cmpsl
mov
out
mov
insl
push
cmpsb
inc
or
mov
lock
pop
xchg
xchg
insl
jnp
hlt
insl
xor
cmp
rolb
lret
rorb
jo
int3
pop
imul
jg
jne
les
sub
ja
xor
mov
iret
sbb
and
jmp
negb
aas
push
insb
lods
jl
mov
cli
cmp
fs
loopne
rcrl
xchg
ret
mov
jmp
cwtl
dec
dec
test
jae
xor
add
lahf
jno
mov
iret
scas
jno
ss
inc
fistl
cmpsl
xor
mov
adc
insl
pop
sub
inc
daa
mov
or
and
cmp
int
shlb
mov
jecxz
stos
enter
test
in
outsl
push
dec
mov
mov
jecxz
testl
sbb
ret
je
in
outsb
push
ret
add
das
insb
or
dec
xchg
fdivrl
movsb
aam
mov
in
shrb
pusha
inc
or
addr16
inc
int
pop
fcom
stos
adc
xchg
scas
xor
xchg
pop
dec
clc
pop
mov
pop
mov
sbb
sub
lea
jecxz
push
ja
sub
push
dec
dec
repnz
push
xchg
mov
adc
popa
mulb
inc
enter
je
sbb
inc
andl
jmp
sbb
aam
daa
es
adc
adc
cmpl
adc
test
es
setne
dec
sub
dec
xor
push
mov
push
sti
or
and
jb
stc
push
jl
outsl
pop
push
dec
xor
sbb
shll
rol
push
js
xchg
test
stc
rclb
repz
sti
mov
shlb
xor
xchg
inc
enter
cmpl
sub
pushf
popf
push
sarb
fbstp
cs
pusha
enter
sar
sub
loop
movsl
add
ss
das
xchg
cltd
ret
sub
inc
jbe
cmpsb
fs
mov
test
out
sbb
adc
or
andb
inc
in
cmp
mov
inc
dec
clc
loope,pt
insl
jge
movsl
lock
gs
add
adc
add
out
cmc
ja
mov
push
repz
dec
lret
mov
jg
repz
lahf
pop
jp
inc
jmp
int3
test
clc
adc
mov
push
cmpsb
imul
mov
cmp
dec
repnz
cmp
adc
push
in
inc
pop
aad
ficoms
or
inc
jae
adcb
sbb
mov
movb
in
sbb
and
out
repnz
sbb
inc
loop
xor
pop
and
int
call
aas
dec
inc
add
push
fistpll
fisubrl
push
dec
orb
jno
fdivs
xor
test
adc
das
call
push
jo
mov
and
pop
lods
jno
popa
push
inc
jo
nop
les
lds
jae
pop
nop
call
jmp
push
leave
xor
dec
cmp
mov
testb
mov
jne
or
mov
jns
or
cs
mov
mov
scas
push
fcompl
xchg
and
add
adc
loopne
roll
iret
xlat
cmpsb
stc
arpl
jle
push
int
bound
dec
jl
inc
mov
adc
enter
mov
lods
sbb
je
sub
mov
jno
sbb
push
push
mov
jecxz
mov
test
jo
mov
cmpsb
cwtl
pop
stos
add
bound
sahf
insl
mov
nop
ret
cmp
ljmp
fstps
dec
jnp
lock
adc
test
jb
mov
repz
scas
cmpsl
dec
mov
and
cmp
xchg
cmp
nop
loope
inc
imul
add
push
fcmovne
xor
sub
push
add
bound
daa
mov
push
cli
scas
mov
dec
sub
pop
imul
xlat
push
int
push
int
aad
push
ret
sub
dec
sbb
mov
sti
mov
popa
shlb
fs
adc
dec
nop
loop
ja
mov
adc
cmp
mov
xchg
test
pop
jno
and
ret
xor
push
pop
adc
add
into
jge
rcrb
xchg
shl
in
ds
xchg
xchg
dec
nopl
loop
sbb
sahf
inc
les
push
pop
pop
jno
xor
rol
jae
repnz
gs
insb
push
sub
xchg
cld
push
or
push
ja
jo
add
add
out
add
test
aam
negl
pop
dec
xchg
outsb
adc
cmp
sbb
dec
xchg
loop
adc
repnz
es
das
addr16
pop
pushf
jp
cmp
adc
inc
dec
aam
mov
xchg
xor
inc
mov
andl
rcl
push
or
cmp
and
cli
pop
sahf
jno
dec
push
dec
cltd
iret
out
mulb
push
jle
jle
cmpsl
jge
ss
mov
add
lods
les
add
jo
sbbl
fs
mov
and
aaa
icebp
fcmovbe
lods
and
movsb
sub
mov
cmpsl
call
fwait
leave
jge
pop
pop
shlb
sub
cltd
sti
repnz
xor
shlb
stc
push
mov
test
xor
adc
ljmp
jl
mov
push
push
out
int3
icebp
add
cmp
ret
pushf
add
pop
dec
sahf
out
jno
repnz
jle
jbe
sahf
scas
in
movsb
fnstsw
aad
or
lds
nop
inc
lods
inc
ds
pop
fisubrl
sub
stc
mov
inc
sbb
pop
adc
bndmov
xor
pop
inc
and
push
sbb
mov
movsb
add
daa
imul
pop
aaa
mov
lcall
out
addb
outsb
mov
idiv
test
push
jns
scas
and
sti
push
in
imul
addl
jno
inc
sbb
enter
jb
call
std
arpl
push
fstpt
outsb
sbb
pop
scas
les
xorb
and
mov
dec
stos
jo
jns
imul
jno
in
add
pop
jo
std
popf
adc
fs
aam
xor
in
adc
dec
xchg
sbb
mov
add
outsb
xlat
enter
mov
mov
lock
fwait
dec
xchg
icebp
mov
xor
imul
lods
lret
lahf
fisubrs
add
loop
mov
js
insl
push
ljmp
mov
add
dec
push
loopne
mov
movsl
dec
add
into
sbb
xor
push
ja
fldt
sbb
mov
jle
mov
dec
stc
sbb
inc
mov
push
sbb
mov
adc
push
sti
add
add
fwait
cli
insb
xchg
cmp
sub
insl
test
and
scas
xor
dec
in
cmp
repz
add
xor
addr16
cmp
pop
loope
dec
loope
xor
sub
cwtl
sbb
pop
push
cmp
jbe
mov
sti
inc
scas
test
dec
testl
and
arpl
hlt
shll
mov
scas
push
mov
lahf
lock
jns
push
ficompl
mov
pop
dec
mov
cwtl
adc
enter
pop
cs
ds
js
adc
mov
push
test
loope
addl
mov
lret
push
stos
push
jno
and
add
ss
test
lods
into
cli
ja
mov
data16
mov
out
cmpsl
xor
shll
loop
dec
xchg
leave
mov
push
sub
cmp
xchg
pop
sbb
repz
bound
mov
ja
in
and
mov
sub
into
mov
inc
dec
imull
nop
add
aam
cmp
sti
in
rolb
daa
xchg
ret
imul
inc
ljmp
outsl
mov
sbbl
fprem1
sbb
xorb
fsubrp
hlt
lret
into
outsb
test
add
adc
push
xor
add
movsb
repnz
ds
pop
pcmpeqb
dec
sbb
jne
adc
scas
mov
push
ficompl
cli
inc
add
vpcmpeqd
jbe
negl
fimull
clc
pushf
mov
pop
xlat
add
test
fildl
sbb
mov
and
xchg
xchg
xor
pop
sahf
push
fwait
std
inc
jmp
sub
dec
mov
inc
in
inc
call
sbb
arpl
jns
dec
jge
jmp
or
and
ret
sbb
bound
cmp
dec
lods
lock
sub
nop
add
jecxz
sarb
sahf
add
or
push
mov
scas
sub
sbb
cmp
pop
movsl
xchg
shll
fwait
jp
and
add
mov
ss
and
std
insb
mov
and
jbe
cmpsl
popf
repz
pushf
push
js
rcr
jg
notl
jo
dec
in
xor
mov
adc
push
outsb
nop
xchg
push
fcmovnb
sub
xchg
aas
into
mov
push
sbb
mov
imul
repz
mov
sbb
cmp
inc
adc
es
aaa
ss
addb
jge
std
jge
mov
push
aaa
jo
cwtl
mov
adc
in
xchg
mov
adc
test
jg
and
mov
js
and
fucom
and
adc
jmp
or
sub
adc
pop
inc
lock
xchg
stos
push
pop
inc
jb
cmp
lcall
mov
outsb
bound
xchg
ljmp
jno
repnz
into
mov
dec
cwtl
mov
pop
loope
mov
inc
mov
inc
adc
test
pop
call
aam
xchg
in
mov
mov
push
mov
movsb
cmp
nop
xchg
cwtl
popa
jg
cvtps2pi
repz
imul
loopne
sbb
insb
jg
pop
xchg
cltd
cs
test
rorl
mov
xchg
xor
idivl
arpl
andb
pop
jno
mov
imul
outsl
dec
std
cltd
outsl
loop
xor
and
lcall
mov
add
jl
aas
pop
xchg
mov
loop
repz
call
or
dec
outsl
jne
jg
dec
jecxz
dec
mov
and
sub
push
dec
mov
xor
or
push
ds
dec
shll
xor
push
dec
ss
popa
iret
xchg
and
adc
aaa
arpl
sahf
insl
lods
sbb
xchg
push
das
mov
cld
cmpl
rcrb
mov
stc
xchg
scas
sbb
subl
call
jle
outsl
cmp
les
adc
inc
popf
mov
xor
mov
lock
cs
and
sub
dec
inc
lea
aad
xchg
mov
mov
mov
inc
ja
movsl
sub
fs
mov
pusha
inc
mov
dec
daa
xor
test
outsl
and
aad
ret
incl
cs
fmuls
jb
int
sub
movsl
dec
push
aad
fdivs
sub
dec
daa
test
icebp
popa
jmp
xchg
mov
dec
push
and
les
or
inc
push
mov
xorl
cmc
test
ja
out
sbb
push
int3
push
daa
inc
or
sbb
aam
mov
mov
lret
addl
adc
sub
mov
mov
xor
scas
push
pushf
faddl
xchg
dec
mov
xchg
push
repz
iret
dec
cltd
mov
popf
jno
add
testl
xor
sahf
cwtl
lahf
ret
aas
add
scas
ficompl
sbb
aas
push
loop
pop
jecxz
mov
cmp
or
jae
fcomi
push
push
rep
mov
dec
fsubs
aaa
xor
jno
inc
xor
sub
les
rolb
push
outsl
adcb
pop
cmp
push
adc
inc
push
mov
stos
repz
andl
bound
cltd
dec
mulb
gs
arpl
add
jbe
pop
pusha
jmp
das
repnz
xor
ret
jle
loope
out
cmp
loop
mov
mov
outsl
shrl
mov
imull
jecxz
ljmp
jbe
sub
adc
sbb
and
out
test
in
xor
inc
jbe
cmp
lock
bound
ss
mov
bswap
insb
arpl
jmp
xor
xor
sub
or
icebp
mov
add
cmp
push
movsb
loop
cmp
fcomi
mov
inc
xacquire
test
and
stos
pop
mov
int3
ret
jo
shll
add
into
out
addl
out
dec
add
xor
sub
clc
push
jne
lods
add
cmp
xchg
es
hlt
mov
and
ja
and
lods
aad
pop
clc
aam
and
xchg
mov
mov
sahf
inc
test
jmp
fisubs
dec
fidivrl
jmp
adc
dec
mov
push
sahf
popf
ficompl
fwait
inc
and
pop
fimuls
arpl
loope
push
test
das
loop
cmp
mov
lret
cmp
fiaddl
jno
xlat
cmpsl
pop
sbb
dec
xlat
jge
testb
inc
cmpsb
lds
sbb
cwtl
call
shlb
scas
ret
mov
int3
ja
in
bound
add
pusha
or
fst
push
or
adc
fwait
or
mov
mov
jnp
test
das
testb
popf
lret
mov
out
cltd
mov
push
test
bound
ficompl
push
andl
pop
xorl
dec
loopne
stos
add
sti
lds
or
jecxz
jge
addr16
push
ljmp
mov
bnd
addb
push
dec
push
or
rcll
sbbl
pusha
dec
or
jle
xor
sbb
daa
pushf
mov
sarb
jmp
push
or
pop
xchg
mov
idivb
xchg
stos
jns
pusha
out
sarb
pop
or
inc
aad
out
cwtl
adc
dec
and
movsb
pusha
adc
fisubs
jmp
mov
inc
loopne
and
ss
mov
jnp
cli
lret
ret
xchg
in
add
inc
xchg
inc
dec
or
sub
pop
mov
js
dec
mov
or
pop
movsl
push
jecxz
mov
stos
dec
test
sbb
mov
sbb
mov
loopne
inc
jecxz
mov
jle
xor
ret
pop
lcall
les
xchg
out
push
sbb
sub
mov
inc
dec
sarl
stos
jns
test
dec
rcll
ret
mov
add
ja
pop
fists
mov
out
fists
jmp
repnz
and
ss
repnz
cmpsl
pop
cwtl
or
xchg
mov
cmp
in
mov
inc
loopne
dec
insl
loope
inc
shrb
mov
sahf
aad
push
ja
mov
push
negl
xlat
shll
or
test
in
add
pop
gs
mov
test
mov
sub
imul
movzwl
leave
xor
inc
in
in
lahf
in
dec
xchg
dec
lret
mov
lea
test
jecxz
push
fwait
pop
aas
dec
jns
mov
dec
lcall
add
cmp
xchg
cmpsb
out
mov
je
insl
jnp
hlt
mov
int
daa
and
jmp
outsb
pop
mov
fwait
add
test
leave
adc
int
dec
lods
or
sbb
enter
into
cmc
jmp
and
push
fwait
pop
std
loope
and
pop
scas
pop
xor
push
adc
mov
lods
lds
arpl
push
xchg
adc
add
out
and
std
bound
mov
ds
scas
inc
mov
and
and
int
add
jbe
inc
xchg
imul
jg
aaa
cmpsl
pop
and
dec
jmp
aam
xchg
lods
jl
cvttps2pi
repnz
adc
jle
or
cmp
lret
dec
push
and
sahf
jg
call
loope
ds
sbb
sub
sahf
jae
xchg
push
push
popa
test
jo
and
sub
mov
lahf
add
data16
js
push
xor
xchg
xor
test
test
jns
lret
cmp
adc
add
cmpsb
imul
add
daa
inc
pusha
fadds
fdivl
pusha
ret
xchg
ljmp
inc
jne
cmp
sub
adc
inc
lret
sub
in
leave
mov
mov
push
adc
test
stc
inc
adcl
stos
ret
shll
icebp
pop
xchg
mov
xor
inc
jne
pop
cltd
dec
movsl
mov
pop
sub
jbe
or
mov
xor
pop
loop
dec
mov
push
mov
mov
add
sub
cs
mov
cmp
cmp
pop
mov
inc
cld
enter
push
or
xor
mov
ficoml
add
nop
movsl
xchg
jns
mov
sub
lcall
ror
adc
test
jb
and
gs
cmpsl
ss
push
movsb
mov
or
test
lret
mov
out
fdivr
fbld
jno
mov
xor
mov
daa
fisubl
movsb
imul
sti
test
in
movl
in
frstor
xor
shl
mov
and
inc
ss
mov
mov
jb
adc
xchg
mov
fwait
xchg
aam
repz
add
jo
mov
mov
je
pop
mov
mov
in
sti
test
sub
pop
or
dec
xchg
pop
dec
lock
sbbl
or
mov
scas
sbb
fisubrl
sbb
fistl
popf
lret
dec
lea
gs
jo
int3
cmc
icebp
ds
sub
outsb
dec
gs
subb
test
imul
out
or
mov
cmp
xchg
xadd
adc
cli
push
mov
lret
pop
adc
and
xchg
add
push
outsl
sbb
scas
sbb
mov
or
bound
jae
sti
fistpl
cmp
sbb
push
int
push
push
out
pusha
pop
adc
mov
jle
in
arpl
ret
cmpb
shl
repnz
push
pushf
xor
std
pop
repz
or
jmp
mov
xchg
stos
aas
mov
icebp
pushf
adc
loopne
adc
call
adc
push
js
andb
hlt
lea
out
cltd
mov
es
push
mov
repnz
xchg
leave
jmp
cmp
jmp
inc
cmp
mov
rorl
push
insl
pop
add
mov
jg
sti
pushf
movl
scas
jbe
out
jp
jp
adc
dec
rcrb
cli
iret
xchg
sbb
les
enter
jo
lock
rcr
inc
int3
nop
dec
movsb
dec
jnp
inc
popa
push
les
lods
inc
mov
movsl
push
mov
mov
lods
mov
call
xorb
es
pop
push
stc
cmpsl
cli
push
sub
dec
xor
xor
mov
mov
xorl
icebp
xor
int3
xchg
ja
nop
push
sbb
les
inc
inc
adc
sub
inc
arpl
push
lods
xchg
and
shll
xchg
mov
inc
cmp
imul
insl
and
fldl
mov
mov
dec
or
xchg
divb
mov
and
sub
psrld
cmc
pop
push
or
mov
and
cld
fistl
repnz
cmp
mov
test
clc
outsb
loop
scas
test
outsl
icebp
les
repnz
mov
out
mov
push
mov
in
pop
flds
push
mov
or
mov
lcall
mov
xor
cwtl
cld
and
in
inc
or
mov
cmpsl
mov
frstor
mov
aaa
pop
pop
add
fldenv
sub
mov
mov
lea
cmp
mov
repnz
movsl
xchg
add
ljmp
repz
mov
mov
stos
lods
pop
and
out
jmp
dec
cmp
cmp
sub
aaa
jbe
stc
mov
test
dec
dec
dec
insb
ss
jbe
je
das
imul
repnz
outsb
sbb
mov
fwait
inc
aaa
ret
cmc
jmp
dec
mov
add
push
cmp
test
pop
aad
push
jp
mov
int
lret
push
jmp
sub
mov
pop
pop
mov
loopne
lret
or
mov
hlt
shll
add
add
mov
inc
in
and
lcall
out
inc
bound
push
dec
outsl
scas
aas
or
repnz
into
inc
cld
popa
imul
sub
aas
sub
test
lods
sti
sub
fisubrs
inc
enter
fmull
loop
out
adcl
mov
jge
into
enter
dec
and
inc
mov
ja
test
popw
xchg
inc
loope
in
clc
jecxz
test
mov
shl
imul
xchg
or
hlt
sarl
dec
mov
sti
inc
mov
add
or
rcrl
sbb
push
mov
gs
push
mov
and
aam
jnp
pushf
xchg
mov
jne
mov
cli
cmp
jg
add
push
enter
popf
inc
pop
gs
in
gs
out
xchg
pop
loop
test
inc
push
stc
mov
scas
fwait
or
fwait
xlat
roll
mov
mov
insl
ret
arpl
and
shlb
dec
notb
mov
pop
fcmovu
out
push
dec
pop
pop
adc
testl
arpl
add
dec
or
and
sub
clc
loop
xchg
ret
pushf
or
pop
xor
incl
inc
cmpsb
ret
mov
test
pop
fstp
push
xchg
aaa
arpl
loop
pop
lods
and
bound
mov
cwtl
mov
gs
push
mov
pop
push
shl
inc
xchg
push
stc
sbb
pop
dec
add
lcall
lret
push
lret
je
cld
cmp
ret
lock
cmp
imul
xlat
fs
cmpsb
sub
fs
pop
sbb
adc
adc
adc
sbb
push
push
and
repnz
sub
sbb
and
cmp
movsb
cmpsl
adc
jl
fsub
pop
jle
loopne
out
fcompl
int3
jl
lods
jo
lea
cli
jne
stos
subb
cs
push
cld
mov
je
popa
cltd
rorl
jbe
dec
call
sub
or
lahf
aam
dec
mov
roll
or
or
push
push
pusha
sbb
push
and
std
cmc
mov
mov
std
data16
mov
addr16
out
rorb
adc
push
xchg
out
jmp
mov
jecxz
and
popa
cli
stos
in
fiadds
jg
jmp
dec
into
mov
imul
in
shl
adc
sub
push
xchg
int
int3
sub
and
ljmp
mov
sub
jp
push
movsb
or
ficomps
pop
sti
xchg
fsts
mov
pop
stc
cmp
ret
adc
sbb
sbb
shll
cmp
add
pusha
inc
cmp
cmpb
negl
cs
stos
xchg
mov
in
das
cli
dec
shrl
js
mov
or
pusha
xor
jo
jg
cltd
cld
pop
roll
jg
dec
jo
pop
and
adc
xor
les
lea
or
cmpb
ss
add
addr16
jns
mov
ja,pn
pop
es
sbb
dec
popa
stos
inc
leave
cmovle
xor
sub
dec
mov
fisttps
test
in
xor
inc
sub
lds
ret
fadd
mov
dec
cwtl
sub
sbb
das
fstp
push
pop
ret
shl
out
outsb
jge
xor
iret
cmp
cltd
fidivrl
sbb
xchg
out
push
sahf
insl
and
xchg
jle
out
leave
adc
arpl
or
inc
je
roll
or
cld
add
cmp
mov
mov
lret
dec
repnz
es
pop
xor
push
in
test
ficoml
adc
xor
mov
mov
dec
aam
or
sahf
jno
xchg
sub
mov
std
lret
nop
iret
push
lret
and
enter
ljmp
mov
into
push
sub
and
addr16
cmp
adc
outsb
out
loop
cmp
jle
enter
std
xchg
or
xor
pop
inc
dec
cltd
out
subl
out
pop
sub
aas
sbb
push
int3
idiv
jb
lods
outsb
or
cmp
rep
push
addl
es
inc
sar
adc
push
jo
icebp
fcoml
mov
gs
fnsave
push
mov
adc
out
mov
dec
and
fildll
xchg
mov
cs
mov
xor
stc
pop
dec
bnd
push
xor
mov
add
mov
dec
sub
mov
fistpl
mov
jb
mov
sub
popa
adc
inc
rcl
ds
pop
insl
push
std
lcall
das
cmp
lea
icebp
stc
aad
call
int3
pminsw
sub
jae
add
fdiv
pop
mov
data16
cmp
jg
or
jl
and
xchg
add
lret
dec
xchg
or
lods
xor
mov
xor
lcall
ds
pop
out
xor
jmp
jp
and
movsb
aam
int
repnz
push
or
fcmovnu
jb
out
test
pop
xchg
adc
add
int
sub
clc
enter
cltd
icebp
jecxz
movsl
stc
add
pop
dec
sbb
inc
popa
xchg
insb
add
sbb
push
aaa
inc
rcll
jb
jmp
loope
addl
imul
pop
cmp
out
les
lea
inc
and
rcll
pop
rolb
popa
adc
int
and
fdivl
mov
sbb
jl
or
xchg
add
inc
enter
mov
cs
subl
jl
mov
and
mov
sarb
mov
fnstcw
mov
dec
cltd
out
sub
or
add
into
add
popa
jg
inc
ficoms
xor
and
in
rol
pop
sar
sbb
cwtl
jbe
lds
xchg
push
push
push
jle
test
ficoms
cmp
fs
push
cmp
xchg
cld
stc
lods
adc
push
test
jg
add
sub
sahf
test
or
into
fidivrs
cmp
test
loop
inc
pop
cld
popf
push
and
pop
pushf
in
cmpsb
push
cmp
in
mov
loope
pop
inc
dec
sub
pop
mov
scas
or
add
pop
and
adc
xchg
mov
dec
jno
cmp
pop
mov
test
add
scas
sbbb
mov
mov
sbb
out
arpl
sbb
adc
scas
filds
lea
push
push
add
xor
cltd
pusha
push
aaa
jge
xor
sub
imul
out
in
je
sti
pop
xchg
push
jne
mov
dec
incb
int
mov
sti
adc
xchg
popa
xor
or
push
or
bound
jge
jl
and
xchg
enter
bound
cmp
insl
std
in
xor
loopne
mov
stc
movsb
ficoml
or
push
imul
outsl
fsincos
out
shlb
cli
mov
stos
imul
jbe
int3
lret
inc
add
mov
imul
and
movsb
push
cmp
mov
push
sub
fisubrs
iret
les
push
jo
shll
ljmp
outsb
xor
xchg
outsl
imul
jno
mov
and
das
fcmovbe
arpl
push
insb
fsubl
inc
js
loop
cs
cltd
fildl
test
in
clc
xchg
lea
xchg
mov
imul
addr16
and
xchg
movsl
dec
jns
dec
sbb
out
cwtl
call
xchg
inc
bound
sti
or
pop
jno
mov
inc
repnz
push
icebp
ret
mov
cmp
push
fstpt
xlat
in
sbb
int3
dec
ljmp
in
mov
pop
cmpsl
out
outsb
mov
mov
mov
sbb
push
lods
jb
sbb
push
inc
inc
push
fidivs
inc
xor
loopne
leave
std
imul
inc
outsl
push
mov
adc
stc
enter
in
pop
push
arpl
jno
cmp
loope
nop
loop
jp
add
xchg
lods
mov
imul
xor
in
jb
sbb
pop
mov
mov
cld
shl
push
shll
lods
loope
call
in
jmp
mov
adc
movl
dec
loopne
test
dec
mov
das
push
push
add
aas
ret
or
xchg
les
fcmovnbe
jnp
jo
mov
inc
and
push
in
cltd
and
and
cmp
dec
jecxz
or
push
aas
subl
int3
arpl
adc
daa
ss
xor
mov
mov
inc
adc
push
xor
pop
pop
insl
dec
adc
dec
decb
gs
enter
ja
sbbl
xor
test
sub
repz
cmpsb
dec
mov
data16
inc
mov
inc
gs
inc
fldt
mov
inc
pop
xor
adc
push
dec
mov
movsl
hlt
es
or
inc
adc
and
lcall
dec
dec
xor
add
fs
orb
jp
xchg
mov
or
je
out
rclb
in
icebp
scas
pop
mov
lret
sbb
jl
mov
add
ljmp
cmp
push
xchg
loop
pushl
jmp
inc
rcrl
push
mov
add
mov
jo
cmp
arpl
sti
decb
rcrl
mov
int3
out
stc
lods
loop
adc
leave
std
cs
inc
je
mov
jb
pop
pop
mov
cmp
test
out
push
jbe
dec
cmp
push
in
push
dec
or
fcmovnbe
lahf
out
ja
sbb
enter
pop
repz
jl
cmp
pop
xor
mov
lcall
mov
and
xchg
inc
xlat
lret
inc
leave
sti
push
rorl
mov
mov
push
inc
inc
enter
jle
and
mov
dec
xchg
pop
ds
xor
pop
test
rolb
das
iret
xorb
scas
mov
jmp
jle
rcl
inc
aad
fisubs
cs
test
andps
ret
xchg
pop
add
mov
mov
jmp
dec
jne
fdivl
xchg
or
mov
in
mov
push
and
sub
push
mov
xchg
mov
movsb
jle
std
aas
mov
sbb
fwait
xchg
sahf
mov
ficoms
fnstsw
inc
jb
cltd
inc
lcall
mov
shll
xlat
push
fldt
mov
pop
or
pop
jo
sub
lock
push
mov
lahf
xchg
hlt
addr16
adc
jecxz
mov
stos
mov
bound
cmpsb
int
aad
sbb
mov
cwtl
incl
test
int3
sub
xor
mov
inc
jb
pusha
xchg
dec
lcall
and
pop
adc
inc
or
not
inc
je
add
mov
xlat
xchg
dec
fisubs
add
int
pop
repz
cld
test
xchg
addr16
repnz
push
outsb
jg
mov
lock
xchg
lret
shl
dec
xlat
rcll
pushf
cmp
lahf
xchg
sbb
mov
cmp
bound
icebp
adc
cld
iret
xor
mov
sbb
xor
adc
xchg
daa
cmp
adc
test
mov
shrb
lret
push
lret
mov
negl
mov
jbe
sub
sbb
sub
ds
xlat
jns
dec
scas
xchg
addl
in
addr16
mov
jns
cwtl
cmc
mov
mov
dec
push
outsb
add
jge
sub
adc
xchg
sbb
cmp
xchg
sbb
shll
ds
clc
mov
sub
nop
shrl
jp
mov
in
sub
iret
test
sbb
adc
fsubs
or
jnp
and
iret
or
jns
int
add
into
imul
sbb
add
add
mov
or
dec
push
pop
aam
push
test
scas
push
sti
das
testl
out
test
pusha
sbb
shlb
daa
sbb
mov
test
xor
aaa
test
cmpsb
test
sbb
jmp
mov
xor
scas
sub
xchg
cmp
inc
aad
loope
scas
movsb
loopne
mov
push
push
fdivr
xchg
sbb
packuswb
push
pusha
cli
pop
pop
xlat
mov
ja
imul
xchg
and
jp
push
cmc
add
clc
repz
orl
aaa
iret
fs
cmpsl
sbbl
cwtl
mov
sbb
mov
push
jns
leave
sti
cwtl
dec
loopne
fidivrl
cmc
stos
mov
dec
mov
cmp
gs
inc
fwait
xchg
push
sbb
cmpsb
sbb
jae
jbe
in
aam
sbb
cmp
add
std
xchg
jno
pop
push
xor
inc
xor
mov
das
and
inc
jle
adc
mov
test
xchg
out
stos
push
fnsave
scas
es
ljmp
cmp
insb
or
outsl
xchg
out
inc
jl
fadds
inc
fildl
mul
enter
je
mov
mov
scas
jbe
mov
cmpsb
rcll
aam
sbb
xchg
lds
sbb
in
push
sub
and
mov
jmp
stos
and
out
jns
nop
jge
scas
inc
xor
sub
push
imul
add
push
daa
icebp
popa
push
mov
jp
loop
or
mov
lcall
pusha
jno
cmp
fmul
mov
add
jmp
mov
push
mov
sbb
hlt
xlat
shrb
and
adc
push
pushf
adc
loope
sbb
mov
mov
or
mov
inc
push
push
test
shrl
xor
cmp
jg
sarl
in
dec
addl
mov
sbb
std
hlt
lock
cld
into
or
cmc
push
rclb
xchg
cmpsl
jae
mov
fwait
push
testl
xor
push
cmp
mov
aad
popa
push
dec
decl
ss
mov
mov
inc
scas
mov
sbb
mov
loopne
pusha
push
incb
push
push
xchg
ficompl
cmp
or
inc
jo
push
loope
adc
cmp
pusha
adc
mov
mov
les
pusha
pop
jl
in
sub
sbb
stos
push
mov
jge
fs
inc
std
xor
adc
push
outsl
ja
sub
data16
aad
xchg
lret
std
sbb
mov
lahf
test
repnz
jp
arpl
cltd
ret
clc
sbb
test
cmc
mov
cmp
imul
loope
mov
push
std
ret
jo
add
bnd
mov
push
scas
fdivrl
add
xchg
std
or
ja
fadds
mov
test
aam
in
cltd
call
aam
add
lahf
out
jecxz
addr16
add
ds
sbb
sti
sbb
popf
sbb
inc
orl
adc
inc
adcl
test
adc
mov
mov
imul
mov
aas
add
fs
sbb
cld
sub
adc
mov
sbb
jns
rcr
dec
or
add
or
jb
xchg
xchg
mov
or
outsl
insb
xchg
int3
cmc
lret
push
cmp
xchg
sub
movsb
add
mov
cmp
add
cmp
clc
sbb
sub
dec
mov
xchg
arpl
std
add
cmp
push
mov
push
setnp
into
outsl
cmp
jmp
or
adc
dec
gs
dec
mov
jno
push
sbb
inc
mov
cltd
mov
in
aas
xor
sub
fs
aam
loop
in
icebp
std
addr16
jae
popf
xorb
or
dec
jnp
mov
push
ds
sahf
inc
les
cmc
into
xchg
cmp
jns
and
mov
xor
fidivl
cmp
sbb
xchg
popl
cmc
fidivl
mov
sbb
sub
inc
xchg
jae
outsl
dec
inc
sub
xor
or
adcb
pop
push
dec
add
and
js
add
imul
adc
cmp
cmp
pop
mov
dec
mov
cmpsb
imul
popf
aam
pop
cmp
sbb
and
es
sub
xor
jp
lahf
outsb
cltd
pop
sarl
cwtl
jecxz
insb
fmull
adc
stc
xchg
insl
iret
cmc
pop
cwtl
cltd
push
adc
xlat
stos
ret
jmp
add
push
xchg
xorl
jne
lds
cmp
mov
mov
mov
inc
movsl
jnp
in
push
xchg
lahf
or
pop
mov
or
mov
imul
jno
xchg
mov
out
sub
test
mov
je
jnp
sub
insb
xchg
sbb
fmul
lret
negl
mov
imul
inc
shrb
xor
in
xchg
adc
mov
xchg
popa
out
bound
xchg
cld
jae
outsl
pop
pop
nop
adc
push
mov
mov
sub
nop
ss
cmp
sbb
xchg
cmp
sub
sub
cmp
std
cli
int3
sarb
mov
fucomi
in
mov
ror
roll
andb
iret
mov
and
jo
test
out
fldenv
or
inc
push
adc
cli
lret
or
xchg
into
dec
sub
cmpb
inc
lods
xchg
pop
aaa
cmc
mov
dec
add
je
ds
jmp
daa
sbb
push
pop
adc
mov
xor
call
frstor
pop
adc
sahf
stc
and
xor
gs
push
adc
inc
sub
mov
shll
pop
sbb
adc
dec
mov
fistpll
xchg
mov
or
sbb
jp
js
ds
cmp
jne
movsb
aam
lahf
sbb
sahf
and
cwtl
into
push
arpl
loop
mov
xchg
lahf
jmp
popa
int
and
and
mov
xchg
xchg
xchg
pop
das
rol
popf
rorb
cltd
dec
or
cli
sbb
idivl
push
and
mov
insl
lcall
clc
imulb
mov
aad
pop
rcrb
push
xchg
pop
inc
imul
cltd
ret
inc
aaa
fnstcw
pop
push
mov
iret
cld
xchg
mov
bnd
cld
pop
loope
lea
mov
or
sub
add
std
pop
jae
jmp
pop
arpl
xchg
xchg
jecxz
fidivrs
fs
inc
add
icebp
inc
sahf
iret
stos
ja
je
xor
pop
pop
pop
testb
mov
jo
fcmovb
je
cwtl
jo
repnz
jnp
rcll
inc
adc
dec
stc
push
ficompl
pop
xchg
not
lahf
lock
cmp
pushf
ss
cmp
addl
jmp
ret
cmpsb
inc
mov
pop
dec
pop
xchg
mov
push
add
ss
xor
add
pop
pusha
loope
xlat
pop
lods
insb
int3
inc
in
arpl
pop
in
cmpsb
mov
dec
xor
cmp
mov
std
push
cltd
inc
xchg
clc
sbb
out
xlat
sti
imul
comiss
push
push
mov
mov
inc
jns
and
ret
aam
pop
sbb
pushf
push
movsb
adcl
loopne
xchg
fwait
into
mov
ret
xchg
sahf
fisttps
rcll
and
pop
xchg
testl
ret
jae
loopne
mov
mov
insb
cs
mov
shl
xor
mov
andb
and
fiadds
fcomip
std
sub
pop
lcall
out
in
mov
scas
stc
sub
cmp
push
int3
out
imulb
in
dec
int
add
and
push
faddl
out
inc
enter
fwait
push
cs
pop
into
adc
mov
rclb
jnp
scas
xor
cmc
jmp
and
add
and
hlt
push
ljmp
das
ss
adc
cli
sti
enter
mov
jne
push
push
jmp
out
aad
imul
push
inc
repnz
sub
cmpb
loope
xchg
dec
or
jo
push
dec
dec
mov
jmp
movq
inc
push
scas
xor
lds
and
and
out
sti
shrb
sbbl
mov
mov
loope
sbb
xor
sarb
lret
push
pop
jle
inc
and
cltd
clc
sub
xlat
adc
sub
outsl
insb
mov
ja
call
mov
das
incb
adc
pop
iret
add
scas
sub
jmp
pop
mulb
mov
inc
sub
sub
mov
jmp
mov
pop
xchg
stos
repz
scas
fisubl
xor
aaa
jne
mov
addr16
insl
cli
fiadds
push
test
in
fs
jg
add
sbb
insl
aad
ret
insb
rorb
sbb
fcmovbe
out
pop
pusha
int
lret
or
sub
ja
xlat
pop
add
call
out
dec
iret
dec
test
mov
dec
hlt
add
mov
out
jecxz
dec
pop
or
inc
push
cmp
in
ja
jmp
ficoml
sub
pop
adc
pop
jmp
cmp
int
nop
test
insb
fdivrl
mov
outsb
inc
imul
jnp
mov
mov
sub
mov
test
loope
and
fwait
ss
jmp
and
pop
ljmp
xchg
cmp
cli
pop
rcl
imul
dec
insl
pop
pop
fidivrl
cmp
jle
jle
cs
and
adc
sub
jo
clc
imul
dec
aam
cmc
or
cmp
mov
or
stos
test
adc
push
adc
cmp
scas
mov
adc
and
fwait
or
cmp
push
and
pop
mov
inc
add
mov
and
loop
mov
and
mov
cmp
ret
inc
or
sarb
repnz
lret
jmp
aad
push
cmp
into
mov
andb
cwtl
adc
rorb
or
fistpll
mov
scas
iret
ljmp
roll
dec
sbb
popa
cs
fidivrl
xchg
lds
cmpsl
mov
imul
inc
cld
cmp
mov
lahf
push
cltd
lock
lcall
jns
cmp
fisubrl
inc
push
push
and
shlb
fs
sbb
and
lret
fdiv
xchg
cmp
fcmovne
or
mov
jecxz
xor
int
adc
cld
in
add
or
xchg
leave
xchg
push
jb
cmp
and
add
in
in
jne
add
sub
pop
jb
iret
lret
push
push
test
shrl
adc
xchg
sub
add
inc
hlt
xor
rorb
push
push
in
ljmp
xchg
mov
mov
int
lods
popf
and
dec
pop
sbb
pop
sub
xchg
mov
sub
xor
add
jb
xor
sbb
and
fdivrs
aad
test
lds
mov
mov
in
add
inc
dec
cmp
cmpsb
or
xor
or
fdivl
jmp
inc
lds
pushl
mov
movl
icebp
pop
pop
sub
sbb
sahf
scas
push
or
sub
pop
mov
dec
fdivrs
push
cmpsb
ficoms
xchg
out
fs
clc
pop
or
cld
add
lock
leave
lcall
dec
jmp
lret
lea
dec
out
fdivp
dec
jns
int3
mov
stos
jge
inc
in
in
mov
stc
cmpsl
movsb
sub
mov
mov
rolb
xlat
movsl
pop
inc
mov
jo
shrb
xchg
and
repz
addr16
daa
pusha
mov
jo
cmpsb
clc
jb
in
pushf
pop
lea
dec
scas
add
shll
add
cmp
cmp
into
loopne
jge
mov
jmp
xor
or
lcall
pop
pop
test
nop
gs
jae
jb
add
push
xor
adc
or
add
sbb
sbb
mov
jg
dec
sbb
notb
mov
push
fwait
push
ja
pop
mov
dec
cmp
ret
cmpb
jne
sbb
dec
ret
scas
rcll
or
or
pop
fs
push
popa
pop
loopne
int3
leave
dec
xchg
adcl
sub
call
mov
mov
lock
imul
mov
inc
xor
xor
pushf
push
jbe
push
lds
xchg
mov
shlb
sub
test
inc
lods
lock
in
addps
movsb
mov
scas
fs
inc
aas
je
mov
mov
pop
and
test
repz
insl
hlt
inc
jg
xor
in
cmp
dec
sub
rcrb
int3
orb
inc
aaa
cli
out
lods
movsl
arpl
pop
int3
and
inc
mov
call
cld
lahf
rclb
inc
jb
out
cmp
in
in
xor
call
repnz
fists
hlt
push
mov
imul
fnstcw
cmp
xchg
inc
enter
repz
inc
fs
lahf
mov
xchg
shlb
dec
aam
insl
inc
fnstcw
or
adc
or
mov
lahf
xor
cmc
sbb
movsb
add
xchg
aaa
rol
lods
fadds
in
or
push
mov
outsl
fwait
cmp
fwait
mov
jl
mov
or
out
test
loopne
mov
sub
cmpsb
sub
lret
sarb
xchg
push
jmp
sbb
shll
imulb
jge
in
int
lock
fdivl
cli
cmp
addb
fidivl
pop
lret
mov
pop
cmp
loopne
dec
icebp
roll
aas
mov
jne
jg
cmp
rclb
mov
push
add
jge
jg
cld
test
jl
mov
cmp
cmp
in
sbb
rcl
out
dec
pop
lods
jecxz
xchg
sbb
enter
push
jmp
pop
test
inc
fcoml
mov
jmp
sahf
nop
pop
and
lret
add
push
int
cmp
inc
pop
sbb
stos
orl
push
cmp
lods
xor
sbb
dec
push
or
icebp
sub
push
shll
add
imul
out
aaa
adc
jmp
sahf
js
out
inc
xor
ror
out
movsb
repz
xor
mov
in
scas
loopne
xchg
data16
out
xchg
clc
in
and
pop
mov
mov
pop
jnp
mov
sub
inc
rcll
scas
aad
mov
adc
push
popw
fdivs
pop
and
xor
int
sbb
mov
push
jg
jbe
jg
push
mov
in
jl
imul
icebp
cli
mov
mov
mov
dec
in
cmp
xchg
and
int3
push
fwait
in
insl
cmpsb
push
xor
mov
mov
sar
inc
sbb
ljmp
pop
cs
arpl
cmpsb
jne
or
sbb
bound
sbb
jge
push
add
push
stos
fs
in
out
jge
push
test
mov
pusha
or
lock
fsub
mov
subl
aas
add
mov
cltd
in
push
xchg
es
outsb
mov
mov
les
sbb
rcll
repnz
mov
mov
inc
shlb
push
jb
xor
or
xchg
and
mov
test
fld
mov
mov
gs
call
push
push
mov
addb
mov
into
cwtl
mov
addr16
fsubp
aas
outsl
nop
add
punpckhwd
pop
cmp
adc
loop
test
mov
cmpsl
pop
push
adcb
xor
sub
jne
add
inc
jo
pop
daa
insl
int
mov
psubd
sub
push
xchg
rol
add
lea
mov
sbb
fisubrs
bound
loop
int3
stc
sub
out
and
popa
mov
jne
aaa
or
push
push
popf
test
fistpll
mov
dec
adc
bound
movsl
cmp
lahf
xor
push
push
sub
sti
out
test
push
sahf
orb
sbb
mov
pop
lods
cmp
dec
sub
sub
mov
xor
and
shlb
mov
xor
add
adc
lds
cmp
jb
push
lds
inc
adc
adcl
test
enter
scas
iret
jbe
or
mov
sahf
mov
insb
pop
fisubl
mov
in
movsl
dec
mov
fldl
push
cmpsb
adc
and
add
addw
pushf
in
arpl
lods
mov
es
fwait
in
xor
jnp
pop
or
xor
sarb
shlb
lahf
push
cmp
addl
and
in
xor
sbb
and
xchg
fmuls
mov
xchg
outsb
leave
mov
dec
andl
xor
push
popl
dec
jge
mov
and
sarl
xchg
and
mov
sub
bound
sub
push
dec
pop
aas
adc
and
add
cwtl
out
push
push
lret
popa
and
inc
and
cmpsl
jb
repnz
push
mov
mov
lods
fimuls
pushf
fs
mov
jecxz
and
stos
das
outsl
cmpsb
stos
sub
push
shll
push
sub
xchg
dec
test
xlat
lcall
hlt
sahf
lahf
cltd
jle
mov
dec
inc
mov
sti
xchg
cmp
mov
test
sbb
repnz
aad
and
scas
cmpsl
movsb
aad
shrl
mov
loope
pop
jne
jecxz
and
mov
inc
jb
mov
hlt
cs
sbbb
fcomip
std
adc
repnz
out
fwait
push
mov
and
sbb
jg
push
stos
js
rcll
sub
xorb
pushf
xor
int3
enter
push
aad
cli
je
sub
movsl
mov
repnz
mov
dec
call
pop
movb
or
in
aaa
daa
js
inc
insl
push
rol
loope
pop
ret
fstl
stos
cld
fdivrs
mov
adc
lret
pop
ror
popf
xchg
cltd
pop
scas
push
shl
fstpt
lea
cmp
movsb
jmp
add
inc
add
dec
push
cmp
jnp
out
and
sbb
mov
cltd
ss
aaa
imul
jp
xor
int
pushf
enter
pushf
sbb
mov
lcall
imul
sbb
in
jbe
or
jg
fimull
jb
hlt
push
repz
dec
push
inc
pop
ds
lcall
mov
mov
sub
popa
push
aas
jns
loopne
out
push
cmp
jl
mov
cld
ret
roll
ret
cltd
cltd
add
mov
rcrb
inc
pop
adc
xor
out
mov
sub
sub
ret
adc
gs
and
add
xor
or
daa
pop
dec
idivl
cwtl
inc
sti
jne
int3
shll
jg
fstpt
lea
pop
jnp
cld
inc
movsb
ret
inc
adc
sub
out
mov
dec
inc
clc
sbb
call
xchg
bound
dec
jge
ror
loop
adc
int3
inc
xlat
sub
cwtl
repnz
imul
xchg
jecxz
lock
cmpsl
cmp
xchg
dec
dec
push
dec
push
push
jle
es
push
popf
push
stos
sub
lods
hlt
insb
scas
idivl
jp
fwait
cltd
inc
mov
int
rcrl
in
out
add
mov
dec
fdivs
cltd
xchg
aad
jmp
cmp
arpl
add
clc
push
push
mov
fwait
xor
je
adc
es
test
cmpsl
or
sbb
adc
shlb
aaa
mov
push
out
faddl
cs
add
fisubs
arpl
mov
arpl
scas
test
scas
and
push
inc
jno
pop
fwait
imul
mov
sbb
mov
sub
adc
or
mov
inc
loop
pop
fwait
ljmp
pusha
adc
mov
dec
loope
ficompl
xor
lds
loope
pushf
jno
or
fimull
or
out
sahf
push
mov
push
mov
push
out
mov
mov
in
into
lret
mov
sub
cmpl
fisttpll
icebp
mov
add
mov
fs
loop
daa
xor
notb
shll
cld
and
filds
jg
mov
push
sub
inc
lret
rcr
mov
mov
rcll
push
gs
add
shlb
in
mov
fiaddl
aam
mov
push
scas
out
nop
sub
xor
aam
adc
faddl
pop
add
leave
sub
xlat
pop
out
int
mov
xchg
add
dec
imul
ret
es
jbe
or
add
pop
push
cmp
je
jbe
loop
cltd
sbb
cmp
push
and
jmp
jb
test
and
cmpsl
icebp
fldenv
mov
andl
insl
cmp
popa
sbb
pushf
push
addl
ja
ror
mov
shll
outsl
cmp
mov
orb
arpl
pop
data16
fidivrl
xor
mov
aad
mul
fisttpl
loop
insl
push
fnstenv
and
push
mov
movsl
pop
sar
out
andl
in
dec
cmp
sahf
out
in
cmpl
es
pop
movsl
lcall
sub
jmp
stc
xlat
fcomps
push
insl
stos
or
add
lret
mov
aad
push
lock
rorb
hlt
testb
icebp
gs
inc
sub
jecxz
outsb
cmpl
sbb
add
add
dec
lret
scas
fists
dec
test
fwait
lret
lea
loope
dec
rclb
cmp
fcomps
aad
jae
fnstcw
ss
or
insl
pop
and
push
jge
ja
idivb
hlt
clc
gs
and
mov
xor
mov
lcall
daa
cmp
stos
mov
or
inc
sub
xor
and
and
test
cmpb
jl
mov
pop
or
pop
cmp
imul
call
cmpsb
sub
in
sub
out
std
pop
rol
mov
bound
mov
mov
imul
sbb
test
xchg
sbb
or
cmp
pop
sbb
std
and
repz
fisubrs
sub
mov
dec
mov
sbb
add
out
xor
pop
in
dec
mov
adc
hlt
out
mov
idivb
fimuls
iret
es
mulb
jmp
fdiv
inc
sti
js
xchg
xor
das
cli
loopne
lahf
cmp
mov
mov
incl
adc
push
sub
xchg
aaa
shlb
cmp
xor
testb
inc
cs
adc
cltd
ss
decb
cld
loop
leave
mov
or
sarb
ret
mov
pusha
xor
sub
jmp
and
mov
mov
fisubl
lods
sub
gs
sub
int
mov
stos
test
cld
jae
jns
sbb
pop
push
insl
mov
push
push
add
xor
sub
lret
sub
or
jecxz
jle
addr16
mov
dec
repnz
xor
sub
je
pop
mov
sbb
movsb
xor
insb
push
xlat
ftst
pop
and
sub
or
sbb
mov
imul
inc
xchg
xchg
jnp
cmp
fstpl
sbb
and
mov
and
mov
scas
add
mov
jp
sbb
jp
cld
stos
loop
in
nop
fdivrl
jp
push
xchg
cmp
cmc
jne
lcall
xor
xor
test
divb
xchg
inc
mov
sbb
sbb
sub
shrl
xor
mov
in
and
push
fistps
std
and
xor
fiaddl
roll
pusha
std
les
mov
call
dec
into
decl
and
insl
add
jp
test
adc
mov
push
test
xor
cmp
loopne
lret
les
ret
dec
mov
shlb
loope
xor
loope
push
insb
aaa
sbb
mov
jmp
cwtl
sub
fstpt
test
adc
adc
popa
jnp
mov
lret
pop
push
retw
iret
xchg
adcl
cmp
test
xchg
mov
stos
mov
xor
mov
in
mov
inc
push
adc
adc
adc
fs
in
jle
mov
dec
cmp
lahf
ds
sub
enter
shlb
push
jbe
push
adc
push
pop
xchg
lock
dec
jns
incl
inc
fisttpll
dec
push
sbb
cmp
sbb
jns
adc
rcl
dec
imul
les
shl
mov
jno
cmp
je
bound
mov
mov
gs
clc
jbe
aad
mov
push
bound
cmpsl
stc
jmp
mov
xchg
fsubrl
dec
or
data16
pop
ja
xor
int
jmp
rorb
mov
cmp
cwtl
mov
aad
pop
in
dec
push
in
pop
aas
push
into
adc
hlt
push
loopne
shll
jg
jecxz
mov
lods
inc
daa
adc
mov
movsl
stos
sub
xor
push
xlat
inc
xchg
pop
sbb
mov
movsb
loopne
push
into
mov
mov
cmc
in
daa
inc
xor
sarb
std
int3
push
push
lret
inc
mov
mov
inc
jae
pop
or
test
popa
fsubrl
jo
sbb
or
sub
adc
sti
lret
mov
imul
inc
ret
daa
ja
jecxz
fucomi
lds
adc
and
push
or
idivl
imul
dec
jo
adc
mov
xchg
xchg
jns
std
pop
in
popa
stc
loope
or
and
cmpsb
je
push
repnz
dec
xchg
add
sbb
divb
push
add
cmp
fs
jnp
imul
and
mov
jnp
cmp
jmp
push
loop
test
jge
shlb
popa
pusha
mov
aas
ja
and
mov
in
inc
xor
loopne
ss
dec
xchg
mov
push
pop
leave
aas
pop
scas
jmp
cmc
lahf
aas
call
dec
scas
lahf
xchg
mov
jg,pt
mov
add
mov
out
movsb
push
inc
dec
inc
dec
sahf
out
push
push
repnz
mov
cmp
push
repz
push
ds
push
sbb
jae
dec
xor
daa
in
test
loopne
xchg
insl
mov
jnp
dec
cmc
adcl
dec
xchg
push
dec
xor
mov
inc
sub
push
and
add
and
nop
test
sbb
xor
pop
popf
adc
insl
sub
scas
loop
xor
xchg
xchg
jp
test
or
xchg
xchg
push
cmp
jns
scas
test
push
fildl
inc
int
mov
xchg
rcrl
dec
ret
and
xor
movsl
fsub
fists
pop
mov
or
daa
test
fs
dec
mov
and
sarl
pop
cli
cmp
xor
cltd
jl
stos
addr16
xchg
lahf
sub
and
js
xor
mov
mov
das
lds
jecxz
xlat
insl
mov
adcl
pop
icebp
out
ss
js
aas
inc
inc
add
mov
xchg
add
or
push
pop
lcall
and
ret
push
hlt
dec
adc
ret
xchg
jp
xchg
lahf
sbb
dec
rorl
loop
mov
jae
mov
or
sahf
cmp
jg
pop
push
inc
pop
push
mov
loopne
enter
inc
or
testb
out
lret
jne
or
cltd
fists
lds
les
jae
cld
pop
and
sbb
mov
sbb
mov
arpl
xchg
and
cmp
outsl
xor
mov
xchg
nop
dec
sti
sub
scas
or
ja
mov
xor
pop
pop
ret
das
ja
ljmp
pop
sti
movsb
cmpsb
insb
dec
push
push
push
lds
test
dec
orl
mov
and
xor
lods
stc
mov
inc
cmp
cld
mov
add
cli
sbb
adc
xchg
fwait
rorb
mov
sbb
mov
test
repnz
dec
into
pop
inc
mov
mov
mov
cmp
pop
adc
call
popf
mov
into
fdivrp
dec
mov
pop
cmpl
mov
xchg
sub
je
xchg
orl
dec
dec
pop
shrl
shrb
mov
and
inc
fwait
loop
rcrl
xor
lods
out
cwtl
popa
inc
scas
int3
gs
lret
dec
push
lahf
sub
repz
or
orl
sbb
pop
int
popf
mov
rcll
cmpsl
mov
cmpsb
jo
js
subl
add
loop
orl
enter
add
mov
xchg
leave
cmpsl
sbb
mov
ja,pt
pushf
ret
or
xorl
jmp
out
mov
sub
jns
lret
mov
sub
daa
mov
add
jl
mov
jle
sub
add
mov
dec
and
icebp
fisubs
fcoml
mov
jle
cmc
repz
dec
sbb
push
dec
loopne
cmpsl
std
mov
in
out
shl
ds
xor
mov
add
loope
pop
mov
sti
ss
adc
xchg
scas
cwtl
cli
sub
jg
lcall
into
je
mov
sub
ret
adc
das
xchg
inc
es
adcl
repnz
stos
jmp
pushf
and
cmc
shrl
push
lcall
notl
in
icebp
lahf
xchg
shr
shlb
adc
dec
sub
sbb
and
andl
dec
xor
popf
and
jmp
mov
jmp
inc
pop
xor
pop
sub
push
cwtl
jle
mov
and
xchg
pop
leave
or
fs
fisubrl
cmp
or
mov
sbb
loope
xchg
hlt
pop
mov
insb
jmp
cmp
stc
cmp
cs
lods
decl
scas
jg
arpl
inc
sub
mov
xor
or
dec
adc
mov
push
inc
and
andb
xlat
and
push
subb
push
ljmp
mov
xlat
jne
dec
dec
test
or
sub
cwtl
xchg
jne
pop
cmp
and
int3
mov
orl
jnp
insb
jo
movl
shrl
sbb
pop
jg
stos
rcr
lret
out
hlt
sub
aam
movsl
mov
xor
mov
or
in
inc
fwait
loop
test
out
xor
pop
test
dec
rcl
dec
mov
popa
daa
bound
int3
cs
aam
xchg
jmp
or
shll
adc
jnp
mov
jmp
mov
adc
mov
inc
xchg
shrl
mov
out
sbb
int3
xor
xor
mov
sbb
daa
adc
adc
call
xchg
xor
aas
out
pop
hlt
push
cmp
mov
and
dec
or
cmp
or
inc
mov
das
imull
sahf
cmp
insl
movsb
pushf
add
stos
pop
jecxz
filds
rolb
outsl
pop
pushf
adc
xor
and
mov
aam
lahf
pop
jl
mov
sub
out
clc
ja
sub
fmull
inc
mov
cmpsl
sub
mov
push
xchg
adc
js
cwtl
xchg
js
ret
add
xor
hlt
inc
pop
push
shlb
jns
xchg
idivl
mov
ss
movsl
inc
outsb
popf
scas
das
xor
addl
jge
push
adc
xor
icebp
or
pop
jmp
dec
or
imulb
sub
addb
orl
xchg
test
xchg
ljmp
push
push
jg
jae
cli
js
push
push
add
mov
push
push
dec
ret
popf
ret
imul
aas
or
or
push
cmc
xor
inc
jb
mov
leave
inc
adc
in
mov
push
aas
adc
jecxz
push
pop
test
cmc
sbb
mov
lret
cmc
lock
arpl
add
gs
in
outsb
fyl2xp1
fcoml
fcoml
add
or
pop
in
insl
sbb
int
je
xor
sub
cltd
lea
xorl
cld
icebp
je
in
mov
sbb
pop
mov
mov
sub
dec
cmovo
add
cld
mov
filds
shrd
dec
repnz
sub
mov
lret
jno
push
mov
lcall
ljmp
stc
sbb
cmpsb
inc
mov
faddp
xchg
cs
sete
sbb
adcb
add
fnstcw
je
fs
cmpsb
add
or
popf
daa
mov
ss
pop
ja
pop
je
mov
in
test
sbb
bnd
and
push
std
jle
jno
cmp
ja
xchg
pop
pusha
ss
xlat
movq
and
loop
mov
xor
movsb
and
add
outsb
pop
inc
sbb
xchg
pushl
es
sbb
mov
outsl
scas
cld
pop
out
adc
jno
gs
cmp
paddusb
add
mov
in
rolb
cmp
push
mov
stos
dec
es
or
push
pop
pop
or
into
fdivs
daa
dec
push
pop
lahf
pop
in
fisttpll
dec
mov
cmpsb
popa
jecxz
into
dec
rolb
sbbl
push
popf
jbe
call
das
mov
pop
lret
int
mov
ja
in
cmpsl
dec
dec
mov
push
in
sbb
sub
outsb
jp
in
in
sti
in
enter
jo
mov
shr
push
insl
pop
cwtl
cmp
cmp
pop
xor
das
xor
popf
jbe
jnp
adc
or
add
xor
sti
rol
daa
cld
xchg
cltd
jmp
repz
nop
out
jecxz
add
xor
gs
fidivrl
pop
lret
stos
jge
dec
sub
mov
imul
testl
out
lods
jecxz
inc
push
insb
or
pop
mov
and
mov
xor
popa
aad
test
xor
mov
fwait
out
fmul
pop
cmpsb
cmpb
jle
sbb
inc
mov
and
adc
insl
popa
push
shlb
mov
repz
lcallw
adc
out
push
fcmovu
and
scas
jmp
mov
arpl
push
lods
mov
and
rorb
mov
cld
out
iret
pop
out
into
rcl
mov
lahf
ljmp
cltd
js
cwtl
nop
shlb
fsubrs
mov
xor
aaa
dec
inc
in
ret
les
inc
jno
stos
sub
es
cmp
adc
insl
xchg
enter
pop
ljmp
addl
fisttps
inc
imul
test
rcrl
ficompl
aad
and
les
out
lock
into
pop
or
jg
mov
xor
pop
pop
and
test
sarw
cmpsb
and
dec
dec
out
in
mov
fbstp
mov
lds
fidivl
pop
shlb
aas
push
cltd
fildll
mov
loop
jbe
pushf
imul
push
sbb
ret
or
lret
ficoms
mov
add
add
lods
jae
xor
jno
clc
ret
popf
ret
fistpl
mov
decb
add
in
sbb
in
mov
lock
movsl
in
aam
lahf
test
adc
jne
iret
in
push
mov
movl
pop
xchg
xor
xchg
nop
xchg
xorb
inc
nop
hlt
xor
data16
xchg
mov
pushf
cli
dec
push
int3
jecxz
sbb
iret
sbb
pop
btrl
jle
cmp
mov
ja
cmpsb
or
mov
push
iret
fisttpl
jp
cwtl
jp
bound
sub
adc
ljmp
jno
pop
pop
fwait
xchg
sahf
rorl
pop
enter
das
outsb
xchg
imul
int3
sub
sbb
ds
insl
xchg
stos
pop
and
sub
lods
stos
fcoms
dec
setl
out
pusha
sbb
adcb
fimull
outsl
rclb
inc
addr16
mov
xor
nop
push
fldl
and
jge
lods
push
iret
sbb
push
xchg
mov
adc
xor
and
push
cmpsb
cltd
inc
mov
push
scas
pop
fldpi
jge
cmp
imul
xchg
loope
rcll
sbb
and
iret
cltd
loopne
loopne
xchg
int3
sbb
lods
fdivrl
out
jecxz
mov
dec
hlt
ficomps
cmpsb
test
push
mov
enter
sub
out
inc
nop
dec
aas
ljmp
push
sub
or
addl
push
sti
shrb
repnz
sbb
jnp
cmp
scas
adcl
push
in
jns
dec
push
das
ret
pop
xchg
add
and
inc
in
xor
xchg
pusha
inc
sahf
aas
bound
dec
int3
je
shll
or
mov
es
decb
out
pushf
cltd
icebp
inc
pop
pop
push
push
lods
aas
adc
xchg
adc
and
add
int
mov
cmp
sub
sahf
filds
mov
out
pop
cmpsb
out
add
push
gs
repz
insb
push
sub
popa
sbb
inc
mov
xor
mov
pop
cmp
outsl
add
push
mov
jl
leave
clc
cmc
in
sbb
or
pop
xor
aad
jo
das
pop
and
adc
adc
mov
mov
icebp
sub
leave
stc
stos
dec
mov
es
out
pop
les
adc
and
add
mov
push
nop
push
pop
mov
inc
mov
sti
xchg
arpl
mov
mov
jge
cmp
pushf
jae
pop
push
aad
sub
push
aam
mov
movsb
pop
ret
loopne
xchg
mov
and
test
in
push
lods
je
mov
test
add
add
mov
mov
mov
lret
shll
mov
jl
jbe
pop
sti
mov
mov
sahf
loop
mov
call
sub
pop
addl
push
add
mull
stos
int3
xchg
bound
adc
pop
ret
xor
pop
jmp
xor
lea
pop
shrb
jg
dec
adc
out
scas
call
jp
dec
jne
adc
in
sub
mov
and
xchg
mov
in
lcall
cmp
jns
jmp
or
pop
fwait
xchg
leave
in
mov
int
sub
lock
prefetch
jo
or
lea
fcompl
daa
dec
in
or
mov
rorb
call
in
nop
xor
push
iret
insb
xchg
mov
sub
push
pusha
push
cmp
push
test
stos
fistl
xchg
sbb
jl
xchg
rcll
pusha
cmp
stc
push
iret
xor
repnz
push
in
lock
pop
mov
jo
ret
pop
xor
test
mov
loopne
xchg
or
mov
enter
mov
xor
jo
in
cmp
iret
xor
movsb
pop
push
popa
mov
cmp
mov
ret
jecxz
addb
test
push
negb
cs
fldcw
xchg
rorb
sar
mov
dec
fstps
lret
xor
ret
inc
cmp
daa
and
clc
add
push
xchg
xchg
imul
rcr
or
fiaddl
test
adc
mov
xchg
adc
adc
movsl
out
cltd
test
rcl
lods
xor
jns
lods
test
sti
popa
mov
mov
dec
push
imul
lahf
aaa
adcb
push
clc
imul
out
es
push
pop
xchg
sahf
jmp
aaa
xor
mov
add
push
add
xchg
pop
std
int
mov
dec
mov
arpl
xor
inc
or
into
cmp
repnz
mov
xor
in
std
in
cmc
shlb
loop
push
in
les
in
push
sub
std
movsb
cmp
or
cmp
daa
or
xlat
mov
sbb
adc
xor
pop
in
cmpsl
cs
jge
hlt
mov
sbb
aad
ja
outsl
test
jp
gs
jg
xor
out
lods
loopne
and
popl
pop
bound
lods
idivl
in
push
shlb
outsb
arpl
stos
dec
cltd
inc
das
jns
sbb
adc
mov
shlb
cmp
add
loop
adc
xchg
dec
sub
icebp
adc
or
outsb
jb
pop
cmp
xchg
xchg
cwtl
mov
xchg
sub
mov
aad
lea
xchg
test
xchg
mov
test
fwait
jb
push
shll
mov
cmp
dec
sub
xor
xchg
dec
mov
stos
scas
mulb
pop
pop
pop
stos
adcl
aas
fwait
jno
sarl
push
cmp
pop
add
nop
sbb
and
fistpl
fisubl
sub
addr16
in
mov
es
jbe
and
pop
test
imull
push
sub
or
add
mov
scas
xor
add
or
or
pusha
mov
sbbl
stos
push
mov
stc
sub
ljmp
sub
inc
pop
xchg
scas
in
jnp
xor
jo
pop
sbb
int3
mov
or
xchg
xor
enter
and
mov
inc
arpl
movsl
push
cmpsl
ffree
push
fstpt
sti
jge
and
dec
aas
or
repnz
test
popa
leave
dec
int
mov
xchg
test
addr16
cmp
mov
push
mov
sti
adc
mov
mov
ja
pop
add
call
and
clc
inc
imul
xchg
or
sarb
arpl
stos
and
fcomps
xchg
mov
and
mov
vcomisd
scas
ret
out
adc
cmp
lret
push
adc
sbbb
jmp
mov
cmp
and
inc
out
cld
adc
out
and
sub
sbb
inc
and
inc
je
pop
xor
mov
faddp
adc
dec
std
mov
into
and
push
or
cmp
sarb
outsl
xchg
pop
stos
hlt
das
push
xor
push
iret
aaa
sub
or
pop
insl
or
icebp
insb
cmp
iret
add
pop
push
loop
sub
out
jb
and
dec
or
lock
mov
scas
adc
push
lahf
loop
lahf
test
movsb
daa
push
mov
rorl
cli
or
cmp
mov
mov
mov
inc
dec
adc
jl
sub
jmp
pop
push
cld
sti
pop
sub
mov
hlt
repnz
pop
mov
popf
lret
bound
add
adc
outsb
adc
cmpsl
push
aas
loop
test
fdivrl
mov
lret
push
sub
in
add
jl
cmp
shl
movsl
pop
test
inc
pop
fdivl
sti
test
pop
sarb
pop
xchg
mov
and
mov
rorb
scas
sti
icebp
call
jmp
inc
add
cmpsl
popa
or
lcall
mov
inc
pop
dec
jnp
inc
leave
add
pop
adc
outsl
cld
push
jns
js
sbb
hlt
adc
mov
jmp
jle
ds
dec
aam
dec
stos
push
scas
mov
pop
jle
push
movsb
adc
aas
out
and
andl
jmp
cwtl
push
std
cmpsb
pop
ret
add
adc
inc
dec
sub
inc
mov
sbb
fisttpll
or
fcmovnbe
sub
and
or
inc
jp
adc
push
pop
and
inc
pop
pop
cmp
lea
daa
pop
cltd
lcall
sub
outsl
in
xor
test
mov
pop
std
arpl
shrb
sub
jno
lret
nop
sbb
sbb
imulb
ds
mov
sti
cmc
sbb
mov
dec
mov
xchg
mov
aam
clc
fsubrs
ljmp
sub
in
ret
mov
cs
push
std
arpl
ds
shll
int3
sahf
fcmovnbe
mov
pop
cmp
insl
sbb
dec
fimuls
lods
enter
lahf
mov
sub
dec
inc
adc
dec
cmpsl
xchg
mov
fistps
cmpsb
mov
mov
pop
aam
add
sbb
cmp
cmp
adc
lods
scas
add
mov
inc
pavgw
adc
aaa
jbe
push
dec
mov
xchg
lret
in
mov
xor
mov
pushf
cmp
in
mov
push
pop
push
std
ds
icebp
ja
ss
sti
mov
and
outsl
fwait
das
add
mov
loopne
pop
xor
jbe
sbb
imul
pop
xchg
push
addr16
fldl2e
es
inc
add
push
and
or
jl
push
xchg
sbb
pop
sbb
hlt
jmp
xchg
jno
out
outsl
or
aam
dec
xchg
dec
int
ret
or
in
jmp
cmc
adc
sbb
rorb
cmp
xchg
xchg
or
pop
or
daa
adc
adc
dec
fimuls
pop
scas
mov
and
and
popa
ret
hlt
mov
adc
je
rclb
inc
mov
sahf
xchg
in
frstor
xchg
push
xchg
loopne
cmpsl
jle,pn
hlt
test
sbb
cmp
fwait
dec
inc
push
or
adc
stos
xor
sti
in
jge
fildll
pop
pop
mov
sbb
xor
pop
mov
mov
sub
pop
xchg
dec
popf
xchg
xchg
mov
dec
into
out
lret
and
sbb
loope
adc
out
lcall
in
out
std
push
cmpsl
mov
cmpb
cmp
or
fdiv
fdivl
inc
subb
jno
ret
mov
mov
mov
cld
sub
mov
pop
jecxz
cld
xor
leave
sub
lret
std
inc
sub
jno
pushf
cwtl
vphsubdq
dec
dec
sub
sub
hlt
out
mov
lds
test
push
mov
mov
notw
rcl
jl
push
jmp
test
int
les
pop
adc
mov
cli
jl
adcb
jge
mov
add
or
lock
test
cmpsl
dec
pushf
mov
sbbb
dec
mov
aam
mov
rorl
mov
adc
dec
imul
dec
xchg
jle
cmp
mov
aam
xchg
or
sahf
lret
mov
inc
aam
shll
in
xchg
rcrl
push
mov
xlat
jb
sub
test
sub
imul
mov
out
inc
movl
aad
js
dec
sub
xchg
xchg
repz
or
lahf
jnp
fnstcw
imul
and
lea
cld
sbb
pop
sub
out
mov
test
sbb
pop
ret
pop
daa
shll
xchg
or
in
jb
add
movsl
cmp
rep
mov
push
mov
cmpsb
cmpb
test
rcr
repz
mov
adc
push
insl
les
pop
test
inc
push
mov
mov
inc
js
xor
les
xchg
scas
fwait
and
xor
mov
push
fisubrs
cmc
loopne
adc
dec
scas
inc
lods
sbb
test
adc
cwtl
xchg
mov
mov
push
int3
sub
dec
lods
xor
imull
pop
pop
scas
sar
aam
subl
ret
arpl
xlat
fidivs
mov
push
popa
inc
ror
imul
jno
in
int3
ds
in
movsl
pop
notl
or
sbb
cmp
test
dec
test
cmp
jo
xchg
inc
mov
jl
insb
popa
and
xchg
orb
out
sub
sti
lret
mov
mov
mov
jne
push
inc
rcrl
and
ret
fistpll
pop
fdivrl
fnstenv
test
jbe
rcl
and
outsl
dec
cmpsl
pop
not
xchg
adc
xchg
xchg
icebp
sub
sahf
add
push
xchg
dec
call
fstpt
pop
aas
sub
sbb
pop
cmp
mov
and
loop
jbe
inc
rorb
dec
sbb
shrb
adc
sub
fstp
or
mov
mov
pop
arpl
or
out
sti
mov
inc
aaa
jne
add
popf
rcl
pop
out
xchg
xor
shll
push
fnstsw
inc
sti
mov
xor
push
jb
dec
push
movsl
dec
adc
in
dec
daa
aad
or
je,pt
dec
mov
jno
inc
cmc
in
push
insb
cmp
rep
xor
or
push
out
pop
jno
push
mov
cmp
jae
repnz
cmp
xchg
mov
mov
mov
lret
cmp
je
push
mov
out
imul
scas
inc
sbb
in
inc
inc
pop
aam
pop
arpl
out
cmp
ljmp
dec
sbb
pop
loopne
sbb
in
out
cmpsb
mov
insb
sub
dec
test
mov
cs
adc
aaa
shll
out
dec
push
sbb
je
jp
sub
cmp
jno
cmp
pushf
into
fistpll
loopne
outsl
shll
ror
cmp
ret
jl
xor
std
mov
or
mov
push
insl
jecxz
in
out
xchg
and
ret
push
mov
xor
pop
test
push
pop
movsb
mov
rcrl
jp
imul
mov
push
lret
ret
inc
or
cmp
movsb
cmp
repz
sbb
rcl
pop
sbb
mov
pop
lahf
push
cmp
lret
jbe
jae
jno
mov
sub
add
es
out
adc
xchg
cmp
sbb
dec
in
push
inc
push
data16
jb
dec
or
add
xor
loope
push
in
pushf
aas
aam
aas
pop
mov
xlat
and
lahf
orl
test
outsb
push
jge
test
lods
jbe
rolb
sbb
fisttpll
sbb
inc
mov
ret
push
repz
in
dec
sbb
out
shll
ja
hlt
incb
dec
js
push
sarl
inc
fs
inc
or
xchg
pop
cmp
add
pop
std
ljmp
mov
ficomps
push
stos
cwtl
push
lcall
insl
dec
xchg
push
ficompl
in
xchg
dec
lods
scas
or
mov
loopne
or
lcall
insb
push
mov
xchg
iret
mov
out
mov
sarb
les
sbb
or
ret
test
jl
scas
fdivs
sub
lock
push
push
ss
push
sub
dec
pop
xor
jecxz
repz
jle
mov
sbb
es
push
stc
inc
mov
inc
std
fdivrs
xor
push
sbb
lcall
xor
lahf
push
outsb
mov
xchg
sub
test
out
sbb
jno
shlb
or
push
cld
ret
push
cwtl
sub
push
fmulp
xchg
mov
cmpsl
push
out
and
insb
add
adc
xor
sahf
jne
mov
inc
jb
call
xor
xchg
shlb
push
cmp
stc
jbe
iret
dec
iret
dec
xchg
jnp
stc
ret
mov
inc
push
mov
pop
icebp
jp
insb
fistl
stos
mov
int
loopne
lea
test
repz
inc
or
addr16
inc
addb
lods
push
or
xchg
loopw
or
lock
push
mov
test
and
pop
or
fdivrp
loop
aas
pop
push
lods
jp
xchg
out
jo
push
xchg
or
rcll
inc
mov
rdtsc
lock
mov
ja
sub
nop
addb
mov
xchg
mov
xor
sbb
mov
jnp
insb
xchg
cmp
mov
jmp
lret
cs
rolb
add
fwait
pop
jbe
push
lcall
shl
es
mov
out
hlt
jnp
adc
cmp
lahf
nop
stos
in
jae
jle
jmp
fcomps
ret
icebp
fsubr
movsl
js
ret
inc
push
and
test
xchg
add
pop
jge
jg
or
cld
aad
jb
clc
lcall
sub
push
movsb
imul
mov
mov
or
lock
dec
icebp
pop
jno
jae
or
andl
test
mov
out
add
mov
aas
cmp
pop
mov
add
in
push
pusha
adc
mov
or
jno
mov
repz
movsb
sbb
add
popa
sub
flds
dec
fdiv
and
les
mov
in
cmp
xlat
out
rcrb
cwtl
push
outsb
pop
setg
dec
xchg
xchg
enter
pushf
pop
popf
cmc
fdivr
pop
mov
mov
sbb
cmp
pusha
clc
inc
inc
dec
lea
and
mov
sbb
fistps
sarl
test
fidivs
cli
sbb
xor
test
cli
pop
dec
lret
fwait
outsl
sarl
insb
movsbl
mov
mov
mov
adc
dec
push
pop
inc
mov
inc
outsb
inc
imul
dec
push
dec
jnp
fstpt
fildll
icebp
xor
icebp
dec
xor
out
aaa
mov
and
lcall
sub
mov
push
xor
sbb
loop
add
sub
cwtl
lahf
cwtl
insl
pop
cmp
scas
inc
test
xor
std
icebp
xor
jp
fidivrl
lret
scas
movsb
pusha
mov
adc
mov
insb
mov
pop
mov
sbb
pop
jle
popf
xchg
sbb
sub
fcmovb
sbb
pop
xchg
inc
nop
sahf
mov
mov
xchg
xor
test
jnp
mov
sarl
sub
xchg
dec
leave
jb
mov
lock
pop
cmc
leave
lds
cmp
xlat
fimuls
aaa
aas
les
add
mov
push
mov
add
mov
decb
test
std
ja
lods
xchg
test
and
adc
sbbl
push
adc
pop
add
sub
leave
mov
data16
adc
pushf
popa
inc
inc
and
pop
roll
jl
fisubrl
lcall
sti
xor
add
in
and
add
ljmp
insl
pop
fstpl
ljmp
sub
popf
bound
ret
pop
ret
jnp
cmpsl
hlt
dec
cltd
cmp
dec
std
pop
ficoms
ret
pop
in
jno
jle
in
shll
ja
mov
insb
pop
leave
inc
mov
push
or
lahf
in
mov
sahf
sahf
cmp
jns
popa
lea
and
popa
lds
cmp
cmp
sbb
mov
push
shlb
jmp
jle
mov
je
ljmp
shl
cltd
jo
icebp
shll
push
int
pop
lods
int3
cmp
enter
js
icebp
mov
push
mov
cwtl
call
nop
dec
lock
xor
push
sti
int
xor
fistl
test
jno
dec
nop
in
test
mov
ficoms
or
imul
sub
push
sbb
mov
mov
sub
mov
dec
jg
fs
xor
dec
call
and
mov
xchg
sub
movsl
daa
push
jns
pop
ss
mov
jb
push
dec
sbb
ljmp
insl
push
adc
fdivrs
push
stos
lea
dec
add
dec
mov
icebp
mov
adc
cmpsb
push
das
loopne
adc
cmp
mov
pusha
sbbb
sbb
adc
test
push
xor
mov
mov
ss
cmp
or
adc
jle
add
cmpsb
cmpsl
cmp
mov
dec
xor
cwtl
pop
push
dec
insl
sub
cmpxchg
negb
leave
pop
or
adc
pop
mov
sub
std
arpl
stos
cld
jne
push
enter
lret
in
out
sub
mov
cmp
cs
add
mov
data16
cmp
pop
test
pop
mov
mov
gs
adc
or
xor
in
das
scas
inc
lret
push
leave
not
push
sub
aad
insb
xchg
imul
stos
fcoml
jmp
mov
xor
stc
add
jge
je
jl
sbb
ds
add
mov
jp
das
enter
test
or
mov
sti
lahf
sbb
cwtl
std
mov
iret
push
inc
xchg
cmc
inc
mov
add
ret
out
pop
fiadds
popa
xor
sub
add
cmp
ljmp
aam
and
mov
fs
into
cmpsl
cmp
or
fstps
pop
mov
push
adc
mov
aad
pop
pop
fwait
push
aaa
fisubrs
loopne
adc
stos
pop
jne
sub
add
daa
lahf
mov
pop
mov
sub
das
lock
pop
pushf
clc
mov
orb
aam
sub
mov
cmp
xor
rcr
mov
pusha
mov
fmull
push
pop
in
sbb
aaa
mov
push
test
inc
test
sub
ret
in
sti
jmp
lods
test
xor
xchg
addr16
pop
es
or
js
and
sub
shl
or
jne
cmp
cs
push
aaa
mov
mov
test
add
cltd
movsl
testl
je
test
lret
or
mov
in
les
add
mov
dec
scas
and
cli
andb
div
jo
aad
and
fnstenv
loopne
test
outsl
and
ss
or
pop
xor
mov
or
jmp
jb
cmp
cmp
out
sti
cs
outsl
in
sbb
mov
stos
xor
xlat
testb
insl
pushf
mov
jnp
jnp
push
in
das
add
fsubs
add
jns
mov
out
aam
lods
mov
and
inc
movsl
aad
das
loopne
push
outsb
xor
clc
cli
lret
push
mov
mov
nop
fmull
cmp
or
jg
aas
mov
test
jmp
push
or
xlat
cltd
ret
sbb
imul
inc
into
fisubl
mov
aaa
or
jno
jno
pop
xor
mov
stos
inc
sbb
jno
inc
je
lret
stos
arpl
add
pop
ss
loopne
test
insl
push
repz
dec
jbe
stos
inc
fwait
inc
and
jne
adc
shll
or
jge
ret
cmp
or
mov
push
enter
out
push
jb
sub
cmpsb
mov
outsb
xchg
unpcklps
mov
movsb
mov
into
xchg
pop
xor
push
add
jnp
in
and
insl
aad
shl
sbb
out
outsl
inc
sbb
xorb
mov
adc
mov
pop
ja
jb
ja
shll
jg
jecxz
add
xchg
or
pop
out
mov
add
inc
adc
pop
mov
cwtl
inc
xor
movsl
jbe
ret
stos
mov
jp
dec
or
push
call
sub
gs
mov
enter
xchg
push
cmp
das
inc
mov
cmovnp
roll
test
jecxz
hlt
adcb
xlat
jg
push
test
inc
add
fsts
dec
fldt
aaa
jne
dec
cmp
fmull
dec
and
jnp
imul
lret
add
jg
daa
xchg
ljmp
mov
fdivl
loope
in
pop
cmp
sbb
aad
push
repnz
inc
outsl
adc
add
jnp
dec
mov
mov
aam
jp
or
je
sub
cmp
adc
lods
sahf
dec
sub
fwait
ret
jge
xor
xor
sub
cmpsl
iret
jmp
fidivl
mov
xor
or
xchg
std
mov
dec
mov
jge
or
mov
pop
imul
xor
sbb
push
fcoml
lods
sbb
push
sbb
data16
jo
out
aaa
and
fnstsw
add
pop
ret
fdivs
popa
adc
leave
sbb
inc
mov
add
sub
cli
ret
sbb
sti
xorl
sbb
xor
lods
push
cmpsb
ror
inc
or
sub
dec
jnp
lea
mov
cmpsb
pushf
sbb
xchg
dec
or
repnz
stc
or
mov
ss
cmpsb
lods
loope
lret
xchg
arpl
lods
imul
push
jns
aas
loopne
push
repnz
insl
ja
mov
cmpsb
str
imull
jmp
adc
inc
repnz
cmp
test
rcrl
mov
lds
adc
jmp
outsl
cmp
sbb
cmp
jae
mov
push
mov
das
and
sti
push
pop
sub
outsb
in
push
in
pop
and
and
lret
lock
sbb
sbb
mov
inc
add
push
cwtl
jmp
jbe
inc
adc
add
sbb
jp
fmuls
xor
pop
xor
jg
and
mov
lods
imul
hlt
push
sub
mov
xor
push
mov
loopne
pop
ds
fldcw
or
push
jnp
bound
or
lods
nop
fwait
pop
add
mov
pop
cmc
cmc
cwtl
jbe
repnz
aam
pusha
out
jmp
bound
daa
xor
movsb
mov
xor
das
sbb
popa
rcrb
xor
jmp
aad
pushf
lods
or
xor
mov
inc
sbb
sub
jo
adc
lret
pop
andl
xchg
ss
xor
ds
dec
in
int
ja
pushf
int3
fistpl
adc
or
fbstp
sub
xchg
in
stos
cmpb
inc
pop
fs
cld
out
aam
pcmpgtb
stc
stc
cmpb
fcmovu
daa
dec
mov
out
fwait
mov
int3
jg
pop
jb
das
test
cmp
xor
test
popf
jecxz
dec
cld
insb
loopne
stos
jo
iret
icebp
arpl
jmp
ljmp
arpl
cmp
iret
outsb
mov
and
xchg
lea
scas
mov
or
or
pop
jo
mov
push
enter
cmp
xor
hlt
or
mov
sbb
fistpl
cmp
jge
lods
daa
push
repz
roll
ret
sub
adc
cmpsl
mov
cs
cld
xchg
sub
scas
push
aaa
arpl
pop
jl
adc
shlb
dec
mov
cmpsl
into
xchg
mov
push
push
and
sahf
mov
mov
inc
out
in
mov
idivb
sti
dec
push
int3
insb
cmpsl
or
push
inc
inc
sahf
mov
jo
pusha
cli
sbb
jg
stos
ss
ljmp
lods
inc
fdiv
cmp
inc
or
cmp
loop
sbb
add
xchg
mov
out
outsb
jp
dec
jp
std
aaa
push
bndldx
loopne
and
in
out
fmull
or
mov
dec
adc
adc
movsl
cli
add
lcall
xor
or
arpl
in
aam
scas
rcr
pop
cmp
sti
fsubrp
imul
movsl
jno
popa
inc
addr16
pop
mov
scas
sub
lahf
addr16
inc
mov
popf
lods
adc
jecxz
out
jb
cmp
dec
cmp
mov
cmc
popf
mov
lea
add
xchg
loope
mov
mov
cmpsb
mov
and
cli
or
int
xchg
add
jl
xchg
pushf
dec
pop
subl
xchg
pop
mov
adc
popf
imul
mov
mul
clc
filds
xor
dec
es
frndint
push
lahf
sub
movsb
sbb
jecxz
cmp
inc
jnp
imul
push
pop
mov
jnp
jg
jnp
jle
cmc
repz
adc
adc
dec
cmp
xor
push
push
xchg
xchg
lods
pop
int
mov
mov
mov
xchg
stos
test
or
jmp
or
jnp
ret
pop
jne
mov
testb
into
jl
inc
or
rorl
and
xchg
dec
out
aam
jbe
xchg
xchg
scas
push
std
adc
mov
jecxz
mov
mov
iret
hlt
inc
int3
outsb
inc
nop
sarb
jne
fs
and
mov
xor
shll
stc
cmc
inc
inc
xchg
iret
cmpsl
add
xlat
jge
fiadds
or
dec
jbe
xlat
adc
pop
push
mov
scas
mov
dec
jle
lock
sarl
add
arpl
mov
daa
inc
mov
jno
aas
sahf
fs
arpl
sub
fdivrs
loop
cmp
fadds
cld
xchg
inc
cmp
or
int3
mov
cmpsl
jecxz
fwait
pop
jecxz
cmp
push
xor
in
xor
stos
mov
sti
cmp
jae
inc
or
push
je
in
inc
xchg
mov
cmp
add
stc
in
mov
jp
push
int
test
iret
loop
ss
inc
mov
jge
lods
xor
dec
xor
xchg
pop
out
add
mov
sub
pop
into
aas
push
das
lds
cmp
xchg
sarl
jecxz
xchg
enter
outsl
jge
jno
in
loop
add
pop
and
hlt
hlt
lret
stos
and
shrb
clc
cmp
pop
sub
cld
xlat
aam
adc
outsl
and
push
dec
cltd
aam
rolb
lcall
push
andb
mov
movsb
jle
pop
fstl
test
push
add
pop
xor
mov
mov
test
push
pop
pushf
ja
test
pop
fimuls
xchg
arpl
lahf
xorl
push
pop
pop
mov
pop
cwtl
xchg
and
inc
iret
mov
pop
pop
subl
adc
insl
sbb
push
insl
in
dec
sbb
dec
imul
dec
lods
sbb
xchg
mov
lret
icebp
loope
dec
add
test
lods
push
push
cli
add
scas
cmp
sub
or
mov
mov
sarb
mov
pop
mov
cmp
xchg
cld
cmp
pushf
cli
nop
clc
push
loop
ss
dec
pop
adc
sti
cld
sbb
mov
cmpsl
jns
scas
mov
xor
inc
lock
pushf
pop
imul
pop
xor
add
pop
mov
or
test
jmp
fimull
in
mov
push
push
or
mov
jne
out
push
xor
mov
jbe
mov
jmp
fxch
sub
arpl
fdivrl
lods
clc
xchg
push
shrb
xor
mov
fcmovne
sbb
sbb
loopne
clc
xchg
jmp
aaa
xchg
xchg
mov
sbb
mov
jnp
cmp
inc
pop
push
scas
jp
lret
sahf
push
push
pop
ret
testb
jmp
leave
flds
add
subl
out
xchg
nop
xchg
call
pop
enter
dec
stos
mov
cmp
pop
mov
jb
test
sbb
in
cmpsb
adc
xor
sti
xchg
outsl
pop
add
add
clc
les
sub
data16
xor
sbbl
xchg
lret
repz
or
and
cmpsb
xlat
stos
cmp
test
inc
iret
dec
sbb
ret
clc
mov
inc
fdivrs
mov
mov
call
and
mov
roll
push
out
outsl
mov
js
scas
gs
push
out
add
push
jbe
in
mov
sbb
fwait
ret
cld
push
lea
push
jae
lods
mov
jne
inc
adc
pop
cmpsb
jb
loope
pop
loop
dec
jecxz
insb
mov
jb
add
call
or
xor
cmp
adc
aaa
xor
shrb
lret
inc
and
mov
pusha
xchg
rolb
sahf
add
xchg
xor
jno
insb
and
rolb
and
jl
add
jp
pushf
push
ret
push
data16
cmp
dec
add
in
lret
pop
inc
fsubrl
dec
dec
roll
push
adc
cmpsl
pushl
push
sbb
js
subb
jg
add
dec
cmpsl
in
push
outsb
and
cli
push
sub
cli
mov
ret
ret
imulb
ja
ss
ljmp
cmp
pop
cmp
jmp
push
fnsave
fnstenv
in
mov
ljmp
shlb
lods
mov
jg
dec
scas
fs
gs
das
ja
mov
adcb
gs
icebp
add
call
outsb
pop
sbb
fdivl
sahf
mov
xor
or
adc
into
ficompl
push
or
sub
out
dec
push
movsl
addr16
pushf
lds
sub
cwtl
fbld
or
popa
sbb
sub
movsb
mov
sub
mov
outsb
mov
push
xor
xchg
loope
addl
mov
cmp
sbb
stos
push
or
jle
aas
fcomp
inc
dec
xchg
outsb
stos
sbb
mov
lcall
fisttpl
push
stos
mov
cli
or
int
xor
jle
xchg
imul
test
repz
push
shlb
cli
fistl
aas
aaa
fldl
sub
je
jne
push
add
arpl
les
add
inc
out
or
dec
jnp
movsb
mov
test
cmp
movb
cmpsb
mov
aaa
jne
adc
mov
or
pop
lcall
dec
aad
mov
mov
icebp
add
or
imul
pop
cmp
fldl
adc
pop
xchg
inc
rcrl
test
pop
and
aas
xchg
sbb
sub
fnsave
ret
xor
fsubr
fs
ret
ret
dec
dec
and
stc
mov
imulb
or
in
std
arpl
dec
hlt
aas
cmp
ljmp
pop
jnp
mov
es
cwtl
mov
aas
mov
test
cmp
push
out
dec
test
andb
js
stos
push
enter
inc
fwait
mov
sbb
fstpl
push
inc
in
sub
gs
pusha
sbb
mov
inc
pop
push
lock
arpl
push
popa
push
pusha
in
shrb
sbb
call
loop
cmp
pop
test
in
dec
repnz
mov
cmp
mov
push
or
sbb
mov
jbe
pop
xchg
pop
scas
in
and
mov
xchg
rorl
mov
xor
xor
fwait
lea
movsb
aam
into
jp
xor
jge
psubsb
add
mov
stos
jg
mov
lods
inc
jae
cmp
jle
nop
and
mov
out
stos
pop
push
pusha
fcomp
jae
push
mov
fistl
push
xchg
jecxz
jnp
insb
js
je
movl
adc
dec
daa
xorb
ret
arpl
dec
dec
test
scas
pop
cltd
pop
imul
cmp
pop
push
mov
frstor
cmp
bound
mov
or
in
inc
stos
mov
movsl
push
ret
shlb
xorl
es
stos
xchg
idivl
outsl
or
test
xorl
shrb
adc
push
push
xor
adc
xchg
fcmovnbe
sbb
in
iret
pop
cmpsb
mov
lods
notl
push
int3
enter
cmc
jb
mov
int
sbb
aam
mov
sub
and
mov
mov
lsl
mov
lock
test
ja
and
lcall
jmp
sbb
stos
into
sbb
or
pop
dec
arpl
leave
stc
orl
adc
scas
pop
mov
scas
cwtl
je
in
push
test
jecxz
xor
pop
and
mov
mov
jns
int
adc
pop
stc
push
loopne
add
or
xor
insl
jge
xor
cltd
mov
push
cmp
mov
int
sti
and
mov
cmpsl
das
mov
ret
mov
push
or
fnsave
push
divb
movsb
roll
nop
scas
bound
fsubrs
pop
jp
in
lods
and
xor
sbb
loop
mov
outsb
cli
mov
adc
xchg
or
nop
add
push
outsl
mov
pop
dec
xor
nop
mov
sub
cmp
cs
outsb
inc
ja
std
mov
cmp
into
cmpsb
mov
and
fdivrp
test
int3
inc
insl
inc
inc
push
jns
sub
or
int3
stos
jl
arpl
adc
mov
out
andb
push
push
and
ja
scas
cmpsl
lods
lea
into
jae
movsl
cld
push
dec
push
pop
fs
movsl
mov
inc
addl
sub
jne
cmpb
mov
lret
int3
jg
or
cmp
jne
fists
xchg
mov
je
or
shlb
shll
cli
andb
mov
lock
push
into
ret
aam
xchg
cs
enter
mull
pusha
mov
in
fwait
jg
inc
cmpsb
adc
jecxz
mov
xorl
cmp
push
insl
push
dec
popa
jno
jae
inc
inc
mov
cmp
pusha
call
ljmp
imul
xchg
pop
test
cwtl
xlat
xchg
xor
aaa
lcall
push
xor
bound
aaa
andb
cmp
cmp
nop
mov
sub
dec
cmp
push
add
xchg
in
ljmp
or
xor
inc
mov
push
xor
add
sbb
dec
in
sub
xchg
je
pop
pushf
sub
daa
mov
fstps
or
mov
xor
shlb
mov
lahf
mov
push
push
jo
test
pop
ret
stc
popf
push
fsubl
mov
mov
or
paddusw
icebp
xor
sub
sahf
adc
shrb
testb
aaa
das
or
call
lods
push
rcl
les
mov
sbb
sub
add
jb
ds
xchg
cmp
inc
test
lods
je
pop
shrb
pusha
scas
adc
popa
out
fldenv
dec
fcmovnb
push
bound
ret
andl
cmp
inc
dec
invd
sti
test
aas
pusha
xchg
loop
or
push
mov
enter
pop
insb
in
aad
cmp
out
add
mov
mov
jl
mov
push
call
test
aad
xchg
mov
lods
push
lret
sti
cmc
adc
push
push
mov
adc
xchg
sub
inc
mov
stos
jecxz
and
xorb
jp
mov
mov
outsb
aas
outsl
sbb
aaa
jecxz
add
arpl
stos
movsb
cmpsb
add
mov
pop
lret
mov
sub
repnz
xor
sub
jge
lods
dec
fcmovnbe
xchg
js
lods
sbbb
pop
hlt
add
jnp,pn
dec
fbstp
fsubr
and
rclb
rcll
xchg
xlat
lret
js
xor
jp
pop
pop
cwtl
mov
xchg
sub
lea
push
aas
rcr
aad
or
push
jl
add
sub
loope
xchg
fcoms
push
pop
sbb
cld
popfw
mov
fwait
lret
jmp
jo
push
test
push
sub
jle
arpl
mov
incl
pop
mov
xchg
lahf
movsb
fcmovnb
jmp
xor
push
outsb
fiaddl
pop
xorb
fisubrl
in
lea
sub
sbb
xor
dec
lahf
testb
or
jns
jne
repz
idiv
outsb
int3
mov
add
mov
sub
sub
jg
in
movsb
rcr
imul
shrl
adc
cmp
std
imul
jne
fstpt
rorb
jle
xlat
or
inc
jmp
jae
lea
lret
push
jmp
jae
cmp
cltd
popf
arpl
outsb
push
cltd
subb
adcl
mov
idivb
mov
push
lods
push
dec
jbe
mov
or
mov
js
sbb
sbb
mov
cmp
rcrl
lret
xor
test
mov
sub
adcl
cs
addr16
push
jo
push
clc
pusha
jae
mov
cli
outsl
aas
iret
inc
jb
into
adc
push
sbb
jo
enter
int3
in
dec
rorb
movsl
sub
int
out
pop
mov
inc
into
dec
xor
js
popa
pushf
shlb
fnstenv
ja
loop
xchg
loop
in
repz
icebp
mov
or
lods
lahf
mov
or
pop
sub
xor
push
cmp
or
push
cmpsl
jnp
outsl
pop
and
lcall
sbb
lahf
sub
popa
pop
jg
test
or
lahf
push
roll
lock
repz
cld
add
sti
mov
xor
subl
cmp
lea
add
jbe
repz
outsl
clc
shrl
jecxz
mov
mov
inc
or
add
push
pop
sub
push
test
sti
mov
or
lds
cli
lods
sub
jne
mov
sbb
push
orb
testl
pushf
inc
es
in
xchg
std
mul
adcl
out
fidivrl
push
pushf
movsl
xchg
sub
fs
sti
rorl
int
lcall
test
das
xor
dec
sbb
pop
fwait
lret
or
mov
pop
cmpl
into
pop
outsl
fstl
loopne
pusha
jae
push
pop
xor
push
inc
and
jmp
jb
and
jge
push
int3
into
push
dec
dec
call
push
xor
xchg
mov
fists
insl
or
sbb
xor
add
push
stos
jp
jl
shrb
mov
pushf
cld
pushf
and
pop
fldl
pop
stos
in
add
fwait
lea
shr
stos
shrb
mov
pusha
test
aad
negl
mov
sti
mov
fisttps
xor
subb
mov
pop
xor
movsb
and
mov
push
pop
push
cmp
test
test
xlat
add
lcall
cmp
jle
xchg
push
inc
aas
ret
adc
pop
adc
sub
mov
lods
push
int3
or
in
or
xchg
mov
and
roll
ds
ja
loopne
popf
test
int
pop
fdiv
out
int3
jne,pn
push
loopne
call
shl
xlat
leave
test
clc
jbe
leave
sub
push
or
aam
jnp
sub
fstps
dec
aam
lret
out
insb
les
jnp
clc
cmp
jns
jge
mov
fs
cli
push
pop
lea
jbe
or
push
xchg
in
mov
adc
inc
mov
repz
movsb
push
or
mov
mov
dec
sub
mov
je
add
imul
push
inc
orl
shr
sub
dec
xor
hlt
cmpsl
mov
push
scas
mov
clc
pop
inc
out
mov
dec
fisubl
outsl
repnz
mov
nop
dec
pop
movb
stos
mov
js
iret
xorl
ret
add
pop
xor
mov
adc
mov
test
imul
mov
stc
dec
les
psrad
mull
iret
add
pop
pop
rclb
testb
add
mov
adc
push
int
repz
inc
in
pusha
xchg
cli
pop
test
stos
push
jbe
xchg
adc
mov
or
or
dec
and
xchg
pop
jo
add
jno
ljmp
and
inc
inc
dec
clc
fwait
xchg
repnz
mov
popa
loope
cli
int
sbb
unpcklps
fdivr
mov
ljmp
sbb
pop
inc
fcoms
mov
inc
adc
cltd
xchg
ds
inc
pop
jmp
repnz
inc
dec
outsb
daa
out
dec
jge
xor
and
mov
pop
bound
push
xchg
fsubl
into
int3
jno
mov
sub
ljmp
sub
les
dec
dec
xchg
xchg
pushf
or
je
outsb
pusha
sub
pop
imul
mov
fstps
mov
ljmp
add
push
xor
cltd
dec
int
mov
jno
sbb
adc
jp
sbbb
insb
sbbb
jbe
mov
test
outsl
aaa
das
push
sub
and
jae
cmp
int3
fdivrs
xor
arpl
jb
add
sbb
xor
xchg
in
mov
stos
mov
daa
pop
push
in
inc
scas
or
jnp
and
dec
icebp
dec
insl
rorl
jb
lock
mov
mov
cmp
out
fs
mov
jnp
shlb
scas
loopne
sahf
xchg
inc
push
pop
and
adc
cmp
jecxz
sti
dec
fmul
scas
insl
mov
dec
in
out
in
aaa
add
clc
mov
mov
rcrl
mov
mov
insb
sub
inc
sub
pop
mov
mov
aam
and
adc
lods
cmp
call
inc
xor
and
clc
and
in
into
in
test
shl
pop
jns
sub
inc
mov
jl
push
jl
push
dec
subb
enter
pop
in
jns
stc
push
je
mov
xor
pop
push
jo
jg
nop
loop
pushf
mov
cmc
jge
push
push
dec
pop
fisttps
and
icebp
cld
dec
rcl
and
movl
lahf
sahf
fwait
es
cmc
aad
inc
nop
insl
jle
loop
lea
icebp
cmp
sahf
lret
lahf
xchg
or
and
mov
push
inc
add
dec
fmuls
fucom
gs
xchg
mov
stos
movsb
or
adc
cmp
add
in
cmpsb
adc
ficoms
xor
sub
clc
arpl
popf
mov
cmc
stos
test
jnp
das
fidivrs
mov
sub
mov
push
in
jecxz
roll
popl
xchg
fcoms
test
or
int3
inc
xor
pop
pushf
movsb
push
dec
retw
sub
movsl
sti
xor
addr16
cli
or
imul
mov
cmp
jae
cwtl
add
pop
mov
inc
iret
sub
rorl
fistpll
arpl
icebp
jbe
cld
rclb
push
jns
jne
inc
in
jae
xor
dec
rorl
pop
mov
dec
sub
jp
mov
push
gs
sbb
pop
pop
out
mov
cmp
pop
in
sub
fwait
rorl
inc
and
fstpt
jle
out
mov
fdiv
neg
lock
fdivrl
jo
das
ja
into
in
hlt
push
and
stc
mov
pop
jae
sbb
lock
mov
into
inc
int
dec
mov
sbb
rcrl
xchg
jmp
push
inc
fbld
ljmp
insl
add
out
sbb
shrl
loop
sub
fneni(8087
push
add
scas
aam
mov
ss
leave
cld
icebp
int3
rorl
mov
movsb
fstpl
imul
sbb
push
cmpsl
mov
sbb
addb
and
popf
lock
xor
in
iret
mov
lcall
dec
mov
or
rcrb
lret
or
push
and
xor
inc
xchg
imul
sub
or
xchg
sahf
divb
xor
fwait
adc
cmp
rcll
or
ljmp
sti
pop
and
inc
mov
movsb
cli
sti
fstpl
jns
mov
sahf
mov
add
or
outsb
pop
data16
inc
dec
mov
repz
cmp
les
push
cmc
sub
stos
pop
rolb
popa
jno
jl
adc
pop
push
out
notl
jns
add
fcom
lret
mov
mov
movsl
pop
sti
adc
jg
iret
movsb
push
outsb
cld
push
cmp
dec
mov
in
jno
ljmp
jns
add
rorl
popa
jo
mov
jo
pop
jbe
mov
push
pop
imul
pop
add
stos
pop
pop
pop
in
push
dec
adc
sub
add
sub
xchg
xor
sub
out
sbb
mov
fs
add
shll
adc
int
imul
pop
or
mov
orl
out
xchg
test
or
pusha
int3
mov
mov
or
sub
jl
icebp
cwtl
jge
pop
and
fimuls
lock
push
sub
jle
out
sar
add
sahf
fstpt
pop
lds
jmp
cmp
jge
adc
jnp
fsincos
scas
push
imul
xchg
cltd
jecxz
mov
mov
jns
xchg
movsb
in
xchg
add
and
sbb
xchg
adc
xor
jo
dec
in
mov
jae
and
mov
pop
mov
add
ljmp
jecxz
cwtl
call
cmp
rclb
enter
sub
stc
in
jg
adc
stos
xor
jecxz
ja
into
ficoml
arpl
push
inc
test
call
sarl
sub
repz
xchg
sub
push
mov
push
push
fnstsw
leave
or
rorl
insb
mov
popa
imull
jno
stos
shlb
arpl
cmp
idivb
ds
or
dec
pop
sub
pop
sahf
push
push
fildl
and
in
add
cwtl
push
mov
and
std
xlat
lods
mov
aas
adcb
ret
push
cld
sbb
repz
mov
movsb
and
pop
out
inc
imul
sbb
sahf
loop
push
cmp
jne
cs
fadd
hlt
mov
jmp
push
or
xor
arpl
lret
add
adc
dec
sbb
fmull
xor
or
popf
mov
and
sahf
inc
add
adc
pushf
push
sub
iret
xor
adc
iret
mov
pop
xchg
or
jle
mov
push
mov
push
pop
mulb
inc
pop
inc
mov
sbb
inc
iret
outsb
int3
lods
je
dec
scas
cmp
jle
mov
outsb
mov
out
jp
sub
dec
fisubl
cltd
cmc
mov
nop
icebp
add
mov
aad
mov
ljmp
sbb
adc
aaa
cmp
ficoms
in
mov
fidivrs
insb
cmpsb
mov
repz
add
and
jp
and
sub
insb
mov
cltd
out
out
les
jae
or
pop
sarb
stos
inc
and
fimull
xor
stos
sti
in
movsl
aam
pmullw
mov
dec
cmp
lods
in
jae
add
scas
mov
push
sti
imul
fmull
aas
ret
scas
or
js
sub
pop
inc
and
fldenv
push
inc
shl
sbb
fwait
lock
aas
shl
outsb
mov
lcall
lret
push
xchg
sbb
imul
out
imul
mov
jge
add
adc
or
shl
js
cmc
xor
inc
adc
aas
arpl
fldenv
stos
mov
dec
sbb
jmp
xchg
fstp
or
sbb
test
bound
and
mov
push
pop
sub
leave
test
mov
pop
loopne
fmulp
adc
movsl
mov
or
sbb
xor
inc
xor
jge
fiadds
add
xor
jl
mull
repnz
xchg
xchg
xor
xchg
rorb
aaa
jl
lods
lret
pop
ljmp
or
fstl
mov
outsb
jecxz
inc
adc
jne
test
mov
mov
aad
aas
in
cmc
cmp
mov
mov
dec
lds
ficomps
dec
xor
lahf
cmp
loop
cmpl
jl
inc
mov
adc
mov
mov
adc
lret
hlt
movsl
push
mov
outsb
ret
int3
or
sahf
ja
stc
lahf
or
adc
in
sbb
add
scas
sub
fisttpll
scas
aaa
inc
pop
mov
icebp
sahf
mov
mov
sub
lret
cmp
mov
je
pop
cmp
hlt
inc
in
call
ret
inc
aam
loop
dec
pop
fucomi
es
aas
fdivrs
insl
fsub
inc
xlat
sub
mov
lods
mov
lahf
cmp
pop
dec
lock
aas
inc
dec
das
adc
leave
or
mov
cltd
xchg
js
adc
shll
mov
daa
xchg
and
out
xchg
dec
jle
popf
jno
decb
xor
test
repz
lea
cmp
int
sarb
jnp
adc
negl
xlat
mov
clc
xchg
and
test
mov
enter
lcall
mov
pop
je
pusha
add
roll
dec
dec
jmp
xor
mov
pop
test
xor
adc
adc
iret
mov
loopne
xchg
gs
cs
or
inc
sub
clc
xor
or
shll
and
fst
dec
cli
lods
sub
mov
aam
test
int3
push
or
dec
shrb
jo
nopl
cmp
test
test
repnz
loopne
xchg
ja
popf
ret
xor
xchg
sbb
shll
jb
adc
and
repnz
test
iret
sbb
add
pop
push
sub
inc
sti
lret
roll
iret
aas
sub
pop
ljmp
add
or
sbb
mov
adc
shlb
xlat
fistps
xchg
mov
sbbl
icebp
rcll
add
int3
idivl
cmpsl
jp
and
sti
inc
jg
dec
or
bound
jmp
aam
out
inc
ja
aaa
jge
push
loopne
xor
sub
imul
sub
ret
cmp
leave
inc
push
pop
fadds
pop
mov
sub
bound
pop
lods
test
mov
imul
mov
sbb
sub
stc
adc
mov
push
push
idivl
push
jo
xor
shlb
lea
fsubrs
inc
mov
xchg
fisubl
mov
mov
mov
dec
mov
cmp
loop
or
shr
ficompl
adc
add
insl
jb
jnp
sbb
fs
hlt
ja
in
and
repnz
ja
ret
and
hlt
ret
pop
sub
leave
rcrb
mov
fs
leave
mov
in
popf
mov
fstpl
pop
inc
rol
gs
mov
cmpsb
xor
sub
aad
jg
mov
inc
xchg
cld
inc
xchg
pop
xor
mov
jle
in
push
imul
or
inc
push
fisubrs
xor
mov
cwtl
mov
lret
pop
sbb
outsl
mov
bound
repz
lds
out
mov
cmp
pop
or
sahf
outsl
mov
mov
mov
pop
mov
push
xchg
fptan
mov
movsl
loopne
and
andl
adc
mov
or
insb
mov
xchg
les
cld
xor
inc
ret
add
pushf
adc
fildll
js
jne
in
or
dec
arpl
cmp
ljmp
dec
xchg
into
subl
dec
sbb
xorb
ss
xchg
stos
ja
out
ficompl
mov
lock
mov
inc
subl
aad
sti
ret
outsb
adc
and
lea
sbb
cli
cmp
sahf
jmp
scas
aas
repnz
bound
pop
lret
xchg
xchg
cmp
adc
jnp
xor
xor
cmp
pop
repz
cmpsl
push
faddp
pushf
xor
jns
mov
rorb
inc
push
cs
cmpl
outsl
add
sub
mov
jg
repz
dec
inc
out
adcl
xchg
out
aas
lret
mov
mov
fisubl
inc
or
inc
mov
cmp
enter
fbstp
cwtl
cld
fwait
push
stc
adc
adc
inc
adc
mov
mov
hlt
loop
sti
xchg
sub
fbld
xlat
inc
or
std
dec
mov
jae
mov
cmp
loopne
test
lods
cmp
out
les
jnp
jp
stos
jmp
push
fmulp
cmp
insl
dec
into
ds
xchg
addr16
loopne
arpl
pop
dec
xchg
fwait
sub
ret
sub
sbb
gs
mov
add
add
dec
and
push
pop
push
pop
xlat
push
jle
lahf
mov
fwait
mov
or
sbb
icebp
pop
gs
out
shll
loop
neg
jecxz
out
pop
push
or
pop
inc
sbb
mov
cmc
xchg
imul
sub
mov
lcall
cld
mov
adc
mov
out
test
pusha
shrb
call
mov
das
sbb
je
test
mov
aad
sti
out
pop
pop
dec
test
cmp
sbb
testb
adc
dec
mov
cltd
xchg
lahf
outsb
mov
mov
inc
je
and
mov
mov
cmp
lcall
mov
mov
sbb
jge
inc
pop
rolb
sbb
pop
outsl
es
lcall
jle
je
decb
fidivs
mov
jnp
lods
adc
push
jecxz
in
jl
adc
je
push
aad
or
add
int
and
lods
ret
subl
loope
add
pop
mov
movl
ljmp
lods
ret
jge
jo
std
inc
repnz
sbb
cmp
mov
rolb
aad
push
cmp
mov
push
or
and
sarl
stc
int
dec
cmp
sbb
pop
jae
mov
arpl
js
jae
dec
arpl
jb
shl
cmp
xchg
push
hlt
mov
sahf
stos
cmovs
popf
mov
inc
push
push
or
int
dec
jns
cld
mov
ret
popa
mov
adc
push
adc
out
ret
shrb
push
and
shrl
mov
subl
in
lock
sub
ret
gs
rclb
xor
xchg
mov
repnz
out
inc
and
adc
fisubl
subl
out
scas
movhps
mov
pop
mov
jge
mov
leave
into
mov
cmc
in
into
mov
aam
clc
mov
lret
js
add
aaa
cmp
cmp
cmp
cmp
adc
push
cmp
sub
call
xor
mov
mov
sub
sbb
xor
adc
push
aas
inc
enter
aad
sub
test
cs
ret
out
dec
jo
push
pandn
jle
and
gs
xor
cmpb
jmp
jo
dec
mov
fldt
lret
flds
add
pop
in
lods
mov
and
jg
add
xlat
aas
repnz
loop
arpl
shlb
push
xchg
les
xor
inc
fdivp
sbb
add
imul
sub
adc
mov
mov
dec
sub
dec
mov
xchg
sahf
test
lea
inc
cmp
and
dec
pop
inc
out
xchg
pop
je
xadd
aas
ficomps
cld
lods
cmp
fildll
push
xlat
lods
rorl
jl
arpl
push
dec
mov
ds
daa
xorl
hlt
loopne
repz
outsl
ljmp
fisubrs
lea
and
sbb
daa
adc
test
cli
mov
test
jmp
pop
or
in
rorl
sbbb
sub
loopne
std
xor
in
ret
dec
ret
sub
mov
and
mov
push
jl
aam
mov
insl
xchg
pop
pop
dec
bnd
sub
inc
xor
mov
jne
outsl
cmp
ret
inc
repz
lds
or
xchg
xor
call
jle
stos
add
inc
jbe,pt
imul
lea
inc
inc
imul
filds
stos
addl
ss
pop
cwtl
in
push
inc
fcompl
or
in
mov
in
mov
dec
cltd
loop
enter
sbbb
imul
iret
aad
xchg
mov
xchg
adc
mov
ds
add
mov
xchg
cmp
jl
in
fisubs
sti
outsl
jbe
pop
subl
mov
jae
xchg
inc
jge
outsb
jmp
hlt
icebp
xchg
inc
xchg
mov
stc
push
or
insb
xchg
and
dec
idivb
adc
jo
mov
popf
iret
mov
outsl
cmc
lods
nop
mov
popf
and
mov
and
imul
repnz
sbb
fists
xor
int3
sbb
cmp
and
push
cmpsl
out
ds
jnp
xor
xlat
pushf
or
dec
mov
xor
mov
es
inc
and
sbb
dec
dec
adcl
lea
leave
bound
mov
add
adc
pop
in
test
xlat
push
lods
call
adc
daa
cmc
sahf
pop
ljmp
jo
pop
jmp
and
jae,pn
mov
sbb
cmp
fdivrl
decb
in
jge
dec
jmp
xlat
fld
cmp
mov
mov
test
in
xchg
push
std
mov
and
loop
ficomps
xchg
scas
sbb
pop
imul
xchg
jns
jp
movsl
mov
xchg
lds
out
adc
scas
xlat
xor
push
pop
test
sub
ds
inc
cmpb
sti
or
std
push
push
movsb
enter
mov
out
enter
pusha
hlt
ljmp
add
data16
lods
out
outsl
xor
xor
adc
cwtl
iret
insl
ja
test
pop
add
push
mov
and
loopne
enter
mov
loopne
inc
imul
hlt
adc
rorl
adc
mov
out
fidivl
add
pop
mov
pop
outsb
mov
sub
test
aas
enter
cmp
sub
push
push
repz
xchg
js
pop
adc
loop
out
push
jmp
outsl
mov
xchg
shlb
testl
fwait
dec
out
hlt
and
dec
imul
stos
lret
xchg
and
xor
lock
push
repz
mov
push
repz
xor
call
pusha
xchg
mov
cld
in
pop
sbb
jg
push
jmp
xlat
icebp
or
jns
inc
sub
insb
popf
add
gs
fdivl
leave
push
stos
xor
push
je
cmp
push
add
pop
bound
sub
ret
movsl
sub
fdivrs
xchg
stos
mov
mov
adc
loope
shlb
jne
or
ljmp
test
es
sbb
jb
mov
xor
or
rorb
jp
test
push
push
js
xor
dec
sub
or
xor
loop
jns
icebp
and
pushf
call
cmp
shl
jbe
or
bound
add
and
jmp
int
jnp
cld
xor
jge
lods
lcall
add
movsl
xorb
adc
arpl
into
std
out
test
mov
sub
cmp
cmp
sbb
cmpsl
mov
jmp
xor
mov
scas
push
jb
rcl
mov
or
add
int
ret
pop
or
inc
cmpsl
sub
push
pop
movsb
mov
mov
incb
push
pop
sub
sub
inc
iret
out
mov
add
sbb
sbb
inc
dec
dec
bound
pushf
test
mov
inc
xchg
ds
push
dec
adc
xor
sub
sbb
dec
push
and
mov
inc
xchg
cmpsb
fwait
mov
insb
int3
pop
inc
cmpsb
std
repnz
pop
and
popf
in
add
test
iret
pop
aas
pop
fsts
mov
jbe
and
mov
mov
jl
dec
pop
cs
adc
addr16
int
pushw
adc
scas
pop
sub
and
sub
or
mov
jno
ret
inc
cs
mov
sub
subb
incb
negl
xchg
pushf
jecxz
jo
push
roll
cmpsb
loope
imul
and
push
and
inc
aad
aaa
sub
in
cmpsl
sub
lds
xlat
jb
add
push
les
gs
adc
xor
divl
cli
jo
aas
mov
or
std
mov
inc
aaa
lds
mov
lea
jl
ret
ret
push
inc
imul
in
sub
xor
ja
add
aam
sahf
cli
adc
nop
xchg
jae
adcl
xchg
dec
sub
out
xor
loope
push
jno
jne
loop
lahf
pop
mov
sbb
sub
mov
aad
sar
jmp
out
nop
sub
cmp
out
xor
outsb
jno
pop
pop
mov
cmpsb
orl
mov
fisubrs
cmpsb
not
ja
cmpsl
repnz
pop
mov
inc
and
jo
sub
or
rcr
adc
fs
sbb
push
pop
es
adc
iret
mov
test
xchg
cmpsl
mov
pushf
pop
nop
pop
adc
xor
inc
jns
jo
pop
cltd
fcomps
mov
mov
into
jmp
leave
jl
sub
test
or
std
xor
fldcw
iretw
push
data16
adc
sbb
pop
jmp
imul
insb
call
repnz
dec
fsubrl
cmp
push
js
jg
dec
mov
add
dec
mov
insl
lret
sub
and
rorb
xor
inc
xchg
cltd
aaa
mov
jl
or
fcoms
pop
aad
imul
mov
paddusb
inc
mov
mov
cmp
push
add
jne
push
and
loope
mov
packssdw
jl
outsl
ja
test
fnstenv
or
or
xor
push
lds
mov
push
sti
xchg
into
cmp
and
out
adc
mov
inc
test
std
test
enter
pop
push
sub
mulps
jecxz
jl
hlt
std
ljmp
addr16
add
aad
cmpsb
fmull
fildl
sbb
push
nop
sti
pop
xchg
add
fidivrl
shrb
and
add
push
adc
dec
stos
jecxz
mov
or
mov
jno
cmp
rcll
jbe
imul
push
inc
inc
and
lods
add
mov
inc
rcl
rcl
xchg
scas
and
clc
add
xor
mov
xchg
fstpt
data16
and
jmp
ljmp
mov
sbb
enter
int3
mull
jnp
imull
fsub
sbb
pushf
subl
aam
adc
aam
test
mov
ficoms
mov
pushf
stc
cmp
arpl
int
daa
aaa
sbb
jmp
outsl
scas
mov
movl
in
or
jge
cmpsb
mov
mov
clc
push
outsb
pushf
inc
dec
mov
and
data16
and
mov
hlt
jge
jmp
jp
mov
cmc
lods
imul
fildl
mov
cmpsl
ret
cmc
data16
cld
or
and
addr16
ficompl
fnsave
cmp
movb
int
pop
jge
inc
test
mov
or
mov
adc
sahf
jae
cmp
cmp
push
out
pop
rolb
lcall
add
push
dec
call
mov
dec
jge
xchg
das
aas
jle
sarb
sbb
mov
sub
std
in
hlt
xchg
jecxz
cmpsb
lahf
push
sub
mov
test
ljmp
dec
sub
mov
test
push
roll
dec
xchg
loope
mov
dec
scas
fwait
rorb
push
mov
and
xchg
add
mov
movsb
pop
adc
adc
adc
dec
mov
std
dec
jno
mov
xchg
loop
or
rorb
adc
test
orb
add
or
pop
rorb
mov
outsb
lret
fsubp
push
imul
or
add
jle
insl
arpl
in
movsl
js,pt
xchg
sbb
leave
mov
adc
mov
and
mov
and
std
mov
mov
and
xchg
pop
stc
fcomp
loop
push
jbe
leave
push
mov
shl
sbb
out
nop
mov
inc
cltd
pop
xor
mov
scas
and
test
sub
inc
aad
pop
dec
repnz
out
push
stc
sbb
cld
pop
fdivrl
ds
cltd
fbstp
in
sub
stos
insl
dec
pusha
fmuls
jnp
mov
push
cld
mov
and
xchg
xchg
scas
pusha
rcl
and
lock
xor
fwait
gs
out
cmpsl
add
ret
enter
hlt
into
fldcw
sub
stos
stos
sbb
dec
popa
lea
stos
ret
ss
cmp
insl
js
hlt
inc
cmpsl
and
cltd
shll
and
or
imul
mov
fdivr
xchg
add
xchg
pop
mov
cld
push
sarb
lds
fimull
xchg
dec
pop
adc
mov
int3
adc
in
aam
loop
lret
or
mov
mov
fdivs
lret
pop
add
ret
jno
xor
pop
lahf
inc
insl
imul
mov
fcomp
push
je
arpl
and
test
xor
push
mov
jmp
fmul
pushf
push
sbb
hlt
dec
adc
roll
pop
add
imul
js
cmpsl
in
mov
inc
mov
push
push
xchg
add
mov
pop
aas
jbe
dec
out
dec
movsl
xor
lods
mov
pop
in
sub
sbb
mov
cmp
mov
and
out
movsb
aaa
jbe
mov
pop
ret
test
xchg
cli
std
dec
stos
sahf
test
ret
jmpw
jns
adc
adcb
inc
std
sbb
pop
mov
leave
xchg
inc
xchg
arpl
mov
sti
mov
mov
insl
ljmp
dec
mov
pop
fnstcw
mov
jl
in
inc
mov
in
cli
int3
mov
test
sarb
pop
lods
ret
ror
mov
mov
inc
adc
adc
mov
and
xor
cltd
push
jle
mov
or
test
mov
pop
or
rcrb
fisubrl
cld
sbb
xor
stos
sbb
ljmp
aaa
xchg
pushf
pop
enter
shr
lods
mov
push
adc
pop
lock
sbb
lcall
mov
pop
push
add
cmpl
jge
xchg
adc
dec
icebp
mov
rcll
pop
xchg
push
xchg
daa
push
hlt
xor
sbb
sbb
fdivp
add
sub
fidivs
nop
cli
ja
pop
or
mov
sub
push
xchg
inc
test
jp
js
leave
addr16
jnp
cmp
out
into
shrl
push
dec
mov
cmp
ljmp
xchg
roll
inc
test
pop
pop
test
fmulp
int
lret
stos
jecxz
push
mov
ret
or
mov
popf
cmpsl
mov
fldl
in
mov
adc
inc
mov
cld
pushf
jo
ror
inc
aas
pop
loope,pn
sbb
mov
sahf
push
inc
and
xor
ja
addr16
xor
loop
rorl
sti
mov
push
mull
mov
inc
data16
loop
dec
addb
js,pn
cmpsb
fiaddl
cmp
out
in
or
xor
push
sbb
pop
push
cld
hlt
push
cmpsl
or
insl
mov
cmpb
sub
ljmp
or
js
shl
add
pushf
mov
iret
adc
push
dec
idiv
dec
sub
imul
out
pop
push
pop
push
shrb
jge
sbb
cmpsb
cmpsl
inc
pop
jnp
inc
pusha
fldl
inc
scas
mov
and
jno
fwait
in
sarb
test
push
test
inc
popa
out
pop
add
and
dec
das
scas
fwait
inc
pop
shrb
sub
jo
jnp
dec
lcall
or
leave
cmpsl
scas
mov
xor
scas
fiaddl
cs
jg
sti
mov
xor
data16
pop
es
inc
insb
jge
divb
mov
sarb
or
mov
add
lock
sub
cmp
mov
and
mov
out
mov
xchg
push
enter
adc
lcall
test
adc
fstl
inc
repz
mov
dec
jns
dec
dec
ss
aaa
cmp
push
add
int3
int
dec
test
pop
fistps
test
test
adc
xor
adc
jl
cmp
lret
aam
sahf
cltd
mov
aas
enter
adc
push
mov
fidivrs
mov
test
adc
int
clc
ret
fwait
cmp
jbe
ss
jno
jmp
inc
pop
mov
jle
into
sbb
ss
mov
outsb
test
jg
cmp
int
in
out
adc
mov
sarb
data16
xchg
xchg
mov
cli
sub
leave
loope
fs
rcll
cmc
dec
outsl
lds
inc
mov
ljmp
cmp
cli
pop
jg
stos
mov
add
cmp
xor
fnsave
out
xchg
jecxz
sbb
mov
add
cmp
les
mov
pop
push
mov
pop
iret
loopne
gs
xchg
mov
mov
pushf
push
fdivs
setp
and
add
ud2
mov
mov
sahf
push
imul
xlat
test
shll
pusha
shrb
hlt
xor
ficompl
aas
imul
imul
dec
cmp
jnp
andl
pop
mov
scas
outsl
mov
cwtl
sub
jo
fstpl
fsub
dec
sub
mov
cmc
dec
jmp
lea
push
in
ljmp
mov
mov
lods
decb
or
rcrl
sub
shrb
adc
daa
daa
sti
push
stos
mov
push
and
cmp
pop
inc
or
repz
mov
inc
dec
xchg
aam
add
jae
dec
mov
adc
out
jno
xchg
push
mov
xchg
mov
xchg
fadds
add
cs
in
shll
andb
push
lds
inc
fstpl
leave
sub
nop
jmp
cs
dec
cmpsl
pop
adc
mov
insb
mov
fdivl
jnp
push
stc
fiadds
adc
pop
and
pop
insl
es
cld
das
lods
stos
sti
fldl
in
xor
cmp
out
xor
lea
xchg
xor
les
jb
jae
and
rcll
icebp
jp
bnd
pop
iret
mov
xchg
into
cmpsl
call
popa
sub
jae
es
lds
xor
jne
cmpsb
ljmp
movsl
adc
adc
test
push
daa
mov
pop
insl
pop
cmpsl
leave
xor
dec
and
ffreep
imul
test
jl
mov
sti
dec
subb
and
leave
dec
adc
sbb
mov
adc
xchg
js
add
xchg
or
adc
test
adc
orb
scas
lea
jne
test
lcall
sbb
mov
nop
push
xor
stos
pop
icebp
aas
xchg
shll
xchg
inc
dec
and
pushf
dec
cwtl
rorl
hlt
mov
stos
in
mov
sbb
mov
xor
sbb
xlat
mov
pushf
out
pushf
movsb
cli
xchg
imul
js
push
andl
lcall
add
adc
push
mov
cmp
dec
dec
cmp
out
mov
jo
mov
adc
and
inc
or
fimuls
jb
ds
test
and
jmp
pushf
cmp
adc
lods
and
idivb
loop
aad
or
mov
add
jb
push
into
ss
adc
mov
sub
dec
cmp
xor
or
adc
stos
or
adcl
in
daa
lods
mov
sub
pusha
jbe
ss
pop
fucomi
in
push
test
or
sahf
xor
je
pop
nop
fistl
imul
adc
mov
rcrb
cmp
or
inc
aaa
sub
hlt
lock
idivl
pop
cmp
mov
test
xor
mov
clc
mov
lock
ret
and
pushf
cld
in
nop
mov
sbb
ret
jge
stos
push
and
cli
arpl
in
cmp
or
data16
ss
jp
mov
mov
pop
out
xor
rcr
inc
jge
int3
icebp
pop
and
inc
adc
lret
or
das
mov
jmp
inc
cltd
mov
sbb
xchg
ret
mov
cmp
push
icebp
outsl
jo
movsb
xor
or
in
push
pop
lods
pushf
xor
stos
test
adc
add
je
xchg
fsubp
fnstenv
mov
in
js
sub
ficomps
mov
dec
call
pop
pusha
jnp
andb
pop
bound
lcall
sti
in
jmp
mov
adc
push
xlat
push
iret
into
push
jg
lcall
mov
pusha
jmp
jae
cltd
fidivs
enter
pop
mov
adc
cmp
push
mov
mov
jbe
add
filds
lcall
cmpsb
and
mov
lcall
mov
stos
xchg
or
jne
loope
movsb
fdiv
pushf
push
push
and
enter
test
das
fucomi
out
mov
cwtl
enter
test
dec
shll
or
int3
ljmp
pop
hlt
sbb
xchg
into
pop
subl
popf
gs
sbb
rorb
sbb
push
xlat
filds
mov
jbe
cmc
out
or
jne
fidivs
or
dec
dec
cwtl
or
call
push
rcrl
inc
mov
push
push
xlat
mov
push
adc
mov
jg
out
add
mov
dec
in
sahf
popf
and
jle
adc
enter
inc
mov
and
mov
outsb
adc
call
jae
pop
push
inc
mov
mov
fisubrs
enter
out
fs
xchg
xor
aaa
insb
fisttps
shlb
sar
pop
push
test
jecxz
sbb
pop
jbe
int
sub
ja
mov
xor
shlb
scas
inc
xor
sbb
cmpsl
jns
popf
cs
mov
dec
xchg
enter
fisttps
sub
dec
jmp
inc
test
mov
orl
in
jno
test
add
lret
xchg
je
sti
jo
sub
pop
inc
sub
or
mov
imul
stos
je
rcl
fwait
inc
test
hlt
push
mov
cmp
pop
mov
jmp
mov
out
and
out
cmp
or
push
fisubrl
xchg
test
out
pop
mov
mov
fs
inc
inc
lds
sbb
sarl
data16
xchg
imul
js
mov
les
mov
lock
xor
out
mov
jg
idiv
cwtl
stos
inc
mov
mov
movd
fs
popf
mov
inc
dec
push
xchg
ja
das
rcrb
nop
xchg
cmp
jecxz
pusha
push
cmc
sti
push
pop
sub
xchg
loop
or
int
cmp
ss
push
pop
daa
inc
test
jno
mov
repz
push
inc
sub
ds
or
es
adc
cmp
pop
cmpb
insl
hlt
fisubl
pop
and
adcl
jge
test
pop
icebp
adc
push
ficompl
nop
mov
dec
gs
push
or
dec
push
sbb
pusha
xchg
subl
add
mov
adc
add
sar
adc
jmp
cmp
movsl
mov
fidivl
mov
jmp
sbb
dec
mov
in
fsubrp
cmpsl
mov
and
lea
sbb
movsl
pusha
in
fwait
push
and
add
fiadds
push
stc
jmp
stc
daa
xchg
addr16
mov
jne
mov
mov
rolb
lds
dec
and
imul
pop
jns
sbb
outsl
stos
jecxz
cmp
jmp
cmpl
cmp
push
fcompl
fs
cmpsl
mov
mov
cmp
das
jns
push
lcall
adc
mov
dec
nop
shlb
pop
xor
sbb
shlb
into
out
xlat
adc
stos
pop
mov
icebp
and
or
sub
loope
adc
popa
mov
and
cmp
and
xchg
mov
mov
loopne
mov
fiaddl
mov
ror
loopne
and
push
jne
ljmp
inc
add
pop
in
mov
jle
pop
push
pop
mov
pop
fdivrl
std
outsl
popa
inc
pop
push
or
mov
cmc
out
ds
and
cmp
pop
in
add
loopne
adc
xor
and
out
xor
adc
xchg
shlb
dec
lcall
jae
cmp
sub
mov
push
adc
ja
or
and
stos
jnp
mov
nop
lods
test
cmc
cwtl
mov
dec
scas
pop
sub
and
loopne
aad
sbb
and
lds
ret
loop
sarb
mov
dec
inc
sub
out
cwtl
adc
bound
inc
mov
dec
ret
adc
push
xchg
ljmp
cli
push
popf
push
aas
lds
pop
mov
push
shr
jnp
insb
mov
pushf
stos
cmp
mov
iret
pop
sub
popf
jmp
fmuls
cld
dec
inc
imul
lcall
filds
vpsadbw
dec
sbb
adc
data16
add
fsubrp
lods
xchg
callw
adc
push
jl
and
add
xchg
pop
jbe
mov
mul
cmpl
sub
cmp
movsl
add
das
rcr
dec
pop
shl
fistpll
pusha
mov
xor
lods
jle
sub
lock
aad
inc
and
rcl
and
pop
fildll
lods
push
jb
test
xrelease
daa
psrlw
dec
decb
push
dec
mov
daa
fcmove
or
and
pand
xchg
mov
xor
push
dec
hlt
lea
repnz
outsb
cltd
push
xchg
xchg
hlt
sbb
sahf
dec
jmp
aad
repz
jo
fadd
dec
loope
xor
mov
dec
in
out
mov
gs
iret
es
fldl
xchg
test
in
add
mov
std
fwait
push
scas
mov
negb
add
inc
les
fcmovnbe
cld
push
int3
xorl
mov
mov
or
xor
sub
xchg
pop
mov
sbb
loopne
loop
int
jl
pop
push
pop
mov
pop
ds
xchg
icebp
fnstsw
mov
mov
gs
jg
cmp
imul
fcomps
outsb
and
or
fldcw
mov
in
dec
popf
ss
xlat
out
lds
adc
addl
cmp
jae
adc
push
fdivrl
imul
xchg
mov
test
jns
xchg
pusha
sti
inc
pop
sub
data16
xlat
jecxz
int
jp
hlt
pop
repz
outsb
mov
std
test
mov
icebp
push
sbb
pop
shll
push
sbb
mov
cli
mov
mov
xor
cmp
push
pop
or
ja
add
js
outsl
fwait
in
and
pop
sti
push
push
repnz
adc
mov
aam
xor
sub
mov
test
cmp
aas
arpl
mov
push
mov
cld
push
cld
xchg
ljmp
sahf
push
mov
mov
test
and
test
mov
sub
int3
cs
jb
mov
mov
in
aam
adc
incw
pop
push
shrl
mov
xor
jmp
pop
xchg
addr16
cs
ret
xchg
insb
lock
lock
xchg
or
nop
sbb
mov
fs
loope
or
xor
jo
in
clc
sub
add
jo
dec
ret
xor
repz
pop
xor
mov
inc
jp
push
sub
std
loope
out
xor
test
sbb
xchg
out
roll
xchg
jo
test
bound
cltd
ja
rcrb
nop
inc
fwait
cld
add
idiv
mov
fcmovu
in
mov
pop
mov
lds
into
sbb
addr16
push
sbb
inc
cmpsl
xor
int
data16
std
leave
popa
pop
dec
jae
jb
std
cmp
push
idiv
and
test
push
or
jno
in
mov
dec
push
jnp
pusha
imul
ret
cmp
or
movsb
xor
adc
cmpsl
int3
sbb
add
addr16
pushf
or
adc
dec
adc
repnz
lods
test
mov
aaa
xchg
inc
jb
and
push
test
rcr
mov
cmc
dec
cmp
divl
cmp
and
jne
insl
out
mov
movsl
fwait
adc
cmpsl
jns
xlat
int3
and
inc
shr
pusha
in
in
out
xchg
out
ror
inc
jo
jnp
mull
repnz
and
jo
ss
ljmp
sub
inc
addr16
test
mov
filds
outsl
inc
or
jb
fistpl
xchg
in
xchg
scas
dec
jae
lock
pop
loopne
or
pop
inc
xchg
pop
jns
loopne
mov
pop
lods
xchg
shll
in
push
out
jle
test
add
jmp
jne
pop
mov
mov
loop
mov
dec
jle
lahf
push
push
stos
daa
lods
sbb
sbb
dec
dec
test
in
leave
xchg
sbb
ret
movsb
dec
xor
mov
and
in
icebp
bound
adc
pop
sbb
addr16
test
pusha
test
mov
cmp
lods
cmp
xchg
jne
xchg
xchg
pop
fistl
aad
xor
mov
mov
outsb
fnstenv
xor
call
loope
ja
insb
fwait
int
dec
pop
lock
cwtl
test
jle
gs
add
int3
mov
mov
incl
shl
fldenv
pop
shrb
xchg
sub
xor
enter
and
cmpsb
outsl
or
mov
scas
in
xor
cmp
imull
cmp
ljmp
cmpsb
ret
stc
pop
repnz
scas
iret
scas
out
jns
mov
jae
pop
ljmp
call
xchg
mov
dec
orb
es
mov
pop
cltd
mov
pop
sub
scas
or
jnp
lods
nop
adc
cli
ja
in
adc
popa
loope
cltd
xchg
jns
in
stos
mov
pop
nop
sub
sub
xchg
sbb
cmp
and
mov
sti
push
push
les
mov
lds
cmp
loope
xchg
add
test
das
xchg
aad
xor
sub
lods
inc
pop
pop
bts
loop
xor
sub
insl
mov
adc
gs
je
repz
adc
cmp
loopne
pop
cwtl
jp
pop
xlat
cmpsb
cmpsl
mov
adc
mov
lods
sbb
lods
push
push
shll
dec
int
inc
lcall
cmpsl
jbe
or
leave
adc
rcll
shl
mov
cmp
mov
add
jge
add
das
outsb
rcrb
fiaddl
xor
das
inc
imul
adc
sub
loopne
fcmovnbe
mov
inc
dec
call
sub
imul
nop
ficoms
in
jne
and
cmp
call
loope
ret
lret
fdivrs
xor
jmp
jb
cmp
roll
cmp
mov
loope
popa
mov
negl
mov
jno
jge
sub
les
xchg
xor
popa
push
mov
iret
ret
push
pop
movsl
jb
cmc
bound
xor
pop
or
les
and
mov
iret
add
cmp
loopne
lds
jae
dec
dec
mov
pop
sti
nop
push
daa
imul
inc
sbb
mov
push
jo
lahf
fnstcw
dec
std
nop
dec
fidivrl
xor
lods
les
addr16
cli
sub
cmc
push
test
and
pushl
js
in
fimuls
push
imul
push
clc
std
scas
dec
je
gs
aam
push
xorl
arpl
xlat
inc
pop
cltd
inc
inc
ret
das
mov
jno
push
imul
inc
insl
adc
scas
xor
sbb
sahf
cltd
sub
out
xchg
jmp
shrl
xchg
shl
push
pop
fdivs
cli
sti
dec
mov
jnp
sbb
xchg
adc
and
std
push
popa
add
dec
cmp
test
push
add
xchg
pop
xchg
dec
jnp
andl
add
mov
int
mov
pop
out
leave
push
xchg
pop
mov
rcl
das
sub
mov
fbstp
mov
jmp
pop
jmp
data16
adc
cmp
push
fidivs
xchg
fidivrs
push
mov
out
js
jge
fistl
fidivrl
pop
dec
jmp
lea
stos
mov
jae
ret
cmp
lahf
add
mov
mov
pcmpgtw
ljmp
loope
push
lods
cli
mov
rcl
shll
jno
and
shll
pop
inc
jo
sub
jns
mov
xor
ja
icebp
push
mov
jge
or
bound
dec
xor
and
icebp
jae
clc
adc
or
mov
mov
loopne
adc
adc
addr16
arpl
das
fs
jns
jge
lret
mov
push
bound
fs
lret
cmpb
shll
movsl
in
push
incl
push
jnp
loopne
stc
dec
fidivl
sub
mov
jecxz
movsl
push
loopne
xor
mov
repnz
and
inc
pop
out
movsw
add
lret
jle
xchg
ret
xor
fldl
shrl
cltd
stc
rcrb
insl
in
inc
int3
stos
ds
pop
push
mov
insb
pushf
test
jle
int3
test
cmp
jmp
pushf
push
mov
les
popa
repz
adc
jp
sahf
mov
movsl
dec
jae
ds
cltd
push
sub
fdivs
add
aad
jo
inc
mov
cli
mov
jns
in
inc
jbe
mov
inc
mov
push
es
out
cmp
leave
cmp
rorb
xchg
xlat
jo
cwtl
or
cmc
sub
data16
hlt
cmp
jge
test
jg
cltd
jl
iret
jo
xchg
in
lds
and
and
jno
test
imul
cmp
wrmsr
add
ret
mov
mov
and
insl
ret
addr16
icebp
dec
and
jp
lret
and
call
jp
pop
stos
sbb
repz
or
sub
jp
xchg
ret
sub
lods
sti
jae
jge
or
sarb
je
jp
test
push
push
pop
push
xchg
mov
xchg
out
daa
lret
shlb
repnz
and
dec
ljmp
test
movsl
sbb
shl
dec
ret
aad
les
movsl
outsb
sub
lahf
shrb
xor
movsb
fcoms
or
adc
adc
lret
push
call
push
dec
dec
stc
into
pop
in
xchg
and
jge
aaa
dec
adc
inc
aad
lock
dec
cwtl
inc
fs
incb
loope
arpl
loop
xor
cld
outsl
dec
outsb
fstp
jbe
cmp
inc
daa
outsb
adc
or
out
ficomps
push
jb
pop
popa
ljmp
movl
dec
pop
push
dec
mov
dec
call
rep
movsl
jns
xchg
sbb
lock
jbe
outsl
int3
xchg
mov
mov
sti
mov
dec
loop
rclb
and
lods
int
movzwl
and
pop
jo
mov
in
jbe
push
jns
aas
mov
sub
add
cmp
mov
mov
sbb
fwait
push
stos
inc
lods
daa
enter
insl
insl
les
insl
mov
mov
xchg
cwtl
dec
pop
add
ret
add
lret
iret
scas
xacquire
jecxz,pt
cmpsl
cld
fwait
daa
arpl
push
lcall
test
movsl
xorl
fmul
stos
lcall
push
fidivrl
lds
test
mov
pop
cmpsl
inc
pushf
sbb
fistl
fsubp
xor
push
xor
add
adc
add
or
lret
push
lea
ficoms
sbb
aad
jge
push
xchg
push
pop
lock
or
adc
sar
stc
ja
fisttpl
insl
xor
add
lret
jb
iret
add
xor
sti
sbb
leave
and
inc
iret
les
cmp
mov
sub
sbb
cmp
push
jmp
xchg
cmp
pop
and
in
inc
scas
fcmove
inc
dec
scas
hlt
push
sbb
xchg
shlb
lods
and
rcll
in
mov
aam
and
or
push
cmpsb
aas
insl
cs
mov
in
or
cmp
add
push
xchg
mul
mov
stc
sub
shlb
mov
popf
lock
test
ljmp
sub
sbb
idivb
in
ss
dec
mov
push
dec
add
test
out
mov
adc
hlt
mov
arpl
lods
mov
lahf
in
das
mov
int
xchg
addl
mov
cmp
lods
jbe
pop
and
daa
adc
inc
ss
or
jb
pusha
mov
mov
leave
fdiv
mov
clc
xchg
inc
sahf
xor
mov
push
std
mov
test
out
mov
cwtl
push
in
out
test
fs
testb
ljmp
and
sbb
out
sarb
push
das
repnz
jno
add
mov
aam
pop
inc
cli
call
dec
jg
daa
mov
int
ror
jl
mov
mov
push
mov
cmpsl
out
cmc
sbb
and
imul
sbb
mov
je
mov
faddl
xor
std
dec
shl
pop
cmc
int3
imul
pushf
in
movsb
orb
out
fldt
ret
xlat
ss
dec
fisubrl
sub
sahf
push
jne
bound
ljmp
cld
leave
mov
sbb
mov
adc
push
sub
mov
jns
cmovl
lds
cmp
das
xchg
pop
inc
xchg
adc
mov
and
shll
jns
or
stos
pop
push
test
daa
add
ret
loopne
repnz
loopne
xchg
rclb
imull
sub
cmovbe
and
lods
pop
pop
test
pop
inc
xor
psrld
aad
adc
mov
sub
test
div
ds
push
mov
sbb
adc
fidivrs
push
dec
ficoml
mov
fs
push
push
dec
movsb
das
leave
aad
popa
subl
mov
push
xor
add
ret
ljmp
cmp
add
shll
loope
sub
pslld
push
jle
xchg
push
sarb
pop
lods
mov
push
je
push
ret
mov
lds
scas
into
adc
rcrl
mov
xor
pop
fisttps
or
loopne
cltd
xchg
daa
out
add
insl
inc
adc
sbb
add
cmp
clc
cmpsb
cmp
pop
call
fstps
arpl
shll
add
gs
pop
push
xchg
mov
fildl
cltd
mov
lret
rcl
sub
fdivl
test
enter
inc
cli
sbb
sub
fisttpl
lret
adc
cltd
andl
push
call
xchg
out
icebp
adc
fwait
mov
push
data16
push
fstpt
xchg
cmp
fdivl
jge
xor
mov
pop
inc
sub
sbb
cs
ret
add
inc
dec
repz
ljmp
push
cli
or
mov
fs
lods
lds
pop
ljmp
xchg
fdivrs
pop
testb
push
jbe
outsb
or
lcall
sub
imul
push
jmp
js
imulb
ds
movsl
add
mov
sub
mov
sub
cmp
sbb
or
pop
pop
push
stos
push
std
mov
mov
in
pop
mov
inc
adc
xchg
or
push
test
mov
lret
outsl
adcb
adc
jns
sub
iret
aaa
jb
adc
mov
or
cmpsl
std
xchg
mov
js
xor
fwait
lcall
incl
outsl
les
int3
cmp
ljmp
cmp
jb
or
and
adc
xchg
stos
jl
sub
lcall
push
hlt
push
push
sarb
sub
test
push
sub
mov
adc
clc
mov
rcrl
cmp
scas
jle
ljmp
mov
jno
aas
inc
xchg
lcall
dec
mov
out
mov
cld
in
out
xlat
test
pop
or
or
push
and
bound
das
or
mov
lds
jne
out
stos
data16
sub
or
es
mov
adc
jne
pop
pop
push
movsb
add
dec
ficompl
loop
jbe
out
rcr
pop
icebp
jp,pt
pop
push
lret
or
fwait
jae
loop
stos
sub
lahf
push
scas
imul
or
ret
dec
jns
fwait
jne
scas
pop
lret
je
jno
push
stos
xor
jge
dec
das
mov
cmpsb
mov
inc
jo
cmpsb
fisubrl
sub
mov
mov
sbb
sahf
movsl
sbb
pop
cld
add
cmp
test
int
mov
rcll
or
int3
lahf
pop
mov
adc
fsubrp
movsl
pop
pop
loop
hlt
mull
mov
mov
ror
fdivs
ja
call
lods
getsec
mov
jmp
mov
divb
pop
and
mov
sub
jmp
push
pop
adc
addr16
pusha
pop
jnp
mov
scas
insl
nop
fs
pop
sub
bnd
and
lock
call
inc
mov
mov
aaa
push
dec
and
popl
push
sti
mov
cltd
cmc
xchg
sbb
aaa
mov
dec
push
pop
push
mov
push
data16
rcll
cld
addb
xor
adc
in
cmpsb
mov
pop
int
mov
scas
push
inc
andb
sub
and
fisubrl
xchg
adc
outsl
push
mov
push
fsts
cli
lahf
sub
js
add
mov
ret
fs
mov
loope
push
sub
cmp
add
mov
sub
leave
adcb
and
hlt
test
enter
lcall
cmp
imul
and
movsb
fiadds
call
aaa
stos
cwtl
pushf
in
cmpsl
jle
jl
icebp
sub
jne
mov
loop
xchg
movsb
push
cmp
cmp
bound
and
or
cwtl
push
inc
leave
outsb
popa
sbb
pop
cmp
enter
ds
jne
dec
jle
call
lcall
fbstp
leave
out
mov
mov
cmpsl
in
in
daa
and
mov
lods
shrl
stos
jmp
por
lock
loope
adc
push
test
and
xchg
icebp
dec
jnp
leave
pop
adc
mov
cmc
es
int3
test
cli
mov
mov
jg
push
adc
push
jmp
insl
cs
adc
neg
jge
pop
adc
mov
fs
fbld
aas
add
stos
mov
rcrb
inc
xchg
inc
shrb
int3
inc
cmc
push
mov
jbe
movsl
lods
cli
mov
cmp
daa
add
mov
cwtl
in
rolb
or
mov
mov
bound
imul
xor
std
xor
mov
or
cmpsb
iret
aaa
and
aas
mov
sbb
push
push
lea
leave
pop
rcl
ret
push
movsb
mov
jle
mov
arpl
aas
xchg
push
inc
notb
mov
jb
adc
adc
in
jne
add
sub
fbld
frstor
adc
cmpsw
or
xor
je
jno
jo
and
fwait
mov
pop
movsb
inc
xor
scas
jbe
push
mov
std
lods
jp
push
mov
xchg
out
inc
outsb
jo
test
movsl
push
call
mov
leave
cmp
movsb
pop
movsb
imul
cmp
jae
fadds
jecxz
inc
in
xor
mov
cmp
mov
inc
and
add
rolb
push
jb
push
sub
pop
xor
cwtl
lahf
xor
out
popa
lahf
cmp
cltd
add
imul
dec
call
mov
jg
ret
dec
jae
push
dec
mov
push
mov
sbb
sbb
fsubl
jecxz
out
ljmp
mov
mov
and
cmp
and
cmp
xor
mov
mov
push
jge
fbstp
sub
leave
inc
es
sbb
dec
jb
lods
repz
je
aad
sbb
adc
mov
test
xchg
adc
and
and
in
mov
fwait
fwait
pop
das
sub
xor
push
fs
in
pop
xchg
push
clc
push
outsb
sub
popf
mov
cmp
repz
jb
inc
sbb
test
sub
inc
sub
cmc
cmpsl
test
xchg
dec
lea
cwtl
pop
je
mov
scas
lret
and
xor
mov
pop
aad
xchg
pushf
or
fst
xchg
fsubrs
jno
dec
aam
adc
jae
out
add
mov
mov
cmp
sbb
or
int
add
and
mov
push
scas
fs
ljmp
or
xor
cmpsl
inc
xor
arpl
fcoml
addr16
mov
icebp
nop
or
or
adc
out
leave
jnp
repnz
xor
lea
adc
sbb
fdivrs
aad
sub
xorl
das
push
and
and
or
into
adc
sub
mov
dec
mov
data16
dec
sbb
pop
and
movsb
dec
fdiv
pop
daa
push
mov
xchg
add
ljmp
and
mov
inc
incb
in
xor
push
into
negb
and
inc
pushf
in
adc
xlat
das
sub
mov
xchg
cmp
insb
adc
lock
lods
cwtl
gs
xchg
movsl
inc
rol
xor
xchg
xchg
into
repz
xchg
ror
inc
pushaw
ret
cmpb
xor
push
inc
pusha
jp
lds
mov
adc
js,pn
adc
nop
mov
movl
inc
lods
orl
inc
cmc
outsl
mov
fnstcw
aas
ja
jne
cli
pusha
mov
cmp
or
dec
cmp
test
xor
and
in
xchg
lods
leave
cmpsl
adc
idiv
rcll
scas
xlat
dec
popf
lds
mov
das
push
les
jle
in
add
and
pushf
jo
adc
negl
fimull
push
and
sub
outsb
push
out
xchg
cli
xlat
inc
sub
xchg
pop
xor
inc
out
out
test
insl
cmpsl
ljmp
jbe
xor
hlt
pusha
cmp
push
xchg
sub
sti
outsl
das
fucomip
mov
in
lds
xor
std
or
insl
or
andl
rorb
mov
pop
mov
and
ds
nop
icebp
xor
insl
mov
sub
xlat
and
movsb
mov
out
lret
mov
cmpl
mov
in
add
mov
xor
push
adc
ss
inc
pop
or
mov
xchg
test
lret
inc
xchg
cmp
add
mov
sub
sbbl
add
imul
push
jnp
jmp
or
aas
mov
sbb
int
repz
ret
outsb
ja
lock
inc
xor
add
sbb
mov
mov
xchg
mov
lret
and
xor
jnp
add
sysexit
xchg
lret
insb
add
cmpsl
outsl
es
and
popf
pusha
jp
hlt
ret
hlt
cs
inc
lret
jne
rorl
or
xor
sbb
inc
jns
subl
cmp
lret
into
enter
sbb
fs
lods
mov
movsb
ja
stos
xor
icebp
movsb
fwait
xchg
xor
sbb
cli
pop
push
jbe
mov
scas
push
adc
and
dec
or
rclb
inc
cmp
sarl
loop
inc
mov
sub
lods
pop
cmp
jp
xor
jbe
int3
cs
aam
scas
xor
rolb
pop
pop
push
mov
add
popa
popf
cmc
pop
sub
cli
mov
xchg
push
pop
inc
adc
jp
mov
mov
mov
sub
fnstsw
clc
xor
jecxz
push
pop
fcmovnu
xor
push
xchg
rcrl
ljmp
out
push
outsb
jo
ja
cmp
push
inc
or
sti
sbb
cld
mov
xchg
nop
lea
inc
sub
rep
jne
adc
sub
loopne
jl
sub
or
cmpsl
add
jmp
xor
push
ret
sub
add
out
xchg
outsb
fists
adc
aam
daa
subb
xchg
mov
mov
fwait
cld
aaa
sbb
inc
cmp
out
js
xchg
pop
hlt
in
stos
or
iret
jl
pop
ljmp
ficoms
outsb
ficompl
dec
xchg
loopne
rclb
adc
inc
fisttps
bound
gs
orl
pushf
push
or
push
mov
xor
lock
push
loope
fwait
insl
push
imul
cmp
sbb
xor
call
fiaddl
xlat
cltd
ljmp
icebp
jne
cmp
es
rcr
pop
fwait
mov
out
addb
sahf
iret
aam
stc
xor
jo
pop
sahf
pop
ja
cmp
fnstenv
sar
jecxz
adc
pusha
icebp
test
cmpsb
mov
or
jns
jns
leave
outsb
pushf
popf
orb
push
or
repnz
inc
sahf
dec
jno
mov
fimull
xchg
insb
mov
fisubs
sbb
push
or
xchg
scas
stos
inc
cli
xchg
dec
repz
xor
and
cmpsb
or
lods
mov
push
popf
lock
pop
sbb
incb
mov
leave
cli
pop
jle
ret
fbstp
dec
push
cmp
cmp
adc
xchg
push
mov
push
push
xor
lds
cmpsl
pop
fwait
cmp
add
push
xor
ror
cs
jp
cmp
leavew
jle
fimuls
mov
js
in
test
jge
cmpsl
sub
in
push
ljmp
xor
mov
loopne
call
pop
test
inc
mulb
lock
pop
inc
xchg
adc
sbb
or
repnz
mov
pop
lods
mov
clc
pop
jmp
lods
sbb
xchg
sub
adc
jo
jl
scas
out
fsubrl
test
add
fstps
inc
loopne
fadds
pop
add
adc
pop
stos
scas
mov
orb
aaa
pop
mov
mov
add
inc
fxch
jle
iret
insl
xchg
xchg
xchg
push
pop
mov
dec
daa
les
dec
mov
add
sbb
push
repnz
iret
loop
push
sbbb
test
adc
xchg
fwait
test
adc
pushf
jns
push
es
push
outsl
push
lods
mov
nop
push
push
dec
lea
ja
je
mov
cmpsl
ss
test
mov
adc
fstpl
dec
rcrb
push
jp
mov
bound
fdiv
pop
lods
out
add
dec
mov
into
repz
inc
push
insb
jb
aad
xchg
lcall
xchg
xchg
sbb
dec
inc
cmp
dec
dec
stc
xchg
data16
or
jp
adc
mov
adc
mov
mov
xchg
daa
ret
lods
and
subl
lea
popf
sbb
shrl
outsl
scas
repnz
subl
call
orb
outsb
movsl
and
inc
xlat
dec
movsb
into
subb
mov
add
adc
inc
inc
mov
jl
aaa
inc
sub
lds
dec
roll
fsubs
call
or
icebp
int
hlt
lods
lcall
sti
bound
jg
pop
push
sub
inc
mov
dec
inc
push
cmp
js
cmpsl
lods
push
jge
pop
nop
int3
inc
sbbb
int3
imul
mov
add
lds
jae
mov
mov
pop
movsl
mov
push
dec
mov
pop
stos
rol
dec
mov
adc
and
mov
add
cmpsl
cmp
cmp
mov
das
test
sbbl
in
add
stc
cmpsl
sbb
into
shrl
adc
mov
notb
jp
movb
adc
mov
dec
dec
cmp
add
jmp
push
int3
aad
cld
adc
insb
rolb
cwtl
mov
mov
xor
push
mov
mov
daa
pop
adc
and
cmp
push
inc
dec
int
pop
out
out
fnstenv
iret
aad
jne
jae
imul
daa
sar
mov
mov
pop
pop
push
ret
outsl
mov
mov
or
push
dec
aaa
cmovns
xor
push
sbb
mov
sbb
push
push
call
lea
enter
jl
daa
inc
add
fcompl
xchg
pop
clc
aaa
in
push
xchg
and
cmp
xchg
iret
pushf
arpl
sbb
cmp
movsl
push
pop
mov
pop
lods
add
mov
mov
jbe
mov
or
out
andl
jmp
in
pop
or
push
add
pop
mov
lock
lret
fdecstp
xor
mov
sub
mov
gs
push
cmp
pop
mov
sbb
lret
push
in
sbb
push
inc
addb
stc
jmp
xor
push
push
rcrb
inc
add
cmp
iret
or
mov
leave
and
rclb
mov
mov
sti
pop
sbb
je
rorl
mov
test
cmc
popa
data16
mov
inc
or
hlt
outsb
sbb
fisttps
sub
testl
dec
pusha
ss
fstl
or
movsb
outsb
leave
jnp
add
imul
pushf
not
test
push
jo
dec
mov
clc
sub
inc
cmp
daa
loope
dec
push
lret
adc
xor
jp
filds
and
les
or
ret
ja
add
push
dec
cs
pop
mov
scas
insb
sbb
cmpb
pop
push
sbb
adc
std
arpl
push
mov
clc
es
decl
cld
cmc
adc
push
fwait
popa
loopne
and
test
popf
add
mov
jae
mov
mov
inc
out
orb
nopl
in
lds
jnp
pop
je
pop
adc
imul
xor
inc
cltd
loop
and
push
and
xorl
jne
dec
roll
cmovo
pop
loope
dec
xor
pusha
outsl
out
mov
js
sbb
cmp
sti
and
cmpsl
lret
iret
stc
int3
dec
test
and
daa
cmp
cmp
xlat
cmp
cmc
sub
pop
dec
xchg
int3
ret
insl
bound
inc
fidivrs
mov
mov
stc
jo
insb
xchg
lret
or
iret
sub
xchg
in
dec
push
cli
ja
adc
jle
mov
fmull
addr16
mov
out
add
mov
adc
xlat
clc
push
jnp
movsb
addr16
jo
cltd
sbb
push
into
lcall
or
cli
lcall
pusha
mov
sub
popa
pusha
outsb
jmp
out
ficoms
mov
mov
mov
mov
lea
cmc
clc
leave
sub
add
shll
jnp
xor
cmp
fwait
cmc
cmp
sub
enter
ljmp
lret
les
add
push
mov
or
mov
mov
jmp
test
pop
into
pusha
call
fdivr
ret
mov
jg
cmpsb
subb
dec
ss
or
pop
rolb
into
cmp
stos
test
dec
cmp
imul
iret
imul
aaa
lds
adc
fcmovu
loopne
xor
andb
in
flds
mov
xor
rol
insl
cmp
pop
fwait
pandn
inc
ss
js
in
stos
call
hlt
inc
and
mov
jecxz
ret
int3
xor
mov
pop
dec
adc
rcll
push
jo
fcompl
shl
mov
or
cltd
ret
in
popa
lds
sti
jae
mov
pushf
loop
push
mov
adc
jns
push
out
shll
out
push
fsubp
jmp
xor
jne
fstl
inc
fsubl
scas
loope
inc
add
xor
mov
cmp
xor
lods
hlt
das
stos
sbb
aaa
fistpll
fisttps
pop
enter
inc
call
ret
or
and
sub
xor
push
xor
xor
pop
or
js
inc
inc
pop
inc
lea
inc
inc
add
dec
clc
imul
std
pop
mov
mov
pop
push
lea
and
mov
inc
add
notl
imul
xchg
inc
xchg
lret
dec
jg
sbb
js
aam
and
inc
mov
lds
push
add
jns
insb
lds
cwtl
add
add
jg
insb
ret
testb
inc
cmp
daa
stos
sub
cld
adc
jge
mov
pop
movsb
andb
fbstp
shll
lock
adc
ja
shll
sub
cmp
mov
dec
inc
test
xlat
add
xchg
loopne
sbb
sbb
out
jl
sub
cwtl
mov
mov
sub
test
je
scas
or
pop
jp
mov
inc
mov
jl
inc
inc
mov
mov
pop
or
ficompl
mov
lods
xor
inc
jmp
les
and
pop
adc
cmp
popf
adc
fcoms
jnp
cmp
jb
leave
aam
cmc
aad
insb
xorl
push
js
mov
xor
imul
sbb
and
sub
pop
lret
mov
and
cmp
pop
add
fsubrs
icebp
cmp
ret
xor
loopne
pop
pop
les
aas
jae
pop
push
mov
dec
popa
and
push
sahf
cmpsb
pop
ljmp
xchg
rol
or
and
xchg
sbb
ret
cs
aas
gs
data16
popf
jecxz
xor
xor
push
adc
mov
mov
mov
addr16
and
adc
push
jae
pop
scas
out
xchg
das
inc
xor
sbbl
outsb
mov
xchg
mov
xor
dec
stc
les
in
push
inc
int3
icebp
arpl
inc
jae
pop
pop
rcll
aad
nop
pop
sub
leave
inc
sbb
std
jecxz
lret
mov
ficomps
or
lret
orl
jmp
mov
lea
push
xor
test
loopne
push
push
popa
enter
cmp
fs
lods
jecxz
mov
and
popf
jle
inc
push
cltd
inc
push
test
dec
pop
xor
cs
xchg
iret
or
addr16
ds
mov
lods
push
clc
mov
fnstcw
arpl
or
jg
push
jl
fiadds
adc
and
mov
fisubrs
aas
lods
dec
ds
ficoms
xor
or
pushl
inc
aad
insb
cmpsl
mov
add
icebp
outsb
scas
xor
test
jl
clc
or
add
jae,pt
aam
mov
ja
enter
sub
insb
out
xor
cmp
and
ss
ret
mov
addr16
pop
pop
iret
mov
ret
mov
fsubrp
clc
stc
or
aad
jne
jnp
mov
jne
cmp
cwtl
scas
out
addr16
rcr
js
dec
push
adc
cmp
hlt
rorl
cmp
adc
loopne
mov
ljmp
and
dec
repnz
and
test
push
outsb
lret
stc
xor
mov
sbb
jbe
andb
std
sub
xchg
mov
jb
mov
push
mov
cmc
inc
adc
mov
pop
popf
rcll
dec
pop
int
lods
sbbl
push
into
add
pop
push
cmc
pop
jge
and
or
clc
imul
inc
repz
mov
jne
negl
mov
cmc
dec
rol
gs
jbe
dec
jo
scas
push
gs
mov
mov
or
mov
fs
out
jl
adc
push
sbb
lret
or
mov
stos
fadd
mov
rcr
in
cs
push
stos
test
add
jl
sbb
pop
fs
xor
shll
adc
dec
insb
inc
mov
xchg
xor
fcomps
arpl
mov
aad
xorl
xor
leave
int3
in
aad
cmp
int3
int3
mov
enter
jnp
stos
cmp
sub
gs
mov
outsl
jo
movsb
imulb
sbb
mov
test
push
or
stc
mov
ret
out
cmpsb
nop
iret
sbb
push
fisubrl
and
and
push
aam
pusha
lock
or
in
ret
mov
fwait
xor
iret
mov
ljmp
negb
xlat
and
adcb
in
cs
push
cmp
pop
insb
pusha
jo
in
inc
cmp
mov
test
adc
dec
mov
mov
test
sub
add
cli
or
xchg
cltd
push
out
fisubl
data16
inc
jns
sbb
inc
jle
sbb
cmp
int3
ficomps
cmp
push
mov
jge
adc
call
mov
dec
add
std
call
jp
mov
push
jne
outsb
aad
loop
stc
out
push
xchg
and
data16
sub
pop
in
fildl
jecxz
in
into
sub
idivl
jp
cmp
jae
in
je
inc
cmp
adc
gs
xlat
cli
inc
mov
jno
or
loopne
pop
inc
fs
push
xchg
int
push
mov
pop
scas
push
inc
in
sbb
rcrb
leave
inc
sub
pop
in
pop
fnstcw
cmp
enter
mov
addr16
or
xchg
test
add
fdivrl
fstpt
cmpb
pop
hlt
scas
call
dec
lcall
movsl
lods
rcrb
and
mov
aad
test
and
push
lret
inc
push
cmp
jo
or
enter
cli
sti
mov
add
pop
mov
sarl
push
insb
es
imul
xor
and
mov
push
or
in
test
xor
mov
adc
push
push
mov
mov
pushf
inc
lds
popa
icebp
xchg
int
aaa
inc
inc
push
scas
pop
int3
cltd
add
add
jno
mov
ljmp
inc
repz
stos
cmp
sub
sub
jp
add
dec
jbe
sbb
sbb
xlat
daa
popa
dec
lret
loopne
dec
sahf
hlt
adc
cmp
mov
mov
jnp
and
sub
or
enter
dec
jo
mov
cld
push
mov
xchg
ljmp
popa
ljmp
int
fdiv
int
cwtl
pop
pop
mov
cld
cmp
push
mov
pusha
clc
lahf
and
inc
dec
or
addr16
pop
sbb
mov
js
adc
mov
nop
push
fistpll
ss
dec
loopne
in
push
pushl
in
popa
int3
sbb
out
iret
pop
push
mov
sub
les
jbe
jge
mov
ret
testl
sub
mov
pop
call
or
je
inc
arpl
lahf
mov
inc
out
test
in
push
fincstp
pop
jmp
jno
stos
mov
dec
mov
mov
out
bound
das
or
inc
mov
and
xor
outsb
mov
outsl
xor
push
adc
mov
mov
push
adc
in
push
orb
bound
ss
nop
in
cmc
mov
inc
sub
out
std
testl
jmp
cmp
jge
rcrl
adc
inc
fildll
jmp
push
imul
es
or
loop
sub
icebp
or
pop
outsl
fistpll
loop
insl
out
icebp
dec
xor
arpl
aam
mov
pop
gs
gs
sbb
std
lahf
pop
adc
push
add
stc
mov
ljmp
popl
dec
enter
or
mov
lret
push
add
std
mov
xchg
mov
jge
mov
ja
and
ds
mov
mov
xchg
add
mov
insb
push
push
das
scas
mov
push
popf
or
les
xlat
inc
jl
dec
out
insb
or
fcomps
sub
mov
dec
mov
mov
jmp
je
ljmp
lea
cmp
pop
test
push
or
xor
push
call
loopne
cmp
in
sarb
clc
in
ret
ljmp
fucomp
mov
and
jle
jno
addr16
mov
push
dec
mov
movsb
lods
sbb
rclb
bound
out
sub
dec
cwtl
push
inc
js
mov
mov
call
jb
sub
fwait
std
outsb
adc
ficoml
mov
into
repz
xchg
and
inc
xchg
mov
or
xchg
push
add
gs
insb
repz
mov
fdivrl
pop
nopl
outsl
sub
stos
jnp
ret
mov
lret
push
xlat
cmp
pushf
adc
and
sti
fs
xchg
pop
daa
xor
jo
addr16
mov
test
shll
xchg
cmp
and
sub
xchg
enter
cmp
dec
int
inc
or
dec
mov
jecxz
out
or
inc
popa
int
jge
jbe
cmpsb
mov
or
pusha
inc
addr16
inc
test
inc
out
mov
test
jmp
es
stc
push
mov
xor
push
mov
mov
mov
out
lret
push
cld
hlt
or
fcmovnb
push
cld
and
sub
pop
push
insl
sbb
mov
fs
cmovs
nop
inc
jns
nop
loop
inc
lahf
jno
cmpsb
das
pop
mov
iret
out
js
sbb
call
pop
dec
mov
sub
pusha
test
rcll
shlb
push
pop
push
cmp
add
pop
adc
lds
imul
xchg
insl
repnz
pop
repz
push
pop
test
and
jb
add
cmpsb
jb
dec
outsl
clc
daa
cmc
adc
sub
or
and
clc
sbb
add
cmp
lahf
push
imul
iret
loope
test
and
xchg
jns
jge
ljmp
mov
push
mov
push
stc
fstps
scas
xchg
dec
ret
dec
mov
cmp
std
cmpsb
in
sbb
push
aaa
rcrb
pusha
xlat
sbb
stos
stos
dec
lea
mov
vpextrw
lds
and
hlt
popf
andl
lahf
cs
jo
pop
inc
push
int
aaa
fs
cmp
aas
mov
pop
cmpsb
in
cli
ds
nop
ret
sbb
call
pop
shll
mov
xchg
sub
cmpsl
xchg
fwait
mov
and
jmp
ss
jmp
pop
jns
jnp
mov
pop
or
aaa
mov
test
xor
xor
or
stos
out
mov
shrb
jg
inc
iret
test
fisttpll
xor
cmp
int3
call
data16
mov
sbb
xchg
and
pushl
cmp
dec
shll
push
pop
add
sub
dec
sahf
scas
rcr
movsl
mov
xchg
iret
lods
pushf
rorb
dec
pop
dec
xchg
xchg
inc
stos
aad
xor
jmp
push
mov
xor
inc
xor
xorl
insb
daa
js
mov
mov
inc
xchg
icebp
ja
jb
notb
daa
stc
cltd
popf
xchg
cmpsb
and
mov
mov
inc
ja
lock
pop
mov
add
dec
test
dec
push
rorb
or
sbb
jae
cmpsl
fstpl
gs
pop
xor
js
cltd
jae,pt
mov
pop
xor
lret
add
cmpsl
dec
pop
pop
lods
jo
pop
shll
pop
add
xchg
lea
scas
mov
pushf
fsubrs
loope
stos
sub
push
dec
ret
addr16
jmp
dec
add
mov
xor
mov
adc
or
jle
or
pop
icebp
ffreep
shlb
repnz
in
in
ljmp
xor
testb
jne
inc
mov
ljmp
mov
add
xor
lret
mov
adc
test
mov
loop
inc
xchg
aad
jbe
mov
mov
les
push
jns
rolb
outsb
nop
cmp
cmp
jmp
jne
sahf
pop
pxor
sar
sbb
sbbb
lret
mov
mov
rcl
mov
out
add
rorl
pusha
xchg
sub
mov
outsl
mov
mov
dec
mov
daa
cmc
adc
jge
push
inc
adc
xor
mov
jg
mov
mov
outsl
ss
shlb
xchg
dec
xor
icebp
pop
enter
scas
adc
xchg
test
add
jl
std
jns
mov
push
out
out
jp
fcmovnu
cmp
pop
sahf
ds
adc
jns
sub
sub
and
cmp
test
pop
jns
inc
pop
mov
lods
imul
mov
movsb
inc
mov
sbb
sbb
cmp
out
daa
adc
adc
out
dec
xchg
xlat
xor
fisttps
daa
ss
jo
test
bound
add
subl
sbb
movsl
xchg
sbb
xor
mov
inc
nop
cmpsb
mov
add
je
or
pop
xchg
xchg
ret
into
push
jno
test
lock
call
jmp
adc
add
fcomps
mov
stos
add
pusha
mov
or
ljmp
das
sbb
aam
add
adc
mov
mov
rorl
loope
xor
mov
rorl
idiv
cld
jge
mov
pop
aas
mov
outsb
clc
mov
pop
lods
xchg
ficoml
ret
dec
dec
cmpb
mov
loope
mov
dec
xchg
jne
xorb
mov
pop
add
je
pop
test
leave
and
mov
push
in
add
mov
adcl
test
sbbb
pop
jmp
mov
mov
mov
lock
sbb
add
jge
clc
daa
adc
rolb
sbb
mov
adc
and
pop
jg
mov
cmc
sahf
shll
loop
cmpsl
jmp
rorl
ljmp
and
cmp
mov
call
out
lods
add
cmp
pop
idivl
xchg
sub
clc
jg
inc
mov
adc
std
and
or
cmp
push
adc
fs
leave
dec
sbbl
mov
icebp
add
clc
in
jmp
pop
pushf
data16
xchg
mov
push
adcl
or
sti
loop
xchg
loope
lea
push
pop
or
adc
adc
insl
stc
sar
inc
pop
mov
cld
lret
jge
cmpsl
adc
testb
in
xchg
xchg
dec
dec
jmp
xchg
adc
mov
cwtl
in
cli
lret
test
stos
inc
or
push
test
das
mov
int
pop
lret
pop
push
jb
mov
inc
mov
push
out
out
sbb
data16
mov
cs
popa
xchg
mov
sub
mov
outsb
inc
fisubs
xor
adc
enter
mov
cmp
in
lods
cmc
mov
and
mov
mov
xchg
jb
imul
adc
repz
add
aad
aad
pop
das
rcll
fidivrl
push
mov
test
push
jg
imul
sbb
loope
fldcw
jnp
das
push
icebp
ja
in
call
faddl
out
movsb
jb
add
adc
inc
stos
stos
cmp
aas
ss
loopne
scas
add
fcoml
sarl
dec
daa
ljmp
out
push
and
dec
xor
pop
mov
mov
insb
addr16
cltd
cwtl
out
lods
rorl
dec
aam
or
cmp
fcmovne
rcrb
dec
sub
push
int
fnstsw
or
push
insl
dec
dec
mov
test
adc
ja
cmp
pop
xor
push
mov
call
inc
jo
out
call
fistpll
jbe
daa
movsl
mov
ds
lods
in
or
xchg
inc
out
scas
sub
sbb
std
adc
and
mov
or
cld
shll
outsb
or
mov
int3
pushf
subl
scas
xchg
data16
add
arpl
dec
inc
sub
cmpsb
lock
cmp
int3
mov
sub
push
jo
bound
mov
ud2
sbb
pop
push
fcmovu
add
pop
fisubs
les
cmp
clc
loop
xchg
mov
push
sbb
jae
push
sahf
sahf
out
mov
test
in
pushf
in
popw
addl
xchg
daa
xchg
add
int3
mov
or
push
cmpsb
arpl
or
imul
pop
shll
cli
leave
pop
mov
std
daa
jnp
jne
dec
push
inc
jecxz
aas
or
gs
and
mov
cmpsb
cmp
ds
mov
sahf
ret
pop
dec
mov
and
push
push
add
cwtl
or
addr16
out
push
adc
xchg
dec
rcrb
xor
xchg
daa
mov
imul
and
nop
cmp
in
dec
push
js
xchg
test
or
pop
push
int3
push
inc
dec
or
cld
xor
enter
add
lcall
and
cmpsl
inc
push
cwtl
cmp
sbb
pop
aaa
dec
loopne
xchg
xchg
jp
iret
adc
cld
jo
insb
push
push
lahf
mov
mov
mov
aam
das
mov
test
push
movsl
jb
push
add
popa
xor
add
jae
enter
add
mov
jno
jnp
in
aas
cwtl
mov
or
add
xchg
adc
xchg
xchg
sbb
daa
std
mov
push
mov
je
decl
xchg
jmp
lret
add
mov
rorl
out
mov
jne
or
push
iret
push
ljmp
rorl
and
adcl
and
enter
fdivs
in
cwtd
int
push
or
push
xor
stos
or
or
adc
mov
inc
arpl
cmpsb
or
mov
sti
in
int3
sbb
xchg
adc
aam
dec
mov
lcall
inc
fwait
lods
jmp
inc
cmp
lds
mov
mov
fisttpll
sub
inc
cli
pop
inc
jne
movsl
mov
xor
adc
jns
dec
in
xchg
lods
pop
lods
out
jns
pop
dec
imul
shlb
cmpsl
fcoms
scas
sub
gs
xchg
sbbl
or
push
arpl
imul
mov
pop
aam
lds
stos
add
push
cmpsb
js
sbbl
jl
insl
popa
xor
icebp
jo
fisubrl
push
mov
cmpb
inc
in
or
andl
lods
pusha
nop
sub
ljmp
and
movsl
push
lret
cli
outsl
aas
inc
enter
jmp
decl
insl
bound
cmp
add
pop
cmpsb
aas
xor
lret
push
or
int3
dec
int3
test
sub
pusha
test
xchg
jmp
jge
xchg
cmp
cmpsl
sarb
out
in
lcall
or
imul
stc
inc
lea
fwait
cmpsl
sub
pusha
ret
or
add
jg
test
add
pop
aam
xor
iret
jno
ds
sbb
in
push
rolb
mov
outsl
pop
movsl
cmp
jmp
jmp
ds
nop
pop
cmpsb
sbb
pop
mov
mov
push
dec
mov
push
cld
xchg
stos
std
stos
movsl
xchg
or
xor
cmpsl
lds
cmp
mov
adc
xorb
sti
cmc
cmp
push
dec
lret
adc
pop
push
and
mov
ljmp
icebp
mov
fsubr
and
jge
sbb
and
cmp
cltd
or
jg
fldt
jno,pt
daa
fstps
sarb
sub
lock
jo
sarl
and
pop
jmp
into
nop
jmp
mov
dec
rcl
mov
mov
scas
lcall
loopne
jl
add
dec
mov
jbe
xor
mov
inc
aad
mov
mov
mov
filds
jo
cmc
adc
arpl
fxch
cmpsb
ds
and
jno
inc
adc
xchg
movsl
pop
stc
dec
push
rclb
mov
jbe
push
outsl
sbb
sbb
test
cmpsb
adc
sbb
cmp
and
lret
pushf
movsl
aam
adc
cmp
sbb
mov
cmpsb
call
mov
or
aad
ret
mov
jle
fidivrs
push
pop
add
dec
sub
sub
pop
sub
mov
jp
cld
fstpl
add
arpl
test
bound
ja
int3
aam
pop
paddq
aaa
mov
aam
movsl
push
sub
jae
rcrl
pop
test
mov
outsl
sbb
dec
inc
pushf
jb
outsb
xor
adc
dec
lods
aad
sbb
xchg
adc
cmp
push
das
insl
adc
loopne
jae
push
inc
dec
cmc
andl
dec
aas
dec
lea
ret
sbb
insb
out
jae
hlt
loopne
ss
sarb
rol
dec
call
mov
mov
pushf
and
xor
dec
lahf
ret
mov
push
movsl
mov
xor
test
shll
andb
jecxz
xor
cli
aas
test
push
lods
sahf
sbb
cmpl
push
dec
dec
lcall
inc
sbb
sbb
sub
icebp
pop
mov
mov
mov
outsb
ja
movsl
push
es
mov
xor
mov
dec
cmpb
lods
lock
adc
aas
dec
je
jb
sarb
adc
fcomps
mov
dec
sub
jecxz
arpl
lods
mov
mov
mov
out
ds
in
ficoms
xlat
and
ret
cmp
lea
cmpsl
sahf
jo
je
int3
fnstcw
cmp
jne
subb
test
push
icebp
int
sti
lock
imul
mov
and
leave
cmp
pop
adc
inc
stos
iret
cwtl
ret
pop
sub
mov
sbb
aam
jecxz
es
repz
and
cmp
mov
push
pusha
gs
aaa
sbb
jl
dec
mov
pop
stc
stos
ja
or
hlt
pop
pop
dec
in
je
cmp
and
outsb
push
movsb
or
inc
push
stos
out
test
and
xor
and
push
xor
cmpsb
dec
cmc
scas
nop
xchg
pop
or
aam
sbb
dec
dec
add
aas
dec
jb
mov
jg
lea
jno
xchg
cmc
sti
test
xor
pushf
jmp
xchg
inc
push
cmp
imul
daa
xchg
pop
fnstsw
push
mov
loopne
jg
jns
push
stos
or
jecxz
xchg
iret
mov
jno
cmc
inc
mov
mov
popf
loop
aad
ret
cwtl
addr16
fistpl
incb
xchg
push
cltd
dec
loop
pop
cli
jle
aam
movsl
std
je
daa
dec
push
lds
addr16
or
int
mov
fucomp
sbb
inc
mov
cmpsb
iret
xchg
iret
push
andl
jge
addl
mov
insl
popf
jge
add
mov
push
dec
iret
test
addr16
and
push
popf
push
mov
mov
sub
divb
insb
fistpl
scas
mov
or
pop
out
loop
cmc
xchg
scas
shl
mov
dec
cltd
outsb
outsb
sbb
jle
movsl
out
xchg
loope
and
dec
repnz
mov
cltd
cmpsl
aaa
mov
ss
push
pusha
aam
orl
push
cmc
add
cmp
push
add
and
rcrw
out
jg
and
xchg
inc
push
xorl
sbb
icebp
and
mov
cmp
repz
jns
mov
sub
popf
aad
rcl
repz
repnz
and
xchg
in
jmp
dec
sub
push
mov
xchg
es
xor
sbb
lods
xor
mov
dec
aad
mov
xchg
popf
jnp
inc
jnp
dec
cltd
push
pop
popf
xchg
pop
inc
dec
pop
jecxz
cmp
and
push
inc
sbb
call
aad
fistpll
or
dec
bound
int
out
jmp
dec
and
inc
adc
mov
stc
outsb
ljmp
cmp
inc
dec
sahf
ds
xchg
fmuls
out
cmp
inc
cmpl
stos
lds
mov
fmulp
test
add
insl
loopne
mov
rcl
inc
xor
daa
mov
lods
inc
sbb
push
dec
jg
add
repz
es
sub
in
ret
cmp
pop
inc
sbb
loop
mov
js
jmp
jge
xor
jecxz
dec
lahf
in
sbb
fs
cmp
push
pop
jb
sub
insb
jno
dec
imul
imul
je
dec
shll
lret
rcrl
das
fs
inc
mov
js
lret
shlb
fmuls
in
adc
xor
xchg
ficompl
inc
ljmp
scas
xchg
pop
cs
pop
dec
sub
xchg
mov
pop
cmpsb
pop
mov
stc
or
jp
jno
in
add
sbb
adc
xor
cltd
xchg
xor
leave
mov
insl
pop
sub
fistps
iret
push
aam
xchg
fdivl
scas
inc
mov
leave
arpl
xchg
mov
sti
add
mov
inc
mov
in
lods
pop
stos
aad
xor
in
push
movsl
sub
pop
shll
stos
sub
cmp
or
shr
andb
pop
jo
lahf
insb
dec
jecxz
xor
inc
xor
dec
into
mov
pop
pop
nop
or
xor
in
loope
xchg
aad
pusha
scas
fwait
cmpb
je
movsb
mov
add
pop
bound
or
popf
loopne
mov
pop
in
call
in
push
sub
mov
icebp
andl
clc
mov
mov
dec
fwait
pushf
dec
imul
scas
test
data16
aaa
lock
dec
mov
cli
adc
add
push
inc
xchg
data16
dec
movsl
dec
ficompl
jmp
ljmp
mov
add
xchg
out
ds
in
adc
xor
add
lock
out
ret
cmp
push
lret
dec
inc
push
test
cwtl
mov
xor
inc
ret
enter
xor
sub
int3
and
lods
cli
scas
xchg
dec
adc
pop
mov
lock
fstpt
inc
adc
ret
cmp
ret
push
mov
in
mov
stc
xor
cmp
int3
mov
imul
xchg
call
jae
mov
sbb
rorl
push
pop
stos
fildl
lret
or
lahf
add
mov
sahf
in
sbb
mov
fmul
roll
outsb
lea
jp
shll
fs
sbb
mov
mov
jne,pn
push
dec
test
popf
js
inc
ss
mov
rolb
stc
out
scas
adc
in
insb
xchg
jb
and
lret
daa
sub
arpl
inc
sbb
out
pop
test
cli
adc
std
ds
icebp
mov
cmp
lock
stc
pushl
push
dec
rorb
test
sub
sub
xchg
xchg
add
jmp
movsb
shll
paddsb
xchg
popa
add
and
sahf
and
decb
test
lret
pop
cmp
add
cli
xchg
cmp
rcrl
xor
push
pop
imul
mov
clc
mov
push
push
inc
mov
xor
movsl
cltd
inc
sti
rcll
mov
or
bnd
push
inc
adc
ja
xor
les
fs
mov
jp
or
push
adc
aaa
cmc
and
aam
adc
add
mov
mov
pop
pop
fsubrs
ja
jno
jne
pop
push
xor
xor
push
xor
arpl
cmp
aas
ds
lret
sub
cmp
mov
or
push
jge
imul
and
pop
in
insb
xor
jl
das
or
mov
ja
popa
jg
xor
sbb
inc
ja
out
fidivl
pop
enter
xor
scas
inc
add
pop
clc
out
adc
add
mov
scas
enter
into
push
shrb
or
pusha
into
popf
nop
hlt
std
inc
rclb
shll
rol
leave
add
fistpll
sub
jnp
inc
jle
mull
xlat
push
pushl
push
jecxz
fwait
jae
push
cwtl
insb
scas
movsl
jmp
arpl
pop
sub
and
icebp
insl
and
stos
sub
cmc
call
adc
ret
push
dec
jno
popa
nop
jae
stos
lret
pop
stos
push
loop
jae
out
flds
adc
iret
sub
pop
inc
add
or
add
loop
jno
insb
push
jle
pop
popf
insl
lock
lea
xchg
rolb
xchg
mov
pop
outsb
mul
add
outsl
or
lods
in
pop
into
daa
cmp
mov
push
jb
je
loopne
std
scas
mov
mov
xchg
movsl
fdiv
sub
add
fsubl
inc
pop
adc
mov
and
call
call
add
sarl
sub
lods
loop
inc
je
test
sbb
scas
aas
popf
inc
lea
add
addr16
imul
and
outsl
xchg
pop
fst
xor
jecxz
test
dec
and
mov
js
xchg
pop
jecxz
mov
dec
sub
mov
xlat
push
jge
xor
xchg
xchg
sbb
xchg
push
cld
add
adc
adc
inc
xor
push
sbb
jns
std
xchg
fmuls
sub
pusha
scas
mov
cmc
aam
ret
adc
adc
test
or
ffree
inc
mov
ja
into
xor
aam
or
stos
daa
loop
mov
scas
icebp
mov
xchg
cltd
mov
add
cs
fistpll
cmp
xchg
xchg
ret
jle
sahf
mov
lret
outsl
mov
xlat
shl
push
push
sub
sbb
xchg
loop
pop
test
mov
daa
push
lods
pushf
outsb
add
movsl
fcoml
and
sahf
add
cmp
mov
mov
inc
or
cmp
outsb
cmp
sub
out
jle
xor
stos
out
cwtl
and
adc
pop
jle
jge
or
push
imul
mov
test
add
jecxz
mov
add
jae
adc
ss
add
adc
inc
addr16
xor
sbb
lds
push
dec
and
xlat
out
jb
cmc
jl
es
jp
push
xchg
mov
cmp
xorb
je
popf
sub
sub
sub
neg
mov
push
xchg
cmpsb
and
adc
aaa
sbb
daa
sti
lods
pop
loopne
popf
cmp
cltd
call
ds
pop
loopne
in
jmp
lret
mov
imul
adc
arpl
movsl
in
mov
outsl
sub
push
idivl
das
cs
sbb
mov
aaa
je
movq
sti
jns
mov
push
xor
inc
xor
inc
dec
mov
cwtl
hlt
insb
xchg
into
int
xchg
dec
sub
roll
dec
cwtl
out
cs
sub
test
hlt
repnz
enter
shr
mov
mov
jg
mov
out
imul
leave
in
add
lods
call
iret
push
xlat
inc
fsubrs
in
rorl
mov
pop
scas
jo
pusha
test
subl
xchg
push
push
ficoms
adc
cli
mov
andb
and
shrb
push
sbb
or
xchg
sub
push
mov
fsts
xor
stos
mov
sti
push
sub
daa
loopne
out
mov
mov
int
test
fists
fildl
outsb
das
xchg
arpl
mov
call
push
lcall
pop
mov
je
mov
fiadds
mov
inc
mov
cwtl
xor
sub
xor
pusha
and
insb
xchg
nop
mov
shl
lcall
dec
xchg
push
insb
xchg
scas
adc
sub
cmp
rorb
dec
cmp
idivb
mov
insl
pop
pop
or
aaa
push
sti
xor
pop
cmpsl
repz
dec
mov
xor
dec
std
xchg
jb
inc
aas
andb
push
lcall
add
inc
pop
fucom
mov
daa
mov
push
fmull
mov
int3
movsl
repz
mov
scas
dec
shll
js
lods
mov
lods
pusha
mov
scas
enter
and
shrb
lcall
jne
cmp
clc
andb
xchg
sub
jmp
stos
loope
stc
addr16
les
xor
push
hlt
mov
mov
and
mov
lcall
sbb
xor
mov
pop
inc
loope,pt
mov
arpl
rolb
fstpt
movl
xor
arpl
sub
lahf
xchg
cmp
es
daa
arpl
rcrl
push
fists
cmpb
add
stos
mov
addb
add
lret
mov
lea
push
ds
pop
popf
mov
ret
scas
sbb
shll
rolb
pop
mov
ficoms
dec
jae
xchg
imul
mov
insl
mov
add
cmp
fmul
lods
addl
and
mov
push
and
inc
aam
insb
je
loop
sbb
fisttpl
xor
adc
stc
and
xadd
loopne
jb
bound
cmp
and
mov
je
cmpsl
sbb
cs
lret
insb
ljmp
bound
dec
cld
and
mov
push
iret
sub
jae
inc
sub
push
fsub
sahf
int3
ljmp
pop
xlat
loopne
jo
mov
xchg
inc
loop
push
imul
sbb
push
into
int3
adc
addr16
jnp
sbb
add
pushf
sbb
cmp
iret
inc
rcrb
jmp
adc
pop
xlat
adc
cwtl
inc
aaa
and
mov
arpl
adc
inc
out
push
mov
insb
outsl
clc
and
popf
xor
repz
clc
mov
jnp
dec
jg
ja
loope
nop
mov
or
test
dec
outsb
jb
jge
or
mov
sub
es
xchg
int
sbb
in
std
test
mov
imul
je
scas
jg
cmp
arpl
enter
mov
mov
repnz
call
call
rcrl
inc
dec
cmpsb
mov
in
call
popa
xor
ret
push
and
and
xchg
inc
and
add
push
add
mov
subl
sbb
sub
inc
fwait
in
enter
test
mov
rclb
pop
cwtl
mov
push
int
xlat
add
dec
pusha
sub
daa
mov
jnp
imul
push
mov
adc
pop
cltd
test
out
frstor
inc
dec
in
fld1
cli
xor
sub
mov
into
ja
xchg
clc
mov
push
cmp
test
idivb
cmp
lahf
mov
sbb
sbb
pop
shrl
and
gs
andnps
sbb
leave
add
push
loop
popf
das
sub
es
popa
pushf
call
pop
fnstsw
push
cs
jmp
or
scas
test
imul
xchg
lret
cmp
pusha
mov
push
mov
fimull
sub
push
mov
xor
jo
fs
xor
out
decl
mov
pop
scas
adc
movsb
inc
in
stos
inc
inc
inc
clc
xor
bound
push
ja
mov
push
orl
stos
push
outsb
jno
mov
jge
xchg
jecxz
les
lds
pushf
hlt
mov
push
cmp
mov
fsubr
cmpsl
and
leave
xor
les
pop
out
testl
clc
cmpb
inc
xchg
xor
mov
shlb
mov
fsubrs
dec
push
pop
add
pop
jg
xchg
mov
or
rclb
hlt
mov
xor
xchg
addr16
hlt
pushf
sbbl
in
cmp
sbb
mov
inc
adc
ret
sahf
leave
jmp
sar
aas
js
xor
ds
int
pop
enter
cmpsl
inc
loope
and
fnsave
mov
rcrl
inc
loope
cmp
sub
test
in
push
xor
xchg
push
sbb
jl
repnz
push
mov
cs
or
mov
xchg
xor
pushf
movsb
cwtl
repz
jns
inc
loopne
jecxz
sub
push
mov
or
cmp
into
sbb
repnz
ds
out
ja
add
xlat
dec
sub
push
mov
mov
shrl
out
xor
and
in
sti
jae
sbb
jne
xor
lds
and
adc
jne
xor
int3
mov
adc
in
jae
inc
shll
gs
dec
adc
ss
out
leave
mov
mov
push
div
mov
cmp
or
push
out
lret
movl
mov
cmp
add
repnz
loop
sbb
aad
mov
cmpb
push
mov
les
cwtl
push
xchg
sbb
push
test
dec
shll
pop
in
or
stc
pop
addr16
lods
push
adc
or
adc
mov
cmpsl
ficoms
mov
rorb
and
repz
xchg
or
stc
fistps
leave
jecxz
or
lret
insl
lcall
and
cmpsl
adc
pushf
cli
mov
pop
inc
add
push
sbb
mov
cmp
or
aam
pop
jno
outsb
pop
sbb
mov
data16
mov
ds
jae
xor
sub
mov
xlat
push
lret
stos
daa
mov
mov
xor
sbb
pop
cmp
int
sub
mov
adc
fsubr
into
fisubs
jecxz
inc
sub
ret
cmp
cltd
test
lret
pop
dec
mov
fldt
xlat
sti
cld
fs
negb
jno
sti
stos
mov
mov
repnz
sub
mov
ret
and
popf
les
sub
dec
pop
sarl
stc
push
push
adc
out
scas
shrl
inc
xchg
loopne
xor
push
sbb
shll
jae
andl
data16
adc
mov
jle
xchg
out
pop
push
adc
xchg
or
aad
into
fwait
adc
shlb
adcl
xchg
mov
sub
cli
stos
jno
mov
insb
sar
addps
adc
add
aas
push
fisttpl
cli
int
or
adcb
repz
sub
movsl
pushf
lret
icebp
mov
dec
inc
test
add
cmp
xchg
xchg
pop
pop
xchg
inc
inc
cltd
cwtl
inc
sbb
nop
dec
dec
into
sar
sub
lea
or
subl
xor
sub
fcmove
test
cmpsl
shrb
data16
pop
aaa
or
pop
fidivl
lahf
push
addl
pop
negb
xchg
in
mov
push
cmp
and
cmp
dec
mov
jle
mov
mov
dec
sbb
mov
push
pop
mov
repnz
mov
mov
aas
push
dec
xchg
movsl
gs
dec
fcoml
stos
mov
notl
add
and
clc
nop
push
or
xchg
loop
negl
mov
mov
and
mov
enter
xchg
mov
mov
leave
out
mov
or
xor
mov
sbb
mov
out
ficomps
addr16
cmpsb
stos
dec
sbb
cld
pop
xor
fnstcw
outsb
ljmp
adc
cltd
call
fwait
dec
and
cld
sar
pusha
mov
jo
xchg
and
xchg
mov
jns
cmpsl
jne
dec
cld
clc
and
sub
test
pushl
js
lea
movl
pop
mov
mov
insl
add
and
mov
ljmp
ljmp
mov
mov
sbbb
sbb
cmp
out
sbb
xor
sbb
adc
sub
mov
xorl
ja
mov
lret
adc
xlat
push
orl
and
in
fcoms
filds
cmpsl
adc
popa
ds
mov
fmul
sbb
dec
sbb
setnp
mov
pop
cmpsl
loopne
sub
push
ljmp
pop
and
rcr
pop
dec
and
add
jo
jbe
inc
pop
cmp
and
jmp
mov
pusha
mov
hlt
xchg
xor
dec
jb
adc
hlt
movsl
mov
jl
push
stos
push
jae
scas
adc
lea
stc
sub
ret
mov
stos
pushl
in
movsl
leave
fsts
or
push
mov
xchg
push
into
outsl
addr16
aaa
pop
push
sti
addb
pop
or
cmp
aaa
neg
cmpl
int
fyl2xp1
hlt
iret
hlt
xor
loopne
mov
xchg
push
pop
or
test
lea
stc
xchg
xchg
pop
popl
dec
sub
mov
push
pop
or
scas
mov
insb
shrl
lods
and
dec
int
pop
imul
fwait
adc
test
xchg
decl
dec
aam
dec
dec
icebp
movsl
jge
into
lret
fsts
jns
push
jae
pusha
adc
aam
push
fimull
out
mov
cs
ret
cmc
push
mov
test
loope
sbb
in
in
scas
dec
fwait
call
push
and
or
and
pusha
inc
pop
mov
inc
subl
dec
in
jg
sbb
jnp
out
jmp
adc
add
ljmp
xchg
sub
ret
xchg
pusha
rolb
sarb
xchg
sbb
adc
adc
adc
nop
fimuls
mov
jae
popf
fbstp
popf
imul
dec
cmc
in
add
sub
push
push
mov
scas
xor
sbb
movsl
xor
mov
jmp
pop
cmp
mov
aam
std
fwait
jecxz
adcb
cli
xor
push
cwtl
sarl
testb
adc
arpl
das
cmp
mov
xor
jns
mov
notl
stos
mov
std
ja
add
int3
xchg
mov
mov
std
adc
adc
xchg
jne
fs
rcll
ljmp
fcmovne
sarb
in
cmp
stos
jle
fxtract
iret
fldcw
mov
es
insl
pop
xlat
mov
cli
mov
imul
insl
inc
adc
fstps
cmc
push
ret
ds
ss
fcoms
cmp
stc
rorl
shrb
jmp
sahf
fnstenv
cld
mov
adc
cmpsb
cmp
adc
mov
jecxz
jne
push
ljmp
and
mov
cmp
add
add
and
push
jae
sbb
sahf
dec
xchg
or
adc
pusha
fsub
jo
and
sub
insl
cmpsl
cli
andl
sub
or
push
sarl
dec
ret
xor
fstps
das
ja
adcl
sub
loop
jae
ret
das
cmp
xchg
imul
test
cmp
add
daa
int
xchg
ret
rol
in
inc
pushf
test
sbb
sti
cmp
xlat
test
jge
imull
mov
mov
fidivrl
jg
pop
push
lds
mov
push
subl
ljmp
lahf
mov
popa
clc
in
int
jns
gs
or
sbb
xchg
mov
es
pushf
mov
data16
sarl
cmpsb
xor
mov
mov
and
mov
adc
push
xor
roll
mov
cmpsl
arpl
pop
sbb
in
in
add
mov
add
adc
and
stc
dec
jb
ja
loopne
out
loop
xchg
jbe
xor
xchg
ja
gs
dec
or
clc
into
loope
aam
cmp
repz
les
mov
popf
xchg
jns
inc
in
dec
cmp
push
out
mov
lea
int3
addr16
mov
sti
fwait
mov
or
dec
pop
and
push
sar
out
cmpsb
dec
negb
lret
aaa
into
aam
test
and
sbb
das
dec
or
scas
in
cmp
int
cmp
or
fdivs
fcompl
cld
scas
in
adc
mov
jbe
cmp
testb
repz
xchg
adc
int
aaa
dec
dec
adc
gs
out
ret
in
jae
mov
repz
ja
int
mov
or
pop
scas
mov
lret
or
or
mov
stc
xchg
jo
push
in
loope
xor
nop
fistpl
mov
out
clc
das
cwtl
pop
and
lods
mov
arpl
mov
insb
mov
pusha
fstpl
test
jl
rcrl
push
je
mov
loop
sbb
js
xchg
xor
gs
das
pop
push
dec
sbb
and
stos
enter
imul
neg
sbb
add
roll
int
scas
dec
cmpsb
mov
pop
cli
sti
cwtl
pop
xchg
mov
into
movsl
dec
mov
lret
push
leave
cmp
or
sub
pusha
cmp
fstpt
mov
insb
repz
push
sti
test
adc
cmp
dec
imul
inc
wbinvd
push
into
jbe
push
aas
lcall
lds
shrl
dec
dec
inc
jnp
mov
push
ror
test
mov
in
pop
cmp
hlt
push
pop
lea
jne
addr16
and
gs
bound
movsl
xchg
insb
sub
dec
int
jmp
inc
inc
test
inc
frstor
push
sti
repz
mov
mov
jb
mov
xor
out
pop
fnstsw
xchg
sbb
bound
sbb
fld1
arpl
aam
mov
fiadds
mov
cmp
dec
or
push
dec
pop
repnz
xchg
ret
gs
hlt
pop
cmp
stc
iret
loop
int
repnz
fimull
stc
mov
mov
lods
movsb
jo
or
push
mov
push
mov
or
cli
icebp
jle
dec
cld
mov
xchg
sub
and
stc
out
dec
xor
mov
int3
ret
test
out
scas
sub
adc
fimull
outsl
nop
imul
mov
pop
mov
xchg
hlt
pop
jp
aas
sub
lahf
int3
jecxz
inc
xchg
sbb
lcall
bound
jg
mov
sbb
sub
sbb
mov
mov
orl
push
pop
xchg
hlt
popa
dec
test
insl
pop
movsl
or
mov
sbb
mov
lret
outsb
mov
cltd
dec
mov
or
pusha
xor
or
mov
test
add
push
cs
repnz
mov
and
in
or
lds
nop
sub
adc
lock
jl
clc
pop
ret
in
dec
jge
test
test
sub
int3
cmp
or
ss
sbb
imul
rolb
add
pop
dec
push
lds
jle
jmp
scas
cmp
mov
cld
icebp
mov
inc
mov
fsts
jb
lods
loope
sbb
lods
sbb
push
fwait
adc
dec
stos
add
lods
test
cmp
cmp
mov
jbe
imul
rcr
leave
and
adc
ja
add
popf
pop
divps
pop
cmc
outsl
gs
adc
cltd
lea
stc
jne
sbb
add
movsl
mov
notb
mov
jp
jecxz
jnp
mov
adc
mov
push
cs
pop
mov
and
nop
and
sbb
addr16
mov
dec
mov
int3
inc
xor
mov
mov
mov
fwait
jp
shll
lds
outsb
mov
mov
sbb
cmp
xchg
adc
or
pop
push
in
mov
pop
aam
sub
lock
dec
aam
add
mov
clc
jl
adc
mov
les
sub
loop
xchg
shr
sub
cmpb
popa
clc
out
lret
sub
jmp
pop
jo
jae
or
mov
adc
inc
rcrl
sti
pop
sarl
ret
push
ljmp
aaa
ret
or
sbb
push
sub
xor
cmc
cmp
mov
cmp
shrl
aam
inc
je
jb
lcall
test
dec
stos
test
outsl
add
or
or
inc
scas
rorb
add
iret
inc
leave
lret
xor
shlb
mov
shl
jns
add
pop
bound
mov
and
loop
jns
pop
dec
mov
pop
xor
mov
scas
cld
movl
ja
dec
fwait
jae
jno
flds
mov
loope
test
js
movsl
lds
in
lret
lods
push
push
push
into
mov
pop
cmp
add
es
clc
sbb
sub
insl
out
jne
inc
adc
scas
mov
mov
enter
rcr
sub
inc
adc
xchg
sub
test
rclb
push
repnz
or
cwtl
jg
pop
sub
jns
ss
cwtl
je
adc
es
pop
inc
sub
push
pop
shl
adc
jb
dec
into
or
jecxz
push
rclb
daa
lret
out
scas
jge
or
xchg
outsl
int3
or
add
jl
imul
pop
ret
xchg
test
clc
pop
sub
xchg
sti
test
pop
sbb
out
aaa
add
fistl
push
daa
mov
or
mov
ret
pop
pop
sbb
popl
push
imul
roll
enter
in
pop
rorl
sub
mov
mov
sbb
nop
in
push
xchg
sub
adc
add
int
subb
mov
stc
xchg
outsb
aas
fmuls
lret
repnz
sti
push
fidivrs
lds
outsl
jns
mov
lods
sbb
xchg
inc
stos
mov
scas
push
push
mov
out
mov
inc
xchg
das
xchg
jle
mov
out
sub
js
les
mov
aaa
mov
insb
scas
mov
sub
test
cmc
int3
roll
cld
push
mov
mov
test
mov
push
or
jp
cmp
xor
pusha
cmpl
aam
cltd
adc
les
scas
enter
sbb
mov
inc
movsl
bound
loopne
loopne
loopne
aam
fimull
inc
loop
loope
mov
sti
add
xchg
inc
jo
push
rcl
mov
xor
dec
inc
lahf
lods
sub
and
adc
jbe
sub
mov
jg
sbb
add
pop
out
js
push
xchg
mov
je
push
dec
mov
pushf
jns
add
fwait
ljmp
pop
mov
mov
gs
sub
cmp
inc
mov
sbb
fwait
mov
sti
dec
dec
xor
test
addr16
add
add
int3
or
das
and
out
ss
xchg
inc
push
lock
add
dec
out
fldl
and
and
pusha
aaa
mov
fwait
dec
push
xchg
xor
in
add
mov
sbb
pop
pop
outsb
cmc
inc
inc
stos
outsl
test
scas
fwait
rclb
mov
repnz
and
dec
mov
xchg
inc
pop
pop
dec
popf
push
clc
ret
adc
cmpsb
sbb
cmpsb
lods
mov
mov
pusha
sub
incb
mov
pop
iret
xor
or
mov
xchg
call
cld
xor
into
xor
mov
xchg
rcrb
fdivr
cmp
mov
sub
or
ja
fisttpll
cmp
pop
adc
popa
xorb
xor
lock
sbb
pushf
sbb
movsb
addr16
inc
and
and
fimuls
xchg
insb
mov
jbe
pop
je
pop
std
testl
fwait
in
enter
hlt
repz
dec
push
pushf
int3
add
xchg
or
and
stos
loop
fdivs
fimull
in
jg
sub
pop
shlb
sub
cmp
xchg
xor
ret
push
lea
das
adc
mov
inc
jae
jb
rorb
pop
mov
sub
xor
inc
mov
insb
ret
les
jnp
cld
mov
add
add
and
ljmp
leave
stos
adcl
fucomp
add
mov
dec
mov
cltd
jo
ss
lahf
test
in
mov
inc
jno
popf
dec
mov
rcr
out
sub
mov
popa
dec
adc
jmp
fsts
insl
insb
mov
xorb
repnz
sbb
imul
inc
icebp
arpl
mov
and
xor
sub
jbe
aad
jnp
in
pop
add
sub
cs
divl
gs
push
movsb
fistl
bound
movsb
sti
fidivrs
loop
sti
aaa
xchg
mov
add
into
icebp
test
subl
icebp
cmpsl
stos
adc
lods
mov
mov
imul
jg
bound
mov
and
loop
fisubl
jae
mov
fstl
imul
sbb
das
enter
or
jo
or
sub
push
ss
addr16
out
adc
out
xor
add
mov
add
enter
sahf
add
mov
loop
hlt
in
daa
arpl
adc
add
fisttpll
sub
fistpl
movsb
pop
inc
dec
insb
xchg
pop
aad
add
mov
pop
lret
adc
mov
inc
xlat
sbb
add
mov
lods
aaa
and
cmp
mov
adc
mov
and
sub
mov
cmc
jecxz
mov
add
pop
inc
fwait
adc
xor
mov
adc
sahf
xchg
dec
lahf
mov
cmp
dec
icebp
clc
cld
sbb
jmp
clc
push
repz
inc
aam
loop
sbb
test
jp
pop
or
xchg
xor
cmp
mov
jecxz
fidivs
out
insl
in
adc
mov
and
in
test
addb
js
aad
and
xor
fnstsw
jmp
mov
lret
or
enter
xor
cmp
fwait
add
pop
and
xor
add
in
aas
aam
shlb
xor
pop
push
int3
dec
jno
add
mov
into
mov
aam
mov
pop
jmp
push
mov
xchg
out
mov
dec
in
cmc
loopne
mov
sub
xor
data16
jg
mov
push
dec
jge
out
adc
call
sbbb
imul
lds
pop
jl
dec
test
jnp
adc
or
pop
push
cmp
ret
mov
xchg
sbb
add
call
sub
lea
shl
inc
shrb
lods
xor
sub
jp
adc
ret
orl
loop
aam
or
push
out
ret
sub
shr
test
or
popa
xor
add
add
pop
gs
je
insl
test
mov
push
lea
pop
sub
ret
mov
pop
ss
jne
jb
sbb
sbb
in
fdivl
push
xorl
and
add
lods
lods
and
sbb
scas
loopne
inc
ficoms
and
fistl
inc
icebp
pop
pop
cs
mov
scas
mov
ljmp
rclb
call
cmp
xchg
xor
stos
mov
jae
orl
sbb
push
push
sbb
cli
xchg
dec
and
inc
cmp
mov
mov
mov
mov
xor
xor
sbbl
cmpsl
sub
jp
pop
pop
pop
cmp
push
stos
nop
xor
fmulp
and
lret
dec
dec
sub
std
mov
sbb
fs
ret
jo
daa
stc
sub
dec
xchg
sahf
push
icebp
cltd
xor
and
dec
xchg
test
adc
daa
aam
aas
xchg
jl
jnp
mov
dec
or
aam
inc
es
dec
nop
xchg
cmp
add
clc
lock
dec
inc
imul
es
mov
mov
xor
jno
pop
aas
push
or
xchg
jecxz
pop
add
push
rorl
out
addr16
mov
fwait
orl
xor
adc
push
xor
cmpsl
xchg
xchg
cmp
mov
pop
and
inc
adc
cmp
mov
enter
out
idivl
ds
cld
xor
xchg
orb
out
sbb
fs
into
imul
xchg
adcl
and
mov
iret
call
testb
rcrb
xchg
cmpsb
ss
cltd
fsub
roll
loope
leave
xchg
jno
or
arpl
mov
cmp
jmp
jmp
popf
xchg
fs
mov
push
imul
subl
cwtl
data16
lretw
aad
push
hlt
arpl
shrb
push
inc
xchg
cmp
cwtl
mov
daa
add
ret
adc
xchg
das
out
jae
int
nop
sub
test
sub
psubq
leave
loopne
adc
xchg
mov
test
cmp
or
xchg
jg
cmp
pusha
cmp
jp
and
or
xor
mov
lock
mov
mov
sbb
sbb
mov
add
inc
push
arpl
stos
xchg
mov
lods
adc
inc
dec
notb
jbe
push
sti
inc
pop
ret
add
pop
cmpsl
lea
clc
movsb
cmp
out
pop
ret
adc
inc
mov
push
lea
or
bound
fisubrs
mov
paddusw
add
push
jbe
adc
mov
mov
xor
mov
cmovb
mov
or
iret
inc
nop
pop
in
adc
ja
adc
jecxz
adc
cli
mov
push
sub
push
outsb
inc
push
or
mov
leave
iret
mov
adc
mov
cmp
dec
mul
enter
jno
fisttps
dec
inc
jmp
xor
int
and
shlb
out
jg
cmp
cmp
aad
sti
sarb
jge
out
rcrb
cmpsl
mov
jmp
ja
or
sub
frstor
sub
push
popf
adc
outsl
mov
mov
out
repnz
or
or
rcrb
push
push
xchg
dec
sbb
mov
xchg
call
xchg
test
dec
out
dec
and
ja
out
ficoms
or
es
aas
stc
cwtl
jecxz
int3
popa
fmuls
xchg
adc
out
or
test
jns
cld
push
or
mov
inc
iret
fdivrl
sbb
mov
lea
daa
sbb
jecxz
je
movsb
ret
test
out
ds
cmp
xchg
lahf
add
inc
jbe
insb
test
lcall
mulb
lods
jno
xor
xchg
pop
arpl
or
dec
mov
rclb
stos
lock
in
sub
repnz
or
xchg
xchg
popa
add
pop
into
mov
or
xor
sti
repz
lea
add
out
mov
pop
fsubrs
and
pop
dec
in
mov
pop
rorb
or
aas
lea
xchg
mov
lock
cmp
movsb
ss
cmc
pop
and
xorb
cmp
push
xchg
push
adc
aad
daa
jnp
stos
stos
scas
call
sub
mov
push
mov
loop
jg
pusha
lock
lds
pop
out
in
mov
sbbb
out
xor
je
push
ffree
sub
testb
cmp
jb
out
and
xchg
adc
fwait
inc
sub
les
repnz
xlat
xlat
iret
sub
pushf
mov
adc
in
lret
enter
js
add
push
xor
pusha
cmc
mov
fistpl
jnp
inc
ds
std
adc
sbb
inc
divl
scas
int
insl
int3
aas
adc
out
jnp
mov
div
sbb
adc
jno
adc
mov
jns
push
sbb
jle
fnsave
sahf
fisubs
and
mov
mov
pop
mov
out
cmp
adc
fdivr
cmp
or
mov
fistps
pop
loopne
iret
scas
sbb
imul
mov
in
setnp
popa
icebp
mov
iret
fsubl
jo
sti
add
xor
and
or
roll
les
jb
scas
lret
js
je
lods
jp
push
cmp
ss
push
lock
test
xor
pop
xchg
pop
pop
adcl
xor
xorl
mulb
add
call
stos
stos
or
enter
push
mov
adc
inc
mov
mov
and
mov
ret
icebp
cli
scas
stos
mov
pusha
mov
es
popa
repz
mov
mov
aas
dec
jno
add
push
jb
mov
jb
mov
or
inc
jno
popl
cmp
call
in
ja
outsl
mov
movsb
mov
add
push
sub
mov
movhps
xchg
push
arpl
add
loop
jns
push
jl
push
inc
and
lea
jmp
sbb
out
ret
and
jo
popf
jle
pop
roll
mov
sbb
push
or
out
xchg
xlat
inc
adc
test
aad
mov
lcall
in
mov
outsl
pushf
or
loop
popa
mov
sub
addr16
das
mov
sbb
cmp
dec
or
sti
xor
mov
mov
mov
xchg
inc
iret
sub
pop
jmp
and
repnz
mov
lea
hlt
xor
clc
xchg
pop
xchg
dec
dec
fisubl
dec
push
dec
push
cs
and
mov
jg
jne
imul
cmpsl
fstpt
aaa
lods
inc
mov
xor
ret
push
push
xor
xor
fsts
cmp
femms
push
bnd
out
mov
subb
xor
scas
movsl
pop
les
addb
sbb
outsb
inc
popa
sti
mov
add
xchg
xchg
jecxz
jb
cmp
adcb
push
mov
pop
jg
scas
movsl
pop
shl
xchg
inc
push
xchg
pop
out
fisttpl
mov
mov
xor
ret
test
movsb
sbb
lret
movsl
jo
sub
and
cmpsl
jne
aas
sbb
jb
stos
add
or
inc
mov
roll
push
mov
out
adc
out
cmp
ja
outsb
cmp
jmp
adc
rcll
outsb
cmpsl
push
std
stos
xchg
mov
cld
inc
adc
xor
imul
test
clc
ds
cmpsl
xlat
sub
mov
loopne
inc
ret
and
adc
xchg
cmp
push
fwait
add
mulb
or
ljmp
imul
in
movsb
add
ljmp
xbegin
jnp
int3
cwtl
cmpsl
int
mov
fimuls
dec
sarb
dec
hlt
mov
cmp
mov
sbbb
push
sbb
adc
inc
outsl
inc
nop
fwait
lods
daa
sbb
insb
or
mov
into
out
cmp
cmp
mov
inc
into
ret
sbb
ss
add
in
push
mov
mov
scas
outsl
out
sbbl
scas
and
inc
inc
gs
mov
adc
mov
arpl
mov
mov
jmp
pop
and
jmp
out
fstcw
int3
movsl
arpl
sub
sbb
fldl
pop
pop
push
js
push
jae
mov
jns
sbb
dec
push
jns
inc
loop
mov
inc
idivb
dec
orb
rol
rolb
sbb
jg
mov
arpl
lahf
adc
and
adc
mov
and
hlt
daa
xchg
pop
add
push
mov
call
push
je
orl
aam
fstpl
or
push
cmp
fidivrs
sbb
mov
lahf
cld
xchg
cmp
xchg
ficomps
sbbb
jle
dec
rolb
mov
xchg
aad
cs
push
ficoml
fists
mov
jmp
shrd
or
lods
mov
frstor
es
addr16
jns
pop
xchg
out
push
subb
inc
xchg
scas
mov
xchg
xchg
jne
xor
cmc
push
cmp
inc
mov
jmp
testb
xchg
mov
cli
sbb
mov
push
or
push
ss
jle
or
rcll
xchg
mov
lods
rorb
sub
data16
mov
insb
in
pop
mov
pop
mov
ljmp
iret
outsl
ja
cmp
dec
lea
daa
jp
aaa
push
daa
mov
out
and
test
out
adc
add
stos
inc
in
mov
push
scas
cld
add
dec
sbb
cmp
flds
imul
test
xor
dec
cmp
jae
or
lock
sbb
mov
test
inc
into
scas
jmp
pop
xchg
das
fwait
and
push
rclb
xchg
decl
lea
pop
clc
cltd
mov
sarb
scas
shll
mov
mov
cwtl
faddp
mov
and
inc
jecxz
dec
sbb
mov
fstl
loope
jmp
fcomps
push
fisubs
test
ss
xor
dec
xchg
mov
mov
add
cmpsl
sub
xor
test
shlb
sub
xor
lahf
cltd
aas
add
push
std
stos
or
mov
mov
cmc
mov
adc
enter
mov
lds
or
cwtl
jb
adc
loopne
xor
jne
xlat
jle
sahf
outsb
add
xlat
add
sbb
pop
adcl
xor
add
mov
movsb
int3
inc
sbb
sti
lret
cmp
pop
xchg
stc
sbb
lock
sub
xor
mov
shrb
out
pop
aaa
mov
push
and
stos
add
aam
out
nop
jb
rcll
out
test
inc
sub
testl
push
xchg
push
push
mov
add
out
rclb
xchg
sbb
nop
enter
repnz
cmp
cmp
subb
and
xor
fnsave
mov
jmp
incl
popa
xchg
dec
xchg
rcr
jle
sub
stos
in
fsubr
and
mov
bound
inc
jmp
loope
and
cwtl
dec
lods
push
outsb
insl
cmp
fcoms
fwait
dec
push
jno
mov
leave
movsl
or
xor
mov
andb
xor
cmc
or
push
jns
movsl
or
loope
sub
sbb
mov
pop
rorl
das
nop
jnp
clc
pop
stos
fs
pop
jmp
mov
and
dec
xchg
jl
mov
cli
xchg
dec
mov
popa
addr16
sti
sub
adc
sbb
aad
ss
fcmovnu
test
sub
xorb
js
push
rolb
pop
icebp
pushf
bound
loope
stos
dec
sbb
inc
lods
jo
jnp
or
adcb
bnd
test
imul
sub
mov
jmp
insl
aas
pop
in
sub
cmp
pushf
xor
inc
add
inc
mov
adc
aam
addr16
add
bound
mov
and
leave
push
lods
cmp
in
xchg
adcb
mov
imul
lods
sub
or
sbb
mov
push
jae
sbb
movsl
test
sub
mov
rcll
ret
dec
jb
push
in
negb
js
jmp
xlat
adc
jo
fwait
cltd
mov
mov
addl
or
adc
mov
inc
push
jge
das
push
pop
daa
lods
ds
pop
sub
sar
mov
pop
or
loope
loope
loope
repz
test
mov
and
enter
es
dec
mov
adc
cmp
addr16
and
in
clc
pushf
cltd
addr16
fdivr
mov
inc
sub
movsl
subb
adc
inc
loope
inc
xchg
out
adc
stos
arpl
xor
cmp
ljmp
lea
ds
adc
clc
dec
movl
push
cmp
ds
test
cltd
pop
lock
dec
cmp
iret
adc
cltd
mov
push
fcompl
movsl
fcomps
daa
sub
dec
sbb
push
mov
add
fbld
push
inc
jbe
ja
int3
sbbl
sbb
inc
fcompl
data16
mov
minps
into
adc
lods
imul
mov
test
or
mov
jns
xchg
mov
push
and
or
call
push
jnp
pusha
jmp
popa
cli
fdivrl
inc
dec
push
fs
xchg
in
cmp
mov
and
mov
mov
ljmp
std
mov
pushf
jle
or
test
test
dec
test
mov
daa
xchg
inc
outsl
in
jmp
stc
jno
nop
mov
sbb
jle
add
xor
push
sar
lcall
push
lods
xor
scas
dec
loopne
mov
sbb
pop
mov
cmp
sub
dec
pop
dec
adc
mov
jg
jmp
clc
mov
push
pop
mov
ficoml
mov
repz
push
sub
das
mov
cmp
dec
jnp
pop
mov
mov
jbe
lcall
iret
inc
jecxz
inc
in
cmp
and
push
adc
jno
cmpsl
shrb
adc
fcmovne
arpl
dec
adc
inc
xchg
jp
aad
xchg
test
xchg
adc
or
idivb
inc
sub
mov
adc
cmp
adc
push
sbb
hlt
sbb
adc
cmp
cmp
in
pop
push
int
fcoml
cmp
jmp
ret
add
inc
adc
les
fsubrs
xchg
jae
insb
sub
divl
out
push
add
insb
in
mov
dec
push
adc
push
ljmp
loopne
ffree
in
dec
sbb
shll
dec
mov
addr16
mov
push
sub
or
repz
mov
cld
xchg
pop
and
stos
and
pusha
addr16
pop
mov
xorb
fs
adc
lahf
fs
or
cmc
push
xor
roll
inc
rolb
push
mov
inc
xchg
dec
adc
call
xchg
loop
mov
or
jge
shlb
iret
xchg
in
mov
xchg
out
push
and
ret
sub
into
es
and
fimull
sub
pop
xchg
adc
cld
clc
xchg
and
pop
outsl
dec
jo
mov
lret
pop
mov
clc
lods
adc
scas
add
push
push
sbb
in
jno
out
mov
je
xchg
pop
aam
out
pop
mov
push
cmc
mov
and
lcall
or
inc
repnz
push
mov
mov
movsb
adcb
rcrl
mov
decl
sbb
xchg
sub
int
std
cs
ret
std
cmc
movsl
arpl
es
cmpsb
mov
or
or
int3
shll
hlt
sub
lret
lock
fs
out
cltd
pop
sti
nop
loope
mov
out
xlat
aad
mov
adc
push
pop
mov
repnz
jo
mov
addr16
add
or
pop
or
and
dec
dec
add
xor
fincstp
push
lods
push
mov
mov
aaa
mov
daa
push
dec
mov
je
addr16
inc
cmp
stos
xchg
add
push
out
ret
fldenv
mov
add
aaa
and
mov
test
xor
sbb
jns
sub
add
ja
bound
movsl
xor
pop
dec
push
lahf
pop
xchg
js
iret
shl
std
mov
loope
add
test
push
scas
scas
jno
enter
xlat
test
dec
lret
mov
or
add
bound
enter
mov
pop
mov
and
dec
sahf
sbb
pop
jne
xchg
in
repnz
lret
loop
jnp
test
pop
pop
fcmovnb
in
jb
push
je
insb
pop
int3
sub
iret
in
outsb
imul
pop
movsb
dec
dec
lahf
mov
xchg
jnp
xlat
adc
int3
add
jno
xor
or
stos
stc
mov
in
pop
insl
pushf
xchg
adc
fucom
rcr
mov
test
xchg
cmp
mov
lahf
push
mov
sarl
lea
lcall
and
pop
jae
je
mov
std
cmpsl
mov
data16
ret
xor
ss
cmp
push
jno
and
roll
pop
dec
mov
mov
sub
jno
adc
pop
clc
lret
pop
outsl
lea
iret
or
sub
cmpsl
mov
mov
cltd
jecxz
std
pop
lcall
mov
repz
cltd
sbb
inc
mov
repnz
jbe
arpl
or
sti
stc
dec
cmp
sbb
iret
inc
cmpsb
popf
rorl
cmpsb
add
pop
pop
repz
cmp
push
movsb
addb
xchg
xor
out
adc
or
in
inc
push
cs
pop
pushf
cli
stos
stos
shll
arpl
add
adc
dec
mov
sbb
pushf
pop
push
out
addr16
out
out
mov
stc
dec
jmp
cmpsl
xor
mov
mov
mov
add
aas
push
iret
jne
mov
std
cmp
mov
enter
inc
push
jg
mov
cmpsb
and
pop
xchg
push
aaa
cld
imul
xchg
mov
mov
cli
cmpsl
rcrb
clc
xchg
ret
jne
jle
inc
fwait
jecxz
cli
fwait
iret
cmp
xor
fcomps
cmp
and
mov
pop
pop
mov
bound
inc
pop
push
stos
std
idivb
push
mov
out
call
movsl
enter
lret
mov
xchg
daa
xchg
nop
scas
sub
add
mov
cli
push
fs
pop
mov
sub
mov
or
mov
push
pop
mov
fdivrs
mov
jmp
inc
jecxz
shll
jne
pop
testb
fs
push
ss
push
xchg
cmp
sbb
mov
or
or
fadds
xor
aaa
cmp
xor
loop
cld
sub
imulb
std
aaa
test
cli
xlat
lret
sub
mov
int
out
or
stos
addr16
xchg
jecxz
lret
jg
mov
arpl
sahf
icebp
jp
sbb
lret
rcll
daa
jno
and
nop
sbb
loope
sti
popf
xchg
sub
sbb
roll
in
imul
mov
add
outsl
rcll
dec
xor
push
sbb
lret
and
int
fadds
cs
sub
dec
in
cmp
or
fcmovne
sub
ljmp
bound
pop
mov
subl
inc
or
pop
fidivrs
mov
dec
lcall
add
daa
or
call
dec
mov
testb
sbb
or
mov
lods
jp
push
rcrb
add
mov
sub
rclb
pop
enter
into
js
ja
dec
and
js
mov
xor
cli
rcl
jge
jge
lret
int
jl,pn
jne
dec
xchg
add
mov
into
xchg
pushf
mov
and
mov
repz
mov
push
out
inc
lahf
jmp
sbb
popa
xchg
outsb
sti
push
push
lret
movsb
jg
pusha
inc
cmp
cmp
outsb
mov
sub
mov
xchg
sarb
test
push
xlat
jmp
jne
sub
roll
mov
sbb
pop
lahf
or
cwtl
in
jl
mov
jp
xchg
inc
ficoml
cld
mov
es
xorb
pop
xorb
mov
dec
push
xor
cmpsl
cmp
imul
push
addr16
stos
insl
lds
adc
mov
jge
lret
inc
cmp
adc
bsr
mov
dec
movsl
stos
jle
pop
fsubrl
push
adc
jge
in
xchg
push
xlat
jl
sbb
fucomi
add
mov
dec
sbbb
xor
add
add
pop
fcompl
mov
push
jle
mov
das
in
inc
clc
cmp
mov
push
jle
inc
sbbb
fwait
push
icebp
leave
add
or
xor
dec
adc
mov
movsb
or
adc
sbb
into
push
lock
push
rclb
inc
pop
cmp
repnz
inc
jne
xchg
pop
jl
xchg
lods
mov
out
ss
sbb
inc
pop
xlat
push
sub
fmuls
rcr
filds
add
cwtl
ds
and
jbe
ds
jne
cmp
icebp
inc
in
out
inc
shlb
inc
pop
int
push
mov
xchg
adc
and
adc
inc
call
pusha
andl
loopne
adc
push
dec
cli
pop
sub
pop
sbb
scas
inc
pop
cmc
push
jns
cltd
icebp
sbb
xchg
test
iret
cld
aas
cwtl
scas
add
cmp
ret
or
aas
leave
xchg
jo
incb
dec
test
out
and
sbb
xor
test
lods
in
pop
dec
jbe
iret
dec
cmp
jbe
das
push
mov
int
sub
pop
sub
and
je
or
in
stc
push
popf
cld
jae
lret
ja
ja
mov
test
je
add
mov
inc
jmp
aad
sbb
add
dec
in
and
mov
hlt
pop
mov
xchg
mov
mov
test
dec
jbe
xor
lods
divl
in
imul
mov
leave
and
arpl
in
mov
and
mov
test
mov
fsubrl
inc
ret
insl
call
mov
stc
sub
fldenv
mov
lds
daa
and
pusha
adc
mov
dec
aad
jge
ds
dec
je
outsl
add
les
bound
push
insb
add
je
push
and
sbb
sbb
mov
sbb
inc
push
movsb
ret
movsl
inc
jo
popf
and
fnstenv
dec
mov
je
sub
cmc
xchg
jge
lcall
out
add
push
or
adc
mov
stos
in
cmp
test
test
jae
xor
mov
jle
stos
arpl
sub
xchg
push
adc
sbb
add
push
and
add
or
adc
mov
jge
lods
inc
add
and
adc
fistpll
mov
pushf
xchg
jge
sub
ja
dec
out
aad
lods
add
popf
loop
dec
int3
push
jb
pop
bound
mov
enter
jecxz
sub
arpl
dec
stc
mov
mov
push
sub
repz
and
loope
mov
enter
push
faddl
pop
roll
adc
pop
sub
addl
or
fsubrs
jle
add
mov
push
mov
push
in
mov
stc
lcall
pop
add
lret
les
xor
popf
jno
fstl
jmp
and
pusha
mov
popa
in
mov
lds
mov
mov
ja
inc
jae
fdivs
lret
repz
pop
loop
and
insb
push
adc
out
or
mov
push
sub
mov
pushl
popa
out
and
mov
and
fwait
stos
out
push
outsl
mov
push
inc
cmp
or
mov
loop
cmpsl
adc
int
jp
mov
jp
cli
cmpsb
imul
sbb
and
add
mov
ljmp
movsb
les
mov
shlb
mov
pusha
test
xchg
push
pop
cmp
outsb
int
jmp
mov
jge
nop
sub
sbb
ret
add
sub
shl
scas
sbb
inc
in
sbb
clc
xor
mov
mov
scas
ds
out
test
ja
inc
pop
add
test
dec
out
loopne
ret
mov
or
mov
or
cmp
repnz
psraw
das
popa
fdivrs
xor
xchg
lods
push
test
sbb
adc
lods
jmp
mov
je
mov
repnz
mov
je
stos
mov
pop
lahf
sub
pop
ja
push
cmp
xchg
gs
mov
mov
aas
inc
or
adc
sub
gs
sub
rorl
mov
fnstenv
add
xchg
mov
aaa
cltd
inc
cmpsb
adc
std
add
pop
mov
arpl
or
push
xchg
rcrb
push
lea
cmc
popf
jecxz
sbb
xchg
aad
sbb
jmp
daa
ja
and
or
je
jnp
test
xor
push
je
fwait
imul
sbb
xchg
mov
xor
mov
outsb
cli
fldenv
push
xor
js
mov
gs
xchg
aad
adc
rcr
jg
mov
and
outsl
sub
shr
jp
jle
pop
jge
mov
adc
mov
sbb
dec
lea
xchg
jmp
pop
pop
adc
ret
mov
sarb
lret
pop
sti
dec
xlat
pop
movsb
adc
jno
insl
jle
cmp
nop
cwtl
outsb
sub
les
add
sar
push
movsl
sahf
repz
lahf
inc
sbb
je
mov
inc
mov
pop
pop
dec
mov
gs
or
xchg
add
mov
loop
mov
jle,pt
sti
pop
insb
sahf
pop
xchg
push
div
dec
sbb
je
bound
mov
add
pusha
sbb
shlb
xchg
push
in
stos
hlt
pop
add
daa
lret
cwtl
cmp
lods
enter
xor
lods
lret
xor
jns
xor
or
or
dec
mov
fnsave
sti
sbb
or
lods
jecxz,pt
xchg
ljmp
addr16
mov
mov
xchg
or
sub
insb
pop
repnz
mov
or
iret
pop
sub
add
out
pop
std
frstor
mov
fldl
leave
ljmp
mov
test
lea
inc
lret
jo
fiaddl
or
scas
mov
in
in
daa
fdivs
lret
push
xchg
push
xchg
push
testl
push
aad
jl
jbe
pop
repz
add
jg
ja
push
fmull
sbb
mov
or
mov
ja
sbb
enter
dec
mov
lret
jae
lcall
faddl
mov
repnz
and
mov
lock
fsubs
inc
js
xchg
xor
cmpl
movsl
out
popf
lcall
lret
sub
into
xchg
push
mov
pushf
cmp
push
mov
rcr
xlat
movsb
out
inc
or
pop
clc
fwait
les
xorl
into
imul
and
outsl
pop
fildll
outsl
rclb
xchg
scas
loope,pn
add
cmc
and
mov
cmp
stos
jl
pop
jmp
mov
out
jno
sbb
enter
mov
mov
stos
sub
cmp
mov
jmp
divb
push
pop
or
xor
adc
mov
xor
mov
inc
in
and
jae
movsl
xlat
fcmovne
push
daa
stc
and
into
jne
stos
in
into
pop
inc
aas
pop
mov
nop
inc
mov
mov
gs
fisubs
mov
sbb
iret
xor
push
inc
leave
cltd
mov
outsb
incb
nop
inc
enter
movsb
push
aad
cmp
icebp
in
lahf
adc
add
inc
sbb
xor
rcr
mov
cmpsl
js
jmp
add
mul
lret
movsb
scas
test
int
das
xlat
and
rolb
push
xor
cmovbe
dec
in
mov
jg
jbe
xchg
mov
or
sbb
cld
mov
push
cmpsb
fs
dec
notb
mov
and
repnz
mov
push
jge
mov
mov
add
jecxz
scas
jns
fidivs
loop
mov
sbb
cld
out
int
pop
in
and
mov
inc
arpl
sub
push
adc
addr16
int
mov
into
inc
sbb
lods
or
cmc
push
sbb
bound
cmp
inc
jecxz
xor
mov
mov
jbe
pop
add
test
shl
std
imul
loopne
pop
dec
mov
xchg
adcl
xchg
in
mov
dec
mov
dec
jge
aam
pop
inc
sub
lahf
ret
push
lcall
xor
mov
pop
les
xchg
mov
imul
enter
loopne
aad
sub
es
xor
shlb
aaa
bndcl
pop
imul
out
shld
push
xchg
lock
cli
stc
vpmacssdqh
mov
sbb
add
push
je
int
lods
ja
addb
popa
mov
or
cwtl
dec
jnp
mov
inc
std
dec
movsl
adcl
adc
add
inc
push
inc
mov
lret
test
jecxz
jle
leave
jl
dec
and
and
cli
mov
sbb
imul
mov
cmp
adc
es
pushf
aaa
bound
ljmp
mov
repnz
test
arpl
icebp
inc
xor
sbb
inc
inc
pop
or
clc
cmc
std
jbe
ja
sbb
dec
xchg
cmp
push
jg
lret
inc
pushf
jl
cmp
adc
xchg
xlat
sbb
repz
cmp
dec
pop
loop
xorb
and
cmp
fsubrs
push
sub
mov
jb
jle
les
or
mov
je
in
addr16
out
call
mov
sub
sbb
pop
adcb
aad
shrb
lretw
nop
call
xchg
xor
push
imul
jmp
jp
or
rcrb
xorb
sub
cli
dec
and
xor
or
push
repnz
fadd
or
in
push
push
lcall
xchg
mov
icebp
movsb
mov
jno
push
cli
popa
add
cmp
es
cltd
lods
clc
jno
xchg
movsl
dec
and
jo
mov
enter
fwait
push
mov
mov
popa
dec
in
int3
or
pop
pop
xor
push
adc
ja
popa
fsubp
sub
jmp
mov
sahf
ljmp
or
sub
jae
add
fnstsw
push
cmp
movsb
xchg
mov
sub
mov
cmc
lahf
sub
dec
or
jl
jge
js
cmpsl
ficompl
ret
popf
paddb
call
jle
sti
lcall
das
dec
adc
mov
sahf
xor
jecxz
jmp
stos
or
and
jns
dec
shrl
out
jne
mov
es
imul
sub
sbb
xor
adc
leave
faddp
hlt
sbb
push
jo
ret
pushf
cmpsl
xchg
in
mov
jb
jle
popf
jnp
add
test
lods
sbb
cmp
inc
gs
mov
cmpsb
xor
sub
inc
or
push
fldcw
cs
push
jl
loope
aad
jnp
outsl
mov
mov
push
fstps
shrb
sbb
outsb
test
dec
pop
dec
orb
mov
addps
mov
ret
test
sub
cmp
or
sub
dec
xor
pop
fldt
xchg
lea
cmpsl
inc
icebp
dec
mov
lods
imul
xchg
clc
jno
mov
sbb
xchg
add
std
leave
mov
inc
and
scas
mov
nop
jne
rolb
insb
pop
lret
testb
mov
into
mov
test
push
pop
mov
adc
pop
jns
cld
pop
mov
jo
idivl
lret
gs
int3
fistps
mov
add
mov
idiv
xchg
push
fcompl
mov
lds
mov
sbb
cli
lret
mov
enter
push
push
jl
pop
sub
mov
sub
popa
sbb
xor
jp
mov
jnp
dec
adc
rcl
xchg
packssdw
inc
jmp
or
into
aam
lods
cwtl
push
push
in
fnstsw
adc
pop
out
push
mov
insb
push
stos
cli
xchg
int3
mov
shll
jl
jle
popa
cwtl
cmp
push
enter
push
jns
push
add
rcrl
in
mov
sub
hlt
cmp
mov
adc
aas
imul
xchg
dec
xor
inc
push
lahf
out
fldenv
mov
mov
xchg
xchg
xchg
sub
jle
cmp
div
cmp
stos
and
fmull
pop
ja
jb
jne
xor
jecxz
bound
addb
xor
faddl
push
inc
dec
shrl
jl
jp
test
lds
xchg
jmp
rolb
sbb
cwtl
inc
adc
jl
add
jp
or
cld
pop
lods
enter
lods
add
and
popa
call
ljmp
cmpsb
mov
jmp
lahf
sub
push
add
cmpsl
sub
outsb
mov
fs
sub
or
cmp
loope
out
fstl
pop
iret
fcompl
push
gs
cltd
les
lock
mov
rorb
js
rcr
jecxz
addb
jbe
cltd
xor
push
cmc
dec
cmpsl
pop
mov
or
aad
lret
lock
mov
pop
popw
inc
push
movsl
insl
mov
xchg
lcall
jns
les
inc
dec
mov
imul
xchg
pushf
xor
xor
dec
hlt
clc
add
xor
push
dec
lret
add
mov
xchg
pop
mov
sbb
adc
repz
cli
add
jbe
rcll
insb
stos
test
shlb
int3
cwtl
loop
add
adc
andl
fs
xchg
xchg
mov
mov
mov
jge
loopne
add
add
cld
clc
cld
cmp
imul
mov
jno
push
adc
inc
ret
mov
mov
push
data16
push
out
cmc
cmpsb
ds
bound
mov
adc
push
cmp
fs
mov
lcall
and
xchg
cld
scas
sar
ss
packsswb
lret
cmp
out
int3
xor
and
pop
das
and
test
mov
cmpsb
jge
out
push
out
xchg
cwtl
int
inc
xchg
inc
icebp
adc
daa
adc
push
or
pusha
or
pushl
imul
mov
in
or
xchg
daa
ss
inc
test
rcl
lock
mov
movsb
add
faddl
hlt
orl
inc
mov
sub
bound
push
push
cmpsl
sbb
xchg
or
lea
rcrb
sarb
cli
and
mov
stos
xchg
mov
out
movsl
adc
negb
xchg
lds
mov
ds
pusha
mov
in
xchg
add
xchg
int
pusha
jge
test
adc
in
sbb
mov
push
pop
stc
xchg
or
add
mov
mov
int3
dec
dec
pop
sub
sti
sbb
mov
test
pushf
lock
and
lds
and
and
ja
sbb
popa
push
addr16
xorl
fidivrs
jb
jns
jo
pop
enter
mov
mov
arpl
jbe
or
push
sub
add
add
jmp
data16
jns
hlt
jge
mov
cmpsb
jb
or
mov
jp
lods
sub
push
cmp
add
sub
pop
pop
repz
insb
sub
hlt
nop
cmp
cmp
jp
rcrb
mov
sbb
dec
pand
imul
jle
jb
mov
pop
arpl
addr16
sbbl
movsl
push
sub
iret
mov
xchg
testl
imul
fsubrl
xchg
rol
addr16
dec
test
pop
data16
js
or
inc
xor
aam
jecxz
xchg
jle
and
clc
popa
bound
inc
mov
inc
cmp
push
arpl
mov
outsl
pop
lds
loop
ljmp
lds
movsb
mov
jl
pop
jnp
jno
push
jns
stos
scas
aaa
jle
aaa
or
iret
imul
pop
imul
adc
sbb
xchg
leave
clc
xlat
in
jno
stos
inc
sbb
dec
adc
push
xchg
nop
data16
pop
mov
sub
xor
jecxz
sbb
mov
xor
mov
lds
inc
cld
add
push
adc
shll
sbb
xchg
jbe
nop
pop
jp
cs
lret
bound
pusha
jl
ret
std
test
daa
add
into
cmp
ret
add
in
imul
shlb
fldenv
shl
jecxz
call
mov
inc
jne
imul
add
repz
dec
ret
jl
out
aad
lods
xor
or
pop
popa
xor
mov
and
stc
dec
and
into
mov
in
mov
pop
push
insb
lock
test
leave
inc
leave
add
mov
cld
jns
dec
jnp
fists
insb
dec
inc
jnp
cld
leave
enter
sbb
add
mov
push
shrl
lock
xor
pop
jl
out
gs
inc
test
aas
sti
jno
inc
je
pop
das
nop
fcoms
test
and
push
cmp
scas
imul
mov
js
mov
dec
movsl
xor
cltd
movsl
dec
or
sub
sub
dec
out
dec
xchg
xchg
rolb
test
inc
sbb
iret
mov
pop
movsb
and
or
xor
ror
insl
testl
out
and
cmpsl
mov
loopne
cs
cli
orl
stc
sbb
aaa
adcb
dec
xchg
cmp
inc
in
sub
popf
xor
test
lcall
adc
loopne
scas
sahf
mov
or
add
inc
popa
mov
insl
sahf
lret
dec
pop
jo
push
sub
sub
call
or
fldz
mov
aas
cmpsl
jle
xor
out
xorl
sub
lret
aad
aas
push
adc
sti
int
jmp
stc
mov
popa
nop
or
mov
imul
fidivs
lock
outsl
sbb
jp
fnstenv
xlat
pushf
lret
ljmp
popa
jge
mov
fwait
jne
pop
enter
or
sub
test
inc
mov
cmp
mov
xchg
addr16
outsl
jge
insb
fsubrs
gs
cmc
lahf
xchg
loop
inc
ja
jbe
fisubrs
hlt
add
fcom
test
aaa
imul
mov
mov
js
jb
clc
dec
adc
lahf
jae
lahf
movsb
jmp
jne
push
add
out
cmp
or
sbb
pop
mov
or
nop
or
xchg
int3
adc
imul
int3
mov
clc
cmpb
xchg
shrb
mov
stos
inc
inc
les
or
sar
jo
mov
xchg
jmp
inc
jg
aas
xchg
movsl
and
lods
ret
jp
fistl
pop
push
xchg
and
pop
imul
mov
sub
cmp
sbb
in
or
imul
xor
xchg
iret
or
adc
inc
mov
pushf
jle
add
imulb
out
mov
cmpsb
stc
sub
fnstcw
inc
ljmp
push
ror
xchg
lret
jp
movlps
xchg
andl
and
pusha
lret
inc
sbb
cmp
addb
popf
dec
cmp
sub
ret
mov
jmp
iret
cmp
push
notb
and
fdivrs
sbb
pop
insb
adc
out
push
pop
pushf
nop
and
adc
mov
sbb
pop
into
test
mov
inc
xchg
loopne
jnp
andb
scas
imull
icebp
ret
pop
lahf
adc
mov
pop
cltd
cs
stos
mov
mov
sahf
push
notb
push
sbb
loope
idivb
cld
push
aaa
xchg
mov
xor
xor
cmp
scas
es
repz
pop
std
out
iret
lock
cli
ret
xor
push
in
push
pop
sbb
loop
dec
inc
hlt
mov
imul
dec
mov
int3
lcall
push
or
dec
rcrb
add
push
xor
test
in
fldenv
in
jl
enter
cmc
dec
shl
adc
mov
mov
in
outsb
sub
inc
inc
and
jne
rcrl
sbb
ss
xor
fdivrs
adc
fldcw
mov
fdivl
mov
and
or
add
je
idiv
loop
sbbl
test
xchg
pop
cmp
mov
hlt
mov
stos
mov
int
jg
scas
sbb
jae
pop
shll
pop
xor
mov
jmp
adc
xor
cmpb
push
lret
or
xchg
inc
cmp
sbb
xorl
jge
lahf
dec
pushf
notl
inc
mov
aad
lsl
lret
fmull
jo
ret
insl
mov
mov
mov
add
dec
int
icebp
mov
cmpl
mov
xor
gs
dec
hlt
mov
xchg
iret
lcall
sub
fldt
aam
pushf
mulb
rol
les
ret
sbb
pop
aad
imulb
ljmp
popf
push
insl
out
mov
cs
jmp
adcb
cmc
divb
jle
cs
inc
add
xchg
mov
push
test
int3
push
test
push
jle
inc
aad
push
and
call
pop
fildll
icebp
int3
fimuls
mov
mov
xor
nop
dec
adc
mov
das
jecxz
inc
mov
hlt
es
mov
dec
inc
call
out
mov
dec
jecxz
push
push
push
hlt
stos
sub
xchg
sti
lods
ljmp
xchg
mov
add
lcall
je
in
pop
mov
inc
inc
iret
and
and
test
fdivrl
movsb
cmpsl
adc
cmp
shlb
mov
lds
sar
add
mov
mov
loope
inc
hlt
xor
or
sub
roll
sbb
shlb
ret
inc
ret
pop
dec
dec
out
cwtl
clc
adc
lcall
xchg
loop
pop
cwtl
sbb
sub
pop
mov
lods
xlat
and
push
jp
ljmp
roll
loope
jl
push
xchg
ret
fcomi
repnz
pop
pop
adc
sbb
mov
repz
adc
aas
fdivrl
mov
xor
stos
insb
imul
stos
imul
xor
sub
pop
pop
je
cmp
mov
enter
mov
cld
pop
data16
repz
cwtl
push
adc
dec
int3
out
jmp
sti
mov
sbb
mov
lret
sbb
cmp
es
dec
cmp
int3
mov
sbb
or
or
adc
dec
jge
nop
dec
mov
xorl
fisubs
fs
mov
lcall
pop
in
push
cld
sub
testb
ss
daa
sbb
push
adc
pop
shll
out
std
testl
fimuls
cmc
mov
push
inc
mov
icebp
mov
std
sbb
gs
cmp
lds
cmpsl
movb
adc
mov
imul
xchg
int
cmp
mov
stos
daa
mov
jecxz
mov
neg
sti
push
mov
and
cli
dec
adc
xchg
sub
cmpsb
mov
mov
push
mov
test
and
insl
xor
insl
fistpl
decl
sbb
rclb
cmp
jge
mov
mov
fistpl
adc
mov
adc
out
add
scas
sbb
mov
pop
push
push
jns
mov
movntps
mov
push
sti
cli
shrl
xchg
in
shl
push
sub
outsb
js
rcrb
outsl
mov
das
xchg
mov
xor
xor
into
pop
inc
cwtl
cmp
push
popa
mov
mov
sbb
dec
testb
sbb
inc
add
out
mov
mov
jg
dec
daa
cmc
notb
mov
imul
test
test
stos
xchg
addr16
push
dec
mov
lea
aam
outsb
sbb
jo
adc
stos
xchg
lahf
enter
mov
or
jns
and
loop
lret
ret
in
in
jne
nop
sti
dec
cmp
ljmp
xor
xor
or
and
push
pushf
scas
jns
dec
addr16
in
idiv
ficoms
xchg
push
pop
adcb
call
add
movsb
pop
movsl
inc
xor
jl
sub
shrb
ret
push
push
loop
add
xchg
or
mov
pop
shrl
push
pop
mov
sbb
ficompl
and
push
push
push
clc
adc
mov
add
repnz
add
sbb
ds
mov
dec
cmc
aaa
ret
sbb
stos
fdivr
movsl
pop
insl
mov
cmp
pop
xor
jo
pop
out
dec
add
addr16
nop
sbb
pop
ss
into
imul
xor
andl
mov
out
inc
push
das
dec
outsb
adc
pop
pushf
fisubs
out
mov
mov
lods
and
jecxz
inc
pop
shrl
cmc
movsb
and
pop
inc
ret
xchg
jmp
mov
mov
std
out
aas
outsb
push
iret
aas
add
idivb
dec
sub
aas
jp
dec
jns
pop
xor
jne
push
and
ja
hlt
jo
clc
jns
add
outsl
cmp
imul
mov
and
sub
rcrb
movsb
inc
jno
adc
scas
adc
xchg
add
es
nop
in
inc
ljmp
fisubrs
pop
inc
aad
test
lods
sbb
testl
xchg
dec
jp
cmp
outsl
dec
inc
cmp
out
sbb
pop
scas
pop
mov
sub
xchg
aaa
xor
pushf
jns,pn
xchg
jp
bound
rcr
push
sbb
cmp
add
enter
cmp
popa
lret
sbbl
mov
shr
jns
push
js
pop
mov
dec
ljmp
jl
out
test
push
push
cmp
mov
mov
repnz
adc
test
push
in
push
lahf
pop
arpl
shrl
cmp
and
mov
xor
rolb
aam
add
ret
sub
fmuls
cltd
arpl
mov
call
jnp
mov
iret
push
mov
lea
jno
jecxz
jb
xor
nop
lcall
jle
push
adc
dec
out
adc
imul
dec
jle
imul
mov
push
jecxz
mov
cmp
fmuls
dec
ret
negb
and
mov
push
dec
add
sub
cmpsb
movsl
jle
sub
shrb
push
sbb
add
mov
jne
push
pop
sub
lcall
addl
mov
sub
clc
lahf
stos
imul
jns
cld
dec
push
xor
das
hlt
pop
clc
jnp
aas
mov
std
or
cmc
fwait
fs
je
add
push
mov
xchg
addl
inc
lahf
cmp
xor
mov
mov
orl
cmp
pop
js
xchg
mov
mov
mov
add
sub
jecxz
push
push
push
sbb
dec
int
iret
dec
cli
cmc
pop
adc
jge
stos
xchg
mov
ds
shrl
sti
lds
sub
iret
loop
cmp
imul
cwtl
cmp
xchg
dec
mov
and
shrl
rcrl
rorb
mov
mov
pop
lret
dec
push
aam
dec
xchg
lret
leave
mov
mov
xor
xchg
aam
jg
lods
fucomi
or
lret
cmp
adc
aas
inc
add
out
dec
movsb
rclb
adc
leave
test
lods
pusha
loope
push
and
pop
xchg
xchg
dec
sbb
sub
sub
jl
movsb
cld
aad
fmull
mov
lret
pop
mov
ja
mov
jge
add
int
add
es
scas
pushf
dec
adc
inc
push
loope
aaa
fcoml
cmp
test
cmp
dec
mov
pop
cwtl
sub
std
ljmp
or
popf
xor
clc
loop
dec
subb
repz
push
test
mov
mov
push
push
pop
lds
sbbb
fimull
add
rcl
pop
mov
rclb
add
fldenv
pop
cli
mov
mov
mov
cmp
mov
divb
pusha
push
dec
test
and
pop
int
data16
enter
pusha
jmp
inc
mov
xchg
cmp
lods
inc
mov
and
xchg
sbb
jmp
adc
ret
lods
imul
iret
mov
mov
daa
fs
xchg
test
out
lds
sub
mov
aas
mov
test
enter
inc
test
jbe
or
aad
and
in
lret
lahf
cmpsb
dec
aad
push
xchg
sbb
mov
or
shr
loop
fiadds
inc
mov
xchg
jne
sbb
lcall
andl
into
jg
or
cmc
nop
adc
bound
aaa
int3
enter
shrb
pop
or
sbb
pop
mov
daa
fisubrs
xchg
je
sbb
xchg
xchg
adc
into
or
sbb
imul
pop
adc
push
and
push
sbb
adc
fldt
gs
enter
arpl
outsl
or
cltd
inc
cli
pop
mov
pop
adc
xchg
lret
addb
pop
mov
sti
dec
mov
xor
sbb
push
dec
adc
loop
out
add
dec
xchg
cmp
sub
pop
mov
jb
jecxz
ljmp
mov
sub
sarb
call
dec
pop
fisubs
xor
push
scas
data16
mov
test
cmp
int
dec
xor
pop
pop
push
cmp
insb
gs
jb
mov
fcmovb
enter
mov
js
imull
add
lret
test
das
sbb
stc
inc
scas
scas
dec
dec
and
daa
imul
adc
imul
add
pop
call
inc
push
mul
inc
cli
xchg
sarl
in
in
jl
xchg
or
fnsave
bound
or
mov
cmpsb
xchg
bound
dec
icebp
mov
test
and
test
add
fnstcw
or
mov
mov
fisubrl
mov
gs
dec
add
cmpsb
repz
dec
mov
sub
mov
cwtl
adc
mov
je
push
or
inc
cmc
dec
inc
dec
xor
sub
xchg
in
xchg
out
jo
cmp
sbb
sbb
push
pop
mov
mov
cld
cmp
jnp
push
push
arpl
mov
insl
sub
jl
loop
mov
in
push
and
lahf
mov
xchg
inc
pop
cld
scas
nop
cmp
push
pop
lods
mov
movsl
shlb
dec
jmp
sbb
test
sti
lahf
lods
push
pop
inc
ret
dec
jle
addl
leave
mov
scas
xchg
ds
test
lock
cmc
imul
por
icebp
test
adc
inc
rcrb
xchg
inc
xor
mov
fsubrs
mov
repnz
sbb
cmp
inc
std
pop
sbb
ja
mull
cwtl
sbb
mov
inc
loope
push
mov
pushl
enter
pop
dec
cltd
xchg
mov
dec
mov
test
jle
data16
or
jmp
mov
pusha
data16
cmp
sub
adc
xor
cmp
imul
sarb
cmp
xor
or
or
mov
push
cltd
sbb
test
jmp
es
mov
ret
xchg
xchg
mov
inc
sahf
push
dec
mov
pop
pusha
roll
xchg
mov
inc
jp
lret
jmp
daa
insl
in
cmpsl
repz
out
inc
stos
aas
xor
mov
test
ljmp
nop
nop
movb
cmp
jno
mov
jnp
mov
and
mov
lods
jnp
imul
aad
cmp
cmp
fcmovnu
xchg
pop
inc
and
adc
mov
rclb
lds
lods
xchg
mov
mov
xor
aaa
push
push
jo
pushf
lret
add
mov
sbb
scas
add
xchg
ds
xor
push
aam
adc
sbb
clc
add
outsl
sbbl
mov
cmp
dec
movsb
pop
cmp
dec
movb
mov
add
jecxz
dec
cmpsl
shlb
pop
test
pushf
pop
inc
jmp
je
clc
cmp
outsb
ficomps
lahf
mov
adc
movl
loop
cld
xchg
in
imul
insl
mov
xchg
pusha
dec
into
into
movsl
imul
add
sahf
and
add
xchg
jmp
jle
repz
ret
mov
arpl
ljmp
push
jl
cltd
xchg
es
mov
js
insb
out
jno
cmpsl
mov
fmuls
push
jnp
pop
mov
dec
pop
mov
and
test
jae
cli
fmull
shl
mov
inc
add
dec
std
outsb
fcoml
sub
test
out
mov
pop
dec
inc
mov
outsl
push
icebp
add
stos
rcrb
ficoml
lods
xor
and
rol
xor
xchg
cmpsl
insl
sbb
stc
inc
repz
mov
sub
fildl
pop
sbb
jnp
mov
pop
and
mov
and
xor
je
popa
fcmovbe
push
fwait
and
rcll
sbb
lock
out
jne
xor
cmp
inc
mov
aas
pop
imul
adc
fldl
push
pop
jg
mov
cmp
or
xor
pop
push
mov
repnz
push
out
and
mov
addr16
xchg
stc
xchg
hlt
pusha
cli
mov
fdiv
sbb
xchg
xchg
pop
or
adc
sub
rolb
fs
xor
add
stos
sti
dec
xchg
sub
into
xchg
vrsqrtss
in
ret
test
aas
jnp
sahf
xchg
addr16
data16
mov
jbe
dec
mov
leave
fidivrl
rclb
std
int
cmp
lret
pusha
xor
add
mov
mov
pop
ljmp
movsl
leave
loop
fcmove
sbb
enter
lcall
mov
add
add
xor
pop
inc
jecxz
aam
xchg
adc
xchg
daa
bound
test
mov
adc
mov
sbb
add
aam
or
insb
mov
mov
call
fsubr
ljmp
adc
aaa
xchg
pop
scas
push
cltd
push
cwtl
mov
std
movsl
pop
xchg
and
pop
loope
adc
ds
cmpsb
enter
out
in
es
outsb
xor
xchg
push
jp
sbb
adc
inc
test
dec
push
arpl
xor
cld
mov
or
xor
push
icebp
shrb
enter
pop
ljmp
dec
mov
in
push
push
jp
push
and
cmp
daa
push
int3
xchg
fucom
push
adc
aaa
and
xchg
bound
add
out
ja
in
jae
jmp
adc
rclb
rclb
les
cltd
ljmp
imul
cmp
dec
mov
out
call
push
enter
pop
inc
and
lods
adc
arpl
cmp
mov
xorl
mov
out
sahf
or
int
mov
lret
cld
jno
and
lea
xchg
rcr
mov
cmp
lock
ficomps
daa
inc
shll
data16
call
push
inc
fisttps
sbb
cmp
push
addl
cmp
pop
and
mov
jno
lcall
mov
add
lods
in
loop
aad
pop
adc
outsl
and
sahf
lret
sub
mov
sub
jl
data16
push
movsl
cwtl
ja
xor
sbb
xor
push
js
and
xchg
lock
cmpsl
lcall
dec
je
cmp
xchg
jmp
out
push
cmp
imul
icebp
xor
jmp
pushf
pop
mov
out
es
ljmp
xchg
repnz
icebp
arpl
push
cmp
jo
fdivr
repnz
add
jbe
sbb
sbb
or
stos
scas
jmp
call
push
jp
sti
ljmp
dec
ljmp
test
cmpb
inc
das
push
add
popf
mov
jo
cmp
push
or
popl
push
mov
loop
add
ds
cmp
push
out
fwait
inc
pop
pop
cmp
push
arpl
push
dec
inc
xchg
shlb
inc
mov
out
lret
mov
and
lret
pop
mov
nop
push
adc
and
stc
xlat
lcall
aad
mov
xchg
pop
add
pop
push
sub
or
push
or
xchg
sbb
imul
adc
mov
mov
adc
in
repnz
icebp
inc
stc
iret
or
cmp
adc
sub
movsb
popl
test
jmp
test
pushf
cmp
loope
cmp
lret
inc
test
call
xchg
aas
pop
mov
sarb
les
cmp
sti
loopne
mov
in
data16
cltd
mov
outsb
ja
ljmp
mov
fsubrs
add
testb
aaa
mov
into
shll
gs
inc
cmc
cs
call
call
imul
dec
xchg
movsl
dec
cmp
imull
shrl
dec
xor
pop
aas
ja
sbb
jne
nop
ja
stos
sub
xor
jno
movsl
sbb
nop
cli
jle
push
xlat
in
xchg
push
fbld
insl
adc
lods
outsl
es
or
scas
imul
in
mov
and
jmp
mov
add
xchg
mov
int
pop
adcb
cltd
dec
ret
mov
mov
xlat
xchg
pop
or
pop
jo
pop
pop
sub
jnp
pushf
adc
cmp
test
adc
jnp
mov
outsb
adc
sub
add
popf
loope
fbstp
sbb
xchg
nop
pop
int3
ss
push
loop
fnstsw
shl
adc
stc
or
gs
int
mov
test
ficompl
mov
cs
rorb
mov
sub
inc
fwait
xor
daa
push
imul
cwtl
retw
or
jle
push
pop
sub
push
push
movsl
jns
xchg
xchg
push
mov
mov
jo
jg
jle
xor
daa
dec
dec
add
dec
push
jg
xchg
in
adc
mov
into
mov
sub
mov
adc
mov
mov
xchg
fdecstp
jns
push
pop
scas
test
into
pop
out
je
pop
hlt
or
test
jle
add
in
rorb
outsb
mov
and
fidivrl
popa
out
or
bound
shlb
jae
aam
inc
stos
or
ficompl
sub
cmp
call
int
clc
out
xchg
enter
aas
push
scas
shlb
jae
jns
cli
adc
push
jle
mov
add
addr16
lods
dec
xchg
pusha
jmp
arpl
pop
std
xchg
or
xchg
fbstp
out
scas
and
iret
je
mov
leave
jmp
mov
and
roll
imul
mov
inc
enter
ss
mov
test
cmpsb
test
pop
mov
insb
icebp
outsl
dec
and
cmp
int
dec
bound
fsubrs
dec
idiv
mov
jo
fiaddl
fs
ret
and
fs
mov
adc
repnz
add
leave
push
xor
or
jmp
rorl
fucomip
or
daa
fistl
dec
aam
fs
sub
insb
jo
add
outsl
rclb
jge
fwait
outsl
xor
imul
adc
or
shlb
xchg
arpl
lcall
pop
jp
pop
cmp
xor
mov
add
pop
into
movups
stos
test
dec
enter
sub
das
aaa
popf
mov
push
lahf
pop
sbb
ja
insb
in
mov
test
cld
or
stos
add
mov
icebp
in
mov
adc
mov
jo
push
sub
pop
fisttpl
ljmp
loopne
movsl
mov
subl
push
mov
mov
push
rcrb
loop
pop
and
mov
mov
pop
cmp
lret
jns
and
or
or
mov
test
loope
and
add
dec
sahf
jo
or
je
pop
or
repnz
mov
push
iret
adc
xor
jne
imul
out
xchg
mov
leave
mov
or
mov
ss
loop
outsl
in
cmp
rcll
test
push
dec
push
cmp
push
cmpsb
mov
out
jo
mov
dec
or
pmullw
mov
dec
addr16
xchg
push
mov
jns
add
mov
mov
jle
dec
pop
nop
out
jno
sub
shl
jbe
insl
add
pop
pusha
xchg
pop
push
addr16
aad
int3
in
dec
push
mov
mov
lcall
jl
fildl
mov
clc
jne
aam
and
sarb
rcr
insb
adc
xor
les
cmp
add
cmc
inc
sub
mov
jecxz
mov
cmpsb
sub
cmp
add
test
or
lahf
fwait
add
sub
add
mov
xor
xor
stc
adc
push
sbb
and
jbe
sbb
mov
mov
jp
add
cld
pop
ja
popa
mov
push
iret
in
xabort
push
imul
fadd
fcmovb
out
push
test
inc
mov
sub
outsb
sbb
mov
sahf
verr
addb
xlat
sbb
cmp
add
fnsave
push
sub
fcmovbe
xor
mov
pop
sub
xchg
roll
idivb
shrb
mov
add
xchg
sbb
adc
mov
add
es
mov
icebp
lock
cmp
es
push
xor
sub
push
jge
shlb
sub
outsb
fbstp
leave
cmc
subl
mov
inc
in
ja
mov
movq
mov
movsl
popf
xchg
lahf
notb
jne
mov
imul
lods
insl
aas
std
std
std
xchg
xchg
inc
mov
cli
or
test
push
jecxz
jae
rcr
hlt
fbstp
mov
cli
mov
pop
sbb
mov
mov
out
jnp
outsl
stos
adc
fldcw
push
sbb
mov
xor
lret
sti
fistpll
xchg
addl
repnz
sti
test
lock
sub
call
inc
mov
inc
dec
mov
pop
iret
stos
push
imul
lods
les
pusha
mov
cli
pop
mov
mov
cmc
sub
or
push
insb
fs
adc
fnsave
mov
push
inc
int3
add
jg
mov
jecxz
ss
mov
in
add
aas
xlat
fisubrs
cli
fbstp
jge
xor
hlt
scas
jl
iret
stos
sbb
insb
in
pop
cmc
lods
or
pop
jnp
insl
fs
into
jge
pop
cwtl
jl
cli
and
sbb
pop
add
pop
loope
ret
js
xchg
out
fiaddl
fistps
inc
push
bound
fs
jae
pushf
adc
cld
data16
outsl
cmp
cmp
iret
xor
in
mov
mul
sub
xor
outsb
pop
sahf
lods
push
xorl
sbb
add
gs
js
lret
mov
out
jbe
repz
mull
ud1
xor
add
mov
jbe
xor
push
sar
jmp
testl
pop
subl
outsb
addr16
and
adc
out
jno
cmp
pop
outsl
jno
adc
and
cwtl
cmp
xchg
sub
mov
leave
pop
aam
aam
push
push
jg
stc
rorl
add
or
add
sub
mov
movsb
cmp
mov
or
lret
rcrl
int3
fsubp
pop
sarb
mov
daa
aaa
cmp
xor
sbb
pop
mov
mov
cld
xchg
jae
cs
mov
lods
test
testb
adc
xchg
jmp
ret
xchg
ficoms
and
mov
xor
mov
add
in
jbe
pop
mov
sti
mov
add
or
pushf
sub
aas
or
call
loopne
cmp
xor
push
fdiv
add
shrl
in
fdivrp
xchg
jecxz
mov
movsb
mov
loop
add
dec
fdiv
fnsave
cmp
mov
cmp
test
add
lret
lret
shlb
rcrl
adc
push
add
inc
xchg
jecxz
out
add
cmp
test
add
sub
in
jns
decb
rcrb
inc
pop
pop
scas
cwtl
bound
lds
mov
sub
sbb
aaa
outsb
adc
jge
orb
lods
hlt
stos
rep
cltd
testb
leave
lcall
ljmp
add
pop
and
or
and
popf
xchg
dec
aaa
popa
addr16
pop
fnstenv
shll
inc
test
cmp
sbb
fs
daa
inc
fcmovnb
sub
pop
xchg
or
pop
pop
movsb
sbb
mov
cmovae
in
or
bound
mov
push
sub
into
dec
scas
fucomp
sbb
stos
mov
test
shrb
call
cmp
dec
push
dec
stos
sub
hlt
mov
mov
sub
sbb
fdivr
mov
xchg
loope
cltd
xor
mov
push
pop
pop
push
jbe
mov
pop
xchg
std
lea
icebp
jecxz
jmp
sbb
adc
pop
enter
cmp
mov
push
xchg
mov
jnp
push
cmp
imul
mov
loop
lock
dec
test
ja
outsb
fdivr
pusha
out
cmp
ja
xchg
cld
iret
adc
pop
cli
das
mov
fdivrl
loop
push
xchg
mov
jp
lds
in
outsl
clc
add
add
fmull
jp
in
xor
enter
data16
dec
pop
push
add
aas
sbb
jl
mov
xchg
mov
adc
inc
and
sbb
aaa
out
cmc
add
popf
rolb
jbe
dec
lods
je
fstl
mov
mov
jge
mov
mov
pop
push
sub
int
outsl
inc
cmp
sbb
dec
mov
and
test
arpl
xchg
loopne
cmp
out
mov
pop
xchg
cwtl
cmpsl
fisubrl
cmpsl
xor
inc
cmp
lret
jb
add
test
inc
mov
cld
test
imul
jbe
fstpl
xor
push
jnp
shll
and
cmp
pop
fs
mov
insb
pop
popa
dec
mov
inc
mov
lea
sahf
pop
jge
jp
insl
cmp
out
dec
fistpl
aas
mov
push
bound
imul
dec
insl
and
fnstenv
mov
and
cli
add
aad
or
scas
scas
xchg
lret
dec
aad
ret
orb
or
shll
lret
jmp
jb
mov
sub
pop
jo
daa
inc
push
sti
das
fs
outsl
add
rcll
rorb
mov
out
pop
js
mov
sarl
sbb
xor
outsb
mov
orb
es
push
imul
pop
inc
in
dec
imul
rcrb
fwait
sti
jp
lcall
mov
jno
rolb
mov
popa
xor
add
or
xor
push
fidivrs
in
mov
cltd
mov
push
push
mov
sub
inc
fstl
adc
insb
jb
sub
mov
mov
sub
mov
std
mov
xchg
lds
and
fdivl
sbb
gs
adc
pop
ja
or
cmp
setae
jns
inc
fldcw
addl
cmpsl
pop
xor
test
out
mov
cmp
out
mov
jmp
or
lcall
ret
mov
mov
inc
xchg
jbe
lcall
scas
inc
pop
jl
xchg
aam
inc
sarl
xor
lds
xchg
sbb
lea
aam
loope
repz
inc
fbstp
in
pushf
adc
adc
subl
push
xor
pop
xchg
daa
dec
inc
clc
in
ret
or
pushf
mov
imul
xchg
les
adc
lahf
ret
dec
xor
xorps
imul
stos
xchg
inc
imul
sub
and
push
addr16
sbb
xchg
dec
leave
xchg
in
mov
sub
and
arpl
push
lahf
scas
adc
xor
and
mov
clc
stos
fsts
mov
mov
sahf
mov
or
push
rcrb
add
dec
xor
jne
jne
pop
sub
cmpsl
dec
xor
jmp
or
je
lret
movsb
dec
je
stos
push
ret
dec
sub
outsb
in
bound
push
fs
sub
xchg
jmp
loopne
and
push
pop
jb
lods
dec
stos
mov
inc
or
in
mov
iret
xor
mov
fnsave
adc
shrb
rcll
mov
insl
loop
xchg
fcoml
enter
repnz
arpl
mov
xor
fsubrs
jg
popf
mov
imul
pop
jb
xchg
dec
pop
out
pop
cmp
icebp
lret
xchg
jne
out
scas
insb
out
dec
xchg
pop
in
adc
jmp
mov
add
fstpt
jmp
and
cmp
xlat
adc
xlat
je
inc
fwait
out
movsl
xor
pop
ret
cld
or
sbb
and
push
sbb
shlb
ficoml
fistpl
ja
adc
cld
loope
dec
xchg
adc
cltd
push
adc
sub
packuswb
and
push
fcomps
int3
clc
stos
fdivl
lods
xchg
cli
mov
jbe
xchg
fldcw
jp
fdivr
mov
shlb
jns
and
mov
cmp
movsl
mov
or
fbld
xchg
imul
lret
stos
xor
jns
mov
push
out
shr
mov
std
enter
dec
sub
push
xchg
insb
ss
icebp
jecxz
xlat
cltd
daa
fldenv
fucomip
fdivrl
mov
scas
hlt
mov
ret
int3
and
in
sbbl
jns
in
sub
ja
mov
fsubr
cmp
int3
or
dec
push
mov
jmp
les
xor
sti
imul
aad
inc
xchg
pop
cld
xchg
inc
xor
cli
arpl
ds
mov
loope
sahf
cwtl
and
stos
push
add
test
call
xchg
sub
addr16
sub
pop
and
inc
lock
pop
jmp
lock
test
fnstcw
into
cmp
je
bound
lods
stos
mov
cld
mov
cli
test
sahf
aam
in
inc
stos
mov
subl
push
mov
mov
add
jb
mov
addr16
xor
cmp
fwait
addb
in
aad
mov
in
loop
cmpsb
mov
mov
jl
in
pop
lret
data16
int
adc
lea
pop
dec
mov
movsl
nop
xor
jbe
sbb
in
mov
cli
push
inc
fsubl
sbb
shrb
jg
pop
push
pop
inc
cmp
push
or
add
scas
adc
fcomps
pop
push
adc
test
insl
das
mov
sbb
loope
xchg
cli
sub
cmp
addb
out
sbb
mov
mov
test
cld
in
xor
mov
rolb
ret
jo
sub
lret
xor
dec
stc
sahf
xchg
test
roll
jnp
rcrb
hlt
add
inc
dec
and
sti
jge
pop
icebp
cmpsl
add
and
xor
emms
lds
mov
inc
cltd
shrb
aaa
shrl
push
into
movl
dec
mov
cmpsl
push
sub
pushf
call
insl
mov
fmull
stos
pop
lods
xor
jmp
fndisi(8087
imul
orl
mov
jl
hlt
sub
push
std
es
pop
mov
dec
addr16
add
andb
jne
jecxz
and
test
pushf
pop
add
adc
dec
dec
xchg
jge
jno
xchg
inc
bnd
cmpsl
or
mov
popf
ds
jo
dec
and
pop
push
stc
ret
xchg
xchg
sbb
cmp
jmp
pop
and
data16
pop
lea
mov
and
push
inc
shll
dec
fucomi
or
es
test
in
mov
dec
jne
or
div
js
fnstenv
xlat
mov
fnstenv
mov
mov
jl
js
mov
dec
mov
jae
outsb
add
andl
dec
stc
pushf
pop
fwait
iret
arpl
bound
mov
jns
add
xchg
inc
push
sub
std
sti
in
aas
xchg
and
dec
pop
out
jnp
push
aas
jge
js
push
jge
jge
fmuls
cwtl
or
cmp
and
cwtl
lods
ret
and
out
clc
cli
pop
movsl
mov
sbbb
pop
mov
test
loope
mov
pop
adc
cmpsb
lcall
push
icebp
dec
and
stc
dec
add
mov
push
out
adc
lcall
fdivr
mov
xchg
push
xchg
push
jmp
faddl
cmovp
push
rclb
cmp
gs
cmp
je
cmp
or
aad
push
lock
test
and
negb
lret
adcl
mov
fwait
jecxz,pn
inc
shlb
and
stc
rcrb
add
outsb
mov
mov
ljmp
test
and
inc
push
call
mov
lcall
jle
mov
cmpsl
push
pop
cmc
pop
out
jb
sub
mov
dec
rol
lret
pushf
dec
aam
movsb
in
xor
ret
cmp
fidivs
pop
int
int
and
push
or
mov
mov
lahf
sbb
xor
inc
mov
inc
jmp
pop
mov
das
cwtl
xchg
jae
inc
sbb
sub
sbb
shl
xchg
aaa
push
fstps
xor
xchg
or
outsb
or
lret
cld
and
nop
mov
jns
int
adc
insb
es
shlb
cltd
adc
mov
mov
push
enter
clc
mov
mov
rorl
mov
aas
jle
add
cmp
jae
loopne
ds
aaa
clc
mov
popf
loope
int
mov
imul
rcll
sbb
cmp
sarb
call
ja
rep
dec
xor
mov
test
jnp
jge
mov
loop
jg
sbb
xlat
call
push
mov
mull
xlat
je
out
jns
and
jno
pop
xchg
je
push
mov
or
pop
mov
adc
mov
lahf
in
cmpsl
dec
jbe
sti
xor
push
jns
cmp
adc
dec
or
sahf
arpl
cld
sbb
dec
movsl
xor
lods
scas
aaa
pop
movsl
jg
imul
repnz
pop
repnz
xor
js
xor
ja
imull
arpl
and
fldl
adc
and
test
mov
arpl
mull
adc
cmpsl
dec
xchg
cmp
xchg
test
and
scas
jge
adc
adc
icebp
pop
jl
xchg
movsl
mov
mov
subb
add
aad
inc
jo
push
mov
or
push
popa
and
pop
mov
mov
int3
cld
add
and
sub
mov
mov
mov
jno
cmc
loop
mov
mov
in
jns
jge
inc
aas
test
aas
pusha
outsb
mov
xlat
pop
jl
loope
daa
jnp
dec
xchg
cwtl
push
jl
das
out
shrl
xor
mov
sahf
iret
int3
orl
movsb
shlb
and
jne
enter
inc
push
dec
mov
pop
scas
jecxz
mov
lods
out
or
popa
int3
cmpsb
cmc
insb
in
inc
mov
jl
cmp
sti
mov
in
push
mov
or
jo
mov
popa
out
clc
sbb
aaa
push
xchg
sbb
jle
lcall
jg
adc
jp
test
mull
ror
neg
sub
mov
dec
cmp
mov
pop
daa
or
jg
push
jmp
push
jecxz
xor
xor
or
jae
aas
mov
repz
pop
daa
mov
and
popa
popa
cmp
imull
xchg
or
rorl
in
aaa
punpckldq
pop
or
adc
bndldx
aad
pop
iret
sahf
jecxz
or
sub
jo
repz
push
cli
pop
sub
xlat
popf
scas
and
jae
iret
std
idivl
jmp
popf
lock
insl
mov
mov
push
dec
sbb
xor
pop
adc
fcompp
cmp
mov
cmp
xchg
rorl
mov
inc
es
push
vpunpckldq
push
inc
xchg
lea
idivb
rclb
push
xor
mov
push
and
scas
stc
jle
clc
fs
gs
sarb
lods
push
jp
rol
mov
addr16
in
daa
adcl
jl
mov
push
in
frstor
and
fldl
or
mov
cmc
dec
cwtl
and
push
cmp
mov
and
xor
test
push
inc
inc
xor
subl
jl
xchg
gs
xchg
movsb
fwait
push
bound
xor
or
mov
int
pushf
loope
into
sbb
sbb
sub
pop
jl
xor
dec
mov
in
fildll
faddp
xor
sub
cltd
xor
je
xlat
cmpsb
xlat
scas
out
xchg
adc
gs
cmp
sbb
out
inc
mov
loop
mov
pop
pop
adc
das
mov
jecxz
add
dec
mov
fucomi
pop
dec
mov
xchg
jbe
mov
jmp
cwtl
mov
fbstp
cmpsl
sub
and
xchg
jo
inc
lcall
cmp
adc
or
shlb
js
mov
mov
sbb
xchg
fstps
or
pop
mov
push
int3
fs
jle
je
fcomps
inc
mov
pushl
lock
and
mov
call
lock
jo
test
ljmp
cs
loope
or
fnsave
sarl
imul
movsb
shr
rclb
ja
adc
nop
sahf
arpl
sarl
pusha
in
iret
and
aam
push
mov
pusha
cld
rclb
lcall
sub
out
mov
add
fmuls
cltd
and
fldl
jae
fildl
aad
adc
mov
mov
sahf
imul
jg
jb
les
test
dec
aas
pop
jle
jmp
lret
leave
sub
cs
bound
sahf
sbb
pop
mov
out
xchg
in
inc
jge
mov
mov
cltd
jb
push
arpl
jns
sbb
xchg
xchg
xor
pop
mov
lock
dec
jmp
mov
fdivrs
xchg
push
lds
pop
addr16
jl
cmpsl
loop
sbb
loop
jge
push
xor
bound
nop
int3
repnz
jge
ror
inc
sub
into
push
mov
imul
leave
mov
cmp
addb
sub
lock
mov
inc
xchg
movsb
mov
add
mov
imul
xor
fidivl
fdivl
jbe
push
mov
dec
js
dec
push
pop
mov
lods
mov
xor
jb
outsl
daa
fdivrs
jecxz
jb
adc
sub
pop
cwtl
outsb
push
cs
sub
fs
cld
xchg
xlat
ror
mov
or
pop
pop
int3
lahf
dec
aam
ja
jg
repz
negl
jmp
dec
addr16
pop
fyl2x
cmpsl
inc
fwait
cwtl
nop
push
push
cwtl
pop
mov
sbb
rcrl
xchg
mov
mov
or
sub
xchg
pop
jo
dec
cmp
and
sahf
mov
add
push
testl
adc
add
jecxz
push
inc
mov
ljmp
xor
dec
lods
mov
aam
ret
es
ret
sbb
test
mov
xchg
aas
inc
push
xor
or
clc
shlb
jle
fsubrs
push
fisubrl
in
or
adc
stos
out
push
jp
inc
lahf
cmpsl
stos
inc
or
xchg
add
jae
xchg
lods
insl
fwait
rcr
mov
leave
mov
mov
arpl
xchg
and
push
out
dec
or
mov
and
icebp
addb
cmp
mov
pop
mov
aam
pop
popf
lret
xchg
dec
fisubrl
push
xchg
xchg
incl
scas
movsb
cmpsl
push
ds
jle
add
adc
xchg
lret
insl
ss
pop
in
mov
test
xchg
out
mov
cmpsl
sbb
ret
pop
mov
sbb
nop
mov
cli
mov
rcrl
xlat
xor
push
or
pop
mov
and
and
pusha
negb
mov
add
mov
test
sub
mov
jns
sbb
pop
daa
cmp
mov
addr16
outsb
jg
or
or
test
es
in
mov
or
insb
test
dec
cld
lods
push
int
push
add
pop
popf
ljmp
stos
cmpsb
pop
xchg
cmpsb
ja
popf
scas
lahf
xchg
fmuls
into
out
test
imul
inc
mov
movsb
pusha
pop
sub
insb
decl
cltd
aas
test
ret
cwtl
out
cli
xor
das
dec
dec
ret
add
jnp
inc
cli
xor
ret
dec
mov
stos
pop
or
adc
and
nop
popf
scas
sub
dec
sub
mov
lock
negl
clc
cld
mov
adc
add
pop
cmp
pop
pop
in
xor
pop
aas
sbb
jge
or
ret
cltd
imul
sbb
jle
popa
and
shlb
loopne
inc
xchg
xchg
pop
rcrb
leave
shll
mov
div
push
cltd
pop
ja
rolb
das
fcomp
adc
incl
mov
mov
sbb
pop
push
sub
bound
cmp
int3
sub
scas
or
shll
inc
std
test
cli
out
push
int3
lods
cwtl
outsl
push
pop
push
add
mov
xchg
mov
ret
insb
mov
or
mov
mov
mov
xchg
push
into
in
mov
cmc
into
in
and
stc
push
jmp
mov
jecxz
jns
lea
mov
es
cmp
imul
je
repz
imul
or
lods
jmp
scas
jmp
rolb
mov
call
ljmp
aad
incl
xor
jne
cmpsl
and
insl
pushf
pusha
pop
js
in
stos
mov
fs
pop
xor
aam
mov
xlat
lret
cltd
dec
aam
mov
push
pop
repz
xor
das
imul
jmp
dec
add
cmpl
mov
xchg
mov
mov
cmp
sub
je
je
adc
sbb
test
add
push
rclb
lret
mov
loop
xchg
push
fcmovnb
call
ret
cmp
cwtl
inc
mov
cs
mov
cld
xchg
mov
andb
xor
scas
sub
lock
fwait
outsl
xchg
or
clc
mov
nop
icebp
ja
mov
shr
jge
inc
push
pop
iret
pop
enter
movsl
leave
dec
or
mov
fcmovne
je
cmp
mov
stc
sbb
xor
loope
mov
nop
lock
mov
notb
into
stos
pcmpgtb
push
push
pop
mov
je
stos
mov
lret
or
nop
push
pop
cmp
in
cmpsb
pop
out
and
les
pop
add
scas
push
movsb
sub
and
jle
repz
jnp
rorb
add
aas
call
ret
sub
call
aam
imul
popa
fwait
cmp
movsl
in
jmp
outsb
cmpsl
clc
jo
popf
fwait
sub
hlt
lret
xor
imul
adc
nop
lret
js
mov
jl
scas
xlat
daa
dec
inc
scas
push
dec
ss
movsb
push
clc
mov
out
in
cwtl
lret
lret
xlat
inc
mov
mov
sbb
popa
inc
sub
insl
adc
in
roll
dec
lock
mov
jle
push
divl
xlat
pop
sbb
cltd
test
dec
ret
jl
xlat
mov
mov
ljmp
scas
and
fdivl
sbb
jmp
lret
leave
fwait
xchg
xor
push
sbb
clc
movsb
jl
or
add
dec
movsb
inc
outsb
divl
insl
int3
or
dec
xor
mov
hlt
sbb
sbb
pop
dec
fsts
gs
call
mov
xchg
sbbl
xor
mov
daa
jmp
jnp
and
out
mov
bound
and
jl
dec
adc
frstor
aam
pop
cmp
insb
mov
xor
dec
xor
xor
dec
sub
jae
or
xchg
add
mov
movsl
lods
dec
insl
inc
shrb
and
or
fmul
imul
fwait
jle
cmp
aad
test
leave
push
mov
jo
xor
movsl
roll
and
je
fisttpl
pop
shll
repz
xorb
pop
dec
aas
mov
dec
lods
roll
pop
clc
test
xchg
jno
pop
rcrl
nop
cmpb
iret
out
scas
sub
and
ss
push
shrl
js
add
jb
clc
dec
dec
or
loope
das
adcb
jl
jecxz
jnp
or
xchg
sahf
xor
mov
mov
test
stos
rcrb
divl
adc
mov
push
test
lret
aad
push
and
ljmp
cwtl
xor
mov
in
and
and
movsl
xor
inc
nop
push
hlt
lock
movsl
test
mov
mov
xchg
mov
xlat
imul
sti
jb
mov
dec
scas
outsb
loope
fldenv
cld
xchg
insl
stc
cmp
or
jne
xlat
xlat
dec
movsl
dec
mov
dec
test
inc
jnp
cmc
pushf
inc
ret
loope
mov
ficompl
dec
fnstenv
xor
rol
outsl
jbe
mov
inc
pop
xchg
and
ds
add
adc
call
popf
out
dec
mov
sarb
test
pop
and
and
jo
test
adc
jle
ljmp
je
and
cld
push
lcall
push
enter
adc
xchg
and
mov
pop
mov
xchg
xchg
fs
rcrl
sub
andl
out
or
lods
inc
mov
mov
mov
mov
inc
jae
lea
into
or
ja
pop
sbb
sbb
xor
mul
pop
mov
mov
jo
insl
mov
jo
cs
mov
lret
out
insl
xchg
or
cmpxchg
xor
mov
movsl
das
ss
jle
movsb
dec
inc
stc
test
test
push
stos
mull
ja
cltd
nop
mov
shld
pop
lret
jae
pop
xorl
xor
xchg
sbb
loope
cmpsl
cltd
insb
ljmp
inc
call
mov
movsb
nop
mov
std
popa
aam
adc
and
or
lahf
test
mov
xchg
adc
sti
fidivs
dec
loop
gs
xor
test
imul
mov
inc
test
test
mov
aas
insl
sub
xchg
pop
pushf
jl
xor
sarl
fnstcw
jmp
push
cwtl
mov
mov
and
enter
pop
jecxz
jbe
rorb
imul
lcall
loope
and
repnz
cli
xchg
mulb
and
das
hlt
cmp
jne
cmp
mov
sub
sbbb
xchg
pop
lods
nop
mov
movsl
jg
sbb
daa
ret
sbb
ficoml
sbb
xchg
and
inc
je
loop
ret
dec
push
mov
jns
fidivl
dec
jnp
pushf
imul
adc
dec
pop
xor
dec
cs
mov
fcoms
iret
push
pop
mov
shll
call
shrl
pop
test
inc
adc
addr16
leave
scas
loope
inc
mov
ret
dec
jp
sbb
add
sbb
sbb
xor
mov
sti
out
loope
cmpsl
imull
cltd
adc
xchg
push
shl
jle
sbb
xchg
sti
test
pop
adc
mov
mov
cs
adc
push
cli
adc
push
mov
xor
flds
sbb
dec
and
or
stos
ljmp
aaa
mov
mov
xor
or
hlt
ja
jmp
loopne
in
andb
cltd
jecxz
push
push
imul
dec
push
pop
inc
pop
push
mov
or
lahf
sub
mov
jnp
mov
testb
xchg
pop
jecxz
leave
push
or
mov
in
pushf
xchg
jg
lcall
adc
mov
lds
shll
into
loope
fldt
jmp
dec
loopne
scas
pusha
add
and
lahf
arpl
cmp
pop
negb
jb
imul
inc
inc
sub
mov
inc
pop
scas
jne
cs
clc
mov
pushf
jb
int3
xchg
pop
outsb
fidivs
das
mov
cmp
ror
test
sub
cmpsl
adc
mov
or
cmpsb
cmpsl
adc
bound
pop
mov
and
mov
mov
lea
cs
rclb
out
insl
loop
push
in
mov
mov
lea
js
decl
aad
ljmp
mov
pusha
and
or
xchg
dec
mov
mov
lret
push
cmp
push
jl
pop
xorb
mov
orb
push
mov
test
inc
or
mov
push
xor
pop
xor
mov
jne
jg
lcall
xchg
test
xor
jne
insl
xor
testb
fidivrs
lgs
sarb
dec
jg
cwtl
je
loope
mov
out
xchg
mov
mov
sbb
adc
xlat
inc
pop
mov
pop
pusha
ds
mul
mov
cvttps2pi
jns
mov
xchg
mov
ja
adc
sahf
adc
lcall
add
add
fs
sub
fisubs
cmp
mov
and
rcrl
sbb
jl
repz
push
int
mov
mov
push
test
test
std
dec
lret
cmp
in
fstpt
pop
adc
mov
ds
outsb
in
aas
jb
cli
mov
mov
pop
daa
mov
in
pop
bound
bound
mov
outsl
add
stos
add
out
movsl
imul
sbbb
hlt
cmpsb
adc
into
push
fs
out
xchg
out
movsb
or
flds
dec
lahf
xchg
aad
xor
mov
push
mov
mov
test
sub
mov
cmp
push
push
xchg
add
xor
mov
push
or
gs
loop
mov
or
add
int
jp
fisttpll
mov
loopne
and
std
mov
dec
test
mov
mov
lock
dec
dec
cmovnp
icebp
cmc
test
loop
push
jne
mov
mov
push
cltd
adc
mov
iret
jne
jecxz,pn
or
or
or
negl
ss
lahf
jl
mov
stos
or
shlb
or
nop
ljmp
sub
push
lea
mov
enter
or
jo
or
cli
int3
jle
mov
xchg
xlat
ss
fldl
lods
sahf
cltd
cmp
ret
inc
jmp
fdivrl
jae
test
fwait
push
jnp
fwait
pop
fisubrs
loope
test
or
sbb
xor
push
xor
imul
sti
shlb
push
adc
test
mov
hlt
test
or
jb
dec
dec
stc
xchg
outsb
mov
mov
jg
add
push
mov
pop
lds
loope
push
mov
push
test
xchg
je
cmpsl
fstpt
lahf
push
iret
shr
pop
mov
sub
or
mov
cmp
repz
cltd
dec
mov
jl
mov
or
sub
and
and
incl
into
adc
xor
fisubs
add
daa
jecxz
sub
es
push
mov
clc
movsb
divb
mov
ljmp
push
stc
das
push
es
push
fwait
aam
and
mov
or
or
mov
sub
xchg
std
dec
lds
adc
xchg
test
ret
mov
xchg
adc
aad
imul
or
hlt
outsb
hlt
ljmp
stos
mov
lahf
stos
fidivs
mov
mov
mov
sub
ljmp
xor
add
mov
shll
cld
xchg
mov
das
nop
sarb
cmpsb
stos
mov
mov
stos
shrl
shll
movsl
push
ficoms
rcr
imul
dec
cmp
cmp
cmp
hlt
add
ret
in
into
push
fistps
lock
clc
adc
jle
mov
mov
inc
xchg
jle
jmp
mov
js
xor
popa
and
sbb
fcoml
stos
out
dec
je
pop
fistl
xchg
xor
mov
jmp
int
shlb
inc
inc
out
dec
mov
mov
xor
sti
mov
push
xor
mov
bts
pop
fmull
mov
repnz
or
lds
cwtl
jne
mov
cltd
jl
jg
into
pop
mov
xchg
ljmp
xor
arpl
dec
mov
xchg
add
jb
xchg
or
popa
cmp
divps
bound
lret
dec
jae
and
push
xchg
dec
aas
cmpsb
xor
inc
nop
mov
mov
jp
pop
fcmovbe
xor
loopne
insb
xchg
je
pop
fisubrl
int
push
dec
xchg
sahf
scas
and
iret
mov
add
rep
in
pop
sub
lret
pop
adc
test
fsubl
std
test
push
mov
ret
push
adc
jb,pn
sub
mov
ret
jbe
xchg
mov
bound
repnz
gs
and
stc
mov
nop
aam
xchg
mov
sub
test
pop
xor
pop
adc
in
pop
mov
or
out
not
cmpsb
repz
push
xchg
sbb
dec
inc
adc
daa
sbb
mov
popf
mov
xor
daa
or
mov
fs
ljmp
jge
repz
negl
test
xchg
pop
pop
roll
insb
pop
inc
mov
jp
shl
push
shll
out
lea
lret
and
jns
jnp
mov
mov
mov
mov
sub
push
cli
mov
and
xor
and
int3
pop
cmp
cmp
push
mov
dec
lods
cwtl
scas
pop
or
pop
add
mov
inc
add
ret
push
mov
mov
dec
daa
xorb
movsb
adc
pop
pop
shl
fwait
cmp
loop
fists
sahf
sbbb
js
push
sbb
shrb
addr16
fidivrs
mov
jmp
out
inc
fidivrl
sbb
adc
pop
jns
mov
cld
xor
sti
lock
add
mov
call
push
or
cmp
test
scas
inc
inc
call
inc
mov
test
mov
je
or
dec
xlat
jns
iret
mov
arpl
cmc
adc
fistl
lock
popa
dec
pusha
int3
hlt
pop
es
movsb
leave
and
fistpl
ret
popf
or
out
mov
mov
shr
push
hlt
imul
cmp
mov
xor
loopne
rolb
jl
out
cli
mov
addr16
cmpsl
or
and
jo
and
mov
dec
or
ss
jmp
mov
or
into
icebp
nop
pushf
cmp
sar
cmpb
sub
push
mov
cmp
cmc
inc
mov
adc
data16
jle
sbb
or
fs
les
dec
jl
inc
incb
nop
xor
or
lock
jl
aaa
les
cltd
pop
mov
pop
cmp
movsl
pusha
xor
or
aam
je
mov
cmp
mov
mov
cmp
cmp
lea
popa
dec
lods
adc
movsl
pop
negb
dec
cmp
push
gs
jb
sub
je
sti
loopne
lods
push
dec
pop
aam
sub
aas
sbb
cmpl
ror
xor
inc
mov
pop
mov
lock
inc
mov
dec
or
mov
rcrl
cld
mov
hlt
and
sbb
push
inc
jnp
shl
rorb
push
shlb
sub
xchg
dec
cli
gs
lock
mov
mov
inc
xchg
movsl
dec
rcll
adc
inc
jno
fwait
mov
jle
test
xor
cld
insb
ss
dec
adc
out
or
mov
dec
pop
scas
or
fmul
adc
mov
xchg
add
call
push
adc
int3
enter
dec
daa
mov
mov
lea
je
xchg
pop
push
bound
push
inc
jg
je
cli
pop
jge
fdivrs
sbb
call
inc
loope
lods
add
cmp
hlt
pusha
arpl
mov
pop
mov
jle
pop
mov
add
jg
jp
nop
popf
mov
not
je
daa
cmpsl
scas
lret
jb
add
int3
mov
lods
sbb
and
jecxz
adc
mov
cmp
notb
mov
subb
out
fists
xchg
jmp
pop
mov
sti
lds
outsl
jns
pop
shrl
mov
aam
push
mov
cs
cmc
movsl
xor
pop
xchg
movsb
jae
dec
dec
lods
out
imul
cltd
loop
test
inc
out
add
call
popa
rolb
xchg
nop
imul
mov
movl
jge
mov
and
sti
data16
iret
cmpb
fdivr
pushf
jne
jg
push
orl
mov
leave
fwait
or
push
sar
fsubs
mov
jl
incl
fisubrs
push
push
lret
xor
les
or
cltd
stos
mov
xor
pop
sub
lret
jge
fidivl
jb
lret
xor
lret
push
int3
aas
push
mov
fdiv
popa
test
jecxz
fwait
data16
cmpsl
xorl
dec
insl
aaa
out
sub
into
inc
lds
push
iret
xlat
outsl
arpl
cld
dec
cmp
sbb
rorl
movsb
into
leave
in
test
loope
mov
out
jmp
sub
test
and
or
add
and
fnstenv
insb
dec
jmp
sbb
mov
inc
icebp
int
leave
std
mov
fcmovb
ljmp
stos
jge
ds
imul
pop
jmp
fldcw
xchg
mov
ret
push
mov
test
fdivrp
lahf
outsb
mov
or
shrb
daa
ficompl
nop
mov
outsb
xchg
mov
add
mov
push
mov
cmpsb
adc
mov
mov
dec
sahf
rolb
cli
mov
xchg
ljmp
test
fwait
cmpsb
bound
adc
and
test
decl
push
insl
dec
xchg
mov
or
das
dec
mov
mov
xlat
cmp
imul
call
pop
arpl
add
out
cmp
test
movaps
jns
jae
mov
mov
push
mov
ds
cmp
adc
int3
mov
pop
stc
xor
mov
ljmp
mov
sub
jg
xlat
jmp
or
cli
sub
inc
mov
add
adc
shrl
pop
aaa
outsb
rclb
sahf
jmp
pop
sbb
pop
fs
jl
jbe
orl
es
call
push
loop
sbb
rcl
enter
adc
or
cld
add
inc
addr16
push
mov
imul
shlb
ds
mov
cmc
lahf
jmp
in
pusha
gs
addr16
movsl
dec
pusha
loop
pop
imul
push
xchg
push
mov
and
xchg
mov
xor
arpl
adc
adc
dec
sbb
fistps
test
sub
les
sti
aas
mov
jle
out
dec
sti
out
out
imull
and
xchg
and
ja
and
data16
loopne
popf
sar
pop
lret
add
in
pusha
dec
in
push
outsl
lcall
lock
movsl
stos
cld
in
or
movsl
rolb
popa
pop
pop
les
negl
outsb
pop
loope
popa
mov
notl
in
xchg
sti
ljmp
test
sbb
xor
aam
fildl
sub
rclb
and
movsb
push
test
mov
rorb
insl
push
push
or
dec
aad
mov
or
sbb
xchg
dec
loope
fwait
mov
sbb
jge
bound
xchg
cmc
mov
mov
sub
jne
mov
lock
or
cmp
js
mov
lds
adc
ljmp
xchg
leave
jecxz
loop
add
push
les
test
adc
stos
jl
jno
jl
lds
dec
mov
xchg
inc
movsl
stos
frstor
inc
movsb
loop
jno
dec
lahf
repnz
adc
dec
fs
xor
call
movsl
leave
jle
mov
lcall
jne
jmp
push
mov
fsubs
add
push
sbb
out
test
sbb
xorl
mov
addr16
inc
nop
imul
cmpsb
shlb
ret
sub
aam
push
mov
push
movsb
jb
inc
or
in
fsubs
test
pop
push
adc
pop
and
clc
stos
push
lcall
inc
or
outsl
push
cmp
mov
rcrb
and
test
loopne
jbe
cmpsb
mov
loope
xchg
or
frstor
xor
cli
test
push
imul
fisubl
sub
repz
xchg
jnp
popw
pop
ljmp
dec
mov
mov
jmp
std
mov
pop
push
jno
jecxz
xchg
push
mov
jmp
shlb
jb
mov
dec
movsb
mov
and
insb
jo
out
xchg
mov
es
lods
pop
mov
or
lret
cld
add
cmp
pop
pop
out
jae
imul
negb
mov
in
movsl
mov
aas
andb
ret
mov
sub
push
push
dec
push
lods
and
mov
jle
shlb
inc
pop
cmp
xor
inc
sbb
insb
repnz
and
mov
add
lcall
aad
jl
call
xchg
or
gs
inc
pusha
gs
push
jl
mov
xchg
icebp
sub
mov
rcl
and
fimuls
sbb
into
mov
repz
div
xchg
or
mov
ret
je
and
dec
aas
xchg
movsl
call
push
aam
cmp
add
mov
push
mov
or
and
add
rclb
add
xor
vmovaps
push
enter
or
je
sbb
iret
clc
xlat
enter
sub
jbe
inc
test
rclb
fiadds
stc
insb
fcoml
shrb
out
cli
xor
test
cld
pop
xor
mov
mov
or
pop
pushl
add
push
popa
adc
rolb
jbe
mov
xchg
std
shl
xor
xchg
mov
pop
pavgb
xor
adc
out
sub
ror
adc
insl
in
push
mov
insb
out
repz
push
pop
scas
and
sbb
repz
je
lds
jge
add
clc
adc
jnp
jl
sub
dec
out
xlat
nop
mov
std
rorl
out
mov
lahf
test
imul
pop
mov
push
sbb
push
jl,pn
push
mov
dec
sbb
test
pop
sub
fsub
pop
std
dec
add
pop
cmpb
dec
adc
xchg
pop
addb
mov
stc
aas
or
jns
fbstp
push
hlt
inc
adc
popa
push
pop
aas
repnz
mov
pop
xor
dec
mov
inc
mov
sbb
push
sub
pop
jo
ffree
mov
div
ss
or
xchg
mov
or
dec
mov
sar
xchg
loop
mov
mov
push
ret
fs
cmp
jmp
dec
lret
mov
rorl
add
pusha
push
jae
scas
xchg
sbb
fldl2e
adc
jge
movq
mov
adcl
xchg
pop
dec
cltd
add
aam
inc
sbb
dec
in
test
pop
mov
je
lds
ljmp
mov
push
pusha
inc
sahf
aas
jo
loope
and
adc
cld
dec
jge
pop
jbe
jns
xor
fldcw
ds
mov
mov
xor
aaa
mov
lock
and
outsl
movsb
inc
cmpl
or
hlt
rcrl
arpl
cmpsb
jae
movsb
inc
sbb
adc
cmp
daa
cmovl
test
cltd
rcrl
mov
xchg
sarl
stos
call
dec
imul
aas
fcom
xchg
mov
mov
jecxz
cld
pushf
dec
dec
outsl
fisttpll
sub
lret
jp
loopne,pt
test
xchg
ja
cmpsl
mov
fucom
adc
dec
xchg
cwtl
sub
jmp
mov
and
or
pop
sub
sbb
out
push
lock
add
xchg
subb
scas
aas
jecxz
out
loop
dec
lods
dec
outsl
and
es
cmc
mov
pop
lahf
and
mov
je
repz
insb
out
mov
sbb
icebp
and
inc
lcall
xchg
or
arpl
push
cli
lock
js
xchg
fld
loop
add
iret
cmp
jb
sbb
cmc
jg
into
mov
xchg
loop
jecxz
out
popf
and
xchg
shl
lods
or
subl
out
jge
lcall
mov
lods
lds
cmpsl
dec
cmc
pop
roll
cmp
test
or
in
and
pop
pop
stc
pushf
add
scas
test
shl
add
or
jp
lods
sbb
int
adc
xor
test
imul
ficoml
nop
fnsetpm(287
in
xor
std
sbb
jo
icebp
out
or
jmp
jmp
sbb
popf
push
xor
test
xchg
add
xor
mov
mov
icebp
sbb
filds
pop
testl
jbe
xbegin
xor
pop
xchg
cmp
loopne
loope
and
jbe
mov
xlat
push
in
out
movsl
dec
push
mov
outsb
lock
loope
mov
cli
xor
xchg
pop
mov
lds
mov
stos
jae
shll
sub
loopne
push
inc
rclb
insl
sub
stc
inc
jo
mov
gs
fwait
jne
in
cmp
ret
sbb
push
xchg
inc
add
xchg
addr16
es
dec
cli
dec
scas
xchg
dec
xchg
cmc
ret
fists
fiadds
scas
pop
adc
icebp
in
mov
popf
push
arpl
push
out
and
push
inc
or
pop
shll
sbb
pushf
fsubrl
jge
adc
mov
movsb
push
inc
jmp
mov
mov
and
dec
sub
in
test
pop
mov
out
or
sbb
sbb
addr16
test
mov
movsl
jge
loop
lret
nop
mov
mov
aam
fwait
sbb
inc
lcall
out
push
sbb
repz
je
sub
sub
adc
cmpsl
pop
inc
jne
loopne
jae
mul
add
xor
push
push
xchg
mov
sub
lods
cld
rcr
xor
arpl
or
fnstsw
sub
call
loop
jne
neg
push
jns
loopne
pop
jb
pop
out
jno
cmpsb
xor
xchg
bound
jno
xchg
push
stc
fadds
or
orl
inc
xchg
int3
fimull
lea
and
icebp
js
fisubs
and
and
sbb
mov
mov
inc
pop
xor
cmc
cld
shl
cmp
repnz
je
xchg
jp
jp
push
inc
scas
adc
data16
xor
lret
ljmp
add
sub
jb
or
jmp
lods
xchg
inc
add
inc
jne
sbb
pop
pop
jo
pusha
ds
clc
lahf
sahf
lods
jmp
mov
fsubr
jge
jo
frstor
push
xor
and
mov
push
push
add
mov
xchg
imul
sub
dec
jle
daa
push
and
scas
cli
gs
xchg
int3
lds
cmpsl
mov
pop
cmpsb
mov
xor
lahf
fs
and
movsb
mov
xchg
xchg
mov
out
push
jnp
cmp
mov
sub
js
mov
or
mov
adc
std
xchg
inc
pop
jnp
sahf
in
sbb
jo
addr16
cmp
into
ficoms
outsw
add
movsl
mov
cmp
repnz
and
insb
sub
pop
nop
inc
cs
inc
or
jno
stos
pushf
loop
js
out
lods
xlat
pushl
std
je
jnp
or
or
mov
test
movsb
outsl
cmc
pop
mov
hlt
dec
adc
sub
lods
or
xor
std
int
aam
fst
push
push
pop
xlat
jg
and
jo
sub
inc
nop
aas
mov
and
xor
xor
and
shlb
mov
std
fldt
rolb
sbb
xchg
and
mov
mov
mov
xchg
add
into
lcall
in
inc
loope
sub
cmp
aas
lret
sarb
out
cmp
outsl
adc
sub
jge
int3
push
testl
cmp
jbe
lcall
incl
lods
pop
pop
push
sbbb
rorb
sarl
dec
not
inc
mov
out
fldt
mov
add
sti
push
test
mov
jg
jo
mov
pop
xchg
mov
pop
cld
add
push
icebp
sub
fisubrs
mov
jmp
mov
xchg
jnp
fmul
sbb
inc
sti
sub
sbb
xchg
data16
push
in
sbb
stos
xchg
xlat
push
cwtl
int3
data16
lea
xor
jb
cmp
mov
adc
sarl
dec
das
addb
cmp
mov
or
loope
pop
outsl
std
arpl
pop
xchg
jmp
jle
push
dec
push
sbb
mov
inc
jae
mov
and
or
nop
fdivrl
jmp
pop
and
push
insl
sub
or
pusha
lret
xor
xchg
outsb
iret
fcmovne
aam
or
inc
jbe
jmp
or
test
mov
dec
xlat
dec
orb
push
sbbl
mov
loop
mov
icebp
push
nop
mov
fs
and
scas
ret
in
fcoml
dec
mov
and
fists
jne
clc
rolb
js
dec
jne
mov
mov
push
in
movsb
andl
push
mov
adcb
and
jb
and
inc
xor
inc
ds
jo
mov
sub
cmpsb
lret
xor
cvttps2pi
jg
xchg
mov
pop
rcrl
sti
lcall
fwait
dec
int
xor
mov
sub
jns
cmp
adc
mulb
and
sub
out
fisttpll
pop
sti
xchg
fidivrl
in
insb
ja
cmp
in
and
pusha
add
xchg
outsl
subb
mov
leave
inc
jecxz
and
sar
add
and
and
mov
dec
mov
popf
jnp
pop
jae
adcb
sub
outsb
mov
in
aaa
rcrl
test
lods
fiadds
je
sbb
leave
mov
int3
cmp
rol
inc
mov
cmpsb
mov
in
std
jge
hlt
mov
fwait
sbb
and
pop
jb
rclb
dec
sub
hlt
add
mov
inc
in
scas
mov
enter
fisubrl
out
shll
movsl
dec
shlb
and
pop
sahf
adc
push
out
jge
dec
xor
xchg
cmp
xlat
dec
hlt
sbb
std
loope
mov
push
xchg
movsb
push
dec
in
cmp
xchg
fimull
sub
xchg
or
sbb
jno
mov
es
mov
int3
in
mov
pop
fistps
std
jae
jle
jp
jge
mov
mov
mov
pop
enter
ret
negb
out
mov
pop
fs
cmp
adc
std
xor
push
fstpt
test
xor
shlb
js
or
in
fucom
sub
and
ljmp
add
dec
sahf
ja
fstl
mov
lods
shrl
add
sbb
mov
ret
xchg
mov
jo
add
pop
jmp
in
cld
or
sub
push
vpsrld
and
push
mov
lds
jnp
aas
pushf
arpl
sahf
ljmp
aam
mov
aas
cmp
or
movsb
imul
or
pusha
stos
jo
repz
cmp
push
add
addr16
loopne
dec
andb
or
pushf
dec
stos
or
comiss
nop
add
jle
push
and
outsl
jns
aam
outsb
into
jb
adc
jl
mov
repnz
fwait
fwait
dec
mov
and
inc
adc
call
xor
popa
mov
mov
or
cmp
mov
pop
fisubs
and
lds
popa
adc
xor
lock
xchg
push
sbb
dec
js
jbe
nop
test
and
adc
outsb
adc
inc
cmc
test
je
jo
or
clc
lds
add
negb
insl
and
out
test
jb
push
imul
scas
int3
or
shlb
xchg
bnd
lods
jo
lret
not
dec
enter
jns
adc
jge
inc
lock
pop
std
nop
or
scas
push
div
mov
push
pop
push
fidivrl
imul
lret
push
or
dec
sub
sbbb
arpl
xchg
sbb
mov
clc
mov
cs
cld
cmp
xchg
lock
xlat
fiadds
xchg
mov
mov
or
or
mov
mov
les
inc
and
movsl
mov
add
add
lret
and
jb
daa
rcrl
inc
in
adcb
sbb
sbb
mov
nop
lock
scas
ja
xchg
or
pushf
fildl
lahf
out
inc
ret
push
sub
mov
stos
mov
insb
dec
and
fidivrl
mov
pusha
les
push
fs
jg
inc
ret
test
inc
or
clc
idiv
outsb
xchg
mov
push
mov
dec
clc
loope
cwtl
cmp
jge
push
out
push
jecxz
sbb
and
ret
inc
popf
test
fs
mov
adc
test
inc
sbbl
or
int3
ljmp
mov
add
ja
pusha
pusha
dec
cmp
cmp
pop
push
cmp
repz
stos
jae
imul
jo
cmp
cmc
std
rcl
shlb
test
mov
jmp
arpl
jo
lahf
adcb
inc
punpckhdq
mov
mov
or
mov
imul
mov
cmp
daa
arpl
out
xor
negl
or
les
push
pop
fcmovbe
inc
sub
lods
inc
movsl
jge
les
cmpsl
pop
stos
pop
imulb
jbe
call
into
es
aad
sti
jne
inc
mov
pushf
ljmp
inc
mov
lea
ds
jecxz
leave
in
xchg
inc
leave
jl
sub
mov
cmpsl
insl
sub
sahf
jmp
lret
mov
subl
mov
or
ficomps
leave
scas
or
movsb
add
pop
inc
adc
jg
pop
mov
sarl
shll
jle
aam
testl
roll
push
in
out
jne
fs
mov
and
outsl
push
jne
dec
inc
pop
bound
int
movsl
mov
cld
test
mov
inc
rcl
or
in
dec
adc
int3
idivb
ljmp
lea
pop
mov
jo
lea
sub
imul
in
ret
fisttpl
mov
out
fmuls
and
jnp
and
das
aad
je
or
loop
arpl
pop
lock
lods
scas
lahf
sti
xchg
sbb
stos
jns
push
mov
stos
pushf
cs
pusha
aam
or
test
stos
or
aad
ret
push
xchg
push
sub
std
push
xlat
int
xor
divb
es
adc
ja
sub
roll
iret
mov
outsb
jge
push
test
dec
daa
push
lds
sub
iret
pop
dec
and
subl
and
mov
jb
stos
push
pop
mov
mov
inc
push
lret
and
adc
stc
mov
rorb
out
bound
xlat
or
sbb
loope
and
not
mov
add
stc
das
subl
mov
mov
sub
sub
dec
outsb
mov
mov
or
sbb
mov
sub
fbstp
push
fsubrl
mov
cmp
fs
fildl
movsb
mov
fst
jo
std
lds
test
fwait
aaa
and
sbb
dec
cmp
js
jmp
sbb
push
test
repz
cwtl
mov
fs
fs
nop
adc
dec
sahf
xor
or
daa
add
xor
lds
in
inc
pop
push
hlt
sbb
mov
or
pushf
cld
lods
mov
ljmp
mov
mov
lret
push
arpl
cmp
lcall
xor
and
out
mov
jbe
aad
inc
push
shrb
push
add
rorl
ret
mov
pop
enter
mov
enter
mov
subb
andl
dec
jo
push
xchg
fdivl
sbb
popf
cmp
jge
pop
movsb
push
push
not
push
and
in
iret
lds
jl
into
or
pop
notb
hlt
lret
stos
and
or
data16
jle
jmp
mov
bound
in
sbb
fdiv
add
cmp
popf
mov
pop
or
mov
scas
xlat
and
in
push
test
adcb
lds
mov
push
sub
jne
xor
or
dec
fsub
inc
loopne
lds
sbb
jne
je
es
fiaddl
fadds
iret
mov
divb
xchg
daa
cmp
pop
scas
loop
loope
inc
dec
stc
enter
or
mov
dec
in
and
test
mov
sarl
sub
jecxz
push
popa
and
xchg
or
xchg
jae
or
nop
add
pop
rol
mov
pop
cmp
arpl
or
mov
ret
cltd
and
shr
push
mov
cmpsl
roll
xor
mov
push
rcll
js
aas
lds
es
jle
sbb
fbstp
int
and
nop
dec
int
add
or
jmp
adc
in
jmp
jno
pop
imul
fisubrs
and
xor
cmp
mov
subb
enter
cmpsb
jns
js
arpl
movsb
xor
mov
xchg
ja
icebp
jle
adc
movsb
out
lahf
adc
mov
pop
movsb
xchg
xor
test
stos
pop
push
fadds
mov
adc
push
inc
jmp
lret
loope
daa
jl
jle
shlb
pop
add
adc
sub
sub
push
jl
sub
mov
mov
mov
push
push
add
fcomps
lds
gs
cwtl
insl
ljmp
scas
stos
mov
adcb
nop
pop
aas
std
jnp
insl
inc
cmpsl
lret
or
rolb
and
dec
rorl
fld
pop
scas
das
fsubs
or
call
test
pop
js
and
jecxz
ficoml
and
jp
adc
lock
movsl
mov
jbe
shlb
ficomps
mov
push
pop
loopne
aam
test
xchg
cmp
mov
pop
cmp
cmp
sub
cmp
add
sbb
in
mov
xor
pop
nop
push
mov
jne
gs
xchg
sti
cmp
sbbl
aaa
mov
mov
repz
lret
sbb
mov
mov
dec
into
pushf
fwait
lds
addr16
stc
shrl
jb
into
sbb
dec
cmp
scas
iret
mov
arpl
gs
cmp
scas
xchg
xchg
cmc
add
dec
and
lds
test
sahf
inc
dec
fldenv
sbb
cli
inc
aam
ja
ss
adc
push
add
outsl
adcb
gs
mov
xchg
outsb
out
add
push
adc
inc
pusha
xor
ret
xchg
iret
xchg
pop
and
cmp
arpl
and
jmp
data16
flds
loop
cmpsl
jle
push
out
stos
jl
push
das
shll
les
push
cmp
mov
cmp
mov
xchg
lahf
hlt
push
out
insb
and
jo
mov
cmp
in
gs
cmc
mov
cmc
lods
ljmp
pop
cwtl
jnp
pop
fbstp
in
and
test
lea
es
pop
add
mov
mov
sub
xchg
fdivrs
fdivp
inc
call
add
ror
ffree
mov
or
test
addr16
mov
jmp
in
int
sbb
daa
adc
notb
push
stc
int3
cmp
push
in
enter
enter
fldz
sub
decb
or
into
loop
mov
mov
mov
and
ja
adc
pop
jno
mov
cmpsb
ds
mov
rol
mov
loop
cmp
push
jo
pop
add
ret
ds
and
outsl
loop
loope
lea
push
mov
xchg
imul
jg
jl
rolb
iret
pop
rorl
pop
inc
ds
push
das
lods
mov
jnp
lods
shl
xor
mov
ret
push
xlat
fs
loop
jno
inc
ja
push
popa
mov
stos
lds
lahf
lret
sub
icebp
sbb
lods
lock
call
cmp
mov
and
xchg
xchg
stos
fimuls
push
mov
mov
insl
or
inc
xorb
mov
jmp
adc
cmp
cmp
adc
sbb
les
mov
fimuls
hlt
cmc
fstl
inc
iret
icebp
mov
jo
mov
or
out
lret
cld
std
fldt
ljmp
mov
mov
test
insb
push
and
fimuls
nop
mov
je
test
xchg
push
lahf
fisubrl
push
sub
inc
sbb
and
cmp
push
andl
add
cmp
out
lea
dec
aam
insl
jg
jns
fidivl
mov
scas
pop
mov
sbb
mov
in
add
in
pop
add
mov
repnz
sarl
pushf
in
cmp
xchg
popf
mov
add
cmp
mov
addr16
stos
pop
mov
or
dec
inc
loope
repz
ret
ljmp
fucomp
js
sbb
inc
push
jns
pusha
iret
pop
lcall
or
mov
aam
inc
in
adc
sub
jo
pop
xor
adc
pop
out
or
ds
xor
ss
cld
jbe
repnz
jnp
xchg
addl
pusha
xchg
shll
out
inc
and
and
and
add
inc
aad
mov
ret
sub
imul
mov
movsb
dec
ficoml
loopne
test
rolb
mov
fsts
sub
inc
push
cmpsb
into
cwtl
jbe
mov
push
sub
xlat
fistpll
mov
jge
xor
xchg
les
push
jae
xor
pop
loope
outsl
gs
pusha
test
mov
lret
cli
cmp
outsb
sar
daa
sub
int
adc
pop
add
repnz
mov
or
sbb
mov
inc
add
scas
lcall
and
xchg
shlb
push
push
xorb
jge
outsl
jmp
xchg
aaa
xor
jb
mov
lcall
push
jae
cmc
int3
fwait
inc
mov
push
jge
shlb
mov
fbstp
fimuls
xlat
and
pop
es
pop
inc
lcall
sub
and
insb
adc
rolb
popa
and
movsl
xchg
mov
cmp
scas
les
inc
repz
out
mov
inc
mov
jno
aad
sbb
aad
cs
sbb
cmpl
aad
push
leave
adc
push
pop
into
daa
jge
cltd
lcall
cwtl
add
push
jp
cmp
and
shl
pop
add
ror
mov
jmp
push
shll
imul
add
lods
mov
rcl
inc
add
ja
stos
or
aaa
movsb
cwtl
les
mov
add
sbb
cld
adc
fs
fcmove
das
in
lret
push
into
mov
mov
pop
push
xchg
adc
and
dec
sbb
cli
fwait
ja
xchg
push
int3
jnp
jmp
insl
pop
pop
test
in
xorb
fnstenv
push
fbld
xor
xchg
sahf
lahf
mov
in
push
pushf
clc
xchg
push
popa
jg
push
cmp
mov
out
sar
inc
mov
xchg
test
incl
ret
inc
jnp
mov
das
pop
push
shrl
dec
scas
jb
and
jg
rcr
mov
inc
mov
xchg
sbb
cmp
adc
xchg
scas
xchg
fstpt
fistl
std
arpl
hlt
mov
dec
xchg
andb
insb
cmp
push
cli
les
ds
bound
xchg
cwtl
mov
cmc
push
sub
movups
pushf
cld
pop
leave
inc
adc
fs
sub
mov
ljmp
adc
into
insb
mov
cltd
mov
pop
bound
lret
test
mov
lret
das
pop
jp
inc
inc
dec
and
nop
cld
lcall
mov
inc
out
mov
and
push
sbb
cmp
inc
or
gs
out
pop
ret
and
pop
xchg
div
dec
loopne
pop
mov
and
xchg
add
add
jbe
pushf
popa
jge
sbb
inc
xor
inc
cmp
testl
ret
in
jmp
in
movsb
js
out
jnp
push
xor
xor
push
pop
sbb
push
dec
mull
add
push
nop
outsb
fidivrl
sarl
mov
in
xlat
sbb
cmc
jns
lret
or
or
xchg
xor
inc
xor
inc
fstps
mov
into
jo
ja
push
out
sbb
addr16
imul
adc
inc
cmpsl
daa
and
cmovne
rorl
pop
aas
dec
scas
shll
sbb
icebp
push
int3
int
in
rolb
mov
gs
xor
dec
mov
adc
aam
arpl
mov
push
push
push
mov
mov
nop
cmp
lret
sarl
adc
fstpt
test
xchg
stos
push
adc
addr16
je
jne
cmpsl
jge
lret
push
sahf
imul
fs
enter
fwait
int3
out
fcomip
movsl
add
xchg
inc
ret
ljmp
mov
cmp
sarb
call
negb
gs
loope
or
lds
jae
sbb
fwait
dec
add
shlb
pop
scas
clc
adc
scas
xchg
mov
xorb
outsb
arpl
dec
mov
aad
into
in
popf
in
jmp
repnz
sub
adcl
push
dec
stc
out
in
dec
enter
aad
mov
repz
popf
adc
sub
aaa
pop
sub
fadds
mov
xchg
imul
push
mov
in
rep
lahf
mov
pop
dec
fisubs
xchg
mov
rol
mov
jae
xor
rorl
xor
lea
iret
ja
repnz
xchg
jo
pop
xchg
ss
push
stos
and
push
lret
movb
push
inc
mov
mov
adc
mov
mov
leave
mov
add
mov
jne
ret
nop
andb
or
cmc
into
cmc
idiv
in
jae
fnstcw
adc
or
in
xorl
sub
loope
ret
push
shll
scas
inc
lods
out
inc
push
das
div
mov
mov
pushf
dec
leave
sti
pop
pop
adc
mov
mov
xor
mov
and
mov
mov
in
dec
push
fwait
pop
push
imul
add
cld
cltd
jno
add
jo
mov
xchg
mov
pop
xlat
jns
mov
test
dec
dec
loop
pop
orl
jl
add
mov
add
in
push
push
mov
inc
jmp
lret
dec
lea
mov
mov
xor
lods
pop
mov
mov
and
bswap
paddq
mov
repz
pusha
stc
cli
insb
and
inc
ljmp
neg
stos
divb
and
fwait
dec
addl
fstl
fdivs
imul
repnz
cmpsl
pop
adc
cwtl
adc
pop
mov
mov
mov
jno
push
mov
stos
sbb
scas
mov
xlat
push
sub
cmpb
push
pop
mov
xor
ss
popa
fdivrl
int
pushf
add
sub
jbe
inc
lret
test
mov
ret
jecxz
cmp
mov
sub
shll
aad
shlb
scas
mov
mov
insl
inc
inc
dec
jecxz
ret
subb
sbb
cmp
push
scas
nop
pop
xchg
mov
and
push
imul
shlb
cmp
adc
fnstcw
std
xor
pop
in
aam
out
pushf
pop
ljmp
shll
jae
shrl
and
cmpsb
movsb
orb
arpl
mov
aam
sahf
loop
mov
mov
lret
lcall
mov
or
mov
insl
aam
out
ficomps
pop
aad
iret
xor
and
jne
fwait
xor
icebp
mov
insb
push
jl
push
fsubrl
sub
mov
loope
daa
cmp
mov
pop
dec
or
xchg
sbb
and
push
mov
inc
loop
es
add
pop
or
addr16
push
inc
sbb
out
xchg
aas
insb
scas
xchg
jno
inc
mov
cld
and
adc
xchg
fwait
push
or
dec
fbld
jae
jo
sbb
jne
test
jg
addr16
rcrl
rcrb
mov
mov
cmpsl
stc
or
mov
js
sbb
cli
mov
cmp
mov
or
and
pop
or
jns
pop
and
xchg
pop
sarb
stc
lock
bound
inc
jg
jne
pop
in
or
mov
stc
fdivl
jne
shlb
xchg
mov
xchg
push
fcomps
lock
and
inc
xchg
rcr
icebp
dec
je
sub
dec
mov
std
xor
es
mov
clc
cli
pushf
xchg
hlt
dec
cli
hlt
add
adc
lods
in
pop
push
xchg
movl
and
leave
dec
hlt
sub
push
mov
inc
fwait
xchg
adc
jl
gs
and
mov
out
mov
inc
enter
sub
fdivrl
lds
int
fnstenv
stc
mov
jns
adc
ss
ljmp
push
jns
add
lret
test
popf
jmp
in
pushf
lods
aas
push
inc
push
lock
les
push
mov
adc
xor
shll
push
dec
or
rorb
out
mov
fcompl
orb
pop
jae
pop
dec
pop
dec
rcrl
or
aas
jne
test
lcall
je
inc
lret
fdivrs
dec
xor
cwtl
or
jecxz
test
mov
or
xor
loope
lcall
adc
xchg
inc
add
lret
loop
jo
inc
fsubl
out
loop
in
imul
fidivl
push
in
mov
mov
cmp
pop
inc
inc
inc
xchg
xor
imul
xchg
cmp
xsaveopt
dec
adc
adc
xchg
cltd
or
mov
inc
mov
out
es
fsub
in
and
fadd
mov
adc
cmp
cmp
pop
arpl
loopne
mov
repz
jno
dec
pop
js
inc
mov
in
xchg
sbb
push
aaa
mov
std
js
inc
push
lcall
in
test
sbb
test
fistl
or
pop
shlb
mov
mov
xor
dec
mov
pop
int
dec
sub
mov
mov
fstl
ss
js
lds
scas
mov
dec
clc
test
addl
outsb
and
in
negb
fcoml
rclb
adc
hlt
mov
sub
xor
mov
adc
ss
pop
inc
xchg
cld
jae
mov
and
jbe
push
hlt
leave
push
cmp
add
add
xlat
cmp
call
orb
arpl
inc
pushf
inc
nop
inc
jne
xchg
ret
xchg
add
xor
dec
repnz
lahf
test
sahf
xchg
mov
stc
ja
add
negl
or
out
scas
xor
xor
inc
popl
fsubrl
ror
inc
xor
xchg
orl
sbb
xchg
fs
mov
cmpsb
and
mov
add
pop
int
jns
test
push
dec
jae
cmpsl
xchg
pusha
jnp
ss
sbb
mov
and
mov
pop
cmp
cmpsl
pop
xor
icebp
xchg
xchg
add
repz
roll
mov
sbb
pushf
or
add
mov
fiaddl
cmp
jl
fcoml
mov
roll
mov
ss
push
xchg
xor
or
or
scas
outsl
and
dec
sahf
add
dec
push
push
jns
out
out
lods
cli
repz
bound
xor
pop
cs
cmp
stc
sbb
pop
sub
mov
dec
sbb
aaa
fdiv
inc
fcmovu
out
push
ljmp
pusha
out
xor
nop
int
lcall
outsl
gs
sbb
fs
mov
xor
mov
out
ss
pop
cmp
dec
fs
pop
xor
push
lds
pop
pop
mov
lcall
push
jae
push
outsl
arpl
sbb
cli
je
sbb
push
dec
imul
add
ss
push
and
addr16
dec
lret
daa
add
mov
stos
adc
xor
fmuls
into
leave
xchg
pop
fnstenv
and
subb
inc
xor
scas
dec
xchg
jecxz
fisttpl
loope
cmp
test
in
mov
scas
shl
sub
jns
adc
cmp
jo
inc
popf
fidivs
data16
xchg
pop
mull
fwait
dec
leave
or
inc
js
add
out
sub
sbb
sub
orl
fmuls
jmp
sbb
repnz
or
lods
pop
arpl
loope
ljmp
fstps
add
fs
and
lret
mov
jmp
ror
and
xor
ljmp
shll
xor
jmp
push
fidivl
xchg
add
fwait
sahf
call
sbb
fld
rcrb
push
cmpsl
sbb
and
inc
sti
pusha
dec
mov
pop
cmp
inc
pop
cmp
jns
mov
int3
lahf
cmp
ret
push
sti
cld
add
out
nop
testl
mov
mov
ss
cmc
les
out
jnp
mov
mov
std
movsb
inc
in
aas
cmp
clc
dec
dec
and
xlat
add
insl
mov
stc
jo
mov
and
push
xor
movl
mov
inc
sub
mov
ss
hlt
pop
fsubrl
mov
mov
sbb
fistpll
or
testb
or
sub
shl
sub
xor
pop
adc
push
pop
sub
mov
push
rolb
lods
cmp
mov
xor
pushf
dec
jne
push
sub
push
je
or
jge
inc
dec
adc
inc
push
xchg
data16
pop
inc
lcall
jmp
dec
stc
shrb
xchg
lods
adcl
fsts
rcrl
mov
or
out
sbb
loop
inc
pop
cmc
jae
sub
push
in
xorl
or
xchg
inc
jle
mov
sub
mov
scas
notl
je
addl
pop
shrb
inc
inc
pop
cmpl
cmp
leave
add
mov
lds
in
inc
fs
ss
frstor
test
pop
push
jl
add
dec
das
adc
fldenv
xchg
test
mov
iret
dec
and
out
dec
stc
pop
xor
hlt
mov
mov
popa
out
jp
sub
xchg
mov
mov
inc
inc
ljmp
int
popf
mov
push
pop
inc
sbb
pop
cmp
jg
add
lock
adc
jp
mov
push
xchg
rcl
out
nop
push
fldt
fsubl
and
dec
pop
sahf
inc
dec
mov
mov
mov
jmp
dec
fisttpl
or
or
lea
testl
and
enter
mov
imul
or
lods
push
out
push
inc
aaa
les
rolb
sub
les
or
jle
pop
mov
mov
pop
jge
push
cmp
push
cmp
cmp
jbe
push
cmp
dec
push
adc
and
and
addr16
push
xchg
xchg
xchg
imul
mov
xorb
mov
sub
out
scas
ss
lds
fnsave
das
dec
outsl
lock
stos
xor
scas
xor
pop
incb
in
dec
ss
sbb
push
adc
leave
js
stos
insb
sub
imul
ss
adc
push
mov
cmp
sbb
in
and
xor
mov
or
or
jne
push
push
rcrl
daa
stc
addr16
mov
sbb
test
xor
repnz
pop
aas
xchg
call
cld
daa
xor
insl
cli
inc
ret
jnp
cmc
push
rolb
sub
stc
push
or
jecxz
call
orl
lock
ret
sbb
xor
push
cli
cmpsl
rcr
push
and
lcall
dec
ljmp
adc
pusha
inc
mov
pop
ficomps
aas
out
hlt
lret
divl
mov
push
mov
sub
ja
lock
fidivrs
aam
push
gs
xchg
mov
lret
pop
movsl
test
test
es
jp
jne
sub
fstp
adc
stc
ljmp
xchg
push
add
inc
pop
gs
sub
jg
push
sub
cmp
mov
outsl
xchg
das
clc
adc
adc
ja
cld
pushf
sahf
jle
out
xchg
aam
xor
fldcw
cli
int
or
mov
clc
xorb
xchg
cmpsb
xchg
inc
in
popa
loopne
shrl
mov
mov
or
sub
mov
insl
inc
dec
lock
add
sub
xchg
inc
gs
xchg
or
and
std
xchg
icebp
add
pop
mov
mov
mov
imul
and
cmpsl
lcall
loope
cmpsl
xchg
jae
lahf
loope
je
leave
fdivs
sbb
or
jmp
ret
jb
pop
clc
pop
cld
stos
lock
fdivrl
push
cmp
xor
mov
out
out
cmp
xor
imulb
rorl
shlb
cmp
pop
popa
clc
push
hlt
xchg
inc
lahf
cltd
inc
mov
and
sbb
mov
sbb
push
jmp
jno
bound
int3
mov
into
mov
dec
mov
xor
in
cwtl
ljmp
jbe
inc
scas
and
ja
push
int3
loop
dec
xchg
outsl
rcrb
add
mov
cmp
lcall
hlt
xlat
mov
das
mov
jbe
adc
jns
fstps
or
cmp
shlb
aaa
scas
adc
inc
fcmovnbe
and
cmc
cltd
into
loop
shl
jae
mov
dec
add
inc
lea
dec
idivb
inc
cmp
fidivs
jb
andl
cltd
inc
aam
dec
push
iret
cmpsl
lods
into
cmp
ret
adc
or
add
sti
shl
clc
ds
in
push
stos
out
jle
fldcw
stc
negb
mov
add
pop
mov
fnsave
test
push
andl
cmp
call
push
push
sub
xchg
mov
adc
jns
mulb
out
jle
inc
sbb
pop
sbb
and
xchg
mov
cmp
call
sti
pop
jno
add
jb
fadd
repz
push
aam
fidivl
pop
fistps
jmp
jge
xchg
xchg
pop
jle
or
cmp
jecxz
push
mov
ret
pop
pop
fldenv
mov
pop
sub
not
fldt
xchg
inc
cltd
mov
lahf
mov
or
rep
jb
jge
mov
pop
movsb
outsl
and
ja
pop
popl
int
mov
mov
out
imul
push
cmp
ficompl
sbb
inc
fwait
push
add
pop
lahf
pop
lret
jmp
pop
sub
lret
or
jb
testb
or
sub
fwait
in
les
xor
xchg
push
push
mov
dec
rorl
xchg
sub
push
neg
sbb
push
push
enter
pop
das
xchg
and
dec
imul
jns
nop
cmp
dec
inc
add
pushf
jl
outsl
shrb
xchg
aaa
fstpt
sahf
or
cmp
cltd
inc
testl
fdiv
xchg
sahf
pop
loope
inc
int3
mov
push
loope
and
inc
rcrb
mov
aas
dec
adc
les
rcrl
add
mov
jbe
out
inc
push
cs
pop
icebp
ljmp
pop
mul
sub
sahf
incl
push
jmp
cmpsl
out
jle
hlt
mulb
pop
inc
xorb
push
adc
mov
pop
mov
ljmp
ja
cli
mov
sub
cmpsb
pop
add
mov
cld
dec
dec
cli
stos
mov
iret
sub
sbb
cmp
inc
push
add
sbb
lea
frstor
mov
adc
popf
cmpsl
pusha
push
xor
les
push
and
sbb
jnp
enter
mov
and
fstp
or
sbb
or
push
push
sub
push
adc
adc
fwait
shll
rorb
jnp
outsb
mov
jbe
xor
sbb
push
xchg
loope
loop
mov
dec
jecxz
int
pop
jp
or
push
mov
push
add
iret
fidivl
xor
je
ds
clc
add
mov
rcrl
outsl
jecxz
or
gs
jb
ss
xchg
mov
mov
push
or
inc
cmpsl
and
cld
pop
and
out
fdivs
cmpsl
loopne
clc
shll
fnstenv
jge
mov
inc
and
push
sub
cltd
fwait
rep
dec
aam
pusha
xor
mov
mov
sub
cmp
dec
mov
cmp
addr16
inc
cwtl
test
scas
jbe
xor
inc
lcall
call
xchg
push
ret
loope
pop
aam
stc
inc
mov
sbb
rclb
pop
mov
and
stos
push
movsb
jecxz
inc
andl
cld
jae
ljmp
loopne
leave
movsb
xchg
xor
xchg
jle
testb
fstps
sahf
stc
sbb
jno
fisubrl
and
jbe
jno
sbb
xor
daa
movsl
loope
or
lods
inc
add
dec
fadds
cwtl
cmp
pop
ffree
cwtl
mov
xchg
lds
xor
call
sub
daa
jl
mov
fwait
xor
jle
scas
cwtl
sbb
fsts
add
add
jecxz
add
test
push
fcomi
fdivp
shlb
mov
push
jle
test
test
cmp
mov
fdivs
test
jns
or
ret
mov
test
dec
cmp
inc
pop
and
leave
xor
sbb
pusha
ja
cmp
mov
pop
or
mov
mov
push
pop
sbb
jle
aaa
inc
test
sarb
nop
mov
jno
dec
xchg
test
bswap
dec
push
add
pusha
cli
dec
pop
cmpsl
rolb
cmpsl
popf
je
xor
mov
mov
mov
in
nopl
lahf
jecxz
push
or
in
popf
out
add
sbb
pop
in
mov
call
mov
arpl
xchg
jne
enter
es
movsl
pop
mov
sti
push
push
icebp
cmovg
out
clc
inc
xor
loope
or
sbb
out
dec
mov
push
jp
xchg
pop
xchg
repnz
jge
jg
in
adc
movsb
aas
mov
jbe
sahf
js
mov
inc
in
iret
shll
push
cltd
or
in
outsl
sti
inc
incb
aas
scas
inc
shll
push
js
adc
fadds
aam
nop
mov
cmp
jg
aaa
notb
sbb
mov
mov
cmp
addr16
call
leave
or
cmp
mov
inc
mov
or
scas
xchg
lret
push
addl
lea
das
add
stos
ret
cmp
cmpsb
std
outsb
pop
mov
mov
sbb
lcall
inc
pop
inc
cmp
mov
clc
jle
dec
mov
xchg
cs
adc
adc
sbb
jno
loop
xor
push
push
mov
lock
andb
dec
push
xchg
mov
clc
push
cli
out
mov
inc
inc
sub
dec
test
nop
fs
mov
cmp
xor
shll
jg
call
andnps
push
sub
dec
nop
mov
fildll
push
repz
aaa
adc
out
xchg
mov
aaa
ja
adc
int
outsb
xor
leave
pop
xchg
into
push
lods
in
testl
lds
fidivl
add
cltd
xchg
mov
jecxz
jbe
sti
xchg
mov
add
lcall
pushf
insb
sbb
in
out
jb
sbb
mov
cmp
dec
and
adc
mov
fcompl
push
stc
xchg
das
fwait
pop
mulb
or
mov
fnsave
cltd
dec
sub
push
pop
mov
jle
bound
jns
xchg
enter
test
lds
insl
inc
inc
fs
mov
test
cmp
in
push
lret
test
inc
mov
fisubl
jecxz
push
pop
xor
mov
lret
sbb
mov
sub
sbbl
std
jmp
shll
ss
test
fstpt
inc
dec
and
jmp
cmc
das
repnz
or
push
push
cmp
lahf
aam
inc
inc
pop
pop
mov
inc
mov
push
and
out
pop
jo
push
movl
sub
ss
sub
sbb
loopne
pop
das
cmp
addr16
adc
shrb
adc
add
sub
aas
mov
xor
inc
inc
inc
xor
cs
cmpsl
sarl
ljmp
dec
xchg
sub
imul
cltd
ds
mov
add
xor
in
or
stos
mov
out
xor
mov
cmpsl
out
push
lods
and
shrl
cmp
adc
sub
and
icebp
call
jl
addl
daa
out
cmc
dec
cwtl
lret
adc
fisubl
andl
imul
sub
rolb
aaa
cs
xchg
cmp
xor
loope
pop
cmpsl
das
ja
cwtl
mov
gs
add
sbb
sbb
xor
das
xchg
xchg
icebp
fnsave
adc
sbbb
push
push
add
mov
xor
pop
inc
dec
mov
push
mov
xor
scas
pop
dec
mov
lea
mov
clc
cmc
inc
mov
inc
mov
fildl
adc
xchg
out
dec
je
sub
cmp
movb
xchg
dec
xor
jmp
and
pop
jns
mov
jo
lods
cltd
addr16
insb
dec
lock
adc
data16
and
iret
imul
call
and
sub
mov
adcl
rolb
sub
cmc
and
movsl
xlat
call
int3
ja
cwtl
scas
push
pop
and
lret
lods
mov
sbb
jle
nop
push
out
in
out
notb
test
pop
aad
add
je
mov
rcl
dec
cmp
cmp
xchg
out
std
ja
fucomip
inc
and
repz
jecxz
sti
lds
shlb
js
in
push
loop
sub
lcall
xor
jle
jnp
repnz
jge
les
jg
lods
mov
lods
scas
jbe
cltd
mov
iret
imul
jnp
lahf
pop
shlb
push
and
les
cmp
jb
aaa
insl
adc
mov
mov
jmp
jno
je
adc
lock
mov
mov
es
mov
xchg
xlat
scas
decb
add
jl
mov
std
test
sbb
sarb
loop
lea
mov
mov
pushf
pop
xchg
je
popa
and
xchg
repnz
pop
pop
iret
icebp
and
pop
push
in
scas
pop
lock
fcoml
test
in
fsubrs
les
mov
sbb
xchg
pop
mov
pop
movsl
dec
out
mov
adc
pushf
cmp
or
mov
bound
push
xchg
mov
in
xor
inc
jmp
in
stc
push
xlat
push
jecxz
mov
sbb
push
and
shrl
out
mov
fcompp
jo
push
cli
cmp
rcll
ljmp
push
jmp
sbb
and
iret
gs
pop
xchg
repnz
flds
add
lahf
or
push
xor
pop
mov
jo
xor
je
out
jle
adc
push
mov
xchg
pop
cmp
push
and
jae
xchg
push
out
sahf
lock
es
cli
mov
pop
jecxz
and
popa
cmpb
scas
cmp
js
lock
push
arpl
jo
aad
lea
and
adc
mov
or
lock
push
mov
aas
and
pop
out
rclb
je
ficomps
mov
std
ret
popa
out
adc
mov
mov
adc
mov
jmp
mov
mov
loop
stos
mov
xchg
daa
loope
mov
rol
ljmp
pop
or
fcoms
fiadds
sbb
cltd
mov
in
fstpl
push
fildll
lds
push
movsb
cli
xorb
add
or
mov
clc
hlt
pop
adc
push
xor
inc
xor
mov
daa
jb
pop
xchg
pop
sbb
xor
in
xchg
insb
insl
xor
icebp
xor
addr16
mov
inc
sbb
jmp
xor
and
ret
cmp
mov
mov
jbe
add
into
mov
jno
xor
adc
cmpb
sub
pop
addr16
aas
ficoml
push
fsubs
popl
push
scas
test
shl
add
or
add
popf
lds
lahf
ds
outsl
mov
movsb
pushl
loop
js
pop
into
add
jmp
fdivs
imul
mov
xchg
fildl
daa
imul
jae
push
jmp
jb
rorb
fs
fs
std
cltd
mov
js
xchg
adc
or
aas
repnz
out
stos
bound
mov
incb
cmp
or
adc
cmpsb
jp
xchg
xor
shrl
in
imul
out
push
jbe
das
pop
inc
scas
adc
sbb
xor
push
push
push
dec
mov
test
jne
loop
repnz
jno
neg
subb
cli
mov
mov
lcall
cwtl
stos
sub
ret
cld
out
adc
mov
imul
sbb
cwtl
xchg
xchg
push
cmp
push
stos
scas
std
pop
push
inc
jb
jp
in
xor
mov
inc
rol
xor
push
int
add
scas
jb
flds
daa
xorb
push
movsl
adc
imul
inc
popa
movsb
sbb
mov
fcompl
loopne
fstpl
jo
mov
adc
cmp
imul
scas
sti
out
or
scas
xorb
cs
push
sub
cli
imul
mov
xchg
jo
add
cmp
imul
stos
arpl
mov
jnp
pushf
or
dec
test
fnstsw
in
mov
mov
clc
fdivrp
aaa
mov
jbe
cmp
lret
loop,pt
lods
push
das
dec
mov
js
repnz
call
rol
mov
leave
push
push
cmovo
repnz
jge
mov
ja
mov
call
ret
or
and
push
stos
push
cmp
les
xor
sub
ljmp
sub
cmpsl
movsb
xchg
cmp
dec
loop
or
pushf
push
dec
inc
loopne
test
and
repnz
jmp
pop
out
in
or
in
rcrl
sarl
jne
stos
xchg
mov
or
adc
shl
in
jbe
mov
dec
push
xorb
hlt
sub
push
mov
jbe
inc
and
sbb
xor
in
jg
ljmp
and
pop
mov
std
sbb
jge
jle
je
pop
leave
ror
call
sub
mov
jnp
test
inc
ds
mov
add
icebp
jnp
aad
repnz
jle
sahf
jg
push
lahf
xchg
call
xchg
or
add
xor
lods
in
cmpl
pop
inc
mov
mov
xchg
pop
insb
xlat
decl
add
jb
mov
xor
inc
mov
cmp
sbb
sbb
lods
mov
sbb
xchg
cs
scas
or
pusha
idivl
push
dec
and
sub
mov
test
andl
addr16
add
lods
xchg
outsb
cwtl
pop
mov
and
ja
ffree
mov
stos
xchg
jno
push
sbbb
mov
cmp
mov
inc
mov
sub
adc
sbb
xor
jmp
imul
mov
aam
jp
or
dec
adc
into
icebp
mov
es
aad
das
stc
movzwl
push
popf
scas
add
out
shrl
ds
inc
aas
jle
rorb
mov
dec
cli
inc
inc
jmp
js
xor
inc
int3
loopne
rcll
je
bound
popf
cmpsb
aad
mov
movsb
xlat
dec
jmp
hlt
cmp
jae
cmpsb
jle
xchg
into
ror
and
daa
out
push
test
adc
add
out
filds
test
jmp
std
stos
ficoms
mov
cmp
int3
mov
addr16
jecxz
pmaddwd
out
sarl
daa
outsb
sbb
es
fwait
xchg
rcll
cmp
jo
xchg
sub
sbb
dec
and
shrl
sbb
dec
sbb
xor
push
iret
shl
mov
adc
in
sub
test
jecxz
lods
xlat
dec
mov
cmc
xor
lods
popf
ret
decb
decl
mov
push
dec
mov
outsb
jg
nop
add
mov
enter
fdivs
jp
sarb
nop
jmp
push
push
cs
xchg
xchg
test
cmp
cmp
in
mov
imul
pop
cmp
int3
mov
sahf
cmp
ret
jns
inc
sar
xchg
xchg
gs
mov
loop,pn
cmpsl
add
imul
loope
ljmp
adc
imul
movsb
push
out
aad
rorl
cmp
lds
sbb
pop
adc
enter
xchg
outsl
and
pop
testb
push
pop
dec
cwtl
push
out
pop
pop
fwait
mov
ss
pop
pop
stos
xchg
sub
jle
cmp
push
or
and
push
adc
lret
daa
cmc
fbld
cmpb
jl
sbb
dec
pop
push
andb
bound
repz
shrb
add
pop
inc
mov
hlt
and
cmpsb
pop
sub
cmpsb
frstor
gs
cmp
adc
fs
cmp
out
cltd
outsl
adc
mov
ds
mov
sti
jae
rcll
add
push
jns
mov
movsl
aaa
push
fimull
out
xchg
sbb
mov
test
pop
in
push
lret
mov
dec
jo
js
add
xchg
aaa
or
or
lret
mov
and
inc
cmp
fstps
and
mov
cld
fistps
mov
fwait
stos
arpl
lcall
pop
es
dec
sbb
mov
inc
inc
outsb
enter
cmpsb
and
jmp
jno
sbb
mov
xchg
jl
mul
fistps
push
xor
or
pop
loop
or
sub
jmp
cli
cltd
mov
mov
out
mov
dec
inc
lahf
jns
jp
mov
mov
sbb
int
xchg
cltd
sub
imul
idivl
adc
xlat
pushf
jle
mov
notb
or
int
inc
pop
sbb
les
orb
imul
ljmp
jg
xchg
dec
movsl
lods
pop
out
test
sar
cmp
stc
popa
les
movsb
adc
mov
aam
test
aam
fbld
xor
aas
push
push
sahf
aas
lds
add
lods
aam
jecxz
out
mov
or
aaa
lret
cmpsl
push
ficompl
sub
and
mov
adc
mov
mov
fldt
push
sbb
mov
jg
fsubrl
test
mov
or
or
insl
pop
lea
mov
or
mov
pusha
adc
idiv
cltd
pop
sbb
and
or
add
cwtl
jnp
adc
push
out
cmp
aad
pop
mov
clc
mov
dec
mov
popa
dec
movsl
mov
fnstcw
cmp
ds
inc
addr16
pop
mov
mov
out
and
sub
popf
xchg
sub
mov
divb
jae
push
aam
out
and
pushf
push
sub
clc
out
andl
fistpll
popa
mov
lock
and
dec
rolb
mov
mov
int
and
inc
mov
mov
pop
cmpsl
mov
inc
pop
mov
dec
xchg
lds
jnp
scas
and
lea
test
and
inc
adc
into
adc
pop
js
xor
mov
inc
clc
cli
test
loop
jg
inc
jmp
or
incl
add
rcl
lret
dec
loop
sahf
push
jo
adc
mov
inc
sub
mov
rcll
fisubs
hlt
stos
adc
pop
loop
pop
mov
shrb
mov
jg
dec
lea
push
push
pusha
out
leave
int
dec
in
sahf
adc
push
mov
ja
ficompl
add
test
pop
int
sbb
mov
adc
push
cmpsl
lock
jecxz
fst
sbb
cs
lock
mov
das
notl
js
sub
sahf
mov
idivl
mov
fadds
je
inc
push
int
into
mov
cwtl
andb
mov
pop
jmp
les
push
ret
aad
and
dec
add
shrb
roll
jnp
test
dec
xlat
pusha
push
lds
xchg
dec
mov
jg
or
sbb
dec
push
pop
add
stc
cmp
push
dec
xor
and
adc
sbb
pop
xor
test
mov
and
inc
xchg
out
fidivrl
jno
addl
scas
cmc
int3
in
and
jno
add
idivb
lcall
push
iret
sbb
shlb
xchg
mov
pop
lea
lods
pop
mov
pop
insl
fisubl
je
sarl
call
or
imul
mov
arpl
loopne
inc
sbb
clc
xor
cwtl
push
sub
or
out
jno
das
push
pop
pop
add
sub
xor
push
push
jae
les
jb
mov
xchg
imul
adc
in
and
aad
inc
or
lret
push
jl
movsb
xorb
mov
inc
mov
cmpsl
pop
jmp
ret
aas
ss
stc
inc
roll
flds
cmp
iret
mov
lds
divl
js
rcrl
mov
jmp
adc
jge
dec
sub
jmp
outsl
xor
outsl
rorl
sub
inc
shll
popl
movsl
out
mov
and
dec
imul
cmp
sub
movsb
or
mov
in
cli
in
push
push
in
sbb
mov
inc
outsl
sub
pop
adc
sub
into
enter
push
outsb
adc
verr
lock
ja
lea
mov
bound
pushf
jg
int
and
ds
ret
jb
dec
jno
pop
dec
inc
es
sti
jl
cmc
xor
mov
fnstcw
outsl
cmp
pop
rep
sub
mov
sbb
mov
iret
sahf
and
sbb
outsl
cmp
fadds
imul
jp
outsb
pop
xchg
out
pop
fsubr
addr16
les
or
push
fsubl
add
mov
ret
popf
scas
es
adc
in
cmp
sub
cmp
sub
lret
mov
add
dec
imul
stc
push
xchg
mov
or
dec
xorl
xchg
inc
jo
sub
and
inc
xor
movsl
fstl
pop
std
mov
jge
call
xchg
adc
fbld
cmp
xorb
sarl
pop
add
stc
pop
enter
in
pop
sub
aaa
adc
lret
sahf
xor
jp
ja
xchg
jbe
and
add
sbbb
push
icebp
sbb
sbb
push
mov
ror
inc
fisubrl
sbb
loop
mov
lcall
jg
mov
mov
jmp
adc
sbb
xor
aam
xchg
sahf
bound
pop
sub
loopne
mov
test
or
add
iret
mov
fs
mov
movsl
adc
mov
adc
pop
aaa
sbb
xor
inc
pop
test
jecxz
stc
outsl
xchg
jmp
lcall
or
mov
pop
rolb
clc
and
adc
daa
roll
lds
and
je
inc
dec
cmc
mov
dec
push
add
sbb
add
sub
stc
jb
pop
loopne
shr
adc
or
ja
and
inc
add
cmp
jae
xchg
jnp
bnd
stos
arpl
adc
xor
mov
push
xor
mov
dec
aas
push
fdivl
enter
icebp
add
pusha
shll
mov
mov
push
pusha
lock
outsb
popl
aam
cmc
jg
dec
mov
sarl
pop
cmpsb
pop
pop
sbb
data16
sbb
adc
repz
jo
push
lods
nop
pop
inc
jle
add
cmp
outsl
int
popa
imul
sahf
xchg
pop
sbb
ljmp
je
mov
stos
and
inc
and
lcall
jns
loope
mov
inc
repz
clc
mov
jl
pop
fsubr
out
shl
xor
call
mov
ja
ja
shl
int3
add
repnz
or
fbld
add
mov
leave
lods
inc
lds
cld
push
xchg
test
push
xchg
adc
pop
pop
ret
in
lods
pop
mov
sub
sbb
sub
xor
xchg
xchg
arpl
or
ljmp
mov
lods
sbb
daa
int
out
pop
xor
incl
int
cmp
cmp
mov
push
jne
cmp
fnstcw
movb
arpl
in
aad
mov
mov
popa
mov
pop
jbe
jb
imul
imul
hlt
mov
dec
pop
dec
mov
outsb
adc
sub
adc
out
clc
pop
clc
jo
mov
inc
jae
outsb
daa
gs
js
push
dec
xchg
jno
ja
repz
jge
bound
aam
out
xor
inc
movl
jb
add
sbb
sahf
fwait
pop
out
and
int
mov
jecxz
aaa
jmp
push
mov
pusha
loopne
add
repz
rcll
dec
jno
in
mov
stos
lcall
out
in
cmp
xorb
jnp
xor
cmpsl
or
cmc
dec
inc
push
lret
mov
xor
popl
ja
jl
es
dec
sub
cltd
inc
shll
inc
ficomps
jb
nop
jnp
sbbl
cs
xchg
inc
idivl
push
out
sahf
aam
enter
shll
cli
fists
sbb
push
push
pop
mov
dec
cmp
jge
inc
sbb
mov
out
inc
lcall
ljmp
adc
add
repz
add
xchg
mov
lds
jg
loop
movsb
mov
jp
and
addr16
gs
out
dec
icebp
fcomp
mov
xchg
pop
scas
stos
jp
cli
sub
sahf
dec
sbb
cwtl
or
xchg
test
ja
dec
or
sahf
std
fbld
or
jge
aad
add
cld
mov
sub
std
mov
js
rorb
jns
mov
sti
push
add
push
jne
cwtl
adc
mov
popa
jnp
xchg
sbb
pushf
lret
fistpl
adc
fs
mov
sbb
mov
out
xchg
push
neg
adc
jle
lcall
xor
cmp
insb
xor
add
jg
xor
mov
lock
aam
dec
fidivl
xchg
mov
xchg
ja
popa
adc
aam
xchg
cwtl
in
pushl
fnsave
jp
neg
cwtl
push
sbb
and
mov
lock
fstpl
movsb
inc
and
ret
add
fidivrl
cmp
cmp
add
jae
scas
into
xor
xor
jmp
mov
cwtl
xchg
fs
stc
xchg
sbb
pop
nop
inc
xchg
popa
jae
cmp
xor
sub
test
push
inc
xchg
inc
inc
mov
popf
jb
adc
push
icebp
mov
push
jp
mov
and
lods
jge
loopne
fcmovb
fs
sub
pop
xchg
cli
clc
ja
jp
test
jmp
jnp
jecxz
subl
or
mov
idivl
lods
adc
test
mov
mov
bound
xchg
int
loopne
ret
and
shlb
mov
cltd
into
xor
cltd
xchg
pop
cs
in
cmp
push
push
insb
nop
pop
inc
xchg
mov
outsl
enter
jmp
loop
pop
push
fs
jb
jle
xchg
es
cmp
mov
inc
push
and
dec
inc
mov
inc
aas
out
mul
push
inc
pop
inc
or
xchg
les
xor
mov
ret
lret
pop
loope
xchg
push
ljmp
mov
cmp
pop
mov
xchg
in
nop
jecxz
rcll
test
daa
jmp
xchg
mov
mov
cmp
inc
inc
add
cmp
ret
lea
jo
xchg
mov
cmp
iret
movsb
sbb
jns
dec
sub
add
jge
mov
or
xchg
pop
adc
cmp
push
inc
adc
cs
jcxz
xor
data16
mov
bound
int
rol
sbb
cmp
add
test
adc
sbb
mov
decb
adc
rolb
xchg
out
scas
inc
or
mov
test
cmpsl
dec
push
cs
inc
shll
sub
ffree
xchg
dec
adc
mov
mov
sub
shlb
cmp
out
outsl
push
mov
repnz
iret
loopne
rolb
and
das
or
xor
inc
inc
pop
inc
and
sbb
pop
sbb
mov
jo
jmp
stc
push
and
lret
leave
push
ret
sti
jge
add
ja
xor
adc
jb
push
outsb
daa
test
ror
sbbl
inc
fbstp
pop
movsb
lcall
lret
jge
dec
imul
adc
stos
ror
dec
xchg
mov
stos
pop
xchg
loop
push
fistps
sub
xchg
scas
mov
pop
push
add
stc
jmp
out
std
cwtl
cld
lods
sti
call
shl
rcl
mov
fcomps
jp
cli
stos
fistpll
mov
push
mov
mov
lds
popa
sbb
leave
int3
bound
mov
fcompl
cmp
mov
sub
testb
inc
nop
in
incb
xchg
jbe
ljmp
sarb
notrack
sub
push
push
imul
xor
sbb
fsubl
mov
push
add
sbb
loopne
pop
fwait
rolb
xchg
cmp
addr16
ficoms
into
aad
push
jne
gs
clc
adc
push
loope
lock
icebp
push
cwtl
sbb
inc
mov
push
dec
test
push
add
pop
and
pop
imul
pop
pushf
add
js
mov
sbb
inc
fistpl
fadds
jecxz
fdivrl
shrl
insl
dec
rolb
pushf
xor
mov
push
pop
lret
dec
or
icebp
cmpsb
cld
pop
mov
ds
xchg
cmpsl
imul
repnz
xchg
cwtl
cltd
sbb
fldenv
sbb
adc
sti
shrl
enter
jb
jo
pop
test
add
ja
in
add
or
adc
mov
test
mov
movsl
mov
ss
inc
mov
fdivrp
xchg
jo
imul
clc
sub
and
xchg
jg
outsb
and
ja
and
xchg
stc
mov
add
sbb
outsb
jbe
je
jp
lcall
into
ss
mov
out
hlt
jno
pop
mov
cmp
add
scas
add
orb
push
inc
sbb
or
test
dec
mov
mov
roll
mov
adc
lea
pop
add
inc
jl
push
or
jae
mov
nop
dec
or
scas
test
cmp
mov
int3
in
sbb
push
insb
ljmp
jbe
fimull
sbb
aad
or
sub
xor
lret
test
orl
adc
cli
xchg
pusha
and
pop
out
pusha
jg
cmp
int3
dec
mov
mov
xor
ljmp
push
push
lcall
cli
xor
jg
je
push
fwait
inc
mov
dec
mov
pop
hlt
enter
mov
sbbb
cli
das
xor
and
ret
mov
and
ljmp
inc
ret
mov
adc
sti
aam
ds
or
cld
mov
sub
inc
jo
stos
lcall
movsl
pop
push
pop
ret
dec
inc
xchg
lods
push
decl
daa
and
add
mov
dec
in
imul
jnp
or
or
inc
dec
cld
fisubs
and
cwtl
cli
sbbb
sub
aaa
sbb
push
add
mov
sarl
adc
inc
add
xchg
cmp
mov
mul
sub
sub
mov
sbb
icebp
mov
push
xchg
mov
out
out
push
arpl
fsubs
mov
addr16
mov
mov
push
sub
fistps
and
loopne
or
fsubl
shll
cmp
xchg
pushf
push
ds
add
xchg
aaa
mov
test
jecxz
or
mov
mov
pop
lret
xchg
add
pop
xchg
clc
test
lods
in
std
cmpsl
pop
xor
aas
and
inc
or
push
repz
cmpb
push
pop
mov
or
add
dec
cli
jb
out
xorl
push
movl
dec
mov
pusha
outsl
fisubl
pushf
andb
lods
jmp
and
and
push
movsb
loop
push
push
and
aam
jg
jb
arpl
aas
add
loop
add
jp
xor
mov
or
jecxz
loopne
ljmp
push
mov
jecxz
test
out
and
loopne
cli
test
test
adc
push
mov
cmp
jns
add
push
fistpl
arpl
jge,pn
in
cmp
and
in
sbb
jle
out
gs
fdivr
pushf
mov
fwait
int
mov
idiv
out
andb
sub
sub
mov
inc
std
stc
or
neg
outsb
in
movsl
push
bnd
cmp
loopne
out
cmp
and
fsubr
out
dec
dec
ds
dec
loope
inc
or
cmpsb
inc
outsb
int
add
aam
cwtl
or
xor
push
ds
jnp
sub
ror
ffree
fcomps
out
sahf
and
data16
movsb
sahf
repnz
stos
cmpsb
iret
xor
leave
xor
sti
test
iret
mov
add
lcall
insb
mov
and
loope
mov
fldcw
in
adc
push
lret
jbe
cld
outsb
mov
pop
es
arpl
push
sti
mov
dec
in
cmp
inc
stos
adc
icebp
pushf
push
jbe
adcb
sti
mov
push
xor
fiadds
lcall
jnp
aam
outsb
cmp
pop
les
lds
lret
inc
push
repz
mov
call
xor
lods
adc
fldt
test
push
mov
jp
lret
jp
test
and
in
out
xchg
fsubl
pop
bound
pop
jnp
pop
cmp
and
cli
rorl
out
pop
cmp
and
sbb
dec
cmp
dec
loop
add
sub
aas
and
dec
pushf
popa
jno
lock
or
jno
xchg
sbb
stos
inc
cwtl
jbe
loop
sbb
pop
pop
xor
aad
mov
inc
jge
and
mov
push
push
cmp
mov
push
icebp
out
jg
push
inc
lahf
mov
mov
ss
mov
sub
fs
or
inc
xchg
pusha
jp
ret
and
lret
lret
xor
std
sub
aad
add
sub
xchg
jl
es
xchg
outsb
sub
lcall
or
inc
outsb
addl
cmp
sub
push
lret
fadds
push
mov
xor
pop
xchg
dec
fisubl
pop
ret
sbb
inc
xor
fnstenv
lock
adc
mov
mov
in
add
push
jge
leave
cmp
popf
jnp
inc
xchg
inc
rol
fldt
es
int
jae
mov
lret
fisubs
and
in
dec
and
mov
pop
je
mov
ja
lret
loopne
cld
aad
mov
or
cmp
test
adc
dec
out
rcll
pop
ljmp
repz
xlat
mov
mov
ffreep
lahf
or
mov
mov
xor
lods
dec
dec
enter
xor
stc
aad
inc
enter
arpl
lock
ljmp
jge
cmp
sub
shr
jns
into
cmp
testl
ret
lahf
outsl
lea
mov
dec
push
jbe
mov
in
xor
cmpsl
hlt
fyl2x
jne
and
mov
outsb
mov
push
mov
lods
scas
inc
jmp
xor
mov
mov
ret
movsb
fimuls
inc
jmp
cld
int3
jbe
inc
ljmp
sti
adc
or
fcmovnb
shrl
and
pop
inc
sbb
cmp
sub
cs
shll
or
adcb
mov
push
push
mov
dec
sub
les
mov
push
lock
jno
lcall
stos
jp
push
aaa
jg
ja
or
in
imul
je
outsb
xchg
mov
cs
mov
cmpsl
lahf
aas
je
jle
push
aam
push
cmp
mov
and
int3
mov
lds
popf
xchg
rolb
sti
lds
push
shr
xchg
sar
or
movsb
adc
push
nop
mov
sub
push
repz
cmp
lret
aad
imul
mov
xlat
sbb
cmp
push
xchg
sbb
jg
std
ljmp
sbb
mov
cs
cmp
js
pop
mov
push
imul
or
stos
inc
mov
sub
sub
pop
rol
push
mov
cmp
pop
repz
or
mov
js
inc
fists
lods
cmp
inc
add
add
push
imul
or
arpl
cmp
cmp
push
cmpsl
cld
pop
mov
in
push
out
mov
outsb
jbe
daa
and
lock
sbb
aaa
dec
in
xor
ja
jg
xchg
insl
sub
or
arpl
sbb
mov
adc
es
sub
popa
imul
inc
mov
jp
js
sahf
xor
loope
and
dec
scas
pop
stos
shrb
push
test
or
or
popf
dec
mov
fmuls
sbb
hlt
sub
shl
cmp
push
cld
jmp
pop
sbb
add
ja
popf
scas
popa
mov
and
in
jns
roll
cld
jecxz
mov
pop
fistpll
cli
lea
pop
hlt
or
pop
mov
jb
jp
sub
je
imul
mov
aam
popf
mov
enter
mov
xchg
scas
test
mov
mov
lods
mov
mov
in
push
aam
xchg
and
test
ja
push
push
xor
into
mov
mov
xor
adc
and
int3
cmpsb
sbb
decb
ds
push
js
inc
xor
ds
inc
push
mov
mov
imul
ds
cld
fbstp
int
sub
jmp
cltd
and
loopne
stos
xchg
cltd
sub
cmpsl
pop
loop
insb
jo
lret
pop
cltd
icebp
mov
inc
xchg
lods
mov
mov
jae
mov
pop
mov
jnp
push
insl
out
je
cmc
ret
mov
fxch
test
mov
outsl
push
jg
popf
and
fidivs
jmp
cmpsl
imul
jge
jmp
mov
orb
dec
mov
pusha
clc
pop
sahf
mov
test
fwait
mov
sbbb
bnd
jb
loopne
iret
rolb
adc
xor
dec
push
sbb
jmp
pusha
sub
xor
arpl
adc
or
fwait
and
mov
mov
lds
mov
fcmovnu
jno
inc
xchg
roll
int3
pop
jb
in
mov
xor
aaa
mov
adc
mov
mov
push
sahf
aaa
in
or
inc
xor
lds
push
xchg
inc
sar
xchg
stos
outsb
cs
clc
cli
filds
mov
andb
xor
jge
add
xchg
or
in
in
push
fs
xor
imul
movsb
cwtl
nop
daa
or
ret
pop
or
jno
push
mov
mov
icebp
sub
cmp
adc
lods
icebp
ret
and
jecxz
out
popa
xorl
cmp
lahf
jb
and
sbb
imul
cltd
mov
cmp
dec
out
clc
imulb
pop
lds
lods
mov
outsl
int
or
adc
dec
es
push
cli
in
pop
test
test
or
arpl
repz
addr16
nop
daa
movsb
dec
add
push
jecxz
xlat
fistpll
mov
gs
sbb
fisttpl
cmpsb
pushf
ja
out
lret
mov
cli
xor
ljmp
jne
cwtl
stos
cmp
or
rorl
push
mov
cwtl
insb
popf
push
inc
or
add
and
or
sbbb
lcall
popa
cltd
dec
push
rcrl
jno
sub
pop
outsb
lds
mov
lret
push
sbbl
imul
shr
mov
stc
imul
lods
clc
sti
jecxz
lods
leave
leave
xor
test
ja
push
outsb
jbe
cwtl
push
pop
dec
or
jne
iret
and
push
xchg
lods
not
into
mov
or
subb
out
shrb
sbb
xchg
nop
sub
sbbb
sub
add
and
cld
inc
and
push
inc
sub
fnsave
sbb
lret
comiss
je
mov
and
jmp
in
insb
rorb
xchg
mov
mov
ficomps
lahf
sbb
push
pop
pop
out
inc
lahf
pop
sbb
mov
stc
inc
and
shll
sti
or
in
cmpb
cmpsl
je
mulb
ss
xor
aad
xor
mov
popa
jb
cmpsb
cmp
xchg
jnp
insb
into
test
jecxz
repz
xchg
pusha
sbb
and
or
scas
std
pop
mov
cmp
enter
aad
cld
mov
push
mov
inc
iret
or
jo
roll
daa
jno
ficoms
leave
cmp
dec
mov
scas
add
fs
cmc
out
imul
cmpsl
xchg
sbb
cmp
shrb
push
or
mov
dec
lcall
sub
in
dec
fsubs
mov
call
pop
push
fidivl
clc
jge
loopne
xchg
lea
dec
jo
xor
dec
shr
mov
push
movsl
stos
lcall
mov
xlat
push
ljmp
xor
cmpsl
add
sub
repz
and
outsb
pop
sti
lahf
push
fbld
sub
and
add
imul
fcmovnbe
stc
movsb
sbb
sahf
pop
mull
or
xchg
lods
jns
test
jb
repnz
gs
mov
sbb
mov
jne
push
adc
xchg
stos
or
xchg
fcoms
mov
lret
les
enter
popa
imul
out
mov
inc
pusha
add
mov
or
loop
lock
mov
xlat
xor
or
in
push
add
sbb
mov
mov
pop
and
inc
cmp
jmp
cld
jbe
inc
jge
pop
rol
mov
sbb
mov
stos
pop
out
into
dec
flds
call
sbb
mov
call
add
insl
fmuls
test
push
stc
push
ret
imul
dec
push
xchg
xchg
loop
push
jb
xchg
mov
push
jae
pusha
sub
xor
pop
mov
xchg
int3
dec
pop
fmul
aaa
je
mov
push
loope
repnz
or
test
es
jno
xlat
or
imul
xor
mov
xor
leave
sub
movsb
cli
mov
enter
push
jnp
test
sub
xchg
cmpsl
xor
sub
ds
movsb
sbb
jns
mov
mov
add
and
push
cmp
adc
test
jecxz
fiaddl
mov
jge
hlt
rcll
fstpl
movsl
pop
pop
cmp
clc
jns
call
fisubs
mov
scas
dec
enter
rcll
and
mov
xor
push
enter
or
lock
jae
enter
cmp
xchg
cmp
loope
sbb
xor
popf
daa
add
mov
shl
dec
cwtl
cmp
iret
pop
mov
jl
xchg
and
cmpsb
cmpsb
add
cmpsl
cmpsb
ljmp
inc
movsl
jne
leave
cwtl
aad
movsb
lock
out
and
dec
stos
int3
mov
xchg
out
mov
js
pop
push
jne
rclb
jmp
fcomip
lcall
fsubs
adc
push
pusha
xor
lock
aas
xchg
push
adc
adc
mov
in
sahf
push
arpl
dec
inc
fistpll
subl
mov
ret
mov
leave
jnp
test
je
cmpsb
and
jmp
pop
cli
sti
sub
filds
xor
cwtl
pop
in
dec
out
xor
clc
jle
pop
dec
lods
aas
lcall
push
fwait
lods
mov
movsl
aas
push
mov
dec
add
bound
stos
jbe
jns
adc
sub
cltd
mov
sub
popa
icebp
into
cmpsl
les
arpl
and
jle
inc
lret
ret
xchg
xor
shl
or
add
mov
outsl
loop
cld
inc
dec
loope
out
sti
xor
jg
mov
xor
sbb
out
loopne
and
or
add
add
test
xchg
pop
jl
sbb
inc
cwtl
and
outsl
inc
xchg
sar
xchg
lods
mov
xchg
les
cmp
or
test
stos
jmp
mov
mov
cmpsl
xchg
adc
ret
les
into
adc
cmp
inc
xlat
inc
sub
out
jg
dec
ss
or
iret
xchg
add
mov
out
push
xchg
sub
pop
es
icebp
outsl
dec
insb
cli
push
mov
test
outsl
mov
or
mov
addr16
jne
lahf
mov
outsl
mov
scas
clc
and
dec
or
mov
ror
mov
cltd
sub
cmpsb
sub
pop
cmc
leave
sub
and
hlt
xchg
push
mov
ficoms
js
and
push
lods
adc
cmpsb
mov
or
inc
inc
inc
mov
fcompl
in
pop
and
ljmp
xchg
clc
inc
mov
mov
enter
rol
out
push
jmp
ja
call
cmpsl
add
dec
sbb
sbb
pop
xlat
in
mov
jne
vaddss
cmp
adc
jae
movsb
loop
mov
pop
mov
mov
push
pushf
mov
cmp
scas
xlat
mov
stc
push
pop
fsubr
idiv
and
inc
jmp
add
mov
and
pusha
out
lahf
sbb
push
xor
test
cmp
inc
lret
out
inc
loope
mov
inc
xchg
lret
js
adc
cmc
scas
mov
mov
add
pusha
adc
lock
mov
cli
imul
jle
cwtl
call
insb
mov
outsl
fwait
mov
scas
insl
cmc
dec
dec
inc
jl
and
fnstcw
inc
rcl
test
cmc
sar
mov
in
inc
dec
dec
pop
mov
xchg
inc
cli
lds
mov
imul
jle
sti
popa
xchg
int3
or
daa
outsb
rol
mov
cmpsl
in
gs
fdivl
mov
mov
cmp
pushf
inc
bound
push
mov
jle
sub
inc
mov
mov
hlt
repnz
test
fiadds
mov
jae
mov
dec
fld
mov
xor
cmc
hlt
lret
test
inc
adc
fiaddl
mov
lea
adc
mov
cmp
sub
sbb
in
inc
das
insl
js
lea
cmp
and
scas
adc
in
dec
mov
in
push
iret
clc
adc
dec
mov
jno
or
cli
mov
bswap
push
or
imul
iret
push
mov
sti
add
stc
sbb
mov
sti
fstl
push
pop
movsb
pop
push
or
test
out
arpl
pop
mov
dec
std
jge
mov
sub
movsb
push
lret
mov
pushf
test
ja
mov
mov
mov
adc
push
sub
mov
sbb
add
mov
or
mov
mov
mov
adc
stos
xor
or
imul
adc
fwait
push
fs
popf
cmp
lock
sbb
jno
sub
mov
push
xor
ja
push
lret
mov
jl
mov
jbe
lods
mov
aad
dec
call
push
bound
and
mov
pop
sub
jge
inc
mov
das
ds
dec
and
lds
nop
or
add
cltd
lods
popf
add
sbb
rorb
rorl
pop
cwtl
mov
mov
fldl
push
nop
cmp
mov
testl
popa
in
xchg
dec
out
push
lock
push
mov
popa
sub
test
or
es
orl
xor
stos
pop
out
cmp
add
lret
mov
mov
and
and
inc
mov
shlb
mov
pop
sti
inc
mov
inc
test
or
test
xor
xchg
aaa
adc
xchg
jle
shl
mov
scas
push
pop
mov
inc
out
xchg
pop
xchg
pop
rcrb
inc
stc
fld
jl
or
adc
xor
cli
addr16
imul
fimull
adc
je
jo
sub
fnstenv
test
push
cmp
jecxz
mov
addr16
push
mov
aas
dec
aas
movsl
in
mov
fistpl
lock
mov
cmp
sbbl
push
int
push
data16
adc
cmp
mov
into
into
xlat
movsl
fwait
hlt
xor
push
adc
das
cld
inc
or
push
test
pop
repz
mov
push
xchg
push
lea
xor
inc
inc
mov
xlat
mov
cmp
insb
sbb
test
test
adc
repnz
push
in
inc
jmp
fadds
repz
inc
add
add
xchg
iret
jl
mov
and
neg
mov
cltd
or
pop
rcl
inc
outsb
icebp
inc
mov
shrl
dec
cmp
and
cli
popf
clc
dec
jmp
shl
test
adc
outsl
je
fistps
cmp
dec
jb
push
cmc
rorb
rclb
lea
lods
jnp
jmp
xchg
divl
jg
shr
jge
push
test
outsl
aaa
sbb
add
arpl
cmp
in
movl
pusha
jo
stos
mov
loopne
add
add
mov
loope
dec
scas
pop
xchg
push
sbb
lods
into
sub
lock
sbb
cli
lds
push
ss
ja
clc
sbb
sti
add
xor
xchg
stos
cmpsl
sub
jle
je
adc
jg
insl
lods
dec
xor
pusha
xchg
jl
pop
repnz
sti
lea
and
notb
leave
insb
outsl
mov
xchg
xchg
pushf
ret
push
mov
loopne
inc
xchg
int
push
jmp
stc
cs
pop
xchg
pop
lds
icebp
frstor
repnz
lock
lret
jp
push
je
pop
and
cmp
or
mov
ret
addb
and
scas
cmpsl
xor
dec
lods
inc
test
in
cld
xchg
cmpsb
mov
fldt
sbb
test
or
daa
add
mov
pop
sbb
sub
and
test
ret
pop
shlb
cmp
push
add
das
jmp
and
add
fmuls
xchg
cli
lret
mov
mov
mov
lods
mov
lods
adc
add
popf
mov
jecxz
inc
hlt
push
cmp
stos
cmp
stc
enter
call
cmp
cmp
rcrb
mov
pop
mov
popf
std
cli
adc
push
faddl
insb
rcr
mov
inc
lahf
xor
cmp
cmc
jnp
inc
lcall
pop
mov
cs
add
or
dec
aam
sti
cs
addr16
push
mov
inc
pop
add
std
xchg
mov
repnz
add
test
or
or
ret
js
test
sub
test
mov
inc
insl
push
dec
sub
cmp
ja
jge
leave
mov
push
cmp
outsb
fcompl
add
jl
push
rcrb
ds
inc
and
ror
test
fs
pop
loop
data16
push
lds
dec
aas
nop
xlat
xor
adc
movl
mov
pushf
popa
jmp
pop
sbb
mov
dec
sbb
insl
cltd
mov
mov
leave
cmp
push
xlat
fstps
scas
roll
inc
out
push
sub
adc
mov
dec
pop
cmpsb
and
pusha
je
cmpsl
xchg
cmpsb
movsl
sbb
and
cmp
nop
push
pop
xor
les
pop
jge
mov
push
jge
mov
xchg
outsl
mov
test
arpl
mov
mov
lea
fisttps
pusha
and
outsb
dec
lret
addb
xchg
enter
mov
rcrb
mov
jg
mov
mov
out
mov
inc
js
fsubs
and
jb
pop
mov
ljmp
mov
rolb
xchg
std
in
test
adc
jo
inc
in
stos
scas
sbb
loop
push
jnp
loopne
cmp
sti
daa
adc
xchg
scas
repnz
xchg
xor
stos
inc
inc
rcrl
push
or
or
pop
xor
jnp
adc
mov
add
add
iret
cmc
cmp
daa
sti
scas
mov
outsb
outsl
mov
sti
push
add
mov
cli
cmp
ss
jne
pushl
es
and
inc
xchg
dec
and
popf
idivb
sbb
scas
lret
ljmp
xor
data16
fdivrl
push
mov
repnz
mov
stc
or
inc
jnp
xorb
mov
mov
in
fcoml
jno
pop
test
xchg
nop
int
fwait
mov
adc
mov
dec
push
inc
xor
add
mov
add
push
inc
out
imul
push
add
shll
jns,pt
sti
jb
cmp
sub
xor
adc
jae
out
pop
test
sbb
mov
xchg
arpl
outsb
ds
sbb
add
cmp
pop
bound
fldt
inc
call
imul
mov
mov
inc
xlat
lods
mov
mov
setae
jnp
mov
das
pusha
int
rclb
ret
outsb
push
push
mov
cmp
pop
xchg
or
call
mov
in
ficompl
out
mov
lcall
loope
mov
mov
and
mov
sub
and
test
subl
fisttpll
jno
sbb
pop
sbb
pushf
out
inc
push
fstl
push
ffree
mov
mov
jp
iret
xchg
pop
mov
xchg
and
push
cmp
ret
dec
stc
mov
bound
ja
or
decl
adc
daa
push
inc
inc
jecxz
xor
leave
adc
int
or
pop
int3
pop
and
test
das
cmp
adc
push
cli
imulb
add
fnstsw
xorl
jge
mov
lods
outsl
std
jl
rcl
and
jo
fwait
orb
mov
add
and
js
pushf
call
add
lret
dec
loopne
sub
mov
push
pop
hlt
sahf
push
mov
cmp
lea
sub
fldcw
ret
mov
dec
xchg
addb
cmc
lods
jnp
outsl
jge
sub
in
sarb
in
push
ljmp
outsl
dec
inc
dec
mov
mov
pop
pop
fcoml
imul
push
mov
mov
lds
and
rcr
mov
ret
sub
sti
add
pop
inc
in
sbb
push
iret
mov
xchg
adc
sub
fnstsw
cmp
push
pop
xor
mov
inc
push
imul
stos
dec
shrl
pop
or
sahf
out
xlat
inc
xchg
sbbl
pop
mov
lock
movsb
pop
flds
les
or
cmpsb
and
adc
adc
or
sbb
test
aad
jmp
mov
outsl
and
adc
sbb
mov
mov
adc
mov
das
add
sbb
scas
in
xor
data16
test
jmp
adc
xlat
jnp
into
mov
mov
in
movsl
push
lcall
sbb
mov
iret
fldt
or
stc
cmp
hlt
mull
dec
loope
rcll
sbb
lea
test
push
sbb
hlt
imul
fbstp
mov
stos
insl
verw
sbb
add
lea
cmp
pop
cmc
rorl
push
add
std
nop
mov
or
dec
or
ss
shr
nop
sub
fst
out
into
push
int
pushf
int3
and
mov
insb
imul
fadds
fs
or
xchg
ret
sbb
mull
loopne
sbb
psllq
sub
jp
in
inc
jle
nop
sbb
lock
das
push
lret
adc
into
pop
scas
imulb
test
mov
add
mov
sub
xor
push
or
inc
out
int3
testb
sbb
cmp
std
inc
pop
mov
mov
mov
jae
jp
mov
push
int3
loop
xlat
imul
call
cmpsb
rorb
pop
adc
sub
lahf
xchg
pop
ljmp
xor
out
ror
push
add
and
stos
addr16
popa
xor
stc
xor
pusha
jge
imul
adc
push
and
rclb
loopne
jb
js
in
mov
outsl
dec
mov
cs
cmp
dec
leave
push
and
sbb
out
sti
arpl
out
mov
add
mov
cld
jno
dec
mov
fwait
into
scas
mov
mov
sub
sub
xor
pop
ja
leave
jmp
xor
out
nop
pop
mov
fldl
les
adc
repnz
mov
mov
xchg
add
sub
and
mov
xlat
mov
jns
and
jecxz
test
xlat
out
pop
ja
jno
mov
sarl
js
jg
sub
ja
rolb
jae
pop
xor
adc
xchg
popa
jne
lods
lods
add
mov
xor
and
orb
icebp
xchg
loope
hlt
and
daa
sub
push
and
push
scas
out
xor
jl
inc
xor
out
je
je
inc
inc
sahf
hlt
jbe
stos
push
sbb
push
xchg
insb
cwtl
test
mov
add
jl
lahf
xor
popa
mov
pushf
sub
push
hlt
or
push
or
sbb
mov
or
jnp
outsb
ffreep
mov
xchg
pusha
out
sahf
mov
stos
hlt
popa
add
xchg
test
inc
pop
stc
xchg
enter
scas
and
mov
and
dec
cmova
xlat
xor
mov
ss
pop
mov
addps
mov
xchg
inc
shrl
call
sbb
dec
fdivrl
sub
jecxz
push
cmpsb
aas
inc
add
mov
mov
xlat
adc
pop
xor
hlt
movsl
fwait
testb
adc
xor
insl
cmp
mov
lods
outsl
out
loop
mov
subb
or
loopne
cltd
jge
jo
push
in
mov
push
fwait
jne
mov
jnp
enter
jecxz
mov
mov
mov
fwait
xor
xchg
stc
xchg
test
dec
leave
xlat
std
shrb
add
mov
mov
mov
stc
sbb
pop
cmp
add
dec
cld
jo
xchg
nop
sbb
jp
dec
inc
rorl
jbe
lea
mov
dec
fistps
test
xchg
leave
pop
lds
or
xchg
ret
sbb
ja
inc
js
rorb
add
xchg
fbstp
push
pop
int
sbb
adc
fcmovu
mov
xchg
sub
inc
out
popa
push
fwait
mov
cmp
stos
xchg
aas
inc
pop
push
fisubrl
and
push
mov
xchg
cli
cs
lock
push
hlt
cwtl
jns
dec
jecxz
mov
lods
fldcw
dec
lock
jle
add
pop
sti
movsl
add
sub
andl
ret
push
inc
scas
fnsave
nop
mov
jecxz
xchg
fisubs
xchg
sbbl
lret
loopne
imul
pop
push
or
xor
pushf
xor
or
into
test
mov
out
test
fstps
out
mov
jl
or
dec
scas
add
mov
pop
inc
dec
xchg
fisttpll
jmp
cmp
lret
add
mov
ljmp
out
out
inc
pop
mov
mov
stc
xlat
sbb
cmpsb
push
push
push
adc
es
lods
sub
xchg
jb
stc
lock
lds
and
cmc
cmp
push
push
jno
or
sbb
mov
adc
xchg
out
popa
cltd
mov
pop
mov
cmp
or
sti
in
dec
das
xchg
sti
cld
fcmove
mov
mov
mov
inc
push
jne
adc
cmp
xor
jg
adc
sub
mov
sbbb
sbb
out
push
cmpb
rep
adc
push
in
mov
pop
xchg
insb
mov
data16
inc
adc
test
sbb
add
call
fsub
inc
out
mov
fcoml
xor
dec
inc
or
mov
pop
repnz
sub
ret
push
sub
and
lcall
insl
inc
xchg
jecxz
test
and
sub
lods
ss
dec
xor
lcall
and
stos
in
aaa
sbb
add
xor
std
dec
pop
pop
xor
imul
pop
jge
mov
push
push
loop
mov
insb
xchg
dec
adc
cmp
jne
mov
jle
mov
lahf
out
jge
iret
dec
dec
into
stos
cwtl
into
add
add
sub
and
std
jbe
rcrb
loopne
lds
aas
sbb
adcb
pop
es
mov
outsb
sarb
cmpsl
sbb
push
cmc
xor
adc
inc
cltd
loope
sbb
xor
mov
and
cmp
fwait
sbb
pop
or
int3
adc
arpl
sub
jg
pop
outsl
push
leave
and
int
mov
stos
jge
mov
sub
jg
adc
or
iret
loope
and
mov
xchg
mov
xlat
mulb
iret
cmpsb
mov
push
push
push
inc
gs
mov
pop
fstl
push
xchg
fnsave
mov
mov
inc
sub
and
push
pusha
xchg
xchg
pusha
mov
and
xchg
add
jbe
lret
push
fnstcw
ja
dec
insb
cmpsb
ds
mov
jo
mov
add
sub
add
in
lret
or
leave
adc
enter
stos
outsb
pop
or
mov
jno
loope
xchg
movsb
or
inc
xchg
cmp
and
leave
pop
jno
shr
daa
dec
and
jb
lods
int3
dec
sub
out
stos
lret
push
push
inc
dec
pop
pop
inc
xchg
lahf
sti
aam
dec
insl
nop
addb
and
xchg
das
pminsw
gs
lret
xchg
out
push
mov
inc
push
and
pop
sahf
push
roll
xor
jns
push
inc
sub
js
sub
es
sub
bound
std
test
insl
test
inc
std
xlat
inc
rclb
std
das
in
cmpps
punpckhwd
imul
js
jp
add
push
movsb
mov
sti
aas
jne
mov
add
gs
mulb
icebp
adc
cld
adc
adc
mov
repz
scas
scas
repz
cmp
in
loop
stos
fwait
push
popf
lods
je
aas
in
jno
sub
jge
std
testb
pop
jecxz
enter
add
movsl
jle
pop
jb
mov
add
fcoms
inc
movsl
mov
mov
test
cmp
or
std
mov
dec
imul
imul
popf
cli
xor
sbb
push
sbb
cltd
in
sbb
enter
int3
xor
outsb
in
pushf
cmp
mov
dec
cmp
or
xchg
sub
xchg
cld
test
mov
push
jmp
xlat
dec
jg
and
loopne
dec
mov
sbb
mov
sub
push
and
pop
push
pop
lret
mov
and
sbb
aaa
out
and
inc
or
xor
jbe
dec
push
test
or
in
or
push
push
orb
ror
test
adc
ja
push
push
loopne
push
xchg
cmpsl
loopne
or
pop
or
cmc
jo
lods
int3
mov
ret
jae
or
xchg
add
outsb
mov
ret
add
xor
cmp
loope
mov
xor
sbb
mov
mov
jne
in
adc
and
mov
lret
test
and
adc
xchg
inc
ljmp
orb
leave
inc
rol
mov
movsb
sti
push
pop
pop
adc
pop
or
lea
xchg
mov
fsub
push
adc
mov
repnz
cld
sub
mov
lcall
fisubrs
cmc
movsl
push
lds
sarl
in
mov
mov
sub
out
outsb
daa
pop
lods
cmp
jecxz
inc
clc
mov
rorb
cmovbe
fidivrs
adc
aas
adc
mov
mov
ljmp
sarl
stos
push
sub
repnz
mov
les
add
loop
sub
pop
inc
lret
inc
sti
and
xor
das
jb
pop
cmp
cmpxchg
ret
mov
mov
inc
fsubrl
adc
sub
shrl
mov
xor
sub
push
jl
jae
xor
aad
out
jg
out
adc
pop
jbe
mov
fcomip
xchg
call
ljmp
fidivrl
int3
mov
or
orb
bound
jae
pop
in
dec
or
std
cwtl
jnp
jne
outsb
pop
push
test
das
adc
sbb
scas
adcl
or
outsb
repz
mov
inc
xchg
or
lret
jg
into
inc
rcrb
adc
cmp
movsl
movsb
loopne
imul
scas
adc
leave
and
cmpsb
push
xchg
cmp
sbb
lcall
bound
aad
sub
sub
gs
fincstp
push
mov
jno
and
mov
ret
dec
dec
movsb
std
and
fcomps
cltd
xor
jmp
pushf
aas
push
pop
sub
lods
enter
add
mov
pusha
dec
ret
enter
add
mov
je
sub
or
mov
sbb
jnp
xchg
pop
les
loopne
and
lods
fidivs
out
jb
add
mov
test
push
in
cmpsl
jns
push
xchg
xchg
pop
or
cmp
leave
pop
jl
mov
pop
mulb
mov
popf
pop
clc
cmp
dec
sbb
sti
rorl
xor
addr16
repz
jmp
dec
hlt
lock
iret
push
out
testb
pop
popa
push
scas
aam
data16
mov
xor
adcb
add
sub
mov
xchg
inc
xor
push
lds
mov
add
push
mov
mov
ss
mov
pop
mov
cmp
mov
das
hlt
jl
xor
add
out
push
push
dec
cmpsl
or
fs
in
gs
mov
cmpsl
jge
stos
lods
mov
jno
add
mov
sub
inc
sub
jge
push
daa
push
addr16
and
mov
and
pushf
jo
dec
je
push
cld
into
push
xchg
fcomp
or
lods
push
and
mov
fdivs
sar
rcl
mov
adc
imul
testl
sbb
repnz
repnz
push
cmp
cmp
xlat
dec
repz
mov
pop
jnp
ja
cmpl
fadd
mov
popf
in
scas
or
fdivr
inc
dec
inc
add
btc
cmp
add
lods
call
fsincos
sbb
addr16
xchg
pusha
pop
lret
shrb
pop
xchg
nop
mov
iret
shll
imulb
and
xor
insb
rolb
mov
repz
testb
lcall
mov
leave
push
stos
mov
mov
popa
cwtl
jne
mov
js
jno
adc
adcl
in
ds
aam
cmc
xor
mov
add
mov
test
test
dec
imull
inc
pop
dec
mov
pop
pusha
jo
mov
jmp
push
add
fisubrl
lock
stc
and
int3
js
adc
mov
adc
rolb
loope
push
or
int3
dec
pop
add
loop
push
cmp
fsubrl
jp
out
call
jo
mov
movsl
in
xlat
lods
iret
jbe
jbe
xorb
add
xor
cmp
clc
mov
int3
test
cld
fnstcw
enter
cmpsb
jns
lock
mov
fsubrl
push
inc
popf
subl
inc
mov
adc
es
push
sub
testl
mov
xor
xchg
mov
mov
shl
nop
cmp
popf
adc
mov
push
dec
inc
pop
in
out
xor
dec
xor
in
inc
inc
test
mov
jp
cltd
stc
movsl
pop
dec
inc
push
fdivr
jno
shll
mov
xor
mov
jl
dec
cltd
loopne
shrb
mov
sbb
pop
jecxz
fdivl
clc
mov
cs
shlb
xchg
mov
jo
in
or
push
leave
ja
outsb
pop
clc
lcall
addb
movsb
out
jae
das
out
mov
dec
into
sar
fisttpll
call
jl
fstps
jnp
sub
into
fildll
test
cli
fs
cmp
xchg
sarl
push
jb
inc
addl
pop
ret
aad
mov
sahf
adc
andb
rclb
out
mov
mov
int3
imul
rcrb
rcll
mov
push
mov
and
divl
xor
jb
jp
push
sbb
cltd
loopne
inc
inc
push
jl
gs
sub
dec
fnstsw
aaa
leave
xor
stos
sarl
imul
insl
pop
sarb
mov
sbb
jge
mov
or
xchg
sbb
hlt
sbb
sbb
xchg
cmp
sbb
xchg
loope
and
cmp
loopne
lods
pop
push
mov
xchg
sbb
js
imul
push
addr16
popl
dec
mov
push
xchg
mov
outsb
inc
test
lods
sub
out
cmp
fiaddl
sub
cltd
push
fidivrl
jbe
or
aam
xor
sbb
fdivrl
sbb
xchg
ds
and
ja
push
je
cmp
jns
or
add
or
roll
aas
movsl
lret
js
mov
test
repnz
mov
mov
jecxz
xor
jle
cmpsb
push
sub
mov
imul
stos
stos
aaa
lds
add
xor
push
cmpsb
js
icebp
out
sbb
xchg
push
adc
imul
mov
cmp
xor
jg
mov
xor
push
nop
push
push
add
sbb
shrl
jo
scas
addr16
lea
dec
jne
cmp
fsincos
mov
cmc
lahf
stos
jl
mov
movsl
fs
jne
test
mov
xchg
ss
jl
dec
in
adc
xor
xorb
div
jo
xorb
mov
jbe
repz
pop
pusha
fwait
jno
sbb
jp
pusha
shll
cmpsb
push
test
dec
stc
jnp
mov
ret
pusha
mov
rep
sub
das
add
xor
ror
imul
mov
sub
mov
fsubp
adc
scas
xchg
imul
jle
dec
clc
sbb
mov
fistpl
callw
repnz
adc
mov
nop
sub
xor
in
push
cli
loopne
fildl
mov
out
xor
stc
les
scas
leave
roll
fldenv
imul
and
ffree
lcall
ret
jne
daa
cli
push
call
popf
movsb
sub
mov
jae
mov
mov
es
movsb
pop
push
inc
testb
bound
sub
fwait
xchg
mov
jne
pushf
add
and
nop
hlt
fisubs
fcoms
cmp
mov
movsl
shrb
nop
stc
cld
xchg
mulb
in
out
jae
imul
mov
mov
xchg
dec
ja
mov
fs
push
stc
xchg
outsb
icebp
pop
sub
inc
jmp
and
pop
xchg
sbb
nop
pushf
xor
out
dec
pop
dec
sub
sbb
xchg
cmpsb
lds
add
int
mov
lcall
mov
in
lds
stos
push
shll
dec
mov
xchg
adc
clc
add
int
test
xchg
jb
lret
call
sub
test
scas
inc
mov
sbb
cltd
pushf
add
pushf
mov
inc
push
and
shlb
insl
pop
sarl
lods
in
out
sbb
sbb
sub
and
cmp
sub
sbb
mov
js
mov
in
mov
fisubl
dec
adc
pop
inc
jmp
addr16
retw
std
repnz
cmpsb
int
add
out
bound
test
fisttpll
call
push
or
xchg
and
sub
sub
mov
dec
scas
sbb
inc
sub
mov
enter
jns
push
cld
mov
or
test
sti
dec
mov
inc
mov
mov
je
decl
stc
lcall
lds
push
js
sbb
cmp
mov
lea
sub
ja
pop
mov
scas
sti
push
push
cmp
xor
shlb
xchg
ret
xchg
jne
cld
or
es
rol
adc
cmpsl
adc
sub
in
push
jecxz
rcrb
es
je
sub
or
daa
int3
stos
pop
push
stos
adc
insl
mov
xchg
sub
imul
inc
pop
mov
adc
jp
push
icebp
iret
inc
repnz
aad
cmp
inc
enter
add
add
mov
push
xor
add
add
addb
sbb
mov
lahf
sub
adc
jg
jae
add
arpl
call
mov
dec
test
pop
cmpsb
dec
inc
adc
shll
sbb
lds
cs
mov
xor
lahf
pop
mov
pushf
cmp
xchg
cmpb
negl
xor
ja
insb
mov
jae
xchg
sub
repnz
push
dec
mov
mov
inc
sub
inc
add
push
xchg
jbe
inc
test
dec
mov
iret
or
or
bndldx
dec
sahf
sub
push
sbb
inc
or
mov
adc
inc
inc
cltd
mov
ja
pop
arpl
adc
jl
in
sub
insl
jae
hlt
pop
fwait
pop
jp
or
push
lret
lahf
ffree
ficomps
mov
xor
sbbl
or
xchg
xor
adc
outsl
dec
aas
aam
pop
cltd
mov
jge
push
arpl
loop
push
cmpsb
jecxz
pushf
sub
outsb
imul
jg
clc
and
jo
lcall
xlat
sub
call
ds
or
int
fisttpl
stos
cmp
push
fcoml
jnp
cmpsl
cmp
sahf
jns
out
iret
ficomps
jae
xorl
cmp
inc
push
push
lds
sub
sbb
imul
fdiv
bound
sahf
imul
mov
mov
pop
xor
mov
push
fidivrs
mov
js
mov
pusha
int
sarl
aam
sub
iret
push
lcall
ja
daa
jge
push
dec
outsb
xor
push
pop
arpl
mov
xchg
aam
push
pop
out
out
in
mov
jmp
rcrl
fs
lcall
xchg
adc
pop
insb
jmp
insl
stos
add
sub
sti
outsl
jb
test
push
lods
push
test
rclb
pop
mov
sub
dec
or
ja
test
int3
adc
nop
fmull
fildll
out
push
lret
stc
xchg
xchg
outsl
and
cmp
popf
faddl
test
loope
sub
insl
push
sbb
xorl
fwait
loope
insb
lcall
jne
push
mov
push
mov
mov
lds
adc
push
movsl
test
das
or
inc
or
ljmp
add
sahf
xchg
call
cmc
test
xchg
dec
jp
sub
es
in
dec
movsl
test
jg
jg
out
xlat
lret
rcrl
or
sub
ds
sti
jp
ret
mov
test
xchg
dec
arpl
cmp
pop
sub
xchg
hlt
cmpsb
pop
and
sbb
sbb
pop
popf
je
push
decb
test
dec
loope
dec
dec
int
sahf
mov
addr16
into
push
xor
lods
jno
adc
lods
cltd
mov
aad
mov
stc
popa
sbb
xchg
inc
test
xchg
mov
cmp
or
lret
fmul
add
es
add
inc
fsubs
adc
mov
sbb
xchg
mov
leave
sbbl
cs
fs
and
leave
std
in
je
mov
dec
adc
fbld
loope
dec
xchg
or
xchg
push
cmp
cmp
popf
or
scas
cmc
cltd
pop
sub
cmp
jae
adc
sub
xchg
push
cmp
mov
xchg
std
pop
cli
push
icebp
mov
movsl
jecxz
or
lods
sub
mov
sar
dec
stos
fs
sbb
or
rcrl
mov
push
xchg
sub
ret
xchg
mov
in
inc
pop
rep
inc
push
iret
fwait
in
lret
dec
pop
sti
rolb
inc
add
or
mov
push
out
push
out
clc
fisubl
scas
jge
out
in
imul
lock
push
mov
inc
mov
data16
mov
mov
scas
shrb
mov
nop
add
jmp
ffreep
add
dec
inc
stos
sub
inc
hlt
mov
and
mov
push
pop
adc
mov
jge
jbe
rclb
inc
sbb
sbb
dec
nop
and
pop
aas
stc
jne
or
dec
and
pop
push
loop
jmp
sbb
dec
mov
sub
mov
and
das
push
adc
push
jae
leave
xchg
mov
test
lahf
sub
in
and
jno
cli
inc
lds
xor
pusha
cltd
in
mov
ret
sbb
cmp
test
adc
or
mov
popa
mov
fnsave
into
arpl
cmp
dec
clc
dec
out
add
mov
ss
out
or
pop
imul
dec
mov
inc
and
or
mov
dec
pusha
arpl
fcoms
lods
ljmp
xor
in
xor
rcr
jge
xchg
or
mov
es
lods
cmp
clc
fsubs
inc
mov
mul
add
mov
push
repnz
push
fisttps
mov
sub
xchg
mov
dec
xchg
or
adc
fisubl
mov
inc
inc
outsb
jmp
jmp
push
lods
inc
stos
dec
xlat
pop
das
fidivs
mov
decl
jo,pn
insl
shl
rcl
xchg
push
out
ret
sbb
sub
mov
out
int3
out
mov
push
sub
xor
dec
push
push
push
ja
and
cmpsb
loope
movsl
jns
jge
fsubl
fsts
fs
sub
dec
sbb
fcompl
into
jle
scas
sub
sub
ret
icebp
pop
sub
mov
and
testb
mov
shrb
jae
int
sub
pop
not
xor
daa
test
pop
cmp
outsb
fdiv
cltd
xchg
mov
jl
test
in
cwtl
and
out
jb
mov
outsb
out
xchg
test
int3
xor
mov
or
lods
mov
mov
call
mov
mov
pop
lods
or
iret
imul
sbb
shl
sbb
ret
adc
test
push
inc
subl
outsl
scas
push
mov
shl
add
push
repnz
adc
pop
push
mov
pop
mov
inc
inc
pop
mov
sub
inc
jo
in
or
add
jae
jbe
push
jae
cmpsl
xor
and
bound
sub
and
pop
out
mov
dec
mov
and
sub
add
mov
lcall
icebp
xchg
notb
mov
xor
aad
mov
ret
addl
cltd
imul
mov
push
in
in
xchg
jmp
cmpl
fdiv
cmp
dec
mov
shl
inc
sbb
stos
repnz
loopne
daa
xchg
push
inc
mov
fst
jmp
mov
test
xchg
enter
push
mov
inc
mov
jp
das
mov
out
add
pushl
add
mov
shl
popa
jle
aaa
sub
ret
inc
xor
cs
lret
jl
cmpb
sbb
aaa
adc
loop
push
mov
aam
ds
lcall
adc
lea
and
and
and
outsb
repnz
mov
mov
mov
jmp
cmpsl
mov
jae
daa
add
jecxz
dec
stc
xchg
stc
cmp
mov
sbb
icebp
outsl
or
ja
popa
mov
push
out
mov
xchg
iret
sub
mov
arpl
nop
inc
movsb
insl
jp
lock
xchg
dec
push
mov
xor
dec
pop
pop
outsb
mov
mov
sbb
and
cmc
sbb
clc
xchg
inc
notl
sbb
sbb
cmpsb
dec
inc
mov
xchg
mov
mov
adc
push
pop
add
sahf
pop
lret
in
add
inc
add
adc
add
ret
lods
imul
push
cld
sbb
jnp
popa
mov
xlat
mov
pusha
cltd
cwtl
inc
sub
notb
test
jbe
je
and
cs
xlat
pop
cmp
test
jb
xor
imul
push
push
aaa
jne
pop
xchg
cmp
lds
adc
push
outsl
jo
cmc
mov
shlb
pop
arpl
pop
jmp
dec
push
cmpsl
adc
js
sbb
inc
jmp
lret
mov
insl
xorb
mov
rolb
and
lret
jecxz
fistl
adc
jp
lret
jbe
xchg
sbb
push
jae
daa
int3
clc
pop
rcll
dec
or
int3
sbb
adc
int
aas
clc
sub
aam
xchg
out
imul
xchg
xor
aaa
daa
mov
loopne
mov
imul
pmullw
pushf
iret
cmp
cmp
hlt
adcl
lds
push
pop
cmpsb
pusha
pop
sarb
js
xchg
dec
pop
pushf
mov
sub
xchg
and
lea
sti
and
jbe
sub
int
jge
in
push
add
inc
inc
dec
mov
adc
ljmp
mov
push
inc
or
fs
mov
mov
fnstcw
xchg
push
shrl
or
insb
cmp
arpl
mov
mov
pop
rcll
ret
xchg
dec
sahf
xchg
pusha
add
in
adc
ja
dec
sub
call
fldenv
push
mov
jmp
xchg
int3
call
pop
rol
movsb
xchg
repnz
out
aad
repnz
jbe
mov
rclb
xchg
fs
or
lds
xchg
and
inc
mov
adc
xchg
cld
push
adc
or
mov
mov
push
add
int3
out
jg
or
add
push
xchg
or
inc
xchg
and
pop
std
pop
cli
mov
or
test
fdiv
repz
in
loopne
int
sti
pop
and
cmp
mov
cmp
lods
ss
cmc
jge
mov
add
xor
orl
mov
lods
pop
adc
mov
ficoml
mov
and
sub
and
lea
int3
mov
or
je
sbb
mov
pop
movsb
shll
les
fs
sarb
mov
movl
inc
repz
or
test
add
sub
mov
nop
mov
or
pop
push
jecxz
cmp
push
mov
loopne
js
add
xchg
cmc
sub
addr16
pop
rcrl
ret
negl
push
lock
ficomps
add
cmp
mov
dec
and
or
jne
inc
les
pushf
cmp
insl
cwtl
mov
test
pop
pop
fiaddl
pop
fidivrl
adc
add
ss
mov
xor
cs
decb
imul
mov
inc
push
mov
icebp
cmp
loop
jno
push
xchg
or
dec
fldl
fstpl
mov
lea
aad
push
clc
stc
mov
out
xchg
rclb
repnz
dec
lods
lret
mov
lahf
ffree
stos
lcall
stos
add
adc
mov
test
int3
jle
mov
inc
mov
dec
jge
cmp
hlt
cs
cli
roll
add
loope
adc
push
test
and
int
cmp
js
cwtl
xchg
xchg
sahf
insl
mov
inc
jno
out
ret
adc
sub
mov
dec
ja
repz
cwtl
popa
test
sub
cli
dec
push
rcrb
clc
mov
icebp
and
sub
inc
cli
cmp
and
fisubl
cmp
mov
fisubs
lret
cmpsl
cmp
scas
sbb
iret
lret
enter
into
in
xchg
sarb
daa
pop
mov
cmp
ljmp
and
mov
and
testl
xchg
mov
or
push
and
sub
fimuls
mov
inc
lret
stos
jg
push
xor
fdivs
or
lock
pusha
adc
mov
xor
aam
inc
fnsave
push
mov
repnz
pop
cld
aam
imull
jle,pn
shrl
add
adc
fdivs
mov
lods
xor
push
push
and
daa
pop
push
or
inc
in
add
mov
mov
add
fwait
out
out
xor
adc
jno
push
push
add
mov
popf
add
addr16
addb
mov
in
fwait
jle
cltd
call
xchg
aaa
ljmp
cmp
jbe
rcrl
aas
adc
push
xor
in
std
int3
jnp
mov
pop
bswap
jp
or
inc
inc
adc
jb
jne
imul
fs
int
daa
push
sub
cmp
sub
adc
and
mov
and
jp
ret
xchg
divl
loop
xchg
cmp
pushw
lcall
leave
subl
jle
ds
sub
gs
test
mov
faddp
nop
mov
clc
xchg
add
notb
xor
mov
xchg
repnz
cmpsb
push
clc
jo
push
insb
test
adc
imul
mov
pop
sbb
es
pop
ret
rcrb
adc
pop
sub
jno
pop
add
xor
adc
mov
pop
pop
popa
mov
movsb
iret
mov
jmp
mov
mov
gs
cmp
cmp
insl
pop
notl
lds
add
jp
pop
in
push
out
mov
lret
push
and
loopne
in
mov
sbb
imul
popf
shrb
pop
stos
loop
xchg
in
jmp
cmc
sub
mov
shll
scas
int
and
shll
call
mov
cli
add
or
into
pop
push
mov
bound
movsb
inc
mov
adc
sub
sti
std
fsubrs
aas
mov
cmp
rorb
call
xchg
pop
std
fs
adc
cwtl
cmp
and
xchg
pop
and
lcall
xchg
cmpsb
inc
nop
jle
xchg
sbb
push
sbb
fs
ficoml
xchg
sbb
addr16
xlat
jae
movsl
push
movsb
and
jp
out
mov
into
sub
and
cs
xchg
data16
dec
or
cmpb
inc
or
jg
jns
dec
xor
movsb
or
mov
adc
cs
jge
inc
cmp
sbb
cmpsl
mov
mov
add
sub
dec
cli
lret
fsubrl
pop
aam
in
ljmp
xlat
jl
jbe
and
lea
and
jo
xor
dec
ljmp
push
lds
push
mov
sarb
xchg
and
out
inc
sbb
cmp
dec
xchg
inc
das
adc
add
aad
lods
out
idiv
ret
outsl
clc
aaa
push
cmp
and
imul
pop
gs
xor
ficompl
push
test
test
pop
xchg
lock
ds
mov
mov
insl
xchg
insb
push
aad
insl
xchg
pop
adc
and
cmc
mov
xor
dec
pop
and
int
adc
xchg
sub
lds
xchg
out
jge
mov
stos
lret
gs
sbb
fs
cs
adcb
lods
push
pop
ljmp
cmp
push
fs
jge
enter
pushf
lods
insl
test
jmp
and
add
jb
push
fs
xor
cmpb
repnz
mov
inc
mov
orb
mov
sarl
je
xchg
loop
imul
aas
xorps
sbb
jb
push
pop
mov
lock
push
mov
sbb
cmp
movsb
mov
int
movsb
pushf
cs
cmpsl
and
jno
xchg
pop
xor
pop
add
movl
dec
mov
dec
mov
or
cmp
gs
mov
rcl
rol
testl
pushf
cmp
into
sub
test
in
shll
lods
cltd
subb
inc
xchg
out
out
jae
fldcw
xor
rcll
das
push
cld
or
rcrl
fs
pop
lret
ljmp
leave
push
aaa
sub
bound
ds
and
repnz
sub
inc
outsb
mov
jecxz
ds
sahf
pop
or
cs
sarb
aam
out
xlat
xchg
mov
mov
jb
sbb
sub
in
data16
dec
es
loope
cmp
xchg
enter
stc
pop
shrl
cli
fdivrl
bound
imul
movsb
or
aad
jg
mov
inc
mov
int
xchg
arpl
add
dec
jb
push
adc
icebp
out
imul
cwtl
pop
lds
sub
mov
stos
mov
mov
jmp
js
cmp
xchg
ret
mov
or
dec
outsl
test
or
notb
jg
es
sbb
pop
mov
xchg
lcall
and
inc
hlt
xchg
test
movsb
pop
add
je
xchg
aad
inc
xchg
cld
fidivs
xor
repz
pop
xor
push
xchg
pop
sub
jbe
cmp
arpl
sub
aas
mov
xchg
mov
mov
loop
aaa
mov
das
hlt
inc
call
sbb
jno
sbb
adc
pop
into
sub
out
std
movsb
or
js
inc
jle
or
inc
outsb
sbb
mov
push
or
mov
loopne
jno
sub
inc
out
pop
jl
scas
cmp
outsl
rcll
jmp
outsl
lods
aaa
push
pop
fcoms
push
and
adc
dec
jle
shl
sub
fstl
enter
or
jns
insl
mov
sub
lret
add
add
mov
ja
rorb
jno
push
imul
into
scas
inc
inc
pushf
adc
jp
icebp
lods
jns
jbe
xor
mov
mov
xor
mov
inc
adc
lahf
fisubl
lds
inc
cmp
mov
xchg
cmp
xor
xor
mov
jecxz
repnz
or
lcall
xchg
sub
pop
cld
jg
jmp
jns
mov
xchg
add
andl
sbb
neg
call
in
ret
in
cmpl
loop
pop
xchg
cmp
popa
adc
out
daa
test
xchg
dec
mov
syscall
inc
stc
sti
add
sbb
jb
addb
mov
fbld
sub
pusha
jns
push
mov
cld
lock
je
jae
data16
stos
jl
cmp
jne
enter
movsl
fidivs
add
push
aaa
nop
dec
das
out
lahf
sbb
sbb
lahf
xlat
sbb
pop
dec
adc
das
push
inc
paddw
or
rcrl
ds
les
adc
icebp
xchg
dec
xchg
pusha
add
jb
scas
call
jbe
cmp
cld
sbb
add
jmp
sbb
pop
push
orl
jmp
js
mov
nop
out
rorl
lahf
jae
sub
mov
xchg
shll
fcmovnu
mov
or
pop
lods
or
prefetch
or
enter
inc
push
sbb
xchg
jne
cwtl
fwait
lods
xchg
je
call
adc
fstl
arpl
xor
icebp
das
je
cmp
xor
pop
sbb
xor
cwtl
and
mov
scas
push
jae
xlat
inc
lea
ss
cmp
pop
cmp
xor
or
or
int
imul
pop
cmc
cli
mov
push
cmp
adc
jb
stos
push
lret
push
jle,pt
fistpll
mov
imul
out
test
leave
clc
sbb
pushf
ja
xor
and
inc
fcmovb
xchg
mov
jne
popf
mov
xchg
testl
dec
jecxz
push
les
cli
jae
jns
scas
dec
test
dec
addr16
xor
and
fwait
sahf
sbb
fs
add
subb
mov
loopne
nop
inc
nop
cmp
mov
ljmp
sbb
and
jb
lock
shll
addr16
or
pop
mov
loop
sbbb
jo
test
sub
cld
jle
aaa
mov
push
movsl
int3
jg,pn
lcall
pop
loop
jne
xlat
fwait
inc
ds
sbb
ljmp
add
sub
cmp
or
adc
push
xor
decb
add
cmpsb
ret
negl
fidivrl
lret
test
adc
lahf
fcompl
int
mov
push
mov
movsl
pop
nop
pop
mov
xchg
testb
xor
jae
jge
ds
mov
jns
sub
jne
jp
movsl
sahf
clc
je
push
cmp
xor
xlat
movsb
cmp
stos
sub
cld
js
add
jno
push
int
or
xchg
scas
xchg
xor
xor
std
xchg
dec
inc
adc
push
das
mov
outsb
push
test
add
push
mov
ds
sbb
int3
cmpsl
push
cwtl
xor
out
sbb
sub
jne
push
mov
jne
scas
je
insb
dec
out
out
inc
int
dec
sub
xchg
mov
das
pop
inc
mov
sub
jecxz
rcrb
shrb
and
hlt
cmp
xchg
adc
xchg
popa
ljmp
cmc
adc
jmp
ss
jle
inc
xchg
stc
mov
inc
jmp
or
sub
xchg
cwtl
xor
push
out
jmp
mov
cmp
mov
mov
push
xchg
daa
mov
rorl
fwait
xchg
dec
dec
push
vpcomud
pop
cmp
sar
xchg
adc
mov
push
mov
adc
xor
hlt
in
mov
addb
lods
stc
xor
xchg
lahf
jmp
popa
add
xchg
ja
negl
inc
adc
loope
or
loope
sub
and
dec
and
movsl
test
mov
pop
inc
mov
bound
push
movsb
loopne
push
add
push
test
or
in
rcl
mov
xchg
cmp
rolb
pop
inc
aas
push
or
lcall
fiaddl
sbb
push
jmp
mov
insl
clc
iret
sub
sbb
mov
mov
mov
icebp
testl
rcrl
xchg
cli
jne
into
sub
mov
mov
add
sub
stos
test
ret
in
pop
div
fisubrl
stc
jb
loop
addr16
xchg
lea
cs
ret
mov
rcrb
mov
arpl
fstps
loope
cld
fidivs
or
mov
sarl
mov
ja
sbb
and
pop
push
jbe
popf
fbld
push
push
in
out
repnz
xchg
jle
xchg
sub
sub
inc
dec
repz
shl
into
push
cmp
jg
and
dec
or
xor
jbe
fcom
lcall
mov
adc
pop
cld
sub
cli
sar
mov
push
stos
sti
jns
cmpsb
mov
inc
daa
xlat
cltd
push
pushf
cmp
test
scas
jbe
xchg
in
cs
lcall
xor
mov
cmp
inc
repz
addr16
pop
pop
cmp
mov
and
je
mov
inc
sbb
cmpsb
das
into
fcomi
fistpll
inc
ret
jle
dec
sbb
adc
jmp
ja
mov
push
negb
or
test
mov
xor
sar
xorb
aad
movsb
adc
xchg
xlat
sti
stos
out
clc
fsts
cltd
mov
jg
sub
fs
cmp
dec
addr16
push
jns
mov
cwtl
jne
shl
dec
into
or
sub
push
mov
iret
and
test
cmp
jp
es
stos
shll
aam
arpl
or
xor
test
insl
or
dec
and
repz
sbb
movsl
sub
fisubs
pop
out
mov
mov
iret
std
dec
mov
in
pushf
push
imul
push
pop
xchg
shlb
and
xchg
fidivrl
outsb
and
fisubrs
push
imul
push
mov
pop
mov
ss
lods
int
cwtl
ljmp
mov
add
dec
jg
imul
adc
js
decl
cli
pusha
cmpsb
dec
fldt
mov
fildl
movsb
dec
arpl
ljmp
in
jg
xor
jae
mov
jge
push
jp
sbb
adc
jmp
mov
mov
into
bound
cwtl
pushf
pop
leave
or
dec
xor
out
inc
add
adc
fists
and
mov
jb
dec
jne
push
bound
in
out
cmp
es
adc
ret
mov
and
sti
lea
cmp
test
imul
lods
cmpsl
je
enter
cmpsl
shrl
dec
icebp
xchg
mov
mov
rclb
enter
push
push
ret
xchg
in
out
inc
scas
ffree
int3
notl
sahf
sub
repnz
daa
mov
pushf
mov
outsb
ret
sub
sahf
mov
orl
loopne
data16
jne
push
stos
aaa
xchg
int3
dec
data16
add
jl
mov
out
fnstsw
pop
sbb
test
and
cmpsl
mul
push
cmc
ss
call
push
sub
cltd
adc
outsl
jle
jg
shl
sbb
pop
scas
xchg
scas
adc
loope
ds
pop
test
std
aad
ds
adc
cwtl
and
push
push
xlat
mov
dec
add
mov
jge
jnp
aam
sub
aad
fimuls
cmp
mov
xor
enter
cmp
in
fs
push
jmp
adc
dec
mov
mov
push
add
cmp
push
in
fistl
sub
dec
lock
dec
dec
inc
movsl
das
add
cmp
out
cmp
shrb
dec
rol
pop
adc
mov
jbe
fldt
sub
mov
pop
ret
add
movsb
and
jbe
arpl
mov
in
repz
in
xor
mov
repnz
mov
call
sub
testb
add
popf
add
outsb
cmp
mov
aas
and
add
cli
fldt
xchg
test
shlb
mov
push
dec
cs
mov
ljmp
jg
or
xor
into
mov
or
cmp
sbb
sbb
sti
inc
repz
xor
sbb
fisubrl
call
int
xchg
add
loope
pop
sub
pop
xchg
or
mov
mov
dec
mov
mov
rorb
je
sub
popa
int3
testl
shr
hlt
loopne
mov
or
add
mov
xchg
lret
aaa
sahf
popa
dec
pop
mov
cmp
mov
clc
fidivs
shl
xor
jp
mov
add
in
rcrb
and
stos
imul
mov
fisttpl
jl
cs
aas
call
jge
gs
or
lret
int3
cmpsb
enter
add
lret
push
pop
aad
repnz
xchg
rcrl
jg
int
divb
idivb
data16
mov
mov
aas
test
out
add
mov
cmp
test
and
iret
daa
int
sar
mov
mov
push
fcoml
loope
daa
repnz
xchg
push
mov
nop
lods
loop
add
outsl
adc
rolb
push
out
and
fwait
jecxz
cmp
es
aad
test
xchg
ljmp
jae
inc
adc
pop
xor
mov
repnz
add
out
mov
call
pop
addb
sub
enter
daa
push
test
rolb
mov
mov
imul
negb
push
sahf
push
pop
mov
xlat
sub
cltd
aad
imul
mov
addr16
rcll
and
sbb
gs
out
mov
lcall
mov
stos
stc
sahf
ja
dec
add
hlt
in
sbb
jb
mov
mov
data16
test
fs
or
pushf
push
pop
pop
aaa
dec
and
pop
mov
jecxz
sub
andl
and
mov
push
dec
cmp
rcr
mov
test
in
dec
out
ret
sbb
rdpmc
out
mov
fimull
mov
imul
pop
sbb
sti
cmp
pop
stos
mov
xor
push
sub
pop
or
es
andl
adcb
leave
push
lret
jnp
push
xchg
push
sbb
dec
fs
jns
jge
push
sti
add
mov
fisubs
jb
lock
and
xlat
bound
pop
int
lret
and
cmpsl
les
pushf
mov
popa
ret
inc
enter
nop
js
dec
out
arpl
xor
out
push
mov
pushf
int
ljmp
sub
in
lds
shr
fwait
test
dec
lods
ja
bound
mov
jno
in
mov
in
push
outsl
push
sub
jne
clc
pop
fidivrl
push
pop
testl
hlt
inc
popf
xchg
sbb
leave
call
or
notb
or
loopne
in
xor
mov
inc
cmp
lock
adc
cmp
ret
ret
and
jmp
cmpsb
sub
adc
cmp
imul
jbe
gs
cwtl
cwtl
jmp
sub
xor
clc
and
cmpsl
pop
and
pop
mov
or
cmpb
cmp
dec
mov
push
fcompl
cmp
or
dec
jnp
sub
adc
xor
adc
test
imul
inc
inc
adc
int3
rcrl
jle
repnz
lahf
test
push
popa
lcall
test
xor
mov
jg
sbb
push
xchg
dec
std
adc
leave
test
cld
jne
xlat
shlb
fbld
in
fimuls
jge
lods
ljmp
adc
clc
aas
xchg
scas
es
mov
js
mov
ds
call
cltd
xchg
xchg
jbe
push
sbb
es
lods
dec
icebp
inc
pop
mov
pop
mov
enter
push
adc
addr16
roll
jp
inc
dec
cli
xor
mov
push
dec
shlb
mov
aad
add
ja
jecxz
cmc
ss
dec
jns
cmp
add
rcr
incl
movsb
mov
sbb
jno
cld
mov
loopne
int
aam
cwtl
and
fcoml
lods
mov
test
mov
aad
mov
pushf
xor
aas
jecxz
call
cmp
scas
mov
xor
dec
insb
xor
xchg
testl
cmpsl
cli
in
cwtl
xor
aam
sti
pop
rcrl
inc
cmp
mov
add
je
cmp
cmc
jne
jbe
fsubs
push
jne
add
jno
push
daa
ja
iret
gs
xor
jnp
int3
leave
xchg
pop
sbb
cmp
hlt
notb
cs
icebp
stos
mov
jae
and
push
lret
push
or
sub
add
xor
cli
xor
fmuls
clc
push
xchg
mov
clc
out
dec
shlb
inc
mov
mov
imul
mov
mov
ret
inc
fistps
dec
lds
movsb
mov
mov
sbb
ja
or
fcoms
inc
scas
pop
enter
movsb
stc
stos
and
rol
stc
or
cmc
pop
aam
iret
jl
mov
lcall
stos
jge
mov
fdivrs
jmp
xchg
jge
ss
dec
inc
mov
imul
or
imul
in
and
inc
mov
int
pop
repz
or
rcr
jb
daa
ljmp
in
sbbl
repz
test
and
stc
lahf
ljmp
push
push
rcll
or
leave
add
fidivl
push
hlt
cmp
jmp
push
adc
or
pop
jmp
mov
pop
jnp
sub
xchg
add
lea
xchg
inc
stos
push
sub
into
or
insb
int
pop
push
inc
mov
std
movsl
adc
sub
xchg
push
aaa
jns
adc
xchg
dec
inc
mov
stos
outsb
or
pusha
adc
and
jmp
inc
jns
inc
xchg
ljmp
cli
or
cmp
mov
jne
jnp
stos
sbbl
outsb
and
das
into
rcrl
lods
dec
sub
pop
outsb
repz
adc
jae
fadds
xchg
jns
sub
and
sbb
cwtl
out
mov
insl
xchg
xchg
or
xor
and
jge
pushf
jae
test
adc
pop
sbb
out
cli
icebp
lahf
pop
dec
adc
sarb
gs
pop
jle
push
movl
iret
xor
fdivr
lods
inc
inc
add
loope
je
and
cmp
xor
cmp
lds
or
sbbl
mov
sbb
and
ret
repnz
adc
inc
mov
mov
pop
out
sub
in
sar
cltd
jne
sub
shlb
and
test
mov
or
test
xor
pop
pop
xchg
xchg
mov
push
decl
inc
mov
sbb
jmp
mov
cwtl
sub
sahf
sbb
or
jecxz
or
adc
popf
adc
enter
shll
sahf
scas
cs
or
pushf
es
mov
jl
int3
sbb
idiv
xor
sbbb
notb
and
sub
mov
imul
mov
je
xor
movsb
lods
sbb
xchg
inc
xchg
lock
mov
insl
xchg
sub
push
sbb
cmp
mov
sub
xchg
dec
mov
cmpsl
gs
adc
push
push
fnstcw
xchg
jecxz
rorl
loope
pushf
inc
jae
lods
adcl
icebp
psubb
push
or
movsl
clc
mov
xchg
and
sti
sub
add
xor
inc
test
rorb
mov
jne
mov
outsb
sbb
int
jno
mov
lds
icebp
out
popa
test
aam
or
in
ja
fstpt
in
inc
sbb
mov
test
aaa
scas
cltd
mov
push
rcl
jle
push
pop
int
jne
sub
jl
or
cmp
adcl
jae
adc
leave
pop
movd
sbb
outsb
xor
ret
pusha
sbb
movsl
cmp
xlat
shlb
xchg
pop
aam
pop
mov
arpl
test
int
idivl
sub
pop
out
sarl
das
or
or
push
syscall
insb
xlat
shrb
cmp
and
adc
jns
xchg
xor
inc
xor
out
adc
dec
imul
or
and
lea
sub
push
adc
addr16
es
jns
adc
test
jecxz
pusha
mov
mov
data16
pop
mov
jnp
imul
repz
insl
lock
popa
inc
in
sub
adc
test
scas
test
clc
inc
cli
or
aad
loopne
mov
or
or
int
adc
cmp
aaa
adc
test
adc
cmp
and
in
mov
inc
sbb
aas
xchg
das
jle
ljmp
rol
cmp
inc
stos
mov
mov
cmp
pop
testl
cmp
repz
or
mov
jle
and
stos
sub
inc
sub
ljmp
pop
fndisi(8087
mov
jns
adc
sub
fstp
dec
mov
shl
es
call
inc
cmp
cmp
push
hlt
dec
inc
jo
pop
in
mov
dec
dec
fcmove
inc
pop
fnstenv
lods
sub
outsl
lret
push
xchg
iret
mov
add
sti
pop
mov
jecxz
pop
es
pop
lods
xlat
push
movsl
xor
jp
notb
jbe
pop
shlb
push
ds
adc
sar
stos
cmp
data16
mov
nop
lret
or
mov
xlat
ds
cli
and
mov
jg
ret
rorb
mov
push
std
mov
inc
dec
sub
jecxz
in
ficomps
or
mov
int
insb
sbbl
loope
scas
aad
in
xchg
loop
movsl
adc
jo
idivl
pop
xchg
ret
pop
pop
dec
push
mov
push
adc
ja
cmp
xchg
loope
aam
iret
sub
inc
in
rcrb
jae
jb
pop
shll
fstpl
sub
ss
gs
push
lds
sbb
std
testb
lods
mov
mov
mov
cmc
dec
inc
je
scas
jl
xor
dec
mov
jnp
loopne
mov
xchg
sti
dec
les
adc
clc
ret
add
enter
mov
adc
sbb
sub
jb
dec
sahf
xchg
jge
imul
in
icebp
movsl
ret
xchg
fistl
add
mov
inc
mov
xchg
dec
mov
jg
sbb
mov
arpl
cwtl
inc
pop
mov
or
xchg
pusha
sbb
call
dec
insb
jae
pop
push
aam
out
push
stc
loope
scas
jns
sbb
mov
sbb
andb
cwtl
imul
and
pop
dec
andl
test
dec
sub
adc
int3
xchg
jecxz
lret
repz
jns
cmp
sti
jg
and
insl
daa
stos
movsb
push
mov
adc
scas
lods
push
test
das
jp
adc
or
push
mov
adc
mov
or
das
lret
or
cli
push
mov
mov
leave
movsb
outsb
aam
push
dec
pop
js
insb
into
cmpb
lods
fcomi
mov
cmpsl
xor
insl
inc
fdivs
xchg
out
xchg
aas
movb
hlt
push
dec
mov
gs
sbbb
sub
rclb
xor
ret
push
mov
arpl
pop
pop
xchg
xchg
sbb
cmc
sub
mov
repz
ret
inc
xchg
add
push
call
mov
xor
out
aam
cwtl
fs
adcb
pop
pop
xchg
xor
adcl
mov
call
sub
pop
nop
sbb
add
fs
mov
mov
out
or
test
insb
test
repnz
mov
jno
cmpsl
cmpsl
mov
dec
mov
push
pop
rcll
mov
vpaddusw
int3
bound
ja
mov
xchg
mov
xchg
es
jb
aam
cltd
clc
push
xor
xor
leave
fdivl
iret
lods
cmp
fdivs
lret
or
repnz
out
sarl
clc
dec
in
popa
adc
pop
or
insb
roll
mov
mov
sahf
testb
jmp
ljmp
in
les
jge,pn
inc
lods
ret
add
push
push
sub
gs
sub
push
mov
push
xor
lret
pop
jne
mov
lods
jecxz
mov
push
push
ss
ret
cld
lcall
loop
mov
adc
ljmp
push
gs
mov
dec
popa
add
xchg
add
dec
pop
pop
adc
or
xor
cmpsl
int3
iret
dec
jae
imul
ror
add
ret
adc
dec
jle
cmp
repnz
loop
int
mov
roll
xor
cmp
in
cmp
cmp
pop
jo
cwtl
sar
mov
push
idivl
popf
imul
mov
push
or
shl
pop
divb
adc
sub
cmp
es
insl
repz
mov
sbb
lcall
ja
rorl
sub
in
stos
push
mov
das
loope
sbb
mov
add
push
aaa
js
rcl
outsl
outsl
repnz
fsub
popa
mov
leave
lret
out
ljmp
mov
xor
xchg
add
leave
jae
rcr
pop
loop
sub
xchg
fiaddl
ljmp
pop
outsb
mov
enter
push
jmp
jne
out
repnz
pushf
popf
pop
mov
push
xor
flds
jnp
leave
mov
push
out
fcmovb
sbbb
push
and
mov
sbb
inc
sub
xor
push
pusha
bnd
pushf
movsb
lcall
and
loope
test
pop
adc
out
test
stos
push
adc
jae
pop
mov
fidivl
xchg
inc
or
rorl
dec
scas
les
dec
adc
aad
lret
push
xchg
cltd
push
xchg
shlb
mov
xor
mov
sbb
je
push
std
cmc
pop
xchg
int
das
inc
add
cmp
adc
dec
mov
out
jno
cmp
xor
pop
std
loopne
xchg
cmp
loop
push
call
lea
fildll
gs
dec
sub
test
push
sub
dec
scas
sub
xor
pop
jnp
jecxz
mov
ds
imul
test
subl
popf
aad
stos
aam
in
out
xor
fcoms
cmpb
and
pop
int
jae
test
mov
dec
push
jnp
jg
xchg
xor
and
fisttps
pop
les
mov
dec
mov
mov
push
and
arpl
int
fdivrs
mov
insb
mov
mov
xchg
cmpsl
cmp
lods
fdiv
subb
cmp
leave
ljmp
or
pushf
dec
push
cmp
outsl
loope
sti
mov
fldl
cmp
xor
dec
in
add
out
pusha
mov
add
inc
adc
add
jb
push
aad
shll
pop
cmp
out
pushl
pop
jb
insl
lods
gs
dec
mov
and
pop
push
loop
imul
test
ficoml
push
push
or
fstpl
sbb
imul
xchg
push
xchg
or
in
push
hlt
lods
loop
mov
pop
jmp
stos
hlt
or
mov
arpl
or
and
stos
rorl
les
pusha
imul
je
adc
sub
rcll
fucomi
jge
adc
dec
dec
adc
xchg
mov
mov
sub
loope
cmp
mov
xor
fwait
aam
push
xchg
aad
test
lods
cmp
out
inc
pop
mov
loopne
mov
inc
sbb
ror
cmp
jmp
sub
lods
std
arpl
scas
sbb
mov
ficompl
mov
and
adc
in
jne
ret
dec
fcoms
cwtl
clc
push
into
lcall
add
fwait
and
push
xor
pop
cmpsb
movl
stos
sbb
jle
jns
fldcw
adc
clc
and
cmp
aas
push
cmp
cmp
xor
mov
shrb
enter
sbb
and
dec
lea
jae
and
xchg
test
hlt
out
shlb
push
adc
xchg
pushf
pop
push
mov
push
sub
mov
arpl
addl
and
shrb
push
inc
push
xor
add
dec
scas
test
adc
mov
jne
lds
inc
mov
or
js
out
out
xor
pusha
add
imul
adcl
cmp
fistl
pop
cmp
pop
imul
movsb
daa
dec
aam
push
std
push
js
jle
sub
and
addr16
rcrb
and
push
cmpsb
adc
pop
aam
push
inc
pop
movsl
repnz
cmpsb
and
adc
adc
sbb
add
cmp
icebp
mov
mov
aam
sbb
sbb
jne
xor
lods
hlt
xchg
lcall
and
cmp
fistpll
insl
lcall
test
cli
mov
outsb
fisubl
ljmp
cmp
add
outsb
mulb
movsb
stc
fdivr
lods
xchg
mov
and
icebp
loop
sub
ljmp
adc
sub
cmpsl
pop
imul
add
lret
push
xchg
rclb
jae
and
inc
sahf
insb
sbb
inc
outsb
mov
sbb
jnp
repnz
mov
test
test
aaa
insb
stos
or
mov
sti
mov
sub
movsb
push
lcall
and
pop
ljmp
dec
incl
pop
jbe
push
xor
mov
add
mov
out
and
outsl
xor
mov
xchg
jo
add
int
cmp
push
pop
ljmp
mov
lds
shll
imul
cmp
inc
xor
pop
out
addr16
pop
mov
mov
std
sub
std
fnstcw
sti
push
jbe
and
repnz
lret
mov
cmp
icebp
scas
cltd
sahf
in
fcmovne
jecxz
lahf
fdivrl
jp
cli
int
clc
sub
mov
js,pn
cmpl
push
pop
aas
in
pusha
mov
jb
pop
loopne
jno
add
inc
push
sub
and
testb
mov
in
sbb
dec
stc
lea
sahf
adc
push
pop
cwtl
or
fistps
mov
int
jb
stos
jle
dec
adc
or
sahf
stos
jg
sub
subb
and
push
xchg
ljmp
jb
mov
and
sbb
fidivrs
fmull
lcall
int
mov
jge
mov
xchg
shrl
cwtl
sbb
mov
pop
mov
jge
ret
or
js
dec
mov
xor
jne
add
mov
sbb
jg
push
test
rcr
aas
inc
sti
sqrtps
lock
mov
je
jbe
clc
scas
and
and
lahf
es
iret
test
loopne
in
mov
dec
pop
inc
cld
lea
cmp
cmc
dec
outsl
or
imul
sarb
mov
stos
adc
addr16
pop
pop
scas
std
popf
mov
mov
clc
dec
incb
hlt
adc
movsl
stc
pop
add
dec
shrl
sbb
les
int3
mov
sub
outsb
imul
sbb
push
adc
jl
sbb
fdivrs
aam
js
nop
out
call
fdivl
mov
lahf
insl
dec
cmp
or
insl
mov
ret
repnz
data16
fwait
cmp
test
mov
cli
xorl
and
xchg
aaa
testl
sarl
je
fs
testb
sahf
lcall
jle
mov
dec
rcll
lods
daa
xor
mov
push
inc
call
add
lock
push
clc
subb
stos
xor
pushf
jp
ljmp
xchg
mov
jge
loope
mov
xchg
jmp
jp
sub
rcr
sub
mov
pop
test
pop
mulb
inc
mov
sarl
add
dec
pop
pop
stos
sbb
jmp
inc
push
mov
addr16
xor
sub
ds
ret
add
jns
jne
sub
and
stc
ret
or
or
mov
xchg
cmp
and
dec
lods
lahf
mov
dec
pop
dec
lcall
test
dec
es
mov
shlb
mov
mov
dec
out
daa
pop
lahf
pushf
push
fcmovbe
cld
adc
pusha
stos
mov
or
test
es
mov
insb
in
ljmp
xchg
nop
xchg
pop
cwtl
scas
rorb
imul
aad
push
push
pop
mov
into
mov
ret
bound
dec
pop
jae
loope
cld
add
mov
outsl
enter
cmp
adc
fists
stc
out
fwait
xchg
cmpsb
mov
mov
dec
movsl
push
test
jmp
cmp
shll
std
call
push
fs
xchg
sub
popf
xchg
fcoms
mov
inc
aas
sbb
mov
push
mov
rol
ss
jmp
loope
adc
xchg
xchg
xchg
loop
ret
in
mov
in
daa
jl
mov
cmp
push
gs
test
sbb
or
mov
cmp
sub
push
mov
jns
add
fisubrs
daa
xchg
dec
fucomip
pop
sub
ret
imul
xchg
stos
jbe
enter
and
mov
jbe
insb
getsec
or
stos
bound
jno
out
add
lds
xchg
ret
lret
fisttps
xchg
mov
push
fwait
mov
andl
ret
push
cmpsl
xor
imull
and
imul
or
loop
xor
loope
jle
push
sarl
out
xchg
loopne
dec
mov
pop
push
cltd
ds
dec
loop
lahf
fimull
adc
pusha
mov
add
shrb
pop
cmp
adcl
cltd
and
out
lret
into
mov
cltd
sbb
add
adc
jl
test
scas
cmovnp
xor
push
or
mov
cld
icebp
sbb
adc
xorl
adc
xor
es
test
aad
gs
rorl
inc
xor
aam
push
iret
dec
mulb
cwtl
inc
test
stos
js
adc
inc
shlb
pop
adc
jbe
sbb
cs
rcrb
dec
ret
xchg
aad
rclb
xchg
jmp
fucomi
pop
push
popf
lods
bsf
lea
xchg
ss
xchg
js
call
pop
mov
xchg
mov
cmp
jo
inc
inc
sub
jnp
xor
or
inc
push
pop
xor
inc
shrl
fdivr
pop
je
pop
sub
stos
inc
mov
mov
push
hlt
sbb
sub
shl
movsl
mov
inc
xor
jmp
xchg
test
sti
stc
pop
or
add
insb
sbb
sahf
jmp
pop
dec
jnp
mov
das
aam
int
lea
movb
xor
mov
jecxz
insb
dec
pusha
jmp
das
sbb
mov
jo
xor
and
xlat
in
lcall
addl
mov
pop
mov
and
xchg
mov
loop
popa
mov
jnp
add
push
cmp
cli
fcomip
jno
std
leave
add
mov
scas
mov
out
sub
mov
pop
inc
xor
dec
lret
mov
dec
jnp
jl
stos
in
adc
shrb
das
pop
push
in
outsl
jne
in
sub
push
sbb
lret
cli
fistl
daa
js
fstps
shrl
mov
push
push
aaa
mov
nop
lods
gs
and
xchg
jnp
rcrl
sub
shrl
mov
mov
or
xchg
pop
mov
test
cli
ror
pop
les
inc
js
mov
sub
lcall
ficoml
ds
xor
repz
push
pop
xlat
mov
nop
inc
movsl
sub
je
in
add
repz
xlat
sub
xchg
out
jnp
xchg
dec
aas
cwtl
adc
sarb
sub
movsl
push
and
or
mov
jmp
cld
and
ja
add
sub
cmp
push
mov
ret
fwait
push
fwait
jae
xchg
sbb
inc
aaa
test
push
cltd
pop
popf
mov
dec
scas
xchg
or
xchg
push
xchg
mov
push
leave
clc
push
xchg
in
add
jg
leave
cmpsl
mov
cmp
push
xor
into
lods
loopne
in
lods
and
flds
push
jbe
cs
and
insl
adc
loopne
orl
icebp
inc
je
es
cwtl
test
test
cmc
inc
and
mov
outsb
je
lret
mov
xchg
ret
xchg
stos
add
xor
iret
adc
mov
cmp
into
sti
mov
push
inc
xor
or
mov
insl
ja
stos
xchg
out
outsb
iret
pop
imul
xor
mov
sbb
in
push
leave
shl
in
cmp
notb
gs
scas
scas
ret
shlb
loope
xor
out
sub
push
jecxz
gs
in
daa
filds
push
aad
pop
add
fldcw
call
shll
popf
sti
and
dec
movsl
xorl
data16
jno
add
xor
repnz
dec
mov
xor
jecxz
cmpsb
push
mov
jl
mov
test
sar
outsl
jns
mov
icebp
inc
call
lea
sub
icebp
pop
lods
insb
xchg
mov
mov
pop
hlt
loope
imull
fs
inc
mov
jmp
fcoms
sbb
xor
mov
inc
adc
mov
pop
xor
pop
std
sbb
scas
out
xchg
sbb
and
hlt
dec
bound
add
cmpsb
pop
test
mov
cmp
adc
jno
test
pushf
xor
add
out
push
nop
xchg
mov
mov
and
jp
ret
xchg
mov
xor
inc
test
jl
out
ret
mov
rclb
ret
in
cwtl
out
pop
adc
mov
mov
and
movsl
lock
dec
mov
mov
add
cmp
jne
sbb
in
and
mov
mov
test
insb
adc
gs
outsb
mov
fs
lock
fs
andl
pushf
add
fidivs
popa
cmp
jmp
stos
or
mulb
lods
push
ljmp
in
mov
mov
imul
outsb
xorl
xchg
ss
inc
pop
out
cli
push
cmc
xor
leave
data16
lds
dec
push
ret
xchg
popf
sbb
lods
dec
dec
fisubrs
adc
in
lahf
rol
stc
xchg
arpl
xchg
jl
sub
mov
jmp
xor
pop
lcall
sbb
out
ret
push
and
dec
aas
arpl
push
jnp
out
int3
and
push
or
sbb
xor
or
lret
mov
mov
imul
mov
push
int
xor
std
push
and
xor
jae
cltd
loope
push
mov
mov
mov
stos
pop
xchg
movsl
idivb
pop
inc
loopne
xchg
rorb
push
popf
insl
out
mov
testl
and
add
lcall
aam
lret
xor
mov
inc
sub
loope
fsubl
jns
sbb
xlat
inc
int
sub
push
in
xor
std
cwtl
mov
pusha
mov
push
dec
call
mov
push
aam
dec
sbb
into
int3
dec
adc
nop
adc
iret
pop
dec
clc
ljmp
mov
outsb
cmpsl
loop
cmp
sub
fsubrs
inc
shl
sbb
xchg
or
push
sub
ds
fadds
or
mov
loopne
mov
int3
es
push
sahf
inc
add
mov
sbb
leave
mov
sahf
scas
and
or
sub
mov
mov
iret
inc
push
pop
ljmp
pop
std
adc
and
jbe
sub
mov
push
push
jb
repz
lock
push
repz
and
mov
movsl
shll
mov
mov
inc
icebp
cmpb
inc
jecxz
cmp
sub
mov
mov
xlat
and
movsl
loop
and
aaa
test
sbb
iret
dec
sbb
icebp
and
adc
repz
cmp
out
lret
pop
xlat
js
and
mov
sbbb
jne
test
popf
push
movsb
sahf
int
lds
insb
pusha
pop
mov
test
jb
jnp
or
push
std
mov
addr16
or
cwtl
push
pop
xor
xchg
inc
icebp
pop
cmp
add
inc
and
mov
mov
sub
lcall
mov
into
push
push
xor
jp
adc
in
insl
mov
jb
push
mov
fildl
js
sub
lahf
push
xchg
shll
add
pop
cmp
ror
and
imul
mov
loop
ja
loopne
mov
add
mov
cs
sub
int3
adc
pushf
pop
insl
les
cmpsl
mov
stos
mov
mov
xor
jb
mov
xchg
dec
mov
arpl
xchg
cld
cmc
inc
and
mov
pop
adc
pop
mov
lcall
lcall
sbb
pop
sbb
hlt
mov
cmp
or
stos
pushf
pusha
outsb
cmpsb
sub
lret
pop
cltd
mov
aam
arpl
jbe
lods
mov
ss
sbb
js
xlat
xchg
adc
mov
cwtl
mov
loope
mov
imul
dec
jl
test
clc
pop
in
les
dec
push
loopne
push
push
dec
jo
repz
add
dec
pop
mov
push
cmc
leave
mov
push
mov
xor
or
aad
mov
or
movsl
push
cmpsl
jno
jnp
push
sarb
jo
xchg
and
cwtl
cmpl
mov
rorb
mov
mov
push
or
into
aam
gs
jnp
and
outsl
mov
push
push
fimuls
jne
xchg
fwait
sub
or
xor
or
cmp
mov
shrb
loope
jb
xchg
pop
addb
lret
lcall
ret
loopne
pop
lock
jb
and
jl
cmp
sbb
imul
lods
pop
push
cltd
aaa
test
rol
in
dec
mov
mov
ja
mov
nop
mov
cmpsb
pop
push
mov
mov
out
dec
lcall
loope
mov
ret
stos
xor
je
sahf
mov
mov
mov
push
and
push
aas
jo
and
pop
and
loopne
mov
ret
insl
adc
mov
xor
aad
out
push
dec
sub
mov
ret
mov
loopne
push
cwtl
inc
jg
push
push
xchg
mov
jmp
xchg
sub
mov
mov
mov
and
lods
ror
flds
repz
xchg
xorb
ja
fwait
mov
cld
cmpsl
sub
fs
mov
shrb
jno
lret
ret
stc
lods
adcl
enter
push
cld
aad
xor
inc
addr16
std
xor
cli
mov
lods
lock
loope
scas
js
xchg
pushf
pushf
stos
test
jno
xlat
movsb
je
and
push
push
add
mov
fnstsw
mov
pop
js
jle
mov
push
je
mov
into
dec
stc
mov
dec
adcb
shll
ds
imulb
or
mov
add
or
loope
jae
out
dec
or
add
add
ds
sbb
data16
stc
dec
mov
std
dec
sbb
mov
or
sub
sbb
cmp
jmp
inc
bound
jae
xor
jne
jl
push
mov
imul
cltd
mov
mov
push
fwait
inc
push
dec
mov
bound
pusha
lods
stos
cs
shll
mov
call
das
insl
lret
scas
pop
xor
xor
sti
fidivl
pusha
out
mov
jnp
sub
cmpl
jnp
jns
sti
mov
repnz
adc
scas
cli
push
dec
lock
inc
mov
jmp
fiaddl
xlat
mov
mull
pushf
pop
sub
scas
mov
imul
mov
push
jle
xlat
mov
pop
mov
mov
stc
xchg
cmp
mov
imul
ds
pop
xchg
xchg
cmp
inc
pop
sti
sub
xchg
loopne
cmpsb
enter
push
insl
iret
cli
int
shlb
adc
sbb
popf
ja
popa
sbb
call
push
rcr
fists
inc
xor
sub
xor
sti
cmp
or
xor
loop
iret
imul
bound
cmpsl
enter
mov
push
mov
push
cltd
cmp
leave
mov
mov
outsb
inc
aas
dec
jo
inc
jb
mov
xchg
rcrb
fwait
int
out
jmp
inc
ficoms
sub
cmp
movsl
test
mov
mulb
sti
mov
icebp
mov
sub
mov
or
push
jg
or
daa
lods
sub
cwtl
insl
int3
rcll
jns
dec
mov
adc
inc
inc
cwtl
pop
and
mov
sti
xchg
test
jo
adc
int
push
jno
mov
adc
sbb
sbb
jns
enter
sbb
sub
nop
insl
inc
sbb
add
xlat
test
jmp
jecxz
popa
mov
and
rolb
pop
mov
cld
dec
scas
movsb
jbe
mov
aam
shll
adc
pop
mov
and
int
adc
pushf
pusha
adc
cmp
sub
xor
mov
jmp
out
adc
ret
test
mov
dec
mov
inc
fldl2e
gs
imul
je
dec
addr16
xor
inc
and
pop
in
lods
adc
sbb
or
or
into
pop
mov
mov
dec
cmp
mov
pop
sub
leave
popf
leave
ret
inc
shrl
sub
outsb
test
pop
dec
movsb
mov
push
popa
mov
jb
insl
push
repz
sbb
dec
bound
jge
mov
es
int
inc
movsb
jge
inc
adc
nop
pop
pusha
lock
js
xchg
icebp
js
inc
add
in
pusha
and
mov
ljmp
roll
mov
or
push
stos
popa
push
adc
adc
jg
fisttpl
sbb
inc
icebp
stos
add
in
les
push
scas
mov
xor
sti
sbb
outsl
or
or
repnz
fimull
or
add
hlt
je
xlat
loope
daa
in
hlt
push
cmp
adc
call
repnz
push
add
fsubrs
test
decb
jb
orb
ficoms
addr16
sbb
dec
push
pop
add
jmp
push
cmp
int
repnz
dec
jb
cmpsl
mov
bound
fdivrp
mov
nop
mov
push
outsb
push
jp
in
test
out
jbe
dec
adc
mov
xchg
sbb
sbbb
lea
ss
cmp
subl
push
mov
mov
inc
mov
scas
mov
test
pop
cli
scas
aaa
hlt
cmp
mov
imul
cmp
jns
xor
or
and
popf
sub
or
mov
xchg
inc
lock
sub
in
adc
xchg
loopne
mov
jb
jnp
test
and
jmp
js
clc
dec
dec
pushf
fwait
mov
ds
jp
movsb
mov
aad
adc
xor
aam
and
adc
jbe
jle
mov
data16
enter
sbb
cwtl
dec
sbb
adc
jmp
aad
push
adc
pop
add
andl
cmp
cmpb
lds
add
cmpsl
hlt
pop
orl
and
inc
cwtl
mov
cmp
es
ljmp
rol
pop
inc
dec
push
cmp
mov
xchg
test
push
push
sbb
aaa
xchg
mov
mov
rolb
mov
lods
into
pop
inc
loopne
and
fiaddl
orl
cmp
cld
jb
ds
mov
std
mov
mov
movsl
xor
sbb
enter
fisttpl
inc
xchg
js
dec
in
outsb
mov
imul
ror
enter
pushf
fstl
inc
dec
lock
cmp
loop
in
jle
mov
ljmp
pushf
cmp
lods
adc
mov
pop
jge
pop
mov
out
sar
dec
pop
or
or
scas
sbb
loop
jl
aaa
jp
jo
popa
and
and
mov
test
into
sbb
daa
inc
adc
fs
mov
pop
push
jno
insl
adc
sarl
or
test
xor
jno
pop
repnz
inc
cld
jbe
jmp
push
insl
mov
popa
repz
sarl
pop
mov
pop
orb
xchg
mov
xor
jp
movsb
adc
loopne
dec
rcrb
stos
les
cld
dec
aam
fs
mov
les
cmp
pop
scas
jae
xor
mov
push
lahf
sub
iret
cld
sub
lods
jno
xor
inc
imul
and
mov
xchg
inc
mov
xor
mov
les
test
cmp
scas
dec
test
and
inc
dec
jae
or
jns
push
pop
jp
inc
mov
ret
pop
daa
imul
push
pop
lea
jne
pop
sbb
in
fisttpll
dec
cli
cmpsl
sarl
xor
js
int3
xor
ljmp
pop
jp
aaa
jnp
and
adc
orb
pop
or
mov
jbe
ljmp
mov
mov
inc
int3
stc
mov
hlt
test
mov
add
scas
dec
popa
test
lret
dec
and
ds
push
test
loope
in
xchg
scas
mov
inc
das
xchg
inc
shll
xchg
cmp
out
mov
xchg
sub
dec
out
sahf
pushl
addr16
iret
sahf
dec
in
clc
dec
pop
pop
xchg
xchg
or
sub
roll
out
push
xchg
out
mov
sub
repz
sbb
pop
xlat
or
int
pusha
lea
push
mov
jnp
pop
shll
mov
arpl
mov
dec
pop
mov
cli
cmpsl
mov
mov
mov
frstor
faddl
outsb
jae
decl
pop
rol
lods
pop
adc
xchg
test
inc
cmp
adc
cmp
push
pusha
int3
idivl
sti
sub
cld
sbb
sar
add
inc
pushf
add
jp
mov
mov
test
or
outsl
enter
jnp
aad
leave
fwait
mov
cli
push
mov
adc
xorl
mov
push
sarl
popf
stos
dec
test
sbb
push
inc
inc
dec
or
pop
int
out
mov
dec
adc
sbb
pop
add
rol
ret
leave
leave
pop
arpl
dec
xor
dec
loope
mov
aaa
adc
add
outsl
sub
pop
pop
test
std
out
jge
ljmp
movsl
out
mov
movsl
lret
mov
dec
inc
jno
jg
or
in
add
xchg
and
xlat
xchg
mov
xchg
xchg
loope
outsb
add
outsb
dec
add
mov
movsl
loope
jnp
xchg
push
mov
add
push
jne
and
mov
loopne
fldenv
lock
push
inc
jnp
cltd
jb
sub
cmp
cmpsb
cmpsl
cmpl
sbbl
jnp
push
hlt
stc
xor
popf
iret
pushf
arpl
sahf
dec
xor
mov
cmp
scas
cmpsl
sub
jno
push
jmp
mov
loop
into
fnstsw
push
and
jle
jg
les
lret
cmp
xchg
cmp
insl
push
fldt
xchg
or
inc
dec
ja
mov
lret
incb
adc
adc
cmp
dec
mov
out
in
xlat
je
pop
lea
cmpsb
lahf
cmp
lods
xchg
mov
pop
fcomps
mull
jae
mov
dec
fisttps
inc
sbb
mov
push
stc
lcall
mov
sbb
push
and
jmp
mov
pop
mov
stos
mov
adc
repz
rorl
insl
mov
and
stc
jge
arpl
dec
pop
cmp
mov
pop
fsub
cmp
aad
jle
dec
xorb
mov
dec
sub
lods
lahf
decl
call
cmp
cmc
inc
pop
mov
repz
or
sti
shlb
xor
roll
aam
imul
cmp
rcr
mov
fistl
test
xchg
add
xchg
clc
gs
dec
adc
arpl
sbb
test
sub
or
mov
and
out
pop
loope
jbe
sbb
enter
stos
jle
or
mov
imul
sub
push
dec
aad
dec
sub
stos
aad
ljmp
inc
cli
cwtl
jne
rcll
lcall
imul
mov
leave
pop
sbb
mov
xor
xchg
sub
fistps
add
lock
imul
jo
popa
movsb
mov
lret
or
jp
mov
movsl
roll
lock
xor
pushf
scas
or
mov
mov
inc
cld
dec
fmulp
ret
fdiv
je
rorl
cmp
mov
mov
inc
mov
mov
adc
or
repz
rcrl
int3
insl
iret
and
xchg
in
arpl
mov
pop
and
cmpsb
aam
filds
sub
mov
stos
xchg
loopne
ja
inc
add
in
enter
inc
push
push
cmpsb
mov
repz
ret
add
cmpsl
ss
fsub
xor
notl
fcoml
xor
lds
add
sbb
ss
sub
jmp
adcl
push
mov
jmp
pop
sub
and
das
in
test
pop
adcl
push
in
scas
xor
dec
mov
pushl
sbb
negl
nop
aaa
push
and
jnp
inc
scas
out
mov
loope
jmp
mov
aad
out
mov
les
inc
mov
adc
aas
testl
cs
mov
fisubs
xchg
inc
sub
inc
pop
xor
lds
addl
jle
mov
jp
jne
cmp
frstor
movb
mov
cmc
xchg
popf
scas
call
pop
jbe
pop
push
je
or
pop
stos
mov
stc
inc
fistps
cltd
jl
add
lods
push
out
hlt
ja
loopne
xchg
fstpt
into
jo
fxch
ret
ljmp
fcmovu
pop
lea
das
fldt
mov
and
or
addr16
iret
out
jne
pop
or
pop
movsb
and
movsl
mov
mov
int3
loop
inc
aad
dec
and
push
out
fadd
ds
push
pusha
pop
sub
sbb
fsubrs
scas
ds
sub
inc
adc
les
out
mov
pop
cmp
sti
arpl
pop
mov
dec
pop
add
lds
jno
ja
sahf
outsb
das
sti
jne
or
subl
es
lahf
mov
test
pop
rcll
mov
push
aad
fs
out
mov
pop
dec
add
mov
enter
cmp
pop
mov
jb
xor
pop
mov
js
addr16
ljmp
ret
andl
pop
test
pop
lods
fninit
adc
sbb
jnp
sub
out
or
movsl
jne
sub
mov
push
push
push
add
lret
les
mov
dec
mov
push
xchg
and
ja
outsb
dec
das
inc
xchg
repz
lea
jg
jmp
jp
ret
jo
and
add
test
adc
pop
jecxz
push
sub
dec
cltd
daa
int3
in
jge
jg
dec
dec
rorl
scas
subb
repnz
jge
lds
adc
pop
iret
xchg
mov
mov
mov
jne
mov
ja
mov
addr16
aaa
jns
rolb
nop
adc
xor
jns
fidivrs
push
and
iret
in
push
jl
ljmp
inc
jmp
jecxz
add
ja
jnp
xchg
cmp
in
push
push
dec
add
dec
cmp
xor
sub
jbe,pt
cmpsb
add
scas
mov
mov
cs
or
ret
sub
jecxz
xchg
add
gs
inc
pop
push
iret
rcrl
lods
and
repz
rorb
ja
xchg
pop
mov
sub
clc
lret
sbb
xchg
aam
out
fstl
xchg
into
inc
stc
jmp
lock
outsl
xor
popa
aas
inc
fisubrs
dec
sahf
jmp
rorl
sbb
shlb
pop
lret
dec
cmp
shlb
cmp
xchg
xor
push
mov
fstpt
frstor
sbb
icebp
rol
xor
loope
sbbl
lret
sbb
iret
mov
mov
or
add
push
jae
bnd
outsl
sub
psubd
out
jne
negb
mov
fistpl
popf
xor
sub
hlt
pop
loope
ffree
xor
mov
sbb
outsl
sti
add
xchg
xchg
jmp
inc
subl
test
sar
jl
mov
stos
insb
shlb
in
sbb
cmp
jle
outsb
cmp
lods
and
movb
outsl
or
mov
mov
dec
sbb
aas
pop
pop
and
cmp
jnp
jmp
loop
mov
pop
cmpsb
insl
adc
ret
icebp
test
lock
iret
dec
mov
add
mov
repz
push
jmp
add
loopne
or
jae
inc
popl
sub
or
xchg
lods
jno
stc
fcomp
add
stos
pop
inc
orb
mov
in
xor
sub
and
mov
bound
icebp
push
ljmp
inc
xchg
aam
jbe
mov
outsb
fs
sub
pop
or
loopne
test
stos
xchg
movsl
jb
push
test
pop
pop
mov
sub
lods
sahf
adc
or
jmp
shrb
push
out
add
xchg
jnp
test
push
addr16
push
or
mov
lcall
mov
pop
lret
push
xlat
adc
in
mov
lock
mul
nop
dec
sub
cmp
xorb
fs
std
out
scas
or
cmp
adcb
test
push
push
ja
sub
fcompl
add
cld
xor
outsb
js
ljmp
mov
out
cmpsl
orb
sbb
popw
sti
push
mov
ret
dec
xor
push
and
sbb
adc
out
enter
push
adc
xor
jne
and
xor
mov
sub
add
lods
out
fstpl
outsb
add
sahf
in
push
outsb
mov
clc
lea
es
in
push
sbb
les
bound
or
xchg
mov
aad
lret
stc
pop
mov
jno
movq
sub
pop
xchg
fwait
jecxz
mov
xlat
je
xchg
or
outsl
and
sahf
sub
lds
std
sarl
xor
jmp
sub
xor
popf
xchg
mov
cmp
scas
add
bound
sub
dec
push
cmp
lods
cmp
xchg
lcall
cmc
xor
dec
lret
and
lahf
pop
mov
mov
jns
add
ffree
insl
jns
out
mov
sub
call
gs
push
adc
cmc
call
push
lea
add
inc
lar
jg
jno
fs
mov
ja
mov
pushf
push
add
mov
in
jmp
arpl
int3
xor
sub
bound
mov
mov
push
addr16
stc
mov
pushf
push
gs
or
push
test
std
sbb
les
push
movsb
xchg
sbb
inc
add
add
inc
repnz
mov
stos
jecxz
jnp
arpl
sbb
push
jg
out
ds
aad
cli
enter
sub
pusha
mov
lods
cltd
scas
in
mov
ret
mov
mov
lahf
sarb
mov
sahf
cld
mov
scas
mov
inc
jmp
lret
and
fs
cmp
sub
mov
mov
imul
and
shrb
push
mov
xchg
into
aas
push
push
test
dec
and
xchg
mull
outsb
xor
sahf
sbb
fiaddl
test
push
rorb
ja
inc
lea
cwtl
add
pop
mov
mov
nop
jbe
movsb
dec
mov
movsl
xor
clc
xor
or
sbb
leave
push
in
stos
out
dec
popf
pushf
rcrb
pop
shll
push
dec
lret
mov
sti
sbb
cmp
aas
outsb
push
popa
and
lret
setb
insb
hlt
pop
test
popf
jle
test
loopne
cmc
rcrl
popa
sti
dec
cmovp
cli
inc
jmp
int3
mov
mov
loope
pop
popf
out
aas
add
scas
lahf
inc
out
push
ljmp
mov
mov
pop
or
jl
xchg
xor
push
cmp
and
dec
jne
mov
pop
pop
leave
push
in
je
mov
add
xchg
dec
pop
shlb
and
push
negb
push
mov
das
adc
mov
inc
pop
inc
inc
push
adc
iret
jmp
iret
or
and
inc
jle
mov
adc
insb
rcll
cmp
out
test
rcll
fdivrl
cmp
xchg
pop
sbb
fucomip
int3
add
cmp
fcoms
dec
sbbl
pushf
lods
cmpsl
inc
push
in
pop
outsb
mov
push
push
dec
pop
dec
scas
dec
pop
xor
dec
xchg
jnp
dec
push
jae
mov
jno
push
out
jne
cltd
negl
mov
std
call
dec
mov
sbb
hlt
das
mov
sbb
repz
jl
call
inc
adcb
or
daa
sbb
ja
aas
or
xor
push
mov
stos
xlat
sbb
or
es
adc
add
mov
sub
pusha
dec
fnstcw
mov
xorl
sbbl
dec
sar
mov
scas
dec
jmp
in
call
ret
sub
cmp
sbb
popf
jnp
xchg
fcomp
imul
gs
andl
or
frstor
mov
sub
lods
xchg
inc
xchg
mov
fmuls
fcompl
xlat
lcall
xchg
xor
mov
xlat
cmpsl
xchg
sti
pop
les
loopne
sub
lds
jb
pushf
imul
inc
push
ret
pop
test
fnstenv
sub
jae
and
clc
push
and
mov
xchg
xor
mov
pushf
rorl
addl
incl
pop
push
sti
cmp
xor
faddl
adc
dec
adc
into
fcmovnb
ret
pop
arpl
imul
xchg
pop
rclb
sbb
sub
xor
je
subb
sbb
or
or
push
aad
jg,pt
push
inc
push
jecxz
cltd
mov
jae
push
mov
arpl
lock
xchg
inc
outsb
nop
mov
xchg
aas
push
leave
scas
rolb
sub
insl
les
xchg
mov
roll
cmp
add
fisubrl
push
mov
mov
xchg
in
cmp
bound
aaa
push
jge
or
jp
xor
sub
repz
addb
call
arpl
insb
mov
cmpsl
sub
inc
lea
or
imul
call
adc
outsl
dec
cmp
push
gs
insl
adc
jns
mov
add
cmp
scas
arpl
pop
dec
sbb
xor
rcrb
ds
add
int
jb
out
mov
adcl
mov
dec
add
push
movsb
jmp
dec
mov
add
imul
xchg
fcomp
sub
jmp
or
xor
pop
mov
cmp
dec
sbb
mov
scas
loopne
lea
or
mov
popf
mov
test
lods
test
popa
or
lods
daa
es
fwait
out
cmp
imul
js
cli
mov
addr16
lahf
fcompl
stos
mov
aam
xor
lret
add
jb
sub
cmpsl
out
mov
test
adc
std
je
push
mov
inc
jo
jne
mov
cmp
adc
pop
sbb
mov
decl
adcl
sti
jb
out
xchg
push
mov
into
sbb
lods
jne
adc
adc
test
mov
lahf
ss
mov
adc
mov
mov
out
or
outsb
stos
mov
sti
sbb
ret
push
stc
cli
jmp
adc
push
pop
jo
repz
mov
or
in
push
push
mov
lret
mov
dec
xor
ljmp
shrl
jb
cmp
imul
enter
mov
mov
mov
movsl
or
shll
je
cmpsb
mov
dec
shll
sub
inc
xchg
jns
jae
inc
adc
xor
inc
pop
jecxz
inc
jp
lret
add
mov
dec
out
in
mov
imul
dec
mov
sbbl
psubusw
add
int
xor
fldenv
lds
push
popa
push
mov
inc
lods
push
nop
xchg
es
ret
mov
test
pop
jle
scas
arpl
into
mov
pusha
jns
loope
repnz
hlt
or
pop
lods
push
ficoml
jg
dec
mov
call
xor
pop
flds
mov
xor
or
pop
xor
fnclex
out
mov
movsb
mov
shl
cmp
inc
shll
jmp
rcrb
jl
push
or
dec
es
popa
jns
ret
push
sbb
sahf
xchg
inc
icebp
cli
pop
lahf
mov
xor
xchg
lods
push
daa
jge
xchg
in
bound
and
jo
negb
addb
daa
outsb
or
in
addr16
and
and
adc
xchg
and
jmp
repnz
clc
sti
pop
xrelease
pushf
jne
cmp
mov
add
repz
pop
xchg
std
subb
rcrb
mov
loope
jne
stc
xor
in
in
xor
or
imul
aaa
jae
ss
xchg
push
mov
mov
and
loopne
mov
mov
xor
int3
mov
add
inc
dec
outsb
rcll
cltd
add
dec
xchg
cs
push
pop
repz
push
dec
push
rdmsr
and
ds
cmp
int
stc
stos
scas
sar
jg
xor
pop
fldenv
cli
shl
mov
xor
nop
xchg
push
jns
jno
lds
add
push
decl
mov
jmp
aam
mov
sbb
int
xor
pop
mov
mov
lcall
mov
popa
sub
mov
pop
in
xchg
nop
ds
aas
insb
push
inc
cmp
jns
xor
cmp
ret
cli
cmp
inc
ds
or
ds
cld
sahf
adc
mov
popa
lea
jbe
out
stc
fistl
jns
testl
xchg
sbb
cmp
add
andl
insl
bound
cmp
mov
inc
stc
jge
jle
push
add
je
aaa
push
sarl
sub
faddl
sbb
fld
mov
dec
pop
jg
arpl
movsb
sbb
mov
or
xorl
xchg
xchg
test
es
test
addl
jle
adc
loope
test
lock
and
mov
sbb
or
aaa
aam
cltd
jecxz
xor
xor
adc
insb
dec
push
jp
adc
shrb
je
cmp
or
fldt
scas
add
data16
push
or
sub
xor
shll
pushf
push
icebp
cmpsl
lcall
and
sub
ds
inc
or
jp
pop
fs
mul
mov
and
into
adc
jns
adc
test
hlt
jle
aas
or
pop
in
scas
stc
loope
fwait
mov
dec
stos
xchg
js
jae
fstpt
js
in
cmp
xchg
int
ret
ds
repz
mov
jne
call
xor
int
jg
loope
pop
jg
mov
dec
hlt
iret
mov
repnz
fistpll
xchg
mulb
sbb
fisttpl
xchg
aam
sbb
xchg
stc
cwtl
cmpsl
outsb
sbb
bnd
sbb
popf
adc
out
mov
inc
pop
daa
or
jb
adc
sbb
out
jno
in
idivl
mov
gs
arpl
push
lcall
xchg
int
cwtl
mov
insl
inc
push
cltd
inc
pop
inc
mov
fnsave
dec
add
mov
cltd
cmp
out
and
sbb
xor
fmulp
daa
loopne
jle
scas
fsubl
shlb
mov
jnp
push
enter
pop
jge
or
xor
dec
bswap
jp
jb
pop
out
mov
je
xchg
repz
cli
xchg
jae
cld
hlt
js
xchg
jmp
imul
mov
rcrl
adc
lea
cs
into
xchg
xchg
repz
mov
xor
popf
test
fsqrt
or
jecxz
push
jb
dec
and
jnp
cld
lds
jecxz
es
clc
pop
loopne
outsb
adc
mov
xchg
xlat
out
sbb
xchg
mov
imul
cmc
daa
or
cwtl
pop
inc
cmpsb
push
in
cli
cmp
lcall
mov
loop
leave
cmpsl
jnp
xor
fldcw
adc
jns
mov
and
aad
movsb
ret
push
es
mov
je
and
lods
imul
js
mov
sub
pop
mov
popf
sub
and
mov
cmp
sbb
mov
ss
ror
loopne
fisubrl
ljmp
fst
mov
decl
sub
mov
scas
xchg
pop
sbb
lock
mov
pop
data16
and
add
inc
push
dec
aas
add
jl
dec
push
and
mov
pop
mov
ss
notl
repnz
ja
repnz
inc
or
je
sbb
sub
into
inc
push
mov
in
push
dec
dec
cmpsb
jae
mov
mov
sbb
xchg
push
inc
mov
ror
mov
add
or
insl
leave
fstpt
mov
pop
or
mov
cmp
cs
or
ja
jno
aaa
push
inc
lock
repz
mov
stc
iret
mov
push
jae
xor
pop
dec
popf
frstpm(287
scas
xchg
xchg
shl
in
xchg
dec
int3
xor
mov
cmp
mov
gs
cltd
jmp
mov
test
jmp
outsl
cmp
mov
test
xlat
ficompl
dec
pop
push
jbe
push
lea
into
out
adc
mov
mov
mov
aas
scas
mov
inc
jns
and
shll
xor
jle
sbb
incl
inc
push
insb
push
jne
push
cmpsb
pop
xchg
ds
jnp
mov
push
mov
sub
faddl
xorl
mov
or
push
push
or
sub
ret
scas
rolb
cs
cwtl
sbb
xchg
push
andb
dec
xchg
push
cmp
mov
pusha
and
cmpsl
push
inc
mov
test
xchg
loopne
jnp
cmp
push
out
pop
icebp
cli
adc
pop
cmpsl
hlt
insb
dec
dec
in
sbb
sub
lock
push
xchg
adc
test
pop
rorl
out
out
lods
and
cmpsb
inc
cmpsb
shrl
mov
dec
fdivs
mov
mov
mov
add
ss
out
inc
xchg
dec
out
mov
dec
lret
and
sub
push
sbb
pop
popa
sub
or
mov
cmp
mov
inc
into
pop
lret
cmpsl
mov
out
testb
xchg
repnz
mov
push
dec
xchg
dec
hlt
jge
and
dec
inc
lods
mov
cmp
in
cltd
in
inc
mov
popa
rcll
daa
push
dec
pusha
add
jae
repz
sub
cmp
imull
pop
xchg
in
mov
dec
stc
fnstenv
aam
or
loope
out
shrl
repz
outsb
push
cmp
imull
in
clc
nop
mov
jecxz
daa
leave
insb
lcall
adc
adc
xor
adc
jbe
pusha
xlat
inc
insb
push
mov
jle
repnz
adc
lret
fisttpl
popa
cmc
outsb
nop
gs
clc
aad
xchg
jb
cwtl
sub
insl
out
ret
mov
loope
push
test
push
dec
ret
xchg
stc
addr16
gs
jmp
cmp
pop
xor
repz
addr16
jno
test
mov
pusha
es
and
dec
in
lcall
push
adc
cwtl
adc
xchg
lea
mov
push
shrb
pusha
clc
push
shl
filds
xchg
aas
aaa
iret
cmc
jno
rclb
dec
scas
movaps
test
subl
inc
fnstcw
xor
mov
bound
je
xlat
and
pop
clc
fdiv
jb
cmp
stc
inc
jb
xor
adc
stos
movsb
rorl
lods
cltd
pop
leave
cmpsl
push
mov
inc
loope
dec
and
jns
in
pushf
cwtl
ret
int
js
or
dec
fstpl
sbb
pushf
popf
push
sbb
jl
jg
dec
mov
test
jle
adc
std
pop
push
or
int
mov
imul
hlt
arpl
stos
and
les
sub
mov
adc
push
andb
scas
loopne
les
es
fcomps
or
push
xchg
ret
das
xchg
ret
es
adc
cmp
mov
lahf
fwait
call
fistpl
xchg
ja
jb
mov
mov
jbe
mov
jle
cmp
pop
sub
cld
clc
add
mov
sbb
xchg
or
inc
addr16
jmp
push
mov
lds
in
popa
aaa
jmp
cs
adc
out
and
xor
jbe
loop
sub
neg
shlb
mov
cwtl
inc
repz
shl
xor
sub
test
mov
aam
sbb
push
mov
nop
lahf
leave
imul
faddl
cmpsb
jo
pop
push
out
jbe
imul
dec
dec
inc
sbb
mov
push
fcom
xchg
lcall
jg
shlb
mov
xchg
cmp
add
incb
fadd
sahf
cmp
mov
adc
xchg
sub
mov
sbb
andb
cli
jle
sub
pop
and
push
sub
fnstsw
clc
jmp
insb
mov
push
cmp
push
mov
xchg
xchg
aam
mov
lahf
pop
xor
push
mov
sti
stc
mov
xchg
aas
fildl
dec
das
inc
push
add
cmpsl
pmuludq
movsl
adcl
push
ljmp
push
cmp
lcall
or
and
xor
movsl
xchg
jbe
loopne
inc
mov
mov
cs
div
xor
dec
sub
pop
push
insl
adc
je
or
xor
aad
leave
aam
add
xchg
out
mov
ret
dec
xlat
xchg
cli
mov
inc
scas
loope
subb
stc
scas
imul
mov
cwtl
dec
push
out
dec
xchg
aad
xchg
mov
mov
and
outsl
psrad
data16
int3
mov
or
and
inc
jae
mov
shlb
jne
xchg
outsl
ja
dec
loop
icebp
sbb
cmp
sarl
cs
and
popf
push
pop
push
stos
notb
icebp
or
std
shrb
clc
fcmovb
outsb
enter
mov
scas
mov
or
fdivrs
mov
jmp
aam
test
jge
rcl
pmaxsw
adc
jne
in
ds
mulb
stos
and
arpl
ds
sbb
pop
or
and
or
lcall
jl
xor
movsb
loopne
in
push
and
push
jb
sbb
ds
aas
dec
or
addl
xor
cmp
and
sti
ret
pop
dec
fwait
mov
leave
xchg
xor
or
mov
push
cld
stos
fdivl
scas
pop
or
mov
cmp
or
mov
fwait
dec
sbb
pop
popf
movsb
aas
mov
insl
mov
inc
push
ds
cmp
add
mov
jg
ds
sub
xchg
xchg
fildl
cmp
adc
aad
in
lret
inc
sbb
sub
mov
or
std
aaa
inc
adc
inc
xchg
mov
popa
gs
lret
adc
sbb
inc
pop
fsubs
push
pop
xchg
cmpsl
xchg
arpl
pop
dec
xchg
rcrb
adc
cmp
dec
or
dec
lahf
clc
push
aaa
insl
ret
inc
out
push
stos
rep
rol
mov
ficompl
shlb
test
mov
lods
xchg
xchg
faddp
lcall
adc
bound
cmpsb
inc
cmpsb
adc
mov
xchg
cld
cmp
bound
sbb
enter
jb
xlat
mov
sub
jle
and
test
inc
decb
jo
icebp
mov
clc
xchg
popa
pop
push
pop
stos
dec
or
mov
dec
and
push
sub
imul
out
or
and
imull
sbb
cmp
mov
mov
jne
xor
sbb
sbb
jb
jne
and
lock
out
std
pop
and
xchg
adc
into
out
push
lret
outsl
cmc
in
sub
rcrl
imul
lods
adcb
insl
ret
cmpsl
push
mov
or
int
mov
cmp
je
fbstp
pop
and
fstl
sub
lahf
mov
push
in
rolb
jo
mov
mov
push
mov
mov
aaa
mov
or
pop
cli
pop
popa
adc
and
pop
mov
fstpl
push
dec
pop
lods
sbb
loopne
lret
insb
aam
or
pop
rorb
sti
cmp
mov
leave
cwtl
insl
iret
test
fisubrl
sbb
cmc
addr16
cmp
xor
loopne
lret
sbb
cs
push
cmp
mov
mov
pop
mov
shll
sbb
mov
fwait
and
sbb
pop
push
fisubs
mov
xor
leave
xor
and
mov
aas
into
aas
scas
push
pop
mov
jg
test
movsb
xor
shr
mov
cmp
pop
add
mov
or
pop
cltd
dec
pop
packssdw
adc
jg
jnp
or
icebp
dec
pushf
test
ffree
xchg
xchg
adc
dec
daa
xchg
xchg
cmp
fmul
loope
orl
mov
les
xchg
mov
mov
push
insb
movsl
clc
je
inc
in
push
push
into
cli
mov
push
mov
loop
stos
cli
mov
add
mov
mov
popl
dec
ds
push
dec
fcoms
fnstsw
adc
mov
lods
pop
add
test
inc
lea
ret
lret
push
arpl
iret
push
mov
roll
fdivl
daa
fnstsw
inc
mov
cli
addb
xlat
jns
and
mov
jo
jp
dec
rcll
frstor
mov
jns
lock
mov
push
xor
lods
jp
xchg
xchg
mov
cmp
pop
js
xchg
dec
in
fiadds
jge
push
sbb
lea
pop
jecxz
fbstp
jge
pusha
mov
xchg
adcl
in
inc
sbb
aaa
jbe
out
dec
je
iret
pusha
cltd
sbb
pusha
in
xlat
jge
insl
lods
jbe
call
pusha
lret
mov
push
out
or
arpl
in
es
xchg
jecxz
or
ds
ficoms
pop
movsb
xchg
fmull
mov
scas
mov
fildl
push
xchg
cwtl
sbb
add
std
aaa
mov
dec
imul
mov
addb
mul
test
lahf
mov
and
add
test
jl
add
adc
add
outsb
or
int3
or
fucompp
mov
dec
popa
adc
jb
int
mov
stos
nop
push
push
ficoms
ret
scas
ret
mov
xor
pusha
and
and
jecxz
faddl
mov
sbb
sahf
xor
and
jmp
lods
cmc
clc
and
imul
pop
idivb
jb
jl
pushl
in
test
test
pop
fs
iret
cwtl
daa
adcl
push
jae
enter
inc
jnp
out
loope
or
push
pop
andl
pop
mov
js
mov
sbb
clc
aad
inc
fcoms
daa
rclb
cmp
mov
push
jno
imul
mov
ret
push
push
jl
test
nop
or
stos
inc
andl
fcomp
pusha
pop
sub
push
push
sahf
sbb
adc
sub
ja
jnp
and
rcrl
mov
out
repnz
sub
scas
into
fstpl
ds
dec
icebp
add
inc
dec
scas
push
mov
testb
imul
inc
aad
jg
aaa
js
aaa
dec
cmp
and
cmpsb
aaa
mov
jo
les
enter
loopne
enter
fs
les
flds
sbb
shrb
sbbb
add
lret
stos
mov
sbb
dec
orl
ret
mov
scas
insb
cmp
mov
mov
repz
push
pop
mov
dec
mov
sub
sbb
dec
inc
cs
jb
xchg
in
mov
cltd
inc
call
je
test
or
jae
fs
in
pop
add
ret
xchg
jge
mov
lret
out
mov
and
mov
xchg
jb
aaa
adc
jns
cmpl
jbe
mov
pushf
sbb
in
popa
inc
lret
dec
lock
pop
iret
and
nop
aam
ds
fdivr
jb
icebp
lds
pop
pop
sbb
inc
jb
dec
dec
dec
mov
andl
sbb
mov
and
cmp
daa
lret
fcmovnbe
cmc
pop
sar
cmp
jmp
lea
scas
add
daa
aad
push
jle
iret
push
nop
xlat
mov
inc
mov
push
faddl
ljmp
mov
pop
cmpb
pop
cmp
test
cmc
pop
dec
fldl
jo
lods
jle
xchg
mov
repnz
cld
and
and
aad
rclb
mov
xchg
mov
mov
mov
int
xchg
fcompl
stos
push
pop
add
outsb
adc
push
and
imul
sbb
lea
or
dec
adc
les
mov
xchg
sub
pusha
pop
mov
sbb
testl
lret
mov
lret
sarl
call
dec
rclb
ss
push
mov
sbb
xor
adc
popf
fs
andl
pop
out
or
pop
dec
or
addb
test
jbe
and
inc
inc
push
rorb
or
aad
je
jg
push
mov
sub
das
sbb
xchg
iret
sub
andl
xor
repnz
movb
jmp
cli
dec
cmc
pop
das
sub
pop
add
pop
push
pop
addr16
pushf
cmp
jle
cmp
cmovae
jne
adc
movsl
and
psubq
push
push
mov
cs
mov
mov
out
jle
lret
cmp
mov
in
and
dec
cmc
fs
movsb
jecxz
sub
int3
xchg
test
jae
mov
push
push
and
push
idivl
pop
ja
sbb
inc
bound
or
mov
lea
push
push
cmp
xor
and
jg
in
push
aaa
pop
inc
cld
adc
lock
stc
and
arpl
adc
jle
pop
xor
inc
stc
aas
mov
into
cmp
dec
jo
mov
in
jp
les
popf
in
mov
test
dec
movsb
cmp
sub
mov
mov
sbb
mov
jo
mov
clc
ret
fidivs
or
lahf
in
dec
adc
or
or
out
es
nop
xchg
push
dec
adc
movsl
stc
movsb
push
sbb
dec
cmp
bound
xor
pop
iret
icebp
mov
jns
pushf
push
and
cwtl
loopne
push
out
mov
scas
xchg
xor
cmp
mov
js
insb
fdivs
int
dec
cmc
cmp
jmp
inc
dec
or
pushw
mov
negl
sub
fstps
mov
out
dec
loopne
hlt
pop
cld
loopne
fs
leave
jne
push
out
pop
sbb
sbb
adc
jbe
and
push
mov
xchg
jbe
out
fisttps
movsb
repz
sub
mov
cwtl
or
dec
sti
cmc
xchg
push
insb
fs
mov
aad
pop
push
pop
fwait
pop
push
movsl
cwtl
inc
lret
mov
cmp
push
iret
inc
pop
mov
xchg
jg
das
stc
sbb
icebp
cs
inc
test
cmp
scas
jle
jg
inc
jno
mov
je
mov
mov
int
cmp
push
aad
gs
cwtl
fs
inc
out
sbb
jl
loopne
fdivr
add
xor
jg
add
mov
adc
fs
scas
xchg
les
or
pushf
je
aam
push
mov
lods
add
or
xchg
hlt
std
ljmp
dec
inc
jp
or
cmp
or
xor
xor
leave
in
rcr
dec
xor
loop
pushf
push
adc
pop
xchg
sbb
js
imul
jmp
push
sbb
cmp
pop
fadd
push
fnstsw
dec
movsl
and
dec
out
fwait
popf
or
mov
push
xchg
add
ljmp
movsb
in
cmp
add
push
lods
mov
bound
es
jns
incb
test
push
jmp
mov
je
cld
and
es
adc
jecxz
in
outsl
subb
aaa
push
and
rclb
out
and
shlb
mov
mov
test
dec
cmp
jmp
mov
ds
into
out
fwait
divb
inc
incl
cmp
insl
mov
pusha
scas
in
data16
dec
lock
jno
cmp
xchg
iret
push
cmc
dec
xchg
and
ss
sbb
sbb
cld
and
inc
jae
stos
cmpsb
add
ss
jo
mov
andl
xchg
in
mov
add
fstpl
sbb
in
js
in
xchg
pop
out
shll
popa
cs
sti
sub
sahf
daa
insb
out
jge
imul
int3
ss
pop
mov
ficomps
xchg
in
into
popf
dec
test
pop
icebp
andb
daa
dec
mov
imul
xchg
ds
cwtl
jno
fsubr
xor
fs
imulb
das
mov
cmp
jns
adcb
jg
mov
lret
es
in
dec
cmp
mov
leave
mov
jno
mov
out
daa
outsb
sub
repnz
xor
xor
and
fistps
leave
sbb
mov
test
call
pushf
sub
dec
mov
pop
dec
mov
stos
xchg
orl
jecxz
lcall
ret
push
fimuls
lret
stos
push
iret
cmp
mov
mov
loope
cltd
mov
jb
bound
das
divb
push
push
mov
cmp
dec
push
je
ret
roll
push
and
mov
cmp
adc
mov
and
mov
cld
imul
jno
mulb
inc
in
lret
cmpsl
push
movsl
sahf
out
test
pop
mov
sub
sub
xchg
out
cmpsb
cltd
mov
add
loopne
mov
lret
inc
mov
out
out
cwtl
mov
jno
filds
xchg
cli
or
push
push
inc
test
into
xchg
andb
xchg
addb
test
push
jl
gs
clc
hlt
sbb
jg
test
dec
lea
loopne
add
rcrb
data16
pop
sub
pop
in
mov
sub
outsb
push
arpl
ljmp
fsts
dec
shrb
stos
inc
test
cmp
and
sub
or
and
js
lcall
rorb
pop
loop
cmp
clc
arpl
fbld
lret
sbb
push
test
push
sbb
call
test
cmp
cmpb
adc
cli
mov
sbb
lahf
push
mov
shrl
pop
das
dec
loopne
pop
aam
mov
xchg
adc
aas
mov
addr16
mov
int3
lock
das
cmpsl
or
test
test
mov
out
jge
cmp
push
or
xor
pop
mov
pop
orl
pop
jb
inc
cmp
jnp
push
xchg
add
cwtl
push
jnp
pop
das
sarl
inc
xchg
cmp
xor
fbstp
lret
cwtl
inc
aad
popa
mov
jp
shrl
test
jbe
jno
lods
or
cmp
cs
mov
arpl
dec
fsub
into
inc
jp
roll
movb
push
xchg
push
sub
iret
add
fsubs
bound
adc
xchg
inc
inc
dec
push
fwait
pop
dec
push
or
or
daa
mov
mov
or
mov
xor
xchg
cmpl
cmp
cmp
into
cwtl
gs
xchg
jp
push
aaa
adc
cmp
imul
enter
loopne
xchg
fldenv
stos
in
inc
and
lret
and
out
dec
inc
xchg
dec
out
outsb
scas
sub
stc
movsb
push
sbb
add
add
add
leave
stc
aad
add
adc
scas
mov
sub
popf
dec
sub
loopne
aas
mov
andl
pushl
rcrl
mull
ja
xlat
xor
jo
jns
out
mov
xchg
aas
push
int3
sbb
popa
sbb
mov
pop
mov
or
lret
push
bound
ds
lret
xchg
xchg
iret
or
xor
fsubs
std
mov
neg
and
jp
sub
xchg
sub
pop
and
xor
test
cmc
popf
xchg
mov
adc
pop
rclb
arpl
push
stos
inc
adc
leave
mov
inc
pop
inc
adc
mov
sahf
pop
shlb
xor
cmc
je
mov
repz
dec
sbb
cmpsb
dec
outsl
pop
push
scas
push
dec
sbb
mov
movsl
mov
inc
mov
push
push
or
mov
xor
data16
nop
cli
cmp
test
dec
xor
add
jge
pop
fnstsw
iret
shlb
aaa
cmp
sbbb
jge
stos
popf
sbb
and
les
cmp
sbb
cmp
mov
fs
mov
test
fidivs
les
lds
cmp
mov
sub
push
push
lea
outsl
ljmp
dec
sub
mov
cmc
adc
jl
sbb
push
or
mov
push
hlt
imul
cmpsl
xchg
or
testl
test
push
addr16
ret
cmpsl
pusha
ss
jge
icebp
or
mov
jg
lss
xor
mov
rolb
sbb
test
std
rep
xchg
mov
inc
push
in
inc
pop
xchg
cmpb
loope
push
jecxz
imulb
dec
dec
sbb
out
es
and
push
shlb
push
jns
lcall
cwtl
xchg
xchg
sbb
insl
sbb
mov
addr16
xor
push
dec
xor
leave
jg
sub
ret
adc
or
sub
imul
int3
leave
int3
pop
pushf
mov
gs
popa
mov
sahf
outsb
xchg
and
and
enter
xchg
mov
add
sub
iret
mov
hlt
sbb
inc
leave
imul
jae
shrb
inc
int3
cmp
sbb
rcr
mov
fwait
adc
shl
test
jle
loopne
xchg
mov
inc
push
stos
aam
add
dec
les
xorl
mov
push
add
jg
es
pop
aas
or
sahf
scas
sub
aaa
inc
addl
rolb
addr16
jo
xchg
push
xchg
insb
xor
pop
lock
jle
push
and
or
inc
in
cmpl
sbb
adc
or
or
jg
mov
lret
xor
xor
mov
and
jb
rcrl
mov
imul
arpl
rcrb
adcl
mov
adc
negl
add
addr16
add
stc
pop
mov
push
rolb
aas
mov
rolb
lea
inc
out
dec
add
imul
jl
repnz
movsl
cltd
push
pushf
jmp
mov
push
in
push
pushl
movsb
cmp
loope
cmp
pop
cmpsb
loop
out
add
lea
les
clc
push
mov
ss
mov
leave
cs
in
push
xchg
frstor
sbb
cmc
addr16
orb
idivb
hlt
add
ljmp
and
fistpl
and
xchg
jno
mov
test
nop
xchg
or
dec
popf
ret
dec
es
dec
in
fcmovnb
sbb
jo
xor
fwait
mov
mov
sub
gs
mov
add
aas
mov
dec
pop
bound
stc
sub
mov
jge
jo
movsb
shr
pop
adc
data16
adc
inc
testl
dec
jo
inc
fdiv
or
lods
sub
add
mov
cmp
push
xchg
fisubl
and
lea
addr16
or
mov
jle
rol
das
ret
cltd
mov
adc
sbb
adc
xchg
add
jo
es
or
divl
lret
cli
mov
loope
mov
sahf
lahf
push
sub
mov
xchg
jp
insb
frstor
ja
or
push
loope
pop
shlb
sbb
lods
push
xchg
xor
jp
shll
mov
cltd
lock
sub
imul
inc
add
push
and
xchg
popf
push
push
or
test
pop
and
roll
je
ja
incb
test
aas
int3
pop
lcall
jecxz
rcll
inc
test
test
imul
fdivrs
xchg
pushf
xchg
xchg
dec
ret
sub
inc
push
pop
xchg
orb
mov
xlat
xchg
sbb
fwait
lods
orl
xor
mov
cmc
out
fimuls
hlt
mov
flds
rcrb
jge
jmp
push
cltd
lods
xor
adc
dec
lods
fstp
movsb
pop
sub
mov
lods
xor
sbb
inc
cld
aas
or
mov
leave
popf
mov
xor
stos
push
sub
cmp
sbb
adc
aas
mov
push
daa
mov
test
fs
test
xchg
dec
xchg
das
daa
jmp
xor
cmp
pushl
ret
dec
fimull
pop
mov
sti
outsb
push
rorl
in
pop
or
xor
cmpsl
test
stc
movsb
jno
testl
pushf
cmp
mov
push
imul
loopne
sahf
aas
in
pop
lret
andl
sbb
or
sub
mov
adc
je
mov
cmp
jl
in
mov
cmp
jno
sub
sbb
and
mov
imul
inc
std
and
add
xacquire
cli
or
ljmp
fcoml
or
dec
jge
sub
xor
pop
outsl
sub
pop
cmp
scas
lcall
cmp
cmpsb
fcmovnbe
mov
cmp
dec
iret
pusha
movsl
pusha
add
jge
jg
mov
outsl
xchg
js
pop
outsb
dec
inc
jb
push
sbb
sahf
andb
jbe
lcall
xor
jge
sarb
lret
mov
test
sbb
xrelease
mov
sub
xor
xor
out
out
mov
jp
or
mov
dec
mov
mov
repnz
out
jge
xor
ss
mov
in
inc
inc
stc
das
lock
rorb
cmp
fprem1
xor
and
pop
inc
add
sbb
stc
xor
mov
test
xor
nop
sbb
rcrb
loopne
sarb
out
sbb
pop
out
push
sbb
mov
jo
clc
ss
mov
fcompl
out
fistps
fmull
aam
cmp
shl
sti
lcall
and
dec
mov
mov
aad
dec
xor
jle
fmull
and
jg
pmaxsw
dec
stc
add
aad
fsts
jmp
push
scas
sbb
fildl
setl
pop
xorl
jecxz
adc
fists
test
pop
loopne
insl
lret
movsl
lcall
push
fs
push
ljmp
test
sbb
or
icebp
js
lea
in
push
push
mov
cli
mov
sbb
fildll
xor
cmp
jle
jne
sbbb
fs
jmp
mov
cwtl
jp
mov
cmp
mov
divl
pop
push
xor
mov
pop
sbb
fdivrs
jp,pn
sbb
stos
mov
or
jbe
pop
or
push
ficoms
shrl
jp
int
test
rol
aas
mov
pop
std
ret
jo
jne
adcl
ret
push
imul
xchg
cltd
cwtl
cmpsl
popa
out
dec
stos
xchg
inc
sbb
push
xor
mov
push
cmpsb
adc
xor
adc
addr16
mov
gs
adcb
lea
xchg
xor
xor
shll
mov
mov
cs
in
mov
rclb
mov
mov
xchg
mov
lret
insb
call
adc
ret
mov
imul
inc
inc
or
mov
mov
and
mov
sbb
sbb
shll
pop
pop
fists
push
jno
cli
jo
dec
or
dec
aad
add
mov
inc
out
dec
ret
jbe
mov
cmp
sbb
pop
cmp
ror
je
gs
jmp
mov
jns
jg
sub
pop
int
jne
popa
adc
mov
or
fildll
xor
jle
hlt
imul
sbb
repz
outsb
dec
inc
lock
fs
gs
xlat
inc
js
or
insl
arpl
inc
inc
mov
in
push
push
lods
mov
enter
pop
xchg
out
push
xchg
test
mov
push
lods
jb
fnsave
insl
stos
push
flds
out
arpl
adc
add
mov
sbb
xchg
dec
ret
call
jbe
jp
cmp
inc
xchg
cmpsl
pop
xor
and
adc
push
shrb
or
jecxz
lock
cmp
xchg
jp
mov
in
or
xor
cmp
cwtl
push
sbb
movsb
add
and
adc
inc
adc
jp
dec
cmp
push
scas
dec
dec
movsb
fmulp
shrl
push
cmpsw
and
xchg
xor
sub
mov
bound
add
and
lahf
gs
mov
ret
out
jl
xchg
lret
xor
test
xor
mov
xchg
jbe
jp
lea
movsl
shrl
shrb
popa
inc
cmp
rcll
push
pop
rol
or
fwait
leave
pop
mov
cmpl
mov
xchg
loopne
mov
cwtl
push
xchg
insb
inc
add
popf
adc
push
add
bound
or
movsl
dec
or
enter
ds
inc
dec
jns
cli
inc
ret
into
lahf
mov
lock
loopne
jae
jne
mov
cmp
adcl
sbb
aad
daa
cmp
fsubs
int
mov
adc
testl
jb
mov
jp
xchg
mov
int
stc
aaa
out
inc
cltd
inc
call
imul
cmp
lea
mov
jl
imul
shll
jne
or
mov
das
push
es
les
stos
scas
and
push
popa
cli
mov
out
and
ss
fidivl
cmp
sbb
jecxz
je
push
xchg
add
mov
dec
and
lods
hlt
xchg
sub
gs
cld
adc
in
jae
imul
andl
int
shlb
push
xchg
mov
stos
add
xchg
dec
pop
inc
or
addl
cmp
mov
insb
push
pop
mov
test
inc
scas
addr16
aaa
push
inc
out
jno
daa
pusha
pop
lret
scas
adc
jge
in
pusha
aas
dec
push
ja
add
scas
mov
mov
cmp
sbb
cmovno
xor
push
pop
adc
cltd
repnz
mov
mov
das
enter
add
test
lock
push
imul
cwtl
lret
gs
jg
cmp
test
movsl
sbbb
xor
jns
sbb
xor
cs
js
xor
shlb
or
dec
aas
fs
lods
jns
mov
lods
sub
in
xor
out
in
pop
jmp
push
imul
mov
inc
xor
or
push
xor
jp
sahf
outsb
cs
loopne
in
clc
aas
cld
mov
dec
mov
ret
pop
cmp
in
cwtl
push
rcrb
dec
mov
daa
inc
inc
enter
outsb
xor
jp
mov
test
pop
into
add
lods
in
int3
data16
cmp
lret
push
push
stos
or
mov
add
jae
imul
push
sbbb
lahf
mov
sahf
movb
xchg
push
adc
mov
jecxz
fsubrp
jmp
ja
faddl
sahf
inc
mov
into
stos
push
mov
sahf
pop
xchg
or
movsl
cmc
div
cmpsb
mov
mov
cmp
mov
gs
imul
push
push
leave
xor
fwait
insb
dec
sbb
in
pop
or
and
lock
stc
adc
xchg
enter
push
lret
inc
sub
or
push
jbe
movsb
fisubl
stos
or
movsl
pop
mov
out
xchg
mov
and
sub
xchg
dec
dec
adc
pushl
sub
mov
mov
push
fbld
pop
pop
pushf
fcom
test
push
nop
sbb
cmp
test
ffree
pop
push
xor
and
jmp
hlt
lods
gs
mov
loope
mov
gs
cld
dec
xor
mov
sub
out
xchg
add
negl
fiaddl
cmp
push
je
jmp
cs
xchg
cmpsb
mov
ja
dec
lods
mov
cli
dec
xchg
sub
cmp
iret
adc
leave
bound
push
or
lods
inc
test
xchg
test
lahf
les
jbe
dec
je
fisubrs
xchg
cld
mov
ret
cmp
enter
aad
int3
adc
push
movsl
pushl
test
add
push
cmp
dec
loopne
aaa
shlb
notl
scas
mov
mov
jmp
imul
mov
push
pop
dec
sub
int
push
xchg
cmp
jl
pop
add
mov
incl
add
mov
mov
mov
roll
cmp
xchg
push
push
shrl
adc
cmp
je
aad
lret
fbstp
adcl
xor
call
mov
idivb
imul
ljmp
jbe
pop
addl
push
mov
test
aaa
inc
xor
int3
push
xchg
into
stos
mov
es
xchg
adcb
scas
mov
movsb
sbb
or
mov
lret
pop
pop
sti
idivb
test
mov
push
clc
mov
sub
mov
bound
rclb
cwtl
mov
sbb
or
push
stos
xor
pop
sub
cmc
push
enter
repz
scas
xchg
lcall
push
xor
push
cmp
jae
mov
pop
imul
imul
ja
imul
stc
pop
std
adc
xor
outsb
repnz
cmp
jle
or
jl
jnp
sub
cltd
xchg
stos
jg
sbb
push
bound
inc
pop
mov
mov
mov
enter
fidivrs
mov
in
or
xor
cmp
cmpsb
and
push
sbb
outsb
inc
jg
daa
bswap
inc
int
push
dec
mov
and
gs
jne
push
adc
lret
jle
lods
sub
pop
add
dec
mov
loop
lret
cmp
inc
pop
ss
adc
jge
icebp
cmc
fimull
jo
rolb
out
shll
leave
das
ljmp
loope
pop
and
lea
daa
or
aam
aas
add
dec
inc
pop
and
mov
lock
enter
jecxz
scas
ficoms
jne
mull
in
xlat
mov
jmp
sbb
lds
jle
sbb
pop
std
outsb
xchg
jne
les
mov
xor
nop
or
jno
sub
push
mov
dec
ficoms
dec
add
lcall
out
sub
push
xor
imulb
sahf
add
xchg
push
xchg
dec
jno
sbb
adc
out
pop
popa
cmp
hlt
repz
mov
lea
cld
loop
mov
sub
insb
imul
daa
lods
repnz
mov
dec
fstl
fiaddl
or
cmp
xchg
pop
pop
and
inc
stos
in
popa
cmp
sbb
lret
das
clc
mov
jb
rol
jo
fidivrs
sbb
add
fsubl
jl
arpl
scas
js
es
cmp
loop
mov
push
jnp
mov
xchg
insb
testb
test
sub
sub
clc
ja
loope
lods
cmp
mov
pop
add
or
lret
xchg
in
mov
inc
ss
xor
push
jp
es
push
insb
push
sub
push
out
data16
notb
mov
pop
dec
or
stos
cmp
sbbb
cmp
sbb
loope
in
addl
cmp
xor
cmp
std
lds
and
jg
pop
push
aam
push
dec
arpl
sub
inc
int
cmc
sbb
pop
jp
stos
mov
fldcw
pop
or
hlt
cmpsb
clc
stc
shlb
lock
insl
jno
hlt
out
pop
insl
xchg
push
and
xchg
bound
inc
cli
sbb
fidivl
int
adc
jle
fsubrl
mov
adc
cmpl
jge,pt
pop
in
aad
pop
mov
cmp
xchg
lds
imul
cmpsb
out
dec
movl
xchg
stc
xor
cmp
and
xchg
bound
dec
sahf
sbb
aad
imul
jbe
lahf
push
sbb
fsts
cmpsb
pop
fwait
adc
dec
adc
mov
shl
pop
out
and
jmp
mov
sub
mov
pop
and
mov
or
pop
lret
testl
push
adc
jnp
lods
lea
mov
push
mov
sbb
stos
jge
loope
shrb
iret
lods
add
and
repnz
add
jno
lahf
lock
in
sbb
je
mov
out
mov
cmp
jo
xor
push
jb
inc
into
dec
test
push
lods
in
scas
mov
scas
xor
int
push
out
mov
in
sti
fcmovnu
sub
cmp
addr16
or
mov
hlt
int3
xlat
movsl
test
cmpsb
adc
cs
sub
cwtl
push
push
jle
sub
cltd
push
lret
ljmp
std
xchg
mov
sahf
nop
mov
cmp
mov
repz
arpl
dec
xor
push
je
xchg
div
jp
addr16
rcrb
sbb
popf
fwait
decl
inc
divb
jecxz
cmp
jo
mov
jns
aad
pushf
dec
and
imulb
stos
mov
cltd
roll
stos
mov
in
jl
pop
out
jmp
in
xchg
cmp
xchg
sub
loope
pop
pop
movsl
pushf
adc
mov
mov
jmp
stos
sbb
dec
inc
sub
sbb
test
mov
jge
mov
xor
js
shll
inc
sbb
out
aam
cli
pop
push
xchg
in
lret
nop
daa
xchg
ds
out
dec
ss
jmp
imul
jne
adc
xchg
sub
nop
xor
hlt
cwtl
cltd
and
xchg
cltd
aaa
mov
shr
mov
xchg
xor
cmpb
sub
aam
mov
add
cmp
push
out
and
test
mov
xor
sti
es
sarl
pop
clc
lds
das
loop
lods
mov
xchg
adc
mov
addl
dec
adc
add
out
movsl
adcl
adc
dec
mov
in
call
add
into
sbb
xchg
sub
ljmp
daa
shlb
cmp
push
hlt
aas
lea
repnz
sti
mov
repnz
fcoms
fucomi
jnp
xor
sbb
lret
push
subb
inc
add
mov
je
sub
push
mov
insb
push
sbb
cmpsw
xchg
fisttpl
sti
daa
hlt
inc
mov
iret
cld
mov
mov
fwait
mov
inc
pop
les
sbb
pop
push
lds
push
cld
sub
lahf
in
mov
cmp
mov
idivl
jge
or
stos
jmp
mov
mov
test
add
mov
xchg
push
pop
xorl
sbb
xchg
scas
out
dec
stos
mov
adc
data16
dec
push
jbe
in
pop
fidivrl
add
aas
sahf
call
dec
inc
pop
jbe
mov
jge
jmp
addr16
jg
jle
dec
mov
sarl
push
or
dec
ss
ret
push
out
negb
mov
fiadds
leavew
loope
adc
stc
out
repz
mov
stc
fwait
scas
repz
and
fsts
jecxz
cmp
inc
fld
daa
icebp
popf
dec
xor
jmp
stos
xor
daa
loope
xor
jmp
xchg
add
gs
lcall
inc
push
popf
mov
cmc
cwtl
adc
cmp
lods
xor
movsb
xor
in
mov
jp
insl
add
sub
and
sbb
popf
add
mov
cwtl
xor
into
gs
inc
xchg
push
bound
addr16
mov
fincstp
jge
inc
imul
sti
fs
rorl
nop
rorl
arpl
sbb
jmp
inc
mov
jnp
pop
in
cmp
jb
inc
cmpsl
cmc
scas
adc
jae
mov
inc
mov
sub
pop
rclb
pop
mov
inc
mov
fmul
in
popf
mov
and
mov
jb
aaa
sahf
adc
mov
lahf
inc
and
add
mov
jle
xor
mov
out
jae
movsl
dec
aam
push
push
and
pop
ret
imul
dec
ljmp
out
pop
sbb
adc
mov
cmp
gs
cmp
and
fmuls
sbb
mul
enter
cs
bound
movsl
fstl
mov
push
sub
cmp
mov
cmp
sub
icebp
std
mov
xlat
out
ret
cld
test
or
movsb
push
movb
inc
rcr
lret
xor
fwait
mov
lret
pop
cltd
daa
mov
jl
lea
aas
mov
xor
cmp
test
repz
push
mov
xor
in
mov
repnz
cmpsb
sub
push
mov
inc
ret
mov
sbb
iret
rcll
adc
xor
pusha
sarl
ret
movsl
inc
loope
outsb
aaa
lea
inc
loopne
push
xor
loopne
nop
pop
scas
and
outsl
dec
jne
insb
mov
ds
clc
cmp
in
aaa
jp
xchg
sbb
lret
mov
test
inc
or
orl
adc
sahf
popf
xor
divl
iret
fstps
adc
push
mov
dec
lret
fmull
pop
mov
cltd
mov
pop
sub
mov
or
mov
inc
stc
dec
xchg
stos
jg
cltd
into
jns
orb
push
aam
jmp
add
in
scas
dec
test
inc
jl
addb
loopne
xchg
push
cs
add
adc
push
lea
mov
int3
xchg
mov
pop
and
loope
xor
xchg
sbb
adc
or
stos
pop
stc
sti
testb
sahf
or
addr16
fistpl
cmp
je
fisttps
push
xchg
inc
or
or
test
sbb
aaa
adcl
mov
or
ss
dec
sub
bound
jle
push
out
dec
xor
faddl
popf
fs
pop
scas
call
shl
jmp
loopne
push
aaa
lret
jo
outsl
cmp
pop
mov
filds
not
add
xor
jo
push
push
jns
add
adc
sub
xchg
dec
pop
rcr
lock
inc
clc
into
xchg
mov
rcll
pop
filds
xchg
in
mov
xchg
push
jl
sti
jo
fcmovne
or
mov
and
xchg
cmp
cmpl
push
sub
movsl
push
pop
in
sar
jno
jnp
sbb
fldt
imul
fidivrl
mov
xor
jp
nop
stc
movsb
push
nop
cmp
sahf
pop
xchg
push
add
fsubrl
cmp
push
hlt
sti
dec
shrb
subb
jnp
out
or
inc
and
sub
js
movsb
mov
je
sbb
leave
cmpsl
jecxz
icebp
ja
inc
test
push
jno
nop
insl
nop
mov
mov
xchg
out
cld
repz
mull
dec
pop
fimull
bnd
mov
mov
popa
pop
add
cli
inc
sub
xchg
rcrl
sbb
sbb
push
xor
xchg
xor
mov
mov
stos
pop
data16
cli
mov
into
mov
hlt
pop
pop
das
les
xlat
lods
fmul
sbb
mov
stos
adc
mov
out
rclb
push
xor
pop
jno
popa
iret
jecxz
lods
add
mov
popf
jo
lcall
les
pop
lds
sar
stos
cmpsl
lea
push
push
and
movsl
push
int3
mov
dec
sahf
mov
sbb
mov
dec
push
xor
jmp
outsb
jo
nop
fistpl
test
loop
iret
mov
daa
sub
mov
jb
cmp
xor
adc
mov
out
in
or
test
jb
jg
imull
jecxz
repnz
fisttpll
js
test
js
mov
icebp
pusha
xorb
dec
adc
lret
jnp
mov
xor
sub
jbe
loop
fildll
dec
mov
arpl
and
loopne
or
sahf
xor
push
jno
adc
inc
push
adc
mov
outsl
or
ljmp
cmc
dec
mov
inc
sbb
add
add
jo
push
lret
add
imul
jecxz
in
je
test
out
aam
aas
and
mov
pop
sbb
push
push
rcrb
pop
cmp
jbe
imul
pop
inc
js
push
pop
shl
idiv
cld
rep
aaa
sti
mul
xor
idivb
les
sub
jno
push
mov
mov
test
adc
add
push
cmp
add
jb
push
push
bound
sub
push
scas
mov
and
in
jae
xchg
test
cwtl
test
cmc
jne
add
lahf
aam
inc
data16
push
and
or
xchg
scas
aaa
bound
insb
movsl
or
lahf
js
stos
xchg
mov
lea
sbb
paddd
sub
xchg
and
jmp
in
dec
pusha
jecxz
mov
out
dec
sub
icebp
adcl
xchg
xchg
sub
outsb
flds
pop
push
ja
cltd
lock
negb
lods
js,pn
mov
xchg
add
das
fld
fiaddl
jle
mov
inc
cld
cmc
lret
sub
rol
cltd
mov
xchg
rol
jae
scas
lods
cmc
cli
jge
mov
mov
mov
mov
sub
retw
int
or
jecxz
push
cmp
sub
jmp
enter
lahf
fsubs
insb
sarb
aad
cmp
iret
cmp
xor
dec
dec
push
pop
in
cmpb
jmp
les
and
gs
cs
mov
mov
ret
lret
cmc
pop
pop
mov
leave
sahf
sbbb
shrl
shll
das
sub
fidivs
sub
pop
aad
into
pop
js
inc
pusha
inc
sub
jp
adc
sbb
xchg
pop
xchg
xchg
pusha
stos
cmp
pushf
mov
jno
loopne
fs
cmc
mov
cmp
mov
and
movsb
or
push
and
cmp
sarl
adc
into
ljmp
popa
cmp
int3
xchg
xchg
in
pushf
inc
nop
mov
adc
dec
hlt
cs
sbb
mov
xchg
lahf
xor
push
xchg
xor
out
bound
arpl
insl
je
dec
sub
in
push
dec
sbb
dec
les
fdivs
xor
pop
popf
fwait
sbb
call
fwait
es
xor
cmpsl
push
imul
and
mov
add
in
or
insb
and
xor
inc
adc
push
imul
mov
jmp
inc
sbb
adc
mov
add
iret
xor
hlt
xlat
add
jecxz
and
mov
adc
popf
movsb
jbe
adcb
loop
pop
lds
ds
lods
out
ja
nop
in
aas
mov
call
int
out
xchg
ja
js
in
jmp
mov
and
lcall
loopne
jl
adc
push
jbe
nop
jle
mov
sbb
mov
arpl
inc
jge
inc
sub
pushf
xchg
bnd
inc
mov
fistps
inc
pop
jb
jne
pusha
push
and
push
fldl
enter
int
mov
and
xor
xchg
out
movsl
test
pop
test
out
shll
mov
ja
idiv
mov
cmp
fwait
mov
jnp
fwait
mov
sbb
scas
mov
xchg
outsl
lret
fninit
adc
mov
or
stc
add
add
loope
add
and
cmp
push
js
stos
shlb
orb
cmp
aas
mov
xor
orb
out
lret
push
mov
lahf
push
shll
outsb
popa
dec
cwtl
jnp
pop
cltd
stc
sahf
pop
inc
and
jbe
mov
pop
arpl
enter
lea
daa
es
int3
and
cwtl
std
jnp
dec
push
inc
xchg
clc
add
mov
sahf
ficoms
push
pop
sbb
add
push
repz
xchg
cltd
mov
lahf
mov
fisttps
sbb
hlt
xchg
push
mov
popa
pop
dec
cmpsl
or
pop
cmovns
mov
cmpsl
pop
rcr
jae
mov
sti
leave
data16
and
jne
aam
cmc
fstl
out
ljmp
repnz
sbb
xlat
xchg
sub
cmp
xchg
inc
push
or
xor
sub
int
sub
adc
ljmp
pushf
dec
xchg
clc
out
movsb
jle,pt
fwait
adc
mov
ja
shll
inc
data16
xchg
inc
cmp
adc
jp
adc
lods
fcomi
orl
lret
add
or
or
test
sbb
popf
sbb
std
imul
imul
out
mov
fistpl
jb
dec
dec
ss
ffreep
testb
mov
test
pand
jge
jno
lcall
data16
add
rol
mov
testl
pop
adc
xchg
popa
xchg
cld
mov
jecxz
cmp
or
mov
or
ret
jmp
xchg
pop
push
icebp
repnz
in
adc
dec
mov
mov
icebp
shl
test
or
inc
pop
mov
add
imul
mov
xor
fisubrl
cmp
inc
xchg
pushl
jbe
in
mov
test
push
daa
mov
sub
adc
sub
fdivrl
cltd
sub
test
push
cld
adc
inc
call
dec
jge
dec
sbb
in
fs
sarl
xchg
xchg
fstl
outsl
scas
mov
outsl
nop
jecxz
cltd
popf
lds
pop
sbb
xchg
in
pushf
xchg
nop
pmulhuw
xchg
xor
xlat
dec
les
push
int3
push
adc
jb
stos
dec
addb
mov
jbe
aas
jle
stos
mov
push
ret
dec
jo
sub
jecxz
pushf
sub
push
out
in
and
movsb
sub
sahf
fsubs
iret
xchg
xchg
jl
notb
xor
mov
mov
popf
push
mov
fsubrl
ret
out
je
lret
loope
in
push
repnz
push
sbb
sub
pop
or
pop
add
jp
cmp
jno
lahf
stos
dec
mov
cwtl
fnsave
cmp
ret
rcrb
subb
lahf
and
xchg
pop
call
lods
std
xlat
movsl
outsl
in
in
aam
pop
ret
or
pop
mov
outsb
imul
cmp
or
jnp
shll
addr16
fimuls
inc
mov
popf
mov
scas
ret
iret
shll
ljmp
sbb
add
sub
mov
clc
cmp
bound
cmp
mov
icebp
and
in
xor
and
pushf
sbb
adc
cwtl
mov
xor
out
sbb
clc
js
mov
mov
repz
jb
adc
adc
xor
mov
stc
ss
pop
fisttps
test
pop
mov
cmp
mov
and
push
rcl
popf
andb
aas
fisubl
cmpsl
pop
xor
ror
idivl
sti
mov
notl
mov
fcoml
loopne
inc
cld
pop
pushf
mov
outsb
sbb
mov
leave
jne
mov
nop
fistl
xchg
stos
pop
cmc
xor
jmp
nop
arpl
dec
hlt
push
cmp
jb
add
data16
sub
int3
jne
pop
subl
xchg
in
mov
lds
jne
cmc
xor
mov
flds
shll
lahf
cwtl
ret
aas
aad
mov
mov
push
push
loop
outsl
movb
dec
push
popa
push
fs
pop
fadds
pop
inc
pusha
cmp
stos
clc
int
adc
js
out
lock
push
adc
in
pop
mov
inc
outsl
sub
jecxz
jne
outsl
das
jmp
mov
push
popf
add
in
sbb
in
jecxz
inc
imul
lret
mov
movsb
repz
shll
sbb
insb
jp
adc
mov
bound
dec
xor
out
mov
into
movsb
adc
push
adc
scas
imul
jae
fildll
jo
ja
mov
rol
shll
push
shll
xchg
fwait
aad
sarl
or
push
fimull
call
and
inc
in
add
addr16
in
xchg
push
jno
cmpsl
jb
mov
lcall
popf
cmp
mov
aas
mov
inc
cmp
sti
sti
aas
sbb
cli
pop
in
es
mov
rol
and
ret
pop
psrad
cld
mov
mov
aaa
addr16
mov
mov
out
aaa
cltd
jmp
dec
add
sahf
xor
cmpsb
sahf
and
scas
jne
mov
mov
inc
int3
rol
es
orl
mov
mov
push
clc
lcall
push
shll
adc
cmc
stc
addr16
sbb
insl
lahf
adc
cli
shrb
or
arpl
inc
fstpt
adc
arpl
das
sub
xor
mov
sub
out
scas
push
out
data16
fbld
push
fwait
std
out
or
bound
and
cld
mov
or
cltd
ret
js
call
filds
sbb
push
xor
push
jbe
rorl
jecxz
lea
cld
or
push
dec
mov
xchg
push
jecxz
scas
jae
in
outsl
test
fnstenv
jno
jbe
mov
pop
outsl
and
stos
cmp
sbb
scas
and
jge
inc
shrb
std
xchg
mov
andl
int3
and
hlt
mov
push
add
mov
cmpsb
inc
rcrl
inc
mov
testb
inc
push
and
ret
cwtl
rorb
and
cmp
outsb
mov
pop
lds
scas
mov
insl
mov
ffree
jno
and
mov
loopne
repnz
clc
jl
cmp
or
sbb
je
inc
imul
mov
insb
push
sbb
dec
clc
xorb
jae
nopl
outsb
fcoml
xlat
add
or
cli
adc
xchg
push
andb
or
adcl
mov
dec
mov
mov
sub
jle
enter
lret
popa
cmp
iret
mov
xchg
and
ds
pop
pop
xchg
insb
stc
insb
test
or
xor
adc
outsl
add
inc
nop
and
leave
ljmp
leave
jg
ret
popf
mov
js
loope
cli
loopne
dec
jno
mov
addr16
lods
out
dec
test
mov
lcall
cmp
push
mov
movsl
mov
cmp
jecxz
cmpsb
aam
sbb
cmp
sbb
pop
ret
jmp
adc
inc
sbb
and
dec
dec
pop
fstl
xchg
jne
xchg
jl
lods
sbb
push
hlt
xor
cmc
repz
mov
in
xor
pop
mov
cmpsb
jl
adc
adc
push
daa
mov
les
jmp
ret
jle,pt
test
cmp
stos
inc
jae
shr
fwait
xchg
xchg
xchg
add
sbb
or
jmp
or
xor
cwtl
in
add
arpl
test
mov
imul
sub
mov
pop
sbb
mov
mov
mov
push
pop
lahf
cltd
loopne
mov
mov
cmp
imul
sub
lahf
movsb
mov
dec
jnp
popf
jns
clc
jbe
mov
fcompl
prefetcht0
rcr
adc
loopne
subl
jle
xchg
add
pop
subb
jg
int
xor
adc
xor
xchg
and
scas
mov
mov
rcrl
scas
iret
and
mov
adc
daa
or
jecxz
jns
leave
loopnew
insb
shll
lock
fisubrl
fldt
ret
andl
call
je
pop
or
adc
sub
xchg
insb
dec
test
jne
and
pop
lcall
or
aad
hlt
inc
test
sub
dec
ja
in
lret
adc
push
dec
pop
mov
pop
fildl
ljmp
and
test
adc
clc
or
arpl
aam
rcrb
pop
pop
bound
out
dec
jge
inc
pop
adc
sub
fsubs
push
hlt
jecxz
fucomi
mov
xchg
jecxz
cmovs
pop
aad
mov
repz
repz
dec
and
leave
xor
adc
push
mov
pop
xchg
inc
or
push
mov
test
in
xchg
and
sub
xor
cmp
fisttpll
imul
hlt
outsl
test
fucomp
ret
aas
loopne
push
cmp
jo
les
sbbb
adc
sti
cmp
or
push
cmp
loope
push
jbe
sub
xchg
clc
xchg
jb
push
push
sbbl
insl
loopne
jbe
enter
sub
adc
xor
pop
mov
scas
in
adc
int3
jbe
aaa
sbb
incl
xor
scas
mov
and
adc
cmc
sbb
jnp
jne
inc
pop
xor
dec
loope
pop
fsubp
fisubrl
push
popf
cmpsb
mov
bound
in
mov
repz
sub
data16
icebp
roll
jnp
mov
or
jnp
imulb
inc
adc
mov
push
es
pop
or
repz
mov
iret
fdivrs
je
xchg
inc
xor
jecxz
cmpsb
or
sbb
aam
insb
and
scas
mov
sbb
mov
int
popa
mov
mov
lcallw
xor
aas
pop
inc
mov
cmpsb
sbb
loopne
cs
jbe
xchg
mov
addb
fisttpll
lahf
ss
scas
or
loope
push
test
or
sahf
xor
jg
jbe
scas
cmp
and
jg
push
faddl
xchg
or
ret
adc
xchg
adc
push
push
addr16
outsb
arpl
jle
out
insb
mov
in
ret
inc
jmp
or
pop
cli
mov
iret
es
jbe
scas
pop
out
cmp
daa
aam
test
in
cwtl
add
adc
loop
push
testb
imul
in
dec
or
or
scas
les
jbe
jne
jmp
pop
aas
mov
pop
sub
sub
inc
test
in
dec
xchg
pop
dec
add
add
jmp
xlat
push
and
mov
lret
lods
fmull
adc
cli
nop
repnz
cmc
xchg
xchg
pop
int3
sub
mov
dec
lret
cwtl
pop
inc
outsl
lcall
add
roll
cmp
sub
das
popf
lret
in
out
movsb
push
cmp
popa
mov
test
push
xor
xor
sbb
out
push
pop
jecxz
pandn
cld
xor
stos
dec
jb
addr16
xchg
leave
loope
cli
arpl
adc
mov
bound
in
mov
sahf
sub
pop
sti
outsb
xlat
dec
push
inc
lock
and
adc
jg
mov
push
sarb
out
xor
cmp
or
jp
inc
pop
aaa
xchg
mov
cltd
push
in
gs
add
pop
jns
push
mov
mov
ss
out
pop
sub
arpl
sbb
push
in
dec
aas
push
rcll
bound
xor
sub
cld
call
mull
inc
iret
repz
enter
cs
in
test
adc
sbb
lahf
out
sub
cltd
test
not
jb
mov
cmp
xchg
clc
fcmovnb
mov
les
sahf
das
jp
pop
sub
cmp
xchg
popa
push
dec
leave
fbstp
mov
adc
xchg
test
jns
ucomiss
idiv
dec
mov
xchg
pop
cmp
ret
outsb
push
xchg
mov
stos
shrl
sarl
xor
mov
jl
add
stc
xor
push
loop
imul
jecxz
in
js
pop
sub
or
dec
fimull
xor
xchg
clc
dec
sbb
repnz
sbb
mov
sub
cmp
test
popf
mov
xchg
movsl
sbb
mov
mov
xor
push
and
xchg
pop
lods
and
push
in
inc
adc
ret
pop
xor
mov
int
or
fndisi(8087
js
mov
popf
sub
mov
aas
mov
dec
mov
push
inc
jb
orb
rorb
sbb
mov
je
jl
cmp
lcall
movsl
mov
sbb
cmp
cmp
mov
pusha
adc
xchg
mov
cmp
cli
shl
jbe
cmpsb
cwtl
jo
sbb
cmp
into
sbbl
pop
repnz
out
mov
sub
dec
cmpsl
data16
xchg
fcmovu
jne
inc
jns
dec
jmp
pop
jmp
fimull
clc
bound
mov
push
adcb
mov
jae
xor
inc
mov
bound
in
sbb
ffree
jb
stos
sub
xchg
inc
inc
cmc
stos
pop
cmp
nop
call
and
mov
jae
in
cmpsw
push
aam
sbb
mov
adc
mov
out
sub
dec
enter
aas
lahf
js
movsl
int3
outsb
or
xor
out
repnz
fucomp
push
pop
imul
sbb
push
shlb
sub
pop
lcall
sbb
addb
push
shll
int
jns
ficoml
xchg
push
jno
sub
jle
adc
aam
ja
scas
jecxz
idivb
xor
cmpsl
repz
jo
mov
mov
xchg
fildll
xchg
jnp
push
xchg
sub
shrb
orb
push
jmp
arpl
jno
push
mov
and
mov
rclb
adc
jns
xlat
jmp
push
sub
sarb
fdivs
jecxz
adc
or
dec
ret
sahf
divb
enter
xchg
adc
push
xlat
or
push
pop
jle
push
out
hlt
cld
enter
and
sub
fst
das
jge
adc
cmp
daa
add
inc
push
imul
dec
sub
cmp
andl
add
movsl
ss
inc
cmc
xchg
pusha
mov
shl
pop
or
das
jne
in
mov
push
xor
call
stos
iret
mov
rorb
xchg
mov
arpl
inc
je
in
dec
aaa
dec
movsb
aad
ss
je
lea
sub
scas
das
popf
aad
arpl
xchg
mov
ss
or
les
xchg
mov
dec
mov
stos
xchg
add
lahf
dec
js
cs
rcrb
or
cltd
jo
insb
rorb
xchg
stos
mov
sti
fisubs
jbe
add
jo
mov
push
xor
popf
and
and
mov
pop
jbe
data16
add
jbe
lds
push
flds
push
jmp
mov
out
lea
cltd
bound
sbb
adcb
push
jg
cli
adc
mov
or
scas
and
xchg
sbb
fucomi
loop
sbb
inc
fildll
mov
std
and
jnp
ss
and
addr16
or
push
aam
aam
repz
dec
inc
test
dec
jle
movsl
popa
mov
popf
inc
inc
repz
imul
movsl
pop
addl
push
adc
jb
loope
sbbb
dec
sbb
rcll
in
into
mov
xchg
inc
test
inc
cmpsl
cmp
out
push
andb
out
adc
dec
mov
jl
add
sbb
aam
mov
mov
adc
jg
add
sbb
cmp
insb
jecxz
jns
mov
or
pop
insb
daa
jl
jmp
aaa
push
mov
lock
sbb
sahf
mov
sbb
es
mov
add
cmp
pop
jmp
mov
cmp
in
xor
or
jecxz
leave
or
xchg
jl
in
int
aas
jg
xchg
xchg
fsts
mov
int3
mov
faddl
fidivrl
cltd
int3
add
outsl
testb
mov
hlt
sub
pop
inc
cmp
adc
xchg
and
daa
clc
inc
pop
or
push
xor
stos
cmp
frstor
push
cwtl
andl
out
pop
jmp
dec
xchg
push
or
mov
jmp
xchg
add
jg
test
mov
rcr
jnp
repz
insb
jnp
call
cmp
inc
pop
xlat
xorb
add
int3
add
repz
push
push
push
jmp
insb
pop
mov
lock
mov
ja
mov
xchg
pop
iret
sub
stos
xchg
sbb
stos
mov
push
nop
rcrl
jae
enter
cwtl
dec
push
jge
stos
adc
xor
ds
ret
jb
pushf
add
cmpsb
and
sub
loop
or
lods
repz
cmpsb
sub
rcll
mov
or
inc
lcall
dec
lret
inc
and
ret
aad
imul
sbb
inc
int3
cmc
push
push
lds
adc
sahf
mov
stc
ret
mov
add
xor
sub
outsb
or
jns
xor
mov
push
loopne
aas
pop
mov
xchg
movsb
mov
addr16
adc
lock
adc
stos
mov
push
pop
and
aaa
jecxz
push
cs
mov
cmp
mov
mov
iret
es
sub
daa
mov
pop
in
jo
mov
mov
test
notl
mov
lcall
das
sub
out
mov
mov
mov
pop
add
test
sbbb
jle
int
dec
cmp
mov
enter
pop
gs
or
rcl
xchg
push
cmp
mov
fsubl
jae
mov
mov
sub
adc
xchg
push
jg
jo
cmp
fsubrs
std
xor
mov
cmp
mov
ljmp
loope
sbb
addl
jp
mov
rorl
dec
sbb
pop
out
cwtl
sub
pop
sbb
add
js
inc
sub
adc
arpl
sahf
sbb
mov
push
pushf
adc
jno
pop
mov
pop
xchg
pop
insl
orl
insb
xor
sbb
rclb
nop
jne
xor
cmp
nop
lods
or
into
insl
addr16
pop
xchg
mov
adc
mov
adc
pop
or
mov
testl
or
orl
cmpsb
mov
mov
and
mov
xorl
cmp
int3
inc
inc
shl
pop
adc
mov
pop
test
mov
das
cli
mov
test
adc
inc
mov
dec
pop
xor
xor
cmp
pusha
sub
push
shlb
dec
insb
jo
loop
notb
sbb
push
adc
fdivrs
subl
jae
stc
adc
cmpb
and
mov
inc
xchg
clc
or
out
mov
xor
xor
cltd
ret
sub
jns
xchg
cmp
and
fsubrs
loopne
xlat
sub
xchg
sahf
hlt
loope
cmp
inc
push
add
cmp
movsb
fsubrl
mov
push
rol
cmp
in
mov
mov
loope
add
out
push
les
adc
add
jae
mov
pop
pusha
mov
aam
xchg
fiaddl
xor
and
lods
cld
into
and
mov
sbbb
cmp
and
xor
loopne
cmp
in
adc
mov
jne
inc
pop
mov
insb
sub
mov
xchg
mov
ret
rcrl
sti
test
dec
lret
inc
mov
or
dec
cmpsb
jl
mulb
add
jno
mov
leave
cmp
outsb
push
mov
icebp
push
mov
fs
xor
bound
imul
adcl
hlt
ficoms
cmpsb
test
mov
add
sti
rcr
lret
call
in
sub
push
aam
pusha
mov
jbe
leave
aaa
movsb
stc
xor
nop
adc
inc
fistpl
push
mov
testb
jl
lock
es
xchg
mov
into
xchg
push
rolb
mov
out
adc
pop
inc
loopne
add
test
outsb
ds
test
in
cmp
das
scas
movsb
in
cmpsl
test
ret
sbb
adc
aas
cmp
mov
aaa
add
fmuls
push
mov
sahf
scas
repnz
mov
and
or
sbb
adc
out
fwait
aas
xchg
inc
cmp
scas
xchg
shl
push
pop
xcrypt-ctr
mov
pop
mov
out
mov
and
rorl
inc
add
dec
les
dec
mov
mov
in
leave
iret
je
pop
xchg
adc
into
fimull
hlt
aam
mov
jnp
fstpl
negb
or
sub
cmc
inc
subl
notl
arpl
jo
cmp
or
and
outsb
mov
mov
jae
daa
inc
bound
in
cmp
push
mul
mov
push
mov
ret
hlt
mov
pop
jns
in
cmp
mov
ja
pop
inc
movsb
sbb
jl
aas
out
inc
push
cmp
out
jb
and
pop
inc
shl
mov
jp
lods
xor
and
out
mov
xor
dec
jbe
pop
xor
in
inc
push
clc
inc
mov
pop
leave
gs
cwtl
sarl
ja
mov
jp
lret
xchg
fadds
cmpsb
rorl
outsl
lock
loop
mov
rcrl
pop
in
fadds
push
outsl
xchg
stos
pop
push
cwtl
addr16
cmpsl
mov
xchg
int3
mov
mov
cmpsl
and
inc
xchg
fprem
push
fcoms
stc
lahf
daa
ret
lods
gs
in
cmp
push
test
je
adc
outsb
push
movsb
inc
sbb
aaa
mov
insl
add
lahf
insb
in
adc
daa
and
fdivrp
push
push
lds
enter
clc
push
pop
jle
cli
stos
sub
out
xchg
and
outsl
or
jnp
aaa
and
push
cld
add
pop
fs
das
cmp
add
add
push
cmp
fistpll
das
fstpt
das
icebp
mov
decl
cmc
inc
xchg
shlb
and
sbb
movsb
fimull
lret
xchg
imull
cld
mov
mov
add
xchg
add
fdivrl
push
fnstsw
or
sti
dec
pop
xchg
cltd
popa
sarb
imul
int
jle
xchg
nop
sbb
mov
fildll
cwtl
dec
push
inc
mov
shlb
lods
adc
cltd
std
sbb
cwtl
or
sbb
and
lock
lret
or
in
lock
adc
jp
ror
add
pop
pop
pop
xchg
lahf
cmpsb
daa
xchg
cmp
cmpsb
nop
mov
jb
and
ret
movsl
pop
mov
xor
push
pop
adc
and
and
mov
cmp
call
loope
mov
push
sbb
dec
push
je
jge
xchg
pop
xchg
je
aas
xlat
movsb
xchg
xor
push
pop
mov
push
pusha
mov
mov
push
mov
js
jns,pt
jecxz
lea
adc
int3
lods
push
lcall
mov
push
or
mov
sub
jle
scas
popa
xor
sub
mov
jno
test
mov
cmc
mov
aaa
test
or
xchg
lret
xlat
lret
adc
loopne
bound
aad
xlat
ja
dec
xor
lods
push
incl
jno
jge
mov
mov
data16
lods
lcall
cmp
jmp
adc
dec
addl
push
inc
dec
pusha
insb
push
push
scas
and
add
jg
inc
loope
mov
add
outsl
mov
jno
adc
adc
push
test
pop
jmp
out
shlb
jb
lcall
cmc
incl
orb
add
inc
cmp
and
cmpxchg
cmp
mov
jecxz
data16
out
push
call
xchg
out
shll
xor
clc
cs
xchg
push
mov
clc
or
xor
mov
int
xor
xor
xchg
push
movsb
js
xchg
leave
repz
jl
das
inc
adc
insl
add
sub
addr16
fldln2
loope
sub
add
push
shlb
mov
xor
lods
cmp
adc
fdivs
dec
repz
in
lret
insb
test
adc
jbe
dec
mov
mov
pop
call
std
rorb
and
cld
fdiv
adc
test
sub
dec
sbb
mov
jge
cmc
xor
aad
mov
jle
popa
sarb
jne
lods
imul
mov
mov
les
or
inc
sub
xchg
adc
test
sbb
sbb
mov
add
mov
push
inc
push
adc
jo
xchg
stos
stos
sub
mov
push
pop
lret
mov
mov
sbb
xchg
nop
pop
lods
dec
lcall
adc
mov
pusha
cli
cli
cmp
bound
add
ror
sti
dec
lret
xchg
mov
adc
pop
lahf
sbb
int3
cmpsl
leave
xchg
and
push
enter
jae
icebp
sbb
xchg
xchg
scas
inc
stos
push
inc
jae
lret
cmc
xchg
xchg
xchg
sub
popa
test
add
incb
outsl
lahf
push
push
das
and
js
fwait
jp
fstpt
cmp
push
in
ror
ljmp
orb
stos
sbb
pop
stos
fsts
lcall
popf
lcall
idiv
movsb
xchg
mov
cmp
jp
adc
jns
mov
xor
aas
and
or
push
clc
nop
dec
push
and
push
adc
jp
cmc
in
mov
push
sti
xorl
pop
outsb
sub
dec
and
fdiv
pop
add
test
xlat
in
cmp
stc
inc
mov
test
cmp
scas
test
pop
lods
add
cmpsb
adcb
outsb
sti
sahf
sbb
jns
in
pop
sub
push
xor
push
in
cld
cmpsb
std
test
shlb
insb
test
jae
fwait
gs
outsb
addr16
inc
icebp
adc
cmp
insb
dec
push
mov
mov
sub
dec
pop
iret
push
insb
movsl
scas
in
je
movsb
leave
mov
push
jg
mov
adc
sbb
push
divb
or
movsl
inc
repz
mov
push
clc
xchg
xchg
stos
in
test
xor
popf
stos
inc
hlt
loop
das
jae
pop
mov
movsl
mov
insb
rcrb
mov
ret
sti
pop
push
shlb
dec
xor
dec
dec
dec
les
mov
jnp
fnsave
or
fstp
outsb
dec
ficoms
mov
aad
xchg
pop
push
xlat
es
in
mov
stos
pop
add
imul
fwait
div
push
insl
add
out
dec
das
movsl
pop
lea
popa
fwait
inc
jb
dec
pop
in
out
ljmp
pop
mov
cld
sub
jbe
addb
stos
mov
inc
rcrb
mov
loope
xor
xchg
fmul
mov
dec
add
nop
into
and
push
js
sbb
mov
std
pushf
pop
pop
pop
shlb
pushf
and
cmpsl
js
push
push
gs
pusha
mov
push
pop
push
mov
pop
sub
push
xchg
sbb
hlt
dec
push
inc
dec
int3
mov
scas
add
test
cld
call
jns
mov
or
lret
mov
jo
ljmp
jo
out
fwait
mov
cmp
repnz
loope
nop
fnsave
es
clc
lret
cld
push
adc
js
out
int3
fildl
mov
push
aam
out
or
js
xor
push
mov
subb
gs
divb
ret
or
imul
imul
xor
xorb
or
cmp
mov
out
and
in
loopne
mov
mov
mov
popf
add
pop
and
jmp
xlat
out
jbe
pusha
sub
pop
sub
xor
imul
fs
les
dec
mov
dec
stos
push
or
xchg
addr16
xchg
ret
dec
push
stos
rcrl
sub
cmp
outsb
imul
cwtl
xchg
jne
sub
repz
arpl
and
ds
stos
push
aaa
aaa
les
mov
lea
dec
dec
loopne
test
jae
cmp
mov
repz
enter
test
jns
imul
and
and
inc
lds
add
xlat
dec
mov
add
stos
mov
mov
insb
movsl
mov
movsl
stos
pop
mov
das
and
mov
out
mov
xor
aas
out
mov
aam
ljmp
xor
int3
and
xor
mov
jecxz
xchg
xor
push
fists
add
sub
xchg
jnp
pop
mov
adc
rcrb
lret
inc
out
cmp
push
pop
mov
xchg
mov
cmp
andb
pop
mov
push
xchg
in
mov
cmpsl
push
jns
bnd
adc
inc
pop
push
cmc
mov
inc
scas
cli
std
aas
test
xor
fsubl
or
inc
jnp
push
inc
rclb
mov
cmpsb
dec
stos
mov
fimull
dec
pop
negb
out
leave
jb
dec
or
je
adc
dec
sub
adc
stos
cs
nop
sub
or
xor
mov
popfw
fstps
imul
jbe
lock
cld
push
or
lods
dec
popa
cmpsl
mov
dec
cmp
pop
shl
mov
adc
mov
fst
jge
and
push
stc
test
inc
out
jnp
xchg
fnstenv
jmp
scas
adc
mov
movsl
nop
xor
je,pt
and
iret
cmp
mov
test
out
addr16
sti
xchg
add
sbb
inc
add
jle
idivb
xlat
mov
addr16
nop
dec
jge
mov
sub
push
mov
in
add
add
push
mov
aad
dec
clc
out
add
pusha
sub
shl
nop
xchg
dec
imul
in
data16
in
fwait
lcall
outsb
mov
add
subl
pop
xchg
imul
ds
addb
subl
aaa
xorb
dec
lds
nop
push
pop
inc
cmpsb
test
fcmovb
xchg
sub
mov
jp
push
and
nop
fnstsw
push
jne
aam
and
adc
dec
inc
repnz
imul
out
sub
hlt
jo
fiadds
sub
xchg
and
mov
adc
or
pop
in
pop
repz
test
das
inc
adc
scas
ficoml
sbb
aam
mov
rclb
sub
lods
mov
sub
pop
push
xchg
aas
out
hlt
dec
pop
inc
shl
jo
push
push
adc
push
cmp
addl
gs
jle
push
jle
das
fcmovb
fidivrs
ja
fnstcw
jae
dec
cltd
pop
sarb
fildll
data16
js
cwtl
or
outsl
inc
fldcw
jge
inc
cmp
shrb
scas
or
add
stc
cmpsl
lods
in
pushf
jns
mov
jnp
inc
mov
test
pop
dec
inc
mov
test
jno
test
repnz
fidivrs
adc
lods
in
shlb
cmp
jg
mov
cmpsl
pop
fadd
dec
or
mov
adc
xchg
pop
imul
mov
loopne
cmpsl
fldcw
mov
mov
mov
or
cltd
mov
mov
les
icebp
mov
cmp
imull
adc
xchg
dec
shl
aad
add
push
pop
cmpsl
inc
fdivs
cmp
into
cmp
mov
bndstx
cmp
xchg
adc
leave
xchg
pop
iret
adc
mov
dec
in
mov
cmp
lcall
icebp
jecxz
pop
push
xor
and
sbb
in
ja
pop
adc
rcrb
je
psrlw
sbb
das
bnd
fiadds
out
addb
pop
lea
ret
inc
rclb
ret
sbb
cmp
aam
fldl
push
cltd
out
push
je
add
adc
jle
gs
outsb
movsl
sar
mov
push
insb
movsb
pop
add
or
sahf
lods
out
lods
testb
jo
bound
std
int3
loop
cmpsb
add
test
mov
jo
xchg
ja
daa
gs
pushf
pop
push
lock
pop
bnd
jge
rolb
jbe
pop
xchg
dec
or
daa
nop
xchg
mov
in
movsb
xor
inc
mov
mulb
mov
insb
ret
mov
and
icebp
popa
push
fdivrl
hlt
icebp
fstps
fisubl
cmpsl
push
lods
aam
jno
pop
movsb
mov
aas
arpl
or
adc
test
popa
loope
shl
sbb
js
fcomi
xchg
jno,pn
jecxz
icebp
add
mov
sub
out
or
sub
cmp
das
cmp
dec
inc
or
jno
push
mov
sub
notb
cmp
xor
es
pop
popf
inc
mov
jle
add
pop
repnz
dec
xor
sub
rcrl
mov
push
push
adc
sbbl
in
lret
and
sub
jnp
sti
pop
mov
cmp
push
pop
pop
push
test
sbb
testl
sbb
mov
in
xor
iret
xor
inc
es
push
imul
or
es
rorb
add
add
and
pop
xchg
add
xchg
xchg
push
pop
call
adc
sbb
push
push
imul
jne
or
adc
fimull
pop
jmp
cli
in
jne
mov
test
mov
fs
jnp
xchg
mov
jl
sub
std
dec
inc
ljmp
cld
push
and
faddl
xchg
loopne
mov
cmp
or
cmpsl
xor
sbb
cli
movb
loop
adc
mov
inc
sar
or
jae
add
xchg
gs
daa
loopne
jg
push
xor
loope
mov
call
mov
mov
lcall
mov
pusha
mov
cli
push
pushf
dec
mov
or
and
lds
test
jne
movsb
in
lods
mov
sub
dec
sbb
ret
jp
call
xor
test
jns
add
or
adc
movsl
and
movsl
sbb
jnp
neg
jecxz
fcomip
scas
jnp
pop
jg
stos
fcomi
ja
call
pop
mov
dec
mov
cmc
sub
out
in
int3
out
inc
and
cmp
cmp
cmp
repz
sub
jno
repz
push
mov
es
es
ret
out
sbb
ds
das
xchg
leave
into
jl
adc
or
enter
or
sbbl
cmp
ret
jp
or
xor
pop
shr
addr16
in
xchg
jno
sub
sarb
subl
shll
stos
or
inc
aad
insb
test
xor
dec
jbe
aaa
dec
xchg
das
mov
push
and
lock
xchg
pop
dec
cmp
mov
cs
fisubl
jnp
sub
cmpsl
jp
lea
lods
bound
dec
push
mov
mov
in
jmp
mov
mov
insb
dec
fisttpll
jmp
and
sub
loop
jmp
and
iret
pop
push
sbb
xchg
repnz
loope
or
mov
test
xchg
push
stc
lds
in
out
and
mov
andb
sbb
dec
jb
inc
pop
pop
lret
sbb
jbe
mov
mov
lgs
lcall
call
iret
and
pop
add
movsl
cli
or
pop
add
cmpsl
xchg
hlt
setnp
cmc
pop
repnz
xchg
lret
lret
pop
dec
rcl
mov
out
fisubrs
cmp
pushf
ljmp
es
je
sti
dec
and
jmp
cltd
and
pop
test
in
mov
mov
and
cmp
and
ljmp
in
fsubs
es
push
pop
cmc
sbb
inc
cmp
in
loope
hlt
push
mov
pop
xchg
ss
lods
mov
inc
jo
cmp
cmp
cmp
ljmp
jo
xchg
fidivrl
push
dec
fdivrs
jecxz
stos
sbb
pop
xor
mov
inc
fistpll
dec
inc
adc
and
repz
mov
outsl
testb
lock
clc
push
jle
incb
sbb
imul
inc
cmp
push
test
loope
pusha
imul
lods
stos
je
or
dec
pop
and
repz
mov
bound
daa
daa
bound
pushf
jp
ljmp
arpl
stos
cmp
sub
outsl
xchg
push
into
mov
adc
and
add
and
inc
sbb
popf
sub
imul
lods
stos
sub
icebp
mov
nop
or
mov
test
subl
mov
cmp
mov
data16
scas
push
or
mov
jns
sbb
xchg
pop
push
jnp
sbb
in
mov
cmp
lret
hlt
fisubrl
in
fidivrs
add
cmp
add
fcoms
mov
fdivrs
dec
push
clc
sbb
adc
cltd
lahf
mov
fisubrl
cmp
dec
push
sbb
inc
cmp
and
sub
pop
ljmp
out
ljmp
sbb
loopne
ja
pushf
xor
jl
xor
push
or
sub
jno
mov
shlb
jp
pop
pop
adc
push
jmp
adc
sbb
push
filds
hlt
inc
ret
or
push
mov
add
push
sub
cwtl
adc
insl
fcoms
movsb
push
mov
loopne
fiadds
mov
xor
lods
jl
hlt
jae
outsl
aaa
adcl
daa
mov
inc
inc
cmpsl
xchg
and
sbb
xchg
lods
cmc
adc
insb
mul
push
inc
or
mov
stos
xchg
mov
and
pop
lock
push
lods
adcb
dec
lods
fsts
stos
inc
int3
add
insb
or
xchg
xchg
jg
push
xor
mov
scas
addr16
out
jecxz
cs
push
in
rol
mov
imul
pop
lods
mov
mov
stos
xchg
adc
mov
incb
xchg
xchg
lock
lea
xchg
jb
fcoms
add
adc
out
jmp
mov
movsl
js
add
ds
inc
fisubrs
xchg
mov
filds
mov
lods
enter
sbb
adc
pop
add
stos
xchg
mov
inc
cld
push
mov
arpl
add
scas
xchg
shll
shll
xorb
push
dec
out
jno
cmp
fsubrl
adc
mov
mov
test
inc
inc
imul
jnp
mov
and
pop
movsl
and
adc
lcall
jmp
inc
cmc
sbb
pop
inc
adc
shll
mov
xor
adc
test
or
stos
pop
inc
sarl
and
adc
gs
testb
mov
adcb
add
mov
icebp
lcall
sub
add
push
xor
imul
insl
push
mov
flds
jo
das
and
push
xor
faddp
aas
daa
ret
outsl
inc
lahf
dec
cltd
sar
jno
jmp
xor
xchg
and
add
testb
jge
jb
jg
andb
push
mov
xor
mov
xor
setl
test
jne
cwtl
mov
jmp
je
xchg
xchg
mov
pop
ret
cmpsl
pop
fcompl
sahf
or
cmp
ret
inc
mov
mov
loopne
insb
andl
dec
and
push
fmulp
insb
frstor
mov
sub
test
lea
mov
dec
add
xchg
inc
addb
test
xchg
mov
stos
pop
pop
rclb
in
outsl
push
leave
filds
jmp
pop
jp
pop
sub
sub
rolb
pop
fsubl
xor
cmc
pop
lock
cmp
dec
xor
xchg
mov
iret
xor
das
mov
jp
pop
pop
rcrl
dec
out
cmpsl
and
ss
jl
cltd
pop
add
repz
push
push
lea
mov
push
cmc
cli
addr16
inc
dec
shrb
push
stc
int
in
subl
add
push
fxch
add
xor
push
jmp
add
pop
test
sub
push
cmp
bnd
ret
mov
cmp
sbb
sti
lea
rorl
shlb
adc
loopne
cmc
cmp
cltd
cmp
jno
mov
loop
nop
imul
lcall
pop
sbb
scas
out
pop
lcall
movsb
mov
pop
cmp
pop
mov
sti
inc
aad
mov
and
inc
stc
sbb
xor
bound
outsl
je
mov
lcall
mov
enter
aas
setne
push
bound
in
sbbb
aam
test
fld
inc
std
aam
sub
cmpsl
ljmp
fwait
or
xor
mov
mov
aam
xor
mov
mov
jl
cld
xor
mov
mov
movsl
sbb
and
xor
notl
inc
iret
mov
sub
popf
sbb
test
repz
fcomi
adc
sbb
lods
adc
ljmp
jmp
daa
addr16
lea
sub
loopne
dec
jne
jb
sti
or
div
loopne
int
mov
jno
addr16
gs
pop
dec
jmp
add
roll
test
rorl
pushf
jae
sbb
nop
mov
sbb
inc
rorl
scas
decl
jecxz
mov
rcrl
jne
adc
cmp
dec
push
or
insl
push
outsl
pop
inc
jno
jmp
out
xor
shrl
loop
and
stos
adc
addb
xchg
inc
cmp
xor
test
fsubrs
pop
xchg
test
imul
int3
xor
sub
pop
dec
xchg
lods
xor
mov
iret
loopne
and
lcall
adc
adc
jae
loopne
push
in
int3
sbb
jo
push
push
cmpb
xor
or
pop
aam
mov
shll
test
mov
cmp
std
popa
pop
int
imul
push
sub
cmp
mov
inc
dec
jmp
sub
xchg
mov
mov
mov
mov
adc
cmp
outsl
cmovae
mov
xlat
je
mov
pop
push
or
pop
insb
sbb
pop
sar
call
es
ja
xor
lahf
mov
popf
sbb
adc
add
icebp
int3
sub
dec
add
test
mov
xorb
cmp
arpl
outsb
push
popf
mov
lds
adc
xchg
inc
inc
mulb
mov
out
sub
jmp
push
pop
push
add
test
fiadds
inc
inc
xor
ret
imul
fsubrs
sbb
daa
cli
and
sub
jmp
push
lds
in
mov
cmpl
ret
lds
cltd
xor
das
push
call
movsl
push
ljmp
sti
cmpsb
cmpl
adc
cmp
cmp
popa
subl
pop
into
inc
jne
mov
xor
pop
icebp
mov
and
shrb
mov
out
pop
push
push
lcall
stos
dec
inc
mov
sahf
pop
jns
pushf
or
jns
jmp
repz
stos
sbb
into
iret
js
add
lods
cs
sub
loop
sar
fs
mov
add
popa
nop
outsl
shl
jne
mov
gs
aaa
push
mov
enter
iret
ficoms
test
aam
mov
aam
adc
push
aad
out
xchg
sub
fiadds
sub
mov
jnp
ret
push
add
cwtl
jnp
pop
mov
mov
outsb
loope
fs
in
fwait
mov
cs
movsb
int
or
sub
out
das
push
xchg
les
icebp
xchg
mov
pop
sti
js
add
jnp
lods
mov
out
ds
in
mov
mov
leave
cmp
daa
xor
add
xor
mov
enter
ss
push
fisubrs
mov
cmpsb
sbbb
xlat
sarb
lcall
push
and
mov
adc
insl
rorl
xchg
aam
mov
js
jmp
jmp
mov
lahf
fs
addr16
push
mov
jg
out
cwtl
scas
in
ljmp
hlt
outsb
jge
lahf
sub
popa
aad
inc
lret
repz
pop
push
jmp
daa
push
mov
in
sub
ja
inc
or
cmp
inc
ret
addb
and
jp
fcmovnbe
or
adc
pop
sbb
mov
addr16
jns
or
mov
add
ja
or
cmp
bound
sub
aam
xchg
xor
or
pop
imulb
xor
mov
sbbb
enter
jae
in
adc
xchg
or
orl
andl
cli
dec
rclb
aam
lahf
push
jp
dec
push
test
and
mov
mov
iret
xchg
repz
les
mov
in
cmpsb
cmc
mov
in
cmp
mov
xor
daa
les
int
push
inc
mov
xor
int
inc
pop
out
enter
rcrl
movsl
fisubrs
xchg
sbb
sar
xor
mov
rorl
loop
xor
clc
aad
xor
loopne
cmpsl
and
cltd
pusha
add
mov
inc
loope
dec
mov
clc
mov
dec
sbb
gs
push
outsl
sub
or
test
cmp
out
jb
cmp
inc
push
add
test
mov
shrb
pop
cld
loopne
push
cs
mov
pop
fs
jmp
xorl
hlt
leave
dec
mov
xor
mov
into
inc
push
pop
xchg
sbbb
pop
shll
fistpll
movsl
fiaddl
arpl
pandn
idivb
mov
pop
mov
dec
xor
sub
dec
fnsave
lock
xlat
movsl
sbb
imul
addr16
cmp
dec
pop
incl
xlat
push
in
mov
and
add
xchg
dec
jb
jae
insb
sbb
sub
sbb
movb
dec
jp
rep
jge
fnsave
test
ss
sbb
mov
test
bound
jmp
cmpsb
xchg
push
call
jle
and
xor
jae
mov
shrb
mov
ret
and
sbb
push
mov
fidivs
mov
mov
jecxz
pusha
lahf
jae
jns
ja
add
push
dec
xorb
jmp
mov
cmp
jge
and
xor
into
add
adc
hlt
sbb
jno
inc
inc
mov
push
fisubrs
stc
cwtl
push
es
pop
stos
dec
cmc
ds
loopne
jbe
dec
nop
jmp
stos
sbb
mov
cwtl
pop
xchg
cmp
out
dec
out
je
popaw
shll
dec
push
ljmp
mov
shr
imul
clc
loopne
mov
or
and
shr
lcall
leave
in
test
out
pushf
lds
es
inc
dec
orl
inc
mov
push
lcall
sahf
xchg
xor
pop
sahf
insb
ljmp
fdivl
icebp
xor
push
pop
and
sub
ljmp
test
xor
ja
rorb
out
dec
mov
test
pop
fisubl
popf
lahf
mov
loop
jno
xlat
sbb
pushf
call
popf
jo
cmpb
mulb
add
loope
push
or
test
faddl
enter
lret
add
pop
iret
cwtl
dec
jne
sbb
into
add
jnp
cltd
aam
lea
mov
mov
and
sbb
gs
inc
inc
adc
lret
xor
jbe
push
inc
and
xor
pop
sub
out
jbe
rclb
sbb
jp
loopne
fstl
jg
and
in
aaa
push
dec
lds
je
push
pop
jns
adc
sbb
aad
mov
outsl
vpshufd
sbb
inc
fnstenv
jle
sub
movl
mov
add
mov
sbb
mov
mov
lea
pop
dec
shl
cmp
jns
mov
sub
xor
jecxz
jmp
mov
lea
insb
ljmp
xor
jp
out
cmp
sub
ljmp
push
push
lods
shll
les
inc
and
fsts
pusha
mov
mov
lds
scas
fdivs
cs
dec
loopne
sbb
icebp
or
test
mov
or
inc
frstor
or
mov
jns
push
in
sub
add
shll
pop
ret
or
rcrb
sbb
or
imul
lea
lea
stos
sbb
out
rcrl
outsl
sub
sar
and
push
cmp
repnz
pop
xor
sub
mov
ljmp
data16
xchg
jecxz
mov
adc
ja
cmpl
sub
rorb
sub
sti
js
mov
cld
lcall
pop
aaa
or
mov
and
outsl
lcall
mov
sbb
addr16
cmpsl
neg
sbb
fldl2e
daa
xchg
or
xlat
mov
add
pop
cmp
cmpsl
ljmp
xchg
pop
sub
xor
movsl
addl
notl
and
xor
inc
inc
mov
cvttps2pi
dec
xor
xor
nop
cmpsb
xorb
sub
push
or
out
mov
jbe
je
xor
repnz
cmp
lcall
jnp
or
in
jle
jbe
pop
aam
mov
int
inc
movsb
sub
addr16
jmp
xor
sub
jno
or
sahf
in
arpl
sub
jp
inc
sbb
pop
aad
add
lods
push
cmc
sub
inc
jg
or
gs
bnd
mov
fsts
fnstsw
mov
xchg
sub
cmp
dec
fs
cwtl
addr16
push
xchg
adc
mov
divb
pop
mov
stc
dec
and
lea
pop
int
jno
jb
clc
sub
mov
into
pop
pop
in
dec
stos
pop
and
lods
cmpsl
add
sti
jle
xor
xchg
popf
ret
jle
test
in
in
es
push
mov
ja
mov
mov
aaa
push
lahf
jns
xchg
mov
pop
xchg
mov
mov
iret
bound
in
cmpsb
aam
stos
pop
pop
and
add
daa
insb
lods
test
ffree
xchg
stos
repz
pusha
adc
ja
jnp
dec
lods
loope
shll
clc
inc
push
dec
in
pop
xchg
test
cli
or
arpl
mov
jmp
xchg
xchg
stos
adc
push
shrb
aaa
movsl
les
arpl
lods
sbb
ret
aaa
lods
jns
das
pusha
fstpl
adc
repz
jl
cmpsb
pusha
outsb
sbb
lds
jecxz
pop
popf
scas
std
fildl
test
sbb
push
dec
xchg
push
test
mov
pop
jl
fidivrs
ja
or
or
fstl
test
popf
int3
mov
dec
inc
das
aaa
out
mov
xchg
sahf
push
push
rcrb
pushf
lcall
cmp
pop
lret
fstpt
mov
mov
or
in
les
push
stos
fstpt
or
daa
sbb
push
lahf
ret
mov
loopne
cmpsl
jecxz
movsb
adc
mov
mov
fmuls
push
lods
mov
push
in
rcll
xor
repz
hlt
lds
add
cmp
ja
in
call
addr16
aam
jno
and
add
addr16
mov
ljmp
in
lcall
int
fsubrs
mov
mov
loope
adc
scas
cmp
in
pop
mov
filds
lahf
lret
notl
stc
lret
ja
fwait
sti
xor
xchg
fisttpll
iret
js
out
lret
push
mov
pushf
xchg
jl
dec
push
mov
decb
mov
inc
mov
pusha
jmp
push
jnp
pop
xchg
mov
cmp
sti
jno
mov
jl
lods
mov
stc
pop
xor
sub
js
popf
and
addl
mov
inc
pop
push
fwait
shll
int3
xchg
xchg
jo
out
daa
test
mov
fldcw
lods
enter
les
pop
lcall
test
out
dec
pop
xchg
add
daa
gs
sbb
inc
cli
ss
ljmp
movsl
push
adc
mov
lods
shll
arpl
sbb
in
mov
push
inc
and
dec
mov
out
push
push
inc
movsl
lock
jle
sbb
xor
jae
mov
push
js
das
subl
ret
rorl
mov
ret
dec
insb
inc
sbb
out
loopne
testl
cli
lea
ret
pushf
adc
inc
sub
fxch
arpl
lret
add
dec
sbb
dec
rorb
pop
inc
icebp
pop
jle
jge
jb
jmp
cwtl
mov
fs
insb
sub
lea
cmp
imul
int
stos
xlat
fnsave
rorl
pop
dec
adc
das
adc
or
mov
and
cwtl
jo
movl
outsl
testb
sub
sub
or
xor
fsts
daa
hlt
aad
arpl
sbb
outsl
cmpsl
movsl
ss
mov
cli
jbe
pop
xor
inc
sub
pop
or
xchg
mov
xlat
imul
mov
jne
cs
fisttpll
mov
out
pop
mulb
test
sbb
aas
jmp
cltd
insb
push
aam
push
ret
movsl
test
mulb
cltd
popa
lahf
ret
add
add
rcr
popf
insb
rcll
cmp
sub
js
mov
or
out
fldcw
pop
out
fneni(8087
imul
mov
jb
imulb
pop
jp
sbb
and
rclb
nopl
clc
rorb
fpatan
into
ficoml
imul
lret
out
outsl
push
movsb
stc
pop
pop
and
lcall
jg
xor
sub
sub
and
and
add
or
mov
cmpsb
mov
cmpb
mov
sarl
int3
lcall
js
fisubrs
mov
adc
push
loop
fcmovbe
push
loop
ficompl
add
fsts
mov
push
xchg
add
bound
sbbb
pop
inc
inc
dec
push
loope
xchg
mov
cmp
sub
jae
pushw
or
ret
mov
pop
rorb
push
scas
adc
pop
mov
call
dec
inc
sbb
xchg
lods
mov
mov
mov
xor
adc
or
adc
jnp
pushf
or
stos
xor
mov
inc
movl
mov
mov
pop
add
jns
loopne
repz
mov
fsubr
test
sub
dec
enter
xchg
mov
ss
sti
mov
add
xor
arpl
inc
jno
cmp
rcrl
mov
int3
sub
jp
sbb
test
imul
iret
pop
nop
xor
stos
push
dec
xor
and
cmp
jg
add
clc
aam
scas
scas
jb
jge
and
lcall
mov
pop
nop
sub
ljmp
pop
les
shl
xor
cmc
insb
inc
cmp
mov
lods
inc
xlat
pop
mov
and
stos
dec
pop
out
adcb
pop
das
shrl
insl
loopne
cmp
adc
dec
xchg
ret
mov
mov
cmp
pop
arpl
pop
out
fdiv
mov
mov
scas
je
imulb
adc
pop
fstpl
push
cs
sbb
scas
movsb
outsl
mov
cs
push
ds
fisubrl
push
mov
push
addr16
shrb
inc
lds
adc
nop
fisubrl
loop
cld
out
pop
sub
lea
xchg
out
cmc
push
sti
ficoms
mov
push
and
pop
inc
xchg
pop
sti
jecxz
shll
mov
fucom
lcall
orl
pop
dec
adc
iret
dec
popf
jne
jns
push
xor
sarb
mov
add
mov
mov
pop
sub
aad
mov
loop
push
aad
and
mov
hlt
adc
shll
fucomi
sarl
bound
cmpsb
stos
inc
shrl
mov
xchg
jne
lret
lods
int
mov
bound
or
and
mov
mov
dec
scas
xchg
fildl
mov
mov
pusha
dec
push
or
mov
repz
mov
add
mov
repnz
data16
outsl
shrl
stos
or
mov
add
inc
pop
jnp
jg
repnz
lea
mov
push
fisttpll
add
mov
mov
mov
call
int
sub
pop
pop
jge
ja
out
xchg
test
xor
mov
add
pop
addr16
fnstcw
xlat
int
lea
imul
addl
bound
push
add
in
xchg
sub
fsubs
filds
ljmp
cltd
inc
pop
jmp
cltd
sbb
xlat
dec
in
and
das
sti
dec
mov
push
lret
adc
push
add
jmp
sub
adc
lods
insl
in
pushf
xchg
xor
mov
or
stos
jmp
cmp
inc
stos
sub
cmp
fidivs
repnz
clc
mov
call
sbb
jo
nop/reserved
sbb
es
rolb
xor
or
int
in
aad
xor
mov
je
xlat
jge
xlat
dec
xor
adcb
xchg
cld
pop
stos
or
orb
push
outsl
sub
aaa
dec
jb
mov
rcr
rolb
cmp
lahf
adc
jae
push
xor
hlt
xlat
ljmp
lret
sahf
push
sarb
aaa
aaa
and
popf
or
sub
out
cmpsl
pop
sbb
orl
mov
das
jne
out
xchg
inc
push
in
inc
outsl
or
ret
mov
in
adc
sbb
jbe
and
ja
jmp
in
or
scas
pop
fcmove
notb
fs
and
lcall
push
in
xor
mov
in
adc
cld
les
int3
mov
dec
pop
xchg
rorl
lods
push
jae
cmpsb
pushf
pop
in
xlat
adc
rclb
mov
sbb
push
mov
daa
lods
push
es
add
daa
mov
cmp
jl
cmp
lods
mov
in
add
and
adc
xchg
movsb
add
ss
popf
or
insb
lret
cmc
mov
lretw
pusha
outsb
pop
xor
pushf
daa
pushf
mov
das
pop
cmc
mov
loop
push
mov
sahf
sbb
rol
fmull
and
or
stc
sbb
adc
out
lds
mov
mov
jbe
mov
fists
inc
sbb
inc
cmp
loope
adc
mov
lret
add
into
jae
cmp
adc
insb
pop
repz
mov
aad
push
cltd
cmp
hlt
cmc
push
das
cmpsl
mov
mov
add
jg
es
lcall
cld
cli
test
repnz
aas
inc
pop
pusha
sahf
inc
es
add
js
jle
cmp
jmp
cwtl
ljmp
mov
and
xchg
sahf
cwtl
pop
fwait
out
push
or
mov
fmull
push
mov
pusha
mov
aaa
out
xchg
ds
mov
cmc
fs
push
adcb
dec
and
jmp
test
cmp
adc
dec
fimuls
hlt
fucom
test
mov
and
sub
out
jge
test
out
dec
dec
pop
outsl
xchg
lock
lret
in
fnstsw
mov
stc
daa
or
rorl
aas
xor
sbb
call
mov
mov
sub
or
sarw
xchg
aam
jp
jg
cmp
sub
ss
xchg
in
repnz
mov
inc
sub
lcall
mov
dec
sti
xor
insl
lret
jle
sbbl
pop
sbb
cmp
mov
mov
daa
push
add
pop
in
xchg
jmp
test
mov
rcrb
sbb
push
filds
jno
test
pop
in
rclb
pushf
popf
cmp
jb
push
ret
or
push
mov
test
sahf
cld
clc
jg
subl
je
fnstsw
inc
aam
and
popf
sbb
jmp
in
leave
jno
mov
fcoml
imul
fstl
outsb
lods
inc
pop
push
mov
mov
shll
arpl
popl
js
adc
ljmp
sub
enter
movb
mov
iret
outsl
sahf
push
mov
addr16
js
inc
mov
mov
mov
mov
cmpsb
xor
or
mov
inc
pop
inc
sbbl
push
dec
xchg
jp
push
in
dec
adc
xchg
ds
or
pushf
add
jg
xlat
inc
into
mov
xor
adc
faddl
lret
pushf
mov
movsl
jne
mov
leave
sub
into
mov
shrl
jp
pop
xchg
int3
add
pop
dec
movsl
enter
fs
pop
repnz
push
mov
sahf
adc
orb
ljmp
movsl
mov
adc
push
pop
fneni(8087
inc
xor
cli
insl
ficoms
and
in
push
jge
inc
pop
adc
test
leave
jge
mov
shll
sub
xchg
pop
adc
push
cmp
sub
pop
or
imul
sbbb
or
clc
inc
mov
jge
and
jb
les
adc
xor
sub
push
ss
repnz
push
cmc
mov
pusha
dec
js
push
cmpsl
inc
lahf
fs
fs
mov
into
inc
insl
pop
adc
mov
jae
adc
or
idivl
in
xchg
and
dec
push
lahf
pop
mov
pop
stc
cmc
and
sub
mov
push
mov
cmp
dec
push
and
cld
sahf
jmp
mov
pop
ljmp
mov
xlat
out
jl
fstl
jmp
push
pop
xor
sbb
aas
add
xchg
das
fisubrl
inc
dec
lret
inc
jns
dec
popa
adc
push
push
sub
cmc
push
push
ds
lcall
xchg
push
mov
push
push
xlat
mov
inc
push
xor
sahf
jne
mov
enter
jae
or
aam
lcall
sbb
pusha
gs
adc
or
add
sbbb
mov
repnz
out
sbbl
add
add
jne
dec
and
stos
in
dec
jmp
aaa
adc
inc
ret
pop
fstps
cmp
jo
push
or
lcall
es
iret
std
sub
andl
dec
jae
or
cmp
imul
test
movsb
or
add
xchg
out
idiv
ss
adc
fs
inc
lods
dec
aam
clc
mov
jo
jp
mov
and
and
push
push
jmp
in
shll
push
push
push
mov
jne
mov
lods
xchg
rcr
lret
cmp
sbb
mov
xchg
arpl
mov
cltd
not
and
call
icebp
testl
and
ja
enter
std
leave
test
jg
fcmovne
cmp
and
addr16
xchg
int3
js
or
out
or
xchg
ds
pop
or
loope
push
dec
leave
inc
push
gs
cmp
xor
movsb
das
es
xchg
mov
insb
pusha
sahf
stos
dec
dec
mov
inc
push
push
in
adc
sub
scas
xchg
push
mov
icebp
adc
jbe
mov
mov
add
incl
xchg
loope
lea
push
pop
out
jg
sub
and
cwtl
hlt
xchg
shrb
sub
je
test
push
pop
sub
cmpsl
mov
adc
mov
jmp
in
daa
cli
es
rorb
adcl
inc
fstpt
xchg
fcomi
lds
sbb
and
loopne
add
enter
jo
sbb
test
lods
mov
cmc
jae
jmp
rcr
adcl
or
iret
xor
arpl
pusha
mov
inc
stc
pusha
mov
inc
fs
lods
xor
pop
mov
pop
aas
enter
dec
sti
xor
dec
cmp
add
out
dec
push
out
in
in
and
or
fldenv
mov
pop
jl
add
jo
pop
pop
adc
jecxz
fcmovnb
add
in
leave
shll
fildl
mov
jecxz
cs
popa
mov
jb
cmc
mov
sbb
mov
cmp
pop
lret
call
xchg
leave
into
xchg
mov
fisubs
insb
xchg
ja
or
jno
xlat
out
repnz
test
or
sub
mov
lcall
sbb
ffreep
outsb
pop
lahf
cli
mov
outsl
add
daa
jo
pop
out
mov
lcall
mov
imull
or
outsb
mov
pop
repz
mov
addb
push
pop
adc
xchg
mov
loop
mov
jle
mov
pop
in
lea
mov
loop
and
rcll
push
dec
decl
daa
mov
xchg
inc
push
shlb
pop
jmp
push
adc
jp
add
jnp
test
push
sub
testb
mul
rcr
or
mov
mov
xchg
xor
dec
mov
jmp
movsl
in
pop
jo
arpl
add
movsb
and
lods
mov
cmp
popa
out
jne
dec
repnz
pop
pop
adc
loope
push
jns
popf
mov
mov
pop
insb
add
adc
cmp
mov
outsb
into
pop
xchg
sbb
fst
push
movsl
add
mov
push
pop
push
fsubrl
push
jl
jnp
test
xchg
into
and
icebp
push
add
insb
adc
mov
fs
shl
jns
cld
add
mov
dec
dec
out
and
inc
pusha
push
sti
js
out
push
cltd
cmp
popf
cmp
dec
dec
dec
jl
imul
push
in
mov
dec
cmp
test
mov
push
mov
pop
lsl
ret
in
sbb
xchg
loope
pavgb
into
shl
xchg
push
lods
popf
call
mov
je
xchg
pop
xchg
orb
adc
mov
dec
sub
xor
decb
add
cmp
and
cld
pushf
jne
rcll
fldt
push
xor
or
mov
sub
pop
fadds
jl
jl,pt
lods
cmp
rcl
andb
or
sub
test
dec
insb
imul
fsubrs
sbb
inc
sahf
sub
out
roll
push
nop
jl
xor
xorl
mov
mov
cmp
jo
mov
into
jns
push
dec
jge
shr
scas
es
dec
fs
mov
pop
divl
jae
xor
popf
cld
ds
fstps
sub
and
decl
mov
cmpsl
inc
jo
int3
ret
ja
xor
clc
jl
and
sub
xchg
sub
or
clc
ret
nop
and
cmp
cmpsl
dec
into
call
lcall
jp
test
out
mov
test
dec
push
inc
add
mov
adc
shlb
add
xor
jns
imul
mov
pop
stc
add
aam
xor
inc
mov
cld
sbb
push
adc
push
mov
push
jle
stos
jns
jne
loope
push
cmp
pop
jb
shlb
rorl
movsb
jle
sbbb
mov
pop
jmp
cwtl
sub
adc
adc
cs
mov
in
mov
fisttpl
dec
icebp
sbb
call
sbb
nop
cmp
out
fidivrs
hlt
scas
xchg
push
pop
inc
jo
dec
int3
lock
mov
jmp
inc
adc
push
sbb
mov
fisttpll
leave
push
mov
dec
pop
push
inc
in
inc
lret
push
mov
xchg
or
mov
inc
cmp
les
add
inc
das
dec
xor
mov
movsl
data16
shll
call
jg
or
les
and
mov
leave
mov
cs
jmp
aad
aad
stos
pop
out
xor
adc
dec
je
lds
jle
popa
pop
or
test
jmp
xor
mov
mov
push
cmpsl
nop
jne
adc
add
and
xchg
das
mov
mov
ja
loop
cltd
push
int3
imul
mov
pop
dec
dec
inc
pushf
int3
rorl
rorb
lds
push
pop
push
ret
int3
cmc
cmpb
inc
mov
xor
pop
or
cld
dec
xchg
popf
test
ljmp
test
into
shrl
push
lock
jp
daa
insb
push
mov
dec
scas
pop
popf
insl
xor
fists
dec
adc
lods
adc
mov
ret
inc
imul
mov
dec
add
pop
popa
sbb
cmp
sub
ffreep
xor
cmp
cld
std
push
idivb
rorl
cwtl
lods
inc
cmp
lds
aaa
add
push
push
outsw
testl
aad
test
std
mov
fimull
fnstsw
int3
add
or
out
sbb
sbbb
out
jnp
loope
push
pop
jmp
ret
dec
inc
mov
out
push
cmp
adc
lds
leave
dec
inc
negb
push
xlat
mov
cld
fldenv
mov
adc
push
sub
in
sti
iret
ja
pop
stos
xor
repnz
out
sti
insl
pushf
mov
lcall
int
dec
dec
ss
out
jns
cmp
push
push
inc
sahf
imul
cmc
xor
std
mov
pop
pop
test
cld
mov
sub
dec
sarb
fwait
mov
ja
jno
jl
loope
incl
jp
clc
divb
fdivr
sub
js
out
daa
and
jns
repz
fs
flds
mov
adc
dec
iret
scas
mov
test
es
insl
jnp
add
or
int
enter
cs
push
movsb
adc
movl
jno
push
daa
pop
push
pop
adc
popa
mov
stos
dec
cmp
xor
xchg
aas
sahf
insb
xchg
push
dec
push
outsb
std
or
push
fucomp
sub
adc
orb
jmp
sub
jno
or
adc
inc
in
push
stos
popf
jno
mov
iret
daa
inc
sbb
inc
xchg
les
jbe
jo
fstl
mov
int
add
dec
or
and
daa
xchg
sti
or
jne
lods
pop
pop
or
test
je
int3
dec
jmp
add
test
jle
sete
dec
stos
sbbl
dec
jp
mov
fdivr
pushf
clc
dec
in
lods
mov
jmp
leave
inc
movsb
xchg
adc
push
and
pop
testl
sub
sbb
push
adc
pop
xor
pop
stc
push
nop
lahf
mul
ficomps
icebp
xor
pop
ss
inc
push
dec
cwtl
mov
popf
or
pop
out
test
das
or
inc
xchg
dec
lahf
shll
jg
mov
inc
push
sbb
jbe
xchg
adc
out
cwtl
sub
nop
mov
jmp
movsb
fwait
aad
aas
xor
stc
in
xor
cmpsl
jle
cmp
int
les
mov
loope
pop
rolb
push
pop
dec
xorb
push
scas
sbb
cmp
loopne
mov
sbb
lret
cmp
loop
mov
and
mov
into
addr16
inc
loope
push
lock
jne
imul
dec
sub
or
nop
and
sti
lds
inc
add
flds
addb
jns
xchg
jae
dec
xlat
xor
daa
rorb
adc
push
dec
xchg
xor
outsb
scas
nop
jle
jno
pop
xchg
add
xchg
jbe
adc
out
or
push
inc
ror
or
std
inc
push
cmp
or
lret
inc
mov
xor
mov
in
jnp
nop
add
cmc
cmp
fcmovnb
xor
pop
xor
mov
mov
hlt
lock
lods
push
jecxz
nop
mov
mov
addr16
mov
adc
incl
xlat
mov
icebp
jecxz
cmpb
adc
xchg
jge
shrb
mov
stos
call
mov
sub
push
xchg
lds
pop
or
push
sub
jmp
jmp
outsb
loopne
leave
insl
jmp
mov
andl
or
cwtl
adc
inc
pop
cmp
in
add
push
mov
lcall
xlat
push
lds
mov
sbb
out
add
or
sahf
fs
push
adc
addr16
dec
push
dec
in
pop
dec
xchg
iret
and
and
aam
pop
cli
imul
jl
dec
ja
pop
je
orl
cmp
mov
xchg
movb
jg
fnsave
xchg
insb
and
cmp
pop
push
shrb
stos
cmp
jno
scas
sub
aam
mov
repz
stos
mov
push
insl
aam
int
imul
xchg
sub
repnz
xchg
or
cmp
sahf
push
jp
imul
fisttpll
les
ret
arpl
adc
or
in
aas
xor
pushf
mov
mov
push
fs
loop
jecxz
in
jne
inc
popf
stos
icebp
stos
imul
loope
pop
jl
adc
xchg
push
stos
mov
adc
xor
mov
scas
cmp
lock
bound
ds
loop
push
add
mov
das
call
cmp
imul
ficomps
jns
movsb
hlt
sarb
filds
mov
pop
movsb
in
sub
sti
and
and
or
inc
mov
in
xor
stos
xor
leave
dec
sub
ds
mov
nop
push
fstps
adc
outsl
add
xchg
sbb
lcall
test
testb
mov
push
fists
adc
sub
sarl
xlat
inc
test
jmp
sbb
jnp
xchg
fbld
bswap
jnp
xchg
xchg
mov
imul
and
int3
and
cmp
add
inc
repnz
xor
lods
nop
jno
add
jg
sub
imul
mov
mov
and
dec
and
loop
fstl
icebp
jne
xor
dec
xchg
jnp
sbb
out
ret
sarb
xchg
loop
jb,pt
pushf
pop
sbb
adc
cmp
cmc
and
cmp
imul
jle
popa
aad
inc
das
pop
int3
pop
adc
lods
pop
sub
mov
xchg
dec
adc
jecxz
movsl
xor
cmp
fdivrl
cld
outsb
das
out
mov
mov
mov
outsl
jb
pushl
in
mov
push
insb
add
in
jno
lahf
xlat
mov
push
cs
arpl
xchg
int
and
test
mov
dec
pop
shr
add
scas
pop
mov
out
xor
mov
cld
pop
push
pop
movsb
gs
xchg
jb
push
in
push
bound
psubsw
fidivl
lds
insb
pop
arpl
call
cs
push
loop
clc
rcl
aam
lds
shl
shlb
mov
jb
or
mov
lea
in
add
cmp
scas
or
mov
sub
imul
xor
pusha
sub
dec
lahf
in
test
mov
push
scas
movsl
push
mov
mov
mov
mov
popa
and
test
pop
imul
push
pop
fs
xor
int3
mov
sub
fisttps
sbbl
mov
push
loope
loop
or
es
sub
sbb
xor
jecxz
cltd
arpl
xchg
insl
dec
push
inc
add
cmp
cmpsb
fnstcw
adcl
es
mov
pusha
es
jo
pop
pop
in
imul
lods
xchg
bound
dec
movd
out
inc
rcrl
jg
jecxz
sbb
fildll
in
pop
pop
push
adc
jbe
jo
inc
adc
xchg
pop
xchg
jnp
fcoml
cmp
movsb
stos
imul
adc
and
sub
popf
xor
xchg
push
xchg
scas
cmp
or
sahf
mov
adc
idivb
xor
sub
cmpsb
dec
adc
inc
xchg
scas
cmp
repz
push
fstl
lret
aaa
or
test
push
cmp
lret
icebp
gs
fwait
pop
pop
scas
fs
sbb
in
mov
mov
mov
cli
inc
pop
sub
cmp
bound
cmp
je
out
lods
pop
add
popa
cli
and
andl
add
cmp
mov
dec
push
test
jp
adc
xchg
xor
mov
enter
mov
repnz
fidivs
cld
lods
sub
lods
roll
pop
push
shrl
jl
flds
in
xchg
adcb
iret
jno
lcall
out
adc
dec
daa
shlb
pusha
pop
and
xchg
dec
inc
sbb
daa
incb
fisubl
dec
addb
lret
fbstp
stos
dec
insb
and
fs
rcrb
inc
and
mov
imul
mov
hlt
jge
and
frstor
cmp
dec
or
jne
mov
sahf
pop
mov
outsl
push
hlt
mov
inc
or
pop
fimuls
arpl
subpd
sub
scas
fadd
fsubl
mov
mov
push
dec
andb
subl
mov
cmpsb
int3
or
fcompl
mov
dec
mov
xchg
mov
popa
jp
mov
fs
in
dec
mov
fsubl
pop
mov
js
cmpb
dec
int
test
jno
cmovb
dec
lret
mov
xchg
out
int
or
mov
cld
fcoml
fisubrl
jb
cmp
pop
mov
fwait
dec
mov
out
dec
xor
xlat
lock
push
fbld
xor
std
pop
fldenv
clc
cmp
sbb
xor
xchg
xor
js
jg
decb
cmp
sbb
jp
add
add
das
adc
mov
fstpt
out
insl
jge
lock
data16
mov
aam
hlt
lret
lds
jg
mov
stos
movsl
in
fsubl
cmp
xchg
bound
xchg
mov
cld
pop
pop
lahf
inc
and
xchg
pop
mov
shll
cmp
adc
cmp
cmc
rcl
sbb
bound
in
out
inc
sbb
hlt
mov
testb
hlt
insl
aas
jecxz
inc
outsb
loop
aam
leave
jns
arpl
addb
xor
mov
dec
sub
push
stos
cmp
or
add
or
or
in
pop
call
hlt
or
xchg
or
ret
hlt
xlat
ss
imul
rcrb
push
fildll
int
pop
inc
mov
cs
mov
sbb
push
test
mov
testb
ret
inc
call
xchg
or
in
mov
dec
push
jnp
mov
mov
dec
xchg
out
jnp
mov
dec
aad
cld
clc
mov
leave
push
sbb
and
jmp
movsl
inc
ljmp
sahf
bound
inc
xor
and
inc
aad
das
jp
mov
jae
dec
mov
rep
mov
mov
xor
clc
mov
rorb
xchg
decb
cltd
incl
add
jle
add
jge
jno
cs
bound
fdivrs
mov
cltd
dec
pop
mov
sub
cmpsl
mov
testl
out
pop
ds
in
mov
jp
cmc
or
ds
adc
inc
adc
add
add
jmp
popa
inc
frstor
cmp
xor
movsb
mov
push
out
xor
pop
sbb
dec
jnp
jnp
imul
push
add
mov
mov
les
out
frstor
xchg
jle
dec
ret
and
cmp
push
negl
jb
mov
ret
or
adc
sbb
adc
test
sti
lods
add
bound
adcl
jle
ret
cmp
add
xor
stos
and
insb
add
mov
nop
std
mov
ret
push
movsl
rclb
fildll
shrb
push
jmp
rorb
mov
pop
inc
pusha
enter
ret
in
test
push
jg
imul
push
mov
sub
das
dec
out
sbb
mov
pop
insb
jne
ror
add
dec
in
mov
cltd
xor
or
xchg
stos
in
sub
shlb
sub
push
dec
lcall
fistps
push
mov
jmp
pop
xchg
inc
inc
aam
repz
imul
and
clc
push
cs
out
sti
or
pop
sub
mov
mov
les
mov
and
fcoms
test
int
dec
aam
pop
mov
push
sbb
call
adc
outsb
adc
xlat
fwait
jp
jge
test
adc
movsb
andb
arpl
add
xor
cli
ficoml
mov
mov
dec
pop
push
inc
push
xlat
lret
jns
out
out
xor
cmc
or
aaa
imul
jae
std
int
es
mov
in
jnp
push
mov
int
mov
pop
sub
lock
mov
mov
lds
cmpsl
or
test
cmp
add
ror
lods
xor
push
out
bound
pop
out
mov
jecxz
sbb
std
nop
mov
mov
sbb
sub
push
jo
add
cmp
inc
sbb
adc
mov
mov
push
call
insb
and
pop
jne
iret
mov
sub
test
gs
popa
mov
cli
or
xor
push
int3
jecxz
pop
cmpsb
out
xchg
pop
test
cs
mov
out
xlat
pop
cmp
xorb
test
push
int
js
pop
out
inc
repz
lret
in
ss
cli
mov
cmp
dec
fwait
lea
xchg
mov
cmp
fisubrl
data16
test
pop
mov
or
sbb
popa
std
and
popa
and
fwait
adcb
pop
lahf
das
lahf
or
test
sti
lods
aad
push
inc
and
filds
andb
dec
and
push
jecxz
lods
cmp
push
movl
inc
push
addb
cmp
aad
or
xchg
mov
mov
sbb
jne
insb
ja
add
int
bound
xlat
xchg
adc
pushf
add
daa
push
out
sbb
pop
jecxz
dec
sub
mov
out
jo
cltd
in
in
or
xchg
gs
rolb
cmpsb
into
xchg
adc
imul
cmp
iret
std
sbb
negb
loopne
hlt
dec
in
js
mov
lds
test
cmp
xor
push
jmp
or
les
movsb
cmc
fdivs
lahf
fwait
out
or
pop
pushf
stos
ret
gs
fcomps
dec
and
mov
mov
movsb
pop
aam
dec
jge
fidivrl
ficomps
inc
dec
xchg
cltd
and
mov
sbb
push
push
ljmp
fiadds
arpl
push
sub
test
sub
aaa
dec
out
mov
mov
mov
testb
lds
push
jl
jge
lcall
js
jb
jmp
insb
mov
pushf
mov
movsl
fldl
cmp
in
mov
or
lods
mov
adc
sbb
dec
mov
fildll
mov
das
repz
cmc
cmp
jmp
mov
into
mov
mov
and
repz
incl
js
cli
lock
incl
faddl
sbb
test
nop
imul
aaa
test
add
insb
sbb
jmp
jp
aas
or
sbb
jo
nop
ljmp
fbld
jne
mov
mov
mov
jnp
jge
inc
aas
dec
or
lahf
ljmp
mov
nop
pop
mov
data16
nop
push
fbld
pop
test
je
xchg
push
dec
mov
inc
xor
aaa
test
movb
clc
inc
add
mov
cmpsl
scas
pusha
ja
jbe
shl
add
and
repnz
jl
lahf
andl
push
iret
jp
shl
gs
mov
xor
clc
cwtl
sbb
jbe
and
sub
outsb
xchg
ds
jecxz
and
pushf
pop
mov
nopl
sbb
mov
or
inc
jbe
xchg
push
mov
sub
scas
fucom
lods
xchg
and
mov
inc
roll
dec
aaa
or
call
arpl
adc
in
push
xchg
loope
inc
jle
out
inc
pusha
inc
inc
dec
stc
mov
popa
pusha
imul
mov
add
mov
dec
je
inc
inc
cld
das
jb
aas
pop
push
rcll
pop
sub
push
mov
ljmp
adc
mov
mov
mov
jl
stc
pop
lock
lret
cmc
stos
fs
pop
test
sub
movsb
out
mov
pop
pop
test
push
packsswb
movsl
sub
testl
xor
les
test
mov
adcb
xor
mov
sub
jnp
and
in
add
fcomip
and
dec
hlt
mov
sub
int
ret
movsb
jmp
loope
dec
adc
mov
les
xor
jo
sahf
data16
adc
mov
mov
stos
xchg
hlt
adc
add
adc
loopne
mov
std
xchg
int3
adc
sub
lcall
fwait
mov
stos
dec
cld
fwait
lahf
dec
mov
fbld
inc
popa
jbe
imul
popf
dec
fistpll
xchg
xlat
cmp
cltd
out
pop
lea
inc
lret
jns
and
mov
loop
stos
adcl
push
inc
in
sarl
les
cmp
push
cmp
hlt
pop
or
sub
jmp
cmp
fildl
xchg
add
aaa
lods
ds
pop
lahf
enter
fwait
adc
lds
or
xor
cmc
roll
mov
and
loop
jb,pt
and
sbb
or
mov
fwait
or
sub
xchg
outsb
popa
mov
mov
xor
aaa
cmp
test
incl
insl
jb
push
xchg
js
clc
outsl
cmpsb
std
decl
scas
sahf
fwait
pusha
push
push
shlb
mov
imul
inc
aaa
xchg
inc
loope
dec
push
cmp
fnsave
mov
sbb
add
xchg
push
add
stos
cmpsl
loope
out
jbe
in
sbb
inc
call
jg
fmulp
outsl
or
in
inc
push
outsb
and
popa
jmp
sub
dec
repz
sbb
fcoms
xchg
xchg
push
mov
in
lret
lret
push
adcl
imul
dec
inc
pop
dec
dec
or
mov
into
into
jle
mov
xor
xor
sbb
mov
stos
std
fbstp
lock
aad
aaa
xor
popf
pop
push
adc
fnstcw
sbb
outsb
inc
lcall
dec
mov
std
cmp
stc
inc
bound
stc
fistpll
mov
xchg
jmp
cmp
adc
mov
xchg
scas
push
mov
jnp
mov
sbb
pop
xchg
out
dec
popa
pop
xchg
adc
insl
test
add
shrl
dec
std
jge
daa
loop
loope
xor
sbb
or
sub
jge
movsl
fcomip
push
xchg
mov
test
enter
int3
loop
mov
loope
fisubl
js
and
jb
ja
inc
rol
in
push
pusha
lds
add
lods
cmpsb
adc
jnp
sub
sub
cld
fwait
je
dec
dec
cwtl
xor
fpatan
test
and
bound
push
xchg
or
pop
sbb
aas
jecxz
fisttpl
call
pop
imul
jno
mov
dec
mov
rcrl
loope
and
adc
filds
mov
imul
sbb
or
or
pop
das
frstor
and
adc
into
loope
push
mov
jp
mov
orb
xchg
popl
push
pop
xchg
cmc
mul
addr16
adc
test
iret
cmc
outsl
loopne
cmpsb
inc
loopne
mov
mov
in
mov
mov
cmp
fcoms
mov
fisttpl
cld
push
daa
sbb
xor
and
inc
aaa
mov
sbb
icebp
ret
in
inc
mov
enter
pop
mov
push
les
stc
popa
add
dec
inc
push
fs
fs
fs
int3
jge
adc
pop
xchg
jno,pn
pop
insl
pop
addr16
pop
xor
aas
out
cmp
inc
lret
fmull
fs
push
pop
sarl
fmuls
sub
sbb
popa
sub
data16
stc
jo
mov
pop
bound
sub
mov
ss
es
xchg
xchg
stos
push
fstpt
sub
rcll
in
inc
in
inc
jno
sub
add
xchg
sbb
xor
mov
pushf
fisttps
cmpsb
scas
loop
dec
leave
or
and
inc
cltd
adc
rcrl
rcrl
xchg
push
sti
aaa
or
sti
outsb
pop
test
loope
mov
in
adc
mov
daa
nop
gs
sahf
ret
outsl
dec
inc
fldcw
adc
daa
mov
pop
push
ret
ds
sahf
sub
add
test
data16
cmp
imul
sub
xor
xor
push
dec
inc
adc
loope
into
stc
push
fmuls
push
enter
enter
push
jge
push
inc
mov
push
xor
dec
cmp
mov
pop
in
pop
cmpsl
out
lods
test
cltd
mov
jle
xor
divb
out
inc
bound
stos
jecxz
and
stos
mov
shrb
push
pusha
and
mov
jo
or
stc
inc
lods
enter
leave
and
test
cmp
cmc
xor
mov
call
inc
mov
gs
iret
aam
lds
test
mov
add
shrl
out
addr16
xlat
lds
inc
mov
or
popf
xor
pop
ljmp
mov
fs
jb
pop
inc
sub
pop
ljmp
push
in
cld
xchg
idivl
aaa
sbb
orl
jnp
ret
std
mov
inc
fnstsw
sub
test
clc
mov
mov
mov
pop
jns
adc
lcall
loop
xor
jns
sar
add
inc
jg
daa
jnp
aas
add
xor
adc
dec
jno
dec
lret
fincstp
mov
and
jne
mov
insb
xchg
xchg
cmp
test
jb
dec
push
add
lods
jae
daa
sub
mov
xor
adc
pop
jecxz
add
leave
pusha
fiaddl
cmp
in
aaa
arpl
lock
mov
pop
pop
sbb
inc
inc
jae
ja
xor
dec
test
mov
shlb
data16
mov
or
in
stos
xchg
dec
push
cmpl
es
lods
lock
xor
sahf
cwtl
lock
je
adc
dec
js
jge
xchg
mov
fdivrs
and
cmp
mov
sarl
insb
loop
repz
adc
dec
es
dec
mov
bound
push
je
or
iret
push
loopne
inc
adc
cmp
cmpsl
jnp
stc
cld
pop
add
arpl
cmp
xor
push
lcall
aas
jl
fwait
jae
lock
jmp
cmp
cmp
in
lds
add
sti
ja
jae
and
ljmp
dec
adc
mov
mov
jbe
fsts
inc
xchg
das
cmp
jl
icebp
push
sbb
adc
jnp
movl
push
add
aad
orl
pusha
mov
or
cmp
icebp
jge
dec
xchg
in
add
das
inc
add
or
cmc
sub
sub
insb
or
aaa
scas
mov
and
popa
dec
jmp
jl
mov
jo
lds
aaa
push
mov
cmpsl
movsl
out
rcrb
add
cmp
jns
cmpsl
hlt
or
sub
push
push
ljmp
xor
mov
ret
pusha
cmp
xchg
mov
lret
sti
sbb
cli
out
jo
jne
mov
or
jno
dec
or
mov
mov
xchg
clc
insb
mov
lret
jecxz
shl
in
adc
in
fisttps
jg
mov
rcr
lds
jle
sbb
pop
add
fdivrp
or
scas
mov
andb
add
push
cmpb
cmc
cmp
imul
rolb
insb
hlt
in
mov
or
rorb
and
inc
jne
cli
xchg
sbb
adcl
ss
and
add
aad
xorb
and
testl
arpl
popa
jg
aas
inc
sbb
lods
xchg
xchg
mov
andl
pop
in
add
add
in
fisubrl
dec
lods
lahf
cmp
or
shrl
leave
sbb
dec
stc
es
clc
jb
dec
and
sub
insl
test
xor
jge
adc
clc
add
lret
push
fidivl
adc
jmp
movsb
insb
bound
xchg
push
mov
test
jg
rclb
pop
mov
mov
cli
icebp
or
or
mov
sbb
ds
add
mov
push
xchg
pusha
jle
xchg
movsb
sti
bound
xor
jecxz
orl
jnp
aad
xlat
mov
push
leave
sub
jecxz
fwait
push
mov
inc
stos
mov
mov
rcrl
mov
stos
sbb
mov
ret
sbb
imul
adc
movsl
cmc
call
dec
mov
test
cmp
cli
loope
roll
cmpsl
mov
xor
das
pop
mov
test
cmp
mov
aam
in
jge
push
imul
dec
jns
and
cmpl
sbb
aad
test
xor
mov
movsl
out
push
cmpsl
jge
lahf
or
adc
xchg
inc
jp
dec
cmp
dec
ljmp
lret
repnz
cmp
push
aas
mov
aad
adc
dec
ljmp
jge
push
push
jbe
insb
ljmp
pushf
cli
inc
es
add
push
jmp
push
lods
sub
jno
pop
adc
and
andb
jg
test
adc
ds
jl
adc
fisubrs
inc
ds
fisubl
das
mov
dec
das
roll
add
or
out
add
out
cmpl
or
iret
fs
pop
inc
rolb
mov
adc
inc
jge
mov
in
jg
dec
out
add
aam
das
mov
sbb
dec
test
jns
dec
roll
adc
jecxz
cmp
outsl
stos
xchg
shlb
add
xlat
mov
jnp
dec
sarl
dec
iret
lahf
mov
pop
cmp
je
cmpsl
ljmp
or
add
in
xor
sub
pusha
cwtl
loope
push
jnp
loopne
jecxz,pn
es
sub
xor
jno
push
bt
stos
mov
lret
cwtl
and
call
addb
out
mov
jo
adc
mov
inc
adc
cmp
in
das
cmp
icebp
out
ret
stc
pop
loopne
cmp
mov
in
stos
out
pushf
mov
imul
cmp
outsb
sbb
dec
outsl
imul
cmp
test
les
orb
mov
or
popf
scas
imul
push
or
stos
repz
aas
hlt
fcoms
xor
adc
adc
daa
push
jo
xor
nop
aad
jecxz
mov
je
xlat
push
or
jecxz
dec
push
fidivs
lods
loope
jo
xchg
mov
test
pop
dec
xchg
add
lret
ja
xor
inc
xchg
push
dec
jb
push
cmp
std
mov
scas
dec
loope
mov
mov
and
push
xor
fnsave
or
es
fdivrl
imul
mov
sbb
jg
lods
mov
push
cmc
adc
xchg
pop
das
stc
fisubrl
into
xor
aaa
dec
sbb
inc
ret
loopne
filds
movsb
mov
sbb
clc
inc
stc
push
mov
int
jno
push
add
fsubrl
mulb
and
cmp
pusha
addr16
push
call
xchg
inc
xor
add
pop
jb
mov
lcall
fisubs
repnz
mov
push
mov
and
ds
pop
xor
fists
enter
aaa
jns
cld
lret
fcoml
loopne
push
cli
cmp
int
out
jge
fcmovu
lret
cwtl
dec
sub
dec
sub
mull
gs
in
roll
in
jp
in
mov
les
mov
test
jae
loop
fsubl
and
mov
mov
jmp
xchg
or
cmp
clc
fs
jne
fldl
fisttpll
lret
xchg
cmp
xor
cmc
int3
pop
cld
ret
xchg
popa
leave
aas
ljmp
insb
scas
sub
adcl
ljmp
mov
test
cld
inc
push
adc
leave
lods
or
pusha
ja
gs
test
sub
mov
add
gs
or
rclb
xor
stos
cmp
and
jg
cltd
movsl
jbe
test
pop
andb
fldl
shll
dec
jb
pop
pop
dec
mov
scas
insb
mov
gs
mov
sbb
or
add
mov
out
mov
ret
sub
push
xchg
fld1
sti
pop
mov
inc
dec
or
int3
xorl
out
pop
cmp
std
inc
fldl
xor
lret
mov
dec
or
jecxz
jg
enter
std
popa
aas
push
or
add
cmp
mov
movsl
aaa
mov
fwait
pop
test
pusha
popa
mov
xchg
sub
call
enter
loopne
les
pushf
cwtl
cli
jno
test
icebp
cwtl
push
nop
xchg
push
jle
ja
aam
xchg
cmp
inc
leave
xor
jmp
xor
stc
adcl
jle
add
es
push
mov
inc
sub
mov
lret
std
mov
xchg
xchg
pop
das
subb
in
sarl
test
jle
mov
lret
mov
pop
xor
cmp
mov
daa
inc
cli
pop
ficomps
jl
add
cmp
add
repnz
xor
cmc
push
xchg
lock
adc
pop
popf
inc
add
mov
jnp
ds
add
out
pcmpeqb
mov
pop
aas
and
das
rolb
lret
roll
mov
pusha
lock
mov
dec
adc
jg
int3
sarb
stos
cmp
daa
push
movsl
out
cmp
ja
ds
jo
icebp
out
xchg
ret
test
daa
or
and
cmp
mov
push
subb
js
xchg
push
jmp
cmpsl
cmc
add
popf
pop
xchg
and
adc
mov
pushf
insl
lcall
in
clc
and
fstl
fmuls
sub
or
test
push
or
aaa
mov
cltd
repnz
mov
and
leave
negl
test
pop
test
xchg
mov
add
fistps
scas
pop
mov
sub
jp
mov
out
mull
ftst
fwait
cmc
cmp
loopne
clc
sub
xor
pop
mov
xchg
rcrb
or
mov
shlb
mov
pop
and
in
out
fsincos
in
xchg
cs
mov
mov
sbb
subl
movsl
xor
imulb
mov
cmpsl
mov
xchg
cs
adc
ljmp
jo
repnz
scas
neg
xor
or
dec
dec
inc
shrl
push
jne
lcall
idiv
sbb
pop
loopne
js
stc
or
dec
ljmp
jne
pop
imulb
xchg
outsl
cmpsb
int3
adc
pop
fs
lahf
nop
mov
mov
dec
daa
lock
popa
leave
hlt
pop
enter
shl
fs
pop
sub
outsl
pop
je
ss
jo
test
or
sub
fs
xchg
test
roll
add
adc
xor
popf
inc
sbb
into
jne
lahf
jle
dec
imull
int3
imul
dec
push
jne
cmp
push
cwtl
imul
push
outsl
ljmp
rclb
jns
xchg
push
fiadds
push
xor
push
scas
mov
mov
xchg
pushf
xchg
add
xchg
pop
inc
xchg
mov
sahf
insl
test
adc
aaa
stc
movsb
lret
ret
lss
add
enter
loop
loope
cmp
mov
mov
adc
aam
out
jnp
xor
notb
or
xchg
push
sbb
dec
shrl
inc
lods
sahf
inc
and
and
adc
setns
ret
inc
std
cmp
sbb
js
es
pop
sahf
rcrl
gs
and
mov
sbb
cltd
and
popa
scas
sbb
addl
es
ss
xor
insb
aaa
pushf
sub
lahf
push
jle
mov
stc
movsb
leave
cwtl
arpl
leave
inc
out
cwtl
loope
jne
inc
mov
dec
daa
push
jbe
cmp
push
bound
add
lea
jno
ret
data16
mov
jge
mov
mov
push
push
test
sbb
xor
movsb
hlt
and
ss
mov
push
out
mov
outsb
mov
in
or
test
push
ja
lods
fbld
cltd
mov
jo
push
scas
mov
test
out
aas
pop
movsb
xchg
xor
jl
cmp
lcall
jne
or
lcall
mov
repz
xchg
das
inc
adc
and
jle
test
mov
jne
mov
into
mov
lret
movsl
pusha
xchg
fstpl
xor
add
add
cli
cmp
rclb
mov
inc
lea
and
insb
xor
mov
sahf
mov
dec
xchg
jb
loope
sbb
call
dec
mov
add
cmp
pusha
mov
xchg
push
add
dec
in
dec
mov
sbb
pushf
fwait
mov
mulb
cmp
cmp
mov
pop
imul
in
enter
repnz
out
jmp
adc
and
mov
imul
imul
and
out
ljmp
mov
xchg
mov
imul
mov
sbb
sbbb
jne
pop
mov
mov
xchg
sbb
negl
cvttps2pi
inc
mov
xchg
ljmp
testl
add
leave
pop
sub
jle
sbb
cltd
push
fs
scas
xor
jns
fldcw
sub
fsubs
pop
mov
push
mov
stc
je
lods
cltd
mov
fs
in
test
xchg
dec
push
lahf
xchg
enter
mov
push
daa
mov
pop
cli
and
pushf
ret
pop
mov
stc
arpl
mov
cmp
int
addb
ds
and
cmc
or
adc
ljmp
xchg
inc
jnp
mov
incb
out
ds
add
aaa
lea
push
mov
sbb
ret
xchg
fimuls
test
mov
test
pop
add
cli
addl
call
jmp
inc
repnz
jp
stos
aam
mov
pop
mov
jp
or
test
sub
xorl
push
sub
jae
imul
dec
flds
mov
mov
nop
jae
ljmp
nop
lock
fbstp
mov
pop
mov
pop
aas
ret
mov
xor
inc
out
sbb
jo
jb
jnp
sub
ja
inc
sbb
xor
jbe
and
loopne
dec
xor
lods
ljmp
int3
call
inc
cwtl
inc
pop
jno
aam
push
xchg
fbstp
sub
or
sbb
pop
mov
push
inc
lahf
pop
cmpsl
call
sub
inc
std
mov
sbb
pop
inc
dec
subb
xor
adc
pop
mov
jno
out
sub
inc
jle
movsl
xchg
je
cmp
mov
sahf
insl
dec
sti
adc
out
pusha
adc
xchg
xacquire
mov
mov
jl
mov
int
stos
repnz
cwtl
and
sub
jp
je
xchg
or
jnp
add
aad
in
mov
fmul
dec
ja
aad
jge
add
ja
and
movsb
sbb
mov
lea
jge
je
test
jp
ja
test
mov
push
mov
or
lock
sub
add
mov
xchg
xchg
push
xlat
fmuls
adcl
mov
nop
add
pop
movsl
jbe
ljmp
pop
test
icebp
xchg
iret
mov
test
push
and
cltd
jbe
in
mov
int
adcb
jbe
pop
xlat
fsubrl
test
pop
ret
jnp
cmc
sub
push
es
es
adc
loope
mov
out
add
mov
cltd
scas
adc
fcoml
inc
fisubs
enter
and
insl
scas
xchg
mov
and
push
mov
lret
inc
es
mov
test
pop
mov
push
sub
fs
sbb
incb
add
fcmovnu
mov
frstor
fs
pop
jo
ficompl
les
lret
leave
arpl
pop
frstor
adc
jge
scas
and
add
test
aaa
and
popa
cld
out
adc
aas
cmp
loopne
dec
adc
hlt
mov
hlt
mov
test
sub
push
addb
push
mov
xchg
pop
push
lahf
out
mov
mov
xor
imul
outsl
sbb
inc
psllq
nop
mov
adc
or
icebp
add
sub
out
cli
sub
pop
xor
mov
or
add
mov
jne
scas
sbb
xchg
cmp
lea
pop
out
movsl
sti
enter
xchg
jo
repnz
nop
xor
mov
das
cmp
jecxz
dec
ficomps
jbe
xchg
std
cwtl
push
arpl
mov
sbb
adc
cmpsl
in
mov
fsts
xchg
cmp
ds
andl
popa
or
dec
pushf
cmp
lret
cmpl
add
sbb
ja
mov
jg
loopne
cld
mov
jns
mov
scas
aas
pushfw
jp
lret
shll
icebp
leave
sbb
cmc
fisubl
mov
lds
push
mov
pop
scas
mov
adc
shrl
mov
and
inc
pop
stos
sbb
testb
int3
sub
mov
stc
loopne
jbe
fildll
pusha
push
loopne
jmp
lds
jl
movb
aas
into
sbb
add
cltd
xchg
jg
or
mov
and
test
lret
shrb
push
pushf
adc
sbb
into
gs
jae
sahf
xlat
xchg
mov
cmp
pop
cmp
insb
lret
sub
daa
shrb
xor
jnp
push
pop
inc
mov
setnp
inc
jmp
push
or
cld
sarl
push
push
out
dec
mov
jle
mov
sbb
mov
inc
test
jmp
insb
mov
mov
jb
dec
nop
sbbl
test
jo
add
cli
mov
and
jp
clc
pusha
push
inc
stos
or
mov
pushf
movsl
xchg
mov
jmp
jnp
xor
fsts
lret
or
sarb
pop
into
cmp
sub
out
push
iret
mov
ds
loop
ljmp
mov
lret
add
sub
push
push
mov
inc
mov
pop
mov
inc
pop
andb
icebp
cmp
pop
lods
in
jg
cmc
push
xchg
sub
jecxz
dec
or
mov
and
mov
mov
jl
jle
cmpsb
mov
mov
test
add
mov
lock
les
push
fucomi
leave
or
push
pop
clc
bound
push
les
jae
jge
aaa
jno
aas
and
or
adc
bound
mov
push
push
jecxz
or
repnz
mov
leave
decb
xchg
mov
dec
xor
je
stos
fdivs
xor
mov
cmpsb
into
and
out
push
je
out
add
mov
pop
ret
cli
dec
fwait
test
sub
push
xor
push
hlt
repz
fldt
stos
leave
sbb
mov
dec
cmp
sub
mov
mov
shrb
mov
sbb
xlat
aad
adc
jl
dec
push
shll
push
pop
icebp
mov
mov
shlb
in
jge
jae
pop
mov
pushf
xor
pop
jp
xchg
jae
cmpsb
nop
shrl
add
fdivl
inc
adc
mov
pop
cmp
fisubs
popf
mov
xchg
popa
mov
arpl
pop
dec
repz
push
cmc
nop
sub
push
outsl
decb
stos
lods
pop
fs
push
into
jmp
ljmp
mov
mov
mov
jae
cmpsl
pop
jno
xchg
aas
cmp
push
negl
lds
pop
pop
dec
or
or
cmp
jnp
mov
lea
jp
gs
sbb
jne
adc
aad
and
jno
call
int
gs
cli
jo
stc
mov
loop
out
add
mov
xor
mov
fisttpll
add
fildll
push
jg
pop
pop
sahf
jbe
inc
add
jne
shrl
test
es
xchg
les
adc
cmp
es
cmpsb
xchg
push
stos
inc
mov
push
push
and
jle
and
dec
jmp
jmp
test
inc
and
out
push
pop
cmp
js
inc
mov
fisttpll
sarb
push
xor
out
mov
outsl
mov
mov
jle
xchg
insb
mov
imul
outsb
mov
cmc
ds
and
loope
or
mov
push
mov
lret
jbe
test
jnp
and
pop
and
ror
leave
mov
subl
and
shrb
ja
push
dec
cltd
mov
addr16
std
das
adc
nop
jbe
jecxz
orb
xor
dec
aaa
or
pushf
xor
sbb
sub
mov
sbb
fistps
xchg
ljmp
jg
rcrl
and
mov
aad
mov
cltd
xor
push
sbb
ret
lret
insb
lods
negl
jmp
cmp
sub
cmc
jecxz
sbb
lea
imul
cwtl
test
push
into
enter
mov
push
cltd
ja
jo
int3
inc
je
sbb
dec
sbb
xchg
mov
adc
cmpsl
mov
shrb
cs
mov
xchg
fsub
outsb
pop
aam
aad
xor
popa
rorl
inc
out
out
push
add
push
fbld
inc
aas
dec
pop
or
dec
mov
sbb
mov
jp
mov
jle
jae
les
int
out
jp
outsl
mov
mov
fwait
xchg
mov
out
sahf
xchg
cmp
jno
ljmp
shrl
lods
inc
cwtl
cmp
sbb
adc
pop
aad
jb
sub
xchg
dec
shll
jno
sbb
xchg
jae
inc
and
jle
push
scas
sub
pop
das
inc
adc
inc
adc
loope
xchg
mov
sub
scas
outsl
addl
jl
aad
sti
pop
mov
jb
xchg
add
or
test
neg
ret
pop
mov
push
dec
roll
dec
cs
int
ffree
sub
xor
inc
add
cmp
repnz
test
xchg
or
pop
es
ja
push
pop
insb
xor
inc
repnz
js
lret
enter
dec
mov
jg
clc
and
mov
and
fidivrl
arpl
arpl
add
jnp
push
sbb
dec
xchg
mov
push
or
push
push
adcb
das
iret
repz
sub
cli
fistps
jmp
js
fucomi
sahf
mov
xor
js
test
sub
mov
test
xchg
inc
loopne
out
cmpsb
push
cmp
xor
add
add
push
and
inc
inc
ret
add
cmpsb
fdivl
mov
mov
mov
mov
jns
adc
fisttpl
xor
jmp
xor
cmp
ja
push
rol
outsl
pop
in
fstpl
mov
add
enter
jno
xor
popf
cmp
push
add
mov
mov
jg
scas
cli
cltd
sbb
dec
cmpb
aaa
jmp
andl
xchg
cmp
fnstcw
lret
xor
dec
out
inc
pop
lret
fiadds
jle
push
es
inc
pop
sbb
out
es
ljmp
cmpb
movsl
xchg
es
sub
mov
dec
sahf
hlt
cmp
adc
loope
sub
push
dec
adc
gs
mov
ljmp
mov
jge
mov
jg
pop
aaa
outsl
int
cmp
insb
lcall
outsb
pop
push
cmp
int
cld
addr16
ljmp
xchg
lods
pop
jmp
subl
shlb
sarl
push
lahf
and
out
stos
mov
leave
add
xchg
xchg
outsb
jns
mov
sub
imull
inc
xchg
xor
add
inc
leave
jb
mov
mov
sub
int3
or
push
xchg
jl
mov
adc
mov
jg
adc
sbb
pop
out
adc
jno
push
dec
pop
and
ja
ljmp
das
out
ficompl
xchg
xchg
pop
mov
jnp
pop
cltd
mov
scas
add
pop
inc
inc
movsl
inc
in
xor
dec
push
or
dec
sub
fcoml
mov
xchg
shl
clc
jmp
lret
dec
inc
jmp
adc
jmp
jp
mov
mov
sti
nop
pusha
movzwl
push
cmp
sub
std
movsl
mov
data16
sub
popf
ret
lret
enter
jl
in
sbb
cwtl
and
sbb
mov
xchg
or
mov
push
outsb
push
cmp
mov
js
cld
test
sub
adc
fbld
jno
mov
out
ljmp
data16
adc
popl
pop
sub
into
outsb
cwtl
cli
add
shlb
pop
popa
insb
pop
add
and
fnsave
add
add
or
loop
js
imul
mov
cmp
test
inc
cmpsb
mov
aam
ljmp
adc
loopne
jbe
scas
ds
clc
test
cld
add
pusha
clc
fbstp
sub
xor
pop
add
ret
sub
dec
mov
pop
push
and
aam
cmpsb
jo
push
fwait
xchg
int
js
push
sar
fsub
sbb
jo
cmp
in
pop
cmpsl
sarl
int3
push
or
xor
xor
movsb
mov
sbb
decl
jno
cmc
jle
lods
and
inc
cmp
dec
inc
fsubs
sbb
xlat
mov
mov
dec
shrl
ret
rcrl
jp
mov
mov
push
cld
in
mov
inc
or
xchg
push
roll
inc
cmp
call
in
mov
jg
mov
stos
and
jp
mov
push
pop
fdivrs
repz
push
std
jecxz
je
shlb
in
lret
inc
aam
push
addr16
cmpsl
stos
fldcw
jb
pop
sub
add
jge
jb
push
cmp
ljmp
scas
int
jge
and
in
imul
push
inc
addr16
sbb
cmc
sub
add
rolb
jb
lahf
lahf
inc
bound
icebp
mov
xor
xor
inc
std
cwtl
xchg
clc
sbb
mov
add
jecxz
bound
jns
pop
loopne
sbb
adc
adc
mov
and
fisttps
cld
into
push
cmp
test
icebp
pop
movsb
mov
mov
mov
out
sub
fnstcw
pop
dec
sub
jl
mov
inc
jg
cmp
outsb
xchg
xor
imul
ss
push
push
daa
add
mov
shl
add
lods
cmp
mov
data16
lcall
lds
lea
pop
cli
xchg
dec
xchg
ret
arpl
or
cmp
mov
lea
xchg
sbb
sbb
iret
fstp
push
ljmp
out
cmp
jno
ds
arpl
xchg
mov
mov
sbb
mov
inc
ja
cmp
sub
enter
push
stc
mov
fists
mov
scas
inc
jle
test
in
into
mov
lods
inc
adc
jne
ret
scas
pop
mov
ljmp
mov
out
xor
iret
jle
fmuls
std
cwtl
lahf
jns
sbb
add
pusha
aaa
scas
je
sub
adc
add
dec
lds
pop
sub
mov
sub
mov
push
pop
rcll
js
xor
sarl
sbb
xchg
in
xchg
and
lea
pusha
notl
psubsw
pop
rol
adc
and
mov
cmp
les
push
mov
andl
outsb
int3
movsb
mov
loopne
cmc
xchg
data16
outsl
rorl
pop
and
lcall
mov
in
push
pop
loope
lret
pop
mov
adc
nop
popl
mov
add
jmp
movsb
in
cmp
push
filds
xor
int
std
cltd
rorb
dec
cmp
jo
pop
imul
push
xchg
js
repnz
jecxz
loop
loop
fisttpll
das
movsl
adc
ljmp
pop
xchg
pop
pop
push
mov
dec
jno
push
mov
pop
sub
repz
mov
or
sub
xchg
sbb
mov
cltd
jnp
and
cld
imul
or
jge
sbb
push
outsl
sub
xor
push
jb
aad
ljmp
stc
pop
das
pop
xchg
shl
mov
pop
sbb
xchg
or
dec
mov
ja
in
ja
enter
adc
and
xchg
cmp
adc
dec
jmp
push
push
or
ret
push
sbb
and
or
sub
nop
jg
int3
mov
jmp
lods
dec
bound
pop
bound
loopne
fidivrs
mov
call
dec
les
shll
mov
mov
add
lods
leave
sub
pop
or
dec
jmp
cwtl
pop
mov
fldenv
xchg
cs
fwait
xchg
jmp
out
jb
faddp
loopne
stos
fwait
roll
add
adc
in
mov
cmp
cmp
addb
push
in
imul
shl
dec
dec
mov
add
arpl
jecxz
sbb
sahf
cmp
in
xchg
dec
nop
mov
cmpsb
ds
xchg
jno
cld
repz
dec
lcall
cmp
fsubrl
aas
dec
hlt
leave
out
out
imul
mov
les
add
or
mov
cwtl
or
jecxz
sahf
sbb
div
stos
adc
fbstp
xor
xchg
outsl
scas
xchg
addb
adc
and
mov
xchg
mov
mov
aad
cli
pop
pop
je
push
lock
push
adc
cltd
hlt
das
inc
cltd
mov
jns
subl
mov
adc
cmp
rcll
or
aaa
jno
jbe
sub
fidivl
int
inc
adcl
inc
and
imul
loopne
out
cmpsb
jb
data16
pushl
enter
mov
inc
enter
mov
add
scas
cli
sub
or
loopne
or
mov
mov
movsb
emms
dec
xchg
xor
or
stc
stos
lods
adc
adcl
mov
imul
mov
out
jmp
pop
xor
lock
fs
sbb
imul
enter
xchg
popa
outsb
cwtl
or
clc
pop
icebp
out
xor
and
out
ret
sub
int3
adc
out
adcl
idivl
ret
dec
int
adc
test
and
add
adc
xchg
pop
mov
dec
push
xor
xor
fidivs
pop
mov
xor
lret
add
scas
jne
ja
mov
pushf
mov
out
in
loop
andl
cmp
insb
lahf
mov
or
xchg
xor
push
call
inc
xchg
jne
push
cltd
fdivrp
sub
jbe
mov
mov
aaa
and
sub
fistl
xchg
les
dec
inc
out
mov
adcl
xor
pop
addl
cmpb
sub
lock
dec
outsb
push
cmp
cltd
jno
push
xchg
adc
mov
lret
jb
call
push
shlb
lock
cmp
mov
stos
pushf
add
imul
mov
lret
mov
push
cmp
cmpl
mov
fdivs
adc
dec
add
daa
or
iret
jge
mov
subb
and
mov
lods
pop
roll
jle
mov
push
andl
mov
enter
jbe
jns
cmpsl
cmp
lods
xchg
ja
cmp
hlt
ljmp
orl
add
imul
lds
mov
aam
dec
jmp
aad
repz
xor
push
out
leave
cmp
xor
adc
ret
cmp
mov
lret
xchg
aaa
push
test
pop
jb
cmp
sbb
sbb
mov
pop
sahf
mov
notl
aas
mov
cli
mov
fs
xchg
shlb
inc
sbb
imul
aam
hlt
outsb
pop
mov
lret
adcl
ss
or
scas
test
pop
ret
aad
and
popf
outsb
dec
clc
in
out
xor
or
test
dec
lock
mov
test
xor
mov
and
mov
cmp
mov
in
mov
xor
sbb
lret
lea
jbe
popf
in
dec
outsl
inc
cmp
push
pop
jns
sbb
cmp
inc
mov
pop
iret
enter
fbld
ljmp
xchg
push
adc
lock
cmp
pop
stos
cmp
daa
lret
jp
jns
popa
arpl
lret
sbb
sub
jb
mov
js
loope
mov
push
loope
imul
imul
jg
btsl
test
pop
out
dec
movsl
sbb
adc
mov
outsl
pop
imul
lcall
ret
in
rol
push
lea
mov
sub
rcll
dec
xor
inc
sub
sub
je
adc
add
push
cmp
jo
sarl
pop
cmpl
mov
mov
pop
xchg
cmpsl
mov
sub
pop
cmpb
enter
pop
push
fsubrs
adc
or
fs
inc
gs
pop
shlb
aaa
jno
fcomps
js
xchg
push
push
out
xor
sub
pop
inc
in
sbb
mov
add
mov
mov
jae
pop
mov
push
dec
mov
or
out
push
fucomip
cmp
or
imul
xor
psubusb
jns
sub
inc
or
aad
xchg
aad
loope
add
sbb
cmp
dec
cmp
daa
shll
add
fs
jo
dec
mov
cld
cmc
fdivl
rcrl
sti
mov
xor
sub
sub
xchg
pop
into
call
jbe
nop
mov
es
daa
mov
jb
and
aas
mov
mulb
pushf
lea
orb
jecxz
fwait
ljmp
fucomi
insl
sbb
pop
data16
pop
hlt
in
insb
and
or
iret
or
pop
push
jp
cmp
add
xor
sub
and
xchg
pushf
loope
testl
mov
dec
adc
mov
aad
jg
shlb
scas
xchg
pusha
mov
and
fdivs
je
jle
insb
jns
inc
pusha
adc
dec
adc
cmpsb
es
xor
pop
cmpsl
gs
outsb
or
and
test
addr16
cmp
or
xchg
inc
aas
daa
dec
rcrl
ret
sbb
dec
sbb
insb
dec
insb
rcr
ror
xor
rorl
xchg
mov
xor
lahf
mov
hlt
add
dec
dec
sbbb
xor
sbb
sbb
iret
fcmovnbe
mov
pop
jmp
movsl
stos
lock
cmp
jecxz
push
push
push
jns
inc
sti
mov
movsb
jge
pop
adc
cmpsb
lret
enter
pop
cli
out
movsb
gs
ret
pop
cli
mov
inc
jns
outsl
sub
fadds
sub
xchg
xor
pop
add
and
pop
aam
dec
imul
stos
shll
and
stos
hlt
out
outsl
nop
pop
lcall
bound
loop
push
arpl
les
mov
cld
jmp
andl
jno
sub
add
loopne
jge
gs
fcmovnbe
jl
imul
mov
clc
inc
dec
in
inc
fwait
movsb
mov
or
jp
sbb
repz
jmp
loopne
adc
cmc
clc
lock
test
xchg
arpl
out
movl
addr16
adc
aas
arpl
sbb
dec
test
pusha
mov
add
call
jns
adc
or
adc
pop
push
outsl
add
mov
mov
push
or
arpl
mov
test
sti
and
or
test
lret
add
in
orb
cmpsb
pusha
cmp
pop
cs
ret
insb
mov
xchg
leave
adc
pusha
js
and
in
icebp
insb
sub
movsb
icebp
mov
hlt
jne
sbb
lret
xchg
xlat
cmp
cmp
in
cmp
mov
rorl
iret
pop
pop
fbstp
xchg
shl
in
movl
add
jo
inc
push
sbb
addr16
lret
mov
fwait
xchg
rorb
sub
pop
xchg
mov
adc
add
mov
xor
jnp
jne
bound
popa
cmpsb
push
sti
jno
push
xchg
mov
mov
jb
or
adc
lahf
cmp
cld
sub
mov
lcall
mov
cltd
adc
mov
fidivl
push
loope
jb
in
shll
imul
dec
cltd
adc
xlat
enter
inc
shlb
out
jns
cmp
aaa
xchg
arpl
mov
insb
push
fcoms
sbb
repz
dec
js
mov
mov
xchg
xchg
lods
mov
pop
gs
cmp
mov
loope
lahf
xor
pushf
push
mov
rcl
lret
jno
adc
sub
sub
xor
dec
adc
je
mov
mov
xor
mov
adc
es
cld
ss
sub
xchg
lea
bound
jae
cmpsl
xor
xchg
sub
test
scas
jnp
jns
mov
mov
xor
and
pop
pop
cmp
sub
test
jp
xor
cld
sub
fdivl
out
dec
sub
stc
lret
xor
sarl
sub
push
inc
arpl
je
nop
add
ss
xchg
xor
mov
cmp
jecxz
pushf
mov
mov
inc
flds
fiadds
dec
call
cmp
lock
or
pop
fcmovbe
mov
or
pop
dec
mov
int3
pop
inc
notb
scas
icebp
fcompl
mov
and
push
jle
jp
incb
push
jae
aas
fidivrs
mov
rorl
ljmp
sahf
aas
jne
jp
clc
iret
scas
push
lahf
je
cwtl
ret
dec
cli
loope
push
psubsw
dec
rcrl
mov
loopne
xchg
or
xchg
push
stos
inc
pop
and
pop
xor
and
mov
popa
and
adc
jmp
cmc
int3
sahf
jns
aaa
aaa
movsb
and
add
dec
andl
shrb
sarl
dec
mov
cs
out
and
adc
jl
push
cmp
lret
ljmp
xchg
mov
js
sbb
mov
pop
adc
ficompl
roll
dec
les
ds
pop
mov
jbe
mov
outsl
and
mov
mov
pop
mov
add
int3
push
push
pop
les
or
push
ret
jb
iret
test
pop
insb
xlat
mov
enter
sub
orl
repz
push
dec
in
cwtl
cmp
and
push
fsubrs
leave
adc
jl
outsl
mov
mov
xor
aaa
mov
lret
ja
dec
inc
push
test
dec
sbb
sub
push
punpckhdq
mov
arpl
pop
xchg
adc
fstpt
aad
insl
mov
pushf
xlat
add
jae
jg
inc
cltd
rolb
mov
mov
insb
add
gs
mov
xorb
nop
mov
cmp
ja
jp
popf
mov
add
push
mov
clc
dec
stos
jno
in
adcb
in
cmp
test
adc
stc
test
dec
cli
rep
mov
xor
push
mov
in
test
sbb
jo
mov
cmp
testb
roll
mov
pop
and
into
in
outsb
pop
jmp
das
push
jle
cmp
push
das
bound
xor
sub
or
aas
mov
popf
mov
jnp
ss
add
fidivrs
mov
sub
loopne
popa
push
fwait
xor
andb
leave
adc
jmp
ja
out
stos
add
in
cld
ja
dec
dec
popa
fidivrs
hlt
cmpsl
push
and
add
int3
sbb
iret
sti
push
mov
mov
push
cmp
xchg
cld
or
call
jo
adc
xor
fwait
cld
sub
fwait
lcall
das
call
les
les
mov
jle
mov
jp
sub
scas
shrb
add
dec
lods
sahf
add
test
jbe
call
jl
fsubs
add
fwait
mov
pop
int3
out
and
mov
inc
mov
pop
out
cmp
popf
adc
das
int3
lcall
adc
repz
mov
scas
loop
cwtl
aam
nop
rcl
xchg
movsl
pop
mov
fdivrs
test
jne
lock
xor
inc
xor
popf
mov
pop
ljmp
cmp
add
fabs
xchg
iret
lcall
and
fidivrl
mov
shll
xchg
cmpsl
insl
jb
lcall
fimuls
jmp
sub
sub
pop
filds
out
cmp
mov
pop
cmp
fistps
mov
cwtl
out
dec
mov
and
leave
pop
lock
les
sarb
scas
out
sbb
clc
sub
data16
jmp
outsb
cmpsb
inc
pop
loopne
rcrl
inc
stc
faddl
mov
mov
std
ss
fwait
mov
push
add
test
jno
xchg
cltd
insl
xchg
iret
add
mov
adc
outsl
and
jns
pop
leave
popa
mov
clc
loopew,pt
inc
cmp
adc
loope
lcall
arpl
std
or
cli
sbb
ret
in
test
addr16
and
push
adc
pusha
mov
lahf
sub
or
test
push
rcl
push
sbb
cli
jg
xchg
cmp
das
mov
cmc
and
sbb
icebp
call
ljmp
and
orb
push
mov
add
xlat
call
dec
mull
call
movsb
xchg
adc
shrl
and
rol
mov
stc
outsw
std
imul
inc
push
insb
jg
adc
pop
fidivrs
rcll
outsb
inc
lret
sub
dec
cmp
ja
and
adc
out
das
mov
inc
push
dec
filds
pop
jge
enter
out
arpl
movsl
add
cli
or
out
adc
adc
pop
mov
dec
push
push
and
cmp
in
dec
pop
push
lcall
pop
add
outsb
push
lcall
ror
arpl
mov
clc
in
loop
or
or
pop
xor
jns
sti
pop
mov
loop
inc
leave
dec
or
jne
loopne
mov
orb
pusha
xor
mov
insb
mov
dec
adc
adc
adc
sub
fwait
mov
adc
push
and
mov
pop
hlt
inc
shll
loope
aas
dec
ret
mov
out
aad
sbb
push
jmp
sti
icebp
jnp
call
iret
rcrl
mov
lcall
into
in
ss
push
call
fstpt
test
stos
sbb
in
or
pop
sbb
jae
shrl
sub
xor
mov
xchg
jl
in
out
mov
call
scas
inc
inc
std
mov
out
cs
mov
xchg
adc
mov
sbb
scas
gs
enter
aam
scas
push
out
sub
adc
test
lcall
aad
movsb
xchg
icebp
push
iret
jbe
xor
and
gs
pop
lret
rcll
cmc
xchg
fwait
test
loop
mov
arpl
cmpsb
mov
movsl
in
leave
or
das
je
mov
xchg
cmp
add
adc
jnp
pop
dec
adc
mov
jmp
pop
loop
push
mov
ret
repnz
xlat
xor
inc
insb
pop
icebp
mov
inc
jmp
xor
mov
divl
cmp
ljmp
ficoms
add
insb
ficoms
jo
mov
ror
or
or
popf
xchg
sbb
movsb
jmp
mov
push
push
in
icebp
dec
or
cmp
cmp
popa
jge
punpckhbw
xor
dec
cmp
jl,pn
inc
and
pop
inc
mov
push
jbe
adc
jbe
loope
into
sbb
testl
mov
lods
rcl
mov
sbb
mov
scas
lock
xchg
dec
popf
roll
and
lea
add
cltd
int
mov
jl
sbbl
sarl
clc
cmp
movsw
add
inc
loop
test
cltd
dec
jl
loopne
cli
fbstp
mov
test
mov
mov
mov
out
cltd
xor
lcall
int3
hlt
sbb
inc
jl
cmp
sbb
pop
or
cs
in
fidivs
fnsave
xor
in
sti
fstl
inc
inc
mov
fdivrl
fwait
and
outsb
xor
inc
fwait
mov
sar
lcall
pop
push
jecxz
shlb
push
subb
mov
jg
movsb
cmp
lock
add
incb
test
cld
xchg
xchg
nop
loop
and
data16
xor
xorb
add
or
dec
loop
pop
inc
cmp
loop
xor
cltd
jp
cmp
rclb
dec
sub
mov
mov
add
xchg
push
mov
aas
out
and
mov
push
jge
inc
cld
sti
sbb
sarl
shrl
xchg
xchg
pop
out
push
pop
sbb
cmp
jmp
test
mov
sbbb
js
mov
arpl
adc
call
sub
fsubs
dec
ffree
mov
pop
mov
fimull
subb
adc
sbb
xchg
cmp
dec
adc
jecxz
sti
xchg
add
push
ret
cmp
lcall
push
iret
aam
cmpsb
scas
clc
pop
mov
roll
mov
mov
nopl
fwait
test
jae
inc
repnz
gs
leave
aam
ret
xchg
adc
dec
pop
fcompl
fcmove
jl
push
mov
and
movsb
dec
dec
sti
mov
ds
cmp
inc
fmuls
scas
sub
pop
cli
xchg
cmp
lds
pusha
jecxz
stos
push
pop
mov
outsb
sbb
mov
jmp
and
inc
pop
pop
mov
pushf
mov
and
jae
in
testl
fdivs
inc
dec
mov
insb
cmp
in
stos
inc
mov
xor
cld
xor
mov
dec
inc
ret
lods
xchg
stos
and
push
loopne
in
int
int
inc
fs
cmp
adc
sar
dec
pop
cmpsb
or
dec
pop
aam
jne
popf
xchg
cli
pusha
jns
das
mov
jbe
pop
mov
xchg
ljmp
sahf
dec
aad
mov
xchg
push
adc
in
mov
subl
adc
jmp
into
outsl
inc
int
or
jne
xor
adc
lea
lds
xlat
push
je
lods
xchg
xorb
repnz
xorb
sbb
xor
xlat
arpl
stc
pop
mov
xchg
hlt
test
push
lods
fidivrl
pop
push
xchg
stos
push
or
ret
mov
push
lock
or
jae
pop
cmc
jns
xor
ret
xor
fildl
fdivs
sar
stos
clc
or
sub
cmp
add
mov
jle
xor
mov
push
mov
lock
loopne
cmpsl
inc
adc
push
fsubl
gs
pop
pop
dec
fwait
shr
bound
add
test
fmuls
addb
stos
dec
outsl
xorb
push
adc
pop
into
test
and
push
movsb
adc
push
jns
sarl
mov
in
loope
imul
adc
push
pop
sbb
aaa
mov
push
outsb
call
mov
mov
mov
push
dec
imul
mov
pop
ja
cmpsb
xchg
sbb
mov
or
imul
sub
cltd
leave
xchg
mov
jns
or
jae
out
sub
repnz
cmp
jo
outsb
dec
rcll
inc
in
mov
mov
ljmp
or
jmp
and
xor
jbe
sub
sbb
xor
mov
mov
mov
loope
mov
jg
mov
dec
mov
icebp
and
leave
stc
enter
mov
cmpsl
push
enter
add
lret
shr
or
in
xchg
mov
lea
popa
test
xchg
out
and
sub
dec
movsl
outsl
jecxz
or
xchg
or
mov
sub
mov
clc
mov
dec
add
inc
sar
fstpt
pop
fcomps
pusha
scas
inc
sti
imul
test
test
test
fxch
pop
jno
mov
mov
call
dec
inc
mov
repnz
pop
in
shll
cmovae
dec
xchg
inc
sbb
ficoms
sub
in
in
fwait
pop
mov
ljmp
sarl
dec
xchg
push
mov
cwtl
stc
add
scas
adc
imul
xchg
ljmp
mov
mov
and
mov
data16
adc
insl
xlat
xchg
xor
mov
dec
sub
cld
out
pop
pop
hlt
add
sub
push
push
cmp
stos
dec
int
sbb
mov
sbb
sbb
in
shr
lcall
pop
popf
divl
pop
ds
push
jo
pusha
xchg
arpl
arpl
les
das
jb
out
dec
in
shrl
inc
and
into
jae
add
sahf
fwait
sub
loopne
cmp
or
and
imul
mov
xchg
push
push
dec
movsl
cmp
or
xchg
sbb
aaa
inc
fists
jnp
rcll
xorl
and
xchg
jmp
and
fimuls
sbb
stos
push
lods
push
inc
dec
std
pushf
aas
cld
xor
push
inc
mov
jecxz
sarl
mov
popf
push
pop
mov
insb
lret
dec
mov
xor
inc
subl
stc
icebp
test
mov
xchg
xor
fmuls
jbe
imul
mov
cmp
pushf
rcl
pop
xor
stos
mov
ljmp
pop
adc
mov
enter
mov
sbb
out
push
sub
jne
dec
lock
iret
push
lods
repnz
daa
xlat
pushf
inc
add
inc
sub
mov
outsb
pop
frstor
jno
cwtl
xor
test
aad
pusha
push
inc
ss
das
cmp
dec
sbb
sub
cmp
xchg
mov
add
loopne
mov
stc
cs
std
jns
ror
push
mov
stos
jle
pop
test
push
out
cmp
dec
mov
mov
lods
outsb
jns
or
sahf
dec
outsl
jnp
add
shll
lods
xorl
js
jmp
sub
stc
test
xchg
pop
sbb
pop
and
testb
leave
xchg
adc
aas
push
or
pop
scas
xlat
or
int
call
mov
fsincos
lret
pop
mov
jmp
icebp
mov
mov
push
or
cmpsl
clc
jnp
and
ja
aas
cmp
les
sbb
cmp
aas
aas
inc
hlt
fidivl
jmp
and
adc
testl
repnz
cmp
sbbl
rorb
xchg
outsl
jno
mov
jp
iret
in
shr
jmp
lahf
inc
mov
sub
loop
test
mov
in
cmp
xchg
insl
inc
or
inc
pop
lock
cli
int3
pop
push
xchg
mov
scas
cmpsl
and
leave
in
ss
push
sbb
popa
fdivrl
inc
push
or
imul
enter
add
mov
outsb
in
and
pop
outsb
xchg
jl
stc
push
lds
mov
and
stos
ret
or
pop
cld
out
push
movsl
xorl
jae
mov
dec
inc
iret
aam
std
loop
je
rcl
pop
outsl
and
xchg
mov
out
inc
jmp
adc
dec
shrl
into
sahf
jl
imulb
dec
push
push
les
mov
mov
adc
adc
mov
inc
mov
test
mov
push
push
sub
lret
insb
dec
pop
addr16
push
out
and
dec
out
push
adc
mov
lahf
dec
imul
jo
jecxz
sub
faddl
out
push
push
jmp
jg
arpl
inc
jo
sub
jecxz
addl
popf
xchg
jecxz
jbe
mov
pushf
ficoml
push
cli
out
pusha
out
mov
adc
lods
mov
xchg
call
xchg
add
adc
out
xor
into
pop
lods
test
gs
shlb
pusha
mov
dec
add
insl
out
scas
jmp
push
andb
ret
loopne
pop
inc
test
fistps
mov
jo
mov
add
add
adc
xor
loopw
imul
cmp
push
dec
sub
loopne
add
or
lods
aaa
loop
fiaddl
inc
fadds
outsl
inc
pop
jnp
fistl
xor
ficoms
cmp
imul
mov
in
adc
jecxz
shl
mov
aaa
test
sbb
ret
outsb
cld
and
pusha
movsl
dec
xor
lahf
popf
lret
dec
test
ficomps
addr16
mov
lock
cmp
xlat
add
cmc
cli
sub
addr16
sub
or
xchg
fs
push
scas
scas
mov
or
and
sub
icebp
pop
pop
dec
mov
divb
dec
fsts
mov
pop
in
jmp
loop
mov
dec
cmpsl
dec
jle
inc
pop
jne
add
popaw
into
jg
mov
inc
aaa
cmp
xor
push
jae
sub
nop
dec
aaa
test
insb
repnz
mov
cmp
add
or
inc
sti
xchg
inc
and
mov
aas
pop
in
mov
lea
fwait
iret
push
shll
lods
xchg
popf
imul
sub
or
jg
movsl
scas
mov
xchg
or
jbe
adc
pop
scas
call
lds
cmp
xor
or
xor
test
add
data16
inc
or
xlat
mov
add
add
fstps
mov
pop
negb
inc
adc
pop
sub
jno
cwtl
pop
pop
lret
jecxz
loopew
lods
mov
or
and
xor
inc
xchg
lea
data16
mov
dec
insl
mov
rcrl
or
dec
sub
lret
jmp
sbb
es
sahf
push
inc
xor
sub
push
mulb
or
fisttpl
add
xchg
int
add
nop
sub
shll
lahf
int3
inc
push
sbb
mov
xchg
nopl
fsubr
cs
mov
nop
add
bound
mov
sub
and
or
imul
inc
out
aam
addr16
pushf
xchg
in
fcomip
ret
inc
fidivs
adc
xor
sub
xchg
sarl
lret
cli
mov
psubusb
pushf
in
mov
shll
rclb
jne
lret
sti
push
loopne
pop
lock
loope
mov
pop
stos
xchg
sub
dec
sbb
xchg
dec
jp
push
lods
rcr
xchg
cmpsb
adc
jmp
mov
jmp
mov
mov
fs
sbb
rorl
jp
jns
mov
dec
adc
imulb
out
loopne
ror
shlb
cmpsl
xchg
mov
cmp
aaa
out
mov
aas
or
sti
cltd
aas
sbb
mov
push
sub
sbb
add
push
dec
jnp
incb
gs
ljmp
xor
popa
adc
cmc
je
fmull
lea
divb
add
jge
sbb
orb
clc
jo
out
notl
pushf
mov
or
iret
cmpsl
mov
xor
add
scas
cltd
xor
lods
inc
sbb
ja
fcmovb
pop
shrb
sahf
xlat
xor
data16
aad
mov
hlt
mov
cmpl
in
mov
cmp
fstpt
ja
cmp
sarl
fisttpll
lods
add
enter
mov
mov
jmp
pop
jg
mov
cmc
mov
dec
jbe
int3
out
cmp
aam
xabort
pop
push
xchg
mov
lret
pushf
dec
aam
fidivrs
mov
loope
pop
popf
pop
xchg
stos
mov
pop
push
test
jle
fisubrl
mov
dec
dec
and
fdivl
mov
and
cmp
xchg
das
jbe
adc
inc
mov
test
shl
jmp
jae
fs
pop
add
adc
push
or
jns
jno
leave
adc
pusha
idiv
nop
xor
or
rorb
or
lods
fidivrs
insb
add
roll
call
insb
sub
pop
adc
add
gs
loopne
ffree
cwtl
mov
inc
mov
dec
mov
push
lcall
cmp
sub
cmp
cwtl
adc
jecxz
cwtl
das
cltd
xor
lret
fnstcw
mov
ja
ja
mov
jp
xor
pushf
jl
push
addb
and
sub
test
mov
mov
and
pop
mov
cmp
out
popf
les
lods
clc
sti
xchg
movsb
scas
xchg
inc
pop
mov
shrb
in
out
jge
mov
inc
mov
add
movsb
test
mov
incb
inc
or
pushf
out
and
pushf
insb
popa
jmp
dec
mov
jl
lcall
cmp
push
mov
daa
mov
fwait
jg
bswap
clc
jge
sub
cmp
loope
test
xchg
inc
ds
sti
xchg
rcr
in
imul
sub
mov
inc
loop
hlt
sub
scas
sub
inc
mov
or
ja
in
mov
and
fwait
movsb
iret
push
pusha
es
sub
pop
in
lahf
hlt
mov
jl
stos
das
sbb
shll
js
or
and
mov
icebp
jge
shll
adc
inc
push
pop
lds
lock
mov
mov
sub
push
push
les
mov
inc
addr16
mov
into
cld
aad
cwtl
addb
aad
jbe
pop
notl
jl
out
pop
jl
inc
add
or
mov
pusha
dec
imul
in
push
inc
xor
push
shl
xor
cmpsl
fbstp
xchg
enter
mov
dec
test
ja
das
push
sub
xor
xchg
mov
loope
fnclex
jnp
dec
or
adc
push
mov
cli
mov
adc
in
dec
int3
popf
sub
lds
sti
inc
fisttps
mov
shll
xchg
iret
jecxz
movsl
push
mov
in
mov
dec
movsb
mov
test
fisubrl
and
cmc
out
ret
dec
jg
fsts
and
push
mov
popf
jecxz
fiadds
in
adc
sti
pusha
pop
or
jb
pop
pop
mov
fadds
inc
push
or
addr16
lahf
adc
push
fs
adc
dec
sub
dec
inc
and
adc
rorl
dec
dec
pop
cmp
push
pop
fistps
mov
fnstenv
jg
inc
mov
sub
shll
mov
pushl
call
nop
and
pop
xor
mov
imulb
dec
mov
imul
adcl
sti
sub
movsb
push
out
fwait
or
cmp
mov
jno
jmp
daa
into
inc
dec
add
leave
sbb
xor
fdivr
sub
rcll
jb
xor
push
mov
cs
mov
or
out
adc
xchg
outsl
sbb
adc
xor
adc
and
jge
stc
data16
mov
add
scas
jecxz
jbe
movd
mov
sti
sub
inc
sub
and
pop
std
push
adc
js
add
insb
ljmp
xchg
ds
bound
mov
ss
jo
in
mov
fsubs
push
ja
dec
lret
mov
roll
stos
push
shr
push
or
mov
rorl
fnsave
shrl
push
test
adc
popa
mov
xchg
fdiv
ret
jns
cli
rcrb
stc
icebp
lea
cltd
leave
js
stc
mov
leave
mov
loop
nop
ret
adc
pop
dec
shlb
clc
mov
xchg
push
insb
pop
insl
aam
rol
dec
shrl
sub
add
add
jb
adc
je
or
sbb
pop
mov
imul
mov
jle
fs
loop
adc
cld
rorl
scas
icebp
or
mov
pusha
inc
mov
andb
mov
push
jmp
test
cs
dec
xchg
add
sbb
cltd
sti
addr16
dec
xor
test
pop
inc
hlt
mov
inc
repnz
testl
cmpb
loope
add
xchg
cld
das
in
inc
loopne
adc
mov
ret
and
insb
mov
cmc
jl
scas
jns
adc
movsl
mov
xchg
jae
aam
call
std
adc
or
popa
dec
sbb
dec
inc
lds
xor
vpmuludq
xor
int
clc
dec
int3
fistpl
or
cmp
xchg
lods
repnz
mov
pop
mov
cli
lahf
xchg
sub
mov
xorl
cltd
testb
sub
add
iret
xchg
adc
int
ficomps
call
aad
jbe
pop
adcb
rorl
incl
pop
js
shl
into
dec
ja
in
scas
jnp
and
out
xchg
mov
lea
push
add
xchg
fsubrl
xchg
int
scas
inc
push
int3
or
xor
orl
js
icebp
sbb
and
aas
xor
aam
stos
add
aas
inc
inc
jns
cld
ss
jmp
mov
ret
test
sar
add
mov
arpl
jno
aam
ljmp
stos
in
cmpsb
add
lods
jno
sub
jbe
addr16
mov
dec
push
mov
and
test
cmpsb
mov
dec
inc
or
sub
insl
daa
mov
clc
mov
sahf
mov
bound
pusha
movsb
jmp
int3
sbb
mov
and
fidivs
in
pop
lahf
xor
cmp
push
je
fs
orl
scas
aaa
push
cmpsl
mov
sub
mov
mov
addl
shrb
test
lea
outsl
mov
jb
mov
push
fsubs
aas
adc
ficomps
jb
movsl
inc
sti
lds
scas
mov
cltd
or
dec
fiaddl
push
mov
jnp
fisubs
push
lret
icebp
mov
xchg
mov
and
je
movsl
clc
jg
enter
mov
jb
lret
dec
lods
cmp
stc
scas
in
inc
and
and
push
stc
xor
add
je
or
inc
xlat
lcall
mov
aam
jbe
or
sub
inc
or
inc
sbb
movsl
cmp
mov
or
ss
shrl
lcall
cmp
xorl
lods
shrb
cmp
js
and
aaa
pop
xor
arpl
lods
push
sbb
inc
mov
push
mov
cmp
rol
outsb
pop
in
pusha
nop
pusha
adc
or
fisubl
es
mov
in
push
mov
or
ret
loope
aam
ss
pop
flds
mov
sti
jmp
dec
lods
mov
and
sub
loop
dec
notb
imul
test
gs
push
mov
push
js
repnz
loope
lds
sahf
xor
cmp
mov
adc
ffree
cmpsb
in
sbb
mov
mov
sahf
sar
imul
and
fwait
sub
cli
fisubl
dec
shl
jne
aas
jg
pop
inc
lret
jle
push
inc
xor
fimuls
push
sub
adc
ret
cltd
xchg
in
mov
xor
bound
or
xchg
push
or
xor
mov
mov
sarl
out
aad
test
rcr
stos
adc
and
mov
add
sti
xchg
pop
cmp
sbb
xchg
shll
xchg
fiadds
dec
hlt
dec
lahf
ret
fidivrl
xor
xchg
in
xlat
jne
mov
imul
cmpsl
pop
xchg
jl
flds
mov
fldt
lcall
jb
jge
xchg
cltd
mov
shll
popf
and
xor
lret
insb
inc
cmp
cmpsb
test
add
jne
cmp
mov
jecxz
adc
ret
xchg
in
cmp
jno,pn
adc
mov
mulb
push
jmp
xchg
mov
lcall
sti
jo
sub
or
jnp
xor
cmp
stos
mov
shll
dec
or
mov
mov
jecxz
cmpb
pop
xchg
movntq
ss
mov
xor
jb
inc
daa
xor
mov
add
jno
popa
adc
outsb
or
test
cli
pop
inc
dec
xchg
out
incl
in
ret
push
or
sub
cmp
jnp
and
mov
pop
jecxz
xor
pop
stc
adc
pop
pop
add
push
mull
cwtl
bound
mov
loope
cmc
icebp
imul
sub
arpl
out
fcmovnbe
ret
fidivrl
mov
clc
mov
insb
out
mov
jmp
testb
xor
fsubrp
jmp
xor
hlt
cmpb
push
mov
mov
andps
popf
in
cmp
sbbl
mov
in
cmp
test
sbb
call
lods
fdivrl
bound
push
mov
xchg
js
jno
mov
push
dec
add
cld
daa
dec
dec
push
adc
sahf
xor
out
xlat
sahf
pop
fimull
rcrb
jnp
adc
mov
add
jp
cltd
sbb
imul
cmp
xor
xlat
mov
popf
leave
mov
div
add
popl
cmp
push
add
jne
pop
int
inc
imul
mov
in
fistps
push
dec
roll
test
lock
cmpsb
mov
adc
rol
ja
or
lds
xchg
sub
out
jge
mov
sub
clc
mov
pop
mov
mov
and
data16
arpl
dec
xchg
outsl
pop
adc
mov
or
ret
push
stos
in
and
pop
xlat
aaa
mov
pusha
sarb
out
fsubrs
mov
mov
sbb
mov
pop
mov
add
dec
push
incl
jle
idivl
sti
or
enter
jae
cwtl
inc
sahf
xchg
mov
mov
xchg
mov
or
pop
lahf
mov
push
mov
jae
push
into
sbb
add
jae
nop
inc
addr16
push
sbb
adc
xchg
lods
fstpt
faddp
pop
push
lret
push
mov
inc
sbb
sti
fadds
loope
ljmp
xor
push
lock
cmp
or
push
sbb
ja
adc
imull
push
inc
jecxz
mov
jecxz
ficomps
mov
add
pop
mov
movsl
xor
add
data16
dec
idivb
push
jnp
stc
cmp
cmc
jmp
mulb
dec
ficompl
popa
mov
hlt
les
test
push
mov
mov
mov
cli
mov
dec
push
insl
cli
and
call
fidivrl
push
mov
mov
aam
and
cmc
out
push
lret
loope
jg
cld
pushf
sbb
dec
daa
arpl
inc
loopne
and
and
inc
scas
xchg
popf
repnz
inc
mov
repz
xor
and
mov
jle
add
add
inc
inc
mov
lcall
fcoms
cmc
push
fsub
push
ljmp
mov
add
call
add
mov
xchg
sarl
xor
leave
mov
fs
mov
out
push
push
cmpxchg
fildl
not
jge
adc
mov
aam
mov
cmp
jp
sbb
sbb
data16
mov
shll
dec
out
cs
mov
dec
or
push
lret
mov
enter
or
mov
outsl
jbe
je
imul
lcall
xchg
sahf
sub
mov
mov
cmp
adc
sbb
xchg
cmp
cmp
push
pop
xor
mov
inc
sub
shr
push
and
lods
xchg
insl
hlt
xchg
sahf
fnstcw
cwtl
adc
repz
xlat
lds
mov
subl
sbb
fsubrl
add
insl
jmp
lret
inc
mull
jno
pusha
inc
aaa
mov
lds
dec
and
dec
icebp
jns
xchg
or
xor
int3
mov
fwait
das
sarb
sub
xor
sub
aas
push
mov
xor
pop
jg
dec
and
or
ljmp
je
out
popf
rcrb
mov
pop
xchg
mov
lea
out
add
inc
sbb
aaa
fcoml
shr
in
mov
mov
repz
test
adc
xor
es
in
and
add
cmp
ret
lcall
sbbb
aaa
cmpsb
push
ss
in
or
pop
jae
xor
xchg
loop
es
shrb
add
je
jmp
cmpb
pushf
iret
xor
cmc
jns
lea
inc
sbb
shl
and
in
out
push
xchg
outsl
es
pop
cld
mov
popf
and
sbb
inc
pop
sbbb
dec
jae
scas
in
add
xchg
iret
sbb
inc
in
outsl
fildl
inc
fistpl
and
hlt
repz
xchg
push
mov
lahf
sahf
lock
lods
inc
cmp
stos
jo
fsubl
push
mov
in
push
xchg
mulb
add
popw
dec
xorl
scas
movsb
jle
test
inc
pop
loop
sti
adc
add
inc
jae
sbb
jae
dec
or
or
jbe
inc
in
jg
jo
shl
sub
pop
sbb
aad
jecxz
ret
dec
push
mov
mov
mov
jb
pop
imul
sbb
xor
push
xorb
int
scas
xor
cs
incl
jl
or
and
push
push
clc
lret
repnz
test
cmp
or
or
popa
inc
cmp
sbb
mov
mov
test
cs
mov
mov
pop
pop
push
ljmp
adc
adc
mov
pop
call
stos
orl
cld
sbb
dec
aaa
mov
dec
and
leave
mov
mov
and
mov
sub
out
sub
loop
mov
inc
xor
out
xchg
push
and
pop
sub
jb
mov
fmuls
push
mov
sub
adc
scas
lock
paddusw
or
adc
add
mov
mov
popa
jae
shrb
mov
mov
cmpsl
lods
test
cmp
fildll
sahf
mov
xchg
mov
inc
loope
xor
icebp
pop
daa
dec
sub
cmpsl
cmpsb
nop
test
insb
or
call
sbbl
sbb
and
or
sbb
mov
loop
insl
push
insb
cmc
or
out
jge
aad
lahf
mov
loope
and
shlb
push
pop
add
ret
sub
mov
cwtl
shrb
clc
jge
les
leave
mov
ljmp
xchg
pop
pushf
push
jns
xlat
es
mov
loopne
jle
in
push
fdivrs
inc
cmpsl
inc
mov
outsl
movsb
push
adc
lcall
addl
cli
jp
jle
cmp
jb
jecxz
aaa
shrb
mov
xchg
out
inc
mov
movsb
sbb
in
mov
xor
test
sub
loopne
and
pop
aas
jp
jnp
les
jae
inc
cmpsl
jo
jg
fimuls
jno
mov
or
shlb
sbb
or
mov
les
fnstsw
test
push
lret
scas
insb
pop
arpl
jmp
in
pop
loop
popf
add
in
jno
jp
fbstp
pop
daa
test
aam
out
pop
dec
movsb
jne
loop
add
mov
decl
cmpsl
loop
mov
icebp
lret
subb
test
fsubr
in
cli
jo
je
addr16
jb
cmc
jnp
sub
jge
adcb
mov
dec
fisubs
rclb
shr
clc
mov
sub
push
aas
enter
cmp
mov
sbb
hlt
xchg
mov
sbb
push
inc
or
and
mov
xchg
ja
leave
inc
add
jp
enter
out
jb
je
jmp
scas
xchg
push
mov
or
popf
adc
popa
popa
hlt
jae
dec
lea
mov
push
push
cmp
clc
jno
inc
jmp
inc
int
mov
in
xchg
xchg
clc
inc
es
cmp
rorb
andl
add
cmp
insb
mov
or
and
outsl
adc
mov
cmpsl
sub
test
cmpsb
jmp
xchg
adc
xor
pop
add
inc
mov
sub
scas
ds
sbb
add
mov
hlt
aaa
add
xchg
rclb
rorl
stc
lods
mov
aaa
sbb
cmpsb
mov
push
pop
push
adc
mov
add
fadd
enter
sahf
push
adc
shl
inc
cld
in
mov
icebp
lods
and
or
jmp
xchg
sub
les
push
cmp
loop
and
lock
lods
mov
inc
sar
push
outsb
hlt
jle
lods
dec
mov
push
lahf
sbb
faddl
negl
jnp
out
or
lods
mov
aas
in
sub
fadd
add
pop
std
push
xchg
sbb
push
mov
je
movsl
cmp
scas
push
jbe
adc
and
stos
jno
add
or
inc
in
mov
xchg
lods
adc
stos
mov
inc
pop
dec
inc
jl
mov
or
add
xor
xchg
and
arpl
scas
lods
and
sub
mov
daa
and
sub
mov
cmp
loop
lret
hlt
je
in
adc
push
lret
imul
test
cmp
mov
ja
cmp
push
add
fdivrs
jns
mov
pop
sbb
std
shl
sbb
ja
call
iret
xor
ret
cmp
xor
sub
faddp
mov
std
aaa
enter
xchg
imul
test
adc
sbb
jp
sbb
dec
ret
dec
loopne
adc
shr
cltd
mov
cmp
rclb
imul
push
lcall
mov
shll
fimuls
fdivl
adc
orl
rcr
ret
or
push
xchg
xchg
fidivl
xorl
ja
sarl
mov
bnd
insb
mov
jg
scas
mov
jl
pop
mov
repz
into
push
adc
shl
pop
aam
popf
xlat
rorb
mov
xlat
js
mov
mov
cs
inc
jae
fnstenv
lret
push
add
stos
jnp
mov
or
or
rcrl
lods
jno
pop
jb
push
adc
inc
adcb
xor
sbb
movsl
sahf
movsb
aam
adc
add
addr16
fwait
cmovs
mov
or
gs
insl
insl
loop
sub
push
mov
xor
icebp
add
and
fiaddl
add
icebp
jle
data16
ss
inc
loopne
inc
mov
scas
imul
push
xlat
les
mov
lret
test
les
stc
lret
or
jne
in
std
rcl
push
pusha
test
mov
sub
mov
dec
ja
lahf
or
jnp
icebp
inc
ret
int
movsl
xor
jge
cwtl
rcr
jbe
mov
negl
push
mov
xchg
mov
or
ja
push
leave
in
mov
icebp
dec
cmc
xchg
xchg
rcr
adc
test
inc
loop
daa
pushf
fldt
mov
dec
adc
adc
sbb
rorb
sbb
mov
add
or
and
sub
rclb
mov
add
sahf
loopne
mov
mov
mov
push
fdiv
add
lahf
call
movsl
test
xlat
xor
mov
movsl
add
aad
jge
fldenv
aam
jmp
mov
test
daa
push
xchg
inc
lea
xchg
xor
xor
xor
or
push
mov
xor
inc
call
rolb
ljmp
call
cmp
sbb
xchg
mov
adcl
and
xlat
sahf
cltd
add
pop
add
test
lods
adc
aam
bound
and
xchg
test
imull
int3
and
mov
ret
mov
mov
enter
pop
leave
orb
adc
addl
xor
add
fdivr
fs
dec
push
in
cmp
mov
les
jge
jge
pushf
dec
js
in
mov
mov
cmp
or
sub
inc
push
adc
lds
push
sub
dec
inc
push
mov
mov
push
xchg
cmp
push
nop
fcompl
xchg
mov
add
cmp
xchg
jo
popa
das
dec
call
mov
xor
dec
push
pop
or
adc
dec
lcall
insl
jae
push
stos
leave
popf
es
xchg
adc
dec
or
aas
aad
adc
jp
sub
cmc
jl
sbb
and
test
and
pusha
insl
pop
aaa
daa
sub
adc
mov
insb
out
in
adc
rcrl
nop
xor
inc
movsb
loope
sub
adc
jge
jg
push
push
test
dec
inc
add
orl
ds
ds
imul
ret
adcb
mov
imul
jmp
add
ror
inc
mov
xchg
stos
xor
addl
pop
mov
cmp
fisubs
lds
addb
add
cmp
push
in
cmp
xor
mov
imul
mov
and
in
inc
mov
mov
cmpsl
xlat
inc
mov
scas
mov
popa
xchg
mov
mov
jbe
js
fisubl
imul
or
or
pop
push
mov
arpl
popf
out
leave
stos
call
imulb
daa
or
sbb
lahf
adc
lret
call
out
xchg
cmp
aad
aam
rcrb
adc
mov
adc
iret
mov
ss
cmp
xor
in
mov
lods
push
dec
cld
mov
dec
fdivs
call
iretw
xchg
inc
ljmp
imul
adc
pop
lea
scas
enter
jns
xchg
mov
jnp
jae
cmp
mov
cltd
dec
mov
dec
js
jl
stos
pop
cmp
adc
iret
out
les
cmpsb
adcb
cmovne
mov
mov
lea
push
inc
jle
out
test
add
les
mov
ret
or
insb
push
inc
or
pop
or
pop
std
lret
sub
fs
jmp
lods
aas
cwtl
ljmp
push
imul
push
test
shlb
sbb
fadd
pop
xchg
scas
xchg
or
cmp
xor
dec
xchg
pusha
mov
jmp
push
pop
fsts
pop
mov
sub
mov
dec
sbb
int3
addl
nop
xor
ret
js
and
cli
fnstsw
and
in
ret
sub
push
mov
pop
ret
dec
or
jge
test
mov
xchg
ret
insl
lds
sub
popa
push
punpckldq
xor
jnp
inc
cmp
mov
pop
mov
data16
mov
xlat
push
sti
imul
or
mov
xchg
push
xor
cltd
push
sbbl
xchg
add
sub
jbe
cs
ljmp
dec
cltd
and
je
rep
pop
mov
scas
cltd
lret
data16
in
cmpsb
xchg
push
jp
movsb
ret
iret
and
mov
int
ret
push
in
jne
xchg
add
xchg
lods
fistps
fildll
repz
xor
mov
mull
decb
js
fsubl
or
int3
ret
repnz
mov
les
push
mov
adc
cmove
cmc
push
add
leave
sub
shrd
mov
stos
fstpl
lds
in
mov
pop
mov
outsl
daa
addl
or
fbld
sbb
insl
repnz
nop
push
inc
mov
imul
out
cli
and
scas
jp
rcr
jl
mov
sahf
or
ljmp
dec
fxch
clc
sar
sub
push
lods
jmp
jl
test
mov
fcomps
leave
and
lret
jno
push
pop
sub
sti
outsb
sbb
imul
xchg
aaa
sub
mov
lods
and
jnp
pop
adc
xor
mov
hlt
aaa
xchg
fildll
dec
andl
testl
ret
dec
pop
push
call
test
and
dec
mov
in
mov
adc
in
cmpsl
push
cmpsb
out
fsubs
push
jno
jp
movb
jo
pop
imul
adcb
push
cmp
movsb
mov
mov
sub
inc
adc
cld
mov
leave
lock
pop
mov
pop
add
pop
jno
fdivrs
aas
jo
mov
mov
add
jle
loope
scas
mov
mov
into
sub
pusha
aam
mov
lahf
xchg
movsl
adc
mov
dec
dec
mov
inc
sbb
push
add
lock
jae
inc
fimull
mov
pop
add
or
and
sub
in
inc
data16
cmp
sbb
stc
pop
das
push
pop
nop
std
mov
mov
das
mov
dec
inc
sbb
stos
jg
lahf
or
add
testb
dec
jnp
mov
cmp
shlb
mov
inc
or
cmpsb
push
xchg
jmp
lcallw
js
cmpsl
sub
leave
mov
in
sbb
pop
xchg
add
int3
jp
inc
call
cmpsb
inc
nop
dec
inc
ja
stc
fidivl
incl
push
daa
dec
cmp
push
xor
cmp
sbb
aam
mov
pop
test
mov
xor
sbb
fcom
inc
mov
stc
cli
pop
inc
push
sub
aaa
or
ret
xchg
popa
xchg
movsl
cwtl
jo
cs
sbb
int
outsl
xor
or
ret
sti
adc
push
adc
arpl
push
mov
and
fucomi
or
aad
outsb
je
xor
test
fucomp
fcomps
adc
or
loopne
mov
fbstp
xor
js
pop
in
pop
pop
ficoml
xlat
add
or
pop
arpl
outsb
dec
loop
xchg
imul
pop
shrb
xor
pop
mov
in
or
bound
int3
stc
or
into
scas
jecxz
bound
jg
ss
cld
imul
arpl
fstpt
imul
add
sub
test
mov
mov
cmp
call
adc
jecxz
dec
shll
in
lock
call
push
inc
xchg
add
ret
call
push
push
jmp
arpl
lds
jge
xchg
lea
hlt
pop
in
or
outsl
and
or
cmp
enter
movsb
popa
pop
out
xchg
dec
jmp
call
mov
adc
dec
iret
sub
cld
popf
lods
xchg
daa
cmpsb
dec
and
dec
lahf
addr16
dec
lock
pop
fstps
nop
cld
sbb
mov
xor
fldenv
cmp
push
in
push
sub
or
ja
sarb
push
xor
push
adc
jmp
aas
daa
hlt
fstl
inc
iret
sarb
push
sub
shl
jb
sbb
cmp
loope
push
clc
and
mov
push
sbb
mov
pop
push
mov
xchg
push
popa
and
xchg
or
jbe
orb
dec
fidivl
test
pop
mov
sub
je
rcrb
fwait
out
mov
cmpsb
push
stc
add
sbb
sbb
aaa
insb
adc
or
or
mov
xor
insb
mov
or
incb
dec
cmpsb
mov
xor
pop
cmpsb
loop
cli
loopne
xchg
int
pop
fldl
inc
sub
scas
xor
jl
and
popf
ret
std
out
cmpsb
or
jo
or
into
push
xor
jp
mov
in
sub
and
sbb
mov
ret
rolb
add
push
cltd
iret
adc
les
add
xorl
sub
faddp
jge
xchg
xor
cmp
icebp
shll
daa
jecxz
push
push
sub
add
arpl
cmp
movl
popf
pop
in
lea
lcall
rcl
aas
sbb
stos
ss
daa
arpl
sbb
ficompl
aas
clc
enter
mov
xchg
idivb
push
shl
loope
rorb
push
push
pop
mov
xor
push
xchg
sbb
rcrl
call
repz
fdivl
les
adc
fs
sbb
add
adc
pop
stc
mov
das
pushf
cmp
aaa
adc
fldl
mov
enter
stc
popf
pop
mov
in
out
into
jecxz
push
adc
or
push
insb
and
outsb
xchg
out
add
fimuls
and
inc
shl
mov
cltd
lcall
scas
movsl
test
dec
mov
pop
nop
mov
mov
lea
scas
or
mov
setne
jo
dec
loop
dec
lock
cmp
mov
popf
lahf
sub
mov
ret
and
mov
pop
jecxz
cwtl
adc
mov
imul
mov
dec
cmp
lods
ffreep
xor
pushf
mov
adc
push
lods
mov
push
out
sbb
mov
out
cltd
adc
xor
dec
call
call
das
movl
jo
inc
fstps
cwtl
mov
push
sub
out
mov
cmp
xlat
gs
mov
jmp
outsl
sub
pop
dec
lret
frstor
dec
subl
clc
sarl
inc
je
lret
xchg
mov
and
adc
jnp
sub
std
les
or
stc
push
in
mov
sbb
add
xlat
aad
or
push
or
hlt
dec
add
or
lods
mov
out
je
dec
in
or
xor
jbe
lahf
out
enter
jns
push
xchg
aad
inc
ljmp
std
sbb
dec
sarb
sub
mov
inc
xchg
sub
fs
mov
xorb
popa
movsl
dec
sbb
repz
lret
movsb
xor
aaa
dec
stc
mov
inc
xchg
repz
stc
lods
mov
stos
dec
call
inc
fcoms
lea
add
int3
mov
test
mov
sahf
ret
jb
das
loopne
sub
inc
adc
dec
call
popa
arpl
jge
jb,pn
xlat
ret
xchg
inc
adc
xchg
scas
scas
dec
pop
scas
in
dec
add
mov
cmp
ljmp
das
mov
adc
jle
adc
and
sbb
out
adc
dec
int
mov
out
push
sti
in
xor
fdivrl
loope
bound
mov
adc
mov
or
inc
out
bnd
and
imul
fwait
dec
jne
adc
loopne
scas
jo
cli
ret
aas
or
inc
dec
in
inc
pusha
ret
aas
dec
fwait
pop
xor
xchg
jns
iret
cmp
mov
xor
push
cld
jb
push
and
out
and
outsl
leave
gs
or
xchg
push
inc
or
pusha
adc
jbe
jae
xchg
add
mov
mov
or
sbb
ret
jle
aaa
xchg
in
adc
int
imul
fidivl
push
push
mov
fs
sbb
cmc
pop
cld
pop
push
ljmp
pop
mov
aaa
jnp
mov
pop
or
aam
into
lods
xchg
pop
mov
mov
fwait
data16
fstpl
idivb
scas
xor
stos
out
or
mov
sub
add
fstl
repz
push
popa
in
int
jecxz
or
push
icebp
popf
adc
pop
inc
lahf
mulb
fnsave
sub
xor
mov
ljmp
pop
imul
subl
dec
mov
xchg
xchg
cs
scas
mov
dec
cltd
stos
cli
push
mov
ficomps
ret
jno
mov
ficomps
xchg
mov
stc
adc
iret
inc
dec
in
bound
push
test
xchg
fildl
sub
mov
aaa
push
outsb
lcall
push
int
mov
aam
and
in
push
mov
inc
pop
inc
aas
jo
inc
mov
cmp
scas
mov
push
std
mov
pop
jno
mov
mov
xor
negl
jae
leave
or
cmp
ljmp
ja
fimuls
fwait
sti
cli
shrb
inc
inc
adc
out
loop
xorb
movsl
or
ss
leave
cltd
aad
and
sub
enter
push
nop
jl
aas
mov
ret
add
cld
inc
xor
push
cmp
and
or
inc
jecxz
add
pop
pop
jle
cmpsl
pop
mov
and
ljmp
sar
push
xchg
ss
mov
jo
and
scas
pushf
jne
xor
imul
cli
adc
mov
addr16
outsl
imul
mov
mov
cmp
mov
enter
xlat
fistpl
jge
sbb
xchg
addr16
mov
stos
aaa
fdivrs
pusha
add
lret
cwtl
in
add
sbb
and
xchg
adc
xor
gs
cmp
test
or
sub
or
inc
insl
lret
dec
mov
je
pop
fstpl
xchg
mov
je
js
bswap
mov
cmp
cmp
xchg
test
icebp
cld
jmp
idivl
inc
push
out
out
fnstcw
add
mov
xchg
push
add
xchg
sub
lahf
and
xchg
hlt
into
sbb
lea
mov
inc
insb
dec
xor
cs
mov
add
lcall
std
adc
shll
js
out
push
jmp
jmp
cmp
xor
jne
test
dec
adc
mov
adc
mov
bound
ret
adc
jnp
test
sbb
or
test
xchg
dec
lret
rol
ret
subl
mov
into
mov
add
sarl
pusha
hlt
push
xorb
adc
push
outsl
fmul
lods
cwtl
ljmp
aas
loop
rorb
jge
push
ja
push
xlat
push
jae
mov
cs
add
sbb
jmp
outsb
movb
mov
stos
fistpl
xchg
xor
inc
imul
add
int3
dec
gs
mov
in
in
mov
sbb
and
dec
stos
fimuls
sbb
jp
sbb
push
mov
dec
push
or
mov
mov
js
out
mov
out
and
dec
scas
bound
adc
daa
push
mov
stc
sbb
pop
cmp
jmp
adc
outsb
roll
push
jecxz
pop
push
mov
fiadds
sahf
or
out
cli
cmpsb
int
and
inc
sub
js
outsb
fwait
in
loopne
rolb
ret
test
int3
pop
inc
inc
mov
push
xlat
xchg
imul
sbb
test
jecxz
daa
sub
sbb
test
insb
in
or
jle
scas
movups
push
cmpsl
loopne
sub
xchg
cmc
cmpsl
sarl
jb
bound
das
xchg
ret
inc
std
mov
imul
jge
or
cmp
sub
inc
cmp
cmp
dec
inc
sbb
mov
push
aad
cmp
mov
les
and
fcompl
dec
clc
pop
adc
mov
stc
or
notb
sbbl
dec
sub
pop
sarb
xchg
add
jp
mov
rcrb
mov
fucom
paddb
add
xchg
cli
sahf
pop
icebp
lods
aad
outsl
stc
mov
push
test
pop
mov
cs
mov
cmpsb
xchg
mov
jne
ret
je
lds
add
add
mov
inc
jp
sub
lea
icebp
popa
push
out
mov
and
mov
jne
loope
lahf
int3
cmpsl
xchg
cltd
jnp
mov
jo
or
mov
xchg
cmp
cmpsl
sub
call
fistpl
dec
test
xor
lret
mov
mov
sub
sbb
inc
test
test
outsl
cmp
xor
cmp
out
cmp
cmp
out
push
adc
stos
xor
scas
push
lret
scas
xchg
jb
es
xchg
jne
mov
dec
push
adc
shll
fidivs
mov
sbb
roll
scas
loope
xor
hlt
arpl
sub
dec
xor
arpl
sub
xor
gs
jg
inc
push
scas
sub
inc
daa
scas
and
push
pop
inc
sbb
hlt
pop
scas
int3
xchg
jge
jg
ss
mov
adc
push
push
ficoml
sub
cmp
sbbl
add
sbb
shlb
in
ss
aaa
mov
inc
add
and
sbb
fbstp
xor
xchg
dec
cmp
mov
adc
cmp
ljmp
fldcw
int3
fnstenv
clc
ja
mov
imul
push
pusha
lock
jl
jbe
jno
cmp
cmpsl
add
int3
sbb
adc
push
fidivl
jge
push
mov
lods
dec
dec
and
add
and
lret
aad
push
sbb
rcl
scas
dec
xchg
daa
loopne
outsb
inc
and
inc
pop
jge
xchg
sub
rcrb
mov
sti
mov
pop
sbb
aas
mov
cmpsb
cli
sbb
pop
jo
sbb
iret
mov
pop
xor
mov
or
outsb
pop
sub
in
test
push
mov
lods
sbb
mov
cld
popf
imul
and
leave
push
les
ret
sarl
cmp
movsb
js
loopne
jnp
mov
dec
fadds
dec
cmp
push
shl
rorl
fildl
je
pusha
add
aad
xchg
xor
inc
rorl
cmp
push
jno
je
push
and
dec
test
and
add
mov
sub
hlt
in
enter
mov
sahf
shll
scas
or
daa
dec
mov
popf
add
sahf
enter
test
add
inc
cmp
jecxz
xor
or
test
dec
lret
adc
lahf
pop
lea
lock
dec
mov
jb
lret
cli
pop
jns
repnz
test
clc
lret
jnp
es
faddl
imul
mov
push
inc
cmp
mov
xchg
xchg
test
ret
dec
and
roll
fcoms
bswap
mov
pushf
xchg
cwtl
into
xchg
xor
scas
sub
bound
call
push
cmp
insb
popf
or
push
jg
mov
into
ds
loop
push
cmp
mov
movl
outsb
mov
stc
popw
xchg
fdivrs
inc
add
and
fsubs
jb
and
adc
in
jnp
pop
push
fwait
push
dec
mov
xchg
stc
ror
call
jo
mov
push
imulb
adc
rcl
push
jmp
push
loope
aad
inc
out
sbb
pop
out
arpl
mov
fsubl
fstpl
mov
jno
lcall
xchg
stos
xchg
int
mov
int3
lds
stc
add
jmp
xor
js
jne
push
or
xchg
push
mov
dec
push
adc
sbbl
test
stos
sub
mov
dec
add
ja
dec
subb
mov
jg
int3
mov
int3
fidivl
dec
icebp
rcl
movsb
mov
mov
push
ret
add
test
push
lcall
sbb
or
xchg
and
ja
sbb
or
mov
stos
cmc
out
xchg
sub
repz
in
je
mov
pop
cmp
add
insl
or
or
xchg
xor
popa
cmp
jb
adc
dec
ret
pop
mov
mov
fnstsw
mov
movsl
fisttpll
fwait
outsb
cmp
push
jno
sbb
xchg
fcmovb
xchg
add
lret
in
mov
cli
gs
shlb
imul
push
pop
jnp
pop
ret
xor
pop
test
ljmp
dec
mov
inc
pop
data16
outsb
cli
xchg
mov
ja
jg
sub
jnp
dec
mov
lret
out
jo
pop
cmp
ror
ja
push
lret
push
ljmp
xchg
lods
mov
test
or
push
push
cmovle
std
cmpsb
xor
aas
jg
push
jg
shl
sbb
cmpsb
into
inc
fmul
add
mov
sub
setb
addr16
pusha
je
push
flds
mov
rolb
or
inc
mov
push
adc
add
or
adc
jns
pop
fisttps
mov
cmpsl
mov
dec
jb
rclb
pusha
iret
jge
xchg
bnd
jl
pusha
mov
sub
lds
imul
adc
pop
jmp
stos
outsb
jmp
xchg
les
daa
int3
mov
sbb
xchg
add
jmp
shll
iret
mov
aad
sbb
mov
mov
aam
fdivl
xchg
aas
andb
push
push
sbb
in
pop
adc
xchg
jecxz
jg
mov
idivb
cmp
aam
or
nop
out
mov
pop
mov
mov
icebp
inc
fistpl
jecxz
mov
or
stos
xor
jl
sub
pusha
push
lock
jne
sbb
dec
cmp
jns
repnz
or
aaa
nop
pop
or
jg
mov
xor
push
jg
mov
pop
pop
sbb
aam
xchg
aas
test
scas
outsb
mov
push
js
fmuls
or
add
pop
pop
mov
jge
stc
push
lds
sbb
mov
out
add
leave
inc
cmp
das
bound
sbb
fwait
out
pop
mov
push
and
cmp
hlt
jle
das
pop
icebp
mov
pop
gs
and
and
inc
mov
xor
jg
pop
aas
sbb
xor
add
das
sahf
jl
insl
xchg
aad
out
das
add
cmpsb
mov
out
rcl
jnp
les
fildl
jo
or
inc
sarb
dec
leave
out
adc
decb
out
cmp
and
bound
imul
sub
fistpl
insb
inc
rolb
pop
push
xchg
iret
fcom
sbb
sub
in
cmp
mov
push
push
push
lret
repz
in
add
add
lret
jle
jo
and
notb
xlat
mov
push
loop
or
lods
add
shl
or
js
sub
fidivrs
insl
pop
adc
or
pushf
pop
mov
adc
xor
ja
mov
add
push
xchg
push
aam
daa
cmc
or
enter
dec
mov
scas
fs
sub
xor
mov
rsm
jmp
adc
add
mov
mov
sbb
pop
add
add
or
cmp
lds
or
jbe
daa
std
sbb
arpl
mov
jl
inc
and
out
adc
fs
cmpsl
sbb
mov
cltd
xor
shlb
fld
fcomps
sbb
jo
push
or
pop
push
mov
cmp
int3
rorb
addb
fsubr
icebp
in
lods
test
adc
hlt
push
inc
add
push
mov
ret
pop
and
jae
mov
popf
stos
cmp
pop
popf
dec
xor
push
outsl
add
shll
fildl
xchg
mov
aas
test
mov
fisttps
daa
mov
xchg
in
andb
daa
cwtl
inc
out
mov
mov
sbb
pop
jmp
lock
jne
dec
add
out
pop
pop
test
mov
out
jns
rep
mov
adc
imul
mov
mov
or
in
and
sti
stos
mov
sbb
lahf
pop
int3
fld
cmpsl
mov
xor
push
ljmp
faddp
stos
movsb
push
mov
jno
sbb
loope
jle
push
or
xchg
ret
imul
inc
test
cmp
xorl
ret
mov
jecxz
and
adc
xchg
rcl
lds
inc
pop
lret
jb
mov
pop
dec
std
lret
data16
aam
movsb
ds
adc
test
dec
cmc
insb
mov
ret
pop
test
out
loop
ljmp
xchg
adc
lret
in
outsb
movsl
stos
sbb
movsl
inc
das
xchg
stos
stos
stos
jnp
fnstsw
xor
sbb
jae
and
xchg
ja
inc
adc
mov
ficoms
daa
popf
leave
or
inc
fcomp
pop
mov
jecxz
inc
mov
jno
gs
adc
subb
add
pop
lcall
xor
outsl
arpl
xchg
xor
add
cwtl
push
inc
mov
imul
inc
sub
dec
mov
test
fxch
sbb
addr16
xchg
out
cmp
fdivrs
mov
out
fs
rcrl
sbb
inc
cwtl
adc
pop
xchg
jle
mov
lods
xchg
push
mov
popf
cmp
push
push
imulb
shrl
mov
fucomi
mov
and
outsl
lea
sbb
lsl
scas
notl
mov
fisttpl
je
push
jo
fdivrp
cmp
ss
mov
sub
shlb
shrl
mov
add
xchg
mov
dec
call
push
pop
inc
dec
xchg
and
sub
xchg
mov
pop
rolb
jge
popa
fldt
call
lods
icebp
stos
mov
mov
cmc
mov
leave
test
xlat
mov
rorl
aaa
popf
int
jmp
jnp
cmp
push
movsb
nop
xchg
lds
or
lock
lods
pop
fsubl
lock
fsubl
lock
inc
sarl
fisttpll
fcoml
jg
jo
mov
dec
stc
mov
jmp
jg
outsl
dec
ljmp
rcrl
push
clc
push
push
and
cmp
leave
lods
mov
insl
cmc
xchg
or
int3
mov
adc
sbb
sub
movl
sbb
pop
ret
std
jge
mov
adc
xor
incb
adcl
mov
mov
fstpt
fwait
adc
cmpb
lahf
mov
sti
adc
sbb
mov
inc
dec
popf
es
mov
ficoml
cld
add
or
or
shll
pusha
aam
mov
or
mov
repz
pusha
call
in
cmc
add
mov
or
xchg
or
icebp
addb
sbb
std
adc
xchg
ror
cli
sbb
sarl
sbb
repz
dec
mov
punpcklwd
sub
adc
lods
loopne
mov
jp
jl
inc
mov
inc
jno
and
and
jae
arpl
cmpsl
inc
test
mov
pop
cmc
stos
jb
ds
scas
cmpsb
movsl
pop
jl
push
sub
imul
or
neg
mov
fwait
adc
jge
and
pop
fwait
and
inc
ja
nop
lea
mov
loopne
xchg
mov
int3
dec
push
stc
add
dec
xchg
ret
cli
mov
lea
sbb
in
movsl
sbb
rorb
pop
push
push
mov
je
and
push
inc
stos
xor
iret
xor
push
fstps
ss
pop
ds
aad
mov
mov
mov
insl
xchg
jmp
in
js
into
ss
jl
repz
lret
data16
jle
clc
cld
sbb
and
push
lahf
fstp
in
cmp
xchg
arpl
hlt
mov
xchg
mov
jl
movsb
call
push
pop
je
mov
cs
fwait
and
notl
push
test
sub
cmpsb
jl
lea
popa
and
xor
xchg
xor
cltd
cmp
negb
insl
cmc
fcoms
popa
fildl
sbb
imul
test
lock
mov
loope
and
in
adc
pop
jne
cwtl
xchg
arpl
cmpsb
adc
std
aaa
inc
adcb
push
push
lahf
mov
add
jg
adcl
xchg
insb
test
ret
hlt
pop
in
aas
pusha
fisubl
popf
daa
mov
les
mov
or
push
test
fidivrl
cmp
in
pop
cs
jle
std
out
jns
mov
mov
sarb
inc
add
ror
popa
out
mov
addl
and
mov
inc
xor
or
call
push
pop
std
sub
jge
bound
mov
arpl
test
cmp
nop
jle
inc
or
or
push
sub
aam
sub
bound
pop
push
add
and
cmpsb
cmpl
idivl
or
repnz
in
out
pop
into
rolb
stc
insb
add
push
repz
adc
lods
or
mov
cltd
add
rorl
popa
and
mov
out
iret
movsl
xor
pop
xchg
fcomps
shll
ficomps
sbb
fistl
adc
mov
in
je
shr
mov
add
push
aaa
mov
pop
or
enter
mov
cwtl
lcall
lock
daa
mov
aad
push
add
outsl
push
push
push
fdivrs
push
imul
mov
pop
dec
mov
lods
mov
aam
adc
dec
insb
jmp
xor
icebp
in
cmp
lds
iret
or
jg
loop
int
lret
subl
rcll
push
enter
je
cmp
testb
in
xchg
dec
ljmp
cltd
cmp
xchg
cmpsl
cmp
ds
daa
inc
add
pop
stos
jge
mov
push
push
xchg
pop
outsb
and
neg
movsl
bound
loopne
mov
mov
xorb
inc
sub
repnz
ljmp
arpl
pop
sbb
jnp
xor
ret
repz
cld
mov
faddl
imul
jnp
popf
es
mov
outsb
repnz
mov
cli
or
push
imul
add
fdivs
or
test
mov
adcb
sti
enter
or
sahf
inc
ret
push
pop
push
int3
sub
packsswb
cmpsl
and
adcb
loop
out
dec
dec
or
dec
loop
or
test
mov
dec
ret
cwtl
inc
iret
lock
sbbb
adc
add
icebp
mov
dec
sbb
shll
push
push
cs
adc
push
push
cmp
roll
cmp
loope
das
test
pop
inc
stos
stc
push
cmpsb
inc
negb
fisubrl
ret
shll
dec
js
movsl
lret
jno
nop
mov
es
das
movswl
and
mov
xor
mov
nopl
dec
data16
push
in
xchg
out
xchg
jecxz
loop
dec
cs
in
clc
sbb
add
repz
inc
mov
jnp
orb
cmpsb
push
cmp
data16
imul
mov
int3
les
stc
jnp
lret
std
or
sbb
xchg
std
mov
jno
fsubrp
test
push
add
add
loopne
test
movsl
aas
popa
lods
cld
scas
xor
fsubr
mov
sbb
or
pop
xor
push
test
into
in
dec
pop
popf
repnz
loopne
or
xchg
xchg
sbb
insl
sub
sbb
clc
push
sub
lock
mov
xor
jno
sub
mov
lock
sbb
sbb
add
pop
xchg
xchg
xor
roll
ljmp
inc
add
cli
push
adc
cmp
mov
scas
cmp
bound
ret
aam
sbb
lret
and
lret
jle
jl
push
cmpsl
jge
in
js
mov
fcomps
cmp
or
cwtl
sub
cs
jmp
xchg
inc
xchg
andb
adc
out
jmp
dec
mov
enter
icebp
rolb
dec
sbb
pop
cmp
mov
cmp
dec
das
add
sahf
adc
movsl
test
fcoml
aad
sub
test
xorb
mov
scas
loopne
and
sub
sbb
inc
pop
pop
ret
sbb
push
test
js
jp
shlb
icebp
or
mov
fildll
mov
mov
data16
inc
lcall
mov
cli
inc
scas
jo
jecxz
pop
movsb
clc
fistps
mov
jo
mov
inc
dec
lds
add
out
pop
test
ljmp
outsl
aam
lahf
imul
cltd
or
xchg
int3
push
and
fisubl
cmpsl
jg
mov
mov
jne
inc
push
push
imul
cmpsl
cli
out
inc
cmp
lret
lods
pop
add
bound
jbe
mov
popa
mov
mov
fadds
ficoml
push
and
push
clc
adc
out
xchg
push
test
cltd
es
dec
dec
sbb
les
mov
xchg
int
hlt
mov
popf
dec
clflush
icebp
inc
testl
adcb
fildl
xchg
lahf
test
dec
jmp
xlat
fidivl
mov
xchg
int
jmp
pop
mov
pop
pop
arpl
insb
ret
popf
sbb
add
sarl
inc
rcr
ss
mov
repnz
aad
dec
lahf
mov
sbb
das
adc
mov
adc
jbe
cmp
jp
popa
je
or
push
iret
lock
pusha
fsubrl
xchg
mov
xchg
jne
out
and
lar
sub
xor
push
stos
lahf
push
xchg
inc
test
insb
lret
js
test
cmp
pop
mov
out
testl
enter
mov
xor
adc
fmuls
push
mov
arpl
or
icebp
enter
xor
push
mov
jl
stos
rcrl
mov
or
mov
mov
call
movsb
call
popa
imul
xlat
mov
ret
js
add
addr16
xchg
pop
push
aam
lods
enter
cmp
fwait
inc
leave
mov
sub
pop
lahf
repz
xor
imul
int
or
cmp
aam
lcall
push
xlat
sbb
shr
popa
push
xor
insb
inc
mov
pop
xchg
mov
outsl
shl
jo
loope
scas
adc
xor
movsl
test
cwtl
imul
cmp
sbbl
nop
mov
sahf
sbb
stos
outsb
add
mov
ficompl
cmp
out
sub
sub
adc
cmc
add
mov
dec
cwtl
mov
pop
mov
cmp
shlb
add
mov
mov
xchg
call
rolb
jo
sbb
mov
xchg
mov
xchg
jo
es
pushf
sbb
ret
xchg
andb
inc
xor
adc
bound
mov
stos
pop
pop
sbb
cmp
outsl
xor
jnp
mov
add
xchg
or
push
pop
test
inc
lret
dec
push
insl
in
in
shr
adc
cmp
or
pop
stos
jmp
jle
loopne
in
leave
jmp
push
sbb
mov
push
imul
xchg
scas
xchg
daa
mov
aas
outsl
lods
daa
sarl
mov
cmp
cltd
iret
cmpsl
js
dec
loopne
mov
push
scas
or
adc
mov
cltd
popa
inc
xor
push
jae
fsts
mov
mov
xchg
pop
pop
sbb
aad
shlb
lahf
sarb
data16
inc
inc
insl
enter
pop
pop
hlt
xchg
sbb
xchg
jge
push
mov
mov
sub
loop
popa
xchg
push
sbbb
aam
cmpl
xchg
pop
add
xchg
mov
adc
outsb
enter
add
pop
xor
sarl
out
xlat
mulb
add
adc
fadds
insb
push
enter
andl
ret
pop
ds
mov
mov
mov
cmpb
fwait
jmp
fisubl
jmp
xchg
test
pushf
mov
rorl
sti
imul
xor
and
gs
ljmp
pushf
push
cmp
leave
inc
xchg
push
adc
mov
dec
mov
test
sbb
sub
or
movsl
cmp
jno
xor
dec
push
jo
xchg
ja,pn
aad
sub
jg
pushf
imul
add
call
cmp
mov
cld
and
ds
or
ss
shll
in
xor
scas
jne
xchg
aad
psrad
jnp
xchg
pop
iret
test
jecxz
pop
add
out
mov
mov
scas
jnp
xchg
lods
es
addl
movsl
jns
or
mov
andb
lahf
jno
ret
aas
fwait
jg
clc
add
cltd
mov
jns
dec
lds
jno
dec
cmp
lret
xchg
xchg
inc
sbb
call
fsubrl
fs
inc
or
pop
sarb
xor
incl
lcall
pop
cli
mov
inc
pop
in
cltd
xchg
mov
cmpsl
sub
ficomps
lahf
aam
cmp
dec
and
cmpl
movsb
shll
dec
jno
xchg
lock
pop
hlt
sbbl
xchg
pusha
mov
push
aam
push
xchg
cmp
dec
insl
xor
fdivr
cmp
and
insb
or
inc
dec
sti
push
lcall
repnz
sbb
jle
inc
inc
and
pop
mov
xchg
mov
fisubrs
andl
rcrl
push
dec
mov
rcrl
scas
hlt
xchg
push
sarl
sbb
in
and
mov
data16
sti
mov
and
and
cwtl
jnp
mov
ja
lcall
loopnew
js
jge
rorl
xchg
cwtl
jl
push
dec
pop
outsb
push
dec
decb
cmpsl
mov
mov
inc
pop
das
les
dec
push
mov
adc
filds
add
gs
mov
mov
sbb
aad
push
mov
test
dec
push
xor
sti
inc
loopne
ret
mov
stc
sub
fnstenv
stos
xchg
push
fcompl
in
push
test
lods
inc
jmp
cld
add
xor
pop
sbb
jmp
pop
outsl
add
ret
xor
push
jp
nop
pop
xchg
sub
lret
or
ss
dec
popf
icebp
gs
cmp
inc
dec
and
jle
mov
sub
sub
ljmp
cltd
leave
and
icebp
add
pop
leave
cmp
test
mov
imul
aas
fs
mov
call
inc
in
jge
xor
outsb
mov
mov
shlb
data16
and
adc
mov
inc
add
cli
mov
rcr
inc
cld
dec
popa
repnz
cmp
stc
cmp
fisttpl
pop
test
pop
mov
pop
into
inc
xchg
lea
faddl
jne
jns
inc
sbb
mov
cmp
sub
jp
mov
mov
adc
fwait
xor
hlt
cltd
lods
mov
shlb
lods
add
jno
dec
add
fadd
imul
and
test
shlb
jmp
jl
addb
js
aas
sub
addr16
std
fdivs
sbb
sub
scas
ds
ret
mov
hlt
icebp
jmp
out
sti
inc
mov
loop
loopne
arpl
incl
in
xor
stos
int
xchg
jnp
cmp
ret
fstpt
lret
push
aad
inc
fcompl
lahf
jns
in
sub
cmp
aaa
mov
das
sbb
push
loop
xchg
lret
and
pop
ja
cli
jne
fstpt
aam
push
push
adc
mov
lds
addr16
add
inc
mov
mov
cmp
shlb
fstpt
mov
insb
scas
js
fcoml
mov
sbbl
lock
fs
jmp
adc
out
and
addr16
sbb
movsb
jnp
fisubs
addr16
sti
cmp
loopne
cmp
call
inc
xor
add
cmpsb
sahf
mov
les
sub
mov
pop
mov
addr16
cs
sub
xor
movsl
inc
les
stos
jbe
test
and
movsl
clc
add
inc
pop
mov
cmc
inc
pusha
movsb
mov
jecxz
bound
dec
add
adc
inc
mov
sbb
sbb
mov
call
pop
mov
jns
mov
lock
scas
lcall
adc
les
xchg
sahf
jmp
jnp
push
and
dec
cmp
mov
mov
aaa
cmp
jge
lret
aas
xchg
test
shlb
push
ret
mov
stos
xchg
stos
jae
push
sbb
sub
add
and
and
test
jecxz
jb
xchg
movsb
cmc
fcomi
mov
cltd
fdiv
push
and
add
roll
xor
pop
in
decb
mov
sub
jae
fxtract
cmpsb
dec
mov
sbbl
adc
push
pop
cmc
or
mov
insl
call
cmp
inc
jno
adc
std
inc
adc
dec
or
dec
xor
and
pusha
and
in
jecxz
subb
addl
adc
in
push
bnd
and
mov
test
stos
std
pop
pushf
pop
pop
repz
jle
ror
jno
mov
testb
or
jae
subb
mov
dec
fstpt
dec
mov
mov
mov
mov
mov
adc
adc
jbe
jo
mov
and
cwtl
out
ds
dec
into
pusha
mov
in
xlat
push
sub
sbb
mov
subl
jne
ret
aam
ret
stc
fisubrl
fwait
addr16
lcall
cwtl
int3
adc
rorb
cmp
ret
or
adc
xor
xor
cmpsl
mov
sub
pop
dec
in
adc
and
loopne
jne
and
enter
daa
xor
mov
mov
andb
mov
test
sub
add
repz
js
insl
pop
negb
mov
mov
xchg
sub
and
jecxz
aas
push
xchg
leave
or
ret
test
cmp
adc
or
test
inc
cmpsl
adc
xchg
sbb
ds
loop
mov
rorb
push
pop
movzwl
push
out
in
xchg
push
push
mov
pop
lret
movsl
out
stos
xchg
dec
mov
inc
int
inc
in
cmpsb
adc
and
imul
mov
cld
mov
lret
fdivl
clc
mov
and
leave
push
mov
pop
inc
mov
movsl
repnz
in
or
notb
repz
add
sub
dec
cmp
mov
movsb
lods
inc
inc
mov
xor
jge
mov
pop
mov
and
xchg
inc
mov
frstor
imul
jecxz
jge,pt
and
add
iret
imulb
xorl
lock
xchg
iret
in
inc
add
xlat
and
inc
sbb
cmp
lret
xor
push
pop
mov
nop
xchg
cltd
in
test
lret
roll
mov
lods
in
inc
add
or
pop
add
add
fsubrs
inc
mov
dec
pop
push
int3
js
xchg
dec
sbb
jle
xor
push
sti
xchg
std
sub
sbb
cmp
aam
data16
mov
xchg
cmp
ficompl
mov
mov
fiadds
mov
inc
push
push
push
push
fisubl
sub
or
repz
mov
or
cmp
out
mov
pcmpgtb
push
push
into
lods
orl
push
add
cwtl
add
mov
arpl
xor
sub
test
inc
adc
cmpsl
addr16
repz
pusha
mov
lcall
sahf
imul
xchg
inc
pushf
loope
testl
daa
das
jecxz
addr16
sub
push
and
nop
mov
int3
call
sbb
pop
mov
shll
jp
pusha
outsl
jno
int3
addr16
std
sbb
andl
ss
out
push
movsl
jnp
cmp
mov
ficompl
push
out
ret
loope
sbb
and
push
dec
jp
push
xchg
xchg
push
in
xor
call
push
lret
sahf
jg
das
shlb
repnz
jbe
insb
adc
scas
popl
and
pop
jne
sbbl
dec
sbb
call
push
push
mov
cmp
jo
fwait
pop
xchg
mov
shlb
fnsetpm(287
popf
shll
dec
imul
jmp
cmpl
mov
sbb
xchg
add
je
xor
xor
push
mull
sub
jo
jp
lods
and
stos
icebp
push
fcom
hlt
repnz
ds
pop
test
dec
pushf
js
aas
lods
fwait
or
test
bound
push
xchg
ja
inc
imul
sub
and
mull
mov
inc
jg
fldenv
scas
pop
pushf
mov
call
and
ljmp
outsb
mov
aad
scas
jno
outsb
xor
jae
movsb
inc
gs
scas
fldl
mov
lret
outsb
fwait
mov
lds
xchg
mov
mov
incl
pop
mov
pop
int3
adc
mov
lret
pop
adc
test
lahf
cmpsl
mov
adc
movq
mov
bound
test
dec
subb
mov
mov
out
test
jns
sbb
jl
aam
subl
sbb
adc
xchg
icebp
nop
stos
sub
mov
add
sbbl
dec
call
out
jne
sbb
push
jo
or
cwtl
push
test
sbb
and
inc
mov
jle
mov
jg
ja
rcll
in
xor
lcall
in
push
int3
push
in
std
das
mov
jge
jae
bound
mov
int
sbbl
dec
sub
stc
andb
fildl
mov
xor
xchg
push
sahf
mov
jae
leave
xchg
or
out
movsb
cmp
push
gs
loope
push
js
lds
pusha
lock
pop
dec
mov
inc
xor
dec
daa
mov
add
in
add
aad
popf
sbb
int3
repnz
loope
bound
push
sbb
out
mov
push
in
out
adc
call
mov
pop
stc
push
xor
stc
dec
outsl
cmp
lcall
pop
cmp
sbb
sbb
lahf
xchg
stc
clc
popa
sbbl
and
jle
cmp
pop
xchg
rclb
inc
cmpsb
imul
mov
xchg
push
xchg
shlb
mov
lods
push
xchg
sbb
into
into
cmp
sahf
fdivrl
jbe
out
in
es
fwait
and
push
mov
jbe
push
aaa
stc
outsl
mov
pop
or
or
jne
or
xor
gs
mov
daa
das
xor
pop
popa
movsb
bound
std
rolb
ja
xchg
add
sub
lods
mov
dec
cltd
mov
xchg
push
push
test
jnp
jecxz
add
sbb
mov
cmp
stos
prefetchwt1
pop
mov
fdivrp
outsl
les
fimuls
cmp
and
inc
loope
sti
mov
xchg
adc
fcoml
je
js
xchg
popa
icebp
call
cmp
sti
dec
popf
dec
jmp
mov
xor
jge
mov
xchg
adc
arpl
jecxz
push
addr16
lock
xchg
pop
stos
fiadds
jmp
ja
adc
xor
sub
mov
mov
push
je
sbb
mov
faddl
lcall
and
rorb
lcall
int3
mov
jp
dec
inc
sub
les
popa
mov
sub
cmp
adc
mov
push
mov
add
sbb
mov
cs
lds
jbe
cmp
xorl
and
pop
push
mov
clc
pop
test
fidivrs
mov
sbb
jle
xchg
push
or
mov
jnp
mov
mov
mov
js
and
or
fisubrl
lret
scas
inc
push
out
add
icebp
iret
add
jle
sbb
leave
test
mov
xor
mov
cmp
cmp
dec
popa
lea
mov
adc
xchg
cmp
mov
push
push
insb
in
fistpll
aas
std
stos
push
fsubrl
xor
dec
sarl
dec
cltd
or
out
lock
imul
adc
shlb
fistl
inc
nop
mov
dec
lds
and
mov
jge
fs
dec
fst
dec
add
cli
icebp
ret
mov
xchg
aam
je
leave
ss
ss
mov
nop
sti
mov
mov
ret
adc
iret
dec
aam
nop
out
lret
js
jle
lret
sbb
dec
mov
repnz
aam
dec
sti
and
push
mov
popf
or
fidivrs
mov
mov
addr16
int3
pop
xchg
out
orb
cmp
sbb
cld
dec
addr16
xchg
into
loopne
loope
outsl
dec
mov
jb
pop
scas
test
jle
xchg
lods
dec
rorl
inc
shl
fwait
xor
mov
fcom
sahf
sbb
lea
bound
js
mov
push
rclb
mov
in
nop
mov
shl
xor
push
lret
gs
cld
lret
sti
bound
mov
les
and
push
xchg
adc
mov
xchg
xchg
inc
cmp
js
ja
mov
mov
inc
sub
inc
jcxz
lock
stc
cmpsl
nop
icebp
or
sahf
insl
push
jbe
lret
aas
sub
or
cld
aas
test
cmp
pop
fisubrl
dec
mov
es
pop
idivl
cmp
sub
in
sbb
mov
and
mov
dec
dec
sti
push
mov
insb
inc
test
jbe
adc
aam
inc
loopne
lcall
sub
je
sub
xchg
push
pusha
pushf
xor
fs
ds
xchg
sbbb
fsubrl
es
dec
shlb
add
jbe
add
push
xchg
int3
push
iret
mov
enter
jno
and
jecxz
mov
call
pop
outsl
fistpll
xor
mov
inc
fists
test
push
pop
dec
cmp
sub
inc
imul
jle
sub
xor
mov
mov
jmp
sbb
or
aam
xchg
inc
cld
cltd
fsubrl
xor
ss
lahf
jg
imul
outsl
jbe
cmc
addl
push
pop
dec
mov
rcll
pop
and
jbe
movsb
mov
rcrb
push
std
dec
or
inc
ja
pusha
sbb
or
push
mov
fsub
mov
into
sub
sbb
pop
xor
shrl
ljmp
call
lock
mov
pop
fbld
dec
enter
jle
pusha
push
movsb
dec
add
data16
xchg
xchg
in
ret
dec
fiadds
push
insb
xchg
rcll
std
pop
test
pop
jno
push
dec
or
cmp
pop
into
roll
cmp
mov
cli
scas
movl
bound
inc
push
insl
xchg
out
cmp
ljmp
inc
and
add
clc
call
xchg
jle
mov
lock
imul
jmp
dec
push
pop
loope
repz
scas
and
pushf
std
popf
dec
stc
sub
sub
movsb
clc
add
xchg
push
dec
jl
int3
cmc
pushf
arpl
push
sub
or
sbb
cmpsb
cmp
jnp
scas
test
push
add
movsl
cmp
adc
mov
aaa
fs
daa
and
adc
scas
sub
das
das
cmpsl
pop
ret
or
loope
adc
movsl
xchg
imul
push
dec
jae
jecxz
aam
push
or
mov
insl
mov
jle
pop
hlt
adcl
test
out
addr16
pop
xor
pop
or
xor
and
xor
jbe
sbb
sub
test
js
jp
add
testl
mov
ljmp
in
pop
enter
sub
cmpsb
and
xchg
inc
fs
pop
aaa
daa
xorl
jns
sub
out
sbb
or
or
movsl
xor
xchg
dec
fildll
dec
mov
pushf
aam
push
out
mov
mov
push
and
add
aas
outsl
cld
xor
lret
adc
roll
cmp
add
hlt
cmp
addr16
jp
jmp
xchg
xchg
icebp
jg
sbb
sti
add
dec
mov
inc
loop
cwtl
mov
gs
ja
enter
sbb
into
into
cltd
int3
pop
das
push
push
icebp
clc
and
sub
pop
cmp
adc
inc
pop
mov
xchg
iret
jp
xchg
je
shll
repnz
xor
adc
pop
push
lea
adcl
nop
movsl
push
dec
sub
call
je
push
dec
jb
pop
pop
mov
xor
nop
out
cmp
jl
add
push
loopne
cmp
xchg
xchg
decb
insb
rclb
daa
xor
or
leave
cmpsl
sub
in
loopne
fdivl
loope
call
js
nop
orl
mov
sbb
insl
andl
dec
filds
addr16
push
iret
pmaddwd
xlat
dec
add
pop
ljmp
loopne
jae
jae
xchg
out
mov
mov
fcomip
xchg
pop
lcall
ds
mov
pop
clc
mov
adc
xor
ror
mov
mov
jne
stos
xchg
add
shl
push
dec
push
fnstsw
fildl
lods
inc
arpl
push
std
mov
outsl
adc
mov
pop
sbb
sbb
shlb
mov
nop
push
js
loop
mov
int
sub
xchg
sbb
cmp
jo
jae
pop
fdiv
push
sub
ret
pandn
gs
cmp
scas
add
les
mov
andl
pop
mulb
stos
stos
and
jne
pop
jg
jmp
push
xchg
sub
push
aam
cmp
mov
imul
call
or
and
cmp
cwtl
xchg
js
je
aaa
into
sbb
xchg
jecxz
and
out
dec
mov
jle
lea
fcoms
push
sub
add
int
pop
fistps
push
push
jnp
aad
sub
mov
mov
sbb
lock
rdmsr
stos
and
movsb
cmp
lahf
jne
dec
setno
lods
and
mov
rorb
jg
cmc
cmpsl
xchg
xor
shrl
test
mov
mov
insb
push
cmp
pop
cli
ret
mov
inc
pop
xchg
pop
test
popa
les
cmp
sub
dec
xlat
inc
pop
mov
xlat
pop
cmpl
scas
sti
mov
dec
push
icebp
mov
pop
adc
dec
insb
andl
loope
cmp
hlt
dec
sbb
sbb
jnp
ret
loop
idivl
mov
jecxz
in
in
adc
mov
mov
out
add
jb
in
call
push
lock
sbb
push
sub
subl
movsb
mov
mov
jp
icebp
jge
mov
jae
mov
or
jne
sub
or
mov
cwtl
sbb
ffreep
sub
loopne,pt
jae
pop
sti
jge
aam
xchg
popa
and
and
repnz
mov
mov
mov
pushf
ss
push
mov
cmp
addr16
fnstenv
ret
dec
pop
das
pusha
adc
clc
fiaddl
lods
jae
fldcw
fsubrl
idiv
lret
movsl
loop
enter
and
std
mov
sbb
push
cltd
inc
add
icebp
clc
cmpl
js
daa
out
push
fsub
push
cmp
ja
pop
imul
mov
fwait
mov
and
bound
fldcw
sti
push
sar
or
jle
cs
cmp
and
or
loop
into
arpl
cmc
and
mov
xor
jno
cwtl
lds
pop
test
stc
nop
or
cmp
sti
jg
aaa
outsl
cmp
call
adc
insb
cli
add
push
jae
cmpsb
mov
mov
push
mov
loope
fucom
icebp
sti
daa
mov
mov
xlat
dec
mov
bound
adc
test
cld
add
shl
cmp
dec
sahf
and
mov
pop
loopne
std
cwtl
and
mov
lcall
add
scas
xchg
inc
jae
ret
repz
sbb
test
out
mov
daa
dec
js
sti
into
push
push
sub
mov
imul
loop
add
pushf
negb
lods
je
lret
stc
popf
or
movsl
mov
push
cld
xlat
xor
push
mov
hlt
inc
adc
bswap
lcall
xlat
addr16
bound
loope
retw
insl
fcmovb
mov
sbb
sub
cwtd
pop
or
mov
pop
mov
xchg
mov
adc
adc
xor
add
xor
fists
ss
call
inc
rorb
sahf
addl
enter
enter
mov
mov
xchg
cmp
mov
iret
callw
das
xrelease
mov
popa
cmp
sbb
shlb
mov
ljmp
insb
je
pusha
lea
aas
daa
xor
dec
cld
dec
sbb
add
dec
dec
data16
xchg
leave
pop
lret
addr16
aam
leave
sbb
add
xor
mov
push
jp
xchg
jg
loope
inc
cli
lret
xchg
xchg
mov
mov
jle
sub
aas
andl
xor
push
jge
sbbl
mov
push
mov
mov
fwait
outsl
cmpsl
outsl
xor
dec
inc
cmc
in
pop
mov
scas
lock
sar
ljmp
test
cltd
push
loope
mov
pop
pop
pop
jb
xchg
icebp
lcall
in
iret
pop
icebp
pop
cmovp
imul
cwtl
aas
cmp
fisubl
insb
stc
in
call
aam
jp
mov
std
out
push
or
jo
pop
int3
mov
adc
test
dec
pop
out
mov
jo
inc
ja
jo
sub
andl
jns
lcall
mov
test
sub
js
out
add
push
cltd
mul
xchg
hlt
xchg
add
dec
and
xchg
stos
xchg
inc
aaa
add
das
gs
arpl
jg
fcompl
in
mov
jae
call
fldt
sahf
mov
stos
push
fcomps
push
push
cmpsl
mov
addr16
scas
or
clc
andb
lods
mov
or
cmp
hlt
cmpsl
dec
dec
mov
fsubrp
mov
or
jo
pushf
daa
and
or
sbbb
add
shrb
in
pop
dec
and
test
jnp
pop
xchg
lods
inc
in
ljmp
add
mov
ret
fistps
sti
jge
jne
outsb
retw
iret
jo
fistpl
xor
in
mov
sub
addr16
out
loope
test
ja
jecxz
test
rcl
clc
sbb
pop
enter
jmp
bound
test
adc
cmp
stc
cli
and
rorb
mov
in
fldcw
inc
mov
xor
fwait
dec
scas
les
dec
or
add
jo
sub
sbb
mov
jne
dec
orb
and
mov
outsb
and
stos
sahf
inc
inc
aaa
xchg
nop
xor
repz
sub
into
clc
fstps
fmuls
adc
jp
cwtl
cmp
nop
xor
aad
mov
scas
adc
adc
sub
addb
sub
or
pusha
push
mov
sti
pop
popa
inc
popl
and
xchg
sahf
ret
sbb
repnz
movsb
stos
shlb
push
lock
mov
push
ja
lea
test
rclb
cltd
lds
fwait
push
push
daa
pop
xor
inc
das
sub
insl
pop
aad
sbb
jl
aad
lcall
das
mov
movsl
push
mov
jns
icebp
dec
cmp
cs
mov
or
pop
push
repz
cmp
out
pop
out
mov
mov
pop
cwtl
jp
or
push
lret
imul
test
scas
mov
dec
sub
outsl
mov
hlt
in
and
cwtl
nop
les
test
adcb
clc
dec
ss
les
and
popa
jge
push
repnz
xchg
cs
ja
cmp
pop
jmp
adc
add
add
lret
dec
pop
pop
push
add
xchg
pop
data16
cs
mov
in
repz
mov
jnp
mov
fidivl
dec
sbb
lods
cmp
in
das
outsl
aaa
push
fmuls
or
xchg
mov
addb
xor
mov
pusha
dec
je
mov
push
andl
js
xchg
in
xchg
pop
sub
sub
mov
sub
xchg
xlat
inc
or
ret
jmp
loopne
jg
in
mov
test
inc
mov
push
stos
or
mov
dec
adc
pop
mov
std
loop
cs
std
sbb
int3
push
aas
add
and
vmulss
cmc
into
out
call
aad
inc
inc
lret
mov
mov
add
add
dec
sub
imul
daa
mov
fnstcw
push
add
pop
pusha
xor
lea
push
xor
rorb
pop
pop
addb
shlb
push
jp
leave
mov
pop
addl
xchg
outsl
jecxz
inc
push
sbb
pop
insl
fdivrs
je
lock
mov
clc
icebp
xchg
lods
xchg
test
sbb
jp
cli
call
inc
xchg
and
out
movb
xchg
shll
dec
xchg
in
test
rcrl
roll
mov
ds
clc
das
jb
dec
dec
cmp
add
jne
jno
mov
push
sub
mov
cwtl
std
adc
pop
sub
daa
pop
mulb
cmp
je
push
sbb
add
inc
fucom
sub
inc
sbb
popa
cmp
push
sbb
xor
cmp
repz
sub
and
mov
fstpl
mov
out
rolb
sub
dec
ficoms
xlat
xchg
out
imul
dec
mov
loopne
andb
push
imul
jae
mov
stc
or
jge
dec
add
popa
mov
imul
bound
aam
jl
or
sbb
cltd
cs
enter
sahf
shll
cmpsl
into
dec
inc
enter
cltd
sub
jmp
add
lret
in
push
fwait
mov
push
subl
sbb
ja
cmc
xlat
movntq
fcmovnbe
stos
sbb
xlat
lods
xor
or
sub
repz
enter
outsl
xchg
sbb
mov
sbb
mov
xchg
pop
bound
jne
fs
les
popf
into
pop
ret
fsts
push
shrb
daa
outsb
push
fldt
das
and
mov
mov
mov
scas
pop
mov
out
rep
mov
mov
jno
cmp
jnp
inc
fs
mov
outsl
movsl
sbb
push
std
sbb
popf
push
repz
imul
push
push
push
xlat
and
jns
andl
mov
lret
dec
mov
es
into
ret
js
push
jo
xchg
push
lock
std
les
pop
stos
push
iret
xor
in
cmpsb
into
adc
clc
pushf
stos
ss
dec
push
inc
inc
cli
andl
out
mov
sub
pop
notl
testl
inc
xchg
xor
sbb
mov
out
shl
sbb
dec
scas
sbb
dec
test
add
adcl
lret
pop
sbbb
and
mov
xchg
scas
cmp
pop
and
outsl
pop
xchg
imul
sahf
cld
mov
in
pushf
and
std
or
push
nop
mov
mov
popa
jne
xchg
ret
scas
enter
imul
cmp
mov
inc
and
sahf
gs
ss
imul
cmpsb
push
adc
xlat
jg
push
sbb
push
lahf
jecxz
popa
mov
test
sub
ficoms
lock
xchg
mov
iret
xor
cmp
les
add
add
ret
pop
push
shll
mov
push
xchg
add
ret
xchg
popa
pop
cli
iret
arpl
mov
lds
scas
adc
cmpb
iret
fcmovbe
ret
cmc
push
pushf
data16
scas
sbb
out
repnz
leave
xlat
addr16
daa
xchg
xchg
inc
inc
rclb
xor
or
push
dec
xor
and
mov
adc
cmc
lock
push
dec
xor
jb
int
fldl
movsl
jecxz
adc
out
dec
dec
ja
adc
add
pop
lahf
in
pop
lcall
jbe
adc
add
sub
sahf
mov
addr16
inc
leave
dec
ja
mov
inc
stos
push
hlt
push
out
popf
push
fcoms
ss
gs
test
data16
jae
dec
dec
rcl
ljmp
pop
sbbb
jb
insl
jne
add
lret
test
pop
lods
lea
mov
ds
adc
sub
loope
jmp
nop
jl
enter
xchg
ss
push
xchg
inc
pop
cmp
jbe
dec
mov
movsb
add
adc
dec
je
cwtl
mov
mov
imul
pop
cmp
pop
arpl
jo
in
das
cltd
shr
cmp
iret
hlt
push
dec
addps
mov
arpl
iret
push
inc
xchg
ret
in
nop
pop
pop
lods
mov
inc
dec
movsb
aaa
pusha
or
and
mov
xor
push
loopne
hlt
sub
pop
nop
sub
out
cmpsb
xor
adc
add
icebp
pop
call
int
insl
lock
insb
mov
into
pop
movsb
test
add
bound
bound
sbbl
data16
movaps
pop
add
cs
mov
mul
dec
pop
mov
movsb
aam
scas
mov
and
insb
pop
pusha
inc
jp
adc
sbb
sub
int3
pcmpgtb
das
divl
outsb
cmp
es
mov
pop
das
repnz
inc
dec
mov
xor
gs
faddl
outsb
and
pop
sarb
mov
or
jecxz
fwait
mov
mov
clc
cmp
mull
out
add
cli
in
div
sti
cmp
outsl
fnstenv
sbb
ret
dec
adc
and
push
dec
push
xchg
xchg
inc
pop
dec
xlat
push
mov
sbb
lea
cmpsl
add
cmp
leave
in
repz
int
inc
xor
lcall
dec
fwait
mov
and
data16
lret
jle
xlat
test
divl
scas
ret
cs
or
ja
jle
popa
and
inc
inc
jae
pop
fcmove
mov
adcb
adc
popa
pusha
push
stos
dec
sti
push
insb
outsl
xchg
mov
dec
xlat
hlt
xchg
mov
adc
sbb
pop
dec
xchg
icebp
cmpsl
in
pop
in
mov
cmp
fwait
pop
dec
data16
in
dec
test
in
pop
and
mov
cmp
addr16
test
inc
mov
ret
mov
and
mov
sub
and
push
ret
inc
enter
aam
je
scas
add
cmp
add
xchg
insb
out
aaa
call
leave
cmpsl
in
test
and
f2xm1
cmp
push
push
jecxz
inc
push
daa
test
jl
xor
dec
cli
btr
mov
iret
aaa
cmc
jecxz
inc
cmp
sub
jae
sti
mov
push
jb
push
test
add
out
pop
pop
sub
out
sub
call
in
pop
outsl
jge
xchg
in
mov
sbb
sbb
lcallw
aad
or
iret
lea
jbe
cli
lods
and
and
xchg
xor
in
cmpsl
and
scas
nop
enter
and
mov
push
in
in
sub
jmp
in
addb
lret
imul
and
pop
and
repnz
jne
cmpsb
push
push
mov
aaa
add
push
or
mulb
cltd
out
sbb
mov
push
lahf
loopne
mov
mov
push
sub
adc
cltd
pop
loopne
in
and
mov
and
sbb
fmul
addr16
jno
jns
lds
dec
jbe
jmp
shlb
sahf
in
push
inc
mov
js
cs
pop
pop
lahf
lods
xchg
xchg
jl
loopne
nop
jg
inc
cmpsl
push
add
in
or
jl
lret
jmp
mov
xchg
add
mov
add
jl
cmp
mov
add
scas
mov
push
push
jl
fwait
dec
or
xor
xchg
mov
xchg
sbb
inc
push
push
push
pusha
iret
js
push
cmpsl
daa
xchg
mov
fidivrl
lahf
jb
rol
insb
fstpl
leave
lcall
jecxz
cmp
push
inc
mov
inc
mov
aas
cwtl
mov
mov
xchg
and
push
insb
popa
mov
and
cld
pop
aas
fldln2
push
xchg
ss
dec
imul
push
lds
inc
pop
mov
pop
mov
jo
out
sbb
rcrl
xor
sub
dec
icebp
dec
lea
mov
sarl
fidivrl
daa
inc
repnz
ja
sti
fstl
das
adc
stc
jl
xlat
xchg
jp,pt
xchg
mov
sub
nop
adc
jnp
pop
insb
pop
in
std
idivb
adc
push
mov
leave
inc
inc
fs
stos
or
adc
inc
lods
adc
subb
xor
add
stos
inc
cltd
outsl
adcl
rcrl
mov
fcoml
jne
cmp
clc
push
dec
cmp
cmp
dec
or
stc
xchg
xchg
or
sub
push
lods
mov
push
lahf
xchg
push
inc
jb
lcall
jmp
xor
mov
pop
in
stc
cmp
ljmp
aad
jl
data16
mul
push
sub
xchg
jmp
lock
add
inc
xor
adc
jmp
shl
cmpsl
or
in
xchg
fstl
sar
inc
xlat
or
outsl
lds
das
dec
fcoml
inc
jmp
cmp
repz
inc
aaa
int3
aas
daa
jo
cmp
imul
insb
repnz
jl
je
outsl
sub
add
cmp
or
int
movsb
mov
add
mov
mov
jnp
nop
dec
xor
or
push
aas
lret
fwait
das
push
insb
pminub
or
xchg
push
cmc
cwtl
or
jnp
mov
sarl
inc
clc
pop
xchg
mov
repz
adc
scas
pop
cmp
xlat
mov
enter
fimull
mov
das
add
push
movsl
cmp
hlt
adc
out
rcl
or
sub
push
call
loopne
pop
adc
popa
mov
ret
stos
xchg
das
pop
pop
adc
adc
dec
faddl
sub
and
and
int3
jb
in
dec
and
mov
fwait
inc
xchg
stc
sbb
jg
scas
das
and
xchg
andl
pop
jne
fsubrs
test
xor
dec
aam
cmp
add
stos
sub
xor
int
sbb
test
pop
cmp
mov
loop
mov
movsb
mov
or
dec
stos
mov
mov
cmpsl
sti
mov
insb
push
arpl
mov
ljmp
pushf
pop
fisttpl
call
or
jg
daa
andb
adc
mov
rorl
or
and
jbe
xlat
mov
xchg
xchg
rorb
push
fwait
add
sub
movsl
test
mov
das
lea
mov
dec
loope
leave
lock
jge
rcrl
lods
cmp
add
dec
insb
jns
popl
pop
stos
int
mov
push
cmc
rcr
test
and
mov
fbld
nop
adc
mov
fs
imul
inc
std
add
cmpsb
and
bound
xchg
mov
ret
fcoml
and
stos
hlt
jecxz
or
sbb
push
and
cmp
mov
xchg
fistpl
mov
jl
mov
jl
cli
dec
push
test
fcom
lcall
jmp
clc
or
aad
cmpsl
or
add
push
pop
fwait
test
and
mov
fisttps
in
int
aam
sbb
aaa
dec
push
jns
aaa
popa
inc
mov
popf
sbb
xchg
lcall
mov
mov
arpl
adc
dec
out
lods
lods
mull
fiaddl
ds
or
jo
adc
fwait
aam
push
jl
jnp
mov
xchg
jmp
xchg
jbe
imul
mov
test
enter
in
or
fwait
lret
mov
lods
paddsw
inc
and
cmp
mov
cmp
into
mov
push
into
mov
ss
and
cmp
pushf
in
and
stos
cmp
push
mov
mov
pop
out
inc
jae
sub
mov
inc
je
gs
sub
cwtl
push
jg
mov
xchg
sti
test
out
cmc
mov
push
jne
mov
loope
aad
adc
imul
int
adcl
mov
inc
jns
scas
sbb
scas
addr16
mov
jg
cmp
xchg
push
and
mov
push
out
pop
or
iret
jne
ret
adc
xor
cs
inc
or
pop
push
add
into
dec
cmp
dec
aaa
sbb
mov
mov
jbe
stc
jae
pushf
pop
jle
outsl
push
test
bound
fs
test
inc
pushf
or
sub
lods
daa
cmpsl
mov
hlt
jns
fcmovnb
fwait
jnp
leave
pop
repnz
xchg
mov
xor
mov
push
cmpsb
insl
dec
mov
aas
jb
not
fsubrl
lahf
adc
and
ss
jae
add
insl
add
push
dec
adc
or
outsl
loope
movsb
adc
sbb
pushf
jge
les
push
sbb
mov
lret
pop
aaa
out
test
insl
test
mov
adc
pushf
inc
add
divl
scas
jb
cld
push
sti
sbb
cli
insb
sub
loope
or
leave
ret
aam
outsl
aad
push
sahf
xchg
add
into
inc
add
sbb
lds
sbb
test
sub
push
pop
inc
int
imul
das
fnstenv
mov
jmp
lret
aad
inc
sub
clc
and
icebp
mov
aas
adc
mov
or
cmp
jns
idiv
xlat
stos
or
mov
aaa
jnp
xor
jmp
rcrl
add
js
inc
data16
shlb
sbb
cld
or
scas
add
or
jecxz
sbb
mov
dec
push
sbb
cmp
in
add
insb
mov
push
add
inc
xchg
pop
popf
out
jmp
lret
mov
cmp
call
pop
mov
push
cmpsl
cmpsl
rorb
cmp
dec
jl
jmp
adc
adc
in
arpl
mov
iret
fsubr
mov
cmp
xor
cld
mov
sub
data16
mov
stos
std
imul
cs
shll
or
cmp
sub
xchg
jge
cmp
xchg
rol
dec
mov
call
mov
fs
outsl
fldcw
outsb
adc
fsubr
scas
lods
sbb
rclb
fdivs
mov
dec
es
int3
aam
pop
jns
and
xor
nop
mov
jbe
push
imulb
fcomip
pop
scas
repnz
shlb
jae
pushf
aad
push
imul
mov
mull
mov
test
in
xchg
or
ret
cmp
jg
jg
sbb
push
ja
pop
sbb
std
xchg
ret
push
nop
ljmp
mov
int
nop
lret
fucomp
repz
icebp
mov
out
call
push
clc
imul
cltd
popa
sti
jne
xchg
es
pop
xchg
add
or
loope
jg
xlat
pop
dec
mov
and
pop
and
mov
bound
inc
dec
xchg
pop
bswap
xor
lock
mov
and
push
rorb
pushf
subb
insb
leave
imul
mov
and
in
cmp
xchg
cmpsb
mov
add
addl
dec
xor
imul
stc
ljmp
jbe
movsl
jno
test
cmp
push
loope
dec
jmp
arpl
mov
lcall
push
dec
in
mov
mov
leave
xor
jle
jle
xchg
jbe
je
xchg
add
fsub
mov
addb
mov
inc
outsl
in
icebp
movsl
xor
xchg
or
aad
jno
jp
mov
sbbb
into
pop
or
cs
and
push
scas
push
mov
arpl
or
add
or
xchg
and
inc
dec
jno
dec
int3
sub
and
add
cmp
adc
add
out
inc
xchg
das
mov
mov
adc
aaa
test
add
aaa
stos
stos
clts
dec
push
rcrb
jae
xchg
das
push
mov
jo
mov
mov
push
loopne
dec
sub
add
aam
pushf
clc
out
roll
ja
out
jl
sbb
cmp
xchg
and
loopne
or
add
lret
inc
lret
divl
push
aam
inc
fwait
jg
inc
call
mov
xchg
addr16
xor
dec
mov
or
push
ficoml
cld
pop
pop
jmp
aaa
jmp
les
mov
pop
sub
sub
mov
adc
mov
jmp
pop
ds
dec
lret
ja
out
rclb
in
xor
fidivrs
or
icebp
das
sbb
and
xchg
inc
out
andl
mov
fstpt
mov
in
fwait
lods
xor
adc
cmpsb
movb
stc
jae
pop
xchg
xor
dec
xchg
xor
add
pop
rol
or
push
lock
push
xor
test
hlt
xchg
push
push
jnp
negb
rcl
enter
das
sbb
jg
mov
pop
mov
inc
and
gs
push
les
in
lret
aam
push
scas
pop
cwtl
daa
clc
fimull
lret
test
push
inc
stos
push
pop
dec
imul
int
out
or
xchg
mov
clc
clc
pop
enter
mov
jb
adc
sub
je
out
xchg
mov
les
cmp
aas
js
lcall
cmp
push
mov
daa
in
mov
ret
xchg
das
imul
jg
dec
jno
ret
push
mov
in
daa
dec
shr
mov
lea
insl
dec
into
or
xchg
mov
adc
dec
sbb
repz
sti
and
rclb
pop
sti
dec
mov
scas
dec
jne
jl
jg
orl
jns
cmp
dec
xor
mov
cltd
movsb
ret
sbb
movsb
sub
call
jb
pop
scas
ret
push
aad
sub
mov
loopne
call
pop
mov
hlt
jge
mov
push
mov
popa
nop
adc
pop
test
adc
or
pop
lahf
sbb
dec
ret
push
lods
lret
pop
cmp
pop
mov
push
cmpsl
jecxz
gs
sbb
jl
or
sub
sbb
aas
fnsave
cmp
push
xorl
popa
pop
ljmp
jno
mov
pop
sub
sbb
or
mov
xchg
lcall
pop
adc
jle
sub
jl
fwait
out
adc
mov
jo
cmp
jg
xlat
inc
das
pushl
es
xchg
test
nop
cwtl
adc
icebp
adc
adc
rorw
mull
mov
pop
popa
mov
inc
xchg
shl
imul
and
xchg
aaa
popa
inc
mov
repnz
imul
xchg
scas
inc
mov
mov
addl
lock
fdivl
lahf
test
xor
fisttps
push
jp
mov
cld
ret
lcall
ljmp
mov
mov
fdivs
add
int3
lea
add
sub
sbb
or
pusha
imul
push
inc
bound
xor
add
mov
cmpsb
adc
adc
mov
dec
popf
push
mov
and
sti
adcb
inc
lcall
insl
insl
mov
and
loope
jb
repz
xor
sbbl
mov
mov
push
or
push
pop
pop
inc
mov
insl
mov
add
mov
cmp
cltd
mov
dec
cmc
ja
lock
nop
call
add
in
xchg
xchg
or
and
mov
jg
lret
test
sub
cmp
les
push
clc
je
adc
mov
arpl
and
xlat
xor
icebp
loopne
dec
shlb
clc
pop
popf
out
mov
or
xchg
cmp
add
push
sub
add
jl
in
shlb
insl
ds
les
je
in
sbb
push
pop
or
pop
sub
lret
sub
ss
sahf
push
enter
mov
and
xor
inc
or
in
cmp
loope
js
ret
cmp
mov
and
leave
ffreep
cs
repnz
int
jnp
movsb
lret
mov
push
cmp
mov
movsl
add
adc
mov
adc
xor
daa
out
push
cli
test
lds
stc
pop
inc
loop
dec
push
icebp
sub
mov
inc
push
inc
imul
leave
mov
push
mov
add
add
sahf
jl
sahf
ret
sbb
fstpl
pop
pop
jge
js
idivl
inc
lcall
out
sbb
inc
cmpsb
inc
jmp
jne
cmp
pop
fidivs
out
pop
ret
dec
stos
mov
or
call
fs
and
pop
mov
sbb
or
inc
scas
in
mov
nop
dec
jge
xchg
adc
test
jbe
sub
and
bound
dec
lods
mov
movswl
mov
mov
vunpcklps
pop
and
movsl
and
add
push
add
ret
mov
pop
mov
incl
adc
leave
jno
shll
cmpsb
dec
pop
and
loop
mov
xchg
xchg
jecxz
data16
sub
lcall
jge
inc
rol
add
stos
sub
sti
sbb
jo
sbb
sahf
jl
out
fwait
enter
jae
or
sub
jp
adc
popf
jmp
or
lds
pushw
loope
pushl
or
sub
xor
roll
cmp
pop
push
push
jp
iret
andb
jae
stos
out
dec
jbe
inc
dec
sbb
lods
les
inc
push
popa
push
mov
pop
add
add
cli
pop
test
cltd
mov
addr16
std
dec
enter
jl
dec
pushf
pop
stos
jmp
xchg
jne
iret
xchg
pop
adc
jecxz
aas
rcl
xchg
dec
cld
mov
sbb
push
fcmovu
pop
inc
and
dec
shl
sbb
cmp
xchg
sbb
lea
jg
inc
sub
mov
sbb
push
divl
in
cmp
or
mov
mov
xchg
outsb
popf
mov
push
enter
lods
lcall
mov
gs
xchg
mov
sbb
repz
jns
cmp
lds
pusha
jge
or
bound
mov
cmp
add
push
aam
or
mov
mov
xor
ds
mov
sar
cmp
adc
outsb
sub
push
lahf
add
insb
pop
mov
adc
push
xor
add
ret
jns
cs
popf
pop
xchg
rcrl
or
lcall
lret
rol
je
mov
or
push
loopne
clc
int
pushf
out
mov
push
arpl
pop
jl
inc
in
ljmp
andl
mov
loopne
sbb
pop
scas
and
rcl
or
or
xor
jecxz
loope
out
jns
lret
orb
cmp
inc
add
cmp
and
push
adc
jmp
stos
in
push
xor
int3
xchg
cmp
mov
pop
push
out
pop
repz
negl
loope
xchg
and
ds
sti
add
pop
or
lds
ljmp
movsb
loop
in
fwait
rol
test
in
lods
cmp
in
and
inc
test
loop
mov
test
les
jb
jle
or
push
adc
mull
shrl
and
mov
cltd
sub
push
hlt
mov
imul
mov
sti
test
mov
cmpsl
mov
sbb
push
into
add
ja
mov
dec
std
pop
pop
adc
arpl
popl
mov
pop
cmp
jmp
bound
mov
mov
jg
inc
movsl
adc
insl
xlat
pop
scas
xor
jns
hlt
or
sahf
and
mov
jg
sti
pop
jo
or
jnp
and
lahf
cmpsb
pop
mov
mov
movzbl
inc
xchg
xor
je
les
test
push
rcl
mov
mov
sub
lods
sbb
js
fs
pop
dec
inc
lods
ficomps
jp
int3
pop
int3
xchg
jo
sbb
adc
mov
cmp
lea
pop
ja
mov
mov
imul
loopne
rcrl
scas
into
fbstp
xchg
xchg
repnz
and
add
xchg
jg
fsubr
lcall
call
mov
lds
movsb
and
int
adc
jb
pop
mov
fdivrs
pop
cmp
call
jo
stos
rcrl
adc
jne
lods
notl
jp
dec
pop
xchg
or
inc
push
arpl
inc
stc
lea
push
xor
xchg
cmp
mov
push
jg
popf
loope
shrl
adc
jno
adc
and
xlat
jl
inc
fnstenv
jno
sbb
fucomip
pusha
into
push
mov
pop
cmp
inc
cmp
mov
hlt
push
aaa
mov
out
scas
cmp
adc
mov
lcall
jmp
push
inc
movsb
pop
and
pop
outsl
xchg
sbb
mov
mov
adc
jb
jbe
xchg
scas
jo
inc
insl
into
iret
sahf
and
lock
adc
ficoml
inc
jae
xchg
push
sub
push
pxor
or
aas
and
ficomps
xor
jmp
mov
mov
pop
std
fisttpl
cmp
icebp
jecxz
inc
rcll
jnp
push
xlat
mov
xor
xor
xchg
mov
mov
xor
sbb
or
pop
cs
dec
out
jg
push
cmp
insb
out
mulb
inc
push
xchg
je
aas
int
xor
sti
outsl
sub
xchg
inc
paddb
jne
fisttpll
sbb
mov
and
sub
movsl
enter
test
out
roll
xor
adc
je
repnz
mov
iret
push
out
inc
sub
jbe
and
into
xchg
mov
mov
adc
in
dec
test
dec
scas
hlt
and
jg
add
and
cmp
sub
std
sub
pop
pop
popa
sbb
in
je
jmp
add
mov
jne
pop
xor
xchg
jbe
xchg
jne
add
fsubl
dec
mov
cmp
je
pusha
mov
inc
xor
shll
or
sbb
rorb
nop
insb
xchg
adc
pop
arpl
add
ficomps
sahf
xlat
or
mov
lcall
movb
orb
stos
jne
adc
dec
xor
mov
call
stos
sbb
mov
mov
insb
aad
mov
data16
cli
or
decl
push
movsl
xchg
mov
mov
mov
push
roll
or
ljmp
jo
cli
cmc
xchg
inc
mov
jecxz
pushf
inc
insl
and
ljmp
push
jae
cmp
dec
scas
mov
test
insb
mov
addr16
popf
sub
jns
dec
dec
inc
sub
jnp
fisttpll
pop
ss
or
dec
scas
shlb
fisttpll
ret
cld
inc
sbb
and
lret
cmp
add
nop
sbb
aas
xchg
cmp
hlt
add
cmp
nopl
nop
leave
xor
hlt
lds
sbb
in
push
sub
push
arpl
jecxz
inc
rorb
rcrl
lds
mulb
lahf
sbb
movsb
jp
cmp
fbld
mov
sbb
in
stc
test
cmpsb
arpl
push
sbb
adc
dec
stc
and
push
pop
in
out
mov
cli
push
inc
and
test
inc
jmp
call
xor
pop
push
leave
pop
jl
out
mov
pop
sub
push
aaa
xor
dec
outsl
sti
mov
sub
addr16
fstps
inc
sbb
pop
inc
sub
push
pop
inc
mov
dec
mov
imul
xchg
stos
lods
jl
popa
leave
mov
pop
out
xchg
data16
shll
shrl
cld
xor
ret
xchg
aam
xor
pop
xchg
adc
add
adc
int3
dec
adc
add
cs
xchg
push
leave
mov
inc
jns
sub
dec
fdiv
fsubrp
add
aas
rcrl
jecxz
and
push
fmul
addb
pop
dec
icebp
cmpsl
es
sti
loopne
jbe
mov
add
in
add
mov
jae
xchg
and
out
mov
popa
mov
jns
dec
push
push
xchg
dec
jne
nop
xor
jmp
xor
pop
adc
xor
ret
shrd
mov
repz
jae
lods
mov
push
loopne
xchg
shlb
add
push
scas
inc
push
add
xor
or
push
adc
inc
pop
mov
cmp
repz
shll
sbb
xchg
pop
jl
nop
jns
sbb
add
push
mov
xor
pop
fdivs
cmpsb
xor
imul
adc
sbb
pop
lcall
push
adc
add
cmp
push
out
push
xorl
cli
cmp
rcrl
roll
mov
xchg
pop
scas
pop
shlb
xchg
outsl
xchg
lods
jmp
fdivrl
xchg
jns
push
add
ret
push
icebp
push
adc
jnp
scas
jmp
push
out
mov
fimull
jno
aam
jmp
mov
push
ret
popa
test
mov
xchg
out
stos
dec
bound
inc
inc
sti
jnp
inc
push
or
into
or
test
add
inc
push
rorl
leave
mov
xor
repnz
cmpsb
sub
jno
aas
jecxz
sub
cs
in
adc
pop
sub
mov
or
jno
cli
pop
jnp
and
inc
cli
mov
enter
ss
mov
lods
push
les
pop
lcall
scas
sbb
dec
loop
fildl
jg
or
mov
inc
sub
fbld
in
xchg
xor
clc
dec
adc
mov
mov
or
leave
loopne
icebp
adc
mov
ss
cltd
jno
stc
pop
sti
cltd
ret
adc
add
dec
pop
mov
pop
data16
outsl
fwait
lahf
jne
cs
popf
xchg
mov
lret
in
mov
lret
mov
daa
out
lock
shrl
std
outsb
jle
mov
movb
adc
mov
mov
lds
bound
mov
dec
inc
sahf
mov
scas
rorb
repnz
fistps
fldcw
mov
xchg
shlb
add
add
jnp
push
jb
mov
push
xor
outsb
insb
adcb
test
mov
mov
out
movsl
hlt
in
pop
lcall
lcall
shrb
in
es
jb
and
jno
mov
loop
bound
xlat
or
out
repnz
dec
gs
test
cmp
pushf
dec
outsl
into
mov
add
inc
xchg
js
pop
sub
push
arpl
jg
lret
jecxz
mov
test
jae
push
push
add
aaa
pop
push
inc
orl
and
mov
aad
pop
inc
insb
lret
gs
stos
js
fbstp
rorl
test
and
sahf
and
mov
xor
ficomps
lds
inc
or
shr
dec
sbb
push
hlt
jne
sub
inc
jns
dec
xchg
loope
sub
lcall
sub
xor
movsb
nop
add
pop
std
rcl
jp
sub
test
and
xchg
xor
aaa
cmp
ficomps
push
pop
cs
insb
fbstp
stc
dec
cmp
mov
arpl
shl
sub
dec
test
aam
pop
ljmp
fidivrs
pushf
xchg
ret
in
sbb
sbb
mov
cmp
push
outsb
cmp
add
inc
inc
call
adc
xor
jecxz
fstpt
fld
out
jns
xor
es
or
imul
or
cmp
pop
gs
mov
decl
or
call
roll
add
nop
and
xlat
inc
xchg
xchg
push
and
je
inc
xchg
push
ret
int
xor
fstpl
lahf
mov
sbb
mov
mov
lahf
jns
aaa
jecxz
in
xor
push
mov
xchg
subb
fisubrl
xor
or
jmp
int3
mov
lret
fwait
pop
adc
push
cltd
adc
xor
aaa
cld
adc
adc
pop
pushf
data16
js
xor
push
adc
adc
push
pop
mov
adc
jmp
xor
fld
or
lcall
jp
sbb
andb
icebp
dec
loop
shrb
jo
cmc
pop
adcl
fistl
jne
pop
jae
nop
mov
xchg
jge
js
sub
decb
dec
pop
pcmpeqd
rcrl
cld
movq
or
in
inc
mov
jle
incb
inc
fwait
cmp
inc
dec
sub
fs
mov
xchg
icebp
push
xchg
cli
inc
jbe
js
add
pop
jmp
into
scas
leave
out
xchg
mov
inc
adc
adc
dec
ljmp
add
cmp
push
push
or
insl
jg
xor
inc
pop
or
sbb
cmpsb
push
mov
cs
xchg
xchg
sub
int
inc
sbb
or
aas
aad
aaa
es
movsl
push
mov
cmp
adc
pop
xchg
movsl
lahf
adcl
inc
shlb
mov
add
mov
mov
shll
cmp
js
mov
pop
scas
fwait
jecxz
stos
mov
or
inc
shl
push
rcrb
out
add
dec
inc
cmpl
rclb
xor
jo
insl
jecxz
xchg
lret
add
sti
mov
rorl
xchg
push
sub
xlat
roll
xor
pop
cmpsl
iret
outsl
xor
sub
pop
xchg
add
popa
das
xchg
jnp
xchg
mov
sub
sub
shrb
insb
test
add
cli
sbb
adc
lahf
mov
or
leave
jne
adcb
mov
jecxz
jp
cltd
je
or
pop
repnz
and
out
lret
lret
pop
sub
test
cwtl
es
cmp
test
dec
cmpsl
jmp
bound
flds
shlb
and
push
mov
popa
ljmp
xchg
xchg
addr16
int
or
out
pop
adc
std
out
fistpll
sub
add
xor
jp
mov
push
sub
sbb
idivl
jmp
mov
cmpl
and
mov
gs
lcall
orb
stos
sbb
dec
shlw
cmp
dec
xchg
loope
pusha
xchg
xor
ja
pusha
clc
stos
xor
orl
jbe
dec
sbb
jne
rcrb
fldcw
rcrb
lret
shll
daa
pop
push
mov
bound
ja
push
stos
push
xchg
or
push
push
mov
data16
inc
add
or
lret
lock
js
lods
push
inc
ja
dec
shlb
adc
mov
mov
dec
mov
cmp
add
mov
mov
xor
pop
adc
fnstcw
lods
out
sbb
test
sbb
cmpsl
push
push
cmp
movsb
jb
aas
shrb
adc
mov
or
call
pop
jl
dec
out
nop
jle
rclb
mov
or
mov
lds
cs
pop
inc
push
jb
cmp
ret
jle
xor
or
imulb
icebp
mov
push
or
push
jne
and
push
and
pusha
cli
dec
inc
pop
je
mov
pop
clc
sub
pop
mov
data16
ficoml
sbb
in
lret
scas
adc
sar
push
out
lahf
ds
inc
insb
adc
mov
xchg
pop
or
mov
push
lods
pop
insb
push
xchg
daa
mov
push
icebp
xchg
xor
xchg
flds
adc
pop
scas
pop
rclb
scas
pop
jb
out
add
stc
stos
insb
jp
lret
lds
xor
push
sub
pop
dec
clc
je
xchg
add
dec
push
adc
mov
mov
fsubs
lahf
sbb
mov
ds
sarb
adc
ficompl
add
jmp
dec
push
xor
lahf
clc
js
aad
inc
push
add
ja
test
lods
add
push
lods
aad
dec
jl
sti
jg
fldl
sub
shlb
sbb
jo
inc
pop
andnps
dec
movsl
cmp
inc
xchg
js
stc
jns
test
ret
push
mov
pop
push
aas
xchg
jmp
fbstp
addb
xor
ljmp
xor
jno
push
je
inc
cmp
in
add
sbb
dec
stc
adc
sub
inc
in
push
mov
repz
xchg
mov
loop
lds
cmc
stos
sbb
cwtl
repnz
movsb
or
stos
and
loopne
mov
test
cmp
mov
lds
shlb
jbe
and
pop
push
xchg
xchg
movsl
xchg
lret
ljmp
sti
sbb
mov
inc
adc
neg
or
pop
fidivrl
inc
mov
jg
pushf
test
outsl
enter
sbb
or
push
and
or
pop
inc
cmp
jae
adc
divl
insl
push
pop
sti
faddp
and
jbe
jg
stos
pop
mov
lret
adc
or
mov
pushf
ja
push
mov
xor
or
xor
or
test
pop
xchg
int3
shrb
push
cmp
shrl
adc
mov
fwait
or
cmp
cwtl
stc
test
mov
and
inc
ret
add
cmpsb
jecxz
arpl
insb
pop
xor
dec
mov
cmp
xchg
mov
aad
fistpl
fwait
lods
repnz
jp
cltd
fidivrl
mov
cmp
rcrl
movsl
pop
pop
sbb
sub
mov
pop
jl
cltd
inc
es
scas
popf
push
mov
lahf
sarb
gs
jg
xchg
rolb
xchg
imul
pop
jnp
into
push
cld
mov
add
and
pop
mov
mov
in
mov
arpl
clc
mov
or
pop
icebp
xorl
outsb
sar
cwtl
cli
insb
or
or
iret
out
mov
leave
ret
repz
mov
test
ret
xchg
jge
mov
rol
xor
iret
ljmp
cltd
negb
inc
xor
cmc
inc
mov
ja
test
sbbb
enter
push
jo
jp
push
push
jle
in
pop
jg
movsb
xor
dec
and
lds
aaa
mov
nop
scas
push
call
jns
dec
dec
sbb
adc
or
add
repnz
loop
ds
fdivs
pop
xchg
lret
xor
xchg
mov
jg
out
jo
insb
pop
or
sub
es
test
mov
repz
add
jge
sub
pop
push
ja
das
aad
mov
js
jno
push
xchg
pop
inc
mov
sub
jae
xchg
jp
lret
or
mov
lea
shrl
inc
shrb
mov
cmpsb
aam
fwait
mov
out
repz
push
pop
xor
mov
sub
mov
mov
cld
mov
xchg
push
dec
outsl
ret
pop
mov
inc
nop
mov
jne
sbb
std
pop
lds
loope
mov
inc
xor
push
add
inc
sub
jbe
dec
movsb
push
fisttpl
stos
arpl
xchg
pop
das
rcr
scas
lods
cmpb
adc
pusha
cld
ds
push
arpl
test
xor
xchg
test
pop
ss
mov
std
cwtl
xchg
stos
jne
lret
cmp
incb
aad
pop
outsl
lcall
and
pop
add
incl
add
lret
mov
sbb
movsl
sbbb
rcll
aam
imul
bound
fucomi
cmp
cmp
loopne
mov
sub
hlt
and
movsb
lock
jne
add
scas
pop
cmpsb
or
push
loope
and
jl
hlt
lcall
idiv
shll
dec
addr16
das
inc
orb
lods
aaa
cmp
cmp
inc
rorl
add
es
out
pop
std
dec
sub
ret
sbb
add
fadd
enter
imul
pop
mov
sub
cmc
inc
fcos
fisubl
icebp
add
push
pop
std
scas
sub
push
jecxz
sub
hlt
mov
ret
mov
pop
lods
push
adc
fdiv
out
addr16
out
cli
aad
sub
push
ds
pop
stc
lcall
cmc
or
xchg
loopne
push
data16
or
push
rcll
push
xorb
movsl
fisubrl
mov
xchg
popa
stos
lods
addr16
adc
push
xchg
inc
inc
pop
lea
ret
mov
push
xchg
iret
mov
pushw
test
les
jno
mov
cltd
sub
les
subb
push
std
sub
in
mov
lea
pop
sahf
das
pop
inc
mov
ss
jmp
mov
bound
xchg
add
cmpsb
sarb
sbb
leave
sbb
sbb
inc
pop
fs
dec
sub
push
lret
out
inc
in
aam
shl
std
jne
out
icebp
adc
popf
jge
sub
inc
xor
cmp
xor
mov
push
dec
push
cltd
repnz
fisttpl
pop
push
sub
pop
sbb
inc
repnz
add
les
jmp
lods
into
add
repz
fs
lea
inc
mov
imul
add
notl
sbb
mov
cs
jns
notb
mov
lods
xchg
inc
lock
and
loop
jle
jmp
aaa
sbb
shr
and
push
push
push
and
outsl
into
xchg
xlat
je
xor
xchg
cmpb
xchg
dec
cmpsl
negl
mov
mov
test
gs
mov
or
xchg
scas
xor
lcall
pusha
test
pusha
shl
push
pop
jae
mov
les
and
and
out
mov
inc
cltd
test
loop
xor
jno
iret
inc
xchg
lock
pop
ds
xchg
rorl
pop
mov
sahf
pop
or
aas
daa
test
dec
std
clc
fdivrs
bnd
int
push
fsubr
sbb
call
cmp
mov
insb
cmc
outsb
loope
sbb
add
mov
mov
dec
inc
adc
mov
insl
out
mov
loopne
lret
cwtl
in
or
rcl
and
frstor
jg
add
int3
jl
pop
leave
jmp
xorb
mov
push
inc
outsb
fcomip
aad
pop
ret
repz
sbb
xor
dec
loopne
loop
cld
xchg
inc
out
add
out
stos
mov
rol
push
and
pusha
add
movsb
inc
enter
ljmp
and
jne,pt
and
add
enter
mov
mov
fisttpll
pop
xchg
aaa
call
cmp
jle
leave
mov
mov
dec
jnp
mov
jmp
fdivl
sub
test
mov
push
cmpsb
dec
or
call
fwait
mov
cmp
cli
inc
in
out
lret
loop
dec
sbb
mov
icebp
adc
scas
ret
aaa
sbb
xchg
jg
out
and
popaw
movsb
jmp
jl
dec
sbb
hlt
popa
mov
mov
adc
xchg
out
inc
int3
cmpsl
loopne
lods
inc
stos
cmpsl
inc
adc
add
data16
pop
test
and
popa
mov
sbb
fisttpl
push
pop
or
movsl
adc
out
outsb
push
inc
lock
sub
xor
stc
cmpl
and
lock
adc
xor
or
adc
mov
sbb
mov
hlt
pop
sbb
xchg
std
push
loopne
adc
out
mov
cltd
mov
cmp
mov
cmpsl
add
and
stc
cmp
jb
hlt
cmp
ljmp
adc
jecxz
cmpl
loopne
aaa
or
fcoml
std
dec
mov
pusha
pop
pop
out
xor
nop
xor
cmp
stos
aas
loope
sbb
xor
repnz
sbb
sub
mulb
sbb
cmp
insb
sbb
inc
shl
ja
inc
fwait
push
pop
sub
cwtl
xchg
insb
dec
clc
push
or
push
fstpl
ret
mov
sti
iret
pop
xor
inc
inc
jge
ret
repnz
stos
or
les
jle
ja
dec
dec
mov
pop
decb
add
dec
push
shlb
iret
pop
scas
add
jl
dec
icebp
ret
or
imul
loope
xchg
xchg
sbb
stos
mov
cmp
aad
daa
shlb
ret
and
jmp
andl
pop
leave
dec
push
and
rcrl
lret
lods
addr16
fstpt
out
sbb
xlat
ss
scas
inc
jp
int3
inc
mov
gs
test
out
dec
loope
cmc
out
lret
scas
xchg
sbb
rol
adc
inc
loopne
cmp
pop
or
pop
push
fwait
enter
je
jle
fcomp
sbb
push
jae
dec
pop
xchg
xor
lret
pop
pandn
sub
mov
cmp
cld
jl
mov
xor
mov
cs
lahf
shlb
outsb
mov
pop
cs
mull
shl
mov
pop
push
sbb
or
inc
call
adc
pop
or
push
fdivl
mov
ds
adc
pop
push
jns
popf
ss
outsl
xlat
mov
pusha
bound
push
scas
fsubrl
imul
js
pop
iret
int3
cmp
test
adcb
or
mov
mov
jge
rclb
sbb
into
dec
push
xor
push
jmp
inc
movsl
leave
loopne
mov
fwait
inc
pop
and
push
loopne
jp
adc
bound
mov
int
mov
xchg
cmp
inc
ret
sub
pop
pop
or
mov
imul
sbb
cltd
push
pop
pop
fnsave
fistpl
pop
leave
je
shll
mov
cli
ficoms
jne
sti
insl
jae
push
inc
push
loop
int3
inc
adc
andl
add
ja
pop
and
sub
sahf
push
mov
js
mov
ljmp
mov
push
jns
popa
and
out
inc
pop
xor
cmc
sbb
push
adc
test
lods
pop
sbb
jne
pop
ret
stos
insb
push
ret
xchg
outsl
jecxz
rcll
mov
sbb
fadds
sub
jg
fnstsw
std
add
and
inc
test
mov
add
dec
filds
jne
cmp
out
push
xor
les
inc
call
add
repnz
repnz
aad
xchg
popa
push
movsb
addr16
sub
jmp
loopne
lods
or
loope
jne
push
mov
push
and
arpl
push
fwait
xor
jnp
and
cmpsl
sub
push
pop
push
jne
xchg
and
mov
jg
andb
dec
orb
pop
push
add
mov
or
repz
lcall
jo
push
clc
push
mov
lcall
aad
out
and
and
sbb
inc
mov
adc
nop
cmp
push
pop
and
xor
and
test
pop
pop
jl
arpl
imul
sub
jecxz
sbb
xchg
ja
cmp
jno
sub
mov
add
cltd
pop
push
mov
sub
into
xchg
mov
test
popf
and
mov
and
outsl
insl
inc
cmpsb
pop
mull
sbb
mov
insb
pop
pop
jno
xchg
xor
sub
aaa
xorl
dec
xchg
pop
xor
cmc
add
pop
adc
ret
mov
cmp
dec
sbb
adc
cs
idiv
mov
fmull
ja
clc
das
mov
sbb
mov
cmp
pop
insl
adc
popa
add
clc
jl
fwait
mov
idivl
fistl
mov
push
movsl
jle
gs
jae
test
mov
xor
mov
and
sub
push
rorb
mov
shll
and
sub
stos
out
loopne
ffreep
xor
addb
and
push
mov
mov
sub
xor
jp
fcmove
and
lret
push
repz
push
enter
dec
dec
out
xchg
insl
sti
inc
mov
cmpsb
loop
inc
pop
jge
imul
sub
ss
adc
xor
les
sbb
cs
stos
sub
add
lret
add
dec
and
ss
add
call
ret
cmp
dec
cmp
fs
xchg
jnp
inc
inc
push
imul
das
cmp
xchg
lock
imul
out
std
clc
sbb
xchg
inc
sbb
iret
in
cmp
insl
sub
out
int
pop
or
and
push
fisubrs
adc
jg
add
or
push
jle
inc
lods
cwtl
insl
and
xchg
dec
sbb
push
mov
shll
enter
insl
ljmp
es
jmp
jp
rcrb
adc
xchg
fadds
or
sub
lahf
xchg
mov
add
fsubrl
pop
cmpsl
test
pop
ss
hlt
mov
ds
clc
test
mov
adc
adc
xchg
pop
jno
push
test
mov
mov
stc
mov
pop
mov
jmp
lods
insl
inc
push
test
int3
mov
arpl
sub
hlt
popa
add
ret
loope
gs
add
ficoml
lret
adc
cmp
sbb
add
out
sub
mov
in
cmp
shr
test
cltd
out
xchg
int3
jae
cmp
popf
mov
inc
gs
xchg
pusha
negl
js
mov
push
popf
test
xlat
mov
add
and
leave
sbb
data16
mov
mov
cmp
mov
mov
sbb
dec
stos
sbb
jge
dec
mov
sub
cmp
nop
lods
sub
jg
cwtl
xor
xchg
test
jns
or
adc
insb
aaa
lret
cmpsb
imul
dec
cmp
fimull
and
in
sbb
push
pop
cmc
pop
jl
fsub
mov
callw
fst
add
icebp
mov
sub
ja
repnz
cld
pop
pop
das
or
adc
data16
std
mov
or
jmp
scas
fstpl
out
or
aam
test
or
mov
outsl
es
in
sahf
add
pop
add
idivb
jg
lret
sqrtps
jo
popf
inc
ds
adc
adc
lret
stc
mov
lcall
inc
adc
les
jbe
mov
ja
out
addr16
mov
js
mov
je
push
adc
es
ds
movsb
dec
aad
dec
mov
in
xchg
rclb
xchg
or
inc
jo
sub
dec
sbb
push
out
imul
repnz
lea
leave
adcl
call
rorl
out
mov
and
or
cs
lcall
push
adc
out
jb
icebp
xorb
or
mov
pop
es
imul
cwtl
insb
mov
jp
pop
loope
aaa
cs
loop
dec
outsb
and
cs
dec
test
test
icebp
sub
xor
es
cmp
pusha
inc
sbb
sarb
jmp
fldcw
cmp
in
xor
mov
jg
cwtl
sarb
sbb
pusha
test
adc
xor
es
fcomps
push
dec
pop
stc
mov
test
jb
push
cmp
xchg
lock
jmp
inc
mov
lahf
mov
outsl
scas
mov
jge
cmp
js
jge
shl
rorl
or
cli
dec
movsl
cmp
adc
testl
adc
push
stc
xrelease
in
enter
jnp
mov
mov
adc
add
insl
sub
push
aas
mov
mov
add
lds
lcall
and
push
pop
mov
lods
xchg
movsb
jb
lds
mov
aad
lea
scas
popf
inc
cmpsl
mov
push
mov
jae
xchg
or
jmp
sar
stc
andb
xchg
test
mov
mov
pusha
jns
fstl
cltd
jmp
adc
das
and
and
cwtl
aas
out
incl
ret
sub
ljmp
add
jb
lret
cmp
inc
in
stos
sub
xor
push
loope
push
xchg
cmp
xchg
out
out
dec
xor
mov
mov
lret
inc
mov
out
pop
es
test
mov
pop
iret
outsl
sbb
jne
jnp
rorb
popa
in
cwtl
nop
push
stos
das
pop
pop
xchg
mov
mov
xor
leave
les
pop
jns
push
mov
and
sbb
xor
loop
ret
push
jg
cmp
iret
daa
inc
inc
or
shlb
ljmp
mov
jle
add
add
jmp
shrl
and
or
mov
jecxz
mov
mov
sarb
xor
jl
or
dec
ret
fdiv
dec
shlb
and
add
jmp
inc
pushf
and
call
andl
int
mov
aam
push
mov
adc
ja
lea
ss
xor
mov
inc
add
clc
and
add
adc
push
insl
dec
arpl
jns
loop
shlb
push
rcll
add
mov
sbb
jp
pop
or
scas
adc
fs
xchg
bound
dec
dec
std
dec
jl,pn
pusha
xchg
lea
xor
les
sahf
xchg
je
addr16
popf
mov
test
int3
pop
add
mov
mov
enter
imul
iret
hlt
ret
imul
testb
sub
shll
out
xchg
mov
cmp
in
adc
int
sub
fildll
mov
ja
jnp
jbe
pusha
or
nop
push
roll
enter
repnz
adc
push
cvtpi2ps
lret
scas
pop
dec
out
cmp
cli
mov
mov
test
and
sahf
fwait
adc
xor
movl
jmp
pusha
sub
je
mov
lea
movsl
mulb
mov
jl
push
rclb
push
fsubrl
xor
lods
scas
add
adc
mov
pop
mov
push
jne
push
xchg
mov
dec
pop
add
mov
jg
dec
xor
test
cmpsb
shlb
push
adc
jge
jmp
xor
mov
pushf
sub
andb
sub
push
adc
out
es
or
push
mov
imul
push
insb
mov
cmp
xlat
dec
stc
arpl
into
push
jp
mov
arpl
sti
testb
rcrl
dec
push
addl
adc
insb
daa
js
sub
in
fdivs
pop
xchg
fistps
ja
mov
adc
fmuls
test
ret
je
lock
cmp
cmp
mov
loope
popf
jecxz
dec
or
mov
lcall
sahf
pusha
test
sbb
push
lret
sahf
mov
mov
mov
jge
nop
inc
and
xchg
negb
jno
dec
mov
repnz
dec
jnp
std
mov
cmp
add
pusha
xlat
pop
icebp
iret
and
jg
fisubl
adc
fildl
dec
orb
ret
mov
fiadds
jmp
push
add
push
jecxz
xchg
fnsave
fs
fstpt
push
push
rcrb
adc
mov
mov
mov
push
pop
xchg
lret
sbb
mov
hlt
mov
aam
loope
lods
push
sub
mov
xchg
mov
mov
xor
xchg
repz
pop
jecxz
adc
idivb
lea
outsb
mov
sub
xchg
mov
sub
mov
push
das
xor
mov
rorb
jne
add
stos
jmp
cmc
outsl
loop
fucomi
insb
outsl
ljmp
into
mov
mov
pop
inc
mov
jp
add
adc
int3
cld
mov
adcb
call
cld
jmp
cmp
xor
xchg
dec
inc
xchg
inc
daa
out
push
and
cs
arpl
inc
jnp
ljmp
arpl
add
imul
jecxz
lahf
mov
fs
push
int3
adc
enter
rcll
xchg
out
repnz
cmp
inc
arpl
xchg
pop
fnstcw
inc
lods
mov
xor
iret
xchg
sub
pushf
ss
adcb
cmp
push
lods
mov
shl
cmpsb
dec
and
mov
push
dec
pop
out
fldl
cld
add
mov
loopne
xchg
jns
push
outsb
cltd
out
aam
stos
in
xchg
stc
sbb
rolb
pop
lahf
lock
sbb
inc
xor
mov
lods
mov
push
into
xchg
lret
xchg
pop
aad
std
or
pop
cli
or
mov
fdivp
loope
cwtl
fwait
lea
mov
push
mov
cmpsb
outsb
xlat
jns
xor
push
inc
fwait
add
mov
dec
or
inc
popf
push
mov
fwait
in
repz
and
pop
sub
rclb
fldenv
inc
stos
pop
mov
fwait
rclw
in
icebp
sahf
jb
push
pop
cwtl
pand
adc
jl
dec
stc
imul
mov
or
and
adc
dec
dec
or
testb
ds
adc
loop
leave
add
in
ds
mov
jg
cli
mov
arpl
andl
imul
mov
outsl
push
inc
sarb
es
shl
push
jae
into
inc
xchg
jo
cmp
outsl
mov
clc
sbb
jo
stos
sbb
jne
in
mov
in
int
sub
push
pop
jp
jg
lock
leave
int3
sub
test
rorl
inc
add
inc
lcall
daa
adc
ret
aad
fs
icebp
jl
js
fstl
cmp
lcall
xchg
arpl
shll
mov
push
out
pop
lret
jb
ljmp
mov
outsb
mov
push
push
xchg
loopne
lret
cmpsl
stos
or
ljmp
mov
xchg
iret
outsb
inc
lock
inc
imul
sub
sbb
cmp
mov
mov
xchg
push
fsubs
add
cmp
cmp
cltd
orl
and
scas
icebp
insl
arpl
inc
clc
bound
sbb
aad
mov
cltd
mov
popf
rcrb
mov
xchg
inc
jmp
fisubs
push
sub
movsb
daa
subl
mov
ret
xor
aam
dec
ljmp
ss
rolb
jns
outsl
xlat
mov
jecxz
daa
lods
or
mov
inc
jo
jnp
cltd
cmpsl
mov
ss
es
xchg
addr16
lcall
xchg
mov
lret
and
pusha
dec
xchg
daa
mov
lods
mov
shlb
dec
add
dec
sti
sbb
popa
push
adc
dec
lock
pop
iret
bound
inc
incl
arpl
pop
loop
imul
fildl
xor
into
push
adc
adc
scas
sbbb
and
out
imul
xchg
ds
push
mov
jecxz
imul
fwait
and
add
in
shrb
mov
mov
arpl
in
jbe
xor
push
pusha
push
incl
test
in
xor
mov
bound
adc
lcall
mov
mov
test
cmp
sub
push
mov
sbb
mov
pop
or
dec
inc
add
int3
call
inc
bound
into
adc
aas
sarb
mov
cmc
je
loopne
movb
xchg
mov
and
sbb
mov
rclb
in
xor
push
pop
lret
adc
idiv
pop
cmp
cmp
xchg
or
sub
stc
mov
xorl
xor
mov
mov
addr16
jmp
inc
push
stc
test
mov
inc
cmp
inc
rorb
iret
mov
imul
ret
les
cmp
shl
cltd
push
or
cmp
lret
push
jb
jns
adc
mov
jmp
or
negl
andb
scas
mov
loop
into
dec
dec
clc
call
enter
scas
fst
outsb
push
xor
scas
xchg
ss
movsb
scas
xor
test
movsl
mov
stc
xor
negb
lcall
and
cmp
add
aam
sti
cmp
call
mov
add
imul
or
dec
call
adc
out
cltd
jnp
and
or
xor
loop
scas
lret
cmc
les
xor
das
ss
out
or
or
leave
mov
pop
push
jecxz
outsl
sbb
les
xchg
cwtl
add
cli
bound
outsl
jle
incb
or
cmpsb
pop
repnz
lahf
int3
push
movsb
popa
xchg
clc
xchg
and
push
lods
call
ja
adc
pop
call
push
pop
movsl
cwtl
adc
out
xchg
pop
call
mov
jmp
jl
fs
adc
arpl
rclb
jl
or
dec
dec
or
out
andb
outsb
mov
and
dec
int3
test
inc
cmp
jae
fnsave
je
push
fcomp
jl
dec
in
cwtl
cmp
enter
or
or
sbb
xor
sub
dec
mov
sbb
test
lods
ss
rorb
lea
mov
scas
cs
jle
adc
jae
pop
loopne
loope
cmp
loop
inc
adc
dec
js
pop
fidivs
lds
cmpsl
mov
add
mov
cli
inc
repz
rorb
lret
loop
test
hlt
cli
push
jp
testl
sbb
test
add
fimull
out
jno
nop
int
leave
xor
loope
dec
fidivrs
mov
xor
stos
loop
sarl
fwait
aam
insl
mov
jecxz
and
jno
enter
lcall
scas
pop
push
add
scas
imul
mov
inc
and
in
mov
stc
pop
cmpb
fsubp
jnp
or
mov
mov
mov
push
adc
das
push
pushf
adc
pushf
dec
in
repz
mov
mov
jns
mov
adc
stc
push
les
sti
imull
push
fstpt
inc
mov
pop
fidivs
sbb
iret
push
pop
add
je
cwtl
int
lcall
out
jbe
aad
and
jl
scas
mov
test
pop
test
stos
jo
cltd
mov
add
iret
int3
adcb
das
pusha
xor
aam
jecxz
or
jb
shlb
xlat
jns
jne
dec
or
sub
sahf
mov
mov
and
lds
dec
sbb
fs
add
mov
mov
push
and
cltd
outsb
push
mov
or
mov
xor
jb
ljmp
mov
mov
lods
sub
iret
jmp
push
jae
mov
or
xchg
adc
fldt
mov
pop
arpl
pop
fstl
inc
cwtl
or
mov
cmp
sub
pop
fs
cs
pop
xchg
je
pop
xchg
mov
adc
xor
fldl2t
dec
add
jg
mov
rcll
or
clc
rorl
hlt
out
and
loopne
pop
xchg
xchg
repnz
pop
loope
cmp
rcrb
ret
inc
jno
repnz
xlat
arpl
gs
out
rclb
scas
flds
jl
sbb
or
sub
scas
test
xchg
test
or
fdivrl
cmp
xor
dec
lods
cmp
dec
sub
ficoms
and
in
jbe
loope
xchg
push
sbb
js
mov
add
jle
shll
lcall
jb
fdivrl
sub
test
mov
subb
cmpsl
in
out
mov
stc
cmp
dec
aam
jl
data16
mov
mov
das
stos
cmpsl
test
fisttpl
add
cmp
mov
mov
push
scas
mov
mov
call
lret
mov
mov
inc
mov
mov
js
sbb
add
and
ret
xchg
sahf
inc
push
xor
loop
push
push
in
inc
insl
loope
cmpsb
aam
jne
shll
pop
insl
pop
pop
mov
xchg
ret
outsb
cs
xor
push
xchg
and
inc
push
sarl
jb
das
pushf
in
mov
mov
in
cmpsb
iret
int
push
out
push
xorb
cmp
push
xchg
push
inc
mov
jae
loop
add
and
mov
jno
push
arpl
pop
daa
dec
lcall
xor
mov
imul
push
int3
adc
in
push
inc
scas
in
fwait
pop
movsb
push
add
push
inc
hlt
mov
pop
add
mov
push
movsl
mov
add
popf
aad
pop
push
add
jmp
gs
loop
in
xchg
sub
push
jbe
fbstp
out
push
cmp
and
sub
cmp
pusha
loope
dec
cmp
adc
imul
xchg
adcb
andb
xor
and
mov
das
insl
inc
imul
mov
cmp
lods
and
pop
cmp
mov
mov
out
xlat
incl
in
jnp
mov
cmp
popf
xchg
imul
jnp
flds
mov
out
mov
dec
add
and
sub
leave
test
fildll
cmpsb
push
pop
add
xchg
add
sbb
cwtl
jae
fdivs
push
and
inc
xchg
inc
xor
stc
pop
add
repnz
icebp
or
or
jg
inc
sbb
mov
jmp
js
mov
stc
sahf
dec
or
enter
pop
xchg
mov
pop
cwtl
stc
pop
mov
mov
stc
aas
mov
adc
push
and
cwtl
xchg
cmc
mov
out
cltd
mov
leave
mov
fsubr
add
or
and
cmp
imul
cmp
inc
pop
mov
jnp
dec
cmpsb
outsb
ficoml
sbb
dec
sub
cmp
cmc
ljmp
into
mov
iret
cmp
sub
sarl
jecxz
lea
adc
popf
aaa
lahf
out
pop
out
imul
stos
sbb
add
dec
pop
or
xor
and
sbb
inc
sub
jae
jg
fistps
jo
loopne
xchg
aas
clc
ret
sahf
jg
inc
xor
mov
into
loope
ss
jne
arpl
into
xchg
dec
sbb
xor
pop
pop
mov
push
jecxz
lods
test
shr
popf
jo
imul
lret
mov
sbb
or
push
xor
in
rcrl
fwait
scas
rorb
test
jo
inc
push
int3
pop
cmp
in
ret
lret
fwait
out
pop
jmp
imul
aas
subps
pusha
lret
push
or
iret
sub
nop
xchg
mov
cmp
inc
lods
xchg
adc
adc
mov
xor
mov
xor
dec
test
dec
xor
lret
adc
loope
push
dec
xor
divb
push
xchg
jl
sahf
scas
sbb
cmp
cmc
test
cmp
sub
bnd
fisttps
mov
and
cmp
mov
adc
lret
or
lahf
mov
push
das
repz
mov
sub
decl
loope
sub
jns
xlat
or
xor
outsl
int
mov
cmp
insl
mov
bnd
mov
fwait
aas
push
imul
and
dec
sub
loopne
jns
mov
mov
dec
jecxz
pop
fmuls
push
sarl
lret
movsb
pusha
lods
xchg
mov
jge
bound
lock
fdivrl
push
xchg
out
xchg
dec
inc
roll
daa
jg
es
scas
push
movsb
shll
outsl
ss
mov
mov
cmpsb
lods
js
push
lret
pop
xor
sub
iret
cmpsl
xor
loopne
pop
or
pop
add
cmc
sub
jnp
mov
or
or
out
jecxz
movsl
in
rorl
fs
xlat
loop
push
inc
mov
pop
sahf
xchg
add
scas
mov
xchg
in
insl
lret
addb
dec
jge
mov
or
jg
stos
loop
mov
add
mov
mov
mov
test
fistps
out
cltd
dec
or
inc
pushl
les
lret
sub
xorl
movb
test
lds
test
cmp
xor
pop
into
or
lock
call
std
addb
sbb
fidivrs
mov
xorl
and
sbbb
cwtl
xor
pushf
sbb
nop
repz
arpl
xchg
mov
jmp
mov
gs
pushf
jmp
cmp
shll
mov
jb
insl
cmp
imul
pop
jae
jge
aas
adc
insl
jge
jg
push
xor
loope
add
insl
push
lcall
xor
xlat
push
iret
and
sbb
insb
jle
sbb
or
xchg
insl
call
add
add
lods
mov
or
sbb
cmc
sbb
sete
into
cmp
mov
popa
xor
mov
or
mov
in
mov
movsb
out
lock
sub
insl
mov
and
cmpsl
pushf
jge
push
mov
xchg
outsb
and
inc
or
dec
scas
icebp
fs
dec
cmp
pop
test
sbb
xor
jl
xchg
ret
mov
sub
in
add
jbe
andl
mov
inc
jb
out
mov
testl
cwtl
mov
adcl
ret
cmp
pop
sarb
loop
and
cmpl
andl
mov
icebp
inc
call
cmpb
dec
dec
pop
mov
out
cmp
ret
in
icebp
adc
xchg
stc
push
out
mov
cmp
dec
sarl
push
insl
fdivrs
movsb
mov
shl
push
pop
test
push
or
sbb
dec
adc
test
add
jne
push
mov
shll
fists
add
arpl
pop
cmp
sbb
pop
xchg
dec
int
mov
pop
push
sbb
pop
dec
incb
sbb
adc
cld
movsl
add
pop
pop
mov
push
cmp
push
ret
popf
pop
daa
out
icebp
adc
push
jg
jno
inc
jmp
xor
dec
mov
inc
addr16
mov
xor
adc
cmp
daa
xchg
jecxz
sbb
xor
xor
fisttpll
dec
test
fbstp
cmp
adc
and
jbe
adc
outsb
pop
sub
mov
push
mov
jle
cmp
test
sbb
dec
xor
lods
mov
inc
sub
adc
sbb
dec
mov
dec
out
sub
dec
mov
mov
cmp
xchg
inc
adc
repnz
faddp
les
les
ret
cmc
les
rcll
nop
mulb
imul
fiadds
setnp
xchg
ret
cs
movsb
xchg
dec
sbb
mov
stc
xchg
xor
mov
icebp
das
mov
cmp
xchg
xchg
xchg
call
sbb
mov
jmp
lret
mov
mov
mov
dec
mov
movsl
sbb
addr16
dec
ficompl
pop
xchg
lods
mov
mov
dec
or
mov
adc
add
pushf
loop
xor
jecxz
cmp
xchg
or
ja
xor
jg
push
popa
cmpb
inc
dec
pop
lahf
pop
popf
inc
cmpsb
sub
test
mov
push
dec
mov
jmp
mov
mov
mov
jge
mov
push
ret
mov
push
mov
push
pop
cmpb
jne
fnstenvs
shl
pop
sub
and
sbb
les
dec
adc
repnz
mov
mov
push
xor
lock
gs
jmp
add
lea
mov
stos
outsl
shlb
pop
sbb
ljmp
fstl
hlt
fisubs
mov
shrb
xchg
and
jmp
pop
pop
mov
out
ficoml
nop
cmp
sub
xor
int3
fsubrl
dec
push
xchg
sbb
and
cmp
xlat
sti
mov
fwait
dec
mov
mull
jecxz
flds
xor
mov
cmp
mov
pop
arpl
adc
mov
push
scas
insb
test
push
add
shll
ss
insl
push
mov
and
jmp
out
xchg
js
cmp
push
lret
adc
xchg
scas
xor
adc
mov
dec
movsl
movsl
cli
dec
test
or
mov
lds
push
cmp
mov
ret
push
pusha
sbb
ja
jge
shrl
popa
cltd
cli
mov
shrb
push
daa
push
pop
xlat
mov
jns
xor
mov
test
mov
mov
aam
mov
push
mov
fs
push
jp
pop
lock
push
test
mov
cltd
jp
sbb
and
mov
test
hlt
push
stc
sub
lods
stos
in
cmc
iret
or
ljmp
insb
insb
sti
sub
imul
cmc
sub
test
shl
sbb
adc
enter
xchg
sahf
lcall
into
int
cltd
inc
fdivr
fisubl
push
mov
into
outsb
loope
xchg
ds
push
xchg
fisttpl
jle
or
fbld
fndisi(8087
cmc
mov
loop
pop
push
call
push
inc
cmpsl
and
iret
lock
outsb
repz
into
xchg
addr16
pop
int
fwait
roll
imul
prefetchw
adc
mov
inc
ljmp
sbb
fistps
rorl
or
mov
push
dec
in
daa
lods
inc
cwtl
jbe
pop
mov
jge
lods
pop
mov
jb
jmp
xor
sbbl
pop
pop
data16
and
rol
sub
std
push
cli
xchg
lea
xor
inc
push
outsb
xor
aad
mov
mov
stc
xchg
pop
xor
iret
in
xchg
dec
add
das
out
lods
mov
iret
lock
cmp
cmpsl
out
jno
dec
das
or
out
jns
clc
ss
xlat
nop
xchg
lods
pop
ja
xlat
imul
iret
enter
add
es
data16
popa
sub
mov
xchg
add
pop
or
scas
pop
pop
push
push
push
repz
and
cmp
cmc
addl
pop
sub
or
ret
push
push
add
jecxz
adc
repnz
int3
or
or
adc
cmp
repnz
mov
prefetch
dec
add
inc
dec
out
imulb
jecxz
cmp
mov
cmp
push
lcall
jo
std
jl
out
std
push
es
das
pop
mov
dec
jl
insb
jg
sar
out
mov
ss
ds
ljmp
mov
mov
addr16
hlt
xor
das
lods
ja
xor
lcall
icebp
outsb
rclb
mov
cmp
aaa
push
dec
out
shlb
mov
aam
sub
add
repz
and
imul
xchg
testl
js
scas
inc
adc
movsb
shl
movl
mov
sub
into
ficomps
jns
imul
es
xchg
stos
add
daa
clc
cld
ja
add
mov
mov
ljmp
lcall
push
sub
mov
push
xor
push
sbb
jg
enter
push
aas
push
dec
push
stos
imul
xchg
xrelease
mov
rcrb
add
adc
xor
dec
sub
lods
mov
fs
add
fdivs
mov
adc
cmp
and
add
sbb
adc
sbb
cmp
mov
xchg
cmpsb
xchg
adc
test
adc
cmp
stc
sbb
mov
insl
cmp
daa
test
cli
push
lret
scas
xchg
sar
hlt
orl
cmp
add
sub
icebp
orl
daa
xchg
mov
adc
or
pop
jae
dec
aam
xor
sub
lret
cmp
fwait
pop
loopne
cmp
stos
subl
adcb
push
pop
iret
loop
lcall
mov
sub
xchg
sarl
mov
jno
lods
hlt
jl
jle
mov
push
dec
test
fxch
out
sub
cmp
and
pop
aam
mov
into
pop
int
mov
add
ds
jo
mov
inc
subl
out
or
sub
xor
jmp
pop
cmp
inc
shlb
jo
or
pop
inc
mov
lcall
inc
in
dec
or
pop
scas
sub
push
pop
adc
leave
mov
in
imul
cmp
pusha
aaa
pop
xchg
push
and
out
dec
push
ljmp
mov
inc
sbbb
pusha
sti
cli
add
jmp
mov
push
dec
xchg
xor
inc
jno
popf
xlat
jl
jge
xor
dec
mov
or
sub
or
xor
xchg
inc
push
jnp
fs
jl
nop
dec
mov
nop
pop
cmp
bound
repz
jecxz
movsl
insb
or
and
push
sar
sbb
xor
xor
add
jl
lahf
cmp
sbb
xchg
push
popa
jle
fsubr
dec
jecxz
negb
xchg
mov
std
mov
cmp
mov
mov
in
rcl
mov
mov
rcrb
xchg
add
xchg
xlat
into
sbb
test
pop
in
pusha
mov
push
outsl
inc
sub
mov
scas
push
leave
icebp
movsl
mov
in
outsb
insb
mov
mov
pop
popf
movsb
outsl
jno
psrad
in
rcrl
mov
in
xchg
mov
fisubs
pop
test
or
out
pop
cs
fbld
ja
fnstsw
fisttpll
lret
popa
test
ljmp
loopne
lret
cmp
cmpsl
cmp
mov
shrl
jecxz
fnsave
out
mov
pop
dec
inc
jns
mov
sarb
idivb
sbb
ljmp
adc
dec
and
rcll
pop
or
add
sbb
popf
testl
jp
pop
cmp
pushf
mov
aaa
push
sub
out
cmp
enter
je
lds
cmp
xchg
repnz
or
ljmp
popf
xchg
mov
enter
add
cmp
dec
or
mov
sbb
sub
pop
es
cs
mov
test
push
mov
int
pop
push
call
xchg
ret
int
fimuls
rolb
mov
jo
imul
mov
leave
mov
jns
test
jno
adc
mov
outsl
push
addr16
jns
lods
outsb
pop
push
nop
xchg
ds
test
cmp
stc
mov
pushf
dec
clc
out
gs
fucomi
jb
hlt
ret
push
mov
mov
stc
or
insb
inc
int
ss
xor
mov
pop
loop
pop
add
mov
mov
pop
push
in
dec
push
push
enter
sbb
cmp
jno
je
push
scas
or
movsb
stos
cmp
daa
cli
loopne
lea
and
outsl
mov
xor
xor
mov
inc
pop
sub
testb
push
xlat
mov
xchg
adc
add
cmc
sbb
enter
xorl
rcr
out
cli
popl
pop
cmp
mov
cld
mov
lret
popf
push
mov
fists
rolb
push
and
jge
dec
lock
xchg
mov
clc
mov
enter
popf
sub
inc
das
into
push
sub
push
push
cmp
and
add
fdivrp
sbb
push
xchg
das
and
ds
shlb
ja
and
test
fcmovne
movsb
gs
jge
out
clc
das
sti
fidivrs
idivl
xlat
dec
movsb
jb
xchg
int
loop
daa
and
add
xchg
jbe
out
jnp
cmp
cltd
mov
or
fisttpll
push
mov
das
dec
mov
mov
add
add
mov
imul
mov
ret
xlat
jecxz
xchg
pop
add
adc
or
scas
shrd
fimull
loope
pushf
adc
into
sar
or
xor
call
in
lods
xchg
cmp
mov
inc
addr16
movsb
dec
mov
rclb
out
lret
add
addb
ljmp
mov
push
shll
iret
mov
xchg
imul
std
inc
into
add
pop
fmulp
mov
stos
das
cld
xchg
mov
repnz
mov
cmpl
icebp
mov
mov
cmpsl
fistpl
mov
outsb
add
rol
sti
int
stos
and
cs
inc
fcoml
mov
lcall
dec
xor
mov
cmp
aad
daa
pop
sbb
mov
pop
mov
imul
and
mov
push
rcrl
in
push
pop
popa
and
roll
ret
dec
es
in
lods
dec
push
int
scas
je
aam
stos
mov
divb
fistpl
inc
sbb
aaa
mov
xchg
mov
or
pop
fimuls
jne
cmc
dec
dec
aam
pushf
push
hlt
int
dec
pop
imul
test
dec
jmp
pop
sbb
cmpsb
xchg
or
fdivrs
lods
aad
pushf
insb
rolb
cmp
cmp
or
pop
xchg
push
and
mov
mov
cld
pop
arpl
cltd
or
pop
xchg
scas
or
jge
scas
adc
es
inc
cmp
cwtl
daa
jne
test
lods
jp
fstpt
rcrl
mov
fcompl
xor
scas
xchg
in
es
mov
xchg
js
mov
and
in
ret
out
xchg
adc
pop
loopne
cmp
xchg
lds
and
add
pop
xchg
mov
xchg
hlt
cmp
push
enter
push
push
setns
dec
neg
jo
sbb
mov
sbb
xorb
jecxz
inc
popa
movsb
imul
test
fstps
add
scas
xchg
pop
ja
mov
mov
repnz
std
jge
or
add
mov
xor
push
ror
fucomi
inc
mov
clc
call
dec
in
xor
and
pop
ret
stos
xor
loop
mov
mov
fadd
mov
divl
pop
lock
mov
fstp
fcoms
cmp
mov
sti
sti
add
scas
ficomps
and
mov
mov
mov
jmp
push
lds
jmp
mov
dec
pop
jle
jmp
xor
pop
aad
mov
lcall
lcall
shll
add
mov
push
stos
xchg
lods
pushf
dec
es
xlat
sahf
test
cltd
subb
pop
ljmp
call
cmp
imul
in
adc
jno
scas
repz
arpl
test
jno
insl
cmp
inc
mov
mov
lock
xor
jnp
xchg
jle
cs
xor
das
xor
mov
daa
mov
add
stos
call
orl
add
xor
clc
sbb
cmc
rorb
adc
call
imul
repz
push
inc
mov
and
add
push
fisttpll
ror
inc
cmc
push
cmp
addb
xchg
jmp
sarl
adc
cmp
mov
mov
fnsave
pop
aam
pop
cmp
inc
or
or
mov
inc
cli
push
xchg
pop
fsts
or
out
int
cmp
xchg
outsl
mov
mov
xorl
push
mov
psubsw
clc
lret
jg
or
push
jns
bound
lret
pop
mov
iret
hlt
and
mov
add
cmp
aad
sbb
jle
es
cs
dec
les
xor
xchg
adc
xor
ret
lock
insb
and
notl
push
dec
in
es
ja
sub
mov
pop
add
xchg
dec
ret
xlat
mov
inc
adc
xor
jb
sbb
stos
pop
ljmp
ret
adc
sbb
push
call
pop
in
and
xor
bnd
andb
leave
iret
xchg
jmp
cmp
mov
test
add
lods
insb
in
shll
dec
imul
out
jp
cmp
subl
stc
sbb
movsl
cmpsl
iret
mulb
lret
fwait
push
pop
rorb
adc
mov
mov
adc
jecxz
int
scas
push
dec
movsl
inc
lret
andb
cmovnp
iret
ret
sub
and
xor
inc
out
mov
pop
inc
xchg
adc
shr
repnz
add
in
in
pop
ss
cmpsb
lods
cmpb
in
and
pop
pop
repz
adc
aad
cmp
pop
inc
add
xchg
loope
ss
stc
mov
and
popa
fcompl
ljmp
jnp
add
ja
inc
xlat
mov
mov
xor
das
or
push
cmp
shrl
in
ret
inc
fisubs
push
lahf
dec
pushf
hlt
mov
fidivrl
subl
adc
mov
not
cli
xchg
cltd
push
and
movsb
push
std
repnz
jge
jnp
dec
push
jg
add
mov
mov
icebp
fnstenv
dec
xchg
inc
push
jb
xlat
inc
fnstcw
idiv
loopne
xchg
aad
pop
in
sbb
inc
or
and
jg
sti
ja
jge
add
or
pop
sub
sti
je
pushf
sub
xchg
push
push
mov
test
aaa
stos
data16
outsl
lods
call
xchg
lods
insl
fstps
jnp
push
and
jecxz
add
leave
data16
sbbb
sti
jo
bnd
sbb
in
inc
cs
sub
xor
dec
shrb
cltd
cmp
and
imul
sub
xlat
dec
pop
fs
imul
loope
cmpsl
pusha
and
xchg
mov
or
sti
aam
or
and
in
int3
adc
inc
rclb
pusha
adc
ret
jo
jmp
sbb
cmp
jo
mov
fistpll
ficoms
shlb
jb
sbb
jno
mov
daa
std
xchg
cmc
cwtl
xor
popa
imul
mov
push
push
in
xchg
pop
inc
ret
aaa
addr16
sbb
dec
lcall
and
out
inc
and
add
push
cmpsl
add
mov
inc
sbb
push
sarl
sub
inc
dec
aas
mov
mov
rcrb
xor
lods
outsl
scas
inc
jg
outsl
ja
xlat
jmp
and
jmp
testb
sbb
cltd
lahf
mov
loopne
mov
mov
push
insl
data16
fisubrs
sti
test
adcb
mov
xchg
xchg
rorl
sarl
jae
int
push
rorb
cmp
repz
pop
mov
dec
dec
dec
push
dec
push
or
sbbl
imul
fcoms
addr16
cwtl
inc
enter
pop
ret
insl
int3
call
cmp
adc
xlat
rcl
insb
icebp
mov
xor
xchg
mov
push
mov
test
cli
arpl
nop
loopne
cmpsb
xorb
jp
sbb
push
emms
xchg
add
pop
cli
dec
rorb
ljmp
fldt
and
push
mov
test
ret
or
xor
cli
add
mov
or
es
test
and
lret
adc
xchg
test
bound
xor
xor
fldl
out
mov
sub
jo
cs
push
adc
inc
cmp
pop
addr16
shll
sub
ja
stc
sub
pop
fimuls
mov
dec
sub
sbb
jnp
or
js
ds
jbe
xorl
jae
in
pop
sbb
ja
mov
out
add
sub
mov
movsb
into
sbb
test
jbe
testl
inc
aam
xchg
xchg
outsb
xchg
cmp
push
lret
fidivs
push
and
dec
mov
cld
cld
dec
or
lock
adcb
xchg
jecxz
js
movsl
cmp
loope
inc
sub
lds
popf
xor
lret
sti
idivl
shr
mov
outsb
test
dec
movsl
cmpl
sub
mov
mov
push
je
xchg
and
pop
addr16
inc
cmc
and
xchg
lret
dec
push
xchg
xor
dec
sti
sbb
pop
sti
setg
insl
dec
add
xchg
lea
xchg
sbb
xchg
pop
sub
or
push
mov
xchg
pop
cltd
insl
sbb
pop
pushf
xor
mov
dec
pop
pop
pop
mov
sti
bound
push
jmp
dec
stc
mov
sub
mov
xor
sbb
adc
imul
dec
popf
sub
lea
dec
call
adc
ret
ret
into
push
xor
xchg
xor
push
aaa
fcomi
ret
xchg
cmp
mov
and
sbb
add
gs
int
jne
shll
stos
roll
xor
xchg
and
push
out
icebp
sub
fwait
mov
pop
dec
sarl
mov
enter
cmpsb
xchg
inc
xchg
gs
mov
pop
je
addb
lock
pop
and
cltd
or
xchg
fldt
outsl
mov
adc
and
fwait
pop
in
mov
fstps
mov
and
aas
mov
jmp
incb
fsubs
xor
pop
and
iret
jecxz
popf
enter
stos
in
xchg
sub
movsl
out
push
lret
mov
movsl
pop
enter
movsb
sahf
adc
adc
repz
adc
dec
insb
mov
out
mov
mov
subb
dec
mul
xor
cmp
scas
pop
shll
sub
inc
mov
pop
int3
shrl
jle
andnps
insb
fisttpll
insb
psubusw
xchg
sub
mov
jo
out
and
insb
inc
fcoms
xor
out
inc
insb
cmp
jmp
loope
das
cmp
lds
incb
sbb
andb
jmp
xor
adc
xchg
pop
aad
les
mov
xchg
test
bound
jne
mov
ret
xchg
imul
sbb
in
mov
push
mov
cmp
aad
insb
cmp
outsl
xor
insl
jno
jne
ds
add
stc
into
in
add
adc
sub
jb
dec
aas
dec
pop
bound
xor
fcmovbe
shr
popa
jb
and
js
je
mov
mov
repnz
mov
push
std
add
sub
cmp
add
test
xchg
scas
ljmp
push
mov
push
lods
pop
cmp
inc
fstpt
xor
rcrl
cmp
es
repz
out
fidivrl
scas
jmp
fmull
shll
dec
sub
pop
das
mov
imulb
mov
movsl
mov
sbb
push
sbb
int3
orb
dec
stc
dec
int3
dec
aas
jne
jno
pop
jmp
out
mov
nop
mov
xchg
test
int
or
sub
pop
sarb
in
imul
in
mov
inc
pop
add
and
mov
push
call
hlt
test
notl
icebp
pop
adc
add
and
pusha
and
jb
pusha
mov
addr16
pushf
inc
test
lods
enter
sub
jnp
sub
arpl
jo
popf
or
mov
xor
test
xchg
mov
pop
ffree
cmpsl
call
nop
dec
clc
dec
add
and
and
enter
lds
push
hlt
and
lea
std
fisubrs
mov
orb
js
into
jmp
outsb
lcall
rolb
aas
cli
mov
cmpsl
xor
jns
mov
insl
aam
daa
fildl
and
xor
lock
out
cmp
xchg
jg
or
mov
push
flds
es
cmpl
daa
fbld
add
arpl
fwait
mov
std
push
inc
shl
xchg
inc
clc
mov
mov
fbstp
test
out
cmpsb
jns
mov
stos
jno
ds
les
gs
or
adc
call
inc
cmp
jbe
adc
sbbl
cmp
cmp
je
mov
mov
mov
out
jp
cmc
pop
out
lock
add
push
pop
out
cmp
mov
xor
je
insl
fdivr
hlt
aam
xlat
mov
cld
sbb
ret
std
fwait
in
lods
imul
leave
mov
ffreep
faddl
subl
sbb
xchg
push
shlb
and
mov
nop
bound
aaa
jno
xchg
pop
fistps
sbb
xor
pop
and
in
loop
fcompl
mov
movsb
jbe
or
roll
xor
jge
sbb
cli
dec
jns
or
call
dec
jmp
and
dec
popa
iret
dec
fs
mov
jnp
add
mov
lock
sub
subl
push
lds
enter
xchg
dec
jmp
mov
push
adc
ja
jmp
movsb
inc
sub
mov
and
lods
sub
ss
int
sbb
xor
pop
in
int3
outsb
add
sbb
or
mov
movsb
xor
adcb
dec
pop
cltd
xchg
stos
xlat
popa
data16
inc
mov
inc
out
cmp
pop
adc
enter
lea
into
add
popa
adc
mov
mov
push
xor
xor
loope
mov
imul
rolb
mov
into
test
mov
add
cmpsl
out
sub
je
int
inc
in
fstpl
xchg
xchg
insl
lock
outsl
xchg
out
les
in
xchg
es
lahf
xor
loop
pop
push
pop
test
aad
int3
test
mov
cmpsl
in
aam
enter
out
xor
mov
cmp
nop
jns
jo
mov
and
or
icebp
test
dec
add
fiaddl
clc
insb
jns
cmc
mov
sub
aam
xchg
je
aam
repz
fldl
int
pop
cwtl
pop
xchg
fst
data16
mov
call
push
lods
fwait
cmp
xor
out
sub
lcall
push
pusha
pop
mov
movl
xchg
shl
dec
mov
add
lds
in
bound
sbb
or
fwait
dec
add
xlat
xchg
arpl
dec
mov
xor
ret
pop
adc
sbbb
sub
cmpl
add
adc
cmpsb
pop
loopne
dec
negb
sbb
sbb
ss
cmp
int3
xlat
arpl
repnz
incl
in
sbb
mov
popf
pop
shrb
dec
sbb
pusha
sbb
outsb
jmp
and
pushf
mul
scas
cmp
imul
inc
mov
pop
popa
pop
pop
and
or
cmp
mov
sub
dec
sti
and
mov
fdivs
rcl
and
xchg
add
mov
push
add
pusha
movsl
imul
mov
pop
mov
push
fbld
sbb
or
andl
sti
cli
dec
jp
inc
push
push
adc
xlat
add
mov
sti
pop
mov
je
push
adc
std
sub
xchg
mov
add
negb
mov
cmc
cmpsl
enter
test
loop
push
adc
das
imul
jecxz
mov
aaa
push
cmp
lds
cmp
jbe
cmp
lds
pop
mov
mov
sub
sarb
daa
loopne
imul
popfw
fnsave
jp
mov
es
and
outsb
in
lds
sub
movsb
and
pop
fs
xchg
dec
mov
sub
pop
xor
stc
adc
fwait
and
stos
out
das
inc
cmp
iret
jbe
frstor
push
dec
je,pn
mov
call
lahf
push
or
xor
mov
and
ficoms
xchg
add
lods
in
or
mov
xlat
push
cs
xchg
js
mov
int3
popw
icebp
rcrl
insl
and
sbb
xor
mov
jle
dec
mov
fbstp
aam
sbb
inc
adc
mov
pop
sub
push
int
loope
les
mov
ljmp
lods
lock
fwait
test
inc
pop
lret
adc
inc
icebp
push
xor
lods
xchg
inc
in
xchg
outsl
dec
push
aad
push
adc
jne
mov
mov
pop
xadd
lods
scas
xchg
jmp
aas
addl
xor
int3
std
scas
popa
cmp
gs
addr16
test
int3
sbb
jnp
out
incl
in
or
ds
mov
jg
subl
imul
loopne
pop
and
mov
imul
and
xor
aas
pop
sbbb
out
mull
add
vmovups
test
mov
mov
or
cmpb
cmpsl
fldl2e
sub
dec
jne
mov
dec
mov
and
out
jg
inc
sti
cmpsb
adc
decl
pop
push
inc
aam
call
dec
test
ljmp
mov
mov
cs
cmp
or
sarb
enter
and
es
ja
mov
pop
xchg
ljmp
out
nop
aaa
mov
fnstcw
push
push
mov
push
jb
xor
sbb
int
add
push
cli
ss
test
arpl
scas
test
push
push
add
in
mov
mov
adcl
fdivrs
fcompl
or
cmove
mov
xchg
adc
sbb
jmp
loopne
jb
jbe
orb
add
cmp
inc
js
test
jns
fidivs
insl
rclb
stc
dec
outsl
inc
cs
adc
cmp
lcall
add
out
xchg
les
adc
jge
test
sbb
aad
aam
jp
lcall
xchg
mov
adc
aam
dec
push
cmp
mov
ja
andl
sahf
adc
adc
pusha
loop
sbb
shlb
std
sahf
shl
lea
mov
adc
movsb
pushf
jp
ja
das
cmpl
mov
lret
inc
push
aas
xchg
addb
pusha
jp
dec
shlb
pop
cli
leave
dec
es
sub
push
mov
mov
xchg
or
mov
add
in
dec
outsb
sysret
orl
or
out
sub
and
repz
and
repz
xor
imul
jl
jg
pop
pop
adc
shrb
outsl
insb
push
in
sahf
pop
adc
mov
mov
rorl
adc
mov
push
xorb
int3
lock
xor
inc
sarb
cmpsb
inc
stos
sbb
loop
mov
mov
push
xlat
jae
push
jo
push
pop
cpuid
xor
cltd
mov
xchg
pushf
pusha
cwtl
int
jo
aaa
daa
sbbb
mov
jns
xchg
aad
and
je
int
jge
adcb
adc
adc
jmp
adc
lock
stos
dec
sub
popa
lret
jcxz
jno
pop
incb
cmp
aam
popa
sahf
int3
loopne
out
jae
sahf
cmc
jl
mov
rorb
sbb
inc
out
aaa
adc
push
pusha
sbb
and
mov
mov
pushf
push
mov
popa
pop
push
jbe
pop
lock
sbb
mov
fbstp
mov
jne
add
push
jmp
xor
aas
add
adc
push
fidivrl
ja
mov
sbb
sbb
stc
cwtl
andb
add
push
adc
mov
mov
pop
jae
fwait
cltd
mov
das
es
outsl
sub
adc
gs
aam
dec
push
pop
into
sbb
pop
adc
jnp
mov
jl
imul
lock
xor
and
or
call
imul
cmp
in
adc
mov
xor
ret
xchg
mov
ret
push
cmp
arpl
cmpsb
and
mov
xchg
dec
mov
xchg
mov
fistl
push
test
inc
fcmovbe
pop
fsub
movl
and
adc
push
add
das
jbe
in
sbb
or
pop
push
add
movsb
sub
push
les
mov
or
add
xchg
aas
jbe
jns
test
orb
pop
sub
mov
insb
mov
mov
test
imul
rolb
pop
cmp
add
js
mov
sub
test
adc
xchg
into
xor
scas
in
xchg
rorl
scas
xor
xchg
es
imull
mov
push
mov
mov
inc
or
cmp
jl
sarl
popf
mov
mov
cmpb
pusha
rolb
mov
nop
add
push
or
pop
aad
cmp
mov
cmpsl
int3
sub
es
push
push
sbbb
mov
and
iret
movsl
xor
sub
xchg
jl
test
and
dec
sub
adc
shll
inc
stc
push
dec
outsl
out
pusha
mov
pop
dec
inc
pop
cld
jmp
fbld
mov
hlt
insl
jg
jae
push
xchg
fs
jge
jg
jmp
ljmp
add
cmpsl
jmp
cmpsb
cs
andl
dec
cmp
dec
and
leave
adc
mov
stc
push
in
push
jae
ret
sub
rorb
sub
push
popa
stos
fcompl
mov
cmp
add
xchg
mov
and
ret
lahf
cmp
sbb
or
sbb
shrl
push
daa
mov
jecxz
xor
push
jl
pusha
add
pop
mov
adc
mov
jbe
xchg
mov
and
rcrb
pop
sti
pusha
insb
adc
stos
sbb
fcoms
mov
pusha
into
arpl
inc
imul
jne
ror
jecxz
pushf
addr16
cmp
dec
test
mov
push
es
bound
repz
cld
mov
lods
fisubs
push
movsb
push
cmp
nop
jbe
ret
fildll
xor
mov
xchg
into
push
add
push
mov
stc
js
sbb
xchg
mov
sub
xchg
imul
jle
mov
and
mov
adc
cmpsl
push
fisttpll
or
fwait
aas
fstps
addr16
or
in
hlt
enter
jge
jl
imul
les
ss
test
jnp
pushf
mov
int
and
jnp
out
add
imul
mov
or
aad
push
mov
fs
test
add
shrb
xor
aam
hlt
in
stc
shlb
lds
jecxz
inc
adc
mov
lods
in
xlat
and
cmp
pop
in
jg
push
push
in
or
mov
out
xchg
clc
add
mov
loope
xor
clc
cmp
jne
in
or
adc
arpl
xchg
pop
adc
push
cli
aas
fisttps
pop
js
adc
int
mov
ret
ja
and
dec
imul
popa
mov
add
inc
pop
fst
repz
cmpsl
mov
in
jge
inc
xchg
mov
and
inc
mov
mov
pop
cmc
xor
and
mov
mov
les
out
cmp
mov
movsl
cld
fidivrl
sbb
es
xchg
mov
add
pop
popa
aas
popa
outsl
inc
mov
loope
add
aas
push
rolb
aaa
int
addl
int3
or
sbb
loopne
jne
dec
cmpsb
mov
inc
adc
cld
out
ds
xor
loope
and
loope
sub
inc
sbb
je,pn
mov
xor
into
jle
test
mov
sbb
mov
addr16
cmpsb
sub
subl
mov
imul
inc
loop
and
jnp
fwait
push
sbb
shl
cmpb
call
xor
push
scas
dec
push
pop
xchg
dec
ret
scas
push
or
fs
pop
sahf
in
or
inc
out
xchg
mov
adc
lea
or
push
sub
mov
lret
sub
mov
aad
fs
xchg
fisttpl
fwait
lods
pop
inc
cmpsl
jle
sub
push
jnp
cltd
or
ja
fcmove
xor
ljmp
xor
aad
cmpsb
repnz
testb
jg
xchg
out
push
adc
push
sbb
mov
cmp
and
sbb
mov
or
sbb
sub
jne
lcall
or
dec
leave
out
mov
add
das
popa
cs
decl
hlt
and
ficompl
jne
fidivs
lahf
and
jns
int
jge
jle
in
pop
push
mov
rcrl
ret
jo
scas
or
dec
pushf
sarb
pop
aas
cwtl
mov
dec
jg
mov
aam
dec
adc
sarl
es
rol
jo
and
mov
or
stc
fadd
mov
mov
loop
stc
pop
mov
and
dec
dec
mov
aaa
and
xchg
imul
cmp
ror
mov
les
dec
xchg
addr16
dec
bnd
xchg
mov
scas
mov
lods
mov
cltd
cs
fldt
cmp
mov
xchg
lret
mov
cmp
mov
inc
mov
xor
mov
mov
xchg
add
stc
push
push
daa
mov
sub
fimuls
lcall
shrl
jnp
xor
xchg
cli
dec
fsubs
fildll
aad
xchg
nop
ret
shl
daa
cmc
fists
in
int3
mov
inc
mov
pop
push
ds
xchg
and
into
dec
dec
lds
aad
mov
add
inc
out
push
xlat
sub
xchg
cmc
xchg
jecxz
jno
add
mov
shlb
pop
jp
xchg
ja
mov
aaa
aad
cli
pop
or
xor
adc
ss
dec
mov
inc
divps
mov
xchg
sub
aad
xor
mov
cmp
icebp
adc
test
dec
add
imul
int
dec
test
cltd
xor
mov
test
vpandn
xor
cmp
insb
ret
orl
sub
mov
jecxz
sbb
mov
call
test
imul
jae
sbb
or
xchg
mov
pop
cmp
jmp
push
and
push
loop
push
sub
orb
subl
clc
jo
int3
nop
shll
or
orl
imul
or
mov
mov
inc
enter
and
push
ret
mov
and
movsl
add
popf
pop
enter
movsb
std
stos
gs
mov
dec
jmp
in
call
cmpl
in
int3
sbb
mov
push
lret
aas
xlat
push
cmp
mov
in
sub
leave
push
pop
popf
shll
fs
jecxz
mov
dec
loopne
and
scas
mov
xchg
mov
mov
lock
xchg
xlat
pop
cmpsl
cmp
in
les
or
and
dec
test
mov
add
lcall
inc
jge
lds
push
pop
scas
push
adc
and
pop
inc
inc
addl
mov
jb
fdivrl
jbe
in
sbb
and
sub
jle
ja
push
push
in
loopne
jmp
scas
mov
mov
mov
test
mov
push
xchg
xor
stc
push
jp
jl
xor
lods
and
xor
jne
scas
ror
mov
mov
push
test
jp
cmc
enter
leave
dec
mov
inc
xchg
int
dec
xchg
jbe
int
cmc
cli
ffreep
xchg
iret
rep
repnz
sarl
xor
std
ret
push
add
int3
xchg
and
pop
les
ljmp
mov
aad
lret
mov
dec
dec
aas
cmp
xor
mov
sahf
or
jbe
xchg
cld
or
push
faddl
xchg
imul
cltd
sub
add
stos
aas
cmpsl
lcall
sub
lods
mov
dec
inc
add
aad
inc
push
lds
lods
rolb
mov
mov
dec
xchg
pop
push
and
add
push
divl
orl
xlat
out
int3
inc
sub
add
pop
inc
out
push
int3
lock
mov
mov
arpl
fs
adc
in
jbe
shl
pop
mov
sbb
sub
repnz
sub
inc
jbe
cmp
push
sub
sub
mov
lods
arpl
push
mov
xchg
in
mov
xchg
mov
cmp
xchg
pop
push
mov
or
mov
testb
ja
mov
push
push
outsb
fidivl
les
movsb
sti
lret
push
mov
and
outsb
mov
insb
jp
out
pop
xlat
cmp
repz
mov
or
fwait
jbe
int
bound
lea
sti
pop
pop
faddl
fnstcw
fsubp
pop
push
cwtl
push
xor
fwait
mov
dec
xchg
push
fstl
mov
mov
xor
xchg
cmp
mov
jmp
xchg
scas
aaa
mov
mul
dec
stos
sub
xchg
ret
xchg
xchg
insl
or
cs
adc
pushf
inc
mov
repz
movsb
movsb
mov
test
repz
cld
sbb
jp
addl
icebp
pop
push
in
sbb
scas
nop
gs
xor
std
out
scas
repz
mov
mov
sbb
push
ja
filds
in
fldl
ret
outsb
std
mov
in
jno
add
xor
dec
pop
aam
and
ss
test
inc
add
push
jno
sti
push
xor
js
xor
popa
and
nop
frstor
cli
fwait
mov
gs
pop
imul
ds
loope
cs
xchg
js
in
lock
cmp
dec
sbb
xchg
cmp
xor
int
scas
mov
mov
outsl
inc
test
ja
and
pop
fs
xor
mov
cld
clc
xor
or
sahf
cli
mov
fs
push
mov
adc
popa
pop
adc
int
enter
das
mov
jmp
adc
popf
or
and
mov
and
cmp
inc
outsb
jl
stc
pushf
cld
bound
lea
xor
cmp
sub
outsb
xchg
ds
push
mov
mov
mov
rclb
imul
jb
push
call
adc
dec
add
mov
xor
sbbl
mov
mov
xchg
fcom
fstpt
or
imul
mov
mov
mov
push
mov
push
shl
push
and
daa
mov
mov
addr16
fdivrs
jbe
es
leave
inc
sbb
gs
negl
xchg
pop
aam
and
out
aad
sti
iret
cmp
mov
daa
or
jecxz
cmp
adc
cmpsb
mov
mov
out
and
push
push
add
outsl
in
cli
scas
xlat
sub
mov
sbb
dec
fbld
cs
popa
ljmp
test
in
inc
mov
ljmpw
mov
jb
stos
inc
outsb
adc
scas
daa
test
clc
jo
inc
fwait
int3
push
mov
pop
data16
in
daa
xchg
and
push
and
jae
cmp
movsl
iret
ja
xchg
jecxz
add
sti
xor
cld
cmpsl
xchg
test
loope
leave
xchg
aad
sub
adc
das
push
and
or
in
push
aas
cwtl
mov
cs
ljmp
add
out
xor
pop
in
subl
mov
jecxz
dec
cmp
and
sbbl
xor
fucomip
pop
int3
xchg
loop
push
orl
and
aaa
push
mov
movsl
es
test
mov
rcrl
push
scas
sub
xchg
pop
push
xchg
xchg
sub
inc
lcall
xor
pushf
lret
xchg
adc
and
adc
sti
pop
jae
jl
xchg
and
mov
aaa
inc
jmp
sbb
jb
cmp
cltd
jecxz
mov
push
jo
push
adc
andl
cmp
movsl
mov
or
int
adcl
jb
enter
es
fcmovne
ror
dec
xchg
sub
cmc
shl
push
lcall
sub
cmpsb
jl
test
xor
shll
or
mov
in
mov
add
adc
cs
popa
aad
and
dec
nop
neg
sbb
or
jb
sti
pusha
out
push
popa
popf
in
negb
popf
adc
int3
inc
pop
bound
dec
xchg
or
shll
in
jl
mov
fnsave
push
mov
lea
mov
jg
aaa
dec
in
jae
xor
pop
pop
imul
mov
or
sti
mov
dec
mov
xor
adc
ljmp
inc
sub
mov
pop
div
sub
sub
mov
cmc
sbb
pop
stos
ret
push
insb
arpl
bound
or
xor
in
test
enter
pop
lcall
stos
aas
popf
xor
repz
popa
jmp
inc
or
dec
mov
out
arpl
push
mov
rcr
adc
out
rclb
mov
xlat
xlat
aaa
addl
loopne
add
fcmovnu
data16
into
add
mov
and
xchg
cltd
mov
lock
inc
push
xchg
fs
es
xchg
sahf
ja
jno
push
xor
fwait
xor
insb
jbe
jae
xchg
gs
pop
leave
sti
hlt
popa
jmp
adc
sbb
movsl
mov
shlb
lods
iret
mov
adc
movsb
out
stos
jle
aaa
or
pop
fidivrl
inc
data16
das
or
aas
sbb
or
in
jl
pop
jmp
je
movsb
aam
inc
fistpl
inc
test
scas
add
pop
repz
pop
or
cmp
push
mov
push
add
add
push
clc
push
enter
xor
repnz
mov
out
and
mov
sbb
inc
xor
or
inc
out
sbb
sub
rcrb
mov
add
sti
fisubrs
and
imul
lret
mov
stos
cmp
mov
mov
lock
fmulp
data16
adc
dec
xor
idivl
and
ss
sti
pop
ljmp
leave
sahf
dec
push
fbstp
shl
pop
dec
push
adc
inc
adc
cmp
int3
jmp
cld
dec
pusha
adc
fwait
xchg
inc
fstl
fs
in
add
mov
or
and
push
adc
jmp
inc
stc
mov
mov
jmp
pop
test
loopne
push
popa
inc
cli
pushl
pop
mov
jns
icebp
fcmovbe
lret
cs
aad
xchg
pop
xchg
cmpl
cwtl
and
push
scas
les
pop
movsb
scas
jb
cmc
data16
pusha
loop
dec
dec
add
xchg
push
mov
stos
out
stos
movsl
out
add
mov
sub
mov
push
and
sub
dec
xor
divb
gs
mov
fs
fsubrs
inc
mov
stos
jnp
xadd
ja
cmc
aad
insb
pop
mov
dec
xor
cmpsb
in
pop
fst
mov
sbb
leave
mov
sarb
mul
dec
xor
jns
dec
movsl
ret
scas
and
push
add
data16
adc
mov
leave
rolb
ret
adc
ja
repz
cmpsl
push
cmp
cmc
mov
pushf
frstor
fdivrl
pop
push
sub
ja
loope
push
push
outsl
psubsw
lds
xlat
push
or
sbb
add
ss
xor
xchg
xchg
xchg
cmp
in
mov
push
xor
es
repnz
jge
arpl
inc
repz
lds
sbb
sbb
std
mov
xor
pop
pop
pop
mov
loop
xchg
push
lret
lcall
loop
js
sbb
dec
sub
fldenv
ja
mov
sahf
add
subl
fs
mov
rorb
imul
pop
mov
es
cmp
fldt
out
ret
fcmovbe
push
push
jno
push
sahf
mov
int
mov
pop
inc
cmp
lea
add
jo
jnp
aaa
mov
outsl
jecxz
imul
mov
push
sbb
push
sub
ss
fnstcw
jecxz
jp
int
aas
in
cs
movb
int
data16
jb
mov
push
mov
adc
shlb
xor
mov
rcr
mov
aam
sti
insb
sub
lods
mov
sub
icebp
das
pop
lcall
sbb
push
ja
js
popa
add
divl
mov
psubq
rcrb
sub
rcll
into
ret
loopne
mov
addr16
into
lods
test
xchg
outsl
push
push
testl
loopne
lock
jle
lock
insb
loopne
jmp
dec
inc
push
sti
or
sbb
popf
mov
dec
jl
cmc
mov
fs
add
int
jl
jl
mov
or
test
dec
mov
insb
es
jae
push
inc
mov
jae
and
loope
and
cmp
sbb
pop
dec
lahf
je
bound
pop
out
jae
mov
inc
rclb
mov
pop
sub
pop
cwtl
call
sub
addr16
dec
in
ljmp
imul
xchg
icebp
jge
icebp
pushf
jns
data16
scas
sub
xor
jns
push
call
xor
cmp
or
push
scas
loopne
push
test
andl
mov
insb
shlb
add
ljmp
push
and
cmpsl
and
and
pop
and
mov
pop
adc
fcomi
fisubrs
fcomps
mov
add
adc
pushf
test
dec
xchg
cmp
mov
xchg
sub
lods
jg
in
mov
and
or
outsl
inc
sub
enter
mov
mov
repnz
xor
les
sahf
inc
imul
mov
sub
cld
cmc
lock
gs
ficompl
imul
imul
jae
jno
push
mov
adc
xlat
cmp
jg
aad
fldt
inc
dec
xor
cmpsb
sbb
push
fldl
dec
into
insb
push
dec
cs
and
or
pop
adc
ljmp
aad
leave
and
mov
mov
add
lcall
movsb
jno
out
mov
mov
mov
adc
aam
mov
dec
test
adcb
rcrl
rcrb
xor
xchg
xchg
adc
xor
outsb
inc
mov
adc
nop
ret
mov
and
mov
scas
into
inc
lcall
aas
push
mov
cmp
int3
mov
rcll
push
mov
fmulp
jge
ret
push
xor
xchg
and
push
cli
pop
or
loop
lret
xlat
xlat
fdivs
test
sbb
data16
inc
xor
js
aam
jg
pusha
mov
sub
lea
adc
je
icebp
dec
pop
pop
or
sar
xchg
cmp
mov
in
inc
int
adc
pop
sbb
fs
pop
mov
lods
out
outsl
adc
test
stos
jmp
les
mov
outsl
sarb
dec
and
sar
mov
mov
popw
ficomps
sub
pop
and
and
inc
and
adc
jmp
movsb
lret
imul
mov
mov
imul
mov
cmpb
movsl
add
nop
xchg
ds
gs
je
test
cmpl
pushf
xchg
push
sub
pavgb
movsb
xor
cmpsb
psubw
xchg
xor
sub
xchg
sub
mov
mov
pop
or
push
ja
lods
dec
sub
into
data16
or
sbb
adc
fisubrs
mov
gs
lret
lods
sub
mov
and
inc
cmpl
in
jl
shrb
cmp
arpl
into
cmpsb
push
xchg
cmc
push
pop
mov
jmp
or
fdivs
dec
mov
dec
sub
pop
pop
loop
inc
xchg
scas
sbb
hlt
stos
out
into
mov
cli
adc
jl
int3
loop
mov
cmp
pop
sbb
xor
pop
std
sbb
fisttpll
adc
adc
xor
cmp
adc
das
stc
cwtl
insb
push
mov
scas
mov
in
sbb
lret
jb
adc
lea
dec
and
pop
in
adc
fdivrs
dec
and
dec
fistpll
fbld
and
push
sahf
mov
movsl
cs
pop
mov
nop
mov
nop
out
std
aaa
aad
push
pop
pushf
in
das
leave
negl
cmc
dec
push
sub
repnz
addr16
cltd
mov
mov
aas
mov
pop
test
pusha
push
adc
and
test
mov
pop
push
rorl
cmp
adc
je
bound
pop
push
push
imul
sbb
push
ljmp
sahf
mov
pop
lahf
pusha
sub
pop
push
scas
mov
inc
addr16
mov
xchg
jl
dec
repz
scas
mov
sti
dec
dec
add
inc
mov
sahf
push
gs
or
cwtl
adc
sub
hlt
inc
je
mov
lock
out
push
mov
lea
fistpll
loopne
lcall
aad
jne
mov
das
repz
jecxz
or
clc
cmp
mov
es
pop
imul
mov
fwait
cld
and
mov
les
sbb
fwait
sbb
push
mov
sbbl
mov
test
fstl
xor
jge
iret
fs
jmp
fsubrs
das
cmp
sarb
test
es
mov
ja
push
insl
aas
push
pop
xchg
outsb
pop
inc
outsl
or
popa
mov
mov
xorb
pop
sti
pop
setge
sub
fnstenv
out
pop
or
lret
sbb
movsl
js
jae
in
sbb
stos
jno
inc
lds
cmp
sar
hlt
jo
ss
pop
add
popf
ss
bound
mov
hlt
xchg
out
or
xchg
add
inc
or
out
jmp
rcll
push
dec
bnd
inc
subl
out
fwait
mov
push
imul
dec
in
lock
xor
or
push
jmp
rolb
das
popf
inc
fisubrs
idivb
xor
cmp
movsl
popf
add
int
fnstsw
push
xor
clc
add
ljmp
add
lea
std
push
dec
sub
test
push
loop
and
enter
mov
mov
clc
push
in
rolb
mov
xor
pusha
enter
loope
int
jmp
cmpsb
fwait
popa
shl
movsl
int3
xor
pop
fstpl
imul
jecxz
adc
inc
rcr
push
fisubrs
aam
or
jecxz
loop
lret
popf
jns
test
mov
adc
push
mov
push
imul
xor
and
mov
jns
rclb
aaa
clc
fnstsw
pop
add
fnstenv
xchg
mov
cmp
stos
lods
bound
cmp
bound
popf
xor
cltd
cmpsb
in
rol
sub
jnp
and
ret
cmpl
out
adcl
jl
inc
pop
je
jo
loope
add
and
lds
or
sti
lock
add
fsubrs
stos
arpl
loopne
pop
mov
sub
out
inc
and
cwtl
adc
push
sub
cmpsb
adc
and
push
in
dec
out
jmp
jle
int3
xchg
js
push
lahf
jmp
lcall
pop
in
add
cld
cld
sub
sbb
repnz
clc
sbb
aam
xchg
fildll
adc
xor
nop
icebp
jo
sbb
sub
push
cwtl
inc
jbe
shl
popf
rclb
and
dec
adc
rorb
daa
call
inc
jne
ret
leave
pusha
out
mov
pop
and
xchg
popa
hlt
lods
adc
icebp
mov
in
test
and
fsubl
or
stos
bound
pop
int3
sub
mulb
sbb
roll
in
jo
inc
dec
and
pop
dec
sbb
je
sbb
test
add
lock
xchg
stc
outsb
ljmp
out
rclb
pushl
dec
add
sarl
cmp
dec
inc
pop
hlt
insl
or
ret
movsl
cmp
and
test
ret
pop
xchg
jmp
mov
sub
andl
pop
inc
leave
ljmp
dec
sub
pop
sahf
push
popa
int
pop
outsl
testb
test
clc
push
pop
cmp
xchg
pop
dec
dec
pop
mov
sbb
or
add
leave
call
stos
idivb
testb
adc
add
and
cmpsb
lret
imul
repnz
fidivs
testb
mov
insb
inc
aas
jge
jne
xor
outsl
aaa
push
xchg
inc
neg
inc
addl
xchg
iret
and
mov
sub
pop
movsb
push
pop
push
mov
sbb
cwtl
pop
js
mov
iret
pop
incl
fs
dec
test
or
ret
pushl
cmp
dec
push
in
clc
sbb
inc
sahf
mov
mov
and
insb
mov
and
dec
jecxz
cmp
mov
add
sbb
push
mov
jle
addl
aam
and
int
jbe
pop
fwait
cmp
movsb
out
cmpsb
pushf
mov
dec
push
pop
fs
std
std
leave
push
inc
cwtl
bound
ja
or
sbbl
pop
ret
push
mov
mov
negl
inc
stos
mov
int
xorl
aam
mov
ja
cmpsb
pop
xchg
mov
ss
lret
jle
push
int
das
retw
js
daa
orl
call
or
test
sub
mov
popf
xor
sarb
fimuls
mov
push
mov
test
clc
mov
aad
pop
sbb
cmpl
push
aam
xor
mov
fwait
xchg
ret
xor
insb
xchg
and
jnp
ret
mov
cli
lcall
cmp
pop
xchg
push
lahf
into
es
and
scas
xchg
divl
and
push
insb
test
das
push
push
icebp
jl
insl
pop
add
mov
adc
in
rcrb
xor
sbb
lcall
xchg
mov
jbe
repz
xchg
pop
icebp
pop
xchg
xchg
and
mov
xor
ret
cld
paddd
cmc
mov
or
mov
mulb
dec
mov
insb
push
pop
xchg
sub
dec
jge
lds
inc
repz
fisttpl
dec
out
push
and
rcl
mov
dec
mov
jl
jmp
push
loop
adc
jp
arpl
loopne
int
pop
add
std
nop
push
inc
stos
cmp
sbb
hlt
add
mov
add
out
repz
fdivrs
jo
sahf
scas
ss
adc
adc
in
sti
add
sub
xlat
lds
xchg
push
mov
out
sub
add
movsb
pusha
jp
pop
pop
cmpsl
push
or
dec
mov
sub
test
dec
stos
and
adc
lods
jge
mov
pusha
and
xor
jmp
mov
and
repz
rcll
lods
pushf
sbb
dec
neg
icebp
fnsave
sahf
mov
add
mov
ljmp
or
push
fldl
mov
dec
sub
in
mov
adcl
into
xor
xchg
or
fsts
lds
cmp
cmp
loopne
into
jmp
jp
and
push
int
and
pop
stc
sbb
jge
sbb
andl
mov
add
fnstenv
cld
negl
lods
push
sbb
sub
ret
rcl
dec
adc
fisttpll
outsl
test
imul
xor
les
mov
dec
fildll
xchg
pop
lods
fs
pusha
js
xchg
xchg
out
andl
inc
mov
rclb
sbb
push
sbb
xor
cld
push
jns
mov
bound
dec
push
sbb
jmp
popa
clc
push
fstps
dec
xor
cld
ret
sbb
jmp
cwtl
scas
ss
pushf
repz
pop
sbb
cmp
mov
sbb
or
stos
lret
cwtl
push
out
and
push
or
push
sub
dec
dec
mov
aam
jnp
sbb
push
push
and
mov
hlt
aam
lcall
cmp
mov
xchg
pop
enter
insb
jae
lcall
sub
sti
sub
xor
xchg
inc
jmp
cmpsb
aad
rcr
andb
cmp
add
div
push
test
add
outsl
sarl
add
aaa
test
jmp
les
or
push
jp
dec
dec
jl
lret
out
add
push
popf
shl
mov
jge
mov
stc
fwait
and
push
dec
jmp
xchg
pop
push
xchg
mov
lret
cmp
xor
roll
push
adc
jno
ret
adc
sahf
scas
sbb
push
xchg
subb
or
push
mov
mov
dec
lret
insl
cld
int3
dec
imul
or
es
jno
test
gs
xchg
stc
pop
nop
jae
xchg
jl
xlat
or
mov
pop
flds
in
test
xor
or
inc
mov
inc
pop
inc
inc
enter
in
xlat
sbb
inc
std
jnp
std
mov
fiaddl
sub
dec
jge
push
out
or
hlt
push
movl
adc
mov
and
xchg
clc
push
addr16
inc
jae
out
dec
loopne
pop
mov
or
xor
pop
xchg
into
or
jmp
xchg
ficoms
test
test
shll
out
mov
in
mov
test
cld
je
es
pop
adc
mov
aam
bound
inc
mov
clc
sbb
or
test
insl
jne
mov
aaa
cmp
and
stos
dec
or
cwtl
mov
lock
cmp
mov
xchg
inc
push
xor
add
repz
inc
and
add
and
jg
pop
mov
cmc
insb
xor
jmp
xchg
sbb
ds
xchg
inc
iret
xchg
mov
xor
jnp
mov
mov
mov
sti
inc
xor
pop
je
add
mov
ljmp
pop
xor
inc
xchg
xor
mov
cmp
repnz
imul
mov
jecxz
imul
xchg
bound
divb
sub
jl
or
cwtl
jg
lock
pop
sub
dec
or
lahf
stos
cmp
out
inc
pop
mov
cmp
enter
sbb
cli
mov
and
jbe
sub
ret
pop
push
aad
or
imul
xor
jg
mov
test
jmp
sub
and
sarl
and
xchg
sti
jne
pop
or
ja
jmp
inc
notb
aaa
sbb
inc
add
mov
mov
adc
add
int
stos
fsubr
push
test
inc
inc
sub
xchg
into
xchg
cmp
repz
jne
ja
pop
pop
xlat
mov
aam
jno
stos
ds
mov
popf
scas
movl
inc
incl
jne
push
div
jns
imulb
std
call
sbb
call
pop
bnd
leave
popf
or
sub
int3
xchg
inc
dec
cmp
lock
fcoms
and
push
mov
cmpsl
ficoms
inc
push
stos
das
movsl
aam
push
dec
icebp
mov
fnstenv
adc
push
lcall
push
andb
roll
popf
dec
das
shll
xor
mov
ds
push
loope
jb
mov
jp
adc
test
mov
dec
jno
adc
dec
push
mov
mov
mov
xor
ret
bound
loop
arpl
jecxz
out
jg
mov
jmp
jl
fcmovne
cmc
fs
xchg
es
mov
gs
sbb
pop
dec
test
jecxz
js
push
jl
xor
rep
jno
pop
push
xchg
js
mov
test
cmp
sbb
mov
cli
jne
push
mov
mov
mov
arpl
outsl
xchg
js
sbb
add
lcall
jl
cwtl
imul
mov
sub
jge
stos
sub
shll
cli
sahf
int
inc
mov
adc
data16
das
lret
pop
cmp
push
out
add
adc
stc
repnz
mov
xchg
lcall
lret
fnstcw
lods
jmp
ret
xchg
push
pop
fdiv
sub
push
sahf
lea
jle
inc
adc
lcall
cld
nop
sub
mov
sbb
enter
pop
fsubr
adc
sbb
cmp
push
xchg
and
pop
dec
xorb
hlt
push
lds
add
movsb
dec
and
cmpl
in
aad
xchg
cmp
fcomi
ja
test
mov
inc
addr16
pop
and
adc
jbe
pusha
lret
icebp
loop
loop
mov
and
and
mov
and
inc
push
fbstp
js
loopne
push
in
jecxz
shll
lods
or
sbb
xor
out
add
jle
pop
nop
push
add
lahf
dec
hlt
imul
in
loopne
fmull
int
mov
test
in
int3
adc
fwait
dec
inc
imul
push
xor
mov
out
cmpsl
rclb
lods
push
les
xchg
rcl
mov
push
out
cmp
mov
fwait
je
in
adc
inc
je
mov
bound
and
mov
or
push
sti
and
jbe
xchg
gs
mov
mov
mov
aad
cwtl
sti
nop
fidivs
lcall
jnp
stc
ret
iret
jp
out
ljmp
int3
pop
and
lds
ss
in
jne
xchg
ret
jle
rcrl
add
mov
sbb
cmp
and
gs
daa
push
xlat
movsb
sub
cli
fstpt
fildll
sbb
subl
out
dec
lods
js
outsl
mov
xor
mov
pop
or
mov
inc
cmp
aad
addr16
or
mov
cmp
sub
int
gs
fdiv
dec
in
fsubrs
cli
xor
ffree
lret
inc
mov
sbb
sbbl
xchg
inc
pop
push
push
jne
push
cmpsb
jbe
sub
fs
outsb
jno
fimull
mov
pop
repz
lock
int3
fs
cltd
cmc
push
and
arpl
xor
or
aaa
imul
sti
adcb
mov
mov
and
fstps
xor
or
jno
ja
or
es
leave
enter
mov
push
mov
mov
xchg
xchg
jb
pop
loop
rcl
popa
add
mov
pop
pop
out
mov
sar
fstps
or
outsl
jnp
nop
cs
sbb
stc
inc
aad
sbb
icebp
dec
popa
addb
rolb
jl
rcr
fucom
sbb
inc
and
test
pop
push
test
sub
lds
mov
mov
in
mov
nop
sbb
fildl
nopl
nop
test
push
stos
imul
iret
or
pop
outsl
cmp
in
iret
cmc
cmpsl
pop
push
arpl
sbb
sbb
cmpsl
lahf
aam
mov
jno
mov
in
dec
imul
mov
stc
sbb
pop
pop
xchg
cld
jo
sahf
outsl
arpl
and
mov
add
push
xor
mov
and
xchg
int3
mov
push
xlat
and
imull
mov
push
loop
repz
push
inc
sub
das
in
into
jnp
mov
das
popf
dec
std
out
xchg
pop
xchg
inc
pop
leave
addb
mov
sub
sbb
adc
cld
jl
repnz
loopne
jl
rcrb
loop
adc
xchg
mov
dec
inc
or
xchg
cmp
jns
xchg
cwtl
mov
cmp
repnz
mov
mov
rep
cmc
mov
mov
stc
cli
push
psraw
jge
enter
sbb
cmpsl
pop
punpckhbw
fadds
in
lds
pop
xlat
add
ja
ret
loop
cmp
jns
fsubl
mov
fildll
cmpb
inc
adc
xchg
ret
mov
pop
sub
leave
mov
outsb
stc
ds
leave
mov
repz
and
loop
or
sub
mov
jle
shrl
movsl
cmp
mov
sbbl
push
movsl
mov
loope
adc
nop
ja
cmp
or
in
push
loope
dec
dec
push
mov
test
pop
cmc
sbb
in
xor
add
fnsave
mov
fwait
push
xchg
adc
sub
icebp
test
xchg
out
sbb
repz
ds
lea
icebp
sub
jo
scas
push
inc
lret
add
fcos
dec
xor
aad
flds
jne
add
fsub
sbb
lret
cmpsb
sbb
sub
out
sub
inc
mov
mov
jp
cmpsb
mov
mov
and
jne
lock
and
sub
orl
movsl
pop
lret
lret
jo
xor
imul
inc
pop
add
xor
ds
repz
mov
rcrb
inc
cld
loope
sahf
push
jbe
test
jmp
cmp
hlt
mov
in
dec
mov
fcoml
pushf
imull
add
fs
mov
and
inc
mov
mov
pop
mov
or
inc
scas
and
stc
xchg
jg
lock
add
push
mov
and
cli
xchg
inc
sbb
loopne
aad
loope
les
hlt
fisubrl
or
mov
scas
or
inc
movsl
inc
in
mov
ret
aam
cld
mov
cmpsb
cmp
in
out
adc
mov
and
hlt
in
and
enter
push
in
ss
fcmovnbe
sub
frstor
pop
mov
fsub
clc
jnp
push
imulb
data16
in
ja
leave
fadd
mov
adc
xchg
push
xor
push
lods
repz
hlt
xchg
pop
movsl
xchg
xchg
sub
cmp
jo
jns
push
sbb
jmp
lods
jne
or
jns
jge
leave
jae
ja
aaa
js
data16
push
mov
xor
sub
lock
xchg
dec
jg
xor
int3
jno
push
lcall
add
xchg
shll
push
xlat
mov
mov
adc
lret
inc
sub
addr16
mov
mov
inc
add
in
cmp
mov
and
mov
ret
dec
in
sbb
stos
add
pop
aad
inc
dec
dec
roll
xor
jge
push
incb
jp
mov
mov
adc
enter
repnz
inc
stos
mov
sub
jo
dec
into
stos
rcrl
inc
mov
cli
mov
cmpb
loope
pop
out
ja
in
into
cmp
mov
icebp
ret
gs
add
stc
push
jl
pop
pop
in
stos
jo
inc
loopne
fcmovnu
int
adc
xchg
dec
int
nop
cmpsb
inc
data16
dec
sub
mov
mov
aad
adc
mov
pop
jae
xchg
mov
sub
je
into
xchg
push
ret
dec
stc
jbe
ljmp
out
push
sub
loop
hlt
ror
pusha
lcall
jb
ror
testl
jne
inc
fsubl
xlat
scas
sbb
pop
inc
xchg
mov
sbb
inc
xchg
out
fisubs
icebp
fwait
pop
js
iret
call
pop
and
decb
push
out
sub
dec
in
xchg
hlt
mov
pop
out
sbb
xchg
jg
push
dec
push
je
push
mov
or
into
fistpl
mov
fcomps
push
cmp
mov
popf
sti
popa
pop
imul
loop
pop
out
inc
push
xchg
and
jecxz
rcl
scas
mov
ljmp
xchg
jnp
insb
test
or
sub
ja
xor
adc
inc
cmc
sbbl
sbb
ja
mov
cmc
popf
pop
pop
pusha
mov
xchg
das
mov
jle
push
arpl
loop
add
popf
shrb
or
push
xor
adc
push
in
mov
inc
inc
jbe
mov
lods
scas
jne
gs
adc
lret
adc
adc
pusha
imul
in
movsl
xchg
sub
fisttpll
add
adc
movsl
dec
lahf
push
add
mov
push
mov
and
std
scas
cmp
lock
pop
call
mov
clc
je
mov
mov
mov
and
mov
ljmp
pop
push
adc
les
pop
jo
ret
test
mov
int3
cmp
int3
fmul
mov
cwtl
lret
rorl
pop
inc
dec
push
inc
fcoml
inc
lods
or
jmp
stos
cmc
lret
fs
shl
out
mov
lds
lcall
shl
jp
es
adc
add
shlb
movsb
mov
fwait
mov
loop
ret
jp
call
and
dec
xchg
insl
jl
mov
pop
cmp
outsb
test
jge
xchg
das
mov
arpl
mov
xorb
push
push
ljmp
stc
jle
mov
outsb
je
shlb
test
push
cs
xchg
mov
aas
test
fwait
and
into
sub
add
out
add
push
mov
dec
cmpb
gs
movl
aad
pop
xchg
push
sbb
add
xchg
incb
movsl
fidivs
out
and
mov
pop
lods
fisubrl
stos
jl
insb
mov
pop
push
ss
or
insl
cs
push
scas
inc
notb
lock
clc
addr16
mov
jne
out
lods
popa
stos
and
jp
xor
pop
xchg
and
lods
adc
fcomps
out
mov
hlt
outsb
andb
xchg
adc
sbb
mov
sub
mov
sbb
xor
test
cmpsb
push
lock
ficoms
or
mov
lods
jp
movsb
xor
pusha
xor
loope
lea
adc
push
inc
dec
sub
mov
jge
push
in
addl
push
push
add
jne
ret
push
rorb
in
xchg
inc
test
jae
pop
fadd
sbb
mov
push
push
rolb
jbe
out
lahf
jno
loope
outsb
dec
or
or
sti
rol
test
cmp
nop
ret
loop
mov
and
out
cmp
push
xor
scas
icebp
xchg
ficoml
loop
call
xor
mov
adc
bound
sub
jno
test
inc
cmp
aas
cmc
repz
out
inc
xchg
stos
lock
lret
push
adc
or
xchg
outsl
adc
inc
stos
lds
call
cmc
imul
aaa
aad
or
inc
iret
scas
dec
xchg
xchg
shl
mov
stos
push
dec
outsb
jecxz
and
sbbl
int3
dec
sbb
das
jge
aad
xor
call
dec
ja
dec
or
add
lds
inc
sbb
push
inc
and
call
add
mov
ljmp
inc
push
pop
jmp
xchg
arpl
cld
push
out
jns
and
adcl
fsubrs
pop
aam
push
push
mov
popf
lea
push
lods
call
xchg
inc
pop
into
pop
test
ret
stc
mov
push
pop
lds
ss
aaa
cltd
push
mov
loope
gs
mov
or
and
mov
jno
push
mov
pop
mov
fsubrs
push
sbb
jp
into
rcl
inc
jmp
in
stos
dec
cmp
jnp
pop
pop
lock
push
add
stos
iret
jmp
leave
shll
lret
jo
mov
int
repz
mov
icebp
mov
jge
lea
aas
adc
mov
sub
xor
cld
or
arpl
push
lock
nop
test
call
dec
imul
mov
lock
arpl
outsl
jae
mov
jmp
mov
sub
xchg
ret
hlt
popa
jp
bound
das
inc
test
mov
pusha
loopne
push
mov
add
sbb
push
addr16
popa
add
insb
aad
in
jl
leave
daa
mov
repnz
call
iret
xchg
repnz
push
dec
addl
mov
ja
mov
jae
shl
fdivl
fnsave
sti
dec
pop
pop
jp
aam
hlt
aas
out
mov
mov
mov
push
xor
addr16
ret
loop
cmc
jge
add
mov
sub
inc
add
pmovmskb
loop
and
mov
push
mov
ret
push
add
scas
insl
adcl
aam
enter
daa
frstor
lds
push
cmpsl
les
inc
data16
xor
je
cwtl
xchg
adc
jle
inc
cmpsb
sbb
cmp
pusha
jp
out
pop
stos
mov
xchg
jae
stos
mov
int
les
lods
jle
mov
lods
mov
imul
pop
sbb
hlt
mov
bound
dec
outsl
dec
adc
mov
pusha
sub
popa
inc
fwait
cmp
ret
daa
add
sbb
pop
mov
faddl
test
clc
or
mov
mov
mov
inc
leave
xchg
popf
and
lahf
sbb
xor
or
sbb
add
dec
mov
push
add
jmp
mov
xor
pop
ret
insl
sbb
jo
fstps
dec
into
mov
xor
sbb
cmpsl
xor
adc
mov
dec
sub
xchg
daa
mov
in
jae
std
outsb
inc
pop
and
fdivrs
fwait
out
push
rolb
addb
xchg
mov
cmp
xlat
jle
fisubrl
xchg
and
pusha
mov
popf
test
sbb
jp
jnp
inc
je
ret
xchg
js
add
xor
xor
jp
dec
fistl
inc
gs
pop
xchg
jecxz
cvtps2pi
clc
stc
adc
sbb
into
inc
popl
rclb
dec
movsl
ja
iret
xchg
es
arpl
test
lcall
test
fdivrs
jge
pushf
xchg
mov
subl
cmpl
ljmp
sbbb
int3
mov
and
enter
loope
sbbb
loopne
test
sbb
xor
jge
movsb
or
aas
jl
int
cmp
cmp
jns
xchg
ret
jb
jl
clc
scas
jnp
sahf
inc
sti
fmuls
iret
sub
sbb
fstpl
aam
popf
dec
xchg
in
jge
sti
aad
or
mov
enter
mov
loopne
jae
ret
insl
rcll
lods
insb
jb
and
push
xlat
inc
and
clc
das
mov
add
lret
scas
and
sbb
push
test
subps
mov
cmp
subl
jne
xlat
sbb
cli
enter
xchg
fidivrl
push
xchg
push
lahf
inc
std
loopne
inc
ffree
inc
outsl
or
xor
aas
out
inc
rclb
push
dec
cltd
test
hlt
enter
bswap
mov
fs
rorb
push
stc
or
cmp
je
in
xchg
lret
pop
or
or
pop
xchg
or
cli
xor
fildll
movsl
mov
sbb
xorl
jnp
imul
sti
push
mov
add
xlat
pop
sub
jae
pop
subb
mov
lcall
jl
add
sub
xor
dec
popa
int3
cmp
xchg
outsb
call
int
or
movsl
aad
lret
jp
and
xchg
scas
test
xchg
jl
jecxz
out
xchg
out
les
adc
fsub
dec
in
xchg
aad
and
notb
cmpsb
sbb
sub
mov
scas
mov
mov
nop
faddl
shr
mov
sub
ja
sbb
sbb
or
pop
aas
mov
add
or
cli
mov
jo
mov
lahf
xchg
push
mov
lcall
and
or
add
ljmp
cmp
mov
pop
cmp
or
mov
adc
aam
pushf
mov
xchg
sbb
or
mov
out
mov
jne
cmpsb
mov
mov
pop
sub
repz
or
data16
pop
call
ds
clc
jb
or
fidivs
adc
pop
popf
je
das
sub
popf
loope
mov
push
fxch
cmpsl
adc
test
adc
test
lock
lds
ficomps
and
cmp
jmp
xchg
pop
or
cld
test
inc
test
ret
sub
lret
mov
jge
or
sbb
pop
mov
popa
nop
xchg
pop
sahf
pop
das
lea
mov
mov
cmp
aam
mov
cmp
inc
adc
dec
dec
fdivr
jno
mov
in
faddl
aaa
pop
loopne
cmp
cmpsl
stc
inc
sahf
test
xor
adc
sbb
mov
scas
push
outsl
jmp
cmp
pop
in
movsl
int3
pop
mov
xchg
sbb
insl
leave
push
test
scas
inc
insl
fiaddl
xorb
ret
lods
dec
cmp
shrb
inc
sub
add
shrb
jnp
add
stc
sahf
ss
inc
xlat
bound
in
es
jb
add
mov
xchg
sbb
data16
mov
push
hlt
mov
fidivs
sbb
icebp
and
call
or
shrl
mov
movsb
fcmovnu
sub
fstpt
and
xchg
xchg
out
loop
or
pop
testl
add
dec
dec
testb
iret
pop
pop
push
insl
and
and
cwtl
dec
sahf
stc
negb
addr16
jnp
jae
scas
lea
inc
rolb
dec
cmp
jbe
add
mov
or
add
fmuls
xlat
cmp
rcrb
divl
jg
es
jl
mov
lock
stos
lret
outsl
sbb
jle
cld
mov
int
ljmp
je
stc
ss
cmpsb
cmp
or
jle
mov
aaa
xlat
mov
push
test
mov
hlt
pop
leave
mov
mov
insl
in
jne
sub
mov
rolb
push
stos
test
mov
mov
push
aaa
xchg
mov
xlat
push
mov
jle
xor
aam
div
mov
jo
and
jns
and
sti
xchg
dec
xor
lds
sahf
pop
mov
jge
add
push
and
movsl
lea
inc
dec
cmovbe
pop
iret
pop
adc
jno
mov
and
dec
dec
xchg
jg
jl
pop
mov
push
pop
inc
jp
das
xor
xchg
push
mov
cmpsl
ficoms
mov
lods
dec
scas
aad
call
dec
fiaddl
aas
test
rcrb
or
aam
int3
pop
mov
adc
xchg
add
adc
insl
or
push
xor
clc
ljmp
mov
sbb
test
mov
arpl
and
sub
movsb
cmpsb
xlat
stos
xchg
dec
imul
outsb
lea
adc
in
hlt
xor
xchg
dec
jns
push
cld
pop
cltd
xchg
out
mov
xchg
loope
shrb
in
push
xchg
dec
movsb
jbe
cmp
lret
push
js
and
ljmp
mov
lock
popf
stos
repz
push
pushf
push
pop
imull
push
jecxz
xor
das
aaa
in
mov
xchg
and
sbb
cmp
aam
mov
ficoml
xor
loope
pushf
xchg
push
or
test
into
cmp
push
pop
fdivrs
in
dec
jne
test
pop
jnp
imul
jnp
test
sub
js
mov
test
add
dec
addr16
aam
inc
xchg
and
sbb
sbb
lea
xorb
jl
cmp
shrb
int
je
xchg
mov
dec
mov
inc
scas
ljmp
cmpl
mov
mov
loopne
cli
in
mov
mov
testl
sbb
xor
fwait
int
mov
cmp
hlt
popl
pop
mov
lock
lret
mov
cld
xor
and
imul
incb
inc
pop
jo
push
test
popa
add
bound
mov
pop
mov
sbbl
adc
sub
adc
orb
cs
pop
dec
cmp
out
into
inc
jae
mov
mov
shll
cmp
sarb
sub
out
pop
mov
xor
fists
fbld
ljmp
aaa
mov
cld
push
insl
cld
loop
leave
adc
jecxz
jmp
sub
lcall
aam
test
rolb
cli
in
push
adc
push
arpl
sbb
jno
dec
xchg
or
add
insl
js
rcr
push
push
cmc
add
sbb
jecxz
test
int
test
imul
loop
clc
test
inc
scas
push
add
push
mov
fdivrs
cmp
js,pn
jns
sub
sbb
stc
xchg
mov
mov
nop
dec
or
lea
push
test
sub
sbb
daa
faddl
into
dec
ljmp
xchg
aad
stos
jo
or
call
repz
xlat
aaa
jg
fmul
add
pop
pop
ror
sahf
lret
out
dec
imul
pop
pop
in
in
in
imul
pop
idivb
mov
jae
fmuls
stos
mov
jmp
pop
mov
sbb
cmpsb
daa
outsb
sub
push
add
xor
xchg
popf
fsubrl
cmpsb
fstpt
adc
lds
add
push
xor
cmpsl
aad
sahf
or
into
jle
xor
frstor
out
inc
pop
inc
call
and
jle
pop
fcomps
adc
push
mov
and
subb
and
cwtl
mov
inc
mov
into
pop
cs
mov
roll
xor
cmpsl
stos
mov
outsb
test
mov
add
adc
movb
xor
mov
mov
shrb
or
dec
jmp
sbb
adc
mov
xchg
cmp
jge
fnstcw
repnz
dec
pop
xchg
mov
and
push
adc
test
lock
enter
je
and
sub
and
jg
jp
loop
dec
movb
and
xor
in
out
or
push
push
inc
cmp
icebp
xchg
jnp
xchg
cmp
xor
call
cltd
call
mov
jg
sub
ret
xchg
in
shrb
lret
mov
mov
sbb
hlt
repnz
mov
and
xor
and
pop
jmp
sub
inc
imul
scas
cli
sbb
mov
mov
imul
and
pushf
jp
out
push
das
dec
adc
xchg
adc
lods
mov
insl
jmp
popaw
and
push
and
shl
cmp
in
xor
inc
out
inc
loop
ja
xchg
mov
fwait
sub
cmp
call
adc
test
push
add
js
add
sub
xor
and
bound
outsl
mov
repz
inc
out
add
das
and
enter
mov
es
mov
icebp
loopne
scas
repz
add
lea
jmp
in
test
and
lret
sub
inc
pop
into
mov
add
and
fisttpl
dec
ret
fcomps
adc
in
pop
or
pop
push
insl
je
jo
sub
mov
pop
in
mov
jne
insb
sbbb
mov
sub
pop
add
sub
into
into
je
or
lods
xchg
xchg
jae
imul
js
sbb
mov
pop
xchg
xor
dec
enter
mov
sub
icebp
sti
inc
nop
test
stos
aaa
cmp
cs
sbb
loopne
mov
bound
hlt
mov
jb
xlat
adc
push
add
mov
and
lahf
adc
inc
mov
xchg
pop
mov
stos
popa
icebp
xchg
imulb
lods
loopne,pt
orb
cmp
loop
pop
add
shrb
sahf
leave
push
push
add
icebp
xor
or
ljmp
xchg
outsl
adc
sub
mov
add
cwtl
lods
out
shll
push
mov
idivl
dec
jns
xorl
adc
sub
dec
dec
cmp
lds
cmpsl
sbb
mov
add
shll
cld
cmp
je
and
push
out
mov
or
mov
pop
int
sbb
pop
stc
jbe
pushf
scas
sub
cltd
mov
lret
adc
aam
and
mov
mov
mov
push
adc
clc
jecxz
xlat
arpl
push
int3
sbb
iret
out
mov
popa
aad
ja
push
jge
scas
in
sub
mov
fs
dec
mov
pushf
inc
cmp
sub
mov
imul
test
pop
lods
cmp
call
fwait
mov
lods
pop
aas
sbb
mov
in
inc
mov
dec
pusha
adc
xor
shr
pop
outsb
sarb
test
test
lock
scas
das
std
aam
cmp
dec
cmc
in
xor
test
mov
sahf
pop
cmp
jmp
mov
lret
inc
mov
and
loop
fldl
out
cwtl
iret
inc
sub
mov
in
adc
xchg
daa
cmp
push
cs
push
xchg
mov
xor
cmp
xlat
aas
xor
div
mov
adcb
lret
cmp
push
inc
in
icebp
inc
and
push
aam
cmpsb
leave
push
sbb
inc
jb
mov
andl
repnz
add
pop
fwait
lret
push
jecxz
aas
shrb
pop
sub
fwait
dec
add
aam
aam
insb
jne
test
cmp
mov
pop
fnstsw
or
imul
xchg
mov
xchg
cmp
aam
push
mov
mov
pop
into
es
dec
push
mov
in
mov
adc
mov
mov
jne
or
ds
jns
sti
loop
scas
jnp
inc
insl
lahf
lret
xchg
pop
mov
ret
fstpt
ret
stos
mov
mov
pushf
add
cmc
mov
jmp
mov
cld
ds
iret
into
int3
dec
imul
aas
inc
int
pushf
arpl
dec
icebp
pop
dec
les
into
cmc
pop
inc
fcomps
jns
repz
add
aaa
and
xchg
mov
fwait
ds
pusha
shr
mov
jl
pop
outsl
popa
add
mov
mov
fwait
fldln2
outsl
jecxz
int3
mov
push
cltd
xor
sub
sbb
lea
fadds
insl
iret
test
jb
aas
xchg
cmp
jge
pop
push
sbb
adc
mov
inc
jmp
imul
pop
mov
or
mov
mov
jns
mov
xchg
add
popf
xlat
mov
ljmp
push
rcrl
cltd
jns
lods
nop
push
push
pop
adc
push
push
jbe
inc
bound
add
pop
jmp
cmpsb
ljmp
cwtl
pop
bound
jno
stos
loopne
sub
pop
imul
movsl
adc
xchg
loopne
movsl
enter
aam
lret
pop
ret
cmp
pop
jl
adcb
pop
out
sbb
xchg
lahf
loopne,pt
sub
or
mov
out
mov
fwait
call
rcll
or
or
mov
mov
push
mov
xor
idiv
lds
adc
inc
in
push
push
xchg
inc
pop
mov
je
xchg
push
test
mov
incl
in
nop
in
mov
xor
idivb
xchg
mov
xchg
add
dec
mov
add
or
test
adc
xorb
xor
mov
daa
js
push
adc
jl
inc
sub
adc
stos
inc
dec
sbb
mov
ss
je
movsl
loope
mov
cmpps
call
mov
in
pop
je
cltd
sahf
and
push
sbb
scas
push
jl
gs
pop
out
lcall
std
hlt
push
fs
jmp
sub
sbbb
dec
fcmove
cli
and
icebp
and
pop
jmp
add
sbb
je
cs
add
testl
fnstsw
jns
and
adc
adcb
mov
pop
int
lods
ds
or
adc
sub
loop
shr
add
rorl
xor
adc
xchg
sbb
mov
sbb
sahf
out
sbb
push
repnz
or
inc
sbb
add
ljmp
xchg
add
fildl
mov
push
add
dec
popa
popl
add
aaa
dec
loop
mov
outsb
lds
mov
xor
jb
cmpsb
mov
out
adc
lods
movsl
gs
ret
xor
cltd
leave
bnd
in
mov
repz
test
and
popf
pop
dec
pop
sub
pop
mov
mov
cld
movsb
pop
cmc
mov
mov
nop
cwtl
les
sbb
or
jge
jbe
pop
test
adc
shl
shll
mov
cmc
mov
jl
jp
push
repnz
xchg
mov
nop
sbb
push
imul
repz
fbstp
lds
mov
jle
pop
cld
sbb
adc
xor
imul
mov
ficoml
setl
cltd
fucomip
pusha
outsl
adc
push
sub
js
jge
negl
or
aaa
push
xchg
mov
add
jbe
repz
push
xor
sub
push
xor
pop
cmp
sub
cmp
cmp
sbb
shrb
pop
inc
leave
sub
fisubs
sub
gs
adc
inc
sbb
mov
cmp
aad
in
lret
int
shr
mov
fistl
sti
out
testb
and
aad
or
inc
xor
push
mov
xchg
fistl
sbb
fsts
and
xor
cmp
mov
jl
or
in
xor
cmp
xchg
pop
scas
addb
repnz
inc
daa
or
inc
xchg
dec
or
adcb
daa
xchg
lock
sub
nop
mov
fmuls
jne
push
stos
dec
cmp
xchg
pop
jo
jbe
xor
int3
test
sahf
lcall
mov
dec
mov
lods
sub
stc
icebp
sarb
movsl
push
jae
mov
out
push
pop
mov
push
outsl
push
cltd
mov
inc
push
cmp
not
xchg
sub
xor
push
adc
xor
daa
scas
jne
sub
pop
jl
push
mov
movsl
cli
js
mov
imul
fmuls
adc
insl
sub
lods
sub
mov
cmpsl
inc
mov
and
movsb
vmovapd
rcrl
sbb
mov
sahf
xchg
test
insb
pop
mov
pop
xchg
fwait
jae
in
mov
mov
lds
dec
aad
inc
and
add
xor
and
dec
adc
mov
cmp
scas
add
push
cwtl
aam
repnz
push
xchg
fucomp
or
icebp
and
sub
jge
jnp
jbe
std
les
mov
dec
jo
fimull
add
scas
fisubrl
movsb
and
repz
frstpm(287
inc
pusha
das
js
mov
push
add
jp
std
pop
in
xchg
push
imul
lret
adc
mov
orb
fcoml
push
popa
fildl
mov
cwtl
sti
out
std
push
orb
iret
ljmp
sbb
cld
shr
or
test
sbb
ja
stos
jecxz
mov
add
push
sub
dec
mov
pop
push
das
lock
pushf
clc
cmp
add
push
xchg
adc
fcoml
pushf
stos
xor
sti
leave
mov
dec
sub
adc
add
mov
adc
mov
iret
xor
jne
in
push
adc
push
sbb
call
dec
cmp
xor
add
pushf
inc
insb
div
sub
lret
dec
cmpsl
aaa
iret
addr16
lods
icebp
int3
add
inc
push
mov
shrb
int
push
xchg
je
xchg
sub
lret
pop
pop
dec
out
jl
sbb
out
adc
jecxz
addr16
and
stc
ficompl
rclb
or
inc
jmp
outsb
shlb
xor
aaa
lods
ljmp
daa
mov
mov
push
cmp
jmp
frstor
push
mov
dec
add
int
test
data16
sub
ja
xor
loope
in
andl
add
inc
and
push
xchg
subl
ljmp
daa
shlb
roll
pop
gs
push
dec
jg
lcall
loopne
insb
test
sahf
adcb
sub
je
popa
and
jns
out
and
in
mov
cmpsl
jmp
sahf
jns
repz
push
pop
fstl
mov
sahf
enter
xchg
in
pusha
inc
jnp
aam
jp
mov
insb
inc
mov
xchg
lcall
cli
mov
jmp
adc
setbe
stos
inc
ja
sahf
push
xor
sbb
shl
inc
mov
es
stos
jns
lret
jae
ljmp
cmp
popf
cmp
adcl
test
xor
popf
pop
add
das
loop
fdivrs
fwait
xor
iret
loop
mov
xchg
nop
std
out
scas
add
cwtl
sbb
mov
aam
andl
or
inc
sub
les
cltd
jp
adc
xor
out
or
inc
loopne
das
add
inc
imul
hlt
cmp
fs
xchg
das
in
mov
push
or
dec
in
jae
jns
mov
testb
repnz
popf
fwait
mov
or
pop
insl
mov
jmp
pop
ds
lret
inc
or
pop
or
push
xchg
inc
sbb
push
stos
cmpsl
lock
lock
inc
cmp
mov
xor
add
pop
pop
sti
sub
xor
std
bound
mov
adc
mov
std
stos
adc
sbb
ficoms
movsb
or
xchg
in
or
lahf
push
sbb
push
lods
lret
sub
add
jmp
ss
fimuls
sbb
mov
push
mov
sbb
jnp
das
add
test
shlb
sub
push
inc
mov
out
jp
stos
arpl
push
rcrb
adc
insl
mov
addl
pop
packuswb
ss
scas
cld
jge
test
les
cmp
add
or
jl
in
add
mov
mov
pop
je
or
pop
jb
imul
shrb
not
in
mov
sbb
dec
and
iret
push
dec
lds
and
push
decb
dec
ja
sti
int3
sub
daa
or
xor
push
sub
bound
cmc
ss
ja
aad
lret
push
inc
inc
xor
ljmp
xchg
and
mov
test
mov
jp
outsl
stos
inc
sub
imul
clc
sub
or
push
cmp
jne
xchg
xchg
mov
sbb
icebp
cmp
and
or
lret
cmpb
sub
or
lcall
mov
repnz
inc
xor
data16
rcr
mov
rcrl
lea
pop
sbb
inc
push
inc
dec
aam
xchg
hlt
fs
imul
push
jbe
jb
and
into
test
pushf
sub
xchg
cmp
fucomi
call
jmp
sub
sti
push
dec
iret
push
nop
pop
xchg
je
xchg
or
mulb
pop
je
or
sub
int3
xlat
aaa
lahf
ljmp
mov
jns
icebp
cmp
or
gs
out
cwtl
out
and
out
jl
in
in
mov
mov
pusha
aas
rol
jns
or
and
inc
pop
push
push
dec
push
and
inc
adcl
incl
pop
xchg
cmp
or
mov
out
cmp
dec
or
decb
xchg
iret
out
mov
cltd
jmp
shrb
mov
xchg
mov
jge
fdivrl
xchg
push
es
loopne
xchg
insl
dec
inc
cmp
push
imul
add
repz
jmp
add
xchg
xor
mov
jp
mov
into
push
sahf
sub
mov
or
lahf
pop
cltd
sub
dec
adc
test
or
outsb
sti
pop
sti
jg
mov
mov
inc
loopne
or
jecxz
jae
inc
pop
mov
outsl
xor
int3
fcompl
fsubrl
cli
and
pop
aad
jge
push
loop
fs
fnstcw
subb
xchg
mov
arpl
icebp
stos
add
inc
pop
cmp
enter
sahf
ficompl
lret
xor
xchg
mov
or
add
add
shlb
xchg
push
pop
loope
out
test
jo,pn
xor
xchg
in
and
pop
sbbb
dec
push
inc
testl
rcrl
movsb
insb
push
ja
sbb
sbb
mov
sti
mov
and
test
xchg
idivl
mov
cmpsl
les
lods
xor
das
nop
xchg
xor
pop
cli
lret
cld
inc
nop
cwtl
bswap
je
lcall
pop
xchg
out
sbb
pop
xchg
push
repz
xchg
sbb
ret
data16
fld
in
je
repz
mov
mov
jns
sbb
enter
es
mov
push
pop
std
int3
pop
mov
cmp
in
dec
xchg
sbb
jmp
add
dec
mov
jmp
outsl
push
lds
mov
adc
seta
push
imulb
adc
xor
fcomps
repnz
lods
filds
sub
mov
out
scas
imul
push
inc
pop
add
mov
fwait
xor
lahf
insl
ljmp
push
add
mov
minps
cmp
cmpsl
push
ss
fmul
xchg
call
test
pushf
in
dec
adc
inc
insl
pusha
iret
mov
push
jo
pop
push
jo
mov
dec
lods
or
xchg
jns
xor
sbb
jge
mov
shl
xor
mov
push
add
fdivs
push
gs
das
shl
or
mov
popf
test
lods
wbinvd
lahf
popf
xchg
and
cmp
flds
insb
icebp
rcrl
mov
cmp
rolb
sub
mov
test
int3
imul
add
jge
test
mov
cwtl
je
fucomi
je
push
jno
loopne
add
or
cmp
xor
adc
ficompl
or
fdivs
cmp
arpl
fwait
dec
sbb
insb
out
dec
sahf
pop
andl
and
cmpsl
mov
pop
push
inc
mov
mov
jl
push
push
pop
fsts
add
sbb
ret
xchg
fwait
pop
mov
push
mov
insb
bound
xchg
repnz
loopne
mov
dec
jecxz
jp
int
arpl
rcrb
mov
push
push
imul
push
les
jb
bound
dec
pushf
movsl
pop
mov
gs
or
add
outsb
push
sbb
push
je
jno
and
mov
dec
xor
gs
cli
scas
outsl
sbb
sti
jp
out
inc
pop
sub
or
test
mov
cli
pop
lret
cmp
mov
out
xor
cmp
mov
xor
ja
xor
lcall
push
dec
popf
add
lcall
sbb
outsl
xchg
mov
fistpll
inc
pop
or
jp
sbb
jmp
cmp
or
push
call
sub
or
lahf
icebp
aaa
imull
clc
repnz
xor
sbb
inc
jp
jns
mov
adc
int3
mov
out
mov
jno
sahf
aas
mov
sub
push
push
mov
ds
into
fsub
mov
cmpsl
jbe
enter
sub
sub
pop
jno
add
fwait
and
push
lret
dec
fs
enter
cmp
fsubl
mov
add
cmp
xchg
aaa
test
xor
outsb
jecxz
push
push
bound
push
xor
aam
pop
daa
dec
dec
stc
je
js
pcmpeqd
fwait
imulb
sahf
pop
mov
test
or
popa
push
outsb
dec
sbbl
jno
clc
je
fistps
fnsave
sahf
je
jg
jnp
cmp
sbb
cmp
pushf
jle
lret
rcr
cmpl
insl
rcr
adc
dec
jl
std
cli
ror
sub
fwait
cmp
cli
push
and
xor
sbb
lcall
mov
jae
dec
push
and
push
cmp
lret
imul
aad
jg
out
fsubr
jle
lds
fsubp
mov
xchg
js
std
or
ljmp
lret
cmp
scas
lods
jge
call
scas
gs
lds
loop
sbbl
in
cli
cmp
add
cs
cmp
fdivrl
mov
ficomps
mov
cmc
adc
fimull
int
shrb
lret
cltd
inc
sbb
and
pop
adc
cwtl
mov
xchg
idivb
lods
aad
xchg
push
dec
scas
dec
xchg
fidivrs
fwait
mov
add
lods
cmp
mov
mov
out
sub
sahf
loopne
ret
mov
pop
cmpsl
inc
mov
push
sbb
xchg
push
xchg
mov
lock
rcll
pop
popf
mov
ljmp
cmp
mov
cmp
jge
out
das
add
mov
movsb
pushf
repnz
rorl
scas
xchg
aam
dec
or
scas
sahf
imul
sbb
pop
cs
lods
fwait
xchg
test
bound
pop
sbb
xchg
imul
fdivl
ss
jae
loopne
lea
mov
and
movsb
lret
aam
cltd
add
fiaddl
mov
repnz
cmpsb
adc
jg
shll
jle
outsl
mov
imul
aad
sbb
call
imul
fiaddl
popf
fldl
push
fs
fsubp
shll
xor
mov
lahf
imul
push
fcoml
test
movlps
ret
movsl
arpl
adc
pop
xchg
push
out
jge
cmp
fidivs
loop
sbb
xor
int3
push
in
cmp
ljmp
pop
inc
nop
loope
divb
jecxz
sub
or
movsl
mov
or
pop
mov
out
je
clc
mov
fildl
jg
adc
xchg
cmpxchg
cld
shlb
popf
inc
jbe
pop
cmp
imul
adc
adcb
sub
xchg
test
and
push
adc
and
loop
mov
sub
xor
cld
imulb
addr16
push
std
and
and
dec
cmc
fucomi
push
fs
jns
xor
scas
xchg
hlt
mov
out
and
jle
fucompp
sbb
pop
and
test
jb
add
dec
insl
and
and
sbb
xlat
inc
adc
xchg
pop
lea
mov
movsl
cmp
popa
xchg
mov
icebp
imul
dec
cmp
jecxz
mov
pop
aaa
xor
xchg
bound
mov
outsb
push
fistpl
in
or
xor
andb
xchg
and
outsb
sub
test
and
push
sub
mov
pusha
lods
mov
shll
aaa
jecxz
stos
push
mov
or
dec
jns
sbb
inc
and
addr16
push
mov
sbbb
adc
addr16
pushf
outsl
cmp
shl
sbb
shll
jg
mov
repnz
inc
jb
nop
ja
cmp
and
pop
mov
fcmovnu
pop
adc
data16
js
or
dec
aam
shll
xor
pop
int3
push
int
cld
pop
in
rolb
das
push
and
add
out
fisttpl
aaa
jo
adc
jo
push
ror
in
clc
cmc
mov
jp
insl
bnd
fwait
lods
push
cltd
sbb
out
orl
aam
add
xchg
jg
adc
ss
jmp
cmpsl
xchg
cmp
xor
mov
pop
and
xchg
stc
add
in
mov
dec
add
ds
lods
sbb
or
imul
setge
dec
jge
or
lahf
and
cmp
iret
push
mov
pop
rorb
inc
xor
jae
sbb
sub
pop
cwtl
roll
mov
shll
pop
imul
scas
in
push
adc
jb
xchg
gs
mov
adc
ljmp
mov
sub
mov
xchg
sub
shlb
dec
int
cmp
lock
das
rcrl
cmp
mov
pop
lcall
into
scas
mov
pmaddwd
sbb
cmpsb
nop
hlt
and
cltd
mov
ret
xor
jne
sbb
xchg
mov
sbb
mov
jae
es
shlb
das
loope
in
mov
dec
fistl
icebp
movsl
outsl
aas
xchg
jnp
dec
cmp
dec
out
xor
enter
xbegin
mov
add
in
add
stc
or
loop,pn
sbb
push
xchg
and
xor
and
cwtl
mov
jns
mov
or
xor
cmp
sbb
lahf
lret
add
pop
mov
adc
das
adc
and
sbb
inc
stc
rcrb
dec
cs
jae
das
and
setb
imul
mov
mov
pop
sbb
test
jo
loope
mov
loope
jo
lock
xorl
sub
inc
ljmp
cmp
call
push
out
xchg
add
lock
xor
xchg
repz
dec
addr16
mov
add
sahf
fmull
std
jmp
es
enter
xor
hlt
fwait
popf
adc
filds
xor
fdivs
sahf
lods
movsb
add
pop
arpl
ja
dec
jne
mov
cmpsb
pop
mov
or
add
scas
lahf
push
jnp
in
push
push
push
push
push
xchg
dec
mov
adc
pop
stos
jl
sbb
add
xchg
ficompl
cmp
movsb
mov
sbb
or
mul
cmpb
fsubs
or
sbb
jle
jns
pop
lods
stos
mov
push
jl
fdivrl
sub
adc
adc
outsb
and
sub
mov
mov
jns
jl
ret
test
mov
jmp
mov
mov
or
pop
add
and
test
fcmovnu
int
shll
in
repz
mov
xor
push
rcrl
and
push
xor
ret
pop
nop
js
xor
pop
cmpsl
mov
jbe
fs
jo
loopne
cltd
mov
push
in
out
pop
cmp
daa
aam
stos
mov
loop
mov
cwtl
cld
nop
jo
sub
call
xchg
add
mov
ja
dec
mov
lret
rcl
cmp
testl
inc
insb
and
inc
int3
push
mov
mov
mov
pop
adc
or
into
pop
sub
xchg
mov
xchg
les
test
repnz
add
std
popa
lock
stc
fsubrs
addl
outsb
shlb
pop
jno
loop
loope
xor
int3
pop
shrl
maxps
xchg
push
test
lret
jnp
xchg
sub
xor
outsl
ficoms
and
adc
mov
pusha
jne
inc
pop
xor
pop
xor
out
or
push
dec
int
mov
jp
into
xchg
mov
jp
cmp
mov
sbb
scas
dec
negb
xor
or
sbb
mov
add
mov
pop
xchg
mov
rclb
aaa
imul
ljmp
shlb
into
xor
xchg
inc
and
out
jecxz
mov
fs
xor
inc
popl
aaa
cltd
sub
mov
sbb
or
int
cmp
jbe
out
sbb
lret
sub
fldt
xchg
dec
jge
and
add
add
orb
jno
adc
fstpt
je
xor
loopne
mov
out
or
inc
and
xchg
and
pop
sub
or
hlt
jmp
mov
stos
imul
clc
arpl
cmp
les
adc
fnstcw
out
jmp
ret
dec
js
cmp
test
outsl
pop
test
movsb
mov
push
xchg
jle
insb
push
xchg
ror
add
fwait
fwait
clc
sbb
sbb
int
add
mov
out
mov
inc
arpl
in
sbb
cld
inc
jl
xchg
xlat
out
and
inc
clc
push
test
stos
push
pop
gs
dec
fisubrl
pushf
ja
xorl
cmp
dec
rcrl
xor
sub
mov
adc
test
data16
mov
push
ret
dec
in
mov
dec
mov
leave
push
xchg
scas
or
mov
push
add
inc
enter
jne
aad
jb
add
rcr
sbb
inc
cmp
push
sbbb
inc
xor
cld
dec
ret
neg
ror
adc
ret
xor
push
fisubs
cwtl
mov
mov
inc
dec
jmp
movsb
in
ret
mov
data16
in
int3
shll
mov
lods
int
sbb
and
mov
dec
dec
daa
mov
mov
add
push
aaa
mov
repnz
pop
and
enter
push
sub
movsl
js
mov
gs
das
or
rcrl
scas
xor
and
sub
call
cwtl
mov
sbb
sarb
sbb
add
dec
jo
fwait
pop
push
mov
pushf
loop
loope
jecxz
push
pop
sar
shlb
and
sahf
int3
fisubl
push
pop
dec
sahf
push
jecxz
testb
push
mov
icebp
jge
jno
jge
icebp
cld
lcall
pushf
xchg
shrl
frstor
stos
xor
xchg
lods
push
lahf
adc
inc
mov
in
mov
fisubrl
pop
out
sbb
xor
jp
ds
pop
mov
push
mov
sbb
jno
or
jo
pop
movb
int
inc
pop
add
fcomip
cmpsb
repnz
test
fisttpl
out
cmpb
cld
or
or
ja
xchg
dec
mov
pop
cmp
test
popa
cs
lods
and
fsubrp
aam
ret
mov
xchg
jae
dec
push
adc
rcl
fistps
rcrl
xchg
dec
sub
mov
cli
or
xchg
lds
xchg
ret
stc
and
lret
push
pop
pop
push
stos
bnd
in
sub
movsl
push
fsubp
cmpsb
cmc
sbb
or
int3
lea
add
or
mul
jg
mov
or
or
and
loopne
repz
mov
and
xchg
or
dec
enter
ljmp
add
mov
mov
pushf
push
int
xor
mov
lds
dec
push
stos
ja
jbe
xor
cmp
aaa
lahf
rcll
mov
or
add
push
js
sbb
int
in
xchg
mov
ror
mov
test
push
dec
push
push
aad
push
int3
mov
lret
dec
lcall
into
dec
sub
pop
lods
jg
les
jge
arpl
outsb
call
lds
out
mov
lods
mov
and
lret
jne
sub
pop
sub
mov
xchg
jno
mov
push
sub
repnz
sahf
lea
mov
cmp
repz
cs
popa
das
shrl
adc
fwait
out
sub
pop
int
jno
xlat
add
ret
mov
insb
ret
out
lds
ljmp
je
xchg
scas
icebp
int
inc
adc
jne
arpl
std
push
jns
mov
movsl
cmp
add
data16
xchg
jbe
pop
dec
rclb
popa
arpl
pop
call
and
loopne
xor
pop
out
es
mov
mov
in
fwait
js
jecxz
push
jbe
push
mov
jp
sbb
and
rcll
sbb
ret
gs
fs
cmp
push
mov
cmp
inc
pop
jg
xchg
sub
xchg
fdivrl
outsb
adc
jmp
sti
mov
mov
icebp
lock
mov
sub
or
adc
lds
xorl
jmp
leave
mov
aas
adc
ret
sbb
repz
lret
insb
arpl
mov
and
or
jo
insl
and
mov
inc
mov
adc
shr
jo
sbb
xchg
adc
xor
mov
add
push
add
jge
daa
inc
ret
hlt
scas
inc
and
jnp
and
mov
aam
mov
insl
lret
popf
dec
xchg
dec
inc
mov
mov
stos
test
int3
xor
scas
and
nop
insb
mov
inc
arpl
jo
gs
cwtl
jne
xchg
shlb
or
cmp
mov
xchg
cmp
sbb
cmpsl
jle
es
adc
jle
fisttpll
cld
xor
test
insb
jns
sbb
fldcw
mov
push
in
cmpl
lods
and
add
jne
jp
loope
test
xor
push
daa
adc
cmpsl
scas
jbe
sahf
or
cmpl
cs
dec
add
push
and
cmp
out
das
imul
fisubl
out
inc
xor
or
sbbl
jo
icebp
push
cmpsb
mov
pop
call
mov
shlb
lea
test
dec
mov
or
lea
sub
mov
loop
loope
and
lods
sbb
cmp
test
ja
loop
lds
xchg
fnstenv
xchg
arpl
xchg
les
sub
aas
test
ja
outsb
sar
test
pop
clc
inc
pop
xlat
xor
pop
sbb
pop
icebp
jne
icebp
pop
ds
dec
mov
inc
test
mov
inc
mov
or
cmp
mov
add
jne
into
pop
out
cld
cmp
inc
ret
add
jl
mov
inc
imul
mov
popf
int
xchg
jge
jae
out
movsl
gs
adc
and
jl
mov
dec
push
mov
xchg
cmpb
popf
je
shrb
clc
leave
mov
and
je
ret
orb
push
mov
add
mov
jo
lret
jae
cmc
dec
movsl
cmp
ficoml
ficoms
movsb
or
cmp
mov
push
pop
in
cmp
fistl
and
subl
out
mov
fbld
push
mov
loope
call
mov
in
mov
mov
inc
pop
sbb
pop
mov
add
add
jg
sar
cmpsl
cmpl
push
xchg
mov
hlt
inc
xor
pop
scas
shrb
stos
subb
fxch
adc
mov
insl
ljmp
lea
dec
push
xor
ficoml
repz
shll
insb
jmp
mov
mov
mov
xor
enter
das
xchg
mov
xor
and
jne
pop
or
call
mov
outsl
mov
mov
insl
ja
mov
idivb
shll
jl
jp
inc
daa
mov
mov
pop
mov
pop
mov
fldcw
pop
mov
aam
sub
popa
sbb
jge
aas
add
movsb
xchg
sub
xchg
insl
mov
mov
int3
ret
inc
lods
js
mov
cmpsb
cld
in
les
lret
rcrb
jo
and
scas
sahf
cmp
inc
jbe
push
ret
push
stos
test
mov
adc
and
cmp
pop
fildll
adc
lea
add
imul
lock
pop
jle
scas
xor
lock
lods
sahf
cmp
add
in
stc
xchg
and
fsubl
push
lds
xchg
out
lret
push
dec
inc
xchg
push
ds
dec
sub
adc
mov
xlat
mov
ret
sbb
pop
push
pop
movsb
ss
pop
ret
jno
scas
push
inc
xchg
or
mov
test
cmc
add
mov
add
js
mov
push
push
pop
gs
push
int3
dec
lret
mov
jecxz
pop
cmp
adc
test
in
insb
xchg
sub
jmp
out
dec
mov
mov
mov
stc
sbb
leave
data16
jmp
test
xor
mov
cmpsb
xor
mov
inc
adc
xlat
mov
lea
mov
sbb
scas
test
sti
mov
out
loopne
insb
out
push
jae
mov
les
inc
pop
dec
mov
add
repnz
mov
dec
aam
dec
xchg
enter
addl
jns
movl
lods
jle
int3
cmpsb
adc
inc
cltd
dec
lods
sbb
sbb
add
cmp
and
dec
fildll
aas
dec
cmpsl
aam
clc
sub
daa
pop
repnz
negb
hlt
dec
dec
lret
pop
mov
mov
inc
jmp
ja
test
dec
xchg
add
mov
nop
xchg
mov
aad
sub
xchg
pop
xor
jg
pushl
xchg
cltd
js
or
inc
int
push
bndldx
push
pop
in
dec
scas
mov
dec
jbe
lcall
push
cmpl
or
or
in
daa
nop
shll
push
adc
mov
or
xor
or
sub
pop
pop
xchg
mov
mov
mov
push
sub
in
lods
pusha
and
cmpsb
out
js
les
dec
jns
xchg
inc
inc
sti
pop
in
push
dec
shr
xor
aad
shr
inc
into
scas
mov
arpl
inc
dec
xor
cs
arpl
lret
imul
gs
es
in
pop
dec
je
adc
jmp
and
ss
mov
iret
loop
push
adc
dec
xchg
jge
into
pop
push
lret
mov
repnz
movsb
jbe
fs
gs
lret
add
scas
mov
push
sub
hlt
push
sti
pop
cmc
lcall
sbb
inc
dec
xor
add
pop
repz
addr16
clc
sub
scas
cmpxchg
loope,pn
scas
push
movsl
or
sub
jns
mov
cmc
mov
lods
ret
clc
jge
mov
xchg
popa
ss
jg
ss
repz
jecxz
pop
int3
out
add
std
jbe
mov
movl
adc
dec
scas
scas
stos
iret
add
adc
cli
pop
fistpl
out
enter
mov
cwtl
out
out
icebp
shll
adc
jge
repnz
pusha
jo
add
cmp
mov
push
mov
inc
sbb
dec
dec
fstpl
inc
insb
pop
push
lods
fdivrl
mov
jecxz
arpl
imul
pop
rcll
and
inc
cmc
arpl
mull
add
int3
fbld
push
xchg
mov
dec
outsl
sub
inc
cwtl
push
jmp
inc
daa
icebp
inc
stc
jg
pop
mov
out
stos
jecxz
jns
mov
push
dec
adc
popf
data16
dec
add
es
lock
add
inc
mov
cmp
mov
popf
or
mov
ret
xchg
in
aam
sub
addr16
sbb
test
cmp
xchg
jno
sub
jae
iret
and
cmpsl
repnz
xor
xor
sbb
adc
mulb
adc
mov
or
xchg
lahf
inc
mov
inc
xchg
inc
aam
cld
jb
movsb
mov
and
push
movsl
mov
pop
hlt
sarl
inc
pop
in
xchg
mov
mov
dec
mov
mov
adc
lock
test
mov
pop
data16
subl
mov
test
jno
insl
mov
jp
add
sub
inc
outsl
dec
inc
fs
ffree
cmpsb
repz
lret
clc
clc
push
orb
scas
pop
arpl
out
nop
icebp
cmp
sti
repnz
xlat
xor
mov
arpl
mov
sbb
icebp
subl
jno
lods
mov
jg
mov
mov
mov
movsl
stos
pop
es
cmp
add
inc
ss
mov
arpl
push
cld
pop
inc
xor
fdivrp
mov
push
ljmp
push
sarb
je
test
cld
pop
mov
movsb
cmp
adc
or
sti
jne
popf
mov
sbb
mov
aas
int
jns
cld
xor
imul
xchg
call
mov
add
add
sbb
gs
test
sbb
mov
and
add
ds
inc
or
push
icebp
ja
dec
or
push
sub
cli
sbb
movsb
movl
cld
in
inc
fstps
orl
jl
in
loopne
outsl
mov
movsl
lcall
loopne
iret
push
fwait
in
out
mov
sahf
jmp
mov
aam
loop
inc
pop
xor
pop
xor
leave
add
nop
mov
pop
adc
adc
stos
mov
pop
cmp
shrb
xor
adc
packsswb
cwtl
jae
mov
mov
inc
mov
fsubrp
lret
aad
pop
ud2
push
jo
sbb
jp
imul
test
add
adc
test
dec
cltd
aaa
clc
lods
clts
out
push
inc
mov
jg
cltd
lods
lcall
cmp
out
pop
mov
xchg
js
push
pop
xorb
in
fucom
jmp
add
mov
jmp
pop
or
mov
adc
js
cmp
mov
cmpsl
add
adc
dec
fildll
xor
popf
push
sti
pop
stos
stos
jo
lods
ds
jl
test
mov
mov
mov
mov
aas
call
insl
das
inc
rolb
in
add
cld
mov
fstp
pop
adc
test
or
or
or
xchg
ficoms
push
inc
ljmp
ljmp
int3
jns
jae
mov
push
sbb
gs
outsb
pop
dec
data16
scas
mov
xchg
xchg
mov
jge
lret
adc
xchg
jns
push
xchg
sarb
mov
sarb
mov
cmc
mov
aad
lahf
xchg
xor
loopne
jne
or
dec
mov
cmp
sbb
push
sub
dec
sub
and
dec
lcall
pop
sarb
inc
mov
cmpsb
ljmp
repz
je
lods
shlb
bound
loop
popa
mov
test
sbb
popa
cmp
dec
fidivrl
add
mov
dec
outsl
in
pop
xor
mov
ret
lahf
fstpl
mov
inc
faddl
movsl
sbb
fcmovb
ds
in
aas
fildl
aas
jb
jo
cmc
sub
push
in
pusha
cs
fldt
xchg
mov
gs
sahf
clc
cmp
cmp
mov
loope
int
and
insl
pop
addr16
popf
enter
icebp
mov
loopne
xchg
leave
mov
xlat
jecxz
mov
xchg
fs
dec
das
sbb
adc
push
jne
fldcw
and
and
daa
iret
xchg
mov
ljmp
and
lea
cld
neg
dec
dec
xor
dec
dec
das
push
pop
and
add
pop
lea
xchg
jl
xor
sub
ret
mov
mov
adc
jmp
out
imul
mov
aaa
inc
push
loop
sti
sbb
push
in
daa
jmp
mov
jp
test
bound
clc
lret
sub
add
mov
xchg
or
in
bound
sti
in
xlat
fdivs
pop
xchg
out
xchg
jge
ret
mov
mov
test
cwtl
and
loope
loopne
les
popa
jg
mov
jae
inc
movsb
sbb
add
jae
or
divb
sbb
mov
mov
adcl
divl
cmpsb
dec
arpl
repz
jmp
jb
pop
jg
dec
pop
cs
mov
int
mov
mov
sahf
pusha
add
cmp
sub
add
int3
outsl
int
push
mov
push
js
les
mov
cmp
mov
jno
add
and
sub
fstl
adc
or
or
and
call
mov
mov
mov
aas
lods
loope
jno
mov
iret
cmp
scas
es
or
xor
popf
jo
into
xchg
ds
push
les
mov
jp
dec
icebp
xchg
gs
jmp
lock
adc
jns
call
jge
xor
ficompl
mul
push
das
inc
les
movsb
mov
fcoml
ficomps
or
pushf
cmp
in
xchg
negb
in
aad
fcomp
sbb
inc
push
inc
popf
push
or
push
es
ret
xchg
outsl
stos
or
int
cs
xor
es
or
and
mov
andb
sarb
int
lcall
jmp
sbb
test
mov
fistpll
in
enter
dec
jo
movsb
nop
push
and
xchg
in
scas
andl
add
sub
sbb
push
lret
push
mov
out
dec
xchg
push
adc
mov
mov
mov
aad
push
inc
scas
in
fwait
add
mov
add
dec
fmull
and
call
pop
cmp
les
ljmp
pusha
jp
dec
fdecstp
data16
xchg
imul
fdivrs
sub
mov
and
hlt
sbb
aaa
sahf
inc
cmp
jne
mov
scas
cmp
add
loope
mov
fsubs
lds
pop
insb
cmp
xchg
pop
mov
sbb
jo
sub
inc
mov
push
mov
sub
push
fsubs
sbb
out
sahf
push
das
adc
push
sub
data16
fcmovnb
xchg
xor
or
add
dec
cmc
div
jns
lods
fdivrl
ljmp
int
in
imul
sbbl
xchg
xchg
int
ds
mov
loope
jns
cwtd
arpl
in
lods
mov
mov
jle
mov
inc
sub
xchg
push
cmp
addr16
fstpt
aam
jge
test
shrb
insb
in
add
sbb
mov
fists
cwtl
xor
cmp
add
inc
push
sub
rcl
pop
cli
in
xor
movsl
mov
xchg
mov
push
pop
pop
mov
cld
bnd
aas
push
test
pop
sub
mov
lods
stc
lock
xchg
fnstsw
jg
mov
hlt
cmpsb
mov
sahf
push
iret
out
sahf
jbe
jb
aas
repz
dec
lds
cmp
mov
pop
xchg
sub
inc
sub
mov
xchg
js
adc
xor
and
icebp
pop
inc
jne
lahf
rcll
or
or
dec
mov
adc
add
fwait
cli
cmovae
and
push
add
aad
shll
cmpb
les
sahf
sub
xor
icebp
inc
xor
fsubs
pushf
js
aaa
and
enter
push
xor
ja
das
ficoml
add
push
lret
out
shrb
mov
dec
sahf
jns
iret
aaa
cs
out
scas
mov
sub
push
hlt
roll
mov
call
loop
pop
inc
jle
fs
sbbl
lods
insb
sub
out
mov
mov
fucomp
iret
pop
pop
jp
aad
cmc
das
adc
or
push
lds
psrld
cltd
jne
xchg
pop
insb
es
daa
in
sub
out
pop
lods
scas
jp
iret
sub
orl
test
pop
sbb
in
mov
mov
in
mov
mov
int3
sbb
push
cmc
aad
leave
nop
out
mov
xchg
loope
imul
fldenv
mov
addr16
jmp
mov
idivl
stc
jne
insb
dec
inc
fimull
jne
push
dec
decl
out
loop
cmpsl
mov
mov
or
push
mov
cmp
icebp
iret
adc
sbb
inc
mov
sbb
xchg
dec
imul
xor
jecxz
ja
shll
pop
enter
outsb
mov
cmp
push
mov
nop
push
lods
adc
loopne
fwait
jo
test
stos
and
cld
sub
mov
test
outsb
popa
xchg
lcall
inc
loop
push
es
inc
inc
add
inc
jle
cli
adc
sbb
sbb
or
sbb
or
mov
push
repz
pop
lcall
and
pop
cmp
push
mov
xor
loop
or
popa
add
sub
cwtl
mov
push
cltd
and
sub
xor
adc
fisttpll
dec
ret
rcr
insb
push
es
inc
stc
es
fwait
xor
mull
test
pop
jnp
xlat
test
xchg
cmp
pop
mov
repz
and
fidivl
scas
mov
adc
aad
int
js
hlt
roll
jle
sbb
pop
cmp
mov
pop
dec
movsl
dec
dec
mov
repnz
icebp
inc
js
jnp
xor
ret
or
lea
pop
or
inc
cltd
mov
dec
dec
add
adc
testl
push
cs
mov
mov
dec
cmpsb
lods
mov
sbb
sbb
jo
int
in
adc
ljmp
arpl
lret
push
cltd
mov
jp
dec
mov
pop
shll
xor
or
ret
cmp
cmpsb
inc
jno
fidivl
dec
cmp
mov
sub
or
sbb
mov
jl
cld
jmp
mov
aas
mov
mov
fucom
out
xchg
adc
add
mov
mov
xchg
jno
jae
out
push
std
popf
fsubs
in
add
ror
dec
shrl
clts
mov
imul
dec
jnp
repnz
pop
adc
jecxz
lock
bound
loop
mov
mov
xlat
jno
into
cmp
mov
aas
loop
jns
xchg
dec
cmpsl
inc
mov
dec
lahf
sub
mov
dec
add
hlt
test
mov
je
sub
popa
enter
and
cmc
aad
lds
and
mov
xorl
sbb
push
out
notb
xor
or
add
fnstcw
fdivrl
add
jb
ds
sbb
pop
dec
rolb
ds
je
outsb
repnz
lock
inc
mov
xchg
repz
sbb
outsl
frstor
mov
test
jno
push
sbb
outsb
push
and
add
xchg
push
add
addr16
add
dec
movsl
cli
inc
in
sub
inc
ret
dec
imul
les
movsb
lcall
pop
or
mov
stos
mov
mulb
jbe
dec
mov
fcmovbe
or
jno
dec
adc
out
inc
in
xor
out
xchg
daa
xor
lret
jns
and
mov
jno
and
daa
fcomps
loopne
arpl
xchg
jbe
iret
stos
cmp
dec
xchg
dec
fdivl
sbb
xchg
mov
scas
mov
mov
lret
xor
pop
cmp
loopne
insb
jb
xchg
mov
push
test
xchg
mov
orl
scas
adc
push
inc
sub
push
mov
je
insb
movsl
sbb
and
pop
sub
bound
sti
inc
lcall
mov
xchg
push
ret
and
test
ljmp
movl
aam
in
cmpsb
cmpsb
imul
adc
jne
nop
dec
out
orb
jecxz
aam
xchg
pop
mov
test
lcall
sub
shrb
mov
test
cmc
lods
out
jle
mov
pop
dec
pop
enter
pop
adc
or
sub
pop
nop
lcall
cmp
mov
cmc
loope
jmp
fisttpll
lahf
adc
ja
pushf
adc
add
clc
clc
push
and
push
dec
inc
inc
int
and
inc
jb
sti
mov
push
push
push
add
sub
jb
stos
pusha
xchg
push
fidivrs
ja
mov
je
mov
lcall
push
inc
dec
pop
xlat
cmp
jp
ja
cmp
push
mov
inc
in
lret
aam
jo
jo
dec
add
out
adc
push
xchg
jb
int3
hlt
scas
roll
negb
jae
inc
mov
adc
mov
mov
test
aas
lcall
sahf
scas
clc
xor
jne
pop
pop
inc
shr
sub
leave
xor
dec
cltd
push
rclb
in
xor
or
inc
mov
and
mov
scas
jecxz
aaa
pop
lods
mov
cmp
pop
mov
sbb
fisttpll
sub
jne
enter
mov
lret
jmp
push
aam
push
in
xchg
rcrb
push
inc
aaa
adc
scas
pop
xchg
mov
pop
xor
jbe
movsb
jp
fistl
das
ret
mov
setbe
and
ja
cli
push
mov
rep
or
mov
sar
pop
mov
push
fs
mov
in
jbe
sbbl
iret
mov
inc
cmpl
es
mov
add
sub
mov
jbe
pop
fst
and
jne
cmp
add
adc
int3
nop
inc
pop
in
cwtl
fs
fcoml
sbb
sti
sub
lret
scas
mov
inc
sar
movsl
cs
mov
lahf
pop
mov
jae
and
mov
or
popf
cmc
ljmp
sbb
pop
pop
fisttpl
idiv
push
or
xor
test
pop
jns
js
lock
sbb
je
and
pop
adc
mov
jl
int
arpl
xor
ja
rcl
shrb
and
dec
xor
cld
or
mov
xchg
xor
xchg
fdivr
pop
cmp
xchg
in
mov
insb
daa
push
pop
sbbb
js
cmp
das
push
ret
imull
jmp
jnp
push
les
mov
aad
ss
arpl
mov
pushf
arpl
movsb
mov
hlt
xor
dec
xor
cmp
push
mov
sbb
stos
sti
lds
and
arpl
test
loop
pop
adc
inc
cli
cs
sub
jle
xlat
mov
repnz
mov
xchg
mov
ja
hlt
pop
xor
std
mov
scas
mov
fistps
xchg
lahf
lret
insl
push
lret
add
push
inc
int
leave
scas
mov
test
lods
or
in
lahf
add
arpl
sub
and
shrl
sti
out
jmp
inc
and
iret
mov
dec
sub
pop
xlat
mov
stos
mov
outsl
inc
add
or
orb
cmpsl
rorl
movsl
rcrl
cmp
sub
lcall
sub
pop
sub
rorb
fistps
pushf
push
mov
jmp
jne
jge
sbb
mov
movsl
sub
jecxz
or
or
cmpsb
rorl
sub
lds
outsl
iret
sahf
push
movsl
dec
xchg
jge
test
add
inc
clc
cmc
out
loop
xchg
sbb
or
shl
cmp
lds
mov
notb
jnp
jge
sbb
dec
inc
jno
mov
pop
pop
jae
mov
lcall
rorb
jmp
outsl
mov
sub
lods
fucomip
pop
nop
cmc
iret
mov
push
insb
jp
pop
xor
add
inc
xchg
jecxz
roll
dec
dec
mov
inc
xchg
and
or
push
xchg
daa
fistps
push
mov
or
rorl
jnp
andl
fisubl
push
out
adc
mov
scas
in
inc
test
divb
xchg
mov
arpl
push
and
bound
mov
fistl
mov
sbb
or
add
ds
lods
jno
jo
inc
sub
dec
and
ds
or
stc
xchg
jle
and
orb
sub
test
pushf
fwait
dec
jmp
mov
add
pop
cltd
xor
xor
lret
lods
loop
stos
rclb
pop
mov
jo
inc
gs
inc
push
ja
mov
in
push
mov
sahf
clc
pushf
dec
outsl
cmpsb
addb
mov
add
add
dec
push
jle
inc
inc
adc
cmpsb
aam
jo
mov
dec
enter
dec
xchg
xor
ss
popa
lea
xchg
js
add
xchg
ja
sub
inc
cmp
outsl
popf
lds
arpl
sarl
pop
cld
popa
lret
rcrb
rorb
call
popa
push
push
xchg
xor
and
jp
or
lahf
test
roll
bound
jns
in
sbb
xor
loope
mov
xchg
enter
jns
je
fbld
cwtl
je
mov
lods
xor
sbb
lods
xchg
cmp
test
mov
cmp
push
xchg
sbb
lcall
fadd
scas
cmp
lea
andb
cld
stos
mov
inc
stos
or
cltd
das
pop
pop
in
xor
shrb
mov
mov
cmp
sub
movsl
mov
inc
stos
es
push
jl
lock
inc
mov
jge
shll
insb
dec
pop
xor
adc
data16
jmp
cmp
test
jl
call
jns
pop
mov
adc
inc
or
pop
mov
dec
nop
inc
adc
out
mov
sub
jno
push
push
push
daa
cmp
notl
mov
fmuls
sbb
inc
out
in
and
mov
daa
sub
out
sub
imul
inc
aad
and
or
push
andb
shrl
mov
jo
or
scas
test
incb
fisubrs
jno
jl
jno
ja
pop
push
shrl
das
xor
pop
movsb
mov
fisubs
xchg
cmp
dec
mov
xor
inc
push
data16
insb
dec
aas
das
sbb
insl
leave
sub
pop
push
jno
call
jmp
lret
push
stos
and
arpl
aaa
jecxz
jbe
mov
pop
cmpsb
dec
nop
idiv
cmpsb
je
mov
scas
sbb
pop
sub
loop
inc
hlt
sahf
aad
mov
jne
stos
lods
aad
push
xchg
andl
dec
dec
addr16
cwtl
mov
sub
pop
jmp
cmp
scas
inc
sub
jbe
pop
and
jne
ret
je
enter
call
fdivl
cmp
dec
sahf
shrl
mulb
sub
scas
insl
icebp
ss
jecxz
push
bound
sub
push
out
fisttpl
fstpl
jno
imul
add
lea
frstpm(287
mov
mov
mov
and
movsl
sbb
jnp
mov
jno
mov
mov
mov
xchg
jns
lods
pop
fists
mov
lock
icebp
xchg
mov
data16
cld
or
and
pop
loop
cmp
pop
mov
fwait
test
sbb
stos
xor
ja
aad
ret
loop
push
outsb
fistpll
je
push
loope
adc
ds
shrl
xorb
out
pop
mov
push
cltd
int3
push
jne
jnp
pop
in
das
sbb
dec
mov
push
pop
adc
mov
inc
inc
bound
js
xor
push
aad
cli
lock
push
add
mov
adc
loope
mov
decl
je
mov
imul
mov
dec
fwait
sub
loopne
jne
sub
jp
cld
clc
adc
push
mull
jmp
xchg
fsubrs
sbb
pop
dec
pop
arpl
insb
push
inc
out
or
push
push
cmp
mov
addr16
daa
aas
mov
imul
inc
dec
or
leave
add
loop
in
dec
mov
js
sti
enter
lock
aad
fnstcw
xor
sub
mov
enter
pop
cmp
leave
mov
adc
lahf
inc
test
test
or
xchg
push
cmp
dec
js
fdivrp
nop
cmp
mov
inc
adc
cmp
pop
push
or
xchg
or
test
adc
inc
jnp
ret
jnp
subl
jno
outsl
out
stos
mov
rorl
jl
in
mov
lea
sub
loope
mov
inc
cwtl
inc
jg
mov
cltd
and
pushf
sub
add
stos
pop
add
cmp
cmpsl
dec
inc
jmp
fadds
scas
sub
inc
imul
rcr
jge
dec
arpl
in
lods
lea
pop
notl
jle
leave
fidivrs
add
int
dec
fistpll
roll
nop
in
sub
pop
mov
mov
ss
sbb
fcomp
fsubl
enter
ror
pop
std
inc
sti
pop
or
mov
cld
rolb
sub
out
jae
jecxz
into
or
push
les
or
pop
fs
and
push
imul
mov
sarb
int
push
fwait
dec
ret
ss
gs
sbb
dec
idiv
cmpsb
lea
xchg
pop
jl
add
mov
cmp
stc
outsl
mov
in
jnp
add
addb
xchg
or
sub
jbe
add
inc
mov
gs
mov
nop
loopne
pop
aad
ds
or
clc
dec
ret
fbstp
xchg
dec
jp
pop
icebp
mov
mov
lds
xlat
outsb
adc
jno
pop
dec
in
daa
insl
mov
pop
cmp
push
lret
scas
xchg
xchg
stos
loop
imull
shll
aam
sti
ja
aam
repz
or
rorl
add
ss
pop
inc
movsl
add
xor
push
out
pop
mov
jo
xor
mov
pop
arpl
jge
lods
imul
sub
movsl
sti
mov
dec
and
pop
xchg
lods
or
stos
sarl
jae
std
shrl
mov
mov
mov
mov
mov
mov
push
outsl
divl
fdivrs
cld
outsl
adc
and
push
cmpsb
jo
in
mov
inc
push
adc
cmpb
or
adc
adc
pop
push
mov
jecxz
aas
rcrl
das
jo
jb
push
outsb
fbld
stos
cmpsl
sbb
fldenv
adc
and
and
or
cli
sbb
ret
jge
loop
push
mov
fcom
pop
add
lcall
sbb
stos
add
fldcw
push
jp
ljmp
pop
or
pop
inc
sbb
jmpw
sbb
scas
f2xm1
push
sub
inc
mov
sbb
sub
jne
jle
das
cmp
out
je
in
mov
pop
mov
fnstcw
mov
sub
pop
push
std
sbb
sarl
jle
repnz
aaa
int3
pop
cmpsl
mul
adc
or
cs
cmp
test
mov
ret
jns
adc
hlt
dec
movsl
sbb
repnz
mov
push
lock
repz
mov
fldenv
and
jne
xor
dec
mov
and
add
cli
xchg
sti
or
data16
or
and
shl
mov
lahf
pop
xchg
dec
xchg
sub
mov
icebp
jno
test
lret
scas
dec
aas
outsl
aam
inc
mov
push
nop
mov
xor
arpl
test
jmp
pop
shlb
jnp
in
pop
loop
pop
add
mov
sbb
loopne
xor
mov
push
pop
mov
insl
dec
test
adc
adc
fcomps
xor
sbb
call
sbb
in
ja
xchg
ret
pop
push
test
xchg
lock
js
pop
arpl
out
test
add
jl
pop
xchg
jge
cmp
mov
pop
dec
add
mov
mov
xchg
call
cmpsb
dec
or
mov
loope
rep
dec
dec
inc
pop
leave
xor
cmp
mov
rol
gs
subl
aam
jae
or
repnz
dec
fdivrl
push
ret
push
iret
mov
push
test
sbb
push
mov
jbe
push
jge
sbb
pop
rclb
and
rcrb
mov
cmp
pop
popf
cmc
jne
jl
test
roll
dec
lods
ret
and
js
mov
daa
jge
mov
lods
sahf
mov
dec
nop
xchg
pop
lret
js
and
and
lret
daa
xchg
mov
cmp
ffreep
xlat
fdivl
dec
aaa
jg
aaa
in
add
movsb
cmp
fidivrl
stos
popf
adc
adc
loope
and
ds
add
mov
aas
and
iret
adc
js
add
or
dec
outsl
es
mov
xor
scas
cmp
or
in
imul
lods
xchg
or
xchg
movsb
inc
loope
out
std
loop
push
cmpsb
add
sbb
in
sub
or
repz
mov
jo
stos
mov
mov
jne
push
nop
andb
sbb
dec
add
mov
or
add
inc
cli
das
and
scas
repz
lock
into
push
pop
push
push
sub
xchg
andl
hlt
cli
dec
fiadds
es
pop
and
adc
and
add
scas
push
cmpsl
sbb
jne
cmp
adc
in
mov
in
mov
cli
sti
xchg
popf
inc
dec
das
pop
xchg
aaa
fstpl
clc
ret
cwtl
call
leave
repz
int3
fimuls
insl
pop
outsl
adc
push
or
dec
or
je
hlt
cs
dec
xchg
test
sahf
clc
fcompl
inc
adc
add
aas
or
push
dec
mov
popa
out
mov
xor
push
cmc
add
imul
and
addr16
scas
sbbl
or
mov
sub
inc
flds
and
outsl
pop
jl
jns
js
insl
pusha
mov
pop
inc
fdivs
mov
and
repnz
add
pushf
addr16
push
pop
imul
ss
or
stc
loop
adc
push
push
pop
mov
push
xchg
jecxz
mov
cld
dec
sub
and
or
dec
arpl
add
dec
dec
dec
fs
sbb
add
mov
arpl
jmp
das
cmpb
shrl
and
adc
and
rcll
scas
sbb
push
lock
jmp
data16
push
cmp
push
dec
pop
subl
pushf
jg
adc
aad
mov
inc
pop
cmp
ljmp
xchg
js
adc
rol
imul
and
mov
mov
pop
xorb
inc
stc
jo
ljmp
ficoml
cli
inc
lret
jo
insb
loop
cmpsb
add
mov
loope
outsb
lea
sbb
fwait
mov
insb
cmpsb
add
imul
mov
push
push
pop
fistpll
adc
pusha
sub
les
enter
orl
imul
inc
mov
jmp
sub
mov
push
mov
adc
sbb
push
enter
jns
adc
adc
cmpsl
mov
pop
mov
sub
popa
out
scas
arpl
repnz
mov
ficompl
sbb
pop
insb
dec
test
pop
cmc
pop
push
fcmove
add
mov
bound
test
add
arpl
sub
pop
mov
add
push
or
push
mov
push
mov
add
cltd
lods
out
arpl
mov
xchg
sahf
inc
data16
lcall
mov
xor
xchg
inc
testb
dec
subb
xchg
shlb
fwait
jg
gs
out
add
xchg
inc
shll
push
aad
mov
mov
imul
jmp
mov
adc
mov
push
fnstcw
in
xchg
xor
jbe
out
divl
cmp
mov
repnz
and
push
and
adc
dec
dec
sbb
dec
jmp
nop
pop
adc
xchg
sbb
mov
dec
xor
scas
shrb
gs
or
jnp
bound
sub
lahf
pop
adc
out
cmp
xor
jbe
mov
push
pusha
cli
mov
sbb
in
orb
repnz
inc
lods
dec
fbstp
dec
pop
cmp
repz
sub
adc
mov
leave
jp
inc
pop
std
xchg
pusha
add
movsb
fwait
int3
in
xchg
push
inc
mov
fdivrs
sub
fs
fistpl
scas
ret
adc
test
repnz
scas
mov
push
dec
cltd
lret
and
jp
push
aam
fstps
in
push
or
shrl
into
out
loope
loopne
cli
adcb
test
mov
les
sbb
dec
inc
repz
xchg
xorl
imul
std
inc
int3
mov
and
inc
pop
pop
data16
mov
int3
xchg
idiv
aaa
cmp
mov
jne
mov
mov
loopne
xchg
xchg
and
leave
sbb
or
test
out
dec
pop
mov
pop
jmp
rclb
mov
adc
jg
xchg
fbld
sub
jp
test
mov
ficompl
dec
sahf
inc
rolb
pop
in
repnz
adc
hlt
ljmp
lods
popf
cmp
scas
stos
dec
inc
mov
in
mov
mov
mov
mov
hlt
jecxz
add
popa
push
aad
sub
adc
frstor
orb
adc
test
in
mov
test
loope
mov
and
mov
xchg
aad
adc
mov
pop
add
int3
xor
iret
ret
dec
mov
sbb
jbe
push
fdivrs
jns
repz
ret
js
sub
cmp
int3
dec
stc
cmp
in
lcall
xchg
hlt
add
xchg
outsb
and
ret
out
bound
mov
adcb
loop
mov
pushf
pusha
add
out
cmp
push
and
loope
push
lcall
jp
add
call
inc
bound
filds
sub
add
ljmp
cmp
adc
inc
les
repz
add
gs
sub
push
aaa
xchg
jo
xchg
inc
popf
mov
sub
lcall
subl
inc
and
lcall
lret
rcr
jle
xchg
lods
push
test
lret
push
dec
ja
xor
loopne
les
stos
lods
or
in
mov
call
sbb
out
jne
xchg
int3
popa
sbb
test
cli
pop
movsl
push
mov
je
dec
sub
xor
std
movsl
xchg
dec
ret
fnstcw
push
fwait
sbb
in
xor
cmp
stos
notb
mov
jo
hlt
push
pop
sub
or
arpl
sub
jne
outsl
xchg
test
xchg
mov
fldl
inc
sbb
in
dec
sub
inc
cmp
mov
push
and
sub
mov
and
aaa
sbb
pop
js
ljmp
push
inc
jns
das
xlat
aaa
data16
pop
movsb
adc
adc
dec
arpl
cs
add
mov
fcmovb
mov
inc
popa
cmp
je
sbb
mov
pop
ficoml
jge
adc
lea
xchg
push
imul
cmp
js
push
inc
in
mov
clc
and
push
push
outsl
sti
or
jnp
stos
xchg
orl
test
dec
inc
daa
test
gs
xchg
mov
jp
in
rcrl
out
sub
xchg
loop
cmp
pop
mov
inc
and
push
arpl
stos
pop
stos
xor
cmpsl
fisttpl
adc
scas
ror
scas
mov
fmuls
pop
dec
test
xchg
pusha
or
cmp
mov
pop
sbb
or
daa
add
in
inc
sbb
out
js
cmp
fdivl
icebp
or
movsb
add
int
repz
imul
loop
dec
push
movsl
xor
mov
push
push
mov
mov
jbe
rcl
fistps
sbb
in
cli
imul
push
mov
in
mov
dec
stc
push
je
and
adc
xchg
fdivl
les
roll
std
fsubrp
sub
lcall
push
pusha
inc
pushf
test
and
pushf
es
icebp
lds
cltd
push
jo
xor
mov
daa
int
loopnew
mov
fwait
or
les
in
rcrl
mov
push
lock
shlb
nop
mov
nop
fsubs
pop
cmp
movsl
push
imul
shlb
leave
scas
mov
mov
xchg
push
push
stc
fisubs
cli
jbe
adc
jecxz
out
pop
or
sbb
out
je
imul
movsb
add
lock
jb
inc
jge
xor
mov
lret
pop
inc
or
adc
cmpsl
xlat
cs
dec
enter
inc
insb
aad
test
fisttps
add
in
sbb
fdivrl
mov
cmp
cmp
dec
mov
test
jae
stos
mov
int
sub
faddp
data16
in
lahf
or
jle
push
aas
pop
mov
pop
lcall
cmpsb
sbb
pop
jb
incl
inc
mov
push
xchg
loop
mov
leave
sub
mov
orb
nop
ret
arpl
or
mov
push
xor
js
add
adcl
pop
mov
push
ljmp
ret
dec
push
pop
aad
lock
sbb
fwait
insb
ja
shlb
sbbb
fstl
mov
xor
push
dec
inc
dec
ja
ljmp
cmp
xlat
mov
in
push
pop
jmp
mov
js
pop
test
fwait
mov
out
out
and
nop
mov
aas
int3
out
mov
xor
fisttpl
cwtl
mov
pop
pop
jge
cli
cmp
lods
pop
xor
stos
xchg
dec
pop
shlb
call
dec
mov
dec
scas
mov
scas
iret
adcl
inc
mov
fisubrl
dec
push
insl
in
ja
fisttps
ds
mov
aam
adc
cmc
inc
sbbl
mov
mov
stos
rcrb
ja
aad
aas
int
mov
push
adc
xchg
xor
mov
fwait
cmpsb
jp
sbb
aaa
fmul
nop
out
xchg
int3
pop
pop
jge
inc
dec
push
push
jmp
aas
popa
fwait
add
jle
data16
mov
cwtl
and
mov
rclb
mov
xorb
sarb
pop
cmpl
dec
dec
int3
mov
push
mov
xchg
cmp
push
and
sub
sbb
inc
mov
xchg
mov
mov
leave
jmp
cmpsb
out
aad
xor
sbb
mov
adcl
aam
testl
cmpsb
xlat
out
leave
nop
fisubl
js
pop
decl
push
pop
jbe
mov
test
dec
test
push
adc
xor
or
push
xor
cmpsb
xchg
scas
xchg
dec
xor
js
mov
ds
dec
jg
sbb
adc
push
aad
in
sub
cli
movsl
inc
mov
pop
sub
xchg
ss
out
test
sub
cmp
bndstx
xchg
sub
arpl
sarb
in
lock
pmullw
mov
inc
mov
dec
and
ljmp
pop
movsb
addr16
sub
pop
loopne
push
dec
aaa
sbb
pop
mov
inc
pop
mov
xor
lea
push
andl
ja
mov
sbbb
ret
outsb
push
mov
in
lcall
cltd
insl
imulb
out
jae
xchg
les
repz
mov
xchg
inc
pop
sub
mov
push
nop
push
cltd
repnz
lods
or
push
push
data16
mov
aad
cmp
push
pop
and
cmp
cmp
sbb
fs
push
in
imul
clc
or
adc
xchg
xchg
lcall
or
and
adc
clc
mov
mov
adc
iret
out
scas
testl
pop
push
inc
outsb
clc
adc
ret
and
arpl
jo
fistpll
mov
xor
jg
sbb
sbb
movsb
push
stos
sbb
ret
std
inc
jle
sysret
jb
xchg
les
cmp
arpl
stos
fbstp
popf
jp
rcrb
mov
jbe
push
or
push
inc
and
shlb
neg
mov
inc
xor
adc
aad
mov
xor
pop
xlat
into
mov
call
jmp
push
je
std
imul
pop
or
push
in
pop
inc
sub
into
lea
jno
cmp
dec
cli
xchg
mov
mov
xchg
sbb
mov
or
data16
mov
inc
mov
bound
cmp
jecxz
ret
mov
sarl
push
mov
or
test
mov
add
mov
out
pusha
mov
sahf
cmp
mov
xchg
pop
lods
lods
inc
and
popa
dec
cmpsb
mov
xchg
inc
cmpsl
lcall
adc
lock
fucomi
push
fwait
or
sub
or
mov
rcrl
dec
push
das
mov
push
ffreep
lods
mov
out
sub
mov
test
aad
or
and
pop
divb
pop
jmp
pusha
lret
cs
nop
stos
std
add
in
pop
popa
dec
jno
rep
lock
mov
xchg
jns
mov
outsb
xor
dec
ret
fimull
jb
sbb
cmp
or
or
je
xchg
dec
subl
or
mov
flds
es
jg
dec
dec
jmp
shlb
xor
sub
pop
lock
addr16
mov
dec
or
and
mov
in
push
inc
mov
mov
outsb
mov
popa
xchg
out
cmpl
dec
popf
iret
pop
jle
pusha
clc
mov
inc
mov
cwtl
jb
mov
push
loopne
mov
xor
sbb
or
scas
rolb
jb
jp
pop
mov
or
and
out
or
out
cmpsb
popf
ds
pop
sbb
add
jge
mov
cmp
cmp
cltd
xchg
mov
stc
pushf
xlat
add
out
popf
js
loop
jp
mov
pushl
daa
iret
mov
rol
mov
addr16
xor
shll
or
push
scas
and
push
rcrb
push
fistpll
leave
mov
pop
dec
xor
jne
jbe
enter
push
inc
test
cmpsl
inc
mov
mov
fldl
insb
add
mov
subb
outsb
in
mov
rorl
sahf
sbb
adc
jmp
loope
aaa
pop
mov
xchg
test
mov
push
in
inc
or
es
xorb
xchg
icebp
ja
jmp
aas
sub
pop
push
sbb
mov
cmpb
xor
xchg
push
sbb
loop
outsb
test
movsb
mov
sub
jl
pop
sub
movsl
jb
mov
out
outsl
js
pop
outsl
xor
iret
push
or
iret
sbb
stos
push
push
mov
and
push
sarb
scas
aam
fnstenv
cmp
push
aas
push
adc
out
jno
jp
sbb
mov
ret
pop
jbe
stos
xlat
sbb
dec
cmp
jae
rorb
popa
adc
insb
mov
lahf
stos
jecxz
lret
bound
mov
andl
dec
sti
sbb
das
outsb
pop
aas
xabort
dec
decl
xor
push
mov
mov
push
leave
push
add
mov
push
sub
aam
jg
cmp
loopne
imul
test
ficomps
adc
adc
lock
mov
dec
adc
push
push
ret
inc
in
ret
lods
push
cli
scas
jp
xchg
jb
push
xor
fisttpl
inc
insb
sbb
jnp
ss
add
inc
fisttpll
cli
pop
mov
cmp
mov
cmp
lds
and
loop
mov
insl
nop
pop
lcall
in
pop
repz
test
or
mov
mov
dec
jbe
lahf
lret
dec
xchg
out
lds
mov
icebp
lea
divl
sbb
mov
dec
jo
fsubrs
sub
dec
repz
pop
test
sahf
sub
pop
adc
filds
xor
dec
dec
faddl
pop
and
sbb
dec
stc
and
orl
mov
cmpsl
loope
add
mov
call
sub
mov
stc
mov
lods
cli
inc
xchg
jno
add
and
pusha
addr16
mov
xor
pop
push
sbb
or
ja
dec
sub
pop
cmp
ficompl
or
sbb
jns
fstpl
dec
jne
iret
cltd
out
push
sub
mov
xchg
mov
mov
add
stc
push
cmp
test
mov
inc
jbe
outsb
inc
arpl
leave
jle
xor
sub
add
mov
cmp
aas
aas
ret
dec
sti
imul
aad
cmp
pusha
xchg
sub
jp
add
lods
pop
lods
cmp
push
ja
mov
cmp
lds
jne
dec
or
repz
loope
and
dec
pop
fwait
pushf
pushl
mov
dec
cmp
mov
fcompl
jmp
xor
mov
dec
or
xchg
subl
and
and
jb
jb
add
adc
aas
into
repnz
and
pop
adcl
fidivrl
mov
adc
inc
out
int
sbb
pop
and
add
shlb
jle
xor
push
add
stos
into
mov
and
imul
cmpsl
xor
pop
sahf
rcrl
adc
jle
xor
sbb
cld
aam
sub
mov
ret
jno
cwtl
sub
jae
mov
inc
push
jns
and
mov
jb
sbb
dec
mov
mov
jno
icebp
mov
icebp
imul
mov
mov
xchg
fcmovnbe
mov
pop
cmp
jecxz
dec
or
push
pop
add
mov
inc
add
ret
cmp
popf
imul
cs
xchg
in
lcall
xlat
es
sub
ja
and
rolb
and
out
rclb
data16
inc
aad
push
mov
stc
mov
xchg
mov
mov
aas
popa
sub
in
lret
or
inc
aam
shrb
add
ja
mov
hlt
inc
sahf
push
fcmovu
pop
loope
mov
inc
xchg
shll
mov
push
lock
inc
arpl
mov
inc
fiaddl
in
popa
in
push
push
fcomip
dec
fdivl
jb
xor
clc
lods
jae
sbb
mov
sbbl
push
and
lea
xchg
push
mov
push
jg
test
mov
ret
add
aas
into
int3
add
iret
push
xchg
sbb
mov
and
mov
mov
pop
cmp
push
inc
and
cmp
push
jp
and
insl
out
scas
push
xlat
jge
add
jb
cmp
inc
mov
sub
mov
pushf
push
xchg
add
sub
mov
scas
mov
fsub
iret
loop
push
jae
in
or
mov
sbb
in
xor
jns
add
shl
add
jge
xchg
stos
in
movsl
xor
dec
movsl
and
xchg
or
pop
xor
cltd
mov
rcl
test
xchg
lods
ret
std
int
adc
lret
jae
sub
lock
fnstsw
addb
pop
in
into
xchg
push
pop
sbb
sub
jp
push
inc
xchg
push
movsb
pop
inc
cmp
inc
add
push
gs
outsb
je
jae
dec
and
sub
push
adc
fmul
adc
cmp
in
mov
mov
sub
dec
ret
movsb
mov
mov
sbb
pop
inc
add
push
xor
push
sahf
lock
fsubp
xchg
das
cmpsl
jge
dec
and
scas
xchg
jbe
xor
cmp
xchg
gs
sub
sbb
mov
arpl
in
mov
in
push
dec
rol
push
xchg
out
jne
lcall
xor
add
xchg
ret
push
fldenv
outsb
sub
mov
fcompl
test
out
pop
sbb
and
ret
fcomi
xchg
jp
sub
xchg
insb
sub
inc
div
dec
jns
xchg
sti
ret
jne
sbb
jle
leave
mov
lods
dec
data16
and
lock
stos
inc
ja
adc
scas
stc
add
loop
nop
dec
dec
fs
outsl
add
xor
sub
js
pusha
sbb
hlt
movsb
or
pop
jp
mov
mov
ljmp
mov
cmp
sub
inc
das
xchg
xor
lds
lock
in
ror
adc
sub
jp
subl
xor
cld
jmp
push
sub
test
das
add
hlt
dec
add
add
popa
xchg
and
mov
inc
test
cmp
jmp
mov
fucomp
loopne
shll
xchg
inc
sbb
dec
js
mov
push
icebp
in
int3
or
pop
xchg
repnz
rclb
sub
xor
sbb
mov
scas
mov
js
dec
inc
push
cltd
xor
data16
add
jle
mov
sbb
mov
addr16
jae
xchg
push
fisttpll
icebp
pop
subb
lods
jb
nop
into
popf
sub
mov
mov
xchg
dec
cmp
icebp
mov
dec
mov
leave
mov
and
out
clc
mov
sbb
pop
mov
mov
shll
mov
push
aaa
push
jmp
fdivl
imul
xlat
push
out
aam
jns
jbe
fcmovnu
aas
push
xor
divl
ret
inc
mov
lea
dec
cmpsl
jp
imulb
push
cmpsb
mov
in
enter
push
mov
aas
xchg
dec
test
test
loope
dec
pop
push
out
jecxz
sti
pop
xchg
pusha
dec
add
mov
sar
je
cmpsb
scas
cmp
sbb
sbb
or
cmp
push
dec
cmp
xchg
mov
arpl
mov
mov
leave
jb
inc
sbb
in
mov
mov
arpl
pop
and
push
ja
fwait
xchg
add
push
scas
addr16
pop
and
test
repz
sahf
jns
testb
add
lret
repz
pop
pop
mov
aad
xchg
jae
loope
jbe
mov
sbb
add
sbb
imul
inc
jp
sub
daa
lock
mov
mov
cmpsb
add
es
pshufw
out
pop
sbb
add
cmc
jae
xchg
pop
adc
into
sub
jno
out
ret
xor
xchg
push
shlb
ss
lret
inc
fnstenv
jmp
pop
mov
in
add
inc
dec
sub
lds
mov
inc
jae
pusha
insl
pop
cmpsb
jmp
jno
sbb
pop
icebp
lahf
imul
repz
add
add
lahf
ss
out
mov
icebp
je
mov
js
loope
data16
sahf
fdivrs
push
add
loopne
jp
pop
sbb
sub
les
push
xchg
sbb
in
sbb
xchg
mov
in
adc
mov
jnp
xor
mov
fwait
out
mov
repz
cmp
and
xchg
pop
jae
sti
add
push
mov
pop
adc
cmp
fstpl
out
and
fistps
cmp
add
xor
add
push
push
mov
ja
add
mov
xchg
push
mov
fstpt
enter
nop
push
leave
pop
pop
mov
pop
sbbl
in
push
push
imul
sub
pop
sub
sub
sub
add
jo
into
cmpsl
cmp
out
adc
cli
test
mov
or
or
test
xor
dec
arpl
mov
mov
mov
outsl
mov
lret
sahf
int
stos
inc
xor
mov
stos
mov
xor
mov
inc
lods
cmp
and
dec
rorl
insl
fimull
sti
popf
push
mov
add
jb
gs
xor
fsts
clc
test
outsb
in
push
pop
push
data16
mul
les
adc
or
xchg
push
je
lds
push
stc
pop
push
push
sbb
xor
jbe
mov
adc
lret
or
or
and
xor
sub
fistpll
inc
movsb
add
pusha
pusha
mov
xor
push
mov
ss
mov
sbb
test
stc
cld
sub
inc
cmp
in
inc
xchg
pop
inc
mov
in
sub
push
in
mull
jbe
jecxz
lods
mov
jl
jno
xchg
lods
stc
das
or
or
daa
scas
jnp
dec
idiv
testl
in
lcall
cltd
push
pushl
xchg
adc
cld
sbb
aam
repnz
lea
into
imul
lods
nop
sti
insb
lret
adc
pop
stos
push
int3
inc
rcll
sub
pop
es
pop
out
ret
rcll
fisubrs
icebp
ss
add
cmpsl
or
cltd
jp
sub
jb
test
lret
or
cltd
and
int
cmp
push
pop
mov
inc
inc
in
ret
rorb
sbb
stos
lret
fistpll
jae
mov
pop
cld
test
push
lret
pop
loop
mov
xor
cld
in
fsubrl
push
adc
loop
sbb
flds
ret
jge
cmp
xlat
push
and
sub
out
inc
in
iret
push
std
cmpsl
out
jae
or
push
sub
shll
xor
out
mov
xor
test
push
jns
test
sbb
mov
dec
mov
fnsave
in
ficompl
popa
or
push
out
fmul
jg
sub
jno
enter
sahf
sahf
lret
push
sti
adc
data16
pop
sbb
adc
pop
sbb
push
sub
leave
movsb
and
frstpm(287
sbb
daa
mov
pop
lcall
mov
iret
push
add
insl
pop
mov
pushf
repnz
and
push
movsb
sti
cli
jae
and
andl
xor
mov
sub
aas
iret
pop
add
negb
scas
std
pusha
inc
cmp
aad
imul
cs
lea
sti
sbb
fwait
adc
test
jbe
sub
repnz
je
jge
or
sti
aad
nop
mov
jecxz
hlt
jnp
ret
loope
les
movsl
in
lock
xor
mov
jne
cld
loope
mov
lret
xchg
sub
pop
pop
shll
int3
sbb
push
ds
adc
add
insl
jmp
sub
xchg
push
xor
repnz
push
cltd
or
push
shll
adc
loope
mov
sbb
in
push
mov
pop
push
aam
fmuls
mov
mov
lcall
fs
sbb
imul
inc
add
adc
add
add
adc
sub
cmpsb
lods
pop
lret
lret
into
pop
cmc
and
jns
jae
mov
dec
sub
ret
adc
pusha
aas
hlt
sahf
or
aas
mov
or
jne
or
cmc
mull
cld
aad
inc
push
xor
in
cwtl
xor
scas
les
xchg
mov
outsb
inc
mov
movsb
shrl
rcll
push
xchg
or
imul
outsb
js
test
iret
adcb
push
xchg
push
aaa
int
xorl
sub
cmp
je
cmpxchg
pushf
test
outsl
test
in
int3
or
push
arpl
mov
push
js
xor
sbb
push
sti
outsl
jno
add
inc
inc
and
int
pop
test
inc
mov
xchg
popa
jg
jge
sub
imul
lahf
fs
pop
and
add
cld
das
test
jb
lods
lret
push
pop
out
jb
pop
sub
mov
out
cmpsl
loop
jo
cwtl
jb
mov
add
mov
xlat
aam
jo,pt
xchg
jo
push
enter
xchg
imul
cmpsb
popa
out
jbe
and
push
jle
addl
xor
mov
cmp
mov
jns
cmp
or
loop
sbb
push
popa
pushf
pop
movsb
dec
test
mov
push
xor
jo
xor
ret
ja
xchg
xchg
lods
dec
repnz
int
sub
push
add
arpl
adc
scas
scas
adc
popa
push
fstps
sub
xchg
sbbl
out
mov
inc
je
xor
mov
stos
pop
cmpsl
sbb
loope
mov
into
mov
dec
and
into
push
cmp
xchg
jno
cmp
insb
mov
adc
or
xor
icebp
sub
add
shrl
mov
inc
mov
jno
adc
xlat
fucom
out
inc
int3
sbb
cmp
xchg
cmp
mov
xor
lds
push
in
repnz
mov
xchg
push
arpl
dec
push
dec
adc
push
shlb
in
inc
or
and
jb
push
or
adc
mov
push
data16
xchg
shlb
in
fildll
mov
imul
cmp
xor
mov
test
out
fisttpll
or
xor
add
xchg
add
adc
xchg
orb
sub
daa
int3
jbe
fmul
sbb
cmp
je
fdivrl
ret
mov
shl
mov
adc
sub
sub
inc
jae
cld
xor
push
sbb
mov
sub
outsb
sbb
mov
clc
movsb
loop
sbb
icebp
aam
xor
inc
mov
aam
jmp
addr16
leave
int3
insl
push
mov
push
cmpsb
mov
and
inc
push
lods
mov
filds
sbb
push
push
div
ss
lods
rolb
sbb
sbb
hlt
cmp
jno
adc
out
jbe
nop
push
inc
dec
mov
mov
in
lods
fisttps
push
jle
inc
test
repnz
cmp
in
scas
stos
or
aam
test
sub
int
push
and
jmp
pop
faddp
sub
pop
outsl
clc
jecxz
stc
shll
hlt
mov
sub
leave
fcmovnu
sbb
popa
xor
cmp
dec
mov
in
ret
pop
cmp
jle
mov
mov
push
aas
das
std
jns
inc
xor
mov
adc
adc
cmpb
mov
fcmovne
inc
push
popa
cmp
cmp
pop
xor
push
cmp
push
imul
js
pop
jbe
cwtl
cmpb
mov
push
dec
iret
in
lcall
sub
bound
ret
mov
pop
pushf
nop
data16
movsb
push
popa
scas
outsl
jne
dec
pop
add
inc
cmp
cmp
mov
xchg
movsb
dec
push
inc
outsb
cli
jae
rcll
cwtl
push
fs
aad
xorl
mov
js
jnp
inc
mov
xchg
nop
pop
mov
inc
xor
sbb
mov
sub
cmp
mov
mov
pop
fisttpl
sbb
add
or
pop
repz
pop
mov
negl
movsb
ljmp
xchg
repz
and
out
xor
rcrb
sbb
sbb
and
mov
lock
jnp
lock
lds
loope
cs
xchg
xlat
sbb
push
sahf
mov
cmpsb
aam
adc
pusha
mov
push
sti
inc
test
jge
pop
jg
frstor
rol
jg
cmp
lret
cmp
repnz
push
push
clc
mov
fs
pushf
stos
cmp
xlat
push
fstl
xchg
mov
les
fcomps
and
mov
test
lret
int
xor
sub
or
movsl
dec
mov
stos
sti
arpl
mov
es
lahf
mov
sbb
repnz
vmread
inc
push
dec
sti
in
ficoml
divb
sub
add
dec
arpl
sub
icebp
xor
mov
pop
inc
add
mov
cmp
les
iret
fwait
add
or
xchg
cmpsb
mov
shll
fwait
pop
pop
pop
and
push
mull
mov
stos
pushl
out
xor
mov
lahf
cs
repnz
add
loopne,pn
ljmp
daa
push
repz
mov
add
insb
inc
out
mov
cli
mov
inc
insl
cld
mov
sbb
test
pop
dec
stos
xchg
sub
rol
mov
adc
jne
xchg
sub
mulb
mov
sbb
pop
das
mov
adc
xor
xor
test
shll
pop
add
iret
or
cli
loopne
mov
push
xchg
lahf
rol
or
jecxz
mov
dec
out
into
dec
stos
or
pop
in
rcr
addr16
adc
inc
or
jp
cwtd
inc
adc
mov
xchg
loope
rcll
cmp
sbb
jns
and
ret
idivb
add
inc
xor
outsl
and
lods
imul
adc
pop
into
and
push
add
test
dec
jb
jecxz
jbe
es
jnp
push
push
fstl
push
jge
repz
mov
fucomip
jb
lahf
push
add
mov
cld
ficompl
rcrb
inc
pusha
pusha
inc
push
jne
lea
ja
cmpl
inc
adc
pop
inc
adc
push
cmpsl
insb
inc
jne
pop
jmp
mov
addb
mov
inc
and
push
mov
daa
lods
xor
arpl
add
sbb
scas
imul
cmp
push
xchg
lret
mov
mov
jp
xchg
mov
lcall
or
xor
xor
ja
fwait
add
and
jns
mov
jne
sbb
mov
cmpsb
inc
mov
imul
dec
xor
adcl
bound
fnstsw
std
cmp
inc
enter
loope
out
xchg
leave
mov
fcompl
cmp
adcl
ret
ret
sub
push
push
push
cld
fnstenv
push
fucomi
ret
cmpsl
xchg
lret
aam
dec
dec
add
mov
xor
or
add
inc
in
jno
and
leave
lret
sub
sub
test
cmp
popa
sub
mov
into
jno
mov
in
jns
jle
pop
and
fimuls
scas
mov
fnstcw
push
pop
outsl
fwait
xor
idivl
mov
test
mov
and
sbb
sub
cmp
loop
xchg
sbbl
and
or
and
popa
aad
pop
dec
fwait
xor
xchg
mov
aad
sub
js
rcll
lea
lea
inc
push
xchg
ror
enter
in
es
cmp
stos
sbb
inc
inc
push
and
stos
push
add
mov
in
mov
popa
push
loop
divb
mov
mov
add
sub
lods
cltd
push
mov
sti
repz
mov
call
adc
sahf
test
aad
das
sbbb
adcb
fdivrl
mov
cs
gs
out
mov
lods
mov
sub
push
mov
xchg
push
and
rolb
add
sbb
repz
or
dec
inc
movsb
hlt
mov
leave
lahf
sti
cmp
daa
jnp
cli
hlt
sub
loop
sarb
pop
dec
jno
push
sbb
jle
push
inc
bound
movsb
pop
push
sbb
cmpb
rolb
jno
inc
xchg
inc
mov
jg
lods
mov
xchg
jl
cmp
inc
inc
jl
xor
repz
mov
push
mov
sbb
outsb
mov
pop
leave
int
xor
inc
inc
mov
sbb
ret
out
imul
push
aas
lret
aam
add
jns
vpbroadcastb
lret
mov
rclb
pushl
aad
or
cmpl
mov
lock
xchg
xchg
test
enter
add
adc
jb
push
mov
dec
xchg
into
icebp
cmpsl
and
fs
out
inc
mov
das
inc
push
mov
fiadds
ljmp
lret
sub
pop
and
scas
shlb
and
testb
xor
mov
cmp
insl
inc
xchg
or
jno
fnstsw
fs
jmp
or
push
xchg
pop
addr16
mov
push
vmovdqa
cmp
xor
je
dec
fs
and
je
push
andl
inc
mov
xchg
xor
inc
pop
out
popf
call
push
cmc
xor
sbb
ja
lods
cltd
jno
dec
addr16
leave
cwtl
jb
hlt
lds
loope
xor
cmpsb
jge,pt
inc
pand
dec
pop
fcmovnu
push
test
add
xchg
into
sub
imul
push
xchg
xor
pushf
test
xchg
repnz
das
scas
or
mov
cmpsb
mov
in
push
fisttpll
movsb
mov
push
xor
vunpckhps
int
ja
leave
aam
and
mov
and
popf
jnp
cmp
jge
xchg
push
xor
xorb
xor
inc
fisubrl
out
pop
push
push
push
cmpsb
xor
push
sub
imull
adc
adc
mov
in
push
test
pushf
mov
lock
fs
push
or
pop
call
push
outsb
adcb
sbb
aaa
fadd
mov
outsb
je
loop
sbb
jo
xchg
push
push
push
adc
pop
push
fildl
sbb
xchg
repnz
inc
cs
push
dec
daa
sbb
aas
data16
dec
mov
push
dec
iret
cmc
adc
enter
mov
add
mov
mov
adc
xor
inc
adc
add
pop
push
aam
sbb
mov
xor
pop
test
xor
mov
sub
jge
sub
pop
in
out
lahf
fimuls
push
push
rclb
inc
lahf
jnp
aaa
iret
and
rcll
leave
ret
xor
lea
and
mov
lds
out
xchg
mov
lret
mov
push
enter
leave
or
mov
fidivrl
pop
decb
and
dec
ss
mov
sbb
lret
movsl
insl
lcall
xchg
out
add
repnz
or
sub
add
repz
lock
jge
es
dec
xchg
inc
ficompl
enter
mov
je,pn
fsubs
pop
lcall
pop
cmp
sbb
sbb
adc
jne
sbb
int3
mov
inc
xchg
enter
sbb
dec
inc
mov
pop
sub
xor
adc
into
std
xchg
mov
and
mov
and
sbb
sub
inc
dec
pop
push
pop
ret
or
cld
adc
das
aam
test
ret
lods
or
cld
testb
daa
bound
jl
dec
sbb
in
in
rcrb
outsl
jb
pushl
cmp
lods
aad
and
or
push
and
not
adc
imul
sbb
mov
std
scas
mov
rcl
es
in
mov
or
adc
stos
in
and
jno
dec
out
inc
lret
js
xchg
xchg
rcrb
imul
cmpsb
jmp
mov
enter
pop
sbb
push
xlat
xchg
or
lea
fiaddl
repz
shrb
mov
loop
shr
not
push
mov
sub
jle
push
dec
push
inc
add
or
es
inc
in
cmc
cld
ficompl
arpl
mov
jns
icebp
and
mov
outsb
sub
xlat
sbb
mov
fcmovu
repz
sub
lea
mov
ljmp
mov
call
gs
inc
mov
shlb
int
out
mov
lock
imul
icebp
lea
mov
dec
fs
push
hlt
aas
enter
les
jp
jae
test
push
addr16
mov
xchg
sub
mov
mov
hlt
fstps
and
lahf
mov
pop
fwait
inc
in
pop
jb
jecxz
sti
pop
cmp
pop
fbld
jg
scas
pop
mov
dec
cmp
xor
inc
sbb
js
inc
mov
jg
pop
lahf
mov
fidivrs
daa
xchg
cmpsl
push
faddl
mov
jecxz
mov
stos
aad
leave
ret
test
lds
adc
test
dec
pop
loop
add
imul
adc
push
xchg
hlt
and
dec
imul
aaa
pop
insb
call
push
push
jo
iret
and
mov
lea
fs
mov
fsubl
aam
cmp
xchg
pop
push
sbb
xchg
mov
inc
cmp
lock
jns
out
push
lods
xchg
movsl
imul
xor
jb
pop
mov
pop
fcomp
add
repz
jnp
mov
jle
add
push
jge
push
cld
cmp
sbbl
dec
repnz
cmpb
add
push
mov
xchg
jb
inc
test
mov
insl
mov
mov
ljmp
test
mov
adc
sbbl
cs
xchg
call
int3
int3
es
mov
pusha
xchg
jp
test
clc
sub
mov
imul
xor
shll
cwtl
xchg
ret
testl
push
or
push
repnz
jns
dec
add
dec
les
push
in
ss
je
xor
ds
cmp
mov
shll
fmuls
int
movb
aad
mov
shlb
in
mov
lock
gs
ret
mov
sbb
pop
js
dec
iret
dec
ljmp
fmuls
mov
mov
stc
inc
in
dec
inc
orl
mov
or
pusha
data16
pushf
push
movsl
movsb
loopne
and
dec
in
mov
jecxz
mov
jl
scas
jno
mov
mov
in
pop
ficomps
gs
sti
jmp
push
in
cmpsb
sbb
std
and
movsl
push
mov
push
mov
fs
cmp
pop
jmp
mov
mov
arpl
inc
rorl
je
ficoms
cmp
mov
push
stc
fsubrp
loope
pushf
pop
aad
rorl
ja
orb
cmp
dec
pop
icebp
mov
hlt
add
push
test
jae
pusha
cmp
incb
movsl
pop
mov
mov
imul
add
pusha
in
js
push
roll
iret
sub
fs
cld
popf
into
push
jno
mov
loope
pop
mov
loop
addr16
je
add
mov
or
sbb
leave
sbb
pop
jae
les
xor
lods
pop
fcomip
mov
xor
or
in
in
repz
neg
push
sub
xchg
fiadds
jne
out
dec
sbb
lcall
mov
lcall
jle
mov
mov
sub
push
sbb
adc
sbb
fdivs
clc
in
or
pop
in
mov
xchg
cld
mov
enter
scas
mov
mov
jge
cmpsb
sub
mov
mov
mov
shlb
xorb
pop
jecxz
rcrb
cs
lods
aaa
test
test
orb
loop
jmp
hlt
jle
jge
mov
mov
outsl
adc
fidivs
mov
xchg
and
out
out
adc
inc
and
sbb
out
incl
and
mov
push
mov
les
lahf
sub
xchg
xlat
jbe
in
andb
repz
pushf
int
mov
fiaddl
xchg
stos
and
loopne
cmp
and
addr16
inc
xor
popa
mov
out
dec
jl
icebp
inc
call
mov
mov
adc
cld
aaa
test
andb
lock
sbb
orl
or
fidivrl
adc
test
movsb
inc
jecxz
pop
push
push
and
push
pop
mov
cmc
add
mov
and
lret
outsb
ja
push
cmpsb
sbb
pusha
and
mov
and
dec
imul
xor
jo
call
fsubrl
popw
aad
push
xor
lcall
jns
lds
mov
out
test
aaa
push
lock
clc
jl
loop
cmc
cmp
and
das
pusha
es
shll
std
pop
dec
push
scas
push
sbb
push
sbb
jne
add
ds
in
aaa
mov
das
aam
cmp
mov
cltd
pop
add
addb
sub
push
mov
es
lea
push
movsb
xchg
sub
xchg
popa
adc
test
ficompl
fisttpl
dec
movb
lods
xor
mov
xchg
xchg
data16
stc
mov
jb
add
rcrl
push
test
aas
mov
cmpsb
repz
test
push
mov
dec
ret
fists
das
mov
mov
inc
fcmovb
aad
mov
enter
fwait
jo
push
pusha
pop
xchg
push
jnp
cld
xorb
sub
push
and
aam
sbb
cli
add
sub
mov
rclb
bnd
in
mov
and
add
lahf
fidivl
push
hlt
jle
lods
add
clc
xlat
jns
pop
std
std
je
cmp
mov
in
roll
ret
js
call
jb
cmp
xor
pop
jl
push
push
out
dec
jne
insb
sub
mov
popa
push
ror
fstp
int3
mov
decl
add
loope
or
jmp
fcmovbe
xor
jle
fsubs
fdivrs
outsl
cmpsl
jle
push
inc
jbe
lea
std
push
mov
out
push
loope
inc
jb
loope
push
daa
push
lock
loop
jmp
add
mov
inc
sub
add
frstor
adc
jno
lret
mov
fs
ret
sub
push
stos
jg
aaa
lea
adcl
loop
jl
push
punpcklbw
sbb
push
lods
lahf
fdivrl
les
inc
adc
or
push
or
mov
sub
decl
test
sbb
ljmp
jge
adc
jecxz
dec
mov
add
pop
insl
xchg
mov
mov
sbb
ljmp
add
cmp
repz
or
and
push
pop
inc
adc
adc
push
pop
mov
mov
negb
jmp
lret
sbb
xchg
cmc
fldt
dec
cmpl
ja
iret
inc
movsb
jmp
lods
sub
sahf
jne
mov
mov
and
movsb
call
gs
jmp
xor
inc
sbbl
testb
incl
push
push
jmp
or
sbb
mov
pop
fcompl
inc
cli
dec
lcall
outsl
sbb
call
cmc
mov
mov
xchg
mov
icebp
sbb
fiadds
dec
dec
mov
movsb
jge
pop
jp
test
shl
mov
shl
subb
pop
push
into
dec
pop
mov
or
jbe
movsl
imul
sbb
jle
pop
pop
pop
xchg
mov
add
in
or
xchg
ficoms
push
jmp
sub
mov
sub
jge
ja
xor
cmpsb
daa
xorl
test
inc
dec
pop
ret
jo
cmp
push
cwtl
movsb
push
shll
pop
mov
loop
jbe
fwait
inc
icebp
push
jge
fistl
push
adc
push
xchg
bound
push
dec
sub
call
ret
cli
fwait
xchg
inc
int
repz
cmp
mov
jne
mov
pop
adc
ret
jnp
data16
mov
mov
popf
jle
mov
aad
cli
xchg
mov
mov
iret
or
adc
addr16
sti
sub
leave
xbegin
out
lods
les
fdivrl
sbbb
inc
outsb
andb
lret
lcall
pushf
sub
std
icebp
sti
jo
cmp
sub
js
jne
shlb
mov
loopne
rorl
hlt
test
mov
iret
faddp
cmp
xchg
ret
in
jae
jle
nop
loop
xchg
add
imul
fisubrs
testl
mov
push
scas
in
and
scas
into
jnp
enter
mov
xor
loopne
sub
in
in
mov
cmp
xor
imul
repnz
inc
int
cmp
imul
sbb
add
andb
call
mov
sti
imulb
adc
sbb
or
pop
aaa
pop
and
pop
add
fs
cld
gs
stc
pusha
out
xor
cmpsb
in
mov
and
mov
nop
sar
movsb
sbb
loope
push
xchg
inc
aas
frstor
fwait
jno
xor
shll
mov
cmp
fdivrs
and
and
rcrl
and
popf
shrl
stc
idivb
lds
gs
fbld
or
enter
ljmp
fists
pop
sarb
xchg
pop
mov
xchg
mov
stc
mov
stc
inc
test
sub
mov
push
call
jmp
push
in
lock
sub
int3
add
pop
push
push
adc
sbb
sbb
data16
cmc
or
dec
jmp
mov
pop
xchg
repz
mov
mov
dec
mov
les
mov
aas
sbb
rclb
inc
mov
lods
mov
mov
in
out
into
sub
adc
sti
fwait
xlat
cmp
push
add
andb
mov
or
inc
push
jle
leave
lock
cwtl
jne
xchg
loope
mov
cmp
add
lods
rol
or
push
filds
mov
dec
shlb
mov
sbb
movsb
sub
pop
jl
mov
mov
ja
mov
clc
push
outsl
fwait
rclb
test
rclb
shll
fadds
cmpsl
xor
dec
xchg
and
dec
or
imul
jmp
fs
lret
outsb
stos
stos
cmpsl
xchg
xorl
mov
addb
fsubrs
xor
add
push
in
jecxz
subl
in
push
mov
and
push
in
mov
sub
and
test
idivl
cwtl
rclb
pusha
and
loop
pop
sbb
cli
adc
and
xor
add
cmp
das
fsubl
xchg
cld
mov
in
pushf
cmp
xor
dec
jg
xor
xchg
out
jmp
outsb
inc
fnsave
jno
fwait
shl
data16
in
lret
add
call
jle
jl
lea
movsb
fwait
inc
sti
bound
imul
mov
out
jp
imul
or
sbb
cmp
mov
mov
push
add
lahf
sbb
push
loopne
mov
jns
pop
pop
adc
inc
fistpl
or
mov
mov
mov
dec
mov
add
add
cmpsl
subl
mov
daa
fbstp
mov
sbb
add
pop
les
and
stc
and
daa
fistpll
shrl
fwait
xchg
add
out
in
in
stos
or
addl
lret
adc
pop
test
mov
out
or
jge
imul
xor
sub
xchg
mov
and
or
insl
dec
les
scas
repz
int3
data16
xchg
or
pop
fs
push
mov
test
sbb
add
shl
sub
pushf
adcb
mov
and
call
lods
jnp
cld
outsl
add
sub
or
es
sarb
lds
gs
rol
cmc
and
sub
sbb
subb
cwtl
outsb
dec
fisubrs
fs
jmp
js
and
pop
pop
inc
test
sarl
mov
lea
imul
iret
sub
inc
xor
lods
lahf
pop
jmp
push
or
in
push
jge
cmp
mov
arpl
sbb
and
add
movsl
jns
push
mov
outsl
pop
xor
push
dec
lcall
xchg
sub
pop
and
cmpsl
sbb
xor
mov
push
inc
xchg
dec
lds
inc
mov
lcall
push
mov
loope
mov
xchg
push
xchg
adc
add
cmpsl
and
ljmp
fs
push
in
or
jecxz
mov
fiaddl
call
pushf
lret
lret
or
cwtl
les
sbb
pop
push
es
xchg
pop
cltd
push
js
fdivrl
jmp
aam
int3
mov
shll
lcall
cwtl
sbb
test
cli
out
movsb
ds
scas
int
imul
xchg
mov
adc
test
popa
xchg
dec
cs
cmp
fs
push
fwait
shrb
mov
jne
fs
push
sahf
scas
dec
cmp
ljmp
mov
mov
mov
dec
cmp
jne
fiaddl
add
pushf
jbe
scas
jae
jle
push
or
cmc
ret
pusha
repz
mov
bound
inc
xchg
or
ret
pusha
int
jg
sub
lret
jbe
in
xor
inc
push
xor
icebp
loope
es
push
loop
lret
loop
jbe
jecxz
pushf
stos
clc
stos
std
ja
dec
sti
mov
arpl
adc
xchg
shrl
lock
ficoml
je
loopne
or
xchg
xchg
xchg
hlt
test
sub
icebp
inc
test
cmp
cli
sbb
inc
div
dec
xchg
sub
outsb
sbbl
add
push
aas
inc
shl
ss
inc
inc
sbb
jne
and
dec
xor
cs
jecxz
cmc
cmp
jg
das
test
inc
cmp
mov
fisubl
js
add
pop
pop
out
int3
pop
sbbb
mov
stos
js
and
sar
test
push
out
pop
lret
fwait
hlt
lcall
push
adc
add
xchg
scas
fcmovu
cld
cwtl
popf
xchg
mov
push
inc
mov
data16
lods
clc
hlt
jns
add
adcl
js,pn
sub
incl
jne
and
test
mov
ljmp
xchg
rolb
mov
mov
jp
sub
pop
stos
roll
je
loop
or
xor
out
push
sub
nop
int3
mov
mov
ret
or
cmpsl
cmp
pop
popf
xchg
mov
or
xlat
xchg
sub
mov
daa
imul
and
or
shl
gs
add
pop
movsb
je
xor
jmp
fiadds
cs
mov
aaa
mov
iret
stos
fcomps
loope
insl
movsl
mov
push
cmp
pop
das
sub
push
push
sub
mov
andb
sub
jb
and
pop
jbe
dec
stc
sub
ss
mov
mov
jo
mov
jnp
rclb
push
pusha
xor
xchg
imul
add
pop
inc
xchg
fldcw
inc
xchg
cmp
ljmp
xchg
jp
cltd
sub
outsl
sub
dec
or
push
adc
pop
shr
lret
add
adc
mov
or
mov
pop
aad
test
xor
in
push
fbstp
sub
push
test
pop
sbb
addr16
mov
popl
jo
les
pop
sbbb
lea
or
inc
xor
rcrb
lret
inc
test
imul
repz
stos
push
adc
shl
jne
test
xor
adc
rcl
mov
xchg
sub
mov
pushf
enter
mov
fistl
dec
les
rorl
adc
mov
fs
xor
mov
icebp
xor
in
mov
or
lret
xchg
cmp
cmpsb
mov
jecxz
in
add
sub
xlat
inc
mov
or
dec
push
rclb
jecxz
stos
or
xor
xor
jg
add
lcall
lods
cmp
call
ret
outsb
jnp
xor
jnp
lods
stos
or
xor
jp
mov
xchg
jle
mov
movsl
and
andb
lcall
stos
or
adc
cmp
jecxz
mov
cmp
inc
push
jae
add
xor
out
test
xchg
add
push
dec
sarb
pushf
mov
mov
mov
lahf
push
pop
into
mov
mov
subb
xlat
and
in
mov
cmpsb
inc
pop
out
fsubr
cmp
xchg
lds
adc
mov
shl
loopne
stc
imul
out
call
pop
ds
cwtl
mov
out
pop
pop
fucom
cld
shll
subl
mov
sbb
push
and
dec
test
fisubrl
xor
lods
mov
pusha
jae
jmp
mov
fnsave
cli
daa
jne
cmp
push
mov
incb
and
mov
loope
cmp
aas
sbb
bound
inc
scas
push
jge
enter
dec
iret
pop
jo
sbb
sahf
mov
mov
mov
clc
mov
mov
imul
sub
or
adc
adc
xchg
inc
jle
lret
mov
xlat
xchg
inc
jbe
adc
cmc
adc
pop
xchg
mov
call
inc
outsb
out
fst
or
mov
test
in
jg
divl
lods
hlt
xchg
inc
cmp
pushl
sbb
fidivrs
andl
mov
js
lds
xchg
xor
add
popa
aas
push
ret
test
mov
movsb
or
cmc
cmp
loop
mov
out
cmp
sub
xchg
or
sbb
jbe
jp
and
lds
push
mov
test
jo
inc
sub
mov
sub
or
jo
insl
inc
out
sti
out
cmp
mov
mov
jle
sbb
dec
jl
ljmp
aas
sub
mov
test
ret
mov
movsb
jecxz
pop
dec
add
rcrb
add
in
rorl
adc
cmp
sub
or
sarl
or
cwtl
loope
jnp
stos
push
das
pushf
or
test
push
mov
in
pop
scas
data16
push
mov
insb
cmp
sub
movsb
sub
outsl
cs
aam
jg
aad
xor
and
sbb
es
inc
loop
icebp
add
sbb
mov
xchg
inc
cmovne
xor
aam
pop
cmpsl
inc
sbb
dec
sbb
out
mov
sub
imul
addr16
push
adc
mov
mov
pop
adc
sub
inc
inc
jl
mov
mov
or
mov
in
jp
dec
insl
dec
rcrb
mov
mov
fimull
clc
cmp
pop
jecxz
js
dec
stos
enter
rcrl
test
stc
inc
push
jecxz
mov
mov
ftst
fs
mov
jl
cmp
es
pop
pop
push
pop
xor
sub
push
mov
mov
push
push
xlat
push
int
jl
daa
shl
mov
xchg
pop
push
push
nop
notl
fisubrl
mov
jl
inc
ja
icebp
push
cmpsl
pop
xchg
xor
push
out
and
adc
push
cmpsl
out
jle
inc
xor
cmp
mov
sbb
icebp
test
dec
popa
push
sub
xor
mov
loop
cwtl
stos
clc
cltd
insl
das
mov
call
es
cmp
lds
add
or
push
les
je
adc
lcall
mov
stc
out
xchg
mov
inc
push
or
mov
mov
cwtl
adc
and
jns
les
rolb
jae
mov
loope
jecxz
jbe
test
scas
mov
or
push
imul
cmp
or
pop
push
inc
adc
xchg
popf
cltd
mov
dec
les
unpckhps
int
shll
lahf
scas
arpl
lret
pop
shll
inc
jecxz
pop
pushf
fs
lret
lret
xchg
cmp
and
mov
mov
or
sub
sbb
jns
add
rcrl
jmp
adc
sbb
test
sub
xchg
int3
add
inc
dec
call
jbe
mov
call
in
fs
pusha
cmp
ret
scas
mov
mov
call
out
cmpsl
add
jae
push
jo
lods
inc
mov
push
mov
popf
stos
sub
pushf
push
xchg
jp
inc
adc
ljmp
and
enter
insl
es
xor
xchg
out
and
pop
and
push
je
jle
bound
cmp
fsubs
xor
repnz
push
pushf
dec
lods
dec
popf
cmp
push
mov
pop
mov
loope
xchg
outsb
filds
sbb
movsb
xchg
out
mov
sub
sbb
xchg
hlt
mov
inc
and
and
fdivl
inc
mov
cmc
lahf
push
adc
call
xlat
mov
jo
loop
dec
je
push
mov
mov
sarb
stos
jge
push
js
xchg
mov
sti
pusha
mov
mov
cli
decl
jecxz
cltd
mov
xchg
lds
fwait
cld
cmpsl
xlat
mov
sbb
movsb
fistpll
push
mov
nop
jbe
dec
push
jb
xchg
cmp
xchg
aam
jg
movsb
pop
push
pop
out
lods
mov
insl
xchg
lods
mov
add
aaa
and
and
fwait
test
es
mov
cmc
lods
lock
fdivl
cs
dec
mov
inc
popf
shl
stc
pop
enter
cs
xor
dec
sbbl
std
adc
mov
xor
inc
shrl
and
leave
jecxz
ret
decb
mov
sarb
cli
xchg
jnp
mov
push
sub
lahf
jl
mov
je
mov
sbb
mov
loopne
adc
pop
ljmp
pop
xchg
in
xchg
add
push
fisubrs
rolb
xchg
lret
aaa
fdivs
into
cmp
aas
lcall
jg
scas
test
fstp
cmpsb
mov
or
fdivs
call
rolb
mov
loop
add
mov
pop
sbb
inc
bound
ret
imul
es
dec
leave
test
sbb
outsl
jp
and
sbb
pop
mov
jne
cmpsb
nop
test
xchg
push
fdivrs
int3
lret
int3
cmp
pop
sbb
stos
sub
lock
mov
notb
ja
scas
mov
das
fs
cmp
mov
xchg
mov
jg
mov
dec
push
or
mov
clc
daa
stc
imul
in
out
pop
popa
les
lock
xchg
cmp
mov
aad
pushl
xchg
in
mov
dec
call
mov
add
add
mov
or
jo
pop
cmp
xor
or
adc
dec
js
or
push
sbb
fldt
adc
inc
lods
pop
cmpsb
cld
fwait
aaa
lods
push
jne
add
jp
pop
imul
fnstsw
leave
dec
dec
rol
aam
pop
sbb
mov
decl
sbb
ds
jle
pop
mov
sbb
dec
leave
push
fisubrs
les
adc
sbb
ret
jnp
lods
mov
popa
pop
xor
mov
pop
int
sub
mov
adc
adc
iret
adc
stos
scas
addr16
xchg
imul
sub
pop
or
lods
xlat
xor
cmc
xor
mov
ficoml
sbb
ljmp
ja
into
xchg
mov
adc
fdivrs
mov
push
add
pop
outsl
mov
imul
fwait
mov
out
std
jmp
sbb
cmc
jb
mov
out
cmp
std
gs
jo
into
adc
xchg
test
and
stos
xchg
pop
add
sub
cmpb
jae
addr16
dec
cmpl
pushf
es
lods
shll
aaa
lods
ret
add
adc
and
in
cli
dec
fnstenv
add
ficoml
and
or
mov
mov
adc
std
frstor
or
jl
jecxz
ja
mov
lds
mov
mov
lods
fcomps
fnstcw
ficoml
xchg
fs
pop
ss
nop
or
xchg
jl
and
lock
sbb
push
nop
loopne
dec
mov
sahf
call
fldcw
in
repnz
fdivrs
daa
mov
pushf
cmp
iret
loop
sub
aam
lahf
cmp
lcall
lret
fcmovnb
aaa
sarb
or
xchg
ss
bound
xor
das
pop
mov
cmp
loopne
push
add
data16
pop
xor
ss
call
push
adc
xorb
outsl
fidivrl
inc
or
nop
lock
int3
sub
adc
notb
das
sub
mov
loope
stc
ss
daa
ret
movsb
ss
movsb
das
inc
scas
xor
jns
pmaxsw
inc
jmp
pop
lods
or
rclb
xchg
cmpsb
pop
jg
imul
add
loop
mov
decb
outsb
dec
repnz
sbb
mov
or
pop
rorb
pop
fdiv
int3
stc
xor
aam
sbb
pushf
jp
js
mov
fs
mov
xor
mov
lret
adc
cmp
ja
daa
mov
iret
jg
in
les
andl
push
push
jmp
pop
mov
mov
out
dec
loope
cli
sarb
cmp
stos
je
jecxz
negl
cmp
jge
fsubrl
pop
jp
lret
or
stc
loopne
xchg
lods
push
cmpsl
out
lds
js
ss
mov
sti
inc
mov
in
test
out
sti
in
aad
cltd
jno
push
xchg
cmc
lgs
mov
sub
ss
and
shrl
rorb
sti
cmp
inc
call
shrl
pop
aas
lods
sar
stos
mov
sahf
push
rcl
jmp
fnsave
addr16
xchg
in
and
insb
push
lea
in
sbb
imul
setbe
cltd
sti
and
in
cmp
enter
fstpl
jle
mulb
test
push
push
pop
dec
inc
movsb
xchg
lea
fcmovnbe
das
and
and
insl
xor
or
aaa
es
jle
fucom
cli
lock
outsb
push
fnsave
lcall
pop
xchg
outsl
mov
add
or
hlt
arpl
fmull
shlb
mov
sbb
xchg
sysenter
sbb
mov
fsubrs
loopne
rcl
sub
les
test
and
je
xchg
push
es
scas
pop
test
xor
sahf
adc
out
inc
rcr
pop
aam
mov
js
xchg
inc
dec
orb
and
ljmp
rclb
leave
test
xor
pop
mov
in
inc
nop
negb
insl
mov
popf
adc
mov
int
pop
push
push
mov
jl
movsb
lret
loop
or
gs
ret
loop
loopne
inc
sub
and
pop
mov
xchg
insb
sub
sbb
idivb
cmp
mov
sub
mov
mov
mov
adc
imul
stc
mov
add
bound
into
cs
xchg
push
sbb
dec
stc
es
cmp
jne
cmc
fstpt
cmp
aaa
es
jb
inc
mov
dec
subl
mov
and
fdivrl
test
shll
sbb
data16
lds
add
inc
mov
mov
hlt
mov
jae
fcmovb
push
mov
sub
bound
sub
int3
mov
lods
fidivrl
into
mov
outsl
sbb
fcomps
push
jle
and
enter
or
lret
fcomps
dec
clc
jne
scas
pushf
shrl
mov
popf
stc
es
cmp
mov
mov
pop
ds
cwtl
test
pop
mov
jo
loope
les
insb
imul
pop
pop
fimuls
inc
fldt
les
cmp
gs
and
xchg
fisubl
subb
and
mov
adc
jmp
sti
mov
adc
imul
xchg
enter
push
mov
sub
addr16
cmpps
ret
ja
scas
or
sbb
mov
aas
inc
clc
sub
pop
xchg
mov
push
sahf
inc
in
mov
or
clc
ja
adc
cmp
les
push
fdivrp
sarb
lods
mov
inc
pop
pop
ja
xchg
mov
cmpsb
cmpsl
lea
out
test
ljmp
jo
mov
mov
and
loopne
fdivrs
out
sbb
jo
in
mov
mov
xor
push
jl
mov
jbe
sub
cmp
lret
xchg
mov
and
mov
cmp
shrl
ja
and
sub
leave
dec
in
pop
cmp
sub
les
cmpsl
mov
xchg
push
mov
jnp
std
push
fwait
addl
or
cmc
dec
aam
adc
hlt
mov
push
xor
mov
insl
cmc
xor
jp
test
or
dec
xchg
stc
jno
mov
icebp
xchg
in
orb
out
enter
pop
cmpsb
rclb
lock
pop
je
jae
je
clc
jns
adc
jle
sbb
call
sbb
push
scas
fists
dec
std
nop
jb
aam
iretw
ret
xchg
mov
out
ds
test
dec
movq
arpl
stos
notl
cmp
sbb
inc
cmp
arpl
sub
addr16
pop
xchg
sbb
cli
jmp
imul
ds
pop
lods
fmull
aaa
in
mov
fcmovbe
push
push
hlt
ljmp
mov
fmulp
sub
mov
mov
ficoms
or
jecxz
mov
mov
sbb
popf
xchg
pop
daa
or
fildll
push
xor
and
mov
out
sub
fucompp
pop
scas
fwait
inc
cmp
lods
outsb
loop
cmpsb
daa
cltd
sbb
pop
mov
pop
mov
mov
gs
inc
icebp
ss
push
jge
mov
push
adc
jnp
movsb
jmp
scas
in
lods
insl
inc
and
je
in
or
test
cmpsl
mov
in
loop
rcrl
jg
push
mov
shll
push
mov
imul
iret
push
scas
sbb
out
outsl
in
out
xor
push
mov
pop
lahf
xchg
add
push
dec
jl
xor
sub
xor
jns
xchg
andl
and
pop
loopne
xchg
dec
add
xchg
mov
add
in
inc
fsts
xorb
pusha
xor
mov
fdivrl
cwtl
push
sub
pop
push
fsubrs
xchg
fstpl
mov
mov
jb
pop
and
adcl
insb
or
mov
or
and
es
and
insb
push
mov
xchg
aam
jne
and
mov
aam
jmp
scas
push
js
mov
stos
testb
sbb
loop
test
cmp
leave
pop
arpl
out
inc
pop
cli
dec
mov
sbb
mov
dec
imul
push
mov
xchg
cmpsl
xorb
sub
pop
mov
xchg
xor
ret
jl
shl
fcom
je
repnz
sbb
imul
adc
cmpsb
sub
sub
cmp
enter
iret
xor
sub
in
push
sbb
icebp
fdivrl
fwait
imul
pop
add
mov
mov
and
fs
test
pop
stos
cmp
fldl
icebp
leave
cltd
test
mov
psubsb
add
jne
popa
subl
cmpsb
inc
nop
push
roll
loop
pop
outsl
xchg
inc
rdtsc
push
mov
mov
jecxz
cmc
pop
and
mov
jl
mov
dec
gs
push
ss
pop
lods
or
outsb
icebp
dec
sti
filds
cmpsb
cmpsl
push
divl
mov
or
xchg
cs
mov
dec
mov
mov
jo
and
sbb
shrb
mov
pop
loop
ljmp
mov
std
cmp
dec
and
xchg
push
lods
clc
fidivrs
jo
mov
xor
pusha
mov
lods
bound
divb
dec
pop
push
mov
dec
pop
ja
cltd
or
push
xor
hlt
xchg
adc
out
gs
rcrl
insb
add
lods
shlb
cmp
pop
jno
std
sbb
mov
add
movsl
lds
imul
in
addb
scas
loope,pn
dec
sbb
inc
pop
push
aam
scas
inc
lcall
stos
add
lock
adc
pop
int
lahf
xchg
dec
rcll
push
lret
popa
loope
imul
and
bound
stos
imull
test
xchg
int
add
sub
nop
jl
push
and
push
outsb
fdivp
jp
rcr
into
ljmp
sarb
push
jecxz
push
and
and
inc
jcxz
cmpsl
pop
sbb
cli
gs
out
dec
int3
inc
aas
insl
addr16
jmp
mov
xchg
popa
push
xchg
jl
pusha
jecxz
push
mov
sub
adc
shrb
stc
mov
mov
mov
mov
std
popl
scas
xor
fistl
pop
xor
icebp
outsb
mov
push
int
xor
loope
xor
push
mov
fistps
ret
adcl
shr
adc
jno
out
push
mov
sub
andb
jbe
ja
or
cmp
rorb
enter
fistpll
or
mov
or
mov
dec
sub
adc
fldl
fsubrs
or
cmp
pop
loop
out
fmulp
cmp
pusha
shr
ror
ret
mov
and
jmp
lock
jae
pop
leave
bound
dec
daa
aaa
push
mov
adc
nop
inc
fldenv
add
mov
push
inc
dec
pop
xor
jo
or
xor
lods
into
movsb
es
cli
or
cmp
sahf
push
mov
mov
popl
push
roll
sub
dec
aaa
adc
sub
lahf
ficompl
xchg
call
fdivl
sbb
cmp
sub
cmc
icebp
pop
and
inc
mov
lret
icebp
jmp
dec
xchg
popa
lods
js
sbb
push
mov
push
push
cmp
arpl
push
push
enter
stc
adc
out
es
cmpb
or
stc
insb
or
sub
jg
scas
adc
mov
xor
fldt
in
iret
outsl
pop
ja
push
sub
dec
cld
push
and
scas
inc
lods
xor
inc
jno
sub
fwait
mov
jmp
sub
cli
repz
mov
jg
cmc
mov
sbb
mov
imul
es
mov
lcall
int
mov
cmpl
cmp
lahf
out
mov
jno
adc
sti
inc
sarb
push
lret
rol
repz
mov
cmp
jp
repz
ffreep
mov
inc
ja
mov
mov
cmp
pop
scas
dec
mov
ljmp
fsubrs
cmpb
mov
or
fsubp
adc
xor
orl
jle
mov
push
mov
add
in
cld
fwait
iret
cli
pop
enter
sub
ret
ret
inc
fwait
adc
arpl
lods
fcomps
rorl
mov
out
rcll
push
sub
hlt
cmp
fildl
jne
xor
and
fidivs
inc
pop
in
dec
insl
and
clc
mov
xor
inc
iret
scas
jno
int
cmpsb
xchg
dec
jle
cmp
stos
test
pop
push
mov
sub
cmp
rcrl
sub
or
cmp
shll
xchg
and
sbb
mov
push
xor
imul
sub
jno
inc
je
clc
popf
pop
fcmove
lea
and
jl
xchg
xor
xchg
xchg
test
push
or
jl
xor
pushf
jnp
or
pop
cmpsl
jb
sub
stos
dec
jno
insl
inc
add
repnz
mov
mov
dec
push
pop
lods
jl
mov
cmp
insl
fsubrl
insb
push
js
enter
jg
inc
jae
sub
outsw
xchg
cli
sub
jmp
sbb
or
pusha
jmp
cmc
add
fstl
sub
fs
leave
sbb
loope
sub
iret
in
xchg
mov
mov
xchg
inc
call
shll
sbb
xchg
insl
mov
mov
and
mov
enter
loop
clc
cmp
cs
add
les
push
mov
push
sub
add
fnstenv
loope
push
daa
mov
sbb
fistl
imul
adc
cld
pop
scas
mov
jle
xor
sahf
aam
fs
add
ljmp
mov
insb
andb
loopne
loope
lock
movntps
mov
into
jmp
adc
imul
sbb
ljmp
paddusw
or
or
or
clc
ljmp
dec
xorl
inc
pusha
push
sub
sbb
jmp
hlt
out
dec
andb
xchg
pop
xchg
sbb
add
jno
and
pop
mov
pop
bound
ds
arpl
sbb
push
push
cs
cwtl
ret
mov
cs
adc
cmp
jns
mov
imul
fs
sbb
adc
out
fwait
ss
add
es
notb
sbb
push
xchg
inc
scas
sti
les
pop
lea
mov
ret
adc
fcomip
cmp
andb
lods
mov
fstl
sbb
push
lock
adc
mov
clc
pcmpgtb
mov
popf
adc
sub
adc
push
clc
sub
sbb
fs
dec
cmc
cmp
inc
or
js
push
test
iret
jecxz
add
xor
push
sbb
mov
sub
ret
mov
or
add
pop
and
mov
adc
and
cmp
sbb
stc
mov
rclb
orl
test
into
dec
cltd
ss
xor
mov
pop
push
loopne
fdivp
xchg
and
fiaddl
mov
push
sub
rclb
mov
push
inc
rcl
fimuls
pop
lcall
inc
or
xchg
aad
mov
aaa
xchg
mov
xlat
push
dec
mov
push
nop
fucomp
rcrl
sti
or
popf
jecxz
sbb
push
xor
cmpb
adcb
xadd
aad
test
leave
test
jbe
ss
int3
addr16
lods
nop
bound
mul
cmp
xor
jns
negb
adc
xchg
sbb
out
and
jae
sub
adc
sub
mov
outsl
sahf
or
loopne
imul
xchg
fmul
cmp
push
nop
shrl
in
test
and
xor
inc
pop
sub
mov
sbb
inc
daa
shlb
xchg
dec
lret
lcall
lods
sub
mov
xor
js
mov
fidivs
out
iretw
mov
dec
inc
lcall
xchg
cmc
pusha
dec
inc
test
mov
in
fcompl
negl
loope
push
pusha
stos
push
imul
movzbl
cld
dec
mov
jmp
scas
dec
sahf
adc
pop
fisubrl
push
popf
fmuls
dec
movsl
jge
inc
pop
or
stos
addl
sbb
arpl
test
lods
outsl
adc
sahf
pop
icebp
packssdw
cmp
jp
mov
popf
insl
or
notl
push
loopne
lods
dec
xchg
pop
fmuls
jno
sub
adc
mov
and
mov
or
in
sbb
shl
test
out
js
in
popf
mov
bound
fdivrs
xchg
adc
cmpsb
stc
shll
pop
into
push
pop
mov
fwait
test
mov
sub
sti
mov
pop
inc
jae
jmpw
ret
xorl
out
pushf
sub
and
je
sub
rclb
pusha
in
repnz
sub
sbb
mov
sbb
leave
js
dec
fmuls
dec
and
out
dec
xor
addr16
cmp
sbb
inc
pop
adc
test
std
xchg
pop
lds
sub
mov
push
test
lock
sahf
and
cmpsl
mov
dec
or
xchg
js
xchg
mov
inc
std
data16
add
or
push
push
ljmp
repz
cld
xchg
and
sbb
fcmovnb
mov
push
xchg
mov
xchg
xchg
leave
mov
shl
mov
js
dec
push
repnz
imul
and
aad
movsb
jne
enter
push
insl
xchg
mov
sub
mov
xor
inc
into
sbb
or
dec
in
or
add
push
gs
cmpsb
addr16
sub
repz
fcoml
xchg
inc
jnp
adc
pop
sbb
jnp
negl
cltd
xchg
adc
jle
sbb
cmp
and
jb,pn
scas
xchg
loope
stos
jmp
jbe
inc
pop
test
push
sub
sbb
inc
mov
shrl
mov
outsb
pop
push
jne
popa
adc
pop
sub
adc
shr
repnz
out
je
push
nop
push
ljmp
push
xchg
pop
cwtl
jge
dec
lock
sub
adc
or
dec
lock
jne
dec
pusha
jge
in
mov
into
dec
push
cmp
pop
mov
shrl
add
dec
inc
rorl
dec
aam
aad
dec
xchg
and
pop
xchg
in
aaa
ljmp
out
je
adc
insl
xor
lock
fwait
pop
sub
mov
add
pop
popf
inc
jne
scas
bswap
and
lock
arpl
push
push
xor
sahf
shlb
dec
pop
aas
sub
lahf
sbb
or
sub
in
je
mov
scas
out
cmp
mov
shr
or
and
int
adc
dec
push
adc
adc
xchg
shrb
subb
in
mov
and
test
out
push
imull
xor
fstps
enter
lcall
push
lcall
insb
add
stos
das
scas
fcmovbe
push
adc
mov
arpl
and
call
js
mov
and
dec
lret
ficomps
mov
int
add
add
test
outsb
mov
sbb
ret
cli
mov
mov
xchg
bnd
aas
jmp
mov
fnstcw
adc
mov
nop
scas
loope
in
push
xlat
and
cmp
xchg
add
jnp
or
outsb
aam
mov
shrb
arpl
popa
mov
orl
aaa
mov
dec
push
inc
sbb
and
push
aad
insb
fsts
xor
xlat
shrb
sarb
mov
js
cmp
mov
mov
out
cs
ljmp
dec
mov
inc
and
xchg
mov
fisubrs
sub
cltd
or
cltd
int
aas
dec
leave
pop
ret
or
es
iret
jp
sub
out
lahf
mov
sub
movsb
mov
shlb
fwait
mov
push
int
push
mov
fcomps
shlb
rcrb
scas
xchg
icebp
repnz
popf
xchg
jne
mov
lods
iret
pop
mov
or
jno
adc
xor
cld
test
cmp
in
mov
pop
dec
dec
movsb
xchg
mov
gs
andl
lret
scas
cmp
loope
jbe
popf
pushf
insl
dec
dec
icebp
aaa
pop
sarl
pop
dec
xor
or
push
xchg
inc
sub
xchg
add
xor
insl
ja
data16
inc
adc
xor
lret
sbb
add
orb
push
mov
das
out
hlt
pushf
xlat
pop
jae
xchg
inc
mov
dec
xchg
cmp
or
xor
outsb
sahf
push
push
popa
and
loope
xchg
push
daa
sahf
and
movsl
lods
or
icebp
sbb
push
pusha
loop
xlat
out
pop
shr
inc
dec
stos
jns
adc
loop
inc
sbb
pushf
jg
je
jle
cmc
mov
or
addr16
or
jecxz
xchg
std
jo
cmp
mov
mov
push
xlat
jnp
lods
ficoms
frstor
or
data16
stos
adc
mov
cmp
icebp
sbb
or
add
jmp
jle
cmp
addr16
pusha
out
ss
sbb
dec
pop
cmp
jno
inc
jp
inc
dec
mov
fcomps
inc
adc
dec
mov
xchg
leave
negb
imul
xchg
sbb
mov
push
adc
arpl
lods
mov
fiaddl
ss
outsb
cs
jbe
mov
pushf
and
fcoms
add
sbb
inc
mov
jo
in
shl
sbb
mov
or
testb
in
and
je
and
mov
and
pop
xchg
fwait
pop
mov
add
mov
and
repnz
test
icebp
ret
cwtl
sub
pop
cmp
nop
fmull
cmpb
fdivl
xchg
leave
in
pop
enter
popf
hlt
xchg
fstps
cli
aaa
rcl
imul
push
pop
xchg
push
add
imul
ja
push
and
pop
rclb
out
xchg
fcmovnu
mov
popa
cwtl
mov
and
mov
ljmp
jae
push
lret
push
out
xchg
xchg
jmp
or
jge
jmp
jl
jae
or
sbb
movsb
sbb
hlt
inc
insl
dec
fs
xchg
adc
mov
jns
outsb
hlt
add
mov
adc
sahf
xor
out
mov
dec
mov
cmp
and
stos
out
imul
jbe
mov
inc
xor
xchg
jno
mov
mov
stc
mov
xchg
cmp
pop
faddl
shlb
rcrl
lock
push
mov
rorb
lea
dec
cwtl
test
dec
js
ret
inc
sahf
lcall
pop
pop
sub
testl
js
test
lods
add
cmp
in
in
repz
xchg
add
std
inc
cld
push
and
mov
mov
aad
into
aas
xor
popf
xor
stos
cld
mov
inc
inc
jecxz
stos
sub
sub
nop
fstl
cwtl
mov
jmp
popa
or
sub
sbb
inc
xchg
push
aam
lock
subl
adc
push
movsl
mov
jl
push
xchg
mov
rcll
fnstsw
arpl
popa
ret
cmp
nop
xchg
mov
cmc
adc
push
ret
shlb
cmp
push
jne
push
ljmp
mov
leave
jno
jg
test
or
dec
stos
out
sbbl
fistpl
fidivl
inc
pop
sbb
loop
int
or
std
call
arpl
sti
sub
out
ss
mov
and
or
xor
mov
popf
or
inc
rolb
pop
pushf
fnsave
inc
push
dec
lahf
lahf
dec
ret
push
push
and
orb
push
dec
sub
mov
fiadds
std
ficompl
mov
fsubs
and
dec
fldcw
xchg
nop
lea
dec
mov
pop
aad
cld
std
push
jb
inc
push
shrb
in
in
push
pop
mov
popa
decl
imul
push
sbb
lds
sbb
mov
imul
les
aam
insb
aad
insb
out
pop
dec
bound
je
cwtl
or
test
adc
into
mov
mov
test
faddl
sub
push
mov
jmp
or
lods
jl
push
push
shrl
mov
inc
xchg
jno
fadd
rolb
push
mov
shr
inc
fsts
cmp
lock
dec
test
insb
fisubrl
xchg
in
roll
adc
cmpl
dec
sbb
dec
mov
les
or
andl
sub
dec
mulb
imul
sti
in
pop
xor
sbb
lods
lret
imul
into
pop
inc
sti
ja
fidivrs
popl
push
mov
dec
pop
lret
jae
les
sbb
mov
push
adc
lods
in
rorb
mov
sub
mov
xchg
adc
les
mov
nop
test
xor
insb
dec
popf
stos
vcmpord_sps
das
insb
das
inc
cmp
add
clc
inc
movb
or
popa
add
cwtl
cmpsl
adc
stc
cs
jo
pop
in
mov
add
jecxz
push
out
mov
popf
fisttpll
test
xor
sbbb
inc
mov
and
or
xchg
cmp
mov
jbe
das
mov
mov
jecxz
sub
sub
push
or
add
push
cmp
xchg
pop
xchg
fisttpll
movsb
inc
mov
jne
and
pop
xor
push
jb
mov
sub
das
fucomi
inc
mov
scas
adc
push
lods
sbb
pusha
nop
xor
cmp
lods
mov
or
rcrl
loop
scas
adc
clc
orb
clc
decb
repnz
xchg
mov
rorb
icebp
outsl
inc
or
imul
rcl
mov
cmp
std
in
jb
bound
jne
cmp
fsubrl
jp
or
movhps
loop
dec
jns
int3
loope
sub
add
mov
push
mov
inc
testl
jmp
jbe
dec
dec
jp
sti
sbb
out
xchg
xchg
popf
loop
cmp
jl
xchg
stos
in
pop
or
aam
packsswb
xor
adc
sarb
sbb
addr16
push
push
dec
decb
push
and
xchg
scas
notl
mov
push
push
pusha
in
rcrb
and
repz
or
sub
xor
mov
dec
xchg
push
out
insb
mov
mov
xor
in
cwtl
ja
adc
sub
in
adc
pop
repz
push
sub
jg
rcrb
pushf
ret
lret
lock
stos
push
push
sub
xor
cmp
adc
cmp
cmp
sahf
je
fisttpl
sti
pushf
or
dec
jg
ljmp
cmova
mov
adc
cmp
in
add
mov
sbb
lock
ret
cmp
or
cld
push
push
dec
adc
sbb
jb
ljmp
ja
fbld
and
adcb
xchg
mov
inc
sbb
aas
mov
stos
push
icebp
inc
leave
xchg
sub
dec
or
jecxz
sub
inc
mov
movsb
lods
xchg
int
sub
aad
aam
fmul
dec
mov
mov
lret
or
popa
fwait
sub
fsubrl
push
dec
aaa
aaa
imul
fistps
mov
mov
or
mov
sbb
gs
sbb
mov
cmpsl
sti
mov
push
adc
lahf
ficoml
sub
sarl
nop
daa
jnp
lahf
push
adc
mov
fimull
push
jecxz
das
outsb
repnz
xorb
pop
xchg
orl
call
js
sub
sbb
fcoms
out
in
xor
fs
lcall
add
jns
lock
push
xchg
mov
out
or
in
xor
and
stos
sub
iret
cmp
cmp
stc
out
xor
clc
outsb
sar
ss
dec
mov
fxtract
cmp
insl
insl
sub
clc
loopew
xor
push
lret
adc
add
jnp
cmp
pop
adc
cmpsb
add
or
xor
mov
mov
sarl
push
cmpsl
mov
sbb
aam
int
sub
movsl
aas
movsl
xchg
jmp
mov
mov
sbbl
mov
xchg
cwtl
jp
shrb
xor
mov
in
sarl
cmpl
lds
xchg
fwait
jp
nop
lods
mov
jno
and
jbe
adc
aam
xchg
sbb
jmp
ja
jne
ljmp
mov
and
daa
inc
cmp
mov
adc
add
loopne
mov
adc
mov
mov
es
mov
push
mov
aad
ffreep
iret
add
sbb
pop
fldenv
in
lret
popf
popa
xchg
rcll
enter
pop
add
push
pop
xorl
pop
jmp
imul
sub
test
dec
adc
rorb
inc
jno
loopne
std
jno
inc
push
in
push
in
dec
sti
int3
sub
add
mov
cwtl
adc
hlt
repz
jno
mov
xor
cs
push
mov
adc
jg
jno
mov
adc
rcrl
popf
call
addr16
xchg
and
adc
sbb
data16
add
jne
mov
pop
outsl
imul
mov
lret
xchg
es
mov
or
pop
pop
push
cmp
jns
js
leave
clc
cmp
fisubrs
pusha
ficomps
mov
sub
xchg
pop
cltd
dec
xchg
add
pop
pop
rcr
push
and
xchg
inc
jo
lock
lcall
and
sbb
roll
out
mov
imulb
rcrl
mov
mov
dec
sahf
cmp
iret
das
jg
xchg
or
dec
add
xchg
push
lret
adc
inc
cld
popa
adc
scas
pop
jp
xchg
lods
jge
sbb
mov
in
outsl
push
dec
dec
jg
sbb
cmp
pop
sub
test
arpl
xchg
jle
xchg
and
mov
negb
cmpsb
in
test
and
xchg
jne,pn
iret
out
jl
or
mov
loop
adc
pop
xchg
mov
mov
push
scas
loopne
push
xchg
cmp
cltd
cmp
inc
xor
cmpsl
cltd
push
nop
jnp
mov
idivl
mov
lahf
push
sub
adc
sbb
push
stos
jp
pop
jae
push
cld
out
push
mov
mov
cld
push
jbe
mov
jmp
xor
jnp
pop
jmp
pop
int3
xchg
mov
pop
add
cmpsl
push
outsl
adc
push
cmpsb
xchg
and
insb
push
inc
pop
and
cmp
or
xor
sub
out
and
int
js
xchg
pop
nop
fnstcw
nop
movsl
aam
add
dec
adc
es
shlb
test
lahf
fidivs
arpl
in
and
decl
lret
jno
push
leave
and
enter
fldenv
jl
mov
cmc
jns
test
xchg
add
ss
outsb
pop
data16
call
int3
lea
into
test
mov
push
fxam
cmp
mov
xchg
call
push
not
out
pusha
sbb
cmp
js
xor
push
inc
bound
jge
xchg
pop
hlt
adc
pusha
jae
push
dec
fidivl
cwtl
popf
cwtl
cmp
jmp
insb
fwait
xchg
sub
mov
repnz
add
fwait
lds
loop
sbb
push
mov
imul
xor
mov
dec
sub
lahf
cmpsb
aam
sub
mov
stc
jno
rclb
or
dec
or
shl
jno
push
leave
jg
xor
enter
test
mov
push
mov
pop
movsb
or
mov
lret
incb
popa
jne
push
sub
ret
xlat
enter
cmpsl
fimuls
mov
push
push
push
std
imul
fcompl
and
sbb
push
add
dec
lock
pop
mov
inc
fstpt
jl
inc
out
movsb
or
pop
mov
lock
test
out
sbb
xor
das
sbb
int
mov
push
push
mov
loop
adcl
add
inc
cs
push
and
push
adc
repz
and
xchg
scas
mov
repnz
int
xchg
or
inc
dec
and
sbb
out
mov
adc
pop
inc
addr16
jg
push
cmp
out
mov
lea
mov
cmp
aas
cmp
lea
movsl
lahf
inc
sar
pop
pop
dec
sub
jne
pop
in
xchg
test
add
and
jl
and
nop
or
jns
dec
inc
dec
inc
mov
adc
imul
out
fisubrl
out
in
or
sbb
fwait
inc
cmp
ljmp
jle
jb
sbb
cmp
dec
bound
lret
and
inc
dec
pop
cli
imul
les
lea
repz
leave
les
lahf
xor
mov
or
test
lret
push
jecxz
sbb
xchg
addr16
sub
xchg
dec
mov
cmp
aam
xchg
mull
repz
sti
pop
xchg
fsubs
outsb
stos
cmp
das
aad
mov
sub
cmp
mov
push
jb
push
fldt
xor
dec
mov
loopne
jge
cli
std
dec
outsb
lods
mov
movsl
dec
pushf
cmp
push
add
push
jnp
addr16
mov
lretw
sub
add
inc
adc
ds
clc
mov
ss
rclb
fbld
add
outsb
mov
mov
adc
ljmp
add
mov
jl
adc
inc
icebp
aam
and
xchg
mov
leave
xlat
imul
pop
lret
repnz
push
aam
cmp
push
clc
xchg
addr16
rorb
xchg
dec
jmp
jb
iret
popa
dec
ds
mov
daa
mov
and
mov
push
pop
mov
popa
mov
arpl
adc
insl
cmp
fidivrl
out
pop
xchg
mov
lods
mov
stos
mov
push
sbb
pop
icebp
mov
lahf
loopne
xchg
inc
pop
cmpsl
lret
clc
dec
aam
nop
mov
or
inc
mov
fcoml
inc
pop
sti
push
test
mov
jg
aas
cmc
cld
sub
das
stc
adc
push
popa
jecxz
sub
mov
mov
jnp
sahf
push
arpl
xchg
rcll
call
popf
xor
sub
out
xchg
cltd
or
scas
mov
jge
movsb
push
aad
mov
ret
sub
stos
ljmp
gs
pop
inc
ja
sti
xchg
pop
std
pop
cmp
mulb
cmpsb
push
sub
cld
mov
das
push
lds
mov
mov
sarl
pop
push
icebp
js
mov
xchg
das
bound
sbb
sub
nop
bound
in
jle
or
pop
mov
pop
jecxz
push
faddl
mov
enter
bound
push
imul
add
movsb
in
inc
sub
lds
or
or
roll
stc
push
leave
pop
loopne
not
nop
lret
in
sub
out
cmp
cmp
fnstcw
cmpsb
inc
test
push
loopne
stos
pop
sub
mov
add
adc
fstpt
push
and
mov
cmp
xchg
out
out
fs
push
mov
mov
imull
xchg
lods
out
or
js
sub
inc
jbe
jp
pop
sbb
imul
adc
clc
dec
int3
rolb
nop
mov
bound
xor
or
xor
lret
aaa
mov
loope
jo
int3
pop
iret
dec
and
inc
sahf
xor
add
push
xor
push
enter
pop
sbb
idiv
stos
jmp
sbb
fwait
mov
repz
add
lds
mov
flds
sub
mov
mov
cmp
adc
leave
adc
and
jb
or
mov
push
aad
mov
js
out
les
stos
mov
push
xchg
in
es
fucom
aad
out
jl
dec
jnp
mov
notb
jne
mov
shll
push
dec
repnz
pop
jle
popf
out
pop
pop
ret
icebp
imul
push
mov
sub
imul
adc
add
xchg
lret
ret
data16
pop
or
out
imul
sub
clc
scas
mov
sti
mov
imul
fbstp
test
jle
mov
xor
add
iret
imul
test
js
sbb
adc
fdivrs
jbe
leave
loop
std
lret
outsb
or
cltd
xor
mov
jp
mov
pop
adc
jne
pop
scas
shlb
jae
les
test
frstor
xchg
aas
pop
sbb
add
push
jl
inc
mov
sbb
adc
out
rcrl
push
push
or
pop
sbb
aas
adc
sub
out
loop
stc
mov
aam
scas
jmp
in
imul
jl
in
pop
and
push
jmp
rorb
xchg
aas
xlat
pop
jmp
pop
ret
jne
call
out
pop
mov
shr
sbb
lret
lret
dec
inc
jbe
xchg
dec
dec
js
ror
out
sub
or
jns
cmc
fstpl
cltd
lods
push
mov
or
fwait
jnp
lods
in
cmpsl
stc
fbld
mov
rol
lds
adc
mov
cmpsb
pushf
popa
push
xchg
nop
xchg
sub
cmpl
jg
xor
loopne
imul
adc
es
jp
cmp
or
sbb
in
inc
jg
ret
cmp
jmp
mov
aas
imul
sub
add
mov
adc
cli
mov
fistps
jbe
popa
xor
fdivr
jnp
jae
movsb
roll
xor
pop
pusha
push
jl
xor
int3
in
daa
xchg
xchg
xlat
jae
cld
xor
xchg
dec
rolb
loop
jmp
and
loopne
xchg
pop
fiadds
lock
fwait
xor
cmpsb
divl
lods
inc
cmp
mov
insb
and
addr16
jl
xor
xchg
push
test
sahf
mov
test
mov
xchg
pushf
pop
imul
adc
push
inc
pop
mov
dec
add
gs
adcl
movsb
push
sbb
lods
dec
inc
in
outsl
xchg
movsl
dec
movsl
lea
repz
ret
mov
xacquire
pop
fninit
lods
mov
movl
push
inc
mov
dec
mov
int
mov
inc
ret
or
sub
mulb
inc
stos
xchg
cmp
mov
mov
mov
xchg
clc
cld
scas
add
or
mov
dec
cmp
cmp
orb
mov
lds
jp
into
nop
and
aad
jo
scas
ljmp
mov
push
adc
repz
mov
mov
and
mov
lods
aad
repz
xor
cmpsb
sbb
dec
jecxz
xchg
fadds
add
insl
dec
out
test
pop
pop
and
fidivrl
imul
cmp
xchg
jno
ss
mov
mov
ficomps
dec
std
out
sbb
cmp
rorb
addr16
push
pop
mov
lds
xorb
jo
inc
xor
stc
jbe
lret
push
shll
fs
push
lret
call
subb
in
mov
push
inc
sub
lock
cmp
cmpsl
inc
movb
mov
add
or
jno
add
jne
jge
fcomip
mov
cwtl
rcrl
jns
xchg
into
es
mov
cmp
jbe
icebp
jne
jmp
sub
add
call
adc
mov
clc
mov
rorl
sub
mov
lcall
sub
dec
std
fisttps
dec
stc
cmpsb
mov
arpl
int3
and
jnp
mov
push
push
dec
imul
xor
push
in
push
andb
call
mov
or
inc
pop
test
lds
lcall
jb
push
cmp
mulb
ja
sub
scas
decb
stc
jl
push
cmp
mov
jo
cmp
mov
in
aam
xchg
aad
mov
mov
int
add
pop
mov
pop
jle
sub
xchg
lock
inc
lcall
gs
aam
fs
je
jae
push
pop
push
es
lret
arpl
in
lock
test
push
arpl
mov
sub
sub
adc
add
dec
adc
xor
sar
test
ret
insl
ret
test
frstor
lcall
sbbl
mov
nop
and
iret
or
scas
push
add
mov
test
sti
inc
push
and
pop
mov
popa
or
mov
xchg
pop
and
outsl
loopne
loopne
sahf
jp
mov
xor
gs
repz
jmp
cmpsl
cs
inc
ss
sahf
dec
pop
mov
mov
in
inc
jg,pt
dec
cwtl
pmullw
mov
or
xlat
sub
test
mov
push
sub
push
add
mov
or
arpl
roll
add
sbb
pop
sub
out
pop
rorl
push
sarb
js
push
mov
lret
add
sub
ret
jl
adc
je
sbb
addr16
pop
dec
sub
sub
jg
sbb
inc
fisttpll
lock
nop
arpl
roll
xor
or
sbb
repnz
scas
lods
xlat
xchg
inc
aaa
fwait
stc
mov
int
insb
pop
aam
xchg
imul
lahf
mov
mov
pop
call
xlat
mulb
in
sbb
sahf
fs
enter
inc
xor
mov
popa
sarb
xor
xlat
xchg
lock
shrl
imul
lcall
sub
xchg
push
mov
sbb
fwait
sbb
jno
adc
insb
jge
cmp
jb
test
jns
in
addl
xchg
jmp
out
arpl
ret
lahf
adc
icebp
call
ret
stc
fsubrl
in
xchg
adc
cmpsl
inc
mov
aas
cltd
mov
pop
inc
insl
and
ja
repnz
inc
imul
jmp
sub
push
dec
pop
and
adc
popf
sbb
sbb
jnp
loop
fistps
pop
and
sub
imul
movsl
push
sti
adc
testl
push
std
sbb
cmp
cmp
repz
pop
or
adc
dec
and
lret
jge
push
add
sbb
mov
add
xchg
pop
and
mov
std
enter
lods
push
ss
lods
dec
ret
pop
stos
mov
push
lcall
mov
repnz
and
mov
pop
fs
lds
cltd
hlt
pop
or
mov
stos
je
xchg
test
mov
dec
dec
insl
out
sbb
mov
lcall
cmp
inc
insl
movsb
mov
outsb
inc
jno
popa
sbb
inc
loop
aad
add
mov
and
sub
push
or
and
ja
pushl
int
ss
sbb
add
popa
pop
leave
xchg
outsb
aaa
lock
inc
mov
mov
addb
mov
or
mov
pop
xlat
lret
adc
in
int
mov
xchg
add
jmp
sarb
lock
xchg
aam
push
in
mov
xchg
mov
sbb
pop
mov
cli
xchg
ljmp
add
bswap
rol
mov
movsl
xchg
inc
daa
mov
sbb
jmp
mov
mov
div
jge
out
push
dec
pop
sbb
repnz
in
push
fbstp
aam
ret
mov
testl
xor
rcll
dec
sub
push
das
xchg
cli
shll
frstor
adc
pop
test
insb
xchg
loopne
inc
ljmp
inc
movq
into
ja
jb
xor
xor
lods
pop
jae
or
add
mov
leave
sahf
sub
push
mov
cmp
jmp
fstpl
cmp
es
sahf
in
cmp
cmp
fistpll
cmp
and
xchg
popl
jo
push
adc
out
mov
cmp
xchg
pop
pop
into
arpl
imul
inc
scas
loop
mov
pop
add
cld
int
push
jne
jl
and
sbb
jnp
inc
icebp
mov
xor
scas
pop
xor
and
insl
jge
inc
test
das
jo
iret
push
pop
xchg
ficoms
out
jmp
or
pop
mov
xor
dec
jns
sti
pop
leave
and
jno
ret
sti
popa
mov
out
cmp
mov
cmp
sbb
movsl
addr16
sub
xchg
adc
jae
icebp
cltd
repnz
fst
popa
int3
mov
xor
jo
je
je
adc
adc
pop
lret
inc
mov
pop
adc
call
test
push
test
lds
inc
xchg
lahf
insl
cmp
push
ror
dec
sub
rorl
xor
les
add
leave
popa
lock
and
push
data16
mov
mov
cmc
add
ret
push
and
and
xchg
or
add
cmp
ret
push
xchg
mov
adcb
popa
nop
out
sbb
jle
fmuls
sahf
loop
pop
inc
inc
pop
dec
sbb
test
pop
aaa
rol
nop
cmp
popa
pop
movsb
xchg
sub
mov
lret
leave
cld
cmp
repnz
nop
sub
outsl
pop
movsb
outsl
mov
stos
scas
movsb
rcrl
hlt
cs
pusha
add
stc
es
outsb
out
call
pop
outsb
int3
ss
call
sbb
adc
nop
aam
call
sbb
sbb
and
push
cmp
pop
cs
pop
cmpb
push
jge
sub
cmpsb
mov
push
or
mov
jecxz
fidivl
jb
fidivrs
fdivl
mov
mov
in
sbb
loopne
pop
adc
nop
jae
ljmp
test
fs
mov
sub
cld
fcoml
popf
dec
push
push
popf
dec
lahf
jp
or
sub
xchg
and
in
sub
imulb
scas
cli
xchg
rclb
test
and
jns
in
xor
sub
ljmp
mov
jnp
inc
mov
dec
sti
sub
jns
add
mov
pusha
leave
dec
push
je
sub
andl
add
xchg
pusha
inc
mov
sub
int3
pop
xor
sbb
imull
xchg
adc
mov
out
aas
cmp
idivl
push
sub
mov
loope
jne
mov
pop
outsb
in
push
add
aas
lret
data16
add
int
test
mov
lock
pop
mov
pop
or
inc
jnp
mov
insl
mov
mov
jg
xor
inc
mov
incl
mov
cmp
cwtl
adc
mov
push
flds
daa
sbb
cmp
xchg
lods
out
rcr
mov
inc
insl
and
in
jne
imul
pop
aaa
or
psrld
mov
jg
iret
pop
mov
and
pop
into
int
pop
cmp
sti
lods
mov
notb
sub
pop
aam
cmovne
les
push
push
je
push
xlat
lock
push
xor
mov
push
dec
addr16
add
out
inc
ds
lea
lret
xor
push
mov
aas
mov
sahf
pushf
ljmp
aam
inc
sahf
xor
push
sbb
scas
xchg
stos
sbb
roll
dec
and
pop
lods
adc
sub
mov
cmp
popa
ret
pop
cmp
roll
jne
pop
scas
dec
push
cmp
aaa
popf
sahf
std
mov
cmp
cmp
sub
dec
fstpt
inc
adc
mov
pop
fdivrs
sub
pop
inc
pop
movsl
hlt
push
inc
fsubrl
cmp
iret
cld
mov
dec
ret
out
rorb
xor
imul
sbb
mov
push
push
sub
mov
push
inc
xchg
cmp
push
sti
not
mov
nop
hlt
pop
push
daa
inc
jb
sar
out
push
out
and
dec
iret
add
mov
pop
lods
dec
xor
xor
mov
adc
jnp
add
out
cmp
mov
mov
xor
xor
push
sti
bnd
mov
in
xchg
cltd
aaa
xchg
xchg
cmpsl
sbb
dec
dec
int
sub
pop
nop
mov
dec
push
jl
or
jp
call
add
rclb
or
fnstsw
lea
xchg
stos
jmp
add
aad
lods
cmp
pop
mov
cmpsb
inc
inc
je
inc
adc
stos
mov
fsubrs
push
fs
mov
cmp
in
mov
shll
fstpl
push
fsts
pop
leave
pop
or
or
int3
jle
add
mov
out
push
cmpsb
punpckldq
mov
and
in
mov
fildl
dec
stos
adc
stos
inc
mov
jp
lea
into
shlb
and
xchg
mov
or
outsb
cwtl
ljmp
sub
xlat
jae
pop
stos
mov
inc
cmp
bound
add
movsl
stos
out
xor
jp
mov
loopne
add
jbe
xor
bound
pop
add
inc
sbbl
mov
and
mov
dec
es
test
mov
outsl
popf
push
or
aas
fildll
ficompl
mov
xchg
cli
icebp
jmp
push
test
scas
cltd
dec
sbb
mov
push
mov
dec
mov
push
inc
not
imul
cwtl
mov
mov
or
mov
shll
fimuls
sbb
aam
mov
cmp
insb
lods
rol
es
ja
and
sbb
frstor
mov
and
xlat
jne
sbb
mov
aas
sub
insl
jle
xor
jno
mov
cmp
stc
jmp
xchg
mov
into
lcall
fmuls
pop
int
stc
sub
adc
jg
cld
inc
xchg
xlat
nop
jo
jmp
stc
mov
jecxz
pop
jo
inc
dec
pop
adc
dec
in
or
or
scas
je
jne
inc
imul
add
scas
mov
shrb
sub
add
mov
andl
jmp
fiaddl
xor
push
push
sahf
pop
mov
dec
addr16
out
jnp
sbb
pop
lea
or
sub
push
jo
mov
clc
aas
xchg
xchg
shr
movsb
jmp
adc
mov
loope
mov
movsb
outsl
cwtl
addl
fsubs
test
jno
xchg
std
adc
into
sub
mov
dec
int3
and
cmp
cmpsb
cmp
xor
xchg
adc
lret
sbb
cmpsl
xor
and
cmp
hlt
mov
sbb
mov
fwait
xor
push
push
push
xor
inc
and
call
mov
and
and
or
les
mov
or
jge
xchg
xor
shlb
les
mov
jnp
and
mov
dec
stos
imul
aad
mull
sbb
sbb
mov
xchg
pusha
clc
aam
popf
fwait
sahf
leave
ss
cmp
push
jae
cmp
dec
fnstenv
xor
imul
fnstsw
pop
icebp
mov
imul
sbb
icebp
movb
gs
xchg
or
popl
cmp
movsl
aam
pusha
cmp
sahf
cmp
push
mov
lds
inc
inc
dec
or
adc
xor
xor
int3
fwait
test
orl
rorb
xchg
je
gs
mov
jp
sub
cld
sub
aaa
jecxz
or
test
jno
arpl
gs
mov
or
loop
in
dec
mov
mov
or
lahf
subb
mov
scas
dec
sbb
lahf
push
pop
es
xchg
lods
aad
add
fldenv
sub
xor
mov
jmp
lret
sbb
and
sub
test
push
out
lcall
fwait
iret
xorb
adc
loopne
cld
lock
push
out
notl
jle
xchg
pop
movaps
push
cmp
ljmp
mov
xchg
jge
cmp
pop
pop
imull
call
and
mov
mov
popa
jnp
fisttpll
fadd
loopne
das
iret
cmp
jmp
jae
add
sahf
enter
mov
pop
or
adc
jmp
ret
jb
push
fidivs
insl
rcl
and
add
into
jle
push
ljmp
xlat
cmc
adc
pop
mov
or
mov
adc
lcall
lret
test
js
int
decb
shrb
mov
add
lcall
ljmp
aam
out
divb
test
lcall
add
lcall
into
xchg
inc
jne
jge
mov
lock
pop
jge
orb
xchg
cmp
in
cmp
mov
mov
inc
hlt
xor
stc
pop
mov
rcll
pop
push
stos
or
shll
add
adc
test
imul
mov
fs
stc
pop
cmc
les
jmp
pop
int
adc
insb
push
pop
xchg
jecxz
or
jns
test
pop
jl
pushf
mov
xor
popa
shlb
adc
xor
fdivrs
sahf
out
stos
mov
shrb
pusha
mov
outsl
adc
push
cmp
pushf
push
loop
mov
popa
mov
lock
jl
sbb
inc
xchg
jne
dec
or
jne
sti
xchg
push
xorl
loop
cwtl
lods
insb
outsl
dec
and
loopne
mov
test
jg
popa
sbb
outsl
sbb
outsl
aas
test
sbb
mov
jnp
pop
cmpxchg
xchg
push
add
scas
test
les
insl
cmc
shlb
in
xchg
in
sahf
sbb
adc
xor
popf
outsb
xchg
imul
popf
dec
std
fsubrl
out
dec
std
ss
add
cmp
fidivl
xchg
out
adc
jle
mov
daa
addb
aaa
push
test
jle
jns
or
addl
mov
pop
test
ret
hlt
mov
mov
in
addb
dec
les
pushl
cmpsb
nop
lret
inc
loopne
test
push
imul
xor
repnz
daa
outsl
enter
mov
sahf
loopne
repnz
insl
dec
stos
mov
flds
sbb
xlat
sbb
stc
clc
xchg
leave
cmpb
adc
aas
out
stos
pop
movsb
dec
push
fbstp
sarb
sbb
mov
dec
lds
leave
and
cmpsb
fimuls
stc
sbb
mov
dec
jp
sbb
push
insb
pusha
pop
sti
xchg
mov
ret
ss
sti
xor
adc
inc
cmp
fcoml
xchg
fnstcw
xchg
ret
xor
bnd
inc
nop
fisttps
in
ljmp
out
cmp
push
mov
aad
sub
repnz
ss
push
adc
mov
out
and
int3
iret
cmp
testb
cld
pusha
jecxz
call
mov
fidivrs
test
ljmp
jmp
xchg
fidivrs
push
mov
sub
ret
cld
pushf
lock
xor
and
call
repnz
jnp
aad
cmp
sbb
jecxz
jg
push
sbb
or
jo
add
jns
xorl
mov
leave
or
mov
jle
cs
cmpsl
mov
and
xor
xlat
cmc
repnz
dec
jb
adc
insl
lret
jg
call
int
adc
out
xchg
lcall
push
std
in
push
sarb
popa
addr16
clc
xchg
pop
jae
aad
mull
add
dec
push
es
movsb
mov
in
or
scas
jb
inc
and
outsl
or
pop
lock
aaa
outsb
mov
insl
aad
mov
pop
fnsave
pop
ret
and
frstpm(287
jbe
lcall
push
mov
int
sbb
ljmp
sbb
sbb
pop
arpl
cmp
imul
pop
clc
ret
sbb
cwtl
lock
dec
push
jle
inc
mov
mul
sbb
test
sbb
xchg
xor
mov
mov
movsb
cmp
popa
xchg
repnz
es
jle
fldl
jb
mov
lea
xor
loope
mov
mov
mov
dec
fsubrs
popa
sbb
lock
push
loope
jnp
mov
or
lds
fld
pop
sub
popf
loope
mov
imul
mov
inc
lcall
adc
pop
mov
outsb
leave
rcrl
mov
ja
sbb
or
mov
sti
xchg
repnz
fldz
dec
cmpsb
int
cmp
inc
xor
xchg
dec
out
dec
push
cmp
in
and
js
or
xor
mov
cli
mov
sub
hlt
ja
jle
dec
fmuls
ret
pusha
jb
bound
sbb
out
test
jle
adc
add
fadds
lods
ss
mov
mov
neg
jge
mov
push
xchg
aam
sub
test
dec
mov
mov
outsb
xchg
sub
pop
sub
sub
cmp
fidivl
in
inc
mov
jp
out
add
jne
sub
sarl
pushf
rolb
cmp
sti
jecxz
dec
dec
loop
mov
jg
cmpsl
mov
mov
push
cmp
aad
cli
into
mov
cwtl
push
adc
mov
iret
add
sahf
sbb
dec
pop
movsb
movsb
mov
pop
mov
xchg
sub
xor
shrl
jmp
mov
inc
sbb
into
cmp
test
pop
out
clc
xor
and
ljmp
or
daa
pushl
mov
and
js
lret
or
out
es
aam
xchg
shll
imul
ja
lret
addr16
fsubr
pop
inc
aad
xchg
mov
dec
adc
add
mov
bound
pop
push
in
jp
and
dec
rcrb
cmp
jne
sub
sbbl
jp
fmul
mov
sbb
inc
pop
nop
leave
arpl
das
mov
pusha
ss
mov
out
pop
xor
jne
jg
pop
daa
mov
imul
testl
loop
jle
sub
rorl
push
pop
and
adc
push
enter
xlat
pop
ds
adc
jg
jg,pt
xor
mov
fwait
enter
gs
xchg
fs
pcmpgtd
outsl
mov
pop
movsl
pop
jp
adc
mov
cwtl
xor
pushf
out
add
push
add
cmp
dec
jge
out
sbb
pushf
jae
gs
mov
pop
stos
lret
test
aad
inc
jp
iret
dec
or
push
ret
sub
int3
cmp
cmp
lods
add
jb
repz
push
ror
das
dec
lods
inc
and
dec
and
and
or
cmp
and
fs
repz
xor
push
mov
pop
push
mov
outsl
jle
mov
mov
pop
cltd
jno
and
pop
fmull
sti
xchg
add
scas
cmpb
and
test
imulb
dec
popa
dec
and
inc
popa
cwtl
sqrtps
push
cmp
outsb
or
jo
pop
fcomi
mov
fs
add
push
shlb
add
movsl
mov
adc
int
fnstcw
sbb
fs
stos
adc
and
out
rcrl
jl
pop
xlat
bound
pushf
jmp
fucompp
rdmsr
xchg
and
in
mov
in
lds
ljmp
lret
scas
dec
mov
imul
rolb
push
or
cmp
dec
mov
sbb
rorb
adcl
pushl
mov
int3
sbb
pop
pushf
adc
in
pop
jo
push
sbb
mov
add
mov
aam
jnp
fs
cmp
or
inc
arpl
xor
mov
test
leave
sbb
pop
loopne
adc
ja
push
imul
adc
ficoml
adcb
dec
and
enter
add
inc
xchg
xorl
dec
das
in
and
out
inc
dec
cmp
rorl
ds
push
out
frstor
iret
push
in
test
shlb
in
xor
rcr
loope
cmp
push
or
shr
pop
xchg
push
ss
inc
loope
stc
sbb
scas
cmp
inc
inc
jecxz
push
inc
or
xchg
dec
push
inc
sbb
mov
mov
or
cmp
cmc
push
add
mov
std
pop
ja
pop
mov
testl
in
fucomp
add
nop
popf
dec
scas
inc
mov
stos
ret
xchg
jne
and
hlt
inc
insl
adc
cmp
or
fsubrs
es
sbb
cltd
jo
fcoml
jno
jge
pop
inc
mov
or
mov
int
xchg
sbb
xchg
mov
xchg
or
cltd
aaa
pop
pop
xchg
insb
push
cli
pop
stc
lods
pop
aam
mov
jg
roll
xor
popf
cmp
lahf
mov
ds
mov
adc
dec
adc
divb
and
and
dec
adc
inc
or
inc
jp
push
mov
movl
xor
jg
pop
pop
xor
adc
xchg
call
inc
dec
fidivs
pop
dec
xchg
mov
jg
add
adc
cmpsb
lods
jp
sbb
into
push
xchg
imul
test
pop
inc
add
pusha
aaa
dec
mov
mov
xor
xorb
dec
pop
mov
popa
call
lahf
mov
cld
xor
dec
push
xchg
stos
aad
jns
repnz
adc
or
xor
and
or
cltd
insl
sbb
outsb
inc
aas
adc
mov
push
js
fsubp
movb
xor
insl
lods
or
pop
in
and
and
jbe
or
int3
or
sahf
rol
cmc
pop
outsl
bound
add
lods
out
adc
sub
fidivrl
pop
jbe
xchg
jl
sbb
rorl
mov
adc
pusha
and
test
out
xchg
enter
out
movsb
stos
rorl
shl
lret
sub
jno
xor
xor
fxtract
xorb
push
xlat
sub
test
ret
and
jmp
aas
sbb
stc
pop
and
mov
shlb
jle
xor
test
and
mov
dec
mov
or
out
mov
fucom
xchg
ror
testb
mov
lret
and
nop
or
inc
jns
imul
or
jns
in
out
or
mov
sub
out
pusha
xlat
jmp
lods
mov
out
aam
leave
mov
push
leave
or
cmp
lret
or
ja
push
lds
sbbl
cmp
mov
or
or
xor
mov
xchg
adc
jmp
add
mov
jb
mov
inc
dec
aaa
jp
stos
push
mov
fs
cli
mov
adc
cmc
pop
aas
cli
aaa
adc
xchg
scas
xchg
imull
int3
pop
call
inc
adc
enter
and
push
out
dec
xchg
or
push
sub
mov
inc
xor
sub
std
inc
dec
int
mov
sti
pushf
cmpsl
ss
mov
jae
fidivrl
daa
or
dec
xchg
mov
subl
jle
lock
loopne
aas
mov
decl
mov
data16
pop
shr
outsl
stc
lret
cmp
lret
cmp
repnz
mov
xor
data16
fwait
andl
or
push
or
push
aad
cmp
and
mov
sub
mov
ss
imul
sbb
aas
addr16
mov
xorb
nop
movsb
bound
test
in
cmp
xchg
loop
xchg
mov
add
inc
test
xchg
aaa
test
lods
mov
inc
out
jno
push
jl
xchg
fistps
shlb
pop
repnz
sbb
ljmp
or
xorl
inc
out
cmpsl
int
adc
loopne
push
enter
out
xchg
push
arpl
mov
mov
fmull
xchg
mov
cs
in
pop
test
mov
inc
dec
and
push
cltd
sti
sbb
mov
sub
jg
ret
in
shrl
fmull
into
sbb
xor
lock
xor
cmc
mov
inc
sub
int
shlb
cmp
sub
cmp
daa
cmc
rep
imull
fs
adc
add
out
aas
cmp
mov
jmp
jl
cmp
dec
and
inc
pop
test
sub
sbb
fmulp
mov
je
lahf
adc
jp
xchg
daa
mov
and
dec
sub
sahf
and
add
stos
inc
push
mov
data16
mov
sbb
pushf
pop
push
inc
test
sahf
aam
imul
push
cmp
dec
fcoml
lods
xor
in
push
inc
cli
cmp
sub
or
loop
nop
js
xchg
push
aam
push
xor
lods
cmp
and
dec
cmp
adc
mov
lret
push
mov
pusha
stos
mov
pop
in
xor
inc
lret
mov
lret
imul
jo
addr16
and
imul
xchg
xchg
mov
popa
ret
sub
pop
bound
jnp
andb
adc
jecxz
mov
push
sbb
sub
clc
inc
push
outsb
add
mov
jae
pop
test
cmpl
jb
in
jb
lret
insb
loop
lret
mov
subb
sub
addr16
mov
fcmovnb
jge
jbe
mov
sub
pop
pop
test
ret
enter
mov
enter
loopne
xchg
xchg
adc
pop
pop
rep
lods
push
clc
int3
xor
push
or
lea
divb
cli
in
mov
jae
fisttps
lods
cwtl
sub
pop
mov
adc
xchg
daa
jp
xlat
cmp
repz
add
dec
inc
xchg
mov
clc
fbstp
dec
inc
pop
mov
mov
jno
adc
aaa
outsl
les
xor
inc
cmc
and
add
ret
lcall
inc
cmp
movsl
into
sbb
xchg
test
inc
insl
mov
aad
push
dec
sub
push
sub
repnz
push
stos
mov
loopne
sub
pop
mov
fstl
xchg
mov
mov
call
bound
lods
xchg
xchg
xchg
pop
cmp
lcall
iret
mov
ds
dec
pushf
clc
movb
std
sub
pop
stc
push
adc
mov
lahf
xchg
push
pop
pushw
pop
mov
add
cmp
sub
scas
push
out
ret
dec
xchg
jge
out
outsb
and
and
and
scas
int3
sub
leave
sub
and
into
lods
inc
lea
cmp
lods
xchg
or
fdivl
imul
mov
xor
sub
mov
inc
push
or
xchg
xorb
subb
aad
xor
sbb
or
into
aaa
cltd
xor
cmp
jl
mov
xor
iret
jbe
mov
inc
cmp
roll
pushf
pop
into
test
push
loope
sub
icebp
xchg
pop
call
add
orl
inc
xchg
rolb
jge
sub
fiadds
stc
or
mov
addl
pop
in
sub
add
jne
cld
enter
lahf
js
mov
das
mov
ljmp
les
cmp
mov
xor
loope
cld
mov
xchg
subb
shlb
cmp
cmp
or
or
mov
or
adc
sarb
inc
adc
lret
mov
stos
repz
lcall
movsl
add
pop
mov
or
push
mov
push
test
pop
jg
test
fisttps
mov
daa
lock
sbb
inc
xchg
xor
nop
cli
nop
clc
xchg
lcall
sub
jle
jne
orl
loop
in
leave
jno
xchg
int
dec
adc
arpl
cli
hlt
add
stos
dec
add
aam
pop
cmpl
out
xchg
jle
jb
out
cmc
nop
arpl
push
cmpsl
sbb
push
scas
jbe
jmp
add
lcall
pop
sub
mov
jne
sbb
or
adc
mov
mov
call
xlat
jns
inc
ss
push
in
xchg
adc
ja
stos
shlb
inc
rclb
dec
pushf
int
pop
test
inc
scas
push
adc
insl
dec
sub
in
push
nop
pop
mov
xor
insb
lcall
mov
xchg
jno
cwtl
hlt
iret
stos
sub
mov
inc
sbb
arpl
test
cmp
gs
cmpl
enter
adc
xor
jbe
cli
movsl
movsb
js
push
cmp
int
pop
sub
ret
outsl
out
mov
outsb
ljmp
jnp
pop
addl
sbb
fcmovu
adc
aam
adc
cmpsl
movsb
adc
in
sbb
xor
and
je
mov
fistl
mov
or
mov
xor
pop
mov
test
gs
dec
enter
ss
or
pop
leave
push
ja
in
cmp
lock
lea
push
test
and
push
mov
add
cmp
loop
or
in
je,pt
jb
pushf
adc
or
or
call
xchg
ds
push
shlb
cmp
sahf
or
jns
and
fimull
mov
in
mov
dec
pop
ret
out
add
push
and
cmp
test
or
out
mov
mov
lods
into
xchg
movsb
dec
dec
outsl
ja
loopne
xor
faddl
inc
fidivrl
mov
clc
or
insl
rolb
push
cmp
jne
cltd
push
pop
in
pop
pop
adc
int
shlb
xchg
pop
mov
stc
test
test
push
jbe
xchg
and
xlat
add
and
mov
stc
jno
inc
mov
add
movsb
insb
sar
xor
scas
sub
pop
repz
dec
and
enter
sti
xchg
test
pop
mov
xor
jnp
cmpsl
enter
push
out
les
fcoml
or
fs
dec
gs
mov
sub
xchg
insb
inc
fstp
jmp
aas
das
notb
mov
int
loop
mov
inc
push
fcmove
cmp
cltd
jb
xchg
fisubrs
add
xor
aaa
std
addr16
mov
fdivs
add
mov
das
ret
loope
mov
enter
movsb
adc
cmpb
mov
adc
subl
aad
insb
mov
pop
lock
mov
mov
outsb
test
comiss
imul
leave
xchg
push
leave
inc
push
xchg
stc
jp
nop
out
cltd
jb
incl
adc
mov
or
mov
jb
sti
fs
mov
es
sbb
push
jmp
cs
bound
data16
idivb
pop
mov
sahf
mov
inc
lea
cmc
jmp
jmp
aas
sar
mov
jae
push
cmp
das
mov
cwtl
and
or
leave
and
mov
movsl
xchg
adc
or
ja
es
dec
adc
outsb
or
fisubl
mov
pop
pop
pop
sbb
hlt
mov
xchg
test
ja
stos
add
test
aam
in
arpl
or
out
push
mov
cmp
orl
pusha
fs
mov
cmpl
daa
and
mov
outsl
in
rcl
aas
inc
mov
out
cwtl
insb
mov
paddusb
test
loopne
sub
sub
or
rorl
repnz
pop
mov
inc
or
pop
inc
xor
mov
xor
sub
push
subb
test
lea
and
mov
ss
pop
les
or
xlat
xchg
int
mov
in
out
fsubs
xor
js
and
cmpsl
adc
adc
int3
xchg
aam
aas
repnz
dec
mov
cmp
mov
sbb
ret
mov
push
enter
inc
fstp
movsb
pop
xchg
daa
insl
and
scas
mov
insl
inc
push
loop
pop
sbb
mov
push
xchg
testl
arpl
scas
cwtl
pop
xchg
mov
cmpsb
cmc
and
fnstenv
cmp
dec
cmp
sub
adcb
jmp
xor
orb
xor
nop
out
cmp
incb
or
aad
fstpt
xor
or
cmp
pop
out
xor
mov
inc
cmpb
add
push
aaa
mov
sbb
pop
fsts
rcll
lods
push
popa
jecxz
and
jbe
shll
scas
and
adc
into
mov
cli
xchg
or
and
inc
cmp
or
dec
fldl
and
add
mov
mov
inc
dec
mov
outsb
dec
data16
into
cwtl
daa
into
mov
or
xlat
adc
iret
dec
negb
fnsave
je
push
daa
add
xor
xor
in
testl
jno
and
pop
cwtl
rcr
outsb
call
ds
outsl
mov
cltd
inc
stc
test
or
lahf
test
loop
in
mov
test
push
fisubs
pop
cmpsl
cltd
push
cmp
out
mov
std
jns
xchg
or
mov
jmp
out
cmp
lret
mov
cmc
pop
out
pop
adc
fisubrs
xor
add
sahf
sahf
sbb
pusha
mov
jmp
and
xor
fs
aas
out
jne
add
dec
pop
cmp
mov
push
cltd
addb
push
push
inc
or
in
scas
adc
fildl
outsb
dec
fstps
ljmp
out
mov
cmp
test
in
xor
in
std
or
mov
das
xlat
jne
imul
stc
insl
icebp
leave
ljmp
mov
inc
xor
lods
daa
ror
cli
rclb
int
das
stos
dec
insb
imul
lock
cmpsb
out
ror
and
sbb
cmp
dec
addr16
nop
ljmp
push
xchg
gs
hlt
lds
fstps
cs
push
sti
push
shrl
in
and
add
call
xor
jne
ss
cwtl
inc
xlat
sub
ret
in
pop
jg
clc
mov
lods
insb
or
push
ret
jmp
ret
imul
test
push
adc
js
add
xchg
xchg
fxam
and
lods
inc
adc
cmp
push
xor
cmp
stos
cltd
mov
dec
leave
cmpsl
ja
inc
dec
or
ret
push
cmp
lret
aad
mov
mov
lds
leave
lds
sbb
clc
lock
lret
inc
and
sub
cmc
in
pop
xchg
jge
movsl
or
xlat
xor
mov
mov
xor
orb
cmp
push
dec
int3
mov
cwtl
fistps
xor
aad
cmp
pusha
pushf
mov
add
sbbl
sbb
push
in
sub
sub
xchg
cltd
jno
mov
mov
mov
shll
xor
push
lret
sub
popa
das
cmpsb
loope
and
sbb
scas
mov
pop
push
xchg
popa
in
cmp
or
or
inc
xor
and
mov
stos
aaa
leave
and
mov
jo
or
popa
adc
jp
mov
fbstp
sti
outsl
ja
icebp
mov
inc
sbb
cmp
mov
mov
loopne
rcrl
push
fdivrs
pusha
add
out
bound
inc
cmc
or
push
repnz
cmp
mov
enter
xor
js
pushf
sbb
jecxz
xor
xchg
testb
pop
into
popf
and
ljmp
stc
int3
sbb
mov
js
mov
cmp
roll
mov
pop
jmp
leave
fdivs
cld
or
adc
jl
or
out
jmp
adc
lret
je
imul
cmpsb
clc
test
test
jp
fs
in
and
sbb
mov
xlat
dec
push
in
sbbb
testl
sahf
imul
cmp
rolb
lahf
pop
xchg
mov
or
lods
shlb
sub
addb
xlat
rcl
leave
data16
shl
hlt
sti
mov
push
jg
rclb
xchg
inc
jo
sbb
pop
popf
push
add
fiaddl
adc
adc
test
loopne
jb
mov
mov
jae
in
mov
xor
mov
sub
sahf
dec
pop
push
shrb
aaa
pushl
push
dec
mov
push
cwtl
shl
push
dec
mov
ds
cmp
mov
jle
sub
cltd
cmp
mov
jge
mov
pop
xor
push
add
fcompl
int3
push
push
fucom
fidivrl
gs
call
mov
aaa
cwtl
cmp
mov
nop
sub
cltd
std
jp
add
xor
push
scas
pop
cmpsb
add
mov
test
fnsave
cwtl
iret
test
int3
add
decl
add
xor
mov
shl
push
jnp
xchg
test
ljmp
scas
jmp
loop
dec
fwait
into
or
push
jmp
xchg
test
pop
lock
test
dec
pop
repnz
insl
testb
and
and
mov
movsb
and
sbb
mov
dec
lods
sbb
lock
pop
daa
movsb
orb
gs
mov
rorl
lods
push
add
out
mov
jge
je
aam
std
lds
sbb
je
sbb
xchg
imul
or
adc
push
lahf
jnp
xor
in
fadds
xchg
ljmp
xor
dec
ret
jmp
shlb
cmpl
mov
xlat
rcrl
pop
ret
int3
fcoms
inc
inc
packssdw
data16
xchg
std
test
aaa
dec
daa
inc
push
out
mov
and
stos
inc
dec
aaa
shrl
repnz
adc
outsl
jne
mov
into
into
push
sbb
cmp
xor
mov
icebp
inc
std
mov
mov
adc
xchg
xor
in
int3
pop
je
dec
lds
pushf
and
in
inc
sti
sbb
xor
ficoml
cmp
cs
fisubs
movsb
mov
dec
sub
into
or
sbb
jmp
lahf
or
jmp
mov
test
sub
mov
mov
arpl
test
in
push
xor
adc
loope
sub
xor
xor
xorb
pushf
mov
gs
lds
lcall
mov
lahf
repz
xor
in
into
fwait
cld
ret
mov
bound
repnz
hlt
dec
incl
mov
pop
pop
xor
dec
arpl
mov
push
or
push
hlt
mov
and
and
out
cmpl
rorl
xor
rcl
sysexit
sub
les
jmp
sub
mov
andl
inc
lret
cmpsl
and
loope
xchg
jecxz
fs
mov
lock
and
les
insb
imul
stos
and
es
mov
test
pop
dec
xor
movsl
pop
pop
fsubrs
inc
cmp
xchg
mov
xchg
jo
iret
add
sbb
sbb
push
das
and
scas
cmpb
aas
in
xchg
and
lods
call
cmc
push
mov
outsl
faddl
movsl
sub
in
mov
xor
stc
mov
test
jae
out
add
or
in
xor
lret
addr16
repnz
adc
cltd
pop
scas
in
xchg
cmpsl
gs
inc
or
sub
mov
sub
jne
enter
jae
mov
inc
ret
jnp
cmpsl
or
xor
dec
icebp
fisubl
add
popa
pushf
xchg
idivl
cmp
xchg
xchg
test
jo
inc
les
mov
leave
push
popa
sub
mov
mov
dec
pop
stos
inc
pop
repnz
es
cmp
fcmovne
repz
das
addr16
xchg
xor
mov
mov
cmpsl
loop
outsw
cmc
data16
movsb
xchg
lahf
pop
sbb
adc
xchg
and
aad
stc
cmpsb
mov
pop
xlat
push
cmpsb
lock
add
mov
es
fdivrl
sbb
mov
cmpsl
pop
call
push
fcomp
xchg
xor
loope
cwtl
cmp
mov
js
call
lock
add
fisttps
xchg
ds
stos
xchg
fwait
test
mov
sub
loope
jl
enter
fsubr
pop
add
push
and
pop
inc
inc
popf
insb
dec
test
pusha
in
mov
imul
xor
lea
jns
and
clc
leave
arpl
jl
std
mov
jne
out
jne
dec
fldl
jle
lcall
sar
fwait
mov
jne
popf
daa
pop
pop
dec
add
fsubrs
mov
imul
mov
repz
aam
bndldx
rorl
rol
jno
mov
lea
int3
mov
insl
data16
iret
and
divb
mov
imul
frstor
stc
cmc
adc
mov
insl
pop
out
or
clc
sub
fbld
xchg
lea
sbb
mov
aaa
cmp
xchg
add
rorl
xor
stos
test
cmpsb
pop
clc
pusha
xor
xchg
test
lea
stc
sub
clc
sub
cmp
or
push
mov
dec
xchg
jge
insb
add
unpcklps
movsb
cmp
mov
jecxz
inc
xchg
mov
js
jp
mov
sub
stc
fnsave
and
mov
add
ljmp
xor
insl
dec
in
add
mov
mov
stos
or
pushf
xchg
negb
sub
sbb
fiaddl
lods
mov
add
adc
or
jmp
adc
pop
leave
sub
dec
cmp
sbb
scas
push
mov
sahf
push
or
and
sbb
mov
fildl
pop
add
jo
pop
adc
mov
inc
loop
push
movsl
add
mov
into
lea
pop
stos
mov
cmpsb
pop
xchg
lock
aas
dec
repnz
aad
lcall
and
dec
ret
inc
mov
xor
mov
imul
push
into
inc
pop
xchg
rep
mov
pop
mov
mov
dec
pop
push
fistpl
xchg
xchg
jg
sbb
sub
sbb
add
dec
dec
ja
lcall
into
inc
stos
push
lods
xchg
cmp
sub
shrb
daa
adc
loope
std
mov
inc
call
mov
clc
xor
jecxz
or
sub
mov
or
inc
sub
xor
mov
jmp
cmp
sbb
stc
jle
call
outsb
inc
test
jno
sahf
mov
scas
xchg
les
mov
xor
mov
divb
inc
mov
cltd
iret
jmp
xor
insb
push
jg
loopne
mov
dec
cltd
lcall
in
and
or
mov
sbb
sbb
stc
jne
cmpsl
loope
and
sub
es
mov
cmp
cltd
inc
ret
out
sbb
jmp
cli
cwtl
fistl
adc
inc
loopne
adc
jo
data16
xchg
jecxz
mov
mov
inc
test
jge
notl
into
sbb
jg
cltd
sbb
pop
jne
sti
bound
mov
mov
popf
lea
dec
das
cli
mov
add
insl
xor
mov
stc
dec
insb
bound
fdivrp
cli
and
or
cmp
sahf
jl
xchg
push
jmp
in
aam
aad
xor
dec
jl
or
out
adc
sub
xchg
mov
push
mov
fmul
mov
pop
push
cmp
pop
jnp
push
mov
cltd
sub
jg
stos
aas
cmpsb
cwtl
pop
pop
outsb
arpl
push
ds
imul
cmpsb
shlb
mov
lods
sti
sbb
add
and
dec
ret
aam
cmp
js
push
stc
outsl
or
jns
sub
insl
aas
xchg
cmp
add
pusha
scas
nop
cmp
cmp
add
push
sbb
popf
out
outsb
or
fmull
pusha
mov
push
test
jle
cmp
push
jecxz
je
dec
icebp
push
jg
inc
cmc
shll
xor
ja
add
mov
call
add
lret
cli
fnstenv
cmp
insl
pop
nop
stc
mov
mov
psllw
dec
insb
fidivrs
fwait
mov
std
sbb
shl
sub
push
test
and
adc
jb
dec
dec
push
push
gs
pushl
std
inc
mov
pop
loope
or
and
les
lock
sbb
inc
mov
xchg
mov
lock
aaa
test
mov
in
lahf
or
mov
ss
sub
icebp
or
cmpb
mov
int3
sub
loop
pop
movsb
pop
enter
inc
dec
cmp
mov
andl
push
fs
mov
inc
int3
jno
nop
stos
or
xchg
test
xor
push
adc
cmpb
inc
ljmp
mov
jp
dec
mov
outsb
into
addr16
loope
sahf
mov
icebp
inc
mov
or
icebp
cmp
sbb
out
movl
popa
mov
loopne
xchg
gs
jl
loop
lahf
mov
enter
mov
sbb
test
fists
push
add
mov
fdivr
pusha
cli
out
icebp
adc
inc
adc
insb
cmp
xor
mov
int
js
imul
dec
fsubp
cmpsb
data16
jmp
lock
dec
bound
fbld
hlt
pop
test
bound
inc
and
testb
movsb
cld
mov
iret
and
add
mov
stc
sub
mov
push
iret
test
mov
daa
mov
test
aad
cmpsb
dec
mov
daa
imul
es
and
call
cmp
adc
mov
push
inc
call
mov
mov
dec
in
test
rcrl
sbb
or
dec
dec
iret
hlt
xor
and
cmp
ja
shlb
sbb
negl
dec
mov
out
cmp
out
rcrl
jnp
in
loopne
mov
das
es
dec
loope
shll
push
rep
dec
mov
imul
push
fidivs
leave
add
repz
or
mov
notb
cltd
jecxz
push
pop
cmp
outsb
cmp
imul
fidivrs
mov
mov
int3
test
or
xor
lods
repnz
or
push
cmp
inc
jp
or
ret
call
loope
inc
mov
jmp
adc
mov
mov
pop
push
lcall
out
xchg
pop
rcl
int3
in
mov
test
sub
dec
cmp
aas
repnz
or
pop
out
mov
repnz
outsb
insb
jo
mov
mov
in
inc
lcall
push
int3
sbb
and
mov
into
and
cli
decb
js
sbb
mov
jnp
xchg
aad
xor
inc
pop
rorb
cmp
out
push
hlt
jns
xchg
and
push
jle
adc
mov
jmp
bound
in
sbbl
clc
sbb
mov
mov
fimuls
xchg
xor
aaa
daa
insl
in
and
scas
xchg
cli
dec
test
cmp
inc
andb
jo
mov
xchg
loope
cld
cld
mov
mov
ret
mov
mov
fidivs
es
in
adc
int
test
xor
movsl
pop
mov
loopne
sbb
in
mov
lahf
xchg
jb
rorl
shll
movsl
pusha
dec
jl
jmp
ja
xchg
mov
and
pop
inc
lds
sub
jo
mov
popf
lods
jnp
jo
inc
push
or
lock
add
and
insb
or
stos
add
push
inc
mov
iret
xchg
ret
loope
lock
shlb
cvtps2pi
sbb
push
lahf
pop
jecxz
cmp
adc
shl
xchg
out
mov
or
fcmovnu
and
sbb
dec
jecxz,pt
je
call
loop
and
lea
call
push
fwait
xor
adc
cmpsl
xchg
arpl
shrl
xchg
mov
cmpsl
push
xor
repz
pop
push
jl
xchg
mov
push
cmc
xchg
das
xor
je
cmp
aaa
lds
bound
fcoml
sub
je
or
adc
rorb
or
add
jb
xor
outsl
adc
adc
jne
in
push
cwtl
pop
push
or
mov
outsl
sarl
repnz
lods
mov
je
inc
mov
hlt
loopne
ljmp
cmpsl
cltd
outsl
popf
insb
div
bound
cmc
mov
sub
mov
adc
repz
stc
out
and
pusha
inc
cmp
xchg
mov
pop
jnp
ror
arpl
adc
stc
or
leave
adc
fidivrs
insb
repnz
imul
aas
dec
dec
ret
js
sbb
cmp
in
cmpsb
insl
mov
jbe
pop
fisubl
jnp
cmp
jae
mov
sub
out
sub
out
pop
lret
lock
fisubs
test
mov
cmp
jmp
cltd
dec
pop
repz
xchg
add
ja
push
cmpsb
sbb
jo
fimuls
push
jmp
adc
mov
push
adc
dec
shll
aad
iret
mov
das
jbe
dec
pop
arpl
mov
mov
test
dec
mov
add
mov
addr16
rcrl
lea
sbb
jecxz
std
push
in
or
pop
jle
lock
mov
inc
sub
xchg
movb
lods
and
xchg
cmp
dec
notl
je
xor
jle
fistps
dec
in
cmp
arpl
aam
rep
mov
sarb
and
sbb
int
push
arpl
call
lods
clc
inc
enter
ss
and
fidivrs
mov
cmp
add
xor
mov
popf
jp
lock
mov
loope
sub
or
popf
int3
sbb
int3
repz
icebp
js
pop
cmpsb
push
and
call
cmp
xchg
xchg
jl
pusha
loope
ss
pop
dec
fsubrs
push
decl
fwait
test
adc
mov
or
fildll
mov
shll
xor
fists
insl
int
fsubl
pop
pop
clc
or
insl
add
sub
sub
mov
stos
inc
sbb
insb
xchg
mov
push
int
add
lret
mov
xor
push
pop
mov
and
or
and
jg
cs
or
lock
push
je
gs
pusha
orl
jmp
dec
es
aad
dec
fldenv
in
shrb
lock
pop
jmp
daa
mov
ss
sub
outsb
scas
incl
enter
cmp
mov
xchg
popa
inc
or
pop
mov
and
filds
sarl
sbb
or
out
lret
sbb
nop
inc
testl
imul
movsb
int
sahf
cmp
push
popa
lret
inc
shll
pushf
xchg
das
scas
adc
imul
mov
mov
sbb
sub
push
arpl
scas
xchg
dec
mov
pop
bound
cmc
jmp
and
pop
fnstcw
push
out
dec
lds
lds
out
mov
jg
mov
inc
and
pop
mov
pushf
addr16
mov
mov
dec
cs
dec
or
jle
mov
mov
and
push
pop
pop
mov
insl
sub
pop
insb
xor
unpckhps
out
sub
mov
push
inc
jns
popf
into
jb
sub
pop
jbe
push
test
xlat
xchg
ds
xlat
into
mov
mov
xor
jg
jbe
aas
mov
cli
ljmp
jne
xchg
mov
xor
add
test
mov
mov
xchg
xchg
xor
push
jnp
add
push
lods
jo
repnz
inc
sbb
imul
fwait
or
jmp
xchg
pop
sub
jno
pop
add
jns
ja
mov
push
sbb
aaa
mov
or
cmp
fists
and
mov
jg
imul
mov
mov
popa
jmp
lret
mov
adc
mov
adc
mov
in
fwait
inc
mov
mov
shll
ljmp
in
aas
mov
push
push
ret
hlt
or
roll
add
test
dec
push
jns
outsl
xchg
add
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
popf
aas
jp
or
addr16
loopne
test
xchg
mov
loop
add
mov
pop
mov
add
and
sahf
ret
or
or
pop
jge
mov
fcoms
adc
cmpsl
add
xchg
sarl
mov
std
inc
ja
xchg
shlb
gs
mov
pop
outsb
data16
dec
insb
icebp
mov
xchg
cli
les
aad
movsb
add
adc
add
scas
movsb
imul
or
fwait
lock
pop
cwtl
cmc
mov
int
push
or
xchg
enter
adc
mov
xchg
inc
imul
xchg
xlat
jmp
add
inc
sbb
out
push
push
fs
fdivrp
mov
call
cmc
jnp
push
iret
lret
push
or
clc
iret
clc
pop
or
test
cs
add
jle
repnz
xchg
sahf
clc
add
xor
jne
fldl
icebp
push
repnz
sub
test
rcrw
ljmp
mov
dec
or
xchg
rcrb
repz
insb
aad
xchg
jg
mov
movsl
in
push
fcoms
js,pt
stc
pop
xchg
pop
loopne
jl
add
out
scas
out
or
pop
pusha
lahf
sub
cltd
jnp
out
pop
xchg
mov
aam
adc
lcall
mov
pop
and
hlt
das
pop
aaa
add
cmp
adc
arpl
xor
movsb
das
pop
rorl
cmp
out
cmp
lcall
pop
push
and
mov
jge
das
dec
push
sub
mov
or
xchg
ficompl
push
and
xchg
jecxz
lret
dec
jne
test
dec
cwtl
rcll
ja
out
sarl
dec
pop
loop
es
stc
outsl
gs
in
jmp
je
adc
cmp
sbb
push
loop
sub
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jae
add
outsb
add
