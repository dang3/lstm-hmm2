mov
shl
rcr
and
xor
ror
cmp
jne
not
mov
mov
mov
mov
xchg
shl
xor
xor
neg
rcr
jmp
rol
mov
ret
shr
shl
rol
call
shl
mov
and
lea
add
push
push
call
cmp
jne
push
mov
sub
pusha
mov
mov
adc
rcr
push
cmp
je
jmp
xor
mov
rcl
rcr
mov
mov
xor
cmp
je
jne
not
mov
mov
mov
mov
shr
ror
rcl
popl
neg
rol
mov
xor
cmp
je
jmp
mov
lea
lea
lea
mov
rcr
mov
adc
mov
mov
cmp
je
jmp
xor
mov
lea
mov
lea
ror
lea
xor
push
cmp
je
jmp
lea
popa
leave
call
call
neg
cmp
jne
add
lea
mov
not
not
mov
xor
movl
not
jmp
xchg
add
xchg
and
not
mov
neg
rcr
decl
jne
cmp
je
jmp
xor
xor
lea
ror
xchg
not
mov
mov
xor
not
lea
push
push
pushl
pushl
call
jmp
rcr
ror
adc
neg
xor
lea
mov
mov
cmp
je
jmp
mov
lea
lea
lea
shrl
mov
mov
mov
cmp
jne
lea
mov
neg
xor
lea
mov
cmp
je
jne
shl
neg
xor
mov
mov
jmp
rcr
neg
mov
rcl
xor
lea
xor
lea
cmp
jae
rcr
not
xor
mov
xor
xchg
xor
xor
cmp
je
jmp
mov
xor
xor
movl
xor
lea
neg
lea
mov
lea
jmp
lea
xor
mov
xor
rcr
mov
not
xor
rcr
xchg
xor
neg
call
cmp
jae
mov
neg
lea
rcl
xor
cmp
je
jmp
xor
mov
cmpsl
or
mov
cmp
aas
adc
call
push
mov
mov
cmp
repnz
lock
shll
enter
adc
adc
xor
call
sub
in
into
popf
and
push
inc
insb
popf
or
pop
sub
int3
out
outsb
sub
mov
arpl
fldcw
jo
stos
arpl
rolb
lea
in
mov
shl
leave
movsl
or
mov
fimull
push
and
lahf
stc
mov
es
sbb
ret
enter
push
ret
rclb
rorb
ror
popf
dec
cmp
or
movsl
sub
clc
std
fwait
arpl
int
xchg
jmp
mov
or
add
rclb
inc
inc
pop
pop
add
or
cmp
cmpsl
mov
add
loop
mov
or
call
data16
mov
movsb
sub
xor
je
in
sti
call
scas
add
inc
pop
pop
xor
mov
in
cmp
sub
js
pop
mov
scas
int
dec
pop
pop
popf
cmp
movsl
mov
dec
lods
repz
cmpsl
call
ffreep
xchg
shlb
idivl
xlat
out
sti
lea
cmp
in
in
mov
jbe
inc
pop
popa
mov
xor
jo
mov
arpl
ss
stos
mov
imul
push
inc
jo
sub
mov
mov
dec
mov
idivb
pushf
and
push
arpl
mov
cwtl
idivl
ds
xchg
pop
ss
adc
jo
pop
jmp
mov
in
lcall
xchg
sarb
nop
dec
dec
jp
push
pop
or
cld
out
loopne
sub
loop
mov
or
cld
mov
add
imul
jl
jae
lret
neg
imul
pop
rcl
ret
leave
in
in
mov
shlb
sub
test
add
dec
xor
sub
loopne
jns
imul
repnz
out
imul
in
cmp
or
cld
pop
or
lret
loopne
sub
nop
pop
dec
xchg
cmp
push
xchg
ds
sub
xchg
push
pop
into
popa
inc
shrb
jl
mov
inc
gs
mov
cmpsb
imul
cmp
imul
mov
adc
jecxz
sub
dec
aas
call
jl
xchg
negb
ret
imul
ret
adc
fadds
aas
jle
out
mov
enter
dec
adc
sub
and
loop
in
jle
or
pop
add
add
negb
cmc
lods
or
in
jle
or
mov
add
stos
cmp
cwtl
cwtl
or
push
sub
loopne
fnstsw
sub
dec
or
cmp
adc
loopne
sub
sub
inc
loopne
sub
and
jl
xchg
rcr
jno
or
pop
loopne
lock
or
cmp
and
jge
das
loop
cld
lods
arpl
add
loope
cmp
or
cmp
or
dec
and
arpl
push
jle
jge
pushf
imul
or
iret
push
or
mov
lret
push
push
ret
aam
repz
ret
out
pop
ret
aam
adc
add
adc
jne
and
and
pop
imul
int
pop
mov
stc
pop
ret
dec
mov
jno
jge
je
clc
imul
or
cmovae
jl
push
pop
cltd
das
or
aas
mov
subb
sbb
loopne
inc
or
aam
negl
ret
mov
pop
stc
jl
sbbb
hlt
and
iret
popl
ret
lret
test
ss
loopne
cwtl
imul
sub
out
negb
pop
test
stc
jl
push
gs
sub
loopne
cwtl
arpl
jl
arpl
inc
ret
scas
push
ret
aam
movsl
enter
mov
mov
scas
push
ret
aam
arpl
dec
loopne
scas
add
cmp
pop
mov
movsl
hlt
pop
ret
adc
out
mov
mov
or
pop
mov
dec
divb
pop
arpl
push
jnp
xchg
xor
es
cmp
loope
ret
mov
dec
filds
imul
inc
mov
add
addr16
push
push
ja
push
push
dec
aas
test
push
add
inc
daa
subb
sub
pop
in
or
and
sub
and
addb
mov
sbb
popf
xor
lods
mov
fsubp
notb
push
dec
loope
rcl
imul
outsl
imul
push
call
lret
jecxz
and
dec
dec
push
aam
hlt
pop
ret
and
xchg
aaa
jge
insl
sub
negb
mov
sbbb
pop
or
sub
push
add
jmp
cld
xor
or
insb
jns
pop
and
or
negb
data16
mov
mov
add
addr16
and
xor
inc
arpl
sub
mov
add
mov
loopne
mov
subb
ret
xchg
xchg
pop
orb
dec
and
xor
or
sub
jmp
mov
add
mov
sub
fcmovne
pop
ret
imul
push
imul
jl
mov
or
in
inc
dec
mov
fcomi
pop
ret
mov
sbbb
mov
or
cmp
pop
call
cmp
adc
cwtl
leave
loopne
sub
xchg
xor
jg
aaa
fnstsw
xchg
and
xchg
sub
dec
call
cmp
sti
push
sarb
or
daa
andb
jle
fldcw
out
sub
test
pop
std
imul
mov
mov
or
and
sub
push
out
lock
jp
ret
aam
fsubs
xor
pop
sub
cld
sub
call
cli
frstor
mov
lock
push
push
xor
dec
inc
ljmp
push
rorb
cmovp
pop
into
xchg
out
dec
insb
daa
ret
and
jns
dec
out
daa
out
jl
xor
sbb
ss
leave
cmp
and
or
bound
mov
cmp
or
jae
or
mov
mov
pop
xor
data16
sbb
imul
adc
lret
test
shlb
push
and
xchg
jae
dec
gs
adc
push
push
or
out
outsl
dec
mov
test
cmc
xchg
mov
ret
addr16
imul
aaa
sti
scas
rolb
cmp
daa
mov
jge
cltd
std
into
shlb
enter
hlt
dec
inc
jnp
lahf
mov
movsl
or
and
mov
inc
inc
insb
ljmp
push
pop
aaa
into
adc
jp
jae
mov
addr16
imul
sub
sbb
and
mov
pop
enter
aaa
stc
aaa
rep
lods
xchg
imul
sub
cwtl
sbb
test
movsl
lock
push
sub
push
loope
imul
inc
movsl
in
mov
push
and
pop
inc
sbb
sbb
andb
xchg
jno
jecxz
add
pop
popf
fldcw
sub
shll
rcrl
adc
ret
pop
mov
push
xchg
push
movsl
dec
lods
pop
arpl
xor
xor
fmull
aad
add
xor
fs
push
popa
push
sub
movsb
sbb
or
sub
imul
xor
jo
cmp
insb
and
sub
adc
mov
xchg
loope
cs
add
xor
fadd
imul
sub
push
sub
sub
in
jl
cmp
mov
lret
jecxz
cmpsb
dec
and
lret
pop
imul
repz
cli
daa
fstpt
out
mulb
cltd
daa
push
adc
adc
repz
stos
scas
repnz
jne
pop
divb
das
add
sub
jae
mov
cmp
push
add
sub
push
and
mov
clc
push
sub
xchg
aam
push
push
cmp
dec
mov
mov
mov
clc
mov
sub
in
into
jmp
add
mov
and
in
outsl
jecxz
adc
rorb
xor
and
inc
jecxz
loop
mov
ret
pop
lret
insb
scas
xchg
in
and
popa
je
ret
push
sbb
sbb
nop
out
pop
fstpt
lahf
in
stos
push
inc
loope
push
sti
les
daa
icebp
mov
cmp
stos
jl
lods
out
xor
xlat
adc
cmp
or
adc
int
gs
mov
cmpsl
rclb
lcall
pop
dec
call
ret
or
mov
adc
int
cld
push
lcall
and
popa
ret
popf
cmp
out
jg
es
roll
cmp
mov
pop
cld
rorl
mov
jge
xor
arpl
mov
stos
sub
sub
aam
inc
mov
imul
push
mov
cltd
pop
pop
xchg
and
xchg
mov
inc
pusha
lea
jle
leave
push
andb
aad
dec
imull
sbb
call
pop
test
xor
sti
rdpmc
sub
cltd
push
cmp
std
jge
loop
sbb
jp
test
out
jp
iret
jecxz
push
mov
jecxz
in
push
sub
xchg
inc
pop
xlat
mov
cmc
xchg
jecxz
leave
cmp
clc
sbb
decb
mov
lock
xor
call
adc
hlt
movsl
add
adc
xchg
xorb
rorl
aas
xor
and
and
rorb
mov
inc
and
add
pop
out
dec
pop
xchg
push
jg
repz
faddl
das
jecxz
mov
aam
pop
pop
or
mov
mov
stos
and
js
or
ljmp
or
pop
adc
mov
mov
fwait
jmp
mov
test
mov
sbb
and
mov
and
jg
xchg
add
sar
test
mov
pop
dec
mov
cld
lcall
jg
test
shrb
inc
mov
dec
push
xor
adc
inc
pop
mov
repz
pop
jb
pop
jge
leave
insl
test
shrb
aad
and
gs
in
ret
sbb
add
adc
in
mov
fildll
fcompl
mov
inc
pop
jecxz
out
mov
inc
ds
sub
sbb
and
pop
xchg
cmp
add
imul
add
add
mov
aam
mov
pushf
mov
nopl
popaw
scas
cwtl
shll
pop
mov
paddq
hlt
jno
andb
ds
je
insb
cmp
out
mov
pusha
sbb
rcrb
cld
leave
fidivl
adc
in
ficomps
add
mov
cmpsb
jae
add
sbb
rorl
inc
jbe
into
jns
inc
sub
shrb
cld
jg
inc
and
stc
xor
and
fnclex
pop
push
sbb
mov
jns
sbb
pop
push
fs
loopne
cmpb
sbb
rclb
mov
test
jb
icebp
xor
push
cwtl
je
mov
push
popa
adc
xchg
or
stc
ja
insl
pop
push
sbb
enter
pusha
add
cmp
push
add
pop
inc
test
jae
mov
ss
test
scas
popa
sbb
cltd
imul
mov
iret
sbb
or
psrad
into
add
sti
arpl
mov
jbe
adc
clc
sub
or
clc
test
out
jno
cli
mov
sbb
iret
test
pop
inc
lock
ret
inc
jle
push
jno
js
lods
inc
mov
fdivl
jle
adc
mov
cwtl
xchg
jns
popf
mov
sub
ficompl
scas
fsubrl
cwtl
ficomps
arpl
sarb
mov
test
dec
ds
pop
jne
mov
mov
daa
sbbl
ret
sbb
js
ljmp
sarb
je
adc
dec
and
arpl
mov
pushf
das
and
mov
adc
sub
mov
ds
push
sub
dec
cmp
lock
data16
xor
push
in
lret
cmpsb
mov
xchg
add
sbb
lret
push
jbe
in
dec
adc
jecxz
daa
push
test
mov
pushf
xor
scas
sbb
jb
xchg
aad
test
dec
sub
sbb
push
daa
aas
sub
sarb
loopne
pushf
add
popa
cmc
sub
int
and
jmp
xor
in
stos
xorb
test
in
leave
cmp
loope
xchg
cltd
adc
fbstp
inc
pop
pop
int3
imulb
and
scas
jno
ret
cmp
and
or
mov
es
jo
lret
jl
jge
push
out
or
out
add
pop
aad
jnp
pop
adcl
js
or
and
es
pop
jns
and
or
push
add
cvttps2pi
ljmp
mov
xchg
dec
cmp
sbb
test
insl
add
test
pop
cwtl
in
mov
es
adc
test
push
xorl
test
pop
inc
push
je
inc
out
clc
adc
aas
mov
scas
sub
sbb
or
sub
sbb
nop
inc
sub
rcrb
sti
dec
add
pop
in
mov
cmpsb
sbb
jge
lsl
fsubs
ja
jmp
pop
imul
add
mov
test
or
nop
xchg
stc
inc
lods
cmp
test
insb
jo
pop
xchg
cmpb
loop
push
sarb
mov
dec
jno
int3
hlt
push
xor
mov
sarl
sub
cmp
jle
fsubrs
and
cld
jnp
mov
test
xlat
add
and
out
sub
jns
dec
out
sbb
jns
pop
into
cli
xor
jp
mov
int3
enter
vmread
xlat
sub
pushf
xor
in
cld
xchg
push
sub
cld
ret
add
adc
icebp
or
sub
sbb
jmp
jge
mov
ret
stc
xor
cmp
bound
xchg
insl
xchg
rol
lahf
test
test
mov
push
jno
add
aam
mov
fidivs
cmp
or
dec
push
mov
ljmp
gs
sbb
outsl
xchg
mov
and
push
jbe
daa
pop
mov
xor
pop
add
dec
shrl
mov
testb
nop
sbb
add
mov
xchg
ljmp
ja
movsl
and
aaa
ljmp
mov
jecxz
loop
or
mov
mov
jl
divb
adc
sub
or
lods
leave
ss
sbb
imul
test
out
clc
int3
push
in
push
push
sbb
cmc
push
rolb
sub
jb
in
mov
mov
ljmp
push
sarl
dec
mov
jb
addr16
dec
ljmp
mov
icebp
in
iret
mov
shrl
mov
mov
aad
fisubrs
pushf
loop
mov
sub
clc
or
jecxz
call
insb
sbb
icebp
or
aad
arpl
push
outsl
scas
inc
in
mov
popa
gs
bound
ss
or
xchg
outsl
dec
pusha
fs
jl
fwait
add
imul
inc
sub
xor
sbb
xchg
push
sub
push
popa
popa
jns
pop
je
stos
sbb
and
ss
or
push
inc
leave
outsl
and
mov
mov
and
imul
inc
mov
pop
test
pop
iret
sbb
pop
mov
imul
mov
mov
lret
pop
pusha
rcll
call
dec
fs
cmp
jae
dec
sub
or
nop
cs
and
loopew
mov
push
ljmp
and
and
cld
jmp
es
push
jno
sbb
mov
pop
daa
movsl
mov
inc
inc
insb
and
dec
movl
and
insl
mov
lods
mov
jecxz
pop
dec
js
das
stos
xchg
outsb
leave
jge
pop
arpl
mov
dec
pop
cld
sbb
ja
cmp
sbb
xor
sub
sub
xchg
and
sub
das
ret
sbb
and
xlat
mov
mov
fcomip
aaa
clc
je
sub
sbb
movsl
add
hlt
add
sbb
test
push
xchg
xor
xchg
sarl
test
into
jbe
xor
orl
in
xor
cltd
pop
mov
lods
insl
cmp
repz
stc
sub
hlt
cmp
or
inc
sub
fmulp
ljmp
mov
je
shl
cmp
and
lods
push
scas
pop
and
cltd
sub
loopne
and
sub
mov
and
aam
push
cmc
push
mov
add
jno
mov
jno
or
insb
lds
dec
push
pop
add
mov
popa
lea
stc
inc
xor
sbb
psubusw
adc
das
lds
imul
mov
call
cmp
jbe
push
js
fwait
arpl
sti
mov
fcmovne
out
sub
xor
add
mov
and
addr16
adc
xor
inc
shr
cmp
mov
sub
fcmove
pop
jecxz
ficomps
sbb
mov
add
dec
pop
in
in
std
scas
sbb
and
dec
push
loopne
mul
loopne
and
xchg
sahf
fstps
pop
cmp
or
scas
cli
leave
xor
cwtl
sub
or
xor
bound
fs
loop
mov
pusha
cwtl
mov
jmp
sbb
pop
adc
les
mov
push
fs
rorb
lock
push
movsl
pop
jle
sbb
sub
leave
sahf
sub
dec
fsubrl
fs
push
add
sysexit
lods
ds
cmp
mov
insl
mov
lods
add
addr16
scas
rclb
subb
outsl
cmpl
add
shll
jge
cmp
sub
fsts
sbb
mov
push
jo
imul
stos
sbb
and
inc
fnsave
hlt
aam
cmp
sahf
xor
sub
adcb
push
call
inc
insl
mov
push
sub
sub
out
loop
rcl
and
enter
and
shrb
ds
es
jge
xchg
in
rolb
rclb
xchg
jnp
andl
mov
mov
aam
mov
add
pusha
sti
aad
sub
insb
jns
leave
aam
nop
jo
mov
or
or
ss
mov
pop
loope
jge
push
push
inc
clc
and
dec
sbb
and
iret
mov
ss
ja
cmp
add
mov
sub
or
insb
cli
inc
xlat
cmp
cwtl
mov
add
mov
clc
or
test
roll
push
lret
iret
lods
cmp
and
das
dec
test
cld
sub
das
xchg
das
pop
add
mov
push
mov
dec
xchg
or
mov
sub
cwtl
jns
cli
xor
ret
mov
or
das
xor
xor
cmp
out
rcl
mov
jae
data16
lret
out
sub
add
or
clc
mov
xor
ret
jo
jle
mov
test
aam
adc
fimuls
fnstsw
or
xor
outsb
cltd
cmp
sub
mov
jmp
cmp
cmpsb
sub
pop
imul
into
inc
lods
inc
xor
scas
push
popa
clc
rcr
call
cwtl
mov
jl
push
cs
lahf
popa
cmpsb
lds
fwait
jle
shll
enter
pop
cltd
insl
lcall
adc
repz
aad
out
inc
dec
push
fcompl
push
inc
pop
or
je
cmc
in
movl
mov
scas
pop
insl
out
movsb
or
daa
std
repnz
mov
mov
jmp
mov
repz
inc
nop
mov
je
push
xchg
push
mov
ss
fsubl
add
call
in
dec
fs
dec
xor
pop
push
cli
call
shll
sub
pop
mov
in
jg
lods
scas
sub
imul
ja
lahf
and
sbb
pop
les
out
adc
arpl
shll
jns
ss
xor
inc
negb
imul
push
les
inc
and
push
dec
sbb
daa
push
adc
mov
lods
mov
push
je
inc
jnp
lahf
ljmp
out
test
lods
jo
dec
fnsave
sbb
int3
xchg
aam
out
hlt
inc
inc
mov
cmp
cmp
daa
sbb
sub
jmp
aaa
add
or
into
cs
nop
pusha
and
pop
into
cmpsb
and
cs
and
imul
into
mov
cld
fs
lock
sbb
hlt
jmp
jge
sub
xchg
xchg
insl
cmp
adc
fiaddl
add
sub
sahf
cmp
stos
add
inc
mov
or
int
leave
adc
mov
movsl
mov
ret
dec
pusha
mov
sbb
mov
cmpl
dec
and
subb
mov
ljmp
rolb
adc
mov
push
test
xor
inc
sbb
mov
mov
mov
push
test
out
out
andb
aaa
clc
enter
stc
xor
dec
adc
out
negl
mov
lock
cmp
jle
pop
adc
or
xchg
xchg
mov
or
es
repz
cmp
rcrb
loope
mov
test
punpcklwd
sub
in
mov
inc
pop
fdivrl
dec
mov
ljmp
and
pop
fdivl
rclb
sbb
lcall
or
mov
ljmp
icebp
divb
lods
fcoml
shl
ret
push
cli
add
aad
xchg
push
adc
xchg
or
push
arpl
mov
aaa
inc
push
pop
xchg
adc
jge
ror
lea
add
xchg
inc
add
jnp
sbb
jmp
aaa
adc
aam
movsb
sbb
jge
imul
popa
jnp
ss
and
push
adc
fwait
mov
lret
xchg
jle
pop
xchg
pop
fdivs
mov
leave
pop
mov
dec
test
fcomps
fsubrl
int3
lds
inc
imul
sub
lret
lret
daa
inc
xor
add
xchg
jbe
or
adcl
out
push
and
sbb
cmp
je
jl
cmpsb
push
inc
add
sbb
rcll
xchg
das
adc
std
lock
mov
loop
push
cmpl
sar
xor
cld
enter
mov
scas
fld
lods
jo
push
or
mov
arpl
mov
repz
mov
mov
sbb
aaa
rorl
out
mov
pop
push
pop
in
mov
mov
sbb
les
aaa
mov
test
leave
push
and
and
rorl
scas
dec
adc
sub
cmp
dec
int3
and
ljmp
fsts
hlt
ficomps
jge
mov
or
or
outsl
incb
lock
insl
xor
test
in
dec
xchg
and
xchg
inc
scas
arpl
xchg
dec
pop
mov
mov
cmp
sarb
adc
and
fsubr
push
jmp
cmp
push
cmpsb
dec
pop
mov
cmp
cli
jnp
repz
lods
imul
ds
cmp
stos
repnz
sbb
icebp
push
repnz
sub
sub
and
mov
je
mov
test
push
loop
repz
loopne
sub
xchg
les
insl
cmp
pop
pusha
or
push
icebp
pop
add
call
aad
out
repz
cmp
mov
ret
mov
push
and
rorl
lea
sbb
inc
xchg
pop
and
icebp
aas
jle,pn
aad
add
loop
xchg
cmp
xor
sbb
push
mov
scas
pop
je
inc
loopne
stos
fildl
push
sbb
mov
jb
lea
or
scas
loope
lret
shll
jp
pop
repz
jns
xor
outsl
push
lret
cmp
inc
aas
or
pop
gs
inc
stos
xor
inc
or
outsl
xor
fsubrs
insl
scas
icebp
adc
pop
or
cmp
pop
pusha
jns
jmp
loope
fs
movsb
xchg
dec
sahf
pop
call
mov
dec
mov
and
outsl
dec
xor
inc
sub
gs
and
aam
jnp
orl
add
lock
cs
fisubrl
xor
or
test
cmp
lcall
in
pop
aad
lea
add
dec
mov
pop
sbb
fwait
ss
test
jle
ficoms
scas
lock
mov
cmp
mov
mov
inc
sub
in
je
inc
cmpsb
mov
xchg
pop
xchg
repnz
js
cmp
je
jns
lock
or
sbbl
xor
pop
cmp
push
mov
out
cli
add
in
aam
xchg
ss
inc
ds
dec
lock
cs
xor
aad
xor
lret
enter
stos
or
pop
and
lds
shlb
lea
xchg
sub
sub
ffree
aam
mov
fldt
std
shrb
dec
arpl
dec
sarb
movsl
cmp
pop
sahf
lcall
aaa
cmc
fcmovnb
aam
or
fidivrs
movsl
and
mov
pushf
das
aaa
in
or
inc
cmp
inc
lods
mov
add
or
out
sti
clc
inc
adc
adc
hlt
xor
mov
cltd
xor
mov
adc
out
sbb
outsl
mul
push
adc
sub
je
push
xor
mov
and
inc
arpl
jecxz
dec
or
sub
sub
outsb
push
pushf
push
xlat
insb
mov
xchg
and
and
lcall
push
pushf
mov
dec
pop
xor
fsubl
dec
pop
scas
and
sub
out
lahf
pop
mov
push
imul
insl
lret
pop
jmp
sub
enter
mov
lods
loopne
shl
sahf
xchg
jp
loopne
add
mov
inc
nop
push
xchg
sti
leave
fildll
add
lret
fistpl
xor
and
rorl
mov
jl
sti
test
fstl
lret
shr
inc
mov
stos
pusha
cmp
rcr
test
dec
loopne
mov
adc
inc
mov
divl
pop
mov
pop
shrb
adc
aad
cltd
or
stc
mov
imul
test
cld
jg
insb
add
pushf
mov
lock
cli
out
sbb
mov
sub
clc
push
jl
int3
jb
pusha
pop
cmp
notb
and
push
mov
and
cmp
std
mov
push
cmp
icebp
out
push
adc
stc
sbb
ret
or
mov
loope
jp
jo
sti
std
in
pushf
or
insb
ret
les
in
push
aas
cmp
ss
dec
repz
aad
cmp
out
jle
and
xchg
int
or
sub
jns
cwtl
and
outsb
mov
roll
testl
orl
xchg
mov
add
loop
pop
mov
add
jle
sbb
lret
dec
lahf
ds
imul
dec
mov
lret
pop
movsl
pusha
sub
dec
inc
push
test
pop
mov
pop
mov
sub
imul
in
pop
insb
shl
xchg
enter
jp
sub
clc
das
mov
ja
cmp
fst
cmc
mov
lods
int
add
jmp
and
cmpl
sbb
imul
aam
jmp
in
ret
stos
jno
scas
fcmovnu
xor
repz
sbb
jbe
cltd
dec
fbstp
sub
sarb
loopne
repz
insl
ljmp
gs
jmp
adc
ljmp
rcll
or
pop
xor
ss
aaa
test
cld
dec
cmp
fwait
sub
adc
add
in
xor
inc
fdivr
xchg
movsb
push
fildl
push
push
repnz
sbb
xchg
mov
inc
sbb
xchg
sub
sub
in
sub
jae
call
enter
jmp
cmp
call
adc
mov
aas
or
jns
xlat
push
adc
popa
mov
xor
jmp
cmp
or
in
sub
imul
jnp
xchg
and
mov
aam
aam
call
mov
and
and
xlat
out
subl
sbb
push
mov
fsubs
pop
mov
sub
push
adc
xchg
add
stc
lock
cmp
fld
rorb
xor
mov
fwait
cmp
popa
int3
pop
inc
adc
mov
and
loope
sbb
lea
xchg
mov
jbe
sub
inc
sti
xchg
or
into
or
mov
ds
xchg
jo
les
push
mov
fstpl
sbb
cmp
xor
test
dec
push
add
mov
outsl
inc
mov
insb
or
rclb
push
and
mov
mov
ret
inc
jo
or
cmp
push
jo
int3
cmp
cwtl
outsb
jp
rolb
push
inc
jecxz
ss
rcl
dec
xor
pop
and
dec
mov
dec
in
and
outsb
bnd
pop
and
popf
adc
pop
std
in
cmp
pusha
das
cltd
mov
mov
mov
loope
cmp
mov
sbb
jnp
add
lahf
xchg
push
pop
inc
cs
push
andl
loope
pop
sbb
mov
test
dec
adc
subb
mov
mov
inc
pop
push
xor
das
popa
mov
aam
lods
jo
xor
daa
add
pushl
xchg
leave
sbb
pushf
lea
mov
sahf
notl
dec
add
jb
mov
sbb
jmp
data16
andb
mov
xchg
hlt
adc
jecxz
imul
inc
scas
push
gs
mov
int
mov
leave
mov
aas
jge
push
xlat
loope
aam
sbb
out
dec
or
insl
xchg
test
sub
subb
mov
popa
sub
out
dec
and
or
aad
pop
mov
pop
imul
insw
jnp
lret
repnz
jae
movsb
xchg
mov
ret
in
xlat
sbb
sbb
add
adc
cmc
lds
mov
aad
or
jle
fldl
sahf
xor
loop
mov
sbb
stos
push
push
or
cmpsl
scas
aam
outsl
fwait
adc
adc
push
mov
mov
test
inc
cmp
jnp
inc
mov
adc
mov
ret
add
mov
cltd
dec
xor
add
aad
idivb
in
add
or
jge
gs
xchg
mov
fldt
loope
jle
fcoms
std
jmp
adc
push
cmp
push
mov
cmp
outsl
or
dec
mov
add
sub
iret
pop
and
test
ret
mov
jmp
in
mov
mov
dec
xchg
add
fwait
std
fisttpll
jbe
add
cld
jge
adc
push
lock
push
pop
sahf
and
or
add
test
push
jge
dec
stos
mov
aam
aad
mov
lret
mov
lds
daa
add
or
xor
inc
test
push
lret
pop
cmc
js
and
or
pushf
xor
je
inc
or
loope
adc
or
pop
aas
sbb
pop
icebp
stc
adc
xor
daa
cmpsb
das
call
repz
inc
push
ja
and
mov
sub
push
jne
inc
or
pop
xor
into
idiv
in
repnz
fucomi
sbb
roll
sbb
rorl
sbb
mov
inc
push
mov
pop
in
aam
test
sub
jecxz
imul
xchg
mov
adc
add
fmull
cmp
outsl
outsl
aas
test
and
adc
mov
rorl
cmpsl
cmc
jle
cmp
cmp
cmp
pop
shr
jns
jnp
jp
inc
inc
ret
xor
cltd
iret
les
stos
bnd
xlat
cmc
popa
jge
jmp
sub
mov
xor
mov
push
add
adc
or
stos
out
jge
push
sbb
fsubs
dec
call
sbb
and
add
dec
gs
sbb
loop
dec
test
inc
lds
or
jns
add
and
leave
sbb
imul
sbb
mov
je
adc
cmp
dec
movsl
and
std
out
and
js
pop
fs
sub
xlat
sbb
dec
clc
hlt
mov
popa
scas
cmp
into
mov
sbb
aam
pusha
data16
cs
lock
lcall
sbb
cmpsb
jge
cmp
leave
lcall
or
and
dec
rclb
adc
call
jb
sbb
jnp
push
aam
jns
sub
jb
jns
out
sbb
push
mov
mov
mov
dec
cmp
loope
ss
cld
xchg
ret
shlb
rcrl
icebp
cmpsl
dec
push
mov
repz
jl
cmpsb
jmp
xor
cld
repz
hlt
aad
fsubrs
insl
fwait
add
stos
inc
shlb
and
pop
sbb
dec
and
fsubr
es
std
dec
add
mov
cli
mov
pop
incl
daa
das
or
mov
call
cmp
popf
ds
decb
add
out
pop
mov
inc
inc
movsb
stos
jb
mov
and
xor
aam
and
lcall
jb
sarl
sub
sbb
std
nop
cmp
call
cmp
jg
aaa
bound
ret
push
div
sbb
imul
ljmp
jl
cmp
dec
sub
or
rorl
jl
jbe
fstpl
aam
adc
imul
out
cmp
pop
dec
pslld
imul
std
fdivrl
or
popf
ret
xor
adc
stos
aas
roll
sub
mulb
mov
lcall
jno
mov
imul
pop
enter
ljmp
fidivs
jp
movsl
jge
adc
cmp
jmp
pop
jae
test
sub
dec
cwtl
loop
pop
push
addr16
sbb
icebp
and
push
and
xchg
lods
mov
ja
int3
test
loop
lret
mull
dec
into
movsb
ds
idiv
and
imul
rol
repz
movsl
cltd
pop
mov
mov
mov
xchg
in
or
xor
ret
add
pusha
lds
or
jns
push
jns
add
sub
stc
in
mov
xor
push
in
mov
ljmp
icebp
mulb
fstl
cmp
test
ja
insl
popf
sbb
pop
lret
rorb
frstor
lret
fcmovnb
or
or
jle
nop
out
jbe
jno
mov
rcll
push
or
push
xor
int3
cmp
into
lock
dec
in
jns
sub
outsb
test
mov
and
sar
mov
loop
and
jecxz
testb
xlat
ret
dec
arpl
mov
loopne
ret
ret
and
pop
adc
in
push
negl
es
or
loop
mulb
or
je
mov
fdivl
mov
jo
mov
sub
adc
or
lock
mov
xor
cmpb
jmp
lods
pop
int
jnp
or
xlat
mov
add
push
inc
js
lret
repnz
pop
mov
scas
or
add
jmp
cmp
sbb
push
pop
mov
xor
aas
sbb
jge
or
adc
daa
pusha
outsb
add
sub
int
or
mov
mov
mov
mov
cmp
imul
adc
mov
pop
fidivrs
push
mov
lcall
mov
mov
pop
test
mov
mov
lods
test
repz
adc
xor
and
and
inc
or
idiv
and
shlb
xchg
push
push
lods
not
rolb
out
and
push
xor
addr16
add
sub
jl
sti
jb
jb
mov
sub
or
test
inc
repnz
rcl
adc
in
lcall
push
shl
jnp
mov
sbb
xchg
ds
mov
jne
push
dec
sbb
and
fs
cmc
pusha
sub
xor
inc
xor
xor
scas
stc
pushf
bnd
cmp
out
aaa
inc
xlat
mov
xor
into
cmpb
push
sbb
std
shrb
outsb
pusha
lds
outsl
cmpsl
pop
imul
cmc
test
daa
mov
ja
sub
add
mov
xor
inc
inc
mov
mov
bound
fnstcw
xor
cmp
arpl
cwtl
pop
nop
jl
and
add
lret
loope
sub
aaa
fdivr
or
adc
push
and
xchg
out
shrl
pushf
mov
leave
adc
and
mov
psrad
shlb
js
or
pop
jl
mov
jmp
xlat
sub
out
and
cmc
and
dec
cmpsb
pop
add
cmp
sub
pusha
testl
sub
data16
and
out
jp
insl
mov
cmp
call
mov
enter
ror
scas
into
inc
xchg
jle
mov
push
jp
shl
cmpsl
pop
mov
out
and
pop
aam
pop
addr16
ljmp
mov
inc
jl
mov
lret
or
lods
addr16
test
daa
loopne
jl
loopne
dec
mov
in
mov
loope
sbb
xchg
lods
mov
je
loopne
stos
fwait
inc
xchg
aad
add
in
ret
adc
sbb
add
pop
mov
push
out
adc
movsb
mov
pop
and
push
lret
rclb
sbb
jns
arpl
cwtl
add
aam
insb
out
js
or
jg
je
sub
pop
fstps
lea
das
add
or
hlt
inc
repnz
leavew
hlt
sub
loope
mov
xchg
sub
sub
loopne
jbe
cmp
sub
sbb
popf
push
sbb
lret
xor
add
aaa
in
add
aaa
out
add
out
dec
rcrl
push
xchg
mov
cmpsb
jecxz
int3
ss
xlat
xlat
outsb
sbb
call
sub
out
push
jle
xor
fcoms
pusha
xorl
jno
mov
mov
loop
add
adc
sub
fidivrs
ds
sbb
scas
in
dec
in
insb
or
ret
ds
jmp
push
or
fdivrs
mov
jmp
mov
ja
xchg
xor
enter
imul
sahf
arpl
or
repnz
add
pop
faddl
fisubs
inc
dec
fs
dec
in
mov
cmpsl
cmc
pusha
xlat
pop
ret
aad
and
mov
or
adc
je
jmp
es
xchg
xlat
add
cmp
cmp
cld
and
repnz
add
or
sbb
jg
std
clc
ret
cwtl
imul
icebp
divb
push
and
insl
inc
and
mov
and
icebp
mov
das
and
std
push
int3
in
sub
add
mov
jp
sub
lock
adc
add
adc
ljmp
jns
xor
sbb
and
cmp
push
sbb
lahf
enter
mov
and
inc
jp
lock
xchg
jp
rcrb
jmp
adc
adc
or
sub
sub
cmp
sub
mov
cmp
cmp
cmc
dec
cmp
into
call
sub
lods
and
inc
xchg
adc
int
jnp
hlt
mov
push
jg
pop
call
sbb
test
outsb
lret
aam
cld
movsb
outsl
mov
jl
aad
dec
icebp
sub
jae
call
aas
sbb
add
outsl
test
add
das
add
dec
test
or
scas
sbb
mov
aam
cmp
cmove
jnp
enter
fcoms
add
mov
cmovs
adc
xchg
mov
mov
iret
cld
fwait
dec
out
sub
shrl
sbb
mov
lret
cs
xchg
das
dec
dec
pop
jno
cmp
jp
pop
mov
inc
les
or
push
std
lcall
jno
movsb
mov
jg
jno
or
fldl
clc
insl
mov
lret
mov
ret
imul
andb
push
or
mov
mov
pusha
aas
or
orl
pop
loopne
cmp
xor
ja
and
imul
mov
inc
iret
push
xor
and
jns
or
pop
mov
push
stos
sub
dec
add
aam
cmp
mov
aas
cmp
dec
roll
das
rorb
xor
sarb
sti
dec
enter
fcom
and
roll
dec
cmp
sbb
sub
dec
cld
mov
gs
jo
test
rol
xor
xor
add
in
push
xchg
jnp
or
jg
sub
xchg
lahf
sbb
jl
or
into
mov
nop
rcrb
lods
gs
and
adc
mov
loopne
inc
das
stos
mov
and
movsl
stc
daa
and
mov
dec
and
mov
imul
pushf
jno
or
in
jg
hlt
add
mov
iret
inc
push
mov
add
movsl
lcall
jo
out
jge
add
mov
ljmp
mov
xor
inc
repz
and
mov
push
jecxz
adc
mov
loope
sbb
lds
cmp
sbb
aas
enter
xor
ret
xchg
and
lret
lahf
int3
xchg
jmp
cmc
or
psubq
fdivs
scas
negb
cmp
adc
std
and
mov
inc
inc
inc
stc
and
mov
xor
enter
loope
in
mov
jmp
mov
loop
out
bound
fmull
jnp
test
push
add
add
movsl
in
add
adc
add
push
lea
sub
loopne
sub
jbe
push
inc
pop
stc
stos
and
sbb
push
stos
adc
stc
lret
repz
add
jle
cmp
ficoms
pop
rclb
hlt
movsb
sub
in
fistpll
mov
add
hlt
pop
or
inc
xor
xchg
jbe
sbb
pop
pushw
div
xchg
pop
mov
rcll
jb
inc
mov
mov
les
mov
and
jmp
mov
sbb
sub
icebp
xor
in
pusha
sbb
jnp
jge
jns
push
jg
icebp
test
incl
cmp
xchg
pop
int
imul
xchg
les
fmul
das
popa
arpl
adc
flds
sbb
cmp
cmp
bound
xor
inc
daa
and
jmp
inc
adc
pop
aas
sbb
outsb
mov
loope
das
rclb
cs
in
scas
xchg
cmp
mov
and
jg
loope
cld
call
lds
rorb
jo
inc
aas
mov
xorb
aam
adc
dec
dec
ss
movsl
and
or
sub
or
xor
fwait
rorb
xchg
mov
dec
lea
sbb
or
fwait
push
push
jl
sbb
ss
add
lret
pusha
push
add
or
cmc
sub
std
and
xchg
push
cmp
jnp
xchg
clc
xchg
sbb
sbb
or
in
push
std
mov
and
fcmove
shr
jne
dec
pop
ds
insl
mov
dec
mov
jo
int
aam
sbb
add
es
lret
mov
insl
jg
push
mov
pop
add
add
cmp
or
jle
pop
sbb
adc
leave
insb
jge
les
sbb
adc
mov
mov
popa
or
test
fisubs
dec
cmp
pop
pop
loope
das
dec
fnstsw
mov
add
pop
xor
and
je
jmp
jbe
mov
aam
shll
dec
mov
je
mov
cmpsl
lods
jns
sbb
pusha
incl
xchg
push
int
out
nopl
test
sti
jge
push
inc
adc
insb
dec
mov
fs
jge
and
lret
imull
filds
xchg
cmp
or
popa
stc
xchg
ret
inc
sub
mov
stc
xor
xor
sarl
es
add
adc
pop
inc
repz
sbb
inc
loope
adc
int3
pop
sbb
daa
lock
mov
test
shll
xor
inc
jns
