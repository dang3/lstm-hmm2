sbb
add
mov
cmp
aaa
les
dec
sti
pop
jecxz
mov
xchg
cli
and
mov
pusha
aam
daa
and
nop
push
add
inc
mov
xchg
xor
push
adc
ret
lea
inc
jno
ja
xchg
mov
cmp
hlt
xchg
pop
inc
and
push
lea
pop
pop
mov
cmp
xchg
dec
and
nop
insl
mov
sub
jns
inc
es
jecxz
iret
lock
shll
inc
add
outsl
xchg
enter
ret
xor
mov
sbb
mov
testb
repnz
pop
dec
in
fdivl
mov
xlat
jnp
mov
ljmp
cld
xor
push
push
cmp
cmc
jle
nop
imul
jp
mov
out
dec
or
stos
mov
jae
mov
cmpsl
aaa
push
rcrb
ret
jecxz
inc
cmp
lea
stc
mov
adc
pop
jmp
xchg
mov
xchg
mov
sub
push
pop
negl
dec
popf
sub
jns
mov
fbstp
aas
mov
adc
outsl
dec
jmp
sbb
loope
push
jp
inc
push
sahf
leave
aam
rorb
adc
mov
orl
inc
mov
lret
ficompl
mov
adc
xchg
lret
ljmp
jmp
movsl
inc
lret
stos
xchg
pop
mov
ja
clc
xor
adc
je
add
xor
gs
hlt
and
icebp
movsb
and
das
push
pop
out
xchg
repz
call
xchg
pop
adc
add
int
pop
lock
mov
sub
jmp
shr
mov
int3
ret
daa
xchg
fadds
or
inc
fsubs
dec
mov
std
xor
add
clc
xlat
jno
mov
sbb
je
fcomps
push
cmp
fisubs
dec
and
xor
fmull
add
cmp
int3
add
push
into
es
mov
inc
rorl
push
fmuls
pop
ljmp
sbb
js
popa
or
dec
cmp
inc
sbb
cmpsl
aam
mov
jb
in
in
xchg
push
icebp
jmp
aas
xchg
roll
cli
or
test
cmp
push
imul
adc
cmpsb
mov
adc
pop
outsl
inc
add
stos
ret
movsl
xor
insb
in
int
jnp
sub
inc
mov
cmp
xchg
cmp
mov
xor
jl
popa
adc
push
xchg
aaa
jno
or
mov
mov
sbbb
movsl
pop
fmul
js
in
add
cmpsl
out
cmp
insb
daa
pop
movsb
mov
dec
imul
frstor
jno
test
mov
nop
adc
push
in
dec
pop
mov
xor
mull
stc
les
cwtl
lea
icebp
inc
ja
inc
test
and
inc
xor
jge
adc
call
hlt
repz
xchg
jne
pop
fisttpll
out
data16
stos
lods
and
pop
test
and
fyl2xp1
cmp
lea
in
xor
pop
shll
ljmp
imul
jae
ret
movsl
add
ja
mov
rol
mov
xchg
jle
add
fistpll
fldl
rorl
das
mov
cmp
out
inc
adc
sbb
push
dec
add
xchg
or
pop
popa
lods
xor
dec
xchg
jp
cmpb
sub
xor
add
jge
dec
leave
lcall
and
aad
ljmp
movsb
pusha
jb
lea
jae
dec
movsb
sbb
lods
out
hlt
jecxz
fistpl
icebp
adcb
xor
adc
push
mov
adc
bnd
and
clc
add
out
cmp
push
push
scas
cmpsb
andl
insl
pusha
lock
sarb
popa
aas
jecxz
push
bnd
mov
insb
adc
out
push
movsl
mov
or
mov
pusha
and
icebp
mov
cld
jnp
js
mov
mov
in
xor
repz
jmp
push
sub
sahf
outsb
ss
mov
pop
jp
or
out
into
out
inc
in
push
cltd
or
mov
sbb
jns
xchg
incb
notb
ret
in
out
push
rcrb
xchg
out
and
int
adc
push
inc
pop
inc
out
fsubs
movsb
xchg
pop
push
push
rorl
cwtl
or
lea
jnp
shlb
data16
into
loop
inc
xchg
pushf
adc
call
out
call
loop
loop,pn
subb
aad
insl
clc
cs
mov
mov
js
call
push
loope
out
jns
pop
push
nop
dec
sub
cmc
mov
scas
add
ffreep
sahf
in
dec
mov
and
aad
sub
imul
lret
sbb
cmp
fimull
cmp
dec
add
fimuls
mov
lods
mov
lahf
pop
mov
dec
adc
ljmp
lahf
and
iret
div
cmp
mov
sahf
decb
adc
pop
xchg
push
dec
cmp
jge
fsubrs
dec
cmp
bound
scas
mov
call
lock
adc
pop
add
sti
ja
shrl
mov
mov
movsb
jle
outsb
cmp
or
fildl
int
push
into
gs
mov
les
mov
adcl
lea
push
bound
mov
movsl
xlat
mov
mov
adc
xchg
cli
out
loope
xor
ljmp
mov
outsl
mov
add
or
insb
cltd
sbb
outsl
xchg
cmpsl
std
daa
pop
mov
cmpsb
rclb
mov
clc
jno
xchg
and
stc
xchg
lock
dec
dec
sub
or
div
push
sarb
adc
or
outsb
dec
insl
arpl
push
jge
mov
call
es
jae
and
cmp
fs
jne
jbe
dec
idivb
jo
dec
jmp
push
nop
lret
mov
push
ret
outsb
xchg
mov
adc
add
mov
sbb
sbbl
sbb
ret
push
and
ret
xor
gs
inc
xchg
les
and
pop
js
movsb
adc
xor
mov
fucomip
inc
fcomps
in
loope
or
fstps
test
aaa
pop
scas
daa
js
mov
jg
pop
std
in
xchg
add
fstpt
add
popa
dec
jo
jg
ret
cmpsb
in
dec
push
mov
push
scas
std
mov
sbb
or
pusha
mov
and
adc
push
mov
into
xchg
cmp
and
xchg
and
mov
cmp
add
lahf
aam
sbb
hlt
mov
adc
push
jns
sub
sti
mov
int3
nop
mov
sbb
enter
lods
cwtl
out
shlb
ret
mov
out
xor
xorl
scas
fmuls
orl
inc
popf
push
dec
jge
mov
dec
xlat
push
data16
pop
fsincos
cmp
add
mov
adcb
xor
pop
cli
jle
negb
rcrl
dec
sbb
pop
repnz
outsb
iret
sub
les
sub
cwtl
jno
jmp
adc
lods
mov
ljmp
mov
pop
jnp
mov
cmp
inc
jb
leave
cmp
pop
push
loop,pn
sbb
icebp
mov
bound
sti
test
pop
xor
xor
or
in
enter
xchg
sub
popa
add
cmp
adc
push
enter
rcll
sbb
pop
pop
sbb
repz
xor
xor
mov
push
leave
hlt
mov
jne
jo
jmp
add
push
movsb
xor
sahf
inc
mov
sub
into
icebp
sub
inc
notb
xchg
loope
cmp
adc
cmc
fldt
cmpsb
or
pop
adc
gs
sub
cmpsl
ljmp
mov
pop
nop
js
or
fstl
stc
negb
fmull
enter
js
cmp
arpl
shr
push
stos
jne
ljmp
push
xchg
inc
sub
xchg
cs
inc
xchg
mov
xchg
mov
pop
xor
enter
lods
pop
sti
sbb
and
push
sahf
fsubr
cli
dec
movsb
or
pop
inc
xchg
mov
add
ficompl
pop
mov
out
jo
icebp
gs
lea
pushf
push
xchg
popa
lods
daa
lahf
and
stos
mov
std
or
shlb
inc
add
ja
mov
lea
call
sub
sbb
cmp
add
dec
ljmp
sbb
add
sub
inc
shr
aaa
and
jecxz
data16
xor
adc
add
test
iret
add
cmp
insb
jb
sub
mov
lods
jnp
mov
cmp
mov
mov
or
jb
icebp
xchg
jo
jns
pop
pop
call
cmp
cmp
shl
pop
inc
scas
mov
enter
dec
leave
jnp
jno
sub
ja
scas
push
mov
xchg
cld
test
mov
dec
xchg
hlt
in
cli
sub
sub
cwtl
sub
bound
jae
xor
xor
mov
xchg
xchg
adc
nop
xchg
cmp
je
test
cli
mov
push
sub
mov
aam
xor
and
adc
stc
and
sub
sahf
loope
cld
dec
shrl
mov
mov
cmp
pop
mov
sub
bound
out
test
sub
mov
lret
fnsave
inc
xchg
loope
jmp
sub
push
aas
cmp
and
xchg
mov
mov
xchg
repz
mov
das
jp
in
push
add
mov
adc
addr16
mov
pop
dec
jecxz
adc
add
mov
push
mov
pop
xor
test
in
adc
out
adcl
ja
xchg
loop
push
mov
lcall
roll
clc
cs
in
mov
push
add
adc
jl
lcall
xor
add
pop
mov
sub
ds
sub
jbe
jbe
sub
sub
rorl
pop
pop
loope
fdivl
leave
test
out
xchg
add
xchg
jecxz
jle
mov
sub
or
dec
out
jb
and
sbb
inc
xorb
ds
push
dec
lock
pop
and
or
jbe
js
and
gs
sbb
jle
sahf
mov
fdivr
aam
push
push
sbb
mov
jmp
sub
pusha
movsl
cmc
adc
cmpsl
pop
add
ret
fdivrs
sbb
pop
inc
adc
push
dec
pusha
fdivp
sti
subb
pushf
lret
mov
add
dec
dec
sub
mov
lock
jnp
mov
push
xlat
jl
pop
imul
cwtl
not
mov
pop
lods
fnstsw
sahf
setno
cmc
cmp
mov
pusha
dec
fistpll
and
mov
mov
fsub
repnz
adc
inc
fucomp
push
repz
and
in
mov
lcall
push
xchg
ss
lret
icebp
mov
lods
lcall
enter
sbb
xor
jo
jb
stos
pushf
push
imul
lret
mov
mov
add
or
sahf
scas
ret
push
movsl
mov
mov
bound
jnp
dec
aas
mov
mov
cld
les
pop
mov
int3
sub
mov
outsl
pusha
aad
mov
sahf
or
addl
sbb
imul
mov
test
push
pushf
cmp
popf
inc
xchg
inc
ljmp
daa
in
insl
cmp
pop
in
je
adc
int3
inc
xchg
jmp
dec
aaa
repnz
pop
fsub
stos
das
lret
lea
mov
mov
mov
daa
inc
scas
or
mov
pop
repnz
lock
nop
cmpsb
scas
popa
icebp
out
cmpsb
adc
pusha
inc
and
mov
dec
roll
in
sbb
pop
sbb
jmp
lret
sub
push
scas
adc
int
fwait
imul
jnp
mov
int
sub
xor
and
push
mov
xchg
add
dec
jge
cmp
cs
sbb
out
xor
inc
in
orl
bound
gs
mov
jle,pt
adc
push
shl
sbb
lods
aas
mov
sarl
xor
xchg
movsb
lahf
adc
mov
sbb
mov
aas
lret
and
popf
int3
mov
leave
dec
dec
imul
push
rorb
ljmp
adc
clc
xchg
roll
pop
dec
nopl
inc
hlt
xor
aam
add
mull
mov
add
outsb
aas
mov
stc
sbb
sbb
rorl
inc
into
scas
jno
ret
sbb
addb
jg
sub
sbb
ret
shlb
daa
dec
cld
mov
push
fsubl
lret
xlat
add
jnp
fidivs
dec
xchg
fmuls
cmc
mov
dec
repnz
jne,pn
add
lahf
dec
inc
ljmp
daa
fdivs
ljmp
sbb
or
sahf
fsub
ljmp
push
dec
leave
push
jmp
cmc
das
fnstcw
iret
ja
ds
fbld
aaa
jno
je
xchg
enter
int
out
and
push
lret
mov
cwtl
js
mov
xor
push
es
lret
jl
dec
inc
out
sahf
xlat
push
push
mov
lea
popa
and
push
lcall
xor
imul
lock
int3
ljmp
cmp
lea
push
and
mov
inc
clc
repnz
push
mov
mov
adc
or
push
sub
xchg
es
xor
mov
cmp
data16
push
and
flds
lock
or
movsb
out
gs
pop
push
inc
sarb
inc
daa
loop
mov
je
add
cmp
lret
push
inc
fcomp
or
push
xor
sbb
mov
sub
pop
dec
pusha
das
loope
and
mov
adc
adc
xor
dec
jo
inc
and
push
fiadds
xchg
rolb
enter
or
fistps
inc
push
or
negl
xchg
xchg
jnp
sbb
adc
mov
fcmovnu
adcl
clc
addr16
cmpsb
test
rcl
mov
jae
insl
inc
adc
insb
js
daa
daa
mov
adc
fs
or
shlb
push
jnp,pn
dec
scas
mov
jno
xchg
jnp
std
cmp
ret
xchg
xor
mov
mov
dec
xor
mov
jp
xchg
test
dec
imul
xor
pop
fistps
sbb
cmpl
sbb
pop
jge
flds
cmp
das
ss
sbb
int
jecxz
sub
movl
cmp
cli
orb
xchg
mov
dec
xchg
addb
out
mov
orb
and
jp
pusha
dec
gs
ret
lds
faddl
xchg
or
lahf
stos
pop
jle
stc
inc
cwtl
mov
jno
adc
push
mov
into
insb
sbb
add
and
dec
cwtl
push
pop
dec
mov
xor
mov
pop
repz
cmp
inc
ljmp
dec
gs
and
in
ror
mov
push
pop
ret
push
mov
in
mov
push
sti
xchg
test
add
cmp
mov
aas
jle
invd
sub
out
dec
dec
push
mov
xor
pusha
xchg
mov
idivl
mov
push
pushf
sbb
call
cmp
jno
sti
inc
daa
mov
dec
xchg
jb
pop
mov
add
jne
xchg
int3
dec
xchg
fisttpl
je
xchg
js
mov
adc
enter
add
fs
add
lock
push
pop
aas
ss
into
add
xchg
test
push
adcb
and
popf
pop
jbe
fwait
rorb
cltd
ror
cltd
rol
add
loope
inc
jl
add
ss
push
push
es
sahf
xlat
lahf
or
lret
aaa
push
dec
mov
sub
push
ds
fldpi
test
mov
mov
inc
xor
push
sti
decb
mov
out
and
xchg
gs
sub
xor
cmp
xchg
fdiv
push
adc
sub
cld
cmp
enter
ret
nop
or
fimuls
addl
dec
jae
ret
cli
int3
bound
test
mov
jp
mov
mov
dec
pop
inc
sarl
pop
mov
out
out
fldcw
pop
fs
jae
insb
cmp
fldcw
cwtl
insb
sub
xchg
add
ss
dec
test
cmpsb
xlat
jmp
popa
loopne
mov
or
xor
inc
xchg
lock
xor
loope
iret
sbb
mov
mov
cmc
cs
dec
xchg
mov
mov
sub
pop
mov
sbb
push
pop
sbbb
das
add
pop
sbb
mov
cmp
adcb
cmc
mov
inc
sahf
je
cmc
adc
adcb
es
or
push
adc
mov
push
xor
push
and
movsb
ret
push
into
pop
dec
jno
test
inc
pop
outsb
in
mov
dec
xchg
cmp
orl
mov
adc
or
sub
loopne
mov
push
mov
gs
xlat
dec
je
push
mov
sbb
adc
mov
mov
daa
arpl
cmp
pop
adc
fnstenv
stos
dec
bound
std
int
rorb
mov
push
pop
mov
cmp
mov
pop
sahf
dec
xor
cmp
adcl
sahf
sbb
or
push
outsl
movsb
xor
scas
popa
loop
add
push
daa
and
loop
inc
mov
inc
jp
push
dec
stos
sarl
jl
ja
stos
mov
inc
fbld
int
jns
xchg
call
mov
sti
insl
lods
jb
cmp
and
fistpll
scas
sahf
or
jp
repnz
mov
push
scas
bound
in
mov
xlat
xchg
or
rcr
xchg
pop
test
and
cltd
xchg
sbb
mov
xchg
insb
and
xor
xor
lret
loopne
jnp
sub
pop
into
cli
sub
mov
out
cmp
dec
shl
scas
insl
ret
clc
mov
jno
ss
jecxz
pushf
mov
nop
inc
std
mov
das
mov
jl
push
dec
inc
sarb
es
add
outsb
test
in
popl
stos
and
frstor
test
ret
test
pop
jne
xchg
lret
daa
fadds
sub
jbe
xor
test
jl
sub
cmp
pop
fs
mov
jg
les
cmp
inc
jg
imul
sbb
lods
cmp
cmp
jns
sub
lea
bts
icebp
xlat
in
mov
push
loop
fcomps
rcll
add
cmpsl
sar
cmp
sub
sahf
stos
lcall
and
or
dec
arpl
or
lahf
cwtl
adc
jne
jo
aas
mov
nop
in
xchg
or
ret
jbe
sub
lahf
mov
std
scas
movb
fstpl
mov
loop
scas
and
test
pop
stos
sbb
adc
lea
movsl
cmpb
xchg
push
popf
and
xchg
test
sahf
insb
fadds
mov
mov
bswap
xor
and
push
neg
cmp
fldl2t
aas
loope
sahf
into
xchg
adc
cltd
add
dec
mov
jbe
pusha
mov
push
and
push
fidivs
push
cli
nop
ja
push
and
out
add
mov
cmpsl
mov
hlt
push
fs
adc
lock
cltd
jle
xor
insb
fstpl
stc
mov
xor
stos
add
cmp
adc
xor
jnp
lock
or
adc
jmp
cli
dec
imul
clc
xchg
mov
outsl
ss
inc
cmc
jle
in
rcrb
jmp
cs
push
outsl
adcb
sbb
xor
push
mov
inc
fsubrs
mov
fsubs
jno
sub
push
outsl
pop
adc
or
lea
jae
sub
and
cs
daa
pop
dec
mov
test
push
stc
mov
xor
daa
sub
mov
mov
mov
adc
sub
jnp
loop
popf
lahf
mov
enter
push
jl
mov
sub
dec
sbb
ljmp
sbbl
push
test
mov
test
lcall
orl
jmp
push
add
and
sahf
mov
out
jns
xor
scas
inc
xor
sub
cltd
mov
sbb
cmpsb
bound
cmp
lret
xchg
cs
jno
mov
push
arpl
ss
daa
fstl
cmp
loope
xchg
jge
das
cmp
sti
mov
nop
imul
mov
adc
movsl
mov
xchg
inc
cmp
cmpsb
pusha
aas
xor
stos
daa
test
stos
ds
sub
inc
movsb
mov
or
dec
xor
out
mov
push
clc
add
lds
sub
enter
jl
push
stc
jge
sbb
mov
push
sbb
mov
lods
sbb
fnstenv
out
cmp
addl
pop
int3
or
adc
push
loop
les
dec
das
mov
jecxz
mov
fiaddl
mov
jne
xor
inc
mov
divb
loope
js
testl
push
jo
jno
loopne
and
jmp
jbe
pop
and
mov
jle
call
pushl
mov
fs
pop
lods
lahf
fisubrs
clc
sbb
test
inc
push
call
push
mov
push
imul
push
jmp
xchg
push
or
sbb
jnp
jle
movsb
mov
arpl
sbb
nop
and
xchg
int3
sbb
dec
xlat
in
out
sbb
jne
adc
test
push
pop
xlat
cmpsb
mov
out
ret
ja
jmp
ret
andl
std
stos
sub
jecxz
pushf
add
or
mov
mov
sub
cmp
fs
add
mov
dec
mov
and
pop
ja
push
xor
cmp
xor
or
add
pop
sbb
cltd
add
out
ret
ss
dec
jae
sub
enter
jne
pop
push
dec
out
enter
mov
lods
dec
arpl
shll
fbstp
ret
test
or
add
test
jo
xor
fnstcw
mov
push
aaa
fstpl
sbbb
mov
adc
cmp
or
or
pusha
ljmp
lret
add
stos
jno
incb
outsl
out
pop
lock
inc
jecxz
dec
dec
sti
sbb
js
lret
mov
pop
sahf
add
scas
cmp
add
push
sub
jmp
repz
xor
mov
cmp
dec
sub
push
adc
sbb
mov
out
pop
xchg
jbe
dec
imul
xchg
fwait
cmp
xor
loopne
out
imul
cld
xchg
dec
mov
xorl
pop
xlat
ljmp
pop
push
in
add
stc
shrb
cmpsb
ss
data16
enter
add
mov
cmp
int3
xchg
ret
sbb
bound
enter
in
outsl
fcomip
cli
push
push
or
pop
adc
aam
lea
sbb
cmp
mov
add
mov
sti
lcall
mov
idivb
inc
cld
xor
daa
mov
jb
aaa
add
mov
mov
pop
jb
jmp
mov
xchg
xchg
sub
pop
inc
dec
cmc
pop
mov
mov
jge
push
sarl
jne
fs
scas
xchg
mov
xchg
daa
or
daa
icebp
jmpw
pop
das
pop
push
mov
xchg
mov
lcall
jo
jge
jno
repnz
or
pop
fdiv
rcrl
or
ja
pop
fsubrl
xor
sub
test
xlat
mov
es
push
in
psrlq
jle
fidivs
jl
sets
xchg
sti
sub
fnstsw
cwtl
mov
gs
mov
cwtl
mov
loop
push
or
mov
adc
pop
aaa
xchg
imul
mov
inc
pop
mov
aad
aaa
sub
stos
add
sbb
dec
sbb
or
sbb
cmp
cld
les
xchg
aaa
jb
mov
mov
xor
cltd
mov
in
out
mov
and
sbb
jge
mov
jg
shlb
insl
aam
hlt
mov
shrl
sub
data16
pop
clc
adc
and
outsb
iret
aam
mov
call
out
add
mov
mov
jp
out
mov
jle
lcall
mov
inc
lods
xchg
pop
push
rcrb
call
insb
int3
push
cltd
int
call
inc
ret
xchg
lret
xor
mov
cmpsb
pop
sbb
subb
mov
lock
aad
movsb
xchg
or
dec
push
and
outsb
dec
mov
dec
daa
leave
fmul
jnp
jno
mov
sbb
adc
fwait
mov
mov
das
push
lcall
scas
push
pop
push
add
icebp
or
fs
pop
lods
adc
push
fildl
movsl
add
sbb
dec
inc
mov
jb
adc
dec
inc
aam
push
dec
sti
sarl
mov
data16
ljmp
or
mov
out
in
in
cmpb
out
into
jmp
insl
shlb
sbb
lds
js
fwait
pop
test
pop
loopne
bound
pop
shll
add
jecxz
push
mov
or
dec
mov
push
inc
jne
divb
test
mov
jl
and
call
rolb
das
test
bound
sub
addl
stos
dec
jle
and
inc
jl
stos
dec
add
xor
std
data16
clc
pop
cwtl
mov
pop
sub
jmp
cltd
and
xchg
scas
push
nop
push
xor
notl
imul
lcall
jo
test
lahf
inc
adc
popa
icebp
inc
inc
jae
push
stos
lds
xchg
sub
enter
adcb
mov
cld
jno
mov
ficoms
neg
push
pop
dec
into
clc
mov
cmp
lds
cwtl
mov
sub
dec
add
ficomps
push
pop
gs
jns
pop
add
adc
jl
jp
push
dec
add
sub
inc
repz
cli
aad
or
notl
icebp
mov
insl
mov
sub
out
aaa
xor
and
fisubrl
xor
cmp
push
cltd
cmc
mov
ret
shrl
mov
mov
out
mov
pop
xchg
les
test
lods
in
sbb
imul
popa
xchg
enter
movsl
fdiv
daa
dec
dec
and
pop
dec
ficomps
in
shrl
fisubrl
js
push
xchg
rorl
mov
adc
decb
popa
dec
dec
cli
lea
cmp
jecxz
mov
and
mov
xchg
sub
insl
cmp
mov
pop
insl
cmpsb
cld
dec
inc
dec
into
dec
enter
sbb
mov
push
fdivs
push
push
add
in
pop
scas
lds
sbb
push
sub
arpl
and
jae
fldl
popa
and
xlat
fstp
sbb
xchg
jno
xchg
xor
mov
adc
jmp
mov
and
adc
jb
xchg
int3
and
aad
das
js
dec
mov
aas
fcmovbe
add
test
mov
das
adc
pusha
jae
pop
ret
gs
dec
test
les
loopne
mov
or
dec
test
dec
idivb
scas
sbb
enter
adc
pusha
adc
adc
dec
sbb
sbb
aaa
xor
mov
jmp
fdivrl
xor
int
mov
lods
in
lods
pop
in
iret
push
loop
adc
lods
pop
add
pusha
lahf
pop
in
fwait
sub
into
jmp
pop
ss
inc
pop
xchg
loop
loope
push
bound
jmp
out
or
out
fdivrl
call
cld
and
shrb
mov
xor
out
dec
sbb
push
add
jo
and
pop
ficoml
test
js
mov
sbbb
pop
imul
mov
or
mov
lods
cmp
daa
pop
shrl
pusha
push
rcll
add
pusha
addr16
mov
add
sbb
in
and
nop
rorl
jo
ja
add
lods
mov
sub
mov
movsl
aas
popf
add
jno
jge
jp
push
mov
mov
push
push
cmp
out
pop
jecxz
mov
xlat
outsb
sbbl
sbb
fiadds
gs
lea
lret
mov
pop
inc
ss
loope
jnp
cmp
dec
fs
loop
mov
cli
pushf
add
mov
notl
sub
cmp
mov
rcr
push
dec
cmp
imul
ljmp
jg
mov
inc
negb
cmpsb
cli
inc
mov
jbe
sub
iret
jp
fdivs
and
loopne
dec
adc
pop
shr
sub
sub
ret
imul
mov
mov
sbb
jl
call
sub
cmp
rcll
jne
xor
ds
xor
adc
xor
add
pop
xchg
testb
xor
push
jl
movsl
enter
lock
mov
sahf
jecxz
aaa
add
inc
dec
inc
and
dec
push
dec
sbb
cmp
mov
push
pop
jns
addl
movsb
int
dec
dec
add
aad
fs
dec
jne
push
daa
inc
pop
xor
push
pop
outsl
aad
dec
pop
inc
fistpll
adc
xchg
and
aaa
xor
cli
dec
test
dec
clc
stos
mov
pusha
fnstcw
das
dec
adc
adc
mov
aad
lock
sub
push
shrl
int
jge
pop
push
sbb
ja
cs
sub
jbe
and
xor
addr16
add
lds
xor
mov
lods
cmpsb
or
pop
shrb
andl
adc
lret
pop
in
xor
test
movaps
ret
xchg
out
xor
push
bound
and
sbb
sub
mov
cmp
xchg
pop
mov
xchg
cmp
neg
cmp
jge
mov
imul
rcrb
negb
cmp
pop
int
or
movsb
inc
in
leave
push
fs
dec
lods
icebp
out
out
mov
lods
bound
xchg
popf
popa
pop
mov
push
mov
popa
cmp
cmp
add
xchg
out
pop
sub
mov
scas
ret
rcrl
jle
cmpb
in
inc
jo
mov
pop
mov
mov
inc
xchg
adc
jl
mov
aam
ds
jno
or
js
pop
push
jb
lret
fiadds
aad
cli
pop
jb
inc
cltd
cmp
xchg
cs
xor
fbld
popf
pop
push
sbb
fwait
cwtl
xor
mov
push
dec
test
fxch
sbb
cmp
das
mov
inc
mov
repnz
scas
cld
sarl
mov
cwtl
cmpsl
leave
jno
mov
lret
es
fs
mov
pop
aam
shll
jecxz
mov
jge
loop
dec
pop
ficompl
or
cmp
sbb
hlt
sub
gs
mov
addr16
xchg
movsl
sbb
add
lret
loop
mov
xor
mov
sub
mov
nop
sub
test
iret
pop
mov
lock
icebp
outsb
xor
insl
mov
sub
and
test
int
andb
sub
xchg
call
addr16
mov
and
sbb
mov
mov
ret
mov
lahf
mov
or
dec
jne
lea
sub
fcompl
xchg
stos
push
cli
outsb
cmpsl
jmp
cmp
push
data16
stc
xchg
addr16
dec
pushf
das
sbb
cltd
leave
adc
shlb
and
mov
or
inc
jmp
loope
adc
or
sub
rol
dec
dec
mov
cmpsb
jge
jmp
mov
movsl
or
repz
inc
in
aaa
mov
rorb
nop
pop
fisttpll
lods
jle
add
pusha
mov
jle
lock
enter
jmp
mov
add
cmpsl
lea
imul
scas
xchg
and
or
fs
fidivrl
andl
aad
mov
in
fs
xlat
xor
push
aaa
and
adc
xchg
add
adc
shll
mov
mov
js
mov
push
pop
cmp
loop
jae
push
sbb
dec
mov
cmp
movsb
loope
imul
loop
push
dec
int
test
popa
subl
mov
dec
adc
das
int3
and
mov
mov
sub
push
sub
ret
add
xchg
jmp
stos
jp
pushf
sahf
ss
cld
add
leave
xor
xor
mov
into
sbbl
js
xor
mulb
or
mov
aam
xor
ljmp
imul
adc
ljmp
jp
out
gs
imull
int
shlb
mov
roll
ret
xchg
pop
sub
mov
std
add
aad
out
rclb
add
aad
jp
ljmp
or
loop
push
sub
mov
xchg
hlt
mov
cmpsl
sti
mov
xchg
sub
inc
mov
sbb
imul
inc
sub
xchg
in
jecxz
popl
in
cs
add
out
xorb
loope
shll
push
push
push
fmull
outsb
rcl
cmpsl
fadds
adc
pop
push
mov
xlat
xchg
sbb
out
in
rclb
mov
pop
or
sub
or
pop
icebp
sub
and
out
fcomps
lock
dec
test
andps
addb
jge
jg
xchg
je
and
dec
inc
push
mov
mov
sbb
loopne
mov
lcall
mov
sbb
cmp
lods
pop
cmpsb
cltd
sub
mov
inc
push
call
dec
push
aas
clc
movsl
data16
aam
dec
mov
mov
push
xchg
ja
cmp
mov
not
loop
ror
mov
popf
xor
fstps
test
fwait
adc
xchg
nop
mov
cmp
push
mov
jns
cmp
out
jmp
xchg
sub
mov
js
ds
stc
fnstcw
sahf
inc
sub
xor
pop
negb
ss
mov
or
fs
push
cwtl
xchg
mov
psadbw
pop
fs
out
pushf
xchg
inc
xor
xchg
mov
test
psubusw
dec
mov
and
scas
jecxz
xchg
cs
js
leave
mov
shl
aaa
scas
adc
push
ja
sbb
addr16
push
xor
xchg
sbb
bnd
xor
js
lds
aad
cmpb
jo
inc
pop
pop
push
sbb
jp
fnstsw
cmpsb
push
nop
hlt
mov
mov
push
pop
test
or
cld
inc
jno
push
mov
outsb
pop
clc
hlt
pop
jg,pn
ss
pop
add
and
or
xor
sbb
jb
outsb
and
hlt
fmuls
jne
cmp
test
out
std
pop
dec
stos
xchg
lods
aaa
inc
outsl
andl
loope
js
js
cmp
jnp
loopne
leave
aad
scas
or
jnp
jl
add
dec
in
dec
mov
xchg
pop
leave
push
jg
push
fcmovb
mov
push
outsl
inc
sbb
icebp
cmc
addr16
idiv
call
xor
pop
and
ffree
cs
int3
test
push
dec
sahf
lret
adc
jge
push
repz
scas
and
fwait
lahf
cwtl
pop
es
sub
and
sub
pop
push
xchg
mov
xchg
test
mov
aas
sub
jmp
or
mov
adc
movsb
mov
push
rcrl
pop
lods
movsl
stos
bound
loop
fcomip
dec
cmc
xchg
mov
ds
popa
dec
dec
mov
int
mov
fstpt
repnz
sub
xor
xor
data16
stos
xchg
mov
mov
inc
jb
push
fdiv
lock
add
inc
xchg
mov
adc
ds
xor
push
ret
lock
push
push
sub
fucomi
ret
adc
pop
mov
mov
jno
or
lret
fstl
mov
inc
jl
repnz
xor
push
lret
aas
mov
or
adc
sar
sub
data16
mov
jae
adc
pop
repnz
xchg
jb
cmpsl
or
enter
ret
jmp
movsl
xor
jnp
jle
sti
loop
sti
xor
dec
pop
pop
sbb
mov
fdivrp
jns
fbld
incl
neg
dec
mov
lcall
xchg
push
lea
push
das
fcompl
mov
jecxz
and
add
fprem
fisttpl
or
mov
insl
test
les
push
mov
lret
cmp
or
mov
testb
movsb
std
sub
mulb
jl
movsb
js
inc
cmp
pop
ss
mov
mov
sti
int
mov
fxch
fsubl
inc
pop
pop
push
lahf
cmp
jg
repz
cmpsb
jns
pop
or
xchg
jmp
mov
jns
jp
mov
bound
sti
pusha
or
aad
mov
mov
sbb
xchg
mov
int3
iret
push
into
sbb
sbb
outsl
gs
mov
imul
out
sub
mov
jle
dec
pop
scas
cmp
repz
push
xchg
and
js
mov
outsb
mov
add
adc
clc
cmp
pop
push
test
jge
test
stc
mov
push
xchg
sbb
dec
mov
jnp
adc
popa
jbe
dec
pop
lret
sub
sbb
inc
pusha
pop
pop
ficompl
sub
dec
mov
and
or
xor
repnz
aam
loope
jno
repz
in
inc
mov
mov
andl
data16
das
in
orb
xchg
in
cwtl
sbb
pushf
xchg
addr16
mov
inc
dec
out
es
adc
and
or
incl
ljmp
je
bound
lock
and
addr16
jle
stc
jp
pop
mov
mov
test
adc
mov
add
inc
mov
imul
test
cld
lret
out
cmp
xor
rcrb
xor
adc
mov
add
pop
aas
pop
out
pop
xor
lret
sahf
xor
pop
scas
in
fnstcw
xor
icebp
fists
inc
or
sub
fcmovbe
xlat
mov
pop
mov
cs
pop
inc
push
std
mov
out
pop
scas
push
dec
aaa
cmp
xor
xchg
fisubrl
push
dec
inc
sbbl
out
dec
mov
pusha
mov
xchg
fsubrl
lods
addr16
out
sbb
add
adc
inc
add
out
xor
mov
and
shll
cmp
cmp
dec
test
or
fidivs
push
cmp
dec
mov
cmp
push
roll
xor
in
or
add
imul
rcrl
test
adc
fbld
loop
lds
pop
dec
and
mov
jg
sbbb
adc
add
cmp
mov
gs
and
mov
loope
test
push
and
push
je
push
dec
pusha
cmp
mov
andb
ja
mov
sub
and
jp
gs
fldenv
movsb
sub
leave
out
in
inc
aaa
lret
fldcw
sbb
adc
mov
pop
repz
jl
daa
shl
in
pop
xchg
mov
adc
adc
cmp
fstps
mov
or
jno
sub
mov
ret
push
test
push
cmp
push
adc
jecxz
xor
xor
cmp
mov
scas
pop
xchg
in
ja
jp
xchg
pop
imul
adc
mov
adc
jge
add
loope
or
aaa
nop
int
iret
lea
repz
add
pop
xchg
sbb
or
nop
fists
dec
xchg
cmp
js
mov
or
repnz
mov
dec
push
loop
enter
or
jae
fwait
lcall
and
mov
out
pop
in
inc
or
rcrl
aas
and
sub
add
lock
pop
sub
jle
cmp
loopne
jecxz
pop
adc
adc
mov
stc
xchg
pop
orb
push
jp
sbb
sahf
jo
movsb
sbbl
push
cli
pop
adc
inc
out
pusha
lock
mov
repnz
std
call
data16
ja
icebp
sarl
fsubl
cmp
mov
mov
fldt
fmull
les
inc
pop
jbe
int
arpl
inc
pop
fistps
shll
mov
add
pushf
push
movsl
mov
sub
cmp
inc
repnz
rclb
pop
cmpsb
xchg
dec
push
pop
shlb
ret
mov
cmp
std
bound
in
inc
cmp
test
ljmp
pop
and
and
mov
inc
xchg
dec
jl
push
mov
and
pop
negb
mov
rcrl
adc
stc
imul
mov
and
xchg
sahf
aaa
imul
js
cli
xor
jp
inc
inc
lret
cmc
pusha
add
lods
push
pop
aaa
rorb
mov
xor
repz
dec
lods
and
cmpsb
in
lret
mov
push
mov
stos
jl
mov
pop
sbb
sbb
mov
mov
js
jle
mov
add
mov
mov
fistps
dec
push
jae
jae,pt
in
loopne
sub
addr16
mov
pusha
and
scas
and
cs
push
sbb
jno
sub
bnd
stos
std
add
or
and
push
cmp
pop
inc
scas
mov
dec
sub
mov
push
cs
nop
outsl
stos
outsl
pop
out
xchg
adc
out
xor
orb
repnz
leave
jge
ja
pop
add
ror
mov
push
in
and
test
xchg
shll
rolb
fbstp
fidivs
cmp
push
stos
imul
or
cmp
sbb
int3
ds
dec
sbb
or
sarb
rcl
fdivs
std
mov
sub
add
push
push
xchg
and
addl
stos
inc
mov
push
cmc
push
lret
mov
aam
adc
repnz
cmp
mov
adc
cli
jo
sbb
xchg
cvtps2pi
jns
fcoml
ficoms
push
jbe
mov
lcall
iret
bound
testb
mov
insl
pop
mov
aad
imul
test
lods
imul
jb
mov
mov
push
stos
fdivrp
ret
imul
and
pushf
mov
iret
jle
xor
lea
xchg
jno
and
mov
adc
out
push
mov
mov
nop
out
std
mov
mov
jecxz
test
sub
jns
subl
fwait
gs
arpl
sub
imul
mov
scas
test
or
xor
lock
or
mov
not
mov
pop
adc
jb
adc
cmp
inc
mov
cmpsl
pop
sub
pop
sub
lahf
pop
cmp
add
jle
lahf
fwait
mov
aaa
jae
nopl
rorl
aaa
inc
push
xlat
out
and
xchg
mov
lods
ror
test
xchg
test
jb
ror
mov
ss
mov
movsl
and
jb
int
and
cli
fwait
inc
movsb
sbb
pusha
jbe
fisubs
movsb
mov
lret
les
pop
push
add
push
adcb
and
jae
cltd
inc
mov
insl
mov
cmp
jns
clc
sbbl
je
pop
cltd
inc
pop
xchg
test
out
push
push
adc
push
sub
lock
add
outsl
cmpsl
sbb
les
and
outsb
sbb
lcall
fisubrl
scas
test
je
mov
mov
or
lret
mov
jle
cwtl
and
out
ss
nop
outsb
mov
add
popa
xchg
push
fdiv
sbb
aas
cmp
or
sarl
cli
pop
push
mov
jbe
jbe
sub
push
push
lea
inc
xor
ss
dec
mov
out
ja
fisubs
in
cli
push
inc
or
addb
loop
into
dec
out
push
lret
xchg
call
sti
movb
or
adc
cld
push
and
xchg
clc
lods
outsl
sbb
lea
cltd
sbbl
ds
loope
cmc
cmpb
push
enter
fisubrs
leave
jl
lcall
adc
pop
int
or
test
dec
pushf
fidivs
xchg
cmpl
fstl
lds
stc
xchg
imul
mov
movsl
loopne
dec
repnz
fcompl
inc
stos
inc
or
cmp
clc
or
sub
in
sub
movsb
cmpsb
xor
jo
lret
pop
add
push
mov
fs
xchg
repz
adc
sbbl
out
movsl
mov
add
jo
push
hlt
popf
dec
js
push
clc
mov
mov
xchg
push
call
sub
lods
call
cli
xor
shrl
fdivr
rcrl
es
sbb
cld
inc
aad
push
hlt
loopne
xchg
bsf
fs
mov
dec
sbbl
ss
inc
dec
sub
loope
lahf
nop
std
mov
pop
adc
gs
loop
xchg
sarl
or
xchg
mov
popa
ljmp
pop
data16
lret
sti
adc
cmp
je
or
mov
jmp
mov
es
into
sub
cs
cwtl
int
je
add
and
popa
insb
lods
stc
ja
xchg
sbbl
dec
cs
std
jno
mov
push
bound
jno
jnp
xchg
mov
rolb
or
leave
inc
mov
jnp
rcr
mov
bnd
mov
fmull
dec
cmpsl
repnz
ljmp
pop
mov
jecxz
cltd
popa
cmp
add
outsb
sahf
ss
mov
xlat
int
mov
aas
pop
aad
sarb
jb
pop
or
popa
push
test
jno
hlt
mov
ja
fucomp
outsl
das
push
xchg
and
xchg
jmp
mov
aad
push
in
jnp
jmp
clc
sahf
movsb
subb
les
imul
les
sbbb
fdiv
add
ficompl
loope
pop
jmp
loopne
sbb
pop
dec
cmp
fstl
mov
xor
pop
xchg
scas
cmp
daa
mov
xor
mov
movsb
add
or
push
mov
out
ja
sub
pandn
ss
jns
xor
or
loop
sub
or
cltd
dec
insb
and
xchg
lcall
ds
pop
ds
xor
dec
xchg
insb
push
insb
add
xchg
sbb
add
rcrl
js
subb
fisttps
lret
inc
cli
push
dec
xchg
fmull
pusha
adc
jp
pop
out
or
es
insl
mov
cmp
in
lock
in
pushf
cld
loop
movsl
pop
add
lods
lods
pop
jmp
cmc
nop
filds
lods
jle
das
xor
mov
mov
sbb
aam
mov
test
leave
ljmp
std
sbb
hlt
push
and
test
xchg
lods
ja
rorl
push
inc
xchg
pop
dec
in
ds
or
popw
aad
add
das
jmp
add
jle
push
xlat
cltd
aaa
mov
xchg
fcoms
inc
push
aaa
loope
xor
sub
scas
dec
mov
pop
stos
jae,pt
push
outsl
stc
rolb
lods
js
push
ds
lahf
popfw
out
insb
jbe
lds
into
cwtl
mov
cmpsb
adc
mov
cmc
ja
xchg
enter
mov
int3
inc
push
aad
outsl
cli
or
aas
jecxz
cltd
jb
push
add
sub
imul
lods
in
xor
in
cmpsb
jl
and
cmp
aad
dec
cmp
enter
stos
arpl
cld
and
stc
int3
sbb
sbb
in
cltd
subb
pop
push
jle
imul
push
ja
pop
xor
and
mov
jge
sbb
jnp
arpl
dec
mov
push
movsb
sub
xlat
int3
jge
sbb
sbb
dec
cmp
or
inc
sbb
push
push
pushf
std
inc
ret
aas
mov
iret
and
test
addb
fstl
imul
sbb
jne
mov
push
in
sbb
xor
setb
shl
jo
or
gs
xchg
and
mov
cmpl
push
mov
sbbb
loope
push
xor
out
xchg
xchg
mov
jne
mov
mov
jbe
sbb
push
and
adc
out
adc
sbbl
mov
mov
test
test
mov
jb
push
int3
mov
into
mov
adc
in
jp
mov
push
push
popa
fsts
imul
add
adc
loopne
repz
hlt
std
mov
mov
jl
xor
and
mov
xorl
xor
lcall
in
mov
or
addr16
loope
or
outsb
jmp
mov
xchg
jno
sbb
add
dec
mov
pop
enter
shl
pop
cmp
and
add
fwait
es
jle
xor
jge
inc
loop
test
pop
repnz
inc
sub
loopne
pop
cmpsb
adcl
clc
inc
adc
jns
add
outsl
into
lods
mov
and
xchg
into
stc
pop
and
cld
jnp
lods
mov
fistpll
dec
cmpsl
mov
stc
xchg
push
cmp
adc
pop
adc
mov
in
scas
inc
daa
xchg
scas
pop
or
shr
out
movsl
or
daa
mov
daa
lret
and
pop
clc
cmp
mov
jmp
jns
daa
lret
xchg
cli
sub
mov
pop
mov
xor
pushf
mov
xchg
cmpsl
mov
and
push
aad
pushf
movsl
in
ss
fdivrs
aas
xorl
subl
scas
push
xor
cli
ds
sbb
repnz
xor
mov
xchg
in
sub
scas
test
or
insb
in
lcall
sub
repz
mov
and
adc
sarl
xchg
pop
or
lods
roll
add
addr16
dec
shrl
pop
push
pop
sar
lock
add
push
add
mov
jp
sbb
mov
lods
mov
mov
sub
pop
pushf
enter
jmp
test
add
leave
jno
pusha
push
cmp
push
std
enter
pop
pop
cmp
mov
test
int
int
shl
stos
mov
mov
xchg
stos
mov
or
mov
push
adc
in
ror
push
mov
push
or
xchg
js
sahf
pop
not
icebp
or
push
je
cli
aam
in
dec
xchg
cli
mov
sbb
clc
jb
jbe
inc
rcll
xor
add
sub
gs
xor
dec
mov
scas
adc
xchg
test
out
dec
xor
mov
sub
test
rcl
mov
xchg
mov
xchg
jns
lds
push
or
into
push
in
sub
inc
mov
ficoms
mov
sub
push
je
scas
sbb
iret
jbe
sarl
xor
iret
sbb
add
lahf
mov
out
add
mov
sub
int3
rcl
insl
ret
dec
daa
scas
mov
xchg
fldenv
mov
fidivs
test
cmp
xor
stos
fucom
add
aas
lret
ss
xor
lcall
sbb
lds
es
mull
mov
iret
lcall
test
lods
sbb
dec
push
sbb
inc
xchg
pop
jle
or
xor
hlt
ficompl
sub
int
les
aaa
and
pop
stos
shll
jg
xchg
notb
loope
mov
adc
dec
push
bound
lret
or
fisttps
dec
mov
lret
in
bound
int
xor
out
xchg
ds
fwait
cmpsb
cs
sti
shrb
int3
test
pop
sbb
dec
cmpb
pusha
cmp
mov
ss
xchg
sub
pushl
lods
dec
movsb
jbe
add
inc
add
mov
icebp
into
out
je
sbb
dec
fsubrs
iret
mov
sarl
mov
add
mov
jp
cmp
dec
push
sub
add
push
mov
pop
into
nop
add
popf
jne
add
adc
mov
pop
mov
sbb
xor
jecxz
aas
add
es
shll
ret
mov
jl
and
push
dec
xchg
lock
fcomps
fucom
fwait
push
scas
or
pop
sub
lds
and
enter
aam
rclb
dec
inc
push
lods
jecxz
mov
addr16
aad
xchg
mov
push
and
inc
cmp
notb
pop
shl
dec
lcall
and
xlat
dec
dec
cwtl
jg
je
pusha
push
xchg
mov
insl
push
js
push
mov
loopne
fsubl
imul
sbb
js
hlt
clc
cld
inc
clc
ljmp
sbb
pushf
inc
into
sbb
jg
jno
orl
adc
arpl
loop
in
das
and
dec
ret
xor
rclb
mov
pop
jae
jmp
out
xor
outsb
inc
sbb
xchg
cmp
lahf
xor
pop
in
mov
dec
hlt
mov
je
xorl
jae
dec
scas
sbb
ss
inc
repz
push
into
int3
frstor
imul
andl
test
fs
lds
mov
jbe
mov
adc
mov
jne
enter
inc
and
cmp
mov
sbb
inc
jno
fcmovnu
pop
or
mov
js
inc
lret
pushf
loopne
faddl
fs
sub
lret
pop
outsb
pop
sub
repz
test
ffree
mov
xor
aad
gs
and
loope
fwait
xor
aam
mov
cmc
add
jns
das
mov
jle
or
mov
add
xchg
lahf
ds
stos
mov
je
sbb
push
xchg
mov
leave
stos
ja
dec
out
outsb
sub
sbb
push
mov
push
repnz
leave
nop
enter
xchg
push
dec
pop
and
movlps
and
push
dec
add
mov
into
push
sbb
lea
scas
mov
stos
jle
js
xor
cmp
xchg
test
lods
sub
mov
jne
js
std
daa
data16
ja
dec
and
cmc
mov
aas
out
popf
dec
mov
cmpsl
aam
pop
daa
sub
jle
repnz
out
pop
lret
cs
in
lahf
push
test
cli
int3
xchg
xchg
mov
mov
sbb
call
in
movsl
es
cmp
lret
jae
aas
sbbl
add
dec
out
std
jno
xchg
mov
add
pop
mov
lods
scas
jp
int
xor
dec
jmp
mov
dec
movsb
fldt
sahf
xchg
sbb
fcomip
adc
xor
jle
bound
jecxz
jmp
ret
call
sub
lret
push
xchg
lock
mov
mov
std
and
js
pop
mov
cmpsl
cli
xor
sub
hlt
xor
sub
add
popa
popf
fndisi(8087
sub
mov
data16
adc
jg
jno
jnp
mov
adc
push
es
clc
lcall
mov
pop
aad
xchg
sbb
mov
jl
sub
stos
insb
mov
ds
lret
xchg
jl
sub
jl
nop
dec
cmp
mov
or
push
add
cltd
enter
pop
xchg
iret
sbb
iret
sbb
orb
pop
ficoml
test
inc
mov
repnz
sub
cmp
les
test
pop
and
sbb
push
sbb
cmp
add
sub
inc
test
ljmp
push
xlat
sbb
addr16
pusha
lods
cwtl
mov
jg
stos
jo
mov
lea
xor
fdivs
xor
enter
push
outsl
mov
mov
sub
ja
sbb
mov
jno
mov
cmp
add
jb
pushl
sub
add
dec
sub
mov
push
rclb
sbb
sbb
mov
cld
cmc
subl
mov
mul
dec
mov
fbld
push
mov
dec
xor
popf
adc
pop
call
mov
cmp
adc
in
cwtl
cmc
daa
std
icebp
jmp
sbb
pop
lea
insl
ja
ss
mov
mov
dec
ret
mov
xchg
loopne
pop
jno
cmp
repnz
pop
xchg
or
roll
dec
test
call
shlb
xchg
mov
jle
dec
cmpb
or
imul
daa
jbe
or
add
jp
pop
dec
movsb
int3
fsubl
add
xchg
cltd
icebp
xchg
mov
pop
sub
stos
xchg
test
shrb
cld
fidivl
and
das
lcall
xchg
lret
outsb
cmp
pop
mov
jmp
jge
lods
pop
sub
fs
sbb
and
stos
cmp
js
test
and
or
add
rolb
ret
sbb
mov
popf
out
ds
sub
rcrl
das
add
jge
cltd
fnstenv
ret
stc
loope
xchg
sub
lds
stos
xor
mov
xchg
add
inc
fs
cmp
jecxz
or
jnp
into
out
in
gs
popf
out
push
or
dec
cmpsb
mov
int
mov
adc
aam
mov
fdivrs
mov
int3
scas
fmuls
int
popf
outsl
xorb
xchg
pop
fsubrs
cmp
push
insb
mov
xor
mov
lods
lea
std
add
mov
push
in
test
cmpsl
or
dec
jne
xor
or
adc
cmp
xchg
or
adc
cmp
fidivrs
mov
rolb
loope
cld
mov
arpl
push
loopne
clc
add
jl
int
pop
sbbb
or
loope
push
daa
and
xchg
and
xchg
test
fcomps
arpl
dec
or
pop
xor
dec
iret
pop
fdivrp
pop
sbb
iret
dec
loopne
ret
into
adc
cmpsb
mov
push
outsl
sahf
cwtl
adc
in
loope
repz
fisttpll
daa
inc
fidivl
inc
dec
cmp
and
mov
fbld
int3
xor
popf
push
or
testl
repnz
sbb
dec
cwtl
xor
lock
inc
sub
xchg
dec
inc
inc
notl
das
inc
adc
movsb
pushf
inc
shll
bound
push
dec
iret
popf
outsb
jmp
xor
xor
adc
inc
mov
push
jo
dec
fistps
clc
mov
fwait
in
popa
in
jl
add
shlb
andl
test
mov
notl
call
xchg
fsubs
bound
adc
incb
test
mov
inc
cs
jl
hlt
mov
ret
cld
setp
push
jg
add
outsb
push
es
pop
in
fs
jmp
mov
cmpsb
pop
mov
mov
pop
inc
int
in
pop
pop
pop
sub
sbb
stos
scas
and
add
or
lods
mov
mov
inc
mov
movsb
dec
ljmp
loopne
in
jg
push
jge
imul
sub
sub
pop
and
sub
pop
repz
std
lock
out
cmp
jle
test
adc
lds
movsb
test
lret
aas
and
lock
testb
hlt
leave
sub
icebp
dec
fmull
fstpt
pop
les
xor
lcall
dec
shlb
dec
test
and
into
dec
idivb
mov
cmp
mov
test
or
adc
and
mov
rorb
data16
dec
pop
lds
push
in
js
or
mov
jno
scas
cli
fldcw
adc
dec
outsb
pusha
and
add
push
push
insl
push
xchg
sub
sbb
nop
pop
jne
mov
lret
sub
mov
adc
pop
mov
mov
in
mov
les
jle
lock
ficoms
pop
xchg
nop
pop
and
cmp
test
sub
xlat
outsl
cmp
adc
and
xor
add
pop
hlt
aam
push
jmp
mov
xchg
sar
cmpsl
pop
js
mov
fwait
sub
roll
sub
mov
shl
add
addr16
push
xchg
inc
lahf
lods
nop
or
lret
xchg
jns
movsb
mov
testb
int
xchg
adc
mov
loopne
std
inc
pop
ficomps
push
scas
push
add
inc
cmc
mov
scas
out
shlb
filds
shlb
in
xchg
cmpb
cs
cmp
subb
daa
push
sub
dec
mov
ljmp
call
push
sub
mov
mov
push
mov
inc
gs
popa
mov
aam
and
cmp
xchg
pop
or
jo
fisubl
add
mov
xchg
shll
xchg
loopne
dec
jo
dec
xor
out
in
xlat
push
adc
arpl
mov
sbb
add
pop
pusha
aaa
aad
jbe
sub
les
pusha
push
test
push
and
fcmovnbe
push
popa
in
cmpsl
sarl
dec
lea
mov
cwtl
sahf
dec
cld
fnstsw
mov
mov
insl
xchg
jo
test
stos
add
loop
enter
xor
aam
mov
lcall
popf
mov
cmp
test
pop
xor
jg
das
sbb
jmp
pop
test
dec
enterw
dec
xlat
mov
and
xchg
mov
popa
dec
sub
dec
xchg
aas
call
mov
sti
lahf
in
out
pop
mov
data16
jmp
pop
sbbb
xlat
and
mov
jno
jg
fstps
fcomps
jnp
je
jb
fs
and
push
ret
push
adc
call
gs
mov
cs
mov
inc
sub
mov
push
sahf
xlat
aam
dec
subb
hlt
or
and
sbb
cmpsl
shlb
mov
cwtl
jne
shlb
sahf
xor
push
mov
push
fwait
aad
shll
xor
mov
sub
mov
xchg
stos
call
rolb
add
mov
andb
ljmp
mov
sbb
shrl
lds
mov
or
mov
xlat
pop
out
enter
adc
sarl
inc
mov
xchg
int
lods
mov
and
loop
jmp
xchg
add
or
dec
fwait
cs
decl
xchg
daa
ds
lods
mov
stos
jb
shll
loopne
xchg
shlb
mov
or
xchg
fucomip
sbb
mov
ficoml
add
gs
pop
inc
cmpsl
sahf
enter
or
jge
in
test
jb
mov
repz
add
adc
xchg
or
push
pop
div
mov
pop
pop
push
cmp
aam
jmp
out
jmp
popa
dec
fsub
pop
xorl
dec
fldt
fldlg2
out
xchg
and
and
ja
mov
jmp
bound
rcrl
stos
push
ljmp
mov
jle
dec
jl
icebp
mov
jbe
mov
xchg
xlat
xor
mov
loop
lahf
imul
in
adc
mov
int3
lea
xor
jle
pusha
xchg
push
cld
and
movsb
lahf
mov
mov
aad
les
inc
cmp
shrl
xor
push
xor
shr
jle
mov
ja
cmp
addr16
out
xor
imul
inc
dec
add
fisttpll
mov
xor
aam
aam
xor
lahf
xchg
test
add
cld
adc
pop
or
popa
sets
or
fs
sbb
lods
pusha
leave
int
jmp
enter
adc
test
psubd
xor
jg
insl
inc
nop
adc
mov
push
sub
and
shr
aad
inc
push
mov
clc
xor
andb
add
js
orl
push
pop
adc
mov
push
add
or
mov
je
adc
cltd
push
repnz
addb
mov
insb
jno
jo
in
push
mov
push
xchg
push
addb
decb
movsl
mov
nop
mov
mov
pop
dec
stos
fisttps
adc
rcll
pop
enter
add
mov
or
cli
xchg
aad
jge
and
test
lea
fisttpll
fistpl
dec
cmpsb
in
loop
sub
scas
dec
in
out
lods
cmpsb
push
jmp
cmp
js
jae
xchg
arpl
inc
jb
clc
rcl
stos
lahf
add
call
rol
lret
rclb
aaa
inc
jge
outsl
jae
push
pop
sbb
cli
jl
mov
pop
std
mov
xor
or
ljmp
sbb
inc
lods
je
aas
push
cmc
push
call
cmpsl
xor
test
push
fsubrl
rolb
jnp
mov
adc
jo
fisttpl
or
rcr
insb
fstl
inc
jecxz
sub
fwait
mov
jno
leave
mov
sub
and
push
daa
inc
mov
fdivs
pop
xor
out
pop
inc
les
aas
add
inc
pop
orl
mov
add
and
or
mov
xchg
push
sbb
mov
adc
adc
lret
mov
push
fcmovne
shll
jbe
aam
sbbl
mov
sbb
lods
mov
test
dec
ljmp
dec
push
std
hlt
cmp
lods
mov
shlb
jp
sbb
fmuls
inc
ret
das
mov
mov
roll
and
inc
or
xor
xchg
add
pusha
stos
xorb
ss
xor
adc
rorb
xor
das
mov
xor
xchg
inc
jmp
in
xchg
xorl
mov
push
inc
mull
mov
imul
repz
jno
adc
cmpsb
xchg
sub
cld
movsb
in
or
cmc
push
mov
loop
ret
inc
aaa
pop
inc
or
pop
out
lcall
lods
aad
test
jle
push
inc
mov
fcomp
jb
jnp
inc
mov
sarl
imul
scas
int3
jl
jge
stos
cmp
cmpsb
mov
sub
mov
or
fistpll
imul
sbb
aad
push
pop
cmp
push
push
and
sub
sbb
cli
dec
out
add
test
push
loope
lds
or
pop
inc
in
lods
add
ds
sar
and
in
jbe
and
leave
or
mov
cmp
sti
scas
les
dec
lret
outsl
fxtract
js
outsl
sarl
adc
pop
into
add
daa
lea
jge
jmp
icebp
pop
in
aaa
fwait
insb
rolb
inc
add
scas
mov
imul
lahf
mov
jp
xor
pushf
iret
je
sbb
pop
pop
je
imul
adc
imul
and
ret
mov
rcrl
cmpsl
jl
sbb
pop
mov
jb
add
xchg
pop
mov
push
add
xchg
lahf
or
bound
repnz
push
stos
fsin
repnz
add
jb
in
xchg
lcall
mov
sti
dec
cmp
sub
push
repz
mov
cltd
sarb
dec
int3
mov
jne
and
xchg
mov
rorl
loope
popf
into
cli
bswap
out
test
xor
test
hlt
pop
mov
in
es
fldl
cli
inc
sub
lock
ret
scas
into
mov
das
mov
push
mov
or
fnstcw
sbb
test
mov
sub
or
jne
inc
or
fadds
shl
xchg
mov
push
lret
sbb
cs
test
mov
adc
or
push
stos
xor
out
mov
xor
aaa
inc
rcrl
lds
add
inc
push
sarb
jecxz
and
in
fwait
dec
outsb
sub
das
xchg
push
sti
mov
pop
inc
loopne
add
imulb
xchg
mov
jno
sbb
xchg
cmpsb
shrl
inc
aad
jno
add
push
das
jge
push
fwait
sbb
push
movsl
lods
rclb
mov
in
jne
je
aas
inc
lds
xchg
cld
cmc
or
dec
popf
jbe
adc
fwait
sbb
jae,pt
jmp
xlat
iret
or
adc
repnz
cs
cs
dec
movsl
add
les
fists
outsb
std
in
xchg
cli
cmp
aas
pushf
lret
inc
fldl
fisubl
movsl
idivl
ds
ja
call
inc
mov
adc
inc
stos
sub
cli
jno
shll
test
push
inc
jecxz
or
or
mov
add
out
and
push
hlt
sub
data16
xchg
enter
jge
leave
xor
jge
pusha
dec
jge
jns
aam
dec
pop
mov
xor
fdivrs
popa
xor
cwtl
xor
lods
xor
pop
xor
lret
mov
scas
mov
xchg
inc
push
and
pushf
add
add
add
out
gs
cmp
aam
enter
sti
sarb
cmp
inc
jae
dec
pop
gs
movsb
inc
and
scas
and
or
mov
push
dec
daa
add
adc
gs
xor
push
and
and
jb
mov
inc
jle
scas
mov
test
ljmp
test
les
rorb
cmpsl
out
lahf
push
lds
imul
pusha
roll
ficoms
cli
inc
or
or
stc
test
mulb
ljmp
stos
inc
movsl
pop
pop
xchg
repz
addr16
fimull
xor
scas
mov
arpl
lods
daa
xchg
sbb
int3
ljmp
je
sbb
mov
adc
fmuls
dec
lret
pop
test
xor
mov
loop
orl
push
xchg
test
jl
jb
addr16
xchg
out
in
dec
ja
clc
mov
mov
das
rcl
imul
fmull
fsubs
jecxz
outsb
aad
test
jnp
mov
in
xchg
pusha
xchg
rdpmc
inc
inc
mov
dec
sub
repz
sub
and
sti
rcrl
ret
popa
xor
pop
dec
imul
mov
shrl
insl
mov
in
mov
ret
enter
stc
aaa
xor
mov
cmpsl
or
lret
hlt
addr16
sbb
xchg
or
and
addr16
shll
adc
sub
insl
test
data16
sbb
adc
sbb
sbb
repz
leave
jnp
mov
sbb
adc
lds
jo
dec
adcl
xchg
add
mov
mov
ljmp
dec
jg
sub
sub
out
data16
push
mov
mov
fs
movsl
jbe
cld
mov
mov
lret
pop
jg
push
inc
sahf
push
sub
repnz
mov
cld
clc
jmp
push
cmp
in
push
or
jbe
push
cmp
insl
mov
inc
out
pop
lds
movsb
in
cmpsl
rorl
ds
xchg
shl
hlt
aad
adc
xor
mov
add
mov
mov
addr16
movb
in
or
or
jno
lods
jecxz
jbe
cmp
jg
ljmp
ja
push
gs
sbb
fcomip
push
fimull
aas
mov
aaa
scas
cvtps2pi
iret
and
int3
fstpt
cmp
sub
push
idiv
xchg
sub
jmp
pop
pop
push
fdivrl
out
pop
aad
test
cld
outsb
jae
loop
imul
sbb
out
jp
in
inc
lcall
pop
iret
bnd
xchg
jns
sub
ror
xor
jl
js
jmp
loop
mov
mov
jp
scas
pop
sbb
mov
test
mov
fdivrs
inc
xor
jae
stc
test
pop
lds
orl
loop
pop
repnz
dec
pop
add
add
jne
sbb
loopne
pop
jae
data16
enter
add
mov
mulb
adc
sub
inc
sbb
loope
pop
ret
loope
test
push
enter
iret
jle
sbb
push
mov
mov
scas
jp
pop
xchg
mov
or
jl
cltd
outsl
jp
lods
dec
mov
push
fstpl
stos
cmp
mov
jp
or
in
rorl
inc
xchg
sarb
inc
mov
rorl
clc
lret
xchg
cmp
dec
lret
aad
cmp
orb
sbb
lea
sub
pop
mov
push
or
sbb
test
pop
and
loopne
xchg
dec
mov
orl
aad
or
sbb
jg
inc
push
repnz
jns
sbb
pop
sbb
mov
rol
mov
cwtl
inc
enter
pop
cmp
aad
sub
or
mov
push
dec
cmpsb
or
insb
inc
ja
and
push
cmpsb
repz
je
push
cmp
mov
push
dec
arpl
jecxz
cmpsl
movsb
jo
sbb
int3
sbb
pop
and
lcall
lods
push
sbb
out
sub
dec
pop
out
jo
mov
lds
mov
push
mov
adc
fstl
sub
cmp
inc
ret
sub
inc
push
cld
push
notl
das
lret
out
xor
mov
inc
and
pop
rcrl
push
loop
es
mov
cmp
je
xchg
sar
outsb
inc
ds
lret
cmp
stc
fidivl
xchg
test
arpl
xor
mov
lods
arpl
push
enter
outsb
ret
adc
sub
cltd
addb
xchg
and
loopne
sub
jge
sar
lahf
les
cwtl
pop
dec
push
dec
mulb
jge
in
shl
sbb
mov
cmp
and
and
addr16
fldl
and
jne
imul
cmpl
adc
int3
hlt
aam
jecxz
pusha
iret
pop
test
cmc
jns
lcall
xchg
xor
push
xchg
add
nop
adc
sti
jne
push
ret
in
sub
pmaxsw
mul
or
test
jnp
fdivrs
test
push
cmp
adc
xlat
adc
jmp
mov
addr16
imul
cmpsb
vmovsd
outsb
repz
inc
fnsave
jne,pn
fisubs
dec
orb
adc
dec
or
lea
jmp
lcall
mov
and
in
sub
iret
stos
adc
xchg
or
sbb
mov
xor
jle
and
cmp
popf
push
arpl
test
xchg
add
repnz
sti
mov
aas
lcall
fnstenv
out
aaa
xchg
inc
lods
popa
push
mov
fwait
mov
shlb
cmp
add
jb
iret
lods
pop
fs
stos
dec
rcl
in
xchg
mov
sub
cltd
or
or
inc
adc
mov
pop
rcrl
dec
jne
rorl
sub
nop
sbb
push
mov
dec
imul
xor
lret
shll
sub
mov
scas
bound
cs
sbb
jge
scas
sub
cmp
mov
pop
mov
jp
inc
dec
push
les
ljmp
pop
lods
shll
mov
sbb
repnz
in
fiaddl
cli
pop
sbb
js
out
stos
les
int
enter
jmp
lret
mov
push
mov
dec
leave
scas
ljmp
mov
stos
rcll
mov
xlat
dec
mov
or
arpl
dec
and
xchg
xor
pop
pop
nop
ja
adc
stos
xchg
pushf
sbb
and
pop
lea
jns
js
adc
cwtl
nop
pop
fstp
bound
or
int
mov
or
test
push
add
mov
adc
jle
xchg
lock
test
ds
cmp
push
or
cltd
int
rolb
dec
ret
add
lods
sub
in
cmpsb
aam
ds
jg
dec
dec
cmp
jge
mov
jns
gs
and
ljmp
jb
imul
push
xchg
shr
stos
testl
hlt
sbb
jg
pop
idiv
icebp
adc
and
push
mov
push
cld
mov
pushf
dec
int
lods
enter
in
js
cli
daa
ja
mov
enter
jp
adc
dec
inc
punpcklwd
xchg
insl
shr
sub
sbb
jl
push
out
jae
repnz
pop
jne
ds
andl
inc
popf
fsubs
les
pop
addr16
xchg
repz
mov
xor
pop
push
inc
xor
rcll
bound
pop
inc
jnp
or
enter
pop
outsl
sub
pusha
mov
int3
pop
movsb
lods
ja
and
cmp
inc
arpl
sub
jbe
lods
and
cmp
dec
aaa
or
hlt
pop
push
jne
lea
mov
out
enter
mov
adc
aaa
aad
cmpsb
dec
inc
dec
add
and
pop
insl
outsl
fildll
loope
mov
andl
pop
xor
icebp
cli
mov
ret
out
popf
lea
scas
rclb
fidivrs
shlb
dec
xchg
xor
pop
pop
lret
mov
in
sub
fcmove
xor
mov
js
inc
push
jle
mov
lods
push
xor
lods
mov
cmp
push
in
test
xchg
enter
cmp
jns
add
fucomp
inc
cs
jbe
pop
and
imul
clc
lcall
insl
add
add
jle
arpl
rcrl
mov
orb
dec
inc
fdivs
out
jle
das
mov
mov
sti
ljmp
jnp
push
sbb
jecxz
mov
std
sbb
ret
inc
shll
test
stos
insb
lds
inc
ret
fidivrl
popa
stos
or
mov
ja
jns
sbb
xchg
sub
mov
jo
jge
movsl
mov
icebp
ljmp
xchg
imul
movsl
mov
push
xlat
sti
insb
pop
in
pop
fmull
mov
into
sarb
push
mov
jnp
in
insb
aaa
cmp
ds
jb
or
xor
dec
fnsave
mov
mov
sub
lds
adc
in
inc
cwtl
into
fcmovbe
add
pushf
cmp
dec
sbb
or
mov
sub
mov
pop
sub
cmp
and
cmc
les
mov
push
out
xchg
jle
dec
jbe
pop
adc
scas
loop
clc
xor
repnz
jae
adc
lds
in
out
jns
loopne
dec
stos
mov
outsl
cmp
push
popf
jbe
sar
mov
mov
and
mov
pop
notl
cmp
mov
imul
pop
mov
add
mov
xchg
mov
push
cld
cltd
sbb
imul
imul
cmp
push
and
cmp
ficoml
subb
sub
jecxz
or
jmp
aam
sub
cmc
dec
pop
and
or
inc
cld
lock
mov
push
pop
jae
insl
inc
adc
cmpl
jbe
fists
jne
and
out
push
bound
enter
add
movsl
call
jmp
mov
or
push
sub
stos
mov
pop
push
ja
lods
out
lret
dec
mov
pusha
cmp
fistps
pop
aas
insb
push
xorl
call
shlb
lcall
popl
mov
ffree
ficomps
rcrl
cmp
inc
loopne
sub
add
enter
ss
rolb
add
xchg
pop
ja
fsubrs
les
push
pop
lret
add
loope
push
sbb
mov
and
mov
push
mov
sti
mov
inc
out
ljmp
sbb
data16
jge
lock
jnp
enter
mov
mov
popf
xchg
cmp
orb
xorb
push
cmpsl
adc
jmp
leave
pop
in
ljmp
inc
stos
insl
adc
pusha
pushf
les
dec
out
cld
lds
adc
sti
orb
add
incb
jb
mov
sbb
and
iret
fstpl
mov
insl
push
jns
fsubrs
push
mov
jae
and
jmp
cmc
jo
lods
int
pusha
test
lods
add
movb
add
mov
mov
popf
xchg
inc
and
sti
or
sbb
mov
daa
jo
outsb
lea
popf
fildl
and
arpl
fs
jns
push
mov
outsl
add
sub
jp
call
lahf
xchg
in
xchg
or
adc
repz
jmp
xor
daa
mov
out
arpl
cltd
insb
call
and
adc
mull
mov
or
subb
or
jle
sub
push
mov
xor
jmp
subb
sub
sbbb
loope
sub
dec
pop
adc
add
cli
xor
push
jno
call
dec
test
mov
repz
adc
mov
pop
enter
cli
scas
cmp
aas
aad
ret
dec
ds
fwait
lret
out
and
shlb
mov
push
ss
into
ret
and
inc
in
aaa
inc
pop
sbb
mov
dec
mov
xchg
out
mov
xchg
pushf
dec
inc
xchg
push
fisubl
inc
jo
fisubrs
xchg
leave
mov
stos
imul
es
inc
sbb
inc
xlat
mov
lahf
and
or
or
loopne
mov
cmpsb
imulb
popa
jle
push
std
mov
xor
ss
sub
jp
push
mov
jp
fwait
rorb
sbb
dec
mov
xchg
xchg
sub
push
bound
push
mov
addl
adc
xor
icebp
mov
mov
lret
xchg
andb
cmp
arpl
push
dec
rolb
repnz
and
mov
rcrb
push
jp
pop
lea
lods
mov
data16
enter
inc
mov
shll
pop
adc
hlt
das
loope
push
je
popf
movsb
cli
cmp
cmp
sub
rcrl
inc
adc
and
popf
jo
loop
mov
fistps
mov
icebp
pop
insb
or
mov
mov
mov
add
xor
xchg
lret
test
xchg
and
sbb
sub
add
and
push
sbb
or
out
xchg
jns
fidivs
pop
addr16
fbstp
pop
push
jae
sahf
mov
jl
call
xchg
pop
pop
mov
ds
enter
cmpsl
ret
sarl
mov
xchg
inc
adc
loopne
push
sbb
negl
test
movsl
leave
in
pusha
stos
push
jb,pn
or
lods
dec
push
push
in
or
lea
fisubl
ja
xchg
repnz
or
and
outsb
sbb
push
mov
mov
mov
out
das
xchg
and
cmp
stos
popa
push
xchg
adc
out
pop
inc
mov
mov
push
enter
pop
divb
push
sub
mov
push
cmp
pop
icebp
call
pop
mov
movsl
cmp
mov
pop
in
mov
lret
jnp
add
pushf
rcrl
mov
mov
cwtl
pushf
inc
mov
inc
sub
mov
xor
leave
aaa
push
push
outsl
rclb
pop
mov
or
sbb
pop
and
xor
and
mov
data16
push
ficompl
dec
cld
xor
sbb
arpl
das
mov
fwait
xchg
mov
jmp
sbb
ret
loope
sub
cmp
cmp
aad
cmp
cmpl
push
mov
mov
iret
pushf
scas
push
shrb
xchg
add
test
and
mov
jo
cli
and
cld
sbb
fcmovne
sub
shlb
pop
in
test
pop
xor
addr16
mov
leave
out
cmpsl
ret
push
frstor
in
out
shll
cvtpi2ps
push
pop
int3
mov
lret
in
aam
jne
push
loope
popf
pop
adc
loop
push
mov
filds
mov
js
ror
aam
stc
push
adc
cmp
mov
leave
inc
subl
cld
push
cmp
insb
or
inc
and
mov
xchg
in
mov
inc
push
movsb
xacquire
sub
and
imul
jnp
repz
insl
mov
les
adcl
push
cmpb
pop
and
xchg
mov
mov
sbb
adc
test
ret
sub
inc
adcb
in
movsl
xchg
inc
cli
jge
in
sti
movb
adc
jmp
daa
jecxz
loopne
lcall
sbb
loop
add
inc
subl
and
mov
mov
dec
js
jns
cmp
inc
push
xchg
adc
scas
cmp
ficomps
fdiv
imul
fldt
outsl
mov
xchg
add
cmp
shrl
push
jmp
or
imul
push
pop
in
addr16
daa
insb
pusha
adc
xor
xchg
mov
add
addr16
int3
cmpb
xor
int
shll
cli
mov
mov
sbb
incl
xor
xchg
lods
add
dec
or
sbb
xchg
mov
fs
adc
cmp
in
sbb
mov
aam
cld
mov
lcall
mov
pop
pop
push
aaa
xchg
and
cld
test
mov
std
push
sub
idiv
sbb
add
and
xchg
scas
ljmp
test
sbb
clc
and
divl
test
push
mov
fsubl
sub
das
ljmp
xchg
std
push
sti
mov
int3
xor
sub
pop
mov
pop
cmpsb
inc
mov
push
or
rclb
mov
mov
cltd
push
cld
jns
enter
scas
lcall
repz
rsm
sbb
mov
daa
dec
add
mov
outsl
fucomi
fwait
scas
cmc
push
iret
ret
cmc
inc
lock
add
in
int
push
and
cmpsb
dec
xchg
xchg
xchg
mov
or
ficoml
jecxz
add
jb
pop
das
xchg
rolb
inc
add
mov
jle
push
pop
xchg
mov
and
cmp
lods
fwait
repnz
lds
inc
push
cmp
shlb
mov
inc
imul
pop
add
loop
std
add
sahf
push
push
xorb
stos
xchg
mov
inc
icebp
outsb
mov
in
rcr
mov
xlat
rorb
mov
stos
fs
push
gs
out
stc
fldl
sbb
mov
inc
into
fs
jp
jecxz
popf
dec
imul
cmp
stos
xchg
adc
mov
jae
ds
mov
sbb
add
sbb
cmp
push
fmul
add
scas
push
jmp
call
out
sti
jb
add
sarl
xor
xchg
xchg
dec
jbe
dec
push
inc
adcl
ds
or
repnz
adc
inc
call
and
in
push
jg
sbb
jp
jnp
and
out
mov
push
mov
repnz
lret
jmp
mov
outsl
ret
pusha
aad
pop
pop
adc
sub
test
push
xor
pop
push
dec
in
add
in
sbb
sub
rcr
jo
pop
cmp
pop
roll
adc
outsb
mov
adc
mov
mov
loopne
sbb
jl
fs
fmulp
cli
ret
outsl
mov
das
rcl
sub
push
dec
in
lcall
dec
cmpl
mov
fistpl
adc
lahf
mov
dec
nop
or
inc
adcl
sub
mov
push
xorb
test
mov
pop
mov
cs
iret
lds
shrl
cld
out
inc
imul
push
mov
xor
push
ds
stos
subl
sub
ss
xlat
inc
xchg
lahf
xchg
cmpsl
push
inc
mov
or
sub
add
sub
lds
unpckhps
mov
aas
cmp
and
lods
jecxz
pop
shlb
or
insl
jl
imul
loop
lahf
mov
sub
imulb
in
jg
jmp
sub
arpl
xchg
pop
sti
ss
pop
xchg
inc
ljmp
inc
shl
repz
push
lret
jne
cmp
cmp
jno
add
into
cmp
stos
and
cmpsl
pop
inc
pop
loop
sub
rcll
pop
push
push
stos
repnz
in
pop
mov
es
xchg
outsl
push
rolb
lds
push
dec
test
jnp
mov
or
out
dec
ret
cwtl
stc
jg
imul
cltd
insb
jns
fwait
in
pop
fldenv
fcmovbe
pop
orl
fdivr
sub
popf
push
xchg
fildl
shlb
je
sarl
mov
stos
jne
inc
xlat
dec
lods
rep
xor
cmpsb
and
enter
int3
stos
mov
shrb
aad
mov
iret
subl
dec
mov
std
mov
sub
pop
aaa
cmp
mov
pop
and
xor
fnstsw
insb
clc
lcall
lret
data16
cmc
inc
scas
sbb
out
jl
loope
add
ret
loope
or
pop
xchg
fists
arpl
inc
lock
das
nop
pop
mov
pop
sub
mov
and
xchg
test
mov
pop
adc
int
sbbl
inc
xor
push
mov
push
adc
sbb
cmp
mov
repnz
aas
push
adc
test
xchg
in
dec
sbb
lcall
sbb
insb
imul
dec
add
sbb
cmp
mov
pop
mov
out
mov
icebp
imul
les
pop
pop
shll
fldt
mov
pop
insl
repnz
iret
cmp
daa
repnz
cmp
xchg
jns
xchg
lock
mov
push
in
sahf
icebp
adc
xchg
mov
fldcw
push
xlat
test
inc
jne
shll
dec
mov
push
imul
cmpb
ret
dec
mov
pop
out
aad
add
or
lds
lods
gs
iret
dec
daa
pop
xor
test
aam
mov
ja
int3
frstor
adc
xor
cmp
add
cmp
sarb
fsubs
popa
iret
adc
dec
std
nop
mov
cmp
cmc
cmp
xchg
test
stc
xor
les
cmp
push
popa
xchg
xor
xor
sbb
insl
push
test
int
inc
push
push
xchg
paddw
push
mov
outsb
or
jnp
cmc
lcall
int
fcoml
push
mov
or
jmp
add
pop
out
jbe
or
and
jle
in
fsubl
roll
xchg
cltd
or
jecxz
jae
xchg
mov
ss
jno
push
dec
fbld
or
jbe
mov
lea
aam
mov
xor
mov
dec
mov
jmp
pushf
and
inc
shrl
sbb
add
or
ret
sbb
inc
mov
int
dec
jl
in
cmp
addr16
loope
fwait
pop
jg
pop
lcall
mov
xor
es
cmp
adc
sbb
and
dec
out
int
cmp
in
adcl
jo
movsb
cmpsl
jle
cmpsl
nop
mov
inc
or
fwait
lods
lods
or
jl
dec
xor
xor
add
sahf
lods
push
popf
jae
sti
sub
cmpsl
xchg
popf
jb
push
subb
and
push
iret
or
cld
push
push
adc
add
xchg
sbb
data16
iret
cmp
std
push
push
sarl
pop
scas
push
xor
or
pop
pop
in
int3
sti
add
push
inc
addr16
fldcw
xchg
mov
jns
add
ficompl
je
mov
popf
rcrl
mov
cwtl
sbb
incl
in
cltd
mov
lret
and
movsl
xchg
loop
xchg
subl
lcall
dec
sbb
jmp
outsl
jmp
imul
inc
leave
pop
cmpb
sub
inc
call
mov
out
stos
inc
dec
dec
jp
sahf
add
test
and
jmp
lcall
lods
mov
mov
push
jmp
hlt
mov
cmp
negb
orl
push
ret
mov
pop
jmp
idivl
in
daa
lahf
mov
outsb
xchg
lods
dec
ret
aad
xchg
les
add
iret
mov
jo
call
inc
dec
xor
xor
test
fisubl
test
add
loopne
aad
loopne
jae
or
push
or
gs
dec
sbb
jge
cs
imul
jp
dec
pusha
fstpt
adc
adc
push
outsb
negl
ja
cmp
dec
mov
pop
mov
push
js
in
bound
ljmp
add
bound
rcrl
xchg
icebp
dec
aad
push
data16
cmpsl
scas
jge
push
cmp
fstl
ds
mov
cs
mov
sti
xchg
adcb
cmp
into
mov
pop
insl
mov
xor
leave
xor
pop
or
popf
jp
lods
imul
sub
add
jle
addr16
xchg
jg
and
out
dec
mov
xchg
add
push
push
cmpsb
leave
push
push
cmp
lds
arpl
pop
fisubrl
and
mov
mov
pop
iret
imul
cmp
popf
loopne
push
dec
cmp
imul
shlb
ficompl
adc
mov
sub
test
cmpsb
lret
xlat
push
cmc
jb
xor
gs
jae
in
mov
xor
int3
cwtl
add
ds
sahf
mov
bnd
dec
xchg
pop
adc
and
stos
jae
sti
push
pop
mov
xchg
pop
bound
pop
jp
or
push
xchg
sub
mov
fwait
xchg
push
xchg
mov
loope
cmp
out
aad
xorl
leave
test
iret
add
add
xor
shll
mov
mov
out
in
pop
lds
rcr
ljmp
dec
push
out
push
mov
call
pop
lods
imul
pushl
and
shrl
and
push
stc
add
xor
ds
or
stos
lods
or
dec
arpl
jo
cwtl
test
inc
repz
mov
pop
jle
out
sub
xor
je
in
xchg
popf
mov
pop
mov
popl
insb
nop
xor
mov
xor
ljmp
les
sbb
outsl
xchg
dec
pushf
jle
imul
in
repnz
fwait
shrb
pop
scas
rdpmc
cmp
mov
fmull
mov
mov
push
mov
or
xor
fistl
cmc
lahf
mov
sbb
inc
popf
iret
mov
mov
jecxz
test
jg
pop
inc
xchg
sub
mov
ss
pop
stc
dec
lret
mov
jne
rorb
jbe
sbb
push
jecxz
pop
xchg
push
dec
cmp
rclb
xchg
imul
stos
push
push
hlt
mov
inc
adc
push
sub
or
or
xchg
mov
sbb
js
pop
jl
mov
mov
dec
lcall
loopne
arpl
xchg
sti
jno
pop
sub
inc
sbb
sti
cmpsb
movsb
ficompl
xchg
shl
push
xchg
popf
ficoml
rcr
cmp
jne
sub
cs
out
ret
jp
mov
das
test
frstor
movups
cmp
pusha
xchg
dec
cmpsl
dec
and
repnz
hlt
shl
lahf
aad
or
test
ret
xorb
sbb
xchg
popa
cmpsb
jecxz
mov
into
push
cli
and
jb
pushf
push
icebp
pop
push
aam
mov
mov
add
scas
ds
and
cmp
mov
mov
pop
or
cmc
push
movl
test
or
push
mov
ret
hlt
sbb
adc
pop
xor
lock
stc
lods
lea
pop
ljmp
or
ret
mov
lret
test
push
mov
adc
inc
dec
cmpl
ljmp
cmp
cmpsb
jno
es
xor
xor
imull
and
mov
add
insl
jne
popa
fstpt
mov
mov
jl,pt
push
push
add
mov
jb
arpl
popf
xchg
mov
add
lret
mov
push
sar
shrl
ret
es
in
lock
inc
mov
sbb
mov
xor
in
in
fcomip
jae
xchg
xor
inc
jo
pop
or
jge
sub
and
movsb
sub
lea
dec
jne
fs
enter
sub
jg
out
loop
sub
xchg
or
ljmp
or
pop
sub
inc
ss
xchg
iret
mov
negb
repz
mov
mov
jno
inc
push
inc
out
mov
movsb
adc
out
cli
lds
jbe
fldcw
xchg
or
aam
popf
loop
popa
icebp
or
sub
mov
shlb
mov
cld
cmp
and
jl
xor
lods
dec
or
cmp
inc
xorb
ret
icebp
sbb
and
pop
adc
jmp
enter
push
clc
adc
aas
in
lea
movsl
mov
cli
in
mov
add
sbb
jecxz
enter
push
test
cmp
sahf
bound
insb
sub
inc
xor
jle
xlat
pop
popa
fwait
push
sbbb
mov
andb
sub
mov
xor
imul
push
pop
lods
fiaddl
xchg
lcall
mov
sub
and
mov
xchg
ljmp
fsubrl
fisubl
adc
dec
dec
inc
mov
rcl
push
loop
ja
jge
sbb
xchg
mov
divl
pop
and
sub
or
lea
push
test
sbb
sub
repz
push
add
xchg
cwtl
inc
fnsave
cmp
mov
sbb
andl
mov
pop
mov
fst
add
and
jg
fldt
out
icebp
adc
ret
adc
sarb
imul
jne
int3
lods
mov
xchg
jae
dec
arpl
fwait
pop
test
shll
or
dec
mov
jno
cmp
push
jl
mov
push
fucomi
imul
cmpsl
mov
out
inc
std
ds
sub
pop
mov
sbb
std
inc
div
mov
inc
cmpsb
sbb
loop
xchg
cli
sbb
popa
jnp
mov
out
iret
push
mov
dec
mov
jbe
jnp
adc
dec
in
xor
dec
hlt
jge
push
in
add
icebp
jns
cmc
fildl
xor
call
mov
cmp
sti
das
in
enter
sub
and
in
xchg
jcxz
xor
dec
cltd
clc
pop
push
popa
and
lods
cmc
dec
pop
add
imul
cld
fmuls
icebp
or
lahf
mov
jnp
test
shrb
cmpsb
nop
cmp
pop
rcrl
xchg
repz
jecxz
xor
push
inc
fdivl
loop
in
push
jmp
jmp
ss
dec
inc
sub
mov
jle
mov
pop
in
les
out
push
movsb
and
and
int
sub
out
push
pusha
int3
push
enter
sbbl
push
or
sub
cmp
ret
push
in
lods
mov
inc
xlat
mov
pcmpgtd
xor
inc
pop
xchg
mov
cmp
movsb
fcompl
push
push
jno
and
mov
inc
xchg
mov
dec
imul
icebp
cld
pusha
shrb
stos
dec
pushf
mov
das
xor
test
mov
xor
cmpsl
sub
shlb
push
push
aam
push
xor
fs
or
sbb
repnz
mov
lret
loopne
jl
sbb
add
repnz
sub
mov
sarl
aad
sarl
movsl
out
insb
pushf
inc
push
imul
dec
fildll
sahf
lret
mov
negb
push
xlat
fiaddl
fwait
lods
xor
lahf
xor
push
fnsave
test
repz
ret
xor
mov
jl
pop
mov
jmp
cld
ljmp
push
subb
je
or
popf
cs
xor
lcall
shlb
mov
jg
ret
or
call
add
loope
cli
and
cltd
int
add
add
les
pop
inc
pop
sub
adc
sub
push
enter
in
mov
loopne
mov
cltd
iret
inc
lock
std
push
push
out
shlb
jnp
mov
xchg
jle
push
adc
rolb
jmp
fnstsw
push
mov
mov
imul
lcall
xchg
mov
jl
cmp
or
dec
les
lcall
adc
dec
push
fdivl
push
push
xor
jbe
shlb
inc
aas
stos
fcomps
mov
cmp
sbb
rcrb
lods
iret
es
mov
adc
ret
add
mov
test
pop
stc
sub
sti
fsts
jne
loopne
push
xor
push
pop
lock
test
out
lret
enter
inc
cmp
cmp
dec
fistpl
subl
addr16
jne
aaa
push
hlt
sub
outsl
mov
cmp
fsubl
out
popf
dec
ret
fcoml
loop
cmc
push
fwait
add
lret
nop
es
ja
mov
addb
aaa
scas
xchg
pop
cmp
mov
in
inc
imul
orb
inc
std
and
es
pop
pop
out
pop
pop
in
pxor
push
jo
add
dec
add
aas
cmpsl
cmp
adc
jge
xchg
mov
pushf
stos
push
stos
xchg
dec
sbb
mov
leave
clc
aas
scas
push
cmpsl
adc
lods
pop
shrl
call
test
inc
inc
adc
out
sbb
mov
sti
push
or
xchg
xchg
cmp
data16
and
cltd
pusha
cmp
sbb
push
xchg
movsl
jns
fstps
pop
cmp
cmpsl
shrb
in
out
int
and
mov
xor
leave
lret
sbb
sahf
out
in
sbb
sahf
dec
loope
sub
jne
push
ja
push
ffree
aam
mov
or
mov
mov
adc
mov
push
iret
outsl
addb
call
jno
pop
jle
inc
mov
stc
jne
lcall
xorb
lahf
cmp
repnz
stos
in
daa
out
lret
xchg
lods
scas
jecxz
ss
and
xchg
fmul
repz
xchg
aad
mov
test
js
ss
mov
test
and
and
jb
mov
sbb
int
into
popf
lahf
inc
shr
stos
adc
outsb
andl
sbb
jecxz
sbb
push
inc
inc
pop
xor
ret
mov
jmp
mov
jne
lock
xchg
cmp
mov
jae
dec
or
adc
orb
xchg
stos
nop
cli
popa
imul
enter
aaa
xchg
ds
or
mov
lret
sti
ret
daa
jnp
repnz
stos
into
jns
gs
pop
das
sbb
shll
or
mov
xchg
mov
pop
lcall
mov
cmp
out
into
push
inc
shl
rolb
push
gs
cmovs
call
add
cmp
hlt
outsl
cld
test
fdivl
xor
inc
sbb
pop
fwait
xchg
jge
inc
mov
repz
out
push
imul
lds
pop
movsb
daa
xchg
cmpsb
movsb
pop
stc
stc
cmpb
push
mov
sub
sbb
test
pop
hlt
es
push
out
mov
ss
frstor
sub
pop
push
js
lods
lods
mov
xor
data16
in
rorl
loope
mul
and
scas
aas
jg
jno
add
aaa
xchg
ljmp
inc
push
pop
in
sub
sbb
fcmovnbe
stc
push
jnp
sub
cmp
mov
xchg
xor
inc
adc
popf
mov
push
insl
mov
pop
pushl
in
xchg
pop
add
dec
scas
lahf
gs
fdivr
add
pop
pop
and
lcall
hlt
popa
test
mov
mov
out
nop
mov
cwtl
hlt
mov
push
adc
adc
sarl
lea
jge
iret
fyl2x
sub
mov
pop
rolb
ja
jb
jmp
xchg
movsb
mov
divb
out
movsb
dec
shrl
or
in
sbb
dec
aam
adc
lds
inc
cmp
xor
lret
push
out
inc
divl
popf
mov
or
std
jo
iret
sub
push
movsb
pop
stos
mov
fnstsw
jbe
enter
dec
push
inc
inc
or
dec
pop
adc
dec
pusha
das
in
das
insb
aad
push
pop
pop
jg
rorl
dec
mov
leave
stos
stc
or
sti
lock
outsl
cmp
jg
nop
lret
push
xor
dec
repnz
lods
jb
and
push
cmp
int3
cmpsb
xor
loop
dec
inc
inc
and
inc
in
adc
scas
or
divl
push
fisttpl
or
xlat
xchg
in
or
jp
add
gs
sub
dec
cli
xchg
lcall
jp
jp
es
inc
mov
lods
imul
out
xlat
jb
push
pop
jp
sub
sbb
push
out
pop
aas
scas
sbb
movsb
cltd
fwait
xchg
adc
fwait
dec
pusha
xchg
mov
sbb
push
jmp
outsb
fldt
jg
and
lods
sbb
lods
cmp
cld
adc
fiadds
sbb
fldenv
lds
mov
xor
movsl
fisttpl
push
and
add
and
xor
dec
inc
in
fwait
dec
std
mov
aam
push
cwtl
mov
mov
push
cmp
mov
lret
sbb
sub
mov
push
out
aam
push
leave
xchg
imul
mov
push
xor
sbb
sti
out
lock
daa
cld
cmp
dec
and
xor
push
lods
xor
fists
enter
mov
fisttpll
js
adc
movsl
int3
repz
sbb
scas
into
cmp
inc
jb
dec
push
call
mov
andl
push
xorb
sbb
xchg
adc
daa
push
je
sbb
lods
sahf
insb
imul
dec
fldl
out
sub
sbb
pop
test
aas
dec
imul
mov
jmp
or
mov
lret
mov
stos
push
adc
pop
sub
imul
push
outsb
ret
and
dec
les
jb
lods
jno
imul
and
rclb
stos
dec
lret
pop
or
loopne
es
mov
push
adc
outsb
outsl
dec
addb
mov
fs
mov
in
daa
inc
es
jb
imul
push
sub
je
xor
ret
mov
aad
loopne
shr
add
ret
add
popf
nop
insl
xchg
add
sub
pop
outsl
je
xchg
loopne
ljmp
fstpt
icebp
dec
stos
stc
dec
lea
int
mov
cmovg
jl
cli
xchg
adc
pop
popa
les
les
lcall
cmp
test
inc
arpl
dec
leave
lea
mov
ljmp
jo
sub
orl
ja
sub
mov
push
sbb
and
dec
adc
pop
push
pusha
dec
push
xorb
xor
jno
pusha
jnp
push
ret
lcall
push
mov
es
ds
or
sbb
or
xor
jp
in
dec
or
mov
mov
sbb
rclb
mov
adc
dec
and
arpl
aaa
loopne
mov
or
and
adc
or
lahf
dec
mov
inc
ljmp
in
dec
sbb
mov
into
sti
jecxz
mov
pop
bound
cmp
dec
pop
sbb
sub
mov
xor
lahf
cwtl
add
sub
pop
xchg
mov
ds
adc
repnz
and
mov
andl
out
xor
repz
mov
pop
or
inc
inc
shll
xlat
xor
inc
es
push
push
loope
xor
pop
in
filds
pop
mov
mov
xchg
inc
mov
add
pop
iret
loopne
ja
push
ss
mov
iret
addl
add
sub
pop
push
jbe
lds
dec
mov
inc
pop
es
cmpsb
add
daa
hlt
xor
notb
adc
sbb
push
jae
std
int3
jo
xchg
outsl
adc
xchg
andl
and
push
adc
cmp
je
xchg
push
call
outsl
popa
jbe
dec
outsb
idivl
pop
jecxz
jl
stos
mov
mov
jne
dec
xor
mov
jbe
les
leave
or
popa
cmp
xor
push
sub
inc
mov
pop
out
jnp
cld
mov
or
cmp
aam
jns
or
push
es
mov
pop
mov
cmc
imul
mov
add
inc
jg
pop
cli
dec
mov
fcoml
add
icebp
adc
ror
cmp
mov
pushl
inc
jl
lret
sbb
fildll
jmp
rorb
inc
outsl
and
lock
pop
mov
aad
in
je
gs
jge
mov
and
pop
lock
int3
push
dec
out
lret
orl
jno
les
adc
jp
int3
fcomp
test
mov
push
mov
popf
stos
and
jo
cmpsl
lods
ss
mov
jae
jl
xchg
cmp
lock
cmpsb
dec
repnz
push
mov
js
addr16
mov
push
pop
xchg
bswap
test
xchg
sub
jnp
cmp
cmp
leave
sub
stos
daa
jp
jne
out
xor
cmpsl
pop
js
insl
sbb
adc
mov
out
ja
rcl
inc
je
es
push
sub
fdivl
addl
inc
mov
mov
stos
out
push
stos
ret
ljmp
mov
fisubrl
jmp
push
dec
lods
sbb
push
sub
ja
in
repz
adcb
mov
xor
fdivp
js
jge
add
mov
pop
test
xor
inc
mov
in
loope
push
and
mov
sub
movsl
std
ja
sbb
sbb
int3
pop
add
stos
arpl
cmp
add
call
or
fsubr
jecxz
aaa
imul
adc
test
daa
idivb
repz
jae
cmp
push
iret
test
xlat
test
repnz
notb
lret
cld
fisttpll
jl
cmc
cmp
jl
lods
and
add
xchg
cmpb
add
jno
pusha
mov
sub
jge
cmpsb
adc
aad
leave
ret
push
movsb
fld
push
and
rolb
jmp
out
cmp
lret
sbb
sbb
dec
and
inc
out
pop
add
cs
jle
les
ss
jo
jae
xor
add
fadds
lea
insl
adcb
dec
mov
mov
or
jecxz
je
lret
je
es
fidivl
push
adc
mov
push
xchg
pop
addr16
jg
out
push
adc
cmp
sub
fsubrl
xchg
xchg
mov
cmp
jle
dec
mov
cmpsb
push
inc
repnz
xchg
outsl
push
or
jmp
or
fstps
pop
mov
in
pop
mov
adc
lds
lea
or
pop
jl
xchg
pushf
in
not
push
mov
fisubs
push
push
dec
fsubrl
mov
jns
mov
inc
arpl
inc
mov
jno
sbb
jg
pop
xor
inc
push
sbb
dec
sbb
repz
mov
repnz
bound
sub
mov
xchg
fisubs
pop
add
addb
jl
sbb
cmp
cmpsl
decl
sub
loop
clc
fisubrs
je
mov
and
add
into
fstl
mov
dec
movhps
bound
pop
jb
les
push
and
dec
dec
pop
aam
orb
fcom
out
push
out
iret
lea
lds
pop
test
mov
jne
popa
icebp
repz
push
ja
lret
cli
dec
cwtl
mov
or
je
scas
pop
xchg
mov
dec
xchg
fidivl
lcall
popf
aas
jne
dec
mov
dec
lds
aaa
in
mov
add
insl
ds
sub
pop
cwtl
clc
insb
pop
mov
mov
mov
pop
lea
push
and
aas
pop
div
xchg
xchg
imul
lods
shll
sbb
gs
aam
mov
jp
jmp
negb
ficoml
sbb
in
mov
sbb
xchg
cmp
icebp
stos
push
icebp
rcrl
hlt
test
adc
aaa
notl
dec
ret
and
add
add
jge
repz
xchg
ljmp
inc
cmp
lret
ds
mov
mov
jns
jns
dec
and
andl
inc
add
inc
test
mov
push
cltd
popa
clc
iret
cmpsb
sbb
fld
push
pop
notl
sub
pop
std
popa
out
add
movsb
adc
and
rcll
aad
aad
fbstp
sbb
add
lret
and
cmpsb
jl
mov
mov
jae
or
aas
sbb
ljmp
add
and
sti
mov
into
inc
mov
push
lods
lret
mov
jge
mov
add
push
xchg
clc
push
call
mov
and
mov
dec
clc
scas
pop
addb
and
xor
test
add
sbb
ljmp
jmp
xchg
mov
adc
xor
adc
es
cmp
arpl
xchg
xorb
daa
push
add
dec
cli
flds
adc
xchg
mov
repz
adc
cmp
movsl
add
int3
out
mov
or
bound
sbb
or
xor
ljmp
cmp
sub
lea
shrl
mov
xor
popf
les
or
xchg
into
jns
adc
and
call
xchg
and
cmp
xor
pop
in
and
lds
int3
aam
pop
xor
pop
add
lahf
inc
les
aad
negl
mov
movsl
fwait
pop
nop
enter
jb
movaps
je
jbe
test
fnstcw
ja
mov
pushf
shl
call
jbe
sbb
notb
cmp
lods
xchg
and
pop
test
imul
jne
insb
sbb
and
popf
loopne
cld
stos
mov
xlat
orl
push
jecxz
mov
imul
jge
fdivl
adc
sbb
insb
stc
gs
sarl
out
lahf
fwait
xlat
aaa
das
dec
sub
jns
shlb
or
cs
and
and
popa
mov
add
and
xor
movsl
mov
popa
dec
lds
and
sysenter
dec
test
fisttpll
jecxz
sub
out
fsubs
je
cmp
es
mov
inc
cltd
les
sti
femms
loop
loope
jae
push
sbb
pop
jo
insb
cli
and
out
ja
fmul
sarl
sbb
sub
mov
add
jl
or
xor
pusha
pop
sub
mov
pop
enter
stos
jb
fcomps
cwtl
pop
popa
aaa
and
pop
adc
or
call
fstpt
out
stos
push
das
xchg
daa
cmc
push
pop
dec
movsl
fldl2e
data16
pushf
jge
mov
push
dec
xor
stc
pop
xchg
adc
sbb
or
stc
fcmove
mov
cs
dec
adc
rcr
clc
insb
popf
sbb
into
lret
iret
push
pusha
push
enter
inc
sbb
movsl
inc
push
cmp
cmpl
inc
lods
mov
push
ja
fmull
pop
pop
mov
add
int3
inc
xchg
mov
push
lret
or
rcl
rcr
push
fidivl
mov
push
mov
lods
stc
dec
fcos
mov
je
adc
repnz
or
inc
pop
inc
mov
popf
lcall
lods
push
xor
cmpsb
sbb
ret
mov
jp
gs
xor
mov
or
aam
andl
fsubrp
jbe
dec
shl
les
push
or
push
xchg
repz
add
sbb
or
jns
cmp
movsb
imul
imul
in
push
cmpl
jns
inc
push
push
mov
shl
mov
add
push
pop
push
fisttpl
and
outsl
jle
xchg
mov
call
jo
out
scas
mov
pop
mov
aam
push
test
or
push
push
out
push
or
insl
mov
adc
mov
sbb
mov
mov
pop
in
mov
fcomps
cmp
popf
mov
ffree
push
mov
mov
add
fabs
mov
xor
dec
movsl
inc
or
lcall
adc
cmp
mov
lahf
mov
or
aam
call
in
gs
or
ljmp
pop
sbb
out
cld
test
push
sub
out
and
ljmp
rorl
push
gs
push
lock
jb
and
jns
and
lea
mov
mov
ret
lret
sub
loope
cmpsb
mov
pop
and
mov
scas
stos
stos
loopne
cld
ds
pop
xor
or
ret
mov
stos
ds
fisubrl
cmp
je
dec
xchg
addr16
cmp
inc
enter
hlt
sub
pushf
xor
push
inc
lods
push
jbe
mov
mov
jae
cmp
pop
xchg
xor
adc
cld
aas
in
out
adc
inc
mov
mov
insl
scas
or
popa
addr16
push
sarl
mov
cmp
xor
imul
or
pop
loope
aad
sarl
in
jle
nop
mov
xchg
sub
mov
xor
aam
pop
and
aad
xlat
pop
jle
jecxz
test
push
in
mov
pop
or
test
dec
int3
ds
mov
mov
push
lahf
scas
pusha
inc
js
mov
aaa
mov
and
inc
hlt
xor
jbe
mov
cltd
add
loope
js
lock
sbbl
mov
cltd
in
test
or
lcall
push
push
adc
mov
inc
xor
hlt
shlb
mov
mov
insl
data16
dec
gs
dec
mov
sub
mov
and
push
push
mov
pop
xor
inc
out
sub
adc
and
out
inc
and
push
adc
add
scas
cmc
test
mov
push
stc
gs
cmp
scas
cmp
cmp
jb
sub
insb
fneni(8087
imul
fdivrl
push
mov
daa
jp
lcall
into
inc
add
and
inc
jmp
pop
out
loope
push
mov
cmc
fsubp
mov
and
mov
or
leave
in
rorl
add
ja
lods
xchg
ret
xlat
aam
in
and
mov
pop
sub
dec
add
xor
xlat
call
idiv
inc
sbb
fildl
es
scas
das
push
mov
mov
sti
cmp
or
ss
cmpsl
and
mov
lods
aas
andl
lcall
push
shl
sbb
dec
sbb
inc
call
xchg
and
mov
cs
cli
ds
xor
test
xchg
mov
incl
xchg
fwait
lcall
bound
push
insl
jecxz
cs
inc
pop
scas
pusha
and
es
or
test
daa
cmc
jno
xor
cmp
stc
shlb
pop
inc
cmpsb
dec
lahf
ret
call
repz
xchg
fildl
ljmp
mov
mov
jae
push
sarl
mov
push
adc
xchg
jle
adc
pop
push
clc
mov
aaa
sbb
aaa
inc
xor
inc
mov
cltd
loope
popa
cld
mov
push
iret
call
inc
clc
mov
sub
clc
and
aad
aad
out
ljmp
rorb
in
ret
and
iret
lea
inc
jno
cmpl
xor
out
xchg
add
popf
je
shrb
push
adc
sbb
leave
fwait
out
es
sahf
sti
add
loop
popf
sub
es
hlt
add
orl
sub
xchg
mov
add
ret
xchg
jns
out
mov
jge
mov
jg
lods
repz
stos
lods
jl
mov
push
addb
and
int3
dec
outsl
cmp
sbb
inc
insl
and
push
push
lcall
mov
int3
jo
mov
in
shlb
jae
scas
dec
cltd
xchg
dec
stos
mov
cmp
insb
dec
xlat
xor
jl
cmp
sahf
les
arpl
add
sbbb
add
push
sbb
mov
into
das
scas
pop
xor
test
fs
cmpsl
push
call
imul
ss
xchg
mov
scas
jae
xor
ds
mov
pop
dec
fdivs
daa
into
cmp
and
jmp
dec
dec
imul
add
mov
mov
push
push
scas
jne,pt
pushf
imul
and
clc
cmp
in
loopne
lahf
das
xor
daa
or
repnz
xchg
sbb
mov
jae
andb
jo
xchg
daa
mov
lret
or
mov
dec
mov
into
cld
test
mov
mov
xchg
pavgw
adcb
mov
mov
jns
fwait
das
outsl
add
xor
stc
dec
and
in
sarb
mov
leave
outsb
mov
or
dec
sar
jmp
js
mov
repz
and
idivl
mov
clc
xchg
cmpsl
pusha
dec
push
mov
push
inc
and
xchg
sub
cmp
lock
in
xor
mov
adc
lret
cmp
xchg
sar
sub
mov
fcomi
mov
cltd
push
cltd
cmp
mov
adc
jb
inc
stc
xchg
xchg
mov
mov
inc
xchg
ss
mov
lea
adc
sbb
jbe
imul
pop
movsl
ljmp
lea
into
mov
mov
pop
add
das
mov
movsb
push
mov
test
fsub
mov
jecxz
leave
xchg
in
adc
jge
repz
insb
sar
sbb
shl
push
mov
movsb
sahf
js
inc
subl
fsubs
jmp
inc
or
dec
mov
xor
push
cli
xor
cli
addr16
aaa
mov
fs
shll
daa
popf
in
xor
adc
push
imul
mov
shlb
xchg
sbb
jne
enter
outsl
jl
cmp
dec
sub
jge
push
mov
out
sbb
xor
xchg
mov
ror
pop
in
icebp
subl
jmp
movsb
push
or
mov
movsb
cmp
scas
adc
sub
mov
out
mov
cmp
mov
fbstp
and
ret
jecxz
push
adc
icebp
ljmp
rol
call
mov
push
fldcw
push
pop
pop
jl
and
bound
and
pop
cmp
mull
imul
jns
into
stos
xor
xchg
bound
or
fbstp
dec
pop
xchg
dec
in
mov
adc
ss
adcb
adc
stos
cmp
push
les
sub
scas
cmp
outsb
int3
mov
outsl
mov
int3
push
imul
repnz
mov
push
add
stos
xlat
sub
jp
push
xlat
push
cmp
aad
pushl
dec
test
daa
sbb
popa
fistpl
sub
leave
cmc
movsl
sbb
xor
ljmp
fnstenv
aas
cmp
inc
pop
adc
outsb
negl
ja
adc
and
stos
adc
lea
mov
xorb
or
test
or
jle
in
test
push
lret
xchg
roll
jbe
sti
shll
js
push
xor
mov
sbb
fidivl
xlat
rol
rep
add
mov
cld
mov
movsl
pop
jg
das
jmp
aam
popf
sub
jnp
add
jp
push
sub
stc
jno
inc
dec
lea
aas
xchg
fld
lcall
jl
push
js
lds
pusha
ja
xchg
cmpb
cmp
inc
stc
nop
push
pop
push
sbb
or
or
or
out
sbb
mov
pop
jns
or
add
js
dec
mov
dec
sub
out
mov
insb
dec
jae
push
inc
mov
test
cmp
sub
enter
repnz
addr16
daa
push
rcrl
mov
add
xlat
mov
xchg
ret
lcall
nop
repnz
outsb
out
outsb
sbb
aaa
pop
fisubrs
cmp
stos
ja
sbb
or
inc
adc
or
je
xor
mov
xor
pop
pop
loopne
mov
popa
clc
std
movsl
loope
xor
ljmp
cmp
mov
lcall
negl
cld
enter
cltd
into
out
jns
leave
call
cwtl
outsl
sbb
cmp
aam
or
lcall
push
in
pop
into
jne
jno
or
es
add
jns
mov
pop
dec
sbb
fidivrl
sub
stc
stos
rcrl
scas
xchg
aad
xchg
ja
sub
mov
xchg
in
cmp
or
lea
jbe
mov
and
push
insl
xor
fmull
xchg
adc
mov
push
cmp
jb
mov
jmp
pop
shl
dec
push
adc
sub
and
push
sarb
xor
dec
lods
jb
mov
or
fmull
push
mov
pop
xchg
lret
push
inc
outsl
fcoms
or
sub
call
mov
cltd
or
cmpsl
sbb
stos
imul
mov
movsb
movsl
shl
cmp
arpl
mov
mov
lods
pushf
xor
xchg
cmpsb
js
scas
jmp
rcll
jno
aaa
fldenv
mov
fadd
cwtl
loope
push
add
adc
xchg
arpl
add
int3
pop
xor
jae
in
js
mov
sbb
lds
stos
popf
rclb
imul
jp
lcall
faddl
mov
out
mov
ja
lret
imul
aas
imul
push
fdivrl
pop
adc
xor
aad
fcompl
push
mov
rorl
loopne
lcall
inc
dec
jo
dec
xlat
mov
dec
fwait
addb
into
orb
xchg
fdivs
test
sti
jnp
pop
test
adc
push
xor
shlb
inc
pop
inc
and
flds
push
dec
repnz
adc
mov
enter
inc
incl
push
fdivp
out
dec
lret
pop
imul
xor
in
rcrb
lret
cmp
outsl
cmp
add
mov
out
insl
and
jg
or
loope
and
imul
sahf
cmp
xor
adc
pop
push
xchg
sub
fsubl
inc
adc
xchg
ss
add
sub
out
inc
adc
insl
inc
ret
cld
xchg
jno
stos
in
add
incb
ret
push
xchg
cmp
xchg
fildll
ret
pop
mov
stos
and
xchg
mov
sub
cs
sub
bound
data16
aad
and
insb
jge
pop
pop
inc
movsb
cmp
ja
jno
push
xchg
inc
cltd
cli
cmp
movsl
sbb
nop
getsec
lods
repnz
dec
lcall
scas
sbb
lea
pop
mov
jecxz
or
push
dec
xor
sahf
loop
lret
cs
xchg
es
dec
psubq
inc
js
cltd
jno
test
jbe
leave
cltd
add
dec
mov
fs
fwait
push
mov
cmp
in
out
in
cld
xchg
loopne
sarb
adc
jae
subl
rorl
rorl
scas
stos
out
in
cmp
jne
and
mov
add
pop
dec
xlat
sbbb
mov
dec
xchg
repnz
int3
jle
pop
scas
gs
out
mov
jno
stos
mov
imul
dec
outsb
dec
cltd
adc
leave
and
pop
test
inc
xchg
rcl
rorl
pop
test
std
or
jns
cmp
imul
and
mov
jp
and
loopne
mov
push
mov
push
fs
xor
fstp
ds
adc
mov
mov
negl
pop
jo
jno
sub
arpl
xor
mov
out
mov
dec
pop
cmp
rcrl
test
mov
inc
icebp
push
xchg
lea
movsb
lods
push
mov
pop
adcb
add
leave
xor
int3
mov
add
sti
mov
xor
aad
and
sub
dec
pop
call
add
mov
das
xlat
jae
sub
pop
movsb
mov
push
cmpsl
jge
xchg
adc
jbe
lret
mov
and
sub
bound
mov
scas
pop
cmp
std
aam
mov
je
adc
jo
lea
xor
fistpll
sub
stos
cmp
fs
add
jecxz
psubsb
fninit
fisubrs
sub
sub
and
movsl
sti
stos
notb
shll
add
mov
les
pop
inc
and
pop
outsb
sub
std
push
xor
jge
mov
movsl
imul
bound
xor
loope
sub
mov
xchg
out
pop
pusha
std
sub
mov
movl
daa
cs
cmp
loope
out
imul
aaa
mov
fldenv
sti
cli
notl
or
pop
dec
outsl
sbb
js
sbb
adc
aad
les
jns
flds
loop
mov
mov
dec
or
or
and
sub
aaa
cld
jo
push
xchg
push
test
or
nop
add
mov
jo
dec
push
nop
lds
aam
frstor
leave
movsb
jno
add
inc
repnz
pop
scas
dec
test
pop
dec
jl
les
sbb
sub
sub
adc
in
repz
pusha
adc
and
sub
jg
fdiv
adcb
mov
gs
add
sbb
dec
cmc
or
and
pop
xor
rol
sahf
cmp
xchg
mov
ja
sbb
andb
lret
clc
bound
je
add
push
and
inc
sahf
pushf
movl
setl
cld
mov
lret
jmp
filds
vpminub
jmp
cltd
and
pop
lea
ds
je
movsl
iret
loop
sub
push
sub
nop
les
out
and
clc
and
dec
mov
or
and
push
mov
mov
pop
scas
pop
mov
mov
xor
repnz
dec
xor
popf
dec
out
sbb
arpl
dec
mov
addr16
push
jge
jecxz
mov
insb
sahf
cs
sbb
rcl
cwtl
cltd
pop
xchg
out
unpckhps
imul
xor
leave
jne
jmp
add
jmp
jle
pop
mov
dec
cmp
sub
lds
xor
cltd
arpl
xchg
jl
push
scas
leave
in
cmpsl
cmpsl
mov
cmp
stos
das
mov
push
mov
popf
add
sahf
xchg
cmp
lock
sbb
sub
push
sub
mov
call
mov
mov
stc
lock
cmpsl
pop
mov
fisubl
push
sub
xor
cmp
xor
pop
mov
dec
push
xchg
add
pop
dec
cmpl
les
and
pop
and
cmc
ret
inc
adc
sbb
xor
and
jmp
repz
pop
inc
test
imul
sbb
addb
dec
roll
and
push
xchg
es
dec
jnp
jl
cmpsb
insl
aas
mov
jp
or
jecxz
cwtl
or
call
into
mull
and
mov
stc
mov
jns
cmpsl
sbb
test
mov
shl
js
push
push
xlat
xchg
xchg
call
add
daa
pushf
ds
int
jbe
pusha
push
insl
aaa
cmp
fiaddl
fldcw
enter
push
cli
repz
xor
sahf
arpl
jbe
loopne
lret
jae
cmp
jno
insl
das
mov
das
lock
push
inc
iret
adc
lock
xor
pop
cmpsb
cmc
in
jecxz
pop
fwait
inc
out
movl
je
imul
rol
cmp
or
sub
icebp
mov
xchg
bnd
adcb
mov
xor
pop
jnp
jp
sahf
fisubrs
or
jne
popa
hlt
dec
inc
outsl
fldl
cmpsl
repnz
mov
mov
imul
pop
or
fdivrs
in
mov
orl
jno
lock
insb
push
push
mov
sbb
arpl
push
imul
addr16
dec
sub
push
stc
xor
fs
clc
rcrl
mov
and
xor
repz
outsb
test
jmp
dec
into
and
and
out
mov
and
hlt
inc
notb
aad
sbb
jl
adc
sub
mov
int3
pop
and
cmp
ja
gs
push
out
inc
push
in
es
dec
push
ficoml
out
xchg
mov
or
imul
cmpl
outsb
and
dec
xchg
imul
cmp
js
cmc
mov
mov
sahf
test
jns
xor
cwtl
out
mov
cmp
ja
adc
mov
fcom
xchg
pushl
fldenv
sub
imul
jl
push
jl
push
les
sbb
arpl
sub
fsubrl
cmpsl
or
sbb
or
icebp
dec
loopne
test
test
cmp
ja
jo
sbb
xchg
leave
outsl
mov
sti
cmp
addb
ffreep
sub
inc
sub
movsl
stc
pop
aaa
fcmovnbe
ss
sbb
enter
dec
push
xchg
movsl
lahf
xor
adc
xchg
lret
ret
in
push
aad
jecxz
mov
stos
mov
ja
sti
mov
lret
or
repz
rcl
jmp
push
in
loop
pop
mov
adc
sbb
adcl
es
andl
aas
push
cmp
mov
push
sbb
cmp
or
mov
cmc
imul
daa
push
loope
pop
push
mov
xchg
ljmp
roll
push
idivl
mov
cmp
mov
add
jge
and
call
mov
mov
sub
and
test
mov
sti
cmc
add
in
lahf
in
in
cmpsb
cmc
mov
cs
repz
hlt
ss
gs
les
mov
in
jp
sub
cmpsb
push
aas
cltd
imulb
psubq
xchg
jns
in
popa
dec
pop
cli
xchg
xchg
hlt
jg
es
cmp
or
daa
sub
lea
mov
sub
sarb
pop
dec
push
pop
push
mov
adc
ret
xchg
ss
fsubs
stos
aam
inc
callw
inc
sahf
lahf
mov
ror
pop
cmp
mov
es
push
aad
popf
add
sub
fstpl
dec
movsl
xorl
or
or
outsl
dec
call
repz
cmp
jmp
loop
mov
pop
dec
aam
movsb
pop
mov
filds
fstps
popl
adc
sti
dec
fidivrl
mov
add
call
bound
xor
mov
mov
test
push
mov
repnz
mov
lock
les
push
mov
sti
sub
in
int
adc
adc
mov
ljmp
inc
lcall
push
loope
jge
lods
mov
inc
jle
jns
push
bnd
int3
movsb
popa
movsb
and
push
cmp
int
lock
ss
mov
mov
pop
mov
add
add
stos
cmpb
mov
adc
inc
sbb
clc
mov
xchg
inc
mov
stos
cmp
add
lods
notl
jo
mov
cmpsl
mov
fsubrl
jb
mov
mov
aaa
pop
ss
scas
int3
cltd
out
mov
push
cmp
lahf
je
cmp
mov
or
cs
pusha
mov
cmp
ret
xchg
and
dec
in
insb
adc
fs
ljmp
cmpl
add
fldenv
test
and
lahf
and
mov
pop
xor
jle
sub
sub
push
pop
das
cmpsb
xlat
test
sub
cltd
aas
dec
push
dec
loope
jecxz
pop
pusha
lret
nop
in
int
mov
out
mov
push
pop
aas
aam
xor
add
sub
ds
push
adc
sub
sub
inc
inc
int3
jb
in
movsl
add
xor
adc
cmp
fs
loope
insl
xchg
push
stc
daa
add
mov
shrl
arpl
je
jecxz
cmpsl
into
mov
imul
nop
jb
aad
ret
movsl
adc
les
add
pop
mov
fs
movsb
imull
test
sub
sbb
fimull
xorb
lret
sar
adc
lods
ss
rcrb
add
and
dec
dec
lret
fimull
dec
mov
mov
enter
jmp
sbb
adc
xchg
shlb
push
movsb
sbb
sbb
and
xor
sub
sub
cmp
xchg
je
arpl
rcl
jecxz
js
cltd
adc
testl
insl
insl
in
inc
or
xchg
loop
dec
fnstsw
data16
add
adc
fistpll
adc
push
dec
add
fs
mov
jl
cmp
cmpsl
enter
outsb
cld
mov
hlt
lea
lret
sahf
cmp
sti
push
mov
xchg
or
xchg
int
shlb
or
cs
leave
push
xlat
jae
mov
jp
mov
jecxz
xor
std
push
fsubp
pop
xorl
daa
stc
sbb
pop
daa
rcrb
and
jmp
dec
and
add
xlat
addr16
sbb
push
adc
test
xchg
dec
dec
sbb
data16
or
test
popf
and
jbe
cmpsb
int
das
ja
xchg
xchg
mov
jp
pop
push
inc
aas
add
or
push
sbb
aam
int
pop
inc
lock
inc
iret
mov
jmp
addr16
cmc
test
es
pop
test
jno
fists
push
xchg
pop
arpl
imul
xor
sbb
cmp
jmp
xchg
push
jne
lret
push
or
adc
push
imul
rcl
xlat
and
imul
cmpsb
lret
in
add
push
imul
dec
addr16
jbe
out
mov
fsubr
cmp
rcr
fidivrs
or
push
inc
inc
insb
outsb
popl
cmp
mov
fcmovne
cmc
inc
pop
enter
test
push
sarl
mov
xor
movsl
or
ss
mov
insl
pop
call
xchg
jo
pop
jo
imul
nop
xchg
dec
xlat
lcall
sbb
or
jl
nop
pop
cld
xchg
lcall
nop
mov
popf
mov
mov
cmp
subb
icebp
lahf
ds
std
insl
dec
and
and
lea
and
sub
out
leave
shlb
adc
je
sarb
repz
mov
insb
subl
loope
or
out
rcrl
mov
push
pop
cltd
xchg
or
movl
pushf
lods
push
sub
scas
sub
sub
test
data16
jno
jge
dec
add
subl
inc
pop
fstpt
push
sub
std
or
dec
pop
sub
push
shl
push
cmp
xchg
jle
sbb
jb
lahf
ret
or
push
jne
mov
mov
cmp
fistpl
cmp
es
adc
js
mov
popf
pop
jae
dec
adc
and
mov
out
push
in
loop
jle
mov
in
cmp
out
sub
adc
popf
out
mov
add
xor
mov
cmc
test
xchg
mov
loop
js
xor
daa
icebp
nop
jne
jge
gs
pop
push
hlt
and
mov
inc
and
add
jl
or
mov
mov
push
xor
push
adc
xchg
inc
nop
leave
mov
push
xor
sub
cli
dec
test
push
cmpl
imul
mov
nop
std
imul
movsb
aas
add
jo
xor
fists
adc
xchg
pop
push
ja
out
cltd
mov
mov
and
lcall
sub
sbb
xchg
shll
test
or
jno
add
push
dec
js
adc
or
xchg
paddsw
je
pop
daa
aam
ret
sub
or
jp
xchg
es
out
pop
sti
imul
fiadds
jp
pop
orl
in
popf
js
pop
in
xchg
xlat
mov
mov
add
mov
fadd
sub
add
sbb
lock
enter
aaa
inc
pop
cltd
xor
pushf
mov
mov
adc
push
scas
out
daa
xorb
and
addr16
mov
in
mov
les
iret
cmc
addr16
jno
sbb
push
std
push
lret
inc
stc
push
xchg
adc
or
addl
sbb
aas
xor
popf
data16
clc
sub
pop
ljmp
das
adc
push
xchg
cmp
mov
mov
test
pusha
and
mov
das
stos
mov
mov
sbb
inc
in
inc
sub
push
ja
mov
add
lea
pop
jge
lahf
shrl
es
jnp
push
mov
cld
inc
ret
out
test
dec
outsb
cmp
sub
mov
sti
movsl
sub
lcall
pop
lods
push
insl
js
lcall
stc
rolb
jmp
dec
imul
mov
mov
outsl
xchg
gs
xchg
xchg
mov
cmp
test
outsl
pop
rol
rolb
pusha
test
push
mov
fildll
xlat
and
sbbl
mov
push
or
js
push
cmp
push
ds
push
mov
fcoms
xchg
dec
and
stc
adc
scas
xchg
repnz
mov
xor
aaa
xor
jae
inc
mov
std
push
pop
repnz
inc
mov
push
clc
sub
ljmp
mov
jno
aas
gs
dec
imul
inc
mov
xor
lock
call
pop
pushf
mov
cmp
clc
aam
rolb
add
loope
xchg
fwait
insl
pop
jo
aas
dec
cltd
aaa
cmp
dec
push
cld
fmul
sbb
push
arpl
jge
lret
pop
es
add
mov
fadd
jae
fmul
addb
inc
jo
cmp
xor
jno
sti
into
xchg
and
mov
push
pop
addb
jp
or
std
or
jnp
into
and
out
iret
mov
mov
popf
stc
aas
int3
test
jns
jns
pop
adc
loope
mov
rcr
xchg
xchg
pop
xchg
cmp
ret
xchg
inc
cmp
les
xchg
mov
sub
pop
jl
xor
daa
dec
test
push
pop
inc
pop
pop
lret
in
mov
fildll
addr16
sub
mov
test
push
xor
fsubrs
adc
sbb
push
ja
jo
cmpsb
adc
lret
pop
mov
mov
enter
pushf
fsubrs
shll
lret
repnz
stos
repnz
mov
push
pushf
mov
cmp
add
das
mov
stos
mov
push
in
push
out
stc
hlt
fidivs
sub
testb
dec
insb
xchg
imul
outsl
pop
adc
jne
mov
pop
scas
pushf
mov
movsl
out
push
pop
outsb
sbb
cs
jno
pusha
jbe
jnp
movsb
dec
pop
xor
ficoml
xchg
lods
xor
pop
outsb
xor
lds
push
fwait
jnp
cwtl
sub
int
push
lret
outsl
sub
xchg
loop
addl
popf
jl
mov
repnz
imul
add
mov
add
jl
push
int
push
iret
in
mov
jbe
data16
out
and
mov
jns
test
cmp
xchg
mov
xchg
mov
xor
fnsave
push
sbb
nop
rorl
mov
jmp
sti
out
cmp
loope
movsl
aam
test
inc
jge
jmp
add
sbbb
jge
test
and
int3
dec
movsl
cmc
and
mov
jge
xor
je,pt
and
jbe
cmpsl
and
imul
out
sbb
cmp
cmp
sbb
out
or
iret
jle
movsl
lea
push
lock
outsb
enter
jmp
rorb
push
mov
push
cs
js
jl
test
test
pop
jg
jno
add
or
rcr
in
cmp
cmp
fldl
loop
and
xorl
pop
xlat
mov
outsb
cwtl
sub
adc
dec
pop
scas
xchg
lahf
insb
mov
pop
or
adc
xor
aas
pop
imull
mov
xchg
push
xchg
xchg
pop
pop
aad
icebp
or
stos
lds
mov
nop
out
mov
stc
pop
shr
leave
push
rclb
mov
inc
mov
in
dec
inc
nop
in
movsl
adc
add
adc
xchg
and
dec
loope
xchg
int
pop
ss
push
mov
mov
pop
out
fcomps
jno
sti
cmp
cmpsb
xor
inc
rcl
dec
add
insl
pop
leave
fwait
fwait
movsb
in
ss
mov
pop
int
mov
mov
cmp
arpl
mov
lods
leave
and
roll
cs
jg
sub
fcmove
push
push
xchg
fidivrl
lods
inc
xchg
lds
add
xchg
or
sahf
add
nop
cmc
add
imul
cltd
mov
into
les
mov
dec
adc
mov
adc
aad
or
fcomps
and
push
cmp
cli
int
in
js
jno
jb
add
ss
scas
fldenv
lcall
mov
leave
dec
push
mov
aaa
mov
xorb
inc
add
cmp
sbb
imul
in
adc
xor
xchg
mov
sub
xchg
pop
lret
mulb
cltd
mov
push
xchg
shl
cli
pop
test
sbb
mov
pop
inc
stc
sub
mov
mov
cmpsl
or
mov
sbb
mov
shll
pop
std
nop
daa
in
xchg
sub
sbb
ljmp
ja
lahf
mov
pop
sub
jae
les
jp
rcll
xor
add
pop
adc
pop
test
lods
in
mov
or
sbb
popa
dec
inc
push
inc
mov
push
mov
loopne
xlat
repnz
je
mov
ds
jbe
jecxz
sbb
or
dec
lahf
cmp
sub
inc
das
mov
popa
popa
pushf
mov
fildl
mov
xchg
cmpsl
dec
movsl
retw
xlat
ret
pop
daa
xor
and
les
cmp
sbb
popa
or
pop
mov
and
hlt
addl
shll
add
dec
fucomp
dec
inc
call
pop
cltd
mov
jle
cmc
lods
aas
test
lret
sbb
mov
xchg
fsubr
push
lcall
shl
aas
mov
jbe
aas
push
xchg
xchg
or
xor
jmp
xor
jl
jl
sahf
push
xchg
icebp
xor
xchg
outsb
cmp
bound
pusha
push
xor
mov
xchg
js
int3
jae
xchg
test
rcr
jne
aam
ja
ss
js
or
rcll
addr16
ret
dec
dec
in
pop
fisubs
shll
cmp
fsubs
mov
sub
cmp
rorb
push
std
popa
jmp
dec
push
flds
add
sub
fsubrl
sub
test
orl
jecxz
push
add
xchg
push
cmp
push
inc
or
out
sub
mov
nopl
lock
adc
xor
fdiv
sbbl
negb
push
cmp
out
hlt
and
xor
add
pop
add
rolb
lret
cmp
dec
dec
or
sub
jae
dec
inc
jb
in
cli
addr16
pop
lods
lds
cmp
dec
sti
fwait
jbe
xor
daa
jb
mov
clc
hlt
push
lock
fstps
dec
shrb
push
iret
int3
push
popa
mov
mov
clc
add
fmuls
xchg
nop
stc
inc
jecxz
adc
jnp
mov
sub
pop
enter
cmp
mov
sub
sub
push
jecxz
into
in
cwtl
pop
fimuls
fimull
rcrl
hlt
mov
mov
inc
sbb
mov
fldenv
dec
pop
push
bound
xor
sbb
ja
fildll
or
imul
enter
aas
sbb
dec
js
hlt
aam
xchg
add
mov
lods
leave
pop
arpl
sub
push
mov
hlt
std
shlb
in
stos
sub
pop
mov
push
ret
fdivs
jno
mov
mov
sub
pop
jae
add
scas
adc
xor
sub
sbb
out
cltd
adc
jp
xor
pop
mov
cmp
imul
mov
push
sti
and
or
xor
lcall
arpl
ss
sub
jae
inc
int3
outsb
cmp
in
pop
shr
pop
movsb
xlat
sahf
inc
enter
ds
sub
aas
and
push
mov
or
inc
sub
inc
fsubrl
jecxz
ss
enter
xor
jge
cmp
inc
pop
mov
inc
shrb
daa
push
xchg
clc
xchg
icebp
pop
fidivrs
sti
push
lock
add
jno
popf
add
lock
nop
jnp
ret
pop
jle
leave
jge
outsb
xor
xchg
sbb
sub
inc
jge
cmp
mov
fsubrp
sub
sub
dec
adc
dec
mov
fiadds
add
cmpsl
popa
xorl
adcl
movsb
fnstenv
sbb
shrl
into
mov
cmp
in
cwtl
das
jbe
sbb
sbb
shll
push
imul
push
data16
cmp
jb
outsl
sub
adc
std
testl
mov
and
loop
andb
or
mov
es
test
pop
mov
mov
sub
loopne
or
les
and
inc
adc
lret
xor
inc
roll
mov
jp
fldl
pop
adc
and
lret
inc
or
adc
sub
mov
pop
mov
xor
xchg
filds
jg
movsb
pop
shlb
xchg
push
sbb
iret
in
stc
cmpsl
cmp
mov
cwtl
into
je
push
out
scas
adc
mov
aaa
movsb
mov
nop
xchg
shrl
mov
insl
and
mov
xlat
mov
mov
push
pop
aam
iret
cmp
pop
xor
sub
in
jno
aaa
mov
add
test
jmp
dec
xor
fwait
pop
insl
cmpsl
dec
push
iret
iret
push
pushf
outsl
or
cmp
adc
pop
ljmp
js
add
lods
mov
jg
inc
or
xchg
pop
adc
aas
mov
aas
inc
shlb
pop
out
or
test
scas
pop
xchg
push
sub
add
lcall
sub
rclb
sbb
or
ss
rol
add
jno
push
and
xchg
sahf
leave
jae
pop
inc
jecxz
add
dec
push
sarb
test
div
push
jge
sub
sahf
xor
add
rolb
fidivrs
mov
repnz
and
sbb
cltd
orl
xor
lods
jne
lahf
add
sbbb
mov
lea
fldt
adc
in
fwait
xchg
mov
add
mov
xchg
cwtl
mov
loope
shrl
or
push
inc
add
insl
scas
outsl
add
mov
lret
cmp
jnp
adc
gs
xor
jp
fbld
in
iret
arpl
fildll
xor
or
xor
lods
xor
pop
lahf
aam
out
jmp
mov
aad
enter
mov
mov
out
sub
pusha
mov
mov
arpl
jecxz
lock
aas
das
scas
xlat
loop
mov
add
and
dec
nop
loope
sahf
test
or
imul
sahf
clc
push
xchg
pop
je
lods
mov
pop
cmc
gs
rcrl
js
sbbl
call
inc
lods
and
push
add
xchg
rcll
aam
gs
sahf
sbb
lret
aas
sub
int
dec
repz
int
xchg
xor
lcall
fmulp
push
aas
and
subb
lea
adc
addr16
fucomp
out
lea
shlb
jne
dec
or
pushf
mov
pop
ret
lods
sub
mov
imul
mov
scas
mov
or
ftst
sub
and
mov
lods
insb
fildl
adc
lods
sar
jg
mov
and
jecxz
mov
or
fcompl
xor
divb
mov
xchg
out
test
cli
ja
and
jbe
ljmp
nop
clc
mov
adc
cs
negb
add
sub
fnstenv
xchg
push
aaa
mov
and
sbb
cmpsl
stos
lods
rclb
or
adc
movb
shl
cli
in
jp
iret
xor
mov
fimuls
inc
dec
pop
stos
test
addr16
in
mov
fstpl
cmpsl
in
push
sbb
out
push
mov
addb
addr16
sub
paddusw
mov
xchg
sbb
xchg
and
cmp
mov
adc
push
mov
pop
les
call
jo
inc
ja
lret
mov
sbb
roll
pop
jmp
aad
jp
xchg
jo
pop
outsb
jge
push
xor
gs
fisubrl
in
sarb
xchg
push
bound
mov
jns
aaa
out
push
and
fsts
push
xchg
mov
mov
inc
mov
add
in
sahf
inc
push
test
push
loop
fldl
push
pushf
pop
jno
ja
sbb
and
jge
lea
xor
inc
adc
or
popf
or
mov
jle
push
jmp
mov
xchg
push
pusha
fisttpll
and
fwait
icebp
inc
xchg
xchg
inc
subw
dec
add
xor
mov
cmp
push
mov
mov
mov
adc
mov
xlat
or
adc
mov
jae
in
test
sbb
hlt
loopne
cli
cmp
loope
aas
loopne
clc
xor
mov
xlat
cmp
xchg
sub
xlat
mov
inc
push
pop
fisubs
jno
pop
dec
fists
sub
push
push
sub
data16
and
pop
pop
push
bound
cli
adc
pop
push
in
or
mov
xchg
mov
test
int3
test
sub
test
sbb
pop
pop
es
jp
fimull
mov
rcr
cmpsl
ror
addb
aas
imul
mov
pop
and
sbbl
adc
stos
shrl
arpl
push
lock
clc
push
out
out
jne
dec
sbb
addr16
lods
roll
or
aas
insb
repz
jecxz
loop
xor
push
sbb
inc
adc
fcompl
cmc
std
data16
sub
outsl
ret
add
fcompl
movsb
rorb
lods
pop
enter
insb
sub
scas
insl
into
mov
scas
sahf
jp
jb
call
popa
cwtl
enter
or
inc
movsb
inc
sub
mov
xor
jnp
cltd
pop
shrb
add
fcmovnu
adc
mov
push
cmp
sub
stc
cs
or
mov
cmp
mov
push
mov
push
sub
ljmp
or
cli
movsl
movsb
loop
fnstsw
imul
lea
lcall
in
adcb
jge
push
mov
leave
movsb
and
fstpl
shlb
push
dec
lret
jp
aas
in
repnz
push
in
adc
xor
fisttpll
pop
xor
lds
xchg
mov
xlat
adc
sub
stos
test
jg
and
jge
jns
jp
nop
lods
cmp
scas
andl
js
in
xor
xchg
stos
out
pop
leave
jns
or
clc
adc
mov
fistpl
sarb
pusha
outsb
gs
or
mov
mov
mov
cmp
mov
push
cwtl
aam
push
pop
daa
sahf
jmp
adc
push
push
jp
dec
test
add
cli
mov
inc
cld
sub
pusha
cli
scas
movsl
faddp
jl
or
fwait
nop
gs
rcrb
imul
cmp
pop
out
xchg
movsl
inc
adc
jge
fdivs
mov
int3
adc
adc
jne
mov
dec
adc
fwait
push
ret
mov
insl
test
xchg
ljmp
dec
fwait
push
loop
cmc
sub
mov
pop
dec
inc
add
and
lods
fiaddl
jb
xlat
movsl
ja
cmpsb
pop
sbb
xchg
pop
test
hlt
dec
dec
shlb
pop
push
loope
lea
bound
mov
adc
sbb
mov
aad
push
cltd
out
xor
cltd
jnp
test
pop
pop
or
lods
std
pusha
pop
push
repnz
jp
call
sbbb
addr16
std
clc
subl
xchg
or
pop
sub
js
mov
aas
xchg
xor
cmp
ljmp
arpl
int
mov
in
test
imul
mov
or
insb
xchg
sub
adc
sahf
adc
and
lea
push
xchg
or
dec
cwtl
mov
xchg
data16
xchg
cli
pop
mov
fnstcw
cmp
addl
fdivrl
jne
or
pushf
jb
std
outsl
cmp
je
push
popl
add
stc
cld
in
cmp
and
xorl
or
mov
popa
adc
nop
jb
pop
repz
ja
test
jmp
cwtl
push
jmp
fcoml
cmp
mov
jecxz
xor
sbb
fnstsw
xchg
add
and
ret
mov
das
sbb
mov
out
sbb
or
pop
lds
loope
mov
xchg
push
decb
adc
jmp
pop
and
mov
pop
pop
and
pop
xchg
sub
cmp
adc
daa
lret
or
and
arpl
lcall
aam
push
pop
lock
sbb
pop
mov
fldt
jns
pop
bound
jns
aam
sub
sub
inc
cmp
xchg
mov
scas
out
sbb
xchg
ja
xor
bound
mov
push
je
imulb
test
icebp
movsl
inc
cmp
or
mov
cmp
xchg
imul
lahf
ljmp
imul
fnsave
ss
subl
sbb
js
test
loop
mov
testl
les
add
push
add
add
cld
inc
popf
xchg
push
inc
aas
ret
jae
inc
das
pop
jg
mov
pop
mov
mov
out
iret
dec
je
test
fdivrl
cmp
enter
sbb
orb
bound
scas
ret
pop
add
add
fistpl
or
ficomps
push
fcomi
movsl
hlt
sub
mov
mov
testb
mov
inc
add
lret
cmpsl
mov
and
mov
adc
dec
mov
adc
je
adc
iret
push
imul
add
cmc
mov
movl
adc
test
cmp
fidivl
iret
lea
sbb
aaa
aam
fadd
sbb
fisttpll
or
mov
and
mov
ret
call
push
insb
jmp
fnsave
loop
sbb
adc
xor
fmuls
iret
repz
mov
movsl
cmpl
sub
out
mov
inc
test
aad
push
outsl
xchg
dec
das
push
adc
sbb
movsl
lcall
shll
and
insl
push
sub
sub
cmp
cmp
repz
dec
lahf
push
pop
bound
mov
mov
mov
fsts
call
lods
test
shlb
cmpsb
pop
sub
add
inc
push
sbbl
pop
cli
mov
cmp
inc
fimuls
notl
mov
lret
xor
mov
and
sahf
repz
repnz
ret
pop
mov
sbb
jo
mov
test
xchg
mov
lock
mov
push
push
stos
mov
jae
xlat
arpl
fildl
mov
scas
std
sarl
leave
leave
sahf
and
jp
call
imul
push
mov
cmp
and
ret
scas
sbb
xor
idivl
push
pop
popf
sbb
movsb
movsb
xor
pop
add
fdivl
scas
inc
ja
fldenv
cs
or
leave
ss
push
in
scas
mov
mov
mov
fdivs
pop
xor
xor
ss
movsl
and
cs
jb
mov
mov
pop
addr16
xor
clc
push
sbb
fidivs
cs
imul
jno
jge
fcoml
cmpsl
insb
loope
repz
mov
push
fwait
mov
and
inc
mov
mov
pop
out
iret
inc
dec
loope
xchg
push
aam
lret
push
orl
inc
outsb
sbb
ret
jnp
push
or
fldenv
lcall
mov
or
enter
mul
mov
addb
aam
ror
cli
xchg
outsb
dec
lsl
imul
pop
out
cmp
xchg
outsl
int
mov
es
or
les
adc
pop
push
stos
sub
add
enter
enter
hlt
cmp
xchg
sub
aad
jno
cmp
push
pop
dec
test
cli
in
cmpsl
pop
jle
lock
cld
and
cmpsb
sub
shll
dec
rcrb
xor
das
outsl
jecxz
xchg
fstpl
in
shr
loop
adc
insl
jns
jl
push
cli
mov
sbb
jno
cmpsb
mov
repnz
xlat
dec
cmp
pop
fnstenv
mov
clc
imul
mov
jnp
jae
sub
pop
push
jge
mov
stos
js
fisubrs
scas
mov
sbb
and
lea
sbb
mov
jg
sbb
nop
and
mov
icebp
or
lock
lds
push
cmp
or
lea
fisttpll
into
sub
or
mov
jns
adc
mov
aaa
cmc
cli
in
fstps
fidivs
loopne
je
mov
les
pop
mov
out
mov
add
xlat
adc
and
mov
pop
popf
xor
adc
popf
xor
imul
cs
leave
inc
mov
aaa
and
scas
out
cwtl
adc
add
pop
in
fsts
add
popa
jl
test
xor
xchg
idivl
fs
nop
scas
icebp
test
inc
dec
pop
jg
add
pop
lods
std
fs
callw
cmpsb
cmpsb
pop
orl
addr16
icebp
fucom
jbe
mov
inc
fcmove
mov
notb
out
xor
mov
popa
cmpsb
jbe
in
add
je
fwait
pop
pusha
popf
sahf
add
arpl
mov
int
mov
inc
cli
mov
xlat
aas
pop
mov
and
inc
or
xchg
pop
add
pop
sbb
loope
dec
cmp
fidivrl
push
decl
pop
inc
stos
mov
xchg
pop
jle
and
xor
push
jns
popa
pop
movl
adc
push
cmp
lahf
jle
jmp
xchg
mov
rcll
dec
fiadds
cmpsl
cltd
test
arpl
xchg
sub
push
addr16
sti
btr
stos
dec
out
dec
outsb
jmp
cmp
sbb
xorb
fwait
call
push
je
xorb
sub
fildl
add
movsl
or
mov
push
xchg
hlt
sub
mov
xlat
stos
out
and
xchg
dec
or
cmp
ds
cmpsb
mov
repz
mov
add
or
pop
inc
push
cmpsb
stos
dec
push
cmpsl
popa
add
jmp
cli
rcl
mov
inc
dec
std
and
stos
lcall
test
cli
pop
pushl
cmp
movsl
inc
xor
push
stos
pop
push
sbb
js
jge
dec
data16
sbb
add
sbb
cld
or
loope
jnp
cld
fistl
lahf
std
inc
test
and
subl
sub
movsb
pop
fwait
inc
stc
lahf
xor
jecxz
gs
xchg
push
mov
cmp
mov
mov
jae
addr16
dec
out
jp
test
xchg
repz
jnp
xchg
mov
movsl
das
cmpsb
clc
inc
sbb
adc
and
adc
xchg
ljmp
int3
jle
mov
jp
dec
pop
sbb
add
ja
sbb
jmp
repz
xlat
adc
and
sub
loope
outsb
cmp
push
stc
pop
xchg
and
mov
pop
out
mov
push
xor
push
cmp
addr16
out
and
push
push
into
jno
push
sbb
leave
jmp
pop
xchg
test
adc
popf
add
dec
xor
sbb
mov
push
outsl
outsb
sbb
mov
jle
test
lcall
in
das
pop
sarb
lcall
and
in
push
stos
and
mov
int
jnp
pop
lahf
xchg
cmp
add
xor
add
mov
sti
push
lret
mov
scas
popa
push
test
shrl
shlb
loop
cwtl
and
pop
mov
movl
mov
dec
inc
or
dec
xchg
lcall
jns
call
xchg
lock
lods
fistps
hlt
fs
rcl
int
jbe
and
jecxz
gs
sbb
adc
lods
mov
inc
sbb
xchg
add
cmpb
cmp
lcall
mov
sub
iret
cmc
mov
sub
idiv
and
add
lret
inc
loop
sti
and
jl
dec
mov
fistpl
mov
mov
mov
add
and
pop
pop
xor
sub
and
xchg
loopne
inc
popa
xor
cmp
pop
xchg
test
mov
sbb
insb
aas
push
call
jne
jp
push
or
push
ljmp
flds
jge
lock
dec
sbb
jle
pcmpgtd
ds
sub
scas
lods
pop
and
dec
mov
pushf
fisttpll
mov
test
inc
mov
orb
scas
cmp
out
xor
adc
mov
insl
ret
push
dec
movsb
je
jecxz
push
int
into
jns
frstor
mov
inc
fwait
sti
lret
dec
mov
push
push
xchg
lahf
add
insb
dec
jl
or
jmp
out
js
out
mov
sub
and
adcb
and
int3
mov
ds
mov
mov
mov
sbb
mov
stos
idivl
cwtl
cmp
mov
pop
shrb
push
test
xor
loop
jbe
test
aam
push
inc
or
rcrl
loope
call
ficoml
mov
jns
movsb
jae
dec
out
sub
or
sub
popf
loope
and
fnstenv
popf
jno
in
mov
adc
add
rorl
scas
adc
or
testl
sar
cli
in
cmp
loope
jb
jp
lahf
mov
out
cmp
int
jl
xchg
and
ror
or
xchg
notl
pop
xlat
mov
jecxz
cmp
lods
in
outsb
inc
pop
popa
inc
mov
movsb
aaa
pop
sti
adc
cmpsl
ljmp
jae
les
fs
es
hlt
into
or
pop
adc
sub
sub
cli
or
xor
and
mov
mov
rcrb
cmp
ja
sbbl
divl
adc
dec
pop
mov
add
leave
mov
push
in
add
ja
jae
add
fadds
push
ret
jmp
inc
push
lods
bound
inc
mov
je
addr16
aaa
in
mov
sbb
jns
nop
push
sub
int
xor
movsb
push
insl
xchg
sub
pop
jge
lcall
out
sbb
pop
push
ret
call
and
std
rcrl
lcall
pushf
je
jl
push
addr16
jo
push
scas
lods
sub
or
lret
xor
fwait
pop
sbb
mov
call
popf
xor
or
fldt
mov
xchg
outsb
les
push
hlt
out
in
fisubs
iret
out
jl
mov
mov
push
jle
add
and
ja
cmp
jge
cmp
add
ds
xchg
test
cmp
sub
popf
xchg
mov
adc
fwait
lock
cmp
std
pop
out
inc
fs
mov
enter
add
add
jge
jbe
inc
ret
mov
fdivp
xor
ret
imul
jg
inc
jmp
mov
cmp
icebp
loopne
pop
adc
pop
mov
lods
cmp
xlat
clc
xchg
pop
xchg
clc
push
cmpl
insl
iret
xor
and
jg
loopne
pop
or
incb
insb
or
rclb
orb
mov
mov
sarb
push
test
aam
add
add
loope
cmp
and
mov
or
enter
and
inc
pop
sbb
push
jp
xchg
lods
mov
movb
jge
pop
lods
mov
shrl
adc
pushf
dec
jl
push
les
rol
lods
imul
pop
cmp
add
mov
or
and
inc
jmp
in
movsb
lods
addr16
push
xchg
dec
mov
es
mov
mov
push
lds
push
mov
stos
cli
lahf
in
dec
fcomi
aaa
or
push
and
bound
dec
icebp
fmull
or
pusha
in
add
or
or
push
ficoms
jne
push
jp
sub
enter
xor
hlt
lret
or
mov
sbb
sub
push
push
lds
test
inc
scas
add
fs
mov
and
xchg
jne
ja
sbb
popa
popf
mov
sbb
scas
fs
and
and
dec
mov
xchg
pop
jns
jno
mov
add
setb
push
ret
int3
aam
mov
sbb
and
les
cmp
mul
push
ret
adc
lds
pop
mov
pop
cmpsb
push
cltd
aam
lret
mov
add
dec
lcall
mov
xchg
sahf
dec
mov
adc
lds
daa
and
sub
dec
jne
pop
push
das
out
xchg
jbe
bnd
repnz
push
add
enter
xor
inc
inc
xchg
dec
ss
je
jge
in
int
push
pop
test
std
fstps
cltd
fiaddl
xchg
stos
lcall
mov
lsl
push
rcrb
enter
xchg
xor
lods
sub
mov
out
lds
pop
cmp
mov
pop
div
pop
xchg
xchg
mov
jle
les
mov
push
cmp
jge
adc
incl
mov
mull
cmp
cmpl
dec
inc
sahf
pop
adc
bound
lods
sbb
mov
out
addb
mov
dec
pusha
nop
popa
icebp
and
test
dec
rclb
test
cmc
xchg
push
and
push
popf
out
test
repz
cmc
loope
cmpb
andb
aad
pushf
cmp
sub
xchg
test
int3
cmp
insb
dec
add
jne
stc
sbbb
inc
lret
jb
enter
inc
clc
je
call
std
add
sbb
insb
and
imul
int3
sub
fistl
and
das
or
rcrl
je
dec
xchg
sub
movups
jae
cwtl
mov
loopne
fidivl
mov
mov
dec
and
fsubrl
out
js
xchg
mov
dec
test
gs
cwtl
rcrb
outsb
insl
dec
push
and
dec
aad
sbb
xchg
test
fs
lods
jnp
pushf
adc
stos
push
xor
aam
push
out
add
mov
push
xchg
pop
orl
bound
push
mov
xor
or
lret
inc
adc
fisubrs
xchg
lret
push
dec
or
daa
xlat
out
push
xchg
pop
mov
fs
pop
insb
adc
je
or
rcr
jecxz
hlt
and
out
aam
stos
fdivrp
out
mov
call
cmp
sti
mov
mov
push
sub
cld
sbb
leave
dec
mov
fcomi
in
mov
mov
movsl
push
shrb
xchg
mov
jne
out
push
mov
sub
lcall
jae
dec
mov
mulb
gs
test
leave
out
pop
call
lret
cmc
adc
in
adc
leave
sbb
imul
out
jo
sub
cmpsb
push
jp
ds
cltd
nop
subl
and
stos
mov
inc
jae
sub
pop
popa
dec
or
push
mov
roll
mov
and
ss
outsl
out
test
cmp
out
es
cmpsb
or
xor
aad
mov
repz
pusha
int
dec
lret
mov
fsub
or
negb
jmp
testb
test
lea
mov
push
lcall
sbb
test
mov
lret
outsl
std
xchg
xchg
xchg
inc
pop
rorb
flds
cld
stos
movsl
out
inc
dec
mov
cmpsb
ljmp
jp
cmp
push
fsubrs
mov
lret
xchg
ljmp
test
pop
or
or
and
jg
xor
in
mov
outsl
aas
test
test
mov
xchg
xchg
xor
inc
cmpl
mov
out
das
rorl
or
inc
inc
lds
sbb
xlat
jecxz
mov
mov
imul
mov
fistpl
cltd
loop
mov
mov
jne
xchg
movsl
aam
loop
dec
xor
jno
outsb
filds
repnz
push
or
mov
rolb
nop
xchg
or
popa
hlt
add
mov
das
push
adc
jge
int
cltd
xchg
xor
add
inc
loope
pop
xchg
jecxz
add
mov
lds
mov
add
sti
pop
push
in
imul
mov
jne
rcr
and
fsubr
cmpsb
sub
shrl
mov
and
sbb
scas
xor
mov
pop
jno
mov
push
aam
in
jp
sysenter
inc
stos
fsub
xorl
fs
scas
cmpsb
add
pop
sub
push
ret
sahf
pop
jl
or
xlat
clc
pop
lahf
sub
insb
jno
roll
decl
aas
or
test
sbb
push
addb
aas
mov
inc
lea
mov
in
dec
adc
enter
xchg
xchg
gs
loopne
add
xchg
push
jle
pop
lods
es
mov
mov
stos
add
xchg
xchg
sbb
and
xchg
add
cmpsl
call
xor
pop
xchg
lods
rol
sbb
cmpsb
pop
cmpsb
out
testb
enter
ljmp
mov
cmp
lcall
aad
popf
mov
add
inc
dec
and
bound
push
ja
mov
popa
psrld
ret
mov
pop
sub
xchg
mov
cmp
push
xchg
add
cmp
dec
mov
fildll
ss
adc
push
in
test
outsb
add
mul
aaa
jp
sarl
pop
pop
adc
rclb
or
in
fsubs
mov
push
dec
push
out
fucomi
add
cmp
cltd
mov
sarb
dec
fsubrl
test
gs
sub
inc
ret
aas
mov
add
sub
sbbl
dec
mov
mov
push
popa
fldt
aas
decl
xchg
cwtl
add
xor
push
push
add
lret
dec
out
cmpsl
inc
rcll
lret
rcll
mov
inc
div
fwait
pop
fnstsw
pop
shr
loope
adc
inc
movsb
mov
std
aad
loop
mov
decb
pop
aaa
fcomp
fistpl
add
clc
xor
push
outsb
cmp
mov
lret
pop
insb
in
js
xchg
and
mov
filds
cs
orl
lods
push
in
push
enter
jae
fcmovu
add
mov
js
fdivr
les
inc
add
push
fs
inc
xchg
fdivs
iret
enter
fsubrs
mov
aaa
icebp
jge
ror
lods
mov
jg
call
movsl
test
iret
hlt
ret
sahf
xchg
pop
add
push
mov
ljmp
xchg
sahf
gs
push
xchg
jnp
pop
fcomps
add
repz
lret
test
pushf
push
sbb
scas
repz
or
sbb
and
sbb
lahf
cld
loop
fistpll
sbb
mov
cmp
push
pop
movsb
cld
mov
or
repz
mov
adc
lcall
int
and
dec
mov
sub
xchg
insb
mov
mull
sub
pop
popf
or
xor
inc
sbb
mov
xchg
aad
push
fmull
xchg
mov
daa
xor
mov
push
or
push
adcl
pop
lahf
cmpsl
cmp
adc
pop
sub
xchg
out
adc
push
nop
and
push
add
sub
insb
das
jle
jg
mov
or
imul
xchg
movsb
dec
mov
jmp
xchg
sub
repnz
jp
and
ret
fdivrp
and
lret
xchg
mov
adc
fistpl
push
jbe
pop
xchg
stc
rcrl
mov
push
subl
add
push
dec
jne
dec
aad
arpl
cmp
pop
lods
jno
int
ss
movsl
cmpsb
or
ret
movsl
mov
in
divb
dec
xor
negl
dec
mov
sub
xor
out
adc
xchg
dec
gs
jne
pop
add
ret
jge
dec
loope
popa
das
loop
subb
sbb
xchg
sub
testb
iret
xor
adc
repnz
test
andl
shrl
or
cmp
outsl
fdivr
rcrb
stos
mov
mov
push
lcall
pop
xor
repz
xchg
pop
iret
pop
xchg
or
lcall
scas
sub
dec
popa
inc
pop
xchg
test
push
cmpsb
mov
adc
jge
jge
adc
inc
lret
xorl
pop
dec
push
cmp
or
pop
cs
add
bound
adc
xorl
je
nop
mov
aas
and
inc
sub
cwtl
cwtl
lods
fs
repz
cmp
mov
mov
bound
loopne
jo
and
or
inc
push
and
mov
jo
sbb
and
push
pop
pop
popf
xchg
test
aam
insb
jae
inc
rol
pop
test
test
test
in
mov
xchg
lea
add
movsb
lret
pop
jo
xor
mov
loope
in
cwtl
mov
cltd
sub
aam
ror
and
xchg
adc
cmp
push
push
fndisi(8087
jp
pop
lods
xchg
jecxz
adc
push
nopl
insl
jb
cmp
fsubrl
fldl
push
dec
jp
dec
pop
sub
and
mov
or
scas
jle
ja
mov
mov
sub
in
xor
push
cld
pop
lods
je
add
out
jecxz
adc
mov
sub
mov
pop
jle
pop
ljmp
dec
in
jno
mov
jl
sub
push
loope
push
ds
cmp
sbb
mov
mov
out
inc
cmp
stc
loopne
dec
jge
push
rcll
enter
out
popa
int
mov
dec
movsb
lock
je
movsb
push
sub
es
loop
ljmp
das
adc
scas
push
addr16
and
xchg
jmp
fnstenv
fcmovnbe
add
scas
mov
jmp
mov
in
popa
pop
jns
add
addr16
push
add
xor
adc
sub
orl
jg
nop
inc
sbb
push
mov
cmpsb
mov
jae
popfw
xlat
rcrl
gs
dec
sbb
into
imul
int
ja
xchg
add
dec
test
mulb
mov
scas
push
shrb
clc
enter
cmpsl
fs
jle
scas
adc
or
xchg
js
push
ret
push
out
fwait
lock
dec
xchg
in
push
jnp
and
movsl
fwait
cs
pop
jo
test
popw
push
mov
push
bound
icebp
leave
pushf
xor
jmp
addb
imul
sub
mov
and
lock
sbb
rorb
inc
sbb
add
jns
lods
add
in
sub
push
xchg
dec
or
lahf
popf
or
rolb
xchg
test
loope
arpl
loopne
cmp
leave
movsl
idivl
push
mulb
dec
jb
ljmp
push
clc
nop
stos
pushf
adc
mov
fwait
adc
sbb
jae
push
dec
mov
ja
repnz
cmp
cmp
shl
fimull
push
int
loope
loope
cmp
loop
clc
or
mov
test
pop
in
inc
aas
xlat
pop
lahf
sub
movsb
xchg
loope
sub
mov
lret
mov
sbb
mov
std
mov
or
out
mov
cmpsb
test
retw
mov
adc
mov
pop
inc
popl
inc
test
ljmp
lahf
fmuls
ja
push
int3
sub
arpl
adc
repnz
sbb
cmp
daa
and
jbe
push
into
fyl2xp1
sub
clc
pusha
dec
mov
scas
roll
jns
test
mov
add
nop
mov
cmp
sahf
mov
jnp
xor
sub
fadd
leave
fistpll
mov
xchg
fsubp
mov
cmp
push
pop
data16
jp
cmp
mov
out
fwait
jl
sti
int3
loope
push
dec
subb
or
in
ret
mulb
mov
std
lds
sbb
test
and
movsl
sbb
in
dec
popf
xor
mov
cmp
push
fisttpl
mov
bnd
xor
sbb
adc
jmp
imul
sti
orb
mov
bnd
and
push
inc
fimuls
pop
test
stos
or
push
mov
push
and
mov
ljmp
loop
imul
mov
pop
stc
jmp
adc
ljmp
arpl
inc
js
repnz
in
adc
adc
je
testl
lods
add
xchg
les
in
out
cli
movsl
jo
mov
dec
sub
aam
and
mov
sbb
sbb
orl
sub
jg
mov
dec
or
cld
and
sbb
push
inc
sarl
testl
mov
test
inc
scas
jmp
cmp
and
rcr
dec
punpcklbw
pop
mov
sbb
add
jge
pusha
sbb
bound
jbe
pop
sbb
scas
xor
fs
mov
pop
out
inc
mov
mov
dec
rorl
int
cmpb
or
out
out
cmpsb
pop
push
cmpb
xorl
sub
lock
mov
insb
pop
jae
mov
jp
js
hlt
xchg
mov
xchg
push
in
movsb
ja
xchg
add
bswap
ss
pop
mov
jbe
sbb
aaa
jg
and
dec
inc
in
cwtl
pop
je,pn
xor
mov
testl
pop
test
mov
rcrl
test
nop
stos
scas
cmp
pushf
test
pusha
cltd
out
cmpsb
call
sahf
loopne
test
insb
cmp
jecxz
gs
lcall
dec
and
xchg
push
dec
ljmp
mov
es
sahf
in
out
push
sti
sub
inc
xor
insb
fsubs
test
mov
arpl
add
cmpsb
mov
test
mov
or
stos
sub
lcall
sahf
push
or
jge
inc
nop
sbb
fwait
lahf
insl
jne
jecxz
lret
push
divl
mov
pop
sub
rcr
das
fisubrs
leave
je
sub
ljmp
cmpsl
flds
leave
test
fldl2t
adc
mov
mov
into
add
cs
lcall
pop
push
push
mov
addr16
fsin
jp
or
stos
inc
movsl
fstpl
jp
jb
int3
cmp
adc
pop
or
jb
cmp
pop
jbe
mov
and
sti
mov
xchg
xor
lcall
jmp
and
imul
jbe
add
xlat
cmp
icebp
or
jp
pop
jle
int3
xchg
push
fwait
scas
and
lret
mov
iret
xchg
or
jne
push
add
pop
testl
push
mov
mov
loopne
in
adc
push
pop
jno
ljmp
cmp
jp
ja
cmp
mov
xchg
repz
pop
pop
mov
enter
fadd
mov
and
rcrl
je
sub
mov
mov
xor
fldcw
push
adc
mov
mov
and
idivb
icebp
fldenv
sarb
vmread
xor
inc
bound
imul
das
cs
jno
insb
in
fs
mov
mov
out
mov
repz
out
xchg
pop
rcrl
aam
lahf
inc
xor
cwtl
mov
fimull
sub
sub
in
or
xor
lea
or
lods
and
push
daa
or
hlt
mov
pusha
xor
cld
sbb
fsubrl
out
xadd
inc
lcall
enter
cmp
push
data16
dec
xor
andb
call
sub
mov
add
out
je
js
or
adc
es
adc
lods
mull
pop
jg
mov
sub
xor
data16
adc
jl
orb
or
dec
adc
sahf
push
shl
jbe
xchg
xchg
pop
in
sbb
iret
xor
xor
push
stos
mov
mov
cmpsb
mov
sub
ss
adc
sbb
fidivrl
sub
mov
dec
jp
cld
xor
or
stos
jae
es
or
clc
push
ds
test
fists
aas
pop
les
pop
sar
test
cmc
sbb
scas
mov
je
fidivl
add
mov
fwait
mov
das
cmp
inc
sti
cwtl
hlt
sbb
sbb
movsl
daa
fcomps
mov
dec
mov
fsubr
sub
cmpsb
sub
push
andl
fldenv
xchg
pop
int3
xchg
add
cli
fidivl
push
aad
jmp
pop
stc
data16
imul
adc
cs
dec
jb
int
mov
inc
xchg
fisubl
and
testl
imul
adc
nop
dec
in
pop
test
lret
xchg
push
jecxz
and
jno
mov
test
mov
xor
ljmp
push
lret
adc
push
adc
add
xor
lcall
ja
and
cltd
sub
dec
push
std
mull
mov
icebp
inc
cmpsl
adc
leave
push
and
das
lcall
test
fists
loope
inc
cmp
movsl
repz
jecxz
fnstcw
jmp
jbe
push
in
iret
push
inc
mov
sbb
add
insl
orl
push
es
test
lea
mov
jg
andb
or
push
in
adc
fnstcw
fistpll
push
cmp
ljmp
loopne
sbb
cmp
pop
arpl
cmp
ds
fucomip
int
cmp
jnp
jg
jb
xchg
mov
movsl
sub
mov
shrl
xchg
andl
mov
shl
scas
pop
pop
loope
mov
mov
jmp
aam
pop
leave
lods
xchg
xchg
mov
jg
jge
push
pop
mov
loop
loopne
popf
xchg
data16
adc
sub
sahf
in
daa
sub
cwtl
and
clc
divb
call
rclb
out
iret
mov
cmp
sub
jp
dec
and
dec
fs
pop
mov
push
scas
call
popf
pop
adc
stc
ds
lcall
add
test
out
sbb
xchg
gs
aaa
push
xchg
pop
sub
pusha
sbb
popa
cli
call
xchg
leave
inc
lret
adc
add
rcrl
lcall
jo
xchg
pop
clc
movsb
push
add
hlt
addl
int
in
jle
add
pop
mov
mov
lcall
inc
adc
or
jp
sahf
jge
adc
cltd
lock
outsb
aaa
lock
fs
jns
add
adc
orb
add
pushf
int
pop
dec
sub
sub
arpl
sbbb
lahf
int
mov
mov
jg
add
dec
mov
adc
xor
inc
jnp
push
fsubs
repz
shl
rorl
inc
lods
xchg
in
sub
cli
inc
pop
cmp
push
cmp
jb
inc
rcll
cmp
notb
daa
lret
jb
adc
or
pop
and
pop
cs
adc
jg
push
push
loop
ret
or
cld
aaa
fwait
inc
aaa
es
adc
push
or
and
roll
lcall
pop
movsb
jge
es
enter
in
jns
push
inc
add
fisubl
testb
mov
inc
arpl
int3
pop
sub
or
xor
xor
add
out
push
sahf
xlat
jne
out
push
xchg
pop
jecxz
dec
inc
mov
int3
jg
lds
mov
leave
or
jl
movsb
popf
stos
out
pusha
inc
mov
xchg
xor
jno
clc
movaps
push
aad
ja
sar
stos
sbb
outsb
and
mov
or
out
adc
icebp
aam
stos
clc
bound
dec
outsb
and
cltd
bound
pop
mov
mov
test
inc
movsl
ds
adc
fs
add
cld
mov
inc
fcomps
xor
fmull
fmull
or
gs
cmp
imul
mov
mov
cmpsl
notl
push
mov
dec
dec
leave
push
aas
jnp
scas
mov
cmp
imul
subb
sbb
outsl
rol
cmpsb
mov
test
outsb
pusha
outsb
lcall
pop
ja
jg
mov
rorl
jp
push
mov
pop
and
flds
mov
daa
cs
or
lea
test
and
or
cmpsb
dec
sbb
loopne
sub
gs
mov
fwait
xchg
mov
je
or
sub
or
fistpll
leave
das
xchg
outsl
add
lods
int3
ficoms
adc
jle
and
aaa
cltd
jnp
mov
cmc
cli
aad
movsb
lods
cmp
ja
outsb
mov
mov
in
out
arpl
adc
shrl
lret
sub
push
dec
sbb
fimull
insb
and
adcb
bound
mov
test
adc
sbb
ljmp
cmp
jp
fwait
test
lea
and
inc
out
dec
push
push
or
and
hlt
push
jle
sbb
or
cltd
pop
xor
sub
sub
out
sbb
pop
fcoms
stos
pushf
ja
repz
adc
mov
inc
popf
ret
mov
dec
sbb
test
mov
pop
xchg
add
or
sbb
and
jns
add
cltd
clc
ret
pop
aas
cwtl
jecxz
mov
out
cmc
mov
inc
fisttpll
mov
jmp
pop
insb
fmul
leave
insl
nop
jnp
addr16
out
std
cmp
bound
inc
pop
insb
jl
loop
out
push
xor
xchg
les
stos
xor
and
cmp
jne
jbe
push
pop
xor
adc
push
arpl
or
scas
icebp
pop
xor
sub
movsb
push
xor
xchg
xchg
mov
xorl
lods
call
xlat
inc
int3
loope
fbld
gs
neg
lea
pop
xor
into
or
jmp
mov
push
dec
loope
push
cld
push
out
pop
dec
cmp
mov
fidivrs
inc
inc
jle
icebp
cs
inc
mov
push
imul
mov
pop
push
adc
and
or
xchg
lret
ss
lods
xchg
lcall
sbb
outsl
sti
pusha
adc
xchg
fs
shll
in
dec
add
cmp
clc
dec
jb
ret
cmp
decb
cwtl
sbb
mov
jle
int3
lock
sbb
in
dec
push
lds
out
jecxz
ror
or
adc
push
sub
inc
sbbl
aam
fsubrp
fs
pop
cmpsl
int3
push
mov
xchg
ljmp
mov
and
inc
inc
push
pop
mov
mov
nop
int
hlt
testl
addr16
inc
dec
inc
pusha
pop
xchg
push
jnp
fdivr
ret
in
push
sarb
adc
out
stos
filds
cmpsb
sub
xchg
cmc
test
jae
scas
adc
pop
movsl
int
dec
lds
daa
push
test
sub
icebp
mov
cltd
daa
out
in
cld
push
aam
fidivrs
rclb
adc
lods
call
cmc
cmpsb
push
cmc
push
pop
cmpb
xchg
mov
inc
dec
cld
mov
sub
mov
test
mov
cmp
mov
and
loopne
sbb
fcomip
mov
sub
fwait
std
pop
cmc
mov
aam
inc
popa
mov
sub
rcll
pop
addl
jnp
mov
les
cld
mov
movl
lods
add
aaa
add
or
repnz
inc
std
cli
xchg
cmpl
ss
and
int3
aad
inc
insb
and
pop
lret
cwtl
inc
loopne
insb
popa
pop
pop
jo
ds
xor
mov
sub
mov
and
push
cs
data16
xchg
inc
mov
push
adc
sub
stos
scas
mov
mov
repz
fisubrl
rorl
ja
add
xlat
cmp
cld
xor
jmp
xchg
jb
pushf
and
fiaddl
push
jmp
frstor
out
mov
push
test
pop
call
imul
cmp
xorps
cmp
jmp
push
pop
dec
aaa
sar
or
pop
mov
dec
add
jmp
dec
jecxz
ficompl
cld
pmulhw
daa
cli
push
add
fwait
cmp
leave
fdivrl
or
mov
xor
outsl
fnstcw
xchg
jecxz
js
push
scas
jecxz
addr16
popf
pop
cld
sub
sbb
mov
cmp
aas
cmp
mov
jb
dec
dec
lret
or
cld
lds
add
inc
cmp
mov
les
push
xchg
daa
jae
sub
dec
push
cmp
nop
dec
in
or
push
xchg
or
xor
in
data16
outsl
dec
fcoml
cmc
hlt
cmc
imul
cmp
addb
aad
xlat
pop
or
in
loope
jl
and
pushf
subl
test
push
inc
imul
adc
sub
addr16
jge
push
mov
mov
cmc
enter
or
cmpsl
shrl
stc
popa
jecxz
lds
or
mov
lret
cltd
push
dec
xchg
adc
cmp
les
scas
add
mov
test
stos
jmp
cmpsb
xchg
xchg
outsl
data16
popa
gs
imul
push
fsubrs
sub
mov
and
lahf
loop
cmp
mov
mov
pop
pop
mov
and
into
push
mov
pop
outsl
lcall
adc
andl
in
and
jne
ljmp
sarl
and
and
jge
cmp
mov
sbbl
sub
push
push
mov
dec
inc
roll
add
repz
mov
dec
insl
dec
add
jne
rorl
cmp
cmp
jae
mov
pop
lods
sub
mov
rorl
dec
and
mov
ljmp
cmpsb
jbe
rcrl
lret
mov
inc
gs
sub
mov
out
addr16
sub
xchg
xchg
mov
popf
pop
mov
inc
push
lods
fldt
scas
sbb
push
rorl
push
and
ret
lret
push
aam
pop
push
sbb
dec
iret
aam
cltd
pop
clc
cmc
mov
test
jmp
pop
lahf
test
jb
fbstp
xor
sahf
push
call
inc
ret
fdiv
xchg
dec
sub
jg
xlat
jg
mov
jmp
inc
shlb
sahf
out
lret
sarl
jmp
adc
jg
cmc
out
sahf
or
pop
inc
mov
mov
dec
imul
out
push
clc
sbbl
jnp
insl
mov
jge
fistpll
mov
jnp
mov
outsl
arpl
adc
sarl
and
or
addr16
dec
xchg
in
fwait
sub
pop
outsb
jle
inc
js
dec
xor
imul
or
les
lds
rcl
iret
in
xlat
pop
push
xor
push
sub
pop
xor
test
lret
pusha
daa
lds
inc
aam
mov
fcmovbe
iret
mov
push
pop
xchg
bound
push
xchg
mov
or
mov
hlt
adc
cmp
inc
dec
repnz
mov
lahf
pop
xchg
jge
ret
mov
fisubrs
aad
and
cmp
out
jns
mov
mov
mov
mov
push
test
sub
inc
sbb
in
aam
movsb
push
lret
cmp
rcrb
adc
mov
in
bound
sub
sub
inc
nop
inc
out
outsb
out
cmp
inc
in
mov
inc
mov
lahf
push
dec
sbb
mov
sub
sbb
inc
push
lods
shlb
movl
pop
addl
xchg
rclb
xchg
insb
sub
xor
adc
sarl
and
dec
arpl
mov
jns
sbb
sar
repnz
lock
xlat
leave
dec
filds
stc
clc
cld
and
test
add
inc
cmp
testl
fsub
jge
aad
sbb
sub
adc
flds
fstpl
das
mov
test
loopne
ret
push
mov
dec
addr16
fcomip
xchg
inc
mov
out
xor
add
aad
bswap
movsl
subl
incl
mov
imul
pop
js
fidivl
add
sti
out
lret
les
repnz
pop
aas
out
pop
fldenv
js
loope
and
loopne
jecxz
js
mov
push
std
call
pop
cmp
in
xchg
test
je
stos
adc
inc
mov
shl
sbb
fidivrl
and
sbb
sbb
cltd
sub
mov
out
aas
mull
pop
mov
jns
jmp
cmp
mov
and
andb
pop
xchg
jmp
mov
imul
sbb
push
lods
outsb
mov
leave
fs
rcll
dec
dec
stos
lock
pop
out
push
std
lods
fs
fsts
xor
and
lock
lds
fmull
pop
fists
aas
daa
lods
aas
loop
pop
cmc
dec
scas
pop
push
cmpsb
lods
and
loope
push
enter
icebp
sbb
dec
adc
sahf
shll
inc
or
ret
push
lcall
lods
dec
fimull
lret
jno
dec
inc
pop
and
fcompl
lret
pop
mov
add
imul
sub
hlt
out
clc
push
or
imul
loope
or
jnp
and
mov
mov
repz
test
jns
dec
inc
push
dec
popf
div
jnp
out
mov
gs
lret
sbb
adc
jno
scas
xlat
out
test
push
fldt
xchg
iret
inc
push
mov
sub
mov
push
xchg
out
int
add
mov
jns,pt
push
shrl
add
dec
inc
mov
popf
jno
fcom
lock
sarl
addr16
mov
or
leave
mov
shll
cmc
mov
xor
push
cmp
repz
fadds
push
mov
jp
mov
fldcw
push
inc
pop
inc
pushf
dec
fmul
shrb
cs
mov
mov
xor
jbe
into
push
sub
sbb
push
sbb
pop
sbb
push
into
cs
ss
lahf
leave
imul
std
lds
jne
aas
in
xchg
in
cmp
test
mov
xor
outsb
jecxz
mov
movsb
cmp
jno
pusha
sbb
mov
dec
out
cwtl
out
cltd
xorl
aam
jle
inc
sbb
ja
adc
fidivs
les
es
jmp
inc
sti
jecxz
jb
mov
stos
out
ficoms
je
jno
push
inc
stos
enter
lock
into
les
sahf
or
out
mov
jns
out
jne
loop
idiv
testb
push
push
mov
or
pop
sti
jne
fadd
outsl
mov
out
xor
sub
les
xor
je
xchg
in
mov
dec
test
mov
mov
push
sti
and
sub
shrd
mov
cmp
call
stos
add
push
xlat
std
adc
or
or
ret
pusha
mov
je
imul
mov
pop
xor
mov
mov
add
insb
lock
lea
dec
pop
add
pop
test
iret
pop
shlb
jne
cld
xlat
push
jo
inc
xchg
jne
dec
push
mov
test
xor
mov
nop
jle
cld
ret
test
fidivl
in
iret
or
orb
fiaddl
and
jns
jecxz
nop
sub
std
push
outsb
pop
adc
mov
ds
sub
repz
iret
repz
outsl
mov
mov
sub
or
pop
int
ljmp
or
adcl
addb
daa
add
inc
dec
inc
mov
sahf
jl
je
shl
outsl
test
dec
mov
loope
xor
xchg
xchg
mov
outsb
leave
loop
les
mov
mov
adc
ret
cld
fistpll
mov
std
push
fidivrs
xlat
jle
pop
xor
cmpl
xor
adc
fsubrl
adc
in
mov
inc
and
cmpsb
inc
push
cltd
jnp
cwtl
pop
adc
cmp
push
xchg
aaa
clc
dec
adc
cltd
test
pop
pop
pop
fisubl
js
or
cwtl
shrl
mov
push
cmpsb
xor
enter
mov
mov
and
xchg
jno
stos
popa
fisttps
out
or
push
inc
rcrl
mov
ss
jp
mov
sti
mov
testl
dec
sahf
daa
js
xchg
cs
xchg
cmpsb
stos
ror
pusha
push
inc
push
cmp
ljmp
adc
scas
add
add
xor
leave
popa
mull
mov
mov
mov
fimull
ret
pusha
aas
mov
shll
lret
add
sub
fmull
daa
jo
ret
sub
pop
sbb
xor
cmp
xchg
dec
ret
in
inc
sub
xchg
loop
sbb
sbb
adc
jbe
sub
lods
pop
jno
adc
adc
ljmp
inc
lods
mov
hlt
or
jb
adc
cltd
add
pushf
adc
test
sub
shll
leave
pop
xorb
or
sub
sub
aas
fldt
in
xor
leave
fdivrs
icebp
or
andb
mov
mov
cs
sub
push
imul
fwait
lock
sbb
mov
mov
ror
and
addl
insb
shlb
cmc
and
and
sub
push
imul
adc
xchg
in
outsl
jp
sbb
pushl
push
call
lods
xchg
add
push
jecxz
pop
aad
dec
jl
movsb
mov
lods
outsb
pushf
adcl
mov
loopne
es
push
js
rol
lods
outsl
add
jo
movsl
mov
movl
xchg
imul
js
lea
inc
rsqrtps
fstl
decl
cltd
add
loope,pt
rclb
ret
pop
inc
shlb
aas
or
cmp
scas
mov
scas
mov
push
xlat
xchg
shrl
adc
and
or
mov
jle
dec
mov
std
lahf
mov
dec
idiv
and
sub
gs
cmp
popf
inc
sub
movsb
xor
test
repz
sub
mov
push
loopne
sub
and
sbb
and
or
jp
mov
test
pop
push
add
stos
enter
sbb
testb
pop
or
adc
jg
xchg
and
mov
adc
stos
add
jle
stos
push
test
adc
jge
sbb
adc
jle
mov
es
aam
mov
jae
jno
shrb
hlt
popf
fsubrl
loope
inc
sub
aam
in
jbe
xchg
out
and
lahf
fucomi
jmp
cli
or
jp
lret
cmpsl
dec
cltd
out
jl
pop
ds
and
dec
push
cltd
in
and
sti
int3
and
jne
mov
pop
shrl
outsl
or
pop
lcall
add
mov
test
xor
or
arpl
je
aad
int3
add
pop
fiaddl
jo
cltd
dec
into
std
pop
fcoml
sub
scas
cmp
icebp
mov
xchg
inc
inc
and
push
or
nop
lds
adc
daa
outsb
pop
cmpl
adc
pop
fsubl
es
or
cmp
dec
loopne
xlat
add
xor
mov
push
dec
mov
stos
sbb
adc
mov
repnz
gs
add
aam
enter
clc
push
addr16
mov
cwtl
stos
lea
xchg
sub
mov
push
and
mov
ret
sub
icebp
cmpl
ret
inc
add
lock
hlt
push
addr16
icebp
rorb
adc
mov
out
aaa
mov
pop
mov
popa
cmp
lret
dec
das
cmp
lret
inc
bound
out
jnp
inc
inc
outsl
and
mov
ficomps
dec
inc
jb
push
in
and
cmpsb
sbb
mov
pop
mov
sahf
xor
sub
test
ficompl
jns
mov
outsb
or
jno
push
scas
bound
ret
psubd
ljmp
lea
rcl
jg
inc
lcall
lahf
fidivs
jl
xchg
cmp
pop
lea
cmpsb
mov
mov
stos
pop
xor
pop
push
mov
xchg
out
mov
push
arpl
adc
in
sarl
fdivs
lods
outsb
sti
cld
add
mov
addr16
mov
cmpsl
das
sar
mov
inc
sbb
rol
sarb
push
sbb
pop
mov
movsb
scas
adc
out
addr16
xchg
inc
pop
mov
push
ds
jno
jo
lahf
xchg
lret
test
inc
aaa
mov
outsb
imul
xchg
and
js
adc
leave
mov
adc
mov
fprem1
movl
adc
mov
es
aas
jg
mov
pop
push
fs
jl
enter
out
adc
push
cmpsl
lret
xor
sbb
lods
push
push
mov
cmc
sub
cltd
push
or
and
rclb
shlb
jge
ss
xor
mov
lds
add
loope
dec
in
lods
jle
cli
push
add
iret
ja
jne
and
inc
decl
iret
adc
mov
enter
insl
dec
mov
adc
cmc
sar
loop
andb
mov
push
pop
push
cmp
mov
aas
jo
pusha
out
mov
xchg
aam
lret
add
xor
btc
int
adc
push
sub
loop
gs
aaa
out
jmp
mov
xchg
addr16
inc
out
iret
adc
in
lret
mov
sbb
shlb
idivb
mov
sub
fnstsw
lcall
out
popa
or
loopne
sub
jecxz
into
int
dec
adc
sub
popa
idivb
mov
sbb
repz
push
outsl
sbb
test
notb
cmp
popa
mov
mov
js
mov
int3
pop
push
xchg
out
arpl
mov
mov
cmp
sbb
pop
push
out
add
add
push
mov
cmpsb
repnz
pop
popf
loopne
mov
mov
outsl
and
mov
sub
push
mov
xor
inc
clc
dec
inc
push
call
jb
cmp
popf
push
pop
xchg
inc
movsb
lock
pop
adc
pop
sbb
cmp
jmp
fisubs
out
jl
pop
or
dec
xchg
dec
mov
enter
and
insb
icebp
in
dec
xchg
fbstp
loop
or
sub
mov
and
sub
pop
mov
addr16
lea
mov
xchg
xor
lret
mov
lea
insb
xchg
cmc
pop
add
movsl
jnp,pn
cli
xchg
stos
push
dec
andl
pop
or
mov
dec
push
mov
orb
add
das
cwtl
jle
and
icebp
sub
inc
out
push
lods
leave
adc
jae
lahf
push
mov
lcall
push
aad
out
xchg
dec
sti
adc
mov
into
fs
in
sbb
or
and
lods
test
outsb
jbe
push
into
jecxz
push
sti
adc
decb
lret
ja
xchg
or
or
bswap
lds
cmp
mov
cmc
mov
frstor
repnz
xor
subb
jmp
hlt
ds
pushf
rorb
xchg
les
popa
dec
and
or
cmp
sbb
cmp
lods
mov
stc
lock
sub
mov
pop
rorl
push
adc
clc
push
cmp
int
rep
in
xchg
shrb
add
clc
cmp
sahf
sbb
sbb
dec
iret
xor
inc
fwait
inc
add
push
fldln2
pop
loopew
je
and
outsl
add
sub
shll
jg,pn
inc
pusha
gs
xchg
out
pop
sahf
cmpsl
or
fs
cld
dec
push
push
or
ds
add
fcomp
sub
jmp
mov
rclb
push
pop
mov
call
pop
adc
push
push
pop
test
test
jbe
pop
jno
sub
inc
mov
mov
jg
or
mov
xor
leave
cmp
sbb
pop
jbe
push
insb
push
add
push
mov
mov
pop
inc
rcr
push
jns
fadds
push
or
fninit
dec
and
enter
das
inc
ljmp
mov
lea
xchg
xchg
sub
add
adc
addr16
pcmpgtb
pop
sub
xchg
movsb
push
xor
popf
mov
loop
addr16
mov
fisttps
fimull
xor
lods
int
push
cli
add
inc
cltd
pop
idiv
xchg
mov
das
test
scas
bound
or
movsl
fdivrl
mov
insl
les
inc
arpl
fidivrl
ljmp
pop
cmp
pushf
aam
adc
lds
lds
je
aas
pusha
pop
inc
push
jg
xorl
xlat
add
ret
movaps
add
scas
loope
and
xchg
mov
test
adc
cmp
aaa
inc
int3
aam
jb
cmp
jno
int3
subl
fs
popa
mov
pop
testl
inc
xchg
fs
push
jo
lahf
push
jge
fwait
aam
addr16
daa
sbb
mov
sub
arpl
jg
shlb
sub
pop
imul
cs
jnp
rclb
pop
dec
xchg
sbb
fdivl
and
or
das
repz
outsb
lods
and
inc
sub
cli
cs
jg
shrb
jb
and
stos
fucomp
loop
pop
pop
mov
cld
lahf
mov
imul
jl
mov
mov
mov
mov
xlat
adc
adc
les
icebp
jns
xor
in
or
inc
rcrb
std
xchg
mov
push
addr16
pusha
inc
mov
icebp
mov
lods
fwait
lahf
mov
aam
mov
mov
add
inc
dec
push
xchg
dec
pusha
inc
cli
cmp
pop
adc
fnstsw
iret
sahf
test
dec
inc
fidivs
jae
shld
push
testl
mov
jno
sub
faddl
mov
fcoms
stos
sbb
mov
enter
adc
dec
rclb
cmp
imul
sub
xlat
stc
mov
into
mov
mov
or
push
outsb
aam
cmp
mov
ds
sub
push
icebp
dec
sbb
fldl
push
dec
or
sub
push
jmp
dec
loopne
lret
jg
inc
out
jecxz
adcb
and
mov
arpl
push
cltd
pop
ljmp
cmp
sub
pop
mov
cmp
add
imul
cld
cwtl
push
push
mov
test
out
dec
xchg
out
popa
shll
out
testl
ljmp
mov
lsl
inc
jbe
loope
pop
dec
jge
sbb
jge
sub
outsl
js
mov
aaa
mov
out
or
pushf
ret
jno
in
jae
gs
xor
xchg
push
inc
loope,pn
adc
je
mov
adc
xor
pop
dec
into
imul
or
inc
aaa
aad
cmp
inc
xchg
sbb
dec
dec
sbb
sbb
ljmp
addr16
xor
mov
mov
testb
lret
pop
adc
gs
in
dec
leave
call
rol
sub
cmp
and
gs
enter
pop
and
lods
push
insb
idiv
ss
adc
scas
xchg
jl
aam
in
jns
add
ret
or
mov
dec
inc
lds
mov
pop
pop
xor
xchg
mov
int
out
pushf
ficoml
gs
cmpsb
inc
push
lods
adc
pusha
dec
inc
mov
sub
sub
inc
jns
mov
sub
adc
or
mov
icebp
cmp
aad
js
cmpl
outsb
jae
pushf
bound
pop
push
mov
rcll
and
mov
inc
cmp
and
rcrb
ss
xor
xchg
xchg
mov
mov
clc
lods
call
imul
daa
push
dec
pusha
jae
xchg
outsb
popa
xor
or
and
fldcw
push
out
inc
push
aam
testl
outsb
add
push
cmp
pop
jno
sarl
dec
scas
enter
add
repz
call
dec
je
dec
dec
cmp
fdivs
push
inc
inc
jge
pop
xor
dec
stos
and
ret
cs
mov
mov
mov
loop
jo
dec
loopne
jne
add
xor
or
mov
jmp
mov
and
lret
insb
dec
push
or
mov
call
add
sti
xor
cmpsb
addr16
in
inc
cmp
jecxz
bound
fists
pop
jo
insl
inc
xlat
pop
mov
gs
adc
test
rcrl
dec
xchg
xchg
test
jno
rol
pusha
jo
addb
inc
mov
out
fwait
xchg
mov
lods
mov
mov
or
lods
int3
in
lret
not
push
xor
push
jae
fidivl
ss
push
adc
mov
mov
loop
int
out
es
or
testl
je
xor
and
outsl
jno
pushf
lcall
jno
pushf
loope
mov
xchg
cld
jnp
sti
shr
adc
xor
mov
sub
lret
pushf
inc
test
dec
dec
xchg
stos
jmp
push
sub
repnz
sub
mov
into
loope
test
fimuls
sub
pusha
sub
xor
pop
pop
pop
add
jae
clc
lods
mov
in
mov
xchg
push
and
and
aas
pusha
movsb
push
cmp
push
jb
push
add
je
cmc
addr16
fadds
mov
cmpsl
push
imul
add
scas
adc
or
decl
inc
push
fiadds
add
int3
xchg
dec
jbe
adc
roll
inc
das
test
or
aad
jle
cwtl
loopne
cmp
pop
xchg
or
mov
test
loope
cmp
jns
pop
or
fsubrl
out
cmp
xor
push
mov
pop
js
push
push
dec
and
push
fists
jb
pop
cmp
add
fwait
stos
adc
mov
cmp
mov
stc
into
nop
std
testl
js
mov
adc
stos
fstpt
dec
int3
call
int
sbb
lcall
lods
xchg
dec
stos
stos
call
xchg
push
mov
pop
xchg
test
mov
xlat
xchg
loop
adc
jae
mov
or
push
cmp
pop
iret
je
mov
in
idivl
out
pop
cmp
pushf
push
or
xchg
gs
and
or
dec
jns
das
add
mov
inc
sub
xlat
test
in
xchg
and
sarl
std
inc
cmc
cwtl
dec
or
jns
jecxz
shll
ret
std
push
insl
addr16
pop
xor
inc
cld
insb
stc
mov
dec
outsl
subl
dec
sub
fmull
cmpsl
push
xor
jecxz
dec
inc
imul
xlat
ljmp
or
inc
fnclex
es
repnz
roll
movsl
mov
mov
xchg
add
imull
xchg
mov
lahf
loopne
cmp
mov
or
sbb
sahf
xor
dec
and
mov
mov
push
out
fistpll
xor
inc
subl
fadds
sbb
add
mov
mov
lds
pop
xchg
std
les
mov
sbb
nop
mov
and
pop
and
sbb
mov
fsubr
fimull
mov
outsw
adc
iret
jo
nop
mov
cmp
inc
mov
pop
nop
lds
mov
fnstenv
sbb
ljmp
dec
mov
push
adc
inc
lock
aas
mov
outsb
sub
pop
clc
gs
jno
movsl
hlt
js
push
xchg
outsb
adc
pusha
pop
test
subb
jbe
lea
sbb
in
mov
mov
push
or
mov
jns
loope
outsl
dec
loope
adc
ss
lret
mov
fwait
out
leave
jb
testl
int
pop
mov
jae
xchg
cs
xor
xor
int3
mov
pop
call
out
push
xchg
subl
gs
dec
push
adc
push
ret
shrb
les
repz
push
pop
lea
cmpsl
stos
add
ja
repnz
fcmovnb
enter
sti
les
pop
cwtl
clc
cmp
sbb
push
adc
xchg
pop
pop
push
inc
pushl
js
lcall
test
xchg
mov
js
rorl
std
mov
mov
mov
or
pop
ja
dec
rorl
inc
stc
sarb
popf
xor
addr16
cmp
mov
dec
sbb
loope
lret
loopne
mov
scas
and
leave
fstl
subl
or
pop
mov
testb
jne
aad
negb
or
mov
mov
loop
sti
jns
sahf
roll
push
out
mov
out
add
cs
mov
test
push
xchg
jecxz
xorb
aas
clc
jmp
sbb
es
mov
add
jmp
mov
and
jbe
push
fsts
mov
imul
cmp
inc
cmpsl
add
cmpsl
sahf
pop
xchg
jl
lods
cwtl
dec
mov
cmc
jns
push
cld
repz
in
push
daa
jmp
mov
xor
inc
jo
and
sbb
pushf
ret
cmp
test
jle
int3
inc
xor
in
inc
sub
mov
test
popf
jmp
fdivp
and
dec
call
jl
mov
test
add
and
and
add
out
push
push
fimull
enter
leave
fstpt
aad
je
mov
mov
lea
mov
arpl
cltd
pop
call
push
loopne
inc
cmp
inc
mov
je
mov
daa
lret
shlb
jo
mov
rcll
lds
pop
ss
pop
mov
jge
xchg
into
mov
cmp
pusha
fs
pushf
push
xchg
pusha
ja
dec
outsl
insb
pusha
sahf
ja
insl
out
mov
mul
jmp
and
jl
dec
nop
mov
loopne
sub
dec
xchg
or
xchg
dec
add
pushf
pop
call
mov
stos
popa
jmp
and
and
or
pop
adc
sub
loopne
hlt
sub
jns
mov
fistps
xchg
sti
cmpsl
cmp
inc
xchg
xor
rclb
xor
mov
cmp
sub
xchg
xchg
jmp
mov
scas
fstpl
xchg
push
icebp
mov
in
cmp
xlat
xor
bound
mov
out
add
aam
dec
adc
fwait
pop
fbld
mov
and
jnp
mov
xlat
fsin
fsubr
mov
in
xor
hlt
or
stc
mov
movsb
rclb
xchg
pop
popa
shll
cld
lcall
ja
xchg
and
dec
stos
dec
sbb
adcb
sub
imul
inc
cli
cmp
dec
pop
fwait
add
push
push
xor
push
repz
mov
rcll
popa
mov
add
jle
fsts
xor
ds
jp
dec
clc
ret
repnz
and
mov
adc
out
iret
sti
mov
mov
loope
adc
stos
pop
adc
dec
rcll
sti
inc
nop
out
and
cltd
jo
pushf
cmp
jle
push
jno
add
or
mov
movsb
push
lods
lods
or
aas
dec
fsubrs
mov
addl
leave
lret
jno
inc
lahf
lea
dec
jl
sti
sahf
int3
or
pop
cmp
cwtl
and
pop
jp
mov
fisubl
data16
jns
daa
jno
stos
xchg
pop
adc
inc
adc
mov
rclb
add
cmc
out
in
mov
ljmp
xchg
out
in
aam
mov
jg
lea
test
fisubrs
or
xchg
shll
cmpsl
nop
ss
push
xor
xlat
and
sub
jo
or
pop
xchg
xor
mov
shlb
or
bound
mov
sar
xor
push
dec
push
cltd
lds
fistpl
int3
sub
push
bound
cli
jno
push
fwait
stos
jmp
jns
ljmp
and
lcall
pop
mov
sbb
or
and
add
add
clc
or
inc
pushf
aad
jge
cwtl
ss
pop
adc
int
and
roll
imul
jae
mov
aaa
fadd
pop
mov
adc
adc
stc
lret
mov
pop
add
lds
insb
sub
enter
enter
xchg
pop
stos
int3
or
xor
inc
jmp
push
out
jle
sbb
mov
mov
lea
push
cmpsb
sub
pop
mov
loopne
sahf
mov
in
out
enter
jo
sbb
fwait
out
cmp
shll
or
ss
scas
inc
and
jp
imul
ja
subps
jg
loope
jmp
adc
or
xchg
or
cmpsb
lahf
lret
mov
pop
sbb
lods
les
sbb
insl
cmp
dec
or
cmp
push
xlat
clc
cmp
inc
cmp
roll
mov
cmp
ljmp
cmp
or
int
ss
xor
xchg
push
into
inc
cmpsb
adc
loope,pt
sti
mov
xchg
sbb
mov
adc
scas
jmp
cmpsl
aaa
mov
je
inc
and
or
mov
scas
push
lret
sub
add
test
lds
loop
xchg
leave
popa
in
mov
insl
arpl
out
dec
jo
inc
ficoms
test
les
sub
inc
sub
sub
jl
repnz
das
repz
and
ja
les
iret
sub
ret
sub
hlt
dec
std
outsl
hlt
xor
dec
repz
clc
jp
push
xchg
in
pop
dec
and
int
push
adc
stos
and
inc
cmp
adc
sub
xor
or
mov
test
scas
pop
test
cmp
sti
xchg
sbb
imul
in
div
add
mov
push
or
gs
gs
lods
int3
cmpb
ret
outsl
cld
adc
push
xorl
inc
sub
xchg
daa
pusha
add
repnz
les
subl
dec
xor
popa
addl
sti
cmpsl
mov
xchg
ja
mov
xor
mov
pop
jb
jg
jo
xlat
lret
add
inc
outsb
and
shlb
mov
cmp
sbb
and
xor
rcrb
lret
mov
and
push
dec
pop
lods
jne
fdivrl
mov
adc
stos
inc
fiaddl
jmp
sbb
adc
mov
jge
ds
test
mov
xchg
inc
push
int
push
out
lea
aad
adc
dec
mov
lret
test
xor
out
enter
pop
pop
sarb
push
inc
push
mov
jge
test
jno
cmpsb
pop
mov
mov
out
mov
mov
sub
and
rorl
int3
sbb
loopne
lock
xchg
sahf
sbb
lock
dec
push
popf
inc
push
fs
std
cmp
mov
pop
xchg
mov
dec
movsl
push
pop
mov
xchg
sub
pushf
mov
stos
pop
repnz
jmp
push
mov
adc
lods
xchg
es
add
mov
xchg
divl
pop
ja
insl
rcrb
hlt
add
mov
mov
jl
mov
repz
xchg
mov
js
orb
sarb
movsb
lock
aaa
mov
cmp
and
mov
mov
lock
dec
in
push
adc
push
mov
out
cltd
jne
es
xor
lods
fidivl
pop
clc
aaa
mov
std
repnz
imul
jns
xchg
xchg
pop
das
mov
or
xchg
mov
in
xor
pop
jbe
and
jo
jg
out
clc
int
ss
call
dec
mov
or
sbb
lock
sahf
mov
inc
cwtl
loop
add
adc
dec
sahf
data16
pop
dec
sub
mov
xor
das
imul
mov
adc
mov
shll
imul
sbb
jmp
adc
push
jge
pop
xchg
xor
insb
xchg
repz
push
adc
xchg
popa
xor
test
jo
popf
in
not
movsbl
repz
call
flds
mov
sar
sbb
dec
inc
pop
aaa
and
jge
ss
cmpsb
cmp
fisttpll
and
out
sbb
cmpsl
movsl
es
add
pop
inc
insl
repnz
in
mov
ss
pop
sbb
pop
inc
sahf
xchg
test
mov
shll
iret
pinsrw
dec
jg
add
stc
sbb
add
cli
cld
fdivs
pop
cmp
sbb
push
jo
addr16
cmpsb
xor
divb
lock
add
sti
test
add
clc
enter
push
aad
xchg
sub
shll
push
les
in
sub
stos
stos
jns
in
mov
or
vandps
les
in
movl
outsl
neg
lods
iret
inc
push
mov
jecxz
xor
pop
aam
mov
cmp
sbb
mov
jle
cli
sbb
dec
xor
je
int3
lret
es
push
in
lods
shlb
inc
sbbb
mov
mov
dec
clc
dec
cltd
cs
mov
repz
mov
mov
movsb
push
test
xchg
pushf
in
mov
pop
or
clc
xor
subl
mov
or
fists
icebp
sahf
sbb
shll
jo
sub
pushf
cs
xchg
push
inc
jge
pusha
popf
popf
pop
ds
pop
dec
push
test
mov
jbe
adc
out
test
jp
mov
cmp
xlat
dec
pop
xor
fimull
push
inc
push
movsb
out
out
std
jge
adc
bound
pusha
mov
stc
mov
lcall
gs
and
adc
shrl
jmp
divb
xchg
xchg
movsl
fdivrs
scas
dec
cld
mov
push
inc
add
sbb
push
fsts
shr
jmp
cmp
pop
out
insb
ja
xor
mov
clc
xchg
pop
mov
sub
add
xor
jl
add
adc
or
bound
dec
js
and
and
rep
jbe
push
push
les
add
js
sbb
cmp
jge
push
pushf
mov
jl
push
pop
jmp
iret
push
xor
push
pop
mull
mov
mov
repz
inc
xorb
adc
rcll
scas
data16
xor
stos
pop
shr
adc
cmp
cmc
xchg
adcb
or
std
in
into
scas
or
das
shll
push
xlat
insb
xchg
mov
mov
mov
imul
or
and
outsl
mov
scas
ljmp
out
rorb
test
mov
mov
popa
lahf
pop
mov
rorl
scas
pop
imul
xor
push
mov
in
repz
movsl
scas
pop
cmp
scas
cs
mov
call
daa
int
shrb
outsb
inc
or
shlb
inc
and
imul
sbb
nop
push
xor
icebp
and
ljmp
lea
mov
pop
scas
mov
insb
cmp
or
xlat
negb
xor
fnstcw
xor
jno
out
jge
sbb
aam
stos
jne
mov
sahf
lock
pop
ss
lods
addr16
repnz
popf
sub
add
pop
cmp
pop
add
mov
scas
outsl
test
sub
icebp
dec
xchg
lret
add
outsl
sbb
push
dec
insl
test
movsl
xchg
sti
stos
sti
mov
fnstsw
pop
mov
loop
xchg
std
cmp
xlat
nop
cli
sbb
push
into
add
js
sbb
clc
loopne
lcall
lret
and
xchg
mov
mov
cmp
fwait
and
push
pop
dec
cmpsb
lods
in
adc
xor
mov
mov
rcl
pop
xchg
add
neg
xor
add
fucomp
add
push
adc
lock
popf
arpl
sarb
jb
test
in
add
push
adc
cs
outsl
inc
sbb
dec
pusha
jle
out
sbb
sti
xlat
mov
lret
mov
adc
cmp
in
das
sahf
repz
icebp
mov
jp
jge
xor
cmp
push
out
stos
call
cmp
rclb
adc
pusha
out
mov
cmp
add
pop
cli
imul
or
push
dec
lahf
xchg
ret
mov
dec
jp
dec
inc
jg
dec
and
stos
mov
scas
xor
es
mov
movsb
pusha
adc
xchg
movsl
or
outsl
xor
lret
out
cmpsl
jae
pusha
daa
outsl
mov
ss
test
jp
cmp
test
dec
sahf
cwtl
pop
jns
ss
xchg
and
add
push
mov
imul
insl
and
jns
sbb
aaa
push
scas
xor
in
iret
add
mov
out
fstl
stc
jns
ja
popa
jne
mov
enter
shlb
inc
dec
mov
xlat
push
inc
dec
movsl
add
push
dec
xchg
mov
cld
cmp
mov
mov
fcomp
lods
iret
cmp
std
in
or
adc
scas
and
rolb
test
insl
jmp
add
mov
push
or
paddsw
adc
scas
xchg
mov
sbb
jbe
xor
mov
cmpsl
sbb
test
sub
in
jge
dec
xchg
cmp
and
leave
pop
icebp
lret
jecxz
adc
cld
std
mov
xor
dec
iret
stc
sub
add
or
mov
fdivrp
testl
mov
mov
out
mov
outsl
data16
sbb
addr16
pop
mov
hlt
sub
ret
rcr
xchg
sti
aam
pop
sti
xchg
mov
rcrb
fnsave
mov
lret
les
add
subl
fisubrs
dec
mov
jge
test
adc
xor
inc
pusha
nop
sub
js
dec
sbb
sub
jno
inc
jbe
and
push
cmp
in
enter
push
add
mov
test
popf
mov
or
daa
cmp
ja
pop
cmp
faddl
ja
fimull
pop
js
dec
jmp
cmp
cmp
push
inc
cld
lods
cmp
int
std
cmp
and
pop
and
test
xor
in
cltd
movsl
sbbl
jo
loopne
ret
fdivp
test
xchg
xor
daa
inc
jecxz
fistps
nop
mov
xchg
mov
pop
fsubs
mov
cli
scas
jmp
insl
dec
and
xor
dec
pop
ljmp
mov
test
fisttpl
add
inc
mov
jo
fnstsw
jbe
stos
lds
repz
scas
jg
cmp
mov
arpl
inc
jb
pop
inc
outsb
into
xor
xor
lret
push
vphsubdq
aas
jnp
das
pop
cmc
jns
sbb
lods
int3
shll
pop
sbbb
rol
jl
jl
dec
jns
sbb
cmp
jne
enter
jo
jmp
jb
fisubs
pop
pop
inc
cmp
sbb
lret
movsl
leave
jge
out
mov
mov
rep
adc
xchg
sub
lret
int3
pop
sub
add
lcall
imul
cmp
mov
dec
insb
inc
testb
leave
pop
xchg
pop
add
stos
mov
cmp
sbb
push
lret
add
ret
dec
shl
div
nop
dec
int
dec
cli
xor
test
mov
or
inc
dec
jl
jg
hlt
enter
insb
gs
fcoml
and
cmp
aam
push
shlb
sub
mov
xchg
push
and
add
and
add
sub
in
daa
xlat
orb
aaa
outsl
sbb
or
and
sub
in
das
movsl
lods
cli
outsb
pop
mov
cmp
ret
push
add
mov
dec
jbe
add
or
xchg
cwtl
dec
rclb
add
push
xchg
fs
je
mov
fwait
jp
lahf
lods
jle
dec
aas
fsubl
push
or
outsl
lret
mov
jle
dec
dec
dec
lcall
dec
cmpsb
ret
lret
xor
fsubrl
push
sbb
sti
jnp
shrb
xor
xor
and
inc
bound
xlat
divb
jl
lock
aaa
outsb
sub
stos
adc
sbb
mov
jmp
inc
dec
sub
decl
push
jecxz
xor
mov
jmp
pusha
hlt
out
push
test
outsl
mov
jns
sbb
pop
xor
jae
mov
and
les
subl
bound
imul
cmp
mov
clc
test
ret
sbb
lock
xchg
andb
or
enterw
sub
inc
stc
mov
hlt
in
stos
fwait
add
jne
sub
adc
dec
and
jbe
imul
mov
sub
adc
sahf
aas
and
push
pop
mov
and
jmp
xchg
or
sahf
rcrl
xor
sub
les
mull
fstl
adc
cld
mov
or
xor
addr16
mov
in
dec
cwtl
add
cmpsw
mov
push
adc
pop
pop
adc
mov
cmpl
xchg
mov
add
add
ret
xchg
add
movsl
insb
out
aad
pop
sbb
aad
mov
into
loop
inc
and
cmpsb
fldt
mov
outsb
pop
push
cmp
enter
stos
ss
xor
and
ret
inc
aaa
jbe
jmp
push
xchg
and
int
push
scas
lret
add
sub
pop
cmp
fidivrs
pop
xchg
arpl
sbb
lret
js
adc
mov
mov
movsb
mov
hlt
sub
cmp
dec
aaa
xor
orb
incb
pop
dec
ss
lahf
arpl
sbb
cld
xlat
divb
add
and
sahf
xchg
ja
clc
cmp
mov
ljmp
shr
mov
aaa
sub
mov
aad
cmpsb
lcall
test
vmwrite
sbb
mov
fsubs
lea
scas
sbb
mov
pop
orl
das
and
ljmp
push
sub
outsb
mov
mov
aam
icebp
mov
lds
lcall
dec
mov
xor
je
add
sbb
mov
sub
sti
push
insb
xchg
mov
jle
js
mov
xchg
stos
xchg
or
cmc
jge
jg
xchg
push
add
push
pop
or
jbe
sub
jmp
mov
fisubl
ja
rcrl
sbb
and
jle
arpl
fcomi
cmpsb
inc
divb
rolb
dec
imul
sti
push
loop
mov
in
jmp
cmp
aas
movsb
imul
out
mov
out
mov
sbb
dec
xor
mov
sub
adc
fstps
sbb
xlat
jg
jne
cmp
or
ss
pop
mov
sbb
sar
xor
imul
xor
dec
test
push
inc
sti
adc
repnz
leave
pop
testl
mov
dec
mov
fsubs
xchg
out
out
mov
fs
nop
fdivrs
mov
push
out
bound
mov
sti
lret
ds
loop
jg
push
sahf
sbb
outsl
jne
lock
les
or
cltd
push
jnp
sbb
ss
int3
dec
pop
imul
sub
pop
cmp
mov
movb
mov
subl
push
xchg
sbb
and
sti
xchg
jnp
mov
loopne
xlat
fdivl
sbb
pop
cwtl
repz
mov
pop
std
test
sub
fisubrs
and
repnz
and
fistpl
adc
jge
pop
iret
push
mov
pop
cmp
stc
add
out
out
fistl
insl
and
fldlg2
lret
pop
cmp
dec
ljmp
pop
mov
adc
pop
cmpsb
jne
mov
and
pop
shll
mov
and
popa
imul
sarl
daa
cmp
jo
pop
pop
add
pop
jge
cmc
adc
add
push
imul
jno
cmc
sbb
sbb
call
sub
pop
pop
pop
out
ljmp
mov
aad
jb
lds
pop
jns
sbb
in
fdivrl
add
pop
cs
pop
inc
cmp
aas
scas
pop
xchg
add
stos
lret
addr16
inc
in
lock
dec
fisttpl
mov
je
sbb
dec
jle
sub
jle
jge
mov
cltd
add
sub
aad
sahf
in
lret
pop
sub
lea
aam
push
or
xchg
cmp
xor
and
sbb
dec
sub
mov
fcoml
mov
mov
aam
dec
in
push
movsl
ds
xchg
mov
jle
push
xchg
jle
inc
pop
inc
cmp
imul
ficoms
sbb
stos
mov
jg
fcompl
ljmp
out
jmp
push
mov
pop
aam
les
mov
sahf
pop
or
push
inc
je
popa
pop
in
sub
movsl
jnp
cs
mov
arpl
mov
and
jmp
mov
addl
sbb
mov
mov
cmp
sar
inc
imul
sub
xchg
or
sbb
and
pop
sahf
and
xchg
inc
sti
jg
mov
pop
xor
scas
add
jge
cli
inc
xchg
insl
mov
mov
outsl
cli
test
sub
call
pusha
add
scas
testl
jb
xchg
movsl
pop
scas
adc
fisttpl
xchg
ficoml
jno
jecxz
sub
mov
xlat
xlat
pop
je
mov
pop
pop
xor
jb
enter
loop
imul
or
ss
inc
dec
stos
cmp
leave
pop
and
sti
jmp
cwtl
sahf
jle
ret
lahf
fs
xchg
or
jecxz
insl
sarl
shl
pop
jecxz
sbb
and
data16
rcrl
cmpsl
sub
clc
sti
dec
pushf
fbld
ss
xchg
xor
and
pop
cmpsl
cld
mov
ljmp
ds
push
mov
es
imul
ret
loop
pop
inc
mov
xchg
xor
and
in
mov
in
rcrl
mov
arpl
jle
cmp
push
add
dec
mov
sti
pusha
movsl
xchg
rcrl
sbb
loop
out
insl
jbe
rep
sbb
js
mov
xor
xor
bound
or
insb
lcall
add
jge
sbb
xor
arpl
or
sbb
test
cmp
jmp
fwait
xor
fsubl
jmp
mov
dec
xchg
add
or
pop
and
pop
nop
or
inc
insl
inc
sti
cmp
test
xor
ret
dec
xlat
pop
xchg
adc
les
rcrl
cmpsb
cmp
imul
jns
push
xchg
push
inc
cmpsl
jb
jae
cld
test
mov
inc
xlat
jl
cld
inc
or
mov
test
push
or
pop
ficoms
daa
xchg
or
mov
xor
and
adc
cmp
rclb
pop
repnz
jno
mov
insb
or
xor
popf
popf
movsl
lahf
mov
sbb
xor
loopne
fcomi
sub
into
mov
ja
out
mov
push
or
jmp
push
insb
mov
leave
inc
adc
js
or
sbb
jb
aam
inc
mov
xor
loopne
imul
lret
jae
xchg
lahf
inc
imul
movsb
adc
lcall
cmc
arpl
sti
push
daa
cltd
pop
test
outsl
xchg
lods
mov
inc
pop
pop
popf
pop
jne
out
pop
pop
jns
sbb
adc
jmp
and
test
sub
lock
sub
and
push
nop
jmp
inc
rcrl
pop
inc
enter
sbb
adc
hlt
outsb
push
sti
lods
pop
cmp
pushf
add
lahf
les
repnz
out
std
addr16
imul
mov
lret
lea
inc
test
and
and
popa
cs
rcl
mov
das
data16
push
es
xlat
add
in
pop
adc
jle
xchg
push
fwait
mov
mov
sub
inc
lea
xchg
ljmp
xor
dec
cmp
pop
cli
add
cltd
xchg
add
or
int3
rcrl
das
int3
add
imul
xor
jb
popf
xor
and
adc
pushf
push
adcb
cs
ljmp
lahf
mov
cmp
dec
int3
and
les
push
dec
jl
pop
loopne
and
out
mov
xchg
mov
ja
add
ds
adc
mov
xor
adc
gs
jne
mov
arpl
insl
hlt
test
jns
cwtl
inc
lret
jne
sti
mov
imul
dec
adc
dec
jg
dec
sbb
mov
pushf
sbb
pop
icebp
sub
ficoms
cmpsl
mov
je
mov
sub
inc
ret
out
lods
cmpsb
or
pop
cmp
cltd
nop
jl
inc
fsubrs
out
mov
cvtps2pi
pop
pushf
lret
lahf
jnp
test
push
add
jnp
sbb
rolb
fstl
jns
clc
mov
adc
jg
adc
jnp
mov
and
in
jp
vmaskmovdqu
or
iret
lea
andl
addl
in
mov
jge
cwtl
shll
mov
stos
rcll
pop
xchg
cld
rorb
add
scas
fcomps
sub
sbbl
into
arpl
push
dec
dec
fisttps
mov
scas
or
fcmovne
dec
push
cli
jns
pusha
xchg
adcl
fcom
stc
xor
sysret
ss
jl
movsb
in
xchg
iret
test
outsb
mov
out
cmp
adc
sti
mov
fwait
sub
fldenv
cmp
sub
mov
mov
pop
mov
movsb
fldenv
pop
movsl
daa
cmp
cmpsb
js
mov
es
imul
xchg
pop
jnp
sub
lock
test
fiaddl
mov
incl
aam
xor
jb
hlt
cmc
inc
lds
mov
rorb
mov
mov
in
jl
adc
fwait
cmp
jmp
mov
xchg
sbbl
and
repz
cmp
jle
dec
loopne
imul
and
xchg
mov
push
sub
pusha
shl
sarb
popa
mov
jge
mov
setns
lods
xlat
int3
mov
repnz
jbe
sbb
xchg
xchg
pop
jbe
filds
leave
das
xchg
shll
mov
jge
jg
push
stos
repz
xor
adc
imul
aam
and
mov
mov
pop
iret
scas
xlat
xor
push
xlat
subb
pop
dec
sbbb
cmp
push
and
rcrb
outsb
or
stos
inc
shlb
sahf
test
mov
inc
mov
push
dec
xlat
pop
shr
aam
fdivrl
jecxz
in
inc
addl
lcall
pop
sar
jecxz
aas
mov
mov
dec
dec
lds
mov
sbb
or
iret
xor
loope
popf
loopne
pop
mov
icebp
sub
or
std
add
in
divb
mov
in
and
push
push
mov
inc
push
xlat
and
add
sub
sub
aad
jo,pn
aas
loopne
sar
leave
sub
imul
mov
les
mov
xor
xchg
xlat
lret
pushl
pop
notb
adc
daa
mov
pop
fucomp
shrb
fiadds
xchg
mov
outsl
dec
shrl
ljmp
fldt
bound
dec
sub
test
lock
inc
sub
mov
cmp
cmp
sahf
mov
jl
loopne
jle
jo
lods
ret
inc
fsubs
arpl
pop
insl
int
pusha
add
lahf
nop
std
les
mov
outsb
push
sarl
xchg
mov
push
stos
inc
pop
xchg
cs
cmp
sti
cmpsl
pop
push
push
arpl
aas
add
and
clc
pop
cltd
jmp
add
adc
iret
pop
adcl
iret
out
sbb
lock
scas
push
shlb
insb
sbb
and
clc
push
lret
ret
arpl
cmp
in
dec
inc
dec
pop
pop
sahf
xor
jmp
enter
dec
cmp
mov
cwtl
xchg
mov
popa
imul
pop
inc
xchg
std
inc
leave
jle
outsl
movsb
cmp
xor
inc
shrb
cli
loop
loope
dec
jl
xor
into
sub
sbb
jmp
cli
popa
js
xchg
or
push
push
in
pop
cwtl
xchg
adc
add
bound
adc
mov
xchg
xor
jp
cmp
sti
addr16
mulb
jo
lahf
dec
cmp
push
push
pop
loopne
stc
movl
stos
mov
andl
je
daa
std
pop
jns
jl
scas
in
xor
rcrb
inc
add
rol
in
insl
call
mov
outsl
test
repnz
cmpsb
xchg
sbb
adc
inc
in
xchg
dec
mov
or
insb
or
fimull
les
sahf
in
sbb
mov
int3
lret
test
mov
jnp
fmulp
sbb
call
enter
movb
jnp
loop
scas
lock
pop
mov
scas
push
cmp
orb
mov
push
sbb
jg
roll
mov
xchg
aaa
in
add
std
mov
cli
jbe
dec
test
or
out
and
adc
lods
test
bound
repz
mov
aad
jmp
es
push
mov
xor
pop
and
push
loop
sti
idivb
dec
pop
mov
push
adc
sub
xlat
pop
popf
pop
push
sbb
ss
shlb
ljmp
call
mov
jecxz
xchg
pop
jecxz
xchg
lea
lds
fists
call
out
adc
sahf
jns
stos
mov
jge
pop
cs
test
aad
in
js
repz
jmp
data16
mov
cmp
sub
repnz
xchg
mov
pop
mov
adc
fwait
mov
xlat
testl
mov
cltd
fistps
dec
adc
add
or
out
dec
fmull
or
pop
sbb
pop
hlt
in
lods
sub
lods
jno
dec
xchg
es
push
cmp
or
add
mov
pop
shlb
mov
out
mov
sbb
cmc
inc
or
and
add
jne
dec
pop
cs
cmp
pop
stos
call
dec
sahf
stos
jbe
test
inc
inc
clc
cmpsb
inc
push
repnz
and
inc
adcb
mov
push
xlat
daa
mov
jle
ficompl
xchg
sub
push
repz
fisubrl
cmp
jl
mov
xchg
inc
loop
decb
dec
inc
mov
aad
jmp
scas
cmp
or
dec
shll
push
push
fiadds
cmp
mov
mov
xor
aas
loope
icebp
dec
dec
nop
fs
stc
jbe
xchg
adc
cmp
adc
fs
adc
sbb
or
outsl
cmpsb
mov
add
xchg
mov
lock
mov
or
mov
lds
pop
out
push
iret
pop
adcb
jecxz
fsubrs
and
js
lret
and
aaa
ret
test
dec
test
cld
cmp
pop
test
sbb
mov
cmp
mov
ljmp
cmc
xchg
jg
shlb
jmp
jne
lcall
cmp
or
xor
sbb
insb
sbb
outsb
out
sub
testb
mov
sbb
fmuls
xor
and
shlb
mov
lods
decl
sub
mov
mov
push
xor
xor
js
mov
xor
cmpsl
lods
sub
in
mov
and
movl
lods
add
stos
aad
imull
mov
mov
lahf
mov
cmp
data16
add
rol
stc
pop
test
ret
inc
in
pop
jb
dec
aad
ss
fwait
lds
mov
jg
insl
shll
inc
inc
test
imul
inc
pop
test
std
jno
movsb
cmp
int3
pusha
ror
xlat
or
test
insl
arpl
adc
cmp
bound
sub
mov
dec
add
and
daa
subl
movsl
movsl
sbb
ret
mov
or
adcl
sbb
hlt
mov
xchg
out
cmp
inc
inc
filds
xchg
jmp
push
dec
add
xchg
dec
or
in
adc
sbb
sahf
repz
jbe
jp
pop
lds
iret
imul
divl
enter
loope
aaa
scas
mov
dec
cmp
stc
inc
fcomip
push
mov
push
xchg
jae
popf
xlat
xchg
xchg
cmpsl
jae
fstps
mov
mov
lods
or
jmp
jecxz
daa
and
icebp
out
lret
fnstcw
das
xlat
je
add
icebp
cbtw
push
or
pop
int
xchg
loope
aas
inc
mov
lock
repnz
xor
outsl
fdivr
xchg
xchg
xor
cmc
scas
faddl
insb
int
or
cmp
mov
add
pop
inc
out
jg
sbb
in
pop
mov
stos
inc
cmpsb
cmpsb
inc
add
mov
aaa
jns,pt
sub
mov
cmp
jae
std
aaa
sbb
sub
stc
gs
sbb
and
cmp
inc
ja
mov
sub
insl
xor
jae
sbb
pop
movsb
mov
call
dec
dec
mov
bound
sub
or
sbb
or
out
and
nop
xlat
dec
push
ret
push
pop
fdivrs
push
cmp
test
add
out
cmpsb
lret
fsubl
adc
pop
movsb
add
out
iret
lret
test
jno
inc
call
nop
icebp
mov
cmp
dec
aaa
lock
dec
imul
lcall
out
push
dec
or
imul
lret
and
scas
movsl
fwait
cmpsb
sbb
and
inc
roll
leave
push
dec
cmpsl
mov
fldl
jmp
pushf
rol
stc
adc
push
daa
and
scas
pop
add
repz
sub
loopne
jp
cmp
inc
imul
out
sbb
andb
cltd
shlb
addr16
sub
mov
inc
das
mov
mov
loopne
and
out
inc
cmp
push
sbb
push
add
dec
lods
xchg
out
in
jns
hlt
adc
addl
mov
xchg
pop
mov
out
jno
sbbb
cmp
jno
pop
inc
inc
scas
jp
lahf
adc
daa
adc
inc
sub
les
jle
dec
cmp
pushf
xor
pop
cmp
idivb
dec
bound
aaa
pop
push
arpl
or
push
stc
test
adc
repnz
add
je
shll
lahf
xchg
push
mov
faddl
jg
add
gs
xchg
ja
pop
cmp
cmp
jae
lds
or
sbb
adc
and
shlb
jp
fmuls
jmp
in
out
xor
xlat
or
and
mov
or
adc
mov
push
sbb
popf
mov
lods
lahf
dec
fstl
popf
jae
push
int3
sahf
push
mov
pop
xchg
push
jae
push
mov
adc
movl
mov
fwait
loope
scas
add
adc
fidivl
repz
aam
cmp
sbb
xchg
fsubrl
stc
add
mov
add
orl
jo
mov
and
fwait
or
ljmp
and
sub
insl
jge
out
xchg
cmp
sbb
push
notb
or
add
jae
lods
mov
shl
loop
mov
ret
sbb
xor
rclb
cmp
jle
push
popa
dec
jae
ret
jl
ljmp
and
mov
push
sbb
jge
and
push
jmp
imul
cmpsb
pop
cltd
dec
loopne
or
sub
pop
cs
ds
add
pop
in
outsb
and
mov
cmpsb
pop
add
lods
mov
scas
dec
scas
xlat
push
aas
ficompl
pop
cmpsb
mov
stc
sarl
mov
stos
push
adc
test
sar
lcall
add
and
fwait
les
mov
ret
or
fwait
rcrb
stc
push
f2xm1
push
cmp
addr16
test
dec
cmc
add
jnp
fwait
dec
repnz
pop
cld
push
roll
imul
xor
pop
add
cld
or
mov
pop
es
pop
out
out
test
std
pop
push
sub
pop
add
out
jl
loopne
std
push
negb
jmp
mov
mov
rcrl
test
adc
dec
int
pushf
push
adc
sti
sahf
and
dec
and
hlt
in
jmp
xchg
cli
mov
pop
jns
mov
inc
mov
pusha
stos
sub
into
iret
adc
jae
ja
rorb
push
sub
jo
leave
loopne
and
pushf
cmp
push
ja,pt
mov
sub
outsl
mov
dec
cmp
push
cld
icebp
lods
cmpsb
xor
jge
xchg
xchg
xor
cltd
mov
xor
gs
out
push
dec
fistl
movsl
or
jno
push
mov
out
enter
sbb
cmp
xchg
or
mov
and
pusha
pop
push
js
mov
fisttpll
adc
sahf
orb
movl
stc
mov
inc
adc
es
sar
shll
adc
sbb
int
mov
mov
pusha
into
or
cmp
test
xchg
or
xor
jne
dec
jge
jae
jne
adc
mov
sub
xchg
dec
jbe
nop
mov
inc
dec
shlb
test
lcall
rclb
lods
or
push
in
imul
xchg
addr16
fs
adc
pop
xchg
ja
cwtl
ja
lret
div
sbb
mov
stc
addl
fbld
mov
mov
cltd
xlat
pop
mov
sahf
in
cmp
cmpsb
test
clc
leave
scas
jnp
mov
aad
ret
add
pop
ja
mov
mov
add
pop
jb
or
imul
and
sub
imul
lret
pop
sbb
dec
int
sub
test
das
mov
xchg
sbb
ficomps
push
sub
aaa
sub
testl
divl
and
adc
movsb
hlt
movsl
in
mov
pop
fidivl
mov
add
in
adc
mov
in
xor
xlat
pop
cmp
sbb
mov
push
dec
repz
fildll
adc
adcl
movsb
rorb
inc
sbb
push
push
dec
and
negb
push
in
cmpsl
iret
pop
test
imull
ds
insl
push
and
adc
mov
sub
jns
movsb
inc
mov
das
dec
mov
scas
mov
ret
insb
fs
dec
sahf
jno
cmp
pop
stc
dec
std
aas
ljmp
iret
or
lret
lds
repnz
stc
lds
popf
cli
test
insb
sbb
repnz
jae
decl
stos
xchg
cltd
sub
inc
out
lds
pop
addb
test
fmuls
sub
dec
imul
mov
and
imul
ret
fnstsw
pop
pop
fidivs
mov
push
vfrczpd
jnp
dec
fiaddl
cltd
mov
inc
fists
fimull
fistpl
and
mov
or
add
pop
cmp
insb
test
or
and
inc
es
scas
es
dec
or
add
jl
jmp
negb
jmp
mov
int
movsb
stc
cmp
cmpsb
jecxz
test
clc
sub
inc
jge
sbb
xor
sub
xchg
xchg
pop
xlat
mov
bswap
cld
xchg
enter
xchg
mov
xlat
or
lahf
jns
sahf
jne
ss
lods
cmpsl
pop
mov
enter
aaa
aas
popa
lret
iret
mov
dec
rorl
sbb
stc
lock
out
cmpsb
push
add
mov
dec
mov
notb
jp
js
jmp
jns
ds
adc
loope
imulb
mov
fs
mov
pop
fimull
shll
cmp
xlat
scas
movsb
add
imul
mov
in
out
call
clc
bound
popf
aad
push
sub
sub
stos
enter
inc
cmp
je
std
add
ficomps
lahf
xor
arpl
pop
mov
push
cmpsb
push
scas
clc
push
enter
mov
mov
pop
or
cmp
shlb
cmp
push
pop
test
int
std
pop
cli
inc
out
add
inc
mov
push
test
dec
sti
mov
xchg
outsl
repnz
ljmp
aas
xor
stos
stos
jns
nop
xor
and
sub
ss
mov
xlat
test
jmp
sub
pop
movsb
xor
inc
rolb
rorb
mov
roll
mov
roll
sub
aaa
xor
insl
mov
push
test
sub
mov
and
xchg
or
test
cmp
mov
or
fnstsw
xchg
mov
dec
rolb
mov
loop
aam
cmp
fisttpll
cwtl
or
pushf
jno
fstpl
jno
sub
cmpsl
mov
aaa
lretw
adc
mov
xchg
fisttpl
jb
sbb
adc
jnp
xorl
es
jnp
pop
adc
inc
scas
jl
test
mov
sbb
movb
sti
jb
inc
mov
repnz
loopnew
cwtl
sub
leave
adc
or
jmp
fwait
pusha
rorb
jg
imul
subb
push
lcall
adc
dec
push
lds
test
fisttpll
cmp
xor
sub
mov
arpl
inc
add
fildll
bound
and
gs
pop
mov
mov
add
jge
nop
pop
xor
cld
repz
push
sub
mov
ljmp
xchg
in
ja
out
push
fwait
add
aam
stos
pushf
add
adc
out
push
adc
test
repnz
or
cli
ret
fwait
inc
out
add
mov
addr16
xchg
push
sbb
fisttps
popf
push
push
sbb
das
enterw
inc
mov
jp
and
adc
sti
outsl
rclb
int
mov
fs
xlat
out
mov
push
mov
loope
popf
xorb
xchg
jno
fldenv
outsl
in
pushf
cmpsl
sbb
loopne
ret
ja
test
xchg
adc
in
pop
xchg
call
rcrl
xchg
std
mov
shl
in
dec
les
dec
fld
jecxz
adc
jecxz
insl
ficomps
fldenv
loop
nop
loop
mov
or
mov
cmp
in
out
mov
pop
lret
push
jno
lret
mov
jns
stos
test
lds
lds
add
and
cli
mov
push
push
rolb
add
in
cli
push
xor
rorb
cmp
insl
stc
cmp
push
les
dec
fisubl
mov
rorl
xlat
jl
mov
jl
mov
imul
loope
fstl
adc
aas
mov
loope
imul
jbe
inc
cmpsl
jno
mov
in
rcrl
jne
push
int3
mov
cmp
dec
imull
lods
out
adc
xchg
in
mov
inc
mov
jle,pn
lahf
mov
aam
dec
xchg
outsl
pop
dec
add
shrb
lock
adc
xchg
lret
sbb
aaa
mov
mov
lahf
sti
push
out
bound
cmp
lret
mov
mov
aaa
test
jno
xlat
jno
stos
ds
sbb
lock
pop
scas
pop
ret
out
push
int
jg
sbb
imul
push
dec
push
mov
and
push
xchg
movsl
jb
mov
sub
pop
push
out
sbb
int
jecxz
sarl
pop
lcall
sbb
mov
pop
push
rcll
ljmp
dec
xchg
mov
test
jns
dec
inc
jmp
jle
push
mov
add
adc
aaa
stos
shll
jecxz
jl
lret
add
lret
sbb
cltd
dec
or
stc
pusha
xchg
cmp
push
in
ss
fdivrp
testl
shrl
fadd
fs
scas
sbb
sbb
mov
nop
push
pop
inc
idivb
stos
jmp
sub
mov
adc
add
push
sub
cli
hlt
xor
test
fisubrl
cmp
mov
cmp
negb
adc
stos
fwait
scas
and
shrb
sarb
pop
mov
or
loop
rcrl
lret
or
jne
fcomi
jb
popf
push
jle
adc
pop
sti
fdivrs
add
jl
out
sbb
sar
or
sahf
je
xchg
pop
out
adc
jmp
mov
hlt
sbb
and
arpl
popf
mov
jae
sarl
mov
repnz
arpl
xlat
in
fadd
dec
lcall
nop
mov
sti
test
sub
mov
jbe
das
mov
test
cmp
jg
int
inc
ss
sbb
loopne
pop
clc
mov
insl
ss
stc
mov
or
mov
sub
loopne
neg
xchg
jnp
adc
mov
jbe
out
mov
adcb
sti
div
lea
cli
in
mov
ret
cltd
push
pop
testb
popf
test
imul
out
movq
std
mov
jmp
push
sub
in
loopne
xor
sub
adcl
pop
imul
jmp
test
les
aaa
scas
inc
and
cmpsl
lods
jmp
xchg
lahf
out
loopne
mov
mov
bound
mov
pop
inc
lods
out
test
ds
ljmp
cmpsl
xor
leave
sub
or
lcall
fisubs
push
sub
push
aam
cmp
stos
or
inc
sahf
je
and
xor
mov
xchg
sbb
testl
js
mulb
shlb
fadds
outsb
out
shl
arpl
sbb
or
xor
test
in
js
repz
es
push
push
mov
cmp
rcl
xchg
rcrl
add
mov
sub
pop
sbb
add
pop
mov
ja
and
pop
xchg
stc
cli
stc
cld
xchg
mov
lret
pop
cmpsb
jg
mov
int3
lahf
fxch
loope
push
cmp
dec
int3
je
cld
push
push
xchg
xchg
push
xor
roll
stos
mov
mov
data16
mov
mov
jge
les
imul
push
daa
or
js
pop
iret
sbb
int
inc
test
mov
jl
pop
data16
lods
movsb
and
cs
stos
pushf
xlat
add
add
and
inc
mov
js
jbe
sbb
lods
out
sbb
lods
scas
cmp
orb
pop
enter
jbe
add
loope
jno,pn
push
xor
insb
adc
lods
and
aaa
in
ret
inc
test
cmp
push
push
push
pop
aas
dec
orb
lods
cs
sub
stos
das
jp
sbb
cltd
push
cmc
shlb
ljmp
outsb
insb
stc
or
inc
shr
fidivrl
cmp
push
pop
jb
lea
out
jo
xchg
mov
jns
inc
in
mov
mov
fdivrp
sbb
inc
sub
pusha
xchg
ljmp
gs
xlat
je
cmp
pop
add
clc
push
clc
aad
or
addr16
ss
sub
mov
xor
stos
and
push
and
cmpsb
out
sub
jmp
and
cmp
dec
push
adc
mov
inc
cmp
jnp
out
pop
xchg
xchg
mov
mov
fmul
add
movsl
xorb
insb
sbb
xabort
push
and
ss
push
mov
lahf
add
shr
cmp
dec
and
das
data16
xchg
insl
aaa
pop
mov
cmpsb
lcall
fsubrs
mov
pop
out
clc
fnstenv
pop
xor
push
xchg
inc
scas
imul
hlt
or
sbb
push
inc
inc
push
ret
add
mov
and
cmp
nop
hlt
ss
iret
or
imul
push
lock
ret
les
pop
or
xchg
adc
sub
pop
xchg
mov
scas
popf
mov
insb
pop
int
mov
mov
inc
xchg
inc
mov
repz
xor
sub
cmc
arpl
and
cmc
xor
mov
push
sub
mov
int
insl
cmc
stos
lcall
add
mov
jne
stos
push
lret
push
fwait
add
pop
mov
xor
push
rorl
sub
and
mov
mov
push
lock
inc
fcomps
repz
inc
jl
pop
arpl
mov
xlat
mov
add
ds
push
and
or
clc
xchg
cli
mov
in
add
mov
ficomps
out
rcrb
rcrb
inc
shll
cltd
sub
ljmp
clc
lods
js
shlb
adc
cmp
scas
adc
fiaddl
add
push
push
pop
in
in
ret
cld
jmp
xchg
std
les
add
addr16
mov
xor
sub
jo
add
push
enter
mov
pop
push
mov
je
mov
in
bound
fsubrs
mov
add
shl
loopne
push
sbb
in
xchg
clc
pop
push
scas
mov
out
fistpl
inc
push
ja
mov
jne
inc
xchg
push
pop
xor
cmp
or
mov
cmpsl
jecxz
hlt
lcall
lea
push
and
push
mov
enter
sub
fstpt
mov
das
add
dec
aam
aas
addl
pop
lcall
jo
adc
lret
push
mov
les
fisttps
mov
ret
out
pop
scas
pop
pop
cli
in
adc
adc
sub
mov
outsl
int3
ffree
xor
adc
ret
xor
ja
jmp
push
sub
add
dec
shlb
inc
mov
jle
out
add
sbb
mov
mov
pop
and
imul
aaa
inc
jno
sub
and
or
sub
mov
sahf
not
scas
call
push
add
lods
inc
mov
sbb
inc
shlb
lock
xchg
inc
sahf
ljmp
push
jne
es
fwait
stc
push
loopne
xlat
leave
sub
mov
lods
mov
in
repz
lahf
stc
and
shrl
repz
ljmp
dec
xor
dec
sbb
repz
xor
outsl
push
adc
push
test
jns
ss
scas
idiv
xor
or
mov
fwait
mov
sbb
fstps
lahf
sar
pop
and
or
xchg
movsb
or
hlt
mov
push
sub
cmp
arpl
or
cmp
es
fwait
sub
add
add
call
cli
fadds
xor
shrl
dec
mov
jle
push
pushf
mov
fcoml
mov
mov
sbb
adc
jmp
push
ja
pop
inc
xchg
sbb
dec
and
pop
sbb
push
insb
dec
pop
shl
fmull
xchg
cmc
push
push
filds
loope
sahf
pop
nop
cmp
hlt
mov
jge
sub
in
cmp
nop
dec
sahf
bnd
sbb
fdivs
lahf
ljmp
js
stos
sbb
in
push
jo
dec
fsubs
sbb
fwait
ds
and
xchg
push
sbb
mov
js
push
inc
aad
mov
lahf
outsl
push
adc
nop
ljmp
test
inc
int
dec
sub
xchg
stc
sbb
int
scas
cwtl
push
or
ret
icebp
loop
mov
add
daa
mov
adc
sub
dec
and
mov
sub
dec
xchg
fldl
xchg
pop
fs
movsl
lds
xchg
daa
insl
dec
shlb
shrb
cwtl
mov
mov
ss
imul
out
and
lahf
aaa
and
data16
test
sub
popf
test
and
push
icebp
mov
xlat
jg
addr16
cmpb
jp
je
sub
jo
xchg
inc
pushf
mov
stc
ss
dec
sub
jle
in
pop
stos
and
inc
loopne
mov
pop
mov
push
lods
fstpl
add
mov
pop
mov
add
sub
mov
pop
cmp
jp
mov
orb
mov
or
js
jle
lods
sbb
in
push
jecxz
jo
stos
dec
leavew
cmp
jb
testl
xchg
mov
flds
test
rcrl
jne
shll
push
adcl
push
sub
movsl
cltd
pop
icebp
cmp
fcoms
pop
mov
lods
enter
inc
xchg
bound
pop
adc
out
loope
shll
ret
clc
shrb
lods
dec
lret
mov
or
sbb
test
add
lret
fildl
imul
outsb
into
push
rclb
ret
cmpsb
pop
jle
sub
cmp
inc
sub
jmp
adc
mov
mov
inc
inc
xchg
push
bound
dec
cmpsl
scas
xchg
dec
movsl
sar
popf
icebp
ss
ja
or
sub
push
sub
pop
xchg
ds
mov
sbbl
sub
xor
loop
mov
xor
lds
loope
es
leave
imul
rcl
pop
fiadds
call
pop
jno
xchg
nop
das
in
cld
lds
hlt
jp
dec
hlt
out
mov
sbb
or
mov
jg
pop
pusha
iret
dec
push
or
clc
and
push
das
movsb
jp
call
rolb
bound
daa
dec
popa
dec
scas
mov
xlat
push
lret
adc
mov
sarl
adc
arpl
xor
and
cmp
adc
xchg
dec
roll
mov
ss
adc
out
fs
pop
arpl
repnz
mov
dec
sbb
inc
inc
mov
cmp
push
mov
or
addr16
loopne
fs
rorb
inc
ds
into
pusha
inc
xchg
jg
faddl
popf
mov
out
mov
pop
jmp
lea
rolb
arpl
xchg
jnp
in
nop
cli
push
jne
aaa
push
jo
jnp
lahf
dec
fdivs
out
sub
xchg
insb
lret
fcomps
andl
mov
addb
mov
sar
pop
or
dec
sub
mov
pop
fwait
out
sub
fsubp
pop
xchg
add
repnz
in
call
sub
adc
push
loopne
push
jno
or
pusha
movsl
enter
adc
xchg
test
adc
les
mov
cmpsl
pop
pop
repnz
xchg
add
adc
and
jmp
mov
sub
shr
push
jno
push
mov
scas
adc
bound
sub
out
test
pop
rcrl
std
aam
adc
mov
in
push
inc
ret
pushf
mov
mov
int
repnz
outsb
jmp
pusha
pop
pop
add
loope
pop
cmc
xchg
mov
mov
popf
sbb
js
xor
sbb
aas
fwait
push
lds
push
pop
lods
into
lahf
aad
stos
stos
push
cmc
clc
stos
arpl
fwait
loop
leave
imul
sahf
fnstenv
jp
out
icebp
adc
sbb
repz
inc
test
sbb
mov
xchg
dec
data16
mov
rorl
cmp
pop
xor
divl
sarb
movsl
or
mov
fistps
xlat
sbb
cmp
test
shrl
mov
xchg
mov
mov
sbb
je
xlat
jmp
push
test
jo
inc
ljmp
and
and
and
fldcw
inc
xchg
fwait
adc
mov
mov
daa
bound
jmp
sub
popa
nop
sbb
mov
or
daa
pop
rcrl
dec
clc
sbb
mov
jne
loope
xor
sbb
pop
mov
fs
scas
xor
mov
icebp
dec
imul
int
bnd
jae
xchg
dec
pop
pop
js
icebp
and
inc
fs
xor
sbb
lret
sbb
inc
fnclex
cltd
adc
pop
jle
fs
loop
mov
inc
push
mov
xor
inc
add
movsb
xchg
push
inc
shll
pop
cmpsl
push
cwtl
push
push
insb
jno
movsb
mov
sub
mov
stos
stos
and
mov
repnz
or
mov
sbb
lret
dec
loopne
xchg
movsb
arpl
rcll
xor
mov
bound
mov
xlat
mov
rcll
test
pop
jno
iret
push
lods
arpl
fsubrs
pop
insl
xchg
adc
push
mov
xor
dec
and
push
gs
push
loop
dec
jb
int
hlt
sbb
sub
rcrl
xor
jo
inc
nop
mov
fisttps
scas
repnz
outsb
mov
push
lock
repnz
lods
stc
outsl
push
dec
sub
push
sub
xor
jecxz
rcrl
jecxz
jnp
fildl
xchg
mov
pop
insb
ss
das
fdivl
push
fbstp
pop
lock
mov
jmp
xchg
dec
cmp
inc
int
subb
sbbb
cltd
fidivrl
ret
or
xor
aaa
aam
shrb
sub
xor
incl
stos
lret
movsl
arpl
dec
in
cmpsl
push
lret
lods
jle
int3
push
push
lea
mov
jo
mov
lods
je
lcall
addl
iret
in
cmp
xchg
and
jo
push
mov
outsb
lret
sahf
imul
xchg
movsl
lea
aaa
call
lret
imul
in
outsb
shlb
es
xchg
adc
mov
int3
imul
push
push
push
inc
mov
dec
and
out
add
and
jg
jo
repnz
sbb
mov
sti
sub
fiaddl
inc
push
push
roll
dec
pop
pop
jb
mov
fcmovne
inc
jle
addr16
pop
and
je
sbb
iret
pop
inc
scas
mov
fldcw
aas
or
jmp
lret
add
pushf
in
mov
jne
jb
xor
in
arpl
xchg
fidivl
adc
pushf
mov
scas
mov
lods
dec
xlat
or
push
mov
mov
xchg
out
add
pop
cmpsl
ljmp
insl
nop
push
aam
cltd
dec
mov
out
call
js
jbe
les
xlat
cld
and
mov
cmp
loop
mov
xor
data16
dec
aam
or
insb
out
mov
or
cmp
insb
adc
mov
mov
xor
xor
insl
test
mov
repnz
mov
cs
dec
lods
std
lahf
sti
pop
pop
jl
leave
mov
into
subb
mov
or
inc
sbb
push
jno
sbb
les
xchg
push
dec
lds
mov
enter
push
mov
push
movsb
mov
std
mov
push
je
pop
and
es
in
movsl
inc
xchg
imul
in
addr16
fidivrs
mov
xor
popa
dec
mov
mov
fisubs
inc
aas
ljmp
fisubl
inc
add
test
pop
mov
cs
arpl
fisttpl
test
and
sub
repz
ds
je
mov
pop
xchg
pusha
xor
into
push
jecxz
int
or
imul
mov
dec
ret
in
adc
daa
push
push
push
pop
mov
sti
lcall
addr16
push
es
ds
adc
es
hlt
daa
insb
cwtl
cmp
fimull
sub
push
pop
xor
mov
xor
insb
into
and
repnz
cmp
cli
bnd
adc
lods
or
jo
cs
pusha
mov
push
jb
jae
imul
arpl
xor
lret
inc
inc
hlt
jl
mov
jge
int3
movsl
cmp
push
mov
test
imul
dec
lock
lock
insb
ffreep
daa
or
in
sbb
movsb
scas
cs
orl
fisttpll
aaa
lods
shlb
cli
inc
outsl
pop
mov
xor
pop
jmp
js
daa
cwtl
andl
jle
push
mov
mov
push
imul
inc
jmp
sub
repz
movsb
mov
jg
push
sbb
lahf
dec
push
imul
pop
les
cmp
repnz
jae
fsubp
mov
mov
lret
sub
dec
loope
scas
sti
test
sbb
lds
and
lods
js
test
test
dec
xchg
enter
push
mov
push
jecxz
daa
jb
addb
leave
lahf
in
jo
test
dec
jns
popa
pop
mov
cld
xchg
outsb
out
es
in
lods
cmp
jnp
icebp
in
jg
mov
add
into
inc
or
xlat
cmc
or
adcl
sbb
dec
rcll
rolb
out
es
xchg
lea
imul
divb
pop
enter
pushf
mov
dec
into
xor
mov
fstpl
jb
xlat
movsl
push
negl
repz
and
mov
insb
inc
xor
push
imul
test
lock
jg
outsb
sub
loopne
rcrl
xchg
out
cltd
ja
sbbb
adc
push
xchg
test
push
and
adc
jg
lds
pop
lea
int3
imul
jbe
jecxz
cltd
aaa
nop
mov
stos
into
loope
subl
sbbl
mov
cmp
push
ljmp
mov
lcall
enter
add
mov
xchg
fmuls
sub
pusha
cmp
out
cmpsl
fcoml
out
cmpsb
cmc
aad
add
js
scas
test
icebp
add
add
and
push
fmull
push
andl
adcb
mov
imul
adc
or
fsubrs
fs
lods
mov
push
ljmp
es
push
in
pushf
insl
jge
mov
lahf
imul
pushl
fnstsw
xor
jns
mov
rcll
cmp
xchg
loop
jne
mov
aaa
repnz
js
cmp
aas
dec
dec
xor
dec
leave
add
add
cwtl
inc
stos
mov
xchg
out
and
inc
or
rclb
sbb
lret
cld
inc
jbe
inc
jecxz
and
push
mov
xchg
xlat
lret
mov
mov
ret
xchg
xor
pop
test
pop
sub
das
pop
ds
push
jae
pop
ss
mov
shl
js
mov
push
xor
dec
dec
aaa
icebp
add
push
cmc
jle
loopne
movsl
add
and
into
mov
cmc
test
jp
push
rcrl
bound
pop
lods
xchg
cmp
andl
push
enter
js,pn
jmp
or
stc
and
loopne
test
and
loope
call
cmpsb
ficomps
mov
push
in
add
and
shll
jne
icebp
pop
stc
cld
lret
mov
test
pop
xchg
or
cli
sbb
stos
jae
in
sbb
mov
mov
adc
jae
xor
stos
ljmp
mov
mov
data16
out
push
inc
pop
mov
xchg
arpl
pop
adc
test
jp
mov
rorb
xor
fldt
dec
std
mov
lock
push
pop
ss
or
sti
stc
mov
jmp
jns
xchg
dec
lock
outsl
xor
lods
sarb
jle
jns
cmp
das
add
ja
adc
adc
cwtl
pop
outsl
dec
jecxz
add
push
fwait
jns
mov
inc
or
pop
inc
mov
lret
mov
and
xchg
rcll
movsb
imul
push
repnz
pop
arpl
add
lods
pop
xor
or
fwait
pop
std
cmp
cltd
nop
pop
js
pop
and
add
pop
std
lahf
push
xchg
mov
adc
imul
test
cli
push
push
sahf
lods
adc
push
jb
xor
inc
sub
xchg
int3
sub
outsl
mov
test
mov
cs
std
ljmp
out
pop
in
xchg
call
add
shl
fs
or
jae
jo
out
pop
mov
nop
pop
in
in
xor
xor
add
pop
and
in
cld
lahf
sahf
movsl
sbb
mov
inc
movsb
cwtl
rcrl
xchg
imul
loop
adc
xchg
std
xor
adc
pop
lret
loop
push
and
jns
mov
test
cmc
dec
push
rcrl
psubsw
cwtl
add
pop
divb
lea
scas
movsb
sub
lods
dec
call
jae
pop
insb
jno
or
push
pushl
inc
repz
or
nop
add
test
loop
outsb
or
cmp
mov
andb
outsl
imul
orl
pop
jbe
jmp
add
jae
aam
sub
jl
fnstenv
shl
xchg
mov
decl
cltd
negl
pop
mov
add
mov
mov
aaa
addl
sub
loope
nop
add
pop
fcompl
add
sub
and
aam
jg
mov
add
jb
test
cmpsb
in
pop
inc
fistpl
into
mov
sub
orb
leave
or
inc
int
enter
adc
and
push
jnp
into
mov
roll
xor
add
adc
push
adc
sub
xchg
and
cmp
cmp
loopne
lret
outsb
ja
push
sti
mov
jnp
xchg
aas
leave
invd
into
jmp
add
or
fists
outsl
jp
imul
adc
inc
dec
bound
push
mov
cld
fists
testb
test
sbb
push
clc
outsb
jb
mov
movb
or
fwait
movsl
lcall
cmpsl
dec
imul
dec
outsb
push
lret
jae
dec
jne
pop
mov
mov
mov
ja
hlt
push
insl
sarl
add
push
notb
sub
push
je
sub
out
mov
fmul
mov
aaa
inc
inc
sub
into
ja
fs
testl
pop
or
test
aas
in
sbb
leave
push
enter
cltd
sbb
sub
push
stos
lods
cmp
gs
push
int
pop
scas
push
jmp
or
hlt
filds
pop
jno
xlat
aam
fincstp
jo
and
cmp
stc
cs
sbb
and
mov
and
nop
in
cmpsb
dec
loopne
dec
xlat
mov
mov
shll
cwtl
sbbl
rolb
ret
test
mov
fistpll
mov
pop
pop
push
cld
les
mov
sub
cmp
dec
scas
popa
inc
arpl
fdiv
add
xchg
call
add
and
pop
mov
xchg
jno
or
adc
pushf
rol
jmp
xchg
sbb
fs
hlt
filds
movsb
ss
andb
das
mov
dec
add
fistl
and
and
mov
in
shrb
cli
mov
cmp
cmp
sbb
inc
mov
ljmp
push
xchg
lods
pop
loop
rcl
sbb
mov
aas
test
dec
loop
xchg
cwtl
rcrl
sub
lcall
push
mov
push
sbb
pop
cld
lods
xchg
out
sarl
adc
fldenv
xchg
stc
adc
add
ss
mov
fwait
cmpb
and
xor
fcoms
fcoml
or
sub
cmpsb
jnp
cwtl
outsl
mov
add
fsub
pop
and
std
int3
add
add
sti
xchg
jl
les
sub
add
movsl
aam
xchg
adc
std
ljmp
les
dec
xchg
cmp
adc
xchg
andb
fsubrl
mov
sub
cwtl
sbb
aam
sahf
mov
inc
xchg
jl
mov
mov
add
mov
call
pop
aam
bsr
adc
dec
data16
push
mov
xchg
cmp
push
repz
jmp
jb
xchg
mov
push
xchg
clc
mov
jne
push
push
jle
or
outsb
jae
movsl
mov
clc
cwtl
xchg
mov
sub
xor
aaa
jge
outsb
scas
sarl
nop
dec
xlat
sbb
inc
add
inc
mov
adc
cmp
fmuls
or
in
adc
lcall
test
and
test
cltd
xor
or
jp
ss
popa
clc
fiaddl
cmp
in
aaa
gs
push
mov
adc
inc
cmc
pop
mov
xor
mov
jbe
add
xchg
adc
dec
rcll
add
ss
pop
inc
xor
sti
ret
clc
inc
xchg
lds
xchg
movsb
out
push
lock
sahf
adc
cwtl
popa
adcl
adc
dec
adc
cmp
cltd
jmp
aaa
xor
sbb
inc
lcall
mov
stos
iret
mov
and
popa
jae
push
add
mov
xchg
mov
lock
add
aad
inc
jge
insb
add
or
int3
xor
and
das
pop
std
inc
lods
sarb
mov
add
cmpsl
push
pushf
add
sysret
es
dec
xchg
int3
sbb
cmp
jo
inc
lcall
xor
xor
loope
or
out
fistl
xor
dec
mov
bound
or
add
shlb
jl
das
pop
xlat
add
loope
in
jg
add
push
cli
out
pusha
and
mov
sbb
mov
jo
fbld
gs
xchg
mov
sub
jno
sti
lds
jg
dec
lock
mov
mov
in
pop
repz
pusha
and
loope
sub
jne
or
fistl
add
repz
enter
test
andl
push
lret
insl
cmovb
add
mov
mov
addr16
ret
jle
scas
push
and
popa
cltd
iret
or
jp
adc
lcall
sub
xor
divl
aam
pop
lds
add
push
inc
sub
sbb
xorl
push
sub
rcrb
jmp
xchg
xor
scas
loope
pop
jne
pop
or
movsb
je
test
fadd
push
ret
adc
jo
xor
mov
imul
insl
inc
mov
xchg
loop
shll
loope
in
andb
scas
cwtl
shrb
les
addl
cs
out
jmp
xchg
int
dec
xor
jecxz
stos
adc
push
sub
lret
repz
jns
lahf
dec
sub
or
inc
mov
xchg
cwtl
shl
xchg
cmc
insl
sti
add
or
add
mov
sbb
jbe
scas
dec
jo
enter
push
cld
xchg
mov
nop
lret
outsb
xchg
xlat
pop
jmp
ret
rorl
mov
test
mov
mov
mov
push
repnz
aas
or
cmp
add
lods
jmpw
imul
out
dec
sbb
sub
lcall
sub
fwait
addr16
dec
out
mov
sahf
loopne
je
cmp
jo
add
out
dec
int3
sub
push
test
jb
data16
mov
dec
lea
mov
scas
ljmp
xor
fwait
gs
sub
fs
inc
dec
cmpsl
mov
xchg
notb
fwait
jns
lret
mov
jp
adc
pop
cmp
popa
inc
bound
mov
xorl
sbb
jno
andb
sub
and
dec
imulb
sbb
cmp
jge
daa
cwtl
push
jle
fcmovnb
jge
mov
push
pop
andb
icebp
test
xchg
mov
aad
and
xchg
je
xor
cmc
sub
inc
aaa
dec
ret
imul
xor
or
jns
cvttps2pi
in
iret
sbb
pop
or
sub
add
add
orb
imul
inc
xchg
and
xchg
gs
add
adc
xor
into
sub
add
popa
or
hlt
inc
or
fisubl
xor
std
jns
or
mov
xor
or
cmp
fbld
sub
and
push
jns
loopne
stos
jge
sub
lret
jg
jecxz
es
xchg
std
stc
aas
je
fdivrs
or
adcb
jge
adc
int
jb
out
xchg
xchg
sbbb
mov
scas
push
imul
leave
pop
xchg
test
cmp
popa
lahf
pusha
inc
jp
and
sbb
mov
ss
mov
lret
inc
sub
scas
xchg
stc
jmp
lds
mov
test
std
push
iret
jl
push
stos
mov
pusha
push
out
mov
push
add
arpl
sbb
mov
dec
sub
jl
push
movsl
out
in
cmp
cmc
fisttps
outsl
jne
dec
aaa
xchg
pop
jb
test
mov
sbbl
movb
iret
sahf
sbb
in
test
jb
sbb
sub
inc
movsl
fldlg2
popa
int3
fadds
dec
xlat
add
fildll
mov
adc
ja
dec
clc
push
pop
mov
xor
ds
lods
fbstp
test
pop
xchg
push
scas
xchg
jp
je
dec
adc
push
stc
mov
mov
jg
sbb
cltd
sub
ja
push
mov
mov
sbb
sbb
push
clc
fnstenv
xchg
out
xchg
rcrb
int
sbb
sti
sub
imul
or
mov
inc
pop
push
scas
sarl
pushf
xor
fadd
or
sahf
dec
les
mov
movsb
js
in
add
mov
xchg
mov
out
adc
xchg
jbe
mov
mov
aam
xorl
and
xchg
or
mov
pop
or
inc
mull
jb
ja
bound
adc
in
sub
dec
push
xchg
movsb
dec
jns
loopne
ss
push
stos
aaa
mov
inc
out
out
int3
mov
inc
call
cmp
pop
sbb
fildl
into
xor
xchg
mov
cmp
sub
mov
cmpsl
icebp
fildl
dec
scas
int3
xchg
mov
jb
or
test
pusha
adc
mov
sbb
repnz
mov
pop
xchg
leave
sub
fs
lods
out
xchg
in
mov
cmp
outsb
jmp
xor
push
das
daa
dec
movb
pop
xor
mov
pushf
movups
sahf
or
popf
clc
push
insb
ficoms
adc
xor
out
sub
cmp
leave
shrl
mov
or
sbb
inc
pop
aad
nop
stos
movsb
lds
mov
add
pusha
and
xchg
int
jne
mov
xchg
inc
std
jns
iret
adc
adc
pop
rorb
idivb
dec
iret
rcr
in
adc
stos
insl
fldt
push
arpl
pushf
sbb
repz
scas
vpcmpgtw
xchg
dec
and
sub
sub
jae
outsl
dec
cmp
aad
sahf
test
cmp
xchg
enter
cmp
arpl
xchg
xor
rolb
adc
inc
pop
js
lret
sbb
mov
mov
pop
mov
out
mov
cmpsb
aas
or
aaa
aaa
lods
xchg
dec
sub
pop
dec
and
fstpl
stos
enter
pop
popf
pushf
aam
adc
cli
mov
jmp
mov
pop
adc
add
test
jne
sbb
bound
cmp
fwait
adc
stos
mov
or
int3
mov
mov
scas
push
out
push
add
xchg
movsl
movntdq
jp
push
jb
xor
xchg
fiaddl
ja
scas
jno
lock
stos
jge
push
xlat
mov
mov
loop
sar
je
sub
xchg
cmp
scas
mov
inc
jl
xchg
fs
arpl
dec
push
jnp
pop
and
js
jae
or
cmpsb
ja
loopne
mov
sub
mov
pop
add
xchg
repz
sub
mov
pusha
add
sub
bound
int3
ss
dec
aad
mov
push
bound
lock
mov
das
ja
cmpsl
jmp
inc
xchg
pop
push
push
and
mov
out
int3
xchg
xorl
pmuludq
mov
sbb
mov
cmp
sbb
push
iret
mov
ret
inc
out
fs
imul
stos
push
nop
test
mov
andl
hlt
out
icebp
inc
add
in
push
lret
insl
lcall
clc
inc
iret
mov
pop
loope
jb
cmc
and
addr16
cmp
cmpl
jno
cmp
sbb
test
mov
pop
sub
fidivs
fsubrs
push
outsb
test
mov
jle
xor
jecxz
xchg
adc
pop
add
pushf
jno
push
mov
cmp
inc
jnp
jmp
dec
cli
shrl
jmp
xlat
je
rcrb
jb
pop
adc
pop
in
test
leave
mov
scas
jnp
dec
jno
pop
mov
icebp
or
mov
dec
push
pop
sub
and
cmp
pop
das
sarl
dec
flds
stos
fadd
add
mov
jl
and
cmp
stos
xchg
int
dec
loopne
in
cli
push
imul
loope
pop
cmp
cmp
popf
pop
adc
popf
sub
cmp
xchg
mov
orb
xor
and
daa
ret
mov
mov
dec
aad
clc
or
in
enter
add
or
mov
jns
xor
leave
inc
push
iret
movsb
pop
mov
jae,pn
inc
sbb
cmpsb
jge
mov
cli
shll
gs
mov
sbb
sub
scas
mov
repnz
or
push
scas
sub
in
ffreep
mov
dec
dec
mov
pop
or
frstor
fsts
cld
add
push
fdivrs
rcr
fsts
cmp
insl
mov
in
jo
jmp
mov
or
test
cmp
push
aad
int
sbb
daa
std
adc
vandps
add
in
popf
sbb
mov
rcrb
imul
cld
jne
test
inc
xor
cmc
inc
daa
inc
test
out
addr16
adc
mov
push
dec
je
fldt
mov
enter
sarb
clc
sbb
loop
mov
je
cmpsb
and
cmp
or
pop
sbb
fidivs
in
dec
mov
push
xchg
js
lret
sub
xor
mov
sub
pop
je
lds
pop
sti
ret
mov
mov
cmpsb
lods
rclb
out
movsb
mov
jae
jae
cli
xchg
fldenv
ret
sbb
outsl
sbb
test
add
adc
inc
nop
cmp
adc
add
xor
or
cmpsb
add
rol
add
leave
pop
push
insl
mov
gs
xlat
rclb
repnz
out
push
aad
jae
mov
fidivl
jecxz
mov
data16
pop
sub
xchg
in
das
pop
sarl
cwtl
lods
fdiv
in
adc
ret
sub
pushf
add
pop
loope
sbb
les
aam
push
push
or
dec
ja
out
sbb
nop
push
mov
loopne
loopne,pt
dec
inc
icebp
push
stos
dec
mov
mov
es
or
jno
sub
adc
mov
sub
ljmp
sub
js
je
cltd
subb
mov
rcll
popf
das
sub
dec
inc
or
xor
in
and
out
insl
js
std
mov
inc
repz
sub
mov
lock
mov
jle
ss
outsb
lock
mov
sub
adc
or
aad
loopne
push
jg
sbb
lret
cmpb
pop
mov
xor
aam
push
arpl
jmp
jmp
ss
dec
adc
pop
and
fstpl
test
lret
fwait
cmp
lret
inc
jne
rorl
fwait
and
xor
adc
pop
cmp
cs
nop
adc
push
sub
loope
push
add
sbb
dec
test
int3
lods
adc
xchg
ljmp
push
int
daa
sti
mov
fdiv
hlt
cmc
sbb
das
jmp
sub
sbb
push
push
push
push
sub
movsb
jns
cmp
fldenv
rcrb
mov
inc
xchg
jae
sti
jmp
cmp
dec
jge
adc
test
jbe
addr16
pop
add
cltd
and
inc
inc
push
pop
mov
cwtl
push
jmp
nop
mov
adc
xchg
rclb
sbb
fildl
xlat
test
scas
repz
xor
push
out
outsl
arpl
iret
idivl
dec
in
xchg
data16
inc
xor
out
or
enter
adc
add
addl
push
mov
sub
fldenv
in
ja
pushf
mov
icebp
scas
popa
cmpsb
aaa
sbbl
out
cld
jg
test
xor
inc
push
sbbl
sub
and
xor
popf
aaa
sbb
inc
cmc
stos
inc
mov
push
dec
push
in
mov
lods
or
sub
xor
mov
or
push
idivl
aam
sub
sub
xor
movsb
fmull
mov
mov
fwait
cmp
sbb
pop
cmc
or
push
inc
lret
cltd
std
adc
push
push
aas
fcoms
and
repnz
movsl
fists
sbb
scas
imul
rol
into
adc
pop
fmull
sbb
call
sub
cmpsl
es
jb
popa
shrl
cmp
data16
test
jp
mov
pop
lcall
xchg
bound
lods
adc
push
jne
dec
fsubr
mov
xor
adc
icebp
push
dec
cmpsb
imul
sbb
push
xor
ljmp
testl
daa
mov
sbb
bound
fistps
cmpsl
adc
fs
xor
mov
dec
aam
ds
xor
pop
aad
inc
cmpsb
mov
shl
push
xor
sbb
push
sub
cmp
pushfw
push
adc
sub
mov
test
dec
lods
lds
and
cmp
jmp
in
repnz
std
or
ljmp
or
adc
shrl
and
out
bound
inc
add
clc
mov
jp
jnp
xchg
dec
jno
add
mov
cmp
adc
push
push
mov
push
sti
into
sbb
mov
dec
mov
dec
enter
dec
shrb
dec
testl
pop
or
rorb
mov
test
inc
dec
dec
out
push
ret
into
cmp
and
cmp
push
push
test
mov
xor
lea
shrl
idiv
dec
cmp
or
jl
push
sbb
in
jnp
xchg
loop
dec
cmp
leave
cmp
mov
pop
loop
addr16
cmpsl
fstl
aas
dec
popa
popf
mov
addb
mov
mov
and
and
jmp
mov
in
push
or
mov
gs
pop
push
add
mov
popf
das
push
sbb
pop
mov
cmpsb
fcomip
mov
dec
mov
icebp
push
xor
mov
out
mov
sbb
lds
out
call
test
or
insl
cmp
jge
iret
pop
test
fst
dec
cmp
scas
pop
add
xchg
in
loop
cltd
sarb
pop
fistpl
jno
xchg
test
sbb
dec
repnz
std
adcb
add
sub
push
std
lea
lret
xor
stos
push
mov
sub
mov
gs
dec
loopne
mov
into
jb
bound
pop
ret
mov
nop
daa
pop
push
mov
js
test
rcll
test
jp
xchg
and
test
call
imul
out
pop
out
add
mov
aas
insl
jle
lock
push
lea
jo
fs
cmp
and
adc
pop
ds
cli
stc
test
mov
sub
and
and
test
lods
and
inc
aaa
mov
adc
push
jecxz
mov
cmp
mov
movsb
lcall
jbe
in
ret
xchg
xor
rorl
enter
dec
jl
in
adc
into
test
add
or
loopne
dec
dec
call
movsl
mov
fdivrs
sbb
cld
push
inc
int3
in
add
or
fcmovbe
mov
mov
sub
icebp
xlat
adc
or
loopne
jge
jmp
lret
shll
and
cmovp
xor
ss
jge
push
xchg
pushl
adc
ss
imull
stos
sub
pop
ds
cli
hlt
fadds
push
xchg
mov
pop
inc
mov
in
and
jno
arpl
or
push
add
add
xchg
jecxz
daa
push
fisubs
push
pop
mov
push
xchg
adc
div
hlt
xor
repz
adc
inc
mov
inc
iret
addr16
cmpsb
pop
scas
fstps
jmp
mov
shrb
xchg
adc
dec
sbb
add
sbb
sub
insl
xor
out
mov
push
daa
sub
cmp
test
pop
lock
fldenv
int
and
fwait
xlat
pop
fdivl
rol
mov
xor
sbbl
aam
inc
and
inc
movl
fildl
xor
inc
mov
xor
insl
jns
sti
in
psraw
push
pushl
sbb
inc
or
dec
or
adcb
popf
sbb
mov
iret
aam
xor
rcl
xchg
pusha
mov
ret
hlt
adc
rolb
push
aaa
jno
dec
cli
cmp
mov
mulb
or
hlt
fdivrs
or
cmp
addr16
adc
jle
rclb
sbb
sub
fldenv
andb
jmp
out
jae
and
xchg
stos
hlt
mov
outsl
test
jnp
xchg
lret
xchg
mov
dec
sbb
fcom
mov
sub
subl
jb
clc
sub
xor
imul
sbb
pop
dec
repz
lock
dec
shl
repz
jl
mov
or
mov
pop
sbb
mov
pop
jo
jecxz
repz
adc
outsb
roll
inc
js
ljmp
sti
push
dec
add
xchg
leave
insl
mulb
jle
in
lds
xor
fiadds
dec
sub
mov
sbb
adc
fcoms
mov
imul
or
fs
cs
sbb
jo
xorb
add
and
mov
gs
lea
mov
out
shrb
mov
pop
xor
sub
sbb
fnstsw
negl
mov
lcall
push
imul
add
push
mov
sub
cmpsl
mov
sbb
cltd
pop
jmp
mov
scas
into
sti
es
scas
cmpsb
andb
dec
icebp
ds
mov
lret
cld
mov
movsl
mov
mov
sti
mul
jge
and
mov
jb
xor
loopne
or
pusha
jne
adc
cld
sub
add
je
mov
daa
jbe
inc
aam
ret
lcall
pop
hlt
xchg
mov
int3
popa
cmp
incb
popa
testb
or
cmp
dec
xchg
inc
aaa
decb
popa
mov
lock
fidivs
test
ljmp
mov
sbb
mov
adc
mov
push
cmp
popa
setae
fdivs
in
cmp
mov
and
mov
cmp
mov
out
xchg
xchg
divb
outsl
mov
repz
imul
lret
push
test
pop
pusha
xchg
dec
pop
lcall
mov
jecxz
mov
outsb
mov
push
or
lods
add
jp
xchg
jns
mov
sbb
mov
jmp
xchg
xor
push
sub
dec
gs
add
and
mov
sub
stc
call
aaa
inc
jns
mov
xlat
testl
cmp
cmp
push
popa
ss
movsl
cmp
lret
push
fdivl
sbb
aaa
adcb
or
and
outsb
mov
stc
mov
and
mov
pop
out
cmp
sahf
cmp
cmpsl
popa
arpl
xchg
pop
add
outsl
je
jmp
hlt
out
or
sub
jge
or
stos
fs
test
clc
stc
negl
add
nop
insl
jo
mov
fldenv
push
adc
pop
and
xorb
rorb
and
stos
xor
xchg
push
cmc
add
jg
mov
sbb
adc
daa
xchg
insb
aas
mov
stos
cltd
cmp
daa
loope
nop
cmc
mov
xchg
mov
and
popf
leave
addr16
ret
jbe
sub
js
and
xor
shll
repz
sbbl
sbb
xchg
sbb
jbe
ret
fisubrl
pop
mov
xchg
cmp
in
push
jp
mov
jl
rcll
fidivs
std
in
andb
mov
or
leave
add
lahf
push
adc
fisttpll
fisttpll
cmp
mov
xchg
push
push
push
ds
test
or
dec
sub
repnz
fsubrl
inc
loop
in
push
stos
scas
pop
jp
dec
mov
adc
mov
dec
fst
je
aam
test
pop
test
pop
lcall
mov
pop
aad
sbb
xlat
lods
clc
rcrl
push
adc
sbb
aas
fwait
mov
hlt
nop
mov
push
jp
loopne
std
cltd
test
mov
cmp
mov
mov
jmp
cmpsb
aam
adc
adc
cmp
testb
shll
daa
xor
lahf
sbb
inc
inc
dec
adc
lds
rorl
in
or
jb
lock
cs
jns
cltd
out
mov
frstor
pop
push
lcall
clc
loop
mov
out
ljmp
sahf
mov
mov
fbld
lcall
inc
call
call
xchg
and
les
inc
pop
jl
or
pop
push
xor
ret
xchg
push
in
movsl
jo
out
stos
sbb
xchg
mov
outsb
fstp
cmp
fwait
pop
popa
cmp
or
in
xor
in
lcall
dec
xor
lock
je
js
inc
icebp
mov
cmp
shll
inc
cmp
and
enter
cmc
inc
push
sti
xlat
pop
movsl
sub
push
cs
sbb
pop
fs
ljmp
hlt
inc
test
push
popf
jmp
daa
xchg
outsl
fnstsw
or
sbb
repz
sbb
xchg
pusha
rolb
clc
pop
jae
push
push
mov
bound
mov
sbbl
sti
sarb
sbb
add
stos
dec
int
out
out
sahf
pop
sbb
and
nop
push
mov
cmp
inc
sub
icebp
mov
pop
cmpsl
and
sbb
mov
mull
fdivs
push
mov
xchg
fwait
call
ja
adc
push
pop
and
xor
xchg
in
movsb
mov
fcompl
xor
inc
mov
adc
cwtl
xchg
jge
rcll
out
daa
fwait
aad
cmc
shl
inc
cmp
dec
js
add
bound
mov
movsb
push
push
aad
cmp
sahf
adc
test
push
pop
jae,pt
jmp
mov
mov
cmp
jl
xchg
push
xlat
inc
cs
ja
je
aad
push
mov
push
adc
mov
push
popa
addr16
cmpsb
jo
mov
dec
push
push
push
jo
push
inc
jns
jmp
mov
sti
mov
mov
and
jnp
sub
push
push
hlt
mov
cli
push
aaa
cmp
lret
jae
mov
pop
gs
push
xorb
lea
xlat
icebp
testl
sub
loope
jne
and
frstor
setge
data16
repnz
jp
repnz
insb
or
pop
je
and
mov
sub
jae
sarb
jmp
or
xlat
xor
push
mov
sti
bound
outsl
aad
sub
mov
sahf
or
ret
pop
inc
jmp
jns
xlat
xor
and
in
cs
push
jl
pop
mov
jle
in
pop
pop
shlb
and
lock
mov
addl
push
and
push
or
out
add
mov
lea
push
movsb
inc
cmp
stos
in
xor
cmc
pop
sbb
push
or
xor
pop
cltd
pop
sbb
push
and
push
push
dec
dec
mov
mov
xchg
jae
test
xor
leave
push
mov
cwtl
and
dec
aad
cld
insl
fisubrs
cmc
mov
sbb
out
xchg
pmuludq
leave
sarl
mov
hlt
pop
push
inc
adc
jne
es
fwait
ret
push
adc
cwtl
or
pop
fiaddl
shrb
jne
xlat
into
notl
and
xchg
push
sbb
pop
jae
insb
mull
push
aam
xchg
inc
mov
mov
and
sahf
cmc
push
pop
dec
or
xor
xchg
pop
mov
repz
jns
and
lret
xor
mov
jp
or
paddq
pop
daa
xor
into
xchg
mov
xchg
std
lret
mov
mov
rol
in
xchg
sahf
jle
lret
fisubl
jmp
and
test
outsl
jbe
adc
movsl
lods
aad
dec
in
push
pop
dec
data16
dec
subl
scas
cmp
cltd
stos
fchs
jecxz
inc
adcb
dec
adc
shll
xchg
daa
adc
mov
mov
cmp
push
cmc
or
stos
or
xchg
mov
xchg
lods
add
cmp
dec
decb
push
loope
negl
and
inc
cmp
int
push
dec
xorl
mov
xchg
pop
cwtl
es
pop
mov
insb
pop
and
bound
xchg
enter
fldl
cmp
inc
bound
pop
mov
out
and
mov
popf
andb
loope
dec
add
repz
jle
mov
cmc
adc
jp
lock
inc
lock
fs
sub
out
fwait
jp
sar
push
cmp
icebp
outsb
daa
mov
stos
lods
fsubrp
lret
or
xchg
xchg
push
sbb
and
int
addb
push
push
sahf
lea
inc
lods
jb
jnp
and
push
sub
in
pop
mov
push
mov
jnp
test
jns
cmc
sbb
mov
lods
jmp
cltd
sub
aad
scas
into
pop
add
or
mov
jnp
xchg
push
out
pop
pop
je
cmp
popf
pop
dec
enter
sub
mov
push
jb
imul
mov
xorb
pop
stos
jle
add
insl
push
loope
rcll
adc
repz
or
jns
cmp
xor
lds
or
pop
cmp
cmc
and
xor
inc
lret
push
orl
lods
sub
push
lock
fstpt
hlt
cmp
or
cmp
enter
and
cmp
out
or
sti
push
sbb
jno
mov
inc
leave
ss
sub
sbb
inc
mov
sub
sbb
mov
push
adcl
popf
inc
mov
lock
or
inc
mov
or
xor
jo
lods
xchg
mov
stos
ret
test
leave
jbe
sbb
mov
dec
out
out
and
mov
cmp
add
adc
in
cltd
mulb
scas
cs
or
or
pop
mov
push
test
mov
rorb
out
cmp
sub
mov
xor
adc
mov
inc
sbb
test
gs
sub
xchg
clc
mov
xchg
stc
push
jle
inc
sub
inc
xchg
sub
jmp
dec
daa
addr16
pop
sbb
and
or
notb
mov
leave
ret
ds
xor
or
out
or
jnp
jae
jnp
jae
or
pushf
test
adc
pushf
testb
aad
add
push
push
sub
movsl
fisubrl
aad
idivl
pop
pop
mov
out
push
rorb
add
jbe
lds
mov
push
js
in
pop
inc
jge
dec
ds
sbbb
iret
fadd
sbb
xor
mov
divb
xchg
and
lods
mov
mov
call
inc
xor
shlb
sub
inc
adc
jb
in
sub
cwtl
rorb
pushf
sub
jns
jb
icebp
fwait
push
pop
xchg
loopne
inc
lods
jmp
fadds
jle
sbb
or
fisubl
bound
rolb
add
lret
cs
addr16
sub
sarb
xchg
lahf
xchg
add
loop
incb
lods
inc
stc
cmp
inc
ret
cwtl
into
xchg
in
xor
nop
and
fmulp
movsb
test
hlt
sub
jo
and
inc
push
xor
ret
stc
mov
lock
adc
es
aam
xor
sbb
cmp
shll
adc
cmc
fwait
jecxz
je
pusha
pushf
into
mov
lcall
fmull
cld
xchg
jno
xchg
ljmp
hlt
cmpl
fldt
rorb
fdivl
sbb
aas
fisubrs
fs
sbb
sub
jne
ljmp
cwtl
aaa
jg
popa
sbb
shll
and
les
mov
xor
sbb
adc
lods
cmpl
test
mov
out
mov
fwait
mov
pushf
cmp
mov
and
xchg
and
push
bt
dec
cmp
ss
dec
inc
sub
mov
mov
movsb
mov
xorl
add
pop
sub
stc
fiaddl
iret
xor
mov
ret
pushf
xchg
fcmovbe
lea
mov
pushf
or
shld
mov
hlt
int3
in
mov
adc
shrb
cmp
jge
jle
inc
dec
lahf
adc
mov
in
hlt
push
lret
dec
xchg
in
push
out
call
bound
andb
scas
mov
mov
jbe
outsb
call
push
dec
push
test
jge
test
push
mov
repz
into
and
or
shll
fwait
dec
js
out
xor
mov
push
cmp
ss
pushf
push
sbb
mov
sub
ret
add
mov
mov
push
scas
cmp
leave
pop
mov
jp
sbb
or
jg
sub
push
stc
fdivl
xchg
stos
mov
mov
mov
mov
dec
ss
xchg
rcl
or
adc
jp
xor
or
adc
jb
scas
fmul
adcb
mov
mov
mov
push
rcll
and
sbb
call
mov
fadd
and
sbb
sub
cltd
movsl
dec
arpl
push
lahf
into
cli
adc
lcall
scas
stos
jp
mov
xchg
pop
aad
je
cmp
fisttps
add
push
push
pop
push
shr
fdivrl
and
out
lea
cmp
push
mov
sub
inc
les
xor
or
ret
add
arpl
ja
rcl
mov
pop
in
aam
jo
neg
inc
movsl
aaa
jae
subb
out
sbb
arpl
sub
pop
sbb
cmc
loop
jp
adc
in
out
addr16
arpl
dec
loopne
mov
arpl
inc
cwtl
cmpsb
cmp
jle
outsb
pushf
jne
pop
ret
adcl
xchg
push
inc
xor
jmp
xlat
jecxz
xchg
lcall
loope
or
int
lahf
mov
mov
dec
das
pop
aad
stc
jmp
or
mov
push
and
add
loope
sbb
mov
xchg
mov
xor
xor
add
dec
and
andl
das
out
shll
fsubrs
test
dec
mov
jnp
fiaddl
and
out
pop
cld
push
cmpsl
mov
shll
mov
clc
fwait
into
mov
in
push
sbb
inc
adc
inc
cmpsl
jmp
push
mov
jle,pt
stos
nop
inc
in
push
int
lods
out
xchg
in
cs
aaa
mov
inc
pop
ret
xor
or
xor
jns
mov
jno
fmul
push
sbb
enter
ror
addr16
mov
mov
dec
pop
inc
ss
addl
pop
popa
inc
arpl
push
or
sar
inc
xor
sub
fsubl
out
cmp
repnz
push
mov
std
xor
mov
imul
test
ja
mov
sbb
jle
lahf
in
mov
lods
jb
push
xchg
int3
pushf
xor
adcl
mov
xchg
es
loope
xor
or
fbstp
sbb
xor
cmp
ss
insl
xor
cltd
mov
ja
jo
sub
push
sbb
cwtl
push
lea
out
sti
cltd
add
lock
cmp
outsl
mov
lods
aad
lret
pop
imul
jo
pop
pop
dec
sub
pop
das
push
lret
repnz
jge
xchg
test
add
mov
and
add
ljmp
negb
cmp
push
sbbb
int3
xor
stos
in
mov
mov
xor
push
int
test
dec
jo
or
mov
inc
mov
or
mov
pushf
lods
adc
jbe
add
jns
xchg
dec
add
repz
rcll
adc
repz
in
mov
jmp
sbb
lods
mov
xchg
shll
ljmp
xor
mov
lret
mov
lahf
ficomps
loopne
outsl
mov
daa
adcl
cld
cmp
das
icebp
inc
lcall
mov
inc
mov
loop
iret
push
mov
insl
jnp
dec
jge
sub
pop
add
adc
cmpsb
loop
inc
and
mov
jg
push
fucomi
pop
sub
es
cmp
mov
dec
adc
xchg
enter
jns
nop
mov
inc
jle
cmpsb
int
push
data16
test
movsb
cmpb
push
aad
sbb
xchg
les
mov
cmp
sar
sahf
mov
mov
add
cmc
lret
rclb
filds
xchg
xchg
jns
mov
fisubrl
leave
push
pop
push
adc
outsb
push
enter
in
add
add
rcl
push
or
or
iret
fsts
mov
dec
adc
das
cmc
in
mov
rcrl
sbb
sub
xchg
add
cmpsb
test
push
ret
dec
cld
stos
cmp
das
popa
xchg
dec
mov
fisubl
insb
jnp
jge
push
fcoms
and
enter
mov
roll
push
ret
stos
outsl
cmp
inc
out
in
cmp
fisttps
int
push
into
test
and
sbb
adc
in
stos
push
mov
inc
dec
jp
mov
sarb
mov
add
adc
je
adc
aaa
inc
std
mov
aaa
add
xor
inc
and
mov
inc
and
aas
cli
sbb
mov
add
mov
int3
sub
fwait
call
xchg
mov
and
lahf
fstps
loope
jb
in
arpl
pop
mov
aad
xor
mov
or
push
inc
hlt
mov
cmpsb
push
mov
icebp
ja
xlat
rcll
push
mov
mov
std
inc
clc
mov
push
cmpsl
mov
mov
cs
push
aad
mov
or
xlat
push
iret
leave
into
sbb
rcl
sub
sbb
cmp
cltd
outsl
test
or
push
mov
jb
lock
or
jp
lcall
jmp
shr
or
add
in
jo
cwtl
xchg
and
fs
mov
out
xchg
enter
push
inc
leave
jmp
sbb
popf
lods
lcall
dec
outsl
shlb
push
pop
rorl
jne
mov
sub
jo
bound
das
cmc
int3
daa
js
lock
ja
std
mov
inc
sarb
push
std
stos
mov
sub
popa
sar
and
cltd
pop
dec
adc
xchg
xchg
rolb
scas
mov
jnp
dec
shll
adc
into
mov
cmp
and
testb
pop
jge
mov
aad
movsb
xchg
cwtl
xchg
jl
jle
pop
jno
dec
adc
push
inc
mov
lahf
pop
ss
xchg
fdivr
outsw
outsb
push
lret
lret
pminsw
and
jno
adc
loop
add
int
stc
rcrl
enter
rcrl
rolb
sbb
jo
in
sbb
aas
out
in
pop
and
push
je,pn
ljmp
std
test
or
jp
sub
js
aam
dec
fisubrl
adc
lahf
scas
andb
jae
adc
out
sbb
aas
add
das
xor
pop
pop
ret
add
inc
adc
sub
fstps
push
mov
sub
push
push
dec
dec
mov
cmc
mov
pop
adc
insl
and
sub
cmpsb
fildll
sbb
sbb
mov
js
jp
push
or
adc
int3
pop
cmp
daa
loop
inc
mov
cmp
xchg
insl
sbb
xlat
push
mov
lret
mov
repnz
sub
out
sub
xor
mov
push
mov
cmp
or
movsb
in
adc
inc
scas
loop
mov
mov
push
cmp
scas
push
lods
sub
mov
pop
mov
sub
push
push
leave
or
dec
daa
iret
dec
cmp
in
and
ds
cmp
jnp
mov
dec
stos
add
fimuls
int
inc
addr16
stc
mov
mov
adc
inc
lea
repnz
popa
dec
pop
les
sbb
or
pusha
clc
sbb
xor
sub
add
pop
sbb
jg
std
test
and
out
mov
push
lret
lods
sub
mov
mov
mov
mov
les
jo
mov
dec
adc
cmp
or
cmp
xchg
stos
sbb
movsl
in
lret
lret
jb
nop
add
movb
xor
jb
jp
sub
mov
cli
and
stos
lcall
mov
inc
inc
xchg
aas
add
mov
js
or
mov
fldcw
scas
mov
cmpsb
push
jno
loop
js
xor
dec
inc
and
mov
or
or
pop
xor
mov
pop
and
test
adc
repnz
dec
js
mov
mov
push
xchg
xor
mov
mov
adc
outsb
jne
ret
lods
dec
loope
cmp
cld
adc
push
adc
push
aad
js
jbe
rcrl
jne
lods
outsl
mov
enter
mov
or
fistl
inc
outsl
insl
andb
out
mov
xor
loope
xor
ss
inc
sub
add
xlat
stos
mov
andl
xchg
popa
pop
xor
in
clc
mov
repnz
mov
cmp
sbb
push
mov
add
sub
gs
testl
push
dec
rorb
cwtl
imul
add
push
daa
or
fisubrs
and
xchg
outsb
and
fwait
jne
repnz
inc
push
imul
jne
je
mov
sbb
mov
subl
add
and
arpl
push
xchg
jbe
jp
scas
mov
movsb
ds
testl
jmp
sbb
jmp
or
addr16
dec
sbb
dec
jle
aam
rcll
rol
fisttpl
jae
iret
dec
ss
dec
xchg
and
je
and
les
inc
lret
out
jbe
popa
mulb
test
pop
push
lods
rol
movb
pop
fbstp
cmp
cwtl
and
mov
mov
pop
dec
scas
jae
and
cmp
sub
int
fisubrl
sub
es
sbb
pop
popf
pop
jle
jb
jmp
into
lods
ret
lods
shll
push
mov
popf
xchg
ds
lods
adc
sub
ja
imul
mov
not
push
lcall
les
adc
inc
jb
sbbb
dec
test
cmp
loope
subb
mov
lcall
popf
xlat
fsubr
shll
je
rcll
mov
pushf
ret
mov
in
jae
adc
adcb
push
xlat
inc
push
sub
pop
in
lret
add
adc
sbb
js
ficoms
xlat
popf
hlt
or
mov
sbb
and
xlat
mov
and
mov
imul
arpl
in
shl
dec
scas
lcall
mov
mov
and
pop
or
push
inc
pop
adc
loope
ficompl
repz
sub
push
and
mov
mov
jns
ficomps
inc
inc
cmp
inc
rorl
mov
negl
in
hlt
and
loop
xchg
in
test
pop
add
inc
sbb
xor
inc
sub
test
lahf
pusha
sub
mov
mov
int3
notb
xchg
mov
popf
mov
cmc
fwait
sub
cmp
and
or
loope
sarl
jmp
adc
das
in
xor
into
imul
inc
push
pusha
xchg
xchg
dec
xchg
lock
pusha
mov
add
imul
dec
sub
in
sub
jmp
mov
ficoml
call
push
daa
mov
sub
cmp
lcall
dec
jle
je
addb
repz
jb
pop
xchg
rcrl
rolb
cmp
xor
cmp
jne
push
hlt
rcl
mov
xor
cltd
fstpt
ret
addr16
dec
and
leave
mov
imul
cmpl
pop
lret
push
fcoml
clc
test
cli
fmull
fisttps
repnz
subb
push
insl
lods
cmp
mov
push
mov
xchg
sub
sub
int
mov
ljmp
mov
jle
jae
loop
ret
sbb
pop
test
sbb
enter
repz
jecxz
push
push
add
jbe
mov
imulb
idivb
cld
leave
push
movsb
adc
adc
or
pop
ret
mov
out
out
fwait
mov
adc
sub
add
out
les
stos
push
mov
push
andl
pop
inc
lods
jecxz
jno
or
into
rorb
movsl
psrlq
aas
pushf
ss
dec
pop
xor
int3
sbb
jmp
xchg
xorb
negb
xchg
popf
je
jno
inc
aam
xor
pop
fsubs
sub
cmpsb
pop
icebp
mov
xchg
add
out
dec
cmc
aaa
icebp
adc
daa
fstpt
jp
sbb
in
xor
sbb
loope
mov
add
aad
scas
sub
scas
xchg
lcall
outsb
sahf
cmpl
lret
imul
xor
add
and
dec
mov
mov
out
and
mov
fmul
int3
cmc
pop
push
mov
mov
dec
push
xchg
cld
cmp
fcmove
xchg
fsubs
and
sbb
adcb
cwtl
and
mov
pop
test
mov
sbb
xchg
jp
cwtl
push
ss
imul
cli
push
xor
les
scas
repz
mov
push
test
add
mov
inc
cmc
push
or
shlb
dec
int3
rol
xchg
cltd
pop
push
shlb
fisubl
or
cmp
push
ret
imul
aad
int3
outsb
push
mov
in
jecxz
xor
sub
cli
scas
popa
mov
sub
and
and
cs
push
movsb
negl
ds
inc
sahf
std
jmp
insb
aaa
aam
xlat
lcall
iret
mov
das
jp
cmp
popa
sub
in
lods
sahf
jb
mov
cmpsb
ret
push
test
sub
inc
adcb
fsubrl
sahf
dec
adc
enter
or
dec
stos
pop
loope
pop
jmp
xchg
xor
xchg
loope
mov
int3
mov
mov
movl
cwtl
scas
cli
and
mov
sub
cmpsl
jae
push
das
pop
sbb
mov
jle
rorl
xor
sub
and
pusha
add
xor
fstl
aas
mov
ja
inc
imul
xchg
or
mov
mov
cmp
rolb
adc
pop
je
fisubl
pop
call
cmp
leave
xor
jnp
and
xchg
fisttpll
inc
je
inc
or
mov
cwtl
jo
cmp
mov
dec
lods
xor
js
mov
push
push
pop
std
xchg
rol
push
adc
sub
imul
push
lds
scas
xchg
pop
mov
add
fwait
inc
lea
push
mov
sub
outsl
enter
cli
inc
and
fisubrs
and
sub
jge
sbb
push
nop
pop
lahf
jns
lods
and
pop
aaa
out
icebp
pop
scas
lret
mov
shll
stc
sbb
jecxz
scas
loop
xor
enter
pop
icebp
xor
or
xor
or
sub
mov
push
cmpsb
xchg
repz
stos
mov
subb
testl
mov
xor
or
les
push
push
mov
adc
mov
xchg
xor
and
ss
add
or
mov
add
adc
and
loop
fs
int
loope
clc
cmpsl
dec
jnp
fs
imul
xor
jge
cmp
add
pop
sub
imul
cmp
pop
pushf
pushf
in
cltd
jb
loop
mov
adc
mov
iret
arpl
int
add
cmp
imul
mov
cwtl
sub
fs
mov
inc
icebp
adc
rcrl
jmp
mov
insl
js
movb
loope
and
fildll
inc
cmpsl
push
inc
out
xchg
jge
cli
dec
adc
sbb
repz
lret
test
popa
or
add
sub
xor
add
je
push
push
sbb
jb
lcall
hlt
cltd
arpl
clc
and
imul
push
sbb
in
add
xchg
xor
adc
xlat
push
mov
sbb
ror
mov
in
and
mov
jo
dec
jo
mov
lahf
push
dec
mov
push
clc
jae
mov
popf
test
into
aam
int3
push
rorb
push
mov
mov
mov
cmp
outsb
jge
mov
cmp
test
and
push
sbb
movsb
aaa
pop
divl
ret
cwtl
xchg
lock
mov
std
stc
leave
mov
push
cmpsb
xchg
lods
popf
clc
arpl
lds
mov
cwtl
cmp
inc
mov
cmpsb
adcb
mov
pop
pop
xchg
push
iret
arpl
cltd
or
jl
stc
clc
sub
out
add
aas
push
adc
mov
enter
mov
test
out
xchg
in
pop
adc
test
mov
addr16
inc
enter
arpl
mov
ret
ljmp
movsl
jns
mov
inc
repnz
outsl
and
push
test
loope
jo
jge
out
dec
std
inc
jg
cmp
push
shll
mov
shrb
negl
popf
xchg
push
adc
jns
push
icebp
dec
or
pop
mov
push
andnps
push
jl
in
cmc
adc
enter
outsl
adcl
test
icebp
and
rol
ret
aad
sbb
jbe,pn
dec
aam
loopne
nop
push
cmpsb
fdivrs
imul
fmuls
in
push
jae
dec
cvtps2pd
pop
insl
dec
fildl
lds
mov
in
dec
pusha
cmp
fdivl
jp
push
inc
cld
imul
mov
dec
lret
mov
sti
add
in
pop
sbb
sub
or
sbb
fcmovnb
adc
xchg
stos
dec
xchg
jg
sub
hlt
cld
sbb
xchg
push
push
loop
cmp
dec
and
or
adc
sub
add
pushl
out
leave
enter
mov
sub
outsl
adc
insb
push
adc
inc
and
or
dec
cmpsl
gs
cmpl
icebp
sbb
insl
inc
loop
sbb
leave
jbe
mov
or
les
mov
fs
lcall
je
cmpb
adc
mov
mov
sub
inc
mov
cld
repnz
push
jle
dec
sbbb
sbbb
mov
adc
loopne
fstl
subl
test
stc
jnp
lea
outsl
lds
stc
leave
cmp
jmp
lret
dec
out
xchg
cmp
ja
mov
ss
push
xchg
out
pop
adc
or
dec
stc
mov
shll
fs
out
mov
outsl
pop
lcall
adc
fsubl
inc
mov
sbb
dec
clc
adc
ljmp
inc
push
aam
xor
xor
xor
xor
pop
mov
sub
mov
push
jg
imul
lea
push
jo
mov
arpl
push
xchg
data16
mov
jbe
adc
nop
test
xorl
imul
aam
call
lret
loopne
sub
mov
cmpsb
aad
jo
mov
push
push
adc
insl
pushf
adc
mov
fdivrs
sbb
fs
pushf
jp
shll
scas
pushf
das
push
inc
pop
jg
cltd
jle
jle
or
lea
mov
inc
push
test
cmpsl
rcl
inc
mov
test
jmp
inc
pop
mov
outsl
loopne
mov
xor
imul
out
mov
in
dec
sub
sub
sbb
dec
adc
xlat
fstp
xchg
addb
inc
lds
mov
jb
mov
das
xor
pop
das
inc
ret
fsub
in
add
push
sub
inc
mov
inc
ffree
add
mov
in
add
sub
cmpsb
jo
cld
push
ret
inc
movsb
cmc
lods
sti
lods
xchg
jns
je
mov
insl
sbb
das
insl
cmp
pop
test
pushf
scas
xlat
mov
xchg
in
cmp
mov
inc
sub
xlat
jle
jmp
push
adc
dec
jo
xor
and
add
outsl
arpl
stc
pushf
movsl
inc
mov
xor
cmpsl
data16
mov
stos
cmp
push
mov
adc
add
xchg
add
mov
push
sub
inc
fidivs
sub
push
cwtl
enter
pop
add
push
pusha
addr16
jle
out
shr
push
jo
sti
cmpsb
stc
ficompl
inc
into
fs
aad
mov
push
sbb
outsl
icebp
mov
add
pusha
dec
loop
push
xchg
ja
xchg
popf
xchg
xorl
mov
jo
jno
and
sbb
stc
movsl
or
sahf
cmp
mov
mov
out
add
add
xchg
mov
inc
iret
or
stos
mull
iret
xchg
dec
cli
stos
sarl
popa
bound
xchg
test
or
mov
push
or
jb
xor
cmp
pop
loop
dec
int
dec
cmp
add
insb
lcall
inc
sub
ret
lret
push
shll
mov
pop
sbbb
int
call
orl
push
adc
lock
roll
mov
aam
inc
mov
int3
dec
cwtl
jbe
pop
or
dec
inc
mov
ret
test
and
adc
jmp
push
das
xlat
dec
jecxz
sar
add
jnp
and
cmp
cmpsb
pop
inc
cmpsl
scas
and
add
pop
fisubs
mov
push
lret
stos
push
fstpt
mov
mov
inc
adc
adc
lcall
rcrb
mov
add
mov
cmp
jo
loop
pop
jecxz
and
add
stc
imul
and
xchg
repnz
in
xlat
fwait
call
fstpt
js,pt
popa
les
orb
ret
lcall
xor
xor
cmp
jns
xor
pop
loope
mov
xor
dec
mov
fcmovnbe
xchg
lea
mov
ficomps
test
pop
mov
pop
push
mov
adc
outsl
dec
cmpsb
fsubp
pop
xlat
dec
fwait
mov
es
adc
mov
xchg
cmp
mov
insl
mov
ljmp
lds
rorb
cmc
xchg
ret
ds
hlt
jae
ja
xchg
jle
imul
test
bound
cwtd
mov
fld
or
ljmp
dec
xor
rorb
sbb
mov
rcrl
fmull
pop
sahf
push
dec
fcmovnu
bound
cmp
sub
daa
je
mov
jo
and
call
stos
ds
shlb
lea
jno
mov
fbstp
mov
and
outsl
ds
mov
out
inc
push
movsb
les
mov
xor
xor
js
xor
jl
jecxz
cmp
popf
mov
aas
cmpl
cmp
or
insb
das
adc
adc
icebp
addr16
xlat
jge
bound
sub
jo
mov
outsl
jl
mov
inc
leave
jecxz
cmp
mov
mov
xchg
out
mov
mov
ds
sub
fldt
shlb
mov
cmpsl
pop
push
loope
add
push
nop
xchg
jp
jge
hlt
sub
xor
mov
xchg
fstpt
fmuls
pop
add
arpl
mov
popa
pop
pop
ja
xor
or
pop
mov
in
and
test
xchg
xor
aam
imul
add
cmp
xchg
ljmp
es
ret
call
add
das
pop
lret
push
icebp
adc
pop
xsave
sti
xchg
lds
repnz
mov
pop
call
or
adc
mov
or
int
into
and
pop
ficomps
xchg
push
into
or
push
repz
pop
jnp
or
inc
xchg
pushf
scas
pop
adc
insl
mov
mov
lcall
pop
clc
lret
or
jno
cmp
mov
sub
cld
mov
cmp
pop
movsl
jno
push
inc
lock
jne
lahf
jl
dec
jns
pop
mov
mov
dec
scas
sub
dec
pop
bound
les
bound
pushf
fdivr
push
cmp
mov
cmp
je
aam
sbb
stos
add
inc
mov
aaa
cmpb
xor
jecxz
std
jae
sub
lea
enter
pop
mov
push
cmovbe
stos
popf
jo
adc
pop
out
pop
ljmp
pop
push
xor
jge
inc
cmp
xchg
lods
fidivl
sbb
inc
cmpsb
sbb
es
in
std
sub
or
jno
pop
gs
in
dec
add
mov
insl
mov
pusha
clc
pop
cmp
aam
dec
rorl
jl
push
out
frstpm(287
aaa
xchg
mov
push
cmp
pushf
xchg
pop
inc
lret
rolb
sbb
movsb
jp
xor
inc
test
lret
xchg
mov
dec
sbb
lods
xor
insb
xchg
pop
out
outsb
mov
adc
mov
ret
fs
jge
sbb
mov
out
fistpll
add
sbb
mov
jnp
xchg
push
cs
mov
leave
fs
aam
lret
sub
ret
jg
enter
push
push
push
mov
cmp
cmp
in
add
jns
mov
aaa
sbb
hlt
push
cmpsl
sub
mov
mov
inc
les
inc
imulb
lock
lcall
or
fisubs
and
inc
adc
adc
nop
cltd
nop
shrl
lahf
push
xchg
mov
or
push
mov
xchg
push
mov
mov
jno
cmp
popa
adc
or
mov
movsb
scas
push
dec
divb
fbstp
sbb
push
sbb
sub
test
mov
xor
loopne
ret
ret
sarl
jmp
aam
or
jo
mov
inc
icebp
mov
std
push
insb
or
cmp
dec
and
lcall
sbb
or
scas
fucomi
cmpsl
xchg
dec
xchg
push
sbbb
sub
cmp
cwtl
shr
mov
or
sarw
jmp
jp
icebp
mov
push
push
inc
xadd
pushf
addr16
out
repnz
xlat
mov
icebp
dec
jo
orl
pop
dec
and
mov
push
es
xchg
mov
inc
cmp
repz
imul
dec
adcl
aas
mov
cmpsb
push
arpl
sub
icebp
loopne
mov
jb
shl
dec
icebp
rolb
xchg
cwtl
mov
loop
lods
cmp
jecxz
sub
pop
pop
cld
rcrb
add
pop
inc
jno
sti
clc
cs
fnstsw
or
imul
xorl
dec
call
push
movsl
sbb
inc
scas
paddd
lods
sbb
dec
pop
xlat
stos
lcall
adc
test
enter
mov
in
pushf
mov
lock
ja
adc
mov
imul
sti
rcrl
and
sbb
scas
and
test
jl
sbb
fcompl
xchg
cli
int
inc
lds
stos
xchg
pop
fsubrp
and
mov
inc
xchg
in
icebp
cmp
and
stos
sbb
mov
cmpb
inc
xor
cs
dec
shl
sbb
adc
sub
pop
jnp
push
repz
push
jne
movsl
pop
adc
es
scas
push
cmp
lcall
lcall
xchg
repz
sahf
rorl
mov
stos
cmc
lea
or
or
rclb
jle
fadds
adc
mov
push
cmpsl
mov
dec
aaa
dec
mov
jbe
fisubrs
es
add
mov
stos
stc
in
push
out
ljmp
inc
fcmovbe
inc
pop
dec
mov
cmp
cmpsl
andl
dec
bound
pop
inc
dec
and
insb
addr16
icebp
jne
frstor
aaa
cli
test
mov
jle
pop
push
stos
mov
pop
xchg
pop
in
pop
jb
out
inc
stos
mov
lcall
push
insb
sub
add
loope
mov
pop
cmpsl
addr16
cwtl
jnp
mov
in
idiv
mov
and
movsb
and
nopl
testl
inc
lcall
mov
sbb
ret
rclb
shrb
and
loop
mov
cmp
mov
test
xchg
mov
sub
mov
pop
jp
mov
dec
rolb
out
cmp
pusha
mov
into
xchg
pop
mov
cmp
jbe
movsb
inc
pop
push
push
cli
bound
xchg
test
shrl
out
xor
inc
mov
lret
notb
add
js
daa
lock
clc
xor
sahf
sbb
inc
lcall
ljmp
lds
dec
pusha
insb
fdivrs
sti
sub
into
dec
shrb
xchg
cmp
mov
addl
and
adcb
sbbl
xchg
fidivrl
repz
shrl
ficomps
mov
mov
test
jne
sti
sbb
aas
mov
mov
jge
insl
setne
push
or
mov
xchg
mov
mov
adc
mov
out
test
adc
out
popa
dec
aaa
data16
pop
xadd
ja
or
mov
cld
andl
or
rclb
jne
stos
cwtl
pop
push
sub
cs
push
lods
cmp
cmp
mov
lcall
push
idivl
lahf
cmc
adc
inc
scas
sub
mov
rorb
lods
adc
imul
shrl
jg
xchg
xchg
push
push
mov
adc
repnz
jg
xchg
repnz
push
imul
jbe
ds
add
dec
daa
stos
and
aaa
jno
sub
into
div
cltd
or
mov
xor
and
dec
sbb
in
pop
ret
and
pop
mov
fcmovnu
add
push
call
xchg
ret
stos
adc
pop
mov
adc
bound
sub
sbb
int
cli
pop
test
out
jmp
dec
pop
out
mov
shrl
xchg
ljmp
sahf
jmp
sub
xorb
repnz
pop
imul
and
rolb
jb
arpl
xchg
and
xchg
nop
add
fmulp
cmpsb
fnstsw
sti
xor
add
and
mov
cld
mov
cs
cmpsb
and
shrl
fstpl
test
pop
pusha
jecxz
enter
jbe
leave
mov
xlat
adc
shl
fucomp
dec
lahf
cmp
sti
lea
rolb
dec
clc
loope
inc
mov
mov
sub
js
fstps
aaa
cwtl
xchg
sub
and
or
xlat
in
sbb
call
xchg
adc
jp
fldenv
pop
test
push
sar
das
mov
inc
negb
or
and
push
and
addr16
inc
popf
inc
js
shl
lahf
inc
push
pop
rol
int3
out
js
out
insb
movsl
xor
lods
adc
leave
test
xor
push
or
push
cltd
insb
adc
pop
sub
and
push
shlb
mov
mov
mov
in
mov
movsl
ja
aas
pop
aas
dec
jb
mov
dec
inc
xor
call
mov
mov
adc
inc
sbb
adc
loopne
inc
nop
adc
and
mov
sub
aad
fs
jge
jb
push
push
in
cwtl
xchg
xchg
xor
clc
bound
dec
adc
mov
iret
sbb
mov
jo
shr
leave
push
pop
xchg
xlat
mov
les
push
and
pop
mov
cmp
xor
icebp
dec
mov
mov
cld
sbb
xchg
xorb
pop
repz
xor
xchg
push
push
mov
popf
orb
lret
scas
add
cmp
call
mov
shl
test
push
mov
movsb
test
pop
ss
mov
js
fsubl
mov
pop
cld
arpl
push
dec
imul
pop
lret
bound
mov
test
fucomi
in
push
lret
inc
lcall
pop
xchg
fistpl
aad
mov
add
sbb
in
sbb
pop
xchg
mov
in
mov
stos
add
xchg
inc
mov
or
notl
push
push
dec
and
or
jns
lahf
negb
inc
mov
bound
sbb
movl
xor
cmp
icebp
sarb
push
dec
shrl
xchg
mov
and
inc
je
mov
int
mov
mov
call
insl
xchg
add
push
repz
inc
cmc
adc
dec
shl
movsl
pop
call
mov
push
fwait
push
fmuls
enter
and
mov
jbe
daa
add
jae
aaa
int
adc
sub
or
imul
repnz
pop
popa
push
adc
nop
lock
cmp
xlat
loope
addr16
andb
mov
popa
and
pop
sbb
inc
xchg
mov
fs
push
fisubrs
xor
sub
cmp
leave
fidivrl
cmp
xor
in
lods
ficoms
call
repz
clc
aas
out
inc
movsl
fs
je
push
xchg
nop
aad
into
inc
cmp
push
cmpsb
mov
mov
stos
mov
fsubp
pusha
dec
sbb
jg
xchg
inc
dec
dec
push
or
insb
in
push
into
dec
xor
xchg
cmp
aad
sub
push
push
jmp
mov
scas
rcrl
std
xchg
mov
xor
outsb
decl
mov
rolb
lea
cmp
xlat
out
scas
sbb
inc
sbb
xchg
inc
mov
rcrb
fisttps
or
mov
stc
lock
dec
popa
cmp
xchg
movsl
inc
leave
ficoms
xor
or
add
int
pop
mov
ds
cli
ds
repnz
mov
jnp
sbb
fiaddl
movsb
add
lea
data16
insl
push
or
cmp
mov
inc
mov
lods
xor
mov
adc
lahf
xchg
movsl
stc
fs
push
mov
cli
adc
xor
stc
enter
fildll
arpl
lcall
xchg
xor
aaa
pop
dec
fs
push
nop
and
jle
and
xor
scas
aam
popf
les
or
mov
push
cmp
inc
inc
mov
mov
jns
mov
mov
ret
movl
jbe
mov
je
hlt
stc
cwtl
cmp
lods
aas
in
cmpsl
aaa
inc
sarb
aam
pop
rclb
inc
bound
test
les
imul
jl
mov
gs
das
popa
pop
dec
imul
jo
stos
fidivrs
sub
and
cld
xor
fwait
mov
push
ret
and
sub
ss
loop
xchg
cmp
daa
pop
and
lret
sub
adc
mov
xchg
ja
shll
adc
loopne
popf
adc
or
push
loop
mov
imul
adc
pop
in
jle
fwait
in
xor
jp
sub
mov
repnz
sbb
mov
jbe
and
adc
in
out
cwtl
fldcw
jle
fwait
mov
ss
out
mov
pop
push
out
mov
mov
inc
pop
push
sbb
cs
cmp
movsb
dec
push
mov
mov
add
xor
add
bound
fdivrs
or
fimull
xchg
push
cwtl
inc
xchg
xchg
jle
push
and
cmpsb
xor
jl
rcr
mov
outsb
mov
jmp
sahf
pop
cli
inc
ja
out
mov
idiv
push
push
dec
mov
aaa
and
push
ret
pop
mov
or
mov
adc
or
arpl
lcall
loop
idivl
cmp
in
insb
dec
in
aad
mov
or
cmp
lea
jle
mov
test
insb
pushf
fistl
jnp
push
mov
aaa
pushf
mov
jmp
inc
pushw
das
or
jb
push
jmp
je
sbb
lods
push
pop
pop
cmp
jmp
pop
xchg
add
inc
arpl
imul
movsl
fldenv
jmp
shll
and
cld
xchg
sbb
aad
xchg
cwtl
or
mov
rolb
cmp
cmp
aam
cmp
mov
and
ret
and
insl
sbbb
adc
fcmovu
or
and
push
jl
mov
dec
repz
xchg
cwtl
sub
or
inc
mov
or
pop
aam
lea
or
jbe
add
sarl
cmp
leave
cwtl
int
sub
jmp
int3
jne
mov
stos
adc
cmp
scas
loop
dec
sbb
mov
xchg
scas
mov
scas
mov
in
lcall
pop
xchg
rcll
push
sbb
std
pop
cmp
fcomps
mov
mov
fucom
dec
mov
pop
insl
mov
call
xchg
xchg
xchg
pop
adc
rcrb
and
aas
cmp
cmp
cli
cmp
jmp
inc
jne
pop
push
inc
hlt
arpl
push
adc
je
jo
inc
call
daa
lods
inc
pop
push
or
sbbb
aas
mov
test
mov
addr16
aam
call
adc
sbb
pop
movsb
cmpsl
pshufw
pop
ljmp
pop
ds
test
mov
push
sub
mov
test
leave
inc
push
mov
lds
in
cmp
clc
sub
cmp
data16
or
repz
ds
push
mov
sti
js
jl
or
lcall
loop
sbb
adc
shll
sub
xchg
cld
insb
xor
xchg
sub
inc
fwait
push
in
xor
in
and
pop
hlt
iret
dec
mov
mov
or
ret
mov
jp
jo
jl
xor
cs
ss
jns
jmp
push
movsb
outsl
fxch
outsl
dec
stos
fnstenv
out
bound
mov
adc
and
std
pop
cmpsl
xchg
mov
popf
idivl
and
or
jb
dec
rolb
hlt
pop
mov
aaa
dec
les
push
add
lods
loopne
dec
cmovs
push
mov
lea
xor
roll
fwait
mov
mov
call
fistps
and
cwtl
notl
add
out
in
xchg
fiaddl
dec
jge
mov
add
or
cli
ss
mov
daa
sbbl
or
or
mov
dec
jns
jo
loopne
jle
outsb
jecxz
add
fists
dec
xor
xchg
call
mov
dec
pop
imul
rorb
push
cmp
xchg
and
pop
xchg
into
mov
jmp
call
movsl
es
jp
push
adc
fs
fmuls
into
mov
sub
pop
je
push
push
sbb
pop
in
stc
pushf
dec
lods
sub
sti
inc
scas
mov
xchg
insl
dec
mov
clc
pop
mov
lret
add
adc
xchg
les
add
pop
js
into
or
mov
add
sti
sahf
pop
xchg
mov
test
cmp
xor
sbb
bound
lret
mov
shrb
dec
mov
mov
xchg
cmp
dec
add
in
idivb
ret
popa
lea
pushf
aad
fistpll
pop
mov
mov
mov
jmp
test
xchg
add
push
ja
test
rorl
imul
push
inc
dec
push
arpl
xor
push
popf
sub
dec
inc
sub
mov
cmp
sub
cmpsl
xor
dec
ret
adc
mov
dec
out
call
inc
inc
cwtl
pop
jb
cmpsb
lret
cmpsb
cld
ja
jb
push
shll
jnp
imul
inc
loopne
inc
out
loopne
mov
mov
insb
shlb
push
lcall
sub
push
fidivs
mov
push
push
pop
in
cmp
scas
push
sbb
gs
ret
adc
mov
push
fwait
jmp
mov
xchg
pushf
sbb
sbb
psraw
xchg
jbe
into
cmpsl
rcl
mov
adc
cmp
fs
inc
dec
mov
or
jecxz
push
fisttpll
pop
push
in
test
fadds
sbb
lods
sub
push
int3
test
and
sub
lods
mov
and
mov
lods
hlt
and
dec
stos
inc
add
pop
lods
ds
ljmp
jno
ret
xchg
hlt
xor
mov
outsb
push
repz
xor
cmp
pop
std
mov
jmp
nop
cmp
xor
pxor
movsl
cmp
push
adc
loope
insl
shr
dec
movsb
stos
mov
pop
cmp
xchg
lods
mov
mov
adc
mov
mov
pop
cmp
idiv
clc
push
or
lods
or
jno
push
jbe
loope
add
sub
movsb
or
lods
call
push
inc
push
iret
lret
pop
pop
sbb
mov
pop
inc
inc
xacquire
xchg
xor
scas
movsb
xor
pushf
cli
lahf
div
in
jg
jo
xor
aad
shll
xchg
jb
ss
add
pushf
push
xchg
sahf
inc
lahf
add
inc
jns
jne
xchg
xchg
ficoms
cmp
out
pop
movsl
fcomip
popl
inc
xchg
cmpsl
xor
xor
mov
add
pop
add
js
xchg
xchg
call
fptan
jg
mov
push
mov
xor
xor
inc
mov
test
loopne
mov
incb
mov
sub
cwtl
sahf
adc
ret
mov
jmp
mov
push
push
stos
ljmp
adc
mov
out
jecxz
pop
push
jmp
out
adc
xchg
dec
pushf
into
adc
repnz
les
jl
sub
insb
fbld
pop
cmpsl
pushf
jbe
sub
add
out
pop
push
enter
fistl
fiaddl
pop
aam
cmp
out
aas
stc
mov
inc
and
cli
xor
pop
push
clc
int3
in
xor
lods
aaa
mov
dec
subl
in
jmp
dec
decb
in
pop
dec
out
ret
mov
mov
hlt
outsb
xor
rclb
jns
sub
div
dec
xchg
sub
xchg
lea
ficomps
mov
insl
pop
jg
dec
adc
fimuls
aas
sub
pop
stos
std
lret
loope
mov
sahf
aaa
jb
jl
subb
adcb
push
sub
jnp
enter
and
out
daa
add
ds
mov
mov
cmp
inc
jne
mov
adc
rcll
cmpsl
iret
aam
mov
loope
jo
push
add
repz
or
mov
mov
bound
mov
cmpl
popa
repz
cli
es
and
cmc
int3
fisttpl
cmp
push
mov
jo
xchg
clc
mov
shll
pop
mov
adc
outsb
aad
cmpb
xchg
add
adc
cmp
out
fwait
ret
pop
fcoms
pop
inc
push
mov
push
jb
add
cli
xor
pop
add
movsl
in
xchg
pop
cmp
xchg
jp
cmc
jg
jne
pop
push
jb
sbb
mov
dec
inc
loopne
outsb
les
aaa
push
or
xorl
repnz
lods
pop
iret
outsb
mov
pop
nop
sub
pop
sbb
pop
push
cli
sub
js
cmp
jnp
rorl
fldcw
mov
jnp
js
loope
inc
int
sbb
aam
loopne
out
inc
add
out
ds
popf
fsubl
sahf
shlb
ret
lods
or
mov
add
js
pop
xchg
inc
cld
arpl
mov
mov
fsubrs
fs
push
cmpsl
or
ret
xchg
dec
test
mov
mov
movsl
mov
add
stos
jae
int3
mov
rcll
cmpsb
adc
push
pop
sbb
outsb
loop
xor
fdivrp
insl
xor
push
test
push
inc
and
mov
inc
mov
pusha
sbb
clc
hlt
idivb
push
add
push
xor
push
mov
dec
cmp
dec
ds
stos
dec
dec
cmp
cli
fldcw
pop
lcall
jae
and
adc
xlat
push
out
cmp
sahf
push
je
shl
in
xchg
call
cli
add
nop
fcoms
mov
mov
daa
pop
cwtl
xchg
out
mov
sti
adc
shlb
mov
mov
mov
outsl
adc
leave
arpl
add
std
test
dec
outsb
inc
int
pusha
out
adc
sarl
or
jnp
sbb
xor
mov
je
jns
or
sbb
out
pinsrw
or
nop
push
addl
pop
mov
bound
clc
adc
push
cmp
and
add
flds
and
mov
add
dec
je
jl
push
jnp
repnz
jne
sbb
movlps
pop
mov
add
mov
lods
outsb
jecxz
popf
ror
sbb
mov
sbb
mov
pushf
es
and
or
fistpll
notb
int
dec
ret
mov
cmp
or
push
lods
in
jae
dec
xchg
in
xchg
fisttpll
mov
test
in
scas
movsl
and
leave
fsubrl
sti
xchg
movsl
mov
test
icebp
mov
mov
xchg
mov
mov
cmp
push
into
in
or
lret
jmp
and
pop
adc
das
js
add
aam
adc
sub
mov
xchg
push
test
lret
mov
cld
jmp
xchg
mov
cmp
mov
pop
adc
sub
fwait
mov
inc
cmp
ucomiss
xchg
jp
fcoms
pusha
pusha
fwait
cmpb
or
mov
das
pop
loop
rcr
in
loopne
add
stc
or
loop
call
ret
addr16
dec
push
repnz
or
sbb
mov
lock
loopne
pop
sahf
xor
cmp
sbb
andl
aas
in
aas
mov
add
test
cmp
arpl
sub
mov
addr16
mov
mov
xchg
and
ret
ljmp
bnd
bound
or
or
sarb
pop
fwait
roll
dec
sbb
or
sub
jae
lahf
ljmp
sbb
jge
push
addr16
sarl
xchg
stc
call
xor
jbe
aam
loop
xor
cltd
jmp
dec
shl
hlt
inc
gs
add
insb
rdtsc
mov
push
lea
adc
inc
lea
or
or
pop
nop
jo
das
inc
cmp
and
roll
dec
fs
shlb
in
icebp
dec
mov
lods
mov
jbe
xchg
xchg
mov
sbbb
nop
test
and
pop
into
adc
sbb
mov
sub
cwtl
shlb
mov
or
lods
push
leave
adc
xor
mov
jb
mov
mov
cmp
add
add
xchg
push
jbe
xchg
fldl
push
inc
mov
cmp
xorl
ret
xchg
ja
xor
fistpll
jbe
push
and
shll
nop
add
push
jle
sub
cmp
mov
xchg
cmp
cmp
mov
dec
xor
push
in
cmp
mov
fmull
jae
jle
enter
xchg
cmp
outsb
mov
mov
stos
cwtl
pusha
pop
mov
cmp
xor
rolb
es
mov
lcall
or
mov
push
daa
pop
scas
mov
int
pusha
or
in
xor
mov
stos
je
ja
xchg
shrb
out
sub
pop
sahf
and
push
mov
xlat
xor
mov
je
mov
pop
loope
adc
movntps
mov
inc
xchg
pop
inc
sbb
fwait
add
cltd
addr16
mov
roll
push
sub
ljmp
add
insb
fsubs
gs
adc
cmc
data16
ret
dec
sarb
aaa
fsts
lds
mov
jbe
mov
pop
dec
lcall
xchg
pop
or
sti
dec
jo
jb
sub
cld
jmp
ljmp
test
xchg
xor
in
pusha
mov
insl
scas
subl
hlt
lea
fadds
dec
inc
lock
pop
jne
mov
jo
lret
int3
lock
dec
fstpt
add
mov
pop
sub
mov
test
mov
hlt
icebp
push
jle
adc
xchg
mov
sarb
xor
out
xlat
jl
nop
jns
test
das
inc
push
xor
mov
fisubrl
dec
cltd
aaa
add
dec
jmp
loopne
rolb
sbb
insl
mov
scas
scas
adc
lds
push
mov
inc
dec
jae
ret
adc
cmpl
fistps
mov
inc
mov
jge
jno
pop
orl
sbb
sub
cmc
in
jmp
test
outsl
or
jae
outsl
int
jp
push
lods
subl
dec
sub
dec
out
jle
xchg
cli
in
data16
imul
sub
add
nop
dec
pop
lret
call
push
mov
les
dec
movsb
repnz
and
loope
fiaddl
push
push
or
add
dec
jmp
push
loope
pop
xchg
xchg
popa
adc
mov
bound
rclb
sbb
and
loopne
mov
aaa
inc
push
xchg
bound
sbb
mov
cli
jo
out
cmp
push
pop
fnclex
cwtl
shr
push
dec
add
ret
push
add
jmp
ss
push
adc
sub
cld
lcall
int3
mov
pop
andb
roll
jne
jle
mov
mov
aaa
pop
test
fcoml
inc
cmp
xor
xor
jne
and
sahf
jne
out
jge
xor
test
jns
dec
in
popa
jmp
dec
cmp
mov
mov
or
inc
or
in
orb
movsl
add
xchg
push
push
lods
sahf
or
inc
test
outsl
xchg
ss
jbe
inc
push
out
stos
shrl
out
inc
cmp
cmp
pop
inc
pop
enter
xor
stc
dec
add
cmc
mov
cs
ja
dec
add
mov
cli
inc
js
xlat
push
push
movsb
adc
in
out
or
xchg
lret
lcall
push
pop
sbb
jnp
sbb
push
fwait
les
cmpsb
out
fdivl
aam
loop
jb
test
fisttpll
cltd
or
decb
icebp
mov
add
push
fildll
sub
xor
int3
jns
or
outsb
dec
test
test
sub
add
pop
sub
sub
mov
subb
xor
adc
sbb
popa
inc
in
xchg
mov
jg
arpl
imull
add
sub
mov
push
xchg
push
cld
stc
mov
xor
rcl
mov
ret
fdivrs
std
arpl
or
pop
mov
dec
add
pop
mov
aas
dec
rorb
pcmpgtd
and
cmp
jg
dec
aad
or
stc
or
and
imul
and
or
stos
push
subb
mov
xor
fcmovnu
inc
and
jne
inc
mov
lods
xchg
out
repz
daa
or
mov
rcrb
jge
mov
rcll
xchg
pop
sbb
lahf
jge
jo
shr
pop
jp
mov
sbb
xorb
sbb
mov
inc
insl
xchg
pop
out
pusha
mov
dec
sub
xor
mov
push
cltd
ret
xchg
out
arpl
dec
jle
push
das
and
sbb
outsb
push
ljmp
xor
rcll
jns
mov
lret
xor
and
cmpl
cmp
lods
or
inc
fcmovnb
add
repnz
jbe
pusha
mov
inc
add
dec
lret
pop
dec
dec
xor
push
dec
int
add
push
leave
cwtl
pop
cli
xor
xlat
cmp
pop
hlt
push
inc
inc
icebp
jno
cwtl
cltd
xor
rol
test
jns
dec
icebp
pop
addr16
mov
pop
or
dec
mov
jge
mov
pop
dec
pop
test
mov
mov
mov
pushf
inc
mov
or
mov
clc
ret
bound
jae
xchg
push
pop
sub
sbb
sub
fistl
mov
add
dec
and
inc
xor
sub
mov
mov
jle
mov
push
xchg
sub
jo
aam
fidivrl
lret
inc
cmp
fiaddl
jmp
insl
and
mov
cmp
fs
inc
xor
stc
cmp
mov
sbb
ja
mov
or
adc
sbb
shlb
stos
js
push
stos
sti
adc
push
mov
fldl
dec
xchg
mov
mov
pusha
mov
xchg
jne
adc
cs
or
cmp
add
ljmp
and
pusha
push
fcmovu
paddw
inc
push
add
mov
stos
bound
iret
push
fisttps
gs
pop
add
into
jnp
cmpsb
or
ljmp
into
nop
jmp
fwait
pop
and
in
push
pop
iret
das
int
mov
imul
lea
cmp
es
inc
sbb
enter
sbb
enter
in
or
test
add
push
lods
leave
dec
arpl
cmpsb
cmp
push
mov
mov
test
sbb
aaa
lahf
test
inc
sbb
mov
push
mov
or
lret
and
xor
inc
fistpl
mov
and
mov
sbb
scas
clc
out
insb
xor
ss
outsb
push
add
xchg
jmp
cmp
std
and
jp
rolb
adc
dec
fdivrl
rorl
mov
out
add
mov
xor
inc
pop
loopne
jo
imul
ds
mov
int3
push
push
mov
inc
in
cltd
call
out
sbb
mov
sub
xor
sbb
sbb
lcall
mov
cmpsb
mov
lret
pop
nop
test
movsl
push
loopne
ss
dec
sti
test
mov
push
enter
push
inc
pop
sub
stos
dec
insl
mov
or
push
arpl
push
or
push
mov
fisubrs
insl
loop
pop
pusha
test
pop
mov
and
aam
adc
cld
push
ret
inc
scas
sub
sbb
orb
mov
sbb
jle
sub
iret
adc
sbb
aam
push
mov
sbb
sub
cmc
cmpsb
mov
push
xchg
adc
jnp
adc
cmp
data16
fnstenv
or
mov
push
shll
andl
adc
cs
mov
lods
xor
jo
idivb
lea
test
subl
sbb
mov
les
ret
or
in
sahf
mov
pop
push
lret
cltd
push
daa
lret
mov
mov
hlt
xchg
mov
xchg
pop
enter
shrb
xchg
add
fcmovbe
jnp
inc
enter
out
es
addl
cmp
dec
cltd
div
jle
sbb
mov
scas
int3
mov
std
icebp
cs
mov
inc
xchg
jp
cmc
jmp
mov
xlat
jnp
mov
pop
fisttps
dec
cltd
in
in
ds
fstpl
shr
icebp
iret
lods
or
flds
mov
or
add
lea
pop
sub
inc
sbb
mov
xor
xor
clc
jl
aaa
mov
sbb
xchg
enter
mov
cmp
daa
lods
mov
jne
in
les
scas
add
ss
popa
jo
dec
shl
sbb
inc
mov
data16
mov
cmp
test
push
repnz
mov
mov
dec
mov
ja
add
fstpt
nop
out
dec
pop
sbb
fucom
or
add
cwtl
xchg
jae
inc
scas
sub
adc
adc
shll
adc
cwtl
sub
xor
add
mov
push
popa
push
mov
enter
inc
icebp
cmp
je
scas
loopne
dec
test
aaa
pop
mov
xor
push
ret
jae
sbb
sub
dec
xor
and
xchg
sahf
fdivrl
add
jae
sub
call
pop
jg
sub
pop
daa
sbb
mov
push
shl
lea
cltd
and
jge
mov
xor
cli
mov
inc
ret
or
mov
sub
add
mov
and
add
push
stos
shl
out
out
xchg
roll
sbb
add
xor
out
sub
das
mov
test
das
cmp
ljmp
aam
pop
jbe
inc
fisttps
sbb
sub
out
cmp
pop
cmc
jns
setbe
xchg
pop
fsts
pop
inc
out
cltd
pop
inc
pop
fldcw
sbb
dec
push
jb
and
fisttps
and
insb
dec
pop
sbb
test
lahf
jb
dec
sbb
jecxz
sub
mov
call
push
movsl
mov
inc
xor
mov
or
xchg
xchg
mov
fcomip
shlb
mov
mov
mov
dec
loopne
xchg
lcall
out
mov
leave
mov
and
or
call
pop
mov
gs
cmp
call
out
push
aas
or
pop
es
scas
aas
mov
dec
insb
aam
xchg
fcmovbe
out
dec
or
or
push
push
xchg
loope
test
ds
cltd
test
cmpsb
aaa
push
cmpsb
lock
ljmp
daa
repnz
jp
jle
and
mov
inc
stos
push
push
int
gs
jg
fstpt
jge
push
push
sbb
push
pop
addr16
sub
loop
addr16
mov
mov
pop
loope
inc
stc
int3
mov
pop
mov
mov
lea
adc
sbb
jbe
or
aas
jle
jbe
push
ficoml
repnz
dec
fistpl
mov
jmp
cld
and
insb
add
lods
sbb
addr16
xor
jne
jmp
aam
fcmovne
cld
outsb
testb
bound
fadds
jp
inc
imul
enter
pop
dec
cwtl
out
xor
lods
adc
and
arpl
sbb
outsb
jb
cmc
idivb
add
jle
lcall
ss
jp
jl
xlat
jae
data16
xchg
fistl
les
dec
mov
arpl
iret
aaa
out
inc
lea
adc
push
fdivrl
mov
lahf
and
repz
mov
mov
stc
scas
push
mov
mov
xchg
mov
jns
mov
sbb
inc
push
mov
push
pop
pop
cli
pop
push
cmpl
out
int3
push
xchg
hlt
lea
mov
das
lea
stos
scas
mov
pop
jecxz
ds
mov
jb
push
sbb
add
adc
or
push
sub
mov
testb
xchg
or
cmp
mov
dec
int
pop
outsl
mov
aas
xor
loopne
sub
mov
fnsave
inc
add
xchg
fldcw
cmpb
and
mov
psubsw
or
imul
fmul
in
je
push
aad
push
adc
and
rorl
mov
xchg
leave
xchg
adc
addl
notl
stos
sbb
mov
repz
jp
mov
dec
hlt
push
adc
mov
mov
push
xor
push
fs
dec
stos
sbb
inc
lret
das
pop
leave
add
iret
jbe
cmp
addb
hlt
mov
cmp
sub
cmp
mov
sbb
jae
push
movsb
stos
rorl
and
lods
iret
cltd
sub
inc
xchg
xor
dec
cmc
dec
sub
jns
std
fildll
rorl
sub
sbb
jecxz
fildll
dec
cmp
xchg
or
cmpsl
pop
cmp
push
dec
outsb
mov
rorl
xor
lea
jle
jge
outsl
aaa
cmp
dec
pop
or
lcall
hlt
mov
xchg
lret
jge
movsl
push
sbb
push
pop
add
pop
imul
dec
das
js
jle
fiadds
lret
daa
arpl
jle
test
push
pusha
out
stos
adc
pop
in
add
cmc
adc
mov
or
in
jle
adc
jns
rcll
lods
arpl
xchg
mov
xor
lock
dec
ret
andl
rolb
cli
cmpb
stos
gs
in
jmp
lds
aas
push
mov
jb
xchg
mov
mov
aas
xchg
mov
dec
sar
popa
add
xchg
cmp
lock
cmp
xchg
or
jbe
rcll
jb
inc
sti
cmp
jmp
jns
or
xchg
daa
inc
in
in
mov
push
push
faddl
sbb
fnstcw
mov
in
in
stc
jb
mov
or
ficomps
jne
dec
dec
icebp
daa
add
in
int3
iret
sahf
add
add
and
pop
outsl
dec
adc
sbb
cmpsl
sbbb
cmp
push
adc
push
into
mov
mov
iret
pop
push
stos
mov
mov
rep
pusha
xchg
enter
pop
inc
pop
dec
pop
clc
and
sti
in
dec
in
stos
aaa
imul
ret
imul
mov
loope
add
push
push
inc
cwtl
movsb
jne
xchg
call
iret
jg
sbb
imul
callw
ret
stc
add
mov
outsl
shl
ret
aad
lods
arpl
repz
jg
scas
fcomps
xchg
dec
mov
pushf
bound
lods
add
push
lds
test
stc
shlb
cld
or
rolb
jmp
cmp
int3
jmp
sub
cltd
jge
scas
ds
fwait
cmp
leave
inc
xor
adc
cmp
and
push
jle
and
test
mov
jecxz
adcl
cltd
xor
shll
into
xchg
insl
or
push
pop
add
inc
fwait
fidivrs
mov
leave
inc
xor
xchg
insb
cmp
les
sbb
mov
inc
out
sbb
or
dec
les
xor
inc
dec
or
mov
sub
mov
popa
es
int3
out
pop
jmp
out
mov
lret
sbb
stc
and
mov
lock
leave
cmp
xchg
xor
cwtl
push
mov
shl
enter
stos
ret
ljmp
lret
pop
mov
mov
in
das
rorb
jb
jg
lret
jl
adc
ret
lfs
push
jle
dec
das
movsb
call
pop
nop
mov
arpl
add
fnstenv
movsb
jp
mov
jecxz
adc
xchg
repnz
push
cmp
adc
and
cmp
inc
mov
inc
shlb
sbb
mov
adc
insl
lret
adc
xor
shl
loope
mov
test
js
adc
mov
mov
inc
icebp
cld
lods
jnp
or
cmp
das
leave
sub
lock
mov
outsb
das
mov
test
test
sahf
sbb
sub
push
xor
outsl
mov
pop
mov
mov
sbb
addr16
into
in
mov
ljmp
bound
rolb
xchg
leave
add
sub
mov
push
and
sarb
sbb
sub
push
roll
out
xlat
pop
outsb
mov
inc
inc
daa
push
cmc
imul
sbb
out
pop
push
jl
add
jp
ja
fbstp
outsl
push
out
nop
test
rorl
in
pop
cmp
and
jg
dec
push
in
leave
sbb
aad
cli
or
pop
fistps
xchg
fwait
push
xchg
xor
pop
push
fs
cmp
push
std
loope
cmpsl
in
add
add
add
sbb
inc
fdivl
arpl
cli
in
inc
dec
adc
pop
ret
ret
xorl
insl
cmp
out
adc
push
leave
test
scas
xchg
adc
jle
or
fsubrl
filds
cmp
jecxz
pusha
inc
into
xchg
lahf
xor
or
ljmp
fiadds
sub
in
xor
inc
iret
jae
pop
and
sbb
xor
lahf
ljmp
jbe
mov
ja
cmp
inc
imul
rcl
decl
push
test
xor
xchg
scas
cmpsl
mov
push
clc
fisubrl
popf
xor
push
jp
test
lock
aad
mov
lods
int
jmp
test
push
dec
or
outsl
or
les
lock
inc
cmpsb
cmp
into
jb
sub
sahf
shrb
or
mov
test
outsb
in
ret
pop
sbb
mov
push
mov
into
dec
mov
xor
lods
inc
mov
push
arpl
loopne
js
push
rorl
sbb
inc
inc
xlat
cmp
iret
mov
sbb
dec
in
test
scas
movsb
fdivrl
gs
push
push
popf
stc
stos
sub
jg
pop
mov
popa
rorl
shrb
lods
aam
mov
dec
out
pop
imul
push
jp
jo
loope
fldenv
inc
fisubs
lea
push
push
jp
and
scas
clc
in
xrelease
inc
xor
lret
cmp
test
ljmp
jne
inc
sbb
mov
out
dec
pop
jp
mov
inc
iret
dec
test
sbb
mov
mov
pop
adc
push
mov
loope
adc
xor
add
push
jbe
test
xchg
push
inc
fcomps
sbb
push
aam
and
adc
ficomps
and
and
out
fdiv
ret
inc
and
add
repnz
add
insb
hlt
outsl
push
sbbb
sbb
mov
inc
pushf
call
cli
hlt
fimull
dec
bound
mov
jbe
pop
sbb
inc
mov
popf
or
test
fwait
movsl
lcall
mov
icebp
push
ljmp
xor
clc
xchg
or
and
mov
das
pop
sub
pushf
in
mov
jno
add
jne
xor
fstps
lds
cltd
les
adc
and
addr16
dec
mov
mov
popa
push
mov
movsb
xor
bnd
inc
movsb
pusha
andw
add
clc
idiv
clc
mov
mov
sbbl
cs
imul
pushl
dec
loopne
or
jno
xor
cmpsl
adc
sbb
xor
pop
adc
pop
addl
faddl
push
lds
sar
andb
loopne
xor
jae
pushf
jl
mov
xchg
or
les
cmpsl
mov
cmc
cmpsl
adc
mov
add
add
jge
jl
notl
cli
in
sbbl
arpl
cmpsb
dec
mov
mov
or
scas
popa
mov
jg
int3
fisttpll
cmpsb
shr
insb
sub
xor
pusha
jle,pn
fmulp
sub
repz
xchg
cwtl
test
call
dec
imul
sub
shl
jp
out
ret
cmovg
jae
jge
cltd
xchg
repnz
dec
fbstp
pop
add
lods
cltd
loope
aas
push
cmp
mov
sub
xlat
jmp
les
and
sub
dec
adc
ficoml
cmp
xorb
stos
jbe
popf
jne
pop
lds
cmp
mov
xor
jnp
push
popf
xor
mov
mov
notl
cmp
pop
movsb
imul
and
inc
shrl
sbb
into
mov
xchg
mov
movsb
sbb
ret
xchg
lods
clc
inc
mov
rcr
push
cltd
xchg
mov
addr16
lods
out
push
mov
ret
mov
add
outsb
test
inc
jnp
sarl
cld
pop
sub
xchg
jge
push
pop
into
add
lret
data16
insb
sbb
adc
xorl
or
mov
jne
jmp
add
push
jmp
cmp
popa
clc
ss
mov
sub
outsb
mov
out
mov
dec
in
orl
mov
pop
or
fsubp
xor
inc
dec
imul
movsl
test
mov
cmp
cwtl
xor
add
xchg
sbb
stos
cmp
pusha
scas
xchg
fadds
std
inc
push
jne
dec
pop
sbb
xrelease
lds
js
aam
push
stc
lcall
add
push
loop
sub
xor
test
jg
xlat
push
ds
test
and
add
fldenv
ret
mov
mov
loopne
cmp
sub
movsl
outsl
dec
pop
pop
insl
fidivrl
fprem
mov
push
js
addb
sub
pushl
test
or
xchg
out
gs
push
pop
inc
loopne
int
mov
ds
into
scas
clc
inc
mov
mov
shll
jae
cmpsb
or
dec
sahf
lcall
roll
arpl
nop
lock
or
hlt
xor
flds
xchg
ja
sbb
inc
jp
ja
xchg
addl
repnz
xchg
popa
fisubs
dec
pop
xchg
outsb
cmp
xchg
mov
xor
dec
lds
ret
scas
leave
outsb
cmpsb
ficoml
sub
push
fdivr
mov
leave
pop
sbb
test
pop
push
push
loop
aaa
mov
aas
push
jb,pn
pusha
adc
mov
mov
idiv
xor
inc
pushl
jae
and
pushf
fstl
adc
and
xchg
loopne
in
pop
jb
cli
dec
js
xor
dec
xlat
aaa
cmc
out
imul
xor
pop
push
out
adc
cwtl
test
aaa
out
and
xchg
clc
roll
sbb
xchg
es
lea
fs
sub
xor
jbe
ss
mov
push
mov
cmp
stos
ljmp
outsl
sub
xor
push
cld
mov
sbb
popa
jecxz
pop
cmp
adcl
cmp
mov
jmp
mov
into
push
aas
add
xchg
inc
jnp
fwait
pop
scas
sbb
inc
sbb
fstpl
cmp
mov
shl
lods
fmul
scas
pop
aas
ljmp
aam
and
lahf
test
fcompl
xor
clc
xor
mov
fbld
rcrb
das
push
pop
push
cmpsl
loope
pop
imul
inc
test
jl
sbb
or
mov
jne
fcomps
ret
mov
fidivrl
decl
aad
loop
jo
add
mov
fptan
mov
xchg
sti
add
out
jae
mov
xchg
mov
jge
sti
cmp
jnp
mov
cld
lea
dec
adc
lea
jae
popf
mov
or
push
loopne
xlat
loope
das
xor
dec
lret
out
xchg
outsl
sbb
push
scas
repnz
shlb
push
stos
clc
sub
pop
cmpsl
inc
dec
ret
ffreep
jnp
andl
mov
dec
or
cmp
mov
or
dec
mov
xor
and
mov
sbb
mov
js
mov
sub
scas
xor
sub
stc
mov
lock
add
es
inc
in
push
and
loope
cmp
clc
out
in
xchg
sbb
bound
cmp
mov
das
and
sub
sub
jmp
imul
sub
or
xchg
ror
loope
jns
out
xor
test
movsb
mov
cmpsl
cmc
pop
push
and
or
mov
sub
pop
mov
dec
adc
fwait
call
pop
sbb
out
mov
pushf
movntq
cmp
gs
xor
xor
mov
add
and
call
daa
cmp
outsb
out
mov
movsl
xor
into
xchg
cmp
jmp
xchg
pop
outsl
stos
lea
or
inc
jmp
mov
cmp
inc
sti
insl
sbb
mov
loope
lahf
xchg
aam
jg
addr16
fsubrs
jp
call
sub
cld
mov
mov
cmp
lret
mov
dec
jge
je
dec
pop
mov
push
mov
sbb
repnz
and
push
arpl
mov
mov
inc
push
cmpsl
mov
jp
cmp
movsb
push
fistl
mov
mov
into
cmp
pop
xor
mov
jl
jae
cmpsl
das
in
cmp
aam
pop
sahf
push
testb
push
jns
xor
xor
xor
in
cmp
mov
aas
pop
xor
je
test
xchg
out
lea
dec
mov
pop
mov
test
subb
imulb
pop
pop
das
push
call
lret
sbb
sti
push
push
incb
es
adc
stc
mov
lret
add
bound
push
ljmp
stc
dec
hlt
cmpsl
xchg
sub
iret
inc
sub
jns
sbb
inc
fidivrs
add
dec
jle
rorl
cmp
rolb
xor
mov
cmp
movb
push
neg
fs
int3
popa
push
xor
pop
enter
adc
sbb
jo
lea
cltd
std
or
push
pop
addr16
cltd
cmp
popa
test
push
fcmovnu
pop
cli
xorl
mov
pushf
stos
fldl
sub
add
enter
cmpl
push
lcall
mov
sbb
out
push
outsl
and
lea
dec
jge
mov
insb
lret
or
cltd
jge
cld
das
xor
arpl
push
ja
mov
push
mov
mov
loopne
fldl
test
aas
ljmp
cmp
sbb
fadd
fdivrs
and
roll
pop
push
test
xchg
push
fcomps
sub
movsl
mov
aaa
xor
clc
scas
inc
pop
sti
xlat
pop
inc
ja
bound
ds
xor
jmp
xor
enter
inc
cmp
sahf
xor
stos
or
jae
insl
shll
sarl
dec
repz
xlat
arpl
js
movsb
in
lret
sub
shlb
adc
pop
out
rcl
cs
jnp
addr16
pop
xchg
pushf
cli
sub
push
and
mov
lea
ficoms
jno
sbb
add
clc
and
sti
fucomip
pop
dec
sub
lds
jo
pop
xor
icebp
dec
or
lds
sub
fdivs
jmp
push
jg
mov
cwtl
mov
mov
imul
fstl
lret
fcmovne
pcmpgtd
sub
sub
xor
push
daa
pop
imul
lret
add
decb
jecxz
shl
mov
xor
push
outsb
les
sub
push
inc
js
cli
imul
jmp
rol
xlat
shll
jle
push
je
pushf
in
xor
cmp
insl
jge
clc
xorb
xchg
mov
pop
stos
cmpsl
jp
setno
idivb
pop
or
repz
lret
out
pushf
xor
popl
jbe,pn
lods
pop
movsb
xor
push
push
popa
mov
call
nop
sbb
aaa
mov
cmp
push
rcll
dec
ret
sti
pusha
lds
outsl
pusha
insb
movsb
pop
int
stos
aad
mov
outsl
mov
fmull
iret
or
andl
call
mov
or
inc
cmpl
jmp
xchg
jl
and
jl,pt
or
lods
cmpsl
pop
sub
xchg
mov
pop
add
or
push
nop
fimull
scas
and
das
pushf
inc
jp
call
jmp
mov
mov
je
sub
xchg
add
insl
lods
add
jg
add
mov
xor
mov
dec
push
ss
push
fidivl
fwait
das
test
mov
fs
cmpsl
outsl
mov
adc
sub
xchg
dec
sub
jns
jge
jl
dec
push
and
or
and
dec
lock
or
sar
and
outsl
ret
rcrb
ja
dec
mov
outsb
negl
arpl
popf
xchg
notb
je
jge
test
mov
out
in
cmp
enter
cmpb
stos
int
into
hlt
js
in
and
jno
rorb
xorb
add
aad
push
enter
jnp
or
fisubl
pop
js
mov
dec
in
fcoms
jmp
push
push
repz
add
test
movsb
pop
xchg
in
lret
das
and
add
push
mov
mov
xor
mov
ret
dec
sbb
int3
je
movsb
add
mov
sahf
pushf
movsl
call
sub
std
iret
and
xor
mov
sub
lahf
pusha
fildll
in
cmp
addb
xchg
sub
push
sahf
movsb
dec
jge
out
dec
jns
shll
filds
mov
mov
xlat
dec
int
xor
sbb
dec
xor
ja
iret
out
inc
pop
mov
loop
into
xor
push
mov
enter
test
sbb
jp
nop
inc
xchg
outsl
faddl
cs
push
jne
fldenv
dec
pop
xor
jmp
scas
leave
fnsave
jae
add
inc
and
out
or
fisttps
xchg
fsts
xchg
fdivrs
add
popf
lcall
mov
push
push
imul
adc
or
mov
aaa
leave
lods
lahf
or
mov
jp
pushf
add
inc
ja
std
adc
mov
fwait
pop
scas
in
mov
cmp
sahf
adc
aad
rol
and
dec
sub
mov
xor
inc
sbb
in
std
addr16
mov
lret
pop
adc
adc
mov
lods
cltd
cli
jmp
mov
push
lret
sbb
sbb
aaa
add
xchg
dec
dec
dec
jbe
or
mov
mov
mov
cmp
enter
xchg
fwait
addr16
sub
imul
add
adc
push
xchg
mov
bound
int3
out
sbb
int
inc
mov
orb
insl
jae
out
and
std
sub
mov
stos
bound
sbb
into
xchg
int3
pop
fdivrs
push
push
push
outsb
and
cmpsl
sbb
xchg
int3
inc
loope
lret
shl
cmp
aad
pop
inc
lret
inc
push
push
push
iret
movd
inc
mov
adc
and
fwait
daa
add
repz
aad
xchg
aas
stc
jbe
pop
push
mov
ljmp
sbb
lret
jns
push
pop
stos
into
sbb
push
data16
cltd
or
pop
push
jae
pop
fistl
dec
popa
cmpsl
cmp
push
push
jno
jmp
insb
jmp
cli
cmp
cmp
mov
repz
mov
icebp
add
pop
out
and
cltd
and
test
data16
mov
sarb
mov
je
adc
mov
pop
and
out
fisubs
js
xor
lret
dec
xchg
pushf
jmp
inc
addr16
pop
or
xchg
movsl
pop
cmp
fwait
or
mov
add
loope
add
leave
cltd
cmc
adc
adc
xchg
es
mov
rep
sbb
push
mov
lods
xor
mov
lds
mov
rcrl
adc
xlat
or
fcompl
pusha
movsb
nop
jmp
xchg
aad
pop
lcall
mov
and
je
mov
add
hlt
aas
pop
scas
dec
sub
insl
mov
leave
inc
cltd
push
sti
arpl
decb
leave
sbbb
test
lret
jae
push
sbb
cmp
pop
loope
mov
call
into
addl
lds
loop
test
imul
sbb
xor
xor
into
sbb
aas
mov
lods
movsb
sbb
or
sbb
mov
xor
dec
stos
nop
lock
dec
ljmp
lods
xchg
sub
nop
data16
aas
xor
xor
and
mov
jnp
bnd
mov
xor
xchg
push
std
pop
divl
xchg
ficoms
inc
pop
gs
mov
inc
lea
mov
ret
shlb
insb
fnstenv
lret
jl
sub
icebp
adc
mov
inc
fisubl
sahf
cmp
daa
jl
loope
jae
call
add
jns
scas
push
mov
mov
lea
and
cwtl
mov
jmp
and
inc
mov
pop
sbb
jg
sub
rorl
jle,pt
cmc
shrb
cwtl
mov
push
jb
dec
ret
add
sub
add
fisubl
in
out
aad
sbb
inc
mov
xor
jbe
int
or
shrl
xchg
inc
inc
pop
xor
sbb
repnz
int
hlt
dec
fistl
pop
lret
scas
jl
cld
mov
pop
inc
add
subb
push
dec
stc
push
or
cmp
lods
data16
adc
movsl
jno
outsb
push
push
push
pusha
rcrl
mov
jo
fidivrl
shr
sti
add
or
out
mov
xor
jg
call
mov
fstpt
add
sub
adc
pop
sbb
inc
ret
sub
into
jl
push
jmp
xor
hlt
sarb
and
out
cltd
xchg
scas
sub
mov
into
jl
dec
xchg
dec
lret
mov
fsts
add
xchg
or
fdivs
mov
sub
mov
adc
cmp
jge
xor
std
adc
xchg
xor
ja
jmp
movsb
push
cmc
jmp
ret
inc
stos
shrl
or
aam
repnz
xchg
sub
sti
out
dec
enter
lret
cmp
adc
mov
mov
mov
ss
xor
or
push
in
leave
ja
je
mov
pop
subb
data16
adc
adc
add
or
das
mov
jnp
lret
xor
jmp
lcall
pop
out
push
inc
mov
insl
pop
popa
push
push
sbb
fwait
in
add
jo
and
jnp
cmpsb
nop
pop
js
adc
mov
adc
inc
cwtl
jbe
add
cmp
leave
sti
inc
in
pop
fistl
sbb
ja
xchg
xchg
and
out
adc
xchg
lea
mov
cmpsb
pop
or
aaa
std
push
mov
mov
push
jle
push
sub
cwtl
imul
mov
in
xchg
or
mov
sub
and
jp
add
mov
pop
xor
adc
and
fcomp
int3
jl
mov
test
or
fsubrp
pop
inc
pop
loope
sub
inc
fisttps
mov
iret
subl
dec
lret
mov
pop
js
add
subb
ss
jecxz
adcb
or
insl
inc
push
cmpsb
popf
fisubl
mov
mov
into
mov
or
cmpsb
in
popf
adc
sub
xchg
xor
cmp
cwtl
jmp
and
mov
mov
jo
mov
popf
iret
mov
mov
cmpsb
adc
adc
push
sbb
inc
sbb
mov
xor
jne
pop
sub
sbb
inc
mov
lret
icebp
push
cmp
jo
inc
push
std
nop
test
insl
cld
mov
jnp
or
ret
repz
xchg
leave
fldenv
adc
test
cli
or
push
sbbb
aaa
push
add
or
push
inc
mov
arpl
repz
xchg
adc
cld
outsb
arpl
inc
test
scas
daa
inc
dec
adc
popf
add
lcall
sub
js
mov
imul
scas
dec
sub
pop
lock
out
stos
add
pop
inc
enter
pop
dec
dec
dec
push
adc
fwait
adc
rcrl
dec
sub
mov
sub
inc
mov
daa
stos
rep
in
cmp
adc
or
jns
movsb
mov
pop
lret
popa
jo
pop
add
out
pusha
push
inc
pop
mov
ds
mov
mov
movsb
shll
or
jne
jmp
divl
rolb
lahf
nop
std
nop
xor
sti
testb
les
push
pop
ret
mov
sub
loop
adc
loopne
clc
movsb
faddp
test
fadds
pop
mov
out
push
aas
out
inc
or
lds
add
lahf
xor
out
cmp
inc
adc
iret
inc
cwtl
mov
xchg
icebp
cmc
inc
push
ret
xchg
push
cld
imul
enter
les
and
push
mov
leave
mov
inc
sub
sarl
sub
clc
shll
xor
xchg
adc
mov
mov
pop
add
and
fmulp
outsl
push
fmuls
outsl
idivl
inc
push
or
mov
fs
inc
push
ja
insl
pop
xchg
rep
push
in
roll
inc
mov
dec
std
sbb
in
adc
das
fcoml
jp
jp
aas
scas
xor
iret
jo
testb
push
cmp
mov
fbstp
aas
adc
dec
mov
xor
adcw
jnp
in
ret
jo
dec
movsl
xchg
xchg
mov
xchg
jae
jne
xchg
jge
pop
jns
popa
test
bound
mov
cmp
aaa
movsl
push
push
lock
cmpsl
inc
mov
mov
push
mov
sub
jp
pop
mov
add
addr16
ret
mov
gs
sbb
dec
mov
imul
aaa
mov
jge
xchg
dec
out
ret
or
bnd
jne
adc
cmp
aas
xchg
inc
sar
and
inc
mov
imul
cmp
lret
xlat
and
xchg
add
or
ja
fld1
pop
daa
add
xlat
mov
cmp
push
stos
or
xchg
rcll
pop
pop
stos
test
mov
cwtl
inc
xor
iret
mov
mov
pop
popl
xchg
xor
pusha
mov
shll
xlat
sub
jbe
mov
sbb
outsb
cld
loop
test
push
cmp
hlt
mov
fstp
loope
dec
test
pop
sbb
repnz
fidivs
push
add
sarl
lret
nop
lock
sub
cmp
dec
cmp
cwtl
sub
out
add
mov
gs
sub
dec
outsl
xchg
hlt
inc
pop
lock
or
xor
lods
fadds
pop
lcall
inc
jmp
lahf
push
push
pusha
out
xchg
imul
clc
pop
lods
sbb
xor
jns
mov
out
mov
xchg
pop
mov
add
xchg
push
pop
fbstp
scas
push
shlb
addl
movsl
je,pn
out
pop
inc
mov
mov
xor
push
xor
mov
lea
psadbw
outsl
adc
lods
push
mov
inc
push
jnp
nop
dec
imul
fs
pop
outsb
xchg
sub
movsb
call
sub
push
in
push
inc
lods
push
pop
mov
cs
mov
add
pusha
sbb
jge
jnp
dec
sub
or
jae
sub
cmp
jmp
sub
mulb
daa
lcall
xchg
or
cmc
cmp
repz
mov
ss
inc
sbb
loopne
rcl
lods
cmpsl
mov
loop
mov
mulb
xor
pop
and
add
sub
fistps
js
cmp
scas
push
ss
sti
aaa
stos
cld
and
sbb
sti
loope
fidivrs
into
js
mov
rol
and
add
sbb
inc
mov
lretw
lods
aam
inc
pop
jb
xchg
mov
sbb
scas
mov
jmp
out
push
repz
sbb
pop
mov
in
sti
fwait
outsl
xor
xchg
dec
out
jecxz
ficomps
clc
jecxz
or
push
xchg
push
pop
jb
inc
aaa
adc
push
adc
add
xchg
mov
orl
or
dec
orl
sbb
push
dec
lcall
sahf
cmp
jne
xchg
cmp
xlat
fs
int3
sub
pushf
loope
inc
hlt
incb
pop
lods
test
int
mov
lret
enter
fisubrs
xor
movsb
stos
pop
xchg
jge
add
hlt
ljmp
push
out
adc
outsb
stos
jecxz
cltd
test
pop
mov
adc
clc
fstpl
sbb
jae
in
lods
jle
push
not
dec
in
mov
jnp,pn
xchg
jne
test
call
test
pop
adc
pusha
fstl
mov
push
ret
lret
push
hlt
jno
nop
cmpsb
mov
loope
lea
shll
in
in
mov
mov
aas
rcll
sbb
xchg
cmp
jbe
gs
dec
lret
xor
jp
stc
push
sub
mov
or
popf
xchg
push
pop
adc
push
cld
or
push
aas
popa
cmpsl
outsl
push
and
add
add
jne
or
and
scas
mov
push
and
sbb
jo
in
xchg
and
fldl
xorb
test
inc
and
movsl
xor
in
int
jo
dec
mov
je
pop
cmp
xor
sarb
push
hlt
or
aaa
jg
fwait
cmp
les
lret
or
movsb
mov
dec
jbe
sub
cmp
cmpsl
cmpsb
jo
lods
shrb
insl
mov
xchg
filds
adc
cmp
je
sbb
or
outsb
or
inc
lahf
subl
int
repnz
popf
or
jle
mov
add
adc
push
xor
cmpsb
test
nop
xor
jle
pop
mov
push
daa
movsb
mov
and
cwtl
fildl
jo
sub
xchg
jo
add
sub
jl
pushl
adc
stos
pop
pop
lods
push
enter
add
in
outsb
aad
scas
jbe
adc
insl
dec
xchg
rorb
mov
dec
test
loop
gs
rcrl
adc
es
jne
sbbb
push
pop
adc
divb
mull
nop
push
aad
mov
mov
sti
fistl
mov
inc
cli
or
dec
mov
mov
sbbl
or
mov
and
es
fistps
mov
adc
leave
xlat
icebp
movsb
fisubs
pop
dec
mov
dec
xchg
aad
xchg
pushf
push
repz
aad
push
daa
call
adc
jmp
pop
xchg
insb
insb
insl
je
adc
pop
int3
mov
jo
addr16
sub
adc
or
xor
mov
jbe
loope
repz
test
aas
jo
pushf
sub
push
jp
mov
mov
pop
inc
jle
add
mov
mov
mov
sbb
outsl
hlt
xchg
xor
xor
mov
pop
adc
dec
push
cmp
lock
lret
mov
ss
and
xchg
inc
adc
pop
mov
mov
mov
and
inc
scas
or
lret
or
test
sbb
mov
sbb
arpl
add
cmpsl
hlt
fisubrs
movsl
nop
into
add
or
out
cmpsl
dec
add
movsl
push
inc
cltd
dec
cmp
gs
add
xor
push
mov
cmpsl
add
dec
jl
subl
add
in
pop
repnz
gs
aaa
repz
pop
daa
sbbb
imul
push
mov
test
scas
mov
sub
bound
push
mov
clc
pop
cmc
cmp
cmc
inc
dec
jg
test
pop
and
subl
jle
test
inc
popa
sahf
add
mov
in
and
les
xchg
cltd
movsl
pop
adc
sbb
fs
cmc
stc
jae
leave
popa
stc
inc
outsl
outsl
fdivl
dec
mov
iret
add
outsb
nop
fs
cltd
add
sub
ds
ljmp
dec
fdivl
cs
mov
jg
mov
xor
push
cli
popa
pop
sub
aas
mov
js
insl
sbb
jp
das
test
xor
cmp
xchg
sahf
mov
insl
sarb
fnstenv
jmp
sbb
lret
mov
test
and
and
in
scas
push
test
stos
and
stos
cmp
mov
mov
xor
sbb
loop
xchg
in
inc
fdivl
and
sbb
sbb
push
mov
mov
or
or
xchg
dec
test
icebp
daa
in
jne
fstp
shrb
repz
adc
fsubs
xchg
mov
mov
sub
or
mov
add
cmp
and
jecxz
and
jecxz
jno
fadds
push
shll
sahf
imulb
xor
jmp
arpl
xchg
call
ret
in
lret
ficoms
pop
mov
adc
leave
jnp
outsl
mov
adc
repz
xor
popf
push
sbb
int
pop
cmp
in
sbb
add
rcpps
arpl
aas
int3
ljmp
sub
mov
sub
mov
int
sbb
push
out
mov
rcrl
mov
dec
and
pop
or
pop
stos
jnp
cmp
aam
pop
mov
fcoml
addr16
inc
cwtl
lods
mov
pushf
push
cmpsb
sbb
xchg
in
jmp
cs
test
xchg
mov
lea
testl
in
mov
mov
nop
decl
xchg
inc
cs
fstl
jg
jge
into
cmp
mov
mov
mov
or
in
mov
dec
jg
xchg
pop
inc
pop
jmp
and
fstl
xorb
dec
jecxz
orl
movl
nop
mov
aam
pop
repnz
inc
inc
jmp
adc
fimull
mov
mov
cmp
adc
outsl
xor
sbb
dec
fcompl
jl
roll
mov
inc
inc
push
xor
fmul
fs
xchg
adc
pop
mul
pop
mov
and
nop
dec
add
xor
pop
sar
add
push
add
pop
add
test
out
push
pusha
and
test
mov
and
aam
arpl
xlat
and
jp
mov
push
ss
int
jmp
mov
js
sti
outsl
add
jp
imul
pop
lods
or
imul
adc
jecxz
ss
int
insw
xchg
inc
lret
push
xchg
les
mull
adcl
rcll
loopne
imul
pop
lea
xor
inc
adc
add
out
or
xor
mov
test
mulb
adc
mov
aaa
and
xor
stc
xchg
mov
adc
sbb
arpl
dec
out
jmp
jno
cli
daa
mov
dec
mov
mov
push
pushf
inc
mov
add
xchg
sbb
pop
adc
cmc
in
mov
adc
jno
xor
sbb
mov
inc
cwtd
dec
mov
inc
push
cltd
push
test
mov
inc
and
mov
int
adc
popf
test
cmp
mov
fs
mov
mov
mov
fcomps
fnsetpm(287
daa
jp
je
xchg
jns
sub
out
cmp
cmp
jg
es
outsl
in
adc
xchg
icebp
loopne
imull
lret
gs
rclb
jo
mov
and
sub
outsb
clc
std
dec
cmp
mov
push
stc
addr16
inc
mov
js
sbb
nop
lret
stos
popa
pop
mov
xor
mov
fnstenv
out
jae
and
leave
jmp
xchg
cli
jae
mov
pop
ja
in
pusha
dec
sbb
or
pop
aad
test
cwtl
cmp
xor
aad
jp
xor
adc
pushf
or
push
sub
ss
sbb
std
mov
push
pop
push
in
add
pop
adc
or
mov
mov
mov
pop
xchg
and
mov
jb
nop
xchg
lret
cmpsl
xchg
push
div
inc
outsb
or
js
lods
pop
je
scas
mov
mov
ds
es
out
mov
sub
jecxz,pt
aam
sbb
clc
jns
stos
jl
fildll
mov
scas
test
inc
leave
inc
xchg
or
stos
xorb
cmp
push
cmpsl
xchg
inc
call
loope
jmp
aad
mov
sahf
pushf
adc
sar
cwtl
xchg
repz
lea
arpl
adc
outsb
mov
pop
andl
daa
out
outsl
repnz
sbb
push
orl
pushf
ret
mov
ss
add
pop
sar
lahf
outsl
push
ret
dec
push
fwait
sbbb
cli
outsl
jno
push
pop
inc
adc
cltd
lret
xor
pop
cmp
popf
movsb
fcmovb
call
cwtl
mov
ret
outsl
or
sbb
or
aas
psubq
stos
pop
xchg
icebp
jmp
cld
adcb
ret
out
cwtl
pop
jecxz
out
mov
dec
leave
je
daa
scas
rorb
flds
imul
ljmp
or
mov
inc
rcll
inc
jmp
and
or
jle
dec
test
xlat
int3
jno
jno
or
cmpsb
pop
pop
cld
push
xchg
int
mov
sbbb
jle
pusha
mov
iret
pop
addl
fimull
jne
ss
jle
ret
shlb
pop
xchg
and
imul
adc
lock
aas
dec
and
aam
pop
push
iret
ss
jmp
lret
fsubl
adc
xchg
xor
mov
add
inc
pusha
int3
lret
adc
in
aad
add
cltd
jg
jo
inc
sbb
test
popa
sahf
pop
xor
xor
imul
adc
jle
mov
xchg
and
mov
mov
and
adc
int
cmp
ds
mov
aad
xchg
dec
cmp
bound
pop
repnz
mov
inc
jg
push
out
in
enter
push
mov
call
xchg
mov
mov
pusha
xor
movsb
fldl
sub
out
mov
cmp
test
mov
jo
cltd
rorl
in
imul
imul
ss
or
call
push
enter
cmp
jnp
mov
lds
mov
pop
lret
or
jns
jge
out
aaa
inc
mov
js
push
sarb
or
shll
push
lahf
or
and
rcl
in
negb
or
ds
dec
ds
pop
cld
sub
mov
push
int3
notb
mov
push
loopne
enter
pop
jp
gs
call
mov
dec
std
mov
mov
lods
iret
and
jne
xor
dec
rol
outsb
lods
fiaddl
adc
lret
cwtl
fists
or
sbb
pop
fisubrl
mov
repz
inc
or
cmp
jl
das
cwtl
mov
ret
or
lock
mov
lret
bound
and
clc
ds
jmp
push
insl
dec
mov
aaa
sbb
fcomps
mov
jo
or
jp
xor
xor
das
hlt
out
lcall
ror
xchg
cwtl
adc
cltd
test
xchg
fimull
inc
sbb
popa
call
adc
and
jne
sbb
ss
lea
or
daa
loope
pop
loopne
mov
jnp
add
inc
orb
inc
dec
adc
jl
sub
loopne
lds
jmp
pop
adc
mov
out
pop
or
aam
cmp
cs
push
sti
and
push
or
aaa
test
adc
xchg
dec
dec
sbb
daa
dec
out
mov
rcrl
cld
fsubs
jg
inc
pop
shrl
sub
xor
sub
or
inc
lcall
mov
mov
icebp
jno
push
cmp
fwait
jg
pop
lods
cwtl
push
and
outsl
pop
aam
jb
repnz
dec
mov
inc
mov
ret
into
rcrl
xlat
hlt
arpl
inc
mov
test
xchg
jecxz
stos
lds
xlat
jo
cltd
xor
xchg
and
rorl
ret
mov
push
shlb
sahf
and
psubw
lahf
outsb
xor
mov
jns
loope
sub
inc
sub
arpl
mov
dec
mov
lahf
sbb
add
popf
and
dec
sbbl
xor
lret
lret
mov
jmp
jo
mov
pop
addl
cmpsl
addr16
xor
and
jo
pop
fs
mov
mov
sbb
or
ljmp
mov
or
add
cmp
and
cmp
sbb
leave
movsl
outsl
stos
and
in
cmc
out
dec
add
mov
aas
clc
or
aaa
cltd
jl
addb
jge
enter
or
loop
sbb
shlb
mov
cmp
sbb
adc
fs
repz
push
add
daa
inc
cmp
mov
inc
scas
clc
cwtl
jge
fldt
jmp
mov
fcomp
out
sub
xchg
mov
test
pop
stos
push
push
cltd
outsb
push
lahf
shlb
xchg
cmpl
xor
mov
mov
adc
or
cmpsb
or
icebp
out
mov
repz
jle
add
lahf
xchg
jns
dec
fsts
arpl
call
inc
and
and
out
into
ficoml
imul
jns
lret
mov
mov
cmp
cmp
mov
xor
inc
add
inc
test
jns
andb
mov
int
or
add
ds
pop
sbb
pop
in
addr16
sarl
mov
movb
jnp
push
movsb
add
push
mov
xchg
jne
fadd
and
push
arpl
aas
cmp
lret
xor
aam
mov
jo
stc
add
xchg
push
xor
dec
xor
or
jg
hlt
in
clc
pushf
subb
mov
mov
jne
pop
rcl
sub
mov
outsb
cmpsb
sbb
movb
ret
xor
fimull
fcmove
sahf
popa
scas
and
test
imul
call
sarb
mov
push
shll
mov
mov
sub
cmpsl
add
add
dec
push
aaa
dec
mov
xorl
cmp
insb
mov
mov
cmp
push
xchg
fwait
jne
inc
ret
cmp
iret
lret
mov
mov
xor
cmc
mov
sbb
rcll
mov
adc
dec
cmpb
pop
xchg
fsubp
in
iret
faddl
pop
sub
push
sbb
adc
popf
mov
jmp
out
clc
sub
dec
outsl
mov
and
mov
cs
adc
fdivrp
stos
ja
lds
cmpsl
inc
jb
pop
jge
dec
mov
mov
xor
ret
or
or
jnp
sub
push
gs
cltd
inc
in
xchg
jmp
clc
pop
or
stos
mov
mov
mov
frstor
lcall
jbe
xchg
das
mov
push
dec
jle
in
push
aad
or
sub
or
lds
sub
jmp
test
sub
and
dec
pushf
test
in
in
sub
ljmp
xchg
and
xor
cmp
inc
inc
jae
rcrl
jmp
out
sahf
pop
rolb
sbb
and
cli
add
icebp
pop
and
mov
mov
stc
add
icebp
mov
test
push
in
sbb
mov
jle
mov
sub
xor
sub
rcrb
cmp
push
aam
jnp
scas
popa
ja
repz
fldenv
aas
sti
out
cmp
adc
jmp
xor
je
rcrl
ds
pusha
jae
pop
xor
inc
mov
cmp
mull
loop
adc
dec
in
loope
fwait
mov
jmp
mov
out
ljmp
into
mov
push
movsb
push
insb
lahf
test
call
mov
out
and
push
add
inc
aas
lret
pop
rep
mov
cmpsl
mov
arpl
mov
icebp
pop
mov
mov
ljmp
lcall
xor
xor
push
mov
enter
mov
add
sbb
mov
mov
jge
jns
stc
cmp
inc
mov
jae
scas
out
push
push
in
fwait
cmp
cli
dec
out
lock
mov
inc
jle
xor
push
sub
or
xchg
adc
addr16
ja
rorl
or
jle
arpl
rolb
idiv
rcl
jae
mov
cli
sub
popf
adc
insb
sbb
in
or
pop
mov
xchg
fcoms
cltd
int
add
repz
mov
xorl
andl
jo
scas
add
dec
pop
pop
repz
shlb
cs
dec
cltd
pushf
inc
mov
sbb
gs
jne
lea
sbb
rcrl
gs
pop
push
pop
xor
mov
push
test
push
adc
fidivrs
imul
and
data16
in
mov
sbb
inc
cli
push
or
jae
jg
mov
cs
push
pop
insb
into
out
int
popa
les
cmp
sahf
mov
out
sahf
jl
push
push
jmp
insl
int3
sti
sbb
pop
xor
cltd
call
pop
ja
out
sbb
std
movsl
mov
ret
andl
hlt
add
dec
test
pop
and
pop
test
push
fs
dec
xchg
jbe
cmpsb
cld
addl
jg
mov
sbb
sub
or
add
inc
cmp
hlt
jb
xor
cmp
pop
loopne
inc
cmpb
xor
call
jl
shl
jg
outsb
call
loopne
jo
xchg
enter
mov
cmc
lret
es
cltd
insb
data16
xchg
das
xchg
ret
and
cs
stos
roll
dec
push
mov
sbb
data16
pop
fnstsw
xor
adc
jbe
add
sub
jno
enter
mov
ja
jo
mov
mov
jno
adc
inc
cli
cli
clc
mov
lods
adc
mov
orl
pop
inc
mov
popf
mov
es
fstpl
les
cmpsl
seta
dec
jl
mov
lret
dec
repz
test
popf
in
hlt
inc
lods
sbbl
pop
pop
aaa
or
add
les
pop
xchg
pop
xor
movsb
into
movl
and
push
mov
dec
jae
mov
push
outsb
mov
pop
test
push
std
add
cltd
fldcw
and
adc
js
loop
xchg
push
repz
inc
cs
lahf
pop
test
pop
cmp
sarb
sbb
mov
xlat
pop
sub
dec
adc
cld
rorl
daa
inc
cmc
jno
mov
out
mov
test
xchg
hlt
pop
aad
das
mulb
dec
sbb
inc
xor
aam
xchg
ret
inc
xor
ret
in
add
mov
push
mov
cmpsb
inc
adc
mov
sub
adc
loopne
mov
jo
sbb
incb
xchg
sbb
dec
fistpl
push
loop
mov
lcall
mov
icebp
xlat
in
xor
push
mov
xorl
sbb
xchg
sbb
xchg
lret
rorl
mov
inc
pop
cwtl
and
push
clc
inc
jb
mov
lahf
dec
cmp
nop
mov
pop
dec
push
cmc
cmpsl
test
pop
sbb
adc
es
es
mov
cmc
mov
pop
dec
int3
jb
add
loopne
sbb
mov
loope
mov
cmc
ss
mull
jb
and
inc
inc
xchg
push
adc
adc
sbb
shrb
sbb
mov
fildl
fstps
mov
insl
and
xchg
dec
ds
add
cmp
ljmp
fs
mov
pusha
mov
pop
add
adc
inc
mov
loop
xchg
pushf
jecxz
sub
into
cmp
xchg
adc
aam
xor
outsb
lock
sbb
pop
mov
test
out
pop
or
adc
add
xchg
inc
mov
or
aam
aas
popf
pop
cmpsb
jne
shrl
push
xorb
jae
mov
mov
jo
dec
and
add
fwait
mov
jle
hlt
movsb
lcall
push
jnp
xchg
xchg
arpl
aaa
jae
mov
in
lcall
add
rorb
pusha
sbb
inc
sub
loopne
pop
mov
inc
jo
jle
stos
lock
movsb
add
push
and
in
pop
cmp
fidivrl
pop
andnps
pop
jge
jbe
test
ja
repnz
push
insl
mov
push
mov
xchg
jecxz
add
and
xchg
xchg
out
inc
jcxz
fninit
daa
into
fisubrs
pusha
sbb
mov
cwtl
jo
cmp
jg
in
lock
mov
repnz
nop
mov
mov
pop
sbb
push
outsl
cltd
pushf
push
mov
test
cmpsl
hlt
js
jbe
or
daa
mov
adc
fsubs
adc
sub
mov
inc
movl
sbb
out
lods
or
daa
shrl
jle
and
stos
shll
ljmp
xchg
inc
adc
push
mov
rcl
push
pop
inc
popf
xor
inc
incl
mov
dec
lea
jb
cmp
das
push
andl
and
and
pop
mov
ret
mov
jge
leave
adc
inc
xor
daa
xor
scas
and
imul
js
les
and
lret
or
jecxz
ss
iret
test
sbb
data16
adc
inc
sbb
fdivrs
insl
pop
in
add
pop
mov
jnp
outsl
dec
cli
and
xor
pop
pop
stos
je
xor
jmp
add
add
mov
cmp
call
xor
cmp
aas
jp
add
xchg
dec
imul
cmp
pop
cs
cs
pusha
or
jae
mov
les
gs
inc
xorl
jbe
adc
shrb
sub
cld
mov
xorl
out
push
je
inc
sub
ret
icebp
push
call
adcl
push
stc
in
sub
adc
fstpl
fisttpl
aaa
inc
sbb
cli
cltd
jp
and
and
pop
in
loope
inc
je
ds
clc
dec
add
push
movsl
cmpsb
and
adc
push
cmc
xchg
sarb
out
pop
outsl
jmp
mov
test
dec
cmp
adc
jne
cmp
dec
jne
stos
sarb
adc
fs
popa
insl
sbb
mov
pop
jo
ror
mov
call
cli
push
add
imul
cmp
out
out
push
in
adc
push
mov
xor
insb
xor
mov
aad
pusha
jle
pop
jo
xor
addb
cmp
jl
and
xchg
inc
inc
stos
mov
sbb
xor
fldt
scas
test
lock
xchg
adcl
or
cmp
fxch
cmpsb
shl
addr16
addb
jge
cmc
and
xor
test
fistl
cmp
je
dec
fstpt
lcall
jne
xchg
icebp
cmp
mov
das
fmuls
lahf
scas
clc
pop
lret
xchg
xchg
push
std
inc
stos
outsl
loopne
ja
in
enter
movsl
xor
cmpsb
bound
ljmp
xchg
jle
ds
push
outsl
pop
pop
aam
sub
daa
popf
push
test
cmp
imul
mulw
leave
sbb
xor
insb
jmp
mov
jl
mov
xor
xchg
mov
jno
scas
mov
movl
mov
lods
stc
frstor
pop
inc
xchg
jp
dec
les
mov
test
sbb
sub
scas
jae
jno
cmp
filds
ljmp
push
pop
int3
out
mov
movsl
fbld
push
pop
add
fmuls
adc
adc
cmp
inc
cmp
cmpsb
movsl
and
into
mov
pop
les
xchg
stos
cs
xorb
imul
cmp
mov
dec
arpl
subb
loopne
movsb
push
sub
mov
mov
in
mov
sub
enter
sub
sarl
dec
imul
lds
xlat
pop
push
xchg
mov
xor
lahf
and
in
stos
fwait
mov
int3
sub
adc
add
pusha
fsubrp
mov
add
or
push
and
gs
addb
dec
mov
sub
fisttpll
mov
out
mov
jb
add
jle
imulb
mov
mov
mov
sub
add
mov
xchg
pusha
ret
push
xchg
fidivl
mov
enter
fiaddl
jg
hlt
push
sbb
jle
cmp
fimull
fstpl
xchg
out
fimull
gs
je
mov
in
xchg
mov
adc
cmpsb
enter
cltd
mov
push
sbb
mov
shlb
imul
xchg
test
and
xor
cmp
mov
adc
lea
ss
mov
pop
flds
aam
pop
mov
push
add
mov
pop
popf
pop
in
jo
cmpb
sub
int3
sub
pop
push
adcb
bound
push
in
cmp
fdivrs
jnp
lret
mov
fsts
andl
fsub
push
ds
inc
nop
mov
int3
pop
pop
out
dec
cmp
sub
sub
aad
mov
stc
cmp
inc
leave
sbb
andl
pop
mov
add
sub
cld
movsl
lods
pop
add
dec
xchg
mov
hlt
into
mov
add
imul
negb
lcall
pop
ret
mov
or
mov
js
sub
setp
add
insb
mov
and
inc
cmp
dec
js
push
cmp
insb
xchg
and
cmp
jo
cli
insl
xchg
fisubrs
lcall
adc
lcall
rorl
loopne
js
cmp
or
sarb
inc
adc
xchg
in
mov
out
test
sbb
mov
mov
or
or
lock
pop
icebp
pand
out
dec
jge
out
push
repz
mulb
xchg
jo
sbb
sbb
ds
lds
inc
int
sbb
or
ret
andb
das
sub
inc
sub
test
nop
aaa
test
pop
pop
push
cmp
xor
pop
iret
or
fnstcw
fcoml
xchg
cmp
es
cs
inc
or
xor
mov
cmp
ret
cmpsb
add
mov
incb
cmp
cmp
mov
fucomi
out
popf
pop
mov
adc
sbb
js
or
xchg
adc
push
mov
dec
push
dec
fadds
jl
sub
out
mov
push
sub
and
data16
cmp
imul
sub
xchg
cmp
xchg
lods
pop
sbb
jbe
xorl
out
aad
call
add
sub
dec
jl
aad
icebp
call
aam
and
enter
and
mov
testl
pushw
sub
pop
outsl
xchg
cmpsl
ljmp
out
ja
push
jl
or
mov
pop
sub
mov
jo
fcoml
xchg
and
pushf
lretw
lods
jge
adc
mov
sahf
or
jl
or
xor
arpl
adc
sbb
fxch
and
lds
in
inc
mov
sub
inc
adc
xor
cmp
jecxz
test
loope
pop
adc
loopne
jp
or
jo
jno
xor
pop
out
outsl
dec
cmp
mov
imul
xchg
push
loope
pop
xchg
adc
aad
movsb
sbb
push
pop
vshufps
push
das
out
mov
xor
inc
outsb
push
rcr
in
and
rcll
mov
cmc
sti
fisubrs
sub
sbb
fisttpl
mov
sbb
addl
mov
icebp
xor
cmp
in
test
mov
mov
or
jge,pt
shll
jecxz
lds
xlat
cld
pop
mov
xchg
and
cmc
clc
adc
leave
insl
pushf
push
jg
jnp
lahf
in
adc
test
je
mov
aam
jmp
mov
or
in
ljmp
stc
inc
aas
xor
cmp
adcl
or
cmc
jmp
adc
xchg
addps
test
mov
and
jns
adc
mov
xor
adc
lret
jg
jl
lods
adc
test
fucomi
loop
or
xchg
popa
hlt
cmp
pop
lds
fdivrs
fistpll
or
dec
pop
mov
push
in
cmp
inc
subb
nop
cmp
in
push
ss
fimuls
mov
rorb
pop
pusha
loop
outsl
mov
mov
and
add
jecxz
sub
mov
lea
add
bound
mov
sarl
pop
addb
popf
sub
adc
je
scas
pop
sbb
sarl
aam
sub
sbb
pop
pop
pop
mov
jae
sbb
movsb
pop
sub
jo
inc
popa
int3
adc
jo
scas
mov
xchg
lods
rorb
cmp
daa
int3
out
test
js
inc
and
mov
mov
lea
cs
sbb
mov
mov
sub
mov
mov
and
les
fadd
push
xor
and
ljmp
cli
cmp
jbe
outsb
push
sbb
jo
imul
lret
or
lods
jle
jns
dec
cmpsb
add
adc
mov
xchg
cmpb
cmpsb
pop
adc
movsb
sub
int3
sbb
inc
mov
mov
fisttpl
push
adc
xchg
add
roll
sub
daa
les
movsl
hlt
insl
test
cmp
enter
orb
daa
or
orl
sub
in
imul
adc
jecxz
add
cs
bound
mov
inc
pop
aam
into
mov
inc
and
xchg
ffreep
loop
xor
cwtl
fadds
sub
mov
fs
cwtl
jp
inc
das
mov
cld
cwtl
arpl
push
push
pop
sbb
mull
inc
test
push
dec
mov
and
sahf
or
fsts
or
dec
loope
dec
stos
mov
add
cmp
mov
jecxz
lds
push
mov
movsl
fadds
data16
push
cli
leave
and
and
add
xor
js
cmp
rorb
and
mov
push
in
inc
out
incl
jb
adc
mov
adc
add
cs
mov
lods
js
int
sub
xchg
adc
mov
pushl
rclb
test
jne
outsb
or
sub
inc
sub
xchg
pushf
ror
mov
mov
lock
sub
pushf
jnp
les
mov
ret
adc
bound
mov
push
test
xchg
ds
lret
insb
mov
mov
imul
test
jns
out
mov
push
cld
mov
jb
jae
or
pusha
stos
arpl
sub
stc
out
jecxz
xor
in
push
cmc
sarl
idivl
fcmovnb
arpl
and
repz
jo
addb
jle
sahf
jmp
mov
sbb
rcrb
or
cltd
mov
pop
or
mov
dec
test
xor
add
lods
fnstcw
sub
mov
cmpsl
adc
jno
cmp
repnz
push
xorl
jae
push
mov
and
loopne
inc
sub
sub
test
pop
mov
mov
out
sub
jl
add
mov
push
push
int
push
fisubs
push
jbe
cs
mov
and
sub
pushf
sbb
out
addr16
out
jecxz
jno
cli
xchg
cmpsl
push
xchg
outsb
mov
cmp
adc
sti
xchg
in
inc
aas
shl
test
test
fstpt
xchg
xor
mov
inc
sbb
repnz
or
fiadds
dec
fs
movsl
adcl
push
lcall
inc
test
imul
sbb
mov
pop
push
aad
jne
bound
xor
inc
aaa
movsl
inc
dec
adc
push
mov
insb
mov
cmc
pop
mov
ret
leave
sub
push
fsubl
xchg
imul
adc
sbb
push
rcl
cli
pop
push
int3
aaa
imul
lods
jp
xchg
test
cmpsl
pop
xor
and
dec
lods
xor
push
xchg
dec
sbb
sub
and
nop
dec
cmpl
aas
xchg
out
and
psubusb
add
dec
arpl
jl
mov
pop
div
test
outsl
shll
jne
repz
xor
jmp
inc
loopne
jl
test
gs
sbb
loopne
xor
dec
xlat
movsb
or
jg
dec
sub
lock
test
movsl
frstor
ret
imul
dec
dec
scas
and
pop
push
add
sub
and
fwait
hlt
sbb
mov
xor
stc
mov
adc
das
repnz
leave
mov
jecxz
dec
call
les
popf
adc
mov
popa
dec
push
lcall
dec
call
leave
jmp
lcall
add
cmp
pop
add
popa
arpl
enter
aas
mov
push
sbb
mov
clc
hlt
aad
cs
and
jo
imulb
stc
add
adc
ss
push
ja
push
in
push
or
and
orb
jb
and
mov
jmp
pop
dec
lret
cmc
outsl
adc
pop
movsb
aam
jbe
sub
jno
out
cmpsl
sbb
mov
cmp
test
popa
push
mov
je
idivl
dec
lods
cmp
fs
imulb
insl
xchg
pop
mov
leave
adc
mull
les
mov
scas
bound
popl
int
adc
pusha
jmp
or
and
test
jne
int
subb
es
insl
mov
mov
mov
or
and
pop
xchg
sub
cs
lock
daa
adc
add
xchg
inc
divl
or
fistl
cli
out
mov
pop
cmp
xchg
stos
jge
xor
cli
out
sbb
mov
mov
aas
scas
ret
std
int3
push
bound
jo
jae
add
shrb
mov
xchg
pop
sbb
outsl
sbb
inc
sbb
xor
or
jp
divl
inc
jge
mov
mov
mov
in
lds
xchg
outsb
clc
adc
mov
hlt
add
lock
repnz
adc
sbbl
jae
imul
ret
sub
or
mov
jmp
jo
sti
cmp
loope
pusha
mov
div
imul
push
mov
inc
dec
lret
js
or
jmp
fnstenv
jg
movsb
sahf
in
mov
push
push
popf
sbb
rclb
add
movsl
lret
xchg
add
insb
adc
mov
cld
mov
out
mov
xor
push
pop
push
adc
cwtl
aad
dec
cltd
jl
sbb
sub
test
or
mov
or
jmp
fidivrl
jle
mov
ljmp
xchg
xor
fisttpl
fisubrs
pushf
xchg
fcmovnu
jns
xchg
push
xor
loopne
les
aaa
jno
jle
sarl
push
jp
pop
popf
xchg
mov
sub
test
jb
mull
cli
insl
xchg
push
sarb
out
out
pop
insb
and
aas
add
outsl
lea
pop
add
push
adcb
pusha
movsl
test
stos
or
cmpsb
mov
rcrb
mov
push
adc
mov
pop
push
xchg
add
das
test
js
es
sbb
push
pop
pop
xchg
mov
mov
xor
xor
pop
and
push
iret
in
lret
test
adc
push
mov
or
push
popa
push
jp
arpl
nop
dec
stos
xchg
fldl
xchg
cwtl
and
pusha
mov
or
mov
test
pushf
jno
mov
imul
das
pop
or
jp
ja
or
mov
adc
popa
ss
mov
mov
pop
shlb
jbe
imul
add
cmp
push
push
jl
test
sub
gs
fists
std
fidivrs
hlt
sub
data16
cmp
add
cmpsb
adc
dec
push
pop
xor
cmc
lahf
ljmp
ret
cwtl
lods
sub
shlb
inc
daa
xor
sbbb
data16
cmp
pop
add
jo
pushf
int
mov
adc
add
push
idivb
inc
adc
dec
xor
sub
rorb
aam
add
stos
xor
ret
lds
int3
fisttps
pop
pop
dec
mov
and
int3
push
add
and
test
xchg
mov
mov
xchg
and
nop
and
fstl
orl
adc
fiadds
xor
js
sbb
int3
jae
mov
pop
xchg
mov
lds
addr16
pop
into
test
ja
imul
sub
jecxz
ret
pop
nop
and
stos
sub
loope
push
shrl
jne
rcll
push
out
jmp
xchg
jmp
aaa
addr16
jnp
leave
xchg
mov
push
dec
inc
add
sub
fadd
nop
div
fnsave
mov
jmp
ret
add
lock
mov
mov
add
push
and
dec
pop
sbb
lahf
xchg
mov
test
sbb
movsl
mov
addr16
or
sub
pop
xor
addb
jge
in
ss
shr
lret
stc
xor
xor
loope
sbb
mov
or
pushf
push
daa
xchg
mov
punpckhdq
icebp
ret
pop
aaa
test
push
movsb
shr
jo
mov
pop
sbb
mov
movsl
sub
or
mov
sbb
and
pop
clc
and
mov
mov
cmp
xchg
cltd
add
imul
out
sbb
jl
out
daa
test
leave
fdivs
mov
iret
xor
and
mov
pushf
push
jae
pop
cmp
incb
cmpsb
pop
insb
sub
pop
cmp
mov
mov
jne
mov
fsubrl
sbb
xor
or
jecxz
jp
inc
jb
push
mov
das
and
xor
xorb
pop
xchg
sub
es
int
xlat
ja
xchg
inc
insb
clc
std
jnp
in
cmpsb
mov
into
add
xor
sahf
fmull
cmpsl
shl
jecxz
dec
jmp
frstor
add
neg
mov
mov
push
jb
adc
push
sbb
and
mov
xlat
idiv
xor
mov
sti
pop
or
jp
add
or
mov
xchg
xor
dec
add
sub
loop
test
lock
pop
xchg
dec
push
scas
scas
cmpsl
inc
pop
icebp
mov
add
out
outsb
das
xor
xchg
stos
sar
icebp
scas
pop
popa
sbb
leave
xchg
enter
inc
inc
jecxz
add
pop
das
dec
insb
rorl
dec
dec
in
mov
xchg
xor
inc
jmp
out
fnsave
lret
sub
aas
jecxz
loop
xor
pop
or
mov
std
add
out
addr16
pop
inc
aad
int
cmp
adc
adc
ja
movhlps
add
or
mov
ret
shll
out
cmp
je
xchg
insl
int3
out
sub
aaa
mov
pop
dec
push
hlt
das
cmp
mov
push
or
std
jle
ds
add
lds
testb
cmpsl
xchg
movsl
sub
push
mov
push
push
pop
cmp
outsl
shrb
test
xor
mov
cld
mov
mov
adc
mov
pop
cltd
daa
cmp
je
add
xor
pop
je
aam
push
push
iret
rcrb
out
jle
hlt
movsl
mov
ljmp
sbb
loop
out
mov
lods
adc
daa
imul
popf
xor
pmuludq
pop
mov
xchg
cltd
mov
pop
shll
mov
cli
xchg
or
faddp
or
cltd
mov
or
add
ret
cltd
negl
dec
add
lret
stos
cmp
mov
insl
jge
stos
mov
mov
nop
out
enter
icebp
jp
or
xchg
xchg
sub
xchg
ret
popa
sub
sub
ret
mov
fisttpl
push
xor
inc
or
mov
push
loop
xchg
dec
xchg
sub
jecxz
lods
js
fcoms
mov
pop
cld
sub
add
cmpsl
mov
mov
aaa
popf
pop
jl
lods
fimull
negl
push
lods
dec
jbe
fucomi
jae
daa
xlat
hlt
fwait
push
or
lahf
pusha
movl
movsl
dec
jns
push
xchg
pop
aad
sub
pop
test
sub
adc
data16
incb
addr16
sti
pop
cmc
out
push
loopne
cld
mov
cmp
cwtl
outsb
insb
jge
in
inc
pop
mov
dec
cmp
lock
sub
aaa
push
test
or
in
inc
addr16
lret
jo
jb
inc
pusha
jp
sbb
pop
mov
bound
stc
in
push
cmp
fnstcw
xorb
fdivrs
inc
out
cmpsb
or
shlb
fsubs
jle
enter
fstl
out
mov
mov
lds
cmp
cmp
pushf
dec
popa
mov
sbb
push
fcom
mov
int
jno
lods
pminsw
inc
cmpsb
adc
in
sub
mov
pop
xchg
mov
mov
sub
push
out
fcompl
roll
aaa
into
fcomi
jl
js
enter
cld
mov
push
pop
dec
jg
fwait
pop
testl
into
dec
jnp
test
add
sbb
sbb
adc
mov
aas
push
jae
xor
shl
jle
subl
insb
pop
jnp
mov
fcoml
movsb
xor
idivb
cmp
push
push
sub
lahf
mov
push
adc
cmp
daa
push
fcoml
lea
int
in
bound
lds
inc
mov
fdiv
jne
iret
fcmovne
xor
jmp
jmp
movsb
adc
les
or
mov
sub
pop
jge
xchg
setl
lahf
mov
mov
jge
mov
lods
cmp
out
sub
or
push
xor
pop
push
cmpl
das
mov
push
adc
out
addr16
xor
xchg
push
push
rorb
mov
ljmp
and
xchg
ja
jmp
in
faddl
fldl2t
subb
cmp
xlat
daa
stos
ljmp
ljmp
pop
into
addr16
mov
mov
imul
mov
xor
jnp
rcl
je
wrmsr
pop
sub
jne
inc
mov
cmp
mov
ffree
mov
cmp
scas
pop
mov
xchg
inc
std
int
fucom
pop
adc
push
rclb
ret
xor
mov
pop
push
inc
fidivrs
stos
dec
xchg
dec
mov
jb
xchg
lods
dec
pop
sahf
daa
in
add
ja
ret
add
iret
push
jb
mov
lds
cmp
xchg
push
aad
sub
inc
aam
xor
mov
xchg
inc
lret
rcl
xor
inc
lds
jmp
dec
jg
lret
and
adc
out
sub
ffreep
xor
jnp
mov
out
inc
inc
and
in
lods
clc
sbb
cmpsb
icebp
mov
sbb
jmp
sbb
filds
icebp
outsl
ljmp
lret
jp
xor
insl
jmp
push
roll
and
jle,pn
js
lcall
stc
je
inc
andl
movsb
xchg
in
inc
xor
test
pop
fdivl
xor
push
sub
pop
arpl
outsl
dec
mov
cwtl
adc
sahf
push
mov
outsb
xchg
xor
subb
pop
jecxz
sbb
inc
inc
cmc
push
mov
mov
stc
jne
push
lods
dec
and
mov
cmpsl
inc
je
adc
sbb
pop
fmull
icebp
ss
mov
push
ljmp
rcr
jbe
fwait
mov
mov
pop
mov
inc
and
test
inc
xor
mov
ja
fmul
scas
xchg
jne
xchg
xor
out
cltd
bound
pop
scas
repnz
shll
ljmp
test
push
add
push
fistpl
mov
adc
adc
push
pop
das
mov
mov
insb
jg
mov
aaa
and
sub
xor
push
outsl
stos
mov
test
or
into
ficompl
xchg
pop
loop
push
mov
xchg
clc
xor
das
jp
dec
fcmovnbe
cmpsb
cltd
test
mov
mov
jle
jp
add
cmp
enter
fdivrl
mov
jns
mov
ds
dec
popf
mov
add
adc
adc
pop
inc
push
xlat
stc
dec
packsswb
insb
aaa
movsb
xchg
mov
loopne
out
xchg
cmp
and
jg
push
mov
cld
sbb
xor
dec
inc
sub
push
jo
or
outsl
into
push
das
mov
lret
or
loope
mov
dec
xlat
xchg
xchg
sbb
xchg
ss
jl
dec
mov
jmp
push
hlt
push
mov
add
ror
mov
jle
xchg
fimull
or
sub
cmc
mov
insl
js
arpl
add
leave
js
sub
sbb
aad
gs
les
shlb
mov
rorl
push
mov
ja
hlt
push
jmp
test
pop
xor
xchg
outsb
aad
and
push
add
fs
cmpsl
jmp
mov
leave
mov
jne
cmpsb
dec
icebp
jo
aad
daa
jg
and
mov
jmp
sub
or
or
scas
xor
mov
divl
scas
sbb
stos
adc
movsb
sbb
sub
addl
cwtl
xor
ljmp
inc
cwtl
lea
popa
sahf
jns
pop
dec
shlb
mulb
sub
pop
fsubrl
test
fdiv
icebp
iret
je
sbb
lock
sub
xchg
fstpl
sub
sahf
fwait
cmpsl
in
jnp
fidivrl
ficoms
fucomi
js
stos
add
js
mov
add
jo
out
cmp
jp
cmp
fcomp
add
push
negb
push
out
mov
test
dec
or
sub
cmpsl
movsl
add
movsl
dec
aas
adc
mov
mov
aaa
fiadds
dec
cmpsl
ds
mov
dec
ja
out
xor
std
test
sbb
pop
adc
fldl
push
mov
sbb
mov
push
adc
or
mov
push
jbe
pop
movsb
test
mov
inc
push
insb
lahf
and
loopne
aad
inc
push
sub
jecxz
cmp
lret
mov
pushf
pop
cmc
jge
fldt
jl
fbld
js
outsl
imul
scas
push
jmp
outsl
in
ljmp
enter
shrb
mov
adc
std
xchg
cmc
jp
cmp
mov
addb
push
call
lahf
mov
or
aas
mov
andl
test
sub
test
ss
lret
das
loop
movsb
inc
xchg
fs
cmp
lock
and
xor
or
xchg
call
sti
push
insl
aad
sub
roll
repnz
orl
cli
ficoms
sahf
movsb
and
loopne
xor
insl
out
adc
lods
jle
js
dec
in
stos
mov
jecxz
mov
pop
cld
cltd
dec
cmc
push
dec
and
sub
push
shl
jb
popa
fildll
cs
sub
xrelease
and
cwtl
mov
jg
sarl
test
clc
or
idivl
xchg
xchg
xchg
push
hlt
mov
push
push
sbb
out
nop
mov
mov
cmp
jecxz
clc
and
inc
add
cltd
mov
test
or
add
sbb
jo
bound
mov
outsb
pusha
add
das
popa
mov
shrb
aam
testb
and
push
pop
mov
mov
ficoms
pop
ss
pop
mov
stc
xchg
pop
addr16
fists
dec
dec
and
push
flds
cmp
mov
or
test
and
sbb
dec
lods
inc
jb
mov
iret
outsl
fs
or
loopne
xchg
dec
bswap
pop
hlt
lds
fstps
add
std
lcall
ss
cli
xor
std
pop
loop
sbb
dec
mov
jbe
jmp
fimull
scas
dec
cmp
fbld
sbb
add
hlt
push
cwtl
lds
movsl
sbb
sbb
aam
faddp
and
inc
dec
outsl
je
cld
fcomip
inc
push
and
sub
jae
push
and
xor
sub
dec
xchg
pop
in
ret
scas
mov
je
mov
daa
mov
mov
mov
mov
lods
in
daa
push
sub
pop
xchg
mov
jecxz
mov
cmp
pop
push
mov
daa
cmpsb
test
out
or
mov
inc
sbb
xchg
pusha
jns
jg
xor
sbb
ja
jp
cmp
sahf
insl
imull
mov
mov
or
pop
inc
cmp
push
push
inc
cmc
add
pushf
sbb
mov
or
mov
adc
xlat
jmp
ljmp
in
add
mov
sbb
xchg
jge
mov
cli
xchg
outsl
dec
mov
cltd
out
mov
outsb
lahf
or
loop
int
mov
in
jae
jb
jmp
enter
dec
push
stos
mov
xchg
adc
in
adc
scas
xorb
cmpb
add
xchg
fiaddl
inc
ret
jae
mov
in
xor
outsb
orl
xor
mov
adc
out
adc
xor
das
ds
shrb
insl
lret
in
cmc
pop
popa
lds
mov
push
leave
mov
cmp
dec
mov
jae
pop
movsl
inc
xchg
mov
mov
insb
aad
sti
mov
clc
movsl
adc
gs
pop
add
int3
lock
cmc
adc
or
pop
ljmp
test
aas
lahf
jp
movsl
mov
cs
xor
inc
mov
jns
or
in
push
inc
jns
inc
cmp
push
sarb
mov
xor
sbb
dec
inc
std
dec
cmp
jp
arpl
popf
das
jnp
push
or
add
and
mov
mov
fstl
bnd
push
pop
xchg
jae
lahf
mov
hlt
jae
xor
mov
mov
pop
fistpll
in
test
lret
dec
inc
cmp
sbb
push
pop
xchg
divb
mov
in
lcall
repz
daa
les
pop
sbb
lea
jb
jns
inc
fst
jecxz
sahf
and
insl
adc
mov
call
dec
shlb
jo
push
mov
mov
jl
xchg
xchg
add
dec
nop
xchg
inc
push
sub
or
lcall
xchg
cmpsb
js
jecxz
lods
lods
pop
push
jns
jne
ja
es
xchg
jmp
mov
lret
dec
ds
clc
sub
sub
mov
jp
popa
bnd
dec
or
lahf
adc
add
add
lock
sbb
sub
mov
bound
xchg
push
xorb
mov
pop
lret
adc
sub
push
lahf
cli
push
stos
cmp
aas
cmp
adc
jb
dec
in
loope
les
pop
outsb
jnp
add
sub
mov
repnz
add
out
add
in
mov
aaa
aaa
ret
daa
int3
je
push
test
xchg
stos
rorl
mov
mov
cmp
pushl
fnstsw
outsl
dec
add
test
cld
mov
inc
mov
fsts
jbe
cmp
dec
mulps
outsl
repz
add
orl
loopne
mov
jg
jo
pop
inc
in
and
adc
pop
shl
enter
xchg
out
mov
and
ljmp
push
cmp
pop
pop
bound
dec
dec
mov
mov
inc
int
xchg
fcomi
inc
inc
sbb
or
loope
inc
sub
pop
mov
mov
xor
mov
jmp
mov
fidivrl
push
test
add
rcr
and
push
dec
sbb
adc
push
mull
arpl
out
outsb
iret
lods
mov
stos
cmp
adcb
cwtl
out
xchg
idiv
gs
push
ret
adc
stc
or
xlat
sbb
call
jns
add
push
xor
out
aas
xchg
outsb
lret
dec
jp
lcall
sti
push
xchg
jle
xor
add
pop
inc
add
push
cmp
jne
pushf
mov
pusha
out
xor
divl
pop
inc
cmp
shlb
lret
push
loop
shlb
xor
lods
loopne
adc
lds
call
xchg
cmp
lret
sbb
sbb
test
jge
jge
dec
addr16
fs
ja
lcall
or
sub
sub
adc
xor
cmp
push
ret
mov
xchg
push
out
cmpsb
ss
mov
mov
imul
jnp
or
stos
sub
fs
sbbb
in
arpl
pop
fstpl
mov
aaa
clc
xorb
les
lds
add
sbb
xor
movsb
jmp
xor
cld
test
notl
clc
push
fdivs
ljmp
daa
lret
sarl
std
aas
xlat
push
add
mov
sbb
loope
fidivrs
mulb
fimuls
andl
adc
andl
pop
or
out
push
in
icebp
addr16
adc
xor
movsb
push
adc
movsb
xchg
lods
fdivr
or
xor
loopne
adc
outsl
and
jmp
movsl
xchg
and
sbb
mov
outsl
vmovss
fs
cwtl
enter
data16
dec
or
add
and
dec
movsl
out
xchg
icebp
mov
fwait
pop
dec
cmp
xchg
jmp
mov
test
push
mov
mov
or
enter
xor
sbb
pop
dec
xor
dec
dec
xchg
dec
enter
js
xchg
dec
xchg
aaa
loopne
add
lcall
jecxz
scas
push
push
jp
es
icebp
cmp
in
xor
mull
inc
addr16
pop
movsl
das
inc
xor
cli
imul
jns
call
jecxz
jno
in
jnp
jae
jl
test
ljmp
adc
sarl
aas
in
aam
cmp
jns
out
mov
aad
push
inc
les
sub
adc
mov
scas
mov
mov
mov
push
or
mov
cli
out
xchg
aaa
sbb
mov
fidivrs
or
inc
cmc
hlt
and
sub
jne
andb
xor
xchg
out
sbb
push
adc
mov
vpunpcklqdq
dec
jg
push
fcomps
out
mov
dec
and
jmp
xchg
cltd
mov
dec
lds
cmp
sti
lods
ret
dec
sub
rorl
jecxz
inc
inc
cld
adc
sarl
inc
andb
fwait
js
mov
lock
jmp
push
lret
stos
lock
sbb
cs
xor
bt
fsts
shlb
cmpsl
ret
ficomps
push
mov
loope
cld
cmc
dec
mov
and
jecxz
sbb
adc
int3
sub
cmp
test
repz
jmp
scas
into
ret
scas
cmpsl
dec
xchg
sub
shrl
cmp
xor
xlat
dec
stos
iret
push
rcll
repz
outsb
cli
iret
add
mov
mov
adc
add
fildl
jo
inc
push
imul
cmp
daa
lock
cli
mov
or
mov
test
jp
cmpl
jp
and
int3
xor
jle
and
cwtl
cmp
sub
xchg
xor
cmp
mov
iret
mov
fstpt
jae
sub
dec
adc
stos
lods
data16
add
pop
pop
mov
outsl
jae
mov
lcall
cli
push
cwtl
jmp
sbb
rorb
jae
out
mov
mov
adc
rolb
or
jno
jns
jno
mov
lret
loop
fucom
pop
imul
mov
popf
push
inc
imul
fildll
call
and
jb
mov
cmc
jecxz
mov
inc
incl
cld
adc
mov
sub
xchg
push
icebp
or
mov
out
fcmovb
xchg
loopne
ror
ds
xor
mov
lds
scas
push
inc
cmp
sub
adc
inc
pop
inc
jnp
add
xor
sub
popf
jge
icebp
and
mov
sub
mov
xchg
mov
aaa
faddl
pusha
push
scas
cmp
and
dec
sbb
mov
and
mov
movsb
rcl
inc
mov
lods
mov
xor
pushf
rcr
xor
out
dec
out
in
enter
out
push
cli
inc
push
lds
negl
cmp
xor
ss
jo
cmc
addr16
add
xchg
cmpsl
cltd
iret
push
clc
loope
lods
loopne
mov
jle
mov
ja
dec
push
or
test
scas
aad
mov
cmpl
imul
sub
and
jl
pushl
ror
and
mov
outsb
rolb
xor
jnp
xchg
sahf
cmpb
and
xchg
xchg
dec
cs
mov
imul
inc
jns
jmp
add
jnp
jl
mov
push
inc
gs
push
mov
xchg
test
das
lods
cmp
cmp
js
jno
push
and
out
xor
mov
adc
shrb
or
push
pop
pop
test
outsb
ss
cmp
cmp
sahf
out
and
stos
fcomp
dec
js
add
pop
sti
adc
sbb
pop
into
nop
into
sbb
loop
hlt
xor
sbb
inc
inc
repnz
ja
mov
sbb
movsl
out
cs
jo
xlat
mov
ret
das
mov
and
out
sbb
repz
shlb
test
pop
hlt
frstor
xchg
lret
mov
setno
testb
pusha
xor
pop
lock
sub
jecxz
sbb
aad
adc
movsl
gs
and
fbld
int
mov
xor
and
out
or
add
mov
sbb
mov
mov
xor
inc
das
mov
scas
aam
mov
or
popa
clc
mov
adcl
add
imul
addr16
loopne
xchg
cs
xor
call
inc
push
hlt
add
popf
fistpl
in
inc
loope
leave
dec
mov
out
pop
cltd
insl
sbb
mov
movsb
adc
fs
enter
mov
gs
inc
adc
lret
hlt
test
adc
call
sub
ja
sub
in
mov
int
cmpxchg
jnp
enter
ret
gs
mov
arpl
mov
pop
in
cltd
dec
bnd
aaa
dec
or
inc
sub
adc
add
add
lret
add
push
aad
jne,pt
sub
or
sti
bound
cmp
inc
fs
adc
jbe
fbstp
inc
shrb
sub
mov
repnz
mov
lods
ljmp
lods
faddl
push
in
inc
push
and
imul
in
cmpsb
fsub
ss
or
nop
mov
inc
fisttps
dec
xor
xchg
push
or
cwtl
xlat
xor
xchg
mov
adc
leave
aam
add
push
cmpsb
loopne
xchg
jb
jp
subl
add
cli
bound
rcrb
sub
inc
cwtl
gs
scas
out
aam
fcmovnbe
push
cmpb
cmpsb
mov
xor
push
loopne
mov
loope
jnp
out
sub
pusha
and
cmp
jns
and
inc
adc
push
pop
ja
out
jne
imul
gs
and
xor
lret
daa
sub
pop
ljmp
loope
jbe
xchg
push
add
out
cmp
bnd
inc
jmp
movsl
cmpsb
mov
dec
pusha
popf
pop
cmp
sarb
fldenv
and
faddl
out
stos
xorl
in
or
repnz
cmp
movsb
dec
call
jo
xchg
cmovle
mov
loopne
sbb
xor
mov
fwait
dec
lret
lods
out
jle
out
push
sub
adc
dec
out
cltd
outsb
xchg
adc
dec
cmp
out
clc
icebp
pop
xlat
mov
mov
out
out
pop
lret
xor
rorl
pop
sub
int3
inc
inc
enter
jmp
adc
loope
out
fisttpll
mov
inc
jno
push
dec
test
mov
push
dec
addl
ficompl
mov
movsb
push
xchg
adc
shr
mov
pop
xchg
ret
sahf
loope
pop
add
pop
call
imul
out
pop
mov
das
add
insl
jnp
pop
repz
cwtl
mov
add
pop
xor
aaa
mov
cmp
out
or
scas
push
insb
xchg
scas
pop
sub
fcomp
fcmovbe
mov
lds
cmp
loope
enter
sbb
jne
mov
pop
fwait
sbb
jnp
std
iret
xchg
hlt
ss
jb
loopne
ss
add
in
leave
jg
pop
add
mov
mov
push
lds
xchg
je
sti
int
into
dec
push
test
adc
mov
sti
movsl
jae
jo
es
fistps
cmpsb
loop
pop
push
mov
rorb
or
shl
lods
and
popf
rorb
lods
add
mov
push
outsb
push
mov
jns
pavgb
pushf
jae
inc
push
in
test
inc
mov
jecxz
jp
push
sub
hlt
sbb
rolb
mov
jecxz
adc
inc
sahf
cmpl
ret
iret
add
icebp
dec
and
inc
sti
lret
mov
sar
add
dec
cmp
mov
stos
inc
scas
pop
inc
fmull
jecxz
mov
cmc
push
jo
aad
pop
loopne
outsb
mov
adc
mov
test
rorb
insb
gs
ret
add
aas
mov
cmp
arpl
enter
loope
rcll
lods
xchg
inc
xlat
lret
fwait
or
dec
pop
mov
ret
push
inc
mov
bound
addr16
imul
push
insb
popa
insl
js
sbb
ret
inc
cmp
mov
push
clc
dec
shlb
sarl
movsb
jo
loope
popa
adc
add
sbb
popa
adc
or
imul
pop
fcomi
insl
inc
add
mov
pushf
cwtl
adc
dec
mov
nop
std
fwait
decl
push
fstl
adcl
in
pop
mov
leave
gs
sbb
outsb
fcoml
jae
mov
pop
ljmp
and
shll
mov
mov
or
push
pop
and
dec
sub
pusha
jg
cmpsb
std
jbe
cs
sbb
pop
add
insl
iret
push
bound
dec
sahf
push
cmpsb
repz
mov
mov
mov
icebp
push
adc
mov
push
push
lods
mov
arpl
loope
dec
decb
inc
pop
lock
push
jae
movsl
jno
mov
int3
mov
stc
aaa
dec
ja
xlat
jg
jmp
sbb
lret
mov
push
fiaddl
ret
cmp
loope
repz
cmp
popf
sbb
ud1
xor
and
movsb
jg
mov
sahf
test
jle
mov
aad
cmp
pop
out
and
sbb
jg
sbb
mov
fisttps
cmp
inc
shr
insb
cmp
pusha
cltd
lods
cmp
mov
sbbb
int
cmp
cmp
xchg
mov
pop
in
mov
mov
mov
xorl
xchg
gs
adcb
dec
ret
adc
and
mov
shrl
push
push
out
cmpsl
negb
jmp
pop
in
and
loope
fxch
dec
push
enter
loopne
or
dec
jo
ljmp
sbb
dec
mov
scas
pop
adc
outsb
ret
xor
dec
dec
jge
mov
les
mov
jle
push
fcmovnu
int3
mov
sti
mov
or
movsb
jae
rorb
add
sbb
mov
sti
cmpsb
push
jns
pop
jae
sbb
mov
adc
jp
in
test
sti
stos
std
cmp
push
cmpsl
inc
sbb
bound
mov
mov
cmpsb
mov
pop
mov
dec
lret
mov
xchg
sub
push
mov
cmp
cld
or
add
ljmp
mov
dec
cs
mov
mov
and
mov
and
outsl
popa
paddd
inc
pop
push
sub
jb
mov
push
jl,pt
dec
dec
cmpsb
fstp
xchg
sbb
and
jnp
out
jae
and
adc
inc
push
push
or
data16
adc
xor
mov
stc
xor
pop
das
enter
fwait
outsl
enter
pop
roll
mov
add
jl
test
call
jo
adc
lret
push
xor
into
jno
jg
aas
push
dec
xor
or
iret
pop
push
clc
dec
xchg
mov
push
add
sub
rolb
stc
and
mov
int3
fsubrl
pop
jg
lods
dec
cltd
stc
insl
xor
and
notl
fisubrs
stos
hlt
jl
std
mov
popf
jl
decb
mov
imul
pop
fwait
ds
addr16
ds
adc
ret
popf
pop
enter
xorl
sbb
repnz
inc
mov
mov
sbbb
enter
jg
jo
ja
subb
pop
ss
or
mov
in
dec
jge
lcall
push
jnp
sbb
xchg
sti
pop
jo
or
rorl
sarl
loopne
lea
push
loop
repz
xchg
mov
xor
loop
adc
or
movsl
jne
ret
fildll
ja
shlb
ljmp
xchg
fisttpll
jo
dec
lret
mov
add
clc
xchg
es
or
repnz
xor
idivb
clc
sub
sarl
in
lock
xchg
je
xchg
cmp
sub
adc
dec
popa
inc
xlat
lds
xchg
push
push
mov
or
stc
mov
sub
mov
sahf
mov
je
mov
sub
enter
out
dec
cmpsb
int3
pop
imul
in
mov
cmp
in
clc
std
and
leave
inc
sub
or
mov
loop
out
andb
xchg
in
cmpsl
pusha
arpl
xchg
xor
jnp
or
sub
lret
jb
cltd
sahf
mov
add
push
lea
rcrl
xor
jp
lods
adc
jge
push
gs
rclb
cli
mov
ficoms
jmp
scas
jle
xor
sar
jl
mov
xchg
pop
addr16
adc
call
jo
negb
scas
fcoml
les
push
mov
sub
pop
movsl
push
sbb
fcmovb
inc
pop
dec
xchg
xor
sbb
inc
cmp
sub
pop
cmp
arpl
loopne
rcll
pop
sub
jle
xchg
adcl
ret
fsub
lret
pop
mov
mov
jmp
bound
mov
and
rclb
ret
jns
mov
xor
out
lea
test
addr16
clc
jl
xchg
jo
push
sti
arpl
lret
rcl
jo
jle
dec
inc
in
in
dec
in
xor
sbb
sub
pop
fstpt
fcomp
adc
cmpsb
add
outsl
out
push
cli
cmp
push
pop
push
and
gs
iret
jl
loope
sub
add
test
fs
stos
push
jne
xchg
nop
and
and
das
push
insl
mov
in
lret
popa
push
jecxz
adc
mov
xchg
and
push
jnp
and
pop
inc
pop
mov
call
icebp
jo
jmp
stc
mov
jns
imul
cltd
lods
and
pop
and
ficoms
call
inc
mov
popf
inc
adc
dec
or
mov
jo
sahf
inc
pop
test
push
or
ss
mov
loop
stc
popf
push
loopne
insb
int3
filds
mov
xchg
cmc
dec
sarb
jmp
icebp
js
push
imul
popf
and
cmp
pop
cmp
out
ss
hlt
out
cmpsb
jl
sbb
cmp
and
jae
mov
in
mov
jo
pop
xchg
xchg
mov
sbb
mov
imul
mov
js
or
jge
cmp
push
mov
xor
xchg
popf
mov
mov
push
push
mov
mov
test
decb
adc
jb
nop
mov
imul
cmpsl
test
pushf
cld
add
out
aaa
rcrl
inc
sbb
call
push
clc
rcl
sub
es
jp
into
inc
mov
inc
imul
jle
loope
mov
lds
and
hlt
xchg
nop
jbe
icebp
sub
sbb
jae
or
ret
cmpl
mov
lds
push
lahf
mov
mov
inc
lea
lea
xchg
call
test
sti
inc
outsl
xchg
ret
pushf
pop
jmp
sub
or
insl
push
test
mov
and
jne
cwtl
ffree
call
loopne
jecxz
int3
pop
pop
cmpsb
adc
jb
je
push
sahf
xchg
add
and
leave
sub
dec
jle
jne
shl
inc
cmc
pinsrw
cltd
cs
fwait
insb
dec
pop
into
pop
xchg
in
imul
sub
pushf
adc
aad
jo
lock
pop
pop
or
lods
push
fdiv
or
cmp
call
mov
sbb
ss
push
mov
lods
push
mov
jo
sbb
leave
adc
add
mov
lds
filds
popf
cmpsb
xor
pop
movsl
inc
dec
mov
push
mov
push
adc
daa
cs
jg
fistpll
inc
adc
leave
test
out
and
xchg
cmp
loope
repnz
push
pushf
jmp
adc
in
mov
ja
dec
pop
xchg
inc
leave
and
cltd
jle
imul
bound
xchg
adc
int
inc
aas
sbb
fimuls
stc
push
mov
ret
push
arpl
movsb
popa
roll
push
push
cmpsb
or
sub
mov
mov
mov
xor
dec
stc
or
call
call
sbb
mov
ret
out
dec
push
and
insl
push
pop
fsubrl
inc
ss
popf
arpl
adc
jle
shl
leave
ja
push
adc
xchg
movsb
pop
sbb
bound
xor
pop
adc
dec
jnp
stos
mov
out
and
int
xchg
popl
dec
sub
aad
xchg
ficoms
popa
sbb
stc
loopne
or
cmpsl
push
sbb
and
pop
sti
popf
jmp
add
into
pushf
add
cmp
adcb
sbb
lods
cmpl
sub
cld
dec
fcmovne
aaa
xchg
shll
push
mov
mov
and
sub
sub
jne
mov
in
jne
pop
iret
lret
fnstsw
or
int3
dec
cltd
push
xor
add
in
pop
repz
or
sbb
inc
lcall
gs
lret
inc
jno
into
nop
dec
repnz
outsb
repz
add
out
push
es
xchg
inc
jp
std
mov
jecxz
xor
fnstenv
sbbl
and
mov
lds
ror
sti
aad
jo
dec
lret
and
lock
push
adc
pusha
pop
sub
or
scas
sbb
lret
loopne
xchg
sub
rcr
mov
mov
shl
jp
push
iret
jb
sbb
outsb
mov
adc
inc
lods
mov
insl
les
jno
push
xor
les
jge
lcall
call
mov
inc
inc
testb
inc
adc
mov
es
inc
jmp
insl
cmc
pop
sub
inc
aad
lds
xor
adc
fstp
data16
cmp
push
xlat
sub
lds
daa
ficompl
ds
mov
xor
sahf
mov
xchg
mov
int3
xchg
cmp
add
mov
pop
pop
pop
mov
cmp
sub
stos
aad
shlb
inc
out
push
iret
sbb
cmp
cmc
dec
imul
add
insb
xchg
das
sbb
cmpl
push
test
cmp
into
cmc
dec
pop
pop
cmp
ret
idivl
add
ja
mov
hlt
jbe
mulb
cmp
int3
ficomps
sub
sbb
jno
xor
cmp
or
std
push
or
sub
movsl
aaa
out
mov
or
xor
hlt
and
push
loope
push
fisubrl
sub
xlat
filds
xchg
arpl
xlat
xorb
popf
mov
dec
pop
jle
in
cli
cli
jecxz
jecxz
scas
out
sub
ljmp
loope
mov
pop
stc
ret
xor
xchg
sub
ret
in
push
adc
inc
andb
scas
addr16
cltd
pusha
sbb
jae
xchg
ja
dec
jge
int
rolb
adc
mov
rclb
cltd
mov
ret
addb
shrb
lahf
jle
iret
cld
push
sub
nop
adc
push
or
mov
mov
pop
or
mov
mov
jae
mov
shrl
sti
mov
ds
and
fiadds
cmp
jmp
lret
das
push
jb
push
push
sahf
mov
ret
lds
and
adc
or
imul
xlat
mov
ljmp
dec
cltd
cmp
nop
fs
fwait
cmp
sti
push
sbb
xlat
js
sbb
mov
mov
push
mov
fsts
pop
pop
cmpsl
fcmovb
pop
cmpsl
rcrl
xor
cmp
mov
mov
xchg
mov
pushl
les
fisttpll
jle
inc
cmpsb
fstp
int
ror
aaa
movsl
mov
xor
jnp
add
in
xchg
mov
cmp
paddsw
or
enter
dec
dec
cli
pusha
testb
out
or
sti
aad
sub
out
into
fbld
popa
jbe
mov
xchg
pusha
test
int
mov
clc
xor
ficomps
stos
mov
adc
sbb
fistpll
and
test
jns
and
pop
sub
cmpsb
cli
out
mov
pop
rcrb
fimuls
mov
movsl
loope
fnsave
pop
sahf
dec
flds
rorb
insb
xor
cmp
test
lcall
sub
dec
sbb
aam
xor
push
pop
cld
stos
mov
repnz
adc
mov
mov
adc
ficoms
cmp
push
adc
cmp
popf
ret
out
in
pop
mov
fs
in
xchg
jae
call
loop
in
xor
inc
outsl
leave
sbb
or
jno
xor
hlt
data16
cmp
or
xchg
cmpsl
fldcw
xchg
pop
fs
inc
arpl
push
mov
rcll
leave
hlt
adc
arpl
je
sub
sbb
or
pop
lcall
xchg
cmpsl
mov
cli
jp
xor
fadds
lock
push
push
xor
inc
das
mov
and
hlt
dec
pop
flds
je
repz
pop
ficoms
bound
lods
push
xchg
into
xchg
pop
fs
lcall
jbe
sbbb
pop
mov
cld
or
mov
lcall
orb
das
repnz
lods
adc
sub
ficoms
lods
xchg
iret
inc
bound
push
jns
sbb
bound
shll
xchg
push
pop
mov
jns
int
aam
dec
leave
sti
mov
rcrl
popa
stos
sub
or
loopne
addb
idivb
add
test
pop
imul
lcall
ja
mov
adcb
xchg
mov
push
sub
xor
gs
jae
fwait
and
sub
orb
fnsave
jle
js
imul
jecxz
rorb
aad
push
subb
shl
push
cmpsl
sub
jp
xor
add
test
mov
pusha
dec
js
sbbb
lods
xor
out
iret
popa
adc
cltd
cmp
dec
mov
add
sub
pusha
inc
call
aas
lea
test
ds
loope
loopne
xor
xchg
pop
mov
xchg
mov
dec
push
ffreep
lret
aaa
lahf
push
dec
filds
mov
insb
out
xlat
jg
adc
notl
jae
cmc
std
mov
sbb
mov
xlat
mov
jno
dec
sub
pop
pop
lock
cltd
loope
push
sbb
lret
sbb
sub
xchg
mov
or
ficoml
dec
bnd
loope
cmpl
and
lds
outsl
mov
call
jnp
fisubs
sbb
clc
mov
stos
test
inc
ret
fidivrl
xor
jp
cs
sarb
icebp
loope
pop
ds
lock
xchg
stc
std
sbb
enter
std
imul
or
lcall
out
add
push
xor
inc
inc
js
xchg
in
cli
and
sbb
pop
ds
pop
leave
sbb
cmc
mov
push
xor
xchg
jge
push
jbe
lea
xlat
out
pop
arpl
lock
add
adc
das
jae
cvtdq2ps
sbb
push
clc
mov
xchg
cmp
jnp
push
repnz
pop
test
fsubs
stc
shrl
insb
sub
jae
jl
jle
pop
mov
repnz
mov
mov
shrd
jns
xor
push
pop
loop
pop
das
lds
sub
shll
mov
je
jne
mov
lea
mov
push
or
adc
inc
jge
pop
mov
icebp
dec
cwtl
out
push
enter
or
into
hlt
or
nop
sub
loopne
pop
sbb
push
inc
leave
jl
dec
push
das
sub
and
test
mov
push
add
mov
cld
jbe
das
rol
fs
mov
mov
push
inc
faddp
scas
push
or
loope
shlb
pusha
mov
xchg
mov
sub
bound
sub
mov
cmp
adc
outsl
cmp
push
mov
or
outsb
jns
mov
xor
in
sbb
dec
mov
fldcw
xor
cmp
jecxz
fcompl
mov
dec
cltd
dec
bound
lea
pusha
mov
test
ds
out
movl
mov
mov
push
mov
ret
filds
cmc
je
addl
lahf
cs
pop
mov
fwait
int
pop
jg
mov
cmp
lods
gs
nop
bound
mov
js
sub
and
fstpl
dec
lea
push
push
sbb
fists
or
dec
sub
and
arpl
lea
dec
adc
nop
inc
xchg
jne
xchg
clc
sbb
jge
sub
cmp
push
fimuls
jb
js
lods
jnp
mov
mov
popa
push
dec
push
pushf
jmp
push
sbb
sub
cmc
pushf
mov
push
fcoml
and
or
outsb
push
push
inc
pop
pusha
xchg
outsl
subl
addr16
xchg
mov
mov
cmp
cld
jp
jl
sub
xchg
jecxz
popf
in
adcb
mov
movsl
mov
push
xchg
and
pop
testb
pop
testb
mov
out
adc
shrb
push
mov
enter
jp
or
mov
sbb
icebp
dec
add
gs
push
outsb
push
lods
cs
jge
cltd
fidivrl
xchg
repnz
int3
cmp
mov
fsub
fisttpll
cwtl
and
inc
in
cmp
testl
call
js
addl
and
xorl
ljmp
mov
and
mov
push
sahf
popf
lods
and
fsubs
gs
push
inc
or
pop
mov
test
stc
mov
aas
lahf
lds
pushf
push
pop
dec
push
adc
or
lods
xchg
cli
xor
mov
add
xor
fbstp
outsl
adc
jmp
push
iret
aas
adc
or
das
movsb
cmpsl
sub
sbb
cmp
jns
add
and
push
and
cmp
imul
push
test
adc
sbb
rcrl
sti
sub
aad
xor
movsl
jbe
pop
dec
dec
addb
icebp
cmp
and
jnp
hlt
inc
inc
ret
mov
pop
xor
repz
outsl
push
scas
je
cmp
xor
cmp
sub
xor
xor
push
iret
aad
iret
mov
jno
jg
test
mov
test
mov
add
dec
mov
lods
icebp
mov
sub
mov
mov
data16
scas
xchg
push
adc
aam
sub
lods
inc
ret
inc
push
jl
and
lea
mov
dec
mov
sbb
in
mov
std
in
andl
mov
divb
mov
stc
arpl
addr16
jle
iret
add
aad
frstor
mov
jae
pop
aas
jo
mov
mov
lea
sbb
add
jns
cmp
xor
cmp
cmp
test
pop
cmpl
mov
jo
pushf
dec
sub
cwtl
daa
add
repnz
loope
lcall
das
mov
pop
outsb
pop
test
fucomip
bound
addb
cmc
cmp
idivl
aam
mov
ja
ficoms
loope
xchg
lret
or
mov
mov
cmp
hlt
or
mov
test
in
push
insb
push
test
insl
subb
inc
pop
loopne
pop
movsl
mov
pop
pop
or
dec
lock
loop
inc
pushf
push
lret
aaa
mov
imul
aam
jbe
shll
and
loopne
inc
add
mov
adc
test
xchg
add
pop
test
push
test
sahf
jp
stos
add
and
stos
jb
sub
das
pop
ss
mov
add
pop
bound
xor
icebp
cmp
ret
lret
lods
sub
test
cmpsb
adc
stc
cltd
roll
lcall
mov
push
jo
dec
pusha
add
popf
jae
sbb
xor
lods
mov
jns
ss
fucomp
mov
fistpll
mov
or
add
cltd
dec
pop
jmp
fwait
xchg
push
cmpsl
iret
ds
mov
jns
inc
inc
std
push
stc
es
jl
or
xor
es
adc
sub
sbb
dec
and
cli
mov
lock
rol
lcall
loopne
cmc
inc
and
pushf
pop
pusha
mov
adc
push
or
in
or
mov
dec
or
lods
mull
dec
outsl
cltd
outsb
outsb
mov
imul
mov
movsb
aas
add
pop
jle
add
sbb
cmc
pusha
mov
lock
push
cmp
mov
mov
add
clc
pop
int
sub
inc
fidivs
push
xchg
adc
arpl
ljmp
clc
jo
cltd
xchg
in
lcall
fs
push
and
xchg
stos
test
mov
shrb
call
inc
iret
sarb
cs
and
add
add
pop
dec
sub
inc
cltd
mov
in
sbb
push
aad
jecxz
push
cwtl
pop
insl
jl
sbb
insb
mov
ljmp
sbb
arpl
adc
jp
dec
stos
mov
rcl
and
or
int
mov
push
rcrl
loopne
or
pop
lods
aas
xchg
into
jne
cmpsl
ljmp
scas
mov
mov
adc
xor
and
mov
icebp
clc
popa
nop
sbbl
adc
sbb
addl
mov
into
pop
fildl
in
cmovg
fidivs
ljmp
lods
mov
fwait
dec
call
lahf
jne
cmc
cmp
dec
pusha
fwait
nop
jbe
xchg
out
pop
cmp
popf
jbe
mov
mov
mov
adc
in
mov
xor
aad
cmp
mov
insb
xor
mov
mov
add
enter
fistpll
mov
scas
pop
cwtl
jge
and
addr16
xchg
ds
mov
xchg
pop
add
idivl
mov
mov
and
jmp
jle
pusha
stc
mov
or
mov
mov
mov
sbbl
mov
sbb
shl
outsl
insl
push
cmpsl
pop
lock
mov
lahf
sub
mov
sub
xor
pusha
sub
test
fwait
jne
adc
aaa
popf
lret
or
fstl
sbb
or
out
mov
add
neg
jge
mov
mov
jnp
aaa
and
outsl
test
mov
or
sub
jg
test
inc
or
fidivrl
mov
and
sbb
sbb
stc
cmpsl
and
sahf
mov
movsl
mov
flds
xor
inc
dec
lods
out
mov
jl
cmp
mov
adc
js
mov
add
and
adc
add
insb
sbb
xor
notb
or
lock
inc
xor
int
icebp
jo
add
fisubl
xchg
scas
scas
push
inc
mov
sbb
push
insl
popf
insl
lock
adc
mov
aas
mov
jl
and
mov
mov
lcall
cmp
pop
dec
insl
xchg
fidivrl
mov
pop
xchg
test
pop
orb
outsl
cmp
cmpsb
and
mov
cltd
in
scas
xchg
das
add
stos
lret
scas
orps
pop
pop
adc
pusha
sbb
test
adc
xchg
aam
lahf
xchg
xchg
mov
add
fucomp
jg
lret
sub
push
faddp
leave
test
shll
cmp
inc
adc
mov
push
fidivs
mov
cmp
icebp
mov
ds
dec
test
xchg
mov
les
pop
cmp
mov
lahf
xchg
jmp
sbbl
pop
cwtl
mov
fs
xor
cmp
add
out
lock
xchg
mov
jmp
dec
xchg
cmpsl
outsb
jnp
ja
aad
gs
mov
mov
sbb
lret
pop
xor
xchg
sbb
sbb
or
or
shll
lcall
sbb
aam
and
mov
push
mov
jp
and
stos
sti
lret
ljmp
icebp
mov
cmpsl
std
xchg
mov
ret
inc
outsl
cltd
mov
jnp
ret
arpl
pop
arpl
or
pop
pop
outsl
pop
inc
scas
cmpsb
add
mov
ja
push
sbb
iret
lret
mov
dec
pop
xchg
lret
xchg
lds
jecxz
mov
test
sub
jae
dec
dec
cmp
sbb
cmpb
add
sbb
pop
lds
sar
adcb
and
adc
jge
int
ret
stc
sub
adc
inc
sbb
xchg
and
sbb
xor
leave
dec
mov
pop
test
xlat
jno
pop
xchg
repz
dec
xchg
xlat
std
lock
notl
shlb
lret
xchg
leave
adc
aas
pushf
xchg
mov
ss
cmp
cmp
out
in
ds
jg
mov
outsb
cmc
add
push
jbe
mov
ds
ss
mov
adc
push
push
js
into
enter
xor
cwtl
or
jns
das
call
stc
cli
or
adc
mov
lods
or
push
mov
jo
inc
adc
fists
popa
test
mov
leave
testb
jge
xchg
stc
or
lahf
fistl
addb
into
add
jmp
cmc
scas
sbb
mov
out
inc
dec
push
in
jns
add
movsl
lret
mov
push
sub
stos
orl
or
mov
xor
push
loop
and
and
outsl
daa
inc
dec
pop
push
or
out
das
pop
inc
out
xor
into
je
mov
das
or
dec
dec
cmp
shrl
mov
xchg
stos
pop
inc
or
stos
das
lods
xlat
sbbb
mov
loop
or
btsl
pop
in
popf
cwtl
or
outsb
daa
cmp
mov
adc
mov
xor
stos
mov
rolb
lods
cmp
stos
aad
aaa
aad
int
fcmovbe
cmp
push
test
mov
movsl
js
jle
pop
rorl
int
add
lahf
mov
lcall
pop
push
lret
add
pop
pop
ret
and
pushl
das
push
jl
adc
pop
xchg
in
jp
cmc
cmp
sub
cmp
mov
jle
outsl
push
cmp
add
pop
jge
loopne
inc
or
dec
mov
aaa
adc
xor
arpl
int3
add
leave
out
jmp
ss
into
and
jae
xlat
pop
in
xlat
popf
mov
mov
mov
cwtl
push
daa
popa
mov
push
xchg
frstor
xchg
mov
ret
jo
mov
add
fwait
inc
das
test
aad
sub
insb
cli
enter
push
xchg
pop
mov
push
je
fisubrs
arpl
push
pop
movsb
inc
cmp
push
or
jecxz
cmpsb
adc
inc
jg
test
fwait
dec
pop
iret
in
xchg
sahf
sub
jp
imul
in
ret
add
mov
negl
xor
mov
fildl
insl
dec
add
or
mov
loop
gs
dec
in
jge
fdivs
mov
mov
shll
pushf
push
xor
pop
aad
mov
out
sbb
jecxz
or
aaa
mov
loope
mov
mov
and
fucomp
loop
jno
lds
insb
pop
fbstp
sub
xor
std
push
repnz
mov
adc
dec
sbb
lds
insl
or
out
pop
rcll
into
sub
inc
mov
xor
or
ljmp
dec
sti
fldl
imul
lods
testb
mov
pop
pop
dec
mov
shlb
test
mov
fstl
fs
rcl
and
sti
inc
imul
mov
xor
or
mov
mov
xor
vphsubbw
jnp
adc
add
mov
test
push
sub
adc
push
ljmp
cmp
push
xchg
jle
pop
loop
sbb
sti
push
mov
in
jle
mov
mov
sub
push
lods
add
lods
repnz
inc
mov
pushf
pop
pushf
cmp
out
pop
push
jbe
dec
or
pop
xor
outsl
or
fldt
jmp
inc
popa
test
mov
cmp
out
lea
lea
sub
stos
adc
sub
arpl
adc
in
dec
imul
lcall
mov
inc
std
cmp
push
mov
cld
rorb
ret
adc
das
leave
fbstp
out
fwait
arpl
mov
lea
dec
lods
enter
sub
cmpsl
addr16
lret
jl
movsl
xchg
lret
pop
cmp
lods
stos
inc
dec
lahf
sbb
cmc
hlt
sbb
shl
leave
mov
lds
rorb
xor
nop
xor
int
insb
mov
dec
mov
addr16
and
in
jg
in
dec
jmp
cmp
es
cmp
repnz
mov
stos
sbb
cmp
out
push
fnsave
add
jle
jnp
sbb
lcall
fistl
lcall
imul
pop
fstp
and
daa
outsb
icebp
icebp
out
fcompl
cmp
incb
mov
xor
push
inc
arpl
push
pushl
out
cmpsb
test
es
repnz
sbb
mov
loopne
pop
rcrl
test
addb
mov
add
xchg
ja
dec
in
sub
sub
add
or
into
dec
dec
shlb
stos
stc
add
pop
shl
mov
jns
lock
add
add
push
xchg
arpl
mov
add
cmp
mov
pop
jp
sbb
mov
mov
jp
arpl
xchg
inc
dec
cmp
adc
cwtl
fwait
out
stos
xchg
das
fcmovbe
adc
sub
and
out
addr16
jno
add
repnz
shrl
xor
js
mov
sbb
inc
arpl
mov
and
or
sbb
test
push
test
pushf
add
jb
jl
lods
xlat
and
pop
imul
scas
rcrb
fwait
lods
gs
add
imul
sbb
cmp
fcomps
int3
loope
pushf
xchg
cmp
jbe
xor
and
icebp
pop
pop
inc
mov
xchg
add
negl
jnp
push
loop
loop
addl
push
idivb
scas
jnp
mov
jb
xchg
pop
sbb
push
aaa
xchg
mov
ja
or
nop
mov
imul
jbe
pop
mov
lcall
aam
test
mov
pop
sub
mov
inc
jbe
sahf
cwtl
dec
mov
mov
adc
xor
mov
cld
cmp
pop
sbb
jl
inc
jno
aaa
sub
sahf
ja
pusha
outsl
push
enter
mov
pop
push
inc
jns
jne
or
iret
mulb
and
dec
lret
std
jge
adc
ret
lahf
aam
loopne
stos
mov
dec
jle
ss
outsl
pop
cmp
insl
or
ja
and
sbb
adc
fimuls
mov
icebp
out
out
or
jne
sti
adcl
xlat
in
sti
ljmp
mov
or
cld
in
outsb
jo
sub
or
loope
mov
xor
and
push
and
repz
lea
mov
imulb
sbb
inc
mov
or
cmp
push
mov
ds
push
cs
jmp
js
pop
mov
aas
imul
lds
test
lcall
cmp
mov
xchg
push
sbb
or
mov
lea
dec
add
sub
lret
or
scas
push
adc
inc
test
dec
nop
cmc
addb
cld
push
dec
test
jle
arpl
std
insb
xchg
push
jbe
mov
sarl
xor
adc
mov
lret
xor
mov
push
test
insb
mov
cltd
insl
outsl
mov
cwtl
je
jo
and
sub
ret
sahf
push
pop
adc
lock
or
cld
arpl
mov
in
gs
xor
lret
mov
sub
outsl
lea
add
pop
loope
pop
cmp
stc
mov
mov
aam
shlb
fistl
repnz
ss
loopne
data16
xchg
call
cmp
arpl
into
filds
rcrb
fsub
mov
jae
cld
mov
fsubr
addr16
jle
ret
sub
inc
mov
adc
xchg
andb
or
mov
outsb
push
pusha
and
mov
cwtl
pushf
dec
ss
clc
outsl
mov
adc
inc
mov
in
xor
out
push
pop
inc
sub
subb
movsl
int3
add
adc
push
sub
ror
and
mov
push
ret
mov
inc
mov
push
ficompl
cltd
add
jnp
loopne
mov
inc
or
out
mov
scas
mov
xor
dec
jae,pt
jno
ljmp
or
addr16
pop
mov
mov
pushf
mov
pusha
hlt
adc
ds
repz
ret
and
xor
jne
xor
fwait
addr16
das
xchg
lds
xlat
xor
rorl
xchg
data16
shrb
pop
xor
or
data16
stos
jmp
adcl
push
xchg
enter
jmp
je
je
mov
jl
je
lods
and
push
rorl
sbb
cmp
dec
mov
loope
cmp
adc
arpl
xchg
ficompl
jns
aaa
outsl
inc
es
gs
sbb
frstor
mov
lds
jo
aam
dec
sub
outsl
in
addr16
sub
xchg
movsb
or
loopne
pop
adc
std
cmp
dec
fmulp
movsb
mov
push
ror
ret
loop
mov
sbb
jmp
xor
in
test
xlat
xor
jp
inc
enter
push
gs
cmp
popf
cld
sbb
adc
out
cmpsl
xor
mov
pop
or
imul
cs
xchg
mov
sbb
mul
fmul
nop
aad
movsb
sarb
in
sub
add
inc
lcall
pop
adc
push
dec
shll
mov
xchg
lods
dec
test
sbb
incb
imul
popa
mov
xchg
pop
cmpsb
adc
sti
lock
and
ret
and
add
mov
sar
jb
lcall
xor
ja
bound
lret
mov
ret
cli
bound
or
test
out
jmp
aad
test
xchg
mov
out
lahf
aas
xor
mov
mov
cwtl
and
jo
mov
mov
mov
call
sbb
mov
sub
std
test
dec
fdivs
xchg
int3
stos
xor
sbb
push
addr16
xchg
cmpsl
or
and
test
mov
lods
mov
inc
sbb
mov
xor
out
and
cmp
loop
and
call
es
sti
fsts
fwait
movsl
popf
rorl
jmp
in
repnz
xor
into
jnp
cltd
inc
inc
dec
inc
push
jo
push
icebp
cmp
and
pop
pop
jg
lahf
mov
pop
and
dec
loopne
and
pop
jns,pt
sbb
loopne
inc
sub
jns
inc
pushf
xchg
es
sahf
cmpsl
push
mov
xchg
pop
and
mov
imul
data16
jne
cmova
push
je
imulb
adc
push
in
xchg
dec
dec
mov
cmp
pop
inc
add
arpl
mov
in
or
adc
or
call
mov
mov
mov
in
xchg
scas
mov
mov
loope
cmp
sub
test
insb
mov
xlat
cld
inc
dec
xchg
jg
loop
xor
or
fdivl
pop
fidivl
push
popa
mov
ror
movsb
mov
test
notl
std
test
cmp
pushf
or
adc
sahf
repz
stc
mov
jae
push
xchg
pusha
rcl
dec
xor
dec
int
lods
fnstsw
pop
pop
pop
adc
inc
mov
sbb
sbb
push
inc
ret
pop
fs
add
leave
ja
and
mov
popa
lahf
rclb
cli
lods
cmpb
movswl
in
ljmp
jp
push
pusha
out
push
push
mov
push
push
lret
pushf
ja
mov
cs
outsb
loop
add
lret
out
movsl
into
and
sbbl
fidivrs
in
jmp
adc
cmc
daa
adc
lret
inc
faddl
gs
jecxz
push
xor
outsb
loopne
push
mov
loope
jge
call
ss
lds
push
mov
aas
mov
movsl
sub
mov
cmpsl
in
jge
mull
stos
jbe
pop
mov
mov
jecxz
std
cmp
das
sti
enter
sbb
sbbb
pop
inc
mov
push
jge
inc
pushl
ror
fisubrs
ret
xchg
loope
sub
fldt
hlt
mov
leave
aam
sub
mov
and
jb
mov
sbb
or
dec
lahf
sbb
dec
xor
data16
enter
lock
add
xchg
jbe
xor
pop
bound
insb
lahf
out
lods
sbb
and
xor
push
inc
rclb
mov
stc
mov
pop
mov
pop
in
add
adc
sbb
or
int3
mov
xchg
push
push
out
sub
xchg
cmpsb
and
and
xor
jg
movsl
rcrl
out
addl
arpl
pop
xchg
enter
adc
pop
outsl
outsl
and
lcall
mov
sbb
push
cmp
clc
jo
or
cmp
jnp
or
jne
icebp
scas
stc
pop
hlt
stos
jbe
emms
enter
leave
adc
cmp
push
sbb
lods
adc
xorl
mul
pop
cmp
lods
xor
inc
mov
lret
mov
or
add
sub
sti
loop
jne
push
push
test
lahf
loope
or
cmpsb
sbb
andb
ljmp
les
pop
dec
sti
hlt
push
cld
add
testb
je
mov
cli
sbb
mov
stos
cltd
cltd
and
sub
aam
mov
shlb
push
add
es
push
or
pop
and
mov
stos
xor
js
mov
pop
data16
mov
mov
adc
and
mov
psrlw
into
leave
or
xchg
jb
mov
test
shll
jnp
subb
jle
jmp
jns
sbb
lds
fwait
mov
fs
inc
mov
filds
xor
mov
jle
inc
mov
mov
icebp
mov
sti
fcomps
dec
lods
nop
or
or
enter
xor
xlat
and
xchg
clc
xorb
fstl
mov
xchg
mov
out
cwtl
cltd
mov
push
adc
pop
xor
or
cli
std
hlt
in
insl
in
sub
mov
adcb
pop
aas
insl
sti
call
inc
shrb
inc
push
and
stos
jle
jge
mov
in
stos
sbb
pop
mov
sahf
test
xor
pushf
mov
nop
jecxz
mov
pop
jecxz
sbb
sbb
sbb
mov
xor
mov
test
inc
mov
repnz
add
out
test
repz
lock
js
cmp
vpaddw
rcrl
inc
shlb
push
or
mull
xor
xlat
in
cld
es
sbb
rclb
adc
mov
rcrl
stos
dec
cld
cwtl
sahf
xchg
popa
pusha
sbbb
fwait
loop
mov
lret
sbb
and
push
inc
jmp
arpl
push
nop
jge
movsl
sbb
iret
mov
inc
fadd
shrl
mov
cltd
cmp
cltd
push
dec
jp
clc
xor
adc
std
pop
mov
sbb
je
rdpmc
mov
jns
dec
mov
ret
inc
add
xor
ret
lods
mov
sub
mov
adc
jge
cmc
sahf
test
mov
in
pop
test
cmc
xor
pop
and
push
sbb
lret
push
xor
rcr
leave
mov
mov
cmp
shrb
jge
xchg
cmp
jne
aas
xor
ja
in
das
or
movb
mov
sti
divb
bound
jmp
jmp
xchg
in
add
in
fistps
fsts
pop
mov
or
push
sub
jle
ret
sub
jp
fxch
xchg
push
cmp
mov
sbb
stos
cmp
add
lret
les
mov
sub
or
out
pop
je
movsb
and
fdivrs
repz
pop
in
push
add
aad
dec
idivb
and
jg
fildll
call
pop
addr16
mov
out
sbb
in
jo
enter
fistps
xchg
jne
jle
mov
outsl
les
sahf
loope
les
adc
sbb
pop
mov
test
iret
cld
or
mov
in
sahf
dec
and
inc
or
mov
jbe
and
sahf
inc
mov
in
ds
sbb
popf
outsb
ret
and
inc
rorl
inc
cmp
adc
or
stc
cltd
das
popf
mov
push
xchg
mov
aad
nop
out
repz
mov
outsl
arpl
pop
push
insl
mov
neg
jle
lds
nop
and
and
and
xchg
dec
test
and
adc
sbb
sahf
repnz
negb
mov
sub
test
or
movsl
lods
cld
inc
sbb
lahf
outsb
jl
stc
cmp
push
neg
pop
loope
and
scas
loope
sbb
xor
stos
adc
sbb
jno
mov
mov
outsl
dec
test
jno
adcb
int3
xorb
testl
loop
mov
sub
pop
das
or
out
pop
mov
stos
lret
cli
insl
lock
lret
mov
cmpsl
pop
dec
sbb
xchg
dec
inc
test
std
mov
lods
mov
sub
out
cmpsb
push
outsl
adc
push
movsl
cmp
cld
lods
dec
jg
mov
jg
push
xchg
or
push
loope
rorl
xchg
scas
sbb
nop
and
dec
xchg
imul
clc
scas
dec
into
out
call
sub
fadd
mov
dec
orb
xor
lcall
jl
pushf
orb
cli
ja
hlt
dec
stc
inc
imul
nop
pop
je
cmp
jno
ljmp
xchg
loope
inc
adc
fwait
and
stos
ss
jmp
rcrl
and
xchg
adc
inc
in
push
adc
xor
fnstsw
rorb
popa
or
adc
mov
jno
hlt
sbbb
shr
icebp
push
push
test
mov
fwait
test
out
pusha
jno
lods
rdmsr
sub
cmpsl
loopne
adc
nop
cld
xor
jne
and
add
mov
and
mov
int3
push
push
call
mov
sbb
cmovne
out
repz
das
adc
mov
sbbb
mov
jb
in
cmp
push
xchg
adc
jo
das
movsb
pop
shlb
sub
or
and
mov
into
sbb
ds
xchg
jbe
stc
xor
fdiv
in
dec
pop
loope
test
cmc
neg
imull
xor
ss
or
lods
stc
in
outsl
jecxz
pop
mov
ss
data16
push
and
cwtl
jmp
es
divl
icebp
jbe
cmp
and
rorb
mov
push
aad
xchg
ret
jnp
inc
jns
jae
cwtl
sub
test
xor
xor
lret
aaa
das
mov
out
imul
lea
dec
sub
jmp
rcrb
cmp
sub
xor
dec
icebp
inc
mov
mov
dec
cmp
int
xor
push
in
das
adcb
xchg
push
jno
fcoms
pop
xchg
mov
add
hlt
add
jne
xchg
mov
pop
push
lods
push
sbb
adc
and
insb
ret
add
out
imul
mov
pop
in
cmc
adc
insb
loop
adc
out
dec
inc
rorl
dec
xchg
out
xchg
dec
xor
or
adc
je
loop
sub
shr
cs
jle
sbb
push
or
add
xchg
popf
pop
mov
mov
dec
lock
mov
dec
movsl
notl
push
outsb
pop
rorl
fwait
push
in
add
out
pusha
in
fneni(8087
or
jbe
rorb
xchg
rolb
add
jecxz
lds
mov
pop
xchg
lea
pop
popf
into
pop
xlat
iretw
movsb
outsl
xchg
pop
xor
sub
jmp
in
push
xlat
dec
lret
cs
je
int3
dec
pop
cmpsb
sub
mov
mov
xchg
pusha
fadd
outsl
in
mov
fbld
cmp
rcl
imul
add
cli
dec
mov
fildll
jns
xlat
fldenv
pop
testb
cmpsb
pop
sub
adc
cmp
pop
cmp
mov
mov
pop
cmovne
xor
test
sbb
cmc
vpsubsw
xor
cli
aas
jnp
cmp
xchg
sub
int
jbe
or
add
or
pop
pop
mov
lock
mov
faddl
lret
dec
fwait
cmp
call
out
jo
mov
ja
clc
insl
clc
cli
sbb
icebp
xchg
shrb
xchg
iret
adc
iret
sbb
js
nop
mov
test
push
pop
cmp
mov
push
imul
adc
cs
inc
in
pop
out
sbb
movsb
and
clc
rorl
xlat
ljmp
or
data16
pop
jno
cs
mov
pushf
pop
xchg
mov
adc
adc
add
ljmp
jnp
xor
rcl
jo
adc
or
ds
lret
ja
cmp
sub
xor
xchg
jp
pop
gs
lea
xor
sub
andl
jge
dec
push
adc
fidivl
outsl
loope
cltd
jecxz
sub
daa
arpl
ds
aam
ret
fbld
sti
add
sub
cmpsl
popf
mov
cmc
testb
adc
clc
mov
pop
xor
add
popf
repz
xchg
gs
push
roll
mov
mov
lret
rcrl
outsb
pop
sti
cmc
jl
mov
inc
out
scas
out
push
std
mov
insl
sti
popf
in
imul
adc
push
fcomps
movsb
insl
aas
mov
out
sbb
add
or
pop
mov
dec
pushf
in
cmp
lahf
add
stos
and
pop
sbb
ficompl
mov
pushf
and
jbe
sbb
insl
and
sbb
psrlq
pusha
testb
pop
out
push
and
bound
enter
jo
out
xchg
xchg
lret
mov
inc
popl
pop
or
mov
loop
aad
push
dec
dec
jae
xor
push
rolb
jmp
mov
fidivrs
mov
mov
cli
inc
or
pop
cltd
gs
or
jmp
or
jnp
sbb
mov
test
arpl
pop
arpl
test
adc
outsl
jle
mov
les
mov
aas
cld
jo
inc
mov
js
and
dec
jno
dec
psubd
lock
and
roll
aaa
adc
cmc
push
out
mov
dec
dec
out
and
sbb
pop
imull
divl
cli
mov
shlb
jb
fsub
mov
jge
sahf
decb
popa
or
jo
lock
xor
cli
out
pusha
mov
sbb
mov
push
dec
adc
mov
das
xor
test
mov
mov
out
in
cmc
ret
addl
rolb
and
cmpsl
xchg
ret
bound
dec
and
dec
sub
jae
mov
cltd
cmc
mov
xor
jl
bound
mov
jbe
add
ds
stos
or
js
repz
leave
mov
ror
pushf
adc
jno
jo
xchg
call
cmc
cmp
push
leave
daa
or
mov
imul
orl
or
lock
pop
cmp
xchg
out
nop
mov
xor
push
cmp
pop
xor
mov
push
sub
sub
push
subps
mov
bound
and
out
add
inc
in
popl
jnp
ret
fldenv
mov
adc
fwait
push
inc
les
pop
and
call
stos
or
inc
cmc
scas
fdivr
cmpb
pop
and
roll
insb
mov
notb
mov
out
popa
aaa
cmp
xor
hlt
cmp
push
std
xchg
push
mov
add
sub
jle
iret
cmp
pusha
stc
imul
mov
xchg
js
mov
bound
adc
loopne
jmp
scas
and
sub
ss
push
mov
xchg
aaa
cltd
nop
mov
es
mov
mov
scas
push
and
pushf
fs
shll
add
fwait
jmp
jno
data16
adc
cmp
sti
repz
scas
loop
inc
ss
in
and
adcl
mov
sahf
into
popf
sahf
out
stos
jno
mov
mov
xchg
or
jbe
push
out
jbe
mov
inc
lret
mov
sahf
repnz
lret
loop
xor
movsl
data16
scas
sub
cwtl
adc
dec
adc
movsb
div
sub
mov
mov
mov
mov
out
inc
fwait
jb
lea
xchg
add
mov
fwait
jge
out
insl
add
fs
stos
sar
stos
adc
les
jns
or
out
mov
xchg
repnz
cmpsb
addr16
xchg
push
rclb
inc
and
lahf
xchg
jbe
pop
rcrb
mov
popf
inc
scas
mov
push
jmp
mov
in
dec
loopne
push
adc
loop
popa
cs
popf
and
inc
addr16
adc
fstps
push
lret
xchg
or
push
or
sbb
push
lret
sbb
dec
jb
loop
and
aas
sbb
dec
bswap
mov
loop
cmp
ss
push
out
daa
push
pusha
jg
and
mov
mov
pop
jg
out
fnstcw
out
lock
dec
mov
das
xchg
sub
outsl
in
sbb
bound
dec
cmp
mov
inc
add
push
add
sbb
inc
push
jp
mov
dec
inc
iret
inc
cmc
pop
hlt
lea
ds
hlt
lds
int
int3
ret
sbb
movl
shll
jg
mov
mov
test
jno
pop
shll
movsb
mov
test
loope
sub
xchg
fdivrs
xchg
cmp
mov
gs
sbb
sub
out
roll
arpl
pop
pop
dec
out
or
sbb
add
cli
in
mov
cwtl
int
test
icebp
xchg
imul
rcll
insb
xchg
cld
filds
cli
xor
sti
fimuls
cmp
adc
mov
ds
add
or
clc
sub
and
sub
or
dec
push
fistpl
mov
pop
movsb
test
arpl
pop
mov
mov
movsb
inc
repnz
jl
cmp
inc
mov
jb
and
shrb
jmp
rcl
daa
and
mov
loope
clc
cmp
out
repnz
popa
lods
xor
sbb
shlb
cltd
xchg
fwait
mov
aaa
cwtl
outsl
outsb
dec
add
and
hlt
push
add
fisttps
jmp
jns
call
jne
dec
and
sub
loope
es
test
mov
les
pusha
gs
sbb
pushw
dec
pcmpgtw
repz
aas
jecxz
aas
out
repz
push
arpl
lret
sbb
imul
and
pop
data16
div
std
sbb
das
clc
daa
mov
popf
push
loopne
cmp
icebp
adc
adc
stos
xchg
push
sbb
clc
cli
inc
jg
fucomip
dec
and
dec
xor
outsl
popa
fnstcw
repnz
or
hlt
ret
test
test
pushl
es
test
dec
cmpsb
inc
xchg
lahf
or
pusha
std
xchg
inc
and
xchg
xchg
scas
sub
lods
enter
jmp
inc
mov
aam
loop
arpl
sti
mov
orl
cltd
adc
add
dec
enter
arpl
or
jp
and
cli
scas
out
scas
xchg
sub
lods
sbb
fsubrs
repz
and
gs
xor
outsb
pop
sbb
or
push
inc
jmp
sbb
sbb
cwtl
je
inc
int
out
push
cli
jne
dec
dec
insb
shrl
cwtl
sbb
or
dec
sti
adc
and
and
in
sub
repnz
cmc
mov
arpl
subb
ret
into
pop
aas
fists
inc
repnz
outsb
in
cltd
arpl
in
sub
out
push
push
xchg
testb
cld
jecxz
xor
pop
iret
in
test
cmp
dec
arpl
stos
push
push
or
shlb
push
and
xchg
adc
fwait
mov
mov
dec
or
clc
dec
cli
mov
sub
repnz
in
out
lret
shll
push
mov
popf
fiaddl
addr16
sbb
stos
aas
test
sub
mov
dec
hlt
pop
icebp
mov
mov
mov
pop
cmp
mov
loopne
out
mov
arpl
inc
xchg
pop
jle
repnz
mov
popf
or
vmovups
xchg
inc
into
sbb
cmp
repz
loop
mov
js
cmp
or
push
scas
lock
imul
shrl
pop
push
add
cmp
dec
aad
loopne
cmp
or
pop
cmpsb
bound
xlat
inc
inc
jl
pop
pusha
push
add
stc
sbb
lods
mov
xor
and
add
sub
inc
addb
cwtl
fimuls
scas
insl
in
jg
aad
aaa
or
mov
add
dec
cmp
cmp
ret
and
cmp
int3
dec
test
out
test
dec
pop
imul
test
push
mov
out
xor
cmp
xchg
outsl
stc
or
in
jg
sub
popa
imul
cwtl
xor
imull
add
mov
mov
mov
fnsave
xchg
push
xchg
push
stos
dec
outsb
pop
mov
pushf
jns
jge
add
mov
xchg
subb
or
pop
subl
fistps
scas
jp
andb
inc
insb
mov
cltd
mov
mov
pop
mov
or
add
dec
mov
in
mov
cmp
xchg
xor
jb
jo
ret
dec
xchg
adc
fnstsw
addr16
mov
outsb
movsl
push
mov
in
sub
pop
sahf
jae
popa
cli
push
dec
popa
jae
mov
mov
jge
rcll
jl
mov
jg
jle
roll
jnp
pop
bound
jmp
cmp
jo
call
and
cmpsl
outsl
xor
call
cld
cmp
lahf
aam
cltd
mov
pusha
push
or
mov
js
inc
xchg
repz
and
mov
mov
repz
ret
sbb
push
lds
cmpsb
inc
pushf
gs
inc
addr16
or
pusha
lods
pop
sbb
jmp
pop
mov
xlat
iret
mov
mov
hlt
xchg
stos
aas
mov
sbb
sub
mov
divb
fwait
mov
ljmp
hlt
adc
inc
mov
scas
inc
and
in
clc
aam
outsb
pushf
hlt
inc
jno
mov
xor
data16
mov
or
lea
and
xchg
or
mov
fwait
gs
test
or
call
inc
push
faddp
cmp
or
pop
out
jb
sbb
pop
mov
shrd
cld
mov
sbb
mov
and
outsb
pop
lcall
push
inc
arpl
add
mov
ret
test
imul
jp
push
mov
sub
scas
adc
jge
cs
insl
dec
xorb
test
inc
mov
pop
mov
cmp
sbb
jb
insl
sbb
lcall
add
dec
sub
mov
or
sbb
pop
or
iret
ss
adc
push
nop
out
mov
and
jge
jnp
outsb
inc
jmp
insl
push
xchg
xor
imul
cltd
inc
lods
ss
sub
into
dec
mov
dec
xor
and
sub
sahf
push
inc
out
dec
cmp
gs
es
pop
pop
lods
adc
dec
adc
aad
dec
enter
jmp
ret
sti
or
imul
xor
mov
adc
pop
sub
sbb
dec
mov
sub
imul
rcrb
pop
ljmp
pop
int3
mov
aas
push
enter
or
mov
enter
out
incb
out
inc
enter
call
lea
sbb
cmp
sub
mov
enter
arpl
stos
testl
insb
cmpsl
call
jb
fmulp
std
lret
push
lods
xor
je
push
lds
fwait
sbb
ljmp
cmpsl
repz
push
loopne
jle
and
sub
imul
loopne
and
ja
sub
cmpsb
jle
icebp
pop
nop
loop
cli
lock
mov
hlt
push
xchg
ret
mov
mov
mov
xchg
xor
pop
or
jmp
jmp
pop
fs
pop
inc
push
clc
cmpsl
dec
cmp
add
push
in
jmp
sbb
xor
cmc
in
bound
push
stc
jne
pop
mov
cli
mov
cmp
ret
enter
cld
test
jbe
call
movsb
push
inc
cmp
mov
cmp
mov
out
cmovo
push
pop
roll
bound
iret
outsb
xor
pop
sub
xorb
dec
add
hlt
sub
mov
lcall
push
leave
ficomps
add
out
sarl
xchg
mov
test
bound
inc
out
fcoms
add
dec
sbb
xchg
jnp
testl
push
xchg
inc
mov
cmp
push
xchg
fisubrs
mov
enter
jnp
mov
pop
push
pop
mov
mul
bound
mov
imul
jnp
mov
adc
inc
mov
cmp
jnp
mov
push
gs
leave
jmp
pop
sbb
or
gs
pusha
pop
lds
inc
inc
int3
enter
xchg
andl
inc
inc
push
mov
mov
lods
mov
fwait
or
test
add
dec
pop
outsb
repz
xorb
sahf
cmp
push
shrl
dec
loopne
lea
sub
cmc
mov
js
ret
sbb
out
imul
lret
push
sub
daa
mov
addr16
stos
cmp
inc
mov
call
aad
rcrb
dec
pop
mov
sub
ds
jmp
or
push
rclb
scas
call
push
adc
repnz
mov
popa
add
mov
ljmp
pop
ss
rorl
sahf
pusha
mul
sets
icebp
lahf
or
xchg
push
cs
popa
adc
lods
add
mov
sti
xchg
or
ja
rorl
ljmp
cmp
daa
xchg
aam
mov
mov
nop
out
faddp
loop
aam
add
pop
mov
int
test
bound
xchg
add
movsl
cmp
dec
nop
mov
in
ds
add
cmp
shlb
xlat
neg
xchg
loopne
push
cmpsl
push
and
inc
jns
and
stos
psrlq
fst
test
pop
fmulp
shrb
lcall
pop
cmp
cli
popa
enter
mov
pop
mov
fstpl
adc
mov
mov
dec
adc
mov
ss
cs
ror
hlt
outsb
fnstcw
xor
and
cmp
insl
repnz
daa
int3
adc
push
or
mov
push
popf
xor
cmp
fwait
jnp
aaa
out
xchg
out
rclb
push
sbbb
int3
lods
imul
rolb
cmp
fiaddl
cltd
or
aas
sahf
arpl
push
sub
jae
enter
jmp
stos
pop
fdivrs
cmp
add
mov
mov
or
inc
sub
lahf
cmp
mov
std
test
push
ds
shlb
mov
or
pop
stos
addl
stc
mov
mov
add
mov
loop
popa
xlat
aaa
sub
mov
popf
dec
jns
mov
lods
add
test
xorb
mov
lds
add
test
ja
les
push
xchg
fcmovbe
movb
mov
out
adc
push
mov
test
pop
bound
inc
fstp
adc
ss
out
dec
and
and
and
stos
test
sub
jg
bound
daa
scas
and
cmc
out
xchg
inc
jbe
jns
ret
lods
lds
mov
mov
subl
leave
xor
sbb
lahf
push
adc
jle
mov
lahf
int3
je
or
inc
mov
xchg
scas
xchg
scas
pop
mulb
ja
pop
mov
mov
dec
push
out
push
add
notb
pusha
pusha
negb
or
inc
pop
std
push
js
cmp
rcrb
push
enter
and
xchg
or
mov
sti
push
scas
dec
and
jo
xchg
dec
sbb
iret
in
out
mov
scas
roll
andl
testb
adc
ret
sub
push
out
ljmp
dec
jge
xor
call
cli
xchg
mov
enter
data16
or
dec
std
outsb
cmpsl
sub
cmp
dec
xor
aam
cmpsl
inc
inc
jo
pushf
inc
flds
ret
ret
arpl
inc
jo
test
adc
jbe
adc
inc
lods
adc
sbb
adc
imull
test
jmp
dec
loope
mov
or
test
pop
xchg
xchg
in
cmpsl
jl
leave
pop
sti
icebp
dec
adc
adc
inc
fcompl
cmp
pusha
aam
and
jecxz
mov
mov
les
sub
out
sub
inc
mov
aad
out
jns
pop
lret
xor
sbb
push
push
mov
sub
lcall
mov
fwait
xchg
lea
lea
ja
out
addr16
pop
popa
adc
push
daa
shll
cld
rcl
adc
and
cmpl
int
pusha
cld
push
in
into
xchg
jo
pop
test
mov
jmp
mov
clc
xor
in
cwtl
jo
jle
cmp
jle
leave
adc
dec
rep
and
outsb
mov
adcb
fnsetpm(287
loopne
jge
mov
cmp
imul
or
mov
shrl
inc
inc
idiv
sub
out
in
mov
andb
or
sbb
and
mov
mov
into
sbb
cmp
dec
pop
in
loope
gs
cmp
in
test
dec
hlt
outsl
bound
fisubl
push
push
in
push
mov
dec
dec
lods
push
fs
mov
fdivrs
cltd
pushf
sub
cs
jecxz
decb
adc
int
lahf
pushf
mov
push
push
adc
fstps
mov
xchg
pop
shrb
clc
sti
inc
inc
pushf
pop
data16
jo
in
cmc
mov
push
xor
or
xor
fiadds
sbb
mov
movsb
insb
addr16
repz
cvtps2pi
fldcw
shl
stos
movsb
aam
inc
xor
ja
iret
arpl
sbb
cmpsb
pop
dec
outsb
pushf
pop
jmp
mov
inc
sub
inc
in
in
jne
test
insb
dec
clc
bound
loope
jecxz
subl
sbb
xorb
mov
scas
insb
and
mov
pop
push
je
test
mov
push
push
inc
repnz
cmp
popf
leave
pop
leave
jae
xor
repnz
lret
adcb
lcall
addr16
mov
leave
sub
pushf
xorb
sbb
push
ret
mov
jmp
sti
adc
or
mov
mov
dec
loop
addl
es
mov
or
sbb
adc
jg
test
repnz
outsb
or
or
test
sbb
dec
jne
fs
add
out
js
jge
gs
jno
movsb
cltd
adc
jne
rclb
inc
add
cmp
jo
outsb
mov
cmp
or
ds
push
pop
jl
cmp
push
pop
cs
outsl
mov
xchg
jns
jle
adc
sub
mov
inc
push
jne
test
adc
sbb
xor
dec
push
jp
insb
pop
popf
dec
or
popf
jge
mov
fidivl
xchg
ljmp
mov
loopne
aam
das
cmp
lods
mov
add
nop
pop
or
leave
jne
dec
imul
nop
cmp
pop
mov
shr
jp
xor
xor
jmp
or
aam
jns
mov
in
sbb
xor
ret
cmp
stos
ffree
lcall
and
push
push
std
stos
sbb
inc
aas
nop
out
leave
push
inc
push
addr16
mov
cmp
push
lret
mov
push
inc
fsub
push
repnz
xor
xlat
popf
mov
mov
jno
lahf
ljmp
mov
aad
int
xchg
int
scas
lods
xchg
sub
popf
xchg
dec
or
jno
mov
shrl
mov
xchg
fdivrs
push
push
sbb
sub
sarl
les
fwait
gs
and
test
jns
loope
mov
add
in
into
rcrb
mov
xchg
in
movsl
mov
inc
fcmovbe
pop
mov
xchg
cwtl
aas
xor
mov
shrl
jno
addr16
jge
dec
push
dec
int3
push
mov
out
loope
push
faddl
addb
pop
dec
mov
pop
loopne
insl
xor
aam
in
icebp
mov
sbb
xchg
add
cmp
and
xor
xor
push
xor
aas
adcl
jo
push
aad
aas
sub
ret
mov
dec
mov
xchg
inc
lret
lea
adc
test
inc
jo
jle
stos
pusha
inc
cli
cmpsl
popa
xor
lods
out
mov
inc
aad
push
dec
dec
mov
enter
pushf
cmpxchg
jne
mov
add
lods
out
imul
add
jo
sub
or
and
movsb
inc
out
nop
jno
sbb
fcomps
add
stos
cmp
and
push
adc
mov
rcrb
cltd
xchg
in
adc
lods
pop
cmp
stos
std
xorl
pop
or
shlb
out
jg
sub
dec
or
std
cmp
mov
dec
xchg
notb
mov
inc
popa
les
xchg
cmp
out
xlat
inc
xchg
pop
in
bound
int3
xchg
sub
dec
jge
jbe
test
in
lods
aam
dec
xchg
inc
sub
ja
mov
cld
sub
pop
fisubrl
shll
or
pop
and
xchg
sub
jge
adc
jo
xor
cld
xchg
or
mov
mov
xchg
fwait
hlt
shll
imul
cmp
mov
daa
sbb
xor
dec
das
imul
jae
inc
add
popa
repz
and
inc
jns
xor
es
xor
and
xor
jbe
iret
push
out
lcall
lds
adc
shlb
jnp
es
mov
aad
xchg
das
push
ss
and
adc
jge
stos
fwait
mov
dec
adc
clc
mov
es
and
jg,pt
mov
fcoml
loop
or
sub
mov
mov
cwtl
xor
pop
xchg
mov
sbb
les
orl
jmp
out
imul
mov
jecxz
or
sbb
push
aad
jmp
sub
jl
xlat
inc
shlb
dec
push
mov
insb
pop
gs
adc
lahf
push
idivl
push
repnz
lods
cmpsb
int3
jmp
repnz
loopne
test
jl
or
cmc
fdiv
jle
movsl
jmp
scas
add
data16
bndldx
sbb
repnz
int3
pop
outsb
jmp
sub
cmpsb
push
out
addr16
sti
add
and
jmp
cmp
mov
lret
dec
out
push
add
flds
bswap
idivb
push
popf
out
inc
bnd
pop
mov
pop
mov
roll
notl
jbe
out
pushf
or
xchg
jecxz
cmp
adc
xchg
mov
addr16
outsl
inc
mov
inc
jo
push
mov
push
and
jmp
push
mov
add
pop
mov
mov
jae
xchg
daa
add
pop
lods
enter
inc
cmp
leave
inc
lock
jbe
mov
adc
jle
das
adc
stos
mov
xor
popf
lret
hlt
subl
mov
pop
imul
stos
pop
cmpl
addr16
icebp
cwtl
lret
mov
das
frstor
sbb
sub
xor
adcl
push
mov
mov
cli
jmp
dec
mov
fisttpl
movsl
nop
or
js
mov
sbb
lret
pushf
adc
aas
or
mov
add
ds
in
ficomps
iret
pop
pop
ret
mov
loope
xchg
inc
jnp
mov
cmpsl
mov
or
push
sbb
mov
andb
sbb
ret
scas
xchg
xor
mov
shlb
dec
in
sub
xchg
rcll
stos
jb
das
jne
insb
jne
int3
mov
cmp
das
insl
cli
push
xor
stos
sbb
or
fdivrs
lcall
cmp
push
repz
jecxz
mov
incb
dec
ljmp
shr
mov
push
xchg
mov
sahf
imulb
inc
cmp
jno
or
mov
ljmp
xchg
popf
xor
push
in
jecxz
and
js
js
or
sub
xchg
or
dec
js
push
stos
stos
push
mov
inc
aaa
into
test
mov
and
adc
shrl
mov
jmp
mov
in
sbb
sbb
fidivs
jg
add
fucomp
pop
push
jne
mov
pop
loop
sbb
std
jmp
pop
pop
mov
sub
flds
push
mov
push
in
mov
xchg
jmp
mov
jmp
mov
dec
test
aad
cmpsl
push
out
out
in
or
cmpsb
xchg
filds
mov
pop
test
out
push
xlat
jb
pop
mov
lds
mov
pop
andl
pop
movsb
inc
pop
xchg
lcall
movsl
sbb
sti
scas
jo
xorl
pusha
dec
xor
scas
inc
outsb
push
mov
xor
test
es
jo
jae
sar
add
jle
xchg
pop
xor
xchg
movsl
push
sbb
into
add
mov
fbld
mov
fs
xchg
cmp
es
cld
lret
lods
sub
xor
sub
xchg
cli
mul
add
sahf
je
adc
and
aad
hlt
lea
mov
adc
push
popf
loope
or
out
push
or
mov
loopne
loop
int
push
dec
or
or
jno
lcall
ljmp
sbb
sub
ficomps
and
out
les
sub
adc
or
call
mov
rcll
lcall
loope
mov
and
sbb
push
mov
or
inc
add
mov
sub
pop
ljmp
sub
out
icebp
shrl
cmp
cmp
add
sub
cmpsb
adc
imul
mov
push
test
stos
pop
add
out
insl
mov
jmp
lcall
inc
mov
mov
jg
ss
cmpsl
rorb
mov
cmp
bnd
loop
sub
outsb
insl
clc
jl
inc
mov
jb
jge
leave
jmp
shr
out
arpl
sub
mov
gs
das
or
arpl
pop
mov
lcall
aad
xchg
das
push
lret
cmp
inc
sahf
gs
cltd
pop
ss
cmp
es
add
stos
jl
les
or
outsb
lods
into
pop
jecxz
cmp
sbb
or
movsb
pop
add
out
scas
mov
push
mov
loop
mov
rorb
mov
jns
mov
dec
push
add
cmp
ss
rorb
cmp
lods
cmpb
xor
movsl
mov
int3
lahf
mov
and
dec
inc
aam
pop
push
cmpl
mov
leave
add
in
inc
in
daa
sarb
mov
flds
leave
dec
push
ret
adc
js
push
mov
out
movsb
jno
push
cmp
jl
fadd
fsts
fisubs
cli
imul
xor
cmc
jns
xor
sbb
mov
mov
test
mov
je
nop
xorl
push
int
stos
mov
fistps
aam
jl
add
pop
add
fidivrs
aad
fucomp
mov
in
dec
shrb
pop
push
or
insb
or
les
push
les
in
orl
test
sbb
out
cmp
jge
jge
xchg
cmp
lea
add
test
mov
dec
movsb
mov
pop
cli
mov
fs
mov
adc
lahf
cmp
adc
xchg
lds
inc
cwtl
push
loope
xor
inc
push
adc
fldenv
sbb
cld
sbb
arpl
fiaddl
sub
push
loop
adc
fs
jl
stos
mov
or
ss
clc
stc
and
sub
push
cmp
int3
les
mul
mov
cmp
xchg
pop
lods
inc
int3
mov
sbb
je
inc
outsb
jnp
inc
inc
push
xchg
rcll
mov
lods
sbb
ljmp
sbb
inc
imul
aam
orl
adc
pusha
sbb
xor
xchg
scas
call
out
movsb
icebp
dec
mov
gs
fisttpll
cmp
dec
inc
jne
fcoms
sti
add
and
mov
inc
mov
data16
xchg
test
mov
ja
adc
lods
and
ja
sbb
inc
cmp
je
clc
jo
pop
xor
rcl
mov
lret
pusha
pop
outsb
jbe
test
ficompl
jb
sub
jecxz
iret
add
mov
xor
mov
jno
mov
push
inc
push
and
sub
push
cld
mov
inc
add
cmpsb
out
inc
aam
ja
or
and
mov
aas
out
roll
loope
daa
pop
mov
popa
dec
notb
aas
jp
cmp
xchg
ljmp
subl
mov
cmp
xor
loope
insb
mov
push
bound
xchg
mov
mov
cli
enter
fcmovnb
mov
or
push
dec
in
ljmp
daa
inc
das
mov
div
cmpsl
bnd
mov
inc
gs
cmp
xor
out
imul
cwtl
fwait
fs
add
and
fwait
jge
sbb
lret
push
dec
jle
inc
and
ds
iret
daa
lea
fistpl
sbb
enter
shlb
jmp
mov
inc
mov
mov
fcoml
icebp
cltd
jns
push
jl
fs
loope
cs
icebp
jne
ljmp
xor
ljmp
pop
add
popf
xchg
bound
iret
sbb
sbb
adc
push
sub
daa
sub
xor
push
aaa
inc
jno
push
in
insl
add
in
add
lds
adc
jns
cmp
pop
fs
test
repz
or
jbe
xor
mov
jns
lods
jmp
push
sbb
sbb
out
inc
in
cmp
jmp
mov
mov
jg
add
xor
cld
movsb
in
imul
lea
cmpsb
mov
fwait
dec
dec
pop
movsl
daa
push
leave
pop
stos
shl
and
push
mov
xchg
xor
jnp
stos
adc
imul
xchg
jmp
mov
cwtl
test
cmp
imul
sbb
push
in
jecxz
dec
jp
mov
or
movsb
bound
cmp
dec
xchg
call
mov
out
into
cmp
adc
loopne
xorb
or
shll
mov
mov
dec
jmp
push
sahf
sub
dec
subl
in
sub
jge
sbb
push
imul
and
popa
push
ret
call
lret
dec
sbb
test
or
sub
jmp
push
mov
lds
pop
mov
fldenv
enter
iret
jp
pop
jecxz
test
cltd
hlt
mov
ss
and
mov
jmp
xorl
xchg
jbe
jge
mov
push
inc
test
xlat
sahf
jns
and
inc
or
add
cmpsl
push
loope
inc
ss
inc
popf
test
add
sub
push
push
ds
fs
pop
sbb
mov
inc
mov
jo
cmpsb
adc
cmp
jl
mov
mov
inc
repnz
daa
add
inc
add
adc
add
ficoml
xchg
or
pop
pop
pop
or
mov
sbb
cltd
xchg
mov
movsb
incb
aas
xchg
add
cli
scas
aam
int
pop
add
cmpsl
inc
hlt
jb
fisubs
test
dec
pop
mov
add
out
pusha
mov
loop
fsubs
push
dec
enter
cwtl
cmp
gs
fisttps
cwtl
mov
repnz
fucom
jne
mov
sbb
push
and
das
nopl
popf
xchg
push
int3
xchg
xor
mul
add
mov
add
test
pop
in
inc
scas
insl
ret
and
outsl
imul
push
out
pop
xchg
fcomip
repz
test
xchg
xchg
cmpsb
popa
cmp
add
sub
out
and
fcmovnb
dec
jns
xchg
loop
ss
or
loope
xor
add
in
ss
xchg
push
mov
das
and
adc
sbb
or
in
adc
inc
xchg
push
repnz
cmpsb
xor
xor
lahf
arpl
pop
aam
push
xchg
inc
fldl
mov
scas
pusha
aam
mov
data16
imul
je
push
movsb
mov
jmp
jge
fcoms
mov
das
cmpsb
imul
cld
lret
jp
xchg
sbb
neg
fisttps
inc
dec
loopne
add
loope
es
test
cmc
test
mov
cmp
addr16
scas
inc
lock
lcall
ret
dec
clc
pop
mov
sahf
pushf
inc
add
pop
loope
inc
movsb
jo
loope
cmp
test
out
movsl
daa
mov
std
push
popa
xchg
sbb
and
adc
lds
mov
rol
cmpsl
hlt
jns
lret
roll
test
imul
flds
ds
insl
sub
push
into
cmp
out
mov
xor
and
pop
jns
stos
cmpxchg
fisttps
call
mov
xor
adc
mov
movsb
shlb
jle
enter
popf
inc
sbb
inc
inc
enter
lea
jg
lret
sti
ljmp
mov
fsubl
std
pop
inc
ss
aas
in
xchg
movsl
sti
gs
inc
call
inc
movsb
imul
pop
sub
xlat
sub
lods
add
pop
sub
xlat
or
jle
pop
jecxz
sub
add
mov
arpl
xchg
daa
add
sub
sub
outsl
mov
incb
push
sar
std
inc
push
shll
mov
cwtl
jg
pop
inc
inc
mov
js
pop
pop
popa
add
lods
push
ljmp
flds
fnstenv
es
int3
pop
pop
jp
sti
aam
mov
mov
mov
lret
cmc
mov
movsl
xchg
or
cmc
popf
dec
or
push
mov
test
in
fwait
jmp
jmp
bound
scas
cs
movsb
adc
lods
add
js
push
insb
and
mov
loope
lock
loopne
or
mov
xchg
test
jns
outsb
aas
push
mov
aas
and
sbb
into
fcoms
inc
loope
jle
das
pop
xchg
push
sbb
push
shrb
mov
cmpsb
xor
loopne
loop
adc
push
scas
int3
adc
lock
imull
mov
jl
jo
enter
inc
mov
bnd
lock
mov
call
loop
cmc
push
mov
fimuls
pop
loope
leave
jp
inc
jns
mov
addl
pusha
mov
sub
orb
mov
fsubs
or
ret
shrb
cmpl
push
ja
dec
iret
inc
jge
aas
out
lea
sub
sahf
hlt
movsb
mov
mov
or
popf
gs
jb
andl
jp
mov
ljmp
icebp
dec
xchg
sbb
rolb
sbb
add
outsl
add
lret
mov
mov
iret
jmp
shll
scas
stos
mov
in
test
push
fdivrl
pusha
into
test
mov
pushf
inc
in
test
pop
pop
or
in
inc
int3
loopne
push
int
or
cmp
repz
in
std
mov
mov
xor
or
lds
pop
cmp
and
mov
mov
cmp
sahf
movsb
mov
or
adc
push
rorb
mov
div
stos
sahf
xor
loopne
add
cltd
inc
add
jb
pop
xchg
adc
ds
cmp
adc
cmpsl
cmp
mov
js
outsl
fldt
add
cmp
out
insl
das
fsub
adc
push
jl
dec
repz
and
fwait
and
mov
cmp
push
mov
pop
addr16
mov
sub
shlb
pop
or
and
lds
and
mov
adc
adc
or
dec
int3
and
fistps
jmp
pop
pop
dec
mov
cmp
xchg
jle
pop
mov
jbe
jne
lods
xor
call
cmp
clc
sub
mov
cwtl
insb
insb
xlat
lods
or
inc
jg
xlat
int
pop
push
pushf
push
repnz
xchg
xchg
jbe
pushf
mov
and
pop
sub
cmp
repnz
and
mov
sbb
test
and
xchg
pusha
outsb
popa
xor
pop
out
movsb
movsl
jmp
stc
loope
lret
icebp
pushf
sarb
lea
fwait
mov
mov
mov
push
mov
movl
jnp
loopne
divb
scas
fldz
fsub
or
lds
mov
enter
push
push
in
sub
out
mov
sbb
pop
lcall
clc
sub
and
leave
add
dec
sub
cmp
and
or
fists
or
inc
mov
fiadds
pop
lock
jmp
movl
sbb
pop
push
mov
loopne
push
ljmp
les
mov
or
lea
mov
rcl
xchg
cvttps2pi
push
cmp
cmp
mov
in
cmpsl
cmpsl
mov
push
inc
shrl
xchg
gs
inc
xlat
popa
gs
push
xchg
pushf
shlb
andb
jge
ror
fldl
dec
mov
and
stos
dec
sbb
out
push
jne
inc
int
or
lods
sub
sub
les
aaa
jle
mov
cs
xchg
cmp
mov
pop
das
cmp
or
rcl
inc
ss
and
into
fwait
pop
sub
les
popa
daa
adc
cmpsb
pop
push
movsl
enter
jbe
rcrl
pusha
push
mov
ret
sbb
ds
xor
fisubrl
cld
and
movsl
dec
mov
shll
cmp
cwtl
gs
scas
lods
or
in
fstpl
idivb
fistps
andb
fcmovnbe
ror
push
sub
sub
out
std
mov
sahf
out
repnz
jmp
repnz
adc
repz
not
lret
push
add
call
popf
push
mov
pushl
imul
daa
mov
lods
icebp
in
jo
outsl
mov
fistl
mov
mov
jo
sahf
pop
loop
xchg
in
add
mov
mov
xchg
fidivs
mov
rcrb
movsb
xchg
mov
adcb
mov
dec
jecxz
or
add
loop
imul
fs
dec
xchg
rclb
in
add
fsubrs
inc
or
lcall
jmp
std
lods
xchg
push
mov
pop
xor
xchg
movsl
aas
and
xchg
cmp
sbb
js
mov
jae
and
loopne
inc
mov
sahf
jnp
es
inc
push
cmpl
cld
movsl
dec
sbbl
adc
test
sbb
imul
test
sbb
lods
cmpsl
aas
mov
cmp
popa
cmc
cltd
xchg
mov
push
sahf
scas
repz
pop
xchg
and
pushf
mov
inc
push
outsb
in
pop
xchg
fsubs
aaa
in
lret
push
mov
fstpt
or
and
lds
xchg
pop
or
cmp
andb
nop
sbb
hlt
fisttpl
outsl
pop
inc
cmc
lods
or
ret
push
add
lahf
into
lds
cs
fwait
push
es
sahf
xchg
mov
insl
xchg
xchg
movsl
test
fisttpll
lock
cmp
imull
inc
sbb
lret
cmp
iret
mov
loopne
std
inc
mov
push
mov
fsubl
push
xor
jge
arpl
je
das
gs
loope
ljmp
jecxz
in
test
xchg
cli
xchg
sub
push
sar
inc
xor
repz
aad
sbb
shr
fimuls
daa
xchg
jne
adc
int3
stos
cmp
out
sbbl
mov
xor
mov
das
aam
in
outsl
mov
sbb
fsub
adc
or
mov
test
push
ficomps
popf
cs
hlt
sub
cld
inc
mov
xchg
fsubl
jno
or
xor
mov
mov
in
dec
or
sbb
imul
shll
arpl
lret
jae
leave
inc
out
inc
sarl
enter
mov
cld
orl
scas
xor
sbb
loop
pop
das
test
xchg
arpl
inc
div
xchg
call
leave
lea
cld
and
lea
test
das
adc
shl
call
push
outsb
mov
aad
push
gs
movups
dec
pop
fildll
bound
clc
jp
jmp
nop
push
arpl
xchg
or
cmp
cmp
cmp
mov
stos
aaa
mov
scas
lcall
das
bound
xchg
orb
mov
rorb
xchg
sub
xor
in
dec
xorb
adc
push
and
daa
sbb
inc
idiv
pop
sahf
push
push
inc
and
push
xor
lret
inc
pop
cmc
dec
mov
stos
ljmp
roll
sbb
xor
mov
mov
lds
jns
pop
and
mov
push
cmpb
jne
int
outsb
push
push
add
js
out
pop
out
sarl
mov
repz
jne
in
fdivr
aad
xchg
adc
cmc
bnd
inc
push
popf
mov
mov
lcall
jmp
js
mov
jge
mov
jl
push
or
testl
inc
ja
and
mov
cli
lds
sbb
or
stc
sub
sub
fists
mov
and
icebp
mull
insl
or
jnp
sbb
ret
fstps
sub
xorb
cmpsb
shll
xchg
and
pop
fs
dec
inc
cwtl
mov
insb
pop
fsubl
ljmp
out
leave
push
shl
cmp
adcb
dec
enter
pop
push
mov
test
add
sbb
inc
pop
repz
cmpsl
test
popa
xor
ja
push
andb
cmc
lock
in
mov
sbb
int
in
ja
add
fadd
sbb
fwait
and
pop
popa
shrb
cmp
pusha
negl
xchg
fwait
jne
dec
leave
clc
dec
sub
adc
in
int3
adc
test
jne
stc
add
xor
sub
mov
adc
leave
in
mov
hlt
jmp
adc
rolb
shl
mov
jmp
sbb
inc
push
jbe
or
jno
stos
sarl
adc
sbb
xor
xor
inc
and
jl
mov
imul
mov
inc
sub
fsub
notl
je
sub
aad
xchg
mov
lret
bound
jae
test
xchg
movsb
push
xor
test
nopl
fcompl
sub
rcr
cmc
cmp
andb
int
sbb
fbld
and
add
xchg
nop
adc
test
rcl
aam
and
test
adc
jb
dec
orb
sbb
mov
adc
mov
add
aas
adc
push
mov
xchg
ret
push
ljmp
sbb
sbb
mov
shll
mov
cli
push
jmp
inc
adc
cmpsl
dec
je
movd
in
je
and
inc
mov
and
sub
popa
sbb
mov
shlb
stos
add
mov
sbb
jle
test
jo
push
push
jno
repz
ss
dec
cmp
jp
or
rorb
sub
pop
adc
pop
pop
outsb
pop
push
push
xchg
sbb
gs
push
mov
inc
push
call
xor
sbb
add
lods
hlt
add
test
lret
inc
or
push
out
or
in
loopne
jns
inc
stc
mov
scas
jmp
arpl
mov
push
push
lret
fisubrl
out
jl
lahf
pop
cs
gs
lret
inc
xor
icebp
lock
xor
leave
pop
ljmp
dec
mov
je
test
jg
ret
ja
mov
pop
sub
shl
data16
and
push
mov
mov
pop
push
sti
jmp
mov
sbb
stos
jns
cmc
nop
test
divb
mov
pop
loop
push
push
mov
scas
sub
sbb
mov
rcll
test
call
clc
int3
mov
insb
cli
mov
sub
ljmp
mov
jne
scas
add
xchg
rcll
les
lock
add
sarb
mov
mov
sub
sub
xchg
mov
movsb
push
jecxz
sbb
cmc
popa
adc
xor
mov
or
out
lock
pop
ret
icebp
cmc
cs
cmp
xchg
dec
and
enter
mov
jg
daa
mov
mov
and
aad
jnp
mov
push
dec
out
mov
push
rcll
jmp
stos
in
in
push
in
jmp
jbe
inc
cmp
mov
pop
pop
jle
push
addl
outsb
dec
inc
clc
std
mov
int3
loope
test
push
fcomps
sbb
mov
push
lret
mov
sbb
adcb
cmp
and
push
add
rcrl
icebp
sahf
pop
fisttpll
push
mov
pop
aam
mov
int3
bound
test
pop
sub
cmp
xchg
xor
jg
mov
hlt
pop
mov
mov
push
insb
cmp
loope
cltd
jge
rorl
mov
dec
cmp
ds
movsb
aam
push
cwtl
jns
wbinvd
fcmovu
xchg
aam
outsb
adc
pop
xor
mov
dec
mov
mov
mov
movsb
fdivl
ljmp
aas
pop
test
leave
add
psrlq
dec
out
test
lea
jo
outsb
or
dec
repnz
ficomps
lahf
std
ret
mov
xor
sbb
add
data16
mov
clc
int
aam
daa
fwait
pop
mov
jp
mov
and
add
cwtl
lret
dec
mov
mov
and
and
inc
xor
pushf
aad
inc
push
sahf
aaa
stos
push
shll
and
and
inc
mov
enter
and
mov
dec
popf
cwtl
jne
adc
mov
shll
xchg
into
js
into
push
cmp
xchg
fistl
jb
movsl
mov
pop
andb
push
mov
sbb
loope
or
ja
insl
hlt
out
pop
xlat
dec
addr16
dec
cmc
ja
sbb
sbb
out
xchg
xchg
jmp
lcall
xor
add
jp
xchg
loopne
fbld
mov
mov
sbb
lods
xchg
mov
mov
arpl
mul
cwtl
adc
sahf
movl
adc
dec
shll
les
aaa
mov
test
xchg
xor
sub
mov
jb
xor
jl
out
fisubl
clc
lret
outsl
jge
xor
leave
push
outsb
mov
mov
xor
ds
jo
mov
mov
fidivrl
inc
mov
mov
imul
cmpl
pop
iret
adc
mov
inc
jne
xchg
push
movsl
leave
lret
xchg
inc
mov
fdiv
popf
cmovns
cmp
xchg
push
pop
dec
arpl
fdivl
test
insb
jo
popf
aad
jl
outsb
mov
and
ja
or
mov
xchg
bound
rep
add
cmp
adc
sti
mov
fisttps
push
fidivrl
mov
sbb
pop
pop
es
data16
lret
push
js
mov
movsl
stos
call
mov
rorl
xchg
mov
pop
lret
arpl
into
or
movsb
xlat
jo
mov
fstl
notb
push
jl
inc
test
dec
mov
cs
insb
daa
aaa
mov
pop
and
sub
das
leave
cli
fcoml
into
dec
jmp
pop
inc
add
cltd
mov
aas
pop
movsl
xchg
ret
test
dec
inc
out
lods
push
in
pop
pcmpeqw
nop
sbb
aad
inc
add
cmc
and
in
inc
add
mov
ja
lock
xchg
pop
mov
rol
out
scas
out
mov
and
out
dec
js
mov
xor
or
sbb
ret
rorb
and
mov
out
pop
xchg
push
mov
das
daa
rol
repnz
movsb
jae
int3
das
inc
sahf
and
repnz
int
repnz
inc
cmp
jmp
xor
add
xor
cli
out
push
mov
mov
inc
test
inc
call
xor
sbb
mov
jecxz
aas
push
aad
jns
pop
rcl
lret
imul
push
pop
das
mov
ret
pop
jecxz
xor
jae
loopne
loopne
fistl
or
movsb
jbe
insb
out
fdivrp
mov
pop
cmp
and
scas
xchg
dec
sbb
aam
push
and
push
int3
sub
testb
mov
mov
jmp
iret
adc
and
push
or
lcall
jno
sbb
sub
decl
pop
sub
scas
data16
adc
mov
scas
fldt
leave
jmp
mov
mov
cmp
sub
pop
push
and
xchg
add
sbb
mov
cmp
jo
in
ja
out
in
movsl
arpl
loope
cmc
enter
imul
adc
add
loop
int
or
sti
sub
sarb
sbb
xchg
loopne
sub
repz
pop
sbbb
inc
int
rclb
les
cmpsb
sbb
adc
jmp
cmpsl
test
popf
cmc
add
loop
cmp
outsl
mov
outsb
inc
int3
dec
pop
pop
fnstsw
add
test
jecxz
cli
cmp
flds
stos
or
xchg
mov
inc
test
andl
out
adc
inc
push
outsl
jmp
jp
ret
jns
insb
sbb
pop
lret
inc
xor
in
pop
push
push
lret
icebp
xor
adc
pop
outsb
push
cmp
lock
repnz
push
adc
ret
and
sub
fmull
sub
dec
mov
add
stc
jle
cmp
pop
jo
mov
mov
cld
stos
push
pop
jnp
push
cltd
pusha
push
and
lret
daa
or
fwait
push
lret
mov
fmuls
loope
popf
add
shll
sti
xchg
out
js
loope
jae
lock
sbb
mov
xchg
jmp
outsl
push
push
jle
mov
or
cmp
int
inc
mov
insb
jno
and
xchg
je
fwait
pusha
mov
ret
in
aam
stos
xchg
pop
jecxz
push
in
jg
pop
sti
jmp
xor
or
loopne
push
adc
and
push
call
stos
negb
push
mov
xchg
divb
push
add
aam
les
repz
push
pop
pmaddwd
inc
iret
mov
ljmp
push
sbbl
mov
pop
gs
scas
imul
mov
fidivrs
je
std
mov
xor
add
shl
pop
pushf
loopne
mov
push
rclb
js
stos
push
xor
sub
rorl
add
lods
mov
icebp
fldt
or
jns
pop
lahf
dec
sbb
adc
mov
fnstcw
adc
cmp
sub
inc
push
ja
prefetcht0
frstor
fstl
mov
aaa
dec
sbb
xor
arpl
icebp
insl
adc
sbb
das
push
cmp
insb
add
out
out
jbe
xor
rorb
inc
fisttpl
jmp
nop
mov
jae
xchg
lahf
out
mov
into
and
mov
cmp
mov
js
jmp
divl
push
cmp
pusha
sub
lods
icebp
xor
adc
jne
loope
xor
call
xor
inc
xchg
jp
test
mov
xor
jne
lock
mov
sahf
cmc
rorb
into
pop
add
jbe
jmp
mov
sarb
jo
ds
xor
push
repz
fisubs
fldcw
xor
mov
xor
cwtl
sub
jbe
xor
inc
push
mov
arpl
sub
jne
loope
xchg
lea
and
fstps
dec
push
mov
xor
pop
outsb
xchg
in
je
arpl
sbb
mov
mov
dec
aas
pop
push
or
imul
mov
push
cli
imul
or
fisttps
leave
es
fadds
or
cltd
das
inc
xor
jbe
pop
jmp
dec
ss
bound
pop
xor
aas
ret
mov
xlat
pop
push
clc
orl
cmp
lahf
lds
pop
fcomps
jg
mov
inc
lock
movsb
inc
scas
xchg
pop
fmuls
lds
adc
orw
jno
test
xchg
or
sbbb
mov
push
int
sahf
test
dec
test
add
mov
icebp
inc
xor
jmp
xchg
imul
outsb
stos
roll
dec
in
fadds
gs
mul
jle
inc
mov
jne
cli
lahf
add
popf
push
repnz
push
xchg
hlt
xchg
inc
cmpsl
and
push
mov
xchg
mov
mov
jmp
stos
rcrb
ror
lea
popf
int3
jb
inc
adc
adc
fxam
inc
into
push
xor
jl
cltd
stos
jp
mov
ret
adc
mov
sub
jle
in
cld
loopne
in
outsl
or
insb
notb
mov
cmp
add
ss
xchg
aas
mov
sub
cmpl
add
movsb
sub
testb
test
jge
into
mov
sub
mov
sarl
cmpsl
out
pop
jne
cmp
roll
test
adc
test
insb
push
fwait
or
mov
pop
pushf
mov
mov
or
push
roll
insl
jbe
pop
mov
scas
sub
ljmp
mov
pop
jb,pn
cmp
lea
pushf
dec
or
add
mov
movsb
add
lret
pop
and
cs
xor
sbb
insb
rcrb
mov
and
sahf
or
stc
xor
sub
jle
jle
cs
add
jmp
add
adc
aaa
mov
push
xchg
aam
rorb
leave
inc
aas
cmp
or
push
test
xor
mov
lds
push
fs
lods
mov
andl
popf
mov
ds
lods
jnp
rcrl
imul
mov
jge
pushf
aaa
shrl
fbld
xchg
xlat
mov
mov
mov
xor
push
adc
andl
test
mov
push
shlb
xorb
test
adc
enter
frstor
std
pop
and
xlat
xor
cmc
jb
inc
or
dec
pop
mov
cmp
in
in
call
mov
sub
enter
test
sub
into
push
std
mov
iret
mov
scas
dec
ret
outsl
in
push
aam
ljmp
ljmp
jne
lods
mov
mov
loop
jae
xor
jns
cmp
rcrb
add
push
testb
enter
pushf
sub
jecxz
inc
xor
fildll
imul
mov
das
int
femms
inc
cmc
arpl
cmc
in
in
push
inc
add
cltd
fimull
test
dec
testb
nop
mov
scas
or
xor
lock
adc
test
push
shlb
das
mov
xor
mov
or
test
push
xor
mov
push
inc
push
add
jb
icebp
leave
pop
insl
rcrl
jns
xlat
mov
jg
jns
aam
fidivrl
push
xlat
mov
in
jne
aas
out
push
mov
pop
movsb
arpl
add
lret
mov
frstor
pop
outsb
lods
and
sahf
inc
jb
test
jne
cmp
pop
ss
jmp
mov
dec
jbe
sbb
sahf
jmp
lcall
sbb
inc
push
mov
push
daa
mov
in
leave
fwait
sub
out
lods
out
dec
sahf
test
mov
mov
popf
cltd
mov
das
xor
xor
xor
mov
scas
mov
lahf
pop
xchg
rcrl
mov
xor
mov
lret
inc
orl
sub
cmc
int
and
mov
enter
sub
fs
jo
out
add
repz
sub
inc
arpl
jae
xlat
jbe
int3
insb
inc
adc
pop
and
push
push
mov
sub
das
aas
in
push
aas
xchg
push
stos
ret
jne
testb
ret
push
dec
test
aaa
add
test
aaa
mov
call
push
add
push
sub
outsl
xor
mov
sbb
or
loope
aad
adc
push
inc
cs
leave
mov
inc
pop
sub
rcll
dec
es
sbb
jmp
fstpl
js
and
lock
imul
mov
inc
fdiv
movsl
mov
fisttpll
cmc
jmp
cli
cltd
cs
push
mov
loopne
sbb
std
daa
sub
shll
ret
sbb
jmp
scas
mov
push
pop
aam
test
imull
cmp
or
sbb
js
dec
clc
xchg
sub
and
scas
add
jg
imul
adc
addl
es
pop
dec
ds
shrb
push
movsl
mov
in
in
cwtl
lods
aaa
fs
stos
mov
push
add
into
fwait
aad
sbb
add
lahf
repz
jno
push
xchg
imul
lock
rcrb
pop
xlat
mov
or
outsb
inc
mov
fdivrl
inc
push
es
push
jns
sarb
ss
hlt
xchg
dec
ret
sbb
add
mov
popf
pop
test
arpl
sarb
pop
and
add
and
comiss
or
in
dec
xchg
xchg
js
and
es
outsb
xchg
sarl
jnp
ja
negl
cmpsb
mov
sbb
in
jae
add
mov
jle
lahf
push
xchg
dec
sub
push
loop
gs
das
loope
and
pop
push
sbb
mov
and
cmpsl
mov
addl
xor
dec
mov
xchg
and
out
das
sbb
movsb
repz
or
clc
adc
fisubrl
or
scas
and
sbb
jmp
outsl
push
imul
mov
mov
xchg
xlat
repz
fwait
mov
addr16
fcoms
cltd
loope
lods
cmp
mov
jnp
inc
sarb
into
xlat
sub
cli
cmpb
inc
mov
push
mov
iret
dec
into
mov
aaa
insl
adc
push
adc
fcoms
jae
mov
frstor
fwait
insl
cmp
push
xor
cwtl
jp
stc
pushf
pop
shll
sub
fdivs
imul
mov
mov
aaa
ljmp
push
dec
scas
out
sub
sti
sbb
push
or
popa
lahf
outsb
popa
xor
popa
cmc
add
push
dec
clc
sub
xlat
repz
out
stc
add
jo
ficomps
jl
add
push
push
dec
js
xorl
arpl
and
sbbb
pop
bound
mov
jl
sbbb
shrl
out
mov
pop
sub
icebp
xchg
div
ja
pop
xchg
cmp
repz
insb
mov
bound
pushl
popa
push
add
cld
pop
stos
dec
pusha
das
or
cmp
scas
push
mov
jl
mov
fs
dec
shrb
aaa
push
jl
dec
push
or
fdivs
jmp
and
xor
nop
or
cld
sub
popf
push
push
hlt
add
stos
loope,pt
fs
cld
mov
movsl
xchg
mov
fcmovne
and
ljmp
mov
inc
mov
fmul
dec
xchg
xchg
jbe
dec
addr16
pop
xchg
sub
imul
mov
dec
adc
call
sbb
scas
push
dec
and
loop
loop
push
mov
inc
sti
push
push
je
iret
ljmp
lcall
aam
sahf
pop
or
aaa
mov
add
fmull
fwait
test
daa
dec
xchg
cli
test
pop
mulb
and
clc
dec
fnstsw
sbb
lock
pop
push
insl
xchg
scas
inc
inc
pusha
sub
js
enter
push
cli
cmp
xor
push
lock
ja
psllq
gs
dec
data16
push
dec
cmp
js
aam
lret
lods
js
ds
icebp
xchg
in
std
or
inc
mov
adc
je
lock
sub
scas
mov
dec
lea
rorb
mov
test
pop
adc
inc
sar
cltd
jp
jns
ss
mov
sub
push
xchg
movntq
out
lret
and
stos
jl
mov
push
or
outsl
or
sub
jp
fnsave
rcr
jp
add
sub
cmp
dec
push
xchg
inc
in
call
sahf
es
lock
scas
lahf
call
and
jmp
add
mov
jo
scas
cmpb
mov
lds
sarb
cli
into
sbb
sti
call
mov
mov
cmp
push
and
cld
jnp
lret
push
outsl
pop
scas
scas
fsubl
or
shlb
jle
in
data16
fwait
xlat
mov
push
push
dec
push
cmpsl
jae
sub
or
or
mov
cmp
lcall
mov
mov
mov
fwait
fs
push
xlat
xlat
out
mov
adc
inc
les
movb
sbb
imul
or
xchg
and
mov
mov
std
dec
pop
js
dec
xor
fidivs
mov
jne
pop
cwtl
clc
arpl
push
or
out
cld
mov
cmpl
adc
aaa
es
dec
jle
jne
add
test
sub
mov
mov
nop
popa
xchg
int
and
movb
pop
ja
pop
sahf
fdivrs
mov
loopne
lods
ret
lods
cmp
pop
cmpsb
ret
dec
subl
les
sti
out
and
push
cmp
push
jl
mov
les
dec
aad
daa
cmp
rcl
into
mov
inc
or
ret
out
mov
imul
mov
ret
int3
popa
mov
sub
cmp
stos
insl
arpl
adc
pusha
xor
shll
jo
iret
mov
sti
arpl
pop
xor
mov
je
pop
sub
cmp
frstor
dec
mov
cmp
daa
sub
mov
cwtl
bound
in
mov
lret
inc
xor
pop
and
mov
rcr
sbb
int
insl
jae
out
add
int3
mov
test
mov
mov
loope
loopne
and
pop
cwtl
jb
sub
add
stos
sbb
mov
xchg
xchg
and
es
cmp
mov
gs
pop
sbb
call
and
cmc
and
jl
or
jno
pop
push
add
gs
je
insb
xchg
ret
cmp
mov
sahf
lret
je
imul
inc
or
arpl
repz
aad
cs
sub
mov
ds
lds
dec
cwtl
jo
pop
jmp
test
cmp
or
mov
push
lock
cwtl
dec
clc
pushf
mov
inc
shll
xchg
cmp
jne
adc
jecxz
mov
outsl
jecxz
fidivrs
pop
dec
mov
sub
iret
dec
xchg
fists
fsubs
aad
inc
fdivr
inc
jne
scas
adc
call
out
jge
and
ficompl
xchg
jmp
fadds
adc
rcll
or
mov
inc
mov
outsb
add
lahf
and
pop
xchg
add
push
cmp
fmuls
inc
dec
mov
jle
mov
adc
pop
cmpsb
add
popf
mov
and
jecxz
mov
out
daa
dec
andps
jne
insb
mov
int
ret
push
push
cld
daa
mov
outsb
lahf
or
not
add
mov
clc
inc
cmpb
add
clc
call
inc
loop
xlat
mov
mov
or
xor
int
sbb
mov
lret
mov
pop
push
leave
dec
mov
xchg
mov
loopne
mov
test
add
aas
ret
popf
push
cmp
xor
lds
mov
lods
repz
mov
ds
scas
leave
ja
push
ficoml
data16
pop
xchg
sub
sbb
lret
outsb
cmp
and
pushf
xchg
cmp
es
stos
lret
es
mov
test
jg
ret
aad
sti
and
scas
int
push
out
fdivrl
cmpsb
and
ficomps
lods
mov
jecxz
adc
pop
adc
inc
fs
fiaddl
mov
add
rcrb
pop
xor
loop
adc
in
inc
sbb
adc
xor
lahf
mov
test
dec
jmp
fists
xadd
xchg
pop
and
xchg
jmp
adc
nop
lods
out
cli
aam
inc
push
je
sbb
pop
mov
repz
rolb
xor
hlt
and
cmpb
fsubs
das
addr16
xchg
in
mov
fmuls
jge
aaa
sub
mov
sub
call
and
lock
sub
push
fdivs
les
add
jp
loop
fcom
jecxz
inc
mov
sbbl
enter
rolb
xchg
mov
orb
lods
xchg
sub
xchg
lock
and
mov
xchg
push
icebp
xchg
lret
mov
lods
mov
add
sub
jbe
scas
test
mov
out
inc
cmc
faddl
ret
xchg
aad
mov
js
out
dec
pop
sub
int3
push
outsl
mov
pushf
lahf
cmp
rcl
sub
adc
mov
xor
repnz
cmc
jmp
loope
in
or
shrl
daa
xchg
cmpsb
xor
push
arpl
pop
adc
imul
stos
out
decl
ss
mov
stos
push
mov
mov
inc
xor
dec
cmpsl
rorb
das
ds
popa
sub
in
notb
xchg
jecxz
mov
out
pop
cmpb
fucomip
and
test
notl
mov
add
xchg
jnp
mov
mov
fwait
xlat
pop
xchg
and
enter
xchg
mov
das
syscall
mov
push
push
and
enter
jne
jae
sbbl
aad
pop
movsl
or
and
gs
aam
push
mov
filds
leave
xlat
ja
out
push
fcomps
int3
pop
jno
jecxz
mov
jl
cmp
adc
enter
lock
xchg
incb
clc
call
lcall
popl
push
xchg
adc
test
lock
sbb
pushf
mov
pop
ror
push
mov
jae
sbb
cmp
push
loop
pop
inc
call
in
ret
adc
push
inc
scas
cmp
insl
xchg
jmp
mov
push
push
es
pop
or
pop
mov
push
ljmp
lret
mov
fs
jl
or
mov
mov
out
and
or
push
das
les
sti
call
jl
vmovss
shl
inc
mov
mov
xor
xor
das
inc
lret
orps
sarb
and
adc
aad
cmp
jle
and
addr16
adcb
and
lret
mov
stos
xor
cmp
mov
out
hlt
mov
xlat
lock
adc
push
pop
push
dec
loopne
mov
js
jne
in
call
loop
push
push
xchg
xor
xor
xchg
das
xlat
test
pusha
and
movsb
insl
cld
testb
sbb
icebp
pop
ret
xor
ds
and
fnstenv
push
loop
pop
pop
cmpb
push
shrl
hlt
stos
cmp
inc
sahf
cli
cli
pop
sub
dec
add
or
test
in
dec
and
mov
adc
sub
cltd
nop
cmpb
or
repz
cmp
cmp
pop
adc
loop
jno
pop
mov
xor
sub
lret
xor
jnp
stos
enter
cmc
or
in
leave
fstpl
mov
stos
in
jbe
or
pop
mov
adc
test
outsl
xchg
push
cmp
mov
or
movsb
adc
aam
in
sbb
or
sub
int
pushf
xor
jae
jbe
add
push
inc
adc
lcall
leave
dec
mov
or
and
lods
cltd
mov
mov
clc
jmp
mov
mov
mov
loop
cmp
aam
fwait
pop
int
dec
fsubrs
or
pop
add
pop
btr
inc
sub
push
sub
or
es
incl
push
jg
lret
dec
gs
aad
sbb
in
cwtl
xchg
dec
lods
dec
call
arpl
xor
movsb
inc
mov
ficompl
insl
dec
ljmp
les
pop
test
sbbl
dec
imul
pop
aaa
xchg
int3
jge
cs
or
inc
out
push
lahf
pop
jl
cmp
push
gs
xor
dec
inc
push
inc
sub
call
aas
cwtl
pop
push
and
dec
mov
sarb
and
jl
lds
js
cmp
icebp
mov
fs
jnp
mov
notl
cmp
cltd
adc
movl
mov
sub
mov
mov
inc
hlt
pop
mov
fdivrl
mov
pushf
inc
fsubs
push
mov
mov
fucomi
cmp
sbb
dec
mov
mov
jmp
in
mov
fcoms
data16
cmp
sbb
ret
rcrb
mov
pop
fldl
push
test
lret
xchg
push
nop
sahf
push
adc
adc
sbb
arpl
je
jae
idivl
popf
and
dec
and
dec
sahf
es
cmp
push
mov
jl
movsl
jb
ja
push
int
aaa
push
inc
xchg
out
xlat
jmp
push
cmp
int3
aas
push
imul
jl
pop
jl
lret
call
mov
out
or
add
pusha
inc
mov
inc
sbb
outsb
insl
xor
fidivl
pop
les
cld
add
sbb
lcall
and
popa
cmp
mov
adc
sbb
insb
mov
adc
cli
mov
arpl
jge
arpl
mov
or
xchg
sbb
add
sbb
jecxz
cld
mov
loop
negl
arpl
imul
imul
mov
js
nop
std
in
adc
inc
mov
sbb
xchg
mov
ds
mov
les
mov
sub
lahf
repnz
hlt
lcall
mov
jmp
cmpsl
enter
enter
rcl
ficoml
in
jmp
ds
sbb
fidivs
filds
push
xchg
sahf
jb
mov
dec
push
sbb
mov
pushf
nop
push
and
add
mov
sub
rcll
mov
je
fwait
pop
or
roll
sub
mov
fcoml
jp
shrb
pop
pop
pop
push
push
ret
popf
xchg
inc
loop
mulb
pop
xchg
cmc
fdivr
out
insb
push
jb
jo
jb
pusha
mov
subl
shl
dec
xchg
setae
cli
jge
xor
popa
xchg
xchg
fistpll
pop
push
mov
call
int
loop
jmp
push
out
loopne
push
xor
push
into
or
xchg
dec
pop
leave
rolb
mov
push
jnp
xor
negl
push
into
jo
repnz
cmp
data16
mov
lea
push
into
jns
jg
lods
push
pop
dec
dec
xchg
xchg
and
adc
dec
mov
jb
mov
xor
cli
dec
jne
int
xor
pop
sahf
divb
scas
fiadds
out
inc
jecxz
loopne
out
sbb
test
add
pop
jo
pop
jns
pop
cmpsb
dec
stc
popa
xor
pop
cmpsb
inc
sarl
jmp
rcll
mov
int
inc
xchg
mov
mov
push
adc
mov
inc
xor
cltd
arpl
cmp
mov
mov
sub
jmp
popa
imul
andl
adc
fs
add
xor
pop
mov
sbb
int3
dec
movsb
in
sub
adc
stc
fsub
aad
out
das
repz
cmp
push
loop
in
cmp
in
xor
and
repz
cltd
pop
add
arpl
movsl
les
sbb
mov
mov
push
push
mov
repnz
xchg
sbbl
xor
scas
in
outsb
and
cmp
and
js
pop
xchg
ret
call
dec
ss
push
in
jbe
push
ficompl
aaa
mov
fmuls
and
mov
lret
scas
jmp
mov
add
jns
adc
pop
pop
loope
mov
in
push
mov
cmp
icebp
loop
jmp
pop
sahf
lret
xchg
mov
jmp
mov
mov
pop
pop
or
scas
fstpl
push
repz
xor
loope
imull
or
add
addr16
jb
fmul
dec
pop
mov
cli
sub
add
jb
push
dec
xchg
mov
loopne
sbb
insb
jno
and
packuswb
adc
push
mov
subb
xchg
inc
icebp
push
sub
ljmp
popa
mov
xchg
or
pop
popf
addr16
jp
or
push
clc
fs
push
stos
aad
add
leave
dec
mov
out
stos
xor
xor
mov
xorb
fimull
push
dec
pop
daa
fsubrp
xor
jge
addr16
outsb
xchg
cmp
std
mov
in
rcr
mov
jo
andl
push
xchg
xor
xchg
aaa
push
rcrl
pop
test
pop
pop
xorl
push
cmp
test
movsl
pop
lds
pop
and
ds
lret
jo
rorl
sbb
xor
loopne
jg
insl
mov
xlat
cli
and
dec
repnz
push
outsl
imul
mov
mov
mov
push
pop
les
fdivr
pop
mov
arpl
mov
sub
mov
aaa
dec
addr16
fs
jne
ss
mov
aaa
or
push
dec
js
mov
lret
out
xchg
mov
push
xchg
jne
add
sbb
jge
xchg
adc
jmp
jp
push
mov
pop
scas
push
aad
inc
imul
cs
scas
cs
push
xchg
or
add
sub
xchg
push
fbld
andb
sbb
fbstp
jb
push
and
or
xchg
or
sub
test
sbb
jle
std
stc
pop
cmp
cmpsb
js
fcmovne
pop
outsb
test
insb
inc
aad
push
mov
xor
test
stos
inc
mov
pop
mov
xchg
cmp
inc
mov
fneni(8087
cmp
imul
add
cwtl
push
pop
subl
jecxz
inc
pop
mov
je
adc
jmp
or
addl
cmpsb
cmp
repnz
cmp
mov
leave
movsb
sbb
popf
fistps
sbb
sub
xlat
cmpsl
mov
add
and
sti
setle
leave
stc
cli
sbb
sbb
adc
and
push
sub
adc
mov
ror
movq
fists
mov
sbb
jnp
lds
cmp
inc
repnz
pop
pop
cmp
std
xlat
pop
lods
push
xchg
add
insb
in
test
pushw
gs
sub
into
mov
jmp
adc
sub
sbb
lock
out
orb
mov
push
adc
and
inc
or
aad
into
mov
add
jno
inc
or
mov
adc
dec
cwtl
sahf
jp
lret
mov
lret
mov
pop
push
arpl
cli
scas
mov
xor
into
cwtl
out
inc
cmp
or
incl
outsb
into
stos
pop
sti
clc
cltd
pop
adc
insb
mov
inc
fistpl
push
cmp
adc
inc
fsubr
pop
popf
mov
mov
push
js
or
nop
push
les
push
adc
mov
pop
lea
mov
dec
lods
cmc
xlat
dec
outsl
inc
jne
out
ret
add
add
je
jle
adc
ljmp
add
adc
push
hlt
icebp
jg
int3
shrb
test
pushf
filds
out
push
inc
cmpsl
jbe
int3
call
mov
out
jno
fldt
popf
cmpsb
cmp
arpl
out
aam
mov
or
loopne
movl
mov
pop
pop
sub
lods
clc
jns
addr16
cli
mov
jbe
jl
mov
out
dec
pop
mov
adc
jge
mov
add
icebp
andb
dec
rcr
pop
add
in
popa
and
mov
mov
jne
mov
push
xchg
test
dec
icebp
pminub
inc
pop
push
lahf
push
xor
mov
insb
addr16
cmp
movsb
das
xor
xor
lock
xor
or
cmp
lcall
xor
int
jl
dec
xchg
mov
and
adc
in
addr16
fmuls
andb
fcomps
out
push
and
pop
cs
push
es
adc
cmp
test
sahf
adc
mov
nop
insl
stos
jmp
repz
inc
aam
cmp
repz
sub
cwtl
test
mov
dec
inc
add
rcrl
mov
insb
jge
out
bound
xor
or
jb
mov
rorb
icebp
or
and
stos
in
dec
pop
dec
js
jae
jbe
lods
and
add
test
add
lods
addr16
or
les
dec
nop
push
out
and
lods
jmp
movl
hlt
xor
fwait
xchg
jge
mov
in
cmp
icebp
mov
adc
mov
pop
rclb
adc
or
arpl
pop
es
add
pop
leave
nop
scas
rcr
daa
mov
sarl
jmp
pop
or
push
rorl
aaa
loope
clc
shlb
xchg
ljmp
insl
outsl
outsb
xor
arpl
ret
jno
in
cwtl
sub
cwtl
aaa
hlt
dec
mov
or
mov
cltd
mov
aas
mov
mov
add
push
mov
int3
pop
xchg
xchg
in
xchg
rcrb
mov
roll
pop
addl
iret
mov
int
xchg
insl
addr16
mov
jo
insb
negl
or
cli
xchg
push
orl
shll
jo
shlb
xor
ficompl
aad
cmp
and
jge
iret
les
pop
fs
lods
test
pmaxub
stos
mov
std
xor
out
jns
inc
fcomi
aaa
mov
div
pop
pop
pushf
push
mov
jmp
mov
dec
mov
shlb
add
pop
sahf
jmp
xchg
out
scas
test
sbb
or
sub
fstpl
es
mov
sub
push
mov
andl
jne
es
ret
mov
jo
dec
dec
or
aam
and
mov
jb
push
sbbl
insl
cmp
mov
pop
sbb
pop
sahf
add
hlt
test
xorl
push
mov
ss
xrelease
mov
inc
icebp
jnp
or
pop
loope
out
test
xor
int
jmp
and
mov
adc
stos
mov
mov
push
jmp
push
push
mov
sbb
mov
xlat
push
inc
cmp
mov
ds
and
cmp
int
and
push
out
loope
cmp
imul
pmulhuw
in
cli
scas
mov
pop
or
push
enter
lahf
out
pop
mov
loop
scas
jmp
ja
addr16
inc
dec
outsl
mov
pop
aas
push
pop
mov
cmp
test
lcall
mov
xchg
ret
notl
or
mov
faddl
mov
add
xorl
sub
aaa
cmpsb
jo
ljmp
and
or
xchg
pop
jmp
mov
mov
mov
popf
or
xor
cs
int
lds
add
pop
sarl
aaa
rorl
and
ret
inc
pop
inc
bound
xor
sbb
push
mov
jp
mov
add
sbbb
add
hlt
push
iret
lahf
inc
and
xchg
pop
push
ret
mov
shll
repz
clc
xor
jmp
and
xchg
push
je
push
outsb
pop
loopne
aad
loop
loopne
int
lea
mov
cmp
pop
adc
out
loopne
cmp
sub
mov
in
jno
sub
jg
dec
dec
push
jb
mov
iret
clc
cmp
pop
jg
push
push
sbb
les
push
and
push
int
jbe
test
cmpsb
ret
push
jbe
lret
rclb
inc
rcll
xchg
lods
movsl
adc
inc
lea
loopne
lds
arpl
incl
jo
add
fs
xor
sbb
mov
int
and
out
shlb
sarb
mov
xchg
insb
jne
mov
adc
inc
lret
das
mov
lods
sbb
push
shll
orb
in
imul
mov
shlb
cltd
outsl
sub
xor
sti
clc
dec
orb
xchg
inc
sbb
push
mov
inc
fs
xor
mov
mov
mov
jle
gs
je
out
mov
or
test
and
pop
push
or
daa
test
xor
or
sub
or
mov
sbb
iret
subl
mov
push
add
push
rorl
xchg
mov
ret
ficompl
mov
add
outsb
or
or
push
aam
add
sub
push
aad
dec
push
xor
sbb
push
fcmovbe
cli
fucomip
sbb
cmp
stos
ds
or
outsl
shl
cmpsl
pop
bound
fidivs
mov
test
int3
cs
sahf
les
sub
imul
cmp
cld
out
adc
add
nop
gs
fnstcw
mov
lret
in
cmp
cmp
out
idivb
or
push
incb
int
ret
push
fs
mov
xor
daa
fstl
cmp
fs
cmp
daa
fmul
and
outsl
dec
cmpsl
dec
sub
aas
jnp
js
jo
add
aam
imull
arpl
xchg
lret
imul
jecxz
pop
or
inc
je
jmp
dec
dec
or
testl
or
popa
sbb
inc
aad
or
add
inc
jmp
sub
pop
inc
push
push
mov
rol
popf
in
in
push
ret
rcll
aam
outsb
sub
mov
cmp
inc
jo
jle
add
mov
adc
add
or
lcall
xchg
sarb
cmpsl
fdivr
aam
dec
mov
jno
push
outsb
adc
outsl
xchg
mov
jl
sub
cltd
movsb
dec
cld
cmp
aam
adc
dec
or
inc
push
cli
xlat
jae
pop
hlt
out
outsb
jecxz
cmp
test
push
add
imul
ret
push
adc
insb
pop
jp
jae
and
iret
mov
mov
push
inc
push
fs
sbb
dec
test
pop
test
sbb
push
mov
iret
lds
int
mov
nop
sbb
cmpsl
movsl
rcrl
xlat
add
int
outsl
shlb
into
dec
xor
fsubrs
outsl
mov
lret
mov
or
and
pop
and
pusha
sbb
xchg
xor
and
cmpsb
popf
insb
mov
sbb
push
adcl
cmpsb
sbb
inc
push
mov
lret
add
fcmovnu
popa
sti
in
mov
push
ja
loopne
dec
and
and
push
and
jb
fildll
jae
pop
pop
loope
push
sub
cmp
clc
mov
mov
xor
cmp
pop
jo
leave
or
mov
xlat
mov
push
in
insb
mov
mov
mov
adc
aaa
out
xlat
sbb
rolb
cli
mov
mov
icebp
call
mulb
push
jmp
sub
fdivr
push
cmpsb
mov
xor
stc
push
icebp
repnz
jnp
jle
jb
lret
call
fisubrs
ljmp
jne
dec
mov
lock
dec
jg
adcl
mov
cmp
add
cmp
sub
xchg
mov
push
call
xchg
lea
mov
mov
insb
mov
into
icebp
mov
movl
adc
mov
inc
pop
push
test
and
decl
and
leave
mov
xchg
or
lock
xlat
push
je
stc
into
addr16
xchg
dec
aad
int3
xchg
or
lret
mov
in
cmp
fs
sti
add
orb
andl
jg
xor
cs
dec
int
pushf
outsb
jo
jnp
mov
bound
rorb
sbb
repz
jne
into
bound
cli
push
add
daa
jmp
jb
push
dec
xor
push
dec
cmpsl
mov
sub
and
mov
fidivrl
inc
pop
int3
cmpb
mov
fucom
add
orb
jmp
cmp
test
in
push
sti
sbb
loop
fcomps
xchg
mov
call
cmp
xor
xchg
or
sahf
ret
mov
mov
jne
inc
push
stos
inc
mov
sub
lea
sbb
dec
es
out
rorl
sbb
addr16
xlat
out
and
test
jmp
xlat
mov
pop
mov
push
rep
hlt
aaa
sbb
sub
loope
leave
dec
gs
inc
and
sbb
or
dec
xor
leave
mov
xchg
adc
js
lds
sbb
mov
insb
adcb
cmp
inc
pop
addb
mov
out
adc
jnp
jp
xor
xor
cmp
lret
mov
cmpsl
add
rclb
insb
pop
dec
mov
xchg
jl
push
sub
popf
lahf
addb
test
mov
inc
or
test
addr16
mov
adcl
test
mov
push
cmc
cmp
xchg
outsl
xor
fidivl
insb
dec
out
jo
add
sar
scas
cmp
lea
xor
xchg
test
push
sbb
push
insl
ljmp
mov
cmovo
outsl
repnz
mov
loop
jge
leave
mov
dec
jb
jg
test
mov
lret
push
cmp
popa
inc
cmp
adc
dec
jecxz
jne
and
push
int3
sbb
cs
jo
xor
sub
push
cmp
cmp
les
loope
xchg
xchg
rcll
add
inc
adc
and
dec
dec
lods
ficomps
xor
pop
pop
nop
out
es
pop
or
roll
dec
xor
fsubr
int3
testl
push
or
xor
ds
das
sub
loop
dec
dec
adc
out
mov
adc
jne
mov
and
fcoms
bound
push
fcmovne
pop
lret
in
jmp
xchg
push
sub
or
push
daa
scas
aaa
cmp
and
fisubs
add
ja
add
sub
scas
pop
je
clc
jge
pmaddwd
mov
gs
push
int3
push
xor
cwtl
mov
mov
inc
lret
sbb
mov
ret
jne
jle
scas
mov
popl
sbb
or
jl
pop
cli
cmp
pop
xchg
ret
add
inc
mov
and
inc
mov
das
jno
jl
nop
adc
outsl
leave
repz
or
xchg
mulb
lock
jg
scas
lret
mov
xchg
int
push
push
call
jne
shlb
aad
add
sbb
adc
das
xchg
adc
inc
inc
adc
or
sahf
imul
arpl
fistpl
test
pop
outsb
ja
iret
pushf
dec
iret
xlat
add
sbb
ret
push
cmp
mov
mov
or
cmp
fcoms
jp
ja
and
xor
je
or
cmp
dec
mov
sub
mov
insb
and
pop
fs
sub
cmp
adc
fsubs
pushf
imul
mov
call
ret
ljmp
cmp
and
xchg
sub
push
loop
out
mov
ds
mov
mov
push
jno
push
decl
icebp
inc
or
mov
div
xchg
jo
out
jbe
mov
ljmp
aam
popa
push
mov
jmp
lods
adc
insb
rcrb
ss
imul
sub
jecxz
fwait
and
mov
dec
xchg
clc
push
push
adc
mov
sub
int3
popf
sarb
jmp
xchg
mov
fldcw
mov
mov
cmpsl
aas
nop
xchg
ss
or
mov
cli
adc
cmpsb
xor
jl
dec
repz
push
iret
ret
pop
scas
adc
mov
sub
dec
movsb
das
in
aaa
std
jmp
cltd
out
jmp
mov
stos
sahf
cmp
call
jae
ds
rcll
jl
imulb
pop
shlb
mov
shlb
sbb
xchg
shll
insl
mov
out
arpl
mov
push
or
stos
ljmp
xorl
mov
jb
cwtl
sbb
mov
or
inc
bound
and
fdivrs
and
xchg
xor
sbb
xchg
frstor
lahf
dec
in
insl
cmpsl
dec
sub
popf
pop
js
xor
int
repnz
sub
lret
js
sub
movsb
lods
es
out
fs
pop
push
sahf
adc
jg
add
imul
in
inc
and
inc
sbb
mov
or
jp
sub
ret
or
cmp
lock
int
pop
enter
lods
pop
sub
repnz
stos
cmp
and
fldt
mov
mov
xor
add
sub
xlat
push
xor
cmpsb
pop
pusha
pop
cmpsb
les
cmpsl
push
mov
pop
jp
addr16
mov
xchg
jnp
dec
xor
jmp
aam
lahf
imul
sarb
pop
leave
insl
ja
psllq
in
hlt
movsl
adc
pop
push
frstor
and
jl
in
shll
outsl
imul
sbb
mov
inc
and
test
mov
enter
and
xor
lret
and
push
mov
cmp
add
loopne
fmuls
adc
movb
mov
fcmovu
cmp
pop
bound
ficompl
lods
mov
push
xchg
call
scas
ljmp
push
adc
mov
sahf
int3
imull
jo
mov
xlat
push
lock
lea
sbb
and
and
sub
dec
inc
mov
push
mov
addr16
mov
dec
lcall
push
adc
inc
das
insb
popa
jns
subl
cmp
cmc
jle
imul
xor
pop
push
idiv
ficompl
mov
cs
aaa
or
jae
jae
cltd
sbb
dec
mov
fldt
xor
lret
xchg
sub
out
or
fisubs
out
add
out
add
sti
inc
icebp
mov
data16
push
mov
xchg
xchg
cmp
and
xchg
jns
lods
clc
mov
mov
xor
inc
or
ss
lods
and
stos
jbe
shll
mov
mov
cmp
push
cmp
mov
add
jecxz
ss
je
dec
sub
xor
repnz
mov
lret
rcrl
pop
mov
daa
inc
notl
cwtl
sub
sbb
inc
mov
mov
xchg
or
idivl
fadds
mov
outsl
mov
mov
in
fsubl
add
xchg
jae
repz
test
test
out
sbb
push
inc
in
movq
and
cmp
ret
xor
mov
jno
inc
lcall
dec
aam
mov
jge
insb
shr
aaa
jno
aad
nop
mov
and
push
mov
mov
cmp
cmp
out
xchg
nop
fisubrl
xor
fld1
mov
jo
inc
enter
mov
add
adc
test
neg
sahf
das
mov
std
loope
cmp
jle
movsl
push
pop
aaa
or
mov
jmp
test
mov
mov
cmp
jnp
ror
scas
test
rcr
mov
jle
pop
pusha
lret
mov
mov
adc
filds
pop
cld
pop
aaa
lret
lret
pause
lods
push
mov
add
loope
testl
lret
stos
xchg
mov
push
in
movsl
int
push
sub
mov
aam
xchg
les
jle
mov
hlt
dec
insb
adc
ret
push
test
icebp
sub
mov
popa
fsts
lsl
insl
repz
cs
mov
lcall
sbb
fsubr
xor
jnp
dec
dec
pushf
jne
dec
into
pushf
xchg
insb
dec
shll
shlb
adc
or
sub
aad
and
inc
rcll
jle,pt
push
ss
out
daa
inc
xor
in
movsl
pusha
scas
jbe
cmpsl
add
out
sub
scas
inc
push
push
mov
mov
popf
cwtl
js
and
mov
mov
inc
sbb
bound
mov
in
xchg
pop
jne
add
dec
rolb
push
ljmp
push
rol
mov
adc
sbb
jl
lret
in
jle
daa
inc
push
inc
jge
adc
cmpsl
cltd
sar
rcrl
scas
subl
jb
in
je
mov
psubd
push
sub
das
cs
int3
mov
or
fucomp
aam
add
movlps
mov
pop
adc
mov
testl
gs
fiaddl
inc
inc
nop
inc
push
pop
ss
je
xlat
sahf
dec
and
xchg
fs
loopne
in
mov
ds
push
fimuls
inc
pop
test
test
dec
ds
mov
pop
shrl
les
dec
dec
xchg
pop
iret
insb
loopne
cwtl
ljmp
or
mov
iret
movsb
dec
push
inc
mov
push
shrl
push
sub
out
jno
xchg
je
aaa
mov
dec
icebp
add
imul
in
pop
jl
icebp
out
adc
xor
mov
lods
shlb
shl
mov
push
rcl
cltd
pop
movsl
icebp
fcomps
sbbb
or
leave
in
fistpl
out
dec
movsl
insb
add
scas
xchg
adc
movsb
or
mov
jl
xchg
adcl
xchg
hlt
inc
xor
cwtl
mov
in
sub
pushf
pushf
cmp
pop
leave
nop
addl
fiadds
lret
cmp
mov
inc
dec
call
jl
js
mov
pop
stc
cmc
and
pop
mov
mov
xchg
add
inc
pop
jne
xchg
jp
push
stc
mov
outsl
mov
lret
into
adc
fstpt
arpl
pusha
mov
lret
inc
xchg
pop
add
push
iret
sbb
sub
pop
imul
cmp
into
stc
pop
out
and
dec
cs
adc
repnz
loopne
cmp
push
ret
mov
adc
add
xchg
dec
rep
aad
inc
jl
jmp
jg
push
push
les
sbb
fwait
cs
in
xchg
pop
mov
push
cmpsl
dec
orl
repnz
sub
mov
mov
cwtl
mov
pusha
jb
jge
inc
ror
lret
data16
cmpsl
xor
cwtl
movsb
sub
je
enter
lods
stc
stc
int3
out
add
mov
add
lds
cmpsb
movsl
data16
rorb
lret
dec
les
sbb
adc
lea
outsl
mov
dec
fcomip
pop
adc
push
stc
pop
rcrl
pusha
sbb
aas
sub
out
mov
mov
xchg
bound
movsl
and
or
fmull
out
push
std
pop
jnp
bound
push
pop
xchg
hlt
rcrb
mov
fiadds
shll
push
pop
pop
mov
cmc
fimull
and
jecxz
xchg
xchg
cmp
xor
ljmp
xchg
imul
in
mov
xchg
fdivl
fs
int
push
clc
mov
js
and
stc
inc
pop
pop
lods
xlat
fildll
shrb
les
add
xchg
popa
adc
mov
inc
sar
test
jp
jecxz
and
inc
push
daa
cmpps
or
add
dec
and
jge
xor
mov
outsl
xor
out
shll
test
pop
addb
in
mov
cmpsb
mov
mov
aaa
dec
jae
jg
loop
pop
ja
inc
mov
jne
mov
fimuls
in
push
mov
jmp
pop
pop
mov
dec
cmpsb
add
mov
shll
push
pop
dec
inc
aad
and
enter
push
or
fwait
xchg
mov
mov
sbb
or
mov
adc
aam
test
jne
outsb
pop
mov
pop
jnp
xor
jg
enter
adc
sbb
daa
jle
fistps
sahf
testb
into
pop
mov
and
pop
les
mov
add
xor
fdivrs
mov
push
cmp
mov
cmp
lahf
and
hlt
push
setle
xchg
adc
std
mov
mov
jl
add
sbb
stos
jo
in
inc
xlat
outsl
sbb
add
nop
lret
pop
es
xor
test
push
ffree
test
adc
out
or
repz
mov
dec
sub
cmp
iret
mov
push
cmpsl
xor
mov
or
adc
lahf
inc
xlat
loope
dec
or
jecxz
iret
in
xor
fisubrs
mov
lret
cld
inc
movsl
xchg
stc
and
mov
jns
and
pop
jl
mov
sti
mov
lcall
fstl
popa
pop
push
xchg
xor
insl
popa
and
sbb
int
movl
test
cmp
movsl
or
lcall
dec
mov
push
sbb
dec
and
std
lcall
xchg
mov
orb
outsb
repnz
sub
iret
subb
test
and
lret
mov
in
sub
xor
leave
jge
sub
rol
cld
and
add
jnp
addr16
stc
fcomip
insl
shlb
std
fsubr
adc
jecxz
inc
out
and
xor
xlat
lcall
cmp
add
aaa
push
mov
push
in
imul
addr16
pop
mov
xor
mov
sub
cmp
ja
insl
jb
loopne
outsl
add
iret
nop
pop
sub
test
push
adc
push
pop
repnz
mov
ror
fwait
push
lret
jecxz
xchg
dec
mov
xor
ds
fisubl
inc
fmul
push
iret
iret
push
cmp
or
xchg
loopne
sbb
cmpsl
ljmp
mov
data16
or
loop
test
testl
dec
fsubrl
push
xchg
xchg
jg
xlat
jno
jbe
inc
sahf
xchg
mov
pop
aaa
sti
gs
loopne
dec
pop
jl
sub
jo
sbb
aaa
fdivp
test
cmp
and
pop
jnp
jp
sbb
fs
or
pop
mov
jmp
xchg
inc
sahf
popa
icebp
fs
shll
loope
int
rorb
push
lds
popf
mov
jmp
mov
movsb
xchg
repnz
adc
imulb
mov
mov
push
ss
adc
add
shlb
push
sbb
insb
push
popa
gs
cld
stos
shrl
jbe
push
fildl
jbe
mov
push
xchg
stos
push
js
push
mov
mov
dec
pop
mov
lods
adc
imul
das
lret
in
mov
inc
push
xor
push
insb
stos
int3
rorl
pop
fwait
test
iret
ja
mov
and
mov
mov
push
mov
jp
sub
shl
xor
pop
inc
push
cmp
or
repnz
push
xchg
test
push
sub
pop
xchg
inc
xchg
push
push
addb
hlt
ds
mov
push
and
jae
loop
scas
inc
aad
test
fadds
out
xchg
inc
mov
sbbb
imul
test
fistps
cli
mov
mov
cmp
js
outsl
and
sbb
add
aad
aam
iret
pop
loope
jb
jb
jp
and
jnp
xor
jmp
in
dec
and
mov
repz
or
jmp
push
dec
push
je
cmp
lsl
pop
lods
sub
and
dec
jne
ret
leave
and
int
jecxz
push
lcall
adc
js
fistpl
and
sbb
dec
lods
addr16
out
stos
adc
test
sbb
dec
push
pop
or
in
mov
push
std
sahf
lahf
push
xor
stc
jo
aad
sbb
cli
les
cmc
xchg
shr
adc
lock
xor
or
cld
dec
pushf
mov
loopne
and
xchg
adc
rclb
insb
add
mov
ljmp
mov
popa
inc
fstpt
stos
xlat
rcl
cld
fsubp
dec
sahf
andb
or
ficoms
out
movsb
daa
inc
cmp
getsec
mov
addr16
jne
mov
mov
mov
pusha
mov
out
les
into
jp
mov
inc
cmpsl
sahf
fildll
dec
data16
mov
push
xor
rclb
dec
cli
xchg
sarl
mov
insl
mov
in
ficomps
clc
fdivs
mov
jl
pop
or
cmp
in
mov
in
addl
les
lods
xorl
leave
and
mov
push
inc
leave
push
in
adc
testb
inc
cmp
fwait
xor
or
add
int3
aam
loop
lea
jb
xor
inc
jae
pop
outsl
mov
nop
lds
adc
mov
xchg
js
push
sbbb
out
enter
nop
arpl
dec
or
or
hlt
sbb
call
xchg
cmpsb
mov
loope
sbb
sub
pop
cmp
addr16
push
test
mov
or
mov
dec
pop
ret
rcrb
in
jp
out
mov
scas
data16
mov
xchg
aam
sub
movsl
sbb
xchg
inc
pop
and
pop
or
mov
iret
btr
imul
add
fbld
cltd
ret
cmp
dec
cmp
rclb
out
adc
fwait
inc
push
dec
mov
out
adc
test
loope
jge
gs
xchg
sub
push
cwtl
js
nop
mov
dec
add
clc
adc
popa
popa
cmp
movsl
out
movl
ret
into
push
pop
jge
sahf
loopne
dec
fcoml
sbb
push
push
orl
add
push
test
fs
xchg
xchg
fs
ds
mov
lret
xor
scas
sub
je
lret
roll
sub
jb
cwtl
pop
ja
inc
mov
cmp
loopne
ja
push
sbb
sbb
ds
faddp
inc
scas
jno
iret
and
push
dec
sar
push
sbb
int3
cmp
push
inc
dec
lret
cmpsl
ret
dec
jns
jno
aam
nop
jg,pt
cmp
mov
pop
or
cmp
jnp
aad
mov
fnsave
mov
sub
pop
aam
pop
rolb
dec
in
mov
ffree
push
xchg
pop
sub
int
daa
out
leave
sbb
popa
dec
xor
mov
push
sbb
pop
mov
mov
mov
push
sub
fcomp
mov
mov
cwtl
in
lret
movsl
and
aaa
push
xchg
stos
push
adc
dec
and
and
xlat
jmp
push
jecxz
push
jg
mov
enter
loopne
inc
adc
sub
push
js
pushf
mov
je
stos
aaa
insb
jns
dec
mov
or
cmp
fisttpll
stc
cmpsl
pop
sbb
dec
mov
movsl
lock
jmp
pop
sbb
push
and
fcoml
iret
dec
push
dec
cltd
pop
loope
dec
mov
jae
scas
sbb
les
lret
jmp
data16
mov
xor
mov
ljmp
jl
int
mov
stc
inc
adc
or
mov
add
ret
dec
xor
decl
fsubp
xchg
xchg
adc
inc
mov
rol
mov
les
pop
and
lods
scas
rcr
and
add
rcl
fmulp
es
inc
fidivs
and
or
pop
xchg
pushf
and
nop
mov
scas
lret
and
int
push
or
mov
stc
std
in
and
xchg
call
lock
cltd
sbb
add
push
cmpsl
cmpsb
sub
mov
dec
sbb
or
pextrw
xchg
addl
cmpsl
aas
jno
inc
fcomip
aam
or
fstpt
lods
fs
or
pusha
inc
loope
test
scas
rorb
mov
pop
pop
out
mov
add
jp
int3
dec
push
and
aad
aam
mov
lcall
call
mov
lcall
sbb
push
or
pusha
cmpsb
jmp
lret
xor
pop
mov
xor
addr16
cmp
pop
out
ljmp
adc
ret
jns
cmp
mov
pusha
imull
mov
mov
dec
subb
mov
lods
outsb
xchg
loopne
push
and
sub
lahf
inc
and
daa
xchg
cwtl
ficoms
mov
mov
jbe
nop
out
popa
std
push
lods
inc
push
imul
adcl
js
pushf
push
push
outsl
push
mov
lret
cltd
cmpsl
sbb
pop
imul
sub
notb
xor
mov
cmpsl
mov
iret
shlb
adcb
lea
dec
cwtl
mov
pushf
pop
int3
mov
fcmovnu
dec
xor
adc
sub
pop
lret
sbb
pop
sahf
lds
in
xchg
or
lret
movsl
pusha
add
cmpsl
mov
mov
jb
xchg
mov
jbe
loope
cwtl
jbe
ret
fistpl
idiv
es
in
and
in
push
aaa
dec
add
jmp
call
mov
lds
ds
cmp
imul
sahf
stc
stos
inc
rcrl
test
std
scas
cs
ret
add
adc
or
mov
push
push
idivl
dec
mov
dec
ds
lret
sahf
das
jge
xchg
sbb
stos
pushf
jge
inc
mov
ljmp
js
sti
pop
arpl
iret
ret
ljmp
push
xchg
jne
iret
std
aas
sub
dec
pop
icebp
mov
ret
mov
into
rorb
outsl
mov
daa
mov
test
cmp
add
cmp
dec
cld
push
jns
andl
nop
inc
stc
or
imul
jecxz
hlt
dec
call
gs
hlt
sarl
into
lahf
mov
xor
jle
xor
mov
test
ss
stc
loop
xor
fsubrs
ret
in
aas
pop
cmpsb
xor
mov
mov
pop
nop
xor
in
xor
fisubs
int3
or
imul
popa
and
call
into
mov
mov
mov
inc
inc
or
fisubs
sub
xor
stc
push
push
push
sbb
xor
cmp
xchg
pop
ja
push
pusha
jmp
mov
and
loop
xor
fldl
fildl
mov
or
fdivs
test
sub
mov
pop
imul
cwtl
inc
cmpsb
xchg
ret
xor
test
or
inc
adc
fdivl
pop
lahf
or
dec
iret
pusha
idiv
stos
popa
lahf
push
adc
sbb
pushf
ret
andb
or
pop
push
and
push
push
mov
sub
or
push
stos
dec
add
pop
aad
cltd
mov
fnstcw
add
add
pop
outsb
into
cli
sbb
dec
out
in
out
sub
push
mov
mulb
or
mov
xchg
test
dec
rcr
sahf
out
inc
push
mov
fmull
insl
or
sbbb
push
dec
mov
pusha
adc
pop
shlb
add
sbb
sbb
pop
fs
mov
cli
sub
mov
sub
stos
es
sbb
in
imul
jo
xchg
sahf
nop
in
lret
ja
xchg
fistl
hlt
rcr
push
andb
push
fildl
pop
mov
sahf
add
xchg
push
xchg
rep
push
pushf
push
ror
mov
sbb
and
inc
out
jbe
in
pop
adcb
push
mov
sbb
and
xchg
dec
or
das
add
sub
inc
inc
out
inc
arpl
fistpll
ds
and
std
sbbl
or
imul
sbb
push
popf
popa
mov
movntq
out
inc
mov
mov
cmpsw
sbb
mov
lcall
cmp
adc
cmp
or
cmp
xchg
dec
fisttpl
test
dec
fistpll
mov
enter
xor
add
fs
or
mov
loope
imul
rcrl
int
mov
leave
dec
aad
movsl
push
std
jle
inc
adc
xor
sahf
mov
out
push
jnp
xchg
sub
aas
fsubr
mov
inc
inc
and
jmp
sti
popa
das
dec
iret
loopne
xor
and
divl
inc
out
inc
dec
dec
mov
dec
pushf
arpl
adc
notl
in
inc
dec
push
mov
and
xchg
lods
dec
fistl
cld
stc
add
dec
jmp
nop
jne
clc
jbe
pop
pop
add
addr16
bound
andb
popf
push
mov
adc
lock
shr
fisubs
jno
lods
and
and
xor
lea
cmp
cmp
mov
mov
cmp
lret
push
enter
aad
dec
and
fwait
jno
out
xor
scas
pop
fcoms
pop
jne
popf
rclb
push
or
lcall
xor
and
rolb
xchg
add
cmpsb
add
cs
out
adc
mov
outsl
mov
sti
inc
fdivl
pop
cmp
add
repnz
repnz
inc
cmpsb
scas
loopne
rol
cmpsb
push
icebp
bound
loopne
pushf
cmp
and
fidivl
push
add
or
test
push
cmpsb
pusha
jnp
mov
les
jecxz
or
sbb
out
jno
mov
cmpsl
clc
push
push
inc
mov
inc
dec
imulb
ret
mov
pop
lods
xchg
adc
or
fwait
enter
outsb
lods
gs
push
xlat
push
arpl
sbb
pop
sti
mov
adc
divl
pop
in
aad
push
jmp
xchg
scas
sbb
enter
fwait
lret
lcall
xchg
sahf
mov
xor
xor
lret
and
jl
inc
xlat
or
pop
repz
xorb
nop
sbb
rcrb
ffree
inc
out
test
jp
sbb
jns
lea
shlb
stc
pop
mov
imul
mov
std
repz
dec
in
outsb
idivb
xchg
sub
fwait
stos
pop
aas
xchg
sub
xchg
jne
pop
and
dec
sbb
rorb
pop
rcrl
mov
mov
push
aas
adc
enter
pop
leave
rorb
mull
and
inc
push
gs
fst
mov
mov
fisttps
push
cmp
mov
mov
cmp
push
cmp
or
mov
sub
adc
mov
outsb
enter
ret
xor
hlt
or
xor
mov
negb
jno
adc
pop
out
mov
sahf
lret
sbb
push
inc
icebp
push
push
inc
mov
jae
xchg
ss
xchg
and
das
repnz
push
adc
sbbl
mov
imulb
jno
push
icebp
cld
out
andl
fisubs
imul
in
jmp
nop
loope
frstor
cmp
imul
int3
push
mov
arpl
pop
pop
mov
adc
sbb
jae
lret
push
cmc
movsl
ds
pop
les
jg
pop
mov
add
pop
daa
iret
or
pop
aad
lcall
push
out
xor
jecxz
sti
nop
cmp
pop
arpl
stos
push
int
in
int3
sahf
adc
jl
movsb
push
lea
push
lock
jp
in
subb
pop
das
clc
sub
pusha
repz
and
js
push
test
inc
add
mov
dec
adc
mov
aam
out
dec
and
mov
scas
test
cmpsb
cmpsl
mov
pusha
adc
je
dec
sbb
repz
jo
icebp
mov
lahf
mov
test
add
scas
sarl
push
fldenv
mov
outsb
jp
xor
hlt
jp
mov
repz
xchg
test
test
fucomip
cmp
pop
lcall
leave
cmpsb
cltd
mov
inc
xchg
inc
out
leave
lea
jae
xchg
dec
pop
nop
repnz
sub
mov
test
xor
adc
jecxz
xchg
add
or
push
push
imul
sbb
xchg
add
mov
fiadds
fiaddl
aam
lahf
add
fisubrs
cmp
aas
scas
data16
imul
push
dec
repz
pop
popa
xor
pusha
out
repz
stos
int
movsb
lods
bnd
mov
enter
mov
ja
xchg
push
test
xchg
fldt
repnz
pop
mov
push
jle
shll
xor
add
aas
icebp
inc
pop
in
je
and
cld
pop
in
pop
jmp
cs
jecxz
dec
adc
xchg
lcall
lds
int3
mov
imul
sub
pop
add
aaa
jb
lock
or
imul
push
sbb
xor
sub
imul
mov
or
push
add
mov
rcrl
sbb
add
iret
cmpsb
inc
pop
ja
ret
popa
mov
scas
cmpsl
les
mov
call
add
out
or
rclb
popf
neg
aas
dec
daa
push
or
mov
cltd
js
aad
sub
sbb
xchg
pop
leave
add
test
fwait
lretw
or
into
jo
lock
and
dec
push
fisubl
pop
out
sar
mov
pop
fiaddl
jle
dec
mov
push
sbb
inc
clc
not
fbstp
inc
adc
pop
xchg
and
ret
mov
jge
dec
adc
mov
jecxz
sub
aam
arpl
mov
push
out
mov
pop
push
in
ja
ljmp
insb
in
cmp
sti
jbe
push
sbb
xor
pop
jne
scas
lcall
in
dec
adc
ss
mov
push
pop
fadds
xor
stos
and
into
nop
fdivs
daa
mov
xor
mov
enter
in
xorl
add
inc
and
and
dec
push
sub
jge
mov
cli
out
insl
imul
dec
addl
push
dec
sub
mov
cltd
push
push
cli
bound
notb
test
or
push
in
negb
popa
repz
add
sbb
sarl
cmc
mov
add
fcoms
sub
lfs
adc
cmc
push
pavgw
fwait
jnp
adc
inc
push
dec
aad
sub
faddp
sbb
cmpsl
aam
mov
xor
inc
dec
xchg
movsb
jns
in
imul
add
cs
into
nop
jecxz
pop
mov
add
movsb
mov
jp
nop
jb
int
pop
sub
xchg
dec
int
ret
in
jbe
fildll
dec
sbb
xchg
sbb
push
sbb
pushf
pop
in
xchg
xlat
and
sub
xchg
jno
int3
jle
insl
arpl
pop
insb
icebp
cmp
nop
sub
add
mov
pop
cli
shr
mov
jle
sahf
push
jle
inc
neg
mov
add
xor
cmp
outsb
out
lcall
inc
sbb
mov
cmpsb
rcr
add
mov
jg
int3
cmp
add
push
xor
xchg
inc
xor
div
fisttpll
inc
or
ret
add
push
out
sub
xchg
or
jb
cltd
or
jne
xchg
cld
jmp
fidivl
loopne
cmp
and
xchg
addb
faddl
cli
int
xlat
cli
pop
int
jno
out
pop
sahf
lods
js
ljmp
stos
sub
pop
out
cmp
mov
mov
imul
sarl
cmp
ret
iret
roll
into
dec
mov
imul
mov
xor
adc
mov
or
or
icebp
jne
ss
xchg
ss
test
lods
lahf
xor
add
or
adc
xchg
sub
cmpl
scas
enter
and
xorl
xor
xor
mov
xorl
js
mov
shlb
sub
mov
int3
js
jecxz
sub
xchg
out
push
imul
movsl
in
stos
pop
bound
jl
pop
rclb
js
push
pop
cmp
mov
xor
les
movsl
leave
push
cmp
lock
push
ret
mov
sti
mov
mov
ja
xor
pop
dec
aad
out
mov
mov
int
subl
pop
cli
fnsave
sbbb
lret
lcall
icebp
lret
adc
scas
pop
cld
sbb
aad
xchg
aas
push
sti
lcall
repz
imul
and
dec
ret
push
sbb
push
insl
mov
dec
and
sbb
xor
mov
loopne
bound
pop
fsub
or
add
addr16
fimull
ret
add
ret
aaa
les
fwait
lods
inc
test
mov
sub
in
push
xor
or
addb
xor
mov
xchg
out
sbb
xlat
imul
imul
pop
loopne
mov
inc
fmuls
mov
inc
nop/reserved
pop
repnz
divl
push
mov
sub
fstpl
bound
pop
jmp
call
push
sahf
dec
jmp
mov
inc
mov
outsb
lcall
sti
mov
and
stos
xor
inc
je
and
jle
pop
jl
mov
mov
mov
fwait
stc
jge
or
clc
sbb
mov
inc
xchg
cmpsb
pushf
add
fstpt
fistps
push
mov
mov
outsb
iret
pop
int3
jne
ret
ret
push
pop
push
cmc
or
mov
or
fwait
stos
call
loopne
lods
ja
lcall
jge
inc
cmpsb
inc
bound
adc
sti
xor
adc
sahf
sbb
gs
test
popf
rcll
jae
sub
sbb
stos
xor
push
pop
xor
push
push
jg
sbb
mov
pop
pop
lods
movsb
xchg
pop
jnp
jbe
sub
ljmp
test
sbb
rcll
adc
dec
dec
xchg
test
adc
pop
es
in
ret
ss
adc
iret
sarl
dec
mov
cmp
sbb
repz
repnz
jle
bound
dec
ret
shll
mov
sbb
dec
lock
or
push
xchg
push
mov
dec
add
addr16
insl
xor
mov
cmpsl
fidivrl
jecxz
jb
cmc
sbb
sahf
lods
xor
mov
add
sti
push
sbb
and
cld
mov
pop
jne
push
mov
push
mov
popf
jg
and
icebp
int3
xchg
ror
lea
xchg
ja
pop
pop
dec
mov
mov
std
scas
pushf
xor
loope
sbb
ds
lods
xor
sub
adc
dec
xor
xchg
fcomps
inc
lods
dec
stc
pop
adc
dec
pop
mov
mov
mov
aas
stos
cmp
add
mov
mov
in
cmp
jg
data16
mov
into
repnz
fisttpl
adc
mov
adc
adc
mov
cltd
add
call
sub
in
je
ret
jb
jns
xchg
out
sub
stos
dec
push
movsb
inc
cld
add
lret
rcll
push
stc
test
out
lret
add
dec
add
cltd
dec
push
in
add
mov
lret
mov
dec
inc
inc
call
mov
xchg
mov
mov
fstl
push
scas
mov
pop
lock
lea
sbb
notl
test
add
sub
mov
dec
pop
cmp
cwtl
clc
or
and
ljmp
rcr
dec
out
mov
jns
push
xor
lods
push
xchg
repnz
mov
lods
std
test
dec
fwait
insb
sti
jl
cli
std
xor
jmp
adc
les
mov
sbb
fcompl
xchg
jge
out
lahf
mov
jns
mov
stos
inc
inc
dec
pop
jnp
sbb
rorl
test
inc
cmp
aas
rcr
inc
lock
fwait
xchg
js
nop
or
mov
pop
and
enter
cmp
push
xor
aaa
ficoms
shld
and
arpl
inc
pop
popa
imul
ss
push
and
jmp
aad
pop
lods
xor
or
cmp
cltd
jg,pt
dec
dec
xchg
add
push
pusha
mov
dec
push
fistpl
shlb
mov
dec
imul
int
enter
adc
push
loopne
lea
dec
enter
dec
pop
mov
das
and
add
enter
mov
dec
imul
sbb
imul
std
dec
xor
leave
testb
lods
hlt
add
pop
stc
xchg
cld
xchg
cmp
ret
popf
mov
pop
jbe
test
or
and
mov
stos
mull
popf
fisubs
push
pushf
loope
inc
sbb
aas
daa
push
jb
push
cltd
mov
xchg
fcomp
pop
std
add
imul
fwait
mov
cmc
push
inc
nop
test
add
jmp
pop
cs
dec
push
dec
adcl
pop
mov
lahf
les
xor
std
shrb
pop
add
jg
push
das
mov
jg
pop
fwait
sbb
jo
std
cld
pop
pop
adc
lret
xor
sbb
outsl
push
mov
ret
fidivs
xlat
popf
pop
jecxz
rcrb
or
fsubs
sbb
pop
testl
ja
in
jl
xchg
xchg
imul
mov
xor
jns
jnp
mov
pop
lcall
jecxz
ss
and
repnz
out
in
cmp
and
nop
xor
leave
sub
in
or
cmp
mov
push
je
jmp
and
leave
push
out
sahf
push
jge
cld
sub
sub
xchg
dec
pop
cmp
aam
jnp
mov
xchg
adc
ror
mov
out
ds
xor
xchg
fs
cs
cld
add
test
out
scas
movsb
dec
test
incl
mov
pop
push
or
ljmp
cmp
lods
mov
jns
into
mov
fidivs
out
push
and
popf
or
fdivs
ficoms
mov
and
mov
cmp
andl
cwtl
and
inc
pushf
outsl
ds
add
popf
cmp
sbb
push
xchg
jb
pop
mov
outsl
clc
and
mov
cld
jbe
mov
adcb
outsb
repz
adc
push
cld
jno
pop
clc
jg
cmpsl
shlb
addr16
xor
fidivl
xchg
mov
mov
dec
adcl
or
in
subl
push
and
decl
out
xor
jecxz
icebp
and
push
or
loopne
add
and
stos
dec
aas
fstpl
mov
mov
subl
xchg
push
and
subl
mov
cli
inc
inc
ljmp
inc
push
insl
clc
inc
push
test
inc
stos
enter
sub
pop
addb
sub
jo
add
insb
outsb
nop
fmuls
bts
sbb
xchg
dec
xor
mov
or
mov
cmp
jb
lds
cmpsl
fwait
jmp
mov
xor
aaa
push
mov
jp
int
iret
enter
xlat
xor
dec
adc
and
es
jo
ljmp
cmp
int3
jge
mov
jg
xlat
bound
pop
out
sub
dec
xchg
dec
jo
pop
sub
adc
in
adc
into
push
push
xor
and
imul
pop
loope
push
jne
popa
stc
mov
add
fbstp
aas
cwtl
mov
cmp
fcoms
jmp
fidivrl
sub
jb
lret
xor
jns
mov
inc
insb
cs
andb
test
pop
fcmovnb
aad
je
outsb
roll
xor
jno
and
daa
iret
sahf
in
push
pop
cmp
cmpsl
sub
sbb
and
ficompl
ficoml
lds
call
in
std
dec
fbld
xchg
pop
inc
movsb
push
sbb
daa
lock
gs
push
jne
sub
xor
stos
test
or
pop
nop
enter
xor
mov
setg
mov
xchg
hlt
sarl
loop
nop
jp
nop
pop
fimuls
hlt
nop
dec
fnsave
adc
mov
lret
dec
pop
jmp
aam
divl
ljmp
stc
push
pushf
aaa
mov
add
loop
in
scas
lea
jnp
mov
mov
sub
sahf
loopne
imul
subl
lods
or
icebp
adc
inc
push
dec
cmp
cmp
inc
aad
xor
push
inc
pop
lret
sbb
jl
mov
movsl
push
std
xchg
push
lret
ret
adc
call
imul
push
cmp
push
popfw
fcoms
or
ja
insb
sbb
xchg
cs
lods
imul
adc
and
fistpl
xor
add
xchg
jmp
or
pop
in
dec
aas
ficompl
lret
fstpt
loopne
fistps
add
es
push
or
loopne
cmp
movsl
add
fildl
lods
adc
aad
pop
pop
psllq
pop
int3
adc
mov
sbbl
dec
mov
fcmovu
loopne
or
push
rcl
shlb
add
in
mov
xchg
xchg
scas
js
jo
and
inc
lock
enter
cmp
pop
and
push
xchg
jg
xor
lahf
ret
mov
or
mov
push
pusha
sbb
mov
and
loop
or
fidivs
ss
dec
cwtl
cwtl
sbb
scas
cmpsl
mov
pop
jbe
add
insb
push
fistpl
dec
loop
je
imulb
mov
jmp
popa
fisttps
cltd
add
jl
into
ljmp
dec
xor
or
rorl
mov
cmp
jge
jmp
shll
test
das
sbb
je
aas
lods
mov
mov
sbbl
in
test
push
pop
mov
scas
lret
or
add
data16
or
sbbl
aas
cmc
out
mov
addl
ss
push
loop
push
bound
cli
test
outsl
cmp
insb
xor
test
stc
stos
sub
sahf
add
mulb
inc
mov
dec
out
pop
rclb
sbb
outsl
push
ja
cmp
xor
loope
sbb
sbb
cltd
push
leave
rclb
mov
aas
sub
shr
xchg
stos
mov
test
pop
sbb
inc
mov
jg
mov
shr
in
sbb
hlt
push
inc
fldcw
jl
repnz
aam
adcb
loop
pop
pop
cmp
pop
mov
fincstp
dec
nop
mov
adc
bswap
adc
sub
iret
fiadds
movsl
cmp
sub
and
sahf
push
xor
or
repnz
mov
mov
insl
jg
loopne
push
in
jno
pop
mov
aam
pop
adc
dec
cld
inc
xor
xchg
dec
test
or
mov
test
movsb
sahf
jp
inc
ret
out
jo
pop
or
xor
mov
std
cs
daa
jbe
sub
movsl
rcrl
xchg
es
mov
push
out
xor
jnp
jmp
inc
inc
das
mov
dec
xorl
sti
mov
dec
mov
adc
add
lds
sub
xor
and
sbb
add
mov
lret
dec
cmp
inc
cmp
cmp
test
sub
fwait
push
sbb
jne
lds
js
jo
aas
adc
jl
dec
shlb
bound
mov
sub
imull
adc
xor
mov
xchg
and
jge
imull
lods
cmp
test
sub
pop
xor
icebp
in
cltd
test
enter
out
outsb
xlat
popa
cmp
nop
xchg
aaa
push
data16
jge
ror
jp
jns
test
loopne
ds
or
fcmovb
mov
mov
mov
sti
pop
mov
inc
jb
test
jp
js
xchg
rol
shlb
leave
add
inc
sbb
dec
in
loope
push
popf
pop
ss
call
mov
loop
jo
xor
sahf
jns
xchg
sti
insl
jecxz
or
mov
shll
mov
cmp
adc
dec
jmp
ret
mov
pop
cmp
mov
xor
or
mov
aaa
push
xchg
sti
cmp
or
mov
adc
ret
rcrb
mov
jne
mov
loopne
xor
int
push
dec
pop
test
or
loope
xchg
scas
dec
jp
mov
add
ja
ret
je
outsl
mov
iret
jl
imul
bound
sahf
pop
or
push
xchg
and
jp
rcrl
movsb
push
push
nop
movsb
and
daa
shll
fidivrl
jle
int3
into
and
ficoms
popf
push
lds
call
lock
push
sbb
xor
dec
mov
sub
push
pop
stos
xchg
inc
imul
jl
aas
or
test
or
mov
mov
or
mov
in
sub
out
ds
in
adc
nop
sbb
inc
mov
push
mov
cmpsl
lret
int
xchg
xchg
cmpsl
movsl
int3
mov
mov
lahf
pop
iret
stos
push
sub
jbe
inc
pop
push
adc
push
mov
or
iret
xor
push
adc
ret
out
push
movsl
push
adc
add
int
insb
ror
push
int
xchg
pop
fxch
mov
mov
jo
pushl
jns
mov
dec
add
shl
lret
imul
mov
push
mov
mov
jae
cltd
mov
add
cmc
fstl
arpl
popa
stc
sbbb
lahf
into
inc
fcmovb
dec
cld
sahf
aaa
pop
adc
popa
adc
insb
cmc
and
pop
push
mov
and
mov
les
pushf
shll
outsl
mov
adc
mov
cmp
dec
scas
daa
mov
jmp
mov
mov
test
out
aad
iret
popa
cmp
inc
faddp
cmpsb
mov
adc
cltd
jp
xchg
arpl
jecxz
cmp
push
jl
loope
inc
test
out
shll
outsl
sbb
cmp
clc
adc
clc
pop
bnd
aas
lea
out
mov
xor
sbb
sbb
xchg
or
or
bnd
add
test
or
es
out
hlt
jae
sti
sbb
movsl
or
dec
scas
sub
test
dec
xchg
outsl
shl
fistl
int
add
lds
jne
mov
dec
mov
ds
mov
ret
sub
arpl
mov
popf
imul
dec
pop
mov
push
jmp
clc
cli
inc
fcomip
out
dec
cmp
mov
mov
adc
mov
fdivs
push
mov
ss
cmpsl
aas
jecxz
in
add
outsb
ret
push
sub
insb
sbb
mov
mov
daa
xor
cmc
or
clc
cmpsb
xchg
dec
sbb
cmp
mov
cmpsl
lret
insl
lret
lret
dec
int
clc
lock
add
pop
sbb
mov
jne
ficoms
or
repnz
aad
sub
sbb
in
das
enter
mov
cltd
test
xchg
sarl
or
fwait
xorl
out
shlb
aam
inc
adc
cmpsb
jb
push
out
shrb
rorb
sub
std
and
je
rclb
aaa
xchg
cmp
clc
xor
fdivrs
pop
loope
loope
sub
add
mov
jg
and
clc
xchg
xor
data16
pop
push
cmp
call
xchg
pop
movsb
in
lcall
fisttpll
and
repnz
movsb
outsl
shll
xchg
outsb
jp
pusha
rcr
ljmp
dec
int
in
dec
gs
movsb
mov
arpl
into
cmpsb
fisubs
test
loopne
iret
lock
fdivrl
leave
out
jecxz
imulb
xor
adc
xchg
nop
jo
jmp
daa
arpl
mov
inc
push
fistps
out
call
dec
cltd
icebp
mov
mov
ja
xor
aam
fimull
lock
fbld
bound
mov
xor
pop
pop
cmpsb
scas
inc
sub
cld
iret
push
out
dec
fldenv
sarl
pop
clc
in
in
fists
inc
mov
gs
mull
mov
cmpsb
and
jnp
das
mov
add
adc
ud2
sub
xchg
jb
push
cmp
cmpsl
ljmp
inc
not
push
cmp
cli
ret
outsl
rcrl
into
xchg
add
es
repnz
cmp
movsb
leave
cmpsl
ljmp
out
or
dec
popa
scas
leave
popa
add
outsb
mov
mov
sub
pop
cs
lret
mov
nop
jp
mov
xlat
pushl
xor
popa
pop
clc
std
cli
jp
insl
lret
icebp
loope
aad
sub
xchg
rolb
jo
sbb
mov
lods
mov
jnp
jl
xlat
pop
mov
cmpsb
fwait
mov
popa
and
dec
mov
cmp
fld
and
lcall
xor
je
aad
je
outsb
jg
popa
and
or
and
pop
cli
dec
shrl
movsl
rcll
out
sbb
mov
pop
sbb
ret
ljmp
js
push
inc
enter
subl
repnz
or
sti
lret
stos
fsubrs
mov
insl
mov
sub
fsubrs
test
lea
push
mov
sub
and
xchg
scas
arpl
mov
test
push
js
jno
pop
cmp
call
xchg
rcl
mov
push
jo
mov
repz
sub
insl
les
ljmp
loope
jb
cmp
fnstcw
xchg
xchg
mov
test
cmp
dec
leave
lods
dec
jge
fistps
rdtsc
subl
lahf
shlb
pop
lret
ljmp
rolb
sub
rol
mov
mov
test
push
and
out
or
lods
mov
orl
dec
jmp
test
xor
inc
push
addr16
pop
int
push
pop
jnp
pop
lcall
sahf
cmp
jl
push
lcall
jae
xor
ret
and
and
nop
mov
mov
jb
or
sahf
dec
jmp
leave
outsb
mov
div
sbb
popl
stos
ss
ja
push
jns
loope
lret
xchg
xor
cmp
imul
mov
pop
insl
gs
pop
mov
adc
ficoml
pop
ja
lret
xor
xor
cmp
jp
pop
push
and
leave
xchg
fdivrs
lods
les
sub
lret
mov
mov
pop
or
mov
mov
mov
xorl
cmp
lods
sahf
push
js,pn
in
outsl
lcall
insb
les
push
in
pop
cmp
mov
and
mov
lcall
stos
push
cld
mov
leave
fs
ljmp
cmp
imul
repz
js
fiaddl
jbe
outsb
sahf
mov
push
mov
int
nop
bound
popf
sub
jne
cmp
inc
xchg
mov
xor
pop
mov
jbe
sti
mov
loop
loope
mov
popf
out
jle
ret
popf
jle
ror
add
aaa
in
push
cli
js
insl
ret
inc
mov
cmpsb
int3
dec
arpl
fcmovu
shlb
out
mov
filds
mov
push
adc
outsb
pop
imul
add
out
dec
add
test
mov
inc
iret
inc
sahf
or
int3
std
jmp
jne
test
subb
push
hlt
stos
xor
xor
fldenv
mov
sbb
push
ljmp
cmp
rcrb
es
std
sub
out
andl
add
mov
pop
inc
cmpsl
xor
fwait
xor
xor
lret
rcrb
push
lahf
movsl
aaa
sub
inc
call
jb
imul
cltd
dec
inc
outsb
add
adc
xchg
scas
subb
jmp
sarb
cmpsb
jle
jb
popf
cmp
outsl
cmp
dec
hlt
mov
repnz
jb
mov
roll
pop
in
fcoml
cmp
mov
xlat
movsl
add
pop
xchg
icebp
das
imul
jmp
jae
pop
in
cmpsb
jl
outsb
xchg
dec
daa
mov
mov
out
neg
rcll
cmp
or
sbbl
jb
add
mov
out
jp
mov
adc
stos
fnstenv
rcl
out
push
push
add
int3
push
das
popf
mov
clc
or
mov
les
shll
xchg
jecxz
push
push
and
xchg
outsl
inc
insb
insb
sbb
lods
pop
dec
negb
xchg
jg
pop
pushf
xchg
lret
loopne
and
int3
lgs
jl
mov
push
loopne
cmp
sbb
fst
jno
jo
pop
jb
mov
mov
icebp
fisubrs
arpl
repnz
and
mov
and
add
inc
test
mov
mov
pop
lds
cmp
jno
add
je
xor
or
cmp
pop
push
mov
imul
clc
sub
loopne
lret
out
cli
pop
add
add
jo
insl
in
or
fstps
pop
icebp
mov
dec
push
mov
stc
stc
in
add
and
mov
jg
mov
or
stos
pushl
in
cmp
aad
dec
dec
ljmp
pop
mov
fisttps
pop
ret
cmp
aad
push
push
xchg
add
push
adc
std
outsl
mov
sbb
mov
cld
mov
sub
fsubl
pop
sbb
aas
cld
jb
xlat
fwait
mov
xor
cmpsl
loope
mov
mov
and
mov
xchg
arpl
ss
std
adc
xchg
shl
mov
ret
arpl
loopne
cli
ja
repnz
dec
mov
and
das
loope
testl
pop
das
call
fbstp
mov
mov
lcall
ret
cmp
sbb
xchg
jl
insl
sbb
mov
jnp
hlt
icebp
orl
cmpsl
cmpsl
xor
dec
lods
scas
push
orl
mov
fs
leave
lods
sbb
dec
jge
dec
fwait
mov
push
loope
and
lea
push
xor
and
subb
add
cmc
notb
cmp
rorl
addr16
sbb
and
out
ret
in
xor
popa
mov
ds
test
sbb
mov
xor
mov
xchg
std
sbb
push
data16
jle
xlat
pop
add
mov
cmpsl
stc
pusha
mov
dec
and
jmp
fistl
fwait
adc
sti
jmp
add
jae
xchg
fwait
mov
cli
dec
push
xchg
cmp
pop
mov
arpl
jo
lret
mov
pop
insb
enter
ja
push
das
sbb
stc
lret
sub
jno
adc
fildl
or
xchg
xor
flds
mov
filds
sbb
add
cmp
xor
popf
loope
or
insl
add
sub
lcall
out
jmp
mov
ror
mov
aad
out
mov
scas
aad
loopne
push
mov
ss
add
xchg
or
push
cmp
and
loopne
inc
cs
out
mov
jecxz
js
pop
movsb
cmc
cmp
sub
loopne
rol
in
xor
je
aam
mov
icebp
out
push
inc
mov
sbb
lcall
inc
fwait
pop
xor
xor
hlt
je
js
jo
xor
pop
rcrl
adc
in
add
faddl
lahf
xchg
dec
xor
insl
push
insb
repnz
add
insl
inc
lods
negb
and
out
push
mov
push
push
stos
cmc
stc
repz
push
or
or
pop
ret
pop
movsl
pop
push
mov
xchg
ss
test
test
sbb
lcall
dec
jne
nop
pop
pop
popf
popf
pop
or
mov
push
mov
adc
push
fcoms
sub
in
cmc
frstor
gs
stos
push
dec
ja
jb
mov
fsubr
inc
adc
push
and
lcall
push
cmpl
pushf
or
stc
inc
xor
cmp
fs
add
jecxz
mov
in
adcb
xchg
jae
mulps
or
push
dec
or
movsl
or
stos
or
popf
sbb
add
inc
dec
add
push
xchg
fnstsw
mov
sbb
cmp
adcb
cwtl
cmp
jle
rcl
mov
ja
subl
xor
out
in
sub
mov
sub
pop
jns
inc
frstor
jg
cli
push
add
fsubr
imul
addr16
xor
fcomi
pop
jnp
loope
mov
ljmp
adc
icebp
cmp
cmc
cmpsl
jae
mov
in
xor
into
sub
test
pop
test
cld
mov
push
pop
std
jmp
cmc
cmpsb
jne
cld
and
stc
stos
xchg
cld
negl
mov
push
or
or
xchg
fwait
std
or
not
mov
xor
dec
fsts
cltd
ja
aaa
clc
loope
out
bound
jb
negl
jb
or
leave
jmp
ljmp
sub
addr16
mov
and
outsl
jp
add
nop
push
and
xchg
rorb
insb
in
sub
das
sbb
neg
pop
xchg
inc
mov
out
dec
add
stos
mov
ja
aas
dec
mov
jg
cmp
addr16
dec
dec
fdivl
pop
call
decl
pop
push
jno
cmp
gs
lret
in
dec
pop
pop
jno
ret
outsb
test
ficomps
jmp
sbbb
xchg
lcall
mov
fwait
cmp
inc
pop
or
shr
das
pop
pop
insb
test
push
dec
icebp
xchg
negb
pop
jg
ljmp
jle
int
mov
scas
pusha
lds
insb
rcrl
push
nop
sub
orl
jp
inc
test
and
push
cmp
stos
mov
bnd
popf
sub
movsl
mov
pushf
mov
cmpsl
scas
popf
dec
fistpl
into
jecxz
mov
popf
adc
push
fstpt
mov
adc
fdiv
xor
jnp
pusha
push
les
xor
mov
out
xchg
je
sbb
jo
cmp
lock
shlb
xchg
pop
mov
jnp
sbb
xor
insl
ret
out
inc
loopne
xchg
pop
cmp
lret
addb
scas
add
dec
jg
pushf
mov
xchg
adc
pushf
test
stc
mov
addr16
mov
mov
push
and
xor
imul
jnp
pop
out
push
adc
orb
punpcklbw
sarl
inc
hlt
addr16
mov
push
js
or
fsubp
cli
push
aad
arpl
mov
push
jns
fsubl
jle
or
sub
sub
mov
lret
sbb
inc
push
jb
and
aaa
sbb
arpl
rorl
cwtl
mov
or
in
pop
sub
xor
lret
xor
pop
push
scas
pop
push
lods
or
push
in
xor
icebp
pushf
mov
movsb
ss
mov
jno
cmp
test
std
pusha
cmp
or
or
sub
cmp
gs
fdivrl
add
loopne
push
mov
sbb
adcb
call
shrb
in
mov
movsb
nop
mov
adc
aas
cmp
fistps
push
sub
sub
mov
dec
mov
cli
and
push
imul
adc
inc
or
aas
add
ret
push
imul
filds
xor
mov
sub
in
pop
push
jb
cs
fistl
and
jge
or
pop
fucomip
inc
mov
or
in
add
xor
repz
in
cmpsl
cmp
mov
cmp
xor
push
sbbb
pop
fwait
sbb
dec
jge
imul
lock
mov
shl
adc
inc
adc
cs
sbb
stos
add
dec
movsb
inc
leave
push
add
inc
jmp
in
push
flds
fisubrl
jne
lock
mov
jne
cld
dec
lock
pushf
lret
mov
test
lret
mov
aad
sub
push
lret
es
pop
cwtl
jns
or
xchg
iret
cwtl
cli
xor
xor
adc
push
mov
ss
pop
jl
jmp
xchg
cmpsb
cmp
pop
lods
mov
fneni(8087
nop
idivb
test
pop
add
icebp
sbb
imulb
dec
jne
dec
icebp
cld
imul
xchg
pop
sub
arpl
enter
pop
loopne
mov
xor
notb
mov
shlb
das
sub
pusha
mov
lret
js
cld
push
xchg
imul
push
sbb
and
ret
lcall
in
add
push
lcall
mov
in
mov
in
shll
push
scas
pushf
xor
int
mov
sbbb
sub
les
jb
fnstenv
enter
add
rol
and
stos
jne
mov
shlb
fdivp
in
addl
sub
std
dec
jle
stos
pop
les
dec
int
pop
push
enter
dec
jg
in
cld
pop
imul
adc
xor
add
lock
mov
popa
sbb
in
adc
and
icebp
cmp
in
inc
insl
mov
jecxz
daa
pop
dec
inc
in
shr
cmpl
mov
add
les
jmp
push
xchg
orl
dec
jl
lret
inc
inc
es
call
jmp
sarb
or
cmpsb
or
out
lahf
cli
jge
pop
sbb
stos
sbb
mov
repz
dec
jg
stc
jle
test
std
out
mov
add
enter
popa
cmp
popf
pop
sarl
mov
js
and
rcll
icebp
ret
cmc
fdivrs
xchg
mov
and
andl
iret
push
enter
test
arpl
imul
adc
mov
and
sbb
call
pop
push
and
inc
movsl
jmp
jge
lret
dec
jnp
jmp
bound
es
add
push
pop
jns
cwtl
inc
loope
cld
out
jnp
lcall
test
mov
lds
jmp
xor
rcrl
aad
sub
push
daa
dec
push
into
mov
mov
nopl
shll
jmp
or
push
test
cwtl
pop
test
cltd
sbb
das
nop
mov
inc
lret
inc
add
dec
aam
xchg
sbb
negl
inc
push
dec
sub
jl
and
adc
add
movsb
mov
or
add
dec
pusha
js
fstps
mov
push
in
push
pop
dec
ja
jp
inc
adc
into
add
mov
mov
test
xchg
sub
add
push
fcoml
int
cmpsb
ja,pn
xor
pushf
push
pushf
add
negb
fwait
test
jp
insb
fildl
jbe
out
pop
mov
hlt
cwtl
enter
enter
int
xor
jmp
pop
in
mov
mov
js
push
xor
cmp
faddp
inc
cmpsb
int3
jg
cmp
inc
push
cmp
adc
or
addr16
rclb
rcl
push
mov
sbb
push
pop
call
jmp
pop
jge
xlat
xor
cmp
mov
or
push
mov
cmp
inc
adc
mov
mov
push
fs
xchg
stos
rcrb
jp
fstpl
fs
shrl
mov
mov
jecxz
push
imul
jno
imul
xor
or
scas
out
lcall
push
test
in
test
adc
pop
clc
mov
rcrl
js
dec
lock
test
insb
dec
lea
push
sbb
aaa
pop
rcrl
incl
inc
icebp
adc
mov
mov
xchg
cmp
adc
add
sti
popf
aad
mov
nop
push
int3
popl
test
aas
and
sahf
ret
mov
mov
ja
ljmp
es
sub
xchg
pop
fnsave
or
aaa
outsl
setnp
dec
divb
push
sub
xor
jmp
cmpsb
xor
inc
or
jge
push
clc
mov
ffreep
mov
out
push
inc
pop
push
cmp
pop
add
mov
outsb
popa
mov
iret
aaa
aaa
test
mov
cmp
cmpsb
pop
lret
insb
push
push
pcmpeqd
scas
call
in
mov
sub
mov
xchg
and
adc
xor
xor
cmp
or
ljmp
in
or
push
sbb
fs
out
je
jnp
mov
rolb
das
inc
loopne
out
jmp
das
pop
and
bound
imulb
inc
fistpll
into
jg
out
js
add
jge
cmp
leave
scas
in
insb
cmp
inc
sahf
adc
cmp
mov
push
test
je
inc
pop
stc
jmp
movl
popf
xchg
jl
adc
int3
cmp
loop
push
loop
movsb
sub
int3
sub
mov
popa
dec
insb
cwtl
jmp
ljmp
jmp
mov
lahf
pushf
lds
dec
test
stos
mov
cmc
add
adc
leave
add
jo,pt
imul
xchg
insl
mov
mov
add
sti
not
pop
das
mov
lret
fnstcw
jg
idivl
dec
push
call
dec
ja
mov
in
imul
adc
cmp
or
xor
ret
push
fisubrl
mov
pop
movsb
arpl
pop
inc
pusha
mov
push
jmp
sub
sbb
xchg
rorl
ljmp
addr16
add
push
push
out
mov
fdivr
aad
jmp
adc
fcomps
sub
cltd
rcrb
mov
dec
jns
push
rcrb
mov
shll
loope
cmp
pop
lcall
sar
xor
mov
into
add
out
push
dec
hlt
sarl
pop
xchg
insl
cmp
push
pop
jmp
xor
mov
lods
leave
ja
push
aaa
sub
mov
cltd
stos
cli
loopne
imul
loop
pop
mov
sub
pop
imul
andl
popfw
lea
fs
cltd
mov
fisubrl
jecxz
aad
or
pop
inc
je
cmp
aas
pop
fcompl
add
mov
div
in
iret
or
fcomps
data16
dec
cmc
mov
add
call
or
inc
inc
jo
push
or
xlat
pop
mov
arpl
stc
or
popf
inc
test
xchg
jno
imul
sub
push
cmc
mov
outsl
xchg
les
cmp
xor
mov
scas
adc
pop
lret
cmc
aaa
icebp
pop
jmp
pop
push
mov
cmp
lds
shrl
mov
mov
fidivs
or
push
or
dec
js
sbb
mov
sub
push
mov
sub
and
dec
mov
or
cmp
stos
lea
test
mov
out
add
mov
cltd
adc
icebp
adc
mov
cltd
jb
mov
jb
sub
sahf
add
test
jl
mov
ret
sbb
dec
push
loop
jg
mov
shll
aam
mov
nop
insl
fidivl
cmp
nop
call
test
sub
cwtl
out
push
dec
xchg
jmp
jns
test
pop
mov
lea
dec
xchg
iret
mov
pop
fisttps
lea
mov
daa
sahf
divb
cmp
gs
or
and
mov
or
or
jmp
shll
push
aad
jns
in
cmpsb
fildll
in
test
imul
into
movl
test
push
mov
repz
call
out
in
daa
xchg
aam
adc
ljmp
roll
stos
cmpsl
shlb
xor
mov
mov
lds
mov
mov
mov
orl
sti
jecxz
lock
lods
aas
outsl
iret
adc
push
lahf
lahf
xor
jae
xchg
lea
or
call
or
mov
out
pop
mov
cmp
pop
jecxz
nop
mov
mov
ret
cwtl
jmp
pop
sbb
mov
or
dec
repz
cld
or
movsl
in
mov
xchg
bound
scas
jne
mov
cmp
xchg
rcll
out
repnz
mov
in
inc
mov
loopne
cmp
scas
shlb
jns
and
cs
xlat
push
or
outsb
push
fldt
jae
in
adc
jae
sub
push
inc
stc
adc
add
stos
shll
sbb
inc
jle
loope,pn
mov
or
jg
mov
subb
es
xor
mov
cwtl
les
nop
notl
sbbl
push
leave
dec
movsb
cltd
movsl
lods
sub
mov
fimull
js
lock
fisubs
push
add
xor
stos
jo
fnstcw
cmp
pop
int3
cmp
loope
lods
lods
xchg
add
fmuls
popa
add
lahf
xchg
and
out
inc
xchg
adc
jge
int3
ja
enter
aam
sbbl
repz
addb
imul
mov
ret
fwait
shll
lret
fistl
jecxz
test
bound
mov
pop
adc
sub
xchg
push
shrl
xchg
push
dec
sbb
jecxz
jnp
dec
mov
mov
cmp
jo
mov
cli
dec
push
imul
movsb
rorl
in
hlt
pushf
das
sub
shl
jp
add
mov
sbb
nop
xlat
xchg
sub
adc
xor
push
add
mov
pop
out
cli
mov
mov
je
jp
loop
pop
outsb
or
testl
adc
and
cmp
pushf
call
xchg
inc
xor
repz
addb
adc
imul
sbb
dec
and
jbe
add
cs
fistpl
cli
xchg
int
xchg
jle
filds
popf
xchg
dec
movsl
ss
icebp
or
jp
ljmp
cmp
add
jl
stos
push
push
add
test
jne
mov
cs
dec
clc
and
scas
adc
aaa
pop
stos
jne
mov
jae
adc
sub
or
lahf
es
imul
and
jl
mov
scas
ret
xlat
stos
dec
jo
cmp
mov
test
out
sti
cmp
xor
pop
imul
ret
lea
cmp
jge
movsl
test
je
push
daa
into
les
pop
push
inc
mov
dec
dec
mov
sbb
mov
fists
mov
inc
popf
xchg
iret
gs
ss
mov
enter
jb
and
or
scas
mov
xchg
dec
or
mov
aas
pop
shll
test
cld
mov
mov
fdivl
into
cs
push
inc
jge
xchg
pop
aaa
mov
popa
loopne
ret
nop
jbe
aam
outsl
mov
rorb
out
dec
add
or
mov
lret
xor
or
mov
jg
es
mov
add
xchg
mov
in
push
xor
mov
out
jmp
mov
sub
jb
cmp
les
scas
and
sub
icebp
cmp
out
pop
jecxz
pop
cmp
ljmp
mov
inc
or
mov
xor
bound
pop
mov
icebp
aaa
pop
cmp
and
cmp
ss
mov
sti
hlt
lock
jb
mov
sub
push
cmp
je
mov
pushf
das
out
leave
xchg
jg
jns
insl
cmc
or
xchg
lret
enter
divb
mov
test
sub
mov
mov
jne
pushf
fisttps
mov
shll
icebp
cmpsb
xchg
sahf
hlt
sub
xor
lret
test
aas
popf
popa
xlat
and
cmp
xchg
loopne
loopne
clc
je
xchg
in
jae
pop
rep
sbb
dec
call
addr16
sbb
xchg
js
orb
mov
sahf
sahf
mov
push
sub
out
lock
frstor
movsb
movsl
call
sbb
faddl
gs
das
nop
cmp
adc
cmp
arpl
mov
mov
xchg
in
cmpsb
cli
inc
test
jmp
sbbl
addl
push
andl
jecxz
sub
xchg
jecxz
fucom
sub
xor
jp
mov
push
in
mov
vsqrtss
popa
or
add
ljmp
xchg
jecxz
add
stos
add
outsb
and
dec
mov
pop
movsl
std
push
ds
inc
ds
aas
xorl
fcmovnb
sub
add
cltd
jb
ret
cmp
add
stos
icebp
jp
mov
dec
jp
outsb
aaa
or
cmp
mov
dec
je
push
adc
pop
dec
jl
xor
push
std
ret
adc
or
loop
jecxz
adc
les
rcll
out
push
sbb
scas
or
dec
jmp
lahf
cmpl
call
push
push
mov
fdivr
gs
iret
out
dec
addr16
aas
lahf
fisubrs
jae
xchg
inc
pop
add
sub
dec
xchg
stos
mov
das
sub
jmp
fisttps
mov
sbb
xor
in
insl
gs
lock
jb
pop
push
pop
insb
das
inc
or
lds
repnz
dec
sbb
aaa
pop
sbb
rol
xchg
nop
cld
inc
sub
stos
and
ds
xchg
decb
mov
sbb
popl
rcrb
xor
xchg
add
cmpsl
mov
in
add
adc
pop
adcl
push
lret
dec
sahf
das
mov
xor
cwtl
or
mov
xlat
fldenv
je
jmp
ljmp
pop
mov
movsb
nop
xchg
sbb
xor
pop
adc
or
int3
scas
xchg
push
sarl
cmp
mov
dec
lahf
nop
cmp
and
push
fsub
es
into
sub
cmpsb
and
clc
push
inc
pop
add
aas
and
mov
fsubrl
aam
lods
pop
push
sub
or
pop
mov
repz
fcmovbe
xchg
cs
jp
cwtl
orl
loope
shlb
push
out
ret
sbb
imulb
cltd
lods
lcall
push
hlt
fcomi
push
mov
imul
xchg
pop
cmp
cmp
mov
lds
rclb
xchg
sbb
icebp
pushl
lcall
push
sub
mov
xor
leave
or
popf
aad
sbb
div
notl
mov
cmp
popf
outsl
push
loop
pop
jg
sbb
test
ret
out
xchg
sub
xchg
dec
imul
inc
imull
adc
jge
cmp
lds
les
scas
push
sbb
mov
leave
xor
mov
or
ret
mov
pop
lcall
cld
lods
xchg
sahf
stos
jb
lods
nop
fwait
dec
fistpll
dec
pop
stc
outsb
loop
and
pop
test
dec
sub
or
adc
and
mov
loopne
mov
cltd
sbb
or
nop
ret
add
push
inc
in
testl
mov
test
pop
repnz
lds
push
scas
pop
and
inc
adc
fxch
pop
fisubs
in
lahf
fwait
inc
xlat
rolb
adc
lahf
jg
clc
rol
repnz
mov
mov
pop
cs
xor
imul
xor
inc
iret
pushl
int3
jns
cmpsl
fisttpll
daa
sbb
cmp
inc
dec
sbb
xor
bound
aaa
mov
mov
leave
cltd
fildll
nop
xlat
outsl
enter
fwait
xor
mov
mov
jae
scas
mov
mov
out
mov
cli
hlt
xchg
jmp
notb
inc
jb
cltd
push
lods
mov
mov
fildll
adc
xchg
clc
pop
test
jg
pop
jle
pusha
mov
ret
inc
mov
sbb
xchg
add
cmp
mov
sbbl
imul
daa
lods
cmc
int3
outsl
dec
push
sub
mov
data16
inc
mov
cld
shll
andl
adc
push
cmc
sti
sahf
push
jns
mov
jnp
or
mov
clc
rclb
dec
das
dec
testl
and
adc
fistpll
pop
out
jo
or
out
leave
repz
stc
ficomps
cmp
push
pushw
xor
movsl
nop
xor
mov
insl
sahf
ja
fildll
insl
xchg
idivl
jp
pop
data16
push
das
movsb
mov
hlt
mov
js
mov
xchg
not
loope
cwtl
adc
cld
ds
sarb
xchg
jb
dec
jmp
sbbl
xor
gs
dec
jecxz
adc
xchg
xor
mov
outsb
repnz
stc
cmp
mov
pop
mov
jb
bound
ret
xchg
out
jns
sti
inc
lahf
cmp
data16
enter
jle
les
cmc
dec
jl
dec
mov
push
dec
lods
out
jg
pushf
mov
sub
mov
pop
stos
lock
je
divl
fs
andb
dec
mov
pop
sahf
fsubs
pop
mov
or
adc
xchg
fwait
movzbl
stc
mov
adc
pop
mov
and
pop
cmpsl
mov
push
lds
mov
add
daa
rcl
mov
jmp
jg
out
addl
ja
fs
mov
pusha
jge
xor
mov
pop
lret
mov
adc
push
std
or
sub
test
xor
dec
jnp
sub
ret
lahf
jmp
push
lds
cs
aam
cmpsl
mov
add
sbb
cs
add
pop
xchg
and
testl
lcall
out
jne
push
xchg
add
int
mov
ret
cmpl
inc
stos
push
popf
pop
scas
pop
adc
cmp
sbb
mov
fisubrl
xlat
das
int3
int3
outsl
xchg
lea
sub
sbb
pop
in
xchg
xor
out
icebp
lods
lret
push
lods
jnp
rcr
jnp
xor
cmp
add
shr
shrb
xchg
mov
in
test
and
pop
push
or
xchg
mov
notl
dec
lods
cwtl
test
outsb
push
fstps
ret
inc
cwtl
sahf
xchg
cld
or
ja
aaa
test
push
call
add
or
mov
rcrl
lds
test
popf
gs
xchg
and
inc
or
inc
int
mov
fsubp
adc
jno
sub
test
mov
pop
dec
loop
mov
pop
int3
lock
sub
pop
clc
inc
cmpsl
cmp
popf
lea
mov
jp
std
iret
pop
cmc
cmp
ja
mov
lahf
pushf
add
xor
mov
or
fcmove
iret
pop
mov
pop
and
fisubl
push
sbb
mov
addr16
push
leave
mov
cmp
cmp
pusha
in
push
cmc
cmpsb
dec
and
int
les
dec
daa
clc
int3
stc
sub
sub
mov
cld
jge
xchg
pop
cmp
push
jge
push
xchg
outsl
xchg
xlat
push
call
arpl
add
mov
lock
je
es
inc
enter
xchg
adc
cmp
adc
fwait
lods
test
icebp
or
mov
js
test
nop
fldl
jp
rolb
or
or
add
lahf
mov
loope
pop
xchg
sbb
lods
inc
cs
in
inc
xchg
mov
in
int
push
dec
inc
mov
pop
mov
fidivrl
ss
dec
aad
out
mov
or
sbb
cmp
loope
mov
out
fnstcw
and
mov
pop
loop
fs
mov
add
orb
ret
cmpl
ret
cwtl
mov
sub
xchg
je
xlat
add
dec
inc
jecxz
out
imul
push
or
loope
dec
sahf
and
jge
outsl
ret
es
pop
push
mov
mov
xchg
jne
cmpsb
adc
mov
xlat
out
sti
sub
cld
sbb
sbb
mov
loopne
fld
inc
lea
xor
mov
imul
mov
pop
and
xor
xchg
and
xor
hlt
push
cmovae
xor
test
sub
cmp
jp
vandps
jbe
cmpl
insl
scas
sbb
scas
jmp
mov
inc
jmp
push
icebp
pop
call
sbb
jnp
sahf
pushf
loop
test
notb
jo
and
out
les
bound
gs
lock
mov
xor
cmp
mov
push
and
into
frstor
loopne
jno
xchg
ret
xlat
mov
aaa
mull
cmc
pop
inc
mov
pop
or
xchg
push
sbb
dec
cwtl
and
mov
es
in
notb
push
cli
lea
movsl
cli
popa
mov
mov
sar
jge
scas
js
cli
xor
lret
loop
nop
ljmp
pusha
mov
aaa
jno
push
cmpsl
jno
dec
lcall
push
xchg
mov
sbb
jbe
jmp
mov
inc
fimuls
add
inc
testl
scas
xchg
lods
cmpsb
rorb
stc
cltd
cmp
dec
imul
add
ja
fdivrs
cmp
sub
lret
push
add
repz
mov
xchg
lea
lods
adc
mov
or
cld
int
xchg
psubsw
adc
sub
ljmp
jmp
repnz
mov
pop
jo
stc
inc
arpl
cmpsl
add
inc
add
jae
outsl
int3
sub
dec
or
inc
inc
ja
xor
cmp
fwait
int3
mov
das
adc
je
dec
popa
pop
dec
jg
repnz
sarb
scas
stos
or
and
rorl
int3
mov
mov
repz
call
lret
push
in
outsb
xlat
pop
fildl
out
pop
fidivrl
adc
push
inc
jbe
insb
push
adc
xchg
jo
or
lret
push
lcall
add
daa
mov
loopne
mov
int
ret
push
es
lea
sub
ja
dec
cmpsl
mov
movsb
and
stos
sbb
loope
and
add
lods
mov
mov
rolb
xor
and
xchg
push
fcompl
std
jmp
mov
and
inc
mov
in
jp
ja
cmc
je
xchg
xchg
mov
call
adc
popf
test
jl
mul
pushf
mov
stc
cmpsb
xchg
mov
fidivs
ret
mov
push
call
inc
lods
jecxz
sub
sarb
scas
test
jo
push
and
aas
pop
js
gs
adc
sub
outsl
into
addb
pop
mov
adc
push
testl
rol
test
xchg
loop
ret
into
ja
ljmp
and
sbb
add
aad
gs
pop
aas
ret
shlb
movsl
insb
cmpsb
test
dec
inc
sbb
leave
push
adc
sub
ss
and
aas
jecxz
xor
xor
fcoms
int3
imul
push
mov
mul
enter
aaa
test
push
sahf
cmp
add
push
daa
in
sub
sbb
int3
sti
lcall
xor
jmp
sbb
hlt
lret
pop
jae
out
mov
pop
pop
mov
ss
jl
sub
and
fs
rcrl
sbb
and
shl
cmp
out
jns
mov
or
frstor
je
jae
sub
test
ficompl
frndint
pop
inc
add
enter
dec
stc
dec
inc
xor
jae
mov
sub
pop
imul
outsb
sub
or
into
sbb
sub
mov
icebp
clc
mov
adc
dec
sub
adc
push
fisttpl
lea
rcrl
movsl
jle
xchg
in
sar
decl
push
lret
sub
test
mov
rcll
cmp
pop
cmpsl
filds
mov
imul
push
out
dec
es
mov
pushf
pop
xchg
mov
popf
inc
push
xchg
xchg
dec
xchg
das
xor
popf
mov
push
or
and
icebp
and
insl
cli
mov
in
xorl
jg
pop
dec
mov
adc
mov
fsubs
xchg
pop
lret
or
repz
mov
lahf
dec
mov
shrl
insl
add
xchg
out
jle
push
mov
aad
sahf
fimull
iret
dec
loopne
pusha
adc
gs
sbb
push
lods
dec
ret
sbb
movsb
adc
fwait
push
adc
push
jmp
sahf
push
leave
jb
repnz
dec
pop
pop
sbb
xchg
notb
movb
adc
adc
xchg
push
add
ljmp
cmp
cmp
aad
hlt
push
je
dec
je
aad
imul
cmp
mov
in
cmp
xor
mov
pop
test
int
pusha
or
fidivl
push
call
mov
push
or
inc
cs
int
inc
jl
ja
dec
add
or
testl
jne
imul
mov
repz
mov
xor
lods
mov
and
sbb
cld
out
jb
mov
loope
test
ret
mov
mov
scas
fstl
iret
imul
stos
fcomps
rolb
dec
and
int3
or
hlt
sbbl
mov
sub
mov
adc
les
out
or
mov
sbb
mov
jmp
lock
popf
es
stos
sbb
enter
sub
xchg
cltd
mov
mov
jecxz
iret
loop
pop
test
shll
jb
dec
dec
ret
push
inc
xlat
adc
jl
cmp
mov
push
jno
aas
dec
cmp
mov
xor
jae
jne
pop
jnp
sbbb
adc
push
sbb
ja
and
adc
movsb
fmull
cmp
pop
jmp
xor
std
rorl
jbe
inc
dec
mov
andb
or
out
or
mov
pop
inc
mov
in
sti
cld
iret
rep
insl
inc
test
cli
push
xor
inc
cmp
mov
sbb
xor
mov
xchg
loop
imul
es
dec
ljmp
stos
cmp
and
fscale
add
aad
fisubl
and
xor
enter
pop
aas
or
inc
jae
xchg
out
cmp
rclb
jns
inc
out
xorb
mov
shlb
imul
mov
mov
lods
in
cmpsb
int3
rcr
xchg
inc
cmp
mov
add
lcall
jne
push
xchg
push
sub
into
lods
and
enter
cli
add
jle
fs
dec
orb
outsl
push
jle
in
imul
sub
enter
sub
or
dec
xor
sbb
cmp
push
and
push
pop
incb
and
inc
aad
xlat
movsl
xchg
pushf
ret
mov
sbb
jno
adc
cmp
dec
and
pop
dec
cmc
test
cmpsl
xorb
andb
test
pop
ret
fwait
test
into
xor
fists
pop
and
mov
popa
add
mov
outsb
dec
jbe
xchg
je
mov
xchg
jge
aas
enter
and
or
add
lahf
loopne
sub
cli
add
mov
jae
add
cmp
lret
add
sti
xor
pop
mov
mov
stos
fnsave
rcr
jne
in
sahf
lret
fwait
ss
ffree
ret
in
shll
in
mov
xorl
push
clc
int
pusha
fildll
cmp
lret
enter
roll
pop
fs
mov
test
push
ret
jno
cmp
test
aas
gs
pop
int3
add
adc
rolb
enter
test
mov
pop
movl
enter
negb
add
loope
ja
mov
inc
jecxz
push
and
in
shrb
add
mov
and
in
je
rorb
mov
icebp
mov
cmp
xor
mov
js
decl
aad
sub
mov
xchg
iret
andb
iret
cmpsb
pushf
out
sahf
shld
xchg
xchg
rorb
in
fbstp
push
fidivrl
jmp
mov
pop
popf
jns
int
mov
and
sbb
push
sarb
outsb
xorb
out
adc
dec
js,pt
out
out
push
flds
lret
mov
loop
repz
cltd
adc
cmp
xchg
loopne
stos
sbb
jns
jecxz
fcmove
pop
or
mov
aaa
in
cld
or
daa
pusha
push
shl
ret
sbbl
cmp
mov
je
mov
jg
out
mov
or
imul
xchg
cwtl
test
lods
mov
leave
inc
enter
cli
mov
cs
outsb
fsubrl
repnz
push
out
or
loopne
movsl
push
mov
push
shrl
arpl
test
jno
add
repnz
add
mov
lods
inc
movl
xchg
sahf
sbb
rorl
and
test
jns
add
sub
in
jle
ljmp
lods
xor
and
lds
outsb
push
mov
xor
jge
mov
movsb
mov
enter
push
pop
add
jp
scas
xor
pushf
data16
and
nop
push
cmp
push
arpl
out
and
mov
add
xor
addr16
dec
inc
push
jns
es
imul
mov
lods
or
cmpl
negb
jle
and
mov
or
mov
sub
scas
and
or
pop
loop
pop
push
inc
in
ret
mov
loop
jmp
imul
stc
lods
imul
adc
xor
cmp
mov
pop
aam
movsl
fistpll
adc
pop
decb
or
jle
gs
xchg
push
data16
adc
push
enter
fcompl
push
xchg
addr16
sahf
jns
dec
inc
or
mov
xchg
mov
fs
pop
fsubr
or
pop
or
popa
ljmp
push
pusha
cmp
mov
push
pop
outsb
icebp
movsl
push
mov
jecxz
lahf
mov
test
lods
push
mov
mov
mov
inc
cmp
dec
push
lretw
cli
addr16
imul
mov
mov
xor
and
orb
jno
or
sbb
js
mov
jb
adc
movsl
xchg
pop
ljmp
sub
gs
adc
scas
popf
shlb
inc
sbb
xor
imul
arpl
push
mov
int
pop
ret
push
fdivr
inc
inc
ja
mov
dec
roll
jmp
lret
push
daa
adc
push
lods
sub
dec
fs
push
sahf
or
push
or
mov
and
lods
int3
push
and
imul
jmp
sub
imul
sbb
andl
and
push
das
push
fwait
or
cwtl
adc
shr
xchg
pop
hlt
and
iret
sbb
lds
or
mov
pop
lods
jge
jnp
ret
xlat
aas
ja
pop
or
xchg
and
daa
repz
and
scas
dec
mov
or
add
jnp
dec
xchg
hlt
mulb
jge
fsubrs
lret
fadd
mov
popf
sbb
adc
sub
jb
sbb
adc
inc
xchg
nop
out
movsb
xor
fcmovnu
xor
jo
lea
iret
push
or
xorb
ds
leave
addr16
pop
mov
rcrb
mov
mov
sbb
cmpb
jle
clc
pop
inc
hlt
leave
sarb
add
xchg
popa
push
add
add
shr
sarb
xor
test
mov
roll
enter
push
inc
and
adc
insb
or
insl
movb
sbb
jmp
jecxz
aas
and
pushf
loopne
xor
cmp
jl
adc
add
cmp
int3
mov
pop
inc
xor
pop
cmp
jb
inc
dec
mov
sub
clc
xchg
arpl
xchg
in
xchg
enter
jecxz
ljmp
not
aad
pop
popl
dec
inc
push
xor
scas
mov
add
adc
movsl
mov
mov
push
jnp
sub
sbb
das
push
hlt
je
sub
test
xchg
push
jbe
push
mov
or
adc
sbb
inc
push
loopne
cmc
dec
or
mov
into
outsb
jo
mov
push
aam
inc
rolb
rorl
outsl
in
jle
lret
in
dec
adc
test
out
mov
sub
mov
imul
cmp
push
ret
inc
lret
mov
mov
je
cmp
push
fildll
mov
movsl
jge
lods
fdivs
test
cmp
dec
mov
movsb
jg
mov
xchg
mov
arpl
xchg
add
ljmp
test
dec
or
les
and
ds
es
jo
subl
jne
push
mov
cmc
cli
add
aam
aaa
push
push
out
mov
sub
popf
sbb
lds
mov
adc
cltd
add
mov
std
mov
or
xchg
sti
out
push
inc
or
jp
loopne
push
mov
stc
mov
xor
inc
stc
push
xchg
ljmp
rorl
xlat
and
adc
gs
fwait
aas
mov
cmpl
sarb
and
hlt
ds
push
push
fs
hlt
sbb
imul
imull
popa
push
out
movsl
dec
or
jbe
mov
mov
push
push
daa
jle
sub
out
roll
add
hlt
xchg
aaa
shlb
imull
stos
ja
pop
cwtl
push
int3
xor
cmp
outsb
adc
ret
pusha
mov
push
pop
and
inc
mov
inc
lods
mov
xor
idivl
arpl
mov
fsubrs
inc
test
xchg
clc
mov
gs
pop
mov
mov
fwait
jb
fcmovnb
aaa
js
add
sub
fcom
fcmovne
and
fmull
xor
pop
fisubrs
aas
jbe
aaa
add
push
pop
dec
jge
sbb
push
xor
sarl
ret
stc
jg
or
daa
sarl
mov
push
insb
pop
rcrb
fisttps
cmpsb
jp
cmp
pushf
and
lcallw
aam
test
es
into
daa
or
inc
or
movsb
push
mov
xchg
adc
push
push
xor
in
iret
and
sbb
xchg
lock
push
out
and
inc
sbb
or
push
xchg
jp
fwait
mov
ds
fwait
mov
push
shrl
dec
loope
pop
pop
int
daa
repz
cwtl
shrd
mov
mov
inc
les
fisttps
loop
aaa
aas
hlt
sarl
dec
fisttpl
push
push
cmp
dec
mov
js
orl
push
les
sbb
repz
nop
push
adc
xor
out
lds
dec
cmpl
dec
mov
js
jns
pop
xchg
adc
xor
leave
or
xchg
or
inc
insb
movsb
mov
scas
rorl
clc
cmp
push
cmpsl
bound
cmpsb
add
lock
test
scas
stos
leave
mov
fwait
lock
mov
loop
cmp
fwait
or
pop
ja
test
roll
cltd
mov
loope
test
dec
sub
fdivr
into
enter
add
dec
cmp
scas
fisttps
add
out
orl
cmp
jnp
inc
add
les
adc
cwtl
fwait
cltd
xor
push
inc
andl
push
ljmp
fmull
loope
jo
cli
pushf
lods
ficoms
add
ror
leave
aad
test
jmp
xchg
xorl
or
cmpsb
arpl
xchg
leave
popa
fisubl
adc
jmp
adc
add
or
mov
inc
pop
xchg
mov
mov
test
sub
sbb
fistpll
or
mov
insl
imul
movsl
ret
or
mov
je
push
fnstenv
cmp
sahf
sahf
mov
imul
dec
pop
jns
mov
rorl
jecxz
lock
push
insb
arpl
adc
mov
sub
data16
mov
in
test
neg
shrl
xor
pop
movsl
pusha
subl
mov
mov
sahf
lcall
jle
mov
mov
mov
dec
out
or
ficoml
pop
adc
inc
xor
and
cmp
or
or
roll
pop
xor
mov
xchg
sbb
rcll
push
sbb
or
adc
jle
push
movsl
test
cmpsb
rolb
or
and
ja
mov
push
repnz
mov
into
mov
rorb
ljmp
add
fidivl
xor
xor
sub
psubw
and
and
dec
pop
cli
push
aam
xchg
orb
adc
inc
insb
sub
rorb
lea
inc
jl
in
outsl
push
inc
scas
iret
xor
inc
mov
fldl2e
mov
bndstx
push
gs
jge
test
jle
adcb
jns
cmpsb
ds
push
stc
popf
push
jmp
test
insb
lea
out
insl
sub
rcl
dec
es
sahf
xor
mov
xchg
hlt
mov
sahf
mov
and
mov
mov
cmc
cmp
xchg
scas
in
ja
fdivrs
mov
clc
imul
dec
incl
mov
dec
sti
fdivl
jne
lahf
mov
decl
push
push
mov
jmp
cmp
pop
sub
js
mov
ret
scas
xchg
xchg
in
int
mov
adc
shlb
jge
xchg
daa
mov
sbb
dec
dec
and
fdivs
stc
and
mov
jle
mov
test
std
insl
jne
leave
cwtl
adc
or
stos
shrb
outsl
popa
xchg
pusha
sahf
out
adc
addr16
mov
or
cmp
or
push
in
jbe
jp
stc
mov
insb
les
mov
fldl
sbb
push
fcomi
fisubrl
add
stos
int3
sub
pop
cltd
xchg
arpl
arpl
mov
int3
outsb
dec
inc
js
cmpsl
add
pop
outsb
and
scas
loop
fadd
incl
test
cmpl
pop
ja
fidivs
xchg
mov
xchg
lcall
pop
and
xchg
jmp
fidivrs
dec
lock
dec
jle
mov
mov
and
xchg
push
rolb
sub
jo
sbb
into
lods
loop
or
xor
push
pop
repz
jb
pop
neg
inc
xor
or
adc
dec
fs
ret
imul
add
jae
xor
mov
sbb
sub
out
cmp
jne
mov
pop
mov
in
rcrl
mov
idivb
xor
mov
nop
cmp
sub
mov
mov
push
dec
fsubrs
jo
push
enter
inc
scas
jecxz
pushf
neg
and
mov
clts
inc
mov
push
mov
jp
sub
dec
int3
sub
hlt
and
rep
jae
xor
mov
mov
rolb
rorb
cmp
hlt
aaa
push
and
cmp
pop
and
jbe
xlat
fstpt
xchg
dec
iret
cli
jo
jge
pushf
add
dec
jns
lds
fsubs
adc
or
lods
mov
cmp
jnp
rcrb
add
cmp
test
xchg
orb
push
jg
iret
cwtl
and
insb
pop
ds
insb
adc
or
cmp
inc
movsb
std
jae
pop
sbb
mov
mov
or
xor
cmpl
push
xchg
ret
mov
push
mov
shll
mov
out
cltd
out
pop
in
push
dec
lret
movsb
insb
ljmp
in
lcall
jno
test
pop
stos
das
and
lret
sub
or
in
adc
xchg
sbb
sbb
pop
fcmovnbe
xor
gs
out
fxch
ss
and
fistl
jb
lock
jmp
aam
das
loop
mov
sbb
je
add
cltd
call
int
int
ds
fldenv
rorl
pop
cpuid
scas
adc
push
and
data16
inc
fcmovnbe
test
cmp
push
aaa
xchg
daa
push
pop
js
data16
lea
mov
sbb
sbb
add
leave
pop
xchg
sub
xchg
mov
sbb
cmp
jbe
mov
lret
imul
aas
adc
dec
jg
das
data16
mov
inc
push
sbb
mov
add
rcr
jge
push
test
lahf
incl
inc
fisubs
fimull
ret
mov
or
xchg
xchg
jmp
pop
jecxz
notb
idivl
outsl
sub
mov
jge
mov
fstps
push
iret
mov
dec
jae
jecxz
jne
pushf
mov
call
out
into
sbb
jb
ds
xchg
push
xchg
xchg
aas
dec
fadds
roll
add
movsb
dec
pop
sti
or
mov
test
or
cmp
pop
fistpl
nop
out
pop
xchg
call
or
call
cld
sbb
inc
jne
cmpsl
cmp
imul
sbb
bound
daa
mov
pop
mov
push
adc
sub
and
cmp
das
jl
pop
mov
mov
lods
cli
pop
in
push
rolb
mov
inc
lds
and
out
dec
rorl
xor
in
or
nop
cld
mov
cli
rcrl
sub
add
loope
movsl
jbe
xchg
repnz
cli
xchg
lcall
pushf
std
outsl
mov
pop
imul
ljmp
adc
or
push
dec
fsubrl
mov
sbb
cmp
fsubrl
in
xchg
mov
lods
addb
xchg
xchg
sarb
insl
mov
mov
and
int3
test
loopne
gs
sub
jo
aam
jbe
mov
mov
mov
push
add
or
mov
mov
xchg
or
jge
mov
lock
push
les
insl
int
lcall
cs
adc
dec
cli
xor
repz
sarl
xor
xchg
cmp
mov
fyl2x
pop
dec
adc
xchg
lret
cli
imul
iret
test
xor
rclb
cmp
test
cmp
out
cmp
enter
popf
add
inc
push
lret
jecxz
out
jp
data16
cmovle
lods
repnz
popa
test
sahf
in
gs
mov
dec
fcmove
mov
into
fisubl
jl
lea
inc
cmpsb
mov
mov
inc
add
imul
jecxz
push
flds
inc
or
pop
dec
push
pop
in
pop
dec
dec
push
pop
mov
jbe
jmp
push
loop
mov
jmp
clc
cs
sub
out
push
jo
fcoml
lods
cmp
sbb
les
mov
push
add
mov
test
stc
push
adc
dec
aam
das
imul
add
test
dec
push
pusha
push
xchg
mov
pop
in
aam
pop
lds
repz
dec
fdivr
testb
jmp
mov
push
les
ljmp
sub
movsb
pusha
sub
and
out
add
popl
hlt
sbb
movsb
xor
pop
xchg
popf
pop
or
je
je
xchg
sbb
loop
mov
jg
rorl
hlt
inc
xchg
lcall
mov
and
lds
mov
and
shrb
mov
ds
ja
dec
add
popa
push
lret
jge
fninit
jae
scas
push
cmp
mov
xchg
lds
ljmp
leave
insb
sub
lea
popa
sbb
insl
inc
xor
inc
imul
mov
cmp
dec
xchg
cmpsl
ret
into
movsb
mov
pop
xchg
inc
sarl
ss
daa
pop
xor
lcall
cmp
test
movsb
mov
popf
jns
fdivrp
cltd
adc
fwait
sbb
cmpsl
and
xor
inc
push
pop
mov
inc
lds
mov
push
fldcw
movsb
or
enter
enter
add
pop
adc
sbb
shll
loope
fwait
push
lahf
pushl
cmp
fiaddl
cmpl
or
nop
push
movsl
notl
in
jb
scas
sub
fcomps
lea
mov
mov
loopne
jmp
dec
into
scas
and
push
daa
call
stc
cmp
sbb
test
pop
add
test
ret
jp
cld
aas
in
cmp
and
lret
pop
out
cli
test
sbb
out
push
sbb
stc
mov
mov
imul
mov
loope
mov
gs
je
adcl
xchg
sbb
mov
and
lock
jo
enter
mov
fimuls
popa
jno
lods
xor
dec
jns
xchg
mov
pop
into
jecxz
mov
mov
pop
rorb
out
rorb
lret
in
xor
negb
push
inc
aam
in
mov
inc
lcall
inc
and
mov
lods
or
mov
pushl
lods
lret
ret
iret
inc
xor
es
insb
xor
rclb
jne
adc
mov
orb
mov
and
ja
repnz
lahf
xor
mov
mov
test
jecxz
mov
or
inc
mov
pop
jnp
stos
push
jno
lds
cmp
addb
fmull
pushf
or
incl
cmpsl
es
adc
xor
and
shrb
add
mov
testl
adc
push
loop
repz
cs
mov
mov
sbb
clc
cs
cmp
loop
cmp
sub
call
pop
nop
idiv
ds
and
push
loop
js
adc
movsl
xchg
jecxz
mov
lock
movsl
xchg
dec
ja
lret
rol
out
sbb
dec
push
shrl
orb
mov
jne
in
bound
sti
xchg
inc
sti
test
mov
roll
rep
fimuls
outsl
and
iret
jb
negb
test
mov
or
jecxz
sbb
xor
out
or
popa
and
or
xor
daa
mov
cltd
aaa
push
cld
ss
sbbb
mov
out
cmp
int3
xor
push
clc
or
mov
into
fst
lahf
cs
inc
pop
test
dec
cmpsb
mov
jge
pop
push
push
jbe
mov
jbe
enter
rcrl
xchg
xor
out
aad
aad
lock
push
outsb
addl
lea
mov
sub
mov
cmpsb
fcoms
out
mov
into
cmp
cmpsl
sbb
ds
mov
sarl
popf
push
cli
sub
aad
pop
add
rcrb
mov
pop
sbb
sbb
cmp
mov
std
das
lret
mov
mov
push
lods
sub
cmpsb
push
mov
insb
stc
push
adc
daa
xor
cmp
pop
into
push
popf
sqrtps
dec
push
imul
adc
push
ss
fsubr
inc
mov
xchg
test
add
push
sbb
pop
jae
xchg
adc
add
hlt
xchg
rol
sub
pop
mov
pop
mov
incl
pushf
push
fldt
cltd
fnstenv
mov
in
add
push
sub
push
pushf
inc
mov
out
ror
scas
mov
pop
pop
cmp
imul
add
xchg
mov
push
jle
movsl
mov
cmc
test
mov
mov
test
aaa
in
xor
gs
outsb
out
test
jb
mov
xor
pop
add
sub
or
stos
dec
push
jb
xchg
mov
add
jbe
pop
mov
daa
imul
mov
test
mov
inc
lods
je
paddsb
scas
pop
push
xchg
stc
adc
pushf
aad
sti
mov
stc
int3
js
or
cmc
or
aaa
sbb
fisubrs
and
jl
pop
aas
ss
test
fistps
inc
in
push
mull
mov
div
popf
mov
jg
jle
out
push
and
aaa
push
pop
mov
shl
jb
sti
das
mov
mov
mov
fstpt
inc
pop
add
xor
test
ss
test
outsl
stc
jle
pop
mov
cmp
lods
dec
inc
pop
dec
insb
mov
add
push
repz
repnz
mov
ja
sbb
loope
add
les
das
push
xor
pop
testl
dec
fstpl
sub
call
sbb
and
sbb
lods
ret
outsl
jge
lret
aam
test
inc
pop
mov
inc
insl
jmp
or
mov
add
cli
loope
push
inc
outsl
mov
mov
pop
sub
push
jb
xchg
loop
lret
orb
insl
inc
out
aad
push
nop
dec
cmpsl
cli
and
cmp
jmp
add
mov
jns
sub
movsl
dec
jo
push
inc
add
mov
iret
in
fwait
inc
or
popa
push
mov
fs
ss
jecxz
adc
pop
nop
pop
shrl
xchg
fwait
gs
repz
fcomps
xor
jne
pop
aad
lret
call
pop
add
sbb
sub
dec
cli
lods
rol
sti
and
loop
inc
inc
mov
xchg
bound
push
cli
subl
jecxz
sbb
xchg
out
jmp
sub
mov
jl
or
mov
in
push
mov
fidivrl
mov
sub
or
cld
cwtl
xchg
mov
aam
or
sbb
stc
movsb
outsb
inc
cmpsb
inc
add
jge
out
inc
dec
pushl
sti
int
push
mov
xchg
dec
popa
pop
stc
pop
push
in
lea
fcoml
mov
lods
push
aad
jmp
insb
cmp
sahf
cld
cltd
fs
scas
pop
popl
xchg
in
rcrl
rcrb
add
cmp
inc
xchg
lcall
fwait
sub
popa
clc
enter
mov
cmpsl
mov
scas
or
repnz
cmp
xor
hlt
mov
orl
imul
pop
inc
xor
das
cltd
inc
add
cmc
xor
call
pop
inc
pop
adc
and
jo
push
add
fsts
sahf
sub
add
xor
push
lret
sub
not
inc
xor
lds
or
mov
out
movsl
mov
push
push
stc
daa
leave
pushf
xchg
adc
add
jp
mov
ss
xor
cmp
addb
push
mov
adc
out
add
daa
aas
push
sahf
std
cmp
sbb
pop
sbb
sub
jecxz
bound
and
add
inc
sarb
in
adc
inc
sbb
cmp
jp
cld
jle
jbe
daa
or
divps
cli
lcall
jae
pop
mov
sbb
jge
cmp
push
insb
cmp
cli
pushf
adc
cmp
movsb
fcompl
pop
insb
sbbl
xor
push
out
push
frstor
inc
dec
cld
icebp
popa
cmp
or
aas
fs
and
push
out
scas
mov
movsb
push
inc
cwtl
lock
mov
pop
add
imul
or
jmp
jb
push
inc
sbb
adc
xchg
mov
sbb
xchg
push
hlt
and
sub
popf
and
dec
mov
imul
lea
pushf
sbbl
mul
adcb
data16
push
mov
cwtl
loopne
inc
xchg
cwtl
ficoms
in
lea
nop
or
movsb
sub
cmp
cs
pusha
push
or
adc
js
push
leave
cld
cmp
fnstsw
aad
cmc
and
scas
mov
adc
hlt
int
sbb
out
lods
ret
sub
ljmp
rcrb
roll
xor
nop
test
loopne
nop
aas
xorb
sub
ja
popa
add
loop
daa
xor
xchg
into
cmp
xor
pop
pop
sbb
add
cmpsl
sbb
add
add
xchg
xchg
stc
mov
insl
sbb
adc
je
loopne
in
lock
leave
loop
lcall
dec
call
jno
inc
jl
stc
dec
je
inc
mov
push
mov
inc
or
cmp
cmpsl
ret
ret
in
xor
mov
out
cmp
xor
nop
jge
push
push
repz
cmc
cmp
or
imul
mov
rcrb
aam
es
push
std
sbb
fidivrl
ret
cs
out
adc
jb
sub
mov
icebp
ret
or
leave
xchg
call
dec
repnz
push
inc
insl
or
adc
adc
call
mov
mov
or
xorb
xchg
xor
pop
arpl
test
cmp
call
dec
call
push
jmp
bound
fisubl
jmp
inc
push
dec
sbb
adcb
dec
mov
xorb
adc
jle
test
arpl
test
mov
dec
xor
fwait
jge
daa
mov
pop
mov
inc
jl
mov
sbb
jae
test
cmp
fwait
add
jge
ficomps
push
jge
xor
negb
dec
sub
add
xchg
movsl
dec
aad
push
es
jge
adc
push
call
xchg
out
xchg
jmp
pop
mov
sub
push
mov
pop
pop
jno
mov
gs
in
fcmovb
mov
sbb
stos
sub
push
ret
fsubrs
jecxz
and
sbb
sub
or
pusha
sub
lods
or
cmp
stc
xlat
sub
sti
xor
mov
or
dec
pop
pop
inc
orb
jne
repz
lret
pop
leave
add
jge
data16
jo
loop
mov
mov
shrl
push
mov
mov
popf
aad
mov
es
lahf
mov
sub
lret
cld
push
ud1
dec
jmp
loopne
lahf
jecxz
mov
cmpsl
pop
int
push
mov
xor
mov
pop
mov
jns
fistpll
inc
negb
mov
in
loop,pn
inc
cmpsb
mov
adc
mov
push
mov
lea
push
pop
push
xor
xor
mov
jp
sbb
add
mov
das
lcall
test
fimuls
fmuls
or
arpl
sti
jno
mov
adcl
rcrl
dec
pop
inc
in
xlat
or
ror
pop
mov
pop
test
rclb
repnz
push
int
dec
jg
or
xchg
fsubs
or
fucomip
cmc
ret
sbb
iret
das
or
daa
adc
ret
movsl
loope
mov
or
push
js
pop
in
sbb
adc
inc
cwtl
and
push
push
adc
add
das
sti
testl
fstpt
mov
xor
pop
in
outsb
dec
fmuls
pop
insb
popf
push
stc
cmpsb
lret
cmc
push
int3
out
and
in
sbb
xchg
inc
stc
mov
adc
pop
push
lcall
iret
or
mov
add
inc
leave
es
rcl
sti
aas
sbb
aam
addl
adc
sbb
lods
add
shrl
shl
outsl
xchg
cwtl
fisubrs
or
shrb
out
gs
mov
lods
scas
dec
imul
les
and
jne
xor
bound
pop
jmp
add
inc
push
cmp
mov
inc
add
xchg
fwait
loopne
pop
xor
mov
push
mov
mov
div
lock
adcb
loop
dec
sbb
xor
enter
mov
daa
jnp
push
test
mov
jge
pop
jmp
fwait
or
mov
sub
and
jb
jb
int
xchg
jmp
stc
imul
xchg
addl
pop
inc
inc
fnsave
cmp
les
sbb
inc
imul
jmp
pushf
ficoms
lock
nop
addr16
lcall
rcrl
push
and
imul
push
jns
inc
or
pop
xchg
jnp
xchg
dec
popf
sbb
mov
dec
jle
or
or
js
aas
movsl
pop
addr16
sbb
or
pop
aad
jecxz
rolb
repnz
xor
cmpsb
xchg
es
stos
push
lock
and
dec
mov
cwtl
loopne
sbb
fs
jge
mov
mov
mov
mov
adc
in
cmp
mov
add
push
stos
arpl
icebp
lret
mov
push
and
lock
push
and
cmpsb
xor
sahf
stos
popf
push
in
or
hlt
and
xor
pop
mov
adc
and
outsl
pop
sub
or
add
or
out
call
fistps
mov
dec
xchg
push
push
fwait
loope
jns
jecxz
pop
lods
jge
cmp
mov
leave
popa
data16
call
inc
adc
scas
dec
xchg
pop
push
out
dec
xchg
pop
mov
lods
inc
fisubs
sub
roll
sub
cltd
test
xor
jne
maxps
je
push
jmp
pushf
icebp
or
xlat
add
repz
insb
sub
out
stos
mov
inc
dec
jge
fs
clc
xchg
hlt
mov
out
aam
cltd
ret
jecxz
call
xchg
xor
xor
pop
sbb
ficomps
mov
jns
fildll
adc
or
xorl
cmp
adc
push
xchg
dec
ret
loope
into
add
stos
xchg
dec
clc
into
lret
stos
xchg
popf
cld
loopne
and
popf
mov
test
push
je
sbb
pop
in
xor
jg
push
outsb
shl
test
inc
mov
test
rolb
cltd
cmp
mov
and
nop
nop
lds
mov
sbb
loop
pop
mov
insl
in
scas
rcrb
iret
loop
mov
or
loope
inc
out
lcall
insb
sbb
insl
repz
add
xor
aam
mov
mov
push
enter
inc
fiaddl
sub
add
ljmp
fidivrl
pushf
movsb
dec
lock
call
cmp
dec
xor
insl
add
mov
xor
push
lods
shl
cs
das
mov
dec
lcall
test
in
cmp
and
and
jp
int3
inc
dec
mov
cmp
mov
inc
cmpsl
jecxz
sub
mov
add
push
lock
adc
xchg
ret
xchg
or
adc
ljmp
je
stc
cwtl
aam
mov
das
cwtl
leave
and
jb
lds
mulb
inc
mov
mov
int3
jo
mov
mov
cmp
outsb
ficoml
movsl
cmp
test
add
mov
xor
add
rclb
fmull
lock
rorl
lds
ja
xor
ficoms
sub
leave
ficoms
xor
outsl
mov
dec
addr16
test
stc
jo
jne
pusha
adcl
repnz
sub
nop
jne
aad
lret
jl
mov
jg
mov
in
mov
and
jno
mov
push
data16
popf
cmp
decb
dec
sub
loope
pop
adc
out
jnp
mov
sahf
pop
movsb
mov
cmp
or
cmpsl
and
mov
xchg
mov
xchg
aas
inc
jno
and
in
add
mov
popa
pop
jb
adc
aaa
mov
je
sbb
xchg
repnz
adc
in
mov
je
inc
testl
dec
jl
ljmp
inc
addr16
push
pusha
orl
jl
xor
arpl
repz
pop
repz
add
orl
add
shll
xchg
and
fisttps
aas
dec
mov
or
int3
mov
movsb
cmp
and
jno
movsl
sbb
sbb
aaa
cwtl
mov
sbb
add
sti
mul
int3
sbb
ficompl
out
mov
xorb
pushf
lcall
mov
jmp
sbb
xchg
cltd
push
frstor
mov
pop
mov
adc
sbb
push
ljmp
fwait
dec
out
or
dec
cmp
mov
dec
push
repnz
or
and
dec
sbb
gs
sahf
xchg
or
aaa
addr16
in
ljmp
test
and
clc
ljmp
ss
inc
cmpsl
mov
out
iret
call
xchg
mov
in
rol
pusha
push
pop
push
adc
sbb
shll
sahf
add
gs
mov
jge
or
jae
dec
adc
imul
inc
ds
mov
test
scas
mov
push
cmp
pushf
mov
in
mov
mov
and
subl
out
dec
xor
fsubrs
fldcw
out
pusha
cli
lods
sub
sbb
mov
ljmp
dec
dec
adc
shll
int3
das
movsb
repnz
jns
xchg
daa
adc
dec
cmp
rcrl
mov
add
mov
inc
pushf
ja
in
or
push
repz
fisttpll
outsb
insl
ljmp
push
dec
jne
push
mov
add
push
sub
xor
jne
mov
fcoms
mov
popa
fstpt
stos
or
test
insb
jne
je
icebp
addb
push
lret
pop
sbb
sub
sub
add
rcl
sub
sub
aas
mov
mov
pop
rcll
jbe
or
loopne
inc
insl
stos
das
push
pop
das
adc
cwtl
xlat
cli
clc
jbe
xor
mov
mov
mov
stos
pop
stc
in
jge
sbb
xor
cmp
mov
hlt
xor
pusha
jmp
xchg
push
imul
insb
subb
pop
inc
outsb
fisubrl
jo
das
dec
jge
insl
daa
rcl
loope
mov
cmp
sbb
pop
inc
push
xchg
mov
jl
push
push
orl
inc
cmp
gs
stos
mov
les
and
roll
adc
pop
push
xchg
out
xor
push
fstpt
xchg
sahf
dec
xchg
add
lods
adcb
mov
mov
ja
pop
adc
jmp
jbe
fldl
test
out
pop
cld
xchg
cmp
dec
pop
xchg
ja
ret
pop
inc
push
mul
xchg
jb
iret
pop
daa
ja
scas
stc
dec
push
dec
or
movsb
stos
push
aam
jge
inc
call
fcoms
test
bound
sub
push
loop
inc
pop
les
fldl
xchg
or
fcmovne
pop
shll
dec
es
jo
cmpl
add
imull
jle
daa
dec
and
lret
inc
lcall
or
add
scas
shl
repnz
test
xor
jno
adc
fs
cmp
adc
cmp
xor
movsl
pop
mov
adc
xchg
inc
repnz
cmpsl
je
rcll
xor
jnp
jg
movsl
and
xor
and
mov
dec
or
sbb
add
das
add
adc
aaa
icebp
mov
fadds
out
into
cld
xchg
sbb
adc
mov
gs
inc
mov
ja
stos
jecxz
jmp
push
fistpll
test
fcmovbe
xor
or
sbb
xchg
mov
cmc
hlt
movsb
loopne
pusha
fldenv
rcll
jne
mov
ljmp
xor
pop
xor
add
fnstsw
in
call
shl
adc
cltd
jbe
mov
push
les
adc
sahf
mov
js
mov
mov
push
add
inc
stc
xchg
mov
sbb
xlat
xlat
inc
outsb
or
pop
add
lods
leave
imul
arpl
dec
aad
jbe
pop
aam
xchg
and
cmp
fcmovne
dec
or
xchg
xor
icebp
loop
testl
sahf
repz
mov
dec
mov
pop
enter
push
in
cmp
mov
xor
adc
sub
addb
sub
lea
repnz
xchg
mov
push
mov
ret
mov
push
add
int
fmull
ljmp
push
and
sbb
les
push
test
xlat
sbb
inc
sti
xchg
out
add
cmp
rcrl
jbe
and
into
and
or
mov
push
in
in
sbb
cs
pushf
andb
pop
xor
adc
push
xor
xor
push
daa
cmp
xchg
sub
xchg
pop
adc
dec
sub
fistps
subb
adc
bound
and
mov
lods
jle
stos
cwtl
pop
jp
mov
shlb
jne
add
add
jo
shrb
cmp
mov
sbb
andl
push
leave
mov
rorl
mov
cmp
jg
mov
fwait
popf
or
sbb
adc
pop
push
sub
inc
mov
xor
sub
test
shlb
push
mov
shlb
xlat
icebp
idivl
sbb
bound
lret
fwait
mov
jns
mov
push
lods
cmp
int3
dec
out
rcrb
into
inc
push
into
popa
lods
push
pushf
fisubs
cmp
sub
jg
imul
adc
jle
jno
push
xor
pop
jae
movsb
test
jmp
inc
xor
out
outsl
mov
fwait
aas
xchg
jae
call
sahf
push
js
dec
sub
mull
cmp
mov
jb
mov
sub
rolb
pop
xor
mov
inc
pop
jns
mov
into
xor
lret
xor
adc
fsubl
xchg
add
lock
int
or
xchg
sub
testb
pop
sahf
arpl
int3
jle
push
and
mov
and
fldl
xchg
mov
outsl
fists
pop
xchg
shlb
push
and
xor
inc
iret
jbe
mov
aas
movsb
push
adc
inc
and
push
or
pop
into
adc
pusha
mov
pop
cwtl
fistps
mov
aaa
pop
adc
iret
cwtl
inc
or
dec
pop
or
pop
adc
shlb
idivl
clc
cmpsl
js
mov
xor
fwait
jb
loop
mov
pushf
mov
mov
lret
xchg
jbe
orb
sub
xchg
jmp
aaa
dec
pusha
sub
and
aas
lcall
sbb
add
pop
adc
or
sbb
sub
dec
fistl
sbb
mov
fisttpl
rorl
pop
sbb
and
push
lods
inc
push
xchg
ds
mov
push
jns
subb
movsl
lar
push
repz
or
or
push
pop
aad
popa
rorl
sarl
in
out
xchg
out
clc
add
adc
rcrb
sti
out
cltd
ljmp
dec
and
mov
roll
fs
ja
inc
pop
pop
jmp
sahf
or
jae
push
ja
jo
add
insb
jge
dec
xchg
sub
loop
int3
mov
mov
xchg
aad
dec
lock
mov
loop
lods
es
jae
sbb
adc
jmp
int3
push
or
popf
out
push
in
ja
adc
imul
add
or
das
mov
pop
jne
insb
push
push
jbe
arpl
jmp
mov
or
jnp
mov
add
xchg
into
xor
test
dec
aaa
and
clc
mov
cmp
or
fidivrl
push
stos
add
mov
mov
dec
fwait
or
adc
cmp
ror
int
cmp
mov
push
fwait
mov
addb
insl
iret
mov
scas
fdivs
out
jge
rcr
mov
int3
mov
insl
ret
mov
sub
pop
mov
lock
mov
sahf
jo
lahf
adc
sbbl
dec
push
xchg
or
push
pop
loope
aas
inc
and
sbb
pop
lahf
pop
mov
pop
int
mov
adc
xchg
jmp
push
int3
loopne
int
popa
fistpll
pop
iret
mov
insl
jp
addr16
adc
push
aam
cmpsb
dec
xchg
mov
cmp
add
loopne
cmp
push
cltd
shll
test
push
push
sahf
or
mov
rorb
pop
push
pop
cmc
add
sub
test
sbb
mov
and
rcr
les
jle
mov
leave
mov
or
es
fincstp
hlt
ret
jbe
dec
cmpsb
stos
adc
repz
outsl
aam
movsl
test
push
cmp
fisttps
test
stos
cmpb
dec
push
in
out
push
and
in
inc
and
pop
sbb
aam
mov
cmp
dec
push
and
mov
fsincos
andb
scas
icebp
inc
adc
mov
push
jp
adc
cmp
in
dec
pop
arpl
cli
aaa
lods
jle
lahf
int3
pop
pop
or
inc
adc
mov
pop
jbe
fadd
pop
in
lock
loope
mov
sub
fs
push
jnp
pop
fcomps
and
hlt
imul
test
cmp
jbe
and
xor
add
repnz
sar
insb
jle
loope
dec
cld
sub
stc
pop
and
stos
cmp
mov
es
sbb
dec
cwtl
mov
xor
test
mov
icebp
lret
mov
fisubrs
sbbl
fmull
mov
push
inc
inc
cmp
sbb
pop
jp
shrl
mov
mov
pop
stc
pop
xlat
mov
fcoml
pushl
nop
mov
jo
leave
call
out
xor
mov
jle
jl
jne
xchg
mov
mov
lret
and
imul
mov
lds
imul
jns
push
movsb
cld
aas
push
sub
gs
insb
or
shrb
mov
sub
es
data16
inc
inc
add
cli
mov
call
pop
in
jbe
rclb
jg
std
pop
sbb
js
xor
mov
adc
pop
aam
addr16
lcall
mov
pusha
sbb
imul
movsl
popa
mov
add
pop
mov
daa
aas
pop
mov
push
test
clc
subl
or
sub
lcall
cmp
jp
cmp
mov
jmp
or
pop
xchg
clflush
jmp
aam
and
psubusb
jne
movsl
push
pop
push
and
add
inc
call
pop
xor
cmp
leave
mov
inc
aaa
xor
movsb
ljmp
sub
push
ret
lds
and
decl
inc
xor
mov
add
mov
das
xor
lods
xor
es
cmp
out
icebp
mov
cmp
jle
mov
push
cmpsl
loop
and
fdiv
jo
cmp
les
pop
mov
sbb
movsb
jne
aas
enter
sub
sti
test
cs
and
jo
jae
push
call
dec
outsb
inc
outsb
hlt
or
in
xor
outsl
cs
pop
aaa
icebp
popa
aam
mov
dec
mov
popf
inc
out
inc
mov
dec
jne
insb
push
xchg
dec
pop
cmc
cli
std
sub
xchg
test
sub
cltd
mov
pop
imul
movsl
mov
or
xchg
sbb
out
fcoml
add
out
sbb
dec
rclb
push
cwtl
imul
cs
mov
pop
sub
clc
mov
inc
xor
stos
sbb
xor
xor
sarl
adc
xlat
int
aam
mov
mov
xor
cmpsl
movsl
dec
clc
mov
daa
lahf
cmp
frstor
pop
lds
mov
jmp
nop
adc
insl
xchg
add
mov
mov
mov
adc
mov
pop
sti
leave
mov
cs
mov
cmp
jae
addr16
pop
scas
lret
adc
push
add
inc
mov
cmp
push
mov
or
jb
in
out
or
call
out
stos
lods
push
mov
movsb
mov
std
lret
lcall
outsl
jne
cwtl
in
test
loop
adc
mov
fimuls
push
dec
push
xchg
mov
inc
inc
cmp
dec
testb
pop
pop
imul
test
shlb
mov
mov
xchg
ljmp
push
loop
add
out
jle
lods
and
cmp
sub
adc
mov
mov
push
pusha
loope
ret
leave
in
cmpl
repnz
aam
xor
lds
popf
jns
js
lahf
jl
fstpt
shrl
cmp
cmp
xor
mov
popf
pop
imul
inc
lods
lret
mov
ss
test
out
push
jecxz
rclb
fildl
test
adc
cmp
adc
sbb
cli
cmp
and
add
mov
test
lock
int3
lods
lods
add
loope
adc
xor
ds
sahf
or
cmp
aad
pop
push
mov
dec
mov
movsl
or
xchg
push
pop
mov
xchg
fwait
daa
mov
cmp
lret
mov
out
sbb
insl
mov
bound
movsl
movsl
push
cmpsb
pusha
inc
je
ficomps
lods
out
mov
cmp
jg
xor
out
push
jg
addr16
jne
inc
jbe
mov
dec
adc
lods
loopne
stos
addb
aaa
dec
or
cmpsl
rcrb
xchg
inc
mov
call
jge
into
in
ds
or
sarb
sahf
add
push
or
adc
jns
repnz
daa
test
cmc
lret
xor
push
out
and
pop
fsubl
push
inc
call
fldl
sarl
jl
cmpsl
mov
pop
adc
dec
out
in
in
das
cwtl
lods
cmp
mov
sub
leave
pop
sub
insl
bound
mov
mov
mov
loop
pop
jg
xor
out
and
adc
mov
mov
push
popa
xor
mov
add
jl
stos
lcall
adc
or
jge
push
fsubrs
adc
lahf
jb
fs
rcll
jae
les
movsb
out
cmpsl
inc
mov
je
test
ljmp
mov
lods
shr
loop
xchg
cmp
mov
loope
aad
int
cwtl
push
movsl
out
sbb
out
push
mov
inc
push
std
sbb
mov
cmp
mov
sub
movsb
jnp
lods
jp
xor
int3
xlat
lea
xor
test
or
inc
push
fdivrl
arpl
pop
mov
pop
and
push
loopne
mov
aaa
sub
dec
in
xchg
aas
push
int
dec
mov
and
add
adc
stos
sub
inc
in
or
stos
scas
pop
rclb
icebp
in
int
sbb
cmpsb
jp
fsubl
stos
out
aam
add
in
lcall
xchg
and
neg
push
cmpsl
push
xor
adc
mov
and
rcrl
lret
fsubrs
mov
mov
xchg
jg
mov
mov
cmp
adc
ljmp
aam
fwait
sbbb
lret
shll
cltd
ds
and
push
cmpb
or
loope
cmpsl
popa
xor
fcoms
mov
mov
and
fcomp
or
sbb
fcmovu
test
mov
inc
enter
mov
cmp
lods
sub
adc
sub
mov
cmp
aam
cmp
ds
add
mov
jge
inc
les
jl
cmpsb
add
ss
lcall
sbb
inc
leave
mov
int
into
dec
push
lfs
add
ficoms
lock
mov
popa
stos
xor
pop
bound
in
or
xor
xorl
or
ret
fisubrs
lods
sbb
fidivrs
sub
inc
dec
jb
popa
in
ss
test
outsl
jo
cmc
sbb
shrb
mov
adc
jnp
mov
std
int3
mov
out
push
sbb
ficompl
adc
lea
xchg
xchg
jb
scas
dec
cmp
sub
ret
inc
mov
pop
push
pop
das
sbb
pop
mov
je
xchg
jg
inc
xchg
dec
mov
fdivrp
push
cltd
xchg
xlat
jbe
fldcw
mov
aaa
addl
sub
ficoms
cmp
pop
push
push
scas
mov
xor
stc
psrlw
movsb
mov
pushf
add
or
popa
add
lods
in
add
rorl
jecxz
pop
jecxz
movsb
lret
add
xchg
sub
negb
pop
and
xorl
pop
or
out
or
jmp
add
cmpl
xchg
std
and
jae
pop
fsubs
cmp
inc
jno
fiaddl
scas
test
mov
es
pop
pop
jmp
sbb
cli
sub
test
sub
mov
adc
leave
dec
out
cmp
add
ja
mov
xor
sar
pop
adc
mov
adc
loopne
ds
inc
jo
aaa
rcr
mov
and
lret
test
repz
rclb
out
outsb
mov
pop
xor
jbe
add
into
fisttps
inc
clc
in
or
mov
scas
push
dec
cmp
push
lods
fwait
add
cmc
cmp
push
js
aas
out
xor
add
mov
js
sti
addr16
shll
cmp
scas
mov
mov
orb
call
lods
testl
leave
scas
xor
mov
pusha
inc
add
insl
pop
inc
cli
and
in
xor
pop
adc
mov
dec
push
push
push
sti
shrb
or
shrb
ficomps
and
pusha
test
gs
xchg
pop
inc
push
out
or
adc
mov
repz
cmpsb
jns
jb
cmpsl
mov
test
inc
add
cmc
adc
in
dec
jle
test
jae
xchg
es
add
fists
or
lea
inc
dec
sbb
lods
push
xor
shlb
cld
cmp
sbb
into
adc
or
add
or
and
bound
or
inc
or
jae
scas
mov
test
xchg
fs
jecxz
ss
add
push
fisttps
aas
xchg
int3
push
insl
dec
outsb
gs
int
jbe
mov
push
add
iret
lock
dec
mov
jmp
mov
sub
das
jb,pn
cltd
popa
out
dec
fwait
push
jb
sub
push
lret
jmp
enter
enter
out
cwtl
sarb
mov
add
pop
pop
scas
jno
xchg
and
push
clc
mov
dec
mov
dec
andb
movsb
js
lods
mov
jns
fwait
imul
and
clc
or
mov
mov
push
and
loope
or
mov
clc
aas
adc
sub
dec
push
jp
adc
out
lret
mov
ja
mov
mov
xor
push
pop
mov
xchg
cmpsb
pop
cmp
add
fimull
daa
lcall
adc
das
test
testl
leave
add
lods
mov
mov
cmp
push
cltd
inc
cmp
jo
xorl
push
inc
sub
fidivl
mov
jb
jmp
aas
bound
lods
imul
rorl
mov
adc
mov
dec
adc
sbb
xor
aam
fiaddl
cld
xor
out
sub
xlat
mov
mov
push
movsl
push
es
outsb
sub
int
cmp
out
insl
push
push
or
mov
sbb
lds
push
callw
sbb
pop
push
and
insb
cmpsl
add
or
imul
loop
cmpsl
push
add
in
xchg
cmp
fidivs
ja
add
sub
push
add
mov
sub
ja
pop
fadd
clc
sbb
push
sub
jb
inc
jmp
push
and
in
rcl
ljmp
ja
dec
leave
movsb
into
lds
pop
and
sub
cli
cmpsb
jae
push
or
mov
pop
and
cmpsl
stos
insb
and
cmp
add
jbe
pop
mov
bound
inc
cmpb
mov
cltd
orb
movsl
pushf
mov
push
push
lcall
lret
add
les
push
arpl
ja
sbb
add
sbb
dec
mov
movsl
jecxz
clc
jg
hlt
cs
cli
out
adc
stc
cld
iret
xor
inc
mov
popa
sub
lret
mov
out
insb
jne
jae
pcmpeqb
int
dec
push
jge
mov
jle
inc
fldenv
pusha
pop
bound
mov
insl
push
cmpsb
ljmp
mov
int
into
or
mov
adc
or
mov
mov
xor
mov
shll
mov
mov
mov
xchg
orl
andb
repnz
sbb
pop
icebp
shrl
les
push
in
xor
in
pop
testl
sarl
pop
jae
rorl
sbb
cmpl
jp
pop
mov
jns
and
cmp
lahf
push
incb
mov
mov
jmp
inc
dec
in
lret
xor
mov
pop
push
dec
int
inc
jg
jp
dec
jmp
xchg
xchg
les
inc
sahf
xchg
adc
sub
sbb
imul
fisubrs
push
jbe
jbe
mov
dec
mov
xchg
out
mov
cmp
pop
jle,pn
imul
push
ficoms
shrl
dec
rol
push
hlt
mov
dec
push
orl
inc
sub
stos
or
xchg
cmp
loopne
sbb
pop
sti
popf
xor
mov
mov
sbb
add
dec
cwtl
outsl
ds
or
mov
add
push
sub
push
add
lods
dec
jnp
cmp
sbb
push
iret
xor
jno
pushl
push
insl
cmp
hlt
jnp
mov
jb
cmp
test
fimuls
scas
inc
data16
daa
mov
ja
outsb
and
inc
nop
sbb
inc
cmc
outsl
xor
pop
cs
jnp
pop
jle
mov
mov
dec
mov
mov
sub
adc
es
inc
lds
scas
xor
xchg
sub
mov
adc
insl
cmp
shlb
and
popf
hlt
lret
jle
lcall
insb
iret
sbb
or
cmp
sti
js
xchg
sbb
faddl
sub
cld
lea
pop
nop
outsl
mov
repz
adc
inc
xchg
movb
mov
aad
pop
sbbb
pop
xchg
orl
std
mov
leave
inc
cli
jbe
loopne
dec
test
mov
test
outsl
push
add
push
add
idivb
jae
lahf
pop
mov
mov
aaa
sub
mov
adc
pop
inc
inc
push
inc
mov
inc
std
inc
mov
or
enter
bswap
jo
adc
push
jecxz
lcall
insb
out
sbb
shld
dec
lods
jnp
arpl
mov
pop
loope
adc
scas
fwait
pusha
mov
in
jg
cmp
in
push
push
pusha
ljmp
addl
cltd
mov
mov
inc
sbb
jmp
imul
enter
fwait
test
test
cmc
or
pop
fldt
out
or
outsb
xor
aam
inc
in
rcll
mov
les
jg
jbe
call
into
loope,pt
dec
adc
and
scas
popa
loop
stos
adc
mov
cmpsl
inc
xchg
mov
mulb
or
xorb
pop
icebp
cmp
jmp
add
outsb
movsb
xchg
or
cld
push
pop
pop
add
add
pushf
out
test
dec
shrb
stos
dec
mov
scas
sub
sahf
nop
dec
int
jns
dec
inc
jbe
mov
aam
jbe
pop
negb
scas
cltd
popf
dec
lods
dec
jmp
fisttps
inc
nop
insl
fiaddl
fistpl
aam
stc
or
add
xor
test
shll
adc
inc
imul
mov
push
xlat
mov
in
mov
mov
jo
negb
lods
push
xchg
movsb
in
daa
out
cld
push
stos
dec
cmpl
cltd
rcll
aas
iret
jl
es
ljmp
push
cld
mov
mov
adc
xorb
jmp
ss
cmp
idiv
sub
test
adc
shrb
sbb
sub
jbe
and
cmp
in
push
add
inc
test
sbb
sub
pushf
mov
dec
xchg
popf
out
fsincos
push
in
xchg
pop
loopne
es
out
cmp
sbb
mov
out
int
adc
in
sbb
xchg
push
xchg
jp
out
pop
inc
adc
jbe
cmp
or
fsubrs
icebp
cmpsl
or
dec
jle
imul
scas
daa
push
add
fistl
push
rorb
xchg
mov
push
enter
shll
loope
mov
ret
fdivrs
test
mov
cmp
aaa
dec
sbb
mov
xor
bound
roll
push
mov
cwtl
aad
pop
fmull
adc
cmp
stc
xchg
or
sahf
mov
push
push
adc
pop
push
dec
mov
aaa
xor
or
lahf
xor
mov
and
sub
js
pop
frndint
xchg
lods
fisubrl
sti
jmp
ss
ret
push
fisttpl
xlat
das
jnp
jb
imul
cmc
mov
in
rorb
pushf
or
out
cltd
mov
mov
incl
insb
push
sub
pushw
aam
pop
dec
jp
shrl
sbb
pop
outsl
add
sub
mov
cmc
dec
xor
dec
xor
in
adc
decl
popa
and
or
xor
xlat
xor
jns
fsubrl
jno
fwait
push
pop
mov
insb
cld
cmovns
cmp
mov
bound
lods
repnz
jne
outsl
lahf
inc
adc
and
push
ds
icebp
push
cmpsb
fucomp
lock
adc
add
cmc
adc
outsl
mov
jo
adc
mov
adc
push
add
pop
mov
push
xchg
mov
leave
bound
fwait
notb
push
xor
jge
out
out
mov
das
inc
push
jno
and
push
pop
dec
lret
ljmp
cs
jo
and
inc
pop
adc
push
pushf
outsb
sbb
jecxz
mov
push
dec
outsb
mov
pop
nop
out
movsl
testb
inc
jmp
and
xor
sub
mov
pop
mov
scas
insl
push
adc
pop
sbb
push
into
int
push
dec
fidivrl
inc
sbb
mov
xchg
addb
leave
mov
hlt
mov
ret
gs
cmp
je
sub
aam
cmpsl
scas
cmp
test
shrl
pop
or
jnp
movsb
clc
dec
add
push
sub
xor
lock
ret
test
in
add
popf
bound
movsb
mov
push
adc
xor
fxtract
sar
cmp
push
jle
movsl
test
or
push
lcall
pop
cmpsl
ljmp
push
or
into
inc
inc
pop
pop
leave
dec
repz
lods
imul
movsb
xlat
repnz
inc
movsl
mov
lcall
ret
sbb
movsb
cld
push
jo
mov
int
cmp
ljmp
jbe
sub
fnstenv
arpl
insl
jb
mov
fwait
rclb
cmp
gs
mov
loop
iret
enter
repz
rolb
jnp
cli
mov
mov
ljmp
sbb
push
push
fnstcw
mov
sub
out
data16
in
iret
insb
popa
test
sar
ja
ja
std
cmpsl
out
aad
lock
pushf
ret
push
ljmp
push
fisubl
cmp
adc
hlt
pusha
sbb
pop
push
jecxz
dec
outsb
add
test
adc
push
outsb
lea
dec
mov
mov
arpl
adc
sub
mov
xchg
popf
xchg
xor
pop
rorb
or
fwait
and
sbb
repz
inc
je
test
adc
pop
std
push
xchg
sti
loopne
aad
loopne
aad
mov
lods
pop
enter
add
xchg
sub
sbb
leave
mov
cld
fbld
and
mov
mov
cmpsb
push
popa
ss
xor
loopne
stos
push
cmp
lods
pop
aaa
cmpsl
pop
xchg
gs
cmp
mov
push
xchg
stos
outsl
ret
and
push
mov
xor
push
loopne
mov
xlat
insl
adc
mov
pop
jnp
dec
cmc
xchg
out
insl
scas
mov
push
jle
lahf
add
jbe
ror
inc
cmpsb
jno
js
enter
lahf
and
and
mov
lods
xchg
push
or
int
mov
into
mov
int
roll
lret
addr16
les
fstpt
mov
or
aaa
insl
dec
adc
cmp
hlt
push
mov
mov
mov
stos
or
imul
mov
fisttpl
pop
jnp
sbb
and
dec
xchg
dec
arpl
mov
xchg
pop
or
sbb
sbb
fmuls
or
lahf
lock
lock
mov
data16
out
pop
xchg
hlt
adc
cmpsl
and
orl
test
mov
push
and
jne
je
adc
dec
pop
mov
cmp
mov
sbb
jge
lret
ss
clc
push
movsb
or
mov
repnz
fwait
cmp
cmpsl
pop
aam
pop
add
lea
and
pop
mov
js
jmp
pop
repnz
sbb
call
fildl
insb
mov
mov
push
bound
dec
add
push
push
jns
cmp
jbe
sub
test
xor
daa
in
mov
outsb
movsb
int3
jo
mov
in
lds
clc
cmp
nop
andl
ss
test
xchg
and
xchg
ret
adc
dec
mov
pop
inc
lret
popa
sbb
mov
es
stc
push
stos
es
lcall
jecxz
mov
addb
sbb
pop
sbb
pop
push
push
adc
cs
mov
stos
fsubrs
popa
mov
push
mov
and
mov
pop
xlat
pop
ja
imull
sub
out
loope
push
fs
push
push
lea
out
and
add
lret
sbb
push
push
outsl
adc
xchg
dec
ds
sbb
cmp
xchg
call
imul
fcoms
daa
mov
mov
pop
or
cwtl
jmp
jno
xor
mov
daa
ss
jp
sub
dec
cli
mov
push
and
dec
cmp
cwtl
fs
enter
cli
cmp
imul
lret
jp
imul
push
subb
dec
mov
pop
or
push
rcr
sbb
ret
jmp
pop
loopne
adc
and
aad
dec
cmc
decl
or
shrl
ljmp
std
xor
adc
xor
pusha
mov
rorl
movsl
mov
aaa
sub
daa
and
inc
rorb
stos
jns
leave
ret
mov
fdiv
jecxz
shlb
mov
roll
push
xchg
inc
push
push
int3
popf
push
cmp
mov
fs
ljmp
inc
xlat
or
test
cwtl
mov
loopne
outsb
xchg
std
pop
imul
add
pushf
out
xor
rol
cmpsl
rcr
xchg
add
pushf
mov
andl
bound
fbstp
bound
mov
int3
mov
lea
mov
add
cmp
enter
and
inc
jnp
inc
mov
jns
push
cmp
ficomps
dec
loop
xor
test
cs
mov
adc
int3
jb
mov
test
pop
packsswb
mov
divl
jl
cmc
outsb
xchg
adcb
jb
arpl
cld
push
out
jmp
daa
popf
ficomps
xchg
add
insb
and
jmp
lea
nop
bound
and
jne
jg
or
xor
push
pop
pop
push
cltd
int
push
inc
aas
test
ljmp
fidivl
fstl
push
mov
fimuls
dec
mov
push
pop
push
push
cwtl
and
adc
pop
icebp
mov
xlat
add
hlt
das
arpl
gs
dec
je
in
pop
push
and
mov
int
std
and
insb
lahf
popa
or
out
mull
loop
push
sbb
repnz
in
lret
lea
add
sbb
sbb
lcall
fistpl
cltd
xor
inc
cmpsb
add
mov
out
lock
or
jle
repnz
push
add
jae
pushf
adcb
movsl
jle
dec
push
lahf
fwait
push
cmp
nop
in
fsubl
test
mov
add
loopne
xor
pop
dec
je
icebp
aam
sbb
out
aaa
fcmovnbe
pop
inc
ret
out
bnd
pushl
sbb
test
ss
cmp
pop
xorl
push
cmp
hlt
sbb
int3
mov
shlb
clc
xchg
movsb
std
cmp
iret
inc
icebp
mov
fnstcw
xchg
cmp
mov
xor
xlat
cmpsl
mov
mov
insl
add
insb
in
lcall
mov
mov
ds
scas
cs
mov
pop
es
jns
dec
imul
mov
out
dec
cmp
push
sti
pop
cmp
mov
incl
clc
xchg
cmp
pop
sub
mov
dec
pop
dec
ja
adc
xchg
fnstenv
cltd
sbb
cmp
push
mov
and
mov
cmpsb
sub
repz
inc
loop
jbe
in
adc
jecxz
fisubl
in
rolb
mov
adc
push
jb
inc
ljmp
jp
lods
js
scas
push
dec
scas
add
daa
xchg
adcb
xor
dec
dec
pop
dec
and
pushf
xchg
in
rcrl
popa
jl
fisubrl
push
sbb
out
adc
mov
out
push
mov
jg
cmpsl
insl
mov
ljmp
cltd
push
inc
scas
pop
es
int
in
loop
mov
lret
das
mov
in
add
jno
lods
jg
inc
sbb
int
test
mov
mov
mov
dec
insb
push
add
iret
adc
cmc
scas
xchg
mov
cmp
addl
jne
pop
pop
add
lahf
clc
inc
cli
sub
jb
clc
in
test
ja
mov
cmp
fcompl
jle
pop
xchg
cmp
es
cmp
xchg
push
adc
inc
or
rol
push
insl
or
lods
dec
je
push
dec
push
add
lods
dec
cmp
je
xlat
fldcw
push
mov
mov
xchg
lods
pop
lods
lret
imul
push
mov
lock
inc
pop
out
repz
fs
les
sbb
imul
pop
stos
movsl
mov
sbb
cmpsl
cmp
nop
fsubs
lret
cltd
sub
into
repz
mov
mov
xchg
pop
push
stos
dec
hlt
pushf
pop
push
lock
jns
and
xor
nopl
out
scas
push
xor
movsb
jae
xor
cmp
push
and
notl
cwtl
push
jge
call
cmp
xchg
push
lock
aad
sarb
xchg
arpl
and
and
sbb
paddsb
adc
xchg
xor
adc
or
dec
mov
cmp
mov
jl
pop
cld
and
ss
pop
dec
sub
ror
int
stos
sar
jle
xlat
iret
outsb
cmp
outsl
pop
or
xor
cmp
cmp
in
nop
ffreep
jae
fidivrl
mov
shll
fsubs
sbbb
dec
jb
or
test
push
push
cmpsb
dec
test
test
aad
loop
insb
ret
mov
jne
wbinvd
into
sti
or
imul
add
dec
xor
repnz
ret
mov
push
fsubrp
xchg
push
cld
xor
dec
std
fs
lret
arpl
or
xor
jmp
push
pop
add
sbb
into
test
push
repz
aam
mov
sub
dec
dec
and
popf
jp
mov
xor
ss
mov
mov
imul
push
movsl
les
int3
and
bound
ror
insl
loopne
or
sti
dec
adc
cwtl
mov
shlb
sub
sarl
add
and
jae
psubb
pushf
adc
test
xor
js
test
stc
adc
cmpsb
addr16
inc
sub
mov
fildll
mov
loopne
xorl
dec
into
cmpsb
ljmp
ja
fwait
out
jae
std
in
fiadds
push
push
pop
jb
add
cmp
dec
mov
lds
fldt
or
push
push
fstps
ffree
xchg
inc
test
sub
mov
or
dec
adc
mov
ds
arpl
repnz
jne
mov
mov
daa
pop
mov
xchg
js
les
imul
stos
cmp
xor
dec
rclb
inc
rcrl
push
jno
mov
push
mov
mov
rcr
or
sub
call
pop
sub
clc
pop
sub
pop
test
xor
xor
jecxz
sbb
pop
insl
cmc
mov
popf
cltd
sbb
popf
andl
mov
movsb
jp
imul
outsl
xor
mov
sbb
or
mov
or
add
ret
mov
das
mov
or
sbb
mov
mov
fcoms
push
inc
mov
push
inc
and
adc
pop
push
sahf
mov
mov
fbstp
imul
sahf
xor
pop
xor
loop
cld
xor
andb
ret
mov
mov
jge
xlat
popa
loope
shlb
and
jge
in
fdivrl
bound
push
adc
hlt
sti
sbb
fistpl
bound
repz
and
cmpsb
and
push
jp
or
aam
xchg
and
mov
in
and
aad
mov
hlt
xor
fcoms
and
repnz
sub
test
xchg
mov
and
sub
movb
cwtl
out
outsb
or
ret
subl
sub
mov
pop
out
icebp
jae
scas
xchg
jae
fcoms
xor
or
inc
inc
cmp
rcll
pop
adc
xlat
mov
addr16
cltd
stc
aad
jecxz
negl
jbe
or
mov
dec
mov
cmp
jne
mov
lret
and
scas
popf
push
or
into
roll
push
mov
dec
cs
xor
xchg
mov
mov
jle
xchg
xchg
adc
jno
fcmovb
lea
push
pop
comiss
imul
add
jne
shrl
fucom
adc
pop
lea
data16
xchg
adc
adc
mov
std
xor
lret
lret
mov
xor
mov
mov
xchg
cmpsl
mov
mov
xchg
jg
out
nop
xor
or
les
fcmovnbe
xlat
sbb
into
std
jne
or
jecxz
mov
ret
mov
pop
enter
aas
lret
jns
inc
cwtl
les
cmp
scas
clc
inc
imul
dec
imulb
mulb
adc
inc
jecxz
xor
mov
adc
sahf
shrl
jmp
pop
jno
mov
iret
jae
loopne
cmp
call
int
jg
nop
je
push
sbb
and
fbld
in
adc
fimuls
lea
out
sbb
adc
adc
xor
and
sub
push
in
pop
lea
jb
dec
jbe
aaa
pop
fldt
nop
xlat
insb
cli
test
pushl
jo
xchg
rolb
int
push
scas
and
fucom
jnp
dec
jg
cmp
push
adc
loop
movsb
cmp
dec
daa
xor
mov
mov
loopne
inc
mov
cwtl
test
sub
xor
popl
leave
push
adc
cmc
mov
xchg
shrb
cmp
inc
mov
jo
mov
push
adc
xchg
in
rcl
dec
test
stos
add
addb
xor
stc
dec
mov
popa
mov
cmp
lret
mov
push
enter
fiadds
shl
idivb
cmp
pop
mov
ss
pop
in
ss
int3
adc
inc
push
stc
sarl
movsb
ficoms
sahf
out
loop
shll
ffree
aam
leave
or
lods
mov
jle
xor
lcall
repnz
shll
jne
ss
shrl
push
push
inc
xchg
fs
sti
lret
jg
dec
fwait
icebp
pop
movsl
jg
ja
cld
mov
js
pop
push
inc
adc
push
inc
jae
cmp
jne
scas
jns
insb
fucom
push
add
insl
and
fdivl
xchg
inc
mov
pop
add
sti
es
loopne
adc
jg
sub
insb
xchg
repnz
xchg
mov
jmp
dec
fimull
jmp
fildll
lcall
lds
addr16
adc
repnz
cli
adc
repz
les
stc
out
adc
xchg
pop
mov
sub
in
cmp
fists
xchg
in
mov
sbb
push
or
push
push
sti
mov
decb
fisubs
inc
cmp
and
cld
lods
xor
int
jle
or
ljmp
mov
vsqrtpd
inc
ja
in
pop
int3
rcl
jecxz
adc
sbb
add
lret
pop
jns
outsb
aad
sub
push
inc
je
cwtl
and
arpl
cmp
push
push
dec
fstpt
sbb
iret
sbb
adc
xchg
and
or
scas
ror
dec
sti
cld
push
adc
lahf
xor
sti
fnstenv
fildl
popa
and
ret
jp
fadds
mov
pop
pop
add
outsl
mov
cmp
jnp
incl
jg
pop
jo
pop
cmp
xor
xor
and
mov
cmpsb
int
pop
cwtd
lret
lods
aam
out
xchg
and
out
mov
cmpsb
arpl
stc
add
rcr
add
mov
fstps
xchg
inc
outsb
sti
rol
aaa
bound
push
fldt
mov
cmc
stos
dec
repnz
mov
jne
bound
jae
jp
sahf
add
jge
hlt
imulb
mov
sahf
ljmp
and
sub
repnz
outsb
and
mov
mov
data16
sub
lods
pop
push
mov
sbb
cld
cmp
aaa
stos
xor
sub
ja
dec
scas
mov
mov
xchg
mov
pop
and
mov
jecxz
lds
push
inc
scas
mov
out
movb
lock
testb
loop
lahf
xchg
loope
xor
into
cld
lds
call
movsb
xor
ss
or
mov
xchg
mov
mov
inc
jg
inc
cmp
lcall
loope
and
mov
in
and
repnz
and
cmp
aaa
xchg
fidivrs
loopne
loopne
jne
push
lret
pop
lds
andb
xlat
push
sub
mov
lods
insb
sbb
and
in
and
mov
or
cmp
pop
adc
aaa
ret
in
and
inc
aad
push
pusha
or
rolb
sub
push
arpl
jo
rolb
testl
std
inc
iret
push
test
lds
pop
jg
js
xchg
subb
adc
xchg
sub
or
test
loope
add
loope
push
adc
mov
mov
mov
dec
xor
imul
in
xor
orl
jnp
int3
nop
xchg
adc
rcrl
sub
gs
xor
add
pusha
mov
das
sbb
add
jae
or
test
mov
dec
negb
pop
movsl
pop
fstps
and
sahf
mov
fldln2
xchg
out
pop
test
cli
outsb
pushf
jg
dec
mov
in
dec
xchg
lds
inc
mov
decb
pop
cmpsl
iret
push
arpl
in
sarb
aas
sub
lahf
jno
in
out
mov
push
dec
testb
out
lret
mov
sub
cmp
mov
je
ljmp
sbb
pop
sbb
pop
sahf
dec
adc
xor
dec
in
data16
outsl
ds
scas
shl
cld
shll
sbb
mov
push
or
cmp
add
adcb
or
jmp
test
dec
int
test
mov
dec
mov
xchg
xchg
rcll
xlat
into
in
xchg
adc
addb
push
data16
fldt
cltd
mov
ret
mov
nop
push
pop
dec
imul
add
jmp
gs
nop
xchg
mov
pusha
loopne
xchg
sub
add
iret
cmc
pop
mov
cmpsb
sbb
mov
int
scas
insl
in
or
daa
xor
inc
lods
cltd
sahf
add
int
xor
ret
xchg
imul
cmp
leave
push
xor
push
jno
insl
add
lcall
adc
xchg
mov
jne
sub
bound
lahf
enter
pop
or
jle
in
xor
ja
fs
es
loop
mov
test
jmp
clc
mov
lcall
push
fidivs
imul
xor
xor
adc
in
repnz
inc
imul
shl
out
sbb
jb
test
dec
or
or
or
test
fcmovne
loope
inc
shll
stos
nop
adc
shlb
mov
icebp
emms
int3
xchg
outsl
rol
mov
jo
xchg
fs
shll
daa
sub
rclb
fbstp
test
nop
and
jl
sub
dec
stos
dec
adc
adc
mov
lock
adc
fnclex
and
scas
jb
cmc
adc
mov
mov
insl
movsb
clc
pop
in
sahf
pop
add
xor
jle
hlt
push
ret
pop
adc
push
inc
mov
scas
xlat
lret
rcll
in
mov
pop
pop
fsts
pop
jne
pop
jmp
shll
push
out
mov
jno
adc
cmpsb
jmp
cmpsb
xchg
sbbb
adc
mov
cmpsb
les
lcall
js
dec
imul
sub
jae
add
aaa
cmpl
out
cmpsl
jo
gs
dec
cltd
outsl
mov
cmp
cld
imul
cwtl
lods
inc
mov
cmp
lcall
lcall
dec
sub
stos
inc
pop
add
mov
inc
mov
arpl
je
jle
int
or
jl
mov
jl
imul
sub
jp
std
add
push
or
loop
repz
popa
push
js
iret
cli
sbb
push
pusha
adc
loop
jne
mov
mov
loopne
lahf
repz
fwait
pop
pop
inc
jo
hlt
push
mov
loope
aam
pop
dec
lret
popf
cmpl
jno
cltd
jle
lret
xchg
out
lods
pop
testb
stos
daa
pop
cmp
loopne
or
sbb
and
enter
jbe
aaa
adc
mov
icebp
fisttpl
jb
pop
push
xchg
push
ja
push
fcmovu
add
or
in
cmpsl
sbb
mov
jge
movsl
jnp
ret
nop
test
pushf
je
sbb
orl
js
cmp
mov
fsubl
jno
fxam
jl
sahf
loopne
clc
lds
stos
dec
test
pop
sti
mov
or
loop
mov
dec
inc
mov
lret
jnp
dec
in
xlat
fstps
mov
cmpsb
jne
rol
enter
jne
pop
adc
jmp
test
outsb
jle
push
mov
cwtl
jl
mov
push
fldl
cs
data16
popl
sbb
mov
je
add
insb
mov
loopne
aas
add
fcomi
sbb
dec
movsb
add
popa
lret
push
and
xor
inc
jge
dec
and
cmp
push
push
push
mov
mov
ret
js
cmp
daa
adc
stos
push
dec
mov
dec
insb
je
mov
repz
fidivl
fiadds
xchg
cmpsb
into
fsubp
rclb
mov
cmp
mov
ret
xchg
or
lcall
mov
mov
inc
sbb
insl
pop
out
add
call
sub
test
into
scas
fiadds
push
pop
mov
pop
jb
adc
mov
pusha
sub
adc
xor
mov
stc
ljmp
out
add
adc
nop
push
insb
in
jb,pn
jge
stos
xchg
push
out
mov
incb
pushf
push
popf
push
inc
or
sub
loop
in
pop
ret
int
scas
into
daa
aaa
in
adc
mov
jbe
mov
pop
mov
mov
dec
or
test
lahf
aam
adc
scas
movsl
stc
push
jnp
in
dec
lahf
mov
push
push
testl
mov
call
jl
cmpsb
and
lods
in
xchg
xchg
hlt
flds
xchg
dec
sub
mov
into
mov
orl
fisttpll
scas
or
push
shl
xchg
ljmp
std
test
out
repz
mov
mov
sbb
dec
jae
cmc
sti
div
cmpsl
shlb
push
inc
in
scas
mov
push
cwtl
adc
sbb
mov
jnp
cmp
mov
mov
jae
jle
call
hlt
cld
push
push
xor
cli
sbb
dec
into
adc
pop
mov
or
sbb
jb
cmc
bound
xchg
inc
scas
mov
inc
cmp
push
cmp
or
ret
cmp
sbb
pop
hlt
inc
lods
popa
cmovne
mov
stc
pop
bound
dec
and
nop
sbb
inc
in
insl
add
addb
jecxz
pop
jl
scas
test
fwait
aad
fidivs
pop
jno
pop
jmp
fdivs
inc
fs
cmp
ja
pop
divb
dec
dec
idiv
shlb
repnz
jmp
cmovb
aaa
jnp
int3
mov
sub
ss
mov
popa
inc
xor
xchg
rorl
repnz
jbe
or
fcoml
push
dec
fdivrl
shll
push
xchg
invd
fstps
fcoml
popf
bound
icebp
jecxz
and
sbb
xor
jge
inc
add
lods
out
jns
pop
inc
jg
fsubrl
mov
xor
jg
sub
cmpsl
mov
ret
add
push
adc
rorb
gs
insb
dec
es
push
sbb
xchg
jne
mov
out
or
push
nop
xor
jge
xorb
ficompl
lock
cmpsl
nop
add
idivl
jl
adc
jl
pop
aas
cld
cmp
sub
xchg
shrb
ret
mov
imul
mov
imul
adc
shll
scas
ja
mov
es
sub
into
cwtl
adc
adc
cmc
test
test
jnp
cmp
mov
out
bound
sbb
nop
adc
fs
std
inc
jecxz
fldcw
sbb
xchg
xchg
pop
mov
mov
push
fdivp
xchg
xchg
out
mov
inc
sbbl
push
lret
call
stc
cmp
inc
adc
fnstenv
inc
add
sub
cmpsl
pop
dec
lods
push
pop
iret
bound
pusha
imul
rorb
lods
daa
sbb
lret
mov
sub
dec
and
es
mov
cmp
or
adcb
daa
mov
push
subb
insb
dec
les
mov
add
test
outsl
push
mov
out
je
xor
mov
add
mov
push
arpl
fcoml
jns
jmp
and
push
icebp
add
outsl
cld
test
mov
mov
out
cmp
fimuls
out
stos
mov
popf
mov
out
lods
outsl
push
sti
outsl
mov
aam
xor
inc
cmp
and
mov
lock
xchg
push
push
dec
sub
sbb
stos
sahf
int
inc
mov
xor
repz
xchg
ljmp
mov
testl
mov
lods
xchg
or
push
jg
mov
nop
xor
bound
push
pop
push
jno
out
sti
pop
mov
fsubs
dec
xchg
add
jle
add
adc
xor
out
lock
dec
lahf
pop
je
jl
sub
notl
fists
xor
adc
xchg
mov
out
icebp
insl
adc
jae
inc
stos
pop
fwait
aas
push
out
mov
sbbb
sbb
or
push
inc
xchg
js
push
xchg
inc
add
cltd
mov
mov
in
shlb
dec
or
xchg
ljmp
lret
fnstenv
xor
insl
adc
mov
stc
add
out
in
jae
pop
daa
popa
adc
add
mov
xchg
mov
or
dec
dec
jl
hlt
imul
decb
sbb
or
dec
loopne
aam
iret
pop
stc
test
sub
xor
jo
ret
pop
fstps
addr16
jbe
mov
mov
mov
lahf
addl
push
call
mov
movsb
mov
stos
enter
or
lcall
mov
out
leave
add
loope
add
xchg
les
ds
pop
jecxz
out
xor
lds
pop
jp
outsl
dec
lods
xchg
repz
int3
fcomps
aaa
lods
or
outsb
test
stc
std
or
fists
adc
pop
cmc
test
loope
popl
out
sub
pop
lret
scas
pop
clc
out
lcall
cmpsl
push
pop
mov
mov
cmpsb
pop
add
insb
stos
jno
jp
ss
or
inc
xlat
dec
aas
pop
cmp
loop
scas
lds
pop
testb
xor
fistpll
mov
pop
xor
addb
jge
stos
and
or
out
and
in
mov
jge
jg
cmpsl
cmp
pusha
enter
lea
out
and
cmp
jl
pop
lods
dec
pop
sahf
outsb
frstor
push
int
add
cs
push
xor
cmp
movsl
and
inc
mov
cmp
and
repnz
stc
notl
add
icebp
or
std
mov
mov
cmpsl
push
inc
call
stc
aad
notb
inc
movsl
mov
lea
arpl
or
push
hlt
jl
jo
stos
inc
fstpl
pop
enter
sub
lods
bound
cli
out
adc
popa
mov
mov
pop
mov
dec
jb
add
push
call
sbb
pop
push
inc
xchg
sbb
jne
mov
mov
jg
call
sar
leave
xchg
cld
dec
int
jne
cmpsb
in
inc
mov
mov
cmpsl
clc
pusha
enter
cmpsl
inc
xor
dec
lods
push
cmp
addr16
push
repz
pop
jp
xor
pushf
inc
outsl
lcall
rcrl
sbb
lods
xor
cwtl
fisttpl
out
cmp
and
lods
movsl
mov
int
test
sbb
jb
cltd
test
and
mov
jne
jae
sbb
in
bound
psrad
xchg
mov
jo
dec
adc
loop
lahf
roll
sahf
mov
fstl
push
adc
add
inc
push
daa
pop
leave
push
mov
stos
out
dec
sbb
sbb
mov
pop
aas
cli
jo
lcall
subl
popf
sbb
push
pop
mov
dec
mov
jmp
inc
xor
int3
movsl
jle
mov
stc
dec
xor
mov
fadd
jno
pusha
in
repnz
test
cmp
sbbl
pmullw
or
mov
mov
mov
call
data16
add
inc
mov
mov
jmp
lahf
or
lods
test
cli
mov
dec
push
mov
aaa
xchg
xchg
ljmp
push
mov
push
xchg
cmp
sbb
out
mov
les
and
js
sti
ds
aas
and
fs
incl
inc
and
aam
jg
sub
mov
inc
fnstenv
adc
xor
xchg
cltd
popf
sub
mov
stos
jo
sti
test
inc
insb
cmp
push
popf
arpl
movsb
fnstsw
push
fst
or
mov
mov
out
pop
mov
xor
sbb
mov
popf
and
inc
xor
repz
sarb
fimuls
adc
lods
jmp
pop
lret
xor
std
sbb
cmpsb
dec
aas
iret
sti
aam
jmp
and
add
divb
mov
mov
mov
arpl
popf
or
inc
mov
mov
mov
test
psubusw
mov
bound
stc
and
mov
dec
fimull
jle
test
lret
cmp
mov
aad
and
cmpsl
fistpl
mov
lock
pop
sbb
and
xlat
xchg
sub
mov
inc
cmpsl
jne
pushf
xchg
fldenv
push
nop
cwtl
test
ds
xchg
or
loop
popf
out
dec
xor
je
add
push
push
sub
pop
bound
sbb
add
mov
stc
insb
mov
lret
loopne
hlt
sbbb
mov
lret
shlb
out
push
aaa
xchg
xchg
cmp
pop
pop
adcl
repnz
push
jle
addr16
adc
add
adc
leave
sti
in
fildll
jo
push
stos
aam
into
pop
sbb
cmc
outsl
fimull
sahf
in
adc
mov
jae
imul
xor
add
mov
fisttpl
mov
jne
cmp
mov
notl
mov
jne
xchg
in
stos
imul
push
dec
or
test
sub
fldenv
imul
cmp
push
jae
std
sarb
jg
xchg
xchg
aaa
sbb
into
sub
leave
cmp
xchg
pop
fs
sbb
test
add
push
out
loope
dec
sub
mov
push
adc
rorb
inc
lds
das
adc
and
jne
cwtl
sbb
call
jbe
push
mov
mov
xchg
inc
pushf
lods
lea
mov
sbb
fbld
fnstsw
repnz
outsb
cli
or
imul
ret
aas
les
int3
inc
cld
jo
lds
repz
or
sbb
mov
fwait
jnp
mov
pusha
lods
mov
and
loope
cmp
mov
pop
cli
xchg
icebp
pusha
adc
cltd
repnz
add
or
sti
les
mov
pop
loopne
es
add
mov
mov
push
aaa
loop
pop
cwtl
push
fdivrl
push
adc
cmp
aam
mov
dec
xor
sub
out
jbe
xchg
sub
lea
xor
push
xchg
mov
sbb
inc
jmp
xchg
int
andl
loope
inc
inc
jl
pop
ja
jb
mov
rcrl
adc
adc
adc
add
mov
cwtl
adc
cmpsl
es
jp
inc
repnz
testb
xchg
sub
mov
repnz
cmp
or
addl
cmp
out
xchg
loope
jo
addr16
xor
push
push
xlat
movsb
jno
shll
int3
in
std
sbb
movl
stos
xchg
dec
bound
fisttps
movsb
aaa
lahf
xor
xor
fsubrl
int3
in
out
lock
xchg
ljmp
loope
xlat
outsl
sbb
outsb
push
mov
lods
inc
std
dec
shrb
mov
mov
insl
xlat
push
cwtl
adc
dec
stc
xor
jne
dec
divl
cmc
inc
stos
jns
pop
pop
pusha
js
stos
fs
cli
test
adc
sarl
out
bound
and
jp
jmp
pop
nop
xor
or
sub
push
jmp
decl
xor
imul
cmpsb
push
push
mov
cmc
mov
push
xor
xor
pop
fsubs
imulb
cmp
mov
push
or
mov
sahf
push
pop
daa
xor
pop
push
dec
push
ret
cmp
fildl
push
sahf
imul
lock
aas
lock
cmpb
or
mov
cmpsl
movsb
fbstp
leave
pop
pop
jp
jle
stc
mov
push
pop
sti
xlat
and
mov
sbb
adc
push
sbb
or
shr
arpl
dec
bound
std
loope
ds
jle
and
sbb
xchg
mov
cwtl
fs
adc
pop
bound
or
jle
xchg
mov
clc
and
repnz
mov
arpl
dec
sub
out
popa
fcomps
mov
fxch
outsb
mov
cmp
or
mov
mov
out
pushf
xchg
lea
enter
push
add
pop
mov
xor
sbb
push
inc
adc
mov
ss
imul
mov
and
lea
bound
lock
sub
stc
fwait
je
xor
push
jmp
xor
sbb
test
lahf
and
xchg
cmp
sub
aad
ret
mov
in
sub
mov
out
mov
packsswb
seta
pop
jle
cmp
ret
sahf
outsl
dec
dec
mov
and
cs
iret
inc
pop
cmc
cmpsb
or
mov
lret
outsb
adc
xchg
fistps
pop
notb
xor
subb
ss
aad
shlb
das
imul
cmp
fwait
in
cmp
jle
adc
inc
cmpsl
push
xchg
add
btr
roll
jge
mov
jo
push
xor
cli
int
mov
xchg
xor
aas
pusha
cli
sarb
pop
dec
popf
ja
xchg
daa
jmp
int3
ss
jecxz
or
adcl
pusha
xchg
mov
cltd
sub
jo
aam
mov
lahf
loop
and
pop
dec
lcall
daa
or
lcall
hlt
ret
xor
popa
dec
outsl
xchg
push
mov
jmp
mov
rcl
push
xchg
and
mov
lret
aaa
daa
aam
int
push
test
scas
mov
jp
pusha
cmp
popf
xor
sahf
jmp
pop
cmp
xchg
mov
test
cmp
mov
sub
leave
loope
mov
adcl
cs
xchg
xor
mov
or
inc
pop
mov
bound
sarl
xchg
lcall
mov
inc
mov
jns
pop
xchg
test
mov
ds
or
movsb
ffree
inc
mov
xchg
clc
xlat
dec
ret
mov
cmp
push
mov
fadds
jno
movsb
jl
mov
fwait
push
into
push
lea
rolb
xorl
mov
lea
in
call
mov
sub
clc
shrl
xor
and
fcoml
or
movsl
jbe
arpl
outsl
adc
mov
test
cltd
lahf
mov
push
cmp
fstpt
popf
int3
fs
imull
movsl
popa
mov
fidivs
ljmp
sub
mov
pop
sti
adc
lret
adc
xchg
and
rcr
and
or
loope
pop
dec
fwait
mov
cmpsb
jae
push
imul
rolb
mov
jne
push
adc
in
fisubl
sbb
cmpsl
iret
jns
addl
xorl
pop
gs
test
imul
pop
pop
cmc
out
inc
sbb
adc
mov
sbb
movsl
push
ds
push
mov
or
adc
sarl
fwait
test
or
outsw
xor
dec
sub
sar
inc
nop
inc
pop
xorl
push
dec
xlat
stos
sub
mov
cmp
mov
mov
das
xor
leave
adc
fwait
sub
scas
dec
adc
mov
shr
and
and
pusha
push
outsl
and
sub
dec
cmp
insl
jo
xchg
jle
push
cmc
mov
lds
cwtl
hlt
pop
mov
dec
inc
gs
jmp
hlt
pop
test
enter
insb
movsl
icebp
repnz
mov
pushf
adc
dec
xor
fwait
sub
insb
push
xor
mov
jo
xorl
xchg
xlat
popa
dec
xchg
jmp
outsb
mov
pop
cmp
lret
push
cld
outsb
inc
push
test
sbb
sub
adc
pop
std
repnz
push
jns
int3
int
sub
cltd
lock
mov
cltd
pop
movsb
xchg
test
sub
inc
push
jae
fimuls
dec
mov
fimuls
and
and
add
mov
xchg
inc
std
dec
jns
int3
loope
push
sti
jae
ss
pop
rcl
fsubp
ss
sti
sti
clc
dec
ljmp
lods
loope
test
adc
sub
out
ret
or
sahf
inc
mov
sbb
nop
ja
rolb
mov
xchg
jb
inc
aad
xchg
ja
rolb
push
cmp
mov
sub
fistpll
lret
jno
jnp
add
xor
pop
js
sub
dec
sub
sbb
xor
mov
pop
xor
test
inc
or
mov
into
cltd
int
insb
dec
push
push
xchg
popf
mov
out
jl
cs
test
mov
aaa
jecxz
inc
insb
dec
inc
xchg
sbb
add
adc
xor
jbe
adc
dec
sbb
test
hlt
and
jae
inc
arpl
jp
aas
cmp
cwtl
orb
inc
test
xor
and
pop
fistl
add
pusha
push
aad
ds
lea
lds
jg
mov
addr16
push
xchg
loopne
jno
pop
out
cmp
pop
mov
imul
inc
fbstp
sub
jbe
inc
mov
inc
shrl
in
dec
xlat
mov
cmpsl
fbld
pop
fdivl
aas
adc
cltd
sbb
cld
or
mov
push
and
ret
mov
shl
jb
mov
dec
lods
call
pop
sub
addr16
push
inc
sbb
fmull
add
aad
adc
jae
cmpsl
xchg
insb
mov
pop
and
fildll
jne
repnz
lret
or
rcrb
sbb
test
pop
pop
cltd
pop
gs
out
dec
notb
loope
push
dec
jns
stc
repz
popf
adc
cltd
jl
pop
inc
add
shlb
mov
sbb
call
dec
push
mov
fmulp
addr16
inc
add
cli
jl
mov
pop
sbb
fnstcw
mov
cmpsl
rorb
out
jns
pop
sbbl
insl
insl
sbb
repnz
data16
xchg
fmul
adc
shll
fs
cltd
mov
movsl
sbb
xchg
add
int3
xor
xchg
sbb
iret
mov
std
call
jl
shlb
xlat
mov
mov
icebp
push
jecxz
xchg
or
imul
mov
pushl
test
mov
test
sbb
inc
nop
hlt
fists
and
pop
cmpl
xor
ss
or
mov
adc
in
out
loope
clc
imul
mov
fistl
jae,pt
pop
aad
popa
and
in
and
mov
xchg
sti
adc
push
fiadds
cmc
adc
pop
push
mov
in
mov
cmc
mov
jmp
adc
pop
xchg
aam
dec
sar
dec
jno
xor
adc
push
aas
das
pushl
lds
lock
push
fcoml
dec
xor
xchg
mov
div
mov
mov
enter
dec
cmpsb
cmp
dec
lds
leave
movsl
push
data16
addr16
outsl
push
cmp
stc
push
mov
jg
in
pop
inc
hlt
pop
dec
pop
lahf
jae
add
lods
adc
outsb
xchg
push
cmp
ja
cmp
addr16
test
nop
icebp
jmp
fldl
movsl
sub
push
loopne
xor
or
outsb
fwait
push
xor
sbb
aaa
adc
loopne
hlt
insb
sub
mov
ljmp
rorb
pop
adc
cmp
dec
cmp
pop
push
mov
and
pop
ficomps
mov
pop
xchg
clc
sbb
int3
adcb
imul
cmp
xchg
imul
enter
pop
ror
pusha
out
out
repnz
ds
jne
dec
arpl
dec
dec
cld
dec
outsb
push
xchg
xchg
pop
fsubl
mov
seta
sub
cmp
aaa
cmp
pop
fisubs
or
add
sbb
inc
push
ds
enter
frstor
scas
stos
icebp
or
aaa
mov
mov
jecxz
out
mov
out
nop
sbb
cmp
cmpsb
out
pop
aad
push
gs
sub
push
gs
fs
add
in
sbb
pusha
cwtl
xor
arpl
jbe
dec
inc
push
int3
insb
dec
movsl
add
dec
pop
rcrb
or
pop
fnstcw
hlt
rcrl
cwtl
pop
int3
lret
ret
jmp
dec
mov
cmp
add
push
mov
pop
mov
mov
mov
ret
repz
enter
adc
xchg
sbb
jl
xchg
fwait
push
mov
out
mov
gs
mov
inc
push
mov
adc
dec
xor
mov
into
pusha
xchg
pop
add
orl
inc
adc
lods
cld
call
mov
arpl
and
mov
repnz
mov
mov
loope
fsubrs
mov
mov
sbb
add
and
notl
adc
inc
fwait
jne
loope
addr16
in
aad
inc
mov
or
aas
cwtl
ljmp
in
mull
leave
add
or
mov
cmc
adc
test
and
or
cmp
loope
jp
ret
dec
push
cmp
inc
fistps
out
scas
cmp
adc
mov
push
ficomps
push
int
clc
andb
fistpl
mov
xchg
cmp
dec
add
lods
lea
test
ljmp
add
aam
or
jae
jo
nop
sub
hlt
xchg
pop
pushf
ficoms
sub
adc
sub
jnp
xchg
mov
dec
add
lret
cmp
add
mov
push
xchg
sbb
test
push
lret
lret
lods
mov
hlt
xor
mov
xchg
jge
lret
imul
or
arpl
dec
scas
fists
or
inc
aad
test
pushf
mov
les
lock
fildll
rcr
sbb
pop
or
mov
push
in
insb
clc
mov
lret
sub
dec
jne
daa
jnp
sub
dec
mov
sbb
dec
inc
mov
dec
ljmp
or
jg
xchg
mov
mov
cli
sbb
xchg
mov
repz
dec
mov
ficomps
ds
cmp
dec
out
push
pushf
lods
cmc
clc
fdivr
popf
cmp
test
mov
inc
and
inc
pop
adc
cmp
mov
inc
add
mov
mov
in
test
xchg
jmp
jne
aaa
leave
pcmpeqd
stos
dec
pushf
adcl
adc
add
das
add
jae
xchg
insl
dec
jg,pn
test
rcrb
xlat
cmc
cs
add
mov
inc
lcall
cs
lcall
popf
daa
push
daa
out
aam
fnstenv
shlb
adcb
jl,pt
fistpl
jmp
sbb
mov
mov
mov
js
out
shrb
into
imul
cli
xchg
lds
sub
push
xorb
bound
sbb
stos
fdivl
pop
fpatan
add
inc
negl
xor
xchg
movl
outsb
sbb
rolb
in
sbb
cld
repz
jns
shrl
inc
aam
out
je
pop
push
xchg
gs
flds
repnz
xchg
js
lahf
inc
xchg
shll
cmpl
pusha
mov
push
and
inc
adc
mov
add
pop
jp
adc
sbb
xor
fwait
push
xchg
mov
xchg
mov
jnp
jmp
mov
stc
mov
jmp
sbb
jecxz
in
pop
cld
mov
dec
insb
lret
sti
or
xchg
mov
imul
push
push
add
sub
jg
mov
call
push
inc
sbb
lea
add
addr16
into
adc
ret
adc
cmp
sbb
xor
mov
and
pop
mov
xchg
xchg
loop
out
inc
pushl
popa
in
aad
cmp
sub
out
add
mov
out
push
and
pop
ss
jb
pop
js
or
repnz
xlat
sbb
lods
dec
mov
xchg
insl
jge
pop
insb
mov
add
stos
push
cmp
and
jno
mov
fisttpl
sub
mov
inc
sbb
es
or
xor
xor
jl
ljmp
loopne
mov
loope
insl
aaa
lods
xchg
xor
or
pop
loop
cld
gs
dec
lds
inc
sbb
xchg
das
iret
pop
dec
xchg
dec
test
or
fnsave
imull
jno
mov
clc
inc
pop
out
repnz
sbb
jmp
adc
add
cmp
push
das
and
lret
das
pop
pop
test
sbb
dec
arpl
jmp
push
daa
loope
xor
and
push
mov
mov
icebp
in
dec
shlb
and
adc
dec
in
dec
insl
inc
sbb
into
stc
into
jae
mov
xor
loopne
and
sub
aas
in
aas
inc
add
imul
rclb
sbb
lahf
stos
bound
pop
rcrb
lea
mov
enter
loop
adc
outsl
xlat
mov
dec
cltd
hlt
pop
sar
call
stos
and
and
push
js
xor
add
push
mov
pop
xchg
jmp
fwait
daa
jo
push
in
movsb
xor
inc
jbe
cmp
test
xor
mov
hlt
xor
inc
xor
mov
and
ret
add
loope
pop
pop
movsl
dec
inc
and
or
cs
sbb
xchg
push
mov
ficomps
mov
xor
bound
nop
xchg
lods
mov
dec
out
cltd
dec
sub
stos
leave
or
sub
lcall
push
sbb
fistpl
and
daa
fs
adc
movsb
fwait
sti
jns
inc
arpl
std
xor
sbb
jns
inc
test
lret
mov
cmp
fdivr
mov
in
or
pushf
sbb
mov
mov
jge
shrl
int
pop
cmc
sub
cmpsb
shll
dec
xchg
or
pop
mov
es
mov
mov
std
dec
adc
repz
jo
stos
push
cmp
gs
cmpsl
and
stos
stc
xor
stos
popa
imul
arpl
sti
fsubs
frstor
add
cmpsl
imul
and
sti
push
pusha
je
sub
sbb
and
or
js
xchg
adcl
out
call
and
scas
and
fstps
stc
xlat
arpl
dec
push
pop
xchg
lret
jns
adcb
xor
jecxz
shrl
push
cmpsl
movsl
out
sub
int3
push
ret
jecxz
outsl
mov
clc
or
mov
decb
adc
aas
out
rorl
insl
pushf
fsub
inc
push
repnz
fisttpll
jg
stc
sbb
rclb
leave
je
adc
ja
rcrb
sub
lock
jns
call
mov
fildl
je
sbb
sbb
fs
xor
add
push
and
mov
xchg
aam
and
ret
or
dec
cmpsl
dec
inc
inc
test
aam
aam
repnz
add
inc
imull
loop
stc
dec
iret
add
cmp
sub
js
xor
pop
mov
mov
xor
loop
test
cmp
sbb
dec
popf
add
in
mov
out
imul
lcall
test
repnz
nop
cmp
stos
mov
inc
xchg
sub
jno
clc
mov
push
pop
sbb
rcr
int3
into
stos
loope
pop
and
pusha
pop
push
cltd
out
cmpsb
mov
mov
ds
int
push
iret
or
sub
divb
dec
or
fnstcw
fucomi
sbb
mov
into
test
add
stc
fadd
mov
push
xor
iret
xchg
dec
sbb
gs
and
cmp
call
dec
or
sbb
inc
jle
jb
pop
in
xor
and
lahf
mov
repz
rolb
jp
jl
pop
jo
mov
and
movb
cltd
aaa
push
fcmovbe
sbb
call
sub
scas
cmp
js
xor
adc
or
mov
cltd
adc
mov
pop
jl
push
sarl
std
out
mov
dec
lahf
std
push
mov
mov
imul
outsb
hlt
pop
fcompl
xchg
adc
repnz
icebp
repz
in
fbstp
add
mov
xor
xchg
and
push
les
pop
jae
lock
aaa
repnz
push
insl
adc
dec
xchg
ret
mov
gs
scas
add
add
push
inc
sbb
jo
lcall
test
push
in
sub
xor
les
stc
mov
xchg
test
jge
sbb
xchg
push
rolb
lret
jecxz
ss
cli
jge
lret
mov
fbstp
inc
push
add
cwtl
test
lods
icebp
pop
gs
in
jbe
mov
pop
not
test
shll
push
dec
dec
arpl
addr16
jl
ds
outsb
cs
loope
and
jmp
loop
add
xchg
sbb
xlat
test
ljmp
add
iret
xchg
adc
fisubl
jb
jle
add
and
outsb
es
mov
mov
fistps
sti
aas
and
in
adc
or
movsb
nop
cmpsl
lock
divl
repnz
xchg
imul
cmpsb
bound
test
push
in
mov
ss
pushf
sub
and
ret
push
xchg
jb
mov
lret
cmp
xor
inc
int3
out
xor
popf
and
jmp
outsl
in
rep
pop
pop
push
ret
cmc
pop
addl
xor
movsb
frstor
fwait
icebp
movsb
cmc
inc
rcll
mov
sub
or
lea
cmp
sbb
push
mov
pop
mov
mov
test
mov
fwait
mov
dec
or
test
jmp
xchg
std
lods
inc
jb
adc
pop
add
pusha
out
repnz
mov
mov
int
fnstsw
les
jne
inc
sbb
out
inc
popa
int
inc
mov
add
add
dec
sarl
sub
jo
or
pop
cmp
jae
sbb
jmp
fwait
sub
xor
lock
mov
fiaddl
fdivs
js
push
inc
in
lret
enter
sarb
cmpb
ja
push
mov
insb
mov
bound
xor
cwtl
sti
or
inc
lds
inc
mov
inc
jnp
mov
in
mov
in
push
and
or
icebp
aaa
push
dec
cmp
test
mov
fildl
cwtl
mov
idivb
sarl
les
repnz
ljmp
dec
in
jno
iret
orl
push
ret
fst
pop
adc
js
push
int
call
hlt
lea
adc
cmp
mov
cmpb
popf
stos
mov
out
xchg
movsl
push
add
mov
pop
ds
pushl
test
dec
jge
adc
pop
mov
sub
out
or
andl
loopne
mov
aaa
inc
mov
fs
xchg
jecxz
jmp
int
sbb
jno
hlt
xor
add
jle
out
sub
xchg
test
xorb
pop
out
mov
sub
xchg
cs
inc
bound
pop
add
cs
push
add
pop
imull
outsl
add
subl
pop
sbb
outsl
push
adc
sub
mov
mov
jl
ret
sbb
loopne
addr16
pop
addl
pop
jge
out
mov
je
gs
in
leave
pop
sahf
push
jle
adc
loope
out
jne
mov
fwait
dec
and
insb
hlt
xor
adc
pop
lahf
cmp
or
int3
lret
sti
mov
decl
push
in
adc
add
int
inc
jne
bound
adc
mov
sahf
push
fnstsw
in
lea
popf
cmp
in
xorl
jb
ret
mov
mov
add
mov
sub
jb
jle
add
test
mov
stc
in
jbe
mov
push
add
repnz
or
push
dec
cmp
or
fdivl
test
cmp
mov
and
push
mov
push
adc
jb
popf
es
mov
aam
push
aad
in
xchg
insl
mov
ror
shll
clc
sbb
push
inc
insl
fs
scas
or
mov
mov
test
lret
loope
stos
mov
ja
mov
push
jbe
xchg
jge
sti
add
lea
cld
xchg
xchg
or
fcompl
pop
ja
xchg
mov
popf
jle
mov
repnz
je
insl
or
jp
outsb
push
out
movb
or
or
icebp
and
pop
pop
sub
pop
arpl
sub
ret
mov
jnp
inc
stos
mov
shrb
js
mov
stc
dec
pop
lahf
test
dec
add
jle
xchg
testl
scas
sbb
push
add
movsb
fcmovu
daa
xchg
xor
aas
inc
jbe
mov
rcrl
stos
inc
jg
jns
sub
ljmp
andb
sub
in
push
ret
cli
push
ljmp
adc
xor
negl
test
clc
push
fiadds
mov
push
arpl
mov
int
xchg
ds
mov
xchg
cltd
push
xchg
rcrb
inc
xchg
enter
mov
or
lret
jb
clc
push
dec
out
lcall
jp
cmp
mov
das
add
hlt
lea
out
mov
sbb
sbb
mov
bound
sbb
out
and
cmp
daa
add
lds
lcall
shll
pop
out
arpl
pushf
dec
fisttpll
idivb
sub
mov
fisttpll
push
mov
sbb
cmp
es
sbb
adc
imul
sbb
das
mov
daa
cmp
and
insb
and
sar
sub
lahf
mov
or
int3
xor
and
mov
inc
xlat
cs
xchg
inc
mov
xor
mov
sub
sbb
cld
push
inc
xchg
inc
push
xchg
pop
push
fildll
or
lea
arpl
lds
xchg
pop
loop
outsl
dec
cmp
push
pop
data16
xchg
xchg
xor
adc
imul
loope
jle
es
xor
stos
in
xor
int
jb
xchg
jg
cli
push
stc
jle
sbb
mov
into
jbe
mov
inc
jnp
lret
or
lods
rclb
shrb
pusha
inc
jp
mov
jns
jns
xor
cltd
dec
cmpsl
and
ss
sub
loope
and
xchg
add
or
andl
fsubs
imul
jae
out
sub
mov
iret
stc
fmuls
out
inc
mov
inc
mov
mov
mov
push
out
xor
cmc
mov
int3
jno
xor
mov
pop
mov
outsl
xor
adc
stos
lret
jl
dec
push
mov
pop
push
bound
mov
cmpb
lea
bound
xor
fucomi
mov
enter
or
and
sbb
fimuls
je
sti
pushf
push
cmpsb
sbb
xchg
pop
dec
cli
cmp
sbb
pop
cmp
mov
sub
pop
dec
inc
pop
daa
mov
decl
push
not
cmc
shlb
in
mov
xchg
push
sbb
call
aas
int3
jl
jg
ret
das
pop
pop
adc
aaa
pop
movsl
jbe
into
and
xchg
in
jecxz
test
dec
mov
mov
mov
and
pop
insl
push
aad
sbb
mov
gs
xchg
mov
lods
int3
ds
addr16
call
add
notb
lods
fs
fs
dec
mov
sbb
adc
aaa
sbb
mov
insl
enter
pop
dec
test
gs
push
int
mov
hlt
xchg
loopne
inc
loopne
cli
sti
adc
xchg
xchg
jp
jge
adc
stos
pop
popa
or
add
out
aam
jne
sti
xchg
decl
sbb
push
das
outsl
fcmovbe
pop
inc
or
xlat
jecxz
push
jp
scas
inc
fbstp
adc
pop
mov
repnz
jne
subb
movsb
aad
jae
pop
fsubrs
cmp
and
movsl
xor
popf
lock
lret
icebp
inc
pop
pop
adc
mov
out
addr16
add
stc
dec
fnstenv
jne
adcl
mov
stc
repnz
adc
lret
mov
inc
or
sbb
or
addl
dec
add
leave
popa
mov
into
xchg
or
aam
add
xor
mov
push
popf
inc
mov
add
mov
sub
xor
cltd
in
insl
lea
es
mov
pop
mov
dec
into
cmc
or
add
orl
gs
pop
gs
sarl
xchg
mov
push
mov
mov
push
adc
xor
add
loopne
xchg
xor
mov
and
je
cmp
mov
int
div
pop
clc
and
pop
lods
loop
mov
add
pop
xchg
sbb
iret
or
sti
int
push
orl
xchg
mov
add
lds
test
pop
dec
stos
ss
sub
mov
fcoml
xchg
jle
sbbl
imul
jl
and
push
mov
popa
jns
add
in
out
insb
lahf
xor
fcomps
pushl
clc
loop
out
aaa
sbb
js
test
pop
repz
xor
cmp
out
push
mov
push
rclb
pushf
je
rorl
sbb
arpl
ds
out
push
cmp
test
shrl
jp
cmpsl
add
inc
call
arpl
pusha
cmc
sub
lds
push
or
jmp
push
xor
mov
lock
or
pop
cld
mov
or
mov
or
outsl
js
mov
fsubr
adc
fidivs
popf
mov
mov
cli
push
jp
inc
pushl
push
mov
sbb
insb
mov
jns
sub
ret
adc
pop
mov
popf
lret
jmp
mov
rorl
pop
jne
or
mov
push
aam
mov
fnstenv
insb
mov
arpl
push
xchg
push
xchg
nop
and
leave
out
negl
aas
dec
enter
mov
insb
add
test
sub
or
or
add
adc
mov
xchg
jecxz
ja
ret
aas
pop
pop
cwtl
pop
or
fcomip
cmp
mov
mov
gs
pop
aaa
xor
cmpsl
xor
push
mov
sbb
test
pop
movsb
aad
insb
mov
lods
push
xchg
push
arpl
sbb
jnp
sub
fmuls
jne
icebp
sarl
scas
cmp
push
push
push
scas
aad
jb
mov
jmp
aas
cmpsl
fstpt
mov
div
dec
xchg
outsl
cmp
xchg
mov
mov
sub
std
cmp
xchg
add
dec
xchg
sub
mov
cs
loope
in
cld
xlat
sub
mov
into
mov
call
scas
scas
mov
roll
in
add
sub
aas
sub
cltd
xor
and
orl
aam
pushf
inc
out
cmp
lods
mov
pop
xor
daa
add
fnstenv
lret
push
outsl
mov
mov
lds
and
xchg
lahf
dec
lods
outsl
push
jb
adc
push
movsl
or
pop
mov
loope
pop
test
fimuls
ficompl
loope
into
icebp
lcall
clc
or
or
jmp
mov
lret
in
in
mov
test
inc
pusha
add
iret
pop
lret
insl
add
movsl
cmp
cmp
push
pusha
push
inc
das
pop
xor
cmpsl
push
xchg
inc
push
dec
xor
stc
cld
in
mov
in
test
mov
pop
inc
sub
add
imul
cwtl
mov
push
arpl
test
aad
loope
out
mov
sub
cltd
clc
push
mov
cli
mov
enter
test
andb
jbe
pop
lret
aas
pop
or
out
and
cmp
aad
out
cwtl
mov
jae
outsb
push
aad
bound
mov
jmp
mov
aas
into
out
cmp
fsubp
and
push
test
popl
rclb
xor
ds
lock
adc
outsb
hlt
insb
push
popa
repz
mov
xchg
xchg
cmp
setg
movsb
dec
mov
jae
sarb
das
ret
rclb
clc
arpl
cmpsb
xor
dec
add
jae
movsl
mov
outsl
cli
xor
loop
jle
jecxz
aad
inc
push
int3
jmp
dec
icebp
cld
test
popa
xlat
es
adc
insl
test
into
mov
cltd
jae
or
mov
mov
int
and
xchg
fwait
out
fscale
add
ret
jne
inc
jg
jnp
fs
pop
das
in
aad
pop
pop
dec
jnp
mov
int3
or
stos
std
adcl
jae
outsb
mov
repnz
mov
cld
lret
push
adc
sub
and
les
mov
aas
xchg
mov
dec
test
push
xor
rcr
mov
dec
sti
cmp
adc
cmpsl
pop
pusha
pop
push
lret
mov
push
shll
inc
outsl
movsb
jne
pop
xchg
sbb
shr
imul
jae
ljmp
mov
mov
stos
sbb
or
icebp
jecxz
imul
ljmp
sti
xchg
das
or
in
inc
shll
and
ret
jae
clc
loope
xor
out
dec
sub
add
and
jmp
call
push
jno
iret
jne
dec
flds
mov
xor
out
jg
jmp
pusha
xor
push
setae
add
add
jecxz
xchg
mov
mov
in
bound
cmp
mov
jno
add
xor
inc
addr16
in
dec
jecxz
mov
loopne
push
cld
icebp
mov
shl
dec
ror
push
sub
or
and
stos
loope
icebp
rep
cld
daa
scas
xchg
push
adc
fisubrs
andl
int
adc
std
mov
mov
mov
xchg
inc
mov
hlt
rcl
fistpl
pop
call
xchg
inc
je
sbb
inc
packssdw
mov
jnp
nop
lret
aaa
xchg
xchg
dec
sub
mov
movsb
jo
daa
fcomps
mov
jecxz
jnp
test
and
enter
movsl
push
cmp
bound
mov
jge
scas
scas
xchg
scas
adc
enter
push
sub
lea
mov
xor
sub
fstps
orb
jnp
push
sbb
repnz
test
jnp
out
mov
jmpw
lods
in
sub
lea
pop
es
fwait
sar
inc
in
sarl
dec
adc
push
and
inc
push
pusha
outsl
ds
jns
xchg
jmp
or
jbe
jmp
test
lret
es
ds
and
into
mov
dec
mov
fxch
ret
cld
stos
jg
in
jbe
inc
xchg
outsl
loope
clc
pusha
fadds
xor
jg
addr16
mov
adc
popa
xchg
pop
dec
mov
push
xchg
xorb
lods
daa
sbb
mov
push
push
mov
bound
in
ret
rcrb
mov
pop
jno
mov
out
popa
sub
aam
inc
sub
xor
and
adc
xor
jo
jle
and
or
ds
xor
push
add
stos
loop
hlt
arpl
xor
sbb
push
cld
ficoml
outsb
mov
cmp
cmpsb
icebp
rcr
mov
push
fisubrs
pop
jb
mov
xchg
jno
pop
dec
jmp
fwait
sbb
push
xchg
aam
fbld
test
enter
out
push
jle
push
adc
loope
shlb
jno
mov
out
in
pop
and
pop
xor
mov
or
sbb
inc
aam
jae
shrb
std
popf
test
dec
lahf
sti
xlat
push
lds
sbb
xchg
sahf
fildll
js
jle
dec
ret
lcall
sbb
xchg
push
adc
fmul
push
mov
xor
in
xchg
lea
decb
aaa
faddl
xor
stc
ds
movsl
push
mov
repnz
pop
jl
sbb
int
sbbl
jns
rorb
fadd
xor
xchg
mov
or
test
xchg
push
cmp
adcl
jle
xor
mov
fucomi
icebp
push
add
pushf
fisubs
xchg
movsb
sti
popf
lock
arpl
cs
faddl
jno
inc
jle
daa
aam
inc
xor
rcll
fisttpl
loope
mov
pusha
sbb
mov
call
xchg
sub
or
mov
mov
shrb
lret
jnp
xchg
dec
rolb
int3
lcall
fldt
mov
and
in
xchg
fwait
sbb
push
stos
cwtl
jbe
sbb
dec
mov
or
lds
aaa
fstpl
pop
and
or
pop
shrl
fmuls
shl
sub
bound
push
cmp
xor
imul
sub
push
sub
idivl
in
cmc
add
into
jg
adc
aaa
xor
shrl
js
imul
xchg
stos
popf
add
fsts
imul
xchg
shll
jnp
call
mov
fstl
mov
cmpsl
add
adc
xor
add
es
pop
sbb
mov
xor
inc
fcoms
xor
inc
lret
inc
jmp
mov
cltd
shrl
loop
mov
repnz
mov
mov
jne
push
adc
xor
mov
jns
inc
mov
out
sub
sbb
pop
leave
dec
xor
sub
ficomps
push
mov
cltd
pop
jle
mov
fbld
lods
inc
loop
cmp
shll
fidivrs
cmp
aad
push
loop
bound
leave
inc
push
fldcw
mov
test
dec
scas
das
outsl
movsl
cwtl
push
and
lds
test
cmp
ljmp
insb
and
or
jmp
xlat
and
push
pop
inc
sbb
btc
xchg
sbb
mov
out
dec
xchg
push
and
jnp
std
movsl
dec
decb
gs
sub
lret
loop
mov
aas
inc
add
lcall
adc
pop
shrl
outsl
cmpsb
aaa
cmc
xor
xchg
inc
in
addr16
scas
mov
lea
cli
push
nop
and
sbb
jmp
outsl
add
pop
aad
jbe
mov
sub
sbb
imul
enter
and
loop
ljmp
outsb
push
repnz
sbb
push
xchg
jecxz
fsubl
xor
call
insl
xchg
dec
jecxz
cmp
xor
stos
jl
icebp
jae
and
mov
lcall
lods
movsb
push
add
call
fildll
loope
loopne
or
push
std
or
and
mov
push
sbb
inc
pop
pushf
or
jmp
movsb
add
sbb
mov
outsl
pop
adc
lods
adc
into
and
stc
inc
and
xor
int3
test
and
shll
sbb
mov
fs
int3
int3
lea
sbb
fildl
and
mov
int3
test
add
mov
popa
fists
in
ficoms
or
push
add
cmp
pop
xor
mov
shrb
fistpll
push
pop
aaa
mov
hlt
aam
mov
lea
push
int3
fsubrs
test
mov
lods
ljmp
stos
addb
xchg
sbb
xlat
cmpsl
mov
adc
sti
data16
mov
jns
lcall
jb
adc
ret
pop
clc
cs
mov
insb
pushl
mov
aad
stc
inc
cmp
push
mov
std
xchg
iret
cmpsb
leave
cmp
les
or
lock
mov
in
jle
das
fidivrl
jno
mov
fsubl
ljmp
mov
subl
sarl
test
push
inc
mov
negw
dec
insb
je
sub
cmp
cmovae
inc
in
shlb
sub
sub
jecxz
fadds
and
xor
les
add
jg
mov
mov
jmp
in
popf
xchg
mov
cmc
repz
out
add
out
clc
mov
push
adcl
in
stos
pop
push
inc
int3
mov
xor
dec
lcall
push
sti
incb
mov
imull
dec
stc
sub
xchg
fs
inc
inc
std
movsb
add
fwait
addb
xchg
jo
mov
jno
xchg
mov
lods
gs
stos
jns
mov
cmp
push
insl
psrld
data16
inc
vpaddusw
lret
jns
jmp
xchg
inc
and
call
push
data16
xor
fwait
int
mov
pop
mov
cmp
imul
mov
cmp
cmpsb
iret
clc
cld
sbb
test
iret
das
jle
mov
mov
dec
mov
fistl
fwait
adc
jmp
call
arpl
xchg
stc
ss
push
rorb
repnz
stos
push
insl
dec
sub
xchg
adcl
or
lcall
or
lret
daa
inc
and
sarl
sbb
es
nop
xchg
mov
sub
fimull
jle
cmc
push
xlat
lods
jmp
adc
mov
std
inc
pushf
incl
jnp
in
mov
loop
in
or
sub
push
mov
cmp
cmp
pop
push
push
pop
fmuls
pusha
sub
mov
loopne
and
ss
push
mov
sub
arpl
fwait
jecxz
or
cwtl
mov
std
mov
sbb
sub
xchg
jnp
dec
mov
enter
or
mov
nop
xor
cwtl
add
cmp
fwait
cltd
push
xchg
jb
ljmp
or
mov
int3
inc
test
iret
and
mov
inc
jo
aam
mov
inc
add
dec
decl
xchg
add
dec
sub
mov
xorl
in
xchg
in
mov
imul
add
imul
mov
cwtl
inc
jb
xor
mov
pop
or
ss
mov
mov
cmp
stc
add
out
mov
pop
dec
sub
hlt
lds
or
and
push
shr
fnstcw
sub
cmpsl
xor
aas
push
push
jge
xchg
xchg
push
repnz
push
in
movsl
jge
rolb
jmp
fildll
pushf
xor
nop
cmp
add
adc
out
aas
pop
cmp
jne
into
push
and
jne
scas
lock
fs
jp
sub
push
and
dec
lods
iret
loopne
jle
dec
mov
sub
mov
sbb
insb
push
dec
stos
imul
aaa
jne
or
inc
fisttpll
cmp
mov
data16
jae
and
jb
outsl
lea
rcr
push
test
mov
pop
popa
sub
daa
push
push
cmpsl
aad
cmp
imul
xor
aam
sarb
pop
pop
andb
mov
loopne
into
call
cmpsb
pop
movsl
mov
call
idivl
ja
inc
mov
lea
ss
es
mov
repz
mov
dec
sub
mov
lret
push
les
and
es
loopne
imul
push
fwait
and
jmp
leave
jecxz
inc
sbb
lods
jecxz
xchg
pop
mov
mov
fcmove
insl
jbe
loopne
mov
mov
popf
and
std
xor
push
xor
scas
pop
cmp
mov
lcall
rcrb
jo
inc
cmc
cwtl
insl
stc
jle
loope
daa
fwait
in
fdivrp
xchg
cltd
fldl
repnz
xchg
fcoml
add
sti
add
jno
cmp
adc
nop
adc
mov
dec
cmc
mov
sub
mov
or
mov
jno
das
rcrb
dec
jns
push
jmp
outsl
shrl
inc
mov
out
xchg
repz
cs
xor
mov
int
xor
inc
mov
mov
add
or
pusha
dec
push
dec
pushf
aam
cld
movsl
imul
dec
push
lds
sahf
hlt
lret
fneni(8087
test
adc
jge
scas
jne
mov
or
addr16
pop
mov
inc
rol
shrl
in
jae
inc
out
jg
mov
cli
adc
pop
xor
jg
aam
rcrl
jle
or
pop
jp
and
outsb
cmp
adc
push
push
xchg
push
dec
pop
aam
lods
insb
test
and
nopl
adc
ljmp
xor
pop
push
leave
xchg
cltd
push
sub
popa
arpl
out
push
or
out
outsl
notb
push
jns
xlat
mov
incb
notl
mov
in
xchg
test
sbb
jno
aaa
fisubl
shlb
mov
adc
bound
inc
outsb
and
bound
add
pop
mov
push
mov
inc
push
cmpsl
js
mov
dec
inc
push
add
sbb
mov
push
repz
icebp
dec
add
leave
adc
inc
jecxz
lea
mov
push
std
pop
mov
add
push
inc
rorl
cmpsb
mov
es
std
mov
sbb
jmp
add
push
loope
repz
imul
sub
push
addr16
sti
pop
outsb
icebp
add
mov
pop
mov
sahf
lcall
pusha
xor
inc
mov
scas
xchg
popf
adc
repz
mov
in
pop
outsb
push
push
pusha
sarl
xchg
ljmp
fnstsw
enter
lods
cltd
and
add
adc
lret
iret
lods
push
imul
adc
popa
notb
call
cld
repz
push
add
or
mov
shll
stos
lods
lods
and
mov
sub
push
ja
jge
enter
orl
mov
xchg
adc
fcomps
shlb
fcoml
sbb
ret
mov
movsb
pop
xor
adc
mov
lahf
push
cmpsb
fiadds
test
outsb
inc
add
adc
or
ja
lret
scas
insl
push
das
push
mov
mov
js
pop
ljmp
rorl
and
mov
arpl
xchg
out
mov
jecxz
add
jmp
or
insb
sbb
or
insl
mov
or
pop
adc
xchg
xchg
adc
or
xrelease
insl
repnz
movsb
dec
mov
scas
daa
lds
add
xor
addr16
adc
adc
xor
into
cmp
push
int3
jo
addr16
mov
stos
movl
ret
mov
cmc
cmpsl
adc
in
cmpsl
daa
sub
arpl
adc
push
test
out
sub
and
das
and
pop
enter
mov
push
ss
sbb
push
push
outsb
push
push
jp
sub
push
xchg
inc
mov
negl
and
pusha
ret
jae
mov
or
fwait
xchg
mov
js
bound
pusha
mov
arpl
dec
ja
jecxz
sahf
or
cmp
ja
inc
fsts
mov
rol
lcall
in
cmc
dec
sub
mov
dec
testb
aam
je
pop
ja
cmp
pop
mov
xchg
add
xchg
and
pop
aad
aad
push
inc
add
mov
dec
push
sbb
inc
outsl
jl
dec
mov
or
hlt
xor
aam
sbb
fcomps
in
std
xor
hlt
and
mov
imul
rorl
and
cmp
or
inc
bound
mov
xchg
xor
or
gs
lret
outsb
pop
push
or
gs
xchg
xchg
dec
rorl
and
adc
cmp
loop
jmp
jae
xchg
cld
mov
push
jo
outsl
in
add
scas
adc
sub
add
out
mov
jle
fstps
pop
inc
movsl
pop
or
popa
mov
xor
mov
or
sub
or
aam
pop
fidivrs
cmpsb
jno
jnp
and
stc
fldl
fnsave
inc
outsl
sub
inc
mov
movsb
and
insl
dec
xor
ret
loop
je
loopne
jg
push
and
xchg
jb
ret
ror
test
cmp
jge
mov
ficompl
xchg
jge
pushf
std
in
push
cmp
lea
jl
scas
push
lods
jae
test
jb
shrl
xchg
pop
adc
out
pushf
lret
mov
bnd
imul
fistl
imul
lret
ljmp
gs
ret
push
push
sti
test
xlat
and
dec
lds
sub
dec
jo
adc
sahf
repz
xor
stos
pusha
mov
cmp
mov
fsubs
mov
mov
adc
cld
outsb
sub
jg
cld
sbb
inc
jae
jge
jg
pop
and
lahf
out
pop
pop
pop
pusha
xchg
push
cli
enter
sbb
fmull
mov
call
outsb
sub
fdivl
js
jp
mov
jle
or
in
scas
adc
add
pop
out
sbb
hlt
rcr
shlb
leave
dec
push
inc
add
pop
cwtl
rorl
adc
stos
xchg
mov
repnz
dec
cmp
xchg
fisttpll
es
out
pop
cmpsl
cmp
dec
jge
filds
push
push
adc
or
inc
xlat
xor
jp
pop
cmp
add
insl
repz
mov
out
je
mov
hlt
fs
mov
mov
arpl
lea
xorl
jo
adc
xor
jecxz
mov
lahf
repnz
dec
repnz
add
xchg
jnp
cmp
leave
pop
stos
aaa
jecxz
mov
add
dec
and
xchg
jae
imul
push
shl
std
cli
clc
adc
fs
out
jg
lea
mov
mov
repnz
aam
inc
inc
and
cmp
inc
inc
jl
dec
pop
mov
das
inc
add
xchg
mov
mov
xor
mov
sbb
add
out
stos
pushf
xchg
ja
jne
clc
or
gs
adc
lret
loope
jno
mov
xchg
sbb
aaa
aaa
push
in
lods
aas
push
add
das
mov
daa
add
in
xlat
sub
mov
mov
jo
jge
jp
popa
inc
std
mov
add
test
sub
addl
insb
shlb
cmp
js
lea
jp
mov
aaa
insb
jp
movl
aad
inc
stos
adc
mov
popa
cmc
mov
mov
fs
insb
cmpl
inc
sbb
mov
xchg
icebp
or
fs
ja
ror
cwtl
fdivr
xchg
mov
fnsave
dec
ret
xchg
jns
orb
dec
into
out
jnp
pushf
jmp
and
je
cmp
cmovg
out
pop
pop
out
adc
jae
rcl
push
outsb
pop
xchg
fistps
add
cmp
inc
jg
push
push
inc
xchg
pop
in
dec
shll
push
das
xchg
sub
push
sub
movb
fmul
xor
out
xor
xchg
lea
roll
mov
mov
jmp
repnz
movsl
out
jne
and
mov
mov
mov
pop
pushf
jp
xor
push
jl
adc
add
cmp
add
adc
out
add
sbb
stos
rcrb
cmp
push
xchg
sbb
inc
flds
lods
lahf
fmulp
cmp
call
add
mov
or
loope
push
fsub
shrb
mov
cmpsl
adc
cwtl
sub
sbb
popf
mov
sarb
mov
and
add
add
fdiv
daa
cmpsl
push
push
loopne
jnp
repz
mov
ja
int
jmp
dec
pop
ret
push
or
push
sub
rcll
add
sbb
mov
pop
mov
push
lcall
sbb
cmp
cmp
xor
xchg
xor
xchg
jge
cld
std
inc
roll
aas
fldcw
idiv
jnp
push
pop
shr
jg
int3
xor
jne
js
sti
sahf
icebp
loope
out
mov
jno
fmull
cltd
gs
pop
jecxz
add
bnd
lret
dec
mov
loope
cmp
mov
cld
mov
mov
lods
sbb
fwait
inc
jle
out
pop
push
clc
repz
cmp
lock
and
push
imul
orl
inc
pop
push
pop
das
push
add
in
arpl
and
xor
fiadds
int
aad
sub
f2xm1
sbbl
cld
cli
push
and
sti
xor
insl
dec
cli
mov
pop
mov
or
loopne
icebp
push
lods
sbb
int3
pop
outsl
out
jnp
dec
jg
lock
dec
clc
dec
rol
fidivrl
gs
jo
outsl
lock
xlat
daa
test
repz
mov
rcr
and
mov
insb
xor
fwait
mov
cmpsl
lods
mov
ss
cltd
insl
or
out
ja
test
scas
pop
cmp
pop
or
push
push
mov
in
dec
cmpl
push
adc
jnp
out
jg
dec
mov
mov
out
pop
or
or
sahf
jmp
lcall
fstpl
add
push
mov
xor
enter
dec
fwait
int
sahf
add
test
inc
push
add
mov
pop
inc
fldl
repz
and
lods
mov
imul
push
jmp
dec
popf
jecxz
dec
popf
inc
cmp
test
mov
out
adc
add
aad
mov
fdivs
cmp
aas
dec
loop
fs
pop
fcom
jns,pt
out
push
icebp
pusha
rol
dec
les
movb
pop
sbb
sbb
and
add
inc
adc
test
xor
push
les
dec
push
cmp
adc
sbb
stos
adc
mov
imul
jns
adc
adc
inc
mov
pop
sarb
add
jl
imul
dec
in
lds
push
gs
leave
fnstsw
mov
das
mov
in
xlat
sub
jbe
cmpsb
sub
push
loop
inc
outsb
pop
andb
dec
lahf
xchg
fwait
xor
daa
cli
bound
fs
adcb
leave
inc
sbb
and
fwait
shrl
or
fstl
notb
add
mov
sbb
fwait
or
sar
mov
dec
cli
inc
ret
push
inc
jnp
arpl
enter
mov
movsl
cwtl
mov
leave
xlat
addr16
or
aad
into
xchg
scas
jo
cli
and
sbb
mov
or
dec
lods
daa
adc
or
cmp
dec
or
outsb
test
push
pop
out
cmp
mov
push
mov
or
inc
ja
jbe
push
xor
cmpb
mov
add
insl
sbb
push
lcall
xchg
xorb
pop
int
and
pop
sbb
adc
xlat
std
cmp
sbb
push
or
inc
jecxz
mov
and
dec
and
lods
push
sbb
lret
ss
mov
mov
xchg
push
mov
data16
gs
inc
in
rorb
pop
jle
mov
movsl
addr16
sbb
stc
dec
loopne
or
cmp
test
adcl
ret
lods
in
fisttpl
xchg
pusha
hlt
jb
cli
add
inc
popa
cmp
dec
lock
mov
mov
ret
mov
mov
std
add
ficoms
xchg
sub
push
cmp
inc
lret
int
mov
push
loop
cmp
dec
inc
mov
xchg
dec
aas
movsb
dec
sahf
or
jg
xor
out
subb
and
push
cli
mov
sbbl
mov
das
xchg
out
movsb
lret
ror
push
push
inc
gs
dec
jne
arpl
mov
das
fwait
add
addr16
inc
andb
add
popf
jo
push
mov
insl
jge
add
mov
mov
push
xor
sub
jnp
xchg
push
into
cmp
cmpsl
popf
inc
fidivrl
add
repz
adc
jp
and
adc
dec
mov
sbb
addl
or
loopne
xor
loopne
fimull
stc
sub
xchg
mov
sub
push
xchg
xchg
es
lret
push
mov
js
jno
mov
sbb
adcl
inc
fbstp
movsl
push
nop
mov
mov
cs
les
xchg
mov
jp
stos
inc
mov
sub
ss
aam
mov
cmpb
js
mov
lods
xchg
cmc
scas
insb
push
jo
fstpt
data16
or
cmpl
mov
mov
mov
cld
xchg
sbb
jne
xor
movsb
xchg
lds
incl
mov
je
dec
addb
cmp
je
push
pop
ret
add
lret
sbb
std
mov
inc
dec
popf
dec
in
jno
aas
pop
jae
jmp
popf
lds
stc
loop
jmp
lret
cmp
lcall
aam
fmuls
jge
and
and
inc
mov
add
mov
cld
stos
dec
popf
lcall
inc
ja
cmpsb
enter
xchg
jns
sahf
push
jb
fbld
shlb
dec
and
popa
repz
xchg
push
mov
in
cli
mov
stos
adc
pop
repnz
jbe
mov
mov
mov
add
aaa
fdivrs
pop
inc
fs
cld
int3
in
fwait
popf
int
fsubs
sub
add
dec
insl
push
int
test
push
ret
sbb
cmp
icebp
pop
dec
pop
pushf
in
xchg
bound
jmp
cmp
lods
inc
bound
or
pop
mov
repnz
xchg
rcrl
addr16
dec
add
jo
mov
imulb
outsb
mov
scas
pop
out
cmp
dec
mov
mov
fdiv
sub
div
add
dec
dec
push
idiv
inc
xor
cmpsl
xor
inc
scas
mov
jmp
mov
or
mov
sub
out
mov
or
push
sbb
fnstcw
pop
fcomi
pop
aas
dec
inc
jmp
and
cli
mov
xchg
pop
inc
leave
inc
pop
or
mov
dec
shll
cmp
jne
leave
xchg
dec
int
xchg
mov
xchg
lods
jae
loopne
cmpsb
fcomps
ja
out
pop
dec
outsl
mov
lea
lret
fincstp
mov
fstps
adc
xchg
inc
pop
sbb
into
aam
das
leave
cmp
and
push
xchg
leave
adc
jno
xchg
lahf
xchg
xor
mov
xchg
push
repnz
xchg
popf
inc
add
cwtl
mov
or
sbb
mov
dec
or
repnz
in
pop
int
mov
dec
sbb
jecxz
jg
ja
pop
aaa
inc
testl
xchg
and
mov
sub
sbb
cmp
mov
dec
or
sub
add
inc
movsb
fmuls
dec
pop
ds
pop
shll
in
popl
xor
mov
mov
mov
test
fnstcw
fldcw
and
xchg
arpl
stc
mov
test
pushf
sbb
daa
dec
and
imulb
push
and
or
mov
xchg
shlb
imul
or
leave
fwait
push
fisubl
lods
gs
dec
das
adc
dec
add
adc
fwait
call
jbe
sbb
fadds
add
mov
xor
es
imul
rcrl
adc
pop
pop
data16
imul
ja
or
mov
sub
pushf
mov
adc
stos
cmpsl
leave
mov
cmpsb
mov
hlt
cmp
mov
xorb
les
mov
jmp
sub
scas
mov
xor
in
shlb
sbb
jg
sahf
rcrb
data16
and
fcmovu
mov
scas
mov
mov
loop
mov
cmpb
sub
fs
fs
not
dec
bound
lds
fs
cli
fs
aas
enter
leave
mov
aam
add
call
fucom
mov
or
loopne
sub
daa
lea
loopne
loop
dec
or
test
rolb
cmpsb
cmp
add
mov
imul
fdivs
in
xchg
adc
mov
mov
cs
jns
jb
sbb
mov
pop
addr16
aam
jp
aam
xchg
lcall
pop
outsb
push
mov
cwtl
sub
iret
or
mov
cmp
xor
insb
xor
mov
lahf
repz
and
lret
repz
dec
mov
out
aaa
clc
mov
mov
mov
add
push
dec
iret
push
rolb
je
cmp
mov
pop
and
add
push
jl
pop
pop
pop
fnsave
out
add
je
aam
subb
popf
push
push
ret
aad
lods
js
test
xchg
fdivrl
sub
int
shll
mov
or
mov
std
push
and
scas
fistl
jne
sub
xchg
lea
lock
jmp
outsb
mov
mov
ss
in
lcall
lret
mov
jae
jne
mov
rolb
mov
sarl
in
repnz
jns
jbe
add
xchg
aad
imul
in
mov
mov
pusha
rolb
xor
loop
inc
xchg
cmp
stos
sahf
ja
mov
std
xchg
and
out
leave
mov
mov
push
js
mov
loope
outsl
pop
jmp
leave
loopne
dec
ud2
xchg
insb
mov
in
and
or
or
in
insb
in
mov
test
test
lods
iret
loope
push
adc
or
mov
repnz
cltd
add
rep
adc
push
sub
jmp
sbb
ja
sub
jb
addb
cld
push
je
push
xor
lock
sub
sbb
and
jle
pop
push
dec
addr16
gs
inc
outsb
dec
cmp
lods
jle
dec
orb
cli
mov
aas
push
xchg
inc
jp,pn
xchg
adc
or
int
pop
jne
cmp
dec
mov
enter
mov
jle
in
cld
mov
in
imul
out
mov
mov
mov
mov
push
pop
jbe
fldcw
and
jae
mov
out
xor
aad
addl
jae
pop
pop
leave
hlt
adc
rclb
test
fbstp
lret
ljmp
add
inc
xchg
push
jle
sarb
adc
xchg
push
sbb
mov
push
notb
cltd
or
mull
mov
ret
inc
icebp
int
cwtl
inc
xchg
out
jmp
adc
dec
in
xor
sub
or
fmull
daa
inc
dec
fists
jns
sub
ss
or
jmp
iret
ljmp
loope
adc
loopne
and
test
xchg
mov
and
jmp
or
pop
std
pop
ljmp
and
xchg
adc
sbb
lret
sub
in
mov
pop
cmp
into
mov
dec
test
sbb
and
xorl
enter
sub
inc
ss
adc
add
cmpsb
jl
stc
mov
in
inc
pop
leave
aam
das
mov
fbstp
xchg
pop
mov
jns
hlt
ds
push
pop
ret
sbb
xchg
test
neg
mov
fmul
sub
movsb
pop
mov
lahf
out
test
nop
mov
sub
cmp
adc
out
movsl
cmp
sub
lcall
dec
shrl
cmp
xor
cmp
daa
jg
roll
pop
cmpsb
js
out
stos
dec
filds
cwtl
dec
jl
out
nop
fdiv
daa
add
or
stos
xchg
push
sub
gs
call
pop
push
xor
movsb
sub
das
aaa
not
ss
xor
std
inc
inc
sub
jmp
xor
mov
xor
sbb
sub
nop
test
fidivl
mov
and
push
adc
loop
incb
push
es
pop
daa
mov
movsb
adc
std
mov
scas
daa
test
dec
lret
inc
notl
test
aad
sarl
js
pop
cld
xchg
jle
xor
adc
int3
xchg
add
fidivl
lock
test
fstps
mov
and
xchg
scas
inc
or
jmp
adc
test
inc
in
pop
testb
call
jnp
sti
dec
dec
cmp
add
iret
divb
sbb
jns
adc
movsl
std
ret
and
gs
lods
xor
mov
dec
addr16
scas
adc
int3
enter
fistpll
loopne
lahf
jns
hlt
call
sbb
nop
push
lds
out
mov
lcall
mov
lea
int3
popf
pop
xchg
fwait
mov
mov
cli
jbe
mov
push
adcl
xchg
inc
pop
insl
outsl
ret
xchg
inc
jmp
adc
sub
sub
sbb
cmp
mov
pop
sub
xchg
pop
aaa
dec
and
scas
js
mov
scas
and
add
push
xchg
je
dec
fwait
inc
out
and
fs
into
sbb
jnp
arpl
xchg
pop
mov
in
in
mov
mov
in
mov
pop
aad
add
or
in
push
movq
mov
mov
outsb
aaa
stc
add
sub
xchg
es
push
aas
pop
js
dec
cs
push
in
lahf
xchg
call
and
pop
addr16
pop
fisubrl
icebp
xor
cmp
dec
sbb
sub
out
mov
cltd
pop
push
push
jns
mov
test
repnz
sti
in
xchg
dec
xchg
inc
pop
test
or
cmc
fdivr
aas
hlt
add
xor
jmp
mov
lods
sub
test
jne
jmp
insb
xchg
sbb
nop
and
dec
xchg
fs
rorb
pop
mov
push
sub
push
leave
and
pop
cmp
cmp
int
push
cs
icebp
jnp
pop
fwait
add
mov
xlat
and
jo
pop
fs
inc
popf
sbbl
mov
pop
shrl
das
pop
push
push
inc
push
test
mov
dec
iret
xchg
xor
sbb
add
movsb
stc
add
push
fdivs
out
sbb
jbe
leave
xor
jb
test
mov
or
inc
or
pusha
outsb
mov
cmp
repnz
mov
aaa
inc
pop
mov
cs
pop
mov
pop
mov
jl
gs
fwait
rsm
push
loopne
pusha
jg
addb
xchg
cmp
or
adc
dec
insl
mov
call
sarl
jne
insb
rclb
and
daa
cmp
push
out
jno
in
xchg
repz
xchg
xchg
push
xchg
cmpb
add
adc
test
stc
cmp
and
js
test
xor
add
scas
out
hlt
mov
cli
lock
test
test
nop
es
test
push
xor
jbe
mov
lds
out
hlt
sbb
fidivrl
ret
fsubs
dec
sbb
ret
and
dec
cmpsb
xor
and
push
pop
sbb
inc
enter
jge
outsl
mov
fildll
pop
in
pop
mov
add
daa
sub
jl
xor
sti
dec
sbb
daa
push
fldt
sub
aaa
ret
sub
cmpsl
jg
rcll
mov
inc
pop
jns
mov
push
idivl
inc
xchg
mov
add
test
cwtl
mov
push
mov
inc
xor
pop
xor
jmp
adc
xchg
notl
xchg
dec
mov
sub
insl
mov
jnp
add
xchg
insl
fdiv
mov
inc
mov
cmp
fsubl
and
inc
out
push
and
addb
dec
stc
pop
add
andb
scas
pop
aaa
fmuls
push
cltd
add
out
loop
lahf
inc
push
imulb
pop
xor
cmp
and
rcll
add
imul
test
and
jbe
std
pop
xchg
sub
test
jne
test
fdivrs
mov
or
ds
int
cmp
outsb
fmull
xchg
lods
mov
mov
mov
and
loope
xchg
push
pop
outsb
xor
push
adc
divl
jmp
mov
jno
mov
dec
xchg
shrb
xchg
arpl
jne
and
test
hlt
mov
inc
xchg
andl
xor
lods
and
adc
hlt
add
sbb
xchg
mov
sbb
sbb
pop
sub
push
repz
in
lahf
and
movsb
pop
inc
in
lret
jle
mov
jl
mov
out
out
subb
add
ror
and
push
mov
lods
data16
fwait
lret
pop
icebp
xchg
aaa
or
test
pop
inc
jl
lret
mov
scas
lcall
adc
pop
bound
or
int3
into
ret
sbb
std
fcmovbe
std
in
inc
shrb
mov
icebp
sbb
imul
push
mov
xchg
cmp
mov
sub
or
cltd
cmp
movsl
dec
adc
arpl
cmpsb
ja
movb
in
movsl
xchg
add
shr
pop
sysenter
add
push
andb
xchg
mov
mov
shl
inc
push
and
mov
xor
ds
jae
je
dec
outsb
xchg
xchg
sbb
shll
xchg
sub
es
dec
pusha
mov
inc
fdivl
ja
jne
jb
lahf
push
xchg
addr16
inc
outsb
mov
in
xchg
es
cmp
mov
add
enter
dec
xchg
mov
inc
icebp
outsb
in
xchg
lds
push
mov
sbb
ss
add
dec
imul
mov
mov
cwtl
fisttpl
mov
addb
shll
aad
lea
jns
mov
sub
scas
rcrb
push
in
shl
sahf
add
inc
and
push
ljmp
test
shrb
or
mov
scas
sbb
xchg
popl
lcall
jbe
dec
dec
pop
jp
scas
xor
shr
mov
dec
push
out
aam
ret
cmp
or
popf
pop
adc
inc
pop
int3
dec
mov
cmp
cmp
vandnps
dec
fstpt
aad
shll
or
add
cmpsl
test
xchg
loop
push
fcmovu
sbb
aad
or
xor
nop
fwait
insl
ss
icebp
mov
data16
push
test
xchg
in
or
mov
xchg
pop
cmp
cwtl
movsb
xchg
mov
mov
adc
sahf
pop
sub
dec
sbb
push
push
xor
jae
pop
mov
pop
cs
cmpsl
xor
xchg
push
sbb
pop
cmp
lds
out
or
push
insl
add
dec
popf
adc
nop
fldl
pop
adc
adc
pushf
push
ljmp
adc
mov
mov
xor
pushf
adc
loope
add
je
int3
xchg
iret
sub
push
lcall
scas
daa
pop
pusha
push
push
cmpsb
movsb
icebp
incl
ret
xchg
cld
adc
and
mov
mov
inc
and
pop
sub
add
pop
xchg
jne
call
test
pop
cmpsb
cli
enter
sub
lea
cmovae
mov
loop
sub
xchg
bound
or
lret
mov
addl
or
dec
mov
sbb
jbe
int
cwtl
sub
jae
je
push
hlt
test
cwtl
xchg
int
mov
nop
test
lods
pop
inc
adc
addr16
cld
or
loop
jns
aaa
jnp
mov
mov
mov
mov
pop
xor
push
ret
or
xchg
xor
push
cwtl
loopne
xor
test
out
mov
rorl
adc
adc
lods
mov
add
lcall
cwtl
push
mov
xchg
pop
inc
xor
adc
out
mov
sahf
lock
cmc
leave
mov
int3
mov
cmp
jo
cmp
imul
mov
out
cmp
pop
rcrl
sahf
ret
nop
mov
inc
cmp
mov
mov
enter
lods
or
shrl
sbb
popa
xchg
test
test
jecxz
fidivrs
mov
subl
out
imul
adc
sub
and
out
pop
jno
mov
dec
dec
cld
into
push
dec
shl
ret
xchg
lods
in
sbb
and
xchg
pop
sub
mov
mov
cmc
jns
leave
push
sub
pop
jns
add
nop
lds
mov
inc
js
add
sti
push
inc
fmuls
pop
popa
lahf
mov
icebp
pop
mov
dec
fisttpll
sbb
xchg
inc
xchg
testb
lcall
jnp
dec
int
cmpsl
jno
ljmp
jecxz
outsb
xor
adc
fisttpl
sub
sub
adc
sbb
lret
mov
mov
stos
push
subl
xchg
stc
push
leave
mov
mov
sub
jle
xlat
push
xor
scas
stc
dec
cmp
sbb
or
test
mov
sbb
pushf
cld
call
lret
cmpsb
lahf
sub
mov
mov
shlb
jb
sbb
xorl
in
aas
jmp
push
adc
xor
popf
sub
sub
outsb
sbb
inc
mov
jae
aam
daa
xlat
dec
sbb
xchg
data16
jg
adc
add
dec
mov
in
sub
movsl
and
aas
fs
push
sub
jb
sti
pop
inc
pop
int
add
icebp
ret
or
xor
dec
mov
push
cmp
mov
int3
mov
jmp
mov
loop
jns
xchg
ret
js
and
inc
arpl
movsl
xchg
push
imul
pop
call
repnz
pusha
mov
add
xchg
shrl
jg
imul
adc
fisubrs
jo
xor
mov
or
test
fwait
movsl
push
rcr
icebp
mov
arpl
sbb
jne
dec
xchg
das
xchg
movsl
xor
jcxz
sub
adc
and
sub
bound
dec
std
mov
les
jle
or
fisubrl
jb
ficomps
sub
outsb
outsl
add
mov
add
jg
mov
pop
iret
std
sub
pop
push
inc
mov
pushl
push
insl
subl
mov
lock
into
add
push
xorb
or
outsl
out
sbb
outsl
outsb
mov
sbb
pop
scas
in
ror
mull
push
cli
stos
mov
jno
mov
dec
mov
cmp
mov
mov
aaa
cmp
mov
xchg
cmp
dec
jg
insl
sarb
fwait
inc
xchg
and
das
push
pop
scas
loop
test
movsl
out
or
xor
cmpsb
or
push
mov
dec
push
test
cmp
bound
scas
adcb
hlt
fisubs
xor
aad
jne
inc
imul
icebp
xor
loopne
insb
ss
pop
leave
rol
outsb
cmp
ss
pop
sub
imul
ljmp
inc
cmp
mov
add
lods
pop
or
mov
jmp
push
std
and
push
test
les
js
adcb
mov
insl
mov
cmp
nop
fildl
mov
cltd
hlt
or
movsl
sbb
xor
dec
test
sub
ljmp
push
pop
xchg
mov
out
xchg
push
mov
loopne
test
xchg
add
xchg
inc
dec
dec
xchg
int3
push
and
adc
or
xor
and
xchg
mov
dec
jnp
mov
jl
xchg
push
mov
jne
fiadds
fldt
lods
lds
push
xchg
mov
pop
and
pop
adc
clc
push
icebp
shr
aam
mov
inc
loopne
cmp
pop
popf
stc
inc
cmp
add
popf
mov
fcmovu
mov
cmp
push
cmp
fmul
hlt
out
push
rcrb
ret
outsl
and
dec
ret
xlat
jne
push
jnp
lcall
jae
js
int
imul
gs
cltd
pop
mov
loop
or
dec
scas
rcrl
ret
mov
inc
rcrl
push
pop
mov
sub
cwtl
pushf
add
jle
jnp
dec
aam
or
jl
jecxz
pop
pushf
scas
jb
ja
in
pop
lea
xchg
pusha
push
xor
ficoml
out
or
push
cltd
and
enter
jbe
aad
add
adc
xor
lds
or
xchg
push
roll
push
pop
out
mov
testl
inc
daa
add
ljmp
cwtl
in
outsb
data16
cmpsl
jnp
cmp
mov
sub
or
je
stc
push
imul
xchg
in
imul
mov
push
mov
loope
int
mov
or
xchg
cmp
mov
jnp
add
das
clc
adc
mov
lahf
and
mov
cmpsb
jno
dec
xor
outsb
fidivrl
sub
out
lea
cmc
mov
test
dec
int
push
sahf
andl
fsubrs
fmul
and
lret
mov
sub
and
sarb
and
in
adc
push
jl
aad
mov
lret
lds
jae
sahf
add
icebp
xchg
sbb
xor
push
std
or
test
jl
lret
shll
stos
fisubrs
mov
aam
mov
mov
lea
sbb
fcomps
dec
cmc
adc
pop
mov
and
aaa
and
adc
mov
pop
sti
jns
xchg
push
test
lcall
fstpt
push
dec
int3
jp
or
cli
push
mov
fld
aam
or
lcall
cwtl
adc
int3
mov
jp
out
push
jae
ret
hlt
push
out
out
mov
jge
xchg
xor
andb
mov
jge
rorb
xchg
inc
add
cs
xchg
add
in
xor
daa
fidivrs
sub
in
pop
lock
xor
or
mov
cmpsl
dec
test
cmpsl
repz
add
mov
into
jge
int
xchg
push
stos
jg
sbb
arpl
adc
fisubrl
push
push
frstor
in
les
insb
inc
jecxz
mov
cmp
sbb
test
das
pop
push
mov
adc
add
mov
push
jg
push
jne
pop
pop
pop
ror
adc
xor
ss
push
clc
sub
ja
pop
js
mov
xchg
out
fiadds
daa
xor
pop
or
xchg
xor
idivl
cld
or
cltd
mov
push
and
push
and
cltd
xchg
pop
xchg
lahf
mov
insl
pop
xchg
dec
stos
in
xor
fisttpll
push
or
mov
adc
adc
pop
sbb
push
add
insl
add
cs
dec
stc
pusha
scas
and
lret
jecxz
les
arpl
test
mov
sub
out
ljmp
fisubrl
pop
cmpsb
xchg
gs
jecxz
pop
insb
mov
and
pop
int3
movq
call
sub
inc
jecxz
cmpsl
fadds
mov
push
ret
add
mov
pop
sbb
or
mov
ljmp
cmc
inc
add
dec
in
jo
jo
jae
orl
push
test
pop
in
int3
dec
scas
add
test
lcall
push
mov
mov
insl
clc
call
pop
rorl
std
push
arpl
bound
out
push
jge
lods
call
out
test
leave
popaw
sbb
das
sub
ret
push
shll
mov
enter
rorb
pop
popa
aam
cld
andl
test
cmpsl
lret
push
push
mov
out
rol
mov
and
adc
xchg
pushf
stos
jecxz
ds
inc
and
sahf
sbb
mov
mov
cmp
je
push
hlt
dec
dec
addl
sbb
int
repnz
in
roll
add
push
roll
int
mov
sbb
inc
xchg
mov
xor
sub
xor
mov
scas
mov
loopne
in
sub
orl
add
inc
jae
sahf
sub
xchg
aaa
xor
fists
sbb
dec
jnp
imul
nop
sub
icebp
add
add
push
inc
inc
repz
outsb
adc
aam
add
mov
test
repnz
bound
add
mov
pop
aas
jnp
js
add
sbb
cs
popa
push
and
sub
xor
outsb
mov
imul
dec
jg
push
cmc
push
xor
fs
jno
repz
fbstp
sbb
sub
pusha
std
ds
popa
sub
pop
push
add
cltd
mov
lret
pop
mov
lret
cmp
mov
or
push
jae
cmp
repz
int3
out
and
lds
jge
lea
andb
sar
jle
popf
aad
push
dec
decl
aas
mov
mov
push
je
push
add
cwtl
adc
les
popa
or
mov
mov
cmpsb
aas
dec
aas
movsl
cmp
mov
clc
sbb
cmp
push
pushf
ljmp
push
fsubr
sbb
adc
lcall
popa
or
lret
push
je
lea
bound
sbb
push
add
repz
mov
lcall
push
jg
cmp
and
int
mov
xchg
testl
test
mov
imul
jae
cltd
sub
pop
dec
adc
push
mov
js
mov
mov
test
popf
xchg
xorb
pop
mov
add
mov
adc
lods
sbb
add
rcr
adc
std
and
xor
repz
outsl
movl
add
lfs
inc
jns
mov
fs
inc
pop
push
orb
lods
dec
rcrl
sub
xor
in
push
fnstsw
adc
daa
leave
and
clc
inc
inc
int
lret
mov
and
sarl
cld
in
fmuls
fwait
into
addr16
jecxz
pop
jno
rcll
loop
inc
scas
lods
xor
mov
and
and
outsl
test
inc
add
frstor
psubb
call
adc
xor
adc
dec
outsb
mov
pop
gs
rorb
ret
mov
lds
mov
pop
pop
lds
cld
push
push
mov
filds
push
xor
rol
loope
add
mov
stc
ss
mov
pop
inc
test
sbb
jp
mov
pop
pusha
fstl
cmpsl
sti
pop
sbb
xor
rorl
mov
adc
pop
mov
push
push
or
fwait
mov
push
shlb
sbb
in
mov
loopne
xchg
repnz
sub
mov
enter
sti
fisttps
repz
arpl
jmp
jne
jl
outsb
daa
es
in
gs
es
mov
mov
sub
inc
xchg
and
pop
mov
pop
std
push
popf
mov
mov
pop
dec
push
or
cmp
push
mov
roll
mov
ret
in
ljmp
shrl
stos
iret
hlt
sar
xchg
sahf
adc
lahf
popl
xor
sbb
sti
xchg
adc
sub
and
sbb
lds
jecxz
add
fimull
cmc
fs
pop
cmp
add
sbb
jg
cwtl
out
sub
cli
data16
data16
cmpsl
ret
xchg
scas
jo
sbb
scas
imul
pop
mov
fnstsw
mov
inc
cmp
cmp
mov
popa
sub
fdiv
xor
jge
sbb
pushf
insb
stc
mov
mov
mov
cwtl
jae
inc
ret
mov
add
jno
lahf
push
cmp
push
mov
xchg
scas
ret
push
dec
test
jbe
inc
lock
loop
je
push
or
fwait
xor
scas
cmp
in
mov
sub
pop
divb
pop
sbb
sti
push
pop
cwtl
cwtl
jl
insl
sbb
or
fcompl
movsl
inc
jne
jne
inc
push
notb
inc
pop
jbe
dec
cltd
popa
add
pushf
cmp
into
adc
jp
aad
inc
ljmp
mov
insl
pop
or
mov
ljmp
fcomps
add
cmc
xchg
lods
jno
lahf
mov
adc
or
inc
ret
mov
lea
inc
sub
xchg
jns
jmp
jmp
xor
enter
mov
pop
fnstcw
std
mov
imul
xor
call
out
xchg
cli
fbstp
pop
push
jae
xchg
xlat
mov
imul
jle
popa
xor
jo
adc
icebp
pop
lret
jae
lds
pop
fisubrs
push
push
xor
arpl
mov
insl
sbb
lahf
shrb
lahf
rcl
push
ds
cmp
or
pop
xor
inc
lods
scas
jl
xchg
je
dec
sub
cmp
mov
xlat
test
mov
int3
add
jle
jge
dec
in
add
mov
lods
faddl
inc
adc
mov
xor
std
xchg
push
hlt
dec
shrb
lret
loope
lods
or
xor
mov
cltd
ret
in
popf
and
aaa
cmpsb
data16
add
sbb
or
pushf
mov
jne
divb
mov
fisubl
pop
pop
mov
push
lret
jo
in
hlt
push
lods
ss
mov
mov
inc
lahf
mov
cmp
inc
call
mov
add
popa
add
fcoml
aas
js
es
xchg
mov
scas
mov
pop
stc
pop
mov
cwtl
mov
and
sbb
addr16
ret
add
loop
mov
xchg
mov
cmpsl
xchg
xor
out
push
push
rcrb
adc
addb
xlat
arpl
add
aaa
cwtl
jb
push
xor
push
je
loopne
cmp
stos
sbb
xchg
jae
inc
call
pop
popa
rcrl
add
inc
mov
ficomps
cwtl
iret
insb
pop
pop
out
sbbl
stc
leave
movsb
push
mov
pop
push
push
cmp
adc
jg
fwait
jmp
sub
pmaxub
aaa
in
mov
sar
lock
mov
pusha
cltd
enter
or
adc
mov
cmp
loop
enter
fnsave
jno
dec
leave
inc
cmp
sbb
jmp
push
in
mov
push
call
mov
jnp
stc
adc
dec
dec
or
std
jl
bound
jl
sub
mov
dec
test
inc
sub
mov
push
or
test
mov
or
mov
int3
in
ljmp
cmp
sub
ret
mov
mov
movsl
cmpl
in
sbb
stos
pop
xor
xor
mov
push
mov
or
xchg
mov
pop
ret
lcall
dec
sbb
or
or
or
dec
idivl
mov
adc
jnp
dec
cmpsl
dec
mov
sarl
inc
out
daa
push
inc
push
push
sub
fucomi
jb
mov
push
or
jbe
sbb
loopne
push
or
repz
dec
icebp
sbb
fisttpl
daa
cmc
push
das
setp
and
cltd
pop
imulb
int
push
xchg
xor
loop
hlt
xchg
adc
sbb
lock
stc
scas
xchg
roll
test
cmp
push
sahf
aad
imull
stos
jmp
or
xor
mov
pushf
xor
out
jl
jmp
cmp
repnz
adc
mov
mov
xor
test
sbb
rcr
pop
fcmovne
jbe
iret
cmp
add
gs
aam
mov
xchg
fs
xor
int3
mov
ret
mov
cmpsl
movsl
mov
sbb
push
bound
test
lea
dec
leave
call
or
into
in
movsl
fnstcw
fs
dec
jbe
cmp
push
sbb
mov
cmp
aaa
lock
pop
in
iret
cld
inc
int
mov
cwtl
outsl
sbb
jmp
jge
outsb
cmp
pop
stc
popf
leave
roll
mov
insl
les
aam
jl
ja
fndisi(8087
sbb
adc
xor
jmp
dec
xorb
xchg
and
sub
fdivr
in
mov
ret
push
lods
popa
fdivrl
mov
xor
jmp
push
decl
add
cli
fimull
dec
adc
stc
lods
add
clc
jns
cmp
stos
push
add
cmpsb
mov
sbb
sub
lds
push
or
inc
mov
push
adc
xchg
das
push
or
aas
mov
fnstcw
xchg
dec
pop
xchg
ss
mov
add
sbb
repz
or
pop
movl
mov
inc
call
jl
or
in
jge
lret
and
addr16
out
adc
inc
lock
add
xchg
std
fst
dec
loopne
mov
xchg
and
adc
xor
mov
jb
mov
mov
dec
fcmove
movsl
enter
adc
mov
ds
loopne
inc
mov
mov
in
test
xlat
je
xchg
imul
sub
scas
lret
xchg
inc
xorl
cmp
push
xor
movsb
mov
pop
in
dec
hlt
inc
leave
push
mov
xor
push
mov
push
mov
dec
xchg
mov
mov
test
das
sbbb
xor
lds
lahf
push
test
dec
rclb
outsb
jno
xchg
dec
xor
aad
je
shll
push
repz
sub
subl
daa
clc
mov
mov
fldl
mov
mul
outsb
add
sbb
fwait
imul
pop
sbb
mov
popa
or
mov
mov
or
cmc
fwait
jl
sbb
stc
les
leave
imul
xchg
iret
mov
sub
dec
cmp
adc
aaa
push
cmc
pop
mov
lret
push
inc
mov
push
xlat
stc
fs
push
stc
andl
fisubs
dec
nop
test
imul
stos
mov
scas
cmp
mov
mov
dec
pop
push
dec
sbb
lcall
and
or
adc
push
dec
xor
test
and
imul
cli
inc
adc
lret
hlt
xor
jle
push
lock
push
bound
dec
loopne
adc
jp
dec
pop
cmpb
mov
pushf
ljmp
idiv
shrl
out
call
dec
imul
xlat
cltd
jae
or
or
mov
mov
add
jge
mov
jo
into
pop
mov
jb
xchg
imul
loop
cmp
pop
xchg
inc
mov
shl
xchg
sbb
pop
or
leave
xchg
xorb
mov
out
fsubrs
cwtl
sbb
mov
mov
cmpsb
lahf
xor
movsl
imul
mov
aaa
mov
and
dec
fistps
mov
cmpsb
inc
pop
adc
jp
or
scas
push
pop
sub
push
movsb
fwait
dec
std
mov
adc
mov
pop
rcr
mov
sub
cld
vpsubb
mov
addb
pop
mov
lods
pop
mov
cltd
push
jle
ljmp
jle
loope
sbb
pop
and
std
jns
ja
ja
arpl
push
cltd
xlat
mov
lret
xor
jns
in
outsl
in
mov
or
add
iret
lret
adc
sbb
shr
stc
xchg
ret
cli
adc
icebp
bnd
xchg
andb
ret
ja
fs
cmp
push
and
in
jne
xchg
cmp
adc
inc
mov
inc
fnsave
out
fldl
call
imul
test
insb
hlt
subb
pop
popa
insb
mov
fsts
adc
mov
cld
stc
push
jmp
xchg
inc
mov
add
scas
dec
cmpsl
dec
pop
mov
xor
lret
movsl
push
adc
ljmp
xchg
push
out
mov
mov
ja
adc
add
or
fyl2x
cld
fistps
faddl
into
mov
push
add
popf
add
lock
jmp
add
shlb
push
sbb
or
scas
call
and
push
inc
inc
dec
xor
and
pop
mov
xorl
push
icebp
adc
inc
lock
shlb
jecxz
dec
ja
insl
push
push
mov
negl
jl
pop
push
lods
fcompp
inc
testl
into
cmp
pop
testb
mov
ret
out
pop
ret
or
add
cli
cmp
sbb
sbb
or
mov
sbb
cmpb
pop
push
mov
mov
mov
mov
ds
jl
dec
mov
mov
mov
mov
or
sbb
jge
mov
mov
movsb
or
in
test
pop
xchg
add
xlat
add
aad
data16
push
fistl
jb
test
insb
xchg
add
mov
adc
cmp
push
mov
jp
jae
hlt
push
mov
pop
fwait
test
out
testl
mull
lods
push
cmp
mov
cmpsl
push
inc
outsl
mov
mov
out
es
divb
adc
adc
ja
je
dec
cli
adc
push
add
leave
push
mov
in
nop
das
or
ret
xchg
push
inc
dec
stos
leave
inc
ret
icebp
lcall
ret
addr16
push
mov
pop
adc
inc
pop
decl
cld
jb
sbb
call
and
mov
cwtl
test
dec
addl
lahf
add
add
popf
cmpl
popa
ds
xchg
shl
xor
aam
pusha
loop
movsb
xor
push
das
sahf
stos
int
pop
xor
fsubl
or
add
inc
xchg
daa
push
sub
add
rorl
xor
icebp
outsl
xor
sub
dec
lea
pop
xlat
add
fsubp
dec
out
test
pushf
or
mov
test
cmp
daa
push
jecxz
jmp
mov
test
movsb
cltd
shll
jecxz
and
and
shr
andb
mov
ret
adc
sub
or
dec
jb
sbb
scas
xchg
xor
mov
loop
push
in
inc
mov
adc
sub
mov
sbb
movb
repnz
fxch
fxrstor
and
jmp
divb
dec
std
pop
adc
pushf
xor
mov
adc
mov
aam
sub
ret
lock
loope
mov
push
sub
xchg
jo
cwtl
arpl
sub
sbb
xchg
mov
mov
inc
stos
xchg
insl
or
push
loope
test
xchg
das
add
adcb
sub
ret
sbb
imul
xorl
pop
sti
inc
push
add
dec
xchg
add
adc
xchg
fcompl
call
push
leave
inc
adc
inc
jmp
pop
out
lock
inc
addb
pushf
pop
jmp
lcall
int3
jmp
sti
inc
int3
pop
mov
rcl
inc
sub
adc
movsl
lds
cmpsl
aam
mov
cmp
cmpsb
nopl
mov
mov
pusha
add
xchg
mov
add
push
sbb
jp
popa
jo
inc
xchg
pusha
dec
xlat
inc
adc
push
lcall
aas
adc
out
out
xor
mov
mov
lock
sbb
fwait
out
fxch
pop
std
lds
and
pushf
mov
sbb
orb
cmp
or
lock
aas
add
sbb
or
ret
sarb
or
or
jno
xchg
or
fisttpll
or
cmp
das
mov
push
rcrl
addr16
adc
xchg
inc
aam
push
push
aad
mov
xlat
out
nop
das
sub
pop
push
sbb
aaa
enter
adc
sbb
dec
xchg
dec
xor
jbe
pop
std
repnz
mov
sub
repnz
or
sbb
push
push
or
enter
xor
movsl
push
scas
imul
cmp
push
push
mov
mov
mov
addr16
mov
add
js
insb
hlt
cmc
and
cmp
adc
mov
xchg
or
fcompl
cltd
inc
psrld
adcl
jmp
add
lods
or
into
aaa
lret
cmp
dec
cld
cmp
cli
push
add
pusha
icebp
out
aaa
push
into
jmp
stos
sub
fdivp
add
add
and
mov
inc
sbb
inc
cli
sub
outsb
stc
repz
stos
push
mov
mov
lods
arpl
xchg
sbb
jge
inc
in
divb
sub
iret
push
mov
inc
cli
rcll
mov
sub
pusha
xchg
or
pop
and
aad
icebp
sub
mov
sbb
xchg
pop
cld
push
je
mov
andb
inc
mov
dec
push
mov
insl
xchg
ljmp
int
stos
cltd
jb
or
pop
or
push
pop
arpl
jmp
test
je
es
jne
and
mov
rorl
mov
dec
cmp
pop
cmp
inc
cltd
ficompl
mov
orl
lods
imul
mov
sarl
mov
xchg
filds
in
mov
in
lods
dec
add
or
mov
inc
popa
ret
pop
stos
stc
in
mov
je
dec
mov
popf
mov
mov
jbe
icebp
and
imul
dec
mov
push
popa
pusha
lret
mov
nop
nop
inc
lea
inc
jmp
and
orb
or
lcall
sub
mov
loop
add
cmp
and
dec
mov
repz
test
sbb
jnp
lods
mov
and
gs
out
dec
mov
lock
dec
jmp
and
mov
stc
dec
or
clc
les
fcompl
movsl
enter
push
push
mov
fstps
imul
push
bound
fistps
mov
cmp
or
aaa
jp
mov
cli
pusha
sub
xchg
loopne
adc
rcrl
and
pushl
push
arpl
pop
testl
add
es
das
fidivs
pop
in
xchg
cmp
mov
mov
enter
clc
mov
sbb
jp
lret
jmp
test
sahf
jnp
lds
mov
dec
in
inc
dec
or
lods
dec
bound
es
or
ja
lahf
aad
mov
and
inc
push
add
or
test
ljmp
mov
dec
push
or
jo
or
mov
jge
mov
es
out
mov
cmpsl
pop
jo
popf
popa
jmp
orb
pop
rclb
jmp
gs
pop
sahf
or
add
jle
out
push
movsl
jno
and
into
es
daa
or
xor
shr
outsl
cmp
xor
lret
add
push
sbb
inc
pop
fdecstp
test
mov
mov
dec
pop
jl
repnz
or
aam
dec
idivl
cmp
loope
dec
mov
ljmp
aaa
or
out
jns
sub
popf
and
cmpsl
out
daa
mov
dec
xor
loop
pushf
lds
inc
ret
add
sbb
lea
icebp
cld
and
imul
neg
fsubrl
dec
sub
sbb
fdivl
pop
sub
inc
push
push
stc
test
ret
mov
mov
aas
rorl
stos
jp
lahf
mov
cmp
adc
xchg
mov
cwtl
adcl
pushf
sub
inc
jp
test
clc
xchg
cwtl
push
pop
and
pop
cli
mov
dec
sbb
and
and
mov
fidivrs
pop
mov
add
int3
loope
sarb
ljmp
test
repnz
mov
xor
fdivrs
xlat
dec
or
es
testl
cmp
add
loop
in
int
mov
aas
vmovddup
sbb
pop
push
movsb
xor
movsb
js,pn
push
xchg
dec
nop
stos
int
aaa
push
push
out
push
push
xchg
sbb
sbb
mov
push
je
push
cld
icebp
cmpsl
cld
insl
adc
fdivrl
push
shl
jecxz
outsb
xor
sbb
adc
xor
and
mov
pop
in
sti
lret
push
push
bound
mov
xchg
out
jb
mov
push
mov
roll
int3
and
cltd
rcrb
mov
nop
inc
cmpsb
pop
cmp
cmc
fbstp
fldl
push
or
ffreep
incb
push
loop
inc
add
push
mov
inc
sbb
outsl
aam
xor
xchg
hlt
icebp
inc
add
cs
mov
add
divb
xor
adc
mov
outsb
fs
add
jmp
xchg
gs
scas
repz
imul
in
mov
ds
sbbb
into
fmulp
sbb
inc
xchg
mov
sbb
sub
xor
sahf
ja
dec
movsb
xor
cmc
inc
push
cmp
lods
movsl
sar
fldt
fwait
aad
in
adc
out
adc
jno
push
mov
or
xor
das
jmp
icebp
imul
push
int3
imul
push
ret
cmpsl
outsl
jno
sahf
adc
pop
adc
mov
jbe
ss
ror
shrb
pop
dec
mov
inc
jbe
int3
pop
fdivrl
dec
fwait
xchg
stc
jge
aad
or
fsubl
cmpsl
int3
cmp
pop
inc
sar
jmp
cmp
call
sbb
or
rolb
cli
shl
lea
add
xchg
or
pop
ljmp
popa
xor
xor
lahf
fisubrs
ret
sbb
mov
inc
or
test
cmp
insl
ja
cmp
shlb
or
pop
or
inc
pop
repnz
imul
cmp
mov
loopne
mov
adc
rol
xor
pop
icebp
insb
mov
xchg
aaa
jns
xchg
lcall
fs
inc
mov
sbb
jp
cld
adc
xor
ss
in
mov
and
outsb
cmpsb
inc
mov
mov
in
out
imul
insb
add
out
pushf
gs
data16
loop
mov
lret
sti
jge
pop
mov
sbb
rorb
xor
test
sub
mov
rorb
mov
popf
jle
fidivrs
je
je
stc
sub
lret
inc
push
imul
and
mov
lahf
cltd
testb
into
mov
sbb
pusha
sub
iret
popf
dec
into
or
inc
mov
pop
lahf
repnz
shll
fidivrl
ret
push
jne
and
push
ss
aas
lds
stos
dec
out
cld
in
std
fimuls
inc
fld
iret
sbb
mov
pop
int3
mov
stos
shl
sbb
lods
lahf
inc
test
fwait
inc
and
add
and
sbb
rcl
cld
or
dec
dec
cmp
std
adc
ds
xchg
sub
xor
shlb
cld
inc
sahf
imul
xor
lcall
push
lea
jp
adcb
aas
enter
pop
pop
outsb
mov
xor
xchg
shl
xchg
xchg
les
popa
push
stos
xchg
mov
xchg
xor
stc
js
add
sahf
push
sbb
and
mov
into
mov
adc
mov
pop
pop
add
pop
imul
pushf
pop
jo
lahf
cld
loop
clc
and
mov
bound
pusha
pop
lods
inc
lds
xlat
in
aas
movsl
mov
nop
mov
rorl
into
jg
scas
arpl
cmp
stc
dec
xor
push
sbb
sub
ret
adc
fwait
xchg
sahf
push
mov
xchg
cmp
jo
bound
sub
pusha
cli
jnp
adc
xchg
push
push
or
lcall
cmc
scas
dec
outsb
mov
jg
imul
and
and
pop
lret
cmp
or
je
pop
sbb
inc
dec
add
stos
push
push
js
int
push
xchg
les
push
or
pop
jg
push
push
push
xlat
test
pop
out
sbbl
incb
les
xchg
mov
push
aad
pop
mov
int
jne
lcall
jecxz
test
mov
jb
cmp
jmp
dec
fcoml
pop
mov
xor
push
rol
out
data16
xchg
arpl
push
xchg
jle
add
je
nop
xchg
xchg
clc
xchg
maskmovq
enter
bound
or
pusha
xchg
adc
mov
lahf
ljmp
sub
hlt
es
sub
push
dec
adc
lock
popf
mov
xor
stos
inc
orl
xor
cmpsl
jg
inc
adc
mov
fildll
std
cmp
xchg
int3
and
test
std
insl
push
mov
pusha
push
mov
pop
imul
mov
mov
push
sub
mov
adc
iret
mov
and
mov
xor
ljmp
stos
popw
jbe
enter
imul
pushf
push
inc
inc
loop
push
inc
add
adc
adc
into
inc
mov
repnz
mov
hlt
mov
jp
enter
pop
ljmp
rcll
out
sub
test
xchg
rorl
xorb
mov
or
fmuls
jb
cmp
adc
dec
mov
jl
inc
add
call
sbb
mov
cltd
jb
mov
xchg
pop
pop
xor
or
ja
push
sbb
outsl
push
test
cltd
xor
push
lahf
xchg
sbb
jb
js
xor
push
sbb
je
push
out
and
jne
sti
mov
mov
in
int
jo
rcr
mov
xchg
rorl
lods
aad
cmp
pop
dec
dec
les
loopne
adc
dec
je
mov
mov
orl
sbb
mov
mov
mov
and
fcmovnbe
pop
js
rolb
scas
cwtl
icebp
xor
scas
sub
call
aaa
mov
adc
and
stc
xchg
jbe
sub
xor
jecxz
mov
fnstenv
loope
mov
dec
ret
aam
or
add
mulb
test
stos
enter
test
adc
fsts
mov
push
dec
aas
test
push
repnz
cmpsb
jb
scas
sbb
mov
pushf
bound
mov
ret
jp
adc
inc
popf
daa
dec
sub
call
dec
scas
aam
mov
push
cmp
xchg
jmp
into
insb
push
mov
jmp
dec
fmul
fstpt
lea
stos
pop
cmp
dec
inc
adc
sbb
sub
icebp
adc
or
stos
popf
inc
mov
mov
fcomps
jg
gs
jp
sub
add
pop
push
mov
test
sbb
insl
dec
sub
jbe
adc
mov
xchg
lret
push
inc
xchg
dec
inc
insb
xchg
cmp
das
sub
or
or
or
jmp
cli
push
stc
mov
jae
sarl
ret
inc
cmp
inc
push
imul
cltd
scas
test
add
pop
cmpsl
dec
pop
gs
outsb
ret
sub
arpl
lret
dec
bound
fwait
stos
push
or
out
into
fsts
sub
pop
fs
scas
mov
lods
mov
pop
cmp
ja
rcrb
pop
imul
mov
fldt
push
push
xchg
mov
roll
fwait
jmp
mov
push
out
testb
sub
jno
imul
mov
fldl
and
mov
imulb
or
dec
lret
fsubrs
test
jns
sbb
and
daa
ja
out
inc
movsl
or
in
mov
jg
dec
inc
fildl
cmp
loopne
mov
fs
cwtl
sub
pop
jmp
pop
add
mov
dec
movsb
cmp
sbb
xor
orl
sbb
cltd
sbb
mov
fimull
pop
arpl
mov
jne
dec
xchg
out
xchg
mov
ret
jno
mov
cld
sti
inc
jge
and
sbbl
or
add
cs
pop
cwtl
jo
aam
into
jecxz
sub
fadds
icebp
lock
dec
inc
std
cmp
mov
pop
push
jge
add
leave
pop
mov
inc
push
push
inc
daa
adc
arpl
dec
add
lods
or
fisubrl
and
mov
mov
jle
jae
xchg
les
fldt
mov
in
pushw
out
mov
ljmp
aad
and
leave
sahf
je
out
mov
or
pop
mov
in
jb
movq
or
jb
pop
dec
jb
pop
jle
sbb
sahf
inc
xor
pop
lock
mov
clc
mov
out
sub
xorl
sarb
inc
or
sub
inc
mov
sbb
add
xorb
cmp
addr16
jns
stos
stos
jl
int3
push
test
dec
inc
xor
jns
mov
push
push
push
jmp
or
xchg
inc
push
add
pop
daa
outsl
iret
adc
repz
adc
scas
add
sub
sbb
std
lret
std
jns
jmp
sbb
aaa
xchg
out
cmp
cmp
negl
and
sbb
lods
adc
and
or
lock
sbb
and
mov
xor
jns
inc
xchg
out
popa
jno
lahf
imul
xor
pop
cmpl
mov
aas
loop
imul
inc
je
daa
lds
or
cltd
js
adc
maskmovq
negl
fdivr
mov
imul
into
mov
cmpb
jbe
cmpsl
and
mov
sahf
xor
xchg
sbb
mov
jne
rclb
testb
inc
and
ljmp
jne
and
pop
cwtl
pop
pop
cmp
addb
arpl
test
bound
cmc
imul
sub
and
mov
psrlq
enter
ret
std
mov
movb
fwait
popa
je
push
jne
jo
stos
add
insb
cmp
lock
test
mov
mov
adc
mov
xor
sbb
dec
xor
xor
push
jmp
sub
and
loopne
xor
jb
fsubrl
and
jno
divb
inc
out
add
pusha
fmuls
nop
or
push
cmc
sbb
xlat
clc
sbb
aam
int
or
fcompl
xor
add
repnz
sahf
inc
adc
push
sub
fwait
add
mov
test
icebp
lock
ss
ss
mov
push
fcoms
mov
pop
dec
inc
mov
jmp
pop
stc
jo
pusha
in
mov
into
test
fsubr
cmp
jp
inc
sbb
add
xor
adc
rcrl
aas
jne
add
sub
ja
outsl
inc
jae
mov
xor
movsb
xchg
jae
sti
int3
adc
enter
pusha
shrl
nop
sub
add
sahf
dec
add
mov
dec
mov
adc
push
lea
mov
or
nop
add
in
mov
int
in
pop
cld
or
pop
mov
into
out
out
fwait
push
cmp
xor
insb
pop
gs
push
dec
sbbb
jle
das
mov
lds
inc
mov
lcall
fldl
dec
into
jle
push
jno
pop
xor
cmp
pop
scas
dec
scas
mov
cmp
and
xchg
jne
mov
fbstp
mov
std
cmpsb
push
aad
mov
divl
adc
into
pop
xor
mov
xchg
jbe
fisubrl
or
inc
gs
cmp
gs
aam
insb
call
push
test
sahf
add
inc
icebp
rcrl
test
aad
adc
cmpsl
mov
push
xlat
stc
into
xlat
sbb
mov
aas
test
jmp
sub
fwait
sub
or
xor
mov
pusha
adc
in
ret
pop
js
sub
fiaddl
cmp
shll
pusha
loop
mov
loopne
movswl
and
mov
dec
push
jmp
pop
push
jmp
xchg
iret
cs
fsubrl
pop
mov
pop
loopne
testb
jne
fsts
cmpsl
loope
cmc
rcll
in
cmc
xor
hlt
aad
xchg
sbb
std
and
idivl
sbb
and
inc
pop
sub
mov
cwtl
mov
inc
aaa
outsl
lock
jecxz
sbb
jbe
fwait
jecxz
jmp
mov
ja
inc
xchg
pushf
or
adc
sbb
dec
mov
jmp
std
xchg
cmp
icebp
ror
pop
enter
les
je
jns
and
clc
loopne
dec
ret
scas
inc
or
jo
mov
cmp
push
dec
fbld
inc
add
ja
mov
inc
dec
lret
jbe
lock
pop
gs
repnz
push
scas
adc
cs
jmp
cmp
inc
and
shrb
mov
aas
pop
test
out
mov
dec
jle
movsl
in
xchg
fnsave
sub
mov
in
mov
cmpsb
je
xor
jg
ja
bnd
jmp
out
lock
and
loopne
bound
jns
mov
imul
xor
adc
inc
push
sub
mov
fadd
push
lods
pop
aad
aam
cltd
dec
mov
push
insb
xor
sub
jmp
push
ret
sti
rorl
mov
cmp
jnp
inc
push
movsl
in
and
cltd
sub
clc
pop
pop
dec
mov
xchg
push
repnz
jno
scas
sub
sub
std
mov
stc
sub
cwtl
test
cmpsb
imul
pop
lock
inc
jl
enter
sbb
inc
rorb
mov
inc
fidivrl
sub
sbb
nop
pop
ljmp
xchg
out
mov
push
lret
cmc
adc
stc
xchg
outsl
jnp
out
push
adc
add
insb
cmp
or
cmp
pop
rclb
loopne
sub
std
jne
in
mov
data16
xor
pusha
dec
cmp
push
loopne
stos
cmp
adc
push
fstl
xor
cmpsb
std
dec
nop
pop
fnstsw
push
cmp
repz
dec
into
daa
out
pusha
mov
jo
and
push
lret
inc
and
loopne
ja
cmc
arpl
sti
mov
data16
leave
leave
lahf
push
lds
push
scas
cmp
sbb
sbb
out
xor
mov
scas
pusha
dec
fiadds
adc
pop
xchg
pop
or
pop
cmc
and
out
repz
inc
sbb
dec
faddl
adc
lret
push
addb
das
fstpt
mov
sub
test
jnp
shll
out
inc
inc
mov
pop
mov
call
sub
mov
ficoms
test
les
aad
adc
mov
out
test
mov
mov
or
insl
idivb
mov
cmpsb
pushf
loope
icebp
adc
push
ret
pop
mov
nop
jecxz
enter
add
shlb
mov
ss
iret
int3
xor
push
test
mov
push
and
adc
push
jb
ret
xchg
mov
test
sbb
insb
push
imul
fldenv
inc
adc
mov
and
fwait
rol
cmp
jge
out
mov
mov
adc
mov
add
test
paddw
inc
pushf
and
ret
fs
test
into
jbe
mov
sbb
sti
jp
psrlw
dec
out
xor
addr16
jbe
mov
hlt
cld
xor
jl
arpl
jns
test
addr16
mov
shll
xor
jns
bound
aam
pop
xchg
scas
int3
mov
pop
mov
dec
and
movsb
outsb
je
and
push
or
inc
dec
pop
mov
or
js
dec
lcall
cmp
xchg
je
push
pop
jecxz
cmpsl
movsl
test
dec
sub
pop
call
shl
fidivl
ret
mov
jnp
out
mov
jl
push
cwtl
mov
fbstp
out
push
mov
sahf
mov
dec
mov
pop
cmp
sbb
lds
fisubs
int3
mov
sub
jge
out
repnz
mov
ret
imul
and
jns
ret
or
cmp
inc
lret
push
push
sahf
sub
pusha
xchg
aas
mov
outsl
rcrl
xor
add
xchg
pop
sub
enter
dec
sub
flds
je
push
adc
mov
aaa
cwtl
sub
push
pop
mov
lret
notl
cmp
int
xor
psubw
sbb
xorb
sbb
bswap
mov
int
push
sub
aam
hlt
push
sub
in
add
pop
sub
int
jbe
xor
jb
mul
mov
fidivl
mov
dec
stos
out
pop
fs
outsl
sub
xor
xchg
jmp
mov
or
popf
cmc
lods
aam
aas
sbb
add
test
loope
adc
testb
inc
cli
int3
movsl
jecxz
fidivl
shlb
pop
shrl
popf
stos
fsubrs
and
sahf
and
pop
ljmp
push
xchg
cwtl
in
inc
fsubrl
mov
insl
add
div
dec
mov
xchg
movsl
jl
bound
mov
jb
xor
mov
icebp
sbb
jnp
jb
push
std
xor
adc
jae
out
imul
pushf
dec
inc
stc
out
and
popa
sub
test
pop
sti
rolb
adc
or
negb
or
dec
int
inc
add
aam
jecxz
inc
je
imul
or
jne
mov
push
les
sti
dec
jg
leave
sarb
test
and
addr16
test
into
adcb
xchg
cld
dec
mov
jl
dec
mov
rcll
jae
pop
xchg
mov
fidivl
fwait
lret
mov
mov
es
pop
and
lahf
je
xchg
lods
and
hlt
ja
cwtl
pop
int3
push
push
or
iret
pop
out
push
pop
mov
mov
nop
or
push
mov
xor
dec
mov
xor
pop
mov
roll
test
hlt
or
sub
push
jne
or
rclb
aaa
test
jge
jnp
addl
xchg
cmp
mov
cltd
cmp
jp
mov
mov
shl
in
pop
insb
movsl
cmp
push
test
cmp
sti
jbe
add
ror
xchg
fistl
jg
je
push
inc
fstpt
cs
sbbl
fmuls
lods
cmc
ds
in
ljmp
pusha
bound
insb
in
mov
imul
je
adcl
das
add
add
mov
dec
repnz
shll
jae
lcall
ret
inc
cmc
nop
mov
fistpl
and
sbb
dec
xor
lcall
aam
pop
jmp
push
les
mov
mov
push
push
and
adcl
popf
push
mov
adc
outsl
incl
jmp
lods
loop
loop
adc
adc
mov
iret
pop
mov
in
mov
jmp
mov
add
mull
jmp
and
adc
mov
inc
adc
jmp
cmp
pushf
jne
xchg
push
fisubl
mov
out
scas
cmp
jae
xor
shrl
mov
out
ss
and
ja
push
iret
ds
sti
ret
ljmp
sub
ret
add
mov
lea
imul
aaa
sar
addl
pop
lods
iret
or
lods
and
jg
lea
lds
adc
push
sub
outsb
outsl
negl
pop
pushf
or
push
sti
xor
inc
mov
or
shr
ss
js
mov
mov
mov
fidivs
dec
inc
mov
cmp
pusha
push
out
fcomi
xorb
sbb
cmp
push
out
fidivs
ficoml
in
jno
popf
out
sbb
mov
js
mov
stos
negl
jns
je
sbb
inc
orl
loopne
dec
pop
sub
mov
adc
and
pop
cmpsl
fdivrs
aam
push
in
jae
xchg
ljmp
movb
xor
jae
dec
inc
es
push
lods
loop
lds
xchg
fbld
lods
xchg
push
mov
pop
and
mov
mov
xor
pusha
lahf
repz
sbb
ret
sub
add
push
shlb
std
sti
push
jae
hlt
lods
or
push
daa
mov
scas
jnp
inc
jo
outsb
in
add
mov
sbb
or
xor
push
xchg
ljmp
jno
insb
scas
cmp
jne
std
mov
jo
mov
mov
mov
aam
test
jb
into
push
add
or
xor
cmp
adc
pop
pusha
sub
test
clc
inc
mov
mov
inc
xchg
nop
xor
xchg
insb
shll
sbb
les
xor
out
inc
int3
sub
scas
inc
aas
xchg
jmp
mulps
lret
ret
in
xor
jl
cltd
mov
fcomps
rclb
addl
pop
scas
push
jl
push
sub
sub
and
fsubl
cmp
clc
jecxz
ret
inc
mov
mov
mov
enter
adc
lods
pop
xor
sbb
scas
icebp
push
cmp
call
add
push
jle
push
add
cltd
gs
fsubrl
dec
in
hlt
cltd
fiadds
jns
dec
arpl
xor
out
std
fidivl
in
sub
daa
fs
push
pop
jbe
sbb
stc
shll
mov
scas
hlt
jl
aaa
xchg
sbb
idivb
insl
xor
pop
repz
notl
es
mov
mov
mov
je
ss
jae
sub
cwtl
cld
inc
xor
xchg
jmp
orl
fs
xor
in
clc
pop
xchg
sub
addr16
incl
xor
dec
cmp
inc
add
add
ret
cmp
imul
pop
xchg
addr16
outsl
add
insl
fwait
out
aaa
cmpxchg8b
out
sahf
imul
iret
das
ja
xor
pop
cmpsl
outsb
popf
out
inc
xchg
push
xchg
sbbb
cvtdq2ps
xor
mov
pushf
int3
adcl
mov
and
imul
xchg
xor
addr16
sub
jg
subb
outsb
loope
insl
inc
insb
das
and
loopne,pt
pop
ljmp
push
sbbl
jae
leave
pushf
pop
mov
jg
aam
out
xor
lea
adc
enter
dec
ret
mov
cltd
inc
inc
rcrl
mov
ljmp
xlat
and
add
ret
nop
mov
jg
dec
nop
out
dec
xor
int3
cmp
cld
test
test
shrb
pop
daa
pusha
ljmp
call
adc
pushf
push
dec
mov
aas
and
cwtl
xor
lahf
mov
inc
testb
iret
pop
es
scas
pop
shl
pop
add
dec
loope
cmpsb
fstpl
stos
nop
pop
lret
pop
inc
aaa
idiv
push
add
test
xor
shrb
cmp
adc
mov
or
push
fimuls
mov
mov
push
lahf
mov
mov
ret
les
lods
add
test
pusha
test
lret
dec
or
lods
ljmp
sub
push
ss
push
ss
jp
mov
fsubrs
sarb
cmp
cmc
adcb
xchg
dec
cmpsl
and
jecxz
and
pop
push
push
add
ja
pop
adc
sub
push
mov
leave
fdivrs
jmp
pop
insb
push
pop
scas
negb
and
xor
call
inc
dec
enter
daa
dec
ds
mov
mov
xchg
mov
jno
push
into
es
mov
sbb
bound
push
notl
or
dec
mov
cli
mov
movsb
xor
mov
enter
inc
mov
mov
gs
mov
mov
mov
popa
jecxz
out
ret
pop
or
mov
mov
push
push
push
and
dec
pop
xor
ret
pop
jo
mov
testb
ljmp
enter
adc
call
sbb
jg
stos
aam
ss
xchg
pop
lret
imul
jmp
mov
xor
lods
mov
rclb
rcrl
adc
arpl
cmp
xor
test
adc
pop
out
idiv
daa
addr16
cmp
cmpsb
jmp
test
pop
mov
mov
cmpsb
fisttps
lods
sbb
ja
ror
shl
stos
and
packuswb
add
lea
xchg
adc
cmp
ss
and
xor
cmp
test
sar
das
jae
ret
mov
sbb
cmpsb
dec
mov
dec
dec
mov
daa
mov
dec
jle
aad
ds
mov
fldenv
addr16
rcrl
jle
adc
cwtl
pop
pop
push
ljmp
pop
js
or
insb
daa
add
notl
cmc
ja
ret
mov
inc
dec
and
lock
mov
mov
xchg
sub
in
in
enter
pop
push
add
imul
fidivrl
push
test
lea
mov
sbb
sbb
inc
xor
or
mov
pushf
push
in
add
sar
mov
rcrb
std
clc
rolb
adc
aaa
out
pop
sub
hlt
pop
pop
nop
add
xchg
pop
loope
pop
lds
inc
mov
lret
addr16
gs
cmp
push
xor
test
ret
xchg
xchg
mov
outsb
mov
pmuludq
enter
fistpl
out
rep
sbb
add
aaa
dec
aas
mov
adc
ss
lret
push
sub
stc
pop
out
hlt
pop
insb
pop
inc
mov
pop
xchg
test
cwtl
sub
ret
add
sbb
adc
mov
mov
mov
xchg
les
and
cwtl
xor
cwtl
out
mov
xchg
jl
mov
or
pop
xor
mov
lea
ss
repz
sub
add
das
les
mov
jno
out
sub
mov
jno
ljmp
cmp
fiaddl
insl
and
mov
push
xchg
flds
xor
xchg
std
bound
loopne
mov
mov
shll
mov
sbb
jns
fiaddl
jecxz
xchg
cmp
mov
xor
scas
stos
scas
dec
dec
fcomp
cmp
cmp
cmp
out
xchg
mov
xor
xlat
pop
iret
sbb
mov
popa
js
roll
mov
jmp
sahf
pop
inc
pop
nop
push
or
cmc
jb
mov
inc
in
rol
sarb
xor
stos
lods
repnz
outsb
pop
ds
adc
or
fwait
inc
faddl
subl
jno
test
push
call
mov
nop
pop
les
mov
lods
imul
mov
jp
lret
fdivrl
cmp
mov
push
imul
xor
push
pop
push
fs
lcall
mov
fdivp
fidivrs
inc
cmp
stos
push
outsb
dec
jae
lods
and
inc
pop
pop
pop
mov
pop
pop
dec
and
in
pop
pop
pop
inc
fcomps
dec
sbb
jp
fidivrs
out
test
xchg
add
xchg
in
imul
adc
push
std
sub
and
jl
sub
cs
stc
fistpll
test
or
out
jo
fildll
aas
inc
xchg
cli
inc
in
std
dec
cltd
test
pushf
fldenv
pop
ja
mov
data16
ret
insl
std
adcb
xor
leave
pop
inc
push
inc
adc
inc
mov
push
mov
movsl
inc
push
cmp
das
xchg
cmp
inc
and
fcompl
mov
dec
js
daa
cmpl
add
pop
cwtl
addr16
xor
lcall
loopne
xorb
jge
xchg
adc
int
dec
sarb
imul
jmp
push
iret
pusha
add
xchg
shl
pop
test
mov
mov
pusha
xchg
call
push
test
cld
inc
test
hlt
add
sub
daa
nop
mov
push
mov
push
and
jg
pop
xor
fstp
jmp
mov
bound
fiadds
nop
adc
mov
addb
out
loope
inc
shl
daa
jle
inc
scas
movsl
bound
shll
arpl
xor
mov
xor
xor
in
and
loop
gs
fs
arpl
rorb
scas
lods
ficoml
in
lret
xchg
push
lea
fnsave
pop
mov
inc
ss
cwtl
mov
dec
sbb
mov
or
and
data16
ja
add
push
int
xor
in
dec
call
dec
shll
cmp
daa
or
movsb
and
jle
mov
mov
mov
daa
lcall
pop
popa
nop
ja
xchg
cmp
fsubrl
and
outsl
xchg
pop
ds
xchg
aad
sbb
mov
push
in
clc
cs
pop
add
xor
xchg
adc
call
in
or
xchg
push
icebp
jg
push
jp
int3
ja
mov
jo
stc
mov
xor
mov
loopne
dec
mov
mov
xchg
loope
fdivrs
mov
inc
mov
or
shrl
out
iret
fsubrs
sub
mov
adc
and
sbb
cmc
flds
xor
mov
xlat
inc
cmpsb
data16
int
out
cmp
icebp
mov
dec
rolb
clc
dec
lfs
sbb
push
dec
repz
aaa
leave
popa
cmp
pop
dec
shl
hlt
pop
test
mov
pop
mov
cs
push
sub
mov
jno
jns
sub
mov
jne
and
adc
test
insl
pop
lea
add
std
test
data16
cmpsb
jne
lea
lcall
out
dec
out
ljmp
addr16
and
adc
das
sub
dec
push
mov
push
andl
xchg
lods
sbb
mov
push
fptan
int3
mull
int3
add
in
pop
enter
nop
mov
out
scas
in
into
das
jp
lret
ljmp
xchg
mov
jae
int3
adc
negl
jo
sbb
pop
jne
fcmove
add
stos
and
scas
adc
dec
das
ficompl
adc
daa
xchg
sbb
lcall
aad
rcrb
cmp
mov
jns
dec
adc
inc
pop
orb
fstl
adc
pop
mov
jmp
fdivr
inc
sub
nop
gs
mov
push
sti
std
jge
ret
inc
sti
sub
andl
fsts
ja
pushf
xor
test
aam
out
cmp
pop
mov
adc
mov
into
aam
mov
adc
jnp
pop
push
mov
or
movsb
push
ss
sti
test
xchg
fadd
add
jbe
int3
adc
or
jae
insl
shll
out
sarl
xor
mov
jge
mov
jbe
lret
gs
stos
mov
xor
leave
xor
sarl
mov
std
out
out
xor
mov
sub
movsb
cmp
mov
push
mov
cmp
test
cld
push
loop,pt
mov
pop
xlat
mov
xor
out
call
mov
sub
and
ss
call
or
iret
mov
xor
mov
sbb
test
imul
pop
cmp
mov
mov
jl
lcall
dec
loope
mov
fnstsw
jb
hlt
lret
stos
add
call
cs
out
cmp
push
in
mov
dec
in
std
push
dec
add
push
mov
lahf
push
lret
out
mov
mov
arpl
mov
outsl
lock
sub
sub
and
arpl
lea
push
sub
lahf
cli
fidivl
xchg
pop
cmpsb
mov
push
sbb
negb
xchg
adc
or
mov
dec
aad
cltd
add
nop
mov
scas
cmp
shl
stos
lret
das
sub
mov
aad
in
mov
cltd
rorl
into
stc
std
das
mov
push
adc
or
mov
inc
fisttpll
repz
mov
insl
insl
aad
shll
sub
stos
insl
out
clc
test
addb
dec
mov
lea
rcll
loope
mov
xor
mov
pop
lea
and
daa
out
add
cmp
fdivrs
into
jae
gs
arpl
daa
xlat
jle
out
into
sbb
mov
mov
xor
inc
inc
addw
dec
mov
stos
xchg
sarb
pop
xor
out
sbb
inc
pop
dec
xchg
shrb
xchg
out
xchg
loop
and
mov
loope
rolb
cmp
outsl
adc
sub
mov
outsl
lods
cmp
int
cmp
mov
daa
test
enter
or
mov
jle
sahf
adc
mov
in
xchg
mov
mov
insl
push
js
mov
insb
bnd
outsl
pop
dec
out
fstps
rcrb
in
adc
out
fcoms
das
pushf
filds
andl
and
or
dec
rorb
out
mov
push
xchg
int
xchg
mov
out
fs
or
lods
dec
jno
inc
pop
xor
and
dec
in
fwait
lock
ret
into
int3
mov
sti
fisubrs
nop
adc
int3
jb
mov
mov
mov
daa
add
lahf
inc
cmc
mov
in
lret
sub
daa
out
jl
scas
int
testl
rcl
push
add
sub
pop
mov
lods
sub
mov
mov
sub
aaa
xor
lahf
push
aam
jmp
pop
test
cmp
xchg
jmp
inc
test
sbb
shr
cmpsl
filds
or
aad
ret
scas
adc
lret
leave
push
pushf
inc
add
pop
iret
add
psrad
repz
jnp
jnp
xor
or
inc
lahf
inc
adc
mov
xchg
mov
and
popf
leave
jbe
iret
or
dec
insb
sbb
push
popa
pop
add
inc
out
lahf
cmpsb
xchg
push
out
incb
jae
aad
mov
mov
pop
sub
ss
aam
and
and
ljmp
aam
mov
movsb
dec
xor
mov
push
lcall
jae
pop
hlt
xchg
testb
rcr
cwtl
mov
outsl
sar
and
clc
inc
jp
push
cld
fwait
mov
sar
dec
adc
aad
fildl
mov
test
cmpsl
dec
enter
mov
adc
andb
sahf
xchg
mov
jo
imulb
sub
lock
xor
add
test
jmp
fwait
addr16
sub
arpl
push
mov
sub
jno
and
jle
mov
xor
adc
push
xor
lds
sbbl
rorb
jg
mov
add
cld
mov
pop
repz
inc
ror
ret
jns
out
ss
out
mov
lahf
in
mov
jle
in
xchg
mov
aas
mov
in
add
cli
es
iret
cmc
dec
jne
repnz
cmpsl
mov
adc
lock
xor
iret
pop
cli
stos
mov
jne
sbb
out
jo
sub
push
push
cmp
les
out
push
sbb
adc
and
dec
sarl
dec
mov
dec
lahf
xor
adc
fs
leave
mov
sahf
mov
cmp
int
mov
mov
mov
cmpw
sarb
xchg
fwait
popf
inc
outsb
mov
std
add
mov
xor
xor
mov
out
out
and
movsb
dec
sti
outsb
aad
cmc
xchg
mov
inc
aas
jmp
add
jb
fisttps
data16
aam
sub
test
push
adc
sub
mov
in
mov
insb
imul
mov
inc
and
xor
dec
into
xchg
lock
test
sahf
xor
out
sub
or
out
clc
fimuls
inc
jecxz
sub
pop
jmp
cmovs
push
iret
cmp
js
xor
pop
xchg
lods
add
jge
push
add
nop
fs
lods
mov
inc
nop
aad
imul
mov
lahf
and
push
sbb
js
pusha
std
jae
fists
xchg
adc
mov
js
push
or
insb
push
imul
in
enter
push
test
fidivs
popa
leave
cmp
scas
in
cld
lods
ja
add
lods
mov
mov
push
dec
loop
cld
cs
cmpsb
mov
fists
mov
pop
dec
je
push
insb
fsubrp
aaa
js
int3
test
fwait
cli
stos
or
jge
push
pop
sub
cmp
xor
lahf
push
clc
cmpsb
cld
xor
test
jmp
push
mov
xchg
xchg
sub
sub
jecxz
fldt
dec
mov
dec
push
insl
aad
addl
fstl
dec
out
repz
insl
ss
jno
repz
repnz
jmp
jge
sub
das
xchg
test
mov
xchg
add
scas
and
xor
nop
jge
xor
mov
in
push
data16
mov
test
movsb
inc
pop
mov
add
cwtl
out
inc
jns
fdivs
cmp
cmp
adc
pop
push
mov
arpl
xchg
pop
lea
and
adc
ja
fwait
sub
lret
loop
aam
arpl
out
mov
lret
ja
rclw
lods
dec
das
dec
cltd
scas
jno
incb
push
mov
xor
sub
or
stos
cmc
es
mov
mov
mov
aaa
cld
cltd
shlb
inc
mov
fwait
xlat
sbb
je
or
out
in
xchg
sub
aad
xor
jno
les
push
xchg
or
pop
pushf
mov
inc
add
lock
das
enter
fiadds
fs
mov
pop
andl
pop
lret
xor
sub
dec
dec
adcl
add
ljmp
xchg
pusha
add
xchg
lods
mov
out
cmpsb
jle
jne
pop
in
cltd
push
and
movsb
in
or
sbb
add
xor
test
pushf
sub
xor
sbb
cwtl
jae
xchg
dec
sbb
test
inc
sub
test
or
mull
test
mov
test
inc
push
sbb
mov
jno
testl
in
mov
lahf
mov
aad
ljmp
lcall
nop
push
icebp
daa
in
dec
ss
xchg
cmp
mov
push
rcll
sub
mov
int
adc
enter
leave
inc
ficompl
xor
jbe
sbb
out
ret
pop
movb
dec
dec
push
cwtl
je
loope
fmuls
mov
movsb
repz
ret
jl
or
pop
stos
jl
popf
jns
bound
fmul
gs
or
sub
jb
sarb
xchg
mov
pop
imul
rclb
enter
les
movsl
repz
adc
loop
icebp
mov
mov
enter
xchg
adc
movl
cli
mov
sub
hlt
mov
dec
mov
imulb
lahf
and
scas
lcall
jge
sub
jg
movl
mov
sub
jns
or
push
mov
mov
inc
xor
add
jle
inc
dec
jbe
divl
fisubs
imul
in
sbb
cmp
cli
stc
jge
cmp
dec
inc
adc
mov
stc
shrb
arpl
sarl
stc
adc
inc
and
stos
or
pop
adc
jmp
add
mov
push
cmp
je
and
call
and
into
dec
fisttpl
xor
insb
pop
pop
ss
push
mulb
push
pop
mul
mov
xchg
loope
shr
add
push
cmp
sub
in
xor
dec
pop
scas
shll
call
idivl
sub
shlb
popf
sbb
mov
and
xchg
jns
adc
lds
cmp
stc
orps
jp
xchg
mov
rol
inc
cmp
ds
aas
mov
faddl
mov
in
cmp
lcall
jae
fidivrl
mov
dec
push
pusha
mov
sbb
xchg
cmp
inc
stos
imul
out
and
xchg
adc
cmp
mov
fs
loope
sbb
cli
add
fstl
cmp
test
movsl
cmp
loop
fstpt
and
test
jae
loopne
xchg
ljmp
cmp
out
add
mov
inc
in
ret
imul
cmp
cwtl
or
cltd
adc
loope
pop
pop
sti
sbb
test
movb
rcl
and
mov
cmpsb
daa
int
mov
cmp
and
sti
mov
ljmp
rolb
aam
stc
or
or
pusha
rcll
dec
push
sub
sbb
pusha
icebp
xchg
les
or
xor
pop
jnp
push
mov
sub
das
divl
dec
les
sahf
cmp
ss
test
fs
pusha
jns
jae
jno
out
xchg
in
inc
lcall
add
jl
cmp
mov
mov
lock
daa
sbb
nop
add
or
xchg
sbb
scas
out
adc
xor
push
inc
cmp
mov
jp
mov
mov
fiadds
fsubrl
in
adc
sahf
xor
mov
lea
xchg
lods
icebp
push
dec
scas
jns
sub
repnz
movsb
repnz
sub
dec
lock
add
sbb
cmp
sbb
mov
imulb
xchg
mov
jns
inc
mov
jg
xlat
in
jge
cmp
test
xor
addr16
cli
push
test
sbb
or
sbb
repz
sbb
sti
pop
ljmp
add
test
push
jb
ja
xor
cmp
and
fcomp
aaa
sub
sbb
outsb
push
or
adc
scas
jg
enter
xchg
xor
jne
sahf
sub
xor
cmp
xor
mov
test
stos
pop
xchg
mov
xchg
sbb
fsubs
xchg
out
add
sub
inc
xchg
ljmp
mov
mov
int
scas
mov
xor
push
fldt
imul
jl
fsubl
sub
mov
pop
xor
call
imul
or
movb
out
addr16
mulb
mov
cmp
mov
adc
sbb
rolb
jecxz
inc
dec
daa
stos
inc
mov
outsb
test
inc
pop
leave
pop
jmp
sbb
arpl
cld
add
movsb
out
and
mov
mov
add
inc
lcall
pop
imul
lahf
fwait
add
shrl
dec
inc
inc
xor
dec
std
dec
mov
pop
sbb
lock
dec
loope
jno
mov
add
inc
pop
movsb
arpl
sub
sub
add
mov
fxch
out
xchg
sub
xchg
push
mov
dec
mov
in
imul
cmp
popf
in
dec
daa
loop
fists
sbbb
push
push
shrb
pushf
in
std
popa
movsb
jbe
dec
mov
cmp
add
outsl
sbb
sub
inc
outsl
jecxz
int3
cmpb
xor
sub
jg
hlt
ret
rclb
push
adc
fwait
and
mov
repnz
mov
push
push
dec
std
outsb
adc
lret
shlb
push
inc
ds
add
mov
pop
popf
sub
or
cmpsb
mov
cmpsl
lock
ljmp
out
adc
mov
popf
xchg
inc
pop
mov
adcb
mov
push
sbb
cmpsl
ror
xchg
push
dec
cmp
cmp
or
ror
adc
test
sub
nop
xchg
mov
outsl
sbb
orb
ds
or
loopne
imul
mov
lcall
fidivrl
jge
in
xchg
mov
lcall
add
or
shll
jle
cmp
sub
aam
add
lret
mov
ret
xchg
push
push
sbb
aad
int3
inc
inc
jp
sub
in
jp
sbb
jno
call
cmp
shlb
or
shll
cmp
inc
dec
fstpl
xor
je
cmp
shll
pop
shll
ja
inc
push
jecxz
out
or
mov
add
jno
pop
mov
addb
out
mov
pop
and
roll
lcall
xor
xchg
icebp
lret
sbb
jns
adc
add
in
push
mov
popf
outsl
mov
js
bound
push
push
dec
into
inc
sbb
in
loop
cmp
popl
or
xchg
sub
sub
mov
daa
or
mov
jle
imul
adc
adc
cli
lods
sub
frstor
out
out
sbb
pop
add
loop
xchg
fldcw
fldenv
sbb
rol
mul
jl
fidivs
loop
bound
stc
outsl
sub
stos
dec
out
push
shrl
ret
rcrb
in
add
push
fdivl
or
pop
adc
popa
mov
mov
push
xor
lahf
mov
test
int
cs
and
dec
add
addr16
push
ja
loope
push
and
xchg
cmpsl
ja
stc
ret
add
fbld
test
add
jge
pop
mov
or
jae
repz
jmp
cmp
jmp
push
insb
stos
pop
sub
dec
push
push
xchg
xor
sbb
addr16
dec
dec
push
movsl
push
dec
push
jb
mov
test
and
xor
sahf
and
sub
mov
and
push
addr16
mov
scas
pop
mov
sti
inc
push
pop
fnstsw
xor
repnz
mov
outsb
fisttps
ss
mov
addb
pop
xor
push
idivl
jns
std
mov
add
fdivp
pop
rcl
add
xlat
mov
mov
fistps
jmp
decb
pop
or
jno
fiadds
lods
into
jp
enter
cmpsb
shlb
js
pop
or
test
stos
or
stos
push
iret
inc
mov
adc
scas
loope
pop
lds
rorl
rcl
test
cmp
add
movsb
adc
mov
test
pop
jae
call
fnsave
cmpsb
adc
jo
adc
es
push
cmpsb
test
mov
mov
dec
imul
mov
mov
mov
lea
inc
divb
lock
pop
jl
cltd
loope
mov
cmpsl
adc
mov
fimuls
pop
xchg
cld
xor
or
push
push
jge
dec
pop
dec
sub
cld
push
dec
insb
adc
or
fdivrs
fwait
inc
mov
mov
clc
jnp
rorl
inc
notl
mov
xor
fsubl
push
xchg
rolb
xor
std
fisttpll
in
icebp
enter
call
and
fisttps
daa
jl
insb
push
cmp
rorl
insl
jae
mov
fistps
mov
mov
cmpl
mov
xor
punpckldq
inc
mov
sub
xor
xor
sarl
ja
repnz
out
xlat
rol
jecxz
ss
lcall
xchg
in
clc
jp
mov
inc
dec
cmp
cwtl
add
lds
iret
test
loope
out
mov
out
push
test
gs
cmp
outsb
jge
fistl
shlb
iret
lahf
movsl
add
or
push
int
into
das
jnp
add
pop
cltd
icebp
push
gs
push
cmp
add
cltd
test
or
arpl
xor
in
mov
add
mov
aas
add
push
adc
or
imul
push
outsb
mov
xor
push
mov
rolb
jg
cmp
pop
mov
fcmovb
add
lock
hlt
cmpb
add
ds
loop
sub
jo
mov
add
jge
data16
adc
dec
xor
mov
fcmovu
mov
testb
jmp
aaa
push
push
stos
data16
fnstcw
pop
cmc
or
mov
lds
andl
popf
loop
adc
pushf
jg
mov
xchg
add
test
inc
add
sbb
stos
jg
mov
std
pop
scas
dec
push
inc
fs
xor
test
push
std
nop
fmull
jnp
in
adcb
cmpsl
push
fcoms
sub
sbb
fs
sti
xchg
jg
pop
xor
pop
scas
inc
push
aas
lods
dec
dec
sub
xchg
lds
mov
xchg
leave
or
dec
mov
sbb
loop
ljmp
fdivs
mov
sub
addb
lods
lret
sbb
cltd
pop
cltd
pusha
mov
mov
and
cmp
rclb
shll
or
xchg
lcall
out
xor
xchg
iret
out
aam
and
xor
mov
jno
inc
leave
mov
mov
pushf
movsl
xor
leave
notl
aas
sti
pop
jo
xchg
mov
sub
inc
iret
jge
insl
cli
add
test
bound
add
leave
ret
cmp
pop
test
jns
push
fisttps
add
pop
inc
and
push
push
push
ljmp
out
insb
loopne
xor
es
out
icebp
dec
push
pop
add
mov
cvttps2pi
mov
aam
subb
xor
fldcw
pop
push
xorl
ret
fwait
xor
lods
dec
mov
jmp
sub
xchg
popa
push
lcall
loopne
jle
or
sub
movsb
xchg
add
movsb
popf
outsb
ds
push
je
sti
dec
ja
or
jno
std
xchg
xor
insl
out
pop
mov
sbb
arpl
push
mov
decb
pop
jmp
shl
jne
mov
pop
jl
sar
shlb
gs
outsb
orb
cmp
gs
iret
xor
scas
clc
adc
inc
shl
cli
xchg
sbb
pop
cmp
sbb
scas
xchg
push
leave
popf
test
mov
call
inc
or
mov
mov
mov
adc
mov
leave
sub
inc
scas
pushf
js
sub
adcl
insl
loopne
inc
addr16
js
mov
and
popf
mov
jb
jmp
push
sub
outsb
mov
cld
sub
test
sarl
and
add
pop
add
inc
int3
sub
xchg
xchg
and
mov
jecxz
out
gs
xchg
push
xor
push
xchg
xorl
or
xor
ret
cmp
cmp
sbb
jbe
insl
ja
call
adc
leave
repnz
scas
in
lcall
jmp
cli
fsubrs
sbb
fstpt
stc
lcall
cmpsl
imul
sub
ja
lods
outsl
ja
sbb
mov
fidivrl
movsl
fwait
pminub
adc
out
fstl
mov
loop
xchg
jbe
loopne
add
sbb
jp
fwait
cmpsl
loop
add
movsb
xchg
insl
fs
and
roll
testb
imull
push
sbb
lock
push
rclb
sbb
lods
pop
sub
xor
or
cwtl
xchg
out
mov
add
pop
sub
add
xor
xchg
and
out
push
stc
mov
sbb
sub
adc
mov
stos
pop
and
ret
aad
cltd
add
mov
out
cmp
mov
arpl
daa
add
and
loopne
xlat
sbb
dec
test
adc
into
pop
mov
xor
mov
add
out
push
push
call
add
mov
inc
in
jb
cmpsb
sub
out
outsl
mov
cmp
in
cmpsb
sti
pop
iret
div
pop
popf
dec
push
mov
jmp
mov
push
jmp
arpl
add
dec
cs
or
test
sub
fcom
sub
daa
adc
push
in
fpatan
mov
adc
stos
stc
xor
xor
pushf
or
leave
lods
push
fcoms
dec
mov
xor
std
dec
hlt
mov
inc
cs
nop
jb
repz
jne
pop
mov
jnp,pt
add
pop
xchg
das
leavew
or
and
and
scas
in
lds
sbbl
aad
jmp
out
cmpsb
adc
outsl
xor
jb
lret
mov
xchg
fisubrl
xor
cli
test
add
movsl
insl
imul
test
popa
lods
insb
jbe
bound
xorb
lret
jmp
add
cltd
cmp
scas
add
push
or
mov
leave
lods
call
push
xchg
fmul
lods
cltd
stos
lret
add
repnz
jno
fisttpl
jbe
push
pop
add
int3
lret
stos
mov
in
clc
or
fdivrp
movsb
xchg
jmp
or
out
loopne
aad
repz
fld1
jb
or
fs
mov
xchg
jge
or
mov
push
inc
cmp
mov
repnz
stos
je
out
icebp
xor
adc
adc
cmpsl
adc
adcb
out
cmpl
push
pop
iret
push
or
cwtl
aad
inc
lock
stos
into
std
jecxz
add
das
or
adc
xchg
mov
add
pop
jnp
push
mov
jno
lods
sbb
mov
or
loopne
xchg
loope
je
inc
mov
mov
fidivrs
push
das
or
mov
mov
adc
dec
in
cmp
sub
adc
mov
imulb
aas
pop
js
mov
mov
pop
fisubrl
pop
stos
push
mov
xchg
sbb
dec
xorb
cmp
or
hlt
cmp
cmc
xchg
int
mov
jp
jge
pushf
fwait
int3
sarb
pop
cli
push
outsl
lock
push
push
call
pop
andw
cwtl
sub
mov
push
mull
lock
int
stos
push
ds
mov
ss
addr16
aad
sbb
push
pop
sbb
enter
xor
hlt
cmpsb
fsubrp
cmpsl
jbe
test
loopne
mov
mulb
aam
push
repz
push
jecxz
sbb
adc
test
add
mov
fs
sub
jb
jae
stc
cmp
fsubrs
enter
mov
or
in
cmc
out
jmp
adc
imul
cmp
push
inc
xchg
dec
mov
xorb
mov
mov
icebp
sub
aas
sub
xchg
cmpsl
filds
push
mov
push
iret
cmpsl
jle
jmp
push
mov
adc
add
imul
int
inc
gs
sbb
push
mov
cli
dec
inc
and
fdivr
ja
test
dec
push
xchg
inc
pop
pusha
andb
jo
mov
and
dec
lods
inc
mov
inc
mov
dec
das
shrb
push
mov
pop
adc
repnz
mov
sbb
jmp
inc
cmpsl
inc
sub
popf
lds
dec
pop
cltd
test
iret
lcall
xor
nop
pop
cmc
idivb
mov
or
push
mov
bound
adc
add
outsb
dec
inc
out
add
and
in
iret
call
push
ljmp
xchg
xchg
jo
pop
mov
fs
cmp
shlb
add
adc
xor
jo
fildll
dec
mov
sbb
and
bound
push
outsl
sbb
inc
cmpsl
add
push
ljmp
idivb
mov
jge
and
sub
and
out
or
sbb
and
lret
sub
pop
repz
xchg
fcmovne
cmpb
xchg
lods
xor
fwait
popf
insb
cmpsl
popf
or
insb
into
and
aam
out
sub
ret
mov
mov
cwtl
xchg
lock
jnp
sub
test
repz
mov
test
lret
movsb
out
mov
pop
add
mov
inc
repnz
stos
les
jo
xor
inc
add
adc
ja
lcall
mov
stc
or
sub
sahf
cmp
mov
and
pop
jmp
pushf
dec
stos
xor
cmp
fiadds
fcomip
push
mov
rorl
push
fwait
jge
arpl
ja
fstp
aaa
adc
push
imul
pop
cmp
adc
add
pop
test
sub
push
out
scas
or
inc
jns
sahf
rcll
mov
or
mov
sub
or
popf
test
js
pop
vcvtpd2psx
push
jl
in
cmp
inc
ret
add
and
cmp
xor
rcll
insb
repnz
jb
adc
in
or
cmp
mov
xor
fsubrs
out
dec
loopne
lods
push
das
or
jbe
adc
xor
and
outsb
daa
sub
outsl
mov
mov
neg
sbb
in
add
imul
jl
addb
and
dec
dec
push
mov
gs
jno
dec
mov
sbb
repz
jns
je
add
push
xchg
adc
cmp
mov
and
jg
in
pop
popf
imul
hlt
mov
push
mov
cmp
leave
dec
push
loop
ljmp
js
jg
pushf
push
pop
out
out
insl
pop
shll
inc
daa
mov
faddp
xorl
xchg
loopne
xor
fwait
xor
xor
xor
jno
insb
arpl
and
jmp
bts
daa
sbb
outsb
sbbl
test
mov
or
jge
push
in
sbb
sbb
std
jp
mov
xor
enter
mov
out
mov
mov
xor
xorb
jle
stos
cld
rcrb
lods
pop
cs
fnsave
mov
lods
sbb
iret
jp
xchg
mov
lahf
mov
sbb
or
jo
pop
fists
xchg
push
loope
jo
fnstsw
mov
push
pop
mov
pop
sub
call
sub
push
fwait
jae
push
fwait
lock
shll
out
dec
add
out
cli
xchg
pop
adc
inc
outsl
cmp
ja
inc
int3
dec
adc
icebp
lcall
sbb
xor
dec
dec
out
pop
orl
mov
hlt
mov
push
pusha
call
dec
loop
ret
and
mov
jge
arpl
cmpsl
add
and
in
push
lods
jbe
or
pop
sbb
dec
pop
fidivrl
fstps
das
leave
insb
cmp
sbbl
xor
cmp
enter
aaa
mov
cld
push
rorl
xchg
inc
pop
adc
xorb
sbb
fdivl
mov
push
and
sahf
and
in
xor
inc
jl
xchg
lcall
movsb
fmull
in
jns
push
jle
sbb
push
test
inc
pop
mov
mov
push
aas
dec
inc
rolb
jle
push
int3
mov
jg
push
add
dec
xor
pop
insl
ds
outsb
es
loopne
sti
ljmp
xor
mov
aaa
xlat
mov
ja
cmp
push
mov
out
decb
xor
push
sbb
xor
scas
pop
je
mov
icebp
sahf
cwtl
jns
in
dec
cmp
loopne
mov
sub
into
adc
pop
js
mov
pushf
js
test
push
cmpsb
sbb
js
xchg
in
ss
into
xchg
inc
sarb
add
fmul
fimuls
int
inc
or
stc
je
mov
sbb
nop
call
push
and
movsl
mov
and
xchg
jbe
fcomps
icebp
or
sbb
mov
and
out
jbe
data16
mov
mov
dec
lret
jb
xchg
inc
mov
in
dec
push
cmp
out
test
cli
push
add
test
aas
adc
insb
mov
cmc
mov
in
lds
add
repnz
in
mov
jbe
mov
xchg
lahf
js
lods
sub
xor
pop
push
rcr
sahf
bound
stos
xchg
lcall
mov
mov
xor
push
or
jae
mov
dec
popa
mov
adc
xor
in
mov
shlb
inc
xchg
sub
fdivs
dec
mov
push
rorl
pop
fistps
jo
jp
pop
cmc
mov
sbb
dec
aam
push
cmpsl
outsb
jge
dec
sahf
or
ds
pop
sbb
mov
or
out
pop
daa
xchg
sarl
call
mov
jp
mov
es
mov
jmp
jb
imul
push
ret
push
inc
pop
leave
in
and
hlt
out
sbb
xor
lea
inc
hlt
dec
je
loopne
push
test
jl
sbb
pop
push
loope
cmp
testb
shlb
das
inc
into
stos
imul
push
mov
in
test
dec
roll
and
daa
insb
jl
mov
mov
stos
shl
stc
mov
jmp
test
cmp
lods
dec
jl
test
push
xchg
aad
js
xchg
inc
ss
inc
adc
dec
in
sub
daa
mov
loope
sub
addr16
or
pop
enter
das
out
ds
out
lahf
les
lahf
push
subl
inc
xchg
cmp
hlt
lods
cli
push
mov
mov
push
cmpsb
sub
mov
push
inc
loopne
shll
das
or
push
in
js
dec
sub
push
adc
aaa
ret
in
jmp
sbb
jae
shlb
lods
dec
repz
mov
push
xor
jle
push
mov
pusha
or
mov
and
push
ret
fwait
loop
push
or
andb
sub
inc
sbb
mov
inc
sub
jle
pushf
bound
ljmp
xor
loop
or
fidivs
push
or
test
adc
and
bound
fdiv
insl
inc
sbb
push
jg
mov
push
fs
iret
mov
dec
cli
jmp
mov
shr
bound
mov
sbb
scas
mov
inc
inc
fcmovnb
or
push
mov
jnp
xor
pop
push
leave
sti
push
fiaddl
fsubs
movsb
fimull
mov
js
data16
stc
xchg
loopne
mov
xor
and
sbbb
dec
call
pop
xor
loop
sub
mov
dec
dec
cmp
adc
scas
repz
clc
adc
ret
mov
cmpsl
jb
cmc
mov
inc
insl
ret
shll
cmc
gs
clc
bound
fwait
scas
jo
imul
out
cmpsb
les
lahf
mov
mov
inc
jg
andl
pop
jo
jae
out
insl
jge
rcll
or
push
sub
js
sbbl
fcoml
xchg
std
movsl
stos
insb
lods
in
adc
adc
and
xchg
scas
push
jge
fists
mov
bound
or
add
popa
hlt
mov
dec
leave
push
cmp
inc
pop
jmp
jle
add
pop
movsb
dec
sub
lds
scas
inc
das
mov
xor
xor
std
hlt
sahf
ja
inc
push
xor
dec
jge
sbb
mov
adc
stos
xchg
dec
add
clc
add
test
cmovp
int
mov
aaa
fidivs
in
mov
dec
mov
inc
daa
jne
sbb
fcomps
adc
mov
leave
xlat
dec
pop
cld
repnz
mov
lret
leave
xchg
jp
xor
push
les
cmp
xchg
cmc
test
dec
nop
lret
pop
cli
sub
lahf
repnz
jl
mov
adc
push
push
into
dec
sub
jl
inc
addb
pop
xor
in
pusha
dec
movsb
popf
dec
pop
push
imul
sub
cwtl
aad
andl
mov
sub
or
dec
lock
std
data16
mov
mov
mov
pop
pop
sub
dec
nop
adc
and
cmc
pop
xchg
test
scas
mov
les
rcrl
dec
sbb
sbb
xor
pop
lcall
mov
sub
pop
mov
sbb
mov
push
adc
sbb
jne
lods
mov
clc
add
stos
or
mov
in
or
adc
sbb
lea
xchg
test
sub
les
aad
mov
shrb
push
mov
andl
and
dec
inc
std
push
mov
fistpl
repnz
pop
repz
mov
inc
cmp
jno
hlt
lea
in
int
mov
pop
addl
js
mov
loope
xor
test
xor
popa
xor
mov
sahf
jle
rcll
aas
cmp
cmc
inc
in
mov
add
shrl
dec
mov
pop
xor
arpl
loopne
rorl
pop
aam
pop
mov
movsb
add
inc
xchg
outsb
add
ror
icebp
icebp
loope
push
cmp
mov
addr16
ds
insb
lock
insb
add
movsb
xchg
rcrb
jge
mov
fwait
inc
mov
fnstenv
fsubr
xchg
dec
shrl
out
xor
xlat
xor
cmp
outsb
xor
xchg
pop
adc
sub
inc
sbb
stc
cwtl
lret
popf
sbb
sti
hlt
daa
pop
xor
add
jmp
sbbl
mov
popf
sbb
lcall
sub
pop
pop
popa
enter
mov
mov
ljmp
loop
push
outsb
popf
cmp
pop
ds
sbb
lods
inc
or
sti
out
sub
push
movsl
sub
push
cmpsl
mov
inc
or
dec
xchg
add
or
push
nop
sbb
xor
xlat
mov
jb
mov
mov
imul
pop
jns
pusha
movsl
jl
cmc
sahf
add
fadd
ret
pop
les
pop
movsb
insb
shrl
push
pushf
pop
xor
mov
test
and
dec
nop
add
into
xchg
or
cmp
aad
sti
je
jecxz
rclb
enter
cmpsl
xlat
dec
loop
jb
push
inc
mov
mov
mov
aad
ss
mov
push
sbb
mov
push
sub
mov
cmpsb
bound
pop
jb
fs
xchg
stc
pop
cmp
inc
xchg
inc
nop
lods
mov
push
out
adc
lcall
or
lods
jmp
push
pop
jnp
add
movsl
repnz
mov
push
cmpsb
jbe
inc
push
mov
adc
enter
mov
enter
mov
xor
outsb
sbb
and
ja
add
pop
adcl
movsb
ss
and
inc
jmp
lret
and
cmp
jg
ret
push
shlb
cmpb
or
mov
out
imul
inc
adc
in
mov
mov
inc
andl
scas
loop
inc
loopne
add
cltd
lret
jecxz
cmp
pop
imul
pop
adc
arpl
pop
push
lcall
cmp
bound
pop
and
ja
and
jecxz
push
dec
inc
push
lods
mov
scas
jmp
adc
movsb
jmp
in
push
rclb
icebp
in
cmp
adc
cmc
jg
rclb
pop
popa
shl
gs
aaa
shrb
jl
push
loope
push
out
pop
mov
fisubrl
or
mov
call
call
fidivrl
sahf
dec
sbbl
dec
mov
jp
jae
scas
iret
adc
pop
or
stos
repz
jp
arpl
mov
popf
in
lea
mov
or
call
sub
jo
cmp
or
lods
ret
test
sbb
cmc
adc
hlt
into
push
daa
sbb
loop
stos
mov
lret
loopne
jmp
mov
or
xchg
inc
and
callw
loope
nop
xor
xor
jle
lea
cmpsl
jmp
call
fcoml
pop
inc
into
lods
adc
ror
sub
inc
addl
pop
in
notl
jge
lods
push
sbb
in
cwtl
loopne
roll
dec
lods
push
jmp
mov
fists
std
jge
pop
loope
sub
or
jno
push
daa
imul
aaa
cmpsl
push
cmp
lret
mov
icebp
dec
jmp
mov
jl
data16
ror
fcoml
aaa
movsl
in
ret
mov
mov
or
push
ljmp
sub
xchg
hlt
or
jnp
popf
and
jge
dec
popa
or
dec
or
mov
int
or
xchg
cmc
lock
imul
fstps
jne
fisubrs
cmpsl
jns
inc
and
mov
mov
jmp
aas
cs
js
add
loopne
idivl
xchg
pop
outsl
pop
jg
pop
mov
pop
fstps
imul
shrb
sub
mov
xchg
cmp
mov
mov
sahf
pop
dec
insb
jl
mov
test
push
pop
sarb
insl
push
shld
call
inc
int
loope
ljmp
sbb
sbb
sub
ja
stc
pop
ja
fcmovnbe
fs
pop
pusha
mov
cmpsl
in
lahf
dec
xchg
push
aas
out
jns
aad
inc
popf
mov
mov
hlt
inc
stc
aas
cs
out
push
mov
pop
xlat
or
cmpl
or
fdivl
mov
mov
mov
add
pop
push
cs
loope
subb
pushf
xor
fistps
pop
sub
into
test
sub
adc
adc
sbb
sbb
mov
int
push
xchg
xor
sub
test
cli
fsubrp
sbb
jp
add
jl
fs
sub
push
cmp
loope
stc
push
es
out
fcmovnb
lret
cmp
inc
mov
pop
les
xchg
push
push
dec
sub
push
push
push
divl
sub
dec
mov
xor
pop
sbbl
ds
fiaddl
pop
shrl
mov
ret
js
lds
cli
mov
notb
sub
or
jmp
es
aam
je
xchg
jne
jle
pusha
sti
in
pop
mov
dec
fmull
and
adc
push
shrb
mov
xchg
xor
inc
jnp
sub
inc
jne,pn
xor
fisttps
das
sbb
std
inc
pop
mov
xchg
sub
add
push
subb
adcl
insl
push
stc
addl
add
xchg
inc
outsb
xlat
stos
mov
xchg
pop
lret
pop
repz
add
cli
popa
in
pusha
out
add
and
inc
push
stc
sub
xchg
mov
xchg
push
pop
idivl
xor
sahf
dec
sbb
enter
inc
sub
or
adc
inc
out
dec
fsubrs
mov
pop
ja
mov
cli
mov
pop
jnp
movsl
imul
subb
dec
test
mov
jle
pop
cld
push
add
hlt
aas
aad
jae
cwtl
cltd
sub
push
dec
adc
xchg
outsb
pop
sbb
ret
test
jbe
daa
fists
subb
jl
test
lahf
out
push
push
jo
jp
mov
stc
mov
inc
xchg
jns
pop
xchg
imul
and
lods
cmc
xor
inc
out
cmp
jp
mov
sbb
ss
shr
cmp
jne
shlb
inc
test
sysenter
shll
mov
movsl
iret
leave
push
enter
cmp
pop
mov
mov
movsb
jbe
jge
pop
mulb
adc
push
lret
inc
mov
nop
jl
ret
xorb
hlt
jp
cmc
jno
xor
and
stos
adcb
sub
push
bound
aam
cmp
cwtl
movsb
icebp
lahf
inc
in
pop
imull
lret
stc
xchg
jge
fsts
mov
movsb
fnstenv
adc
fstpl
lahf
jo
sub
sahf
int
push
add
js
inc
movsl
xor
aas
mov
stos
push
inc
ret
cs
insl
mov
xchg
jle
jns
pop
dec
inc
js
cmpsl
cmc
add
sbb
jg
lds
call
xchg
imul
fcmovnb
test
mov
cs
mov
push
xchg
int
xor
sbb
test
adc
call
xor
jo
out
pop
or
add
sbb
rorb
xchg
and
sti
icebp
shll
imull
adc
mov
sahf
and
pop
mov
fistpl
sub
arpl
dec
and
add
stc
fs
jmp
jg
adc
pop
int
add
jb
arpl
jbe
pop
bound
add
int3
sarl
jbe
icebp
lret
jno
and
sub
mov
inc
mov
lcall
fwait
cwtl
adc
dec
popf
xchg
xor
cwtl
mov
mov
lahf
dec
cmp
push
adcl
jb
xor
fisttpl
adc
lds
loop
pop
pop
aaa
out
enter
les
xlat
lahf
test
popa
lds
or
jge
xchg
push
dec
outsl
sub
movl
pop
sbb
jo
clc
movsl
mov
xor
push
adc
inc
jae
cmp
fucomi
cmp
sub
fdivr
lcall
lret
pusha
mov
je
jecxz
or
and
loopne
xlat
fsubs
shrb
fidivl
enter
jbe
sahf
sub
pushf
jecxz
imul
push
push
dec
adc
xchg
outsb
ficompl
inc
pop
pop
scas
jmp
jl
xchg
sub
or
aam
pop
xchg
lcall
dec
mov
jne
inc
adc
sbb
sbb
rcl
lahf
inc
scas
int
xor
jmp
pusha
stos
adc
or
and
jge
fs
jge
fdivrp
dec
lods
or
test
push
nop
insb
pop
bound
and
stos
jne
push
cld
or
loopne
ja
lods
xor
jle
ss
mov
adc
movsb
mov
dec
cmp
pop
dec
mov
xor
or
loope
xorb
xchg
pop
push
imul
es
mov
test
mov
je
pop
fnstenv
cmc
sti
mov
mov
mov
fidivl
call
movsb
dec
xor
movsb
xchg
ss
popf
sbb
fbld
push
push
xor
sbb
in
or
out
in
mov
sbb
and
fldcw
mov
sub
mov
or
mov
fimuls
pop
fdiv
in
out
stos
dec
sub
cs
pop
inc
test
fcoms
lcall
mov
loop
add
out
mov
jecxz
insl
and
xorl
lret
mov
repnz
imul
xor
fisttpl
inc
pop
xor
fsubl
shll
cmpb
mov
loope
insb
and
icebp
mov
add
movl
les
rcl
xor
lods
ja
jb
jae
push
aam
pop
fs
lds
scas
cltd
push
in
fcmovb
pop
mov
pop
stc
pushf
mov
mov
xlat
fstp
fnstcw
mov
pop
inc
dec
leave
dec
in
pop
shl
lods
inc
pop
mov
xchg
loope
cli
iret
enter
ss
mov
enter
mov
mov
pushf
aas
es
mov
add
push
popa
decl
jne
pusha
xchg
out
pop
jge
jno
ja
gs
je
dec
mov
adc
mov
ljmp
xchg
and
jbe
jno
and
int3
and
pop
fsubr
pop
ror
nop
cmpb
sbb
rclb
sbb
sti
hlt
lahf
sub
imul
rclb
xor
idiv
in
negb
sub
inc
xchg
cmp
cmp
sti
filds
int
sbb
sub
push
dec
and
inc
sbb
jl
es
loopne
and
or
mov
adc
out
lds
rcll
push
dec
add
ds
movl
orl
pop
js
arpl
mov
leave
lock
dec
mov
xor
lret
lods
pop
sub
xor
jnp
enter
add
loopne
rorl
and
mov
pushf
push
mov
adc
test
jecxz
or
retw
shr
sti
sub
aam
adc
cmp
rorl
add
aas
inc
xor
rcrl
mov
mov
movsl
jg
xchg
xchg
loopne
pushf
cmp
or
loopne
mov
or
mov
in
push
fadds
je
mov
and
out
mov
daa
faddl
pop
pushw
lret
and
adc
roll
mov
adc
mov
rcl
mov
addb
daa
cld
rclb
popf
add
rcrb
mov
shl
cmp
incb
sub
or
nop
inc
or
insl
or
mov
ds
and
xchg
adc
cmc
inc
sarb
add
jmp
enter
cwtl
push
test
pop
rorb
mov
adc
test
add
fsubr
fsts
mov
push
mov
hlt
add
cld
enter
jge
sbb
sub
mov
sbb
push
rclb
mov
push
sub
insl
shll
push
sbb
jbe
outsl
stos
mov
in
nop
cs
jb
push
icebp
xor
in
cmp
xor
pop
cwtl
idivb
loop
add
pop
jg
hlt
or
imul
cli
aad
insb
fsts
repz
or
sbb
inc
in
lock
shlb
adc
das
int
aad
jb
mov
lcall
cld
xchg
cltd
or
movsb
sbb
stos
test
mov
popa
push
sbbl
insb
and
je
inc
fisttps
frstor
cmpsb
or
jns
inc
rorb
aas
mov
mov
cmp
fwait
in
rol
adc
jno
nop
adc
jmp
andb
loope
xor
pop
and
or
in
adc
xor
jle
dec
pop
scas
addr16
xchg
push
dec
and
ljmp
lock
push
bound
lret
or
or
aas
add
xchg
jl
jge
and
enter
std
add
out
cmpsb
push
mov
out
popf
lds
and
cmp
mov
int3
iret
mov
cwtl
in
sub
nop
sub
insl
mov
aas
call
and
enter
pop
subb
lcall
stc
aam
int
cli
push
xor
cmp
dec
sub
push
push
mov
leave
int3
cmpsb
mov
imul
decb
push
cwtl
or
rorb
xchg
loop
lods
repz
and
out
cmp
jecxz
mov
decl
cmp
aaa
pop
shll
daa
mov
jp
pop
pop
rcll
test
mov
jbe
add
cmp
imul
pop
mov
rcll
sbb
add
add
in
ljmp
mov
jmp
sahf
and
les
test
hlt
or
push
mov
das
push
out
subb
adc
pop
xchg
fimull
cmp
pushf
imul
push
xchg
dec
add
xor
sbb
inc
int
iret
popl
pusha
mov
jbe
in
sub
ss
sbb
dec
and
add
sbb
mov
int3
out
iret
fwait
mov
push
push
hlt
inc
andb
das
hlt
sub
mov
outsl
clc
and
repnz
out
das
bound
jo
pop
and
jns
rep
dec
jae
or
ret
ret
shll
adc
jae
sbb
xchg
rcl
pop
jne
jno
sahf
push
and
push
dec
sub
xchg
push
jecxz
cmpsb
adc
sbb
mov
sub
add
mov
jle
pop
xchg
xor
dec
lret
adc
pop
enter
ja
inc
dec
std
idivl
test
or
rcrb
addb
xor
jecxz
outsl
imul
adc
imul
ret
push
scas
mov
push
dec
scas
test
jg
ljmp
xor
imul
xor
lea
stos
shlb
lods
loop
xor
jge
mov
jbe
sbb
aaa
cs
lock
dec
fdivs
mov
arpl
jae
jl
push
das
cmp
scas
lret
fsubrs
jl
jl
call
into
rclb
mov
xor
adc
push
rcrb
mull
xchg
add
sbb
cwtl
test
testl
and
mov
sarb
mov
lds
sarb
dec
imul
fs
mov
xchg
add
popl
mov
or
pop
and
and
or
fcompp
push
dec
sbb
hlt
lods
xchg
aas
adc
into
sahf
xchg
jge
cmp
xor
rcrl
lea
push
mov
jb
xor
loop
fwait
fwait
cli
sub
outsb
iret
sub
inc
adc
ret
je
xchg
rep
aam
jmp
sub
cmpsb
mov
dec
and
add
loopne
scas
data16
clc
xchg
sub
lret
xlat
shll
and
xor
jmp
mov
data16
and
std
sbb
stc
loopne
mov
jl
ret
cmp
lret
mov
mov
jecxz
loope
and
push
add
mov
jne
adc
push
pop
xchg
test
sub
es
aaa
arpl
lret
xchg
popf
xchg
sub
imul
iret
lds
aam
daa
shll
pusha
scas
or
orb
push
mov
mov
jno
xchg
fistps
inc
mov
mov
ljmp
xor
rcrl
ret
aas
sbb
pop
mov
pushf
cmp
pop
rolb
push
ja
xlat
ds
push
lock
cwtl
imul
lea
ret
or
sti
add
loope
cltd
push
jo
mov
lret
test
push
push
push
cmp
sbb
loop
lahf
fimull
and
stos
xor
leave
xor
test
xchg
pop
mov
stos
jg
cmp
xor
and
push
leave
or
iret
add
frstor
adc
in
jbe
scas
push
jg
out
or
leave
test
stos
fsubs
xor
gs
mov
dec
push
lods
inc
fimull
test
aad
push
in
jle
popa
dec
insl
lods
stos
pop
xor
testl
or
loope
adc
push
fcompl
push
out
lods
cmc
pop
lret
fdiv
dec
cmp
aas
mov
add
xchg
inc
ja
mov
test
shl
aaa
divb
shlb
push
aas
pop
imul
pop
pusha
or
aaa
pop
leave
mov
push
add
test
in
aam
dec
loope
scas
popf
inc
repz
xor
push
jb
or
cmpsb
cmc
pop
sub
adc
mov
and
cs
into
into
outsl
cltd
popa
or
rorl
mov
xor
xchg
xor
xchg
mov
pop
ljmp
in
negl
xor
mov
scas
cmp
lods
inc
jae
jae
clc
enter
fs
mov
jge
jg
inc
leave
arpl
mov
mov
and
sbb
repz
mov
adc
test
adc
popa
jno
cwtl
gs
int3
enter
bound
jl
mov
or
dec
je
insl
jno
and
in
rcrl
push
test
sub
add
popf
sti
imul
subb
je
filds
or
imul
push
and
out
inc
popa
stc
das
and
mov
mov
and
pop
xor
inc
push
push
push
mov
icebp
cmp
mov
in
ret
adc
push
mov
xchg
fstpl
push
sar
lds
sbb
xchg
pop
mov
sbb
push
jb
leave
call
roll
iret
ljmp
fistl
pop
fcomip
movsb
sub
cmp
sti
je
fsubr
mov
and
xlat
mov
xchg
or
out
dec
xor
bound
sbb
pop
aas
scas
dec
push
cmpsl
push
and
sub
xchg
and
sub
repnz
aad
outsl
mov
stos
add
sahf
lcall
js
pop
jbe
iret
sar
imul
fadd
jnp
mov
sub
test
push
sub
and
int3
sbb
or
xor
pop
cli
inc
loop
rolb
inc
adc
dec
push
stc
cli
lods
xchg
jae
push
fwait
or
ret
int
outsl
push
jb
dec
mov
mov
jecxz
movsb
xchg
cmovb
push
leave
and
insb
mov
push
sub
and
xor
iret
sbb
sbb
xor
and
ja
dec
popf
sub
mov
sbb
into
in
mov
push
jno
js
pop
inc
mov
fisubrs
cwtl
add
filds
stos
adc
rorl
cmp
leave
jno
pusha
cmp
test
xchg
dec
xchg
and
aad
xchg
mov
cmpsl
cmp
lcall
xor
mov
xchg
in
xchg
ljmp
cld
daa
mov
lcall
movsl
jb
cmc
fldl
xor
adc
push
and
inc
jae
adc
or
test
test
int
sbb
outsl
test
in
add
add
nop
scas
dec
out
jp
jp
or
and
push
mov
push
rol
subb
and
pop
movsl
pop
xchg
cld
fdivs
sbb
jae
mov
or
fsubrs
xor
lcall
jge
pop
subl
ja
fs
lret
pusha
mov
hlt
call
adc
mov
xchg
outsl
mov
pop
shll
mov
adcl
popa
aam
cmp
movsb
or
jl
mov
sbb
sbb
fldenv
pop
fnstcw
icebp
test
dec
sbb
out
inc
jne
shl
xlat
inc
fcmovu
mov
inc
outsb
xchg
pop
sti
fmuls
clc
call
movntps
xchg
mov
pop
call
mov
adc
in
add
inc
outsl
hlt
stos
test
aas
into
or
inc
pop
dec
notb
ret
xchg
arpl
adc
mov
or
dec
fnstcw
pusha
pop
xor
cmp
pop
jno
test
pusha
les
mov
sbb
or
dec
lcall
sbb
repz
lcall
or
jecxz
and
xchg
xchg
add
jmp
mov
and
hlt
adc
arpl
jecxz
inc
sub
push
sub
call
cmpsl
or
std
aaa
dec
sti
aas
mov
add
je
and
loope
pop
in
cmp
pop
dec
sub
sbb
fldcw
xorl
mov
cwtl
adc
push
adc
clc
in
jmp
xchg
inc
popa
adc
aam
je
nop
jae
scas
jg
jne
sbb
jb
lret
dec
adc
cmp
adc
inc
lds
mov
cmp
repz
pop
aad
xchg
jo
xchg
es
out
pop
and
into
adc
jbe
inc
pop
pusha
ret
sti
dec
insb
xchg
hlt
fidivrl
lods
fistpll
mov
aam
pushf
stos
add
and
jbe
jp
aaa
xchg
pop
ret
mov
pop
mov
ret
jl
mov
jne
dec
fs
lock
ret
sub
outsl
mov
ljmp
call
pop
pop
ret
jle
icebp
jl
cmp
imul
int3
scas
push
mov
mov
sub
sbb
jnp
mov
stos
fs
mov
mov
lods
cmp
iret
int3
and
imul
fsubl
mov
movb
test
sahf
cltd
divl
popa
pop
int
dec
cld
or
iret
fadd
in
xchg
insl
mov
nop
insb
stos
xchg
push
ret
sbb
loopne
push
push
pushl
dec
insb
add
stos
and
arpl
rclb
cmpsl
and
xor
mov
shlb
push
pop
push
arpl
stos
sbb
dec
sub
js
addr16
stos
int3
js
imul
xchg
pusha
int
repnz
ss
subl
sarb
pop
jns
lcall
int
scas
push
imul
std
rcll
test
or
and
and
in
mov
fwait
xchg
aam
mov
dec
aam
or
cmpsb
iret
fwait
test
push
lods
lcall
rorl
inc
add
test
cmp
push
push
sbb
adc
call
ret
jae
lea
push
sub
push
test
adc
xor
or
mov
outsl
fstpt
add
adc
inc
daa
mov
lds
subb
mov
loopne
pcmpeqd
xlat
push
int3
inc
push
hlt
and
inc
aad
cmp
mov
mov
sub
pushf
aam
aas
mov
ficoms
notb
xorb
cmp
sbb
cld
ja
cli
data16
inc
test
fisubrl
pushf
into
mov
lcall
fsubrs
fdiv
lock
lea
icebp
out
jns
gs
int3
inc
pop
call
xchg
jl
xchg
sub
xchg
sbb
xor
ror
jl
push
imul
sub
xlat
mov
popf
xor
and
call
inc
xchg
sbb
das
adc
push
mov
adc
enter
push
daa
cld
mov
enter
pusha
out
push
push
xor
inc
pop
xor
fsub
cmp
sbb
idivb
cmp
mov
pop
gs
dec
adc
loop
ja
push
dec
and
mov
mov
pop
push
notl
adc
sub
test
sbbb
jb
lea
jns
mov
mov
jbe
push
test
pop
xchg
xchg
pop
fwait
mov
sarl
filds
push
mulb
or
loopne
loope
push
adc
pop
loop
mov
lds
or
fisttpl
mov
adc
xchg
xor
mov
int
cld
daa
dec
push
add
sbb
mov
inc
xchg
stos
test
sub
add
jg
aad
push
or
jecxz
inc
dec
cmpsb
xor
leave
mov
ror
lret
cmp
mov
jno
mov
mov
cltd
push
jnp
stc
jg
xchg
adc
add
stos
mov
into
jl
ror
dec
cmc
call
pop
dec
push
outsb
arpl
fwait
mov
jne
aam
es
jo,pt
inc
shll
cld
lret
dec
jl
cld
sub
xorb
inc
dec
push
imul
inc
and
imulb
cmp
jno
xor
outsl
mov
aam
out
lds
adc
or
int3
mov
sahf
imul
mov
and
pusha
add
scas
dec
mov
ljmp
cmpsl
ret
adc
xor
dec
fwait
jle
cltd
pop
daa
jns
and
jmp
inc
iret
test
xorl
enter
negb
movsb
sub
cltd
jbe
push
mov
sub
call
dec
pop
std
or
jp
cs
xchg
push
rclb
scas
xchg
push
jno
lcall
gs
iret
inc
xlat
stc
addb
loop
mov
inc
loopne
xorb
push
and
pop
mov
jnp
in
fwait
mov
push
adc
xchg
movsl
dec
test
icebp
ss
cld
jl
add
pusha
inc
shrl
dec
adc
pop
and
aad
stc
mov
mov
push
dec
iret
divl
mov
or
mov
add
push
shl
jae
add
das
push
daa
stos
xchg
xchg
xchg
adc
jb
sub
stc
and
jb
mov
ret
rcl
inc
add
mov
lret
and
sbb
mov
shll
enter
das
xchg
shlb
jl
iret
lahf
add
jge
cmpsl
or
call
push
jp
roll
and
shlb
popa
mov
jmp
push
pop
or
push
gs
cmp
push
dec
outsl
push
repnz
xchg
dec
aas
cmpsl
inc
aaa
dec
data16
outsb
popf
xor
int3
mov
push
add
mov
pop
push
pusha
pop
cmp
and
and
fdiv
push
adc
int
pusha
int3
mov
lret
mov
int3
jecxz
in
xlat
mov
pop
loopne
lock
les
adc
sbb
inc
lds
cli
adc
cmp
dec
xor
in
push
rclb
sti
inc
push
hlt
mov
fidivl
imul
or
aam
in
in
dec
dec
mov
bound
inc
push
into
jno
icebp
int
jp
dec
push
or
gs
cmpsb
mov
mov
enter
shlb
xor
test
lahf
jno
sbb
sub
mov
adcb
jg
mov
sub
addr16
mov
jle
fstl
or
push
inc
repnz
pop
mov
test
hlt
mov
adc
mov
movsb
lea
adc
nop
fdivr
add
lcall
jecxz
inc
repz
dec
ljmp
into
or
loopne
sbb
fsubr
add
outsl
mov
mov
pop
andl
cmp
cli
push
dec
lret
add
inc
sub
into
mov
out
dec
pop
xor
mov
lock
leave
jns
cmc
std
mov
jnp
pop
sbb
jl
pushf
pusha
iret
scas
jb
jp
mov
aas
mov
or
jecxz
mov
push
faddl
ret
pop
adc
loope
jno
cwtd
sub
and
sub
stos
sub
stc
mov
icebp
xor
mov
imul
outsl
xchg
xchg
clc
sahf
mov
and
rcl
sbb
dec
lret
ret
repnz
jbe
push
cmp
add
cwtl
xor
xchg
push
rcrl
sbb
das
sbb
jnp
inc
insb
sub
or
push
test
repnz
pop
mov
sbb
inc
sti
mov
jne
pop
xchg
jnp
scas
mov
xor
fists
jmp
pop
add
std
adc
lds
stos
ret
xor
pusha
pop
in
ret
adc
dec
pop
adcb
sub
pop
sub
jp
mov
imul
or
ret
mov
xor
test
add
lret
ljmp
mov
cmp
cmp
pop
movsl
out
adc
les
cmc
movb
mov
cmp
lret
mov
push
outsl
push
cmp
mov
xchg
push
jmp
push
xor
or
andl
cwtl
addr16
in
jno
jg
insb
lret
cmp
dec
sub
aam
or
lock
add
or
ss
jno
sbb
loope
xlat
movsl
xchg
outsb
push
inc
jne
negb
ja
or
push
je
pop
ljmp
or
cmp
cmp
jnp
aad
dec
push
inc
push
pop
rol
orb
adc
xor
ss
inc
pusha
add
cmc
adc
mov
jp
out
lods
repz
inc
dec
mull
add
sbb
mov
rcll
jmp
fistpl
sbb
test
pop
or
lock
jg
lahf
mov
inc
dec
aas
repnz
and
int3
push
mov
pop
xor
inc
test
push
ja
inc
int3
repnz
mov
jl
loop
cmp
push
loopne
xchg
dec
mov
ljmp
push
icebp
inc
mov
imul
call
inc
sbb
into
rorb
adc
mulb
imul
cltd
cmp
js
jle
repz
pop
sub
mov
inc
repnz
addr16
in
cmp
sub
ret
and
adc
pop
or
adc
mov
dec
dec
jns
shl
in
and
xor
inc
xor
xchg
mov
adcl
push
jo
pushf
ss
movsb
and
rcrb
outsb
clc
pop
lds
gs
jo
or
xchg
data16
cmp
popa
mov
orb
popa
push
adc
movsl
lods
mov
xchg
adc
and
das
jge
dec
daa
xchg
sub
mov
xchg
mov
out
xor
dec
in
es
xchg
je
icebp
fwait
imul
ret
mov
jae
addl
inc
or
or
cltd
jbe
mov
jecxz
sbb
lcall
sbb
sbb
ficompl
adc
add
pop
ds
xor
inc
mov
stos
jp
popa
int3
sbb
push
and
daa
stos
mov
fists
push
xchg
sbb
push
mov
nop
cmp
adcl
jo
add
or
mov
sub
icebp
or
shrb
sbb
xchg
cs
jg,pn
fmul
imul
sub
inc
out
cli
jp
pop
leave
adc
sbb
pop
das
mov
ret
add
cmp
outsl
add
inc
bound
sbb
or
rcrb
icebp
sub
dec
dec
fistps
rorl
sub
adc
popa
movsl
xchg
pop
and
xor
mov
addr16
es
xchg
pop
loop
push
mov
xlat
lea
shlb
xchg
lea
daa
stos
add
mov
mov
leave
push
sub
xchg
push
jbe
xchg
jmp
mov
mov
lcall
cltd
cmpsb
or
shll
roll
fwait
stos
adc
cmc
fldenv
pop
sub
push
mov
std
xor
jb
mov
cmc
mov
icebp
xlat
xchg
cmp
cmc
es
xor
mov
data16
lret
cs
ret
and
sub
and
push
mov
fimuls
or
cmc
inc
lods
negw
clc
shll
in
les
mov
jno
jnp
jle
dec
lcall
cltd
lahf
push
xchg
mov
addl
inc
push
cli
inc
call
xchg
es
fcoml
sbb
arpl
outsb
popf
enter
or
rcr
pop
ja
dec
jnp
mov
gs
sub
repz
in
or
test
jb
cmp
stc
sbb
pusha
pop
call
mov
out
test
mov
pop
lock
mov
push
push
mov
popa
lods
sub
push
dec
testb
fsubs
imul
insb
adc
push
stc
xor
ds
cltd
out
push
push
cmp
pop
rdpmc
xor
dec
daa
in
mov
jbe
pushf
imul
imul
fistpll
leave
mov
ss
mov
lods
lds
test
aaa
add
outsl
bound
jb
notl
jnp
pusha
adc
mov
stos
leave
aas
sar
pushf
mov
js
pusha
iret
sti
leave
mov
fs
out
rorb
and
movsb
in
xor
mov
sbb
jne
cmp
mov
imul
je
testl
xchg
push
cs
inc
mov
sbb
jns
pop
cmpb
jle
sbb
xor
lds
stc
jg
in
jb
rcrb
das
push
fs
lods
insb
pop
lea
mov
rcrl
add
inc
sarb
inc
fisubrl
jge
cmpsb
aad
add
dec
icebp
inc
xchg
jg
cmp
pusha
or
aam
push
cmp
test
fucomip
subb
adc
xor
pushf
mov
adc
xchg
jno
mov
fsubl
and
jnp
xlat
lcall
adc
mov
xlat
shlb
sub
clc
lds
aad
aad
dec
dec
lds
sbb
ja
ds
fistl
leave
dec
push
or
mov
dec
or
lea
and
mov
and
xchg
xchg
int3
jnp
mov
out
jno
outsl
test
or
xchg
jnp
mov
xchg
jo
add
fwait
lock
loop
pop
in
mov
jb
sub
push
push
mov
out
jp
testb
xchg
adc
insb
adc
mov
jae
xor
push
and
inc
sbb
and
lods
dec
in
shr
sbb
jl
arpl
shr
sbb
popf
push
fimuls
inc
psubd
fstl
or
add
popa
rcrl
outsl
jb
sbb
and
mov
insb
add
mov
cmp
push
lcall
push
push
test
cld
mov
sub
jb
aas
xor
mov
xchg
push
imulb
js
push
add
sarl
mov
sti
mov
fbstp
into
jno
outsb
sub
add
xor
mov
out
push
fbstp
rcrb
cwtl
cltd
out
into
andl
sti
test
insl
sub
test
adc
push
push
ret
fldt
xor
icebp
sbb
mov
popf
and
shl
out
jno
in
sub
push
ds
push
mov
pop
push
cwtl
inc
dec
fwait
movsb
out
test
iret
test
aam
inc
pop
xchg
dec
pop
or
dec
and
mov
lods
leave
leave
jnp
adc
jl
jno
jge
sbb
pusha
xchg
inc
push
mov
and
testb
out
push
lahf
in
int3
pop
out
and
lcall
clc
and
push
lcall
fcmovnb
jo
or
testl
push
sub
loopne
pmaxsw
out
lcall
push
add
insb
dec
ljmp
mov
sbb
out
repnz
rorb
and
cmp
stc
fldl
es
xchg
lea
cs
xchg
pushf
jge
sub
fisttpll
popa
mov
clc
jg
cli
scas
call
clc
je
cmp
add
fstpl
adc
push
shr
xchg
and
jl
lods
cmp
popf
push
mov
jne
ficoms
inc
pop
sahf
mull
cmpsl
ss
lds
sbb
jns
pop
lahf
in
push
arpl
sbb
jb
mov
pop
jne
cmc
lock
push
mov
loope
jno
pop
es
pusha
gs
add
fistl
shll
in
xor
bound
decl
int3
test
bound
adc
in
flds
cmp
std
pop
or
sub
loope
scas
xor
mov
cmp
outsb
cmp
mov
cmpsb
jl
pop
push
or
xchg
xchg
push
aad
jecxz
shll
dec
leave
fmull
add
call
hlt
fidivrl
push
jmp
inc
pop
nop
fldenv
pop
out
xchg
pop
jmp
push
loop
icebp
cmc
sti
inc
mov
push
dec
or
inc
loop
fbstp
les
mov
xor
adc
fdiv
mov
xor
sub
inc
or
mov
jae
leave
cmpsb
incl
fbld
xchg
add
cltd
dec
jmp
fidivs
pop
shlb
mov
decb
mov
imul
stos
inc
sbb
jnp
adcb
jge
add
xchg
jno
insl
cmpl
rcrl
out
and
mov
mov
test
mov
popa
add
cmp
sar
frstor
and
int
push
mov
icebp
inc
in
imul
sbb
jl
sub
arpl
call
sub
cmp
sub
jp
pop
shlb
clc
insb
xchg
add
add
faddl
clc
jge
stc
pcmpeqw
or
mov
cmp
inc
or
mov
fimuls
into
ss
loope
mov
pop
sbb
js
mov
mov
adc
les
nop
xchg
movb
push
jno
ljmp
cmp
mov
sbb
adc
ds
orl
insb
and
shl
xchg
arpl
or
xchg
lods
mov
out
inc
mov
sub
int
cmpsl
aad
jle
imul
es
aas
or
and
push
js
mov
or
or
sbbl
gs
xchg
inc
int
ds
jns
jns
and
mov
pop
out
xchg
xor
aad
add
inc
cmp
mov
jmp
or
xor
stos
pop
aaa
lock
aam
push
js
push
or
sub
out
jmp
push
test
sub
xchg
out
hlt
xor
cmp
mov
enter
mov
pop
push
sbb
gs
sub
push
test
push
xchg
add
cmp
cli
cmp
ret
loopne
std
cmp
mov
and
ja
dec
sbb
popa
decl
sarl
call
and
adc
xor
pushf
and
mov
test
inc
dec
insb
es
xlat
aam
xor
dec
out
mov
sub
xor
out
dec
aaa
das
inc
cmc
out
adc
mov
sbb
std
stos
xchg
and
push
cmpsl
adc
fsubl
pop
jns
repnz
cmp
ret
dec
andl
xbegin
dec
sub
clc
call
push
iret
mov
or
fiadds
mov
ret
lds
ja
jae
cmp
and
sub
insb
sub
mov
movsl
jle
pop
push
jne
pop
dec
inc
mov
sahf
scas
bound
test
scas
xchg
movsl
das
cld
and
movhps
dec
mov
pop
jecxz
or
test
jo
dec
jbe
pop
movsb
inc
int
mov
adc
gs
pop
femms
out
lods
jl
inc
xchg
inc
xchg
imul
ja
cltd
mov
cmp
sbb
shlb
xchg
hlt
and
fsubl
adc
data16
aaa
cmp
ror
xchg
lcall
inc
popf
ljmp
xchg
aas
fisttps
mov
ljmp
int3
leave
fbld
xchg
es
xorl
jg
and
call
xor
push
sub
aad
xchg
add
mov
sbb
ret
mov
lods
nop
xor
inc
inc
dec
and
adcb
mov
int3
jle
adc
lret
dec
leave
stc
cwtl
pop
leave
adc
add
jecxz
popf
loope
adc
pushf
jno
data16
pop
fdivrs
inc
mov
or
cmpb
fistl
imul
dec
xchg
shlb
repnz
sbb
mov
mov
sub
inc
sbb
dec
add
push
jecxz
push
xchg
test
add
push
testl
pop
loopne
xchg
dec
xor
scas
insl
loope
enter
dec
fmul
out
jecxz
daa
mov
xor
mov
cltd
lds
pushf
sti
das
popf
or
or
stos
jmp
jecxz
mov
sub
shl
mov
mov
nop
sub
popf
aas
dec
repz
insl
repnz
lahf
test
jp
les
arpl
sub
cmc
push
rolb
xor
hlt
adc
nop
adc
jb
lcall
pop
icebp
sti
out
hlt
xchg
xchg
je
ret
in
push
loopne
dec
in
inc
mov
pop
sbb
test
and
xor
push
mov
pop
and
out
fisubrs
add
ds
pop
std
shll
pop
push
push
mov
inc
mov
lret
pop
bound
insb
push
sbb
lds
enter
enter
dec
fwait
cmp
rcr
mov
iret
aaa
adc
jnp
mov
xchg
mov
test
sbb
je
push
es
xchg
test
stos
pop
adc
cmp
ret
out
jbe
daa
push
mov
mov
adc
push
xlat
cmp
int3
movsb
add
mov
pushf
adc
test
jp
fdivrp
fildll
mov
xor
in
xlat
cli
in
imul
inc
repz
jecxz
or
inc
sbb
in
iret
lea
fwait
mov
and
outsb
insl
pop
mov
pop
inc
test
xchg
ja
add
into
mov
dec
push
aad
mov
add
nop
adc
cs
push
mov
sbb
stos
cmp
out
push
testl
and
jl
stc
out
xlat
lcall
arpl
mov
loope
adc
push
enter
addr16
iret
adc
lods
push
sarl
scas
mov
inc
es
and
bound
cltd
push
xorb
pop
add
push
pop
hlt
jg
gs
and
outsl
int3
jb
scas
jle
inc
jmp
dec
push
push
es
add
lret
xor
add
push
mov
sarl
cli
ja
sub
sar
mov
cmp
or
sub
outsb
clc
xor
inc
pop
jl
es
dec
jmp
sub
popf
cmp
nop
mov
xor
icebp
jmp
ljmp
daa
scas
das
sub
jae
jb
mov
add
jmp
mov
add
pop
clc
lock
aam
mov
or
add
pop
dec
push
push
fisubrl
lcall
fs
shlb
test
mov
pop
push
repnz
add
call
outsb
push
mov
pop
movsb
lea
sbb
popa
imul
fcompl
xchg
aam
cli
lcall
test
push
xor
pushf
aam
sub
mov
or
mov
jne
jae
push
inc
adc
jno
xchg
cmp
fldt
push
xchg
leave
xchg
add
cmp
fimuls
and
lret
xor
rolb
xchg
inc
jg
lret
lret
into
dec
addl
sbb
in
mov
test
add
xchg
lock
sub
cwtl
dec
adc
inc
loopne
je
arpl
leave
repz
push
sub
pop
lods
xor
jae
and
sub
stos
out
cmp
sub
and
in
std
push
test
or
nop
inc
jno
and
imul
lahf
loop,pn
adc
sbb
outsl
push
jg
inc
mov
and
add
xor
sbb
cmpl
cmp
add
ds
fldcw
lret
aam
mov
sahf
stos
jns
jl
rorb
sub
pop
sar
and
sahf
cmpsl
test
test
inc
ljmp
popf
aad
jnp
xor
mov
and
add
pop
cmp
cmp
jge
push
jae
or
repnz
je
sahf
mov
inc
fldl
test
movsl
xchg
mov
mov
mov
mov
cmp
test
lock
fldenv
push
fimuls
jl
out
sbb
rcr
add
and
mov
pop
jle
mov
pusha
aam
or
sbb
lods
adc
int3
add
hlt
lahf
divl
loope
outsb
repnz
push
cmp
mov
cmc
dec
xacquire
xor
dec
jl
lods
imul
pop
inc
mov
ret
xor
fstpl
xchg
push
dec
cli
mov
pop
lcall
shll
adc
lcall
mov
mov
jecxz
or
mov
pop
push
mov
cmp
sahf
lock
xor
sbb
mov
mov
mov
loopne
daa
jae
or
pop
jns
std
jp
add
xor
jl
lock
sub
mov
shll
aaa
jo
mov
mov
cmpsb
cmp
jle
push
mov
pusha
jnp
pop
and
rcrl
test
cmp
mov
mov
push
lret
cli
clc
lods
loopne
add
jne
jb
xchg
mov
push
inc
test
decb
jnp
dec
xchg
test
je
inc
or
jecxz
dec
and
movsb
call
jge
mov
insb
push
test
outsb
sub
and
sub
notb
movsb
jg
mov
or
popa
jle
mov
int3
sub
mov
dec
movsb
xor
vpaddusb
mov
mov
push
movsl
jmp
out
jne
ljmp
ljmp
ljmp
lret
lcall
cmp
xor
mov
jecxz
pop
mov
mov
xchg
flds
mov
in
mov
fdivr
mov
in
in
push
xchg
call
imul
xor
jnp
movsl
push
lcall
push
xchg
xchg
in
int
pop
cmp
stc
insb
nop
loope
in
xor
inc
test
in
inc
int
add
lods
std
imul
and
out
fs
loope
repz
out
test
push
pop
xor
ss
adc
aaa
arpl
mov
cmp
sarb
out
jnp
iret
aad
ss
shrb
jg
mov
rcrl
and
rolb
cmc
xchg
gs
mov
adc
dec
jle
out
stc
mov
xchg
lock
jle
add
andb
sbb
gs
es
les
cmovo
dec
pop
adc
sti
mov
js
movsb
jl
divb
sub
mov
inc
xchg
mov
fnstenv
std
mov
adc
jg
pop
cli
inc
sub
xchg
add
pusha
mov
or
push
dec
cmp
rcr
cmp
repz
dec
jg
dec
loop
xchg
repz
push
sbb
jns
pushf
ja
mov
mov
in
sbb
subb
std
and
cmp
stos
mov
cmp
adc
pop
lret
sti
fcoml
sub
mov
fstpt
push
inc
lahf
cmpsb
pop
mov
sub
mov
ja
cmp
hlt
xlat
out
xchg
dec
xor
orl
mov
xor
inc
pop
xlat
pop
pusha
jp
sbb
lds
sub
loop
jne
cmpl
inc
ret
stos
push
mov
mov
ret
je
xchg
xor
add
sbb
push
mov
into
dec
out
xor
das
test
inc
mov
xlat
cmp
clc
add
mov
cmp
sub
imul
jb
jge
dec
mov
mov
fldenv
xor
mov
movsl
pushf
xchg
dec
ss
leave
shrl
notl
bound
inc
insb
cmp
xchg
cmp
push
es
sub
sub
mov
jo
push
adcl
mov
sbb
push
inc
xchg
dec
dec
call
in
add
jle
repz
rorl
inc
mov
xchg
push
cmc
clc
or
sub
push
je
mov
bnd
jae
addr16
or
fucomp
sbb
ja
das
mov
xor
add
push
add
push
jne
pop
sbb
push
mov
or
jge
leave
hlt
sub
out
arpl
jno
mov
mov
fwait
and
or
push
je
mov
mov
testl
sub
push
icebp
sbb
aaa
fdivrl
add
xchg
leave
sar
mov
lret
mov
jb
mov
and
outsb
fidivl
les
add
les
cwtl
push
jle
outsl
sub
fwait
ret
lcall
imul
add
imul
sbb
mov
xchg
mov
ja
cld
and
jmp
inc
and
lods
stc
mov
js
xor
punpckhdq
nop
in
sbb
out
xchg
dec
inc
lret
dec
inc
in
std
test
std
pop
inc
les
mov
fcoms
xchg
pop
outsl
inc
inc
bound
cmp
je
mov
mov
cmp
in
andl
xor
and
lods
sub
imul
and
mov
push
or
add
iret
into
pop
inc
test
xchg
xchg
in
xor
aad
push
cmp
mov
int3
inc
jg
ljmp
cmp
xor
and
dec
push
pop
pushf
in
mov
sub
and
push
dec
sbb
sbb
and
inc
enter
pop
mov
in
pop
andb
rcrb
sub
lds
addl
inc
or
push
iret
popa
stos
push
xchg
out
mov
cmpsb
inc
xchg
jbe
mov
add
jecxz
movl
sbb
aad
mov
imul
or
mov
sub
and
pop
and
inc
pop
or
jmp
pop
and
sbb
das
dec
xor
or
xor
ljmp
and
out
test
pop
jbe,pn
cli
and
sbbb
call
pusha
adc
xor
mov
xchg
pushf
ret
mov
loop
push
cmpsb
pop
ja
push
jb
jp
jns
pop
loopne
sti
iret
push
js
pop
add
mov
int3
pop
popf
sub
cmp
pop
jne
push
pushf
cmp
xor
lods
inc
xchg
adc
cmp
aaa
lcall
cmc
lahf
test
push
add
fcomps
psllw
mov
icebp
shlb
das
leave
inc
or
arpl
and
es
pop
scas
inc
addl
mov
inc
pop
scas
jmp
lret
nop
push
mov
test
int3
lock
inc
aad
cwtl
dec
mov
stc
iret
pop
sbb
aas
loopne
jae
punpckldq
stos
jo
inc
repz
shll
movsb
xor
les
jg
js
inc
mov
ljmp
pop
outsb
push
or
scas
outsb
aas
gs
mov
shrl
xlat
arpl
add
sahf
dec
mov
push
fidivs
inc
iret
dec
pop
or
pusha
pop
popf
xor
repnz
pop
aam
xchg
cli
jns
dec
pop
lods
sub
mov
pushf
dec
out
rolb
les
push
sbb
int3
xchg
js
sarl
pushw
pushf
xor
jnp
call
and
fadds
sbb
sbb
dec
xchg
add
mov
inc
push
xchg
repz
fs
shll
js
or
inc
popf
out
cmc
int3
je
mov
push
loop
sub
xor
mov
push
sub
mov
dec
fs
xchg
sarl
xchg
xchg
dec
jp
pop
fmulp
repz
fs
adc
notb
jbe
fsubs
inc
dec
loop
sub
add
mov
xchg
sub
out
js
ja
add
divb
xchg
dec
dec
jbe
in
enter
push
negb
enter
pop
js
or
jl
fwait
pop
out
into
test
adc
mov
scas
adc
push
lret
fisubrs
movb
mov
sbb
lods
std
jno
outsb
cmp
test
mov
push
push
out
in
add
es
rcll
xor
lds
cld
jge
cmp
inc
jne
jbe
push
sbb
imul
adc
inc
daa
add
hlt
cmp
push
es
imul
mov
xchg
mov
mov
dec
xor
push
lock
or
clc
pop
loopne
inc
jo
fwait
lcall
lahf
sbb
loopne
jns
adc
loopw
xchg
es
iret
ljmp
mov
stc
out
inc
pop
dec
loop
int
add
scas
cld
xchg
xchg
add
and
int3
cmp
js
movsl
mov
fcomp
jae
fdivl
pop
push
in
or
lahf
lret
pop
cli
jg
push
cmp
jno
dec
sbb
adc
stos
xchg
in
or
sbb
in
or
sub
cs
fisubs
push
xchg
push
repnz
or
or
jno
sahf
sub
or
je
xor
ficomps
jbe
cs
cmp
xor
scas
sub
icebp
mov
inc
mov
push
push
ljmp
in
jg
push
or
ja
sub
out
mov
aam
xor
loope
popf
loop
xchg
clc
or
pop
insb
das
push
rcl
icebp
push
sahf
sub
popf
aad
mov
fcmovb
and
je
add
sub
imul
jp
sbb
push
lods
dec
sub
cmp
inc
adc
dec
cmc
mov
adc
dec
sbb
es
repnz
add
jbe
sub
jg
cmp
jmp
icebp
stc
in
movsl
pop
lock
test
les
mov
lahf
xor
cmp
jge
je
and
repz
pop
mov
jnp
iret
adc
xlat
dec
adc
mov
nop
mov
pop
es
and
popa
movsb
add
adc
mov
cmp
jnp
inc
fistpl
movsb
mov
out
mov
push
aaa
cmp
cmp
dec
paddd
inc
mov
or
jb
bound
mov
lods
stos
psubd
adc
adc
stc
cmp
lock
sub
lcall
mov
cmp
mov
nop
pop
fscale
sbb
and
cmp
mov
leave
gs
cltd
pop
jns
dec
jb
xchg
cmc
test
push
inc
arpl
inc
fiadds
mov
sub
inc
dec
adc
inc
adc
mov
mov
je
repnz
mov
rcll
sub
jb
mov
fdivrl
lret
xlat
xor
rcrl
rcrb
jle
aam
mov
xchg
sbb
divl
sbb
xor
lds
inc
fcoms
inc
adc
out
stos
jg
or
jbe
lret
in
push
mov
cltd
popa
imul
mov
js
int
movsb
lods
inc
sub
dec
pop
jnp
xchg
sbb
in
jb
fcmove
fxch
dec
stos
mov
mov
pop
fldcw
das
test
popa
xor
and
jno
inc
push
pop
movsl
shll
stos
adc
call
into
cmp
mov
inc
inc
push
xchg
lcall
dec
mov
shrl
xchg
mov
aam
add
pop
mov
ja
aad
mov
mov
sarb
sbb
push
pop
in
cmpsl
add
sti
movsb
xor
sub
mov
arpl
rolb
out
add
cmpsb
iret
dec
jl
jns
jmp
xor
and
inc
loop
mov
pop
cmc
sbb
data16
pop
ss
dec
into
add
cmp
push
test
pusha
leave
lods
repnz
jno
xor
mov
into
push
sbb
xor
push
repnz
inc
pusha
xchg
cmp
pop
sbbl
sahf
std
or
mov
push
push
popa
fs
mov
outsb
cmp
dec
add
mov
add
mov
or
xor
cmp
jns
sub
repz
repnz
int3
imul
sbb
ja
adc
push
lods
mov
lds
mov
call
into
cmp
xchg
fucomi
dec
sbb
sarb
in
outsb
sbb
mov
test
mov
pop
test
mov
sub
cmpb
and
in
lock
push
inc
cmp
xchg
add
stos
inc
push
lods
insl
and
xchg
int
dec
cmp
js
mov
xchg
dec
and
call
lret
jle
mov
sub
sub
enter
xlat
cmp
adc
dec
mov
or
js
out
fldenv
ljmp
jns
repz
and
lock
add
ret
push
xor
add
pop
and
mov
dec
xchg
cmc
xchg
cltd
stc
popf
sbb
push
popa
cld
sub
xor
lock
incl
fdivp
inc
test
xor
out
jno
push
xchg
into
in
inc
aas
icebp
test
aad
adc
fmuls
in
aas
repnz
mov
and
xor
sub
adc
or
pop
daa
das
mov
pop
cmp
daa
call
aad
jb
sub
jmp
stc
lock
jno
dec
call
fdivrl
adc
adc
inc
enter
jmp
push
cmp
pushf
scas
imul
sbb
lcall
pop
jo
aad
repz
bound
cwtl
mov
lods
clc
pushl
lds
pop
cmp
testb
test
aas
and
jmp
js
add
pop
push
int
add
lock
mov
outsb
sub
inc
inc
daa
push
addr16
sbb
mov
pop
imul
or
xchg
mov
test
cmpsb
push
enter
jmp
mov
cs
adc
cmp
mov
ss
sbb
inc
push
add
lret
mov
or
pusha
loope
mov
lock
rclb
jl
aas
mov
push
cmp
inc
and
ja
mov
jne
dec
shlb
xchg
stc
into
dec
adc
shll
rcrl
stos
stc
push
ret
jg
ljmp
sub
sub
clc
testl
pop
clc
loop
mov
hlt
mov
mov
gs
test
sti
jb
xchg
icebp
pop
test
sbb
xchg
sub
mov
add
inc
dec
cmp
cmpsb
jmp
aam
add
jb
pop
sbbl
enter
xor
cs
ljmp
lahf
pop
sbb
fs
mov
ja
lock
mov
sub
ljmp
mov
sbb
fcoml
adc
ljmp
ds
test
stos
mov
mov
cmp
sbb
mov
and
jnp
clc
inc
xchg
mov
fldt
jle
cmp
mov
lahf
lds
decl
dec
mov
pop
stc
push
aas
xchg
icebp
and
pop
lret
xor
push
arpl
dec
add
cmp
fs
pusha
xor
jno
testb
movsl
fs
pushf
jo
ret
stos
dec
cmp
outsl
js
dec
mov
ss
sub
push
cmp
mov
push
lea
xchg
call
inc
dec
or
push
mov
sahf
imul
push
movups
aas
adc
or
add
rolb
ret
hlt
int
aam
sti
pusha
cs
xor
xchg
mov
lahf
xor
push
fwait
rol
orl
adc
sarl
clc
cmp
sti
xor
mov
hlt
dec
jmp
push
adc
jnp
and
and
int3
xor
stos
xor
mov
xor
fs
mov
test
lods
int3
jp
inc
out
adc
andb
mov
pop
aas
out
fistpll
movsl
rorl
pop
das
jne
mov
mov
fidivrl
mov
and
ja
lds
or
mov
js
test
leave
mov
stos
mov
mov
add
mov
ljmp
popl
stc
xchg
inc
aas
cltd
push
pushf
sbb
std
cltd
mov
loopne
jg
sahf
lock
mov
int
and
dec
in
outsl
jbe
test
dec
nop
add
inc
push
jmp
icebp
repnz
or
xchg
lods
inc
adc
rcrb
sbb
inc
push
leave
cli
test
test
cmc
pop
shlb
pop
and
push
loope
pop
mov
out
ret
pop
ljmp
dec
test
xor
and
mov
pop
in
dec
adc
xor
stos
je
jne
push
negb
test
jns
les
iret
mov
in
xchg
mov
clc
rorl
fidivl
sub
inc
jae
in
les
xor
mov
mov
cmc
adc
pop
and
lahf
jae
scas
jecxz
fucomip
movb
cmp
js
js
xchg
stos
push
cltd
adc
roll
push
ror
sbb
cs
sarb
lock
repz
jbe
adc
cmc
adc
mov
fsubs
lahf
and
addb
push
mov
lea
jle
popf
scas
add
insb
inc
cmp
mov
sub
stc
cltd
xor
loop
out
leave
push
add
fdiv
xchg
jg
pop
sbb
fdivrs
mov
adc
xor
add
std
ret
gs
push
and
lods
adc
int3
adc
outsb
jno
mov
dec
es
fisubs
sbb
mov
xchg
lret
push
orb
popl
dec
ror
xor
lock
cmp
stc
ljmp
adc
sub
jno
or
scas
inc
mov
imul
inc
fidivrl
jne
in
cmp
dec
subb
sahf
xchg
jl
or
orl
xlat
mov
out
cmpsl
cmc
add
xor
sbb
inc
les
dec
add
and
push
push
cmp
xor
cmpsb
dec
mov
xchg
into
mov
insl
inc
pop
aam
pop
loop
dec
adcl
jb
mov
lahf
ljmp
cmp
sbbb
mov
add
clc
adc
jmp
movb
xor
shrl
push
xchg
adc
jnp
inc
or
ret
std
dec
hlt
jecxz
bound
fldl
int
jmp
push
pop
fisttpl
jno
adc
mov
sbb
or
popa
mov
cmp
add
pushf
dec
mov
std
push
jb
jns
mov
mov
call
scas
pop
pop
imulb
out
mov
jecxz
mov
mov
adc
xor
dec
adcl
mov
mov
push
sbb
push
add
clc
mov
pusha
xchg
lock
in
je
mov
and
xchg
int
es
cmp
cmpsl
scas
in
addb
out
add
cmp
fistl
stos
cld
fisttpll
or
ja
jp
xor
jge
mov
sti
movsl
idiv
roll
adc
out
mov
jecxz
out
jmp
pusha
fldt
pop
mov
adc
or
mov
int
pop
inc
add
inc
dec
lods
test
cmp
leave
jecxz
inc
outsl
mov
subl
das
dec
mov
js
cmp
mov
andl
test
mov
stos
dec
adc
ret
mov
ficompl
add
test
xor
ja
pop
adc
sbb
and
jl
mov
adc
inc
or
cli
adc
fsubrp
xor
ret
xchg
leave
shlb
fwait
push
insl
mov
js
mov
mov
inc
push
lahf
xchg
and
stos
cli
sbb
lea
cmpxchg
inc
stos
mov
lods
or
test
sub
adc
mov
sub
inc
in
push
inc
jae
xor
negb
push
adc
sub
mov
jae
out
call
cmc
pop
in
mov
dec
clc
mov
fiadds
movsb
or
into
insb
mov
fdiv
insl
les
add
mov
inc
popa
xchg
sbb
lahf
push
out
xlat
pop
arpl
push
cmpsl
xor
or
addb
test
mov
ss
mov
fdiv
lock
imul
insb
jno
pop
adc
pushf
sti
pop
fsub
sbb
add
lret
sbb
xor
and
fdivr
jae
mov
lock
lock
fwait
subl
adc
mov
shrb
loopne
push
cli
push
dec
push
bound
sub
mov
mov
lret
cmp
sub
cltd
rolb
xchg
sub
sub
pop
mov
sbb
xor
cmpsl
scas
mov
sub
and
popa
psubw
cmp
xchg
sahf
add
ja
scas
mov
and
cmp
mov
and
sbb
sub
cld
sbb
jae
in
mov
js
rclb
lods
sbb
pop
and
lcall
xchg
dec
adc
and
adcb
lock
and
xchg
ret
and
ret
or
dec
shll
cmp
js
jg
bound
inc
int
outsb
clc
aad
repz
je
sbb
fcmovbe
xchg
jp
rolb
mov
jmp
out
xor
xor
sbb
cmp
test
cmp
inc
es
mov
ja
ret
movsb
mov
or
pop
xchg
pusha
mov
sti
ja
test
fstpt
ja
leave
fld1
fsubrl
fsubrs
push
inc
orl
inc
xchg
adc
push
insb
push
or
and
dec
filds
mov
sbb
fs
pushf
push
out
or
adc
and
pop
xchg
lahf
xor
adc
lods
and
xlat
iret
push
sbb
inc
sbb
mov
cld
jl
push
push
popa
push
jne
addr16
scas
adc
int
mov
not
in
aas
mov
mov
jne
push
adc
xchg
mov
inc
in
cmpsb
rclb
inc
xor
into
mulb
mov
sub
imul
sub
iret
mov
dec
pop
mov
sbb
notb
std
jp
sahf
jl
xlat
dec
testl
stos
jb
xlat
sarb
cs
jecxz
pop
sbb
add
pop
loop
mov
mov
sbb
adc
jp
es
sub
sti
repz
jnp
mov
xor
add
jno
out
sahf
iret
stos
mov
mov
aad
and
ds
sbb
dec
sbb
aas
call
jns
pop
mov
fwait
loope
push
jbe
or
fidivs
cli
mov
and
jns
cmp
clc
cmpsb
test
scas
dec
gs
loope
push
inc
outsl
das
mov
out
insb
repnz
xor
jmp
mov
data16
loopne
xchg
sahf
adc
mov
xor
xchg
sahf
mov
mov
loope
arpl
dec
sub
shll
fistps
sub
int3
mov
cmp
xchg
nop
sahf
pop
xlat
cltd
or
ret
pop
loop
rcll
mov
int3
mov
vphadduwd
sub
je
ljmp
mov
jmp
pop
pushf
dec
pop
inc
mov
arpl
adc
sbb
call
enter
inc
sub
sub
ror
imul
loope
inc
sub
test
lret
jmp
xchg
dec
ljmp
imul
aaa
imul
sarb
jmp
and
push
sbb
mov
movsl
je
fbld
jb
adc
testb
jbe
add
pop
push
sub
es
cltd
mov
cmp
xor
andl
cwtl
js
cmp
mov
test
jp
inc
loop
leave
cmp
sbb
ljmp
add
aad
fs
and
jle
aas
xchg
mov
int
sub
push
inc
pop
les
dec
add
push
loopne
lret
cmp
pusha
lcall
and
mov
filds
inc
add
add
mov
imul
sbb
ss
or
std
lahf
cld
into
sbb
inc
jns
sbb
cwtl
pop
decb
and
inc
mov
in
movsb
adc
test
sarl
je
aad
mov
inc
mov
int3
in
pop
popa
imul
arpl
pop
xchg
adc
data16
push
mov
iret
mov
fwait
cmpsb
mov
pop
jae
sbb
movsb
xor
fcmovu
aad
in
in
ret
std
mulb
add
jno
mov
test
scas
pushf
cmp
jecxz
and
shlb
jae
or
rorb
inc
push
or
jl
mov
or
push
xor
mov
pop
pop
sub
sub
cltd
sub
loopne
xor
pop
jmp
sbb
inc
sbb
testw
inc
pop
push
sbb
loope
popf
xchg
movsb
nopl
sbb
xlat
sub
mov
in
mov
test
push
push
inc
mov
pop
adc
jle
mov
mov
lret
sbb
mov
or
xchg
mov
pop
add
inc
jo
fdivrs
scas
mov
in
pop
mov
call
mov
and
mov
or
imul
outsb
mov
lods
and
ror
pop
jge
mov
orb
aam
jno
ljmp
mov
insl
aam
lock
addr16
cmp
jb
mov
mov
sahf
sbb
in
jb
sub
dec
fnsave
add
insb
fdivrl
stos
pop
fsubr
mov
sbb
sub
stos
or
or
sub
pop
dec
nop
ret
jmp
xor
lret
mov
push
inc
repnz
mov
cmpl
movl
inc
cmp
jp
negb
out
lods
mov
or
xchg
cmpsl
sbb
in
or
mov
movsl
iret
and
xchg
pusha
cmpsb
out
hlt
cmp
push
xchg
shll
adc
dec
addr16
push
xchg
push
add
andl
mov
xlat
jnp
aad
and
lock
jmp
inc
test
aam
rorl
data16
jb
mov
orb
sbb
adc
and
mov
adc
sub
or
lahf
pop
mov
add
shll
popa
mov
dec
xchg
pop
lea
and
in
dec
adc
push
and
aas
jno
and
pop
xor
xchg
and
pop
aas
cmp
mov
in
in
inc
add
imul
pop
mov
je
cli
xchg
out
cmpsl
cmpsb
adcl
jbe
nop
and
xor
sbb
inc
xchg
loopne
addl
jne
inc
test
popf
dec
mov
mov
xchg
jne
addb
in
imul
shl
xor
add
add
ficoms
stos
cmpsl
and
add
out
fildl
jge
jb
jmp
outsb
pop
icebp
in
adc
test
cmp
lahf
xchg
mov
xchg
into
out
dec
push
push
loope
add
stc
dec
xchg
jl
sub
lods
test
scas
out
dec
fildl
ret
fstps
adc
sub
fsubrs
in
stos
outsl
add
xor
clc
add
mov
shll
mov
adc
ffreep
repnz
cs
xchg
ja
and
mov
xor
jge
mov
mov
mov
fwait
dec
add
inc
lret
jp
cwtl
std
mov
popa
inc
sbb
mov
rorl
sbb
push
out
jbe
fmuls
jb
xchg
mov
fwait
je
in
mov
ljmp
mov
cmp
pop
xchg
mov
push
mov
cld
sub
push
pop
xor
fstps
or
or
adc
pop
stos
push
jp
jns
pushf
into
inc
cs
xor
sub
scas
pop
dec
inc
lahf
or
mov
dec
fucompp
sub
xchg
movsb
aaa
addr16
pop
popf
stc
cmp
mov
fldenv
dec
add
notb
js
inc
lods
popf
pop
std
fidivrs
or
sub
aam
iret
mov
lret
test
pop
adc
ja
scas
sbb
pusha
or
xchg
sbb
fcomps
jle
push
add
inc
sub
mov
push
jns
decl
dec
and
jnp
push
int3
and
lods
data16
push
xor
mov
pop
mov
in
dec
fildll
sub
imul
fcmovnu
push
stos
cmp
dec
inc
faddp
js
cmp
pop
test
fsubs
aam
push
xchg
bound
mull
xor
test
and
test
mov
lahf
test
testb
punpckhdq
cs
lcall
sub
dec
jno
shll
push
jle
divb
jl
or
sbb
int3
scas
xchg
dec
or
jne
data16
les
sarl
lods
lret
or
sub
sub
push
cmp
and
and
xchg
pushf
push
sti
icebp
add
je
rcl
pop
mov
cmp
add
fiadds
iret
fisubrs
fidivl
xor
inc
mov
push
mov
iret
popa
fnstenv
xor
ret
pop
aam
sbb
xchg
and
sub
push
fwait
dec
dec
cli
dec
subl
movsl
dec
loopne
cmp
stos
popf
mov
or
lods
dec
std
es
mov
out
push
sub
and
cmp
dec
int3
or
inc
mov
rorl
ljmp
mov
lods
xchg
mov
scas
aas
jle
rorl
insb
outsl
movb
cmp
and
pushf
dec
push
sub
shrb
shr
xchg
push
dec
cs
out
dec
data16
sbb
pop
dec
xchg
enter
test
add
rcl
sub
push
sbb
pop
pop
leave
lcall
in
xchg
jae
sbb
aas
sbb
inc
cltd
ror
icebp
push
ja
hlt
insb
pop
fildl
sti
mov
push
addr16
out
lods
movsb
out
ss
mov
mov
ja
fmuls
adc
jne
mov
sub
inc
inc
xchg
add
pop
iret
cmp
mov
lods
jnp
fldl
pop
adc
rorb
sahf
dec
fistl
daa
jns
push
movsb
jne
push
into
xchg
cmc
aaa
sbb
mov
add
and
mov
push
cmp
xor
cmp
pop
and
xor
pop
jnp
fbstp
fsts
mov
gs
bound
or
fwait
jle
pop
pop
add
jp
mov
sub
mov
push
shll
pushl
xchg
loopne
ja
repz
mov
pop
pop
cmc
pop
gs
add
pop
pop
movsl
ss
addb
shll
aaa
sub
out
sub
xor
aas
js,pt
or
in
lock
arpl
jecxz
push
movsl
clc
sbb
pop
xorl
stos
push
sbb
imul
imul
cmp
iret
movsb
pop
pop
cmpsb
dec
mov
in
inc
or
mov
adc
xchg
push
ret
jl
adc
addr16
or
lcall
call
sahf
fistps
mov
arpl
sub
out
pop
dec
icebp
xchg
jecxz
cmpsl
das
push
adcb
bound
mov
xchg
xchg
dec
rep
arpl
test
pop
fcmovb
lahf
mov
pushf
inc
lcall
stos
xor
imul
out
xor
jge
push
nop
insb
js
pop
inc
rcl
xchg
test
ja
jge
jge
inc
adc
mov
pop
push
cmp
cwtl
jne
jno
jns
push
and
ret
ss
adc
test
or
cmp
fxch
sbb
hlt
cwtl
icebp
scas
mov
xorb
and
aad
or
aam
add
dec
cmp
cltd
lahf
pop
cmovno
pop
sub
addr16
test
push
sahf
adc
or
loope
jp
push
inc
mov
jbe
rolb
xchg
inc
jno
das
jecxz
add
test
aaa
cmc
xor
mov
shl
dec
int3
sbb
lods
repnz
adc
ror
push
inc
add
pop
sub
xchg
mov
and
push
pop
sub
cs
mov
lods
adc
cmp
leave
mov
sub
stc
sbb
push
cmp
icebp
cwtd
fisubl
add
mov
int
icebp
lock
add
out
fiadds
adc
add
push
cmp
add
ret
adc
push
mov
fs
fwait
jae
sahf
lret
sub
inc
jno
mov
sbb
loope
sbb
das
dec
xor
or
mov
mov
call
mov
and
mov
ftst
and
sub
mov
dec
mov
out
xchg
dec
jecxz
adc
in
sahf
loopne
adc
test
adcl
add
push
xchg
clc
and
stos
lret
in
adc
push
test
es
sub
ja
ds
fbstp
bound
mov
pushf
lret
add
enter
sub
add
jnp
fdivs
xor
hlt
push
shlb
sub
mov
push
add
jle
push
xor
adc
inc
ret
fimull
cmpsb
movsb
sub
outsb
hlt
push
stos
addr16
das
shll
filds
sub
fcoml
pop
lahf
push
inc
push
sub
scas
insb
sub
int3
sti
mov
mov
loopne,pt
aam
or
jmp
iret
lcall
mov
pop
cmp
xchg
or
push
dec
inc
xor
repnz
es
shl
lret
shrl
in
push
mov
push
aad
in
out
daa
test
sbb
repnz
mov
loopne
add
test
xchg
push
dec
add
leave
outsb
fstps
inc
loopne
lret
ja
pop
sub
cmp
jp
popa
popf
lods
xor
lcall
sahf
push
rolb
adc
mov
shll
std
aam
push
data16
push
or
aam
rclb
popf
mov
fs
jecxz
call
into
lcall
leave
push
and
jnp
fidivrs
sbb
loopne
jne
ja
lock
test
dec
movsl
std
push
lock
jae
shrb
xor
mov
sbb
xor
stc
pop
cmp
clc
out
cwtl
mov
leave
push
or
dec
fwait
aas
xchg
lods
psrad
or
mov
dec
icebp
pop
add
pusha
add
leave
pop
and
lock
xlat
sbb
inc
xchg
or
icebp
test
dec
repnz
or
jne
inc
inc
adc
shll
scas
mov
addr16
xor
sbb
jl
and
and
push
add
ljmp
sti
jle
aad
test
repz
dec
push
leave
push
pop
cmpl
cmpsl
cmp
inc
lahf
pop
in
pop
test
sbb
xchg
fs
and
sbb
adc
pop
divw
mov
jecxz
xor
xchg
sbb
jg
xor
push
iret
test
loop
mov
jl
push
cmp
dec
in
mov
xor
divl
and
fwait
js
sbb
cmpsl
int3
adc
pop
push
push
lods
adcb
cmpsl
leave
mov
sub
fadd
mov
out
int
jg
sub
xchg
and
sahf
xchg
lahf
psubusw
std
iret
out
dec
xor
clc
mov
sbbl
sbb
mov
pushf
divl
or
cmp
cmp
aaa
xchg
shll
les
repnz
sbb
pusha
xlat
lret
cmp
out
ss
rclb
adc
adcb
sbb
icebp
dec
sub
or
cmpsb
jns
das
std
sti
in
sub
scas
insl
and
pop
jmp
jge
jge
push
jo
ret
aad
mov
push
scas
dec
push
fnstenv
int3
iret
shll
imul
subl
jno
dec
ljmp
std
rclb
lcall
filds
test
xlat
jg
mov
lock
movsl
into
jno
cmpsb
repnz
xor
out
xor
add
dec
inc
mov
stos
mov
clc
xlat
aas
in
fwait
mov
imul
cwtl
jle
test
data16
inc
std
push
add
insl
fcmovbe
mov
ret
es
mov
push
inc
sbb
fstl
test
mov
movsl
inc
dec
pop
loope
mov
add
fimuls
stc
sub
test
xlat
add
sub
ds
iret
jbe
jp
call
orl
cmp
pop
mov
icebp
loope
jbe
add
pop
push
test
inc
movsl
aas
cmp
jo
inc
in
ret
scas
jp
pop
rcll
repnz
int
mov
test
in
shl
cmp
jbe
lcall
mov
jno
sbb
test
rcrl
inc
lahf
addr16
ljmp
sti
sub
sbb
add
pop
push
sbb
into
or
stos
xlat
fs
into
es
mov
lods
mov
sbb
cwtl
dec
pop
pushf
or
mov
mov
xor
cmpsl
mov
ret
jle
loop
shlb
xchg
mul
movsb
imul
push
shll
sbb
test
lods
adc
pop
sbb
mov
mov
xchg
cmp
daa
adc
aam
sub
nop
and
sbb
jge
test
hlt
adc
rclb
and
jne
icebp
sarb
in
subb
inc
in
fdivrs
sbbb
inc
psrld
cmp
pop
ljmp
cld
sbbl
jp
inc
lock
mov
int
xor
add
dec
subb
daa
sub
xchg
lret
or
jmp
out
cmp
jb
ss
fistl
adc
dec
push
mov
push
mov
lock
aas
xor
inc
pop
je
call
movswl
imul
dec
shlb
movsb
mov
pop
xchg
dec
pop
cmp
jnp
jge
xor
adc
rcl
gs
addb
divl
push
ds
jae
icebp
cmpsl
mov
call
adc
aas
fcoml
sti
mov
xchg
jecxz
js
mov
rolb
cltd
aam
dec
jp
sahf
and
pop
fwait
cwtl
jecxz
and
movsl
mov
loop
fmuls
movsl
movsb
mov
testl
jae
sub
mov
je
ss
push
adc
sbb
push
mov
cmp
or
and
addr16
icebp
inc
rcr
xchg
push
sub
pop
mov
inc
or
cmpsb
push
dec
mov
shrl
into
xlat
jae
stos
cli
call
insl
cld
imul
shl
push
jnp
or
dec
dec
repnz
js
push
cmp
cmp
add
adc
into
je
sbb
inc
hlt
xor
hlt
into
sbb
dec
ss
out
mov
push
inc
add
sub
push
out
inc
xor
clc
out
cmp
int
shlb
cwtl
and
or
into
mov
or
imul
pop
pop
and
push
leave
mov
xchg
push
clc
movsl
test
fucomi
xchg
sbb
mov
lret
mov
sar
pop
aam
cltd
lahf
pop
cmp
cld
mov
xor
push
sbb
fmull
cmp
es
or
mov
test
sti
push
hlt
das
int
or
das
mov
fdiv
roll
add
push
jmp
xor
xchg
popf
mov
cmp
cmc
cmp
dec
scas
es
frstor
sub
out
jns
mulb
popf
cld
add
ja
sub
and
or
push
pop
rcrb
jg
pop
ss
lods
add
adc
jne
push
icebp
scas
or
mov
in
mov
daa
shl
inc
jge
and
lea
xchg
lock
and
or
and
enter
repnz
outsb
cwtl
loopne
inc
cmp
adc
cmpsb
mov
cmp
and
lods
fistpl
pusha
sbb
push
sbb
in
add
stos
add
std
test
xchg
mov
cmp
in
mov
mov
cmp
int
xchg
sub
loope
mov
in
cli
fldcw
or
sbb
sbb
inc
add
sub
pop
dec
add
aad
xor
ss
jecxz
test
fidivl
leave
push
adc
in
pop
pop
or
pop
pop
clc
sbb
les
push
arpl
mov
cmp
mov
jecxz
jb
imul
lea
and
xor
out
mov
test
lods
je
out
imul
and
inc
xor
aas
dec
inc
pop
jle
push
ja
sbb
pop
and
call
out
or
iret
mov
add
hlt
test
lcall
fistl
shlb
imul
in
loope
mov
inc
adc
jnp
mov
mov
int
and
cmpsl
xchg
repz
pushf
dec
testb
inc
cmp
inc
push
pop
addr16
andb
outsb
out
pop
push
adc
cwtl
lahf
mov
out
jge
mov
mov
out
nop
sbb
jle
sbb
in
push
pop
mov
mov
fwait
pop
frndint
subl
daa
mov
mov
pop
hlt
faddl
push
sub
test
pop
inc
cmp
es
xlat
ds
shrb
fldcw
pop
mov
jne
shrl
cmpsl
pop
inc
pop
inc
pop
dec
inc
jb
adc
xor
test
sub
insb
xchg
outsb
cs
mov
call
inc
push
testb
stos
dec
fistpll
ficoml
dec
ss
stos
test
sbb
aaa
or
jp
inc
or
mov
dec
inc
in
js
or
jl
or
fdivrs
shr
inc
cmp
sbb
pop
pop
xor
dec
pop
or
mov
bound
fnsave
aam
imul
gs
sti
mov
pop
cmpsl
int
mov
and
pop
test
adc
mov
xor
xchg
loope
mov
pop
mov
ja
pop
mov
lods
dec
or
daa
fsubrl
ljmp
xchg
clc
pop
mov
in
ds
sub
out
cld
mov
das
mov
aad
xchg
incb
mov
pop
lock
out
inc
dec
mov
mov
je
xor
loop
adc
sub
es
scas
cmpsb
adc
xchg
pushf
cmp
xlat
push
sub
idiv
push
js
xor
leave
cld
mov
mov
pop
lcall
insl
push
leave
sub
loope
jnp
mov
popf
xorb
ror
fucomi
call
arpl
insl
dec
lock
dec
lock
cmp
sbb
inc
adc
dec
jle
loopne
out
sub
xor
jae
sub
lret
lcall
call
xchg
out
and
adc
add
stos
dec
insl
pop
push
pop
loope
sbb
jp
sahf
xor
sub
push
sbbb
fidivrl
lds
push
jb
mull
adcl
cmp
movsl
lret
popa
jo
outsl
mov
inc
adc
push
js
push
cmp
mov
cli
and
cmpb
inc
or
out
cmpsl
and
gs
xchg
loop
adc
mov
jno
out
inc
sub
sub
aaa
push
push
fldt
and
daa
push
test
inc
dec
push
cmp
mov
jg
movsb
sti
xchg
in
ja
mov
out
outsb
mov
iret
pop
inc
and
adc
jecxz
xor
adc
leave
stos
or
xchg
divl
sbb
mov
aam
mov
adc
mov
sub
js
icebp
xchg
hlt
push
push
inc
jnp
fsubl
nop
jge
push
sbb
sahf
inc
cmp
push
loope
jns
add
mov
fimull
xchg
ret
xlat
fmul
push
scas
mov
das
mov
inc
imul
mov
sahf
ds
movb
loope
sub
lea
xorl
sbb
adc
ss
or
inc
or
jae
mov
and
imul
cmpsl
fs
pop
inc
loopne
leave
push
sti
push
jae
push
sbb
packsswb
xchg
cmpsb
lds
fcompl
rcll
lock
sbb
fldt
call
imul
nop
xchg
cmp
ret
pop
jne
scas
push
xor
stos
repnz
pushf
aam
int3
into
outsl
lock
and
cmp
aas
mov
shlb
lods
adc
add
adc
ss
shrb
jo
mov
dec
stos
lds
xchg
adc
mov
mov
mov
sti
loope
cmpsb
xor
mov
pmullw
pop
jp
jle
push
shlb
clc
neg
push
xchg
cmpsb
adc
jae
out
and
pop
cmpsl
movsb
mov
mov
test
das
shl
sbb
xchg
jb
sub
lret
fimull
add
div
test
push
jb
adc
out
sets
push
jno
sub
or
mov
dec
xchg
xor
pop
add
xchg
xchg
xchg
aad
xchg
push
jg
ret
movsb
mov
xor
rolb
cmpsb
outsb
pop
mov
in
jo
gs
fisubl
inc
jne
jne
test
fsts
adc
in
cmpsb
adc
sbb
cmc
sbb
mov
and
mov
ss
jo
rcrl
das
jmp
outsl
cmpsl
inc
rcrb
daa
jae
nop
inc
scas
test
addr16
dec
add
data16
sti
or
jns
fisubs
xchg
push
pop
pop
loope
pop
add
pop
nop
sbb
js
mov
xchg
jl
dec
ret
pop
or
inc
add
test
mov
out
and
xchg
lret
pop
push
cmpsl
xchg
cmpsb
out
mov
arpl
mov
xchg
rcrb
xor
leave
cmpsl
insb
push
stc
and
dec
jg
sarb
mov
or
jecxz
jp
ret
mov
lret
jge
xchg
dec
jo
lcall
cld
les
mov
sbb
outsb
jne
jecxz
mov
dec
std
mov
mov
stos
cmp
push
fistl
sub
fcomps
daa
popa
outsb
cmc
add
mov
adc
jge
xor
iret
cwtl
mov
mov
scas
push
mov
jmp
fcmovnu
mov
fsubl
xor
or
mov
leave
cmp
test
pop
clc
sub
mov
mov
je
pop
enter
cli
out
xchg
mov
xchg
insl
stos
pop
addl
jmp
mov
ror
add
inc
push
outsb
pusha
shlb
dec
pop
dec
clc
repz
pop
insb
lds
loop
imul
in
cltd
mov
sbb
lret
adc
in
dec
push
xchg
popa
jns
pop
pop
mov
xor
jns
lods
lea
loop
ret
popf
pop
lds
inc
dec
cmp
shlb
and
cmp
xor
data16
lahf
int
xchg
repz
and
inc
loope
and
idivl
xchg
dec
inc
dec
dec
and
pop
pop
xor
ds
or
into
cmpsb
xchg
lcall
pop
test
mov
mov
xchg
aaa
or
inc
call
xchg
icebp
push
leave
int
cmpsl
cmp
mov
jne
fwait
mov
loopne
aas
aas
loopne
scas
call
sub
mov
jo
lods
cmp
mov
mov
lods
loop
call
test
mov
shrl
sti
xor
fmuls
pop
xor
pop
mov
cld
je
insl
and
mov
mov
mov
jl
ja
in
divb
push
adc
sarb
mov
or
inc
cmpsb
adc
fimuls
pop
xchg
ret
call
cmc
adc
fwait
cld
xor
fsubrl
in
jle
test
cli
jae
xchg
loope
lahf
xchg
shrl
pop
mov
cmp
shrl
dec
shrl
mov
and
repnz
ss
loopne
push
ds
and
sahf
test
add
jecxz
jae
or
jge
cmp
xchg
inc
mov
jns
mov
lds
jmp
jmp
cld
jo
fldcw
or
fnstsw
jmp
andb
out
scas
divb
xor
cwtl
lret
test
mov
adc
cld
jne
mov
dec
jo
jb
lds
mov
sub
jl
fwait
jno
dec
imul
scas
sub
test
pop
pusha
cli
aas
or
sub
push
push
popa
clc
mov
mov
sbb
push
mov
aaa
add
mov
xchg
or
mov
cwtl
pop
aad
les
lret
and
xchg
dec
adc
leave
mov
sbb
rorl
sar
adc
iret
mov
cltd
pop
icebp
xchg
mov
cli
lret
jp
push
mov
testb
sbb
mov
movsb
int
scas
notb
in
jp
arpl
mov
jecxz
movsb
xor
xor
or
repz
stos
push
mov
xor
xor
aam
rcrl
outsl
repnz
gs
outsb
pop
cs
and
std
test
mov
outsl
out
pop
or
add
inc
mov
add
push
outsb
mov
mov
push
ja
nop
push
inc
leave
rol
pop
cmp
mov
adc
mov
sbb
dec
mov
iret
and
lods
xchg
lret
imul
mov
or
and
stos
lods
xchg
add
fisttpll
sbb
lret
imul
cmp
dec
fcmovne
imul
test
jecxz
ljmp
xor
mov
jns
sub
fstp
sub
filds
sbb
mov
sbb
mov
xchg
sbb
sahf
out
sbb
insl
addr16
sahf
loope
ss
fisttpll
imul
cli
js
mov
xor
out
outsb
or
insl
mov
loop
mov
sbb
xor
adc
in
inc
mov
xor
inc
inc
aam
int3
out
dec
pushf
add
ljmp
inc
dec
mov
ds
mov
mov
enter
pop
cmc
aas
mov
out
cltd
lea
mov
mov
jge
sarb
scas
insl
push
xchg
lea
pop
lock
pop
call
lcall
inc
mov
ret
imul
pop
stos
lds
inc
je
mov
cmp
mov
les
mov
insl
push
add
xor
sbb
xchg
outsl
mov
das
mov
cwtl
out
push
lahf
es
cld
mov
dec
sbb
xor
sbb
sbb
fmuls
shll
or
outsb
push
inc
in
jle
jae
rcl
mov
scas
dec
jle
sub
cmpsl
sub
add
fistps
fwait
jge
repnz
push
pop
not
xchg
aam
xchg
fmuls
lods
mov
test
test
lock
pop
xchg
mov
cs
cmpb
dec
inc
inc
push
insl
sub
cld
mov
insl
xchg
orb
jl
repnz
mov
aam
mov
lods
aam
dec
or
bound
js
popf
inc
lds
adc
push
mov
scas
push
sbb
dec
cld
test
movsb
ret
mov
push
xor
sbb
mov
xchg
test
aam
mov
fsubrs
loopne
mov
pop
cs
xchg
hlt
add
repz
cmp
mov
out
lods
jg,pt
pop
mov
test
js
or
movsl
mov
fwait
or
dec
mov
push
stos
add
add
cmp
lods
out
mov
jle
jmp
test
jle
push
jmp
stos
add
insl
ficomps
xchg
mov
or
fnstsw
mov
cwtl
push
sub
xlat
mov
rorl
das
mov
xor
test
cmp
cmp
leave
in
or
jp
call
and
outsb
iret
mov
push
aas
mov
icebp
shll
out
in
mov
out
out
cmp
xor
inc
mov
cltd
lds
dec
and
out
jbe
cmp
mov
xchg
lret
dec
std
loopne
icebp
pop
movsb
jno
pusha
add
pop
sti
pushl
jo
movsb
repnz
aam
and
jne
dec
push
test
mov
cli
imul
jbe
shrl
xor
jne
cli
add
or
cmc
cli
leave
add
adc
push
push
mov
mov
cmpsl
ret
lods
jbe
lods
pop
idivb
aad
and
fistpl
andl
adcl
stos
xor
fisubrl
mov
lea
mov
test
cmp
add
into
out
mov
and
sub
scas
jge
out
rorl
push
scas
test
dec
test
cmp
cmp
sub
xor
mov
in
cmp
adc
shr
es
dec
cmpsb
xchg
mulb
imul
aaa
aas
popf
mov
xchg
cmp
sbb
aaa
jae
cwtl
mov
xchg
outsb
sbb
pop
outsl
imul
sbb
incl
and
mov
movsb
pop
dec
xor
repz
add
mov
sbb
pop
cli
cmp
scas
fmull
mov
add
inc
stos
push
jnp
inc
mov
mov
adc
adc
jnp
bound
mov
sub
jmp
pop
jmp
pop
fildll
popf
mov
mov
icebp
pusha
or
ss
pop
fisubl
movsb
dec
sbb
icebp
mov
xor
fistps
out
sub
cmp
mov
mov
push
ss
adc
xlat
inc
dec
fimuls
mov
jo
mov
cli
pop
or
mov
mov
inc
in
das
cmpsl
pop
xor
cs
add
movsl
cmp
jmp
push
cs
adc
test
xchg
mov
sbb
add
int
in
xor
xlat
jbe
scas
iret
jecxz
cmc
xchg
push
mov
cmp
aaa
mov
comiss
jb
shrb
es
fiaddl
mov
imul
in
fnstenv
mov
adc
out
test
xor
xor
test
mov
test
lds
jl
fs
enter
xchg
or
test
jbe
sbb
int
adc
cmp
outsw
xchg
outsb
aas
pop
leave
in
adc
ror
in
shlb
or
dec
vsubsd
mov
setbe
cmp
ljmp
imul
cmpsl
or
xlat
sbb
loope
cld
sbb
movsb
xor
jno
aaa
je
cmpsb
icebp
and
push
cmp
dec
inc
cltd
sbb
pop
sbb
sbb
inc
sbb
jnp
dec
add
or
push
jns
arpl
lea
pusha
push
jle
enter
inc
or
sarb
leave
pop
dec
mov
lret
add
push
or
cmpb
jb
hlt
jl
call
fmuls
cld
mov
mov
pop
push
insb
clc
loopne
pop
mul
jmp
cli
jb
inc
mov
hlt
jne
lods
push
scas
in
cs
aam
shlb
ret
mov
inc
jbe
pusha
mov
sbb
mov
inc
addb
sahf
mov
pop
add
push
jnp
insl
lahf
xchg
sub
rcrb
aaa
stos
jbe
push
jl
mov
or
mov
aam
lods
cmp
dec
jl
lods
scas
fldl
adc
inc
cwtl
adc
mov
xor
cwtl
pop
mov
std
mov
xor
push
les
push
pop
cltd
ja
popa
xchg
lahf
nop
sbb
and
jnp
mov
lods
cmp
or
xor
inc
dec
adc
dec
mov
sbb
cmp
mov
movsl
mov
sub
jbe
sti
jnp
insb
sub
pop
push
shl
es
or
xchg
stos
jnp
inc
ret
mov
sbb
fsubrl
dec
mov
cmpsl
movsb
adc
outsb
add
fmul
jns
mov
fistpl
sub
subb
mov
loop
pop
mov
jg
clc
xchg
cs
scas
xor
mov
ja
fucom
mov
ss
mov
sbb
pop
psraw
iret
or
sub
mov
loope
sub
insl
xchg
aad
push
xchg
mov
push
and
daa
inc
mov
push
jb
inc
push
mov
sbb
jmp
ja
lock
in
jge
fnstsw
add
lock
outsb
outsb
adc
outsl
add
mov
sbb
sub
test
jle
jo
sbb
mov
mov
imul
jae
lods
xchg
sbb
push
call
xor
sahf
dec
gs
inc
mov
add
sbb
adc
imul
xchg
xor
add
jp
mov
stos
es
inc
mov
cwtl
mov
sbbl
cmc
into
or
lods
mov
sub
movsl
or
cltd
aaa
rorb
and
cltd
mov
inc
add
mov
stos
push
adc
pushf
xor
mov
decb
addr16
out
pop
sbb
scas
adcl
popa
insl
and
inc
cmc
popl
jns
jmp
cmpsb
and
inc
je
or
lahf
popa
roll
shl
sub
xor
mov
lods
adc
jle
push
aas
mov
lahf
sbb
add
add
inc
sbb
outsl
or
loop
push
cmpb
push
pusha
adc
jecxz
jns
loope
cmpsb
repz
enter
and
sub
cli
cmp
jle
lcall
imul
add
push
sbb
push
push
int3
xor
ret
add
sbb
xchg
addr16
inc
cmpsb
sbb
idivb
into
add
adcl
adc
cmp
jne
jae
pop
push
inc
mov
xchg
xor
fisttpll
xchg
ljmp
inc
and
aad
pop
dec
inc
xor
mov
rcrb
sub
rorl
fisubl
jecxz
pop
jns
inc
fs
xchg
adc
daa
es
mov
inc
movsb
inc
push
sbb
imul
dec
xchg
js
ds
push
cltd
out
pop
mov
mov
mov
insl
cltd
mov
lods
and
and
or
dec
pop
sbb
inc
xchg
pop
repnz
xchg
cmpb
stos
daa
dec
mov
inc
cmp
push
mov
inc
add
popw
rorl
pusha
fsubl
clc
push
decb
pusha
pop
add
mov
repz
stc
dec
es
je
in
pop
adc
add
repnz
pop
or
mov
imull
mov
push
test
lcall
fdivrl
xchg
sbb
pop
hlt
inc
push
jbe
das
pop
testl
adc
jl
pusha
jge
mov
mov
push
gs
shlb
cmpsb
inc
jge
xor
lds
rcl
lcall
inc
mov
jl
inc
sbb
jge
push
cmc
sub
btr
dec
inc
data16
cmpsb
mov
inc
aaa
sub
daa
add
subb
das
jno
push
push
shll
dec
addr16
inc
popf
mov
in
mov
mov
gs
js
xchg
mov
mov
pusha
cli
lock
mov
or
jo
stc
xchg
or
or
mov
in
add
jo
movsl
cwtl
gs
jle
push
pop
lahf
out
dec
in
shlb
push
add
xor
dec
add
fucomi
dec
mov
mov
xchg
add
jl
mov
mov
xor
in
test
pushl
mov
sarl
mov
pusha
das
adc
outsb
lret
outsl
sub
fcmovnb
pop
rcrl
xor
pop
icebp
jne
in
or
and
pop
mov
xchg
outsl
xor
dec
flds
test
xor
sub
loope
push
cli
cmp
sbb
stc
lods
dec
out
lock
pushf
and
out
add
jge
dec
push
add
jno
stos
insl
jbe
pop
jecxz
mov
aam
fdivl
pop
jne
rcll
mov
ror
fwait
rcll
insb
cltd
cli
loop
push
pop
xchg
mov
iret
mov
add
outsl
cmp
sbb
sbb
arpl
push
loope
sbb
test
lret
jns
sbb
mov
out
fmull
out
imul
mov
push
xlat
jp
push
repnz
sti
popfw
jmp
stos
jne
mov
dec
imul
not
in
sbb
and
stc
or
js
jae
mov
ds
dec
mov
mov
cmpsb
adc
in
jmp
sqrtps
ds
fs
mov
adc
lret
std
insb
loopne
test
adc
sbb
ret
cmp
andl
add
out
sbb
mov
sti
mov
aam
inc
pop
shlb
or
xor
insl
jbe
data16
ffreep
jae
popa
popf
sbb
bound
xchg
pop
inc
fnstenv
fisttpl
mov
shrb
push
or
lcall
mov
pop
in
mov
and
dec
add
aam
pop
in
out
push
outsl
in
adc
inc
inc
sub
lcall
jbe
rcl
mov
cmpsb
nop
iret
shll
mov
int
je
push
or
jmp
dec
stos
test
scas
push
mulb
dec
dec
fwait
repnz
add
roll
scas
lcall
test
xorl
or
gs
push
mov
mov
xchg
fisttps
jnp
mov
mov
stc
stos
add
pop
pop
ret
jg
js
mov
mov
repnz
lret
lea
fwait
push
jmp
xchg
shll
mov
or
mov
cld
pushf
jbe
xor
sbb
xor
stos
mov
arpl
cli
and
or
stos
push
ljmp
fucomp
mov
pop
stc
ds
xchg
jne
cmp
lock
sub
fisubrl
cmpsb
cltd
mov
xor
popf
out
mov
xlat
add
xchg
jno
jp
mov
stos
sub
into
lods
rcll
faddl
sbb
pop
and
mov
imul
adc
mov
pop
xchg
push
mov
push
or
adc
mov
sub
adc
mov
lret
out
inc
call
mov
dec
mov
jl
aam
sub
jg
aaa
or
mov
test
fcmovne
std
pop
imulb
xchg
sbb
lcall
jae
cmpsb
and
pusha
iret
lods
lret
popf
hlt
fs
or
in
inc
fwait
in
dec
pop
add
xchg
adc
pop
lret
loope
lods
mov
cld
fwait
ja
dec
cltd
int
stos
loope,pt
sub
adc
movsl
clc
push
out
rcll
mov
stc
mov
fists
call
mov
fistpll
leave
fadds
je
cmp
jecxz
decl
aas
notb
cwtl
xor
dec
sub
fistpl
jp
pop
jbe
into
push
dec
pop
ljmp
xor
xlat
inc
pop
fwait
gs
jle
orb
cmp
out
arpl
inc
and
xchg
outsb
test
addr16
pop
enter
or
ficomps
in
loop
sub
dec
cmp
sar
mov
arpl
xor
shl
or
call
in
cmp
arpl
lret
movsb
jb
xchg
adcl
icebp
inc
xchg
mov
jns
mov
negl
cmp
in
lret
or
pusha
sbb
sbb
cld
or
fldl
xor
pushl
popf
sub
cmpsb
ret
push
roll
aas
stos
xchg
inc
and
test
inc
cmp
dec
cmp
xor
and
sbb
arpl
shr
push
lods
sbb
scas
pop
sbb
mov
sub
push
xor
ret
stc
dec
inc
dec
xor
mov
xchg
mov
pop
int3
mov
rcr
xchg
rcr
test
lahf
stos
sub
cli
or
out
xor
lret
sarb
loope
gs
mov
sbb
sub
push
dec
adc
pop
fwait
test
xor
lods
cli
adc
push
outsb
loop
out
outsb
xlat
repnz
sbb
ficompl
or
in
fiadds
call
mov
adc
sbb
outsb
fmul
loop
and
inc
mov
sub
negl
sbb
mov
xchg
push
rcr
cs
fldl
fs
out
adc
shr
in
mov
cmp
ja
inc
rclb
lods
pusha
add
pop
fidivrs
jne
shrl
mov
adc
xchg
jp
xor
push
in
outsl
inc
ret
add
mov
adc
fisttpl
cld
sahf
push
popl
clc
lret
adc
les
rol
das
mov
fwait
mov
jo
mov
outsb
xchg
sub
mov
or
mov
popf
jbe
sub
add
fistpll
push
out
dec
pop
bound
jg
push
inc
adc
scas
push
adc
loop
sub
jnp
xchg
mov
inc
push
mov
in
call
dec
js
pop
dec
push
mov
sahf
lret
cltd
cmp
lea
mov
cmp
fstpt
rclb
das
into
lds
js
dec
pushf
lahf
jnp
jg
mulb
mov
out
test
test
cmp
shlb
and
iret
adc
mov
mov
or
or
mov
pushf
mov
mov
sub
aaa
repz
fdivrs
jmp
dec
jecxz
xchg
mov
sbb
je
adc
out
dec
or
shrb
xchg
jns
outsb
cmpsb
test
pushf
cmp
cs
inc
jg
imul
leave
and
jne
int
stos
mov
xor
pop
fldenv
or
mov
and
or
sahf
lea
mov
mov
sub
add
mov
popf
jl
dec
jmp
or
into
cmp
test
fldl
mov
loopne
jns
push
es
decl
lods
jle
dec
mov
hlt
sbb
fwait
inc
stos
xchg
xchg
or
rcr
pop
or
sbb
sbb
cmc
push
jecxz
mov
fiadds
jnp
shlb
inc
stc
mov
jle
dec
shll
inc
xor
stos
adc
cltd
stos
sahf
adc
mov
cld
xor
popa
lcall
out
pop
mov
lret
imul
lods
inc
lods
outsb
rorl
dec
nop
cwtl
sbb
xlat
lahf
je
dec
mov
movsl
inc
shrl
insl
jmp
imul
or
dec
lcall
cli
mov
sub
mov
mov
fcomp
lods
mov
adc
lea
add
xor
jge
mov
gs
xor
in
rolb
pop
jno
cli
lods
lds
out
dec
sub
pop
jmp
outsb
leave
sbb
jbe
daa
shl
mov
sbb
push
repnz
xor
xchg
adc
pop
scas
popf
mov
ja
pop
lock
popf
cwtl
rcrb
pushf
lods
mov
in
cli
jbe
push
aam
notl
sub
mov
dec
and
test
mov
dec
addr16
movsl
dec
stc
sbb
js
mov
xchg
insb
and
mov
jp
shl
xor
mov
xchg
fdivr
inc
cltd
cmp
stc
call
or
cwtl
lds
pushf
xor
icebp
pop
xchg
lods
sbb
lock
and
test
pop
jl
std
dec
mov
ds
ja
in
and
ljmp
mov
push
cltd
xchg
and
adc
or
je
add
pop
jno
outsl
mov
outsl
jge
push
jg
sub
sub
xorl
sahf
mov
sti
pop
xor
dec
xor
jo
pop
cltd
sub
popf
and
cmp
pop
mov
push
pop
out
test
in
repz
sbb
out
push
scas
mov
mov
sbb
pop
shll
addr16
psubw
or
cli
and
lea
and
xchg
mov
sbb
mov
xchg
inc
idivl
scas
jns
inc
stos
cmpsb
and
frstor
ret
fadd
adc
and
sub
or
jmp
test
dec
or
mov
lcall
fstps
jecxz
sbb
imul
testb
cmpsl
lock
cmp
xlat
add
or
int3
pop
std
xchg
lahf
in
cmp
sub
adc
add
xchg
cli
jg
xchg
push
jns
sub
nop
adc
lock
pop
movsb
cmp
and
imul
jae
cmp
sub
loop
dec
push
sbb
jo
add
pushf
jg
sti
je
cltd
jmp
inc
or
leave
int3
and
loope
sbb
add
inc
jmp
je
int
pop
ss
shll
mov
in
pop
mov
in
ret
mov
cltd
rolb
aam
sub
ja
sbb
mov
ror
test
sub
xchg
inc
push
clc
bnd
addr16
lds
jmp
fwait
dec
add
or
mov
pop
xchg
inc
cmc
or
inc
rcrl
sub
lock
jecxz
sub
cs
jmp
dec
inc
repnz
imul
rcrb
or
mov
mov
cmp
mov
pop
popf
push
mov
xchg
scas
divps
stos
push
mov
movsb
arpl
mov
push
loope
mov
push
das
cli
pop
cld
into
cli
mov
notl
and
xchg
or
ret
adc
xor
jo
lea
clc
push
lods
sub
pop
mov
mov
fwait
xchg
cli
dec
lds
and
in
adc
std
mov
test
int
mov
jle
mov
test
xchg
aad
mov
pop
sbbb
into
je
push
push
andl
lods
lahf
xchg
addr16
pop
insl
icebp
xor
adc
mov
clc
aaa
sbb
add
xchg
data16
jnp
lea
lret
jp
in
and
sbbb
mov
xchg
push
outsl
aam
icebp
aam
jo
mov
lods
das
pop
loope
cmp
fildl
aas
shlb
in
shll
loop
mov
cmpsb
test
pop
mov
sti
test
adc
sub
aaa
and
fstp
jne
inc
sbb
jle
sti
and
in
stos
outsl
aad
lcall
pusha
cmp
cmp
call
sub
mov
sbb
fimull
imul
btr
jge
jne
xor
inc
rcll
lods
mov
add
jae
adc
sub
lcall
cwtl
cmpsb
enter
aaa
mov
shrb
loop
testb
mov
lahf
imul
iret
push
push
js
inc
mov
rclb
rcll
adc
mov
or
add
jnp
push
jns
scas
sbbb
mov
pop
adc
gs
idivl
cmpsl
mov
xor
push
push
mov
cmp
test
in
scas
pop
cs
adc
cld
adc
imul
push
enter
mov
mov
mov
gs
and
rorb
jle
cmpsl
shlb
sub
pop
jne
xchg
nop
sbb
outsl
js
jge
push
jg
cmp
mov
push
scas
imul
rol
mov
lods
out
or
das
clc
es
cmp
ficomps
and
jle
lret
pop
cmp
lods
leave
iret
jb
xor
out
inc
imul
xor
cwtl
fstl
rcl
inc
jle
and
in
mov
stc
aas
add
pop
test
xlat
insb
xchg
lds
adc
cmp
mov
cli
xchg
stc
jbe
xor
int
jae
add
inc
fisttpl
jns
loopne
adc
jns
idivb
ret
dec
lds
jle
mov
je
cmp
orps
lcall
gs
outsb
nop
jno
out
jbe
xor
leave
and
xchg
icebp
add
inc
scas
jg
and
fsubrl
mov
adc
adc
loop
and
cmpsb
stos
in
call
inc
xchg
mov
pop
sti
cmp
xchg
loop
or
sub
inc
fldenv
xorb
stc
mov
jecxz
pop
fsts
adc
loopne
insb
dec
data16
and
xor
dec
cmp
repnz
cld
incl
mov
adc
sbb
inc
xchg
cmp
test
mov
sbb
mov
dec
sbb
aad
push
insl
sbb
push
faddl
mov
fidivl
xor
loope
inc
ret
xchg
jb
jno
inc
xlat
and
adc
add
jo
inc
or
inc
pop
jb
inc
daa
pop
fnstcw
in
stos
js
in
and
iret
jbe
aam
iret
cmc
push
arpl
add
daa
test
mov
mov
mov
popa
adc
incl
lret
dec
add
dec
xchg
mov
ret
dec
stc
mov
scas
mov
xor
push
lea
js
add
inc
sbb
xor
sar
push
mov
inc
push
in
jl
cmp
xlat
pop
jle
pop
in
add
popa
stos
sahf
cmp
imul
mov
push
out
ja
mov
mov
inc
lret
xchg
bound
sbbl
jnp
adc
test
cwtl
mov
mov
xor
clc
aam
rcr
out
push
jnp
clc
mov
dec
pusha
sti
imul
adc
aad
push
xor
push
xchg
int3
pop
sbb
pop
adc
dec
addb
fs
mov
shlb
add
out
lods
rcrl
jo
sub
cmpsl
cmp
ret
cs
inc
aad
jb
jb
sbb
ret
sub
sti
fistpl
lret
stos
mov
loop
mov
or
add
ljmp
pop
rolb
lock
xor
cmc
jne
xchg
sub
jle
pop
sub
cmp
jmp
push
mov
lds
dec
mov
sub
sub
fsubp
data16
mov
out
in
rolb
cmp
sbb
adc
orl
pop
adc
inc
ss
cmp
sbb
das
aam
insl
das
pop
enter
xchg
negb
mov
inc
xchg
ljmp
xor
stos
and
jns
and
fs
and
pop
loope
or
into
xchg
repz
cmpsb
and
inc
scas
pop
pop
or
insb
fisubl
in
fdivr
jae
lcall
cmp
nop
jg,pt
insl
sub
ret
inc
dec
pop
lds
test
sbb
repz
dec
lds
ds
push
mov
imul
or
movsb
sahf
dec
scas
out
scas
ljmp
jb
jo
imul
add
pushf
jo
into
sub
scas
call
ss
jmp
jnp
push
inc
sub
sbb
add
sbb
sbb
shl
test
loopne
pop
cmpb
fidivrl
movsb
rcl
outsb
add
test
push
pop
not
int3
movsb
mov
rolb
pusha
pusha
xor
jns
mov
jmp
bsr
bound
push
cmpb
fld
push
xor
pusha
cmpsl
push
addb
mov
arpl
inc
stos
icebp
repnz
push
mov
push
cltd
mov
out
sub
out
sub
adc
xchg
or
and
cwtl
add
insl
push
inc
sub
scas
push
outsl
jo
jmp
sbb
inc
push
xchg
test
xor
cmp
add
cs
stc
mov
sahf
scas
and
xor
xor
les
pop
inc
iret
addr16
daa
dec
test
gs
movsb
add
mov
cmp
push
jp
sbb
mov
push
sub
mov
mov
add
les
sbb
insb
popl
mov
mov
mov
sbb
setle
inc
mov
fstpt
popl
xchg
push
insl
dec
imul
lret
mul
inc
cmc
mov
ja
mov
cld
mov
enter
stos
push
pop
imul
adc
xor
sub
les
mov
insb
imul
js
orb
pop
inc
insb
dec
stc
jnp
mov
pop
stos
int3
cmp
xchg
xchg
xor
dec
cwtl
xchg
fs
xchg
in
and
pop
sub
cli
xchg
les
adcl
ljmp
lahf
mov
mov
pop
cmp
add
jbe
fmull
sub
lds
out
nop
mov
ljmp
inc
sub
xor
and
cmp
push
ficoms
cmp
insb
addr16
aaa
mov
pop
stc
gs
inc
xchg
dec
mov
rcl
jne
mov
mov
std
fsub
fwait
push
fisubs
cs
in
pop
daa
sub
daa
mov
jmp
lods
repz
sahf
and
inc
out
roll
push
jl
lock
cmp
mov
sahf
ds
push
add
mov
adc
jmp
mov
fbld
push
std
xchg
xor
test
add
loopne
xor
jp
and
js
sub
js
push
push
subb
stos
dec
jmp
iret
push
popl
sbb
add
sbb
or
fimull
mov
shrl
push
xor
imul
mov
jg
nop
loopne
or
shll
sbb
add
testb
repz
jg
hlt
sub
popa
clc
cmp
xchg
fs
cmp
popa
mov
loop
jg
xchg
test
into
insb
xlat
mov
mov
pushf
jo
mov
xchg
cwtl
dec
mov
xchg
es
dec
call
sub
scas
std
jge
mov
jecxz
add
pop
mov
aam
stos
cmp
gs
inc
jo
cmp
xlat
or
sarl
add
push
scas
mov
adc
jecxz
fbld
cld
into
out
in
lret
add
and
dec
pop
js
in
dec
test
loopne
push
cmpsb
sbb
mov
insl
aas
mov
sarl
sub
pop
mov
xchg
xchg
js
shlb
cmp
into
xor
in
fwait
cld
int3
cmpsb
cmp
mov
inc
mov
ret
push
push
dec
negb
add
mov
dec
mov
jl
cmp
outsb
adc
and
add
and
xor
mov
sti
inc
jae
movsl
aas
mov
sbb
mov
mov
xchg
clc
js
inc
cwtl
pop
xorl
mov
mov
or
mov
fidivrl
ss
mov
mov
pop
stos
inc
mov
inc
adc
cmp
add
hlt
jbe
mov
push
es
adc
cmp
imul
adc
lret
shl
in
aad
out
aaa
mov
lret
pop
sub
push
lods
push
bound
lock
call
dec
sahf
xor
fimuls
mov
call
mov
or
dec
std
test
mov
mov
in
test
jecxz
sub
lea
jecxz
arpl
shrb
jge
data16
or
xchg
aas
jnp
mov
icebp
sbb
add
cltd
sbb
dec
int
shld
mov
sti
pop
in
pop
xchg
or
in
fists
xchg
pop
gs
jno
xor
pop
pushf
mov
out
ds
fsubr
sbb
xor
into
out
test
push
and
pop
mov
push
add
lea
jne
pop
or
sub
sti
mov
fwait
lods
lret
sbb
je
push
inc
jge
popa
movsb
mov
movntq
and
mov
cmpsb
mov
dec
clc
inc
gs
or
pop
adc
cmp
rol
orl
fcompp
lcall
xor
lahf
out
out
test
loope
rolb
sub
mov
xchg
or
cmp
test
decb
icebp
push
inc
lcall
stos
push
jns
test
inc
mov
sub
in
xor
fwait
jbe
ljmp
mov
out
inc
fiaddl
add
xchg
arpl
and
mov
je
fistpll
push
sub
and
addr16
xchg
inc
dec
dec
jle
popf
movsl
fs
subl
add
mov
ss
lcall
or
cmp
insl
fsubp
or
mov
scas
fwait
push
lahf
aam
mov
fstpl
imul
stc
mov
add
mov
mov
push
cmp
insb
frstor
pop
push
mov
nop
inc
push
test
cld
mov
loopne
rcrl
bound
imul
popa
rep
shll
xor
xchg
in
xchg
push
push
mov
insl
out
xchg
scas
ds
xchg
cmp
dec
rcl
cmp
test
adc
cmc
push
mov
test
mov
jmp
fistl
dec
int3
fistl
cmc
arpl
out
inc
cwtl
movsl
jae
int3
cmp
in
dec
sbb
out
xchg
repz
fisubrs
sahf
sahf
fisubrs
mov
jne
pusha
sub
movsb
push
subb
test
xchg
fwait
sub
adc
cltd
pop
sbb
xor
push
inc
aas
gs
mov
adc
outsb
les
fsubl
cmp
orl
out
push
jno
sbb
xor
out
cmpsb
mov
in
cmp
inc
xchg
push
push
addr16
sbb
pop
inc
add
aas
aad
mov
daa
jp
or
push
into
add
inc
inc
sarl
xor
sahf
lret
pop
ret
jbe
mov
adc
mov
loope
pusha
cmp
and
mov
fnstsw
stos
mov
cmp
push
enter
lahf
pusha
xchg
mov
mov
repz
xchg
ljmp
call
xor
and
or
test
stc
fisttps
mov
or
pusha
aad
add
inc
mov
repnz
add
sahf
call
movsb
and
or
and
mov
dec
cmp
and
cmp
and
pop
push
mov
mov
popa
js
mov
outsb
jmp
dec
and
jns
push
das
push
jle
es
or
rolb
or
sti
mov
fimull
test
pushf
inc
pop
int
jae
and
lods
and
jb
pop
jp
ljmp
xchg
push
lea
test
pop
dec
mov
icebp
test
and
push
push
cld
popa
push
xor
mov
pop
fcmovu
or
call
and
in
pop
rclb
push
xor
sbb
je
orb
xchg
push
cld
ljmp
scas
xchg
daa
inc
mov
adc
aad
das
mov
push
shlb
std
test
sub
imul
lock
aam
pop
insl
movsl
ds
push
mov
inc
outsb
shll
mov
into
pop
in
inc
stos
outsl
jns
lcall
or
shrb
inc
leave
jb
es
mov
mov
mov
pop
movsb
sahf
jo
xchg
cmovge
xchg
ret
mov
outsl
ljmp
inc
xchg
das
mov
fwait
call
pop
fmul
mov
xchg
ss
aam
mov
cmp
or
sbb
xchg
ds
arpl
jmp
mov
push
jle
into
mov
ret
in
sub
jle
movsl
ffreep
mov
mov
out
mov
popa
fdivrs
out
mov
daa
sub
and
mov
std
popa
jp
add
xor
mov
lds
testl
and
lods
leave
lods
cmp
bound
mov
cmpb
movsb
fildl
mov
cltd
js
outsb
pop
hlt
stc
cli
lcall
fistpl
ljmp
sbb
ss
pop
xchg
mov
mov
add
inc
jp
sub
fstpt
out
and
jne
enter
cs
std
mov
pop
leave
int3
pop
xchg
repnz
repz
negl
adc
fidivl
push
push
rcrl
sub
push
sbb
push
fldenv
mov
sub
xchg
iret
ret
mov
cmp
dec
movsb
incb
outsb
dec
pop
xlat
inc
sbb
inc
and
mov
icebp
sbb
cmp
adc
and
ret
xor
fwait
jae
fwait
aam
jmp
xor
jo
orl
adc
cmp
inc
inc
addb
xor
repz
sbb
sbb
in
and
push
adc
mov
stos
pusha
cltd
call
xchg
mov
mov
jge
mov
mov
lock
rcll
out
lea
and
fstpt
dec
mov
jae
mov
jle
adc
je
xor
push
inc
pushfw
jb
fadds
call
out
and
sbb
push
add
push
mov
das
jg
xchg
testb
in
flds
fdivl
fbld
fdivs
clc
or
clc
test
lret
mov
jl
lret
cs
push
pop
mov
pop
nop
data16
jo
imul
cmp
push
jp
xchg
mov
mov
in
div
mov
mov
lea
or
lcall
inc
mov
cli
pop
mov
or
nop
cmpb
shlb
imul
dec
ret
cli
in
scas
testl
mov
out
fildl
fisubrs
push
ljmp
and
rclb
push
ret
arpl
out
push
pop
mov
vcvtsi2ss
pop
mov
icebp
outsl
call
push
mov
fyl2xp1
bound
jnp
outsl
ds
sbb
negb
push
jne
sbb
je
push
scas
inc
or
push
mov
mov
cld
rol
sbb
stos
insl
pop
popf
and
int
scas
sub
push
add
cmp
pop
and
dec
jno
or
mov
aas
lahf
add
add
cmp
test
mov
clc
roll
push
xor
shrl
stos
iret
ret
add
xor
mov
sub
sbb
into
clc
jmp
adc
stos
pop
lods
mov
xchg
inc
aas
fstp
xchg
or
sbb
cmp
sub
push
mov
xor
push
sub
cld
push
fstenv
mulb
popf
fisttps
jne
push
xor
push
ds
pusha
xchg
dec
pop
aam
aad
mov
in
icebp
ja
and
jo
fwait
cmp
mov
les
fnsave
xchg
int3
pop
pop
jge
loopne
sbb
pop
cmp
cmpsl
sub
jecxz
ljmp
lds
jp
mov
int
and
in
enter
push
bound
out
mov
inc
test
loop
rcl
push
and
or
cwtl
ret
scas
insl
enter
data16
nop
iret
stc
or
loope
gs
sbb
fldl
dec
jb
in
xchg
mov
adc
inc
adc
xchg
test
xor
int
inc
in
mov
movsb
mov
sbb
leave
jae
sub
pop
outsl
in
pusha
iret
push
sarb
data16
stc
mov
fadds
mov
or
jg
mov
mov
add
enter
xor
fdivp
mov
jecxz
jg
dec
push
jmp
add
inc
or
dec
aaa
dec
cmp
mov
pop
push
jno
mov
repz
jl
cmp
pop
cmp
ficompl
mov
rorb
lods
jecxz
xor
lahf
movsl
cmp
addr16
int
sbb
or
scas
or
jge
rolb
push
adc
xor
sarb
xchg
movsb
gs
jl
xchg
arpl
std
in
adc
stos
nop
mov
test
cld
mov
addb
out
jmp
sub
sub
in
ret
adc
repz
jb
pmulhw
inc
push
mov
adc
xchg
es
test
shl
mov
sbb
std
push
xchg
in
jnp
mov
rol
mov
xor
pop
push
cwtl
mov
jne
data16
and
dec
repnz
daa
insb
fs
sbb
or
jns
into
outsb
sub
push
jl
sub
pop
lret
add
ror
aam
lds
outsl
andl
xchg
leave
mov
std
repnz
inc
and
xor
arpl
xchg
mov
dec
push
jbe
dec
mov
adc
rcl
dec
jne
inc
adc
push
in
scas
adc
js
cltd
adc
mov
ja
pop
fsubs
mov
rorb
lock
inc
fsubs
mov
jmp
mov
pop
dec
mov
in
les
faddl
add
pop
push
fadd
int
pop
jecxz
mov
stos
sbb
imul
xchg
cmp
out
rorl
push
imul
dec
out
cmp
adc
cmp
inc
mov
mov
mov
fnstcw
out
addr16
aaa
ss
push
pop
adc
aas
dec
outsb
lret
adc
mov
into
inc
push
mov
mov
gs
push
pop
push
cmp
es
pushf
hlt
scas
out
ds
cmp
sub
sahf
jnp
loopne
mov
sub
xor
push
cmpsl
pusha
xorl
xor
leave
lahf
popf
push
add
mov
dec
mov
xor
jno
add
or
out
fmul
sarl
mov
stos
pop
or
adc
and
mov
push
cmp
mov
cltd
int3
imul
scas
inc
and
add
add
jl
out
xchg
pushf
adc
cli
les
push
fmull
mov
mov
fs
xchg
mov
jmp
inc
and
cmc
mov
negl
lea
jp
out
jp
sub
repnz
in
mov
repnz
aam
cmp
scas
lret
cltd
xchg
push
popf
xchg
or
push
ror
out
out
xchg
test
cli
popf
cltd
test
add
je
cli
and
xchg
sub
dec
iret
in
push
adc
int3
loopne
leave
mov
dec
addb
mov
cwtl
mov
mov
mov
std
jbe
push
mov
cltd
adc
into
mov
inc
mov
mov
lds
ret
adc
test
rolb
jg
shlb
or
mov
pusha
sbb
jp
dec
cs
je
jno
or
sbb
ret
pop
xchg
xor
popa
pushf
in
les
daa
cli
insl
adc
imul
cmc
push
push
loop
subl
fcmovu
fisttpl
pop
mov
adc
mov
adc
shll
rorb
sub
stos
pop
jns
cmp
dec
inc
jnp
jecxz
fdivs
dec
scas
push
into
sbb
mov
in
ljmp
and
mov
pusha
int3
jmp
arpl
fistpl
cmp
ret
xchg
mov
add
out
dec
sub
cmp
pop
sub
int3
stos
jnp
std
in
jmp
inc
aam
dec
repnz
out
and
loope
cld
add
lods
ljmp
or
sti
stos
in
cmp
xor
loop
insb
scas
cli
inc
dec
mov
cmp
sbb
inc
bound
cmp
sbb
jbe
xchg
imul
inc
xchg
dec
and
jnp
push
negb
std
ljmp
je
insb
xchg
sbb
jmp
aad
sbb
icebp
sbb
sub
cmp
stos
orb
fiadds
jne
shll
push
jmp
mov
sbb
lock
inc
scas
add
mov
and
cmp
adc
cltd
jmp
int3
rcr
sub
shrb
pop
lret
push
into
xchg
les
andl
add
pop
inc
xchg
in
ja
cltd
addr16
dec
xlat
lret
mov
adc
or
cmpsl
inc
cmp
pop
out
insb
mov
pop
cwtl
arpl
sbb
push
js
sbbb
mov
xor
mov
popa
or
mov
sub
mov
xor
lcall
stos
push
cmp
sbb
pop
cld
icebp
pop
and
out
std
mov
scas
repnz
xor
inc
das
cmp
or
in
scas
pop
push
nop
mov
push
sbb
inc
push
lods
mov
or
lahf
das
movhps
cmp
mov
sbb
out
sbb
aas
xchg
pop
mov
xor
fisttps
sub
dec
fnsave
mov
jle
mov
std
test
lcall
ret
dec
fisubrl
cmc
icebp
loop
stc
in
je
add
addr16
daa
pop
mov
test
mov
mov
add
test
out
xchg
notl
push
fdivs
or
in
roll
add
dec
ret
roll
mov
aas
leave
test
movsb
dec
ss
lcall
xlat
bound
mov
std
fmull
push
jle
add
mov
mov
inc
xchg
sbb
sbb
jbe
lds
aaa
xchg
pop
jmp
add
es
mov
getsec
xchg
and
xchg
test
xlat
push
ss
lods
pop
pushf
xchg
pop
dec
pop
mov
stc
or
or
out
mov
cld
loopne
mov
sbb
mov
pop
sbb
lock
sub
addr16
sub
dec
or
jb
mov
fidivrs
add
iret
cltd
push
jbe
scas
mov
xor
dec
out
xchg
stos
jne
xchg
jle
xor
inc
push
cmpl
stos
shrb
sbb
stos
adc
jp
inc
push
shlb
sub
jl
jge
mov
fucomp
push
lods
shll
mov
iret
movsl
jnp
cmp
pop
lods
inc
add
and
ja
jnp
mov
fdivs
mov
pop
cli
cwtl
clc
fucomi
dec
sub
sahf
stos
lods
mov
test
mov
mov
and
ret
in
mov
in
mov
add
inc
xchg
push
aad
add
add
dec
insl
loop
into
mov
sbb
xchg
stc
cmp
adc
push
roll
mov
sahf
xor
in
mov
xchg
cmp
xor
ret
into
or
in
scas
sub
fucomi
ljmp
xchg
repz
xchg
ss
push
negl
jecxz
sbb
and
dec
push
xor
popf
pop
sbb
lret
fidivs
cmp
cld
mov
decl
inc
sbb
pop
mov
cmc
xchg
in
sbb
aas
mov
in
in
in
push
outsl
movsb
sar
adc
jg
mov
or
pop
xchg
mov
push
sbb
scas
imul
mov
pop
cmc
mov
inc
sbb
cwtl
add
fsubrp
mov
xor
mov
lret
sbb
jp
nop
inc
pop
imul
pushf
jae
mov
mov
pop
mov
lret
add
insw
jl
inc
cmpsl
jnp
dec
and
sahf
scas
repz
push
push
int3
xor
aas
cmp
nop
mov
pop
lods
push
mov
lds
leave
test
in
jb
lods
test
std
mov
in
gs
call
sbb
rcr
fwait
push
mov
dec
scas
outsb
pop
mov
arpl
pop
jg
sbb
inc
pop
sbb
loope
and
sbb
xor
lahf
sti
hlt
push
cmp
popa
in
sub
cmp
cmp
mov
out
mov
int
cmp
ja
gs
mov
cmp
andl
mov
mov
add
add
jno
jecxz
sub
xchg
es
scas
loopne
inc
sahf
jmp
xchg
pop
dec
mov
int
dec
mov
lahf
and
dec
repz
lahf
or
inc
cmp
dec
xor
mov
jns
jno
xor
mov
testl
shr
loop
dec
shl
jg
das
lahf
pop
lods
push
movsb
mov
inc
shlb
ja
rolb
fcmovnb
in
ds
int
icebp
and
cmp
test
dec
cmp
xor
enter
xor
xchg
dec
inc
mov
cmpsl
push
subl
xchg
xchg
dec
in
sarb
or
scas
xor
int
imul
cmp
rcl
int3
pop
pop
sbb
clc
pop
in
mov
bnd
xchg
cmpsl
jmp
adc
addr16
jns
test
stos
shlb
pop
scas
imul
movsb
xchg
dec
xor
popa
pushf
enter
pop
gs
pop
call
pop
or
xchg
pop
fsts
daa
push
std
das
enter
sti
mov
aam
insl
int3
cld
add
sti
xor
adc
pop
push
scas
inc
push
lret
roll
lret
loopne
cs
jl,pt
push
inc
jo
enter
dec
inc
dec
aad
enter
xor
cmp
adc
cmpsb
rcl
enter
xchg
push
inc
xchg
outsl
or
popa
mov
imul
push
gs
and
sahf
leave
std
adcl
data16
shrb
cmp
jbe
fisttpll
into
in
paddw
out
cmpl
pop
out
cmp
aad
lahf
sub
mov
jbe
inc
adc
sub
dec
sub
mov
imul
push
fstpl
xor
xor
sbb
jae
rorb
daa
xchg
jmp
jecxz
das
sti
mov
icebp
adc
add
pop
shl
nop
data16
test
lea
push
xor
outsl
mov
adc
mov
ss
aaa
daa
test
es
xchg
movsl
jbe
imul
jae
repz
or
mov
ret
notb
jo
push
sub
xor
shll
push
mov
movsl
in
negb
fcompl
add
cmp
pcmpeqw
js
pop
lods
push
test
stos
xor
inc
pop
adc
popa
lcall
sbb
ds
sub
les
jg
ds
stos
inc
add
xchg
dec
dec
mov
mov
test
rcl
sahf
sbb
xlat
or
popf
arpl
adc
paddd
mov
jo
and
mov
cwtl
pop
testb
stos
sarl
test
sbb
int
outsb
and
mov
xor
stc
xor
cmp
push
lret
jecxz
insl
xchg
push
push
scas
fistps
lea
jl
daa
les
ret
cmp
inc
push
movsl
push
fidivrs
sti
mov
mov
cmp
mov
mov
cli
je
inc
daa
fwait
push
sub
in
pop
loopne
push
xchg
nop
idivl
adc
mov
lret
in
ja
inc
sub
pop
xor
add
cmp
iret
aam
loopne
imul
add
mov
shl
dec
ja
push
stos
pushw
xor
mov
outsb
and
not
xchg
fadds
ljmp
test
cli
dec
lds
xor
push
sub
repz
mov
js
push
push
push
push
mov
jns
outsb
push
shrl
out
and
mov
movsb
mov
dec
inc
movsb
hlt
lret
test
movsb
fidivrl
cmp
iretw
pop
mov
rolb
lcall
call
adc
nop
fsubl
push
and
outsl
scas
dec
ljmp
sub
ljmp
push
gs
dec
xor
dec
mov
sub
push
inc
mov
mov
sbb
push
test
sub
je
push
dec
leave
jp
fisubrl
xor
mov
jae
and
xor
lret
inc
inc
into
aad
sbb
subb
jle
in
test
test
cs
and
daa
mov
data16
lds
out
fwait
sub
mov
mov
adc
mov
into
or
rcrl
sysenter
jne
lcall
add
cmpsb
dec
sbb
xor
pop
sub
lea
jbe
int
adc
push
push
add
out
adc
ss
sub
lock
cwtl
gs
fisubs
lods
adc
or
jp
cmp
sbb
mov
cld
and
shlb
sahf
scas
xor
jge,pn
cmpsb
mov
mov
fnstsw
and
test
orl
jle
out
xor
jnp
lcall
lods
outsb
fidivl
test
push
in
ja
cld
add
test
sub
push
jno
mov
out
push
cltd
bnd
push
push
cwtl
pop
xlat
mov
sahf
or
cwtl
push
inc
int
ja
cmp
dec
mov
jb
rcr
popa
adc
sbb
add
adc
pop
fwait
out
and
insb
or
pop
mov
fldenv
enter
out
xchg
rdmsr
jns
outsl
into
iret
and
fisttps
mov
push
pop
pop
or
sub
loopne
outsl
ret
or
lret
mov
jns
lea
lcall
jne
fcomps
pop
push
rorb
push
add
orl
pop
pop
add
popa
push
push
stos
xlat
mull
pop
cwtl
scas
or
xor
loopne
jmp
jb
dec
sub
cmp
mov
mov
sahf
mov
cmp
stos
icebp
loop
adc
aad
lret
jb
fwait
mov
ret
jecxz,pn
sbb
mov
inc
loop
sub
outsl
dec
out
cmp
mov
sub
and
in
arpl
push
ret
arpl
clc
clc
and
pop
in
adc
rorl
mov
ret
rclb
loopne
or
daa
aaa
mov
leave
mov
je
push
adc
sbb
je
loope
movsb
add
clc
xlat
rcrl
fs
adc
into
and
mov
in
pop
cmpsl
jle
dec
data16
mov
pop
push
pushf
fisubs
test
and
dec
scas
stc
shll
ror
sbb
xor
gs
in
pop
inc
lods
adc
push
push
lock
es
mov
aas
fdecstp
xchg
out
aas
mov
cmpsb
push
fisttpl
pop
jae
iret
sub
std
mov
pop
ror
mov
es
add
mov
clc
in
pop
outsb
pop
push
push
push
xchg
ror
arpl
movsl
leave
jmp
cld
int
js
call
push
or
int3
or
push
sti
mov
ror
adc
inc
mov
pop
xchg
orl
jecxz
add
sub
cmp
dec
loope
leave
and
xchg
mov
xor
out
mov
outsb
aad
cmp
jl
rcr
jg
pushf
push
mov
jbe
xchg
mov
lret
sub
cmp
insl
or
push
push
lods
ljmp
pop
ljmp
pop
sbb
xchg
cmp
movsb
test
repnz
or
in
fmuls
pop
lret
adc
jo
mov
insb
pop
ds
xchg
outsl
test
pop
mov
out
xchg
xlat
cmpsl
lods
jge
dec
mov
frstor
dec
sbb
test
dec
ja
push
jb
fiaddl
cli
fstl
shl
loope
or
jg
je
xchg
xor
loop
rorb
mov
sub
repnz
negb
ja
loope
mov
imul
add
lods
scas
es
sub
or
loope
mov
mov
sbb
rclb
xchg
repz
popa
lcall
pavgb
aad
bound
cmp
fsubs
lea
mov
flds
push
push
aaa
dec
enter
test
repnz
loopne
add
enter
sbb
outsb
aas
cltd
sub
ds
mov
jns
ror
mov
add
inc
aam
xorb
add
xchg
jp
arpl
jae
push
into
push
sbb
jae
adc
popf
loop
jb
adc
testl
cmp
mov
flds
mov
out
scas
les
stos
popa
test
mov
into
xlat
mov
test
dec
or
add
mov
call
fstl
lds
hlt
sub
mov
inc
test
jb
or
leave
cmp
pushf
mov
push
fiaddl
or
xor
and
sahf
es
cwtl
cmp
outsl
push
or
aam
fwait
lock
out
call
mov
jp
hlt
les
stos
push
and
pop
jbe
pop
stc
in
std
outsb
push
cmp
test
sahf
int
shrl
fstp
andb
xchg
adc
mov
or
jae
and
pusha
xchg
or
lea
int3
imul
mov
sarb
add
or
rol
aaa
or
std
shlb
sahf
jmp
push
xlat
test
and
dec
out
pop
push
gs
cmp
xchg
pop
adc
fucomip
xor
mov
cmp
cwtl
add
jb
xor
outsb
or
adc
out
stc
call
mov
fmuls
mov
xor
pop
xor
cmc
and
in
test
ds
cmp
inc
in
dec
pop
jp
pop
inc
cmp
in
and
ds
mov
pop
or
mov
jge
addr16
xor
pop
inc
gs
mov
push
js
loopnew
xchg
pop
sbb
movsb
dec
and
repz
xor
sub
orl
sahf
pop
outsb
dec
dec
out
add
lcall
mov
ja
test
cmpsl
outsb
ret
fnstcw
xchg
test
test
xorl
into
repnz
jnp
push
and
sti
or
dec
std
sbb
shlb
or
cmp
jno
xchg
iret
std
mov
cmp
ljmp
aad
sbb
sbb
jecxz
mov
xchg
adc
lret
dec
addr16
mov
jge
cwtl
jne
subb
add
jmp
jne
call
lret
mov
not
jo
out
dec
aad
in
mov
mov
imul
and
test
or
and
xor
pop
jo
andl
in
jae
pop
insl
pop
test
lds
clc
pop
dec
fs
mov
inc
fsts
add
pop
sarb
ja
out
lahf
add
fistpl
sbb
add
dec
and
fs
cmp
mov
fdivs
sub
aam
add
filds
in
outsb
sub
fbstp
lea
stos
in
leave
mov
pop
scas
mov
nop
imul
jge
bound
mov
arpl
andb
cli
jle
sbb
in
push
test
repz
insb
cltd
shrb
sub
out
stc
cmpl
cmpxchg
inc
imul
xchg
dec
test
sub
jp
mov
dec
pusha
inc
mov
gs
bound
aaa
out
pop
lods
roll
push
ret
popa
lods
sahf
jg
bound
xor
jb
xlat
les
iret
jg
js
jp
testl
add
add
mov
pop
jae
cmp
outsb
add
and
loopne
fwait
inc
xchg
xchg
cmpb
enter
call
inc
movsb
arpl
push
inc
stos
jecxz
mov
iret
ds
adc
or
fcoms
pop
mov
inc
fsubs
sbb
or
sbb
leave
xor
ror
mov
jecxz
sub
dec
insl
lret
sub
popa
cld
sbb
movsb
mov
and
add
sarb
pinsrw
mov
xchg
mov
cs
inc
jl
push
adc
bound
sbb
mov
cmpsl
fldt
and
mov
mov
imul
push
outsl
clc
and
mov
pop
jmp
push
push
decb
cmp
idivb
pop
fsubrs
insb
repz
sbb
jmp
and
jbe
shlb
repz
inc
mov
cld
cwtl
adc
pusha
dec
jg
jle
cmc
sbb
repnz
popa
jmp
mov
pop
mov
ds
cli
scas
xchg
inc
pop
mov
lods
js
cltd
cld
stos
into
shl
cmp
call
stc
sti
inc
mov
aaa
or
pop
or
and
lahf
popf
test
test
ljmp
and
hlt
adc
scas
mov
mov
push
std
hlt
lret
mov
xchg
jnp
roll
mov
mov
dec
pop
lahf
fs
jecxz
xor
adc
mov
mov
cmpsl
je
sbb
pushf
aad
bound
daa
popa
scas
inc
js
jbe
mov
lods
and
and
sbb
daa
or
lds
mov
ss
loope
xchg
rorb
dec
cmp
movsb
inc
cmp
lods
push
pop
jbe
jecxz
xor
lods
mov
ret
in
adc
xchg
imul
jl
sarb
push
inc
sub
pop
mov
lret
ret
push
inc
sbbb
cmp
and
cmp
xchg
imul
sub
xor
int3
mov
ret
fisubl
fdivrs
and
jg
test
pop
dec
xchg
fsubrs
lret
cmpsb
int
cmpsl
stos
lahf
push
and
pop
jge
pusha
jmp
pop
mov
adc
mov
push
mov
jg
xor
push
inc
fsts
scas
cmp
lahf
int
test
arpl
and
mov
mov
and
cmp
lock
or
aad
cmp
rorl
scas
mov
std
pop
cltd
add
cmpsl
out
mov
sahf
add
mov
push
dec
jb
jge
jge
and
jae
dec
inc
xchg
mov
and
or
orl
or
sahf
arpl
cld
cmp
bnd
add
cwtl
outsl
adc
imul
popa
inc
cmp
pop
icebp
cmp
das
fs
xchg
fstps
cltd
xor
jbe
test
mov
lods
movsb
mov
lcall
add
stc
inc
out
lods
cmp
stc
lahf
sbbl
add
hlt
xchg
cld
xor
adc
jl
popf
je
push
sbb
mov
inc
test
add
jno
mov
mov
mov
inc
mov
xchg
jns
leave
push
sbb
mov
cmc
mov
aaa
push
mov
jns
enter
jae
cltd
outsl
into
aaa
filds
pop
inc
call
test
movsl
rcpps
icebp
lds
dec
out
adc
lods
insb
cmp
outsl
jl
adc
xor
mov
ljmp
js
push
mov
cmp
stos
xor
loop
popw
sbb
push
sbb
mov
andl
sbb
call
push
mov
add
cli
cmp
jg
jne
push
clc
xor
cltd
mov
and
adc
mov
fistpl
andl
cmc
stos
lret
cld
mov
mov
addr16
aam
mov
shr
stos
sbb
lret
fbld
mov
into
add
pusha
lret
mov
pushf
inc
ljmp
aas
sbb
bnd
and
mov
push
cli
mov
aas
jl
pop
test
sbb
sbb
ret
fldcw
ret
mov
push
fwait
rol
inc
int3
fsubs
mov
call
jge
sub
xchg
scas
cli
imul
frstor
fimull
xchg
stos
pop
test
dec
pushf
jge
pop
std
lods
call
pop
scas
mov
dec
movsb
movb
inc
inc
fsubr
ljmp
or
mov
cli
xor
dec
jne
mov
jno
icebp
cmp
cmp
fisubrl
or
popa
repnz
mov
clc
clc
das
in
in
mov
cltd
pop
loopne
imul
push
cmp
jb
test
jl
xor
gs
dec
xchg
pop
sbb
cwtl
int
sbb
rcll
xchg
xchg
into
sarl
and
sub
and
mov
mov
cli
data16
push
jle
add
cmpsb
pop
or
jmp
fistpl
lret
cmp
xchg
mov
adc
xchg
and
sahf
jnp
mov
loopne
aaa
lret
nop
pop
xlat
negb
in
les
push
sbb
jge
add
add
in
pushf
lock
cmp
addb
adc
lretw
mov
push
repz
adc
mov
dec
cmp
sbb
dec
inc
cmpsl
int
sbb
popa
dec
leave
sbb
lods
xchg
fdivrl
call
loop
cmp
push
sbb
lods
push
inc
ret
jecxz
jg
pop
sti
or
inc
ljmp
push
outsb
pop
mov
je
xchg
nop
adc
imul
scas
mov
movsb
ss
sti
cmpsl
das
test
pop
jge
das
mov
add
movmskps
inc
mov
pushf
imul
call
insb
les
xor
dec
sahf
lods
lock
sub
xchg
push
sbb
adc
jne
xchg
shll
stc
jmp
movsl
mov
test
or
es
cmpsb
jle
add
jnp
cmp
je
xlat
cmpb
imul
inc
xchg
jne
stos
add
jno
and
in
outsl
loop
xchg
lcall
cmpsl
pop
clc
xchg
mov
fs
cmp
enter
ret
mov
mov
js
xchg
cltd
push
fstpt
shl
xchg
push
mov
cmpsb
dec
call
mov
mov
nop
xor
cmpsl
mov
sbb
sub
push
arpl
lods
cltd
shll
sbb
lret
lods
in
gs
arpl
call
xchg
clc
aaa
ficoms
push
out
adc
mov
mov
fisttpl
jnp
pop
mov
int
fisttps
pop
das
ret
or
inc
sar
mov
idivb
iret
mov
pop
loop
and
push
lea
push
cmpsl
push
outsl
jno
enter
xchg
ds
add
adc
fwait
scas
add
sub
push
xorb
sbb
pushf
xor
orl
bsr
aam
clc
and
pop
mov
xor
mov
rcll
imul
sub
mov
orl
iret
and
adc
xchg
mov
fbld
repz
mov
jmp
cmc
or
hlt
or
cs
mov
roll
call
pop
in
jbe
sbb
adc
jge
insl
shll
fwait
scas
cmp
or
movsl
dec
sbb
test
push
lahf
daa
jecxz
mov
sub
outsl
aas
push
push
nop
cmp
dec
repnz
mov
or
hlt
cs
pushl
arpl
and
aam
xorb
mov
push
cmp
sub
leave
pop
cmpsb
insb
cmc
imul
fistpll
sub
add
mov
add
arpl
mov
push
inc
adc
fstl
jae
mov
jle
aad
aaa
sub
adc
jne
rcrb
mov
pushf
insl
outsl
push
mov
mov
xchg
fs
mulb
je
xchg
pusha
push
into
pop
and
sti
sti
xor
das
adc
inc
cld
jne
outsb
es
scas
ja
jno
sahf
rorl
nopl
pop
cmp
stos
add
idiv
mov
ja
scas
adc
pop
imul
imul
hlt
mov
add
adc
je
adc
mov
test
stos
push
clc
mov
int
xor
mov
or
stos
mov
mov
imul
pusha
testl
cwtl
push
ret
leave
and
xor
cmp
aaa
ss
push
pop
xchg
jge
fdivrs
sub
call
xchg
add
fldcw
add
lds
push
fisubrs
mov
js
cmp
cmc
fucom
rolb
insb
cmp
mov
das
call
fisubrs
aam
jne
ds
xlat
push
test
and
shll
add
out
lret
lods
push
repz
xor
int3
mov
shr
push
aam
shll
scas
xchg
js
mov
xor
jecxz
lea
gs
jno
mov
ret
sbb
ret
loopne
ljmp
add
es
inc
push
subb
adc
mov
or
loopne
xor
jnp
into
adc
clc
subl
xchg
fadds
dec
pop
inc
sahf
jnp
dec
jle
movb
cmp
push
sbb
iret
adc
outsb
imul
in
jge
adc
cltd
out
dec
orl
ss
fcoml
push
cli
lds
xchg
data16
mov
shll
test
pushf
xchg
test
add
int
pusha
fldcw
jae
adcl
fs
cs
sbb
out
cmpsb
push
push
dec
pop
or
sbb
inc
and
cwtl
push
sahf
add
lahf
mov
push
mov
cs
scas
dec
mov
frstor
or
xchg
jg
stos
scas
jl
inc
hlt
out
jl
aas
jge
lahf
inc
insb
mov
mov
iret
xlat
lret
pop
mov
or
js
push
insl
dec
jge
adcb
out
mov
mov
ret
pop
gs
pop
xor
add
fmull
pushf
inc
insl
add
mov
dec
leave
and
push
inc
pop
xchg
adc
add
popa
cltd
mov
hlt
inc
popf
lods
lods
sbb
xor
stos
loopne
inc
sti
fidivl
jno
push
mov
lahf
push
inc
out
test
aaa
jmp
dec
add
sbb
mov
stos
jnp
mov
xchg
mov
adc
gs
iret
dec
push
jns
icebp
xchg
sahf
orl
mov
or
shll
pop
popf
pop
ss
mov
adc
pop
xor
fildl
push
cmpsb
mov
aad
mov
mov
mov
xchg
xor
jle
pop
jmp
sti
xchg
scas
loop
loope
imul
aas
and
out
jmp
out
mov
push
cli
lods
imul
movl
push
ret
and
out
mov
outsl
popa
mov
fsubr
or
pop
jb
cmc
loop
imul
sbb
pop
sbb
jno
decl
imul
movsl
mov
imul
mov
mov
xchg
lret
out
adc
sub
cmp
sbb
mov
mov
pop
outsb
inc
inc
fwait
adc
rolb
popf
jns
push
adc
cmc
lcall
nop
inc
sbb
clc
push
popl
dec
adc
sbb
test
xchg
mov
hlt
mov
clc
daa
sahf
pop
mov
std
flds
push
inc
jne
jmp
adcb
pushw
bound
repz
mov
bound
dec
add
jg
ljmp
pop
arpl
inc
mov
adc
cmp
je
cmpsb
lcall
push
fsubp
and
test
push
jmp
jge
xchg
test
enter
mov
mov
loope
in
jae
rorl
lods
jle
jl
ja
mov
lods
adc
xchg
pop
push
out
pop
push
cwtl
push
ljmp
and
test
pop
xchg
and
mov
fisubl
lahf
mov
les
dec
imul
fistl
bound
mov
data16
hlt
cmp
mov
outsb
mov
aas
inc
je
jb
leave
insl
push
divb
jnp
cmp
xor
and
cwtl
and
inc
or
push
jnp
xor
or
ljmp
pop
xchg
shll
and
and
jle
insl
gs
jmp
push
gs
clc
mov
adc
iret
icebp
arpl
inc
cwtl
aaa
mov
movsl
push
lret
lret
jg
loopne
sbb
jbe
xor
push
cmc
hlt
pop
outsb
sbb
jg
add
xor
push
call
add
imul
adc
push
mov
test
push
jo
addr16
jg
xchg
adc
cmp
or
test
dec
jo
add
fidivl
lods
daa
jl
mov
mov
outsl
aaa
dec
push
and
cwtl
sub
jns
test
lea
pop
shl
adc
into
jp
add
out
add
hlt
jmp
repz
push
cmpsb
out
jecxz
xor
idivl
mov
mov
pusha
jns
andb
mov
fs
adc
into
shlb
sti
mov
dec
mov
xchg
cmpsl
mov
psignd
cmp
addr16
shl
push
enter
cli
lret
out
push
and
inc
mov
push
adc
sub
pop
out
mull
inc
sbb
loop
xor
add
and
in
jns
out
arpl
loop
push
dec
lods
push
jecxz
xlat
mov
sbb
jp
fnsave
pushf
mov
in
push
aad
fmull
adc
popa
aad
pop
outsl
lock
adc
mov
and
mov
mov
dec
xchg
mov
imul
mov
cmp
xor
inc
dec
pop
sarb
mov
sub
mov
adcl
and
push
ljmp
xlat
pop
mov
xchg
push
out
hlt
cli
and
jecxz
js
sub
or
cmc
push
arpl
lds
add
sahf
jle
enter
mov
pushw
loope
add
iret
jne
mov
scas
sub
repnz
popf
mov
insb
pusha
insl
or
push
jecxz
mov
mov
gs
test
aad
push
out
shrb
js
pusha
pop
add
daa
and
ss
dec
sbb
push
and
test
testl
js
pop
mov
mov
add
and
sub
pop
test
dec
mov
hlt
mov
in
cmpsl
cmp
jecxz
sahf
mov
add
fsubp
mov
pop
imul
pop
push
dec
nop
xchg
jge
mov
ja
xchg
aad
dec
testl
addr16
mov
int
mov
popa
sti
js
out
movsl
sbb
adc
pusha
shlb
cld
cmp
cmp
dec
movsl
test
mov
pop
inc
faddp
ret
adc
mov
mov
popf
push
mov
dec
test
cmp
inc
push
cmpl
mov
ret
and
cmp
xchg
out
cld
and
sbb
mov
data16
popa
ja
out
sbb
in
pop
cmpsb
call
scas
fisubrl
xchg
decl
aad
mov
test
mov
stos
rorb
jp
adc
fisubs
test
mov
or
popf
das
dec
cmp
xor
and
cmp
pop
in
insb
ret
push
pop
pop
jne
shll
dec
ljmp
dec
fldlg2
or
inc
fs
repnz
loope
iret
out
aad
xchg
imul
mov
lret
jp
cmp
cld
aas
jl
add
out
in
imul
ret
daa
mov
jb
insb
fnstsw
stos
dec
cmp
roll
roll
pop
or
and
inc
and
xchg
insl
loopne
divb
mov
dec
mov
inc
hlt
jmp
subl
add
into
nop
scas
pop
sub
inc
push
xor
push
lods
jo
daa
jmp
js
out
cmp
out
hlt
shr
iret
jns
dec
cmpsl
pop
dec
stc
adc
dec
stos
cmp
inc
ja
hlt
iret
cmp
adc
push
fstps
add
loope
and
push
lock
lret
push
sbb
xchg
mov
loope
mov
lahf
push
or
push
movsb
rcll
inc
repnz
test
push
jmp
pop
and
sub
mov
sbb
adc
shl
xchg
inc
imul
xchg
jg
xor
outsb
jb
inc
popf
and
inc
mov
ud0
enter
mov
ljmp
ficompl
scas
push
psubb
push
test
daa
sub
fistpl
test
imulb
fcomps
push
test
sub
dec
pop
cmpsb
cs
stc
loope
inc
les
adc
call
xchg
jp
bound
and
adc
sub
aas
ljmp
pop
xchg
loope
nop
fwait
or
xor
or
adc
xchg
cmpsl
add
sahf
xor
jo
data16
mov
push
cmpl
mov
lret
jne
dec
fldl
mov
push
sbb
adc
dec
popa
test
lods
ret
pop
loope
out
pop
aad
test
mulb
ss
cmovp
xchg
in
adc
jnp
cld
ficoms
sbb
imul
cmpsb
xor
jp
push
inc
stos
cmp
push
push
add
pop
in
push
gs
stos
rcrb
movd
pop
fdivl
sti
or
xor
popa
xchg
mov
lcall
stos
push
aaa
push
mov
sub
jns
in
lds
sub
sub
rcll
notl
pop
and
cmpsl
sti
fdivs
aaa
cmp
adc
jns
sub
mov
jmp
dec
rorb
nop
iret
ds
lcall
repnz
and
xchg
setne
in
data16
call
push
jo
or
lcall
repz
add
aas
push
sub
int3
leave
clc
jp
or
mov
jbe
inc
leave
cmp
lods
add
jne
popa
mov
jecxz
mov
cmp
jecxz
shll
bound
scas
mov
push
sub
ret
sub
cmp
arpl
mov
aaa
pop
jl
jns
rol
inc
pop
lods
orb
lret
nop
lds
ss
lock
mov
cmp
sub
into
xchg
stos
adc
add
push
test
pop
mov
mov
mov
add
leavew
mov
fdivrs
and
push
dec
sub
mov
mov
into
call
jle
mov
test
arpl
cmp
sbb
jmp
jmp
pop
jae
mov
inc
push
mov
cmp
or
mov
je
call
pop
jb
xor
push
stos
loop
fnstcw
and
subb
test
push
outsl
jns
or
xchg
out
pop
dec
shrl
fistps
xchg
adc
mov
jl
mov
in
rorl
shlb
mov
cmp
pop
add
ljmp
ljmp
rorb
dec
push
stos
add
nop
push
cli
inc
shll
aad
dec
sub
jl
aas
xchg
les
xor
pop
xor
pop
pop
aam
sbb
into
repnz
add
jno
adc
inc
jo
xor
out
int3
push
jns
jb
movsb
rclb
xchg
sub
rolb
jmp
jmp
jge
dec
cmc
fisttpl
sbbl
sbb
mov
ficoml
aad
data16
pop
shlb
push
sbb
jmp
lock
fdivrs
loope
cmp
mov
adc
cmpsl
jno
imul
nop
xor
and
ret
lcall
jns
jp
push
mov
dec
in
jno
in
shrl
mov
mov
cmpsb
xor
stos
mov
pushf
scas
inc
aaa
fnsave
addl
int3
test
addr16
shl
add
dec
inc
inc
fwait
adc
cmp
enter
stos
add
sbb
jecxz
sahf
neg
jb
push
gs
aad
xor
jmp
adc
rcl
mov
pop
sbb
rorb
outsb
adc
aam
xlat
cmpsl
lods
pop
or
repz
adc
gs
je
cmp
iret
cmc
fists
jmp
into
repz
mov
enter
push
js
or
push
xchg
idivl
mul
mov
xor
out
shl
sub
and
mov
das
in
icebp
incl
mov
bnd
pop
cmpsb
xchg
addl
lods
jl
pushf
add
punpckldq
scas
or
das
hlt
adc
push
sub
jbe
mov
push
sbb
sub
mov
test
rcrl
sub
jbe
test
and
lods
bound
cld
test
jo
shr
xlat
xor
xchg
lret
add
mov
ret
popa
sbb
iret
in
in
jno
ja
outsb
repz
in
test
ljmp
das
arpl
rclb
pop
data16
gs
hlt
mov
roll
cmp
xchg
push
or
fidivs
or
jmp
jl
jp
outsl
dec
cld
pop
xchg
push
mov
dec
adc
into
mov
sub
dec
mov
jb
mov
pop
imul
bound
and
cmpsl
sti
dec
in
jae
mov
xor
fiadds
mov
out
dec
scas
xor
fisubs
pushf
mov
inc
gs
xor
flds
shlb
dec
adc
push
loopne
mov
push
or
mov
repz
mov
add
daa
sbb
enter
pop
mov
adc
lods
mov
std
lds
push
js
ljmp
sbb
mov
cli
shlb
push
push
adc
cli
mov
inc
xor
pop
pusha
cld
push
sub
mov
lods
sbb
jns
iret
fbld
cmp
add
shlb
cmp
fcomps
fdivrl
std
dec
xchg
and
sub
jno
and
jno
xor
mov
and
cld
rcll
dec
jbe
ss
cwtl
std
lret
dec
dec
flds
inc
cmp
fdivr
mov
addr16
fadds
scas
xchg
out
inc
lahf
xor
aad
pop
inc
seta
push
xchg
cmp
mov
shlb
sbb
dec
daa
add
imul
fstps
andb
shlb
sar
dec
sbb
add
out
mov
jge
pop
xchg
in
leave
push
ljmp
xchg
aam
jae
add
or
pop
mov
xor
leave
test
mov
mov
and
ljmp
outsb
mov
adc
mov
inc
fxch
pushf
pushf
sbb
ds
pusha
in
jne
cmp
pop
pop
mov
xchg
out
popf
and
shlb
hlt
push
std
dec
cmpsb
pushf
sub
or
cli
and
xor
xor
push
shll
int3
repnz
ficomps
jo
lcall
int3
lcall
pop
loop
xor
or
ljmp
lret
jo
cli
dec
mov
fidivrl
js
nop
roll
xor
jmp
imul
or
icebp
cmp
jo
stos
imul
in
movsb
sti
fisubrl
mov
enter
dec
int
lock
stos
stos
push
or
sub
or
in
insl
mov
hlt
shl
sarb
aas
js
jge
mov
xorl
lods
mov
arpl
mov
int
hlt
sarb
dec
gs
dec
add
outsb
sub
or
pop
xor
sbb
adc
scas
loopne
jb
in
fidivrs
xorl
les
pop
push
sti
xor
inc
and
sti
or
mov
mov
cmp
xor
fsts
es
and
aas
dec
push
pop
jbe
add
mov
pop
out
xchg
shrl
aaa
sti
mov
pop
pop
aam
out
bound
mov
inc
or
fstpl
rclb
and
jmp
ljmp
adc
into
pop
rorl
loopne
jo
inc
lea
xchg
cmp
call
add
dec
cwtl
mov
test
fnsave
xchg
adc
add
pop
or
and
jmp
mov
xor
or
stos
push
xlat
int
cmp
lock
adc
cmp
push
mov
lret
push
lock
in
clc
mov
clc
fdivrs
or
adc
jno
and
mov
pop
push
lods
test
test
icebp
xor
jnp
lea
jge
add
lock
mov
iret
outsb
cmc
or
sub
mov
repz
faddl
ffreep
push
fidivrs
jo
addb
sub
cmp
mov
cmp
xchg
cmp
fistpl
aam
inc
in
inc
fstl
mov
das
adc
aad
int
xchg
push
mov
xchg
hlt
mov
add
testl
push
fsts
cltd
mov
jbe
addb
pop
clc
pushf
sbbl
movsl
mov
ss
dec
movsb
cmp
addl
pop
scas
enter
mov
add
sub
rclb
and
or
push
pop
inc
out
cltd
dec
lea
jg
xchg
mov
mov
out
int3
mov
dec
loop
xor
call
inc
fdiv
lcall
ficompl
rolb
shll
jbe
sub
sarl
push
mov
xchg
push
jmp
js
js
cmp
popl
and
push
xchg
fcomip
jge
pusha
sub
push
add
mov
and
jne
and
lea
or
hlt
xor
insl
push
lods
sbb
imul
sarl
inc
aam
pop
subl
das
rolb
cmp
fisttpll
iret
test
scas
test
out
ficoms
sbb
sbb
dec
mov
sub
enter
jne
add
or
out
jecxz
rorb
jno
shr
jo
cmc
jo
leave
mov
das
cmc
jg
sbb
jp,pt
scas
jge
int
clc
subl
sbb
lea
mov
xor
loop
lods
movl
lods
repz
or
paddusb
cld
daa
and
push
stos
or
mov
and
push
mov
xor
loope
ret
cli
push
adc
shlb
inc
out
mov
hlt
int3
xchg
test
movsb
cld
push
lea
xchg
dec
inc
ret
mov
xchg
bnd
or
mov
push
jecxz
xor
mov
add
ljmp
jp
sbb
sub
out
into
xor
xchg
push
xor
icebp
pop
add
sub
mov
jb
aad
lea
jl
into
sbb
aas
xchg
aam
jbe
pop
mull
mov
push
shll
sub
out
ss
mov
mov
sub
sub
cmp
mov
lds
mov
testb
aam
xor
dec
data16
add
jecxz
inc
lret
jl
jg
nop
fmuls
mov
pop
mov
mov
mov
ret
cmpb
jne
cmp
sti
cld
or
test
adc
arpl
pushl
cmpb
dec
cs
lods
xchg
or
xchg
iret
sti
out
xor
cld
dec
xor
pop
incl
xor
inc
js
mov
mov
mov
sarl
addb
jns
sub
jmp
adc
icebp
cwtl
jl
dec
in
push
dec
js
adc
dec
cwtl
aas
mul
ja
add
dec
in
cmp
cmpb
repz
fcmovnb
jne
push
insb
push
fbstp
pusha
push
push
ret
sbb
sti
xor
xchg
dec
cmp
push
lock
leave
je
arpl
jecxz
adc
cmp
dec
sahf
cltd
lods
fistpll
lods
popf
and
outsb
notb
push
jmp
mov
add
pop
mov
insb
hlt
outsl
stos
leave
dec
cmpl
sbb
mov
inc
idivb
mov
xor
jl
jbe
jge
push
push
pop
das
cmp
add
fisubrl
cs
sbb
jne
sahf
sbb
dec
imul
adc
stos
sarl
xchg
sbb
jg
pop
and
aam
out
leave
ss
and
pop
pop
xchg
xorb
jl
push
rcrl
sub
jmp
in
setge
pop
xor
data16
sub
stos
in
jg
xor
ret
fucomip
inc
jg
push
sub
mov
int3
repz
scas
fdivl
mov
shlb
lahf
loopne
sti
jo
push
dec
adc
pop
push
xchg
out
es
cmp
jmp
and
test
int3
je
popf
or
or
in
cli
mov
fwait
mov
xor
jp
lods
mov
aad
jl
bound
in
fistpl
push
les
adc
add
push
inc
and
add
and
adc
xchg
popl
ret
jecxz
xchg
outsl
icebp
adc
orl
jbe
mov
dec
out
mov
rclb
dec
call
je
aas
mov
pusha
int3
push
and
fstpl
je
stc
cmp
lea
das
sbb
imul
dec
fwait
mov
loopne
mov
jecxz
mov
mov
jp
push
js
ret
adc
adc
cmp
inc
xor
pop
and
test
cmpb
adc
cmp
dec
push
sub
out
movb
cmpb
adc
push
hlt
xor
sub
outsl
and
insl
popa
outsl
push
sbb
or
adc
adc
push
xchg
cmp
jmp
mov
clc
aas
or
dec
mov
xor
jp
std
mov
dec
inc
iret
sub
sbb
in
cmc
fcmovnbe
jge
inc
imul
setg
dec
pop
push
xchg
mov
pop
xchg
adc
sbb
jno
inc
sahf
mov
push
cmp
pop
lcall
fisubl
mov
mov
pop
iret
icebp
xor
cmc
dec
sbb
cmp
std
rorl
jmp
int3
js
or
lret
pop
clc
or
inc
cltd
sbb
insl
push
mov
jae
xchg
outsb
aam
loope
xor
pop
adc
push
push
cmp
shll
int
xchg
shrl
mov
xlat
mov
xor
mov
gs
add
ljmp
xchg
das
dec
js
ds
pop
adc
jns
and
js
sbb
pop
xchg
mov
xchg
popl
fstl
jmp
cmpsb
in
pop
mov
add
and
add
pop
lods
mov
addr16
iret
mov
xchg
cmc
pop
popa
cwtl
add
xchg
imul
dec
popf
push
jle
xchg
ljmp
push
scas
sub
adc
imul
sub
loopne
inc
sub
sbb
rclb
and
in
bound
scas
repz
test
aaa
or
add
add
jmp
ret
into
sub
jno
inc
loop
adc
fcomps
pop
mov
pushf
inc
mov
rol
adc
push
push
jmp
mov
mov
push
inc
xchg
pop
clc
filds
sbb
mov
xchg
mov
outsl
xchg
pop
fmull
mov
repz
and
dec
in
mov
lds
push
out
test
out
push
mov
cmp
or
loope
in
xor
out
aas
ret
jo
shll
push
mov
daa
dec
ret
ljmp
or
ret
test
in
inc
and
cmpsl
jp
daa
fcomp
dec
adc
mov
mov
jnp
data16
cld
je
mov
cmp
jmp
jp
mov
fisubrs
aam
cmp
jb
sbb
add
add
xor
xor
mov
mov
jecxz,pn
pop
mov
adc
insb
sub
inc
inc
dec
ss
in
fs
jl
icebp
out
frstor
mov
xchg
insb
gs
leave
or
in
jmp
cmp
mov
xor
mov
and
out
ja
jo
sub
stos
and
ret
pop
inc
ds
cltd
cmp
andl
xor
pop
aaa
adc
mov
mov
mov
inc
jecxz
push
mov
cli
into
inc
flds
sbb
lahf
and
lret
out
adc
popa
and
gs
cmp
btc
mov
aad
rol
xchg
or
rcrl
pop
stc
cltd
aas
or
bswap
shrb
mov
and
add
or
dec
ljmp
xchg
mov
xchg
push
dec
jo
jg
mov
pop
dec
adc
adc
jge
jb
cmc
xchg
cli
shlb
sub
sub
je
dec
and
dec
lods
xchg
cmp
push
imull
push
jae
test
test
mov
incl
leave
mov
out
xchg
in
pusha
push
sub
push
push
aam
sbb
orb
xchg
jo
sbb
fsubs
sbb
cmp
lret
bound
mov
fisubs
push
mov
mov
ss
xchg
subb
jl
pop
push
movsb
sbb
aam
push
push
es
scas
nop
or
test
jg
shrl
push
imul
das
paddusw
daa
pop
fs
push
insb
imul
fadds
sbb
cmp
ret
aad
dec
sub
or
daa
inc
xchg
mov
pop
sub
xor
adc
and
sahf
bound
mov
rcrl
or
sbb
aaa
mov
test
push
xchg
fdivrp
fsts
inc
dec
scas
xchg
inc
xchg
loop
cmp
add
fmull
out
cmp
clc
cmpb
inc
cs
jo
ficoml
mul
negb
xchg
adc
out
sbb
loopne
movsl
dec
jg
loop
loopne
push
stos
test
sbb
mov
popa
frstor
fistps
add
iret
push
shrb
adc
mov
test
cmp
inc
adc
mov
jmp
jbe
push
cmpsl
inc
cltd
je
imul
inc
pop
imul
iret
bnd
nop
sarl
mov
adc
mov
inc
aaa
mov
mov
movsb
adc
push
es
stc
lea
add
movb
dec
mov
je
xchg
xchg
and
mov
add
test
in
inc
sarl
loope
mov
cltd
lods
mov
add
mov
cmp
ja
imul
or
sbb
and
cmpsb
cli
shlb
mov
test
sahf
loope
push
adc
test
sbb
pop
jle
mov
and
add
repz
cwtl
ljmp
out
xor
and
out
xlat
push
inc
outsl
cmp
imul
pop
and
and
inc
mov
mov
dec
mov
dec
or
rcrl
imul
and
xor
inc
aam
mov
popf
jne
add
lods
sbb
lcall
notl
cmp
pop
xchg
pushf
sub
xchg
fcmovb
mov
cmp
adc
loopne
inc
loopne
xchg
icebp
cmc
addl
jge
xchg
push
lret
xchg
push
sbb
push
mov
mov
cmpsl
sub
adc
pop
mov
stc
das
mov
jl
push
jp
push
mov
imul
mov
rorl
inc
stos
xor
inc
test
cmpsl
dec
sub
fmull
and
xchg
pop
cmp
call
cmp
sti
mov
sub
push
xchg
aad
cmp
arpl
jg
repnz
sbb
jmp
adc
mov
xchg
sahf
mov
adc
movsl
fiaddl
sub
insb
stc
repnz
inc
or
test
pop
scas
xor
or
fxam
xchg
fcomps
add
pop
les
sti
push
ret
push
ds
sbb
push
push
sub
clc
inc
jae
pop
lock
xchg
lea
ljmp
jp
pop
sub
imul
xchg
xchg
or
sub
loop
loop
add
dec
inc
cmp
loope
xchg
mov
pop
lea
insl
stos
mov
shlb
mov
cmp
int
add
push
pop
and
and
dec
cmp
push
cmp
fmul
push
jo
dec
lret
xor
les
xor
xchg
popf
cmp
mov
inc
mov
sbb
movsl
mov
fwait
cmp
shrb
xchg
movsb
int
xchg
jl
sub
stos
xor
and
mov
pop
mov
sbb
jo
scas
shrb
arpl
popf
xor
subl
pop
and
shll
mull
xchg
add
add
jl
sbb
mov
js
bnd
aam
test
loopne
mov
mov
jmp
mov
inc
fidivrs
repnz
int3
adc
mov
insl
into
push
mov
pop
les
xchg
idivb
adcl
pusha
push
push
xchg
dec
or
or
xchg
push
sbb
out
cmp
mov
in
pshufw
fprem1
push
push
ss
jmp
jns
xlat
lahf
sahf
imul
aas
jno
int
sarb
and
fs
sub
sub
mov
xchg
dec
out
out
cmp
lods
int3
mov
xchg
enter
lret
push
fistl
call
movsl
sbb
or
xor
inc
jle
pop
sbb
push
std
iret
mov
into
xor
cmp
mov
int
pop
fsubs
dec
in
loope
sub
out
push
dec
and
jns
ficompl
xor
inc
lahf
or
insl
shl
xorb
idiv
ljmp
and
int
das
bound
stos
push
es
insl
xor
je
arpl
sahf
bswap
dec
xor
out
sbb
out
cwtl
mov
das
sub
xor
stos
jno
inc
mov
push
fstl
mov
push
stc
cmp
sbb
fisttps
mov
fwait
roll
mov
cmp
pop
fdivrl
test
aas
and
enter
dec
xchg
jb
out
add
jo
cmp
sbb
fs
mov
and
or
xchg
mov
and
out
jle
ficomps
mov
push
mov
jo
push
cmc
or
mov
out
mov
jne
mov
adc
push
push
mov
add
jl
mov
lret
adc
sti
add
in
cmp
movsb
in
adc
jg
jecxz
lcall
xchg
jle
xor
add
push
mov
mov
je
add
stc
push
push
lods
sti
cmp
in
js
xor
ss
loope
sub
addr16
shrb
addb
mov
inc
cmc
mov
sbb
cmpsl
mov
mov
inc
pop
movsb
cld
shrd
push
rcrl
mov
cwtl
fidivl
int
cmp
into
push
sub
xchg
inc
shll
bnd
mov
mov
mov
cmp
dec
add
gs
xchg
xchg
push
cmp
pushf
fisttps
leave
xorl
ds
aaa
loopne
sub
push
repz
mov
out
xchg
xorps
insl
cltd
dec
push
jg
in
jnp
and
sti
adc
jbe
cmp
std
pop
jecxz
sahf
clc
mov
dec
lret
inc
lret
push
pop
out
jo
cmp
pop
inc
xchg
jae
rorb
jne
adc
or
mov
push
loopne
xchg
dec
imul
loope
pop
in
enter
add
pop
addl
popa
notb
fs
add
outsb
sub
je
jne
mov
xor
and
daa
cli
jbe
loope
jmp
jg
xchg
dec
lods
mov
pop
xchg
lret
into
jae
ss
cld
test
mov
push
ljmp
add
dec
inc
int
ljmp
xchg
hlt
loop
dec
cmp
nop
lods
inc
dec
inc
iret
nop
inc
cmp
pop
mov
mov
imul
mov
fwait
not
xchg
out
mov
xor
xlat
xchg
test
sbb
pop
pop
mov
and
and
xchg
scas
outsb
push
cwtl
xchg
jb
push
ret
cmp
mov
add
clc
pop
jb
or
pop
mov
add
movsl
jnp
sub
push
subl
pop
inc
mov
lret
xchg
test
lea
dec
adc
mov
mov
dec
jle
movsl
inc
adc
add
std
pop
adc
inc
iret
popa
inc
in
nop
lds
sub
xlat
jge
mov
inc
xchg
popa
dec
pushf
push
cmc
in
das
xor
ret
outsb
mov
xchg
out
and
out
sbb
sub
jecxz
popf
adc
dec
inc
scas
sub
jbe
iret
mov
adc
jnp
cli
xor
lcall
rclb
ja
mov
cmp
adc
and
sbb
out
fsubs
notb
cli
dec
add
xchg
or
add
ja
fld
adc
sub
bound
sbb
push
mov
xchg
jecxz
or
adc
dec
add
out
popf
pop
sbb
pushf
out
in
kmovd
fsubrl
fsts
imul
pop
sbb
xor
jl
loopne
cmp
inc
mov
pop
jle
ret
or
ljmp
hlt
push
xchg
fistps
ds
arpl
xchg
xchg
xor
pop
in
xlat
bound
lock
add
add
dec
ljmp
mov
add
adc
xor
push
in
repnz
xor
cmc
mov
mov
push
adc
lahf
test
jno
add
pop
cmp
jbe
add
sti
popf
push
xchg
cwtl
cwtl
pop
jb
or
xor
lahf
sti
xchg
sbb
mov
adc
mov
push
lods
or
dec
out
pop
or
ljmp
xor
xor
xchg
int3
add
mov
push
pop
mov
sbb
movaps
hlt
outsl
fldl
xor
xchg
push
loope
cmp
mov
gs
loope
mov
xchg
xor
adcb
outsb
push
in
push
or
jns
shll
je
stc
sbb
dec
sub
mov
dec
pop
nop
and
fsub
cmc
and
jl
movsb
push
xor
pop
cmp
popa
js
mov
mov
adc
lods
dec
leave
ja
shlb
mov
add
jle
std
cmp
jo
inc
nop
pusha
mov
movsb
loopne
inc
mov
inc
bound
repz
stos
scas
pushf
rcr
xor
subl
popa
adcb
push
push
pop
add
arpl
or
nop
sub
jl
inc
fsubrp
sub
xchg
les
out
sti
sub
push
clc
cld
add
enter
xchg
lds
les
and
fsubl
popf
sub
xor
aaa
popf
mov
das
push
mov
scas
cmp
popf
scas
loopne
aaa
cmc
jle
mov
call
ffreep
xor
out
daa
lahf
xor
cmp
jo
imul
repz
pop
sti
jo
fxam
inc
js
sbb
imul
stos
mov
ljmp
rep
icebp
in
sbb
jno
pop
imul
xor
mov
or
or
xchg
pop
jbe
jns
lods
fsubrs
xorl
lcall
shll
sub
pop
fists
aaa
orb
inc
mov
aaa
lock
je
mov
insl
mov
mov
pop
cmpl
sahf
mov
or
mov
mov
adc
stos
sets
inc
sbb
pop
call
data16
push
sahf
test
cld
imul
inc
ja
jg
xchg
mov
adc
in
push
mov
xor
xchg
pusha
xchg
push
or
es
push
divl
lcall
shlb
cmpl
lods
jns
mov
out
push
data16
xor
je
sbb
sbb
adc
jp
loop
cld
dec
push
add
movsl
sub
dec
inc
and
sbb
add
fdivrp
daa
std
and
add
stos
pop
popa
sub
add
pop
cmp
pop
add
sahf
popa
int3
inc
sub
inc
mov
push
shl
jne
addr16
inc
into
dec
mov
enter
add
push
rcrl
imul
push
out
popa
mov
pop
pushf
scas
mov
cmp
lods
push
mov
insb
out
inc
pusha
add
in
ja
mov
mov
fdivs
jmp
in
lods
dec
xorb
xchg
inc
push
rcl
xchg
jecxz
xchg
mov
cmpb
pop
jno
jno
mov
mov
jp
das
js
dec
icebp
icebp
cmpl
in
test
mov
inc
jl
popa
push
jmp
sub
adc
aad
fdivr
int
add
in
add
mov
lock
pushf
fstpt
popf
outsb
xchg
scas
rcl
add
mov
pop
loopne
pop
movsb
fadds
dec
shlb
pop
fs
push
jbe
aaa
ds
jno
pop
nop
cli
mov
and
inc
pop
adc
push
pushl
adc
push
mov
xor
mov
cld
pop
out
add
mov
mov
ret
rcrl
mov
pop
dec
ja
cli
jge
loop
add
clc
mov
cwtl
xchg
sbb
mov
sbb
mov
mov
adc
fdivr
push
mov
sbb
pop
clc
test
push
inc
addb
bnd
xchg
dec
aad
mov
rcrb
inc
test
stos
dec
and
sub
mov
push
jecxz
xor
lds
arpl
cmp
jae
sub
shll
sbb
test
sbb
and
pusha
jp
sub
sahf
gs
and
std
mov
xchg
sti
push
daa
mov
cltd
xor
sub
mov
lret
pop
sarb
ficoml
ret
ds
push
sbb
xor
cmp
stc
adcb
int3
sbb
mov
movsb
xchg
ret
loope
fdivp
adc
sahf
pop
sub
jge
jle
dec
mov
jmp
lret
sub
xor
mov
test
push
testl
test
inc
mov
jb
clc
sub
clc
pop
shll
arpl
xlat
icebp
pop
xchg
push
cltd
pop
inc
pop
pop
xlat
mov
add
adc
and
xor
roll
jp
inc
cmpsb
adc
inc
stos
inc
xor
or
fidivrl
stos
inc
dec
pop
imulb
sbb
xchg
xchg
std
push
add
lcall
arpl
daa
lcall
or
mov
stc
xor
jge
in
mov
and
cs
fldcw
aas
xchg
ret
ficoml
add
int3
fadd
addr16
cmp
dec
lahf
inc
push
xchg
shlb
loop
cmp
sbbb
jno
sub
loope
inc
add
sub
fistpll
das
fdivrp
xor
lret
jns
adc
sti
lret
aas
jne
push
sub
sub
cmp
out
sbb
mov
pop
lods
bound
xchg
addl
out
xchg
and
ffreep
or
xlat
push
bsr
sbbl
push
ds
mov
mov
mov
lret
inc
in
lods
test
mov
stos
shr
xchg
sbb
and
mov
mov
inc
lahf
sub
pop
dec
in
sbb
out
mov
loop
shlb
mov
mov
mov
mov
or
xchg
inc
loopne
sub
out
jp
push
cltd
ss
mov
sbb
and
mov
inc
js
mov
subl
xor
lods
jge
and
cmpsl
push
sbb
out
mov
les
xchg
repnz
test
mov
xor
imull
mov
sar
push
pop
insl
add
and
sub
xor
enter
loope
xlat
and
jge
adc
in
lea
fsubrp
mov
je
rorl
bound
aas
mov
inc
or
mov
test
mov
aas
mov
inc
das
data16
in
cld
mov
sbb
jmp
mov
or
mov
scas
mov
and
data16
div
lock
dec
insb
xor
xchg
mov
inc
push
dec
push
sbbl
and
dec
sub
xchg
xchg
add
or
insl
mov
pop
jecxz
ss
or
das
insl
mov
fisttps
test
das
pop
pop
xor
push
test
xchg
adc
in
out
mov
test
pop
ret
add
popa
xchg
data16
aad
pop
inc
aaa
arpl
decb
cmc
ret
inc
dec
fwait
fwait
call
mov
cmp
pop
mov
push
add
inc
stc
insb
xor
cmpsb
add
ljmp
lcall
pop
hlt
mov
xchg
xor
rorl
xchg
insl
and
xchg
jb
leavew
fdiv
dec
divl
sarl
push
repnz
jle
cmc
lahf
jle
sti
bnd
cmp
imul
shl
mov
mov
adc
sub
dec
sub
stos
jns
cld
test
adc
out
adc
inc
dec
inc
jg
xchg
xor
sub
loope
scas
pop
pop
jns
inc
mov
or
jl
mov
push
or
pushf
mov
cmp
out
popa
and
mov
rolb
jns
clc
xchg
push
cltd
add
roll
lods
divl
outsl
ljmp
fwait
pushf
mov
push
sbb
pushf
aaa
push
popf
scas
push
je
stos
dec
fidivrl
pop
pop
paddsw
mov
insl
das
stos
xchg
mov
test
add
and
adc
mov
sub
dec
push
cmp
push
clc
aaa
cmp
jae
iret
push
sub
pop
push
xor
sbb
rcl
xor
imul
lock
addb
dec
xchg
cmpsb
xchg
sbb
push
repnz
repz
mov
mov
jne
dec
jl
fs
mov
cmc
int3
enter
das
stos
sbb
add
call
and
mov
sub
adc
push
cmc
movsl
stc
jmp
cmp
inc
cmpsb
jbe
loop
push
jp
xchg
ret
push
add
std
sti
xor
into
push
xor
jbe
cmpsb
dec
arpl
pop
mov
sub
lahf
sub
jns
and
insb
inc
stos
adc
jmp
adc
arpl
jo
popa
xor
cmpb
xor
xchg
pusha
mov
mov
fcmovu
cmpsl
sub
mov
sbb
push
shll
adc
sub
xor
or
jp
pop
push
mov
pop
dec
mov
push
test
cwtl
jbe
and
leave
test
cmp
push
or
cs
bound
scas
clc
push
mov
jae
iret
in
cmpsl
cmp
pop
fs
and
jnp
add
pop
lret
jno
bound
xchg
dec
lret
lret
add
cmp
lahf
adcb
and
jg
pop
repz
xor
pop
daa
sub
mov
xchg
sbb
mov
cs
jno
or
cmp
sub
pushf
fsubrs
mov
lds
out
adcb
push
ret
fsubrl
lret
inc
shrb
cmc
xor
addr16
test
sahf
xor
mov
or
and
mov
push
or
or
ret
addl
popf
xor
mov
dec
in
jmp
cltd
mull
clc
int
mov
push
cmp
mov
push
mov
jnp
push
xchg
inc
scas
and
jb
inc
add
fistps
jnp
and
popf
sbb
sahf
mov
xchg
jl
cld
adc
test
adc
imul
fbld
push
ss
outsl
es
cwtl
xchg
jg
js
leave
adc
ja
inc
fdivs
imul
sub
sub
cmp
inc
std
mov
loop
lods
and
ja
xor
adc
les
xlat
cli
pusha
les
int
adc
mov
sub
iret
cltd
inc
dec
add
or
rcll
push
scas
jb
xor
shr
and
xchg
push
or
and
imul
inc
mov
fwait
dec
pop
mov
aad
mov
addl
in
mov
rol
adc
imul
mov
xchg
add
jbe
rclb
adc
or
pop
mov
popf
test
rolb
out
cmp
jae
ja
fs
xchg
imul
mov
out
jb
mov
scas
sbb
mov
in
les
push
shlb
out
or
xor
rcrl
lods
sbb
fwait
les
gs
cmp
mov
xlat
pushl
xchg
mov
pushf
inc
sbb
adc
adc
ss
push
int
cmp
outsb
cmc
sub
cli
fcom
inc
sbb
dec
mov
or
sbb
cmp
xchg
push
in
mov
xorl
jg
sti
cmp
dec
lret
xor
or
push
test
cmp
cmpsl
leave
sub
pop
jge
xchg
or
inc
inc
leave
jl
lods
dec
pusha
xchg
mov
loop
jb
aaa
push
insb
aam
shlb
or
pmuludq
dec
push
in
movsb
js
lea
repz
sbb
inc
fwait
mov
sub
sub
push
rolb
scas
xorl
cld
sbb
xchg
and
xchg
or
popf
inc
daa
push
jmp
sti
sbb
or
adc
jle
sub
dec
push
fstpl
inc
or
mov
movsb
bnd
cld
fwait
ret
push
jecxz
out
adc
cwtl
in
jo
frstor
adc
das
cmp
imul
adc
outsl
xchg
lock
cmpl
pop
xor
hlt
test
xchg
or
inc
sub
mov
dec
jge
adcb
pop
cmpsl
cwtl
push
das
stos
mov
xor
mov
aam
jbe
mov
push
icebp
jo
lcall
mov
jge
mov
js
std
dec
or
and
adc
cmp
push
xor
aam
mov
scas
push
sub
mov
add
xlat
sub
cmp
mov
in
dec
cmp
adc
aas
xchg
pop
pop
xchg
push
jo
sub
inc
cld
out
push
fwait
aaa
xchg
mov
mov
pop
out
mov
push
sub
in
mov
mov
iret
aaa
out
jbe
in
negb
xorb
pop
mov
pushf
sub
add
shrb
or
movb
dec
mov
cld
ret
or
lcall
xchg
or
mov
int
hlt
dec
cmp
es
fistl
and
mov
outsl
add
stos
ret
adc
icebp
push
out
jne
jb
push
push
lds
js
movsl
aas
andl
call
push
mov
rclb
mov
sub
mov
out
sub
mov
mov
cmp
jmp
aad
pop
adc
mov
test
mov
subb
jmp
cmp
lahf
xlat
das
dec
mov
loope
pop
movsb
push
inc
and
ds
push
out
inc
js
je
aad
test
push
add
sbb
pushw
insb
pop
rclb
aad
in
jne
jg
lock
cmp
lahf
sbb
cld
lret
xor
mov
ds
loope
inc
xchg
into
in
frstor
lahf
jns
cmp
lahf
ret
lahf
out
test
mov
jo
cmpsb
bound
lods
pop
imul
jbe
xlat
cli
fidivrs
sbb
cmp
push
in
jg
jae
mov
fidivl
cltd
fisttps
sarl
fcoms
cmpb
out
repz
sbb
xchg
outsb
lods
iret
arpl
cmp
mov
aaa
mov
push
sbb
test
push
aaa
out
cmp
cmp
push
inc
xor
in
fdivs
mov
and
sbb
pusha
iret
sub
xor
or
fisubl
in
jmp
fldcw
cld
stos
and
into
or
shr
fdivrl
in
pop
ljmp
js
mov
je
sub
mov
mov
mov
sub
imul
lock
sbb
mov
jbe
sub
shl
scas
mov
sub
ret
push
inc
int3
call
inc
jle
jl
inc
into
cmp
outsb
mov
push
and
in
mov
add
dec
xchg
mov
lret
adc
jmp
jle
adc
mov
test
jle
sti
lods
das
out
mov
mov
jne
and
cmp
jns
pushf
mul
icebp
jle
test
incb
jp
pop
push
push
inc
xchg
fistl
lret
mov
mov
movsl
mov
lahf
adc
iret
mov
dec
mov
movsl
jmp
scas
pop
push
jg
std
dec
mov
popa
clc
dec
push
jae
push
mov
mov
rcrl
inc
push
xchg
dec
and
sub
xchg
sub
mov
test
std
test
bswap
imul
pop
cltd
xchg
mov
insb
and
pop
pop
cmpsl
pusha
ljmp
inc
test
std
jnp
lods
ret
loopne
ljmp
in
adc
pop
xor
sbb
xor
sub
dec
cld
addr16
js
mov
pop
inc
mov
cltd
jge
add
mov
mov
pusha
ficomps
fidivrs
popf
push
dec
adc
xor
mov
out
mov
inc
mov
testl
dec
mov
mov
fadds
xchg
sti
jge
push
cmp
mov
lret
mov
cmp
ret
js
jno
pop
jecxz
std
push
sahf
mov
flds
mov
nop
and
inc
and
fnstsw
pop
cld
addl
jmp
xchg
jl
lahf
arpl
insb
mov
sbb
cmp
shrl
inc
sbb
adc
pop
mov
bound
mov
sbb
inc
scas
iret
rolb
arpl
fdivrp
stos
inc
fadd
pusha
loope
xchg
sub
inc
fcompl
mov
add
aaa
mov
push
insb
add
add
adcb
mov
jmp
fincstp
and
aam
jb
popa
pop
stos
push
xor
mov
sub
mov
popf
mov
and
inc
add
or
push
sti
iret
mov
push
popf
jns
cmpsl
lods
lea
dec
adc
dec
lcall
lcall
hlt
and
daa
pop
in
lahf
gs
xchg
mov
pop
sar
lahf
pop
xor
pop
add
mov
jmp
adc
mov
push
cmpl
sub
jecxz
jnp
dec
push
xorb
nop
mov
lret
add
rclb
rcll
add
test
inc
mov
in
sar
and
xchg
sub
or
mov
add
lods
cmpsb
jmp
mov
pop
xchg
insl
jns
pusha
push
daa
sub
stos
xchg
out
in
orb
ret
jmp
jno
sti
add
xor
addb
xor
pop
adc
jbe
movsl
fnstsw
or
or
movsb
sbb
xlat
lods
pushf
les
lea
mov
outsl
out
mov
negl
xor
aad
add
fwait
and
cmp
lahf
xor
mov
lods
inc
in
add
push
es
cmp
sub
das
mov
jae
mov
inc
inc
mov
xchg
push
iret
add
push
orl
push
add
repnz
lahf
push
aaa
addr16
mov
sub
push
and
cmp
jo
dec
adc
mov
mov
rol
call
and
sub
cmp
xor
aad
push
sub
lret
mov
pop
cmp
xchg
rol
mov
dec
in
push
mov
lock
inc
in
inc
pop
mov
pop
lcall
jmp
loope
push
imul
mov
mov
sub
jae
pushf
fildll
push
mov
xchg
push
adc
scas
and
inc
xor
jne
xchg
loopne
fptan
aaa
jl
xchg
das
dec
jns
ret
or
hlt
xor
lea
insb
dec
xchg
cmp
adc
addr16
cmp
test
fldcw
aaa
fidivrs
mov
push
push
dec
mov
mov
in
lock
or
icebp
cli
jb
aam
mov
sub
pop
mov
add
lock
addr16
cmpsb
or
sbb
fbstp
push
adc
jmp
cmovp
aas
inc
mov
daa
mov
xchg
out
pop
inc
pop
mov
add
dec
dec
jbe
insb
fadds
out
xor
ret
sub
mov
mov
int
sti
dec
mov
loopne
lret
enter
push
sbb
mov
dec
push
fstpl
xchg
pop
popf
mov
enter
pop
pop
rcll
movb
cmp
push
sub
daa
repnz
rclb
movsl
xchg
in
jbe
sub
push
mov
cmp
test
imul
ja
inc
mov
rcrl
imull
loopne
mov
iret
dec
pop
aam
insl
pop
and
add
jp
in
mov
jp
jl
pop
pushf
pop
fstpt
lahf
cmc
jb
loop
xor
pop
fcmove
push
lret
fs
stos
xchg
aam
nop
iret
push
stc
hlt
in
std
push
dec
xchg
sub
sbb
inc
sub
call
cltd
test
adc
lds
loop
out
mov
dec
outsb
sub
pop
test
shll
pop
and
mov
cmp
adc
psubd
mov
add
shll
rol
mov
inc
aaa
jg
or
dec
pop
sbb
clc
xchg
jg
ljmp
sbb
mov
loope
inc
jns
mov
jb
add
mov
rol
pop
jle
lret
inc
je
cwtl
pop
dec
mov
in
mov
hlt
cwtl
cmp
push
mov
jmp
jge
aas
dec
or
imul
dec
shl
les
sbb
ljmp
test
adc
dec
fwait
push
test
push
and
adc
test
dec
pop
shlb
in
aad
andb
pop
sub
mov
cltd
push
push
bound
push
mov
stc
and
sbb
jae
sbb
imul
mov
nop
pushf
sahf
cmc
scas
push
ljmp
mov
adc
rclb
add
test
xchg
aad
push
fcoms
sub
das
xchg
enter
stos
pop
hlt
fildl
imul
imul
mov
sub
cmp
jp
fwait
and
sarb
jbe
adc
bound
and
xchg
push
and
sbb
fs
sarb
test
inc
in
cmp
int
pop
push
enter
xchg
daa
mov
inc
lahf
rol
mov
adc
sahf
cmp
stc
mov
xor
push
repz
lahf
orl
sti
add
clc
mov
inc
imul
mov
cmc
repz
jecxz
xchg
rclb
ret
in
fucomip
inc
cmpsb
addr16
testb
sarl
roll
subb
xor
mov
dec
ret
mov
and
jg
roll
call
lcall
lahf
leave
cmp
mov
cld
sub
je
pop
mov
or
mov
jecxz
push
add
or
fadd
ror
xchg
jmp
iret
stc
dec
fildl
xorl
mov
push
lret
cmovl
mov
adc
jmp
xchg
cmp
sub
pop
jbe
popf
out
jae
mov
sbb
pushf
xchg
subb
daa
fdivrp
sbb
test
push
dec
ret
fnstsw
xchg
or
cli
cmp
iret
shr
gs
adc
iret
xchg
dec
dec
dec
into
inc
and
mov
out
xchg
and
mov
push
js
addr16
leave
mov
mov
fildll
ja
test
sub
mov
cmp
mov
nop
aas
xchg
xor
inc
cmp
nop
repz
je
sub
fmulp
mov
pop
mov
inc
stos
fnstcw
test
jnp
cmpsb
popf
adc
inc
loop
out
dec
push
xchg
int3
ror
dec
imul
mov
scas
test
je
addr16
fmull
pusha
lcallw
scas
adc
cli
es
and
mov
cmp
dec
rol
add
jle
mov
cmp
call
fadds
popf
dec
push
push
xchg
packsswb
cli
mov
data16
popa
ljmp
fistps
jb
sti
push
add
jnp
movsl
pop
shl
lret
insb
sbb
rclb
or
popf
mov
mov
push
cmp
sti
inc
xor
jg
cs
ret
lods
pop
orl
mov
icebp
push
dec
mov
cmp
pop
test
aas
frstor
sub
inc
sbb
aam
in
movsl
lds
pushf
clc
sbb
movsb
dec
push
sbb
leave
dec
ss
jg
cmp
xchg
js
scas
sub
loope
cwtl
mov
daa
fmull
sub
push
lea
aaa
or
add
jns
subl
aad
xchg
sub
add
scas
daa
pop
das
jne
adc
xchg
pop
sbb
cmpsb
out
jbe
adc
pop
xchg
jno
add
xchg
cwtl
mov
mov
add
and
mov
ja
lods
push
mov
and
je
mov
push
clc
ss
movsl
push
fsubs
pop
sub
mov
popf
mov
insl
stc
push
mov
mov
xor
outsb
pop
adc
add
icebp
push
inc
adc
pop
out
lods
cmpsb
cwtl
aam
jne
cmp
daa
fdivs
xchg
stos
mov
or
mov
dec
popa
mov
pusha
dec
adc
add
ja,pt
mov
orl
inc
or
cmpsb
aas
sbb
xorb
std
cmpsb
jle
inc
xchg
loop
dec
lahf
dec
fsubrs
mov
cmc
xor
pop
insl
lods
dec
test
insb
ljmp
inc
inc
or
xchg
es
insl
fisttps
mov
and
mov
add
mov
adc
mov
clc
int
add
xchg
xchg
xor
repnz
dec
jge
jne
call
mov
xlat
xlat
cmp
xchg
call
add
int
fucom
push
ret
inc
test
mov
cmc
fsts
pop
adc
pop
sub
lahf
lahf
lahf
scas
scas
inc
jle
mov
adc
sahf
out
shl
adc
xchg
push
adc
cmp
cltd
jno
hlt
and
fwait
and
insb
hlt
aam
mov
hlt
xchg
aas
pop
jg
rorb
fwait
in
data16
stos
pop
fldt
cli
cwtl
jecxz
in
pop
sar
fcomps
add
push
outsl
mov
das
cwtl
mov
jnp
push
in
pop
scas
sub
loopne
pop
mov
int3
mov
mov
bound
dec
cmp
cmp
pop
jl
mov
xchg
jg
mov
mov
dec
and
lock
xor
push
int
call
test
cmpsb
pop
dec
cmp
leave
dec
rorl
cmp
mov
xchg
shrl
into
fdivrs
in
pop
pushf
mov
sub
pop
dec
outsl
pop
mov
add
cmp
fisttpl
out
movsl
mov
mov
adc
stos
mov
mov
inc
push
jo
xchg
push
lock
hlt
cmc
rcll
fsubp
mov
jle
stc
aam
lods
jo
inc
scas
and
dec
aas
sarl
mov
popf
xor
add
cmp
repz
mov
lret
cltd
sub
xchg
sub
cmpsl
repz
idivb
es
ret
fxch
enter
inc
mov
les
movsl
cltd
dec
insb
aad
loopne,pn
push
ja
mov
pop
mov
or
sbbl
pcmpgtw
js
stos
lods
jne
jmp
add
testl
stos
test
add
pop
leave
pushf
jne
pop
loopne
repnz
add
int3
cmp
ja
stos
ja
loope
cmpsb
cmp
cwtl
jge
mov
fcoms
outsb
mov
pop
xchg
jbe
aam
and
sub
jg
rclb
cmp
adc
pop
in
pop
insl
pop
es
lahf
bound
mov
in
dec
cmc
xchg
out
imul
dec
pop
in
incb
into
ja
dec
mov
jnp
aad
imul
aas
mov
dec
dec
mov
das
pmuludq
lock
cmp
outsl
sbb
enter
push
cmp
fldenv
lret
into
push
sub
push
je
lret
out
out
cmp
fs
mov
cmpsl
ficoms
scas
sahf
ret
movsl
push
movsl
popa
out
mov
into
lret
loope
xorb
je
lods
bnd
cmp
xchg
divl
cmpsb
xor
jge
mov
mov
aas
into
cmp
add
mov
icebp
outsb
sbb
lods
inc
pop
notb
dec
ss
pop
sbb
loop
sub
cld
xor
lods
fdivrp
push
shl
cld
ret
pop
inc
jne
aam
lahf
shlb
and
jge
push
fdivs
adc
pop
add
jp
ret
adc
jmp
mov
lea
cmp
inc
jg
add
push
jb
test
xchg
int
shrl
jle
in
loop
out
call
rolb
push
push
xor
push
hlt
subb
clc
xor
and
push
enter
cmp
inc
push
dec
out
fnstsw
dec
sarl
cmp
jge
jno
xor
sub
sbb
pushf
mov
mov
mov
pusha
test
mov
pop
lret
cmp
insl
inc
stc
out
aas
mov
clc
jo
pop
sub
movsb
or
jecxz
mov
iret
push
cmpb
psrad
sbb
lods
inc
inc
in
dec
pop
xor
adc
scas
cmpl
fcomp
lahf
cltd
mov
les
adc
ret
cld
jle
cmc
dec
std
push
fstl
xchg
decl
dec
xor
inc
pushl
js
out
mov
push
push
pushf
sub
lock
cwtl
xchg
fstpl
and
insb
jge
cmp
std
jb
and
int
mov
ret
mov
jnp
mov
loope
gs
ficomps
je
shlb
enter
fwait
int3
subl
cmp
nop
iret
xchg
rcll
cs
ret
mov
pop
jb
int
fsts
daa
daa
add
cltd
lcall
xor
scas
rorb
xor
cmpsb
stos
push
xorl
mov
add
test
push
pop
das
mov
pop
mov
int3
dec
sti
mov
xchg
sub
xchg
sahf
into
into
xor
and
out
rorb
jns
call
add
ja
xor
ret
dec
or
cmpsb
fbstp
push
adc
mov
and
mov
push
or
ja
loope
sub
mov
mov
call
fistl
cmp
lss
inc
fstl
aam
sub
adc
pop
pushf
dec
shlb
movsl
out
pop
pop
clc
cmp
sbb
sub
test
fsubr
into
jg
cmp
mov
xchg
outsl
mov
or
pop
push
inc
into
xchg
mov
sbb
jb
cli
push
int
mov
or
test
xor
lcall
iret
in
movsl
jecxz
dec
fildll
test
mov
shll
or
inc
fldenv
mov
adc
fwait
xchg
shll
cld
xor
dec
fildl
int3
repnz
daa
xchg
adc
fcmovnu
fildl
scas
jmp
dec
dec
push
push
fwait
sbb
push
xor
mov
insb
cld
mov
and
mov
mov
mov
push
adc
aaa
or
pop
insl
mov
outsl
movsb
test
cmp
mov
push
lret
test
jne
test
lods
in
and
test
out
add
inc
outsb
mov
sub
inc
pop
pop
fnsave
pop
call
push
lods
xor
push
sti
inc
sub
push
mov
test
nop
cmp
dec
lods
dec
ficomps
inc
xchg
icebp
pop
lds
push
nop
xor
stos
pop
inc
loope
inc
jnp
add
test
jge
insb
jecxz
xchg
mov
xchg
jne
jb
popf
fs
push
rcrb
je
jo
push
or
cmp
xchg
push
div
dec
mov
pop
xchg
and
adc
stos
int3
dec
shlb
into
shlb
out
hlt
jge
xor
dec
lods
sbb
or
cmpsb
lcall
push
push
clc
push
jp
negl
scas
rep
adc
fists
fwait
or
cmpsb
movups
pop
xchg
cmp
sbb
add
jae
repz
arpl
cmpsl
int3
jb
rorl
bound
flds
lods
mov
push
mov
lret
jg
stos
ret
imul
jns
outsb
mov
enter
push
ljmp
test
inc
and
mov
sub
addr16
shr
pop
adc
push
movsb
mov
lahf
sub
cmp
push
das
adc
imul
out
xor
sbb
mov
xchg
push
mov
sub
imul
mov
sub
rcrl
shrb
mov
jle
jne
and
cltd
mov
mov
ror
sbb
push
sahf
seto
dec
in
ds
cmc
popa
adc
sarb
lret
xchg
daa
mov
adc
push
mov
icebp
cmp
pop
out
iret
pushf
xor
or
inc
push
xchg
or
xor
cmpxchg
jmp
fisubrl
fcmovnu
repnz
push
pop
out
push
mov
push
leave
pop
xchg
sarl
out
movsl
pusha
push
cmc
orl
cld
pushf
js
lret
and
in
jle
or
or
push
push
fwait
adc
add
mov
clc
int
pop
js
lret
xchg
iret
stc
sub
cmc
lahf
cmp
cmp
jp
iret
push
leave
test
dec
cs
test
insb
dec
rcrb
aad
xchg
add
ljmp
dec
neg
into
jp
outsb
cltd
mov
fsubl
pop
in
cmpsb
ljmp
bnd
mov
fsubr
jns
addb
inc
das
pop
xchg
jns
jo
imul
add
add
cmp
sbb
sti
lds
test
ds
out
sarb
mov
and
mov
xchg
jmp
fs
mov
jbe
out
pusha
dec
mov
push
loopne
cmp
cmp
shll
mov
adc
inc
lret
rorb
pop
xchg
fildl
mov
mov
mov
in
adc
xor
xchg
lea
adc
mov
arpl
fcmovu
rcr
cmp
int
cmc
shl
mov
sbb
fsubs
or
mov
add
lcall
int3
jp
divl
mov
mov
out
dec
andl
push
aam
sbb
xchg
xchg
mov
aas
pop
pop
lods
push
sti
je
fidivrs
pop
fsubrs
int
popa
shrl
mov
push
jbe
leave
sub
loopne
pop
push
lcall
outsl
sbb
push
in
dec
outsl
sarl
inc
movsl
test
movsb
pop
movsl
pop
fcoml
dec
cs
xor
mov
pop
and
sbb
fwait
mov
jo
pop
movb
mov
fs
sbb
fwait
xchg
fistpll
jp
sbbl
lock
mov
or
jo
push
pop
inc
sbbl
and
push
or
fdivrs
sbb
fstps
push
lods
mov
push
mov
in
inc
aas
mov
mov
outsl
shr
pop
rorl
lret
aad
mov
sub
cmp
xchg
in
addb
scas
jmp
in
mov
cmpsb
add
pusha
sub
sbb
ror
jge
jp
xchg
jbe
cmp
aam
adc
add
mov
in
jge
or
cli
inc
mov
adc
lcall
dec
ljmp
push
lods
ds
mov
cmp
add
stos
cmp
mov
mov
xlat
je
cmp
stos
call
dec
adc
fisttps
into
fnstcw
mov
sub
sub
adc
push
mov
and
cmp
addr16
or
fists
adc
jo
push
dec
scas
adc
xchg
cmp
push
push
dec
adcb
popf
sbb
fcomps
loopne
out
in
inc
pop
orl
je
mov
leave
xchg
add
clc
inc
add
jns
cmp
in
adc
add
push
mov
dec
cmp
inc
jmp
lock
hlt
add
adc
adc
addr16
jl
pop
sub
sti
mov
inc
lea
testl
mov
lahf
mov
push
jl
push
movl
jbe
mov
sahf
or
fmuls
lds
adcl
das
gs
sub
inc
or
xchg
cmp
jno
sti
ljmp
loop
add
lea
inc
mov
call
or
mov
cld
test
pop
xchg
jne
jmp
adc
shrb
int
sbb
adc
and
push
cmp
in
sub
in
add
sbb
hlt
mov
add
sub
or
adc
fimuls
fisubrl
arpl
ret
testb
or
adc
ss
adc
repz
popa
into
in
loope
xor
and
leave
adc
out
dec
jno
stos
xor
cmovne
xchg
loope
adc
mov
jne
pop
scas
sar
lret
clc
and
push
jge
lods
dec
daa
sbb
sbb
out
in
sbb
xchg
lahf
adc
test
jmp
xor
cli
push
ficompl
out
out
in
ret
jecxz
cld
loope
imul
into
test
out
push
push
and
stos
push
subb
ficompl
sbb
hlt
jbe
pop
cmc
mov
fsubs
adc
xor
ret
adc
call
lea
daa
sbb
push
and
in
std
mov
inc
push
out
popf
into
push
adc
sub
cmp
mov
popa
pop
dec
xor
cmp
insl
jb,pt
icebp
xchg
dec
xchg
sbb
pushf
mov
jae
jb
pop
add
jge
mov
out
je
xlat
jmp
push
jno
cmp
test
dec
xchg
idivb
mov
pshufw
and
xorl
loopne
cmc
mov
jle
popf
inc
mov
and
outsb
sbb
notl
pop
fisubs
push
pop
push
dec
aad
sarl
fidivl
dec
xor
int3
or
ss
sar
sbb
inc
mov
push
mov
xchg
dec
inc
mov
xchg
cmpsb
pusha
jo
or
out
dec
mov
or
lret
cmp
push
mov
aad
jno
nop
std
jmp
insl
jp
dec
jg
shlb
xor
js
cmpb
in
mov
into
pop
cwtl
dec
add
ljmp
gs
mov
scas
inc
outsl
mov
dec
mov
xor
or
mov
cmp
decl
mov
out
and
and
fmuls
out
inc
fs
jg
or
jg
arpl
dec
adc
sbb
fisubrs
and
push
ret
sbb
popf
clc
divb
mov
hlt
pop
ss
test
icebp
push
xchg
sbb
dec
cltd
std
ja
push
mov
cmpsl
pop
cld
test
dec
sub
sub
loope
sub
push
xchg
push
inc
sbb
adc
push
dec
dec
xor
arpl
cs
and
and
mov
sub
int
repnz
call
cmpsb
outsl
fxch
stos
bound
xorl
cmp
repnz
mov
data16
jae
push
pop
das
aam
shlb
xchg
or
stos
push
lods
adc
shrl
loope
leave
mov
xor
jae
cmp
xchg
mov
incb
add
stos
xchg
dec
jecxz
pop
sub
pop
test
sub
or
scas
sbb
movsl
outsb
push
or
xchg
sbb
enter
or
rol
mov
pop
cmp
lock
xor
roll
cli
les
jle
dec
cli
bound
jle
je
fists
mov
add
pop
insl
sub
roll
xchg
orb
subb
fisubrs
adc
adc
pop
enter
and
cld
add
aam
jbe
adc
arpl
daa
sbb
or
andb
dec
mov
xchg
cs
pop
loope
stos
or
or
pop
push
call
xor
push
jb
add
mov
outsb
incb
es
test
scas
cli
jecxz
out
fs
sub
lahf
fsubp
dec
les
dec
daa
aad
das
push
push
popf
xchg
sub
push
xchg
daa
mov
mov
cmp
ss
stc
pop
and
test
mov
imul
push
fstp
mov
sahf
test
div
sahf
adc
mov
mov
mov
sbb
cmp
lcall
mov
sbb
jmp
xchg
pop
cmp
cmc
sub
fdivrl
hlt
add
adc
sub
nop
add
pop
stos
inc
out
leave
or
dec
test
xchg
nop
xchg
sbb
cmp
cmc
lret
cmp
mov
mov
shl
shr
sbbb
ljmp
loop
sub
fsubrs
negl
in
and
pop
or
test
fs
or
mov
test
inc
sub
inc
inc
inc
jae
adc
dec
lods
outsb
es
sbb
xchg
cmp
repnz
lea
lods
mov
loope
mov
stos
inc
shr
mov
fstps
fstpt
sbb
imul
lret
mov
cmp
out
mov
pushf
cmp
call
scas
jmp
in
push
arpl
xchg
icebp
or
aas
jb
sbb
in
icebp
into
sub
loopne
add
adc
lcall
les
filds
inc
inc
push
faddl
jnp
xchg
inc
xchg
lds
call
das
daa
push
iret
inc
das
push
aas
les
dec
ja
repnz
popa
or
daa
mov
push
sub
inc
push
negl
xor
mov
fists
mov
push
icebp
mov
jl
mov
sbb
mov
cmp
cmc
sub
mov
fld
jle
mov
fucomi
mov
cs
xchg
push
push
mov
jg
and
and
cltd
in
es
xor
sbb
addl
pop
push
rcrl
and
and
jecxz
xchg
out
xchg
loope
es
scas
test
mov
add
inc
test
inc
inc
inc
mov
addl
aaa
inc
push
xchg
push
or
inc
pop
orl
mov
or
xchg
testl
and
pushl
and
mov
xorb
insl
outsl
adc
cli
and
mov
add
mov
leave
inc
adc
lcall
cmpb
mov
hlt
stos
adc
out
push
and
lahf
sub
subl
pop
out
dec
pop
inc
xchg
in
xchg
dec
pop
xchg
mov
xor
pop
dec
jmp
inc
rorb
push
mov
sbb
xchg
repz
push
xor
or
xor
outsl
cmpsl
pop
inc
sti
int3
and
lock
iret
pushl
add
mov
lods
cmp
or
dec
dec
rorb
fsubr
pop
fistps
dec
xlat
in
mov
aas
stos
and
shlb
out
mov
adc
sbb
add
popa
jle
sub
gs
jg
leavew
push
mov
xchg
pop
or
inc
xchg
sbb
dec
fnsave
inc
and
mov
xchg
mov
stos
cmp
enter
adc
out
and
mov
xlat
or
mov
dec
pop
out
pop
mov
into
punpcklbw
outsl
popa
sbb
cmp
jae
mov
and
mov
dec
sbb
rorl
in
xchg
out
sub
arpl
sbb
ljmp
and
movsl
ds
loop
adc
loop
rolb
cli
jb
cmpsb
imul
loope
dec
stos
mov
pop
scas
and
mov
jle
sub
sbb
mov
xchg
sarb
fists
xor
cs
add
das
cmpsb
pushf
daa
push
push
inc
mov
or
jle
inc
in
cli
push
sub
jne
adc
pop
mov
cld
dec
xchg
lea
ret
mov
push
movsb
shl
cmpsl
and
outsl
pop
outsl
ret
inc
jge
or
pop
sub
and
aas
inc
scas
into
lds
and
mov
in
iret
aad
popa
jbe
imul
shll
add
aaa
cli
ljmp
jnp
in
xor
lds
js
jbe
add
push
dec
ret
sahf
enter
cmpsb
scas
hlt
ss
loop
fsubrl
push
cmpsb
and
add
xor
mov
shl
mov
dec
adc
cmpsl
pop
popa
dec
lcall
push
or
gs
jae
lds
jae
xchg
repnz
push
lahf
pop
insl
fnstsw
mov
cmp
leave
add
adc
add
push
lahf
xor
push
aaa
test
lods
fcompl
mov
push
scas
stos
sbb
rclb
push
cmp
loop
xor
bnd
add
je
cmpsb
loope
dec
sbb
sub
outsb
mov
xchg
stos
fcoms
addb
gs
repz
and
xor
aad
testb
mov
mov
je
repnz
test
mov
icebp
lods
and
ds
ljmp
fimull
inc
lods
daa
dec
sahf
movsb
adc
and
sbb
in
mov
call
cmp
repz
ja
aaa
push
add
xchg
pop
pop
xchg
xor
cmpsb
cli
test
call
sub
fwait
not
mov
xchg
adc
loop
push
nop
cmc
mov
sub
xchg
out
ljmp
rcrl
fisttpll
mov
push
aad
insl
jge
xchg
iret
sbb
cmp
inc
push
std
daa
pop
push
movsb
and
sbb
test
sub
loopne
cmp
inc
adc
test
out
test
neg
adc
sahf
push
ss
adcl
aad
iret
sub
call
mov
outsb
fdivrl
jnp
fimuls
or
pop
jmp
xchg
loope
mov
sbb
jmp
dec
aam
sti
test
shl
daa
inc
ss
lea
in
scas
sbb
lret
push
mov
je
cmpsb
mov
leave
int3
mov
adc
mov
mov
loopne
add
pop
jnp
js
dec
rorb
je
inc
and
into
add
mov
jns
dec
dec
lahf
xor
mov
jne
fistps
stc
add
xor
add
xor
xor
repnz
jo
inc
bound
int3
leave
xor
jb
fsts
cmp
popa
adc
inc
xchg
mov
scas
mov
jge
cmpb
shlb
or
or
add
movsb
sub
inc
test
lret
les
test
fidivs
mov
lcall
adc
cmpsl
outsb
cmp
dec
fnstsw
cs
mov
mov
push
jge
dec
mov
push
xchg
loope
jae
mov
fstpl
ret
or
test
xor
pop
sub
sub
adc
stc
outsb
shlb
pop
leave
ljmp
sub
repnz
xchg
inc
mov
inc
mov
cld
ret
or
inc
and
lret
out
sbb
fsubr
les
int
and
and
ja
incl
lds
cmp
shll
pop
push
int3
out
inc
xor
insl
mov
push
shr
clc
in
aad
cmpl
test
pop
fbld
dec
int
mov
add
dec
jnp
jmp
dec
xchg
jg
sub
out
cmp
scas
and
cmpsl
xchg
mov
inc
cmp
stc
sbb
and
inc
iret
popa
mov
lods
push
dec
cmp
in
jl
push
lock
jbe
xor
push
lods
roll
in
sar
sbb
aas
mov
je
out
adc
out
movsb
nop
bound
and
xchg
ret
add
jnp
test
fisubl
adc
push
daa
cmp
pop
icebp
bound
mov
jno
push
sub
and
sub
loopne
sub
dec
iret
movsb
je
in
cmp
mov
decb
mov
push
xlat
or
adc
mov
push
pop
xchg
or
mov
aaa
into
icebp
lret
mov
jne
vmread
xor
int3
pop
push
nop
jne
mov
aas
lea
loop
mov
jnp
mov
or
pushf
mov
add
into
pop
lret
mov
sub
call
test
adc
or
pushl
outsb
sub
pop
mov
jmp
lds
pop
daa
sub
scas
mov
addb
negl
outsl
hlt
inc
mov
jnp
inc
sub
jbe
adc
cmp
ss
aas
lock
out
cmpsb
jge,pn
and
stos
sbbl
stos
pusha
mov
leave
pop
test
cmpsl
push
pop
in
ja
jmp
mov
mov
stos
loope
mov
push
lea
add
lods
and
jne
pop
arpl
out
jmp
out
adc
lods
enter
ja
cs
adc
jmp
adc
mov
xorl
sahf
shrb
pusha
mov
rolb
xchg
cmc
pushf
aas
push
jecxz
test
mov
sbb
mov
cmp
ret
loopne
dec
out
xchg
rcrl
xchg
lds
lcall
int3
xor
data16
sarb
or
jno
mov
insb
int3
cwtl
loopne
movsl
mov
sahf
loopne
scas
jmp
pusha
lret
cld
xchg
pop
decl
mov
in
ja
adc
pop
fmul
and
js
xor
lcall
jo
out
popa
inc
xchg
fs
ljmp
mov
push
test
jge
cwtl
push
mov
sbb
das
bound
jl
inc
in
in
mov
in
xchg
pop
stc
mov
inc
lods
mov
dec
mov
pushf
push
fmulp
cmpsl
or
xchg
repz
push
inc
or
mov
mov
mov
cld
sbb
cmp
std
dec
mov
hlt
push
repnz
push
mov
xchg
stos
pop
mov
imul
or
movsb
aaa
js
cli
fmuls
mov
mov
mov
or
dec
je
int
mov
cmp
mov
roll
pop
mov
xchg
movsl
xchg
ret
sub
movsl
add
jle
fldl
jb
arpl
dec
insb
lahf
sub
push
fidivs
mov
and
loope
sub
les
add
in
add
jge
insb
ret
adc
cmp
shlb
nop
sub
or
push
sbb
xlat
adc
inc
addr16
lret
xchg
adc
nop
xchg
jg
dec
add
adc
shrb
fsubrl
test
jmp
and
push
or
decb
and
sub
add
add
or
inc
int
mov
mov
bound
fcmovu
mov
std
ds
sbb
fdivs
mov
rclb
out
repz
inc
adc
sub
adc
jb
inc
ss
jecxz
arpl
push
movsl
add
xchg
gs
xchg
mov
bound
jle
add
xchg
orl
sub
ror
pop
fiadds
dec
lds
imul
fbld
sbb
push
xor
shlb
mov
fs
repz
cmp
outsl
incb
fcomip
les
pop
and
scas
sub
push
xchg
add
fs
lds
ss
lahf
daa
pop
lret
loopne
mov
cltd
jno
arpl
mov
out
dec
xor
jmp
fcmovnu
sub
inc
jp
xchg
lcall
lret
jmp
outsb
pop
adc
xchg
push
mov
or
pop
cmp
mov
add
xor
jecxz
push
mov
fsubrs
stos
push
sbb
loopne
mov
pop
and
pop
adc
adc
mov
cmc
mov
sbb
std
ja
jo
nop
shll
jge
js
repz
jno
outsl
or
add
sbb
shlb
sbb
clc
jmp
xchg
or
test
xchg
jle
sub
out
cli
sub
push
pop
xchg
orb
xor
jno
js
test
jg
push
cltd
dec
pushf
xchg
sbb
adc
out
sbbb
sub
shrl
out
xchg
ds
cltd
push
icebp
je
dec
ljmp
jns
inc
or
jae
mov
pop
xchg
adc
or
psubb
stos
es
imul
cmpsl
lea
dec
pop
mov
scas
sbb
movsb
pop
out
gs
or
sub
test
negl
sub
or
lret
xlat
out
insb
push
sbb
add
and
out
adc
outsl
aad
outsl
ret
cmp
sbb
jno
jbe
jo
mull
pusha
mov
fdivrl
jmp
push
test
mov
fidivs
popa
pop
ret
test
loop
es
popa
jmp
pop
incb
test
cmp
dec
pop
jge
ror
movl
stos
jnp
and
iret
loop
testb
xor
jg
rorb
daa
sbb
pop
mov
ja
test
rorl
js
shr
dec
xor
into
loop
mov
lock
xlat
and
aam
pop
sbb
jg
movsl
jecxz
faddl
loop
xchg
pop
nop
adc
sub
xchg
inc
pusha
lods
loope
stos
ljmp
das
insb
mov
adc
xchg
jl
push
nop
test
mov
cwtl
push
test
cwtl
mov
fldenv
fnsave
in
dec
stos
sarb
dec
push
cld
xchg
arpl
push
jo
lahf
int
mov
outsb
jns
je
sahf
mov
pop
repnz
xchg
jnp
cmp
lods
iret
test
pushf
cmc
mov
or
aad
dec
mov
inc
mov
adc
cmp
mov
and
and
mov
xor
lret
ss
push
popa
arpl
add
pop
xor
push
push
dec
sub
or
or
daa
bound
dec
xchg
imul
popf
imul
dec
test
jb
std
dec
fstps
loope
cmp
stos
aaa
inc
lods
test
push
push
leave
pop
lret
sbb
dec
in
and
add
sbb
and
in
imul
xor
aas
dec
or
inc
mov
jg
cltd
vpsrlw
mov
sub
popa
stos
ret
lods
dec
movsb
fwait
cmp
fists
add
jmp
imul
test
dec
sbb
sub
fwait
pop
insl
jecxz
pop
ret
outsl
jae
and
sarb
xchg
lcall
or
test
cmp
push
in
into
dec
jns
aad
cmp
cld
bound
mov
daa
imul
dec
insl
push
pushf
shlb
or
xor
adc
gs
xor
pusha
sub
rorl
xchg
jo
jb
lcall
cmp
cltd
int
stos
inc
rorb
outsl
pop
adc
ret
pop
clc
sub
ror
mov
inc
inc
inc
fildl
imul
sahf
fs
push
lahf
loop
scas
sahf
stos
fisttps
jecxz
cli
fisttpl
pop
cmpsl
pop
pop
inc
pop
pop
jge
xchg
pop
mov
add
cmc
mov
cmp
add
dec
xchg
xor
loopne,pt
iret
mov
dec
fs
adc
jb
in
pop
sub
notb
rcr
mov
cli
scas
pop
and
aas
or
cmpsb
cmp
add
mov
fcmovnu
mov
pop
inc
dec
adc
xchg
mov
pop
push
sbb
adc
mov
mov
inc
scas
jae
cmpsb
shl
pop
mov
push
dec
loop
jmp
xchg
fsub
jb
je
add
inc
mov
mov
stc
dec
jno
fildl
pop
mov
addr16
dec
test
sbb
test
sub
or
push
outsb
mov
xor
or
xor
ret
push
push
aas
pop
xchg
test
call
lds
mov
lods
xlat
lcall
in
jp
add
push
addl
sub
popf
pop
dec
mov
ret
adc
nop
mov
mov
xor
push
pop
or
hlt
and
sub
mov
xchg
shlb
push
inc
jg
data16
jle
mov
and
jmp
xor
pop
hlt
lock
sub
addr16
xlat
jle
mov
mov
sub
mov
loope
cld
mov
add
addr16
mov
pop
jecxz
push
push
pusha
dec
pop
pop
dec
xchg
cld
push
or
cmc
xchg
jae
outsl
std
fbld
push
or
mov
inc
out
pop
jg
push
call
pop
xor
leave
pop
into
add
sbb
stos
rolb
test
jge
xchg
rol
xchg
popf
mov
or
xor
xchg
mov
add
cwtl
int3
xchg
sub
inc
loopne
sub
cmpsl
stos
cmpsb
inc
pop
xchg
test
sub
aaa
mov
xorb
out
fsubr
mov
inc
aas
in
fisubrs
das
add
push
inc
mov
inc
push
repz
jle
mov
and
and
out
sbb
cmp
adc
addr16
stos
sahf
bound
dec
xchg
and
sti
test
jmp
pop
imul
ljmp
or
inc
out
out
xchg
xor
pushl
pop
rcrb
jmp
push
xchg
push
and
std
ror
mov
add
hlt
xchg
pop
ret
cld
xor
insl
xor
jecxz
ret
scas
push
or
je
jl
out
jg
push
cmc
pop
dec
xchg
mov
lahf
inc
cmp
mov
pop
sti
fwait
inc
and
cmp
jge
xchg
add
push
mov
movsb
inc
repz
scas
push
mov
movsb
push
mov
cmp
add
and
fs
enter
cmpsb
xor
xorl
popf
iret
lods
mov
dec
jb
xchg
push
lcall
rol
adc
xchg
mov
insl
mov
dec
add
bound
lods
jge
pop
add
ljmp
sub
jo
mov
adc
das
inc
mov
jo
in
xchg
into
popf
sub
ljmp
mov
cmp
cmp
shll
inc
outsl
add
cwtl
adcb
push
push
jg
cwtl
movsb
les
sub
nop
stos
push
and
popf
add
stos
data16
mov
push
add
sbb
dec
mov
xor
add
in
cmpsb
sbb
dec
adcl
xchg
xor
push
cs
mov
idivb
das
cmp
lods
dec
jns
lahf
outsb
sbb
or
xchg
sub
out
popf
out
test
xchg
cmp
enter
push
xor
mov
js
mov
inc
loope
popa
push
jl
imul
mov
dec
mov
lcall
adc
pop
je
jecxz
lcall
add
out
imul
call
ljmp
adcl
xor
mov
not
stos
jbe
push
sub
push
and
adc
push
stos
cli
push
fadd
cli
popl
cli
stc
leave
or
dec
pop
sbb
pop
push
stc
sarl
inc
xlat
mov
cs
adc
ds
mov
and
ds
lret
jl
and
push
sbb
sbb
ret
xorb
dec
pusha
test
mov
mov
sbb
lahf
xor
and
int3
insb
hlt
mov
xor
cmpsb
gs
test
je
fidivl
shlb
rorl
das
in
fidivs
xchg
out
mov
cld
je
mov
mov
xchg
jmp
mov
adc
jl
leave
gs
inc
dec
mov
pop
lcall
imul
addr16
cld
pusha
jne
in
and
cmp
mov
cmp
lea
sub
push
loope
ficoml
lret
lahf
fcompl
jp
dec
lret
out
sarb
sub
clc
out
jg
lock
pop
call
imul
push
mov
shlb
cltd
mov
sub
mov
cmp
push
add
xor
adc
sahf
cli
ret
flds
jp
mov
inc
stos
sbb
jbe
cs
cld
or
sbbl
sarb
cmp
data16
mov
inc
xchg
push
lcall
cmp
mov
push
movsl
xorl
int
xor
ret
mov
icebp
xor
xor
dec
mov
mov
ja
pop
jne
inc
xchg
movsl
push
pop
rolb
pop
ljmp
popa
inc
das
pop
push
jge
sub
stc
push
mov
sub
mov
or
mov
fbstp
sbb
pop
cltd
sti
xchg
xchg
mov
daa
mov
or
sub
out
cmpsb
xchg
xchg
outsb
aam
mov
in
mov
mov
bound
dec
aas
and
fisttpll
iret
ret
push
sti
dec
dec
shll
cmp
pop
shlb
ds
mov
sarb
stos
lds
xchg
repz
mov
cmp
fwait
in
iret
bound
imul
mov
inc
repnz
push
dec
dec
sub
mov
cld
jne
pusha
pop
mov
test
xchg
or
pop
dec
dec
ds
add
sti
aad
jbe
mov
sbb
daa
or
add
jle
cmpsl
add
xor
inc
hlt
gs
loope
loope
mov
sub
sbb
sub
je
jmp
les
or
xchg
cli
mov
mov
hlt
ja
cmpl
xor
ficoml
xchg
and
rcl
lret
dec
rorl
mov
sub
xchg
pop
xor
pop
cltd
push
or
mov
inc
sbbb
ja
jecxz
sbb
cltd
pop
xchg
scas
flds
shrd
clc
adc
pop
les
fdivl
enter
add
inc
test
and
repnz
sbb
aaa
mov
pop
imul
mov
and
enter
and
and
gs
push
int
xor
leave
imul
popa
xchg
jnp
xchg
cmp
popf
js
add
out
jns
test
mov
or
cmp
cmp
out
scas
pop
xchg
div
pop
pop
daa
sbb
mov
xchg
mov
cmp
aaa
push
inc
push
push
bound
xchg
lods
mov
cmp
movsb
and
dec
pop
inc
es
fstl
aaa
mov
cltd
icebp
pop
xor
jbe
add
or
in
jl
cltd
adc
addr16
push
cmc
pop
in
pop
aad
jle
jno
or
fsubrl
icebp
inc
test
mov
neg
lock
adc
in
iret
or
jl
test
xor
sahf
xor
sahf
sbb
jle
add
push
xor
xchg
or
ds
add
outsb
xchg
and
scas
out
jnp
imul
mov
mov
popa
sub
mov
lods
inc
jg
push
fisttpll
cmp
cmc
and
lret
dec
cmpb
or
scas
inc
in
psubsb
dec
shlb
mov
lret
cmpsb
push
cmp
fabs
cmc
aam
fsubrs
dec
mov
in
mov
imul
xchg
lret
fs
daa
ljmp
sub
lahf
cmp
pop
mov
mov
cmpb
jbe
cs
mov
adc
xchg
pusha
fwait
cs
xchg
rorl
mov
sahf
adc
lcall
sub
jmp
dec
sub
addr16
test
xchg
push
fst
cwtl
or
aas
jge
jecxz
sbb
in
ss
cmc
mov
leave
or
push
sbb
fsubr
fiaddl
pusha
lcall
sbb
out
sti
jl
add
xchg
sbb
fidivrs
outsl
testb
call
clc
stos
push
addr16
cltd
repnz
mov
push
rol
adc
adc
add
jmp
xor
in
adc
cld
popa
test
xchg
push
mov
insl
dec
lret
xchg
lret
test
aaa
push
sub
or
jae
push
cmp
dec
or
cld
jl
cmp
mov
mov
fistpl
es
aam
dec
dec
hlt
jg
xlat
leave
lret
mov
cmp
xchg
cmp
shlb
xchg
jb
mov
jbe
adc
mov
sub
ljmp
and
outsb
pop
cmp
pop
test
lahf
pushf
enter
xchg
pop
cmpsl
lcall
dec
call
iret
dec
mov
push
inc
cmpsb
ds
mov
lods
push
arpl
sbb
xchg
fnstenv
out
imul
mov
sti
call
jmp
mov
mov
in
dec
out
cld
inc
xlat
push
lcall
xchg
out
inc
ljmp
sbb
lea
es
stc
addb
push
mov
xor
or
sub
movsl
dec
pop
adc
push
leave
out
push
mov
jg
aad
ljmp
pushf
lahf
sbb
xchg
sub
jl
add
pop
rclb
cmp
adc
loop
or
out
mov
lods
rcrl
jle
xlat
sub
or
mov
icebp
jmp
test
inc
fmulp
ret
fwait
cmpsb
imul
clc
loopne
fdivl
jle
sbb
std
mov
dec
mov
jg
imul
inc
sbb
repnz
shlb
inc
jecxz
test
and
mov
mov
jae
stos
jge
jne
adc
xchg
std
sbbl
outsb
adc
add
or
int
adc
xor
scas
test
push
mov
call
sub
mov
fbstp
jmp
push
ret
fldcw
sub
sahf
stc
aas
inc
inc
mull
pop
icebp
daa
sub
pop
or
mov
int
in
adc
lods
cltd
cmpsl
andl
lods
cmp
jp
loope
aad
insb
inc
data16
fdivrl
mov
cmp
xor
jnp
in
js
fs
mov
es
pop
mov
adc
push
cmp
sub
sbb
jp
gs
and
mov
rorb
dec
jecxz
mov
aas
inc
movsb
dec
or
jb
mov
dec
sbb
xchg
pop
and
xor
sbb
sbb
cld
sbb
loopne
push
push
lahf
push
loopne
ficompl
adc
nop
or
jne
fldt
mov
das
jl
dec
loope
adc
cld
addr16
out
in
push
mov
insb
push
jg
inc
enter
and
popa
jae
mov
push
inc
idivb
adc
inc
sub
std
imul
xor
cmp
xor
int3
daa
jp
mov
mov
mov
call
insl
sbb
pop
mov
sub
in
sar
add
fcompl
push
dec
mov
hlt
icebp
mov
xchg
ror
mov
daa
push
mov
enter
push
and
xchg
adc
sbb
hlt
dec
cltd
xchg
xchg
jle
dec
std
sbb
test
les
xchg
dec
int
jae
add
pop
add
jge
xchg
or
fstl
adc
and
cmp
jne
fistl
adc
sub
cli
pop
jae
push
xchg
mov
bound
xor
cwtl
and
testb
dec
xor
loop
mov
lret
jmp
and
or
mov
cmpsb
adc
mov
sbb
add
and
aam
les
adc
fwait
ja
jbe
adc
outsb
mov
cmp
cmpsb
xchg
and
mov
jo
and
cmpsb
lods
xor
pushf
jecxz
push
jb
mov
addr16
leave
pop
dec
and
dec
cmpsl
jns
shlb
stos
mov
xor
scas
xor
rol
or
loope
orl
js
repnz
pop
mov
into
shlb
pop
test
mov
xchg
sbbl
mov
or
nop
test
adc
cmp
xor
mov
pop
idivl
sbb
repz
xchg
sbb
fidivl
cmpsl
fidivs
cld
jae
mov
psrlw
pmaxsw
nop
jmp
xchg
in
sbb
or
notl
dec
fisubrs
data16
mov
mov
push
or
clc
sbb
lahf
xchg
div
mov
adc
cmpsl
mov
pushf
jo
push
sbb
push
inc
shlb
andl
out
jo
sarb
shlb
out
sahf
in
dec
adc
and
push
lds
sar
das
mov
lahf
dec
jmp
xchg
dec
push
jle
inc
in
imul
xor
xlat
test
sub
jbe
pusha
into
jb
dec
mov
push
inc
mov
pcmpgtb
ljmp
add
sbb
scas
sbb
pop
or
rclb
popa
sbbb
fnstcw
shll
sbb
mov
xor
dec
int3
lock
cmp
repnz
adc
xchg
icebp
sahf
sub
repnz
out
dec
or
dec
add
sub
fidivrs
mov
xchg
add
outsb
addb
adc
push
adc
cmpl
or
push
js
movsl
cmp
or
jno
rorl
sub
imul
or
loop
ljmp
paddusb
jle
inc
mov
xchg
out
inc
inc
jb
cli
cmp
mov
in
xchg
adc
xor
add
jl
lea
push
xchg
push
cs
shrb
mov
push
add
rol
mov
aaa
mov
add
jmp
insl
inc
movsl
loopne
fdivrl
dec
aad
mov
fidivl
popf
xor
add
xor
jl
push
andb
inc
divl
shrb
xchg
sbb
dec
imul
pop
jmp
fldcw
sub
lcall
add
adc
xchg
or
mov
aad
pop
insl
mov
mov
dec
aad
lock
xor
nop
stc
fisubl
test
ror
mov
push
mov
movsl
xchg
rolb
sub
mov
int3
push
das
sub
std
xor
test
bound
popf
mov
inc
cmpl
add
ds
cld
stos
call
mov
or
popa
call
rcrb
inc
rcrl
outsl
add
and
cmpb
lret
sub
push
inc
les
mov
xchg
lret
stos
bnd
mov
call
xchg
stos
cmp
out
mov
jl
stc
push
mov
cmp
inc
lahf
fwait
jge
push
aad
push
fistpll
or
pop
stos
and
inc
or
sbb
subb
fwait
stc
and
pop
mov
ja
xor
je
jne
adc
jecxz
in
fimull
mov
repnz
sub
outsl
stc
sub
fadds
mov
notl
ds
or
cltd
inc
nop
sub
lds
ja
imul
mov
and
or
inc
xor
fistps
pop
xor
add
xchg
xorl
loope
sbb
stc
out
js
mov
arpl
shlb
fadd
fidivs
cmp
dec
dec
mov
rcrb
mov
clc
sbb
and
pop
cmc
orb
pop
fnstsw
ret
cmp
push
das
daa
jne
or
loop
jecxz
adc
fwait
inc
das
mov
mov
fstp
xchg
push
jmp
cltd
jl
jne
aam
rcll
xor
sub
push
stos
in
inc
lods
aad
popa
cs
push
arpl
lcall
push
enter
xor
pop
jbe
jp
adc
out
mov
xor
push
mov
sbb
das
loop
inc
or
int
adc
inc
push
imul
jbe
mov
stc
nop
mov
popa
repnz
aam
inc
jb
cmp
dec
test
or
mov
add
or
or
lahf
push
xchg
jecxz
fldenv
aaa
cs
jns
or
insb
push
sbb
imul
stos
lock
push
add
push
sbb
pop
dec
xor
cmp
cwtl
daa
sar
mov
dec
mov
sbb
outsl
mov
ds
inc
icebp
mov
shr
fidivrs
jno
popa
test
fldt
test
std
shlb
mov
icebp
test
fistpll
rcrl
xor
or
jae
push
pop
mov
pop
cmpsl
fdivr
in
xchg
jae
push
rolb
test
sbb
rcl
test
inc
jno
jmp
cmp
fstps
cmp
push
jecxz
mov
xor
mov
push
xchg
jl
pop
mov
shll
jecxz
inc
or
or
lods
cmpl
mov
rcl
sub
arpl
cmp
xor
sbbb
out
jl
test
mov
repz
imul
cmp
filds
icebp
cli
dec
daa
lcall
inc
test
shl
es
mov
adc
aam
cmpsb
dec
andb
jmp
dec
cmp
jb
dec
js
or
es
add
das
mov
mov
jo
sub
nop
cli
jbe
rol
fsubl
add
mov
sbb
pusha
push
pop
jl
sti
aas
mov
popf
addr16
xor
mov
inc
dec
cmp
lds
xchg
and
lret
inc
xchg
rcrl
out
jl
add
sub
lods
push
roll
xor
lock
es
inc
es
loop
dec
stc
rolb
push
dec
cmpsb
mov
idivl
jno
outsb
bound
test
xchg
xor
fdivs
push
gs
push
xchg
cs
ja
movsl
out
xchg
in
clc
mov
mov
and
sub
push
jle
xchg
iret
daa
aaa
enter
aaa
cmp
dec
ret
push
aas
fimuls
pop
test
lods
repz
fisubs
cltd
sbb
push
mov
movsl
or
mov
loopne
mov
imul
lock
xchg
movsb
call
std
jns
insb
adcl
mov
faddl
cmp
shrb
cmp
shl
dec
mov
xchg
lret
jae
push
lods
test
popf
cwtl
pop
cwtl
insb
clc
pcmpgtd
clc
ret
aaa
xchg
decl
popa
mov
jle
sub
ljmp
lds
adc
in
inc
sbb
ljmp
jecxz
stc
stos
xcrypt-ctr
cmpsl
adc
xor
xchg
cli
mov
xor
stos
xchg
xchg
je
ss
pop
pushf
inc
xor
and
xchg
add
hlt
out
mov
addl
cmp
cmc
xor
shll
scas
subb
xchg
pop
xor
push
loop
cltd
repnz
addb
mov
xorl
jecxz
add
xchg
and
mov
push
cmp
divl
dec
sbb
adc
xor
int3
out
inc
cbtw
inc
mov
jno
push
add
clc
lret
add
repnz
jae
mov
and
push
dec
mov
andw
stc
test
xchg
cmp
stos
push
push
stos
mov
mov
hlt
jnp
cli
ljmp
push
or
cmp
inc
clc
lods
xchg
jle
xor
xor
hlt
xchg
and
pop
add
mov
sub
and
cs
js
stc
push
adc
les
sbb
lcall
push
imulb
repnz
insl
jle
repnz
add
xchg
xor
shl
int3
int
xor
mov
xorl
push
adc
push
sub
idivb
inc
push
dec
jo
xchg
scas
lds
dec
leave
mov
push
in
in
pop
xor
xchg
aam
outsb
jne
cmc
andl
ljmp
aas
stos
cmp
jne
sub
in
adc
pushf
mov
fistpll
nop
push
das
push
jo
test
movsl
mov
ja
or
pop
dec
xor
nop
sbb
mov
xchg
cmpsl
ljmp
xchg
push
and
cwtl
add
arpl
cmp
sbb
repz
fists
sub
dec
loop
test
out
in
dec
dec
xchg
loopne
adc
mov
clc
ds
jno
or
or
and
sub
mov
xlat
lahf
inc
sbb
sub
xchg
icebp
or
jl
das
pop
rcrb
add
rorl
cltd
stc
dec
sbb
add
dec
arpl
push
arpl
arpl
scas
pop
rolb
mov
xchg
insb
or
xchg
fs
sub
cmp
hlt
daa
adc
jl
pop
fisubrs
pop
jne
cmp
adc
push
aam
popa
dec
adc
jecxz
pop
notb
imull
movsl
mov
orb
or
mov
jmp
push
adc
mov
aam
loope
js
pop
mov
aam
rclb
dec
push
jge
rcll
stc
divl
sbb
xchg
xchg
mov
xor
jnp
stc
push
dec
cmp
cmp
xchg
rcrb
jno
mov
and
ljmp
inc
xchg
push
movsl
ja
into
pop
dec
mov
jno
pop
sahf
mov
sbb
mov
adc
mov
in
pop
inc
jg
dec
jo
into
xor
insl
cmpsl
sbb
adc
xlat
and
pushf
pop
sub
pop
shll
imul
sarl
add
mov
inc
pop
push
fs
push
sarb
sub
scas
je
insl
and
cld
std
mov
insb
mov
das
lea
mov
out
ss
ljmp
mov
andl
aas
dec
ret
add
cld
sub
inc
test
inc
jl
popa
mov
mov
orl
jbe
sbb
leave
es
adc
loope
xchg
sub
mov
mov
loope
lret
push
pushl
add
jle
mov
cmpsb
mov
lock
idivb
push
movsb
scas
add
mov
loop
cmp
icebp
sahf
loope
in
mov
mov
mov
xchg
sub
pop
pop
jecxz
sti
sbb
pop
jno
nop
subl
test
int3
push
inc
jno
add
and
cmpsb
mov
mov
pop
and
enter
and
andl
push
lahf
or
movsl
fldl2e
push
test
rcrl
ret
lcall
jp
stos
stos
xor
insl
push
and
pop
push
sub
cs
dec
and
ljmp
push
push
add
cmp
ljmp
push
ljmp
mov
repz
jno
rcrl
in
mov
add
push
adc
mov
pop
push
or
inc
lds
lods
fcoms
xchg
jae
and
jnp
lret
xchg
imul
sbb
aam
xor
fmul
sahf
pushf
cmp
jb
dec
cmp
xchg
test
mov
jl
push
jl
pushf
mov
dec
mov
mov
pop
movsl
add
jecxz
cwtl
rcr
stc
idivl
sbb
mov
sbb
jb
lcall
dec
dec
scas
cmp
mov
test
jo
jle
cli
pop
ljmp
mov
pop
or
sbb
xchg
mov
outsl
mov
popa
push
fs
clc
shlb
mov
cmc
shlb
shl
addr16
xchg
inc
imul
adc
mov
xor
icebp
fs
jne
popa
int
mov
xchg
dec
jo
lock
mov
lods
jne
call
scas
push
lds
imul
pop
loop
inc
imul
pop
or
sub
dec
outsl
daa
cltd
mov
push
mov
cmp
jp
inc
daa
jnp
rorb
adc
dec
in
dec
mov
ret
mov
pop
pop
cli
popa
sar
cmp
sbb
lds
lret
sbb
pop
into
iret
mov
xchg
sbb
stc
push
scas
scas
inc
test
rcl
dec
xchg
push
push
pop
xor
mov
stos
call
mov
nop
stc
into
xor
dec
cmp
xor
push
or
cmp
repz
sbbb
ret
xor
push
sub
je
push
popa
mov
movsb
inc
pop
jo
jge
or
je
lds
loopne
loop
jnp
and
adc
mov
xor
dec
cmp
mov
mov
out
dec
xchg
jns
aad
sbb
cmc
ss
ds
mov
jg
fwait
lods
das
jmp
jne
mov
mov
and
mov
xchg
push
mov
sub
cltd
xor
cmp
jmp
ljmp
mov
in
and
arpl
imul
mov
das
sbb
int
cmp
lret
inc
mov
jnp
inc
dec
dec
adc
push
mov
or
test
push
insb
mov
mov
mov
mov
pop
xchg
ficoms
xchg
jb
jo
sti
mov
mov
mov
icebp
test
cmp
add
adc
in
inc
mov
mov
clc
pop
ss
lock
in
or
popf
je
or
pop
adc
cmp
into
adcb
cmp
jg
test
jnp
jmp
xchg
mov
pushf
xor
xchg
aam
add
lahf
les
dec
or
add
or
into
mov
sub
push
xchg
cmp
or
fwait
lcall
push
mov
fidivrl
fimull
and
mov
cmc
in
mov
outsl
add
mov
mov
add
jmpw
push
dec
lret
or
push
andb
xlat
jecxz
xchg
testl
stos
adc
loopne
cwtl
mov
inc
shll
test
pop
xor
xchg
fsubrs
and
xchg
cmp
dec
push
cwtl
int
aam
pop
std
and
int3
ljmp
push
icebp
mov
add
sbb
stos
fadd
pop
mov
sahf
dec
mov
inc
rcll
sbb
xchg
sbb
or
ret
mov
ret
adcb
out
ret
pop
pop
scas
mov
xchg
fcoms
pop
int
push
mov
dec
sub
pop
or
outsl
lcall
scas
cmp
dec
shlb
sub
ja
jno
sbb
jge
jle
clc
adc
cmp
fsubrl
out
das
shlb
add
cmp
mov
subb
sub
jno
repnz
shlb
mov
enter
sbb
sub
adc
stc
nop
fidivrs
scas
outsl
iret
shrl
ss
or
jp
mov
fldt
cmpsb
sub
pushfw
mov
sub
cltd
lock
adc
cltd
repnz
fisttpll
xchg
xchg
jbe
test
xchg
mov
mov
pusha
inc
mov
cmp
or
jge
jp
adc
sbb
shlb
outsb
push
xchg
pop
icebp
je
dec
sbb
clc
das
imull
xor
in
outsl
add
mov
notb
pop
ja
mov
xchg
arpl
inc
sbb
mov
sub
sub
je
or
pop
fldenv
enter
mov
int3
jns
pop
adc
movsb
dec
sub
add
pop
scas
out
shr
scas
jmp
dec
push
inc
and
pop
adc
std
adc
notb
adcb
movsl
aad
int3
pop
dec
xchg
fisttps
mov
enter
adc
fwait
sbb
inc
cmc
divl
iret
pop
mov
pop
loopne
cmpsl
aam
mov
inc
xlat
xchg
hlt
adc
clc
mov
hlt
mov
fwait
out
pop
repnz
adc
incl
and
std
dec
in
stos
mov
push
adc
cld
ja
iret
jp
push
inc
mov
in
cmp
std
push
pop
adc
inc
roll
mov
ljmp
inc
adc
sbb
stc
idivb
dec
jmp
mov
addr16
sahf
fisubl
push
int3
lods
bswap
popf
pop
movsl
inc
sbb
mov
nop
xchg
testb
packuswb
roll
push
loope
ss
mov
xchg
mov
or
mov
adc
cmp
sub
jnp
jle
flds
or
test
int3
int3
xor
dec
outsl
or
mov
frstor
adc
lods
lret
lret
add
imul
dec
jge
ja
pop
js
xchg
xchg
mov
insb
lods
movsb
les
or
mov
imul
or
or
imul
into
inc
loope
aaa
sub
arpl
xchg
jg
xchg
pop
xchg
je
or
push
jle
inc
mov
push
cld
dec
movsb
mov
dec
hlt
lods
lret
call
or
in
das
push
or
push
in
aam
mov
imul
sub
and
and
jl
sub
out
clc
and
push
ror
jb
pop
cmpsb
adc
lods
jo
frstor
sub
lods
aas
inc
int3
inc
in
aaa
imull
mov
sbb
mov
loop
jmp
insl
nop
lret
cmpsl
inc
or
movsl
adcl
das
pop
sbb
pusha
xchg
fcomps
aas
jl
pop
xchg
cmp
inc
mov
jp
sbb
push
jb
adc
imul
mov
and
les
scas
cld
cwtl
insl
les
mov
mov
sub
lret
stc
adc
in
mul
dec
cwtl
addr16
xchg
mov
fsubrl
and
and
adc
add
orl
sub
outsb
sub
sbb
mov
mov
das
loop
popa
jg
lock
lahf
inc
mov
sub
and
adc
adc
inc
add
mov
push
aas
mov
andb
sub
mov
sub
mov
add
dec
pusha
cmp
dec
xchg
xor
jnp
insl
loopne
dec
jmp
scas
das
mov
inc
or
push
xor
cmp
adc
insb
fildll
leave
cmp
add
xor
stc
fadd
ret
scas
dec
jae
xchg
jne
or
xchg
test
lods
push
jno
mov
xchg
lock
cmp
dec
fs
stos
fs
and
sbb
pop
std
fidivrs
pop
aas
scas
mov
cmpsl
xchg
or
enter
mov
in
aaa
test
imull
movsb
adc
mov
loopne
lcall
les
inc
jle
mov
or
std
push
mov
aas
push
or
out
jne
imul
test
jmp
xchg
mov
stos
jp
scas
or
ja
jmp
test
das
adcb
in
imul
pop
sbb
cmpsl
lds
mov
aam
ljmp
pop
hlt
mov
hlt
out
bnd
mov
inc
mov
or
in
cmp
test
cmp
mov
sub
cmp
cmpsl
out
sub
pusha
inc
dec
mov
insl
call
inc
rclb
inc
cmp
pop
and
ror
scas
clc
push
ret
sti
mov
sbb
xor
addb
jge
xchg
lret
test
mov
mov
cltd
fsubrl
xchg
ljmp
imul
mov
jge
push
daa
cld
push
jmp
mov
outsb
cltd
sub
inc
cwtl
push
jle
and
icebp
pop
and
push
insl
aad
pop
aad
mov
sti
fcmove
je
scas
xchg
outsb
aam
dec
and
nop
mov
xlat
push
adc
mov
cwtl
test
mov
loopne
xchg
out
pop
fsubrs
pop
je
cwtl
jae
fucomi
test
or
imul
rorb
mov
mov
mov
mov
lods
imul
mov
rolb
icebp
xchg
cmp
es
push
leave
pop
cmp
mov
rcll
mov
mov
sbb
test
sarl
movsl
mov
in
push
pop
scas
outsb
es
sub
mov
fadds
xor
jbe
xchg
jbe
mov
push
xchg
xchg
mov
pop
mov
outsl
mov
push
hlt
cmpsl
push
hlt
cs
shlb
cmpsb
call
push
cmp
lods
bnd
sub
pop
mov
fsubs
aaa
mov
arpl
fwait
add
jne
out
pop
pop
pop
loop
fabs
pop
jns
out
jnp
rclb
movsb
pushf
mov
cmp
std
sbb
nop
xor
adc
shlb
jg
out
fcomip
dec
imul
add
dec
inc
and
outsb
sub
mov
pop
jl
jp
push
int3
dec
pop
xchg
lret
mov
cmpsl
inc
js
in
dec
inc
dec
retw
movb
cmpsl
ljmp
insl
stos
mov
enter
lret
add
cmp
icebp
lahf
lret
in
push
pop
loop
cmp
ljmp
adc
jg
pusha
lods
scas
test
push
sti
lods
aad
inc
cmp
adc
cmp
fcomi
test
dec
into
and
ret
and
lahf
xor
mov
mov
xchg
outsb
jo
mov
push
dec
inc
xor
xlat
mov
in
sbb
stos
adc
cmp
cld
pushf
add
push
or
dec
push
es
xchg
sbb
xlat
scas
or
xor
inc
cmpsb
imul
xchg
pop
fmull
mov
xchg
inc
inc
out
mov
arpl
and
in
push
lods
push
inc
cs
das
loope
jae
mov
jo
add
scas
push
bound
push
cwtl
inc
xor
daa
and
es
stos
int3
pusha
mov
sub
sub
add
cmp
push
push
xchg
pop
inc
rcll
fsts
and
push
pop
adc
aaa
xor
add
notb
nop
call
xor
adc
iret
xchg
mov
and
jmp
inc
int
jle
mov
adc
sti
imul
dec
scas
test
xor
mov
mov
shll
sub
popa
xor
aad
push
movsl
sub
xchg
xor
lock
adc
daa
arpl
adc
push
mov
test
cs
mov
lea
popf
shr
aad
int3
and
fildll
inc
int3
shll
cltd
out
jno
push
cmc
jb
ret
inc
mul
fstpl
lods
add
xchg
mov
xchg
stc
push
sbb
xchg
push
mov
pop
sbb
xchg
mov
nop
sbb
mov
fstl
jns
cwtl
inc
sahf
push
or
insb
nopl
shrl
lods
pop
mov
or
mov
jo
pushf
dec
sbb
je
arpl
fwait
mov
das
inc
mov
dec
fisttps
adc
xchg
jmp
cmp
sahf
cmp
push
jb
mov
sahf
iret
or
shrb
repnz
pop
xchg
xchg
add
xorl
repz
sbb
push
jne
or
add
jecxz
lds
pop
ljmp
stos
pop
lods
mov
push
loopne
stc
and
push
lret
inc
fstp
mov
in
out
xchg
in
xor
jmp
icebp
rclb
inc
xchg
ficoms
mov
inc
iret
mov
mov
aad
sbb
pop
insb
xchg
repnz
les
mov
mov
es
icebp
mov
jno
fisubl
push
ret
fdivs
cmp
scas
loopne
mov
repz
jns
out
dec
int
leave
mov
pusha
jl
stos
mulb
xchg
adc
out
mov
lock
lret
jb
jne
jecxz
adc
adcl
shr
push
mov
inc
jmp
je
mov
lods
jae
inc
je
imul
punpckhdq
in
rorl
jmp
mov
add
out
mov
mov
sar
repnz
stc
push
lret
outsl
cmp
xchg
in
push
xor
insl
pop
js
sbb
xchg
jle
jae
add
into
dec
adc
cld
fs
dec
xchg
mov
testb
shll
insl
xchg
call
xor
in
sub
and
ret
std
or
gs
pop
cmpsb
sbb
mov
cmpsb
sarl
add
cmp
xchg
lods
ret
xor
in
loop
fmuls
xchg
inc
sahf
jp
shl
jecxz
addr16
push
jo
or
xchg
push
stos
xor
fcoms
jmp
xchg
adc
insl
add
push
sti
pop
movsb
pop
sarb
ljmp
pop
sahf
cmp
repz
inc
fidivl
arpl
jbe
movsb
or
and
pop
or
roll
dec
dec
pop
rclb
jle
adc
fldcw
sbb
pop
test
inc
arpl
in
jecxz
xor
and
icebp
cmp
adc
sub
lods
inc
icebp
mov
je
fprem1
xor
fisttpll
int3
pop
sub
int
sub
mov
stos
add
insb
xchg
add
xor
jae
mov
inc
push
divl
hlt
dec
pop
jle
test
and
push
inc
in
dec
jno
imulb
xor
fsubrl
sub
mov
sub
nop
add
loopne
iret
ret
jb
std
iret
mov
jns
movsl
add
mov
lret
mov
dec
add
jl
mov
jmp
mov
ja
jno
xchg
aam
sbb
sbb
test
cs
mov
loope
cmpsb
gs
sbb
imul
aam
cmp
dec
fisubs
sub
cmp
sbb
xchg
adc
xchg
sarb
add
pop
jg
cmpsl
xchg
jb
pop
popa
sub
inc
xor
dec
add
out
mov
jmp
cwtl
add
and
adc
sub
sti
mov
icebp
scas
stc
stc
sbb
lahf
xor
cmp
inc
push
sub
cmc
adc
aad
dec
xchg
in
out
in
xor
mov
inc
aas
fsubrl
jmp
or
xchg
xor
inc
pusha
mov
cmp
fisttpll
xchg
xchg
dec
xor
sbb
enter
insb
hlt
xlat
cmp
xor
call
cmpsl
cwtl
sub
add
mov
mov
dec
cmp
fistps
push
mov
sbb
sub
call
dec
cmp
cmp
dec
xor
jl
iret
out
mov
imul
daa
inc
imul
in
pop
mov
cmp
test
stos
test
push
divl
mov
jns
cmpsl
dec
lahf
fs
into
cmp
gs
mov
pop
mov
insb
sbb
repz
iret
fadds
pop
xchg
inc
dec
js
xchg
loopne
inc
xor
fmuls
loope
xlat
xor
shl
push
mov
push
push
cs
jno
rcrb
adc
lret
idivl
and
cmc
push
insl
jge
cmp
shr
loop
xchg
xchg
cmp
gs
mov
sbb
pop
pop
add
into
mov
sub
aas
add
loop
add
jecxz
cmp
dec
push
scas
movsb
bound
aam
jae
mov
jbe
mov
push
cmpsl
xchg
ljmp
fiadds
stc
sti
mov
xchg
jae
mov
jbe
push
xor
mov
mov
in
add
cmpsb
lods
mov
sub
pop
aam
in
in
xchg
cwtl
test
dec
pop
cltd
repz
or
sbb
rcrb
imul
in
jmp
fadd
pop
inc
sub
mov
or
shl
test
fimuls
data16
push
dec
sub
dec
mov
lahf
xchg
dec
popa
jge
aaa
or
mov
shll
xor
xor
cmp
fs
dec
shrb
jns
loopne
inc
mov
dec
and
sub
shrb
dec
sarb
das
outsb
inc
jecxz
shr
mov
ret
and
dec
lock
jne
sub
cmp
add
insl
in
xor
xor
outsb
loopne
dec
mov
mov
mov
cmp
js
and
ror
ss
and
mov
mov
pop
mov
inc
shl
nop
int3
and
push
xchg
stc
sub
mov
lock
push
dec
bts
mov
add
aas
pop
lea
repnz
rorl
out
sbb
push
orb
sbb
int3
and
push
movsl
sub
fildl
dec
ret
ja
pop
out
pop
inc
cmp
lret
push
sbb
xor
jecxz
fwait
sbb
cmp
sbb
clc
inc
pop
popa
inc
pop
or
pop
das
push
xchg
push
lods
mov
imul
test
jnp
and
xchg
pop
xlat
add
cmp
orl
xor
dec
loopne
pusha
insb
ja
psubsb
pop
ja
push
inc
fisubrs
cmpsb
inc
es
mov
arpl
or
and
cmp
inc
lcall
popa
ss
pop
cmp
ss
dec
test
mov
loopne
xorb
push
cli
lret
bswap
les
outsl
fcmovne
in
adc
arpl
in
ret
hlt
lret
fprem
int
inc
sub
call
push
adc
test
in
mov
mov
push
pop
mov
jg
loop
pop
inc
adc
addb
mov
dec
jno
mov
sarl
xchg
sbb
leave
xor
out
mov
push
in
imul
adc
clc
insb
mov
jo
stos
hlt
cmp
jae
in
jge
inc
adc
mov
dec
fisubl
lret
adc
push
jno
mov
or
mov
push
in
cwtl
xchg
call
in
loop
and
xchg
addl
cmc
cs
add
push
outsb
push
jno
test
loopne
dec
xchg
testl
leave
jle
adc
pop
pop
jp
lret
inc
push
fsubrl
or
nop
lods
mov
iret
xchg
push
inc
cld
mov
mov
add
and
sub
sbb
daa
clc
pushf
dec
jnp
nop
aaa
insb
jbe
neg
pop
aad
inc
scas
push
xor
cmpsl
shl
inc
sub
cs
and
push
sub
ret
or
push
std
mov
adc
sti
jbe
test
pushf
in
sahf
push
icebp
mov
ss
adc
push
ret
enter
or
dec
xchg
iret
imul
sti
pop
cwtl
add
icebp
insb
rol
outsb
add
inc
mov
clc
sti
sahf
leave
jne
mov
cmp
out
inc
in
cs
pop
ja
pop
dec
xorl
stos
xor
enter
fmull
in
xchg
inc
test
add
test
lock
xor
dec
cmp
jno
mov
pushf
dec
insb
cs
es
and
jae
pop
mov
adc
xchg
xor
adc
push
pop
test
jnp
push
push
cmc
xor
test
mov
mov
lret
popl
or
enter
cmpsb
shrb
cltd
mov
mov
cs
out
mov
jo
cmp
mov
test
push
dec
add
pop
cltd
bound
outsb
outsb
fucomp
sbb
cld
test
or
cli
or
cmc
sub
or
inc
lea
sub
dec
lahf
nop
insl
insl
sub
xor
or
push
mov
xchg
repnz
cltd
xorb
cmp
bound
mov
mov
sub
gs
mov
ret
sbb
aam
clc
mov
xor
pop
dec
ficoml
orl
xchg
ja
out
and
scas
rep
scas
lods
popa
xor
ret
or
cmpsb
or
mov
push
ja
scas
fs
icebp
inc
aaa
mov
ds
test
jp
sbb
pop
cli
mov
push
mov
sub
mov
dec
xchg
repz
push
pop
jne
jg
les
scas
divl
orb
int
insl
sbb
sub
jl
adc
mov
ja
in
push
add
rclb
mov
aas
jmp
pop
jmp
mov
cmp
bound
idivl
inc
dec
jns
jo
push
sbb
arpl
inc
sbb
in
mov
jae
nop
xlat
daa
sbb
aas
aas
cmp
je
into
lcall
fimuls
cmp
or
orl
xor
scas
shl
jecxz
cmp
int3
cltd
push
inc
adc
in
int
ja
out
int
mov
mov
out
jp
inc
ficomps
add
push
xchg
fs
cs
inc
jge
data16
mov
fcoml
dec
dec
jg
xor
push
in
cmp
mov
push
insl
jmp
aas
or
shl
push
outsb
xor
fistps
inc
jne
cmp
and
fs
pop
loope
rcll
cwtl
sbb
xchg
leave
or
mov
aad
cmp
addr16
fwait
pusha
daa
out
rorb
lea
hlt
sbb
ret
flds
jge
add
sub
xchg
xchg
in
mov
dec
jle
push
sahf
in
outsb
mov
jge
popa
xchg
add
idivl
lock
fmull
jns
nop
add
dec
inc
divb
jnp
sbb
xchg
aad
into
adc
fwait
sbb
and
fldcw
jmp
in
out
dec
mov
aas
sub
inc
aas
inc
stos
pusha
out
inc
fs
mov
adc
mov
mov
enter
inc
test
jecxz
aas
adc
test
dec
popf
and
or
push
cmp
sbb
xor
lds
addr16
cs
and
ja
ljmp
mov
sbb
xor
add
test
sbb
dec
adcl
test
mov
and
xlat
pop
mov
xchg
adc
in
add
mov
cmp
push
scas
xchg
pop
mov
fdivr
push
stc
ret
lods
add
sbb
or
mov
mov
inc
push
sbb
mov
popf
sbb
pusha
sahf
repz
sbb
adc
gs
mov
aaa
mov
push
pushf
inc
push
push
idivl
xchg
inc
pop
cmc
fs
out
fcmovb
push
lcall
push
repnz
mov
data16
into
insb
dec
sti
pushf
mov
insb
shll
mov
sbbb
out
cld
in
sbb
jl
fstl
jo
dec
shl
pusha
jle
cwtl
fnstenv
stos
leave
adc
imul
push
insl
js
sbb
lret
add
push
xor
or
aam
rcr
mov
or
aam
sub
int
outsb
mov
sub
out
push
fwait
jae
inc
ss
pusha
imul
lcall
stos
rclb
lds
or
ds
loope
lcall
fs
xchg
xorps
bound
dec
xchg
int
out
mov
insl
inc
fldlg2
lds
insb
and
adc
sbb
or
or
add
xchg
pushf
mov
daa
xchg
fisubs
sarl
hlt
mov
orb
mov
mov
pop
shlb
hlt
sbb
pop
cltd
es
push
inc
cwtl
jg
pop
sbb
add
or
shlb
test
jae
add
sub
shlb
mov
xchg
push
cmp
int3
sbb
push
test
adc
repz
mov
outsl
andb
xor
test
stos
fnstenv
fucom
jns,pn
into
sub
pop
lahf
ljmp
mov
mov
lahf
scas
rcrb
sbb
imul
jecxz
xlat
pop
push
movsb
rcr
out
xchg
push
inc
cmp
pop
or
mov
cmpsb
lods
mov
jo
jb
xor
daa
insb
or
adcb
adc
add
mov
enter
sub
mov
add
sti
mov
cmc
fsts
addb
into
lods
and
int3
fisubrl
inc
iret
push
mov
xor
dec
icebp
outsl
pop
mov
push
sub
movsl
sbb
fmull
inc
lds
arpl
push
icebp
daa
imul
adc
cmp
jecxz
lods
push
fisubs
movsl
leave
xor
outsl
mov
sub
sbb
icebp
sbb
and
lahf
sbb
je
jne
ja
add
and
popa
pop
add
adc
xor
test
dec
fldt
pop
mov
je
test
out
ds
icebp
pushf
fsub
mov
add
fnstenv
xor
cmp
xchg
stc
mov
dec
ja
dec
cmp
and
push
mov
loope
push
push
inc
mov
mov
or
sbb
pop
sbbb
into
xor
lock
xor
pushf
hlt
jnp
cmp
pcmpeqb
inc
aad
inc
xchg
or
mov
pop
pop
pushf
cmpsb
push
fwait
add
push
push
mov
push
push
or
push
ja
imul
dec
lret
arpl
fnsave
je
xor
fdiv
cmpl
lret
insl
push
xchg
dec
dec
stos
cmp
xchg
sub
add
pop
popa
inc
or
dec
xor
cmp
sbb
sub
gs
ds
mov
dec
sbb
inc
jl
arpl
call
xchg
outsl
fists
sarl
testb
cmp
mov
add
or
cmp
or
dec
cmpsb
repnz
mov
testb
or
mov
cmc
sub
and
or
add
xchg
cmp
jne
mov
mov
and
inc
test
sub
push
sub
hlt
and
xchg
jmp
jne
dec
or
and
lods
adc
sti
shll
pop
jnp
fisttpll
mov
and
hlt
lret
mov
cmp
std
rcrl
fmull
loopne
mov
xor
js
in
out
jp
imul
addl
jo
or
mov
or
aaa
add
mov
std
xchg
sahf
insb
fistpll
and
hlt
or
imul
sub
hlt
lahf
sbb
cmp
cmp
gs
pop
mov
or
loope
and
sbb
mov
aas
pop
psadbw
cmpsb
iret
into
pushf
xor
mov
xchg
int
cs
icebp
aaa
pop
sub
scas
mov
jns
cltd
sbb
test
jmp
popf
test
jmp
jae
mov
sbbl
sub
insl
xor
dec
inc
std
cmpsl
jne
or
out
sbbb
lods
insb
int
mov
push
inc
gs
cld
pop
test
adc
push
lods
cltd
xor
mov
test
bound
lcall
fwait
inc
aam
into
or
add
out
xchg
mov
cmp
dec
xchg
mov
ljmp
data16
mov
lret
mov
out
aas
movsb
xor
movsl
mov
push
xchg
add
adc
fs
mov
push
idivb
ret
aam
add
pop
int
pop
int3
add
hlt
arpl
les
push
lock
xchg
in
and
mov
insl
int
imull
jb
xchg
sbb
dec
mov
insl
xchg
cld
lcall
inc
sbb
in
or
xchg
jmp
andl
jne
mov
jmp
lahf
sub
shll
sub
cmpsb
subb
sbb
test
push
std
data16
dec
leave
adc
mov
cmp
cmpsb
fimuls
js
outsl
mov
int3
adc
push
int3
test
cmp
xchg
jnp
xlat
xorl
out
ds
xor
int3
jns
orb
and
sbb
stc
pop
lahf
out
popf
cmp
lods
mov
xchg
mov
xor
nop
ds
mov
test
cwtl
aad
sbbl
clc
jmp
sarb
pop
addr16
cltd
mov
fwait
pop
insb
subb
dec
sbb
pop
mov
mov
outsl
lret
orl
mov
mov
shll
in
jo
push
inc
cmpsb
mov
lods
lods
jne
sub
adc
pop
cs
outsl
xchg
enter
add
cwtl
bound
int
aas
or
sbb
adc
imul
ss
data16
ret
xor
int
cmp
ljmp
dec
adc
cmp
mov
out
bound
xchg
js
js
loopne
adc
xorb
insb
jl,pt
mov
adc
jl
lahf
sbb
add
data16
push
ret
into
xchg
arpl
jecxz
inc
sub
pop
pop
dec
movsl
jo
cmc
inc
push
push
xchg
cmc
sub
pop
jno
pop
insl
add
or
mov
xchg
sar
lret
push
repnz
fdivrl
xchg
ja
and
pop
daa
das
setno
movsl
mov
inc
push
loope
lcall
mov
sub
add
cs
ror
sub
push
add
and
shr
dec
fidivs
xacquire
inc
ja
add
cltd
push
or
sub
and
inc
repz
into
mov
push
les
ror
iret
inc
inc
punpckhdq
hlt
inc
mov
js
jne
push
in
jg
dec
fcomi
mov
or
jns
dec
mov
inc
adc
arpl
cmp
call
call
inc
mov
je
repnz
aam
mov
rcll
orb
enter
pop
inc
inc
xor
lds
dec
xchg
imul
mov
jmp
addr16
leave
fnstcw
pop
jns
lods
mov
mov
add
stc
fistpl
adc
push
pop
popa
mov
cmp
pushf
fidivs
ret
mov
bndldx
aas
push
shr
push
in
in
push
test
ret
xchg
mov
push
je
push
dec
dec
js
or
pop
repnz
daa
dec
sahf
incb
test
les
outsl
adc
cmpl
jl
and
repz
mov
lods
push
or
test
imul
and
repnz
inc
mov
jae
dec
mov
sbb
loop
fcmovb
sbb
pop
ret
or
xor
repnz
mov
jmp
ret
or
sub
in
xchg
jg
sub
mov
jle
add
and
clc
rcr
popa
xchg
cld
lret
test
xchg
in
mov
add
push
fwait
and
inc
repz
xchg
fdivrs
notb
and
mov
insl
es
mov
mov
lahf
mov
aam
sbb
xchg
lock
cld
js
xlat
mov
arpl
add
pop
loop
sub
shrl
ds
jbe
adcb
leave
or
cmp
std
jl
sbb
mov
int3
pop
dec
std
push
test
fsts
leave
push
xchg
frstor
fsub
repnz
add
jbe
or
fcmove
roll
sbb
xor
pop
test
mov
in
ficomps
xchg
enter
jb
les
hlt
add
xor
fs
sahf
les
mulb
push
test
jp
or
sbb
xchg
dec
outsl
add
ret
adcb
shlb
inc
and
insb
int
in
fstpl
aaa
aad
dec
dec
jnp
and
inc
pusha
lret
lcall
into
mov
inc
subl
lea
mov
mov
xor
ja
fisttpll
aad
xor
sub
adc
pop
fidivrs
xchg
pop
sbb
ss
sub
push
ss
imul
pusha
pop
out
movsb
es
arpl
es
jp
xchg
mov
out
sbb
jecxz
inc
scas
add
test
sub
sub
fdivrl
mov
jbe
cltd
dec
dec
and
in
cmp
inc
loope
push
pop
and
aas
cwtl
mov
cmp
inc
and
stos
mov
test
std
xchg
stos
pushf
push
adc
sbb
sbb
jg
inc
test
popf
iret
pop
insl
fnstcw
jmp
mov
add
jae
cld
rcrl
stos
and
ficomps
mov
add
loop
sbb
lods
and
lret
inc
sbb
jecxz
or
fsubrs
repz
test
inc
sbb
cmp
test
add
pop
pop
lds
sbb
mov
negl
mov
out
push
dec
and
pop
xchg
or
fsubrs
test
adc
mov
addr16
sbb
add
mov
lret
ficompl
or
dec
jmp
mov
push
pop
jmp
pop
add
addb
adc
xlat
addb
mul
lods
xchg
inc
jecxz
inc
jbe
jecxz
das
into
inc
aaa
movsb
and
or
jb
xchg
into
cmc
mull
orl
dec
stc
mov
jo
push
push
mov
push
cmp
insb
pop
rcll
push
cmp
and
sti
jbe
add
adc
sbb
or
mov
inc
pop
stos
hlt
sbb
ja
sbb
mov
iret
jb
push
iret
aam
pop
push
or
popf
pop
push
repz
mov
add
fwait
xchg
adc
lahf
pushl
push
adc
mov
push
ficoml
aad
out
ss
incb
mov
sub
cmp
pop
xchg
outsb
je
aas
xchg
sub
sub
data16
mov
loope
mov
sub
leave
rcrb
or
xchg
mov
aaa
pop
mov
sub
ss
dec
pushf
cmpb
mov
cmp
dec
and
cmp
aas
fidivl
icebp
jae
pop
jne
out
loope
add
xchg
cmp
fs
sub
or
mov
pop
mov
inc
call
push
adc
push
lods
jmp
pop
arpl
and
aad
push
movsb
sub
aaa
add
jo
xor
dec
adc
pusha
es
jmp
lock
outsl
mov
aaa
mov
andb
mov
cmp
cmp
fmulp
mov
insb
adc
pop
dec
lahf
add
rorl
insb
dec
mov
push
shlb
jp
pop
jmp
xchg
xlat
xchg
jecxz
lea
vandps
bound
mov
cmp
adcl
cmp
push
inc
js
popa
frstor
add
inc
jmp
push
cmpsb
or
mov
mov
jo
mov
sub
shl
jbe
dec
jl
xor
cmp
clc
cmp
push
sub
xlat
insl
mov
test
data16
jo
ljmp
addr16
push
out
dec
jge
mov
and
jb
scas
lahf
push
mov
out
popf
movsb
pop
ficoms
and
sarl
shrl
cmpsl
or
cmp
mov
popa
xchg
ljmp
push
lahf
xlat
ljmp
shrl
sub
or
jae
mov
and
loopne
jl
movsl
mov
mov
cmp
mov
imul
or
sbb
mov
int3
push
push
inc
ljmp
lcall
sub
ret
pop
xchg
xor
mov
push
pushf
or
add
and
pop
xor
mov
cmpsb
dec
addr16
xor
adc
inc
push
xchg
pusha
inc
in
add
sub
jbe
jl
leave
rcrl
mov
in
cmp
push
out
or
mov
orl
call
bound
out
pop
scas
xor
fadd
ja
sub
ficoms
xor
sbb
pop
sbbb
cmp
insl
clc
dec
xchg
sbb
push
adcl
mov
shll
pop
xchg
cmp
fcmovb
xchg
mov
sarl
mov
cmpsb
sub
dec
lret
pop
lahf
xchg
gs
jmp
test
push
add
jge
add
testb
and
adc
pop
scas
xlat
loop
cli
int3
dec
aam
inc
sub
mov
mov
pop
cmpsb
lods
outsl
jno
jb
out
inc
or
int
adc
movsl
sbb
dec
cltd
out
aam
out
add
in
dec
lods
mov
fnstsw
cmp
cli
cmp
add
mov
insb
inc
rcrl
add
cli
incb
adc
int
cmp
pop
xchg
jle
lret
or
add
push
jecxz
imul
div
cwtl
hlt
adc
push
dec
sbb
push
sbb
mov
push
adc
int3
add
or
push
stc
adc
jo
adc
mov
loope
cmp
in
mov
movl
dec
imull
cltd
jo
pop
sbb
mov
int3
pcmpgtd
inc
testb
dec
imul
push
pop
pop
sarb
mov
imul
outsl
sub
aam
push
lcall
sub
push
cmpsb
arpl
dec
jp
xchg
cmc
imul
insb
in
je
mov
aaa
icebp
xchg
cld
leave
dec
sub
pop
sbb
add
into
cli
mov
xor
adc
adc
adc
xlat
jbe
mov
cmpsb
orl
mov
lret
cmc
dec
mov
lds
mov
nop
lret
and
lock
fucom
stc
mov
adc
fdivrs
insb
pusha
subb
xchg
les
pop
jo
aas
pushf
push
or
dec
fisubrs
shl
push
loope
fbstp
pop
cmp
mov
pushf
mov
push
cmp
ret
mov
je
in
xchg
xor
sub
jg
add
ret
sahf
mov
mov
inc
das
jl
loope
mov
mov
sub
and
andl
xchg
getsec
mov
and
outsl
push
mov
lea
adc
mov
movsl
xlat
mov
lret
xor
js
add
mov
sub
hlt
fmull
adc
pop
idivb
subl
mov
pop
push
lcall
and
xchg
jb
push
jae
mov
xchg
pusha
mov
pop
xchg
sub
fisttpl
jbe
gs
ja
jmp
lea
push
icebp
cs
cs
icebp
mov
dec
adc
push
jle
cwtl
xchg
jns
pop
ficoms
ja
and
fidivs
jo
and
ja
xor
daa
mov
lret
lock
js
aad
mov
or
loope
aad
dec
or
xchg
and
cmpsl
vmovsldup
int3
push
and
push
add
movsb
pop
popa
test
int3
fwait
gs
scas
jle
inc
xchg
lahf
add
xchg
cld
popf
mov
imul
es
inc
add
or
dec
shll
ss
add
mov
sbb
roll
popf
pusha
cld
adc
les
or
sub
add
icebp
mov
cli
xchg
fcmovb
push
popa
and
enter
cli
mov
out
ret
rorl
adc
sbb
jno
jge
jp
mov
inc
fidivs
fcoms
outsb
ja
nop
ja
rorb
mov
inc
cmc
stos
xchg
sub
int
add
cmp
xchg
xor
pop
int3
jne
cmp
jnp,pt
test
mov
ss
ret
jae
aad
test
int3
lods
sti
aad
jb
push
mov
mov
jge
mov
mov
sahf
in
ret
pop
les
testl
cmpsb
lret
mov
dec
mov
cmp
pushl
lret
into
lds
divb
or
std
in
pop
pop
sub
xchg
shr
mov
lock
dec
mul
rcll
xchg
xor
lcall
xor
mov
gs
xor
mov
into
xor
sub
pop
add
insb
push
sub
sbb
pop
xor
mov
mov
faddl
pop
cmpsb
dec
sub
aas
int3
cmp
pop
mov
and
pop
or
push
testl
mov
inc
das
incb
jge
cmp
out
mov
gs
pop
cltd
pop
or
data16
sahf
inc
xchg
jae
jne
mov
pop
or
jge
mov
subl
cli
mov
mov
xchg
ret
add
loop
sbb
or
fldcw
xor
lahf
rclb
orl
negl
insb
sbb
mov
fsubl
out
popf
test
in
and
aaa
cmpsl
adc
ljmp
arpl
fisubl
jge
inc
ja
pop
push
fwait
xor
les
jno
inc
mov
sub
xchg
inc
mov
out
adc
adc
add
dec
adc
inc
add
mov
xchg
xchg
adc
notl
imul
movsb
incb
mov
push
int3
xchg
insb
ret
sub
dec
daa
pop
not
push
daa
mov
sbb
adc
xchg
out
out
jge
fadds
jmp
xor
sarl
mov
cmp
cmpsb
int
or
rolb
mov
jmp
fs
les
jecxz
adcl
dec
cli
shll
shlb
insb
cmp
les
fcoml
pop
lahf
sub
adc
and
xor
push
xchg
call
and
mov
movl
sbb
xor
bound
test
inc
jns
loop
pushf
cmp
out
outsb
imulb
adc
retw
adc
aas
outsb
mov
roll
dec
cmp
push
cmp
jb
adc
das
repz
adc
mov
ds
mov
shll
jp
sahf
and
mov
mov
or
xchg
out
cld
hlt
jl
int3
mov
push
flds
and
mov
push
lret
mov
inc
cmc
mov
mov
sbb
andb
and
addb
in
rolb
push
andl
sahf
push
and
imul
orb
jle
cmp
negl
and
add
xchg
push
shrl
out
adc
hlt
fisttpll
pop
lock
test
mov
dec
scas
or
or
mov
mov
das
inc
pop
cwtl
jb
ds
or
mov
call
in
jge
or
jle
add
push
add
rcl
outsl
xlat
pop
dec
aad
fimuls
and
in
subl
out
and
mov
cmp
subl
daa
lea
rolb
sarl
cmpsl
cmpsb
xor
add
data16
xchg
jge
popa
mov
lds
mov
push
ret
dec
cltd
dec
cltd
xchg
jnp
add
int
orb
or
push
xor
dec
pop
in
jge
cmp
aam
push
repz
rcrb
pop
jnp
mov
pop
repnz
inc
dec
xchg
jge
lahf
pushf
mov
inc
pop
ljmp
jnp
push
add
sub
sbb
mov
addr16
icebp
jns
inc
cmp
in
adc
cmp
xchg
sbb
repnz
sahf
dec
mov
push
int
repz
sahf
or
jae
jle
xor
or
ds
pop
rorb
ds
pop
and
and
mov
and
mov
pop
jno
outsl
into
push
mov
jbe
loope
mov
sbb
pop
mov
nop
cmp
inc
cmp
jecxz
aas
sbb
imul
pop
out
dec
fidivrs
ja
gs
sbb
je
stc
sbb
rolb
cmp
jbe
jmp
imul
cmp
mov
cmp
mov
inc
in
xchg
mov
outsl
dec
add
xor
ds
mov
pop
insl
mov
sti
pop
jns
shll
jp
lock
into
je
adc
cmp
scas
push
aam
shll
add
ljmp
je
iret
sbb
test
xchg
sbb
into
fildl
inc
mov
icebp
sub
cmc
lods
cmpsl
xchg
push
subl
xchg
rol
pop
dec
outsl
loope
into
out
rclb
push
out
dec
mov
out
push
mov
sub
jae
jge
jmp
jbe
dec
mov
mov
les
test
clc
pop
movsl
mov
mov
std
and
xchg
lret
faddl
mov
jnp
mov
out
pop
inc
adc
xor
jo
sbb
sub
ret
in
jne
mov
or
fsubs
or
cli
sub
mov
adc
pop
aad
adc
cmc
push
call
arpl
sti
push
lcall
lcall
pop
push
sbb
jle
bound
test
lods
dec
wrmsr
xchg
daa
sbb
mov
int3
and
mov
and
jle
dec
mov
jbe
mov
push
cwtl
push
adc
fildll
jne
pop
add
jb
cmp
test
std
pop
test
adc
push
icebp
cmp
add
addr16
sbbl
leave
fdivr
out
add
rorl
loopne,pt
nop
or
lahf
gs
loope
push
fdiv
jne
xlat
ficompl
xlat
test
mov
orl
imul
lcall
in
pop
xchg
xor
je
out
xor
fsubrp
cwtl
repz
lea
cli
sub
push
cmp
jne
stos
push
mov
arpl
repnz
mov
jne
lahf
mov
aaa
xchg
mov
cmp
std
or
pop
daa
dec
cld
pop
pop
cmc
and
shlb
inc
cmpsb
pop
inc
push
and
insb
push
test
push
jmp
push
xlat
nop
test
mov
pop
repz
cmpsl
pop
lret
js
cmp
cwtl
js
mov
cld
addl
pop
dec
out
xor
jns
cli
jne
out
lahf
movsl
repnz
push
inc
sbb
aad
and
in
pop
adc
fwait
call
cmc
jbe
xchg
vunpckhpd
mov
cmp
inc
pop
into
int3
xorl
inc
fldt
insb
adc
mov
push
filds
mov
lock
neg
pop
clc
stos
enter
jo
insb
das
cwtl
push
cltd
iret
test
out
lahf
cmpsl
out
shll
int
xor
sub
inc
pop
outsl
lods
outsl
pop
jg
repnz
jo
ds
int
xchg
sbb
std
repz
and
push
test
and
mov
and
ljmp
jb
cwtl
insb
mov
ret
cmp
cltd
cmp
or
push
pop
int
push
push
push
xchg
int
iret
mov
imul
lcall
sub
jmp
dec
dec
test
test
jbe
jg
imul
aam
repnz
xchg
and
xchg
lahf
inc
mov
xor
jbe
into
adc
push
jp
pop
cs
decl
insl
push
xchg
fsubrs
adc
imul
nop
pop
arpl
repnz
lea
cld
jns
adc
fisttps
rclb
and
push
push
jge
or
add
popw
lods
iret
push
inc
cmp
imul
push
pop
mov
xchg
imul
inc
push
or
int
into
cltd
jl
dec
cltd
and
pop
push
cwtl
push
cmpsb
push
test
cmc
fwait
not
add
js
adc
repz
adc
ror
mov
jae
mov
dec
vmread
mov
lret
ja
sub
loop
imul
scas
insl
outsl
pop
inc
ljmp
data16
outsb
fimull
loop
sub
inc
sub
pop
inc
push
in
in
lods
pushf
pop
sub
xorb
sar
sti
inc
push
adc
scas
cs
add
rol
sub
fidivs
cmpsb
jo
inc
lock
loop
jbe
xchg
in
jns
jecxz
mov
xchg
out
and
jno
sub
sti
jno
xchg
mov
jle
test
fbld
pop
xchg
test
inc
jl
or
push
repz
push
sbb
imul
inc
adc
mov
push
xchg
lret
jno
or
mov
fisttpll
lret
mov
mov
cwtl
outsl
xor
in
rcrb
inc
mov
push
pop
test
fldenv
out
lret
cwtl
xor
inc
xor
lea
inc
mov
inc
inc
inc
arpl
les
test
and
jmp
xchg
jmp
arpl
scas
xchg
mov
out
lcall
xlat
jp
shlb
cmp
or
pushf
push
push
outsb
stos
dec
out
cmp
add
out
cmp
aam
test
rorl
fnstcw
pop
rcl
in
sub
jbe
inc
fldl
jae
gs
xlat
pop
pop
in
xchg
mov
test
mov
stos
push
mov
xchg
inc
cmp
sub
xchg
test
cld
outsl
hlt
jecxz
sub
popa
push
cmp
sub
insb
inc
pusha
cmp
dec
sbb
sub
and
push
popf
gs
je
add
stos
mov
mov
sub
cmp
lcall
mov
test
out
xorl
int3
and
mov
xor
add
arpl
jbe
arpl
xchg
mov
xchg
xchg
push
das
xor
cmpsl
xchg
or
cwtl
pop
sbb
add
mov
call
sbb
pop
xor
or
adcb
ret
test
push
inc
std
int
jmp
cld
pop
dec
daa
xor
push
cmp
lea
add
movsl
stc
jle
fwait
mov
imul
int
in
jbe
cmpsl
add
push
in
pop
dec
xor
xchg
sub
lds
dec
sbb
stos
sahf
xchg
addr16
inc
outsb
out
neg
xchg
stos
adc
loope
add
sahf
stos
jl
data16
cld
jge
fsub
test
sarb
xchg
shr
or
xor
js
xchg
into
iret
jp
xchg
sbb
sbb
dec
decl
rcrb
stos
push
fsubr
bnd
pop
mov
dec
cmp
loopew
adc
test
cmpl
inc
xchg
insl
std
vucomisd
inc
or
mov
dec
popf
cltd
sbb
mov
jmp
sub
mov
rcrb
push
jnp
cmp
leave
hlt
jno
repz
jbe
fincstp
mov
push
dec
sbb
and
iret
mov
xor
inc
inc
or
adc
les
and
popl
scas
arpl
ret
addl
sbb
mov
xor
scas
adcb
pop
xor
rcrb
ret
out
add
sbbl
mov
pusha
push
push
je
push
fcompl
sbbb
gs
mov
lret
rcl
fidivrs
mov
test
jb
adc
popf
adc
and
inc
mov
xor
in
into
adc
movsl
adc
push
cwtl
rclb
jo
test
dec
xor
lahf
jno
test
int
imul
movsb
lret
or
pop
subl
decb
ljmp
call
jmp
inc
xor
cltd
add
cmp
push
testl
jge
adc
pop
push
inc
adc
pop
sbb
rcr
xchg
sahf
int
cmc
fstpt
cmp
mov
adc
iret
and
sub
sbb
cld
aas
fstl
pop
imul
adc
stos
insl
push
mov
inc
xchg
mov
test
popf
mov
je
cltd
push
outsb
pop
sub
inc
jp
pop
loopne
lret
ret
lcall
daa
fbstp
mov
add
nopl
dec
jg
pop
adc
imul
mov
cmp
int
inc
cs
inc
inc
inc
dec
sbb
in
jo
xor
xor
out
mov
mov
mov
mov
push
xor
pop
cmp
addb
jnp
call
or
pop
adc
or
dec
adc
jmp
clc
jmp
iret
lds
imul
xor
dec
jbe
add
notb
xor
adc
xchg
sti
mov
dec
mov
inc
fistpll
xlat
mov
push
cmpsl
jne
push
outsb
loop
push
cmp
jne
popf
mov
xchg
lods
xchg
dec
jg
jecxz
arpl
into
mov
push
insl
pop
add
xlat
dec
std
imull
push
rcll
mov
sbbb
scas
push
mov
dec
or
dec
xor
cmp
ja
sub
sbb
imul
jecxz
push
icebp
jmp
out
aam
and
data16
clc
pusha
sbb
in
pop
pushf
push
fwait
mov
mov
int
sub
stos
jg
push
and
and
jbe
cld
test
int3
pop
ret
xchg
rolb
and
jne
daa
mov
repz
xor
ja
arpl
dec
popf
sarb
push
lret
cmpsb
iret
cli
pop
in
jo
inc
fnstsw
cli
jle
out
add
orl
enter
push
out
dec
and
dec
and
jb
dec
inc
dec
xchg
mov
pop
sub
sbb
les
push
nop
pop
fcoms
sbb
jbe
and
ret
repz
push
jle
pop
push
test
lods
push
dec
jmp
pop
or
sbb
cmpsb
jl
ret
pop
mov
push
dec
fdivrs
orb
insl
push
mov
inc
aad
xchg
pop
sbb
xor
loop
data16
and
shlb
xor
sarl
push
adc
jge
loopne
jbe
pop
fnsave
ja
clc
popf
dec
xchg
sbb
dec
xchg
jmp
pop
ficomps
bound
inc
cmc
sbbb
fstpl
out
call
aas
push
pop
sub
cmp
movsl
dec
movsl
sub
pop
std
add
sub
fstps
inc
xor
loopne
sarl
fwait
xchg
std
lds
inc
pop
mov
leave
inc
pushl
aas
scas
int
out
add
rcrl
mulps
or
inc
mov
out
push
repz
mov
or
push
xor
or
jb
xchg
jns
stc
mov
dec
test
mov
imul
sub
push
subl
mov
jecxz
jbe
adc
jp
arpl
icebp
cltd
shll
ljmp
daa
xlat
test
aam
int3
les
test
push
and
ror
lret
pusha
mov
leave
ljmp
insl
filds
adc
sub
dec
enter
jne
scas
aas
inc
daa
mul
push
aam
and
sub
bound
mov
loopne
lods
cltd
dec
insb
leave
in
dec
cmpsb
ja
cmp
push
test
and
cmp
out
jnp
pop
jp
and
testl
cmp
inc
movsb
or
aaa
lds
jmp
jnp
xor
lods
mov
pop
add
mov
xchg
daa
mov
arpl
add
les
pop
xor
cmp
or
das
negl
ds
fldcw
mov
xor
out
mov
sti
mov
lds
push
out
or
insb
mov
mov
iret
addl
repnz
jo
and
dec
stc
and
or
mov
sbb
jmp
adc
lahf
mov
and
loop
je
push
mov
call
mov
testl
pop
sbb
lcall
ficompl
jne
mov
ret
cmp
jae
jle
iret
test
add
cmp
mov
dec
sub
or
lahf
mov
push
je
lods
int
rolb
xchg
adc
nop
pop
push
jno
aas
mov
lea
mov
leave
sub
push
cmp
mov
sub
mov
pop
xchg
or
mov
insl
lret
out
inc
divb
hlt
cmp
mov
add
pop
nop
and
lcall
pop
mov
leave
push
jbe
jne
aaa
mov
sub
or
mov
xor
mov
dec
add
ja
into
xchg
mov
mov
fistl
sbb
faddl
mov
and
inc
inc
jl
push
out
cmp
push
test
mov
dec
iret
mov
jge
cmp
icebp
flds
adc
iret
or
cs
rclb
cmpsl
or
int
pop
and
adcb
lret
mov
pop
mov
scas
cmp
ficoms
inc
scas
and
jmp
std
cmpsb
pop
mov
sub
cmp
cwtl
mov
cmp
and
dec
mov
mov
mov
rcll
sub
push
shlb
dec
adc
cmp
out
add
enter
mov
loope
std
leave
enter
clc
and
xchg
mov
nop
es
xchg
sub
mov
mov
jecxz
adc
mov
adc
pop
in
hlt
fsubs
les
int3
faddl
jns
pop
or
dec
lods
and
pushf
pop
lcall
test
adc
clc
sarl
in
xchg
lods
call
cmp
jae
dec
cmpsb
scas
cwtl
icebp
mov
push
mov
sub
jb
mov
mov
je
add
test
cmp
popf
std
rclb
xor
sarl
mov
sub
cmc
xchg
mov
xor
add
shrl
cltd
mov
jo
jo
shll
rcr
lods
fldt
push
cmpsl
movsl
cmc
add
aad
xor
js
sub
cld
mov
dec
or
dec
cwtl
shrb
push
xchg
dec
dec
xor
adc
jmp
jge
pop
mov
mov
leave
push
jecxz
pop
lock
popa
jnp
in
mov
or
push
js
pusha
push
fists
inc
adc
jns
push
xchg
dec
ds
iret
mov
fiadds
out
fs
cmpsb
enter
stc
cld
shrb
ret
nop
fistpl
rolb
stos
xor
sbb
inc
jae
and
xchg
aas
decb
fdiv
jp
or
pop
pop
sbb
dec
xor
pusha
cmc
xchg
push
fiaddl
dec
fbstp
mov
jb
mov
int
pop
int3
cwtl
mov
lahf
dec
push
inc
scas
mov
push
lods
mov
test
inc
inc
fbld
nop
jp
or
out
adc
mov
add
dec
out
lret
dec
push
in
push
andl
repz
mov
lock
stc
inc
dec
daa
lret
push
ljmp
lock
aad
push
test
push
mov
dec
xchg
xor
jmp
mov
cld
mov
int3
bound
dec
mov
mov
dec
pushw
lods
mov
arpl
hlt
adc
dec
out
clc
jno
push
dec
nop
add
sarb
movups
ja
in
stos
loope
pop
cmp
mov
and
dec
and
dec
or
bound
pop
jle
orb
lret
mov
int
sti
pop
daa
popa
std
ss
push
lea
neg
adc
mov
int
scas
sbb
or
dec
inc
xor
xchg
cmp
rcl
mov
shl
jb
jmp
imull
xchg
movsb
dec
or
jnp
xchg
mov
cmpsl
cmp
mov
data16
sub
clc
test
push
pop
sbb
adc
cmp
fsubrs
and
jp
jb
pusha
mov
ljmp
repz
and
push
test
aad
push
or
jg
or
in
shrl
int
sub
adc
xchg
xchg
mov
xchg
lds
sbb
mov
adc
sbb
dec
enter
fsubl
aaa
popa
add
add
xor
lods
dec
xchg
push
adc
lock
int
push
shl
jb
stos
mov
test
in
dec
cmp
push
xlat
mov
jbe
popl
pusha
xchg
dec
cmc
stc
dec
pop
sub
filds
mov
fisttps
sub
stos
int3
out
js
jbe
adc
inc
stos
cmp
ds
into
xchg
cmp
mov
add
ret
sub
xchg
pop
adc
orb
lock
add
int
adc
inc
fimuls
popa
inc
xchg
shll
xor
jne,pn
xlat
ja
imul
sbbl
push
pop
fcompl
jp
in
xor
pop
mul
or
subb
inc
or
test
or
mov
dec
cmp
push
jge
test
bsf
bnd
mov
mov
loopne
fdivs
les
mov
arpl
push
cwtl
sub
pop
pop
loop
jb
xchg
mov
mov
cs
loop
sbb
or
sub
ret
faddl
js
push
lea
inc
aam
mov
push
mov
push
lcall
pop
mov
imul
fisttpl
jae
jge
pop
std
into
test
push
dec
test
pop
pop
out
packssdw
jmp
xor
dec
xchg
negl
imul
pop
int
imul
les
sbb
enter
inc
ljmp
dec
aad
jle
js
clc
fwait
pop
add
xlat
mov
or
fpatan
inc
sbb
push
in
out
mov
popf
lock
int3
lret
push
mov
mov
pop
idivl
lea
sub
lcall
lock
ret
xchg
sub
or
insl
cmp
cmpsl
push
dec
stos
pop
hlt
repnz
and
inc
jns
mov
ss
lcall
and
mov
outsl
sti
flds
add
xor
mov
jge
mov
js
sbb
mov
loope
int3
jle
cmc
or
scas
cmpsl
cmp
push
or
inc
rol
and
lock
sub
cmpsb
xlat
push
dec
repz
or
or
jmp
push
dec
mov
cmpsl
mov
test
push
decb
dec
push
mov
call
test
or
lods
cmp
jle
cwtl
rcll
mov
cld
sub
push
push
jb
or
inc
mov
inc
orl
lods
sub
or
sbb
sub
dec
mov
xor
jl
cltd
jmp
pop
mov
dec
mov
stos
ljmp
mov
pusha
es
mov
mov
lahf
mov
and
mov
jecxz
sahf
xor
push
cmp
fldcw
jb
mov
fstps
enter
leave
mov
sbb
js
aas
mov
lock
dec
jmp
xor
xor
outsb
fiaddl
enter
mov
addr16
add
mov
pop
inc
sub
ljmp
int3
add
int3
mov
sarl
jae
cwtl
dec
sbb
xchg
loope
dec
inc
scas
aam
scas
xchg
call
inc
mov
mov
push
mov
pop
das
mov
je
dec
testb
xchg
rorb
test
push
mov
xor
push
mov
adc
dec
loopne
stc
sub
xchg
add
mov
and
mulb
rcr
mov
in
xchg
push
ljmp
and
push
rol
out
jecxz
insb
in
mov
add
les
sub
xchg
loop
or
sbb
cld
ja
pop
movsb
push
popf
pushf
cmp
pop
arpl
mov
mov
int
inc
xor
arpl
js
adc
xlat
cmpsb
and
cwtl
push
cmp
sub
aaa
or
mov
add
ds
andl
mov
sbb
sub
stc
cld
pushf
dec
mov
sbb
xor
xor
push
lock
mov
push
lcall
aas
daa
in
jmp
pop
ss
sahf
pcmpgtb
fildll
mov
push
cmp
inc
call
dec
jl
ret
lds
cld
xor
mov
clc
pop
test
loope
fildll
loop
xor
add
add
xlat
mov
adc
bswap
or
inc
rolb
in
inc
out
je
repz
call
dec
jb
mov
mov
or
pop
daa
popf
inc
test
dec
or
int3
sbb
push
lock
stos
ret
fildll
ja
fiaddl
mov
jmp
xorb
repnz
pop
adc
bnd
lods
jl
sti
addr16
jns
mov
jbe
jge
andl
lods
imull
push
fisubl
xchg
and
add
jae
pop
inc
les
jb
xchg
insl
or
push
push
inc
std
clc
cs
jnp
sar
jge
fs
mov
arpl
push
push
icebp
xor
mov
adc
mov
call
add
movsl
xor
xchg
out
sbb
popf
cli
ret
or
add
jns
pop
push
fs
jecxz
inc
pop
xor
in
adc
loope
rolb
and
push
scas
ret
mov
add
push
popa
sbb
sub
mov
mov
out
add
pop
sub
jnp
iret
je
push
js
dec
iret
dec
loope
cmp
inc
add
divb
lret
sub
loopne,pt
cmp
jne
dec
sub
stc
es
xchg
jbe
dec
push
popa
jge
stos
push
mov
jge
push
xor
fs
in
xchg
addb
lock
add
leave
fsubp
ds
int
add
sub
pop
mov
fldcw
arpl
sti
pop
ja
xor
jne
pop
push
inc
test
mov
scas
movsb
cltd
push
iret
aad
repz
fadds
mov
sub
xchg
ljmp
inc
imul
push
adc
mov
or
jne
push
push
pop
inc
jl
push
ret
divl
sub
pop
cmp
mov
out
xchg
gs
cld
leave
shr
mov
xor
out
repz
stos
in
or
jle
adc
mov
shl
cwtl
dec
popa
xchg
clc
lret
mov
cwtl
mov
sbb
rol
or
inc
leave
xchg
mov
in
dec
cltd
pop
aad
shr
push
divb
ja
insl
mov
test
cs
sub
xchg
sbb
pop
lock
test
in
aaa
iret
push
add
pop
shrl
clc
mov
mov
inc
mov
fisttpl
repnz
or
sarb
imul
jmp
or
or
minps
xor
sub
rclb
inc
icebp
cmpxchg
fsubs
and
xor
std
je
jl
les
adcl
idivb
xor
push
mov
push
int3
data16
inc
add
push
shlb
stos
mov
icebp
stc
cmp
aad
out
or
outsl
cmpl
pop
cmp
jg
mov
enter
lods
add
mov
aaa
or
jmp
subb
outsb
push
sbb
fwait
shll
lcall
sub
mov
mov
pop
push
jge
test
xchg
jb
and
dec
or
push
sub
jmp
pop
push
inc
dec
mov
data16
mov
push
mov
pop
mov
movsb
daa
jg
or
dec
mov
ja
es
dec
adc
and
stc
fs
movsl
test
loopne
or
push
sbb
dec
das
shr
loope
js
popf
daa
sub
in
lcall
xorl
iret
rolb
ss
and
cmp
into
ljmp
lcall
aas
in
adc
adc
add
stos
outsb
add
cmp
mov
negl
int
aam
mov
xor
sub
cmp
cmp
jo
sbb
sbb
push
js
mov
cmpsb
dec
and
addr16
xor
lock
dec
daa
stos
jno
ljmp
insl
in
sbb
aaa
adc
mov
pop
xor
xchg
sbb
out
out
sti
mov
in
inc
push
add
and
xor
inc
jge
mov
outsb
jae
push
mov
pop
loop
ljmp
xor
jbe
test
fsubrl
cmpsl
cmp
and
inc
cs
jno
pop
xor
pop
out
imul
add
testl
inc
xchg
mov
imul
or
pop
cltd
pop
test
imul
dec
push
in
or
xor
call
pusha
add
outsb
or
test
add
insl
jne
mov
cmp
ss
or
pop
pop
loop
fstp
pop
hlt
xor
ret
sub
frstor
cmpb
ret
push
push
add
push
jp
lahf
aaa
out
cli
fstpl
jnp
pop
fisttpll
xchg
in
cmpsb
sub
fstl
and
sub
std
mov
or
stc
mov
fwait
jl
dec
rorb
mov
out
incl
out
cmp
hlt
pop
cmpsb
push
dec
stos
gs
add
outsb
inc
mov
ss
nop
les
cmpsl
and
test
jb
mov
xchg
movsb
fldt
dec
inc
ret
xchg
aam
jne
jl
xchg
pop
and
sub
sahf
push
jno
sub
push
dec
pop
pushf
stos
push
cmp
sarb
dec
movsl
or
sub
adc
int3
push
sbb
rcr
inc
sub
mov
adc
repnz
jae
test
stos
ret
mov
cltd
clc
in
in
jb
pop
sbb
shll
add
lea
push
out
pop
test
fldcw
aaa
nop
sbb
decl
sbb
loop
clc
push
lret
cmp
push
push
jecxz
sbb
in
push
and
inc
lahf
sbb
int3
repz
sahf
sbb
push
outsl
scas
pop
and
cmp
lcall
and
add
mov
add
nop
inc
mov
test
xor
sti
jae
add
nop
sub
aaa
jo
inc
gs
sbb
mov
sub
xor
pop
decl
xor
int
xlat
in
inc
push
xlat
ret
dec
pop
flds
xor
jns
add
dec
add
cmp
push
mov
in
pushf
imul
cwtl
cmp
adc
imul
pop
adcb
aad
sbb
pop
test
add
push
jg
xchg
and
scas
insb
jmp
lahf
data16
xchg
xor
shlb
or
lods
jnp
fistps
in
xor
in
outsl
push
xor
cmp
push
enter
repz
inc
mov
push
adc
lret
inc
sbb
add
std
push
shrb
cmpsb
add
andb
pop
fs
insb
and
rcl
lahf
lahf
jae
cli
push
mov
jno,pt
xchg
xor
xchg
lea
repnz
notl
lret
add
imul
xchg
inc
pop
and
mov
mov
inc
push
xlat
cmp
adc
movsb
and
shl
dec
insb
xor
or
jbe
in
adc
pop
in
jg
mov
icebp
icebp
lcall
rcll
sahf
fistl
add
inc
cs
test
test
les
loope
push
cmpl
jecxz
push
shl
mov
jb
sub
xchg
xor
or
ljmp
nop
aad
nop
imul
ret
and
repz
cmp
inc
cld
cmp
icebp
hlt
in
daa
inc
mov
add
cmpsl
mov
adc
xchg
outsb
mov
inc
aas
and
std
cli
add
cmpsb
shll
outsb
fbld
std
scas
sub
out
jecxz
push
clc
ret
jbe
pop
test
idivl
sahf
pop
add
sbb
int
lcall
cmc
mov
in
inc
or
jl
push
pop
push
add
shll
adc
ret
fnstcw
frstor
inc
aaa
into
or
mov
les
mov
in
inc
scas
push
mov
mov
add
jb
inc
cmp
ret
in
std
aad
dec
in
test
lret
push
or
mov
xchg
je
fisttpll
pop
jo
or
jp
cmp
add
mov
std
push
cmpsl
cli
sub
lods
dec
nop
mov
loope
fmuls
push
cli
outsl
aas
mov
inc
add
adc
roll
sbb
or
or
subb
loopne
js
adcb
nop
or
push
fistps
pop
lret
stos
pop
repz
push
fs
push
out
cmpsl
cmp
or
in
mov
dec
mov
pop
mov
sahf
pop
imul
jne
cmp
cmp
and
pushf
sub
loop
js
jle
ja
xchg
arpl
or
inc
lret
sbb
nop
shll
rol
mov
js
inc
aad
imul
xchg
mov
sbb
mov
sub
orl
add
mov
push
lock
xor
add
mul
push
in
mov
xlat
xchg
pushf
addb
shl
push
or
cmc
mov
fiadds
jae
or
push
loope
mov
fisubrl
ja
fisubrl
jbe
mov
dec
pop
add
mov
popf
js
int3
dec
xchg
iret
jns
jns
sti
dec
mov
jne
or
aaa
mov
popf
lahf
sarb
pop
cmp
pop
aaa
sti
sti
adc
les
popa
push
ljmp
shl
mov
add
mov
jne
adc
ror
push
add
cmpxchg
mov
dec
inc
pusha
cmp
shr
jp
adc
inc
xchg
adc
flds
and
fisttpll
fsubl
mov
sub
push
or
inc
repz
pop
ret
push
push
adc
icebp
jp
push
jl
inc
mov
fmul
cmp
mov
enter
and
push
std
cmp
add
push
in
stos
xchg
popf
daa
xchg
in
cwtl
add
pop
pop
mov
int3
add
mov
iret
in
test
sti
mov
outsb
cmc
cmpsb
mov
inc
mov
jg
cmp
inc
sub
xchg
outsl
mov
sahf
roll
adc
sub
dec
lret
fdivrl
adc
mov
inc
jnp
xor
pop
cmp
inc
adc
lock
enter
push
fdivrs
repnz
leave
push
sbb
or
ljmp
je
or
cli
data16
sbb
cmp
ss
lcall
mov
test
int
xor
push
enter
push
mov
inc
loop
dec
xchg
jae
insb
pop
and
and
pop
stos
mov
push
xor
insb
dec
pop
xor
imul
mov
inc
jmp
mov
stc
adc
lahf
mov
xor
xor
lret
adc
rdmsr
jne
jns
sub
or
or
ljmp
ficoms
loopne
sahf
mov
sub
out
shrb
push
cli
mov
sahf
push
push
dec
cmp
mov
jp
daa
scas
rorb
loopne
pushf
push
int
cmpsl
scas
lea
push
add
sub
insl
push
pusha
push
lret
xor
and
and
and
sbbb
test
leave
fstps
fstp
lods
adc
or
lds
popa
call
insl
xor
mov
inc
movsb
dec
jecxz
mov
mov
mov
mov
dec
xchg
insl
pop
cmp
test
push
outsb
mov
cmp
arpl
sahf
lods
jl
lea
xchg
inc
dec
xchg
les
cwtl
loop
rolb
aam
inc
push
cmpsb
xor
movsl
pop
daa
out
jo
push
enter
sbb
insl
xor
cmp
stc
or
clc
push
aaa
push
psrlq
push
mulps
aad
fstl
xchg
xchg
out
fidivs
sbb
push
mov
pop
pop
dec
pushw
mov
pop
fiaddl
scas
shl
cmp
nop
add
or
xor
movsb
in
jb
sbb
and
and
pop
jmp
inc
inc
mov
inc
dec
push
mov
ret
mov
xorl
add
scas
pop
outsb
xor
inc
rolb
into
adc
scas
imul
int
and
inc
push
inc
cld
repz
in
cmp
and
sub
cwtl
scas
xchg
and
imul
data16
xchg
mov
repz
adc
pop
ret
jo
out
cld
mov
dec
pushl
hlt
adc
mov
sub
mov
push
lahf
arpl
es
dec
fdivrs
call
stos
jnp
and
xchg
add
sti
jle
jmp
int
mov
pop
lea
pop
xchg
fists
inc
cmpsb
stos
mov
loope
mov
adc
fs
sbb
les
and
xchg
mov
pop
nop
ds
fcomp
hlt
pop
xchg
sbb
stos
jbe
cmpsb
xchg
out
dec
xor
out
dec
cltd
mov
mov
pushf
jge
les
adc
push
cmp
lock
xor
mov
jns
dec
aad
fdivr
lds
and
dec
cmc
mov
dec
idivl
and
jbe
ljmp
cmpsl
pop
jg
in
sbb
xor
xchg
es
into
lcall
sbb
cmc
or
std
xchg
cltd
popa
addb
fs
frstor
cmp
test
popa
jb
outsl
jo
lcall
mov
jmp
test
lock
push
sub
outsb
in
xchg
push
fbstp
sbb
push
mov
loopne
les
sbb
stos
fsubrs
cli
xchg
xor
ds
ss
les
movsl
out
test
mov
outsl
pusha
jmp
mov
mov
aas
cmp
out
stos
push
cltd
and
push
imul
popf
pop
lahf
test
mov
xor
shl
repnz
sbb
mov
scas
dec
fcmovu
stos
cmp
roll
fidivl
mov
lods
xchg
sbb
shll
jge
push
imul
pop
fbld
cmp
into
rcll
sub
shlb
pop
in
mov
sbb
in
jne
lahf
mov
adc
scas
mov
fisubrs
pushf
pusha
cmp
aaa
repnz
mov
xchg
or
mov
or
dec
pop
inc
jo
out
cmp
sub
leave
jle
stos
into
xchg
mov
repnz
imul
push
mov
xchg
push
push
or
lahf
mov
cmpsl
and
stc
flds
pop
xor
aaa
mov
adc
jo
push
in
addr16
imul
mov
add
sahf
sub
dec
and
mov
inc
out
out
inc
bound
xchg
mov
inc
and
nop
mov
es
dec
adc
stc
repz
nop
mov
add
hlt
rclb
sbb
push
pop
fcomps
add
dec
outsl
arpl
push
adc
sub
inc
cwtl
push
push
inc
repnz
repz
std
in
jmp
pop
mov
adcl
iret
shlb
aas
cmp
stc
cmp
ljmp
movsb
and
mov
test
ret
out
and
sbb
test
cmc
xor
pop
stos
ja
mov
xchg
mov
sbb
push
or
push
icebp
and
cmc
addl
fwait
push
mov
jge
adc
rcrb
inc
jecxz
test
mov
pop
pop
call
ficoml
fmull
cmp
mov
jne
mov
lret
inc
and
xor
dec
and
mov
in
push
mov
inc
inc
jg
shrb
pop
adc
and
jl
pop
sbb
xlat
mov
arpl
dec
xor
or
in
xor
jae
addr16
adc
xchg
jmp
nop
mov
dec
fildl
mov
gs
and
inc
bound
add
sub
jno
inc
stos
cmp
fnstenv
dec
mov
mov
dec
pop
outsb
stos
jp
into
cltd
fbstp
mov
and
add
xchg
dec
dec
shr
jbe
jne
aaa
fdivs
cmp
pop
jmp
mov
cmc
jae
and
clc
adc
inc
orl
push
mov
add
popf
je
in
mov
rorl
popf
jle
mov
pop
lock
dec
addr16
xor
cmp
inc
scas
hlt
inc
movb
sbb
mov
shlb
cmpsb
mov
pop
push
data16
fists
mov
mov
pop
loope
cwtl
pop
xor
jge
aaa
push
mov
ljmp
mov
xor
mov
push
mov
mov
push
mov
scas
xchg
ret
data16
fildll
out
add
cmp
loopne
mov
les
mov
mov
inc
inc
push
dec
adc
js
stc
aas
rcll
cwtl
jne
dec
lock
cltd
gs
xchg
aas
out
cwtl
leave
lock
bt
outsb
xor
xor
leave
inc
fs
xor
inc
mov
jmp
stos
pushf
popf
fwait
cmc
nop
xchg
mov
mov
rcll
mov
xchg
cmpl
popa
repnz
sar
jb
dec
fistps
sub
mov
jno
mov
sahf
xchg
stos
add
sub
dec
leave
pop
out
mov
pop
sub
pushf
pop
ret
fs
mov
ss
fldz
push
pusha
sub
ds
mov
rorl
frstor
xor
imul
mov
bound
mull
push
push
mov
and
test
repz
xchg
xlat
pop
popf
cmp
sbb
or
jle
xchg
ficomps
mov
push
fisubs
mov
icebp
cmp
mov
fisubs
in
and
sub
add
das
ret
push
adc
mov
inc
jns
pushf
cmpsb
rclb
cs
mov
es
cwtl
mov
insb
fstpl
and
aam
fs
mov
and
cmp
gs
add
jno
lock
fldenv
repz
push
or
lock
push
jae
shll
pop
mov
mov
enter
les
test
in
aad
shl
mov
dec
adc
inc
mov
insl
jp
imul
and
data16
fdivl
mov
dec
push
xor
inc
push
scas
pop
inc
jae
pushf
dec
in
adc
into
xor
jno
fneni(8087
rorb
mov
xchg
bound
add
lock
cmpsl
mov
mov
and
adc
cld
sarl
aam
mov
nop
inc
test
les
adc
sub
gs
popa
push
fstl
ss
int3
ficoms
out
or
sbb
fcompl
jb
lret
mov
xchg
pusha
loopne
int3
xchg
xchg
je
push
ficoml
iret
test
fcomps
fadd
inc
fisubl
cmp
jmp
push
outsb
sub
pushf
test
fstps
adcb
leave
test
push
push
adc
repnz
xor
nop
cmp
in
ret
pop
sbb
push
nop
inc
pop
std
push
stos
rcll
push
sbb
aam
add
pop
add
mov
nop
mov
stos
mov
movsl
dec
aad
or
dec
push
aas
lea
and
xor
fdivrs
and
sbb
and
std
fcompl
fdivp
dec
pop
jl
sbb
cwtl
leave
in
inc
sub
mov
es
cmp
pop
push
push
insb
clc
pop
jp
outsb
fs
stos
inc
push
sub
adc
or
fstps
negl
mov
aaa
and
and
out
or
repz
fwait
cmpsl
mov
mov
andb
sbb
popa
sbb
and
pop
std
dec
mov
xor
xchg
mov
ja
fistl
mov
mov
cmpsl
push
cld
pop
iret
fs
and
xchg
in
push
lcall
pushf
addr16
or
mov
xor
mov
lods
inc
jmp
jecxz
icebp
cvttps2pi
inc
lret
ficoml
push
in
pop
scas
leave
lods
rorl
imul
pusha
rcrl
mov
dec
cmp
mov
insl
clc
ljmp
enter
cli
jmp
mov
jmp
xorl
fstpl
jae
mov
movsl
add
scas
adc
mov
test
jo
push
aad
outsl
cmp
js
xchg
inc
xor
dec
jle
xchg
mov
and
inc
adc
pop
test
adc
cmp
and
push
rorb
mov
cmp
inc
mov
call
fstpt
push
inc
testb
int3
mov
mov
sbb
jl
out
and
xchg
sbb
movsl
into
in
cmp
iret
dec
movsb
int3
jns
xchg
add
stos
pop
or
add
cmpsb
in
add
jb
sbb
js
mov
mov
mov
sbb
repnz
xor
sbb
jae
insl
mov
lods
add
push
push
in
lret
inc
push
rsqrtps
add
fcom
or
in
outsb
sbb
dec
test
mov
fwait
insb
bts
push
iret
sub
sub
out
sbb
bound
scas
push
sbbl
scas
daa
sub
jmp
add
bound
ret
sahf
imulb
mov
xchg
in
xchg
hlt
aam
mov
cltd
cmp
int
inc
notb
outsl
in
adc
adc
push
inc
pop
cli
sub
nop
or
int3
jp
adc
test
popl
out
fs
xor
es
sbb
jg
xor
or
xchg
dec
arpl
aaa
imul
pop
inc
test
rclb
clc
cwtl
push
cmp
mov
aam
shrb
iret
mov
dec
fbstp
mov
lods
mov
repz
xor
filds
in
mov
inc
in
add
arpl
cmp
pusha
sub
rcll
jno
fdivs
mov
stc
jle
in
loop
adcb
and
rcrl
ret
repz
and
mov
xor
xor
fdivr
les
and
orb
loop
mov
mov
cmpsl
cwtl
xor
dec
popf
negl
mov
fisubrl
popf
inc
pop
lret
xchg
es
mov
cmp
jecxz
push
iret
mov
mov
mov
mov
and
xchg
out
inc
lahf
out
sti
add
jns
arpl
test
mov
bound
ljmp
xlat
test
sbb
sub
lods
inc
fdivrs
xchg
cmp
imul
mov
mov
sbb
add
push
and
lahf
movsl
dec
dec
test
inc
add
out
fcoml
adc
dec
out
xlat
hlt
dec
lock
pop
nop
push
lahf
loope
bound
sub
dec
and
repz
sbb
pop
aad
aad
nop
and
fcompl
add
imul
inc
pop
nop
lret
lret
mov
in
out
dec
xor
mov
cli
sti
mov
lds
pop
pop
or
lret
inc
jg
rorl
lods
adc
loop
jae
pop
incb
sahf
pop
rorb
sub
sbb
stos
xchg
xor
sub
mov
repnz
in
lcall
je
sbb
pop
mov
in
jle
clc
in
lahf
pushf
std
inc
cmp
loop
xor
call
cmc
and
jmp
fdiv
cmpsl
outsl
add
sti
repnz
jns
jp
cmp
inc
pop
stc
fwait
or
jl
add
movsb
loopne
jbe
movsb
push
cmp
dec
jne
ss
inc
ret
sub
mov
lret
jmp
pop
adc
decb
orl
cmp
push
push
or
push
xor
jns
loop
and
clc
in
adc
mov
add
add
dec
sbb
mov
push
and
xchg
xchg
jmp
mov
mov
xorb
icebp
inc
test
ret
imul
jg
icebp
inc
lods
divb
das
dec
push
mov
js
jo
ret
sbb
and
mov
stos
cmpsb
pop
pushf
out
jl
repnz
adc
clc
dec
cmp
mov
fwait
std
in
loope
pop
daa
addr16
fcomps
shr
outsb
aam
repz
adc
ja
push
sar
sbb
in
mov
pop
jge
fmul
xor
sub
stc
insl
aas
popa
rol
push
shrb
or
dec
mov
and
xchg
xchg
mov
or
test
dec
mov
out
xor
mov
stos
lods
jne
cmp
mov
cmp
or
lock
test
mov
in
pop
divl
ljmp
jmp
in
jbe
fsubs
jge
or
sub
jno
dec
and
aad
bound
jle
ljmp
cmp
sbb
fadd
nop
sbb
and
sti
fildl
loop
or
jmp
pop
pop
subb
xor
jge
jo
mov
lods
dec
dec
imul
repnz
mov
subb
test
jne
jge
out
add
ret
xchg
xchg
cmpsl
ffree
pop
sbb
lds
out
push
into
mov
mov
dec
aam
push
shr
xchg
mov
add
sub
repz
call
or
movsb
cmp
dec
cmpb
mov
add
stos
dec
cmpsl
cmp
push
mov
dec
movsb
out
mov
js
outsl
outsb
aad
or
int3
gs
and
out
mov
cmp
ret
or
sub
lock
out
xchg
fs
or
bound
add
addr16
xchg
dec
dec
popf
push
xchg
mov
pop
xor
in
xchg
popa
push
pop
jmp
dec
cmc
mov
int3
jno
fwait
xor
into
cli
mov
sahf
sbb
gs
pop
xchg
sbb
dec
cmp
or
xor
pop
inc
jne
push
mov
out
aam
data16
addr16
pop
push
push
addr16
pushf
and
mov
jo
xor
push
mov
cli
cmpsb
dec
fidivs
sub
popa
mov
jb
push
lods
push
add
ja
mov
mov
jg
int
mov
orl
push
in
pushw
rol
pusha
mov
mov
cmp
in
sbb
rclb
xchg
rcll
mov
test
sbb
test
push
xchg
ja
sahf
or
inc
add
lahf
and
pushf
lods
pop
pop
sub
out
mov
adc
mov
popl
adc
fistl
icebp
mov
sahf
jecxz
xchg
repnz
mov
dec
cwtl
dec
std
pop
ljmp
mov
and
fadds
cmp
dec
jo
icebp
rclb
out
and
movsb
xor
mov
jmp
xor
adcl
jae
insb
and
scas
es
dec
jne
scas
ret
jp
cmc
push
leave
out
add
loopne
jecxz
mov
or
pop
scas
cmpsb
xor
sub
repnz
cmp
xor
push
pop
int
jle
push
add
fsubl
add
not
adc
cmpsl
push
dec
aaa
bnd
and
dec
pop
sub
sub
or
clc
into
lods
lea
xchg
pushf
outsb
sbb
inc
adc
out
dec
jno
test
fidivl
dec
lods
xchg
cmp
pop
pop
scas
aam
fwait
xor
out
icebp
xchg
xchg
adc
cltd
pop
xor
adc
mov
adc
movsl
hlt
push
aaa
sbb
testl
or
in
dec
scas
xchg
popa
sbb
xchg
lods
mov
sub
push
pop
pop
add
sub
mov
rcrl
cltd
daa
out
cmp
aas
dec
lock
push
or
add
iret
xchg
push
sub
jne
push
rcll
pop
and
test
cs
fldt
lock
mov
andps
lea
stos
mov
jg
sub
fcompl
clc
outsb
lret
push
dec
pop
push
adc
pop
loop
xchg
dec
gs
dec
dec
aas
mov
xchg
into
and
cmp
inc
mov
pop
lea
rcrb
shlb
je
adc
dec
sub
in
and
stos
popa
in
stos
push
lahf
or
cmc
push
mov
daa
cmp
or
adc
dec
mov
punpckhdq
pop
ljmp
and
mov
fs
cld
les
mov
notl
push
aam
cli
sbb
movsb
shrb
fldz
les
in
and
or
in
mov
lods
clc
test
lret
lahf
cmp
loop
repnz
lds
out
shlb
ss
lods
mov
pop
cmp
inc
xor
and
inc
les
mov
popa
outsb
mov
cwtl
cmp
aaa
inc
je
xchg
fldl
int3
or
jb
push
rcl
ljmp
jnp
cli
loopne
fimull
push
das
sbb
pusha
sub
sti
in
sbb
jge
sbb
pushl
lcall
push
mov
push
and
ret
xchg
adc
add
dec
stos
xchg
lahf
cmp
mov
loopne
jno
sub
loop
cmp
scas
movsl
cmp
cmp
mov
mov
sub
cltd
testb
ret
mov
outsl
xlat
outsl
cmpsl
hlt
dec
lea
enter
push
pop
xlat
sahf
pop
mov
pop
push
fdivl
js
push
sub
sub
lcall
lock
or
mov
lea
repz
dec
and
ja
mov
fildl
in
inc
mov
test
loop
lock
inc
pop
mov
sub
call
loope
in
or
cli
jno
push
outsl
dec
cld
clc
cmovbe
mov
add
mov
or
outsl
fnstenv
pop
fdivp
faddl
jnp
aam
and
xchg
repz
adcl
mov
pop
bound
xchg
and
and
sub
push
pop
fidivrl
dec
push
shrl
dec
in
xchg
cmp
jge
cld
pop
xor
sbb
stc
and
adc
sbb
les
cmpsl
ss
pop
mov
or
ret
scas
nop
aas
out
cwtl
and
repz
sub
xlat
push
pusha
popf
imul
and
adc
iret
into
xor
or
lret
rcrl
push
jnp
xchg
xchg
fsubr
mov
dec
insb
push
imul
inc
stos
xchg
pop
loop
ret
sub
cmp
daa
ds
dec
loopne
je
jae
jnp
mov
mov
and
je
dec
iret
insb
fbstp
out
in
mov
and
cs
jbe
add
pusha
je
fnstsw
jmp
push
shlb
sbb
les
xchg
imul
fst
cmc
addr16
mov
hlt
cmpl
lret
fwait
mov
repz
xchg
sbb
and
push
mov
jge
ds
jno
or
mov
pop
ret
int
ljmp
cltd
mov
test
sahf
unpcklps
push
xor
mov
fildl
push
xor
xor
push
in
in
and
push
sbb
mov
test
into
into
test
mov
fwait
repnz
mov
ja
int3
push
xor
mov
sbb
arpl
andb
fidivrs
mov
jnp
mov
sbb
xchg
jne
push
mov
cmp
fcmovnb
fwait
jb
mov
cmovl
add
jge
fisttpl
inc
stos
sti
mov
xchg
dec
mov
xlat
dec
loope
pusha
orl
shll
scas
xchg
jns
out
sub
lcall
or
sub
inc
mov
xor
jb
pop
enter
int3
bound
mov
rcl
js
test
inc
fildl
jb
adc
fsubrs
stos
sbb
or
ds
push
shlb
pop
add
sti
jp
out
lea
push
xor
cmpsb
mov
xchg
jb
ror
mov
gs
jecxz
inc
or
out
enter
outsl
daa
into
das
pusha
cmp
jle
add
inc
arpl
push
aad
outsl
cmpsl
mov
and
add
fisubs
xchg
jns
stos
sahf
pop
aas
data16
add
cmovbe
sbb
fistl
mov
xor
dec
or
xchg
xor
out
xor
pop
lds
mov
fsubrs
imul
pop
and
xor
push
adc
pop
jno
icebp
subb
bound
mov
jmp
ja
adc
daa
add
leave
push
dec
push
ja
sbb
into
mov
insb
in
imulb
sbb
mov
sbb
mov
mov
ljmp
inc
in
pop
out
ret
add
mov
mov
mov
sub
add
inc
jecxz
test
test
movsl
sbb
dec
mov
adc
pushf
cmc
xorb
cmp
repz
mov
stc
out
adcl
shr
arpl
js
mov
loop
push
add
rolb
inc
les
pop
cmpsb
pop
push
mov
lods
pushf
push
push
fsubrl
mul
fstpt
inc
daa
lret
adc
jg
xchg
popf
pop
hlt
jno
cs
dec
lret
adc
pop
or
daa
int3
ret
mov
mov
scas
jl
cmpsb
cmpsb
push
dec
ja
xor
pop
mov
pop
nop
fsubs
jmp
push
pop
aaa
cltd
in
dec
out
or
outsl
sub
mov
pop
sahf
shl
pop
sub
mov
roll
lahf
mov
sub
xor
fiadds
aas
mov
rcl
sbb
sub
lods
dec
test
js
cld
sbb
ss
inc
xlat
add
or
rcrl
or
mov
dec
pop
hlt
ds
jno
shrl
out
lcall
lahf
xor
inc
out
inc
loopne
xchg
xlat
outsb
mov
lods
sbb
fwait
leave
sub
aad
aaa
and
cmp
cmc
aad
add
mov
leave
insb
inc
mov
cmpsl
sub
inc
subl
mov
mov
les
push
sti
mov
out
lret
push
xchg
add
outsl
push
cs
testl
cmp
mov
cmp
mov
sbb
call
out
push
sarb
inc
dec
lret
andb
xchg
mov
or
rolb
fs
outsb
stos
xchg
mov
jnp
bound
pop
lock
jg
stc
loopne
cmpb
sbb
sub
aaa
aas
push
sti
cld
loopne
adc
or
inc
cmc
pop
sarb
pop
jne
lret
les
fisttpll
push
mov
and
ds
dec
xrelease
sub
lods
cmpsl
jnp
mov
in
pop
lcall
sarb
cmp
pop
rol
xchg
ret
fwait
pop
pop
lock
push
add
cmpsb
imul
addr16
add
aaa
cmpsb
jno
jle
adc
popa
mov
iret
adc
rolb
in
cwtl
das
jae
jmp
inc
jmp
xchg
lcall
ret
repz
or
xsha1
cmpsb
mov
adc
filds
call
xor
bound
cmp
xor
cmp
and
shll
adc
sub
mov
cmpsl
lahf
mov
cmp
cwtl
adc
cmpsl
stos
xor
xor
mov
xchg
scas
or
add
cli
not
outsl
movsl
pop
sub
and
cmp
mov
popa
sub
aad
insl
sub
dec
fld
ret
outsb
mov
out
pop
adc
dec
pop
cmp
sub
jmp
and
stos
cmc
fsubr
insl
push
std
daa
outsl
int
adc
jg
fs
loopne
mov
jo
mov
cmp
inc
push
aad
dec
rolb
inc
rorb
icebp
pop
scas
lods
xor
jns
pop
jl
int3
clc
iret
sub
and
sti
cmc
ss
lock
out
pusha
rorb
adc
dec
mov
sbb
sub
les
add
and
xchg
inc
xor
push
divl
xchg
in
jmp
push
cmp
dec
mov
mov
shlb
call
fwait
js
adc
sbb
imul
nop
lret
aad
clc
sub
aas
xor
mov
push
in
or
mov
div
mov
cli
add
scas
mov
rclb
movsb
out
daa
andb
mov
push
dec
in
nop
or
and
inc
das
dec
pop
lock
sbb
push
jecxz
pop
add
leave
mov
lods
mov
in
inc
daa
mov
inc
push
call
mov
ffreep
loope
iret
ds
aaa
pop
gs
jle
pop
xor
mov
outsl
in
sbb
add
sbb
lods
jl
ds
push
enter
cwtl
jne
xchg
lret
pusha
sarl
xchg
enter
mov
jmp
mov
call
mov
jnp
ss
andb
test
mov
icebp
inc
in
test
aam
pop
jp
mov
add
ret
push
out
mov
loope
nop
wbinvd
ret
cli
aaa
jle
mov
insb
shll
and
or
int3
int
push
add
cld
cmp
scas
mov
jge
inc
inc
mov
adc
stc
aaa
xorb
push
movsb
xchg
cld
push
out
aad
pop
js
test
sbb
stos
imul
xlat
sbb
xchg
or
cltd
clc
push
aas
add
sub
sbbb
dec
fisttps
pop
jecxz
xor
fwait
mov
sbb
ret
xor
aas
int
test
pop
nop
scas
cmp
jl
jnp
lahf
out
rcll
jo
xchg
mov
xchg
call
sbb
mov
add
cwtl
stc
fnstenv
test
sub
pop
mov
pusha
aas
cwtl
sahf
cwtl
push
xchg
fdivr
xor
int
and
add
sub
out
pop
das
push
loop
adc
cmp
fs
pop
add
and
push
arpl
test
push
clc
aas
xor
mov
mov
aam
push
add
xor
cmpsb
outsb
cmp
mov
pop
pop
inc
outsl
inc
enter
xor
cld
pop
test
jmp
dec
xor
cwtl
adc
adc
outsb
dec
inc
pop
or
test
mov
sub
popf
pop
jne
cmp
xor
lret
cmp
adcl
inc
scas
push
hlt
in
stos
push
lret
gs
dec
jno
cmp
inc
outsb
inc
fidivrl
loop
loope
les
mov
push
repz
test
lea
loope
push
aaa
jbe
sarb
insb
sahf
mov
xchg
std
pop
push
idivl
cmpsb
mov
mov
add
xchg
add
and
add
cmp
xor
push
out
ss
xchg
mov
jns
sbb
push
popa
xchg
mov
pop
fwait
jg
inc
nop
push
mov
rcrl
xchg
insb
xlat
ja
shrb
pop
inc
insl
ds
sbb
lods
or
fildl
movsl
les
add
xchg
push
jl
addr16
mov
mov
and
int
fwait
jl
mov
fsubrs
sub
imul
ds
mov
popa
addr16
loopne
mov
test
scas
and
mov
lcall
inc
xchg
mov
lea
adc
mov
xchg
xchg
orl
xor
pusha
ss
inc
xchg
jae
imul
push
mov
dec
push
mov
fwait
sbb
imul
xchg
cmp
pop
jne
je
mov
lret
mov
dec
and
and
loope
clc
push
jl
sarb
pop
inc
sub
imul
jmp
addl
sti
jbe
dec
les
imul
jno
adc
fcomps
pop
je
xchg
outsb
rcr
rcr
movsl
stos
stos
pop
cwtl
shlb
das
popf
out
or
mov
or
int3
sarl
cmp
test
jbe
cli
or
or
mov
int3
in
inc
add
lret
and
cmp
mov
jbe
cmp
dec
pop
rclb
dec
jae
or
inc
add
sbb
lock
xchg
add
pop
insl
fildl
mov
mov
mov
fidivrs
xchg
xchg
imul
pushf
fs
ljmp
adc
pop
fcomps
add
add
cltd
xor
or
cmp
cmp
test
sbb
xchg
mov
pop
dec
sti
popa
jb
push
and
inc
in
nop
add
lretw
dec
sbb
and
fists
pop
or
mov
sti
lds
add
inc
frstor
cmp
pop
scas
inc
push
insb
dec
add
push
or
or
or
fwait
out
test
outsl
jecxz
xchg
in
mov
inc
clc
and
xor
mov
mov
cld
push
push
and
adc
jg
aaa
mov
mov
clc
pop
out
int
daa
cmpl
ret
xlat
js
std
dec
inc
leave
mov
push
lcall
not
adc
sub
lret
lds
mov
sarb
popf
cmpsl
xchg
sbbl
add
jmp
xor
xchg
xor
xor
int3
in
dec
neg
inc
cltd
js
mov
push
insb
inc
mov
sti
ja
inc
out
mov
mov
push
lea
aam
or
call
inc
push
ret
jge
nop
mov
stc
add
in
and
or
pop
pop
daa
rorl
hlt
inc
imul
push
push
push
xor
push
jne
out
and
je
pop
mov
adc
or
push
cwtl
ret
mov
jp
stc
push
dec
mov
orl
in
mov
cmpsl
adcl
sbb
xchg
push
sahf
jns
rcll
pop
jns
inc
enter
stos
pop
jge
and
fildl
and
pmaxsw
data16
sbb
sbb
mov
dec
xor
xor
mov
pop
cmpsb
scas
incl
pop
out
cwtl
or
push
test
mov
in
pop
mov
jecxz
pop
jle
sar
cmp
lods
pop
cmp
dec
xchg
dec
mov
jl
jmp
jb
aaa
shlb
test
sbb
inc
in
pop
mov
aaa
jmp
xor
lods
pusha
jl
sub
sbb
and
add
repnz
scas
mov
cmp
adc
jb
test
push
es
mov
jge
subl
and
inc
jns
jno
sbb
aaa
ficompl
fidivrl
push
imul
dec
push
rcl
pop
fisttps
push
and
adc
sbbl
push
andl
roll
popa
mov
sub
outsl
mov
mov
ret
push
xchg
add
fs
jne
cmp
inc
hlt
scas
cmp
dec
jae
mov
es
ret
popa
mov
sbb
call
xchg
inc
cmp
mov
rcll
inc
inc
push
ljmp
dec
aad
or
add
or
outsl
push
xchg
or
dec
pushf
dec
out
aas
stc
xchg
pushf
mov
jle
paddusw
jne
mov
stos
mov
mov
stc
test
jge
mov
pushf
push
fmulp
dec
testl
and
xchg
pop
cmpsb
fwait
mov
ljmp
push
fucomi
add
scas
sbb
cmp
push
cmp
fistps
jmp
cmp
test
or
xor
jl
hlt
mov
jg
and
mov
orb
loope
cmp
lcall
dec
gs
push
mov
mov
xorb
sub
push
sbb
inc
mov
mov
out
cmc
fldt
cmpl
mov
mov
inc
sbb
add
jns
mov
push
arpl
push
sbb
sub
dec
dec
in
mov
cmpsb
inc
data16
pop
cmp
jne
jne
sbb
sarb
shl
mov
jne
outsb
sbb
pop
cwtl
and
pop
pop
sbb
mov
sbb
daa
imul
inc
jbe
out
in
pop
xor
adc
jbe
pop
cmp
jecxz
data16
sub
das
loop
das
inc
xor
cltd
pop
cmpsl
jne
or
push
push
sub
mov
test
ljmp
add
dec
cwtl
lods
or
cld
insl
aam
push
dec
icebp
sub
addb
jl
stos
add
jae
dec
xchg
add
insl
stos
dec
addb
shll
movsb
dec
in
pop
enter
fstpt
movsl
xor
repnz
adc
js
lea
into
jp
vcmpps
sahf
xor
push
lahf
xor
push
dec
in
es
into
jns
push
dec
xchg
mov
popw
aam
push
mov
imul
js
xchg
aad
pop
lock
jg
addl
ret
dec
fnstsw
or
aas
fstps
and
jp
mov
mov
push
fsubrl
jns
popa
sbb
sbb
mov
jb
out
stos
pop
mov
dec
add
in
cmp
and
outsb
in
dec
sti
mov
sarb
push
outsl
jge
xchg
aad
mov
adcb
fcomip
andb
adc
lds
push
jne
insb
repz
or
mov
das
scas
pop
and
cwtl
test
adc
xor
fsubp
xor
call
lea
push
cmp
xchg
stos
add
and
jecxz
movsb
mov
out
and
cltd
and
and
loop
cltd
pop
repnz
in
pop
xchg
popl
inc
cld
icebp
sti
loopne
mov
adc
ljmp
mov
lods
xor
fsubr
mov
cld
mov
test
lcall
out
inc
mov
dec
mov
cld
add
sbb
sbb
xchg
xchg
sbb
data16
xor
xchg
nop
jge
lret
arpl
movsb
jecxz
dec
loope
sbb
mov
aas
cwtl
add
mov
lea
mov
daa
mov
lea
xchg
cmpsb
fistl
inc
and
loopne
shlb
stc
push
xor
sub
cmp
and
mov
imulb
inc
enter
xchg
sub
xchg
and
sbb
xchg
fs
fnstsw
dec
xor
rcrb
and
inc
sub
and
jb
lret
arpl
das
push
mov
imul
lret
xor
and
cmp
or
ds
mov
loope
and
adc
sub
inc
pop
shll
cmp
loope
mov
cmp
lahf
mov
jne
pop
fildl
add
sbb
adc
jg
dec
cmovns
jle
mov
test
jbe
imul
pop
mov
aas
nop
es
mov
scas
icebp
jnp
cmp
decl
xchg
or
and
push
and
push
push
pop
push
sbb
or
sub
mov
outsl
jg
mov
out
mov
or
or
mov
inc
pop
sub
gs
movb
add
mov
sti
in
xchg
mov
jl
mov
sbb
or
xor
sub
ret
jge
dec
insl
pop
adc
add
dec
jl
pop
daa
lcall
call
arpl
jl
xor
dec
gs
lock
into
cmp
sub
inc
xchg
push
inc
add
fwait
int3
xchg
and
leave
adc
filds
in
pushf
or
pop
popf
pop
bound
sbb
jbe
dec
gs
sub
add
xchg
loop
lds
loope
or
jp
push
call
aad
adc
xchg
aad
shr
xor
add
aas
add
jns
push
cli
iret
loopne
mov
mov
cmp
in
ret
jne
or
fldenv
cmp
ret
aad
cmp
lds
mov
sbb
enter
inc
cld
mov
push
inc
jno
notl
cltd
pop
out
push
in
inc
jo
cs
daa
cmp
inc
roll
adc
inc
icebp
mov
sbb
push
cmpsl
inc
repnz
inc
sub
leave
addb
cmp
daa
cmp
subb
and
sbb
add
fst
push
dec
sub
movsl
cmp
push
fwait
repnz
mov
iret
ds
iret
pop
fbstp
xchg
xorl
mov
shlb
mov
pop
xor
mov
jecxz
mov
mov
addr16
push
sti
loop
push
inc
sbb
or
repnz
in
out
movaps
fstl
addl
iret
in
dec
push
cmp
mov
fstps
lcall
dec
mov
xchg
lret
loop
pop
xchg
cmpsb
mov
dec
push
jecxz
inc
outsb
lds
and
dec
jno
and
vunpckhps
enter
push
inc
mov
pop
ret
stos
aaa
jae
add
xchg
pop
outsl
insb
mov
addl
push
adc
dec
sarl
popf
dec
push
out
push
test
test
sub
std
test
and
mov
rdtsc
mov
and
and
icebp
push
int3
repz
dec
jbe
loope
loop
jmp
jmp
and
or
js
in
nop
cmp
and
or
test
inc
lock
pop
stos
je
test
jnp
test
stc
or
icebp
xchg
mov
mov
mov
fmull
test
mov
cwtl
mov
cltd
fdivl
gs
int3
xchg
push
push
ja
ds
jge
ljmp
repnz
add
xor
shlb
or
fcoms
in
lret
into
xlat
jb
jl
pop
jp
fidivrl
into
mov
sarl
out
cmp
mov
arpl
xchg
xchg
push
mov
sbb
ret
cmp
icebp
cmp
push
sahf
sub
lds
scas
xor
rep
scas
in
testl
dec
lret
xor
mov
mov
push
cmp
iret
mov
cmpsb
in
bound
insl
mov
or
repnz
shll
lods
sbb
jge
sub
sbbb
jp
dec
aam
mov
inc
push
fnop
and
out
and
test
push
mov
cmpsb
sbb
jge
push
xlat
xor
or
pop
push
dec
jmp
movsl
sub
mov
cmp
imul
jmp
mov
jnp
pop
cld
out
inc
ret
out
repz
data16
in
lods
cwtl
mov
in
jg
jns
mov
daa
jns
ss
dec
imul
out
lahf
fsubrs
lods
pop
clc
movsb
scas
shlb
inc
mov
sahf
leave
imulb
aad
push
xor
movsb
mov
cwtl
aaa
lods
les
push
aad
std
call
dec
cwtl
and
lds
dec
mov
repz
rcrb
sbb
ret
in
incl
sub
lss
xchg
ret
cmpsb
sbb
sarb
test
stos
inc
push
cltd
lea
sbb
jmp
rcrb
jb
sub
mov
daa
hlt
lret
fdivs
mov
fidivl
fisubrs
mov
pop
vmovaps
int
pop
dec
sbb
dec
fwait
in
pop
loope
pushf
lea
test
dec
pop
push
inc
mov
pop
add
imul
fistpll
repnz
xchg
insl
inc
fldcw
aaa
mov
rcrb
data16
jg
out
xor
out
jp
mov
cltd
movsl
adc
mov
mov
mov
arpl
mov
mov
lds
cmp
xchg
add
push
sub
adc
iret
lret
pop
lock
adc
jp
sub
sbb
jle
lret
sub
pop
std
cmp
cmp
xorb
jl
cmp
inc
xor
mov
loope
popf
jb
sbb
jbe,pt
and
in
xchg
movsl
pop
mov
js
stos
sbb
scas
lods
cwtl
out
fcoms
js
insb
mov
sbb
adcb
aas
and
cltd
mov
in
scas
add
ljmp
mov
fistpl
mov
add
aad
mov
out
xchg
xchg
ret
jecxz
out
js
enter
vfrczpd
pop
mov
cmpxchg
xor
mov
jne
jg
nop
movsl
daa
lret
imul
movsb
xchg
inc
push
jnp
ret
test
pop
cwtl
movsb
mov
rcll
mov
inc
xchg
push
and
orl
ljmp
jg
fistpll
sub
fisubrs
mov
adcl
and
sbb
insb
rcrl
xor
filds
popf
jecxz
int3
scas
das
xchg
bound
mov
jno
jns
xchg
aas
aaa
mov
dec
in
cmp
mov
mov
cmc
pop
cmp
jecxz
fwait
pop
cmp
and
lock
sub
subb
xchg
les
lods
cmpsb
or
mov
and
xor
dec
sub
adc
fistpll
inc
ficompl
leave
xchg
sbb
out
mov
cmp
insb
push
call
push
bound
push
jno
mov
add
hlt
cltd
sub
add
xor
sti
dec
pop
sub
lock
inc
adc
sub
push
add
jne
movsb
push
mov
fsub
rorl
jbe
int3
aas
pop
js
cmc
jmp
jne
and
inc
repz
xor
bound
cmp
test
hlt
adc
inc
in
mov
sbb
xor
mov
fidivl
stos
and
popf
cs
adc
testb
sub
cmpsl
in
push
push
dec
inc
xor
test
leave
lea
pop
mov
pop
xchg
rorb
xor
lock
shr
pop
sti
jns
cld
and
xorb
push
push
sahf
push
mov
stc
imul
and
in
pop
xor
jae
mov
pop
and
inc
mov
popa
leave
sti
popf
cwtl
andb
cs
and
cli
mov
popa
xor
add
mov
jg
into
lcall
orb
dec
popa
pusha
sub
lret
or
or
lods
clc
fwait
pop
adc
mov
stos
ja
cmp
jb
add
xor
adc
jecxz
adc
pop
pushf
sbb
push
sbb
sub
arpl
out
pop
js
iret
xchg
or
xchg
mov
out
insl
cmc
out
mov
insl
shlb
or
push
cmpsl
bound
lds
or
fs
xchg
rcrl
shll
jp
in
push
or
hlt
dec
outsl
pop
push
movsb
mov
mov
adc
push
pop
xchg
cmp
std
sbb
sbb
sbb
lcall
outsl
movsb
stc
clc
mov
ja
insl
insb
imul
in
mov
iret
xor
int
jecxz
push
pop
xor
aaa
mov
popf
jbe
les
sbb
mov
jp
adc
outsl
mov
jno
and
shlb
lahf
and
fnsave
call
jp
test
addr16
lahf
pop
dec
jle
in
cli
jne
mov
hlt
or
icebp
jge
insl
add
sub
in
push
rolb
push
mov
jo
cwtl
inc
push
scas
mov
lods
xor
jp
les
imul
out
dec
pop
or
mov
out
stc
inc
mov
or
xchg
das
call
and
or
popa
pushf
inc
and
push
mov
iret
cmpb
xchg
fcoml
mov
mov
jg
pusha
insl
cmpsl
push
or
test
data16
decb
hlt
pusha
adcl
in
adc
stos
insl
popf
jbe
imul
adc
pop
mov
popf
inc
push
mov
pop
out
inc
je
mov
ret
ljmp
push
bound
insb
jnp
and
bound
mov
xor
add
add
andl
inc
les
in
lods
add
shlb
data16
iret
mov
shrl
jl
mov
pop
aam
and
fimuls
jp
stc
fidivrl
bound
aam
ja
add
cmp
inc
dec
rorb
add
add
out
outsb
incb
add
push
sub
leave
jle
lret
gs
mov
aad
pop
les
xor
pop
mov
call
fisubl
outsl
outsl
dec
aad
ja
pop
out
int
bound
js
stos
ret
ljmp
adc
mov
jmp
xchg
ss
xchg
ljmp
xchg
xchg
mov
add
add
mov
fistpll
mov
enter
ret
mov
cmc
push
add
mov
sub
pop
push
jmp
lret
or
fcmovb
jb
xchg
pushf
mov
mov
cmpsb
ret
jns
frstor
add
les
sbb
and
mov
sub
out
xchg
aad
mov
insb
jmp
dec
pop
pop
cltd
xor
jns
jns
xor
lods
cmp
pop
add
xlat
xchg
xchg
mov
mov
mov
pop
enter
or
stos
xor
popa
pop
ret
push
dec
fidivrl
mov
je
cmpsl
xchg
mov
jmp
and
or
xchg
lret
stc
add
subl
sbb
mov
outsl
or
xchg
mov
test
push
cli
pop
pmuludq
jecxz
mov
xor
mov
push
mov
insl
cmpsb
scas
mov
xor
pop
sbb
mov
jbe
arpl
repnz
fmuls
nop
inc
fdivrs
jle
adc
mov
clc
pop
hlt
or
dec
jae
cmp
inc
mov
es
mov
lods
or
pop
out
inc
xchg
xchg
push
adc
mov
into
push
std
iret
sub
in
xor
sbb
icebp
cli
in
inc
and
and
pop
adc
or
and
lds
jne
sub
inc
lds
lock
push
sysexit
inc
jp
ja
insl
push
mov
call
test
and
xchg
add
pushf
or
das
sbb
maskmovq
testl
jae
mov
cli
pop
call
in
jle
push
loop
mov
jg
and
pop
inc
cmp
mulb
test
arpl
inc
sbbb
lock
and
jmp
dec
mov
inc
mov
lret
ret
les
cltd
xor
xor
mov
pop
pusha
xor
xor
out
and
jne
xchg
sahf
fstl
jbe
aaa
cmp
mov
gs
add
loop
pop
xchg
cs
inc
sbb
push
orb
negb
rcrl
cmp
fcoms
pop
lods
in
push
or
jo
repnz
sbb
jns
imul
ljmp
mov
or
cmp
std
test
xor
inc
arpl
ficompl
fcoml
jl
pushf
jmp
shll
pop
xchg
sbb
cli
sbb
scas
mov
jge
lcall
adc
adc
push
xchg
jg
outsl
test
mov
pop
aam
xor
pushf
xorb
ja
xor
push
in
push
outsb
xchg
mov
daa
addr16
outsb
or
scas
stos
sbb
loopne
fstpl
xchg
jb
std
dec
divb
jge
sub
negl
cmpsl
leave
dec
int3
dec
cmp
cmp
rcll
nop
aaa
loopne
push
mov
xor
mov
xchg
lahf
cmp
repnz
js
jbe
call
scas
sbb
inc
add
rolb
push
jo
pop
sub
xchg
es
aad
clc
dec
mov
mov
jp
push
mov
xor
call
loop
fsubrs
mov
loope
fnstenv
push
outsb
mov
add
dec
pop
dec
movsb
push
cmp
xor
cltd
mov
add
mov
pop
adc
lods
mov
ret
fiadds
inc
push
cmp
xlat
jae
jp
lahf
mov
pop
push
stos
mov
lock
pop
je
or
daa
stc
cmc
mov
ret
sub
jle,pn
pop
fdivrs
xchg
add
sbb
lahf
push
sub
jmp
sbb
cmp
mov
call
test
scas
das
sahf
loope
popf
add
aam
pop
dec
cmpsb
jmp
les
jb
negb
xchg
xorb
adc
sub
sarb
push
or
lock
mov
sarl
in
bound
or
sub
pop
clc
pop
xchg
std
pop
movsb
cmpsl
and
mov
inc
bound
pop
xchg
jecxz
negl
or
lret
or
popa
jnp
push
stos
jmpw
mov
sub
pop
cmp
gs
test
in
xlat
add
cld
adc
or
dec
mov
cmp
repz
into
add
notl
sub
and
fcmovnu
insb
xor
xchg
cmp
cmp
xchg
mov
mov
ljmp
add
mov
push
lods
cld
pop
aaa
sbb
femms
rolb
dec
clc
incb
aas
or
inc
cltd
movsl
mov
mov
sbb
add
repz
ja
and
es
jno,pt
les
pusha
pushf
and
clc
addr16
adc
pop
xchg
dec
bound
sbb
mov
mov
add
jns
xorl
lret
jl
and
in
mov
dec
addl
cmp
aas
gs
sbb
jne
int3
cmp
arpl
push
sbb
mov
cmp
or
es
mov
imul
and
cld
mov
xor
pop
lret
inc
nop
loopne
push
cmp
xlat
jne
lods
insl
lea
jno
into
lcall
out
into
imul
ljmp
outsl
sub
sbb
mov
rorb
and
mov
shlb
out
fdivs
xchg
imul
adc
xchg
pop
pop
ret
mov
orl
insb
aas
inc
out
sub
ds
sub
stos
mov
push
xor
ljmp
ret
movsl
lret
add
test
mov
xor
xor
sub
scas
in
adc
fbstp
mov
xchg
repnz
jmp
mov
int3
fwait
ss
sub
jg
test
dec
push
jo
adc
adc
push
sub
jns
addr16
outsl
xchg
clc
out
imul
add
push
inc
mov
ja
aas
lock
aam
adc
inc
aad
cwtl
sbb
add
and
inc
add
cmp
sbb
aas
inc
aaa
push
int3
int
out
stc
in
sub
cmpsb
pushf
nop
cli
insl
inc
ret
xor
in
popf
sub
mov
pop
cltd
dec
pop
outsb
sub
orb
out
cmp
pop
or
sahf
ds
sti
test
dec
das
in
dec
xchg
jmp
add
xchg
icebp
xchg
ficompl
cltd
aas
mov
shr
lahf
pop
into
push
cmc
setae
mov
std
out
xchg
ja
add
mov
into
mov
jge
adc
push
daa
pop
mov
mov
test
sub
data16
loope
adc
push
ret
subl
enter
mov
xchg
cli
test
out
insb
push
jne
xchg
dec
testl
adc
add
inc
sbb
cmp
mov
mov
shlb
test
ljmp
arpl
stos
dec
jns
outsb
push
out
or
pop
daa
ficoms
sub
clc
les
js
cld
les
sahf
jae
or
lret
iret
mov
sbb
repz
sbb
pop
adc
leave
add
jl
or
mov
and
jecxz
adc
iret
lds
repnz
pop
push
jnp
sub
lea
repz
inc
mov
fucompp
cmp
mov
pop
push
dec
push
repnz
jb
loop
xchg
xchg
mov
sti
add
cmp
jmp
int
shrb
outsl
ss
aad
in
pop
lods
or
cmp
mov
aaa
test
xchg
xor
or
mov
test
mov
shrb
xchg
jb
cltd
pop
jno
sbb
inc
add
and
jle
hlt
inc
and
lret
dec
fdivrp
pop
and
ret
shll
jne
movsb
aaa
jns
xchg
mov
insb
ret
mov
pop
cmp
ljmp
pusha
cltd
sbbl
mov
aad
dec
xlat
jge
or
fadds
cwtl
popf
ss
repz
enter
pop
dec
and
push
jmp
adc
mov
pop
test
js
popf
mov
adc
cmp
jge
arpl
pop
mov
repz
add
pusha
jnp
mov
sub
xchg
jb
cltd
fwait
xchg
xchg
sub
push
loopne
arpl
fidivrl
pop
loop
popl
lds
sub
es
out
fwait
inc
jb
push
or
mov
mov
push
ss
push
fisttpll
les
cmp
hlt
pop
push
jne
movsb
jmp
stos
cld
mov
adc
inc
nop
insb
inc
or
mov
pop
dec
fistpl
push
mov
out
out
cmp
jmp
cs
or
pop
std
iret
jmp
cmc
or
cmp
icebp
cltd
and
sbb
gs
pop
sub
int3
sub
jge
pop
ror
loope
mov
jg
ljmp
xchg
xchg
push
jmp
add
ficoml
mov
sbb
adc
aam
or
xor
mov
push
and
iret
aaa
xorb
ja
inc
divb
jp
imul
add
adc
jno
mov
jnp
xchg
movb
xchg
iret
mov
iret
pop
and
xor
arpl
mov
pop
jae
cmp
sub
jne
jno
adc
daa
arpl
mov
xchg
pushf
pop
shl
shl
in
mov
push
dec
sbb
adc
in
xor
sub
dec
pop
sahf
lock
stc
insl
in
iret
cmp
sbb
dec
push
or
jbe
inc
test
mov
cmp
mov
push
mov
sub
cmpsb
movsb
repz
iret
adc
popa
rcrb
cmp
push
es
cmpsb
shrb
jecxz
dec
mov
pop
mov
mov
mov
cwtl
stos
xchg
fdivl
dec
mov
subl
xchg
les
pop
mov
dec
dec
out
sbb
add
les
in
xor
loope
iret
aaa
mov
inc
shll
in
sub
mov
xchg
mov
sub
dec
popa
dec
jo
dec
outsl
jne
aam
loop
call
push
pop
sub
sub
push
out
gs
lret
inc
fisttpll
cmp
xchg
xor
add
test
jae
add
ret
jl
imul
mov
add
add
rcrb
xchg
pop
sahf
fists
test
cmpxchg
in
les
iret
stc
fistpll
dec
outsl
mov
popf
insl
imul
jmp
pop
add
out
push
icebp
in
outsb
push
out
xor
cmp
xchg
les
loop
xchg
rorb
loope
outsb
sahf
lahf
adc
stos
popa
xchg
stos
mov
dec
push
test
jnp
lock
imul
bound
stos
cmp
test
push
out
mov
inc
sbb
pop
jmp
pop
icebp
pop
mov
fisttpl
or
mov
sahf
or
ja
enter
cmc
mov
add
mov
dec
sbb
ljmp
imul
scas
test
xbegin
dec
imul
dec
mov
mov
pusha
mov
ret
mov
and
fstl
cmp
adc
int
push
push
add
mov
aam
mov
and
add
push
add
icebp
add
xor
dec
push
cwtl
ss
lock
mov
loop
pop
rclb
cli
or
inc
loopne
mov
push
or
push
xor
mov
xor
mov
add
loop
pop
fidivrs
lret
imul
dec
fcmovnb
add
adc
mov
dec
stos
xchg
jne
nop
dec
sbb
cmp
inc
scas
jge
es
daa
cld
cli
int
rolb
outsb
mov
iret
push
dec
dec
scas
lret
push
inc
push
fildl
mov
pop
lret
adc
insl
mov
sbb
fimull
stos
and
xor
test
daa
std
jle
imul
andl
mov
cmpsb
jno
insb
stos
cmpb
xchg
mov
mov
lahf
fmuls
lock
jle
jmp
mov
arpl
ljmp
mov
pop
cmc
inc
sub
pushf
jb
into
mov
jo
and
out
loop
outsl
sbb
mov
pop
cwtl
call
test
ss
test
mov
fnsave
aad
mov
nop
mov
test
push
sbb
int3
and
and
icebp
pop
push
int3
and
mov
repnz
and
xchg
sbb
push
test
outsl
push
pop
mov
lcall
pop
mov
or
sti
mov
scas
inc
mov
jnp
clc
lds
push
mov
ret
jge
and
push
add
jne
cwtl
out
int
mov
imul
test
subb
fisttpll
xchg
mov
or
push
mov
rorb
in
into
or
call
or
std
scas
loop
and
insb
push
mov
aam
dec
inc
cmp
adc
dec
adc
sbb
pop
pop
mov
call
mov
xor
ds
lods
mov
aas
adc
mov
dec
inc
out
iret
pop
mov
outsb
pop
gs
xchg
pop
jle
ds
es
mov
test
add
mov
push
cmc
lock
xor
sub
subl
mov
iret
out
cli
stc
popf
xchg
pop
test
inc
bound
imul
repnz
mov
hlt
ret
mov
fnstsw
add
or
addr16
push
test
add
push
shlb
scas
mov
mov
mov
adc
shl
loop
fs
xchg
cltd
or
jnp
sti
and
push
push
dec
adc
arpl
cmp
push
imull
lea
loope
jnp
popf
lret
in
inc
push
mov
sub
mov
scas
shrb
test
lret
fcmove
leave
inc
sti
out
bound
leave
mov
jecxz
mov
mov
jae
mov
push
mov
es
mov
jns
add
sti
jecxz
sbb
push
inc
mov
clc
push
aaa
dec
sbb
and
jge
imul
pop
adc
sahf
gs
in
add
adc
sbb
addr16
fwait
jge
add
mov
pop
sub
loop
xor
out
push
dec
add
push
jae
pop
push
cmp
divb
sub
insb
test
es
or
nop
xchg
lret
jb
jle
sub
jg
pushf
rcl
lret
pop
mov
jmp
jb
faddl
mov
in
aam
xchg
pop
test
jo
sub
xlat
sbb
sbb
push
bound
shrl
fwait
dec
lret
mov
add
ret
jbe
xchg
pop
and
das
xchg
push
addb
or
negb
push
cmp
test
and
mov
fimull
mov
cmc
fnstsw
shll
jp
bound
stos
mov
mov
add
mov
or
push
lret
mov
cli
pusha
sub
aam
pop
jns
jp
jp
jmp
push
js
jle
rcl
adc
or
pop
mov
xchg
push
pop
jle
push
cmovle
xor
mov
cmp
or
scas
xor
ror
mov
fildl
mov
in
repnz
stc
push
cmpsl
insb
mov
das
dec
aad
add
dec
std
xor
pop
es
xor
jge
mov
xor
dec
popf
cwtl
out
mov
jno
sti
ret
xlat
mov
imul
js
fcoms
aam
pushf
add
out
movl
mov
dec
add
sub
mov
adc
jp
bound
cltd
gs
jbe
sbb
out
inc
jecxz
iret
mov
mov
js
sbb
mov
in
pop
fs
mov
lea
xchg
icebp
imul
inc
sub
jae
cmp
pop
je
inc
cwtl
ss
xor
mov
and
or
mov
incb
dec
xchg
fisttpll
add
inc
lock
jg
sub
test
in
mov
xorl
jno
pop
adc
and
bound
cwtl
jnp
sbb
mov
mov
mov
paddd
repnz
movsl
sbb
rol
std
pop
cli
mov
fistps
sbb
cltd
test
mov
adc
xorps
pop
nopl
repz
pop
xchg
pushf
and
lret
mov
adc
test
xor
inc
stos
sbb
mov
xchg
mov
enter
mov
scas
add
cmp
adc
xchg
jecxz
pop
add
cmp
jl
add
jnp
adcl
imul
inc
jle
ds
lock
inc
cli
and
or
aaa
add
sub
ljmp
and
popf
sbb
andl
or
ja
insb
testb
cmpsl
ret
lret
mov
enter
push
dec
test
inc
mov
sbb
mov
imul
stos
and
sbb
lock
jnp
loopne
xchg
dec
into
mov
add
pop
mov
cmpsl
mov
push
sub
or
notl
push
cli
rcrb
push
mov
inc
inc
insl
jg
je
in
test
jecxz
mov
nop
adc
adc
xchg
xchg
gs
jo
jns
mov
jne
stos
add
movsb
pop
mov
loopne
sbb
add
mov
imul
in
mov
mov
mov
push
mov
inc
stos
jecxz
mov
mov
mov
sbb
cmp
mov
in
sub
ds
sub
sub
decl
dec
pushf
mov
cli
in
xchg
add
push
movsl
mov
mov
jnp
xor
gs
cmpsl
push
int3
xchg
cmp
cltd
cmovno
push
lods
xor
or
pusha
in
popf
fiadds
int3
cmp
sub
xchg
int3
sub
push
into
fistpll
dec
sub
hlt
imul
addr16
cmp
ljmp
movsb
ja
iret
notl
in
hlt
dec
fst
lock
jmp
push
adcl
popf
adc
pop
jmp
mov
fists
jae
mov
es
ljmp
cli
movsb
dec
jge
fistl
mov
dec
or
popf
ds
sti
xchg
repz
fs
int
stc
jmp
xchg
sub
mov
xchg
cmp
test
mov
fwait
loope
test
jnp
xor
dec
repz
cmp
push
in
mov
mov
popa
or
addl
leave
ret
mov
and
mov
adc
or
and
inc
mov
or
call
fildll
enter
faddp
mov
fildll
pop
and
testl
ficoml
aad
fisttpl
push
sbb
or
adc
push
cmp
mov
xchg
negb
inc
lock
lret
sub
fwait
loope
fiaddl
xchg
les
repnz
shrb
sbb
mov
sub
add
stos
lahf
adc
or
xchg
push
pop
outsl
data16
xchg
cmp
mov
xor
sbb
sbb
dec
dec
sbb
jb
imul
adc
mov
xchg
push
dec
fmuls
cmc
mov
das
mov
or
jmp
or
ja
sbb
mov
lahf
insl
push
into
push
aam
rorb
lods
pop
push
xor
inc
popa
xor
inc
loopne
out
pusha
das
jb
cltd
adc
sbb
adc
fs
in
sub
inc
mov
aas
push
inc
int
pushf
lods
adc
inc
cmpsb
sbb
hlt
pop
out
and
inc
jae
xor
mov
xchg
rorl
mov
jmp
jp
pop
sbb
pushf
push
cmp
push
es
in
fistpll
inc
xchg
stos
lock
lret
pushf
ret
lahf
cmp
mov
mov
sti
or
push
pop
mov
push
popf
out
rolb
pop
and
sbb
mov
or
scas
rolb
dec
push
ja
jl
hlt
fistps
pop
mov
dec
pop
mov
xchg
fucomp
push
enter
imul
scas
mov
cmpl
pop
adc
add
pop
lret
mov
inc
call
shrl
cmp
mov
clc
adc
call
loop
xchg
lods
in
idiv
cmp
inc
mov
push
or
dec
cmp
leave
xchg
mov
hlt
mov
in
es
adc
mov
mov
fsubp
add
movsl
jae
into
jo
ss
sbb
pop
lcall
sbb
pop
jmp
and
cmp
divb
lea
icebp
outsb
pop
sbb
stos
push
push
push
dec
in
jnp
lods
faddp
mov
jmp
iret
mov
xor
mov
mov
sahf
nop
xchg
cld
push
mov
sub
mov
mov
popf
shlb
or
popf
pop
jb
nop
in
pop
mov
mov
add
xor
or
dec
ficomps
lds
xor
mov
jnp
mov
push
sbb
jg
push
mov
and
test
cmp
test
mov
jg
mov
xchg
mov
jg
inc
pop
into
insb
pop
push
xchg
jae
ljmp
lret
cmp
fwait
cmp
cmp
or
add
push
in
rol
clc
sub
lods
call
cmp
mov
insl
mov
xlat
push
push
xchg
xor
pusha
jle
jo
xor
aas
insl
add
popa
cld
and
test
adc
or
test
pop
insb
adc
xchg
xlat
adc
adc
pushl
das
xor
push
sbb
push
cmove
std
mov
clc
idivl
je
imull
loop
loopne
adc
push
mov
mov
das
pop
xor
or
icebp
sub
fisubl
cmp
sbb
ja
mov
cld
loopne
jbe
adc
push
xor
xchg
fyl2xp1
rcrb
xchg
pop
std
pop
jns
das
lahf
pop
xor
or
jnp
in
mov
push
fcmovnbe
sbb
das
push
sbb
dec
sub
and
and
into
sub
sti
cmp
xchg
and
mov
xlat
hlt
adcl
or
daa
or
push
decl
leave
mov
cmp
movsb
mov
inc
sbb
mov
mov
jne
sbb
and
fstl
flds
fimuls
sbb
pusha
xor
outsl
lock
xchg
shl
lret
mov
in
jge
addb
jg
roll
js
jb
xchg
es
fld
mov
push
sub
lret
lock
insl
cltd
fs
notl
jle
inc
xor
sbb
inc
or
and
mov
je
mov
xchg
or
testl
stc
add
jmp
mov
sub
dec
lret
popa
pushf
dec
inc
test
mov
clc
inc
and
mov
das
and
cli
testl
xor
mov
jecxz
push
int3
fcmovbe
es
sbb
mov
sti
aas
push
push
fadds
mov
repnz
add
xlat
add
add
jg
loopne
outsb
inc
ss
push
punpcklbw
push
cwtl
xchg
sub
pop
adc
cmp
out
push
sub
rclb
fisubl
and
movsb
lods
inc
mov
xchg
out
mov
cltd
xchg
loopne
test
add
hlt
pop
das
inc
in
popl
sbb
repnz
mov
jmp
es
dec
mov
or
into
fisttps
adc
cli
das
aas
xchg
in
out
in
sub
inc
mov
sub
dec
xor
std
mov
test
mov
mov
mov
nop
test
shl
push
insl
lahf
pop
sahf
out
das
dec
imul
pop
jno
mov
into
inc
push
jns
xchg
out
cwtl
jle
sbb
dec
lods
mov
fcmovne
movsl
pop
pop
add
cmp
cmc
or
in
sbb
bound
loope
cmpsb
mov
imul
lea
std
jmp
or
stos
or
dec
jo
push
dec
mov
loope
out
cmc
arpl
cmp
adc
fcomps
mov
aam
lret
enter
adc
in
lret
in
fstpl
push
and
sub
pop
cmpsl
push
jl
dec
mov
cmp
pop
lds
mov
and
js
idivl
out
xor
mov
fildl
dec
jecxz
fnsave
test
out
aad
fldcw
cmpsb
inc
dec
or
mov
adc
fdivl
and
sbb
xchg
popf
pop
add
cmpsb
test
jnp
and
hlt
add
repnz
iret
push
imul
xor
sti
pop
js
loop
mov
les
stos
fnstsw
add
cltd
pop
daa
and
cwtl
in
andb
push
repnz
jecxz
dec
adc
rcl
push
jbe
cmp
jns
out
mov
mov
add
mov
ljmp
nop
rcr
and
mov
ret
call
in
dec
xchg
ficomps
stos
ljmp
push
cmpb
cmp
stos
xchg
lock
sti
pop
and
and
cld
mov
sbb
or
loopne
dec
dec
mov
repnz
je
mov
jno
lret
sub
pop
pop
hlt
lods
sub
pop
or
and
insl
out
sbb
sti
mov
popf
and
or
mov
dec
outsb
or
mov
call
sar
mov
cwtl
ss
adc
movsb
popa
pcmpeqd
mov
insl
rcrb
stc
lods
hlt
push
lahf
stos
and
or
outsb
inc
xchg
push
inc
sbb
push
repnz
fiaddl
inc
shll
sub
push
mov
inc
rcr
jmp
cmc
imul
pop
mov
ja
nop
xchg
bound
add
shrb
and
je
inc
jns
test
cmp
addl
cmp
je
jnp
imul
idiv
inc
repnz
jle
dec
add
pop
push
mov
cmpb
mov
sbb
mov
jmp
cmpsb
ljmp
dec
sbb
jl
adc
jb
pop
fisttps
pop
mov
inc
shlb
cld
sub
add
inc
addr16
push
sbb
lock
cmp
adc
cmp
shl
mov
cs
push
lds
mov
cmp
hlt
sub
aaa
push
mov
sub
hlt
test
inc
les
rolb
hlt
or
sub
adc
bound
cmp
nop
xor
das
dec
dec
jbe
cmp
pusha
pop
cli
fadd
mov
pushaw
pop
out
xchg
es
xchg
dec
jo
push
sbb
das
sti
inc
outsb
push
inc
or
xchg
mov
aad
andb
xchg
lds
nop
adc
aad
cmc
inc
xchg
loope
aad
int3
mov
cmc
pop
push
xor
sub
xor
ss
inc
jne
cmpl
notb
es
xchg
jecxz
mov
xor
jns
outsb
add
jmp
xchg
out
jge
pop
pop
mov
data16
inc
jmp
cmp
idivb
int3
ja
cltd
pop
out
lds
cli
add
pop
cmp
sbb
data16
mov
add
xorl
push
popa
adc
insb
movsb
fdiv
sbb
inc
sti
mov
lret
rorl
into
push
or
test
jae
frstor
push
sbb
jg
fs
dec
pop
xor
xor
lret
pop
out
arpl
imul
add
jo
adc
mov
push
cmc
or
jae
cli
sahf
pop
popf
fidivrs
inc
inc
loopne
shr
ds
mov
and
addr16
mov
push
jp
pop
or
push
jge
inc
sub
mov
inc
iret
mov
hlt
inc
scas
xor
into
lods
xchg
mov
mov
cmp
adc
lcall
ret
arpl
iret
lods
insl
mov
movsl
jno
enter
popa
inc
test
mov
and
out
lods
jle
jne
inc
in
jge
jp
stos
mov
or
rcrb
stos
push
call
gs
or
les
ja
iret
mov
adc
cmp
les
mov
mov
xor
adc
mov
sar
aas
sub
loop
mov
and
ret
ja
xchg
out
addr16
pop
add
pop
jge
cs
inc
jle
out
adc
jo
xor
repnz
and
ret
adc
pcmpgtb
sahf
push
adc
add
xor
lods
push
and
jmp
push
pminub
jp
hlt
pop
mov
test
je
xchg
add
fcoms
push
nop
and
cmpsl
aaa
push
xor
shlb
in
sub
jmp
leave
outsl
ret
add
cli
incl
ficomps
mov
enter
push
jns
clc
jl
stos
mov
cmc
xchg
mov
int
jp
mov
imul
and
aas
fwait
mov
and
test
xchg
dec
cmp
in
fsts
jo
arpl
or
dec
xchg
adc
cmc
das
and
dec
sbb
hlt
cmc
ror
addb
pop
fisubs
bound
scas
ss
lea
and
cmp
xchg
imul
or
xchg
js
daa
sahf
add
pop
jbe
test
xor
hlt
clc
call
repnz
jno
mov
dec
pop
cmpsl
cmp
hlt
dec
iret
leave
imul
push
into
or
add
push
shlb
movsl
mov
scas
mov
lods
test
test
inc
add
sbb
scas
lea
test
add
cmp
xchg
mov
jns
sub
cmpsl
cmp
sub
lret
in
repz
add
movsl
int3
mov
in
leave
dec
in
rolb
push
leave
jne
dec
cltd
loope
stos
push
xor
xchg
test
xchg
test
popl
sar
jns
frstor
xor
ljmp
repnz
sub
in
xlat
inc
imull
xchg
mov
and
rolb
lcall
mov
sbb
dec
adc
insl
std
out
mov
aas
xor
aad
mov
lahf
fcoml
add
push
adc
inc
loopne
dec
mov
cmp
add
std
rcrl
dec
fistps
scas
adc
cmp
mov
outsb
push
hlt
cwtl
add
xor
or
or
mov
int3
inc
or
std
arpl
cmp
adc
es
inc
push
clc
xchg
inc
fisttpll
outsl
and
rolb
and
and
negl
and
jmp
xchg
es
and
nop
pop
mov
cli
mov
add
dec
adc
adc
mov
cli
cmp
lcall
cmp
mov
lret
pop
stos
xchg
xor
bound
adc
adc
mov
mov
fidivrs
add
gs
lret
mov
clc
xor
ljmp
aaa
mov
inc
loope
mov
pop
xchg
xor
loopne
test
adc
fidivs
sbb
mov
xchg
rcll
cmp
jge
xlat
sbb
adc
sti
jle
mov
cmp
fdivrp
dec
mov
test
dec
addr16
shlb
xlat
stc
push
xchg
mov
inc
and
mov
mov
into
fst
mov
mov
stos
in
push
xor
imul
pop
in
movswl
mov
or
loope
das
xlat
mov
lahf
lods
rorb
mov
mov
rol
sbb
sub
es
xchg
cld
addl
in
int3
aam
sub
in
jno
das
or
in
pop
mov
cmc
mov
xor
xor
jb
hlt
sub
loope
cmc
pop
loope
inc
mov
mov
mov
xchg
xchg
dec
dec
fisttpll
xchg
lret
into
ret
repz
or
or
pop
inc
jl
mov
jae
push
notl
div
fisubs
repnz
mov
es
jmp
jmp
dec
rclb
cmc
adc
jecxz
mov
hlt
lahf
pop
cmp
psubb
sbb
push
jecxz
js
or
inc
mov
call
xchg
inc
mov
loopne
mov
push
lods
loopne
push
sbbb
leave
je
pop
mov
clc
push
int
je
cmpsl
and
arpl
mov
insl
xor
dec
mov
ljmp
sarl
sbb
sub
hlt
lods
out
jmp
cli
push
call
xlat
pusha
test
loopne
insb
mov
aam
out
pusha
adc
imul
xchg
movsl
mov
adc
or
ds
mov
clc
inc
jle
inc
leave
mov
pushf
fnsave
pmuludq
push
sbb
cmp
jnp
imul
ret
out
das
mov
out
pop
loopne
sub
ds
aam
mov
aas
rcll
push
ds
scas
add
popf
and
cmpl
aaa
fisttps
outsb
inc
test
inc
mov
sub
jb
pop
jmp
sarl
cwtl
lds
js
inc
in
xchg
or
bnd
movb
jl
sbb
cs
leave
xor
div
les
mov
cmp
xabort
sub
xor
xchg
inc
ja
pop
xor
and
inc
mov
pop
dec
popf
mov
cmp
xlat
cwtl
push
cmp
test
cmpsb
aas
mov
jge
xchg
pop
gs
jecxz
cmp
push
mov
jmp
ljmp
sbb
push
mov
jmp
cmpsl
stc
cmp
int3
dec
and
imul
nop
arpl
sbb
inc
adc
adc
in
out
stos
cmc
repz
mov
daa
scas
gs
roll
ljmp
dec
push
push
push
push
fcoms
test
adc
pushf
mov
fisubs
add
xchg
outsl
fs
xlat
loop
pop
mov
pop
int
cmp
mov
sahf
fldcw
movsl
and
testl
xor
add
cmp
adc
mov
cmp
jae
jbe
mov
cltd
mul
ljmp
xchg
cmpsl
cld
insb
ja
xlat
pop
dec
add
mov
pusha
mov
adc
jge
mov
imul
aas
outsl
test
pop
insl
inc
cld
aaa
pop
lahf
xchg
movsb
sub
loope
mov
test
adc
adcl
mov
out
sahf
sbb
pop
sarl
jb
pop
mov
aam
sahf
stos
jmp
rclb
inc
xchg
test
loop
sbb
sarl
imul
jmp
test
enter
jmp
out
movb
mov
cmp
testb
cli
mov
scas
lea
sbb
fidivrl
xchg
sbb
lods
cmp
pop
add
sbb
push
sub
xchg
or
mov
je
pop
fwait
sbb
cmp
xor
sbb
add
ror
adc
sahf
dec
jno
jmp
das
xor
dec
repz
nop
testl
shlb
icebp
xor
inc
adc
out
push
or
in
incb
imul
add
pop
ret
decl
jne
push
and
iret
push
jp
inc
sbb
popa
sti
adc
cmp
push
pop
sbbb
out
pop
sahf
jecxz
push
mov
or
pop
mov
add
push
repz
sbb
lds
sti
stos
outsl
lds
aaa
test
mov
add
cmp
ja
sub
xchg
mov
movsb
xchg
hlt
or
aas
test
int3
cs
das
and
jl
pusha
sbb
xchg
mov
lods
loop
push
xor
jbe
mov
push
test
sub
in
lahf
xor
sbb
test
cli
shr
sarl
pop
sarl
aas
mov
pop
gs
mov
push
enter
mov
jne
add
mov
mov
push
in
lds
fnstenv
jmp
xor
negb
sbb
ror
movsb
stos
and
insl
jno
mov
dec
xchg
lcall
mov
imul
divb
adc
jne
push
fstpl
cmp
adc
dec
movsl
xchg
shll
add
mov
lods
mov
mov
push
sti
es
lahf
loope
fsubs
mov
push
add
jns
add
cwtl
inc
inc
xchg
or
or
xlat
loope
ret
repnz
push
popa
fidivl
jmp
lods
or
mov
repnz
frstor
and
out
jns
ficompl
xchg
mov
pusha
and
xchg
les
ror
ret
ja
enter
movsb
dec
ss
out
lcall
push
sti
mov
cs
stos
mov
inc
xor
push
jmp
js
mov
sbb
adc
and
faddp
add
and
inc
push
movsb
inc
mov
xor
and
adc
in
adc
mov
push
popf
in
push
mov
cmp
cmp
ja
aaa
mov
adc
mov
icebp
cmc
cmp
jns
dec
dec
fwait
shl
cmp
push
fisubs
add
ds
push
sub
lods
xchg
mov
les
jns
test
cmpsl
shll
mov
mov
lock
add
xor
scas
iret
addr16
mov
mov
adc
xlat
dec
xchg
mov
mov
mov
sysret
loope
in
lock
hlt
sbb
dec
fisubs
and
sub
int3
mov
dec
push
xorl
shrl
adc
lret
sti
xor
and
stos
inc
cmpb
xchg
and
pmaddwd
pop
insl
rcrb
arpl
cmp
and
lahf
cli
sbb
out
lret
flds
mov
xor
xlat
jle
jb
add
dec
sub
sbb
pop
sbbl
mov
int3
ds
loope
imulb
dec
add
pop
cmpsb
call
push
cmpb
mov
sahf
movsb
rorb
cmp
jno
xor
or
sub
outsb
push
repz
adc
push
inc
adc
sbb
outsl
clc
ret
pop
rorb
gs
lods
cld
jg
mov
sarb
gs
stos
lods
roll
mov
mov
add
jge
jno
xchg
into
dec
or
test
pop
adc
fdiv
xor
xor
std
or
xchg
cld
cwtl
stos
std
dec
shll
fisubrs
out
lahf
fstpl
mov
das
clc
dec
add
inc
pop
jmp
inc
mov
xchg
inc
sub
push
mov
add
jne
out
pop
call
ficomps
xor
xchg
shll
mov
cmp
jg
pop
insl
out
lods
fisubl
fcoms
jecxz
inc
jp
imul
mov
sbb
sub
lcall
xor
les
nop
imul
aas
es
enter
imul
stc
push
cmp
daa
insl
pop
add
outsl
movsb
repz
jne
dec
sbb
or
add
or
cmp
sbb
inc
lods
stc
adc
xor
lcall
and
std
sbb
inc
ds
iret
sbb
fadds
rorb
jne
incb
and
jns
js
cs
push
push
loopne
or
mov
in
cmp
cmp
or
jns
inc
popa
jecxz
jge
adc
int3
and
ss
into
lahf
jge
insl
in
jge
push
xchg
je
add
xchg
inc
stos
rcrl
mov
fcmovne
aas
mov
mov
mov
aas
or
add
pavgb
loope
popf
inc
scas
pop
or
adc
lretw
adc
jne
sbb
mov
inc
jb
xchg
pop
mov
mov
push
or
add
out
sahf
lea
dec
pop
xor
loopne
mov
push
and
mov
je
out
in
les
pop
cwtl
mov
mov
shrl
bound
dec
scas
mov
std
jp
xor
cmp
add
or
mov
mov
push
jl
mov
rcrb
push
imul
mov
out
fiaddl
ljmp
or
push
cmp
pusha
mov
jmp
add
fsubl
movsb
push
mov
loop
out
into
mov
fcomp
or
xlat
push
cmp
push
and
mov
push
lds
mov
pop
insl
bound
mov
clc
repnz
mov
aam
clc
insb
push
lods
jge
add
cmp
xor
push
cmpsb
mov
jae
ror
mov
js
adc
in
and
repnz
push
mov
adc
push
fs
ret
mov
ficomps
push
jo
push
leave
shll
jp
push
sbb
sub
push
sbb
xchg
popf
fdivrl
ljmp
hlt
jle
xchg
stos
mov
scas
cwtl
inc
jno
fldt
sarl
mov
sbb
xor
jl
jp
lock
cltd
loope
pop
add
xlat
xchg
mov
icebp
sub
cmp
mov
psllw
mov
sahf
cmpsb
imul
push
dec
push
mov
jp
mov
pop
shll
push
and
mov
sub
mov
cwtl
out
shlb
add
mov
lret
push
mov
inc
add
jmp
leave
dec
inc
pop
adc
or
jg
and
stc
mov
pop
hlt
mov
push
jb
iret
sub
pushf
popa
out
in
sub
sub
cmp
insb
jp
sbb
test
jno
mov
push
mov
pop
loopne
sti
stos
push
cmpsb
lea
addr16
and
sahf
outsl
xchg
push
xor
sbb
lahf
xchg
sbb
clc
add
ja
mov
adc
push
rcll
jbe
fistps
pop
sub
out
imul
stos
daa
sahf
pop
and
rcrb
dec
jno
gs
sahf
push
xchg
jnp
xchg
shrl
mov
insb
jg
repz
cwtl
fldl
mov
mov
pop
or
movsl
out
leave
shl
cmpsl
xchg
dec
pop
and
loopne
push
bound
lods
push
test
lcall
push
les
sbb
cmp
std
xor
js
xor
idiv
aaa
mov
jae
outsb
jecxz
and
jnp
add
mulb
dec
js
xchg
pop
int
cmp
aam
push
test
xchg
fadds
je
pop
stos
jae
xor
dec
fsubl
cwtl
insb
pusha
cwtl
and
pop
push
loop
lods
aas
outsb
pop
repnz
jb
mov
adc
sub
mov
push
fsts
or
arpl
mov
outsl
stos
xor
fadds
mov
mov
mov
pop
mov
sar
out
jnp
push
inc
and
push
stc
mov
cmc
loop
or
xchg
daa
sahf
pushf
mov
and
std
stos
lcall
ret
cli
jle
cmpsl
cmp
int
dec
add
xchg
or
jl
mov
mov
fisttps
adc
pop
push
push
je
jmp
sub
inc
lods
outsl
in
stc
ret
ss
outsb
outsl
repz
dec
imul
fsts
add
gs
scas
push
test
sub
mov
insl
lea
dec
into
loop
dec
adcb
flds
fdivrs
scas
mov
mov
lret
inc
adc
push
js
std
push
jae
add
sub
jge
repnz
sub
enter
clc
or
test
fsts
pop
shlb
and
das
jnp
out
hlt
repnz
call
hlt
lahf
or
std
cmp
out
jno
dec
ss
adc
adc
dec
imul
mov
dec
sbbb
mov
mov
pop
lock
xor
dec
outsb
shl
mov
add
popa
stos
ja
add
mov
inc
mov
jne
xchg
je
loop
cmp
lret
insl
je
dec
lock
fiadds
and
mov
cmpsb
jo
push
dec
or
inc
sub
or
xor
add
mov
out
clc
pop
std
lock
mov
ja
faddl
mov
xor
sub
fisubrl
mov
jbe
dec
xchg
imul
xor
clc
push
arpl
aas
ds
call
fldcw
in
and
and
fstpl
mov
pop
mov
add
ds
mov
in
dec
push
pop
cwtl
inc
push
mov
push
or
sbb
add
lock
scas
dec
shlb
dec
mov
imul
and
jno
jno
dec
xchg
xor
xor
je,pn
out
mov
movsl
test
out
and
add
jns
push
xor
adc
fisttpl
inc
or
jecxz
pop
or
push
daa
insl
daa
cmp
mov
mov
lock
shr
repnz
fistl
in
mov
hlt
jecxz
test
stc
shll
fldl
xchg
xor
xor
scas
fdivrs
shrb
mov
or
mov
sbbb
aam
mov
mov
xor
ret
push
movsl
aad
cmpsb
xlat
and
ret
pusha
jle
xor
ss
call
or
inc
cltd
inc
cltd
and
lcall
clc
xlat
sub
fidivl
push
inc
decl
das
sti
aam
push
scas
inc
ss
or
xor
or
stos
pop
inc
mov
jl
sub
ja
fiaddl
add
jo
shlb
testl
xchg
fisttpll
fcmovu
test
cmp
xor
lea
sub
sbb
jl
jmp
push
test
scas
sbb
add
xor
pop
out
push
popl
daa
into
ss
movsl
or
iret
ljmp
dec
in
push
lods
scas
mov
pop
lcall
leave
adc
add
pushf
inc
stos
mov
push
sar
lahf
daa
xchg
outsl
pop
xchg
cmpsl
scas
repz
scas
jle
in
and
xchg
rcrl
into
fcoml
fisubrs
mov
push
cmp
sub
test
mov
daa
test
mov
mov
dec
das
cmp
inc
pop
or
sub
movsb
xchg
in
pop
mov
xchg
cmpsb
inc
pop
mov
xchg
mov
enter
push
pop
outsb
xor
push
dec
inc
lahf
push
cmp
mov
nop
pop
cli
push
test
testb
push
out
icebp
xor
inc
mov
pop
or
pop
push
inc
ja
or
cwtl
pop
inc
test
jle,pt
jbe
pop
outsb
cmp
std
fimuls
in
push
push
ds
sarl
int
mov
imul
lahf
movsl
test
sub
imul
call
ret
push
xor
and
pop
fistl
cmp
sbb
inc
push
pop
jbe
out
lock
pushf
mov
pop
push
in
cmp
enter
bound
in
jne
mov
mov
mov
jecxz
xor
loop
cmp
test
adc
or
repnz
cmp
iret
sbb
pushf
ja
in
inc
mov
ds
out
les
test
sbb
ret
mov
mov
fsubs
outsb
mov
jbe
ret
es
push
rorb
js
or
fldln2
cli
xchg
sbb
hlt
outsb
dec
in
adcl
movsl
push
jo
cwtl
add
fldcw
push
xchg
cmp
or
ljmp
fbld
sbb
xorb
jp
aad
cld
jmp
out
sub
shlb
jo
sub
jnp
scas
int
rorb
movsb
ljmp
rcll
pop
imul
popl
imul
aam
mov
iret
mov
mov
jp
outsb
inc
sub
sub
dec
sub
fs
pop
loopne
das
mov
xchg
ljmp
mov
mov
mov
pusha
and
mulb
xor
idiv
mov
sbb
fadds
pushw
test
jno
mov
out
push
jle
scas
jge
ja
shll
scas
int3
popa
addr16
push
rolb
jb
adc
sbb
movsb
mov
subl
popf
fldl
and
inc
push
sbb
mov
mov
shlb
or
jne
pop
push
add
inc
push
insl
xor
nop
and
lcall
notl
sub
mov
ret
xchg
push
pop
mov
pop
pop
mov
rdtsc
cs
mov
icebp
jge
mov
cmp
xchg
xor
push
mov
jae
sub
xchg
mov
ja
adc
sub
dec
int
pop
push
testb
jmp
lods
push
pop
or
ret
test
imul
or
insl
test
ds
push
fsubrl
in
adc
jmp
xor
aad
ja
hlt
mov
outsl
lea
leave
mov
inc
add
push
mov
jo
movsl
dec
mov
popa
jns
pop
jmp
and
outsb
inc
test
bsf
or
pop
fwait
push
mov
aas
mov
push
mov
aaa
popf
movsl
pop
int3
dec
jmp
pop
lret
mov
sti
push
popf
ror
pop
addb
xor
mov
push
jno
dec
out
fadds
xor
inc
adc
jns
mov
mov
shll
int
inc
ljmp
mov
aam
adc
jnp
lcall
mov
sahf
aad
int
xor
fcompl
xchg
in
inc
mov
pushf
xchg
mov
shll
in
add
stc
mov
stos
cmp
into
cwtl
pop
movsl
outsb
adc
jns
in
test
fwait
xchg
dec
sbb
adc
aad
xchg
nop
add
decb
sti
adc
out
pop
mov
cmp
jnp
popl
add
xchg
mov
add
push
sub
push
xor
push
fimuls
adc
jne
jmp
jbe
es
mov
sahf
loop
pushf
or
lahf
loope
cmpsl
adc
xchg
mov
xor
int
push
fiadds
inc
cmp
adc
leave
test
jecxz
mov
push
push
je
andl
imul
add
mul
sbbl
adc
test
xor
mov
insb
inc
cmp
pop
das
jno
cmpsl
sub
loopne
out
das
imul
enter
push
shr
cwtl
pop
fucomp
popa
sub
dec
imul
mov
ret
lret
sub
sbbl
lret
in
mov
mov
xchg
mov
mov
lods
in
movsl
or
cmp
pop
movsl
push
outsb
lock
fwait
in
add
dec
sub
and
sbb
cltd
mov
cltd
cltd
es
stc
push
test
mov
xor
hlt
mov
xlat
mov
cwtl
dec
das
test
es
bound
mov
cld
sub
repz
les
mov
pop
stc
mov
add
arpl
xor
fcomp
loopne
lahf
push
pop
pop
mov
sti
adc
sbb
xlat
fisubl
fcoml
xor
sahf
lret
dec
in
sub
popa
call
cmp
push
mov
lds
hlt
pop
mov
lock
push
push
aam
fldenv
jns
icebp
and
test
sub
jmp
adc
mov
mov
lock
sahf
nop
mov
mov
cmp
js
mov
fsubl
sbb
ljmp
cmp
sti
lahf
call
adc
shlb
sbb
out
aad
sub
idivl
leave
cmp
stos
in
fwait
push
in
jg
pop
and
sahf
jb
sub
fdivrp
and
adc
push
pop
push
lret
lret
addr16
pusha
jae
push
cmp
adc
mov
pop
enter
jb
xor
gs
lock
aas
fmuls
stos
rcl
scas
mov
and
or
mov
das
fiaddl
xor
jae
xor
leave
aas
ljmp
jb
cmc
iret
outsl
xchg
dec
mov
push
push
iret
jne
and
sbbb
mov
subb
mov
lods
das
clc
mov
stos
gs
pop
cwtl
clc
jp
sub
inc
popa
jmp
sub
pop
dec
decl
xor
stc
xchg
mov
aaa
fs
inc
popa
jns
scas
xor
mov
jl
push
jo
mov
jae
jle
stc
add
push
xlat
sbb
xchg
sti
or
ljmp
push
lea
sub
lcall
mov
push
out
bound
dec
js
and
loope
pop
xor
addr16
std
gs
ja
les
jmp
pop
cmp
jge
loope
mov
push
pop
insl
in
int3
pop
mov
movsb
lds
aas
cmp
xor
aad
int3
daa
rorl
and
mov
sbbl
imul
test
into
mov
sub
repz
and
aaa
mov
icebp
xor
jge
sahf
inc
cmp
outsl
popf
xchg
inc
fnclex
je
test
xlat
out
in
popf
sbb
popa
js
push
xor
push
jl
ret
leave
shrl
sub
mov
dec
sub
mov
inc
mov
or
mov
gs
inc
xor
in
xchg
inc
jne
fwait
loope
jle
adc
dec
add
arpl
jbe
sub
pop
inc
mov
into
add
push
mov
stos
adcb
subl
rorb
jmp
mov
mov
scas
jg
xchg
adc
stos
mov
scas
ret
pop
mov
xlat
fadds
pusha
xchg
or
out
push
jge
jbe
repnz
fstl
add
add
nop
fmulp
sub
push
inc
mov
inc
cmp
and
fiadds
nop
ja
leave
xchg
mov
enter
jae
xchg
fmuls
push
jmp
mov
add
push
in
jne
inc
xchg
pushf
cmc
test
mov
sbb
inc
cmp
jecxz
cmp
test
stos
inc
fld
push
inc
scas
outsl
fmuls
pop
sbbb
mov
pushf
scas
shrb
mov
clc
sub
push
fs
aam
aam
sbb
out
jle
add
data16
lret
jb
nopl
lods
lock
cld
cltd
shll
add
mov
xchg
pop
cltd
ss
jle
sti
loope
pop
pop
xchg
test
aad
ljmp
cmpsb
ljmp
add
pop
sti
sub
in
adc
jnp
loop
addr16
stc
data16
mov
mov
and
repnz
pushf
lahf
insb
mov
imul
in
add
hlt
arpl
adc
cmc
and
or
loop
pop
cmc
sub
dec
test
mov
shl
push
push
mov
mov
and
mov
mov
mov
xor
lock
adc
mov
sub
mov
cmp
mov
std
lea
rclb
test
xchg
push
popa
loopne
sbb
xor
cli
std
jns
inc
or
repnz
mov
sub
inc
sbb
lods
sahf
adc
movsl
cli
sub
sbb
or
jmp
aas
or
inc
popa
imul
dec
dec
xchg
popf
inc
push
xchg
pop
jnp
cmp
lret
lret
mov
rcll
enter
mov
je
stos
sbb
xor
mov
aam
mov
cmp
sub
rorb
fisttps
adc
adc
lods
test
movsb
shrl
pop
movsl
loop
mov
sbb
dec
in
add
ljmp
xor
jbe
outsb
xor
stos
aad
lret
or
pop
iret
inc
or
push
sub
aam
loop
ret
mov
ret
ret
xor
pusha
push
add
inc
daa
pop
sbb
outsb
adcb
addl
or
enter
xor
notb
xchg
cld
jg
sti
sub
out
sub
xchg
sub
pop
je
cmp
add
add
pop
cs
pop
cli
or
sbb
mov
mov
fldl
test
fstpl
fsubrp
mov
mov
enter
repz
lret
ja
mov
cmp
orb
decl
arpl
push
push
cmpsb
insb
stc
popf
push
lahf
popa
inc
push
jb
mov
les
xchg
and
adc
repz
dec
push
inc
jp
stos
lret
cltd
shrl
js
in
sub
bound
jo
push
mov
push
ss
test
add
inc
out
lret
outsb
add
sub
push
sub
inc
jns
outsl
repnz
mov
add
sbb
inc
or
push
pushf
sub
lea
sub
push
jecxz
mov
mov
or
loope
popf
adc
mov
sbb
mov
mov
and
cld
and
orl
insl
inc
cwtl
push
push
sub
lret
enter
xor
mov
pop
sbb
jle
lea
test
mov
or
repnz
pushf
mov
mov
sbb
mov
popf
cmp
call
push
fmull
mov
mov
rcrb
mov
or
sub
jo
dec
push
ficomps
js
movsl
mov
ja
fidivrl
lock
ds
subb
sahf
xlat
mov
lcall
in
in
stos
sub
in
pop
pop
aam
xchg
cli
movsb
lahf
sub
pusha
add
mov
sarb
outsl
xor
fisubrl
frstpm(287
data16
adc
iret
mov
push
outsb
and
jle
inc
rolb
cmp
icebp
lret
fcmovnbe
push
notb
jp
xor
je
sti
in
in
lds
aam
push
js
cld
repnz
jnp
fwait
sub
cld
xchg
xchg
out
imul
jnp
jg
sub
xchg
xor
mov
mov
in
pop
push
push
cmp
rcrb
cmp
mov
push
xlat
negb
pop
dec
mov
out
sbb
xor
inc
nop
push
test
pop
jnp
sbb
xor
andb
nop
aam
jb
into
sbb
mov
mov
movsb
mov
mov
pop
lahf
fiaddl
cmp
stc
lahf
cmp
cmp
mov
mov
mov
fmull
out
sub
mov
adc
pop
cmpl
in
sbb
loop
test
leave
imul
mov
adc
adc
pop
fs
xor
aad
ret
jo
sarl
fldenv
jns
bound
inc
fldenv
fisttpll
rorb
es
lea
lods
and
inc
mov
cmpsb
jmp
xchg
insb
les
icebp
outsb
xor
fidivs
mov
movsb
adc
test
hlt
sbb
jmp
jno
mov
fs
aam
int
and
in
sbb
push
inc
lock
jb
andb
dec
daa
roll
lret
lds
jnp
fisubl
mov
mov
dec
push
pop
pop
add
cmp
aad
ja
jg
mov
xchg
call
push
fistpll
ds
pop
notb
jne
adc
push
loop
leave
and
fsubr
in
and
or
fiadds
jne
dec
add
shll
sbbb
bound
nop
mov
ja
movsl
pop
sbb
push
add
fdivrl
outsb
push
lahf
xor
pop
xchg
mov
or
loop
fucomp
addr16
sbb
ss
xor
jg
fdivrs
xor
leave
inc
cli
into
arpl
push
sub
xor
mov
xor
gs
jb
ds
repz
arpl
je
add
mov
pop
std
faddl
fnstcw
stos
ret
hlt
jl
adc
out
push
sbb
xchg
lock
setbe
mov
mov
ss
ljmp
pop
jae
enter
loope
mov
mov
mov
or
mov
inc
fst
add
sbb
clc
rcll
orps
fstpl
dec
in
push
adc
and
orl
push
jns
and
rclb
cmp
push
jp
mov
in
pop
mov
ficoml
mov
pop
fdivr
push
sbb
mov
icebp
lds
mov
jo
jbe
lods
push
adc
outsl
sub
inc
aaa
adc
jl
test
sbb
ds
fmulp
add
hlt
mov
push
and
or
add
dec
test
xchg
outsl
or
adcl
jnp
add
in
nop
js
jle
aas
push
rcrb
cli
rcl
mov
cmp
mov
mov
mov
stc
pusha
outsl
pop
dec
xor
aam
mov
arpl
sbb
out
cwtl
jae
pop
mov
mov
cmpxchg
mov
repz
sbbb
or
test
push
cmpsb
rdmsr
mov
cs
lds
mov
xchg
push
std
xlat
mov
mov
data16
adc
xor
and
mov
nop
add
das
or
mov
imul
loop
rolb
aas
push
orl
jg
movsb
repnz
xor
lds
mov
iret
cmp
mov
enter
adc
mov
cmp
rclb
pop
loopne
arpl
add
add
sbb
and
dec
in
shr
xchg
jbe
xor
arpl
push
bound
xorb
hlt
xor
mov
ret
nop
cmp
add
cltd
add
or
mov
loope
daa
clc
std
xor
mov
in
push
sbb
aas
insb
test
pop
or
ret
fwait
movsb
ret
pop
jmp
test
into
and
xchg
sbb
sbb
data16
add
orl
push
ret
push
lds
lahf
cmp
test
mov
cmc
cmp
and
pushf
add
jg
lods
popf
cmp
js,pn
imul
pop
popf
xchg
lock
mov
mov
xchg
out
pop
push
push
sub
pusha
into
pop
jg
or
mov
jbe
sbb
sbb
pop
fstp
lock
mov
sahf
cmp
xchg
add
add
cmp
jns
dec
mov
shll
push
fiaddl
xor
insl
sbb
pop
ds
lret
imul
std
mov
jp
loope
sub
adc
popa
addl
jb
out
cli
push
push
jp
push
clc
dec
shll
ret
popf
inc
es
mov
arpl
out
mov
loopne
ret
shr
push
jl
loop
fildl
jmp
jecxz
loopne
fsubrl
xor
test
mov
sbb
adc
bound
test
vpsubsw
mov
rcrl
ss
pop
loop
cwtl
out
imul
nop
test
fisubrl
loopne
mov
fiaddl
call
jmp
jb
mov
jns
imul
out
outsb
or
mov
pusha
mov
data16
mov
addr16
repnz
add
cmp
pop
pop
and
jmp
pop
push
adc
jge
inc
sub
lcall
inc
frstor
int3
int3
pop
call
fistpl
pop
dec
dec
cmpsl
dec
inc
mov
push
out
push
mov
movsb
ja
stos
sub
mov
jl
inc
mov
mov
mov
xchg
sub
mov
pop
pushf
adc
jne
pop
into
rolb
fiaddl
cmp
push
fcom
gs
sbb
in
faddl
jo
pushf
in
push
cld
mov
jmp
mov
imul
and
mov
mov
lret
jmp
jo
ss
movsb
adc
fcmovu
inc
or
push
mov
lahf
jle
mov
lcall
cmp
gs
in
or
xchg
jb
aaa
inc
sub
pmulhw
mov
mov
popf
mov
mov
xchg
and
dec
adc
jb
das
cltd
inc
push
mov
idiv
mov
std
add
dec
insl
cmpsb
pop
stos
sub
pusha
cmpl
sub
pop
imul
pop
cmp
aas
loope
push
out
decl
mov
stos
call
iret
roll
and
int3
insl
icebp
fwait
pop
mov
mull
mov
stos
mov
mul
xorl
mov
subb
adc
andl
pop
jnp
inc
or
icebp
hlt
pop
and
jne
add
lret
cs
in
add
xchg
push
mov
mov
mov
cmp
test
repnz
xlat
out
jge
addr16
cwtl
xor
out
int3
movsl
jmp
push
cmp
repnz
adc
andb
jmp
xor
sbb
icebp
or
shll
add
jecxz
int
sbb
imul
and
lock
inc
test
jo
pop
xor
jbe
scas
repnz
mov
mov
call
and
mov
movsb
or
push
or
pop
or
shlb
movsb
sub
je
popf
jne
jecxz
test
shl
inc
jbe
sbb
jne
cmp
inc
jae
out
and
xor
subl
pushf
sub
ljmp
lods
stc
sbb
lods
push
enter
fcoms
mov
pop
orl
cmp
js
xor
dec
cmp
mov
cltd
call
lds
jnp
daa
inc
aaa
jae
cmp
ds
jmp
and
imul
xor
loop
sbb
cmp
stc
and
push
and
and
cmp
cmp
lcall
dec
mov
repz
or
fsubrs
mov
mov
insl
out
sti
cmp
inc
jno
sbb
cmp
sub
inc
pop
jb
sbb
div
adc
out
mov
insb
in
cmp
int
orb
xlat
fistpl
lret
sahf
or
cmp
cwtl
cli
icebp
lods
int
out
mov
repnz
cltd
and
sub
mov
int3
sbbb
or
cmp
mov
stc
inc
dec
in
cmpsb
adc
push
xchg
lds
jne
cmp
fildl
sbb
xchg
ss
sar
add
rol
add
pop
or
cmp
std
sub
lahf
lock
cmp
jg
popa
mov
out
stos
cmp
in
xchg
sub
cmp
cwtl
negb
adc
mov
icebp
sarl
mov
mov
mov
bound
stc
jecxz
ficompl
pop
mov
shrb
jg
or
scas
mov
pop
imul
or
inc
les
bound
insb
add
sbb
xchg
adc
mov
sbb
mov
dec
sub
cld
pop
loop
add
clc
fildll
cs
sahf
sbb
sub
fcoms
scas
pushf
test
adcl
pop
mov
sub
dec
inc
lret
lea
add
lret
xor
and
cmp
out
xchg
outsb
insl
jmp
jmp
pop
mov
shlb
xchg
out
roll
andb
cmc
lahf
insb
pop
icebp
jg
xlat
sbb
adc
aad
push
rclb
loopne
xchg
adc
es
lahf
mov
cltd
pushf
push
test
test
and
or
lods
popa
xchg
out
ret
xor
dec
inc
mov
js
lahf
dec
in
jp
dec
cmp
inc
mov
clc
in
iret
jne
sub
popa
add
sbb
mulb
add
adc
xor
jne
sub
jmp
jecxz
into
test
xchg
cld
lds
in
sbb
loop
jbe
xor
fistps
loopne
fwait
jae
xor
xchg
jno
movsl
jp
aaa
gs
in
int
stos
jge
push
imul
ret
xchg
xchg
js
jecxz
mov
movsl
adc
sub
push
out
jno
mov
pushf
iret
movsl
fstl
hlt
mov
scas
xor
dec
inc
or
in
inc
mov
loope
lods
ret
outsb
xor
lods
in
xorb
mulb
mov
lret
icebp
xchg
xchg
imul
cld
mov
clc
inc
enter
jge
push
inc
jb
sbb
inc
mov
cmpsl
lret
jo
loop
rcr
mov
imul
jg
stc
sahf
jg
mov
lds
cli
mov
mov
inc
arpl
ss
sarl
scas
pusha
or
aaa
sub
mov
rolb
mov
idivl
std
rcll
or
jecxz
sbb
push
int3
fisubrs
ret
int3
jno
out
inc
imul
repz
cmc
ss
leave
bound
lods
pusha
pushf
adc
out
jl
push
std
call
cmp
sub
xchg
jns
lea
fwait
cmpsb
mov
jg
leave
fcomps
ds
loope
adc
fcomi
jnp
pop
dec
fdivr
fnsetpm(287
rcl
roll
mov
add
lods
add
xchg
mov
inc
lcall
dec
cmpsb
sub
js
xlat
aas
out
jecxz
nop
jp
cmp
adc
cmp
inc
cmp
jge
test
sub
clc
lret
call
dec
dec
inc
adc
sub
xchg
shl
call
imul
push
mov
sbb
cwtl
mov
out
stc
test
les
enter
in
inc
aas
idivb
icebp
clc
sbb
stos
pop
iret
xchg
adc
add
add
or
and
call
ja
ss
or
xlat
xchg
pusha
push
sahf
mov
pop
lret
xor
arpl
adc
test
xchg
dec
mov
ret
pop
mov
lret
jae
cmp
lcall
jge
mov
jo
mov
movsb
fsts
lahf
loopne
lcall
add
xor
xor
leave
jbe
add
cmpb
dec
push
sbb
jbe
lea
test
dec
mov
stos
testl
pop
inc
jae
stc
push
sar
mov
aam
push
inc
inc
jo
lret
jb
sub
ret
push
xchg
xor
adc
mov
push
mov
push
cmp
and
adc
arpl
scas
ret
mov
imul
xlat
in
inc
divb
mov
xchg
dec
inc
push
arpl
and
inc
adc
jae
data16
mov
and
inc
in
add
out
and
and
jge
cs
and
push
cmp
pop
or
movsb
push
xor
ja
jl
int3
inc
cmp
xor
xor
repz
out
push
add
fs
arpl
lock
push
mov
fcmovne
fldt
add
push
pop
jg
shl
lahf
cmp
sub
repnz
popa
sub
mov
push
jo
xor
push
test
pop
aam
jmp
push
mov
das
js
sbb
pop
cltd
mov
in
adc
sbb
jmp
cld
ljmp
ficompl
loopne
out
pop
imul
je
lret
sbb
setnp
into
lock
mov
pusha
test
clc
popf
sbb
subb
inc
pushf
push
mov
adc
xor
and
mov
fisubrl
push
or
cld
mov
dec
pusha
lret
jg
fwait
jae
repnz
fidivrs
hlt
fstps
stos
insb
mov
out
pushf
rcr
xchg
jne
push
in
sbb
rorb
int3
jecxz
inc
xor
icebp
sub
loopne
mov
adc
add
rcrl
xchg
cltd
push
call
fnstcw
lods
mov
xchg
xor
push
mov
xlat
and
dec
mov
sbb
lcall
bound
out
addr16
mov
mov
repz
ds
hlt
clc
adc
pop
push
test
mov
les
cli
push
mov
insb
inc
hlt
rcrb
dec
pop
jle
jmp
xchg
jle
cmc
in
notl
mov
xchg
arpl
mov
jp
mov
xchg
test
cli
int3
xchg
push
mov
dec
shrl
jge
inc
movsl
and
adc
push
jl
add
jecxz
pop
mov
dec
pop
rcrl
sub
pop
push
stc
insb
loope
xchg
popf
jno
jns
jno
cmp
loop
movsl
fcoml
mov
push
inc
xor
cmp
cmp
mov
push
xchg
fcoml
int3
das
mov
mov
xchg
add
lret
push
dec
stos
enter
incb
or
loope
or
jae
mov
aam
jecxz
mov
imul
mov
push
lods
pop
dec
repz
imul
sbb
dec
stc
xor
mov
pop
inc
and
xor
add
mov
lret
lock
scas
outsl
adc
fiadds
dec
adc
ds
xadd
and
and
movsb
or
dec
fildll
and
movsl
stos
les
and
daa
push
sbb
jae
add
mov
jg
sbb
jge
ds
push
je
das
mov
push
setl
stos
xchg
fwait
jl
and
jp
jb
enter
mov
add
mov
mov
pop
add
testl
repz
mov
dec
mov
pop
jno
or
loop
sub
mov
add
daa
push
aam
pop
inc
add
in
pop
lcall
add
in
aad
xchg
hlt
mov
or
rorl
aas
idivl
xor
shl
sub
jl
mov
lcall
movb
push
sub
add
xchg
inc
sbbb
loope
push
adc
bound
or
mov
mov
shll
cmp
clc
xchg
hlt
ss
je
out
outsl
or
dec
sub
dec
repnz
stos
out
and
ljmp
mov
movsb
sub
xchg
jmp
mov
or
xor
cmp
push
mov
push
jb
aam
ret
cs
add
sbb
scas
push
inc
mov
dec
mov
std
testl
cmp
pop
mov
sub
outsl
push
dec
cwtl
loopne
push
push
jecxz
repnz
pop
pusha
jnp
sub
inc
imul
sbb
sub
stos
add
rorb
jnp
xchg
xchg
cmp
lcall
shrl
mov
jo
cli
lea
leave
push
xor
das
jo
gs
pushf
enter
stos
xchg
loop
xchg
xor
pop
jp
ljmp
int
adc
xor
add
addr16
cltd
jae
or
out
push
fs
ds
add
fnsave
inc
add
jp
lahf
lods
xor
call
inc
or
std
sub
cmc
pop
mov
jno
jbe
int
adc
mov
sub
imul
jg
push
rcl
xchg
pusha
mov
mov
xchg
xchg
stos
fs
call
int
jnp
push
repnz
cmp
xchg
cmpsb
mov
xlat
xor
jae
cmp
stos
xor
pop
push
cli
jecxz
dec
roll
in
inc
enter
loope
sub
imul
and
xor
insb
ret
mov
cmp
pop
pop
sub
out
call
fmulp
push
jp
gs
jno
test
popl
into
insb
and
xchg
inc
xor
ficoms
int3
jmp
insl
jns
fsubr
sbb
xor
scas
movb
lods
or
pop
jmp
mov
mov
dec
jb
xchg
mov
ret
mov
pop
into
test
or
inc
fidivs
cmp
jmp
into
frstor
popf
dec
push
adc
sub
sti
cmp
test
test
rclb
mov
mov
add
sahf
mov
xor
outsl
push
pusha
sub
lahf
cwtl
lods
pop
mov
in
stos
mov
adc
cmc
dec
shrb
sub
push
imul
imull
aaa
mov
fsts
xchg
ds
sub
lods
les
and
pop
push
into
test
mul
sub
or
mov
lret
insb
nop
and
and
xor
jo
shlb
mov
cmpsb
fbld
daa
inc
insb
or
sbb
add
movsb
jecxz
insl
cmp
jae
pop
jo
pop
sub
and
mov
or
adc
out
lds
vaddpd
lock
pushf
cli
ljmp
mov
ficoms
cmc
mov
faddl
pop
jmp
aaa
jmp
ret
mov
out
mov
push
fnsave
dec
movsb
push
mov
sub
mov
das
mov
cmp
movsl
dec
mov
push
or
call
adc
mov
mov
and
ss
ja
ja
aas
popf
gs
cmp
and
and
jecxz
mov
sub
cmp
in
sbb
imul
push
out
test
push
fdiv
test
js
xchg
adc
sbb
fmull
inc
fstl
call
dec
inc
arpl
inc
push
cwtl
or
mov
cmp
int
in
in
and
sub
in
mov
pop
mov
pop
lret
xchg
mov
sbb
jge
mov
pop
jl
dec
xor
lea
pop
push
xchg
xchg
dec
daa
cmpsb
xchg
dec
pop
pop
mull
leave
je
ja
xor
das
lret
ss
jno
movsb
add
lea
fidivrl
pop
push
data16
push
cs
xchg
inc
inc
mov
ret
mov
cmp
pop
shlb
jbe
ss
xchg
dec
imul
mov
and
push
loope
xchg
fwait
sub
sbb
stc
enter
mov
stc
mov
fldl2e
mov
stos
pushf
mov
aaa
mov
pop
mov
or
insb
int
push
ss
hlt
mov
aaa
gs
sti
adc
call
adc
sub
fstl
inc
cmpsb
in
adcb
fcmovnu
loopne
mov
pop
cld
lret
adc
dec
and
dec
or
sub
ret
test
push
imul
jno
mov
stc
dec
inc
lcall
or
clc
fcmovne
mov
fdivrl
fstpl
add
pop
xor
push
adc
mov
stos
mov
fst
mov
roll
mov
cs
hlt
imul
mov
jnp
dec
and
popa
repnz
nop
push
lock
pop
das
data16
data16
mov
aaa
push
sbb
or
mov
cmp
sbb
adcl
inc
clc
cmc
push
movsl
xor
pop
jno
and
lret
mov
fwait
lret
mov
rcrl
pop
faddl
xchg
add
out
sub
adcl
mov
cld
push
fwait
dec
mov
cmp
fnsave
data16
dec
enter
mov
icebp
pop
cli
loopne
fistps
jle
mov
ds
cmp
add
cmp
ds
mov
jb
dec
or
and
jl
dec
xor
pop
enter
test
and
lea
xor
out
int
jbe
fiadds
mov
mov
jl
mov
add
mov
fs
das
clc
xor
xor
test
pusha
jp
das
cmp
adc
mov
pop
loop
loop
or
aaa
pop
test
outsl
jbe
lcall
mov
mov
cmp
mov
push
aas
popf
andl
or
insb
jmp
movsl
push
push
mov
cwtl
rol
les
pop
cmp
cmp
sarl
shll
dec
mov
pop
das
sub
es
add
mov
or
cmp
addr16
movsb
insl
cmc
push
xchg
cmp
cld
mov
pop
mov
arpl
cmp
push
mov
sbb
xor
int3
les
hlt
pop
mov
sub
pop
sbbb
scas
xor
out
push
mov
sbb
popf
popa
pop
mov
ja
not
mov
cli
or
cli
mov
jle
xchg
fidivs
pop
push
rep
clc
adc
cmp
sub
cmc
xchg
imul
add
adc
rclb
push
dec
mov
add
xor
sbb
cwtl
mov
fcomps
loopne
cwtl
pop
stc
xchg
imul
loopne
daa
and
mov
xchg
stc
xchg
movsb
call
xchg
loopne
mov
lods
aaa
lret
xchg
in
orl
iret
mov
inc
sbb
in
add
lods
xor
into
cmc
jl
sbb
popf
icebp
jmp
pop
dec
xor
jl
outsb
pop
mov
cmpsb
into
mov
push
adc
or
inc
adc
js
ret
and
jno
push
sbbb
mov
mov
shll
sbb
mov
loopne
inc
add
imul
sbb
dec
aas
mov
mov
push
jb
imul
adc
daa
lock
mov
lds
sbb
ljmp
and
jle
int3
add
clc
icebp
popf
mov
jae
fsts
add
lock
lret
call
xchg
jl
mov
ss
imulb
mov
test
out
nop
sarl
sub
sub
and
inc
sbb
pop
mov
ja
add
cmp
sub
add
cmpsb
jl
dec
xchg
adc
pusha
pop
dec
mov
out
or
repnz
xor
and
es
xchg
stos
test
test
pop
cmp
scas
dec
xor
fs
and
sbb
or
cli
mov
into
jnp
sbb
push
hlt
cmp
and
inc
neg
mov
mov
mov
xor
pop
into
xor
sqrtps
lods
stos
jbe
out
lcall
out
loopne
xchg
lods
add
ds
jl
lods
and
mov
insl
push
nop
les
sub
inc
ljmp
mov
sbb
outsl
sbb
xchg
jo
mov
lods
outsl
repz
shrl
shl
mov
sbb
mov
ret
or
sbb
dec
js
daa
dec
dec
mov
fcomps
sub
adcl
cmp
out
scas
shrd
mov
mov
or
pop
andl
push
insb
dec
fcoms
test
inc
out
sub
je
std
jae
aam
in
fldl2t
fimull
out
das
inc
fcmovne
and
jge
ficomps
xchg
imul
jle
jno
lock
jmp
xor
dec
ja
cmp
cltd
sbb
and
push
mov
roll
das
ret
push
mov
xor
xor
sbb
pusha
into
loope
jecxz
mov
or
mov
shlb
cmp
scas
pop
sbb
xor
cmc
xlat
sbbb
rclb
inc
cmp
adcl
jp
mov
out
xor
stos
dec
in
xchg
mov
adc
stos
bound
in
push
inc
jnp
stos
mov
popa
and
imul
jge
jbe
cmp
sbb
sbb
cli
cmp
or
subb
and
lds
or
insb
and
cmp
lcall
aas
fldenv
xor
lret
add
jns
mov
in
and
xor
jmp
push
not
jns
lcall
std
xchg
xor
std
dec
fnstenv
loope
xchg
jg
lock
mov
pop
push
fwait
jo
inc
cltd
xor
or
cs
jae
cmp
push
movsl
test
and
mov
xchg
cmp
bound
mov
inc
mov
add
jb
outsl
notb
push
mov
lods
adc
push
sub
es
rcll
jle
mov
add
outsl
sub
jmp
outsl
push
mov
andl
jecxz
sbb
mov
psubq
scas
cmp
xchg
pop
inc
jno
loope
xlat
push
pop
lods
jge
rol
jbe
mov
xchg
sub
push
out
fnstcw
dec
push
xchg
cmp
test
sbb
fs
data16
inc
inc
sbb
xchg
int3
cmpps
fdivrs
pop
icebp
mov
cmpsb
leave
or
movsb
and
adc
or
push
mov
add
in
push
rol
jno
out
pusha
sub
jmp
repnz
fisubl
mov
test
loope
ljmp
inc
sahf
dec
scas
int
dec
jnp
pusha
pop
xor
pop
jb
add
outsl
stos
cmp
test
inc
outsl
ds
inc
jecxz
pusha
in
mov
sarb
push
xor
push
mov
push
jb
or
ret
push
and
mov
cmpl
js
add
movb
adc
mov
lock
push
bound
add
pop
enter
push
adc
imul
fldt
addr16
or
or
movsl
lock
or
lock
or
sbb
jecxz
sahf
mov
flds
outsl
push
aad
sbb
cmpsl
and
mov
inc
and
mov
xchg
jp
sub
dec
jg
leave
in
test
cmp
scas
xchg
mov
jmp
leave
sti
out
and
inc
ficoml
outsl
out
imul
fildll
adc
mov
xchg
pop
jl
push
out
in
fidivrl
or
fiaddl
jne
dec
addr16
pusha
fs
mov
shlb
imul
mov
fbld
mov
cs
stos
cli
dec
or
pop
push
pop
cmp
pusha
roll
adc
sti
sbb
pop
cmp
fdiv
setne
xlat
push
or
sarb
cmpsl
and
xor
mov
inc
jns
xor
inc
add
pop
and
and
push
nop
fwait
sbb
inc
rorb
adc
and
xor
cwtl
fs
fsts
jge
movsl
push
cs
add
pop
jge
loop
test
jle
lahf
mov
inc
outsl
rorl
cmc
es
into
insl
test
fnsave
in
mov
xchg
push
lret
mov
and
cmp
add
mov
add
negb
and
adc
les
xchg
adc
sbb
adc
xchg
and
mov
dec
mov
xlat
bnd
sbb
in
es
fists
enter
clc
gs
xor
in
pop
inc
push
xchg
sbb
ja
pushfw
movsb
push
xor
paddd
push
mov
push
ret
stos
and
push
xchg
fimull
xchg
inc
dec
and
repnz
xchg
xor
cli
mov
sub
nop
mov
inc
mov
sbb
adc
or
stos
test
out
loop
pop
in
inc
mov
sbb
clc
scas
movsb
xor
push
dec
lcall
in
nop
and
xchg
mov
out
hlt
fsubrs
mov
xchg
fistl
push
mov
pop
jle
pop
push
adc
sbb
push
jp
in
xchg
push
adc
jp
cmp
sub
cwtl
adc
movsb
xchg
data16
dec
dec
into
mov
cmp
jge
mov
rcrl
sbb
mov
ds
popf
les
cmp
loop
outsl
movb
jmp
call
xchg
push
roll
hlt
sti
mov
out
loop
shlb
mov
add
cmp
sub
ja
jecxz
cmp
lods
add
cmp
dec
dec
jg
push
add
lahf
sbb
addr16
lods
mov
fs
fdiv
pop
popf
pop
mov
or
pusha
cmpsb
inc
outsb
pop
cmp
adc
push
stos
mov
mov
jg
sbb
lea
pop
jecxz
adc
sub
out
lods
pop
mov
enter
mov
les
lock
daa
mov
shl
mov
fbld
fwait
xchg
mov
mov
jb
mov
icebp
xor
xor
lds
cs
or
into
fwait
push
jmp
imul
sub
and
rcl
ljmp
xchg
and
mov
fistpll
push
es
pop
cli
inc
pop
jmp
adc
fld
mov
icebp
inc
addr16
and
mov
scas
mov
pop
lahf
jo
loope
or
mov
pop
jbe
pop
rolb
jmp
lds
push
jp
push
mov
shr
incl
mov
in
jb
mov
or
push
mov
sahf
jae
sub
fidivrs
ja
lret
out
sti
outsl
cmpsb
arpl
cmp
add
fildll
push
push
movsl
pop
push
fbstp
out
fldt
and
mov
push
sbb
sub
adc
xorl
call
shrb
xchg
cli
add
repnz
mov
jle
stos
sbb
pop
sbb
mov
js
xor
pop
dec
aad
lahf
pop
jg
and
jo
pop
fsubrs
or
stos
sarb
das
inc
mov
mov
popa
fcompl
and
daa
jge
mov
jnp
dec
dec
ds
cmp
push
pop
push
cmp
cld
call
mov
hlt
xor
sub
xor
imul
add
mov
adc
lods
outsl
out
inc
xchg
xor
mov
fisttps
or
mov
and
jp
jae
jb
movnti
push
mov
call
stos
jmp
xchg
jg
mov
mov
imul
stos
sti
rcl
imul
mov
mov
shll
loope
daa
in
adc
cwtl
in
scas
adc
sub
jb
sbb
movsl
jge
inc
inc
roll
insb
cmp
pop
loope
fwait
aam
std
and
add
andl
mov
pop
inc
mov
xchg
sub
mov
add
push
pop
mov
cmc
xchg
pushf
clc
jmp
test
mov
sbb
mov
jp
jp
sbb
or
sbb
and
sub
push
je
std
inc
pop
xchg
loopne
test
test
push
cltd
aaa
pop
push
cmp
inc
jnp
roll
shl
stos
push
mov
clc
mov
shrl
xor
fimuls
mov
int
jp
inc
cmp
fildl
cmc
fbstp
stos
sub
jbe
stos
push
inc
dec
test
andb
sbb
and
fstps
xor
xchg
into
lret
sbb
iret
sub
xchg
cltd
sbb
lds
add
pop
xchg
mov
and
xor
pop
push
fsubl
lret
pushw
subb
mov
sbb
mov
out
loope
mov
mov
inc
push
lahf
in
jb
nop
mov
adcb
loope
jmp
mov
repnz
mov
or
cmp
outsb
jp
sbb
mov
jnp
clc
push
and
rcrl
xchg
imul
sub
insl
adc
dec
je
inc
fcomps
in
cmp
adc
cmp
fsubrl
shlb
in
add
fstl
std
xchg
adc
fildl
and
jmp
enter
mov
adc
aas
out
jg
in
mov
fildll
movsl
in
pop
mov
out
push
or
fwait
dec
test
outsl
mov
sbb
fistpl
jg
dec
mull
test
das
test
ds
sbb
rcl
lds
out
loope
stos
popa
scas
jns
mov
add
dec
mov
adc
mov
dec
loop,pt
push
add
aad
cmpsl
xchg
jp
inc
dec
out
loopne
movsl
sti
pop
push
cwtl
fisubrl
push
subl
xchg
add
mov
aam
sub
clc
fwait
cmpsb
xorb
ljmp
jo
enter
and
repnz
leave
adc
loop
loope
xchg
and
fwait
enter
addr16
cmp
push
outsb
shlb
push
test
out
insb
vphadduwq
mov
jg
adc
inc
repz
add
xchg
sub
inc
xrelease
jp
add
and
iret
jae
mov
loop
pop
test
out
mov
clc
sbb
inc
mov
cmc
out
lea
pop
pop
mov
into
sahf
jp
nop
inc
clc
push
arpl
inc
pop
test
rorl
leave
jae
add
mov
imulb
mov
filds
inc
in
int3
and
fsubrs
cmp
jnp
popf
cmp
ss
xor
sahf
cmc
shll
ror
adc
ret
les
jle
push
int3
notl
push
lret
cs
xchg
mov
xchg
inc
sub
xlat
lds
mov
lahf
fcoms
or
xchg
push
aaa
clc
xor
xchg
sub
sub
pop
xchg
and
cltd
stc
dec
ss
call
imul
push
lahf
movsl
or
lret
cmp
mov
xor
inc
mov
sbb
sub
iret
aas
repz
jns
scas
dec
dec
addr16
scas
loope
sbb
mov
popa
dec
cmp
pop
out
enter
jp
popf
jne
hlt
stos
pop
adc
xchg
shlb
jns
loop
add
adc
adc
sub
fcoml
fdivr
mov
push
das
adc
push
mov
rolb
jno
sbb
scas
mov
sub
sub
xor
sbb
outsl
sub
cmpsl
fcoml
jg
ficoms
or
push
dec
pop
xchg
js
mov
insl
and
or
or
mov
outsb
xor
sub
sub
insb
es
popa
pop
in
ja
into
repz
sti
outsb
adc
mov
jne
cwtl
cmp
and
es
jmp
decl
call
shl
xlat
adc
leave
out
in
mov
jle
pop
push
adc
ficoml
lods
mov
push
icebp
es
aam
ret
inc
in
jge
sub
rcrl
inc
mov
xor
dec
xor
jecxz
outsl
push
adc
loope
ficoml
xor
cmp
aaa
jg
shll
or
inc
fnstcw
int
in
or
pop
pop
and
inc
jbe
inc
jmp
sbb
outsl
jecxz
insl
jb
test
xor
stc
or
pop
stos
inc
mov
notb
decb
inc
out
inc
mov
fidivl
adcl
mov
daa
xchg
test
pop
cli
mov
pushf
arpl
dec
sub
xor
rorb
ret
and
setbe
jae
rolb
and
mov
mov
aam
add
cli
in
out
inc
jae
out
cmp
adc
scas
mov
inc
arpl
lret
push
addr16
nop
dec
les
mov
mov
mov
ja
es
push
mov
push
xor
mov
push
jne
pop
or
fcmovbe
mov
push
out
push
dec
ja
roll
cmp
jp
jo
or
cmpl
mov
push
cmc
jbe
mov
pushl
ja
xchg
and
sub
rcrb
out
cmpsb
popf
fs
ds
ljmp
in
negb
int
iret
outsl
in
jo
pop
push
daa
test
jg
and
rorb
loopne
or
add
cmp
inc
inc
sbb
cmp
mov
sub
add
je
cwtl
or
imul
test
add
sbb
sbb
or
jle
inc
jp
test
add
mov
insb
mov
adc
inc
not
xlat
cs
and
xlat
mov
mov
idivl
pop
sti
jnp
imulb
rcrl
fsubrl
dec
mov
idivl
jmp
cmp
xchg
mov
fnsave
jmp
mov
sahf
das
pop
imull
jb
in
cmp
loopne
gs
les
in
das
jns
out
xor
xor
add
clc
dec
xchg
mov
push
int3
mov
fiaddl
lods
dec
das
pop
mov
popa
fwait
cmp
testl
aaa
data16
psubw
jle
ljmp
inc
mov
mov
and
mov
inc
movsb
aad
sub
cmpsb
test
add
insb
pushf
ja
pop
subb
insl
jbe
xor
add
adc
roll
icebp
repnz
push
inc
mov
fmull
inc
std
cmp
loope
jecxz
js
outsb
add
and
in
pause
xor
xor
jns
fcoml
xchg
mov
cltd
lock
imul
mov
sarb
or
int3
mov
jo
icebp
sub
fiadds
pop
xchg
cmpsl
cld
jle
pushf
rcll
mov
hlt
push
or
outsb
mov
mov
cmpsl
mov
test
pushf
sbb
mov
xchg
cmpsl
das
clc
push
fimuls
and
dec
and
cmp
mov
out
xchg
mov
ja
pop
repz
call
xchg
xor
pushf
pop
imul
sub
mov
jecxz
cmc
push
mov
mov
gs
je
xor
push
mov
push
das
push
inc
test
mov
or
sub
jge
add
dec
sbb
mov
mov
jmp
sbb
or
push
in
clc
ds
mov
mov
mov
ficoml
adc
add
mov
or
test
gs
inc
ffree
adc
hlt
insb
mov
xchg
insb
lret
divb
xchg
shlb
ja
mov
cld
test
and
xor
mov
shr
es
leave
push
cmpsl
jmp
loopne,pn
inc
inc
pop
xor
imul
int
arpl
xchg
cmp
push
or
sub
xor
or
push
rcl
and
and
cmp
push
jnp
rorb
data16
adc
int
outsb
sahf
lcall
push
mov
adc
dec
stc
cmp
addr16
jnp
fs
stc
dec
adc
pop
adc
xlat
roll
mov
sbb
and
xchg
fwait
push
pop
bound
jae
lahf
and
ds
lea
fisubs
mov
andl
in
and
into
push
push
cmp
cli
incl
push
ret
lds
adc
jne
iret
jo
das
mov
xlat
frstor
in
popf
stos
js
cmp
inc
lods
popf
addr16
dec
das
lods
pusha
lret
and
jl
test
jle
lea
aaa
mov
jecxz
in
jmp
push
xchg
stos
inc
xor
rorb
jb
lock
test
sbb
mov
cmp
rcrb
and
lret
fbstp
sub
faddl
jg
push
xchg
out
loopne
imul
movsb
into
xchg
bound
data16
inc
lea
movsb
das
pop
aaa
xchg
nop
pop
roll
inc
lods
movsbl
imul
fidivs
xchg
loope
fidivl
roll
mov
ja
fdivr
xchg
jnp
insl
sbbl
xchg
inc
shrl
push
sti
fcoms
cmpsb
mov
pop
or
pop
jge
pop
jle
int
sub
ficoms
pushf
jae
es
test
and
pop
scas
adc
jecxz
xor
roll
sar
pop
push
or
inc
cmpsl
pop
aaa
in
loop
inc
test
shll
mov
les
cmp
push
test
dec
adc
mov
mov
or
xchg
loop
popf
xchg
push
cmp
pop
xchg
pop
sub
lock
inc
cmpb
in
loop
and
lcall
push
addr16
mov
repnz
pop
xor
mov
adc
scas
dec
bound
movsb
push
je
ret
lea
aam
andl
loope
insl
lret
lock
cli
sahf
mov
mov
les
pop
xchg
mov
push
mov
je
or
adc
mov
clc
das
mov
jnp
xchg
shrb
shl
and
cld
push
imul
fsubs
and
push
test
jmp
xor
fdivrs
jge
cld
std
and
xchg
mov
push
dec
cld
dec
cld
lods
jmp
rolb
cltd
aam
add
sbb
outsl
jns
imul
daa
dec
push
into
call
xchg
in
lret
ret
dec
inc
mov
push
sub
xchg
lods
inc
mov
cld
mov
jg
pop
call
loopne
dec
sub
jns
stc
gs
out
pop
mov
data16
pop
scas
xor
scas
lods
dec
into
inc
mov
cltd
mov
popl
popf
js
es
faddl
jne
sub
push
or
xlat
push
dec
push
add
xlat
daa
outsl
cwtl
mov
ss
lret
scas
lcall
sbb
ja
lds
mov
cmp
pop
jne
aas
sub
into
add
rol
in
adc
adc
data16
mov
push
xor
push
xchg
sub
sub
incb
xchg
jecxz
lret
jo
outsl
sub
lahf
jmp
mov
inc
xor
pop
mov
mov
fists
push
ds
mov
sbb
rclb
sar
mov
mov
clc
xor
jp
fidivl
imul
out
sbbl
outsb
sbb
sbb
out
cmpsb
and
sti
out
stos
scas
xchg
fiadds
mov
into
push
repnz
dec
xchg
pop
mov
cmp
mov
data16
dec
fimull
ds
push
lea
addb
mov
mov
test
mov
jmp
imul
lods
mov
cmp
xchg
push
pop
ja
std
dec
jmp
repz
je
mov
push
fldt
sbb
xor
mov
inc
dec
sub
or
xlat
pop
jl
cmpsl
call
je
mov
xlat
sub
insb
mov
seto
jmp
loop
pop
inc
xor
mov
push
out
loope
ds
addb
ret
aas
mov
push
pop
mov
mov
lock
or
xor
lret
jge
clc
mov
test
pop
movsb
pop
mov
lahf
pop
push
mov
jae
pusha
sbb
xor
imul
ds
in
insl
mov
or
sub
mov
add
aad
mov
test
xchg
inc
or
push
out
mov
mov
xchg
test
sub
imul
sbbb
test
add
pop
push
xchg
rcl
lcall
test
mov
ds
mov
lret
pop
adc
xor
test
insb
push
das
push
outsb
int3
adc
popa
popf
pop
fnstcw
cmpsl
movsl
mov
mov
or
in
imul
add
test
mov
ret
daa
sub
outsl
stos
xchg
loopne
aaa
xlat
xchg
inc
jns
pusha
cli
iret
adc
inc
mov
enter
fmuls
adc
push
push
jbe
mov
fdivs
pop
stos
jo
sub
ljmp
mov
lds
jge
popw
xchg
mov
cltd
mov
int
fwait
repz
out
or
mov
mov
dec
mov
aad
cmpsl
push
add
sub
leave
outsb
adc
fisttps
inc
push
mov
sarl
test
dec
sahf
mov
adc
rolb
xchg
xchg
pop
daa
test
and
mov
or
pop
add
xlat
call
stos
lahf
cmpl
aaa
leave
cmpl
mov
xchg
and
outsb
or
sub
jle
cmp
icebp
cltd
cltd
adc
test
loop
lahf
gs
sbb
dec
pop
push
out
test
mov
mov
shl
jmp
in
mov
mov
pop
mov
aas
popf
push
sub
sahf
rcrl
or
das
push
mov
mov
jecxz
inc
notb
repz
xchg
repz
jae
movsb
fs
orb
jle
sub
lods
mov
push
sbb
dec
pop
xor
sbb
cmp
mov
orb
out
push
pop
add
cmp
inc
lret
mov
inc
push
mov
pop
inc
jecxz
sbb
cmp
sahf
repnz
ret
leave
pop
fists
cmp
das
sub
cmp
addr16
shl
daa
pop
data16
xchg
jns
mov
xchg
push
xor
and
xor
je
inc
dec
test
mov
pandn
cmpsb
fistpl
mov
sahf
jb
mov
sbb
cwtl
xchg
mov
mov
mov
pop
cmp
pop
aad
int3
sbb
rolb
or
xor
mov
jle
fnstcw
arpl
sti
sbb
and
sub
or
cwtl
lahf
cld
sub
cs
lahf
add
or
sbb
or
and
pop
xchg
sub
imul
push
fisubs
sbb
fcmovnbe
das
mov
lret
mov
fisttps
aad
frstor
jmp
add
inc
add
add
mov
pop
scas
fadd
xor
add
out
dec
inc
sub
call
dec
jo
adc
out
int3
bndstx
jae
add
push
clc
adc
idivb
test
mov
cmp
shlb
out
jp
mov
jbe
push
pop
and
and
adc
dec
leave
push
and
mov
mov
iret
daa
outsl
sub
aaa
push
dec
push
push
iretw
xlat
fildl
int3
aam
lret
inc
mov
xchg
in
adc
cmpsl
in
ljmp
mov
pop
push
pushf
push
adc
std
rep
push
ror
stos
add
mov
jmp
aam
mov
pop
jb
cmp
cmp
pusha
mov
test
rorb
faddl
pushf
cmpsb
rolb
xchg
repnz
mov
jmp
arpl
out
aaa
lcall
jae
or
mov
out
out
out
push
cmp
push
pop
mov
fs
jmp
imul
enter
pop
jno
dec
mov
xchg
mov
add
mov
fwait
mov
iret
ds
test
xor
std
mov
sbb
fucomi
rorb
mov
push
jne
mov
cld
lock
ja
faddp
cli
xchg
das
stos
sti
imul
sbb
imulb
mov
movsb
lea
jmp
mov
xor
mov
fistps
mov
in
das
mov
or
ljmp
mov
pop
push
xchg
pusha
jne
lcall
and
aad
pop
pop
push
mov
jecxz
cmp
mov
gs
fdivs
loop,pt
sub
subl
es
cmpsl
imul
mov
outsl
add
inc
sub
mov
sbb
inc
sub
das
push
xchg
lea
push
add
xchg
loopne
push
add
xor
xchg
sub
popf
pop
jl
cmc
sbb
ret
fildll
lods
fwait
notb
xchg
xor
mov
cltd
cmpsl
rorl
daa
stc
mov
pop
pop
leave
roll
mov
clc
or
xchg
mov
ja
add
jno
jb
shll
pop
mov
sub
and
outsb
mov
mov
xchg
inc
or
add
add
dec
stc
loopne
mov
pushf
repz
add
ret
xchg
dec
push
fmull
enter
mov
iret
jnp
push
jae
adc
add
or
jnp
sub
lret
push
sub
mov
mov
xchg
aam
xor
movsl
ss
sub
pop
test
add
pop
inc
movsl
mov
insb
jae
in
xlat
mov
dec
adc
insb
push
cmp
ret
mov
push
addr16
xor
xchg
hlt
aad
popf
jno
adc
mov
jns
ficomps
sub
mov
xchg
ss
dec
jo
shr
lahf
pop
sub
icebp
out
cmpsb
and
sahf
jne
sbb
es
pop
sub
push
psubb
jo
or
xor
push
shll
jmp
pop
add
lock
mov
pop
sub
movsl
cmpsl
fcoms
gs
icebp
lock
adc
xchg
test
jle
fadd
les
push
ljmp
mov
ljmp
push
movsl
push
mov
mov
lmsw
xchg
mov
cli
xchg
ficoml
cmc
or
imul
xchg
add
xchg
les
pop
js
add
rcrl
repnz
xor
test
or
pop
cld
jno
dec
lods
mov
dec
mov
out
dec
pushf
adc
and
or
in
cmpsl
rcr
and
and
movsb
dec
jl
push
fs
repnz
xchg
mov
mov
sbb
int
mov
mov
xchg
in
or
mov
push
imulb
icebp
inc
imul
fsub
mov
push
dec
stos
loop
adc
scas
sub
dec
pmaxub
shll
and
sub
sti
lahf
xchg
and
shlb
movsb
insb
jle
ret
jo
call
dec
mov
icebp
mov
dec
js
jae
jo
xor
les
sub
pop
dec
adc
or
test
testl
ret
daa
in
jno
sbb
notb
aas
std
sub
mov
jecxz
shr
cmp
lret
call
movsl
jg
cmp
clc
pop
lods
xchg
push
mov
cli
cmp
fs
pop
pop
adc
scas
jne
jge
mov
sbb
jge
fcompl
addr16
in
cwtl
int
cmp
inc
jg
mov
sbb
decl
and
dec
cmp
or
cmpb
ret
movl
imul
lret
insb
add
inc
inc
jb
push
xorb
sub
pop
jmp
fbstp
sub
mov
pop
cmp
or
jle
pop
push
xchg
pop
arpl
cltd
inc
xchg
sub
jno
in
dec
sub
sbb
jae
or
dec
xor
pop
mov
jae
test
or
mov
loopne
stc
sbb
call
mov
jecxz
mov
pop
adc
inc
cmp
push
push
xchg
out
nop
xor
mov
add
and
mov
outsb
movsb
lods
flds
dec
sarl
scas
inc
fnstsw
hlt
add
jg
inc
mov
xchg
inc
lret
adc
fcoms
jecxz
andb
testl
addb
push
rorl
dec
lcall
iret
push
jmp
inc
pop
loopne
xchg
mov
dec
jge
out
push
hlt
inc
mov
sbb
test
cs
push
pop
rcll
repz
into
xor
cmp
fildll
push
inc
xor
mov
xchg
pop
je
mov
dec
lret
movsb
add
shr
xor
sbb
into
data16
aaa
xchg
dec
cmp
or
mov
ja
ss
add
sahf
pop
mov
mov
push
rcrl
ljmp
cmp
xchg
inc
shrb
sub
mov
dec
inc
sbb
je
jl
cli
push
cwtl
jmp
popa
mov
stos
sbb
jmpw
xchg
pop
shr
mov
pop
lods
leave
sbb
or
dec
push
mov
and
mov
int3
and
mov
jle
aaa
es
and
mov
add
je
lods
add
into
pushf
sbb
jns
jmp
and
pop
loope
roll
test
idiv
xchg
mov
gs
and
lret
push
sub
sub
adc
pop
cmp
inc
xor
sub
push
sbb
inc
xor
dec
and
dec
cmp
daa
cmc
sbb
jecxz
push
xchg
sbb
int
jbe
xor
mov
outsl
inc
jl
rorb
jl
and
outsb
in
push
popf
cmpsb
les
cmpsl
sahf
cmp
test
ljmp
lahf
adc
ljmp
aam
xor
xchg
sti
mov
ret
inc
pop
mulb
push
mov
cld
or
inc
xchg
out
adc
lea
or
fstl
pop
imul
ljmp
push
daa
jmp
mov
sbb
jne
cmp
pop
sub
cli
xlat
sbb
or
or
rcr
ret
and
mov
nop
aad
out
aaa
cmpsl
and
sub
loopne
jp
lcall
xchg
in
cmc
roll
shlb
or
and
push
cwtl
mov
call
ret
lock
dec
cltd
repnz
mov
stos
mov
jns
aas
xchg
dec
mov
test
inc
mov
fisubrs
mov
and
push
jne
mov
out
out
lock
popf
lock
les
sbb
outsl
or
pop
jecxz
xor
test
aas
push
adc
shll
in
in
arpl
adc
into
insl
scas
rcrb
popf
mov
pop
sub
pop
enter
in
inc
jb
mov
cwtl
fsts
in
sbb
scas
cs
cwtl
addr16
or
rcr
mov
rcrl
sarb
inc
int3
mov
cmp
flds
pop
dec
mov
mov
jns
mov
xchg
loopne
cmp
mov
aad
test
imul
cmpb
sbb
lds
enter
mov
cmc
fildl
imul
adcb
out
xor
xchg
xchg
repnz
pop
ret
fistps
sbb
stos
or
adc
int
pop
fsubrl
mov
pusha
xor
adc
stc
sub
push
mov
cmp
lock
ja
enter
popa
xor
lret
lcall
pop
sbb
fmuls
dec
cmp
lods
rorl
das
lahf
hlt
sahf
sbb
aam
test
cwtl
lods
jbe
fmul
ret
add
sbb
mov
sbb
cmp
xor
mov
cmp
lods
dec
imul
mov
pop
xor
push
in
repnz
cmp
mov
and
add
sbb
adc
daa
adc
cmp
fsubrs
scas
pop
pop
fcomip
fists
sahf
gs
adc
cmp
jbe
insb
roll
rcll
push
lods
sbb
sub
mov
dec
pop
push
pop
fsubrs
ret
loop
and
mov
xchg
push
sbb
dec
sbb
daa
and
int
pop
test
repz
pop
ret
jecxz
adc
test
arpl
jae
dec
sarw
fs
icebp
stos
pop
mov
rcrl
ljmp
movsb
iret
cli
aaa
inc
and
adc
in
call
dec
push
out
and
jle
xor
sahf
push
sub
mov
mov
stos
pop
cmpsl
idivb
and
lcall
adc
lea
push
loope
sub
mov
jb
repz
in
pop
mov
cmp
mov
push
loop
inc
out
push
jns
xor
repz
test
loopne
push
cld
mov
or
xor
cmp
and
push
call
test
call
sti
je
push
ss
mov
lods
hlt
xchg
imul
aad
sub
mov
dec
add
sub
outsb
icebp
xor
sub
scas
out
repnz
test
lahf
lret
je
jne
out
cmp
jb
push
cmp
cmp
clc
inc
xchg
daa
xchg
xor
sbb
adcb
mov
fstpt
sbbb
fisttpll
addr16
mov
call
or
jle
in
out
mov
jbe
aas
mov
mov
jno
mov
dec
lock
fistpl
mov
sub
loope
outsl
out
ljmp
xlat
mov
cs
ljmp
cmp
lret
or
mov
daa
push
cmp
dec
in
js
inc
fldl
inc
xchg
push
mov
cwtl
pop
pop
xchg
daa
enter
push
loope
in
cmp
popa
mov
roll
in
jnp
cmpsl
nopl
xor
add
xchg
push
loop
enter
push
cs
cltd
cmp
inc
xor
push
mov
push
mov
popa
jp
popa
dec
imull
out
push
jne
int
dec
cmp
or
cmpsl
in
aad
lret
mov
mov
push
mov
inc
das
xchg
sub
shlb
movsb
adc
xchg
or
jge
push
fildl
mov
jmp
shl
insb
enter
sar
jp
mov
xor
aam
test
inc
sub
push
dec
cli
data16
enter
sub
push
movsl
adc
popa
daa
lcall
xchg
jmp
xor
pushf
push
inc
add
sbb
dec
out
sbb
dec
mov
add
psrad
outsl
jl
enter
ror
test
jae
and
pusha
movsl
jl
out
ret
jno
cmp
jnp
push
pop
imul
and
dec
dec
ficoms
std
inc
mov
and
popa
into
push
sub
cli
xchg
add
lea
mov
mov
subl
les
mov
jmp
inc
xor
dec
pop
dec
push
jp
movsb
add
lcall
es
xor
testb
xor
cmpsb
sub
fists
inc
test
and
aaa
mov
xchg
out
rolb
jns
pop
hlt
in
pop
ss
andb
mov
in
rcll
pop
mov
test
dec
out
xchg
shl
cmp
cmp
adc
pop
and
mov
sbb
sbbb
das
jp
aaa
js
sbb
xchg
push
push
push
mov
iret
mov
dec
cmpsl
aam
ficoms
pop
xchg
insw
dec
mov
imull
bound
adc
enter
adc
aas
inc
inc
sub
iret
outsl
rcrb
call
fimuls
dec
sub
dec
xor
mov
lea
mov
iret
leave
jae
mov
sub
andl
decl
xchg
mov
cld
imul
or
sti
movsb
sbb
jecxz
add
xorl
push
xchg
shrb
fcmovne
lods
call
add
and
jecxz
in
or
in
repnz
add
lret
push
loope
sub
cmp
mov
inc
leave
mov
pop
xchg
ljmp
push
push
mov
shrl
je
pop
pop
sub
mov
in
mov
dec
add
xchg
mov
jmp
push
xlat
cmp
xor
and
add
xchg
std
popa
adc
push
and
ret
in
push
push
cmp
mov
mov
incb
fisttpll
fistl
and
stos
jge
aam
loop
fisubs
add
inc
or
ja
mov
jecxz
lret
test
or
std
pop
fisubs
adc
and
and
fs
lock
mov
cmp
jmp
xor
jge
mov
popf
repz
repz
iret
pop
and
adc
mov
lods
mov
mov
movsb
arpl
cmc
sarl
filds
cmp
or
pop
sub
xor
movsl
dec
mov
push
pop
movsb
leave
xchg
iret
xor
add
jecxz
call
jne
stos
cmp
std
dec
adc
inc
int
adcl
mov
push
stos
pop
lret
jbe
rcrb
sub
mov
out
pop
inc
into
xor
loop
lret
ja
mov
out
xchg
insb
or
fwait
enter
shlb
mov
leave
jg
stos
add
lods
insb
xor
pusha
testl
and
add
inc
push
fimull
scas
mov
shrd
mov
jno
loopne
out
adc
in
test
popa
movsb
push
scas
or
inc
and
fcoms
mov
into
add
popf
dec
mov
pop
daa
inc
mov
shr
gs
adc
sbb
add
sti
dec
stos
call
sbb
cli
les
dec
aad
jp
jl
fmul
adc
fmull
xchg
loop
insb
jle
and
aad
cli
jmp
inc
jge
lock
lock
adc
cmp
test
push
sbb
xchg
std
mov
add
pop
xchg
cwtl
ds
pop
sbb
push
adc
fcmovnu
mov
sbb
test
push
imul
mov
push
jle
push
mov
cmp
ljmp
inc
inc
pusha
movsb
mov
fdivrs
cmp
jae
pushl
loope
dec
mov
add
repnz
lcall
not
out
pop
hlt
cmc
push
clc
es
out
inc
push
mov
add
xlat
and
fisubrs
push
sub
mov
xlat
xlat
adc
imul
jmp
pop
mov
imul
and
pop
push
xor
mov
je
and
sbb
fcmovb
mov
adc
pop
fsubs
xchg
call
or
fcoms
mov
push
xchg
mov
test
insb
sbb
addl
push
cltd
dec
jl
mov
sub
sbbl
hlt
in
in
call
and
inc
jns
insl
pop
inc
add
out
enter
fdivp
xchg
std
inc
xchg
pusha
ret
popa
shl
lods
pop
inc
push
js
or
jbe
jne
out
jne
push
incl
xor
mov
mov
lcall
fwait
popf
fidivs
adc
xchg
push
jo
mov
jmp
xlat
out
push
loopne
daa
cltd
ja
in
repnz
cmpsl
mov
icebp
cltd
aam
xchg
data16
pop
adc
inc
cld
jb
hlt
in
stos
sub
or
mov
das
iret
ja
shrb
in
notl
pop
sbb
outsl
add
mov
je
stos
and
jle
sub
sub
mov
push
jg
cwtl
sub
cmp
push
pop
je
mov
xchg
xor
xor
cmpsl
sbb
sarl
arpl
ljmp
pop
mov
mov
cmpsb
into
xchg
xchg
mov
adc
setg
es
xchg
sub
gs
imul
test
mov
cld
rolb
fs
xorl
gs
add
or
pop
mov
pop
mov
mov
pop
sub
loop
leave
sub
mov
pop
clc
push
in
arpl
mov
mov
inc
pushf
push
es
das
lods
xlat
sbb
xchg
inc
test
lods
divl
push
negl
dec
out
fsubrl
dec
aaa
out
push
jecxz
hlt
dec
xchg
jl
jecxz
cmp
data16
int3
mov
lods
js
out
jae
mov
shlb
sbb
fwait
shr
pop
sbb
arpl
xchg
imul
inc
shl
mov
and
iret
jbe
jmp
aam
cmp
push
imul
mov
mov
adc
pop
lods
dec
imul
call
inc
xchg
inc
cmp
sbb
dec
scas
cli
mov
scas
sub
fwait
movsl
aam
inc
cmpl
sbb
ja
sub
mov
adc
and
andb
jp,pn
ljmp
xor
jno
insl
cmp
jo
repnz
das
test
push
pop
sub
cwtl
and
sbb
minps
cmp
cmp
in
cmp
scas
fsub
fcmove
or
mov
dec
mov
rcr
ja
push
pop
int
ret
sti
xor
push
cmpsl
addr16
pop
iret
inc
mov
popf
es
inc
xorl
lret
mov
movsl
int
cld
in
dec
sub
pop
cmp
inc
mov
sar
fildll
fiadds
stos
shll
cmp
xorb
int3
clc
addl
js
jge
mov
inc
enter
in
call
rcll
jo
cmp
sub
push
js
daa
daa
mov
inc
fs
cwtl
sub
test
movaps
pusha
or
jno
adc
cmp
mov
aam
ljmp
mull
push
rorb
sub
xchg
xor
jmp
mov
es
bound
fidivs
push
sbb
or
inc
loopne
xor
subl
rclb
add
xor
pop
int3
ror
mov
add
bound
xchg
lds
subl
push
xchg
adc
xchg
cmp
lea
adc
popf
ds
jp
xchg
cltd
mov
ret
nop
add
ss
scas
cmp
lods
fcmovnbe
rorl
sub
lret
scas
scas
jbe
inc
push
mov
test
ljmp
cmp
lret
dec
pusha
mov
and
push
dec
subl
mov
or
fldt
lret
scas
aaa
xor
pop
adc
add
mov
pop
jg
fistpl
test
ss
std
jne
jb
ja
pop
pop
movsl
test
xchg
xor
icebp
popa
jmp
lret
push
in
fsubl
idivl
cld
and
ret
loopne
stos
int
jge
sahf
jmp
div
sub
cmpsl
jbe
xor
mov
pop
dec
icebp
dec
rcrb
int3
inc
rcrl
jbe
fildll
rcl
cmpsl
sbb
mov
mov
in
sub
cmp
test
fcoms
test
add
mov
aad
xchg
mov
pushf
loopne
jne
test
fcoml
mov
or
push
movsl
inc
jno
or
mov
lock
out
xchg
les
xor
fsubrs
dec
or
pminub
cwtl
stos
fsubl
std
sub
and
and
fwait
insb
shrl
nop
cmp
loope
into
adc
cmp
jae
mov
mov
mov
dec
mov
test
jb
test
xor
push
sahf
test
lds
repz
push
fdivrs
ljmp
movsb
sub
data16
mov
dec
ror
aam
mov
and
int3
jne
sub
adc
mov
xor
push
cwtl
icebp
pop
movsl
jo
ds
dec
fs
jp
cmpsl
jae
jecxz
loope
icebp
pop
ffreep
xor
mov
mov
call
sub
add
repnz
pusha
inc
out
inc
std
mov
inc
cltd
xor
mov
mov
loop
mov
adc
fwait
repnz
loopne
movsb
mov
outsb
repz
inc
mov
push
xorl
adc
add
test
mov
sbb
add
mov
shll
mov
imul
les
xchg
jb
jge
stos
nop
movsl
ja
mov
insl
dec
pop
xchg
dec
ret
es
add
insb
pop
aad
bound
xor
cmp
and
mov
repz
aas
sbb
in
rcrb
add
sub
jmp
int
xor
sub
nop
das
mov
adc
icebp
cltd
xlat
pusha
int3
je
jmp
in
jo
gs
xchg
xor
call
adc
push
dec
xchg
jns
pop
aaa
cmpl
pushf
cmp
loopne
popa
xor
xchg
daa
data16
pop
test
or
xor
fucomip
push
xor
or
mov
xchg
mov
cmp
lock
inc
jle
add
add
jp
cmp
orl
xchg
or
clc
inc
dec
mov
hlt
mov
mov
sub
push
inc
mov
stos
add
add
data16
pop
cmc
fldcw
int3
pop
xlat
jbe
dec
add
adc
mov
sub
mov
jbe
sbb
or
repz
push
jne
sbb
cmp
sbb
and
fsubrs
mov
dec
and
mov
sub
mov
xor
mov
jo
inc
cmpsb
adc
ficoml
xchg
push
pushf
int3
push
sbb
mov
and
sub
mov
sub
das
push
or
sub
out
aaa
pop
std
pop
dec
jbe
pop
cmp
stos
mov
push
inc
les
inc
fiadds
inc
insb
adc
xchg
sbb
jecxz
push
dec
pop
pop
push
dec
dec
dec
jmp
cmc
les
jecxz
mov
mov
jb
pop
pop
mov
in
lock
mov
xchg
dec
in
push
insl
or
xchg
sbb
insl
insb
jp
mov
xchg
add
cmp
jb
fstpl
rclb
js
iret
xor
int
imul
js
imul
jnp
or
xchg
push
ret
add
sbb
scas
ret
mov
or
jbe
mov
add
insb
push
pop
dec
cmp
adc
ss
fbld
jle
pusha
jne
popa
xor
pop
fsqrt
mov
cli
jg
lret
pop
jle
lahf
into
add
xor
movsb
mov
je
cs
xor
fs
rcrl
out
fsubl
lret
sarb
icebp
cmp
mov
pop
or
inc
sbb
in
mov
movsl
cs
or
pop
mov
fisttps
adc
aad
popf
add
rcll
out
add
icebp
jb
push
xor
pop
dec
sbb
cwtl
push
jmp
cmpsb
jo
adcb
ret
mov
arpl
jns
mov
jecxz
or
outsb
sub
fistpll
daa
gs
sub
mov
fsubl
test
xor
push
faddp
rclb
xor
jmp
ds
dec
mov
xchg
add
xchg
in
jl
cli
shr
dec
fnstsw
push
pushf
xor
jge
stc
in
add
lds
sbb
cmpsb
out
sub
cmp
sbb
pmaddwd
jno
inc
pop
ds
pop
inc
inc
lods
push
mov
dec
out
or
push
loop
pop
jnp
xorb
jo
add
xor
and
xchg
add
stc
pop
mov
scas
cmp
xlat
xchg
aas
sub
shl
es
fwait
sbb
in
loop
mov
insb
lcall
bound
jnp
pop
jp
aad
test
dec
push
bound
test
and
mov
pop
jmp
pop
xor
pop
das
mov
push
adc
sbb
inc
jnp
ljmp
fcom
mov
out
xchg
jmp
nop
jg
cmp
sub
mov
das
dec
in
mov
cmp
jbe
lret
hlt
sbb
and
adc
mov
cmp
xchg
sbb
shlb
cmp
adc
out
mov
sub
dec
mov
fbstp
jp
movsl
lods
dec
fnstsw
aam
decb
pop
mov
ljmp
popf
inc
cld
decl
insb
fdivrl
ja
outsb
push
test
push
jae
xor
enter
jmp
pop
fiadds
dec
stc
inc
pop
outsl
or
rorl
jmp
lea
xor
push
je
adc
fwait
adc
push
pop
add
lahf
mov
fdivs
popa
out
xor
push
nop
or
mov
push
out
cli
adc
or
ror
cmp
xchg
loop
mov
call
outsb
lcall
mov
jae
cmc
mov
mov
mull
sub
xchg
and
inc
jp
in
mov
adc
imul
fwait
cwtl
int3
hlt
pop
stos
popf
clc
cmpsb
mov
fxam
sub
push
movsb
jp
xor
sbb
incl
sub
enter
subb
daa
push
sbb
ja
adc
outsb
sbb
rclb
pop
sbb
ficoms
add
insl
xor
jmp
pop
dec
jg
adc
bound
in
lea
cmc
fs
dec
push
out
pop
js
das
std
sbbb
mov
or
add
shll
pop
dec
inc
jp
push
ret
or
push
cmp
xor
xor
addl
sarl
cmp
cmp
bound
pop
aaa
xchg
add
cli
xor
push
aam
mov
xor
push
mov
leave
cwtl
mov
and
fwait
lods
scas
adc
mov
or
std
mov
push
push
aam
dec
push
fwait
in
sub
test
jmp
ror
stos
adc
push
push
jae
sbb
lcall
filds
push
test
je
out
ljmp
sbb
jle
cmp
fidivrs
or
cwtl
fildll
lds
mov
mov
mov
mov
test
sarl
mov
out
add
mov
push
dec
inc
dec
jg
test
push
jl
int3
dec
aas
jnp
xchg
lods
dec
fucomip
push
mov
xor
dec
pop
xchg
adc
dec
dec
and
out
pop
sub
mov
mov
stc
movsl
sub
add
stos
incb
daa
imul
lock
sbb
or
les
ss
aam
sub
hlt
xchg
pushf
lea
test
push
loope
and
mov
push
mov
sbb
arpl
fistl
subl
call
sub
gs
roll
cmp
aas
xor
jp
dec
dec
lret
dec
sub
push
pushf
js
aaa
or
sub
jno
mov
lahf
mov
or
jnp
aaa
or
aaa
insw
jb
adc
in
das
add
divb
adc
call
push
jae
cltd
sub
cmp
leave
jno
adc
or
shll
test
dec
jge
imul
push
jnp
aad
cmp
lods
jmp
inc
dec
and
lock
shlb
push
dec
test
icebp
pop
cmpsb
lcall
repz
lods
mov
push
mov
xor
movntq
daa
outsl
push
push
mov
in
cmp
jg
cmpsb
inc
test
dec
repz
jmp
mov
adc
or
jae
imulb
push
clc
popf
jl
sbb
dec
int
mov
popa
sub
out
jle
gs
daa
push
iret
outsb
movsb
cmp
adc
jecxz
xor
into
sbb
sbb
lods
in
cmp
pop
test
nop
js
push
xor
cld
shl
push
push
pop
inc
pop
dec
xchg
xchg
je
fdivrs
ficoml
cmc
inc
out
xor
sahf
mov
pop
fsubrp
inc
mov
add
dec
addl
mov
mov
sub
call
imul
mov
push
aas
jle
pop
sbb
ret
adc
std
add
fbld
sahf
shrb
iret
cmpsl
inc
iret
mov
shlb
push
push
mov
sbb
and
mov
push
pop
jp
jbe
ja
cltd
gs
sahf
push
int3
mov
les
sbb
lret
add
sbb
jbe
out
das
int3
push
aam
incb
sub
cmpsl
jnp
shll
in
mov
push
stos
jns
xor
xchg
js
inc
sub
mov
dec
fistps
jp
popf
jo
pushf
les
cmp
hlt
notb
notb
xor
mov
adc
pop
and
push
push
pop
outsb
addr16
xor
mov
data16
fwait
outsl
popa
add
or
test
lock
push
arpl
in
mov
pop
fcmovnbe
aad
dec
lea
out
sub
mov
sub
fbstp
and
adc
out
push
cltd
sbb
jne
je
in
shll
int3
jecxz
ss
loope
inc
sub
stos
xor
ljmp
shlb
je
lea
popf
ret
enter
pushf
fcmovnu
xchg
or
out
push
outsl
jge
jns
ljmp
dec
mov
inc
xor
mov
dec
cmc
in
leave
xchg
mov
mov
test
pop
cld
fistpll
jecxz
mov
and
lds
sub
mov
cmpl
mov
sub
add
leave
fisttps
push
hlt
pop
cmp
sub
push
sub
insb
xor
loopne
les
adcb
out
mov
adc
jnp
imul
cltd
cld
insb
inc
daa
sbb
mov
mov
sbb
shlb
push
lds
or
testb
call
jge
outsl
bound
pop
xchg
adc
dec
add
jno
xor
mov
sti
in
ret
fs
pop
push
xor
mov
es
and
sbb
dec
cmp
loope
ja
imul
xor
pop
and
test
adc
stc
pop
repz
or
icebp
out
xchg
push
idiv
mov
in
rcrb
ficompl
out
ficompl
or
std
pop
ss
xor
xchg
sbb
psrlw
xchg
sbb
pop
mov
enter
out
push
inc
dec
push
mov
lds
push
push
loopne
fistpl
jo
push
call
dec
xor
jns
out
pop
bound
push
xchg
mov
mov
jbe
mov
std
and
scas
pop
dec
aas
mov
cmp
sbb
shlb
ja
lods
cli
and
mov
pop
push
sbb
fs
pop
xchg
sub
ja
mov
xchg
dec
daa
or
sbb
pop
pop
or
jae
insl
lods
test
dec
mov
shr
in
unpcklps
mov
loop
add
push
xchg
aam
js
pop
add
xor
pop
dec
xchg
out
push
rol
dec
pusha
cmp
sbb
lret
or
les
dec
fcmovb
lcall
sbb
sbb
mov
mov
cmp
aam
test
stc
cld
inc
mov
outsl
or
inc
or
or
or
in
and
mov
pop
cmp
mov
dec
sub
or
inc
notl
filds
add
lods
xchg
imul
and
jge
xor
mov
push
shlb
push
ror
idivl
testl
mov
cmp
mov
xchg
pop
cltd
add
xchg
leave
mov
js
jno
ja
pop
push
pop
jne
addr16
sub
push
popa
aam
pop
xor
xchg
fsubrs
loop
arpl
es
ljmp
ret
jmp
cmpsb
jl
repnz
sbb
mov
in
shrb
testb
clc
inc
sub
adc
and
aaa
add
pop
shrl
cltd
sti
xchg
xlat
push
jae
jae
and
adc
pop
inc
sub
movaps
popf
pop
inc
or
insb
dec
shrb
ss
lds
test
sub
test
push
hlt
es
out
sti
push
call
dec
mov
sbb
fwait
dec
fisubl
repz
dec
loope
leave
lock
jne
inc
dec
call
sub
fsts
pop
addr16
divl
pop
add
inc
push
cltd
lahf
out
fstpl
mov
outsb
jp
fwait
lods
lea
cmc
aaa
mov
lods
jge
ret
arpl
add
scas
idiv
and
test
aad
adc
mov
stc
push
adcl
loopne
pop
sarb
ljmp
subb
fsts
mov
cltd
adc
or
sbb
pop
or
fnsave
sub
clc
mov
and
mov
inc
adc
test
gs
iret
outsl
es
add
adc
sub
push
sahf
movsl
xchg
mov
js
pop
cmp
mov
xchg
mov
popa
dec
insl
fnsave
jo
adc
cs
add
dec
addr16
mov
shlb
cltd
out
mov
rcrb
outsb
out
iret
mov
notb
mov
in
fdivp
cmp
cwtl
test
dec
jno
rclb
out
sarb
push
and
xchg
out
push
insl
lret
xor
ds
rcrl
out
aam
ljmp
dec
pop
mov
loop
xlat
xchg
icebp
cmpsb
movsl
sub
mov
inc
test
out
in
add
cmpsl
mov
push
push
cmp
jg
enter
jg
mov
popf
push
in
sahf
stos
addr16
int
mov
sub
ret
and
xchg
mov
inc
xchg
popf
mov
out
ret
push
mov
push
sbb
mov
add
xlat
jo
andl
xchg
push
fcomi
jns
jl
xchg
loopne
pop
dec
or
and
mov
loopne
clc
dec
mov
xor
int
ja
aam
jge
sub
adc
test
dec
hlt
or
cmc
or
lock
test
cmpsb
lods
dec
xlat
lret
jmp
outsl
cmpsb
xchg
mov
dec
dec
test
xlat
mov
or
push
jle
ds
or
xchg
orb
adc
ds
or
popa
sbb
adc
insl
inc
std
mov
in
xchg
mov
adc
or
popf
dec
push
dec
imul
call
cmpsl
loop
jbe
lods
icebp
and
sbbb
xchg
cmp
dec
or
icebp
pop
mov
xorl
push
push
jns
cmpsb
dec
addr16
js
or
push
cmpb
cltd
test
add
and
mov
lds
cld
adc
lret
sbb
inc
iret
pusha
cmp
xchg
dec
sub
pop
pop
inc
fisubrs
push
adc
adc
or
dec
jp
xor
fiaddl
cli
inc
add
mov
js
js
mov
jne
xor
aas
mov
push
div
loopne
ja
scas
repnz
mov
jno
jmp
fsts
dec
pop
pop
mov
icebp
lret
jp
jl
and
repnz
inc
xlat
mov
jo
stos
repnz
popf
mov
jp
xchg
cmp
mov
repz
sub
gs
jns
and
xor
aam
fisubrl
adc
je
push
push
sub
test
push
ret
outsl
cmp
mov
xor
inc
xor
pop
and
lea
sar
je
pop
bound
mov
pop
lds
lods
sub
adcl
xor
ss
je
and
daa
cmp
jb
xlat
sub
lea
push
pop
inc
sub
or
repz
mov
dec
mov
jp
out
cwtl
adc
rolb
sti
xchg
pusha
jg
xor
xchg
loopne
hlt
jns
fcomps
inc
dec
jne
cltd
test
fsubrp
in
lds
fistpll
sbb
fld
std
pushf
and
dec
mov
lods
repz
xchg
and
add
push
ja
cltd
mov
mov
adc
mov
mov
xchg
jne
clc
mov
mov
div
addb
pop
xchg
fcoms
sbb
loope
push
fdivr
out
jns
mov
sub
add
outsl
pop
mov
roll
jae
jnp
push
add
xor
orb
lods
inc
mov
push
or
xor
xor
or
iret
dec
sbb
jne
fucomp
push
mov
flds
lods
out
std
adc
push
cltd
add
in
outsb
scas
lods
adc
mov
fisttps
sub
ffree
xor
add
lcall
out
std
jae
sahf
sbb
pop
js
jp
cmpsl
sar
cwtl
jb
inc
jnp
cmp
out
pop
hlt
loop
mov
popf
push
clc
mov
fists
test
xchg
in
mov
dec
adc
cmp
pop
pop
sub
mov
push
pop
xchg
pop
mov
incl
loope
movsl
push
ret
xor
jmp
xor
or
in
sbb
je
xchg
add
xorb
mov
pop
adcl
xor
int3
movb
leave
jg
xchg
rcll
ss
cmp
pop
jmp
xchg
leave
sub
mov
fadds
outsl
sub
ror
cmpsl
pop
mov
pop
mov
xor
insl
xchg
in
aas
pop
inc
daa
inc
ret
pop
dec
imul
stc
aad
mov
outsl
fistps
popf
jg
test
cmpsb
jle
int3
cltd
jl
add
lret
fwait
sub
rolb
icebp
flds
xor
hlt
or
dec
lret
mov
sbb
pop
add
ja
ds
cmpsl
loop
shll
mov
pop
or
ljmp
aam
out
xchg
mov
clc
insb
mov
and
push
xor
hlt
imul
xor
cld
in
sbb
cwtl
addr16
and
xchg
scas
mov
out
xchg
add
sub
push
cs
jge
inc
add
loope
push
lret
rcl
iret
nop
mov
mov
inc
pushf
fcmovbe
ljmp
mov
or
int3
cmp
call
fidivrs
movsb
inc
push
mov
adc
fmuls
mov
stos
psubw
std
xchg
mov
add
add
les
and
jge
rolb
and
jl
leave
sub
clc
xchg
mov
xor
fstps
jno
test
ret
jp
push
insb
xor
inc
adc
jp
inc
jne
add
mov
mov
mov
xchg
call
cs
xlat
cmp
in
pop
fwait
mov
sub
gs
xor
pop
sub
jg
cld
ja
mov
xchg
inc
fbld
xor
xchg
fadds
xor
cwtl
jno
push
data16
xchg
cmp
lcall
test
adc
mov
push
mov
ret
sub
push
fldcw
xor
cmpsb
mov
dec
push
data16
adc
dec
mov
in
xor
push
dec
xchg
jnp
lret
inc
xchg
ja
inc
xlat
rclb
sub
sbb
idiv
cmp
fsubs
jno
add
mov
aam
mov
mov
inc
lcall
cwtl
add
scas
popa
repnz
mov
xlat
popf
bound
sbb
sub
mov
lds
xor
push
xor
cmpsl
popf
rol
in
daa
push
mov
pushf
xlat
rsqrtps
notl
mov
imul
push
xor
pop
add
push
pushf
in
leave
xchg
ret
lods
int3
repnz
and
jb
and
scas
or
jle
dec
mov
test
xchg
pop
loop
cmp
cld
lret
dec
or
ret
dec
pop
ret
adc
sub
mov
mov
into
and
mov
inc
addr16
adc
mov
cmp
adc
mov
ds
outsb
adc
adc
arpl
clc
jmp
pop
pop
add
jecxz
fcomps
cmpsl
cmp
mov
fs
cmp
call
cmpl
xchg
sbb
popl
jmp
popa
in
pop
mov
js
lods
mov
xchg
jle
jnp
in
push
pop
mov
xor
arpl
and
cmpsl
sub
dec
sub
or
scas
test
inc
out
test
dec
xor
sbb
xor
dec
out
fwait
cmp
xchg
adc
mov
pop
scas
and
jns
jmp
dec
mov
aad
mov
repz
dec
and
xchg
lret
in
sbb
jmp
aaa
dec
repnz
sub
inc
sub
rorl
jp
pop
adc
shll
xchg
add
idiv
arpl
sbb
rep
lods
adc
repz
lret
sbb
repz
fstp
daa
inc
jo
sub
and
xor
cs
scas
test
icebp
xchg
jae
pop
pop
mov
cltd
add
imul
loopne
loop
xor
jo
or
mov
xor
mov
cmc
mov
sub
mov
jbe
adc
jle
into
pop
je
fcompl
pop
mov
inc
les
or
iret
repnz
loope
popa
xchg
pop
cmpsb
jge
xor
int3
lds
or
pop
mov
mov
imul
lret
or
shrl
or
add
movl
addr16
hlt
dec
mov
sub
inc
into
and
push
test
sahf
int
mov
or
mov
scas
sbb
cmp
out
or
ss
fsubp
ret
push
enter
mov
pusha
sub
jecxz
or
mov
jno
jp
pop
or
adc
jmp
int3
ss
repz
test
pop
into
dec
nop
or
adc
push
add
inc
jne
stc
stos
pushf
pop
outsl
notb
stos
ljmp
std
aas
dec
or
and
scas
mov
lds
add
test
mov
pop
mov
cld
dec
mov
iret
cmc
icebp
or
aas
movsb
adc
cmp
mov
daa
test
arpl
add
xor
push
or
jb
adc
ja
jge
xor
push
xchg
sbb
jb
xlat
out
mov
dec
dec
sub
cmp
xor
mov
mov
sbb
shl
add
mov
loop
xor
pop
add
xor
cmp
rclb
push
inc
ljmp
lds
rcll
std
xor
adc
in
and
mov
xchg
mov
jge
sub
xchg
ss
vsqrtps
inc
scas
xchg
add
mov
enter
push
mov
rcll
mov
cltd
mov
loop
inc
cmc
mov
pop
xchg
push
push
bswap
cmp
ret
ljmp
addl
cmp
out
dec
jnp
and
or
movsl
sub
int3
fldcw
sub
loopne
cld
adc
add
int3
mov
insl
lcall
inc
dec
dec
ljmp
cmpsb
xchg
nop
pop
popf
cmpsl
sbb
daa
sbb
test
xchg
pop
sub
or
lds
int3
jp
pop
jno
jecxz
fnsave
xchg
xlat
dec
jge
enter
insb
ret
jp
fmull
leave
int3
aad
loope
shl
adc
xchg
xlat
sahf
fdiv
sbb
fsubrp
fistpll
sbb
mov
sbb
inc
lock
inc
ljmp
or
jmp
rol
cmp
sbb
add
scas
jmp
int
loop
xrelease
xor
jo
test
out
mov
lret
push
shlb
std
call
outsl
imulb
inc
and
andl
scas
sbb
int3
mov
xor
pop
xchg
lret
testb
xchg
add
ret
lea
xor
cmp
je
das
jmp
xor
ret
in
xor
retw
jnp
enter
pop
dec
in
pop
mov
lock
push
lock
xchg
out
mov
sbb
das
and
jne
cmpsl
cld
lcall
fdivr
in
insl
pushf
add
sbb
in
cmp
rorl
push
int
imul
and
pop
or
mov
rclb
in
or
cld
adc
jge
lods
pushf
clc
shlb
cmp
xchg
inc
lret
fwait
cmp
pop
sbb
add
fs
and
mov
inc
pop
sub
mov
in
subl
fidivl
movsb
inc
cs
fidivrl
decl
mov
lret
call
mov
cwtl
inc
xchg
mov
xchg
leave
rorb
imul
inc
sbb
popf
sub
mov
movsb
mov
pop
lret
iret
pop
pop
fbstp
jno
push
push
leave
cmp
fisttpll
or
add
mov
lods
and
mov
mov
or
or
xchg
int
or
ret
shlb
jns
xchg
mov
fsubl
push
mov
jl
nop
xchg
jo
sbb
cmc
not
push
mov
xchg
lret
test
xchg
outsb
lods
xor
and
jmp
xlat
test
fcomip
push
dec
push
sbb
test
xor
scas
mov
add
in
pop
rclb
lods
lea
push
in
fdiv
cmp
int3
sbb
adc
leave
cmp
or
and
jno
add
imul
inc
jecxz
xchg
out
test
in
in
in
int
mov
ljmp
mov
jl
sbb
in
push
pop
push
dec
fdivp
sbb
push
mov
push
movsl
movsb
mov
out
mov
int
or
push
subb
in
test
in
arpl
cmpsb
jae
cmpsb
jmp
mov
insl
pop
jno
sbb
xor
inc
je
ds
sbb
adc
aaa
xchg
aas
into
dec
out
arpl
push
icebp
out
mov
inc
push
dec
dec
cmc
int
dec
mov
sbb
pop
int
inc
shl
adc
ret
mov
test
xchg
xchg
sti
sub
cmp
jl
nop
xchg
and
sbb
lret
test
push
les
shl
sbb
mov
mov
xchg
adc
mov
push
je
fimull
ss
cmp
pop
outsl
aaa
pop
lods
cld
ret
jno
scas
aam
mov
mov
xchg
mov
cld
xor
adc
or
aaa
cltd
inc
out
fcmovbe
test
xchg
stos
push
adc
inc
jb
lds
jmp
jg
mov
mov
sti
jecxz
xchg
mov
popf
mov
inc
rclb
xor
cmpsb
jg
pop
xchg
mov
cmp
inc
mov
mov
outsb
lea
ret
ds
inc
jo
cmp
and
pop
jge
jg
inc
dec
mov
xchg
jae
sub
adc
xchg
aaa
std
decb
addr16
fildll
add
movl
mov
pop
push
ljmp
xchg
mov
rorl
mov
sbb
adc
jns
leave
aam
xchg
out
jne
in
push
jae
les
daa
xchg
test
es
in
bound
pushf
ret
adc
mov
and
xchg
outsb
inc
jno
jne
das
rcll
sbb
add
sub
sub
stc
stc
mov
orb
jl
xlat
notl
sub
je
rcrl
sbb
and
scas
into
pop
mov
and
sbbl
inc
dec
inc
mov
mov
pop
ret
xor
mov
repz
adc
shl
mov
xchg
imull
insb
xorb
dec
cwtl
mov
movsl
jno
sbb
ret
push
cmp
jecxz
imul
mov
xchg
jecxz
add
cltd
popf
sub
test
test
rcrl
cli
jecxz
mov
mov
gs
scas
sub
ja
arpl
not
in
mov
mov
xlat
dec
mov
sbb
pop
mov
test
push
insl
mov
ret
sub
loopne
push
std
ret
pushf
jp
arpl
mov
fs
cmp
data16
mov
mov
add
mov
inc
decb
lock
shrl
clc
dec
dec
mov
push
sub
lret
xchg
sub
cwtl
addr16
mov
dec
jb
mov
icebp
mov
push
in
nop
cli
and
cs
sti
jge
movsl
rcrb
inc
outsb
lret
loop
sarb
push
pop
lods
pop
rcrl
mov
push
pop
or
push
in
jge
jmp
clc
cmc
fsubs
mov
jmp
inc
mov
incb
sbb
dec
and
jge
jne
adc
mull
mov
and
dec
mov
xor
xor
dec
and
pusha
in
pop
icebp
push
rorb
jnp
outsb
fsubl
js
inc
sbbb
sbb
jg
ret
jae
jnp
dec
jecxz
xor
ja
pop
mov
gs
xor
call
pushf
stc
addr16
sub
ret
inc
out
jae
shrb
ret
insl
fsqrt
jp
mov
test
sar
pusha
push
int3
add
lds
out
pop
in
pop
jae
lret
xchg
rcrb
pop
lds
or
push
push
and
popf
rorl
cmpsb
loopne
out
mov
mov
adc
jno
shll
or
xor
adc
rorb
jg
mov
iret
lea
hlt
dec
or
popf
and
sbb
aas
int3
lea
push
and
data16
js
stos
xlat
inc
cwtl
lods
mov
adc
or
jne
int
push
fbstp
je
xor
rcrb
and
fbld
fimuls
fimuls
insb
jbe
mov
dec
push
push
mov
mov
ds
xchg
cld
mov
test
in
mov
mov
hlt
mov
adc
mov
mov
mov
js
add
aaa
sbb
cmc
inc
mov
sti
pop
add
daa
das
in
cld
scas
and
sub
xchg
aam
jbe
xchg
pusha
fbstp
jno
mov
testb
loope
dec
test
data16
dec
loopne
sarb
mov
add
dec
jmp
pop
mov
fiaddl
mov
mov
shrl
dec
stos
inc
jnp
rcrl
jl
pop
popa
shlb
je
or
mov
cmp
xlat
sub
sub
and
sub
lahf
mov
and
and
call
imul
add
rcrb
or
and
add
jge
adcb
std
adc
daa
rcll
call
or
pop
pextrw
hlt
call
cmpsb
adc
push
lcall
out
and
mov
xor
push
loope
push
or
xchg
add
popa
mov
cmp
mov
inc
stos
xor
and
lds
mov
xchg
jmp
xor
cli
xorb
pusha
lods
sub
push
sahf
xchg
mov
inc
movsl
pop
xchg
es
orb
repnz
je
xchg
xor
mov
inc
inc
rol
cmp
repz
les
test
test
es
add
stc
jae
inc
fdivrl
lds
call
stc
inc
adc
add
rcrl
mov
or
outsl
stc
shlb
xchg
jns
jg
push
push
pop
mov
lods
idivb
aas
mov
mov
outsl
cmp
mov
xor
daa
sub
ss
or
rclb
pop
into
fcomps
movups
arpl
loopne
xchg
lahf
repnz
addr16
xlat
hlt
mov
jmp
gs
mov
sub
into
pop
stos
test
mov
fs
scas
mov
jae
pushl
fistpll
and
aaa
mov
push
popa
push
daa
mov
shl
jmp
pop
es
add
mov
neg
loop
mov
fwait
jmp
sbb
xchg
call
mov
lret
xchg
sbb
pop
jb
daa
push
scas
mov
sbb
nop
and
mov
jg
loopne
push
and
xchg
inc
dec
inc
out
sti
xchg
push
sub
iret
xchg
push
xchg
test
fidivrl
cmp
test
les
out
cltd
push
mov
pop
pop
pop
int
loope
xor
add
test
fs
into
stos
jge
mov
les
fs
lds
ret
cwtl
ds
sbb
hlt
outsb
push
popf
push
xor
dec
movsb
push
enter
or
pop
clc
pop
fists
mov
mov
mov
lret
or
jbe
adc
dec
inc
outsl
repz
pop
xor
inc
out
arpl
in
lea
int
enter
or
lods
push
or
dec
mov
lods
cmp
cli
and
xchg
loop
dec
mov
imul
cwtl
add
xchg
mov
lock
ds
inc
jne
push
fs
cmp
addl
stc
mov
subb
xchg
rcrb
test
test
inc
in
mov
sub
fdivr
gs
dec
sbb
lods
cmp
int
enter
ret
rcl
fiadds
sbb
test
pop
mov
pop
mov
sub
cmpsb
or
mov
xor
iret
add
cmc
idivl
call
push
ret
xlat
adc
hlt
pop
push
or
xor
cmp
pop
inc
in
push
xor
jecxz
mov
cmp
stos
xchg
inc
adc
rorl
out
cld
pop
out
mov
pop
sbb
sbb
iret
sbb
lcall
movsb
adc
lds
xchg
cltd
repz
loop
subb
ja
inc
xchg
in
shll
rolb
test
out
fidivrs
push
lods
popf
ret
sbb
mov
sub
pop
sbbl
icebp
sahf
popa
push
repnz
xor
mov
cwtl
dec
push
aas
stc
daa
xor
rcrl
dec
jb
in
fistps
js
xchg
insl
mov
or
je
rolb
cmp
mov
pop
mov
inc
fwait
ja
xlat
fldenv
and
ljmp
out
add
movsb
mov
aad
je
popf
jl
adc
cmpsb
js
mov
xchg
fldl
push
je
in
mov
fisubrs
inc
loope
add
mov
push
jns
lret
outsl
cli
inc
roll
cmp
and
pushf
adc
rolb
mov
cmc
aad
insl
push
js
call
jne
in
lea
mov
jb
push
xchg
mov
push
xlat
jecxz
out
ljmp
push
inc
popf
adc
sbb
test
mov
negl
test
int
cwtl
pop
push
sbbb
jb
pop
lods
xchg
xchg
or
inc
imul
sub
push
cmp
shlb
adc
daa
pop
icebp
cmp
dec
xor
adc
stc
je
fisubrl
fnsave
mov
ss
sbb
push
pop
into
xor
xchg
sub
leave
fdiv
aas
inc
mov
out
loop
sahf
xchg
mov
aas
jecxz
scas
jns
push
lods
mov
push
pop
add
mov
sbb
fs
daa
dec
mov
addr16
cmp
jno
enter
cmp
les
imul
test
rcr
fwait
lock
sahf
bnd
mov
and
rclb
sub
sub
cmpl
insb
inc
clc
jbe
sbbl
xchg
into
outsb
or
adc
daa
xchg
mov
pop
fsubl
mov
out
and
dec
imul
enter
mov
subb
push
popa
insl
cmp
aad
pop
repz
push
push
pop
nop
jmp
adc
sub
aad
sbb
jo
pusha
mov
and
sahf
push
xor
repz
jb
sbb
mov
into
lret
inc
inc
xor
sub
gs
and
int3
cmp
mov
rorl
movsl
lods
mov
jmp
sbbl
je
or
cmp
jns
in
repz
ret
int
gs
int
sar
add
ret
pusha
push
lret
sub
aam
pop
jp
rcrl
lea
jne
mov
mov
psadbw
jecxz
out
addr16
push
data16
add
mov
mov
scas
bound
das
ss
scas
cmpb
mov
add
lds
dec
mov
cmp
push
scas
insb
bound
lods
scas
sub
xchg
lcall
lds
push
enter
andb
xor
das
sahf
mov
fs
sub
sbb
sub
sub
xchg
andb
outsb
ds
imul
pop
fidivl
lods
jno
fildll
cld
loope
sub
sbb
mov
scas
repnz
pushf
jbe,pn
mov
push
sbb
inc
hlt
loop
mov
adc
cli
and
ds
out
in
call
nop
dec
inc
jnp
clc
cmc
jg
add
inc
inc
loopne
xor
pop
xchg
mov
fisubl
or
std
idivb
pop
outsl
in
mov
mov
cld
shrb
inc
fstl
sbb
lcall
mov
add
ss
mov
pop
roll
pop
aas
inc
add
loope
ret
mov
mov
in
andb
js
mov
pop
popa
xchg
iret
jp
xchg
push
icebp
movsl
push
mov
add
popf
push
jb
xchg
fnsetpm(287
mov
or
outsb
in
lret
aas
das
lock
roll
lea
lds
mov
xor
insb
leave
mov
push
xchg
bound
ja
insl
mov
cld
mov
lret
push
adc
jb
or
mov
sub
jae
push
xchg
and
jge
jae
arpl
jo
inc
push
push
jns
loope
je
rolb
sub
lods
and
dec
push
nop
insl
test
xchg
repz
mov
mov
pop
dec
inc
or
mov
cmp
in
test
out
push
mov
dec
or
fadds
and
push
repz
pop
into
fxam
push
and
sub
adc
inc
xchg
jmp
mov
jne
sbb
mov
cmovl
jmp
push
mov
pop
mov
jbe
popa
jle
mov
and
mov
das
and
mov
jns
cmp
std
test
je
mov
pop
inc
jge
stos
pop
xchg
out
xor
in
fsubrl
mov
mov
mov
out
popl
into
dec
lods
jb
test
out
or
mov
shlb
cmpsb
stos
insl
clc
mov
aaa
mov
jg
test
and
ja
or
aam
int3
inc
jno
ret
lcall
lea
lods
loop
cld
push
jbe
ja
adcl
sub
push
adcl
lret
pop
mov
shr
out
jge
jne
leave
mov
mov
or
jno
mov
loope
lret
mov
cmpsl
inc
shll
fstps
pushf
cmpsl
out
aaa
push
in
jne
ret
add
dec
popf
cmpsb
ret
sub
je
cmp
dec
sub
test
mov
lret
repnz
pop
push
or
das
mov
mov
dec
ret
adc
adc
fidivl
sub
mov
adc
rcll
mov
push
movsb
xchg
cld
int
stos
sub
adc
dec
or
mov
inc
movsl
xchg
cmpsb
inc
adc
cmp
es
mov
cltd
dec
push
paddw
inc
sbb
and
jno
int
inc
adc
adc
inc
xchg
dec
test
lret
loopne
push
jg
adc
xchg
in
inc
dec
in
mov
insb
mov
and
orb
aad
xor
xchg
test
ds
xchg
mov
sub
mov
adc
sbbl
jno
inc
hlt
sbb
mov
xchg
outsb
cmp
scas
outsl
adc
rdpmc
movsb
mov
cmc
mull
xchg
mov
sub
in
xor
fcmovbe
mov
decb
repnz
je
fcmovbe
push
jmp
inc
mov
xchg
xor
mov
jg
addr16
dec
sbb
mov
jae
sub
sbb
out
int
mov
mov
mov
cmp
aaa
adc
mov
mov
daa
call
repz
es
mov
sub
pop
scas
lret
nop
or
push
mov
add
pop
mov
xchg
mov
add
out
inc
or
pusha
adc
mov
mov
mov
mov
lret
pop
jnp
push
loopne,pt
and
push
add
adc
mov
leave
cmp
nopl
push
je
repz
or
and
mov
sbb
stc
repnz
dec
jmp
push
lahf
push
dec
mov
dec
xor
ret
push
in
out
test
add
psubusw
ss
ss
mov
or
pop
lods
cmp
adc
dec
jmp
cli
in
aam
xchg
daa
sub
adc
mov
sbb
test
jmp
in
cmp
pop
push
sub
movsl
add
test
sti
cmp
out
lahf
xchg
subl
in
pop
pop
pop
jbe
pop
dec
int
xchg
cmp
inc
push
or
cmp
loope
or
movsl
inc
xchg
mov
neg
cld
aaa
scas
jbe
mov
push
sbbl
dec
aaa
in
movsl
jb
push
push
add
and
mov
sti
jmp
divb
jb
jmp
jae
xchg
fs
xchg
push
leave
and
aaa
loopne
or
mov
xor
cwtl
mov
fiadds
ficompl
insl
inc
or
dec
push
movsb
and
xor
sbb
dec
lahf
inc
cs
lock
scas
daa
test
pop
je
cli
push
jecxz
add
mov
mov
push
mov
mov
adc
mov
push
mov
insl
mov
cltd
xchg
mov
inc
lds
lods
insl
jns
jbe
inc
mov
jl
and
jo
xchg
adc
mov
pop
enter
cltd
cs
sub
ret
mov
leave
js
enter
mov
adcl
aaa
push
add
pop
adc
pop
je
stc
or
lea
and
aaa
push
mov
push
push
xor
inc
pop
xor
imul
lcall
push
mov
sti
xchg
lahf
xchg
inc
jb
dec
jo
dec
jnp
rol
push
jno
xor
jns
push
lcall
inc
dec
jg
and
and
xorl
hlt
sti
in
stos
sub
adc
hlt
in
push
lahf
dec
lock
es
push
mov
mov
or
cmp
out
ds
jg
sub
sub
mov
xchg
xchg
in
das
roll
mov
dec
repnz
jmp
das
lea
fwait
loopne
jge
mov
push
cli
push
sub
jo
push
xchg
les
sbb
loope
mov
negb
push
or
adc
push
xor
fisttpll
add
shll
sub
nop
ror
push
dec
push
mov
mov
xchg
sbb
or
dec
fldcw
aam
icebp
arpl
icebp
loop
popf
das
js
jle
inc
ljmp
lahf
sub
cmp
in
mov
inc
and
stos
loopew
push
nop
int
stos
sbb
add
in
shrb
push
push
addr16
in
xlat
pushf
inc
xlat
xchg
sti
cmp
sarl
scas
and
pop
cltd
adc
js
jne
dec
pop
mov
movb
lds
aad
ret
add
jge
imul
push
rolb
xchg
cmpsb
cmp
lahf
outsb
mov
mov
loope
mov
roll
stos
nop
cmp
jp
jg
cwtl
jbe
pop
dec
test
in
adc
xchg
mov
push
sbb
fs
es
mov
xchg
push
shrl
call
sub
mov
mov
popf
xor
jbe
jnp
cmpsb
int3
stos
and
imul
dec
imul
gs
dec
out
mov
pop
xor
sbb
lock
aaa
xchg
mov
xchg
jns
jp
sbb
call
pop
push
scas
cmpsl
loop
inc
mov
sub
scas
adc
add
jo
inc
mov
fsubs
test
inc
push
sub
ljmp
push
sub
add
add
push
lock
jae
test
and
or
and
sub
mov
nop
int
inc
mov
movsl
add
ja
imull
mov
lahf
sbb
mov
fs
mov
pop
gs
xor
rcrl
cmpsb
jae
push
pop
cmp
roll
stos
movzbl
sub
hlt
sbb
pop
mov
test
adc
or
cmp
dec
inc
mov
dec
and
fistl
cmp
test
adc
imul
jg
in
mov
push
and
pop
lret
push
mov
push
xor
add
test
mov
in
cmpsl
push
and
rol
adc
push
lds
inc
fnstenv
inc
inc
mull
negb
jl
dec
and
scas
into
hlt
in
pop
test
inc
test
pop
js
add
mov
fsqrt
data16
addr16
ret
or
lahf
mov
js
hlt
test
inc
fldt
push
sbb
mov
push
test
sbb
fdivl
icebp
cmp
scas
cmp
test
imull
inc
pop
aas
scas
or
ja
sub
icebp
icebp
imul
movsb
loopne
rol
xchg
ret
mov
sub
cs
nop
int3
jle
push
push
push
adc
lret
rcl
push
cmp
popa
mulw
xchg
mov
outsl
push
add
or
imul
or
dec
cwtl
les
in
rolb
leave
into
xchg
ss
notb
in
out
shlb
adc
lea
js,pt
sarl
cmp
or
ficoml
jne
mov
shrl
ss
dec
or
aad
inc
int
pop
pop
ds
insl
xchg
inc
mov
lcall
idivl
xchg
cmc
scas
pop
pop
lahf
inc
test
loop
sub
mov
nop
icebp
cmp
mov
cld
aaa
sub
adc
push
repz
jg
pusha
rcll
fdivrs
test
add
pop
addr16
sahf
sub
add
mov
mov
mov
aad
lods
add
adc
hlt
mov
icebp
jge
pop
js
das
xchg
clc
inc
stos
cmpl
cmp
hlt
aaa
dec
movsl
imul
push
shll
mov
fcoms
push
jb
jne
jno
in
pop
inc
in
insl
xchg
sub
jbe
mov
adc
insl
adc
aas
lret
movsl
repz
pop
clc
stc
mov
rcl
test
popf
repz
out
fst
data16
inc
adc
stos
adc
int
push
jae
inc
jne
dec
std
pop
nop
data16
jl
mov
loopne
push
push
lock
dec
test
mov
mov
sbb
push
cmp
jmp
outsb
ljmp
outsb
mov
cmpsl
js
pop
or
jae
mov
fcompl
adc
pop
popa
push
stc
mov
leave
clc
cld
mov
sbb
stc
mov
dec
add
fdivl
mov
xor
push
js
xchg
js
or
pushf
mov
clc
fsubrl
push
mov
jmp
push
outsl
outsl
sarl
jns
fmull
mov
inc
outsb
insl
mov
inc
lret
lcall
jae
mov
dec
aam
push
inc
clc
das
pop
testb
add
xor
and
jne
jo
ja
leave
mov
push
out
dec
sahf
mov
mov
xor
aaa
push
push
addr16
and
push
push
shll
xchg
stos
add
xor
and
xor
jae
fstps
xor
jb
push
lock
dec
fstl
pusha
xor
in
outsl
nop
mov
arpl
je
int
push
jg
popf
subl
jb
adc
int
testb
es
xchg
loopne
push
sub
and
lret
fnstenv
pop
fnstcw
out
daa
inc
lock
jmp
push
pop
rcrl
stos
cmpsb
pop
std
std
in
cmp
mov
cs
mov
repz
jnp
xchg
jne
insb
xchg
jno
rcrl
sub
test
xor
test
pop
jmp
addb
andl
pop
jno
xchg
lahf
sbb
xchg
lahf
je
or
cmp
push
add
mov
sbb
imul
or
mov
decb
roll
lock
push
ret
and
inc
ss
jge
lahf
inc
inc
or
aad
bound
ja
filds
lods
sub
arpl
sbb
cmp
ss
pop
dec
cmp
or
inc
out
cli
std
movsb
jae
addr16
fidivl
mov
pop
popf
iret
sub
sub
test
mov
sub
in
pop
mov
addb
scas
rcr
in
sahf
js
inc
in
dec
cmp
cmc
ret
mov
scas
fwait
and
add
inc
inc
loop
mov
iret
cmpsl
in
arpl
cmp
push
lahf
and
xchg
adc
loope
test
popf
add
ret
daa
ss
gs
adc
repnz
inc
xor
shl
adc
inc
andl
sbb
xchg
lret
jbe
sbb
or
lcall
inc
pop
mov
push
inc
sti
jle
hlt
shlb
or
insb
xor
fidivl
dec
dec
clc
test
out
jns
movsb
rolb
inc
cmp
mov
ja
gs
lods
pop
dec
fdivl
in
repz
jge
ljmp
ss
int3
and
mov
push
ljmp
into
xchg
jae
out
jno
rcl
in
cmp
cmp
es
cmp
jge
call
inc
lds
and
and
iret
add
test
xor
xor
mov
dec
andps
imul
js
xor
aam
insb
xchg
pusha
cmp
and
movsb
out
mov
inc
sub
dec
jnp
test
pop
jne
iret
add
cmp
das
pop
push
push
mov
push
add
add
inc
aas
push
out
sarl
add
loop
out
int3
fsubl
daa
push
mov
jno
cwtl
mov
mov
mov
gs
and
lea
dec
cmp
mov
fucomip
xchg
mov
mov
jmp
and
mov
or
sbb
sahf
loope,pt
imul
jge
aad
xchg
push
aaa
pushf
lods
mov
inc
xchg
or
xchg
xchg
lret
jnp
test
push
js
add
mov
mov
inc
jb
adc
in
lods
xor
mov
fwait
mov
add
sub
or
std
inc
lods
das
sbb
xchg
je
jmp
inc
inc
loopne
in
mov
sub
pop
out
sbb
shrl
mov
nop
jnp
fcompl
jno
stos
mov
into
push
mov
je
test
nop
cld
xlat
fstps
xchg
mov
fwait
enter
test
mov
xchg
into
push
cmp
cmp
dec
dec
dec
xchg
inc
sti
cltd
cld
sub
scas
xor
fstpl
and
outsb
jb
dec
imul
pop
cmp
iret
dec
mov
mov
pop
ja
jbe
adc
out
inc
inc
lods
in
div
push
aaa
pop
mov
and
movsl
scas
jae
fadds
stc
cmovnp
call
int
mov
in
and
pop
pop
repz
xchg
movsl
dec
jae
mov
loope
push
lcall
cld
xchg
pop
jb
addb
jle
out
add
inc
jne
fistps
pop
push
fdivl
jmp
or
adc
xor
mov
pop
call
movsl
sbb
and
lcall
sbb
push
xor
scas
push
sbb
jo
or
push
cmc
cmp
fdivs
incl
shrl
insb
ss
mov
xor
stos
bound
push
xchg
inc
xchg
mov
dec
dec
and
out
cmp
es
movsb
xlat
repnz
fsubrs
aas
push
mov
pop
mov
mov
push
data16
mov
ja
inc
mov
sbb
fists
dec
or
xor
clc
lods
mov
jb
adc
cmp
and
idivb
dec
loope
inc
add
test
xor
cmp
and
dec
push
xor
xorl
pop
out
stos
sub
push
das
shrl
mov
gs
dec
shrl
stc
xor
outsl
jno
and
cmc
stc
mov
stos
lea
sbb
lahf
es
add
dec
push
pop
mov
lret
inc
ret
pop
sbb
fs
ljmp
adc
sub
mov
icebp
cmc
mov
push
mov
fbstp
mov
push
mov
cmp
repz
clc
dec
std
xchg
lret
pcmpgtw
sub
mov
fmull
aaa
sbb
fisttpl
mov
jmp
pop
jl
xchg
enter
ss
xchg
jmp
std
sub
loop
aaa
xchg
push
cld
jns
ficoms
mov
xchg
sub
cmc
mov
push
sarl
ja
jmp
loopne
mov
ds
in
xorl
inc
lcall
es
xchg
imul
scas
and
mov
xor
pop
mov
sbb
pop
jne
mov
movsl
mov
ljmp
outsb
clc
mov
test
imul
adc
mov
xchg
sub
cmc
frstor
or
mov
imulb
test
push
lea
xor
movsl
push
sub
into
or
cmp
add
mov
andl
cs
dec
mov
and
insb
insl
in
jge
jno
dec
cmp
fcoml
mov
xchg
bound
add
insl
aas
mov
sbb
mov
adc
rcll
movsl
mov
cmp
pop
xchg
mov
mov
cmpsb
jge
and
fcoml
xchg
adc
popf
push
shrb
cltd
jle
cmp
subl
jg
cmp
xor
sbb
ljmp
sub
add
mov
sub
xchg
mov
lret
pop
and
xchg
mov
aas
push
aam
mov
call
adc
subb
mov
test
test
lahf
cmp
scas
mov
scas
sbb
sbb
popa
fildll
fs
mov
idivl
jge
and
jb
add
push
pushf
fidivs
jo
and
mov
insl
jl
and
push
sbb
shrl
xor
data16
sub
sbbl
pushl
xor
or
xchg
das
outsb
and
mov
out
lds
repnz
leave
mov
push
imul
push
cmp
fsubrl
sub
jl
dec
adc
adc
mov
mov
xor
icebp
pop
call
cmp
clc
rcrb
xchg
jno
rorb
cs
cld
xor
adc
mov
aad
mov
jmp
cmp
inc
dec
stc
mov
cmpsl
test
push
pop
cli
outsb
test
xor
jmp
cmp
add
ja
dec
fisubrs
mov
adc
repz
sbb
setge
das
xor
lea
adc
mov
cli
pop
sbb
lret
or
xchg
jg
mov
sbb
aam
pop
push
mov
into
push
cli
ljmp
jne
das
cli
daa
insl
jmp
adc
xor
mov
out
mov
xor
and
sub
aaa
movsb
mov
cwtl
jns
jne
sub
roll
mov
lret
cmc
stc
push
stos
imul
push
inc
orb
ljmp
outsb
cmpl
mov
rol
mov
mov
sahf
push
cltd
xchg
xchg
ja
sbb
push
push
cmc
fwait
in
add
pop
stos
push
decb
xlat
stc
cmpsl
adc
lcall
add
outsb
sbb
ds
xchg
test
and
mov
lock
in
push
pop
movsl
xchg
imul
and
data16
cld
test
inc
sbb
mov
jmp
out
jno
loop
rorl
cmp
movsb
adc
mov
push
pop
lock
mov
mov
nop
mov
mov
push
adc
xor
mov
mov
xorl
jge
clc
inc
aaa
cmpsl
mov
sahf
loope
cwtl
lret
ret
add
inc
cmp
cmc
xor
sub
cmp
iret
std
mov
push
pop
jmp
loop
nop
mov
int3
loop
leave
add
and
adc
add
in
inc
int3
xchg
xor
push
dec
pop
jb
in
dec
sbb
or
rclb
or
xor
daa
in
dec
lods
fsubrl
sbb
sub
mov
repnz
dec
or
mov
aad
push
sbb
pop
int
push
pop
cmp
adc
xchg
jbe
and
adc
lods
and
mov
xchg
mov
inc
clc
cmc
fisubl
shlb
pop
icebp
scas
cs
loopne
xor
repz
sbb
xchg
pop
mov
pop
int
sahf
sbb
inc
jmp
inc
in
inc
ljmp
cmp
adc
mov
fimuls
xor
pushf
pop
add
ja
insb
pop
jl
sub
mov
jo
and
or
xchg
cli
or
bound
cld
loope
addr16
gs
xor
js
add
test
neg
fildll
pop
das
je
jecxz
dec
fdivrl
push
icebp
ljmp
cmc
push
aas
add
push
movsl
test
xor
arpl
orl
scas
lahf
or
lcall
movsb
sub
stos
arpl
out
jb
push
je
clc
shl
testb
fisubs
mov
mov
imul
in
inc
pop
push
xchg
cld
inc
and
aad
dec
pop
inc
inc
adc
orl
pop
adcb
in
jne
mov
mov
push
dec
sbb
push
cmp
and
mov
dec
push
push
dec
push
sbb
dec
jmp
sbb
mov
push
mov
stos
adcb
or
push
je
out
or
nop
xor
pop
frstor
inc
mov
or
cmp
popa
shll
icebp
pop
push
bound
fcompl
sbb
push
ja
xor
mov
call
push
inc
lret
popa
mov
cmpsl
aad
es
sub
sti
mov
out
test
jmp
dec
mov
ds
inc
repnz
pop
jl
inc
add
xlat
cmp
inc
cmp
or
pop
ficoms
inc
push
xorb
pop
test
movsl
stos
pop
xor
int3
add
ja
or
lock
int3
sbb
insb
lcall
fldcw
jbe
and
or
aaa
mov
jae
ret
lahf
lret
sbb
sti
pop
out
pop
cmp
pop
lock
subb
rorb
xchg
sbb
sub
inc
sub
clc
add
cmp
dec
xchg
ret
mov
lcall
jp
popf
jmp
leave
mov
imul
inc
pop
and
cmp
sub
adc
lahf
popa
shl
inc
push
lock
mov
jae
ret
xor
xchg
xchg
fdivl
cmp
lods
pop
and
jl
push
mov
push
sub
cli
pop
cmp
push
roll
xchg
shlb
dec
mov
les
dec
xor
dec
hlt
pop
test
rclb
lret
lock
pop
sub
push
pop
dec
pop
test
aad
gs
popf
into
hlt
dec
add
pop
lret
sub
stos
ja
cld
inc
nop
xor
xorl
fsubl
fnstenv
jmp
adc
out
dec
push
sub
add
ljmp
lcall
dec
out
outsb
arpl
pushf
insb
jo
ficompl
sbb
shlb
add
pop
adc
and
pop
jp
sub
mov
in
and
je
jg
sub
mov
fs
shrb
push
jle
push
push
fwait
repnz
mov
fnstenv
ljmp
or
push
outsl
sbb
int3
inc
jbe
cmp
add
cld
rclb
lret
ljmp
xor
ror
daa
sbb
dec
jnp
faddl
sub
cltd
js
cmpsl
icebp
mov
xchg
sbb
sub
xchg
jo
dec
repnz
js
pushf
inc
or
outsl
sub
jae
faddl
sub
movsb
push
dec
inc
inc
pushf
sub
mov
jne
out
inc
mov
sub
lods
pusha
repnz
ret
inc
xor
cmp
in
imul
cmpsb
test
adc
into
adc
push
pusha
pop
lock
mov
jmp
or
mov
push
daa
mov
pop
sub
popf
jecxz
mov
sub
jmp
adc
adc
pop
rcr
stos
mov
aas
jle
fisubrs
inc
xchg
and
nop
push
fadds
ja
imul
test
xchg
subb
jae
cmp
push
lea
nop
inc
pop
sbb
sbb
mov
mov
imul
flds
and
sbb
push
sub
mov
fidivrl
dec
sub
mov
jnp
sub
popf
js
xchg
adc
rorl
lods
rcll
call
dec
out
xor
mov
packsswb
push
xor
cmp
in
xor
jnp
pusha
inc
inc
dec
insl
lret
lcall
dec
sbb
or
sub
jge
xor
pop
mov
test
sbb
pop
scas
jbe,pt
ficoml
xchg
divl
push
rol
arpl
cltd
sub
cltd
jb
sarl
pop
sub
arpl
push
pop
daa
js
jle
arpl
mov
fldenv
xor
sub
imulb
adc
das
in
loop
pop
sub
push
mov
sub
mov
mov
mov
and
pop
mov
lods
xchg
mov
push
out
in
push
rol
rcl
mov
je
jp
mov
or
xchg
lds
jl
or
mov
mov
or
in
int
adc
fisubrs
lret
push
int
rolb
push
dec
mov
inc
add
jmp
shl
xor
xchg
add
pop
mov
fsubs
dec
cli
sti
dec
sub
test
mov
push
inc
sbb
ret
sbb
imul
fidivs
dec
icebp
enter
cmp
mov
out
jp
sub
jp
insl
popf
int3
sarl
xchg
nop
jnp
jb
dec
mov
jg
jb
adc
cwtl
fimull
pop
cmp
call
sub
aam
sub
dec
cmc
or
push
dec
adc
sbb
sub
cltd
int3
cmp
lods
gs
loop
and
jge
aam
je
adcb
test
and
cmpsl
mov
fst
cmp
xchg
or
xchg
mov
ret
lods
cmp
sbb
push
jmp
push
mov
cld
pop
test
lret
shll
stos
cli
out
dec
mov
imul
cs
mov
mov
lret
idivl
test
sub
lods
jns
js
xor
mov
jle
push
enter
jl
scas
inc
lret
push
push
outsl
out
or
cld
mov
pop
inc
int
test
lcall
inc
popf
xor
aad
mov
pop
insb
cmp
inc
out
clc
fwait
inc
xchg
lds
ja
lds
push
jecxz
sbb
stos
sbb
icebp
jne
repz
shrl
or
jg
and
pop
popf
sbb
inc
outsl
mov
pop
add
cmpsl
scas
pop
stos
fimuls
mov
mov
in
loop
incl
mov
xchg
cmp
add
adc
fcomps
mov
xchg
and
xchg
fsubr
int3
cmp
adc
or
push
mov
mov
adc
dec
call
daa
dec
out
xchg
fisubs
add
jne
div
mov
popl
mov
repnz
adc
push
lea
mov
cltd
mov
out
lahf
mov
jo
mov
sbb
mov
hlt
mov
pop
movsb
or
mov
push
jae
or
mov
jmp
dec
mov
bound
fwait
mov
outsb
in
xlat
lods
mov
in
sub
cld
call
cltd
pop
mov
scas
mov
stc
hlt
mov
cmpb
or
push
sub
int
test
inc
fs
sti
mov
sub
adc
sbb
sub
test
jmp
mov
sahf
mov
pop
loope
push
test
xchg
fldcw
inc
mov
test
je
add
mov
cli
ror
js
sub
cmc
fiaddl
xor
xchg
insl
inc
jmp
and
jnp
repnz
lcall
ja
lods
in
pop
repz
xchg
fwait
rol
mov
mov
out
jno
lret
fiadds
popa
movsb
cmc
stos
cs
repz
adc
test
mov
cltd
lret
and
adc
es
push
adc
jae
push
xchg
sbb
je
sub
mov
and
mov
add
push
mov
and
shrl
insb
sbb
pop
ds
and
leave
cmp
movsb
divl
mov
leave
mov
or
xchg
add
shr
cmp
les
push
push
sbb
test
cli
mov
pop
add
jno
pop
or
mov
popf
dec
pop
stos
enter
or
push
xchg
jne
push
cmp
shll
cs
xchg
xchg
sub
loope
xchg
push
or
fwait
stos
sub
push
pop
push
sub
jbe
cmpl
decb
and
data16
movl
sub
mov
sbb
add
mov
xchg
mov
cmpl
inc
int3
cltd
or
push
mov
add
les
and
or
jle
jne
mov
and
mov
cmp
push
xlat
inc
rcr
shll
xor
dec
les
xchg
add
and
test
pop
scas
xchg
mov
pmaxsw
push
jp
into
xchg
or
sub
mov
lds
add
pop
mov
xchg
stos
out
fs
rclb
pop
cmp
cmp
mov
sbb
in
jle
push
gs
dec
mov
push
cs
dec
jecxz
movsb
inc
inc
mov
das
inc
push
scas
cmp
add
outsl
in
push
xlat
inc
pop
dec
or
aaa
push
push
sub
test
push
shlb
repnz
mov
cmpsl
mov
pop
call
cmp
sub
jns
aad
fwait
inc
clc
and
rorb
lahf
mov
pop
mov
lods
repz
jmp
push
lcall
lods
fldcw
mov
test
leave
adc
inc
sub
fsts
pop
xchg
stos
ficomps
in
xor
in
out
sbb
inc
inc
test
sahf
sub
xchg
test
dec
lods
je
gs
pushf
insb
in
cmpsb
ds
push
xchg
pop
jecxz
pop
and
xchg
cmp
cli
xchg
shll
into
leave
bnd
fadds
mull
pop
adc
leave
aaa
lds
jmp
or
dec
icebp
cltd
jns
cmp
push
shlb
outsl
mov
jne
popf
xlat
mov
lret
ss
ret
inc
dec
sti
pop
mov
mov
in
aam
mov
mov
jg
jno
cmc
mov
push
inc
dec
xor
cmpsl
outsl
jmp
xor
addb
add
mov
cmp
fsubrs
cmp
in
ret
loope
xchg
test
sti
test
or
sbbl
jle
outsb
shrb
fidivl
fidivl
or
outsb
int
mov
xchg
sub
mov
pop
push
aas
std
mov
test
add
popa
arpl
nop
fcoms
in
mov
lahf
test
mov
aad
adc
es
and
movsb
and
test
adc
xor
push
aam
adc
mov
aaa
mov
rcl
fldt
shlb
pop
in
xlat
repnz
push
scas
je
cmp
jns
sbb
pop
sub
adcb
jecxz
lock
jae
mov
push
dec
mov
xor
cs
movhps
popa
or
push
lret
xchg
cmp
jb
mov
fstpt
jb
add
dec
ja
pop
shlb
int
out
das
adcb
je
dec
pop
cltd
inc
mov
mov
mov
push
push
mov
add
mov
pop
mov
lret
cmp
pop
or
lret
adc
fs
jle
addr16
scas
mov
in
imul
ja
xor
pop
push
add
cmc
addr16
adc
mov
and
jae
arpl
sbb
int
and
testb
jnp
movsb
pop
and
mov
push
dec
sahf
or
pop
and
xchg
inc
lods
js
cmpsb
pop
shlb
imul
push
pop
cmpsb
in
ljmp
lret
push
cmpsl
call
add
imul
sub
stc
sahf
mov
cmp
enter
dec
push
inc
jns
jne
cmc
inc
out
lret
mov
add
pop
push
daa
cmp
loop
in
fcoml
lods
lds
aaa
push
mov
int3
fwait
aas
ljmp
inc
sub
test
lea
push
ljmp
aaa
loop
and
fdivrl
mov
test
das
or
jbe
scas
insb
lcall
or
cmp
and
std
jecxz
cmp
popa
dec
push
incl
mov
repz
adc
stos
inc
pop
dec
bound
shl
dec
xlat
cld
int3
and
repz
cmp
push
or
xor
xor
push
nop
xchg
lods
call
cmp
dec
pop
int3
mov
jno
popa
hlt
cmp
mov
mov
cmp
scas
or
sub
mov
adc
or
mov
rorl
mov
enter
xor
repnz
fcmovb
stc
lds
mov
jbe
push
lods
lods
mov
int
js
clc
push
popa
jbe
cmp
mov
xchg
sarw
mov
hlt
sbb
bound
push
dec
push
jmp
popf
sub
sbb
pop
jae
fucomi
lea
clc
lds
push
lret
dec
cmp
ja
pusha
or
js
mov
mov
sbb
xor
xchg
pop
std
int3
ret
not
icebp
add
in
loope
out
movsb
shrb
inc
mov
pop
xor
shr
iret
icebp
adc
cmp
mov
loope
push
mov
int
sti
gs
cmpsb
dec
aad
push
mov
movsb
fwait
pop
movsb
and
stc
xor
mov
popa
or
xchg
popa
cmpsb
sbb
lret
aam
dec
xchg
jne
mov
adc
fwait
in
sbb
data16
sbb
dec
fldt
mov
rclb
in
mov
mov
push
pop
test
cmp
push
stc
out
push
jnp
pop
sub
int3
into
sbb
cmp
xchg
dec
dec
cmp
lock
cltd
pop
dec
lcall
rcrl
mov
vmovd
cs
loop
jnp
mov
xchg
jae
add
rolb
adc
mov
fimuls
pop
jb
sbb
shlb
push
mov
jl
in
lahf
cltd
adc
nop
dec
cli
loope
mov
adc
sub
dec
gs
mov
cmp
aad
cmpsl
mov
mov
fs
popa
add
add
cs
mov
sbb
pop
ret
in
ret
mov
iret
movsb
pop
loope
mov
lea
mov
jb
xchg
jnp
or
jns
fs
clc
sub
cli
cmp
sbb
mov
xor
sbb
push
scas
les
loope
adc
js
adc
frstor
push
cmp
push
lret
int
movsb
cmpsb
xor
mov
test
sar
rorl
or
shrl
adc
mov
mov
or
xchg
outsl
sub
mov
dec
cmp
fidivs
xchg
dec
cmp
cmp
icebp
data16
inc
xor
sahf
mov
sbb
inc
or
mov
cmpsl
out
test
fs
scas
dec
or
int
in
adc
scas
fdiv
je
imul
xor
pop
pop
xchg
mov
flds
ret
cmpb
out
push
push
push
cmpsl
push
push
and
and
sahf
mov
and
push
push
mov
inc
add
hlt
cmpsb
pop
jne
pop
dec
xor
mov
jne
sbbl
adc
pop
je
out
cltd
cmc
rcrb
mov
cmpsl
sub
lcall
in
loop
add
and
ret
lcall
test
mov
cmp
sub
std
out
dec
mov
jle
push
dec
testl
and
into
mov
ss
dec
aad
push
or
jns
shlb
inc
mov
test
dec
sbb
pop
dec
jge
xor
data16
fisubrs
mov
lea
mov
add
int3
movsl
mov
iret
push
subb
stos
xor
xor
mov
or
lret
xchg
pop
or
mov
imul
cmp
mov
pop
test
push
popa
sahf
jp
cmp
arpl
popf
mov
inc
adc
ret
imulb
out
hlt
iret
ljmp
sti
in
adc
adc
dec
inc
inc
adc
add
fs
mov
enter
repz
or
mov
jno
fistpll
ljmp
mov
xchg
aaa
rorl
arpl
or
shll
in
testl
dec
add
sar
jbe
imul
xor
popa
pushf
mov
mov
lods
f2xm1
mov
imull
rcrb
shll
rcrl
movsb
in
xor
xchg
add
dec
pop
lret
jo
xchg
fbld
push
or
es
push
jg,pt
pop
push
test
leave
mov
pop
stos
or
incl
mov
push
in
mov
stc
mov
jp
sbb
std
mov
mov
in
inc
in
jp
jae
scas
add
mov
rolb
inc
out
xchg
pop
mov
insb
push
arpl
mov
lahf
mov
jl
enter
cmp
lods
xor
daa
pop
sub
outsl
sahf
dec
xchg
push
dec
adc
repnz
mov
in
mov
jl
push
stos
xor
push
pushf
repz
push
sbb
cmpsb
pop
mov
aam
xchg
data16
jnp
mov
jge
jle
push
xchg
popa
inc
in
psrad
add
repnz
popf
dec
pop
dec
xor
daa
sbb
int3
out
dec
fldt
mov
mov
cmp
insl
inc
testb
inc
mov
or
fidivl
dec
inc
loopne
enter
dec
push
dec
pushf
cmp
push
cmc
outsb
mov
pop
ret
mov
pop
cmp
and
insl
and
or
fistpl
push
notb
imul
xchg
push
jne
mov
push
jle
imul
jg
xchg
xchg
lods
dec
scas
adc
in
push
cmp
clc
out
adc
stc
js
cld
mov
int3
xor
leave
pop
cmp
test
xor
mov
jl
out
xchg
out
call
xor
fadds
inc
xor
jp
sbb
icebp
loop
rcll
push
imul
rolb
adc
jno
cmpl
addr16
inc
lret
lock
aaa
stos
fmuls
push
inc
mov
lds
add
subb
cmp
inc
cmc
sbb
std
xchg
and
fwait
inc
push
je
dec
cmp
inc
cmp
repz
push
lods
pop
out
lods
mov
les
dec
push
dec
mov
insb
dec
sbb
mov
in
aad
ljmp
out
std
repz
or
xchg
test
lea
gs
inc
lock
mov
stos
jl
push
lret
push
cmpsb
loop
je
mov
call
inc
iret
pop
adc
xor
ret
lods
push
xchg
sub
sbb
pop
adc
mov
stc
lods
xchg
xor
jns
loop
cmp
sbb
loop
insl
jle
movsl
cmovns
dec
sub
push
gs
jmp
ss
jecxz
out
pop
hlt
cltd
lds
dec
out
xor
fcomps
and
jns
fs
movb
pop
push
aaa
sub
mov
sub
jl
xor
xor
fimuls
movsl
mov
into
jecxz
cli
sub
sub
das
iret
daa
push
js
sar
iret
lret
call
jae
pop
jecxz
mov
call
in
xor
add
sbb
dec
dec
cwtl
in
dec
push
and
lahf
cli
popa
cmp
jns
stc
mov
jo
aad
or
mov
sbbb
cmp
jl
lret
int3
add
sbb
out
scas
decl
sub
cmp
xor
ret
movsl
sbb
jle
leave
lret
ja
ljmp
iret
in
xor
dec
aas
jns
out
insb
es
push
icebp
push
or
add
aad
pop
inc
mov
popa
dec
sbb
xchg
call
mov
scas
in
jge
and
push
sbb
and
test
sti
ret
insl
cmp
jmp
sbb
lcall
jge
pop
lods
cs
xchg
or
fisubrs
cmc
add
data16
jno
das
lret
cli
cmp
add
cltd
ja
icebp
aas
mov
cs
cmpb
sbb
mov
leave
int
push
pop
and
stc
sub
jae
jb
push
aad
movsl
inc
clc
pop
lods
mov
add
negb
fisubrs
stos
xchg
stos
add
out
inc
repnz
push
pop
jge
mov
and
inc
call
inc
or
nop
pop
jnp
or
push
cmpsl
xchg
mov
out
loope
dec
repnz
mov
cmp
sub
inc
sti
popa
daa
fcoml
std
adc
insb
stos
xchg
pop
cs
mov
out
rolb
in
mov
les
mov
add
mov
adc
adc
mov
dec
jmp
in
mov
jge
outsb
dec
sbb
clc
ss
mov
mov
inc
ficoml
bound
scas
loop
push
loopne
call
xor
cmc
jno
test
jbe
pop
mov
aad
fcomp
nop
outsb
cmpsb
test
push
jge
inc
xchg
lahf
xor
or
push
cltd
shll
out
loop
sbb
lret
jb,pn
fidivl
add
push
mov
xchg
jp
jg
fstl
shll
mov
daa
mov
stos
call
cs
inc
imul
xor
repnz
adc
imul
iret
pop
retw
lret
cmp
pusha
insb
fstps
fstpt
stos
iret
popl
test
cmp
sbb
bound
lahf
jg
cmp
mov
mov
mov
jno
ret
in
sub
sub
sarb
adc
inc
in
gs
mov
cltd
fmull
adc
sahf
jg
dec
imul
imull
dec
cmp
andl
push
push
and
clc
jns
xchg
mov
add
mov
jne
push
push
ror
mov
movsb
xlat
std
push
sub
mov
cwtl
inc
addr16
mov
mov
movsb
test
xchg
fstps
push
adc
xor
push
out
or
adc
cmp
pop
call
dec
imul
xlat
lahf
test
fimull
imul
mov
sbb
sbb
or
cmp
fnstenv
pushf
fimull
sbb
addb
dec
ret
and
dec
sub
stos
shrl
sahf
jo
out
sbb
fnstsw
test
sbb
sbbl
mov
ret
js
movsl
scas
or
cmpb
add
mov
test
je
or
sub
stos
xor
shll
js
aad
int3
pushf
sti
cmpsb
cmp
inc
jns
ljmp
sbb
call
jb
ss
mov
mov
mov
fisubrs
pop
test
sbb
outsb
pushf
xor
mov
fcoml
cli
sti
xchg
fistpl
pop
lds
shl
out
pushf
aam
pushf
inc
out
out
mov
mov
xchg
dec
out
aaa
mov
cmp
imul
dec
dec
movups
jo
lods
xor
adc
sbb
fistpl
cmc
and
add
fdivrl
test
out
ss
xchg
fs
add
push
repnz
ret
mov
push
test
xor
leave
popf
shll
sbb
jmp
insb
and
cmc
dec
bound
jb
cmp
inc
js
leave
and
leave
push
inc
lahf
ss
inc
int
insl
fwait
mov
mov
jnp
xor
hlt
fisttpl
cmp
test
mov
push
jecxz
sbb
dec
sahf
jmp
adc
pop
xlat
pop
fildll
mul
out
fsubl
sbb
mov
cmpl
lret
push
cmp
mov
push
add
popl
xor
push
aam
and
sbb
mov
mov
outsb
cmp
lret
cmp
cmp
scas
loope
out
inc
xchg
test
mov
and
repnz
inc
xorl
adc
ja
mov
mov
cmpsb
aad
in
pop
cmpsl
in
jb
xchg
punpckhbw
in
leave
insb
out
mov
inc
push
lods
sub
fwait
int
int
mov
xorl
in
fimull
sahf
in
add
xchg
mov
jp
push
rorb
xchg
xor
xor
call
out
cwtl
sbb
andl
dec
xor
lods
sbb
hlt
pop
shl
out
insl
mov
rcr
jp
xchg
jl
or
ds
test
lret
push
lea
mov
push
imul
mov
aam
loope
iret
mov
enter
and
fisttpl
pop
pxor
leave
jl
jb
add
fwait
ja
jecxz
subb
and
push
push
fimull
lock
lret
lock
sbb
adc
mov
mov
sbb
add
mov
dec
roll
jns
dec
nop
jnp
jg
sbb
push
imul
pop
mov
xchg
push
bound
loop
inc
loop
out
sti
add
rorl
adcl
sbb
mov
ficomps
push
imul
sbb
cmp
pusha
loop
adc
push
mov
xchg
insb
pop
lahf
xorb
mov
mov
mov
and
sbb
arpl
movsb
push
jns
jne
lea
fsubs
and
mov
sub
xchg
scas
push
icebp
adc
popf
in
add
loop
rcr
xchg
sub
call
in
jmp
ret
mov
popf
and
mov
fwait
sub
pop
and
not
je
fisttpll
test
sub
test
xlat
or
mov
fwait
sub
xchg
idiv
fdivs
jecxz
xchg
mov
rcrb
test
sub
cmp
xor
adc
stos
mov
mov
xchg
or
and
test
cmp
daa
rorl
fdivrs
adc
testb
std
xor
adc
push
mov
inc
and
cmp
mov
mov
mov
jo
cmpsb
es
mov
cmp
out
outsl
inc
cmpsl
mov
xchg
fsubl
dec
in
xor
sbb
inc
cmpsb
sbb
add
jo
jecxz
pop
push
jmp
insl
rorl
in
jge
mov
clc
aas
jnp
imul
lahf
icebp
enter
lea
cld
jle
scas
push
cmpxchg
push
mov
test
je
dec
out
jns
sub
fisubl
lcall
mov
mov
outsl
adc
ret
mov
roll
repz
cwtl
iret
and
jae
jae
sahf
add
cmpsl
test
ret
iret
inc
aas
ret
fbld
jp
aaa
sub
imul
jl
daa
repz
inc
lahf
frstor
mov
aaa
enter
popa
bound
fs
cmp
inc
xor
insl
xor
das
jb
jb
xor
lods
fldenv
out
add
out
subb
fidivs
out
add
mov
aaa
inc
mov
mov
mov
jl
pusha
inc
lahf
sub
mov
mov
sti
outsb
rcll
mov
lahf
mov
cmp
stc
out
rorb
mov
cmpb
xchg
adc
nop
mov
sbb
rorb
repz
stc
and
dec
repz
push
or
or
or
inc
decl
enter
sub
enter
xor
xor
xchg
leave
aam
inc
sbb
es
paddd
mov
jae
inc
lds
fstpt
push
inc
dec
add
mov
jg
inc
in
and
jg
push
dec
insl
dec
adc
cmp
inc
pop
daa
pop
dec
cmpsl
scas
adc
ret
je
jmp
dec
inc
addb
xchg
sti
add
movsb
outsb
xchg
das
in
mov
cmp
mov
pop
pmuludq
add
sub
adc
cld
cmpsb
push
xchg
cmp
ret
repz
clc
ficoml
cmp
or
lods
push
in
into
test
push
cmp
inc
sbb
push
aad
xlat
int3
das
nop
rclb
xor
loope
and
mov
sub
jb
mov
sahf
mov
add
loope
sbb
add
rcrl
cmp
scas
leave
xchg
fsubs
cmpsl
test
ja
add
push
stos
push
xchg
test
orb
orl
out
jg,pt
int
ja
lret
xor
cmpl
sub
movsl
mov
aaa
mov
xchg
jne
jle
and
pop
mov
xor
in
mov
push
dec
mov
popf
fcmovnbe
cwtl
inc
jb
movsl
shll
out
mov
xor
mov
dec
outsl
cmc
and
fbstp
lret
andl
pop
stos
xlat
xor
sub
outsb
jmp
xchg
mov
add
mov
addr16
in
jcxz
repnz
leave
adc
mov
arpl
or
sbb
sahf
or
cmp
rcrb
jb
sub
inc
mov
push
ja
pop
adc
dec
arpl
xor
dec
imul
repz
pop
loope
sub
fs
fs
mov
jl
test
pop
and
repnz
rcll
push
call
adc
inc
int3
add
rorb
cmp
push
cmp
jnp
ret
subb
mov
mov
cs
sbb
pop
or
mov
cmp
xchg
or
xchg
dec
jp
or
stc
inc
repz
mov
cmp
sub
xchg
loope
shll
loope
mov
aam
pop
mov
cli
or
mov
xor
sub
in
out
mov
hlt
jp
jl
push
rcrb
lods
das
mov
push
dec
in
sbb
insb
nop
rorb
sub
std
jmp
mov
addr16
bound
dec
mov
jp
test
push
push
js
outsl
push
ljmp
xchg
push
jecxz
dec
ret
fmulp
pop
xchg
adc
mov
cmp
in
cmp
jnp
gs
push
pop
mov
xchg
out
or
loope
or
xor
adc
jnp
into
ss
mov
call
mov
shlb
je
cwtl
jmp
jo
aam
out
lret
push
sbb
sub
and
scas
incl
sarb
das
xchg
insb
or
aam
and
jmp
lea
sbb
adc
adc
jnp
sbb
jge
int3
sub
mov
cmp
fsubs
into
jb
clc
sarl
js
xor
fsubs
or
xchg
mov
sbbb
cmp
add
adc
leave
btr
cmpsb
push
fiadds
xchg
or
mov
in
lods
mov
sbb
icebp
test
ds
data16
xor
hlt
in
lcall
adcb
lahf
sub
popf
lret
fdiv
add
cwtl
xor
cwtl
jo
push
loopne
in
popa
stc
jmp
cmp
cmpsb
mov
lea
stos
arpl
dec
pop
mov
nop
insb
mov
cwtl
sub
mov
mov
dec
movsl
out
cmp
into
aaa
ja
pop
imul
adc
cmpsl
andb
arpl
in
jge
dec
push
xchg
jecxz
pusha
pusha
sbb
enter
fcompl
aas
stos
pop
rdmsr
xor
adc
cld
xchg
sbb
cmp
loope
add
push
xchg
stc
cmp
jge
dec
inc
fldcw
xchg
shlb
sub
lret
xchg
sbb
add
popa
data16
fnsave
jp
mov
jnp
push
fucom
cltd
imul
sbbb
das
mov
dec
dec
in
sub
jbe
fadds
stos
in
jo
mov
std
inc
cli
push
jo
cmp
xchg
mov
ret
daa
mov
insl
insb
fcompp
dec
sub
mov
mov
std
push
adc
sarl
loop
insl
out
imul
fisubrs
dec
subb
in
inc
pop
aam
sti
inc
jecxz
xchg
jne
aad
inc
lret
mov
scas
int3
inc
out
sar
lea
shlb
pop
in
ljmp
loop
fwait
push
dec
fnstenv
mov
scas
or
hlt
mov
ficompl
stc
xor
add
in
fsubl
pop
inc
mov
mov
add
jle
ficoml
cmp
shl
shrl
xor
faddl
and
push
mov
iret
pop
les
dec
cld
push
sbb
rolb
add
fcomi
inc
lods
mov
push
jge
imul
mov
and
adc
add
setge
mov
cmc
lahf
sbb
lcall
pop
cs
cmp
sub
loope
push
je
mov
icebp
call
and
psubsw
in
fimuls
cld
jg
cmpb
test
jmp
ficoms
lock
pop
pop
fidivrl
lods
cmpsb
sar
push
negl
push
outsb
dec
xchg
sbb
repnz
ror
mov
mov
fstpl
jmp
mov
jno,pn
data16
cli
subb
mov
lea
jae
sub
data16
add
cmp
or
push
pop
xlat
sbb
add
sbb
mov
cmp
push
jmp
lods
scas
dec
test
mov
sbb
dec
cmp
or
pop
fsts
orl
push
mov
aad
loope
in
mov
scas
cmp
clc
or
cs
je
in
and
arpl
ljmp
fidivrl
adc
pop
xchg
scas
mov
jb
scas
stc
mov
movups
xchg
xor
jnp
jg
inc
cmp
push
pop
cmp
jns
push
dec
sbb
out
mov
jno
sub
in
imul
js
jbe
dec
ja
dec
out
push
shll
fidivl
jae
mov
push
adc
mov
adc
jbe
dec
cmp
cmp
push
sbb
lret
sub
mov
sahf
out
lret
jbe
mov
xchg
inc
dec
sub
shl
push
imul
mov
loop
or
ja
popf
je
int
cmpsb
ficoms
mov
sub
mov
mov
lods
adc
xchg
aaa
lret
jo
or
mov
add
xchg
daa
nop
std
mov
dec
sbb
movsl
scas
mov
mov
fs
push
hlt
and
jl
add
mov
dec
mov
jge
jmp
mov
aad
jmp
gs
jno
scas
xchg
insb
adc
and
lret
sub
into
cli
jp
mov
xchg
pusha
pop
bound
push
sti
cmc
cmpsb
in
arpl
jmp
jmp
mov
push
lock
imul
xchg
jg
ret
xor
iret
test
cwtl
in
mov
nop
stos
jmp
aam
push
divb
add
cmpsb
mov
dec
shrl
cmp
aam
inc
ffreep
jle
or
or
push
test
pop
mov
jb
scas
testb
cmp
es
mov
test
test
push
insl
add
add
pop
test
dec
lcall
cmp
call
iret
pop
pinsrw
xchg
out
daa
test
je
pop
popa
pop
imul
sti
or
cmp
inc
jbe
mov
mov
ds
cmp
and
test
push
stos
jo
ret
ja
xchg
icebp
cld
inc
cli
nop
imul
sub
xchg
push
stc
aad
nop
pop
rorb
fdivrl
loope
add
test
icebp
jp
sub
and
test
dec
push
and
aam
int3
repz
jns
cltd
xchg
xor
rcrb
ret
notb
testl
test
lods
mov
jmp
and
add
leave
jmp
fucomip
test
xor
data16
xchg
inc
dec
ret
ds
lahf
mov
pop
cmpsb
or
xchg
cli
loopne
insl
inc
xor
out
test
xor
cmp
enter
and
int3
nop
dec
or
mov
js
lea
mov
hlt
lock
lods
js
mov
nop
sub
fcmovb
int
ds
jo
out
gs
inc
cmpsb
std
dec
or
mov
pop
inc
push
test
xchg
repz
or
sub
fs
inc
xor
dec
scas
sub
jl
dec
clc
push
pop
insb
fwait
ret
push
adc
add
xchg
jmp
imul
outsl
mov
repz
rorb
fisttps
xchg
mov
es
mov
jbe
movsb
dec
mov
imul
ffreep
add
flds
or
hlt
cli
push
aaa
push
cmc
pop
in
add
adc
push
jb
and
adc
push
stc
shlb
sbbl
sahf
hlt
or
jmp
mov
inc
cmp
fcoms
lahf
pop
gs
sbb
shll
add
in
outsb
mov
loope
fadds
sahf
in
movsl
mov
popa
pop
lcall
in
sbb
or
test
jge
movsb
dec
mov
inc
shl
xchg
xchg
cmp
iret
and
in
clc
in
lods
xor
loop
aad
dec
dec
cmp
adc
xchg
roll
insl
add
jbe
aas
pusha
fwait
jl
sbb
or
inc
jp
scas
sub
push
push
push
mov
cmp
add
inc
xchg
or
jo
xchg
jmp
fadd
and
stos
sbb
bound
negl
pop
and
pop
cltd
cltd
sub
xor
sarb
mov
pop
fdivrs
shrl
hlt
jg
sub
mov
xchg
enter
push
sti
stos
out
idivb
das
jmp
mov
shr
adc
test
push
push
fidivrl
jp
lds
and
sub
mov
inc
push
lock
imulb
cli
insb
mov
pop
or
jnp
sahf
cmp
inc
push
xchg
in
lret
mov
mov
dec
cld
adc
sbb
xchg
mov
xchg
sub
dec
mov
mov
cltd
dec
mov
std
and
dec
je
lret
daa
mov
pushl
xor
in
movsb
in
mov
add
out
inc
test
stos
and
sahf
xchg
loop
testb
mov
scas
sub
mov
std
sar
or
out
test
and
add
enter
stos
shlb
push
pushf
mov
sbb
js
into
movsb
icebp
xchg
push
xor
push
mov
inc
divl
leave
sbb
movsl
fisubrl
pop
mov
loopne
and
pop
push
xchg
imul
push
pop
xchg
jbe
and
lcall
fwait
ret
ret
test
lods
pop
les
cmp
or
ret
mov
xchg
subl
leave
jl,pt
int
sub
dec
push
sub
or
and
pop
scas
xchg
inc
sbb
push
jl
adc
jb
outsb
dec
fs
cmp
mov
push
inc
sub
mov
cli
scas
mov
push
xchg
outsl
and
scas
xchg
mov
sub
adc
jl
shlb
dec
pop
call
fsubr
xchg
cmpsb
push
mov
roll
mov
push
fmul
addr16
dec
arpl
mov
push
js
aam
adcb
mov
cmp
out
loopne
mov
xchg
ret
push
inc
addr16
xchg
arpl
xlat
test
cmp
adc
nop
and
adc
add
adc
rcrl
cmp
inc
outsb
imul
push
in
roll
push
jo
loope
mov
sub
ljmp
cltd
pop
mov
mov
scas
lcall
call
lret
push
lock
xor
and
mov
mov
push
clc
pop
bound
xchg
inc
cmp
out
lea
sub
fsubrs
in
push
lods
and
inc
incb
cmc
test
cmpsl
sahf
dec
xor
insl
leave
loope
cltd
mov
cltd
sub
mov
mov
jmp
sbb
adc
xchg
dec
gs
add
add
inc
ljmp
cwtl
xchg
push
sub
leave
add
mov
scas
adc
mov
inc
pop
dec
loope
cmp
lock
sbb
loope
mov
lods
rcrl
test
test
movsl
mov
jnp
or
out
pop
adc
scas
push
clc
aaa
adc
dec
mov
sub
fcomp
vcvttsd2si
das
sbb
fmuls
ss
or
das
or
jcxz
aam
dec
adc
jno
dec
aaa
cltd
mov
xchg
xchg
add
mov
mov
stos
or
lea
pop
test
xorl
cli
mov
call
or
mov
rolb
xchg
std
or
pop
cmp
lods
and
and
testb
imul
ret
mov
in
out
jae
mov
jl
sbb
mov
and
rcrl
mov
movq
sub
mov
ds
leave
lods
adc
imul
out
pop
push
push
pop
fwait
pop
mov
lea
or
jnp
outsb
dec
inc
insl
mov
es
cmp
dec
xor
in
mov
lock
push
in
cmp
fistpll
stos
xor
cld
or
pop
sbb
dec
inc
xchg
ret
push
push
shlb
pop
stc
dec
fwait
xchg
pop
les
inc
in
inc
xchg
jbe
and
push
mov
mov
fdivrp
sub
ror
mov
dec
adc
or
cltd
sbb
test
pop
in
imul
fcoms
sub
in
and
xor
pop
shlb
pop
ret
imul
cmpsb
shl
jg
cmp
loope
inc
cmc
and
iret
xor
pop
int3
push
sub
xlat
jl
push
int3
pop
dec
clc
jb
mov
shll
les
jmp
and
xchg
aad
adc
mov
add
jne
sbb
mov
andl
movsb
mov
clc
sub
icebp
mov
fwait
mov
and
xor
push
mov
insl
push
sahf
inc
andb
rcrl
scas
popf
scas
dec
ljmp
shll
pop
xchg
nop
cmp
mov
mull
cmp
sahf
xchg
mov
jmp
xchg
cmpsl
mov
xor
mov
stc
cmp
filds
pop
mov
fsubr
std
mov
cmc
jne
sbb
outsl
sub
push
push
repz
in
mov
lds
rolb
nop
pop
sub
ret
imul
push
pop
mov
xchg
pop
sub
ds
in
add
jg
jo
mov
cwtl
loope
fs
sbb
inc
stos
and
inc
push
loope
lock
mov
dec
test
jae
fcmovnbe
jge
or
pop
into
int
mov
dec
orl
dec
add
ja
add
add
std
mov
sub
in
mov
add
or
push
roll
rorl
xchg
adc
fs
mul
iret
or
jno
mov
pop
fcomps
and
daa
std
add
or
jp
xchg
mov
lock
icebp
pop
add
sbb
movsb
pusha
or
fcmovbe
les
movsl
sbb
aaa
xor
out
out
pop
add
data16
loope
lret
cwtl
lods
ret
lcall
mov
mov
jnp
cmp
sub
mov
fs
sub
icebp
inc
icebp
nop
fmull
out
cmp
fiadds
test
int3
outsl
int3
sub
jp
data16
out
aad
arpl
imul
push
cli
ds
cmp
pop
and
adc
adc
fcompl
sub
jmp
ds
out
out
xchg
mov
in
pop
pop
popf
fmuls
and
jl
outsl
adc
mov
push
inc
xor
jg
nop
push
shlb
scas
adc
mov
in
jne
xchg
ret
xchg
shrl
lcall
mov
int3
fidivl
mov
popa
and
test
pop
out
data16
loop
mov
xchg
cmp
aaa
or
add
aas
addl
test
and
mov
lds
pop
pop
lods
mov
jge
cwtd
push
cs
cmpsl
aas
mov
rcll
movsl
rclb
push
es
stos
xchg
ds
jmp
ss
jbe
rcll
loop
add
divl
shll
cli
je
scas
xchg
push
cmp
insb
push
xor
inc
shrl
pop
push
movsl
xor
inc
sub
mov
sbb
leave
cmp
push
cmpsb
and
fucomi
inc
fwait
and
xchg
in
sub
push
mov
inc
fwait
imul
outsl
fnstcw
push
adc
dec
ret
fsubrl
push
mov
pop
push
int3
inc
pop
fmul
insb
mov
aaa
and
dec
mov
nop
stos
add
xchg
inc
sub
stos
test
mov
dec
jp
xor
mov
cmp
jne
xchg
movsl
sbb
mov
cmpsb
mov
je
ljmp
xchg
push
jae
cli
bound
rolb
push
push
je
lds
or
push
lret
mov
rclb
and
push
pop
mov
and
leave
add
push
int
mov
or
js
data16
int3
mov
stos
xor
lods
movsb
mov
scas
stos
xor
aaa
aas
cmp
jle
mov
cmp
mov
filds
push
sub
popf
xor
push
rcrl
cmovo
adc
push
cmp
cltd
xchg
shr
rcrl
es
or
xor
movsl
out
push
loopne
movsb
inc
xchg
daa
jge
and
and
adc
ja
jmp
test
dec
or
cmp
jmp
cmp
js
fdivr
imull
push
out
mov
xlat
cmp
cmp
pushl
fisttpll
pop
push
stc
lret
scas
xchg
into
pop
or
ret
add
lods
mov
mov
das
sbbb
adc
shrb
sub
inc
mov
testb
pop
push
mov
or
int3
pop
push
lret
fmuls
stc
iret
scas
add
push
push
in
push
push
add
fmull
adc
xor
fwait
cmp
stos
dec
mov
add
fwait
jg
ss
test
out
data16
cltd
shrb
stos
gs
popa
call
sbb
clc
cmp
leave
or
and
repnz
mov
add
push
std
loope
dec
cld
out
lds
mov
lods
cmp
inc
jecxz
in
dec
clc
popf
adc
add
pop
call
adc
push
xor
lods
popa
rcrl
imul
cmc
xor
cmpsb
mov
hlt
and
rcrl
into
out
rorl
icebp
repnz
rcll
inc
test
cltd
daa
cmp
xor
popa
imul
iret
dec
mov
cmp
inc
and
lahf
outsl
loopne
dec
or
dec
and
out
xor
inc
ja
aas
fs
xchg
adcb
and
bound
mov
push
fstpl
into
xchg
mov
xchg
cli
or
or
out
cltd
push
sbb
test
mov
xorb
jb
add
jnp
mov
popl
jb
cmpsl
jge
insl
xchg
imul
shll
test
into
sbb
lods
inc
sub
fadds
mov
xchg
dec
dec
push
fwait
out
popa
icebp
pop
int
xchg
push
pop
jmp
enter
aas
jno
jmp
or
mov
insl
dec
sub
loop
dec
call
je
fmul
popa
leave
fsub
push
dec
mov
ss
leave
dec
ds
add
jb
mov
inc
adc
and
sub
outsb
adc
cltd
and
xorb
cltd
adc
std
rol
es
adc
mov
leave
aam
fcomps
cmp
or
push
rcl
sub
int3
outsb
push
pop
lahf
stos
add
shlb
hlt
mov
aam
sbb
in
jno
movsb
aas
cwtl
int
int
lahf
dec
ds
add
cmp
cltd
cs
call
rclb
ja
es
pop
in
sbb
mov
jp
sbb
les
aam
push
push
push
movsl
testl
or
sub
pop
movsl
dec
mov
xlat
das
fisubs
cmp
cmp
dec
adc
mov
cmc
mov
ret
dec
xchg
orps
movsl
jo
shll
push
inc
push
sbb
arpl
mov
in
jg
pop
aam
fldt
inc
ljmp
loopne
scas
pop
xchg
dec
jge
dec
sbb
fdivp
lret
cs
fmulp
mov
cmc
push
add
xchg
sti
inc
pop
icebp
enter
push
lret
sub
push
insl
test
dec
sti
jmp
cmp
in
jae
aad
addr16
jmp
xor
and
xor
mov
mov
sub
lret
cmp
jae
ret
pop
jge
leave
mov
push
and
test
cs
int
outsb
mov
jmp
mov
jmp
cmpsl
cwtl
cli
popa
xchg
ja
mov
shlb
fstpl
or
test
je
mov
inc
mov
adc
hlt
push
sub
xchg
inc
aam
mov
out
jb
add
or
sbbb
sarl
adc
stos
test
call
add
mov
jmp
mov
scas
cmpsl
dec
adc
mov
aas
mov
push
gs
pop
xchg
jno,pn
enter
andl
cld
cmc
mov
movsl
mov
daa
adc
cwtl
cwtl
enter
jb
lds
jg
mov
testl
fnstsw
push
mov
mov
or
mov
pusha
mov
lret
xor
std
ja
adc
out
push
sbb
sbb
call
cwtl
rcl
xchg
adc
fstpl
push
aaa
enter
jae
cmp
push
popf
mov
out
push
aaa
inc
mov
arpl
pop
movsb
scas
or
sbb
sub
insb
in
into
dec
fistl
jle
push
mov
cwtl
aad
sub
aaa
or
dec
or
aad
in
out
int
sbb
mov
mov
in
push
mov
aas
jns
mov
iret
adc
inc
insb
imul
and
hlt
popa
mov
ficoml
stos
mov
stos
sarl
mov
in
adc
cs
or
push
sbb
cmp
sbb
fcoms
out
pop
fwait
mov
jp
jns
scas
gs
shll
pop
sahf
shlb
pop
add
xlat
push
repz
leave
jle
or
inc
aas
cmp
adc
sti
sbb
clc
xchg
icebp
jbe
fwait
in
repnz
bound
jb
lods
jp
adcl
test
pop
xchg
fildl
movl
cwtl
cld
out
repnz
data16
and
and
aas
shl
dec
and
cmpsl
andl
js
bound
dec
push
icebp
repnz
add
cmp
pop
jns
or
lret
jecxz
xchg
mov
gs
stos
inc
lret
push
and
shrb
sbbl
cmp
call
xchg
add
xor
cmp
mov
push
or
outsb
pop
xchg
sbb
popf
orb
adc
add
in
stc
arpl
imul
outsb
jle
aas
sbb
inc
push
aam
outsl
fnstsw
jae
xor
lods
and
inc
lcall
pop
dec
mov
mov
cmpsl
lds
cmp
mov
cmpxchg
cmpsl
fmul
mov
test
cmp
scas
or
cmpsl
dec
sub
imul
xor
cmpsl
mov
or
push
xor
and
push
push
std
fbstp
les
lods
push
mov
add
cmp
sbb
mov
xor
inc
test
insl
jg
pop
and
outsl
push
xor
addr16
inc
imul
lahf
dec
mov
popa
inc
insl
fcoml
or
ljmp
shlb
inc
cmp
xchg
leave
pop
and
lods
lret
mov
sarb
ds
inc
xor
cltd
push
ljmp
sub
inc
push
outsb
jno
sysret
pop
xchg
pop
mov
cmpsb
sbb
pushf
bound
shlb
mov
lea
push
push
ja
mov
push
ficomps
push
xchg
mov
mov
and
push
iret
and
inc
and
xor
arpl
inc
xchg
rclb
jmp
sub
add
add
sub
add
lods
mov
fisttpl
adc
add
out
lahf
jns
stos
fimull
cmpsl
popa
pop
push
fisubs
shrl
dec
sbb
cmp
add
scas
sbb
aas
lods
stc
repnz
orb
mov
push
adc
aaa
sti
mov
jle
adc
leave
das
or
sbb
data16
mov
lahf
or
aam
sub
push
out
mov
adc
test
adc
jle
jmp
xor
push
mov
or
add
daa
ja
mov
sbb
xchg
xchg
in
add
outsl
or
sar
push
adc
jg
mov
loop
lret
inc
leave
mov
jno
mov
mov
mov
sbb
sub
pushf
fistps
adc
pop
xor
mov
push
movaps
sbb
cmp
daa
leave
aaa
sbb
jb
sub
popa
repnz
jl
enter
repz
jmp
xor
push
add
sbb
xchg
fyl2xp1
sbb
inc
iret
movsl
int
outsb
push
jns
push
out
inc
mov
subb
jg
or
fistpl
push
clc
cmp
retw
fcomps
test
xchg
movb
hlt
mov
inc
pop
out
xchg
cs
sbb
andb
push
and
ljmp
inc
rorb
sarl
lcall
scas
cmp
in
xor
mov
outsb
sbb
cmp
insl
das
lahf
and
mov
jmp
xor
add
cmp
icebp
je
lods
adc
imul
sbb
jecxz
fcomp
mov
push
orl
jp
scas
ds
push
cmp
lods
dec
sar
and
sub
inc
mov
xchg
sub
ds
cltd
xor
add
or
popf
cld
ja
gs
mov
stos
add
push
jg
jge
xor
pusha
add
mov
fs
mov
push
dec
xchg
dec
mov
lcall
sbb
sbb
outsb
ljmp
and
out
or
push
sbb
stc
out
mov
mov
ljmp
jno
sub
pop
jb
mov
and
aam
adc
dec
mov
addr16
jl
sqrtps
xor
cmc
iret
push
negb
sub
cmp
mov
scas
mov
loope
jbe
in
mov
stos
inc
imul
xor
add
mov
and
push
aaa
fisttpl
lods
ret
orb
popa
out
std
sbb
fwait
mov
add
push
pushf
add
adcl
aas
lret
sti
xchg
xchg
mov
fsts
mov
dec
jae
mov
leave
inc
jb
enter
mov
leave
divl
cmp
cmpsl
and
mov
pop
fwait
jns
jp
das
mull
sub
ret
adc
cltd
jb
push
arpl
pushf
gs
jns
ja
mov
int3
dec
leave
sub
sub
hlt
lahf
xchg
rcr
inc
into
out
xchg
xchg
imul
sub
xchg
loope
xchg
mov
cltd
or
adc
inc
es
loop
jno
arpl
push
or
xchg
jo,pt
dec
stos
gs
add
es
xchg
pusha
fstl
cmp
bound
pushf
add
and
daa
popf
cltd
add
xchg
decl
push
arpl
xchg
xchg
into
inc
es
loop
inc
pop
in
mov
inc
sub
arpl
jne
popf
adc
xor
fsubr
aaa
arpl
cmp
adc
and
mov
push
mov
dec
leave
js
repnz
jbe
mov
sbb
xchg
inc
inc
adc
jns
xor
lcall
or
incl
mov
fisubrs
aaa
xchg
jo
fs
lods
nop
cmpsb
daa
jne
fsubr
dec
jns
loope
fisubs
cltd
aad
or
or
cmc
int3
inc
cmp
xor
mov
int3
cmc
jge
repnz
std
or
je
mov
lahf
sbb
ss
sbb
pop
pop
inc
push
arpl
in
fcoms
lock
xchg
pop
xchg
std
sbb
pusha
adcb
pop
dec
jb
arpl
cmp
mov
in
sarb
fwait
pop
push
xchg
js
push
nop
xor
mov
je
test
dec
imul
shl
out
cmp
cmpsb
test
nop
xchg
cmp
ficompl
cmpsl
jp
vmread
arpl
push
ds
int3
cmp
imul
sahf
out
fwait
jl
stos
divb
sub
in
enter
inc
sbb
adc
pop
cmpsb
push
popa
xchg
xor
jp
fxch
or
aas
mov
fiaddl
lods
das
push
lret
or
aad
leave
lods
mov
repz
jmp
push
jnp
shlb
test
add
out
lods
xor
push
pop
dec
das
dec
cmp
dec
xlat
dec
aas
fildl
imul
out
xorb
lahf
fisttpll
mov
out
popf
push
arpl
outsl
xor
adc
mov
loopne
jg
cmp
xchg
out
dec
pop
out
sbb
fstl
or
repz
fisubl
xchg
dec
outsb
in
mov
sub
movsl
lcall
ds
mov
push
shr
pop
push
and
jl
inc
pop
jbe
xlat
repz
pop
movsb
ret
icebp
movsb
jecxz
js
pop
pushl
lock
mov
psrad
jge
jb
mov
into
add
inc
push
rolb
jns
hlt
repz
and
mov
ret
jno
push
dec
ret
movsl
pushf
and
sub
pop
push
mov
adc
jmp
dec
sbb
sti
pop
jmp
into
ja
dec
mov
xchg
mov
lret
xchg
jb
ljmp
arpl
inc
testb
xor
dec
fiaddl
les
adcb
lods
pop
jl
mov
mov
jg
inc
stos
pop
jle
lret
jle
dec
mov
mov
dec
lods
push
popl
mov
cmovo
rcrb
jns
dec
lock
lods
jae
lods
loop
xor
arpl
xor
dec
stos
ds
rcrl
jg
push
hlt
std
pop
movsb
xor
xor
out
adc
sbbb
fildl
cmc
mov
adc
jmp
out
inc
add
into
testl
lahf
and
push
sti
xor
mov
adcb
inc
cs
dec
mov
jns
push
add
out
xchg
mov
lcall
fldl
faddp
roll
xchg
push
frstor
add
test
test
push
jecxz
sub
icebp
inc
lret
iret
ss
test
xbegin
aas
jns
sbb
mov
adc
dec
push
sti
push
inc
xchg
pop
shll
jmp
jmp
sbb
imul
int3
aad
popf
movsl
mov
lcall
push
cmp
dec
lcall
das
test
sub
mov
cmp
mov
repnz
pop
into
cmp
add
lea
sbb
dec
xchg
addl
inc
stc
push
xor
mov
cmovbe
pop
dec
leave
jmp
imul
scas
rcll
scas
movsl
pop
adc
ret
in
jbe
inc
xchg
frstor
incb
shrl
imul
in
or
and
mov
fsubrs
sub
cwtl
js
dec
leave
fwait
mov
in
imul
mov
mov
leave
sub
cld
outsb
mov
cli
enter
call
pop
mov
insl
dec
mov
sub
sub
push
arpl
mov
xorb
stc
sar
dec
imul
pop
jl
mov
in
call
clc
js
xchg
arpl
mov
clts
aad
push
stos
pop
mov
adc
sub
mov
adc
push
gs
mov
sub
inc
inc
stos
jle
mov
mov
xor
daa
sti
in
push
pop
mov
inc
jecxz
in
xor
int3
inc
sbb
jecxz
or
sarb
or
sub
cmp
inc
dec
cmpb
pop
mov
fnstcw
xchg
int3
adc
push
or
fsubrl
in
jp
cmp
pushf
std
jp
cmp
push
xor
out
pop
sarl
xchg
orl
repz
setnp
rorl
ret
jnp
xor
dec
in
dec
xchg
cwtl
int3
shl
push
lds
sub
cmpsb
ret
imull
ret
dec
out
jl,pn
fidivl
cmp
pop
jmp
dec
scas
dec
sbb
xor
mov
adc
add
pop
outsb
hlt
mov
fstl
aaa
in
jns
push
shr
push
stos
ljmp
addr16
add
jmp
scas
jle
mov
scas
popa
or
test
mov
mov
lret
inc
in
push
insl
xor
and
nop
mov
mov
das
sub
dec
mov
pop
movsb
mov
shlb
int3
mov
sbb
jg
cmpsb
add
in
into
jl
pop
mov
or
test
pop
insl
fs
or
pop
or
push
xor
fbstp
fildl
add
add
inc
fwait
or
adc
and
xchg
iret
and
jecxz
scas
ja
xor
addr16
aad
adc
mov
iret
mov
add
shll
fs
ja
in
cmp
fistpll
roll
pop
in
lods
rcrb
add
sub
lahf
jmp
push
xchg
imul
nop
sbb
es
lret
jo
push
addr16
pushf
mov
adc
imul
inc
pop
adc
inc
ja
xchg
inc
or
dec
addl
iret
ret
test
inc
mov
repnz
pushf
sbb
dec
shlb
adc
mov
cmpl
bnd
idiv
out
push
inc
outsl
fisubl
jo
xchg
nop
cltd
repz
repz
adc
aad
nop
leave
or
stos
mov
add
mov
call
cs
jle
sbbb
or
inc
mov
into
cwtl
cmp
jecxz
jnp
adc
out
mov
mov
cmpsb
ljmp
pushf
dec
sbb
mov
in
cltd
addr16
test
sbbb
xchg
dec
dec
in
mov
jg
int3
pop
sahf
mov
xor
or
mov
push
sbb
mov
or
ja
aam
insl
and
push
xor
outsb
pop
cmp
ja
cmp
cwtl
cmpsb
enter
shrl
insl
lret
mov
leave
dec
repnz
sbb
shl
cmp
or
shlb
add
int3
pop
out
mov
xor
out
jnp
in
dec
out
fnstenv
ret
cld
sahf
mov
mov
into
jp
dec
xor
xchg
mov
jne
xchg
ret
pop
in
bound
jge
enter
push
loope
and
pusha
sub
inc
jecxz
and
push
out
movsb
test
jbe
hlt
sti
jge
adc
rcrl
loop
hlt
or
mull
inc
add
int3
inc
pop
mov
dec
lods
rorl
jge
mov
cltd
adc
push
rcrl
dec
xor
cmp
sti
cmp
dec
outsl
call
stos
loopne
push
pop
cmp
cwtl
xor
pop
add
shl
jle
jno
push
out
test
push
jmp
xor
cli
jp
repnz
packsswb
xlat
push
in
aam
adc
jmp
lcall
add
imul
nop
mov
sbb
and
rcrl
das
dec
mov
inc
xchg
repz
xlat
push
cwtl
insb
push
fbstp
jecxz
pop
cltd
mov
shlb
fiaddl
mov
xor
sub
popl
je
sbb
daa
sub
out
add
psubw
mov
jbe
sarl
jae
out
add
loop
or
pushf
sbb
push
adc
inc
mov
insb
ds
mov
lods
shrl
push
mov
test
int3
inc
adc
and
adc
sbb
mov
sub
scas
hlt
ret
jge
aas
scas
sub
xchg
sbb
rcll
pop
xchg
add
jp
cmp
add
add
outsb
cwtl
push
testl
arpl
push
jp
pop
icebp
in
sub
inc
iret
gs
ja
int3
jbe
xchg
pop
and
xor
dec
lock
ss
icebp
dec
add
sbb
imull
mov
xor
mov
dec
add
mov
mov
or
and
push
mov
mov
jle
movsb
icebp
fists
addr16
adc
out
inc
into
iret
push
cmp
dec
push
int
stc
rcrl
js
outsb
jecxz
stos
mov
pop
ljmp
pop
fisubs
js
dec
mov
rolb
add
dec
lcall
inc
push
xor
pop
dec
outsl
adc
push
shlb
jb
cmp
mov
adc
mov
jae
shrb
ret
test
jne
int3
test
inc
mov
push
mov
pop
cwtl
out
or
inc
out
lretw
and
and
pop
ret
movsb
in
test
cmpb
jnp
mov
lods
pushf
sarl
orb
xchg
fldenv
push
orl
jge
xchg
sub
mov
dec
mov
hlt
sub
push
xor
jl
dec
push
push
sub
mov
xor
push
test
or
xchg
pop
mov
movsl
adc
xor
loop
aaa
xchg
jl
fldcw
mov
mov
mov
sbb
enter
sbb
pop
lcall
and
add
push
jl
loopne
push
push
lock
add
inc
fstpt
cmp
int
pop
daa
dec
aad
ss
int
cmpsb
sub
lahf
sub
fsts
dec
ret
inc
adc
outsb
int3
outsb
adc
dec
mov
int
or
fidivrl
pop
and
div
mov
fldl
stos
movsl
lds
or
add
sti
in
cmpsl
mov
sbb
jae
pop
fisubrl
sbb
lret
jecxz
push
jae
xor
repnz
mov
push
arpl
or
cs
insl
inc
int3
xor
int
repz
imul
fwait
lret
mov
lds
decb
add
rcrl
je
jbe
sub
mov
mov
sti
pop
jbe
ss
push
mov
imul
fwait
out
cmp
insb
cmpb
fmul
arpl
shl
int
addr16
daa
xchg
lods
xlat
mov
pop
mov
xchg
fcoms
sar
movsb
mov
dec
push
repz
ret
jo
lret
push
sub
inc
lahf
mov
pop
push
xchg
je,pn
push
lea
roll
jnp
and
jne
dec
inc
call
test
int3
xchg
jbe
xor
add
ficoml
imul
jecxz
sbb
std
stos
js
xor
in
repz
cmp
iret
inc
xor
lds
and
iret
xor
aas
scas
jo
scas
arpl
fdivr
cmp
scas
cmpsb
cli
inc
fisttps
fmuls
push
lea
repz
push
xchg
jbe
in
inc
loope
ljmp
mov
fs
mov
push
pop
addr16
popa
imul
push
jns
and
cmp
add
mov
call
adc
fimuls
mov
mov
stc
sub
pop
and
pop
cmp
push
test
xlat
out
inc
pop
inc
sub
lods
sub
xor
fs
leave
inc
test
and
cmp
inc
cmpsl
lret
mov
fcomi
xchg
js
aaa
adc
jne
cmc
iret
push
cs
out
jne
xor
imul
out
pusha
cmp
fdivs
rolb
and
lret
inc
aas
std
mov
leave
test
xor
push
pushf
push
ja
xor
andps
ljmp
insl
in
mov
out
in
mov
in
push
push
outsl
or
repz
insl
cwtl
stos
sbb
gs
push
cmpl
jl
jb
fstps
dec
jmp
xchg
sbb
adc
xchg
push
out
adc
xor
lcall
movsl
xchg
in
pop
push
mov
scas
popf
pop
in
mov
lods
idiv
inc
in
inc
int
pop
jg
sub
pop
popf
push
and
inc
in
imul
loopne
inc
xor
add
sti
pop
fimull
lret
cmp
push
push
js
adcb
fbld
cli
cli
jle
cmp
fwait
shll
insb
arpl
icebp
mov
pop
ja
imulb
insb
aam
jmp
jnp
dec
jo
mov
sub
push
je
push
loope
pop
sub
mov
pop
rcrl
popa
sbb
jne
inc
jae
mov
or
imul
push
xor
xor
adc
jmp
dec
nop
mov
scas
push
xchg
pusha
add
mov
sub
push
mov
dec
mov
push
jmp
aam
sub
add
push
mov
xchg
or
sbb
outsl
inc
sar
dec
adc
rorl
into
mov
lcall
test
add
dec
outsl
bndstx
xor
push
mov
pusha
adc
dec
inc
test
xor
cltd
cmp
pop
inc
pop
xor
mov
movsb
xchg
xchg
or
loop
add
push
iret
or
cltd
int
xchg
adc
xor
inc
je
sahf
sti
or
cs
je
mov
daa
ror
cmpsl
sbb
orb
repnz
shrl
xor
or
and
lret
jle
popf
adc
jae
movsb
pop
ja
inc
stos
sti
cmc
or
andb
imul
jg
lahf
loopne
loope
dec
xchg
inc
stos
push
push
cli
mov
pop
and
prefetch
insb
mov
sbb
repnz
rcrb
lds
pop
mov
jg
pusha
mov
int3
ja
outsl
mov
sti
add
jg
mov
int
sub
das
das
rol
rcl
movsl
fwait
lock
mov
test
cmc
pop
mov
lcall
adcl
sarb
xchg
pop
cmp
pop
add
aas
add
ja
dec
and
lods
icebp
fcomps
fnstenv
push
fsubrl
mov
pop
pop
lcall
adc
out
shll
pop
cli
imul
add
nop
in
lcall
mov
xor
dec
subl
loopne
cmp
inc
ljmp
jne
jae
lods
aad
jl
lds
orps
pop
fildll
push
iret
repz
bts
pop
jp
jp
push
push
cmp
inc
das
mov
mov
aas
push
cmc
dec
adc
out
jecxz
sub
sbbl
sub
pop
push
in
cmp
out
scas
stos
incl
icebp
jmp
sti
stos
sub
pop
or
stc
xor
int3
popa
stc
out
aas
sub
xor
in
sub
add
enter
nop
loope
adc
cmpb
and
xchg
mov
sub
orb
std
bound
push
fisubs
sbb
sbb
icebp
sub
lret
shlb
fwait
mov
mov
add
sahf
or
xlat
mov
sarl
repnz
les
es
pop
and
jp
out
sbb
jne
data16
xchg
imulb
inc
lcall
divb
or
add
xor
push
push
pusha
dec
or
js
inc
sbb
cmp
dec
adc
shlb
mull
mov
scas
pop
jo
mov
loope
dec
pusha
es
push
sbb
int
in
lret
cmp
popa
arpl
ret
cltd
dec
cmp
fstpt
dec
lods
into
pop
fbld
cs
dec
inc
movsl
push
push
addr16
inc
fimuls
and
rorl
cs
sub
cmpsb
xor
inc
cmpsb
xchg
pop
movsl
and
jo
fbstp
cmp
movsl
jb
mov
mov
add
lock
jbe
push
fwait
movsb
sti
aaa
cltd
mov
aaa
jno
sub
jae
fsts
sbb
in
cmpsl
sahf
enter
cmpb
xchg
shl
mov
sahf
test
leave
add
test
mov
mov
push
xchg
addr16
adcl
xchg
out
scas
inc
pop
push
push
mov
lret
mov
fdivrl
xchg
ljmp
xor
add
xchg
addr16
es
push
stc
dec
pusha
inc
repnz
aam
sarb
mov
repnz
pop
push
pop
xchg
aam
adc
sub
inc
and
jecxz
dec
add
ljmp
push
mov
add
sbb
fidivrs
testl
aam
not
movsl
scas
add
aas
push
cmpsl
test
in
xor
add
mov
cmc
dec
cld
in
je
push
mov
mov
jo
dec
xchg
ss
popa
sbb
shrb
mov
push
cmp
andb
pop
inc
in
mov
int
adc
pop
mov
dec
out
mov
and
int
mov
shrl
mov
nop
int3
add
add
sbb
and
jmp
scas
out
dec
xchg
and
dec
outsl
test
mov
movsl
push
shl
pop
ss
inc
add
and
rcll
movsb
sub
in
loop
fldl
ss
mov
dec
cld
or
adc
pop
cmp
push
hlt
hlt
cmp
cld
lcall
les
out
jle
xor
popa
inc
movsl
adc
lock
xor
repz
jno
dec
ss
lods
shlb
mulw
jae
insl
add
data16
xchg
dec
scas
mov
push
jmp
cmp
stos
xor
inc
les
addl
mov
aad
dec
rorb
lret
dec
ret
call
push
je
lea
add
adc
dec
jne
mov
into
push
mov
xor
or
lea
repnz
clc
xchg
mov
mov
jmp
mov
stos
ds
daa
push
and
fs
leave
je
arpl
cld
inc
add
push
lret
sbb
cmp
sti
pop
iret
push
sbb
daa
cli
stos
jae
or
arpl
cmp
sbb
push
inc
fs
sbb
push
xchg
aaa
fsubp
popf
sub
arpl
lds
flds
repnz
mov
mov
adc
adc
xor
lea
xchg
fwait
push
cli
movl
push
add
in
rcr
imul
cmp
jl
mov
jg
inc
fldt
xchg
push
incb
inc
lods
and
add
mov
mov
mov
jge
mov
mov
loop
push
mov
in
das
test
popf
cmc
fmuls
pop
aad
pop
jae
lods
push
mov
cmpb
filds
dec
andb
mov
mov
push
mov
mov
adc
lret
pop
incl
lcall
lods
dec
push
add
leave
and
pop
enter
xchg
cmpsb
and
sbb
lods
mov
and
inc
lods
loop
xchg
xchg
xchg
pop
mov
jno
lea
and
popf
insl
add
pop
or
cmc
addb
dec
ret
sbb
insl
xlat
adc
ret
cwtl
leave
and
not
pushf
shrb
adc
xchg
pop
ljmp
pop
stos
loopne
ret
adc
movsb
inc
leave
aad
jae
mov
mov
mov
lret
stos
fcomps
push
addb
in
testl
dec
sbb
testb
insb
fwait
push
out
lahf
inc
repz
lock
jnp
insl
jns
mov
ja
mov
sti
jle
out
cmp
xor
lahf
xchg
pop
fucomp
stc
cmc
push
iret
repz
cld
lods
adc
bound
int3
sub
dec
lret
adc
or
jne
jne
ret
cmp
mov
mov
pop
push
jp
aaa
or
inc
cmp
mov
sub
inc
sub
dec
sbb
call
inc
data16
orl
jo
sub
push
and
jae
mov
add
bound
dec
pop
xchg
xor
out
xor
js
mov
or
jae
icebp
movsl
fdivl
lahf
int
inc
sbb
mov
repnz
div
dec
mov
xchg
stos
ss
jo
inc
push
insb
ret
jmp
add
enter
inc
iret
mov
movsb
dec
outsb
stos
adc
test
lea
dec
dec
mov
adc
mov
testl
int
jp
stc
mov
mov
enter
fimull
xchg
divb
insl
or
outsl
test
xchg
shlb
sub
gs
fstp
into
dec
adc
inc
sbb
inc
inc
out
sbbb
pop
out
test
mov
push
test
dec
push
shll
cmc
mov
add
cli
cmp
xor
notl
mov
or
aaa
andb
cwtl
xchg
call
adc
jp
sahf
lea
invd
stos
cmp
sub
aas
pop
stos
stc
mov
in
in
mov
cs
push
inc
jmp
sahf
cwtl
xchg
int
jl
sub
dec
insb
in
call
sahf
add
lods
pusha
pop
loopne
xchg
or
shll
fdivr
jae
jmp
imul
sbb
jmp
addb
or
xchg
lret
jns
jl
outsb
jno
dec
sahf
mov
mov
shr
pop
mov
idivb
mov
inc
xor
jg
add
mov
pop
xchg
call
movsl
jo
adc
mov
sarb
fwait
mov
xor
or
jge
ljmp
cmp
mov
cmpb
outsl
lret
leave
jl
mov
pop
aam
shlb
and
test
es
adc
cmpsl
pop
popa
inc
jbe
call
mov
addr16
rclb
std
mov
pop
inc
push
sti
cmp
ljmp
sub
cmp
clc
lcall
notl
push
xchg
or
stos
pop
pop
xchg
dec
cmp
sbb
dec
jg
pushf
inc
idiv
mov
std
rorb
cmp
pushf
cmp
outsl
hlt
jb
fisubl
std
and
jl
jo
mov
or
clc
inc
fwait
mov
inc
xchg
lcall
imul
jnp
nop
mov
es
and
jb
or
ljmp
loop
pushf
pop
iret
test
sub
mov
inc
adc
xchg
out
jmp
mov
xor
jb
push
test
cmp
push
dec
dec
sub
push
inc
push
mov
mov
sub
stos
dec
fisubrl
dec
insl
outsb
dec
test
cli
cli
nop
loopne
add
cmpsl
je
out
pushf
bound
mov
insl
cmp
repz
in
push
adc
mov
aaa
std
daa
mov
cwtl
push
int
push
dec
lret
dec
add
fsubrs
das
fabs
mov
push
pop
movsb
push
in
mov
pop
outsb
fdivrp
rcrb
sub
mov
cmp
ret
jg
lcall
sub
cmp
mov
shr
je
or
sar
fisttpll
faddp
daa
xor
cwtl
mov
fcoms
test
mov
cli
or
add
xchg
ss
inc
jle
filds
mulb
sbb
mov
xlat
cmc
adc
xchg
insl
push
inc
outsb
push
icebp
pop
mov
push
out
jbe
sub
iret
test
aas
cmp
sahf
jae
mov
mov
dec
mov
ficoml
adc
push
push
push
mov
icebp
jo
xchg
jmp
das
cmp
int
fs
mov
push
pop
testb
das
bound
or
sbb
out
push
mov
rolb
imul
test
mov
arpl
in
jp
iret
adc
shl
mov
jne
in
xlat
sbb
std
sti
xchg
ljmp
ds
sbb
int3
jns
fs
int
in
test
aaa
aas
movsl
sub
outsl
shlb
and
add
sahf
mov
jne
mov
fwait
add
test
pop
std
cli
sbb
add
out
add
adc
add
scas
xchg
jmp
movswl
jnp
addr16
gs
push
push
cmp
outsl
cmp
sbb
sub
aas
dec
insb
mov
xchg
jp
iret
fisttps
addr16
cmp
add
stos
jmp
cs
add
pop
inc
sub
jle
insl
sub
inc
mov
outsl
xchg
mov
jge
add
mov
test
repnz
ret
push
lahf
cmp
js
fcomps
ficompl
lods
repnz
daa
xor
stos
xchg
std
popa
xchg
inc
jmp
adc
jb
aas
ja
outsb
jbe
sub
cmpsl
loope
jmp
sub
jle,pn
sbbl
jp
mov
inc
gs
shlb
jb
cmp
jl
mov
cmp
pusha
popf
mov
int
popl
dec
shlb
testl
dec
call
mov
ret
jnp
fcoms
jnp
xchg
mov
jne
int
lock
pop
adc
jns
das
or
pop
out
cmp
mov
cs
movsl
gs
repz
lods
dec
add
jae
sbb
outsl
sbb
mov
dec
xor
xchg
xor
pop
push
and
in
push
popf
mov
jecxz
xor
mov
js
sub
out
loopne
ror
call
lret
nop
adc
imul
leave
lds
push
fmuls
push
popf
jne
loope
sub
test
gs
sub
aad
gs
xchg
aad
out
test
push
jo
mov
mov
mov
adc
notb
insb
dec
sti
mov
popf
movsl
test
inc
loope
push
xor
sub
fldt
cmp
cmp
or
xchg
movsl
xchg
gs
nop
or
add
pusha
das
inc
xor
and
sbb
cmp
mov
call
sub
sbb
fcoms
and
push
push
adc
sbb
inc
test
inc
cltd
ss
sarl
cwtl
popa
pop
or
mov
xchg
push
mov
cmp
int
fisubl
sub
add
pushf
test
cld
into
frstpm(287
dec
fldenv
fdivs
sahf
mov
xchg
pop
xchg
pop
aam
das
dec
andl
fsubrs
inc
dec
push
insb
push
out
daa
in
push
mov
fxch
loopne
dec
cmpsl
outsb
int
mov
in
sti
jmp
pop
xor
mov
stc
push
dec
jo
leave
fwait
js
lods
aaa
pop
push
inc
xchg
popf
or
pop
xor
mov
adc
sahf
push
aam
lret
dec
mov
mov
dec
and
lret
sbb
stos
testl
je
rcl
stos
mov
jne
lds
mov
push
sti
imull
and
push
jle
and
out
sbb
xlat
lahf
lods
cmc
incb
fs
inc
ljmp
sub
xor
cmpsb
mov
sbb
xor
fisubl
xor
pop
inc
js
cli
mov
sbb
daa
push
sbb
cmp
lea
inc
scas
jmp
ds
pop
jp
addb
and
mov
push
mov
out
subl
push
push
rclb
outsl
nop
sub
xchg
pop
ror
pusha
xor
popl
xchg
ret
clc
test
jg
test
sti
sbb
add
not
repz
test
sub
fldenv
xchg
lcall
sti
jns
outsb
leave
sbb
mov
mov
mov
sub
xlat
enter
adc
add
or
pop
xchg
and
addr16
rcll
fwait
mov
mov
xor
push
push
sbbb
inc
aad
stc
sub
packsswb
pop
sti
adc
and
mov
mov
outsb
sahf
add
mov
mov
push
fstpl
sbb
in
lcall
lret
and
pop
icebp
sbb
adc
lea
xor
pop
xlat
mov
xor
jnp
xor
push
mov
outsl
dec
jl
cmp
xchg
in
cmp
popl
lcall
loope
bt
lods
and
jae
inc
stc
fldlg2
aaa
push
sbb
shrb
in
inc
out
push
outsl
jae
pop
add
mov
jecxz
dec
test
hlt
out
sti
adc
adc
arpl
or
pop
mov
sbb
jb
inc
mov
mov
xor
aam
aam
or
jmp
insl
xchg
pop
or
mov
xchg
dec
and
vpand
mov
push
cmp
jp
aad
js
sub
add
jb
shll
shll
mov
mov
notb
pusha
ret
iret
insb
scas
jb
mov
repnz
push
or
cmp
outsb
std
imull
sub
add
icebp
lea
sub
xor
lea
jb
xor
int
lea
xlat
sbbb
pop
cmp
cmpsb
mov
cmp
lcall
dec
sub
sbb
push
xchg
pop
dec
dec
jmp
and
mov
push
js
adcb
out
sbbl
aas
sub
cmc
scas
in
cmpsl
leave
adc
push
xchg
int
adc
pop
test
xchg
mov
stos
imul
roll
xchg
cmp
and
mov
mov
mov
sbb
xchg
es
pop
negl
inc
movsl
xchg
push
inc
push
test
and
cmp
cli
imul
mov
in
xchg
cmpsl
pop
mov
jns
outsl
or
inc
ret
xrstors
lods
or
dec
div
pop
adc
pop
into
mov
shrb
jle
neg
lods
in
push
cs
leave
out
enter
loop
repnz
xor
jb
popf
out
dec
shlb
cli
xchg
sub
dec
push
stos
mov
call
int3
gs
jo
addr16
dec
outsl
jnp
cli
jb
xchg
cmpsb
inc
and
jne
sbb
or
push
ljmp
cmp
mov
rorb
cld
mov
pop
mov
or
loopne
loop
cmp
imul
notl
cs
loop
inc
stos
movb
pop
pop
daa
in
sbb
cs
pop
dec
push
cs
xor
xor
inc
xor
push
ret
xchg
xchg
sub
mov
rclb
aaa
dec
roll
mov
jl
test
xchg
popa
movsl
inc
push
xor
mov
adc
das
cltd
inc
cmp
pop
mov
outsl
addr16
aas
xchg
lret
lret
jbe
jmp
mov
ljmp
pop
popf
cld
jp,pn
mov
adc
mov
xor
mov
jo
fnsave
fwait
or
shll
cmp
lahf
xchg
pop
aaa
or
ret
jne
xor
in
pop
aad
lret
sbb
sbb
notb
mov
das
sahf
shlb
push
xchg
ficoms
mov
push
push
sub
lret
sub
fldl
mov
sbb
xchg
dec
bound
dec
and
and
ficompl
push
xor
adc
jmp
ja
lea
and
cs
cmp
cmp
pusha
jns
repnz
xor
pop
xor
repz
mov
arpl
cmp
inc
xchg
pop
pop
imul
add
xor
mov
add
loopne
cmpb
xor
out
xchg
in
xor
inc
lods
imul
shll
adc
xorb
sbb
dec
in
mov
push
push
int3
xchg
adc
jno
adc
sub
inc
push
adc
les
pop
inc
inc
push
and
ds
dec
sbb
xchg
ficompl
jne
jnp
pop
push
popf
mov
cmp
cmp
in
ret
fsts
fbstp
sbb
shl
or
mov
xchg
adc
and
inc
stos
cmp
inc
mov
xor
mov
cmp
testl
sbb
decl
int
mov
popa
sti
leave
xchg
and
adc
inc
jecxz
push
jmp
sti
inc
addb
lods
jae
sar
into
and
mov
loop
jnp
cmp
out
adc
inc
sub
mov
mov
hlt
push
push
lret
push
out
xor
or
test
xchg
adc
ret
push
test
loopne,pt
repz
in
adc
and
jb
setp
fistpll
test
sbb
mov
outsb
cmpsl
out
ret
outsl
adc
xchg
mov
xchg
mov
pop
xchg
int
jmp
lret
xor
daa
jmp
into
addr16
xchg
mov
xchg
push
mov
out
or
mov
mov
es
add
mov
mov
mov
dec
mov
mov
aad
lcall
mov
jns
les
or
xorl
dec
andb
xlat
mul
cld
lahf
int
mov
lcall
inc
pop
lcall
adc
and
dec
test
iret
cmp
call
mov
push
ss
cwtl
sbb
in
lea
shlb
fwait
subb
inc
sub
fs
lcall
ja
pop
or
scas
cmpsb
mov
out
mov
push
mov
push
pop
dec
mov
outsl
add
add
add
loop
popa
cmp
mov
lock
fwait
call
dec
popa
scas
fs
pop
push
sbb
cmc
xchg
fsubrs
jno
mov
sbb
cmpsl
mov
enter
test
out
pop
into
enter
jnp
insl
and
mov
cmp
sub
xchg
das
jnp
bound
lahf
dec
adc
xor
fisttpll
xchg
fs
sbb
dec
pop
cld
inc
popa
insl
lea
aas
ret
sbb
dec
orl
mov
cmp
lret
iret
inc
int
mov
and
stos
jb
test
pushf
xchg
pop
enter
mov
mov
sbb
jo
int3
ds
orl
jge
fwait
sbb
add
into
into
sbb
inc
rcrl
lahf
push
mov
loop
andb
jle
add
cmp
mov
pop
mov
fcompl
loop
jp
xchg
sub
xchg
imul
loop
lret
enter
adc
clc
test
sbb
xchg
cmpsb
adc
jge
fildll
test
jb
je
adc
in
gs
push
mov
fucom
pop
dec
pop
jno
xor
fs
mov
lcall
js
jae
jnp
xchg
push
and
or
icebp
test
sub
mov
cmc
mov
fwait
dec
mov
pop
ret
repnz
daa
push
cmp
or
push
pop
pop
lods
push
mov
out
add
adc
fistl
xlat
das
negl
jnp
mov
fidivs
dec
jl
or
mov
xchg
iret
popf
inc
in
add
xchg
inc
jno
dec
xchg
popf
jmp
pop
in
cmc
or
inc
stc
xchg
jb
into
adc
add
dec
pop
popf
in
std
repz
test
mov
call
stos
dec
std
dec
lock
and
es
mov
popf
or
xchg
lret
int
inc
lds
jmp
repnz
test
out
and
or
ss
mov
mov
add
daa
popa
jp
xchg
repz
je
dec
inc
lea
dec
xchg
xchg
or
jns
mov
out
push
cmp
sbb
bound
pop
std
pop
add
adc
mov
sbb
mov
xor
cmp
inc
push
xchg
dec
adc
xor
inc
xchg
xchg
pop
sbb
mov
aas
into
daa
stos
mov
inc
jle
xchg
mov
stos
adc
mov
adc
xlat
int3
insl
lret
push
fwait
rcll
sbb
pusha
pop
pop
sub
nop
jb
dec
cmpsb
xchg
lock
std
jp
mov
jo
stc
pop
adc
xchg
pop
sbb
in
jne
lods
in
mov
dec
or
inc
xchg
cmp
and
out
enter
sbb
popf
fcoml
pusha
insl
xchg
mov
cmp
pop
adc
sahf
xchg
lcall
mov
aad
xor
xor
js
jne
cld
adc
mov
aad
pop
js
in
imul
mov
ret
mov
mov
sbb
pop
mov
arpl
push
stos
std
sub
mov
mov
cmp
popa
dec
test
int3
jle
push
loope
cmp
push
mov
mov
lahf
push
std
and
lea
add
sub
mov
adc
inc
insb
push
push
push
push
jb
dec
mov
push
sbb
jo
jle
in
mov
dec
cmp
shrl
mov
cmp
xor
fwait
ljmp
movsb
loope
cmp
aaa
cmpsb
in
aas
cwtl
outsb
dec
xchg
lock
outsl
sub
lock
insb
dec
adc
subb
mov
mov
mov
out
mov
mov
rclb
cmp
loop
mov
pop
test
pop
pop
out
cmpsb
test
in
mov
cmpsb
in
cli
decl
cmp
xchg
pop
push
inc
mov
popf
add
push
incb
mov
cmp
es
dec
fidivrs
mov
aam
xchg
repz
xlat
pop
push
pop
sbb
sahf
add
add
popf
mov
add
xchg
xchg
jecxz
pop
nop
in
gs
xchg
aad
test
stc
icebp
adc
sub
addl
in
xorb
aaa
jne
stos
fdivrl
divl
pop
dec
outsl
or
xor
pop
adc
jne
adc
cwtl
in
insb
icebp
loopne
lods
pop
shrl
add
js
xor
ret
loop
jns
sub
lret
shrl
cmp
gs
lea
pusha
mov
mov
cmp
daa
gs
outsb
push
add
sahf
daa
push
sahf
and
cmpsl
push
or
jo
mov
push
mov
insl
pop
push
jp
ds
push
loop
add
jno
mov
xchg
and
out
daa
insl
push
jge
lahf
in
inc
lret
mov
rorb
xor
push
lcall
fbld
add
ds
out
fmuls
sbb
repnz
xor
sub
cmp
ljmp
mov
fcoms
lcall
pop
rolb
loopne
addr16
rcr
and
xor
aam
add
add
or
dec
jbe
inc
pop
out
jb
mov
add
idiv
xchg
pop
cmp
mov
mov
pusha
push
mov
push
xor
rcrb
mov
jbe
push
sqrtps
xchg
ret
ss
shrl
push
pop
out
cli
and
adc
xor
pop
xchg
xor
dec
xchg
lea
sahf
je
add
mov
xor
mov
clc
ret
pop
and
movb
add
xchg
stc
xor
add
inc
insb
cwtl
add
orb
jge
bound
and
out
dec
cmpsl
ljmp
pop
mov
cli
sbb
lea
lods
mov
jae
repz
mov
pushf
xchg
call
jbe
idivl
sub
sbb
push
cs
daa
or
push
cmpsb
jl
and
cmpsb
dec
xchg
nop
push
clc
and
inc
mov
xor
mov
jo
push
mov
pop
std
mov
mov
adc
push
test
adc
cmpb
repz
xchg
fsub
imul
adc
sub
add
mov
sbb
dec
iret
cs
cmpsb
ret
mov
mov
pop
inc
lds
cmpsl
sbb
fildl
mov
sub
push
or
mov
mov
in
push
cmc
add
fwait
int3
out
mov
inc
adc
pop
cmp
dec
aad
sub
jae
int3
fstps
mov
inc
rcl
jns
aaa
adc
cli
scas
adc
mov
pop
dec
das
xchg
loop
nop
add
dec
jp
and
in
mov
jnp
jecxz
pop
mov
and
or
fidivrs
int3
mov
in
test
sahf
stos
pop
xchg
repnz
push
sbb
push
adc
inc
lret
fwait
mov
adc
xor
xchg
mov
pop
cltd
cwtl
add
imul
mov
loop
mov
lcall
jmp
inc
popa
scas
lret
cmp
aaa
pop
sub
push
outsl
dec
mov
loopne
lods
sub
mov
arpl
adc
loope
mov
cmp
aad
imul
xchg
aas
sub
adc
jns
pop
adc
xlat
jp
std
adc
cmp
mov
mov
xchg
adc
push
cwtl
mov
test
syscall
xchg
dec
int
aas
fwait
addr16
xlat
jne
insb
subl
shll
xchg
pushf
loopne
mov
pop
stc
int
jbe
rclb
ja
outsb
adc
xchg
mov
jecxz
stos
lock
and
and
orl
push
lods
inc
push
cmpsl
popa
adcl
inc
cmpsb
sahf
add
sbb
inc
mov
mov
dec
or
cmp
lea
les
inc
xchg
data16
xchg
loope
add
xchg
popf
jl
or
and
fstl
cmp
dec
cmpsl
mov
jns
mov
jecxz
fildll
jbe
das
cmp
imul
sub
rcll
mov
mov
mov
je
daa
adc
sub
outsb
mov
test
mov
add
iret
std
out
push
ds
adc
xchg
shll
sahf
add
mov
or
dec
xchg
cmpsl
repnz
call
push
aas
les
jp
mov
dec
push
pop
mov
ret
cmpsl
mov
push
fwait
push
mov
xchg
pop
jle
xor
decl
and
int3
xchg
push
in
cmpsb
jecxz
mov
mov
fldl
pop
mulb
repz
xchg
pop
test
or
in
idivb
rolb
mov
out
mov
outsb
clc
sub
xchg
lock
cmp
add
nop
or
xlat
inc
sbb
mov
das
sbb
insb
xor
loopne
cmp
fbld
dec
mov
in
in
fimuls
mov
push
sbb
enter
push
je
es
lock
adc
xchg
or
and
xchg
shll
xchg
xor
cmc
test
and
addl
das
shlb
pop
or
movsl
jge
or
vpaddw
pop
shlb
or
or
mov
data16
mov
dec
lds
jb
rcll
jno
mov
push
pushf
sub
push
rolb
mov
dec
xor
subb
lret
xchg
cmc
push
cmp
add
and
adc
pop
add
sub
xchg
insb
xchg
cmpsl
mov
popf
aad
int3
sbb
pop
outsb
int
leave
dec
ret
push
inc
scas
scas
into
sub
add
out
mov
jl
xchg
inc
scas
mov
stc
pandn
push
inc
or
dec
int3
sub
ja
adc
es
in
imul
imul
sub
dec
loopne
sbb
inc
push
imul
out
cmp
and
push
in
and
inc
sub
imul
xchg
adc
hlt
push
int
jge
push
popf
dec
jo
or
mov
je
loop
popf
out
fldcw
sarl
pop
xor
push
pop
scas
nop
cmpl
in
stos
iret
jbe
int3
mov
popl
pop
pop
shrb
xchg
sbb
xorb
xor
push
dec
jecxz
jg
pushf
fdivrs
pop
jp
push
inc
int
mov
xchg
ja
das
repz
mov
push
mov
sbb
xchg
jns
test
adc
xchg
inc
gs
jg
pop
lret
into
movsl
std
sbb
and
dec
adc
pop
sbb
test
inc
mov
imul
push
push
lock
ror
xchg
dec
add
sbb
fcompl
scas
pmulhw
lea
lock
stc
fisttpll
out
lock
ds
xchg
cmc
popf
pushf
pop
insl
xchg
ficompl
rclb
mov
sub
push
adc
psubw
fwait
jecxz
jge
and
mov
jg
roll
je
pop
or
movsb
sbb
mov
test
inc
pop
cltd
js
inc
mov
popa
mov
push
and
push
int3
hlt
push
mov
shl
stos
fiadds
lahf
sub
push
data16
mov
xchg
fisubrs
sub
sbb
dec
roll
in
mov
aam
or
shll
popl
mov
jl
adc
js
adc
test
jo
fdivl
sbb
loopne
sar
lods
mov
push
aad
in
scas
cmp
mov
sbbb
sti
add
test
js
mov
cmp
push
out
xchg
push
inc
push
cmp
imul
scas
add
sbb
hlt
mov
jle
cltd
daa
mov
push
push
lahf
leave
cmpsl
jae
and
fwait
loope
mov
sbb
fs
xchg
push
push
leave
push
and
jp
jge
aam
cmp
jmp
and
iret
sahf
mov
inc
dec
push
in
leave
mov
shll
sbb
adc
mov
xchg
pop
xor
cld
lret
dec
or
jecxz
out
jge
and
mov
mov
imul
pop
and
je
lock
and
xchg
push
sub
mov
into
inc
or
xchg
insb
cmp
loopne
repnz
addb
xlat
xor
adc
sub
or
mov
cmpb
pusha
mov
jmp
sub
loopne
mov
xor
iret
push
pop
and
ficoms
dec
and
pop
sub
ss
pcmpeqb
push
sub
mov
outsl
ret
in
pop
daa
fiadds
movsb
in
lods
loop
mov
sub
repz
inc
inc
mov
stos
lock
test
and
pop
or
and
sbb
imul
cmp
test
dec
xor
jnp
mov
scas
stos
fidivl
cmp
gs
mov
sbb
dec
cs
cmpsl
lret
outsb
mov
xchg
mov
fs
addr16
push
jo
sub
stos
stc
cwtl
fmull
and
sahf
ror
pop
xchg
std
xor
mov
int3
call
shrb
clc
inc
dec
xchg
adc
dec
decl
addl
push
lret
enter
dec
xor
rcrb
add
fcomp
lret
mov
popa
cmp
jl
push
dec
mov
pop
sahf
adc
xor
adc
enter
xchg
mov
mov
xchg
xchg
push
outsl
ds
push
ret
orl
pop
daa
sub
xchg
dec
xor
stos
inc
mov
std
push
mov
xchg
and
mov
iret
adc
hlt
mov
xor
and
sahf
std
lret
pusha
xor
arpl
mov
nop
imulb
sbbb
jns
sbb
pop
sub
xor
mov
shlb
sub
mov
cli
repnz
daa
mov
dec
mov
mov
sbb
out
fsubrs
jl
rcr
test
xchg
orb
xor
mov
test
jge
adc
repz
loop
movsb
sbb
push
faddl
movsw
mov
repnz
addr16
lret
test
sbb
cmc
shll
jle
xor
loope
dec
push
je
xor
pop
icebp
lea
ljmp
arpl
mov
mov
pop
pop
fdivl
pushf
and
out
nop
xchg
mov
jb
fdivs
nop
xlat
in
movsl
xchg
push
int
std
add
mov
jo
pop
xor
dec
cltd
test
scas
cmpsb
sub
mov
push
gs
enter
and
xor
mov
sbb
mov
int3
sub
ljmp
stos
jg
aam
sub
or
in
je
sar
xchg
call
jns
xlat
mov
ss
in
mov
jmp
stos
mov
jbe
xor
iret
cmc
xchg
sbb
repz
mov
stos
loop
enter
popf
call
popa
inc
cmp
xchg
ror
rcr
jle
outsb
mov
out
or
push
popa
add
out
inc
arpl
cld
mov
and
paddusb
cli
ja
mov
insl
daa
gs
mov
sahf
jns
sbb
shrb
fmul
rol
or
fnsave
into
stos
lret
mov
lods
aad
cmc
fs
or
mov
mov
push
ljmp
test
inc
out
sbb
inc
or
mov
insl
push
mov
sub
ret
dec
int
and
add
xor
jno
push
fcoms
roll
sub
divl
xchg
inc
sub
test
std
inc
fistl
jnp
xchg
xlat
call
adc
jg
outsb
xchg
sub
lret
push
sub
lcall
pop
scas
ficomps
and
pushf
test
stc
dec
loopne
shrl
mov
ret
push
out
jno
mov
jae
mov
jmp
mov
divl
es
movb
sbb
pop
jecxz
rorb
ljmp
ret
cs
andb
ror
mov
cmpsl
mov
push
hlt
outsb
test
out
jp
stos
push
in
in
add
outsl
lods
aad
pop
pop
fimuls
dec
sbb
movsb
sub
cmp
ss
lret
popf
dec
jne
das
dec
push
pop
cli
ljmp
dec
xchg
std
jecxz
cld
cmp
add
push
lret
add
xchg
je
stos
loop
pop
pop
cltd
mov
das
popf
ljmp
pop
mov
push
ljmp
ret
ret
inc
pop
mov
sub
push
out
mov
jne
cmp
enter
mov
arpl
sbb
jnp
aad
ds
pusha
dec
test
and
push
mov
stos
andb
insb
inc
pop
fldt
adc
inc
repz
push
outsb
sbb
nop
clc
ret
xchg
test
subl
sub
xchg
xor
mov
cmp
testb
lret
mov
xchg
fadds
jbe
xor
inc
jbe
shlb
cmp
xchg
roll
dec
sub
pop
mov
add
idivb
fs
add
sbb
cmp
push
cmc
or
mov
insl
int3
mov
std
insb
inc
lret
mov
test
xor
push
cmp
cmp
push
fs
jno
psllq
adc
dec
jbe
and
je
xchg
fs
shll
fwait
stos
popf
dec
and
inc
out
push
aam
mov
arpl
jg
cli
ds
jp
aad
fdiv
je
stc
mov
cli
aam
insl
add
mov
push
ret
addr16
popa
push
icebp
and
dec
jnp
xchg
test
sub
test
in
into
push
xor
fwait
cmc
push
sub
fucomp
inc
sub
lahf
scas
rcrb
inc
mov
addr16
fcmove
xor
xor
loop
mov
mov
fsubrl
pop
ss
imul
xchg
lret
pusha
insb
jecxz
aad
into
mov
jmp
jecxz
dec
inc
ja
xchg
stos
iret
inc
lcall
xor
jno
cmp
dec
xor
xor
sarb
add
mov
outsb
xchg
stos
jecxz
adc
jb
test
mov
stos
cmc
or
mov
mov
pop
jno
dec
jp
inc
and
mov
leave
and
jb
mov
adcb
adc
fisubl
scas
mov
push
and
mov
out
mov
xchg
lret
sub
dec
push
mov
lock
mov
icebp
sub
shlb
mov
and
xor
mov
and
imul
xor
jg
or
test
shr
pop
mov
scas
fnstsw
dec
pop
fdiv
inc
pop
push
insl
pop
push
mov
jbe
mov
add
sub
push
push
dec
push
fmuls
inc
pushf
das
mov
sbb
enter
sub
push
mov
iret
mov
pop
cmpsb
cwtl
mov
sub
cmp
pop
mov
gs
loopne
push
rcrb
lret
xchg
sahf
out
xor
xlat
aaa
mov
mov
jns
jle
nop
mov
das
mov
jno
jmp
test
xchg
out
xchg
pop
push
dec
test
ja
push
jmp
xor
and
subb
push
outsl
fsubrs
cld
adc
stc
popf
sub
or
pop
sub
jns
xor
xor
ret
fwait
jmp
icebp
xlat
test
sahf
test
and
jnp
xor
cltd
lock
inc
dec
push
test
mov
aas
in
rorb
repnz
jnp
lods
imul
mov
sbb
sub
bound
imul
movsb
ds
mov
fucomp
in
mov
lea
jnp
xchg
pop
xor
push
shr
mov
fcompl
mov
cmp
and
xor
inc
inc
jno
mov
shl
xchg
fildl
ss
gs
sbb
xchg
inc
cmc
cltd
idivb
outsl
mov
xor
mov
push
xchg
test
ret
lret
fildl
and
mov
adc
out
gs
mov
push
loope
into
fmull
dec
push
xchg
or
flds
push
adcb
dec
jno
rcll
insb
sahf
xor
lahf
xchg
sub
jle
push
roll
sbb
lea
into
or
mov
mov
arpl
jle
sub
push
or
cli
add
repnz
loope
or
data16
aas
subb
fcoml
dec
test
push
addb
aam
mov
mov
mov
dec
xchg
mov
xor
pop
insb
hlt
and
outsb
out
out
inc
mov
lock
lods
fsubr
or
std
push
and
jge
cld
jns
ret
int
lods
sbb
rcrl
cmp
cmc
ljmp
mov
stc
fs
xlat
inc
jl
dec
push
or
add
fisttpl
negb
hlt
in
xor
push
sub
mov
mov
sub
lea
test
lods
cmp
sub
or
xchg
and
into
sub
pop
lds
add
addr16
jmp
jecxz
in
popa
stos
orb
xchg
mov
jp
mov
aas
dec
or
inc
int
leave
mov
pop
cli
pop
mov
rcrl
mov
inc
inc
xchg
jg
fdivs
cmp
sbbl
sbb
push
push
ret
xchg
jge
add
lds
fnsave
xchg
xchg
stos
jmp
ret
addb
daa
sub
pop
dec
mov
call
adc
scas
mov
push
das
xor
xchg
and
xor
daa
xchg
js
loopne
fsubrl
out
cwtl
mov
hlt
pop
xchg
and
js
sub
xchg
mov
int3
jae
sub
nop
popa
or
add
insl
cmp
ret
pushw
pop
push
push
sahf
data16
ss
push
mov
mov
data16
dec
pop
fadd
mov
push
pop
mov
fwait
pop
es
ret
xchg
pop
fwait
push
fnstcw
and
rcll
push
outsl
add
into
xor
inc
or
add
push
jmp
cmp
mov
jae
test
and
pop
lds
lret
cmp
mov
stos
ja
iret
out
int
cmp
mov
add
sub
sub
mov
add
into
cmp
pop
dec
testl
and
daa
dec
mov
mov
movsb
mov
mov
adc
out
inc
jp
dec
popf
into
or
mov
dec
xchg
jbe
in
xchg
push
add
or
in
shr
mov
push
sbb
mov
lods
mov
mov
and
mov
cmpsl
sub
pop
fprem1
inc
imul
sti
bound
rcr
arpl
mov
dec
mov
fidivl
jno
fsubl
jnp
sbb
sub
pop
lea
adc
mov
and
addr16
test
stos
shlb
fstpl
and
stc
push
fwait
leave
lds
addl
rorb
sbb
push
std
inc
rcrw
jns
imul
mov
xor
and
scas
jo
shll
shrl
daa
cmpsl
jb
jno
test
addb
aaa
mov
js
rclb
fdivs
or
fs
jecxz
sbb
loop
rcl
push
icebp
sti
cmp
adc
jae
push
add
scas
aam
test
adc
and
icebp
test
std
xchg
xchg
push
inc
je
enter
int
sub
mov
aas
mov
and
add
pop
push
inc
jg
fs
inc
test
scas
movl
push
loopne
ret
pop
hlt
in
push
push
out
lcall
or
addb
out
mov
push
adc
inc
jb
fsubr
insl
and
add
dec
ret
addr16
inc
xchg
out
mov
jo
cli
std
and
or
cmp
lock
mov
loope
jge
mov
inc
sbb
xor
scas
inc
mov
mov
pop
and
faddp
sbb
cmp
cmp
push
std
lcall
cs
cmpsb
xchg
mov
dec
ss
push
or
mov
rcrl
push
mov
mov
adc
push
jmp
sar
jne
mov
pop
xlat
xchg
sub
dec
push
push
aaa
xor
adc
out
stos
pop
xlat
pop
dec
mov
sbb
inc
mov
loope
push
dec
mov
imul
cmp
mov
mov
xor
out
popf
add
inc
arpl
push
cmp
inc
cmp
imul
mov
mov
lods
sbb
pop
daa
fimuls
mov
pop
push
shrb
mov
int
andb
in
out
rcll
ss
cmp
sbb
dec
out
sub
adc
dec
push
or
mov
inc
aam
sbb
push
mov
mov
sub
dec
cmp
fidivrs
andb
lock
add
dec
push
pop
fstp
jmp
mov
mov
in
loop
ret
popf
jmp
jecxz
mov
inc
pop
pop
xchg
sahf
inc
mov
mov
xor
adc
sub
bound
mov
icebp
daa
or
insb
mov
cmc
sbb
jo
dec
jge
fidivrs
pop
insb
sbb
sbb
adc
iret
outsb
pop
in
mov
cmpsl
sub
mov
cmp
jb
add
dec
arpl
xlat
das
xor
repz
jl
jle
shr
fsubp
test
ret
xor
aam
mov
dec
jbe
mov
add
mov
sbb
and
pop
inc
xor
popw
mov
int
inc
adc
xchg
sbb
and
outsb
ss
push
dec
test
sti
dec
test
sbb
icebp
or
insb
jae
movsb
push
jl
mov
jo
mov
push
adc
mov
mov
sub
insb
outsl
loop
sub
pop
xchg
ds
test
pushf
mov
stos
int
xchg
pop
pusha
and
insb
nop
and
and
add
mov
push
in
test
movsl
lahf
and
mov
pop
fs
nop
int
mov
xchg
add
jp
xor
add
in
push
lds
or
in
fcoms
gs
out
mov
lea
aad
enter
rcll
testl
test
lea
hlt
call
pop
sub
xorl
and
inc
add
jnp
mov
ljmp
lods
popa
push
into
mov
in
scas
add
outsb
adcb
fisubrl
jb
cmp
js
mov
cmp
xchg
or
jns
cltd
push
pop
and
pop
aas
fiaddl
js
mov
out
into
outsb
mov
jbe
clc
ds
sbb
mov
cli
insb
cmp
push
add
mov
pop
push
inc
push
in
lock
scas
les
and
inc
out
jb
pusha
inc
push
xchg
fcmovne
jbe
push
in
dec
clc
pop
aam
push
inc
in
iret
dec
dec
movsb
pop
jge
mov
flds
out
aas
rcrl
dec
adc
lahf
lea
gs
rclb
in
add
push
inc
clc
jns
or
pop
lret
mov
fldt
and
pop
push
ljmp
adc
pop
push
cld
add
test
and
pop
push
jp
mov
pop
int
dec
or
aad
pop
scas
addr16
rclb
inc
test
sub
pop
roll
mov
inc
out
pop
clc
add
ss
push
dec
sti
jns
dec
into
icebp
cmpb
in
ss
cmovae
insb
sub
mov
ja
fcmovu
mov
ja
iret
out
jg
mov
leave
jns
imul
frstor
ljmp
dec
and
and
stc
jl
dec
adcl
push
xchg
push
and
movl
dec
arpl
inc
adc
sub
or
xchg
sub
jl
out
jbe
fdivs
mov
xchg
mov
cmp
mov
cmpsl
popf
into
stos
lcall
adc
jl
and
add
xchg
paddusb
leave
rorl
jmp
fs
notb
ret
sbbb
lcall
pop
std
aam
pop
mov
sbb
das
mov
xor
push
call
test
fisubrs
jp
outsl
insl
pop
mov
add
pop
cmp
in
push
xor
add
rorl
or
push
mov
lahf
scas
popa
pop
jb
and
dec
sub
loop
or
or
inc
xlat
sahf
sti
cmp
inc
addr16
ss
int
aad
orb
cmp
inc
mov
mov
loope
sub
daa
jae
rcl
xchg
outsl
push
outsl
scas
xorl
and
loopne
push
test
mov
jl
pop
movsl
addb
push
push
pop
sbb
pop
in
shll
xor
out
leave
jle
sbb
stos
jg
cmp
adc
mov
adc
imul
mov
insb
rcrb
push
js
gs
push
mov
xchg
jo
xchg
mov
jnp
les
pop
fidivrl
repz
repnz
pop
adcb
lods
mov
add
scas
or
xor
notb
aas
icebp
cmp
mov
push
push
fiadds
push
inc
and
cmp
xchg
xor
xor
inc
fmuls
loope
xchg
mov
nop
mov
xchg
and
mov
jne
js
mov
mov
mov
add
fcmove
cs
sarb
fistpll
div
mov
xchg
fwait
push
ror
dec
sbb
mov
bound
push
mov
out
stos
dec
jno
add
sub
je
in
inc
sbb
jge
scas
pop
or
in
cmpsb
mov
bound
xchg
dec
inc
int
pop
gs
fmuls
mov
jne
test
cmp
fidivrl
adc
sub
cli
xor
jns
stos
lods
inc
pop
pop
fmull
in
pop
mov
push
fdivs
cmp
ljmp
push
daa
test
mov
ret
sub
push
insb
inc
cmc
daa
xchg
xchg
cmc
cwtl
addb
jg
sbb
movsl
push
sub
loopne
pop
std
imul
pop
jne
inc
pop
arpl
ljmp
mov
xchg
lods
test
sub
push
xor
test
fidivrl
andb
ret
push
rol
xorl
dec
jge
mov
movsl
ja
lahf
mov
cmp
mov
out
mov
stos
and
out
inc
mov
sbb
mov
repnz
pop
and
outsl
pop
push
cli
rclb
dec
adc
sub
sub
cltd
pop
xorl
movsb
and
sub
add
mov
mov
fwait
rol
in
stc
mov
and
fnstenv
sub
push
jl
adc
scas
push
imul
sub
lock
adc
jle
sbb
mov
outsb
push
adc
add
xor
data16
pop
jmp
or
lcall
push
pop
arpl
fisubl
movsb
inc
pop
pop
out
push
push
loop
jb
pushf
cs
cli
fdivl
lds
dec
lods
add
jg
and
stos
stc
loop
push
sahf
leave
shr
test
popf
sub
cltd
sub
push
fstpl
add
ret
sub
inc
cmp
repz
mov
fisttpll
xlat
test
sbb
and
fbstp
sub
and
fldenv
incl
or
ret
jns
xchg
iret
inc
stc
mov
sub
sub
jp
fsubrl
mul
xchg
xchg
pop
arpl
int
rorl
imul
cltd
lcall
adc
sbb
push
cmpsb
fsubr
aas
jns
cli
in
jge
retw
add
sbb
xor
aam
test
movsb
test
jnp
push
jl
cmpsb
dec
movsb
orl
mov
xor
xor
scas
push
xor
in
adc
xchg
mov
cld
pop
cltd
jge
incb
and
popw
stos
sub
call
out
mov
arpl
and
xchg
fistpll
scas
imul
rcrl
push
int
push
into
ss
cwtl
faddl
push
inc
and
pushf
icebp
dec
mov
out
gs
dec
mov
rorl
push
bnd
inc
out
cmp
mov
dec
lods
jnp
sub
xchg
aas
es
fs
cmpsl
jge
add
xchg
mov
and
add
andl
int
ljmp
sbb
jg
data16
std
xor
add
pop
xchg
dec
cld
pop
add
in
push
fs
cmp
nop
cmpsl
jg
xor
out
fdivr
mov
stos
and
and
lret
or
shll
jmp
aaa
push
jmp
notb
dec
test
popa
movsb
les
ja
mov
push
jo
imul
or
into
mov
add
cltd
clc
popa
cmp
fcomps
imul
lea
adc
outsl
dec
and
std
inc
push
inc
push
mov
and
xchg
dec
scas
dec
jnp
in
jle
or
push
stos
cld
pop
enter
call
push
cmpsb
cmp
sbb
sbb
push
push
adc
jb
and
sub
adc
lret
pop
mov
sbb
sub
ss
jp
shlb
cmp
xor
lret
mov
cmp
mov
lea
pop
dec
jbe
push
dec
aam
dec
add
movsl
cltd
popa
mov
cmpsl
fs
mov
xchg
sub
sub
jo
mov
in
cmp
push
rcrl
or
jae
lods
iret
call
mov
sbb
scas
pop
and
out
pop
adc
mov
popa
push
add
inc
popf
xchg
imul
add
in
xor
adc
add
add
pop
leave
mov
loop
xor
ljmp
xor
pop
popf
sbb
inc
pop
ret
inc
jb
inc
movsl
lret
incl
test
ljmp
mov
xchg
sbb
jb
mov
jmp
cmpl
insb
cli
loope
adc
or
and
ja
aaa
and
hlt
test
loopne
insl
out
lret
jmp
xchg
or
ret
xchg
jnp
repz
cmpb
gs
and
xor
in
movsb
jle
fwait
xchg
xlat
out
xchg
mov
int
pmulhuw
xor
insb
in
add
add
popf
mov
and
inc
imul
lret
mov
mov
mov
sbb
pusha
mov
andb
vpminub
cmp
mov
lret
in
iret
push
and
sub
ljmp
pop
mov
pop
inc
mov
jle
pop
xor
fsubs
add
xor
cmc
mov
mov
xchg
inc
xor
sahf
pop
mov
push
and
jp
mov
and
sbb
jb
leave
out
jle
lahf
flds
imul
or
xor
loopne
mov
adc
adc
enter
push
xchg
incl
pushf
xlat
mov
mov
cmc
mov
int3
lods
cli
xchg
jne
jb
add
or
scas
pusha
flds
mov
fwait
mov
jae
mov
mov
inc
addr16
pop
sbb
mov
aad
push
icebp
arpl
dec
lds
mov
dec
test
xchg
sub
or
inc
ljmp
fwait
mov
outsb
jns
add
xchg
pusha
fs
xorl
mov
and
pop
add
stos
xchg
push
lret
por
sbbb
enter
shrb
dec
jne
mov
aas
dec
loop
pop
in
pop
icebp
aaa
into
lret
fisubrs
cwtl
icebp
xor
div
nop
pushf
xor
inc
push
dec
or
inc
push
mov
rcrl
lahf
outsb
je
aas
mov
lea
mov
ljmp
push
push
cmp
je
xchg
fimuls
aam
insb
lret
rcr
scas
inc
jne
inc
mov
inc
add
inc
adc
adc
test
sbb
mov
lret
out
and
adc
or
xchg
inc
out
cwtl
out
ljmp
cmp
test
or
lcall
adc
test
jns
or
cmc
pop
dec
scas
repnz
sarl
pop
adc
les
xor
lret
cld
jb
or
and
mov
mov
fcmovnu
pushf
jno
ret
add
stos
ljmp
in
inc
scas
push
adc
testb
inc
xor
xor
in
push
lods
xchg
xorl
push
mov
stos
popf
and
div
inc
popf
cld
int
lcall
into
in
pop
fwait
pop
pop
jle
inc
mov
lods
insb
mov
mov
in
outsl
mulb
lock
ret
dec
lcall
pop
fildll
sbb
xchg
sub
pop
pop
sbb
pop
lret
pop
movl
imul
mov
or
clc
jl
ret
and
mov
xchg
push
icebp
mov
mov
lds
fscale
fadds
jne
inc
xchg
cmpsl
jp
aam
xor
rcrb
scas
cmpsb
in
dec
adcb
xor
xchg
push
jl
scas
dec
or
nop
jp
add
push
ljmp
fwait
outsl
fmuls
cmpsb
movsl
jae
nop
nop
xor
loopne
inc
aad
jle
mov
std
addr16
gs
push
jge
cs
test
fnstsw
ljmp
fbld
pushf
or
jecxz
mov
stc
sti
sbbl
pop
imul
fsubrs
imul
orl
fcoml
xchg
and
cwtl
insl
inc
inc
xor
xor
jno
inc
ss
aam
das
or
xchg
aaa
mov
out
movsb
push
push
sbb
fwait
push
shll
subl
inc
pop
pop
mov
mov
jae
and
adc
or
fsubr
movsl
jmp
les
repz
adc
mov
scas
jg
mov
rorl
mov
test
xchg
xchg
aam
addr16
test
rol
les
imul
jmp
int3
pop
dec
cmp
insl
jg
dec
stos
mov
js
mov
push
dec
aaa
pop
clc
push
out
mov
inc
pop
xchg
insl
dec
add
and
jne
lss
loopne
push
das
movsb
fsubr
cmp
ljmp
shrb
xor
out
lds
sub
and
fdivr
xchg
jne
cmp
inc
push
sbb
jbe
int
adc
scas
pop
jecxz
adc
sbb
jg
dec
iret
cmp
fnstcw
scas
and
inc
adcb
scas
add
fdivrl
aam
mov
ret
in
xchg
cmp
add
adc
imul
into
inc
inc
cmc
inc
sub
xor
xlat
aaa
jp
mov
or
push
xchg
inc
cld
imul
aaa
xchg
adc
fbstp
jno
mov
pop
mov
shrb
pusha
idivl
out
test
sahf
push
cmpsl
bound
mov
push
push
jmp
fbstp
xlat
push
int3
sbb
cmp
sub
lret
fldl
xor
inc
scas
jge
pop
adc
xchg
sbb
push
jl
gs
mov
push
outsl
aaa
mov
fwait
pop
stos
sbb
add
jns
scas
cmp
inc
dec
cmp
pop
mov
push
mov
sbb
js
stc
push
mov
mov
ret
jo
or
fisubs
jge
mov
or
adc
sbb
out
jecxz
in
jl
ja
es
push
xor
sbb
pop
dec
inc
addr16
adcb
insl
mov
orl
aas
cmpsb
repnz
lods
pop
xor
push
fcomps
xchg
pop
jmp
mov
popa
into
xchg
imul
sub
pop
cli
jge
mov
push
mov
rcrb
push
push
mov
lret
movsl
ror
mov
repnz
stc
ret
sbb
dec
nop
xor
dec
jno
nop
inc
cltd
rorl
fnstcw
push
data16
push
test
fxch
add
scas
jo
xor
nop
adc
cmp
mov
xchg
fwait
int
shlb
mov
out
hlt
cmp
add
loopne
pop
xchg
loop
lret
and
insb
mov
fnstenv
call
cmp
imul
mov
mov
nop
jecxz
dec
sbb
mov
push
jmp
pop
add
test
outsl
sub
test
mov
ret
pop
pop
add
add
sahf
mov
mov
cs
outsb
fisttpll
aad
shll
mov
xlat
cltd
les
ss
fimull
mov
inc
movsl
inc
and
arpl
fwait
mov
push
movsb
popa
lret
jae
lcall
call
sbb
in
cmp
adc
in
mov
and
xchg
xor
pop
jo
inc
dec
pop
sbb
xlat
or
fiaddl
testl
pop
xor
push
push
lods
out
lcall
mov
jno
ret
aad
scas
call
out
mov
dec
adc
rolb
mov
dec
push
jge
fisubs
and
nop
sti
sbb
xchg
sbb
dec
adc
and
addr16
stos
sub
outsb
sbb
push
aas
sub
xchg
mov
es
add
loop
test
jne
dec
sarb
jb
shr
cwtl
cmp
cwtl
jg
jnp
outsl
in
xchg
std
std
inc
in
in
loopne
jo
dec
mov
inc
rcll
mov
stc
jns
mov
mov
lcall
mov
push
sub
cmp
sub
inc
into
negb
dec
call
lds
lcall
cmp
mov
mov
ficompl
dec
rclb
pop
cmp
inc
sub
movsb
lahf
sub
std
xor
test
cmp
imul
mov
pop
sbb
and
stc
jne
fldcw
int
dec
pushf
andl
pop
cmpsl
push
adc
mov
in
std
inc
and
cmc
call
mov
test
fisttps
movsb
lea
dec
lahf
ljmp
jae
in
rol
test
cmc
loopne
rol
or
cmp
jle
xchg
ja
cwtl
cmpsb
add
test
das
mov
das
cmp
rolb
jno
int
push
lods
enter
mov
fs
dec
pop
scas
mov
sub
call
add
out
inc
lahf
imul
rorb
jecxz
xor
or
bound
clc
adc
or
xchg
and
cmpsl
sub
js
inc
sub
xchg
inc
xor
inc
adc
adcb
outsl
mov
pop
test
mov
or
pop
int3
cmp
jnp
rorb
mov
stos
dec
push
push
adc
loop
call
lea
addr16
mov
jae
pop
adc
fwait
jnp
xchg
add
push
mov
push
mov
iret
fiadds
inc
xchg
int
sar
pop
divl
and
mov
mov
push
cwtl
push
in
or
nop
sbb
das
cld
lret
or
cmp
push
xor
jo
lds
pop
sub
sbb
rorl
js
out
cli
es
cmp
cld
les
xlat
jne
pusha
add
lahf
dec
popa
clc
ja
stc
add
jno
cwtl
xchg
out
add
test
adc
prefetch
mov
push
es
pop
dec
sub
jecxz
outsb
negb
xchg
scas
test
mov
inc
xor
cmp
pushf
dec
cmp
or
jbe
cmp
lods
mov
popf
fcoml
mov
xchg
ret
imul
iret
bound
outsb
fcomps
fimuls
std
mov
mov
mov
sub
jecxz
xchg
or
pop
mov
push
jbe
sub
fdivrl
adc
fwait
aad
jno
in
inc
mov
lret
mov
cmpsb
call
mov
popa
les
movsl
pop
push
out
xor
push
xchg
or
pop
xchg
jbe
mov
add
into
fucom
fisttpll
push
dec
movsb
jge
jb
cli
and
jge
xchg
sbb
cmp
ja
in
call
lods
pop
imul
cmp
into
or
arpl
sub
mov
push
adc
pushf
cwtl
insl
cmpsl
mov
mov
dec
add
stos
rcl
mov
push
xchg
sub
js
xor
pop
push
addr16
sub
adc
xchg
or
xchg
cmpb
rorb
add
sub
jae
aas
andl
jne
aas
mov
and
push
inc
mov
fisttpl
insb
sub
ss
ss
sub
sbb
fwait
mov
stos
mov
mov
lock
lret
pusha
test
std
push
mov
popa
push
sub
push
mov
ja
sub
loop
mov
cs
cli
xor
inc
pop
pop
test
negb
addr16
pusha
lcall
jmp
mov
das
int
xchg
out
int3
dec
lret
jg
pushw
or
in
lods
loop
outsb
fwait
and
mov
jmp
sub
xor
ret
popl
jg
movsb
mov
push
lret
inc
cli
test
int3
cmp
pop
and
cmp
mov
and
and
dec
arpl
std
nop
jle
in
pop
pop
scas
cmp
sub
addr16
adc
stos
sbb
es
lods
lea
cmp
int3
imul
addr16
jg
jae
je
in
jmp
push
je
pop
clc
int
testb
das
pop
sub
sbb
jmp
pop
arpl
aaa
cs
mulb
dec
test
mov
jl
pusha
mull
xchg
mul
repz
mov
xor
push
or
ret
adc
mulb
fistps
xchg
and
mov
popl
fisubl
and
hlt
es
leavew
mov
adc
jno
bnd
dec
js
rol
ds
insb
insl
hlt
pusha
push
data16
xchg
sub
aas
cmc
les
jg
scas
xchg
and
lret
mov
jecxz
sub
pusha
push
test
inc
dec
xlat
mov
inc
shl
ljmp
shl
cli
repz
mov
mov
cltd
icebp
insl
xchg
xor
mulb
outsl
fs
mov
lcall
add
lods
push
mov
xor
rol
lcall
jb
leave
mov
or
pop
movsb
out
repz
ljmp
push
out
icebp
test
gs
and
adcb
or
das
mov
xchg
jecxz
jne
aaa
or
jae
lahf
sub
repnz
xor
aaa
in
ja
pop
mov
fistpll
push
fdivl
aad
out
adc
mov
out
jmp
jmp
fwait
jns
subb
cmp
mov
mov
push
rorl
aaa
test
cmp
cmp
jno
rcrb
stos
cmp
push
loopne
and
lahf
or
fldenv
mov
loop
cmp
xchg
cli
push
dec
push
call
xor
orl
and
mov
inc
sarl
decl
movsl
push
dec
subl
pop
cmp
dec
xchg
jecxz
xchg
adc
mov
stos
test
ja
jno
cmpsl
test
mov
xor
jae
pusha
cmpsb
pop
cmp
cld
inc
xchg
add
ret
dec
and
mov
xchg
fsts
jno
test
or
cmpsl
xor
pusha
mov
mov
dec
sti
jbe
push
xchg
xlat
pushl
inc
int3
std
dec
jns
int
dec
subb
xchg
cli
adc
int3
loop
jno
sbb
mov
lahf
xchg
dec
repz
testb
loopne
fisttpll
loopne
sbb
insb
xchg
das
jns
mov
js
test
sub
test
sub
into
push
mov
jns
inc
imull
cld
or
out
hlt
mov
mov
fidivs
out
add
mov
sub
or
push
rorb
cmp
loopne
or
ss
mov
mov
lods
ss
sub
pop
inc
sti
xor
sub
out
inc
popf
add
or
fcoml
push
in
rcrl
imul
pusha
jecxz
pushf
cwtl
es
in
lret
out
into
cmpxchg
mov
jne
test
jb
and
in
int
jg
loope
jo
cmp
xor
push
xchg
sub
sbb
scas
sti
fisttpll
call
push
mov
and
adc
enter
mov
mov
xor
mov
dec
jne
push
jl
mov
xchg
popa
adc
mov
sub
push
sub
pop
inc
push
cltd
and
in
ljmp
xor
sbb
push
ror
jp
or
out
popf
sub
dec
leave
fs
scas
pop
push
push
adc
in
in
xor
dec
mov
mov
pop
mov
mov
add
and
xchg
aad
adc
std
in
inc
push
cmp
imul
mov
sti
xchg
pop
or
fxch
mov
pusha
lahf
xlat
dec
sbb
rcrl
xchg
sbb
enter
adc
ljmpw
sbb
jnp
icebp
dec
ja
inc
sbb
popw
and
mov
test
xchg
icebp
sub
testb
imul
inc
xor
pop
jae
mov
mov
xchg
adc
frstor
cmp
scas
push
lcall
aad
sahf
icebp
mov
pop
mov
std
loop
lahf
bound
lcall
cmp
xchg
mov
mov
mov
scas
add
jmp
or
inc
push
in
push
in
pop
xchg
or
push
pop
cmpsl
sbb
loop
adc
pop
jg
mov
test
daa
mov
ss
pop
into
xor
jg
push
mov
aad
loopne
in
out
jmp
cs
cmp
dec
pusha
adc
out
je
arpl
inc
outsb
inc
lods
popf
xorb
fcmovnu
insb
rdpmc
jmp
push
pop
inc
push
mov
pop
ljmp
fldcw
iret
aad
and
jmp
mov
stos
sbbb
jle
pusha
icebp
fwait
adc
pop
sti
imul
not
pop
in
faddl
jnp
cmpsb
mov
dec
dec
cmc
sti
fcmovnb
inc
loopne
lods
push
jno
push
push
insb
rorl
push
sub
mov
pop
mov
addr16
pop
cmp
sbb
mov
dec
lahf
fdivrs
jno
cmp
and
push
mov
cmp
movsb
inc
pushl
inc
mov
mov
mov
inc
cmpb
sub
xchg
jmp
jp
sub
loopne
fucomi
jl
je
mov
mov
leave
fcompl
or
mov
popf
inc
pop
inc
jmp
gs
arpl
push
mov
dec
pusha
out
scas
push
hlt
sarb
push
sbb
fwait
movsl
imul
test
gs
ja
or
test
mov
push
push
pop
adc
mov
jmp
adc
or
sbb
popf
movsl
test
iret
mov
dec
js
ret
pop
addr16
movsb
xor
push
aas
xchg
gs
sarl
subb
out
cli
lock
mov
hlt
sbb
insb
repnz
idivb
aam
popf
sbb
jno
loop
es
popf
sarl
mov
dec
addb
loope
cmp
les
inc
xor
xor
adc
push
cmp
adc
data16
push
mov
fcomps
add
enter
push
aam
data16
cmp
add
xchg
mov
pop
jmp
adc
cs
int3
daa
in
add
mov
outsb
inc
ret
into
aaa
dec
flds
ds
in
lods
push
or
bound
fnsave
mov
adc
stos
cmp
addr16
out
adc
lods
inc
mov
addr16
xor
sahf
out
lods
xorb
cs
lahf
in
loop
jle
add
xchg
add
push
or
arpl
lods
neg
jg
int3
xchg
arpl
imul
stc
xor
dec
push
imulb
rcll
lret
cmpsb
add
fldl
or
pop
pusha
out
mov
jecxz
lea
pop
fistpll
xchg
add
sub
xchg
jg
jne
lock
jne
stc
icebp
xchg
into
and
mov
push
call
imul
movb
mov
lret
aaa
out
lods
mov
push
fwait
cmc
jl
mov
mov
dec
dec
in
xchg
jle
cmp
inc
scas
cmc
and
je
stos
loop
adc
adc
add
sbb
rcll
add
out
stos
sahf
into
cmp
push
adc
jne
xchg
push
sahf
adc
daa
mul
stc
notb
dec
sub
mov
pushf
mov
mulb
loope
out
loopne
lahf
loop
jne
repz
add
mov
dec
ja
popf
pop
iret
les
mov
mov
inc
add
xor
mov
ud0
je
inc
xor
pmulhuw
push
mov
xchg
clc
repnz
mov
mov
xchg
shll
mov
dec
dec
mov
mov
lret
and
imul
push
add
or
mov
add
sbb
lds
test
cltd
mov
jle
lret
ljmp
push
sbb
stos
sbb
loope
add
add
stc
jo
xor
sub
iret
test
cmpsb
mov
adc
scas
and
clc
fcmovnb
lahf
clc
push
xorl
jns
pop
push
les
push
test
and
push
sbb
xor
add
mov
stos
sub
mov
push
sti
aam
xchg
push
xor
cld
push
vpshuflw
mov
add
jge
shlb
fwait
sub
sub
jnp
push
pop
cmp
mov
cmp
mov
packsswb
lock
dec
out
test
sub
or
lds
shrb
add
test
push
inc
fcmovnu
xlat
arpl
adc
and
and
push
mov
xchg
bound
cli
outsl
bound
inc
iret
or
notb
xor
jg
out
push
adc
jg
adc
ret
add
movsb
es
outsl
jle
lods
dec
sar
in
and
adc
push
xchg
mov
cld
mov
sub
mov
mov
mov
dec
dec
sub
xor
push
ret
inc
loope
in
outsl
adc
mov
pop
test
dec
mov
xor
jns
mov
insl
lds
pusha
mov
adc
sub
jbe
outsb
cmp
fs
inc
or
adc
xchg
out
add
push
lret
out
dec
inc
sub
mov
cld
ja
push
int
add
in
cmp
inc
in
loopne
mov
pusha
je
popa
test
fadd
mov
stos
int3
mov
sbb
jne
shrl
negl
adc
dec
es
inc
data16
xchg
in
push
mov
loopne
insl
insb
test
xchg
aas
loopne
out
popa
loop
shlb
lods
lret
int3
push
out
xchg
jo
push
into
stos
jmp
divl
xor
inc
frstor
cmpl
sbb
into
jmp
xchg
adc
das
cmp
stc
sub
push
pop
jecxz
aad
mov
or
or
sub
lods
cld
xor
or
jmp
lret
leave
jnp
repnz
adc
adc
cmp
mov
adc
int3
mov
sub
jns
add
addr16
xchg
iret
mov
popf
add
jecxz
cmp
dec
jae
xor
aam
enter
cmp
std
pop
insl
cmp
mov
xor
scas
fstl
push
mov
iret
mov
push
jecxz
push
cld
mov
sarb
push
jae
xor
pop
inc
fistl
test
xor
jnp,pn
or
inc
repz
push
cwtl
adc
ret
jmp
jbe
lock
xor
jno
inc
push
jae
outsb
jle
fbld
lock
in
or
insb
leave
ds
inc
aad
jae
jp
inc
jae
sbb
cmp
pop
mov
cld
push
insl
orb
add
mov
push
sub
lods
popa
adc
cwtl
jecxz
dec
pop
test
dec
hlt
mov
push
ljmp
ret
xchg
xchg
jns
xor
data16
stos
fdivl
test
xchg
ljmp
inc
decb
mov
dec
ss
jge
mov
jbe
out
pop
sub
xchg
xchg
sbb
testl
daa
ljmp
stos
jnp
and
movb
sub
in
xlat
in
pushf
repnz
aad
mov
push
lret
xor
or
mov
aaa
imul
push
sahf
mov
xor
fimull
mov
enter
mov
cwtl
push
loop
ret
adc
cmpsl
or
fldcw
adc
jb
in
mov
sbb
push
out
outsb
mov
es
aas
fdivrl
mov
lock
in
mov
jmp
jno
icebp
lcall
leave
inc
mov
add
or
les
cmp
xchg
cmp
jmp
pop
or
aaa
push
xchg
dec
je
lds
and
gs
mov
mov
dec
movsb
repnz
sarl
ror
mov
and
addb
rol
cli
inc
mov
dec
into
out
ficomps
outsl
mov
cwtl
or
cli
scas
and
mov
push
rorl
jp
roll
jns
adc
arpl
pop
cmp
std
shlb
call
cmpsb
pop
inc
sbb
out
lcall
mov
jp
cmp
sbbl
mov
clc
push
ror
push
cmp
sub
jmp
mov
jnp
adc
jg
xchg
jg
imul
xor
insl
stc
ja
cmp
test
in
adc
push
je
scas
loope
icebp
add
push
rolb
or
testb
and
mov
js
adc
dec
lcall
xor
inc
mov
fistpl
test
push
cmp
dec
push
stos
sbb
sub
mov
mov
imul
cli
mov
push
mov
imul
idiv
in
pop
mov
int3
add
pusha
into
adc
nop
adc
rolb
aam
xlat
mov
or
int3
adc
rclb
loop
fcoms
xchg
jne
push
js
jge
mov
imul
adc
xchg
or
popa
inc
daa
dec
pop
pop
cmpsb
outsl
lds
mov
xlat
push
xchg
in
stos
jg
or
and
insl
mov
cmp
jmp
dec
icebp
movsl
dec
jae
ljmp
jmp
cmp
cmpsb
sbb
fndisi(8087
popl
jmp
cld
xchg
cmp
xor
mov
sub
push
rcrb
std
mov
sbbl
mov
or
out
xor
cld
shlb
out
adc
or
flds
mov
cli
pop
sub
inc
aaa
sub
in
xchg
cwtl
jnp
movsl
jo
xchg
xorl
cmp
ret
mov
out
addb
xchg
mov
insb
mov
mov
stc
into
pop
daa
push
xchg
js
jg
or
adc
jbe
push
psrlw
pop
sbb
cmp
sub
lods
cmp
add
xor
xor
nop
push
fwait
pop
push
ja
lods
cli
xchg
sbb
push
add
and
test
inc
cmp
pop
mov
cmp
iret
movsb
popf
cwtl
ret
adc
mov
sbb
or
mov
orb
sub
repz
mov
sbb
pop
pusha
test
cmp
sbb
add
add
or
pop
popf
leave
jae
loop
mov
fcmovu
push
add
int
fisubrs
pop
rcll
mov
mov
dec
dec
scas
or
lret
fisubrl
pop
in
cpuid
cmp
jbe
hlt
xchg
enter
pusha
arpl
fcomip
mov
mov
loope
sbb
mov
push
fistps
or
out
scas
mov
dec
in
pop
xor
repnz
enter
out
cmp
imul
pop
test
sub
test
mov
sahf
cmp
and
ds
and
cli
mov
mov
rcll
dec
in
xchg
into
sub
mov
xchg
or
fidivrl
lds
xor
out
xchg
cmp
scas
pusha
inc
and
cmc
xchg
xchg
hlt
data16
clc
insl
xor
lahf
jns
cwtl
fstpt
stos
shll
testb
mov
es
cld
es
imul
es
inc
int3
pop
shll
out
sub
roll
imulb
in
ss
out
test
aas
test
and
xor
and
add
pop
ret
jb
mov
je
fcmovu
mov
les
xchg
xlat
mov
jge
cmp
push
dec
cs
fstps
test
cmc
jne
mov
mov
nop
pop
xlat
push
pop
pop
orb
jle
bound
shl
jge
add
push
adc
or
data16
jae
mov
out
mov
sbb
adc
jbe
lods
cwtl
fisttpll
jne
jge
add
inc
call
dec
js
out
fcomp
and
jbe
xorb
lds
sahf
imul
mov
lock
cmpsl
mov
add
xlat
into
aaa
ljmp
clc
cmpsl
sbb
int3
cmp
mov
loopne
lcall
roll
arpl
xor
enter
or
and
pop
leave
fadds
fiadds
movsl
iret
sbbl
pushf
mov
pop
mov
push
dec
xchg
dec
mov
bound
repnz
std
imul
sbb
fbstp
and
into
or
stc
outsb
pusha
into
or
jb
mov
push
popf
jbe
or
aam
mov
pop
ret
fisubs
jp
sbb
mull
nop
sbb
fldenv
mov
push
mov
sbb
dec
xor
shll
xor
xor
push
push
and
imul
cltd
out
xchg
bnd
cs
pop
lret
aad
in
rcrl
cmc
out
in
push
jle
scas
inc
insb
daa
outsb
test
add
push
inc
mov
or
xchg
xor
pop
cmpsl
jmp
repnz
call
xor
push
push
mov
subl
scas
xchg
add
cmp
rcr
test
loop
popf
imul
mov
mov
xchg
insb
inc
mov
cmpsb
jbe
cmp
nop
jmp
imul
xchg
cwtl
xchg
jecxz
inc
fiaddl
hlt
mov
mov
fstpt
fdivl
add
jnp
cld
icebp
mov
mov
lea
in
mov
imul
mov
fidivrs
mov
push
jge
adc
push
dec
dec
sub
sahf
mov
scas
jle
pushf
cmp
xor
aam
jne
fistl
imul
jle
ret
add
adc
fadd
push
mov
push
and
cmp
movsb
and
popa
cmp
push
push
sub
mov
sti
pop
mov
imul
lcall
ljmp
mov
push
iret
mov
frstor
sbb
sub
xchg
and
cmpsl
cmp
lods
je
out
add
gs
jne
fnsave
fsts
jne
pop
or
xor
lret
fsts
mov
and
and
fistpl
cs
inc
and
xchg
shll
and
mov
push
out
dec
fidivl
arpl
testl
mov
jge
ljmp
jne
jne
das
lret
mov
and
shrb
pop
mov
fmul
add
sub
adc
int
int
jno
lods
icebp
sbb
aam
in
inc
hlt
dec
test
mov
jg
inc
dec
sbb
mov
mov
pop
xor
add
insl
push
cmp
iret
loop
and
in
fiadds
repnz
je
mov
and
enter
popf
ja
xor
jne
sti
mov
push
fstl
mov
xchg
xlat
sbb
sbb
adc
fadds
fisubs
subl
mov
add
mov
or
xor
xor
sbb
jo
jbe
sub
inc
push
fwait
stos
jo
sarl
outsb
out
inc
sbb
sbb
and
or
cmpsb
add
pushf
push
icebp
lea
leave
jmp
gs
jae
fs
ret
jp
cmp
pop
xor
jo
adc
ljmp
push
mov
ja
pushf
cltd
pushf
fadds
mov
ret
sub
arpl
add
push
pop
scas
mov
xchg
movsb
fsubrs
push
mov
cmp
out
popf
cmp
popa
cld
mov
adc
imul
lahf
test
xchg
push
scas
icebp
adc
ss
jl
and
jo
inc
mov
mov
mov
and
insb
int3
lock
sbb
mov
mov
sub
loop
xchg
sbb
sahf
pop
loopne
popa
mov
sbb
mov
fwait
mov
int3
je
rcll
xchg
dec
mov
adc
push
std
jp
test
xchg
jle
ja
orb
test
cmpsl
mov
mov
mov
inc
jne
push
repz
fst
sbb
cmp
dec
fldl
sub
rcr
inc
mov
les
aas
or
lods
lock
dec
jnp
xor
pop
or
idivb
aam
push
mov
inc
loopne
sahf
pop
mov
xchg
fnstsw
inc
dec
jge
push
js
push
lahf
jmp
rorl
dec
mov
mov
and
pop
jno
push
testb
jl
dec
pop
repz
fnstenv
outsb
sbb
icebp
xor
adc
enter
sbb
inc
jbe
stos
xor
xor
push
mov
dec
lods
shl
pop
push
or
cmp
xchg
inc
xchg
ds
jae
cmpsl
mov
jne
xlat
mov
xor
call
testb
cmp
mov
loope
cmp
xchg
xchg
or
rclb
sarl
push
mov
stos
pop
fs
sbb
inc
sbb
lahf
mov
ljmp
mov
pop
pop
pop
cmp
jb
sbb
mov
mov
in
mov
inc
sbb
fstpt
jnp
andb
and
ret
mov
adc
addr16
sbb
out
sub
movsb
aaa
addr16
leave
adc
rcrb
and
in
sub
cmpsl
mov
out
adc
fdivrs
stos
inc
adc
pushf
inc
popf
xchg
out
loopne
push
xor
push
cmp
outsl
add
mov
lods
xor
or
lcall
pop
and
jnp
adc
jnp
push
lods
mov
mov
rcrb
push
pop
pop
int
std
cwtl
sbbb
xchg
lret
pusha
lods
jae
out
shll
xor
popa
je
and
movsb
aas
mov
push
ja
dec
add
xchg
pop
xlat
test
sbb
out
data16
adc
lahf
mov
adc
jg
cs
jl
mov
and
add
leave
adc
scas
daa
xor
pop
orb
aad
lea
mov
mov
push
cmpl
mov
sti
mov
in
incl
sub
mov
cmp
and
imul
loope
jo
aas
mov
mov
cmp
mov
adc
outsl
es
pop
dec
imul
ljmp
hlt
dec
repnz
lock
adc
sub
jbe
je
je
iret
sahf
std
sbb
mov
testl
lods
push
out
cmp
jp
testb
push
fsubrs
mov
stc
sub
fisubrl
mov
push
dec
js
pop
scas
addr16
sub
out
or
jns
jecxz
mov
or
mov
xorb
jb
and
dec
xlat
fnstsw
fwait
inc
aaa
or
sbb
push
xchg
xchg
mov
mov
inc
jmp
or
pop
mov
pop
fldcw
arpl
je
scas
xor
add
sub
push
adc
jb
add
sub
push
push
push
sar
push
xchg
mov
std
mov
push
dec
inc
fists
push
aad
test
imul
cmp
test
push
lods
aaa
lds
push
in
adc
loopne
fmull
gs
addr16
mov
ret
jmp
std
jmp
je
xlat
cs
out
test
insl
stc
aad
push
lcall
jns
mov
xor
rol
jmp
stos
popa
cmpsb
inc
xchg
aaa
jnp
sbb
jnp
adc
stos
pop
rol
pusha
ja
in
fmuls
inc
mov
mov
mov
lds
xchg
push
divb
and
xor
xor
adc
mov
push
pop
cwtl
jns
fs
les
sbb
xor
pop
or
call
cmc
outsl
mov
movsb
pop
jns
movsl
cmp
xchg
ds
fisubrs
push
jb
in
mov
je
or
dec
mov
mov
fistpll
jo
out
push
dec
test
jle
or
xchg
stos
inc
hlt
and
sub
arpl
jl
orl
and
jmp
jb
cld
jmp
and
lcall
shrl
scas
dec
push
scas
mov
fs
mov
jge
ffree
addr16
xchg
insb
push
push
add
out
mov
jp
lods
ja
sbb
psrld
lcall
test
sbbb
call
adc
mov
add
imul
mov
push
xchg
or
imul
xor
mov
sbb
repnz
mov
repz
xor
cli
mov
int3
dec
js
int3
jle
push
adcb
pop
mov
adc
cmpsl
aas
mov
lret
pop
loop
test
inc
jnp
lods
shlb
shrl
scas
jns
and
pushf
stos
push
lods
mov
dec
shll
sbbl
adc
adc
or
out
mov
test
dec
xor
into
sbb
and
pusha
out
mov
aas
out
fmull
and
add
or
fstpt
or
inc
fsubs
mov
test
enter
sbb
pop
test
adc
mov
sub
out
sub
xchg
gs
fmul
out
mov
inc
push
xchg
mov
xchg
xlat
dec
rorb
neg
sbbl
mov
jnp
xchg
mov
fidivs
imul
lahf
sub
xor
ror
mov
mov
das
jno
lea
sbb
lret
int3
dec
sbb
aaa
ds
xor
jmp
mov
out
xor
pop
cmp
cmpsb
sahf
mov
sbb
imul
jg
sbb
sbbl
test
rol
fsts
insl
mov
shl
xchg
je
movsb
xchg
or
push
mov
dec
ret
in
sbb
and
fisubs
xchg
pop
shrl
or
jae
fimuls
dec
mov
inc
aam
xchg
sti
mov
ds
jmp
xorb
lods
dec
add
aas
cmp
xor
sub
aam
cwtl
cmc
or
lcall
aas
inc
shrl
je
xor
into
jl
xchg
notl
and
aaa
mov
inc
xor
sub
mov
filds
dec
lods
test
pop
test
data16
rorl
mov
lret
mov
add
or
xor
xchg
mov
movsb
mov
adc
jbe
pop
push
mov
rclb
sbb
sub
ja
pop
xchg
inc
mov
rorb
adc
sbb
lock
clc
lods
xchg
in
dec
mov
fucomi
out
sub
leave
addr16
xor
aaa
jmp
test
mov
icebp
mov
push
ds
fistl
js
cli
fiadds
imul
push
out
or
pop
push
push
popf
sub
sahf
push
fisubl
pop
inc
loopne
int
xchg
fidivrl
clc
mov
jl
lea
insl
mov
shll
rorb
movsb
dec
in
into
enter
mov
pop
adc
stc
xor
lahf
cld
cmp
lock
pop
call
and
jns
notb
aad
lcall
cmp
subb
jmp
aaa
mov
jl
mov
dec
gs
vpmacsdql
sbb
mov
pop
roll
mov
sub
test
cmc
pushf
stos
push
fsubs
ret
mov
adc
fidivrl
pop
loop
stos
loope
mov
fs
std
dec
fisttpll
or
jns
sub
add
ud2
xchg
mov
std
loop
cmpsb
shrb
clc
xchg
daa
push
xchg
fsts
push
fwait
jmp
notl
inc
movsl
sbb
imul
dec
aaa
jmp
dec
in
add
ss
xor
test
andb
xor
and
sahf
sbb
push
dec
push
adc
jae
and
imul
aad
mov
rol
popa
jo
push
push
sub
sub
repnz
leave
out
sbb
ret
repz
loopne
nop
call
push
popa
fsubp
lea
jmp
and
rcrb
mov
and
mov
or
mov
jg
ret
mov
fistpll
rcll
pop
loop
push
ljmp
test
adc
push
dec
xchg
and
popf
sub
cs
inc
gs
pusha
test
ficoml
or
int3
mov
or
cmpb
ljmp
xlat
dec
adc
mov
mov
sub
popf
and
das
cld
push
add
cmp
daa
jns
and
mov
dec
repz
int3
imul
and
mull
les
negb
and
or
and
mov
inc
mov
adc
aas
je
mov
or
mov
sub
sbb
push
mov
mov
and
repz
inc
and
xor
rorb
cld
pop
cld
outsb
repz
jmp
pop
je
push
lcall
fwait
loopne
push
inc
mov
jnp
and
or
popa
fcmovbe
inc
cmc
mov
repnz
cmp
inc
aaa
inc
mov
stos
jp
lock
popw
add
xor
xor
icebp
fwait
js
jecxz
insl
jecxz
fldenv
mov
in
stc
xchg
lahf
ja
repnz
jmp
int
xor
lds
ss
sub
loop
add
xchg
or
test
sti
shll
xor
push
fstps
mov
icebp
jb
xchg
cmp
ds
inc
push
dec
jge
sbb
pusha
xchg
jb
call
into
outsl
or
jp
add
xchg
cwtl
repnz
sti
fld
push
das
mov
xchg
sti
rolb
imul
sbb
loope
pop
js
mov
movsb
out
gs
xchg
jl
call
cld
shl
mov
inc
push
mov
push
in
sahf
ja
xchg
pop
push
adc
mov
ret
pop
repz
cmp
inc
mov
ret
jecxz
mov
jns
and
std
out
sahf
je
xor
imul
lret
test
fiaddl
movsl
xchg
out
in
or
hlt
add
daa
push
push
inc
sbb
punpckldq
aad
add
mov
xchg
loope
es
or
pop
movsl
jo
aam
push
fwait
cmp
mov
sbb
sub
ja
jle
jmp
outsl
jae
jmp
xor
pop
mov
pop
cmp
lods
cmp
push
inc
jbe
dec
test
mov
and
dec
mov
inc
loope
mov
inc
sub
push
ret
loop
add
push
lret
fcomip
pushf
sti
mov
ret
imul
fdivrs
push
jno
push
iret
aad
es
push
fstpl
adc
xchg
addr16
cmp
adc
cmpsl
test
roll
stc
rcll
lds
dec
push
test
movsb
adc
out
cmp
call
mov
xchg
fldl
mov
or
add
push
dec
mov
dec
jmp
xor
mov
std
dec
or
push
cmp
mov
inc
mov
mov
scas
mov
and
lds
or
rcrl
fmull
ret
ja
stc
or
inc
daa
or
adc
orb
aad
orb
sub
out
iret
loope
out
mov
xor
ja
cmp
cld
xor
lods
in
mov
push
cmp
or
aam
and
adc
dec
mov
sbbl
int3
jp
bound
and
outsb
cwtl
insb
mov
scas
enter
addr16
push
mov
cld
xchg
pop
lret
test
jo
cmp
lds
pop
addl
dec
push
sti
icebp
clc
imul
jle
mov
push
fidivrl
ret
adc
int
push
adcl
test
jae
mov
iret
mul
lcall
imul
lea
pusha
lret
sub
ret
push
sub
dec
lahf
mov
dec
dec
cld
xchg
loop
outsb
aaa
sbb
popa
xchg
scas
or
mov
xchg
sub
pop
sbbl
sbb
cmp
sbb
pop
stc
push
inc
sbb
push
sbbl
mov
jp
leave
fisubs
sub
cmpsb
and
fucom
icebp
loopne
fsts
imul
mov
mov
pop
and
add
sbb
sub
mov
les
push
js
andl
or
stos
mov
lods
xchg
mov
test
mov
popf
xchg
jo
inc
leave
pushl
std
adc
mov
das
mov
popf
pop
dec
or
xlat
mov
andl
les
jecxz
sub
inc
imull
dec
dec
push
movsl
xchg
pop
xor
iret
ficoms
stos
int3
cmpsb
outsl
and
sub
arpl
out
test
sub
inc
pop
xchg
pop
test
jae
sbb
nop
jg
add
pop
das
pop
int3
aad
ds
xlat
dec
les
jno
cmp
mov
sub
mov
jmp
leave
pop
pop
or
pop
xlat
loop
sbb
sub
pusha
ret
rcr
add
movsl
xchg
mov
xchg
mov
out
mov
mov
ret
dec
jg
mov
pop
and
pop
jae
mov
mov
cli
pop
out
outsb
aaa
jno
fcmove
inc
jge
and
int3
xchg
xchg
cmp
in
jo
loop
add
mov
sbb
mov
gs
jl
rolb
cmp
and
inc
in
aaa
in
cmp
ficompl
xor
ret
push
inc
or
mov
mov
cmpsb
test
fcoms
outsb
or
push
cmp
es
movsl
lods
adc
inc
pushf
bound
ds
jnp
push
pop
sbb
push
pop
jns
sbb
aas
and
mov
shlb
sbb
jne
movsb
arpl
leave
xor
subb
mov
mov
cwtl
shrb
adc
jmp
cmp
mov
adc
jne
rclb
out
mov
stc
pop
sbb
or
lret
or
adc
and
mov
mov
mov
insb
aad
push
lret
das
pop
push
adc
movsb
movsb
cltd
std
repz
jns
and
imulb
cwtl
shlb
rcrb
inc
movq
sub
fadds
or
inc
pop
stos
daa
and
dec
in
pop
hlt
aad
icebp
sbb
ficoml
sub
jae
mov
into
into
mov
lock
pusha
pop
sub
cmc
cmp
mov
pusha
pop
rcll
jp
ljmp
push
jle
cmc
ficoml
in
jp
addb
inc
mov
adc
int
mov
aam
xor
cmp
cmp
cmp
jnp
push
je
pop
sub
adc
aad
enter
fisubrl
lret
in
addr16
daa
gs
inc
sahf
pop
jae
cmc
or
cmp
add
test
call
jnp
xchg
shr
in
lret
and
adcl
mov
es
int3
enter
lret
rcr
xor
addb
stos
xchg
inc
cmc
push
shlb
cmp
fnsave
bnd
pop
gs
dec
sub
cmp
lods
inc
push
ret
jl
lahf
incl
ret
and
add
rcll
lods
mov
fs
es
sub
pop
sub
arpl
push
jge
pop
inc
js
and
lods
cmp
sub
lret
sbb
xchg
fwait
mov
mov
sti
add
in
in
sub
xor
aas
pop
sub
pop
mov
in
je
test
fildll
and
mov
mov
pop
sbb
adc
pop
adc
mov
push
sub
leave
jg
cmp
xchg
rclb
mov
jns,pt
lods
sub
subb
cmp
xchg
jo
pushf
std
scas
lret
inc
stos
sbb
xchg
arpl
fdivrp
or
aaa
and
dec
inc
pop
daa
push
jmp
lahf
fsubs
shlb
jae
arpl
and
gs
js
test
pop
clc
sti
jnp
xor
push
int
xlat
mov
popa
xor
pop
or
cmc
shrb
mov
movsb
push
testb
and
inc
adc
rorl
xlat
and
cmp
sub
aam
icebp
lahf
sbb
cmp
insl
sbb
inc
pop
aam
xor
xchg
mov
jecxz
jl
add
sahf
and
clc
enter
push
mov
sbb
fdivl
stos
and
jbe
pop
jo
mov
hlt
rcr
mov
dec
mov
mov
mov
cltd
cli
mov
outsb
inc
out
incl
sbb
xchg
aad
mov
dec
mov
adc
fmull
jmp
inc
push
sti
repz
mov
xor
xor
pop
ljmp
push
lods
cmp
mov
ret
push
mov
jp
lods
repnz
sub
mov
adc
jae
add
pop
add
lcall
stos
lea
lds
and
or
push
dec
pop
mov
setg
or
out
xlat
in
pop
daa
aam
add
add
lock
mov
ftst
mov
popw
jns
mov
lcall
std
loope
int
add
repnz
pop
adc
stos
jmp
popa
inc
jno
add
scas
dec
mov
xlat
xor
add
movsl
mov
xchg
pop
push
add
pushf
pop
dec
pop
adc
mov
adc
add
popa
pop
shr
das
les
or
xor
add
shll
lahf
icebp
sub
fcoms
cmp
aaa
mov
notb
sbb
mov
push
out
mov
mov
test
sbb
and
aas
insl
dec
inc
xchg
hlt
dec
out
incl
clc
pop
pop
mov
enter
fstps
fwait
leave
das
xchg
aam
pop
sbb
test
pop
dec
pop
pop
push
lods
mov
enter
lock
pusha
xor
movsb
scas
mov
inc
push
gs
mov
xchg
aad
inc
into
add
and
mov
outsb
rcll
pop
mov
leave
xchg
dec
add
mov
pop
popa
in
into
and
pop
dec
es
xor
iret
mov
jp
or
sbb
movsb
cmp
stos
popa
les
xor
mov
cmpsb
in
jecxz
jno
das
push
pop
jmp
xchg
sbb
cmp
xor
into
fxch
sti
mul
mov
push
pop
das
fwait
mov
lock
inc
fsubl
mov
xchg
notl
ja
cmp
out
sub
jae
test
sbb
mov
mov
jns
popf
sub
mov
mov
mov
fnstsw
mov
xor
lret
push
or
jne
xchg
jnp
mov
adc
and
push
and
jb
fwait
inc
int3
in
or
xor
jg
xor
popa
jmp
and
mov
es
stos
scas
jecxz
sahf
mov
and
mov
jle
rorl
mov
out
mov
push
pop
mov
dec
cmp
xor
lods
cmc
mov
dec
push
inc
into
push
mov
dec
cli
xor
es
insb
cmp
push
pushf
std
lds
lret
and
das
std
pop
into
pop
test
mov
sub
xchg
in
dec
pop
in
mov
cs
or
mov
sub
cmc
or
cmp
fiaddl
jno
lahf
adc
imul
cmp
sub
fsubp
add
cmpsb
data16
pop
inc
mov
inc
cwtl
popa
lahf
jno
loope,pt
mov
sub
outsl
loope,pt
stos
cmp
or
jge
idivl
daa
pop
jbe
adc
shl
jge
lret
adc
cmp
adcb
dec
les
inc
cltd
xchg
cmpsb
inc
bound
shrl
aas
mov
pop
lods
repz
or
jge
aad
ret
jnp
inc
cwtl
mov
pop
xor
cmc
scas
or
repnz
icebp
lods
fldt
outsl
dec
ljmp
or
mov
cmp
mov
mov
jle
mov
sbb
or
jle
cmpsl
popf
inc
jns
mov
iret
pop
int
jns
sahf
imul
mov
gs
sarb
or
dec
insl
aaa
xor
add
cwtl
inc
add
adc
icebp
ss
sti
cmc
xchg
sbb
mov
pop
mov
lahf
mov
ret
xchg
loopne
aam
xchg
ss
xor
jns
pop
adc
in
aas
sbb
in
sbb
sub
scas
xchg
jg
jle
dec
xor
adc
push
leave
lret
jne
pop
mov
mov
aaa
xchg
pop
sub
mov
out
pushf
jns
dec
pop
testb
adc
push
push
sti
add
aad
aam
lds
mov
cmp
mov
add
add
into
lahf
and
xor
or
fimull
mov
xchg
imul
loop
or
filds
sbb
add
or
push
cmp
mov
sub
in
movsl
mov
repz
mov
subb
sbb
das
test
or
add
sahf
sub
addr16
incl
mov
dec
mov
and
add
insb
xor
xor
jnp
cmp
rolb
in
imul
or
stos
mov
das
inc
xor
xchg
inc
push
sub
nop
sub
jmp
dec
sbb
mov
fs
mov
aaa
push
mov
fldt
mov
sbb
push
pop
mov
outsl
xor
in
outsb
loopne
cmp
xorl
std
or
or
push
test
jp
sar
ja
test
cmpsl
xor
sub
push
mov
in
out
sub
loope
dec
add
and
push
adc
adc
fmull
inc
out
xor
inc
sbb
lods
lock
int
sub
popa
mov
cmp
in
dec
nop
mov
mov
inc
sub
add
push
test
push
std
out
repz
int
or
sub
xchg
inc
cmp
das
or
cmpsl
add
cltd
push
mov
sub
dec
adc
fldcw
icebp
jle
pop
jo
imul
adc
xchg
in
cld
mov
mov
mov
sub
xchg
inc
and
fmul
fwait
sar
rcrl
jmp
mov
std
sub
xchg
mov
imul
sub
insb
mov
push
xor
aam
outsl
pop
mov
movsb
and
lock
and
adc
adc
sub
fcoms
push
enter
inc
sahf
scas
repnz
sbb
xchg
call
jmp
add
out
daa
loop
les
and
idivl
cmpsb
test
inc
mov
xor
inc
imulb
icebp
daa
scas
popl
xchg
sbb
inc
pushf
cwtl
push
or
popa
mov
subl
push
mov
mov
mov
mov
testl
pop
push
test
cwtl
dec
and
adc
jle
or
dec
fsubs
fnstenv
xchg
mov
pop
mov
sub
pop
or
call
sbb
aam
jb
out
add
jp
aas
cmp
mov
push
movsl
push
adc
leave
aaa
ljmp
arpl
and
mov
mov
jl
fstp
aas
jbe
clc
les
loopne
mov
adcl
lock
mov
mov
lahf
and
test
das
into
cmp
mov
dec
mov
mov
je
stos
notl
div
sarl
inc
jg
inc
fldt
sub
jp
mov
lret
sub
push
shl
mov
lret
adc
cmp
xchg
nop
sbb
or
and
jl
inc
lods
push
and
push
lock
xor
scas
fadd
jmp
sub
mov
mov
pop
xchg
mov
xor
lods
les
and
scas
aaa
push
adc
cmp
cli
push
loop
inc
and
ljmp
icebp
inc
clc
fistpl
adc
add
cwtl
gs
mov
adc
jbe
sub
ja
ljmp
xor
jecxz
lea
sub
test
jg
pop
xchg
mov
pop
mov
or
pop
nop
xor
mov
push
inc
ja
jl
clc
clc
inc
xchg
jbe
mov
js
into
sub
or
int
dec
sbbb
inc
out
dec
xchg
rcrb
or
int
iret
fs
shll
call
adc
adc
icebp
ret
cmpl
or
jnp
mov
lock
sbb
adcb
aas
mov
xlat
sub
jo
outsb
xor
sbb
xor
shrl
int
add
or
sbb
lds
mov
daa
lahf
jg
xchg
dec
push
sub
dec
fbstp
arpl
movsb
jg
sbb
mov
fbstp
adc
aam
mov
cs
aaa
test
push
cmpsb
lods
mov
mov
or
stos
lahf
sbb
lahf
addr16
add
or
mov
and
in
jge
push
adc
lods
pop
mov
loop
dec
mov
xchg
jae
mov
icebp
jle
cmp
mov
in
xchg
inc
and
sub
or
cmpsl
std
mov
push
stos
test
les
jb
pushf
out
outsb
movsl
sub
out
test
and
and
or
repnz
je
and
mov
xor
pop
nop
push
mov
push
movsl
lods
enter
fwait
aas
pop
jns
loope
push
test
cld
lret
jnp
sub
adc
mov
jae
jnp
inc
and
mov
xor
mov
lods
add
mov
push
mov
aad
and
pop
cmp
ret
sbb
pop
pop
rorl
iret
popa
add
out
fnstcw
pop
sti
shrl
in
sahf
fcmovnu
aaa
add
dec
sub
or
orl
jp
pop
in
add
add
jne
aaa
inc
ljmp
jb
into
rcll
sahf
xor
xchg
and
icebp
lods
sub
loop
fwait
pop
or
add
add
mov
je
push
aaa
pop
out
sub
cs
inc
enter
xor
stos
sbb
sbb
ret
adc
jg
cmp
ja
fcoms
movl
cli
loopne
cmp
mov
xchg
loope
mov
xor
sub
in
sbb
inc
jle
mov
and
add
aaa
repz
push
mov
mov
mov
maskmovq
negl
jle
andb
push
inc
push
out
out
sub
addl
jl
add
loop
lods
bnd
sbb
pop
cmp
cmp
fistps
ret
pop
xor
fsubrs
sti
xchg
or
cmp
inc
pop
and
out
jmp
dec
inc
hlt
push
xor
mov
xchg
pop
mov
sbb
ficompl
adc
out
sbb
stos
leave
fbld
pushf
mov
adc
xor
rol
adc
cmp
sbbb
mov
xchg
push
loopne
add
jecxz
cli
inc
inc
inc
fs
xchg
scas
shlb
dec
jb
xorb
insl
sti
xor
imul
roll
daa
int3
and
and
packuswb
rcrb
mov
int3
xor
shll
jne
adc
xchg
inc
xlat
xlat
pop
inc
inc
shrb
cld
jne
aad
mov
ret
es
mov
repnz
cwtl
jb
std
js
lret
fwait
push
pop
insb
rol
enter
cli
dec
addr16
jae
lds
ljmp
jb
jge
pop
hlt
test
inc
inc
xorl
icebp
sub
adc
cmp
push
push
and
cmc
in
fidivl
shl
add
xor
mov
inc
rcll
enter
stos
sub
mov
les
dec
jge
push
xchg
push
xchg
jo
scas
mov
cli
or
mov
pusha
sbb
sbb
fsubl
out
into
xor
jb
jb
sub
xor
and
jge
mov
pop
inc
loopne
scas
push
cmp
mov
ja
mov
pop
stc
push
lret
aam
pop
cltd
sbb
mov
jns
mov
push
into
imul
add
push
mov
and
mov
jne
lock
cmpxchg
pop
jnp
push
inc
test
cmc
pop
inc
jmp
and
pop
rcrl
xchg
adc
lock
jecxz
xchg
jle
cli
push
ss
pop
mov
adc
inc
int
test
mov
aas
pop
sbb
mov
loope
out
mov
inc
sbb
ret
pusha
outsl
aam
push
cmpsb
rcrl
insl
mov
add
cmp
mov
or
adc
pop
xchg
sbb
xor
pop
pop
sub
pop
mov
jnp
pushf
mov
and
ljmp
mov
cmpsl
inc
loop
jmp
jnp
mov
ljmp
aad
sub
xchg
mov
adc
in
adc
addr16
mov
in
iret
fisttpl
insl
ret
push
sti
xor
mov
sub
movsl
cmp
jl
pushf
mov
sub
addl
adc
xor
push
dec
mov
loope
cld
sub
lahf
mov
lret
inc
sbb
and
in
mov
out
and
dec
fistl
cmp
cmpsl
lcall
pop
push
pop
dec
jmp
xchg
jecxz
cmpsb
ret
push
xchg
rolb
dec
pop
xor
stc
rcll
dec
add
rclb
xor
imul
adc
gs
lock
mov
ds
adc
mov
pop
push
cmpsl
nop
sub
jg
mov
xchg
pop
xor
outsl
test
push
cmp
add
imulb
mov
bnd
mov
into
mov
subb
addr16
adc
lock
jno
out
and
clc
notl
arpl
in
adc
dec
shl
mov
or
pop
aaa
ret
cwtl
jbe
out
leave
xchg
push
dec
cld
xlat
bound
xchg
in
dec
sti
js
and
mov
xor
int3
jno
xchg
dec
sti
std
adc
scas
sub
pushl
or
xor
inc
mov
fldt
or
addr16
repz
lods
adc
mov
scas
arpl
into
lret
pop
jne
fisubs
lahf
int3
xchg
adc
jbe
arpl
or
rclb
les
sbb
shll
jge
fistpll
lock
notl
sub
shlb
mov
fistpll
iret
movsb
je
push
or
lret
lods
neg
dec
mov
jle
mov
icebp
popf
inc
ja
xor
lcall
xor
rol
fistl
sbb
mulb
pop
jo
out
lret
inc
lds
xor
sbb
add
jns
mov
loopne
or
test
fidivs
adc
movsl
adc
mov
mov
mov
sahf
int
aam
or
into
in
xor
je
sbb
jmp
outsl
ja
sahf
aaa
jecxz
xchg
mov
jno
mov
notl
mov
and
shlb
sbb
mov
cli
imulb
jle
divb
arpl
cmc
mov
icebp
outsl
or
mov
and
xorb
push
fcomi
xor
imul
popf
xchg
dec
and
mov
pushf
push
faddl
pop
push
pushf
mov
stos
jp
jmp
jbe
inc
in
mov
fisubrl
mov
jl
push
es
dec
add
addr16
mov
mov
and
rclb
fldenv
insl
add
xor
ret
xchg
mov
and
xchg
add
lods
xchg
jg
inc
enter
lret
mov
pusha
push
ficoms
pop
popf
sbb
mov
out
loopne
lret
mov
mov
data16
fucomip
cmp
orl
push
inc
and
shr
mov
mov
gs
outsb
inc
test
or
fidivs
xchg
daa
inc
les
inc
xchg
xchg
je
xchg
cmp
xor
jle
aad
sub
mov
je
out
int
out
icebp
es
bnd
mov
pop
sub
sub
adc
nop
jne
lret
or
insl
in
in
imul
jge
mov
fwait
les
lea
xchg
in
and
or
jno
je
sar
clc
sub
loope
das
scas
stos
or
ds
std
out
lcall
outsl
enter
push
das
mov
dec
or
inc
jo
sarb
push
jbe
and
jb
xor
jb
pop
mov
cwtl
jno
inc
mov
mov
jns
cmp
add
shll
and
sub
ret
add
or
jle
inc
push
xlat
out
xor
pop
cmc
testl
ret
pop
dec
out
inc
mov
pop
mov
rorb
aas
popl
cld
add
out
mov
jo
and
das
cwtl
mov
lret
adc
push
pushf
sbb
dec
in
xor
lret
add
xor
stc
adc
in
icebp
push
lcall
jmp
cltd
fwait
inc
dec
lcall
mov
jmp
fucomp
lahf
sub
push
xor
out
test
in
push
push
or
mov
pop
aas
pop
push
xchg
or
add
xchg
jl
push
stos
sub
add
cli
pop
pop
cmp
dec
push
push
push
inc
ljmp
mov
repz
sbb
pop
popf
xchg
nop
orb
aas
in
adc
ret
dec
pop
sbb
jl
mov
cltd
mov
jb
xchg
ss
lods
xchg
and
jg
and
dec
jae
jo
fdiv
mov
jae
pushf
sbbl
test
out
fwait
leave
hlt
fsubrs
rclb
xchg
mov
xor
push
mov
mov
ss
mov
outsb
and
xor
mov
fs
stos
je
fisubrl
out
xchg
sub
sbb
fldenv
jecxz
fstps
lcall
sub
shl
clc
outsb
cmc
out
adc
cld
pop
inc
and
sub
pusha
add
push
adc
mov
lcall
push
mov
cmc
pop
divl
leave
xchg
inc
fcmovbe
clc
mov
push
jg
xchg
filds
ret
shr
add
sub
sti
test
add
sub
and
xor
cs
xchg
movsb
mov
mov
xchg
pcmpgtw
ficompl
jge
jmp
pop
mov
inc
test
push
imul
aaa
sti
sbb
hlt
stos
cmp
fsts
jnp
fdivl
sti
nop
mov
mov
xor
add
ss
test
dec
jbe
sub
mov
or
inc
or
jp
leavew
adc
in
jns
mov
clc
jmp
out
or
mov
jle
sahf
repnz
dec
mov
mov
js
cmc
inc
clc
pusha
sarl
cmpsb
inc
xchg
shll
push
mov
xchg
in
jecxz
sbbl
sbb
push
fldln2
push
fcomps
xor
mov
add
mov
rorb
xchg
sub
xor
jp
std
fisttpll
or
hlt
mov
in
mov
fidivrl
or
mov
cwtl
jb
xor
leave
or
sub
shlb
pusha
pushf
add
pop
pop
in
mov
loop
sub
imul
addl
jae
xchg
lds
dec
filds
mov
cmp
xlat
mov
push
test
cmpsb
shr
cmp
call
or
imul
xchg
mov
fidivl
test
mov
out
and
daa
outsb
shl
mov
adc
or
cmpsb
mov
cmp
inc
in
lahf
or
int
lods
shlb
cs
fldl
xorl
fwait
loopne
lods
testb
lret
xchg
cwtl
jne
jmp
adc
in
aad
xor
inc
outsb
gs
dec
push
scas
mov
js
mov
mov
inc
in
fs
cmp
test
jl
jo
sub
movsl
test
cmp
mov
rclb
mov
cmc
xor
dec
push
mov
test
sahf
insl
dec
pop
push
pop
inc
mov
push
xor
mov
mov
xor
enter
bound
inc
bnd
cmp
jmp
xlat
pop
mov
mov
jmp
jecxz
in
addr16
call
push
nop
scas
dec
jl
sbb
fs
fs
nop
pop
jecxz
bound
sbb
add
jge
and
les
test
gs
ret
out
adcl
fsubr
xchg
ret
ljmp
nop
movsl
fdivrl
fs
iret
jmp
sbb
mov
arpl
add
jb
jno
int3
popf
and
pop
mov
and
add
mov
std
push
xor
gs
mov
out
lahf
test
subl
cmp
pop
repz
xchg
push
mov
sbb
addr16
mov
push
dec
cmp
leave
jnp
cmp
xchg
rcr
daa
mov
cwtl
imul
iret
shl
and
mov
cmpsb
xor
xchg
lahf
in
or
jmp
lcall
mov
out
lahf
aas
test
fimull
mov
mov
lods
movsb
popf
mov
mov
cmc
lahf
aas
sti
fwait
lods
mov
xchg
xchg
rcll
xor
fstpl
jo
shl
mov
insl
pop
lcall
data16
cmp
jno
addr16
idivb
and
dec
cld
xchg
xchg
les
mov
pop
cmc
repnz
lds
lods
and
cli
jmp
test
pop
jge
lods
test
cli
xchg
cld
scas
mov
dec
and
mov
dec
or
and
jmp
mov
mov
in
scas
inc
pop
cmp
mov
shlb
add
jge,pt
pop
lock
out
popa
mov
mov
sub
jne
jb
cmp
xor
mov
iret
les
xchg
xchg
ds
test
dec
inc
and
iret
fmul
fildl
cld
and
cs
inc
xchg
iret
jno
sbb
sbb
lcall
lcall
and
mov
sbb
mov
enter
shll
push
stos
xchg
mov
inc
insb
xchg
mov
mov
icebp
imul
lock
adc
mov
push
xor
pop
loope
fiadds
dec
xchg
lea
es
cmp
push
adc
enter
xlat
jle
sbbb
mov
pop
push
dec
push
das
sub
jbe
test
ja
mov
outsb
push
mov
sbb
gs
insb
in
push
std
mov
insb
mov
mov
mov
test
ret
or
punpckhdq
mov
call
lahf
mov
repz
cltd
push
adc
mov
pop
filds
test
mov
cmpsl
xchg
sub
pop
orl
jbe
ds
mov
addr16
xchg
fdiv
add
inc
cmp
push
loop
loope
int
mov
push
loope
lods
pop
mov
dec
leave
sahf
hlt
fstpl
scas
ljmp
jo
mov
cmp
pop
imul
xor
sahf
push
and
outsl
test
mov
mov
pop
mov
shll
add
inc
ds
ret
in
sub
mov
push
mov
sahf
ljmp
orl
pushf
sub
jge
inc
loope
rorl
in
fisttps
lea
mov
clc
fimull
mov
out
call
loope
dec
and
mov
dec
nop
lods
testb
cmp
out
cmp
jo
push
mov
mov
mov
fcomps
mov
push
adc
test
lds
mov
pop
inc
ds
cmc
rol
stos
dec
xchg
data16
inc
out
in
mov
or
dec
or
xor
xchg
stc
movsb
in
mov
and
and
test
mov
outsl
adc
sub
jne
adc
test
mov
sbb
imul
sub
icebp
sarl
cld
adcb
ja
cmc
push
test
dec
pop
icebp
and
orb
adc
xor
stos
pop
pop
xor
loope
sbb
insl
mov
mov
xchg
cmp
sbb
ret
push
fsubp
aam
push
or
test
movsl
cli
mov
pop
or
or
mov
mov
sub
out
mov
mov
xor
jno
and
dec
mov
insb
sub
pop
mov
xchg
mov
popf
in
sti
imul
pusha
ret
push
enter
xor
test
add
nop
daa
ficoml
xor
repz
cltd
xchg
xchg
dec
aaa
and
mov
jae
imul
or
xor
scas
hlt
outsb
dec
test
fwait
mov
dec
fisttpl
and
jecxz
dec
rorb
sbb
in
mov
scas
ss
push
jge
das
mov
aad
inc
xor
add
mov
loop
int3
sbb
addr16
pop
mov
mov
js
mov
xchg
push
adc
inc
add
in
lds
mov
mov
xchg
or
aam
outsb
mov
lcall
popa
loope
adc
popf
jl
sbb
test
inc
cwtl
aam
pop
adc
mov
xor
adc
enter
jno
xchg
es
push
aam
test
dec
mov
fsts
xor
dec
sub
sub
dec
mov
pusha
inc
cmp
mov
enter
or
and
mov
sti
stc
int3
hlt
cld
and
mov
fcomps
jne
lret
mov
xchg
xchg
mov
mov
push
clc
dec
lret
lods
inc
movsl
das
insl
cmc
jl,pt
mov
test
pop
clc
js
pop
rclb
pushaw
add
aas
push
xor
and
add
andb
jb
sahf
daa
and
jge
and
fld
sbb
sbb
mov
mov
mov
ljmp
popf
in
test
movsb
mov
mull
rcll
or
lds
add
sahf
mov
mov
or
push
loopne
lahf
sarb
int
xor
push
fwait
repz
cltd
cmpsb
xlat
adc
cld
ja
std
cwtl
cmpsb
idiv
loopne
sarb
sub
cmp
dec
add
nop
in
mov
add
pop
or
cld
stos
jae,pn
hlt
sbb
push
jmp
adcb
into
pop
out
jp
sub
xchg
mov
sbb
jmp
stos
xchg
and
push
xlat
out
pop
pop
pop
adc
push
mov
and
negl
shlb
adc
and
ret
movsb
push
jo
aad
lods
dec
sub
or
sti
lods
fildll
xor
loop
test
pop
lret
ljmp
mov
shl
mov
sub
dec
mov
inc
inc
or
iret
repnz
mov
mov
adc
sbb
lahf
ja
push
repnz
jl
dec
mov
pop
popf
out
jp
xorl
mov
or
in
inc
les
jecxz
pop
std
imul
adc
sahf
outsl
mov
push
adc
test
cmp
cmp
scas
ljmp
aad
jp,pt
cmp
nop
mov
dec
int
stc
or
outsb
sub
add
inc
ss
jge
loop
fnstsw
push
or
xor
jbe
dec
cmp
sub
out
mov
aas
ret
les
out
ret
push
lahf
das
loop
idivb
and
int3
xchg
and
loop
inc
push
xor
sub
xchg
into
ss
jecxz
or
aaa
and
add
loop
jl
f2xm1
scas
cmpsb
pushf
out
in
repnz
inc
push
sbb
lods
pusha
mov
and
scas
rcll
aaa
les
addr16
mov
push
xlat
inc
iret
lret
lea
mov
sub
sti
or
jmp
mov
cmp
sbb
cld
push
sub
outsl
mov
cmp
and
sub
loopne
and
test
adc
mov
pop
arpl
pushf
scas
adc
nop
and
mov
loope
out
mov
ss
arpl
sbb
sub
cmp
outsb
dec
jno
sti
pop
xchg
jns
adc
lock
mov
pop
or
fs
dec
xor
ss
mov
call
lret
mov
or
cmp
xor
cmpsb
insb
xchg
xor
push
fistpl
ss
mov
add
bound
aam
xor
push
mov
test
inc
nop
cmp
mov
cs
negb
outsb
jae
mov
ret
out
mov
xor
leave
ficompl
xchg
leave
adc
stc
adc
mov
and
sub
pop
jecxz
xchg
sbb
adc
mov
lods
mov
jnp
push
push
jge
cmc
fs
into
data16
cmp
rclb
icebp
data16
int3
mov
push
push
test
adc
push
pop
scas
inc
lahf
mov
adc
jae
fmull
adc
pop
xchg
nop
ss
lds
loop
mov
pop
repz
jo
iret
xchg
mov
and
gs
and
ds
jnp
xchg
cwtl
and
ret
ljmp
test
and
int
out
xor
popa
and
push
xorl
mov
iret
dec
pushf
jecxz
mov
mov
lret
pushf
fst
xchg
test
sub
leave
repnz
je
jg
inc
scas
movsl
pop
push
mov
imul
xchg
outsl
push
daa
push
sarb
inc
cmpl
mov
stc
sbb
wbinvd
cmpsb
inc
call
int
int3
out
int3
in
mov
cltd
lock
movsl
mov
jns
or
test
cmpsb
sbb
mov
jb
jo
push
cmpsl
jle
xchg
xchg
add
xchg
aaa
sbb
push
jmp
repnz
sahf
lods
addb
jle
repnz
push
sbb
das
sbb
xor
xchg
mov
imul
cld
or
fcmovnb
jge
repz
and
xchg
xor
dec
sub
or
jl
fisttpll
hlt
mov
cli
add
mov
sarb
jbe
dec
sbb
fsts
push
rcrb
in
pop
ja
dec
flds
inc
loope
iret
hlt
lcall
cmpsl
cli
sbb
pop
dec
lods
lods
mov
stc
xor
leave
mov
scas
movntq
stos
or
int3
outsl
inc
imul
add
or
adc
lret
xchg
push
xchg
out
iret
jg
mov
cltd
push
inc
push
call
or
push
mov
mov
jp
in
jae
adc
in
in
cmp
aam
push
sbb
ret
movsl
or
pop
mov
lods
or
ss
cs
std
inc
sar
aas
repz
jp
inc
dec
xor
mov
cmc
das
dec
movsb
adc
aad
sbb
outsl
mov
pop
sub
add
enter
imul
adc
sarb
mov
iret
jge
jae
imul
sar
sub
iret
je
daa
push
jp
shlb
or
jmp
mov
lret
xchg
repnz
adc
leave
push
jno
pusha
lock
sub
imul
fdivrs
sbb
add
adc
vaddsd
insb
int
loopne
lods
mov
push
adc
cmc
mov
scas
jo
movsl
in
sub
cmp
pushf
pop
mov
xchg
or
cmp
mov
and
pop
adc
jle
sub
int
add
inc
jne
xchg
daa
pop
or
popa
imul
jl
xchg
andl
mov
sbb
das
lcall
push
sub
scas
jecxz
bound
pop
popf
mov
icebp
push
sbbb
in
push
cmp
inc
add
sbb
dec
jne
stos
push
or
testb
xchg
fwait
outsb
lock
iret
js
pop
in
sbb
in
sahf
rol
sub
xchg
mov
sbb
ret
dec
dec
sti
xchg
lds
mov
xor
dec
xchg
jecxz
dec
pop
and
cld
or
cmpsl
in
notl
sub
int
fs
fs
sub
stos
inc
xchg
in
mov
dec
je
adc
out
cltd
pop
push
lock
popa
repnz
repnz
outsl
inc
sub
loop
cmc
mov
push
js
cwtl
cltd
mov
sbb
or
aam
orl
lahf
cmp
inc
mov
iret
sub
cli
sbb
mov
push
sub
mov
sub
xchg
cmpsl
in
dec
cltd
xchg
jp
mov
add
inc
xor
xor
pop
movsb
cltd
inc
push
fadds
push
xchg
divb
in
rol
mov
aas
cmp
xor
dec
jg
adcl
mov
jmp
inc
popa
mov
mov
rcrl
aam
test
pop
hlt
ja
loop
pop
mov
std
mov
fwait
loope
jg
mov
call
pop
cmp
outsl
imul
sub
sub
jb
bound
xchg
aam
ret
imul
sub
push
sbbb
mov
pop
sub
inc
rorl
mov
lret
aam
cld
xchg
cmp
ret
stc
cmp
lds
mov
insb
int
xlat
cmp
fcomip
xchg
mov
mov
or
xchg
pop
test
stc
pop
fsubl
sub
ficomps
test
mov
xor
jge
stc
aaa
push
push
and
or
in
sub
repnz
jns
push
stos
icebp
bswap
shl
xor
ljmp
pop
mov
jno
sub
inc
aam
inc
dec
je
leave
out
or
pusha
outsb
lcall
sbb
jg
adc
subb
sbb
adc
push
adc
lds
xchg
mov
adc
inc
iret
xchg
ret
addr16
in
adc
lcall
cwtl
ljmp
aad
sbb
add
mov
adc
cmc
in
bound
xchg
out
xchg
fstpt
push
jle
push
mov
or
loopne
jo
cmp
dec
lahf
jno
mov
sbb
push
pusha
mov
iret
movsl
xchg
rcrb
jno
push
mov
dec
ret
jno
jmp
inc
add
setne
aam
mov
loop
sub
shr
push
lret
jb
int
in
lock
test
in
aad
or
xchg
dec
add
push
or
loope
fnstsw
das
fidivrs
in
out
int
xor
cwtl
fwait
imul
scas
xchg
inc
xor
xlat
rcrb
xchg
xchg
jns
dec
adc
mov
divb
aad
cmp
loop
rcrb
lret
or
mov
sarb
stos
imul
pusha
mov
jo
nop
jno,pn
jl
arpl
aas
inc
std
push
adc
cmp
clc
cltd
fs
cmpsl
push
cmp
or
stc
idiv
adc
or
dec
daa
add
dec
adc
sub
jns
pop
lods
cmpsl
rclb
cmp
pop
cmp
rorl
cs
hlt
in
jmp
lret
dec
movsb
loopne
stc
cmpsb
test
arpl
cmc
xchg
je
std
icebp
mov
idivl
cmp
mov
call
and
xor
dec
jp
test
std
mov
add
sub
scas
inc
xchg
pop
lret
stc
push
lret
cmp
jo
bound
mov
ret
mov
lock
ljmp
cmpsl
xchg
mov
fwait
clc
sub
aam
adc
xor
jae
jne
adc
popl
ret
arpl
or
and
rclb
ss
popf
cld
jns
cmc
scas
mov
jge
daa
jmp
mov
imul
mov
push
unpcklps
xchg
pop
daa
sbb
mov
adc
jmp
cmp
add
addr16
stos
xrelease
fsubs
incl
inc
stos
add
loopne
mov
sub
or
cmp
and
mov
scas
fnstcw
pop
mov
js
or
pop
fisttps
movsl
into
dec
fs
push
int3
scas
add
repz
and
incb
adc
stos
mov
mov
in
dec
pop
dec
cmp
inc
pop
push
jb
pop
aaa
xchg
lahf
scas
push
enter
lds
cli
inc
jge
mov
mov
shll
xor
dec
xchg
pusha
ja
add
aad
inc
and
bound
and
xchg
or
jle
out
sub
dec
dec
add
jno
flds
sahf
adc
call
pop
inc
je
xchg
fwait
loop
jge
dec
mov
add
sub
mov
sbb
pop
into
mov
out
mov
in
in
rorb
xor
or
idivl
mov
cs
dec
sub
pop
scas
cmpsl
lret
and
and
sub
dec
push
hlt
add
and
pushl
fisubrl
int
sbb
push
xlat
jmp
mov
pop
xor
sub
cmp
in
in
inc
nop
cmp
pop
pop
xchg
mov
sub
movsb
mov
xchg
dec
mov
ret
shrl
add
xor
pop
push
stos
xor
push
fs
push
int3
sbb
pop
sub
or
mov
sub
pop
data16
push
sbb
ss
cli
aaa
in
pop
sahf
ss
repnz
mov
lcall
aam
pop
mov
es
stos
mov
xchg
lds
or
push
shr
inc
call
aad
arpl
pop
jecxz
sub
insl
xor
fisubrs
sarb
icebp
and
cmp
jnp
push
push
jle
mov
push
add
ds
cmpl
cmp
mov
mov
add
stos
or
inc
test
repnz
push
int3
das
jmp
mov
in
in
jl
fisubs
iret
test
popa
dec
and
insb
push
cs
mov
push
xor
fldcw
icebp
lods
add
in
cld
push
xchg
movsl
sbb
and
push
push
ja
pusha
cmp
lret
movsb
insb
mov
mov
pop
fadds
das
das
hlt
pop
nop
sarb
sbb
mov
inc
push
cld
mov
cltd
mov
mov
lahf
stos
aam
add
pop
push
mov
test
inc
dec
mov
mov
dec
outsl
scas
and
ficomps
sarl
mov
arpl
shl
mov
xchg
pop
andl
add
sub
cmp
movsb
cmp
fmuls
dec
pop
sub
loope
cmp
pushf
ret
das
mov
push
mov
test
aas
jmp
pusha
mov
in
jge
push
mov
test
rorb
xor
in
mov
aam
xchg
out
rorb
mov
iret
ljmp
fst
fildl
jo
je
cmpsl
iret
ljmp
mov
rclb
or
jp
subb
js
cmc
scas
not
adc
rcrb
sub
push
mov
sbb
shrb
lret
aam
sarb
push
fnstenv
mov
mov
out
and
out
xchg
cmp
push
sbb
das
pop
cmp
popa
mov
cltd
call
cmp
add
cmp
out
add
hlt
sahf
cmp
ss
lods
dec
mov
in
sub
mov
sarl
sbb
sti
mov
lock
popf
loop
pop
shlb
jne
and
insl
push
inc
push
ficoml
sub
xor
iret
push
sub
adc
inc
fisttpl
cmp
mov
pop
mov
fldcw
mov
mov
push
or
xor
push
and
mov
ret
cmp
adc
cmp
mov
adc
insb
shrl
pop
sti
cmp
mov
sbb
mov
scas
xor
cli
adc
xchg
scas
mov
cmp
jne
int
aad
jmp
xor
push
in
loop
pop
or
rorb
stc
int
es
mov
dec
sbb
incl
fadds
mov
jl
xor
in
fistps
lcall
jmp
hlt
cmp
lret
outsb
pushf
push
xchg
mov
mov
sarb
mov
fistpl
into
lret
sbbl
in
jns
add
push
sub
mov
jo
add
add
inc
or
jg
or
popa
rorl
inc
call
rorb
sbb
ss
inc
mov
shll
stc
adc
loope
fsubrl
femms
out
add
les
sbb
inc
push
mov
sti
data16
repz
mov
mov
ds
mov
inc
ja
xchg
dec
adc
sti
divb
orb
add
xchg
mov
mov
inc
std
mov
ljmp
or
or
lods
insl
cmc
aaa
rcrb
fiadds
or
mov
cmp
inc
jae
mov
dec
xor
jmp
insb
in
cwtl
aad
test
pusha
addr16
int3
fwait
stc
push
bound
daa
stos
cs
xor
pop
pushf
xchg
xchg
cmp
and
or
stos
and
fsubr
daa
adc
jge
ja
clc
jnp
cmp
dec
jg
shll
adc
cmp
rolb
and
fisubrs
das
enter
add
outsl
inc
rep
pop
sbbb
inc
jbe
out
mov
jmp
jno
cwtl
cmp
dec
movsb
or
imulb
cmp
ret
inc
ror
popf
rcl
addr16
mov
sbb
xor
and
scas
outsb
loope
outsb
ja
add
movsl
clts
xor
xor
push
ret
push
or
ret
or
jecxz
imul
lcall
push
mov
ljmp
inc
sarl
xor
and
xchg
inc
loopne
jb
xchg
jno
cmp
push
pop
arpl
xchg
fldt
aaa
shlb
lods
sub
jge
push
inc
lods
mov
mov
add
push
mov
pop
adc
aam
lcall
cwtl
or
xchg
mov
fiadds
bound
xchg
add
jb
in
mov
addr16
xchg
loop
popa
bound
mov
dec
sar
insl
lods
dec
aas
sbb
dec
imul
gs
jne
and
mov
ret
mov
mov
mov
inc
cmp
ja
mov
mov
mov
dec
idiv
lret
add
lds
ss
cwtl
sub
or
ljmp
iret
ret
mov
sub
push
jp
in
or
stc
sahf
nop
ljmp
arpl
mov
push
int
dec
out
cwtl
out
mov
cmp
jg
fistl
cmc
icebp
cs
xchg
cmc
jecxz
pushf
rorb
test
jno
dec
int
orl
rcl
push
jge
sarb
dec
scas
xor
popf
notl
pop
sti
and
and
mov
cmp
adc
xor
mov
mov
add
fsubs
shr
lret
add
xchg
pop
jmp
aaa
lock
push
jmp
in
inc
test
out
ljmp
jno
lcall
jne
cmpb
test
mov
sahf
hlt
and
inc
push
aas
jp
add
test
ret
push
mov
out
or
stc
sub
xchg
adcl
mov
fstp
xchg
add
dec
sahf
inc
xor
les
stos
xor
cmp
mov
pop
or
insl
ret
sub
ficompl
sbb
test
in
ret
loopne
xchg
sbb
sbb
mov
jbe
repnz
add
adc
xor
in
loop
es
add
mov
das
sbb
push
jmp
negl
fmuls
jmp
loop
loopne
fucomip
mov
jno
loope
push
arpl
xchg
adc
xor
jg
int3
jo
or
outsl
pop
jno
lods
add
ds
sub
push
filds
lods
mov
aaa
jne
add
cmp
dec
inc
cmp
sub
sbb
mov
jb
jge
cli
movups
repz
out
xor
movsl
sub
flds
jg
fnstsw
lret
ffree
inc
cmp
mov
in
push
inc
sahf
sbbb
ja
mov
outsb
xchg
jae
outsb
jae
hlt
or
mov
nop
push
and
cwtl
ss
fidivs
aam
and
fisttpl
sbb
jge
leave
push
sbb
xlat
repz
sbb
cld
es
lods
xchg
ret
inc
inc
sub
jns
dec
call
or
movsl
mov
adc
loop
mov
sub
xor
mov
mov
sti
mov
mov
jb
adc
dec
add
push
insb
pop
cs
out
sub
pop
loop
push
les
js
loop
stos
lcall
hlt
mov
sub
dec
jg
shlb
xchg
pusha
ja
cmp
insl
jmp
push
sbb
adcb
cli
sub
pop
push
pop
inc
pop
lret
aam
sbb
pushf
jmp
lods
mov
mov
fsts
lock
mov
loop
in
scas
jbe
pop
dec
cwtl
lahf
xchg
jl
enter
mov
jle
stos
testb
aas
inc
decl
fst
cmp
sti
hlt
inc
out
lods
cmpsl
jle
sub
adc
aam
pushf
mov
mov
pop
in
icebp
mov
push
jp
ja
ja
adc
lret
int3
push
jno
dec
xchg
lock
jge
sub
pop
xchg
std
shrl
subb
xchg
add
dec
ljmp
cwtl
mov
mov
mov
push
xchg
dec
jns
push
push
arpl
push
out
in
adc
jmp
in
jle
and
cmp
sub
cmp
or
or
std
mov
push
dec
push
jne
loope
adc
cmp
cmpsb
aaa
loop
sarb
cmp
push
subl
icebp
xor
les
cltd
jae
fisubrl
jecxz
in
mov
push
sbb
xor
jg
idivb
outsl
lock
fcompl
cwtl
clc
pop
sub
jmp
push
mov
aam
hlt
cwtl
decb
cmp
aad
movsb
dec
fildl
mov
lea
adc
pop
sub
mov
std
js
and
adc
mov
sarl
lea
rcrl
inc
push
nop
addr16
add
pop
lahf
or
mov
fdivs
dec
ljmp
repz
sbb
sub
repz
sub
out
fsts
pop
into
andl
lret
xchg
fimuls
dec
icebp
rolw
pop
js
loop
fldenv
mov
into
pop
imul
mov
xchg
repnz
mov
dec
and
push
inc
fnstenv
xor
pusha
mov
add
add
and
sarb
out
push
jbe
mov
pop
clc
add
fldenv
hlt
or
push
push
mov
mov
sahf
and
adc
sub
test
jl
sti
in
xor
shlb
pop
mov
fdivs
and
jns
insl
inc
push
leave
push
add
stos
inc
cmpsl
mov
xor
addr16
je
adc
gs
call
test
inc
les
pop
adc
repz
and
sti
inc
sub
sub
xchg
jo
pop
pop
push
mov
adc
sbb
insb
subl
jbe
jns
xor
cmp
out
mov
mov
aas
lret
ljmp
push
jb
into
or
adc
mov
movsb
push
inc
enter
cmpsl
dec
xor
dec
mov
cmc
push
jae
pusha
test
inc
mov
ret
lcall
test
and
in
mov
fsub
inc
or
rcr
pop
fs
jmp
mov
adc
sub
cmpsl
pushf
mov
sbb
int
fsub
pop
mov
dec
sub
or
aad
pop
add
lock
jae
mov
movsb
xor
movups
xor
into
mov
xor
add
jne
shl
push
and
adc
mov
xchg
mov
sbb
or
andb
out
test
or
jmp
jge
movsb
bound
iret
outsl
inc
mov
jg
imul
out
xor
int3
adc
adc
lahf
pop
pop
idivb
enter
jg
cmp
pop
fwait
mulb
dec
jbe
outsb
loope
pop
movsl
testb
loope
sub
repz
mov
jnp
popf
imul
in
inc
add
loop
mov
mov
xchg
or
loop
stc
cwtl
clc
lret
xchg
push
pusha
lods
or
pop
roll
dec
dec
cmp
or
clc
iret
sti
outsb
jnp
push
or
xor
sahf
dec
cmp
loop
cmp
jno
dec
mov
clc
pop
add
push
inc
inc
cmc
cli
sbb
adc
fwait
sarb
adc
or
inc
or
dec
cmp
adc
mov
test
push
ja
push
ret
leave
pop
jmp
pop
dec
test
sbb
and
mov
sub
pop
ffreep
loope
xchg
in
mov
inc
lgs
inc
jo
into
aaa
inc
dec
cwtl
wbinvd
sbb
cmc
xor
xlat
setle
scas
roll
or
fnsave
pop
inc
mov
pop
push
push
leave
sub
xor
imul
mov
adc
daa
jl
pushf
mov
adc
mov
sub
inc
scas
das
mov
imul
lock
adc
pop
rcrl
fs
dec
pop
add
pop
aam
clc
insb
xor
xorl
mov
stc
mov
cmp
test
ja
mov
cmp
xor
adc
inc
sbb
popf
clc
pop
popa
cwtl
mov
mov
push
icebp
stc
adc
ficomps
mov
imul
sbb
cwtl
imul
arpl
jmp
pop
lds
shl
inc
test
jmp
imul
xchg
xchg
or
or
dec
cmp
dec
push
in
mov
lret
sbbl
enter
shrd
test
jns
pop
add
xchg
enter
mov
les
xor
les
cmp
pop
fwait
insb
mov
insb
shrb
imul
clc
fldcw
dec
out
cmp
dec
mov
fcomps
xchg
cmpsl
fwait
dec
popa
xchg
sbbb
pop
or
inc
mov
xchg
cld
mov
repz
aam
fwait
mov
lods
mov
and
xchg
xor
lahf
sub
cli
mov
call
sbb
test
push
fimull
bound
dec
sub
cli
pop
cs
dec
shll
pop
ret
ja
movsb
lcall
ljmp
iret
aad
inc
jns
inc
add
sub
adcl
jno
cli
lcall
jp
adc
or
sarb
pop
adc
jae
mov
mov
fsubl
gs
inc
or
xor
inc
xchg
leave
mov
and
sbb
sub
pop
out
ss
pop
xchg
test
xchg
cltd
lods
into
xlat
xor
imul
cmp
outsl
pop
loope
ljmp
push
push
popa
sbb
test
and
jbe
cmpsb
cmp
or
dec
addl
cltd
fldcw
int3
shlb
and
sub
fadds
pushf
adc
jg
lock
mov
mov
in
dec
push
addr16
es
subl
push
mov
mov
imul
add
daa
pop
adc
jg
fisubrs
push
bound
fxch
cmp
ja
fistpl
sub
pusha
int3
pop
xchg
jnp
mull
jno
ljmp
mov
mov
sub
cmp
in
xor
icebp
jns
aam
mov
mov
orl
push
leave
pushf
out
cli
test
xor
or
adc
orl
bound
pop
mov
cmc
pushf
icebp
lret
fwait
pop
lea
mov
jmp
dec
pop
sub
inc
outsb
jne
mov
add
or
addb
push
xor
lods
aad
and
aaa
arpl
cmpsb
mov
add
test
iret
test
les
mov
cmc
pop
out
mov
mov
sub
mov
push
int3
sub
xlat
push
sub
mov
movsl
out
mov
jbe
jae
mov
sbb
mov
adc
sarl
repnz
sub
pop
gs
mov
or
test
push
nop
cmp
dec
inc
jmp
jnp
sub
mov
aas
mov
mov
into
lea
mov
pop
xchg
push
std
add
fwait
xor
out
stos
lds
inc
lods
push
or
outsb
push
lds
nop
jge
dec
mov
int
dec
xchg
sub
out
and
add
scas
jbe
cmp
or
enter
mov
fsub
pop
mov
or
call
adc
lcall
sbb
outsb
jns
out
add
insb
neg
lds
inc
push
xchg
stc
pusha
std
in
lods
lods
repnz
adc
mov
and
stos
stc
je
hlt
idivl
or
incl
mov
cmp
pop
data16
jo
test
pushf
push
shr
xchg
mov
xchg
jo
loope
leave
mov
roll
fisttpll
jmp
leave
movsl
xlat
push
sbb
enter
ficoms
fnsave
adc
mov
inc
cli
push
gs
push
bound
nop
sub
mov
cmp
mulb
push
insb
imul
adc
popf
stos
popa
int
mov
jp
jno
clc
outsl
inc
sahf
cmovno
jg
push
mov
shlb
sti
out
pop
inc
push
in
jb
pop
ss
and
and
sub
jl
das
or
out
loope
jne
pop
add
call
adc
adc
cld
push
mov
iret
repz
sbb
add
jne
aad
sub
jno
mov
sahf
mov
dec
push
cs
or
push
dec
leave
fsubrs
inc
ror
rcll
and
xor
add
push
or
push
sbbb
leave
push
iret
push
cmp
push
mov
pusha
ds
fwait
cs
inc
aam
repz
test
repnz
daa
outsb
outsl
xchg
sub
jecxz
inc
sbb
jmp
imull
push
xor
push
pop
lret
push
mov
push
adc
sub
add
fs
test
lds
in
push
add
adc
inc
mov
dec
repnz
fcmovnbe
dec
mov
pop
rcll
cmpsl
jge
pop
fwait
enter
jns
popl
mov
repz
xchg
imul
add
sub
stos
sub
ret
and
test
je
ror
dec
mov
rorb
jno
sub
jmp
sub
inc
outsb
ret
push
and
xchg
jns
lret
lods
mov
xchg
out
pop
jno
aam
es
arpl
push
fistpl
push
in
inc
lret
ljmp
mov
mov
jo
sarl
mov
cmp
sti
arpl
jg
out
mov
jmp
cli
adc
out
xchg
test
jp
xorb
out
ljmp
cmpsl
push
cmc
sbb
mov
fwait
pop
mov
add
dec
dec
call
sub
sbb
pop
cltd
and
adc
jle
test
out
pop
cmpsb
lods
xchg
fildl
and
popa
shrb
addr16
loop
add
xor
push
push
clc
inc
add
fnstenv
sbb
jge
ss
test
pushl
jge
mov
enter
push
mov
rcr
lret
xchg
mov
les
gs
test
cmpsb
shlb
movl
fistl
push
lock
cmp
mov
inc
cmpsl
xorb
daa
ljmp
xchg
xor
jae
rcr
xor
frstor
adc
scas
lret
aaa
loope
push
mov
movsb
nop
add
sbb
loopne
bound
push
pop
mov
inc
lcall
loop
popl
add
std
lcall
aas
rcll
leave
shrl
xchg
sbb
lret
cmc
imul
test
js
pushl
popf
push
outsb
loop
dec
adc
xor
add
fwait
pop
jno
sar
add
subb
xor
mov
mov
mov
imul
test
mov
xchg
lea
outsb
out
dec
leavew
xchg
scas
push
cltd
nop
es
xchg
or
in
adc
cmp
loop
lock
pop
inc
pop
leave
leave
fistl
test
lret
jmp
sub
add
pop
push
lret
xor
test
mov
xchg
mov
mov
popa
lods
fs
xor
bound
mov
inc
aam
clc
adc
lret
scas
push
pop
fistps
inc
ljmp
sbb
insb
inc
or
fwait
in
add
push
js
jae
mov
jbe
mov
lcall
jo
nop
loope
pop
fldt
push
out
out
imul
sahf
sub
rcll
xor
sub
ret
mov
cmpsl
fsubs
xchg
test
adc
dec
sahf
cs
rorb
shlb
mov
xchg
jbe
popa
sahf
mov
inc
adc
jne
scas
in
fsubrs
popf
and
in
jb
in
sti
add
inc
pop
sub
loop
ds
adc
mov
out
jl
sub
js
pop
jne
and
out
sub
mov
loopne
jb
add
hlt
hlt
inc
out
js
xor
in
and
and
add
iret
aas
icebp
mov
mov
sahf
inc
mov
jo
out
push
call
leave
cmpsl
lods
popa
pop
add
pushf
xor
jno
sti
ja
xchg
push
inc
jnp
test
loope
in
les
jo
test
inc
adc
or
sbb
mov
insb
out
lods
stc
pop
pop
mov
out
imul
sbb
cmp
gs
xchg
aam
pop
sub
xchg
or
cmp
mov
or
mov
fidivs
sbb
push
lret
push
mov
pop
adc
xor
out
mov
push
mov
call
mov
mov
repz
xlat
xchg
push
jle
shl
pop
ret
jno
repnz
insb
js
adc
jmp
adc
in
leave
pop
vcvtsd2si
sbb
sub
cmpsl
push
mov
dec
scas
movsl
sbb
inc
iret
mov
pop
and
add
loope
or
add
loopne
dec
or
push
lret
fisubl
lods
push
leave
mul
or
dec
jne
aad
cmp
dec
mov
mov
xor
push
cltd
fbld
mov
mov
mov
jb
in
cmp
adc
inc
add
icebp
adc
int
push
cmp
push
xchg
lret
cmp
sub
popa
and
xor
stos
pop
lods
in
addl
in
jecxz
push
lds
flds
mov
ret
jae
add
jmp
dec
jmp
out
popw
lahf
test
mov
mov
mov
dec
dec
outsl
std
enter
xchg
iret
mov
dec
xor
jp
mov
test
xor
dec
mov
and
sahf
or
cmp
shlb
out
pop
pusha
fmuls
mov
ret
push
mov
inc
jns
stc
mov
imul
mov
mov
pushf
mov
jg
xchg
dec
into
inc
dec
int3
pushf
xchg
test
stos
iret
push
pop
imul
sub
add
pop
loope
pop
lock
xchg
scas
sbb
xchg
push
xchg
mov
mov
xor
sbb
es
ret
pusha
jae
das
jae
imul
lret
push
ss
ljmp
repnz
add
imul
xchg
xor
or
mov
cmp
inc
xchg
dec
imul
add
xchg
mov
sbb
in
inc
jl
pop
pop
mov
mov
ja
pop
mov
adc
xlat
movsl
mov
push
lret
mov
in
mov
out
je
add
out
cmp
ret
or
hlt
call
push
icebp
shll
das
jns
fcom
or
repz
jo
inc
xchg
std
jge
xchg
mov
mov
les
loope
push
add
jle
xchg
lret
pop
adc
xchg
outsb
addl
xor
mov
xchg
adc
movsb
popf
jl
outsb
adc
push
mov
nop
jns
mov
jae
xchg
pusha
shrb
pop
push
popw
sub
and
push
xchg
cmp
subl
fs
cmpsl
push
lds
les
push
das
cli
xchg
push
aad
xlat
and
cmpb
add
mov
adc
mov
xchg
fdivs
or
movsb
sbb
fwait
xor
cwtl
movsb
ljmp
xchg
fbld
outsl
cmpsb
out
loope
cmpsb
mov
mov
test
fisttpll
push
js
lea
jnp
dec
dec
jmp
insb
adc
scas
div
sub
cmp
push
lret
lods
jl
sub
inc
pushf
imul
pop
push
add
mov
mov
inc
mov
movsl
test
sub
in
pop
ret
in
insb
sub
not
test
ds
xchg
pop
jmp
scas
xor
fsts
ljmp
xor
xchg
fcompl
imul
push
int
xor
sbb
insl
cmpl
call
mov
mov
jle
mov
inc
mov
loopne
cmp
xchg
cmp
xchg
insb
js
push
jae
cmp
add
push
add
in
pop
adc
sub
scas
jge
imul
fnstenv
pop
out
mov
adc
mov
sub
adc
jne
ja
mov
mov
cmp
sbb
inc
pop
in
jns
sbb
jp
mov
lea
fs
xchg
adc
or
pushf
lds
ss
repnz
jle
push
jns
adc
sub
sbb
dec
mov
push
cmp
mov
popa
lea
push
test
lods
jmp
mov
adc
call
aad
mov
jl
mov
xchg
cmp
neg
insb
push
ljmp
out
fisubl
dec
cli
pushf
imul
ja
mov
test
fwait
pop
dec
mov
lea
pop
mov
mov
push
outsl
add
mov
adc
jle
xchg
sbb
cmp
adc
fwait
in
sarl
cmp
sbb
sbb
inc
or
push
dec
scas
nop
pop
jnp
pop
hlt
mov
mov
jecxz
repz
jns
add
mov
jbe
xchg
add
and
push
mov
push
adc
xchg
in
fisubs
add
inc
push
flds
and
mov
lock
cwtl
lret
lret
push
sti
hlt
jbe
adc
jmp
je
divb
clc
and
push
inc
and
push
sub
mov
add
ds
imul
xchg
lret
or
pop
data16
pop
cmp
push
cmp
xchg
sti
inc
and
mov
mov
pop
cmpsl
mov
rcrb
sahf
xchg
cmp
lcall
jmp
push
je
pop
jecxz
aad
xchg
pop
add
sub
sub
je
sub
cmpsl
cmp
cmpsl
mov
adc
sub
rorb
jmp
out
jbe
inc
mov
mov
or
xchg
mov
mov
xchg
pop
lods
jecxz,pn
xchg
push
in
mov
lahf
fcomps
pop
outsb
xchg
out
insb
imul
sti
jnp
push
mov
adc
mov
xor
sahf
dec
je
es
cmp
xchg
lea
lods
mov
xor
sarb
xchg
addb
pushf
std
ss
cmp
jle
mov
repnz
xchg
and
inc
or
fidivrl
in
add
outsb
repnz
fcomp
xchg
dec
inc
clc
fisubs
push
enter
jecxz
scas
sarb
push
gs
add
xchg
mov
pop
xchg
mov
lds
sub
jle
mov
lock
pop
xchg
jne
aaa
xchg
in
sbb
adc
iret
dec
test
mov
jmp
decl
aaa
lcall
cmpsl
add
cwtl
mov
xor
jns
movsl
test
rolb
lods
cmp
ss
inc
imul
call
popw
frstor
mov
xor
cmp
xchg
push
jns
or
jae
push
imul
ds
int3
cmp
adc
fidivrl
test
into
mov
sub
fdivr
xor
xchg
xchg
adc
cmp
loop
push
cltd
sub
cld
subb
imul
inc
shl
mov
decl
lahf
cmp
idiv
jmp
jl
inc
in
sub
add
in
cmp
inc
push
mov
test
push
mov
in
and
leave
xor
test
push
popf
pop
push
inc
pop
ljmp
mul
nop
push
pushf
adcl
and
repnz
je
inc
dec
call
pop
movsb
sub
pop
cmp
cmpsl
inc
lahf
push
sahf
add
adc
jno
jp
and
jo
outsl
mov
in
lret
dec
and
mov
testb
movsb
jns
push
add
loop
cmpsl
andl
lods
lods
jmp
push
lret
cmp
sub
sbb
or
and
sbb
movsl
outsl
aad
sub
mov
jl
mov
pop
fiadds
mov
cmp
imul
mov
test
push
std
scas
aam
test
add
clc
mov
inc
add
and
push
jg
es
lret
arpl
xchg
cli
jns
mov
bnd
xor
scas
call
aaa
int3
das
sub
cltd
mov
and
inc
inc
add
push
xor
outsb
jl
xchg
leave
fwait
clc
fistpll
pop
mov
and
xchg
xor
das
lock
sbbl
push
xchg
add
mov
sahf
clc
push
outsb
shrl
ljmp
push
outsb
jecxz
sub
test
xor
fidivs
nop
pop
icebp
push
lret
test
jnp
mov
aad
arpl
les
mov
es
fwait
xchg
xchg
dec
adc
test
push
pop
sbb
dec
mov
dec
mov
mov
sub
fbld
dec
fucomi
sbb
cmp
mov
push
in
stos
ror
or
popf
aam
push
jmp
cmp
shll
insb
insl
cwtl
sarl
nop
int3
int
xchg
movsl
inc
testl
dec
lret
push
xor
xor
sti
push
and
stos
add
dec
or
mov
ret
rorb
std
push
jmp
jne
popa
xchg
adc
xor
push
xchg
push
adcl
test
mov
xor
mov
pop
cli
lods
adc
push
lds
lds
mov
mov
mov
pop
jbe
or
dec
cltd
pop
mov
sbb
sahf
pop
sub
lock
test
les
std
stos
ret
pop
add
mov
mov
arpl
sahf
test
fcoms
cs
mov
and
orl
sbb
lcall
mov
or
pop
cli
arpl
decl
das
or
pop
mov
std
scas
lret
mov
repz
test
lods
bound
div
hlt
loop
popf
imul
cmc
rclb
mov
jne
notl
cmp
dec
sbb
sbb
lahf
pop
andb
sub
or
ret
mov
cmc
and
fstps
rcl
cmp
xchg
mov
js
cmpsl
mov
push
rep
hlt
add
sbb
lcall
pop
stos
ror
movsl
dec
add
inc
pop
adc
jmp
xchg
outsl
stos
imul
cmp
mov
data16
ss
sbb
adc
mov
aas
dec
mov
test
mul
and
in
aaa
mov
or
jecxz
sub
scas
pop
pushf
clc
aaa
dec
cmpsl
mov
ret
pop
mov
mov
das
add
into
cmpsb
roll
mov
popf
adc
mov
mov
shlb
mov
outsl
cmpsb
push
lcall
lods
lahf
add
movsb
xchg
mov
ss
aam
adc
push
repz
movsb
movsl
divb
in
sahf
dec
out
dec
pop
mov
mov
imul
fistps
lods
rclb
inc
popf
bnd
inc
lcall
test
xor
xor
xor
roll
push
js
push
and
stc
adc
mov
stos
pop
dec
or
addl
mov
mov
leave
int
in
aam
aad
nop
mov
gs
xchg
js
jecxz
sarl
sbb
inc
fisttps
es
dec
mov
pop
mov
sbb
arpl
lahf
cld
hlt
call
outsl
pop
inc
inc
ret
fcoms
xchg
fcmovb
out
mov
inc
out
fldl
and
js
dec
ja
add
mov
and
loopne
mov
ljmp
repz
pop
out
fs
or
in
andb
clc
dec
push
test
pop
stc
cmp
xchg
add
ljmp
and
cld
push
in
cmpsl
push
inc
jb
sbb
addr16
ja
xor
fiaddl
jmp
daa
out
dec
in
insb
fildll
subl
fcmovnbe
popf
mov
xor
pushf
aaa
mov
inc
fbstp
xor
pushf
push
and
mov
mov
xor
lock
mov
call
arpl
orb
jge
sbbb
inc
push
ja
xor
out
mov
rol
mov
xchg
jbe
mov
rorb
or
rolb
adc
clc
mov
adc
cmpsl
inc
outsl
test
fidivrl
lods
addr16
xchg
shrl
adc
fcmovu
fldl
lock
jae
push
push
daa
adc
aas
push
sub
pop
inc
sahf
cwtl
mov
dec
xchg
lahf
xor
jmp
cli
mov
pop
imul
outsl
xlat
or
imul
aas
add
test
and
jbe
pop
bound
pushf
dec
pop
addb
or
data16
push
cmp
add
imul
push
cld
sub
mov
aad
movsb
mov
push
cmc
sub
test
dec
es
mov
cmpsb
adc
cmp
lret
adc
aam
and
mov
fsubrl
dec
mov
aaa
adc
sbb
test
inc
aaa
enter
mov
ljmp
push
dec
popf
adc
inc
and
dec
mov
jmp
or
ds
loop
test
dec
push
jae
roll
hlt
jns
push
cli
cmpsl
mov
fidivl
add
push
pushf
add
mov
mov
mov
sub
sub
test
or
leave
sbb
movsb
popa
cmpsl
iret
imul
aaa
loope
lods
pushf
les
pop
sbb
test
dec
out
insb
pop
or
pop
lcall
aad
sbbl
lret
subb
aam
mov
or
test
lahf
cmp
jle
mov
scas
scas
mov
mov
cmp
sbb
xchg
test
adc
inc
insb
mov
shrb
adc
sbb
pop
int
ret
jb
mov
pusha
xchg
imul
mov
nop
fisubs
dec
in
jno
xchg
or
mov
cld
arpl
adc
jnp
add
lret
and
or
in
xchg
dec
lds
sbb
pop
inc
shll
mov
mov
fnstcw
xchg
out
outsl
jo
aaa
lods
sub
or
rolb
out
out
cwtl
movsb
daa
sub
jmp
mov
cwtl
bound
xorb
loop
popa
scas
sbb
xor
mov
pop
mov
inc
shrb
jl
sbb
addr16
in
in
add
dec
xchg
cwtl
jno
es
test
sti
xor
nop
aam
pop
out
or
mov
pop
out
loope
bnd
jg
push
ljmp
popa
dec
cmp
cli
sahf
sub
jns
cmpsb
aad
jp
mov
sbb
fstps
lret
subl
push
push
jp
outsb
int
sbb
push
jle
dec
pop
mov
dec
iret
faddp
out
xor
test
cmp
insl
divb
pop
push
outsl
pop
hlt
clc
dec
xchg
inc
je
fdivs
push
enter
jecxz
lock
mov
fistpl
mov
lea
call
add
ljmp
dec
or
sahf
mov
in
cwtl
cmp
insb
fs
loope
inc
ljmp
and
inc
sarb
cwtl
aaa
pusha
or
pop
sub
gs
cmp
sub
pusha
dec
ja
dec
jae
outsl
push
cmp
sub
leave
mov
xor
stos
lcall
xchg
daa
add
xchg
sbb
jb
popf
popl
popa
je
push
popf
sbb
xchg
inc
jecxz
push
pop
inc
add
dec
adc
into
inc
mov
out
shl
leave
xchg
dec
cltd
stc
fiaddl
add
sbb
and
cmc
fcoms
lret
sbb
cltd
cmp
shl
and
push
fwait
in
and
ljmp
pop
sbb
cmp
inc
stos
faddp
imull
jle
push
int3
out
xor
fs
enter
mov
xor
idivb
or
xor
pop
cmp
inc
cli
cmc
dec
scas
pop
jnp
pushl
loop
push
sti
push
imul
push
dec
inc
sbb
int
xchg
scas
dec
das
arpl
lock
int3
mov
in
dec
mov
sub
cltd
cmc
aas
sub
mov
fisubs
mov
push
aad
mov
mov
cmp
rep
cmp
sbb
loop
loope
mov
dec
and
test
add
outsl
inc
mov
mov
mov
dec
mov
and
jecxz
ret
jg
iret
or
ljmp
in
neg
shrl
ja
shll
int3
mulb
int3
fisttpll
cmp
fcom
and
inc
xchg
mov
shrl
jbe
mov
mov
sub
rcrl
repnz
insl
jae
test
xchg
inc
movsl
scas
inc
and
andw
inc
and
push
sahf
mov
jmp
jo
js
sub
loop
mov
adc
jmp
out
cltd
sbb
pop
outsl
xlat
jg
fisubl
ja
and
icebp
and
xchg
ret
mov
fidivrs
aas
push
inc
loopne
xlat
addl
fcmovnbe
xorb
or
cli
lret
cld
inc
adc
xchg
sbb
sahf
cmp
icebp
inc
outsl
icebp
push
sarl
sub
push
push
pop
idivl
clc
push
std
aaa
ds
in
outsb
jle
jl
push
outsb
push
mulb
jne
lock
pop
dec
adcb
lods
inc
test
pop
push
pop
dec
mov
jle
mov
insb
xor
int3
cmp
leave
pop
ljmp
mov
push
imul
pop
mov
incb
sbb
cli
add
cmp
sub
push
sbb
adc
bound
lock
fstpt
ss
lods
push
sub
call
push
test
mov
mov
xchg
push
in
cmpsl
shr
sbb
mov
sub
sahf
imul
sbb
jmp
subl
jbe
mov
jno
lock
stc
inc
jecxz
addr16
out
and
je
sub
cli
dec
cmpl
dec
fwait
push
pop
call
push
and
in
das
inc
dec
icebp
in
mov
pop
adc
jae
incl
lret
dec
cwtl
ret
cltd
inc
xchg
mov
pop
enter
dec
fmull
add
sahf
adc
xor
aad
shrb
mov
push
mov
cwtl
mov
or
pusha
nop
mov
add
out
lock
xchg
imul
das
adc
je
cld
pop
sbb
daa
mov
cmp
xchg
out
fsubrs
cmp
popa
fwait
ljmp
out
clc
int3
or
or
clc
mov
and
or
pop
arpl
scas
shrl
inc
cmp
adc
xchg
pop
push
pop
inc
test
mov
cmp
push
jecxz
data16
add
rcr
fsincos
xchg
push
xchg
mov
popa
cmp
dec
cld
or
push
mov
xor
add
popf
xchg
ret
jmp
dec
pop
jnp
leave
pop
movhps
dec
jmp
pop
pop
scas
inc
push
push
pusha
out
addr16
enter
xchg
inc
and
leave
fwait
pop
jg
or
scas
negb
sbb
xchg
mov
mov
and
stos
lods
ss
cld
repnz
fcoml
nop
hlt
xor
dec
fldcw
xchg
inc
pushf
or
ja
call
fisttpll
jae
aad
pop
cltd
test
fbld
add
test
scas
stos
jmp
cmpsl
test
mov
rcll
pop
dec
lods
mov
xor
ss
mov
mov
fsubrs
setb
sub
jb
cmp
or
jbe
cli
ret
out
push
loope
fmuls
into
add
insb
xor
pushf
pop
jno,pt
sti
xchg
cmc
pop
dec
js
add
jl
aam
sub
repz
movsb
jo
jmp
jle
push
out
add
jmp
and
pop
pop
test
mov
push
pusha
fldenv
inc
cmp
ret
loopne
cmc
push
cmp
test
jl
mov
xchg
cmp
dec
jno
mov
dec
not
adc
push
test
in
insl
cmp
sub
sbb
pop
rep
cmpsl
jbe
outsb
js
repnz
pushf
or
inc
aaa
sbb
inc
push
loopne
xchg
dec
mov
aaa
push
jae
mov
jge
lods
inc
ljmp
ss
mov
fstl
sahf
dec
dec
or
aam
xchg
push
mov
idivl
jmp
jmp
push
xchg
lods
in
loop
icebp
pop
mov
adc
sbb
mov
sub
repnz
xchg
mov
fsubl
jecxz
cmpsl
in
inc
lods
hlt
iret
fsubrs
add
mov
push
enter
fstpl
imul
movsl
xchg
imul
int3
sub
sti
ja
ficomps
mov
stos
sub
push
or
outsb
add
cmc
add
push
leave
shlb
rclb
out
and
jecxz
fwait
shr
xchg
mov
add
filds
aad
mov
inc
rolb
dec
inc
pop
push
std
adc
add
adc
pop
clc
jecxz
inc
mov
icebp
sarl
dec
mov
dec
stos
adc
adc
mov
pop
cmp
imul
pop
add
lret
les
shlb
sbb
lret
xchg
popa
jnp
mov
push
inc
inc
sbb
push
mov
sahf
jne
inc
pop
cmp
xor
push
roll
or
push
sar
mov
cmc
bound
std
mov
add
dec
or
insl
push
and
in
stos
cmp
xor
mov
sbb
outsb
inc
mov
icebp
out
pushl
sub
xchg
repz
push
test
mov
cmpl
mov
ja
pusha
rcrb
scas
hlt
ljmp
jb
loopne
mov
sub
or
addr16
scas
xor
jns
xchg
dec
dec
inc
sub
call
sbb
mov
stos
imulb
or
add
pop
imul
dec
mov
clc
movsb
jmp
call
repnz
dec
test
insl
push
lods
ret
test
adc
fs
push
adc
jecxz
test
test
sbb
mov
xchg
imul
mov
pushf
mov
out
add
je
add
dec
add
movsl
jge
std
pop
mov
sbb
pop
repz
mov
push
out
iret
jge
ret
mov
popf
nop
inc
out
mov
push
test
pop
jnp
gs
ljmp
pusha
mov
pop
scas
clc
insb
insl
adc
mov
sbb
pop
or
sbb
fwait
insl
js
lds
jmp
out
insl
push
inc
repz
and
cmp
push
sbb
add
adc
mov
inc
xchg
es
push
pop
and
push
popa
loop
stos
fisubl
xchg
lds
add
retw
dec
jl
xchg
sbb
push
insl
out
adc
inc
sbb
lods
xor
pop
push
jecxz
mov
loope
sbb
ret
inc
sbb
icebp
mov
out
push
loopne
inc
int3
cmpsl
xchg
and
imul
xor
out
and
lret
arpl
add
ljmp
xor
mov
std
test
cli
or
push
xor
pusha
test
mov
repnz
dec
mov
mov
fwait
xor
fxch
rorl
sbb
shrl
ss
addr16
dec
mov
jb
imul
pop
cmp
je
jle
test
inc
gs
sbb
outsb
out
cmpb
decl
outsb
or
or
xor
mov
in
dec
testl
lock
test
and
es
addr16
fcmovbe
xor
sub
push
ret
xor
jb
push
inc
mov
stos
xchg
aad
pop
sub
xchg
data16
mov
adc
push
xchg
insl
cmp
cmc
xor
das
aaa
pop
sub
add
cmpsl
fwait
mov
fs
or
xor
cmc
pop
in
jp
inc
mov
cmp
jnp
rcll
mov
ja
inc
sub
ret
adc
cmpsl
and
jae
std
mov
inc
push
dec
insl
adc
out
push
push
adc
iret
jbe
mov
xlat
test
loopne
fsts
push
and
mov
jecxz
dec
mov
push
into
sti
and
fwait
sbb
or
test
mov
mov
clc
lods
add
cmp
call
add
or
sub
ret
xchg
mov
out
cmpsl
mov
aad
jns
sub
jns
jb
cwtl
loop
scas
mov
push
mov
lds
pop
addr16
add
and
mov
and
rcr
fldt
mov
into
adc
inc
mov
movsb
ljmp
dec
mov
or
pop
ret
cmc
inc
push
test
push
les
out
sub
pop
loope
jo
arpl
sub
xor
push
push
lods
stos
leave
test
lods
outsl
es
lea
fbld
sti
lods
popf
test
lcall
mov
ret
jg
in
or
mov
ror
mov
jb
rorb
cmp
fsubrs
mov
notb
push
mov
mov
mov
in
sti
mov
cmpsl
mov
mov
mov
xor
sbb
add
fsubs
mov
and
insl
mov
repz
sub
or
in
add
jne
in
in
std
lods
or
shlb
test
and
jmp
push
adc
push
mov
jb
sbb
xchg
push
sahf
roll
insb
inc
lcall
bound
mov
dec
inc
xor
push
inc
mov
pop
into
dec
and
pusha
popa
pop
mov
push
lcall
mov
pop
out
icebp
or
aam
cmp
lret
in
sbb
popa
imul
fsubs
pop
jns
push
cmp
es
sub
mov
pop
xor
stos
add
insb
popf
jnp
das
lods
mov
adc
inc
cmp
mov
ljmp
xchg
jns
xchg
inc
into
loopne
xor
cmp
in
repnz
xchg
ret
mov
mov
jnp
imul
test
mov
jns
and
mov
lods
rcrb
xor
xor
xchg
dec
xorl
or
sbbl
xchg
sbb
xchg
sbb
cmp
test
cmp
jbe
push
nop
sub
and
test
jno
cmp
icebp
and
mov
pushl
xlat
rdmsr
pop
shlb
add
pop
cmc
in
lahf
test
out
jns
cmp
push
and
es
stos
gs
test
push
sub
in
pushf
mov
pop
sub
sub
dec
lret
addb
adc
or
fists
push
add
sti
jbe
adc
fsts
cmp
push
lods
push
or
mov
pusha
aam
icebp
mov
add
inc
mov
test
and
cmp
or
out
test
popf
or
fcmovu
push
dec
mov
and
subl
jb
pop
into
aam
lahf
or
fisttpl
inc
xor
dec
mov
stos
jmp
pop
add
inc
mov
aad
aaa
pop
sub
dec
data16
xchg
js,pn
dec
fcoml
xor
sbb
cmpb
dec
enter
fistpl
mov
mov
out
nop
dec
repz
lahf
iret
out
fstps
push
lret
sbb
shl
arpl
xchg
jbe
adc
fists
stos
rcrb
subb
sub
mov
rcll
inc
sbb
sub
std
fld
loop
inc
and
ja
pop
mov
sub
add
int3
xchg
cmp
cs
ss
sub
jnp
sbb
push
jge
sti
aas
stc
icebp
popf
lcall
xchg
jbe
xchg
and
imul
dec
insl
xor
or
fiaddl
cld
and
gs
inc
sub
add
fwait
stos
stc
fsubs
adc
mov
pop
inc
and
insb
xor
adc
jb
adc
push
clc
jno
pop
lea
insb
pop
shll
fs
pop
mov
lods
push
lods
mov
shrb
cwtl
mov
idivl
fisubs
fstps
xor
sarb
add
out
xchg
pusha
cmp
icebp
push
inc
pusha
push
scas
pop
add
fsubl
sbb
test
mov
sub
mov
and
scas
divb
sbb
test
jno
jb
stos
repz
das
repz
ss
mov
dec
mov
jecxz
mov
lea
ljmp
sbb
mov
rorb
loope
mov
insb
int3
std
lahf
std
repnz
stos
jb
jo
loope
mov
ljmp
jo
ja
inc
movsb
test
out
add
jnp
mov
dec
jno
mov
jnp
or
sub
fwait
and
xchg
mov
rclb
lods
dec
out
and
mov
pop
in
popa
insb
and
sub
cmp
and
xor
or
popa
fcmovne
mov
xor
pop
cli
xchg
sub
pop
out
mov
ffree
jae
mov
adc
out
mov
adc
jecxz
pop
std
aas
pop
cmp
mov
mov
inc
int3
test
fisubl
popf
pop
test
roll
mov
mov
popa
subps
sbb
sbb
xor
je
stos
pop
inc
adc
push
mov
push
push
lods
push
xor
mov
icebp
sub
xor
loop
push
inc
push
test
push
lock
movsl
jmp
mov
in
dec
sub
clc
push
mov
addr16
xor
adc
lods
xchg
cwtl
pop
inc
fiadds
add
hlt
jge
imul
ss
add
dec
shlb
fcmovnu
enter
push
jl
fisubl
add
gs
out
stc
adc
or
mov
mov
sahf
rolb
xchg
or
movsl
jae
pop
test
xor
xchg
adc
push
xchg
mov
or
jnp
das
iret
rclb
sbb
mov
arpl
sub
int3
adc
push
jo
mov
jnp
frstor
push
imul
loopne
mov
addr16
adc
in
dec
adc
repnz
inc
push
inc
pop
pop
cmp
lret
ljmp
mov
fucomp
sbb
iret
decb
mov
and
js
in
pop
popf
negb
jecxz
jle
add
jo
cmp
jns
hlt
lods
jo
sbb
mov
dec
mov
mov
sbb
push
push
dec
push
jge
es
stos
xor
pop
ret
inc
divl
jne
jg
lret
out
mov
imul
xor
inc
scas
in
adc
or
sub
in
aam
jle
sbb
lcall
jmp
stc
lret
push
in
and
dec
cli
sbb
imul
or
adc
icebp
sbb
hlt
mov
das
push
fs
sbbb
jne
out
cmp
fstl
fstpt
cmpsl
fsubrl
pop
add
pop
or
aam
into
stos
push
cld
adc
jge
orb
jl
cltd
inc
adc
push
repz
xchg
out
pop
fmull
cmp
stos
mov
dec
and
enter
test
adc
xchg
adcl
inc
enter
out
int3
fildll
sub
sbb
push
xchg
jmp
push
data16
pushf
push
test
mov
xchg
test
in
inc
or
arpl
mov
leave
sub
out
shll
int
push
fnstsw
push
push
pop
icebp
inc
rclb
inc
sbb
and
fcmovnu
lret
mov
add
xchg
repnz
gs
or
repnz
dec
cmpsb
sub
aas
push
cmpsb
adc
push
loop
in
push
pop
dec
mov
inc
push
mov
xor
dec
mov
mov
mov
dec
pop
jmp
push
callw
pop
aas
pop
gs
test
add
push
psrlw
adc
testb
gs
or
push
scas
adc
jno
xchg
enter
int3
and
xchg
push
sti
xchg
fcmovbe
mov
jno
xchg
aaa
add
jecxz
pop
fstpl
push
into
ss
cmp
and
sbb
mov
jle
inc
xor
dec
pop
adc
mov
dec
adc
out
sbb
shlb
movsl
push
or
rcr
pusha
mov
sbb
push
push
leave
cld
mov
cmp
lods
jb
pop
aaa
popf
sbb
pop
imul
pop
push
movsl
sub
loopne
xchg
xchg
pop
sub
cmpsb
stos
lea
sti
adc
data16
pushf
xor
addb
and
sahf
jbe
mov
push
cmp
arpl
les
fwait
xor
mov
dec
pop
jmp
xchg
and
add
mov
lcall
or
ret
and
bound
adc
roll
push
ja
mov
aas
pushf
jecxz
lds
dec
sub
cwtl
jmp
fldl
lcall
sbb
es
adc
mov
adc
pop
pusha
lds
add
imul
rorl
xor
jae
xor
xchg
je
test
lcall
cmp
lret
xor
or
inc
mov
dec
push
sbb
icebp
stc
ljmp
pushf
testl
lret
mov
push
jmp
or
icebp
in
pop
jbe
sub
cmp
fisttps
mov
mov
or
xor
cmp
jae
cld
cmpsb
pop
clc
push
mov
pop
and
xabort
push
movntps
sbb
outsl
adc
hlt
lock
mov
adc
mov
pop
out
inc
jg
mov
repnz
and
aam
ret
cmp
mov
movb
stc
cmc
mov
lea
xchg
mov
dec
and
fwait
adc
stos
xor
aas
jle
fldenv
lods
adc
add
shrb
cltd
popf
jp
sti
insl
or
ja,pn
rolb
mov
mov
sti
cwtl
and
cs
jmp
mov
int
in
popf
sub
adcl
mov
leave
mov
dec
mov
jl
shrl
push
mov
push
jae
shlb
insl
cmp
testl
cli
or
cli
lds
int3
adc
sub
inc
jp
jmp
nop
mov
pop
xchg
repz
movlhps
shrb
lret
jl
adc
dec
lds
ds
lds
mov
std
and
pushf
xchg
sbb
inc
mov
repnz
shll
imul
dec
andl
and
popa
aam
arpl
lea
add
fwait
mov
movsb
or
mov
pop
cwtl
xor
lea
mov
in
cmp
pop
jg
jno
mov
mov
jmp
movsb
aad
mov
stos
xor
sbb
or
gs
xchg
rclb
adc
daa
inc
adc
and
orb
int3
and
shll
inc
push
dec
addr16
xlat
dec
mov
or
inc
dec
ror
pop
es
xchg
in
stos
lods
cli
movsl
pop
push
and
dec
out
push
xor
mov
jae
inc
mov
repz
andl
inc
dec
push
dec
fisubrs
pop
inc
in
or
adc
daa
insl
mov
lods
push
fldt
pusha
pop
gs
fcoml
xchg
stc
scas
dec
out
push
test
clc
loopne
cmpsb
cmp
bound
sbb
mov
mov
add
jle
fcomp
xlat
gs
sbbb
mov
lds
lcall
pusha
mov
jne
loop
xlat
sbb
mov
dec
mov
call
enter
sub
and
popf
bnd
icebp
push
xor
add
insl
xchg
push
mov
outsl
sahf
insl
movsb
push
outsl
or
mov
repnz
and
shrb
loope
mov
xchg
arpl
adc
xchg
shl
iret
xchg
pop
ficompl
dec
lods
mov
jmp
sahf
and
xchg
and
sarl
mov
scas
dec
cmp
in
push
sti
jns
js
cs
sbb
pop
jb
xchg
xchg
int
leave
mov
push
cmp
sbb
in
mov
sub
cmpsb
lods
or
scas
das
pop
xor
jg
mov
sub
pop
gs
push
jno
push
add
dec
inc
sbbb
pop
repnz
das
and
std
sbb
addr16
xor
aaa
cmp
sub
add
xlat
js
ds
xchg
cmp
adc
data16
test
lret
ret
dec
inc
gs
jg
inc
lds
data16
mov
and
xor
push
cmp
cmp
pop
loope
leavew
es
adc
mov
mov
add
nop
push
lea
das
scas
pop
addr16
fistps
sbb
add
or
int3
xorb
sbb
mov
popf
sbb
pop
cmp
push
es
lods
int
sub
pop
cmp
push
stc
jg
add
push
pop
shrb
leave
sub
xchg
sahf
inc
lret
lret
mov
addr16
dec
dec
push
jl,pt
inc
mov
and
std
sub
adc
sub
ss
sbb
loop
or
or
sbb
lods
dec
mov
xlat
jns
mov
cld
adc
out
cltd
jno
inc
cmpsb
mov
mov
fisttpl
call
adc
in
cld
clc
lods
sti
lods
jnp
sub
pop
push
cltd
mov
mov
sbb
xor
pop
test
add
loope
push
sub
rcl
mov
mov
cmp
mov
stos
hlt
stc
sub
jmp
push
mov
sub
mov
mov
adcb
xchg
cli
adcl
adc
test
notb
pop
xchg
cmp
push
xor
sbb
cmp
cmp
popf
ljmp
mov
imul
cmpsb
mov
jg
push
ljmp
mov
mov
push
sub
xchg
test
cld
pop
jg
leave
shll
inc
aas
dec
jp
add
add
scas
fbstp
lret
mov
bound
jnp
add
aaa
xchg
inc
std
sbb
mov
cmp
push
pop
or
inc
pop
addr16
inc
push
xchg
gs
pop
mov
fstl
imul
or
push
xchg
aas
inc
xchg
and
aaa
sbb
test
inc
mov
add
mov
mov
in
inc
dec
test
in
les
imul
loopne
lea
cmpsl
push
sbb
xor
sti
or
xchg
dec
daa
inc
lret
xchg
inc
arpl
add
sub
lahf
dec
push
push
loope
adc
inc
and
pop
mov
mov
popa
inc
and
sub
sbb
push
xchg
loope
xchg
xor
mov
jo
push
sbb
gs
pop
mov
lds
and
lock
test
sub
out
pushf
push
add
mov
cmc
scas
mov
or
popl
pop
insl
inc
mov
xchg
cmp
push
ffreep
jmp
pop
jmp
push
dec
lea
push
mov
or
cmp
mov
sub
andl
loopne
outsb
mov
sub
fnstsw
mov
imul
sub
xor
movsb
push
push
fsubrl
and
add
jmp
popf
arpl
sahf
add
cmp
dec
fsubrs
adc
add
sbb
xchg
in
push
adc
inc
bound
cs
aad
arpl
pop
adc
lods
sub
push
subl
add
pushf
sbb
adcb
arpl
pop
std
mov
mov
jge
iret
push
pusha
stc
xor
inc
and
in
add
sub
das
and
out
les
mov
imul
stc
jo
sub
xchg
dec
lods
cmpsl
or
and
sbb
jmp
inc
mov
daa
in
int
pop
mov
xor
inc
loopne
xor
sub
xchg
sub
bswap
push
popa
mov
repnz
les
cmp
mov
lret
pushf
in
test
lmsw
std
push
add
faddl
stc
leave
xor
mov
mov
mov
inc
mov
lcall
inc
iret
jl
push
sbb
sahf
aaa
lock
or
push
ja
mov
add
mov
inc
adc
scas
in
jno
pop
or
cmp
inc
xchg
cmpb
mov
mov
xchg
insl
cmp
lahf
inc
pop
pop
push
ret
inc
mov
jo
js
jl
add
mov
sbb
dec
mov
sub
fsub
mov
sbb
jo
ja
imul
out
sbb
daa
jb
iret
dec
mov
cmc
fildl
testb
adc
cli
into
adc
mov
add
scas
in
fstps
push
jae
xchg
mov
push
and
test
gs
jno
in
dec
sbb
adc
test
fimull
jmp
jbe
mov
stos
adc
iret
imul
xchg
cmp
xchg
and
inc
cmpsl
jmp
fimull
jae
shll
lahf
pop
dec
mov
gs
test
mov
xlat
sub
pop
xchg
pop
shl
dec
jge
or
mov
sub
adc
arpl
and
pusha
rcrb
loop
pushl
rorb
fldcw
jae
sub
dec
push
xchg
shlb
rcll
enter
mov
pop
cld
fs
leave
inc
sbb
mov
imul
test
dec
mov
shrb
aad
dec
pop
push
mov
inc
in
cmpb
xchg
inc
cmpsb
es
mov
push
popf
fnstenv
and
add
push
jg
xor
mov
cld
push
or
ret
push
js
stos
hlt
adc
fdivp
pop
fimull
xor
mov
addr16
outsb
add
test
inc
xor
or
test
or
inc
inc
aam
lret
bound
andb
pop
mov
add
daa
inc
lahf
lds
xor
stos
push
mov
int3
mov
xlat
pop
popf
mov
pop
pushf
xor
mov
fnsave
or
or
jge
push
fisubrl
xchg
jle
lret
out
xchg
or
loop
jl
add
mov
and
mov
aaa
jle
sbb
push
fwait
mov
loop
add
lea
jnp
repz
cmp
fisubl
adc
jle
in
and
mov
mov
xlat
lahf
push
insb
lods
bound
loope
js
movsl
call
cmp
cmp
loopne
xor
xchg
lret
mov
xor
cli
lods
sub
inc
ficompl
cli
cmpsb
adc
fwait
pop
jg
jno
push
imul
and
lods
outsb
fdivrl
lods
fdiv
fistpll
sub
bound
dec
ret
hlt
call
cmc
push
dec
xlat
lock
push
out
aaa
mov
cmp
gs
mov
dec
clc
loope
pusha
sub
sti
loop
cmp
inc
mov
loope
or
sub
sub
jae
imul
test
movsl
dec
cmp
sbb
xchg
cmpsl
xchg
add
insl
cmp
push
les
mov
cltd
add
add
sbb
jecxz
or
popa
xorb
sbb
push
rorb
ljmp
inc
dec
add
push
es
aad
test
stos
lret
out
les
es
stc
mov
repz
in
aas
mov
repz
mov
enter
cmc
pop
popa
inc
and
dec
fisttps
roll
dec
jb
xorl
idivl
out
xor
andb
scas
xor
jmp
pop
xchg
jmp
rcll
sbb
pop
sbb
mov
xchg
mov
test
jle
pop
rclb
dec
fcomps
xchg
push
je
and
bound
in
adc
push
sub
xor
jnp
icebp
pop
or
nop
push
jecxz
ret
add
xor
mov
shl
fidivrs
clc
in
jge
mov
adc
mov
mov
test
lahf
sub
fistl
ja
shrb
out
jne
sbb
push
inc
cmp
aaa
rorl
pusha
leave
push
scas
ror
fldt
push
push
pop
mov
lcall
ret
or
inc
popa
adc
mov
mov
and
xlat
test
pop
push
int
pop
cs
dec
fdivrl
dec
xor
cmc
int
add
cltd
and
xchg
xchg
pusha
out
cld
sti
adc
and
mov
sub
cmp
mov
mov
je
hlt
adc
xchg
sarl
sub
add
dec
adc
dec
xchg
cmp
test
notb
jge
or
repnz
test
inc
push
scas
inc
test
cmc
test
cmc
pushf
add
in
nop
jno
push
rcll
add
sbbb
jbe
gs
popa
and
ljmp
mov
fcomp
and
or
mov
sbb
xchg
push
lods
add
lahf
pop
pop
data16
out
sarb
xorl
xor
loop
cwtl
add
ljmp
out
into
pushf
out
dec
aas
inc
xchg
sbb
and
out
shl
fdiv
add
int3
nop
cmp
out
mov
jns
std
gs
sbb
popa
push
or
mov
or
insb
fmuls
adc
sbb
es
fidivl
cld
jecxz
adc
js
xchg
jns
pop
dec
sbb
pushf
fwait
push
lea
push
fisubs
sub
mov
stos
cld
and
mov
sub
cs
sar
fnstcw
cltd
icebp
xchg
lock
out
cltd
cli
ret
adc
and
or
sti
xor
pop
fs
sahf
je
mov
xchg
xchg
jp
jle
out
pop
adc
and
mov
out
jb
cmp
lret
xchg
imul
mov
in
inc
in
rorl
lods
mov
add
cmp
ljmp
cld
ret
cmp
repnz
mov
mov
divb
mov
cld
les
inc
or
inc
pop
fnstenv
xchg
outsb
cmp
imulb
inc
adc
sarl
adc
mov
jmp
mov
pop
push
mov
or
dec
nop
add
and
pop
outsb
int3
rorb
sbbl
orl
mov
ja
xchg
mov
scas
xor
sub
test
jmp
popa
int3
negb
enter
cld
mov
dec
int
jb
enter
into
imull
std
int
lret
addr16
push
or
sahf
mov
jb
int3
fstpl
add
jbe
ss
xchg
push
pop
mov
lea
loopne
cmpsl
rcr
push
inc
dec
es
int
mov
dec
int
mov
pop
mov
sbb
lods
xchg
sahf
adc
addl
sub
mov
inc
pop
and
incl
test
push
scas
push
fcomps
jbe
lds
inc
cwtl
jl
or
xor
in
push
daa
pop
jb
aaa
insb
xchg
icebp
popf
inc
outsb
sbb
sbb
or
lret
sbb
in
loope
adc
stos
pop
dec
icebp
push
lcall
mov
mov
cltd
adc
mov
pop
pop
dec
inc
mov
in
cmpsb
cmpsl
dec
test
inc
sub
roll
popf
pop
shlb
pushl
mov
ffreep
pushf
into
mov
jp
imull
pushf
addb
stc
xchg
ret
dec
aas
cmpsb
jne
cmp
mov
inc
ja
push
xor
mov
bound
test
leave
rorl
add
dec
xchg
mov
cmp
insl
out
sub
and
jbe
xor
or
mov
mov
mov
adc
addr16
sti
xor
ds
adc
iret
shll
fimull
bound
add
ficompl
mov
mov
mov
pusha
cmp
sub
mov
std
add
cmpl
test
rcr
cld
je
lcall
and
sbb
sub
lahf
pop
inc
cmpsb
dec
add
cmpsb
mov
in
nop
testb
mov
mov
add
push
and
mov
aas
add
mov
loop
test
or
push
and
mov
pushf
lcall
aas
adc
data16
jo
add
and
pop
adc
xchg
gs
xor
add
lock
xlat
dec
pop
or
cmp
pop
nop
cmc
loopne
add
jge
cwtl
push
dec
jecxz
scas
lods
pusha
add
mov
pop
dec
lahf
fwait
std
filds
pop
inc
inc
inc
mov
lock
stos
lret
fildll
mov
push
hlt
aad
pop
mov
sbb
inc
incb
aas
xor
leave
pop
in
icebp
icebp
mov
sbb
xor
fmuls
orl
push
das
sub
cmpsl
in
jg
popa
xor
xchg
stos
jb
inc
jle
aaa
push
sbb
push
push
inc
mov
mov
pop
lahf
out
mov
mov
jo
cltd
icebp
lods
cmpsb
mov
lahf
push
adc
addr16
ret
fimull
pop
push
loope
push
jns
loopne
insb
mov
push
aad
std
test
in
hlt
cs
adcl
sti
lcall
mov
insl
sbb
scas
sti
in
imull
pop
push
test
pop
arpl
lahf
test
adc
sbb
divl
push
pop
push
fcmovu
std
repnz
loope
inc
mov
cli
pop
clc
out
push
mov
and
push
xchg
divb
cmp
mov
mov
mov
dec
ja
push
cmpb
inc
testl
movsl
jg
insb
and
lret
insl
sub
cmc
leave
int
push
jns
dec
mov
icebp
int3
mov
daa
decb
inc
pop
push
cli
mov
test
sub
stos
or
and
in
add
addb
out
wrmsr
outsl
pop
es
dec
pop
sub
push
mov
popf
pop
xchg
adc
and
out
or
pop
jp
mov
mov
mov
mov
gs
aaa
adc
int
mov
out
inc
xchg
repz
out
pop
aaa
dec
and
push
fldt
lsl
int3
xchg
jle
sbb
jae
gs
inc
dec
xchg
bsf
stos
adcb
and
movsb
mov
scas
mov
outsb
cmp
xchg
cmpsb
lret
popa
xlat
adc
inc
cli
push
imul
notl
mov
insb
pop
dec
out
adc
dec
lods
xor
jmp
mov
fcmovbe
int
lret
out
movsl
movsb
lods
cmp
lret
fsubl
nop
xchg
jb
out
mov
dec
in
mov
xor
mov
not
test
es
and
push
rolb
sbb
jl,pt
cmp
pop
inc
clc
push
xchg
jl
sar
lret
mov
pusha
inc
lret
push
int3
dec
sar
adc
dec
je
or
ret
cmpsb
pop
sahf
mov
stos
xchg
lea
jns
rcll
je
repnz
inc
sub
mov
push
jle
popa
int3
outsl
inc
lods
push
jns
jle
ret
inc
xlat
pop
addl
test
jmp
pop
jae
mov
and
lea
in
cmc
sti
pop
shl
lcall
xorl
xlat
pop
cld
mov
scas
or
xchg
arpl
pop
sbb
pop
ds
rolb
sbb
xlat
lock
dec
gs
fs
dec
stos
inc
cmc
scas
jmp
xchg
inc
adc
pushf
std
and
cmc
cmpsb
push
jle
jge
inc
add
jbe
lret
in
inc
scas
adcl
out
stos
mov
mov
mov
fcomps
in
cvtdq2ps
divb
cmpsb
fstps
mov
ss
pop
jp
popa
insl
sub
jg
and
cwtl
xlat
dec
mov
and
mov
or
adc
mov
cvtps2pi
mov
push
mov
xor
add
insb
pop
repz
out
xor
cmc
add
cli
and
cs
mov
sub
adc
leave
mov
in
test
enter
jmp
jmp
out
in
add
out
jp
iret
popf
add
notb
push
repnz
xor
mov
push
xchg
push
xor
mov
pushf
lods
xchg
lods
outsl
jle
dec
inc
popf
push
imul
cmpsl
pusha
mov
subl
pop
cmpsl
pop
or
lea
call
mov
sbb
ss
or
cmp
sub
orb
jno
cltd
popa
roll
pop
mov
cltd
pop
out
mov
loop
xchg
xchg
mov
dec
ds
cltd
inc
mov
in
lcall
push
outsb
push
out
mov
dec
aaa
in
jecxz
repz
sub
add
scas
aaa
std
jb
inc
repnz
dec
cmp
mov
sub
adc
test
popf
cmpb
dec
mov
int3
leave
mov
lcall
dec
fcompl
sub
xchg
ja
xlat
sbb
push
mulb
inc
xchg
es
cmpsl
pop
lods
sub
adc
push
xor
movsb
push
pop
mov
and
rcll
push
mov
das
fisubrl
xchg
outsb
jns
inc
pop
xchg
inc
lds
scas
mov
or
pushf
cmp
ds
dec
push
shll
add
push
andl
adc
in
add
cs
cmp
xchg
xchg
and
mov
jmp
std
je
sub
lods
pop
icebp
pop
mov
mov
clc
xor
or
lods
cmp
cmc
sahf
mov
outsl
jne
xor
mov
test
popa
bound
pop
lea
shl
fnstenv
mov
xchg
mov
xchg
and
dec
stc
push
mov
dec
sbb
or
insb
and
rclb
data16
cmp
ja
stos
ret
sbbb
fcompl
pop
testl
cmc
and
inc
test
in
js
mov
mov
sbb
hlt
in
xor
into
shll
mov
lcall
std
xor
fcomps
mov
mov
jo
in
mov
data16
sbb
push
test
jb
adc
inc
inc
cmpsl
cmp
sti
stc
push
jp
ja
loop
jge
push
adc
lret
add
movsl
faddl
mov
int3
inc
sbb
sub
fcmovu
cwtl
arpl
popl
cmp
sub
adc
mov
cld
mov
mov
lods
mov
push
test
cmpsb
aaa
cmpb
shll
inc
mov
cwtl
jge
jbe
inc
cmp
lahf
ficoms
push
int3
loopne
cmc
lods
shl
push
std
test
and
push
pop
mov
pop
cmpsb
inc
filds
push
push
mov
les
adc
pop
daa
loopne
pop
movhps
pusha
aad
xchg
pop
shll
mov
push
cli
sti
je
mov
jl
push
les
std
popa
sbb
shrl
outsl
xchg
push
or
jl
xor
jae
lods
mov
xchg
add
cmpsl
add
and
cld
shll
movsb
push
xor
sbb
ja
cmp
add
push
aaa
shrl
movsl
push
rorb
fadds
or
pop
lods
pop
xchg
mov
push
lock
inc
daa
imull
cmp
xlat
xor
cmpsl
jo
and
insl
xlat
push
arpl
rorb
jb
xor
mov
dec
push
and
std
popa
out
mov
mov
mov
mov
push
jb
js
lock
sahf
add
sbb
xor
sub
fucomi
cmp
adc
push
jne
push
xor
das
dec
daa
aam
xchg
lret
dec
shlb
sub
mov
imull
rorb
lds
push
repnz
sbb
call
xchg
cmp
lret
adcl
inc
mov
lock
aad
dec
jae,pt
pop
push
xorl
mov
push
das
xor
imul
jns
jnp
jno
cli
push
repnz
jns
and
ljmp
addl
xor
xor
xlat
ffree
adc
adc
jl
insb
pusha
sbb
stos
sbb
sub
adc
stc
add
data16
cmp
lock
popf
aas
shll
inc
push
pop
mov
popa
and
mov
sub
fs
popa
push
dec
inc
jl
fiadds
in
loope
or
faddl
mov
stos
mov
mov
fisttpl
inc
loope
fdivl
jnp
imul
pushf
js
push
lret
mov
insl
jnp
in
mov
mov
adc
adc
push
rcll
or
leave
lea
jne
ds
add
sbb
movsb
push
xchg
in
pop
fistps
pop
repz
xor
outsl
aad
push
sbb
test
add
nop
into
imul
mov
jns
call
in
xchg
std
mov
mov
fcoms
xor
inc
loope
stc
mov
xchg
pop
sbb
dec
and
imul
cmp
pslld
jmp
inc
outsl
pop
push
scas
sbb
movsb
and
pop
inc
test
mov
scas
mov
loopne
add
daa
inc
add
mov
fadds
rcll
or
push
lret
repnz
pushw
jnp
pusha
in
stos
mov
lret
mov
repz
rcll
mov
mov
seto
and
das
mov
add
in
sarl
aaa
and
xor
or
or
mov
jnp
jge
mov
sahf
rcl
out
cmp
xchg
aad
inc
and
out
sub
shll
pop
scas
outsb
popf
popf
inc
sub
movsb
pop
test
stc
andl
dec
dec
imul
mov
cmp
mov
movsl
xchg
shl
sub
aaa
cmpl
out
lock
fmull
imul
xchg
pop
push
mov
test
decl
lds
movsb
ds
lahf
mov
xchg
mov
xor
sbb
push
mov
push
mov
imul
rolb
or
mov
xor
or
push
push
mov
ret
das
out
addr16
dec
js
push
cmc
loop
pop
lcall
mov
jb
fadds
jae
pusha
mov
cmp
aad
flds
add
sub
filds
cld
mov
or
or
popa
push
xor
cli
cmpsb
push
mov
int3
pop
pop
xor
pusha
stos
sub
incb
push
add
scas
sbb
mov
mov
sub
sub
sbb
fisubs
ljmp
outsl
jno
test
xchg
sbb
pop
call
dec
imul
fisttps
das
mov
fiaddl
mov
push
mov
sub
std
and
pop
cmpsl
daa
fdivrl
sub
aad
outsl
ret
mov
dec
or
fildll
cs
mov
pop
xchg
imul
pop
pop
sbb
xchg
inc
inc
cwtl
cmpsb
bound
inc
mov
xor
inc
push
mov
cmpsb
cmp
jle
jecxz
loop
movsl
aad
xor
fcoms
mov
jne
cmp
adc
jl
dec
push
push
mov
test
movlps
jge
ds
enter
sub
mov
push
scas
sbb
mov
cs
int3
cmp
mov
nop
cwtl
in
adc
sub
fcom
jo
cld
pop
and
push
into
lods
pop
mov
mov
cmp
cmp
or
and
jne
fsubl
scas
mov
push
dec
mov
cmpsb
sti
mov
faddl
sub
idiv
call
aad
bound
cmpsb
movsb
cli
fistps
xchg
imul
repz
frstor
das
cmp
jnp
inc
jb
cmp
fiaddl
xor
ljmp
xchg
dec
loope
push
dec
repz
mov
push
test
jmp
jae
movsb
adc
sbb
movsl
idivl
mov
mov
adc
cmp
and
insb
daa
pusha
lods
mov
xchg
jbe
pop
mov
clc
dec
test
xchg
sarb
nop
cmp
das
cmp
fisubrl
mov
ficoml
lods
leave
pop
data16
push
push
jns
xchg
fisttpl
add
call
call
xchg
in
test
hlt
push
in
or
inc
inc
enter
bswap
je
mov
clc
mov
jns
pop
mov
outsb
sbb
insl
sbb
pop
je
jb
or
out
test
cmp
cs
sti
add
or
icebp
out
or
xchg
inc
mov
sbb
out
jle
xchg
sub
mov
and
pop
jge
add
aaa
ja,pt
mov
test
xor
int3
mov
xchg
add
rcl
pop
xchg
pop
orl
jl
aaa
mov
imul
fdiv
mov
pop
dec
icebp
ret
push
or
jo
jno
sbb
fs
fsubrs
lds
xchg
lcall
xor
ds
sub
sti
cmp
sub
clc
jge
hlt
into
pop
inc
pusha
aas
shrl
inc
push
jmp
sub
outsl
xor
movsb
ds
loope
inc
iret
jge
pusha
mov
pusha
popf
push
popa
push
adc
and
rcrl
sub
jns
jne
push
cmp
push
push
sbb
sahf
lret
int3
cwtl
repnz
idiv
mov
dec
pop
mov
push
insl
lods
pop
bound
pusha
xchg
jnp
inc
fwait
xchg
pop
scas
dec
insb
jnp
mov
loope
xor
inc
es
fdivrs
mov
jns
push
ss
mov
pop
sbb
push
int
nop
rorb
lods
outsb
mov
mov
adc
add
call
mov
sub
or
mov
inc
add
scas
hlt
mov
cmp
inc
movsb
inc
adc
jle
xchg
es
inc
push
fadds
fsub
ljmp
pop
xor
xchg
lahf
ficoml
iret
insl
mov
push
sub
or
lock
out
pusha
pop
dec
mov
push
cld
pop
cmp
lock
xchg
pop
out
test
lods
popf
jb
ret
adc
push
xor
and
fnstenv
jnp
jmp
push
sahf
jl
mov
es
mov
loope
and
inc
scas
sub
xor
lds
jmp
inc
mov
xlat
mov
imul
jb
xchg
jmp
inc
out
ficomps
addr16
scas
dec
mov
add
imul
cmp
mov
mov
shrl
xchg
pushl
fcomps
pop
push
pop
ljmp
movsb
lds
push
dec
loope
and
cmpb
insl
bound
jno
inc
incb
test
imul
sahf
cmp
adc
sub
in
leave
xor
mov
rol
sbb
pop
push
enter
cld
stos
dec
repnz
push
jo
cmp
movsb
cmpsb
inc
xor
pop
pop
mov
mov
cmc
sbb
mov
cmpsl
fnstcw
mov
ror
scas
adcl
fcomp
or
or
lret
rcr
shlb
pop
scas
insb
mov
aaa
sbb
cmp
adc
sahf
add
imul
adc
sbb
les
cli
ret
cmpsb
sub
pop
jbe
sahf
or
xor
sub
pop
test
repnz
cmp
mov
mov
outsb
outsb
gs
addr16
pushf
mov
iret
sbb
adc
push
and
mov
lret
loop
cmp
and
test
lods
in
mov
in
cmp
mov
xor
xchg
in
xchg
ret
enter
mov
cld
out
jg
into
adc
jo
mov
pop
jns
call
pop
add
add
mov
cmp
into
push
cs
add
xchg
sub
cld
in
adc
out
test
cmp
inc
push
fldt
dec
sbb
jge
pushf
jmp
movsl
mov
ret
test
xchg
aam
aam
inc
ss
js
aam
cs
push
lret
dec
xchg
inc
cmp
mov
cmp
insb
popf
hlt
push
loop
in
jbe
adc
das
pop
xor
xor
fiadds
rcrb
pop
mov
mov
jae
mov
adc
rcrb
inc
jecxz,pn
ret
adc
stos
lahf
notl
out
cmpsl
hlt
inc
fwait
imul
inc
mov
std
xor
mov
mov
sub
repnz
rorl
jno
pusha
pop
out
add
add
sbb
fidivrs
lahf
mov
in
std
call
mov
jge
cmp
or
cmpsl
or
cld
xchg
dec
or
inc
push
enter
ja
je
xlat
loope
mov
xlat
ret
xchg
lahf
popf
jae
mov
mov
es
xchg
test
mov
mov
arpl
sub
push
mov
data16
cmp
mov
jmp
popf
in
and
or
lods
adc
sarb
test
ja
popa
movsl
add
adc
mov
shrl
mov
adcb
and
and
and
int3
out
loope
and
test
aam
shl
pop
lods
aaa
inc
mov
inc
sbb
lret
jp
sbb
arpl
fcomip
movsb
adc
mov
call
pop
stos
rcll
mov
test
mov
add
mov
xlat
jb
mov
and
ljmp
outsl
in
push
int3
xchg
mov
daa
mov
sahf
mov
fistpl
test
in
cwtl
push
ret
rolb
and
sbb
sarb
dec
cmp
shlb
dec
cmc
cmpsl
mov
nop
movsb
cmc
mov
mov
jo
test
sub
lods
add
nop
mov
movhps
dec
push
testl
pop
pop
sub
jp
pop
notb
pop
pop
cs
mov
lds
xor
lea
movb
iret
push
mov
les
jb
pushf
mov
lahf
mov
ss
cmp
dec
int
fcmovnu
mov
cmp
inc
mov
cmpl
sub
cs
adc
jmp
movsl
push
pushf
mov
fs
adc
into
or
push
mov
pop
test
mov
shr
mov
es
or
repz
dec
jnp
xchg
pop
inc
mov
dec
notb
jnp
mov
push
iret
jb
pop
sbb
adc
add
out
pushf
das
aaa
iret
inc
cwtl
add
lds
add
popf
test
cs
addr16
stos
and
pushf
mov
pop
inc
gs
out
clc
loope
or
jl
push
scas
pop
push
push
sub
call
repnz
scas
lret
add
ret
sub
cmpsb
enter
icebp
icebp
rorl
pop
xor
jne
in
shrb
xchg
fiaddl
jbe
iret
mov
cli
pop
sbb
xlat
lds
or
xchg
gs
in
das
ret
xchg
lcall
pop
adc
push
iret
adc
aam
sub
push
arpl
sbb
sub
push
push
shll
xchg
push
lea
inc
sub
pop
sub
in
fsubrs
xor
imul
xchg
pop
scas
add
popa
pop
jae
mull
xchg
hlt
jle
cmp
lahf
sbb
test
and
das
pop
add
nop
xchg
sbb
test
shrl
push
jb
out
sub
cmp
in
and
xchg
idivl
pop
jae
sbb
das
jg
leave
std
dec
cmp
dec
negl
inc
push
shlb
jecxz
fcomip
fiaddl
sbb
call
cwtl
movsl
negl
js
stos
popa
mov
dec
inc
and
mov
fdivr
out
in
add
loopne
clc
nop
loope
in
pusha
loop
xor
lret
and
mov
pop
xchg
sub
mov
fsubrs
jp
outsb
imul
or
scas
inc
jae
imul
scas
and
pop
dec
jae
fildl
cmpl
xchg
ds
cmpsb
mov
test
idivl
or
incb
mov
loopne
xchg
jns
je
daa
aaa
lods
cli
insl
adc
dec
sub
jg
mov
sub
jbe
lcall
fcmovnb
sub
jb
shrb
sbb
sub
xor
push
arpl
flds
in
cmpsl
jb
aaa
sbb
out
fnstcw
jle
pop
sub
dec
jne
adc
bound
adc
orl
gs
pushf
aas
xchg
jne
ja
out
jne
xchg
into
inc
pop
xor
adc
sbbl
out
add
adc
fadds
or
out
out
clc
dec
movsl
lret
xor
mov
popa
sbb
add
shrl
and
mov
stos
ljmp
inc
xchg
sbb
jae
bound
xchg
test
lret
stos
lods
leave
in
push
fcomps
mov
sbb
xor
adc
mov
inc
mov
or
and
adc
push
imull
mov
jb
insb
cld
mov
mov
cli
stos
jb
jne
in
dec
test
adc
pop
std
dec
nop
lahf
mov
ljmp
xor
mov
jae
lea
push
insb
inc
mov
out
lcall
or
andb
inc
sub
not
loope
mov
cwtl
adc
push
sub
xchg
jmp
adc
add
dec
or
sub
stos
adc
scas
inc
sbb
adc
repnz
pop
pop
cwtl
mov
xchg
in
mov
je
int
stos
shll
push
fwait
je
iret
push
scas
in
adc
mov
xor
je
adc
popl
enter
nop
leave
add
aaa
cld
inc
outsb
popw
mov
clc
inc
cmc
rorb
aaa
imul
lcall
pushf
sarl
mov
leave
xchg
dec
clc
jl
sbb
jg
mov
iret
ljmp
sarb
adc
dec
sbb
repz
xor
loopne
les
push
jmp
add
aaa
mov
mov
data16
out
dec
push
mov
xchg
pop
mov
or
xchg
cmp
xchg
lcall
ja
add
pop
or
fistpl
push
mov
xchg
pop
fucom
subb
dec
pop
in
mov
dec
mov
hlt
pop
inc
and
xchg
pop
sub
les
xorb
sbb
les
pop
and
std
mov
fcompp
push
cmp
movl
mov
ds
xorb
outsl
fsts
nop
lret
aad
mov
jle
push
lcall
insb
xor
sbb
xchg
daa
movsb
xor
push
fsubr
inc
inc
jecxz
stos
inc
fnstcw
mov
dec
cli
sub
das
addr16
cmpsb
or
mov
add
pushf
ds
xchg
jmp
sbb
or
add
mov
leave
mov
dec
sub
sbb
sbb
popf
jno
add
xor
xor
jno
push
push
mov
sarl
adc
test
add
lret
ret
jge
jmp
mov
inc
dec
push
pop
jge
pop
outsl
iret
mov
ja
movsl
xor
mov
adc
test
inc
loopne
fdivs
push
pop
cltd
fidivrs
sti
in
xchg
adc
push
mov
out
sbb
popf
sahf
pop
pushf
cli
xchg
push
adc
mov
mov
pop
popa
or
or
pop
and
cmpsl
sti
idivl
imul
pop
lret
inc
loop
push
jl
mov
cmp
mov
aas
cltd
clc
cli
and
sub
shl
and
mov
into
mov
jns
ss
xchg
push
mov
lods
cli
aad
xor
fsub
sub
sbb
xor
sub
mov
sub
ret
ljmp
popa
push
xchg
ljmp
lret
inc
hlt
lea
push
mov
add
adc
std
gs
mov
insl
mulb
push
inc
jo
sbb
jl
iret
add
idivl
xchg
jmp
stc
xchg
test
pop
pop
xor
outsb
or
xchg
lock
and
jno
ror
in
daa
into
shll
xchg
imull
xchg
xlat
cmp
pop
fs
je
loop
pop
sub
mov
fidivrl
jne
movsl
inc
imul
shl
stc
or
pop
stos
cmp
xchg
insb
sbbb
outsl
or
loop
les
pop
popa
mov
out
fnstsw
into
out
sti
ljmp
je
push
jo
outsb
in
dec
int3
jnp
xchg
jns
int3
cli
fadd
push
pop
inc
push
dec
xor
push
rcrl
mov
xor
ss
mov
xor
dec
cmp
insb
lcall
stos
ret
inc
xlat
cmp
xor
dec
ljmp
xor
test
jbe
adc
imul
adc
or
pop
xor
jp
inc
jno
movsl
xor
cmp
pop
sub
insl
jb
xchg
mov
mov
je
xchg
mov
jo
mov
dec
fs
repnz
jge
mov
icebp
pop
jne
enter
mov
mov
shll
out
cmp
xchg
in
push
or
cmp
stc
jne
insb
mov
and
jmp
adc
jae
inc
lods
sahf
mov
fsubs
dec
dec
lods
arpl
jecxz
sti
rcrl
in
jl
pop
inc
sbb
cmpsl
jns
inc
int
xchg
xor
cmc
ret
pushf
gs
xchg
sbb
out
sub
or
aad
push
or
int
popa
and
fisubs
fdivr
lahf
in
int
fstpl
sbb
lods
or
push
ljmp
or
xchg
rcrl
inc
lret
int3
jmp
and
or
int
adc
mov
jle
mov
dec
aaa
mov
in
push
pop
test
inc
outsl
ffree
testl
mov
sbbl
dec
insb
js
xor
add
fbstp
or
inc
std
ficoml
xchg
dec
jnp
jl
ja
popa
inc
push
push
js
fldt
std
movsb
cs
xchg
sub
push
push
in
popa
cld
jne
mov
mov
nop
mov
sbb
hlt
and
addl
xchg
loope
lcall
push
inc
add
jb
mov
pop
lcall
cmc
sbb
add
inc
out
fistl
xchg
shll
or
mov
loopne
ja
nop
pop
clc
and
negb
xchg
adc
push
pop
orb
adc
ja
xor
ret
js
push
fnstenv
mov
rorl
and
mov
pop
pop
jb
xor
aaa
shll
ficoml
in
int3
dec
jnp
jp
xchg
push
mov
mov
hlt
jmp
mov
pop
mov
inc
xchg
add
cmpsb
movsb
push
int
iret
aam
xor
stos
cmp
scas
push
and
aas
xor
fs
jle
push
pop
notb
add
cmp
aam
pop
rorb
jp
ror
fidivl
addr16
inc
pop
subb
cmp
lret
xor
sbb
and
rcll
test
or
mov
lret
mov
add
rcr
fildll
cmpl
es
pop
ret
or
es
fwait
dec
dec
cmpsl
lret
adc
sub
aaa
iret
adc
jmp
scas
jl
xlat
sti
jp
hlt
add
push
popf
lods
dec
in
negl
sub
xchg
xchg
mov
add
dec
insb
push
or
testl
hlt
pop
ror
lea
add
cmp
ljmp
push
or
fsts
mov
aad
stos
stos
sub
jae
pop
sub
sub
lods
out
jo
imul
lret
cmp
xchg
mov
inc
adcb
xor
cld
pop
dec
jbe
pop
mov
mov
dec
adc
sbb
jne
scas
sub
test
in
xchg
mov
pushl
ror
inc
sbb
xchg
mov
ret
sub
dec
mov
jg
cmpsb
mov
fstpl
cwtl
and
das
mov
test
mov
fwait
jecxz
mov
sbb
mov
pop
adc
dec
adc
xchg
pop
pop
inc
ljmp
test
xchg
mov
adc
ret
scas
xchg
call
fildl
pushf
push
call
js
add
sub
sub
scas
cmp
popa
mov
xor
cmp
xchg
test
mov
aad
test
mov
and
xor
rcrl
cmp
shlb
xchg
das
mov
xchg
dec
sub
jmp
mov
lea
lret
lret
push
cmpl
pop
pop
inc
xchg
jl
jmp
das
pop
out
aad
pop
add
sbb
fwait
or
pusha
mov
jle
fmuls
adc
xchg
adc
mov
sub
bound
jb
gs
loop
lahf
ljmp
or
ss
test
rorl
xlat
cmp
lock
js
jp
add
push
shlb
pop
jae
cmp
dec
pop
pushf
fmuls
test
adcb
inc
mov
lds
and
notl
mov
add
cmpsl
xchg
mov
xor
push
imul
sub
call
imul
push
jp
fwait
mov
xchg
ror
jge
int3
test
push
push
out
push
pop
mov
xor
loopne
lcall
adc
pushf
mov
or
imulb
push
stc
push
mov
test
xchg
aam
arpl
xchg
lds
out
lods
xor
roll
and
popa
pop
xchg
mov
vmread
out
aas
mov
test
push
call
xchg
jmp
in
mov
movl
mov
arpl
fs
mov
in
loopne
js
mov
mov
jp
test
aas
mull
ja
jbe
xor
cmc
imul
call
imul
push
add
cmp
mov
outsb
ljmp
sbb
add
ds
nop
lods
add
in
mov
mov
jg
dec
repnz
push
mov
adc
shl
das
add
push
shlb
inc
pop
icebp
sbb
jge
lods
enter
test
push
pop
stos
mov
mov
and
iret
into
mov
sub
add
dec
out
test
gs
imul
xchg
insb
and
pop
data16
insl
test
inc
jge
sub
mov
cmp
das
rorb
fwait
mov
sti
cmc
call
arpl
daa
lahf
addr16
lods
add
out
jne
cmpb
mov
outsl
bound
inc
add
xchg
sahf
insb
fmuls
shlb
sarb
cmc
in
inc
and
sbb
fsubl
hlt
mov
mov
movsb
aad
jecxz
iret
fxam
inc
xchg
roll
push
and
pop
sub
cmp
ret
cmc
push
adc
cmp
sub
sahf
xchg
jg
mov
fwait
cli
push
rol
xchg
test
add
out
popl
fld
outsb
aam
jecxz
jp
add
lds
jecxz
add
shrb
sub
rcr
add
std
movb
pop
loop
dec
into
adc
mov
pusha
mov
outsb
in
adc
imul
fistpll
and
movsl
jle
jb
pop
popf
mov
push
dec
pop
or
icebp
jle
sarb
and
into
pop
sbbl
sub
enter
mov
int
xorl
dec
lods
inc
sub
out
jno
mov
es
shr
pop
mov
popf
add
out
or
push
outsl
dec
aas
lods
test
push
xor
push
mov
movsb
data16
mov
shlb
mov
mov
push
ret
out
fcompl
neg
mov
jns
scas
imul
stos
roll
push
xchg
into
sbb
mov
adc
inc
mov
out
pushf
jecxz
mov
or
mov
lahf
or
push
leave
push
ret
ret
int
or
adc
es
mov
bound
inc
imul
fidivl
and
js
clc
add
fdivl
dec
scas
data16
popf
mov
je
adc
mov
push
mov
jge
cwtl
imul
cmp
es
push
pop
sbb
sub
xor
mov
push
ljmp
cwtl
mov
xor
lods
sbb
or
in
adc
dec
sbb
adc
jmp
cld
stos
les
int3
mov
movl
sub
inc
jbe
and
bound
xor
icebp
inc
push
sub
into
pop
cmp
adc
pop
pop
repnz
and
mov
dec
or
xchg
int3
insb
int
lret
mov
shlb
int
mov
addr16
xchg
xchg
lcall
push
jbe
xchg
and
stos
xchg
fidivrl
xor
cmpsb
dec
jge
ss
fwait
jl
mov
int3
rcrl
dec
in
push
xor
pusha
jno
adc
cmpb
mov
out
inc
ret
adc
dec
mov
xchg
loop
adc
sarl
dec
imul
adc
nop
cwtl
repz
leave
and
sahf
int
sbb
mov
iret
jne
dec
mov
push
push
addr16
mov
mov
xchg
out
fs
in
jp
loop
add
mov
mov
adc
cmp
or
cmpsl
inc
inc
sahf
add
xor
imul
cmpb
gs
cmpsb
mov
inc
mov
and
push
lahf
out
gs
gs
fsubs
or
add
stc
xor
jo
imul
imul
ret
cwtl
mov
daa
leave
xor
pushf
jo
mov
daa
xchg
and
xchg
push
rcll
ja
and
out
jge
cmp
lcall
sbb
daa
lds
pop
add
and
daa
pop
fidivrs
sbb
mov
push
push
dec
rcll
cmp
xchg
jo
loop
mov
je
mov
js
push
inc
add
xchg
cmp
jge
pop
jno
test
mov
xchg
xchg
scas
lahf
nop
pop
push
sahf
add
and
movsb
out
jo
shll
xlat
inc
or
dec
mov
dec
rcrl
pop
add
sub
aaa
aaa
or
pop
andl
incb
sub
mov
mov
jl
cmp
xlat
jl
lods
or
inc
mov
xchg
fwait
in
cwtl
cltd
pop
pop
cmc
pushf
iret
xchg
xchg
xchg
out
sbb
pop
dec
xchg
pop
outsb
xor
hlt
ret
cmpsl
sbb
cmp
lock
pushf
subb
xor
leave
mov
add
pop
ss
xchg
out
pop
push
mov
mov
dec
lret
pop
jcxz,pt
or
cli
jle
test
iret
pop
fcomps
mov
jno
cmpsb
lahf
push
lret
shlb
pop
dec
jae
pushf
sub
iret
popf
nop
shl
rcrl
ljmp
jl
fists
es
pop
aaa
add
mov
xchg
or
inc
add
pop
mov
sti
mov
mov
mov
ficomps
push
int3
pop
movb
out
inc
or
fisubrs
cwtl
or
out
jecxz
fcomps
outsb
test
iret
sbb
mov
push
add
in
pop
sbb
push
aaa
pop
imul
inc
cmp
cwtl
inc
mov
pop
scas
jne
mov
in
jno
push
xor
mov
orl
cmpsl
xchg
sub
adc
adc
test
lds
sub
out
jno
inc
in
adc
add
lods
jbe
jmp
sbb
mov
es
mov
or
test
fwait
out
lret
jl
pop
outsb
call
cmp
js
out
mov
jle
mov
sub
xchg
sub
add
popa
jle
mov
mov
or
mov
outsb
lret
test
data16
add
jmp
push
loope
lods
lds
adc
es
or
pushf
pop
pop
mov
into
movsl
sbb
xor
jmp
xor
pop
sub
cltd
sar
lods
cs
or
adc
push
clc
jle
insb
and
push
lret
push
sbb
repz
das
bound
mov
pop
loopne
sbb
adc
lods
test
outsb
cwtl
icebp
jae
sbb
adc
cmpsb
faddl
jge
cmp
pop
xchg
xchg
mov
jle
cmc
jl
lret
les
and
push
mov
arpl
add
mov
or
je
insl
test
test
mov
shr
ret
ret
int3
out
je
xchg
jecxz
icebp
mov
cmp
inc
loopne
negb
lea
add
lock
push
pop
sub
into
mov
fstpl
testl
jbe
mov
loop
popf
jle
lcall
addl
movsb
mov
nop
cmp
adc
imul
sbb
xchg
cmovg
cmp
and
or
les
lods
cld
jge
add
in
ljmp
int3
adc
icebp
cmp
movsb
lock
or
or
inc
mov
imul
daa
push
in
cs
xchg
int
mov
mov
cmp
dec
leave
pop
out
arpl
mov
adcl
ficoms
iret
mov
mov
and
cmp
mov
jmp
ret
pop
lahf
mov
lcall
clc
mov
adc
test
add
adc
cmp
int3
lahf
and
dec
jg
scas
psubd
mov
int
pusha
cltd
rorl
les
lea
add
mov
pop
lock
pop
in
test
hlt
fnstsw
fidivrl
or
mov
addr16
shr
movsl
jle
xor
or
pmulhw
insl
cli
push
xchg
fdivp
into
push
cmp
mov
ja
mov
mov
lahf
jae
gs
mov
mov
js
adc
mov
pop
lea
ret
scas
in
aad
lea
int
movsl
repnz
add
or
nop
repz
lods
imull
xchg
or
popf
mov
enter
out
jo
xchg
inc
leave
xor
xor
repz
stos
je
aaa
popa
push
adc
mov
dec
fidivs
or
push
xor
pushf
leave
sbb
shrl
movsl
add
enter
sbb
cmp
mov
int3
jne
outsb
enter
data16
pop
sahf
xor
pop
xor
mov
and
xchg
faddl
fcoml
vpcmpeqw
fnsave
in
loopne
cwtl
jecxz
add
mov
mov
sub
and
roll
leave
mov
dec
add
push
cmpsb
call
adc
js
fistl
or
mov
add
lret
mov
push
cmp
ficoms
mov
rcrl
jno
mov
daa
jbe
mov
mov
jg
insl
imul
xor
push
mov
push
fdivl
test
pop
out
jg
shrb
sbb
mov
decb
fimull
je
out
push
loope
shlb
mov
clc
cltd
js
inc
mov
push
pop
jp
inc
add
clc
cmp
and
icebp
mov
mov
ss
cmp
in
add
push
pushf
adc
popa
add
lret
xor
cmp
sub
or
sbb
dec
mov
xchg
lahf
rcll
mov
sbb
je
lcall
mov
xor
jge
popf
movsl
mov
xor
sub
pop
add
mov
push
shrl
push
inc
fucompp
mov
scas
lcall
aad
or
jle
mov
and
or
in
ds
aas
out
lret
or
repnz
or
std
and
insb
gs
push
fbld
xor
jl
adc
sarl
push
popa
push
or
popf
xor
test
push
cmp
inc
mov
push
cwtl
pop
cmpsb
faddl
mov
mov
pop
inc
das
aam
shll
xchg
fwait
mov
inc
jbe
and
pop
pop
jns
cmp
or
lahf
jns
iret
mov
jle
sub
sub
cmc
inc
push
aam
mov
aad
jne
inc
fsts
or
icebp
fisubl
add
ret
mov
mov
xchg
push
cs
add
inc
in
fcom
or
sub
mov
scas
mov
dec
push
or
stos
adc
mov
jae
mov
jo
add
scas
xor
movsl
scas
sub
dec
fs
lods
dec
jae
loopne
sbb
xor
jl
or
ret
xchg
pop
cmp
mov
mov
stos
stc
sub
cmp
and
cmp
jbe
jns
test
push
adc
xor
test
jns
ret
cwtl
sbb
cltd
pusha
xchg
add
in
xor
fnstcw
ja
jg
cltd
or
movsb
notl
lea
out
fcoms
sbb
pop
xchg
xchg
pop
faddl
mov
and
pop
stos
or
int3
jne
sbbl
dec
pop
xor
fildl
pop
pop
insl
ljmp
je
xchg
jmp
sbb
pop
pushf
mov
sahf
xchg
mov
out
mov
cmpsl
ljmp
ret
adc
sti
lds
xchg
xchg
cmp
mov
inc
sub
insb
mov
sbb
mov
fcomps
testl
test
cmpb
and
cmp
inc
dec
bound
cwtl
add
mov
rep
subl
jns
sub
jae
xor
xor
sbb
data16
xchg
loopne
sub
jl
mov
adc
ljmp
mov
into
test
into
dec
jmp
pop
jns
test
repz
lahf
xchg
shrb
insb
mov
std
xchg
add
push
je
inc
cwtl
call
mov
inc
mov
pop
jbe
jbe
push
outsb
sbb
adc
ljmp
ret
cmpsb
testl
sub
pop
in
sub
mov
pop
adc
xor
pop
cwtl
scas
fists
out
jmp
mov
xchg
xchg
sti
ret
adc
xchg
lods
fimuls
and
mov
out
mull
dec
mov
mov
movsb
dec
aaa
dec
sti
mov
mov
cmp
jbe
lret
daa
jnp
inc
adc
lods
aaa
xor
push
pop
push
inc
sbb
bound
or
mov
sahf
cmp
dec
or
arpl
sub
jae
or
incl
jle
ret
cmp
xchg
fcmove
mov
ret
mov
and
xchg
adc
and
dec
ret
cli
lock
iret
sarb
subb
cmp
addl
xor
push
icebp
pop
fldcw
ret
js
ret
cltd
jno
cltd
jae
cmp
iret
addr16
movb
iret
data16
mov
sub
pop
test
add
scas
pop
mov
pushf
mov
mov
mov
and
cwtl
push
jecxz
jmp
sbb
dec
addl
pop
jo
stos
std
rolb
call
cmp
cmp
lods
push
mov
aas
inc
aaa
cmpsl
pop
adc
inc
fs
sbb
mov
lret
push
xor
aaa
fdivr
pop
fstl
in
int
push
addr16
sbb
loope
pop
jns
hlt
fwait
ret
dec
jp
inc
call
inc
pop
or
mov
test
std
subl
pop
test
cmp
push
in
pusha
sub
xor
imul
or
push
pop
or
mov
lods
mov
iret
addr16
test
testl
psllw
aaa
or
lcallw
subl
sbb
mov
mov
out
andl
mov
lods
push
cltd
cli
or
rclb
adc
aas
dec
xor
or
adc
dec
push
pop
dec
or
sahf
mov
daa
and
out
lahf
xchg
jo
clc
sbbb
outsb
sub
sbb
sub
rcr
inc
mov
aam
push
jnp
add
cmpsb
in
pop
pusha
loope
lcall
mov
es
jno
or
fiadds
lahf
insb
jmp
nop
mov
mov
push
jl
sbb
ss
icebp
sub
mov
push
lock
call
scas
bnd
and
jns
outsb
lret
in
sub
push
rol
prefetcht0
add
into
dec
in
pop
pop
gs
cmc
jno
pop
jne
pop
mov
xor
lods
lock
iret
cmp
add
lret
popf
rolb
adc
mov
movntq
pop
lods
loopne
jnp
jns
loop
stc
push
orb
jge
push
push
jmp
mov
and
jnp
into
mov
neg
pop
adc
out
dec
into
dec
jb
incl
mov
push
adc
push
mov
dec
lds
cmpsl
or
into
xchg
push
sub
xor
mov
fsubl
andl
ja
adc
stos
inc
xor
aas
bnd
sub
lahf
hlt
inc
xchg
jb
cmpsl
add
push
das
lret
sub
sbb
loopne
mov
frstor
mov
testl
ljmp
cli
stos
push
mov
sub
add
xchg
push
lds
lcall
pop
subb
adc
aam
adc
mov
sarb
imul
jno
sub
dec
bound
mov
aam
sub
push
xor
les
mov
test
cmc
mov
pop
jno
leave
divl
push
mov
fisttps
jns
pop
cmp
outsb
icebp
jae
fdivs
xchg
cmpsl
stos
sahf
test
inc
pop
mov
push
popf
lret
lret
mov
dec
mov
popf
lock
mov
mov
adc
repnz
dec
je
ljmp
ret
loope
aam
xchg
pop
mov
xchg
inc
into
fs
lcall
test
mov
popf
aas
pop
movsb
mov
xchg
jl
fwait
loopne
pop
enter
adc
add
imul
pushf
test
mov
push
insl
hlt
std
inc
xor
clc
cld
fwait
jno
loope
and
es
shlb
dec
popa
mov
loope
jl
mov
mov
adcb
lea
inc
sbb
push
in
push
rolb
insb
sbb
cltd
ret
cwtl
jg
mov
movsb
mov
sbb
iret
dec
mov
xchg
push
and
test
ret
inc
xchg
push
imul
lret
mov
xchg
dec
andb
jle
aas
jno
and
or
adcl
in
add
fiaddl
cmp
jo
roll
push
inc
ds
adc
in
pop
imul
pop
sarl
test
sar
sti
shl
repnz
leave
inc
dec
jb
outsl
cmp
sub
inc
movsb
xchg
push
lahf
int
nop
inc
es
push
pop
je
into
test
cmp
mov
cmp
cmp
jo
sub
xlat
mov
mov
xchg
push
xor
adc
call
ljmp
xchg
adc
shl
add
jecxz
sti
scas
xchg
and
or
xor
push
adc
pop
pop
xchg
push
arpl
adcb
xchg
push
dec
sub
cmpsl
mov
add
imull
adc
and
dec
ss
lods
add
out
push
pop
add
xor
add
xchg
stc
nop
jmp
test
adc
push
jle
out
sub
xchg
pop
filds
nop
cmp
add
fmul
or
adc
aaa
aas
pop
loope
xchg
pop
add
push
filds
inc
jg
es
loope
pop
xor
push
jae
outsl
mov
xchg
pushf
lods
stos
dec
out
insb
adc
xchg
jmp
ds
inc
adc
clc
mov
and
movsl
or
cmp
and
popf
xchg
test
cmp
jge
std
xchg
pop
jmp
xor
cmp
inc
push
or
outsl
push
rorl
sahf
in
pop
cmp
fidivrs
dec
jmp
dec
cmp
test
test
or
pop
fsubs
xchg
add
cmp
sub
sub
xchg
clc
jo
mov
pop
pop
daa
and
das
adc
inc
test
hlt
xor
icebp
mov
mov
rclb
gs
push
push
or
mov
add
xlat
lret
push
ret
sbb
mov
test
mov
stc
jns
int
add
jl
push
dec
nop
inc
add
mov
push
mov
lds
popf
push
sub
jae
stc
ficoml
nop
mov
dec
les
je
mov
stos
add
popf
mov
add
mov
sarl
push
or
test
jmp
pushf
sarb
dec
out
aad
push
jp
mov
or
xchg
js
xor
in
aaa
fcoml
cmpsl
or
xor
xchg
mov
push
mov
test
test
loopne
test
js
rorb
mov
das
ljmp
jae
mov
popl
hlt
int
xchg
inc
into
cwtl
ret
push
roll
sbb
inc
xchg
mov
sub
std
mov
and
push
pop
fstpl
inc
sti
testb
xchg
sbb
xchg
aaa
pop
mov
sbb
sbb
cmp
or
cmove
dec
mov
dec
in
scas
loope
jnp
je
adc
cmpsl
sub
cmp
rcrl
aad
xor
mov
popa
addr16
add
cwtl
out
sti
inc
clc
fildl
sbb
push
cmp
xchg
mov
mov
dec
ljmp
jb
push
dec
sub
in
les
popa
dec
aad
mov
outsb
jb
loopne
aad
lds
mov
jg
mov
scas
jo
hlt
and
sbbl
fadds
loopne
repz
mov
mov
cwtl
xchg
js
add
fsubs
xor
leave
inc
in
std
das
imul
jbe
mov
popa
push
and
ds
jle
xor
arpl
in
fisubs
dec
jg
je
add
enter
pop
lods
or
movsb
ss
mov
scas
addr16
imul
std
fs
xor
pop
bts
xchg
andb
pop
pushf
add
xor
xlat
mov
cmpsb
mov
outsl
sbb
adc
push
cmpsl
or
mov
inc
push
in
adc
lods
cmp
lahf
popa
xchg
jecxz
mov
push
std
push
mov
movsl
pop
cmp
inc
inc
hlt
dec
push
daa
cs
loop
rcll
popa
mov
shlb
ja
or
roll
out
enter
pop
leave
idivl
mov
push
jle
mov
rcrl
xchg
rorl
sbb
mov
dec
dec
shlb
or
ret
sbb
xor
and
or
lahf
and
inc
aad
fmuls
repnz
xchg
and
sahf
mov
aam
clc
int
pusha
lods
mov
adc
sbb
sbb
div
and
push
lret
or
mov
fisttpl
dec
pop
push
js
lods
addl
pop
add
ret
mov
fimuls
jl
imul
aad
ret
rcr
decl
jmp
inc
jb
push
outsb
and
mov
xor
stos
mov
xor
aad
xor
fisttpll
xor
sbb
rcrb
add
rcll
push
xchg
cltd
test
stos
mov
add
popa
dec
shr
ficompl
data16
fisttpl
mov
mov
sub
xor
xor
and
subl
jge
mov
sarb
call
xchg
or
xor
subl
inc
cld
std
imul
repz
inc
add
jnp
mov
les
mov
mov
mov
and
mov
push
add
stos
dec
mov
push
xor
ret
adc
xor
mov
cmp
sahf
lock
add
roll
imulb
lret
xchg
mov
jno
pop
push
cmp
fstpl
pop
pop
jl
adc
data16
push
and
mov
push
push
std
sbb
ljmp
lds
les
or
pop
xlat
inc
adc
fimuls
xor
arpl
inc
data16
aaa
insl
or
mov
sbb
rep
jge
xchg
push
into
movsb
or
and
fs
push
add
aas
mov
mov
add
mov
out
movsl
cmc
mov
rcrb
mov
add
mov
cwtl
push
or
and
mov
sti
mov
stos
jno
popa
out
add
je
mov
mov
mov
ljmp
jmp
push
outsl
cwtl
mov
mov
imul
and
hlt
dec
test
fildl
inc
push
imul
push
cs
jo
inc
xchg
fsub
sub
adc
ja
ja
xor
inc
lret
mov
mov
cli
dec
clc
popl
pop
out
fistl
jmp
ret
inc
pop
cld
cmpsl
jle
ret
ds
insl
lock
sub
xlat
lcall
imul
cmp
es
test
cmp
push
cld
xor
ja
call
test
xchg
sbb
jg
js
adc
mov
inc
add
popf
dec
xchg
jp
data16
loope
lock
pop
mov
stos
in
test
sub
int3
jl
andl
sahf
in
rcl
mov
stc
add
negb
test
adc
popa
fidivrs
xchg
push
cwtl
jle
and
dec
push
pop
loop
outsl
out
mov
mov
out
cmpsb
dec
xor
mov
cmp
sbb
aad
mov
mov
imul
lahf
mov
icebp
iret
or
fisubs
push
repz
test
div
pop
jbe
stos
push
leave
xor
inc
and
pop
push
loop
mov
sub
jle
lock
ret
je
mov
jmp
cmc
repnz
fmul
repnz
lods
mov
sub
iret
inc
jecxz
push
pushf
add
lcall
test
xor
add
pop
call
in
mov
adc
push
fnstcw
xor
lcall
dec
adc
sbb
xor
mov
pop
test
out
mov
mov
dec
negl
out
es
push
test
jg
leave
adc
mov
inc
loop
je
popa
outsb
mov
movsb
inc
dec
lcall
and
stos
mov
fs
fwait
cmpsb
fwait
sub
inc
mov
movsl
cli
fnsave
sub
sub
pop
sbb
jbe
fidivrl
jns
xor
sbb
into
scas
jnp
in
pop
in
scas
fcoml
imul
sbb
repz
xchg
stc
jnp
out
xchg
adc
test
pusha
nop
pushl
pop
mull
push
jle
pop
call
or
inc
out
inc
and
mov
mov
loop
insb
out
fnstenv
out
popf
repz
xchg
ficoms
gs
xchg
lea
in
in
dec
add
sbb
xor
push
pop
xor
fnstsw
add
int3
sub
pushf
xor
sub
mov
sub
roll
jne
pop
xchg
push
jo
out
or
iret
push
dec
or
mov
mov
int3
sbb
push
int3
push
shlb
test
adcl
js
scas
aaa
movsl
adc
mov
inc
or
cmp
pop
nop
insb
xlat
mov
sbb
cmp
sub
iret
xchg
push
inc
xchg
jecxz
or
sub
xchg
xchg
mov
pop
mov
mov
dec
sbb
mov
pop
stc
rcrb
xchg
pop
and
fdivrs
dec
mov
in
push
cltd
movsl
inc
mov
mov
in
shl
repz
mov
add
int
mov
push
pushf
icebp
sahf
inc
or
sub
xchg
loopne
scas
lret
das
mov
dec
add
in
dec
loop
mov
inc
lods
or
dec
dec
mov
or
lret
mov
mov
jecxz
adc
xor
mov
ret
inc
sbb
xchg
shl
pop
filds
jae
mov
dec
dec
ss
cs
mov
fs
pop
popl
jbe
stos
fistl
mov
cmp
push
xor
js
cmp
jo
fisubrs
sbb
xlat
stos
outsb
mov
pop
lret
andb
add
test
jno
dec
and
pusha
insb
mul
lret
dec
loop
lret
dec
cltd
stos
add
add
cmp
add
cwtl
arpl
mov
xor
mov
rcll
and
pop
out
jo
ss
lds
std
jae
jmp
or
test
jg
sbb
sbb
push
dec
push
repnz
jmp
outsb
push
adc
pop
sbb
jo
int3
pusha
cmc
jno
push
sahf
sbb
adc
jg
cmp
sub
je
ljmp
inc
jecxz
cld
xchg
pop
lret
and
fnstenv
mov
pop
xor
xchg
jp
lcall
inc
xchg
mov
cmc
sbb
add
imul
repnz
xchg
mov
scas
pop
lock
rclb
xchg
frstor
insl
out
out
sbb
shrl
push
xor
enter
in
mov
dec
or
mov
sbb
adc
xchg
imull
sub
in
and
pop
inc
inc
in
push
mov
adc
or
xor
imul
add
dec
cwtl
adc
lods
inc
outsb
scas
jmp
or
pop
insb
mov
add
mov
cld
faddl
mov
pusha
inc
sbb
dec
xchg
ja
xor
mov
out
sbb
push
test
push
mov
add
mov
mov
pushf
inc
lods
nop
addr16
pop
push
aaa
mov
repnz
xor
ja
xchg
sub
je
test
jns
insb
push
call
push
add
mov
aam
cli
xchg
lret
dec
popf
addr16
and
test
call
jns
sti
sar
adc
jl
and
testl
sub
jl
lds
xchg
xchg
xchg
xor
jne
adcb
mov
pop
cmc
jnp
fimuls
mov
jp
lea
jle
popa
dec
and
ret
dec
or
stc
or
mov
punpckldq
fsubrs
or
jecxz
pop
into
loope
stos
mov
lods
jns
je
adcl
fadd
test
inc
cmpsl
push
and
xchg
test
cmc
jb
xchg
fsts
xchg
push
push
add
push
sub
loope
wbinvd
and
lret
mov
imul
int
fdivl
int
cwtl
mov
cmp
pushf
mov
jnp
xchg
xor
sahf
fmuls
clc
sub
test
or
jg
test
into
negb
jae
test
mov
loopne
jnp
adc
rcl
and
jle
or
push
lds
fmuls
jg
jge
sarl
mov
push
out
in
scas
adc
xchg
testb
pusha
push
fs
int
dec
dec
and
cmp
into
jbe
push
gs
test
in
dec
sub
mov
out
cmp
jmp
jno
cs
push
ret
push
or
jo
popf
aaa
add
insb
out
icebp
int3
sbb
rcr
dec
pushf
hlt
jl
and
adc
lds
mov
pop
cmp
sbbb
add
add
push
dec
adc
push
ficomps
cltd
ret
int3
xor
adc
stc
adc
test
sub
insl
xchg
jg
arpl
sbb
int3
pop
and
ss
mov
rorl
dec
cmp
sub
cmc
std
jg
push
xor
enter
pop
push
ljmp
dec
outsb
mov
push
pop
sbb
rol
pop
rclb
add
mov
imul
call
cltd
pop
test
pushf
lret
mov
sub
mov
pop
cmp
jns
outsb
in
push
test
cmpsb
fbld
xchg
push
add
sbb
mov
bts
loop
dec
fisubl
cli
js
cmp
or
sub
ss
inc
push
lea
rorl
pop
cmp
into
add
pop
xchg
outsl
jno
arpl
mov
adc
push
and
inc
mov
fnsave
dec
lea
jbe
push
out
insl
and
adc
push
or
imul
jle
dec
pop
outsl
mov
adc
dec
pop
ret
mov
in
mov
adc
rcr
mov
rcl
pop
add
jmp
push
test
xor
dec
insl
sbb
pusha
popf
inc
dec
addl
test
jns
inc
mov
test
sahf
adc
arpl
inc
xchg
cmp
pop
pop
outsl
mov
std
stos
adc
adc
negl
and
cmp
movsb
outsb
push
call
pop
into
xchg
xor
aam
jle
mov
cmc
pop
fwait
jbe
inc
lea
xor
adc
dec
mov
jl
mov
jp
mov
lock
je
push
fsincos
loope
std
and
lret
in
cmp
ljmp
test
jmp
lods
push
adc
inc
push
addl
jae
lahf
jne
out
bound
rcll
dec
movsb
aad
mov
js
sub
xchg
mov
sbb
ja
icebp
loopne
mov
inc
movsb
sbb
mov
jno
inc
das
push
adcl
mov
dec
push
and
cmp
addl
push
aad
mov
negb
stos
cli
jns
sub
out
cmp
cmp
pusha
cmp
pushf
int
xor
mov
fstpl
inc
dec
idivl
setl
push
mov
jmp
xchg
jp
leave
adc
popf
data16
popa
sub
cmp
je
mov
repz
shll
dec
jecxz
mov
jg
add
add
and
or
sub
or
mov
inc
mov
jns
in
ljmp
adc
and
movaps
out
add
jecxz
loope
adcb
add
push
repnz
std
inc
mov
pop
outsl
cmp
ret
and
inc
lds
jo
sbb
sub
and
packuswb
mov
repnz
into
mov
shrl
xchg
loopne
int
icebp
call
mov
jp
das
mov
add
stc
and
imul
or
mov
ror
add
jmp
insb
mov
push
mov
mov
push
popf
xlat
and
cmp
sbb
sbb
stc
sub
fildl
push
mov
in
sub
push
mov
lret
dec
loope
adc
ficoms
test
mov
and
jmp
xor
push
xlat
bound
flds
push
jne
popa
xor
add
sub
add
xor
xchg
lea
mov
fs
paddd
std
aaa
jnp
mov
and
cwtl
and
sahf
rclb
mov
inc
add
cmpsl
rcr
mov
test
or
inc
int3
mov
cmp
mov
xchg
cmp
mov
test
push
cltd
cmp
cmp
add
icebp
jns
add
xchg
mov
scas
sub
fnstcw
pop
jns
mov
and
mov
mov
cmp
fs
jp
inc
stc
dec
push
xchg
sbb
cltd
dec
addl
divl
or
fistps
aad
mov
push
ss
mov
aam
aad
jo
xor
repz
adc
shll
jmp
test
mov
dec
add
das
cmp
jmp
dec
ja
pop
daa
push
rcll
xchg
aam
or
pop
jle
les
push
mov
sarl
pop
iret
and
sub
loop
jo
test
pop
mov
popa
std
leave
das
jbe
mov
in
lods
test
lock
pop
cmp
je
adc
fwait
js
mov
sub
out
jge
cmp
in
push
stos
rcl
adc
jnp
aad
push
jbe
gs
jmp
call
in
insb
xor
test
pop
add
push
xor
mov
testl
bound
cwtl
sti
int3
cli
and
adc
mov
sbb
and
shr
sub
pusha
xor
mov
cwtl
fbld
mov
ficompl
dec
xlat
dec
out
dec
popf
stos
adc
lret
scas
dec
lock
js
and
mov
icebp
fwait
aaa
sti
fchs
dec
int
loope
inc
cmp
or
mov
dec
jecxz
xorb
std
rorl
lods
inc
push
sub
js
push
pop
test
dec
enter
sti
pop
push
mov
js
xor
adc
push
das
add
cmp
in
sbb
add
push
mov
leave
jle
sub
cwtl
cmpsl
dec
xor
es
dec
fdivp
lret
cmc
adc
push
jne
loope
in
pop
sbb
in
out
das
fnsave
lret
cmp
mov
jae
push
call
lcall
xchg
icebp
scas
repz
add
jecxz
cmp
mov
xchg
jecxz
popf
out
in
mov
loopne
cwtl
les
fadds
fs
and
outsl
clc
call
mov
cltd
mov
mov
inc
and
nop
ss
cmp
in
fs
xchg
xor
and
stc
mov
repnz
cmp
inc
repnz
stos
fsubs
inc
aas
mov
mov
cmp
gs
pop
dec
inc
rorb
sbb
mov
iret
cmpsb
push
fsubrl
xor
adc
mov
les
sub
test
cwtl
mov
push
xor
rolb
cwtl
mov
movsl
jmp
arpl
mov
cmpsl
adc
inc
mov
xlat
sub
sbb
mov
mov
jmp
mov
ljmp
xchg
inc
fldl2e
dec
cs
add
aas
test
shll
repnz
mov
pop
aam
jno
jle
mov
adc
and
stos
push
inc
jne
add
add
push
cwtl
pop
sbb
xchg
mov
xchg
sbb
sub
or
mov
pop
or
push
inc
nop
test
cmp
je
or
jmp
rorl
lea
es
push
mov
jae
adc
popf
xlat
cmp
push
sbb
mov
popa
outsb
dec
repnz
fwait
lret
or
aam
lahf
loope
jne
sub
push
cld
add
mov
rorl
xchg
arpl
aas
scas
xor
xor
xor
inc
aaa
aam
aam
inc
adc
aaa
inc
sbb
push
fsubrl
les
xchg
mov
cmp
test
or
mov
sub
sarb
fsubrl
sbb
mov
mov
add
lcall
push
lcall
fs
loopne
add
push
ret
cltd
arpl
ret
mov
outsb
mov
iret
cmp
add
aad
andb
lcall
fsubs
xchg
out
addb
in
jbe
ss
movsl
cmp
jg
xor
pushf
mov
ja
int3
rcll
add
dec
inc
test
pop
push
fiadds
xchg
jecxz
jnp
xor
nop
sbb
push
enter
xchg
lock
sub
xor
adc
pushf
fwait
lds
mov
rolb
mov
ficoml
sbb
lea
xor
mov
inc
and
mull
out
dec
sbb
dec
cmp
arpl
test
cs
sub
aad
inc
in
stos
fistpll
jg
mov
xor
pusha
in
insb
and
int3
add
jbe
xchg
pop
daa
pushf
cmp
xchg
cmp
jo
testb
inc
movsb
lahf
int
adc
jbe
fcomi
jbe
mov
and
or
push
xchg
fld
xchg
cltd
jo
test
lret
jae
icebp
mov
leave
test
inc
aam
lods
outsb
inc
jnp
fidivs
mov
mov
xchg
adc
add
stos
and
mov
fidivl
or
inc
cmpl
dec
lods
push
jo
das
test
mov
in
movsb
xchg
push
rcrl
inc
pop
pop
inc
jo
inc
in
mov
pop
xor
dec
jmp
inc
sysret
inc
pop
sbb
mov
out
sti
add
mov
xor
mov
repz
sarb
sub
mov
lahf
repz
sub
mov
inc
test
add
mov
add
repnz
nop
adc
cltd
cld
mov
imul
xchg
or
jo
std
jne
xchg
cwtl
stc
inc
mov
incl
fstpl
cmovno
sbb
xor
je
cmpsb
push
pop
or
or
fstl
int
sbb
push
out
mov
sub
sbb
incb
lods
stos
cld
in
loope
or
xchg
pop
xchg
pusha
mov
loop
or
xchg
mov
vorps
xchg
jo
addb
hlt
call
aad
fstp
push
sub
aaa
lods
jg
test
jl
pop
cwtl
mov
ss
cld
out
fsts
mov
cwtl
out
div
add
xor
in
dec
enter
cltd
xchg
movsl
dec
lods
pop
or
movsl
adcb
and
push
add
push
jae
mov
push
add
sub
jge
adc
or
fcoms
xchg
icebp
push
mov
jae
rclb
nop
out
pop
xchg
inc
fs
jg
decl
into
push
nop
in
or
xchg
icebp
les
int3
movsl
cltd
scas
test
std
dec
jl
pop
pop
repnz
dec
jg
dec
enter
rolb
adc
mov
aaa
xchg
in
ret
sqrtps
push
dec
mov
mov
sbb
lds
shll
test
aas
out
fs
add
roll
stc
mov
mov
fwait
cmpsb
std
dec
outsl
out
xor
and
outsb
lret
jge
aas
or
int3
imul
sub
inc
dec
cmpsl
cmpsl
out
rclb
cld
outsb
orb
in
xor
pop
adc
add
stc
push
lcall
mov
mov
mov
add
fdivs
cli
cmp
xchg
stc
ret
dec
test
jo
js
jp
aam
adc
repnz
jmp
and
and
cltd
xor
cmc
stos
cmp
std
adc
adc
ja
nop
mov
addr16
adc
lock
dec
fucomi
inc
mov
addr16
xor
jg,pn
sub
mov
dec
sarl
pop
and
mov
sub
jmp
dec
cli
adc
cltd
cwtl
fwait
add
test
mov
fsubs
shll
mov
dec
stos
adc
adcl
in
shrb
fstl
loope
xchg
cmp
pop
or
jecxz
xchg
rcrl
ss
sub
or
outsl
push
outsl
mov
push
push
pop
das
arpl
push
xchg
in
adc
stc
xchg
pop
or
jg
cltd
dec
cmp
push
addb
xchg
adc
push
inc
sbb
inc
mov
or
add
add
jg
cmp
add
push
mov
les
push
jno
js
mov
lds
fwait
or
ds
and
cli
xor
mov
lods
shlb
rolb
push
push
repz
enter
jae
call
xchg
in
jg
or
rorl
pop
add
xor
loope
cmp
stos
leave
repz
pop
sbbl
cmp
imul
mov
xor
je
mov
test
mov
and
sti
adc
inc
xorl
push
cmp
repz
push
call
mov
cmpb
adc
mov
int3
dec
add
lock
mov
inc
shl
shlb
clc
jnp
jo
jo
cmpsb
sub
into
mov
fisubl
mov
cld
lods
jae
and
push
inc
mov
mov
daa
stos
loop
mov
jmp
rcr
and
mov
push
mov
test
and
fidivrs
cmpsb
out
push
mov
es
jl
inc
pop
jo
cwtl
inc
sub
xlat
pop
jne
data16
mov
es
mov
imul
test
add
fisttps
sub
hlt
dec
mov
aad
cwtl
jmp
xor
sub
call
les
imul
lahf
out
ds
pop
adc
push
sub
das
out
sbb
cmpb
dec
ja
call
das
mov
scas
lret
stos
push
xchg
enter
dec
pop
cmpsl
pop
pop
pop
pop
fisttpll
xchg
sub
insb
inc
mov
cwtl
std
inc
imul
das
cmp
add
sub
and
insb
dec
clc
adc
fcom
mov
and
dec
outsl
lds
int
xor
dec
mov
cwtl
cmp
and
push
fprem1
add
dec
jnp
sub
push
mulb
daa
fcomi
mov
mov
push
insl
mov
ss
fwait
pop
mov
insl
xor
inc
xchg
js
daa
iret
xchg
ret
xchg
cmpsl
pop
daa
scas
jp
adc
pop
aaa
dec
mov
sbb
inc
jg
push
orl
dec
jns
pop
aas
lds
test
aam
shr
cmp
das
sti
add
int3
mov
das
inc
nop
jns
dec
push
in
adc
mov
cmp
insl
inc
pop
cmp
and
lcall
adc
lahf
les
lock
mov
mov
mov
int
cmp
mov
pusha
mov
add
add
fstl
bound
xchg
lea
outsb
je
jp
stos
cmp
lock
push
add
push
cld
push
in
mov
cmp
push
fnstcw
add
jge
outsl
addl
inc
sbb
jge
cmp
fisubrl
sbb
lock
ret
add
inc
sub
stos
stos
inc
adc
gs
clc
mov
fcompl
pop
ret
and
jns
xlat
es
cmp
xor
dec
jmp
out
dec
pop
mov
push
jo
out
dec
fidivs
shlb
mov
mov
dec
push
rorb
jmp
adc
call
lods
add
push
pop
call
das
mov
dec
add
xor
xor
and
jl
dec
das
cmp
pop
xlat
mov
push
xor
pusha
add
xor
cmpsl
fsubp
aas
into
stos
mov
jb
loopne
or
lock
fcomp
jg
ss
es
fildll
leave
test
call
push
or
xor
rol
outsl
jne
push
sbb
ljmp
fsubl
mov
lret
add
sub
cmp
mov
imul
data16
repz
jns
pop
les
inc
sbb
loop
pop
arpl
loope
sub
dec
aad
jle
cmp
adc
mov
sti
add
scas
mov
mov
add
push
inc
aad
push
aas
ficoml
bound
lahf
js
pop
cs
andl
ror
jg
add
ja
add
movd
adc
push
lock
or
lods
jnp
aam
adc
xlat
idivl
pop
push
addb
add
ret
insb
add
addr16
insb
pop
fnstsw
cmp
jns
mov
inc
dec
xor
push
lcall
jne
jo
test
out
sub
cmpsb
push
mov
rolb
and
push
or
sub
insb
fisttps
adc
cmc
inc
inc
les
jmp
daa
push
in
mov
imul
mov
das
push
imul
push
sbbl
hlt
sub
sub
loope
loopne
push
shlb
jnp
inc
pop
aaa
dec
mov
pop
mov
inc
rorl
aad
daa
push
sub
clc
pop
and
insb
cli
ljmp
mov
repnz
lahf
jmp
test
fnstsw
inc
outsb
ja
insb
sbb
cli
adcl
mov
popf
dec
lods
test
loope
mov
add
test
pop
jnp
pop
and
cltd
insb
out
add
pop
mov
ret
insb
lock
fs
push
cmp
adc
aaa
dec
call
push
push
inc
test
rcl
out
insb
lahf
sbb
fwait
not
xchg
jmp
push
sahf
movsb
cmpsl
outsl
inc
aad
je
jp
hlt
cli
daa
jns
mov
mov
push
push
cld
adc
bound
scas
out
pusha
roll
jo
lea
jmp
fsts
and
int
cmc
hlt
push
and
fldcw
add
or
sahf
jmp
pop
push
push
lock
aam
sbb
and
enter
push
inc
les
and
inc
inc
ljmp
sti
cld
movl
dec
xor
or
or
out
dec
push
leave
sahf
stc
add
pop
jmp
cmc
jo
icebp
dec
mov
ss
cmpsb
and
inc
jbe
and
push
pop
pop
iret
decl
cmpsb
rolb
inc
ss
fdiv
jbe
rol
xlat
cmp
mov
out
outsb
clc
add
mov
lret
inc
les
xor
mov
mov
cmpsb
fbld
leave
or
cwtl
aam
out
fwait
or
pop
adc
dec
sarl
ja
movsb
dec
rorl
pop
das
mov
add
sub
aas
jecxz
jbe
lds
std
dec
xchg
sti
mov
push
ret
mov
sbb
dec
cs
lds
inc
stos
adc
jno
pop
push
cs
mov
aad
arpl
iret
sub
dec
mov
cltd
leave
mov
sti
jg
jns
cmpsb
and
ret
mov
shlb
sahf
mov
xchg
xor
xchg
push
cs
mov
and
test
jge
dec
xor
nop
fisttpl
dec
je
out
add
sti
adc
aaa
jg
cmc
fistps
pop
outsl
pop
or
dec
sub
fwait
cmpsb
and
jne
or
xor
cmp
sbb
xor
lahf
imul
jbe
inc
js
cmp
xor
jnp
lcall
popa
sti
mov
rorb
leave
les
mov
stos
dec
add
rcrb
mov
notl
mov
pop
gs
or
sahf
sbb
repz
fwait
shr
push
sub
scas
adc
cmp
sub
subb
inc
push
jmp
imul
add
movsl
pusha
fistl
frstor
fiaddl
dec
jae
xor
mov
movsl
es
and
pop
imul
or
push
test
fucomip
je
cmp
dec
pop
lahf
xchg
mov
je
iret
jg
mov
ljmp
jl
push
pushf
arpl
pushf
aam
fmuls
loop
gs
pop
sbb
loopne
jg
out
push
mov
xchg
pop
sub
push
stos
clc
in
ss
sbb
push
jo
sub
loope
andb
jns
adc
repnz
dec
jo
int3
dec
int3
sahf
shr
outsb
add
sbb
sbb
jno
xchg
popa
adc
mov
mov
mov
mov
insl
imul
add
pop
pop
loop
popa
arpl
xor
leave
shlb
lahf
xor
push
arpl
outsb
pop
jb
outsb
ja
jle
add
gs
adc
repz
adc
xchg
add
mov
out
sahf
popa
push
fsubl
jne
push
push
push
leave
mov
mov
repz
nopl
movsb
idivb
push
jmp
daa
cmp
mov
lds
inc
xor
lds
mov
iret
pop
rorl
xlat
mov
xchg
enter
shr
xchg
int
stos
lret
fldenv
xor
xchg
das
test
push
cmp
repnz
mov
gs
data16
and
cwtl
addr16
or
or
ljmp
jp
in
clc
in
rcl
sbb
and
dec
cmp
frstor
dec
pop
mov
inc
test
push
rcll
fs
ljmp
push
stos
jae
or
mov
mov
inc
imul
popa
xchg
cmpsb
popa
jnp
es
aad
mov
rcrb
pop
jg
data16
mov
lea
sbb
scas
sub
sbb
pushf
andl
movq
mov
mov
xchg
sbb
push
push
pop
test
orl
mov
push
in
xchg
mov
ja
add
jg
push
lock
jg
andb
repz
cmpsb
fmulp
std
stos
shll
loop
xor
call
fiadds
jg
push
dec
lret
std
sub
test
inc
ret
aam
add
fidivl
and
iret
jp
inc
xor
adc
adc
rolb
dec
outsl
jg
stos
cmpsb
insb
cmc
adc
subb
sub
faddl
fnstenv
aam
fs
jns
mov
test
pop
cli
push
movsl
aad
add
or
fwait
stos
lret
push
rcrl
lret
lock
std
fsubrp
sub
aaa
outsl
aaa
loopne
xor
in
fcoml
mov
test
inc
mov
mov
pushf
mov
subl
jnp
xchg
aad
jecxz
dec
xor
or
les
lds
adc
and
pop
rcl
stos
push
mov
imul
addb
js
or
in
xlat
pmaxsw
aas
icebp
mov
push
imul
sbb
mov
mov
adc
mulb
push
mov
mov
sarb
sub
pop
mov
or
jnp
dec
inc
sub
and
or
push
push
andl
in
inc
pop
daa
out
filds
popa
into
or
rorl
lcall
mov
jg
mov
inc
loope
mov
cmpsl
xor
pop
sbb
or
mov
fwait
bndldx
hlt
ss
mov
sti
pop
movsl
xor
out
pop
scas
cmp
jmp
mov
repnz
lahf
clc
push
and
xchg
cmp
pop
mov
mov
push
jmp
out
push
mov
xchg
pop
pop
fs
sbb
addr16
aad
adc
sub
cmp
into
shrb
jle
pop
cmp
xlat
mov
ss
mov
sub
out
mov
xchg
stc
xchg
fs
stos
push
js
roll
add
push
roll
notb
call
shrl
pop
sbb
push
cmc
shlb
shlb
mov
sub
icebp
and
pop
ret
aas
filds
cmp
mov
pop
popf
out
jg
push
in
out
jno
mov
scas
push
cmp
cmp
xchg
xchg
fildll
xor
mov
lds
mov
test
out
inc
aaa
inc
mov
nop
test
dec
dec
fstps
mov
xchg
jbe
xchg
lea
jle
mov
and
dec
pop
mov
sbb
repz
push
xchg
inc
ficoml
jge
rclb
or
jle
and
jmp
icebp
sti
or
mov
xchg
mov
pop
sub
adc
gs
int3
in
mov
dec
shr
stos
adc
lods
out
mov
and
jo
rcr
xor
sahf
jb
cwtl
adc
mov
cmpsl
sub
inc
push
inc
stc
xor
inc
lret
jb
lods
sbb
iret
jb
jecxz
adc
and
adc
xor
adc
push
jp
or
jecxz
inc
xor
mov
sbb
ja
jo
pop
mov
push
jmp
dec
cmpsb
shlb
enter
inc
push
pop
xchg
and
mov
xor
pmullw
mov
shll
mov
sbb
ret
jge
nop
adc
jo
or
cmp
out
jb
dec
pop
rcrb
lods
cmpsl
mov
dec
inc
mov
push
loopne
inc
insb
popa
add
mov
dec
cld
cmp
inc
push
dec
icebp
xor
mov
das
jno
roll
or
std
in
nop
dec
mov
xchg
fisttpll
mov
ret
and
mov
and
fcmovnbe
sbb
dec
xlat
and
jp
scas
inc
push
or
out
imul
cs
lea
stc
pushf
and
popa
dec
andl
sub
pop
pop
clc
inc
rolb
cli
cmp
or
jle
iret
mov
inc
pop
xor
and
and
std
daa
pop
fcoml
dec
inc
mov
push
out
push
jo
test
movsb
mov
sahf
fwait
stc
sahf
scas
jmp
xor
hlt
sbb
push
stos
cmpb
ret
scas
gs
flds
or
xchg
jae
dec
mov
lahf
or
or
pop
das
add
sahf
repz
pop
inc
inc
out
mov
loop
insb
aam
sahf
xor
movsl
or
mov
inc
inc
es
push
cmp
mov
loope
adc
or
daa
jecxz
aad
shlb
jmp
das
add
out
sbb
xor
push
call
jle
repnz
pop
cmp
or
push
push
stos
repz
decb
or
loop
pop
mov
dec
call
fdivrs
mov
jnp
xchg
jecxz
cmc
jmp
jae
outsl
popf
jnp
popf
rclb
mov
sbb
int
inc
pop
insl
test
fnsave
bound
out
sti
or
adc
lret
cwtl
test
and
negb
xor
stos
cmpsl
cmp
lret
shl
scas
dec
in
subb
pushf
repnz
aas
fdivs
lds
pop
and
div
push
cmp
aam
cmpsl
mov
adc
add
mov
xchg
lods
mov
inc
add
subb
sub
sbb
loop
jl
iret
pop
pop
outsl
cmp
add
pop
aad
dec
out
dec
dec
xor
test
xchg
imul
jo
rcrl
push
pop
sahf
or
jl
testl
subl
sbb
ja
stc
lods
out
out
std
add
jecxz
push
les
enter
push
ss
lods
push
jle
cmp
sbb
adc
outsl
jmp
push
insl
pop
or
mov
in
fsubs
shrb
sbb
add
pop
iret
mov
pushf
xchg
dec
iret
inc
push
insl
dec
test
loop
sub
cmp
and
xor
inc
pusha
mov
push
lcall
adc
int
scas
out
xlat
cmp
pop
sahf
xor
out
lock
shrb
stos
mov
push
cmpsb
das
or
sarl
hlt
cmp
push
sub
fldt
mov
inc
pop
sbb
stc
lret
jg
leave
xor
mov
push
mov
add
add
ret
or
addl
mov
enter
push
push
push
fcomps
inc
dec
pop
jne
sub
repnz
cmpsl
stos
xor
dec
subl
inc
add
cmp
pop
arpl
mov
leave
and
movsb
mov
jmp
push
test
xor
jo
test
push
jp
in
sbb
dec
outsl
dec
adc
mov
inc
jo
add
mov
je
clc
mov
sahf
mov
push
push
jp
adc
ja
xor
pop
push
out
jns
pop
sbb
cltd
out
dec
inc
ljmp
and
psubd
loopne
test
jns
cltd
push
ds
xchg
dec
dec
leave
mov
std
sub
jnp
jg
js
test
adc
sub
xchg
pushl
aas
testb
inc
cli
add
add
loop
pop
sbb
pop
mov
fistpll
popf
or
icebp
cmp
icebp
push
mov
dec
fucomip
add
aad
outsb
aad
je
sarl
fsubrl
test
jl
sti
cwtl
and
mov
mov
push
pusha
pop
mov
or
mov
inc
orb
dec
or
add
pop
adc
call
jns
push
shll
loopne
mov
and
xchg
sbb
pop
stos
enter
lahf
out
or
and
cs
sbb
mov
adc
mov
mov
cmp
add
mov
mov
push
in
push
or
cmpl
mov
insl
xchg
jp
sti
scas
lds
cltd
insb
pusha
push
mov
mov
call
and
mov
out
mov
push
es
lods
data16
adc
iret
test
jbe
into
jns
dec
sub
fwait
es
mov
push
add
mov
pop
mov
xor
test
dec
xchg
mov
jbe
sti
test
fldenv
aas
inc
lock
loop
jp
push
stos
xchg
mov
jb
jno
cmp
out
movswl
int3
gs
popa
stos
jle
dec
mov
cmp
js,pn
cmp
fdivs
or
in
scas
pop
pop
mov
in
mov
sub
pop
sub
jo
fnstenv
mov
fmuls
loop
xor
sti
rcll
outsl
or
out
cmp
jno
orb
sub
ljmp
mov
add
das
adc
mov
aam
icebp
or
xor
pop
in
imul
jmp
daa
cmp
rolb
mov
lahf
xor
in
insl
adc
and
stos
bnd
jbe
sarl
xor
ds
je
xchg
out
fisubrs
adc
mov
push
aaa
inc
lahf
cmc
inc
rcll
imul
sbb
fs
stc
roll
test
lret
fdivrp
adc
out
test
jne
je
mov
in
stc
jb
fcomp
orb
pop
mov
mov
mov
inc
push
cs
in
mov
int
mov
fbld
popa
das
pop
mov
movsb
arpl
or
add
icebp
repnz
mov
jl
icebp
das
scas
and
sbb
in
mov
pop
aam
adc
hlt
stos
sbb
repnz
and
les
fisubrl
rcrl
icebp
inc
into
mov
push
test
out
add
repnz
mov
out
arpl
les
fisttpll
insl
mov
movb
push
xor
in
mov
adc
pop
mov
or
jo
push
test
int
xor
cmp
or
lret
inc
pop
gs
mov
int
lcall
lahf
pop
into
or
leave
int3
int
movsl
cld
imul
sub
cltd
inc
iret
xchg
sbb
outsl
push
xor
pushf
ds
iret
adc
add
test
inc
mov
adc
sub
stc
hlt
sbb
in
inc
or
dec
repnz
ja
imul
or
mov
repz
adc
sbb
call
mov
outsl
xchg
push
mov
inc
mov
js
dec
lret
adc
and
ljmp
loope
jg
ds
inc
mov
mov
mov
adc
cmp
xchg
jle
std
adc
push
sahf
fstpl
push
bound
inc
jb
or
jge
xchg
xchg
subb
xchg
aad
popa
mov
scas
cli
push
dec
inc
lcall
push
mov
adcl
xor
cmpsb
xor
or
add
pop
jb
pop
repz
shlb
orl
fst
jp
mov
test
or
xchg
cmp
addr16
ljmp
lahf
fists
adc
adc
sti
and
fdivrs
test
repz
jmp
add
xchg
xor
sbb
fwait
loope
pop
lahf
lcall
neg
cwtl
cmp
lahf
add
movsl
lret
adc
add
mov
idivl
aas
in
xor
inc
xchg
xlat
xchg
rorb
and
inc
adc
movsb
sub
push
sbb
adc
jnp
enter
lods
pop
cmp
mov
mov
int
cmp
sbb
mov
leave
mul
lret
dec
or
in
push
dec
hlt
mov
or
adc
pop
shl
and
xchg
mov
cmp
mov
lds
cmpsb
jle
out
dec
rclb
shll
jg
dec
add
xlat
jecxz
and
mov
mov
xchg
push
ficoms
int3
repz
ds
cmp
push
fdivr
out
hlt
cli
sbb
inc
xchg
cmpsl
ja
or
or
dec
fwait
push
cmp
mov
cmp
xor
adc
sub
dec
and
adc
pop
ret
movsl
iret
outsb
mov
mov
cwtl
xchg
insl
push
adc
sbb
fsubrl
push
mov
pop
sbb
leave
mov
aas
insb
adc
or
mov
mov
mov
pusha
dec
pushf
gs
loop
daa
cmp
push
xor
and
dec
leave
mov
add
scas
and
mov
and
or
sub
sub
mov
faddl
fiadds
daa
xor
stc
xor
fldenv
pusha
mov
jg
or
mov
loopne
outsl
jb
mov
scas
xor
pop
lea
mull
xor
jmp
fdiv
mov
inc
pop
mov
mov
push
cwtl
jmp
mov
inc
popf
cli
fisttpll
xor
inc
and
dec
xchg
mov
les
andb
pop
pop
or
scas
or
test
sbb
xchg
pop
jb
jo
mov
test
ret
push
mov
cmc
xchg
outsl
inc
jecxz
ret
xor
dec
sahf
out
incb
mov
idiv
xchg
xor
fimull
pushf
push
inc
inc
inc
scas
imull
cmp
arpl
out
lds
pop
mov
jl
add
cmp
cmc
into
je
mov
imulb
sbb
pop
int
test
cmp
inc
ret
jb
lods
mov
dec
rol
jl
cmovae
dec
leave
push
out
mov
jne
ljmp
push
pop
add
jmp
pop
bnd
push
inc
imul
mov
outsb
jae
jge
jne
int3
dec
mov
jae
lahf
push
nop
jge
xor
or
out
jmp
fs
adc
fs
cmp
lock
mov
add
rcrb
push
cmpsl
xchg
mov
ja
mov
xchg
enter
jle
mov
repnz
testb
mov
in
lcall
push
xlat
jle
ja
fs
movsb
rclb
mov
mov
mov
jns
ret
shlb
xchg
and
inc
fadds
dec
leave
mov
loop
mov
cld
pusha
pop
and
shlb
jge
mov
test
js
xor
idivl
jmp
cmpsb
arpl
mov
jo
stos
sbbb
mov
pop
inc
push
pcmpeqb
in
adc
inc
and
insl
nop
test
iret
cltd
sahf
lods
and
jns
mov
pop
dec
test
es
jb
aad
adc
xchg
je
aad
movsl
mov
test
aam
testl
pop
push
mov
inc
scas
pop
je
shl
adc
rcrb
and
loop
pop
and
ficoml
push
mov
sub
or
lret
mov
push
mov
push
push
stos
push
sahf
lock
push
pusha
jno
adc
add
jb
bnd
call
pusha
pop
cld
add
jnp
int
add
push
fsubp
std
sbb
adc
jmp
test
push
inc
mov
pop
dec
mov
jne
adc
pushf
mov
or
jmp
scas
pop
jo
mov
inc
add
ljmp
lea
in
add
iret
sarl
xor
adc
pop
cmp
les
sbb
mov
jns
addr16
mov
pop
lds
pop
sub
cld
add
lcall
and
xor
mov
push
add
or
pushf
ret
mov
xchg
imul
mov
frstor
jge
xor
jge
iret
dec
ja
aaa
xlat
mov
aaa
xor
xor
mov
leave
add
mov
loopne
push
cmc
clc
pop
dec
jg
test
adc
out
push
jge
out
inc
sub
fists
inc
inc
mov
cltd
mov
leave
or
in
ss
pop
lea
xchg
add
mov
mov
xchg
ljmp
or
cmp
xor
push
mov
gs
inc
dec
push
dec
mov
out
int3
movsl
mov
mov
dec
push
xchg
mov
lods
stos
popf
xchg
or
mov
and
mov
loop
sbb
sbb
shlb
lea
jp
inc
std
mov
push
in
loop
jle
mov
cmp
mov
loopne
cmpsb
xlat
mov
aaa
mov
cmp
jae
int
dec
mov
ljmp
cs
ret
js
jae
mov
jo
ret
test
lret
mov
fldt
js
mov
das
push
popa
out
mov
cld
pop
sti
mov
sub
or
xor
lea
movsl
lds
mul
pop
adc
cmp
dec
stc
sbb
iret
test
out
cmp
pop
rcrl
add
mov
xchg
std
fdivr
jb
pop
pop
or
clc
fdivr
popf
cltd
cli
mov
mov
imul
outsb
sti
dec
call
inc
fnstcw
fimuls
add
fnsave
sbb
add
jg
inc
jbe
inc
mov
and
decl
xor
cwtl
nop
pop
xor
cli
data16
aaa
test
mov
and
mov
mov
es
iret
pop
push
insl
shlb
into
push
sbb
push
iret
cwtl
add
xchg
pinsrw
dec
push
push
mov
push
outsb
sahf
dec
nop
es
cwtl
les
fcoml
mov
lret
std
adc
mov
jge
filds
xchg
push
sbb
inc
jno
or
jg
hlt
orb
repnz
fyl2x
test
jecxz
mov
dec
cld
mov
fldt
push
pop
pop
push
stos
scas
add
pop
xor
adc
mov
daa
and
pop
mov
repnz
das
daa
imull
pop
movsb
nop
jns
pushf
imul
aaa
dec
subb
mov
mov
pop
lea
insl
pusha
pop
push
jnp
adc
sbb
mov
jns,pt
fnsave
mov
inc
loope
xchg
mov
popa
pop
ffreep
inc
rclb
push
add
aad
ret
xchg
test
sub
popa
ss
mov
in
lret
enter
mov
mov
les
inc
or
xchg
mov
test
inc
cli
mov
ja
mov
shlb
pop
xchg
adc
pushw
roll
fimull
mov
divb
or
in
into
fldl
outsb
enter
cmp
add
mov
aaa
jne
test
out
xchg
loopne
loop
mov
in
push
xchg
ja
ljmp
jp
mov
mov
in
insb
stos
inc
in
testb
push
inc
stos
and
in
test
movsb
jno
mov
mov
or
adc
nop
lods
outsl
sub
sub
aas
lock
loop
punpckhbw
insl
sub
inc
cmp
xchg
xchg
cltd
mov
ret
sbb
jmp
pop
dec
xchg
mov
pop
lock
aad
jno
sub
cmp
pop
movsl
movsl
je
or
xor
xchg
insb
add
pop
xchg
mov
arpl
push
out
outsl
xchg
pop
push
adcl
fistpll
mov
cmp
jg
xor
rol
inc
cmpb
xlat
cld
adc
icebp
xor
rolb
mov
mov
mov
in
cmp
push
les
cmp
lcall
xor
cmp
mov
xorb
test
out
rcr
sub
dec
mov
jmp
nop
fsubrs
sub
dec
sbb
or
pop
sub
cmp
bound
cmp
mov
dec
push
loope
lret
xlat
imul
pop
sahf
xor
inc
loopnew
inc
adc
lea
out
lea
ljmp
mov
and
adc
push
pop
add
adc
mov
sbb
jb
bound
loopne
lret
movsl
jbe
test
out
test
shl
jmp
cmp
push
mov
inc
es
adc
push
ret
insb
sbb
xor
mov
cs
fdivr
outsb
push
hlt
lods
pop
dec
mov
jl
mov
inc
rcrl
fsubr
xor
cmp
outsl
in
mov
or
fiaddl
repz
in
and
stos
push
mov
ret
pushf
loope
ss
and
cli
fldcw
repz
lods
add
sahf
push
mov
ja
inc
rclb
inc
and
push
pushf
movsl
fsubr
or
lock
dec
pop
mov
sahf
mov
pop
aas
push
es
mov
xlat
mov
call
fucom
mov
jl
mov
ret
push
mov
rcr
mov
xchg
aad
jne
fwait
mov
stos
popa
test
into
mov
arpl
mov
arpl
test
fcoms
mov
in
inc
jecxz
stos
lods
mov
push
sub
inc
mov
jns
lret
and
pop
stos
and
dec
adc
scas
jb
arpl
cltd
push
ds
fcmovnbe
jecxz
imul
xchg
pop
adc
into
scas
test
aad
jle
xor
jg
cmpsl
enter
jbe
jecxz
push
icebp
les
into
lret
mov
dec
dec
xlat
andl
gs
adc
arpl
cmc
lods
and
sarb
out
jecxz
popa
jecxz
inc
enter
jle
in
mov
sbb
clc
mov
push
jno
das
imul
sbbl
lret
mov
mov
out
push
inc
ror
ret
mov
hlt
fisttpl
or
sti
sbb
aas
pop
les
mov
out
push
lahf
test
gs
repnz
icebp
lods
push
adc
and
mov
out
or
ljmp
sti
inc
and
fimull
pop
pop
repnz
pushf
and
stos
sub
pusha
mov
ljmp
sbb
sbb
mov
rorl
cmc
in
ss
xchg
dec
or
out
mov
sub
pop
pop
push
jne
mov
nop
push
into
lea
arpl
pop
dec
adc
push
std
jp
push
xchg
cwtl
jg
jge
das
ja
mov
xchg
push
jne
dec
push
dec
adc
bound
cwtl
mov
hlt
imul
or
dec
push
lock
subb
shll
shlb
flds
cmc
sub
ret
aam
mov
sub
iret
adc
lods
push
xchg
and
das
test
cmpsb
pop
pop
arpl
mov
xchg
add
dec
cmp
dec
out
dec
das
pop
pop
push
out
orl
or
inc
pop
and
sar
sahf
lcall
fdivs
pop
inc
adc
unpckhps
mov
test
sbb
mov
enter
inc
ljmp
es
fs
addr16
out
xchg
icebp
fwait
clts
mov
ja
lret
pop
sbb
cwtl
jnp
add
lret
and
push
int
sub
fucomi
adc
xchg
lret
lods
push
sahf
jne
out
jns
pushf
es
ljmp
es
push
adc
cmp
cs
inc
xor
cwtl
aas
lret
cmp
cmp
loope
fdivp
sahf
into
mov
mov
es
mov
or
or
sahf
sub
adc
ja
push
sub
xchg
mov
sub
push
push
sahf
fistl
xor
cmp
ljmp
outsb
pushf
or
jnp
stc
push
loop
jae
insb
pop
ljmp
es
enter
popa
mov
dec
loopne
adc
cmp
xchg
dec
dec
pop
jg
mov
faddl
idiv
ffree
out
pop
gs
or
rorb
mov
push
push
mov
mov
jb
insl
ss
sbb
fcoms
mov
sbb
out
add
adc
cmc
arpl
or
jb
and
popf
jno
mov
adcl
inc
xor
nop
mov
insb
or
jmp
lret
pop
minps
lock
xchg
mov
add
cs
imul
sbb
push
mov
idivb
lods
cld
add
mov
and
shr
mov
test
jno
shrb
adc
xchg
or
adc
mov
and
in
insl
sub
cmpl
add
push
sub
and
out
in
sub
jecxz
add
fs
sbb
shl
jmp
inc
push
arpl
push
lcall
adc
stos
xor
jecxz
int3
mov
adc
add
fidivs
pop
cwtl
popf
in
out
mov
jb
sub
or
rolb
xchg
mov
add
mov
movsl
adc
sub
repnz
das
packsswb
mov
inc
sub
xchg
test
ljmp
push
scas
jno
xor
clc
add
gs
xor
cmp
jbe
scas
inc
ret
cmpsl
cmc
cs
push
stos
fucom
lock
adc
mov
dec
daa
adc
das
jg
sahf
bound
cmp
or
jo
push
dec
xchg
inc
xchg
fwait
adc
sbb
pop
cmp
test
dec
pushf
or
mov
push
outsl
in
lahf
insl
clc
scas
scas
outsl
popl
jecxz
int3
sub
movsb
into
cmp
aad
ret
lahf
mov
sub
xchg
push
das
mov
mov
repz
enter
mulb
inc
push
bound
lret
pop
repnz
fstl
insb
shrl
inc
cwtl
sbb
js
stos
pop
cld
stos
jnp
lret
out
rorl
adc
mov
mov
insb
inc
push
pop
iret
adc
xchg
bound
and
icebp
out
jl
or
sbb
inc
sbb
lret
out
pop
xorb
popf
dec
dec
leave
xchg
pop
xchg
leave
pop
jns
cmp
test
pop
les
cmp
in
dec
out
std
and
ret
ret
movsb
add
push
mov
ljmp
rcr
fisubl
and
bound
mov
mov
fisubrl
leave
jo
fimull
rcr
jae
pop
mov
mov
mov
iret
pop
mov
dec
add
pusha
bound
pop
clc
or
sbb
dec
inc
cmp
adc
adc
lock
jle
sqrtps
mov
push
ret
and
shrl
jmp
cmp
jecxz
inc
enter
xchg
aad
dec
and
inc
jmp
and
lock
xorl
xchg
add
testb
daa
arpl
push
stos
fbld
imul
sbb
jl
aaa
fcmovu
jmp
filds
and
fs
mov
es
push
push
lcall
push
dec
xchg
leave
sub
add
jnp
adc
and
xchg
pop
mov
mov
xchg
stc
cmpsl
jle
out
jmp
sub
pop
sarb
jns
and
mov
les
in
jmp
adc
adc
dec
pop
xor
das
push
xchg
popf
popa
lcall
xlat
in
dec
pop
daa
or
out
rcrl
xor
int
mov
sbb
xor
hlt
inc
loop
mov
adc
mov
mov
fwait
enter
push
popa
push
test
jae
insb
push
fstpt
cmpsb
push
pop
dec
sub
adc
mov
cld
mov
fcmovbe
push
mov
pop
out
push
xlat
mov
or
jl
jb
push
pop
jmp
add
repnz
ds
sarb
sub
mov
in
xchg
insb
inc
pop
shll
ss
sub
mov
out
push
mov
scas
mov
mov
mov
fwait
sub
mov
pop
icebp
mov
mov
neg
mov
adc
cmp
mov
int
daa
scas
lcall
fdivp
movsb
mov
adc
cltd
popf
and
jae
out
mov
lcall
mov
xor
faddl
inc
outsl
cmp
fdiv
mov
pop
lahf
jmp
push
inc
push
mov
mov
arpl
bound
and
pop
ffree
in
fsub
pop
mov
add
sbb
xor
lret
mov
pop
jmp
data16
jnp
jp
aas
jecxz
xchg
mul
sub
ss
test
mov
js
inc
mov
cmc
xchg
dec
insb
out
xlat
add
mov
mov
cmc
jmp
mov
push
pop
xor
cli
clc
xor
sub
dec
xor
pop
lahf
dec
sbb
das
movsl
bound
aaa
dec
push
scas
arpl
fistl
stos
mov
pop
and
mov
cmpsl
xor
lock
arpl
aad
pop
insl
cmovle
push
jnp
ficomps
test
pop
jle
into
fldt
lret
push
pusha
gs
sub
aas
sub
xchg
adc
add
movsb
dec
mov
pop
xchg
stos
cmpsb
add
inc
out
aaa
dec
adc
pop
aad
jne
fcoml
inc
push
mov
mov
jp
call
dec
pusha
hlt
mov
std
push
push
hlt
in
xor
xchg
and
popf
rorl
fsubl
add
das
sub
xchg
adc
out
mov
repnz
pop
jg
or
add
adc
test
aaa
je
xor
dec
adc
jmp
push
mov
cmpsl
rclb
sub
filds
sub
mov
les
pop
dec
jle
les
shll
lret
or
mov
pop
in
mov
and
cmp
iret
decb
sarb
sbb
push
hlt
xlat
out
fcomp
xchg
clc
fimuls
sahf
loopne
inc
xchg
fsubrl
stos
fwait
je
iret
pop
jmp
adc
push
out
fsubr
push
mov
mov
lods
subb
xor
icebp
fsubs
mov
pop
sub
jnp
cmp
mov
xchg
push
xor
repnz
mov
sbb
dec
insl
idiv
fldcw
leave
ds
cli
xchg
mov
test
repz
xchg
call
fdivrs
ficompl
movsl
mov
test
inc
insb
imul
mov
mov
dec
mov
lret
sub
shrb
out
jnp
fsts
xor
mov
pop
mov
adc
sub
fs
xor
nop
rcll
ds
or
sti
test
movsl
pop
mull
test
pusha
in
mov
push
fdivr
hlt
movsl
or
sub
enter
popf
mov
inc
adc
xlat
decb
stc
arpl
fwait
sahf
and
or
cmc
dec
cmp
test
or
push
nop
dec
popa
jo
pop
int3
imul
push
mov
popa
ret
cld
rcll
add
pop
pop
fstps
sahf
cwtl
js
push
incb
loope
add
xchg
adc
xchg
sbbl
mov
add
setp
in
popf
inc
leave
divb
adc
shll
add
lret
jns
jae
inc
movsl
call
xchg
sbb
inc
cmpsb
xchg
adcl
fiadds
sub
int
lock
pop
xorb
js
and
jmp
sub
je
daa
cmp
mov
jg
into
ds
loope
xchg
incl
mov
dec
jno
cmpsb
fwait
lret
fs
adc
push
je
test
pop
push
mov
jle
daa
lahf
fisubl
fdivr
jno
and
or
xchg
es
inc
sub
jmp
jo
std
dec
test
inc
stos
pop
mov
sub
add
xchg
nop
inc
xchg
shl
cmp
int3
cli
or
mov
int
push
adc
dec
mov
cli
push
aam
call
je
nop
xchg
jne
out
out
bound
pop
cmp
adc
gs
mov
inc
mov
add
or
lcall
jmp
fnstsw
pop
jo
inc
lods
fbstp
lret
mov
lds
ja
and
xchg
addr16
lret
int3
fsts
mov
xor
lods
insb
mov
or
inc
sarl
fisubrl
inc
push
jg
cltd
lods
jl
adc
adc
inc
push
pop
js
or
lds
pop
outsb
inc
pop
push
inc
rorb
jo
push
loop
adc
movsb
test
int
xor
mov
dec
clc
std
movsb
and
sub
jns
add
mov
shrl
dec
scas
dec
ficoms
lahf
icebp
imul
xor
inc
jnp
add
stc
test
insb
push
pop
cmp
jne
sbb
or
xchg
mov
cmp
cmpsl
js
adc
imul
pusha
ljmp
mov
push
cmp
aam
mov
or
pop
mov
push
jp
add
add
pop
shll
cmpsl
imul
adc
aad
fadds
fsubrl
cmp
sub
pop
aam
lods
outsb
shll
cmpb
or
xor
dec
imul
jge
sbb
push
mov
sub
pop
or
andb
xchg
push
fadd
inc
sbb
call
pop
dec
push
mov
mov
std
mov
jmp
or
addl
std
addr16
inc
insl
sub
pop
or
or
nop
sub
notl
stc
xchg
ret
mov
inc
jo
xor
aad
incl
test
test
adc
cmp
not
insl
in
ja
cmp
sbb
out
fwait
add
mov
sbb
pop
adc
and
jae
lock
add
and
hlt
add
inc
jb
add
pop
adc
xchg
push
out
cli
sbb
cli
add
cmp
scas
cltd
or
pop
repnz
dec
rol
and
mov
ss
loopne
fcom
push
sbb
mov
enter
loopne
mov
lahf
pop
cmc
pop
mov
push
enter
jbe
arpl
sub
fsubr
xchg
mov
jo
icebp
or
xchg
loopne
mov
sbbl
dec
lcall
pop
out
push
xchg
jb
inc
mov
add
inc
xchg
and
adc
ljmp
adc
outsb
iret
orl
sub
mov
popf
lahf
mov
sbb
es
jbe
xchg
subl
out
or
and
mov
out
push
scas
xchg
loop
push
idiv
add
enter
std
arpl
lahf
push
lret
pop
push
sub
push
aad
pop
aad
jge
int3
insb
scas
rcr
mov
ret
pop
in
test
sbb
addr16
cmpsl
dec
je
outsl
jecxz
dec
xor
addb
cld
sarl
sahf
mov
jp
ret
adc
loopne
or
dec
fistps
lret
ss
cmp
xchg
pop
or
pop
cmp
lds
sbb
popf
xor
outsb
adc
jmp
out
fsubrs
adc
sbb
mov
mov
popa
popa
imul
jb
popa
divb
divb
and
xchg
outsb
cli
or
das
and
mov
push
push
sub
into
test
xchg
nop
and
pop
out
aad
lret
das
movsl
jne
andb
mov
push
lret
jmp
je
push
stos
xchg
sbb
je
push
out
pushf
cmpsl
std
test
icebp
or
jg
int3
enter
in
insl
stos
shrb
push
fidivrs
enter
mov
push
dec
inc
jae
push
das
into
icebp
sbb
mov
push
into
cli
or
or
push
sti
cmpsl
movsb
inc
stc
stos
fwait
adc
fsubl
push
mov
dec
dec
cli
orb
aam
jmp
imul
stos
mov
cmp
dec
outsl
cs
mov
cwtl
mov
push
cld
fidivrs
cs
fistpl
ljmp
sub
push
sub
xchg
leave
fsts
clc
mov
mov
testb
fnstenv
push
divl
xchg
xor
mov
test
jae
fs
ror
jb
pop
rcrb
cmpsl
mov
xorl
jmp
xorb
cmp
lds
sbb
lods
es
jb
lods
xlat
push
aam
inc
and
xor
loop
or
inc
add
pop
pop
loopne
jnp
and
int3
jae
or
jo
add
cmp
movsb
fdivrp
dec
test
xchg
cmp
and
pop
lret
inc
add
fisubl
js
lods
sbb
es
sub
adc
pop
out
jmp
xor
lock
lea
rcrl
inc
rcpps
cmp
rol
inc
pushf
xchg
cli
xchg
sub
mov
pop
push
fs
pushw
enter
push
xchg
cmc
push
or
popf
sahf
aas
cwtd
jge
or
gs
xchg
pop
push
repnz
mov
lea
push
push
push
inc
mov
out
rclb
add
jg
divl
lock
jb
es
inc
fs
jp
and
dec
pop
std
popl
push
insl
mov
push
enter
xor
mov
lods
jmp
and
les
push
jb
aaa
js
sahf
add
mov
push
jmp
jno
jge
hlt
cwtl
test
adc
mov
inc
in
and
add
imul
roll
mov
roll
outsl
jo
sub
test
dec
dec
stos
lods
sub
inc
adc
repz
inc
mov
cmp
loope
ljmp
xchg
pusha
ds
sahf
add
rolb
sub
repz
dec
pushf
in
imul
cmp
int
adc
add
mov
bound
jle
jp
cmpsl
stc
xchg
cltd
adc
xchg
jb
lods
cmp
sbb
call
jne
ficoms
fnstsw
xchg
cmp
push
mov
dec
arpl
push
add
pop
mov
nop
insb
les
xor
mov
jecxz
and
pop
lcallw
in
stos
jge
ficomps
adc
aad
es
fildl
dec
shll
jg
lret
aam
in
push
push
jns
push
inc
scas
xor
jnp
popa
adc
or
and
fxch
adc
mov
not
frstor
lret
repnz
into
xor
xor
inc
xchg
dec
add
push
jo
aaa
lcall
xor
pop
lock
dec
dec
mov
xor
inc
movsb
lds
mov
les
pop
or
dec
jo
push
xchg
dec
xchg
push
fnstenv
test
sub
aam
sub
add
jg
stos
rclb
push
dec
sub
and
insl
pusha
mov
sbb
sahf
dec
adc
in
andl
test
aam
popa
cmp
xchg
mov
lds
dec
jbe
mov
mov
rol
mov
xchg
testb
lcall
adc
push
push
dec
cs
mov
pop
test
xor
sbb
mov
repnz
cli
pop
js
sbb
or
js
daa
sub
enter
js
scas
push
xlat
lahf
cld
cld
sbb
xor
mov
cld
xor
sbb
out
iret
inc
aad
push
fs
mov
mov
fwait
ja
lods
mov
aam
fimull
push
jo
pop
or
orb
jle
scas
test
mov
pop
push
ss
int3
cmp
xor
cmp
jecxz
xchg
inc
sub
ss
cmpsb
ficoms
adc
cwtl
imul
dec
lret
clc
cmpl
jbe
pusha
fnstcw
nop
pop
mov
jb
inc
sub
push
sbb
bound
push
dec
inc
xchg
fdivrl
push
mov
push
ja
sub
sbb
xchg
or
in
ficoml
pusha
adc
mov
popa
fs
xlat
and
in
xorb
jnp
fsqrt
xchg
mov
mov
inc
or
das
push
repz
add
fimuls
in
or
jmp
or
xchg
lods
pop
sub
loop
mov
or
push
sar
setb
sub
jg
xor
xlat
push
inc
and
push
sarb
ljmp
xchg
cmp
lock
adc
xlat
in
test
mov
ss
js
mov
push
inc
lret
cmpl
nop
xor
aas
stos
sbb
js
lcall
push
repz
cmp
fstpl
lcall
insl
int
push
jp
sub
dec
in
mov
addl
outsl
xchg
mov
mov
sub
test
fwait
mov
add
and
cwtl
imulb
and
cltd
insl
mov
fadd
sub
add
into
cmc
insl
sub
repz
pop
xchg
std
mov
shlb
mov
lods
sbb
dec
inc
repnz
cmp
push
dec
iret
cld
ret
jp
adc
popf
sub
pop
jg
sub
xor
sbb
loop
mov
add
leave
repz
aad
je
addr16
or
pop
inc
loop
xchg
loope
in
aas
or
adc
sub
push
push
inc
shrl
mov
cld
fistpll
pusha
les
sbb
push
sub
dec
punpckhdq
inc
mov
hlt
lds
pop
push
stos
cmc
adc
jbe
fcoms
push
pop
mov
add
fiadds
inc
outsb
push
mov
add
cltd
add
and
sbb
pop
mov
test
andl
jmp
or
jp
popf
in
das
xor
mov
cld
fcoml
mov
outsl
cli
push
repz
bound
sbb
sub
and
ljmp
enter
aad
stos
mov
mov
cmp
sahf
push
dec
jne
xchg
test
stc
je
in
ss
jmp
xor
mov
mov
dec
fidivrs
cld
je
std
imul
pop
test
iret
or
xchg
cmp
push
loope
nop
jp
sub
dec
das
call
adc
mov
imul
addr16
xchg
or
inc
pop
and
inc
sub
stc
adc
int
mov
out
jns
lock
into
xchg
enter
shlb
push
sbb
dec
mov
outsb
mov
inc
mov
ret
xlat
jo
or
sbb
inc
pop
sbb
jl
pop
cmp
leave
insl
push
mov
decl
pop
sub
jmp
rcrb
iret
inc
gs
add
jge
jl
cmp
push
push
pop
cmp
jbe
adc
stc
push
js
cs
jg
adc
mov
testb
dec
dec
cmc
adc
jmp
stos
and
mov
xchg
aam
jo
adc
pop
aad
sub
push
mov
outsb
mov
loop
aam
pop
cmp
sub
loopne
aad
popf
mov
or
fidivl
xchg
lods
pusha
pop
mov
xorl
adcb
scas
jp
mov
pop
sbb
xor
fmuls
gs
push
push
xchg
mov
mov
push
adc
sbbl
and
daa
ds
sub
jecxz
pop
test
lods
mov
lret
jp
jbe
nop
inc
pop
ret
es
gs
rcrb
lret
in
cmpl
add
popf
mov
fcmovu
push
mov
cmpsb
cmp
fwait
jge
out
daa
inc
xchg
es
or
or
push
jg
mov
adc
cmp
add
push
jno
xchg
pushf
aam
xchg
loopne
xchg
sbb
push
mov
movsb
xor
inc
fldt
mov
push
pop
out
aam
xlat
leave
add
subb
push
repnz
ret
push
lret
in
pop
adc
xchg
push
pop
lcall
mov
data16
dec
sub
in
sti
mov
bound
shlb
fisttps
fiaddl
inc
and
pop
cmp
jp
jecxz
cmp
and
or
leavew
mov
andl
mov
dec
or
adc
mov
clc
clc
mov
mov
daa
out
jnp
mov
jg
adc
cmc
pop
mov
xchg
mov
xor
cmp
test
cmp
or
in
cmpsb
inc
mov
jno,pt
lods
mov
dec
adc
jl
sti
cmc
into
sbb
adc
cli
iret
lret
les
pop
pop
lods
dec
mov
xchg
aas
sahf
fdivs
rol
nop
daa
inc
scas
dec
adc
adc
adc
cs
jo
lcall
scas
enter
in
outsl
sbb
adc
hlt
sbbb
jmp
mov
lds
or
test
mov
ljmp
dec
sbb
push
repnz
sub
mov
into
out
and
jo
loop
add
push
outsl
test
xor
arpl
scas
mov
fwait
dec
nop
or
pop
jo
jmp
clc
fsubrs
jnp
lcall
xor
nop
aam
in
into
jns
insl
setno
adc
pop
into
fdivr
mov
add
pusha
lock
rol
xchg
cmp
pop
in
aam
orl
mov
or
into
add
hlt
fldenv
xlat
jns
or
arpl
adc
push
push
mov
cmp
cs
cmp
mov
addr16
xchg
fistps
aam
push
cld
xlat
jne
cmp
sub
test
inc
and
adc
imul
cld
shlb
mov
add
pop
dec
pusha
mov
fbstp
movsb
or
adc
pop
cld
fsubr
in
lcall
loopne,pt
push
jno
andb
repnz
xor
mov
dec
add
mov
test
jg
inc
fiaddl
imul
loopne
ljmp
rorl
ret
insb
and
jp
cmp
pop
das
push
in
push
fdivs
call
inc
cmp
adc
iret
dec
shrb
push
add
push
sarb
sub
xchg
popfw
je
and
sub
cmc
inc
ret
js
push
rcll
cltd
mov
lret
and
mov
into
iret
iret
dec
cs
xchg
mov
mov
aam
fisubl
popf
movsl
pop
mov
inc
mov
sub
adc
shrb
jg
and
xor
jecxz
cmpsb
jl
aam
jb
pop
adc
pusha
adc
popf
pushf
lret
mov
es
or
fstpt
sub
cs
imul
test
push
fs
xchg
inc
inc
fcomp
lahf
clc
push
pusha
push
ret
cmpsl
xorl
push
decb
ret
add
cmp
cwtl
clc
in
jge
add
xchg
stos
sub
int3
sahf
aas
aad
mov
sahf
popa
mov
mov
jae
lahf
dec
pop
es
push
in
int
shlb
daa
lea
addr16
call
xchg
dec
sub
push
daa
push
xor
popa
jg
jl
movsl
pop
stos
jge
push
adc
cwtl
leave
mov
cmpsl
mov
adc
imul
cmpsb
cmp
rep
pop
cmp
xor
xchg
inc
and
divb
in
sub
mov
rolb
cmp
mov
scas
sbb
loopew
rep
dec
add
mov
mov
sub
ret
pop
out
insl
ja
aad
inc
shrb
mov
and
lock
js
push
cli
inc
aam
sub
lods
sub
xor
sbb
lods
xor
sbb
xchg
and
or
fiadds
lret
xchg
je
inc
sub
sub
rolb
int3
sub
movl
jecxz
xchg
test
xchg
mov
pop
and
nopl
adc
icebp
or
jno
in
cmpsl
int3
cmp
jmp
jnp
jle
clc
popa
lcall
jne
mov
xor
and
and
sbb
ss
fsubrs
icebp
cmp
rolb
jl
test
je
add
adc
aaa
lock
orl
xor
ds
push
testl
lea
leave
push
dec
lds
cltd
xor
inc
or
cmpsb
xchg
cmpb
sti
js,pn
adc
imul
pushf
ds
inc
mov
imul
fidivrs
insl
mov
ficompl
fcomps
cmp
push
sub
xlat
cld
mov
cmpsb
or
push
and
dec
dec
pop
jmp
mov
dec
cmp
ret
jge
xor
fwait
and
insb
loop
jle
sahf
jb
bound
mov
xor
fadd
add
jge
sub
popa
dec
outsl
cwtl
ret
mov
xchg
xor
mov
or
lods
xor
xchg
inc
cli
dec
push
xor
fs
add
push
orl
mov
sti
es
sbb
jo
test
in
push
cmc
jne
test
fstl
stos
dec
push
cs
es
push
int3
mov
mov
stos
sbb
repnz
xor
sbb
inc
or
push
xchg
pop
jecxz
insb
adc
jge
and
cmp
or
fwait
xor
mov
cmc
cs
push
jle
arpl
jg
xchg
inc
js
aam
or
test
in
jnp
ljmp
aam
inc
push
je
das
imul
dec
test
add
push
adc
mov
pop
movsl
and
xchg
ss
popf
mov
testb
out
and
lcall
ljmp
inc
mov
push
dec
cld
in
cmp
push
mov
cmp
jno
test
adc
sbb
lock
fidivl
mov
xchg
cmp
jae
mov
sub
lret
movsb
adc
mov
fcompl
push
push
imul
incb
sub
push
xchg
pop
push
stos
nop
jbe
pop
and
push
sub
loopne
pushf
cmp
push
cs
jns
lods
inc
push
xchg
stc
push
xor
aad
mov
roll
shl
mov
lahf
xor
add
shrb
scas
daa
cltd
adc
add
in
scas
mov
push
xchg
mov
or
in
loopne
add
das
iret
mov
rolb
mov
dec
inc
and
and
xor
mov
mov
movsb
lods
or
enter
mov
shrl
hlt
push
aad
xchg
push
adc
add
dec
add
sbb
movsb
xor
add
sahf
mov
mov
cmp
out
shrb
bound
ljmp
and
mov
xor
les
mov
test
jnp
or
lahf
rol
mov
dec
aam
in
push
pushf
ljmp
dec
inc
lods
aad
out
incb
xchg
pop
dec
mov
xor
push
and
or
add
mov
adc
push
mov
and
ret
dec
or
jo
gs
jge
add
cmp
gs
into
mov
pop
cmp
add
lock
sub
or
jns
scas
xchg
jle
push
rorb
insb
lods
mov
aas
in
aam
jle
jg
movsb
lcall
hlt
add
mov
add
adc
lods
stos
popf
sbb
mov
mov
adc
jl
sub
cli
sbbb
cli
inc
xchg
jecxz
adc
mov
pop
stos
jg
mov
and
ja
in
roll
dec
arpl
lds
in
push
jae
cmp
repnz
xchg
push
inc
clc
popl
sub
pop
and
add
imul
jno
leave
inc
xchg
mov
cmp
dec
add
sbbb
dec
pop
mov
insb
sbb
inc
dec
pop
subb
jbe
xchg
push
pop
clc
xchg
pop
insl
into
out
push
pop
movsl
lds
lods
leave
and
mov
ja
mov
inc
fxch
out
into
sub
jge
inc
sbb
cltd
inc
cli
cmp
mov
adc
push
mov
dec
out
les
aam
pop
jge
lret
out
mov
lea
out
or
dec
dec
mov
inc
dec
xor
das
mov
in
out
ljmp
faddl
dec
pop
ror
dec
jbe
cmp
mov
ja
pushl
cmc
push
addb
cmp
add
gs
pushf
xor
aaa
xlat
paddb
mov
mov
popa
pusha
imul
jmp
mov
adc
in
xorb
or
adc
stos
int3
xchg
fs
mov
cmp
sbb
pop
outsb
dec
and
lds
lods
pop
test
add
out
mov
test
push
jns
xchg
mov
adcb
pop
xchg
push
cli
sub
xchg
lea
dec
fstps
fxch
std
jnp
push
inc
push
scas
call
scas
pop
frstor
mov
int3
stc
push
mov
or
movsl
insl
aam
sbb
and
mov
add
mov
addr16
xor
loop
mov
dec
add
push
frstor
xor
xchg
lret
std
enter
fmuls
into
pop
xchg
frstor
or
mov
sbb
aad
ja
mov
adc
mov
les
cmpb
push
mov
push
push
dec
mov
jecxz
and
and
pop
xchg
sbb
test
xor
mov
cmpl
lods
lcall
lods
cli
stc
rorl
popa
mov
les
lret
hlt
sysret
push
push
xor
arpl
dec
das
ss
lds
sbb
mov
repz
adc
lds
lahf
mov
pop
sbb
mov
adcl
fistl
inc
shrb
sub
jo
push
cld
and
leave
fs
hlt
mov
dec
dec
ljmp
addps
jae
clc
mov
jno
scas
lea
lcall
out
dec
push
push
sub
flds
out
and
and
shll
pop
sti
mov
movsb
in
and
fadd
movsb
add
dec
js
and
call
dec
xchg
push
sub
adc
jmp
adc
iret
arpl
imul
push
cs
mov
outsl
sarl
fadds
push
sbb
scas
pusha
jg
rcrb
fs
mov
dec
enter
push
enter
jl
ss
es
inc
pop
xor
jne
pop
push
mov
push
iret
cmc
pushf
les
pop
test
push
xchg
jmp
mov
test
stc
call
cmpsl
jbe
push
sbb
xor
in
mov
pop
pop
into
jl
mov
fldcw
ds
push
push
outsl
clc
mov
pop
cmp
loop
enter
cmp
out
cltd
inc
movsl
pop
jp
popa
sbb
fsubrl
sub
mov
and
mov
mov
loope
jl
push
jnp
inc
fstl
sbb
dec
mov
xchg
sub
dec
inc
sbbb
sbb
xor
icebp
cmp
pop
mov
jle
mov
xchg
pop
xor
arpl
test
sbb
cs
mov
add
push
jl
ret
xchg
out
dec
push
ljmp
mov
insl
into
jb
test
test
pop
ja
inc
and
sub
mov
pop
loop
pop
or
mov
lods
mov
ret
mov
out
pusha
lret
ror
mov
repnz
mov
or
lods
scas
addr16
sub
outsb
rcll
add
xchg
mov
fstpt
sub
fmull
pop
ret
mov
les
mov
add
gs
out
jmp
xor
adc
fs
and
inc
push
loope
push
dec
loope
popa
jb
add
add
sbb
cltd
xor
data16
leave
enter
andps
lds
lret
mov
test
mov
in
call
loop
test
mov
std
jae
imul
out
add
lock
xchg
stc
lods
mov
adc
fdivl
pop
push
in
pop
mov
lea
daa
mov
call
mov
add
push
or
push
adc
and
cmp
lods
lcall
jno
cs
adc
rolb
sbb
cmpsb
and
dec
mov
xlat
outsb
adc
imul
xor
xchg
mov
jmp
int3
jb
mov
mov
dec
push
push
and
inc
gs
je
insl
jnp
sahf
les
adc
push
popf
icebp
lds
sbb
aas
pop
jge
mov
cld
pop
pop
ljmp
cmp
pop
scas
int3
shll
mov
push
adc
loop
ljmp
pop
scas
pop
push
jg
aad
or
stos
push
mov
rorl
dec
in
data16
mov
int3
inc
inc
cs
daa
in
add
mov
fs
mov
and
mov
fs
js
nop
xor
ret
orl
or
cmp
add
pop
xchg
loope
dec
lret
ret
jp
sahf
out
sub
lahf
or
ja
xor
insb
scas
test
cld
and
jnp
daa
sub
mov
dec
jbe
mov
push
jbe
mov
cs
jo
loopne
mov
jge
loope
mov
out
cmpsb
movsb
mov
lret
add
pop
push
aam
push
es
xor
outsb
das
es
shl
sbb
sub
sbb
popf
fisttpll
dec
cmp
das
enter
aas
mov
sub
ret
iret
or
dec
dec
rclb
out
pop
or
sub
adc
cmp
bound
xor
adc
and
mov
and
movsl
jl
in
xchg
lods
lret
xor
jbe
mov
xor
mov
lds
lds
sarb
shl
int
adcl
sbb
mov
mov
mov
xchg
adc
stos
mov
jb
loope
movsb
add
push
inc
dec
jmp
ds
fisttpl
mov
ljmp
jne
lea
sbb
push
lret
cmp
fwait
cmp
fildll
sbb
iret
inc
sub
das
jno
rolb
mov
push
fidivrs
and
dec
outsl
fsubrl
lcall
bound
push
lds
sbb
and
popf
mov
ljmp
icebp
push
inc
aaa
fdivrl
in
jne
cmp
mov
push
cltd
nop
fwait
sarl
xor
sahf
sub
or
enter
movsl
aam
aas
imul
rolb
rcrb
mov
jl
or
popa
outsl
nop
mov
test
fdivrl
jae
negb
xchg
push
xchg
inc
lods
sbb
shl
enter
cwtl
sub
pop
and
sbb
pop
pop
sub
pop
sub
inc
in
call
pop
adc
scas
popa
or
repz
xchg
xchg
jecxz
push
inc
mov
in
movsb
hlt
mov
testb
fwait
insl
jb
loop
cltd
les
xlat
shrl
movsl
inc
outsb
in
aas
fldcw
mov
push
dec
in
enter
sub
aas
mov
fs
stc
into
subl
gs
dec
jae
and
cmc
jg
in
xchg
mov
xchg
in
adc
out
mov
aam
filds
in
arpl
mov
jle
sub
mov
loope
xlat
movsb
adc
mov
add
push
dec
and
scas
int3
pop
testl
mov
dec
mov
cltd
imul
and
clc
xchg
mov
fsubl
cmpb
inc
xor
and
and
add
hlt
push
mov
dec
pop
xor
outsb
rclb
dec
sbb
jae
pusha
sub
jle
les
add
and
scas
add
dec
sub
and
notb
mov
pop
fistl
cmp
push
mov
dec
xor
push
pushw
push
mov
xor
sub
cwtl
imul
jno
js
in
jbe
test
dec
add
imul
enter
ljmp
inc
pop
mov
and
dec
movb
sbb
in
push
xor
xor
mov
jg
jecxz
nop
sub
popa
ret
ret
mov
pop
jbe
add
mov
leave
ficoml
ljmp
mov
mov
and
push
sti
push
push
jl
mov
push
xchg
dec
addr16
sahf
push
mov
pop
mov
leave
adc
ljmp
ljmp
push
or
mov
and
sbb
push
shlb
push
jge
dec
inc
jg
sub
xor
test
adc
es
xor
xchg
push
rorl
sbbb
fwait
mov
mov
cmp
lods
fbstp
insl
fidivl
pop
mov
jns
sub
pop
jp
jb
sbb
push
ret
loop
mov
push
popl
aas
and
cwtl
mov
test
inc
inc
inc
inc
xchg
lahf
rcl
scas
sbb
jp
push
out
mov
sub
lea
iret
jo
cmp
inc
ret
sbb
fisttpll
movsb
fmuls
in
stos
movsb
fstl
add
jns
cmp
sub
mov
aad
daa
andb
xchg
outsl
jle
ss
adc
lahf
pop
arpl
jb
sbb
dec
pop
fistps
popf
pop
andb
scas
inc
pop
gs
cmp
popa
mov
mov
push
adc
jno
jg
cs
mov
adc
aad
fwait
add
cwtl
adc
xchg
push
enter
add
lds
subps
sbbb
bound
insb
inc
out
and
icebp
filds
adc
mov
sbb
pop
and
or
and
stos
lods
mov
adc
adc
mov
xor
ds
push
jns
dec
lcall
sbb
sub
pop
inc
hlt
xchg
jmp
loopne
lahf
fucom
xchg
jo
cmp
js
and
cmp
mov
enter
and
push
out
adc
dec
repnz
pusha
adc
xchg
bnd
xchg
stos
push
fsts
mov
inc
mov
mov
add
loope
pusha
adc
mov
cmpsb
sbb
sbb
stos
cmp
fwait
push
les
jae
inc
jno
push
andb
hlt
mov
mov
repz
in
popf
cwtl
sub
push
cmpsl
inc
jg
push
fnstsw
stos
fwait
mov
test
cmc
lock
sbb
pop
xchg
shrb
xchg
popa
sahf
xlat
mov
lods
push
jo
fwait
adcb
and
in
scas
inc
xor
pop
jge
mov
dec
mov
lea
mov
cmp
or
xor
imul
dec
xchg
mov
aaa
cmc
xchg
lea
xlat
sub
inc
and
inc
fcmovbe
jae
mov
popa
cmp
test
xor
and
out
xor
das
out
xor
cmp
pop
mov
ret
imulb
dec
jns
lock
xor
nop
adc
add
jmp
incb
push
je
fcmovne
xchg
pop
dec
aaa
aas
leave
xor
or
out
andl
push
or
stos
dec
xchg
andl
or
arpl
add
outsl
popa
pop
cwtl
fwait
outsb
shrl
fwait
sbb
cmp
inc
fnstsw
stos
mov
dec
pop
push
pop
pop
ljmp
xchg
loope
fstps
xchg
insb
sbb
mov
jmp
icebp
pop
sarl
ljmp
mov
push
add
or
es
adcl
rcrb
inc
lods
sub
mov
leave
xchg
lret
rolb
lea
ljmp
xchg
arpl
negb
aaa
lahf
push
push
push
bound
imul
adcb
xor
xlat
xor
popl
and
cwtl
xchg
scas
and
lods
mov
push
int3
cwtl
jg
and
popl
cmpsb
mov
xor
subb
popa
mov
push
mov
orl
xchg
sub
cmp
sbb
incb
in
nop
addr16
cmp
mov
jle
inc
or
xchg
divl
orb
lret
sub
mov
dec
call
mov
push
add
xchg
out
adc
or
pop
xor
andl
imul
adc
jp
leave
scas
jnp
push
psubb
movsl
ss
sub
daa
out
ljmp
inc
add
cmp
push
cmp
adc
cmpsb
js
divl
jne
and
mov
daa
in
mov
sbb
or
dec
push
dec
out
mov
iret
cli
fistl
loopne
in
mov
cmp
cwtl
in
lret
mov
not
cmpsl
dec
push
mov
pop
dec
jge
push
sub
fisttps
dec
int3
sarl
mov
lea
test
mov
inc
lds
in
pushf
dec
adc
clc
cmp
jo
andl
mov
jb
pop
and
sub
dec
xchg
mov
dec
in
in
and
std
push
movsb
cld
fs
clc
pop
add
mov
jl
adc
mov
lea
nop
mov
push
es
mov
cmp
sub
sbb
jne
movsl
jmp
push
adc
stos
pop
outsl
test
and
and
data16
sbb
push
pop
inc
stos
mov
push
push
fcompl
test
pop
pop
jns
pop
scas
or
xchg
dec
loope
loopne
jmp
iret
insb
lret
push
sbb
outsl
sub
mov
in
mov
pop
fstl
div
pushl
dec
xor
mov
dec
or
loop
push
xlat
adc
notb
out
adc
icebp
mov
lds
pushf
cmc
jle
das
jmp
adc
mov
out
cwtl
shl
xchg
into
push
call
mov
mov
enter
test
andb
rcrl
loopne
push
test
into
jmp
lock
sbb
movlps
fldcw
adc
dec
call
xor
dec
arpl
adc
mov
inc
mov
orl
addr16
popa
into
xor
sub
sbb
pop
adc
or
sti
dec
cmpsl
negb
shlb
xor
pop
xchg
xchg
xor
inc
xchg
scas
push
cmp
aas
std
xchg
scas
ret
jnp
pop
pop
push
sbb
jge
fs
ret
sbb
mov
in
xchg
dec
jb
cmp
adc
push
aaa
je
test
xchg
mov
cmp
sub
cmp
mov
loopne
je
jno
cltd
push
inc
jae
dec
bound
push
pop
jbe
test
sbb
adc
pop
ret
outsb
pop
or
int
rorb
adc
mov
out
add
sub
imul
sub
adc
or
xchg
xor
mov
loop
hlt
or
test
cmc
loope
sahf
xchg
mov
cmp
rorl
mov
adc
and
lcall
mov
jno
adc
repz
xor
jb
cmp
jnp
pusha
idivb
cs
je
ljmpw
cwtl
mov
push
mov
mov
testl
dec
mov
or
int
inc
xor
dec
gs
das
mov
or
mov
push
pop
mov
pop
clc
pushf
test
jo
fwait
gs
mov
adc
dec
inc
pmuludq
fldl
mul
or
fcomps
push
sub
das
test
lahf
mov
inc
xchg
lahf
pop
rcr
ja
push
lea
test
add
inc
fsubrs
repnz
dec
leave
gs
push
add
cmpsl
add
mov
add
stc
sbb
fisubs
pop
pop
jle
aas
scas
out
and
scas
adcl
ret
pop
lods
outsl
mov
xor
mull
stc
push
ret
iret
xorb
outsl
mov
mov
xchg
inc
xchg
push
js
dec
int3
adc
inc
lds
inc
fs
daa
loop
mov
dec
mov
adc
sub
fwait
dec
mov
mov
out
sub
repz
cltd
shrb
movsl
cmp
scas
js
xchg
inc
mov
repz
shrb
cli
inc
and
or
cmc
jl
adc
jl
mov
repz
int
add
aad
inc
rcr
sub
shlb
mov
imulb
mov
fwait
nop
dec
pop
icebp
jnp
jns
mov
mov
push
add
inc
fidivrs
xchg
loope
push
mov
jb
cltd
stos
push
dec
mov
mov
mov
mov
mov
dec
nop
hlt
inc
out
cld
mov
dec
stos
mov
sub
jmp
or
xchg
sub
mov
call
mov
lea
addr16
inc
iret
add
push
xor
insl
cli
xor
sbb
idivl
scas
repz
gs
mov
mov
mov
xor
inc
shlb
xchg
fs
call
xchg
jne
adc
fsubrp
subb
xor
rcrb
dec
xchg
add
outsl
popf
push
fcomps
adc
stos
and
mov
lretw
jnp
pusha
test
aas
fs
jp
movsb
push
test
ss
xchg
shrb
mov
sbb
xchg
sahf
and
in
rol
subl
roll
add
pop
int
mov
cpuid
xor
fucomip
in
out
pop
fucom
pop
and
call
jnp
sti
das
out
repnz
push
lret
movsb
and
adc
call
sbb
adc
mov
imul
loopne
fsubrp
push
popa
pop
pop
je
fcomps
sub
xchg
and
jl,pt
mull
xchg
into
lcall
sub
inc
outsl
sub
ja
ss
enter
decl
sbb
lods
pusha
test
sub
mov
sub
inc
sub
dec
push
sbb
jbe
and
jbe
scas
fdivr
fdivrl
repnz
lds
test
add
mov
xlat
adc
xor
lahf
mov
dec
ljmp
mov
adc
pop
lret
scas
adc
dec
scas
shlb
imul
ljmp
pop
sub
pop
into
lret
shll
loopne
jno
push
in
sub
xor
mov
lcall
xor
int3
mov
negl
test
sbb
test
or
imul
lret
xchg
mov
sbb
adc
pop
mov
rorl
and
icebp
push
lds
xchg
push
jmp
out
pop
jp
loope
mov
ds
inc
popa
xor
cli
xor
and
int
les
out
cmpsl
push
jg
int3
sbb
lock
sbb
mov
jp
std
mov
sarl
pop
jecxz
dec
pop
add
ja
fmuls
sub
xchg
mov
rcrl
sbb
add
lock
cltd
sub
aam
idivl
and
test
cmp
xchg
ja
xor
test
shrb
jo
inc
mov
jmp
add
std
push
sub
jns
mov
imul
repnz
xchg
or
jge
sbb
mov
or
mov
pusha
mov
sbb
popf
pop
fcomi
mov
enter
loope
ss
cmpsb
js
sub
add
cli
pop
rcrl
or
mov
test
pop
divb
cmp
mov
pop
cmpsl
iret
repnz
gs
hlt
jp
and
jmp
jno
cmp
in
push
mov
rolb
pop
lods
fnstcw
enter
jo
gs
cld
fwait
int
adc
mov
push
add
bound
lock
lds
repnz
fdivp
pop
lock
and
mov
mov
adc
mov
ds
dec
inc
xor
cmpsl
cwtl
loop
je
movsl
popf
imul
cmpsl
pop
loopne
push
aad
fwait
or
stc
stos
xlat
xor
and
sub
and
jb
js
nop
xchg
dec
cmp
bound
mov
popa
and
adc
andb
jae
and
pop
push
or
xchg
or
cld
insl
in
repz
cmpsb
add
outsl
inc
rorl
jo
xlat
pop
popf
cmc
jne
cld
outsb
mov
jno
sub
in
jecxz
lds
andb
xlat
or
jmp
adc
fidivs
pop
and
jg
cwtl
fwait
push
add
push
cli
lock
xor
aad
jae
mov
push
push
js
sub
pushf
subl
or
and
nop
lret
fdivrs
add
xor
cmp
jne
imul
lcall
cmp
sub
jae
jecxz
adc
mov
bound
ljmp
sub
jnp
sub
add
inc
in
es
lret
stc
mov
pusha
aad
sti
fidivrs
rcr
xchg
repnz
jae
or
popa
sti
jl
adc
jb
mov
dec
lcall
xchg
mov
cltd
or
or
insl
lods
add
pop
stos
es
test
and
aad
lcall
mov
imul
fidivrl
dec
jmp
arpl
data16
pop
lods
jnp
jae
scas
subl
arpl
ret
imul
mov
lds
inc
in
comiss
test
jae
push
cli
cmovne
rolb
scas
pop
jne
inc
mov
sbb
mov
push
sub
out
adc
or
out
inc
ljmp
mov
mov
dec
sub
push
jbe
adc
lahf
mov
push
and
xor
cmp
jecxz
or
les
in
cmpsb
xchg
cmp
cli
adc
or
jno
imul
jbe
test
mov
sub
mov
mov
mov
out
or
and
and
out
or
in
hlt
rcll
push
test
fsubrs
out
rcll
int3
in
enter
mov
mov
mov
add
jmp
xor
mov
cmp
sarb
adc
mov
leave
pop
sub
outsb
enter
imul
hlt
arpl
lret
and
pop
cmp
ds
bound
lahf
ljmp
and
in
cmpsb
push
dec
sub
mov
or
jge
fs
add
fstl
negb
outsl
aad
fisubrl
push
out
mov
arpl
sbb
sub
pop
lret
pop
dec
sub
inc
data16
mov
ljmp
addl
imul
cmp
xor
sbb
aaa
xchg
jle
fstp
lcall
inc
cmpsb
pusha
pop
add
jae
clc
add
stc
pop
aaa
pop
mov
jbe
pop
enter
shrl
popf
jnp
push
and
mov
jp
jmp
xchg
jp
ss
mov
out
sub
lret
sbbb
dec
add
cwtl
outsl
iret
fmull
xor
pop
into
das
jno
inc
sbb
jecxz
xchg
push
sbb
mov
jmp
mov
scas
nop
sbb
cli
cmp
loope
lods
or
sub
dec
repz
movsl
mov
or
jmp
jmp
inc
loope
pushl
xor
xchg
xchg
adc
push
fdivrl
leave
sub
mov
loopne
jae
rcrl
inc
sub
xor
jae
xor
fisubs
or
mov
mov
lahf
jno
in
addr16
lahf
daa
cmp
mov
lahf
jg
inc
adc
cmp
jno
xor
push
add
add
pop
mov
pop
setb
loopne
ds
shlb
dec
clc
mov
mov
xor
imul
pop
mov
sbb
cmp
lret
dec
sub
inc
xchg
sbb
dec
clc
es
pusha
loop
dec
lods
lret
inc
sub
imul
in
clc
sbb
or
push
inc
popa
pop
mov
mov
push
pushf
inc
sbb
push
inc
jbe
sti
insl
fbld
es
imul
insl
repz
inc
imul
xchg
mov
mov
daa
out
jnp
lret
ret
cmp
ret
test
pop
jns
testl
mov
pop
dec
in
jo
mov
hlt
lcall
mov
cmp
inc
push
and
test
xor
push
and
or
movl
mov
aas
sahf
fcoms
out
dec
ja
cmp
fwait
popf
inc
sbb
test
hlt
fcmovnbe
hlt
mov
xor
in
or
dec
or
add
push
sub
push
cmp
cmp
cmp
push
icebp
sti
fimull
mov
fwait
mov
mov
aad
sub
or
push
fbld
jge
dec
jecxz
xchg
fdivl
jge
outsb
sbb
jp
sbb
mov
sbb
sbb
adc
inc
ljmp
push
loopne
enter
xchg
dec
xchg
pusha
jne
mov
xchg
inc
xor
aaa
movsb
lods
cld
hlt
push
out
push
arpl
addl
jne
fildl
cmp
out
lret
jmp
imul
fwait
cmp
fwait
add
adc
and
xchg
lcall
and
sub
mov
test
jl
pop
test
xchg
scas
dec
sti
xlat
mull
fldcw
push
pop
in
xchg
mov
in
mov
and
out
sbb
jmp
xchg
xor
xor
mov
jp
sarb
lods
mov
xchg
and
xlat
lret
xchg
mov
insb
fdivr
sar
sbb
adc
pop
jmp
adc
lea
inc
ss
jp
xchg
and
popa
xchg
aam
cli
jle
pop
xor
sbbl
push
mov
inc
adc
loope
jle
sbb
push
inc
mov
andl
repnz
push
aaa
jns
adcl
push
push
arpl
sub
stos
sar
fbld
add
dec
out
movsl
xlat
je
or
cwtl
or
jns
pop
testl
dec
ret
sub
into
idivb
xchg
jge
inc
std
mov
xchg
fwait
mov
and
dec
or
adc
into
sbb
insb
scas
rcl
xchg
jmp
and
dec
popf
les
sahf
frstor
xchg
iret
lock
int3
ljmp
mov
shrb
inc
adc
and
push
sbb
popa
xor
ja
jo
ja
add
lea
adc
dec
neg
jne
mov
push
push
scas
nop
scas
or
lea
adc
mov
adc
dec
bound
je
xchg
jae
leave
pop
out
inc
popf
mov
mov
jle
add
test
jl
leave
jbe
or
imul
xchg
jl
jnp
enter
repnz
outsl
test
cld
add
push
xchg
xchg
call
cmp
aas
pop
test
xlat
mov
cmp
pop
enter
xchg
sbb
out
fmul
push
push
cmp
push
push
test
pop
and
pop
test
sar
sub
fdivr
jge
test
scas
jmp
aad
cmp
inc
adc
sbb
inc
mov
js
sub
jle
pop
sbb
fiadds
sbb
xchg
roll
ljmp
sub
push
cmp
push
sub
xchg
cmp
stc
int3
in
pop
jne
sub
push
push
sbb
cmc
imul
push
sahf
and
fwait
mov
int
inc
xchg
mov
pop
jge
mov
xchg
rolb
adc
jp
push
fisubs
cld
dec
inc
fcompl
insl
jecxz
push
jle
inc
test
mov
mov
loope
xchg
sub
push
sub
aam
pusha
shl
and
sub
mov
mov
sbb
cmp
push
pop
xchg
ja
sbb
xchg
stos
ja
shlb
push
out
fcoms
mov
aaa
inc
add
pop
push
adc
cwtl
lret
dec
fidivs
jg
push
xchg
outsb
mov
js
rorb
sub
adcb
sbb
inc
dec
and
je
lea
mov
and
sbb
shrl
or
adc
lahf
stos
pop
push
add
mov
jmp
push
or
dec
sti
mov
cmp
push
cmpsb
or
push
popa
push
fnsave
jle
jle
inc
cli
add
pop
push
mov
repz
and
xchg
dec
inc
jmp
push
push
mov
je
das
adc
add
or
jb
ret
imul
mov
sub
stos
xchg
fbld
lret
popf
lahf
test
add
rcrl
jo
push
pop
cmc
fsub
jns
dec
xlat
adc
cmp
inc
pop
loopne
or
mov
pop
loopne
jle
mov
ja
jnp
push
jb
cmp
dec
dec
repz
nop
addr16
dec
jmp
flds
adc
outsb
lcall
push
jmp
sub
cmpl
jnp
test
dec
leave
and
dec
dec
stos
leave
jae
mov
cmpsl
mov
rcrb
cwtl
fldenv
lret
out
mov
sbb
xchg
xor
jmp
mov
popf
cwtl
lcall
xchg
fisubl
imul
lock
push
adc
mov
sub
and
mov
push
mov
adc
pop
cmc
push
xchg
jecxz
fidivrs
jp
ficomps
imul
add
jle
sub
adc
std
jp
mov
cmc
outsl
or
mov
or
dec
mov
imul
and
jl
and
clc
sahf
push
mov
fs
mov
in
push
fcomps
dec
jle
adc
mov
imul
xor
dec
out
scas
aam
adc
addr16
xchg
and
fmul
mov
push
stc
fcoml
ljmp
call
mov
cmp
add
add
movsl
mov
loope
enter
inc
sbb
mov
ja
mov
clc
pop
mov
xchg
adc
xor
out
or
cli
jl
test
ret
arpl
jae
dec
lock
mov
push
or
shl
popf
inc
fisubrl
orb
adc
jg
mov
fisttpl
sahf
sub
in
lcall
iret
sub
cld
lahf
cltd
or
mov
push
decb
das
pop
jne
push
mov
inc
mov
and
or
loop
adc
fcompl
jp
cmpsb
roll
std
cmp
cmc
xchg
push
mov
push
dec
daa
cmp
lcall
pop
imulb
sti
adc
inc
int
and
fld
pop
ss
out
mov
xlat
shl
rolb
repz
dec
bswap
popa
mov
jg,pt
das
xchg
push
sub
mov
or
or
mov
mov
sbb
push
jp
adc
xlat
bound
mov
xor
xchg
je
icebp
test
sub
subb
mov
adc
mov
ss
loopne
out
add
adc
lret
cli
dec
xchg
out
and
jl
loope
out
fs
xchg
daa
shlb
rclb
jnp
sbb
rclb
outsl
xchg
push
mov
sbb
movsl
mov
adc
ljmp
mov
adc
add
sub
dec
xchg
popa
mov
sbb
jecxz
pop
fldcw
out
xlat
pop
push
aad
jo
rcrl
cmp
mov
imul
mov
icebp
stos
enter
data16
movsb
enter
fnstcw
cltd
and
push
inc
jmp
sub
push
fs
shlb
arpl
mov
and
cmpl
clc
mov
stos
mov
test
in
addr16
jb
cld
pop
jl
add
add
push
push
add
push
mov
scas
sahf
fstp
sub
aaa
push
idivl
jp
outsb
enter
rcrl
aaa
enter
ror
ljmp
orb
out
test
scas
dec
sahf
add
js
adc
jge
sub
outsb
cmp
push
mov
jle
adc
push
loop
icebp
sbb
ficoml
jmp
dec
dec
push
add
cmovs
iret
mov
sti
cmpsb
mov
jecxz
push
das
aaa
sub
mov
mov
bound
inc
dec
dec
mov
add
loopne
pop
ror
or
cmpl
push
jae
push
loope
pop
sahf
xor
mov
call
sbb
popf
mov
out
mov
frstor
dec
cmp
cmpsb
test
sbb
inc
cmp
inc
cmp
xchg
pop
cmpsb
push
data16
add
cmp
adc
divb
imul
mov
add
leave
mov
sbb
sbb
pop
inc
scas
out
sub
ficompl
sub
cltd
sub
cmp
cli
pop
adc
mov
fisttpl
push
sahf
or
pusha
adc
push
cld
and
test
xchg
int
and
pusha
xchg
stos
pushaw
cmp
xchg
jne
jno
fsubrs
sub
es
mov
sub
and
bound
lahf
sbb
pop
cs
sbb
insl
gs
dec
mov
and
loop
xor
movsb
push
test
push
add
int3
lahf
repz
enter
sbb
xchg
xor
mov
clc
xabort
lret
mov
jmp
mov
jnp
pop
popa
push
sti
int3
insl
jle
push
mov
mov
lods
fisttpll
pop
call
dec
push
insb
jns
lahf
popa
insb
sub
movsb
lock
sub
outsl
xchg
mov
movsl
bound
jg
xchg
dec
into
mov
and
vpmulhuw
int3
shl
scas
in
in
xor
out
xchg
je
sahf
pop
aam
or
dec
les
jo
sub
das
roll
jb
ja
fisttps
inc
jmp
mov
repz
scas
and
and
int
ja
and
aas
fldt
adc
jae
ror
aam
cmpsb
mov
adc
aad
dec
pop
call
inc
jl
popf
push
cltd
in
icebp
mov
xchg
popf
add
mov
xchg
dec
push
nop
and
dec
mov
xor
repz
call
push
lahf
mov
cld
sbb
stc
test
pop
call
std
mov
stos
cwtl
loopne
mov
into
std
xor
jmp
daa
and
lahf
sarl
pop
adc
pop
xor
shll
into
dec
add
nop
or
inc
pop
push
jno
inc
lds
pop
push
rcl
in
adc
or
jle
jae
xlat
jge
lods
mov
or
jb
xchg
mov
movlps
aam
xor
ja
sub
testl
push
out
out
add
xor
out
stos
inc
jns
orl
cmp
aaa
mov
adc
fiadds
adc
js
cmc
sti
call
mov
lcall
push
loopne
dec
inc
loope
cmp
mov
jbe
cmpsb
and
mov
outsl
cmp
dec
dec
je
mov
push
push
test
pop
push
repz
pop
push
in
push
xor
rsqrtps
mov
jae
addr16
clc
test
and
push
mov
jo
mov
fsubr
sbb
mov
pop
or
sti
out
xchg
daa
stos
dec
stos
sub
jne
pop
mov
out
shl
out
mov
adc
lods
inc
cmp
loopne
fnstenv
adc
xchg
jnp
stos
adc
add
daa
cmp
pop
arpl
ljmp
subb
xchg
jb
test
or
mov
test
decb
jl
mov
sahf
xor
cwtl
dec
mov
pop
push
aam
std
and
pop
add
movsb
outsl
jbe
cwtl
jne
adc
std
andb
jno
fidivrs
cmpsl
ja
cmp
scas
mov
repz
mov
pusha
lock
sbb
out
out
fldt
daa
add
outsb
int3
ja
roll
aam
pop
push
jo
popf
push
dec
call
insb
and
sub
xor
in
testb
test
popa
movsb
xor
sbb
daa
pop
insl
sbb
pop
leave
dec
outsl
ret
xor
pusha
xorl
pop
lcall
pop
movsl
xchg
rcrl
add
fwait
xor
sbb
gs
push
and
xchg
xchg
xor
jne
mov
sbb
outsb
jl
call
repz
mov
sbb
and
in
in
out
sub
dec
jae
rol
push
xchg
push
xor
rcrl
mov
xor
rclb
test
aaa
insb
push
mov
popl
sub
pushf
inc
xchg
inc
leave
aas
dec
mull
int3
shrl
xor
mov
or
gs
jbe
js
in
mov
push
shlb
shrl
cltd
cmpsl
stos
dec
dec
mov
movsb
notl
mov
pop
or
and
negb
push
daa
sub
push
jnp
rcr
loopne
xlat
add
test
add
jp
cli
mov
adc
idivb
push
loop
pop
out
jnp
mov
sub
push
push
arpl
cmp
in
bound
and
mov
sub
dec
fisttpl
shlb
sub
mov
inc
fsubrl
xchg
and
inc
mov
push
test
cltd
ret
and
jae
push
aaa
mov
movsl
test
xchg
pushf
inc
into
les
cmp
cmp
fsts
pop
movsl
adc
mov
ret
push
push
jo
in
sbb
xor
jl
jg
arpl
mov
xor
fcomps
cld
xor
add
das
cmp
dec
inc
mov
leave
clc
xchg
and
mov
dec
repnz
push
xchg
test
xchg
cltd
and
arpl
add
jae
xchg
xor
add
fisubrs
push
pop
and
xor
sub
mov
outsb
push
sbb
push
std
rclb
jns
or
sbb
xorb
push
dec
adc
inc
and
add
xor
mov
jmp
leave
dec
cli
dec
cmpsl
mov
dec
push
notl
repnz
cmc
fisubrl
add
pop
leave
or
jno
loop
out
adc
dec
mov
stos
test
sbb
sbb
test
push
fwait
lock
shl
mov
fadds
mov
push
es
xchg
jg
cmpsl
add
xchg
cmp
sub
mov
pop
out
mov
mov
sub
insl
jge
sub
cmpsl
jns
fidivl
mov
js
jns
push
int
dec
insl
int
and
ret
dec
inc
adc
xorb
movsl
push
and
sub
jl
add
popf
aaa
add
and
ret
arpl
add
daa
inc
lahf
insb
cltd
mov
push
scas
push
xchg
gs
jecxz
jge
adc
rcll
add
xor
sub
xor
lret
loopne
pop
push
pop
jmp
daa
mov
shl
pop
es
pop
shrb
in
pop
testb
mov
jno
xchg
push
lods
call
jecxz
lock
ljmp
mov
mov
ror
mov
test
jnp
mov
aas
popf
popa
xor
ljmp
std
ret
hlt
lods
xchg
aam
jl
scas
cmpsb
xor
lds
testb
xchg
sbb
mov
lods
push
xchg
test
imul
and
inc
popf
adc
loopne
movsb
lret
push
jl
mov
mov
xorl
pop
jnp
pop
fisttps
insl
push
aas
mov
add
aad
or
push
ret
pop
mov
lahf
mov
xchg
cld
jmp
and
push
lods
jns
leave
popf
push
mov
add
jne
cwtl
insb
fdivrs
pop
add
cmp
mov
jecxz
xchg
mov
dec
addl
mov
jns
je
std
pop
pop
mov
mov
push
xor
cmp
push
in
cltd
mov
ds
adc
mov
and
and
test
xchg
lock
fnsave
scas
add
dec
xchg
or
inc
cmp
inc
mov
xchg
jno
add
or
testb
cmpl
lock
adc
or
sbb
stc
lock
inc
leave
mov
push
sbb
inc
imul
jne
add
jp
push
xchg
mov
inc
stc
lret
sub
cwtl
cmpsb
fstps
movsl
lods
movsb
adc
or
cmpsb
pushf
orb
push
pmulhw
jnp
testb
rcr
bt
pop
xlat
in
cmc
scas
dec
ja
xlat
int3
inc
enter
push
call
sbb
mov
inc
xchg
cs
aad
jns
scas
adc
mov
xor
inc
insl
cli
cmpl
cmp
test
scas
sbb
repnz
sti
push
cmp
push
lea
popf
cmp
test
mov
and
mov
and
mov
sbb
sub
push
mov
sarb
cmp
call
jo
in
or
in
push
jecxz
and
mov
iret
ret
pop
enter
shrl
lods
lret
pop
add
mov
insl
pop
sbb
or
cmp
ret
sub
in
push
adc
pop
inc
push
roll
andb
adc
repnz
scas
sub
repz
sub
and
inc
rolb
add
inc
test
scas
movaps
mov
inc
pop
icebp
dec
push
push
mov
or
mov
adc
add
adcl
and
out
rol
xor
jp
mov
cbtw
and
push
pop
fsubl
xchg
cmpsl
sub
movsl
and
lret
dec
fs
in
out
mov
int3
daa
cmpsl
insl
mov
cmp
pop
or
pop
jns
cltd
dec
inc
roll
lods
mov
mov
ss
sub
push
int
mov
stc
mov
stos
mov
dec
sti
outsb
fldenv
das
dec
fisubrl
lea
xlat
cmp
imul
mov
insl
imul
aam
int
sbb
jo
jmp
adc
inc
ds
add
sub
insb
lods
add
sub
inc
mov
or
das
loopne
jle
adc
popa
sbb
pop
loopne
push
daa
out
mov
leave
sub
cmpsb
and
rol
adc
and
fisubrs
sbbb
fbld
lea
dec
mov
push
xchg
mov
nop
repnz
out
cmp
mov
push
sub
jmp
sbb
subb
mov
xchg
mov
in
sub
dec
push
adc
jmp
es
sub
mov
sbb
enter
insl
mov
loopne
sti
jne
sub
pusha
std
sbb
fwait
aad
mov
gs
inc
inc
imul
mov
adc
xchg
adc
jge
mov
push
push
pop
push
mov
pop
fs
jg
mov
addr16
out
inc
into
jo
cltd
pop
fs
stc
out
outsl
jb
fmull
lret
and
rorl
push
xor
divl
cmpsl
push
stc
cmp
js
cwtl
ds
scas
or
xchg
je
inc
cmc
mov
lret
scas
dec
pop
into
iret
xchg
jb
mov
movsb
inc
mov
jge
inc
mov
ljmp
jae
test
shr
aam
mov
xor
add
xchg
sub
and
add
cld
mov
inc
filds
fsubrs
into
xlat
fsubp
addr16
mov
lea
cmpsl
fs
mov
ljmp
jno
and
pop
addr16
lahf
add
and
pusha
push
adc
xor
mov
lahf
sbb
sub
cwtl
push
adc
or
xchg
fbld
jno
stc
int
out
pusha
xchg
mov
std
cs
test
in
xor
out
lret
mov
mov
jle
repnz
push
in
test
ljmp
mov
mov
xlat
ss
cs
or
mov
mov
cmpsb
and
adc
scas
cmc
or
fadds
cltd
xor
ss
pop
mov
pop
sti
pusha
push
xor
outsb
xchg
mov
int3
xlat
mov
loop
outsb
cs
aas
ss
flds
inc
mov
sub
aad
adc
xor
mov
fisubrl
lods
and
xor
xchg
add
dec
lock
jne
push
bound
mov
sbb
imul
push
sbb
push
lret
mov
sbb
cs
test
int3
push
mov
mov
mov
test
or
sub
notl
test
repz
sbb
mov
xchg
imulb
fisubs
dec
mov
rol
test
mov
pushf
xor
imul
add
xchg
sbb
scas
push
and
lock
int3
int
jbe
mov
pop
jmp
jno
or
inc
push
in
test
jns
jg
push
sahf
mov
cltd
rorl
add
in
loop
cmp
popf
or
test
or
mov
bnd
cmc
scas
aad
add
mov
pop
ds
push
jbe
icebp
xchg
lock
ja
mov
dec
adc
inc
or
xor
les
es
lahf
jo
lds
sbb
lea
push
cwtl
and
mov
pop
aas
fwait
movb
mov
out
cmp
subb
lods
jo
jmp
int
hlt
rcr
test
xor
mov
mov
fwait
adc
cmp
pop
in
cmp
push
into
popa
fs
add
or
pop
je
andl
out
or
out
mov
xor
in
jmp
push
aad
std
inc
sub
cmpsb
fisubl
xchg
in
mov
out
mov
cltd
addb
or
dec
xor
mov
rorb
add
mov
ja
xchg
sbb
scas
popf
dec
aaa
xchg
call
inc
add
stc
sbb
scas
out
or
lock
movsb
inc
adc
mov
mov
jne
pop
std
mov
push
push
loopne
out
dec
mov
fsts
outsb
test
pop
pop
push
adc
pushf
outsl
cmp
lret
lret
jo
sbb
rcrb
sub
inc
inc
aad
xor
pusha
sbb
cltd
int
pop
ds
inc
adc
aad
into
es
jmp
sub
test
imul
cli
xor
adc
cmp
out
jb
jbe
cmpsb
cld
insl
mov
sub
jnp
sbb
xor
pop
xchg
mov
lcall
dec
movsl
out
xor
or
out
mov
fs
ss
repnz
pop
mov
jl
aam
cli
rcrl
add
bound
or
push
mov
cwtl
data16
out
fldcw
mov
pop
scas
inc
pop
mov
inc
pop
jbe
jnp
xor
xorb
jne
addb
add
mov
hlt
lods
dec
repz
ja
test
inc
add
mov
add
mov
pop
scas
fcompl
clc
arpl
add
popf
jbe
addl
fs
imul
rorl
mov
sbb
testl
mov
push
jmp
adc
mov
sub
and
lds
push
aam
in
rcrl
dec
jne
in
icebp
out
mov
adc
dec
mov
sub
cmp
push
jg
jg
stos
inc
add
sar
mov
mov
stos
fs
xor
mov
mov
lret
mov
lret
rol
sub
push
dec
push
loopne
inc
fstpl
outsl
inc
lahf
in
adc
jne
xchg
movsl
lods
cmp
or
sbb
mov
jp
inc
sub
inc
jno
xchg
ret
cmp
cmpb
xor
pop
dec
sarb
insb
jmp
stos
aad
int
leave
and
adc
rclb
mov
mov
ljmp
int3
xor
rolb
xor
inc
add
das
cmc
add
inc
andb
xchg
mov
rol
shl
aas
xchg
sbb
mov
add
lds
xor
aam
sbb
test
cmpsb
cmpsl
sbb
lahf
out
rcrl
mov
sbb
stc
sub
icebp
rcrl
imul
or
xchg
xor
xchg
jo
fimull
out
psubusb
loopne
sbb
sub
loope
std
sbb
jle
imul
iret
mov
je
dec
push
int
jl
sbb
leave
fwait
in
fimuls
out
dec
cmp
mov
imul
xorb
orps
jo
push
jnp
gs
sbb
sbb
out
pop
sbbl
imul
add
cmp
ss
add
pop
cmp
cmp
jo
pop
ret
sahf
lcall
push
daa
cli
pusha
and
and
mov
mov
jns
sub
cmp
sub
mov
roll
push
repnz
pop
jecxz
add
add
ds
add
ds
scas
inc
jno
mov
jg
push
xlat
out
ds
js
push
lret
gs
loopne
push
or
mov
and
jl
sub
or
pop
clc
pop
xchg
mov
cmp
sti
loop
loopne
and
xor
cmpsl
rcll
push
push
lret
insl
mov
enter
pop
call
mov
pop
leave
add
ret
jbe
sub
std
mov
ljmp
lret
es
mov
fwait
push
xchg
push
stos
movsl
lea
fsubrl
bound
inc
daa
xor
testb
ds
lcall
pop
adc
add
js
xchg
jmp
jle
sbb
xorl
lock
sub
shll
addr16
adcl
add
jae
xchg
and
xor
inc
jecxz
out
and
lret
addb
cs
outsl
xchg
jnp
aaa
cli
mov
pop
pop
fildll
popa
imull
movsb
mov
sbb
xor
jns
mov
mov
ret
movsl
jo
and
cmc
stc
mov
aam
shrd
imul
adc
test
sub
stos
in
jns
or
cmp
lods
fistpl
and
out
sbb
add
sub
notb
cmc
mov
aas
cmp
jnp
es
and
mov
je
inc
dec
add
ljmp
push
pop
jg
pop
flds
in
add
mov
mov
shr
lods
leave
xchg
jl
cwtl
fisubrl
push
or
and
sub
xchg
subl
fucomi
adc
sub
sbb
cld
xor
inc
rclb
add
mov
jecxz
add
testb
dec
outsl
out
adc
dec
aam
ds
pop
call
insl
adc
lahf
mov
test
in
loopne
outsb
add
rcrl
mov
mov
pop
shrb
fidivrs
orb
mov
pop
jmp
jbe
xor
pop
shrb
xor
mov
or
in
insl
sbb
mov
jge
dec
mov
lcall
sub
aas
fdivrl
mov
and
sbb
aaa
xor
gs
mov
stc
lret
fcmovu
xor
decl
sbb
adc
clc
cs
hlt
cli
mov
addr16
scas
cmpsl
mov
ja
rclb
adc
bound
movsb
lods
or
test
mov
pop
filds
mov
or
enter
fisttpll
xchg
add
push
push
pop
add
xor
in
push
stc
pop
fldenv
fsubrs
sahf
das
andb
push
dec
jbe
jns
mov
and
imul
ds
fiaddl
jo
leave
sbb
xchg
or
and
pop
fldenv
xlat
or
jecxz,pt
mov
push
pushf
inc
ret
into
rcrl
mov
sub
adc
dec
into
sti
inc
sub
add
adc
inc
scas
jns
mov
imul
push
bound
xor
lds
iret
jle
es
shrl
out
or
adc
lret
sbbl
subb
out
mov
rcll
sahf
cli
pop
fimull
jb
mov
cmpsb
dec
xchg
add
fwait
gs
nop
outsb
push
and
cltd
jnp
mov
or
jge
je,pt
dec
ret
sahf
cmp
dec
bound
inc
pop
jnp
scas
call
nop
inc
jge
rorb
cwtl
xchg
cmp
or
cld
jg
hlt
dec
repnz
pop
cld
out
ficoml
std
cmp
lret
push
push
cmp
int3
clc
mov
xchg
ljmp
mulb
mov
out
shll
data16
ljmp
jno
subb
cmp
fsubs
jmp
fcom
push
stos
in
int3
imul
adc
movsl
je
push
into
mov
xchg
adc
hlt
xchg
sarb
and
cmc
pop
ss
data16
push
xor
lcall
cltd
xchg
cmp
ja
pop
cld
jp
pusha
out
cmp
add
scas
xchg
es
mov
int
jnp
and
push
jmp
popf
or
mov
pop
adcb
sti
sbb
mov
mov
jl
inc
scas
xchg
ret
test
pop
and
cmp
call
mov
fisttps
pop
movsb
stos
xchg
out
adc
hlt
dec
mov
fpatan
adc
imul
lcall
lret
iret
popf
inc
out
in
popa
into
mov
dec
jg
mov
xchg
jne
jne
cmc
jl
les
iret
testb
adc
jbe
lahf
loopne
adc
xor
sbb
pop
mov
lret
pusha
xchg
dec
dec
in
popa
inc
stos
and
dec
aaa
lret
jge
jl
shll
jl
in
movb
push
xchg
ja
cld
mov
sub
je
jecxz
mov
lahf
cmp
test
xchg
and
hlt
or
pop
lods
dec
cld
cmpb
sbb
les
adc
adcl
aaa
dec
pop
stos
fisubs
pop
lods
xor
xorl
adc
jnp
or
inc
aaa
mulb
push
mov
push
call
add
jecxz
fimuls
sbb
xor
shlb
mov
lds
xchg
aaa
sub
xor
fimuls
test
test
adc
mov
pop
je
ss
mov
mov
adc
rcl
pop
aaa
inc
loopne
out
xchg
jmp
hlt
cmpsb
pusha
dec
test
sbb
inc
mov
ret
xchg
dec
int
bound
lods
adc
and
sub
bound
in
mov
and
test
notb
mov
jge
das
push
mov
pop
pop
lahf
fsts
push
sub
xor
shrb
inc
xchg
movsb
jg
adc
clc
movsl
add
bswap
fistl
xchg
loopne
icebp
sub
in
iret
nop
inc
xchg
push
mov
xchg
add
push
pminub
xchg
imull
mov
bound
dec
cltd
es
cli
adc
push
loope
or
fs
popf
lods
sbb
sbb
clc
pop
push
scas
stos
push
rolb
sbb
xlat
dec
and
shl
dec
or
and
mov
ret
inc
inc
jl
sbb
add
mov
leave
ror
cli
cltd
adc
xchg
fcomi
popa
mov
pop
fxtract
mov
rcrl
jmp
inc
shll
lea
or
pop
mov
ret
jae
nop
js
dec
sub
cs
pop
mov
mov
loope
mov
xor
scas
lea
mov
testb
fistpl
cmp
jno
push
rolb
lret
les
inc
aad
mov
scas
std
add
pop
lods
cmpsb
sub
xor
add
sub
push
mov
insb
dec
ds
pop
adc
xchg
test
sbb
arpl
or
xchg
fstp
push
cwtl
dec
sbb
xlat
xor
pop
jle
cmpsb
mov
sbb
mov
lock
mov
mov
shl
aam
sbb
aad
lods
fld
sahf
push
enter
decb
lahf
nop
jo
out
lahf
in
push
mov
lods
and
cmp
cmpsb
lods
cmp
notl
mov
push
iret
xor
in
pop
jmp
movsl
adcl
test
sbb
repz
adc
and
pop
push
pop
test
movsb
lock
lcall
inc
gs
inc
pop
or
jmp
jp
push
icebp
out
mov
inc
add
out
pop
ret
inc
js
sahf
scas
inc
dec
outsb
pop
mov
sub
push
enter
inc
mov
insl
bound
mov
shl
xor
rcrl
mov
es
xor
test
or
outsb
aad
shl
cmc
mov
shl
jl
push
mov
push
outsb
scas
sbb
pop
ss
daa
scas
xchg
mov
inc
shrb
cmpb
and
fistps
leave
push
test
roll
xchg
cmp
mov
jne
push
xor
std
ret
jb
outsl
andb
imul
fs
insb
mov
je
int
sbb
loop
dec
xchg
mov
pop
pop
gs
pop
mov
mov
daa
daa
jbe
faddp
lret
mov
mov
jne
outsl
jg
pop
inc
testl
sbb
aaa
imul
cmp
mov
or
outsb
and
mov
arpl
pushf
pslld
addr16
insl
lcall
push
dec
jmp
sub
or
lods
cld
xor
rorb
cli
fsubs
jns
xlat
or
mov
xlat
fdivl
clc
dec
sahf
popf
adc
dec
mov
adc
mov
insl
jbe
jg
sbb
mov
sarb
or
dec
xchg
stc
popa
push
sbb
dec
mov
fwait
jg
mov
int
fwait
arpl
imul
jl
jmp
sub
xchg
loope
jmp
je
adc
adc
inc
xchg
pop
pushf
in
call
mov
xchg
xor
push
mov
and
roll
push
mov
xchg
mov
lcall
inc
xchg
fwait
shlb
sub
mov
arpl
dec
xor
sub
cmp
adc
movsb
mov
pushf
lret
jns
and
xchg
dec
push
mov
add
fisubrs
sbb
test
stos
pop
roll
dec
js
xorl
push
movsb
push
shll
shll
mov
imulb
push
hlt
sbb
outsl
nop
scas
inc
jl
scas
in
mov
cmpsl
and
and
inc
cmp
mov
imul
cmpb
jp
std
clc
adc
dec
lahf
orb
pushf
jno
jle
in
pop
aam
or
dec
inc
je
insl
stc
rolb
movsl
ficoms
push
sub
jb
int
loope
cmp
jp
cmpl
test
in
sub
cmc
xchg
pop
imul
xor
sbb
or
push
outsb
xchg
sahf
mov
adc
lret
ret
jo
push
enter
lea
pop
pop
inc
aam
xchg
pop
jne
mov
fstp
es
and
dec
leave
imulb
lock
fst
cmp
jae
pusha
pop
out
stc
push
pop
out
mov
rcll
sub
rcl
and
mov
jns
test
mov
add
mov
popf
push
fnstsw
inc
push
sbb
jmp
mull
lds
jne
or
inc
pop
aas
fs
adc
sub
aas
jno
rcl
adc
ror
movsl
rorl
jae
aad
scas
xchg
sbb
xchg
or
std
sub
push
xchg
call
enter
dec
inc
cmp
push
cmove
stos
push
sbb
push
inc
xlat
popa
xchg
sub
loope
daa
fiaddl
cltd
and
push
mov
jle
insl
jl
aas
adc
mov
add
mov
jno
mov
sub
fildl
aaa
sar
cmp
inc
aad
and
push
mov
inc
push
in
les
mov
adc
pusha
push
ret
in
mov
xchg
test
fmulp
jmp
leave
cltd
cmpsl
sbb
stos
dec
xchg
cs
lods
xchg
adcl
in
loop
call
das
mov
mov
je
adc
mov
sahf
aaa
dec
xchg
popf
jb
push
pushw
rcrb
xchg
fsts
shll
loop
movsl
stos
dec
test
cli
or
dec
pop
inc
adc
lcall
pop
int3
add
push
adc
pop
fcomi
cmp
negb
xchg
mov
adc
mov
sbb
mov
inc
ror
cmp
push
stos
adc
jns
push
add
cmp
mov
push
daa
cmp
enter
xlat
sub
es
xlat
and
imul
in
ja
clc
js
inc
mov
fld
lret
rorl
fdivl
leave
lret
iret
shrb
mov
jbe
lret
fisubrl
and
dec
xchg
jmp
push
fdivl
rclb
sub
sbb
shlb
imul
inc
fimull
addr16
aas
aas
stos
test
mov
push
daa
sbb
pop
test
movsb
xlat
jmp
or
pop
pop
add
cmpb
repz
dec
dec
call
imul
aas
int3
push
movsb
mov
adc
xchg
sbb
inc
shll
into
xor
shr
outsb
mov
xchg
jle
es
inc
cmp
pushf
mov
int3
sbb
stos
dec
mov
mov
mov
sub
mov
mov
jecxz
add
sub
xchg
mov
dec
mov
push
xchg
dec
cs
adc
inc
push
scas
stos
orb
adc
jl
fdivrl
in
outsl
je
jno
pop
dec
push
xor
dec
mov
sarl
xchg
js
xchg
jg
outsl
in
sbb
fdivrs
push
in
mov
scas
rcrb
dec
imul
inc
inc
sahf
ljmp
scas
xor
xor
cmp
fistpll
dec
clc
jbe
xchg
mov
xchg
jge
lock
aaa
cmpsl
cs
lea
dec
push
addl
jge
jae
std
push
push
mov
aas
lahf
jle
mov
pushl
and
shrl
xor
in
je
mov
mov
adc
mov
mov
and
fnstenv
mov
nop
jb
and
jmp
mov
inc
pop
testb
inc
scas
bound
add
and
sub
adc
add
sub
paddusb
push
pop
dec
into
test
xchg
cs
push
pop
ja
das
lock
cmp
push
insl
stos
rcll
and
cmp
cli
push
xlat
fisttpll
das
sti
adc
mov
mov
mov
repz
icebp
cmpsl
out
jg
xchg
mull
sbb
mov
mov
or
push
sbb
std
repz
xchg
pop
sar
mov
repz
adc
inc
add
xchg
outsb
ffreep
lret
aad
test
mov
and
mov
or
add
push
ret
jb
pop
frndint
repz
mov
iret
imul
ds
fcoml
loopne
imul
xlat
adc
inc
mov
mov
push
enter
ret
lods
movsb
mov
adc
inc
mov
jecxz
dec
ds
les
mov
fisubrs
pop
xchg
loope
push
fmuls
dec
dec
or
mov
lret
ror
decl
pop
dec
inc
sbb
mov
sub
sub
push
gs
mov
jb
or
push
cmc
addb
xor
push
pop
mov
mov
inc
clc
stos
adc
jle
mov
mov
in
daa
adc
mov
mov
or
add
dec
cld
mov
andb
test
addb
mov
orl
dec
jp
out
fimuls
cmp
cmp
js
cmp
mov
and
add
xchg
xor
gs
lret
pop
aad
or
lret
pop
cmpsl
mov
aaa
mov
pop
aaa
aas
ljmp
xor
jbe
mov
ret
push
mov
pop
ja
outsl
and
inc
or
ja
mov
jo
sbb
ja
loope
adc
dec
add
in
in
pushf
jae
scas
add
loopne
or
mov
addr16
push
push
cmp
dec
xor
aas
and
and
mov
into
inc
icebp
xlat
jmp
cltd
lcall
dec
aam
and
fwait
jecxz
jns
sbb
mov
lret
jo
dec
mov
enter
insb
out
into
xchg
fsts
xor
daa
mov
arpl
rcl
dec
xor
insb
cmp
adc
mov
dec
pop
test
pop
das
cmp
movsb
sti
jecxz
jg
arpl
mov
jp
xor
jne
mov
pop
push
mov
sti
icebp
xchg
je
dec
and
pop
sbb
lahf
out
lods
fcoms
xchg
jmp
lea
sub
jge
push
sbb
jnp
xor
sbb
out
or
sbb
mov
fcoml
aad
lods
xor
loope
dec
in
negb
and
jl
fidivl
add
dec
in
test
call
ljmp
inc
in
mov
add
movsl
rolb
lods
shlb
int3
dec
gs
fwait
repz
add
sub
jle
cmp
fwait
std
out
mov
out
dec
es
inc
aam
jnp
loope
fs
cmp
jnp
xchg
sub
jmp
comiss
mov
int
fwait
mov
lock
pop
jmp
std
or
push
dec
or
xchg
cli
or
xchg
je
mov
mov
nop
pop
jle
sub
mov
dec
push
sub
mov
push
jmp
xor
xchg
or
ret
lret
scas
xchg
mov
push
and
rclb
mov
xor
je
jecxz
fnstsw
pusha
iret
popa
popa
jae
cli
inc
jns
xorl
and
fistpll
lea
cmp
adc
adc
rcl
outsb
loop
stc
sub
xor
shl
or
fsubrl
xor
test
test
clc
sti
jnp
addb
mov
pop
cmc
push
cmp
or
nop
movsl
or
xor
stc
loop
testl
xor
cmpsb
pop
or
cmp
pop
adc
aad
sti
out
mov
xor
and
in
xlat
int3
cli
sbb
out
sbb
negb
push
jae
sar
and
lcall
mov
mov
and
pop
enter
jno
in
pop
mov
mov
inc
dec
shlb
test
lods
les
jmp
add
test
cmpl
jg
hlt
pop
ret
lret
stc
mov
dec
mov
dec
stc
cwtl
inc
aaa
cltd
hlt
dec
pop
sbb
push
xchg
icebp
lea
movsb
dec
sub
dec
call
fucomip
enter
dec
ds
cltd
pop
lahf
xor
pop
sbb
shr
push
es
jle
cmpl
fsubr
dec
repz
pop
fisubl
add
add
int3
rclb
and
gs
and
cmp
aaa
cmc
cmp
ds
lock
xor
mov
and
test
xor
mov
sbb
inc
clc
stos
mov
cwtl
sbb
cltd
lock
xchg
mov
inc
sub
add
outsl
pop
jne
xor
mov
pop
pop
daa
addr16
lret
aas
push
mov
dec
cli
fbld
aaa
pop
xchg
sbb
pushf
out
adc
mov
pop
movsb
sbb
dec
aam
movsl
or
jl
pop
sub
xchg
into
shrl
push
xchg
push
iret
dec
hlt
mov
clc
mov
neg
dec
bound
popa
adc
lcall
aam
sub
jmp
sub
and
inc
rcr
loope
mov
xchg
imul
ljmpw
fldl
xchg
lret
insl
cmp
push
inc
xchg
add
xor
lret
jecxz
aas
hlt
xchg
lea
pop
or
jge
mov
sub
mov
movsb
leave
or
in
or
mov
fucomip
xor
pop
add
xchg
sub
add
enter
repz
jne
addb
xchg
xchg
into
jl
or
mov
jle
dec
adc
pop
fstl
mov
push
arpl
push
shrb
add
sbb
mov
mov
dec
scas
inc
daa
out
das
pop
es
das
cmp
jl
dec
outsb
jb
shll
outsl
jnp
cmpsl
rclb
push
inc
xor
and
in
xchg
or
or
outsb
jmp
sahf
sarb
das
mov
test
sti
sbb
push
unpckhps
sbb
cwtl
lcall
in
shlb
mov
inc
dec
sub
pop
dec
mov
mov
cmpsl
or
test
cmp
mov
push
repnz
jg
push
repz
call
loopne
pop
aaa
push
test
inc
jns
lds
das
jg
cmp
scas
fidivs
and
xchg
jo
sub
adc
mov
mov
popa
push
lea
dec
je
stc
mov
dec
mov
inc
adc
dec
stos
push
mov
cmp
insl
adc
jnp
jae
jns
scas
aam
sub
clc
cmp
mov
out
rolb
orb
push
or
jae
or
mov
or
or
mov
nop
inc
adc
xchg
adc
mov
test
xchg
shll
das
jbe
xor
test
fimuls
push
jbe
adc
int
mov
scas
jl
test
and
stos
push
in
out
pusha
lret
inc
xlat
mov
inc
shlb
mov
loopne
cmpsb
outsb
mov
or
mov
enter
mov
mov
aam
and
fcmovnu
data16
sbb
sub
sub
sub
out
mov
add
adc
mov
cmp
sti
popf
push
fimuls
jge
mov
add
push
mov
or
subl
outsb
repnz
das
stos
adc
xchg
fdivl
ret
iret
xor
test
fwait
adc
out
in
icebp
xor
scas
stos
lods
jae
cwtl
jg
push
jne
jae
ljmp
ja
jl
jp
enter
xchg
pop
sbb
xchg
cmp
mov
lret
and
in
arpl
jno
rcrb
ds
repz
shl
jecxz
xor
sbb
mov
mov
push
std
jle
pop
data16
in
add
ds
ja
sub
cli
cmp
stc
jge
xchg
bound
mov
or
inc
in
lahf
push
ja
fsubrs
mov
andb
sbb
pop
mov
xchg
pushf
nop
les
idivl
pushf
ja
lea
jno
push
fdivl
push
les
jle
in
ret
jns
orb
repz
add
addb
imul
je
and
add
cs
int
ljmp
inc
loop
js
push
fldl2e
hlt
fisubs
stos
add
cli
and
adc
cmp
sub
hlt
pop
jg
je
shll
jp
pop
mov
scas
lock
mov
clc
sbb
lahf
and
clc
adc
add
mov
xchg
imul
dec
jb
mov
push
decb
sub
movsl
ja
add
xchg
test
sbb
jecxz
inc
fiaddl
aad
and
fistps
add
xlat
lahf
clc
shrb
call
mov
lds
outsb
adc
stos
mov
hlt
inc
or
insb
jl
cli
out
fsubl
fnsave
lods
xlat
cltd
mov
xor
jge
jecxz
or
cmp
mov
push
bound
in
stc
push
mov
pop
mov
iret
test
xlat
mov
sub
nop
in
add
repnz
lea
cwtl
gs
mov
or
lds
sbb
xchg
jmp
cmp
scas
mov
cmpl
xchg
and
lea
stos
mov
mov
xor
mov
jl
pop
sub
je
in
push
inc
aam
sub
test
insb
inc
add
xchg
xchg
data16
jmp
push
js
out
in
push
mov
push
dec
mov
fimuls
or
lea
fbld
push
inc
add
adc
sti
cli
inc
pusha
dec
dec
loop
cs
sub
inc
xchg
popl
xchg
out
stc
jg
es
dec
push
pop
and
cmp
xchg
xchg
mov
dec
pop
out
rorl
in
aad
divb
mov
pop
mov
push
mov
lock
test
out
sbb
call
sbb
push
aam
mov
cmpsl
lea
pop
loop
pop
xchg
jo
xor
data16
fldl
psubusw
es
push
movsl
subb
sti
out
sbb
inc
mov
xchg
inc
test
loop
push
push
int3
mov
and
test
jp
clc
fidivs
repz
adc
sahf
add
mov
xlat
sub
sbb
sbb
mov
mov
cmp
bound
mov
push
adc
xchg
dec
or
lods
lods
aam
jmp
rcl
jnp
hlt
push
daa
sub
stos
cmpsl
xchg
sbb
mov
push
sbb
int
pop
dec
lret
pop
stc
icebp
mov
jg
lcall
cmpl
inc
mov
test
xchg
and
dec
and
pop
push
stos
jb
or
dec
xchg
inc
aad
push
cmp
dec
add
pop
pop
dec
pop
jnp,pt
sub
jbe
lods
adc
inc
sbbl
push
mov
insl
jae
sarb
mov
sbb
popa
cwtl
fcoml
xchg
popf
test
xor
out
iret
jo
pop
fistpll
hlt
insb
or
mov
lcall
sbb
mov
and
adc
fwait
outsb
insl
in
dec
cmp
std
movsb
cmp
or
lds
out
mov
std
sbb
clc
xlat
xor
xor
mov
adc
jecxz
nop
cltd
push
adc
cli
test
lret
push
mov
test
adc
push
aad
mov
cltd
leave
xchg
xlat
scas
pop
jbe
sub
mov
jecxz
add
movsl
lcall
cs
mov
pop
add
gs
das
pusha
dec
jbe
aas
jo
jmp
rcrl
mov
inc
icebp
mov
aad
fxch
sbb
mov
in
add
jg
lds
mov
xchg
jge
sub
movlps
add
xchg
cmp
push
pop
sahf
xchg
movsl
mov
lods
in
shll
xor
jmp
inc
ficompl
cwtl
pushf
jbe
fldpi
sub
out
jecxz
mov
dec
mov
and
mov
cli
lret
push
sbb
or
stos
fmul
xchg
xchg
je
jecxz
daa
subl
leave
push
clc
loop
push
jle
adc
jl
int
xchg
mov
xor
and
lock
mov
pop
pusha
sbb
js
lahf
push
fs
lahf
mov
add
negb
lcall
cmp
push
jecxz
xor
ficoms
and
movsl
pushf
not
mov
mov
pop
loope
stc
push
std
int
loope
lret
pop
into
int
sub
jnp
push
jnp
loopne
popa
push
shlb
iret
incb
das
lods
addl
sbbl
insb
out
in
arpl
stc
and
dec
insl
pop
out
inc
sbb
push
test
sub
dec
paddsw
iret
mov
lock
sub
fwait
pop
xchg
adc
cmp
sar
pop
adc
clc
jo
fmuls
scas
fiadds
push
pop
mov
addr16
addr16
adc
pop
or
jle
or
sbb
gs
mov
or
xchg
shlb
dec
imul
scas
daa
js
add
jns
jle
pop
dec
inc
fiadds
or
test
xor
cltd
out
xorb
scas
andl
test
jne
shll
jp
in
push
jne
push
in
test
es
xor
insl
icebp
push
adc
mov
mov
insb
xor
iret
or
push
insb
sti
aaa
stc
fistpll
adc
movsb
jmp
adc
add
mov
xchg
inc
xchg
lea
cmp
je
and
mov
insb
cmpsl
imul
cmp
xlat
je
xchg
mov
stos
imul
jns
add
sub
xchg
xlat
cmpxchg
push
jns
and
pop
inc
pop
cmp
xor
xchg
dec
push
mov
mov
pop
lods
cmpsb
fnstenv
test
popf
and
pop
sbb
xchg
loopne
pop
mov
cld
aas
pop
cmpl
cmp
jmp
jmp
and
lock
jmp
jnp
call
mov
mov
and
dec
int3
pop
hlt
shlb
rcl
stos
es
inc
jmp
mov
dec
nop
adc
sbb
repz
ljmp
jle
movsb
shr
xchg
daa
jp
or
sub
ficomps
sbb
add
fs
xchg
dec
push
mov
sub
add
mov
aaa
jae
into
and
dec
cmp
hlt
pop
lods
adc
jo
or
pop
inc
add
in
or
and
jae
into
std
inc
pop
insl
jbe
xlat
add
pop
out
mov
inc
les
cli
sbb
push
xchg
test
add
push
movsb
cltd
xchg
loope
jge
sub
push
mov
push
cld
add
jecxz
pushf
ds
xchg
roll
adc
add
stos
inc
push
dec
pop
pop
or
mov
test
mov
mov
insb
rcrb
or
cli
mov
fdivs
push
jle
popf
add
xor
pop
mov
fnstenv
push
mov
cs
lds
xlat
adc
subb
dec
scas
add
or
push
pop
xchg
mov
adc
movsb
out
add
push
jmp
test
ficoml
push
jecxz
andl
out
or
test
je
in
xchg
cld
add
mov
imul
sub
and
clc
insl
jmp
pop
jns
cltd
fistps
mov
repz
scas
or
lret
mov
pop
test
cmp
ficompl
sub
dec
mov
dec
cltd
mov
loopne
test
xchg
test
shrl
mov
out
je
mov
shll
outsl
subl
and
int
and
add
pminub
mov
push
push
scas
inc
mov
dec
inc
push
jle
fildl
push
mov
mov
sahf
jae
adc
cmp
fsubrs
dec
jae
mov
adcb
pop
xlat
bnd
mov
icebp
stc
mov
or
mov
sti
into
dec
xchg
ffree
je
lock
repz
mov
cmp
jl
pushf
or
sub
xlat
repz
inc
mov
pop
fstps
push
cld
pop
idiv
adc
pop
stos
adcb
mov
dec
jno
and
outsb
test
xor
lods
push
addb
or
inc
sarl
cltd
loopne
inc
pop
inc
lret
fwait
mov
mov
aam
cld
daa
ds
mov
adc
inc
xor
cmp
or
and
mov
push
xor
jne
insl
bound
mov
xchg
mov
push
loope
inc
xchg
mov
test
adcb
jno
iret
mov
fcmovne
xor
lods
imul
dec
push
loop
and
jne
xchg
test
out
pop
xchg
int3
push
add
cli
xchg
iret
aad
sub
divb
ss
mov
push
adc
push
negl
jmp
xor
mov
cltd
pusha
loop
loope
test
pop
push
sub
jns
mov
xor
push
mov
cmpsb
jle
add
jg
fstps
add
xchg
sbb
orl
mov
hlt
movsb
and
aad
sub
idiv
mov
lock
jmp
xor
ljmp
push
ficompl
movsl
or
jnp
shrb
xchg
inc
repz
jl
in
out
fadds
adc
sbb
aad
and
mov
cmp
mov
push
sbb
sub
inc
test
fsub
or
loope
lea
pop
movsb
sub
push
fsts
adc
mov
add
ss
repnz
and
mov
clc
ds
scas
test
sub
add
adc
int3
and
xlat
xchg
jnp
jbe
xchg
sub
mov
stos
scas
mov
cld
fldenv
btr
int3
mov
into
roll
movsb
pop
adc
sub
adc
mov
cmp
lret
popa
dec
cltd
pop
fchs
sub
cmp
xor
in
mov
cwtl
push
jo
movsb
sub
ret
xor
aaa
xchg
mov
stos
jne
cmp
push
insl
or
mov
mov
addb
dec
mov
jmp
pop
sbb
dec
subb
cwtl
cmp
sbb
ds
negl
lcall
popa
sub
incl
or
icebp
sarb
inc
repz
add
sbb
mov
dec
mov
jne
std
int3
psubusb
lret
or
or
arpl
adc
mov
aaa
leave
xchg
rorb
sub
sub
jne
ss
lea
sub
xchg
ret
jnp
fcompl
push
or
xor
in
sub
mov
cmp
je
and
sbb
mov
pop
push
cmp
ja
push
outsl
out
pop
fldenv
mov
iret
xor
repz
and
dec
ds
test
inc
ret
pop
jp
sub
push
sbb
pop
loop
adc
mov
ljmp
sbb
sub
sub
xchg
dec
inc
mov
fldenv
out
mov
rclb
repz
xchg
out
dec
hlt
or
sti
inc
sti
and
cltd
inc
test
into
sub
mov
adc
cltd
and
call
dec
fldcw
xor
scas
adc
inc
mov
dec
and
shrl
jg
bound
inc
lock
imul
test
push
cli
repnz
int
or
cmpsb
test
call
jecxz
or
or
add
inc
pop
pop
add
ljmp
adc
mov
jmp
pop
jb
rorl
pop
aad
mov
in
nop
stos
jb
inc
aaa
mov
mov
fsubrl
adc
dec
sbb
inc
mov
mov
sub
push
daa
daa
out
push
or
sub
xor
inc
ret
pop
into
lret
mov
lret
mov
inc
jp
jo
or
dec
test
inc
xor
xchg
mov
inc
sub
push
xchg
out
xchg
lret
inc
ljmp
mov
repnz
dec
dec
aam
js
or
repz
std
mov
add
pusha
dec
cmpsl
fstpl
sub
movd
sbb
fildl
pop
fs
out
jnp
sub
popa
cwtl
nop
push
and
mov
mov
in
push
xchg
dec
fyl2xp1
imul
stos
rolb
xchg
lcall
jmp
stc
cmpb
sub
pop
dec
cmp
push
xchg
aam
or
mov
xchg
and
push
hlt
aaa
or
xchg
push
add
bound
vmwrite
inc
pop
lods
mov
lea
fucom
lret
xor
out
add
or
out
push
jge
sub
mov
inc
mov
add
iret
mov
icebp
cmpsl
movsl
in
mov
xor
subb
test
inc
outsl
and
nop
mov
mov
mov
dec
mov
push
shlb
cmp
xchg
daa
push
mov
jge
jl
sub
fcomps
push
shrb
dec
pop
iret
cmp
push
nop
popl
lods
pop
adc
cmpl
jne,pn
dec
mov
movsl
inc
fdivl
test
push
ds
add
xchg
sub
lods
sub
cmpsb
pop
add
cltd
test
addl
adc
loopne
xor
and
out
pop
mov
push
insl
add
aaa
mov
sbb
shrl
jns
cwtl
dec
fistpll
std
jg
and
push
out
xor
js
mov
push
mov
xchg
sub
pop
mov
lahf
iret
jne
cmc
or
xchg
push
add
jbe
mov
test
push
and
aad
push
mov
js
push
das
mov
rclb
dec
mov
jbe
insl
pushf
clc
push
dec
xchg
lods
pop
add
in
and
out
outsb
push
inc
inc
xchg
and
dec
push
xchg
jbe
dec
pop
pop
aam
or
jle
das
or
push
mov
add
mov
push
out
in
xor
insb
add
iret
insl
or
sub
push
lods
mov
outsl
pop
cltd
loope
imul
loopne
mov
shlb
adcl
mov
loope
cmp
xor
dec
xchg
imul
push
mov
adc
fcmovu
xor
in
or
push
into
sbb
sub
dec
jnp
pop
fcomps
shlb
jmp
lret
aad
mov
or
cli
scas
imul
in
test
addb
das
push
push
sub
jne
ja
dec
mov
cmpsl
sbb
jae
jp
loop
out
and
mov
rcrb
aad
xchg
sar
sub
add
xor
adc
aad
xchg
insl
sti
pop
pop
adc
test
push
dec
xchg
jns
into
insl
daa
fcom
xchg
dec
dec
push
ds
test
rcl
shrb
fs
add
adcb
add
icebp
cmp
in
mov
mov
push
icebp
test
sbb
cmp
cwtl
data16
in
or
xchg
into
insb
push
mov
xor
outsl
push
js
and
mov
mov
pop
push
std
aam
cmp
out
pushf
cmp
bound
pop
add
lds
push
xchg
in
mov
xchg
imul
mov
popa
xor
cmp
rol
cmp
xchg
call
jle
lds
es
fcoms
mov
pop
inc
sbb
jmp
pop
pop
shll
mov
cmc
pop
fcoml
inc
iret
arpl
cltd
push
xchg
sbb
pop
mov
lock
pop
inc
stos
xlat
xchg
fwait
sbbl
int
out
push
adc
out
jle
adc
test
scas
push
sti
or
out
test
add
push
outsb
add
pop
leave
insb
xor
dec
add
test
push
bound
push
addr16
xor
add
mov
outsl
sar
leave
insb
cld
and
jb
mov
pusha
cmp
in
pop
jp
scas
test
movsb
dec
ret
mov
cmp
jge
movsl
mov
sub
lret
dec
cmp
push
sbb
push
jg
cs
pop
in
pop
mov
mov
xor
push
in
mov
xor
xchg
push
sub
loopne
lret
hlt
dec
into
les
dec
lea
mov
out
inc
stos
jle
andb
push
testb
lea
stos
jbe
dec
fidivs
mov
and
push
xor
jle
lret
sub
fwait
in
pop
xchg
hlt
andb
jl
aas
ja
jl
mov
lcall
pop
fcomi
mov
dec
mov
std
pop
jbe
add
fimull
in
add
mov
inc
mov
sub
xchg
imul
mov
popa
inc
neg
fdivrl
cmp
imul
mov
scas
cmp
aam
adc
jns
jge
xor
stos
test
js
inc
scas
adc
and
push
push
adc
rol
pusha
sub
push
push
cwtl
pop
adc
push
mov
push
mov
mov
mov
f2xm1
pop
cmp
cmp
loopne
je
daa
xchg
xchg
sbb
mov
repz
mov
push
leave
loop
jne
test
cmp
mov
std
xchg
aam
mov
subb
test
lea
mov
push
outsl
xor
fsubs
inc
adc
cmc
jo
sub
inc
int
jno
mov
fwait
pop
push
hlt
aad
outsl
mov
aaa
out
lahf
cli
adc
lds
imul
fidivs
sbb
or
and
pop
cmc
add
adc
arpl
stos
or
cmp
inc
mov
mov
dec
pop
mov
mov
cli
dec
std
dec
dec
sarl
mov
adc
or
mov
cltd
sbb
stos
mov
arpl
iret
pop
or
scas
addl
int
sbb
xchg
lods
mov
push
and
xchg
xchg
pop
in
mov
enter
cmc
adc
ja
pop
jge
xor
pop
mov
in
in
movb
stc
mov
fiadds
jo
in
lods
test
nop
push
sbb
out
movd
xlat
sbb
call
jle
or
fidivl
das
stc
pop
xor
rcr
mov
stos
push
adc
jb
je
dec
mov
xchg
pop
fcmove
nop
sarl
mov
adc
insb
cmp
lock
call
inc
pop
nop
inc
and
lret
movsb
ljmp
pop
dec
pop
loope
ficoml
enter
xchg
add
jnp
incl
inc
subb
or
cwtl
push
add
idivl
repnz
pusha
jg
inc
add
push
out
xor
xchg
xchg
xchg
les
mov
push
pop
pop
cmp
mov
cmpsl
jae
sub
pop
lret
mov
cmp
call
mov
iret
mov
pop
xlat
int
lahf
out
fbstp
ljmp
pop
fnsave
out
sub
xor
test
cmp
mov
aaa
add
shl
mov
roll
or
mov
dec
in
shl
and
sub
sbb
lret
loopne,pt
fstpl
dec
mov
dec
mov
sub
fidivrl
xlat
adc
sbb
shlb
cmp
in
loop
inc
xor
xor
sub
push
pop
orb
sub
xor
sti
je
rol
jp
rorb
dec
jg
adc
xor
cmp
in
out
shr
xchg
push
int3
cmpsl
test
sbb
divb
xchg
or
add
call
sbb
out
or
cmp
cmp
cwtl
xchg
mov
dec
inc
push
push
add
pop
mov
pushf
iret
mov
test
arpl
jae
stos
out
dec
add
xor
sub
loopne
jbe
mov
xorl
insl
dec
and
adc
mov
jl
shll
sbb
mov
sbb
push
or
cmp
mov
push
xchg
fistl
loopne
jg
push
dec
cmp
js
xchg
or
pop
or
imul
sub
sub
icebp
sbb
or
sbb
cmpsb
in
sub
pop
leave
scas
adc
cmp
mov
push
cli
in
loope
insl
sub
js
dec
jp
clc
inc
addr16
fdivrs
sub
ret
loop
pop
push
jg
cmpsl
cmpsb
inc
enter
pop
insl
pusha
xor
and
cltd
adc
xor
jno
hlt
mov
xchg
xchg
xor
push
xchg
sub
jmp
ja
cmp
add
mov
sub
jns
movsb
cmp
subb
sbb
ljmp
out
sub
popf
and
jmp
lods
and
pop
push
fwait
inc
or
or
aaa
mov
cmp
loopne
jle
xchg
dec
mov
dec
paddb
fld
ret
loope
arpl
daa
hlt
push
lret
out
xchg
ret
mov
lea
push
push
cltd
std
imul
jne
out
mov
xlat
sbb
or
ss
inc
cwtl
sti
push
je
fcmovnu
adc
mov
lret
popf
jp
test
lret
cwtl
adc
test
movsb
fsub
stos
mov
pop
daa
repnz
js
sbb
fwait
push
inc
icebp
pop
lret
sti
adc
aas
das
and
push
outsl
mov
test
inc
mov
xchg
or
cwtl
enter
sub
mov
je
mov
sub
jae
lret
mov
xchg
repz
push
mov
andb
lcall
jne
call
shll
aaa
movsb
fsubp
add
test
std
mov
push
les
bound
sbbl
ror
mov
aad
mov
sbb
pop
out
fnsave
cmp
pop
popa
or
xchg
in
iret
lahf
test
add
rcll
dec
mov
or
push
es
xor
mov
aam
enter
jno
sti
ljmp
pop
lcall
adc
mov
das
inc
sub
sarb
add
sbb
xchg
push
xchg
aas
sbb
cmp
ret
dec
adc
lret
mov
sub
sbb
es
shll
pop
fdivs
mov
sti
dec
stos
push
xor
mov
dec
push
ror
int3
jle
dec
pop
orb
out
sbb
sbb
dec
aas
dec
jmp
pop
mov
daa
in
test
scas
scas
or
add
bound
jo
mov
xchg
mov
push
out
addl
lahf
xor
psubusb
cmp
pop
jo
std
cmp
push
int3
dec
test
and
and
sbbl
jmp
push
add
ds
xor
inc
in
mov
stos
enter
jecxz
mov
lea
orl
cmp
xor
pop
inc
lahf
pop
cli
inc
lods
gs
cmp
popa
lcall
xchg
scas
int3
sbb
jnp
mov
stc
mov
pushf
xor
xor
sub
movsb
mov
outsl
mov
or
push
jno
rorb
bound
insb
ljmp
dec
js
or
add
sahf
sbb
add
jae
jno
imul
sarb
sahf
inc
xor
sbb
ja
adc
sub
push
or
xor
jnp
xor
sarb
jge
mov
or
mov
das
jae
ret
imul
cmpsl
nop
pop
xchg
lods
and
cwtl
jp
inc
mov
fsubs
xchg
ljmp
push
dec
jns
xor
mull
lods
das
inc
out
jmp
pop
mov
mov
aaa
lcall
call
bound
loopne
push
stos
inc
out
repz
pusha
in
aad
outsb
adc
hlt
and
dec
dec
pop
pop
mov
stos
outsb
mov
pop
push
stc
and
push
jmp
xor
jns
mov
call
jo
jb
in
nop
mov
ja
imul
ret
pop
repz
mov
and
out
lds
xor
push
add
rorb
mov
movsb
mov
sbb
in
test
mov
stc
cmp
orb
sbb
cmp
and
jge
inc
push
inc
call
mov
test
xchg
aas
sbb
fsubs
mov
adc
cmc
in
mov
mov
mov
loope
xor
push
mov
sti
das
xor
or
adc
rcrb
in
jns
lods
sub
dec
ja
lret
sub
xchg
and
lods
xor
mov
add
pop
mov
cwtl
sbb
mov
std
stc
out
std
pusha
adc
clc
jge
lds
pop
dec
imul
sbb
xchg
sub
pop
out
popl
enter
mov
push
xchg
push
or
sub
sti
jo
jl
push
xchg
pop
mov
mov
pop
mov
cmp
jecxz
sub
push
pop
insl
in
dec
test
sbb
mov
mov
pop
aad
add
in
cmpsb
icebp
aas
pop
bound
xchg
aaa
jbe
jp
cmp
shll
out
mov
push
push
xorb
xchg
dec
add
cltd
add
aam
pop
das
inc
outsl
jbe
adc
and
ret
aaa
gs
xchg
jecxz
add
out
cmp
loopne
xchg
daa
fists
out
loope
add
xchg
xchg
mov
das
andl
pop
cwtl
sar
mov
and
shlb
push
daa
std
test
inc
cli
repz
mov
mov
lds
outsb
and
and
aam
arpl
popa
movsl
inc
jecxz
stos
int
and
js
int3
add
shl
fwait
xchg
fs
or
mov
jns
inc
daa
pop
xor
fwait
mov
pop
push
mov
and
pop
shr
fildll
cmp
call
xor
pusha
xchg
and
cmp
adc
sar
dec
out
or
jl
fmuls
fcoml
imul
cs
pop
mov
icebp
pop
inc
addr16
cmp
dec
scas
mov
mov
adc
test
enter
out
loopne
loope
rorl
mov
adcl
insl
in
add
or
stos
pop
inc
inc
in
xchg
scas
mov
or
adc
push
mov
pop
popf
pop
out
ds
push
mov
shll
cmp
mov
enter
sub
ss
les
sub
in
in
aad
xchg
loopne
clc
adc
push
jbe
mov
or
fcompl
movl
aam
lahf
jg
cli
jb
mov
cmp
mov
push
aas
scas
popa
data16
sbb
push
je
xor
in
ficomps
lds
add
push
jmp
stos
xchg
lahf
test
cmp
xchg
xlat
xor
sbb
mov
call
fnstsw
adc
fdivr
ret
xor
push
fwait
pushf
adc
dec
mov
jge
pop
inc
jg,pn
mov
jp
ds
sbb
inc
rcrl
sbb
ljmp
push
test
iret
movsl
jle
pop
orb
sub
xchg
mov
mov
cld
mov
ss
movsb
push
pushf
mov
es
mov
nop
andl
hlt
dec
lret
fimuls
push
jbe
cmpsl
jb
xor
add
fcoms
sbb
ret
mov
cmp
mov
sbb
cmpsl
cmp
leave
in
or
cmp
mov
scas
xchg
jns
jnp
dec
or
loopne
jp
sbb
push
sarb
mov
mov
daa
je,pn
push
sahf
ret
out
xor
imul
pop
mov
pop
mov
mov
cmpsl
ja
xor
clc
cmc
movsl
dec
lret
movsb
test
mov
jmp
ja
dec
pop
ds
mov
push
cmpsl
xor
fwait
pusha
out
movsb
sub
sbb
lods
in
cmp
push
and
inc
add
xor
jns
push
adc
shll
jmp
push
repnz
or
jae
lock
test
or
test
imul
add
sbbl
popa
pop
mov
scas
je
mov
popf
jne
arpl
nop
cmc
mov
push
fnstcw
iret
fbld
sub
insl
sarb
dec
jmp
bound
xchg
dec
ss
jne
or
xchg
cmpsb
or
rorb
in
popa
sbb
xchg
xor
fs
adc
mov
jno
divl
sbb
pusha
testl
jle
add
push
int
mov
inc
cmp
addr16
lock
jb
adc
push
call
mov
cli
arpl
sti
sbb
adc
das
push
repnz
xlat
out
xor
sti
call
out
cli
lds
out
cmp
inc
sub
mov
jle
popa
xchg
scas
push
push
xchg
or
push
test
mov
out
jne
stos
daa
push
mov
sub
sub
jg
inc
loope
ljmp
push
sbb
sub
mov
clc
cli
mov
push
or
sub
iret
stos
addr16
rclb
xchg
iret
cmp
xor
push
xlat
add
cwtl
pop
popa
cmp
outsb
mov
push
push
jne
imul
lods
arpl
mov
ja
xchg
sar
inc
xor
idivl
pop
xchg
push
ss
scas
or
push
shrb
imul
sub
mov
mov
loop
stc
pop
xor
lock
dec
jecxz
shlb
dec
mov
cmpsb
cmpsl
jle
mov
iret
or
daa
cwtl
scas
test
inc
sbb
fsubs
xorl
cmc
adc
shll
test
hlt
mov
push
repnz
adc
stos
fs
sub
hlt
push
inc
arpl
fs
xor
sub
mov
push
mov
jl
add
stc
or
nop
pop
add
add
or
mov
mov
test
cmp
outsl
cld
or
int3
push
mov
stos
aas
negb
dec
scas
ljmp
std
push
mov
test
fsubs
inc
push
inc
mov
in
adc
gs
cwtl
xchg
ljmp
cmc
ret
pop
enter
mov
sbb
inc
imul
mov
dec
imull
add
jns
fdivr
inc
adc
outsl
sahf
xor
jecxz
inc
popa
dec
sbb
xor
aad
mov
fdivs
mov
addb
mov
xor
lea
fnstenv
sub
ds
inc
shl
into
out
dec
addr16
es
mov
xchg
push
fdivs
pop
push
and
lcall
pushf
dec
rorb
outsb
push
and
fimuls
jp
push
dec
jl
inc
mov
cld
sahf
pop
ja
add
bound
and
push
and
roll
imul
hlt
dec
xor
and
mov
mov
int
jb
dec
rclb
push
and
test
mov
and
push
lret
mov
jg
or
in
pop
and
cmpb
roll
cmpsb
les
dec
jo
stos
js
add
mov
hlt
jp
xchg
notb
lahf
cltd
cmpsl
aad
shlb
inc
mov
or
daa
pushf
stos
pop
mov
cmpsl
ss
cmp
push
mov
pop
jle
lods
sub
mov
pop
popa
sbbb
lcall
repz
add
in
call
jle
outsb
scas
aam
sbb
dec
daa
jne
xlat
mov
pusha
mov
push
push
jl
mov
pop
dec
pop
cmp
push
or
dec
fnsave
xchg
mov
inc
push
jns
scas
sub
test
pusha
adc
sbb
ret
jle
xor
fs
int3
mov
cs
pop
and
andb
stos
cmp
js
dec
jl
dec
and
mov
test
sub
xor
dec
mov
jl
int3
test
leave
gs
sti
pop
je
repz
les
fmull
std
addb
cmp
pop
push
push
lcall
adc
mov
sti
in
fdivrs
add
mov
sub
out
sahf
daa
orl
ret
clc
mov
insb
jae
add
push
cmp
dec
sti
rcrb
pushf
inc
lods
fstpl
mov
mov
and
adc
cmp
mov
int
push
sub
jb
push
mov
cmpsl
aam
inc
rolb
mov
outsl
inc
stos
xchg
push
xor
push
xchg
inc
inc
nop
or
std
test
test
inc
inc
sbb
mov
push
xchg
push
xchg
out
cltd
xor
jge
and
imul
xor
aam
stos
inc
xor
sub
ret
cli
inc
cli
xchg
into
dec
mov
sbb
fsub
cmp
sub
push
cltd
inc
je
mov
sub
movsb
loopne
int3
cmp
movswl
push
js
sub
mov
pop
mov
jbe
jge
inc
push
inc
into
shl
rcll
adc
dec
fsubp
in
mov
push
cmpsl
ljmp
cmpsb
call
adc
iret
mov
push
dec
ss
imul
mov
mov
jbe
fldcw
cltd
mov
adc
std
loope
icebp
sbb
in
pop
popa
scas
fmuls
xchg
sbb
sbb
orb
sub
pop
lods
popa
outsb
push
scas
out
jecxz
cmp
jge
push
loopne
lods
mov
push
push
jl
push
dec
sbb
and
inc
inc
dec
repz
sub
xchg
les
cmpsb
push
cmpsb
ljmp
out
inc
test
leave
jns
push
and
outsb
jmp
shl
ret
cltd
insb
aad
movsb
add
pop
lret
out
cmpsl
inc
insb
mov
aaa
adc
in
push
cmp
stc
call
push
mov
mov
imulb
adc
mov
mov
xchg
jb
dec
sub
fsts
aad
jecxz
and
je,pn
or
push
mov
nop
into
mov
jg
cmpb
pop
mov
inc
incb
scas
add
stos
insb
pusha
lret
adc
call
push
push
xchg
xor
inc
adc
and
adc
cmpsl
mov
cmc
adc
sbb
nop
lds
lods
nop
je
stos
std
shlb
push
cmp
enter
outsb
dec
mov
mov
cld
sub
adc
inc
pop
iret
cmp
js
mov
daa
xorl
xor
inc
aaa
fstpt
mov
push
frstor
adc
cli
push
adc
xchg
cmp
inc
test
icebp
fstps
sti
mov
push
adc
mov
mov
push
lret
dec
fwait
dec
and
or
push
sub
je
into
pop
xchg
in
mov
jl
idivl
pusha
or
mov
inc
xchg
movsb
dec
mov
dec
cmpsl
dec
sahf
jns
pop
inc
pop
testb
dec
nop
roll
jae
cli
unpcklps
and
xchg
or
ljmp
xlat
fucom
push
add
loopew
outsl
aad
mov
imul
mov
out
pushl
xchg
out
mov
mov
aaa
arpl
fninit
fidivl
xor
xor
pusha
ljmp
xor
test
repz
iret
sti
push
push
das
outsb
jp
cwtl
call
sbb
pop
pushl
fs
and
sub
mov
shll
adc
pop
inc
loope
mov
pop
or
test
cmc
repz
add
ljmp
pop
repnz
into
cmc
lea
xchg
pop
mov
js
movsl
flds
xor
xchg
mov
test
sahf
popf
cwtl
adc
or
das
ret
imul
ds
dec
and
jb
addr16
test
call
mov
das
mov
mov
cmp
shll
mov
inc
pop
mov
dec
jns
jbe
xor
repz
jp
test
test
add
ret
push
insb
sub
fdivp
adcb
jne
loope
les
push
mov
jbe
push
or
aaa
daa
js
or
jo
push
mov
jmp
xor
adc
lret
idivl
mov
pop
test
pop
popf
push
xchg
mov
into
push
mov
shrl
push
fiaddl
enter
lods
cmp
das
repnz
std
sbb
cmpsl
mov
movsl
mov
fcoms
iret
cmpl
pop
clc
or
lds
cwtl
jg
add
mov
xchg
sub
push
cmp
and
jno
out
inc
filds
or
dec
dec
sub
fmull
les
cmpsb
hlt
stos
push
outsb
cmc
sub
repz
daa
jmp
jmp
cltd
cmpsl
push
fwait
ja
lods
push
daa
sahf
or
cmp
je
enter
lcall
out
xor
test
sub
aad
pop
data16
sub
pop
shl
add
divb
das
in
sbb
and
fmul
dec
sbb
roll
pop
in
jp
dec
add
lds
adc
movsl
mov
test
ret
les
cmp
notl
sbb
mov
out
xchg
dec
push
je
add
pop
sbb
test
sbb
xlat
or
gs
test
or
adcl
inc
push
mov
jp
xor
xor
sub
sub
shrb
dec
hlt
pusha
outsl
imul
sbb
loope
jae
test
jecxz
pop
pop
mov
ja
fcoml
sub
xchg
xor
cld
clc
hlt
jge
sub
mov
cltd
xchg
mov
inc
imul
adc
and
lcall
orps
xor
adc
dec
cmpsb
jp
xchg
sarb
lods
pop
leave
sbb
jb
add
pop
mov
adc
and
pusha
xchg
cmpsb
das
xchg
dec
add
inc
cwtl
mov
mov
lock
mov
or
mov
nop
adc
sub
inc
outsb
add
jge
loop
into
ds
out
lods
pusha
scas
xchg
cmc
push
mov
mov
mov
lcall
xor
push
dec
imul
loope
fldl
push
lods
add
pop
hlt
xchg
repz
aam
and
rol
outsl
sub
inc
movsb
mov
aaa
xchg
out
lock
movsb
and
hlt
xchg
loopne
xchg
xor
inc
push
loop
jae
cmp
jp
call
mov
sarb
out
mov
push
lea
not
sbb
pusha
xchg
fdivrs
jo
jmp
jle
and
fldt
scas
and
dec
jg
cmp
sub
fldt
mov
scas
rol
cmp
cmp
add
mov
sahf
ljmp
lds
pop
mov
popa
xor
push
mov
fcompl
inc
ror
shll
inc
fisubrs
into
adc
adc
inc
xor
push
cmc
xchg
cwtl
sbb
sarb
mov
push
mov
repz
xor
imul
jmp
enter
test
push
pop
test
jno
pop
into
in
loop
jle
jns
sahf
adc
aaa
sub
js
xlat
push
inc
pop
dec
mov
xor
les
xor
movsl
int
pop
push
jb
xor
xchg
loopne
shrl
fstpt
testl
cmp
mov
sbb
dec
pop
mov
in
pop
fisttpl
sbb
ljmp
je
dec
jnp
jmp
cmp
xchg
mov
cmpsb
push
addr16
jb
jmp
cmpsl
sub
or
sub
pushl
mov
or
lea
xor
jl
xor
jb
cwtl
xor
mov
push
enter
jbe
jae
stc
pop
int
loopne
mov
lock
cs
xor
fimull
lret
push
aam
je
add
jno
ss
mov
hlt
push
mov
pusha
jg
hlt
mov
out
aad
pop
push
mov
add
push
dec
cmp
ret
mov
sarb
les
xor
mov
mov
or
add
in
cmp
dec
ljmp
mov
push
cmp
cmp
jg
dec
lods
cs
dec
aam
in
pop
and
mov
fildll
pushl
and
cmp
dec
insb
or
pop
outsb
rolb
lret
add
lock
cmp
sbb
fcoms
jne
test
adc
add
or
jae
push
cld
lcall
push
arpl
pop
xchg
insl
jbe
lahf
cltd
cli
dec
js
push
mov
adc
arpl
cmp
jno
lahf
out
push
repz
xlat
push
xor
subl
loop
bound
jno
mov
mov
xlat
loopne
and
out
push
xchg
mov
add
sti
inc
int
dec
test
pop
rcr
mov
push
mov
jl
mov
fs
xchg
leave
jns
push
dec
mov
lock
sub
dec
jecxz
cmp
or
or
outsl
jnp
adc
mov
pop
pop
lahf
scas
lods
outsb
add
xlat
insl
pop
aad
xor
sahf
xchg
mov
rep
fscale
pop
adc
and
pop
cmpsl
test
mov
fistpl
add
in
cmp
into
jecxz
fidivs
jle
cvtdq2ps
js
adc
dec
or
xchg
jae
xchg
pop
bnd
jns
cld
push
adc
testb
js
lds
pop
popa
jge
lea
stos
rorl
xor
sub
imul
or
and
push
call
lret
mov
movsb
fs
pop
dec
xchg
lcall
popl
test
ds
push
fsts
nop
xchg
dec
js
or
pop
pop
pop
pop
adc
dec
sub
jae
jo
push
inc
clc
jge
lods
sbb
je
out
inc
xor
mov
push
xchg
add
scas
push
loopne
sbb
jne
mov
push
decb
shrb
and
cmp
adc
pop
fsubl
sub
cwtl
insl
ds
add
out
push
xor
push
jo
fistps
cld
js
and
mov
lahf
mov
xor
fisttps
and
cvtps2pd
aad
push
adcl
dec
aam
sbbb
mov
lahf
inc
insb
jnp
cmp
xchg
lret
jne
and
mov
xchg
rolb
fdivl
lea
push
stos
sub
add
mov
mov
cmc
ljmp
negb
adc
aaa
push
jl
daa
push
ret
mov
dec
xchg
sub
jno
fdivl
sub
xor
adc
mov
pop
aas
push
jns
loopne
mov
notb
enter
push
stos
sub
xor
lock
jno
idivl
loop
pop
adc
clc
pop
pusha
add
lock
lock
or
das
mov
mov
cmc
pop
ret
das
sub
mov
cmpsl
mov
inc
lahf
sub
cmp
int3
fcmovnbe
out
cld
shl
push
sbbb
aad
rcll
gs
mov
push
jo
jecxz
icebp
sub
adc
addr16
or
mov
xchg
push
lock
adc
and
mov
or
mov
push
xchg
mov
je
mov
daa
in
enter
dec
stos
pop
xor
idiv
adcl
adc
inc
shlb
dec
sti
dec
pop
xorb
idivb
jno
pop
sub
lock
clc
or
out
and
clc
mov
inc
mov
jo
clc
std
add
rcrl
add
jnp
mov
sub
pop
shll
xor
mov
inc
xchg
mov
rcrb
push
pop
out
loop
xchg
clc
sub
inc
imulb
sbb
sub
add
jb
out
lret
adc
into
xlat
cmp
in
insb
push
jo
mov
sbb
pop
adc
jp
mov
addr16
lds
mov
data16
ss
mov
int3
mov
lcall
inc
imul
into
aaa
cli
sbb
sub
and
push
roll
call
fists
out
mov
pop
inc
negb
mov
or
mov
ljmp
push
shlb
sbb
loop
std
arpl
ret
cli
pop
add
addr16
jo
pop
push
cmpsb
sarb
jg
outsb
add
jp
je
addr16
xchg
xchg
stc
ret
cmc
xchg
pop
rcrl
lret
sbb
daa
sbb
jno
lret
fs
sbb
jns
add
jg
sub
fnsave
dec
cs
push
aad
or
jns
cmc
dec
push
and
int3
in
dec
and
test
mov
mov
and
and
or
shlb
mov
push
fimull
pop
ds
stc
jns
js
xchg
das
daa
mov
js
nop
push
jle
xchg
test
bound
pop
push
ds
aas
aad
pop
push
jecxz
popa
imul
insb
inc
fisubl
pop
mov
mov
out
ja
gs
xor
add
icebp
stc
fsts
sub
stos
call
loopne,pt
pop
cmp
pop
or
cmp
jmp
push
xchg
lret
fimuls
cld
mov
int3
xchg
ficoml
int
pushf
leave
sbb
sbbb
mov
sub
push
scas
orl
aad
fldenv
xchg
pop
sbbb
mov
mov
push
add
jo
es
inc
imul
jl
adc
sub
cmp
cmpsl
ds
jge
push
shll
mov
pop
sahf
xchg
ret
leave
lahf
into
leave
mov
mov
sub
inc
ficoml
sahf
push
das
insl
dec
mov
sub
xchg
orl
xchg
jb
out
and
popf
xchg
cmpsl
cmp
push
mov
pop
pusha
push
fwait
mov
jo
or
dec
int
es
pop
pusha
pop
pusha
sub
hlt
mov
adc
inc
xor
mov
adc
or
ljmp
inc
sub
adc
adc
pop
or
loop
addb
add
lds
std
or
adcb
clc
mov
popa
popa
mov
repnz
std
sub
inc
jmp
sbb
daa
fsubl
dec
cwtl
cmp
and
inc
mov
ja
sbb
xor
xchg
add
cmp
xchg
pcmpeqb
fcmovnu
xchg
stc
push
mov
cmp
mov
inc
xchg
lret
and
push
lcall
sbb
repz
shl
sbb
mov
loope
cmp
mov
loop
addr16
inc
cmpsl
xorb
ret
outsb
hlt
mov
jnp
jp
aas
jmp
add
push
rcl
popf
repz
in
bound
inc
sbb
js
adc
cmpl
jmp
and
cld
stos
jmp
fildl
data16
fidivrl
mov
xlat
inc
es
and
movsb
lret
cmp
pop
vpor
jbe
cmpsb
inc
dec
sub
lods
fucom
xor
add
ds
imull
data16
mov
push
sub
sbbb
sbb
sar
imul
push
mov
push
icebp
xchg
jb
inc
fsubs
imulb
inc
shr
iret
ret
cld
or
mov
sti
popf
lahf
xlat
sub
dec
hlt
mov
lcall
pop
pop
adc
sti
push
lret
cltd
mov
push
push
sub
jnp
dec
xchg
dec
adc
xchg
mov
repnz
add
sub
jle
lret
inc
or
inc
fnsave
test
jp
mov
in
pushf
push
enter
jle
mov
jne
ljmp
add
cltd
pop
iret
jns
fists
int
sbb
cs
mov
mov
jl
shlb
inc
pop
pop
filds
xlat
aam
decb
xor
mov
cli
xor
adc
sub
lahf
aam
add
test
cwtl
rclb
stos
and
test
mov
cs
jb
je
fistpl
ret
lods
testl
jno
jle
loopne
mov
push
or
pusha
in
add
and
jge,pt
pop
sub
ja
or
aas
and
pop
and
sti
mov
and
sub
or
fsubrs
mov
fs
mov
push
iret
shrd
std
data16
jg
test
hlt
aaa
pop
xchg
adc
add
cmp
adc
mov
jbe
cmpsl
sub
or
idivl
movsb
lahf
mov
xchg
pop
jae
sahf
push
and
hlt
sbb
inc
fsubrp
sbb
dec
or
pop
pushf
aad
dec
sti
sub
cmpsb
xchg
cmp
sarb
subl
xchg
repnz
gs
mov
xchg
adc
rcll
dec
lock
mov
pop
pusha
push
cli
mov
int
dec
out
cmp
sti
lds
loopne
daa
add
gs
adc
ljmp
push
pop
or
mov
jmp
pop
inc
shll
mov
or
xor
adc
push
push
jns
call
and
adc
das
adcb
push
mov
loop
adc
inc
pop
or
repnz
and
rorb
stc
test
ljmp
sbb
pop
jne
mov
jb
dec
mul
gs
aam
xor
scas
add
jmp
lcall
xchg
inc
ljmp
mov
cmp
xchg
inc
pop
adc
adc
rcll
mov
ljmp
ror
nop
rcrl
fdivrl
push
dec
cmp
out
adc
add
cmp
mov
mov
mov
mov
push
inc
xchg
pop
jnp
push
outsl
lods
outsl
mov
cld
mov
inc
xor
aaa
xor
std
sahf
loopne
sub
adc
inc
enter
mov
ja
jne
cwtl
lods
das
mov
add
mov
cs
cmc
mov
aad
int3
add
sub
sarb
jno
test
out
fwait
mulb
adc
in
daa
add
aad
xchg
adc
adc
leave
mov
loopne
pop
jl
ss
jo
sub
mov
icebp
icebp
jle
add
lcall
or
outsb
mov
xchg
dec
stc
movsl
cmc
ja
jno
inc
cmp
pop
imul
dec
push
sbb
mov
mov
aaa
dec
popa
icebp
push
or
mov
mov
xor
movsb
xchg
icebp
andb
stos
cli
ja
lret
xor
xchg
lret
loope
enter
pop
cmp
pushf
or
roll
xchg
iret
mov
shll
xchg
movq
insl
ret
push
loop
mov
repnz
imul
std
int3
pop
fisubrl
js
in
adc
popa
fwait
aas
outsl
cwtl
dec
insl
mov
and
xchg
push
add
es
mov
xor
pop
sbbb
cmp
sahf
in
cmpsb
inc
xchg
pop
cmp
and
add
mov
inc
movsb
xor
jl
mov
pusha
push
push
call
in
cmc
or
jecxz
mov
and
mov
sbb
or
push
inc
dec
cmpsb
mov
xor
and
fdivl
and
or
pop
aad
add
loopne
adc
add
test
xchg
scas
push
lret
test
icebp
pop
cli
pop
inc
js
pop
dec
mov
jno
cmp
insl
leave
addr16
lahf
rorl
jnp
daa
jae
adc
push
mov
xor
and
dec
dec
mov
sbb
mov
adc
sbb
mov
xchg
xor
icebp
inc
push
fdivrl
adc
xchg
sbb
xchg
add
mov
xchg
mov
xchg
pop
push
xchg
popa
adc
push
cwtl
fnstenv
call
in
push
pop
cbtw
repnz
mov
sub
hlt
and
xchg
jbe
sub
jae
in
push
jb
lret
and
inc
and
mov
iret
in
inc
sbb
aaa
ja
shlb
pop
xlat
sbb
push
mov
xor
xchg
xchg
mov
andb
imul
fcompl
repz
mov
mov
mov
loopne
fsubs
add
xchg
and
lds
xchg
push
jbe
ja
lods
cld
dec
in
dec
imul
outsb
pop
or
lret
adc
not
aas
out
jno
inc
cmp
pop
mov
push
lods
cmp
icebp
or
add
repz
clc
push
push
jge
jae
aaa
out
scas
cli
aad
or
jle
popa
add
into
inc
fiaddl
ds
fnstsw
mov
push
jecxz
aam
nop
adc
icebp
jp
fistpl
cmp
movsb
pop
xchg
cmpsl
adc
movsb
lods
pop
loopne
cmpsb
adc
std
mov
out
sarb
push
adc
mov
clc
cmp
in
sti
shrl
mov
inc
fistpll
mov
fmulp
pop
pushf
cmp
cmp
xor
cld
cmp
sahf
and
lret
and
adc
xchg
repnz
lret
push
ret
adc
fwait
int
inc
mov
xor
or
roll
and
or
or
sbb
push
jno
cmpsl
insb
ret
leave
stos
leave
jne
movl
sbb
leave
lock
push
aas
push
cltd
scas
inc
mov
dec
daa
ljmp
push
lret
jb
pop
add
ss
inc
es
out
pop
jo
popa
call
xor
cmp
push
inc
cli
shlb
repnz
sbb
jo
insl
cwtl
mov
cmp
sub
jne
jae
xchg
fabs
cmc
iret
xchg
push
adc
xchg
mov
je
scas
add
and
cld
add
imul
push
mov
pop
push
and
rol
scas
fmull
push
stc
ret
hlt
lret
aas
out
scas
in
je
daa
inc
jmp
popf
stc
jo
stos
mov
lret
xorb
fadds
or
fdivp
enter
testb
pop
push
and
adc
insb
or
cmp
enter
out
fnstcw
mov
addr16
mov
aam
sbb
dec
lea
sbb
aad
dec
jae
repz
movsb
insl
and
inc
insb
push
sarl
push
int
icebp
es
pop
test
jmp
xor
mov
pop
data16
xchg
sbb
int
xchg
dec
mov
push
scas
xor
in
out
pop
lea
mov
lcall
sub
xlat
xchg
or
mov
hlt
mov
in
pop
add
call
sbb
cmp
or
or
jecxz
repz
jl
fwait
dec
jno
es
mov
insb
into
jae
mov
popf
mov
mov
hlt
popa
fisubrl
outsl
xor
push
lea
mov
lret
lds
sbb
push
inc
xor
dec
sbb
mov
scas
imulb
xlat
cmp
aad
stc
mov
inc
insl
push
add
xchg
jmp
mov
scas
push
sub
aad
cmp
cwtl
dec
xor
adc
mov
outsl
xor
aad
aam
or
mov
and
pop
icebp
jmp
imul
jnp
in
mov
dec
ss
add
pop
jns
mov
sbb
loopne
xchg
mov
daa
fnsave
sahf
cltd
pop
jl
es
push
pop
clc
std
push
mov
fwait
xor
stos
mov
xchg
sbb
clc
fs
pop
adc
mov
mov
pusha
test
lds
sbb
rolb
int
jle
les
arpl
shr
xchg
daa
lds
dec
mov
loope
imul
ljmp
xor
pop
sbb
and
lret
pop
adc
leave
test
mov
jb
test
adc
repnz
int3
pop
add
adc
inc
mov
ja
sbb
inc
cmpsl
xchg
lret
add
cmp
add
loopne
push
ficoms
mov
pop
aas
or
sbb
dec
mov
xchg
push
push
cmp
aaa
mov
outsl
lret
loopne
mov
mov
cli
inc
les
ss
xor
jbe
loopew
push
jge
mov
xchg
std
push
xor
jecxz
mulb
dec
sahf
mov
pop
rol
mov
mov
scas
movsb
sub
dec
mov
sub
or
dec
jmp
pop
inc
cld
lcall
fnstenv
daa
push
push
xor
leave
ret
sub
mov
mulb
xchg
mov
xchg
push
imul
jge
lods
jne
shrl
hlt
stos
jb
mov
fiaddl
mov
in
push
adc
push
jbe
movsb
cltd
repz
lods
jb
into
pop
mov
dec
stc
addr16
je
cmc
clc
xor
sti
jns
add
inc
cs
jnp
sub
mov
leave
in
xchg
adc
setg
mov
jnp
fwait
adc
dec
mov
imul
ret
pop
rcr
jmp
leave
mull
cmpsl
pop
jo
cmp
cmp
cmp
jg
ljmp
jg
jp
cmp
pop
mov
jmp
int
and
mov
out
lods
das
push
imul
test
mov
frstor
jnp
pusha
popa
add
pop
jbe
fwait
xchg
lcall
jnp
cmp
push
jns
scas
dec
jg
and
push
sub
jg
mov
imul
in
adc
insl
mov
push
scas
push
jmp
jle
movsl
dec
mov
push
pop
inc
sti
sbb
add
push
cmpsl
mov
push
out
inc
and
jno
sbb
bound
mov
lock
inc
popa
inc
mov
clc
test
sub
jmp
das
add
fadds
rolb
xlat
subb
pop
stc
mov
dec
inc
daa
into
lret
jmp
cwtl
movsb
add
mov
xor
adc
out
push
inc
mov
dec
je
mov
test
out
hlt
mov
call
in
mov
ret
outsb
je
mov
movl
iret
sbbl
popa
test
add
pop
cmp
std
icebp
push
jecxz
lret
inc
xchg
pop
imul
push
fucomp
test
movsb
jle
clc
nop
pusha
ja
mov
dec
pop
sar
aad
cmp
cld
std
xchg
sti
arpl
xchg
sub
adc
ret
inc
lds
cmp
shlb
rcl
hlt
and
ja
sbb
mov
inc
sbb
dec
cmp
xchg
mov
inc
lock
xchg
aaa
andb
push
ljmp
lea
add
add
ds
sbb
imul
mov
rcl
pop
xor
xchg
idiv
sti
inc
and
cli
adc
mov
ja
cmpsb
jb
xchg
jle
scas
fbld
jle
ret
and
cmp
je
lods
loope
insl
mov
push
dec
inc
push
and
push
push
cld
sub
mov
adc
xor
pop
fistl
fdivs
pusha
push
sbb
add
outsl
mov
xor
add
ss
test
jmp
xor
into
xor
cli
repnz
sti
cmpsl
and
jle
or
repnz
mov
in
int3
ret
lret
daa
pushw
stos
add
push
pop
jge
pop
xor
or
mov
addr16
push
out
cmp
sub
fisubl
imul
xchg
push
xor
lret
hlt
mov
mov
call
loope
sbb
pop
jne
push
pop
push
add
arpl
popf
int3
and
jge
int3
mov
lret
push
mov
imul
loopne
ret
negl
test
in
scas
fisubrl
inc
and
xchg
xchg
movsb
or
stos
jns
in
imul
out
jns
iret
xchg
lcall
stos
and
scas
jmp
and
es
dec
mov
popa
jecxz
mov
out
into
xor
add
mov
or
cmp
adc
dec
xor
inc
test
js
xchg
and
xchg
push
gs
std
test
loop
js
lahf
stos
popl
sbb
xor
jae
inc
mov
push
aad
lret
pop
sbb
mov
stc
test
lret
repz
xlat
aas
outsb
fs
inc
cwtl
jo
jl
dec
pop
ds
js
subl
cli
xor
ret
jecxz
mov
and
insb
mov
inc
adc
orb
das
and
addr16
rorl
adc
xchg
push
inc
mov
jmp
movsl
pop
insb
xchg
imul
je
cltd
mov
in
das
aaa
lcall
cmp
mov
lret
dec
in
and
mov
mov
push
int
jns
mov
das
pop
push
pop
in
sub
pusha
xchg
mov
cmpl
xlat
fisubrl
mov
call
fwait
mov
pop
fiadds
xor
repz
push
add
mov
adc
pop
mov
inc
sbb
je
in
mov
add
jge
loopne
aad
sub
enter
test
int
loop
rolb
xchg
shlb
js
inc
sbb
cmpsb
aaa
mov
loope
das
movsb
jecxz
in
xchg
sub
rcrb
xchg
adc
loope
icebp
fmulp
jl
and
dec
in
jbe
sub
mov
pop
shrl
add
jnp
rcrl
inc
gs
cmp
stos
push
outsl
cmpsl
sub
les
sbb
sbb
hlt
push
dec
inc
pop
pop
fisubs
dec
sbbb
sbb
sbb
ja
ljmp
inc
rolb
not
gs
loop
ljmp
push
sti
xchg
mov
inc
mov
cmpsl
xchg
repz
adc
mov
flds
cmpsb
mov
and
fwait
mov
jmp
call
shll
test
ret
xor
mov
mov
movnti
mov
mov
jecxz
aam
stc
mov
inc
iret
jp
inc
lock
lret
ret
jo
push
and
xor
add
xor
xchg
mov
pop
test
pop
xchg
sbb
fwait
dec
mov
or
aas
popf
or
fistpl
and
sub
inc
push
xchg
stos
mov
fidivl
push
sub
mov
cs
adc
loop
adc
jge
lahf
rcll
rorb
mov
imul
movsl
pop
movsl
push
add
jno
fs
shll
push
xchg
das
fwait
lea
dec
push
mov
sbb
push
mov
push
or
sub
out
in
clc
push
stc
scas
xchg
pop
and
xchg
out
jbe
dec
loopne
mov
push
loopne
mov
int
xchg
adc
or
bound
andb
fsub
lock
xchg
scas
cmpsb
cmp
xchg
ds
jg
dec
adc
adc
mov
shlb
sbb
jnp,pt
or
outsl
add
mov
lcall
cmpsl
push
cli
adc
and
pop
in
shl
dec
testl
std
mov
int3
sbb
pusha
data16
pop
and
cwtl
scas
arpl
push
lods
xchg
or
inc
pop
pusha
sbb
lea
and
add
add
mov
pop
mov
loope
sbb
fmuls
fisubrl
loope
repz
cmp
rcrb
sub
ficoms
sar
or
outsl
jp
arpl
outsl
or
aas
iret
loop
mov
in
int
mov
sub
sub
lock
into
pop
mov
lods
aaa
push
lds
and
pusha
mov
xor
test
xchg
sahf
pushf
cmp
enter
inc
in
mov
xchg
mov
jno
scas
add
cmpsb
jle
movsb
mov
aam
loop
fsts
imul
or
scas
pop
outsb
ljmp
mov
cltd
mov
cmpsl
sub
hlt
dec
pop
icebp
aas
adc
jecxz
rorb
and
jnp
cs
mov
cmp
push
mov
shll
cmp
jns
and
push
cs
xchg
icebp
je
popa
cmp
idiv
inc
xchg
push
fcmovnbe
jbe
mov
fldt
scas
mov
jne
lahf
enter
mov
das
push
test
add
int
into
inc
or
jnp
and
sub
cmp
xor
and
out
cmp
jo
int3
aad
mov
or
sbb
xchg
and
mov
cmpsb
cmc
mov
dec
and
sbb
call
ret
fwait
andl
adcb
jae
stos
repz
inc
in
aas
loopne
inc
ror
xchg
inc
inc
inc
pop
mov
cli
not
lahf
dec
sub
sbb
xacquire
lret
dec
pop
ja
lret
mov
insb
push
pop
push
bound
push
pushf
leave
jns
mov
es
pop
add
fsubrs
jl
in
cmp
test
ds
cmp
aad
cmp
push
filds
xchg
inc
movsl
inc
cmpsb
fwait
movsl
int3
mov
or
sti
gs
stc
push
inc
mov
sarl
iret
cmp
pop
jg
sbb
inc
stos
stc
into
adc
lds
ja
sub
leave
push
jno
in
aaa
movsb
push
scas
pop
fucomi
inc
int3
scas
inc
pop
and
pop
sti
mov
aas
pop
pop
clc
xchg
adc
and
into
inc
jecxz
mov
pop
int3
jge
mov
shl
loope
mov
insb
mov
push
xchg
mov
push
sbb
pop
push
jecxz
shl
gs
inc
test
sbb
jge
rcr
inc
ja
mov
pushl
mov
aaa
adc
jl
fwait
mov
xchg
out
pop
test
mov
push
out
jmp
imul
jns
imul
dec
ret
popa
jbe
or
xchg
sbb
inc
addr16
inc
sbb
dec
repz
push
push
adc
mov
cmc
or
mov
add
push
jge
ss
jge
out
pop
or
ficoml
dec
xchg
inc
adc
out
sub
pop
push
inc
pop
les
mov
push
movsl
incl
or
pop
imul
outsb
jle
ror
and
mov
mov
sbb
icebp
mov
mov
ret
fwait
inc
mov
fisttpll
inc
xchg
push
add
dec
popf
mov
shl
dec
daa
icebp
pop
mov
mov
inc
in
push
adc
into
jg
cmpsl
jnp
inc
sbb
test
mov
aam
xlat
mov
push
push
popf
lret
and
sahf
fdivr
dec
dec
fs
jo
roll
notl
paddb
fs
pop
fisttpl
in
adc
or
inc
xor
cmp
enter
push
gs
or
cmpsl
lahf
loopne
mov
jge
push
jno
sbb
mov
pop
mov
ds
lret
in
mov
ret
out
pop
xchg
out
mov
enter
loopne
xlat
shlb
and
inc
popf
jl
in
lret
packssdw
mov
pop
push
push
push
in
pop
in
enter
mov
daa
push
jge
in
mov
call
push
ds
aaa
fiaddl
push
cmpl
or
or
and
push
mov
popa
fidivs
or
mov
adc
outsl
xlat
cmpsl
jmp
dec
jge
mov
sub
subl
sbbb
mov
repz
je
mov
verr
daa
out
mov
je
sub
push
stos
scas
pop
dec
test
adc
push
dec
sti
imull
vprotd
movsb
clc
popa
mov
hlt
lret
pop
mov
mov
hlt
push
repz
outsl
dec
jge
mov
mov
jns
hlt
pop
nop
jne
negl
sbb
sub
mov
andb
dec
divb
jne
popf
push
paddsw
and
je
sub
jge
and
xchg
and
jnp
or
in
jle
push
test
adc
faddl
out
fistl
sahf
rcl
stc
mov
aam
add
inc
inc
pop
fwait
mov
inc
pop
dec
cltd
xor
adc
in
pop
pop
mov
inc
fwait
cwtl
add
in
push
mulb
xchg
cmpsl
out
js
cmp
push
pusha
ds
subl
jp
push
push
jl
cli
adc
jle
into
xor
int3
shrd
mov
repnz
dec
sub
lcall
mov
nop
pop
outsb
add
xchg
lock
data16
les
ja
mov
or
add
dec
inc
lret
and
xchg
xor
inc
mov
mov
roll
nop
out
xchg
push
sbb
xor
xor
push
fwait
xchg
je
in
jbe
xor
jae
mov
or
std
dec
pop
dec
jnp
stos
nop
popl
or
sbb
inc
adc
gs
and
push
or
or
arpl
lret
xor
or
fisttps
and
xlat
shrb
hlt
push
nop
sbb
daa
lcall
cmc
loop
mov
xchg
add
lock
insb
subb
cmp
fdivs
pop
out
sub
mov
pusha
push
movsl
mov
out
jp
jo
imul
xlat
adc
mov
sbb
or
sahf
test
adc
fmul
jae
hlt
jo
mov
sti
cmp
les
lods
imul
and
ret
subl
cmpsb
push
out
fstp
push
movsb
lds
lods
out
les
cltd
out
cmp
call
test
sahf
sahf
jge
dec
jp
add
mov
hlt
push
pop
or
scas
aam
xchg
inc
fadds
xor
pushf
pushf
adc
div
jle
push
jmp
gs
not
stc
mov
lods
lret
mov
mov
je
or
pop
seto
imul
cld
popa
jmp
out
inc
push
nop
leave
mov
jne
mov
xor
stc
mov
fbstp
lret
mov
push
and
adc
sub
inc
outsl
and
lds
and
enter
ror
insl
xor
ss
hlt
push
cmp
dec
movsb
movsl
popa
or
rclb
test
xchg
out
adc
jbe
stc
mov
xor
aam
cli
insl
push
inc
jle
lods
stc
dec
test
xor
cmp
push
filds
mov
sub
enter
fnstsw
movmskps
mov
imul
or
mov
xchg
rcrl
or
dec
divb
aam
lea
dec
pop
in
mov
sar
sub
mov
adc
mov
jg
ds
push
push
and
movsl
aad
cmp
adc
mov
xchg
mov
sahf
cld
jae
mov
cmp
cmp
mov
scas
leave
loopne
or
jbe
fwait
xchg
shrb
push
push
dec
shlb
test
aad
ret
xchg
mov
pop
clc
cwtl
push
push
pop
std
aaa
mov
bound
repz
sub
rcrb
push
dec
sbbb
ficompl
int3
nop
fidivrs
jb
pop
add
xchg
ret
test
ret
xor
xchg
flds
jo
jo
jns
or
adc
gs
rol
mov
sahf
push
aas
add
push
pop
xchg
loope
jns
leave
sahf
inc
mov
rolb
inc
loopne
lock
pushl
and
aad
cmpsl
cwtl
outsb
lods
lret
daa
and
inc
fsubrl
cltd
inc
xor
mov
mov
mov
mov
ljmp
int
cmc
jno
jp
xchg
nop
inc
sbb
inc
sbb
js
icebp
fdivp
outsl
test
push
add
adc
jae
orb
imul
cs
mov
mov
and
loop
outsb
mov
and
inc
mov
mov
rorl
lea
in
xor
test
jno
dec
ljmp
addr16
or
jae
dec
cmp
test
cld
pop
or
les
push
xchg
inc
ret
popf
xor
stos
nop
add
fwait
ja
or
addl
imul
add
lret
fimull
fdivs
in
aas
arpl
out
jb
lcall
mov
fnsave
or
lret
dec
inc
mov
sti
pop
lahf
mov
push
or
sbb
shlb
leave
sub
shrl
fwait
xchg
adc
loopne
inc
pop
fs
int3
jp
sbb
loopne
push
mov
and
adc
dec
mov
jnp
xlat
mov
les
jns
lret
jg
loopne
fistpl
jns
aaa
mov
shlb
sbb
inc
pop
jo
and
stos
popf
inc
mov
or
inc
stos
mov
divb
sub
jmp
outsl
je
pop
xor
je
inc
clc
enter
xlat
popf
mov
js
sub
adc
pop
scas
xchg
aam
pop
std
sbb
jne
xchg
divl
loopne
shll
mov
aad
cmc
nop
dec
adc
mov
in
rclb
loope
xor
shlb
push
cmpsb
dec
cmp
fistl
loop
sbb
jns
aaa
in
pusha
jmp
pusha
lcall
dec
dec
cmp
inc
mov
push
iret
stc
out
mov
sbb
jge
xor
adc
bound
or
jbe
es
rcrl
mov
rcll
gs
fdivr
lea
adc
iret
sbb
cmpsl
shlb
mov
or
pop
iret
sub
clc
mov
pop
xchg
xchg
aad
mov
test
mov
jae
add
or
mov
mov
adc
je
mov
mulb
pusha
or
shrl
aaa
inc
jp
pushf
mov
mov
adc
sub
mov
or
dec
fs
rcrl
xchg
push
xchg
imul
aaa
cltd
jne
push
ja
pop
jge
cwtl
or
dec
add
mov
jo
js
popa
imul
pop
fsts
and
lahf
lret
push
dec
dec
lods
inc
lds
pop
xchg
xor
push
mov
adc
sub
js
inc
inc
inc
dec
cmp
cmpsl
jnp
jne
fdivl
pop
inc
ds
add
fisubs
lock
mov
ds
jae
in
push
rol
fistpll
lcall
lret
dec
es
out
jo,pt
idivb
or
sbb
das
int
lret
xchg
shll
push
loop
mov
push
pop
xchg
out
repnz
jns
lret
cmp
cmc
and
shlb
aaa
and
mov
inc
pop
mov
ds
cmc
add
push
data16
lods
in
repz
xor
sbb
mov
mov
shrb
dec
mov
lcall
scas
add
nop
ja
scas
sbb
xchg
je
jg
loop
inc
mov
leave
adc
pushf
jne
mulb
imul
xor
mov
mov
adc
xor
sub
add
imul
mov
sbb
mov
push
mov
test
fwait
push
out
xor
sahf
xlat
jne
rcr
push
push
dec
mov
aaa
lret
sub
mov
and
scas
and
sub
xlat
scas
aas
movsb
jle
sbb
das
mov
jns
ficoms
and
cltd
sub
out
jle
push
sti
jl
ja
lods
sbb
das
subb
fcomps
pushf
pop
jno
pusha
sub
leave
ficoml
popa
mov
inc
scas
mov
jmp
data16
stos
sub
cmp
cmp
sti
cmp
jb
adcb
aas
sbb
out
insb
mov
cmp
pop
pusha
in
nop
jle
add
add
pop
les
ss
sbb
push
loop
mov
neg
sbb
xchg
and
sbb
out
in
cs
pop
mov
insb
out
pop
xchg
in
adcb
adc
push
shll
dec
adc
inc
cmpxchg
aam
cmp
out
cld
push
cmp
stos
mov
xor
sub
mov
adc
mov
hlt
add
gs
lret
push
add
mov
fcomp
or
cmp
mov
cli
sub
outsl
int3
test
js
xor
mov
inc
xor
aad
jne
outsl
decl
lock
or
jmp
test
je
push
je
mov
fsubrs
or
fsubr
push
gs
dec
sbb
and
cmp
sub
test
fildll
dec
loop
xchg
sarb
xor
and
pop
xchg
lret
xor
cmp
jnp
fldcw
cmp
xor
push
outsl
dec
jl
sahf
jp
xchg
repz
int3
xchg
fcompl
in
jecxz
arpl
jnp
daa
loop
imul
and
cmc
movl
aaa
inc
jno
adc
adc
insl
mov
loop
adc
out
sub
or
mov
movsl
add
mov
pop
mov
and
inc
inc
sub
pop
addr16
jnp
mov
nop
arpl
xlat
gs
mov
out
xchg
adc
push
lcall
test
lcall
out
cwtl
inc
jae
sbb
push
and
insb
out
xchg
dec
push
dec
lret
dec
xchg
sahf
inc
inc
repz
inc
and
sarl
inc
mov
mulb
popa
inc
fwait
popf
and
jbe
movsb
test
mov
sbb
fnsave
mov
push
shrb
mov
fimuls
jl,pn
imul
inc
in
cli
push
mov
inc
xchg
lods
shlb
or
xchg
cmp
jmp
bound
fldt
rcr
cmp
insl
lret
dec
xchg
sbb
dec
mov
lcall
jns
xor
pop
dec
mov
ret
leave
jp
cwtl
push
pop
or
mov
loope
btl
push
jge
inc
mov
fcmovb
stc
inc
adc
jae
add
testl
out
shrb
ficompl
arpl
xlat
or
inc
mov
push
xchg
xor
notb
xchg
jmp
imul
movb
in
cmp
sub
xor
ljmp
outsb
mov
pop
xchg
mov
mov
pslld
fimuls
mov
icebp
pushf
sarl
popf
push
add
fimuls
pop
test
sbb
aas
inc
jnp
daa
fnsetpm(287
out
addb
movsb
push
sub
dec
sub
sub
jl
hlt
arpl
xchg
lahf
sbbl
xor
jle
xlat
fbstp
data16
sar
add
pusha
jg
movsl
lods
outsl
xor
rcrb
pop
xor
lock
inc
inc
xchg
stos
cmpl
mov
fwait
mov
xor
fld
jecxz
insb
popl
xchg
shll
mov
mov
mov
fsubrl
push
mov
sbb
data16
mov
outsb
or
cmpsl
sti
test
inc
ss
mov
jge
or
dec
xchg
or
clc
divl
lods
mov
js
push
sbbb
out
aas
or
mov
mov
cmc
adc
imul
adc
jno
icebp
fdivrs
pop
mov
in
loopne
pop
hlt
mov
cli
out
adcb
pusha
lods
pushf
mov
jg
outsb
jg
jo
aas
test
repz
out
cmp
adc
mov
cld
cli
mov
orl
jg
stc
mov
fldl
jecxz
leave
iret
mov
sub
aas
pop
out
mov
sbb
lea
shlb
cmp
push
pop
fcomp
fsubp
rcrl
pushf
jp
in
sarb
out
push
pop
imul
div
sub
aam
cmpsl
fisubrs
fdivs
dec
loop
out
lock
fstp
sub
adcl
cwtl
aaa
push
out
mul
mov
divb
das
fmul
fldl
leave
mov
xor
or
add
std
cmp
push
push
imul
inc
outsb
sub
les
pop
icebp
push
jno
or
push
pop
imul
push
cmp
jo
adc
and
fimuls
ret
call
movsl
out
dec
lahf
cmp
fwait
jnp
sahf
adc
lods
pop
mov
inc
rcl
jle
outsl
popa
inc
aam
cmp
xor
mov
lock
pushl
and
lods
cmpsl
testl
jno
jge
pop
pop
adc
lods
je
adc
xchg
leave
ss
inc
mov
fldz
jno
add
hlt
lea
lods
fldenv
cmpb
fidivrs
inc
mov
and
or
inc
icebp
aas
add
imull
adc
data16
adc
sahf
jge
xchg
andb
cltd
std
xchg
fildll
xchg
jp
add
and
cmp
push
fnstenv
cmp
out
or
rorb
lcall
lods
cmc
fidivs
out
mov
repz
xchg
subb
add
ja
fisttpl
out
in
sub
mov
adc
dec
push
into
inc
xchg
out
loop
push
and
jae
or
push
stc
lret
and
loope
push
aas
inc
xor
aad
clc
cmc
or
mul
sbb
pushf
bound
push
ds
mov
add
std
add
out
mov
mov
stos
adc
pop
jge
scas
shrl
sub
mov
jge
popf
mov
idivb
xor
adc
add
fs
mov
mov
cli
mov
xchg
jmp
mov
pop
out
leave
in
aaa
adc
cmp
dec
cld
lahf
inc
adc
xchg
ja
xchg
pop
in
pop
cmp
les
incb
nop
clc
cs
sbb
mov
aam
add
rcrb
popf
orb
dec
gs
pop
push
clc
repnz
sbb
xlat
jl
shll
imul
cld
cmpsl
inc
bound
repnz
push
movsl
repz
mov
xlat
or
push
push
adc
std
je
scas
outsb
insb
rorb
dec
loopne
andl
aad
mov
lret
add
jmp
ret
rcll
inc
dec
aas
dec
sub
lahf
and
leave
sbb
mov
nop
adc
shll
enter
das
movsl
pop
push
xchg
aam
jne
loopne
ret
adc
loope
jnp
in
jecxz
dec
dec
adc
mov
cmc
jmp
test
push
sar
pop
cmp
mov
rcrl
mov
inc
mov
sarb
and
pop
push
cmpsl
in
xchg
push
pop
xor
adc
pop
mov
pop
adc
pop
or
add
jne
fstl
aad
or
mov
mov
bsf
popa
pop
pop
pop
lahf
dec
ret
pop
xchg
xor
movl
push
push
test
lods
les
push
push
ljmp
scas
in
pop
jl
xchg
cmp
xor
push
lea
xchg
or
imul
vpsrlq
xchg
lods
xor
and
orb
mov
xorl
bound
pusha
ss
push
dec
lea
cmp
pop
test
lock
jl
jo
daa
leave
push
push
add
lods
inc
mov
sbb
movsb
dec
imul
mov
out
push
shrb
add
xchg
xchg
fwait
pop
mov
js
pushf
out
xchg
in
sbb
xorl
in
lock
push
mov
rcrb
add
lds
imul
sbb
in
aaa
movsl
ljmp
xchg
cli
add
aaa
xchg
mov
mov
mov
sahf
pop
scas
cltd
lods
pusha
mov
mov
push
imul
and
bswap
cmp
pop
bound
and
addb
dec
dec
lock
sbb
int3
push
jb
outsb
dec
es
and
mov
mov
adc
add
hlt
jmp
pop
adc
or
or
jmp
sbb
bound
into
push
mov
ja
jp
dec
test
fstps
dec
ljmp
rol
or
aad
jne
sub
jnp
or
mov
aas
or
xchg
aaa
lcall
jns
outsb
fcmove
push
popa
xchg
and
pop
test
sub
xorb
adc
andb
out
pop
mov
xchg
imul
nop
inc
icebp
test
outsl
ficoms
adc
jo
aaa
xor
pop
adc
in
repz
sub
inc
push
adc
es
jl
cmp
aam
mov
pmuludq
jb
mov
jo
das
in
arpl
out
sub
data16
les
jno
xor
mov
popa
mov
inc
xor
sbb
cmp
mov
sub
push
jecxz
dec
and
repz
push
dec
sub
mov
test
mov
daa
fwait
insb
push
add
ds
cli
push
test
rorb
jb
das
notb
jp
fstl
int
repnz
dec
fs
pop
push
fiaddl
cmp
gs
cmpsb
mov
lds
in
loope
testb
cwtl
in
test
pop
sub
push
icebp
push
call
push
add
inc
lcall
inc
adcb
stc
imul
xor
inc
iret
notb
jno
mov
popa
jmp
daa
push
dec
rclb
jo
test
xor
outsb
push
cmp
xchg
and
xor
lods
in
int3
sbb
mov
xor
repz
das
xchg
xchg
push
mov
sbb
adc
sbb
out
icebp
inc
push
xor
cmc
push
pop
aad
cmc
mov
cmp
add
xchg
ja
pop
mov
mov
int3
dec
in
loop
mov
out
inc
dec
xlat
adc
and
cltd
dec
inc
popa
or
or
xor
push
push
fs
addb
daa
fstps
jecxz
arpl
test
in
inc
lock
xor
dec
lods
and
jno
fwait
or
push
inc
mov
stc
xor
jp
lahf
xor
jle
or
adc
icebp
fldl
inc
and
adc
push
mov
cld
loope
inc
xor
xor
add
in
mov
inc
adc
in
sbb
mov
sarb
push
adc
orb
jae
lret
outsb
mov
std
adc
sbb
add
insl
scas
mov
lret
jecxz
nop
xor
add
rcl
xchg
aaa
js
mov
mov
sub
mov
inc
jno
fsubrs
sbb
jl
and
cwtl
and
daa
jae
aad
adc
in
inc
jnp
jmp
adc
imul
ljmp
pop
cmp
pop
enter
add
in
lret
in
add
mov
cld
cwtl
pop
mov
in
sub
mov
xchg
lret
jle
add
nop
sbb
sbb
xor
aas
dec
pusha
jnp
in
aad
and
rcll
insb
jl
sti
out
lahf
flds
pop
mov
out
sbb
push
gs
andb
dec
mov
inc
xchg
shll
ljmp
push
mov
mov
lcall
rclb
loop,pt
or
insb
inc
fidivl
or
jb
add
push
std
add
xorl
out
adc
push
pop
out
cmp
jge
and
jne
inc
push
sbb
int3
dec
lods
sub
push
xchg
and
xor
mov
call
push
call
sbb
pop
or
inc
or
mov
cs
mov
aas
push
mov
test
cs
mov
lds
push
cmp
cli
dec
adc
pusha
mov
or
cmp
cmpsl
jne
jl
fbstp
and
cmp
push
sti
fldt
fisubrl
xchg
xchg
pushf
stos
add
jmp
dec
xchg
enter
or
into
fisubs
xor
cltd
adc
leave
pop
sbb
pop
inc
inc
test
adc
ret
loopne
fmuls
out
push
loope
inc
fdivp
jns
loopne
xchg
add
mov
adc
and
xchg
int3
sub
fisubrl
gs
movsl
movsb
mov
sub
pop
inc
or
bound
mov
fdivl
mov
lods
adc
lea
sub
mov
mov
arpl
or
jmp
or
sarl
or
mov
jmp
jne
aas
push
mov
or
sbb
cmp
pop
sub
mov
sbb
adc
stos
idivb
push
or
xchg
aaa
fsubs
jecxz
sbb
hlt
jae
test
inc
daa
or
ljmp
fcoms
jns
rclb
in
cld
sub
mov
out
pusha
imul
dec
adc
leave
add
cmp
shlb
push
xchg
ljmp
out
popa
fbld
and
add
inc
mov
movsl
or
fstpt
add
jmp
mov
push
push
gs
xchg
jns
addl
les
adc
and
adc
add
popf
jne
sbb
or
mov
fiadds
pusha
jae
or
addb
mov
mov
mov
jp
pop
push
sti
adcl
xchg
das
pop
inc
push
sbb
jmp
cmp
insl
mov
sub
dec
faddp
cmp
lods
movsb
dec
add
inc
sbb
int3
push
xchg
vaddss
fscale
jmp
xchg
jne
rorb
add
xchg
sbb
inc
jmp
and
jecxz
mov
inc
pop
and
xchg
push
out
fdivs
aad
cmc
shrl
loop
popa
pop
rcll
inc
inc
pushf
mov
aaa
rorb
and
rcll
inc
outsb
xchg
repz
add
mov
cmp
gs
jecxz
psllq
pop
or
insl
js
pop
add
or
xor
repnz
out
repz
pop
dec
test
aam
sbb
test
mov
lahf
mov
or
cmp
add
outsb
ja
push
mov
je
dec
out
xor
into
push
aam
dec
fcomp
add
mov
aam
shrl
aas
js
mov
push
loope
shll
adc
add
das
mov
adc
cld
push
clc
sbb
jnp
mov
in
pop
xor
addb
fiaddl
inc
dec
fdivr
rcr
test
dec
scas
mov
leave
pop
shrb
push
negb
inc
adc
mov
mov
gs
jae
shr
sahf
mov
xchg
or
ljmp
sbb
fs
xchg
mov
jle
rol
push
out
hlt
dec
dec
dec
jbe
sub
lret
jp
mov
jne
pop
dec
idivl
xchg
push
fists
push
pop
push
outsl
cs
adc
orb
inc
cmp
lret
mov
lds
sbb
or
out
sbb
inc
or
movl
bsr
pushf
or
test
sbb
xchg
fsubl
ljmp
sub
jl
test
jne
mov
dec
lea
test
jae
and
std
mov
cli
or
add
mov
scas
sti
loopne
cmpsb
int
push
insl
insb
mov
xchg
fistl
movsl
xor
ljmp
cmp
jnp
lods
sbb
scas
insl
mov
mov
aam
cmp
pop
in
inc
adc
lods
adc
mov
add
sbb
shl
adc
mov
divb
push
and
jg
xchg
hlt
pop
clc
outsl
out
inc
rcrl
mov
dec
shll
jp
and
push
stc
pop
dec
jmp
pop
clc
lret
stc
dec
movb
imul
leave
xchg
das
mov
mov
in
call
pop
in
mov
pusha
aas
jecxz
jecxz
jns
test
test
jge
test
sbb
jg
aaa
push
xchg
cmpsl
jge
fsubrl
cmp
scas
out
dec
xchg
incl
out
jg,pn
sbb
popa
adc
add
enter
xor
out
out
jle
popf
push
xchg
dec
mov
and
inc
jge
cmp
bound
dec
adc
xchg
jl
movsb
ja
pop
push
pushf
push
mov
rcrb
pop
cli
pop
subb
lret
shll
inc
ds
xlat
js
adc
or
dec
and
fildll
adc
incl
out
in
lds
xchg
jo
pop
dec
adc
insl
xchg
inc
push
push
call
jp
push
pop
push
out
lock
inc
inc
aam
aad
dec
lods
mov
nop
shrb
fsubrl
add
scas
imul
add
xor
bound
loopne
jge
cmp
mov
inc
inc
pop
movsl
sti
push
mov
mov
cmp
cmp
insb
push
mov
lcall
loopne
adcb
cmpsl
lcall
outsb
push
push
fwait
mov
divb
repz
ljmp
daa
hlt
dec
cmp
mov
add
push
adc
sub
leave
mov
push
idiv
fadds
aam
mov
cmp
jp
xor
jb
jp
add
push
and
rcrb
xlat
xchg
adc
push
push
je
cwtl
loop
pop
int
pushf
les
sahf
outsl
cmp
loopne
jecxz
mov
sbb
arpl
clc
push
sub
jbe
jl
add
test
sbb
test
dec
and
pop
pop
leave
cwtd
stc
cwtl
sub
roll
pushf
fcompl
jmp
pop
xor
in
add
idivl
pop
sbbl
cmp
das
ja
jo
imul
mov
stos
push
jo
je
sbb
dec
mov
nop
dec
fsub
enter
out
mov
call
testb
adc
xor
iret
jmp
push
js
sbb
adc
push
pop
xor
mov
gs
push
mov
adc
inc
push
and
lods
push
sub
shl
popa
popf
fisubrs
insl
push
inc
cmpsb
mov
aam
fwait
push
adc
pop
pushl
cmpsl
imul
fldenv
ret
fnstsw
inc
push
rclb
mov
jle
test
push
sar
outsl
int3
test
in
mov
dec
in
jo
pop
leave
xchg
jae
mov
inc
jae
orb
jmp
int3
ret
aad
inc
icebp
mov
xor
mov
xchg
shlb
frstor
repnz
jmp
mov
jae
cmp
ret
in
mov
insb
into
or
dec
mov
fidivs
loope
jp
mov
js
in
or
and
sub
imul
lret
pop
dec
test
faddl
sub
adc
lcall
jmp
xor
rcr
jno
aam
or
iret
mov
xor
mov
lock
xchg
xchg
push
mov
cmpsl
cmpsl
add
mov
lods
lahf
add
sub
and
push
push
jae
fwait
push
in
cmpsb
sbb
mov
jbe
and
leave
adc
mov
cmp
mov
pop
outsb
lods
xchg
adc
cmp
xchg
jns
fstps
fs
pusha
or
and
leave
push
and
dec
mov
arpl
leave
test
repz
insb
popa
ffreep
shll
stos
aad
clc
ret
xor
rep
adc
inc
jbe
pushf
mov
pop
ja
lods
pop
dec
mov
sbb
mov
sub
dec
pop
cmp
push
push
push
loop
in
nop
orb
scas
cmp
leave
cmp
loopne
xor
out
shl
mov
push
into
lret
add
jns
ret
leave
lret
cmp
push
lret
out
loopne
cmpsb
xchg
stos
int3
pop
or
pop
iret
mov
jo
repz
xor
adc
cmp
and
xor
dec
push
or
push
lea
jmp
sarl
sahf
cmp
sbb
sub
fstl
push
data16
xor
into
negl
inc
mov
and
cmp
ret
sbb
ljmp
xchg
and
repz
pop
sbb
mov
add
test
ljmp
gs
xor
mov
repz
divb
out
dec
cmp
fdivs
lods
jl
sub
mov
dec
leave
pop
adc
mov
es
push
std
mov
shll
xor
iret
mov
mov
ja
int
mov
popa
add
adc
pop
mov
mov
mov
and
xor
imul
adc
lahf
xor
mov
sub
push
mov
ret
add
adc
xchg
push
or
sbb
pop
push
xchg
addl
and
repnz
cmp
xlat
add
int
cs
scas
test
inc
dec
mov
and
out
mov
inc
mov
test
into
pushf
mov
or
rorl
fwait
pop
daa
pop
adc
and
pop
sub
adc
push
sub
jns
xor
cmp
jo
mov
inc
loop
stos
out
aam
inc
mov
gs
pop
xorl
lcall
testl
mov
rcrb
add
jl
sbb
inc
loopne,pn
sbb
push
inc
aaa
lds
fcmovb
adc
mov
clc
cmp
lea
or
jno
dec
or
hlt
sbb
sahf
sahf
repz
sub
aam
push
lret
movsl
dec
test
test
fisubrl
scas
out
mov
addr16
cmpsl
out
in
sbb
stos
int
sti
mov
lods
xchg
mov
mov
sarl
repz
lcall
dec
and
fcoml
adc
repz
adc
sub
mov
xor
pop
sbb
sarl
repnz
xchg
sub
insl
push
shrb
shl
pop
iret
jb
sub
dec
mov
mov
test
fstps
push
sbb
in
fnstenv
and
idiv
adc
stos
pushf
jb
test
repnz
add
sbb
xchg
fimuls
or
jg
mov
jbe
push
aas
sbb
mov
das
sarl
xchg
subb
dec
mov
sub
ds
mov
mov
pusha
dec
loope
add
aam
arpl
in
enter
push
add
sub
jg
jae
insb
dec
lcall
mov
arpl
and
into
fldenv
ret
mov
dec
sahf
test
in
outsb
in
mov
sbb
push
push
shll
ret
int
cmp
mov
movsl
and
sub
mov
inc
lock
xchg
push
fisttpl
ret
sub
scas
push
cmp
mov
cld
mov
mov
and
push
or
push
add
and
xor
jle
std
ss
rorb
add
insl
and
mov
movsl
aam
jmp
pop
mov
fucomi
xor
lods
mov
jbe
add
xchg
dec
sub
aas
and
mov
sub
or
and
sbb
pop
lahf
call
mov
mov
ret
stos
movsl
push
loop
insl
mov
sub
xchg
pop
lahf
sbb
mov
jle
ret
pop
inc
rorb
push
fisttpl
sub
sbbb
hlt
sub
xchg
sarb
insb
insb
push
scas
repnz
into
or
mov
cli
mov
lods
sbb
inc
inc
test
stos
dec
sbb
add
push
jbe
mov
dec
or
xchg
scas
cmp
aam
mov
dec
pop
or
pop
and
pop
dec
cmp
inc
sbb
or
jae
push
dec
std
out
adc
sbb
lret
fisubrs
pop
mov
scas
or
fistl
push
sub
loopne
pop
xchg
jns,pn
out
sub
or
cmp
fwait
test
mov
and
add
loope
das
inc
inc
push
daa
or
inc
je
add
sbb
rol
pop
dec
cs
mov
lock
fcomps
or
std
test
sub
into
xchg
pop
mov
out
dec
cmp
ja
lea
push
shl
ret
mov
outsl
int
insb
jle
setp
pop
js
test
cmp
imul
xor
pop
jle
mov
movsl
int
roll
push
xchg
mov
imul
fcmovnb
lcall
xchg
test
lods
dec
into
cmp
or
inc
repnz
mov
jge
leave
faddl
addb
in
loope
pop
mov
ret
test
inc
inc
sbb
xchg
xor
xchg
mov
nop
sub
dec
inc
iret
mov
daa
adc
sti
mov
dec
std
push
fucomip
lret
dec
rol
stos
js
sub
push
adc
inc
mov
and
cwtl
pop
jne
xor
out
clc
out
add
mov
lock
inc
dec
jecxz
xor
cmp
fisubrs
mov
inc
pushf
and
js
aad
mov
std
sbb
xchg
and
enter
fidivs
push
je
out
shrl
adc
andb
adc
mov
pop
std
dec
mov
js
adc
mov
icebp
and
inc
jl
outsb
jae
fsubrs
out
inc
das
jge
stos
or
enter
pop
sti
into
shl
rcrb
pop
mov
test
scas
inc
and
sarb
lods
icebp
inc
adc
jge
andl
cmp
jle
fnstenv
sub
orl
sub
cmp
stos
sub
imul
cmpsl
push
xor
xor
dec
pop
push
mov
dec
add
and
stos
lahf
push
out
lret
inc
leave
shlb
fst
mov
or
jl
cmp
xchg
push
lds
sbb
and
stos
sbb
cmp
push
push
inc
jp
js
add
and
push
int3
popf
inc
add
aaa
inc
aad
fisttpll
shll
lret
repz
or
jns
dec
xchg
inc
adc
test
int
sub
sub
jmp
dec
push
out
sub
push
shrb
sbb
jo
in
scas
or
mov
dec
call
jb
int
inc
daa
das
faddl
xor
push
xor
push
mov
add
push
cli
jno
int3
ja
adc
jg
push
jae
and
test
cli
jne
xchg
or
adc
pop
pop
pusha
dec
xchg
stos
clc
pop
jp
sbb
jae
aam
jp
sbb
jbe
test
movsl
ja
inc
ljmp
fnstenv
roll
clc
dec
jg
and
std
inc
das
mov
pusha
xor
push
test
pop
mov
mov
xor
cmp
jnp
out
in
cmpsw
jo
sbb
movsb
sbb
pop
sbb
repz
jae
pusha
jno
and
arpl
sub
pop
push
test
rclb
inc
jg
add
mov
xor
test
jns
lcall
adc
lods
sub
or
es
int3
insl
cmpsb
mov
loope
dec
or
imul
repz
fld
roll
mov
push
xor
or
testl
outsl
add
sbb
popa
js
lret
add
jo
pusha
add
movups
mov
loop
lahf
test
lea
gs
pop
xchg
mov
mov
outsl
mov
test
push
xor
push
addl
sub
rclb
mov
out
sbb
out
cmc
mov
mov
jae
cmp
stos
cmp
insl
cltd
mov
inc
aas
rcr
mov
push
addb
decb
pushl
mov
mov
pop
movb
push
jg
aas
mov
push
push
adc
xor
xor
or
sbb
ljmp
repnz
es
arpl
inc
push
fs
test
int3
sbb
xchg
push
in
sbb
int
pop
fadds
stc
pop
push
jmp
hlt
subb
lret
packuswb
popf
sub
sti
jbe
inc
fidivrl
mov
ret
jp
jne
ds
hlt
lret
or
stos
call
adc
imulb
or
or
mov
inc
sub
mov
dec
sub
push
or
and
cmp
aaa
jl
cmc
std
inc
cld
or
repnz
outsl
mov
dec
out
es
and
lcall
movsb
push
divl
popa
cmp
cmp
fsubrl
mov
jnp
rclb
iret
pop
imul
or
jnp
arpl
cli
pop
mov
push
sub
cld
dec
push
aad
cmp
xor
and
pop
jp
cli
cmp
pop
cmpsl
mov
sarl
adc
inc
push
dec
ljmp
adc
test
lock
out
pop
adc
call
mov
mov
pop
jb
pop
mov
int
cld
add
sub
xchg
or
or
aad
adc
pop
sub
stos
push
cmp
lret
ret
lret
jle
imull
and
cmp
and
xor
testl
sbb
and
lret
int3
fidivrl
cmp
pop
out
call
push
jl
js
jecxz
mov
lea
daa
sub
leave
add
fsubrl
pop
stc
sub
in
mov
sub
test
aam
fisubs
sub
jle
pop
dec
pop
iret
fcmovnbe
jl
or
outsl
cmpsb
jle
add
cli
das
push
mov
adc
mov
repz
in
in
add
stc
das
and
outsl
mov
in
insb
or
inc
in
out
push
sbb
insl
lods
push
mov
mov
lcall
mov
jae
and
and
mov
sbb
bound
mov
mov
ficompl
iret
add
fs
out
xchg
aaa
into
push
cli
stos
mov
aad
jl
inc
shr
ret
mov
mov
es
lahf
int
jnp
xchg
lock
cmpsl
insb
inc
in
pop
daa
push
cmp
iret
mov
cltd
sbb
mov
int3
inc
shrl
loopne
mov
insl
out
push
dec
test
push
cmp
mov
adc
scas
iret
or
cmp
sub
push
or
cmpxchg
rorl
dec
je
shlb
xchg
testl
xorb
sub
adc
sarl
lret
insl
shlb
or
lret
lret
imul
sarb
push
sbb
mov
dec
mov
push
in
addb
jbe
movsl
mov
pop
rcr
and
mov
pop
jo
les
insb
cmp
fmulp
pop
clc
popf
cli
sbb
sahf
jge
cmc
bound
cmp
lods
call
ret
adc
ret
shlb
cld
mov
pop
sbbb
popa
imul
mov
movsb
incl
pushf
xchg
pop
fildll
adc
popa
ror
xchg
mov
inc
test
jl
divl
mov
jge
imul
cs
push
jbe
sub
mov
mov
stc
jl
inc
inc
fsub
rclb
hlt
hlt
aaa
outsl
inc
lahf
xchg
adc
jbe
shrb
lahf
nop
or
mov
push
pop
or
mov
mov
scas
call
test
adc
push
imul
loope
xchg
lds
mov
popa
out
loope
aad
sti
cltd
cmp
xlat
inc
loope
inc
cmp
stos
cli
shl
loopne
fisubs
and
pop
pop
ss
gs
sbb
push
or
fnstenv
mov
fisubrl
idiv
lods
xor
popf
jmp
mov
sbb
sub
cli
cld
shll
jne
loope
gs
push
popa
das
movsb
adcl
lods
sti
or
loope
adc
rorl
sbb
jno
adc
xor
negl
fs
cmp
mov
mov
push
loopne
es
adc
lds
push
xchg
cmp
pop
aaa
test
int3
unpcklps
inc
testl
mov
clc
test
mov
sub
push
dec
jns
mov
ret
lcall
mov
pop
adc
nop
test
enter
inc
xchg
in
xchg
out
cmp
int3
xlat
and
push
out
test
mov
nop
leave
roll
sbb
cwtl
dec
xor
pop
xor
jmp
addr16
orl
xchg
pop
jmp
arpl
xchg
rclb
mov
push
shlb
lds
leave
mov
sub
outsb
test
dec
and
lods
lods
jno
in
mov
lds
mov
and
loope
jecxz
idiv
cmp
and
nop
and
lods
and
stc
xchg
sbb
xor
sub
and
movsl
fcmovbe
fisttps
inc
lret
bound
or
add
and
out
and
mov
aad
mov
fwait
out
lods
xchg
mov
lret
mov
fucom
fbld
sub
inc
xchg
mov
out
repnz
mov
roll
bound
lods
or
call
iret
enter
ja
mov
pop
push
aam
cmc
xorl
pop
or
pop
mov
xor
enter
fisubl
cmp
fimuls
loop
or
mov
js
mov
xor
xlat
and
out
mov
arpl
and
xchg
dec
out
ds
fmull
inc
sbb
jl
outsl
lahf
jl
movsl
add
popf
jo
pop
sub
and
add
cmp
xchg
add
mov
pop
mov
test
sub
cmpsb
xlat
jl
rcrb
inc
jno
adc
testb
ds
push
rcrl
int3
inc
lcall
lret
cld
out
loope
mov
lds
mov
hlt
pop
in
pop
lret
adc
fldlg2
inc
dec
mov
inc
or
sub
scas
sti
scas
adcb
inc
push
cmp
nop
out
or
nop
inc
cmpsl
mov
addr16
jl
out
dec
add
xchg
sub
adc
clc
xor
xchg
rorl
stos
or
std
dec
mov
std
xor
push
xor
cmpsb
pop
xchg
push
mov
mov
ja
inc
pop
and
sub
jmp
pushl
pop
mov
pop
pushf
push
add
pop
push
call
xchg
mov
mov
jb
lods
rcl
jl
rol
xchg
test
das
xchg
pop
in
and
popa
ja
inc
dec
loop
andl
and
mov
cmp
mov
aam
clc
cli
cmp
mov
clc
inc
movq
arpl
cmp
jmp
inc
aam
dec
jb
int3
insb
xor
add
rcrl
bound
inc
dec
jmp
jbe
dec
popa
cs
leave
jbe
or
addr16
mov
xchg
shlb
xor
adc
test
add
or
lret
sbb
sbb
out
cmpsb
xor
pop
push
imull
xor
iretw
cmpsb
in
add
jmp
add
lock
test
les
sbb
dec
daa
and
add
leave
pop
sbb
and
ss
in
cmc
xchg
pop
mov
sbb
pop
stc
mov
loop
clc
dec
xor
dec
pop
jb
push
fs
sahf
add
push
jne
stos
jecxz
mov
fmull
dec
xchg
div
cmp
aas
cmp
adc
or
cmp
faddl
push
adc
xor
dec
in
or
icebp
cmp
lods
jle
cmp
mov
mov
jne
adc
cmp
mov
test
sub
test
mov
jecxz
ja
cmp
dec
jl
call
sarl
dec
gs
popa
or
mov
data16
jno
rclb
fsub
sbb
push
imul
mov
int3
push
fildll
pop
or
adc
jmp
out
adc
loop
arpl
dec
sti
mov
mov
xchg
mov
inc
shrb
pop
sbb
add
imul
pop
mov
sahf
enter
icebp
push
out
mov
cltd
test
jnp
jnp
pop
sahf
clc
push
cmp
push
and
clc
sbb
mov
sbbl
xchg
xchg
xlat
and
push
push
push
add
inc
inc
cmpsl
iret
xor
lahf
insl
inc
ja
inc
scas
cmp
and
add
aas
add
in
lret
or
dec
jle
jae
sahf
outsl
xchg
negb
ret
cmp
mov
add
push
push
setnp
js
leave
jmp
sbb
das
sahf
in
mov
pop
dec
push
add
and
and
adc
ficompl
data16
pop
insb
push
idiv
outsl
pop
lock
mov
scas
arpl
mov
and
xor
lods
aad
imul
xor
xchg
cmp
pop
dec
cmpsb
gs
sbbb
jp
fsts
push
rcrl
imul
js
jmp
dec
or
arpl
or
mov
jbe
sbb
pusha
adc
fsubs
pop
hlt
xor
sub
stos
pop
jmp
jmp
xchg
mov
loop
xchg
push
cmp
jl
adc
aam
cmp
inc
push
xorb
subl
pop
js
pop
sarb
and
in
mov
aas
dec
nop
bound
addr16
ds
out
cmc
add
sbb
dec
lods
leave
cmp
sub
roll
inc
hlt
mov
or
fisubl
mov
mov
fsubs
loope
shll
and
jnp
cld
sub
scas
xor
add
lret
or
jl
mulb
mov
sbb
into
cltd
jns
in
sbb
adc
cs
movsl
mov
int
xor
pop
and
adc
stos
imul
jne
popf
imul
imulb
dec
push
leave
js
xchg
orl
mov
cmp
clc
cmp
mov
fwait
pop
daa
sub
outsb
incl
cmp
push
push
daa
dec
add
inc
fidivl
mov
mov
mov
adc
adc
add
xchg
addl
mov
cmp
scas
inc
cmp
leave
fwait
cmc
mov
mov
pop
jbe
imul
jle
add
mov
inc
addb
mov
jbe
jecxz
or
or
sub
dec
das
mov
js
and
addr16
sbb
mov
lcall
xor
test
xchg
cltd
lods
pushf
jo
inc
fimuls
adc
inc
outsl
or
fcomp
popf
pop
ficoml
out
mov
js
andb
push
adc
xor
dec
inc
insl
movsl
jecxz,pn
lcall
je
mov
pop
pop
xorb
sbb
xor
push
lods
das
adcl
cwtl
das
dec
mov
pop
rolb
mov
pop
rol
cmp
push
inc
mov
jmp
ljmp
pop
into
push
sbb
jnp
xor
adc
cmp
lock
cltd
mov
xchg
leave
cwtl
clc
test
into
mov
mov
aad
cwtl
xchg
pop
daa
jp
int
ret
add
dec
dec
dec
mov
pop
mov
mov
aaa
and
lret
sahf
mov
loop
movsl
dec
pop
pop
sbb
push
sbb
mov
or
cs
test
sbb
cmp
adc
icebp
xchg
xor
daa
mov
pop
dec
or
pop
fwait
dec
movsb
mov
add
inc
adc
mov
mov
stos
cmp
ret
hlt
fisubrl
inc
jns
hlt
sub
stos
xchg
pop
pop
jmp
and
xor
aad
into
adc
dec
inc
ds
ljmp
loop
dec
or
push
into
out
lods
mov
jge
sbb
in
adc
sbb
sbb
icebp
add
push
mov
mov
insb
mov
pop
rcl
xchg
rol
mov
jge
insb
movsl
mov
mov
mov
out
lahf
pusha
push
cs
scas
jae
inc
dec
push
popf
and
jl
push
arpl
in
push
repz
fdivl
aam
pusha
add
into
sbb
rcrb
leave
pop
or
addr16
mov
data16
xchg
ljmp
cmp
ret
outsl
cs
sbbl
push
push
adcl
xchg
pop
cli
sbb
sub
push
pop
mov
push
lods
cmp
pop
add
arpl
dec
mov
js
mov
sub
scas
jae
loopne
daa
mov
mov
int
cmpsb
push
je
mov
loopne
adc
repnz
sahf
das
sbb
and
out
scas
push
les
or
xchg
sbb
mov
lahf
jno
push
xchg
and
dec
adc
rcrl
and
cmp
cs
xor
lret
cmp
shrl
mov
add
ret
arpl
sbb
fs
sbb
data16
rcrl
jbe
jno
shlb
dec
jl
pop
add
pop
mov
lahf
gs
leave
cmp
stos
punpckhdq
mov
test
loope
loop
mov
movsb
dec
or
and
repnz
xor
add
adc
filds
xchg
or
into
xorl
test
jp
sub
sbb
fsubp
nop
and
mov
pop
sbb
lea
adc
std
addb
aam
push
push
fsubrp
and
jp
pop
pop
rorb
cmpsl
cmp
jns
push
test
cltd
dec
cmp
outsl
jp
or
js
pop
dec
and
xchg
or
dec
cwtl
sub
sub
ja
sbb
pusha
or
enter
add
lock
sbb
dec
mov
mov
ret
and
outsl
fdivl
fs
jo
shlb
cmpsl
cwtl
mov
mov
add
mov
cwtl
mov
pop
add
les
mov
iret
je
xchg
add
outsb
into
shlb
xor
clc
fnstenv
xor
popf
sbb
jae
arpl
hlt
adc
fs
not
je
dec
and
mov
in
test
push
xchg
jmp
xchg
test
lret
sbb
pop
mov
insl
lods
lds
fbld
fcomip
cli
pop
rclb
jl
cmpsl
sarb
lds
mov
inc
test
outsl
decb
sar
movsl
adc
fdivrs
xchg
scas
mov
sub
pop
or
mov
mov
cmp
dec
xor
cmp
in
push
mov
movsl
ret
xchg
cli
dec
in
fs
lds
mov
add
fnstsw
sub
pop
sbb
or
pop
int
repnz
jbe
pop
inc
push
cmp
push
test
out
sbb
dec
sbb
mov
popa
loop
inc
dec
das
and
movsl
pop
and
dec
stos
xchg
mov
std
adc
push
jmp
in
subb
dec
sbb
mov
es
repnz
pushl
adc
push
mov
xlat
xor
call
icebp
pop
rolb
insb
out
dec
dec
stc
sbb
sbb
xchg
ret
jmp
xchg
jp
mov
shll
sahf
jb
lods
push
stc
lock
lcall
sub
cld
dec
int
push
sbb
inc
aas
ret
sub
orb
icebp
sbb
mov
aaa
push
sub
mov
movsb
lea
mov
and
int
cmp
incb
push
cmpsb
ja
je
push
sti
mov
movsb
xchg
insl
xchg
jo
mov
mov
sub
xchg
insl
cmp
iret
sub
jmp
shll
outsb
adcl
faddl
push
pop
lods
mov
callw
mov
or
mov
repnz
push
lret
sub
jg
cmp
or
ret
adc
and
popa
sub
mov
jnp
pop
adc
mov
pusha
pop
stos
aas
sti
loope
out
jb
in
fbld
add
cmp
xor
lret
and
outsl
fistl
and
call
lret
mov
lcall
outsb
into
arpl
push
test
inc
add
push
push
outsl
push
and
adc
daa
mov
mov
jmp
insl
cwtl
inc
push
lahf
add
pop
addr16
enter
cmp
mov
mov
icebp
jb,pt
sbb
lcall
push
addr16
sbb
mov
and
mov
mov
sub
push
and
sbb
loope
add
cmp
pop
fldl2e
pop
pop
dec
sub
adcl
in
scas
dec
lea
jae
enter
test
pop
jmp
into
sarb
mov
bound
sub
xchg
jns
fwait
or
sbb
pop
add
cltd
addl
stc
outsb
mov
xor
sarb
lcall
repz
mov
ss
aaa
dec
dec
loope
sbb
data16
arpl
mov
jno
push
fcoml
pop
je
inc
mov
xor
rorl
mov
adc
pushf
sub
push
and
dec
lea
jl
pushf
lock
mov
aad
pushf
out
push
arpl
inc
mov
mov
aas
out
in
jmp
inc
shlb
or
push
xor
cmp
xlat
insl
imul
push
mov
mov
and
pop
add
rol
scas
cmp
mov
imul
dec
lods
sub
fsubl
call
stos
inc
cmp
loop
xor
or
cmp
mov
jg
int
fdivrl
mov
je
cmp
xchg
xchg
loopne
mov
sbbb
push
fimuls
loope
int3
mov
scas
mov
pop
cmp
jnp
sbb
data16
aaa
fnstsw
mov
imul
call
repz
jbe
ss
int3
insb
mov
stos
insb
in
and
sbb
jo
rolb
les
push
ljmp
in
pop
popf
arpl
xlat
push
int
fbld
loope
stos
inc
lods
fldl
clc
xlat
push
rorl
lods
je
add
in
and
incb
mov
ss
dec
gs
push
push
xchg
std
push
push
lds
fcmove
loop
aas
xchg
mov
dec
repnz
pop
insb
mov
cmp
clc
mov
cmc
inc
push
pop
add
xchg
mov
out
sbb
in
xchg
out
xor
sub
mov
insl
stos
dec
aad
es
in
cld
cmpsb
jne
sub
adc
and
cmp
rorb
outsl
jecxz
or
fcmovnb
int3
mov
pop
jnp
mov
mov
jbe
jbe
outsb
add
push
cltd
xchg
subb
push
es
cmp
jmp
aad
test
test
sub
mov
movsl
jb
fwait
negl
mov
imul
xor
shlb
push
ljmp
js
jae
mov
rclb
jmp
cmc
xor
movsl
out
dec
dec
add
cmp
das
or
dec
imul
adc
out
sub
jb
btcl
scas
mov
out
aas
pop
cli
push
into
inc
mov
bound
jae
test
stos
shl
pop
repnz
aad
call
int3
push
cmp
aas
adc
sub
jae
xor
mov
push
cmpsb
fstl
and
push
mov
jmp
jg
gs
pushf
sbb
dec
fdivs
pop
mov
enter
mov
dec
mov
clc
cmp
js
jo
fisubrs
stc
xor
ljmp
insl
cmpsl
add
ja
lea
add
outsl
iret
in
xchg
jno
sahf
inc
pusha
jmp
lock
or
xor
test
popa
sbbl
cltd
cmp
cmpsb
mov
hlt
xchg
xlat
aam
dec
ror
mov
jmp
nop
mov
fucomip
and
dec
test
sbb
aad
sub
xchg
imul
in
cli
jne
mov
jge
push
inc
mov
jmp
lea
stos
push
sbb
inc
mov
mov
mov
cli
rcll
fstpt
fwait
or
cmpb
in
sub
sub
inc
imul
pop
pop
adc
push
int3
fstps
xchg
outsb
lahf
aam
or
lret
cmp
std
aam
imul
pop
xchg
cmp
enter
sbb
jmp
cwtl
push
dec
add
adc
jl
add
stc
pop
jns
dec
arpl
lcall
aam
scas
push
xchg
and
sbb
pop
pusha
xchg
push
enter
out
in
call
mov
insb
lds
dec
ror
jb
mov
data16
arpl
repnz
add
and
stos
sbb
std
outsl
outsl
mov
push
imul
mov
sbbl
or
cmpb
outsb
pop
out
fisubs
fucomi
mov
lds
push
jns
mov
inc
mov
jg
jo
in
cmp
sbb
mov
xchg
push
sbb
and
push
nop
inc
fistpll
arpl
xchg
in
enter
sbb
inc
and
idivl
popf
int3
push
push
sub
into
sbb
inc
stc
cltd
testl
rcrb
jae
pop
loopne
cmp
andb
add
daa
mov
dec
ja
ret
loope
mov
stos
mov
nop
repz
sbb
cmp
loopne
dec
loope
fisubs
or
jmp
cmp
cmpsb
out
mov
adc
into
ja
xchg
push
inc
mov
shrl
cli
sub
pop
xor
addr16
inc
cmp
sahf
add
shll
js
sbb
lahf
sub
xchg
sub
cmp
xor
js
testl
xlat
inc
imul
push
aam
xchg
inc
jp
insl
shlb
adc
xor
mov
jg
jb
mov
cmp
ja
loope
lods
enter
test
sbb
xchg
jnp
popa
mov
icebp
dec
iret
sub
movl
push
jg
sbb
jne
outsl
lcall
out
call
inc
jo
int
dec
jl
cmp
ret
cmp
pop
ficoms
pop
cmc
es
lock
inc
fwait
cmp
dec
jl
mov
hlt
fisubs
scas
lret
push
imul
fdivl
out
cmp
into
push
sbb
add
vandps
stc
shll
add
sub
cli
and
lds
sub
cmpsb
jne
xorl
push
and
sti
es
cmpsb
js
and
stc
inc
fs
lcall
filds
pushf
adc
cwtl
pop
pop
sub
test
movsb
adc
out
sub
lods
add
xchg
aaa
leave
xchg
je
negb
jle
sub
xor
lret
gs
cld
cmp
push
adcb
je
adc
jecxz
jno
dec
out
fcmovnu
repz
inc
add
mov
mov
adc
cmp
test
mov
cmc
repnz
in
xorb
mov
inc
jg
clc
or
ret
js
in
shl
add
outsb
xchg
mov
pop
pop
outsl
mov
shrl
lods
and
and
inc
mov
mov
mov
sbb
pop
into
nop
add
repnz
pop
sti
imul
xor
out
mov
dec
mov
mov
xchg
sbb
insb
call
loop
and
fistps
imul
sub
clc
lods
int
pop
jae
cli
mov
xor
inc
fsubs
jmp
inc
repnz
adc
lret
push
fnstsw
lcall
enter
je
loopne
ret
or
sub
lahf
call
and
jge
ss
in
decb
mov
xchg
inc
inc
sub
mov
or
js
lock
pop
jns
dec
js
and
call
sub
xchg
out
add
dec
in
std
cmp
xchg
push
dec
jbe
cmp
sbb
adc
dec
mov
push
das
aad
adc
test
xchg
cmp
orl
test
int
daa
mov
sub
cmpsl
repz
out
adc
or
jb
jbe
das
or
mov
cld
sub
faddp
cwtl
push
aas
dec
cli
cmc
int
mov
data16
test
mov
push
mov
mov
imul
mov
scas
ljmp
js
in
aaa
ljmp
and
sbb
nop
call
and
sub
mov
icebp
push
and
stos
pop
pop
sub
add
jne
loope
pop
enter
push
push
stos
and
push
mov
inc
or
xlat
movl
push
sub
or
mov
jno
pop
dec
mov
lret
mov
jb
iret
test
int3
inc
mov
test
int3
enter
js
out
push
stos
mov
xchg
clc
lret
adc
jg
push
aam
fstps
sbb
aas
dec
lods
mov
add
mov
loop
add
cwtl
adc
jns
sti
lcall
enter
xor
in
pop
iret
inc
pop
cmp
and
mov
cld
xchg
fstpl
sbb
xor
pop
out
sbb
mov
repnz
cli
call
jle
das
mov
or
fidivl
lods
adc
push
mov
jns
insl
or
outsl
and
mov
jmp
maskmovq
imull
out
push
xor
in
and
push
subb
stos
cmpsl
lret
into
pop
cmp
rdtsc
and
push
xchg
cmpl
cmpsb
ret
mov
push
adc
push
rcr
xor
aas
call
shll
pop
pop
insb
es
lcall
out
cmp
loopne
loopne
add
mov
xor
push
test
call
lahf
cmp
testl
cvtdq2ps
les
jmp
dec
add
push
adc
adc
jnp
adc
jae
mulb
repz
lret
mov
and
or
push
sti
or
int3
jo
stc
test
adc
test
mov
shrb
shl
mov
dec
mov
pop
aam
mov
sub
scas
mov
outsl
lcall
pop
sahf
test
in
push
pop
lret
das
inc
jo
xchg
enter
and
xchg
jge
mov
shlb
mov
imul
aad
scas
push
lea
jle
push
dec
mov
push
xchg
add
imul
int3
pop
or
or
sti
push
imul
push
aaa
push
and
ss
neg
mov
cmc
hlt
mov
add
pop
lods
sbb
sub
icebp
cmpb
cmpsb
xchg
xor
dec
pop
mov
jb
inc
mov
stos
sbb
roll
jb
cs
jnp
pop
dec
jecxz
mov
in
out
loope
fcmovne
stos
and
adc
call
ljmp
adc
pushf
xchg
mov
add
pusha
cmpsl
inc
fcompl
inc
ds
shlb
aad
cmp
jne
aam
adc
or
and
mov
inc
lret
out
push
and
daa
push
jnp
and
add
xor
imul
lret
cmc
mov
jne
scas
sbb
ret
movsl
mov
mov
jle
sti
loop
ret
pop
cmp
push
leave
inc
out
sub
mov
xlat
loop
lcall
mov
adc
jmp
jge
mov
fldl
mov
sub
pusha
xor
clc
cmc
dec
mov
jno
fnstcw
dec
adc
push
cmp
adc
nop
jnp
lods
pop
or
jb
pop
cmp
popa
mov
jne
sbbl
fwait
add
xchg
jns
ja
shl
xchg
loopne
dec
std
test
ficomps
pop
mov
enter
dec
mov
loop
mov
xchg
dec
in
enter
ret
cmp
addr16
mov
rcrb
xchg
ja
mov
sti
idivl
fs
pop
ss
lahf
mov
sbb
js
pop
out
int
fwait
arpl
mov
ror
pop
ds
xchg
xchg
pop
mov
and
pop
mov
std
push
mov
ret
sub
loopne
add
ja
adc
test
test
sbbl
push
pop
movsb
insb
std
jo
xlat
repz
mov
xchg
jle
jo
jmp
sbbb
xor
push
jl
pop
clc
ret
in
push
push
pop
leave
out
imul
adc
int3
pop
xchg
or
push
xchg
add
cli
in
adcb
push
fstl
add
cmp
dec
fistpll
and
or
jb
jo
sbb
mov
xor
into
ja
push
pop
mov
cmp
jae
imul
popf
fwait
les
leave
sbb
mov
dec
cltd
lret
adc
rol
jg
add
sbb
inc
jne
sub
xchg
and
cmp
sub
sub
pop
push
adc
ret
xor
lret
nop
mov
or
ret
xor
jo
ja
outsl
repnz
arpl
xchg
jecxz
repz
dec
rcrl
mov
jb
cmp
add
aaa
movsb
and
fcoml
jnp
int
jnp
test
xchg
push
ja
xchg
fsts
scas
push
cmc
jns
xor
jne
xchg
mov
xchg
and
jl
sbb
mov
mov
jle
fidivs
sbb
iret
or
adc
insb
mov
fcoms
lods
cmp
jo
mov
mov
rorb
sbbl
fsubrs
cld
jnp
arpl
mov
rclb
std
das
loope
jp
xchg
aad
sbb
dec
mov
xor
xchg
push
jnp
pop
inc
ror
dec
outsl
imul
mov
popl
jecxz
cwtl
mov
rcrb
pop
cli
rcrb
cmp
add
out
and
insb
dec
sub
push
sbb
out
shl
mov
mov
sbb
dec
call
mov
pusha
mov
aam
sti
cwtl
push
sahf
mov
xchg
sahf
popa
push
nop
push
repnz
je
or
push
jb
and
fldl
pop
sub
dec
cmp
andl
fiaddl
xor
lea
clc
scas
jnp
xlat
fistl
fidivs
std
and
movnti
cmp
or
addr16
mov
pop
xor
stc
cwtl
mov
jl
imul
dec
sahf
out
xor
enter
mov
sbb
pusha
out
push
dec
xchg
xchg
or
pop
addl
scas
test
sbb
int3
sub
jp
clc
ret
inc
pop
sub
loop
stc
cmpsb
fstp
cmp
add
fbld
xlat
push
jns
rcrb
adc
add
sub
cltd
les
inc
pop
add
fs
lea
and
lahf
sahf
arpl
test
or
enter
pushl
mov
icebp
out
jb
mov
out
inc
mov
es
mov
mov
sub
mov
notl
mov
xor
loopne
jb
ja
dec
sbb
bnd
adc
sub
jge
cld
dec
mov
mov
push
jmp
adc
mov
imul
ret
add
push
push
popa
shrb
mov
cmp
or
popf
jecxz
pop
inc
cli
cmp
shrl
decl
sahf
popf
mov
pushf
outsl
out
or
jae
insl
mov
imulb
mov
push
push
dec
sarb
ficoms
mov
aaa
dec
pop
imul
insl
repz
std
sbb
hlt
lods
dec
push
int
mov
gs
in
xchg
inc
div
adc
cmp
das
mov
in
mov
adc
pushf
stos
cltd
pop
lods
xchg
mov
inc
aas
mov
mov
pop
outsl
stos
gs
and
lods
adc
jl
leave
xor
xorl
ljmp
mov
outsb
dec
sahf
cmp
lcall
mov
lods
imul
add
push
stc
adc
inc
pop
ss
xor
repz
jb
xchg
sbb
fnstenv
fsubl
rolb
loope
rcl
ljmp
daa
push
lods
into
add
call
cmp
pop
cli
sbb
stos
mov
sahf
int
test
xchg
mov
mov
mov
imul
hlt
mov
add
fcomp
xchg
jb
sbb
movsb
fwait
mov
loopne
add
je
jnp
movsb
xchg
rcl
popa
mov
fsubs
xchg
lret
mov
mov
loop
xlat
aas
adc
jp
push
in
xor
xor
cld
mov
js
sbb
jl
ss
mov
xor
das
mov
dec
cld
jecxz
mov
incl
repnz
popfw
dec
push
lcall
or
and
mov
mov
in
dec
inc
pop
movl
and
clc
add
nop
mov
push
into
cmpsb
aaa
dec
into
std
in
add
mov
aaa
out
adc
repz
xor
and
sub
popa
inc
out
popa
push
sbb
mov
out
xchg
jmp
inc
enter
fcoms
jle
cmp
ds
cmp
inc
pop
jge
mov
sbb
rcll
lods
mov
mov
cmp
cmp
sarl
cwtl
scas
ljmp
inc
push
in
pop
add
mov
and
and
mov
mov
or
push
xor
ret
ljmp
pop
roll
jb
inc
push
sar
and
sbb
stos
or
push
leave
jp
outsl
dec
jl
ss
xchg
mov
jno
sub
out
mov
daa
add
xchg
mov
mov
dec
pop
jge
cmp
ds
sub
mov
pusha
das
jns
push
adc
lods
or
lods
xor
enter
arpl
test
mov
hlt
push
jnp
stos
cmp
in
loopne
out
nop
mov
iret
sub
mov
into
out
cli
cmpsb
pop
or
pop
out
xor
mov
push
push
divl
std
mov
sub
mov
in
push
inc
push
adc
sbb
stos
mov
xchg
cmp
fwait
push
lods
test
insb
addr16
xor
mov
xchg
push
stos
pop
cmp
push
adc
pop
into
xor
lods
mov
jbe
and
mov
jo
sbb
add
lock
stos
push
repnz
lods
fistl
xor
inc
adc
mov
ret
cmp
insb
aam
ds
jle
fdiv
mov
out
dec
popa
int3
mov
loopne
arpl
es
adc
push
cmpb
cmpsb
cmpsl
mov
xor
jbe
test
dec
xchg
jo
lret
inc
fisttpl
addr16
ljmp
test
cli
repz
mov
and
or
cmp
ret
enter
sbbb
xor
lahf
out
mov
xor
sar
add
std
rcll
mov
in
mov
jg
clc
jbe
jbe,pt
sbb
cbtw
dec
js
outsl
cmc
xor
or
std
dec
dec
cmpsl
xor
movzbl
repnz
pop
jnp
xchg
ficoms
inc
xchg
pop
jbe
lock
xchg
xchg
testb
or
jg
in
and
pop
shr
imul
inc
mov
xlat
aam
push
popa
sub
pusha
lods
pop
pop
jl
aad
mov
ss
dec
ss
sahf
dec
out
es
movl
or
andl
bound
push
dec
stos
mov
mov
cmpsl
mov
loop
ds
mov
xchg
cmp
jge
into
test
addr16
sub
pop
repnz
loop
xlat
aad
xchg
pop
jno
mov
mov
pop
pop
adc
mov
mov
lret
xlat
xorb
fcmovne
jecxz
jns
push
xchg
shl
stos
fcomps
cld
jne
negb
repnz
fdivrs
cmpsb
out
js
pushf
add
out
sarl
movsl
add
xor
push
popa
inc
and
sub
pop
push
or
mov
enter
xor
pop
mov
cmp
push
icebp
ret
int3
push
scas
mov
scas
pop
clc
cmpsb
jp
pop
sar
rcr
pop
add
push
pop
and
into
dec
iret
pop
popa
cmpsl
cwtl
add
loop
fsubr
and
shl
xchg
mov
push
inc
sti
push
ret
jecxz
ja
pop
popa
cli
or
sahf
adc
xchg
pop
test
in
fscale
cmp
and
lds
in
xchg
js
pop
mov
lea
pop
inc
cmp
cli
lcall
aam
stos
fistpll
push
xorl
sbb
mov
mov
imul
lea
mov
push
adc
in
cmp
or
cmp
pop
lock
rclb
pop
aam
cmp
or
test
xor
dec
dec
loopne
insl
sbb
xchg
insb
cmpsl
push
lds
dec
push
add
adc
scas
jns
or
int3
cmp
nop
lret
push
sub
inc
stc
jle
movsb
xor
mov
pop
push
mov
frstor
stos
std
ljmp
xchg
pusha
sub
mov
mov
into
fwait
push
bound
push
sti
push
push
sahf
daa
pushl
filds
mov
lret
dec
mov
ret
or
stos
loopne
push
xchg
mov
adc
lret
push
xor
fwait
mov
ljmp
and
mov
add
lods
cmc
jns
adc
les
repz
mov
push
leave
xchg
popa
jns
push
out
add
push
rolb
jp
fstpl
iret
add
mov
xlat
or
or
aas
fimuls
xchg
dec
pcmpgtd
jbe
sub
adc
lock
cmpsl
add
push
jecxz
inc
jmp
or
popf
lret
xor
jno
sub
and
pushf
jp
dec
clc
test
xor
push
das
cmp
push
inc
ja
mov
ds
cli
lock
rclb
and
cld
push
or
inc
inc
fwait
push
in
push
aaa
xchg
inc
les
ret
jg
iret
setbe
inc
in
jle
jmp
pop
mov
pop
mull
add
push
and
add
lock
jae
imul
and
ljmp
repz
int3
ret
scas
test
pusha
popf
cmp
sub
mov
pop
lcall
in
sbb
imul
imull
jns
pop
ret
xor
dec
out
icebp
jmp
stc
pop
cmp
add
or
jae
out
inc
or
insb
aad
ljmp
jb
xlat
fcom
add
cmp
out
sbb
daa
and
sbbb
aad
in
fs
sarb
push
fstps
pop
imull
add
out
push
jae
and
or
pop
xor
fcomip
in
lret
jle
cmpsl
push
ja
ret
dec
out
adc
lds
es
dec
enter
lds
adc
xor
and
sub
mov
adc
dec
sbbl
scas
fdivl
insl
or
push
ds
and
jne
inc
cli
dec
pop
jmp
ljmp
push
arpl
pop
xchg
push
sbb
lea
push
in
xor
lods
jo
aad
xchg
xor
jno
outsl
adc
test
mov
lea
ret
negl
rclb
and
push
outsl
dec
fdiv
fistpl
imul
push
dec
cs
jne
mov
and
mov
add
out
ret
sbb
inc
mov
and
add
loopne
cmp
xor
push
xchg
pop
mov
fiadds
push
inc
fs
loopne
ret
daa
xchg
mov
fs
inc
and
fdivl
dec
test
cmpsl
cltd
ret
aas
sahf
std
lock
or
adc
jne
movsb
lods
fidivs
push
adcb
cmp
fcompl
adc
cltd
mov
das
dec
jp
sbb
xchg
bound
das
ret
enter
cmp
fadd
xchg
shrb
dec
mov
icebp
fstpt
outsl
sub
neg
or
mov
mov
shl
leave
cmpps
push
test
cmc
test
lock
nop
repnz
or
mov
sub
out
ret
dec
int
pushf
nop
int3
fcmovnu
popa
lea
cmpsb
push
shlb
int3
test
inc
aas
test
cs
ss
push
xor
sbb
jo
and
cmp
data16
or
test
jp
daa
aas
sbb
mov
int3
sub
inc
push
pop
add
mov
jecxz
push
adc
mov
and
pop
call
popa
push
xor
sti
gs
pop
push
jno
sub
pushf
push
ss
mov
dec
xchg
push
jae
aad
repnz
pop
jp
jl
lds
and
jmp
dec
mov
jg
in
inc
dec
xchg
jp
mov
js
mov
and
inc
pop
fiadds
dec
inc
xchg
ret
sbb
push
icebp
scas
lahf
mov
ljmp
sub
inc
cmp
idivl
psrld
addb
and
pop
xor
dec
mov
lret
sub
scas
nop
sbbb
mov
mov
inc
push
loope
or
and
lahf
push
push
pop
push
push
cwtl
cwtl
sahf
fists
adc
pop
in
pop
mov
xor
sub
dec
dec
aas
scas
fcoms
lret
inc
imul
jne
cltd
inc
pop
push
mov
cli
inc
imul
jmp
mov
pop
call
sbb
jbe
mov
pop
xchg
in
mov
pop
mov
jmp
sub
xor
add
jbe
int3
mov
test
mov
push
sub
in
jp
push
arpl
jb
jl
cmpl
lods
jle
out
int
sbb
sbb
push
xor
repnz
xor
out
xor
sbb
push
pop
les
mov
mov
ret
loop
bswap
pusha
cmpsb
movsb
dec
bound
aam
in
or
jmp
dec
cmp
or
push
imul
fcmovbe
adcb
sbb
mov
and
sarb
xlat
mov
sub
cs
addl
push
xchg
cmp
insl
aas
jb
push
int3
adc
hlt
xchg
lret
or
clc
mov
stos
xor
sub
icebp
loopne
int
jp
mov
bound
sub
cmp
ja
jo
dec
or
ja
jmp
lahf
fwait
mov
lods
push
insl
dec
mov
repnz
pop
inc
das
pop
jne
sub
xchg
jmp
inc
jbe
mov
dec
xchg
cmpsb
repnz
mov
in
xchg
std
daa
in
or
loope
adc
shrl
mov
imul
sub
pop
add
stc
bound
xor
rcr
xchg
inc
inc
mov
test
pop
pushf
xchg
fstl
es
lock
popa
fdivr
mov
pushf
ss
jmp
shr
jge
mov
sub
mov
fsts
adc
lahf
mov
sub
call
icebp
sbb
iret
popa
sarb
inc
in
rcl
sbb
mov
les
dec
lret
shll
lds
cwtl
rcll
inc
std
or
cmp
or
ss
ja
stc
jbe
mov
out
push
lret
mov
inc
aad
test
xchg
iret
mov
xor
movsl
add
mov
mov
cmp
mov
loop
mov
adc
pop
aam
out
test
xchg
scas
fwait
pop
push
hlt
sbb
push
and
adc
push
sbb
addr16
push
pop
int3
inc
out
push
push
mov
sbb
les
inc
mov
pop
or
jo
in
cli
test
in
dec
aas
lahf
jmp
cltd
es
mov
test
mov
xchg
and
pop
insl
test
sub
aad
das
js
icebp
sbb
pop
adc
or
add
cli
xchg
mov
icebp
rcrl
sub
jne
dec
sbb
add
daa
fcmovu
inc
mov
jecxz
xor
xorl
mov
xorb
ds
jecxz
or
inc
inc
gs
imul
inc
sti
andb
test
les
jmp
lock
dec
dec
sbb
mov
sbb
push
in
xlat
cli
mov
mov
pop
add
and
iret
add
clc
inc
jno
push
in
in
push
scas
or
mov
jp
cmp
sbb
mov
cmp
inc
sub
sbb
lcall
ja
mov
and
and
orb
out
push
mov
xor
or
or
dec
mov
cmp
std
mov
xchg
pop
movsl
lea
stos
cmp
mov
jge
mov
das
add
pop
ss
pushf
in
xchg
popa
nop
inc
adc
sub
mov
jo
daa
xor
push
fbld
dec
pop
shll
pop
cmp
insl
data16
mov
add
xchg
mov
inc
pop
mov
mov
mov
mov
ja
or
add
fsub
shrl
scas
xchg
icebp
movsl
push
and
mov
test
pop
and
fadds
xchg
mov
push
repnz
cmp
sbb
movsl
mov
call
push
data16
pop
ret
push
or
jl
ds
fistpl
xchg
movsl
pop
stos
jb
out
add
jnp
mov
and
int
ret
call
imul
push
repnz
lcall
and
xor
pop
imul
push
pop
mov
cs
inc
cltd
jno
mov
pushf
dec
push
inc
push
xchg
adc
sti
inc
jo
lret
inc
xchg
pop
fwait
mov
mov
fstpl
out
out
or
mov
loopne
adc
push
and
adc
cmp
pop
and
mov
mov
js
ja
pop
or
mov
pusha
shl
push
call
daa
sub
dec
dec
mov
inc
insl
inc
pop
addr16
test
iret
inc
lahf
stos
fdivrl
xchg
imul
sbb
adcl
stc
mov
pop
mov
or
movsl
xchg
je
in
inc
dec
jnp
xor
ficoms
fidivl
fsubs
dec
dec
and
sarb
jp
leave
bnd
cmp
xchg
filds
xchg
popa
jmp
sub
call
out
int
xor
pop
mov
adc
ret
cmp
imul
jmp
bound
mov
popl
movsb
adc
outsb
xchg
mov
push
cmp
cwtl
movsl
mov
js
xor
pop
xchg
test
lea
sbb
fdivrs
lcall
addl
inc
fimull
in
imul
popf
jno
xchg
out
jecxz
pop
aas
mov
mov
xor
clc
shll
decl
cld
cmp
cmpsb
xor
sub
mov
fs
int
cmpsl
and
pop
or
inc
jne
fst
ljmp
shl
sbb
pop
adc
cmp
cltd
call
lcall
hlt
mov
stc
in
push
sbb
mov
inc
xchg
jp
out
and
loop
jmp
pop
fnstcw
push
push
mov
fsubrl
pushl
rclb
outsl
aad
in
jne
pushf
inc
leave
xchg
ja
pop
sti
insl
movsl
xor
mov
push
pushf
rolb
push
out
adcl
cmc
pop
lret
xchg
ljmp
jbe
xchg
pop
add
cld
adc
cmp
xor
xchg
pop
ds
xchg
adc
pop
mov
xor
pusha
mov
movsl
xchg
jb
dec
xor
push
jp
out
sbb
xor
xor
jns
dec
xchg
mov
aad
imul
clc
push
ja
pop
push
xchg
hlt
push
ret
ret
out
enter
jge
xchg
js
iret
mov
xor
int
sub
inc
mov
xorl
inc
sbb
pop
or
cmpsb
cltd
jmp
fmuls
dec
ficoms
inc
mov
fucomi
pusha
jne
xor
and
nop
mov
mov
es
in
add
into
ficoml
jg
lods
mov
cli
sub
or
fcoms
bound
and
les
data16
mov
sub
dec
lods
pop
faddl
or
inc
jno
in
fisubrs
and
add
dec
inc
arpl
cmp
call
dec
pop
mov
jg
in
mov
add
sub
insb
push
jp
es
call
scas
xor
loop
pop
xor
xor
outsb
mov
out
cmp
sub
cmpsl
shlb
sbb
push
add
in
cmp
ret
cmpsb
or
pop
and
pop
or
lahf
into
incl
repnz
iret
inc
pop
gs
fldcw
sub
fcmovb
jmp
inc
inc
es
movsb
sbb
pop
add
jge
sbb
cmp
out
addr16
sbb
add
iret
and
sub
addr16
add
nop
and
sahf
or
loopne
xor
jae
and
stc
mov
ljmp
sub
push
mov
add
lcall
xchg
scas
dec
and
aaa
or
orb
pop
or
leave
sbb
bound
sti
adc
das
out
jo
in
mov
incl
outsb
roll
divb
lds
sub
dec
ljmp
jp
dec
mov
cmp
test
push
xchg
lahf
inc
jno
xor
adc
sbb
aas
cmp
pop
inc
repnz
cmpsl
arpl
repz
cmp
mov
pop
icebp
cwtl
fisubrl
sub
sbb
adc
adcb
cmp
mov
push
pop
arpl
jns
out
enter
sub
mov
adc
mov
dec
or
mov
mov
ja
and
pusha
or
add
js
sbb
icebp
jecxz
repnz
in
jo
push
fists
ret
test
daa
ret
stos
cmp
data16
daa
cmp
pop
mov
fwait
pop
inc
insl
out
enter
xor
xor
popa
hlt
loope
popa
insb
push
aaa
jb
dec
mov
sub
into
and
out
les
pop
jge
pop
mov
insl
cmc
nop
xchg
fadd
stos
and
in
fdivrl
and
jo
mov
adc
xor
or
sub
lods
outsb
test
or
sub
ret
xchg
dec
fdivl
lds
mov
sbb
mov
ficoml
lret
mov
mov
cmc
xchg
cmp
cmc
push
mov
aam
jns
add
int
ret
push
inc
pop
add
hlt
mov
adc
pop
xlat
push
cli
pushl
cltd
jne
scas
dec
mov
subb
or
aaa
lret
test
dec
in
aam
lcall
es
xor
adc
leave
std
mov
xchg
movsb
add
mov
push
ja
inc
sar
xor
lea
out
in
mov
pop
or
and
jno
pop
in
fstl
mov
insl
test
out
loop
or
ficompl
pop
inc
pusha
int
jg
lcall
xor
jno
leave
jbe
fdivrs
mov
clc
xor
mov
lds
sbb
ljmp
xchg
test
mov
mov
jbe
xchg
dec
aas
gs
add
pushf
out
inc
xchg
or
mov
mov
lods
pop
mov
mov
add
flds
xor
jle
push
mov
enter
fistl
ret
dec
shrl
push
mov
out
test
bnd
jl
sbb
gs
or
test
ss
cmp
inc
dec
fwait
add
lcall
stc
sub
stos
mov
sti
movl
cmp
rclb
out
sbb
cmc
jle
std
inc
lret
push
xchg
sub
or
subl
adc
mov
lods
sub
mov
sub
out
mov
mov
pop
push
adc
xlat
jnp
add
popf
mov
jge
xchg
or
jge
cld
out
mov
sub
mov
iret
pop
add
scas
jns
push
xchg
sub
lea
mov
jp
pushf
pop
cli
incl
dec
sbb
push
sbb
fisubs
int
xchg
fsqrt
sub
repnz
inc
cmpsb
sbb
popf
outsl
xchg
mulb
mov
mov
rorb
fiadds
fnstcw
enter
mov
mov
movsb
push
lcall
mov
push
sbb
stos
leave
mov
push
jnp
sbb
xlat
cmp
and
jae
inc
sbb
rcl
xchg
add
pop
push
or
add
mov
xchg
push
mov
fiadds
push
pop
int
stos
shrl
jmp
not
mov
add
loopne
xchg
aam
push
mov
incb
lret
mov
push
sbb
jecxz
push
add
stos
test
das
jnp
sub
popf
imul
inc
and
sbb
mov
inc
mov
pop
add
pop
aad
xor
jbe
cmp
cli
mov
or
xor
outsb
aas
mov
mov
fildl
sbbl
rcrb
lcall
ds
mov
and
out
insl
in
adc
sbbl
mov
pushf
loopne
loope
fbld
shll
ds
push
pop
shr
sahf
nop
js
sbb
jl
cli
push
or
pop
pop
imull
sarb
call
pop
add
addr16
mov
shlb
cmp
and
cmp
sbb
aam
shl
fnstcw
popa
inc
mov
stos
and
cli
outsb
adc
pop
pop
mov
in
and
fcoms
jle
outsl
mov
mov
lret
dec
cmpsl
popa
out
gs
or
xor
std
aaa
dec
xchg
sub
outsl
stos
fwait
lahf
sbb
inc
jae
fnsetpm(287
cmpsl
mov
sbb
aas
into
into
out
mov
pop
add
fcompl
jbe
jbe
or
movsl
sti
and
rolb
or
out
mov
gs
fcoml
mov
jne
dec
xor
mov
sti
mov
pop
test
cli
cli
adc
mov
addr16
movsl
push
pop
prefetch
xlat
lods
clc
cmp
adc
sub
insl
mov
and
mov
call
dec
add
cmpsb
test
pusha
loop
aas
or
cmp
imul
jg
jecxz
fbld
aaa
mov
nopl
outsl
cmp
mov
jne
insl
ds
mov
jp
dec
cmp
out
cmp
jbe
sub
mov
data16
sbb
test
fsqrt
sub
sub
in
je
pop
fistps
inc
jnp
loope
push
hlt
cmp
jle
pop
sub
sti
aas
ljmp
stos
mov
or
loope
add
xchg
mov
inc
mov
lret
lods
dec
sti
cmp
lcall
aad
lock
xchg
fldcw
ljmpw
repz
icebp
cmc
popf
or
pushf
mov
ret
adc
and
test
mov
mov
push
mov
imul
in
inc
sub
imul
jbe
scas
addl
or
mov
lods
jae
adc
test
jnp
lcall
sub
je
ljmp
cli
cmp
xlat
mov
mov
cltd
pop
dec
sbb
lea
cmp
cld
loopne
out
mov
jb
fisttps
mov
fdivrl
hlt
cmp
in
dec
add
lods
jge
sbb
adc
jo
adc
imul
cmc
dec
sahf
sahf
stc
insl
loopne
fwait
add
jmp
psllq
adc
add
scas
jl
adc
fwait
pop
orl
dec
mov
sbb
ret
dec
push
or
or
scas
add
xchg
mov
test
test
fldt
nop
sub
cmc
insb
hlt
xor
in
cmp
mov
pop
nop
lds
jecxz
cmp
daa
lods
push
in
lahf
jne
imul
add
sbb
cmp
call
divl
mov
xchg
lcall
sub
ret
dec
aam
push
repz
xor
in
pop
add
jno
pop
dec
or
jae
mov
ljmp
cmpb
adc
add
mov
adc
mov
aam
pop
fidivrs
cmp
in
js
push
rcll
inc
pop
shlb
or
inc
add
mov
fdivl
dec
jbe
adc
imulb
outsl
mov
dec
ret
sbb
sub
sahf
lods
rol
pop
adc
lahf
mov
loop
fnstcw
mov
lock
cmp
push
mov
test
out
lds
mov
das
stc
fsubl
stc
cmp
hlt
mov
pushf
sbb
xchg
cmp
sahf
or
jmp
gs
xchg
push
imul
cmp
pop
repz
sbb
xchg
jne
jg
cmp
stc
cli
or
cmpsl
sub
in
cmpsb
inc
lock
mov
loope
cmp
jae
sbb
sub
mov
ds
sub
lret
repz
lock
push
shl
mov
test
leave
inc
mov
dec
test
push
or
hlt
xchg
movsl
imul
imul
or
mov
push
mov
in
out
bound
xor
and
sbb
ret
or
adc
dec
jb
lods
dec
xor
sbb
xor
xor
lds
into
icebp
push
andl
mov
lret
icebp
jae
mov
cmpb
or
push
pop
inc
or
test
das
sub
inc
jo
stos
mov
ret
dec
and
xchg
add
clc
js
xor
xor
addr16
sub
jo,pn
add
ds
mov
mov
xlat
imulb
shll
cmpsl
les
les
pop
pop
jle
push
push
cmp
lret
fmuls
sbb
dec
adc
sub
fwait
jae
xor
ret
sub
cmp
aas
aad
xor
pop
xchg
dec
out
xor
inc
fstp
aad
movsb
es
jge
fldcw
lahf
dec
inc
test
mov
inc
dec
xchg
movq
js
aaa
mov
clc
jle
or
inc
aad
dec
pop
cmp
inc
dec
dec
orb
add
inc
std
outsb
jbe
sbb
mov
mov
mov
imul
enter
push
ja
cli
cmc
stc
lcall
adc
nop
adc
sahf
enter
and
xor
ljmp
or
sbbl
sub
pop
or
adc
dec
shll
mov
ja
xchg
repnz
sub
xorb
lock
adc
push
jne
lds
push
pushf
imul
dec
sub
jae
mov
push
icebp
fisttpl
jg
rcl
jecxz
fldl
icebp
sbb
push
pop
xor
and
lcall
jnp
mov
jbe
cmc
inc
stc
pop
lods
lahf
pushf
and
testl
adc
push
adc
jnp
shr
xchg
enter
xchg
cmc
lea
xor
cmpsl
mov
jne
cmp
cmp
jp
stos
push
xor
jge
arpl
fmuls
or
sbb
push
jns
push
adc
add
mov
sub
out
addr16
outsl
xlat
pop
push
loopne
fmull
mov
ja
and
inc
mov
addr16
out
jnp
lahf
outsl
push
mov
iret
mov
mov
pop
xchg
jmp
popf
sbb
push
add
and
dec
push
adc
inc
les
pop
xchg
sbb
cltd
pop
mov
jbe
cld
fwait
and
lcall
dec
push
add
adc
add
shrl
sbb
sub
fs
nop
fsubp
xchg
xor
js
imul
and
dec
jg
nop
adc
cmp
jmp
or
fcmovnb
ret
cld
rcrl
xchg
sbb
xorl
ret
mov
in
lahf
adc
mov
dec
outsl
andl
add
mov
insl
push
mov
dec
pop
adc
outsl
push
lea
lods
jo
pop
mov
rcll
icebp
add
stc
mov
xor
mov
push
inc
mov
mov
and
pop
add
pop
sub
test
or
mov
arpl
adc
jns
cmpsl
mov
xor
pop
sub
insb
movsb
les
dec
and
xchg
adc
sub
dec
jae
inc
rorl
and
pop
jle
icebp
loop
adc
movl
lahf
fcmovb
sbbb
push
into
push
roll
loop
xchg
aaa
addr16
addr16
or
mov
inc
test
xor
jecxz
lock
and
mov
insl
and
sbb
dec
push
add
jo
hlt
sub
subb
cmp
and
hlt
lcall
insb
mov
and
mov
test
jb
or
push
pushf
jno
pop
imul
sub
mov
mov
mov
and
icebp
data16
pop
jmp
cltd
in
sub
mov
outsb
jg
sti
inc
movsb
jns
add
js
push
adc
push
sub
in
inc
jg
jmp
lock
lock
hlt
std
mov
jbe
clc
xchg
out
gs
sti
sahf
adc
mov
mov
fs
out
sub
jl
cwtl
push
cmc
sbb
inc
sbb
xor
dec
push
movsb
cmp
sub
add
add
std
into
fsubrl
pop
cmpsb
and
addl
jns
js
push
pop
jmp
xor
sti
insb
js
xchg
jnp
sub
jmp
adc
push
in
pop
jmp
jo
dec
nop
sbbb
ljmp
in
dec
les
iret
mov
inc
sbb
and
leave
insb
cltd
jb
lcall
das
lahf
pop
out
dec
cmpsl
cmp
jb
lahf
aas
xchg
fcomp
pop
mov
es
mov
sub
ret
and
test
mov
dec
enter
mov
mov
adc
out
inc
into
pop
push
xchg
imul
jecxz
aam
xor
jmp
cmp
or
in
movl
push
dec
das
scas
movsl
inc
lea
mov
push
daa
mov
add
rolb
in
call
imul
xchg
imul
dec
scas
pop
fmuls
or
test
add
addl
shlb
repnz
inc
mov
out
ds
fiadds
bound
cmp
lahf
addr16
cli
insb
repnz
sub
push
mov
ret
loopne
push
jmp
or
adc
mov
adcb
jo
mov
outsb
or
lret
pusha
sub
and
push
pushf
pop
cmpsl
mov
inc
cmp
fstp
mov
sti
push
ret
sub
cld
or
push
mov
gs
jns
add
push
mov
jle
mov
jb
sti
jae
std
fstl
mov
mov
lods
das
push
jle
lds
dec
andb
aam
loopnew
push
mov
loop
jge
les
or
aad
lods
jns
into
nop
or
inc
dec
add
xor
in
jbe
sub
inc
mov
pop
orb
jecxz
enter
cmp
cmp
cmp
call
sbbl
fsubrs
xchg
push
xorl
dec
dec
jp
jae
imul
in
icebp
pop
push
push
lahf
inc
sub
push
cmp
insb
shrb
lcall
pusha
mov
xlat
ret
dec
xchg
xor
sub
daa
xchg
loop
cli
popf
cmp
pusha
int
add
pop
dec
add
jle
push
test
xchg
pop
test
sub
lock
shrb
cmp
push
dec
xor
push
push
mov
pop
sub
aam
ds
cltd
fmull
jb
adc
in
xorb
pop
jge
inc
arpl
roll
adc
dec
cwtl
and
cwtl
pusha
mov
xor
sbb
jbe
sbb
decb
dec
and
mov
lods
dec
std
dec
cmc
out
call
push
jecxz
and
daa
push
xor
test
lret
fbstp
test
cmc
cmp
xchg
cs
jae
fisttps
or
sub
pop
hlt
xor
fmul
js
jl
push
test
jmp
pop
and
in
dec
dec
subb
adc
and
dec
xchg
in
sbb
mov
dec
mov
lods
dec
jg
or
jg
jo
jb
sub
pop
lds
pop
std
xchg
sbb
inc
cmpsb
lock
test
mov
rcrb
notb
push
aad
dec
test
push
mov
scas
mov
aas
andb
fistpl
scas
pop
rclb
and
adc
popa
cmp
popf
cmp
cmp
daa
xchg
jp
cmp
repz
inc
push
push
test
add
adc
rclb
imul
pop
mov
int3
jae
sub
fsub
mov
xor
mov
mov
mov
adc
and
int
lods
xlat
cwtl
hlt
mov
sub
cmp
inc
inc
add
loop
xchg
jo
arpl
lock
pop
out
in
rcl
test
push
push
stos
divl
ficomps
mov
fcmovbe
out
out
xchg
mov
pop
fsubl
push
stos
popa
push
testb
push
iret
popa
inc
pop
lea
push
cs
cmp
add
adc
dec
repz
jmp
das
and
pop
js
mov
pop
lock
enter
fcomps
aaa
stos
xchg
sti
js
cltd
notl
scas
cs
mov
pusha
outsb
lea
scas
cmpsl
or
mov
imul
sub
aam
sbb
sub
insl
sbb
clc
out
js
imul
jns
stc
adc
int3
sub
xchg
jnp
fldcw
adc
add
mov
in
int
pushf
push
pop
ret
lret
insb
lods
js
es
outsb
loopne
sbb
jae
sti
mov
sbb
mov
pop
lods
push
mov
cmp
test
lods
pushf
cmp
lcall
je
rclb
jo
pop
cmc
and
pop
adc
jae
or
push
clc
adc
mov
pop
addr16
lahf
xor
enter
test
insb
cmp
outsl
mov
lcall
sub
mov
lods
add
xchg
pop
dec
pop
jno
cs
or
inc
sbb
push
xchg
aas
push
or
mov
cwtl
and
in
sub
cmp
ljmp
in
ret
imul
push
push
push
jbe
cltd
pop
and
dec
or
cltd
xchg
add
push
loop
and
lea
nop
outsl
mov
jae
ret
test
fistpll
mov
inc
xchg
movsl
cmpsl
sbb
and
loopne
ficompl
cld
inc
dec
testl
cmpsb
xorl
pop
into
pop
dec
aas
jle
mov
scas
cmpsl
mov
mov
pop
mov
jbe
jmp
cmp
mov
xchg
xor
cmpl
xchg
nop
or
int
je
or
outsb
jmp
cmp
leave
mov
sarl
sahf
mov
das
inc
popf
pop
jecxz
mov
out
roll
push
mov
add
fcomip
fisubrl
or
add
add
cld
or
jne
loope,pt
sub
add
es
dec
test
and
inc
add
adcb
jp
cmc
je
sahf
dec
xchg
or
sbb
pushf
cmpsl
inc
sarl
xchg
and
jecxz
rolb
mov
mov
mov
push
test
xchg
loope
xor
mov
push
fdivrs
pop
or
mulb
sub
jge
shrl
scas
dec
adc
ss
or
in
jle
sub
addl
sbb
andb
dec
aad
pop
fldcw
and
push
test
pop
add
mov
push
cs
mov
adc
sub
adc
repz
fidivl
enter
lret
es
sbb
movsb
imul
les
in
ds
mov
xlat
rcl
and
sbb
sbb
inc
xlat
xchg
mov
mov
shll
push
or
pop
mov
or
and
mov
inc
fsubp
adc
xchg
pop
fstpl
mov
bound
cltd
mov
loope
push
cwtl
xor
pop
push
stc
dec
into
pop
jno
int
repnz
jp
cmp
cltd
xchg
lock
or
jecxz
xor
fists
mov
adc
inc
out
mov
and
xchg
mov
stos
dec
cmpl
push
call
fcompl
adc
push
inc
sub
adc
inc
js
roll
in
leave
inc
jno
and
mov
push
xor
cmp
jmp
and
jle
push
xor
mov
je
xchg
gs
xchg
or
ljmp
int
pop
mov
mov
add
ret
fidivl
mov
and
mov
popa
into
and
shrl
xlat
and
jmp
fwait
clc
xchg
les
mov
mov
testl
out
sbb
je
icebp
push
push
jne
mov
les
loope
pop
inc
mov
aad
lods
push
xchg
sub
mov
xchg
mov
rolb
add
popa
call
test
clc
vpunpckhbw
rorl
and
jecxz
mov
jns
sub
jl
dec
int
call
scas
xchg
mov
sbb
aam
idivb
inc
rcr
popf
inc
idivl
pop
clc
jo
mov
addr16
mov
fdivrs
lods
or
pop
dec
ja
outsb
or
push
pop
mov
mov
int
cs
scas
out
sbb
cs
sub
jp
jle
mov
jl
jo
lods
jbe
mov
lods
jg
stos
lods
pop
pop
xor
jns
in
dec
fildl
pop
out
and
jae
dec
movsl
lea
inc
mov
bound
jmp
mov
popf
pop
lock
cld
stos
sub
in
add
push
int
jno
adc
add
push
stc
add
add
test
mov
sub
inc
movsl
mov
inc
nop
or
insl
sbb
mov
cmp
or
std
in
iret
add
and
nop
sar
dec
inc
cmp
pop
adc
inc
push
pop
enter
stos
push
jno
stos
pop
mov
rcl
adc
je
lcall
ja
inc
sub
and
jecxz,pn
aam
repz
pop
xchg
cli
filds
movsb
sbb
dec
shl
std
icebp
push
fdivp
icebp
lahf
lods
and
cltd
addr16
fcmovb
sti
and
fisubrl
push
ljmp
nop
or
jg
fnclex
mov
inc
and
push
arpl
mov
mov
repz
mov
sub
sbb
fwait
aam
rclb
xchg
pusha
sbb
push
cmp
sub
fsubp
pushf
jo
repz
dec
stc
loop
adc
jne
mov
rep
xor
mov
adc
jecxz
xchg
sub
into
movsb
jb
icebp
je
movsb
ja
out
jecxz
int3
lds
add
test
lret
jp
fcmovnu
mov
stos
pop
lea
inc
or
dec
push
sub
mov
xor
dec
arpl
jmp
nop
sub
add
mov
test
mov
js
out
repz
xchg
lods
lret
pop
jae
cmpsb
dec
adcl
popf
fidivs
dec
addr16
mov
mov
fmuls
icebp
dec
outsb
xchg
call
add
xchg
jge
mov
xchg
sbb
inc
push
fwait
mov
data16
cld
cmp
fadd
psrlq
jge
fxch
insb
push
inc
stos
std
cmp
in
pop
sub
in
push
jo
push
pop
cmp
pop
mov
aam
repnz
mov
movsb
or
inc
std
xchg
push
fnsave
fdivrl
fcomps
nop
xor
sti
aaa
add
andl
lods
insl
dec
insb
add
leave
jg
dec
xor
rclb
inc
call
xchg
stos
dec
sub
adc
ret
les
sub
fbld
push
sbb
pop
mov
sbb
dec
lods
cmc
aad
jp
aaa
call
sbb
fsubl
xor
hlt
xchg
pop
in
pop
aaa
andl
mov
adc
shll
movsl
jl
xor
cmc
adc
ret
aaa
or
in
orl
push
adc
cmp
pop
cmp
aad
cmp
cwtl
push
je
push
xchg
lret
lea
push
ja
cmpsl
jecxz
pop
pop
mov
arpl
clc
inc
pop
dec
jne
std
test
push
inc
aas
fcmovnb
fcomps
fdivr
dec
data16
rdpmc
les
xchg
aaa
stos
sub
sti
push
aad
add
jle
sbb
mov
or
in
sbb
xchg
push
jp
loop
out
push
fadd
push
call
or
mov
out
or
fidivrl
xchg
pop
and
ljmp
push
les
push
js
cmp
fistps
dec
movswl
dec
sahf
lret
adc
inc
pop
mov
stos
or
into
loop
or
dec
aad
xchg
js
pop
pmaxsw
mov
call
adc
imul
ret
ja
sbb
pop
nop
imul
enter
mov
ds
cld
jbe
nop
scas
hlt
movsl
orl
inc
fdecstp
mov
push
jle
pop
iret
pop
jae
lahf
inc
aas
mov
popf
imul
cmp
mov
rcr
aas
fs
loop
pop
mov
subl
push
jg
mov
cmp
negl
push
mov
mov
mov
pusha
inc
test
pcmpeqb
arpl
ss
insb
cmp
out
ret
mov
lock
enter
inc
loope
dec
push
fdivl
cs
scas
mov
adc
lock
inc
outsb
ret
mov
pop
dec
xchg
xchg
out
pop
mov
clc
js
rolb
and
inc
ret
loope
dec
icebp
mov
out
in
inc
test
add
lahf
dec
push
aam
sbb
mov
xchg
and
jnp
mov
sbb
inc
fnstenv
and
loope
addr16
or
cmp
jo
jp
push
shl
dec
imul
pop
mov
sub
icebp
test
pop
xchg
aas
scas
cmp
pop
or
or
incb
jecxz
ja
or
imull
lods
roll
gs
mov
or
mov
or
popf
ret
cld
jbe
es
xchg
shrl
into
xchg
inc
mov
scas
mov
or
jb
mov
push
scas
addr16
push
enter
xor
shr
and
lea
xchg
xor
dec
daa
outsb
add
bound
mov
push
mov
out
cmp
pop
jns
mov
mov
dec
mov
call
xor
sub
movsl
adc
shrb
aad
aam
aas
cmp
xchg
out
leave
icebp
add
sub
stos
mov
and
mov
jmp
push
xchg
sbb
sarl
jle
dec
and
jecxz
cld
addr16
lret
inc
pop
fstpt
test
daa
ret
aam
inc
call
push
push
adcl
js
jbe
loope
clc
dec
push
ss
mov
shlb
ret
lods
dec
push
mov
test
dec
push
in
aad
sbb
cmpnleps
in
add
xchg
leave
je
sbb
cmp
pop
movsl
mov
xchg
fucomi
lahf
sarb
add
in
shlb
je
pop
or
cltd
inc
mov
jg
xchg
push
mov
pop
jbe
sysret
dec
enter
rcrl
cmp
or
iret
inc
iret
ret
and
out
lds
test
cmpsb
ja
jne
sbb
daa
icebp
push
mov
pop
out
sahf
es
psubd
nop
cmc
xlat
sub
push
cmp
int3
push
xor
insb
loopne
lahf
sbb
cld
mov
cmp
push
shrl
test
sti
and
bnd
fidivrl
hlt
mov
idivl
mov
flds
mull
cli
lea
push
aad
ja
jnp
cltd
call
pop
push
or
mov
lahf
inc
xchg
lds
cmpb
mov
shrl
stc
lods
xor
mov
or
push
adc
insb
test
mov
sarl
adc
push
mov
jo
jmp
int3
and
daa
movsl
shll
inc
jo
sahf
or
add
nop
mov
imul
inc
jae
push
outsb
adc
in
dec
jmp
repnz
jmp
inc
lea
cmpsl
iret
shll
cmp
divl
in
jbe
add
in
out
xor
std
xchg
inc
cs
cmp
negl
stos
cld
repnz
ja
lods
or
sbb
nop
out
pop
mov
movsl
push
jnp
pop
lds
mov
sbbb
and
pop
push
stos
ret
loope
jo
loope
push
xchg
testb
lret
icebp
jle
icebp
outsb
mov
pushf
lret
mov
daa
call
add
pop
insl
pop
pop
jg
pop
jg
xor
jo
repnz
test
dec
pop
sti
mov
and
jge
jge
lret
movsb
sub
lahf
push
mov
movsb
mov
aam
adc
in
mov
adc
xlat
and
jne
mov
fisubrs
sub
scas
cmc
aad
xchg
cmc
cmp
lods
stc
stos
push
jmp
test
ljmp
sbb
push
ret
or
inc
add
ret
and
jne
xchg
lods
cmp
xchg
int3
jge
mov
inc
pop
push
sti
outsb
xor
jle
out
mov
mov
pop
and
mov
mov
adcb
int
sub
mov
js
in
rcl
insb
aaa
mov
ds
sbb
mov
and
inc
jno
xor
ret
push
mov
sub
inc
adc
push
fidivs
enter
xchg
push
bound
xchg
mov
lds
jle
int
mov
push
mov
add
add
jae
into
push
incb
push
out
leave
xor
ljmp
fists
xlat
mov
mov
outsl
or
iret
pop
dec
and
lods
pop
cwtl
cli
daa
cmp
or
daa
xchg
in
outsb
lret
cmpsl
xor
push
and
cmpsl
imul
stc
lret
frstor
gs
fistpll
jne
and
repnz
iret
js
rcrl
stc
rolb
jbe
cmpsb
lods
xchg
out
mov
pop
or
lea
es
push
pop
add
inc
push
or
xchg
fsub
inc
mov
lret
sub
mov
fistl
mov
jo
add
dec
out
movsl
xchg
insb
ficompl
pop
cmp
in
mov
cmpl
sub
xor
and
mov
fcoml
mov
xor
adc
mov
je
inc
and
pop
lcall
cmp
fcompl
mov
rcll
or
xor
addl
push
xor
iret
out
adc
divl
jl
pop
shlb
cmp
pop
andl
sti
xor
in
pop
inc
push
outsb
repnz
push
dec
lret
xchg
cmpsb
fisubl
mov
lcall
cmp
mov
jge
adc
stos
pop
lock
call
mov
in
mov
xor
xchg
xor
xchg
cs
stos
xor
pop
mov
in
fwait
mov
sbb
xchg
xor
mov
insl
adc
xor
push
inc
icebp
repz
stos
mov
sub
mov
mov
lcall
push
mov
scas
cmpsl
jae
and
shrb
frstor
les
lds
sbb
mov
das
add
in
ds
jge
sbbl
shlb
and
loope
pop
mov
adc
lock
mov
out
mov
fdivl
jmp
cwtl
popf
bound
push
mov
cld
insb
mov
xor
fdivrp
inc
fldcw
call
stos
loop
or
adc
mov
neg
dec
int
ja
cmpl
xchg
pop
les
inc
fists
sbb
adc
je
fisubs
daa
mov
or
hlt
fisubrs
cmpsl
aaa
out
sbb
into
jg
push
inc
loop
jge
mov
adc
mov
mov
mov
lahf
pop
aad
dec
inc
add
int3
inc
sub
mov
into
cli
and
adc
shll
mov
call
pop
push
pop
push
fwait
sbb
leave
ljmp
pop
sub
add
sub
push
lea
jae
mov
fcoml
lret
fimuls
lds
repnz
push
push
sub
test
sub
out
push
cmpsl
stos
jno
sbb
aaa
xor
pop
jb
push
sub
mov
aam
scas
out
jno
dec
pop
in
mov
adc
adc
pop
test
mov
pop
loope
jne
dec
inc
cli
mov
adc
out
jns
inc
xchg
add
xchg
add
lea
call
fisubs
rolb
or
imul
dec
or
push
sbb
sbb
imul
or
cltd
lock
sub
pop
je
std
push
inc
jmp
add
or
std
int3
test
xchg
xor
addr16
lret
movsl
mov
jns
jecxz
test
lods
cmp
sub
cmovne
cmp
arpl
shlb
xlat
repnz
mov
pop
adc
mov
jae
mov
cmpsb
icebp
push
xchg
push
inc
and
lret
and
int3
stc
xchg
and
data16
xor
int3
into
cmp
movsb
and
roll
sbb
std
movb
mov
pop
lret
enter
sbb
out
adc
or
cmp
mov
pop
or
movsl
mov
mov
fimuls
pop
fs
pop
ret
stos
cmp
mov
sbb
cmp
ds
adc
and
cmp
pop
out
imul
sbb
fbstp
xor
mov
add
mov
or
into
lea
int
lret
push
mov
dec
xor
mov
push
inc
mov
xchg
stos
push
and
idiv
push
jp
pushf
pushf
mov
cmpsb
inc
adc
pop
clc
jecxz
enter
ret
xchg
pop
fisubs
clc
push
movsb
jb
test
mov
push
popf
std
nop
push
repnz
jne
int
inc
ss
inc
and
repz
pop
pop
dec
fstl
add
subl
ja
or
mov
nop
das
out
mov
jno
outsb
test
lods
pop
fildll
out
and
fnsave
loope
test
xchg
add
jo
pop
mov
xlat
mov
adcb
push
aam
jne
xchg
mov
mov
lret
push
sbb
arpl
iret
and
and
mov
sbb
cmp
and
mov
jo
lcall
pop
add
pushf
lods
or
loop
loope
ss
push
or
mov
inc
mov
mov
jbe
xchg
sbb
xor
or
add
lods
xchg
jp
adc
cmc
dec
jp
mov
push
dec
or
mov
pop
arpl
inc
adc
scas
inc
mov
rcrb
cmc
sub
ljmp
popa
pop
icebp
roll
cmp
fmull
pop
scas
sbb
xchg
scas
adc
inc
inc
jg
insl
jo
add
outsb
jmp
mov
lcall
mov
jmp
pop
cmp
pop
call
in
lock
lds
cmpsl
add
fidivrl
pop
or
or
test
nop
cmp
cmp
inc
xchg
ss
cmp
mov
std
pop
cmp
pop
movsl
xchg
dec
and
xor
aas
addb
push
int
mov
out
ds
out
push
push
jle
mov
iret
call
push
or
jno
je
jge
movsb
and
or
xchg
adc
sahf
imul
xor
mov
dec
lock
ficompl
lds
inc
ret
sub
nop
enter
insl
mov
lods
jle
lods
aad
inc
sub
js
loopne
cltd
inc
sub
adc
loop
sbb
imul
jge
and
push
inc
adcl
jg
xchg
fs
and
mov
hlt
ficoml
push
inc
pushf
mov
mov
icebp
fnstcw
loop
rep
loopne
adc
pop
push
and
int
sbb
sub
sarb
imul
mov
es
mov
dec
cmp
mov
test
ss
iret
fs
jecxz
dec
je
xchg
xchg
je
mov
sti
mov
out
ja
pop
push
jg
lds
popf
pusha
loopne
fwait
push
pushf
loopne
adc
and
shl
sarb
lods
push
cmp
mov
xor
icebp
and
iret
repnz
mov
push
ret
pushf
push
jno
imul
mov
or
and
cli
mov
sub
leave
sbbl
fdivs
pop
mov
out
sbb
out
xchg
clc
test
mov
mov
cmp
test
xchg
repnz
push
mov
mov
mov
dec
pop
mov
dec
push
int
inc
lock
mov
mov
movsb
xchg
push
jb
les
lcall
pusha
pop
pop
and
pop
xchg
setp
jge
mov
fstpl
fimull
out
jb
jbe
iret
outsb
movsb
mov
pop
jge
cmp
xor
adc
pop
out
scas
outsl
and
pushf
mov
cmpsl
stc
mov
divl
push
notl
inc
and
not
test
fcom
push
inc
scas
cmpl
addr16
scas
jmp
jno
push
adc
jnp
sbb
dec
cmp
pop
jge
in
and
cwtl
repz
push
sbb
xlat
add
rorl
xor
mov
ficomps
mov
xor
or
dec
gs
cli
das
notb
insl
sub
nop
fbld
adc
rcrl
insl
enter
jae
xchg
pop
mov
repnz
adc
test
lea
sub
cmp
dec
test
cmp
push
lret
lea
idivb
pop
aam
in
imul
or
add
mov
add
outsl
into
adc
leave
push
mov
loopne
lret
shlb
jge
pusha
repz
ret
bound
jp
out
and
jnp
pop
pop
sti
mov
stc
inc
adc
aas
sub
push
mov
add
dec
add
and
cmp
fists
push
push
adc
pop
mov
dec
cmc
and
sbb
mov
adc
pop
out
push
aas
or
xchg
sbbl
jp
mov
shrl
sbbl
into
pushf
cltd
xchg
mov
dec
push
push
jl
scas
js
adc
mov
das
sbb
data16
bound
inc
inc
arpl
push
mov
inc
jbe
cs
stos
xchg
push
inc
es
xchg
xor
xor
push
leave
adc
out
push
xor
sub
sbb
jg
jbe
fadds
cmp
push
stos
inc
add
inc
mov
aaa
ds
or
in
bound
call
jae
andl
sbb
test
lret
and
lock
and
inc
xchg
daa
jp
xor
out
xchg
xchg
cmc
int3
adc
sti
outsb
add
and
pop
dec
cmpsl
cmp
enter
int3
into
push
dec
out
jne
mov
mov
pop
jo
or
in
insb
jmp
mov
mov
mov
call
cmp
xchg
or
movsl
mov
inc
mov
mov
mov
inc
out
pushf
lods
sqrtps
sbb
xor
or
xchg
xor
or
push
subb
xor
imul
cmpsb
sahf
jg
xor
sub
popa
and
testl
adc
daa
xor
aas
lret
xchg
mov
lahf
repz
pop
idivb
movsl
movsl
adc
mov
push
repnz
and
ret
sub
ja
xor
aam
adc
and
mov
mov
mov
cld
mov
bound
std
sbb
or
dec
ret
mov
mov
sub
jo
ret
addr16
imul
adc
pop
ja
sub
xchg
mov
sub
push
push
push
push
out
jo
mov
out
add
and
outsl
mov
sbb
rcll
test
pop
cmpsb
dec
adc
add
pop
push
movsb
xor
pop
arpl
adc
jns
ljmp
test
mov
mov
push
ljmp
cmpsb
std
mov
mov
into
sarb
push
hlt
ror
xchg
jno
inc
xor
pop
dec
inc
xlat
lods
pop
lods
enter
mov
in
pusha
pop
outsl
cmp
dec
les
push
pop
out
gs
jae
push
pop
xchg
and
loope
push
test
jle
mov
and
xor
in
dec
cld
test
cwtl
mov
push
je
or
sahf
inc
pop
shrl
repz
sub
xlat
rorl
sbb
pop
inc
add
fs
mov
repz
sahf
jnp
movsl
push
nop
es
xor
add
push
push
fcoml
and
push
cmp
or
dec
inc
divb
rolb
call
mov
es
movsl
rorb
xor
sbb
jae
test
pop
xor
inc
jno
inc
add
mov
push
sbb
cmpsb
inc
ljmp
out
pop
pusha
cmc
in
and
xor
and
add
sbb
inc
mov
mov
fwait
push
fwait
lods
gs
adc
xor
cltd
fadds
sub
add
mov
int3
jp
cmp
movsb
shr
es
mov
mov
jle
lcall
rclb
out
addb
les
inc
mov
jbe
lret
loope
sbb
pop
pop
xchg
push
mov
mov
cmc
jge
jae
mov
mov
sbb
cld
adc
movsl
xor
mov
mov
inc
xchg
rolb
lds
pushf
add
das
pop
ja
mov
mov
or
arpl
cli
fadds
mov
and
xchg
mov
in
int3
dec
mov
inc
pop
ss
test
push
test
les
enter
out
sub
shll
add
fs
xchg
jno
rclb
xlat
adc
imul
aaa
ret
sbb
mov
xorb
xchg
pop
pop
rcrb
push
cmpsb
sbb
rcrl
mov
in
enter
jmp
pop
sbb
ret
pop
pop
in
pop
lea
das
aam
mov
push
or
inc
testb
repz
int
dec
jmp
mov
out
mov
test
mov
imul
and
mov
lods
mov
in
popf
out
ds
and
jbe
mov
adc
pop
mov
pop
outsb
xchg
stos
mov
add
insb
push
bound
lds
movsl
mov
push
mov
popaw
xchg
stos
stos
fildl
aas
jmp
sbb
call
ficomps
mov
test
xchg
gs
cmp
loop
mov
scas
xor
sbb
sbb
mov
and
lea
sub
cli
pop
pop
cwtl
lea
sub
pop
xor
fnstenv
ss
aas
mov
mov
inc
roll
pop
lods
sahf
test
lahf
xchg
fisubrs
cmp
js
enter
dec
mov
push
dec
div
mov
sarl
bound
pop
jne
stos
negl
jl
cld
mov
xchg
aam
cmpsb
test
bound
lret
shr
sbb
fwait
repz
push
fs
mov
mov
es
xor
insl
icebp
cwtl
test
je
xlat
or
imul
in
fs
pop
sub
mov
andl
lods
xchg
pushf
ds
mov
xchg
jmp
push
mov
add
mov
jb
getsec
insb
stos
add
xchg
jl
sti
pop
mov
and
and
push
addr16
cmp
lret
xor
sahf
ljmp
cs
es
fwait
hlt
fdivrl
add
mov
clc
mov
push
dec
mov
inc
fldt
sbb
adc
or
lods
lods
pushf
in
gs
or
mov
xor
xchg
fsubs
adc
fdiv
out
mov
and
cmp
ss
nop
cmp
cmp
outsl
loopne
add
mov
lds
add
sbb
daa
mov
bound
add
pop
mov
inc
std
or
jmp
jmp
xchg
lock
divb
inc
rcrl
pusha
jo
mov
sti
test
pop
bound
aam
inc
imul
in
pop
ret
pop
mov
sbb
xchg
outsb
and
inc
push
adc
ret
out
add
lods
cmp
jg
in
js
aas
xor
jmp
repz
mov
push
insb
sti
insb
mulb
cltd
xor
sahf
cmp
add
iret
jmp
jmp
adc
test
xor
dec
and
sub
gs
gs
mov
lahf
inc
cmpsl
mov
mov
in
mov
mov
imul
jp
lock
mov
sub
xor
and
mov
add
mov
mov
ret
shll
test
loop
imul
les
or
ss
movsb
xchg
lods
add
sub
pop
mov
cld
call
insl
subb
or
cmpsl
add
cld
and
mov
sbbl
gs
xchg
mov
xor
jge
movsl
pusha
push
or
xor
pop
mulb
xor
movsl
cld
loop
adc
ds
roll
rolb
cmp
jb
jl
jb
or
sbb
hlt
cld
or
and
fs
adc
add
xchg
mov
cmpsl
xchg
inc
rolb
or
mov
and
jp
jno
scas
lret
and
mov
pextrw
inc
adc
lock
mov
neg
cmp
sbb
or
push
enter
mov
imul
pusha
dec
rcr
inc
push
mov
cmp
jp
cmpsl
inc
sub
push
jne
xchg
pop
mov
das
inc
enter
ds
mov
dec
aam
insl
shl
push
pop
int
insb
mov
jp
sbb
xor
ja
mov
jae
into
adc
rcrl
mov
pop
cmp
gs
in
dec
in
sti
inc
das
lea
xor
mov
lods
imul
fxch
dec
movsb
es
je
jmp
addb
out
jae
mov
cmpl
jno
std
mov
adc
test
ror
bound
movsb
out
ret
cmp
push
ss
dec
add
int
out
mov
inc
ja
imul
inc
ffree
pop
loopne
aam
adc
dec
or
out
and
adc
inc
shrb
dec
in
jnp
daa
jb
in
call
divl
pop
scas
std
adc
outsb
mov
xchg
int3
aam
jp
aam
popf
movsb
sub
or
in
daa
jge
dec
dec
sub
mov
sbb
add
test
pop
outsb
mov
and
push
xor
mov
mov
rcll
mov
call
push
pop
ljmp
jp
ret
pusha
adc
js
inc
or
jns
add
loopne
dec
int3
mov
ds
loope
mov
mov
ja
cmpl
insl
popf
pop
dec
add
aas
xchg
jge
mov
dec
pop
adc
dec
mov
sarb
mov
xchg
lods
or
mov
push
stos
jle
imul
outsl
adc
cmp
cmp
mov
xchg
push
or
adc
aad
sub
clc
outsl
lock
inc
popf
and
scas
stos
push
or
add
cmp
mov
out
or
lea
outsl
ljmp
out
mov
push
mov
testb
or
or
pop
out
addb
loop
mov
xor
leave
sub
lret
call
stc
xor
cmpsb
out
cmp
pop
test
xchg
cmp
push
or
mov
jbe
pop
cmp
sub
xchg
sub
out
out
xchg
push
dec
pop
sub
mov
dec
ljmp
cs
out
pop
sub
imul
cmp
dec
mov
jge
dec
add
lds
imul
sti
xchg
jo
push
ficoms
shrl
bound
pop
mov
push
fldcw
or
xlat
inc
pop
adc
popf
hlt
imul
std
cmp
movb
inc
rcr
xchg
jae
jbe
jbe
dec
xor
dec
xchg
adc
ss
xchg
inc
cwtl
xlat
xchg
aad
push
adc
sub
jp
or
into
mov
movb
dec
test
push
dec
and
vdivss
out
push
into
mov
xchg
fcoms
inc
pop
jbe
adc
jmp
push
loopne
adc
pop
inc
lret
jb
adc
shll
push
mov
mov
jg
in
cltd
mov
pop
mov
pusha
bound
cmpsl
sbb
xor
lret
push
bound
je
ret
fldl
pop
inc
adc
bnd
push
or
mov
popa
out
jp
pop
mov
insl
xor
xchg
xor
sbb
mov
jg
enter
sbb
test
repnz
cmp
cmp
mov
sub
call
pop
scas
shrl
je
enter
js
sub
xchg
js
push
std
push
jne
sahf
xor
into
fidivrl
sub
inc
adc
cmp
cld
adc
insb
adc
shrl
std
icebp
out
jo
cltd
clc
and
mov
mov
dec
filds
sbb
pop
xchg
das
jb
mov
push
mov
and
cwtl
scas
and
pop
aaa
mov
pop
loop
out
movsl
hlt
mov
addr16
outsl
sub
aaa
push
rcl
je
jle
mov
je
lock
scas
ret
push
dec
push
xlat
lahf
adc
pop
or
or
aas
ret
rcrl
orb
bswap
roll
bound
pop
add
in
jge
adc
dec
lahf
idivb
push
iret
gs
cmp
sub
push
jnp
int
ljmp
lock
fucom
loopne
iret
push
ss
call
mov
adc
insl
push
andl
and
push
aam
sub
out
mov
pop
lock
ret
adc
and
mov
negb
jecxz
les
or
jo
fbstp
in
mov
jns
sub
pop
xchg
mov
mov
push
loopne
xor
sbb
mov
outsl
cmpsb
dec
out
sub
lret
and
in
mov
sub
push
jp
lret
in
adc
in
cmp
fimuls
rol
leave
out
jo,pn
outsl
mov
mov
ret
push
jle
lock
clc
stos
aad
lock
lods
mov
pop
or
add
test
sbb
in
cmpsb
in
mov
mov
mov
stos
cwtl
push
sbb
jns
push
xchg
aad
dec
dec
nop
xchg
mov
outsl
sti
jne
clc
jecxz
cmp
test
cmp
pop
dec
shlb
xor
cld
jnp
call
xor
inc
pop
xor
out
dec
data16
xchg
sbb
xor
shlb
pop
cwtl
mov
pop
or
test
nop
pop
xchg
xchg
es
mov
add
jnp
pop
mov
mov
ja
sub
lods
addr16
pop
cs
outsb
mov
inc
scas
sub
notb
adc
xchg
popf
call
nop
subl
leave
cmpsl
in
push
stos
lock
jg
mov
mov
sub
mov
in
push
mov
ljmp
mov
pusha
xorb
or
jmp
cwtl
enter
repnz
or
mov
and
ffreep
jnp
sub
data16
jno
stos
or
popa
stc
xchg
into
clc
fisttpll
mov
js
insb
outsl
push
rolb
data16
inc
fwait
aaa
cltd
int3
or
jecxz
pop
cli
push
cmp
stos
push
in
jae
mov
les
add
addr16
add
and
nop
stos
out
and
out
mov
adc
xchg
test
dec
adc
shll
mov
xchg
repz
lret
mov
stos
sub
inc
push
xchg
xchg
and
add
adc
xchg
sub
and
jle
jno
xor
xchg
dec
cmpsl
or
sub
adc
imul
sub
mov
push
stos
inc
int
jmp
insb
jle
jb
stos
in
cmp
xchg
dec
mov
pop
inc
aam
xchg
lods
xchg
mov
adc
lret
lret
dec
clc
mov
cmp
ljmp
mov
push
cltd
sbb
rorb
int
mov
ret
test
or
roll
xor
push
loope
jo
jb
lea
pop
mov
cltd
mov
adc
mov
iret
jmp
ret
pop
push
or
test
mov
outsb
add
fisttps
repnz
push
arpl
mov
push
inc
mov
mov
cmp
call
ljmp
std
cli
cli
fs
xor
movsl
push
xchg
xchg
sbb
pop
dec
mov
stos
or
in
mov
sub
add
inc
cmpl
rolb
xchg
jmpw
stos
pop
jbe
lret
test
pop
fdivr
out
mov
mov
arpl
cmp
adc
jbe
fistl
fsts
push
mov
inc
pop
addr16
mov
inc
in
push
add
popa
pusha
lds
mov
dec
push
fildl
ret
cmp
shll
gs
pushfw
dec
mov
in
imul
dec
daa
lahf
lcall
jmp
sbb
ficoml
popl
movsl
scas
xchg
stos
jnp
into
ficoml
mov
cmc
insl
aas
pop
ret
dec
jle
adc
inc
lods
ljmp
mov
or
arpl
jmp
jecxz
jge
dec
cli
lods
pop
arpl
mov
fmull
jl
ljmp
call
push
je
mov
and
ss
pushw
xchg
pop
add
into
loope
add
test
push
repnz
hlt
lods
test
inc
and
daa
sbb
arpl
push
lock
pop
adc
data16
cltd
xor
ja
jb
or
pop
dec
pop
push
xor
bound
inc
int
pop
ja
out
fldcw
pop
dec
jecxz
insl
out
ret
mov
fcoms
js
mov
lcall
sub
cmp
sub
addb
mov
mov
xchg
clc
out
adc
cmp
xchg
icebp
std
or
sub
stos
mov
shlb
add
sub
dec
js
popa
sub
lahf
mov
add
call
int3
fisubrs
xchg
cli
cs
stos
movsl
test
sbb
ffree
mov
mov
out
cmpsl
mov
lret
sarl
ret
pushf
push
popa
jb
scas
mov
pop
nop
dec
popf
sbb
cs
stos
push
push
sar
in
lods
and
aad
lahf
pop
nop
xor
aam
lea
mull
or
jnp
xchg
rorl
jge
xlat
ret
and
push
in
ss
and
cmp
push
inc
fwait
xor
in
repnz
gs
test
pop
jb
mov
cmp
int
pop
es
xchg
push
pop
adc
push
mov
repz
push
aam
in
mov
mov
es
jmp
ficoml
xchg
adc
push
sbb
or
or
lds
mov
or
fisttpl
sub
popa
sub
sub
cmpsb
loope
push
or
faddl
lock
mov
stc
outsb
jo
mov
xor
arpl
push
cmc
int
push
mov
add
dec
repz
lds
jecxz
push
ficomps
xchg
je
xchg
xor
arpl
hlt
mov
or
dec
imulb
fidivs
add
popf
adc
outsl
jmp
xor
leave
xchg
iret
cmpsl
dec
or
pop
fnstsw
adc
aas
dec
and
xor
adc
mov
push
xchg
bound
mov
mov
push
daa
cmpsl
push
xchg
loope,pt
push
ja
push
sub
add
inc
ja
jmp
nop
add
cmp
leave
and
jbe
imul
arpl
push
push
mov
mov
inc
push
inc
mov
jb
dec
jge
or
xchg
mov
inc
adc
loopne
dec
xchg
std
jno
ret
decb
ds
movsb
push
dec
mov
loop
mov
cmp
inc
mov
xor
insl
mov
mov
outsl
inc
fdivs
ds
lcall
aas
dec
add
scas
and
adc
testl
loopne
push
cs
mov
sarl
insl
xchg
sahf
and
adc
in
push
add
adc
xor
das
mov
push
sbb
jns
mov
movl
adc
and
xchg
mov
sub
sub
sbb
leave
and
ret
aad
lcall
out
push
cltd
xchg
insb
jno
addr16
mov
pop
ficomps
int
repz
xchg
idivl
pop
icebp
movsb
jg
popl
add
addr16
icebp
add
xor
aas
jae
inc
pop
mov
mov
cli
and
push
into
movb
mov
sbb
jp
dec
jae
in
pop
out
out
add
inc
scas
std
jle
repnz
mov
cmp
lods
rolb
mov
mov
pop
js
mov
je
rcll
in
push
cwtl
and
sbb
cwtl
adc
lret
cmp
iret
adc
dec
lcall
daa
or
inc
cmp
sub
cmpsb
movsb
pusha
xor
xchg
shll
icebp
je
sbb
pushf
cmp
push
in
pop
push
push
push
push
mov
mov
testl
fsubrs
sub
shlb
jl
nop
add
ja
and
pop
popa
sahf
fistpll
adc
sub
xchg
lcall
mov
xchg
aaa
pop
imul
xchg
testb
sti
sub
mov
lds
pop
xchg
out
pop
jne
and
sub
xchg
jno
clc
stos
aas
inc
addb
pushfw
push
fsubs
into
fnstsw
aaa
dec
enter
sbb
inc
xchg
add
pop
iret
and
mov
dec
stc
jno
icebp
lods
xor
dec
test
mov
outsb
or
pop
or
xor
rcr
sarl
aad
stc
hlt
lret
call
xchg
xor
mov
insb
or
pop
jno
sti
inc
aad
lds
push
sbb
mov
mov
jne
mov
adc
sbb
scas
movsl
lcall
mov
outsb
subps
cmp
scas
mov
cmp
into
xchg
push
fists
js
mov
lcall
outsb
lret
pop
dec
sbb
xchg
add
and
popf
jge
aaa
mov
rol
and
pop
sar
data16
cmc
stos
sbb
add
repnz
imulb
xchg
or
jmp
fs
test
stc
loope
fimull
sub
xchg
jo
sub
cmovne
scas
sub
mov
inc
sub
lock
lcall
inc
push
xor
inc
shll
ret
fsubrs
movsl
arpl
imul
add
push
xchg
push
xor
mov
int
daa
push
incl
mov
dec
cmp
mov
int
shll
lret
lock
pop
call
call
xchg
mov
pusha
outsb
xchg
repz
dec
sbb
in
mov
test
imul
inc
mov
clc
dec
leave
or
jbe
iret
sub
mov
pop
xlat
lahf
lds
fidivl
outsl
add
je
sahf
xchg
xchg
out
in
push
inc
mov
ss
adc
xor
inc
icebp
xchg
ljmp
sbb
push
pushf
pop
ret
popf
inc
pop
fimull
inc
dec
outsb
sub
andps
xchg
test
ret
push
cwtl
mov
lahf
cmp
mov
pop
or
or
mov
inc
int3
daa
fwait
pop
arpl
pop
sub
or
aas
add
fisubs
ljmp
xchg
push
jne
push
sti
fs
rcrb
adc
out
sub
popa
lcall
pop
das
mov
mov
jae
lret
pop
pop
sbb
mov
filds
adc
or
stos
xchg
and
nop
ret
jnp
jns
subl
push
hlt
xor
mov
push
ljmp
mov
fidivrs
shlb
pop
xor
jns
lock
cmp
loop
jnp
int3
enter
lret
adc
mov
inc
fmull
arpl
add
es
loope
inc
aaa
movsb
pop
and
inc
mov
out
jae
leave
aad
sbb
add
inc
jno
dec
jne
lahf
scas
sub
xchg
or
fisubrs
shrb
loopne
popf
addr16
jmp
in
jae
push
push
sub
fwait
sarl
movsb
movsl
cld
push
iret
mov
repnz
clc
cwtl
or
dec
and
add
push
xchg
ficomps
add
mov
addr16
jno
mov
out
inc
negl
mov
inc
outsb
mov
cmp
mov
xor
data16
sub
out
xor
pop
cld
movsl
in
shrb
out
inc
in
push
sbb
mov
pop
mov
test
mov
xchg
outsl
es
inc
std
loopne
jbe
movl
mov
mov
mov
mov
cmp
push
out
push
sub
cli
mov
dec
filds
hlt
dec
mov
mov
repz
adc
andb
mov
cmp
roll
cmp
mov
xor
jns
jb
or
mov
xchg
arpl
ret
pusha
insl
loopne
fisubrl
xor
pop
fisttps
or
mov
pop
je
mov
push
jle
mov
bound
inc
xor
sarb
mov
loop
sub
out
pop
mov
jnp
mov
cmp
dec
das
stos
or
sbb
std
rorl
fsub
inc
enter
pop
shll
dec
cld
orb
sub
mov
push
xchg
mov
fsts
mov
sbb
popf
stc
sub
in
stos
ffreep
xchg
aam
push
fidivs
in
ds
fsubrs
out
xor
xor
or
push
dec
push
addl
popl
inc
mov
xor
leave
xor
stos
jbe
ljmp
sub
lods
repnz
mov
lea
aad
mov
mov
adc
push
cld
jno
pop
ret
push
jbe
dec
daa
addr16
adc
das
pop
imul
fistpl
and
ss
sbb
jg
xchg
add
or
lret
lea
cli
add
mov
clc
in
or
mov
cmp
xor
xlat
movsb
jg
out
mov
lret
add
decb
fisttpl
in
ljmp
cmp
cmp
mov
mov
rol
mov
ret
pop
xor
sar
out
outsl
js
mov
loope
pushf
jmp
inc
push
push
ja
xor
push
pop
hlt
jmp
lahf
cmpsl
outsb
mov
and
pop
cmp
mov
and
ret
inc
nop
insl
or
movsl
mov
push
pop
dec
or
mov
sub
cmp
in
shll
loopne
test
push
push
ds
sbb
mov
lock
in
jbe
mov
pcmpeqb
rcr
or
mov
cmp
inc
mov
mov
mov
add
mov
cmp
sti
out
xchg
push
in
rol
push
repnz
mov
inc
mov
imul
pop
add
pusha
xchg
insl
adc
data16
lock
invd
cli
mov
xchg
je
inc
mov
xchg
dec
ljmp
cmp
das
outsl
pop
inc
xor
lea
sbb
loopne
push
cmp
cltd
loopne
test
call
incl
lods
repnz
mov
mov
sahf
icebp
jg
das
mov
popf
add
shrl
mov
mov
mov
ret
or
adc
in
and
mul
push
mov
outsl
dec
and
mov
mov
int3
cld
sbb
std
or
inc
xor
mov
loope
lcall
popa
mov
out
ljmp
cmp
jl
mov
pop
push
pop
in
repnz
adcl
push
sbb
jp
sub
mov
and
jge
dec
shl
push
mov
dec
sub
das
pop
les
lods
push
mov
insl
and
arpl
xor
adc
add
mov
mov
pop
xchg
mov
cmp
dec
repnz
fldl
ds
jg
jg
push
pop
es
cmp
loope
sub
in
and
jno
in
push
popl
pop
or
cmpsb
cmpl
cld
lods
sahf
sub
popf
pop
lea
jecxz
inc
fcom
in
incl
ljmp
pop
jp
add
mov
add
xchg
xor
popa
mov
scas
je
ljmp
sar
mov
mov
ja
cmp
or
hlt
shl
push
jmp
cmpsl
adc
mov
and
mov
and
push
sub
pusha
add
fdivrl
xchg
jmp
jno
xchg
jne
inc
call
cmp
aad
sar
ror
in
cmp
adc
testl
sub
mov
push
hlt
and
lods
not
int
out
cltd
jne
stos
inc
hlt
stc
adc
jb
imul
es
mov
call
rcrb
lods
ror
push
test
fisubrs
movsb
lock
lcall
addb
push
dec
dec
inc
addr16
mov
sbb
outsl
push
push
lcall
xor
std
inc
mov
popf
into
icebp
pushf
orl
push
rcll
xchg
push
dec
lret
cmp
fstps
and
int
dec
xchg
sbbb
sti
pushf
dec
push
add
or
int3
xlat
jo
jle
std
jmp
pop
pop
push
adc
es
jmp
movsl
sub
inc
sub
lea
xor
fwait
lods
add
jp
mov
test
xchg
dec
lods
mov
arpl
adc
mov
pop
repnz
cmpsb
popa
cld
fucomip
pop
ds
test
mov
into
cmc
addr16
xor
or
xchg
lret
std
mov
jmp
ret
pusha
stos
cmp
or
pop
arpl
pop
mov
daa
dec
popl
add
mov
inc
mov
ss
es
xor
js
pop
xor
pusha
push
adc
mov
nop
pop
sbb
pushf
add
mov
clc
inc
sbb
xor
push
orl
push
adc
std
je
inc
xchg
push
jle
scas
dec
and
out
lea
nop
imul
push
mov
addr16
sub
push
push
aas
jg
test
clc
pop
mov
fldenv
mov
int
inc
lods
jb
sub
sahf
mov
push
dec
cld
xor
cmp
xchg
ds
xchg
pop
addr16
mov
ficoml
aam
pop
in
jle
mov
adc
dec
dec
xchg
pop
lods
mov
push
lods
push
sbb
add
pushf
in
and
xor
adc
sbb
push
bound
nop
jp
jl
pusha
add
aas
cwtl
das
push
decl
pop
cmp
xlat
repnz
mov
mov
fistpl
adc
daa
adcl
mov
insb
jmp
jl
push
cmp
pop
cwtl
sbbl
cmp
out
sub
fldcw
cwtl
bound
in
jecxz
lret
insb
mov
enter
ds
fistpll
inc
aaa
xlat
hlt
fwait
leave
adc
mov
mov
mull
arpl
inc
push
jmp
or
je
mov
mov
fadds
lods
lcall
xchg
data16
mull
cmp
mov
adc
icebp
add
sbb
outsl
sbb
js
push
dec
popf
test
push
pushf
cld
movsl
scas
ret
shrb
into
and
lods
enter
scas
sbb
maskmovq
testl
inc
sbb
mulb
xchg
loopne
mov
and
jle
cmpsl
jae
push
repz
xchg
and
sub
pop
inc
xor
popf
test
jge
cmpsb
jns
add
inc
sub
jecxz
sbb
inc
aaa
add
iret
jnp
xchg
jl
jne
cltd
or
nop
or
addr16
lds
insb
xchg
xchg
mov
push
int3
addr16
sti
jmp
out
test
mov
xlat
leave
sbb
andb
or
jl
in
xchg
loop
xchg
rolb
jb
sbbb
pop
cmp
pushf
xchg
ss
stos
jl
mov
das
xor
adc
sub
cmp
mov
int
dec
pop
dec
orl
les
add
loope
pop
push
shl
push
pop
jo
addb
out
mov
iret
or
pop
lods
mov
jmp
mov
or
sarb
fldl
inc
pop
loopne
xor
jb
mov
jb
xchg
inc
outsb
lcall
adcl
icebp
adc
imul
jp
xchg
imul
imul
mov
xchg
mov
outsl
out
cmp
out
aam
and
iret
test
pop
mov
mov
idivl
iret
sbb
push
jo
or
mov
dec
and
lcall
inc
push
dec
aad
mov
push
fimuls
inc
nop
in
scas
ljmp
inc
cmpsl
in
dec
lahf
jns
push
lods
int
jmp
jae
xchg
test
movsb
lcall
inc
add
dec
xor
leave
inc
aas
mov
xchg
push
jge
push
inc
xor
mov
lock
or
out
jb
mov
orl
arpl
icebp
or
fistpll
push
push
mov
ret
cmp
int3
xor
ja
push
popf
mov
mov
cmp
unpckhps
sbb
add
rolb
andl
and
and
rcr
mov
jge
push
int
int
pushf
or
in
iret
mov
xor
scas
popl
aas
in
jmp
mov
icebp
ja
xor
out
and
mov
das
inc
ljmp
stos
inc
mov
repz
pandn
idivl
mov
or
cli
lea
testl
ret
pop
inc
call
jb
cli
sub
aaa
movsb
iret
xchg
xchg
dec
faddl
inc
jnp
mov
xchg
int
and
cmp
adc
out
ret
xor
mov
mov
fstpl
cwtl
jo
fsubrl
pop
inc
pop
lcall
add
sub
mov
cmp
add
and
jo
mov
orb
nop
daa
mov
mov
outsl
call
andb
ret
idivb
popf
xchg
push
mov
ficoms
rcrl
xchg
pop
or
fiadds
xchg
iret
lret
pushf
in
and
jb
test
das
cld
jno
movsl
or
mov
xor
decb
push
and
dec
mov
mov
add
out
std
cs
lock
jge
mov
sbb
inc
push
insl
mov
insl
sub
or
adc
adc
mov
lahf
pop
or
adc
push
mov
outsb
repnz
push
das
fmul
push
adc
jb
sbb
mov
adc
add
dec
push
cmc
das
daa
and
mov
cmp
rcll
aam
jb
jno
stc
push
adc
mov
cmp
adcb
hlt
leave
movsl
sub
sub
daa
sub
fwait
sub
and
jmp
ret
xor
sbb
sbb
sbb
nop
in
pop
inc
ret
dec
mov
sub
leave
enter
mov
sub
paddw
mov
daa
mov
fcomps
push
sbb
sub
and
jecxz
adc
pusha
cmp
jnp
cmpsl
notb
mov
jge
mov
cs
je
jge
xor
sbb
stos
jmp
jnp
adc
jnp
in
or
sbb
jae
test
mov
rolb
and
or
cmp
repnz
xor
cmpsb
adc
cs
inc
xor
pop
and
clc
jecxz
inc
pop
push
test
push
ja
dec
and
mov
pushf
mov
adc
jns
lcall
fdivr
fldenv
push
inc
push
push
cmp
inc
rcl
mov
jecxz
xchg
push
sub
pop
mov
inc
add
xor
aaa
cli
push
xorb
test
or
and
fs
fwait
sbb
movsb
xchg
xor
movsb
mov
popf
sub
idiv
cmpsl
push
sbb
push
sbb
fcmovnb
sti
clc
outsb
aad
xor
mov
add
out
inc
and
leave
inc
xchg
clc
cli
shrb
dec
jne
mov
mov
leave
mov
pop
and
dec
dec
fs
movl
push
fbstp
sbb
xor
or
jb
pop
xor
add
fildl
pusha
sbb
daa
push
inc
js
sub
mov
mov
ret
push
sub
inc
mov
xchg
bnd
mov
addr16
inc
jnp
mov
test
inc
test
insb
add
and
mov
mov
dec
dec
shll
mov
scas
bound
es
outsb
dec
cmpsl
shrl
loop
jbe
rcr
push
add
jmp
add
fiadds
mov
jns
fidivrl
mov
lods
popa
out
xor
repnz
ljmp
ret
dec
ficoms
lods
scas
adc
xlat
pop
cmp
imul
in
ret
push
jne
mov
out
leave
adc
mov
fnstenv
stos
cmp
jo
cli
mov
mov
xchg
imul
inc
ds
xchg
jmp
jg
inc
mov
pop
popf
dec
xor
addr16
mov
cli
push
sub
push
popf
and
lods
adc
or
xlat
xchg
xchg
repnz
inc
or
out
and
cmpsl
shlb
push
adc
clc
clc
repz
mov
hlt
xor
push
fnstenv
and
in
in
jmp
sub
pop
adc
aad
inc
xchg
addr16
stos
ds
add
pop
jo
mov
or
ja
adc
stos
inc
loopne
sbb
test
inc
jnp
xchg
pop
lret
add
mov
jp
and
push
xor
adc
out
mov
test
xor
fdivrs
mov
mov
std
xchg
xchg
mov
push
jbe
ljmp
sub
xchg
push
lods
push
pop
jl
cli
stos
in
stc
inc
clc
inc
in
mov
imul
sub
jnp
push
xchg
sbb
xor
pop
test
mov
popa
sbbb
mov
push
rol
leave
add
sbb
test
pop
stos
aaa
add
mov
or
test
dec
jl
rorl
insb
gs
sbb
dec
fwait
and
cli
cmp
out
mov
pop
pop
arpl
lahf
clc
pushf
jbe
adc
jo
cmc
roll
push
fs
mov
fwait
jno
push
xchg
mov
rolb
and
fs
or
mov
fstps
aad
dec
jp
xor
push
cmc
mov
aam
inc
sbb
adc
in
mov
dec
dec
es
data16
cmpsl
es
xchg
mov
xchg
xor
sub
pusha
lods
imul
loopne
mov
cmp
cmp
pop
movsb
mov
cmpsl
lods
leave
imul
mov
fmuls
pop
add
inc
cmpsb
add
sbb
int
nop
dec
aam
stos
or
ret
js
xchg
adc
fstps
sub
shl
or
jmp
test
sub
rcl
arpl
test
mov
jne
fstps
sbb
stos
xchg
frstor
sub
and
mov
mov
jmp
jns
pop
sti
scas
call
leave
pop
pop
lahf
iret
dec
repz
mul
inc
mov
push
das
inc
sbb
or
aam
cmpsl
push
ljmp
sbb
repz
mov
cwtl
movsl
cmp
mov
daa
add
sbbl
mov
cmpsl
mov
test
fisubs
shll
sahf
adcb
inc
mov
sarb
std
pusha
inc
sbb
shll
jae
add
or
xor
xchg
addb
add
xchg
movsb
sub
dec
sub
divb
fisubrs
xlat
ss
adc
add
call
repz
jp
fs
mov
mov
xchg
add
lea
and
in
repnz
cmp
jbe
add
rcrl
sbb
sub
add
aam
xchg
pop
jo
mov
jns
es
sbb
mov
rcrb
mov
mov
fcmovu
jns
xor
mov
and
xlat
insb
mov
pushf
fdivl
xlat
outsl
popf
sbb
fsub
push
add
test
mov
mov
daa
lods
pop
push
mov
enter
mov
pop
mov
mov
sub
addr16
push
inc
push
and
jp
mov
mov
mov
dec
push
test
cmpsl
sbbl
dec
gs
lcall
cmp
in
cld
loopne
call
sub
push
scas
dec
xchg
sub
pop
or
xchg
sbb
mov
mov
or
xchg
adc
je
or
filds
inc
mov
cmp
testl
mov
push
jmp
xchg
insb
inc
ds
dec
iret
push
inc
inc
jno
sbb
rcll
imul
pop
movsb
xchg
and
fidivl
sbbl
xchg
fs
sti
mov
xchg
pop
push
jmp
adc
add
outsb
jecxz
inc
fs
fwait
dec
dec
stc
lods
and
cmp
es
sub
outsb
leave
cmpsl
mov
lret
incl
mov
mov
rol
andb
ret
jbe
mov
and
in
and
xlat
or
mov
in
jecxz
lods
sub
shll
mov
sbb
cmp
stos
mov
cmp
and
test
out
roll
or
fld
sbb
sub
mov
push
inc
xchg
inc
xor
push
pop
sbb
dec
outsb
jns
mov
enter
pusha
pop
aaa
jne
sbb
lods
push
push
out
inc
mov
std
pop
js
or
jecxz
shrl
cmp
mov
xchg
das
cmp
or
sbb
movaps
mov
xor
es
dec
mov
adc
and
push
jae
dec
push
jge
in
pop
push
push
test
subl
inc
jne
lods
push
cmp
mov
adc
push
sahf
push
cwtl
xor
scas
mul
clc
dec
test
adc
adc
rcr
push
sbb
movsl
psadbw
shlb
or
repnz
jl
imul
ss
or
pop
mov
jne
cmpsb
aas
jne
inc
aad
fldcw
cs
cltd
cmp
es
inc
mov
mov
test
fsubrs
push
dec
rcr
stc
icebp
jmp
mov
fdivrl
out
cmc
lcall
rorl
and
sti
fdivrl
push
pop
xchg
cmp
push
adc
fs
call
inc
mov
or
xor
outsl
sub
int3
orb
sti
pop
movl
xor
daa
or
cmp
jmp
adc
push
pop
movsb
pushf
fcoms
xor
addr16
push
xchg
sub
inc
sub
jb
dec
dec
push
adcl
push
es
stos
push
mov
test
mov
mov
stos
nop
js
sbbl
xchg
hlt
fldcw
les
dec
or
lret
ljmp
hlt
sbb
pop
inc
inc
pop
cmp
outsb
icebp
icebp
push
mov
inc
dec
rcl
sti
mov
icebp
cmpsl
mov
jo
mov
and
mov
pop
sbb
imul
mov
loop
daa
in
push
push
gs
inc
sbb
imul
mov
fnstenv
lahf
clc
mov
fcomip
fistpl
push
sub
std
cmpsl
mov
popa
sub
dec
faddp
mov
sub
mov
adc
out
adc
addr16
in
pusha
stc
stc
enter
push
ficoml
popf
or
pop
and
imul
lock
movq
jecxz
lret
cld
fxch
push
and
mov
rcl
aas
sti
inc
mov
add
pop
inc
pop
jns
or
and
mov
arpl
pop
pop
xchg
xor
movb
aam
xor
inc
push
push
fs
pop
sahf
pop
mov
push
icebp
incl
xchg
xchg
xor
mov
pop
add
lods
ljmp
insb
insl
ds
mov
stos
and
fisttpl
outsl
jmp
loope
lret
int3
or
jns
jecxz
out
inc
ds
in
ret
je
test
scas
pop
sbb
scas
xor
sahf
xchg
cs
cmpsl
ja
adc
pop
add
sbb
jae
ret
xor
push
push
xor
add
sub
into
orb
adc
inc
jge
lods
leave
jns
cmp
int3
push
or
mov
adc
xchg
push
xor
push
dec
ljmp
setns
mov
jmp
cltd
sbb
cs
mov
and
push
sub
sbb
jnp
nop
cmpsl
jne
test
nop
adc
sti
rcrl
imul
or
subl
packssdw
jae
jae
cmp
daa
loope
sbb
mov
and
fistl
in
adc
stos
cmpsl
test
xor
mov
xchg
sbb
mov
xchg
imul
adc
nop
rcll
cmc
ret
mov
jae
jno
inc
mov
xor
pop
xor
dec
sbb
es
inc
test
mov
inc
lahf
movsl
push
dec
scas
push
inc
rcr
inc
sahf
push
sarl
push
pushf
jne
xchg
nop
jg
xlat
lret
fwait
push
lcall
bound
jbe,pt
test
mov
fwait
mov
ds
sbb
cld
outsl
push
push
rcll
mov
and
movsb
sbb
push
call
add
jp
push
xor
mov
xchg
mov
in
imul
or
outsb
aaa
ror
gs
int
xchg
pop
orl
fs
mov
xchg
push
jnp
cs
push
in
repz
je
inc
pop
aam
fmul
xchg
cmp
cmp
arpl
sbb
pop
icebp
jp
cld
and
mov
cmp
sbb
mov
or
testb
stos
cli
pop
mov
es
rclb
mov
jb
icebp
jp
adc
popf
push
insl
js
test
int
repz
jle
cmp
xchg
push
pop
lods
rolb
in
xchg
jns
jecxz
dec
stos
or
sbb
xor
cmp
scas
roll
lcall
gs
adc
jo
repz
lcall
jg
nop
or
cmpl
sub
mov
mov
sub
call
fs
imul
push
addr16
out
jl
popa
pop
jle
jp
push
nop
jecxz
clc
cmpsb
xchg
mov
hlt
xor
into
mov
or
jg
xlat
out
cmp
mov
fisubs
mov
xor
push
ljmp
ds
mov
gs
insb
aad
jg
sub
in
push
push
clc
xor
mov
sbb
pop
mov
xor
xlat
pop
adc
sub
aaa
cmp
cmp
fstpl
cmp
ret
add
mov
mov
add
add
mov
pusha
or
out
or
mov
pop
cmp
cmp
lret
pushf
jp
add
insb
loope
inc
push
iret
mov
dec
push
jle
push
mov
out
test
mov
int3
or
jle
mov
inc
testb
sbb
rcrb
jno
ja
aaa
cld
inc
and
adc
inc
push
cmp
aad
push
and
jmp
mov
stos
movsb
cmp
xchg
add
stc
mov
mov
push
add
hlt
popa
ret
ret
dec
fs
nop
xchg
or
sarb
xchg
nop
fwait
mov
mov
test
movsl
sub
dec
outsl
add
ja
out
imull
shlb
inc
cmpsl
aaa
scas
sub
xor
int3
mov
pop
imul
or
inc
ficoms
divl
mov
adc
fadd
pop
rol
repnz
mov
ret
adc
push
cwtl
aas
lds
loope
adc
sub
repnz
jg
inc
test
xorl
testl
and
mov
mov
clc
pusha
fbstp
or
pop
jle
push
dec
jae
adc
jbe
push
int3
out
cmpsb
mov
inc
aad
nop
xor
sti
xchg
push
mov
loop
hlt
mov
lret
push
mov
jne
mov
ds
push
pop
ljmp
pop
lret
insb
jge
imul
dec
cmc
inc
lods
in
in
ret
jmp
out
shrb
mov
sbbb
or
and
outsb
dec
loop
jg
mov
lods
mov
add
cmp
inc
test
xor
inc
and
int3
lcall
mov
and
dec
pop
pop
sub
cmp
es
dec
and
xchg
xchg
cs
jl
sbb
stc
call
mov
es
mov
lcall
daa
xchg
jb
pop
lahf
into
mov
dec
sti
clc
sbb
dec
dec
rcl
or
dec
mov
fwait
and
pop
sub
lds
inc
pop
clc
in
mov
rclb
xor
ret
pop
mov
jg
inc
clc
adc
scas
pop
ljmp
fisubs
lret
sbb
mov
or
lcall
jae
fsubl
mov
dec
lds
sub
push
mov
insb
psrld
dec
pop
repz
nop
lea
xchg
xor
mov
stos
fstpt
in
nop
and
mov
fsubp
sub
dec
enter
cltd
out
cmp
lahf
mov
in
add
cmp
cmpsl
mov
jns
ds
mov
sub
cmp
ja
test
movsl
jo
scas
mov
iret
shl
xchg
jge
sub
je
outsl
mov
or
imul
pop
iret
jmp
shl
pop
lret
stos
xor
lahf
adc
sbb
das
jns
stc
sub
pop
jae
fbstp
cwtl
shll
jnp
pop
icebp
fs
and
test
push
hlt
dec
scas
mov
jno
pop
lahf
mov
in
mov
dec
inc
rorb
cwtl
ja
and
add
es
xchg
nop
pushl
hlt
mov
lcall
inc
mov
int
in
out
add
lret
dec
stos
es
out
adc
xor
mov
jnp
dec
jno
push
sub
minps
cltd
xchg
adc
and
imul
cwtl
sbb
push
jnp
pop
aas
jbe
cmp
loopne
clc
sbb
scas
mov
lret
pop
push
mov
loop
sarl
dec
je
cmpsl
inc
push
xchg
jb
xor
jne
pop
nop
mov
daa
jns
xorl
sub
jne
fwait
xor
insl
and
cmp
mov
sub
inc
jbe
adc
cmp
rol
fisubrl
inc
mov
bound
xchg
fimull
insl
cmc
out
mov
fwait
adc
inc
and
leave
mov
imul
inc
sub
add
jo
and
mov
mov
mov
pop
mov
jg
into
sbb
sub
xor
lds
inc
test
jmp
inc
fs
movsl
movsl
into
popa
hlt
jnp
js
repz
mov
jbe
nop
push
rolb
or
xchg
push
push
stos
sbb
jg
lret
cltd
popf
add
popf
out
sbb
or
leave
aad
mov
mov
dec
sub
mov
mov
mov
mov
cmp
js
int3
dec
adc
cwtl
sub
jns
inc
imul
mov
btr
pop
movsl
in
dec
cmp
mov
sub
imul
xchg
loop
jno
xlat
fists
push
and
sbb
mov
pop
test
sub
push
fwait
scas
out
lret
and
adc
icebp
mov
les
pop
dec
xchg
xor
pop
jnp
sub
in
ret
jecxz
enter
pop
fldcw
or
adc
out
push
pushf
addr16
stc
jns
popl
or
pop
inc
cld
adc
imul
outsb
imul
das
mov
push
xor
dec
adc
test
popa
jp
ret
cmp
ret
cmp
jae
push
repnz
sbb
sub
outsl
push
jae
jno
mov
push
test
jle
pop
jmp
cmp
cli
and
loop
push
stc
pop
lods
jne
xor
sar
jmp
mov
adc
cmp
insl
or
arpl
into
iret
aaa
mov
call
std
dec
out
mov
inc
rolb
mov
xor
enter
add
xchg
inc
cmp
jnp
mov
mov
je
jno
cs
dec
push
repnz
ss
dec
push
popa
jno
aad
xchg
icebp
clc
add
les
nop
sub
fwait
dec
into
jmp
enter
add
imul
pop
cmp
test
xchg
call
aad
mov
jb
js
add
xlat
lods
sahf
add
cmpsb
arpl
repnz
out
jo
push
orl
jo
xchg
int3
add
inc
xchg
jl
addr16
fisubl
jge
push
dec
mov
push
adc
scas
les
into
nop
or
sub
inc
rcll
adc
and
cmp
aaa
jae
cvtps2pd
loopne
xlat
sub
sahf
roll
fistpl
es
mov
fnsave
out
daa
fnstcw
add
pop
xchg
dec
popa
add
pop
dec
xchg
ret
nop
add
mov
dec
cmp
mov
movlps
dec
lea
xchg
add
jmp
cmp
pushf
aam
pop
xchg
out
xor
mov
fdivl
out
xchg
aaa
sub
outsl
fucomip
daa
cmp
pop
dec
jp
mov
daa
loope
rcrb
nop
or
lret
xor
and
stos
aas
jecxz
inc
sub
xor
lahf
xchg
in
mov
jle
mov
hlt
mov
call
stos
add
and
stos
push
mov
in
mov
loopne
jns
jle
inc
jo
adc
pop
fisttps
dec
add
mov
rep
test
leave
fimull
idivb
das
and
push
leave
clc
add
sbb
and
std
mov
adc
xchg
mov
sti
cwtl
jnp,pn
and
mov
sti
cmp
pushl
cwtl
in
cmpsb
punpckhdq
dec
mov
sbb
ds
add
xor
loope
cmp
pop
xor
mov
or
aad
out
inc
int3
push
fbstp
cmp
cld
testl
sbb
bound
mov
scas
adc
mov
push
aad
shl
and
add
and
jge
jp
and
mov
in
xchg
inc
lahf
add
fwait
mov
dec
test
jl
nop
ja
mov
jmp
int
inc
jbe
mov
jl
push
adc
adc
mov
int3
pop
arpl
sub
faddl
pop
lods
roll
and
push
inc
imul
rcrb
fisubrs
dec
insl
cli
sub
pop
xchg
pop
push
loope
sbb
sbb
cmp
mov
pushw
mov
pop
shrb
testb
sbb
inc
dec
jns
lods
lods
mov
je
inc
gs
dec
and
jb
pop
add
std
mov
jecxz
dec
or
sbb
popf
jb
shrl
leave
aad
int
xchg
mov
cmp
in
cwtl
dec
lea
pop
cwtl
xchg
mov
in
dec
scas
out
xor
add
cmp
jge
inc
imul
cmpsb
sti
xchg
push
js
push
imul
and
jno
mov
imul
repnz
loope
gs
sbb
add
fsts
packssdw
nop
pop
arpl
push
std
jmp
movsl
inc
das
clc
or
dec
mov
repz
fisttpl
pop
push
loop
stos
push
icebp
call
xchg
push
pushf
int3
mov
in
lds
aaa
rorl
jne
jns
cld
xchg
jae
les
les
and
pop
sub
aad
out
add
add
aad
jmp
push
mov
inc
lock
pop
into
testb
pop
lret
cs
push
jo
jmp
push
out
mov
add
fs
lret
lds
xor
inc
decb
shl
jmp
and
ss
mov
fwait
pop
push
das
insb
scas
xchg
xor
rclb
cltd
fsubs
sbb
mov
add
in
pop
popf
jmp
xchg
and
aam
xor
sbbl
mov
shlb
jge
and
jo
dec
push
xchg
adc
and
loop
ljmp
mov
lds
inc
mov
adcl
rolb
jns
rcll
sub
pop
je
cmpb
int3
cmp
jl
push
int
cmp
inc
jle
call
test
jae
test
xchg
mov
cmc
test
imul
adc
cmp
pop
je
sbb
fwait
mov
loop
pop
sub
dec
pop
push
test
loope
mov
roll
outsb
dec
pusha
outsl
aaa
bound
ret
cs
out
fwait
inc
and
mov
push
repz
jge
call
dec
andb
mov
mov
push
cmp
mov
paddusb
xchg
shlb
out
and
hlt
loop
jle
or
das
rcll
mov
push
iret
cmpsb
jp
shll
mov
push
bound
xchg
push
cli
cwtl
jp
ret
ds
mov
cmp
ljmp
out
pushf
jae
iret
lock
pop
sub
es
xchg
in
mov
dec
push
mov
and
shlb
pop
mov
push
stos
call
sbb
std
xor
adc
cmp
pop
jp
mov
lahf
or
jge
movsb
aad
add
je
inc
shll
stos
xchg
lret
scas
push
inc
out
jge
negb
movsl
or
je
pop
pop
xor
fstpt
push
mov
sar
negl
fists
sub
jge
enter
aad
jo
add
xor
jmp
psllw
je
push
test
fisttps
fldpi
movsb
cmp
movsl
mov
je
mov
ja
lods
nop
fnstsw
or
enter
xchg
daa
icebp
mov
stos
bound
cwtl
and
mov
pop
stos
xchg
aaa
mov
add
cmp
inc
or
fwait
sar
lods
cltd
sbb
inc
sub
shl
stos
aam
dec
in
mov
mov
adc
cmpsb
div
in
adc
and
xor
sbb
mov
cmc
mov
into
mov
or
test
push
icebp
js
fnsave
cs
adc
fwait
mov
jno
ss
lods
cmp
sahf
leave
mov
repz
inc
dec
test
jb
xchg
mov
xchg
mov
push
jnp
push
push
sub
daa
mov
lock
xor
bnd
sub
xor
jne
push
scas
lds
push
pop
and
sbb
mov
lock
inc
inc
cmpsb
leave
jmp
ror
push
add
dec
insb
iret
or
add
pusha
out
add
mov
fldt
mov
xlat
in
imul
inc
mov
out
leave
xor
mov
inc
outsl
jae
sub
sub
mov
inc
mov
ret
xchg
dec
int
dec
mov
fsubp
icebp
mov
ss
cmpsb
adc
test
scas
stos
sbb
mov
adc
arpl
std
add
push
aas
lock
xchg
jb
or
jns
mov
aam
inc
mov
filds
shrl
sti
idivb
rcll
pop
lea
cmp
xchg
inc
les
mov
add
push
inc
pop
mov
cmp
mov
push
pop
push
mov
out
adc
stos
pop
xchg
push
ret
and
mov
mov
stc
stos
scas
push
inc
lds
lods
gs
cmp
mov
mov
sub
mov
mov
shll
pop
gs
test
push
cs
push
into
ss
insl
dec
into
sbb
cltd
int3
xor
adc
push
aaa
xorps
mov
lcall
rolb
lods
pop
cmpsl
and
or
mov
out
and
insl
and
pop
lea
loope
jp
imul
imul
pusha
sbb
sbb
div
xchg
push
xchg
sahf
cmp
icebp
mov
sub
in
and
js
popf
ds
jge
repnz
dec
mov
adc
lret
sahf
jmp
inc
ljmp
push
xor
push
and
hlt
or
xor
jmp
push
push
jge
push
int3
mov
int
call
jecxz
cmc
popa
push
or
adc
cli
movsb
loop
int3
mov
push
stos
scas
sub
mov
in
fistpll
inc
jno
jmp
insb
cmp
sub
ss
sub
lret
and
jne
mov
sahf
sub
call
sub
ljmp
xchg
js
xchg
push
bound
out
lahf
push
or
or
or
and
lods
scas
xor
pop
fcomps
and
add
dec
cmp
adc
add
cmp
lcall
dec
loop
pop
lret
sub
cli
pop
jecxz
out
add
mov
enter
or
add
or
inc
cmp
dec
adc
icebp
mov
or
sbb
call
aad
les
jge
dec
mov
scas
cmpsb
stos
mov
lret
ljmp
les
dec
clc
pop
nop
imul
sti
jns,pn
aam
sub
mov
bound
ror
xchg
cli
sahf
aad
fidivrs
rcrb
frstor
roll
nop
andb
mov
xchg
in
sbb
lea
lcall
jmp
inc
les
push
inc
movsb
or
in
inc
mov
lock
imul
mov
xchg
sbb
repnz
mov
fs
ss
mov
js
and
jmp
add
js
sub
push
add
dec
dec
out
dec
lret
jnp
addr16
adc
or
ret
add
cmp
mov
adc
in
es
pusha
ffree
pop
push
and
pop
jo
dec
adc
vmovlpd
mov
push
shrb
daa
fiaddl
dec
mov
mov
insb
adc
sbb
pop
inc
dec
mov
inc
and
mov
mov
push
out
cmp
pushl
push
xchg
mov
ds
dec
lret
popa
dec
sub
push
pop
xor
jnp
xlat
cmc
inc
in
jo
movsl
and
pop
push
stc
sbbb
sbb
cmp
stc
aad
sbb
scas
jno
lods
adc
add
mov
stos
mov
mov
aam
mov
scas
jg
jl
pushf
or
testb
xchg
xchg
and
pop
pop
lret
and
sbb
adc
sbb
es
stc
fucomi
call
stos
ficoms
mov
push
jge
mov
lods
inc
sbb
xor
jmp
push
or
test
cmp
mov
sub
mov
adc
jnp
xor
mov
dec
pop
pop
cmpsb
and
icebp
jbe
addr16
bound
roll
mov
test
mov
jmp
js
inc
dec
insb
push
jmp
inc
das
cmp
dec
jecxz
out
cld
inc
xchg
das
push
bound
lcall
hlt
or
imul
push
lods
dec
push
pop
mov
mov
sbb
xchg
jnp
in
in
mov
jns
cmpsb
cli
aas
jecxz
lret
imul
sbb
addr16
jb
imul
aam
and
or
jb
mov
jnp
inc
stc
or
fsubrs
inc
pop
adc
iret
add
adc
insl
jge
cs
push
dec
mov
fldt
pop
icebp
bound
repz
ret
outsb
scas
sbb
sti
aam
pop
mov
mov
lret
js
mov
repnz
dec
inc
inc
and
adc
frstor
mov
sub
xchg
cmp
adc
sbb
fs
mov
xchg
add
fiaddl
mov
jbe
push
outsb
push
push
pop
push
dec
sbb
cmpsb
adc
and
rclb
xor
push
and
iret
leave
in
clc
in
jge
pop
in
dec
ficoms
push
dec
add
scas
es
dec
adc
daa
popa
sbb
jmp
add
cmp
xchg
adc
mov
mov
lods
inc
xchg
jns
lret
push
pop
lods
test
adcb
add
cmc
push
fisubrl
repnz
out
sbb
rcll
es
mov
mov
imul
push
ss
and
push
or
pop
jecxz,pt
cmpsl
in
sahf
divl
cmpb
sbb
xor
push
test
dec
es
sub
ret
sbb
ljmp
mov
out
cmp
and
in
inc
enter
adc
jecxz
add
inc
lods
es
fstpt
mov
cmp
add
inc
mov
jae
mov
scas
mov
push
push
jae
mov
pop
mov
jl
mov
cmpsl
and
stos
std
scas
loop
dec
sarl
jecxz
jnp
xor
ja
orl
pop
pop
sbbb
arpl
in
movsb
xchg
out
xor
inc
aas
call
add
jbe
mov
idivl
dec
pop
xchg
in
and
pop
mov
jge
cmp
pop
std
cmp
test
xchg
or
xchg
push
nop
sub
pop
insl
int3
push
sarb
jne
sbb
xchg
push
fdivs
mov
xchg
lret
out
jmp
push
jns
jbe
inc
divb
mov
dec
jns
popa
idivb
mov
ret
dec
pushf
repz
jecxz
push
or
in
and
call
loop
mov
push
sbb
push
jecxz
insb
adc
xchg
lods
push
cmc
loop
cmc
je
pop
push
cmp
mov
push
incl
and
insl
fbstp
sbb
arpl
jge
push
insl
push
aas
popf
add
mov
mov
dec
mov
or
and
cwtl
testl
sbb
loope
jmp
subb
popl
mov
stc
aad
lods
mov
push
xchg
push
or
sub
enter
dec
jle
int3
adc
and
mov
shll
dec
xor
cmc
mov
adc
push
xchg
push
xor
xchg
sbb
test
xchg
jo
or
ja
in
mov
and
daa
push
add
lea
and
fistl
pop
pop
bound
or
cs
mov
mov
stos
jmp
das
icebp
shlb
xlat
xor
pop
jo
jle
lock
dec
adc
in
sbb
and
jo
aam
loop
fistl
and
xor
roll
push
outsb
lcall
and
mov
mov
or
xor
inc
inc
shll
inc
push
cmp
lods
xor
lds
sti
mov
sbb
pop
jl
add
push
push
dec
fwait
repnz
xor
inc
push
decl
loope
and
insb
shll
push
out
push
pop
mov
push
fwait
test
xchg
inc
mov
dec
in
push
in
lods
sahf
out
mov
popf
jle
out
push
xchg
pop
out
into
dec
push
pop
int3
jp
lcall
push
inc
inc
nop
push
jge
mov
icebp
inc
jbe
mov
fsubrl
int3
daa
cmc
popa
mov
test
mov
add
int
push
icebp
and
out
and
ret
mov
ret
xchg
cwtl
or
fidivl
inc
pusha
cmc
hlt
gs
ficoms
and
xor
cmp
sub
andl
dec
leave
cmp
inc
daa
adc
sub
cmp
adc
int3
mov
jns
adc
sbb
cmp
shlb
test
cmp
call
pop
sub
sub
insl
inc
aad
inc
repnz
push
adcl
shll
cs
stos
dec
adc
mov
xchg
mov
cmc
push
fiadds
clc
and
decb
adc
or
mov
cli
push
and
les
add
push
fcompl
test
mov
sti
and
test
es
adcl
xor
pop
rcrl
fwait
in
fisubrl
mov
loopne
out
setl
les
repz
repz
daa
icebp
jp
ja
ret
nop
movsl
fcmovnu
outsl
es
adc
or
mov
ret
in
jns
lahf
notb
xor
jne
arpl
sub
movsl
sbb
sti
sahf
out
stos
shl
or
ret
sbb
mov
fdivs
lahf
aaa
hlt
xchg
sbb
adcl
xor
jecxz
dec
dec
xchg
pop
sbb
bound
inc
adc
stos
gs
mov
mov
das
push
inc
into
out
ret
xchg
aas
dec
in
jp
sbb
xor
mov
je
sbb
add
stc
adc
xor
stc
mov
jp
dec
mov
add
aas
insb
jl
and
fldl
jle
mov
nop
outsl
mov
mov
add
jp
pop
cmp
aaa
push
test
je
inc
dec
out
cmp
fldt
pop
sbb
data16
loope
mov
ds
fwait
push
inc
iret
iret
test
mov
or
or
sbb
in
jno
pop
inc
cmc
xor
mov
les
les
xor
dec
xor
movsb
mov
nop
ret
out
sbb
mov
mov
mov
pop
xor
sarl
adc
add
sbb
jecxz
lcall
mov
das
mov
push
dec
mov
push
inc
adc
jno
and
and
jns
xchg
rcrb
xorl
lret
add
push
cmp
jns
xchg
nop
pop
stos
sub
jg
add
das
cmp
and
or
aas
in
add
lock
in
cmp
pop
ror
ficompl
push
fdivs
lahf
pusha
adc
cmp
dec
mov
cmp
ja
xor
in
cli
push
push
fnstenv
sbb
lahf
xchg
popa
daa
xor
and
cwtl
sub
jbe
in
xchg
mov
push
loop
adc
pop
fwait
push
adcb
and
in
lcall
inc
inc
scas
pushf
roll
arpl
xchg
test
mov
pushf
inc
js
push
leave
push
stc
mov
out
sub
sahf
in
aas
test
sbbl
fisubrs
push
and
add
cmp
lods
scas
lea
dec
call
fisttpll
leave
out
pop
popl
push
nop
std
jmp
lods
dec
test
sub
xchg
movsb
xchg
mov
clc
daa
std
stc
aad
adc
paddb
mov
inc
pop
popa
cmp
mov
test
or
leave
adc
mov
rorl
pop
add
cli
jo
xor
stc
fnstcw
mov
daa
push
xchg
and
mov
icebp
rcll
adc
cmp
hlt
sub
je
iret
daa
rol
inc
add
adc
xorb
arpl
test
mov
testb
add
sbb
sahf
push
sbb
push
push
inc
sahf
dec
int3
ficoms
push
sbb
cmpsb
mov
sub
shlb
sahf
test
adc
rcl
push
out
mov
repz
adc
clc
pusha
shr
dec
popl
add
sub
stos
bound
sbb
aas
inc
aam
push
cmpsl
and
sub
mov
pop
iret
push
push
mov
or
cs
jmp
add
jno
xchg
std
inc
xor
push
test
outsb
dec
or
inc
fldenv
pop
fmull
push
test
mov
and
sub
rcll
pop
xchg
xchg
fisttps
aam
cld
inc
subl
cmp
lret
add
pushw
push
repnz
movsb
push
pop
ds
repz
or
int3
insl
outsl
pop
lret
cltd
mov
cli
sub
aaa
dec
loope
aad
mov
loope
lret
cltd
or
inc
stc
lods
loopne
push
sti
vpshaq
xchg
sub
int3
push
div
addb
sbb
aam
mov
mov
in
jp
push
testl
popa
mov
add
adc
sub
sti
sub
lea
repz
incl
aas
jp
sbb
inc
dec
roll
or
xor
stos
in
mov
jge
hlt
sbb
cs
jmp
test
popf
arpl
sub
xchg
cwtl
and
fwait
mov
xchg
scas
fsubl
scas
mov
data16
xchg
mov
rclb
inc
sbb
jmp
jge
pushf
mov
test
insb
sarb
lcall
std
in
xor
lahf
mov
mov
mov
fmul
pop
dec
out
xchg
enter
addr16
scas
or
js
sub
aaa
mov
bnd
jmp
pop
mov
mov
movsb
lret
or
leave
push
mov
add
pop
or
lods
test
ds
in
insb
inc
cli
hlt
xchg
inc
adc
sub
push
testb
xor
mov
sti
mov
mov
outsb
dec
fwait
out
mov
ror
mov
push
fisubrs
pop
sub
jno
into
imulb
mov
mov
leave
movsl
xchg
cltd
lds
dec
lea
fists
ret
pop
ljmp
ljmp
shr
fldenv
hlt
sbb
jbe
xor
js
dec
mov
iret
jecxz
mov
sbb
js
adc
mov
mov
add
xor
popl
bnd
jl
rorb
push
out
xchg
xor
push
inc
pop
fstps
mov
jb
jecxz
in
push
loop
sub
popa
jle
fiadds
ret
dec
dec
into
lret
ss
pop
push
mov
add
sub
aam
icebp
incb
ds
fmuls
mov
mov
loopne
ficoms
arpl
xor
in
orl
add
push
sbb
pop
fiadds
gs
jmp
sbb
push
sub
imul
aaa
adc
cmpsl
push
jae
stos
adc
dec
push
jae
ret
addl
movsb
pop
push
jo
sub
lods
inc
jae
xor
mov
fadds
inc
mov
and
jne
and
jns
movsl
lods
inc
rclb
js
mov
or
pushf
popf
xor
inc
pusha
sub
fldt
mov
test
into
insl
jl
push
cmpsb
mov
inc
rorb
js
adc
lea
add
add
or
cld
fucom
push
lock
fcmovne
or
lret
pusha
jecxz
add
or
pop
enter
iret
ds
dec
jmp
push
add
or
das
xor
mov
clc
fwait
outsl
lret
shlb
mov
pusha
cli
roll
pop
pop
sub
push
addr16
and
pop
addb
or
inc
or
mov
jns
push
xor
ret
mov
movsl
dec
cwtl
sbb
add
out
fwait
xchg
push
pop
push
ja
push
jecxz
cwtl
mov
aas
je
test
hlt
sbb
ss
xchg
jns
or
jne
pop
outsb
push
sbb
mov
add
into
test
int3
and
inc
aaa
daa
pop
outsl
xchg
and
adc
inc
mov
xchg
pop
push
adc
xor
mov
sub
je
aas
loopne
xchg
aaa
dec
notl
into
mov
inc
dec
adc
aas
cmc
dec
rcl
mov
shrb
bound
inc
or
and
int3
mov
ja
and
gs
arpl
in
test
jae
aad
pusha
jl
push
push
test
xor
push
leave
les
aaa
push
outsl
pop
xchg
scas
clc
mov
je
ljmp
aam
add
aad
gs
adc
imul
or
rorb
jno
fdivr
mull
sub
and
adc
dec
fnstenv
xrelease
xor
dec
mov
lret
sbb
and
push
push
push
aaa
insl
xor
xor
xchg
jp
sbb
adc
pop
push
push
mov
negb
aam
mov
fucom
push
sbb
fdivrl
mov
ret
les
add
xor
popf
inc
xchg
inc
pop
imul
cli
push
imul
imul
adc
adc
or
sbb
mov
push
pop
xchg
mov
inc
inc
push
jmp
hlt
dec
insb
sbb
dec
repz
fs
lds
and
mov
add
daa
fmull
shll
shll
xor
sbb
lahf
out
in
sub
test
jge,pn
jnp
ret
adc
pop
lods
insb
inc
std
dec
mov
mov
xor
jo
pop
pop
arpl
lret
mov
pop
pushf
mov
es
pop
add
push
xchg
js
ss
mov
stos
mov
inc
loopne
outsl
data16
jg
aad
loope
pop
lds
sbb
jle
cli
loop
lea
jmp
mov
nop
int
sub
stos
sar
in
aas
xor
mov
sahf
or
cmp
mov
add
xchg
xor
pop
jne
jnp
out
ds
jb
or
popf
push
std
pop
das
pop
test
lods
data16
rorb
xchg
adc
sbb
into
iret
rclb
cmp
lock
pop
pop
stos
jmp
inc
mov
lret
sysenter
sbb
fsubrs
xchg
push
mov
mov
cmp
daa
repz
cmp
in
mov
cli
aam
and
jg
dec
nop
and
icebp
out
dec
or
jp
xor
test
cmc
in
mov
push
andl
mov
add
das
leave
call
cmp
clc
push
jne
mov
pop
inc
mov
orl
imul
jl
inc
ret
xchg
test
sbb
lcall
sbb
lock
cmp
popf
and
aad
ret
xchg
xchg
mov
mov
push
mov
hlt
mov
lcall
mov
add
add
xchg
bound
test
push
shlb
dec
xchg
adc
scas
pop
mov
mov
sub
test
mov
and
mov
lods
ret
mov
fwait
adc
iret
inc
je
mov
xlat
and
pop
adc
mov
iret
leave
mov
mov
out
pushf
loopne
push
repz
ss
sub
jl
clc
xor
popa
mov
adc
leave
pop
jge
ds
jne
shlb
incb
sub
dec
icebp
xchg
xchg
inc
sti
insl
sbb
into
inc
in
insl
sbb
pop
sar
mov
imul
inc
cmpsb
or
inc
mov
push
xor
xor
jmp
mov
lods
mov
fisubrl
jo
pop
mov
xor
push
data16
fucomp
jne
mov
or
orl
movd
pusha
adc
pushf
adc
rorl
dec
popf
test
or
pop
aaa
inc
jmp
int
js
cmpb
inc
shlb
and
cmp
cmpsl
fs
loop
scas
push
fsubp
jge
leave
cmc
movsl
movsb
decb
sbb
repnz
xchg
insl
push
pop
addr16
lea
xchg
dec
and
ret
mov
arpl
in
add
out
adc
lods
rcrl
cmp
mov
and
mov
nop
scas
bound
lods
ja
aaa
push
cli
jae
pop
ficoms
rorl
dec
sub
int3
sub
jg
mov
dec
fldl
and
lods
jb
lahf
cld
add
or
sub
and
in
not
sub
jl
adc
out
enter
mov
cmc
inc
stos
imul
dec
mov
loopne
stos
xchg
jbe
cmp
sub
imul
cmp
mov
pop
out
enter
lret
iret
clc
or
stc
shrl
jl
inc
popa
call
mov
mov
pop
jecxz
dec
pop
jecxz
pop
and
jmp
xchg
mov
xor
in
push
bound
aad
xlat
mov
lock
leave
jg
add
lahf
test
shl
les
lea
mov
adc
leave
pop
dec
add
sarb
sub
test
cmp
sbb
xor
ds
rorl
sub
stos
outsb
js
pop
inc
push
imul
insb
mov
lock
mov
dec
mov
pop
jge
inc
rolb
mov
cwtl
fsubrs
push
rcl
adc
mov
je
outsl
cmp
pop
call
ret
xor
xor
and
cmp
stos
gs
and
test
lds
push
aaa
push
stos
ret
lret
xlat
shrb
faddl
or
sub
ret
xchg
movsb
icebp
cmpsb
jmp
popf
dec
cmp
div
pop
fs
sub
and
jle
cli
push
roll
dec
inc
push
mov
loope
dec
dec
xchg
add
or
int
in
jmp
inc
cmp
push
insb
mov
xchg
int3
scas
inc
push
aas
dec
movl
jo
loope
in
je
mull
mov
dec
in
ds
sub
aaa
xchg
mov
mov
xor
wrmsr
idivl
cmp
adc
fistps
enter
xor
in
das
xor
sbb
es
inc
jo
call
push
ficoms
jg
jmp
mov
hlt
insl
jnp
enter
sbb
jl
test
mov
inc
jle
movsl
cmpsb
push
adc
xorb
fistpl
cld
push
push
add
mov
mov
mov
data16
stc
std
repnz
sbb
popa
sub
xchg
divl
inc
mov
adc
pop
mov
xchg
jo
mov
jns
cld
xchg
int
jns
xchg
lods
adc
and
insb
imul
cmpsl
cmpsb
imul
inc
push
jb
mov
and
jno
xor
mov
js
mov
sub
pop
ret
push
mov
xchg
mov
mov
cmp
pop
cmp
mov
and
xor
mov
xor
jne
dec
pop
pop
fistl
mov
ds
into
mov
jno
add
in
mov
loopne
jl
push
xchg
jmp
add
jno
imul
dec
insb
loope
push
mov
adc
mov
dec
mov
movsl
stos
mov
dec
pop
mov
loop
or
jecxz
cmp
or
cltd
jbe
dec
pop
mov
xor
or
mov
test
dec
pop
mov
push
xlat
pop
sbb
cs
xchg
sbb
int
out
lret
dec
jnp
nop
aam
outsl
mull
push
sub
mov
clc
addb
xlat
cltd
mov
and
je
fwait
inc
or
addr16
addr16
mov
dec
and
lcall
jge
sub
iret
ljmp
cmp
aam
mov
add
cmc
in
pop
cmpsb
cmp
lds
fistpll
add
cmp
lods
inc
leave
fucom
push
fs
mov
fistps
orb
sub
dec
add
sarl
jns
or
popa
inc
ja
outsb
dec
jl
cmpsl
jns
int
pop
cltd
dec
jmp
add
inc
fists
push
jne
and
enter
popa
test
jbe
test
or
xor
icebp
xor
mov
dec
cmp
mov
mov
xchg
mov
cmp
mov
ret
daa
std
inc
jg
sbb
aam
incb
push
fildl
cli
ss
mov
test
pop
sub
pop
movsl
jmp
faddl
jp
and
xchg
test
das
jl
push
jge
mov
scas
int3
cld
fsubl
pop
push
jb
and
pop
or
test
movsb
inc
imul
ret
push
loop
test
xchg
mov
mov
mov
lock
call
xchg
lahf
call
repnz
pop
ret
pop
out
test
mov
or
ret
fs
mov
mov
shr
je
jmp
ret
or
inc
adc
std
pop
stos
push
cwtl
push
adc
ja
lods
pop
mov
jo
add
pmaxub
add
imul
inc
ja
jg
out
mov
cmp
rol
fidivrl
xchg
addl
mov
cmpsl
in
push
cmp
xor
test
shrl
pop
sahf
or
in
scas
xor
mov
cmp
es
popf
out
cwtl
inc
push
je
mov
andl
testl
sti
insl
mov
mov
jp
pop
cmp
sub
pop
add
add
mov
cwtl
jbe
mov
loope
push
imul
and
adc
mov
cmp
bts
and
out
mov
jg
jmp
mov
pusha
xchg
push
xchg
pusha
hlt
push
cmp
xor
cmp
cmp
or
cmp
cmp
mov
add
popf
imul
jg
sti
enter
mov
push
add
popa
mov
cmpsb
into
adc
adc
enter
ljmp
je
int
or
cmp
rorb
jnp
call
cmp
push
jle
and
jge
int3
jne
xchg
mov
orl
push
push
mulb
fndisi(8087
jnp
xor
fidivrl
insb
dec
push
cmpsb
shl
std
testb
stos
lea
xchg
std
sbb
jne
jno
mov
or
mov
add
push
push
loope
mov
mov
out
pop
mov
xchg
repz
and
push
lea
aas
pause
and
je
negl
js
sub
xor
lret
lcall
pop
les
adc
test
fidivrl
jmp
test
loop
xorb
xchg
dec
pop
xchg
jo
mov
mov
push
jg
dec
nop
xlat
adc
hlt
dec
dec
test
mov
das
sub
cmp
bound
sbb
int3
imul
ja
insl
out
fcoml
xor
jnp
rcll
fiaddl
pop
inc
into
sbb
outsb
iret
dec
mov
or
add
andb
leave
rcr
add
cmp
addl
pop
push
test
xchg
cmp
jne
or
push
or
mov
mov
lret
fsubrp
mov
inc
xchg
mov
jmp
dec
jns
mov
fisubrs
xor
add
shrb
xchg
loope
mov
orl
in
movsb
mov
shl
dec
mov
add
jl
sbb
inc
and
popa
cli
pop
repz
test
mov
jo
lret
push
adc
cmp
sub
cltd
xchg
mov
add
fs
or
xchg
mov
adc
jp
or
lahf
mov
rcl
or
jb
lcall
sub
loop
push
cli
add
adc
jbe
rorl
push
mov
dec
pop
jmp
lods
jne
xchg
mov
sub
sbb
push
nop
sub
sahf
dec
xorb
ds
jb
jb
scas
pop
daa
rol
xor
sbb
lds
int
loopne
aaa
xchg
icebp
pop
inc
ja
nop
adc
and
adc
cmp
mov
xor
fdivp
aam
in
ret
lahf
pop
and
je
sub
ss
ret
hlt
xor
adc
inc
in
in
lcall
lret
stos
inc
mov
cmp
mov
clc
jnp
fisttpl
lret
out
ja
mov
jg
call
jecxz
push
int3
ror
arpl
loope
cmpsb
mov
adc
addl
lea
daa
inc
sub
pop
inc
cmp
adcb
aaa
pop
fwait
outsb
lahf
es
jp
or
sbb
cmc
mov
cli
pusha
or
cmc
cmpsl
addr16
cmpsb
shrl
mov
fisubrl
jbe
ret
cmpsb
or
xor
sub
xchg
fs
aam
and
call
stos
push
xor
adc
xor
out
pop
push
jb
mov
push
pop
shl
xor
add
cltd
scas
jae
or
in
in
loop
cltd
jge
xor
mov
outsb
fs
xchg
lods
movsb
call
repnz
scas
pop
test
jnp
nop
pop
pop
push
pop
xor
pop
mov
xlat
push
dec
mov
loop
xchg
push
nop
push
lods
or
popa
movsl
dec
inc
xchg
sbbl
loopne
mov
inc
jge
xchg
push
xor
cwtl
scas
movsb
xor
jmp
cmp
and
jmp
mov
addr16
jne
sub
push
mov
cli
xor
adc
movsl
ss
jp
add
insl
lds
mov
add
mov
stc
daa
scas
or
test
adc
adc
out
jl
xor
daa
inc
jns
stos
add
pop
pop
xchg
and
sbb
xor
cs
dec
lods
es
test
pushf
mov
sbb
ja
dec
cli
ds
loope
insl
xor
mov
shl
cmp
cmp
cmp
arpl
sub
jge
or
jo
jb
xchg
xchg
test
fistl
jg
xor
and
push
in
sub
or
mov
or
mov
frstor
sahf
test
cmp
pop
je
stos
mov
mov
cmp
inc
insb
cmp
popf
stc
lods
inc
jmp
decb
push
pop
adc
sub
and
stc
fwait
sbb
mov
sbb
mov
std
mov
mov
dec
push
xor
sub
test
sbb
sarl
pop
or
pop
push
mov
dec
enter
movl
dec
mov
xchg
mov
outsl
outsl
xchg
into
insl
jg
fs
sbb
inc
in
pushf
icebp
in
icebp
cmp
push
jle
insb
sub
out
inc
cmp
fs
outsl
out
xor
adc
bound
mov
sbb
or
test
test
cmc
lret
shrb
push
xchg
out
popf
jp
xor
leave
jnp
shl
lret
div
shrb
cmp
xor
fdivrs
lods
push
lock
xor
or
mov
inc
add
mov
mov
aaa
push
and
and
ljmp
cld
pushf
out
ja
sub
mov
jmp
pop
in
jp
pop
mov
xchg
jle
mov
mov
cmp
adc
dec
mov
cmp
or
jbe
cli
cmp
jmp
mov
rcll
mov
fs
pop
lds
outsb
sbb
sti
cmp
lret
mov
or
mov
adc
xchg
nop
stos
inc
mov
xor
call
outsl
xchg
lods
jl
out
cld
aas
xor
or
add
and
imul
es
mov
mov
mov
mov
je
out
and
loopne
ja
loop
add
fidivl
push
adc
stc
fcoml
lret
jne
idivb
clc
pop
ss
mov
xor
cmp
cmc
xchg
xorl
popa
mov
xor
insb
std
lret
repnz
sub
cs
mov
out
iret
and
popf
xchg
int3
jo
dec
xchg
and
mov
sub
dec
ds
pusha
xchg
push
aaa
test
cmp
pop
and
add
jae
cmpsb
mov
jb
inc
mov
sti
xchg
jmp
icebp
iret
imull
test
push
pop
sub
cmp
aam
cltd
stc
add
cmpsl
mov
in
fstps
add
cmp
dec
and
sub
cmpsb
cmpsb
dec
jge
xchg
or
movsb
aas
mov
adcl
xchg
sbb
jnp
xor
lcall
jle
pushf
dec
nop
rorb
and
cmp
pop
mov
mov
dec
movsb
push
movsb
add
in
inc
inc
inc
popa
fildll
sub
jge
notb
jns
mov
test
out
dec
or
jle
aaa
dec
fimuls
add
and
inc
popf
mov
pop
or
into
adcl
ficoml
add
bound
sub
out
test
pop
adc
test
mov
push
fstps
push
inc
xchg
jbe
das
enter
xchg
loop
mov
sbb
or
in
or
loopne
mov
or
in
shll
push
add
mov
pop
rcl
jo
dec
push
pop
mov
jp
xchg
loop
leave
mov
in
pop
test
mov
or
jne
and
clc
fisubrl
cld
mov
lods
jmp
addr16
repnz
inc
inc
push
and
xchg
sub
call
jo
sub
lgs
xchg
or
push
std
stos
call
or
jl
mov
push
lahf
xchg
jnp
insl
pop
and
cltd
popf
in
inc
mov
sahf
pop
sub
pop
mov
leave
clc
push
pop
mov
and
es
jg
dec
cmp
add
and
cmpsb
stc
sbb
lret
jl
das
pop
push
aam
aam
jl
inc
mov
or
jbe
add
orl
add
mov
dec
ljmp
cltd
sub
push
mov
sarb
dec
test
jg
jb
cld
jle
gs
xchg
pop
pop
sub
push
sub
outsb
mul
gs
push
push
sar
lock
out
xchg
mov
fwait
mov
pop
repnz
dec
fistps
lcall
int3
cmc
inc
xchg
lods
sti
jl
mov
mov
popa
xchg
push
mov
inc
jmp
fidivrs
xchg
mov
xlat
cli
jmp
divl
cltd
cltd
dec
mov
cwtl
xor
cmpsb
xor
or
es
aas
dec
icebp
xchg
jge
or
std
mov
sbb
adc
cmp
movl
push
je
and
sub
das
and
out
push
xchg
sub
mov
aaa
lcall
jbe
jmp
xchg
mov
inc
sbb
in
fstl
mov
ja
leave
mov
push
je
cltd
repz
movsl
out
repz
ljmp
jecxz
test
and
jl
mov
pop
ljmp
xchg
ss
scas
jnp
xchg
ror
dec
xchg
ret
mov
xchg
ds
mov
ss
imul
xchg
or
inc
mov
jnp
mov
dec
dec
jae
subl
mov
ja
jl
mov
int3
lods
ja
icebp
add
iret
inc
aam
jp
xchg
ficompl
loopne
cmp
jne
popf
sbb
cmp
shrd
cmp
and
into
stos
or
push
pop
adc
push
pushf
mov
pop
aam
jp
in
ss
cmp
jmp
clc
adc
out
adc
jecxz
testb
repnz
scas
xor
sbb
bound
xor
push
xchg
cmp
cmc
bound
int
dec
cmpsl
pop
dec
scas
cmpsl
test
pop
pop
ds
lret
pop
fmuls
jbe
cli
jne
lret
mov
imul
mov
and
inc
les
mov
jbe
lret
mov
dec
push
push
loop
comiss
or
inc
pop
fstpt
cmp
shlb
cmp
jp
rcrl
leave
pop
test
push
stc
jecxz
sbb
xor
jo
sbb
scas
aaa
adc
ficoml
lret
sbb
xchg
inc
out
pop
ja
out
adc
or
dec
add
lea
sub
jbe
xchg
jl
inc
mov
dec
mov
in
movq
pop
out
stc
cld
mov
xchg
jmp
inc
or
or
les
push
stos
sub
ret
pop
incl
cmp
adc
push
stos
push
icebp
jg
push
jne
lods
adc
test
negb
popf
andl
je
aas
add
cld
push
out
repnz
gs
ss
lods
loop
dec
test
addr16
sub
pop
stos
iret
fsqrt
adc
popf
in
jo
add
sbb
sarl
or
add
sub
add
ja
xchg
insb
cmp
loope
and
push
lods
roll
cmp
inc
dec
cmp
xor
xor
dec
arpl
nop
mov
push
lock
adc
pushf
ss
fcompl
test
inc
xor
adc
out
push
and
daa
mov
idivb
push
cmc
fs
mov
pop
lea
stos
sub
push
adc
repz
fildl
dec
cld
ret
jmp
adc
cld
jo
cmp
call
pop
jge
mov
inc
lret
mov
dec
mov
cmp
push
sub
les
dec
imul
arpl
sbb
add
int
daa
inc
cmpsb
jecxz
fisubrl
cmp
push
mov
repz
mov
sub
adc
and
les
hlt
lods
movsb
sub
bound
dec
mov
push
sub
ret
stos
scas
inc
mov
in
jnp
mov
bound
jbe
rcrl
mov
or
push
neg
enter
notl
push
cmp
sub
xor
icebp
fidivrl
aam
jge
lahf
ss
divl
adc
mov
test
mov
loopne
imul
sub
repnz
jne
gs
sub
pusha
inc
sub
sahf
pop
lahf
lea
jmp
aaa
adc
sti
mov
adc
add
paddd
dec
cltd
mov
rcrl
add
dec
mov
cmp
pusha
pop
adc
add
daa
mov
das
jle
loop
push
jl
xchg
and
nop
in
or
cmpsl
inc
adc
inc
inc
xchg
out
jne
aas
pop
ss
inc
push
pop
inc
jle
xor
add
jge
xchg
xlat
lahf
adc
or
or
cwtl
push
xor
sbb
jns
or
sub
mov
cwtl
es
out
jl
jp
jecxz
and
dec
stos
fisubl
scas
aaa
mov
icebp
jbe
inc
aam
mov
cmp
inc
std
sub
add
popa
mov
outsl
mov
sub
pop
ffree
clc
ss
jb
mov
sbb
fisttpl
mov
xor
sub
repnz
mov
xorl
jl
dec
jl
add
scas
inc
sbb
fcmovnu
sbb
mov
rcrb
sbb
or
jg
addr16
sub
pusha
out
sahf
push
arpl
enter
adc
icebp
xor
mov
pop
or
cmp
out
pop
shlb
sbb
mov
ds
outsl
je
mov
jmp
ret
pop
pushf
addb
push
xchg
fstl
pop
hlt
xchg
out
mov
sbb
cli
idivb
xor
lcall
mov
add
dec
or
push
arpl
aas
lods
leave
xchg
stc
sbb
mov
movl
cwtl
pop
jecxz
je
mov
inc
cwtl
outsb
mov
sub
xchg
scas
mulb
mov
jl
dec
pop
repz
mov
gs
jle
xchg
or
mov
adc
mov
inc
adc
sub
imul
and
fs
mov
test
mov
mov
sbb
insl
aaa
gs
push
jge
pop
js
sub
icebp
mov
in
inc
outsl
mov
push
xor
mov
call
push
fildll
push
xor
out
mov
push
inc
das
push
sbb
push
in
jecxz
xchg
cmpsb
mov
mov
orl
aas
push
xchg
test
outsb
sbb
mov
cmc
addl
shl
jbe
lret
rolb
ljmp
jecxz
mov
loope
notb
arpl
add
mov
test
fsts
ja
jo
out
mov
cwtl
mov
inc
add
leave
insl
xorb
imul
mov
repnz
pop
xor
and
mov
cmp
jp
add
mov
or
mov
cld
and
shll
ljmp
pop
pusha
data16
leave
pop
push
jg
mov
sub
mov
sarl
and
dec
in
in
dec
or
jo
pop
adc
inc
mov
lods
movsb
inc
mov
out
arpl
dec
lds
out
or
mov
leave
mov
mov
test
fldcw
sbb
int3
lret
out
hlt
lahf
into
pop
test
orl
loop
xor
scas
test
mov
pop
mov
xchg
sub
ret
out
test
inc
jg
int3
shrb
mov
mov
mov
dec
out
pop
mov
adc
loopne
mov
aad
xchg
push
pop
xor
leave
out
stos
rcrb
mov
push
notl
xchg
xchg
loope
or
pop
xchg
mov
push
shl
push
or
out
inc
test
add
add
pop
or
fst
pop
cmpsb
aam
fucomip
outsl
xor
sub
cmp
movsl
adc
fcomps
mov
popl
xorl
inc
dec
popa
add
sti
xor
fdivl
xor
or
cmc
lret
lea
inc
mov
ret
shlb
es
xor
jp
and
test
js
test
sbb
add
dec
inc
jae
mov
push
inc
insl
sar
inc
dec
dec
push
mov
into
shlb
dec
cmp
pop
lret
in
jmp
imul
fistpl
subl
fwait
push
popa
sbb
loop
call
mov
or
mov
xlat
enter
push
fs
insl
aad
pop
icebp
sar
hlt
mov
sbb
inc
jb
jl
push
cmp
cli
sbb
sbb
lahf
mov
sahf
mov
sbb
xchg
push
out
jae
pop
xlat
loopne
jb
loopne
pop
cmp
scas
cmc
lret
int
pop
in
in
lock
stos
or
cmpsl
adc
aaa
into
lock
test
jmp
int3
outsb
or
pop
jle
icebp
imul
movsb
lret
shr
outsl
dec
cmp
inc
cmc
adcl
into
repz
adc
jg
fwait
mov
sti
xor
xor
mov
jecxz
mov
jp
sbb
or
in
jle
mov
sbb
fmull
sbb
cld
push
fdivs
ds
pop
cmp
cmpsb
aaa
outsb
or
mov
daa
in
cs
imul
mov
adc
push
mov
rcll
mov
jbe
mov
ja
movsb
fcmovbe
aaa
xor
mov
xchg
pop
jb
aad
inc
xor
adc
jne
xchg
sbb
ss
nop
jle
add
mov
rcll
in
pop
lds
int3
mov
pushl
es
jae
add
add
out
and
xchg
aam
jae
dec
aaa
lea
mov
and
xchg
ret
lds
lret
xchg
or
sub
xor
fdivs
mov
pop
outsb
xor
mov
push
dec
punpckldq
xchg
xchg
dec
or
inc
aad
cmpsl
cltd
or
adc
or
push
in
xlat
push
mov
dec
push
mov
jns
fucomp
xor
mov
hlt
int3
imull
lds
mov
out
jg
jle
sub
jecxz
add
movsb
jg
jno
lret
ljmp
lahf
mov
push
and
sub
lea
push
scas
xchg
cmc
and
lea
out
subb
push
pop
scas
cmp
rorl
divl
leave
scas
mov
jno
pop
movsl
inc
rol
xlat
xchg
and
scas
and
sarb
mulb
xchg
popa
popa
lahf
mov
fsts
sbb
js
shlb
andb
repz
sbb
gs
cmp
xchg
ja
call
sbb
pop
ds
cmc
scas
aad
divb
pop
and
xchg
mov
test
dec
lock
xchg
in
adc
insl
cmp
outsb
lods
imul
pop
dec
cmpsl
scas
inc
and
call
sub
je
jmp
stc
mov
lea
pop
push
xor
add
rcrl
fmuls
or
cmp
imul
or
pop
push
add
push
jae
inc
jae
movsl
cmp
and
outsl
or
stc
xchg
and
jmp
sbb
insl
lods
mov
test
leave
push
mov
fildl
outsb
nop
adc
lahf
leave
dec
or
mov
push
scas
pop
sarb
popa
push
fsub
out
mov
iret
es
cmpsl
xor
pop
mov
xchg
pusha
cmpsb
mov
xor
mov
call
adc
push
ds
xchg
jbe
les
lods
and
fidivl
ss
out
lods
push
mov
ja
jae
add
pop
sub
mov
orl
xor
xchg
pop
std
xchg
push
mov
xlat
mov
out
cltd
mov
aas
adc
dec
jb
sbb
fildl
xor
cmp
imul
rolb
pop
andl
lds
icebp
cmpsl
insl
jecxz
sub
fptan
inc
shll
cmp
insl
aaa
adc
shrb
xchg
mov
loop
aam
scas
dec
jle
ss
inc
loopne
sahf
adc
pushf
in
cmpb
scas
xchg
sub
jp
pop
xchg
shlb
push
mov
jp
mov
loopne
dec
cwtl
lret
aam
dec
roll
add
adc
inc
mov
inc
mov
inc
sub
mov
sti
adc
push
andl
sub
sub
fisttpll
jle
shll
cmp
je
jle
adc
dec
ss
fstl
push
les
sub
fsubrs
into
sbb
jmp
pop
fwait
jne
sbbl
cli
jbe
inc
sub
roll
sahf
cli
into
in
push
insb
scas
dec
mov
fs
xor
mov
cmp
outsl
pop
mov
cmp
fwait
shll
xorl
enter
adc
popa
mov
gs
push
cmp
pop
rorl
adc
sbb
mov
shrb
loope
in
pop
pop
ds
pop
addb
and
mov
xor
hlt
fadds
ljmp
bnd
cmp
out
jle
jnp
inc
mov
jg
push
and
adc
cmp
bound
adc
dec
xlat
dec
mov
repz
pop
outsb
inc
cs
cltd
pop
dec
and
je
mov
es
aas
iret
fmull
lcall
xor
loope
mov
mov
xchg
insl
xchg
repnz
in
divl
adc
cmp
xor
push
or
xor
mull
shr
push
mov
or
xchg
out
cmp
arpl
or
xchg
pop
popf
mov
adc
mov
dec
xor
js
adc
xchg
aaa
mov
cmc
or
in
cmc
sahf
ljmp
stos
sbb
push
mov
outsb
sub
aam
jne
mov
cmp
pop
in
sub
ljmp
lea
mov
xchg
shrd
test
stc
mov
iret
ficoml
enter
lea
pop
mov
sbb
movsb
nop
dec
jp
xchg
push
pop
cmc
jo
sbb
add
arpl
xchg
pop
inc
pop
ja
inc
pop
pusha
in
xor
cmp
cwtl
cwtl
test
xchg
adc
pop
cmp
je
cmp
adc
xchg
test
mov
test
popf
pushf
pminub
icebp
outsb
jb
xchg
adc
loop
out
enter
addr16
insb
pushf
inc
xlat
loop
push
or
aam
in
or
adcl
or
xchg
push
lret
mov
ss
pushf
dec
sbb
push
jno
insl
xor
mov
sahf
cmp
adc
push
jle
in
inc
xor
dec
jl
add
sub
xlat
mov
sbb
sub
aam
mov
outsb
and
cmpsb
cwtl
loopne
inc
sub
jge
sbb
jg
jbe
xchg
lcall
leave
popf
shrl
jp
test
not
dec
mov
cmpl
cmpsl
sub
sarb
clc
adc
addr16
loopne
xor
adcl
pop
iret
xchg
jg
int3
mov
push
psubusb
jb
int3
or
jle
xor
movsl
shll
push
cmpsb
aam
pop
or
nop
ds
and
inc
cmc
fisttpl
jae
outsl
sub
stc
adc
out
sti
mov
dec
cmp
jl
outsl
jo
mov
dec
or
jo
inc
push
dec
mov
test
mov
nop
push
cltd
sub
push
adcl
push
jbe
mov
ljmp
and
adc
inc
divb
inc
in
xor
mov
bound
adc
push
out
pcmpeqw
mov
sti
inc
js
aas
fs
xor
lret
jnp
sbb
gs
xchg
rcll
sbb
mov
inc
dec
movsb
mov
jnp
mov
fstps
sarl
jnp
and
out
sub
into
dec
push
scas
lret
jnp
push
inc
mov
cs
or
inc
dec
ljmp
or
sub
xor
or
loopne
and
jmp
mov
loope
sti
sbb
iret
out
test
pop
or
jge
fdivl
push
js
push
xchg
jb
call
xor
xchg
outsb
sbb
jno
xchg
push
bound
outsl
inc
dec
in
into
negl
pushf
xlat
sub
scas
std
loop
lret
lret
cmpsb
ss
xlat
jns
dec
insb
out
lods
adc
inc
lods
cmp
in
lods
push
nop
xlat
inc
mov
popf
pop
out
sahf
cmp
pushf
xor
xchg
lods
outsl
mov
dec
movsb
cmp
jnp
inc
mov
mov
test
loope
test
mov
aad
xchg
out
sbb
in
pop
shl
pop
jl
push
cmp
stc
cli
push
pop
clc
xchg
adc
jno
nop
fst
outsl
adc
inc
xor
lock
repnz
lods
jecxz
inc
lcall
test
push
xor
decl
xchg
and
lods
push
and
push
add
cwtl
fildll
sbbl
jbe
dec
mov
shl
hlt
fildl
push
xor
insl
push
aam
cli
mov
mov
pop
xchg
or
adc
mov
std
cmp
lcall
inc
mov
xchg
js
lock
stos
push
xor
mov
dec
sub
jmp
xchg
scas
and
jno
in
sub
jnp
shr
ljmp
or
fs
test
test
pop
or
das
dec
test
std
push
jnp
xchg
cmp
mov
sub
cmp
push
mov
popf
cmp
or
pop
subb
xorl
data16
push
and
cmp
es
pop
inc
lar
call
jge
scas
mov
std
mov
popf
sbb
ss
shlb
and
test
xor
cmp
test
cmp
aas
ret
aam
fs
lods
pusha
sub
aam
lahf
divl
lret
mov
xchg
addl
inc
sarb
pop
xor
testl
jae
sbb
mov
call
sbb
cli
xor
aaa
movsb
movsl
and
sbb
dec
sub
jno
xchg
loope
jns
hlt
pop
push
fsubs
xor
jnp
jmp
push
out
push
xor
fistl
or
dec
add
jmp
mov
fimull
in
iret
loope
notb
jns
dec
add
sub
in
dec
sub
mov
dec
aad
fucom
loop
pop
in
nop
repnz
bound
ud0
push
add
out
fimull
imul
and
mov
into
bound
mov
ljmp
in
mov
pop
sub
loopne
push
loopne
sub
and
sub
out
loope
sub
mov
mov
cmc
mov
daa
sbb
adc
leave
mov
rcrb
jbe
push
and
pop
ficoms
push
lahf
aaa
xchg
cmp
es
subl
xchg
je
lcall
sbb
aam
jge,pn
jge
lret
add
sub
pop
adc
push
adc
neg
cmp
lahf
fidivrs
pusha
adc
jb
push
jo
xor
ret
lcall
xor
cmp
mov
pop
std
test
popf
add
xor
dec
fmull
imul
pop
mov
rclb
insb
pop
push
insb
sbb
jle
into
clc
loopne
pop
push
mov
mov
ss
iret
std
shll
push
rol
cmpsl
gs
rcrb
mov
xchg
movsb
ja
push
lcall
add
or
ds
or
shrb
fimull
xchg
pushf
repz
imul
sbb
popfw
ficomps
cmpsb
loop
jmp
mov
mov
rolb
pop
jmp
iret
mov
sbb
cmp
xchg
fnstcw
ja
mov
pop
adc
mov
jo
mov
fdivrl
insl
loopne
push
lds
or
dec
btr
pop
mov
push
mov
inc
test
jo
or
mov
icebp
lods
xor
mov
stos
imul
icebp
test
call
aam
jnp
push
aas
push
pop
xchg
clc
mov
push
js
xchg
xor
in
std
sub
std
xchg
in
and
daa
sub
adc
dec
jo
loope
mov
ds
lea
aaa
push
and
cli
rorl
movsbl
in
cmc
movsb
repz
insb
je
mov
jne
ficoml
push
jae
sub
ret
dec
jae
mov
mov
repnz
testl
iret
movsb
out
jb
mov
lods
mov
aad
movsl
out
cltd
cld
shrb
dec
cmpsb
lret
push
xor
cmp
stc
scas
push
inc
pop
shll
dec
mov
inc
xlat
dec
test
bndstx
imul
fisubrs
cli
and
cltd
movsl
or
rclb
cltd
daa
imul
xor
call
hlt
push
loope
std
push
loopne
dec
stos
data16
push
adc
icebp
insl
xchg
sub
pop
out
mov
add
dec
stos
sbb
loopne
or
xor
rcll
stos
ds
push
psubsb
pop
in
int3
das
out
cmp
cs
fnsave
mov
loopne
pop
rolb
jge
adc
push
nop
mov
sti
xchg
xchg
enter
hlt
jnp
outsb
lea
push
in
dec
je
xchg
mov
in
push
cmc
inc
or
je
mov
in
inc
adc
and
push
sub
xchg
test
or
mov
pop
push
pmulhuw
sbb
push
imul
cmpsl
loope
mov
mov
js
or
xchg
jne
sbb
in
sbb
mov
iret
mov
jmp
xor
inc
push
lret
sarb
and
nop
push
mov
mov
xchg
les
add
es
leave
xchg
sti
je
jge
cli
adc
fdivrl
adc
pop
call
addr16
outsb
fwait
sub
dec
jnp
sbb
test
push
fwait
push
add
add
and
rolb
cltd
js
jp
popf
push
jns
sub
scas
roll
imul
jp
ret
insl
mov
jnp
jns
repnz
dec
mov
lods
xadd
aad
cmp
xchg
add
daa
ja
mov
dec
pop
rcl
cs
mov
cs
sahf
js
cltd
push
inc
sbb
ds
rep
fidivl
inc
in
stc
dec
into
jns
or
shll
divb
lcall
decl
nop
and
ret
mov
std
loope
aam
mov
or
insl
pop
in
inc
mov
lods
push
push
or
inc
ds
daa
out
movsl
in
push
in
hlt
sbb
mov
data16
insl
or
dec
and
mov
lcall
insb
test
lea
fwait
movsl
or
jmp
adc
jns
jo
jbe
shlb
orb
int
mov
ret
ss
mov
mov
data16
andl
mov
add
sub
sub
mov
fwait
nopl
xchg
mov
pop
fcmovbe
test
in
dec
in
aas
dec
and
mov
imul
addl
sbb
in
mov
pop
cmp
popa
adc
jnp
mov
xchg
lret
cmc
sub
shlb
popa
lret
inc
push
mov
popf
sbbl
std
mov
rcrb
xchg
out
sti
xorb
lret
mov
sub
jae
push
push
adc
out
mov
fistl
sbb
repz
jmp
std
cld
fisubrs
in
cmp
mov
xor
outsb
xchg
stos
pop
mov
pop
xchg
push
cld
pop
loope
mov
lret
mov
enter
dec
mov
cmc
cmpsb
aas
fmuls
out
rorb
movsl
scas
pushf
push
sub
and
sahf
jae
lock
scas
mov
cmpsb
push
adc
adc
add
icebp
dec
jmp
fcoms
mov
psraw
loopne
adc
popf
jp
aas
std
popf
pop
addr16
adc
loopne,pt
js
leave
fwait
xor
and
sarl
mov
shr
decb
jae
mov
mov
clc
daa
into
pop
pop
add
imul
stc
lahf
leave
aad
ret
fnstcw
jmp
push
xchg
cmp
addr16
fcomps
sbb
div
jl
pop
xlat
les
cmp
push
xchg
dec
lahf
cltd
and
scas
mov
stos
dec
mov
mov
aas
pop
outsb
loope
out
sbb
mov
aad
mov
push
and
add
pop
and
cmpsl
inc
and
dec
mov
pop
pop
inc
fwait
mov
push
cmc
cmp
lea
add
mov
pop
push
adc
shlb
and
cwtl
leave
sbb
stc
mov
mov
ret
les
ret
popf
incl
rcr
dec
inc
pop
mov
scas
adc
pop
add
in
push
stos
jecxz
movsb
aaa
cmc
shlb
jnp
dec
in
arpl
xchg
cmp
daa
aas
lahf
xor
out
and
insl
jmp
mov
mov
mov
push
jo
and
inc
fisubs
adc
add
icebp
fs
sub
int
aaa
cmp
and
and
mov
sbb
imul
push
fimuls
mov
xchg
pop
mov
loope
aaa
cltd
sahf
jle
mov
roll
out
and
jecxz
rcrb
pop
inc
mov
cmp
fwait
stos
add
cmp
lods
sub
lods
cmpb
mov
mov
add
mov
mov
leave
or
cmp
add
pusha
leave
cmp
xchg
pop
dec
les
sbb
jecxz
xchg
add
and
arpl
mov
cmp
pcmpgtw
or
cmp
leave
sbb
push
pop
js
mov
imul
dec
test
repnz
adc
jns
dec
arpl
mov
addr16
fstps
push
dec
test
and
arpl
lret
scas
addr16
iret
mov
lahf
subl
mov
mov
out
and
shrb
popa
xor
and
add
insb
fs
sbb
imul
add
mov
mov
aad
stos
test
out
js
arpl
pop
xor
loopne
sub
icebp
pop
iret
dec
dec
inc
ljmp
cmp
pop
fcoms
inc
mov
cli
xchg
xchg
test
lret
mov
lods
jle
pop
stc
adc
outsb
mov
xchg
mov
push
out
mov
adc
or
jb
add
push
arpl
cmp
rorl
push
cld
popa
dec
fwait
in
fsubrl
rorl
mov
lds
es
xor
jecxz
pop
shrl
xchg
jnp
shlb
roll
insl
je
cmp
dec
pop
mov
push
pop
incl
or
mov
cli
andl
in
mov
sbbl
mov
xor
stos
dec
add
jb
lods
add
jnp
jns
cltd
loop
push
cmp
cmc
repnz
dec
test
mov
outsl
lahf
mov
fmul
sbb
or
adc
mov
pusha
fdivr
into
and
jae
mov
cmpl
jno
mov
mov
lock
xchg
xchg
sbb
call
or
and
add
adcl
adc
mov
push
movsl
cwtl
popa
cmp
repnz
out
inc
lock
inc
test
xor
or
push
shrb
xchg
mov
mov
sub
mov
cmp
add
push
sub
push
dec
dec
xor
lahf
jmp
pop
sub
lcall
push
test
lret
dec
test
lods
xchg
push
jmp
push
fisubl
or
adc
int3
scas
mov
jl
fisubl
ss
int
dec
fstps
imul
push
mov
xchg
xchg
jb
sub
push
movsb
add
adc
sbb
sbb
mov
outsl
mov
inc
sub
mov
xor
enter
testl
pop
ds
lahf
push
call
lods
rol
or
int3
push
inc
jl
pop
mov
fs
in
shrl
out
mov
fisubs
cmp
cmp
sbb
into
jns
mov
aaa
mov
in
das
int3
xchg
mov
rcll
mov
add
dec
in
add
pop
xchg
aas
sbb
daa
or
icebp
jo
aad
enter
stos
imul
lahf
ret
and
inc
repnz
shlb
das
mov
cmp
fnsave
push
adc
gs
popf
out
cmc
ljmp
lods
mov
mov
mov
lahf
sub
sbb
lahf
insl
xchg
and
xor
mov
stos
sub
outsb
sbb
and
mov
or
cmp
and
adc
lret
push
mov
pushf
bnd
cmpsb
call
lods
aam
fistps
jns
loope
or
mov
test
pop
pop
jmp
mov
mov
push
xor
xchg
lods
and
xor
jmp
xor
push
cli
retw
popf
outsl
xor
jg
cltd
mov
jp
add
mov
adc
push
pop
cmp
insl
and
xchg
add
pop
je
or
push
pushw
sbb
sahf
fwait
sub
fs
and
mov
cmp
arpl
sbb
and
pushf
or
jb
cmp
out
push
push
push
nop
jns
sub
jg
xor
divb
cld
xchg
gs
fidivrs
popf
xchg
sbb
ror
gs
push
push
lret
dec
mov
sti
fsts
push
stc
lods
bound
adc
cmp
push
aaa
dec
out
pop
or
adc
push
enter
repz
push
fldcw
int
clc
add
pop
pop
cltd
sub
inc
stc
dec
sub
es
addr16
test
addr16
je
mov
aaa
aam
and
xor
cmpl
stc
mov
jge
fmulp
push
mulb
lret
jo
int
jns
xor
ja
test
jnp
sbb
and
and
or
pop
lret
mov
xchg
lcall
inc
sarl
out
or
inc
pop
int
cld
sbbl
sub
mov
push
fstl
dec
popf
dec
arpl
mov
in
jmp
and
inc
mov
enter
lea
cmpsb
push
cmp
lods
push
pop
push
jl
setno
loope
xchg
inc
push
loopne
mov
int
inc
jae
sub
rcll
arpl
lret
sbb
mov
stos
ret
adc
cli
pop
jne
xor
call
daa
gs
aas
push
jno
add
clc
aas
sbb
jne
mov
test
add
sub
clc
push
fwait
xor
daa
jno
pop
jp
cmp
cwtl
lahf
mov
in
or
jns
xor
scas
xor
cld
icebp
pop
lret
pop
shlb
in
cmp
adc
or
fisttps
addr16
loop
lods
aam
orl
outsl
test
fidivl
cwtl
addr16
cmp
xor
imul
mov
and
sbb
ret
jg
lock
outsl
cmp
leave
cmp
mov
movsb
and
jle
lea
lcall
into
decb
sbb
pop
in
cltd
insl
dec
sbb
int
jl
add
test
mov
pushf
cwtl
mov
mov
add
cmp
jae
stc
mov
mov
shll
xor
adc
adc
xchg
cmp
loop
dec
aaa
dec
mov
pop
movsl
pop
jl
pop
jecxz
dec
jne
loopne
cmc
pop
es
lea
mov
lods
std
jp
je
or
inc
push
imul
or
xor
decl
outsb
or
dec
ret
pop
push
mov
dec
dec
movsb
out
rcrb
lgs
inc
sahf
pop
inc
cmp
fwait
jo
push
xchg
fimull
cwtl
in
lds
notl
sub
mov
cli
ret
int3
insb
arpl
shlb
mov
mov
xchg
cmp
push
dec
sti
idiv
xchg
adc
mov
sbb
dec
fnstcw
pop
jb
adc
xchg
adc
inc
adc
imull
dec
mov
add
cltd
cld
loope
pop
jle
fs
dec
pop
rorl
cmp
xor
es
mov
dec
lods
jbe
inc
loope
ljmp
fistps
jge
or
es
cmp
push
mov
or
inc
fiadds
fisttpl
or
ret
adcl
js
roll
test
xlat
arpl
hlt
and
mov
shrb
xchg
jo
mov
pop
rcr
mov
pop
incb
mov
sub
in
xor
pop
pushf
out
test
pop
iret
enter
sub
in
das
in
cmp
orb
add
pop
pushf
cmp
fldl
das
push
movsl
jo
push
sbb
lods
lea
add
jbe
lcall
and
jmp
jne
shrb
aam
gs
int
dec
idivb
dec
push
cmpsb
and
outsl
push
or
jno
jle
jle
push
xchg
imul
lret
sub
idivb
repz
movsb
daa
add
hlt
call
mov
mov
inc
aaa
jl
inc
scas
xchg
mov
lea
dec
or
test
sub
xor
arpl
mov
mov
push
sub
das
mov
adc
sub
mov
out
clc
add
sbb
cmp
xor
lods
jno
fildl
pop
das
outsb
sub
int3
cmp
xchg
lcall
loop
frstor
stos
call
mov
pop
or
inc
aaa
sbb
js
insb
sbb
outsb
mov
or
test
lret
pop
loope
scas
xchg
loop
aam
repz
mov
and
clc
jo
out
addr16
adc
in
adc
add
decl
xor
je
lea
adc
shrb
xchg
or
aaa
popl
flds
mov
push
mov
jns
addl
icebp
repz
xchg
jecxz
fdivl
js
jg
and
leave
or
mov
jecxz
es
lret
fwait
jne,pn
push
mov
push
mov
mov
xchg
out
or
xchg
repnz
jmp
and
push
mov
xchg
inc
or
and
aaa
dec
mov
xchg
pop
cwtl
add
jno
xlat
cmpsb
divw
jmp
dec
adc
push
xchg
daa
cmp
dec
mov
insl
adc
into
cmp
in
ds
jp
and
ficomps
lds
clc
mov
or
insb
inc
out
int3
and
in
sbb
pop
pushf
inc
dec
xor
cmp
enter
cli
cmp
push
cmpl
push
pop
iret
pop
sbb
jg
pop
shlb
data16
subb
pushf
int3
out
inc
in
cmc
test
loopne
movsl
pushf
xor
push
cmp
inc
arpl
push
inc
lock
test
xor
mov
aad
push
in
pop
add
leave
loopne
add
addl
or
repnz
add
std
mull
je
enter
xchg
xchg
push
addl
or
and
les
dec
das
and
jae
lds
arpl
and
sbb
adc
clc
add
and
repnz
pop
outsl
pop
jge
mov
inc
and
or
cmp
mov
inc
scas
xlat
push
ss
or
jbe
xchg
sarb
jo
insl
push
sub
add
sbb
cmp
xchg
roll
test
sarl
icebp
mov
mov
mov
jb
xor
fisubrl
test
aam
out
push
in
imul
pop
adc
cmp
adc
sbb
cwtl
xor
dec
add
ret
imul
jge
rcrl
cwtl
jbe
mov
enter
xchg
je
push
mov
cld
and
mov
daa
stc
nop
sbb
push
enter
or
into
push
or
jae
loop
out
loopne
pushf
std
iret
sub
loope
ret
or
enter
cmp
fdivrl
and
idivb
lock
xchg
xor
rcrl
add
and
dec
mov
fisubrl
dec
and
jecxz
or
dec
cld
fadds
push
sbb
fsts
and
pusha
outsl
in
mov
fiadds
idiv
and
orb
sbb
dec
sbb
and
mov
add
jno
ret
sbb
sbb
xchg
fstps
scas
ss
sub
xchg
jo
nop
adc
jecxz
xlat
inc
push
push
add
push
ljmp
cmp
xor
cli
jb
dec
sbb
scas
sub
rcrb
mov
adc
mov
cmc
mov
push
pop
add
sbb
out
sbb
ja
loopne
sarl
divl
fcompl
mov
call
mov
mov
xlat
call
out
add
sarl
pushf
in
mov
sahf
divb
or
movsl
aad
popa
xor
dec
jecxz
pop
mov
iret
push
movsl
dec
mov
mov
push
mov
arpl
xchg
das
jbe
cmpsb
lret
stc
out
insb
dec
dec
xor
inc
fdiv
shl
add
hlt
mov
fdivrl
imul
daa
add
pusha
dec
insl
sbb
iret
aad
in
sbb
mov
and
pop
mov
fisttps
outsw
mov
or
and
pop
sub
ja
push
cmp
lock
sub
inc
mov
inc
mov
pop
sbb
push
add
daa
rorb
sub
sbb
call
int3
mov
rcrb
imul
add
pushf
push
pop
cmp
andl
sbb
arpl
dec
popf
sahf
das
fldl
add
jb
jae
pop
iret
pop
xor
rcl
dec
lods
int
in
cmp
into
jmp
sub
mov
push
push
xchg
cli
push
mov
mov
xchg
sbb
adc
and
inc
fimuls
xchg
xor
adc
shl
sbb
mov
sbb
sbb
pop
int
dec
mov
mov
xchg
sub
jge
jb
inc
or
int
sbb
outsb
jb
call
sub
out
int
xchg
ficompl
mov
int
mov
dec
test
jnp
jns
ret
sub
es
and
cli
xchg
in
xchg
fsubrl
pop
push
icebp
popa
lods
clc
jmp
adc
mov
andl
push
repz
push
lcall
jle,pn
mov
add
pushl
adc
scas
or
movsl
mov
jle
mov
mov
int3
xchg
out
adc
push
mov
xor
and
xchg
sub
push
inc
scas
dec
fnstcw
or
xchg
mov
mov
cmp
push
sti
xlat
aad
test
cmc
push
cmp
jl
or
xor
add
pop
clc
cmc
push
fstl
sbb
mov
ret
sar
xor
cmp
add
les
cmc
pop
mov
xor
outsb
aad
clc
stc
dec
cwtl
jecxz
push
push
rcrb
cld
cltd
xor
das
push
mov
in
push
lcall
sbb
sti
push
das
notl
loopne
mov
lods
push
push
adc
xor
repz
mov
dec
loope
mov
lea
lret
mov
mov
push
xor
mov
xchg
filds
ljmp
add
xor
cmp
mov
jb
pop
dec
mov
push
inc
mov
hlt
mov
int3
or
int
enter
gs
and
stos
loop
inc
mov
push
int3
xor
inc
push
push
push
in
jnp
hlt
sub
push
notl
jg
xchg
mov
fwait
push
leave
in
les
scas
shrl
jbe
arpl
in
nopl
jns
andl
cmp
fcoms
dec
mov
mov
inc
dec
ret
lahf
mov
cli
movl
leave
xchg
shl
push
ffreep
and
ret
cmp
mov
dec
or
sbb
test
sbb
js
mov
stos
xor
adc
das
mov
mov
daa
fists
std
lds
test
fidivs
scas
jl
or
dec
aam
jge
sbbl
outsb
stos
adc
insb
je
in
add
jnp
inc
jmp
pop
jae
sbb
cmp
dec
jo
jno
rcrl
cs
js
or
rcl
jnp
repz
out
xor
mov
mov
movsb
or
mov
cwtl
pop
jmp
cwtl
dec
push
sub
mov
fsubs
cmp
cmp
in
inc
jb
xchg
and
gs
xor
sysenter
jmp
jae
ret
xor
jns
lret
mov
adc
imul
sbb
xorl
rorl
js
sub
ljmp
out
ss
aam
mov
xchg
out
lods
add
or
out
mov
movsb
scas
iret
pop
add
sub
ljmp
inc
shl
and
pop
roll
push
mov
mov
mov
push
or
jbe
lea
or
fldt
outsl
sbb
mov
jbe
arpl
or
or
ljmp
test
xor
and
jp
dec
mov
adc
mov
test
sahf
dec
mov
inc
cmc
ja
push
fcoms
jp
pop
xchg
mov
pop
push
addb
lods
dec
adc
faddp
or
mov
mov
cmp
mov
dec
cmp
nop
ljmp
push
mov
jb
pop
lcall
push
mov
mov
scas
incb
popl
dec
xchg
shlb
sub
pop
stos
sti
nop
mov
push
pop
and
push
dec
fimull
test
leave
int
sbb
push
adc
or
dec
sti
mov
cmpsl
sbb
fiaddl
add
push
push
jno
das
and
loope
xor
pop
xor
push
lds
jns
or
lock
inc
mov
cmp
sub
mov
push
jnp
xor
sub
push
test
fildl
sbb
jmp
jae
mov
jae
push
xchg
testl
loope
cmp
das
pop
leave
add
sbb
jae
ljmp
stos
fs
out
adc
cmp
fidivrs
pop
adc
es
lods
lock
dec
scas
js
sub
jge
mov
sub
pop
lods
mov
out
add
cvtdq2ps
cmp
add
pop
adc
mov
dec
or
mov
mov
pop
int
or
aaa
pop
mov
add
adc
into
frstor
data16
inc
lods
mov
lret
ficoml
inc
add
jg
fbstp
insb
pop
aas
mov
push
int3
cmpsl
xchg
lds
inc
test
ror
int3
mov
int3
popa
ds
repz
mov
icebp
test
pop
dec
inc
pmaddwd
xor
call
je
push
sti
std
cmp
inc
or
in
push
scas
test
je
testb
sbb
outsb
test
mov
jmp
sti
pop
sti
insb
nop
push
pop
jmp
xchg
xchg
mov
stos
cmp
ret
ret
call
stc
xchg
cli
stc
jnp
xor
inc
sbb
adc
movsb
or
in
fsubl
cmp
cltd
repz
ret
les
push
cmp
mov
mov
out
inc
lods
mov
std
push
mov
je
test
jmp
aaa
out
pop
test
mov
aad
sti
aad
pop
insl
mov
ds
xchg
cmpsb
sub
cs
mov
out
cli
adc
xlat
add
and
lock
cld
sti
push
clc
hlt
sbb
dec
sub
adc
shlb
push
mov
jb
in
dec
das
or
scas
mov
daa
cmp
pop
imul
mov
cwtl
push
mov
mov
fcoms
cmp
cmp
xor
pop
xlat
push
push
or
push
xchg
xor
imul
daa
test
aam
in
cmc
push
jmp
rcll
es
and
fsubr
sbb
decl
lock
pop
sub
mov
es
mov
and
mov
cmp
insl
out
or
dec
cmp
dec
dec
in
inc
adc
loope
mov
rorb
pop
or
rcrb
xlat
cs
xor
mov
xor
add
lods
jne
xchg
rol
sbb
xor
gs
ret
jo
mov
test
inc
or
add
scas
pop
orl
js
push
mov
sbb
mov
packsswb
dec
rcrl
push
dec
and
and
in
jecxz
adc
adc
inc
dec
push
test
cmp
xchg
inc
sbbb
call
les
sbb
cmp
aad
fcoms
adc
repz
jns
sahf
scas
mov
imul
roll
jmp
dec
xor
jp
mov
jae
sarl
or
inc
lods
sbb
pop
cmpsb
jae
dec
push
es
xor
adc
mov
mov
pop
int3
add
pop
test
enter
xor
cld
lcall
stos
movsl
sbb
xor
pop
addb
mov
mov
mov
jne
push
pusha
shl
pop
mov
mov
je
insb
push
scas
mov
xor
movsb
push
mov
sti
ret
into
enter
dec
fwait
jnp
sub
lods
nop
dec
pop
sbb
mov
push
and
sti
xchg
ret
nop
out
jp
sub
sub
push
sbb
in
out
cmp
xlat
sbb
mov
sub
push
int3
sub
add
dec
repz
lods
cli
push
xor
adc
imul
xor
fisubrs
mov
cmc
adc
fnstenv
popa
adc
dec
ja
icebp
rol
adc
mov
stc
dec
mov
nop
leave
repnz
push
dec
xor
les
ret
push
xor
cmp
adc
add
call
cmpsl
and
sbb
adc
jne
sbb
xchg
es
lds
adc
or
sbb
js
mov
andb
push
or
out
test
sbb
into
mov
dec
fwait
scas
pop
fildll
pop
add
ret
or
shrl
jge
inc
cmpsl
jle
add
dec
or
out
inc
xor
add
mov
mov
and
push
test
mov
jnp
sub
sbb
data16
sahf
sbb
jge
int3
push
push
movsb
ss
jns
insb
sub
jge
pop
lds
repnz
xor
das
out
and
pop
mov
add
jl
sbb
sti
push
dec
data16
int
push
adc
mov
nop
outsl
and
pop
xor
outsl
cmp
jno
out
ds
ds
std
ret
fidivl
mov
mov
adc
andl
lods
incb
or
ljmp
popf
or
pop
repz
popa
jle
xor
gs
sbb
inc
mov
inc
clc
fldenv
fmull
lock
pop
sub
sahf
notb
cmpsb
andl
shll
or
push
jg
shl
fisubs
or
sbb
jge
rcll
mov
je
push
fcmovb
hlt
cs
jnp
stos
inc
xchg
jle
insl
sti
fidivrs
daa
je
mov
dec
mov
adc
inc
scas
mov
sub
dec
push
aad
jno
stos
inc
sahf
inc
loope
ljmp
sub
xor
shrb
inc
jg
shlb
sarb
mov
add
adc
xchg
mov
add
je
mov
add
sti
cs
mov
pop
sub
mov
scas
xlat
pop
shlb
mov
jae
popa
xor
push
adc
shl
adc
movb
jmp
icebp
and
dec
cmp
pop
test
daa
mov
mov
scas
cmpl
dec
stos
in
inc
cmpb
xchg
add
sbb
sarb
xchg
cmp
jno
pop
int
pop
outsl
mov
addr16
dec
add
lock
decb
inc
add
jae
lods
call
sbb
iret
xchg
jne
loope
inc
adc
lahf
or
mov
leave
ficoms
test
orb
and
sbb
pop
lret
jno
jge,pt
adcb
idivb
and
and
sub
ljmp
jmp
mov
cmp
addr16
pop
shl
sub
dec
push
jnp
ret
test
dec
mov
xchg
sub
add
jge
and
jg
jo
mov
push
pushf
pop
call
inc
xlat
dec
mov
lret
jb
ds
negb
jle
inc
mov
shrl
scas
adc
dec
mov
outsl
int3
lods
jg
rcrb
xchg
sub
or
pushf
jmp
aas
cmpb
sbb
adc
pop
or
jmp
lea
sahf
ja
pop
mov
call
out
cmpsb
jp
ret
loopne
dec
cmp
dec
mov
inc
testb
or
mov
fs
arpl
adc
imul
mov
int3
push
inc
xchg
inc
clc
inc
in
dec
into
filds
stos
mov
mov
inc
out
ljmp
push
push
sub
xor
mov
lret
push
ficoml
push
dec
push
push
dec
test
rclb
jp
addr16
xor
ret
sti
ss
xchg
cmpsb
inc
iret
or
jecxz
inc
add
and
insl
adc
xchg
mov
mov
sti
mov
adc
sarl
cmpsb
add
out
popa
leave
inc
mov
loopne
cmp
sbb
out
rcll
mov
out
jp
js
sub
and
fistpll
pusha
insl
daa
jno
lods
dec
sbb
push
lods
mov
jo
test
mov
adc
mov
sti
mov
adc
in
ja
outsl
xchg
clc
ljmp
jae
in
les
inc
aaa
repnz
insl
outsl
mov
mov
inc
jnp
or
popa
repz
dec
popa
jbe
or
test
and
mulb
sbb
ja
sub
fdivrs
xor
test
lock
mov
mov
std
mov
mov
mov
mov
ja
inc
sub
mov
or
pop
inc
sahf
dec
es
iret
out
data16
mov
mov
mov
fcoml
bts
cmp
scas
jecxz
ljmp
add
sub
in
stos
add
imulb
pop
pop
xchg
je
pop
push
xor
push
fwait
es
or
add
loope
and
aam
xor
hlt
popa
into
dec
cmpsl
fwait
mov
push
test
lret
es
lahf
incb
pushl
pop
or
insb
xchg
mov
add
add
lret
xchg
pop
cmp
lods
add
jnp
in
inc
testb
inc
popf
jmp
mov
inc
add
test
sbb
xchg
mov
jg
shll
add
mov
sub
push
rcrl
inc
and
leave
or
inc
cmp
mov
hlt
inc
xor
jb
and
cld
dec
in
adc
cmp
inc
xor
mov
out
mov
int3
mov
push
pusha
add
push
bnd
dec
mov
imul
lods
jae
push
xchg
in
rcrb
les
into
mov
mov
xchg
jo
imul
outsb
lret
clc
outsl
push
add
dec
shlb
lods
rcll
pop
mov
addl
sub
imul
dec
fs
mov
xor
dec
scas
aaa
gs
sti
mov
and
loope
arpl
adc
lods
mov
pop
add
psubusb
js
cmp
out
or
filds
jo
push
dec
adc
into
pop
icebp
imul
mov
sbb
and
roll
mov
fidivrs
xchg
gs
repz
lods
cmc
mov
popf
lea
add
leave
lock
stos
jmp
and
lcall
clc
aaa
ss
push
add
xor
stos
pusha
pop
icebp
std
fidivs
fs
pusha
rcr
fucomi
dec
jae
ror
sbb
lods
adc
and
aas
popf
iret
stc
cmpsl
mov
mov
outsl
pop
stos
dec
add
stos
jge
cmpsb
jge
das
popf
mov
jo
inc
sub
cmp
shlb
popf
push
dec
stc
xor
pop
shlb
jne
push
dec
lret
push
cmp
or
popa
ds
jo
aam
aaa
jmp
ret
add
jns
sbb
pusha
popf
adc
cmp
mov
xchg
xlat
sbb
sahf
jecxz
pop
cwtl
jo
dec
xchg
call
add
loop
dec
inc
into
insb
jo
mov
add
xor
sbb
loopne
in
imul
fwait
mov
mov
adc
and
add
mov
gs
movsl
add
ret
xor
ljmp
add
xor
out
mov
icebp
add
pop
leave
leave
fsts
add
adc
jb
push
pushf
dec
mov
xor
sbb
adc
aaa
fadds
insb
enter
push
sub
dec
scas
int
int3
add
pop
call
mov
xchg
push
and
out
jmp
jecxz
pop
sub
xchg
inc
push
dec
pop
arpl
dec
scas
sti
sbb
jg
ja
out
lock
mov
pushf
cmp
jmp
fsubrs
jle,pt
jb
xchg
aad
std
dec
mov
out
pop
push
xchg
inc
lahf
add
add
mov
repnz
jne
inc
xchg
adc
sarl
std
outsl
enter
jg
add
popa
arpl
sub
push
ror
sub
push
in
inc
out
lods
push
jmp
sub
push
inc
inc
dec
push
mov
imul
mov
bswap
inc
stos
pop
lcall
cmp
aam
xor
xor
add
or
push
movsb
movsb
mov
in
jmp
inc
test
cmpsl
popa
pop
sub
sub
mov
insb
push
xchg
loopne
in
cmp
ss
dec
mov
cmpsl
out
popf
pop
cmp
aas
shr
xor
jb
jl
mov
stc
mov
and
cld
cmp
lds
inc
xchg
fadd
mov
dec
and
sahf
inc
add
jp
movsb
jle
jecxz
in
adc
pushf
les
push
pop
lods
xor
aas
dec
ficoms
cmpsb
xchg
fwait
jle
fistpl
and
jmp
fadds
arpl
test
lods
push
das
jmp
ret
cltd
push
adcl
xchg
lret
dec
push
mov
lahf
dec
dec
cs
sub
add
inc
fwait
mov
and
xchg
sti
sbb
hlt
inc
lea
jo
ret
cs
out
pop
loopne
mov
push
test
add
jle
out
pop
jns
xor
popa
push
pop
push
arpl
sbb
cmpsl
jo
jb
xor
mov
sub
in
dec
adc
in
imul
sub
jbe
int
out
dec
push
mov
sti
sub
out
mov
xchg
in
push
call
xlat
mov
arpl
cmp
and
add
cmp
les
es
cmpsb
and
nop
mov
sub
adc
fstpl
add
lahf
aam
jge
repz
clc
xchg
xor
xor
cld
jae
sub
and
pop
xlat
mov
push
ljmp
or
lcall
lock
in
add
pop
int
in
lea
icebp
add
mov
jg
cmpsl
lret
stc
pop
cmp
mov
rcrl
adc
push
cmp
pop
mov
ds
scas
cmc
sbb
add
adc
pop
jge
ret
and
cs
fcmove
stos
popa
mov
fdivrl
add
inc
push
and
hlt
mov
arpl
jns
mov
pushf
jmp
icebp
sti
xchg
cld
cmp
xchg
jecxz
into
mov
inc
sub
je
lock
pop
add
mov
mov
mov
sbb
stos
cmp
pop
sti
pop
or
xchg
cli
das
mov
sbb
dec
mov
loopne
imul
sbb
add
fbstp
cmp
negl
pop
fcompl
divb
or
outsl
mov
insl
fimuls
clc
aas
nop
mov
dec
jecxz
xchg
por
dec
outsb
std
cld
loop
jnp
and
in
pusha
mov
add
jecxz
stc
aaa
jns
outsl
into
stos
out
icebp
xchg
cltd
sub
outsb
add
lret
mov
loop
mov
mov
mov
pusha
cmp
das
cmp
add
jae
cmp
add
adc
add
out
lahf
jb
cmp
jle
out
mov
push
or
icebp
xchg
inc
xchg
pop
ljmp
in
subb
into
gs
nop
out
rcr
sahf
jnp
adc
mov
out
iret
sbb
mov
xor
fsubrl
mov
dec
mov
add
mov
xlat
jns
xchg
mov
data16
out
in
cmpsb
push
andb
fistl
pop
pop
out
and
loopne
sahf
bound
inc
fildll
push
call
lock
mov
add
add
movsb
fbstp
in
sub
jo
xor
pop
xchg
fdivrl
fwait
cmp
daa
pop
xchg
nop
dec
hlt
imul
imul
jecxz
push
cmpl
loopne
add
jmp
push
push
popa
cmpsb
fstl
xor
cmp
push
fidivl
fwait
dec
sbb
mov
dec
movsl
test
pop
add
rcrb
sbb
test
jge
stc
cld
xchg
testb
data16
int3
out
mov
jmp
fnsave
mov
jbe
flds
out
jns
dec
add
out
lods
enter
or
cli
inc
cmc
cmpsb
cmc
mov
sub
push
xchg
mov
call
and
pop
ja
movsb
push
mov
inc
aaa
dec
pop
sti
and
divb
cmpsb
into
das
xlat
adc
gs
stos
mov
push
pop
push
adc
push
icebp
mov
jmp
je
fwait
jns
test
ss
mov
stos
fidivs
cmp
jp
cli
mov
imul
gs
and
ror
call
jbe
pop
mov
dec
cmp
mov
push
pop
jmp
or
or
push
and
inc
add
xchg
in
clc
jmp
jle
pop
in
aam
pop
in
add
cltd
scas
jno
lods
xor
mov
roll
ds
lcall
fmulp
ret
dec
push
ret
mov
and
repnz
aam
imul
insb
outsb
ror
jbe
sbb
lods
pop
or
test
mov
or
jb
ret
add
cltd
mov
cmp
mov
jp
loopne
or
aaa
out
push
ljmp
rorb
es
out
push
fs
xor
outsl
in
push
les
shll
inc
inc
lret
lret
out
nop
test
ss
movsl
xchg
inc
lret
sbb
cld
and
xchg
push
add
jmp
inc
add
icebp
dec
cmp
inc
hlt
jge
pusha
test
pop
inc
or
mov
jmp
or
xchg
push
mov
aaa
ficoms
arpl
cmc
shl
sub
aam
aas
insb
mov
iret
mov
xchg
mov
popf
mov
mov
jo
inc
adc
gs
idivb
insb
pop
xlat
lcall
pusha
jecxz
insb
inc
sti
testb
je
and
ret
dec
jl
fdivr
ljmp
and
jg
mov
scas
xor
cwtl
in
adc
stos
push
sub
xchg
test
mov
xor
or
inc
stos
test
cs
push
stos
loopne
arpl
out
fwait
dec
dec
insb
fisttps
mov
xchg
test
add
mov
in
popf
sbb
setae
sbb
pop
movsb
fildl
ds
mov
sbb
sbb
sysret
sti
popf
xchg
xchg
clc
inc
xor
lahf
dec
or
insb
icebp
ret
mov
in
inc
mov
inc
jo
in
addr16
sbb
icebp
out
out
outsb
mov
add
and
hlt
lret
test
push
bound
fidivrs
xor
mov
inc
jb
sahf
inc
test
addr16
nop
cmp
jp
add
repz
test
mov
int
pop
idivb
add
out
dec
jl
pop
jmp
pop
inc
aas
roll
lods
push
shll
int3
lgs
mov
cmp
or
xchg
jnp
data16
mov
iret
mov
jb
and
mov
jp
aas
sub
or
mov
ret
dec
pop
imul
cmp
xchg
test
sub
ret
pop
jmp
popf
stos
les
insl
add
mov
xlat
nop
stos
aam
repnz
stos
pop
push
shl
ds
ss
adcb
xorb
mov
cmp
jns
mov
xor
jae
daa
inc
jmp
pop
lock
fmuls
xchg
shrb
lcall
dec
add
xchg
inc
sbb
cli
sub
xor
push
sbb
fists
fdivrl
xlat
clc
imul
ss
and
test
int3
adc
or
sbb
xor
mov
leave
inc
in
mov
pop
scas
add
adc
mov
sbb
jl
inc
rorb
fs
sarb
xor
hlt
mov
sub
add
divb
mov
push
lods
jg
xchg
scas
fldcw
sbb
pop
movsl
ljmp
lds
fbstp
xchg
shrb
fs
decb
inc
xor
dec
dec
jne
aas
out
mov
addb
in
xchg
pop
xchg
jne
fcoms
mov
inc
dec
notb
testl
fiadds
pop
hlt
push
mov
scas
jle
jno
and
repnz
and
mov
xchg
mov
lods
leave
adc
sub
inc
lds
add
adc
loopne
ret
push
pop
sbb
mov
mov
into
repnz
out
xor
adc
add
int3
test
in
xchg
mov
adcl
mov
int3
xorb
outsl
test
je
push
repz
mov
xor
and
and
popf
pop
sarl
adc
add
xlat
aaa
mov
ss
clc
loopne
pushf
mov
add
and
xchg
arpl
inc
lahf
testl
movsb
ret
out
dec
push
pop
aaa
rorl
push
inc
xchg
jo
mov
es
es
lods
or
movsl
int3
sub
jb
icebp
and
insl
pop
jb
inc
inc
mov
fs
mov
jb
mov
cmp
das
mov
jecxz
sub
sahf
insb
sub
and
lahf
push
es
or
mov
mov
in
push
fs
adc
fidivrs
sub
adc
mov
pop
cmp
test
and
xor
push
and
inc
push
cmp
jae
jmp
movsb
ljmp
xchg
xor
rclb
dec
sbb
das
fwait
rol
dec
leave
jecxz
pop
out
mov
movb
test
adc
xchg
jle
xor
push
jmp
cmp
iret
jle
stc
push
adc
or
loopne
sbb
lret
movsb
lods
pop
sub
test
test
push
push
sub
lret
mov
dec
add
loope
xor
pop
pop
mov
in
pop
inc
cld
sub
cmc
mov
mov
in
sub
push
jnp
sub
lahf
test
pop
cwtl
xchg
push
sub
xchg
cwtl
ret
inc
mov
loope
in
insb
ficoml
lock
cmp
fidivl
loop
adc
mov
jno
add
test
insl
sbb
xor
or
outsb
shll
xor
cmp
icebp
jae
jmp
gs
jle
popf
pop
jo
add
cwtl
inc
or
sbb
test
ljmp
lods
subl
popf
pushl
outsb
stc
in
lods
jecxz
pusha
test
rclb
scas
leave
les
shr
jge
ja
shll
popf
pushl
adc
scas
sbb
mov
add
add
into
sub
sub
mov
dec
xchg
lds
clc
and
out
in
inc
jmp
retw
lahf
push
add
fs
sti
scas
insl
cmpsl
xor
stos
ds
xor
mov
lods
lods
fmulp
inc
add
inc
mov
fisubrs
mov
xchg
lcall
stos
lahf
mov
cmp
adc
and
cmpsb
test
bound
jmp
sbb
fcomip
iret
sahf
or
sbb
pop
sahf
sbb
cmp
pop
sub
lds
lock
add
sub
leave
lods
sahf
aas
sti
mov
sbb
sbb
cmp
adc
mov
xchg
pusha
jmp
add
ljmp
mov
and
push
cltd
rorb
jns
ds
jp
xor
fdivrl
jne
mov
xchg
push
pop
push
imul
shlb
stos
jp
out
out
pop
cmp
mov
outsl
lods
shlb
mov
push
pop
add
cmp
mov
scas
popf
push
lret
out
mov
les
loop
out
push
push
dec
and
push
das
add
add
aas
sbb
call
adc
pushf
iret
xchg
jmp
ss
push
inc
mov
adc
mov
fdivrs
cmp
sbb
ss
inc
inc
xor
sub
fisttps
pop
mov
adc
fadds
cmc
sub
scas
cld
jmp
repnz
push
inc
jnp
pop
es
test
or
imul
adc
popa
clc
insb
jg
ret
imul
call
adc
insb
push
decl
ss
inc
repz
ret
test
movsl
loop
jbe
jnp
das
pop
int3
xchg
mov
or
in
std
pop
or
cmp
pop
movsl
push
add
inc
jle
xor
loopne
sbb
cwtl
push
pop
mov
pop
scas
ljmp
outsb
lods
cmp
inc
cmp
sub
jne
xchg
and
pop
mov
aas
dec
aad
inc
jbe
sbb
cli
jnp
cmpsl
mov
mov
push
sahf
and
jge,pt
jecxz
roll
and
scas
xchg
popa
mov
jge
nop
pop
dec
insl
sti
pop
add
icebp
ss
xor
add
in
add
sub
iret
pusha
push
int
or
xchg
push
leave
sub
call
jns
decb
cli
mov
cmp
pop
and
adc
sti
push
shlb
into
xchg
test
mov
sbb
cmp
loop
int3
dec
outsl
xchg
sbb
push
pop
movsb
in
scas
repnz
cli
xor
sarl
inc
aam
inc
or
loop
or
je
mov
or
push
cwtl
fisubl
push
mov
xchg
cmpsl
andb
movsw
out
test
inc
lea
pop
pop
push
pop
add
popf
xor
outsl
mov
je
roll
out
bnd
cmp
jnp
mov
sbb
mov
xor
out
imul
xor
sbb
xchg
cmpsb
mov
mov
movsl
icebp
xor
jbe
divb
sahf
pop
arpl
lods
adc
sub
pop
sbb
and
dec
lcallw
inc
repnz
jnp
loope
xchg
ret
add
push
push
insb
ljmp
outsl
xor
inc
sub
mov
inc
loop
mov
out
sub
rcll
mov
pop
cmpb
mov
pop
push
sahf
in
xor
pop
sub
jmp
dec
xchg
dec
cmpsb
ret
fldcw
adc
inc
or
fisubrs
inc
and
mov
mov
and
ret
pop
int3
inc
in
add
add
imul
mov
pop
fildl
mov
pop
cwtl
imul
and
add
out
in
ficoml
dec
jl
pop
icebp
jmp
insb
inc
pusha
add
dec
mov
fcmovnb
mov
xchg
mov
cwtl
add
jno
out
mov
lret
scas
ret
mov
lret
popa
push
pop
add
mov
xor
lock
mov
dec
aam
mov
push
push
in
xlat
test
test
fbld
mov
pop
aaa
dec
push
popa
lahf
add
jmp
lcall
xchg
add
ljmp
inc
sub
dec
ds
daa
call
add
into
fbstp
dec
into
inc
lret
ficoml
mov
push
sbb
sbb
fsubl
pop
loopne
ret
aam
aaa
shl
dec
push
rcll
cmp
pop
test
jne
dec
sahf
and
mov
test
inc
insb
int3
sahf
and
and
add
xor
flds
mov
push
aaa
fwait
cmp
jo
mov
pop
push
imul
mov
mov
mov
adc
or
dec
fcomps
mov
into
nop
test
push
pop
xchg
popf
and
cmc
mov
lods
cli
mov
out
cmp
inc
clc
arpl
js
or
vmwrite
add
rcll
cmp
dec
adcl
and
or
and
outsb
push
mov
pop
cmp
test
fdivrl
inc
popa
imul
mov
popf
cs
adc
dec
enter
and
xor
sub
inc
in
xchg
and
lods
cmp
push
sbbl
mov
inc
and
scas
pop
xchg
push
mov
mov
jno
sbb
adc
pop
movsl
or
icebp
adc
and
and
lret
subb
or
lcall
pop
jge
lret
movsl
sub
test
movb
add
shll
xor
add
mov
aaa
daa
aaa
xchg
adc
push
xor
gs
rorb
rorl
movsbl
loopne
popf
stos
pop
sbb
jl
mov
out
inc
rclb
mov
mov
dec
pop
repnz
pop
fadd
inc
in
jge
iret
mov
andb
ret
and
or
inc
dec
xor
jo
lds
pusha
jecxz
aam
sub
mov
pop
aam
movsl
jecxz
or
rcll
and
outsb
cmpsl
insb
inc
notb
cmp
pop
mov
icebp
movsb
lahf
sbb
mov
sbb
mov
int3
mov
testl
push
cmp
mov
shlb
sub
lods
lret
fsts
xor
mov
icebp
push
mov
mov
pop
xchg
jnp
push
mov
adc
lea
xchg
jb
mov
and
or
mov
dec
insl
clc
push
mov
pushf
in
idivl
mov
mov
or
xchg
sub
push
mov
mov
loop
int
adcl
shlb
cli
adc
leave
out
and
push
push
sub
popf
lds
and
lea
loop
clc
sarb
pop
mov
and
repz
mov
pop
mov
lea
addl
nop
push
popa
inc
into
and
aaa
xor
repnz
cmp
pop
lahf
xlat
inc
int3
xor
push
insb
cs
inc
push
loopne
leave
or
push
nop
jbe
into
sbb
iret
adcb
inc
pop
push
mov
mov
loop
cmp
popa
ljmp
pushl
out
test
shlb
enter
sbb
scas
push
mov
stos
cltd
or
es
mov
stos
dec
push
cld
hlt
adc
lcall
cli
add
in
mov
repnz
ret
adc
bound
aaa
sahf
jne
in
and
daa
call
inc
es
jecxz
adc
out
in
mov
mov
push
dec
xor
movsb
xchg
inc
iret
jge
pop
sbb
sub
push
inc
mov
dec
cmp
sub
fidivrs
push
scas
movsb
repz
sbb
xchg
cltd
pop
outsb
cmp
addb
adc
in
cmc
mov
adc
sub
stos
mov
lods
or
xlat
shll
mov
sub
xchg
cmp
lcall
test
cmp
je
xchg
fcomps
cmpsl
lret
adc
scas
stc
sbb
iret
pop
xchg
push
pop
fcmovne
lcall
loopne
and
xor
mov
and
mov
das
inc
pop
cmp
jae
push
sub
cli
sbb
loop
mov
mov
push
xchg
sub
jp
clc
stos
ss
test
es
negl
push
xorl
sbb
jnp
les
cs
sbb
ret
iret
push
sti
dec
out
sbb
test
test
add
fistpl
aad
mov
lods
addb
mov
cmp
push
orl
scas
aas
pop
mov
push
pop
cmpsb
mov
adc
sub
jg
call
jae
es
cmpsb
dec
data16
jnp
or
les
test
jns
mov
lcall
repnz
xchg
add
popf
mov
push
pop
dec
jns
cli
pop
fwait
lret
cmc
xlat
in
xor
popf
push
test
aad
xchg
lret
lret
pusha
mov
pop
testb
mov
js
call
into
push
push
mov
sti
mov
negb
jge
out
cld
sub
mov
outsb
mov
pushl
pop
xor
ret
dec
sbb
cld
test
rorl
pop
or
mulb
popl
sub
sub
test
mov
jbe
imul
enter
shrd
mov
fdivrl
enter
dec
push
mov
adc
and
and
jnp
repnz
push
xchg
sub
jb
ret
addl
and
es
mov
mov
push
outsb
xchg
dec
fists
mov
cmp
mov
adc
cmp
rcrl
inc
sarl
jbe
dec
mov
push
test
icebp
xorb
psubusb
stos
sbb
outsl
inc
fwait
call
iret
inc
cmp
lods
push
pop
pushf
cmpsl
adc
int3
icebp
mov
addr16
sub
mov
push
mov
popf
aaa
sbb
inc
xor
ret
add
sarl
outsl
scas
fcompl
mov
shr
ja
je
stc
xchg
and
lods
ja
in
sbb
shll
xorb
es
jne
sub
xchg
mov
scas
add
imul
lea
fbld
mov
lahf
or
nop
in
and
shrb
and
hlt
jae
inc
fisubs
mov
and
loope
in
jnp
mov
inc
call
fwait
aam
jbe
sbb
xor
imul
xchg
stos
cld
je
mov
rolb
pop
repnz
add
mov
push
testl
lcall
mov
xor
inc
pop
jg
add
cld
xor
pop
xchg
ss
aad
pushf
test
leave
dec
xor
fisubl
int
push
in
push
cmovl
push
jmp
or
out
pop
les
movsb
jl
test
xchg
out
and
pop
cs
popa
arpl
and
adc
nop
ds
jbe
push
dec
lcall
stos
sub
pusha
loop
jecxz
sub
cmp
adc
cmp
imul
divb
push
js
ss
jb
scas
pop
clc
testb
sbb
mov
stos
jb
sbbb
sbb
and
pop
out
int
mov
dec
aaa
inc
popf
xchg
mov
sbb
int
jecxz
sar
lahf
adc
mull
mov
ret
push
and
sbb
and
imul
pop
addl
dec
lea
jne
push
mov
jmp
jmp
hlt
dec
jmp
in
fsubrl
jno
and
xor
and
mov
aas
mov
nop
orl
insl
xchg
sbb
jo
dec
jnp
aaa
sbb
sbb
mov
dec
loopne
fidivrs
dec
shll
mov
fwait
or
xlat
mov
pop
imul
xorb
xchg
enter
and
sbb
into
mov
inc
push
mov
fmul
adc
push
cmp
in
ret
jg
jg
xchg
mov
sub
sub
jno
insl
dec
sbb
hlt
push
ficoml
pusha
cmpsl
dec
dec
xor
and
enter
shl
and
ret
std
sub
mov
adc
fisubrl
push
sbb
sbb
jle
xor
mov
faddp
dec
aam
mov
cli
jns
mov
jnp
dec
sbb
sbb
ds
sbb
sbb
lcall
sub
and
cmc
jp
aaa
fadds
test
aas
add
mov
xor
push
sahf
lock
pushf
hlt
roll
mov
or
add
sahf
xchg
mov
push
mov
mov
andl
jns
push
or
cld
aam
or
push
mov
push
enter
lods
dec
jns
sub
and
xor
xchg
addr16
sti
sub
insl
push
fwait
cld
clc
push
push
int3
sub
dec
aaa
sub
mov
pop
lods
bound
sbbb
insl
pop
ror
insb
div
inc
loope
cmp
push
push
add
jb
jae
shrb
jge
or
dec
pop
inc
dec
inc
into
sub
jmp
adc
mov
sbb
fldcw
push
push
inc
jno
mov
mov
inc
jg
push
mov
mov
inc
sarb
mov
aam
xor
dec
jp
pusha
add
pop
push
inc
mov
test
icebp
int3
negb
ss
xchg
lock
xchg
sbb
push
jle
fs
outsl
inc
arpl
out
mov
into
mov
xor
aaa
pop
loopne
popa
adc
pusha
jno
jmp
shr
or
jge
jnp
icebp
in
mov
hlt
frndint
mov
jp
ret
iret
push
ret
outsl
mov
dec
mov
popa
gs
int3
loope
rcrl
mov
repnz
pop
ljmp
adc
adc
mov
inc
xor
dec
mov
aaa
add
mov
jbe
outsb
es
add
test
mov
or
arpl
fcoms
or
mov
adc
jg
rolb
imul
jae
adc
and
outsb
inc
test
cmp
repz
pop
iret
push
push
cmp
push
fisubs
xlat
sahf
jp
shr
lcall
mov
scas
imul
inc
ljmp
mov
fimuls
inc
movsb
div
aaa
push
push
daa
sar
xor
in
rclb
sub
push
movsb
loop
imul
adc
cmp
mov
shlb
lahf
mov
push
sahf
pop
dec
int
or
lret
add
lds
fwait
stc
xor
push
loope
cmp
mov
xchg
mov
xor
arpl
int
pop
movsl
loope
push
out
ds
jle
adc
rcr
cmp
and
call
cmp
es
cmp
mov
dec
cld
push
outsb
mov
cmp
or
ret
adc
fcomp
mov
jmp
cmp
sub
pop
lds
hlt
cmp
and
inc
shr
gs
pop
out
xchg
repz
mov
stos
fs
out
std
out
inc
aaa
aam
mov
pop
inc
pop
repnz
push
mov
dec
jns
lea
jecxz
inc
aad
inc
mov
shll
inc
push
in
xchg
cmp
fldl
hlt
je
aaa
or
shrb
shll
aaa
lret
jns
cmp
mov
xor
pop
mov
icebp
sub
ficoms
in
leave
js
jne
add
add
out
shl
daa
iret
sub
mov
push
shrl
add
ss
mov
es
cmp
mov
cmpsb
test
leave
sti
sbb
mov
test
nop
jbe
push
aad
dec
add
out
repz
jno
ja
xor
into
xor
loope
mov
arpl
dec
mov
cltd
cli
cli
inc
clc
sbb
push
lret
xchg
sub
mov
outsb
and
jbe
fdivrl
out
dec
push
mov
xchg
adc
mov
add
cmp
outsb
jecxz
mov
in
hlt
icebp
dec
icebp
aaa
and
mov
inc
sbb
pop
out
xor
pop
repnz
fiaddl
lahf
imul
cmp
ret
clc
sbb
jmp
es
xchg
mov
and
cmp
ljmp
mulb
jp
loopne
mov
ret
xorl
dec
mov
add
dec
mov
cli
arpl
insb
fbld
push
repnz
je
pop
int
outsb
inc
push
push
popa
dec
leave
xchg
mov
xchg
xchg
cmp
in
in
sub
imull
dec
sbb
mov
mov
cmp
mov
push
test
iret
pop
mov
xor
andl
jns
addr16
pushf
xchg
and
dec
arpl
in
pop
add
mov
xorl
xchg
cmp
mov
addr16
mov
xchg
mov
ficomps
xor
repnz
ljmp
dec
mov
and
cmpsb
sub
adc
add
jbe
push
adc
bound
jl
push
mov
adc
cmc
mov
test
mov
xor
jp
adc
xlat
xchg
pop
int
push
lock
adc
xchg
and
jg
stos
ret
pop
push
scas
popa
mov
fdivrl
ret
cld
xor
cmp
xor
and
stc
mov
sub
lods
jnp
jae
jae
mov
mov
sub
movsb
pop
outsb
cmp
lods
test
dec
rolb
jne
xchg
rcrb
adc
sub
lahf
ljmp
add
mov
lret
ret
aaa
test
push
jge
imul
cmp
movsb
lods
addr16
dec
xor
stos
jg
scas
lret
jne
data16
inc
js
mov
adc
std
add
jno
mov
dec
pop
xor
pop
shl
xchg
jmp
adc
xlat
or
imul
push
hlt
dec
xchg
dec
rcrb
nop
lea
in
and
cmp
pop
mov
xchg
pop
sbb
fldt
ud1
push
lods
pop
int3
xchg
sti
and
loope
pusha
int
scas
es
fldenv
lret
cmp
in
sti
adc
fldenv
lcall
and
std
mov
insb
and
mov
mov
fcmovnb
sti
add
pushf
stos
es
out
xorl
dec
iret
dec
out
mov
gs
dec
icebp
je
pop
jo
testb
or
jno
outsb
mov
pushf
or
and
fucom
std
inc
shr
shll
jl
cs
arpl
test
js
rolb
xchg
aaa
jns
scas
ljmp
hlt
cmp
mov
shlb
ljmp
rorl
and
mov
cmp
push
adc
and
add
mov
data16
adc
push
mov
pushf
or
fnsave
gs
dec
aas
fwait
jmp
jge
push
cmc
fldt
gs
jmp
push
mov
cmpsb
xchg
lret
sub
jbe
dec
lret
mov
xlat
hlt
dec
jecxz
mov
mov
pop
js
push
imul
or
jle
sti
movsl
xchg
ss
push
clc
in
jg,pt
jmp
jmp
and
push
jb
push
xor
adc
stc
mov
pop
addr16
adc
push
sbb
lods
loope
lret
icebp
in
pushf
scas
nop
and
mov
push
xorb
mov
jg
mov
xlat
ret
mov
add
fisttpl
jge
xchg
sub
enter
cld
imul
je
fstpl
mov
pop
sbb
cwtl
mov
fbstp
je
fnop
dec
dec
int
pop
dec
out
pop
mov
cmpsl
mov
jl
push
mov
adcb
lds
lcall
inc
daa
mov
add
inc
insb
fcompp
ja
cmc
push
or
loop
mov
jbe
push
jle
lahf
adc
in
ret
dec
bnd
comiss
push
movsb
imul
jmp
aaa
mov
test
movsl
lock
aam
scas
dec
cwtl
adc
jb
mov
pop
sbb
mov
and
xorb
pop
sahf
push
or
jno
sbb
repnz
sub
rcrl
fistl
pop
les
lahf
repz
mov
mov
out
loope
stos
cmp
lcall
jmp
or
arpl
xor
jmp
pusha
lods
pop
pop
or
test
xchg
xor
xchg
bound
stos
add
jmp
ret
xchg
pusha
cs
test
xchg
xchg
insb
cwtl
in
mov
sub
inc
shr
mov
and
push
mov
sub
mov
cmp
xchg
insb
xchg
dec
or
cmpsb
and
jp
popa
into
jno
scas
mov
or
fxch
lds
fmull
jno
add
imul
push
pop
push
test
push
loop
adc
ds
or
daa
xor
stc
jb
jnp
ds
mov
push
jno
mov
adc
outsb
mov
je
xchg
mov
insb
fs
fwait
ljmp
popa
xor
call
mov
xor
lahf
and
push
xchg
insb
or
jle
xchg
fwait
push
sub
int3
sbb
shrb
jno
imul
cltd
cmp
push
sti
loop
imulb
push
scas
call
scas
and
dec
inc
lods
xor
push
jg
ja
loopne
adc
test
jnp
int
and
mov
jae
cmc
xor
movsl
lahf
xorb
mov
inc
sub
add
mov
xchg
pusha
in
pusha
imul
lcall
rcr
pop
sbb
and
lret
dec
mov
adc
pop
adc
adc
pop
add
lahf
test
into
or
jne
jbe
cli
and
popf
repz
scas
push
pop
sbb
sbb
cltd
bound
faddl
lea
or
sub
scas
in
das
jp
cld
pop
jmp
mov
inc
mov
xor
sub
cmp
mov
cmc
xchg
push
mov
nop
add
push
mov
sub
cmp
outsl
das
je
out
lcall
adc
daa
rclb
movsl
popa
scas
lret
and
push
pop
push
stos
xchg
xchg
xchg
inc
test
stos
nop
mov
ret
iret
mov
push
pop
mov
cmp
xlat
sub
fidivl
inc
loope
pop
sti
mov
xor
mov
pop
fildll
and
stos
dec
jg
jnp
les
jge
xchg
lcall
cltd
jmp
test
sti
in
sbb
sub
out
popf
les
jge
push
jp
loopne
push
test
imul
xchg
push
fs
adc
mov
loop
bnd
push
push
arpl
or
dec
xchg
les
pop
or
jle
movsl
cmp
or
lret
pop
or
rcl
loopne
mov
inc
inc
adcb
pusha
mov
fiaddl
cmp
dec
push
push
js
xor
iret
sub
stos
and
stos
mov
sti
shll
mov
push
pop
mov
ja
daa
mov
sbb
cmpsl
jne
nop
outsl
sub
xchg
push
pop
aaa
in
ja
pop
jmp
mov
hlt
mov
push
jle
pop
adc
stos
pushf
push
mov
call
lcall
push
loope
push
repnz
out
adc
xor
mov
aaa
jg
cmc
adc
dec
add
mov
xor
lahf
leave
cmp
inc
mov
les
jno
inc
xorl
cli
pop
aas
call
lods
mov
push
out
xor
into
cmp
test
out
adc
stc
push
rorl
cmp
sub
mov
cmp
out
cmc
shll
pop
fcom
and
pop
xchg
mov
rep
mov
and
push
mov
add
mov
push
push
mov
dec
sti
inc
cli
iret
lds
xchg
lods
push
or
and
lods
sbb
push
inc
add
hlt
mov
dec
mov
xchg
outsb
lcall
or
mov
pop
push
test
lret
cld
jle
mov
int3
or
incl
cmpsb
ja
arpl
or
push
in
cltd
inc
sub
dec
ds
lret
ds
and
fimull
mov
shr
adc
cs
adc
fisttpl
sbb
mov
int3
mov
sub
cs
popf
gs
pop
pop
push
mov
sbb
jp
filds
jl
pusha
jae
ficomps
inc
jo
cmovle
idiv
inc
xchg
mov
incb
pop
cmpsb
fldenv
jne
adc
mov
es
stc
or
fwait
clc
push
jp
adc
bound
xchg
sub
nop
out
jno
fisttpl
xor
xchg
test
stc
push
xchg
adc
arpl
pop
loopne
xlat
pop
scas
push
push
jmp
pop
pop
lahf
dec
mov
dec
aad
js
inc
adc
aas
shlb
enter
hlt
sub
icebp
mov
call
mov
mov
mov
enter
roll
mov
jnp
mov
xor
and
mov
stos
xor
fisttpll
inc
mov
repnz
shlb
insb
adc
fs
add
sbb
sbb
lods
xor
mov
mov
je
and
cmp
xchg
push
aad
mov
inc
jns
push
stos
insl
daa
inc
add
push
jge
xor
mov
mov
mov
jo
scas
add
pop
cmp
lods
push
stos
push
push
cmp
lcall
aad
inc
dec
dec
push
aam
push
jnp,pt
test
leave
int
lret
mov
fsubr
add
aam
int
cmp
aaa
popf
mov
sarl
ret
mov
xchg
adc
push
pop
arpl
shlb
mov
daa
mov
dec
mov
shr
cld
ret
pop
mov
notl
into
int3
inc
xlat
pop
in
cmp
out
xchg
ficomps
push
je
cmc
dec
movsl
mov
mov
iret
add
fcomps
sub
js
test
roll
xchg
sbb
xor
je
adc
mov
cwtl
jb
insb
push
add
stos
push
push
movsl
fiadds
lret
fbstp
and
mov
jg
add
push
js
fisttpl
sbb
adc
gs
ret
pop
fmuls
and
push
adc
add
dec
movsb
sbb
cmpsl
xor
jle
xorb
leave
inc
mov
jecxz
int3
test
je
ja
test
fisttps
stos
es
sbb
and
aad
pop
ret
xchg
or
lret
cmp
mov
and
scas
outsl
enter
pmulhw
fisubs
mov
aas
ds
xrstor
fwait
or
adc
dec
adc
dec
add
or
lds
inc
insl
xor
aaa
mov
les
dec
and
aaa
mov
movsb
xchg
inc
out
std
xchg
lahf
imul
sarl
push
cmpsl
or
xchg
add
jns
xchg
scas
into
cmp
and
jge
cmpsb
jg
xchg
jecxz
or
xor
inc
aad
scas
xchg
inc
cmp
pop
mov
pushf
xor
and
adc
dec
dec
mov
cmp
sub
dec
cmp
adc
and
inc
imul
jae
mov
int3
xor
and
outsb
movsb
pop
or
stos
inc
mov
popa
or
pop
cmpsb
fdivs
scas
dec
std
outsl
clc
fsub
loope
pusha
mov
pop
outsl
mov
mov
ljmp
xor
xor
in
jge
movsl
out
fs
sahf
xor
mov
mov
adc
mov
mov
xor
in
sbb
aas
mov
stos
pop
shll
push
xor
aaa
mov
jl
add
push
add
stos
int3
or
push
inc
outsl
xchg
test
lods
in
stc
out
movsl
push
pop
dec
cwtl
cli
std
or
mov
cmp
loope
push
cli
dec
es
push
mov
push
xor
mov
mov
repz
add
gs
sti
cmpsl
sbb
push
sbb
jo
fistps
shlb
test
fwait
mov
sub
in
pop
cmp
in
or
sub
mov
repz
je
cltd
xchg
subb
push
aam
mov
arpl
xor
adc
frstpm(287
rorb
dec
movsb
enter
out
lods
cltd
rcrl
mov
xchg
dec
sub
mov
xchg
cli
popa
pop
popf
fwait
js
xchg
out
cwtl
mov
lock
push
mov
sarb
and
add
mov
aas
test
xchg
imul
sub
mov
sub
xor
pop
das
cmp
bound
and
jge
insb
test
xchg
sub
push
test
cmp
xor
scas
imul
jno
sbb
fiaddl
js
jmp
sahf
xchg
push
aas
jp
push
adc
mov
cmpb
aaa
int3
lahf
cmp
test
sahf
dec
sub
jne
scas
mov
fisttps
xor
pop
scas
mov
mov
push
pop
nop
and
stos
inc
mov
cltd
push
movsb
pop
sti
mov
cmp
mov
notl
mov
xchg
dec
call
mov
fcompl
xor
xor
inc
cmp
scas
roll
mov
dec
fwait
push
aam
or
xor
rorl
scas
dec
testb
mov
sub
in
mov
lods
arpl
push
incb
mov
cmp
xchg
sahf
mov
pop
cmp
sar
in
iret
jmp
jbe
pushf
adc
mov
cmp
mov
xchg
cmp
lret
sbb
xor
pop
mov
or
mov
aaa
imul
movsl
loopne
int3
cmp
pop
movb
test
push
pop
arpl
popf
hlt
mov
and
sbb
pop
les
xlat
mov
jno
xchg
and
in
cmpb
imul
xor
mov
push
sahf
mov
out
out
stos
push
adcb
push
cmp
aaa
or
fadds
aam
fwait
psubsw
sbb
nop
push
nop
xor
jg
inc
cli
add
dec
or
movsb
cmc
push
lea
iret
das
inc
and
sub
cmpsb
cltd
dec
call
bound
add
push
std
mov
in
loopne
nop
clc
loop
jl
mov
dec
paddw
addr16
or
in
lods
shll
cmc
or
insl
sub
leave
pushf
into
test
mov
sub
push
cmp
jle
jl
cs
push
popa
je
sbb
sbb
mov
or
xor
or
cmp
jle
xchg
sbb
mov
sbbb
call
jecxz
dec
xchg
cmp
and
iret
aas
mov
aas
out
mov
pop
repz
jp
pop
call
inc
push
test
xchg
mov
mov
out
push
cltd
inc
cld
jns
mov
lcall
mov
jecxz
in
aas
cmp
cmp
xor
lods
xchg
or
mov
jmp
push
int
cltd
inc
int3
iret
bswap
inc
daa
mov
lock
sub
outsl
insl
test
inc
xor
test
push
and
rcrl
xchg
pop
imul
iret
mov
or
out
aaa
stos
aas
outsl
sub
cmc
and
jl
loopne
add
outsl
mov
sahf
jae
push
adc
lret
mov
xor
data16
mov
or
adc
jae
es
jnp
jo
xor
mov
fsubrs
xor
mov
jnp
and
fidivrl
or
adc
mov
pop
adc
movsb
add
fstps
pop
push
inc
lahf
ja
xchg
cmp
mov
cmc
fwait
addb
push
adc
jle
cmc
fwait
shll
loope
mov
mov
clc
xchg
rorl
in
jg
imul
int3
icebp
ds
cwtl
in
jne
mov
dec
inc
mov
mov
cmp
fstpl
dec
dec
jae
adc
xchg
dec
cwtl
mov
mov
js
push
lcall
mov
fnsave
inc
cmp
pop
pop
add
cs
pop
jo
mov
mov
bound
cld
cmp
iret
ret
int
hlt
xchg
fs
cmp
imul
push
shlb
iret
mov
and
adc
pop
mov
push
push
test
leave
ss
aam
mov
mov
sub
add
push
imul
testl
jne
push
sub
bound
enter
or
cmp
lret
mov
push
test
js
jle
fisubrl
xchg
jl
inc
xchg
adc
outsb
sbb
sbb
inc
jecxz
out
leave
ficoms
cwtl
flds
insl
xchg
cwtl
jae
sbb
sbbb
mov
cwtl
sbb
pop
fst
jb,pt
push
cld
addr16
lret
add
inc
daa
add
push
inc
or
pop
dec
or
push
xor
or
xlat
or
and
mov
das
inc
and
repz
fisubrs
stos
jle
ret
xor
dec
daa
adc
scas
xchg
fldenv
push
adc
cmpsl
cmp
pushf
orb
insb
mov
cmp
pop
aaa
hlt
stos
push
aas
movsb
mov
or
adc
cs
sub
insl
cmc
rcr
das
sbb
jg
jp
int
fldcw
xlat
insl
push
negl
sub
xor
pushf
ds
scas
inc
ret
notb
adc
mov
sahf
cwtl
aaa
sbb
pop
push
and
pop
inc
pop
sub
adc
ljmp
or
xlat
jae
aam
std
movl
xor
dec
sbb
xchg
lret
sbb
sbb
pop
sysret
mov
add
dec
xchg
sbb
out
mov
das
adc
inc
xchg
icebp
jb
mov
pop
lret
mov
xor
ficoml
in
flds
lea
ljmp
dec
test
sbb
out
cmp
neg
aad
mov
ja
push
std
int
or
out
mov
inc
popf
jecxz
pop
cmp
insl
std
dec
push
loopne
imull
cmp
dec
xor
inc
rcll
and
and
fwait
in
mov
stc
ret
imull
cmp
cmp
repnz
aaa
cs
dec
push
in
mov
iret
ljmp
jae
negb
or
es
dec
adc
les
push
cmp
or
pusha
mov
mov
sub
fimull
fs
cmp
xor
into
ret
out
dec
mov
imul
dec
bound
adc
sub
mov
hlt
inc
sub
add
clc
shl
sub
movsl
mov
inc
aaa
and
popf
xchg
push
test
mov
in
mov
frstor
adcl
dec
mov
daa
push
daa
xor
mov
das
mov
bound
inc
call
mov
mov
dec
push
mov
jle
fwait
adc
xor
and
test
xchg
loopne
mov
and
stos
mov
sbb
mov
jp
out
shll
push
scas
push
or
pop
neg
cmpsb
dec
inc
hlt
cmp
stc
and
fsts
imul
aas
and
xchg
and
pop
inc
sbb
imul
xchg
les
inc
jb
xchg
jecxz
and
addb
pop
nop
cs
jb
push
mov
push
push
shr
mov
xlat
fdivl
or
jecxz
push
mov
pop
nop
test
rolb
jae
mov
adc
cmp
test
sub
mov
adc
dec
es
mov
adc
push
mov
jns
js
movsl
in
push
daa
sahf
pop
jle
jmp
xor
or
inc
pop
mov
nop
sub
xchg
dec
stos
jno
test
or
or
dec
loope
sahf
bnd
call
mov
in
roll
pop
ja
jbe
mov
mov
jmp
and
pop
stos
push
jns
insb
and
push
movsl
mov
iret
shrb
xlat
inc
push
cld
mov
cmp
sbb
lods
or
out
in
pop
loopne
mov
repnz
mov
add
xchg
sbb
insb
data16
mov
lcall
pop
pop
ret
mov
pop
mov
pop
jp
nop
mov
outsb
xchg
sub
mov
xchg
jge
sub
pop
add
xchg
sub
xor
mov
fstpl
sub
rol
into
dec
in
and
sbb
hlt
inc
push
inc
or
sub
andl
cmp
jbe
pushf
inc
adc
fcoml
inc
fidivrs
aaa
movsb
jno
and
push
adc
jbe
nop
aas
pop
mov
addl
xchg
ja
adc
out
cmpsb
push
iret
mov
adc
dec
sbb
loop
sbb
out
mov
add
insl
ret
add
popf
add
nop
jg
or
rcrl
mov
in
das
pushf
stos
mov
lock
add
in
addr16
xor
mov
ljmp
and
jp
cmp
insl
cmp
add
mov
jb
xchg
or
lea
xor
add
movsb
push
jmp
mov
inc
outsb
jmp
xlat
scas
and
dec
or
mov
aam
pop
push
pushl
imul
or
out
int3
in
je
cmp
xchg
lods
bound
popf
jge
cmove
mov
adc
mov
cmp
testl
shlb
shl
xchg
fwait
or
fwait
cmp
inc
cmp
in
xor
lcall
cmp
dec
mov
jb
leave
mov
fdivl
into
sbb
movsb
cmp
int
loop
aas
lods
cli
icebp
loopne
sbb
push
and
gs
test
test
in
leave
adc
xor
pop
mov
loop
adc
sbbl
or
sbb
xchg
mov
fs
xor
test
inc
adcl
jecxz
and
aad
stos
sbbl
sti
pop
xchg
scas
sbb
push
push
lods
inc
add
xor
xchg
out
push
push
sbb
lods
push
ja
pop
imul
fimull
inc
mov
add
scas
das
cmp
or
inc
cltd
cmpsb
jns
jbe
adc
daa
mov
lret
lods
inc
lret
xchg
flds
std
cwtl
xchg
mov
cld
cmp
push
sar
mov
cmp
fcomp
inc
dec
pop
lahf
push
mov
pop
push
add
lahf
cmpsb
clc
sbb
xor
out
orl
call
mov
jae
test
inc
loop
xchg
or
dec
sbb
pop
andb
sti
or
adc
aam
shrb
andl
in
arpl
jo
call
mov
out
lds
and
cmp
push
and
les
dec
pop
xor
rorb
inc
xchg
jp
and
push
mov
clc
jmp
dec
and
and
add
sub
mov
push
pop
pop
in
enter
jmp
xchg
fisubs
rorl
mov
gs
dec
dec
add
movsb
inc
shlb
loope
cmp
mov
mov
xchg
jmp
clc
mov
movsl
push
jp
push
push
sub
mov
sub
movsl
call
mov
mov
test
sti
cmp
int3
pop
push
inc
aad
mov
sbb
sbb
ljmp
not
pop
rcl
mov
mov
sub
push
add
jnp
iret
loopne
cmc
sbb
adc
inc
out
aad
mov
push
leave
jns
dec
or
adc
and
xor
xchg
jecxz
pop
lods
mov
or
das
cs
or
mov
cmp
inc
sbb
xchg
pop
test
addr16
xchg
sub
push
xlat
je
xor
push
fcmovnu
inc
mov
mov
cltd
out
and
adc
call
ds
scas
push
or
cmpsb
mov
in
pop
js
adc
mov
lea
mov
test
cmp
jo
ret
int
arpl
adc
out
or
ret
push
fs
out
ljmp
sbbl
push
sub
ret
scas
popf
aad
jbe
std
pop
rolb
inc
adc
setnp
iret
cli
adc
inc
gs
addl
stc
mov
adc
imul
enter
cmp
cmpb
sub
jno
jp
ret
sar
lahf
xchg
and
adc
cmp
cltd
cmpsl
dec
jecxz
cmp
sub
jns
test
cmpsb
test
movsl
or
iret
xchg
cmp
out
mov
cmp
cmpsb
cmp
xchg
sbb
adc
leave
mov
fnstsw
fs
das
punpckhdq
push
or
jg
xor
xor
xchg
ret
ljmp
or
shlb
jle
jge
lea
and
pop
sbb
mov
xor
cmp
or
add
jmp
add
ret
movsb
mov
or
push
adc
dec
push
lret
xorb
mov
stos
fsubrs
and
xor
gs
mov
or
rolb
test
jge
cmp
lahf
jl
subl
pop
mov
les
outsl
mov
sbb
fildll
pushl
inc
mov
popf
or
mov
mov
mov
mov
arpl
push
cmp
nop
icebp
popf
ret
imul
pop
dec
push
int3
mov
aad
xchg
add
jg
lods
pop
cli
pop
movsb
cwtl
xor
jns
lret
add
jns
xlat
mov
sbb
ret
mov
cli
les
std
fbld
inc
scas
mov
cmp
roll
pushf
in
xor
adc
test
dec
sahf
daa
mov
sahf
mov
push
jae
jmp
mov
sbb
jle
call
and
aam
test
xchg
adc
mov
xchg
fldl
dec
test
jle
lret
pop
les
or
sti
mov
mov
lcall
pusha
sbb
sub
push
or
mov
sub
repz
leave
sti
mov
js
inc
lea
iret
movsb
push
sub
pop
push
push
aam
out
imul
inc
call
mov
popa
in
xchg
movsl
and
je
jns
lret
test
push
lea
addr16
inc
push
cltd
lods
fisttpll
lds
gs
int
imul
add
mov
in
jno
testb
inc
call
outsl
jle
aaa
inc
test
cmpsl
push
int3
iret
pop
mov
insb
ffree
cmp
fwait
cmp
jge
mov
shll
xor
mov
inc
sbb
jg
jg
js
sbb
cmp
lahf
or
mov
icebp
jmp
lods
hlt
in
hlt
mov
xchg
das
mov
stos
fiaddl
jo
sub
dec
dec
test
adc
mov
mov
lea
mov
xchg
jae
pushf
sub
sub
scas
test
xorl
mov
xchg
push
lret
inc
insl
pop
and
lea
inc
jg
jle
push
sti
inc
xchg
xchg
daa
mov
adc
scas
pop
adc
call
inc
imul
insb
sbbl
outsb
out
lea
xchg
mov
xlat
in
jp
mov
idivb
mov
and
adc
xchg
sub
mov
out
aas
test
jns
jg
ljmp
dec
adc
xor
or
sub
sbb
ret
mov
aaa
push
push
loope
mov
mov
inc
push
xchg
sbb
push
mov
lods
inc
clc
jb
test
dec
outsb
test
lret
ss
outsl
or
cmpl
push
cmp
xlat
jnp
rorl
movsl
jbe
xor
mov
mov
adc
sbb
dec
push
out
ss
cwtl
fsubrl
imul
sub
ljmp
iret
sbb
lret
imul
sub
xchg
mov
mov
ja
cwtl
inc
cli
inc
loop
pop
push
push
xchg
sbb
inc
add
outsb
mov
jmp
pop
rcrl
sbb
cmpsb
xor
mov
addr16
pushf
add
sarl
int3
das
fsub
pop
xor
daa
test
mov
fs
fwait
outsl
inc
adc
loope
xor
lahf
cmp
sahf
std
insb
outsl
insl
cmpsb
sbb
push
std
dec
lcall
lcall
mov
in
outsl
ret
scas
push
cmp
fincstp
test
loopne
inc
or
jg
ds
stc
pop
lods
push
aad
cli
rorl
rdpmc
mov
mov
out
mov
sub
aas
xchg
loop
pop
lcall
xchg
push
popa
fistl
mov
and
sbb
iret
shll
lods
in
dec
cwtl
pop
add
repnz
out
sbb
push
adc
dec
into
xchg
ds
dec
out
insb
jns
push
mov
and
shl
dec
ja
sahf
stc
jp
add
movsb
mov
pop
rclb
xor
pop
jbe
into
push
test
add
jbe
test
js
stos
int3
jnp
or
fistpl
nop
scas
js
xor
pop
mov
lock
and
and
sub
mov
add
arpl
sarl
sbb
mov
mov
rcl
xor
xchg
sbb
push
je
jns
in
mov
js
popf
dec
adc
push
divb
xchg
aas
xchg
daa
movsb
icebp
scas
cmc
mov
lea
js
jp
dec
mov
pop
and
repnz
arpl
push
out
leave
dec
add
loop
scas
mov
push
inc
jmp
push
pop
jne,pn
leave
pop
es
mov
mov
sahf
lret
cmp
lea
imul
and
cmp
iret
aam
addr16
mov
xor
lock
jbe
xor
insl
push
jmp
or
imul
mov
mov
or
xchg
or
mov
cltd
les
aas
xchg
mov
xchg
xchg
daa
rcll
nop
fisubl
inc
push
and
cmp
loop
lods
das
call
jb
lods
cmc
cmp
inc
dec
dec
adc
mov
cli
mov
pop
int3
repz
or
inc
cmp
dec
jns
ret
divl
icebp
xor
jp
mov
inc
xor
pushf
jns
jp
ficoml
sti
mov
iret
push
xchg
inc
and
das
push
and
test
sub
pop
loop
push
push
or
call
test
stc
lock
test
mov
push
lcall
fldenv
test
jae
mov
jp
fsubrl
cltd
lea
fstps
repnz
xchg
push
xchg
std
inc
pop
test
sub
loop
xchg
pop
fnsave
or
lret
add
dec
cltd
jb
in
cmpsb
andb
femms
stos
inc
pop
je
rclb
sub
dec
insl
push
push
or
cmp
xor
sbb
sub
inc
out
fistl
jne
int
sbb
sbb
add
and
jnp
mov
loope
xchg
test
inc
les
fwait
and
or
sub
xor
xchg
fxam
jb
mov
out
jmp
cmp
dec
xor
es
jg
repnz
adc
adc
test
push
rcrl
push
sbb
inc
repnz
mov
xorl
adc
xchg
pop
add
ror
shl
adc
popa
inc
scas
test
loop
add
jne
addr16
xor
xor
jecxz
mov
or
dec
cmp
stos
mov
icebp
sub
cmp
sub
divb
js
mov
fdivr
xchg
mov
cli
pop
test
std
out
and
outsb
rolb
scas
sbb
aad
aam
push
mov
mov
jp
dec
xchg
pusha
mov
cmp
sub
jg
sbb
mov
push
mov
stc
loopne
push
cmp
insb
xchg
es
cmc
outsl
add
cmp
enter
inc
out
ss
fwait
dec
imul
cwtl
push
inc
or
cltd
add
ret
push
sbb
pop
mov
pop
fldcw
ds
aad
jbe
cmp
rorb
mov
popf
xorl
and
cltd
sub
xchg
push
outsl
cmpsb
pop
in
mov
lds
je
adc
sbb
ljmp
adc
adc
jno
sbb
and
stos
cmp
lcall
jl
pushf
insb
mov
jno
scas
dec
loop
repnz
fmul
xor
sub
hlt
mov
adc
or
ds
bndstx
testl
daa
jae
sub
cli
out
aam
push
test
dec
iret
lea
xor
repz
push
lock
mov
sbb
cmpsl
lock
mov
inc
sbb
push
mulb
jl
pop
fcompl
inc
ret
push
imull
pcmpeqd
cs
adc
add
test
aad
subl
and
xchg
add
pop
call
pop
pop
div
call
cmp
sub
pop
pop
fs
insl
lods
int
aaa
push
inc
xchg
in
or
jl
mov
adc
jg
add
jo
xchg
fdivl
in
je
jno
insb
adc
and
jne
cmp
add
subl
sub
int
cld
cmp
adc
decb
repnz
sar
in
fisubrl
cld
lods
xchg
and
lock
test
lds
into
cmpsl
jg
adc
cmpsb
cs
lret
xchg
aad
push
mov
push
jecxz
sbb
gs
ret
fimuls
fcmovbe
outsb
jnp
mul
push
cmpsb
cmp
data16
xor
rolb
sbb
jmp
imul
ja
push
cmp
push
inc
clc
adc
sub
jb
bound
jg
gs
lret
iret
cwtl
mov
dec
mov
in
ljmp
in
shr
mov
movsl
sahf
hlt
and
mov
jnp
push
mov
adc
inc
xchg
sub
xchg
cli
mov
sub
mov
dec
cmpb
push
and
lret
pop
inc
and
inc
stos
sub
f2xm1
out
xlat
mov
pushf
insl
iret
stos
lret
fcmovbe
sar
xchg
adc
push
or
adc
fidivrl
push
icebp
lcall
or
popa
sarb
pop
push
call
xchg
leave
clc
lahf
test
scas
adc
and
es
jp
adc
xor
imul
and
stc
popa
aas
jge
nop
testl
fwait
push
out
sub
dec
pop
rcr
cmp
add
mov
fwait
xchg
test
adc
inc
inc
push
push
outsl
outsb
or
jg
lea
hlt
lcall
lods
dec
into
sbb
xor
data16
mov
stc
xor
addr16
xorb
dec
mov
mov
mov
mov
cltd
add
cmp
fstpl
sahf
sub
jnp
and
xchg
sbb
insb
imul
out
in
push
dec
mov
arpl
and
call
and
sbbb
or
daa
xchg
sbb
mov
pop
fisubrs
repz
and
mov
es
adc
push
and
push
adc
bound
inc
scas
adc
out
lcall
jne
mov
adc
scas
mov
xlat
paddsw
shlb
jno
lahf
mov
aad
mov
mov
sbb
sarl
insl
xchg
mov
rclb
fwait
aaa
fnstcw
mov
adc
sbb
ret
aaa
dec
fstl
les
rcrb
fcmovb
movsl
ja
cld
pop
inc
add
addl
jmp
stc
jbe
cld
cmp
mov
sub
insb
pusha
push
out
cmp
fistl
jae
fsubs
push
gs
mov
out
pop
cld
pusha
cs
mov
jno
dec
daa
aad
sahf
mov
mov
xor
aad
aas
inc
and
sbb
cmp
jb
cmp
inc
pop
fstps
out
imul
and
xchg
cmpsl
mov
and
jge
jne
popf
std
notb
mov
mov
mov
mov
mov
roll
inc
xchg
into
or
xor
je
pop
pop
xor
push
or
into
jle
repnz
scas
jl
mov
mov
iret
sbb
rcl
xchg
lea
insl
mov
repz
ret
inc
mov
cmp
xchg
jle
adc
pop
pushf
jle
loop
mov
ficoms
pushf
mov
adc
jb
test
cmp
sbb
sub
push
push
je
push
jp
arpl
data16
push
outsb
cmpl
fnstcw
mov
leave
dec
cmpl
mov
sbb
cli
push
out
cmpsl
shrl
pop
xchg
cmpsl
add
aam
sahf
sarb
cmpsl
les
xor
add
out
inc
in
inc
movsl
mov
clc
xchg
and
xchg
pop
sub
stos
rcll
rolb
fcomp
ficomps
dec
and
int
mov
lods
jge
jmp
mov
test
sbb
push
test
test
das
and
jle
mov
jl
or
outsl
rcll
cmp
push
jge
jmp
dec
add
in
or
pop
mov
pop
pop
dec
push
cmp
sbb
pop
cld
dec
insl
test
sbb
out
lret
push
pop
fs
add
adc
cmp
mov
rcrb
test
pop
inc
stc
jl
leave
loope
or
push
sub
jle
iret
and
in
int3
outsb
fidivs
inc
loope
mov
imul
add
shll
push
adc
push
xchg
cmp
shrl
or
mov
shl
inc
sahf
push
pop
aaa
shrb
mov
adc
cs
jl
add
fimuls
scas
fnstenv
addb
add
cmp
jb
andl
nop
inc
ret
xor
cmp
mov
sbb
adc
add
pop
sar
shrb
movsb
mov
push
fwait
subb
adc
lock
testl
cmpsb
adc
cs
jl
mov
gs
fwait
jns
mov
in
pop
nop
sbb
sub
cmc
jnp
adc
sti
repnz
jno
call
bound
xor
mov
mov
dec
cld
add
cmpl
jle
push
sub
push
rolb
jp
ss
shrb
pop
pusha
push
arpl
test
xor
enter
test
das
filds
aas
leave
nop
push
es
subl
push
lcall
push
jae
dec
jl
ljmp
orl
iret
and
or
mov
adcb
imul
imul
mov
out
push
cmp
pop
adc
mov
ja
inc
inc
dec
hlt
pop
or
push
jle
add
lcall
cmp
mov
lock
pop
jo
aad
mov
add
jmp
loope
shlb
sbb
addr16
add
mov
in
popa
sar
repz
push
push
cmc
cmpsb
adc
push
pop
cmp
into
pop
pop
roll
dec
insb
and
inc
add
lods
insl
movsl
inc
xchg
pop
lret
push
xor
inc
lods
cwtl
mov
inc
sub
jbe
mov
jne
shlb
orl
test
inc
and
ds
xorb
sbb
ficompl
aas
sbb
sub
xchg
arpl
adc
push
ja
aad
push
and
mov
jb
jmp
push
sub
cld
jb
loope
es
mov
inc
lret
pop
lods
xor
mov
nop
cld
sahf
push
pushf
dec
inc
mov
imul
lcall
dec
fldl
dec
jmp
sbb
mov
cmp
xchg
xor
lret
mov
outsb
rcrb
ljmp
sbb
push
inc
in
xchg
lods
inc
adc
push
xlat
mov
adc
mov
js
pop
jno
sub
mov
ds
mov
dec
sarb
adc
das
jb
rclb
jp
sbb
fwait
dec
movsl
sub
iret
mul
cmpl
ja
popa
push
fsubrl
mov
dec
js
les
xchg
pop
push
cltd
stos
or
push
xor
cmpsl
daa
adc
mov
xor
leave
cmp
jg
adcb
adc
jnp
dec
nop
or
push
pop
cmpsb
xchg
imul
xor
hlt
sub
xchg
je
mov
add
mov
pop
or
and
sub
test
cmc
cld
rorl
shlb
or
cmpb
dec
movl
test
insl
sti
into
or
add
loope
mov
test
aam
adc
cmp
in
push
and
in
lret
mov
sti
ret
lods
notl
nop
or
mov
mov
adcl
imul
lret
push
add
push
mov
fs
jnp
add
clc
dec
xor
xor
adc
rclb
insl
sub
pop
sbb
push
rcrl
inc
es
xor
lret
in
or
pop
lcall
sbb
mov
mov
cmpb
sbb
lret
sub
int
jno
mov
add
pushf
aas
lods
sbb
and
fidivrl
xor
icebp
jo
popf
loope
or
stos
push
leave
jae
mov
push
push
push
xor
insl
adc
stos
shlb
stc
inc
loopne
loope
ljmp
enter
idivb
out
mov
outsb
and
mov
fstps
out
adc
ds
or
push
cmp
mov
mov
add
inc
test
push
out
lahf
push
clc
test
popa
and
sbb
pop
push
inc
push
mov
mov
out
push
out
cld
pop
xlat
lock
xor
lods
imul
inc
cmp
jmp
in
jmp
push
sub
fnstenv
jb
pusha
lds
push
movsl
out
sbb
cmp
fwait
push
add
push
pop
movb
movsb
mov
jp
dec
pop
popa
pop
out
mov
sbb
or
push
xor
sub
mov
adc
push
aas
cmp
in
gs
cmp
or
clc
test
incl
in
lods
int3
dec
lcall
in
push
xor
jno
outsb
test
add
aad
nop
ret
bound
pushf
dec
ja
xor
inc
or
mov
in
pusha
in
or
pop
lahf
adc
xor
cmpsl
std
jae
mov
les
jmp
das
rorb
push
jne
or
mov
sbb
cltd
std
scas
xor
and
xorb
ljmp
ss
jb
inc
ret
mov
or
in
daa
mov
pop
into
gs
lock
loop
inc
gs
test
adc
test
test
fdivl
add
add
dec
mov
mov
in
pusha
inc
mov
dec
sub
xor
js
lods
mov
push
or
jl
mov
js
sti
mov
mov
js
sbb
adc
sbb
push
or
pop
sub
sub
cmp
aam
xor
not
and
imul
xchg
inc
cmp
sub
sarb
popa
into
movntq
pop
fsub
xorl
pause
cmp
cmp
xchg
fidivs
test
fs
push
xchg
mov
inc
mov
pop
mov
sub
dec
mov
push
enter
cltd
adc
mov
and
ja
xchg
xor
fs
mov
test
sbb
loopne
adc
jecxz
xchg
mov
hlt
adc
mov
adc
push
xchg
int
aad
mov
cli
add
lcall
sti
and
push
or
test
jg
std
push
jp
jle
cmp
mov
dec
hlt
jle
mov
insb
cs
arpl
ja
cmp
dec
inc
lods
inc
push
shrl
fstp
movsb
cmp
jae
adc
sbbl
cmpsl
mov
and
push
fistpll
dec
dec
das
ds
mov
pop
dec
sub
sub
inc
adc
imul
sub
mov
sbb
adc
fprem1
into
int
pushf
outsl
inc
into
xor
in
cltd
shlb
jmp
cmp
sbb
dec
js
sub
add
pusha
push
fprem
addb
sbb
insb
and
ror
sbb
popa
pop
mov
fsubrp
mov
mov
mov
div
push
icebp
ret
fdivr
dec
sbb
xor
mov
mov
lods
icebp
mov
or
inc
cli
flds
push
movsb
mulb
push
or
dec
in
jl
adc
fcmovnbe
or
sub
add
imul
icebp
popa
sbb
mov
pop
popf
dec
mov
xchg
mov
sbb
push
or
pop
imul
aad
xor
cmpsb
xchg
std
bound
cmp
pop
mov
push
jecxz
and
std
jo
stos
jno
stos
push
out
mov
push
repz
mov
outsb
mov
add
push
or
test
lahf
data16
inc
pop
test
adc
dec
js
push
in
daa
popa
pop
or
xchg
imulb
fnstsw
popf
xchg
xor
push
sub
xor
dec
movsl
scas
push
iret
loope
repz
xchg
ret
in
into
add
test
or
adc
loopne
out
pushf
add
mov
lret
cmp
notl
dec
sbb
test
test
popl
pop
stos
xlat
jg
pop
xchg
outsl
lcall
cmp
fisttpll
push
loop
mov
xchg
icebp
push
or
popa
jp
sbb
push
sbb
or
add
sbb
mov
dec
push
shlb
and
fistl
sub
mov
mov
testb
push
lret
fldenv
cmp
fstps
inc
int
aas
ja
or
mov
cs
and
or
add
add
pop
sbb
cld
sbb
notl
jg
fdivl
mov
dec
sub
loope
xchg
mov
adc
jnp
mov
pushf
sub
test
inc
mov
scas
iret
lods
push
mov
inc
cmp
dec
jno
cmp
hlt
lds
add
sub
pop
out
rcr
lea
in
xchg
dec
or
mov
and
xlat
fcmovu
jle
in
sbb
in
xchg
lods
aaa
mov
mov
inc
aaa
lods
stos
test
je
cli
int
sti
pop
nop
xor
pop
mov
popf
das
sub
cmp
lahf
out
mov
movsb
test
lock
adc
adc
shrl
lcall
add
andps
dec
test
pop
mov
int3
mov
insb
loope
lods
sub
in
pop
test
and
mov
popa
xchg
fwait
stos
test
call
stos
test
mov
iret
mov
fisubrl
sbb
sub
ja
cmpsb
shll
jns
xchg
and
adc
push
fiadds
jl
pop
insl
dec
and
mov
push
dec
loopne
dec
ds
pusha
test
cmp
les
add
cmc
fiadds
sub
mov
push
add
int3
mov
jb
in
jecxz
daa
movsb
xor
xchg
cmp
pop
inc
cmp
xchg
mov
adc
mov
cmp
out
pop
pop
sar
jecxz
push
mov
frstor
xor
pop
stos
ret
mov
loop
cmp
cmp
lds
imul
jo
shlb
push
stos
add
push
lret
adc
pop
cmc
cld
push
cld
mov
fwait
pop
andl
rdtsc
aam
mov
pusha
sti
lcall
icebp
jg
in
jmp
inc
push
push
pop
into
enter
sbb
jb
jno
sub
xchg
lret
mov
stos
jne
dec
xchg
sar
das
pop
jmp
lcall
push
cmc
fldcw
inc
mov
sub
jle
xchg
loopne
pop
or
mov
push
mov
cmp
pop
inc
inc
stos
mov
inc
leave
jns
insl
cmp
sub
and
sarb
jne
aam
dec
in
mov
jb
push
int
pop
adc
cld
push
mov
xchg
call
subb
cli
cwtl
push
pop
scas
sub
frstor
aam
push
ret
jbe
lods
ret
jg
popa
ret
push
push
lock
mov
xor
mov
mov
push
mov
mov
push
scas
cmp
shlb
push
dec
adc
fdivr
call
or
mov
mov
pushf
pop
inc
lds
xchg
ljmp
cli
or
iret
dec
mov
imul
mov
sub
orb
scas
push
ficoml
bound
js
add
arpl
cld
fld
adc
pop
in
jb
add
dec
shlb
dec
fwait
xchg
xor
mov
fsubs
es
adc
xchg
mov
sbb
or
mulb
pop
sti
mov
xchg
loopne
add
ljmp
xchg
push
lret
dec
jp
jo
push
or
je
mov
int3
das
test
je
pop
mov
in
aaa
popf
fidivl
add
outsl
shll
arpl
dec
inc
pop
cmc
sbb
xchg
push
inc
mov
xor
popf
push
lds
rorl
mov
lock
in
mov
xor
js
das
mov
jmp
inc
or
ds
out
mov
xchg
mov
iret
rolb
movsl
jo
lea
jb
lock
cld
jb
xchg
scas
mov
out
enter
or
sti
jae
adc
push
xor
in
fcmovnu
out
dec
cmp
arpl
cmp
cmovae
ljmp
xchg
test
or
adc
mov
pop
jb
cmp
xchg
or
push
aad
jb
negl
test
mov
in
push
lods
je
sub
fmuls
js
addr16
mov
fisttps
lods
test
insb
jb
aad
mov
push
iret
movsb
rcl
ja
inc
enter
aam
xchg
jecxz
jl
leave
movsl
jbe
jns
mov
fcmovb
jge
sub
movsb
ret
daa
cmc
xchg
push
cwtl
add
jecxz
add
pop
test
repz
daa
leave
or
orl
aas
or
sub
gs
mov
and
inc
rorb
int
js
outsl
push
xchg
lock
push
cli
scas
cmp
lcall
lea
sub
scas
in
pop
stos
daa
dec
nop
adc
adc
sub
jne
std
movsl
in
xchg
xchg
pop
scas
filds
ficoms
sarl
xor
call
cmp
push
pop
movsl
nop
cmc
dec
test
sbb
test
fildl
pop
notb
pop
cmpsl
aad
ljmp
mov
insl
pop
movsb
xchg
fisubrl
cmp
cld
jl
jecxz
in
mov
mov
les
sub
cmp
mov
dec
shlb
push
ss
movsl
mov
jecxz
arpl
jbe
mov
and
jl
jns
and
jecxz
mov
cltd
or
adc
inc
jbe
fneni(8087
jmp
sbb
loop
scas
jo
in
xor
cmp
outsl
adc
push
mov
movl
fstpt
fildl
and
cmp
lahf
adcl
jmp
das
xlat
imul
mov
push
sti
repz
xchg
sub
xlat
cli
fucomp
adc
jne
mov
cmp
das
and
outsl
insb
std
pop
stos
sarl
push
mov
js
sub
aam
adc
adc
movsl
ljmp
xchg
jmp
test
sub
add
pop
dec
into
shrl
adc
or
sub
ret
and
nop
repnz
mov
lea
xor
jge
daa
and
mov
or
scas
jmp
add
imul
mov
insb
sbb
dec
dec
jmp
push
mov
stos
fcoml
shrl
loopne
and
rol
stos
aad
push
shr
dec
test
lret
pop
daa
xchg
inc
lahf
pop
inc
inc
faddl
ds
pop
leave
pop
and
add
inc
push
xchg
fiadds
ljmp
push
mov
xchg
popa
inc
jae
mov
into
dec
sub
incl
adc
pushf
fldcw
jne
mov
adc
gs
mov
push
cli
adc
addb
xor
jg
pop
iret
inc
rolb
rolb
jne
lds
sub
ja,pt
mov
adc
bound
lds
xchg
pop
inc
xlat
mov
fcmovne
cwtl
lds
mov
xchg
out
xchg
ja
push
xchg
adc
std
fsubrl
jno
xchg
jmp
adc
jnp
sub
adc
movsl
xchg
cmp
lock
xchg
fdiv
je
xchg
push
fbld
push
inc
dec
test
xor
mov
or
and
pop
mov
xorb
out
jnp
lret
and
cmpsl
mov
pusha
jne
outsb
test
sub
es
dec
push
lea
sbb
push
mulb
add
cmp
xchg
shll
outsb
mov
ds
jmp
cmp
fs
stc
sbb
xor
andl
mov
enter
stc
adc
es
jg
cs
inc
sahf
jmp
cld
hlt
hlt
pop
lcall
add
das
inc
jns
sahf
pop
push
cmp
dec
pop
aaa
jecxz
add
push
sti
mov
push
adc
enter
in
mov
sbb
or
in
rclb
movsb
xchg
lods
aam
mov
rcrl
xchg
inc
sbb
mov
pusha
push
inc
mov
subl
cmc
mul
loopne
stos
leave
dec
ds
adc
mov
enter
xchg
add
lcall
push
or
outsl
mov
lds
loope
fwait
pop
mov
dec
sbb
inc
xchg
push
cld
fnsave
gs
and
fs
mov
add
lahf
shlb
mov
mov
mov
or
insl
aad
cltd
in
cmp
push
fbld
stos
nop
mov
ljmp
mov
std
decl
test
ret
cltd
inc
orb
mov
xchg
xor
jb
jns
imul
push
mov
cwtl
cli
lahf
push
mov
xchg
repz
push
int3
pop
jecxz
mov
fucom
xchg
push
dec
xchg
fdivrs
pop
ljmp
push
adc
adc
xor
pushf
lret
xchg
mov
adc
out
pop
push
sub
lret
pusha
outsl
clc
andb
rcll
stos
pusha
add
mov
inc
mov
aam
xchg
lods
xchg
or
add
cmpsl
pop
call
enter
push
xor
jge
pop
mov
fdivp
push
lcall
cmp
pop
dec
pop
js
sub
push
add
dec
lea
inc
mov
sahf
mov
push
dec
pop
and
in
fstpl
sub
pop
add
ds
fildll
ds
int
mov
inc
scas
push
or
push
je
cwtl
pop
iret
rolb
cmpb
aaa
xchg
push
ja
jl
push
sub
repz
fistpll
into
fisttpll
in
sbb
push
retw
hlt
outsb
and
jo
sub
xchg
xchg
cli
pop
sahf
repz
rcl
sbb
push
sub
sbb
pop
fldt
insl
arpl
fwait
hlt
sbb
out
int3
sbb
dec
mov
adc
mov
in
sub
mov
jmp
mov
and
push
imul
push
pop
pusha
insb
out
mov
push
push
push
js
pop
cmpsl
in
insl
jno
xchg
xor
cs
cmp
jo
shlb
xchg
adc
jnp
out
xchg
movups
in
ja
cmp
enter
or
fwait
pop
jg
add
jo
jae
xchg
aaa
fneni(8087
jle
xor
test
lock
dec
into
scas
int3
dec
repz
imulb
jg
and
jmp
cmp
mov
rcl
test
or
or
mov
popa
stos
insl
aad
cmpsb
stc
or
test
or
xlat
mulb
add
jbe
mov
mov
dec
fsubr
lahf
ja
xchg
cltd
cli
sub
or
cmpsb
mov
cmp
mov
cmp
push
mov
inc
inc
dec
fnstsw
popf
jno
or
push
add
mov
add
or
mov
or
adcb
mov
sahf
xchg
adc
repnz
and
mov
nop
jg
test
dec
or
pop
rcrb
cmpsl
call
sahf
mov
xchg
jae
jecxz
loop
arpl
movsl
es
je
sub
sbb
orb
lret
inc
or
testl
imul
sbb
adc
or
xchg
jbe
xchg
xor
mov
lods
lahf
jecxz
pop
sbb
pop
ret
test
out
leave
test
cmc
ss
push
jns
sub
in
cmp
jmp
adc
push
xchg
insl
adc
and
test
lfs
test
xor
into
inc
cmp
sub
and
sti
xchg
ret
repnz
ret
mov
or
sbb
mov
jmp
incl
stos
fsts
outsl
xchg
sahf
jno
insb
rcrl
lahf
inc
push
loop
rorb
mov
jmp
xchg
pop
sahf
pop
and
add
movsb
jne
jge
shl
push
push
add
outsl
lret
out
xor
or
test
popf
pop
call
or
loope
mov
out
lods
fwait
cmp
or
fwait
mov
mov
lea
adc
dec
imul
out
stc
clc
int
jbe
andb
enter
sbb
mov
add
bound
and
pop
mov
cmpsl
inc
add
in
hlt
mov
out
lea
insb
mov
mov
cmp
lcall
pop
add
dec
rolb
xchg
sahf
sub
xor
push
popf
add
repnz
inc
xlat
mov
adc
inc
push
popa
fwait
fs
out
lock
mov
rclb
mov
pop
cmp
loope
js
push
xchg
andb
test
mov
insb
lcall
fcomp
lods
push
stc
mul
pushf
cmpsl
sub
adc
ss
incl
vpermil2pd
enter
dec
sub
and
std
xchg
shr
dec
dec
push
pop
dec
push
and
or
arpl
mov
and
fdivrl
outsl
xor
push
in
adc
gs
sbb
stc
btr
sbb
sbb
lods
mov
outsb
sahf
sbb
and
adc
sub
arpl
push
cmpsb
sbb
loopne
jg
xor
loopne
movsl
inc
mov
and
in
adc
xor
subl
neg
xor
jb
xor
or
fwait
pop
outsl
mov
adc
fnsave
or
fmuls
pop
out
xchg
mov
mov
pop
sub
aam
adc
xchg
push
push
out
in
jmp
sub
and
mov
lods
inc
inc
push
sbb
xchg
scas
mov
add
push
rorb
xlat
pop
imul
xor
pop
adc
dec
dec
jecxz
roll
xor
test
mov
inc
sbb
pop
mov
fdivrs
sub
pop
adc
sub
and
push
ja
pop
pop
data16
mov
sub
xor
sub
cltd
aas
rorl
out
pop
adc
and
jnp
sbb
sbb
mov
popa
outsb
cmpsb
sub
mov
ret
jb
lods
std
psubq
sub
shll
push
int
xor
xchg
nop
adc
loope
bound
and
xor
not
xor
repz
cli
shrl
pusha
jb
outsb
cmpsl
jbe
neg
lcall
in
sub
xor
sti
push
mov
add
cmc
adc
hlt
mov
rorl
aam
mov
pop
insb
les
in
hlt
test
call
fcmovnu
push
xor
sti
push
push
or
out
testl
inc
rorl
cmp
xchg
push
mov
sbb
xchg
rcll
pop
inc
xor
sub
popa
js
xchg
and
imul
add
dec
push
xor
mov
dec
cmp
in
in
xchg
scas
push
pop
jge
imul
into
or
sti
rol
add
or
cmp
xor
imul
rol
mov
xchg
das
push
xor
insb
xor
icebp
fincstp
mov
test
mov
lds
inc
nop
cmp
ja
into
testl
fwait
call
outsb
ss
notl
adc
sbb
fmull
mov
out
jae
ret
mov
inc
cltd
mov
inc
push
ficoms
subl
pop
insb
stc
fistpl
fbstp
imul
mov
adc
rorb
mov
xchg
ds
pushl
sub
push
bound
mov
aaa
inc
imul
sbb
sbb
jb
xchg
dec
lahf
mov
jmp
fimuls
push
nop
sti
clc
lock
rcr
pop
pop
xor
repz
cld
stc
pop
sbbb
data16
clc
pop
aas
movsb
ret
xchg
add
push
lds
scas
stos
stos
add
push
out
push
xchg
cli
popa
lcall
out
fldl2e
flds
adc
xor
push
mov
push
cld
iret
nop
mov
ffree
int
mov
cwtl
mov
mov
lahf
mov
lds
xchg
dec
inc
dec
outsl
cwtl
push
dec
rcrb
stos
sub
cltd
out
jnp
ja
inc
cmp
in
hlt
xor
sbb
lret
sahf
push
push
stos
stc
mov
pop
inc
lcall
aad
dec
in
mov
and
jg
shrb
pop
mov
sbb
jno
xchg
faddl
pop
insl
adc
inc
pop
mov
push
dec
pop
pop
dec
and
ret
jbe
dec
xchg
jne
cli
leave
push
pop
icebp
push
jp
addr16
xchg
jmp
je
xchg
rorl
ja
adc
push
imul
sahf
xor
out
andl
pop
pop
movsb
add
pop
jmp
sahf
adc
in
adc
push
ret
ss
push
sub
dec
pop
pushf
shlb
fiadds
insb
and
lea
das
jae
dec
std
xchg
std
sub
or
push
sbb
mov
inc
idivl
mov
in
xchg
push
shr
les
xchg
rcrb
xchg
cmp
push
je
subl
repz
push
shrl
mov
shl
jmp
int3
ror
or
into
fcoml
push
pusha
push
rorb
lods
int
and
xchg
mov
jecxz
sbb
aaa
add
dec
pop
lahf
mov
xchg
and
xchg
lods
sbb
add
ljmp
xlat
mov
sbb
rol
add
je
push
fstpl
add
jg
scas
out
es
std
mov
cmpsb
dec
or
push
or
aas
loope
fmuls
adc
imul
ja
xchg
mov
out
and
push
popa
mov
jo
jne
lods
loopne
lock
nop
push
mov
clc
sub
stc
pop
or
push
in
insb
ret
es
push
arpl
mov
xor
repnz
xchg
pop
add
hlt
xor
fdivrl
xor
je
xchg
pop
repz
aad
push
out
std
lret
push
insb
add
and
shll
notl
adc
incl
fisttpll
inc
in
push
cli
int3
in
jle
inc
dec
xchg
addr16
out
push
add
mov
jp
mov
icebp
or
pop
cmp
cmp
dec
mov
in
lods
jae
ret
dec
sub
pop
data16
adc
repnz
cmpsb
sub
mov
repz
dec
or
jbe
mov
loopne
cmpsl
imul
movq
insl
add
out
cmp
les
push
out
leave
dec
lret
scas
fsub
dec
push
xor
ss
arpl
fdivr
add
and
lret
mov
inc
andb
sbb
jno
stos
adc
jns
or
ficompl
sub
hlt
pushf
cltd
mov
pop
int
xor
leave
push
lods
mov
dec
mov
rorl
sbb
fadds
setb
sbb
loope
stos
or
sub
sub
or
icebp
scas
lock
mov
mov
out
xchg
iret
adc
ret
xchg
and
sbb
adc
in
lahf
pop
fxch
jecxz
pop
icebp
xor
lods
std
push
imul
cmpsb
test
scas
aad
and
lcall
mov
mov
sub
dec
test
out
pop
mov
loop
adc
rorb
daa
es
fwait
mov
insl
or
icebp
insb
iret
sbb
jl
iret
push
fisubrl
mov
addr16
sub
out
cs
outsb
jmp
andb
inc
jp
mov
aas
ljmp
push
adc
xor
xor
adc
ret
lea
push
adc
and
adc
inc
ss
call
pop
cmp
inc
dec
sub
movups
and
xor
in
pop
push
jnp
cwtl
adc
repnz
mov
push
imul
xchg
mov
jnp
mov
mov
dec
repz
out
std
adc
dec
pop
testb
cwtl
dec
ss
pop
jge
add
data16
insl
repnz
xor
repnz
lret
cmp
xor
nop
jecxz
das
pop
add
std
add
ja
or
je
sti
or
shll
cmp
cmc
bound
fdivl
leave
stos
pop
push
inc
push
dec
push
mov
ljmp
mov
rorb
adc
adc
sub
int3
pusha
dec
pushf
cmc
loopne
daa
js
cmp
sbb
fnstcw
int
push
mov
sub
lock
mov
pushl
hlt
popa
popa
pop
aaa
jo
mov
imul
pop
jbe
cmp
and
pushf
jecxz
adc
int3
test
lods
popf
adc
adc
test
or
dec
mov
stc
xchg
xor
ljmp
fisttpll
push
leave
outsl
movsb
repnz
add
jmp
jge
nop
xchg
xor
or
pop
or
pop
lds
in
decl
scas
es
addr16
jns
test
sub
pop
pop
test
mov
mov
cli
dec
add
ret
lahf
addr16
cwtl
inc
sub
xchg
test
in
cltd
pop
pushl
and
mov
test
mov
mov
stos
popf
xchg
ljmp
adc
cmc
mov
jmp
pusha
ja
sahf
dec
inc
insl
in
jae
decb
test
xor
push
mov
add
je
or
lret
xchg
lret
push
insb
sti
iret
pop
in
sbb
mov
and
mov
popfw
ss
jne
jecxz
and
stc
pop
push
cli
jns
mov
sub
fiadds
incb
sbb
ret
mov
movsb
and
arpl
mov
lcall
jge
pop
rcrl
imul
or
cmp
xchg
jae
adc
fs
add
test
dec
loop
inc
jg
push
test
mov
mov
daa
jb
cs
icebp
xorb
cs
add
xchg
aaa
push
stos
push
decl
pop
mov
in
testl
loopne
testl
mov
adc
sahf
out
mov
mov
hlt
push
xor
xor
add
test
in
mov
in
sub
or
and
cmpsl
inc
std
fldt
add
flds
scas
and
pop
xlat
ret
movsl
jmp
add
aaa
adc
xchg
jo
mov
fnstcw
sbb
inc
mov
pop
aad
push
movsl
jns
jae
repz
lea
push
inc
pop
sbb
add
push
sbb
shll
call
xor
cmpsl
inc
loopne
imul
adc
dec
mov
mov
mov
or
pop
dec
mov
pop
loop
jg
aam
out
or
sub
pop
mov
xlat
popf
mov
mov
icebp
sbb
sub
aas
mov
shr
sbb
in
cwtl
mov
push
je
daa
ret
popf
mov
xchg
sti
sub
adc
and
add
mov
sbb
aaa
movsl
cmp
leave
imul
push
fcmovb
and
in
or
pusha
push
test
in
ja
adc
inc
mov
cltd
int
mov
rorb
js
orb
mov
and
and
out
mov
dec
push
enter
or
nop
adc
cli
repnz
mov
mov
push
shlb
adc
adc
jns
je
jnp
daa
mov
jne
out
xor
lods
jmp
iret
in
adc
jmp
push
or
imul
and
jecxz
data16
movsb
sbb
lcall
sbb
imull
xlat
ret
push
mov
add
popa
insb
mov
gs
sub
adc
addr16
mov
mov
imul
hlt
mov
sbb
sub
in
sub
inc
cmp
dec
in
dec
cmpsl
mov
xchg
push
xchg
dec
dec
movl
je
dec
or
xchg
das
gs
roll
add
das
ljmp
xchg
in
jae
shlb
push
sub
fcoml
pop
jno
mov
out
add
test
stos
xchg
sub
inc
aam
jo
lock
add
mov
int3
popa
sbb
xchg
fstl
push
adc
insb
shl
fcomps
dec
sub
imul
cmp
imul
sahf
loop
stc
mov
stos
xorb
xchg
test
dec
scas
leave
mov
add
adc
pusha
ja
lret
int
push
xlat
fldl
ret
or
iret
and
and
mov
mov
and
push
testl
pop
jg
inc
dec
repnz
fisubs
lahf
pop
data16
pop
rol
xchg
out
dec
push
mov
jmp
pop
pushf
rclb
sarb
ja
jno
push
mov
arpl
cs
loop
leave
enter
das
sbb
aaa
pushf
orb
push
jecxz
inc
cmp
jns
rcr
xchg
rclb
cmc
push
and
sub
out
in
test
push
and
mov
lcall
aas
lcall
in
and
cmp
cli
and
sbb
repnz
mov
arpl
jmp
fstpt
cmc
xchg
enter
in
lock
jl
mov
mov
pop
lret
aam
aam
or
clc
mov
lcall
repnz
cmc
xchg
push
ret
inc
data16
add
mov
jp
outsb
mov
pop
mov
add
jnp
scas
mov
popf
es
icebp
push
add
push
inc
cmp
mov
push
cmp
jb
sbb
outsl
sub
imul
mov
fistps
mov
mov
mov
cmp
jmp
inc
jnp
pop
mov
imul
mov
cwtl
movsl
sbb
cmp
dec
inc
in
popa
cmp
imul
shl
and
jmp
push
out
stos
fmuls
mov
sti
or
mov
push
ror
and
or
arpl
cmp
pop
dec
xlat
cld
in
push
test
daa
call
adc
pop
mov
sbbb
vpmulhw
cld
imul
and
cmpb
mov
fists
into
loop
pop
imulb
js
mov
cwtl
stc
mov
in
pop
fwait
enter
in
pop
mov
cld
les
popf
mov
mov
mov
sbb
xchg
lea
daa
lret
daa
lds
cli
sub
pop
sarl
insb
mov
loope
loope
test
sub
sbb
pop
jb
cmpsl
jns
jmp
mov
xor
cli
fstl
call
and
ss
aas
mov
mov
push
shrl
test
fiaddl
adc
jg
mov
cmp
and
stos
je
bound
adc
mov
inc
test
xor
xchg
mov
xor
rcrb
push
adc
cld
cld
pop
and
jecxz
gs
jg
mov
mov
notl
pushf
inc
ja
adc
call
scas
std
scas
iret
leave
lcall
nop
movsb
and
or
out
test
fwait
ss
dec
int
fmuls
inc
fwait
xor
inc
adc
imul
mov
lcall
pop
jle
adc
mov
popf
sub
sbb
push
xlat
mov
or
sub
insb
shlb
sbb
js
cmp
roll
fisubs
mov
sbb
scas
add
inc
stc
inc
mov
incl
popa
lahf
push
dec
pop
mov
cld
into
add
mov
adc
cmpsb
mov
mov
out
aam
push
add
hlt
or
push
jmp
aaa
xchg
out
jp
clc
stos
pop
mov
mov
adc
sub
jns
push
pop
aam
je
cmpsb
jge
inc
icebp
xchg
xchg
pushf
inc
xor
into
nop
push
jnp
jecxz
add
frstor
jne
mov
int
cwtl
cli
add
stc
push
mov
push
and
out
push
dec
pop
inc
int
mov
in
mov
and
mov
sbb
or
outsb
xor
in
rcll
lcall
xor
ljmp
push
mov
mov
enter
icebp
adc
push
pop
jmp
shll
or
push
fistl
scas
in
inc
push
xor
dec
xchg
lds
pop
rcr
lcall
jae
mov
dec
lea
nop
aad
fwait
mov
lock
pop
clc
add
xlat
push
xchg
dec
mov
mov
push
add
inc
fnsave
cmpsb
xchg
jns
ficomps
inc
add
rcrl
mov
jle
mov
rcl
dec
adc
and
push
xor
fbld
imul
mov
xor
enter
shll
outsb
scas
pusha
mov
fs
push
xchg
mov
int3
rcrl
push
ffreep
push
push
mov
sub
outsb
rcl
lahf
stos
lds
fildll
jns
das
mov
and
fisttps
push
stos
xchg
mov
sub
addr16
cmp
xchg
xor
mov
aaa
sub
shll
jae
cli
mov
cmova
add
xchg
or
pop
mov
adc
aas
push
dec
cmp
jne
adc
inc
cli
mov
loopne
adc
adc
sarl
fwait
loope
xchg
cmp
inc
jg
sub
jne
add
insb
out
mov
cmp
lods
add
jl
pop
adc
add
xor
xor
je
mov
ret
imul
ja
fsubrl
ficompl
shrl
test
insb
addr16
cli
in
lret
xchg
shrb
cld
and
dec
jb
adc
loope
rol
pop
inc
sahf
sbb
xchg
movb
das
repz
sub
or
int
sub
icebp
push
sbb
pop
les
mov
idivb
or
xlat
ljmp
das
jbe
mov
push
les
loope
loop
mov
jbe
sets
mov
inc
fs
stos
mov
or
test
imul
addr16
lods
repz
xchg
aad
dec
xor
push
pushf
movsl
ret
adc
call
andl
adc
sub
cmp
aas
in
jns
insl
cld
xor
addr16
add
ja
outsb
pop
xchg
pusha
jns
cmp
stos
xchg
mov
mov
stos
ret
push
or
dec
or
sbb
mov
xor
and
mov
mov
out
fwait
movsb
int
sbb
and
sub
dec
int3
fiaddl
rcl
test
js
outsb
cmpsb
cmpsb
sahf
scas
adc
fsubl
in
or
fnsave
cmp
jp
add
pushf
hlt
xor
int
dec
inc
add
inc
fsubrs
inc
divb
jg
icebp
xor
mov
inc
flds
jno
mov
mov
sub
mov
jb
xchg
repnz
test
cmpsb
pop
cmpsl
cmc
lea
or
cmp
int3
dec
xchg
enter
stos
bound
and
fwait
mov
nop
pop
test
stc
scas
icebp
sub
pop
inc
mov
dec
in
push
mov
sar
mov
mov
js
popa
push
push
or
test
sbb
xchg
fwait
xchg
jno
hlt
add
notb
sbb
add
push
jno
mov
pop
and
test
jmp
pop
xchg
xchg
inc
mov
iret
int3
jl
sti
jae
imul
mov
pop
sub
adc
push
iret
sub
rcll
ret
fldl2t
into
sbb
mov
dec
add
add
jge
test
lds
sub
lods
adc
leave
pop
aas
xor
jb
stos
or
add
shl
sbb
loop
into
xchg
xchg
pop
mov
push
cmp
push
mov
addl
in
pop
xchg
scas
push
aam
add
cmpsb
std
mov
mov
pop
adc
rcrb
arpl
jmp
aaa
addr16
enter
loopne
movw
mov
les
cwtl
fsubrl
gs
sub
pop
mov
ror
pop
and
inc
cltd
cmpsb
sub
es
mov
shlb
int
or
int
ret
and
adc
dec
cmp
in
idiv
or
mov
push
loop
or
fcomp
out
int
in
mov
mov
movsb
lret
stc
subb
mov
xchg
je
rcll
xor
pop
es
and
mov
add
pop
pop
stos
inc
cmc
xchg
dec
sarl
xchg
fs
sub
jecxz
std
jmp
fs
repnz
insb
pop
push
xchg
cmc
cs
sub
leave
mov
dec
dec
nop
xchg
popa
ja
adc
sbb
cmp
insb
sub
push
iret
push
dec
add
and
and
xor
aam
xchg
mov
mov
adc
pop
inc
mov
daa
pop
imul
jns
fwait
dec
js
andb
popf
xor
xchg
ljmp
sti
push
scas
andl
movb
fst
lods
sub
cli
nop
hlt
mov
dec
insb
test
bnd
imul
dec
and
hlt
or
mov
and
xor
adc
mov
repnz
sub
in
mov
xchg
sub
push
sub
push
cld
jecxz
orb
lret
fsubrl
iret
int
in
loopne
pop
inc
and
dec
xor
rep
mov
pushf
jl
pop
fldl
mov
jg
outsl
pop
ret
mov
pop
not
jg
xchg
xchg
add
fldenv
add
cld
dec
sbb
xor
hlt
mov
and
in
lock
push
mov
pushf
adcl
push
xchg
les
lahf
sbb
cmp
push
jae
inc
mov
mov
and
sub
push
call
lods
cwtl
dec
lretw
loope
mov
mov
or
xchg
inc
push
std
mov
shlb
inc
mov
dec
fisubs
je
sbb
stc
mov
adc
popf
mov
xchg
push
lahf
in
or
mov
ss
mov
mov
sub
js
pop
mov
xchg
outsb
sti
cmpb
and
push
cwtl
or
cmp
sbb
imul
xor
fs
sbb
dec
mov
mov
bound
mov
xchg
pusha
push
jae
or
idivl
mov
sub
mov
mov
cmpsl
cmpl
loopne
fiadds
mov
hlt
fdiv
or
dec
inc
shlb
inc
adc
xor
lds
sub
cmp
pop
and
aas
test
movsl
daa
sbb
jecxz
and
mov
dec
jb
insb
mov
add
jp
aaa
test
inc
mov
daa
fildl
in
ret
xor
or
hlt
cmp
aad
test
pop
jge
xlat
lret
mov
ret
xchg
and
fs
lahf
and
jmp
pop
add
test
aaa
xorb
add
and
or
fiadds
mov
repz
xchg
and
and
push
outsb
popa
jo
jmp
sbb
pop
imul
mov
lcall
cltd
lock
fs
and
popa
jl
xchg
add
or
loope
pop
push
xor
jp
cmpb
push
xchg
leave
adc
daa
or
mov
ficoml
in
popa
andb
pop
jecxz
pop
inc
add
pop
inc
xchg
xchg
repnz
fsubl
xchg
sub
sub
cmp
mov
inc
jle
sbb
mov
sarb
inc
dec
adc
or
add
adc
mov
les
ret
mov
inc
sbb
hlt
das
push
and
in
and
fimull
jne
nopl
cmpl
addr16
dec
je
call
fwait
mov
cmp
jne
jp
jle
adc
aas
mov
mov
jnp
jmp
sbb
repnz
movsl
push
loopne
mov
mov
mov
inc
fisttps
dec
push
addr16
or
and
fsubrp
dec
jge
fst
insb
sub
xor
jae
jg
and
sbb
out
mov
jnp
adc
mov
xchg
or
fistl
cmp
push
sbbl
jle
xlat
fistl
inc
mov
ret
notl
cmp
add
pop
std
xchg
push
push
shr
or
cmpsl
lock
xchg
mov
jle
add
cmp
incb
jns
mov
repnz
into
dec
mov
cmp
movb
lock
or
or
inc
fabs
lcall
fildll
add
jecxz
addl
dec
icebp
or
fwait
lcall
arpl
cmpsl
cmpsb
xchg
push
dec
pop
or
ret
sbbb
rorl
je
ja
jns
ret
clc
fwait
js
fsub
sti
fadd
xchg
fiaddl
jge
out
fs
sbbl
pusha
dec
sbb
shrb
jno
xchg
into
in
int
mov
adc
out
int
outsb
es
sbb
xchg
subb
xor
push
lahf
pop
sbb
ret
sub
pop
pop
cltd
fidivrs
repz
movsl
ja
fcomip
insb
out
jmp
scas
cs
out
shrb
lret
xchg
mov
cmpsl
or
dec
adc
dec
pop
mov
icebp
cmp
mov
idivl
imul
cli
je
imul
stos
add
outsb
and
shll
out
pop
jg
pop
daa
xchg
jae
loopne
mov
jne
xorl
sub
jmp
cwtl
test
push
inc
in
stos
adc
inc
jne
mov
inc
cmc
std
movsb
push
aad
clc
sahf
pop
add
jbe
push
cmpsl
xchg
mov
in
pop
or
fisubl
fwait
sub
sub
fldl
int
pop
es
fnstenv
scas
xchg
xlat
push
cmpl
mov
push
sbb
jb
and
pop
mov
mov
out
shlb
inc
or
test
ret
xchg
daa
jno
push
je
jp
add
jno
xchg
les
cmpsb
adc
push
push
pop
adc
and
jge
xlat
fs
and
xchg
cmc
repz
mov
fildll
or
cmp
xor
and
xor
cmp
xor
push
mov
inc
jmp
inc
dec
sbb
or
inc
repz
test
cs
lods
sahf
popf
nop
xchg
cmp
movsl
icebp
frstor
stos
lcall
arpl
push
sub
mov
jl
inc
call
je
adc
cmc
rcr
cmp
jbe
outsl
mov
fstpl
lret
push
fbld
js
xor
sbb
jle
rcrl
int
fst
push
mov
mov
jg
adc
int
pop
shll
mov
int
jae
xchg
stc
adcb
lock
loop
jns
pop
cltd
cmp
smsw
mov
in
jne
push
shl
sbb
cmp
adc
jnp
popl
ss
dec
cmpsb
cmp
out
ja
push
int3
cmp
int
lods
inc
adc
jl
push
xor
mov
les
inc
iret
cmp
jo
mov
jo
jl
test
movsl
movsl
inc
cmpb
iret
mov
mov
inc
mov
mov
pusha
scas
push
int
xor
jle
fmull
dec
cwtl
xchg
loop
cmp
test
xchg
xor
dec
outsl
cmp
ret
stc
jno
push
in
xor
dec
fidivl
sbb
jmp
xchg
enter
cli
pop
mov
pop
es
jbe
sub
and
out
loop
nop
xlat
sub
or
jo
add
or
fimuls
push
test
sub
int
jns
sahf
enter
aas
adc
leave
cmp
mov
mov
adcl
xor
leave
push
inc
add
iret
sarl
sti
xlat
or
mov
loopne
pop
mov
scas
mov
xchg
into
mov
rcrb
mov
cmp
mov
outsb
xchg
mov
mov
negl
dec
mov
jmp
fistpll
ret
xchg
mov
xor
sub
sahf
sub
and
xacquire
ret
fwait
xor
and
lahf
ret
sub
stos
sarl
fmull
repnz
or
and
and
out
pop
repnz
add
imul
xchg
adc
jp
test
cmp
xchg
xchg
and
out
rcrb
xchg
int
lods
hlt
sbb
xor
daa
mov
movsb
outsb
inc
js
fwait
mov
adc
mov
mov
sbb
sbb
fmuls
pop
loop
into
add
mov
repz
shl
inc
cmp
rorb
and
mov
aam
adc
xchg
sti
sbb
cwtl
and
adcb
out
fimull
dec
pop
add
mov
mov
mov
push
repz
leave
pop
call
xchg
or
xor
mov
sub
addb
inc
jecxz
xchg
push
jb
lahf
push
xor
add
insb
subb
xor
mov
cmpl
shrl
loopne
je
sub
jmp
mov
mov
dec
aad
jne
dec
xchg
add
fcmovnbe
inc
adcl
jl
in
xchg
ljmp
xchg
scas
jne
push
cs
and
incl
roll
aam
rcr
lahf
inc
pop
fsubrl
pusha
xchg
xchg
call
repnz
pop
fprem1
aad
mov
dec
jle
subl
idivl
sub
or
cmpsl
xor
bound
fwait
jl
dec
sbb
call
jecxz
pop
sub
mov
jl
mov
int
lock
push
or
mov
test
mov
inc
ret
test
stc
add
icebp
mov
ret
sbb
scas
push
mov
scas
icebp
adc
out
xor
mov
mov
outsb
repnz
test
test
push
cwtl
stos
jge,pt
aad
inc
aad
pop
std
push
add
mov
pop
and
clc
and
or
push
lods
bound
mov
dec
adc
test
sub
insl
or
mov
xchg
shrl
xor
insb
mov
jge
mov
xor
jae
and
xchg
push
scas
roll
mov
lods
push
call
pop
nop
push
dec
xchg
pop
popa
cld
in
jns
mov
or
sbb
sub
in
rcr
dec
or
idivl
xchg
push
or
fsubrl
popa
jns
dec
sbb
or
inc
sub
daa
imul
sub
fcomp
fdivs
inc
push
mov
push
addr16
sub
jnp
sbb
push
cmp
mov
add
jle
stos
mov
loopne
dec
mov
out
fs
andl
stos
std
xchg
loope
cmc
fstpt
test
leave
fcmovu
repnz
mov
xchg
lcall
subl
repz
pop
cmp
sub
lcall
subl
faddl
arpl
addr16
popa
add
jns
aam
data16
jp
fwait
sbb
pop
sbb
push
mov
cmp
inc
in
sbb
out
lcall
ja
mov
imul
in
inc
test
push
jae
dec
fmulp
or
ret
xorl
rol
sub
insl
xchg
or
add
mov
stos
cmpsl
dec
addl
out
or
jp
cmp
test
sub
push
jbe
xor
xchg
int
insb
outsb
fcmovne
and
xchg
sub
nop
cs
xchg
cmpsl
xor
lods
sahf
mov
out
fsubrs
out
icebp
mov
xchg
lea
in
wbinvd
and
repnz
jnp
movl
sarl
mov
sub
inc
test
dec
jnp
jl
es
add
cmp
mov
cmp
push
aam
stc
outsb
js
in
xchg
cmc
pushf
mov
cmp
out
add
push
cmpsb
rcll
fiadds
sbb
stc
cltd
push
test
hlt
mov
lret
sub
adc
mov
hlt
mov
xchg
gs
and
adc
pop
pop
xchg
mov
dec
pop
lods
xor
push
jecxz
jb
fsubr
rcl
lret
add
sbb
inc
cltd
mov
cwtl
mov
xchg
pop
loopne
insl
das
sub
lcall
mov
sbb
xor
add
mov
inc
jge
les
shl
jne
xchg
popf
sub
cmp
mov
mov
push
push
inc
sbb
lret
sub
pop
dec
addb
dec
arpl
and
pop
out
outsl
mov
cld
jno
cmp
outsb
mov
dec
out
xor
mov
mov
jle
sbb
cmp
lds
add
outsl
fst
adcb
mov
cmpsb
jb
dec
sbbb
ja
outsl
sbb
ja
cli
scas
ss
ss
stc
aam
cwtl
xor
fsin
mov
xor
fidivl
mov
inc
lock
dec
jg
das
negl
std
or
mov
push
inc
push
mov
dec
inc
ss
dec
mov
or
mov
fdivp
mov
popf
xchg
push
pop
mov
xchg
cmpsb
imul
mov
mov
jmp
push
dec
pusha
loopne
xchg
cmp
mov
mov
jo
mov
or
outsb
push
adc
je
ja
mov
jg
sbb
or
pop
pop
leave
xor
push
pop
scas
in
dec
xchg
mov
add
or
dec
xor
shll
mov
test
imul
test
or
jne
or
xchg
jmp
jo
xor
xchg
divb
sbb
add
dec
add
jle
loop
mov
mov
jbe
sar
ja
xor
inc
mov
sub
mov
add
sub
sbb
lret
mov
in
adc
sub
jle
xchg
arpl
aad
pop
hlt
pushl
mov
in
ds
test
add
sbb
int
mov
imul
sbb
ror
mov
bound
dec
pop
inc
cmpsb
fmuls
jl
loope
loopne
jno
mov
mov
fists
push
flds
lcall
enter
adc
or
jns
xchg
out
mov
jp
pop
dec
inc
in
push
insb
jo
arpl
xor
loopne
fdivp
in
dec
cltd
repz
sbb
and
fwait
addl
add
or
inc
cmp
dec
pop
loopne
popa
jmp
xchg
cmp
add
adc
shrd
ss
jno
in
pop
jbe
jl
lea
outsb
mov
test
dec
xchg
mov
jge
insl
std
add
xchg
int3
inc
popw
push
jne
xor
int3
push
mov
fcoms
push
bound
or
dec
xchg
jbe
in
cmp
ret
mov
orl
inc
sbb
pop
adc
stos
mov
in
cltd
jbe
lds
mov
xor
imul
shl
jge
mov
gs
sbb
mov
movsb
call
test
pop
mov
dec
mov
pop
inc
call
mov
pop
pop
inc
ficomps
shll
jp
fwait
sub
or
scas
call
testb
and
mov
sbb
in
out
mov
imul
iret
into
add
jnp
xor
mov
inc
les
jae
scas
push
clc
in
ds
push
bound
test
mov
inc
mov
into
sbb
fdivp
stc
sub
decl
jmp
aaa
mov
jns
cmp
add
dec
cld
xchg
int
push
add
sbb
mov
or
mov
mov
inc
mov
push
cmpsl
and
push
std
mov
push
dec
icebp
outsl
pop
sahf
mov
lods
lret
add
notb
mov
add
dec
jp
frstor
movsb
jecxz
push
xlat
inc
jno
roll
xchg
or
stos
bound
sbb
mov
outsb
cmpsb
inc
inc
aas
gs
xchg
jnp,pn
sbb
leave
loop
aas
lcall
inc
lods
sar
daa
fdivr
ficomps
ljmp
cs
mov
lea
jmp
xor
leave
scas
push
push
fisubl
jmp
mov
sub
cltd
cld
stos
loop
jg
je
mov
add
mov
mov
jp
insl
test
ret
lea
scas
mov
test
sub
enter
std
pushf
pop
dec
pushw
sub
rorb
ljmp
or
sti
rcll
fdivs
or
mov
jl
pop
dec
jae
adc
xlat
andb
loope
push
stos
inc
repnz
push
xchg
mov
mov
lods
imul
daa
in
iret
pop
aam
dec
cld
iret
pushf
xor
movsl
dec
xor
out
loop
mov
aas
or
xor
clc
cmp
lea
mov
adc
cli
sub
or
std
push
push
dec
adc
dec
fnstenv
stos
fstl
stos
xchg
fs
loope
movl
sub
and
lea
jp
pop
mov
cmp
fstpt
adc
push
cmp
sbb
dec
popa
call
mov
fnstsw
leave
push
orl
jecxz
pop
push
mov
and
insl
fisttpll
push
dec
lods
inc
push
and
xchg
or
mov
adc
xor
aam
fcoms
mov
clc
mov
repz
mov
popf
ja
mov
mov
cmp
pushf
jo
es
xor
pop
fstl
mov
cmp
pop
movsb
push
cs
xchg
cltd
div
xchg
jns
notl
aaa
xor
add
sub
pop
stc
dec
out
fadds
pop
mov
pop
ret
test
scas
out
ljmp
in
mov
test
loope
lds
arpl
stc
sub
inc
inc
adc
in
shrl
jne
sub
shrb
and
mov
in
cli
sbb
lret
mov
std
mov
jno
dec
sbb
xchg
push
ret
clc
or
jae
jae
sub
dec
hlt
jmp
mov
inc
lcall
cmp
sub
cltd
inc
xorb
sub
iret
mov
out
orb
ja
test
or
dec
fcoms
jae
xchg
xchg
data16
call
out
enter
mov
lcall
loopne
gs
cmpsl
pop
repnz
lahf
pop
divl
hlt
sbb
xchg
mov
push
mov
inc
jle
push
or
mov
bound
and
add
and
xor
dec
and
popl
pop
pop
std
ret
testl
iret
jnp
xchg
lea
mov
sub
inc
mov
popf
sbb
lahf
and
addr16
push
int
jle
jnp
mov
pop
push
sub
push
inc
jp
arpl
inc
in
jmp
cmc
imul
scas
je
push
iret
mov
and
lods
int
push
clc
outsb
addr16
and
fwait
test
int
push
imulb
in
jnp
in
cs
pop
pusha
cld
imul
mov
inc
xchg
shll
les
ljmp
mov
das
aam
popa
mov
fisubs
movsl
fdivl
mov
mov
lcall
push
aam
add
jns
mov
mov
pop
insl
xchg
lcall
push
dec
push
out
pop
fucom
popa
sub
pusha
pop
pop
inc
jl
in
in
jno
dec
lret
js
cmp
jmp
cmp
or
and
pushf
pop
mov
adc
lds
stc
dec
cmp
scas
push
ud0
mov
pop
xor
roll
inc
xor
jbe
jne
jns
call
xchg
add
mov
xor
cmp
push
pop
push
inc
int3
and
push
cmp
mov
lea
or
xchg
jge
call
cmp
add
les
ret
shrb
mov
add
inc
sub
mov
pop
push
sbb
fmuls
xchg
push
das
daa
jle
mov
das
xchg
add
pop
pop
xor
xchg
vmovd
mov
mov
call
movsl
cmpsb
xchg
popa
cmp
fsubrs
fisttpl
sbb
mov
popa
push
jmp
fstp
dec
push
inc
push
inc
mov
dec
and
cwtl
ljmp
cltd
adc
sbb
cmc
lods
mov
inc
mov
sbb
xchg
aam
add
mov
mov
jmp
mov
scas
cmpsl
pusha
stos
xor
std
out
inc
jb
nopl
pushf
and
inc
pop
xor
mov
pop
xchg
dec
xlat
sahf
mov
add
outsb
inc
or
sbb
cmpsb
jae
pop
and
shll
jae
mov
test
sub
jl
dec
xchg
stos
and
mov
in
aaa
testb
fisttpll
mov
negl
xchg
push
mull
pop
sete
arpl
cmp
cld
shlb
and
in
sbb
sbb
stos
xor
pushf
fstps
fwait
stc
jl
mov
cmp
ja
fnsave
icebp
jnp
xor
adc
stos
pop
add
jo
mov
dec
std
ja
stos
mov
pop
lea
push
in
xchg
sub
xor
insb
dec
aas
xor
add
xlat
and
test
mov
popf
add
jle
jo
cmp
stos
pop
mov
cmp
jb
jne
fldt
mov
ljmp
push
push
test
outsb
jle
xor
pop
pop
or
jge
enter
push
in
movsl
lock
inc
std
mov
addr16
arpl
loopne
or
ljmp
sub
mov
cmpsl
xchg
xchg
sbb
outsl
fstpl
addr16
sbb
inc
orb
daa
test
sar
dec
lods
inc
ret
and
ja
jns
lcall
or
xchg
outsl
sbbb
push
cltd
xor
and
jecxz
push
xchg
insb
das
inc
aas
test
bound
pop
sub
sbb
enter
mov
fsubs
gs
in
cltd
rorl
mov
mov
or
call
mov
jmp
mov
andb
int3
and
dec
dec
or
in
cli
mov
arpl
and
and
stc
out
jo
das
es
adc
imul
in
add
andb
jns
in
jg
jb
pop
xchg
xor
jbe
push
push
sub
adc
xlat
jecxz
iret
nop
loope
and
inc
and
rclb
leave
push
in
stos
push
sahf
pop
mov
shll
push
add
mov
stos
sub
test
lret
sub
push
fldt
aad
and
or
lea
push
cmp
es
stos
adc
mov
pop
mov
xchg
and
pop
lret
ss
adc
or
mov
sbb
popf
movsb
cmp
pop
jle
hlt
rcl
pop
lahf
movsb
imul
jbe
add
dec
lahf
mov
xchg
jl
outsl
xchg
cmp
mov
sub
imul
cmp
mov
push
add
add
decb
movsb
xor
divl
in
mov
xor
sti
or
dec
test
fstps
dec
nop
mov
enter
dec
mov
and
mov
in
fldl
popf
pop
dec
bound
xor
clc
gs
mov
push
mov
mull
cmp
pop
aam
fistpll
data16
ficomps
pop
add
xchg
sbb
cmp
inc
dec
push
cs
add
aas
in
lods
sbb
mov
pop
arpl
sub
rclb
fld
loope
xchg
push
pop
or
cltd
push
push
sbb
out
sbb
mov
fmuls
and
inc
out
ror
sub
imul
lret
jmp
lret
cs
and
in
loope
pushf
dec
gs
psubusb
adc
add
mov
xor
loop
push
adc
cmpsl
out
adc
out
shrl
clc
add
fwait
mov
arpl
mov
adc
cmp
loop
mov
scas
ss
clc
arpl
xchg
dec
and
mov
and
outsl
pop
pop
cs
lahf
fildll
pop
mov
sbb
vaddss
dec
pop
scas
cmpsl
loopne
mov
inc
cmpsb
lea
dec
and
mov
rolb
jae
ficompl
shlb
int3
mov
sub
mov
mov
popf
mov
scas
jno
aam
push
out
ljmp
mov
jbe
xchg
sbb
test
inc
jnp
jns
loope
insb
xlat
pop
mov
xchg
or
pop
and
mov
arpl
popa
cmp
repz
rclb
cmp
jmp
shl
test
mov
inc
mov
aaa
inc
sub
enter
mov
ret
dec
cmpsb
xchg
daa
pop
and
daa
or
sbb
jb
xchg
cltd
pop
sbb
not
xchg
and
push
and
inc
pushf
in
fstl
enter
dec
xchg
xchg
adcl
mov
pop
int
mov
adc
js
jle
sub
movsl
xchg
pop
rcrl
inc
dec
xchg
pusha
add
cmc
and
jp
jne
in
cmp
test
int
push
gs
mov
scas
sbb
arpl
sbb
icebp
in
pop
or
xchg
pop
and
inc
inc
cltd
cmp
sbb
in
mov
movsl
cmp
pop
sbb
fst
cmc
repnz
push
jle
jp
cmc
or
pop
pop
jae
mov
in
push
push
cs
dec
dec
subl
mov
jmp
int3
int
push
mov
cltd
addl
and
fists
cmpsb
scas
sub
scas
adc
xor
icebp
lret
push
iret
fdivrl
sbb
xchg
fidivrl
fnstsw
xor
pop
shrb
shl
scas
sbb
xchg
aas
out
push
pop
xchg
pop
sub
mov
jnp
clc
push
pop
mov
jbe
sub
enter
or
pop
nop
lea
in
push
mov
inc
xchg
mov
fdivs
lock
test
nop
adc
push
js
ljmp
cwtl
mov
and
stos
loopne
aam
lret
gs
jns
inc
jmp
jmp
leave
stc
daa
bound
out
fdivp
fmull
in
sti
cmp
fsubrl
arpl
in
mov
adc
xchg
cli
dec
mov
add
inc
mov
ret
arpl
and
repz
test
movsb
cmpsb
icebp
in
pop
push
jns
out
aad
movb
pop
lods
mov
call
jl
movsl
cmp
lahf
sbb
out
dec
sbb
jecxz
outsl
stos
int3
and
lods
loop,pt
xchg
sbb
xor
ss
rcl
jne
cmpsb
fstpl
or
enter
and
push
xor
cmp
repnz
sbb
mov
lret
scas
mov
in
lds
sbbb
inc
add
mov
js
enter
cltd
inc
imul
ljmp
lahf
js
popa
jle
out
fsubrs
jns
jecxz
and
cmpsb
adc
push
pop
popa
jns
ror
arpl
mov
push
fidivrs
push
in
sub
aam
gs
outsl
aad
xchg
or
je
dec
fnstcw
add
fldcw
cmpsb
fwait
pop
dec
dec
into
dec
cmp
sub
outsb
dec
call
sbb
mov
lds
mov
faddp
and
mov
loopne
outsb
sub
jno
xorl
mov
mov
scas
fmuls
mov
pusha
js
shrb
aas
sub
or
cltd
pop
iret
adc
loope
push
subl
fisttps
cmp
or
mov
jle
and
jb
adc
js
dec
fists
sarl
mov
or
xor
aad
int
mov
scas
iret
cmp
add
push
scas
pop
cmp
jl
adc
cmc
push
cmp
mov
pop
stc
sbb
scas
inc
sub
loopne
das
in
xchg
es
and
mov
jecxz
lock
jo
mov
stos
push
dec
mov
mov
pop
inc
mov
cmp
rorb
pop
out
mov
cmc
mulb
xchg
mov
inc
decb
lcall
insl
sub
inc
cmpsl
mov
mov
hlt
push
sub
mov
out
int3
mov
lcall
xchg
jmp
aad
push
add
mov
sub
push
rclb
roll
xor
stos
push
adc
sti
aad
imul
fs
aaa
xor
sub
inc
mov
jmp
addr16
hlt
outsl
paddsb
in
sub
lods
fdivrl
lock
ret
push
loop
pop
repz
in
mov
push
cltd
sub
adc
inc
push
arpl
xor
mov
jno
ss
or
out
mov
sub
or
nop
and
fcmovb
and
ljmp
dec
dec
mov
or
orb
push
fimull
jno
mov
inc
loopne
aas
pop
dec
fcmove
pop
jns
xorl
or
fildl
xor
jmp
mov
mov
les
and
jbe
xor
andl
mov
jmp
inc
adc
xor
imul
push
sbb
and
and
adc
jnp
mov
cs
je
clc
xor
adcb
jp
dec
ret
sbb
or
push
mov
fnstenv
and
mov
adc
fisubrl
jp
sbb
loopne,pt
xor
mov
mov
pop
imul
les
push
daa
dec
xchg
push
or
pop
sahf
fdivr
ret
sub
push
and
pop
mov
repz
dec
clc
push
repnz
cltd
out
jecxz
jnp
mov
cmp
xlat
int3
icebp
aaa
int3
adcl
sub
std
cmpsl
fidivrl
xor
and
shl
sarb
cli
vpsrld
cmc
cli
insl
imul
mov
scas
test
outsb
pop
jmp
cmp
clc
pusha
dec
pusha
fwait
push
and
enter
mov
aam
cmp
inc
pop
xor
out
cmpsl
cmp
sbb
cmp
cmp
shll
jl
or
mov
dec
cmpsb
push
iret
es
outsl
sti
add
je
out
mov
xlat
mov
clc
adc
out
daa
ret
dec
xor
lds
out
sbb
movsb
aam
xchg
dec
lret
inc
cwtl
call
mov
dec
cld
fidivrl
mov
cmp
in
fwait
and
jecxz
pop
adc
inc
or
pop
xor
or
loopne,pn
lahf
or
mov
mov
lahf
or
lret
pop
pop
adc
cmpsb
stos
mov
cmp
and
lods
aaa
and
lret
xor
popf
insl
popa
adc
outsb
mov
icebp
ja
jmp
push
orl
push
stos
lea
scas
leave
test
cld
incl
aaa
sarl
mov
call
rcrl
enter
stc
loope
daa
jne
loope
movsl
cmp
mov
sbb
pop
inc
cmc
cmpsl
sub
inc
loop
mov
mov
dec
inc
nop
add
cwtl
pop
pop
pop
ds
sbb
inc
jecxz
xchg
test
jns
sub
ret
fbld
std
mov
cmp
pushf
clc
sbb
test
mov
int
jnp
lods
divl
lcall
js
int
sarb
ss
movsl
sbb
lret
pusha
push
push
cmp
xor
inc
pop
mov
in
les
fisttpl
mov
mov
xchg
iret
mov
adc
mov
mov
pop
std
sub
fucom
xor
or
out
decb
mov
dec
dec
or
jne
cmpsl
cs
test
push
dec
pop
pop
ds
mov
dec
add
mov
cmp
out
ljmp
and
jp
xor
mov
mov
pop
sbb
int3
int3
mov
add
pop
insb
dec
xor
sub
pusha
xchg
ja
sbb
ss
adc
stc
or
push
mov
sbb
daa
mov
das
add
dec
testb
jle
stos
cmp
nop
and
adc
subb
jmp
test
shl
pop
jg
mov
add
jg
xor
xlat
cmp
or
jo
push
mov
mov
pusha
or
pop
sahf
sub
inc
nop
dec
mov
cmp
test
xchg
mov
outsl
clc
fiaddl
mov
pop
dec
pop
ss
aad
xchg
aam
xchg
sbbb
mov
popl
pushl
mov
xor
in
mov
call
movsl
pop
stos
push
fnstcw
push
xor
inc
repz
mov
xlat
and
inc
sub
mov
adc
in
scas
nop
pop
ds
inc
loop
arpl
mov
stc
insb
loop
jmp
sahf
and
add
mov
mov
push
sub
jo
ja
in
imul
cld
shrl
out
incl
add
and
call
or
mov
lea
xor
push
jmp
nop
cmp
icebp
imull
movsl
mov
adc
mov
aas
fs
dec
clc
shrl
lods
jnp
or
nop
movsl
sbbb
dec
aas
inc
imul
lds
cmp
mov
push
push
add
xor
and
fmull
adc
movsb
sbb
popa
ljmp
xchg
stc
movsl
sub
test
push
cmc
dec
dec
out
shrl
sbb
popf
mov
lods
pushaw
add
mov
cmp
xchg
push
clc
out
add
daa
stos
mov
jne
mov
sarb
lea
push
mov
lods
inc
mov
in
add
push
dec
or
pop
insb
fiaddl
in
std
jno
and
mov
lods
xor
in
add
sarl
pop
pop
and
add
sarb
xchg
dec
jmp
mov
fstl
js
jb
mov
jns,pn
and
in
push
es
xchg
je
sbb
dec
cld
adc
jae
pop
mov
out
lret
mov
movl
jg
loopne
icebp
lahf
ret
push
mov
popf
in
mov
mov
push
mov
daa
sarl
xchg
inc
es
xchg
je
mov
cld
or
fstps
ljmp
mov
scas
push
or
mov
mov
pop
je
fimull
mov
xor
mov
orb
nop
ret
dec
jb
jp
cltd
fs
pop
stos
xchg
xchg
pusha
xchg
cld
push
dec
rcll
pop
out
popa
cmp
lods
mov
mov
push
push
and
jnp
mov
push
arpl
das
orb
std
shlb
outsl
and
insb
test
in
xchg
xchg
or
sbb
mov
inc
lcall
bound
clc
pop
out
push
mov
adc
repnz
out
test
jo
lcall
aad
decb
hlt
shrl
clc
clc
add
cmpsb
and
popf
xchg
out
das
shl
iret
adc
fs
cmp
and
dec
ds
sbb
stc
imul
and
mov
push
mov
or
nop
mov
sub
or
xlat
xor
jbe
pop
xchg
mov
pushf
fisttps
mov
adc
jmp
sbb
cld
in
xchg
out
add
adc
test
add
repnz
or
xchg
je
test
int3
movsl
lret
sbb
and
xchg
cmp
and
pop
das
mov
sbb
cli
cwtl
fisttpl
enter
mov
xor
xor
lds
and
mov
push
or
int
pop
push
inc
dec
test
xchg
or
mov
shrb
cmp
jl
cmp
inc
loop
jne
aad
sbb
jb
cmp
push
push
sbb
mov
rol
push
jo
cmpsb
sbb
rcll
xchg
xor
sub
jge
push
bound
std
cmpsl
xchg
mov
xchg
or
add
add
lret
popl
fsubs
mov
in
sahf
jo
rcrb
push
mov
loope
lods
imul
pop
out
mov
enter
fdivrl
add
daa
pusha
idivl
pushf
lret
fs
out
xor
push
mov
fs
ret
jle
mov
pop
and
jl
push
inc
outsb
pop
xor
fcmovbe
add
push
xchg
mov
sti
push
inc
test
jne
fmull
cmp
mov
cmp
mov
mov
ret
call
adc
xor
ds
leave
adc
cmp
push
icebp
xchg
cs
mov
mov
sub
push
push
aam
sub
adc
shr
jl
xlat
out
dec
fcoms
jl
aaa
aam
mov
jno
inc
and
cmpsl
pusha
adc
dec
push
arpl
aaa
xchg
sub
adc
jl
jl
or
icebp
push
repz
jl
push
imul
xor
int
test
lret
cwtl
ljmp
popa
pop
mov
js
and
stc
test
jbe
jp
and
and
lret
cs
and
fdivrl
repnz
mov
xchg
dec
mov
mov
insl
mov
in
fistps
and
icebp
adc
divb
xor
mov
pop
xor
xor
add
and
imul
or
in
test
cmp
je
test
imul
test
dec
mov
push
ret
push
flds
sahf
mov
ficoms
fnstcw
in
das
outsl
jns
mov
jmp
adc
cld
lock
inc
pop
inc
aad
ss
shrb
push
xor
mov
pop
sub
int
jae
repz
xchg
repnz
xchg
jae
in
push
arpl
hlt
and
aam
insb
cltd
scas
add
pop
lods
dec
fnsave
xlat
aaa
jecxz
xor
lret
insl
push
adcb
and
jl
gs
in
push
or
pusha
sub
jmp
mov
ficoms
cmc
mov
shrl
subb
xchg
inc
and
cltd
and
dec
mov
vpmullw
xchg
outsl
jge
mov
or
ret
pop
xor
sbb
test
or
out
and
js
in
test
add
pop
sub
bound
or
sahf
fsubp
sbb
loopne
psubsw
cmpsl
or
push
clc
fnstcw
insb
out
sub
sub
daa
mov
popf
mov
fstps
inc
shl
mov
rcrl
daa
and
fisubl
push
xor
inc
js
test
lods
mov
dec
jle
aaa
push
push
xor
subb
sub
movsb
dec
pop
aad
sbb
rcrb
cld
pop
mov
xlat
sbb
jns
sbb
pusha
pop
cmpsl
in
add
sub
sub
test
leave
adc
dec
xor
pushf
lods
jle
mov
ret
xor
dec
jnp
push
sub
sbbl
arpl
fisttpl
add
dec
dec
inc
pop
pusha
loopne
ds
data16
mov
ja
ret
outsl
dec
cmp
xor
cmp
fildl
adc
cmp
sbb
insl
push
adc
jmp
sbb
inc
dec
scas
xor
je
pop
leave
push
aaa
lret
lcall
sti
test
shll
fmul
push
in
test
es
lret
movsb
or
rol
and
cli
stos
jo
or
aaa
pop
cld
dec
xchg
inc
jo
lods
pop
cltd
mov
sbb
lea
imul
dec
sub
push
dec
push
mov
orl
fs
lret
sahf
inc
xor
jg
mov
movsb
push
scas
mov
or
xlat
enter
inc
stos
jae
out
cmc
dec
cltd
or
jno
mov
jb
pop
lods
xchg
stc
in
into
popa
arpl
hlt
push
inc
dec
cwtl
jg
shrb
cmp
dec
adc
mov
xchg
fimull
xchg
filds
popf
lcall
mov
jmp
jge
aam
sbb
add
xor
mov
mov
sti
push
dec
cmp
insl
mov
and
mov
xor
pusha
fisubrl
mov
mov
stos
mov
icebp
mov
pop
mov
nop
insb
rcrl
lcall
call
cmp
mov
or
data16
lock
shl
hlt
xchg
popf
stos
cli
mov
cmp
stos
mov
js
pop
test
mov
inc
mov
push
js
jne
xor
aaa
popa
out
loop
adc
addb
adc
les
or
lret
addr16
inc
outsl
ficoml
or
add
lret
stos
lret
stc
clc
xlat
pop
loopne
inc
mov
dec
mov
imul
cli
adcb
mov
bound
or
ret
dec
mov
xor
icebp
xor
test
jb
sub
pop
adc
xchg
jo
mov
xchg
aam
xchg
stc
insl
lods
andl
fnstcw
mov
push
enter
sti
ds
mov
fs
cmc
jno
pop
nop
inc
xorl
add
cmp
aam
xchg
push
dec
inc
sub
mov
je
mov
xchg
add
clc
adc
cmpsl
in
rcrb
test
aaa
fcmovb
sub
fimull
lds
in
inc
aam
add
in
push
xchg
aaa
sbb
and
outsl
ljmp
jae
add
pop
fiaddl
cld
mov
pop
sarb
sub
mov
add
jo
ja
sub
mov
add
idivb
and
imul
leave
movsl
cs
xor
jae
xchg
lcall
add
mov
adc
in
fnstenv
ret
push
mov
mov
sub
loop
xchg
aad
inc
jnp
fidivs
sbbl
cmp
fstps
add
mov
repnz
aam
mov
jb
lahf
cmp
fmuls
popa
loop
pop
push
xor
adc
mov
sub
jae
test
jbe
mov
hlt
mov
ljmp
mov
xchg
and
pop
inc
cmpsb
and
mov
shll
iret
jno
dec
inc
jmp
push
add
xchg
push
lahf
mov
dec
nop
push
cmpsl
out
fstps
or
dec
test
jl
push
xchg
cmpsb
mov
push
dec
jecxz
mov
lods
xor
leave
out
jge
add
push
aam
loopne
xchg
and
int
imul
jge
inc
retw
lods
sub
push
popl
inc
test
cmpb
pushf
dec
mov
flds
jmp
ljmp
in
jns
mov
out
cmp
ja
push
sub
mov
out
in
cmc
pop
flds
sbb
jmp
mov
push
nop
movsl
inc
dec
pminub
sbb
xchg
scas
cmp
popf
vcvtpd2dqy
jmp
inc
stc
loop
xchg
addb
sub
dec
stos
or
call
dec
imul
jmp
sahf
enter
add
xor
cmp
cmp
fwait
mov
pop
faddp
cmp
sbb
xlat
ljmp
repnz
es
xor
and
jmp
fcomps
xchg
and
jmp
pushf
cwtl
adc
sbb
lret
sub
sbb
mov
inc
test
add
icebp
pop
add
rcr
cmpsb
or
inc
mov
test
or
dec
ret
popf
popa
orl
stc
inc
and
stos
cmp
fpatan
imul
inc
mov
push
sbb
out
mov
lcall
loope
and
xor
nop
pop
insb
fwait
or
jg
iret
cmc
mov
mov
adc
jle
sbb
loope
mov
jge
sub
hlt
xchg
push
pop
int
lods
cmp
add
lods
mov
fldcw
scas
les
or
add
insb
ss
push
dec
jns
mov
jno
cmovl
push
jp
sbb
fsubs
fidivrs
mov
cltd
mov
jne
ret
cmp
jns
stc
in
mov
mov
idivb
nop
dec
push
clc
sbb
jl
pop
sub
aad
cli
ja
repz
leave
js
sbb
test
test
mov
dec
inc
jge
or
cwtl
jno
push
sti
mov
bound
enter
jne
adc
cmc
cmp
push
mov
fcmovb
adc
mov
xor
push
stc
aaa
repnz
jo
fnstenv
shrl
add
or
and
xchg
dec
inc
jne
sbb
cmc
pop
cs
adc
mov
ret
movsb
lcall
outsb
scas
incl
mov
xchg
jle
sub
sub
jmp
lret
sub
xor
insb
sbb
lds
adc
cmc
or
inc
mov
and
and
inc
bound
cmc
insl
mov
in
mov
or
mov
incb
xchg
adc
es
outsb
adc
push
arpl
sbb
test
pop
mov
push
icebp
fs
in
adc
xchg
scas
xor
jp
adc
xor
dec
mov
cli
lods
shl
or
daa
mov
lock
push
xchg
loop
add
shlb
mov
sbb
push
fldenv
sti
adc
mov
add
jo
add
jl
sbb
adc
aaa
int3
leave
jo
mov
push
cmc
fists
nop
divl
jno
or
rcrb
jge
scas
xor
out
and
xchg
mov
sti
cmp
mov
pop
dec
leave
loope
insl
sbb
repnz
sbb
sbb
lea
jns
out
mov
lea
fiaddl
aad
es
lahf
leave
mov
in
jo
or
sub
and
ja
lahf
icebp
ret
rorb
repnz
jge
popa
add
scas
xor
jmp
clc
add
insb
inc
insb
jo
xchg
push
fldcw
dec
fnstsw
rorl
shll
ljmp
adc
loope
loope
dec
loope
and
fsubrl
daa
popf
loop
jg
je
sahf
fsts
add
dec
sbb
daa
dec
sub
xchg
enter
popf
jne
jle
in
xor
sbb
loopne
adc
or
jmp
aas
cmp
and
mov
fwait
mov
pop
andb
out
mov
int
mov
jne
ds
push
mov
test
mov
pop
cmpb
jmp
sbb
and
sbb
loop
sbb
hlt
cmp
inc
movsw
bound
xchg
and
lods
and
daa
sub
aas
fst
push
repz
jle
mov
xchg
sbb
leave
loope
pop
call
outsl
push
shl
jbe
repz
aaa
movsl
cmp
pop
cmpsl
push
rcl
xchg
insb
cmpsb
mov
add
fcomp
popf
movsb
sub
cmp
div
pop
shlb
sbb
cltd
pop
div
repz
add
inc
inc
fdivrs
nop
and
cmp
call
inc
sbb
mov
stos
test
popa
aaa
dec
or
jns
repz
scas
mov
inc
popa
pushf
inc
adc
subb
adc
add
gs
mov
adc
push
movsb
push
into
into
nop
sbb
aad
clc
shrb
xchg
rclb
lcall
arpl
test
and
and
jb
jmp
mov
imul
jae
gs
dec
je
daa
dec
inc
inc
mov
iret
inc
jne
nop
sbb
call
sub
rcrl
dec
pop
in
jle
ja
and
push
sub
pop
in
xor
adc
enter
inc
lods
mov
push
stc
cmc
lea
out
ficoml
pop
mov
daa
lahf
cmp
xor
cmpsl
fsubp
test
inc
cmc
pop
aam
test
mov
jbe
dec
bswap
jmp
mov
cwtl
outsb
insb
pop
add
hlt
xorl
push
inc
loop
divl
pusha
add
test
sbb
andb
mov
pop
sbb
stos
aaa
mov
add
mov
test
add
call
inc
lret
and
outsb
sbb
and
int
dec
call
aam
xchg
enter
mov
mov
mov
jns
inc
sbb
fldcw
lret
iret
pop
imul
repz
pop
cmp
mov
cwtl
hlt
pop
jnp
ret
cmp
dec
push
inc
in
pop
sahf
mov
cwtl
dec
mov
jbe
push
mov
loopne
jmp
jo
fldcw
movsl
mov
pop
adc
fs
das
mov
jle
in
add
xchg
mov
dec
test
inc
inc
or
cmpsl
cwtl
movsb
jns
dec
fs
aas
outsb
sub
shll
pop
pop
arpl
orl
inc
ffreep
dec
pop
mov
or
daa
adc
test
mov
in
lea
cmp
jecxz
mov
es
fildl
in
lods
inc
push
xor
jbe
xchg
and
ss
jns
into
loop
mov
daa
push
mov
jnp
cli
roll
mov
adc
decl
cmp
or
push
imul
fmul
inc
push
sbb
cmp
data16
push
lahf
test
xchg
sbb
ljmp
in
inc
gs
cmp
cld
andb
cmp
rorl
push
xor
mov
xchg
sub
lods
adc
popf
jns
or
xchg
data16
loope
pushf
jl
shrb
push
sbb
ljmp
pop
aaa
mov
fcoms
jae
cmp
or
sub
lods
add
dec
cmpsb
adc
mov
hlt
cmp
mov
xchg
sub
cmp
enter
shll
pop
add
std
inc
pop
inc
daa
mov
fstps
and
repnz
pop
sub
hlt
jo
xchg
push
testb
or
mov
loope
sbb
nop
aam
mov
insb
mov
or
mov
test
sbb
add
mov
cli
push
push
jg
jg
mov
jmp
dec
mov
pop
jnp
mov
insl
in
push
add
jmp
mov
aas
pop
sbb
push
jo
aam
adc
or
inc
inc
push
mov
out
loop
fdivrl
and
sub
or
jnp
ds
and
loopew
jae
cmp
hlt
popa
sbb
inc
cmp
sbb
dec
sub
mov
stos
inc
inc
cli
push
inc
arpl
mov
or
sub
lahf
xor
cmp
mov
push
ret
insl
xchg
sbb
mov
jae
sbb
dec
push
enter
insb
cld
cld
fldenv
jle
dec
repnz
mov
hlt
fwait
cmp
movsl
gs
cltd
test
inc
mov
inc
adc
ja
test
outsb
sbb
ss
xorps
ret
jae
mov
inc
add
sarl
in
adc
out
pop
outsl
es
pop
and
movsl
fldenv
cmp
pop
xchg
repnz
notb
cld
push
out
not
jmp
mul
jb
orl
xor
pop
sbb
shrb
pop
shlb
daa
rorl
or
mov
jae
dec
in
loop
cs
and
inc
loop
std
sbb
bnd
cmp
or
loop
xchg
inc
sbb
int
outsl
adc
imul
mov
orl
or
mov
test
inc
leave
int3
push
roll
push
sbb
push
pop
es
jge
data16
rcrl
shll
popa
icebp
mov
pop
jae
fimuls
mov
mov
sbb
out
imul
test
or
xchg
jae
jne
jmp
sub
mov
xchg
in
cmp
fucomi
aam
xchg
lds
sub
and
pop
sub
notl
addr16
mov
test
stos
jle
ds
xchg
and
pushf
xchg
movsl
push
mov
fwait
mov
sbb
push
pop
pop
stos
hlt
cmp
dec
lret
xor
fnstcw
jg
call
jp
loop
cmp
pop
sbbb
jno
jge
lds
pop
push
or
lods
lds
adc
rol
std
or
in
xchg
inc
mov
scas
inc
jecxz
jo
in
stos
xchg
loope
add
adc
xchg
lds
pop
cli
or
icebp
stos
xchg
xorl
xor
ds
sub
fdivl
adc
decl
orl
rolb
mov
icebp
xchg
std
pushaw
out
jne
mov
repnz
mul
or
outsl
in
mov
outsl
fbstp
es
dec
inc
shl
gs
fdivrs
dec
lret
pushf
into
jp
fildl
addr16
push
aaa
stos
add
cmc
in
xor
scas
push
adc
in
nop
dec
sbb
arpl
outsl
outsb
push
jo
jno
lret
pop
jle
xorb
loope
mov
sbb
dec
icebp
jg
subb
adc
iret
inc
mov
hlt
stos
ja
sbb
loop
data16
mov
pop
pop
cmp
call
xorb
aad
pop
and
sub
les
popf
or
xchg
icebp
xchg
and
mov
lret
cli
mov
pop
out
mov
add
sub
cli
xor
mov
addr16
inc
lahf
mov
dec
jmp
jl
lock
popf
mov
xchg
pop
mov
pop
push
es
inc
cmpsl
push
mov
test
negl
mov
clc
and
adc
out
cmc
movsl
mov
int3
jl
adc
scas
outsb
gs
mov
fisubrs
addr16
add
adc
push
mov
sti
xor
mov
mov
and
push
dec
jb
lahf
arpl
jno
mov
xchg
lock
aaa
pushf
test
pop
les
lods
pop
sbb
sbb
pop
pusha
sbb
jp
add
add
mov
inc
fcmovu
sbb
jns
out
btc
out
push
out
mov
cmp
mov
ror
lcall
aas
clc
adc
pop
test
inc
xor
pop
dec
push
or
pop
cmpsb
ret
mov
dec
test
xor
inc
call
pop
call
int3
push
xchg
mov
xchg
sbb
jbe
cltd
call
and
int3
imul
sub
dec
mov
jle
cmp
push
adcl
add
ljmp
fldenv
push
push
fcompl
out
mov
ss
aam
daa
jecxz
jle
pop
or
cmp
cmpl
stc
jo
dec
lea
popa
push
jl
aas
mov
call
sub
out
imull
adc
push
add
stos
push
mov
cmp
mov
rcrl
insb
fistl
jae
jo
test
adc
les
ss
imul
mov
cltd
ljmp
mov
mov
and
xchg
mov
mov
lock
cmpsl
jmp
shlb
lret
jne
mov
jmp
jmp
mov
and
inc
cmpsl
mov
pop
mov
cmc
out
adc
jns
pop
adc
pop
outsb
out
push
xchg
stc
lret
cmp
push
aaa
xchg
fisttpl
rorl
fbstp
sbb
xor
cmp
stos
cmpsl
pop
fs
push
jbe
mov
fdivs
xchg
mov
cmp
pusha
into
test
outsl
notl
cwtl
cmp
fisubrs
aaa
push
mov
arpl
adc
add
dec
int
mov
out
mov
out
push
xchg
jns
mov
fstpl
insb
into
inc
mov
push
mov
rcl
nop
loopne
icebp
stos
adc
pop
mov
jmp
push
xchg
jbe
jno
stc
xchg
ret
pop
into
popf
mov
sub
dec
pop
adc
out
cmp
mov
pop
pop
and
popf
mov
push
clc
call
popa
hlt
pop
cld
mov
or
mov
and
gs
cmp
or
xchg
mov
lds
xor
adc
jle
les
ficompl
xlat
popa
xchg
and
scas
imul
sbb
cmp
aas
and
in
int3
mov
cmp
jg
orl
daa
stc
repz
xchg
sbb
inc
pop
cmp
jle
int
mov
and
insl
dec
fdivr
int
jbe
jmp
movsl
cmp
mov
gs
subb
sbb
aad
in
in
jne
fdivs
ds
jp
in
shrl
jb
out
jmp
xor
das
dec
add
stc
push
dec
outsb
xor
inc
mov
scas
cmp
dec
xor
mov
and
jl
icebp
out
xchg
in
leave
xor
pusha
in
jg
mov
stc
and
cmp
cmpsl
loopne
sub
or
xchg
xchg
or
jle
sub
out
aam
es
sub
lods
stos
faddl
xchg
add
pop
sbb
xchg
sbb
pop
jns
pop
aas
into
xchg
pushf
in
xorb
sub
sarb
cmc
xor
push
sub
in
lds
out
mov
dec
lods
fnsave
std
sahf
xchg
ss
xchg
mov
xor
in
xor
pop
and
add
fcoms
jmp
mov
push
xlat
movsb
sub
fildl
xchg
mov
bound
and
push
in
lds
sub
push
mov
lcall
nop
xor
jge
dec
test
sarb
cli
xchg
andl
shrb
xchg
imul
aad
adc
mov
dec
sub
dec
and
neg
arpl
ret
and
sbb
mov
jle
xchg
int3
jno
dec
mov
mov
inc
add
ret
pop
pop
mov
inc
pop
ss
test
push
jbe
fistps
cmp
pop
jno
in
add
je
stc
mov
push
mov
xor
test
imul
jne
adc
lds
shlb
jmp
pop
test
add
xor
fbstp
addr16
pop
or
out
xor
sub
sub
js
testl
repz
outsl
jb
lret
push
mov
ja
popl
fimull
fisubrl
mov
xchg
cmp
outsb
jge
push
pop
push
push
inc
xchg
repnz
lret
dec
add
pop
mov
inc
add
xor
add
fcoml
aaa
dec
ficoml
mov
imul
call
xor
xchg
int3
addl
jp
mul
jo
mov
push
or
or
fildll
mov
rclb
fstp
pop
stos
mov
push
jg
xor
lcall
jmp
push
xchg
push
ficoms
imul
out
mov
in
pop
dec
dec
scas
loope
pop
mov
pop
out
dec
mov
cmpsw
addr16
sbb
xor
mov
neg
sub
adc
inc
imul
cltd
sub
mov
je
jb
jae
cltd
sub
and
jge
popa
dec
fdivrl
jo
bound
outsb
repnz
add
dec
dec
push
into
mov
enter
cwtl
fdivp
xchg
push
popf
pop
setae
outsl
das
out
rcrb
repnz
push
movsl
dec
int
xor
fistps
cli
pop
adc
jae
les
mov
mov
cld
xor
adc
pushf
xor
adc
mov
inc
pop
adc
rorb
pop
xor
pop
ret
inc
or
cmp
iret
adc
cmc
xor
xchg
clc
dec
lcall
pop
xchg
out
or
cs
call
add
pop
xchg
xor
push
cltd
cltd
not
lcall
int
jo
mov
push
jle
adc
aaa
sbb
xor
divl
in
adc
jl
lret
lods
test
ret
jbe
int3
add
inc
xchg
popa
das
cld
xchg
xor
push
dec
jno
ret
scas
or
arpl
imul
add
mov
jb
jg
aad
test
rcrb
mov
outsb
pop
repz
popl
jl
mov
cmp
push
pop
mov
push
push
test
jl
inc
ret
sbb
arpl
mov
xor
jle
push
aam
pop
jnp
or
mov
jmp
mov
leave
test
or
inc
mov
mov
aaa
cmpsl
fstl
pop
jae
fimuls
scas
push
cmp
mulb
cs
mulb
mov
mov
push
les
pop
data16
adc
out
and
sbb
jne
pop
stos
adc
fs
test
xorb
ss
lret
and
add
push
outsb
pop
jae
mov
push
pop
cmp
adc
adc
inc
negb
lret
insl
pop
insl
test
lock
aam
add
pushf
loop
xor
test
test
and
gs
push
test
mov
or
mov
iret
clc
fidivrl
stos
es
sbb
in
pop
insb
pop
addb
sahf
inc
xor
push
mull
inc
pop
scas
popf
insl
adc
mov
into
cltd
addr16
mov
lahf
adc
mov
adcl
dec
xchg
out
or
mov
or
cmpsl
sbb
mov
mov
add
int3
dec
iret
jmp
stos
adc
sti
int3
das
orl
lret
popf
hlt
addr16
lret
ret
jbe
out
das
and
imul
mov
mov
loope
jg
xchg
sbb
push
dec
add
icebp
mov
test
mov
orl
outsb
rorl
test
sub
xchg
ret
push
mov
mov
and
sub
mov
mov
jmp
outsb
pop
and
pop
or
repnz
jl
add
jbe
or
jae
pop
mov
iret
cltd
sub
xor
fdivrs
dec
rorb
mov
outsl
inc
add
push
sub
into
test
cmp
mov
cmp
js
lret
sub
push
fs
hlt
dec
cmpsl
sub
pushf
fldcw
pop
pop
stos
pop
outsb
jae
int
ss
sub
mov
dec
cli
pop
sbb
inc
in
or
lret
fbstp
sub
fwait
cmp
jp
mov
xlat
lret
scas
mov
mov
out
cld
add
sti
bound
lahf
orb
sbbb
sbb
jle
in
sbb
sarl
jnp
dec
sbb
xorb
ja
pop
sahf
movb
stc
mov
dec
scas
adc
push
mov
ss
sti
jbe
adcl
cmp
push
jno
mov
push
sbb
into
out
fnstsw
js
cld
lret
sbb
lds
loop
mov
mov
test
ds
cli
mov
ffreep
ja
cmpl
pop
popa
outsb
cmpsb
xchg
push
pop
cmc
add
sub
mov
mov
out
notb
cltd
or
clc
lds
sarb
sub
sbb
jae
pop
and
mov
imul
sarl
pop
mov
and
mov
and
inc
sub
arpl
mov
mov
out
xchg
sub
fisubrs
push
xlat
jo
pop
mov
data16
sbb
sar
scas
movsl
subl
lods
test
pusha
cld
test
mov
test
inc
lods
sub
outsl
das
aas
adc
test
mov
fimull
push
mov
popa
mov
rol
ljmp
xlat
push
sub
sbb
mov
addr16
aas
outsl
add
movb
or
test
fildl
cltd
mov
or
out
aas
mov
fs
and
nop
sbb
xchg
cwtl
sub
jle
in
mov
jl
dec
mov
inc
inc
add
mov
in
loopne
decb
roll
cmp
mov
xchg
xchg
mov
pop
ljmp
pop
dec
leave
push
jmp
cmp
hlt
loop
loope
in
sub
inc
xlat
dec
mov
mov
es
and
in
mov
subb
push
cmpsl
mov
faddl
dec
jbe
and
jo
lea
and
dec
push
or
fcompl
lock
insl
call
adc
mov
xchg
stos
sbb
jns
fldcw
aaa
pop
out
pop
xchg
out
nop
icebp
outsb
or
sub
inc
arpl
jmp
jecxz
mulb
lds
sbb
xchg
js
jg
adc
std
movsb
sub
dec
pop
aaa
adc
adc
cli
pop
out
lock
pop
adc
je
lret
push
and
or
add
jge
lahf
xchg
inc
test
and
enter
mov
sbb
xchg
insl
sbb
fidivl
mov
cmc
inc
popf
inc
add
fucomi
fcmovbe
popa
mov
cmp
out
imul
out
ret
std
xor
fdivs
jne
jecxz
xor
push
xor
mov
aad
jge
stc
dec
mov
sbb
pop
outsl
aam
push
stc
adc
data16
addr16
push
movsb
cld
lahf
popf
lods
adc
subl
enter
add
sub
addb
or
cwtl
adc
mov
imul
sub
movsb
ret
add
not
mov
cmpsb
adc
rolb
dec
mov
imul
ja
arpl
mov
daa
loope
cvtdq2ps
push
dec
jmp
xor
sbb
lahf
push
outsl
mov
sbb
lret
icebp
push
jo
add
ret
jb
outsl
data16
jo
xchg
dec
mov
jg
incl
push
lret
mov
fwait
sbb
aad
inc
push
add
sbb
js
push
xlat
jmp
sahf
ror
sub
mov
sub
cmp
or
iret
xchg
sti
cld
dec
sub
sub
fdiv
mov
in
sub
in
repnz
fidivs
repnz
inc
sbb
ds
push
out
iret
in
xchg
or
mov
test
and
xor
data16
mov
test
and
cli
pop
cwtl
lods
repnz
mov
xchg
xchg
fwait
cs
daa
faddl
mov
cmp
cmpsl
dec
test
jo
test
pushf
cmp
out
and
sub
cltd
loop
jne
sbb
mov
push
xchg
adc
fwait
shlb
mov
ds
xchg
fisubl
out
test
push
lret
pop
cli
insl
cmpsb
jne
cltd
flds
orb
mov
sbb
addr16
dec
fwait
add
adc
inc
mov
mov
jno
das
adc
mov
sahf
jl
add
xchg
add
or
lods
or
imul
jmp
sbb
in
je
adc
mov
mov
lock
mov
repz
adc
movsb
push
out
xchg
jmp
stos
add
or
jmp
or
pop
iret
fwait
inc
jg
sbb
sub
inc
and
add
xor
cmpsb
jmp
pop
repz
jno
and
movsb
mov
mov
jno
push
stos
dec
cmpsl
mov
lret
mov
dec
mov
inc
test
sbb
dec
adc
mov
mov
cmp
cmc
popf
or
das
out
mov
adc
lods
ds
jl
fldt
sbb
mov
mov
out
jl
dec
or
subb
das
test
js
mov
dec
mov
fdivr
inc
fldt
mov
inc
mov
roll
mov
in
flds
addr16
cmp
add
mov
shlb
and
jmp
mov
dec
push
and
mov
imulb
mov
xchg
call
dec
push
cmc
xor
sar
mov
mov
sub
pop
out
pop
xchg
push
cld
ljmp
mov
pop
push
es
and
xchg
jmp
test
mulb
push
adc
out
fiaddl
pop
add
xor
fildll
inc
das
push
xchg
enter
fisttpll
mov
jecxz
xor
adc
xchg
inc
sbb
mov
fcoml
jnp
mov
push
mov
push
jns
lahf
es
fcoms
dec
lods
push
loope
je
inc
sarl
adc
movsl
stc
adc
frndint
cs
xor
mov
xor
mov
sbb
nop
iret
mov
ret
movsb
inc
add
pop
testb
fdivrs
inc
xor
jp
das
clc
fdivr
aad
sub
or
ret
adc
xor
cmpsl
outsl
lahf
push
and
daa
jnp
jb
insl
push
inc
ja
cli
and
mov
push
or
jg
addr16
sub
mov
xchg
pop
cli
nop
and
shrw
or
mov
inc
mov
pop
popa
fcomps
mov
xor
rol
int
inc
gs
fs
cmp
je
jae
outsb
in
push
dec
xor
mov
jmp
les
xchg
adc
cmp
pop
add
xorb
or
jp
add
push
xor
mov
mov
sub
adcl
in
int3
sub
idiv
movb
dec
cs
fs
stos
jmp
or
ret
cmp
xchg
jp
xchg
dec
mov
pop
test
mov
arpl
lea
mov
pop
movnti
addl
pop
popf
pop
push
xchg
push
cltd
js
cmp
sar
fnstenv
pop
sub
repnz
cmovp
jno
xchg
test
inc
pop
movups
mov
lahf
ja
cs
faddp
into
das
cmpsb
push
cmp
mov
xchg
inc
xchg
fdivs
pop
adc
cmp
and
dec
imull
mov
icebp
out
jne
mov
or
gs
movsb
loopne
sbb
or
pop
cmp
daa
out
loope
insl
outsl
aaa
jo
nop
mov
dec
test
push
es
jae
jo
jnp
sbb
in
fxch
or
daa
jmp
mov
or
mov
adc
std
and
testb
xchg
jae
add
pop
in
xchg
mov
movsb
jb
mov
fstps
enter
mov
mov
cmp
ljmp
loop
bndstx
lock
insb
push
lock
dec
pusha
lret
pusha
outsb
lods
shll
push
sub
mov
cmp
mov
call
xlat
dec
loopne
jno
jl
fsubrs
push
iret
xchg
cmpsl
lea
mov
xor
lret
andl
mov
dec
shrl
add
and
je
adc
mov
and
popa
dec
push
pusha
push
sbb
mov
inc
subl
outsb
inc
mov
bound
push
add
fwait
inc
popf
std
push
loope
repz
cmpsb
xchg
adc
je
jbe
mov
mov
sbb
mov
sahf
and
popa
mov
mov
xor
sub
lods
sahf
aam
daa
sti
mov
jns
xchg
mov
subl
lods
or
or
int
cs
cmpsl
out
or
dec
mov
cld
and
movsb
div
adc
xchg
notl
and
popa
dec
xor
in
mov
loope
subb
cwtl
inc
cmp
lret
fcompl
add
stc
adc
push
sbb
and
int
shlb
add
fadd
and
pushf
xchg
insb
jmp
mov
mov
cmpsb
dec
rcl
xchg
cld
addr16
sbb
fstl
cmp
in
test
data16
mov
ret
sarb
adc
lret
push
mov
sar
adc
and
pop
push
loop
ficomps
int
ss
pop
and
cmp
sbb
xchg
dec
in
iret
out
pop
lods
mov
mov
in
or
sub
sub
stos
aas
sbb
or
xchg
roll
mov
fmull
sub
pop
outsb
jno
and
inc
fisttpll
fisubrl
mov
jo
addl
into
mov
js
lds
cmp
and
jl
out
out
lods
xchg
in
cmpsb
dec
pop
mov
jmp
in
jnp
pop
loopne
dec
or
cmp
aad
xor
jb
call
je
mov
popa
jns
xor
int3
dec
in
repnz
xor
adc
inc
and
push
xor
lock
add
and
adc
add
sub
outsl
fbld
mov
into
fimuls
das
pushf
jno
xchg
mov
clc
add
add
cmp
addr16
or
lcall
add
gs
aaa
and
mov
fcoms
pusha
or
xor
or
fwait
orb
xor
pusha
push
test
mov
arpl
inc
lahf
out
mov
dec
adc
inc
add
xorl
cltd
xchg
jmp
xor
bound
dec
scas
or
add
popa
jae
dec
shrb
test
cltd
pop
cmp
shl
mov
sub
sub
mov
jae
jne
shl
test
push
mov
popa
adc
stos
jne
std
incb
gs
jge
loopne
push
lret
add
ss
adc
sbb
lret
nop
sbb
mov
shll
adc
add
mov
xor
test
das
add
aam
fidivs
orb
dec
mov
dec
push
mov
cmpb
mov
ret
xor
iret
fisubl
in
movsl
sub
fmull
jo
jl
lock
xchg
pusha
js
jmp
xchg
jb
cwtl
mov
mov
inc
mov
rclb
dec
fldt
pop
rol
push
sub
xchg
test
or
bound
cmp
sbb
mov
loop
pop
ficompl
xchg
dec
outsb
movsb
sbb
outsl
jne
icebp
not
xchg
push
inc
xchg
mov
sub
mov
imul
jns
xchg
sub
push
insb
mov
popa
gs
jns
into
addr16
lret
inc
sub
popl
icebp
repnz
scas
pop
in
or
ret
in
pop
js
rolb
dec
push
in
cs
jne
mov
stos
outsl
push
pop
fs
adc
cmpsb
pop
icebp
jmp
out
jbe
in
iret
jge
insl
or
sbb
les
xor
push
sub
dec
mov
sub
add
mov
inc
daa
xor
xor
stos
lcall
add
add
push
fistpl
loop
pop
cmpsb
xorb
imul
adc
fisubl
jle
mov
push
mov
jecxz
mov
stos
addr16
xor
cmpl
xchg
push
daa
xchg
and
cs
inc
add
inc
inc
arpl
enter
push
outsb
sbb
jge
into
ss
xchg
scas
out
and
sub
mov
jb
pop
dec
outsb
or
or
enter
pop
xor
xchg
cmp
mov
fdivrl
scas
or
test
lcall
xchg
test
pop
inc
loope
cmp
addr16
ret
push
jno
ss
test
js
pop
and
xchg
ss
movsb
in
push
push
pop
sub
jmp
inc
push
dec
popf
push
sbb
daa
push
cli
addr16
lcall
pop
out
mov
ja
andb
arpl
or
shl
inc
jecxz
dec
gs
lds
inc
iret
mov
movaps
pop
mov
scas
ss
das
or
fsubrl
xchg
cld
pop
out
or
mov
inc
fmull
out
adc
sahf
cld
dec
push
and
xchg
dec
mov
mov
addr16
pop
decl
sbb
rclb
dec
xor
adc
fwait
bound
and
cmp
sbb
movsb
sti
sbb
rcll
arpl
pop
xorb
mov
mov
jge
inc
push
adc
mov
inc
fs
addr16
jns
cld
jb
cmp
adc
mov
clc
and
push
out
sbb
cli
cld
andl
ds
test
mov
cs
dec
sbb
push
inc
divl
movsb
inc
xor
or
out
sub
mov
push
sbb
push
notb
enter
jecxz
lock
xchg
mov
mov
push
andl
ja
pause
mov
sahf
aam
lods
inc
cmpl
int3
push
orl
repz
aam
test
sub
pushf
or
shll
test
add
sbb
ds
adc
sbb
cmp
pushl
xor
jmp
push
dec
ljmp
shlb
push
arpl
movsb
into
mov
sarl
test
cmp
pop
mov
lcall
lahf
aas
loope
fsubs
repnz
addr16
pop
xor
mov
jo
outsb
mov
lea
jge
shl
sbb
pop
mov
fwait
push
inc
test
push
int3
movsb
mov
stc
fsts
aam
in
mov
jns
mov
lods
pop
aam
xchg
nop
add
fucomi
ja
and
outsb
leave
lds
xor
adc
xor
pushf
fwait
pusha
cmpsl
cmp
movsb
adc
and
mov
call
ret
sub
or
lock
idiv
test
sub
ficomps
fistpll
aam
iret
adc
imul
push
push
aam
mov
rcrl
push
repz
int
aas
lods
push
test
out
jb
ljmp
cmp
adc
lret
rcrb
jecxz
nop
inc
and
aaa
inc
outsl
mov
addr16
mulb
sbb
jp
mov
in
lea
sbb
ret
jge
pushf
xchg
stos
jae
out
jae
and
dec
mov
paddw
or
lret
jp
inc
mov
xor
mov
jns
insl
adc
cmp
mov
sbb
fwait
mov
ret
movsb
call
cld
pop
cli
lret
add
rcrb
repnz
or
jns
movsl
pop
int3
fildll
adc
cmpsl
xchg
inc
mov
insb
push
and
loope
mov
lock
std
sub
bound
xorb
push
pop
mov
jp
push
rclb
cltd
cmc
iret
lcall
mov
int
xchg
inc
xchg
or
mov
inc
or
daa
adc
data16
mov
out
ds
dec
inc
bound
std
aam
and
or
or
push
cli
mov
movsb
neg
push
pop
test
mov
add
les
nop
data16
mov
xor
mov
imul
lea
push
lahf
pop
dec
dec
lock
add
lods
data16
jmp
fidivl
mov
ljmp
inc
fyl2xp1
cs
push
push
xor
in
pop
fiadds
pop
scas
mov
ret
xor
xlat
popf
sub
xor
push
or
stos
imul
enter
popf
mov
sbb
jp
flds
add
mov
lret
cli
imul
push
inc
xchg
jo
pop
xchg
cmp
adc
push
shlb
bound
push
push
adc
adc
cmpl
pop
bound
and
mov
jl
add
or
ret
mov
and
ret
mov
das
inc
fists
daa
pop
andl
test
fcmove
push
leave
fmul
sbb
stos
dec
adc
mov
cmp
xchg
imul
frstor
cld
mov
jo
sahf
in
jle
and
imulb
movsl
insb
push
dec
lahf
jno
sbb
scas
mov
scas
rcrl
cld
mov
push
leave
mov
int3
xchg
lret
jge
nop
sub
mov
lods
inc
push
jne
enter
stc
push
pop
cmp
shrl
xchg
js
loope
mov
add
sbb
stc
sbb
cmp
pushf
jns
and
xchg
mov
sbb
es
xor
lret
ret
jmp
xor
in
decb
mov
sbb
scas
test
dec
adc
and
mov
inc
push
shl
dec
mov
mov
and
les
gs
xor
or
jmp
cmp
push
mov
or
call
or
scas
icebp
mov
mov
jl
lea
jno
ljmp
mov
mov
cltd
jns
xchg
stos
int3
push
icebp
mov
in
pop
cmpsb
add
xor
cld
out
ja
jae
mov
adc
or
inc
rolb
loope
dec
sti
insl
or
jo
rorb
iret
inc
ficompl
dec
sub
jbe
push
aam
stos
imull
jp
cmc
rcrl
sub
or
pushf
jl
ss
aaa
cli
xor
push
mov
sbb
dec
out
fwait
jne
ja
mov
mov
dec
mov
mov
push
mov
mov
xor
push
ret
cmp
sbb
dec
jno
fldl
xchg
ss
mov
jg
fdiv
inc
repz
ss
mov
test
mov
mov
arpl
ret
lret
mov
lods
das
cli
sbb
ret
mov
ds
jg
aas
es
or
mov
fisubrl
sub
xchg
lea
lcall
mov
mov
scas
xchg
mov
int3
rcll
insb
std
lods
jb
fcomps
flds
mov
aaa
repnz
dec
dec
movsl
mov
or
and
outsb
lret
outsl
in
and
enter
int3
int3
pop
cmp
jmp
or
cld
lret
movsl
test
testl
imul
xor
out
arpl
sahf
xchg
pusha
mov
stc
rclb
push
cmc
xchg
ffree
mov
jl
add
and
xchg
pop
xor
aad
ror
stos
loopne
sbb
mov
popf
jg
cmp
movsl
pop
flds
cpuid
daa
test
push
cmp
xor
shll
mov
dec
in
cmpsl
out
cmp
push
mov
scas
jo
jl
dec
divb
mov
fistps
cs
sti
mov
adc
repz
in
add
pop
mov
fistpl
aad
or
fldt
adc
push
mov
mov
inc
ret
dec
inc
xor
jp
push
push
and
sub
xchg
lea
or
stos
shr
lds
insl
out
shr
or
pop
mov
divl
fcmovnbe
nop
fisttpl
xor
into
mov
lret
mov
fdivs
in
sbb
jns
dec
push
adcb
dec
jno
pop
mov
imul
enter
adc
imul
iret
lods
sti
addr16
bound
lahf
in
cmp
aam
adc
inc
add
xorl
mov
pop
jno
scas
fs
xor
outsb
fstl
mov
or
xchg
xorl
inc
insb
mov
and
push
pop
jb
dec
add
or
scas
call
inc
bound
xchg
inc
imull
lret
inc
ljmp
iret
adc
cmp
outsl
inc
loopne
test
mov
inc
js
repz
or
fdivr
push
cmp
pusha
stos
hlt
xchg
adc
jns
inc
out
lret
fcoms
pop
pop
cmp
xor
nop
mov
aaa
out
dec
sbb
and
jo
inc
lcall
sub
mov
push
sbb
inc
data16
xchg
or
in
mov
out
mov
and
jnp
and
inc
or
cmpsl
shrl
xchg
pusha
bound
test
rol
movsb
outsl
inc
mov
pop
adcb
sahf
sub
test
mov
push
decl
call
jle
xlat
out
and
out
stos
gs
push
add
scas
jmp
xchg
pop
mov
mov
loope
hlt
mov
push
lahf
add
inc
xor
add
nop
push
aaa
or
in
aam
sbb
fadds
xor
dec
iret
sub
shrl
adc
fs
lock
scas
and
rcl
imul
pop
jne
js
mov
test
sbbb
cmpsl
cltd
push
addr16
mov
ds
data16
mov
stos
adc
daa
aaa
sub
aad
mov
mov
shl
pop
mov
pop
cmp
add
scas
roll
jnp
mov
and
cmpl
pop
and
in
aas
in
and
mov
push
xor
ljmp
push
sub
lods
aam
jae
adcb
gs
and
jle
fimuls
ja
dec
sbb
mov
mov
leave
fsubl
mov
add
lea
dec
push
pop
out
rcll
sarb
pop
repz
sub
scas
fisubrl
js
xchg
mov
lock
xor
cmpsl
jb
mov
loop
imul
int
in
and
in
or
rorb
pusha
add
fucom
inc
fstps
push
mov
loopne
ja
xor
mov
mov
jg
sbbb
lcall
jmp
mov
aad
push
in
aas
lahf
sub
ja
pushf
sbb
mov
mov
pushf
dec
fwait
adc
inc
cmp
subb
xchg
pop
aam
sbb
popf
mov
pop
or
les
sub
adc
testl
adc
inc
arpl
xchg
pushf
clc
jno
es
jmp
xor
mov
xchg
or
xchg
sbb
cmp
repnz
loop
fmuls
dec
loope
rcll
inc
add
add
stos
mov
mov
push
stc
js
add
movnti
adc
adc
bound
adc
pop
lods
or
aaa
cli
test
jmp
insl
mov
xchg
pop
lahf
mov
inc
and
subb
jae
xor
mov
test
mov
bswap
push
out
push
dec
cmp
pop
or
inc
dec
and
ja
add
in
call
icebp
jb
rcrb
dec
icebp
cmc
add
data16
inc
xorb
cltd
add
or
mov
sbb
fistpll
dec
scas
mov
pop
xchg
sub
repnz
push
int
movsb
call
dec
adc
xchg
sbb
xchg
cltd
push
add
out
enter
idivb
dec
dec
subl
roll
ss
pop
inc
mov
icebp
lret
add
hlt
mov
das
inc
add
mov
sbb
sub
lret
hlt
xchg
adc
inc
xorl
iret
dec
xchg
cmc
inc
jns
in
mov
push
in
mov
cmpsl
fists
adc
sub
enter
push
mov
xchg
add
ja
int3
push
adc
dec
jno
xorl
dec
mov
ja
dec
lret
fdiv
or
xchg
das
pop
int
loop
bound
lcall
cmpsb
adc
mov
jae
popf
dec
sub
in
es
xchg
jnp
imul
imul
imul
and
push
mov
push
jae
scas
mov
push
cmp
aam
in
and
fiadds
ja
jge
pop
inc
lods
xchg
ljmp
aaa
push
hlt
cltd
aad
sub
repnz
xor
ret
sti
xchg
imul
mov
ret
mov
dec
mov
out
sub
out
add
outsb
xlat
call
fsubrp
mov
inc
xchg
icebp
xor
inc
mov
and
xor
xchg
cli
std
pop
fdivs
pusha
test
push
lds
pop
xchg
pop
aaa
cli
das
sbb
testb
das
cli
hlt
inc
int3
repnz
rolb
je
cmpsl
jp
xor
sbb
fistpll
scas
out
pop
cmc
fstpl
pop
push
or
or
sbb
inc
daa
inc
mov
lahf
lcall
iret
js
inc
notb
test
mov
shr
add
les
pop
pushf
stos
adc
mov
out
adc
push
outsb
pop
mov
ljmp
lock
daa
and
adc
in
test
jmp
cli
icebp
add
fmuls
sbb
jmp
notb
ja
mov
add
cmovnp
xor
ret
subb
scas
lods
xlat
andl
pop
cltd
push
adc
outsl
mov
test
aaa
jbe
inc
dec
jne
pop
fimull
popa
add
cli
cmp
lcall
sub
xor
or
cli
ja
add
mov
icebp
dec
js
ja
cmpsb
mov
flds
rolb
xchg
push
data16
dec
dec
adc
add
push
pushf
pop
bnd
in
repnz
outsb
inc
sbb
fmulp
jge
cld
xorb
jno
adc
push
jmp
sub
leave
xor
xor
mov
std
cli
and
push
push
in
cmp
mov
fdivr
sbb
and
and
pop
mov
push
sbb
int
pop
mov
push
dec
lods
cmp
sbb
pop
out
cmpsb
cld
sbb
mov
pop
ss
mov
jmp
mov
sub
xchg
pusha
sbb
sub
stos
mov
daa
jl
pop
fmul
bound
js
cmp
imull
jecxz
js
xor
rcrb
daa
int
xor
dec
in
mov
insb
mov
test
into
stc
lret
jns
mov
adc
pop
dec
gs
fadds
nop
fwait
insb
mov
outsb
fmull
iret
fisubrs
insl
inc
jg
cmp
pop
out
pop
outsb
inc
dec
lods
jp
cmp
mull
dec
mov
xlat
sbb
xorl
aad
pop
out
aam
push
arpl
test
mov
ds
scas
jecxz
jnp
sbb
jae
leave
adc
mov
xor
jge
pop
jns
ja
mov
fildl
rcrl
pop
jg
fcmovnu
push
push
fiadds
ret
jp
aad
xorb
pop
add
push
pushf
or
inc
jae
out
xor
lods
adc
mov
loopne
orb
push
std
push
test
inc
popf
imul
pop
add
mov
repz
pop
xor
cltd
or
aas
jg
mov
cmpsb
xchg
arpl
adc
and
xchg
je
sbb
mov
mov
imull
pop
mov
into
imul
mov
cs
iret
xchg
push
aam
xor
lock
into
pusha
movsb
out
jns
lahf
fwait
dec
xor
inc
mov
dec
mov
sbb
jo
cmp
shlb
mov
cltd
xchg
dec
hlt
ljmp
imul
adc
pop
mov
pop
mov
xor
fwait
xchg
cltd
lea
jne
dec
enter
pop
add
fcmovnbe
lods
inc
divb
push
mov
imul
test
cmpl
jno
jbe
ss
mull
call
jo
mov
xchg
jae
inc
adc
cmp
loopne
push
pop
cld
rcll
ret
xchg
push
out
xchg
jl
insl
mov
adc
push
repnz
inc
cs
popf
xor
cmpsb
int
mov
ja
xor
icebp
testl
cmp
loop
jle
addl
dec
clc
push
popa
aaa
sar
and
adc
or
imull
loop
pop
xchg
call
add
adc
xchg
xchg
fs
mov
pop
xor
and
xor
call
mov
fcmovnb
cwtl
test
movsb
shufps
sub
xchg
xor
lods
adc
test
push
sarl
adcl
sbb
push
cwtl
xor
add
shl
clc
sarb
mov
stos
dec
packuswb
int
insl
lret
push
jmp
mov
push
out
mov
loopne
mov
cltd
das
pop
lret
outsb
or
pop
dec
nop
sbb
xchg
das
inc
sbb
sub
aaa
test
shrb
hlt
inc
fucomp
test
jge
aas
notb
xchg
out
sub
push
int3
mov
jae
enter
in
jl
insb
daa
dec
and
xor
or
xchg
lcallw
lds
mov
xlat
or
jge
pop
outsl
aad
inc
sub
fidivl
xchg
cs
inc
pop
jl,pt
xor
decl
scas
inc
dec
into
push
cmp
mov
push
rcrb
dec
or
add
daa
xchg
iret
and
es
jl
add
sbb
sub
inc
cmc
and
xor
lds
mov
cmc
rcrb
cmc
test
movsb
ret
lahf
xchg
pop
je
pop
lock
push
add
mov
or
adc
adc
dec
push
sbb
lret
push
or
cmpsl
add
cmp
lds
push
inc
pushf
sbbb
insl
repz
push
inc
and
adc
xchg
xchg
movsb
iret
push
shrl
push
inc
push
ret
jns
pop
cmp
out
sbb
lock
mov
jmp
mov
jecxz
inc
pop
cmp
mov
xchg
pop
sti
mov
movsb
sahf
xlat
xor
jns
popf
cltd
idiv
and
imul
push
fsubl
sbb
sbb
hlt
xchg
mov
and
iret
sti
push
mov
cmp
bound
push
inc
rclb
jno
add
inc
stc
adc
inc
xchg
or
pusha
inc
push
ss
cmp
pop
xor
xchg
mov
std
jb
movsl
mov
cmp
and
fnstsw
sti
test
xor
lcall
push
lods
mov
adc
sti
adc
fsubs
es
insb
jge
push
in
iret
repnz
sub
inc
mov
inc
jns
cmp
test
fcmovbe
push
jmp
push
shlb
xlat
adc
push
push
adc
out
aaa
icebp
jp
inc
or
lahf
cmc
mov
push
mov
jnp
std
mov
pop
inc
pop
ret
fs
xor
add
mov
loope
aaa
or
lods
or
xor
jl
or
push
ret
outsl
notb
mov
push
pop
push
pop
andl
xchg
or
xchg
jg
xor
loop
cli
cmpsb
movsl
xchg
call
call
out
lods
sub
test
and
leave
jno
inc
shrl
adcl
clc
mov
nop
xlat
fcom
in
mov
add
and
mov
push
and
out
or
xor
xchg
stos
aaa
dec
mov
ljmp
outsl
pop
mov
mov
nop
je
mov
push
add
pusha
cmp
jbe
pushaw
dec
adc
fistl
xchg
inc
add
xor
sbb
cs
dec
dec
ss
leave
pusha
lea
dec
sbb
rcrb
xor
roll
dec
pop
xchg
sub
adc
mov
push
and
mov
popf
mov
emms
xor
sar
cmpsb
dec
shrl
and
daa
fcompl
mov
es
cmpsl
fwait
sub
lahf
sbb
testb
rcr
xor
add
cwtl
push
test
xchg
mov
pusha
andb
andl
test
inc
repz
xchg
mov
xor
rcl
push
push
pop
subb
xchg
cmp
pushl
and
xchg
insl
bound
mov
clc
jae
scas
pop
jnp
mov
push
jge
clc
mov
test
jl
in
jg
sbb
sub
pop
mov
call
xchg
mov
xor
fnstsw
pop
scas
pop
mov
xchg
std
insb
adc
aaa
dec
xchg
sub
mov
in
ret
rol
jne
xchg
insb
lea
aad
sarl
or
test
lcall
into
and
mov
shl
fdivr
aaa
and
aas
pop
loope
jae
fdivr
les
outsl
xor
sub
mov
jp
mov
mov
mov
std
sbb
in
pop
cmp
mov
repz
xchg
add
sbb
jno
imul
pop
icebp
es
pop
pop
fwait
aam
push
sbb
loop
mov
pop
mov
in
rolb
sbb
pop
data16
xorb
clc
imul
push
das
push
nop
subl
addr16
pop
push
pop
pop
cmc
fsubrl
lret
loop
xchg
adc
test
inc
inc
pop
notb
jns
inc
sub
mov
insl
push
jae
mov
stos
out
aas
xor
sbb
pusha
stc
jns
jae
movl
pop
xor
jg
loope
dec
xchg
mov
scas
push
in
cmp
add
jo
repz
int3
loop
push
out
or
ss
je
dec
mull
xlat
push
sub
mov
xor
xor
pop
pop
adc
push
xlat
jle
adc
mov
jo
stc
ljmp
xor
inc
sarl
sahf
mov
dec
mov
and
in
rol
cwtl
mov
test
jge
fiadds
aaa
sbbb
jbe
pop
and
pop
les
repnz
inc
decl
mov
push
clc
push
loopne
loope
cmp
mov
repz
leave
pop
daa
sahf
repz
lods
sbb
jo
mov
or
cli
inc
test
stc
dec
push
lcall
jle
sub
push
xor
test
xor
xchg
push
das
cmp
sbb
je
mov
add
add
movq
adc
dec
out
mov
pop
bound
or
lret
lret
ret
iret
std
iret
push
mov
scas
aad
cli
mov
jo
mov
push
or
sub
outsl
jmp
aad
mov
xchg
jl
and
out
sbbb
sbb
xor
jmp
js
addr16
lods
daa
daa
cmp
xor
nop
and
imul
inc
out
outsb
test
pusha
add
push
sub
xchg
nop
shl
sbb
vmovntps
lock
in
and
nop
pop
rcll
dec
div
sub
push
insb
shrb
push
inc
mov
push
lock
mov
jmp
inc
out
sahf
stos
jle
pop
daa
aaa
adc
ret
push
imul
in
sbb
push
cmp
fwait
lahf
les
movsl
mov
bound
mov
mov
imull
fcoml
xor
push
inc
sub
and
scas
int3
mov
jg
sub
push
jns
add
jo
and
std
and
sahf
stos
inc
cltd
jle
into
nop
push
dec
fiadds
dec
xchg
jbe
sbbb
inc
cmp
arpl
icebp
adc
xchg
add
jo
in
cli
pop
fs
insb
add
mov
mov
mov
daa
sub
cmp
jns
jg
mov
xchg
idivb
or
scas
hlt
push
mov
imul
mov
mov
dec
in
or
mov
adc
sbb
adc
repnz
mov
cmc
call
call
lods
pop
in
nop
repz
pushf
cmpsb
stos
roll
xor
and
or
int3
add
xchg
jno
xchg
pop
jp
mov
pop
push
sbb
fstl
xlat
lods
cmpsl
sbb
aam
or
shll
cmp
fildl
sub
inc
jmp
push
outsb
aam
loopne
xlat
xor
decl
mov
push
hlt
iret
add
lods
das
xor
roll
mov
mov
mov
add
and
scas
xor
outsl
mov
push
test
inc
cltd
call
pop
mov
pusha
cltd
imul
cmp
movsl
xor
in
test
call
jbe
sbb
repnz
comiss
sub
pop
ret
pop
dec
or
jmp
jae
push
xchg
ljmp
mov
sahf
aam
arpl
or
mov
xchg
hlt
xchg
cmpsl
mov
dec
push
jp
loop
into
insl
popa
inc
sbb
or
add
out
pop
push
push
insl
mov
push
pop
mov
cmp
or
xor
pop
lods
pop
cmpsl
test
push
push
mov
insb
stos
jl
sbb
fildl
sbb
cmp
imul
in
stos
and
ret
mov
adc
orb
imul
mov
dec
push
mov
lock
jle
std
in
out
mov
jae
out
add
vsqrtsd
add
xchg
xor
mov
out
in
pop
fcmovnbe
mov
xor
rcrl
cmp
daa
cmpsw
mov
fadds
jnp
into
scas
pusha
sub
xchg
in
mov
inc
movl
pop
inc
and
lods
shr
inc
cli
jg
xchg
mov
shr
push
mov
mov
pusha
ret
jns
fwait
and
inc
xor
mov
cmp
xchg
aaa
xor
movsl
in
aam
inc
int3
mov
and
mov
or
xchg
sbb
ficomps
pop
push
fsubrs
adc
cmp
bound
movsb
mov
sbb
test
movsl
xchg
fdivr
and
cld
mov
mov
cmpsb
outsb
jl
shl
movl
pop
sub
or
pop
mov
cltd
jb
mov
cmp
push
loop
adc
and
and
sbb
dec
jb
cltd
out
out
jbe
enter
iret
int
inc
mov
mov
pop
lea
mov
adc
xor
out
sahf
out
pop
and
mov
test
jl
mov
mov
pop
adcl
sub
shll
push
in
test
xchg
jb
shlb
jbe
jmp
mov
add
out
lcall
inc
cld
clc
lret
mov
sbb
adc
ds
sub
stos
add
jnp
jge
adc
add
add
mov
jg
pop
xchg
mov
int
and
test
repnz
loopne
jno
or
push
movsl
out
and
lea
or
ljmp
repnz
sub
shrb
add
push
adcl
sbb
jne
pop
leave
pop
pop
cwtl
xchg
into
dec
mov
bnd
mov
aas
pop
daa
fmull
and
test
push
movsb
sbb
pop
leave
push
xchg
out
repz
lds
fcmovbe
es
xchg
insl
addl
pop
xor
jbe
dec
mov
sub
jle
mov
xor
xor
imul
cmc
add
sub
or
push
and
scas
or
inc
mov
inc
sub
mov
je
dec
mov
jnp
jg
mov
movb
shr
sub
in
push
mov
adc
xchg
xor
push
add
mov
jns
or
mov
jnp
or
pop
mov
addr16
mov
push
and
adc
call
push
jo
xor
xchg
fistpl
sahf
pop
jno
xchg
lea
imul
mov
pop
add
xor
rolb
push
stos
adc
add
aas
xor
lcall
stos
push
jb
mov
push
stos
clc
push
mov
push
arpl
flds
add
or
lock
data16
mov
pop
das
sub
push
push
ds
sbb
push
cwtl
adc
cmp
popa
mov
in
test
dec
add
fldenv
loopne
mov
and
sbb
ds
sbb
xchg
pop
es
cwtl
lods
iret
aaa
push
fadds
icebp
or
push
push
fwait
mov
jle
dec
jp
ficoml
adc
push
js
icebp
movsb
aaa
push
add
stc
sub
cwtl
filds
sbbl
jp
jne
out
and
xor
int3
mov
in
cmp
out
pop
out
mov
and
and
pop
sub
push
push
sti
inc
dec
std
dec
repz
jg
fwait
cs
or
mov
popf
mov
cmc
dec
shrl
mov
mov
cmp
sbb
and
add
daa
lcall
dec
lds
mov
les
push
jne
mov
mov
lcall
enter
xchg
in
mov
aaa
push
xor
adc
jl
sahf
lea
mov
cltd
xorl
dec
add
xor
repz
mov
and
scas
sarb
repnz
xor
dec
mov
clc
fsub
out
jle
and
sbb
and
xor
adc
jg
fcoms
std
mov
cli
cs
or
daa
aaa
xlat
lea
js
clc
pop
mov
repz
add
inc
or
dec
cmp
test
push
sbb
sub
mov
punpcklwd
mov
cli
and
rcrb
push
ret
fldt
mov
and
mov
out
out
mov
mov
rcr
mov
aam
add
sahf
in
cmp
test
xor
popf
cmpsb
imul
cmp
pusha
pop
inc
mov
sbb
xchg
sub
push
fistpl
sbb
mov
inc
lods
or
ss
xlat
insb
and
testl
xlat
es
cmp
inc
xor
sbb
movsl
leave
add
and
cmp
pop
cli
push
push
jo
hlt
push
negb
ret
test
or
and
pop
mov
pop
stos
push
mov
pop
movsb
pop
fucompp
fsub
into
mov
jae
pop
dec
add
sub
or
jecxz
xchg
mov
add
fimuls
scas
mov
pop
fisubrl
adc
test
cwtl
mov
cmp
fisubs
cld
sub
mov
adc
jne
add
popa
xchg
aaa
insb
stc
mov
mov
popf
shrl
icebp
or
stc
pop
xchg
xor
lret
repz
popf
lahf
stos
cmp
xlat
xchg
ret
push
jno
in
adc
add
xor
scas
or
and
jno
out
xlat
sahf
sbb
and
cmpsb
jo
pop
das
pop
int3
or
pop
sahf
mov
jnp
int
add
mov
or
daa
daa
jmp
cltd
jmp
ret
lret
mov
push
pop
int
and
lret
mov
sti
clc
int3
xchg
mov
xor
mov
cmpsl
jge
and
test
stc
mov
leave
mov
cmc
test
lods
in
adc
jne
add
aaa
in
add
inc
subl
sub
add
mov
in
cmc
or
xchg
fdivl
mov
xor
icebp
push
ret
add
sbb
out
push
les
sahf
clc
sbb
sbb
fsub
mov
popf
jge
xchg
in
pop
add
adc
jp
fidivrs
pop
loop
xor
jbe
or
sti
jo
inc
rolb
cmp
or
inc
xchg
mov
shll
daa
pop
loope
movsl
adc
out
jnp
in
fdivrl
ficoms
sbb
cmc
aam
mov
xor
in
push
int3
mov
xchg
aas
mov
repnz
lods
cmp
sub
or
ror
dec
jecxz
movsl
outsb
jle
xor
ss
jo
sub
pop
pop
shll
sbb
bnd
sub
sti
mov
lds
xchg
cmpsl
xchg
repz
sub
sbb
dec
dec
xchg
lods
adc
stc
dec
lcall
push
inc
lods
in
daa
aas
les
push
adc
cld
mov
adc
icebp
dec
xor
or
mov
add
out
in
adc
aad
stos
ss
xchg
imul
leave
mov
or
dec
cmp
dec
jne
iret
rcll
rorb
ja
scas
add
mov
call
mov
jne
pusha
adc
mov
shll
mov
cld
dec
xor
or
push
mov
mov
clc
inc
xchg
mov
filds
mov
push
inc
decl
ja
popf
rcr
sub
xor
je
push
aam
cmpsl
stos
insl
xlat
jno
cmpsb
sub
mov
lret
lods
pop
pop
or
pop
mov
sbb
es
inc
adc
cs
mov
insl
push
ds
mov
adc
cmp
sarb
ss
xor
cwtl
jl
fcomps
cmp
ret
in
cmp
sbb
cmp
js
dec
jmp
std
adc
sub
sbb
push
sub
jle
decl
pop
mov
mov
jl
adc
leave
shll
inc
pushf
lea
jle
jns
ljmp
lds
dec
sahf
pop
repnz
pop
cmp
fnstenv
sub
mov
scas
pusha
fsubl
mov
adc
push
insl
pop
inc
pop
dec
mov
inc
dec
xor
and
mov
push
mov
setne
jbe
insb
sbb
sbb
addr16
pop
xchg
arpl
stos
sar
stos
cmp
pushf
loope
das
cmp
loope
out
adc
std
bnd
out
mov
loop
mov
out
scas
push
fwait
aad
xor
sbb
imul
push
push
or
aam
pop
pusha
or
jnp
std
je
js
xor
sub
clc
scas
ret
cmpsl
push
dec
arpl
xor
fcompl
jmp
xchg
mov
jns
mov
rcr
lods
mov
lock
out
sbb
push
lods
daa
stc
repz
pusha
aam
aas
mov
clc
jp
rclb
out
xchg
clc
sub
dec
xor
repnz
dec
lock
cli
decw
lret
and
inc
jecxz
pop
lds
push
jge
add
inc
pop
push
push
inc
jp
and
jno
xrelease
mov
jmp
push
push
cmp
cmp
fistpll
xchg
aam
hlt
mov
xor
or
lret
imull
or
adc
add
fisubrl
jg
ljmp
ret
xor
adc
or
adc
jp
lock
sub
mov
out
pop
es
mov
pop
jbe
in
cmp
push
pop
adc
inc
pop
test
movl
push
pandn
les
aas
lds
loopne
std
cmp
into
scas
stos
push
xchg
jns
jnp
xchg
jo
into
add
sub
loop
test
outsl
push
mov
or
test
cli
or
xchg
xchg
daa
je
imul
ja
fxch
test
cmp
stos
popf
push
jmp
xchg
cmp
aaa
jns
popa
cmp
out
jnp
cmpsb
pop
lret
and
sahf
push
jb
out
loope
insl
rclb
hlt
pop
lea
cmpsl
xlat
mov
into
or
cld
xchg
pop
div
mov
dec
mov
jnp
cltd
mov
fstpl
cwtl
dec
jns
and
jo
shl
sar
push
or
dec
push
add
addr16
cld
inc
rcr
jae
rcr
and
lahf
cmpsb
dec
sub
notb
mov
mov
shrl
dec
jns
cli
adc
sbb
loopne
add
xchg
aad
aad
mov
push
scas
inc
js
cld
scas
outsl
int
ja
ret
or
mov
stc
dec
dec
jbe
loop
cli
fistps
xlat
xchg
je
repz
lods
repz
xor
lahf
mov
dec
pop
in
scas
push
jbe
sbb
fucom
fists
sbb
jnp
xor
jl
sbbb
adc
adc
inc
xchg
add
js
pop
add
loopne
dec
mov
testl
loopne
sbb
ficomps
nop
ja
scas
scas
lahf
or
int
bound
mov
mov
mov
adc
shll
and
and
sub
sbb
adc
xor
daa
pushf
xchg
xor
dec
shlb
push
enter
jge
imul
jbe
in
cmp
cld
repz
adc
xchg
jmp
cmp
ret
mov
shl
mov
insb
repz
inc
hlt
insb
xor
push
daa
sub
or
cmp
push
cltd
cmpsl
adc
mov
cmp
jae
push
pop
dec
jl
and
mov
mov
lods
stos
hlt
mov
scas
lahf
fisubrs
pop
repnz
jne
shlb
movsb
dec
fucomip
es
daa
dec
in
mov
je
or
and
mov
iret
cmp
mov
scas
das
push
xchg
cmp
add
add
gs
fidivrs
jbe
dec
call
ja
loop
mov
loope
push
aam
jns
mov
mov
mov
loopne
jae
inc
push
stc
lods
pop
mov
outsl
dec
movsl
push
into
mov
sub
pop
sbb
pusha
push
int
iret
fmul
sbbb
add
mov
aaa
jnp
out
pop
aas
mov
xor
mov
jno
stos
push
add
shrb
xchg
sub
xchg
push
pop
xor
push
push
sub
cwtl
mov
mov
inc
sbb
inc
lret
nop
pushf
int3
pop
pop
lcall
emms
in
cltd
sbb
or
adc
test
push
out
loopne
push
ficoml
test
xchg
cmp
inc
jecxz
in
xlat
xor
aad
pop
push
mov
mov
jl
dec
out
out
xchg
xor
fucomip
cmp
lret
jnp
in
aas
inc
inc
push
shr
out
xchg
xor
mov
push
mov
adc
jg
sbb
cwtl
mov
imul
jg
pop
repz
adc
mov
mov
loop
push
or
xor
fisubl
jl
test
cmp
mov
push
adc
or
adcl
or
test
in
ds
jnp
add
mov
lcall
out
pop
mov
jnp
lock
mov
xor
ret
test
xor
out
push
add
push
sub
pop
shlb
inc
mov
dec
push
jno
stos
xlat
mov
or
pop
dec
push
lret
pop
xchg
call
loope
push
sbb
setp
sbb
cmp
mov
jmp
cltd
daa
sub
cwtl
mov
pusha
cmpsl
in
inc
mov
loopne
mov
daa
xlat
shrb
fcomip
call
out
xchg
popf
out
std
and
and
lahf
ljmp
dec
int3
xor
repz
push
xchg
daa
mov
add
add
cmc
mov
fidivs
movsl
or
sbb
aaa
mov
jb
add
mov
sub
mov
push
adc
dec
dec
notb
cmp
bound
dec
lahf
cmpb
dec
pop
test
shr
dec
or
push
and
inc
jp
sbb
mov
mov
iret
or
mov
pop
jmp
scas
sbb
stc
out
int3
sbb
clc
xchg
fnsave
cli
push
mov
xor
jp
dec
cwtl
or
out
sbb
lret
mov
out
jno
dec
jmp
faddp
push
cmp
loop
mov
int
and
and
push
insl
push
movsl
jbe
jle
adc
je
and
jo
jmp
cmc
pop
loop
push
add
in
fildll
xchg
cmpsl
xchg
xchg
cmp
xor
cmp
ja
add
inc
jg
addb
loop
push
out
cmp
mov
daa
test
xor
mov
fstl
outsl
cmp
in
test
xchg
adc
xchg
popf
inc
jne
shl
xchg
clc
lret
repnz
test
xchg
jb
out
sub
xchg
sbb
adc
sub
and
call
push
jns
or
jae
les
fadd
and
push
pop
in
pop
pop
inc
movsl
popa
pop
fcoml
pop
jne
mov
dec
cmp
xchg
xor
pop
jo
addr16
pop
gs
les
inc
loope
addr16
or
fadds
xchg
xchg
jns
pop
sub
mov
jp
mov
xor
xchg
fsubr
fsubl
ret
inc
out
inc
push
xor
clc
or
mov
in
xchg
sti
shr
or
pusha
inc
ret
cli
mov
sbb
test
or
adc
inc
xchg
dec
ret
ljmp
and
mov
fdivrl
xchg
ror
std
jbe
sti
int3
outsb
cli
mov
movsb
lea
in
mov
sub
loope
push
mov
mov
mov
fldt
or
mov
int3
cmpb
pop
and
push
cmpsb
daa
das
repz
pop
ja
movsb
mov
sbb
mov
imul
mov
icebp
jl
mov
mov
xor
jecxz
cli
xchg
test
xchg
xchg
sub
imul
sti
push
cwtl
jns
cmc
and
inc
lcall
or
aaa
xor
add
scas
cli
pop
inc
mul
push
xor
mov
pusha
lods
jp
test
mov
dec
clc
hlt
inc
and
sti
inc
mov
sbb
cmp
add
cld
rol
sbb
adc
dec
adc
dec
cmp
pop
test
mov
mov
mov
mov
mov
mov
inc
xor
cltd
nop
cmc
dec
fwait
sbb
sub
and
nop
xchg
idivl
sub
aam
dec
in
testl
pop
jnp
bound
jmp
jbe
sub
and
insl
or
iret
mov
loop
ret
sbb
inc
cli
ret
mov
pushl
or
mov
loop
dec
jno
popa
or
ret
jae
repz
stos
push
ljmp
mov
mov
in
mov
push
and
xchg
mov
test
mov
ljmp
or
push
outsl
xor
jb
and
std
sub
sbb
nop
dec
fisubl
mov
je
and
addr16
lret
mov
aam
out
adcl
push
xchg
and
dec
cli
adc
sbb
sbb
jmp
xchg
rcrb
nop
mov
pop
lahf
cmp
addl
push
fwait
push
loop
sbb
pop
jge
imul
repz
fisubrs
cmpl
inc
mov
es
sbb
push
push
es
bound
in
icebp
jbe
fwait
xor
jg
mov
mov
mov
inc
cmp
lock
sbb
xchg
jp
pusha
in
mov
add
cmp
push
mov
mov
into
ret
das
mov
sahf
or
and
add
inc
in
mov
pop
out
sub
or
cli
cltd
in
lods
or
mov
jnp
jno
jns
push
push
inc
or
xchg
mov
lods
sahf
and
dec
dec
orl
and
int
inc
int
push
sub
mov
aas
xchg
adc
ja
mov
mov
add
lea
mov
stc
or
mov
and
iret
jns
dec
lods
adc
inc
pop
inc
push
out
les
ret
push
add
sub
stos
test
mov
mov
fisubrl
repnz
cmp
mov
pop
mov
adc
mov
adcb
inc
and
cmpsb
icebp
xchg
inc
pop
sbb
jle
cmp
push
mov
outsl
ret
hlt
call
insb
ret
test
loope
pop
adc
mov
hlt
add
lds
fxam
rorl
inc
adc
mov
sbb
xor
lea
push
mov
and
mov
mov
pop
adc
jmp
out
push
test
ret
inc
cmp
outsl
clc
xchg
sbb
aam
insl
xchg
xor
inc
stos
aam
xchg
lea
lods
push
sbb
push
xor
fsub
movsl
scas
or
pop
mov
dec
and
xorl
adc
cld
addr16
jns
lahf
enter
sbb
cmp
daa
ret
pop
inc
push
mov
mov
dec
rcr
ss
rcll
ljmp
aas
mov
cmpsb
rcrb
or
mov
and
mov
adcl
sub
or
jl
fistl
sub
pop
jne
pop
test
lock
loopne
xor
orl
mov
jne
arpl
cld
icebp
test
hlt
je
insl
mov
jl
push
in
sarl
stos
xchg
orb
mov
scas
daa
ret
cwtl
sarl
ljmp
std
lock
mov
sub
sbb
sarl
popf
xor
xchg
loop
or
jp
xlat
lods
inc
dec
pushf
or
cs
or
dec
cld
jnp
dec
scas
inc
rcrb
rorb
out
jle
xor
inc
sbb
popa
push
adc
incl
mov
inc
out
test
push
cmp
fldt
sub
pop
pop
adc
adc
cmc
or
outsb
sbb
scas
jg
add
ds
pusha
xchg
jbe
pop
adc
lcall
jb
push
mov
inc
in
dec
faddp
cmpsl
loop
test
jb
clc
ss
push
pop
repnz
imul
push
sti
mov
lea
icebp
jbe
push
mov
mov
and
andl
pop
cmp
insl
jmp
mov
leave
out
xchg
mov
xlat
jns
in
adc
adc
or
and
or
push
adc
mov
aad
jo
mov
stos
lods
fnstenv
mov
lcall
and
cmpsb
inc
xchg
les
ret
mov
mov
adc
das
popa
sub
cli
jle
int
or
shr
jb
pop
mov
adc
sub
xor
mov
dec
sbb
int3
mov
dec
inc
loopne
inc
arpl
aas
daa
sbb
inc
les
push
test
shl
int
das
mov
mov
pop
shrb
lds
inc
dec
je
imul
sub
sahf
mov
fsubs
jno
fisubl
cmp
jnp
out
xchg
shr
mov
jne
mov
pop
inc
ljmp
loop
adc
xchg
sub
push
pusha
inc
cwtl
into
mov
in
orl
loope
loopne
and
add
mov
aad
xchg
shlb
test
xchg
imul
xor
call
out
adc
jecxz
pop
mov
out
mov
or
lret
addr16
mov
test
pop
xchg
mov
repnz
out
lahf
lods
sbb
std
ds
sub
lock
fisttpl
stc
mov
sahf
push
mov
sbb
insb
jge
cli
not
add
leave
sub
add
jge
cmp
cwtl
mov
bound
jb
lds
scas
and
or
inc
arpl
lcall
jb
icebp
out
std
sub
das
xchg
mov
xchg
scas
scas
clc
int3
mov
cmp
mov
fldcw
test
cmp
push
outsb
stos
inc
mov
shlb
pop
or
iret
les
notb
in
or
add
sbbb
lret
jl
push
xchg
mov
push
movsl
popa
mov
jno
inc
xor
sbb
mov
mov
incl
or
fstpt
ja
inc
rorb
decl
pop
inc
rcll
sbb
cwtl
push
mov
scas
dec
xchg
cwtl
mov
add
arpl
add
scas
xlat
add
mov
sbb
in
pop
std
pavgw
cmp
mov
mov
and
dec
add
adc
cld
addb
pop
aad
mov
cli
xlat
fld
and
adc
push
lods
pop
testl
and
sub
in
sub
jmp
mov
nop
inc
adc
subl
loope
pop
mov
rorb
dec
test
lea
inc
add
jnp
inc
mov
out
mov
sub
pusha
mov
cmp
or
out
ds
xchg
cmp
outsb
mov
inc
cmpl
imul
mov
int3
sub
dec
add
xchg
or
mov
test
push
mov
xchg
jl
aam
adc
pop
dec
nop
jge
inc
push
enter
test
xchg
sarl
fcoml
cli
clc
sub
rcrl
pop
subl
or
jl
popf
or
out
lcall
cwtl
push
inc
fnsave
les
out
mov
sub
shrl
cs
into
sbb
dec
cmp
test
mov
fs
popf
popa
adc
push
push
pop
fwait
shrb
hlt
pop
adc
mov
mov
xorl
sti
addr16
jp
sbb
outsb
push
add
and
push
dec
cwtl
sbb
int3
call
dec
ds
sub
lcall
xchg
leave
lret
or
fwait
test
ret
push
xor
jge
or
pop
jecxz
lock
push
add
in
lds
cld
xlat
jno
cs
xchg
inc
xor
inc
iret
lcall
or
add
push
dec
pop
aam
lcall
bnd
or
adc
lea
xchg
scas
fadds
dec
mov
inc
add
out
inc
pop
in
xchg
les
sbb
cld
xchg
push
testb
fdivrs
sub
cmp
mov
ret
inc
pop
ja
fistl
jbe
pop
rcrb
loopne
cmp
dec
jg
enter
mov
scas
mov
lods
ja
xchg
subl
adc
cmpsb
xchg
push
ret
lret
fcom
mov
fnstcw
scas
cmp
call
lods
jbe
adc
mov
adcl
inc
ret
mov
sub
dec
call
jns
popf
or
jp
dec
and
inc
or
xchg
adc
jbe,pn
and
add
jb
mov
mov
or
sbb
pop
cmp
xor
push
mov
lcall
sub
sbb
and
mov
out
fisttpl
jae
cmpsb
out
and
leave
ret
jecxz
xor
daa
fldcw
xchg
jg
jle
out
jae
cmpsl
in
lods
push
inc
mov
inc
insb
pushf
lea
lahf
dec
popa
xchg
xchg
sub
mov
jmp
adc
pushf
xor
pop
or
pop
subb
and
int3
imul
push
jb
ss
lcall
data16
mov
enter
push
adc
inc
xor
pop
ljmp
aas
das
mov
in
lret
and
lock
mov
in
mov
mov
out
adc
and
add
ret
leave
cltd
les
cli
jg
push
fincstp
dec
sbb
mov
inc
clc
pop
mov
aam
push
notb
ss
sub
das
push
sub
or
insb
lret
jl
xor
outsl
stos
cli
cmp
dec
sahf
enter
pop
sahf
sbb
adc
mov
pop
push
mov
stos
adc
mov
imul
mov
cmp
dec
imul
push
xor
mov
fwait
addr16
fs
pop
and
adc
dec
pop
lds
and
jno
and
das
nop
clc
jno
cltd
rcll
push
dec
add
popa
and
push
rcll
aad
sbb
movsb
inc
in
pop
inc
lock
int
mov
rclb
sbb
lahf
or
xchg
adc
rclb
mov
and
data16
cld
mov
mov
mov
loope
push
adc
cmp
mov
mov
sub
jne
mov
sti
push
xor
dec
inc
popf
cmpsl
xor
outsl
mov
cmp
faddl
and
insl
jmp
dec
sbb
jno
ficoml
cmc
fisubrl
loopne
out
test
das
lea
jbe
pop
push
cwtl
hlt
mov
aad
cmp
xor
pop
add
dec
out
pop
outsl
xchg
mov
nop
jae
mov
mov
mov
push
ja
dec
addb
popf
ds
pop
push
mov
mov
pop
pop
jle
pop
out
insl
jns
call
insb
clc
pop
xchg
and
mov
or
cwtl
dec
push
out
mov
add
icebp
add
fsts
movsl
mull
inc
loopne
fs
js
movsb
scas
mov
repz
popf
adc
dec
mov
add
insb
lea
jno
clc
insb
les
addr16
shrl
push
or
cmpsl
out
test
cmp
mov
adcb
jae
and
cs
aam
movsb
push
jae
mull
mov
sub
or
mov
out
xchg
test
sbb
mov
rcl
xor
into
in
mov
nop
sbb
pop
mov
mov
daa
into
je
mov
jmp
ja
sub
and
and
sahf
shlb
cmp
pop
pop
push
scas
dec
addr16
sub
pushf
bound
pop
cmp
mov
push
testl
ret
lock
pusha
mov
dec
mov
bound
inc
push
inc
jg
xchg
movsl
jecxz
sbb
inc
icebp
mov
mov
cmc
popf
cmp
adc
and
sbb
notb
incl
add
loop
mov
add
into
mov
jg
mov
add
sbb
jns
leave
xchg
ret
nop
decl
in
aam
jecxz
add
adc
popf
pop
daa
or
xchg
cmp
mov
cmp
stos
test
iret
into
dec
add
jb
pop
je
pop
out
jge
into
test
lcall
ss
adc
lds
sbb
popf
test
jge
ljmp
cld
fidivrl
sbb
sub
sub
cmp
xchg
push
call
adc
mov
popf
pop
es
test
outsb
daa
ljmp
into
les
inc
dec
in
pop
in
leave
addr16
insb
dec
mov
shl
jecxz
inc
sub
push
xchg
repnz
repz
mov
inc
mov
lcall
xor
push
decl
cmp
cmp
sti
test
mov
mov
lahf
sbb
repnz
xor
inc
jmp
mov
stc
push
jbe
insb
or
or
pop
dec
leave
mov
and
jmp
inc
in
test
test
xchg
push
xor
sbb
ja
aad
test
mov
mov
pushf
bound
lock
roll
fwait
loope
push
xchg
jo
fwait
pop
aam
into
xor
mov
mov
jl
mov
pop
sbb
mov
insl
mov
mov
test
int3
mov
pop
mov
outsb
es
js
mov
cli
loope
push
lret
or
cmc
aaa
insl
popf
mov
scas
rcrl
pop
arpl
pop
addb
push
xlat
aas
loope
pushf
inc
ds
mov
cli
and
ljmp
push
rorb
pusha
xor
add
imul
sbb
je
lcall
jle
cmp
mov
and
scas
cmp
mov
cmpsb
mov
sub
add
addl
jmp
and
jno
pusha
pop
hlt
mov
int3
jg
mov
add
or
rclb
scas
int
imul
cmpsl
lds
lret
ss
xor
sbb
js
mov
push
xchg
clc
pop
push
imul
leave
shrl
addl
movsl
ret
stos
outsl
sbb
daa
jecxz
jge
dec
out
mov
leave
movsl
pop
mov
sbb
or
xor
adc
adc
jbe
ret
movl
subl
and
xor
sbb
or
and
dec
mov
mov
add
mov
add
gs
int3
ljmp
xchg
iret
inc
out
push
push
xchg
shrl
xor
xchg
mov
push
sbb
sub
xor
ja
cmpl
ss
pusha
cs
scas
push
imul
xchg
fstl
add
mov
out
mov
cltd
or
pop
sub
cmp
xlat
pusha
cmc
push
xchg
adc
rclb
xor
push
jne
mulb
mov
jo
sub
mov
daa
in
fdivrs
fstps
ss
popf
and
xlat
and
jnp
gs
adc
mov
inc
jbe
and
ds
dec
cmp
stos
push
scas
ss
or
stos
outsb
sub
jl
xchg
sbb
incb
shl
or
out
mov
sti
sahf
sti
adc
stc
outsb
test
push
sbb
sub
add
insb
pop
mov
jp
adc
pop
push
cwtl
mov
in
shrb
cmc
cwtl
addr16
fiadds
mov
xchg
je
adc
push
leave
movsb
shrb
lahf
mov
adc
and
cld
das
pusha
mov
cmc
insl
adc
mov
push
adc
xor
cmp
mov
rorb
pop
movsl
sbb
in
cmpl
in
add
jg
mov
stos
mov
push
cs
push
sub
xchg
mov
mov
or
fwait
push
das
addr16
pminsw
icebp
pop
lret
mov
aas
cmp
jmp
stos
xchg
int3
subl
dec
dec
and
push
jle
sbb
push
mov
cmp
jp
add
pop
leave
cmpsb
push
std
cmp
idivb
mov
jp
lahf
add
lds
dec
nop
pop
dec
cmp
xor
mov
jns
lods
ffree
fincstp
jne
shl
sbb
lret
clc
jns
les
dec
int3
cwtl
push
sbb
cmc
pop
mov
lret
mov
inc
xor
shll
lds
push
sbb
fwait
xchg
in
cmp
mov
mov
xor
jg
add
cld
cmpsl
push
cmpsl
push
lods
push
mov
jmp
add
sti
inc
stc
dec
sar
shrb
mov
add
cli
add
repnz
mov
outsl
inc
dec
cld
je
mov
adc
pop
mov
mov
dec
in
insl
sbb
mov
scas
aad
shlb
push
lea
aad
mov
lds
and
xchg
in
jmp
outsb
mov
jmp
ja
add
xor
dec
mul
adc
mov
idivl
mov
mov
iret
roll
ror
arpl
xchg
loope
popa
sub
xchg
cmp
dec
lods
inc
jns
out
pop
mov
and
push
fucomi
xchg
mov
mov
mov
sbb
mov
xchg
cmp
cmp
mov
pop
cwtl
add
idivl
pop
stc
std
fildl
inc
mov
push
mov
repnz
ljmp
aas
mov
sub
lods
cld
inc
fisttpl
dec
jnp,pt
mov
lcall
push
dec
enter
imul
adcb
sub
xchg
inc
into
bound
adc
sbb
movsl
pop
mov
xor
pop
jo
paddsb
and
shrb
out
repz
loope
popa
push
cmp
pop
sbb
push
and
push
jmp
rcr
sbb
rcll
add
fisubrs
imul
dec
xchg
fstps
arpl
enter
ficomps
sub
jns
enter
mov
xor
add
lahf
std
pmulhuw
xor
mov
cld
fistpll
pop
pop
bound
add
out
ds
cmp
arpl
push
push
cwtl
mov
push
dec
out
cli
sbb
jecxz
push
mov
and
mov
inc
inc
insb
lret
cmp
and
pusha
icebp
in
sbb
push
mov
cmp
jmp
shll
mov
lods
bound
scas
sbb
sub
aad
cmp
jp
rolb
loopne
fmuls
and
imul
scas
ja
push
dec
mov
dec
pop
leave
push
dec
outsb
gs
pushl
pop
dec
xchg
into
jne
mov
xlat
pop
xchg
pop
dec
xchg
dec
add
rorl
mov
arpl
add
pop
sbbb
dec
xchg
pop
cld
jecxz
mov
stos
pop
stos
popf
sub
icebp
sub
stos
pop
and
mov
jg
sub
stos
repz
fisttpl
sahf
xor
lahf
lock
sbb
popf
rcrb
nop
dec
mov
push
test
jle
xor
push
mov
stc
mov
jmp
hlt
xor
add
xchg
movsb
pop
inc
cli
inc
add
jae
jae
push
cli
fwait
and
frstor
call
mov
xchg
xor
push
popf
stc
xor
mov
pushf
gs
xor
bound
mov
jge
popf
scas
mov
cmc
fwait
in
push
mov
pop
std
sub
dec
inc
pop
xchg
mov
ljmp
mov
pusha
call
out
fcom
scas
aad
pop
loop
add
fnsave
inc
cmp
mov
ja
dec
les
mulb
inc
mov
iret
xchg
dec
and
inc
ret
jns
add
jno
fs
sbb
dec
jno
cmpl
test
scas
jo
mov
mov
jne
popf
sub
and
inc
pop
enter
fcomip
fadd
xor
jle
fcomp
jl
push
outsl
dec
mov
loopne
aaa
push
popf
inc
mov
mov
je
jb
icebp
aas
imul
leave
jne
push
lods
push
testl
xchg
push
and
mov
outsb
mov
dec
out
movsb
mov
popf
lret
jno
or
idivb
add
pop
sbb
push
hlt
add
fdivs
or
cmp
loopne
lret
loope
sub
xor
or
jb
pop
lock
mov
add
push
pushf
and
xor
dec
xor
js
push
mov
push
xor
test
in
mov
loop
mov
adc
inc
sti
mov
movsb
arpl
data16
test
addr16
xor
mov
call
aad
enter
cmp
jo
stc
xor
pop
xchg
leave
lret
icebp
fcoml
add
xlat
ret
test
scas
out
dec
js
push
adc
out
and
cli
outsl
and
mov
outsl
shlb
fmull
cmpsb
xchg
orb
push
clc
sti
adc
mov
aam
add
lret
xor
jle
shl
insb
inc
ds
stc
pop
mov
nop
out
popf
iret
sti
ds
sti
jbe
lods
inc
xor
adc
icebp
jns,pn
adc
jns
fidivl
or
pop
add
sti
fdivrs
into
mov
xchg
bound
fcomps
dec
js
les
shll
scas
cs
lahf
shll
jns
lret
mov
mov
dec
jbe
sbb
sbb
pop
cmc
pop
xor
xor
and
jecxz
int3
test
dec
xchg
aas
add
addr16
dec
outsb
out
sub
nop
lret
popf
test
cmp
or
icebp
enter
std
lds
icebp
add
push
fbstp
adc
testl
pop
pop
movsl
xchg
xchg
and
ss
fs
lahf
pushf
fidivrs
sahf
or
and
les
push
cmp
dec
aam
gs
fwait
repz
push
xor
jecxz
les
cmp
fs
pop
sbb
int3
xor
rcll
sbb
push
das
inc
mov
aas
fisubrl
mov
sub
add
dec
into
mov
cs
jecxz
xchg
sub
mov
aas
dec
mov
push
loopne
repnz
sahf
mov
clc
inc
and
shll
sbb
outsb
jo
xchg
out
jle
stos
ljmp
out
and
sub
xlat
aad
and
into
xor
xor
imul
inc
pop
push
sbb
inc
pop
sub
mov
mov
rclb
pop
or
popa
mov
les
cli
insb
lahf
jne
xor
adc
dec
stos
mov
fcmovnu
mov
mulb
mov
push
xor
jge
orl
dec
rcrl
cmp
sti
cmp
addr16
mov
and
fs
and
gs
sub
jno
cmp
mov
xor
mov
dec
or
inc
lret
pop
mov
inc
jp
dec
adc
xor
jae
sub
lret
scas
xchg
mov
pop
pusha
mov
icebp
xchg
into
jmp
movsb
insb
inc
add
out
lods
enter
sub
daa
adc
enter
fimull
cmp
sub
push
push
and
or
mov
jecxz
jns
add
push
cmp
adc
pop
or
sub
inc
dec
fwait
pop
mov
inc
daa
mov
sbb
inc
xchg
xchg
sbb
xor
cli
cmp
jne
xchg
jae
js
dec
test
scas
scas
aaa
push
sub
jge
out
xor
cld
push
cld
dec
out
sbb
fs
inc
and
gs
enter
daa
mov
cwtl
out
sub
shlb
mov
mov
test
add
mov
sti
push
loope
sarb
inc
xlat
sti
sbb
fnsave
in
call
lock
adc
or
mov
xchg
lret
jno
push
into
and
xchg
xchg
bound
andl
subl
or
aaa
push
sbbl
jne
scas
cmp
jae
popf
bound
movsb
stc
mov
lds
mov
push
addr16
sub
or
jnp
jne
sub
aas
and
imul
mov
dec
std
xor
gs
stc
imul
xlat
inc
into
push
pop
ss
mov
sbb
fsubrl
xchg
mov
push
xor
fstl
xor
xor
aad
cs
aad
cwtl
loopne
push
or
rcl
push
or
mov
mov
or
or
push
push
lock
pop
test
or
ds
int3
data16
lret
pusha
jo
inc
call
dec
leave
jbe
push
xchg
push
fdivrs
push
add
push
xor
je
xchg
int
shrb
fidivrs
fiadds
pop
and
idiv
repz
jp
stos
sub
shrl
sbb
insl
jne
add
sub
scas
gs
sub
fisubl
adc
andb
imul
pop
xor
insl
ds
add
xchg
pop
xor
es
fdivr
js
loop
lds
stos
inc
call
mov
pop
in
jbe
inc
pop
sahf
scas
xchg
sub
gs
jne
or
xchg
rol
roll
lcall
inc
iret
addr16
xchg
js
xchg
cwtl
mov
mov
lods
xor
stos
gs
mov
divb
sub
sti
mov
jmp
sbb
inc
lods
inc
sub
in
divb
add
pushf
call
inc
mov
pop
cwtl
inc
push
hlt
add
pushf
out
sahf
fs
ret
push
dec
adc
and
xchg
cs
test
leave
lcall
movsl
lds
pushf
sarl
lea
add
adc
into
inc
mov
rclb
inc
inc
sti
xchg
adc
in
sbb
shl
out
mov
dec
xor
lods
mov
ret
jmp
jns
push
jge
mov
inc
mov
sbb
add
push
sti
fwait
enter
xor
loopne
inc
xchg
pop
sbb
shll
lcall
lret
xor
add
dec
sti
dec
mov
mov
cmp
scas
lods
inc
or
dec
ljmp
roll
dec
or
addr16
cmp
or
mov
mov
out
push
cs
loopne
rorb
inc
stc
jle
mov
pop
fldcw
imul
pop
jl
movsl
outsl
pop
les
inc
inc
nop
int3
inc
and
into
jmp
xorl
add
push
dec
aam
mov
js
sub
lret
sti
pop
dec
bound
pop
and
inc
inc
xlat
outsw
xchg
call
xchg
adc
jnp
mov
icebp
movsl
push
lret
cmp
outsb
sbb
adc
sbb
cmpsb
sub
loope
jg
xor
cmp
cli
jno
sub
test
test
shll
xlat
loop
cld
in
loope
cmc
push
daa
or
dec
aad
jne
stos
daa
or
in
cmp
mov
dec
ja
pop
jmp
cltd
push
or
nop
jle
mov
xor
or
mov
sub
xchg
mov
jle
notb
pop
imul
mov
jmp
outsb
fimuls
jmp
rcl
xor
jo
in
ret
or
or
int3
scas
popa
loope
xchg
and
das
loope
out
xlat
cmc
mov
pop
xlat
or
mov
subb
jno
fistl
pop
inc
ja
pushf
ret
push
sahf
mov
sub
mov
movsl
sub
das
pop
iret
cmpsl
cli
clc
mov
push
daa
aas
out
mov
lcall
out
push
sbb
push
es
std
pop
mov
mov
iret
mov
cmc
dec
sbbl
jl
adc
repz
mov
inc
push
mov
lcall
daa
xchg
pop
mov
pushf
jbe
dec
hlt
push
fstpl
inc
ss
mov
fmuls
iret
js
adc
int3
mov
shrb
xor
mov
popf
xchg
xchg
adc
sti
jnp
lea
scas
xor
pop
movsl
pushl
push
inc
insb
mov
leave
ljmp
pop
push
bound
cs
jnp
mov
mov
cli
mov
iret
and
push
iret
jmp
dec
aas
dec
or
cs
dec
mov
fmull
mov
jecxz
jg
orl
adc
in
cmp
sbb
xchg
mov
cmp
cmp
fs
mov
fwait
push
and
out
pop
and
andl
xchg
jle
notl
testb
inc
cmp
mov
sbb
push
in
inc
pop
pop
call
inc
jb
xchg
xor
mov
int
pop
adc
loop
dec
insl
push
je
rorb
inc
sbb
inc
and
xchg
std
fwait
call
popa
sti
add
test
dec
pop
stos
mov
lsl
mov
mov
fcoml
sbb
into
xchg
cmp
cltd
mov
inc
mov
testb
cmp
mov
pop
and
repz
add
adc
aas
sub
in
movsb
sbb
dec
adc
xchg
mov
in
or
mov
mov
jnp
and
icebp
adc
aaa
int3
test
ret
jg
pop
int3
jns
xor
sub
jmp
jns
jne
sbb
mov
ss
cmp
aas
sub
lods
jl
adc
mov
pop
shrb
aad
inc
in
sbb
daa
bound
aaa
std
push
pop
fstpt
cmpsb
sbb
jle
incb
or
jne
movsl
es
fs
lret
jle
xlat
repnz
je
cmpsl
mov
sub
jle
inc
aam
cmc
pop
inc
int
push
pop
sub
addr16
scas
mov
sub
test
sub
cld
jae
push
repz
test
jne
mov
inc
pop
decb
movsb
clc
jne
cli
sbb
out
inc
ds
push
in
imul
daa
sub
in
push
mov
xlat
loopne
pop
jbe
into
sahf
int3
inc
or
and
imul
aam
mov
cmp
loope
stos
stc
loopne
divb
aaa
and
add
sti
mov
sbb
and
jnp
dec
popa
xor
jae
pop
or
nop
cwtl
pop
int
xor
push
inc
outsb
ficompl
xchg
je
jl
xchg
mov
ds
xor
lock
pop
dec
mov
in
pop
push
mov
xlat
or
jge
xchg
test
dec
popf
enter
jae
xor
inc
outsl
lcall
enter
das
xor
ret
pop
sbb
push
fsubrs
cmpsl
xchg
es
notl
lret
clc
lahf
xor
lea
push
xchg
cmp
jns
mov
jge
lcall
xchg
gs
sub
ljmp
sub
jo
ret
or
sarb
popf
loopne
stos
fcmovnu
sbb
dec
pop
fsubl
add
pusha
fistl
inc
mov
popa
cmp
xchg
push
js
push
mov
int
mov
in
adc
aaa
push
mov
push
ja
push
and
aam
add
aad
xchg
mov
shll
sub
adc
adc
cli
dec
xchg
lods
mov
or
outsb
fwait
cld
jb
mov
sti
cmp
lock
pusha
jno
std
mov
cwtl
push
push
call
rcll
sahf
arpl
dec
adc
xorb
enter
les
cmpsb
and
imul
xchg
mov
bound
xor
mov
bound
fwait
add
les
ljmp
pop
cmpl
xchg
testl
cwtl
int
addr16
aaa
insb
ret
mov
cltd
je
aaa
dec
lcall
push
aam
sub
ret
testb
jns
and
jns
clc
lret
and
sbb
pop
xor
pusha
adc
adc
pusha
xor
iret
daa
cltd
fnstenv
inc
add
std
lret
je
jmp
pop
cmp
mov
mov
sub
jbe
lods
mov
mov
xchg
cwtl
outsb
aad
mov
adc
adc
call
stc
sub
imul
jecxz
in
xchg
in
int3
xchg
popf
pop
stos
inc
pushf
mov
mov
cmp
lods
dec
push
mov
sub
addl
icebp
cmp
lcall
inc
push
out
aas
ret
and
xorl
xchg
dec
jge
aas
adc
pop
jne
push
cmpb
aad
mov
jae
inc
in
cmp
mov
sbbb
insb
push
mov
movsb
loope
data16
outsl
idiv
aad
arpl
push
fcmove
pop
pop
sbb
sbb
jmp
js
out
cmp
jmp
adc
cmp
setg
iret
sub
mov
cmp
imul
or
outsb
pop
push
pop
insl
out
ds
ret
out
adc
lret
sbb
push
adcl
ljmp
cmp
mov
and
lcall
jmp
adc
mov
xchg
sarb
mov
cwtl
mov
sbb
test
mov
xchg
out
jle
xor
push
pusha
insl
mov
mov
in
xchg
fdivrl
mov
and
or
push
add
xchg
push
sbb
pushf
cmp
or
out
pop
icebp
mov
cmp
lcall
push
add
cmp
out
inc
pop
add
xchg
insb
stc
mov
adc
subl
mov
mov
pop
or
bts
faddl
pop
cmpsl
lahf
mov
in
and
xchg
sbb
aam
xlat
movsb
sbb
xor
adc
xchg
dec
ficoml
out
testl
or
mov
push
and
sub
repz
icebp
popa
dec
mov
repnz
mov
aam
mov
cs
in
dec
mov
dec
lea
nop
jge
jb
cmpsb
enter
xchg
add
xchg
jo
scas
es
xlat
in
pushf
or
jns
jae
outsb
hlt
dec
iret
mov
pop
gs
cmpsb
inc
jecxz
push
push
adcb
mov
mov
push
jp
jae
mov
pop
xchg
inc
add
clc
pop
xor
or
inc
mov
inc
jbe
mov
enter
in
nop
inc
pop
cmpsl
sub
jecxz
test
push
or
push
mov
mov
push
xorl
mov
cmpsb
and
std
mov
mov
sub
mov
pop
repz
and
xchg
jnp
je
mov
xchg
xchg
adc
popa
in
into
gs
xor
push
jl
pop
adcl
enter
xor
mov
inc
fimull
push
sub
addr16
aas
xchg
imul
mov
sti
subl
push
dec
inc
mov
testl
rcr
pop
fwait
cmp
dec
push
out
cmp
push
sbb
subb
repz
dec
pop
pop
mov
push
sbb
or
cmp
mov
out
push
cmp
ficomps
adc
sub
and
jmp
push
mov
sahf
inc
push
adc
xchg
into
aaa
insb
fs
sbb
addr16
sbb
inc
rorb
xor
push
ficoml
push
dec
cmp
jns
jmp
mov
lods
jo
mov
jae
pop
push
pop
js
push
outsb
jl
ret
rorl
xchg
lahf
sbb
mov
ljmp
ret
bound
into
xor
xor
mov
loopne
clc
imul
mov
sbb
xchg
fisttpll
xchg
and
add
pop
movsl
mov
sub
and
and
or
adc
lcall
sub
daa
pop
adc
adc
cmp
fadd
cwtl
aaa
cmp
clc
movsl
sbb
sbb
nop
mov
xor
cli
imul
mov
jmp
sub
add
and
pop
sbb
ja
shrb
jp
push
mov
daa
ret
cli
xchg
pop
cltd
rcrl
popf
scas
dec
adc
cmpsl
js
aad
sub
adc
pusha
movsl
add
xchg
cmp
rcr
pop
xor
mov
ss
scas
xchg
ja
lahf
pop
ss
loope
add
ds
inc
jecxz
nop
mov
clc
addl
cmp
iret
dec
loopne
sbb
inc
jae
xchg
daa
jmp
in
xor
jbe
shr
mov
lods
iret
fildll
loopne
mov
call
pop
stc
faddl
mov
mov
icebp
faddl
push
xor
popl
dec
sbb
sbb
adc
pop
popf
dec
pop
mov
xor
xchg
sahf
outsb
sub
mov
or
divps
cwtl
xor
and
jnp
mov
lret
es
push
pop
fisubrl
ror
addr16
or
addr16
pop
add
adc
xchg
adc
pop
in
shrl
test
or
adc
mov
scas
add
stc
into
cmp
dec
mov
jne
hlt
aad
jo
and
xor
fptan
mov
fstpl
xor
mov
cmp
or
leave
je
into
cmc
jns
mov
inc
repnz
lahf
das
add
mov
xor
jne
push
pop
xor
outsb
popf
sbb
or
push
xchg
test
outsb
mull
push
mov
fwait
sub
scas
push
xor
ljmp
call
loope
cmpb
jl
arpl
lret
mov
lds
out
xor
ds
dec
loopne
jl
mov
sbb
mov
loopne,pn
jge
adc
mov
push
shl
dec
sbb
js
or
push
aas
in
imul
in
sti
sub
fdivrp
jge
inc
pop
cmc
mov
clc
add
jp
push
adc
mov
or
cwtl
pop
fld
adc
scas
test
in
mov
jmp
call
mov
adc
push
les
push
sti
push
adc
jb
adc
out
push
add
loop
dec
out
xor
push
sub
in
ja
imul
mov
push
sub
xor
popa
dec
xor
cmp
ret
daa
mov
out
xor
loope
call
mov
dec
pop
inc
mov
push
std
into
cmp
adc
in
jbe,pn
and
lods
out
insb
dec
insb
pop
jle,pt
mov
fldl
leave
cmpsb
mov
xor
aad
mov
xchg
lahf
jg
xchg
add
cmpsb
mov
lret
mov
into
pop
iret
insl
nop
fnsave
std
inc
xor
clc
insb
pop
jbe
dec
loope
call
push
in
shll
popa
orl
xor
add
pop
pushf
out
mov
scas
cld
mov
fmull
jmp
pop
jmp
fsubrs
xchg
pop
js
sbb
sub
pop
inc
lcall
gs
pop
xlat
mov
and
add
xchg
sahf
sbb
inc
jp
mov
jmp
scas
and
adc
jb
mov
push
jb
cs
jecxz
adc
mov
hlt
sarl
test
and
cltd
icebp
adc
and
enter
lods
pop
ljmp
dec
xlat
clc
data16
mov
jnp
adc
call
add
inc
jp
sbb
loope
scas
jns
lret
jmp
int3
pop
clc
push
mov
mull
mov
fidivl
xchg
in
jecxz
xor
stc
adc
sahf
xchg
adc
mov
fcmovnu
sahf
push
xchg
sub
or
in
mov
fs
out
mov
addr16
notl
lds
xchg
push
aad
ss
cmpsl
cld
mov
cmp
pop
or
ret
jg
in
mov
jo
leave
jmp
cwtl
or
mov
jne
rcll
dec
push
inc
cwtl
mov
leave
sub
clc
jno
loopne
jge
xchg
ret
je
mov
dec
push
dec
mov
mov
adc
int
ret
lods
sbb
sbbl
lods
mov
test
ljmp
add
or
fldcw
in
pushf
push
rcrl
aad
mov
mov
dec
je
insb
push
nop
inc
or
sbb
push
cmpsb
mov
mov
in
out
jge
jo
and
xor
xlat
dec
or
fldenv
mov
dec
mov
xor
xchg
mov
push
xchg
sub
xchg
xchg
popa
lds
dec
mov
push
mov
add
or
sbb
xchg
int
push
into
test
mov
push
sbb
xchg
popa
pusha
clc
and
aaa
push
adc
inc
loope
je,pn
jg
in
int3
pop
xor
testl
and
add
inc
push
jb
insb
pop
ljmp
push
stos
out
movb
gs
ret
cmpsb
mov
jnp
lea
ljmp
test
negb
xor
cli
addl
movsb
in
jl
iret
sub
push
pop
jp
std
xor
mov
stos
xchg
sbb
outsb
gs
iret
and
mov
jo
cmp
xchg
cmpsb
fwait
inc
adc
add
push
lcall
cltd
inc
lea
jb
push
jb
cmp
jg
sub
add
dec
push
xor
mov
adc
int
repz
sti
cltd
jge
xor
adc
cmp
aaa
cld
rorb
nop
mov
cmc
mov
mov
cwtl
popa
or
push
dec
dec
push
ret
xchg
int
lret
mov
mov
push
imull
adc
fildl
add
sbb
xor
sbb
cmp
mov
out
push
or
adc
test
inc
cmp
divb
jb
mov
inc
aam
test
in
bound
pusha
xchg
daa
adc
fcom
in
fidivl
xor
mov
mov
fnsave
stos
scas
xchg
xor
adc
mov
and
jp
test
insl
and
cs
setl
mov
lock
dec
jmp
xor
jae
xchg
xorl
test
mov
fs
imul
imul
aad
pop
or
cmp
fidivrs
cmpsl
add
mov
cmp
jno
cmp
sbb
roll
mov
jl
fimull
mov
stos
repnz
dec
xchg
push
push
push
ds
ret
imul
test
aas
les
ja
popa
rcll
mov
imul
leave
push
lahf
jp
fstpt
xor
cmpsb
sbb
adc
xchg
inc
aam
mov
inc
mov
add
inc
lret
push
add
sub
mov
lret
ljmp
or
xchg
cmc
xchg
xchg
mov
and
mov
fldcw
hlt
std
xor
aam
mov
repz
inc
lahf
loop
inc
mov
data16
push
repz
mov
mov
mov
mov
out
loop
pop
inc
xorb
lret
and
and
mov
jbe
dec
rolb
and
lret
xchg
movsl
cmp
imul
pop
into
cmpsb
in
cld
icebp
loop
arpl
movsb
cmp
jno
or
shrb
inc
jp
mov
inc
jl
imul
push
dec
mov
sahf
or
inc
rolb
cmp
fnsave
and
sub
push
add
dec
lcall
sbb
inc
and
push
sub
jbe
in
fldl2t
cmp
loope
xor
iret
addr16
dec
adc
sub
fcmovne
lods
push
sub
nop
pop
sbb
aad
in
arpl
pop
aas
jae
ja
mov
dec
aaa
inc
fidivrl
jl
ss
pusha
mov
dec
inc
popl
lahf
popa
test
xchg
lcall
lea
sahf
cmp
xor
lret
jle
outsb
jae
dec
cltd
lods
or
and
aam
sub
subb
dec
jl
sahf
xor
out
and
or
enter
mov
gs
movsb
inc
and
clc
cs
fcomp
int
in
mov
popa
stos
inc
xchg
outsb
push
leave
insb
sub
fmuls
ror
add
insl
inc
mov
push
mov
push
hlt
dec
push
call
test
mov
adc
cmc
push
and
loop
and
je
push
add
push
das
mov
stos
ss
aaa
loope
in
mov
scas
add
cmpsl
movsb
aaa
insl
rorb
adc
mov
inc
adc
dec
shll
out
cmp
cltd
pop
mov
jg
repz
and
pop
ljmp
lea
mov
movsb
paddb
xchg
xlat
lahf
sub
mov
in
sbb
inc
insb
inc
sub
mul
out
out
jne
add
loopne
inc
outsb
lods
sbb
and
iret
pop
scas
push
add
jge
aas
mov
cmp
and
frstor
enter
cmp
inc
sub
test
mov
jmp
push
aam
push
pop
or
mov
int3
sbb
cmp
or
mov
adc
in
ss
jnp
mov
ss
out
sbb
add
pop
push
enter
push
mov
jbe
xchg
cmpsb
pop
divb
stos
test
adc
mov
inc
loope
ja
sbb
add
cmp
cmp
arpl
imul
notl
mov
pop
out
mov
or
dec
ret
jnp
inc
imul
loopne
xor
or
inc
inc
mov
cli
xor
pop
sbb
xchg
sbb
jnp
mov
jecxz
sbb
bnd
loope
addr16
cmc
mov
imul
mov
sbb
xor
aam
xchg
les
imul
iret
int
aad
push
jl
dec
fcoml
mov
jecxz
adc
jne
xchg
gs
rcrl
hlt
inc
cmp
xchg
xor
adc
lods
xor
mov
lcall
in
mov
ds
inc
es
inc
ss
pop
dec
or
enter
push
ss
out
sbb
mov
xlat
lret
inc
cld
xor
xor
cltd
rcrb
fldl
cs
xor
scas
js
gs
lods
int3
pop
xchg
dec
or
mov
test
pop
push
mov
push
sub
mov
ror
push
xchg
les
add
xchg
mov
push
jge
sbbb
cli
fstp
xchg
les
loope
cmp
adc
or
jmp
sub
test
lock
insl
inc
jbe
mov
mov
rcll
cmp
in
jae
movsb
int
ficompl
movsl
xchg
ret
sub
dec
lahf
cwtl
adc
lds
inc
sahf
dec
out
in
cmp
push
jge
inc
sbb
mov
xchg
lahf
call
push
popa
enter
xor
clc
xor
loope
inc
mov
mov
addr16
testb
jle
pusha
add
mov
mov
push
adc
outsb
loope
stos
fcmovbe
scas
mov
scas
or
into
andl
jbe
or
add
fnstsw
ret
pop
pop
pmulhuw
daa
mov
sbb
bound
pusha
dec
stc
das
cmp
jp
in
pop
mov
sbbl
xor
setne
add
push
loopne
ffreep
or
cld
adc
push
inc
mov
mov
sub
aas
add
sub
daa
rcrl
out
inc
xchg
mov
xchg
xchg
test
xor
js
lret
dec
add
aad
jns
loop
mov
sti
daa
lods
mov
xor
mov
dec
mov
mov
iret
mov
in
xorl
leave
xchg
mov
gs
leave
orl
call
sar
cld
xchg
mov
lcall
xlat
jmp
jge
ficoms
nop
push
or
dec
jnp
adc
xchg
xchg
mov
insl
mov
mov
fcoms
icebp
mov
or
mov
jmp
je
mov
mov
add
cmc
mov
incl
sub
sahf
in
inc
mov
adc
sub
imul
jno
xchg
mov
mov
jg
or
and
push
sarl
or
inc
nop
shlb
xchg
sbb
cmp
lcall
frstor
cmpsb
enter
jns
xchg
or
push
je
xchg
or
cmp
leave
frstor
mov
cmp
mov
mov
sub
jno
xchg
movsl
xor
sub
pop
sub
icebp
lods
add
dec
cmpl
dec
arpl
popa
mulps
and
ret
cmp
adc
repz
notl
jne
jne
ja
leavew
in
xor
das
add
lods
jns
test
add
sahf
sbb
mov
cmp
in
mov
jns
inc
jge
cmp
mov
sbb
pop
clc
add
lret
inc
inc
push
decb
mov
or
les
aaa
cmp
jmp
inc
cmp
inc
xchg
sbb
and
mov
dec
cmp
lret
std
lods
cmpl
jns
pop
hlt
leave
aam
dec
in
push
cmp
jmp
add
jl
lahf
leave
xor
xor
mov
mov
mov
or
adc
mul
xor
lcall
jge
inc
push
push
cwtl
outsl
or
cs
jle
push
int
in
xchg
push
mov
inc
cmp
sbb
rclb
add
and
sub
jnp
daa
negb
test
mov
mov
jnp
xor
mov
jecxz
out
jnp
cmp
jecxz
dec
adcl
mov
pushf
hlt
jno
orl
mov
stc
sbb
mov
mov
scas
aaa
sub
test
aam
cmpsl
loope
sbb
lods
aam
aaa
cmpsl
cmpl
push
mov
sbb
daa
xlat
std
cmp
sub
xor
lahf
iret
cmp
add
out
inc
jnp
outsb
inc
loop
fwait
mull
xor
sahf
xchg
rcrb
adc
cmp
lock
bound
mov
add
pusha
mov
mov
mov
or
push
push
scas
imul
xlat
fcmovnbe
adc
inc
or
cli
jae
mov
mov
mov
dec
sbb
mov
imul
sub
mov
xor
das
hlt
mov
stos
mov
insb
repnz
and
es
and
sahf
xchg
rorl
sub
pusha
mov
movsl
push
out
outsb
mov
or
cmp
cmpsl
pop
add
mov
test
xchg
mov
sub
pop
mov
inc
lods
xchg
jmp
jp
sbb
je
mov
or
ss
add
inc
frstor
jae
hlt
out
out
or
push
sbb
and
sbb
outsl
pop
fwait
repnz
and
lock
insb
mov
xchg
fwait
mov
add
sub
push
mov
mov
sbb
cmp
lret
or
into
outsb
xchg
negl
imul
mov
mov
xor
sarl
ja
imul
stos
cmp
add
stc
add
fisubrl
jp
mov
jnp
shlb
jecxz
jecxz
in
rcll
jmp
mov
and
ficompl
mov
mov
sub
pop
inc
xchg
mov
addr16
pusha
add
cmpsb
cwtl
out
ret
repnz
dec
push
lock
cmpsb
out
mov
inc
in
fs
imul
push
sbb
aam
popf
adc
xor
iret
out
mov
push
cmp
sbb
mov
repz
or
mov
mov
sbb
cs
xor
cmc
hlt
add
mov
ss
and
adc
and
mov
mov
fs
fisubrs
cmp
pop
push
mov
jg
test
sub
push
repz
bound
icebp
aad
or
and
ret
lods
aam
das
ljmp
out
pop
out
loopne
mov
adc
repnz
push
movsb
clc
enter
mov
sbb
push
loope
sahf
pop
test
stos
sbb
xchg
mov
jnp
fcompl
xchg
les
roll
push
mov
cli
ss
cmp
cmp
add
clc
cwtl
sbb
out
repz
scas
test
inc
inc
frstor
cwtl
jg
push
and
leave
mov
mov
cmpsl
sahf
xchg
pop
clc
pop
aas
in
xor
jne
rep
scas
imul
subb
mov
gs
out
push
push
jg
incb
sarb
lret
inc
mov
and
mov
push
jns,pn
scas
cli
out
mov
aas
jp
jl
mov
sbb
dec
xchg
daa
and
daa
in
aas
xor
stos
arpl
jbe
xor
fbld
lods
fidivrs
cvtdq2ps
enter
push
popf
mov
cmpsl
testb
jbe
ret
lret
mov
sbb
push
push
int3
ficoms
iret
sub
mov
sub
sub
fisttps
sub
outsl
push
mov
sahf
xchg
inc
pop
ja
sub
jns
popf
and
icebp
ret
ret
mov
cwtl
rcll
std
loopne
flds
jnp
in
jmp
test
aas
adc
mov
xchg
adc
daa
ds
lret
jecxz
dec
ljmp
loope
bound
mov
stc
out
in
insl
fwait
lds
jno
jecxz
lea
xchg
out
mov
into
das
xor
decl
pop
mov
xchg
pusha
out
adc
cmp
xor
mov
pop
pop
or
and
add
mov
sahf
sbbb
cmp
sahf
test
jne
lods
inc
inc
int
mov
mov
in
imul
pop
std
stos
xor
popf
fcoml
inc
outsb
je
ret
dec
inc
add
int3
mov
push
sub
mov
cs
push
sub
mov
insl
es
sub
popa
and
adc
aam
xchg
mov
add
lcall
fs
rdmsr
insl
stc
lret
cltd
mov
pop
mov
into
out
push
jecxz
sub
or
pop
rorl
jp
mov
add
dec
outsl
leave
shll
jnp
pop
push
into
xchg
addr16
dec
in
xchg
and
lods
hlt
pusha
icebp
loope
jle
push
aas
aad
dec
lcall
xor
aas
dec
idivl
or
in
aad
cs
pop
sub
jecxz
jl
or
idivl
cmpsl
pop
add
pushf
enter
cmp
aas
pop
lret
outsb
pop
sub
es
cwtl
mov
les
pop
imul
sub
test
inc
scas
sub
into
pushf
test
add
hlt
scas
popf
scas
lret
lods
xor
lret
push
loope
mov
or
cmp
push
adc
jge
mov
icebp
push
and
notl
test
and
in
arpl
enter
fists
movsl
pop
fdiv
cmpsb
dec
out
add
icebp
dec
mov
jns
mov
add
mov
push
cmp
pop
cmpsb
xor
das
sbb
in
push
sbb
cmpsl
adc
inc
leave
into
shll
lahf
push
ss
in
loope
lahf
cmp
sbb
out
cltd
movsb
jbe
scas
lea
call
loope
and
inc
dec
jge
push
mov
or
mov
mov
mov
xor
mov
push
enter
shlb
adc
outsl
pop
jbe
push
daa
inc
roll
push
cltd
jae
call
jne
xchg
fs
lea
cld
jbe
imul
jmp
movsb
mov
xlat
cvtpi2ps
dec
inc
imul
add
mov
jo
inc
mov
addr16
popa
std
push
add
mov
cmp
or
call
cs
sbb
out
sub
sub
insb
xchg
lahf
adcb
sbbb
call
push
push
sbb
mov
shll
sub
xlat
ja
push
repnz
inc
push
ljmp
adc
idivb
nop
or
and
aad
and
enter
lret
push
push
adc
dec
clc
pusha
dec
dec
repnz
rolb
pop
and
push
push
mov
xchg
dec
orl
cmpsb
jb
mov
or
cwtl
adc
sahf
mov
pop
pop
or
push
sbb
sbb
push
hlt
mov
xchg
xor
enter
call
orb
lds
cld
ss
fidivs
adc
sub
dec
xchg
add
mov
cli
jnp
dec
push
add
push
xor
mov
pop
xlat
rol
xchg
test
call
sbb
xchg
jl
sbb
ljmp
and
aad
xchg
std
pop
and
arpl
push
add
cwtl
xor
push
negl
aaa
fstl
cli
mov
dec
call
push
mov
orl
sbb
push
fwait
mov
fiaddl
scas
add
loope
jb
mov
jp
mov
inc
pop
adc
dec
sarb
push
mov
sar
enter
ror
jo
decl
loope
and
mov
mov
xchg
mov
dec
xchg
jecxz
or
lret
pop
adc
loopne
imul
es
inc
cmp
cmpsl
outsb
pop
jle
push
rolb
orb
lea
lea
ljmp
outsl
fwait
sub
sub
ss
cmp
ds
fcomip
or
scas
mov
adc
sub
ds
adc
lods
iret
mov
in
hlt
ds
xorl
or
stos
dec
mov
jecxz
ds
mov
add
inc
mov
inc
push
pop
mov
imul
jle
jae
test
sub
loope
adc
mov
fisubrs
inc
sub
es
jbe
and
sarb
mov
jb
xchg
jge
roll
rcr
adc
nop
jmp
mov
lods
cmc
lods
insb
sbb
aas
xor
sub
cmc
push
stc
bound
in
test
subb
insl
lret
and
repnz
adc
les
sbb
jns
enter
imul
shr
dec
inc
adc
clc
push
mov
into
cmc
pop
outsb
mov
mov
mov
pop
push
lahf
pop
imul
and
popa
and
repz
jge
push
ja
dec
gs
dec
inc
mov
sub
push
lea
addb
inc
inc
mov
imul
repz
mov
xchg
mov
pop
adc
pushf
popf
testl
ficoms
cmp
push
cmp
sbb
push
cmp
aad
or
jecxz
lret
cmp
into
and
cmpsl
xchg
outsb
aad
pusha
lcall
lea
add
sbb
popa
push
xchg
mov
rcrl
pop
jno
ja
push
inc
xchg
mov
push
xchg
or
ja
nop
cmp
andl
ljmp
xor
in
dec
je
or
xor
adc
push
repz
adc
ja
push
dec
lock
inc
out
dec
mov
jg
pop
pusha
mov
ja
xor
sbb
inc
cmp
mov
fstpt
mov
cmpsb
jle
sub
pop
mov
int
xchg
xchg
jge
xor
xor
fimull
dec
and
sbb
shll
jbe
ficoml
nop
and
out
aas
loop
jnp
rcl
xchg
or
pop
orb
cs
roll
xor
pop
mov
xchg
push
imul
jbe
mov
cld
test
cmp
push
out
and
xchg
sbb
icebp
push
fwait
ja
jle
xor
pusha
dec
loope
jae
shlb
loop
mov
jl
flds
cld
ret
inc
push
mov
stc
mov
pop
sbb
mov
adc
jnp
lds
incl
or
bound
fs
push
dec
bound
add
icebp
loop
cmp
inc
dec
pop
cld
and
cmp
mul
jns
std
mov
jmp
jno
inc
or
sub
int3
sbb
in
mov
cli
or
push
sbb
sub
mov
in
or
adc
push
fwait
or
aad
cmpsl
insl
fs
inc
ja
nop
data16
fstpl
out
sub
pusha
dec
or
mov
lcall
add
lds
lret
loopne
inc
ret
ja
pop
mov
mov
popf
pop
movsl
mov
jmp
and
in
xchg
fdivr
loop
mov
es
ret
cmc
inc
and
jge
pop
test
push
and
adc
add
lret
jo
pop
add
fisubl
mov
mov
pusha
iret
andb
enter
repz
push
push
pop
inc
jns
into
add
shlb
dec
insl
decb
lea
inc
push
mov
arpl
shlb
insb
or
mov
or
in
inc
fwait
cwtl
in
scas
arpl
jno
cwtl
out
push
int3
imulb
or
push
rcrb
decl
xor
das
out
jbe
xor
mov
fscale
shlb
clc
sahf
cmp
fldt
push
add
push
pop
shufps
addr16
mov
lcall
ror
mov
test
jg
inc
inc
xlat
xor
push
inc
cmp
add
jg,pt
movsb
shll
pop
mov
and
mov
xor
fidivl
push
push
xor
sub
ret
mov
jp
cmp
jne
jae
inc
into
in
pop
add
les
mov
cmp
add
xchg
hlt
adc
sub
lret
mov
rcrl
inc
pop
mov
inc
mov
jg
in
adc
test
mov
jb
and
and
in
or
sub
fs
add
push
push
pop
fcoms
and
dec
popf
dec
movsb
push
xor
imul
mov
sbbb
inc
cwtl
pusha
inc
mov
or
mov
push
inc
pop
inc
xchg
daa
cmpsl
fstpt
jae
lods
push
jmp
cmp
dec
dec
iret
jecxz
cmp
jo
mov
iret
mov
insl
jge
into
clc
add
shlb
clc
sahf
push
inc
or
add
cmpsl
lret
inc
jbe
jl
pushl
out
xchg
shlb
push
ss
mov
lock
or
sub
mov
xchg
repnz
fdivl
pushf
notl
xacquire
in
jmp
outsl
int
xchg
cltd
mov
pop
push
pop
pop
fwait
inc
and
insl
bound
ror
mov
sub
cmp
dec
scas
cmp
inc
sub
insb
loope
pop
clc
js
mov
addl
cld
mov
adc
sub
sub
aaa
sub
xor
push
lock
adc
testb
pop
mov
lds
sub
push
icebp
jb
cs
out
and
jo
sub
xchg
insb
out
cltd
or
bound
jo
outsb
xchg
cld
js,pt
add
insb
fmul
lcall
out
verr
sbb
cld
fidivs
dec
xchg
push
mulb
cmp
mov
xor
jp
fdivl
daa
or
test
shlb
mov
js
mov
fs
mov
mov
jb
jae
gs
sarb
popf
movsl
and
dec
sbb
cli
enter
gs
pop
lcall
xor
imul
dec
dec
dec
es
cltd
test
mov
xchg
bound
push
sahf
jne
add
repz
pop
pop
fwait
push
or
test
xchg
mov
pop
mov
lds
mov
lds
jae
clc
mov
aad
popa
sub
fistpl
push
push
add
loopne
sbb
add
adc
jle
mov
dec
lods
imul
sti
cmp
push
add
and
stc
add
adcl
lds
daa
cmpsb
sahf
sarb
mov
shll
lock
ljmp
lods
sarl
or
and
dec
movl
mov
xor
daa
mov
jns
imul
xlat
inc
jge
and
and
or
xor
add
add
mov
aam
inc
push
and
xchg
xlat
or
ja
aas
jg
ljmp
lret
push
ss
scas
fcoml
into
cld
int
lock
dec
dec
cld
cmp
dec
jge
jb
sub
out
fdivl
jp
or
fmull
fadds
inc
mov
orb
and
aad
repnz
repnz
out
icebp
and
popa
rolb
cmp
dec
rol
clc
mov
xchg
or
insl
or
cmpl
adc
sahf
pop
jno
movsl
or
push
cltd
arpl
movsb
push
pop
sbb
sub
sbb
xlat
mov
adc
mov
mov
xchg
mov
and
jp,pt
loope
shl
cmc
dec
mov
cltd
mov
popa
shlb
pusha
inc
ds
mov
sarl
cmp
add
fimuls
dec
inc
xor
jmp
jbe
adc
pop
and
pop
sbb
lods
data16
push
ret
imul
xor
in
sbb
mov
cmp
pop
in
jno
cmp
cmp
mov
pusha
mov
and
push
cmpb
xchg
push
aad
imul
sarb
rcrb
cwtl
repz
cmp
sbb
adc
jmp
sarb
jg
cmpsb
cmp
pushf
pusha
jecxz
push
mov
out
in
not
ds
jmp
xchg
mov
push
jnp
iret
or
add
rolb
cmp
cld
outsb
xor
push
test
mov
hlt
cmp
inc
in
jp
cltd
inc
pushl
je
call
push
push
aaa
jae
out
or
nop
mov
xor
dec
mov
push
sbb
sbb
cld
stos
cmp
nop
popa
and
cmpl
xor
imul
and
jno
repnz
mov
out
add
ss
subb
mov
xchg
adc
lret
fdivrl
andl
jecxz
xor
outsb
mov
add
mov
leave
fmull
addr16
ret
stos
fidivs
sub
jbe
inc
xor
sbb
adc
outsl
lea
popf
fildll
call
stos
test
lea
lret
cmp
inc
mov
shrb
pop
dec
xchg
shlb
mov
dec
daa
insb
into
shrb
mov
out
cld
add
mov
or
test
stos
and
or
rcrl
clc
push
testl
mov
mov
popf
mov
sub
jo
cmp
mov
xchg
nop
pop
sub
jp
clc
pop
fwait
push
imul
or
cltd
test
adc
insb
out
faddl
das
jge
sub
or
mov
fnsave
jp
sub
inc
mov
sbb
jno
dec
outsb
into
mov
lea
push
mov
jmp
push
imul
insb
xor
enter
xchg
xchg
les
xchg
dec
pop
ss
fdivrl
enter
sti
popf
addr16
mov
mov
cmpsb
adcb
sub
push
dec
adc
xchg
loope
mov
repnz
mov
lods
pop
dec
lock
out
mov
inc
mov
call
loope
cmp
jecxz
roll
sub
sbb
and
push
dec
jno
add
adc
jle
jns
scas
ja
sbb
jp
shll
or
in
mov
add
gs
clc
jns
add
mov
pop
xor
xor
nop
xor
ljmp
adcb
fisubs
pushf
fs
ret
cmp
jns
test
dec
pop
loopne
jg
cmp
or
cmpb
mov
jecxz
leave
jl
out
std
or
int
mov
push
jmp
or
fcompl
test
repz
mov
adc
rorb
and
xor
and
add
jno
iret
xor
jmp
ljmp
sub
push
mov
test
fwait
sarb
es
pushf
lret
inc
dec
sahf
pusha
xchg
popa
cs
les
sub
cli
push
iret
xchg
insl
and
push
cli
cmpsb
leave
loopne
dec
int
sub
pop
or
push
movsb
pop
xchg
test
mov
mov
nop
cmp
cmp
push
jmp
xchg
sahf
int
ficoml
lret
xor
pop
push
mov
jbe
jp
test
test
rol
rcll
adc
dec
repnz
pop
inc
pushf
sbb
sbb
cmpsb
mulb
std
mov
icebp
popa
push
dec
ret
data16
jo
inc
insl
or
xchg
dec
clc
mov
dec
adcl
inc
jmp
lretw
push
push
lret
mov
mull
in
xchg
pop
enter
and
mov
xchg
sbb
movsl
bound
lods
mov
fdivs
xchg
cmc
add
jmp
jl
loopne
inc
jne
or
cmp
insl
divl
repz
incb
std
lea
fadds
lea
popl
in
rcrl
mov
mov
daa
mov
push
cli
enter
scas
and
inc
insb
push
dec
ja
jno
sbb
movsb
adc
pusha
sbb
fstps
adc
pop
in
or
jns
leave
lock
add
jae
xlat
and
test
cmp
lock
add
and
sbb
cli
decb
or
stos
addr16
mov
sarb
or
daa
push
or
push
adc
dec
icebp
sbb
stos
lcall
mov
xchg
sbb
mov
stc
sti
push
or
add
imul
insl
jae
aad
pop
cltd
cmc
adc
fs
je
sub
jo
in
das
mov
jg
lds
orb
in
stos
mov
lods
dec
jno
xor
sub
pop
push
repz
adcb
adc
push
mov
dec
or
fstps
cmp
xchg
inc
imul
pop
out
xor
inc
mov
adc
in
or
and
jmp
dec
popf
inc
and
xchg
fisubrl
aaa
dec
rolb
mov
xchg
jnp
dec
mov
mov
fsubs
sub
cmpsb
push
mov
shrl
mov
lock
and
or
cld
mull
ja
stos
jge
xchg
add
xor
std
or
mov
ja
nop
xchg
lods
das
xor
fnstenv
jo
test
ljmp
jmp
fcoml
mov
jns
lock
and
cld
pop
ret
mov
int
in
movsb
hlt
call
adc
adc
sbb
push
rorl
ret
lahf
pop
jecxz
mov
js
inc
fbld
aas
sbb
out
add
pop
pop
sti
icebp
cmp
or
sbb
loope
push
mov
sub
outsb
incb
and
outsb
xchg
mov
fadds
inc
add
cmp
lods
fsub
xchg
and
data16
int3
data16
stos
imul
dec
sbb
jae
mov
jge
mov
mov
cld
mov
push
push
fsubrl
jle
insb
xchg
dec
add
fcomi
pop
roll
mov
out
dec
add
sbb
push
inc
xchg
add
movb
fists
cmp
out
in
lods
mov
add
notb
iret
mov
sarl
and
shrl
in
cmp
jo
clc
pop
repz
hlt
mov
cmp
daa
mov
addr16
imul
mov
mov
test
int
mov
rolb
cmp
arpl
enter
xchg
push
setne
push
jno
cmp
fsubrl
sbb
mov
cs
adc
test
mov
adc
jg
or
jge
mov
and
jge
pop
adc
jl
xlat
in
push
push
ljmp
fidivs
jb
fistpl
lret
jno
sub
mov
bound
cld
mov
fwait
les
sbb
jno
mov
les
xor
dec
xor
orb
and
clc
ljmp
cwtl
lods
ds
bound
scas
insb
subb
mov
aas
xchg
push
jns
ds
push
pop
sub
sbb
les
add
movsl
add
sbb
add
cli
cmp
xchg
fnstenv
dec
cltd
paddsw
lea
dec
outsl
inc
scas
jg
sbb
shll
sbb
dec
sarb
mov
or
fs
pop
or
cmpsb
push
push
cmpsb
pop
cwtl
mov
mov
mov
push
cmp
push
cmp
sub
sbb
cltd
mov
in
imul
cmp
in
rcrl
rcrl
sbb
jno
ja
mov
adc
mov
adcb
nop
mov
insl
aam
or
mov
inc
mov
pop
dec
lret
add
push
xor
pop
ja
repz
shlb
lods
jb
in
fcoml
pop
jp
pop
pop
mov
testb
xor
pop
add
cmp
mov
lods
outsl
mov
sub
dec
pushf
fwait
mov
fistpl
xchg
lds
push
imul
arpl
push
stos
or
and
pop
xchg
mov
push
pushf
call
mov
mov
cmp
les
jo
gs
jae
test
das
fs
popa
push
mov
jmp
mov
call
into
jbe
sbb
sbb
adc
mov
inc
popa
push
mov
push
and
in
pusha
loope
insl
and
pushf
mov
and
leave
jno
inc
dec
sarb
je
mov
arpl
jecxz
in
xor
test
decl
xor
cmp
push
sub
jne
add
sub
add
je
in
sbb
mov
or
jecxz
cltd
push
sbb
dec
xchg
sub
mov
loope
cmpb
sub
jnp
lock
bound
cli
and
cli
sbb
nop
fidivrl
push
xchg
add
sub
inc
push
ficoml
dec
mov
cmp
cmc
in
xchg
fwait
push
mov
cld
in
outsb
stos
pop
sbb
push
cmp
mov
hlt
pop
fldt
xchg
outsl
mull
push
jmp
popf
sbb
shlb
pop
jg
icebp
fstps
popf
fiaddl
orb
insl
xchg
insb
push
aaa
push
dec
adc
fcoml
pop
add
mov
jmp
mov
jne
sub
call
repz
inc
mov
int3
into
jg
add
sub
outsl
imul
sub
lret
pop
fcoms
inc
push
sti
int3
jmp
mov
jge
addr16
push
jmp
aaa
fwait
push
push
jle
pusha
pushf
push
sub
jmp
cmpsb
dec
insb
adc
fmull
adc
pop
mov
in
inc
or
loop
addr16
push
sub
std
cmpsl
shr
mov
lds
movsl
sbb
ja
lcall
sti
icebp
mov
cmp
push
xchg
pushf
cmc
fs
data16
jg
imul
lahf
inc
jl
sub
out
dec
cltd
aam
add
shl
jnp
mov
sub
ficompl
std
xchg
sbb
jbe
lret
sar
push
mov
pop
and
ret
ret
add
int
into
scas
mov
cld
pop
outsl
rcll
icebp
test
xor
shrb
aas
sti
push
movsb
xchg
imul
scas
sub
mov
or
jg
adc
daa
sub
daa
or
dec
mov
mov
push
mov
adcb
in
mov
add
movsl
jbe
pushf
pop
pop
lret
ljmp
or
inc
mov
jno
scas
jb
sbb
repz
pop
repnz
clc
push
lds
xor
mov
add
xchg
psrlw
shlb
outsb
and
into
daa
adc
jmp
ljmp
enter
shrb
sahf
nop
popf
mov
mov
push
pop
push
sbb
dec
mov
inc
mov
lods
dec
cld
clc
push
ja
insl
jne
mov
cli
shl
in
add
mov
xchg
test
or
shrl
adc
aam
insb
xor
sub
and
sub
mov
add
testl
js
shrb
cmp
pop
xor
add
lcall
mov
lds
push
inc
add
and
in
inc
push
or
adc
aaa
inc
add
push
sti
inc
sbb
ffreep
shr
mov
mov
xor
inc
movsl
xor
or
mov
sbb
arpl
lods
jl
fmuls
iret
mov
push
add
aad
imul
mov
push
cmp
xchg
and
pop
or
push
int
cwtl
pop
outsl
push
sqrtps
bound
das
lds
xor
xor
stos
gs
mulb
outsl
cmp
xor
test
jns
shl
push
add
cmpsb
push
ds
or
add
enter
pop
xchg
in
cli
fistl
xchg
mov
jge
mov
sarl
dec
fiaddl
inc
mov
out
jmp
jne
out
bound
shll
imul
int3
insb
hlt
fistpl
jmp
adc
nop
imul
mov
and
int
mov
lahf
out
iret
mov
sbb
call
in
jnp
int3
fs
cltd
loopne
ja
neg
fstpt
xchg
or
in
les
mov
in
loopne
jbe
mov
jno
mov
cwtl
jmp
push
loope
cltd
jae
imul
test
lcall
dec
ss
push
cli
out
pusha
sub
aaa
adc
sub
mov
push
int
inc
adc
jmp
sbb
in
pop
mov
mov
xchg
loope
inc
pushf
and
in
test
and
int3
mov
sbb
inc
fdivp
inc
outsb
inc
arpl
int3
xchg
lret
pop
pushf
scas
mov
decb
inc
ss
xor
in
hlt
mov
stos
add
push
movsb
mov
into
es
aaa
sub
sub
ja
adc
pushf
pop
push
cs
out
push
mov
pop
cmc
mov
inc
je
fisttps
sti
pop
test
icebp
mov
and
popa
icebp
repnz
cmp
movsb
mov
dec
outsl
sbb
in
inc
xchg
ja
add
frstor
scas
roll
std
rorb
idivl
ret
dec
sbb
or
aaa
pusha
dec
cmp
xchg
loopne
je
xchg
inc
adc
fistps
daa
inc
sbb
and
xchg
sbb
push
mov
repz
repnz
stc
sub
xchg
stos
in
mov
inc
sub
jno
cmpsb
int
dec
pop
cmp
push
out
push
dec
test
jecxz
mov
loope
inc
sahf
pop
jp
mov
sub
out
repz
mov
in
sbb
inc
jo
stos
mov
ss
push
jg
sub
sub
mov
fimuls
and
adc
pop
push
cltd
cmp
rorb
dec
or
in
fisttpl
scas
inc
inc
dec
pusha
shrl
icebp
add
lret
mov
iret
nop
das
fisttpl
push
adc
mov
pop
dec
imull
popl
fadd
sub
xor
adc
add
call
sub
aad
cmpb
fnstsw
aas
out
or
cltd
dec
jg
inc
jae
or
pop
fwait
add
loop
das
aad
inc
mov
pusha
je
dec
cld
xchg
adc
jb
lahf
mov
inc
ds
jmp
push
je
cwtl
add
fiaddl
repz
mov
sti
dec
pop
fs
loopne
push
mov
mov
call
imul
idiv
jbe
mov
mov
loopne
xor
test
sub
jbe
das
fldt
and
push
iret
jnp
pop
rcrl
lahf
push
cmpsl
out
out
jb
sahf
sbb
sub
mov
mov
adc
cmp
test
push
arpl
xchg
cmpsl
dec
popa
orl
cmpsb
add
xchg
addl
fimull
dec
fcom
sub
jne
jnp
mov
test
mov
dec
jecxz
mov
mov
xor
push
and
stos
cmp
enter
mov
test
xchg
cmp
fsubs
out
xchg
clc
mov
out
cmp
outsb
sarb
push
add
rolb
jp
jns
or
sbb
hlt
les
sub
imul
adc
inc
in
jle
cmpsl
loopne
lds
ret
pop
fistpl
mov
dec
add
insb
jge
cmp
rcl
mov
push
fstps
sbbl
push
dec
rorl
fimull
push
repnz
cmp
outsb
out
ja
mov
mov
ret
insb
push
pop
das
and
push
lods
popa
cwtl
push
mov
scas
xlat
sti
mov
pusha
sbb
mov
pop
adc
loope
fildll
inc
scas
mov
jo
mov
sbb
jno
ljmp
out
bound
mov
sub
sbb
mov
fisubs
push
push
inc
in
cmpsb
stos
rcll
push
xchg
dec
jge,pt
mov
pop
push
mov
les
sbb
orb
shll
loop
loope
mov
or
out
sbb
in
scas
pop
pop
push
add
jmp
or
or
call
arpl
push
leave
cld
xor
cmp
ja
xor
in
push
bound
push
les
scas
adc
sbb
sbb
iretw
mov
stos
icebp
jge
movsl
push
jmp
roll
shll
adc
gs
adc
test
adc
ja
test
in
add
sbb
jo
lahf
sbb
mov
pop
movsl
xor
ja
invd
imul
mov
jmp
jnp
fidivl
xchg
lock
clc
fbstp
pop
push
xor
fwait
fwait
lods
ss
adc
stos
mov
popa
jecxz
mov
lea
jae
sti
in
xchg
cmp
jp
je
pop
or
sub
test
imul
test
add
es
sti
movsl
cmp
sbb
and
pusha
scas
imull
inc
adc
sbb
sub
xchg
xlat
jns
dec
dec
sbb
fmul
dec
mov
dec
cmp
inc
and
push
roll
mov
sarb
sbb
repnz
push
aas
pop
ror
jp
aas
mov
cli
pop
jg
movsl
popf
push
loopne
inc
stos
mov
cmp
lock
xcrypt-cfb
cmpsl
out
jmp
xor
inc
mov
cmc
lods
or
in
addr16
popf
cmp
pop
loope
jae
andl
mov
or
cs
out
pusha
mov
data16
jecxz
dec
popf
pusha
cmp
fwait
sbb
mov
jmp
cmp
test
fs
pop
adc
stc
pop
fwait
inc
cs
lods
push
jne
popa
dec
sbb
fsub
lret
xorb
cmp
push
fmull
ficoms
scas
jns
mov
rclb
fistpl
cmp
popf
dec
adc
std
mov
sti
pop
inc
movsl
or
cmpb
lcall
mov
outsb
fldenv
xchg
jecxz
mov
lods
pop
xchg
ss
aas
into
out
and
test
sti
loope
jecxz
jge
out
testl
test
push
jmp
repz
inc
pop
sub
out
in
and
out
rcl
push
popa
inc
clc
add
mov
lock
hlt
mov
mov
imul
lret
adc
hlt
fdivl
cs
add
test
iret
scas
sbbl
lds
icebp
std
pop
dec
scas
ret
cs
out
inc
int3
jmp
imul
fdivl
pusha
std
pop
xor
sbb
xchg
imul
inc
cmpsb
jno
out
adc
nop
or
imul
cmp
dec
add
jns
test
test
sbb
or
xchg
pop
push
shrl
mov
andl
pushf
inc
call
xchg
iret
jnp
mov
int3
xchg
imul
adc
pop
outsl
jecxz
dec
leave
into
or
and
inc
inc
jae
mov
push
push
pop
inc
push
cltd
xchg
mov
lcall
or
lods
sub
hlt
push
in
push
jl
pop
cmpsl
sub
stc
mov
out
adc
pop
sahf
cmc
cmp
xchg
add
sub
out
or
xor
cmp
sbb
shr
sub
and
jl
aam
add
xchg
adc
mov
adc
dec
scas
pop
adc
mov
xchg
stos
das
ljmp
out
pop
arpl
lret
mov
sub
sbb
loop
xor
mov
and
dec
mov
pop
jnp
in
sbb
push
and
shll
push
cmp
hlt
cltd
adc
daa
pushf
inc
pushf
dec
push
cbtw
sbb
fcomps
lock
and
jo
or
in
mov
aam
push
jo
inc
test
adc
xor
jb
insl
xchg
jg
xor
ja
adc
dec
gs
out
inc
and
imul
stc
ficoml
bound
mov
inc
push
push
adc
aad
dec
pop
loopne
xor
in
inc
jmp
clc
mov
adc
push
iret
pop
or
ds
pop
loopne
mov
cmp
shld
hlt
divb
inc
jle
and
push
pusha
mov
adcb
cmp
in
lods
xor
push
dec
insl
int3
jmp
les
fdivr
and
repz
xor
sub
cltd
test
mov
rsm
sub
and
aad
ss
pop
repnz
lahf
adc
pop
fnstsw
es
xchg
add
sbb
or
xchg
adcl
stc
xor
jae
sbb
ja
aam
inc
adc
jmp
jle
loop
push
and
rorb
lods
xchg
arpl
push
call
es
cld
lods
pop
and
shll
mov
shrl
testl
add
sahf
cmpsb
insb
jns
xchg
lahf
lret
dec
cmp
dec
imul
add
ljmp
xorb
add
je
inc
imul
mov
or
mov
daa
lods
and
lret
sub
cmp
aaa
mov
mov
or
test
aad
push
xchg
mov
sbb
imul
jl
loopne
cltd
mov
enter
push
pushf
fisttps
xchg
stos
test
sbb
rorb
loopne
push
sub
add
je
sbb
outsl
xor
rol
add
cli
popf
inc
mov
push
mov
xor
lcall
mov
leave
cs
out
adc
inc
xchg
aam
movsb
scas
sbb
arpl
cltd
cmc
ja
out
aas
adc
gs
jmp
mov
adc
sub
adc
sbb
add
dec
addb
sarl
mov
ljmp
push
mov
stos
cmp
cmp
push
scas
test
leave
push
mov
pop
inc
js
call
dec
xchg
mov
dec
insb
lea
fmul
in
cmpsl
sbb
xor
jo
out
cmc
mov
dec
jmp
nop
insb
mov
or
cld
mov
cs
mov
mov
cmc
inc
jmp
pop
fdivrl
adc
mov
mov
and
lahf
mov
nop
jp
ret
cmpsl
xor
addr16
stos
xchg
aaa
adc
cmp
xchg
into
lret
xchg
outsl
cs
les
aad
pop
fcompl
jge
sti
out
pop
in
dec
into
add
pop
cmpsl
add
mov
mov
add
cmpsb
fimuls
scas
rcr
outsb
imul
push
inc
lods
fildll
mov
lret
push
ret
fs
rcrb
jno
add
std
test
rclb
jg
cli
les
cmpsb
xor
pop
sbb
add
dec
push
jecxz
mov
inc
mov
sbb
stc
xchg
out
mov
in
xor
cmp
sub
dec
cmp
test
mulb
loopne
xor
jmp
jmp
cmp
stc
add
insl
or
xchg
in
andb
mov
bound
mov
into
cli
adc
xchg
mov
jmp
sub
push
sbbb
sarb
cmpsb
lret
jno
jne
mov
test
push
arpl
sti
push
lret
fsubs
popa
sarb
mov
jl
es
addr16
hlt
test
out
cmpsl
enter
dec
dec
pop
outsb
ja
mov
insl
pop
rcll
orb
iret
and
jp
jnp
mov
add
fldcw
jmp
lock
ljmp
mov
in
sti
mov
jp
stc
cmp
in
add
jo
cmpsl
and
das
push
jp
shlb
jno
pop
mov
shrl
push
inc
lret
cmova
and
mov
dec
addr16
mov
not
xchg
xchg
dec
cmp
je
repnz
out
movsl
sahf
test
rcrb
xor
or
pop
testb
movsl
mov
xor
data16
shl
dec
cs
lcall
fnstenv
jl
icebp
subl
fwait
jo
jne
mov
and
lahf
jg
das
sub
lea
repz
fwait
movsb
jns
repz
jno
loop
loopne
adc
scas
sub
xchg
sti
cwtl
movsl
stc
cli
or
pop
gs
fldt
into
dec
icebp
mov
dec
mov
clc
aas
je
out
lahf
daa
popf
test
out
mov
push
gs
add
push
or
jp
adc
mov
jb
test
push
cld
shll
fstl
insl
pop
xor
fdivl
mov
lret
lahf
imul
mov
jae
mov
insl
leave
push
mull
mov
push
mov
jo
sti
cmpb
and
xor
negb
jg
add
in
div
sarb
js
jmp
js
mov
sahf
adc
push
lods
sub
aas
lds
cli
shll
inc
lds
xchg
mov
je
rorb
xor
cmp
adc
mov
mov
divb
cmp
cmc
push
imul
sbb
pop
scas
daa
dec
push
lds
mov
lock
dec
enter
adc
adc
movsl
das
jp
jo
mov
xorb
adc
stos
xor
add
xor
inc
data16
jns
mov
xor
jo
push
add
inc
mov
xchg
sbb
or
dec
je
xchg
repz
sub
push
test
pusha
pop
jp
fs
jae
jle
jae
mov
push
mov
std
xchg
xchg
or
rorb
les
in
jmp
popf
adc
notl
mov
adc
pop
xchg
imul
inc
daa
add
bsr
call
sub
jb
pop
mov
jge
jp
or
into
sub
or
movsl
dec
loope
sub
popa
in
js
fisttps
jmp
out
add
xor
xor
test
mov
cwtl
mov
bound
add
test
call
cli
out
cmp
inc
aam
imul
jbe
push
push
or
aad
mov
movsl
fimull
enter
add
lea
inc
adc
dec
adc
sbb
ja
int
pop
and
pmulhuw
xor
mov
lahf
mov
testl
push
gs
xor
in
push
jb
in
clc
imul
or
mov
add
adc
loopne
inc
inc
test
cmc
sbb
or
add
cwtl
jmp
xchg
imul
push
sahf
push
sbb
push
mov
fs
test
leave
int3
inc
xor
call
jb
hlt
pop
add
sahf
cmc
in
or
pop
stc
es
pusha
aad
mov
enter
fdivl
lret
pop
pop
mov
or
inc
xchg
xorl
adc
adc
push
stc
fs
xor
jb
icebp
jb
xor
out
mov
hlt
jb
or
dec
ljmp
ss
loopne
adc
xchg
adc
mov
pop
add
loop
sti
stc
xor
mov
fwait
mov
repz
ret
lahf
mov
notl
loopne
sbb
push
mov
lcall
xor
dec
cmpsl
add
or
imul
mov
cmc
mov
sti
loop
stos
pop
push
adc
sarl
push
adc
pushf
rclb
cmpsl
scas
repz
jge
push
mov
mov
fildll
xor
push
fbstp
mov
test
mov
gs
and
movsl
or
out
jns
pop
cs
sub
ret
pop
arpl
push
push
pop
insb
sub
mov
movsl
outsb
or
dec
push
ja
jg
and
cmp
mov
lds
and
adc
scas
ret
daa
data16
adc
xchg
stos
je
js
or
test
mov
xchg
loopne
push
adc
xor
cmp
fwait
xor
idiv
das
fcmovne
pop
bound
icebp
and
xor
cmp
push
xor
popa
test
movsl
or
sub
int
cmp
out
fcmove
test
xchg
push
std
lods
cmp
mov
pop
jb
adc
test
mov
roll
or
push
add
or
fisttpll
mov
sub
xor
or
mov
sbb
fsubrs
js
add
push
pop
xor
das
ss
xor
xor
or
loopne
out
xor
xor
mov
xchg
pusha
xchg
mov
bound
lahf
movsl
lahf
lods
xchg
cmp
adc
xor
imul
decb
and
jns
stc
xchg
add
ja
dec
jb
rclb
in
push
dec
dec
dec
inc
cli
dec
fs
push
stos
ret
shlb
nop
cmp
das
psraw
jmp
out
dec
dec
pop
cmpsl
in
jbe
mov
pushf
inc
mov
aaa
inc
pop
in
inc
push
xchg
mov
push
cltd
mov
imul
sbb
scas
andb
mov
out
mov
cld
adc
jle
and
xor
xor
data16
lret
fildll
lock
xor
xor
shr
fldenv
jecxz
shrb
xor
sahf
mov
lcall
clc
jae
xchg
aam
xor
popf
jne
in
out
jo
fildl
repz
or
outsl
inc
int
mov
xchg
push
add
dec
mov
mov
add
adc
in
jmp
stos
inc
mov
dec
cmp
test
push
popa
add
ljmp
mov
mov
adc
xor
fucomip
je
mov
scas
inc
aaa
aad
pop
aad
gs
loope
pop
push
ret
call
out
outsb
ret
movsl
es
push
cmpsl
leave
jmp
or
fidivs
in
popa
mov
lret
jecxz
fisttpl
mov
aad
dec
jl
std
inc
nop
jb
repnz
xchg
push
lahf
test
sahf
clc
rol
test
out
sub
pusha
insl
hlt
or
inc
aam
cld
aad
xchg
mov
in
call
push
movsb
ret
mov
lahf
inc
mov
les
sbb
imul
fwait
sbb
out
gs
mov
or
mov
into
in
mov
jo
add
pop
bound
ficoml
or
cmp
call
fwait
orl
je
inc
or
inc
mov
mov
xchg
inc
push
aam
mov
fbstp
inc
dec
es
push
xor
jmp
sub
xchg
xchg
push
jno
jmp
fsubl
clc
and
les
dec
hlt
movsl
pause
jo
push
pusha
push
repz
stc
sti
adcb
jb
sbb
enter
dec
loopne
adc
adc
lahf
and
add
stc
addb
inc
std
inc
jbe
iret
mov
dec
sbb
clc
dec
push
sbb
dec
cmp
mov
xchg
popf
daa
sbb
movsl
pop
cmp
xchg
ret
or
loopne
inc
daa
stos
fs
out
mov
test
test
xchg
push
jbe
add
aam
imul
or
dec
dec
jb
rorl
hlt
sub
mov
in
ja
ljmp
ljmp
mov
sbb
jae
ja
pop
shll
loope
dec
xchg
fbld
aas
mov
mov
jl
xchg
dec
cmp
popf
pop
jnp
jb
lcall
clc
popl
jl
lods
pusha
adcb
sbb
fistpl
je
push
in
push
incl
mov
movsb
adc
test
pop
xor
andl
les
dec
sub
fimull
add
push
movsb
movsb
addr16
mov
jle
mov
and
and
pop
fldenv
sbb
out
lret
ds
inc
mov
ret
shll
inc
ja
icebp
xchg
inc
loopne
jge
xchg
in
shl
fldt
sbb
shl
aaa
sarl
movsl
test
lret
xor
pop
in
ficompl
add
xchg
pop
and
cmp
xor
adc
add
jg
int3
or
mov
push
push
mov
inc
xchg
rcrl
test
and
cmpsl
cmc
aad
mov
xlat
jg
cmp
insb
ljmp
dec
jns
or
imul
push
sbbl
mov
scas
mov
dec
stos
test
mov
mov
pop
xchg
test
imul
in
jns
mov
int3
push
lea
jbe
cld
stos
xchg
sbb
hlt
test
push
push
adcl
ljmp
lahf
cmp
loop
dec
data16
roll
gs
lods
mov
mov
xchg
push
dec
inc
or
out
in
mov
test
lods
sub
cli
das
adc
out
jmp
add
add
jnp
mov
jecxz
pop
inc
out
xchg
mov
cmp
ljmp
sub
jg
mov
and
adcl
aam
lret
icebp
std
mov
fidivs
pop
push
inc
mov
outsl
shr
test
test
pushf
xchg
cmpb
mov
cltd
inc
bound
and
inc
popa
popa
stos
pop
mov
mov
push
pop
mov
std
or
pop
mov
pushf
test
in
mov
movsl
dec
outsl
orl
mov
std
push
xchg
mov
mov
mov
and
aas
mov
push
int
or
lret
int3
adc
pop
lret
sti
ret
push
mov
scas
inc
test
cmp
xchg
test
add
jnp
push
jg
mov
jno
push
shr
xlat
xchg
xchg
out
push
pop
mov
es
pop
lret
jg
sti
mov
push
in
mov
ja
lret
in
sub
mov
xor
hlt
repz
lds
push
out
jnp
xchg
sahf
push
and
test
shll
add
sbb
imul
pop
imul
inc
aad
imulb
ja
jmp
cs
lods
fstp
dec
cmp
pusha
bound
cmp
pop
inc
jmp
sub
cmpsb
push
adc
push
ret
jle
sti
xor
out
andb
jp
out
inc
mov
add
stos
jmp
sti
add
lds
pop
adcb
cmovo
pop
jo
mov
adc
fs
ror
arpl
mov
loopne
insl
cs
jb
adc
jl
and
out
and
xor
sbb
sti
or
or
and
jne
mov
sub
cltd
gs
shll
cmpl
test
xchg
mov
xchg
ficoms
push
xchg
fucomp
arpl
lods
adc
sarb
popf
add
mov
test
in
test
fstpl
mov
adc
sbb
mov
inc
cmp
xchg
fnsave
pushf
mov
lds
jb
inc
sbb
inc
leave
repz
lods
mov
jmp
dec
push
or
out
sub
xchg
insb
lds
fucom
xor
mov
xchg
sbb
int
mov
mov
lods
mov
xor
or
fldl
xor
lods
loop
out
shlb
ret
jns
dec
inc
leave
add
push
and
int
sbb
inc
ljmp
push
pop
dec
int
loop
jge
pop
dec
push
sub
cmp
insb
out
in
lcall
int
push
jne
xchg
sbb
push
xor
adc
roll
or
mov
xchg
jb
hlt
jae
jmp
sbb
cmpl
aas
fsubl
sahf
pop
test
subl
in
ss
sub
sti
stos
jmp
xchg
int
enter
cmc
sarb
or
push
test
aaa
or
add
cmp
sti
dec
fadds
aas
or
in
cld
xchg
inc
and
je
sub
dec
jb
lahf
xchg
sbb
mov
mov
adc
sbb
sub
pop
lds
jg
pop
cmp
and
out
jno
div
in
sub
xorb
pop
leave
testb
push
add
stos
cmp
out
sbb
inc
sub
rorl
dec
test
inc
xor
dec
fdivl
mov
arpl
push
int3
out
fwait
or
je
cmp
ret
dec
loop
test
xor
pop
fcomi
stc
lret
aas
cli
pop
test
cmp
mov
mov
cmc
xor
lock
outsb
xchg
test
je
xor
xor
mov
sub
sub
andl
push
jge
push
xchg
prefetchwt1
or
jmp
xchg
xchg
and
js
and
dec
sti
xor
test
jmp
fmul
push
inc
push
decb
je
stc
clc
push
mov
je
ret
add
and
bound
push
jb
xchg
lret
mov
inc
mov
mov
sbb
pop
cmc
not
push
xchg
inc
xor
mov
cmp
push
hlt
pushf
jb
add
enter
pop
xchg
and
in
imul
shll
int
mov
pop
or
dec
ja
mov
mov
orb
enter
lahf
fmul
int
shll
add
jg
push
nop
adc
sub
fstpt
push
lea
in
or
pop
aad
cmp
in
pop
cld
test
push
jge
and
int
gs
cltd
or
fstpt
or
push
in
in
mov
out
leave
adcb
pop
pop
cmp
jbe
arpl
pop
mov
mov
out
lds
xor
cmpsb
icebp
or
addr16
test
adc
xchg
lock
mov
xchg
mov
addb
add
push
add
filds
repnz
mov
leave
add
mov
dec
sbb
dec
pop
ret
jne
cs
dec
inc
cmp
mov
xchg
hlt
sub
dec
stos
xlat
mov
gs
lahf
in
js
adc
test
pop
lds
roll
sub
or
stos
outsb
lock
mov
sub
mov
sysret
dec
inc
push
orb
movsl
mov
pop
adc
mov
enter
mov
adc
or
jo
lods
scas
into
imul
jbe
arpl
ficoms
daa
rcll
push
jmp
xor
sub
jo,pt
cmp
dec
xchg
add
and
xor
cmpsb
notb
xchg
loop
pop
mov
push
lds
and
and
cwtl
jmp
scas
pop
push
mov
out
mov
ja
lds
bound
push
sbb
or
push
push
add
js
mul
push
scas
leave
outsl
jge
pop
inc
adc
mov
add
add
mov
cmc
movsl
cmp
pop
inc
les
mov
mov
aaa
inc
pop
xor
xor
repnz
add
lret
pop
stos
loope
std
sub
fmulp
insb
xchg
rcr
add
add
mov
and
xchg
movsb
xor
aaa
repnz
xorb
je
div
repz
into
fisubl
and
repz
and
je
xchg
hlt
outsb
out
mov
pop
fdiv
xchg
jle
shl
push
cmpsl
iret
adc
test
aad
mov
lods
push
out
pop
in
icebp
dec
mov
jle
dec
sub
in
push
out
repz
push
ss
and
outsl
imul
mov
mov
cmp
insb
jnp
ljmp
jae
in
mov
push
repz
push
sbb
push
test
xchg
lea
aaa
adc
mov
adc
push
stos
testb
arpl
mov
mov
setae
aaa
fbstp
pop
or
movsl
into
shll
les
dec
leave
mov
xorb
push
cwtl
xchg
movsb
sahf
mov
jge
loope
das
pop
jae
addr16
addr16
mov
imul
stos
loop
jns
pop
adc
repnz
negb
movsb
mov
es
call
outsl
adc
cmpsb
jl
sbb
je
lods
xchg
adc
jecxz
jno
xor
lods
out
cmp
out
mov
dec
fwait
push
lock
mov
cmp
pop
out
pop
and
pop
push
and
adcl
ret
fcomps
pop
fcmovnb
aam
subb
test
inc
sub
movsl
stos
pop
ljmp
mov
loopne
rorl
mov
xor
cwtl
int3
cmp
outsb
inc
add
in
or
add
leave
mov
loop
loopne
pop
repnz
sbb
inc
imul
add
call
push
call
int3
hlt
and
insb
and
out
adc
mov
add
push
mov
orb
es
orb
pop
cmp
dec
cmpsb
jmp
push
pop
aad
int
push
push
mov
data16
cmp
pop
inc
ja
xchg
imulb
lods
cltd
int
push
mov
mov
sbbl
jne
enter
out
push
imul
sub
outsb
mov
insl
sahf
imul
cmp
pop
mov
subl
ja
add
sbb
icebp
inc
fimuls
sahf
pop
sbb
das
add
jno
sub
dec
mov
enter
out
sub
dec
mov
ret
movsb
xlat
mov
js
cmc
ret
push
out
xchg
sub
xor
pop
rolb
std
out
sbb
insl
push
fsubrl
lods
call
sahf
scas
push
aad
dec
jle
push
cmpsb
in
aam
xchg
cmp
insb
in
call
fadds
adc
pushf
sbb
mov
inc
inc
or
cld
add
mov
outsb
jns
xacquire
lea
mov
mov
lcall
xchg
mov
cmpl
addr16
xlat
andb
imul
es
sub
lds
jb
push
jno
mov
insl
push
or
xor
xchg
rorb
lret
mov
imul
out
in
shrl
cmpsl
sarl
sub
sbb
inc
sbb
inc
jge
shll
das
leave
gs
out
cmc
pop
lahf
cmpsl
pop
shll
add
xor
pusha
lea
fdivs
test
data16
adc
and
cmpsb
jbe
das
stos
imul
test
inc
xor
add
lea
repnz
dec
xchg
stos
enter
xchg
mov
xchg
mov
cmp
cs
gs
jp
mov
cmpsb
jae
dec
mov
push
xor
sbb
nop
out
pop
iret
pop
mov
sbb
std
popa
push
clc
addr16
jle
test
shll
dec
xchg
fincstp
add
push
xor
mov
mov
lock
cmpsb
pop
outsl
fs
daa
outsl
push
test
pop
sbb
frstor
adc
fisubs
sub
in
cmp
and
xchg
ljmp
sub
js
pop
adc
insb
stos
scas
cmp
fmul
push
xor
es
inc
cmp
xchg
repnz
scas
push
in
sti
dec
cli
dec
cltd
fsubrs
cwtl
stos
inc
or
adc
stos
jl
jge
or
xor
cmpsl
and
ret
dec
fmul
jle
hlt
add
cmpsb
lahf
jno
aam
mov
push
insb
sarl
in
idivb
aas
pop
sarl
sbb
lahf
mov
test
add
addr16
jnp
jnp
dec
adc
and
clc
and
dec
addr16
lds
ljmp
mov
push
shrl
inc
iret
jno
sbb
popf
inc
cmp
pop
push
push
sbb
pushf
sbb
cmp
dec
adc
dec
gs
pop
xchg
dec
dec
ljmp
push
dec
xchg
les
xchg
jb
sub
push
das
dec
daa
push
inc
push
mov
pop
jg
pop
and
ret
cmpsb
inc
and
inc
pop
xor
outsb
out
call
push
jb
orb
or
mov
fsub
out
jo
testb
ja
dec
pop
jns
lods
call
mov
mov
lods
add
ret
adc
pusha
repz
mov
into
ficoms
mov
or
pop
sbb
gs
mov
push
dec
add
mov
or
unpckhps
cmpsl
push
insl
push
and
or
icebp
lret
ds
mov
rorl
xor
jmp
outsl
inc
add
xor
cvttps2pi
fsubrl
or
jno
repnz
sbb
cmp
add
arpl
jge
sahf
rcl
sub
in
jle
sub
iret
adc
into
mulb
outsl
orb
push
mov
fwait
push
jl
out
mov
test
ret
inc
add
adc
mov
jno
rcrl
add
xchg
inc
add
pushf
adcl
je
cmp
aad
mov
mov
stos
cltd
adc
mov
inc
jne
rcrl
mov
mov
fcoms
addr16
mov
add
pushf
mov
inc
movl
lds
inc
lcall
dec
aad
mov
and
mov
testb
push
jae
jnp
mov
outsl
mov
jae
aaa
or
pop
jle
adc
ret
mov
mov
loope
cs
xchg
ror
sahf
imul
xor
or
sar
sub
iret
imul
loopne
js
movsb
adc
test
mulb
push
test
ret
lcall
xor
inc
sub
sub
iret
outsb
dec
call
or
jg
ja
in
outsb
aas
jmp
cwtl
xchg
add
jle
mov
or
mov
lcall
push
cs
fdivrs
mov
loopne
xorb
inc
sahf
sti
popf
scas
xchg
daa
shll
mov
movsb
insb
outsb
push
jge
flds
and
push
inc
movsb
mov
out
mov
data16
cmp
jnp
inc
insl
lea
addr16
sub
mov
scas
pop
jp
xor
mov
daa
push
xor
divl
pushf
xor
add
loope
dec
enter
sub
or
lock
lods
enter
dec
xchg
cmp
out
aas
cld
aad
aaa
into
outsb
push
pop
and
mov
scas
cmp
mov
xchg
shl
shll
or
loopne
out
cwtl
addr16
jnp
rclb
cmp
add
xchg
ja
and
cmpsb
sti
or
into
push
mov
lods
mov
pop
xchg
dec
pusha
lea
or
mov
setae
vshufps
and
dec
dec
mov
xchg
add
push
loopne
xchg
mov
inc
lret
test
les
lret
xor
or
mov
scas
pop
xor
test
into
test
pop
mov
negl
scas
daa
jo
stos
in
fsubrs
cwtl
aaa
repz
sarb
mov
jb
in
nop
pop
ds
push
adc
push
xchg
adc
enter
lret
imul
jns
cmpsb
test
movsb
unpcklps
xchg
inc
xor
les
rorb
jecxz
xor
cmp
cmpsb
inc
jne
leave
ret
out
in
fcomip
hlt
insb
push
std
out
int3
adc
lcall
into
jp
aaa
mov
mov
cld
jle
cmp
jp
aaa
cmp
xor
notl
pop
loop
dec
add
mov
jge
leave
movsl
xchg
and
in
fcmovb
lods
inc
or
daa
lahf
out
add
or
push
ret
cmpsb
es
or
xchg
xchg
ds
mov
push
imul
dec
mov
sub
pushl
fsubrp
xlat
fcmovnbe
es
scas
icebp
jb
arpl
pop
jg
scas
jg
inc
mulb
cmp
jl
fisubrl
in
pop
xchg
sbb
out
push
aad
clc
jmp
pop
sub
pop
cmp
out
ja
ljmp
enter
roll
lret
jg
psrlq
dec
push
out
mov
aad
cmpsb
nop
push
into
lcall
addr16
out
xor
dec
mov
jle
mov
add
cmpl
leave
jge
popf
mov
fidivrs
int
inc
std
add
cmp
push
xchg
jb
add
mov
sub
js
mov
lcall
sub
jne
mov
dec
inc
xchg
inc
lret
add
mov
rcrb
and
push
pop
sbb
je
fstl
jbe
clc
repnz
or
adc
imul
addl
ss
out
inc
lods
in
ss
cmp
fucom
jns
fsub
loopne
dec
gs
mov
mov
xor
pushf
mov
push
xchg
add
add
cmp
mov
es
sbb
push
xchg
mov
fildll
sbb
sbb
jne
fldcw
in
loopne
in
les
cmp
iret
push
in
dec
in
mov
mov
xchg
je
enter
jo
mov
pop
jbe
out
in
jp
test
into
lock
in
or
inc
cmpsl
pushf
cmp
pop
sub
jg
sub
out
jae
and
push
or
std
insb
movsb
cmp
pop
decb
mov
jb
mov
or
dec
jl
xor
std
xor
pop
jnp
add
loopne
pop
aad
xor
sbb
loop
push
and
enter
fldpi
dec
out
fs
testb
ja
adc
pop
inc
xorb
and
cmpsl
add
mov
xor
fsubrl
push
or
mov
mov
mov
cld
addb
pop
jg
pop
inc
bound
xchg
dec
or
xlat
aaa
lret
push
jecxz
shll
pop
sbb
test
addb
inc
scas
sbb
adc
cli
dec
mov
xor
sbb
addl
pop
outsl
inc
loope
aad
cmpsl
mov
dec
adc
mov
orb
mov
mov
or
xchg
mov
jae
sbb
pop
sbb
fimuls
clc
mov
ficoml
aad
cmc
add
mov
mov
cmp
pop
addr16
cli
push
dec
movsb
pop
push
insb
xor
or
rcll
pop
jo
loop
orl
mov
and
imul
pop
mov
pop
jg
push
icebp
popf
mov
scas
sbb
adc
icebp
adc
add
pop
push
inc
sub
mov
enter
dec
xor
pop
out
shl
cwtl
bound
stos
lea
add
test
fs
les
push
mov
fisttps
xchg
push
cmp
aam
aad
js
xor
mov
add
sbb
loop
jns
inc
add
sbb
mov
insb
xor
lea
lea
repnz
cmp
jmp
mov
into
fisubl
pop
mov
les
sarl
xor
adc
lods
insb
rclb
out
jecxz
subl
push
pop
push
jmp
lcall
jg
or
pop
xchg
enter
pushf
in
jno
cld
mov
mov
loopne
inc
test
popfw
mov
lcall
mov
and
je
mov
shlb
in
scas
adc
sti
fwait
aad
push
sub
js
dec
dec
or
push
js
ljmp
push
pop
cmpsl
xor
inc
ljmp
push
xor
mov
scas
and
ret
lahf
mov
dec
jo
pop
add
ljmp
aad
lds
xchg
sub
cmpsb
xlat
lcall
lret
movsb
or
nop
sbb
daa
cmpsb
and
push
pop
push
dec
sbb
outsb
inc
inc
push
fistps
out
ret
pop
movsb
lret
dec
insl
inc
testb
add
sub
fsubrl
cs
mov
sub
xchg
push
and
mov
jge
dec
sahf
pop
les
dec
ljmp
sbb
dec
es
mov
jbe
insb
sub
fstp
xchg
iret
out
pop
mov
ljmp
outsl
hlt
orb
inc
inc
adc
mov
adc
mov
movsb
jno
je
xlat
push
int
mov
lret
push
mov
jns
or
jmp
test
daa
push
mov
push
int3
adc
pop
cmpsl
loope
xor
les
rorl
ljmp
push
scas
data16
lods
test
fidivrs
subb
cmc
cmp
daa
outsb
xchg
push
xor
push
jp
jmp
bound
out
or
add
cwtl
popf
arpl
inc
jno
xor
sbb
outsb
xor
mov
xchg
cwtl
pop
xor
fisttpl
fnstenv
popf
push
jg
jb
cltd
addr16
push
pop
cmp
jns
enter
mov
or
out
jno
dec
stos
push
pop
dec
in
dec
nop
call
push
aas
stos
das
cmp
xchg
mov
insb
xor
mov
mov
iret
push
popa
and
pusha
lcall
xchg
mov
mov
aad
ret
call
jecxz
cmpsl
pop
add
push
out
hlt
ds
call
lahf
pop
or
ja
push
stos
push
pop
fwait
pop
popf
add
sbb
call
pushf
pop
push
jo
inc
imul
push
xchg
push
imul
pop
inc
sub
lahf
mov
pushf
sbb
pop
fs
aaa
add
mov
fmul
push
bound
pop
stc
cmp
cmp
loopne
jl
pop
xor
inc
andl
inc
push
lea
scas
jae
lods
sbb
je
lret
or
ja
enter
jbe
cmp
mov
and
enter
pushf
shr
mov
jl
cmp
mov
push
mov
and
inc
dec
rolb
push
fidivl
adc
loope
and
loope
inc
pop
popa
shll
aas
push
push
or
add
inc
cwtl
js
jb
adc
jecxz
xchg
fs
fldl
mov
out
lods
popf
shll
add
lea
notl
mov
out
pop
lods
ss
cmp
mov
mov
mov
push
push
test
pop
xor
mov
inc
jge
cld
adc
push
push
fidivs
ret
push
cld
mov
adcb
xchg
lea
push
gs
and
inc
and
loop
jecxz
or
js
int
dec
fiadds
sbb
push
or
inc
inc
es
lock
test
mov
iret
popl
push
xor
or
std
push
mov
and
inc
subl
add
arpl
cmp
mov
mov
sbb
pop
cmpsb
dec
xchg
and
mov
insb
icebp
jns
mov
inc
xor
mov
imul
out
mov
subb
test
dec
pushf
xlat
push
mov
pop
sub
adc
inc
mov
mov
mov
pop
hlt
out
movsl
stos
les
add
mov
call
adc
imul
or
bound
orl
xor
inc
add
data16
xchg
loop
dec
shlb
pop
cmp
mov
std
test
mov
or
sbb
ja
arpl
jg
popf
push
mov
mov
pusha
xchg
aaa
lcall
pop
cwtl
hlt
jno
loope
add
sbb
mov
repnz
nop
call
insl
xor
sbb
or
out
xchg
sub
test
and
mov
xchg
mov
push
shlb
outsb
test
or
leave
inc
into
outsb
sbb
lds
mov
mov
mov
push
cs
xor
mov
dec
dec
sbb
sub
clc
andl
and
xchg
add
scas
out
imull
xchg
insb
pop
inc
dec
adc
cltd
movsb
loopne
dec
and
fucom
hlt
lret
incl
cmp
in
mov
jp
pop
jg
shlb
sar
imull
mov
sbb
faddl
cli
jl
and
imul
aas
sub
mov
xlat
and
cmp
jb
shrl
popa
rorb
fcmovne
xor
frstor
ja
outsb
cwtl
lahf
pusha
lea
enter
decb
cmp
repz
popa
sbb
jae
icebp
add
mov
push
push
fwait
jnp
lcall
xor
ficompl
mov
inc
pop
xchg
popf
adc
xchg
mov
jbe
cmp
mov
push
lret
mov
mov
mov
mov
add
cltd
mov
dec
cltd
leave
cmpsb
in
scas
cmpsb
mov
add
inc
lahf
jge
insl
inc
jno
lahf
pop
mov
adc
scas
mov
pop
loop
movsb
shlb
and
push
sub
jo
iret
mov
fimuls
pop
mov
int
sub
bound
mov
rcrb
lahf
fbstp
sbbl
sbb
fnstcw
in
or
loope
mov
test
stc
loop
adc
inc
cli
pushf
or
out
xchg
xor
xor
enter
leave
out
clc
sti
ds
sub
incb
test
stos
je
imul
cs
push
ret
sti
xchg
lds
pop
sub
inc
cmp
gs
daa
clc
mov
and
dec
xchg
jle
in
adc
push
arpl
dec
movsl
stos
sbb
add
je
push
pusha
cmp
shll
pop
adc
mov
out
ss
pop
lea
add
push
icebp
pushf
in
jno
jg
test
pop
clc
inc
cmpb
hlt
ljmp
inc
clc
and
cmp
xchg
cmp
jmp
lea
sub
das
mov
int3
mov
pop
jne
cmp
mov
mov
mov
cmp
pop
push
mov
mov
push
idivb
std
pop
mov
data16
inc
sub
pop
push
scas
adc
add
jmp
adc
loopne
mov
cmp
imul
pop
lds
xor
mov
xor
xor
out
push
pop
imul
aam
popf
mov
bound
mov
and
addr16
and
movsl
mov
inc
sbb
lcall
jmp
fistpl
es
xor
push
test
xchg
gs
je
aam
adc
insl
mov
push
sub
or
mov
mov
sahf
mov
popf
push
stos
mov
cmp
add
in
xchg
push
xorb
inc
cmp
fst
je
jns
mov
xor
loop
insb
jbe
jp
das
pop
xor
ss
je
mov
cmp
into
inc
mov
call
cmp
jg
je
push
subl
jmp
push
aaa
das
inc
sbbl
lea
cwtl
sbb
mov
imulb
and
mov
aas
ljmp
daa
or
dec
aam
mov
fcoml
dec
movsb
sbb
outsb
pop
enter
lods
in
push
movsb
mov
leave
or
shl
sbb
cs
aam
pop
loope
fs
sbb
popa
inc
and
inc
bnd
jb
stc
xor
sub
jp
test
jmp
insb
fdivrs
lods
jmp
pop
std
adc
movsw
repz
lahf
and
mov
lea
dec
lcall
aas
movsb
aas
rcrl
xchg
sbb
or
into
ffreep
shl
or
jb
mov
pop
xor
jecxz
mov
cmc
cmp
fadds
out
xsha1
cmpsb
push
jae
jg
cli
outsb
mov
fiadds
in
arpl
orb
dec
push
xchg
mov
push
negl
xchg
dec
sub
nop
out
sbb
pop
jl
xchg
push
push
mov
or
add
jmp
xlat
shr
and
mov
jb
add
sbb
outsl
popf
add
xchg
mov
std
cmp
cltd
xchg
or
mov
stc
insl
add
lods
jno
inc
test
std
or
test
cltd
and
mov
or
dec
jae
sbb
cltd
jle
js
ja
cvtps2pi
push
xchg
push
mov
cld
inc
fcomps
add
inc
sub
dec
mov
xchg
xor
xchg
and
aas
sbbl
or
sub
ror
sbb
insw
fmull
jb
gs
push
xlat
xor
mov
mov
adc
xchg
push
cmp
std
add
or
pop
or
lea
sub
sub
adc
mov
call
movsl
or
mov
xchg
mov
mov
lcall
mov
push
jnp
sub
loope
add
call
sub
and
pusha
sti
push
cmp
arpl
sbb
out
or
jecxz
or
sahf
and
fldt
xorb
pop
jecxz
add
jp
cmpsb
inc
and
inc
fidivl
adcb
arpl
xchg
sub
sbbb
jo
stc
inc
xchg
sbb
outsb
ficoms
cld
mov
xlat
test
push
aad
jns
jle
gs
imul
adc
mov
or
cs
int
push
jecxz
icebp
ss
loope
pop
rcrb
enter
cwtl
mov
add
and
xchg
lock
mov
loopne
mov
cltd
jge
call
lods
enter
mov
and
xor
pop
xchg
jg
add
add
adc
cmp
pop
icebp
fsubl
cld
or
iret
mov
inc
mov
inc
sub
cmp
xchg
adc
adcl
xchg
add
jge
imul
xchg
pop
cmpsl
shr
mov
xchg
mov
push
mov
fistps
dec
xchg
aad
test
repz
std
outsb
and
or
in
and
sub
cmp
xchg
jecxz
sahf
xchg
and
adc
mov
imul
lret
lds
js
shrl
push
mov
dec
adc
pop
cwtl
mov
nop
out
cmp
sbb
cld
cmpsl
orl
cli
xchg
mov
push
lods
mov
and
pop
dec
in
dec
icebp
shlb
push
and
nop
dec
faddl
cwtl
aad
rcll
stos
jbe
test
xlat
out
mov
push
or
in
adc
aaa
mov
cmp
mov
loop
mov
mov
xchg
xor
aam
test
lea
pop
dec
fcmovnb
xor
js
movsl
das
add
sbb
mov
mov
jl
lea
mov
push
jns
scas
push
pushf
jl
lahf
pop
mov
ds
clc
in
push
cmp
rorl
inc
inc
repnz
pop
fldenv
jl
cmp
adc
xchg
lret
es
cmp
jo
xchg
push
aad
fwait
jecxz
shlb
mov
fdivrl
and
push
aad
aam
loope
sbb
adc
outsb
pop
inc
xorl
cli
dec
sbb
xlat
mov
push
inc
mov
scas
or
out
int
fbstp
cltd
leave
inc
mov
and
std
lods
stc
movsl
jmp
jno
cmp
push
lret
clc
sar
out
add
jbe
insb
mov
mov
std
sbb
mov
or
or
adc
lds
or
inc
adc
dec
outsl
lds
mov
je
adc
in
movsb
xor
roll
mov
or
fsub
xchg
jp
sbb
push
mov
daa
repz
mov
and
in
lahf
push
mov
cmpsl
xchg
jmp
pop
lods
add
jne
dec
add
out
mov
xor
jbe
out
sub
cmp
fdivr
ret
aas
jo
cmpsl
jmp
sub
add
pop
inc
loopne
aaa
cwtl
mov
jp
inc
xor
insl
test
add
jp
ret
jnp
dec
add
into
sbb
fs
ljmp
invd
sahf
test
mov
jae
imul
stos
xchg
or
into
jno
inc
jl
lcall
add
call
popf
roll
icebp
dec
out
jbe
int3
lcall
lcall
add
jp
push
out
fisubrs
in
jbe
push
loopne
fwait
addr16
into
lods
cwtl
addr16
mov
push
scas
les
test
in
inc
insb
add
push
dec
lret
jmp
mov
jbe
mov
aam
mov
jnp
lock
add
xor
adcb
stos
lds
in
fisttpll
push
outsl
add
push
xchg
sub
fmull
add
adc
das
xor
stos
aas
imul
lret
mov
lret
pop
insl
jge
rcl
ss
jmp
cmp
xchg
xchg
jg
sub
imul
mov
clc
outsb
ret
movsl
nop
cmpsl
jmp
insl
lds
or
xor
jp
push
cmpsb
xchg
scas
out
mov
aad
jae
cmc
into
mov
icebp
mov
dec
mov
stos
adc
lret
rclb
add
stc
lods
sbb
sbb
mov
dec
sbb
dec
scas
jns
mov
stos
pop
insb
stos
enter
movsl
xchg
ljmp
loopne
cld
jns
xchg
aam
ds
mov
shrb
or
jb
mov
int3
ja
xor
stos
test
cmp
mov
lds
cmc
pop
and
movq
iret
fmull
es
test
mov
aas
sbb
pop
jno
lahf
fdivs
jg
mov
sahf
mov
sub
ds
cmpsl
inc
push
mov
jl
shrb
enter
xor
ss
decb
nop
dec
cmp
push
fnstenv
aas
shlb
mov
inc
adc
sub
ljmp
push
lcall
loop
in
bound
add
jnp
jmp
sbb
in
addr16
stos
arpl
es
es
sub
sbb
push
pushf
aam
sub
les
sbbl
mov
sahf
mov
inc
popf
jbe
adcl
sub
mov
cltd
iret
lock
jno
fldcw
into
push
lahf
pusha
or
jmp
add
jp
pop
add
mov
rcr
ds
out
or
cmpb
into
loope
out
adc
leave
pop
xlat
fcom
pushf
mov
mov
loopne
jmp
pop
mulb
xchg
push
mov
push
dec
es
lods
aaa
std
mov
and
xchg
push
mov
cmp
jo
jl
and
pop
add
nop
pop
rcll
jmp
lea
cmp
data16
push
cmpsb
fisubrl
cmpsb
sbb
mov
push
insb
sbbb
leave
mov
out
fwait
jp
push
push
mov
mov
loopne
and
mov
test
or
test
repz
mov
xor
imul
out
inc
mov
cmpsl
mov
stc
leave
jecxz
cmp
and
arpl
stos
out
cwtl
aaa
bound
cmpsb
lock
mov
add
pusha
or
mov
mov
add
call
mov
sbb
xorl
lret
fsts
jl
xor
or
aam
into
pushf
adc
addr16
mov
mov
lcall
mov
ljmp
andb
mov
sub
leave
int3
out
int3
add
sub
sbb
hlt
and
push
insb
and
cmp
in
jl
push
xchg
orb
sub
int3
inc
jns
sbb
into
jb
push
rcrb
enter
in
idivl
mov
pushf
nop
cmp
rcrb
les
jp
or
les
or
roll
or
cmpsb
repnz
push
cmp
mov
jne
jge
dec
mov
test
add
aas
out
call
dec
int3
push
aas
pop
inc
sbbb
cmc
dec
mov
push
mov
xor
mov
movsb
push
int
sub
mov
mov
or
mov
mov
push
movsl
cmp
cmp
xorb
push
outsl
mov
outsl
xor
push
xchg
mov
ret
sbb
jle
insb
nop
into
sbb
jo
int
mov
push
or
stos
lcall
pop
sti
push
lret
push
dec
add
ja
inc
xor
jmp
or
in
sub
es
jnp
or
mov
xorb
popa
fimuls
jb
mov
jnp
mov
aas
ja
movl
mov
leave
xor
aad
lods
mov
arpl
inc
pop
es
leave
js
cmp
imull
mov
rorl
inc
test
adc
add
addl
pop
mov
xlat
xchg
sub
add
sahf
sub
cmp
es
pop
movsb
xor
push
push
std
sahf
rcll
sbb
lahf
inc
add
push
mov
loopne
fsubr
addr16
pop
jne
sub
aas
mov
mov
icebp
mov
lods
mov
or
je
test
push
cmp
fmull
jns
jmp
cmp
nop
push
push
insl
add
icebp
xor
repz
aad
div
pop
out
adcl
jp
pop
xor
lds
mov
cld
cli
push
cmpsb
repz
fadds
jo
and
add
sbb
xor
popa
test
mov
mov
roll
aas
or
enter
into
add
jmp
testl
push
cwtl
repnz
and
xchg
fisttpl
mov
jecxz
push
mov
cltd
mov
lret
pop
xchg
mov
xor
fwait
addl
add
sbb
in
add
gs
add
jle
mov
ds
jge
or
mov
xlat
sbb
mov
adc
xchg
push
inc
cmp
loop
mov
and
jmp
lods
imul
flds
jb
push
mov
pop
adcb
stc
jo
iret
xchg
dec
and
aaa
xor
inc
pop
inc
loop
jns
push
push
int
sub
std
cmp
and
dec
stos
mov
mov
insb
addb
jb
pusha
sbb
dec
gs
mov
cmpsb
inc
mov
pop
push
loope
adc
ret
dec
iret
cmp
adc
mov
jb
aad
out
in
xlat
dec
jo
xor
out
gs
insb
test
jae
rcrb
inc
jo
xor
inc
movsl
inc
mov
clc
std
cld
clc
jbe
sub
jb
ss
aad
jg
and
shlb
mov
lds
in
xchg
stos
xor
adc
inc
sub
mov
sti
add
popa
pop
xchg
lea
aad
stos
shr
aas
loope
mov
test
popf
or
test
das
fs
mov
push
add
into
jg
aad
add
add
shl
test
mov
cmpsl
or
lcall
adc
push
fstpt
add
lods
adc
add
repz
out
mov
pop
jns
fisubs
ds
pop
pop
cmpsb
jbe
adc
push
ret
mov
test
cmp
insb
and
sbb
out
shll
adc
fsubs
cs
fldt
and
jp
mov
int
scas
in
sub
addr16
cmp
or
std
jecxz
mov
cmpl
xor
jge
nop
in
pop
dec
fisttpl
fnstenv
call
or
cmp
inc
mov
xor
fdivrs
outsl
push
leave
jg
rcll
and
aas
inc
loop
sbb
jecxz
jae
sbb
aaa
xor
dec
test
mov
jo
mov
stos
xor
mov
cmp
shr
cmp
loope
aaa
sbb
rcrb
stos
xor
iret
popf
mov
xchg
push
sbb
adc
shrl
dec
je
mov
fnstenv
inc
test
aad
and
inc
subl
sbbl
jg
out
sarl
test
roll
mov
in
lea
pop
sub
daa
dec
mov
fucom
cmp
jle
or
movsl
dec
lock
out
cwtl
sbb
and
pop
popa
imul
sar
jbe
and
jmp
pushf
test
mov
push
test
gs
pop
lahf
inc
dec
in
cmpsb
pop
dec
jo
add
ja
push
cld
or
repz
jp
dec
movsb
sbb
xchg
out
aad
cmp
and
out
stc
xor
inc
jo
iret
or
or
adc
lock
aam
pushf
xchg
jl
ss
dec
push
sub
dec
mov
dec
push
aaa
inc
lea
and
addr16
scas
fdivs
sub
push
jge
or
testb
dec
jae
stc
sbb
fwait
mov
inc
xor
orb
incl
aaa
stc
mov
mov
cmp
test
inc
mov
loope
xchg
das
dec
mov
les
xchg
sbb
stos
jge
mov
std
mov
cmc
out
adc
pop
mulb
inc
cmp
push
mov
ljmp
mov
xchg
insl
add
loopne
arpl
or
mov
or
insb
fs
ret
mov
lcall
test
adc
inc
or
movsb
aam
inc
cmc
sbb
sub
out
mov
jl
pop
cli
shll
sbb
ffree
sub
and
sbb
dec
pop
and
push
mov
mov
and
jbe
loope
ljmp
repnz
adc
dec
test
pop
loop
or
xor
leave
xchg
sarl
sbb
push
fnstsw
insl
test
mov
sbb
xor
mov
mov
movsl
out
jne
ljmp
fiadds
push
test
cmp
sbb
mov
dec
outsl
ja
insl
hlt
rorb
fdivl
pop
test
andb
into
ljmp
mov
mov
addr16
mov
rorl
out
cmp
imul
and
sub
xlat
xor
xor
cltd
adc
cmp
shlb
inc
insl
adc
mov
int3
mov
push
jge
cmp
inc
pop
sbb
ss
mov
pop
adc
subb
push
loope
lahf
or
cmp
das
cmpl
gs
popa
lea
lahf
jnp
movsl
aas
push
mov
leave
dec
mov
sbb
out
xchg
repz
out
inc
dec
dec
sbb
mov
sub
mov
test
les
xor
dec
mov
fs
aad
xlat
outsl
cld
push
and
sbb
sti
cmp
fsubs
aad
ret
gs
je
out
iret
inc
cld
mov
push
xchg
cmpl
ss
sub
stos
and
imul
inc
je
rcrl
jmp
push
and
inc
pop
xchg
xor
push
lcall
call
fwait
mov
pusha
ljmp
repz
jecxz
fwait
adc
xor
and
enter
jl
xchg
dec
iret
movsl
mov
inc
push
fidivrl
xor
sub
popf
rorb
std
inc
dec
shrb
scas
pop
sarl
cmp
push
mov
lret
sub
pop
pusha
mov
inc
jl
enter
fadds
mov
sbb
pop
pop
push
aam
mov
out
jno
lcall
mov
inc
dec
cld
sbb
push
inc
jne
test
scas
jno
dec
lahf
pushf
mov
xlat
adc
daa
push
leave
call
test
mov
test
je
movsb
fdivl
sti
stc
pop
hlt
mov
cmpsb
sbb
lea
xchg
jl
or
aas
or
insb
sub
jbe
sub
rclb
sbb
add
loopne
sub
inc
mov
cmp
mov
iret
push
lea
mov
sahf
or
arpl
xchg
js
lds
push
rorl
pop
arpl
jmp
add
leave
cmp
int
adc
pusha
pop
rcrb
loope
cmpsb
ja
idivb
js
test
and
mov
adc
enter
negb
mov
pop
adcb
and
cld
in
mov
mov
test
mov
aam
sbb
push
inc
fstpt
inc
add
mov
stos
addb
int3
pop
mov
xlat
sbb
movsb
addb
jne
je
adc
add
sbb
xchg
sub
sub
jae
push
negl
push
fs
scas
xchg
add
mov
or
mov
shll
icebp
lds
inc
shrb
imul
xchg
pop
inc
in
cltd
psubw
xor
ret
mov
subb
dec
pop
leave
pop
xor
xor
sahf
lahf
mov
adc
jne
push
push
sbb
clc
pop
dec
add
ds
in
out
lock
mov
fidivs
test
push
lea
into
cli
xlat
push
push
lahf
push
mov
test
jp
aam
icebp
aam
jmp
mov
cmc
lea
add
hlt
or
mov
adc
int
xor
push
mov
xor
jo
xchg
imul
out
cmp
inc
repnz
test
xchg
or
jb
loope
push
outsl
cmpsl
scas
xchg
test
sub
sysexit
int
and
xchg
jp
jne
mov
dec
in
xor
pop
mov
into
mov
fldl2e
mov
xchg
sub
imull
arpl
arpl
out
loope
rorl
mov
and
mov
aam
daa
mov
xor
inc
test
rolb
xchg
add
or
jl
andb
ficoml
rol
in
inc
lods
je
mov
xchg
ss
lock
aam
add
and
xor
mov
add
repnz
jmp
jecxz
and
push
fdivrl
fisttps
push
lods
adc
push
push
inc
clc
adc
pop
sbb
jnp
xchg
dec
jg
dec
jbe
push
sbb
outsl
stc
jmp
lret
pushf
push
mov
sub
arpl
inc
mov
cs
lds
mov
mov
mov
imul
xchg
push
loopne
cmpsb
cmpsb
push
mov
mov
clc
xor
pop
call
fcmovnbe
fsubs
icebp
inc
fidivrs
sub
bound
testl
pushf
outsl
scas
out
fistl
maxps
loope
std
bnd
fmull
lods
xchg
movsl
xor
or
jp
push
pop
cltd
cmpsl
int3
sub
add
int
adc
mov
mov
lahf
add
jnp
in
imul
xor
adc
push
cmp
adc
loopne
mov
xor
pop
xor
sub
push
pop
rolb
enter
ja
das
mov
xor
and
mov
mov
jg
dec
in
xchg
mov
or
add
aam
pop
cmpsb
frstor
cltd
test
imulb
push
bound
sbb
les
rcrl
out
dec
test
dec
push
cmp
push
leave
outsb
add
test
mov
aaa
inc
loope
addl
outsb
cld
mov
add
push
mov
loopne
mov
stc
dec
inc
arpl
fmuls
and
and
enter
cld
lret
idivl
and
mov
xchg
sub
bound
arpl
push
push
adc
pop
cld
cmp
test
adc
scas
or
xchg
cli
mov
hlt
xor
shl
lea
or
rcll
and
mov
je
mov
lods
test
movb
sub
hlt
gs
sub
inc
cmpsl
add
popf
jb
push
mov
orl
dec
mov
add
pop
cmp
pop
ds
in
push
inc
push
xchg
call
fisubl
ljmp
adc
scas
loope
fucomip
cli
fmuls
mov
lea
in
push
push
add
jecxz
call
push
fildll
cmp
addl
push
call
and
xchg
push
xchg
in
sbb
nop
inc
xchg
shrl
mov
test
lds
je
test
aas
cmpsl
shrb
jg
jo
cld
cmp
ficomps
mov
jg
dec
insl
push
in
aam
rorb
movl
pop
or
cwtl
inc
push
cmp
gs
mov
cwtl
pop
and
pop
sbbb
gs
stc
or
push
repnz
dec
sub
fdivs
mov
jno
repz
push
jns
popa
bnd
dec
mov
add
inc
pop
leave
aaa
add
and
mov
mov
xor
xchg
fs
popf
arpl
mov
or
stos
jo
fisttps
mov
mov
out
call
js
mov
jnp
jno
dec
lcall
mov
cmp
jno
push
ljmp
jle
mov
orb
fidivs
or
mov
xor
cmpsb
jbe
jle
jno
les
xor
pop
xchg
clc
push
mov
and
pop
mov
push
sbb
mov
cld
adc
nop
cmp
or
mov
movsb
inc
std
loopne
dec
rorb
cmp
cmp
clc
mov
adc
inc
out
cs
pusha
xor
sbb
imul
movsl
adc
inc
add
loop
pop
push
jmp
adc
fidivs
ss
or
pushf
mov
mov
mov
cmp
scas
pusha
pop
dec
xchg
sbb
cld
scas
aam
in
andb
shll
xor
in
cmc
inc
jbe
cmp
pop
rol
insl
lahf
cmc
in
gs
add
jno
cmp
ret
adc
jmp
add
cmp
jle
loop
sbb
push
pushf
add
into
les
dec
in
xchg
xor
into
dec
mov
iret
jecxz
sbb
add
rolb
and
fwait
std
pop
loop
movsb
lret
jne
dec
push
mov
cmpl
dec
sti
insb
xchg
sbb
js
lods
out
ss
lock
out
aas
mov
pop
dec
dec
mov
bound
add
dec
sub
dec
sub
sub
imul
jae
out
and
push
and
and
xchg
inc
je
jo
ds
loop
ret
jl
mov
cs
sub
inc
rcl
insl
rorl
add
nopl
sub
jmp
pop
mov
xor
pop
cmc
jmp
int3
fdivrs
mov
adc
inc
pop
jbe
mov
jecxz
scas
stc
add
or
fcoml
pop
jmp
add
test
and
pop
push
pop
xlat
aas
nop
cld
test
int
mov
subl
pushf
jae
mov
incl
cmp
dec
dec
push
mov
imul
hlt
enter
imul
in
push
aas
enter
push
jmp
push
lret
arpl
add
pop
inc
xor
xorb
add
push
jmp
push
icebp
pusha
mov
push
repnz
xchg
jp
es
movl
mov
inc
or
xchg
out
pushf
cmc
xor
pop
push
aad
pop
jmp
mov
test
inc
inc
mov
mov
outsb
cmp
clc
mulb
jne
stos
test
mov
sub
add
out
lea
insb
inc
insb
dec
jbe
inc
mov
lcall
mov
repz
lds
movsl
push
xchg
mov
aad
lret
xbegin
inc
pop
arpl
std
xchg
loopne
testb
pop
movsl
std
sub
xor
mov
mov
push
iret
jne
jle
sbb
fnsave
cltd
or
stos
cmpsb
call
push
xchg
dec
jo
filds
pop
push
mov
hlt
pop
push
icebp
cmp
xor
adc
ror
push
fwait
cli
and
sub
mov
cmp
xor
das
imul
test
shll
jecxz
test
aam
popa
xchg
ret
test
xor
loopne
pop
jns
repz
pushf
fsubrl
jb
cmpb
cmp
xchg
nop
push
xchg
sti
out
das
mov
lea
movsb
aas
decl
inc
and
lret
insl
shll
push
ret
adc
fnsave
cmp
mov
or
dec
sbb
and
rclb
xchg
in
fcoml
mov
mov
or
mov
cmp
scas
sti
pop
push
cld
mov
decb
xchg
cmpsl
mov
arpl
fsubrp
lea
shll
insb
je
cmpsl
nop
loopne
arpl
fdivrl
inc
xrelease
insb
stos
dec
inc
cld
inc
add
push
dec
ljmp
icebp
les
inc
stos
sahf
in
aam
nop
pop
leave
xchg
out
mov
leave
mov
xchg
mov
pop
inc
das
fcompl
jb
dec
adc
rcrb
and
filds
inc
jno
je
test
add
sahf
xor
and
popa
xchg
xlat
pop
stos
xor
dec
ljmp
imul
in
or
popf
je
sub
mov
mov
sbb
add
xchg
aaa
es
or
jo
fcom
stc
dec
jp
aaa
rclb
inc
adc
pop
jp
cmc
push
rcl
cmp
sbb
shl
jp
fwait
test
cmp
mov
cltd
cltd
lods
sub
js
maxps
pop
fdivs
iret
inc
xchg
movsb
jae
enter
jle
sub
mov
mov
push
and
mov
fwait
sti
xlat
sbbb
mull
jb
cmp
rorl
or
shl
xchg
test
movsb
or
lods
cmpsb
xorb
pop
fs
dec
enter
mov
adc
mov
lret
aas
sbb
sti
in
fildll
stos
jle
cmpsb
outsb
in
les
aas
pop
jne
js
sbb
push
pop
fpatan
pop
mov
ljmp
push
call
jne
cmc
jp
cmp
dec
inc
dec
or
fnsave
adc
cmp
out
std
mov
clc
jno
inc
add
pop
jb
repz
and
jno
popa
mov
roll
fwait
sti
ja
add
sbb
dec
dec
mov
sahf
mov
sub
and
stc
dec
pop
or
imul
or
pop
fsub
addb
shrl
sbb
shr
sub
rcll
jg
push
jno
ljmp
mov
fucomi
roll
inc
and
cmpl
fildll
pop
les
jge
jg
sti
and
dec
jl
jnp
std
test
and
push
repnz
mov
sub
repz
and
or
xor
les
mov
ja
stc
fcompl
mov
in
sbb
ficomps
adc
cmpsb
pop
and
dec
mov
xchg
mov
fidivs
cltd
mov
add
inc
add
daa
bound
xor
movsl
js
cwtl
inc
pop
std
mov
add
sarl
xchg
sbb
fdivr
aam
adc
adc
enter
add
mov
and
shll
cmp
sbb
movsl
movsl
daa
adc
mov
and
xchg
cltd
stos
ret
lea
fadds
mov
cmp
xor
outsl
leave
andb
jb
loopne
mov
fbstp
xor
ficompl
jmp
cwtl
jno
push
incb
add
jnp
mov
fs
inc
jo
stos
mov
les
lcall
mov
das
fdivrs
xchg
or
pop
shrl
shrb
xor
lods
mov
test
mov
lret
scas
repz
jne
inc
dec
mov
xchg
adc
push
mov
icebp
bound
stos
icebp
cmc
mov
es
shll
sbb
nop
jno
adc
jmp
dec
mov
push
stos
xor
out
jl
cmc
call
jnp
shl
lcall
sub
cmp
sbb
in
imul
scas
inc
mov
lods
iret
les
mov
adc
dec
jnp
mov
lods
scas
mov
dec
jo
add
arpl
leave
or
inc
inc
dec
mov
sub
inc
sarl
mov
mov
add
jmp
mov
pop
rcll
cmc
cmpsl
fcomps
ss
insb
pop
inc
dec
les
fdivs
ljmp
add
add
stc
popf
cmp
xchg
mov
movsb
in
mov
dec
xchg
je
sbb
fldt
jl
mov
sub
test
add
pop
sbb
das
fwait
pop
les
mov
clc
or
stc
mov
jp
mov
scas
aas
add
mov
adc
mov
jmp
jbe
mov
rorl
test
nop
cwtl
jge
in
inc
or
in
mov
mov
push
loop
sub
aaa
xchg
test
mov
inc
cmp
sbb
enter
cld
je
adc
xchg
hlt
inc
mov
mov
sbb
outsb
push
push
lcall
xor
or
pop
push
push
adc
pushf
or
add
or
jno
lds
sahf
mov
xor
lock
or
xor
insl
jle
lods
mov
aad
cmp
imul
push
repnz
pop
lods
add
lahf
stc
imul
dec
jo
jnp
and
jp
inc
cmc
sbb
mov
and
ja
das
loopne
rcl
mov
je
aas
push
push
inc
or
mov
sarb
fcomps
ds
adc
pusha
out
sbb
jp
lock
sbb
rclb
dec
sti
push
jmp
inc
pushf
or
xor
jno
popl
cli
sub
out
ds
mov
loope
push
les
ja
out
jo
push
in
iret
cmc
cmp
ret
add
and
jo
rcr
xchg
add
fidivrl
shrl
add
imul
mov
push
ljmp
out
loopne
std
add
mov
dec
dec
mov
aas
sbb
jns
xor
jae
inc
or
testb
push
popf
or
jo
or
nop
loopne
xchg
xor
ljmp
mov
stc
arpl
sub
insb
pop
add
pop
mov
imul
insb
jns
adc
pop
mov
fisubs
mov
add
and
pop
mov
xor
push
jge
adc
pusha
cmp
icebp
fisttpll
fisttpl
std
pushf
and
daa
inc
arpl
or
xchg
out
cmpsb
imul
push
loop
sub
shr
xchg
dec
sub
or
fldenv
repnz
sub
std
popa
mov
cmp
inc
push
xor
in
cld
or
cld
or
cvtpi2ps
or
push
hlt
or
sarb
loopne
scas
xchg
dec
mov
adc
std
test
jmp
ds
cld
es
lods
jmp
loop
shlb
popa
sbb
test
in
and
xor
xchg
in
push
cmp
sarl
push
xor
stc
dec
sbbl
ficomps
jmp
mov
test
sbbl
rcr
xchg
mov
sub
and
mov
test
ret
cmc
jp
outsl
pop
dec
int3
lret
test
shlb
mov
jp
pusha
int3
xor
mov
sti
add
lea
jg,pn
out
jg
cmpb
mov
loopne
in
cmp
test
push
jb
outsb
push
push
aas
mov
fcmovne
mov
js
imul
mov
mov
stos
mov
mov
clc
jae
pop
loop
xor
jo
in
ret
sbb
negb
lods
out
pop
and
fstl
sbb
add
ja
pusha
mov
nop
or
notl
cltd
fcoml
mov
test
imul
push
dec
xor
or
mov
insl
ds
fs
mov
push
jmp
xchg
adc
rorl
xchg
mov
std
test
dec
scas
push
mov
pop
lea
adc
lock
imul
cmp
gs
aad
subl
xor
mov
lret
add
mov
test
pop
jp
push
inc
loopne
cs
out
out
inc
jnp
dec
and
test
or
aas
push
add
push
jne
adc
push
add
daa
notb
push
cli
sub
mov
fs
sub
lds
cs
jecxz
popl
or
xchg
repnz
mov
pop
or
cmpsb
dec
dec
iret
pop
rolb
mov
cmp
xchg
add
and
les
and
push
inc
ljmp
mov
int
and
and
and
mov
lcall
repnz
mov
lods
pop
hlt
aas
pop
je
sub
jbe
mov
fimuls
cmc
fmull
ret
push
cmp
sub
xor
pop
lds
adc
or
addb
sbb
pop
lods
stos
inc
push
rcr
nop
fisttpl
pusha
cmp
in
std
dec
popf
data16
sub
in
leave
adc
inc
mov
mov
inc
jl
icebp
mov
scas
push
aam
bound
notl
mov
dec
notl
dec
inc
xchg
dec
in
incl
sub
pop
bound
lods
pop
add
notl
movsb
out
orl
flds
repnz
loopne
andb
fidivl
add
insb
xchg
mov
pop
sarb
ds
lahf
stc
orb
cmc
fisubrs
pop
mov
lea
push
dec
loope
and
mov
or
stos
sbb
pop
xor
jae
mov
dec
push
xor
out
jbe
mov
daa
fsubl
jo,pt
push
lods
dec
nop
mov
add
jae
aad
cmp
xor
push
lea
or
add
push
adc
cltd
in
jo
mov
push
sahf
and
xchg
push
lea
imulb
cmp
sarb
sbb
adc
shlb
mov
hlt
test
or
aas
popf
shll
cld
scas
lret
or
test
inc
in
xchg
stc
pop
inc
xchg
lahf
and
insl
and
sub
mov
jo
inc
popa
mov
adc
lahf
mov
push
out
pop
shlb
jle
inc
push
and
push
jecxz
push
mov
inc
cmp
gs
add
xchg
jle
mov
and
push
cmp
push
xchg
add
int3
or
gs
ss
pop
mov
adc
adc
paddsw
mov
jecxz
xor
dec
cld
mov
and
inc
pop
xchg
das
out
ret
ret
mov
add
lahf
push
sub
dec
mov
dec
jg
idiv
fwait
xor
adc
dec
outsl
mov
scas
imul
pop
add
es
repz
inc
ret
sub
repz
icebp
test
in
in
mov
sub
aaa
xor
sub
dec
out
jecxz
adc
aad
and
mov
test
cmp
and
fsubrl
xchg
lcall
push
cmp
idivb
push
add
fistl
popa
sub
loope
test
xchg
movsb
fstpt
xchg
js
sbb
enter
loopne
cwtl
jnp
pop
mov
jno
jmp
lcall
jl
das
xchg
ror
push
mov
and
in
mov
xchg
pusha
xchg
int
rcll
ja
popa
xor
out
mov
divb
ret
xor
cmp
pop
mov
cmpsb
nop
nop
jne
leave
insl
xor
jne
fsubs
mov
sub
mov
push
dec
jo
jge
stos
out
cmp
stos
jl
loopne
loope
mov
cmp
pop
jnp
and
js
fcos
test
jle
fadds
sbb
dec
pop
sbb
fstpt
test
nop
negl
adc
fucomp
scas
sub
scas
xlat
pop
xchg
or
pop
test
fstp
loope
movsl
xchg
addr16
int
and
cmp
pop
jnp
negb
xchg
jecxz
jnp
in
stc
rorb
jno
lods
xlat
xorb
push
gs
dec
clc
outsb
pop
mov
jecxz
pop
jae
neg
adc
stos
rclb
add
xorl
divb
sti
adc
test
xchg
cmpsb
and
scas
push
pop
push
xchg
sbb
fldcw
ljmp
push
pop
sbb
cli
test
mov
xchg
sbb
xlat
xchg
nop
daa
sub
les
push
jne
imul
fcoml
cmp
or
scas
icebp
fwait
enter
xor
sbb
mov
dec
dec
movsl
adc
pop
cmpsb
dec
inc
int3
dec
ret
shl
sbb
stc
push
decl
sahf
mov
xchg
fsubrs
call
roll
es
mov
sahf
xor
clc
dec
adc
in
jl
jo
aam
inc
push
out
xor
shlb
lods
scas
aas
insl
int
sbb
mov
out
xor
xor
pop
cld
xor
fiaddl
leave
iret
cmp
jle
xchg
rolb
mov
push
lods
add
jecxz
mov
scas
adc
nop
jmp
sub
sbb
shr
push
xlat
push
sbb
push
push
push
outsb
dec
push
aas
adc
adc
rcl
adcb
hlt
inc
loopne
or
xor
or
movsb
inc
das
ss
jmp
in
inc
lret
fisttpl
inc
push
in
xchg
or
cmp
movsl
mov
mulb
add
stos
inc
imul
stos
push
or
enter
cld
mov
xor
in
adc
xor
push
mov
test
daa
pop
mov
lods
dec
cmp
sbb
jae
popl
loope
pusha
out
mov
cwtl
xor
mov
aam
into
clc
sbb
jg
dec
or
push
adc
hlt
add
lret
adc
fnstenv
mov
je
cwtl
cmp
sbb
add
sub
jge
xor
stc
adc
sub
int3
and
in
fistl
sbb
adc
sub
scas
sbb
les
test
ja
aad
movsl
adc
in
ljmp
mov
fists
mov
andl
ds
nop
or
dec
sbb
sbb
inc
loope
mov
sub
pop
xor
inc
pop
fnstcw
outsl
push
jnp
dec
dec
pop
push
cmp
dec
insl
fsubr
ljmp
mov
dec
push
jno
outsl
mov
lock
add
dec
imul
movsb
loop
cli
xchg
push
std
cwtl
mov
and
or
cs
dec
ljmp
fistl
pusha
scas
jo
adc
xchg
repnz
mov
or
cmp
repnz
jno
or
lret
jge
lods
xchg
push
jg
adc
loop
and
jnp
push
pop
adc
or
test
ds
jns
pop
lods
std
cmp
and
imul
inc
ffreep
fbld
addr16
push
push
js
xchg
inc
int3
or
dec
mov
and
mov
fdivrs
pop
xorb
dec
ja
test
nop
mov
push
and
popa
movsl
jle
jb
cwtl
fisttpl
out
push
icebp
jp
pop
out
pop
push
clc
inc
outsb
cmp
dec
push
bound
jae
imul
mov
cli
fucom
push
gs
fmuls
push
gs
dec
xchg
test
adc
cld
fs
push
int3
inc
push
repnz
pop
notl
adc
mov
add
mov
jno
psubusb
sub
cmp
test
dec
cmp
rcll
cmp
add
cld
movsb
push
add
test
inc
xchg
mov
aas
rorb
outsb
jne
pop
add
lods
stc
jle
xchg
fwait
les
ds
pop
add
fs
pop
mov
ds
add
add
pusha
cmp
fldenv
test
mov
add
test
inc
jae
mov
mov
cmpb
clc
adc
xchg
das
push
rorl
push
lock
gs
xchg
mov
loopne
and
in
pop
cli
pop
sbbb
cltd
jno
into
std
scas
cmp
adc
das
inc
rcrl
and
sbb
test
fs
cmpsb
lods
xchg
jne
jp
mov
enter
aas
pop
shrl
div
add
out
test
pop
call
pop
bswap
test
sbbl
imul
sbb
cmpsb
xchg
dec
mov
out
xor
xorl
mov
adc
fmuls
inc
pop
or
insl
in
and
bound
loop
and
sbb
rorb
rcl
loop
cld
cli
jns
inc
cmp
int3
sub
jg
or
xchg
test
mov
lea
add
add
je
jmp
and
scas
jne
loop
ret
push
iret
add
into
mov
nop
push
add
popf
sub
adc
fildll
inc
std
cmpl
jo
push
fs
int
aas
mov
xor
cmp
add
push
ss
pop
test
adc
mov
cmp
loopne
cmp
push
sbb
mov
inc
cmp
jnp
jmp
sub
jae
not
mov
mov
xchg
jns
jmp
ret
lret
jne
inc
inc
in
pushf
hlt
mulb
fsubrl
inc
adc
or
or
sub
inc
add
lods
xchg
cmp
iret
or
ja
scas
cs
sbb
ja
shrl
clc
push
and
lea
je
jp
das
push
enter
ss
mov
sti
mov
dec
pop
sbbb
call
mov
xor
sbb
push
lods
loopne
cmc
aam
xabort
shlb
arpl
mov
loope
test
sub
mov
daa
and
jno
out
es
aam
addb
mov
lahf
push
pop
and
jb
inc
aas
sub
movsb
xlat
mov
rorb
mov
jae
sbb
fstps
outsl
pushf
pop
cltd
pop
dec
inc
out
push
adc
imul
popa
inc
stc
xchg
mov
mov
ss
dec
int3
das
std
cltd
insl
xor
les
ljmp
jmp
ljmp
xor
fnsave
adc
mov
test
xchg
sbb
push
js
sub
fnstcw
sahf
clc
inc
cld
xchg
push
adcb
loopne
clc
add
cmp
pop
cmpsl
cli
sbb
pop
mull
mov
es
stos
cltd
jmp
jmp
add
popf
inc
enter
int
xor
cmp
cli
push
aad
adcb
sub
sbbl
sbb
popa
push
cmp
adc
xor
push
dec
iret
mov
sti
subl
aas
jle
inc
sub
dec
xor
sbb
mov
ficoml
jecxz
stos
sti
in
dec
inc
cmp
enter
ret
mov
arpl
cld
das
icebp
incl
cmp
loope
pop
xchg
add
jb
cmc
test
push
mov
inc
cmpsl
xlat
popf
bound
into
into
inc
cmp
ds
popf
ret
xchg
sub
test
ss
add
out
mov
mov
lret
sub
mov
testb
sar
out
cmp
sub
loop
call
sahf
shl
mov
sub
lea
lret
idivl
addr16
xlat
popa
pop
out
add
ja
or
fcomi
sub
rcrl
out
aad
mov
in
add
jnp
adc
div
adc
push
adc
adc
mov
cs
fstp
stos
inc
int
imul
inc
xchg
adc
scas
mov
sbb
xor
push
jnp
sub
mov
sub
dec
xor
call
cmp
push
mov
leave
daa
sbb
push
xchg
lods
adc
adc
test
lahf
inc
pop
cli
jno
sub
enter
loope
je
xchg
bsf
dec
sbb
adc
ret
jno
jbe
daa
lods
xchg
sbb
bound
repz
lock
xlat
jne
jne
mov
cld
push
icebp
jp
mov
push
ret
xorl
sub
std
and
ljmp
lods
fidivs
jae
push
rolb
dec
adc
testl
dec
inc
loopne
xchg
push
add
inc
sub
push
daa
lock
and
lds
sbb
jg
out
push
jo
stos
repz
lods
jp
pusha
stos
push
sbb
push
sbbb
xchg
ds
insb
jl
jle
xchg
test
outsl
add
xchg
insl
scas
mov
jnp
and
xchg
das
cli
add
jb
mov
imull
pop
cwtl
call
add
or
lahf
test
mov
mov
jle
sub
xor
inc
push
sahf
mov
in
inc
inc
imul
repz
mov
or
shrb
lock
ja
dec
xchg
pop
xchg
xchg
push
add
adc
arpl
in
and
add
sbb
test
insb
mov
jae
mov
lock
fmull
lea
mov
inc
arpl
adc
jb
loopne
push
out
insl
xor
xchg
pop
mov
push
ds
xchg
add
fmull
lahf
dec
push
cld
lret
mov
push
daa
cltd
repz
jge
iret
mov
mov
les
push
mov
int3
mov
js
in
std
mov
jno
inc
xchg
pop
ror
int3
lods
sbb
std
prefetch
test
das
cmp
movsb
cwtl
in
adc
fiadds
cmpsb
aam
popf
xor
out
dec
and
push
idivl
daa
or
popa
xchg
ljmp
cmp
ret
sahf
fisubl
das
addb
test
in
test
jnp
adc
popa
cmpsb
gs
inc
lcall
pop
pop
cmpsl
jno
das
jne
mov
jmp
out
sbb
pop
mov
loope
add
clc
fwait
aam
aad
sub
sarl
mov
mov
sub
hlt
inc
xchg
push
jmp
pop
repnz
shll
sti
push
lret
test
out
xchg
stos
lods
mov
shrb
xor
xchg
adc
loope
aam
stos
jp
pop
les
fdivrl
xchg
mov
movsb
push
xchg
mull
pop
or
pop
mov
fiadds
ja
jge
jl
dec
jbe
sub
pop
outsl
fdivs
mov
shl
xor
fwait
xor
cmpb
push
arpl
ds
pushf
lods
testl
jl
pop
lods
xor
sub
lret
insb
xchg
je
lds
dec
mov
int
mov
jae
inc
dec
hlt
test
int
imul
gs
lods
jle
mov
sbb
or
push
mov
ret
std
adc
sub
push
cmp
pop
or
cmp
jp
xor
inc
dec
pop
nop
iret
sbb
push
xchg
adc
sbb
mov
inc
xchg
int3
inc
ret
pop
xlat
fcoms
sub
into
insl
es
and
cmp
mov
sub
ss
inc
cmp
pop
imul
fcoms
out
inc
push
cwtl
pop
repnz
mov
insl
add
fsubr
clc
fidivrl
lea
sbb
pop
int
or
mov
push
loop
mov
and
mov
out
call
test
mov
mov
mov
mov
outsl
aas
shll
sti
insb
push
mov
jae
pushf
das
stc
jno
dec
cmp
or
cld
mov
gs
int
pop
sbb
pop
inc
xchg
cmp
lods
popa
jno
mov
jo
in
mov
dec
mov
inc
sbb
dec
xchg
dec
enter
and
aas
fndisi(8087
nop
fs
inc
ror
icebp
mov
mov
sub
inc
dec
mov
div
sbb
shrl
les
imul
imul
test
jnp
push
adc
mov
shlb
lods
test
dec
xchg
jne,pn
rolb
xor
je
fcoms
addl
xchg
adc
imul
mov
sbbl
adc
mov
and
clc
xchg
out
int
in
dec
jg
imul
scas
aaa
sbb
add
pop
sbb
xchg
pop
push
xchg
sbb
lods
push
mov
add
add
movsl
out
adc
fcomps
jno
cwtl
sbb
mov
xor
aad
or
notl
cmp
jl
push
mov
aad
add
xor
in
scas
dec
sbb
mov
push
repz
popa
sarl
dec
movsl
push
lahf
sub
shlb
loopne
sahf
repz
enter
pop
dec
shrl
mov
sbb
push
mov
jns
and
mov
insb
lods
mov
sarb
scas
enter
push
xchg
outsl
fisttps
lahf
outsb
mov
jb
jo
cmc
jmp
xor
aas
or
jl
movsb
push
fs
mov
xor
mov
enter
push
ljmp
add
push
xchg
clc
inc
mov
mov
ret
fbld
push
mov
adc
adc
ljmp
sahf
push
push
rorb
mov
fstpl
popa
nop
adc
push
jge
pop
dec
popa
das
mov
mov
ficoml
push
cmpsb
and
pop
push
cltd
dec
ret
jno
sahf
xchg
jmp
addb
jb
movsl
and
pop
inc
roll
push
icebp
jmp
push
sub
out
enter
movsl
out
push
roll
xlat
pop
jl
dec
sbb
mov
xor
mov
scas
addr16
jmp
mov
xorb
cmpsl
or
jno
ret
xchg
cltd
push
bound
sub
or
sub
cld
mov
mov
mov
dec
shrl
test
rclb
dec
pop
out
push
aaa
je
mov
xchg
fnstenv
push
scas
aas
xchg
aad
or
into
cmovo
push
lea
sar
clc
sub
fsubrl
xor
or
inc
notl
mov
cmp
jno
aaa
adc
inc
pop
repz
aam
mov
repnz
jns
orb
sbb
push
or
mov
out
pop
cs
dec
mov
mov
insb
dec
stc
or
shrb
out
adc
sub
mov
fs
pop
mov
jno
jg
mov
inc
mov
out
jo
or
dec
mov
cwtl
jb
pushf
mov
xor
and
insb
stos
daa
aas
pop
sub
out
mov
loop
scas
inc
jp
xchg
fisubs
pop
cmpsb
pushf
mov
mov
mov
subb
xchg
cli
in
in
xor
mov
gs
sbb
sub
xchg
ffree
inc
stos
popl
in
sub
stc
jmp
adc
lods
pop
inc
mov
daa
mov
mov
mov
push
pop
aaa
fwait
cwtl
xchg
ffree
adc
jns
sub
push
jmp
or
sarl
daa
mov
mov
mov
fdivs
addl
lcall
insl
rcrl
jae
shrb
mov
bnd
out
pop
shll
jl
stos
outsl
sub
test
jp
add
out
lret
mov
sub
movl
roll
and
popa
add
mov
pop
xor
je
repnz
and
roll
mov
jns
push
das
mov
repz
mov
insb
int3
fwait
jbe
scas
int
pushf
pop
fcoml
cmp
inc
push
loopne
aas
add
sub
add
xchg
fisubrl
sbb
jo
push
lods
cmc
fisubl
jb
stos
jp
sub
push
inc
dec
lahf
pop
dec
xor
outsl
mov
icebp
les
inc
pusha
push
jecxz
sub
and
ud2
jp
repnz
push
cmp
sarb
lods
iret
dec
les
cmp
movsb
or
inc
stc
popa
xlat
or
mov
or
rcl
sbb
add
ret
pusha
add
lods
dec
fdivrs
xchg
adc
mov
bound
stos
in
mov
sbb
or
push
int
mov
mov
scas
push
fildl
popf
nop
mov
mov
push
dec
push
sbb
adc
adc
adc
subl
sbb
popa
call
mov
loop
testb
adc
adc
scas
jl
pop
pusha
leave
test
jg
mov
aam
sub
jp
lcall
pop
loope
loopne
pminub
and
jns
in
in
cli
iret
scas
lds
out
sub
jno
lds
adc
rorb
jbe
in
mov
dec
dec
push
inc
push
insb
mov
call
cmp
or
jmp
push
fistl
dec
push
jecxz
je
or
pop
sub
adc
mov
fdivrs
out
cli
mov
cmpsl
push
xchg
fsubl
shll
mov
call
rcll
sub
dec
out
dec
sbbl
ja
stos
and
mov
sub
pop
lods
jae
xchg
push
and
in
push
or
sub
add
and
fidivs
outsl
sub
mov
xor
je
repnz
cwtl
adc
inc
mov
aam
jnp
mov
xchg
mov
push
xor
pop
mov
cmpsb
push
push
cmp
push
sti
movsl
shlb
fidivrl
rcrb
cmp
mov
sbb
iret
sbb
dec
fstpt
fwait
jne
or
mov
mov
jae
jle
push
mov
push
push
or
jle
jmp
int
pushf
pop
sbb
gs
fwait
push
les
ja
outsb
add
cmpsb
iret
cmpl
and
jbe
fwait
mov
mov
outsl
pop
jp
sbb
loop
rol
sar
packssdw
movsb
outsl
cmc
sbb
mov
cs
jno
xchg
cmp
push
lahf
divl
jmp
ja
xchg
cmp
fidivrs
test
xor
ja
insl
jnp
aam
sub
pop
pusha
sbb
aaa
enter
xchg
cmc
cli
icebp
sbb
int3
xor
lods
stos
fistpl
jae
clc
mov
leave
cli
das
or
mov
xor
outsb
shlb
jno,pn
cmpsb
mov
sub
dec
sub
hlt
lcall
lret
out
inc
jno
aam
fdiv
pop
into
or
inc
mov
shll
fwait
fwait
ret
loop,pn
cmp
jns
insl
mov
mov
sub
mov
inc
test
jb
sub
xchg
cld
xor
mov
xor
mov
mov
or
scas
mov
loop
es
push
jne
cmpsb
add
adc
imul
xor
inc
sub
dec
int3
mov
fwait
or
mov
in
lock
lcall
mov
xlat
sub
mov
je
adc
inc
pop
ret
gs
iret
dec
dec
int3
movsl
add
lret
adc
int3
mov
cmp
mov
pop
out
xchg
pusha
push
daa
jns
cwtl
aam
loope
ljmp
adc
stos
and
imul
out
xor
rorl
xor
sbb
clc
xor
movsb
jle
lcall
xor
repz
xor
push
mov
imul
xchg
jle
sbb
adc
es
out
loop
cmp
out
inc
repz
jmp
push
cmp
andl
mov
sbb
ja
adc
lock
ljmp
outsb
pop
xchg
call
sub
jo
pop
js
xor
inc
jle
pop
movsb
in
inc
lods
out
pop
aad
adc
mov
push
mov
or
xorl
cltd
jmp
adc
cli
or
push
popf
pop
mov
in
cltd
mov
mov
sbb
push
cmp
les
push
imul
imul
stc
scas
pextrw
cmp
jns
xchg
sahf
push
dec
xchg
lahf
pop
insb
fsubrl
cwtl
lahf
push
or
aaa
out
dec
call
inc
mov
cmp
and
adc
push
sub
jne
pop
fistpll
jo
setp
push
and
sub
jb
pusha
bound
xchg
inc
mov
andl
pop
pop
adc
cmpsl
repnz
fsubs
into
xchg
xor
inc
sbb
cltd
adc
dec
or
mov
mov
fcmovne
push
dec
lcall
daa
jge
xor
jno
xchg
into
jge
dec
rolb
out
dec
or
or
adc
cmp
stos
xchg
jmp
lods
lock
mov
mov
adc
xchg
pop
out
lock
dec
scas
in
je
rclb
cltd
mov
roll
in
add
xchg
push
pushf
dec
nop
and
sub
cmp
mov
dec
xor
cld
cmpsl
jle
cmpsb
data16
jae
cld
fwait
pop
sti
and
adc
xchg
in
dec
pop
inc
lock
or
lret
sub
loop
add
sti
ja
lret
nop
out
fdivl
scas
inc
jl
add
dec
mov
sahf
cwtl
or
cmp
inc
sub
mov
movsl
add
cmpsl
addr16
leave
sbb
jle
je
fwait
icebp
sbb
inc
pop
insl
inc
cmpsl
sub
ret
pop
cmp
or
dec
shll
add
jnp
ljmp
ljmp
fiadds
gs
stc
pusha
mov
fnstenv
popa
or
loopne
movsb
and
jg
jge
cmp
fmull
jne
aam
cmp
inc
loope
add
xor
cwtl
and
jno
push
adc
push
pop
cltd
mov
mov
adc
sbb
or
loopne
leave
adc
inc
insb
out
pop
fcoml
arpl
xchg
pop
mov
aam
outsl
lret
fnstcw
stc
hlt
aam
ss
loop
stc
lds
movsb
in
dec
jae
cmp
push
rol
imul
or
test
mov
fwait
movsb
mov
adc
jg
dec
aaa
jle
sbb
adc
pop
mov
sub
ficomps
imul
mov
adc
jnp
ljmp
ret
push
mov
int
xor
mov
xchg
push
cli
cmpsb
push
push
sahf
mov
hlt
fdivrl
xor
jmp
pop
lret
cmp
pop
add
or
lret
loope
lods
mov
dec
pop
shll
inc
or
sbb
xlat
push
jl
mov
lcall
adc
adc
mov
xor
pop
stos
icebp
xor
push
and
out
sbb
jecxz
clc
jae
jg
out
rol
fcmovb
xchg
add
jbe
cli
fs
add
xlat
inc
insl
xchg
push
cmp
or
cld
mov
and
mov
pop
call
and
push
inc
inc
lock
aaa
arpl
fnstenv
adc
call
addr16
xchg
cmc
shll
add
dec
loope
les
dec
xchg
mov
mov
cmp
cld
in
cs
fs
das
push
or
insl
xchg
sbb
nop
inc
inc
ret
jmp
jne
stos
dec
je
xor
add
adc
push
out
stos
mov
or
shlb
mov
inc
rol
icebp
mov
lahf
repz
sbbl
jae
xor
std
jne
leave
push
mov
push
fsubrs
pop
mov
sbb
jmp
aam
pop
dec
add
pop
sbb
mov
mov
repz
ljmp
mov
xlat
push
enter
shlb
dec
mov
cmpb
movsl
xchg
leave
pop
jl
arpl
jbe
dec
xor
jecxz
xor
sbb
mull
xchg
in
xlat
lods
xchg
iret
adc
inc
add
fnsave
xor
and
gs
mov
adc
adc
pop
cs
les
and
sbb
leave
out
leave
cwtl
adc
loopne
inc
in
push
sub
out
in
pop
cmp
or
sbb
addb
or
daa
jmp
or
lods
test
jp
jo,pt
sub
and
mov
push
push
bound
mov
mov
add
arpl
jl
pop
cmpsb
mov
sub
fsubrs
in
dec
repnz
add
roll
pushf
cwtl
fs
orl
mov
push
cltd
jne
loop
sub
std
ja
jo
push
pop
lret
arpl
dec
xchg
or
sahf
lock
adc
stos
adc
or
int3
xchg
mov
pop
adc
notb
jne
mov
test
lret
sub
dec
push
icebp
sti
cmp
push
jp
push
xor
lea
mov
rorl
push
mov
leave
cmpsl
sarl
cwtl
sub
sbb
nop
icebp
pop
cmp
mov
shlb
sub
and
mov
in
roll
xor
rorl
and
push
loop,pt
fsubr
out
ret
push
cmp
mov
pop
sahf
push
rcrb
lcall
and
sbb
jge
lahf
and
cmp
push
movl
call
dec
xchg
and
sbb
jecxz
mov
lock
add
mov
mov
jl
fmul
outsl
loopne
lret
movsb
jp
push
add
jnp
pop
lret
jae
scas
das
sub
adc
sub
pop
mov
cmp
inc
fwait
and
fs
mov
mov
push
jecxz
std
fstpl
adc
sbb
out
imul
mov
dec
loop,pt
xor
mov
test
sbb
jg
in
push
jae
cmc
fs
or
idivl
insl
mov
clc
idivb
sbb
push
mov
rorl
jp
sub
push
pushf
in
jge
outsb
jg
sbb
lods
nop
mov
xchg
addb
pop
ret
jmp
cld
outsb
push
mov
mov
inc
loope
and
jae
push
pushf
lock
rorl
inc
out
or
adc
sbb
int
pop
dec
pop
test
add
jle
mov
or
mov
jo
inc
jp
ja
cmp
loope
or
dec
adc
dec
in
and
fxch
and
mov
mov
mov
scas
add
sub
mov
scas
jle
outsb
es
gs
notl
pop
pop
xorl
jp
fstl
mov
sbb
xchg
sbb
jecxz
cltd
outsl
loope
jp
jp
mov
sub
repz
and
xor
les
mov
push
xchg
xor
insb
or
popa
lods
xchg
cld
insl
pop
shl
in
cmc
test
cli
flds
lock
cmp
or
je
cmp
xchg
fwait
sbb
jnp
leave
test
ja
xchg
sti
ja
xchg
sbb
int
push
and
hlt
push
xor
jmp
decb
xor
mov
pop
scas
jmp
js
dec
roll
jb
jp
pusha
bound
comiss
mov
jg
inc
mov
pushf
dec
pop
pop
adc
arpl
add
pop
repz
cmp
test
ja
jmp
cmp
push
and
gs
mov
movsb
out
fimull
dec
loopne
xor
cmp
inc
mov
jge
mov
fs
pop
mov
aam
js
aaa
call
jns
ret
lock
scas
aam
sbb
into
lret
inc
sbb
mov
xchg
xchg
ror
ss
aaa
push
inc
stos
into
push
jg
jns
jmp
add
jg
stos
xor
xchg
mov
xchg
pop
gs
adc
push
lock
xchg
jge
test
mov
or
movb
xor
jp
adc
mov
xor
jecxz
mov
dec
ffreep
cmpsb
out
sbb
jmp
cmp
outsl
xchg
cmp
lcall
js
test
repnz
iret
push
xchg
mov
cmp
xchg
dec
sub
dec
jno
loop
cs
mov
fisubrl
cmp
jg
in
push
inc
pop
xchg
test
xor
fst
adc
shl
sub
inc
lds
ret
dec
or
ret
xor
or
movsb
jg
pop
add
jmp
hlt
mov
lds
xor
lods
dec
add
scas
xchg
das
cmpsl
jns
andl
nop
inc
xor
push
cmpsb
test
mov
dec
rcr
or
ljmp
jbe
push
add
xor
sbb
pushf
and
add
cld
cmpsb
mov
fstl
scas
mov
idivb
movsl
mov
pop
loopne
xor
lods
clc
shrb
scas
jmp
add
lods
fiadds
xor
repz
int
inc
add
or
xchg
mov
incb
or
adc
mov
fwait
gs
push
add
sub
mov
mov
loope
mov
xor
lret
popa
fs
or
out
mov
sbb
jae
test
dec
movsl
fsubrl
shll
jle
imul
jl
ds
cli
test
lds
ds
mov
push
inc
ss
jb
and
mov
gs
xor
dec
jp
lods
cmp
cli
adc
cmp
push
aam
pop
je
inc
cmp
xlat
adc
add
pop
lret
lahf
lahf
sbbl
xor
sbbl
rclb
pop
or
sbb
xchg
stos
xor
xor
inc
jb
mov
jge
das
dec
lods
xchg
xchg
cltd
js
and
rclb
sarl
mov
pop
aas
lods
imul
dec
mov
daa
mov
fists
fidivrs
sti
dec
and
xor
push
shlb
mov
ret
dec
jne
sub
jb
cmp
insl
mov
pop
push
xbegin
insl
push
in
ds
hlt
testb
and
dec
dec
ret
js
fistl
cwtl
in
leave
shl
xchg
loop
pop
out
shll
in
jmp
xor
adc
into
sub
pop
inc
pop
out
loop
pop
mov
dec
sub
cld
sbb
mov
shll
mov
mov
mov
je
cmpb
lods
testb
iret
mov
loop
int
pop
scas
aaa
pusha
add
rcrb
mov
xlat
inc
repnz
or
fcomps
jle
in
mov
fs
sub
pop
push
push
mov
xchg
in
fiadds
repnz
dec
xor
mov
push
sub
out
adc
mov
lahf
jae
add
mov
stos
cltd
ds
das
mov
lods
testl
shr
int3
scas
mov
jno
out
sbb
sub
fisubrs
shr
add
js
dec
ret
stos
dec
ret
stc
loop
add
jge
mov
mov
popa
mov
sub
cs
fisubl
and
adc
pop
into
jg
add
jge
lods
or
pop
test
bound
notb
mov
mov
in
cmp
dec
rcrl
rorb
jnp
adc
gs
fs
mul
xor
xlat
or
adc
xor
mov
sub
arpl
scas
sbb
adc
nop
idivl
mov
push
fwait
lahf
dec
mov
dec
or
xchg
out
imul
test
jno
aaa
fstpt
xchg
sbb
pop
mov
mov
rcrb
jl
fwait
popa
std
repz
add
rorl
push
stos
mov
out
adc
popf
js
jne
in
aas
sub
js
cmp
dec
notl
inc
test
inc
push
mov
inc
leave
call
outsb
lods
out
mov
cwtl
push
mov
mov
arpl
inc
mov
aad
fldt
cltd
inc
xchg
mov
movups
imul
xchg
in
fiadds
shrb
leave
or
sub
call
xchg
inc
pusha
in
mov
jb
leave
insb
imulb
jbe
jnp
call
pop
jbe
inc
repnz
mov
adc
sub
cmpsl
aam
out
insb
out
jae
cmp
test
pop
sbb
test
repnz
push
movsb
pop
pop
lahf
adc
mov
jae,pn
popf
into
adc
lcall
jge
insb
addr16
dec
jb
loop
push
aas
repz
scas
aas
adc
pop
lds
cmpsl
mov
cmp
fsub
nop
adc
repnz
inc
pop
mov
xchg
xor
mov
pop
jo
mov
rclb
aad
jb
insl
dec
xchg
jge
or
push
test
pop
mov
test
mov
sub
fimull
mov
lcall
push
lods
aas
add
mov
in
cwtl
clc
imul
out
sub
out
mov
jp
scas
mov
nop
lods
dec
sbb
mov
stos
les
cmpsl
mov
gs
das
pop
enter
out
mov
xor
loop
and
mov
cld
jae
aaa
orb
sub
inc
cmp
call
sahf
jnp
cmp
push
imul
adc
cmp
imul
in
mov
xor
mov
in
mov
orb
jle
dec
ret
imul
fwait
mov
arpl
imul
mov
push
xchg
frstor
stos
jb
inc
xchg
xchg
shlb
bswap
test
mov
hlt
lcall
inc
cwtl
fst
mov
jnp
shrl
pop
ljmp
addr16
dec
cmp
sbb
sbb
icebp
fdivp
pop
jge
cltd
stos
jae
xchg
mov
inc
and
mov
out
dec
lds
cmc
or
arpl
dec
leave
or
dec
xchg
push
jb
aad
sahf
adc
popf
stc
cmp
mov
es
shrl
les
pop
int
sar
mov
fs
out
mov
ja
out
daa
out
leave
cmovns
xchg
in
das
dec
stc
bound
jecxz
jo
mov
imul
stos
pop
pushf
mov
es
nop
or
je
sbb
push
push
push
rolb
outsb
incl
mov
mov
cmpsb
xchg
jnp
fldt
fstpt
xchg
mov
xlat
push
rorb
fldt
sbbl
inc
mov
jecxz
loope
in
clc
mov
sbb
fmull
pop
dec
pop
cmp
add
inc
and
push
ret
stos
xor
faddp
sbbb
push
adc
jmp
push
inc
paddsw
pop
inc
sub
js
inc
gs
scas
jns
scas
push
mov
popf
addb
push
mov
sbb
int
scas
sbb
xchg
inc
cs
in
or
mov
or
jl
arpl
test
pusha
mov
es
cmp
popf
inc
mov
lock
add
incl
iret
ja
insb
inc
hlt
dec
faddl
and
cmp
sbb
mov
mov
rclb
in
xchg
int
cmp
push
clc
jbe
pop
pop
jo
cmp
push
cmpsl
xor
movsb
mov
scas
add
aas
mov
mov
jb
xchg
icebp
push
scas
std
or
jo
lahf
loope
mov
loope
mov
inc
dec
xor
shl
inc
stos
adcb
imul
pushf
mov
out
pusha
ret
je
es
xchg
in
xchg
out
jge
cs
into
jne
inc
popf
and
push
cmp
inc
sbb
sub
daa
mov
or
dec
jb
and
in
andl
jns
push
push
pushf
adcl
fdivr
enter
cli
lods
scas
outsb
sub
jo
cmc
adc
jmp
pop
gs
fwait
pop
sbb
or
fidivrs
popf
xor
sahf
mov
push
pushf
cmpsb
mov
arpl
sub
push
sub
or
xor
dec
inc
clc
repz
lock
sarl
inc
frstor
sbb
cmp
call
mov
int3
shlb
int3
clc
jmp
push
cmp
push
data16
add
addr16
lods
je
sub
pushf
mov
popa
xchg
jo
enter
fcmovnb
push
mov
pop
push
mov
xor
jmp
nop
into
pop
mov
mov
mov
sbb
mov
or
ficoms
jae
shrb
push
pop
sbb
decb
lods
in
xchg
aaa
and
sbb
xor
mov
push
jnp
xchg
inc
cmpsl
nop
lods
ret
and
ja
movsl
loopne
sbb
add
pop
and
add
push
shrl
xchg
push
adc
sbb
jno
rorl
sub
mov
std
repz
jbe
in
add
imul
xlat
scas
iret
sub
stos
push
jo
test
in
sbb
stc
xor
add
jnp
test
xchg
cmc
xchg
repnz
jmp
sahf
movsb
jg
in
sub
inc
pop
mov
mull
cmpsb
mov
addr16
lret
xor
xchg
inc
dec
pushf
jns
into
fwait
adc
jecxz
and
mov
lret
ret
xor
outsb
scas
rcrl
sbb
loop
mov
cmpsl
or
ja
fdivs
out
push
cltd
inc
mov
jmp
outsl
adc
push
jmp
add
outsb
into
inc
mov
repz
jne
lods
std
or
insl
xor
jnp
rorb
out
xchg
test
pop
bound
xchg
push
push
subb
in
xchg
xchg
mov
rclb
xchg
and
outsl
sbb
push
sbb
mov
mov
jno
shrb
fldenv
shlb
push
dec
test
xor
mov
add
jge
cs
in
je
js
jle
adc
mov
lds
xor
rolb
call
push
lods
sub
popa
inc
cmpsb
nop
sbb
jno
xchg
mov
inc
lds
cmp
pop
rorl
pop
inc
push
jmp
sub
movl
ss
andb
fsts
rorb
sub
sbb
fs
or
sti
adc
add
pop
repnz
movsb
mov
mov
xchg
movsb
test
or
mov
adc
outsl
in
pusha
push
iret
call
jnp
mov
and
inc
cmc
ljmp
push
cs
add
cmpsb
and
push
popa
push
push
repz
jmp
jmp
sbb
scas
xlat
ret
call
inc
imul
cwtl
sar
jb
test
sbb
in
sub
sub
or
mov
lret
jno
loop
enter
fcoms
jmp
pop
mov
cltd
gs
mov
fisttpll
cmp
jmp
sub
or
pop
pusha
dec
xchg
pop
enter
je
jmp
popf
ret
mov
cltd
cld
adc
das
dec
arpl
mov
int
and
das
xchg
jb
dec
pop
daa
aad
out
sti
pop
mov
pop
fldl
lods
sub
iret
or
cmp
enter
popa
mov
call
xchg
rclb
pop
icebp
fstps
and
mov
loopne
lret
sbb
cmp
stos
or
dec
scas
fmull
cmovno
mov
std
mov
lahf
dec
mov
xchg
rorl
fisubl
pop
pop
int3
fildl
xchg
je
jp
insl
dec
fstpt
pop
stos
pushl
cmp
imul
out
popa
mov
mov
cwtl
pop
xchg
ficoms
add
insl
lahf
add
mov
cmc
sbb
mov
cltd
add
nop
pusha
add
jbe
adc
mov
mov
sbb
cli
ljmp
shl
movsl
int3
lock
mov
imul
lret
subl
in
clc
stos
and
pushf
xchg
jbe
testl
sub
shl
jb
inc
lock
push
jno
shll
mov
sub
cltd
ret
mov
lods
cmp
xchg
lds
fistl
pop
outsl
pop
or
rorl
lods
jo
loope
xor
testb
cmp
lock
shrb
lds
pop
lret
outsb
and
xor
jp
sub
xchg
outsl
daa
ds
loop
es
testb
fxch
mov
std
pop
dec
pop
int
adc
push
insb
mov
scas
imul
or
mov
xor
sbb
outsb
clc
rolb
xor
sti
push
mov
push
shrb
jmp
add
push
cmc
fldt
cltd
and
xor
sub
arpl
jmp
mov
mov
fnstcw
xor
ja
js
dec
popa
cltd
xchg
movsl
dec
ror
inc
lahf
pusha
inc
jmp
mov
jmp
ss
call
int
cltd
clc
jmp
xor
mov
stc
es
cmpsb
adc
dec
les
cs
out
cs
jno
add
repnz
mov
cmpb
push
sbb
popa
and
sbb
repnz
repnz
jo
sub
aaa
into
inc
fiadds
jno
pop
mov
jl
cmc
mov
mov
xchg
orb
movsb
xor
test
jecxz
mov
rolb
cmp
inc
jne
mov
aad
push
data16
sti
mov
int
fcmovb
test
int3
aam
loope
cld
into
pop
push
loope
inc
out
cmpsl
and
pop
pop
pop
adc
out
pop
data16
adc
int
add
add
icebp
cwtl
imull
and
add
add
imul
xor
xor
cld
pop
out
jle
pop
iret
cmpsl
xchg
mov
or
jb
xchg
adcl
subb
sbb
add
jb
outsb
out
push
rclb
das
sub
pop
cli
pop
lret
lods
xchg
inc
fucomip
and
stc
jb
aam
mov
into
and
ss
cwtl
iret
out
add
jmp
addb
xchg
add
fldenv
sahf
aam
popa
mov
fildll
pop
sub
negl
notl
and
inc
add
pop
test
scas
cmp
dec
mov
les
push
int3
lcall
movl
mov
xor
jmp
loopne
loop
leave
xchg
jo
loopne
mov
clc
incl
jle
xchg
mov
mov
sub
or
addb
js
push
xor
pop
cmp
rolb
sub
test
adc
push
repnz
sbb
jmp
in
sub
out
std
jns
out
or
std
lahf
adc
mov
subl
jae
pop
push
or
mov
sahf
clc
pop
shrb
mov
in
jg
nopl
pop
mov
mov
aad
divl
int
push
das
pushf
sub
mov
pop
push
enter
rcrb
add
ja
jecxz
test
xor
sti
inc
bound
jb
nop
or
in
enter
aas
aad
push
aam
sbb
roll
int
out
rclb
pop
push
pop
lcall
cmp
iret
ret
lods
loope
mov
imul
lods
ljmp
test
cld
push
jmp
std
jae
cmc
sub
scas
sbb
xchg
xor
test
leave
icebp
mov
cld
movsb
mov
cmpsl
jp
mov
xor
out
cmp
stos
les
aas
mov
enter
testl
ljmp
out
filds
jo
js
lods
push
and
in
dec
into
fdiv
jl
cmpsl
scas
xor
outsl
rcrb
call
sbb
adcb
mov
add
push
jl
js
or
mov
jle
push
pop
and
insb
pop
sub
pop
dec
push
insb
popa
mov
and
xlat
jne
adc
xor
adc
mov
hlt
dec
jecxz
imul
pop
or
xchg
sub
rolb
fwait
scas
out
jecxz
cmpl
cmpsb
push
adc
enter
lea
cmc
fs
pop
leave
sysexit
jl
lods
aam
mov
cli
push
pop
cmpsb
hlt
dec
fbld
jns
xor
fcomi
repz
popf
lret
jns
inc
inc
testb
add
shrl
std
and
call
sub
add
dec
rolb
jle
sti
stos
inc
mov
fwait
sbbb
fldl
int
or
inc
xchg
push
pop
xchg
insb
cmc
mov
movsl
mov
clc
in
movsb
out
jbe
out
pop
push
mov
push
xchg
jle
outsl
cmpsl
pop
mov
into
popa
cmp
push
repz
scas
sub
loop
and
cli
cmp
cwtl
mov
rolb
adc
push
stos
xchg
mov
dec
je
xchg
popa
push
mov
mov
mov
test
pop
test
ret
dec
push
fnclex
add
add
pushf
gs
mov
mov
inc
fs
stc
xchg
daa
or
ljmp
fiadds
push
mov
scas
rolb
ljmp
mov
cld
pop
add
adc
movl
hlt
mov
roll
dec
push
jb
js
add
repz
xchg
orl
mov
repz
xchg
sub
jae
cmp
jbe
xchg
mov
stos
rcl
mov
sbb
mov
call
imul
ds
inc
cmp
shll
xor
mov
or
mov
mov
mov
pusha
rclb
aad
cvtps2pi
pushf
inc
jecxz
cwtl
fisubl
mov
dec
xchg
jbe
mov
adc
fcmove
cltd
mov
aaa
icebp
mov
cmp
gs
xchg
mov
add
push
pop
popa
enter
mov
dec
jns
adc
adc
pop
or
aaa
imul
add
push
jmp
loope
shrl
pop
mov
rorl
int
addr16
pop
jbe
jns
mulb
adc
testl
out
pop
fdivs
cld
lock
fxch
xchg
adc
mov
mov
dec
inc
inc
ror
mov
push
aad
in
xor
dec
dec
in
in
insl
mov
mov
mov
rcr
cltd
or
fistpll
add
out
stos
cmp
sbb
push
sub
mov
inc
sti
inc
adc
clc
adc
push
rcl
ret
sub
xchg
inc
cmpsl
std
pop
sbb
lock
mov
fwait
arpl
xchg
dec
push
jmp
jae
js
fwait
dec
outsl
cmp
jge
call
push
incb
cld
sti
xor
cmp
test
pop
je
pop
ja
cmp
fisubrl
xor
and
cmp
and
cmpsb
add
movsb
xchg
pop
inc
add
lods
mov
gs
pop
notl
shr
sub
fcmovu
ror
pop
xchg
and
je
popl
xor
jbe
cmp
cmp
inc
stos
insl
mov
push
jge
xor
outsb
call
jae
pop
mov
andb
cmpsb
aaa
push
test
setae
mulb
imul
ja
sbb
mov
jno
mov
xchg
push
fcmovnb
inc
jmp
ja
test
int
inc
cmp
ljmp
push
jno
sbb
mov
mov
inc
pusha
pop
loope
jecxz
xchg
shl
cmp
out
xchg
cmp
or
icebp
out
or
xchg
push
inc
add
jg
call
dec
sbb
mov
ljmp
add
lret
xchg
inc
shrb
or
add
jb
add
ds
in
out
add
mov
pop
jo
sbb
cs
cltd
scas
lock
lcall
push
dec
adc
xor
test
add
mov
inc
inc
repnz
ror
mov
fidivrl
inc
and
imul
lcall
lock
push
movsl
push
pop
inc
ja
mov
add
and
pop
mov
andl
mov
xchg
push
inc
cwtl
int
cwtl
push
out
add
jno
mov
in
pushf
scas
das
dec
fbld
movsb
adc
out
xor
or
lods
dec
lahf
xchg
push
pop
dec
incb
cs
negl
sub
sub
and
sbb
inc
imul
mov
push
test
test
mov
hlt
negl
loop
or
pop
lret
xchg
incl
push
and
lret
jo
rcrb
pop
push
imul
test
repnz
jp
std
out
movsl
outsl
or
je
dec
loop
sbb
ljmp
jl
fiadds
pop
lret
mov
stc
inc
mov
xchg
jo
inc
je
aam
call
add
insb
call
mov
sub
xchg
movsb
jbe
divl
mov
leave
sub
in
or
rcrb
leave
int3
xchg
orl
mov
inc
and
je
dec
ret
shlb
stos
sbb
stos
push
loop
xchg
mov
dec
or
aam
cs
std
je
enter
outsl
dec
add
sub
lea
mov
lods
dec
pop
jecxz
lods
loop
sbb
xor
test
cwtl
push
dec
adc
or
ljmp
xchg
inc
popa
add
jb
sub
xchg
sbb
push
popa
movsl
loop
lcall
test
push
cmp
ret
je
aam
sti
cmp
cmpsl
int3
dec
sarl
and
inc
sub
or
outsb
in
in
arpl
jae
shll
sti
popa
pop
jp
sbb
je
push
adc
mov
inc
dec
mov
outsb
add
dec
paddw
mov
ss
test
insl
adc
bound
dec
cmp
mov
js
enter
inc
dec
aad
faddp
test
stos
adc
ret
cmp
and
in
in
sbb
add
inc
cltd
and
dec
lock
pcmpgtd
pop
pushf
out
iret
out
outsb
xchg
mov
jle
adc
lcall
std
mov
popa
mov
shl
mov
pop
jae
push
ret
pop
xor
lcall
xor
out
xchg
inc
js
inc
scas
add
loopne
sub
in
add
pop
lds
pop
loopne
xor
or
inc
adc
nop
shr
push
xchg
cli
aas
xchg
lods
and
ja
pop
cmp
movb
inc
test
dec
std
ret
sbb
and
jge
fidivrl
rclb
mov
arpl
mov
mov
mov
ficoml
pop
mov
dec
aad
xor
pop
xlat
or
and
ror
mov
xchg
nop
leave
xor
mov
fwait
ss
lods
into
popf
dec
or
addr16
mov
test
lods
es
lods
lods
jns
dec
mov
pushf
jno
insb
mov
xchg
std
lahf
jmp
lods
test
iret
dec
pop
mov
movsb
mov
cmp
out
inc
dec
adc
mov
int
add
jle
arpl
popf
addr16
sbb
imul
mov
int3
mov
mov
adc
pop
call
movsb
and
mov
aas
pop
orl
sub
jmp
into
xchg
faddp
cmpl
sub
add
hlt
jmp
lock
jg
sub
lods
lds
jecxz
cmp
jge
lret
and
in
xchg
out
out
jae
dec
mov
cmp
leave
adc
outsl
lret
ds
das
cmpsb
ror
movsl
sub
and
ret
dec
dec
ss
repnz
push
jmp
adc
out
adcl
xchg
stos
jns
dec
and
int3
mov
in
jbe
or
inc
in
repnz
movsl
xchg
cmpsb
rclb
lahf
aaa
sarl
xchg
js
rorl
adc
mov
inc
es
xchg
sub
sahf
mov
pusha
dec
jns
jae
add
mov
les
lret
ljmp
add
insl
imul
aad
hlt
jl
sbb
inc
pushf
lods
xor
sahf
inc
jo
pop
ljmp
mov
fimuls
int
scas
fnstcw
fcompl
jle
js
xor
jne
push
sahf
dec
sbb
xchg
cltd
mov
dec
mov
leave
inc
xchg
mov
pop
in
inc
shrb
rcrl
fcmovnbe
sub
out
imul
popf
enter
xchg
outsl
int3
arpl
push
jecxz
test
shl
lcall
xor
mov
push
nop
std
cmp
xor
das
gs
bound
pavgb
pop
js
es
add
dec
aaa
int
mov
scas
fcompl
hlt
xchg
xchg
shrb
sbb
out
mov
imul
xor
jecxz
fstpl
xchg
push
lcall
xorb
cmp
jns
push
jb
int3
aas
inc
andb
inc
inc
roll
mov
jbe
pop
push
jnp
mov
test
lret
push
pushf
test
icebp
jg
xor
adc
cmp
fbstp
mov
out
pop
adcb
mov
pop
in
daa
pop
add
cmp
xchg
insb
jmp
push
sub
mov
js
adc
fiadds
stos
aam
in
jmp
sbb
mov
sbbl
pop
adc
sub
rcrb
stc
ja
pushf
in
dec
sbb
andl
mov
ss
jecxz
push
cs
shrb
stos
dec
repz
test
xor
jge
shr
es
scas
jae
cmp
push
mov
pushf
iret
bound
movsb
xchg
out
fs
outsl
test
xor
rolb
pshufw
rcrl
pop
or
pop
dec
fcomi
pop
ss
lock
cmc
xchg
jp
sub
outsl
inc
sbb
mov
pushf
xchg
ljmp
insl
inc
mov
shlb
jne
mov
rcl
or
test
test
adc
fimull
js
enter
out
or
out
out
cmp
lods
enter
pop
jbe
cmp
dec
jne
adc
xchg
jne
mov
adc
in
call
pop
push
es
out
test
sub
sub
popa
mov
sbb
iret
rorl
dec
jnp
pop
mull
jo
jne
arpl
int
cmp
and
inc
imul
add
arpl
rorb
pop
ja
loop
test
test
xchg
iret
mov
scas
fnstsw
add
pop
rolb
add
filds
mov
and
cltd
das
dec
and
cs
jmp
stos
std
dec
dec
cmp
cmp
or
lret
cwtl
mov
ret
jb
shlb
popa
inc
rorl
dec
enter
enter
mov
push
mov
lret
sbbl
mov
jp
xchg
std
xor
pop
fwait
xor
adc
lock
idivl
pop
ljmp
lcall
out
and
aam
dec
and
sbb
adc
addr16
jl
fnstenv
insb
mov
pop
out
xor
mov
dec
out
sbb
add
out
mov
cmp
cmpsb
add
mov
push
xlat
mov
adc
iret
mov
aas
adc
ds
sbb
fdivs
xor
iret
aad
gs
mov
fcomip
sub
loopne
pop
push
sbb
inc
lea
scas
jbe
or
loope
stos
bound
push
stos
or
cmpsb
sbb
mov
imulb
add
pop
aas
or
pop
shlb
mov
mov
inc
mov
push
lret
aaa
jns
lret
lret
insb
andl
outsl
xor
push
out
xor
pop
xchg
xchg
fwait
in
pop
lcall
pop
jmp
fcoms
pop
mov
xor
sbb
int
sub
cli
and
rcr
mov
cmpsl
jo
push
xchg
test
int3
cld
ret
and
mov
enter
insl
mov
add
out
adc
mov
test
mov
xchg
rcrb
push
test
mov
sarl
push
daa
incl
lret
and
mov
dec
dec
xchg
shl
call
es
mov
mov
sub
adc
pop
push
fdivs
ss
icebp
pop
das
adc
loope
push
lea
mov
ret
aas
dec
xchg
outsb
mov
jl
mov
adc
pusha
mov
orb
mov
addr16
dec
pop
pop
pop
insl
ds
dec
and
sub
int3
jp
sub
frstor
xchg
jb
inc
mov
repz
das
adc
inc
je
aaa
add
aas
add
pop
sub
jmp
flds
push
xorb
daa
mov
test
mov
push
pop
cmpsb
test
les
jb
adc
sub
repz
dec
mov
gs
in
add
add
push
in
shll
or
push
mov
mov
mov
enter
insl
sub
enter
enter
sbb
mov
mov
popa
ficomps
pop
aad
add
sub
jo
mov
lea
ret
sbb
gs
adc
cmp
shl
xor
xor
lahf
cmpsl
insl
fistpll
pop
cmp
push
and
mov
or
gs
or
movsb
add
mov
push
out
adc
xchg
ljmp
in
ret
cmp
jo
arpl
repnz
sbb
cmpsl
cmpsb
pop
push
pop
add
sub
sub
jg
xchg
cld
add
mov
and
lds
inc
loopne
jmp
daa
and
xchg
adc
inc
mov
loope
stos
mov
outsl
fnstenv
mov
data16
mov
cld
inc
mulb
jle
fsubrs
arpl
or
sbb
insl
mov
mov
dec
loopne
scas
push
xor
inc
cmpsl
divb
ds
andl
cmc
sarl
push
mov
fcom
inc
dec
or
cltd
mov
lods
cmp
xchg
lahf
cpuid
mov
int
lret
push
jbe
pop
mov
in
hlt
add
inc
xchg
push
and
mov
rcrb
mov
imul
pushf
xlat
out
loope
xlat
jnp
test
mov
mov
adc
nop
push
mov
push
and
or
mov
enter
push
xchg
loop
daa
iret
add
fildl
imul
out
adc
pop
or
lods
mov
adc
push
fdivl
pushf
dec
xchg
pop
pop
fisubl
leave
movsb
outsl
mov
fwait
mov
mov
push
repnz
and
mov
insb
movsb
mov
iret
push
xchg
and
fstp
or
popa
fisttps
jno
jae
push
mov
leave
leave
adc
aad
jle
clc
scas
push
and
push
js
in
jns
pop
int3
pop
dec
test
pop
xor
mov
xchg
sub
add
or
and
xchg
sbb
inc
jmp
ficoms
sub
out
in
push
add
jecxz
cmpb
pop
rcr
mov
aaa
jmp
and
enter
test
mov
cli
or
lds
fldt
clc
fmull
add
jns
aas
arpl
push
stos
repnz
adc
jp
hlt
mov
pop
adc
push
imull
test
test
or
jg
loop
mov
fnstsw
cwtl
jae
cld
mov
cmp
stos
notb
addr16
daa
xchg
push
xchg
push
dec
add
xchg
xchg
enter
push
enter
sbb
xor
js
orb
and
decl
add
push
jmp
idivb
fwait
and
hlt
repnz
mov
mov
cld
sti
or
dec
loop
adc
loopne
add
pop
int
xchg
fwait
cld
js
aam
xor
dec
repnz
fdivl
fwait
enter
outsl
mov
sbb
inc
nop
push
adc
push
icebp
lahf
in
fdivp
and
divb
and
cld
hlt
sahf
mov
mov
sbb
les
lret
adc
iret
push
and
rorb
int
jecxz
icebp
push
push
shlb
rcll
repz
sbbb
mov
pop
pushf
aad
cmp
shll
xchg
hlt
and
nop
int
fmul
jb
cmp
hlt
pop
int3
jl
pop
daa
pop
test
cli
xchg
fiaddl
dec
hlt
mov
setl
or
push
jns
adc
lcall
lods
cld
inc
inc
ds
int
fsubs
mov
pop
aad
ret
popl
pop
push
div
adc
test
cmpsl
icebp
loopne
cmp
and
shll
jo
push
rsqrtps
loopne
sbb
pop
xchg
sti
arpl
stos
stos
clc
inc
fs
inc
mov
out
out
lret
inc
xchg
xlat
outsb
icebp
loopne
insb
mov
mov
pop
push
jnp
pop
mov
inc
iret
adc
mov
lods
add
xchg
mov
adc
hlt
arpl
cmp
mov
mov
pop
jo
xlat
repz
andb
insl
mov
cmp
xor
inc
cmc
fsubl
adc
outsl
jl
or
add
cwtl
dec
pop
mov
sub
mov
lret
aaa
sbb
je
lcall
popf
mov
cmp
or
ja
std
ret
in
icebp
nop
int
mov
jl
js
mov
test
mov
outsl
cmp
xor
out
xchg
sbb
js
mov
movsb
sbb
scas
xor
popa
ds
insb
jbe
aam
out
icebp
mov
jg
jnp
cwtl
inc
mov
xor
push
inc
cli
pop
jg
cwtl
dec
adc
es
movsbl
jo
in
popf
scas
aad
lock
push
int3
xor
jno
int
adc
push
les
xchg
mov
mov
gs
in
mov
fwait
add
add
std
decb
jbe
add
loope
push
pop
or
ret
jle
sub
incb
push
imul
adc
push
jne
push
push
mov
ss
iret
dec
sub
inc
cmp
loopne
inc
and
fcomps
iret
int
clc
pmaxsw
push
or
sub
adc
in
mov
dec
sbb
sub
push
aam
mov
cmp
or
mov
movsb
and
shlb
stos
mov
dec
sbb
ret
fwait
jg
pop
and
xor
mov
mov
jecxz
aas
pusha
adc
dec
pop
fisubrl
pop
hlt
lds
xor
popf
pop
icebp
and
int3
xchg
mov
cld
mov
fcom
repz
pop
cmpsl
xchg
push
outsb
sbb
mov
mov
inc
aas
adc
lahf
loop
imul
pop
icebp
lods
cmpsl
push
mov
or
add
es
mov
mov
scas
les
or
sbb
jo
out
push
sub
lods
push
lds
mov
jmp
dec
sti
sub
loop
loop
cltd
out
repnz
jl,pn
lret
lock
push
scas
dec
jb
sub
mov
cmp
jmp
mov
into
inc
add
mov
pop
cmp
test
push
ret
test
sti
mov
ss
shll
hlt
push
out
jecxz
insl
in
adc
inc
dec
dec
stc
fstps
sub
xlat
add
aam
ja
test
mov
repz
mov
bound
sub
out
cmp
push
int
xchg
mov
mov
adc
adc
ja
push
subl
lea
dec
sbb
xor
jmp
iret
inc
push
push
movsb
pop
scas
insb
mov
ss
rcrb
fisttpll
notl
int3
xor
rcll
push
mov
pop
mov
push
dec
insb
adc
js
and
stos
data16
jb
repz
jg
push
xor
push
sbb
mov
jmp
data16
inc
xchg
push
ja
scas
rcrl
push
sbb
mov
push
push
in
push
cmp
mov
xchg
dec
sahf
dec
push
sub
into
mov
es
das
std
ficompl
mov
js
out
xchg
mov
push
mov
jecxz
and
imul
cmpsb
lods
add
inc
cmp
and
jge
cmp
inc
jmp
sub
sbb
sarb
cmc
mov
in
int
cmp
outsl
fs
int
in
cmp
lods
xchg
jecxz
sbb
popf
sub
and
push
sub
notb
inc
pushf
cmp
popf
outsb
negl
jg
and
xor
shll
pusha
xor
outsb
mov
loope
ret
ja
fisttpl
dec
xchg
lret
repz
adc
dec
dec
pop
or
test
fiadds
loope
xor
nop
jg
test
aaa
push
int3
dec
mov
stos
je
out
mov
jnp
inc
incb
nop
add
mov
jae
pusha
pop
pop
jb
divb
mov
data16
inc
in
fists
cmpsb
loopne
repnz
mov
cmp
mov
dec
div
jno
mov
xchg
pop
mov
adcl
ljmp
cmp
mov
add
and
nop
sbb
or
cli
test
lret
data16
jnp
stos
iret
rclb
pop
cmp
inc
jl
jo
sti
or
sbb
mov
loope
mov
push
or
or
vunpcklpd
sub
lahf
mov
cmp
dec
push
stos
mov
cmpsb
idiv
mov
add
push
test
xchg
sub
aaa
int3
lea
mov
mov
mov
xchg
cmp
sbb
jae
bound
aas
adcb
lods
hlt
push
xchg
sub
pop
sti
fisubrl
jno
aam
fucomi
sbbb
fisubs
and
std
fldt
out
or
addr16
addr16
mov
sbb
sti
mov
and
mov
xchg
scas
mov
ljmp
add
insl
mov
loopne
icebp
fisubrs
dec
loopne
and
lods
sbbl
lahf
cmp
sub
das
outsb
sbb
nop
jg
push
popf
mov
test
fdivs
jmp
mov
outsl
mov
icebp
aam
data16
adc
or
cs
xchg
mov
in
jle
jae
xor
test
jnp
addr16
repz
loopne
jge
loopne
fs
inc
mov
mov
lahf
insb
pop
jl
jne
mov
hlt
adc
cmp
xor
pop
mov
andb
adc
jbe
push
das
cltd
or
vminps
xchg
repnz
mov
jg
sub
xor
jo
popf
movsb
and
into
mov
fs
gs
or
cmp
dec
sub
bound
cmc
xor
stos
icebp
pop
mov
or
ret
test
loop
test
inc
mov
loop
cltd
xchg
cmp
and
mov
sbb
jb
inc
je
or
mov
jmp
shll
cmp
mov
lret
rol
add
mov
push
fistpll
pop
mov
outsb
sbb
push
outsl
loopne
inc
mov
icebp
ds
shrb
pop
xchg
in
rol
sub
lcall
dec
cmc
push
nop
and
xor
sbbl
adc
push
xchg
scas
xchg
xor
inc
xchg
ret
loope
push
jne
aas
ds
jns
push
aam
jl
and
popf
pop
cmp
or
popf
fdivs
mov
and
pop
enter
sbb
lods
sbb
cmpsb
push
mov
cmpsb
push
shll
and
rcrl
lds
enter
mov
fcmovnbe
aam
frstor
into
xor
in
or
fistl
xchg
xor
das
mov
or
ljmp
mov
mov
mov
out
sbb
pop
mov
inc
dec
mov
lods
rcrl
xchg
fs
ret
rcl
int
mov
push
enter
out
lea
stos
subb
mov
outsl
insb
pop
rcl
out
or
rorl
sub
jmp
scas
outsl
in
pop
sahf
addb
paddq
xor
out
jb
in
push
ja
les
rorl
cwtl
pop
sbb
fstl
mov
iret
jbe
lods
mov
cltd
xchg
lret
ljmp
loopne
clc
stos
adc
pop
or
lcall
mov
out
int3
jmp
stc
mov
adc
mov
or
sub
in
in
inc
pop
push
addb
jmp
pop
aaa
out
ficompl
sbb
or
je
clc
mov
jb
popf
or
jmp
mov
xchg
push
add
jg
push
fistps
mov
js
adc
cmp
movsb
pop
movsb
out
addr16
aam
int
sti
cmpsl
xor
add
xor
adc
or
lahf
push
xor
ds
das
and
lahf
lods
sub
and
aas
ljmp
sbb
add
shlb
xlat
or
push
cmc
scas
dec
mov
fidivrs
mov
lret
or
push
pop
xchg
shrl
pop
sub
push
xchg
std
ret
pop
pusha
pop
out
adc
mov
and
test
mov
pop
push
ds
insb
push
mov
mov
adc
jb
mov
xor
cs
outsl
inc
sub
addl
xchg
stc
stc
out
xor
pop
outsb
aam
push
or
fnstsw
sub
nop
out
mov
gs
mov
ffree
mulb
dec
sub
enter
sub
sub
arpl
add
fsubrs
outsb
mov
cmc
cmp
mov
mov
push
sub
xchg
mov
add
jae
dec
das
mov
pop
jns
stos
mov
lds
jne
add
sub
or
pop
add
inc
aad
addb
mov
shll
mov
mov
fucomi
icebp
push
in
testl
into
or
sti
aas
push
outsb
sti
jae
push
sahf
inc
push
mov
mov
jl
fisubs
cmpsb
xchg
int3
pop
mov
xor
push
push
mov
popf
inc
adc
mov
test
inc
popf
scas
push
mov
roll
dec
mull
adc
dec
movl
dec
fcmovbe
inc
push
mov
leave
and
pop
popf
cmpsl
repz
fwait
xchg
push
test
mov
mov
mov
fstps
push
pushf
or
imul
add
fnsave
addr16
leave
push
mov
in
leave
mov
cmc
popa
xchg
scas
push
mov
inc
add
push
outsl
out
push
pop
push
xor
loop
clc
push
adc
mov
adc
adc
pop
mov
fsubs
push
sbb
adc
and
lahf
dec
loop
mov
insb
pop
cmp
loope
mov
adc
rcll
dec
mov
or
adc
std
dec
lret
sub
aad
inc
ret
push
sub
or
jecxz
daa
sub
push
fsubrl
jmp
scas
or
push
push
das
frstor
mov
sub
js
lcall
mov
pushf
push
clc
rcr
add
aam
jno
addb
rcll
mov
push
lods
aaa
outsb
stc
push
clc
jb
inc
dec
mov
mov
lea
sbb
popa
test
jo
shr
insb
and
imul
repnz
loope
jmp
mov
add
aam
out
lods
sbb
inc
mov
lret
int
jns
jge
xchg
pop
xor
fsub
adc
mov
xor
lret
mov
xlat
mov
outsb
sub
addl
add
cmp
fsubl
shlb
out
cld
lods
ficoms
in
addl
dec
and
movsb
arpl
jmp
decl
cmp
adc
sbb
enter
shlb
adc
rolb
and
and
sbb
mov
fwait
mov
fldenv
stos
pop
clc
jnp
cltd
addr16
mov
mov
xchg
mov
add
sbb
cmp
in
push
sbb
fimull
xchg
aaa
cmc
fcmovnb
test
fiaddl
mov
push
add
sbb
cmp
ja
pop
and
aas
pop
adc
aam
int3
idivb
test
dec
xor
lret
addr16
sub
mov
cs
outsl
or
inc
loop
fidivl
pusha
iret
sub
xchg
sub
jge
stc
dec
stc
pop
mov
insl
dec
lea
popl
call
or
aas
cli
xchg
js
lods
out
stos
ffree
clc
mov
pop
push
mov
fstps
lods
push
imul
xchg
or
rolb
mov
aad
mov
lock
rcr
outsl
inc
nop
test
hlt
in
clc
pop
das
lds
hlt
mov
jno
mov
imul
lret
in
dec
xchg
test
xchg
fisttps
data16
lock
mov
shll
push
loope
dec
cli
ficomps
gs
push
jo
adc
mov
ret
jmp
lahf
dec
mov
data16
cmp
pop
mov
xchg
push
fwait
int3
xorb
mov
outsb
adc
and
and
repz
add
sbb
das
jmp
inc
mov
pop
mov
push
rol
sti
jg
adc
or
lds
fucomp
pop
mov
es
outsl
cli
sub
sbb
int3
stos
xlat
xchg
insb
or
pop
lahf
aas
out
call
inc
push
and
xchg
adc
xchg
pop
xor
shlb
in
pop
aad
dec
or
and
push
jo
leave
orl
je
sbb
or
push
push
dec
pop
inc
mov
ret
xchg
roll
adc
fistpl
jp
sbb
jl
fidivs
mov
or
cmpsb
jmp
in
popf
jnp
dec
test
mov
push
cmp
cmp
sub
rcrl
dec
dec
gs
xor
add
push
jae
adcl
shl
or
xchg
repz
popw
cmpsb
pop
std
push
lcall
or
adc
out
loop
xchg
xchg
push
outsl
movl
out
push
pop
add
xchg
jp
out
sub
mov
sub
fisubs
mov
das
movsb
cld
mov
sub
rorb
mov
popf
ja
xchg
or
pop
test
mov
fimull
and
shlb
rcrl
in
mov
sub
fptan
mov
sbb
sub
nop
inc
test
mov
fldenv
mov
adc
call
fisttpll
add
arpl
aam
sub
dec
loop
lods
aam
outsl
ret
push
int3
rorl
mov
push
inc
fsubl
enter
imul
push
jbe
jmp
dec
inc
mov
in
insl
pop
mulb
jp
popl
lcall
pop
cmp
scas
pop
out
in
incb
and
in
xchg
jle
enter
cmp
xchg
test
aam
jmp
push
enter
mov
mov
loopne
push
lret
mov
movsb
xlat
mov
push
aad
push
lock
pop
test
cmpsb
pop
mov
inc
lock
adc
cmp
cmp
cmp
fnsave
mov
in
or
imulb
inc
mov
sub
add
or
push
push
push
rcrl
or
repz
adc
cmp
cmp
sbb
outsb
sub
sarl
push
pop
jno
stc
mov
fwait
jnp
inc
loopne
out
xlat
fidivrs
push
repnz
daa
ror
lods
je
ss
push
test
fidivrs
or
push
lret
aad
pop
mov
sbb
sbb
cmp
lret
lret
sub
push
out
aad
dec
sti
aas
dec
or
jne
cltd
add
lock
or
hlt
cmp
outsl
mov
popf
mov
outsl
out
mov
pop
inc
xchg
jecxz
pop
mov
scas
inc
and
mov
daa
sbb
hlt
mov
jle
sti
mov
xchg
insb
ljmp
dec
inc
mov
adc
daa
mov
andb
scas
aas
loop
mov
dec
sbb
cmp
das
test
loop
or
sub
dec
scas
out
xchg
inc
fldt
loopne
enter
sub
in
mov
xchg
and
push
and
in
shlb
lahf
imul
mov
mov
imul
mov
pop
sub
ret
clc
sbb
push
push
pop
mov
mov
adc
data16
dec
shrb
nop
sbb
jne
rolb
jmp
popf
arpl
shr
cmpsb
jecxz
test
rclb
xorl
pop
into
mov
mov
test
mov
scas
loop
pop
mov
xor
mov
int
push
mov
mov
xchg
dec
fsub
xor
popa
pop
cmp
or
or
mov
dec
dec
cmp
fdivs
fwait
dec
in
lods
stos
lea
cmc
and
negb
nop
dec
dec
and
scas
sub
jb
fdivrl
xor
jns
mov
leave
push
js
cmp
xchg
push
xchg
pop
sub
test
int
movsl
or
xchg
bound
imul
cld
pop
push
mov
mov
xchg
addb
iret
insb
fwait
mov
mov
dec
stos
xor
sahf
iret
inc
out
mov
cmp
les
xlat
xchg
sub
movsl
mov
movb
icebp
fwait
pusha
mov
arpl
stos
mov
and
fiaddl
sbb
mov
or
cmp
lea
inc
out
insb
xor
pmaxub
cmc
shrl
xor
sbb
in
inc
mov
movsl
lea
and
inc
xchg
push
jbe
dec
jb
mov
mov
sbb
aaa
filds
adc
mov
fmull
and
out
loop
adc
cmp
adc
outsl
cli
in
push
int
sub
scas
xchg
rcrb
jo
push
xorb
mov
iret
jns
nop
mov
inc
mov
jns
mov
sub
xor
mov
lea
pop
pusha
push
arpl
dec
shl
sarb
das
push
inc
fsubl
aam
pop
xor
das
sbb
dec
sub
loop
repnz
enter
add
lret
push
push
add
pop
pop
gs
imul
movsb
inc
mov
push
enter
pop
movsl
mov
nop
jecxz
lods
add
ljmp
outsb
testb
sub
mov
mov
cmp
mov
repnz
in
and
and
push
adc
cmc
mov
adc
clc
cmp
mulb
pop
call
fsts
sbb
pushf
pop
jmp
cmovb
push
jmp
jp
int
divb
adcl
iret
je,pn
ss
cmp
popf
xchg
xlat
scas
add
sahf
in
fdivrl
jne
cmp
mov
movsb
dec
push
hlt
and
clc
sub
in
add
call
or
scas
mov
xor
loopne
sahf
cwtl
lock
mov
mov
filds
leave
enter
imul
jae
xor
adc
pop
xlat
shrb
push
push
dec
xchg
cmc
add
stos
xor
xlat
mov
mov
mov
add
jg
sti
dec
inc
dec
add
jl
mov
xor
out
or
jo
and
popa
mov
aaa
mov
inc
pop
mov
sbbl
mov
into
or
bnd
repz
cld
adc
jp
lahf
fs
sahf
rcrl
adc
dec
xor
cmp
in
lret
clc
jge
lods
cltd
cld
cltd
imulb
pop
sub
movsl
daa
outsb
mov
pop
test
shll
jle
jb
jbe
push
sub
mov
ljmp
fcompl
sbb
dec
adcb
xchg
insb
mov
js
xchg
mov
lret
dec
inc
scas
je
orb
inc
ja
mov
lea
jae
sbb
add
mov
pop
aad
cmp
cwtl
faddl
movsl
lods
ds
in
or
je,pt
jmp
xor
sahf
jnp
stc
lret
pop
lret
and
add
mov
mov
add
testl
pop
dec
ds
adc
lods
out
pop
push
sub
out
repz
je
shll
adc
and
aas
imul
push
xchg
orb
push
fucomp
aas
pop
testb
xorb
sub
pop
push
pop
lods
mov
or
rcrb
dec
repnz
add
call
sbb
ret
push
outsl
mov
fstl
fisttpl
adc
mov
jne
imul
sbb
add
lret
lods
xchg
aam
ds
push
mov
ret
mov
jnp
clc
out
cmpsl
push
push
sub
stc
or
fcompl
mov
mov
push
sub
fwait
out
jno
cmp
pop
ss
decl
pop
cltd
mov
and
sbb
push
mov
xor
or
fimuls
ret
stos
jb
repnz
cmp
xchg
mov
inc
fcom
cmp
sbb
aad
mov
push
pushf
pop
jne
ret
lds
and
sarl
mov
dec
ja
xchg
sub
rcl
mov
dec
addr16
add
imul
lds
jns
bound
xchg
pop
adc
shll
fidivs
lcall
lahf
mov
push
lcall
cwtl
sbb
or
cltd
or
xchg
scas
cmpsl
cwtl
xchg
ficomps
inc
shrl
es
add
icebp
rorb
push
xchg
jnp
xchg
xchg
lcall
jne
push
clc
adc
xor
imul
mov
clc
popf
jmp
and
nop
rolb
dec
add
shr
lcall
ret
loop
cmp
test
mov
inc
inc
test
add
lock
ret
xchg
xor
push
xor
sub
mov
cmpsl
lahf
not
mov
loope
std
jno
ja
push
jbe
or
aas
pusha
aas
adc
inc
add
push
sub
jp
adc
rorb
sbb
outsb
andl
mov
push
jg
sarl
sub
sub
or
mov
dec
sbb
jns
push
movsl
adc
add
out
inc
ret
add
xchg
mov
fistps
sbb
adc
inc
fstpl
mov
aas
fwait
movsb
inc
mov
jno
jno
push
push
mov
enter
outsl
jbe
cli
jl
gs
ss
sub
pusha
dec
int
and
jle
xchg
fcoms
cmp
sti
bound
leave
fwait
es
pop
cld
dec
mov
or
xchg
sub
bound
repnz
and
add
mov
adc
pop
dec
mov
loope
dec
cmpsb
pop
push
inc
inc
rcll
lods
mov
js
inc
ret
and
pop
mov
jge
hlt
sbb
mov
mov
adc
hlt
mov
jmp
jle
sbb
cmova
push
fcompl
repz
sarb
add
push
insl
cld
xlat
je
icebp
ss
adc
dec
leave
fdivrl
jp
inc
sub
adc
or
xor
xchg
add
mov
sahf
push
aas
inc
mov
mov
or
test
out
into
mul
sub
add
pushf
jle
out
pop
xchg
ret
bound
in
pop
xchg
mov
sbb
add
lret
loopne
xchg
les
insb
and
rorl
daa
xor
and
mov
mov
push
rcrl
xor
push
push
sbb
enter
xchg
ret
test
add
mov
mov
sarb
push
rcrl
ss
mov
lahf
cmp
insb
inc
cltd
in
cmpsl
stos
ret
push
cwtl
lea
mov
in
add
cmp
cli
jbe
lret
fldz
sbb
mov
out
ret
pop
dec
dec
jnp
mov
jbe
dec
push
fisubs
addb
or
cmp
mov
or
push
push
cmpl
aas
and
sti
mov
js
pop
mov
xorb
push
bound
lods
test
cltd
cld
pop
adcb
and
pop
daa
es
pusha
cmp
popf
stc
cltd
inc
mov
jne
lret
out
sbb
sub
addl
or
xor
cltd
movsb
ss
mov
aaa
call
in
jmp
rcr
mov
mov
iret
cs
fildl
mov
ja
pushf
push
adc
lret
inc
push
mov
cmpsb
arpl
dec
in
out
jl
sub
mov
sar
insl
add
sub
ficoms
adc
push
lea
jp
call
dec
js
dec
sahf
mov
xchg
ljmp
mov
mov
xor
imul
scas
mov
leave
mulb
xor
je
jo
repz
std
mov
inc
push
loop
gs
fisubs
or
testb
inc
mov
orl
xchg
mulb
push
xchg
xorl
jno
repz
push
mov
cld
loopne
adc
add
sub
or
xor
clc
imul
push
or
jp
xchg
sarl
mov
cld
or
rcr
mov
dec
xchg
iret
lahf
icebp
lahf
fcompl
mov
cmp
or
inc
inc
mov
cli
cmp
jnp
into
and
sarl
push
andps
test
pushl
imul
sbb
inc
ja
test
or
popf
jl
ret
jp
sahf
push
push
icebp
les
bound
sub
out
mov
ret
sbb
out
aad
jbe
mov
imul
adc
shlb
in
push
and
shl
and
push
cld
ficompl
or
iret
pop
mov
and
mov
jecxz
std
dec
push
daa
out
pop
pusha
push
sub
in
rcll
cmp
mov
add
xor
jno
mov
add
cmp
inc
rcl
notl
dec
imul
add
lds
bound
stos
inc
dec
in
orb
shlb
xchg
loopnew
mov
xor
jle
mov
xchg
inc
ret
rorl
in
jnp
sbb
icebp
adc
in
mov
movsl
stos
out
das
cltd
test
into
aad
mov
daa
push
lahf
cltd
cwtl
xchg
mov
frstor
mov
ds
adc
mov
mov
jg
adc
mov
mov
leave
jbe
pushf
jecxz
sbb
cmp
xchg
or
fsubrl
scas
mov
inc
mov
test
or
lock
inc
cwtl
xchg
jmp
sub
test
test
add
adc
mov
inc
jns
mov
sbb
cmp
shlb
sbb
gs
dec
data16
fisubrl
xor
dec
or
add
movsl
cmpxchg
sub
shlb
mov
inc
push
mov
test
jnp
sbb
fdivrs
mov
pop
and
lcall
jns
leave
or
ss
js
sbb
or
fldl
ret
in
mov
mov
popa
shl
inc
clc
in
xor
or
out
mov
pop
pushl
xor
pop
jecxz
mov
shlb
mov
lods
sahf
adc
add
sbb
mov
mov
pop
push
adc
adc
aaa
jo
push
mov
rcrb
mov
dec
out
andb
movsl
cmp
test
mov
xchg
es
add
inc
inc
cld
sbb
int
and
sub
pop
fldl
ret
pop
xchg
mov
sub
xlat
pop
inc
add
pop
xor
cmc
dec
dec
xchg
pushf
xor
jnp
ja
mov
insl
cs
inc
add
mov
stc
stos
mov
push
int3
outsl
push
cmp
mov
xor
test
cmp
movsb
sbb
jp
cli
lret
sub
popf
jno
paddw
movsb
dec
stos
lds
cs
mov
push
inc
scas
pop
pop
in
add
xor
push
cli
fdivrl
pop
jge
andl
add
mov
mov
scas
mov
rolb
jmp
mov
addb
pop
nop
jle
or
mov
add
mov
sti
pop
icebp
out
lea
dec
jno
push
hlt
jecxz
mov
mov
scas
push
xor
les
mov
fwait
jp
fsubr
pushf
icebp
mov
rorb
sbb
push
je
mov
pop
and
inc
movsb
sbb
inc
out
jmp
adc
call
ja
or
dec
xchg
sbb
push
aam
xchg
imul
jge
clc
adc
fwait
movsb
jg
mov
pop
std
in
adc
scas
push
push
push
cmp
std
loopne
out
loop
jle
mov
jecxz
dec
xor
cmp
push
mov
roll
scas
enter
pop
in
ja
mov
stc
sbb
mov
ficoml
aad
dec
popf
mov
orl
cmp
push
fwait
les
mov
xlat
icebp
outsl
cld
setnp
pop
mov
cmp
or
movsb
in
jnp
push
mov
shrl
aad
cmc
xchg
dec
inc
and
mov
jns
enter
popf
lret
mov
in
rol
push
sbb
dec
mov
mov
out
and
jp
stos
cwtl
into
pop
xchg
inc
scas
stos
mov
loopne
xchg
adc
and
xchg
aad
dec
or
test
sub
loope
hlt
orl
shll
iret
sub
sbb
xor
mov
cmp
pop
pop
or
cmp
imul
bound
cmp
dec
push
jno
mov
mov
adc
out
jb
and
adc
push
mov
pop
or
jno
test
pop
push
cmp
add
std
sub
push
pop
sti
push
ret
lock
sub
std
in
addb
icebp
jmp
sbb
cwtl
fdivs
push
mov
mov
mov
pop
mov
pop
gs
arpl
mov
sahf
xchg
rorb
ss
pop
dec
sbb
cmp
push
adc
ror
xchg
aaa
mov
aas
rcll
test
and
icebp
jbe
add
dec
popf
push
sbb
or
stos
lock
in
lods
loope
leave
pushf
mov
stc
cmp
enter
jmp
ja
dec
mov
rcll
push
and
mov
decb
ret
cwtl
insl
pushf
ljmp
call
push
cmp
out
or
xor
icebp
in
fs
daa
leave
cmpsl
or
into
mov
and
mov
iret
pop
cmp
push
dec
mov
push
cwtl
packssdw
inc
icebp
es
mov
sbb
in
icebp
adc
and
es
rcrl
mov
enter
jl
or
adc
lds
sbb
and
mov
rclb
ss
ret
sbbb
sub
mov
cmpsb
cmp
mov
dec
push
xor
push
fwait
sub
std
jecxz
jno
pop
pop
xor
aas
sub
xchg
push
rol
inc
movsb
gs
jbe
mov
rclb
sub
int
adcb
subl
ret
stc
mov
xor
movsl
jo
jecxz
dec
push
orb
or
cmp
imul
fildl
sbb
adcb
movsb
cmpsb
push
repz
dec
icebp
dec
arpl
mov
mov
mov
in
hlt
push
sbb
cmp
int
adc
je
hlt
pop
pop
mov
int
or
inc
jb
lret
jg
test
mov
xor
lret
push
stos
jnp
mov
repnz
cmp
dec
cmpsl
xchg
jmp
stos
mov
push
imul
cmc
shll
mov
fucom
xchg
jne
mov
sbb
je
std
pop
aaa
or
jg
mov
mov
enter
push
sbb
push
insb
inc
inc
xchg
and
pmaxub
int3
adc
in
incl
mov
dec
sbb
outsb
aaa
sbb
loop
pop
or
mov
lcall
xchg
cmp
nop
les
aas
jbe
inc
mov
sub
sub
xchg
es
xchg
and
push
or
sbbw
pusha
shlb
mov
fnstsw
imul
adc
and
out
mov
xor
lcall
or
outsb
psadbw
jp
pop
sbb
cli
testb
mov
push
push
cmp
lret
dec
push
xor
cmpsl
inc
js
sub
sti
or
lahf
test
leave
fcomi
or
test
push
repnz
push
jl
mov
test
frstor
and
out
push
pop
in
das
movsl
inc
push
dec
insb
sbb
addb
sbb
cmp
or
add
cld
fcomps
dec
notl
dec
sub
sub
xchg
cmp
rcrl
add
cmp
loopne
mov
rclb
sbb
jle
scas
jp
insl
adc
sub
nop
dec
insb
and
dec
pushf
je
xchg
pushf
jp
sbb
jno
add
xchg
or
fs
mov
pop
popa
sbbl
aam
mov
jmp
imul
adc
cmp
and
repnz
mov
cli
add
andb
push
andb
xor
pusha
and
xor
test
mov
or
jmp
je
out
outsw
insb
arpl
aas
xchg
pop
cmp
pop
inc
mov
add
fdivl
pusha
lods
cmp
jbe
add
mov
ret
inc
pop
or
pop
pusha
fdivs
sbb
jp
xchg
jnp
loopne
loop
xor
adc
mov
add
testl
pop
or
pop
sub
icebp
loope
mov
repnz
mov
mov
and
call
pop
mov
lcall
jg
xchg
rcll
cmp
xchg
test
sbb
sbb
in
subb
push
xor
jmp
sbb
gs
repnz
insl
inc
stc
sbb
loopne
inc
xor
xchg
sbb
push
scas
inc
sbb
sub
xor
inc
inc
leave
dec
mov
xor
cmc
into
mov
and
cmp
orl
out
imul
popf
sbb
sbb
mov
dec
mov
les
mov
outsb
xchg
mov
xchg
stc
fwait
pop
shll
sub
lds
test
shl
jnp
sbb
fisubs
icebp
mov
cwtl
jns,pt
and
imul
mov
aas
add
sbb
or
and
jmp
sar
and
fs
int
movsb
cld
mov
stos
arpl
loope
test
mov
dec
lret
iret
cmc
or
out
fstl
or
pop
stos
mov
and
sub
leave
mov
add
les
test
gs
mov
inc
and
loopne
push
ret
mov
imulb
popl
pop
shlb
cwtl
jl
in
mul
in
lahf
sub
push
xchg
jecxz
fs
jbe
lret
jns
mov
sbb
or
aam
push
and
stc
sbb
mov
pushf
dec
cwtl
dec
into
mov
jb
insb
mov
mov
mov
dec
fiadds
xchg
push
rcr
adc
icebp
in
inc
cmp
nop
push
fwait
jb
jo
mov
push
dec
xor
cmp
aas
insb
xchg
push
jg
cli
lret
push
xor
xchg
popf
sub
xlat
inc
in
lods
out
or
sub
fisubl
ret
ret
jecxz
jmp
rcrl
gs
mull
inc
jae
adc
xor
mov
inc
movd
arpl
aad
loope
sti
pop
outsb
gs
out
and
fistpl
fnsetpm(287
push
mov
cmp
int
test
dec
das
imulb
sbb
fsub
ss
push
push
fwait
insb
jl
fsubrp
push
mov
pop
mov
xor
jb
mov
loopne
icebp
cmpb
adc
inc
lods
jl
jo
mov
pop
aaa
mov
inc
das
sbb
or
jg
fwait
cmp
xor
out
jle
bound
pop
pop
jmp
sahf
mov
dec
outsl
inc
stc
test
out
and
or
mov
lret
mov
call
push
ret
ret
repz
vmwrite
stos
jnp
push
cmp
hlt
xchg
add
xchg
stos
adc
roll
pushf
pop
divl
out
inc
lock
jmp
push
test
testb
dec
sti
outsb
inc
nop
adc
popa
aad
sti
fdivr
daa
xor
push
popf
scas
les
mov
sub
sub
fs
or
sub
js
cmpsb
mov
xchg
loop
inc
popf
cmp
xlat
addl
in
adc
jl
arpl
cmp
cmp
daa
sbb
dec
mov
dec
iret
repz
xchg
cmp
add
push
cmp
testb
repnz
rcll
or
scas
cmpl
dec
test
add
and
push
dec
fwait
out
fisubl
push
int
jg
shrl
cwtl
je
xor
jmp
jl
mov
cmp
mov
dec
gs
xor
mov
inc
jnp
push
mov
ss
adc
aas
loopne
shr
jle
pop
mov
sbb
fwait
jne
ret
dec
loope,pt
movsl
pop
pop
inc
cwtl
scas
cmp
call
adc
pop
mov
pop
mov
pop
cmp
add
das
or
dec
test
iret
push
lret
scas
mov
test
adc
loop
xchg
leave
in
mov
out
ret
mov
imul
push
sub
pusha
jne
jnp
cli
mov
cmpl
sub
ljmp
int3
jae
test
mov
int
in
pop
push
jmp
add
aaa
push
or
push
cld
jmp
xor
test
mov
fistpll
jae
mov
sbb
mov
imul
cltd
repnz
pop
movsl
shll
in
in
filds
adc
js
push
adc
scas
push
icebp
dec
loopne
mov
mov
in
sbb
xchg
xlat
dec
decl
pop
shr
jge
das
out
cli
inc
xor
jmp
mov
xor
and
add
into
mov
push
fmulp
cltd
movsb
add
ja
movsb
push
pop
stos
mov
ss
cmc
lcall
js
mov
gs
es
or
or
jae
pop
nop
jns
or
data16
pop
jle
testl
cli
mov
test
or
sub
std
lock
out
sbb
shrb
push
call
andb
dec
int
xor
mov
dec
jge
loop
or
repz
sub
xchg
sub
in
mov
out
add
push
pop
or
push
xchg
insb
cmp
in
inc
arpl
push
and
cmpsl
mov
pusha
fisttps
test
xor
mov
aas
cmpsl
testl
inc
or
xchg
mov
jge
cli
frstor
in
test
push
xor
fbstp
sub
or
fadd
ss
cmp
scas
mov
pushfw
push
sub
jb
enter
orl
jle
mov
xlat
sti
jge
insl
popf
cli
xchg
loop
shll
stc
gs
jle
sahf
jbe
scas
add
xchg
dec
cmp
sarb
test
inc
mov
xchg
jp
imul
push
jp
dec
or
adc
movsb
ret
mov
sbb
push
lea
pusha
iret
fldl
mov
xchg
jge
shrb
int
pop
push
sarl
insl
imul
xor
rolb
fsts
cld
add
enter
out
add
ds
call
sbb
xchg
insl
sahf
inc
mov
inc
insb
movsb
shll
notb
xchg
lods
sub
inc
clc
dec
push
push
jg
lcall
lods
and
and
jns
mov
roll
sbb
xlat
je
xchg
shlb
cmc
ror
sbb
or
js
sahf
fs
or
outsl
lret
mov
lret
fsts
dec
mov
int
adc
adc
cmp
sub
ret
push
stos
or
xchg
data16
pusha
rolb
mov
fstpt
mov
lods
push
adcl
jbe
inc
cmpsl
mov
cmc
sar
scas
mov
jbe
ret
sbb
movsl
and
out
enter
mov
fiaddl
test
mov
sbb
and
in
mov
lahf
cli
jns
pop
fucomi
xor
lods
loopne
idivb
xorl
mov
jno
jg
or
icebp
dec
inc
adc
or
or
inc
inc
xchg
and
push
pusha
nop
lcall
fsts
xchg
push
jge
xchg
mov
cld
sbb
call
add
mull
fs
cmp
test
cmp
jl
cmp
bound
jb
and
mov
pop
test
ret
push
xchg
in
jecxz
and
cmc
outsl
inc
jmp
aas
and
xchg
int
cmc
lcall
iret
sub
movsb
std
or
mov
dec
pop
hlt
int
outsl
inc
pusha
insb
or
cmpsl
xchg
xor
sbb
mov
xchg
pushf
js
movsl
test
adc
inc
xor
push
sbb
in
sub
aad
adc
repnz
test
and
dec
imul
or
dec
inc
mov
xchg
fwait
jne
testb
push
and
xchg
jmp
xor
sbb
and
repz
mov
mov
dec
mov
adc
jl
jae
mov
ljmp
aas
push
aam
mov
lds
scas
jp
lock
icebp
scas
jno
cmc
pop
pop
sahf
popf
popa
inc
mov
or
mov
xorb
dec
out
fldt
cmpsl
xlat
mov
mov
xor
mov
dec
adc
mov
sub
inc
xor
out
scas
cli
pop
stos
mov
lds
scas
push
mov
and
filds
and
stc
jns
aad
loopne
dec
leave
cmpsb
xchg
fisubl
mov
aad
fcoms
push
add
arpl
jg
negb
mov
cld
dec
jmp
enter
sbb
repz
mov
or
jbe
popf
in
mov
mov
test
mov
icebp
sub
inc
loopne
and
aam
gs
jbe
xchg
cmp
das
les
addl
roll
cltd
in
fldenv
enter
sub
hlt
push
aad
loop
icebp
jb,pt
push
pop
jne
mov
dec
adc
mov
add
iret
in
jmp
js
out
loopne
mov
mov
pop
les
shrb
mov
aaa
push
fldenv
divb
lahf
imul
cli
dec
mov
mov
xor
inc
in
andl
das
lods
insb
fs
sbb
push
cli
idivl
mov
ret
and
fwait
subb
out
mov
pushf
daa
stos
rorb
dec
lods
ficoms
mov
sbb
xchg
dec
out
ret
lea
mov
outsb
mov
mov
mov
dec
xorb
xchg
nop
mov
cmp
cmp
imul
test
aaa
outsb
adc
push
call
xchg
ljmp
fneni(8087
leave
add
mov
cmp
cmp
mov
cmp
out
mov
mov
push
dec
dec
repz
add
or
mov
xchg
jo
dec
push
fisubrs
add
sbb
xchg
in
cld
aaa
cmp
sub
lods
and
jmp
xor
divl
call
fwait
xchg
ds
lea
jns
idiv
cltd
jle
insl
or
cmp
and
pop
dec
aas
xchg
lods
into
stc
or
inc
test
fstpl
adcl
sbb
rcrb
sbb
cmp
fidivrl
out
mov
imul
and
dec
sahf
xchg
cmp
rcrl
and
mov
je
pushf
fsubs
movsl
cs
jno
setp
pop
add
or
pop
mov
lea
add
data16
push
xchg
rorl
pop
lret
inc
nop
fdivrs
cs
repz
sub
or
sbb
mov
mov
in
or
push
ret
push
dec
dec
adc
sub
in
adc
jp
mov
jo
enter
ljmp
inc
mov
cld
arpl
mov
push
sbb
add
addr16
lods
sub
fidivrl
xchg
xor
add
pop
xchg
add
je
stos
xor
ret
std
insb
gs
roll
pop
mov
and
pop
cmp
mov
stos
and
lea
mov
xchg
inc
and
mov
rolb
adc
stc
lcall
js
shrb
or
add
pushl
or
adc
loopne
imul
push
mov
lcall
push
dec
in
je
jns
js
dec
lods
repnz
sub
pop
xor
imul
sbb
or
mov
test
pop
scas
out
push
sarb
test
fcmovne
mov
out
dec
callw
scas
mov
xor
call
xchg
cmp
jg
inc
loop
and
push
and
sti
mov
leave
cli
icebp
data16
loopne
in
fsub
test
mov
iret
push
push
out
jbe
mov
fldenv
fnstenv
cld
and
mov
int3
in
mov
test
loop
push
adc
fwait
jecxz
or
pop
xchg
cmp
les
pop
lret
push
lock
lahf
jle
sbb
lret
loop
inc
push
cmpsl
adcl
nop
sbb
fistpl
rorl
xchg
scas
inc
dec
cmpsl
fstp
xchg
test
shll
pop
mov
dec
sub
push
rorb
xor
pop
sahf
xor
dec
or
scas
inc
ljmp
cmp
sbb
dec
inc
push
pop
shrb
test
mov
in
lahf
jns
loop
mulb
mov
jl
incb
aaa
inc
popf
xchg
incb
jo
or
call
ret
ret
jmp
sbb
add
repz
mov
lret
mov
test
xchg
push
and
out
push
jb
xchg
push
xchg
mov
xor
push
bound
mov
adc
rcll
es
roll
fsubs
test
xchg
sub
pop
add
rcrl
xlat
test
mov
or
sbb
ds
ja
fidivl
push
cltd
dec
call
std
cli
mov
in
aam
ds
xchg
inc
sbb
leave
mov
pop
out
push
sub
arpl
and
imul
test
pop
jg
xor
cmp
sbb
rcrb
outsb
mov
pop
xor
call
mov
hlt
dec
mov
pop
sub
mov
add
pop
sub
ret
int3
out
cmp
addr16
sahf
and
mov
push
pop
cmp
cmp
mov
mov
cmp
pop
jbe
jne
test
cmp
js
out
sbbl
and
js
push
idivl
push
or
orb
mov
xor
and
dec
dec
dec
mov
aam
cltd
sub
sbb
push
sbb
pusha
movb
es
ds
mov
stos
adc
mov
pusha
xchg
fsubp
ja
mov
and
mov
adc
inc
mov
invd
leave
movsl
mov
dec
mov
ja
lret
mov
jne
mov
adc
iret
cwtl
or
repnz
xchg
ficompl
insl
cmp
ja
add
into
cmp
sbb
call
jae
gs
and
jns
sub
imul
mov
mov
jecxz
movsb
fwait
jp
insb
pop
add
aad
ja
jl
mov
sti
mov
jl
rcrb
sbb
lods
aam
xor
cmovg
lret
and
cmp
lcall
jae
adc
dec
xchg
push
les
es
jno
push
icebp
mov
mov
pop
mov
lcall
mov
mov
sub
fcoml
sbb
cld
daa
outsl
fstpt
add
loope
into
clc
cmpsb
pusha
mov
push
jne
jae
outsl
data16
loope
imul
fnstenv
mov
pop
inc
adc
sbb
dec
jno
or
xchg
scas
jno
mov
jl
add
cmp
repnz
dec
mov
insb
pop
sti
inc
pop
push
shlb
ficoms
jno
imull
mov
sbb
pusha
mov
jnp
xchg
jmp
push
pop
repz
jmp
test
aas
les
cld
jl
mov
sub
jp
pop
or
xchg
hlt
pop
mov
into
fadds
mov
add
push
stos
cld
int3
ja
sahf
and
data16
inc
es
mov
push
mov
shrl
fimull
fcmovnu
mov
les
add
jmp
popa
sahf
xor
add
xchg
cmc
aas
pop
daa
scas
fldt
scas
stos
xor
mov
icebp
sub
out
dec
mov
push
data16
cmpsl
bound
pop
or
adc
cmp
nop
push
and
sbb
call
push
sub
mov
and
pop
mov
popa
dec
inc
inc
sub
imul
das
lods
push
dec
mov
sub
pop
add
imul
cmpb
stos
cmp
dec
lea
push
stc
sbb
roll
pop
push
or
addr16
and
inc
adcb
dec
cmp
or
sub
test
dec
pusha
mov
enter
jmp
push
sub
cmp
adc
dec
adc
xchg
sbbb
jns
cwtl
inc
adc
jecxz
dec
mov
mov
call
or
ds
xchg
dec
adc
jp
adc
out
adc
xor
insb
pop
cwtl
push
jp
leave
out
data16
add
in
cld
adc
daa
jmp
jae
xor
pusha
in
lret
lods
ficomps
dec
and
popa
xchg
adc
sbb
shlb
inc
rcl
jmp
pop
and
dec
imul
push
inc
xchg
shr
loop
jge
insb
mov
loop
rol
outsl
inc
pop
stos
or
sbb
jb
sbb
daa
insb
and
fiadds
in
aad
iret
mov
mov
jle
jae
rcl
mov
xchg
push
push
mov
or
mov
xor
repz
ror
insl
testb
lea
fcmovnu
es
mov
imulb
shl
outsl
int3
dec
pop
mov
sarl
jle
popa
loop
cs
mov
dec
mov
repz
inc
dec
cltd
cmp
cwtl
push
mov
cld
fsubrs
adc
jb
cmp
mov
cmc
cltd
push
add
ror
fdivr
or
pop
cmpsl
add
push
xchg
ret
pop
rorl
mov
dec
mov
push
sbb
out
cmp
cltd
scas
xchg
sbb
dec
call
jge
scas
or
mov
dec
jmp
psubb
mov
arpl
les
add
and
push
xchg
arpl
fwait
mov
jl
inc
fistl
lds
fidivl
pop
adc
addb
clc
fistpl
je
je
in
into
outsb
mov
sub
idivl
sahf
xor
add
jge
jecxz
ret
sarb
shl
movsl
adc
jl
shlb
xchg
scas
pop
add
fadds
fidivrl
rol
xchg
push
inc
cld
fists
xorb
adc
aad
cmp
pop
add
lock
jecxz
scas
add
xchg
sub
jns
and
add
dec
pop
sti
sbb
sub
test
imul
dec
pop
icebp
bnd
in
or
push
cs
or
mov
inc
insl
das
andl
cmpsl
xor
popf
mov
fs
jne
fildll
push
shll
dec
cmp
mov
stc
mov
lret
sbb
jg
mov
in
daa
xor
insb
jecxz
mov
ja
adc
inc
xchg
sbb
and
movsb
lds
adc
mov
or
mov
xchg
xor
fs
mov
cwtl
jp
push
and
aaa
aaa
jno
in
shll
mov
sbb
stos
inc
cmp
out
dec
push
adc
mov
not
pusha
sub
js
mov
pop
cs
jmp
push
sub
movsb
xchg
ja
fists
push
stos
aam
cmp
dec
and
arpl
jae
adc
cwtl
xchg
out
inc
mov
pop
cwtl
test
test
and
push
int
push
icebp
xchg
insb
daa
cmp
push
xchg
mov
data16
cmpsl
jo
sub
add
in
dec
mov
movsl
inc
movsl
dec
pop
lds
es
sbb
jmp
inc
cmp
xor
ja
cmp
xorb
add
cwtl
jp
xor
pop
clc
mov
sbb
mov
movsl
popa
shll
mul
les
cltd
push
cli
cmpl
fimull
out
jmp
test
rep
neg
mov
sbb
inc
repz
ret
imul
fiaddl
pusha
adc
push
cmp
enter
adc
dec
lret
sub
add
out
aas
icebp
jae
adc
insb
push
and
leave
insb
inc
scas
pop
scas
sub
mov
pop
mov
pop
dec
mov
repz
pusha
pop
adc
cmp
repz
xor
lds
lahf
cwtl
or
clc
addr16
clc
sub
xor
out
ds
movb
in
imul
popa
dec
dec
cmp
pop
sub
dec
and
cmpsb
ret
fisubs
hlt
addr16
insl
movlps
xor
inc
js
int
xchg
pop
jbe
roll
inc
dec
cltd
mov
or
stos
cmc
xorb
xor
sbb
ret
insb
mov
push
pusha
push
scas
out
nop
popl
js
pop
mov
repnz
push
xor
xchg
repnz
push
adcb
xchg
pop
xlat
shlb
push
jmp
sarl
stc
insl
mov
and
aas
jle
je
sub
sbb
lods
sbb
sahf
jle
push
popa
adc
xchg
xchg
jmp
add
cmpsb
out
incl
xchg
inc
shlb
lea
pop
cltd
or
xor
daa
push
loopne
insl
pusha
and
mov
arpl
mov
push
lock
pop
loope
xor
mov
xorb
add
cmp
xor
cmp
add
pusha
mov
sbb
repnz
mov
in
mov
xchg
jo
jne
pop
jmp
adc
je
popa
arpl
sbb
sbb
add
and
in
ret
or
lock
rol
int
or
push
call
and
cltd
mov
cltd
add
adc
jge
inc
repz
cmp
jb
xchg
and
and
jae
insb
insb
adc
mov
stos
sti
adc
inc
or
add
jno
jg
nop
out
xchg
iret
loop
xor
adc
add
xchg
call
push
lock
sbb
sub
dec
lea
test
stc
xchg
mov
add
jbe
add
subl
add
inc
jns
dec
adc
push
xor
js
popa
sarl
push
ljmp
lea
adc
sbb
xchg
movsb
push
outsl
mov
ljmp
inc
dec
mov
ret
lret
dec
mov
sbb
cmp
mov
push
or
or
jp
fbstp
les
fs
loop
bswap
mov
mov
fsubs
popf
pop
in
cmp
ret
xor
cmp
or
inc
cmc
mov
xchg
outsl
pop
adc
das
in
stos
mov
out
out
pop
inc
or
jns
ffree
sub
sub
lea
jno
out
movsb
mov
mov
adc
inc
cmp
mov
ds
mov
mov
mov
ljmp
sub
xchg
dec
xlat
mov
xchg
cmpsb
arpl
loope
mov
or
add
jp
addr16
ljmp
mov
cmc
add
jecxz
lods
lcall
pusha
mov
subb
gs
ss
cmp
in
cmpsl
in
inc
ss
daa
add
cmc
push
lret
imul
push
ljmp
xor
adc
push
xchg
ret
fiaddl
stc
test
cmp
test
shll
xor
mov
scas
mov
mov
aam
mov
dec
lret
leave
adc
lret
insl
mov
or
mov
sub
clc
dec
xchg
and
in
mov
dec
repz
xchg
sub
cmp
add
xchg
push
jecxz
sbb
sti
imulb
mov
and
out
in
mov
int3
shll
push
rolb
loope
adc
push
insb
mov
or
xor
leave
and
nop
xchg
xor
lret
outsb
dec
icebp
shr
jp
mov
lods
int3
stos
xchg
dec
sub
test
add
jnp
arpl
cmp
insl
mov
xor
sbb
and
push
sub
arpl
out
lds
scas
das
push
neg
push
scas
out
inc
add
fmul
jne
mov
jge
inc
xchg
loopne
pop
scas
inc
js
pop
push
pop
lahf
fmulp
xchg
aad
negl
sub
or
or
mov
cmp
repnz
sbb
jmp
repnz
jns
das
icebp
cmp
sti
xor
adc
and
lret
add
shlb
mull
call
sub
bound
mov
mov
dec
mov
out
jge
ja
cmp
stos
and
test
pop
cmp
jp
inc
popf
jl
and
in
mov
jbe
jne
adc
push
cld
lods
sub
xor
popf
sub
jecxz
stos
iret
outsl
cltd
mov
or
fildll
lahf
add
pop
xchg
mov
and
repz
lret
jae
xchg
pusha
out
cli
pop
in
inc
aaa
dec
adcb
push
xchg
imul
pusha
scas
sbbb
lea
test
lret
in
scas
pop
jb
or
pop
pop
sub
push
cmpsl
lods
pop
inc
push
dec
shll
rorl
rdtsc
push
jno
mov
pop
and
sbb
aam
aaa
ficompl
pop
divl
test
fwait
dec
jnp
sub
mull
mov
lods
aaa
mov
bound
cwtl
fwait
fwait
jmp
fcomi
int3
push
mov
adc
pop
push
dec
ljmp
xchg
nop
je
cmp
rcrl
mov
and
mov
rcl
or
ret
jle
mov
stc
ret
ret
jge
sub
mov
jl
into
cmp
popa
pop
leave
mov
lds
xlat
aam
loopne
mov
and
sub
mov
mov
xor
xor
cmp
dec
or
dec
popf
out
stos
lahf
pop
jo
add
mov
sbb
leave
push
mov
dec
rolb
pop
data16
cmpsb
jno
mov
pushf
mov
and
fdiv
mov
and
pop
sahf
add
and
adcl
xor
and
sub
dec
cld
lret
jbe
mov
push
bound
in
xlat
pminub
fwait
push
add
fs
xor
into
dec
idiv
mov
into
fs
mov
sub
inc
jo
push
sbb
dec
fucomi
popf
je
inc
sbb
dec
mov
nop
cld
push
cwtl
leave
add
fildl
fdivrl
xchg
test
and
mov
adc
xchg
in
ss
cmc
movsl
xchg
movsb
and
popf
scas
dec
roll
and
mov
xlat
aad
filds
rolb
inc
xchg
sbb
add
xchg
xor
or
cltd
adc
pop
xor
push
sub
xor
aas
test
xchg
ds
mov
adc
dec
daa
adc
or
nop
and
jmp
movsl
adc
loopne
add
imul
sbb
or
pushf
ds
rcrl
dec
rorb
clc
lods
lods
movsb
cmpsb
fadd
push
dec
out
jbe
mov
xor
xchg
js
ret
mov
in
xchg
add
in
and
cmc
sub
ljmp
mov
inc
icebp
mov
icebp
mov
mov
stos
inc
loope
cmp
nop
xchg
adc
out
fldt
or
std
jo
or
jle
loopne
pop
outsl
xor
jg
or
sti
rcrl
cmp
mov
dec
or
mov
leave
pop
mov
xor
mov
cmp
xchg
push
mov
mov
rcll
xchg
push
lret
cmp
adc
insl
jbe
jb
jbe
sub
aam
fwait
ret
lret
adcl
sbb
push
out
sub
push
sahf
mov
adc
std
or
xlat
cmc
ret
pop
fs
in
addb
add
ret
cs
mov
aad
sub
jg
pop
mov
insl
bound
lods
pop
dec
aad
add
int
mov
and
cmp
pop
stos
in
inc
lahf
iret
nop
mov
push
add
xor
mov
or
pop
pop
push
push
mov
es
fidivrs
ljmp
ljmp
ljmp
mov
xor
inc
les
add
pop
jmp
aad
cmp
fnop
enter
inc
push
push
xorl
inc
dec
in
lds
push
sbbl
mov
cli
loopne
outsl
movsb
dec
scas
xchg
sar
ds
fcompl
out
add
add
jb
loope
xor
gs
rorl
je
popf
xor
mov
jb
pop
adc
adc
xorl
mov
neg
adc
dec
inc
push
xor
jbe
dec
add
cli
pop
mov
test
out
adc
mov
hlt
push
aas
cmp
mov
adc
sar
mov
dec
push
mov
shll
inc
mov
fsubs
fdivs
aas
popf
pop
xchg
js
pop
imul
add
pop
pop
lods
mov
mov
mov
insl
sub
mov
enter
add
idiv
push
loop
dec
mov
mov
je
hlt
jb
or
movsl
popa
jg
pop
aad
dec
rorl
sub
push
cmp
aam
std
jle
mov
mov
js
je
and
push
mov
test
cmp
stc
xchg
fisttpll
iret
inc
inc
jnp
sar
mov
fld1
js
jb
push
push
aaa
insb
into
in
and
dec
pcmpeqw
imul
aas
ds
sbbb
sbb
pop
sbb
lret
sbb
out
nop/reserved
or
jmp
lahf
jg
roll
insb
addr16
dec
xor
ss
add
dec
mov
cmp
push
fidivs
icebp
add
test
adc
leave
inc
and
or
and
pop
in
pushf
xorb
sbb
mov
mov
or
aad
loope
add
push
pop
cmp
mov
dec
loope
mov
adc
mov
cltd
push
sub
test
add
xchg
push
and
cmp
add
jae
lret
mov
scas
test
fimull
sub
lods
aad
add
fimuls
js
push
push
sahf
pop
xchg
ret
xor
push
mov
in
int
dec
jle
and
ds
cmp
orb
ja
shll
movsb
push
xchg
fcomp
add
cmp
mov
stc
into
sbb
pop
sahf
insl
add
cmp
push
jo
or
jecxz
movsb
sub
jg
cmp
test
mov
xchg
cmp
out
mov
imul
out
dec
jne
dec
cmp
push
sub
xor
push
divl
or
aam
xor
pushf
pop
mov
in
jnp
cld
repnz
xchg
push
sbbb
cmp
movsb
scas
fimuls
call
pusha
ja
movsb
cld
mov
or
decl
loope
jo
scas
add
pop
bound
push
pop
in
jb
jmp
aas
jl
imull
mov
test
sbb
sbb
and
js
ret
sub
push
jae
in
push
pop
inc
cmp
int3
gs
adc
mov
jae
sub
dec
cmp
pushf
pop
cltd
pop
mov
pop
out
push
jp
imul
test
int
gs
jnp
pop
jno
or
cltd
aaa
jecxz
and
jbe
icebp
in
scas
fs
dec
cmp
in
pop
shlb
sub
cmp
in
les
sti
cmp
ss
adc
out
cli
jno
add
lea
cmpsl
sbb
push
cwtl
xchg
mov
pop
es
sbb
jo
pop
jg
sub
movsl
sub
repnz
push
cmp
stos
movsl
xor
dec
test
cltd
test
jge
fmuls
daa
iret
lret
mov
insl
sbb
xchg
lock
jge
lahf
movsl
xor
xchg
mov
out
fwait
mov
in
test
adc
test
stos
lods
jecxz
push
test
icebp
jae
pop
mov
cli
inc
add
lods
fwait
mov
mov
jp
call
fs
dec
cmp
xchg
leave
and
xor
imul
movsl
jge
add
and
cmp
inc
nop
pop
adc
cmp
jnp
xor
mov
mov
sbb
mov
hlt
sbb
inc
sub
inc
mov
into
push
and
test
es
sbb
out
adc
sub
pop
add
cmp
sbb
ss
pop
mov
je
jmp
sub
mov
repz
mov
fsubrs
aas
stos
loope
mov
lds
ret
divl
inc
testb
inc
stos
xchg
arpl
xchg
xchg
fsubs
push
push
test
mov
push
xor
mov
cmpsl
daa
push
mov
push
jno
andl
enter
popf
mov
ficoms
xor
je
inc
les
jge
shlb
lret
loopne
xchg
add
negb
ss
lea
mov
repz
mov
fwait
inc
cmp
inc
mov
adc
fcomi
negl
outsb
aaa
mov
mov
or
or
out
movsl
fdivrs
add
xor
inc
and
ret
lret
and
jno
lea
addr16
lcall
dec
jg
lea
hlt
aaa
sub
test
insl
pop
pop
dec
pop
jns
dec
pushf
imul
xchg
add
pop
scas
repnz
cltd
mov
fldenv
test
sbb
sbb
imul
or
mov
fwait
aaa
pop
cmp
int
in
pop
pop
es
fmulp
lcall
test
push
pop
cmp
fisttpl
add
gs
js
xor
notl
adc
ficomps
adc
add
pop
or
data16
sbb
mov
dec
std
sbb
test
inc
in
outsb
lret
lds
mov
jmp
dec
mov
sub
insl
in
sarl
mov
pushf
add
lods
mov
nop
add
cwtl
fs
mov
scas
inc
negb
sarl
fldenv
popa
sub
sub
sti
nop
jns
mov
fdivs
add
insl
test
and
std
loope
inc
rcll
movsl
cmp
jb
add
stos
notl
pop
js
jbe
mov
popf
dec
jbe
pop
sub
push
movsl
and
stc
mov
dec
adc
test
mov
jp
std
sbb
mov
aad
or
icebp
lahf
in
mov
ret
iret
jl
or
icebp
cmc
jne
push
mov
in
push
adc
jbe
push
inc
mov
sahf
push
cmpsb
jg
in
mov
repz
or
cmp
fwait
in
add
xchg
and
xchg
xchg
cmpsl
sbbb
mov
adc
ds
in
push
adc
adcb
in
stc
shll
add
or
mov
in
push
dec
pop
in
loop
inc
fstps
cmovle
ds
clc
pop
int
aas
and
and
or
sbb
inc
out
add
sub
inc
adc
dec
jge
sarl
dec
jp
nop
jae
xchg
xchg
and
dec
mov
mov
cmp
ret
or
pop
adc
negb
push
clts
jecxz
push
mov
cmp
lahf
mov
mov
push
xchg
sbb
jb
dec
ret
xlat
mov
jecxz
out
cmp
cmp
mov
mov
mov
pop
pop
ljmp
in
xchg
cmp
push
pop
dec
adc
inc
ret
cs
jg
and
iret
jp
arpl
xor
sbb
jbe
jno
lret
lods
aas
add
std
loopne
sbb
lods
xchg
xor
ficoml
rorl
lea
iret
inc
jns
subb
jbe
rol
daa
mov
mov
adc
ret
mov
in
push
inc
js
mov
push
and
les
mov
addb
loopne
and
fistpll
cmp
repnz
outsb
mov
sbb
push
mov
mov
or
fisubs
and
jne,pt
sbb
or
loopne
les
lret
ss
stos
popf
mov
mov
rcrl
out
idivb
xchg
lds
lods
xor
cmpsl
ja
test
iret
arpl
popa
out
dec
xadd
xor
daa
out
dec
cmpsl
xchg
lods
cs
nop
mov
insl
test
mov
push
dec
jno
adc
adc
mov
add
adc
mov
add
cli
xchg
push
movsb
sub
add
dec
push
cmc
aaa
push
movsl
ret
mov
testl
xchg
pop
xchg
popf
dec
mov
fisubrs
hlt
jae
push
lea
adc
orb
bound
push
push
daa
push
sbb
push
mov
xchg
test
xchg
dec
and
in
push
dec
pop
imul
jp
cwtl
dec
inc
cmc
and
and
jae
data16
divps
mov
fidivrl
dec
hlt
dec
andb
adc
cs
jne
int
jge
test
pop
jle
ja
and
aad
adc
fiaddl
xor
sbb
mov
jecxz
xchg
dec
xchg
lret
ret
and
mov
mov
sahf
lret
push
lock
mov
into
js
push
fidivrl
xor
ja
xchg
push
sarl
lret
lea
in
cmpsl
xor
push
fs
mov
mov
imul
and
mov
cmpsb
dec
fildl
inc
xchg
test
clc
mov
sub
adc
loope
adc
in
popa
test
mov
jmp
and
aad
cwtl
adc
jne
or
nop
cmpsl
pop
enter
and
in
inc
sbb
test
std
scas
leave
lods
and
test
xlat
fs
mov
movlhps
xor
xchg
inc
xchg
and
test
movsl
rol
dec
scas
jge
lahf
fwait
jae
lock
enter
push
imul
jb
cmp
and
repnz
lret
mov
mov
sbb
mov
push
aad
popf
or
pop
mull
xchg
loop
shrl
add
cmp
add
cld
cs
xor
adc
sti
je
pop
shlb
or
scas
or
sub
xchg
and
pop
rorb
cmp
sub
imul
dec
ja
mov
and
jmp
pop
push
pop
pop
das
aaa
xor
adc
sub
mov
lahf
repz
ret
stc
fwait
and
pop
loope
pop
mov
add
das
lahf
cltd
mov
xor
loop
xchg
xlat
loope
dec
push
in
shll
inc
and
sub
mov
rcrl
cmp
in
enter
es
ret
push
pop
xor
fdivrp
arpl
sti
js
push
shl
push
loopne
out
mov
jo
and
dec
inc
xchg
inc
cmp
push
and
movsl
pop
adc
aaa
rorl
ror
and
or
push
pop
add
je
mov
jg
xchg
cmp
lea
xchg
cs
jnp
cmp
es
gs
jg
sub
and
call
in
xor
inc
data16
mov
xor
push
and
ror
sbb
adc
pop
rclb
repz
push
mov
xlat
sub
mov
roll
into
inc
jo
sbb
inc
jecxz
pop
pop
pushf
adc
mov
jecxz
sahf
pusha
clc
sub
gs
adc
or
popf
mov
or
push
jno
pop
cmp
call
inc
cltd
add
in
add
xchg
imul
lds
repnz
fisttps
lds
test
xchg
loope
gs
jno
mov
sub
dec
lods
xadd
gs
test
in
add
push
stos
int
mov
push
jecxz
int
mov
lods
nop
out
incb
xchg
std
xor
push
ja
inc
fisttpll
mov
sub
test
lcall
inc
sbb
xor
adc
dec
jb
inc
lret
push
aaa
cmp
jp
ret
mov
or
mov
push
into
adc
loop
sbb
das
ja
dec
in
out
sbb
test
sub
test
jb
cmpsl
shlb
gs
out
scas
fidivs
in
xor
dec
push
or
cmpl
repnz
xor
popa
rcll
sub
mov
cmc
xlat
cmp
xor
dec
repnz
jecxz
daa
lock
pop
push
jl
or
add
call
out
sbbl
cltd
push
in
dec
flds
stos
mov
ds
mov
test
mov
lea
jb
and
negb
mov
or
sub
dec
and
mov
xlat
clc
lods
xor
popf
pop
jmp
cli
ja
jne
test
idivl
mov
or
mov
cld
hlt
ret
and
pop
neg
sbb
pop
mov
test
cmpsl
pop
mov
xor
sub
cwtl
aaa
dec
mov
pop
pop
mov
shr
movsl
mov
adc
out
cmpsl
or
push
and
addr16
dec
icebp
add
arpl
xchg
fiadds
cltd
jge
rcll
ds
mov
fsts
cmp
sub
incl
dec
mov
mov
in
jge
mov
in
into
pop
push
xor
mov
add
and
add
movsb
or
adc
std
fcompl
lret
jp
inc
adc
cmp
imul
and
sti
outsb
cmp
mov
and
xor
adc
call
and
aaa
mov
xchg
jae
stc
mov
dec
cmp
shl
pop
push
mov
jl
mov
int
mov
cli
jge
mov
sub
dec
xchg
fcomps
movsb
sbb
out
movsl
adc
testb
pop
sub
push
lock
into
fs
sbb
sub
xor
add
xor
and
cmc
mov
loopne
sti
fsubr
popa
jmp
inc
mov
add
xor
jg
lea
repz
mov
xchg
loope
sarb
sbb
test
xor
push
jns
sar
repz
and
xchg
mov
xor
lcall
shll
bound
fs
test
test
mov
lahf
imul
pop
inc
push
and
fidivl
orb
inc
mov
repz
gs
pop
mov
xchg
out
xor
mov
and
pop
push
mov
in
xchg
arpl
mov
lods
loopne
jl
sbb
jne
hlt
pop
loop
insl
push
xchg
lret
dec
das
iret
loopne
xorl
not
movsl
clc
sbb
test
inc
sbb
testl
bound
je
in
push
or
enter
outsb
sbb
add
ss
ret
xchg
mull
rorl
pop
xor
ret
sbb
push
movsbl
imul
bound
es
cmp
icebp
pusha
daa
mov
adc
mov
lods
pop
loop
jl
sub
pop
cmp
jb
arpl
inc
fsubs
ret
xchg
movsb
dec
mov
ret
add
or
cmp
imul
fimull
or
add
test
stc
lock
xlat
aad
dec
sbb
push
ljmp
inc
jae
mov
rclb
jge
or
adc
jge
sub
cltd
imul
es
jge
dec
adc
adc
sti
and
out
adc
cmpl
imull
inc
jl
cmpsl
test
loopne
jl
jae
jb
cld
jne
scas
les
test
cmp
xor
inc
mov
sti
les
dec
ret
inc
popf
imul
popa
shr
sbbl
fs
cmc
add
jecxz
pop
jle
jne
cmp
nop
and
sub
cld
mov
inc
inc
and
dec
or
pop
cs
push
repnz
pop
pop
mov
mov
push
pop
pop
xchg
addr16
ljmp
push
push
mov
lock
jp
mov
mov
dec
popa
and
push
xor
cld
lahf
xlat
stos
fnstcw
repnz
xchg
ds
fidivrs
gs
test
mov
jge,pn
cmpsl
xchg
or
add
sbb
pop
rcr
fnstsw
loop
or
test
mov
fs
daa
cmp
push
inc
sbb
xlat
lea
or
sbb
sub
or
adc
testl
outsb
mov
xchg
ljmp
push
les
call
arpl
stos
jge
adc
mov
pop
push
ja
leave
mov
sbb
pop
add
stos
inc
mov
scas
jmp
fstl
cmp
adcl
js
cmpsl
sbb
mov
cli
jmp
sahf
aaa
push
fbld
mov
ss
fldl
in
loopne
push
outsb
add
xchg
mov
push
loopne
orb
loope
sub
xor
fistpll
xchg
add
mov
pop
test
repz
jge
bound
jo
pop
insb
or
xor
or
imul
adc
loopne
inc
and
sub
xor
xchg
dec
inc
inc
hlt
fisttpll
mov
mov
push
cltd
mov
lcall
fs
repz
mov
enter
addr16
pop
or
out
mov
fcomp
jmp
mov
xor
jne
jg
push
pop
jl
ja
jmp
mov
xchg
stc
ds
mov
cmp
cmp
pop
fnstcw
add
neg
movsl
xor
insl
mov
fnstcw
add
lods
lahf
push
mov
rcll
sub
mov
jo
iret
mov
mov
ud0
fsts
and
sbb
adc
ss
clc
jle
push
scas
jg
cmc
stc
test
dec
sbb
sti
push
sbb
nop
inc
jl
inc
in
lret
fbld
add
insl
push
lea
mov
sbb
out
or
and
mov
and
mov
push
ds
cli
xor
mov
out
inc
mov
cltd
mov
jns
sub
mov
jo
sub
je
lods
inc
iret
hlt
sbb
pop
dec
lahf
test
pmuludq
mov
or
testl
call
lret
cmp
mov
push
sub
fcmovbe
pop
mov
add
sbb
lahf
ffreep
mov
inc
movsb
mov
insb
imul
movsb
lods
or
inc
dec
imul
xchg
imul
or
push
or
cmp
or
mov
dec
sub
shrl
mov
push
mov
rorl
rcll
cmp
add
into
mov
ljmp
mov
shlb
inc
out
outsl
mov
cmp
mov
cltd
stos
imul
ja
dec
xchg
dec
sbb
mov
jnp
pop
fcmovbe
mov
dec
mov
pop
xchg
out
and
cmpsl
sub
lock
dec
in
pop
test
fists
lea
push
arpl
jge
test
sbb
push
lret
xchg
div
jne
jbe
xchg
dec
jmp
jo
fsubrs
or
pusha
sbb
xchg
mov
dec
sti
stos
fdivr
fisubrs
rclb
or
push
shr
mov
inc
pop
ficoms
lds
adc
add
jns
add
push
adc
mov
imul
sbb
aad
enter
ret
dec
sahf
jle
imul
sbb
inc
rcpps
movb
mov
inc
hlt
sbb
test
test
mov
aas
add
hlt
mov
push
mov
test
pop
loope
sub
cmc
mov
insb
sbb
je
clc
mov
sbb
clc
enter
xchg
mov
stos
add
loope
sbb
sbb
stc
sbb
mov
adc
lds
std
xor
mov
movsb
mov
cmpl
sub
cmc
pop
out
divb
adc
stos
lea
cwtl
push
jle
das
fs
cmp
jl
push
or
loope
inc
cmp
pushf
les
jge
xchg
adc
aas
mov
xchg
push
or
fsub
xor
dec
mov
xorl
mov
xchg
push
push
jmp
dec
ss
cmp
xchg
xor
jnp
pop
adc
xchg
xor
lods
insl
xlat
mov
outsl
or
or
cmp
cltd
push
sti
in
fnstsw
leave
dec
sbb
inc
test
xchg
sub
jecxz
inc
in
xor
aas
mov
jl
cld
add
adc
or
icebp
pusha
or
fcoml
inc
pop
adc
cmpb
mov
or
jo
test
dec
cli
lcall
jecxz
clc
add
daa
jge,pn
and
mov
iret
mov
sub
int3
mov
insb
fcompl
cmc
push
jg
adc
shr
es
and
addr16
bound
out
in
outsb
pop
cmpsb
scas
sub
jnp
jmp
cmp
jmp
lods
adc
push
sar
mov
fimuls
addr16
sahf
xor
dec
hlt
fs
xchg
jno
sbb
mov
xchg
pusha
leave
lods
dec
xor
rcl
shlb
shrb
add
cmpsl
mov
cli
inc
sbb
rcll
fldl
push
lods
stos
jbe
push
sbb
rcll
in
jbe
inc
and
outsl
and
xchg
ss
add
mov
jns
fidivrl
cmpsl
add
in
mov
mov
push
push
in
andb
push
push
rorl
jmp
in
and
inc
pop
mov
push
js
stos
adc
insl
shll
das
xchg
mov
insl
mov
movsl
push
jle
nop
mov
or
add
sub
aad
movsl
mov
popf
insb
jbe
add
adc
cmp
mov
orb
mov
test
shr
add
jo
mov
jmp
fiaddl
pop
push
mov
pop
xor
mov
xchg
add
jmp
outsl
insl
test
scas
cmp
mov
scas
pop
adc
scas
xlat
repnz
orl
inc
mov
fildll
div
pop
cmp
loopne
and
adc
fisttpl
out
roll
add
clc
test
mov
jno
dec
push
and
pop
or
notb
pop
xchg
pop
sub
sbb
std
inc
lret
subb
insb
mov
jnp
push
sub
aad
mov
xor
cwtl
xor
cmp
scas
cmc
adcb
sbb
popa
int3
mov
scas
push
jns
cltd
mov
ret
and
xchg
arpl
mov
mov
jns
nopl
and
fsincos
and
outsb
lea
pop
push
jge
je
iret
mov
xor
add
mov
dec
ja
data16
cwtl
in
loop
sbb
jne
add
mov
adc
lea
push
enter
lcall
nop
mov
outsb
insl
fisttpll
inc
fs
mov
fcoml
imul
mov
mov
fcmove
xorb
push
shrl
push
mov
jge
icebp
xchg
mov
data16
dec
shll
adc
jbe
inc
add
pop
push
or
inc
sbb
adcl
loopne
and
xchg
lahf
lods
pop
sahf
jecxz
and
adc
bound
ja
cmp
sub
shlb
fldenv
xor
xchg
xor
ss
xchg
and
je
jl
push
jne
dec
fmul
insb
cli
dec
cli
daa
arpl
mov
in
inc
clc
mov
jp
mov
ret
jns
fcomps
sahf
mov
jns
add
je
xchg
and
dec
sub
fsubrl
jg
aad
jmp
arpl
rcrl
ret
add
sub
add
sar
sbb
or
sarl
ret
clc
inc
jne
push
and
std
inc
sub
gs
lds
cmp
pop
xchg
lcall
add
adc
enter
mov
sbb
xchg
mov
ret
xchg
inc
stos
cltd
and
js
pop
jmp
jo
xchg
push
das
out
cwtl
sub
icebp
push
hlt
test
push
or
jmp
outsl
sub
jns
andb
sbb
pop
mov
sti
xchg
inc
outsb
adc
mov
jns
std
sbb
call
and
lods
outsl
sub
sbb
cmp
fcmovnu
xchg
xor
pop
jne
dec
jo
inc
ja
clc
jmp
or
movsl
xchg
inc
pop
sar
cs
ja
lahf
mov
out
in
jae
and
or
scas
add
stos
sbb
push
pop
addr16
jmp
out
dec
mov
sub
sti
mov
dec
and
mov
lret
mov
stos
fdivs
jb
jle
mov
bound
fnsave
or
sti
xchg
pop
stc
imul
pop
iret
sub
cmpsb
mov
cld
dec
mov
cltd
push
mov
std
mov
insb
jo
sbb
mov
cmpsb
jo
loopne
cmp
inc
lret
lcall
push
insl
xor
lds
sbb
xchg
cmpsb
cmpsb
mov
hlt
aas
inc
call
pop
in
popa
in
lcall
outsl
outsb
dec
mov
std
mov
mov
fmull
push
dec
sub
add
ljmp
test
sub
ljmp
test
push
mov
push
into
pusha
das
sub
add
adc
ja
mov
and
sbbl
push
mov
jnp
push
jmp
test
in
cmp
xchg
popa
mov
cmpl
std
fistpll
imul
cli
fwait
pop
mov
pop
je
jno
stos
xchg
or
cmc
pop
xor
data16
jbe
popa
je
or
push
adc
int
push
ja
mov
movsl
inc
fcomip
mov
sbb
mov
dec
fistpl
in
int3
add
push
daa
lods
repnz
mov
mov
fadds
rcll
mov
stos
aad
add
xor
jno
sbb
aas
xlat
dec
push
jecxz
pop
insb
dec
mov
loope
jno
mov
sahf
mov
jg
test
inc
rol
mov
fisttps
push
add
js
clc
and
and
fwait
sub
fdivrl
and
cmpsb
aaa
xchg
sbb
and
mov
sub
add
mov
mov
jnp
cmp
add
jle
stos
popf
or
pop
pushf
sub
lret
lods
out
lcall
cmp
adc
push
mov
insl
dec
xor
stos
fs
lods
sbb
pop
scas
pop
out
push
push
scas
fnstenv
lds
push
cmp
scas
daa
fnstenv
push
push
mov
std
testb
fdivs
leave
or
pop
cwtl
cmp
adc
outsl
mov
xchg
jo
lea
js
push
jns
mov
pop
insb
pop
ret
pushf
pop
mov
sub
clc
jl
dec
aad
jecxz
pop
sahf
aas
sbb
les
inc
cmp
dec
mov
mov
cmp
shlb
xchg
sbb
or
int
loop
out
dec
add
insl
jo
cmp
jbe
xor
andl
sbb
cmp
fldcw
add
xchg
sbb
mov
add
push
cmp
fwait
in
xor
push
mov
data16
shll
stos
lcall
leave
rep
push
icebp
int3
adc
mov
gs
push
sbb
clc
fimuls
sbb
xor
adc
xorl
ja
test
aaa
sbb
sub
xor
enter
add
cltd
addr16
aaa
mov
cmc
aad
stos
push
mov
cmp
add
test
dec
lcall
aad
ds
cmc
sub
add
call
stos
push
xchg
out
or
xor
push
jge
jp
adc
mov
sub
mov
dec
sti
cmc
stos
pop
inc
push
add
lods
mov
shlb
jns
lea
fisttps
sub
call
or
sti
push
out
icebp
xchg
sub
rcll
cmp
or
xor
lret
push
fisubs
xchg
xchg
sbb
aam
pop
inc
outsl
sub
cwtl
fadd
lcall
test
mov
inc
lods
std
or
addl
cmp
pop
mov
push
cmp
imul
mov
test
push
push
cmp
inc
leave
call
insb
jae
pop
pop
sbb
xor
or
and
xchg
xchg
enter
dec
test
shl
inc
ret
out
add
dec
das
aas
mov
xor
movsb
fisttps
test
xchg
and
repz
jae
sub
outsb
pop
sub
icebp
test
push
xchg
push
vminps
jo
outsl
push
clc
mov
jge
addr16
popa
sarl
fcoml
mov
jbe
fwait
jne
add
or
stos
push
outsb
inc
push
adc
mov
adc
js
out
push
shlb
stc
inc
addr16
sub
roll
jle
mov
ja
jecxz
ds
cmp
xlat
pop
add
test
repnz
mov
add
cwtl
insb
roll
inc
movsb
scas
cmp
mov
jb
mov
iret
idivb
ja
cmpsb
out
int3
pop
mov
and
repnz
adc
jle
push
lock
fistps
sti
imul
or
xorl
sbb
repz
imul
mov
stc
or
xchg
lahf
sarb
mov
sub
out
cmp
js
fnstenv
pop
jmp
jne
or
sbb
inc
sbb
les
insl
push
or
or
xor
lea
das
lahf
out
mov
popa
outsb
sahf
sbb
and
enter
popa
push
ret
and
ss
jg
lods
jmp
jb
push
cltd
loope
cld
ret
inc
adc
xchg
cmp
sub
je
pop
test
adc
inc
cmpsb
out
sar
xchg
adc
mov
repz
in
outsl
push
stos
sub
mov
pop
jle
xchg
xchg
sti
ret
mov
enter
addr16
scas
into
add
push
cld
sub
shl
nop
ss
fldt
inc
pop
or
push
cmp
ljmp
xor
pop
jne
or
repz
cmp
mov
pop
jecxz
cmp
lcall
ljmp
push
jmp
int
inc
dec
pop
pop
bound
mov
adc
jp
ss
in
dec
dec
mov
cmp
adc
lds
push
sub
in
adc
push
mov
xchg
insb
or
icebp
jecxz
jmp
cmpsl
push
and
xor
jae
and
add
out
sub
add
ja
outsl
imul
ficompl
xchg
cwtl
cmc
movsl
std
cli
js
sbb
mov
and
mov
call
jne
mov
mov
in
clc
fbstp
push
clc
lods
into
mov
inc
dec
cmp
mov
xor
lahf
sbb
data16
pop
clc
cmc
and
aaa
movsb
xchg
xor
lret
sub
mov
rcrl
pop
das
push
push
sub
jecxz
cmpsl
aaa
push
insl
outsl
adc
jmp
jnp
loopne
mov
ja
sub
or
lea
test
enter
cmpsl
pop
cwtl
cmp
sub
cli
cld
pop
mov
add
xor
mov
jge
jp
das
enter
outsl
jmp
push
lahf
jl
fisttpll
and
mov
xor
popa
movl
rorb
add
fbstp
fidivl
arpl
push
xor
sahf
orl
std
ds
sub
dec
daa
imul
pop
jns
and
aaa
push
jns
jo
mov
mov
std
rorl
aas
idiv
pop
data16
xchg
or
mov
in
iret
pop
push
test
js
or
mov
cwtl
dec
xchg
push
sbb
add
fwait
movsl
test
int3
inc
lea
imul
jo
mov
mov
inc
movsl
pushf
push
cmp
lcall
scas
in
stos
push
add
inc
pop
sbb
icebp
and
das
push
jecxz
push
xchg
imul
jae
cmc
push
jne
pop
iret
jl
dec
js
adc
daa
and
shlb
int
scas
and
xor
rcr
repz
pop
into
cmpsb
or
adc
arpl
pushf
mov
int
pop
clc
stos
notl
imul
push
frstor
stos
sbb
imul
ss
ret
pop
mov
push
testl
pop
ficoml
add
adc
clc
mov
cwtl
xchg
cmp
out
loope
jbe
cmp
mov
testb
bound
loop
fisubs
cmc
pop
mov
add
xor
push
xor
adc
mov
aam
das
inc
out
jg
pop
xchg
sbb
xor
negb
mov
push
cmpsl
inc
jle
sbb
popa
push
int3
pop
and
movsb
inc
jns
insl
in
fcmovb
mov
dec
cmp
stos
mov
push
xchg
push
mov
mov
lret
inc
data16
mov
cmpsl
cmp
in
inc
sbb
jp
cmc
jle
or
mov
sbb
mov
popa
adc
in
shrb
pushf
out
inc
icebp
xchg
pop
jg
fisubrl
test
in
popl
stos
and
adc
adc
mov
cs
sbb
loop
fistpll
fstpl
pop
mov
or
ljmp
inc
rcrl
push
push
xor
stc
clc
aas
cmp
iret
adc
push
loop
cmpsb
adc
jo
cmp
xchg
lods
scas
shlb
jbe
lahf
sub
push
adc
es
daa
test
and
sub
push
iret
and
call
iret
or
push
scas
add
insb
sbb
xor
lret
sub
adc
jno
dec
push
js
and
push
mov
pop
sub
repnz
repz
das
sub
mov
pop
or
xlat
push
cltd
iret
adc
addr16
dec
xor
xlat
aaa
mov
ds
jge
dec
cmp
mov
xlat
pop
sub
mov
add
in
cmpsl
jmp
jle
cmp
cmp
xorb
push
dec
sbb
loopne
xor
xor
js
ret
add
bound
mov
scas
daa
flds
mov
xor
mov
clc
xor
push
data16
add
ds
cmpsb
sbb
rolb
lds
in
test
sbb
sub
sub
xor
cmp
mov
ljmp
xor
add
pop
fcomip
stos
pusha
pop
lock
xchg
xchg
or
jns
mov
add
rorl
mov
xlat
push
das
sarl
mulb
test
stos
inc
xchg
aas
xchg
subl
int3
outsb
adc
arpl
xchg
jno
movsl
mov
enter
push
jae
xorl
push
sub
jmp
pop
sbb
push
inc
adc
lret
push
fwait
adc
fcomps
push
rolb
and
cltd
js
sar
push
mov
rclb
jg
mov
into
mov
out
or
mov
mov
lahf
mov
dec
jnp
sbb
xchg
sarl
jnp
and
pop
gs
xchg
cwtl
xchg
jp
inc
cmc
lret
je
test
inc
sti
mull
cmp
inc
pop
and
inc
dec
jle
jmp
push
cmp
xchg
cs
xor
cs
cmp
and
inc
mov
push
inc
mov
xchg
xor
and
push
mov
xchg
ret
sub
xchg
cli
pop
movsb
xchg
js
cwtl
inc
xchg
mov
es
loopne
adc
loopne
adc
add
aad
and
sahf
xor
insl
lea
pop
cmp
test
stc
test
mov
imul
test
rol
cmp
popf
gs
jecxz
adc
fistl
int3
sbb
add
lock
es
mov
call
rorl
enter
push
adc
adc
outsb
sub
cmpsl
lcall
imull
pop
pushf
cmovs
rep
or
leave
mov
cmpsb
add
pop
lods
test
push
xchg
xchg
outsl
cwtl
mov
imul
dec
arpl
lods
es
dec
out
rcll
aaa
in
jae
xchg
cmpsl
in
push
std
inc
stos
pop
negl
je
or
ds
int3
adc
test
ljmp
movsl
cmpsl
out
add
pop
jo
dec
inc
cmp
outsl
pusha
mov
mov
push
orl
jb
push
dec
loopne
test
movsb
mov
sbb
adc
pop
ret
pop
add
daa
mov
push
lods
push
pop
xor
movsl
and
or
xchg
pshufw
cs
jb
adc
and
lret
pop
outsl
sbb
sbb
inc
loop
jmp
jb
fnsave
in
sbb
fstl
jge
repz
rcl
pop
push
sub
js
movsb
lahf
cmp
neg
jb
mov
pop
hlt
jae
jecxz
mov
shl
push
and
push
jmp
pop
imull
test
clc
js
lcall
sti
fdivl
imul
rcrl
mov
push
sbb
and
pop
push
inc
pop
jae
sbb
jno
fdivs
adc
jbe
sbb
jno
mov
std
jge
lods
ret
nop
out
cltd
loop
xchg
lcall
fsubl
lcall
fucomp
mov
jno
test
imul
jl
dec
cmpsl
mov
push
int
xchg
pop
stc
sub
add
int3
fbld
stos
shll
ja
mov
loope
les
mov
dec
fwait
sub
popf
std
decl
xor
rclb
mov
inc
sbb
push
aas
inc
clc
inc
xor
rcr
dec
mov
jb
lods
push
cmpsl
jo
mov
loope
cli
push
leave
outsl
icebp
pop
inc
sbb
test
rcll
repz
adc
clc
movsl
xchg
or
mov
mov
xor
adc
sub
pop
lock
push
gs
shrb
dec
out
pop
mov
cwtl
add
ss
sarb
push
jbe
sarb
mov
pushf
jecxz
add
sub
imul
ja
inc
scas
mov
daa
jne
pop
xchg
or
jg
cmpsb
sbb
ss
push
xor
or
repz
test
or
stos
add
sub
cli
mov
ret
fstpt
xchg
es
iret
mov
std
adc
arpl
fsts
xor
mov
es
js
sbb
mov
sahf
stos
shlb
call
mov
and
sub
sbb
dec
pop
mov
imul
add
in
sub
mov
push
xor
pop
xchg
adc
je
ja
lods
dec
pop
mov
jnp
mov
stos
out
nop
push
or
and
inc
unpcklps
push
add
rclb
outsl
movsb
and
cmc
mov
jno
and
sub
xor
add
int
jns
inc
push
stos
or
aam
fimull
push
cmp
and
in
js
push
dec
mov
xor
mov
out
jle
mov
fists
mov
lahf
or
clc
aas
jl
sbb
sbb
mov
cld
xchg
lcall
or
or
pop
sbb
shlb
movsb
mov
mov
cmp
xchg
shlb
aam
add
adc
dec
iret
ja
sti
psrad
mov
sarb
or
nop
imul
ss
jns
inc
xchg
hlt
xor
cmp
fnsave
cmp
test
icebp
mov
clc
jl
shlb
lock
inc
cmc
push
sub
out
pop
push
add
jne
enter
loopne
pop
mov
leave
push
inc
push
popf
ficoml
and
adc
mov
add
mov
cmpsl
mov
aaa
pop
pop
mov
nop
mov
inc
jecxz
lds
push
mov
cmp
testb
cmp
pop
out
xor
ds
and
out
in
cmp
adc
xchg
aaa
iret
inc
cltd
mov
or
xchg
imul
clc
jbe
push
lcall
test
cwtl
in
xchg
cmp
es
fidivl
call
mov
test
rcrb
cld
mov
cmp
stos
arpl
pusha
int
scas
dec
cmp
mov
lds
mov
lods
cmc
clc
pop
and
ret
xchg
mov
add
ljmp
xlat
daa
test
dec
and
jle
cmpsl
out
fadd
int3
jne
sbbl
leave
test
xchg
push
pushf
mov
shlb
fcompl
inc
fsubl
xor
mov
repz
mov
jp
cwtl
or
xchg
xchg
xlat
dec
add
dec
mov
pop
jmp
push
add
and
call
mov
lret
jmp
or
cmp
sar
fwait
repnz
shrb
mov
and
lods
mov
mov
adc
sahf
ja
popl
sarb
fs
scas
pop
popa
pop
mov
roll
and
mov
aad
xchg
rcl
mov
js
xchg
daa
rcr
fiadds
mov
xchg
or
and
or
push
mov
cmp
popf
cmpb
pop
cmp
lret
sbb
mov
jns
pop
pop
std
loopne
jnp
roll
incl
push
dec
sbb
push
xchg
ss
sti
dec
imulb
mov
mov
bound
sti
and
add
jbe
popa
pop
jmp
je
and
cmpsl
ds
dec
adcl
jl
pop
pop
mov
push
push
add
sbb
xchg
or
mov
lahf
mov
stos
js
sarb
shlb
sub
insl
sti
xchg
sub
and
or
out
xchg
inc
es
xor
mov
lods
mov
lea
adc
jg
and
scas
sahf
mov
jno
call
mov
xchg
cmpb
enter
adc
pusha
add
mov
mov
inc
mov
jg
les
inc
insb
nop
outsl
pop
icebp
cs
lret
lea
mov
nop
jp
loope
mov
mov
into
pop
pop
cld
aas
in
ljmp
stos
mov
push
inc
jg
rcr
xchg
push
mov
and
xor
jmp
stc
mov
addl
mov
dec
jp
dec
add
ds
loopne
xor
sahf
cmp
fiaddl
add
shl
es
repnz
mov
rorb
sbb
stc
lods
xor
aas
gs
sbb
fdivrs
jns
daa
mov
arpl
jae
jp
fbstp
dec
je
movsb
cwtl
popfw
aaa
jno
dec
fstp
jbe
shrl
push
icebp
sub
pop
jne
sub
int
fiaddl
gs
jno
out
cmpsl
push
mov
sub
ficomps
or
jo
jno
ss
xlat
mov
xchg
jne
lahf
data16
imul
push
xlat
jp
stos
jb
in
jle
scas
jb
mov
mov
cwtl
mov
cmpsl
test
call
sbbl
movsb
mov
lret
cmpsl
pop
sbb
rcl
repz
xor
push
fnstsw
pop
and
push
inc
pop
or
add
mov
push
sbb
cmpl
push
out
and
mov
pop
dec
fs
or
lret
jnp
pop
mov
clc
repz
or
imul
and
jge
mov
add
in
and
sub
out
mul
lcall
aaa
xor
addr16
jo
pop
in
insb
cli
push
xor
jmp
lahf
cmp
mov
xor
mov
or
cmp
cli
xchg
adc
push
in
inc
sub
fldenv
pop
shrb
pop
pop
xchg
xor
or
fyl2xp1
stc
insb
sbb
gs
lock
cmp
arpl
nop
popa
pusha
or
cs
or
repnz
push
push
pop
jbe
dec
dec
in
cltd
cwtl
loop
fisttps
inc
into
clc
movsb
jmp
ds
repnz
push
dec
loop
xchg
xchg
xor
mov
je
adc
fstpt
mov
sbb
add
notb
test
xchg
inc
cld
std
xlat
popf
inc
sbb
cmpsb
in
out
fs
jl
or
pop
aad
int
dec
lds
or
xchg
daa
mov
jns
sbbb
pop
and
loop
or
out
inc
arpl
cmpl
add
mov
in
xlat
les
inc
pop
iret
push
int
mov
aad
mov
pop
pop
cmp
adc
cmc
dec
push
push
iret
xchg
stc
lahf
add
shr
or
mov
mov
pop
arpl
pop
fbld
test
out
jmp
pop
cmpsl
xchg
inc
inc
mov
push
test
rorb
push
fdivrp
out
inc
sbb
aam
inc
jns
add
sarb
lods
cmc
cmpsb
xor
cltd
adc
mov
jno
scas
sub
scas
push
and
xchg
and
cmp
mov
imull
push
sub
mov
out
aam
cwtl
popa
pop
into
insb
xor
repnz
loopne
sub
mov
xchg
lret
inc
lea
imul
out
push
jg
mov
adc
pop
das
or
sub
mov
and
out
popa
in
sbb
lahf
int3
ljmp
pop
shl
cmc
je
and
insl
or
repz
stc
inc
xlat
mov
inc
jl
mov
lret
fs
ljmp
xor
and
inc
ja
je
fwait
lds
mov
mov
movsl
mov
push
sbb
cmpsl
les
repz
mov
push
inc
lock
mov
sbb
fsub
popa
insb
push
fcmovbe
das
pop
movsl
je
mov
test
adc
addr16
jnp
daa
cmpsl
ss
test
ljmp
repz
enter
pop
test
add
out
inc
mov
xchg
and
push
lds
push
mov
movsl
dec
test
pushf
aad
lods
shlb
pop
mov
adc
sub
push
pop
movsl
sti
loop
ljmp
fisubrl
push
lock
mov
pusha
and
jle
jns
sar
add
add
loopne
push
aaa
loopne
xchg
jecxz
inc
xor
add
enter
add
sahf
mov
or
cmp
scas
cmp
lret
push
jle
es
int
push
sbb
push
and
movsb
mov
scas
movsb
mov
cmp
xor
movsb
sahf
jbe
jp
dec
lods
aam
stos
repz
popf
push
mov
adc
pop
insl
or
lock
cmpsb
jnp
cmp
icebp
lds
dec
add
lods
mov
xchg
fldl
mov
xor
hlt
lods
sub
or
cmpsl
xor
outsb
ljmp
pop
mov
test
dec
lock
jb
push
outsl
mov
and
outsl
mov
out
fstpl
adc
cmp
jbe
push
add
cmp
data16
push
fldenv
subb
outsb
popf
hlt
push
inc
mov
ret
outsl
push
fidivrs
inc
sub
aad
mov
testl
mov
mov
pop
mov
out
cmp
call
xor
imul
es
pop
aam
loop
lds
repz
jg
rclb
test
jb
ss
es
sbb
hlt
add
mov
cmp
rcl
add
jl
out
sahf
jb
xchg
mov
fwait
mov
cmpsl
cmp
inc
xlat
pusha
adc
push
pusha
addr16
es
mov
xor
xor
lds
out
fdiv
mov
idivb
iret
lock
insb
xor
push
movsb
iret
out
movsb
fcompl
stos
adc
mov
xor
rclb
lods
push
mov
sbbl
and
mov
adc
push
cmp
test
imul
out
fnstcw
inc
jecxz
out
xor
bound
fcoml
mov
pop
mov
push
sbb
out
cltd
loope
out
mov
push
arpl
dec
mov
sbb
js
stc
into
outsb
je
push
addr16
fsts
nop
fwait
scas
cs
loope
out
sbb
pop
leave
and
cmp
out
jo
ror
add
movsb
inc
dec
repz
cld
mov
or
decb
sub
clc
push
aaa
popa
mov
inc
push
pop
into
push
iret
cli
mov
sub
mov
shrl
hlt
cmp
dec
xlat
ljmp
mov
sar
cs
xchg
in
sub
sbb
adc
inc
mov
and
daa
mov
xchg
inc
add
pusha
mov
add
bound
add
sub
pushf
shlb
add
jle
out
cmp
pop
xchg
mov
add
cmp
outsl
push
sbb
mov
xor
mov
shr
sbb
js
repz
movsb
xchg
notb
push
call
popa
pop
out
adc
cmpsb
in
sbb
jns
xchg
pushf
add
push
push
imul
cmp
sub
dec
popf
int
dec
xor
sti
pop
insl
ds
mov
adc
cmpsl
mov
sub
push
jb
in
push
pop
addr16
lea
outsl
divl
in
scas
fimull
jo
pop
push
mov
add
xor
push
insb
mov
jo
jae
push
stos
sbb
xor
jo
pop
add
fistpll
lods
sub
int
negb
iret
outsl
lds
imul
sti
fbld
test
ret
fwait
jne
frstor
adc
mov
and
mov
or
mov
jno
mov
test
ret
aas
mov
movsb
out
mov
lock
insl
ret
xor
notb
std
mov
data16
mov
and
or
mov
arpl
pop
lods
cmp
js
in
xchg
inc
sti
add
movsb
cld
add
xchg
inc
dec
mov
push
xor
push
test
ret
inc
popf
shll
pop
cmp
pop
orb
xchg
or
cld
test
dec
mov
xor
dec
repz
rcrl
mov
mov
add
popf
scas
dec
sub
pop
inc
cmp
fcmovu
jnp
ja
mov
cwtl
shll
cwtl
mov
lods
cmpsl
push
mov
sbb
mov
push
rolb
das
pushl
test
ret
fs
xchg
in
imul
sub
mov
pop
fdivr
ljmp
and
jno
sbb
mov
adc
xchg
test
fldt
adc
out
int
dec
cmp
fsts
xchg
jae
add
inc
adc
cmp
scas
out
popa
mov
push
aaa
nop
add
adc
into
insb
sub
aas
fiaddl
clc
fiaddl
nop
gs
insb
call
test
subb
clc
push
int
add
inc
mov
imul
xor
addr16
mov
mov
nop
lods
mov
in
test
arpl
xor
cmpsb
iret
or
addl
or
cmc
bound
mov
fstl
sbb
xor
pushf
fcompl
and
popf
lret
adc
icebp
call
je
sub
cmp
popa
loop
pop
dec
sbb
mov
mov
push
or
std
jl
pop
xor
shlb
loop
pop
pop
xchg
enter
sahf
xor
push
pop
pop
insl
mov
dec
dec
test
adc
mov
mov
hlt
scas
test
pop
pop
jbe
adc
add
push
jns
or
sub
rorl
jg
std
mov
subb
je
adc
ss
imul
sub
cmp
mull
cmc
xchg
insl
fwait
adc
mov
in
and
enter
sub
out
clc
gs
jb
inc
shll
xor
push
jnp
idiv
aam
mov
add
ret
dec
mov
pop
out
xchg
mov
in
stos
adc
adc
add
cmpsl
push
adc
cmpsl
add
enter
sbb
or
and
loopne
mov
xor
rol
mov
pop
scas
lock
mov
lret
pop
lret
adcb
les
int
test
pusha
pop
pusha
movsb
subl
mov
inc
mov
in
cmpsb
jo
dec
pop
ja
lcall
lret
pop
xor
enter
cmp
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
gs
arpl
xchg
xlat
cld
xchg
aaa
in
sbbb
or
jns
loopne
dec
mov
es
add
or
leave
imul
out
jge
jmp
adc
sub
std
cmc
fildl
cltd
push
mov
lcall
add
inc
std
jl
popf
xlat
mov
inc
jb
pop
outsl
fmuls
addr16
mov
pop
rorb
cmpb
mov
push
xor
adc
xor
jmp
out
adcl
push
sub
sti
jle
push
std
cmp
sub
clc
sbb
dec
xchg
mov
lcall
push
daa
fbstp
rorb
xchg
out
stc
push
aas
xor
cltd
mov
xchg
jae
xor
jecxz
hlt
and
imul
shrl
mov
sub
fidivrs
push
jg
popf
cmp
test
sbb
mov
lods
add
rclb
out
mov
loop
imul
and
lds
test
and
push
sbb
push
jb
xchg
add
test
roll
mov
inc
xor
movsb
jae
sub
push
out
ds
addl
lcall
divb
int3
mov
pusha
mov
dec
sbb
test
mov
and
inc
add
push
push
shl
xor
bound
xor
test
cmp
dec
xorb
in
sbb
addr16
inc
daa
sub
xchg
arpl
push
and
push
and
bound
adc
fmull
sub
or
cmp
jns
push
jmp
lret
and
incl
or
aad
push
jmp
add
add
add
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
