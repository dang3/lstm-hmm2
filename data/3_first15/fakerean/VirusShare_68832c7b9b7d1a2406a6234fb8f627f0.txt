jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
shll
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
mov
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
in
fwait
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cli
mov
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
mov
inc
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
fwait
mov
add
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
pop
scas
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
test
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
jge
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cltd
lods
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
cmp
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
shlb
pop
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
out
lahf
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
aaa
xchg
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
mov
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
xchg
inc
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
outsb
mov
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
push
mov
add
push
and
mov
movl
movl
movb
mov
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
lahf
inc
add
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
xchg
inc
add
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sub
popf
adc
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
call
mov
add
mov
cwtl
add
pop
jmp
fstps
flds
incb
add
roll
stos
mov
bound
mov
mov
add
fcomps
in
add
mov
add
add
add
cmpsb
add
mov
icebp
rolb
add
xchg
data16
mov
mov
jns
leave
mov
call
push
jne
add
add
jae
xchg
popf
lea
cwtl
add
lods
mov
add
addb
out
std
jle
pop
add
add
rolb
fs
lcall
out
mov
add
imul
add
push
mov
mov
add
aad
mov
cmpsl
into
cld
add
mov
push
add
mov
add
add
add
push
mov
pop
repnz
mov
add
push
push
lea
push
call
fs
pop
push
jmp
add
add
add
js
mov
ljmp
jge
les
shrb
add
add
xchg
in
jae
into
stc
add
jnp
add
add
xchg
jp
cltd
test
mov
stos
or
fwait
icebp
add
add
add
add
xchg
push
jmp
jno
mov
in
loop
add
mov
add
sahf
scas
add
add
add
pop
movl
push
push
push
lea
push
call
lods
ljmp
add
je
sti
add
cwtl
lret
pushf
mov
add
add
popa
mov
add
push
mov
push
pop
mov
gs
add
cld
add
add
add
fistpll
fs
mov
into
leave
add
push
add
mov
add
les
add
add
add
add
pop
popl
push
push
call
jns
fiadds
mov
jmp
nop
imul
shlb
add
xchg
les
pop
mov
xchg
loopne
roll
iret
rolb
mov
out
add
push
add
int
add
pop
add
jl
loope
xchg
jmp
jmp
add
jp
mov
in
add
xchg
add
mov
add
pop
add
cld
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
movsb
clc
add
addr16
jge
push
enter
insb
add
add
cltd
cld
mov
pop
add
cld
add
xchg
arpl
mov
jecxz
add
add
push
add
push
rorb
ror
add
lret
outsl
fldl
add
mov
fcmovb
roll
addb
pop
stos
mov
add
add
add
mov
push
jbe
test
mov
lea
pop
push
call
call
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
sar
add
outsl
jne
testb
add
jo
add
jae
add
lods
stos
add
leave
std
add
jno
add
pop
xchg
add
add
add
mov
in
mov
jbe
jne
add
mov
add
add
add
add
fdivrs
xlat
pop
add
jns
pop
add
aad
pop
add
out
lcall
insb
mov
lea
pop
push
call
push
push
lea
push
call
add
xchg
js
in
push
clc
mov
loop
rolb
jmp
mov
jmp
mov
add
in
add
cld
xchg
cld
test
rolb
popl
add
add
addl
fldl
xchg
add
pop
add
int
push
fwait
add
lods
add
add
mov
add
add
add
pop
jmp
ret
mov
push
push
call
hlt
mov
mov
add
add
add
push
je
add
fiaddl
lahf
lea
clc
jbe
sbb
pop
sahf
add
jp
lahf
test
add
add
xlat
mov
loope
pop
add
add
add
arpl
add
out
add
add
arpl
mov
addb
out
mov
lea
pop
mov
add
add
push
push
push
push
push
lea
push
push
push
push
push
call
bound
add
mov
pop
mov
xchg
fadds
add
cli
fildl
jnp
mov
add
addl
scas
add
scas
movsb
add
pushf
jle
add
call
cltd
out
lock
add
add
add
add
scas
add
fstps
mov
out
add
add
je
gs
imul
add
mov
jp
add
mov
lea
pop
add
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
rcl
mov
lods
add
add
pop
push
add
addb
ljmp
push
out
int
hlt
pop
call
add
out
rolb
ljmp
popa
ret
add
add
mov
rolb
add
fld
push
pushf
pop
add
mov
jge
add
mov
clc
add
mov
lea
pop
mov
push
push
push
push
push
call
add
sahf
add
idivl
bound
mov
pop
add
outsl
add
add
mov
lods
add
add
scas
jnp
into
loop
lea
lds
add
mov
mov
add
xchg
add
test
add
ffree
add
xlat
add
add
add
add
stos
cwtl
add
mov
lea
pop
xor
push
push
push
push
call
add
add
bound
test
add
add
jmp
add
std
add
movsb
into
add
add
mov
jae
add
add
push
arpl
mov
add
add
mov
add
scas
add
add
add
add
movl
mov
mov
push
enter
aam
add
clc
call
pusha
adc
les
lea
push
lea
push
lea
push
push
push
push
push
call
add
pop
add
loop
pop
lock
mov
outsl
add
mov
js
add
js
jae
popa
add
add
lock
add
jmp
repnz
add
add
add
mov
add
mov
add
stos
test
mov
add
mov
add
add
xchg
out
sbbl
addr16
mov
add
add
mov
lea
pop
add
push
push
push
push
lea
push
push
call
add
out
jo
fcom
fadds
mov
stos
andb
push
mov
add
pop
xchg
pop
fdivrl
lods
add
push
in
add
lock
push
clc
rclb
add
lods
push
shr
rol
mov
loopne
hlt
pop
add
int3
lea
pop
call
push
lea
push
push
call
add
add
add
out
mov
add
jl
add
jae
add
add
mov
jp
add
add
les
sarb
pop
mov
lahf
jnp
out
add
mov
mov
add
pop
jb
push
add
in
ret
addl
movl
add
add
in
add
add
pop
mov
xor
push
push
sub
rol
push
push
pop
add
xor
xor
lea
sub
shl
not
add
pop
shr
shl
dec
add
pop
push
lea
push
push
lea
push
push
push
call
add
leave
mov
sahf
add
in
les
leave
add
add
jl
ret
int3
sar
add
pop
add
push
add
faddl
arpl
fists
add
mov
loop
add
mov
jae
data16
add
jl
add
add
lret
add
insb
add
jns
in
add
xchg
mov
mov
add
mov
add
add
pop
pushl
push
push
push
lea
push
push
push
call
test
add
add
push
mov
add
add
mov
add
fldl
outsl
xlat
add
imulb
sti
add
add
imulb
call
shl
add
add
sahf
add
add
add
rcrl
pop
and
mov
add
add
add
add
add
lds
push
arpl
add
lea
cmpsl
add
lea
pop
call
mov
movl
push
push
push
push
push
call
cltd
mov
loop
add
add
leave
iret
scas
out
xchg
stos
cltd
add
xchg
add
jecxz
cli
add
add
add
scas
add
shlb
mov
out
xchg
add
mov
add
mov
add
add
add
lods
je
ljmp
shrl
roll
add
lahf
int3
mov
lea
pop
lea
push
lea
push
push
call
push
add
mov
push
add
movsb
cltd
add
popf
je
jbe
ja
add
add
add
mov
add
pop
add
sti
add
test
add
add
xchg
movsl
fs
add
add
out
add
mov
add
mov
push
mov
mov
add
add
pop
add
add
jb
fmull
pushl
pushl
push
push
lea
push
lea
push
push
lea
push
call
sahf
add
sar
add
rolb
ret
orb
int3
add
pop
popa
add
add
pop
pop
pop
add
xchg
loopne
lods
add
add
scas
xchg
add
add
shr
push
jle
xchg
add
add
in
mov
push
add
add
add
loopne
filds
notb
add
sarl
mov
add
pusha
sbb
enter
push
push
push
push
lea
push
push
push
call
imul
jle
enter
add
add
xlat
add
jne
popf
mov
addl
mov
lea
aad
jp
mov
lcall
lahf
fwait
scas
xchg
popf
data16
add
add
mov
movsl
lds
loope
add
into
test
add
add
push
out
xchg
mov
add
cwtl
pop
testb
lock
mov
lea
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
call
int
add
add
add
lock
jno
scas
aad
lods
into
mov
ljmp
add
add
add
rolb
mov
push
add
add
add
add
movsb
add
mov
jmp
mov
lods
cmpsb
fwait
jge
add
nop
cmc
add
aam
add
add
add
add
add
rorb
pop
pushl
call
push
push
lea
add
ror
push
and
add
dec
lea
sub
shl
pop
shr
xor
pop
push
push
lea
push
call
lret
add
add
add
mov
scas
mov
add
cmpsl
cmpsb
jnp
add
add
mov
popa
push
jbe
add
add
std
pop
add
mov
clc
into
fadds
loope
in
je
push
std
add
xchg
pop
add
add
add
jmp
add
add
cltd
cltd
mov
lea
pop
pushl
call
push
push
push
add
push
sub
add
dec
sub
shl
ror
pop
sub
ror
dec
pop
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
push
add
add
data16
xchg
add
push
mov
lret
add
ljmp
add
xchg
jae
cld
add
js
pop
outsl
add
add
fcmovnb
push
add
add
jmp
ja
mov
add
cmpsb
add
test
roll
mov
pop
hlt
cmc
add
add
mov
shll
hlt
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
out
addr16
pop
fstpt
mov
js
fbld
add
add
aad
insb
add
mov
add
xchg
add
add
add
add
add
rolb
add
add
jbe
add
mov
add
add
add
jne
pop
add
pop
fildl
popl
nop
mov
sub
add
rorb
xchg
jae
push
push
push
push
call
add
add
add
divb
int3
cmpsl
filds
movl
xchg
add
jle
data16
push
lods
loop
ret
add
out
add
add
pop
mov
ficoml
add
out
data16
add
mov
arpl
roll
add
add
add
xchg
push
fildl
mov
lods
cmc
mov
sub
in
scas
mov
lea
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
loopne
cltd
xchg
push
add
popa
pop
and
scas
add
add
jmp
cli
add
jl
test
in
push
add
add
bound
fiaddl
push
cmpsl
push
push
scas
cld
add
cmpsb
data16
jo
loope
add
pop
xchg
int
popa
aam
add
push
jle
pop
stos
flds
scas
pop
jae
mov
addl
ja
mov
fadds
add
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
jne
push
add
jae
mov
add
add
add
fsubrp
add
cld
pop
mov
mov
add
add
test
add
leave
out
add
add
add
cli
add
popf
shll
mov
xchg
mov
add
stos
add
add
jno
xchg
test
mov
in
hlt
lea
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
scas
add
add
jne
xchg
add
add
cwtl
cli
outsl
add
add
add
jbe
add
mov
out
std
mov
add
incb
add
jns
add
stc
mov
out
cmc
add
push
pop
add
pop
add
jmp
add
add
add
add
lea
add
add
clc
in
add
rcr
fnstcw
bound
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
push
iret
orl
add
add
add
fs
stos
lret
loopne
jnp
mov
mov
add
lods
ret
add
lahf
add
fimuls
add
addl
movsb
add
jae
add
mov
add
add
test
jl
js
scas
pop
sarb
std
ljmp
orl
add
mov
push
push
push
push
lea
push
lea
push
push
call
loopne
add
sahf
add
pop
imulw
fadds
add
mov
addb
add
cmc
loop
vpcmpeqd
add
in
add
add
pop
scas
popf
add
jp
fnstcw
pop
add
cltd
add
mov
mov
mov
xchg
les
lea
je
add
add
jne
xchg
add
test
mov
lea
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
call
popa
mov
add
xlat
xchg
jp
fisttps
je
int3
add
add
lock
out
add
pop
add
ja
out
xchg
pop
xchg
lret
add
stc
add
jb
add
into
stos
pusha
popf
add
lds
filds
add
add
add
cmpl
pop
add
add
add
pop
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
push
jns
rcrl
fiaddl
add
xchg
clc
add
add
push
in
pushf
mov
fcmovnb
lcall
js
add
xchg
outsl
add
lods
add
add
sti
lret
stos
out
xchg
add
cltd
je
add
pop
jne
add
push
add
mov
push
lea
pop
add
push
lea
push
push
push
push
lea
push
call
rol
scas
add
add
pop
cltd
leave
lret
add
lcall
add
jo
push
add
xchg
mov
add
pop
add
ja
add
out
sti
add
mov
lock
add
add
jle
jecxz
add
add
and
add
add
lea
pop
push
mov
push
push
push
lea
push
push
push
push
push
call
icebp
mov
arpl
add
xchg
add
add
add
mov
mov
cmc
cld
js
les
cmpsl
into
nop
out
jne
add
mov
add
add
stos
loope
add
ljmp
mov
pop
add
add
push
mov
in
out
add
add
jle
les
add
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
les
lret
mov
mov
jo
add
add
addb
stos
loope
add
mov
andb
movl
sahf
add
test
add
addb
add
mov
lahf
jbe
jl
add
and
lret
pop
lcall
jp
or
call
cmc
lahf
add
pop
stc
mov
lea
pop
add
push
push
push
lea
push
push
push
push
push
push
push
call
fwait
lret
mov
add
mov
jle
add
mov
addb
xchg
out
sahf
in
testb
add
jecxz
xchg
mov
in
add
stos
mov
mov
lods
add
in
in
jae
mov
andl
outsl
lahf
mov
fs
jecxz
call
add
arpl
add
mov
lea
pop
add
push
push
push
push
push
call
cmpsl
mov
add
add
add
jb
jbe
jl
add
push
add
add
add
lcall
add
jo
jl
sarb
add
add
in
lea
mov
rcrl
add
add
mov
out
mov
xchg
pop
fadds
lret
lcall
popf
clc
mov
pusha
test
mov
pusha
adc
pop
push
push
push
push
push
push
push
push
lea
push
push
call
je
add
jo
add
add
frstor
rolb
push
mov
cmpsb
mov
mov
imul
jae
xchg
add
add
add
aad
jne
jo
add
mov
out
add
xlat
add
add
in
add
addb
add
scas
lret
data16
push
push
xlat
add
add
fstl
add
loopne
mov
hlt
lea
pop
mov
push
push
push
push
push
call
mov
add
faddl
nop
add
mov
mov
scas
test
jae
add
popf
xchg
jle
mov
push
movsb
push
add
add
aam
aad
add
mov
in
add
loopne
push
mov
add
add
add
xchg
add
add
lock
mov
add
int
xchg
aam
add
rcr
add
pop
xor
push
push
push
lea
push
lea
push
push
push
call
call
insb
fs
pop
add
loop
add
push
cmpsb
mov
pusha
sti
data16
jl
enter
mov
jp
add
iret
mov
ret
mov
jbe
add
push
add
xchg
int3
mov
call
pop
loop
jnp
cli
add
mov
lea
pop
add
push
push
lea
push
lea
push
call
push
jbe
add
add
ljmp
popa
faddl
add
ja
lret
add
mov
add
jbe
add
add
pop
loopne
fisubs
pop
add
xchg
jbe
add
stc
arpl
mov
add
fisubs
enter
add
add
outsl
mov
add
push
mov
push
mov
mov
cld
lea
pop
push
mov
xor
push
push
push
push
call
sti
add
loopne
int
lea
add
add
add
jo
add
lahf
xchg
test
shl
lds
push
add
jae
jle
loopne
push
add
outsl
add
add
add
stc
add
add
addb
ja
add
add
add
mov
mov
lea
pop
sub
push
lea
push
push
call
in
add
pusha
js
push
add
loope
add
add
push
add
int3
xchg
lea
in
pop
lret
pop
lock
push
add
stos
popf
lcall
add
lcall
bound
popf
add
add
add
iret
add
aad
popa
jp
in
out
imul
add
xchg
pop
add
jne
lods
mov
xchg
cli
mov
add
jle
xchg
or
pop
rep
pop
push
lea
push
lea
push
push
call
test
jmp
add
push
mov
add
add
mov
testl
test
add
add
add
add
out
add
roll
shlb
push
add
add
ljmp
add
lods
enter
loop
add
xchg
stos
add
xchg
fldt
fildl
add
repnz
jne
jmp
lock
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
in
add
add
ljmp
add
jge
jle
loopne
add
mov
pop
add
fwait
add
shl
push
add
addr16
jb
add
lods
add
add
add
add
rorl
add
into
mov
add
mov
add
mov
imul
and
add
push
lea
push
call
jp
mov
fmulp
fbstp
flds
std
add
add
mov
add
add
ja
out
mov
lods
add
push
frstor
add
mov
add
add
cmc
in
add
call
mov
add
addl
insb
pop
mov
jecxz
mov
jne
jbe
xchg
push
add
hlt
lea
pop
add
add
mov
push
push
push
push
push
lea
push
push
push
push
call
add
pop
iret
jl
push
addb
jne
add
cwtl
add
add
add
add
in
insb
add
jo
add
add
add
negl
add
imul
add
add
std
leave
jo
add
jp
jns
stc
imul
lret
jl
cld
mov
cli
adc
imul
popf
fdivrs
fldl
add
into
pop
pop
xor
push
lea
push
push
push
push
push
push
push
call
cwtl
sti
add
add
add
mov
jecxz
scas
add
add
lret
add
lea
push
fistpll
add
scas
add
mov
add
add
mov
in
add
insb
add
test
add
push
in
add
aad
add
in
mov
fiaddl
mov
mov
lahf
nop
jl
movsb
xchg
add
mov
lea
pop
add
push
push
push
push
push
lea
push
call
add
add
cmpsl
test
add
clc
xchg
pop
push
add
insb
pop
in
pushf
xchg
int
iret
cmc
lods
mov
add
add
add
add
les
pop
add
add
movsl
add
cmc
mov
jae
jne
mov
push
add
fwait
rcrl
test
in
mov
cld
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
imul
push
add
add
push
add
add
jbe
push
jb
fldl
add
add
je
lea
test
les
mov
mov
pop
jge
lcall
pop
add
jge
pop
jo
pusha
jns
add
add
cmpsl
in
movsb
pusha
add
call
mov
xchg
add
add
push
add
add
int3
lea
pop
xor
push
push
push
push
push
push
lea
push
call
pusha
add
jge
js
mov
pop
xchg
rolb
jge
jbe
mov
cmp
add
lods
hlt
out
lcall
add
enter
add
mov
lcall
addl
int
mov
mov
pop
mov
mov
stos
add
in
addb
cld
lea
pop
add
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
push
add
jecxz
add
add
subl
jmp
mov
add
stos
cmpsb
addr16
and
sahf
movb
add
pop
in
mov
jbe
add
rcrb
mov
ja
arpl
in
add
movsb
hlt
mov
add
mov
std
push
add
xchg
cld
add
add
mov
sahf
mov
add
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
call
push
mov
add
scas
add
lock
add
bound
add
lea
mov
les
add
loope
add
add
arpl
cmpsb
add
push
add
sti
out
mov
mov
pop
add
add
mov
xlat
test
cmc
add
fistl
add
movsb
scas
bound
lret
add
add
pop
xor
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
in
mov
add
mov
xchg
xchg
hlt
aad
xchg
add
pop
jmp
mov
xchg
sub
add
mov
add
jns
add
mov
xchg
clc
push
add
movsb
mov
add
add
fidivl
add
test
add
xchg
mov
fdivrs
leave
add
jno
addr16
add
mov
lea
pop
add
push
push
call
add
mov
int
stc
mov
add
imul
bound
mov
add
ljmp
mov
mov
push
outsl
mov
out
hlt
mov
add
call
sub
sar
in
movsb
or
mov
nop
push
int
movsl
add
add
lods
add
stos
loopne
aam
add
mov
stc
add
cli
mov
or
ret
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
add
movsl
jle
pop
add
in
add
repnz
mov
sahf
add
xchg
imul
add
add
mov
add
loopne
movsb
add
add
scas
movsb
cli
add
stos
add
xchg
add
add
add
mov
add
jns
mov
add
icebp
mov
add
les
fsubrs
sbb
rclb
shl
dec
push
push
pop
add
inc
add
sub
ror
inc
pop
xor
pop
pushl
push
lea
push
push
call
in
mov
les
lds
std
add
mov
add
add
add
jno
add
ret
push
addr16
push
call
add
imul
xchg
add
add
popa
mov
add
into
add
xchg
lret
mov
add
stos
call
add
add
scas
mov
xchg
mov
add
pop
call
push
push
push
push
push
lea
push
lea
push
push
push
call
jns
nop
mov
mov
add
push
xchg
out
mov
add
push
pop
fcoms
fcmovb
push
rcrl
mov
mov
add
mov
add
cwtl
add
iret
add
add
add
call
add
int3
int3
flds
aad
test
leave
add
cltd
addr16
aad
mov
add
mov
aam
bound
push
push
push
sub
ror
rol
push
or
inc
add
dec
inc
ror
sub
sub
not
pop
lea
pop
push
lea
push
push
lea
push
push
push
push
call
mov
insb
scas
mov
mov
arpl
hlt
push
cmpsl
add
add
lock
add
add
jae
clc
jo
add
jo
cmpsb
lahf
in
add
jp
loopne
push
jmp
js
add
pop
push
add
add
loop
roll
add
aad
cli
roll
mov
mov
mov
negb
mov
mov
jecxz
add
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
cld
add
pusha
add
mov
cmpb
pusha
jbe
stos
add
test
push
repnz
add
loop
add
jge
add
sahf
add
aam
add
aad
stos
mov
push
scas
fwait
cmpsb
div
add
add
into
in
add
test
arpl
movsl
push
jmp
in
in
addr16
rcll
add
add
add
enter
add
pop
push
push
push
lea
push
push
push
call
add
jno
movl
add
imul
pop
jae
add
les
mov
add
sar
loopne
add
int3
add
mov
push
lret
add
add
add
add
add
add
jns
add
clc
mov
add
in
mov
jmp
les
add
add
pop
call
push
push
push
push
call
movsb
add
pop
popf
lret
out
rolb
leave
add
mov
add
add
int3
sahf
enter
add
test
add
scas
flds
push
push
cmc
roll
mov
mov
pushf
jmp
add
mov
add
mov
add
add
add
add
add
repnz
add
jle
out
je
mov
ljmp
in
add
adc
clc
push
push
lea
push
call
arpl
testl
add
add
push
add
add
add
popf
imul
cwtl
jns
add
mov
xchg
out
add
mov
pop
aam
add
add
je
xchg
add
add
add
add
add
jns
movsl
mov
lea
pop
push
push
mov
push
push
push
push
lea
push
push
push
call
mov
add
jno
add
add
mov
loopne
cmpsb
jge
jecxz
scas
mov
fidivl
rol
jo
je
mov
add
add
jnp
jns
ljmp
lcall
shll
pop
cmpsb
aad
movsb
add
add
sahf
stc
mov
out
push
add
add
add
sbb
add
add
push
ror
pop
add
mov
push
push
push
push
push
lea
push
lea
push
call
add
xchg
lock
add
add
lret
ljmp
mov
imul
add
push
icebp
mov
add
add
add
add
add
push
call
pop
add
out
cwtl
add
mov
add
add
add
add
push
add
push
data16
add
add
pop
fsubr
add
add
aam
bound
pop
xor
push
push
push
push
push
push
call
rcl
mov
add
roll
add
mov
mov
add
out
add
add
movl
mov
cli
add
add
cltd
mov
push
rclb
pop
add
mov
mov
movsb
add
loopne
test
lods
add
add
imul
outsl
add
lods
xchg
mov
add
icebp
jno
outsl
faddl
add
add
pop
add
pop
add
push
pop
add
push
push
lea
push
push
call
pushf
mov
add
add
mov
add
loopne
fidivl
mov
sti
add
add
jne
je
xchg
add
add
add
fdivp
in
add
roll
int3
push
add
add
into
int
addl
lret
add
lds
add
add
adc
mov
xor
push
push
call
rcll
add
roll
add
std
add
add
aam
ret
cli
jp
add
push
lds
add
mov
stc
add
jns
mov
pushf
bound
add
pop
lahf
mov
lcall
add
add
add
ja
mov
add
fidivrs
add
add
add
add
loope
mov
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
call
stos
in
repnz
jge
jne
jmp
add
sahf
xchg
xchg
in
xchg
lret
mov
add
test
mov
rolb
add
add
add
add
add
bound
fwait
add
int3
mov
fadds
mov
lods
add
add
test
aam
bound
pop
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
push
add
call
add
cld
add
xchg
cmpsb
mov
jno
add
add
mov
add
jo
mov
jl
add
cli
add
pop
mov
mov
les
push
iret
add
popf
bound
test
icebp
fwait
add
lock
mov
add
add
shll
mov
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
mov
add
add
rolb
ret
enter
add
add
xchg
cmc
add
push
lahf
add
add
mov
jp
xchg
xchg
xchg
jae
not
out
add
icebp
add
jmp
add
popl
add
icebp
add
pop
jge
jle
add
mov
add
movsb
add
movl
add
add
fwait
add
xchg
pop
in
jae
cld
lea
pop
add
push
push
push
lea
push
push
lea
push
push
call
jne
xchg
test
imul
add
adcl
add
add
add
jmp
add
jno
add
add
add
roll
add
jp
jmp
arpl
xlat
add
add
jnp
add
add
scas
sti
fiaddl
add
into
add
sbb
rep
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
loopne
mov
lahf
addb
roll
add
add
add
rolb
add
popf
add
add
add
mov
fiaddl
push
add
faddl
addl
jbe
cli
jp
stos
mov
add
stc
push
add
rcrl
add
cmpsl
add
fcompl
mov
imul
hlt
mov
add
sti
add
pop
loopne
add
add
cli
add
addb
hlt
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
into
add
add
fldl
add
add
jl
add
movb
data16
loope
pop
add
add
decb
lret
add
add
mov
xchg
mov
ljmp
add
mov
add
add
mov
faddl
jecxz
mov
add
fbstp
pushf
add
sub
or
push
push
push
push
push
push
push
push
call
add
add
add
fsubl
roll
sahf
cld
add
mov
mov
mov
nop
add
jb
cmpsl
mov
add
loop
nop
add
add
push
mov
pop
pop
pop
popf
add
cli
lea
add
xchg
add
jnp
jne
mov
add
add
push
push
add
add
cmpsb
add
add
std
xchg
add
jae
mov
lea
pop
add
push
push
lea
push
lea
push
push
call
add
add
push
add
add
jge
into
incb
mov
add
add
fiadds
movl
pop
add
scas
add
add
add
mov
add
rolb
xorb
add
add
add
ret
add
cld
mov
lret
mov
jne
clc
add
add
add
aam
jl
in
add
fisttpll
pop
or
je
mov
xor
push
sub
rol
pop
mov
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
in
add
mov
add
add
push
add
cmc
out
push
add
jecxz
addl
mov
jns
fistpl
ficoml
xchg
add
add
add
add
jmp
push
sti
rcr
push
add
add
mov
mov
int
sbbb
mov
xchg
pop
iret
lret
add
jge
add
sub
repnz
push
lea
push
push
push
push
push
call
in
add
nop
mov
mov
call
jge
add
jo
int3
add
cltd
xchg
add
mov
jge
mov
add
push
add
jbe
rcrl
fnsave
rclb
scas
add
pushf
sti
test
scas
mov
shlb
mov
enter
test
add
add
movsl
add
mov
pushf
fwait
nop
call
add
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
jo
cwtl
mov
add
add
shll
push
cld
jmp
stos
push
scas
sti
popa
repnz
repnz
test
movsl
in
push
les
add
add
mov
mov
rol
leave
add
mov
add
sar
xchg
clc
add
jns
add
pop
xacquire
jp
push
add
movl
pop
sahf
imul
add
mov
lea
pop
mov
xor
add
push
ror
pop
pop
rep
mov
xor
push
push
push
push
lea
push
push
call
add
aad
mov
add
addr16
add
pop
add
add
in
shlb
imul
xchg
mov
loopne
add
fdivrp
add
jo
add
push
add
add
add
aam
add
add
mov
lcall
int
fucom
add
jno
lahf
aam
add
mov
lea
pop
or
je
push
not
pop
mov
push
ror
add
lea
pop
add
add
rep
push
sub
pop
pop
push
push
shl
ror
push
push
pop
add
add
shr
shl
add
sub
lea
pop
pop
push
lea
pop
pop
mov
mov
push
sub
pop
mov
push
dec
xor
add
pop
jmp
push
sub
lea
pop
push
push
push
lea
push
push
push
push
call
lahf
xlat
add
jp
push
fs
lock
aad
mov
add
in
add
jne
add
mov
mov
lods
add
mov
add
stos
mov
add
push
add
jo
rolb
mov
mov
test
lds
add
add
add
xchg
pop
hlt
add
push
add
add
lock
bound
cld
add
add
push
lea
pop
mov
add
push
dec
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
hlt
mov
add
add
data16
add
xchg
xchg
add
xchg
add
add
mov
aad
jp
test
lcall
adc
flds
ficomps
ja
add
add
jb
add
add
add
jmp
data16
pop
jnp
lods
jl
push
mov
add
lea
pop
push
push
push
not
shr
pop
push
push
push
push
push
push
push
push
push
call
addb
add
add
add
into
imul
add
add
add
add
pop
fs
out
push
add
incb
data16
leave
add
jo
jo
add
fs
add
aad
mov
bound
add
mov
lds
loopne
fnstcw
fdivrl
xlat
add
mov
lcall
add
ja
add
rcll
mov
lea
pop
mov
pop
push
push
push
lea
push
lea
push
push
push
call
fiaddl
cli
add
add
add
aad
imul
xlat
add
pop
add
arpl
mov
in
stos
je
add
cmpsl
mov
mov
les
push
push
neg
add
xchg
fwait
add
push
movsl
mov
push
add
add
mov
add
xlat
add
mov
jne
testl
push
rol
not
pop
leave
ret
push
push
push
push
push
push
lea
push
call
ljmp
add
mov
lock
add
add
gs
loop
fwait
xchg
in
mov
pop
popf
pop
lods
add
push
add
stos
add
cmc
xchg
stos
pop
out
cld
add
mov
lock
fimuls
add
repnz
push
add
pop
xor
jge
mov
mov
jle
add
mov
xlat
mov
add
lea
pop
mov
add
push
push
add
ror
pop
push
push
push
push
push
push
push
push
lea
push
call
lret
in
add
testb
fists
add
ja
lahf
insb
mov
add
int
add
mov
mov
shl
pusha
add
lods
enter
add
add
test
xchg
mov
add
aad
mov
add
mov
mov
add
loop
add
call
les
add
add
cli
jbe
add
cld
lea
pop
movl
addl
test
je
push
add
pop
mov
pop
push
push
push
push
push
call
test
xchg
add
add
add
mov
scas
add
add
add
imul
cli
addr16
jbe
fidivrs
add
push
popf
add
add
lahf
add
add
fistps
add
push
repnz
add
and
mov
roll
add
xchg
add
lock
mov
add
add
add
mov
push
add
jb
jbe
cld
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
call
mov
lahf
mov
add
test
in
mov
mov
add
jbe
imul
nop
popl
add
add
push
mov
std
int3
out
mov
cmc
mov
scas
in
add
icebp
push
je
cmpsl
out
pop
clc
imul
mov
lea
pop
pop
push
lea
push
push
push
push
push
call
pusha
call
add
imul
add
mulb
xchg
pusha
loopne
cwtl
add
add
add
roll
add
add
add
add
lds
lret
add
mov
xchg
add
addl
jl
xlat
scas
lret
add
add
add
jl
fs
add
mov
rolb
add
add
pop
leave
ret
push
lea
not
shr
pop
push
push
pop
mov
add
push
sub
pop
push
push
push
push
push
push
push
push
push
call
movsl
popa
hlt
cli
andb
add
xchg
mov
shlb
add
lods
pop
add
mov
add
arpl
mov
fiadds
add
add
cwtl
add
scas
enter
push
add
pop
shl
jl
add
jmp
out
xorb
fdivrl
jmp
mov
test
add
lcall
add
cltd
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
in
xchg
jmp
movl
in
loop
in
flds
jmp
mov
pop
hlt
add
add
add
add
mov
xchg
test
mov
roll
pop
jb
add
jecxz
clc
push
ja
add
popf
popf
mov
add
call
les
xchg
add
add
test
cwtl
add
mov
lea
pop
testl
addl
push
add
xor
sub
pop
push
call
mov
push
push
push
lea
push
call
add
hlt
add
add
ljmp
in
add
js
ja
call
jl
add
mov
xchg
mov
cli
add
in
add
push
je
jb
addr16
data16
test
mov
mov
add
ljmp
mov
add
lcall
bound
xchg
add
pop
pushl
push
push
push
lea
push
push
lea
push
push
call
pop
testl
test
sbbl
mov
jne
add
pop
ret
test
les
add
add
add
add
loope
loope
enter
add
jp
bound
repnz
outsl
jecxz
mov
jns
add
movsl
mov
add
lods
fnstsw
insb
add
leave
mov
lea
pop
call
push
xor
dec
pop
cmpl
jne
pop
push
shr
sub
inc
add
pop
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
loope
arpl
add
add
add
imul
add
add
add
add
jne
mov
add
jns
add
add
in
test
std
mov
test
xchg
rolb
jecxz
fidivl
into
mov
mov
add
jl
add
lcall
test
fwait
out
in
add
add
lock
pop
mov
lea
pop
leave
ret
push
push
add
sub
dec
pop
mov
add
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
je
into
ret
movb
add
out
add
lds
ror
add
pop
add
add
add
repnz
add
add
jnp
incb
mov
loope
stos
push
fldt
add
iret
loopne
mov
add
mov
add
outsl
roll
outsl
add
add
flds
add
cli
mov
pusha
and
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
lea
add
aam
filds
call
add
cli
add
test
add
add
ja
shrl
add
mov
add
mov
jnp
test
mov
sbbl
add
pusha
pop
add
add
lds
incb
mov
add
add
add
add
mov
lea
pop
push
push
push
sub
inc
sub
pop
push
movl
push
push
add
pop
call
push
push
push
lea
push
push
call
add
cli
add
lahf
add
add
jno
cld
imul
add
add
mov
mov
xchg
popf
add
into
push
leave
jne
add
add
icebp
add
add
mov
rolb
addl
ja
leave
leave
add
jmp
cld
lea
pop
push
push
inc
pop
call
push
lea
not
rol
pop
subl
push
sub
xor
pop
cmpl
jne
pop
push
inc
pop
pop
pop
push
sub
ror
xor
dec
pop
pop
push
rol
not
pop
leave
ret
push
push
lea
push
call
fldcw
push
add
popa
add
add
movsb
add
jmp
aad
add
add
mov
add
add
push
movsl
xchg
add
pop
add
mov
rcrl
add
pop
roll
mov
out
add
scas
add
mov
xchg
add
cmpsl
sahf
add
arpl
addr16
lea
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
push
xchg
add
lods
add
enter
test
filds
mov
jecxz
add
fucomi
add
out
mov
mov
xchg
add
js
add
add
popa
rorb
notb
sahf
add
pop
add
mov
in
test
add
add
mov
jmp
into
lahf
add
pop
add
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
andb
mov
movsb
js
fcmovnu
les
ljmp
add
stc
add
pop
pop
stc
add
xchg
cmc
add
out
push
nop
aam
insb
add
pop
pop
jmp
add
stc
add
add
stos
add
enter
scas
pop
lahf
test
add
mov
iret
xchg
mov
add
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
jbe
pop
add
jp
push
mov
add
mov
add
shrb
add
leave
lcall
jmp
add
xchg
cmpsb
test
stos
mov
addr16
mov
scas
add
js
jge
cmc
add
add
pushf
add
push
add
add
cwtl
add
add
js
mov
movsl
jae
iret
add
rolb
add
addr16
mov
lea
pop
push
push
sub
shr
shl
pop
mov
lea
sub
push
add
pop
mov
shr
push
shr
shr
pop
add
mov
mov
push
inc
pop
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
lea
jecxz
outsl
mov
add
add
mov
je
fcomi
andb
add
ja
mov
add
add
pop
incb
mov
add
mov
push
add
jbe
add
add
add
add
cltd
push
add
lods
add
cli
add
fst
roll
pop
mov
push
shl
lea
pop
mov
push
xor
pop
cmp
jne
push
lea
push
call
cli
test
add
call
add
add
aad
fisubrs
lods
pushf
jo
add
mov
push
imul
out
fldl
add
scas
add
pop
insb
test
add
aam
pop
aad
add
lods
xchg
frstor
loopne
push
add
js
loop
pop
add
add
add
imul
cmp
jne
push
shl
not
pop
mov
movl
push
add
pop
jmp
push
lea
push
push
lea
push
lea
push
push
push
push
call
cmpsb
ja
add
fwait
addb
jae
rolb
pushf
jno
push
icebp
add
add
fisttpl
add
add
mov
add
testl
std
pop
add
add
add
add
mov
test
add
mov
add
add
add
cwtl
add
stc
add
data16
inc
cld
mov
sub
jne
push
lea
push
push
lea
push
push
call
fistpll
mov
add
out
push
mov
mov
ja
add
add
test
add
int
movsl
add
cmpsl
or
je
mov
fwait
xor
mov
outsl
add
aad
add
xchg
lcall
lahf
icebp
xchg
mov
roll
fdivl
in
add
into
mov
lea
pop
mov
push
push
call
loope
mov
push
out
push
fwait
add
aam
std
loopne
add
lret
rcrl
mov
mov
lret
push
push
add
add
data16
add
jo
mov
add
clc
add
mov
mov
lcall
mov
mov
add
cld
add
rcrb
add
jmp
popf
push
mov
add
mov
add
pop
movl
push
push
lea
push
push
push
push
push
push
call
je
aad
add
js
push
addl
add
add
add
add
add
add
into
out
movsl
je
imul
std
add
add
pop
addr16
hlt
add
push
mov
shlb
add
xchg
test
xchg
push
enter
add
xchg
ret
xchg
mov
cmpsb
add
jle
add
jp
movb
out
imul
arpl
pop
jmp
mov
push
inc
shl
lea
pop
mov
push
sub
pop
cmp
jne
mov
movl
push
dec
add
pop
jmp
mov
push
sub
pop
cmpw
jne
mov
movl
push
add
pop
jmp
pushl
push
push
push
push
push
push
push
call
add
mov
mov
pop
add
xchg
add
add
xchg
add
xchg
add
jge
add
push
add
in
mov
in
xchg
add
add
add
lret
mov
stc
add
jmp
test
jno
jo
roll
cltd
roll
mov
out
iret
add
flds
mov
in
filds
add
bound
pop
pop
mov
mov
push
add
sub
pop
mov
push
push
push
or
inc
add
dec
xor
add
add
sub
ror
pop
xor
xor
pop
push
lea
shr
pop
push
call
cmpl
je
push
push
shr
add
push
xor
add
add
sub
shr
sub
add
pop
add
shl
pop
push
not
dec
not
pop
push
push
add
add
lea
pop
call
cmpl
je
push
push
inc
xor
push
sub
add
sub
sub
shl
sub
inc
pop
shl
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
out
xchg
add
add
add
ret
aad
add
test
bound
xchg
add
mov
mov
add
cld
faddl
add
add
xchg
mov
add
mov
add
jno
jo
mov
add
mov
loope
outsl
add
cltd
jl
loop
mov
add
mov
rcll
add
add
in
push
jae
jns
mov
sarb
pop
push
push
lea
push
call
add
add
push
add
fisubrl
mov
nop
add
jnp
fsubs
jne
stos
call
add
add
je
add
add
add
add
mov
xchg
cltd
add
pop
add
mov
mov
outsl
jbe
add
mov
shrl
jne
add
add
cltd
add
add
xchg
add
bound
lods
mov
jnp
jb
mov
lea
pop
call
push
dec
shl
sub
pop
cmpl
je
push
push
push
or
not
add
sub
add
sub
add
sub
dec
rol
pop
rol
add
xor
pop
push
push
lea
push
push
lea
push
call
faddl
add
add
xchg
imul
push
add
pop
cmp
add
add
in
add
mov
stc
push
mov
add
add
fcomps
out
call
xchg
add
add
je
mov
jp
imul
add
add
pop
push
call
push
not
shr
xor
lea
pop
cmpl
je
push
push
shl
dec
push
and
add
not
xor
dec
inc
sub
ror
pop
shl
add
xor
not
pop
push
push
add
pop
call
push
push
lea
push
call
xchg
ljmp
add
mov
add
outsl
push
std
testb
xchg
add
mov
sbb
push
cltd
add
add
fs
cld
out
add
mov
add
mov
nop
add
push
add
push
add
add
stc
add
add
int3
cmc
add
add
js
add
fldl
arpl
add
add
jno
incb
add
add
xchg
cmpsl
les
enter
mov
lea
pop
cmpl
je
push
push
xor
xor
add
push
and
add
rol
sub
add
pop
sub
lea
rol
pop
push
sub
pop
push
call
push
push
lea
push
push
push
call
pop
push
add
add
add
test
cmpsb
popf
jmp
hlt
jecxz
movsb
movsb
add
sti
filds
add
movb
xchg
mov
add
add
popf
outsl
push
add
out
les
add
add
popl
add
lahf
in
add
mov
add
imul
add
mov
push
xchg
add
add
fchs
mov
add
repnz
je
add
fldl
add
add
add
adc
cmpl
je
push
push
dec
push
xor
add
lea
dec
sub
inc
sub
pop
inc
lea
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
xchg
add
push
xchg
cld
add
stos
push
rolb
test
popf
push
scas
out
mov
jp
mov
add
add
call
add
insb
pop
pop
pop
push
call
out
add
mov
cmpsb
stos
fabs
je
add
xchg
fistl
in
mov
pop
add
stc
add
jo
add
xchg
stc
add
test
lret
jnp
rorb
pop
call
push
dec
shl
pop
cmpl
je
push
push
dec
sub
dec
sub
push
push
pop
add
inc
add
sub
not
pop
sub
shl
pop
push
push
shr
pop
call
push
shl
lea
ror
pop
cmpl
je
push
push
sub
shr
not
push
push
pop
add
not
add
sub
dec
pop
shr
pop
push
push
shl
lea
xor
pop
call
cmpl
je
push
push
lea
push
or
inc
add
inc
xor
add
sub
xor
add
pop
add
dec
add
pop
push
lea
push
push
push
call
fsts
out
add
add
imul
cld
jo
out
add
add
add
rolb
cwtl
mov
fists
roll
mov
out
stos
xlat
mov
mov
lret
jp
add
add
mov
lret
js
movsb
push
mov
add
add
mov
test
add
add
add
mov
hlt
add
add
mov
aam
bound
pop
push
call
push
add
pop
cmpl
je
push
push
dec
push
and
add
not
sub
add
pop
sub
sub
pop
push
add
sub
pop
push
push
not
pop
call
push
push
push
push
call
pushf
cld
add
add
add
into
mov
xlat
sti
jbe
pop
addb
imul
stos
fnstenv
fldl
mov
add
add
add
add
add
add
add
add
mov
ret
fstpt
repnz
in
movl
xchg
add
xchg
add
jl
cld
lea
pop
cmpl
je
push
push
dec
xor
shr
push
or
inc
add
lea
rol
sub
ror
xor
pop
xor
shl
pop
push
push
push
push
call
add
fldz
add
enter
add
add
add
add
jl
add
not
jae
mov
add
mov
fdivs
mov
add
add
or
lds
jbe
add
clc
popa
add
add
mov
mov
fs
nop
add
pop
adc
data16
lret
cli
sub
add
imul
push
in
popf
enter
mov
lea
pop
push
push
inc
inc
rol
pop
call
cmpl
je
push
push
xor
dec
push
xor
add
shl
dec
sub
shr
pop
shl
pop
push
lea
push
push
push
push
lea
push
push
call
push
out
cmpsl
shr
mov
std
pop
popf
sahf
pop
add
add
add
push
add
xchg
add
add
add
mov
testb
add
add
fiadds
cmc
incb
add
movsb
cltd
add
jecxz
mov
popf
xchg
int3
popf
out
add
out
xchg
mov
add
movsb
cmpsb
mov
mov
add
add
mov
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
loope
stc
jbe
add
hlt
stos
add
xchg
mov
add
xchg
js
add
pop
into
mov
push
js
bound
add
in
mov
push
add
mov
pop
add
add
add
fs
push
add
jl
int3
rolb
addb
scas
in
jle
arpl
popa
add
insb
mov
lea
pop
call
cmpl
jne
mov
push
shr
shl
pop
movl
push
not
xor
pop
jmp
xor
push
lea
pop
pop
push
lea
push
lea
push
call
add
cld
add
cltd
hlt
mov
add
lods
xlat
add
sar
jns
xchg
add
fsubl
int3
movsb
arpl
imul
call
test
clc
cmc
out
outsl
push
into
xlat
nop
add
ljmp
add
cmpsl
add
xchg
add
push
mov
iret
push
test
mov
mov
lods
jmp
push
pusha
bound
pop
popa
in
mov
lea
pop
pop
pop
push
push
push
push
push
call
add
in
add
mov
add
addl
add
add
add
mov
repnz
add
in
add
jbe
je
add
pop
add
scas
lahf
add
add
loope
cli
out
stos
call
add
add
xchg
add
ror
mov
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
jmp
push
add
add
add
add
ja
push
mov
add
mov
pop
lds
xchg
add
add
add
clc
add
jnp
add
out
rcll
add
fs
push
cmpsl
mov
aad
nop
jb
add
jae
mov
rcrl
hlt
lea
pop
leave
push
push
push
call
add
add
out
rcl
hlt
shrb
add
shrl
add
test
in
add
add
add
hlt
data16
add
add
leave
xorb
hlt
pushf
in
mov
push
add
add
rolb
mov
rcll
add
add
push
jo
add
add
add
pop
ret
push
mov
push
push
lea
push
push
call
add
add
add
jmp
adcb
ljmp
jl
mov
pop
add
rolb
cmpsl
add
add
add
les
rolb
cmpsl
lds
add
add
pop
test
hlt
nop
iret
loopne
add
shll
pop
add
into
xchg
push
add
les
add
add
mov
pop
add
sbbl
hlt
lea
pop
add
cmpl
jne
push
push
shl
dec
ror
push
and
add
shr
sub
ror
pop
dec
add
not
shr
pop
push
push
call
mov
add
add
lcall
xchg
add
loope
pop
fmull
add
add
mov
scas
hlt
add
or
aam
mov
add
add
js
scas
add
nop
add
lds
pop
add
mov
mov
add
ret
sarb
mov
ja
js
test
lret
add
repnz
pusha
add
add
push
imul
les
jne
call
push
push
push
call
add
add
mov
add
add
les
mov
add
push
add
mov
add
pop
add
mov
push
add
push
test
jecxz
imull
int
add
add
stos
add
pop
ljmp
add
add
add
jns
mov
or
push
call
jmp
push
xor
not
pop
cmpl
je
push
push
lea
push
lea
push
push
call
add
in
add
add
jne
add
out
ljmp
arpl
addl
int
add
pop
mulb
add
add
mov
movsb
add
mov
pop
outsl
add
xlat
add
icebp
test
cli
add
push
popl
sahf
add
add
test
fimull
scas
mov
pop
cmpl
jne
push
inc
pop
leave
push
shl
ror
pop
add
pop
pop
push
add
add
lea
pop
pop
push
shl
pop
pop
push
shr
not
lea
sub
pop
leave
add
ret
push
push
push
lea
push
push
push
push
push
push
call
add
js
lock
mov
data16
popf
cld
add
rolb
imul
jb
add
ficompl
add
add
iret
xchg
add
js
mov
add
mov
fcompl
add
add
mov
add
add
add
loope
push
add
add
add
ja
add
add
add
lea
pop
jmp
push
lea
rol
pop
cmpl
jne
push
push
push
xor
add
xor
sub
sub
shr
add
sub
pop
add
pop
push
push
push
lea
push
push
push
push
call
add
add
int
fistl
mov
test
jb
add
pop
mov
add
pusha
stc
mov
add
jne
add
add
mov
int3
add
mov
roll
add
xchg
icebp
pop
js
add
into
add
add
repnz
add
int3
lds
mov
lea
pop
pushl
push
add
pop
call
push
call
push
push
lea
push
push
call
add
test
add
addb
add
jle
jns
repnz
fwait
rclb
shl
xchg
fcmovbe
insb
add
lahf
incb
jl
add
jmp
add
fidivrs
repnz
jp
mov
lods
add
add
add
add
push
add
in
add
mov
jnp
imul
outsl
add
mov
imul
add
add
pop
add
pop
jmp
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
mov
add
rcr
loop
movsl
out
scas
add
cmpsb
add
xchg
add
add
add
xchg
add
jno
add
cltd
dec
add
cli
insb
mov
cli
mov
out
shrl
cltd
mov
mov
add
cltd
add
add
fldt
imul
add
aam
bound
cmpl
jne
push
push
call
les
scas
mov
fucomi
add
add
mov
add
add
add
add
add
popa
popa
add
xlat
add
cld
in
jl
add
cld
test
add
mov
pop
fsubrp
cltd
add
addb
add
xchg
out
add
xchg
fcompl
add
add
or
add
add
mov
push
push
push
xor
sub
push
and
add
rol
xor
sub
lea
pop
xor
pop
push
shl
not
add
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
call
mov
out
cmpsb
push
test
rolb
add
add
shrl
add
lock
add
add
aad
xchg
hlt
mov
int3
out
add
add
lea
test
add
add
add
aam
push
xchg
fadds
aad
add
jle
add
stc
add
pushf
mov
mov
lea
pop
call
push
push
sub
add
push
xor
add
sub
dec
inc
sub
sub
dec
pop
ror
ror
add
pop
push
push
push
push
push
call
arpl
cld
add
jo
add
lds
loope
pop
mov
data16
add
push
add
repnz
pushf
sarb
add
add
stos
test
xchg
sarl
add
andb
pop
int
insb
push
pusha
add
shl
ljmp
pushf
cli
push
mov
add
add
testb
pushl
push
push
push
push
lea
push
call
add
mov
add
add
add
add
mov
testl
xchg
popa
test
add
shl
xchg
fcomp
add
add
test
clc
add
lea
incb
int3
mov
cmp
popl
add
add
scas
imul
add
add
mov
add
bound
call
call
push
push
add
sub
sub
not
push
or
not
add
sub
sub
pop
sub
pop
push
lea
push
lea
push
lea
push
push
call
add
add
lods
test
mov
shr
pop
imul
add
add
add
out
mov
jecxz
add
add
aam
add
mov
aad
xchg
jb
jp
add
xchg
icebp
add
bound
add
out
in
test
add
add
int
pushf
jne
jecxz
loop
add
loopne
cmpsb
jp
lods
mov
lea
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
repnz
lahf
pop
jbe
jno
add
add
add
flds
xchg
scas
push
imul
cmpsl
add
xorl
rol
add
testl
add
enter
mov
add
arpl
notb
fcomps
jmp
jnp
add
xchg
add
push
lock
xchg
mov
ret
add
add
sub
sbb
add
shrb
test
in
push
and
add
sub
rol
add
sub
sub
add
rol
pop
not
dec
lea
pop
push
push
dec
shr
sub
push
xor
add
dec
shr
not
xor
sub
rol
xor
pop
inc
sub
inc
pop
push
not
add
pop
call
pop
push
ror
dec
add
pop
dec
jne
call
push
add
pop
jmp
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
jmp
mov
jp
add
add
add
add
add
add
test
add
mov
xchg
add
gs
jnp
jmp
add
fcmovb
mov
mov
add
mov
mov
cmpsb
push
add
call
fs
in
leave
add
mov
add
movl
aam
bound
pop
call
push
push
inc
push
push
pop
add
ror
add
shr
sub
add
pop
shl
pop
pushl
push
push
push
push
push
lea
push
push
call
add
jecxz
mov
add
add
nop
add
mov
testb
add
test
add
jae
add
push
push
xchg
add
add
data16
add
rol
pop
clc
add
fldl
xchg
fnstenv
add
sahf
add
pop
fiaddl
ffree
add
add
pop
call
push
call
push
inc
shr
pop
mov
lea
push
push
add
lea
push
sub
add
shr
shl
add
sub
shl
shr
pop
shl
pop
push
push
push
lea
push
push
push
push
call
out
lods
lods
add
add
jmp
mov
add
addb
add
add
movb
aam
jmp
filds
shlb
test
add
xchg
jbe
add
test
mov
add
add
pushf
ja
lea
pusha
cmc
add
out
add
mov
add
loopne
pop
addb
test
rolb
add
pop
pushl
call
push
push
push
push
lea
push
push
push
call
mov
mov
arpl
stos
mov
fidivrl
lret
add
repnz
lds
add
js
fwait
cmpsb
bound
cltd
add
iret
aad
add
add
add
add
push
scas
lret
add
add
lret
push
add
mov
add
xchg
add
fmulp
push
mov
loop
enter
add
add
mov
pop
cmpsl
ror
in
int3
lea
pop
push
push
push
call
add
add
add
pushf
add
test
mov
add
cwtl
ja
jle
mov
gs
mov
add
movsl
cmpsb
lret
ja
lret
stc
add
add
jbe
add
into
test
arpl
add
add
push
mov
cwtl
add
scas
stc
mov
cli
add
shlb
stc
add
out
add
mov
lea
pop
call
push
push
xor
add
push
or
inc
add
ror
dec
add
add
sub
not
lea
not
pop
pop
push
lea
push
push
call
imul
add
pop
stc
add
icebp
add
mov
add
jle
add
fnstcw
nop
addl
shrl
lahf
mov
mov
add
mov
push
add
xchg
push
call
arpl
iret
add
add
add
shlb
mov
les
add
mov
lea
pop
pushl
call
push
dec
ror
pop
call
mov
push
pop
lea
push
push
inc
push
sub
add
ror
shl
sub
xor
add
pop
xor
pop
push
lea
rol
not
rol
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
scas
out
shl
add
xchg
jecxz
add
scas
add
stos
pop
add
add
ret
add
add
add
add
xchg
push
int3
add
add
addr16
add
mov
mov
fistpll
add
cltd
stos
pop
add
add
jmp
pop
mull
add
add
jnp
mov
scas
add
push
jp
scas
push
mov
lea
pop
call
push
push
push
lea
push
lea
push
call
addr16
fadds
shrl
mov
int
stc
add
iret
shlb
loopne
add
test
mov
jecxz
add
clc
rcrb
loope
mov
imull
mov
add
xchg
add
imul
push
mov
in
mov
movsb
jae
movsl
mov
lea
pop
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
gs
jae
popa
add
jmp
add
add
add
clc
mov
add
lret
add
push
jp
add
clc
add
int3
add
add
std
fwait
jbe
loope
jecxz
call
rolb
js
lods
mov
jbe
mov
add
jle
ror
add
add
popf
add
add
pop
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
xchg
rolb
add
fldl
push
add
add
incb
shlb
jo
xchg
add
add
add
add
call
add
mov
mov
stc
test
stos
add
out
mov
loop
bound
add
push
jns
cmpsb
imul
add
fcompl
jne
push
push
rol
add
push
or
not
add
sub
ror
add
inc
pop
not
rol
not
pop
push
push
lea
push
push
push
push
push
push
push
call
xchg
movsl
jbe
mov
mov
add
enter
add
bound
out
cmpsb
add
add
add
add
jp
add
add
add
add
arpl
add
jl
fiaddl
add
sti
in
mov
lahf
add
int
mov
icebp
mov
mov
xchg
add
add
sahf
cmpsl
add
fmull
shrb
and
adc
rorb
and
add
add
dec
ror
dec
sub
pop
sub
sub
pop
push
inc
sub
lea
pop
pushl
call
push
push
push
push
call
add
mov
add
xorl
add
aam
out
roll
outsl
movl
jecxz
mov
add
xchg
insb
pushf
mov
fwait
push
jo
mov
add
movb
add
add
gs
out
xchg
add
mov
add
add
add
mov
add
imul
mov
lea
pop
call
push
push
shr
push
xor
add
inc
sub
sub
not
lea
pop
xor
add
shr
not
pop
pushl
push
push
push
call
callw
orl
out
loop
icebp
repnz
movb
mov
imul
movsb
in
add
mov
add
test
mov
jp
ja
add
mov
jmp
pop
pop
pushf
add
icebp
ja
test
stos
mov
int3
hlt
pushf
mov
mov
xlat
imul
add
xchg
add
mov
lea
pop
call
push
xor
pop
call
jmp
pushl
push
sub
dec
pop
mov
push
sub
pop
jmp
push
push
lea
inc
push
or
inc
add
inc
inc
add
sub
add
pop
shl
not
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
out
add
insb
add
test
add
mov
test
cwtl
pop
add
add
cmpsb
mov
lret
aad
add
add
pop
add
in
add
add
add
test
add
jp
xlat
xor
into
pop
mov
ja
jo
popf
orl
stos
add
scas
in
add
add
insb
sahf
add
addb
ret
add
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
call
add
movsl
add
add
add
aad
add
add
mov
shlb
mov
jno
gs
arpl
xchg
add
test
cli
lock
jb
lahf
add
leave
add
movsb
add
imul
add
std
popa
add
add
mov
add
pop
movsb
add
jne
addl
test
push
lods
mov
lea
pop
call
push
push
rol
push
push
pop
add
xor
sub
sub
sub
not
pop
sub
pop
pushl
push
push
push
call
add
add
add
add
mov
test
test
call
push
loopne
sahf
rolb
mov
add
jl
lret
add
add
mov
add
mov
mov
ret
pop
pusha
ljmp
popa
mov
mov
mov
andl
mov
add
test
popf
add
push
lea
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
push
call
push
mov
xlat
movsb
fstenv
shll
testl
add
add
stos
stos
mov
add
mov
mov
clc
jnp
push
add
ret
xchg
mov
add
enter
lahf
fildl
push
movsb
add
add
jp
add
icebp
iret
add
add
mov
add
add
mov
lea
pop
push
call
push
ror
inc
shl
pop
leave
add
push
push
lea
push
call
lea
xchg
js
add
fiaddl
add
add
mov
scas
add
add
add
add
subl
xchg
scas
jnp
add
xchg
add
rolb
add
jp
add
cmpsb
add
test
aad
add
add
popa
xchg
fs
add
add
add
icebp
add
mov
lea
pop
pop
push
push
lea
push
push
push
call
lea
mov
mov
add
add
aam
add
jmp
add
add
fidivrs
cmc
add
jo
out
lahf
mov
add
add
push
arpl
add
add
lahf
pop
add
add
stos
add
add
add
iret
jb
add
add
pop
arpl
movsl
lret
add
aam
add
icebp
lahf
roll
mov
mov
aam
pop
jp
pushf
mov
lea
pop
pop
pop
push
pop
pop
leave
add
push
push
call
faddl
push
push
add
cli
lds
in
js
pop
push
add
int
scas
add
add
add
roll
popa
add
jl
or
fdivl
add
xchg
cmpsl
mov
jae
stos
xchg
jo
pop
imul
filds
pusha
add
add
add
add
lods
mov
mov
add
int3
lea
pop
ret
leave
ret
push
push
push
push
lea
push
call
add
add
add
add
scas
fucom
lahf
lahf
cmpsl
pop
imulb
jecxz
add
lret
lret
rcrb
jecxz
in
add
shll
add
add
add
add
jnp
add
lcall
cwtl
add
rolb
jb
add
add
add
stos
push
add
add
add
add
mov
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
imul
outsl
mov
mov
fsub
mov
jmp
pop
mov
sti
clc
into
fsubs
ficoms
addl
add
add
push
mov
add
ljmp
test
add
testl
int
add
mov
enter
cmpsl
lret
cli
mov
add
rorl
pop
mov
cmpl
jne
mov
push
shl
dec
add
ror
pop
jmp
push
push
push
push
call
push
push
add
add
xchg
incb
mov
add
testb
add
mov
add
into
incb
in
int
add
lea
lahf
popa
mov
cli
cmc
jnp
lods
mov
ljmp
pop
jo
mov
loopne
push
loop
jmp
roll
add
out
out
add
add
pop
xchg
add
mov
lea
pop
mov
and
push
add
pop
xor
push
push
push
push
push
push
lea
push
push
call
add
fdivrp
bound
mov
lret
in
add
mov
popf
mov
les
negl
jle
jne
jbe
add
shrl
test
cmc
push
mov
mov
add
mov
add
lods
add
roll
add
add
add
add
pop
xor
push
shl
sub
pop
add
xor
push
push
push
push
push
call
fdivr
mov
add
cwtl
lcall
loope
add
fiadds
add
out
js
negw
cwtl
in
jge
add
gs
add
les
add
fiadds
xchg
sti
mov
filds
lods
mov
mov
lea
pop
dec
push
rol
inc
dec
pop
sub
jmp
push
lea
push
push
push
push
push
push
push
push
push
call
mov
mov
pushf
test
add
loop
lods
xlat
add
roll
rclb
clc
add
stc
add
js
icebp
add
jae
add
add
popf
xchg
push
roll
add
add
out
mov
add
scas
add
push
cmc
add
std
mov
in
add
add
adc
int3
lds
add
lea
pop
sub
pushl
pop
push
ror
xor
pop
sub
push
sub
dec
pop
cmp
jne
push
push
push
lea
push
push
push
push
push
push
call
in
fldl
xchg
mov
stc
add
mov
std
push
imul
mov
aad
imul
mov
rcll
in
mov
add
jnp
pop
je
lods
xchg
add
addb
fwait
test
addb
add
add
add
pop
test
push
push
add
testb
mov
add
ljmp
add
add
and
mov
lea
push
push
push
lea
push
push
call
mov
pop
roll
fiaddl
add
mov
add
add
fiadds
mov
jae
loopne
outsl
add
flds
mov
xchg
add
add
rolb
add
les
mov
call
loope
aam
stc
add
add
fwait
mov
stos
add
mov
jo
mov
xchg
test
add
pusha
add
bound
xchg
add
pop
sub
mov
shr
push
shl
pop
add
push
push
call
fidivs
mov
add
add
add
js
test
mov
add
aad
iret
loope
js
cltd
mov
add
add
lahf
add
add
mov
shr
mov
mov
fstpl
jae
clc
mov
movsl
add
add
pop
add
xchg
int3
cltd
mov
addl
add
cmc
add
jp
arpl
lock
movb
xchg
cwtl
add
bound
pop
sub
push
push
push
push
lea
push
push
push
push
push
call
jecxz
lret
test
add
insb
pop
mov
add
lret
lahf
jle
enter
add
add
iret
add
add
add
xchg
scas
pop
bound
in
add
arpl
add
js
bound
popa
pop
add
lods
data16
rolb
int
xchg
stos
add
jecxz
fdivrs
jnp
add
xchg
add
les
xor
fldcw
fiadds
mov
adc
jg
dec
in
xor
bound
add
add
add
clc
add
add
jmp
add
add
outsl
add
xchg
add
hlt
push
aam
mov
flds
xchg
imul
mov
jae
jge
js
add
add
pusha
mov
nop
add
popa
mov
add
mov
mov
pop
add
fildl
lea
pop
and
push
rol
add
inc
pop
sub
cmp
jne
push
pop
leave
push
lea
sub
add
pop
ret
push
push
push
push
push
lea
push
push
push
push
call
add
incb
jle
add
push
add
add
in
iret
mov
mov
mov
add
sbb
lahf
ja
fwait
addl
movsb
add
add
jb
movl
pop
in
add
pop
push
add
repnz
add
je
add
cmc
addb
out
push
add
mov
lea
pop
push
mov
push
push
call
add
jl
add
push
mov
je
out
les
add
enter
jns
mov
pop
fnsave
add
fiaddl
out
add
add
mov
add
add
add
lods
loop
xchg
push
jecxz
add
loopne
cli
pop
lds
lret
xchg
push
popl
icebp
hlt
mov
add
mov
lea
pop
add
push
push
inc
pop
push
push
add
pop
push
push
push
lea
push
push
call
add
loop
add
pop
pusha
add
cli
add
add
movsl
fildl
jno
add
out
mov
add
mov
pop
enter
out
in
std
stos
aam
add
cwtl
add
xchg
jae
movsb
loope
hlt
ja
lret
xchg
ja
add
mov
outsl
test
lea
pop
push
mov
lea
push
add
dec
not
rol
pop
sub
mov
push
inc
sub
pop
shr
add
push
pop
mov
add
mov
push
push
lea
push
push
lea
push
push
lea
push
call
aam
push
les
xchg
mov
mov
pop
shrl
add
shr
jns
add
add
aam
imul
add
add
out
add
add
add
je
add
add
xchg
pop
fcmovb
sarb
pop
add
in
add
jmp
add
stos
mov
outsl
add
iret
pop
xchg
pusha
add
push
jb
lret
mov
lea
pop
add
xor
mov
push
xor
pop
and
push
push
push
push
call
add
mov
stos
add
movsl
push
xchg
xchg
in
mov
push
sar
out
mov
ret
in
add
mov
add
negl
push
add
addb
add
jb
mov
pop
mov
mov
jns
add
add
add
add
jp
add
hlt
lea
pop
call
push
inc
lea
shr
add
pop
add
cmp
je
add
push
add
sub
shl
pop
cmpl
jne
push
sub
ror
xor
pop
xor
push
pop
pop
pop
push
rol
lea
add
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
add
adcl
test
pop
pop
add
pop
push
push
movsl
add
add
mov
add
xchg
add
mov
bnd
test
jae
std
out
jne
in
add
cmp
addl
iret
loope
nop
pop
push
ret
add
add
add
mov
add
mov
lea
pop
pop
push
lea
push
push
lea
push
call
pop
fdivl
les
subb
cld
mov
add
stos
add
clc
in
mov
shrb
sti
add
push
iret
roll
add
arpl
ret
hlt
jle
add
pop
mov
xlat
stc
lahf
test
shrb
mov
lock
add
mov
add
cli
lock
add
add
adc
leave
push
ror
pop
ret
push
push
push
push
push
call
add
imul
mov
add
push
loop
out
out
add
test
ja
lock
add
mov
arpl
enter
std
pop
add
nop
pop
xchg
mov
out
add
outsl
add
lods
mov
shlb
mov
jbe
stos
jne
out
aam
bound
mov
add
push
ror
pop
push
push
push
push
lea
push
lea
push
lea
push
call
in
lcall
xchg
add
add
in
lret
ja
in
gs
add
test
fsin
add
add
add
add
xchg
jmp
add
in
leave
add
call
repnz
add
add
push
scas
add
add
pop
add
outsl
addl
stos
add
add
aad
fs
add
mov
neg
cmpsl
std
jno
cmpb
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
stc
add
add
add
add
shrb
xchg
mov
fiaddl
add
addb
xchg
mov
int3
cwtl
mov
aad
mov
add
push
std
mov
add
add
bnd
jno
fisubrs
add
jp
rol
sti
je
push
add
push
lock
mov
lea
pop
pop
push
inc
pop
mov
push
push
inc
add
add
pop
call
xor
push
push
push
lea
push
call
add
xchg
fsubrl
nop
add
mov
add
mov
jae
add
push
pushf
add
fs
call
pusha
xchg
insb
jae
add
add
add
lret
ret
not
push
int
lahf
add
fs
stc
add
js
data16
jp
add
add
ret
out
leave
mov
lret
loope
sti
je
add
std
xchg
add
addr16
mov
addl
add
fisttps
popa
adc
pop
pop
push
push
push
push
push
push
push
push
call
test
mov
add
jns
fsub
add
jbe
add
cld
mov
loopne
jmp
add
icebp
add
mov
add
add
add
cltd
mov
mov
scas
js
sti
mov
movsb
add
jb
mov
ja
call
fildl
xchg
test
ljmp
xchg
mov
add
addr16
xchg
pop
add
and
pop
push
rol
add
pop
leave
push
push
lea
push
push
push
push
push
push
push
lea
push
call
lret
fstps
jecxz
add
push
mov
add
loope
mov
cmpsl
add
add
pop
fwait
push
shlb
popf
cld
add
fwait
js
add
add
scas
cmc
sbb
add
add
jns
add
mov
repnz
add
nop
add
rcl
jno
add
mov
mov
add
popf
push
add
add
mov
bound
pop
ret
push
shl
pop
push
mov
push
add
dec
rol
pop
add
push
lea
push
push
push
push
push
push
push
call
add
add
in
add
test
lods
xchg
mov
je
add
ljmp
rolb
pop
mov
cld
test
test
outsl
add
mov
mov
add
mul
add
add
sti
into
mov
add
stos
pop
mov
lock
jns
mov
add
cltd
icebp
clc
mov
pop
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
lahf
cld
add
add
push
xchg
int
mov
movsb
add
add
add
push
stc
loope
add
je
add
jno
add
mov
add
pop
imul
jp
xlat
cltd
mov
bound
add
mov
jle
add
imul
jge
add
xchg
test
data16
test
add
pop
pop
sahf
add
xchg
xchg
fdivl
jns
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
pop
add
add
add
xchg
add
cmpsb
outsl
nop
mov
cmpsb
rolb
xchg
add
outsl
add
add
add
jmp
push
add
add
test
cli
add
add
js
fadds
ror
add
fcmovbe
add
cld
add
sti
push
add
scas
mov
jecxz
add
xchg
add
mov
lea
pop
push
push
mov
push
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
add
ljmp
add
add
mov
add
loopne
add
pop
jmp
cwtl
xchg
outsl
xchg
mov
jle
xchg
fbstp
add
add
mov
add
movsl
lock
add
vcvttpd2dqy
add
jns
insb
mov
mov
out
clc
add
jmp
mov
mov
add
fcom
cltd
mov
aam
bound
pop
pop
push
push
push
lea
push
push
push
call
int
jecxz
rorl
shrl
add
ljmp
pop
mov
add
into
js
mov
je
rolb
add
int3
loop
ja
add
add
bnd
jp
filds
add
out
jo
add
pusha
test
mov
add
lcall
ljmp
out
aam
movsb
iret
add
lock
iret
cli
fbld
push
mov
lea
pop
lea
sub
push
not
inc
sub
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
pop
add
add
lds
add
add
fdivr
iret
add
add
out
pusha
mov
add
add
movsb
add
add
pop
push
mov
add
add
add
add
pop
add
push
cwtl
add
jno
js
jae
add
add
pop
xchg
loope
mov
lea
pop
shr
add
push
push
push
call
jb
jae
leave
add
aad
add
mov
pop
add
add
cwtl
jne
add
add
cmpsb
mov
bound
mov
mov
push
ja
mov
push
data16
lahf
xchg
sti
test
mov
jno
mov
test
jno
subb
insb
add
add
add
mov
rcl
jns
add
add
movsb
push
scas
add
add
mov
lea
pop
mov
add
pushl
push
pop
popl
push
shl
pop
mov
push
push
push
lea
push
push
call
sti
add
std
loope
loopne
add
stos
xchg
add
add
data16
add
aad
add
xchg
cmc
subb
loop
cwtl
lock
bound
fidivrs
pop
out
mov
lret
mov
rolb
pop
ljmp
add
add
popl
add
pop
jns
push
jecxz
lahf
push
xchg
int3
push
movsb
add
mov
add
add
lods
mov
add
icebp
mov
add
test
iret
mov
lea
pop
add
xor
lea
push
xor
shl
pop
mov
push
push
push
push
call
add
test
loopne
add
mov
add
jns
int
mov
lahf
add
lahf
xchg
push
jp
cltd
fs
rclb
aam
scas
add
lcall
mov
add
mov
pop
add
add
add
add
divl
add
mov
mov
add
xchg
mov
cltd
lods
pusha
add
cbtw
loop
mov
add
add
add
add
add
test
pop
rolb
add
pop
add
xor
call
push
lea
push
push
push
push
push
push
call
jne
jb
mov
add
add
icebp
idivl
add
hlt
popf
push
mov
add
out
pop
mov
lods
add
add
mov
add
jbe
add
lahf
movsb
insb
add
jmp
mov
add
add
xchg
add
lret
add
fdivrs
add
add
data16
add
add
pop
add
push
rol
pop
nop
push
push
lea
push
lea
push
push
lea
push
call
fistps
add
mov
xchg
add
filds
fcmovb
sahf
loope
lea
add
push
ljmp
into
mov
push
roll
rolb
mov
int3
fistps
jp
je
out
push
ja
lret
sarb
mov
repnz
scas
stos
add
imul
roll
mov
mov
add
add
imul
sbb
cmp
je
nop
push
push
call
addl
scas
stos
imul
push
add
add
mov
push
add
mov
add
out
xorb
pop
stos
mov
xlat
pop
xchg
rcr
jecxz
addr16
lods
add
mov
fiadds
imul
sti
repnz
test
add
xorl
mul
mov
add
add
cld
mov
add
push
addb
add
in
pop
pop
rorl
pop
nop
push
push
push
push
call
js
enter
repnz
loopne
add
mov
ljmp
iret
cwtl
fldl
cli
cmpsb
imul
lds
test
xchg
add
filds
fldl
fiaddl
add
jb
lds
add
add
jne
stos
loop
add
aam
add
movl
hlt
lea
pop
inc
push
sub
sub
not
sub
pop
nop
push
sub
dec
pop
nop
push
add
dec
pop
cmp
jb
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
out
add
add
mov
bound
add
add
pop
nop
movb
mov
jp
add
mov
add
add
std
mov
in
add
mov
imul
xchg
push
jo
imul
xchg
add
out
loope
jns
add
pop
flds
add
stos
add
add
mov
out
movsl
add
add
hlt
mov
lea
pop
jmp
mov
add
push
lea
xor
rol
pop
movzwl
push
pop
mov
add
push
sub
add
pop
mov
push
push
push
call
add
push
leave
into
popl
fildl
aam
cmpsb
jae
lret
sahf
pop
les
add
add
mov
mov
js
jle
add
jb
in
add
xchg
add
add
jl
add
xchg
test
xchg
add
jnp
mov
mov
add
add
add
add
mov
lea
pop
xor
xor
push
ror
pop
shl
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
jge
add
addr16
add
subl
in
fidivrl
icebp
add
xchg
push
add
imul
add
add
arpl
add
add
add
add
mov
fdivrp
jmp
mov
arpl
roll
mov
iret
faddl
lret
mov
lea
pop
xor
shl
xor
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
aad
movl
fcmovne
add
add
add
popa
iret
add
xlat
xchg
ja
push
add
add
mov
add
jp
les
jb
mov
int
pop
fistl
cli
add
jno
add
add
xchg
scas
repnz
jmp
jecxz
pop
mov
push
mov
out
pop
mov
mov
lea
pop
shl
push
push
push
lea
push
call
add
movsb
push
cwtl
movsb
mov
add
mov
int3
add
fcmovu
add
clc
sahf
jp
add
jp
jmp
lahf
mov
mov
imul
add
call
lahf
add
add
js
add
pop
add
push
clc
enter
add
lea
cld
mov
add
iret
mov
aam
mov
lea
pop
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
add
mov
add
fsubs
add
in
xchg
xchg
add
add
add
jge
add
add
jnp
add
addb
ret
add
pop
add
sar
add
leave
push
add
repnz
test
insb
movsb
add
add
int
icebp
stos
lret
rolb
mov
add
mov
add
add
pusha
add
ret
add
jb
mov
lea
pop
mov
add
push
dec
ror
not
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
incb
jno
add
mov
imul
imull
add
mov
nop
push
xchg
mov
jmp
add
pushf
call
pop
jmp
int
mov
cmpsb
add
add
add
loopne
add
add
loope
lods
lahf
add
mov
rcll
and
add
lret
int
ret
add
and
pop
pop
pop
push
lea
push
push
push
call
add
push
std
add
test
add
add
add
add
sahf
fwait
testb
mov
outsl
xlat
jno
popf
imul
add
add
add
test
mov
lods
add
mov
jae
lret
add
add
mov
hlt
add
add
add
add
lea
pop
leave
ret
push
sub
ror
xor
pop
push
mov
push
push
sub
add
not
sub
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
pop
add
push
mov
andb
jge
add
mov
add
add
add
data16
cmc
je
shr
add
je
pusha
add
pop
add
add
add
add
add
add
add
add
add
movb
add
add
ret
add
fsubrp
popf
mov
cli
add
clc
add
mov
lea
pop
mov
push
push
push
call
add
clc
add
test
push
popl
add
lret
mov
test
push
add
je
std
xchg
add
mov
cmc
js
rolb
push
sbbl
lret
add
insb
mov
mov
add
repnz
push
scas
fwait
add
jbe
out
mov
fbstp
popf
shll
xlat
add
jmp
test
push
fwait
jmp
mov
lea
pop
mov
mov
test
je
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
aad
lahf
add
add
mov
xchg
xchg
lods
test
add
add
add
add
add
add
pop
add
popa
add
add
add
scas
cld
add
mov
mov
call
enter
popf
ret
lock
roll
add
jp
mov
jmp
add
ret
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
faddl
pop
push
pop
mov
gs
add
push
add
les
push
jnp
scas
mov
fsts
add
rolb
xchg
bound
jle
add
mov
add
add
enter
push
add
jbe
lds
movsb
mov
add
add
add
test
add
add
add
addl
xchg
mov
lea
pop
test
je
mov
mov
push
lea
add
not
shr
pop
mov
inc
push
push
push
push
call
lea
add
add
xlat
xchg
add
mov
add
jp
pop
into
aad
iret
mov
jmp
mov
add
add
pop
add
outsl
cmpsb
mov
add
add
lea
lret
add
add
add
add
roll
xchg
add
imul
loop
cmc
mov
lea
pop
cmp
je
test
je
mov
push
shr
inc
pop
inc
cmp
je
test
jne
push
ror
inc
sub
add
pop
xor
pop
pop
push
push
push
call
jae
loopne
into
add
add
add
jmp
add
leave
gs
imul
add
add
shrl
add
mov
lock
add
into
push
mov
jecxz
add
aad
push
mov
mov
ficomps
add
test
xchg
mov
repnz
aam
add
add
lods
add
pop
ficoml
bound
mov
add
lea
pop
pop
pop
leave
push
shr
xor
not
add
pop
ret
mov
inc
push
push
push
push
push
push
call
add
add
pop
roll
pop
stc
add
pop
lcall
jb
in
shrb
add
add
mov
cwtl
clc
add
shr
add
movsb
cld
loopne
popf
rcrl
add
xchg
push
add
add
add
add
add
popf
add
push
aad
add
mov
add
bound
data16
rolb
mov
ffreep
clc
sar
jp
mov
lea
pop
cmp
jne
lea
push
dec
add
pop
mov
test
je
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
fidivl
icebp
in
test
push
jle
movsb
rolb
add
add
xchg
mov
mov
aad
mov
fidivrl
add
add
int3
add
add
add
jecxz
mov
add
mov
mov
pop
pop
flds
test
add
fld
add
add
hlt
lea
pop
mov
push
dec
ror
shl
pop
add
cmp
jne
mov
push
add
add
pop
test
je
push
shl
sub
shr
pop
mov
add
push
sub
ror
pop
cmp
je
jmp
xor
push
pop
pop
pop
push
inc
not
not
shr
pop
pop
push
push
push
push
push
push
lea
push
call
add
add
add
imul
add
lcall
shlb
js
push
add
mov
add
add
add
xchg
jge
nop
les
add
js
jne
add
lahf
add
lds
xchg
mov
pusha
add
mov
push
add
loope
out
add
test
mov
lea
pop
pop
leave
push
dec
shr
pop
ret
lea
pop
push
push
push
push
push
push
push
push
call
add
add
add
std
mov
fisubrl
add
mov
mov
add
cli
testl
add
add
loop
mov
fwait
mov
add
jae
mov
imul
add
jo
add
hlt
mov
add
lea
pop
pop
pop
push
shl
not
not
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
add
pop
add
add
add
mov
add
fs
fmul
add
pop
mov
ror
add
add
add
xchg
mov
add
iret
jl
scas
out
lods
mov
xchg
shlb
add
cwtl
sti
cmpsb
in
js
cmpsb
push
add
add
add
cmpsb
mov
lea
pop
leave
ret
push
lea
push
push
push
lea
push
lea
push
call
add
popf
add
add
iret
mov
cmc
addl
mov
iret
fwait
add
add
add
loop
ja
push
jle
and
add
enter
icebp
add
jne
jp
in
lcall
add
cmpsb
add
add
add
lds
movl
jnp
mov
xlat
add
fnstsw
sbb
pop
push
shl
xor
pop
pop
pop
push
xor
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
out
std
mov
hlt
out
add
add
cmpsb
rcrl
fldl
add
mov
add
std
add
push
pop
add
pop
cltd
mov
add
jb
add
add
rcl
mov
rcrb
add
add
add
add
pusha
add
xchg
rcl
xchg
mov
lea
pop
leave
push
shl
pop
ret
rol
rol
push
shl
shl
pop
xor
inc
cmpb
jne
push
dec
dec
xor
pop
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
andl
sti
dec
pop
mov
sti
movsb
sub
sti
sub
mov
add
xlat
xchg
pushf
jae
iret
imul
xchg
add
xor
jnp
arpl
js
test
int3
push
xchg
cmpsb
fmuls
ja
pop
ret
lcall
out
repnz
push
imul
and
push
cmc
mov
fcomps
mov
jno
dec
or
test
data16
lock
icebp
add
fmuls
loope
adc
in
jbe
insl
andb
cmpsl
orl
inc
jo
test
sub
inc
mov
pop
subb
jmp
rcll
ja
push
and
bnd
arpl
push
sbb
fisubrs
fsubl
shl
pop
jecxz
sti
jns
notb
cli
stos
aaa
or
and
mov
inc
and
xchg
jle
insb
imul
dec
and
jo
inc
pop
xchg
push
out
mov
xlat
int3
rorb
cltd
daa
loopne
cli
and
notb
icebp
cmpl
das
test
sub
jle
jo
jns
mov
jne
fcom
adc
or
or
push
dec
fldcw
sbb
sbbl
ljmp
jecxz
cmp
popf
pop
push
scas
ds
or
in
jg
and
shrl
popf
sbb
inc
dec
or
gs
sbb
ja
cmc
insl
hlt
ret
call
clc
in
mov
jo
xchg
inc
push
cmpsb
fneni(8087
mov
and
ss
mov
mov
ficompl
pop
loopne
imul
decb
fsubrs
enter
xor
repnz
test
jno
ss
fldcw
push
mov
ficoms
cmpsl
lods
mov
mov
mov
cs
or
pop
sub
dec
xchg
jns
fs
xlat
jnp
fwait
mov
imul
jl
lret
aad
pop
mov
mov
out
jle
mov
and
adc
inc
pop
cmp
lret
cs
ficoml
xchg
out
je
jb
hlt
rcr
push
jae
sbb
add
sahf
and
adc
mov
and
push
cltd
sub
enter
test
add
cmpb
mov
clc
or
scas
cmp
inc
vpandn
jne
cli
ret
dec
or
push
mov
mov
jge
inc
pop
add
xchg
dec
pop
sar
je
shl
aam
popa
int
mov
dec
sbbb
mov
out
mov
les
mov
dec
sbb
jb
test
roll
xor
sbb
outsl
ss
push
mov
jno
sub
cwtl
std
ds
push
arpl
pop
ljmp
xchg
inc
xorl
outsl
lea
jb
in
adc
push
pop
popa
push
mov
add
jg
push
int
dec
inc
mov
sub
jmp
xchg
sub
sbb
mov
push
ja
shrb
ret
in
dec
mov
leave
fwait
aas
pop
inc
cmp
stc
daa
fists
into
cmp
scas
xchg
jl
pop
add
daa
jmp
mov
pop
repnz
xchg
cld
rol
dec
pop
jo
sti
dec
or
add
pop
in
jl
pusha
mov
mov
lea
cmp
mov
test
repnz
mov
ss
notl
push
jmp
xor
popf
push
mov
movsb
lret
iret
push
pop
sub
xchg
gs
das
popf
sbb
icebp
pop
mov
outsl
outsl
jo
leave
and
jne
fwait
aas
push
fidivs
or
cwtl
sti
xor
nop
sbb
push
push
mov
rorl
movb
pop
popa
mov
fld
mov
cmpsl
mov
or
psubusw
jl
jne,pt
jo
adcb
and
xchg
mov
sub
fsubr
int3
lock
jo
xchg
nop
mov
cmpsl
mov
test
les
adc
ss
xchg
outsb
fdivp
aas
xchg
inc
push
jecxz
jmp
pop
push
lret
out
adc
movsb
cmp
mov
icebp
int
xchg
pop
cmp
rcrb
jl
cmc
jle
fwait
pop
sbb
fs
das
icebp
popf
mov
popa
repnz
or
movsl
in
mov
popf
fs
pop
push
shufps
mov
inc
gs
sbb
sarb
sarb
lcall
loope
bound
mov
xchg
out
dec
js
pop
xor
jnp
dec
cmp
push
push
ja
dec
mov
xor
inc
popf
jnp
arpl
xor
sbb
pushf
xor
sbb
mov
and
mov
insb
mov
mov
xchg
mov
in
mov
flds
jmp
mov
insl
outsb
mov
cmpsb
inc
push
pop
add
xorl
inc
aad
jmp
and
aad
bound
sub
clc
sarb
dec
mov
out
das
js
rorl
cmp
sub
insb
jmp
pop
insb
push
cmp
dec
and
outsb
sbb
add
or
sbb
and
lahf
jno
popf
cwtl
std
mov
push
sbb
shr
mov
in
jmp
sub
xor
scas
sbb
and
fs
pop
mov
xchg
sbbb
ds
push
and
mov
cmp
xchg
inc
mov
outsl
inc
negl
pop
test
add
dec
and
xchg
das
adc
push
xchg
jne
popf
test
lret
pushf
outsl
xchg
xchg
and
push
add
push
popa
add
test
and
dec
dec
dec
sbb
push
push
inc
jbe
cmp
jae
cltd
lods
in
inc
pusha
cmp
rcll
push
icebp
push
out
sub
lea
subb
lcall
in
xor
iret
fdivs
cmp
je
push
mov
sub
mov
sti
arpl
mov
imul
adc
mov
or
out
clc
mov
mov
pushf
test
jmp
inc
test
or
rcr
xchg
inc
mov
jl
and
insb
mov
jecxz
pop
inc
sub
ss
lods
call
pop
call
mov
mov
clc
cmpsl
pop
fwait
mov
mov
mov
inc
mov
jbe
iret
and
add
cmp
shr
int3
sub
inc
pushf
stos
lahf
lcall
sar
push
test
mov
push
ja
pop
loopne
aaa
jl
xchg
lahf
pop
xchg
leave
jg
je
sarb
lahf
ss
and
stc
icebp
scas
sbb
add
mov
es
ret
xchg
pop
imul
insl
test
scas
push
outsl
fwait
adc
gs
insb
push
popf
mov
inc
mov
xchg
ret
loope
mov
cli
xor
adc
dec
mov
leave
test
push
xchg
std
jge
sbb
push
jnp
std
ret
mov
inc
xor
aam
lds
and
loopne
fcmovne
js
xchg
js
ret
iret
stc
out
imul
arpl
shlb
outsl
flds
jg
or
fwait
psrlq
sbb
cwtl
shll
inc
pop
push
lret
shll
out
lods
jl
xchg
add
xchg
pushf
imul
xor
adc
sbb
sahf
cmpsb
mov
inc
adc
mov
lock
jge
divw
imul
adc
and
fistl
std
inc
sub
insb
sbb
mov
sbb
sbb
rorb
adc
stos
cmp
in
mov
pop
sbb
ret
push
sbb
insb
dec
cltd
mov
cli
fdivs
test
clc
push
int3
mov
push
cli
pop
mov
out
je
lods
jo
in
invd
jmp
repz
xchg
jge
or
arpl
mov
mull
aas
out
xchg
push
or
inc
jmp
repz
out
je
faddl
inc
cmpsl
std
pusha
pop
cmp
out
push
repnz
sub
ficompl
and
insb
inc
mov
fistpll
adc
scas
cmpsl
sbb
jge
jo
cmp
sbb
sbb
sbb
aaa
mov
jne
pop
in
lea
lret
adc
push
mov
mov
test
jns
xor
mov
fisttpll
iret
dec
mov
dec
in
mov
push
insb
jo
fsubl
push
and
sub
lret
jnp
xor
inc
fs
test
scas
push
jns
insl
addr16
hlt
das
inc
shrl
loop
sti
lods
rolb
pop
test
xchg
sahf
jg
sahf
imul
xchg
outsb
insl
cmpsl
fisubrs
orl
popf
and
add
sbb
mov
dec
out
mov
mov
mov
add
sub
les
aaa
xchg
stc
xor
xor
scas
lcall
aas
adc
jb
jecxz
int
in
call
cltd
sar
and
hlt
cltd
out
pop
jnp
dec
xchg
aas
inc
sti
sbbl
rcll
sbb
loopne
lret
sbbl
repz
shlb
addl
dec
pop
cmp
push
mov
repz
dec
scas
push
pop
dec
xor
or
sbb
imul
cmp
std
sub
pop
mov
movsl
fwait
inc
in
dec
andl
mulb
movsl
bound
xchg
clc
mov
ret
mov
stc
in
lret
cmpsb
icebp
pop
stc
aam
jne
mov
mov
notb
out
mov
inc
insb
inc
or
sub
out
call
les
fcomp
jnp
pop
jge
xorb
jns
pop
sub
and
dec
jg
fsubrl
xor
inc
lcall
sbb
in
adc
testb
cwtl
sbb
stos
cltd
dec
cld
rclb
xchg
sbb
and
adc
mov
xchg
sti
out
xor
mov
rcrl
push
push
add
loope
adc
add
ret
or
test
test
sti
cmp
orb
nop
mov
push
sub
lods
mov
mov
iret
sbb
test
push
cmp
mov
and
stos
popa
xor
jno
cltd
inc
je
pop
insb
gs
fists
xchg
arpl
and
xorb
fnstcw
push
xchg
cmp
cmpsl
mov
jns
lods
popa
fxrstor
rcr
shlb
movsl
xchg
jno
sahf
sub
push
add
je
decl
lock
sub
push
push
or
sbb
cmp
lods
mov
decl
sbb
cmp
fsts
popl
dec
push
adc
sbb
push
dec
hlt
cmp
bound
cmp
jmp
mov
or
dec
mov
jmp
xchg
ja
clc
ret
mov
dec
xchg
xchg
stos
bound
adc
mov
repnz
mov
xchg
sbb
sub
jae
sti
adc
mov
imul
fsincos
arpl
inc
loope
pop
xchg
cli
pop
in
imul
lahf
inc
mov
jecxz
add
pop
pop
je
sar
ret
mov
cmp
hlt
lods
add
test
dec
add
inc
or
aam
outsb
fwait
pop
rcrl
xchg
outsb
or
xchg
dec
sub
and
das
scas
inc
sti
mov
fistpl
sub
mov
sub
ss
fdivs
pop
push
lret
lea
push
sbb
jmp
adc
sbb
shll
clc
mov
push
bound
clc
mov
mov
adc
dec
add
jns
flds
inc
xor
addr16
mov
pop
xchg
push
pop
and
enter
mov
cltd
jo
adc
addr16
outsb
jg
ret
icebp
gs
inc
scas
insl
mov
out
in
jno
popf
lea
or
xchg
sbb
insl
call
ss
sbb
dec
add
es
lock
inc
pop
pop
in
adc
fbstp
sbb
insb
sub
test
call
outsl
add
iret
push
cli
push
adc
sahf
call
jno
gs
jecxz
xchg
cmpsl
jmp
add
jg
out
cmpsl
mov
mov
int
cltd
scas
repnz
xor
xor
idivb
lods
cs
mov
push
add
mov
movsb
and
jecxz
adc
or
daa
div
popf
addr16
stos
lds
scas
sub
paddq
jns
sub
jae
cmpsb
mov
or
sub
scas
jb
cs
or
ds
pop
mov
xchg
shrl
or
pop
fildll
push
into
add
pop
mov
mov
add
test
pop
imul
in
into
or
or
jmp
addl
dec
movsl
fsubs
pop
dec
lahf
mov
sbb
sub
adc
je
and
mov
or
xorb
mov
adc
xor
xchg
test
test
rcl
fs
mov
outsl
repz
scas
push
adc
adc
cwtl
addl
nop
and
xor
jnp
out
xor
out
cmp
dec
jl
or
lret
popw
adc
inc
test
push
push
imul
popa
or
or
jg
lea
call
nop
mov
imul
push
repz
fmull
loope
out
andl
fstl
cmp
xor
outsl
push
iret
inc
and
aaa
jmp
and
add
adc
and
clc
mov
outsl
js
add
dec
pop
aaa
lcall
mov
out
lods
jl
movsl
adc
std
aam
and
nop
sbb
loop
cmp
jo
test
mov
orb
add
or
lds
cmpsb
xor
sbb
pushf
jb
add
ror
daa
or
int
mov
call
xchg
add
jno
sti
xor
stos
iret
movl
lcall
call
stos
mov
xchg
push
mov
jg
add
xchg
ja
mov
into
add
add
jbe
test
mov
jg
outsb
push
mov
loope
js
or
mov
and
pop
imul
or
or
cmpb
ljmp
sbbl
adc
adc
adc
fistps
mov
mov
pop
push
sbbb
sti
je
cwtl
test
and
daa
add
out
pop
xor
test
nop
loope
pop
pop
jnp
nop
push
sbb
dec
arpl
cmp
je
pushf
mov
loope
popf
scas
daa
pop
cmp
sub
inc
lock
cmp
cmp
fwait
cmp
stos
sub
xor
fmuls
adc
dec
inc
out
es
mov
mov
stc
cltd
push
xor
stos
test
aam
jo
outsl
into
vpackuswb
mov
xchg
push
mov
inc
push
and
and
ss
adcl
das
and
stos
xchg
mov
mov
push
mov
stos
sbb
ss
jle
adc
push
aaa
pop
repnz
lock
lret
push
pop
movsb
or
insl
fbld
sbb
and
sbbl
cli
cmpsl
jle
lcall
lods
std
stos
add
jle
jnp
push
lret
sub
shrl
push
popa
and
sbb
repz
xor
bound
je
or
xchg
ljmp
enter
mov
and
pop
clc
lahf
mov
or
ret
cmc
add
and
add
push
jge
xchg
rol
cmp
xor
and
ss
push
xlat
sahf
sub
jp
and
xchg
xor
xchg
add
pop
outsb
insb
pop
rclb
fidivrl
mov
xchg
cmp
push
ret
cmpsl
xrstors
popa
dec
push
adc
icebp
stos
mov
outsl
xchg
insl
add
popf
outsl
jmp
js
popl
outsb
mov
mov
notl
sbb
sub
in
imul
adc
aad
pushf
adc
in
mov
incl
sub
mov
bound
xchg
cmp
pushl
sbb
cltd
lret
jecxz
frstor
xor
sbb
int3
cwtl
xor
push
gs
sar
mov
cmp
out
xor
inc
fdivr
xor
cld
fcomps
jbe
push
rolb
dec
adc
std
aaa
into
in
jae
insl
and
sbb
in
adc
daa
sub
cmc
std
dec
in
shlb
cmp
jbe
lock
ds
mov
mov
decl
adc
out
rcll
mov
dec
dec
sub
push
adc
xor
sbb
test
lret
loop
push
jle
xor
insb
mov
std
lods
mov
mov
push
mov
pop
shl
mov
ljmp
adc
cwtl
xchg
pop
push
jbe
data16
insb
stc
subl
cmp
sub
loop
les
aam
push
push
pusha
xorb
mov
rorb
ret
in
xchg
xchg
mov
jne
rol
bt
xchg
cltd
loopne
or
adc
out
loop
inc
or
and
mov
inc
movsl
inc
mov
leave
sub
loop
mov
inc
bound
sub
into
or
and
ret
je
inc
jne
or
je
stos
mov
insl
ret
mov
fdivrl
jb
fnstenv
push
jae
jno
mov
hlt
movsl
stos
and
gs
ss
sub
jae
test
jp
add
dec
mov
fsubl
inc
xor
xlat
movsl
ja
in
adc
mov
dec
aad
loope
std
cwtl
mov
pop
sbb
mov
xchg
jl
jne
iret
test
lcall
xchg
inc
and
fdivr
sub
and
sub
and
mov
mov
movsl
sti
xchg
mov
fimull
mov
cwtl
mov
loopne
cli
fwait
mov
js
int
pushf
cld
push
int3
cli
nop
sub
pusha
hlt
xchg
js
scas
arpl
mov
jle
mov
rorb
lret
arpl
adc
mov
int3
stc
rclb
insb
cmpl
andl
dec
out
push
mov
or
mov
mov
lcall
xchg
cmp
or
mov
ja
lret
int
cltd
xchg
stos
imul
fisttpll
push
test
mov
pop
int3
push
out
adc
mov
sahf
xchg
insb
inc
mov
jne
mov
out
lods
jg
dec
xor
cwtl
idivb
jecxz
inc
xor
push
je
xchg
sub
iret
into
shr
jg
dec
bound
push
xchg
or
jbe
xchg
test
xor
iret
cwtl
push
lcall
rcr
add
and
xor
int3
pop
mov
outsl
cmp
mov
jnp
or
fnstenv
inc
lods
jecxz
inc
dec
inc
xchg
cmpsb
and
or
mov
xchg
popa
daa
pusha
dec
in
or
xchg
mov
mov
mov
pop
lds
imul
mov
dec
icebp
sub
and
add
and
sbbb
mov
icebp
pop
lahf
enter
sbb
cmp
xor
adc
lea
test
push
xor
pop
dec
inc
push
in
fxch
or
lds
add
mov
push
adc
and
xor
fbld
and
addr16
in
ljmp
inc
inc
hlt
lds
xor
or
jge
or
xchg
mov
repnz
rorb
out
mov
cmpsb
lcall
sub
insl
sysexit
adc
pop
xor
shll
mov
shll
hlt
inc
pop
adc
mov
jg
xor
mov
ds
scas
ficomps
or
bound
lret
dec
dec
out
fs
lds
loopne
xlat
push
stos
add
rclb
add
jo
mov
lret
mov
in
mov
scas
repz
pop
sti
sub
mov
push
or
xchg
test
lods
mov
divl
clc
ds
js
stc
add
hlt
adc
fists
sub
push
fmulp
add
mov
into
jmpw
in
jmp
dec
pop
push
push
call
imull
push
cmp
mov
xchg
or
jge
pop
xchg
or
cmpb
push
enter
jge
push
push
xor
push
and
cmp
int3
imul
mov
xor
mov
rcr
cwtl
int
fs
sbb
mov
push
or
jo
cld
xchg
or
pop
push
cmp
add
sub
push
add
in
mov
and
cli
xchg
sbb
mov
int3
mov
sub
push
mov
push
push
cwtl
pop
enter
test
pusha
insb
hlt
jne
mov
sub
cwtl
lret
mov
andb
add
pop
push
js
fidivl
int
dec
cld
pop
lret
mov
adc
xor
imul
scas
cmpsl
jnp
or
add
out
or
imul
pushf
adc
xor
ret
rorb
stc
ficompl
jmp
loop
adc
push
cli
mov
xchg
hlt
sahf
mov
shl
cmp
cmpsl
pushf
mov
pusha
fldcw
adc
call
mov
int
mov
xchg
fildll
dec
lock
xor
adc
fiadds
int
les
add
xlat
mov
push
repnz
into
pop
out
testb
fisubrs
test
inc
in
ret
hlt
pop
fwait
int3
into
movsl
andb
fiaddl
sub
js
int
xor
lahf
cs
cmc
stos
and
push
out
xchg
lahf
jae
mov
outsb
jns
push
dec
pop
jno
inc
push
mov
int
adc
mov
push
cs
push
sub
or
icebp
clc
mov
das
push
sarb
adc
out
xlat
pushf
mov
mov
sub
add
push
mov
cmp
or
pop
mull
stos
lock
and
jno
and
jb
repz
sub
xchg
mov
cld
stc
dec
je
sbb
jbe
xor
mov
inc
les
cmp
jno
cwtl
or
jns
mov
icebp
sahf
inc
cli
sbb
repnz
push
inc
jns
mov
inc
ficoms
sub
push
mov
iret
push
test
jl
xchg
fadds
mov
imul
movsb
xchg
cmpsl
icebp
test
sbb
pushf
arpl
pop
mov
lds
adc
shll
mov
dec
jg
imul
fisubrs
mov
aad
test
push
enter
push
mov
and
jnp
pop
mov
in
movsl
in
push
lahf
and
pushf
cmp
fbstp
mov
loopne
ror
xor
loope
imul
pop
data16
gs
lret
rcrl
je
jp
cwtl
loopw
dec
popa
or
push
sub
xor
lahf
adc
sub
ret
clc
mov
jne
popa
ljmp
ficoml
fmuls
cmp
or
insl
es
aam
mov
mov
add
sub
adc
cmp
in
push
dec
sbb
mov
xlat
out
lock
clc
shlb
mov
mov
jns
mov
decb
cli
inc
jle,pt
dec
ret
imull
stos
xchg
fildl
mov
int3
call
push
jecxz
enter
mov
fldenv
mov
jge
sarb
push
cmp
xchg
daa
les
gs
subb
sbb
sti
jo
or
out
adc
icebp
and
pop
into
arpl
push
test
mov
push
pushf
adc
loopne
mov
in
mov
ret
in
mov
ds
pusha
pop
mov
rorb
leave
sbb
push
stc
add
jmp
in
mov
ret
push
int3
xchg
cwtl
clc
or
sbb
inc
das
mov
add
bound
sbb
cmpb
inc
cwtl
ret
xchg
mov
pop
sub
lock
xchg
mov
jmp
adc
cld
inc
ret
jae
cmp
push
cmpsb
dec
orb
mov
addr16
mov
lahf
mov
aam
sahf
fwait
jnp
push
sbb
orl
or
aad
mov
add
lahf
call
or
or
lret
test
add
push
or
es
xchg
test
adc
or
mov
es
filds
es
dec
or
inc
jge,pt
addr16
jp
dec
pop
pusha
sub
adc
andb
imul
jb
xchg
push
add
inc
xor
sub
cltd
loop
popa
ret
jns
dec
ret
ds
rolb
stos
push
test
shll
daa
inc
ret
outsl
test
pop
test
arpl
mov
inc
rcrb
dec
jb
lahf
jnp
rcr
scas
dec
sub
pop
jecxz
pop
lds
movsb
adcb
ljmp
xchg
push
add
sahf
mov
dec
inc
int
jo
pop
jae
stos
outsb
jnp
xchg
scas
sbb
aad
mov
leave
sbb
mov
push
rcr
outsl
push
mov
out
shlb
ljmp
mov
fcoml
push
mov
int
xchg
les
xor
sahf
dec
inc
or
fstps
adc
leave
pop
in
sbb
push
test
lods
cmpsb
ss
out
pop
add
arpl
push
inc
jns
jge
pop
fs
cmp
addl
lock
cmp
add
rclb
sub
popf
jp
loop
pop
mov
mov
xor
movsb
mov
mov
jle
or
jne
rcrb
fdivrl
pushf
sbb
push
fnstcw
ds
in
sarl
lock
mov
adc
adc
and
adc
stos
push
ljmp
sub
inc
xchg
xor
stos
lret
fisubrs
ret
ja
loopne
add
sbb
mov
out
mov
cwtl
cwtl
mov
or
mov
repnz
dec
cmc
push
test
hlt
add
mov
xchg
dec
sbb
xchg
dec
pushf
and
in
xor
dec
and
mov
inc
lock
cmp
sub
sahf
mov
mov
hlt
stos
jge
ret
sub
lods
ljmp
and
xchg
sarl
imul
dec
add
sbb
ret
xor
fcomps
mov
fstps
popa
or
pushf
je
daa
outsb
inc
jp
inc
movsl
pop
popa
add
pop
add
pop
cmp
orl
xlat
ljmp
add
mov
cli
and
clc
subb
stc
inc
into
jmp
in
add
andl
mov
mov
jmp
xchg
push
int3
loop
pop
add
fistpl
cs
and
sbb
test
xor
outsb
xchg
and
push
push
cmp
mov
stos
mov
leave
pop
and
jmp
xor
dec
ret
fs
ret
je
or
or
ret
pop
push
push
imul
pop
loope
fistl
into
xor
pushf
fldt
adc
sahf
or
stos
inc
lret
xchg
xchg
pop
rcl
aaa
in
add
test
lea
pop
ss
test
mov
mov
in
xor
inc
xchg
xchg
pop
les
adc
insb
adc
xchg
call
movsl
in
sbb
adc
arpl
mov
adc
daa
add
jae
andl
in
loopne
cmc
shrb
rcr
add
ret
add
lcall
imul
in
dec
dec
push
repz
cld
or
xchg
xchg
mov
or
in
cld
push
cmpsb
in
ja
inc
arpl
add
dec
mov
pop
lods
push
dec
scas
cmc
xlat
mov
aas
mov
lea
inc
push
sub
outsl
xlat
or
push
mov
ss
mov
xchg
call
pop
pop
adc
add
inc
mov
sahf
lret
cmp
lods
mov
cs
pop
adc
mov
in
ljmp
pushf
stos
sbbl
sti
jmp
jg
out
out
out
or
pop
inc
adc
ret
cmpsl
fs
and
leave
push
jo
mov
imul
sahf
xor
jge
lcall
dec
jns
push
loope
loope
bound
testl
aaa
jle
inc
mov
pop
mov
mov
push
aas
cmp
mov
xor
out
mov
sarl
fwait
cli
sarl
subl
cmpsb
xchg
sub
out
mov
xchg
cld
dec
pop
sarl
shl
adc
jns
push
scas
xlat
pushf
popa
out
pop
orl
xchg
movb
stc
aam
pop
ret
dec
and
xchg
movsl
negb
inc
fucom
jp
xchg
pop
mov
add
inc
jno
cmp
inc
cli
mov
dec
cmp
push
xor
in
xchg
mov
mov
test
fs
pop
call
mov
sub
inc
jns
jnp
sbb
popf
ret
out
jae
pusha
mov
int3
arpl
push
xor
and
push
outsl
sti
cmp
shll
xchg
addl
push
imul
adc
fwait
pushf
rep
nop
jg
into
sbb
lock
inc
daa
pop
add
lods
inc
push
pop
outsb
sarl
inc
ds
jg
xchg
mov
and
lcall
mov
sbb
adc
test
adc
fiaddl
in
gs
pop
add
fwait
lcall
data16
ret
movsl
jge
add
cmp
daa
pop
dec
mov
mov
in
mov
dec
mov
sub
sub
sub
sbbb
into
je
clc
fprem
popf
lods
push
push
in
mov
lahf
js
ljmp
cld
outsl
dec
adc
adc
add
add
pop
bound
cmc
outsl
andb
cmp
mov
adc
adc
push
or
cmp
test
int
xor
rcrb
xchg
xchg
int3
xor
mov
xchg
lea
inc
adc
ret
repz
bound
pop
mov
dec
adc
js
out
push
leave
insl
mov
insl
mov
loopne
mov
mov
jo
xor
sub
inc
inc
mov
pop
je
jns
bound
jl
ficompl
adcb
fistps
push
jb
xchg
dec
mov
dec
add
inc
stc
nop
or
mov
push
jbe
dec
test
nop
dec
xchg
lret
ret
mov
fdivs
popf
fs
repnz
imul
add
xor
je
aad
push
in
add
add
lcall
cmp
notb
dec
js
mov
fldcw
push
shrl
enter
pop
fimull
push
popf
dec
int3
stos
repz
adc
into
roll
sbb
testb
push
cs
stc
lret
sub
adc
int
aaa
pop
dec
addr16
or
xorl
pop
pop
mov
jo
dec
push
jle
xorl
push
add
lahf
lret
jno
loope
popf
mov
and
add
lret
jae
jmp
test
imulb
xchg
adc
pop
sub
jbe
cmp
fstpt
int3
sub
adc
fstpt
sub
leave
sahf
mov
fwait
add
xchg
adc
mov
inc
push
adc
cli
mov
push
icebp
mov
clc
cmp
push
inc
push
push
mov
std
movsb
movsb
outsb
adcl
jmp
ja
mov
bound
icebp
add
cmp
push
or
orb
mov
fwait
pop
fisttpl
ja
mov
lea
fcompl
xor
enter
cld
pop
xchg
inc
mov
dec
clc
mov
sbb
push
add
sbb
leave
add
pop
je
push
insl
out
mov
es
xchg
jno
cltd
stc
dec
pusha
insb
leave
xchg
jne
movsl
es
lods
jns
lods
pop
loop
lock
mov
jnp
dec
out
cmpsb
adc
mov
dec
divb
sbb
cmp
mov
pop
cltd
adc
dec
popf
pop
jmp
in
sbbb
stc
push
xchg
addb
dec
dec
call
and
cwtl
aad
xchg
out
or
push
xor
addr16
movsb
pop
fiaddl
rep
lods
imul
lods
iret
lahf
adc
pop
imul
sbb
inc
add
lea
lret
pop
and
adc
es
sub
cmpsb
in
int3
cli
mov
lcall
cld
imul
jbe
mov
pop
mov
sbb
and
push
sbb
ss
adc
jle
push
fst
shll
jo
sarl
push
sbb
jecxz
or
mov
or
xlat
adc
adc
dec
cmp
das
add
jae
add
mov
das
dec
imul
xor
or
pop
je
jecxz
push
out
inc
ds
jb
lds
push
push
mov
xchg
in
cmpsl
mov
or
dec
jae
push
sub
loope
pop
jne,pn
icebp
mov
dec
cmp
push
daa
fisubrl
ret
jecxz
test
movsb
daa
push
mov
js
cli
sub
adc
and
pusha
lcall
sbb
and
rcr
fwait
mov
cmpsb
data16
out
outsb
loope
adc
jnp
mov
mov
or
pop
stos
mov
dec
mov
jp
mov
pop
jne
fnstenv
lea
nop
imul
fs
adc
ljmp
xchg
and
lock
pop
insl
cmc
push
pop
insb
ljmp
xchg
xor
mov
scas
or
pop
lcall
into
sbb
mov
mov
mov
scas
mov
sahf
pushf
dec
or
sbb
fdiv
aas
sub
push
jbe
push
sbb
or
dec
sbb
mov
sti
fldl
jg
mov
clc
xor
cmpsb
loopne
and
je
add
lods
jge
xchg
stc
test
loope
ljmp
cmpsl
pop
dec
cltd
je
sub
push
adc
add
xchg
movsb
hlt
dec
fisubrl
lock
pushf
les
mov
cmpl
mov
dec
fucom
fmulp
push
adc
sti
and
cmpsb
in
and
test
insl
xor
leave
xor
jb
insl
jae
lret
cmp
insb
out
or
add
xchg
push
sub
outsl
arpl
loop
inc
leave
adc
lods
iret
ret
inc
xor
mov
bound
mov
mov
jecxz
icebp
lds
sbb
push
inc
negl
sub
cmp
sub
fisubs
clc
sbb
insl
pop
roll
movsb
sub
imul
leave
push
aas
ss
int3
sbb
push
xchg
orb
dec
repz
pop
or
bound
cmp
call
test
in
cld
ja
fadd
sbb
repnz
pop
jge
pop
fbstp
mov
pop
and
sub
mov
rcll
test
rcl
xchg
xchg
cmp
cmp
jmp
jl
mov
sub
xchg
or
cmpsb
aaa
lcall
add
int
test
rorb
or
scas
call
imul
cltd
sub
ljmp
lahf
in
ljmp
popf
jp
insb
sub
xchg
pop
xchg
sbb
fwait
mov
fsubr
imul
sbb
mov
arpl
pop
adc
jb
outsl
lahf
pop
xor
mov
inc
or
cli
sub
add
ss
fs
mov
in
test
and
mov
mov
pop
aaa
aas
push
xlat
or
shr
pop
enter
and
xchg
xchg
ds
mov
pop
jbe
mov
in
popa
outsb
push
xchg
and
loopne
lods
cmp
pop
imul
ja
dec
add
loop
mov
mov
cmp
or
jno
hlt
mov
jg
lds
add
mull
push
aaa
repnz
and
sub
fwait
push
fcmovbe
push
std
jp
insl
push
clc
xchg
fsincos
data16
fdivrs
cltd
repz
add
popa
imul
pop
jle
testb
inc
cmp
arpl
xor
adc
lahf
xchg
test
pop
cmp
sbb
push
pop
push
xor
xchg
mov
mov
push
pop
mov
cmpsl
lret
xchg
in
mov
hlt
mov
cmpsl
in
scas
fs
jno
mov
pop
mov
lcall
push
nop
pop
jecxz
inc
stc
dec
out
lret
mov
fwait
and
pop
pop
adc
jbe
outsl
and
imul
out
lret
daa
xchg
inc
loopne
mov
pop
pop
mov
pop
ds
jnp
push
mov
nop
adc
movsl
loope
push
pushl
jecxz
and
jg
loop
icebp
test
shrl
xor
sbb
js
jmp
test
mov
push
sarb
call
sub
stos
movsl
les
jae
mov
enter
call
pop
ds
fwait
mov
repnz
push
js
push
inc
das
or
sahf
les
mov
fsubrl
or
testb
imulb
xchg
sbb
insl
dec
xor
je
pop
fmulp
xor
sub
mov
rcrb
and
sub
mov
push
xchg
xor
adc
fs
aad
sbb
nop
aaa
rcl
arpl
xchg
mov
mov
or
jg
adc
pop
add
out
pushl
decb
xor
loope
insl
fwait
push
push
scas
dec
push
sahf
mov
pop
and
sti
repz
pop
push
inc
jns
pop
and
bound
xchg
test
in
xor
test
cmp
add
dec
outsl
xor
pop
lret
add
out
push
data16
sbb
sbb
and
xor
cmp
insb
pop
lcall
das
adc
xchg
lcall
mov
mov
xor
or
ds
dec
sub
xlat
fisubl
dec
mov
lods
sti
stos
repz
adc
mov
mov
dec
cmp
ret
ds
test
dec
xor
test
loop
outsl
jns
mov
xor
inc
scas
mov
nop
fsubrs
addr16
pop
sub
or
in
sub
push
mov
xor
sbb
adcb
je
xor
addl
and
cwtl
sub
ljmp
test
xchg
lahf
leave
mov
mov
fwait
sub
sub
lods
aas
roll
fbstp
or
stc
pop
push
mov
sbb
push
pop
mov
scas
inc
nop
inc
mov
mov
inc
in
sbb
or
test
or
subb
dec
inc
mov
addb
dec
mov
push
mov
out
cs
test
lret
adc
adc
xlat
jae
pop
mov
in
dec
push
sahf
and
hlt
cwtl
add
mov
xchg
outsl
pop
xchg
dec
dec
movl
imull
mov
sti
jne
cmp
daa
xchg
push
adc
jae
xchg
adc
mov
jne
and
popf
mov
sarl
jno
nop
ljmp
pandn
add
arpl
pusha
pop
jnp
les
ljmp
add
add
jmp
addr16
jl
xlat
push
stos
iret
jne
dec
dec
add
mov
insl
xor
stos
cwtd
daa
test
dec
inc
jmp
das
xchg
jg
adc
sbb
mov
xor
fsts
jb
inc
and
sbbb
push
add
jmp
outsb
add
int
sub
aad
mov
lahf
out
add
loopne
stos
jb
sub
out
push
push
sub
jbe
xchg
jae
or
jbe
sahf
adc
lods
add
ret
inc
jno
outsb
adc
cmp
sbb
fsubrs
mov
inc
cmp
mulb
adc
dec
decb
cmp
popl
xchg
dec
ljmp
lahf
sbb
sti
divl
ficoms
rorb
sub
inc
and
fidivrs
lcall
movsl
das
jle
lahf
push
test
inc
push
cmp
xchg
lea
in
jecxz
jmp
ret
or
stos
mov
fmuls
push
out
push
repnz
ucomiss
or
leave
aad
cmp
xchg
jge
or
xlat
cltd
in
in
push
add
out
mov
push
jne
cmp
jmp
mov
sbb
add
mov
je
mov
mov
call
xlat
and
mov
fwait
loope
xor
scas
icebp
or
push
into
fwait
daa
pop
xor
cmp
out
iret
push
cs
inc
xlat
mov
aad
mov
add
add
push
adc
shll
into
loopne
decl
daa
push
mov
pop
xor
insb
outsl
rolb
fs
add
push
xchg
cwtl
xchg
xlat
pop
aad
mov
jbe
adc
movsb
cmp
lods
push
jge
hlt
cltd
in
out
rclb
xor
shrb
sti
lret
mov
out
and
sti
or
pop
push
add
cmp
popf
push
nop
fbstp
gs
inc
in
subb
sbb
shl
xorb
insw
jbe
xchg
ret
pusha
loopne
mov
fidivrl
sub
xor
nop
or
ds
xor
call
outsb
fwait
rcrb
jb
dec
int3
sub
daa
outsb
cld
adc
sarb
sbb
std
push
jecxz
mov
out
fnstsw
in
add
lea
lds
filds
sbb
adc
fdivrl
pusha
and
aad
notl
lret
fs
arpl
pop
mov
sub
shlb
jg
mov
push
dec
xchg
xchg
or
jg
mov
cltd
lcall
popa
sbb
xor
je
jg
xor
add
outsb
xchg
js
push
gs
in
xor
dec
subb
insb
push
jo
aaa
inc
jns
xor
lahf
ret
xor
dec
das
cmp
fisttpl
cld
gs
das
jecxz
into
sub
add
popa
mov
in
pop
shlb
test
push
push
and
sub
sti
cmpsb
adc
adc
cmpsb
push
xchg
push
add
push
cmp
les
push
call
je
ud1
mov
xor
insb
insl
iret
cmp
pusha
popl
nop
cmp
nop
test
addr16
loop
dec
cs
mov
mov
jno
sbb
ljmp
pop
ret
fstps
xor
adc
sbb
cmpb
cmp
sahf
mov
clc
cmpl
xchg
cmp
or
pop
fisubrs
in
sarb
dec
repnz
fdivl
jle
vcvtsd2si
sbb
mov
clc
xchg
pop
popf
rorb
add
adc
sarl
fbstp
xchg
decb
cltd
jns
or
sbbl
ljmp
pop
popa
push
sub
lahf
sub
sub
jp
cmp
xchg
loopne
xor
inc
into
xchg
mov
cmp
adc
leave
loop,pn
cmp
mov
xchg
cmp
mov
and
xchg
shlb
mov
stos
pop
addr16
scas
in
rolb
mov
xchg
sti
inc
inc
dec
xor
loopne
in
imul
dec
leave
mov
lock
loopne
setge
or
push
stos
mov
lahf
repz
cmp
fsubrl
iret
mov
mov
cwtl
mov
xlat
dec
aam
ja
mov
push
insl
inc
pusha
jl
ret
jbe
sbb
pop
test
test
mov
shlb
dec
dec
inc
pushf
mov
inc
ljmp
roll
mov
dec
lods
pop
mov
mov
fisttps
push
lret
sub
or
shlb
imul
jns
rorl
repnz
testl
popf
sbb
fbstp
orb
pop
cmp
stc
ret
or
lock
dec
cmp
mov
dec
or
je
dec
fdivs
out
mov
sahf
gs
clc
sub
dec
lods
fsubs
mov
adc
push
lret
pop
subb
das
jb
shlb
add
rorl
fdivrl
mov
pop
cmp
shr
repnz
mov
sub
and
fucomi
push
mov
inc
sbb
imul
out
push
dec
pop
cmc
inc
jecxz
mov
mov
addr16
test
iretw
scas
fnsave
sbb
mov
imul
or
sahf
push
fwait
sbb
xor
pop
sub
and
sub
lret
cltd
test
xchg
ja
movsl
aaa
lret
out
mov
pop
adc
call
mov
js
incb
hlt
je
jp
push
pop
test
xchg
sbb
inc
cmpsl
inc
mov
mov
sub
xchg
inc
int
out
outsl
jns
jl
ret
mov
jns
dec
mov
aaa
sub
dec
das
mov
shll
dec
adc
fisubs
mov
pop
inc
cmp
data16
aaa
dec
pop
adc
stc
lea
xchg
out
dec
scas
int3
mov
imul
mov
push
sub
xchg
pop
cmpsb
ret
js
stc
dec
xor
shll
or
fisttpll
daa
adc
iret
nop
stos
inc
fists
dec
nop
mov
dec
mov
cmpsb
mov
mov
pop
inc
xchg
jnp
cli
jns
in
repnz
xchg
mov
sbb
mov
fimuls
stos
insb
fdivs
sbb
mov
mov
negb
test
inc
bound
jmp
or
mov
or
aad
and
push
pop
lcall
pop
popf
inc
daa
leave
pusha
cmp
test
stos
lcall
ja
fildll
xchg
lahf
das
mov
mov
mov
sub
popf
cmpsl
dec
les
fbld
mov
mov
cmp
pop
ss
mov
jo
sub
add
mov
mov
sub
adc
decl
addr16
fadds
ljmp
mov
xchg
outsl
push
xor
dec
push
cld
mov
mov
add
xor
xlat
lcall
aas
adc
push
pop
ja
movsl
add
mov
gs
ret
add
movsl
push
sub
addb
ret
cltd
xor
xor
xor
pushw
add
push
imul
ss
cwtl
lahf
pusha
out
inc
push
sbb
inc
mov
fnstenv
mov
cmp
arpl
rorl
fcomp
arpl
test
mov
mov
and
ja
pop
flds
push
xchg
insl
push
nop
clc
add
movsb
push
xor
dec
jbe
enter
mov
or
nop
ficoms
xchg
stos
mov
and
fidivl
pop
flds
and
addb
mov
cltd
jg
dec
sub
pusha
sbb
jl
push
pop
xchg
push
xchg
movsl
or
sbb
into
and
cmp
or
test
fisubl
leave
jnp
jns
xchg
mov
dec
push
andb
lret
out
popf
js
test
hlt
push
lods
js
fcomps
shr
sbb
mov
enter
push
xor
mov
mov
repnz
orb
mov
mov
mov
lock
stos
pop
int
xchg
pop
cmp
xchg
cli
cli
jbe
pop
pop
fcoms
inc
dec
mov
jb
cli
push
and
mov
add
push
mov
jnp
jle
test
imul
pusha
pop
aaa
loop
test
and
addr16
adc
or
pop
daa
xchg
jle
int3
pop
sahf
fnstenv
dec
mov
cmpsb
sarl
cltd
pop
es
mov
xchg
push
dec
jg
mov
movsl
into
cmp
lds
push
or
in
lret
mov
mov
mov
rcrl
add
js
adc
or
xlat
cmpb
loope,pn
or
lock
inc
movsb
xchg
fmul
addr16
fidivl
movsb
mov
push
movsl
jg
mov
notl
mov
or
int3
std
xor
cs
push
andnps
pop
cld
outsl
pop
mov
jnp
out
sub
and
or
leave
imul
push
pop
add
fdivrs
aaa
std
popf
dec
pop
stos
pop
lock
mov
jno
test
cld
cmpsl
push
push
jecxz
leave
jg
fstpt
sub
adc
and
cli
sti
fbld
dec
pop
and
fs
testl
std
dec
ds
mov
pop
das
ja
jg
jecxz
xor
cmp
push
repnz
mov
push
jns
ds
cld
aaa
fldl
loope
mov
mov
xchg
sbb
inc
xchg
xchg
lcall
aas
sbb
and
jl
hlt
sbb
inc
push
adc
out
std
outsb
mov
jno
xchg
ljmp
push
sbb
aas
insl
aam
imul
mov
stc
out
dec
xchg
and
scas
cli
or
ffreep
xor
add
dec
mov
xor
dec
mov
mov
arpl
or
movsb
sbb
mov
lds
js
mov
rcrl
xor
inc
loopne
lock
adc
or
xchg
dec
test
stc
cmp
fbstp
cmpsb
cmc
hlt
jle
mov
add
movsl
jmp
arpl
ljmp
imul
fsubrl
mov
lods
jb
adc
cs
mov
sbb
int3
adc
fisttps
xor
dec
jnp
pushf
fscale
jbe
pop
add
clc
hlt
inc
jbe
lods
stos
inc
dec
addl
je
addr16
or
mov
lea
cmp
xor
bound
mov
pop
bound
pop
ja
inc
scas
push
cmp
xchg
mov
pop
idiv
xchg
mov
cmpsb
push
sub
fidivrl
inc
arpl
aad
sbb
cli
enter
pop
es
in
gs
rcll
pop
sbb
or
mov
push
jo
hlt
out
outsb
mov
nop
adc
in
hlt
pop
ficomps
mov
sub
repnz
ja
loop
adc
ret
jbe
fisttps
adcl
shll
out
pop
je
pop
fsubrl
fistps
push
bnd
pop
mov
cmp
sub
or
ds
mov
xchg
mov
pop
xchg
lods
std
mov
movsb
fs
inc
adc
lea
iret
jge
lcall
mov
lods
ss
test
jne
ss
test
popa
add
cmpsb
adc
cmpsb
lock
mov
push
loopne
lock
cmpsl
insb
xor
mov
movsl
aad
lcall
enter
pop
mov
cmc
add
pop
lock
adc
add
ret
insb
xchg
dec
shlb
fxsave
dec
fbld
xchg
fwait
and
xchg
cmp
mov
xor
push
adc
sub
sbb
inc
push
inc
jle
sbb
into
dec
push
or
sbb
mov
aam
or
cmpsb
int
gs
pop
and
or
mov
in
pop
imul
add
push
out
pushf
ja
stos
out
movsl
mov
pusha
jne
nop
lds
lahf
and
jmp
inc
xchg
mov
subl
jg
add
insl
xor
mov
mov
mov
jle
jp
scas
dec
mov
out
sbb
repnz
sarl
fucomip
adc
and
xlat
idivl
gs
enter
lahf
sbb
mov
insb
mov
mov
dec
inc
daa
and
sbb
mov
pop
mov
lds
int
adc
cmp
ficoms
mov
fucomip
push
mov
stc
enter
add
xchg
jl
add
xchg
jns
sahf
das
out
push
loopne
pop
push
push
cmp
mov
xor
sahf
cmpsl
mov
stc
dec
scas
aas
movsb
mov
mov
cmp
fisttpll
lcall
outsl
pop
xchg
cli
push
popf
negb
dec
pop
dec
mov
mov
push
dec
sub
sub
ds
cmp
xor
pop
cmpsb
cld
push
add
sbb
out
inc
lcall
push
clc
inc
inc
stos
pusha
pop
adc
mov
xor
push
mov
ret
adc
fwait
outsl
js
scas
movsl
gs
lock
loope
outsl
out
dec
fisttpl
xor
mov
cmpsb
pop
or
push
sub
out
mov
or
jae
cli
dec
sbb
andb
nop
sbb
add
icebp
ljmp
out
xchg
daa
xchg
mov
dec
sahf
dec
mov
mov
mov
scas
pop
fcmovnu
sub
pop
lahf
xchg
add
ret
or
pop
fs
dec
cld
mov
out
mov
mov
outsb
lea
xchg
cld
push
loope
adcb
lock
lock
push
incb
push
es
popa
arpl
push
outsb
or
inc
fmuls
insb
lds
out
cmc
push
jp
lahf
jl
out
jg
std
repnz
pop
inc
and
push
and
mov
rolb
mov
push
push
xchg
test
inc
stc
jns
dec
sbb
bound
mov
mov
int3
adc
jge
es
mov
movhps
and
or
pop
mov
jno
xor
mov
fldl
mov
mov
cld
pusha
mov
xchg
push
popf
rcl
lds
and
add
push
test
leave
scas
jno
aaa
in
mov
jge
sbb
fisttps
push
call
sbb
xor
pop
cmpl
cmp
jbe
stos
sbb
jae
mov
lods
xchg
incl
sub
xchg
cmp
xlat
adc
sbb
jns
mov
jne
add
push
adc
inc
shrb
mov
ret
stc
push
cmp
punpckhbw
sub
jne
add
in
ss
shrl
pop
sub
cmp
mov
dec
cs
popa
mov
add
mov
cli
loopne
in
sub
pop
rcl
loop
sbb
inc
mov
out
jns
out
pop
rolb
daa
mov
mov
xor
inc
jae
addr16
and
jp
loop
in
shl
pop
xorl
jae
add
call
mov
sbb
shl
inc
or
add
and
loope
jbe
js
xor
pusha
xor
cmp
int
sub
add
xor
loopne
sub
push
inc
fisttpll
inc
loope
push
lahf
xchg
add
push
xchg
repz
mov
add
cwtl
addr16
pop
or
lret
dec
shll
int
lcall
pushf
sub
popf
sub
outsl
stos
inc
or
inc
push
push
enter
jmp
cmp
and
aam
orb
or
insb
xchg
xor
mov
in
stos
adc
mov
add
adc
mov
add
cmpsb
cltd
popl
lods
out
mov
outsl
cmpsl
mov
adc
cmpsl
adc
xorl
loopne
loopne
pop
add
sbb
inc
inc
cmp
sarb
and
ja
dec
mov
mov
mov
xchg
in
popf
loop
insb
cli
pop
jle
repz
pushf
sbb
sub
mov
add
add
aad
dec
aad
inc
in
iret
repz
inc
inc
icebp
std
aad
mov
adc
jno
scas
repz
sbb
push
loopne
add
sub
outsb
mov
pop
les
dec
sti
cmp
jno
adc
enter
cmp
or
xchg
pop
sti
pop
cmp
sbb
inc
addr16
es
pop
je
pop
push
fists
iret
out
add
pop
inc
pop
std
sbbb
lcall
or
mov
negb
or
cltd
push
mov
xchg
es
jl
mov
aaa
icebp
enter
sarb
in
lods
scas
xchg
dec
xchg
mov
mov
das
push
push
dec
lahf
repnz
imul
icebp
jl
cmp
cmc
push
sbb
call
jb
sbb
push
inc
call
enter
xchg
cmovg
inc
or
push
out
mov
fwait
pop
xor
mov
rclb
aaa
ljmp
mov
lcall
pop
sahf
pop
sbb
xchg
lea
and
mov
or
mov
fildl
pop
mov
je
jmp
pop
jge
adc
inc
cmp
rcrb
jge
insb
shll
sbb
push
scas
pushw
into
xchg
xchg
cmc
mov
dec
xchg
jg
ss
aad
adc
fs
into
arpl
stos
xchg
pusha
xchg
cltd
and
aam
add
rclb
ja
pop
xchg
cmp
iret
call
mov
adc
insb
lcall
dec
pop
or
pcmpeqw
cmpb
xor
cmp
bound
and
aaa
inc
adc
sbb
cmp
fwait
out
push
pop
daa
imul
jle
outsl
add
push
test
cmp
das
das
add
int
sbb
fildll
mov
test
xchg
repnz
push
pop
mov
cmp
fildl
push
test
mov
call
pop
xchg
adc
arpl
jno
xor
inc
adc
je
push
out
das
repz
inc
cmc
adc
fnstcw
jbe
icebp
pop
push
push
adc
insb
leave
xchg
mov
pusha
lret
test
pop
sub
inc
ret
in
out
incb
lahf
or
out
ret
ss
sbb
or
and
rolw
pop
jae
dec
insl
xor
dec
lcall
xorl
xor
jb
test
sub
imul
cmc
daa
sbb
cmp
out
xor
and
aas
cmc
js
outsl
push
jns
in
pop
jae
loop
mulb
fsub
add
repz
jo
subl
pop
xor
test
repnz
cmpsl
pop
inc
popf
xorb
rorl
idivb
adc
jle
sti
cwtl
int3
add
outsb
aam
push
cmp
outsb
js
les
adc
leave
ljmp
nop
fs
sub
and
cmp
xchg
jb
icebp
pop
ret
clc
in
mov
int
clc
outsb
lods
sub
pop
sbb
addr16
xchg
and
dec
cmp
pop
loope
popa
push
mov
jg
lret
mov
mov
cmpsb
inc
fldl
cmpsb
into
scas
popa
negb
mov
xor
xor
dec
pop
sub
add
sbb
ja
push
add
inc
hlt
sti
addr16
sbb
mov
add
jbe
fisttpl
mov
mov
add
out
or
mov
out
imul
in
fistl
ret
cmp
dec
into
scas
mov
out
push
sbb
lahf
out
sbb
jle
rorb
jle
push
aad
sub
cld
lea
std
jle
sbb
test
fidivl
and
stos
rcll
ficompl
lret
push
repnz
ss
in
call
dec
add
movsb
gs
inc
lods
push
cmpsl
lahf
mov
pop
movb
in
fimull
sbb
jae
sbb
dec
rcrl
enter
cmp
xlat
ss
add
aaa
mov
mov
xor
arpl
imul
popa
popf
call
and
cmp
adc
cmpsb
flds
stos
ja
pop
cwtl
jne
subl
xchg
nop
push
in
testl
or
add
mov
mov
and
ss
sub
popf
dec
loopne
in
dec
lcall
repnz
sub
stos
cltd
or
test
sbb
movsb
fwait
subl
dec
lods
push
add
xor
pop
adc
jno
mov
in
lcall
jne
xor
adc
in
cmpsb
xchg
aas
stos
jecxz
icebp
jno
and
or
sub
lret
jg
push
call
push
lods
mov
in
jns
sbb
fisttpl
push
in
push
xchg
clc
shll
and
or
dec
jo
sub
cmpsl
xchg
lock
pushf
movsb
or
movsl
dec
dec
mov
push
pop
ss
sbb
outsl
sbbl
mov
subl
xor
fcompl
shl
sbb
dec
lcall
out
dec
adc
ret
lds
xor
out
mov
lds
scas
into
ljmp
sbb
mov
test
dec
loop
mov
cld
sbb
sub
leave
jbe
insb
fwait
and
dec
nop
cli
adcb
ja
and
lea
or
sbb
shll
mov
and
pop
push
mov
pop
mov
insb
or
divb
into
dec
jb
fwait
popa
int3
push
dec
and
cmp
mov
xlat
cmp
pop
add
cli
rcl
je
add
fmull
cmp
std
mov
in
mov
loopne
iret
test
outsb
mov
mov
xchg
pop
and
adc
insl
scas
ljmp
fdivrp
add
pop
cmc
and
cmp
mov
in
lods
in
test
sbb
xchg
sbb
lcall
xchg
shrl
aaa
or
xor
mov
outsb
xchg
imul
mov
push
out
sub
mov
dec
scas
and
push
cmp
cltd
and
cmc
xor
add
and
dec
mov
popa
push
jge
or
mov
jl
jge
pop
and
sti
sti
dec
leave
sub
jne
inc
jmp
xorl
xor
mov
push
mov
cmp
inc
pop
fcmovbe
mov
mov
and
or
sti
adc
and
lcall
add
mov
lahf
testl
push
mov
pop
popa
push
push
mov
sbb
pop
push
cld
mov
adc
and
sub
and
in
iret
inc
pop
repnz
cmp
bound
repnz
ja
test
adc
out
push
inc
mov
ret
xchg
daa
movsl
mov
aam
hlt
es
sub
and
sbb
hlt
call
psrlq
adc
lock
cmp
mov
repz
in
push
adc
push
inc
in
enter
and
lret
or
mov
test
adc
and
or
sti
lret
or
shr
gs
aam
mov
bound
mov
test
jbe
imul
aam
mov
xchg
xchg
dec
sti
mov
bound
sahf
jg
mov
lahf
test
cld
cmc
movsl
sub
pop
adc
out
sti
adc
add
es
pushf
push
pop
xor
mov
faddl
mov
rorl
aam
and
arpl
leave
sbb
addr16
fwait
xchg
stos
jo
push
xchg
dec
andl
lahf
aas
nop
jmp
testl
mov
cltd
pop
std
pop
fmuls
stos
and
addr16
lea
fs
cmp
xor
cmp
dec
lock
in
mov
xchg
addl
cld
mov
sbb
or
fstl
ret
in
shrl
mov
jne
or
mov
push
sub
jle
add
in
mov
into
seto
jmp
cli
repnz
jb
push
and
xchg
dec
dec
outsb
push
or
sub
jge
add
loop
imul
xchg
mov
jne
dec
popf
push
pop
insb
cmp
xchg
sbb
lods
jmp
add
mov
mov
in
jae
cmc
xchg
mov
mov
jo
xchg
or
outsl
xchg
movsl
and
loop
adc
push
stos
rcl
pop
sahf
fiadds
pop
adc
xchg
xchg
loope
sub
cmp
enter
sub
aam
stc
fildl
pusha
inc
inc
jns
cmp
in
jp
hlt
mov
in
xor
add
jp
lcall
lds
pusha
ss
loopne
pop
inc
cmp
repz
fcmovb
movsl
call
inc
arpl
clc
hlt
lret
cmp
push
jno
dec
rolb
mov
les
lea
pushf
fwait
in
xor
dec
mov
add
jnp
jno
pop
test
mov
xchg
lods
adc
xchg
mov
repz
xor
int
call
jge
out
dec
add
outsl
dec
mov
nop
mov
int
in
imul
mov
and
sbb
add
and
ret
fildll
mov
push
push
cmpb
jl
xchg
fdivs
mov
xor
inc
ret
xchg
decb
rorb
outsb
in
xor
insl
and
rcll
sbb
stc
popf
paddb
or
scas
dec
cmp
test
pop
movsl
frstor
adc
cmp
lods
cld
cmpsl
dec
ljmp
xchg
icebp
or
repz
or
sbb
imul
rcl
dec
aas
pusha
mov
or
xlat
fildll
push
cli
stos
inc
dec
sti
sarb
jle
xor
mov
mov
test
je
add
outsl
add
jp
adc
jae
push
cmp
lret
inc
mov
sub
mov
sbb
hlt
cmp
xor
add
lcall
lods
mov
inc
mov
xor
in
nop
int
mov
xor
push
dec
decb
sahf
push
pop
outsb
jmp
dec
lahf
flds
in
push
nop
sbbb
xchg
push
mov
inc
inc
repnz
mov
xor
dec
xchg
jl
mov
insb
xlat
cmp
out
push
dec
xchg
shll
xchg
mov
xchg
insl
fs
push
or
jb
sub
shlb
enter
nop
shrb
lods
and
leave
out
jno
daa
inc
int
out
jle
add
push
pop
push
mov
rorl
popf
jno
loopne
pop
push
push
je
out
stc
sbb
sbb
sahf
fstpt
jbe
loopne
test
pop
ret
jg
mov
popa
ljmp
and
or
lret
push
xchg
cmpsl
ret
xor
in
fcmovnbe
test
xor
inc
sub
fcoms
fistpl
jmp
test
adc
fdivrs
sar
mov
movl
out
in
lret
pusha
hlt
cli
push
stos
fldt
outsl
add
arpl
hlt
or
dec
mov
xor
lds
pusha
add
sbb
addl
push
fists
xchg
roll
and
xchg
jecxz
dec
std
mov
dec
scas
dec
movsb
mov
xchg
mov
xchg
jae
loope
push
sub
cmp
jae
mov
inc
inc
mov
sbb
jmp
rcrb
add
sbb
push
xchg
jo
mov
cmp
in
fstl
fstl
lret
outsl
mov
jg
in
pop
dec
sbb
pushf
lret
sti
ljmp
in
and
adc
add
test
cmp
mov
cmc
pop
popa
in
and
stos
cmc
dec
mov
dec
cltd
inc
push
sub
cmp
decb
cmp
xchg
pop
loope
mov
jo
scas
int
xchg
sbb
rolb
pop
ds
push
pop
mov
lods
out
cmp
fsubl
lret
lock
xor
sarl
push
lea
xor
fwait
incb
cli
repz
mov
clc
jecxz
es
push
sbb
enterw
cld
mov
fldz
xor
xchg
daa
dec
repnz
xchg
sbbl
adc
lea
call
push
lcall
sti
fidivrl
mul
ja
mov
test
and
xchg
test
dec
sbb
sbb
outsb
push
lods
cmp
inc
mov
cs
xor
clc
stos
es
mov
dec
cs
xchg
sbb
fwait
cmp
pop
xchg
fdiv
fs
or
cmc
stc
or
int
xchg
pop
mov
mov
cmpsb
fnstsw
out
cld
leave
int
xchg
insb
movsb
sbb
dec
adc
fisubl
and
hlt
adc
sbb
cmp
sbbb
adc
movsl
dec
inc
add
roll
and
xchg
inc
nop
cltd
mov
js
arpl
and
inc
out
or
cs
jmp
pushf
cld
movsl
mov
pop
and
adc
inc
lds
xor
xchg
je
shl
enter
jnp
mov
mov
addr16
adc
leave
mov
xor
adc
fldenv
dec
pushf
cli
sub
pop
mov
mov
call
out
sbb
inc
mov
mov
addr16
mov
sbb
icebp
cltd
or
xchg
mov
xchg
lcall
in
test
lea
jl
cmp
jg
mov
pushf
out
mov
adc
push
adc
les
inc
mov
test
xchg
repnz
testb
clc
push
std
xchg
shlb
movsl
rcll
sahf
mull
xor
xchg
daa
out
dec
push
or
adc
outsb
sbb
cmc
pop
mov
push
insb
xchg
pop
push
push
sarb
in
insl
repnz
xor
push
loopne
sub
roll
aaa
sarb
push
mov
cmp
inc
orb
inc
cld
jns
cmc
mov
add
sub
sbb
fldl
lahf
lar
cmp
mov
icebp
push
or
sub
movsl
push
cs
mov
push
mov
roll
dec
nop
hlt
push
jp
adc
or
push
xor
xor
repz
movsb
inc
xchg
fimuls
cmc
test
dec
fstl
push
xor
push
push
aad
stc
sbb
push
fdivrl
outsb
adc
aaa
sub
daa
xor
lret
inc
add
lcall
xchg
sub
fbstp
push
push
cs
jge
mov
iret
arpl
inc
fs
loopne
cmp
inc
into
mov
push
mov
adc
mov
ficoms
sbb
ret
inc
or
iret
push
or
sarl
push
jbe
cwtl
jne
sahf
rorl
outsb
pop
add
adc
repnz
push
jp
test
inc
movsl
inc
mov
or
pop
test
cltd
cmpb
mov
jmp
scas
sbb
es
pop
sarl
outsb
lahf
ss
enter
jecxz
cmp
in
ljmp
clc
sbb
repz
in
lret
jmp
sub
cli
imul
push
adc
adc
fimuls
cwtl
cmp
sbb
or
mov
jb
ss
mov
push
fnstsw
mov
dec
add
cmpl
negb
stos
fsubrl
lds
jo
push
mov
movsb
xor
jnp
or
lds
cmp
popf
scas
loopne
outsl
add
outsl
pop
cltd
cmc
rorl
xlat
and
mov
es
mov
cmpsb
jae
movsl
rcrb
fmul
dec
xlat
dec
fstl
test
pop
or
mov
cmp
sub
data16
fs
pop
xchg
stos
mov
nop
stos
div
aas
divb
mov
sti
sti
popf
aas
adc
outsl
add
jecxz
mov
lea
imul
movsb
test
iret
arpl
xchg
cltd
daa
jecxz
fisttps
ret
mov
or
sbb
shrb
inc
clc
enter
popf
lret
subb
lcall
and
mov
inc
fcmovnu
sbb
test
imul
outsb
fs
out
lock
js
cmp
jo
hlt
pushf
adc
xor
fcmovne
pop
loope
loopne
sbb
cmp
mov
sbb
icebp
pop
out
cwtl
neg
xchg
bound
add
fidivrs
mov
stos
sbb
jl
ror
mov
clc
jno
mov
mov
hlt
fnstcw
adc
call
cmp
ss
add
mov
mov
and
into
add
adc
jle
lret
rolb
xor
enter
lcall
xor
repnz
scas
mov
adc
adc
fistpll
int3
or
ret
dec
cmp
mov
repnz
inc
lret
mov
push
dec
push
sbb
ljmp
pop
jns
jns
stos
cs
mul
add
cmpb
push
stos
rcll
push
mov
std
push
sbb
xchg
sbb
fnstcw
cmp
push
xor
pop
dec
mov
sub
out
sub
add
mov
dec
leave
push
xor
adc
shlb
adc
inc
ret
mov
cld
lret
sahf
out
cmp
xchg
push
aam
xlat
mov
lea
or
mov
xchg
mov
dec
in
push
cmp
mov
int3
cmp
fnsave
sarl
adc
aad
pop
test
and
popa
mov
stc
pop
pop
mov
adc
loopne
mov
jl
xchg
adc
mov
test
aaa
add
outsl
jb
jns
mov
hlt
push
add
xchg
in
inc
ljmp
add
or
inc
mov
out
mov
gs
out
dec
or
add
add
sub
mov
pop
outsl
pop
mov
fildll
inc
mov
cmp
fwait
lcall
les
pop
lock
aad
jb
xor
js
leave
mov
dec
inc
mov
push
lret
xor
fs
and
lcall
adc
jne
dec
inc
lahf
jmp
mov
ljmp
mov
clc
popf
inc
dec
fldt
jo
aam
mov
sbb
movsb
pop
xchg
adc
and
jle
xchg
insl
mov
dec
jp
xlat
jo
push
xchg
mov
push
mov
pusha
jns
in
js
cs
incl
lds
test
les
pop
outsl
push
jmp
xor
jl
cmpsl
rorb
and
icebp
lods
cmp
dec
mov
dec
jle
in
cli
cmp
mov
and
icebp
push
mov
cmpb
pop
push
mov
and
mov
nop
push
fs
lret
jb
lret
sub
fdivs
hlt
dec
sub
mov
fwait
dec
scas
inc
xchg
out
add
mov
sub
repz
cmp
scas
fimull
push
sub
sub
pop
jge
lods
xor
cmpsl
les
jl
in
mov
iret
and
addb
popf
scas
or
orl
cwtl
pop
loop
sub
call
std
daa
jge
inc
je
mov
in
adcb
ljmp
mov
stc
cmp
cld
loope
rcl
add
sbb
pusha
iret
pop
dec
in
mov
rclb
cmp
mov
sub
nop
aad
push
inc
mov
int
fmull
fmull
and
or
std
mov
push
mov
enter
and
jbe
or
jbe
mov
scas
lea
jne
cltd
xor
and
pop
sarb
jno
and
rclb
mov
jmp
gs
pop
xchg
sbb
ljmp
pusha
add
xchg
mov
stos
aaa
sbb
rol
mov
insl
jno
cmc
ret
sbb
lret
xchg
sahf
pop
mov
ret
xchg
mov
js
rorb
shrl
mov
xchg
xlat
jae
jle
mov
jg
add
add
sbb
imul
fwait
or
scas
cmp
push
scas
mov
insb
cmp
insb
cmp
and
jle
cmp
out
pop
pop
cmp
shlb
stos
push
stos
test
clc
pop
cli
test
cmp
sub
mov
push
jl
in
mov
push
popf
call
sar
lahf
xchg
movsl
mov
int
popa
aad
push
in
mov
call
xchg
test
call
adc
mov
pop
inc
cmpsb
inc
call
gs
add
lds
andb
inc
fimuls
outsl
pusha
jmp
aas
sarl
stos
movsl
mov
mov
adcl
cmp
lret
mov
jg
in
mov
pusha
push
int
in
pop
dec
mov
pop
xor
icebp
jns
ja
fdivrs
adc
lret
test
js
cmp
ret
cmc
push
test
pop
xchg
pop
filds
enter
shlb
mov
dec
insl
test
sub
add
jle
sub
pop
int3
cmp
getsec
cmpsb
dec
push
add
mov
ret
gs
pop
in
push
sbb
add
cwtl
pop
fimull
outsl
int3
lahf
lret
stos
mov
add
test
sub
icebp
add
and
or
sbb
xor
in
dec
pop
xor
lock
in
add
ret
cmp
xor
cmpsb
hlt
xchg
mov
aas
dec
mov
bound
xlat
enter
pop
sub
loopne
xchg
scas
lret
dec
adc
ljmp
jmp
inc
jg
frstor
mov
scas
icebp
xchg
xor
rolb
mov
mov
push
sub
pop
out
nop
mov
inc
clc
mov
jl
lods
xchg
and
loopne
aaa
mov
inc
ficomps
mov
ficoml
jns
cmp
xchg
jmp
dec
test
iret
stos
pop
adc
out
pop
xor
jmp
pop
jo
and
mov
idivl
call
or
mov
mov
ss
jbe
xor
mov
fninit
jbe
mov
js
mov
fs
cmp
add
mov
jo
shl
push
fstl
xor
mov
stos
fcoml
rolb
test
mov
out
inc
mov
popf
mov
lret
inc
or
imul
popf
inc
push
xchg
pop
insb
pop
icebp
inc
je
loopne
sbb
ds
push
mov
sbb
fadd
push
lds
push
aaa
loop
add
and
push
lret
push
mov
insb
dec
icebp
add
mov
add
jbe
push
and
lret
dec
push
and
mov
ss
les
dec
stos
negl
lock
not
mov
dec
call
jae
fwait
pop
roll
cs
cwtl
inc
push
aaa
fisubrs
fadds
mov
jmp
jge
push
mov
mov
adc
xor
mov
jae
sbb
insb
aas
lahf
or
je
xchg
cli
dec
xchg
cli
sub
int3
cmp
dec
sub
lea
xchg
sub
mov
mov
dec
mov
mov
fcomip
mov
pop
adc
add
mov
sub
cli
jp
stc
inc
cld
arpl
adc
lcall
pop
test
std
xor
lock
dec
fisubs
sbb
mov
pushf
jmp
or
outsb
stc
fisubrs
jle
mov
test
xlat
out
imulb
xor
adc
mov
adc
inc
outsb
cmp
divl
mov
into
ja
or
adc
sub
and
into
lret
in
adc
mov
mov
outsb
jne
int3
cs
nop
or
mov
pop
arpl
rcl
xor
xor
stos
ror
stos
xchg
sar
insb
xchg
sahf
data16
dec
mov
push
stos
sbb
adc
push
or
cltd
in
jnp
and
test
push
aas
and
stc
bound
mov
mov
sbb
cmp
inc
jnp
jmp
xor
rolb
xchg
je
mov
or
pusha
or
jns
dec
in
gs
pop
jl
fisubs
adc
test
call
jb
arpl
sahf
int3
daa
mov
filds
or
cli
push
jne
dec
hlt
roll
aam
or
fisubrl
jae
or
stc
xchg
aaa
sbb
popa
cmpsl
cmpsb
icebp
movb
movsb
loopne
dec
out
das
enter
ljmp
or
jne
adc
cltd
sbb
sub
push
cmpsb
call
jo
dec
dec
add
adc
jbe
test
xchg
lods
lea
jmp
stc
and
sub
iret
or
cmp
cli
jbe
push
jbe
mov
cmp
sbbl
dec
xor
or
mov
aas
pop
xchg
jg
pop
adc
sub
sahf
je
pop
mov
mov
sub
hlt
sbb
shl
push
lahf
sub
out
mov
xor
jbe
mov
test
stc
aad
xchg
outsb
xorl
gs
imul
pop
add
psubsw
dec
push
daa
sbb
ret
fldt
rclb
pop
mov
adc
pop
repz
lret
push
mov
pop
shlb
push
insb
in
inc
push
fdivs
fistpl
sahf
sbbl
adc
mov
pop
mov
lock
sbb
ret
inc
sbb
lods
test
sub
shrb
std
into
data16
outsl
dec
mov
xor
gs
loope
je
inc
xchg
jns
cli
rcl
xor
xchg
sahf
push
inc
or
imul
pop
dec
out
sti
sbb
xchg
jmp
je
jg
sbb
jns
mov
dec
out
mov
and
fwait
cltd
cli
push
shll
add
mov
lahf
mov
xorb
stos
jg
lds
ljmp
fmul
xchg
dec
insl
mov
leave
pushf
jb
cmpsl
adc
cmp
aam
pop
outsl
push
cs
inc
test
mov
sbb
inc
testb
cmpsb
cmpsb
pop
sub
xor
test
inc
in
loop
out
movsl
pop
mov
ja
jns
movsl
fstps
js
push
daa
add
loopne
popa
outsb
out
mov
cwtl
or
cmp
je
aam
jbe
imul
out
or
shll
lret
fldl
and
inc
push
divl
gs
xchg
stc
add
push
push
sbb
mov
repnz
ljmp
sarb
push
mov
insb
andb
pop
jmp
jp
mov
test
pop
btr
mov
aaa
pushf
xchg
pushf
push
icebp
dec
xchg
adc
sahf
xchg
test
jg
mov
adc
call
ja
mov
aad
jbe
cmc
out
cmp
ficompl
test
pop
adc
and
inc
scas
fstps
repnz
stos
scas
push
mov
mov
dec
cmp
or
fld
jg
fstps
xchg
push
xchg
test
sub
mov
pop
or
jnp
push
lcall
aaa
rclb
sar
add
outsb
push
aaa
push
mov
jae
outsl
test
xchg
out
stos
cmp
aas
sub
shlb
xlat
test
fst
sbb
mov
or
jmp
pushf
stos
xchg
shll
xchg
addr16
fsubl
ret
jmp
lcall
test
or
addr16
scas
mov
movsb
or
sarb
pop
lcall
roll
aaa
jno
lods
cmp
and
cs
jbe
cli
xchg
loopne
sbbl
jbe
mov
push
leave
ljmp
nop
inc
fs
test
xor
push
mov
and
call
das
aam
mov
push
cmp
push
jns
jge
mov
pop
inc
inc
scas
dec
inc
outsb
add
mov
jne
loope
mov
scas
int
mov
jle
sbb
dec
fiadds
push
daa
out
jge
push
jle
jle
clc
and
jg
inc
fs
les
xchg
cltd
dec
and
fldlg2
xlat
dec
sahf
cmp
mov
ljmp
mov
sbb
ja
sbb
imul
scas
add
xor
insb
pop
insl
jb
adc
cmpsl
push
scas
xor
rcrb
mov
push
loop
jns
mov
sarb
adc
jno
cwtl
mov
sub
rcl
pop
fwait
data16
or
or
add
jne
imul
or
arpl
add
xchg
cltd
add
or
and
cli
mov
sub
mov
das
fimull
sti
mov
into
push
and
xchg
add
xchg
mov
push
rep
xor
jge
xor
daa
push
xor
mov
mov
and
sbb
sub
loopne
dec
imul
inc
mov
cmpsb
lret
mov
testb
xchg
ficoms
ret
push
movsl
dec
stos
push
loopne
xor
inc
add
inc
xchg
push
mov
sbb
xchg
test
or
xchg
in
lret
inc
shr
ss
inc
push
clc
xor
push
push
mov
nop
cli
push
scas
jnp
sbb
cmp
shlb
xor
sub
jae
jbe
fistpl
jae
int3
aas
test
and
sbb
stos
into
sub
xchg
ds
hlt
movsl
js
pop
push
aas
mov
dec
lcall
pop
and
inc
shlb
push
and
push
mov
inc
or
jb
ja
mov
shlb
ljmp
push
dec
cmpsl
addr16
adc
cmpb
and
cmp
inc
xchg
and
das
mov
cmp
lods
mov
inc
mov
sbb
xchg
or
mov
es
fidivs
mov
xchg
adc
xchg
insl
fidivrl
stc
das
ret
loope
in
jae
inc
flds
sbb
jb
pop
cmp
cmpsl
insb
dec
std
call
sub
fiaddl
int3
pushf
mov
pop
ja
jg
stc
and
push
xchg
icebp
das
ds
leavew
jnp
sbb
imul
adc
mov
pop
push
popf
fistps
movsb
shr
mov
jl
and
mov
imulb
ja
out
and
mov
xchg
decb
dec
cmp
dec
mov
mov
dec
testl
pop
push
fistl
jle
lahf
mov
popf
frstor
test
push
xor
stos
push
mov
mov
fwait
dec
fcoml
push
mov
popf
push
std
pop
inc
mov
rorb
mov
cs
in
fldl
add
xchg
sar
shll
ds
lods
enter
sarb
jmp
pushf
jp
mov
cli
cwtl
and
testl
test
or
jnp
push
add
xchg
mov
into
push
lahf
in
ss
cli
loope
inc
mulps
out
std
clc
mov
dec
movsb
std
fstpl
scas
push
ss
pop
jmp
daa
cmp
mov
dec
adc
mov
xlat
sub
dec
pop
aas
fwait
sbb
mov
daa
fstps
push
xchg
or
fldl
jo
mov
inc
fadds
int
cmp
in
xor
jg
push
loope
pop
pop
pusha
je
adc
ja
fwait
add
dec
stos
imul
pop
push
icebp
mov
neg
xor
mov
cmp
sub
stc
cmp
mov
adc
push
popa
repz
test
cmpl
rorl
jle
hlt
call
inc
push
lods
mov
pushl
fsubrp
and
jmp
rcll
push
pop
pop
call
in
outsb
or
movsl
mov
cmp
mov
dec
xor
jae
jbe
aam
sub
into
int
ss
cmp
iret
sbb
out
pop
aaa
out
into
sbb
mov
dec
out
cs
and
cmp
test
cmp
aad
dec
fisubrs
test
or
push
sbb
xor
outsl
mov
leave
fiaddl
lcall
sub
pop
popf
add
sbb
mov
xor
ss
push
push
pop
fimull
sub
xor
cmp
sbb
js
mov
lahf
inc
push
xor
imul
jle
push
lret
in
mov
cmpl
scas
add
loop
jecxz
imul
push
mov
in
in
push
add
dec
loope
inc
outsl
pop
stos
jnp
inc
jb
jmp
das
jbe
push
cmp
pop
hlt
push
sti
sbbl
xor
xorl
test
mov
test
mov
es
jae
out
jbe
jnp
adc
and
adc
jae
pop
cld
push
daa
fcomps
pusha
pop
ror
fisubrl
int
jne
lods
inc
gs
outsl
outsl
fwait
cmp
imul
fiadds
int3
cmp
add
sub
mov
push
adc
inc
xlat
lock
cmp
inc
jp
xchg
push
in
ret
dec
adcb
xor
lahf
int3
pop
push
add
pop
xchg
frstor
int3
or
lds
loope
es
adc
es
add
xor
imul
sub
add
sbb
pop
mov
scas
xor
clc
stc
push
sbb
cld
mov
fbstp
ja
xor
nop
shlb
int
pop
jne
or
cmpsb
sbbl
popa
pop
xchg
and
pop
mov
movsl
adc
int
movsb
mov
test
mov
nop
pop
adc
std
lea
call
xchg
mov
arpl
pop
test
jne
inc
mov
les
pop
jl
mov
fadd
imul
sbbb
fsubrs
jp
mov
sar
mov
jge
mov
jns
mov
mov
out
cmp
push
es
jae
cmpsl
mov
xchg
or
lods
adc
imul
and
inc
mov
mov
test
or
aad
addr16
add
ret
mov
rorl
into
scas
stos
scas
inc
xchg
arpl
push
popf
pop
mov
rorl
popf
push
mov
jno
scas
mov
jne
jno
aam
pop
mov
cs
pop
out
adc
cmp
int3
push
mov
xchg
js
loop
dec
das
popa
push
sbb
push
mov
sbb
cld
jne
add
jae
dec
cmpsl
mov
icebp
push
in
repz
cmp
daa
pop
mov
inc
int3
inc
popf
ret
xor
push
ret
mov
subb
icebp
stc
pop
or
cmpl
push
jbe
mov
mov
ja
int3
scas
cmp
xor
in
out
dec
mov
call
cmp
divl
in
and
shr
xchg
hlt
xor
outsl
sub
popa
mov
xchg
push
inc
scas
int
or
push
lret
sbb
pop
xchg
sahf
dec
out
sbb
mov
pop
mov
stc
lahf
cmp
jg
sahf
and
dec
and
popf
cmp
into
fnstsw
add
mov
pop
dec
mov
jl
pop
movsb
imul
hlt
cmp
push
jle
aaa
cwtl
pusha
mov
cwtl
mov
xchg
push
pop
or
fwait
push
push
sub
cmp
outsb
lret
aas
jecxz
in
fwait
insb
dec
pop
jbe
popf
js
jecxz
inc
sahf
ret
arpl
jns
cmp
cmp
add
cmpsl
dec
movsl
iret
stos
mov
into
out
push
loopne
int
shlb
fwait
jp
pop
loop
rcll
or
push
ret
sub
loope
mov
lahf
lcall
adc
mov
aaa
sub
adc
addl
mov
test
pop
cmp
mov
xchg
insl
fs
cmp
loope
and
mov
in
or
gs
lahf
cmp
xchg
js
inc
cmp
add
ljmp
inc
jne
bound
dec
xchg
xchg
cmpsl
push
inc
ljmp
mov
and
mov
popa
aaa
incb
push
or
add
imul
test
jmp
inc
xchg
mov
and
xchg
outsl
mov
mov
cmp
push
mov
inc
pusha
aam
sti
mov
sbb
pusha
xchg
js
mov
pop
inc
sub
loop
js
fisttps
sbb
shlb
pop
xor
pop
stos
mov
aam
xchg
lret
push
stos
cmc
or
jno
and
or
push
iret
and
iret
push
rcl
or
in
xchg
cld
ja
in
jp
outsl
loopne
in
test
lret
popa
das
mov
lcall
adc
imul
data16
xor
xlat
nop
in
arpl
jbe,pt
loopne
out
insl
dec
cltd
mov
loope
xor
xchg
clc
add
and
pop
pop
rolb
mov
jmp
out
and
jmp
lods
in
and
outsl
lock
mov
and
pop
and
mov
ss
push
xchg
mov
out
lods
mov
sbb
outsl
stos
pop
ret
adc
fisubrs
jb
adc
movsb
sbb
jge
test
in
lret
lods
rorb
andb
jmp
xchg
out
imul
mov
int3
popa
mov
cmp
jno
jp
cld
mov
dec
ljmp
jno
popf
shlb
inc
in
jl
dec
mov
pop
rclb
fs
mov
xchg
mov
push
in
cs
in
or
mov
jecxz
or
iret
aaa
js
pop
mov
push
cmp
xchg
dec
mov
jg
push
shrl
mov
mov
int3
mov
outsb
ljmp
and
sarl
push
shl
push
add
xchg
pop
inc
jmp
cli
xchg
loopne
xor
in
pop
loope
sub
push
jecxz
inc
dec
xchg
fisttps
xchg
pop
mov
repnz
xor
std
mov
scas
cltd
pop
stos
int3
jg
xor
jp
or
sub
add
movsb
or
ss
adc
std
add
jg
adc
std
lods
std
mov
sub
js
loopne
add
aas
inc
sub
ror
cmp
jo
xchg
xlat
mov
sbb
mov
fisttps
repnz
or
mov
mull
adcl
cs
dec
jae
fsub
mov
mov
cltd
imul
and
inc
lahf
sbb
add
repnz
adc
fsubl
dec
in
idivl
leave
je
xor
jae
pop
add
addb
mov
mov
add
idiv
sub
mov
inc
mov
loop
ss
cs
add
mov
jmp
outsb
xor
std
adc
js
or
sbb
and
mov
adc
stos
imul
out
outsb
fistpll
add
pusha
push
out
jno
popa
sbb
xchg
das
lahf
popl
ret
out
roll
jge
push
adc
dec
sbb
icebp
add
jl
lahf
pop
les
vcvtps2pd
jl
or
iret
or
in
cmc
mov
sbbb
insl
mov
enter
mov
movsl
pop
icebp
jns
lock
dec
cmpsl
nop
or
jg
out
notb
push
adc
push
xor
mov
xlat
loopne
repz
cwtl
xor
pop
jg
fnstsw
mov
adc
dec
loop
test
push
flds
cmpsb
ret
jno
sbbb
push
sbb
fistpll
and
push
popa
je
addb
dec
test
mov
xorl
inc
cmp
inc
pop
std
imul
jbe
jg
pop
pop
jg
jp
inc
repz
int
ret
xor
pop
je
push
imul
ds
jge
cmp
sahf
adc
jae
dec
jno
and
sub
push
jae
aam
cmp
or
dec
cmp
dec
testb
sbbl
stc
pop
or
jae
cmp
adc
movd
ficompl
mov
xchg
pop
dec
iret
test
shll
dec
inc
jle
inc
sub
jns
mov
fwait
mov
sbb
jns
push
in
fs
or
lahf
fbld
cmp
mov
jecxz
outsb
les
mov
and
xor
nop
jp
sub
std
sbb
xchg
stc
bound
sbb
sbb
pusha
lcall
cmp
xchg
and
adc
pop
lods
outsb
mov
xorl
divb
mov
push
inc
jecxz
pusha
mov
aad
mov
push
out
inc
xchg
sub
fdivrl
in
and
xchg
or
aam
push
jle
and
hlt
movsl
mov
pop
gs
mov
arpl
aad
sub
pushf
jne
cltd
or
std
rolb
sbb
xor
push
xor
popa
scas
lods
mov
js
das
adcl
push
mov
sbb
sub
jl
popa
or
add
out
adc
movsl
pop
or
sub
inc
mov
pop
fistpl
das
frstpm(287
ret
stos
ret
push
inc
fsts
dec
or
lock
insl
test
fisubs
push
jbe
test
rcrb
addb
scas
cmpsl
bnd
or
push
add
or
jns
mov
lea
adc
jge
cs
mov
ja
pop
fbstp
inc
jnp
xor
cli
mov
in
hlt
jp
lods
ret
flds
pop
lret
mov
xchg
push
mov
add
mov
xor
pop
mov
add
cmp
mov
dec
loope
mov
lods
jge
es
xchg
jle
ret
not
xlat
je
lahf
push
or
jp
les
xchg
imul
dec
std
pop
cmp
je
movsb
push
adc
and
lods
lcall
or
mov
sarl
jb
sbb
push
fcoms
rcrb
and
ret
imul
shlb
push
rcll
fcoml
call
scas
lods
xlat
ljmp
sbb
std
repnz
push
es
mov
mov
loope
repz
ja
inc
push
sub
push
test
fcomip
xlat
cmp
std
pop
mov
in
adc
jl
jns
cs
mov
or
hlt
aam
mov
sub
sbb
outsl
sti
mov
mov
call
and
test
cmc
std
fsubrs
scas
pop
dec
cmp
lcall
sti
scas
iret
test
mov
popa
mov
in
sub
sbb
js
sbb
in
sub
xor
sub
clc
inc
cmp
fstps
out
es
mov
pusha
jle
fs
or
inc
cld
jmp
mov
dec
test
or
int3
push
mov
push
cmp
movsl
mov
push
push
xchg
loopne
in
mov
and
mov
jb
xor
test
add
loope
sbb
add
outsb
sub
cmp
pop
aad
lock
and
test
jp
lret
out
jne
mov
into
andb
movsl
push
dec
ljmp
cmp
stc
xchg
out
cmp
push
fadd
cmpsl
and
sbb
insl
mov
pop
mov
xchg
jnp
inc
enter
fdivrl
into
sbb
cmp
mov
or
xor
jg
scas
pushf
inc
jle
sub
cmp
clc
mov
mov
fldl
push
mov
cmc
dec
imul
in
push
pusha
sub
imul
jl
gs
cmpl
jecxz
pop
std
sub
repz
pop
push
add
cmp
jo
scas
ret
clc
test
jo
mov
push
and
test
mov
scas
stos
and
cli
fildll
sbb
rorb
jne
loopne
ja
xor
popf
ljmp
insl
cmp
add
sub
or
jne
xlat
into
mov
hlt
pop
testl
cwtl
sub
jae
mov
jns
xchg
popf
lods
adc
test
outsb
test
xchg
sub
sbb
inc
aad
or
scas
mov
cld
icebp
fnstsw
js
or
repz
andb
mov
add
movsl
icebp
add
xchg
or
pop
inc
sub
shlb
imul
xchg
lea
dec
pop
mov
insl
cmp
inc
movsb
and
or
outsb
mov
out
pop
aaa
fmuls
mov
xor
add
push
cmp
loopne
js
lea
sub
test
int
add
mov
cmp
add
or
test
adc
sbb
repnz
lock
push
in
mov
jmp
cmpsl
les
xor
fsubrl
push
sbb
mov
sub
mov
mov
imul
pop
das
mov
out
fsubs
aad
roll
cmp
cmp
push
and
int
sbb
sahf
arpl
mov
adc
iret
jp
mov
iret
rorb
shrl
dec
pop
cmp
cwtl
das
cmpsb
mov
or
call
outsl
xchg
loopne
adc
jmp
insb
jmp
sarl
add
enter
mov
sahf
sbb
mov
mov
jmp
sbb
sahf
push
notl
jnp
inc
das
std
xorl
lea
sub
popa
mov
ljmp
adc
lret
ror
test
es
test
dec
xchg
insb
outsl
jge
bound
js
mov
sub
in
fwait
sbbl
sbb
cmpsb
negb
jns
aad
sbb
out
orl
push
xchg
cmpsl
shll
mov
out
jb
mov
dec
icebp
fstl
mov
lret
ja
aam
mov
sub
bound
les
outsb
cmp
mov
dec
insl
inc
fistps
arpl
jo
push
mov
lret
and
iret
movb
or
mov
ljmp
subl
movsb
xchg
sub
mov
xor
mov
mov
pop
add
xlat
int
pop
push
mov
xor
dec
and
out
stos
ljmp
test
mov
les
inc
ss
jl
int3
filds
or
cltd
jo
fucomip
push
lds
jo
adc
cltd
out
rcrl
jle
pushf
xchg
in
mov
mov
jns
cmovb
and
repz
jge
aaa
xchg
mov
into
test
adc
add
sbbb
mov
shlb
in
out
js
int3
rolb
mov
cld
out
jne
aas
push
pop
dec
jne
scas
xchg
insb
jae
mov
ret
pop
sbb
mov
xchg
and
sarl
jge
pop
cwtl
push
aam
ret
imul
and
push
push
jle
iret
lock
xchg
jno
xor
push
cmp
jae
sbb
and
mulb
push
aas
push
inc
shlb
or
xor
in
stos
push
fcomps
lods
mov
test
pop
movsb
pop
add
push
mov
adc
es
xchg
ljmp
xchg
into
jle
std
pop
pop
sub
xor
mov
pop
dec
push
xor
es
push
fisttpll
test
sub
adc
xchg
cmc
cmp
push
sub
xchg
xchg
lods
add
in
push
jp
fiadds
dec
subl
xchg
or
inc
arpl
lcall
daa
mov
cs
mov
add
imul
sbb
decb
int3
jmp
std
and
inc
subb
bound
loop
dec
cld
sahf
mov
loope
push
addr16
nop
lods
pop
lahf
jecxz
xor
lock
call
rolb
dec
fbld
into
jno
adc
shll
testl
scas
cmp
lret
adc
inc
mov
jbe
pop
inc
int3
filds
push
push
push
aad
arpl
jnp
out
jge
pop
mov
pop
mov
pusha
out
popf
into
pop
pusha
in
mov
fnsave
pusha
fiaddl
and
insl
outsl
mov
out
mov
outsl
or
out
std
xor
ljmp
push
dec
fnstenv
cmp
in
mov
xchg
aas
adc
les
daa
inc
xor
outsb
dec
orb
pop
cltd
leave
sbb
push
sub
sbb
xchg
push
bound
mov
push
inc
xchg
or
jb
syscall
sub
dec
sbb
mov
in
pop
fdivs
inc
inc
sub
in
addr16
cmp
int
mov
push
and
jmp
jle
mov
and
fwait
movsb
out
jbe
fcmove
shlb
out
xchg
inc
sub
mov
pop
inc
add
sbb
arpl
mov
fdivrs
dec
aaa
push
loop
push
aad
scas
addb
jbe
das
dec
sub
push
out
pop
xchg
adc
push
loopne
jle
mov
rcrb
mov
add
icebp
icebp
inc
lret
fldenv
out
mov
int
sahf
mov
xchg
cmp
rclb
pinsrw
inc
mov
addl
add
repz
jo
xchg
mov
mov
rcrl
lret
or
std
les
hlt
pop
pop
push
stos
scas
call
inc
scas
adc
repz
movsb
mov
fdivl
adc
sub
fcoml
or
mov
xchg
mov
out
es
test
arpl
fistpl
out
pop
or
cmp
scas
movb
repnz
and
cli
jns
xchg
adcb
jmp
insb
in
insl
and
pop
inc
push
outsl
fdivrp
push
push
aad
or
scas
ret
or
sbbl
fs
les
repz
fidivs
into
inc
dec
add
fcmovb
sbb
fildl
push
inc
pop
pushf
dec
pop
mov
fdivl
shlb
mov
lret
jl
add
adcl
cmp
out
cld
lret
js
loopne
adc
cs
test
adc
xor
cmpsl
stc
push
shll
gs
ja
push
mov
dec
sbb
sahf
mov
cmc
xor
ror
and
cld
inc
push
in
adc
fldenv
sbb
mov
sahf
arpl
jb
sbb
test
in
inc
cmc
in
push
jno
sti
mov
orl
adc
sbb
pop
pop
loopne
mov
xchg
rorb
nop
int
mov
ja
xorl
imul
lods
pop
lods
add
sbb
ret
ja
or
repnz
pop
lahf
xchg
or
scas
lods
mov
dec
repz
scas
or
xor
push
or
aaa
sbb
dec
fidivl
out
sbb
fwait
sub
cmp
loopne
or
push
xor
or
popf
enter
cmp
addr16
mov
lret
add
sysexit
ljmp
and
aad
nop
ljmp
outsl
sbb
les
outsb
imul
pop
jno
dec
push
and
inc
xchg
fmul
or
incb
push
push
div
orb
pusha
adc
jle
mov
mov
inc
imul
cmp
xor
inc
in
jp
pusha
mov
das
xchg
ljmp
das
sbb
orb
leave
ds
mov
gs
frstor
pop
lds
mov
adc
in
jmp
roll
mov
enter
and
imul
xchg
push
in
pushf
sub
mov
and
ficomps
aaa
lret
outsl
mov
adc
mov
pop
mov
dec
dec
mov
pop
push
jg
fisubs
jbe
dec
sbbl
fdiv
lea
inc
and
sub
sub
adc
cmp
dec
push
popa
mov
sub
jbe
call
pop
popa
dec
adc
mov
jle
mov
lods
cmpsl
loope
fwait
xlat
sahf
jae
in
int3
pop
rcrl
mov
push
addr16
push
mov
fs
inc
jbe
xor
add
insl
imul
aad
push
sbb
dec
not
sub
dec
or
repz
mov
cmpsl
push
mov
mov
sti
jge
and
push
stos
addr16
cmp
jno
shrb
mov
xchg
sub
add
clc
aad
jne
sbb
lock
popa
in
jl
mov
adc
pop
popa
sub
pusha
addr16
outsb
jg
inc
cmp
mov
fistps
fadds
add
pusha
push
push
out
mov
adc
aaa
scas
jge
jae
xor
fwait
mov
adc
test
sbb
adc
xchg
xor
shlb
jl
cmpsb
sbb
rcll
mov
inc
push
fstl
dec
jmp
in
jnp
gs
mov
std
aad
bnd
or
jo
mov
dec
scas
sbb
in
stos
add
and
rcrl
es
jmp
test
sbb
aaa
call
orb
pop
sub
dec
and
dec
cmp
or
pop
sub
dec
aaa
lods
jmp
sub
add
movsl
mov
jb
mov
jne
mov
adcb
and
jmp
icebp
mov
xor
enter
adc
fcmovnbe
cmp
jb
push
fdivr
add
mov
mov
repnz
dec
mov
leave
mov
jp
rclb
fs
jns
add
pop
or
xchg
aad
shl
add
adc
repnz
push
dec
lds
sbb
push
push
out
js
shl
mov
sar
mov
iret
sahf
fcmovu
add
mov
orb
test
jmp
cmpl
cmp
aaa
cld
scas
divl
jg
mov
jmpw
jecxz
pop
cmp
jbe
outsl
outsl
mov
add
ja
mov
inc
mov
dec
dec
pop
test
and
or
xor
cltd
pop
jp
push
xchg
jno
mov
fsubr
enter
push
jg
clc
mov
fld
xchg
mov
arpl
clc
ffreep
mov
pop
into
push
mov
pusha
int3
enter
repz
sahf
mov
mov
adcl
jns
xchg
movsb
pop
test
cmc
int3
out
out
add
inc
dec
imul
xor
in
xchg
test
movsl
jne
sbb
mov
movsb
xor
outsb
cltd
mul
cmp
mov
xor
xchg
stos
jmp
lods
orb
jo
fdivs
js
mov
mov
repz
inc
bound
dec
out
mov
rcl
mov
hlt
mov
mov
sti
inc
fstps
mov
je
sub
cmp
or
xor
cmp
hlt
xor
iret
scas
lock
adc
fnstcw
sahf
or
sti
pop
in
out
jae
out
js
stc
mov
dec
cmp
ds
sub
xor
mov
push
cmp
popl
incb
lcall
imul
lea
dec
in
fiadds
js
cmp
and
push
lods
jo
push
jge
sbb
sub
repnz
sbb
jae
enter
outsb
shll
pop
test
dec
jbe
jmp
sarb
fnstsw
adcb
sbb
or
movsl
mov
ds
mov
mov
rorb
adc
fdivrl
mov
sub
and
mov
lock
push
sub
lcall
shlb
movsl
dec
pop
es
fdivs
inc
xor
xor
mov
mov
imul
js
push
adc
adc
adc
mov
and
ds
push
das
xchg
fdivl
push
pushf
fstpl
sti
xchg
cmp
stc
lea
pop
push
push
scas
ljmp
aaa
test
mov
mov
add
pop
jne
mov
divl
in
enter
aaa
cmp
fnstsw
pop
shl
lock
stos
push
test
cltd
xchg
add
adc
dec
pop
xchg
dec
fimull
inc
shll
sbb
and
or
icebp
aam
dec
inc
mov
rcr
jne
pop
scas
mov
nop
xchg
mov
or
mov
shr
js
lea
inc
sbb
add
sub
or
fnsave
jo
jb
ret
clc
dec
sbb
push
sub
sti
call
imul
xchg
lods
jl
inc
and
and
lock
leave
and
push
mov
scas
mov
lock
xchg
dec
mul
jecxz
push
test
mov
cld
fcoml
lret
je
xchg
xchg
add
mov
mul
lods
add
sub
daa
mov
shlb
add
fs
bswap
sub
adc
mov
adc
xchg
lock
dec
sbb
int3
dec
jg
or
test
jne
sbb
and
adc
sbb
mov
sub
push
xor
lret
rorb
push
lcall
sbb
mov
hlt
stos
push
addr16
pop
sti
sub
push
xlat
add
cld
adc
sub
hlt
int
mov
bound
dec
mov
xchg
push
xchg
bound
mov
les
int3
and
xor
or
sbb
scas
ss
xor
test
btl
jb
sub
popa
cld
and
fcmovnu
inc
push
pop
iret
xchg
xor
lds
mov
mov
and
mov
movsl
xchg
das
cs
adc
sbbb
pop
mov
jmp
ss
aaa
mov
mov
sub
loope
xchg
and
out
cmp
xchg
inc
push
ja
movsb
push
inc
pop
sbb
mov
inc
inc
cld
fisttps
popf
push
mov
movsl
xchg
xor
pop
cmp
jae
shrl
pop
leave
adc
jmp
jo
dec
out
and
xchg
mov
imul
out
les
sbb
loop
jbe
cmp
sbb
sub
in
fisubl
pop
sti
scas
test
out
xor
dec
lds
and
or
sti
inc
mov
pop
aad
stos
mov
xor
rclb
mov
sbb
repnz
test
pop
pusha
addr16
mov
cmp
push
inc
mov
in
adc
mov
std
sbb
jb
call
mov
out
inc
add
mov
mov
cmp
or
ja
repz
mov
sti
xor
ror
jns
in
mov
cwtl
mov
xor
fiadds
loopne
mov
dec
mov
test
aad
push
shlb
mov
push
jmp
adc
xchg
adc
mov
dec
ror
iret
sbb
lods
xor
data16
dec
pusha
ffree
fsub
ret
inc
mov
push
daa
loope
jl
pop
mov
cmp
and
push
cmp
jle
loop
add
xor
ret
mov
les
cmpl
roll
inc
push
js
dec
sub
push
loopne
push
jns
dec
sbb
popl
mov
jecxz
cmp
lock
dec
test
cmp
stos
jne
testl
push
dec
add
fadds
dec
xor
mov
pop
adc
dec
out
dec
push
xchg
inc
and
push
sbb
or
push
jno
ss
repz
lods
cmc
shl
push
icebp
fistps
sub
loopne
or
xor
jns
lods
mov
dec
push
stos
xor
lea
mov
aas
xchg
lahf
fwait
rol
xchg
pushaw
insl
xor
jne
pop
ffree
dec
lock
lahf
pinsrw
icebp
das
mov
inc
xlat
fmull
lret
in
mov
mov
bound
mov
scas
cmp
mov
rcrl
popa
mov
pop
pusha
das
inc
lret
add
lds
int3
test
mov
pop
mov
dec
ljmp
mov
jo
lea
mov
nop
ds
scas
and
and
sbb
lods
mov
add
int3
lcall
fadd
fscale
ret
lahf
mov
or
mov
fists
or
xchg
pop
gs
jecxz
add
mov
pop
sub
sbb
mov
aaa
subl
fnstcw
fldenv
pop
add
cmp
lods
pusha
ret
sub
jne
adc
push
loop
mov
mov
in
lcall
out
mov
jne
loopne
cld
sahf
cmp
ss
mov
inc
ljmp
pop
mov
shll
aaa
loop
xchg
rcr
aad
mov
notl
nop
cwtl
pop
xor
mov
call
add
add
sbb
lds
cmpsb
inc
cmp
clc
fs
inc
jmp
inc
loop
push
dec
lret
sti
shrb
out
xchg
inc
adc
pop
addr16
adc
addr16
jne
les
cmp
jl
sub
or
stos
shll
imul
and
fsubs
stc
mov
dec
out
cmp
sarl
ss
in
popa
push
sub
xchg
std
imul
loopne
test
movsl
pop
lds
and
sub
sub
xchg
add
and
pop
add
inc
or
cmp
jg
in
push
in
push
mov
fbstp
insb
inc
xchg
cmpsb
repz
cmpsb
filds
jg
push
in
enter
adc
rorb
out
mov
and
jge
test
lds
loopne
xchg
je
cmp
fwait
cmpsl
xor
and
movsb
inc
mov
cmp
push
cmp
nop
inc
sub
imul
ret
pop
aad
stos
dec
sbb
cmp
idivl
call
divl
rcrb
push
lret
mov
xchg
xor
lods
inc
jne
out
mov
dec
pop
dec
xchg
jne
loope
push
jle
mov
push
inc
movsl
pusha
ds
fwait
jg
mov
fisubrs
dec
mov
mov
stos
ja
cmp
adc
cmpsl
popf
pop
push
subl
jg
xchg
aas
push
popf
sbb
mov
mov
push
call
stos
popf
jmp
mov
mov
cmp
adc
and
dec
fstl
mov
jp
pushf
inc
addl
jno
jp
xchg
jbe
cmp
fwait
lea
mov
bound
dec
push
xor
lock
icebp
aad
scas
ss
lods
cltd
mov
sbb
sub
dec
pop
mov
int
push
mov
mov
mov
mov
push
shl
add
jo
adc
fsubrl
mov
out
inc
mov
dec
je
ret
dec
cld
fcoms
mov
int3
push
popa
jns
xchg
mov
mov
pop
rcl
cmp
add
sub
cmpb
jecxz
and
mov
mov
movsb
outsl
jg
sbb
lret
aas
sbb
xor
mov
mov
xor
aaa
aas
push
insb
pop
cmpsb
mov
xchg
jge
push
jle
mov
test
in
test
adc
insl
dec
stc
andb
dec
sub
push
ja
pop
adc
mov
lret
sub
push
inc
xlat
sbb
shrl
dec
aas
dec
call
add
movsl
test
sub
push
mov
dec
cmp
xchg
fiaddl
push
ret
dec
dec
std
push
clc
int
mov
jp
xchg
dec
push
xlat
les
xchg
and
fisubs
push
sub
push
sbb
aam
loopne
ja
add
sti
es
pop
cli
popa
test
or
adc
ljmp
inc
arpl
call
gs
mov
pop
adcb
xlat
and
movsb
cmpl
cmp
jmp
cs
mov
lcall
xchg
dec
add
jp
movsl
sub
cmp
sbb
pop
xchg
push
jecxz
cli
mov
dec
jecxz
jmp
mov
push
cmpsl
mov
pop
push
push
rolb
pop
adc
out
mov
pusha
lods
lock
ret
pop
or
pop
divb
pop
imulb
and
out
adcb
push
fnstenv
mov
jle
lret
mov
adc
bound
sub
xchg
inc
ds
xchg
adc
and
out
les
mov
sti
ja
mov
mov
push
xlat
jno
push
xchg
cmp
insb
xor
and
loope
cmpsb
xchg
xlat
insl
xchg
push
shlb
dec
daa
sub
and
aad
xor
sub
inc
fidivrs
fstpt
in
mov
sbb
pop
jb
stos
mov
add
jl
push
mov
inc
adc
shlb
mov
sbb
xchg
xchg
push
out
jbe
or
inc
repnz
add
xor
add
mov
mov
fdivp
jl
push
jo
or
sub
jecxz
jno
mov
hlt
sub
jg
fidivrl
mov
pop
fbld
and
nop
or
pop
pop
dec
es
movsl
dec
push
xor
or
push
xchg
inc
stos
inc
mov
ljmp
inc
inc
sub
cmpsb
mov
push
int3
mov
cli
imul
pusha
inc
lds
lods
pop
rcll
rorl
test
xlat
mov
push
out
mov
jb
in
in
sbb
stos
ret
push
jecxz
inc
inc
cli
dec
ret
test
inc
mov
dec
add
or
and
mov
shll
pop
in
in
cmpsb
sub
jno
adc
mov
xchg
mov
sub
sub
add
mov
pop
mov
mov
mov
fwait
aaa
add
push
inc
sbb
sahf
out
add
flds
jne
outsl
xor
ret
jg
es
jecxz
stos
pop
cmpsl
xchg
lret
or
adc
cmp
insl
ret
repz
outsb
push
jae
xchg
mov
push
hlt
or
mov
adc
xchg
mov
andb
cmpsb
fisttps
jns
fsub
sarb
xchg
sub
cmp
call
jge
xchg
inc
clc
inc
push
je
aam
sbb
cmp
inc
fistps
imul
into
subl
dec
ljmp
add
pop
out
ds
mov
adc
mov
sarl
fsubrp
pcmpgtw
mov
xor
testl
jg
push
mov
adcb
add
faddl
dec
out
divl
ljmp
in
cs
nop
in
cs
xor
jecxz
fwait
jae
and
addr16
das
mov
lods
adc
jnp
ret
lods
inc
aad
inc
pop
mov
pop
mov
and
push
mov
test
fistpll
insl
bound
xchg
or
mov
lahf
xor
outsl
sub
ret
xchg
loopne
cmp
or
mov
int3
lahf
scas
cld
fstps
sub
es
outsb
cmp
pop
call
lods
push
push
xor
fmuls
mov
mov
and
imul
stos
and
inc
lcall
push
jle
mov
shll
and
push
arpl
cld
pop
shlb
lahf
fistps
inc
pop
rcll
imul
jmp
fisubl
loopne
mov
mov
add
mov
jb
mov
js
movsb
push
mov
andb
ret
je
pop
aas
das
rol
sbb
dec
add
lods
sar
xor
adc
popf
cmp
push
clc
xor
dec
push
xchg
pusha
sahf
cmpsb
movq
mov
addr16
movsl
pusha
dec
inc
xchg
jae
xchg
lcall
push
push
les
lods
add
dec
sub
es
push
mov
pop
cmp
jge
int3
loop
cmp
dec
das
cwtl
mov
in
jmp
push
jnp
xchg
scas
xchg
push
fsub
adc
lods
sbb
pop
adc
cld
fdivl
xchg
pop
insb
inc
popa
jmp
bound
pop
inc
ss
pusha
mov
pop
clc
sbb
gs
cwtl
sbb
ja
lret
repnz
imul
mov
aaa
mov
or
stos
and
cmp
mov
mov
sti
js
nop
mov
and
flds
mov
rcll
push
mov
mov
ret
mov
ficoms
add
mov
jb
mov
scas
scas
jle
mov
lret
fisubl
add
pop
popf
jl
notrack
movsl
sahf
add
jo
or
in
jl
xor
stos
mov
mov
or
and
sub
cmp
aas
sbb
fildll
and
fcompl
icebp
scas
mov
xorb
pop
add
cvtps2pi
lahf
lods
ret
loopne
fildll
adc
cmpl
jns
loopne
add
cmpsb
daa
subb
pop
or
ret
loopne
add
adc
mov
fnsave
stc
cmpsb
push
mov
inc
repz
mov
xchg
add
es
mov
and
loope
pop
aas
lahf
cmp
adc
sbbb
jp
fisubl
adc
popa
mov
cmp
fwait
roll
stc
sbb
sbb
and
or
mov
rcll
mov
int
jecxz
cmp
or
push
cmp
push
loopne
sbb
inc
mov
dec
push
push
fucomi
xchg
sub
fstpt
movsl
out
test
mov
mov
les
scas
out
scas
pop
inc
jecxz
mov
lret
sbb
mov
sub
mov
xor
repnz
push
iret
imul
mov
pop
and
adc
pop
pop
movsb
movsl
fsubrl
add
cmp
pop
push
andb
pushf
pop
jne
mov
jae
nop
pushf
sub
aad
inc
test
mov
sbbl
stos
ja
adc
dec
jns
test
incl
sbb
fisubrl
clc
push
js
xor
cli
and
push
dec
inc
in
sarl
imulb
enter
je
shlb
fdivl
mov
enter
xor
stos
ds
movsl
dec
iret
mov
and
xchg
inc
mov
fidivs
ret
rcrb
mov
test
out
push
and
pop
xchg
push
jnp
add
cmp
or
in
adc
ret
clc
pop
inc
nop
or
pop
jbe
push
test
stos
jne
and
lds
arpl
add
dec
sub
out
notl
push
sahf
test
rol
test
imulb
and
lock
mov
fwait
jle
mov
lds
push
pop
push
pop
fs
jae
xchg
in
fistpll
jp
add
dec
js
imul
fs
ljmp
loope
insl
out
cwtl
movsl
mov
and
fpatan
dec
jg
stos
sub
cltd
pusha
into
icebp
xchg
sbb
sahf
add
bnd
mov
icebp
push
mov
adc
ret
frstor
mov
pop
inc
xchg
inc
lret
or
test
mov
or
pop
aaa
xor
sbb
test
jg
mov
jbe
sub
cmp
dec
aas
xchg
pop
mov
xchg
pop
loopne
das
and
out
xchg
addl
idivb
sbb
data16
testl
jmp
cmovno
inc
in
sbb
in
les
mov
pop
mov
inc
pop
imul
int
cmp
std
nop
mov
inc
shll
xor
je
out
imul
sbb
fcomp
int
mov
mov
jmp
pop
popf
pop
sbb
arpl
cmp
mov
jae
jge
mov
cwtl
popa
push
in
dec
mov
test
cmp
or
imul
rcrb
shr
inc
inc
cmc
leave
sub
or
add
xchg
int
cli
mov
dec
fs
fistpll
in
hlt
clc
ds
mulb
mov
stos
ret
mov
popa
aad
push
fsub
lret
lods
and
add
fiaddl
mov
add
adc
test
mov
mov
mov
xorl
push
sbb
mov
sub
push
mov
pushf
xor
add
mov
dec
inc
cmp
pop
sbb
push
or
outsb
iret
mov
ja
push
cmp
repz
jmp
add
mov
dec
dec
cmp
push
setno
cmpsb
stos
dec
cmp
cmp
push
xor
aam
adc
inc
cld
cmp
and
ret
dec
xor
push
cmpl
jno
adc
xor
jae
dec
and
pusha
fs
call
inc
cmpl
adc
in
pop
cmp
movsb
adc
sti
icebp
lods
add
mov
int3
cmp
add
shll
aaa
inc
ret
xchg
push
sub
loop
jmp
loope
jnp
and
or
call
lret
xor
test
cmpsb
std
mov
mov
pusha
mov
and
jge
lods
inc
jl
mov
cs
add
js,pn
sbb
in
push
rcr
int3
outsb
or
xchg
cmpb
loope
xorl
aas
push
andb
dec
scas
inc
xor
out
outsb
jbe
or
mov
jge
fdiv
fs
lock
push
les
jp
aas
jg
addr16
and
pop
iret
in
adc
cmp
arpl
and
test
ss
jmp
sbb
mov
jb
cli
add
or
pop
icebp
int3
arpl
es
daa
pop
inc
pop
jo
mov
jle
inc
sub
out
imul
into
mov
mov
sbb
cmp
push
xchg
xor
in
stc
pop
or
add
add
sarl
jmp
ss
xchg
mov
dec
pop
cmp
roll
pop
pop
push
xchg
jl
lock
fcmovnu
fwait
cmc
leave
pop
insb
push
aaa
mov
pop
jo
mov
xchg
dec
jne
popf
out
lock
xchg
cmp
imul
adc
or
popf
cmc
in
cltd
neg
das
jno
and
dec
and
pop
push
mov
loop
or
jb
cmpsl
mov
addl
test
or
sbb
sbb
or
jg
iret
push
xor
xor
icebp
mov
cmp
aad
out
sub
sub
inc
pop
lock
loope
inc
xchg
sub
daa
lock
inc
xlat
mov
lcall
adc
fidivs
inc
mov
scas
arpl
xchg
mov
or
pop
and
and
daa
ret
jo
pop
out
std
push
or
negl
es
dec
adc
pop
cmp
dec
movsb
enter
in
ljmp
sub
xchg
cltd
xchg
filds
mov
push
push
out
fsubrs
push
or
mov
mov
jecxz
pop
pop
xchg
fs
daa
ror
lea
push
aaa
aaa
and
enter
data16
cmpsb
fisubrs
loope
ret
cmp
pushl
enter
adc
cmpsb
xchg
sbb
enter
call
sub
aad
fiaddl
or
ss
inc
shl
popa
sub
frstor
add
insb
inc
lret
fnstsw
loop
pusha
leave
push
adc
mov
mov
and
mov
mov
xchg
add
mov
nop
lret
aaa
dec
inc
sbb
clc
add
lcall
sbb
adc
pop
addl
or
gs
inc
popa
into
mov
xor
ljmp
pusha
jb
gs
je
pushf
mov
mov
adc
cli
or
xchg
xchg
push
test
push
insb
fcmovnbe
gs
sbb
dec
push
or
mov
sub
jge
ret
inc
xchg
fcomps
pushf
mov
cs
cld
out
mov
fisttpll
xchg
pop
sbb
sbbb
cltd
dec
scas
cld
jno
addr16
mov
clc
push
ffreep
ret
sub
jo
test
cmp
cli
lea
cmp
mov
mov
dec
js
mov
push
orb
adc
mov
xorl
mov
pop
stc
xlat
out
orl
insb
adc
repz
sbb
lods
xor
jb
mov
outsb
cmpsw
cs
f2xm1
cltd
push
dec
inc
sub
xor
divl
shl
fwait
movsb
loop
test
pop
mov
loopne
pop
cli
mov
cmp
cmc
lods
add
add
jo
mov
mov
psubq
ror
fisubrs
dec
out
idivl
add
icebp
scas
in
jbe
pop
repz
sar
sub
xchg
jns
scas
loop
cmp
xor
mov
cmp
rcll
fsub
sbb
lcall
mov
lret
push
or
inc
and
xchg
cmpsl
cmc
mov
int3
fucomi
mov
inc
dec
arpl
aam
loope
imul
jb
rcl
push
xchg
imul
fisttpll
sub
push
and
cmp
and
rcl
les
blsic
ret
push
push
lcall
repz
lock
push
add
xchg
push
icebp
pop
rclb
jnp
scas
iret
in
xchg
mov
fwait
in
repz
xchg
or
xchg
lds
mov
dec
cmp
movsb
stos
subb
pop
ljmp
or
adc
loop
jecxz
xor
cltd
mov
lahf
sub
mov
out
cmp
and
ss
lahf
push
dec
insb
mov
test
les
aad
dec
push
jno
jecxz
in
adc
or
mov
pop
jle
xchg
insb
cmpsb
shlb
mov
lds
shrb
andb
cmp
mov
test
sbb
cld
hlt
filds
jae
hlt
loop
mov
push
sbb
pusha
lret
ja
fdivl
push
xor
jne
negb
sbbb
inc
test
sub
loop
lods
add
xchg
push
jno
bound
nop
adc
repnz
xchg
pusha
lds
stos
jns
fnsave
test
es
in
daa
mov
pop
pop
fldenv
sti
xchg
mov
daa
test
add
ja
imulb
cmpl
aam
add
std
call
xchg
xchg
bound
rcrl
mov
ljmp
jp
outsb
addr16
mov
loop
ret
mov
xor
xchg
imul
fcomps
subl
inc
fcomps
pop
add
sbb
mov
push
xor
mov
aam
jns
push
out
mov
push
and
lock
lods
pop
pop
addl
or
outsl
sbb
addb
pop
outsb
aam
xchg
adc
jne
cltd
push
xor
dec
cmp
popf
inc
adc
enter
stos
mov
shll
ss
cmpb
jbe
xor
inc
inc
push
movsb
aas
push
inc
dec
loop
push
pop
leave
xor
faddp
arpl
in
hlt
pop
sub
mov
loop
or
or
inc
push
outsl
pop
test
lods
mov
cmp
sahf
xchg
push
in
or
je
jl
xchg
out
ret
sahf
mov
xchg
lcall
sbb
xchg
fmull
xor
shrb
add
sub
dec
fsubr
jmp
test
push
sub
cli
xlat
pop
cltd
fldt
xchg
cli
push
dec
adc
aaa
jae
aad
push
mov
push
mov
cmp
or
or
xchg
jmp
cmpsl
nop
push
int
sbb
test
ret
and
cmpsl
add
or
pop
adc
add
mov
int
jle
jg
jle
dec
fldcw
push
fcompl
scas
dec
pop
pop
mov
data16
jno
das
lods
cmpsb
jmp
ret
add
lahf
orl
jecxz
pop
daa
cmc
or
idiv
push
add
jae
testl
add
dec
cmp
enter
test
dec
insb
mov
lock
cltd
loope
jp
push
sub
pop
test
dec
bound
and
iret
in
lret
loope
cmc
push
data16
repnz
jecxz
clc
mov
iret
push
xchg
aad
cmpb
das
repnz
add
adc
rcrl
fadd
mov
and
xchg
add
scas
outsl
loope
mov
mulb
jo
sbb
cmp
xchg
inc
dec
pop
jl
stos
jno
push
in
jge
inc
xchg
loop
repz
fyl2xp1
mov
sub
add
jl
js
add
enter
jbe
pop
adc
shl
ljmp
aad
outsb
mov
outsb
mov
and
jbe
add
aas
repnz
sub
xor
pop
and
inc
add
inc
xor
pop
mov
sar
xchg
fs
pop
dec
jnp
notl
push
cmp
push
data16
int3
ficomps
inc
inc
inc
lret
sbb
jle
stos
xor
jne
jle
add
je
and
test
pusha
xorl
notb
add
popa
xchg
cltd
fwait
push
outsb
rorb
cltd
jb
inc
ds
iret
hlt
sub
ret
or
sbbl
cmpsb
aad
addr16
jbe
loope
in
enter
in
es
inc
stos
out
sbb
ret
pop
and
out
inc
ja
test
aas
sbbb
popf
in
add
xor
mov
dec
adc
push
and
in
popf
cmp
inc
adc
mov
aas
stc
sub
sti
push
daa
repnz
in
jno
int3
or
cmp
jo
mov
sub
jge
push
jns
xlat
rolb
adc
dec
xor
cmp
xchg
test
and
lea
xchg
lock
call
test
push
add
xor
lcall
sarl
gs
data16
push
inc
pop
lret
jae
xor
jae
rclb
cld
xor
jle
fistps
movsl
gs
int
lret
inc
adc
push
push
enter
cld
add
jae
add
push
xchg
aam
xchg
pushf
idivb
mov
aaa
insb
jle
jle
daa
and
mov
aaa
sbb
into
out
push
dec
xor
mov
mov
lret
fs
mov
sub
loopne
pop
mov
andl
imul
popa
cmp
xlat
lret
jle
cld
push
stc
push
sbb
xchg
cwtl
xchg
shrb
xor
xchg
xor
xor
or
ret
mov
add
sub
hlt
sub
movsl
loop
cltd
mov
incb
fisubl
sub
lahf
divb
and
fistpl
and
push
or
divl
sub
lods
push
cld
push
xchg
sub
dec
xor
mov
push
enter
fcompl
and
into
mov
test
jne
repz
outsl
sbb
dec
roll
lcall
fsts
mov
jo
add
pop
jp
jmp
pop
fnsave
pop
or
push
and
into
stos
mov
push
repnz
jmp
fmulp
fstps
inc
in
inc
xchg
and
cli
pushf
in
pop
andb
test
out
rolb
jae
outsl
test
je
repz
or
pushf
addl
jbe
mov
or
lret
icebp
push
xchg
xchg
adc
pushf
and
sub
cmp
mov
data16
jnp
push
push
jmp
adc
gs
dec
xor
int
mov
dec
cmp
jns
cmpsl
testb
pop
pop
out
dec
push
adc
xor
cmc
sub
ja
xchg
adc
sub
gs
out
ftst
in
ret
or
xor
sbb
rorb
icebp
int
sub
es
xor
aaa
imul
ret
push
dec
pushf
sub
arpl
data16
ret
push
cli
or
jg
out
iret
and
push
pop
stos
push
aad
sbb
gs
add
std
jne
add
lods
pop
or
mov
mov
and
mov
js
mov
or
push
data16
sar
outsb
xor
sub
fadds
ljmp
addr16
out
inc
or
push
out
dec
lea
fcmovne
popa
mov
test
popa
addr16
dec
popf
aas
pop
ja
fidivrl
addl
inc
pushl
sti
push
cmp
xchg
dec
inc
aad
int
in
lret
sub
scas
inc
sahf
push
sub
pop
scas
aas
add
mov
nop
sbb
mov
out
inc
and
or
cmc
lock
push
stos
ret
sbb
cld
adc
negl
dec
lds
jae
fadds
shl
ret
xchg
andb
pop
faddl
inc
sbb
xchg
lods
scas
push
int3
fidivrs
mov
call
dec
jne
mov
adc
test
push
jo
mov
ret
xchg
cmp
pop
lcall
push
cmp
lods
ret
pushl
or
mov
into
fcoms
imul
gs
inc
inc
cs
data16
je
test
sbb
push
adc
push
data16
dec
jb
subb
lock
loopne
cld
jne
stos
es
pop
pusha
ds
imulb
xchg
je
jl
out
inc
test
fcmovu
mov
das
cs
cld
loop
cmc
add
hlt
aam
jno
shrb
adc
out
sahf
loop
sub
and
xchg
dec
cmp
nop
mov
aam
pop
xchg
jo
push
jb
dec
add
adc
addr16
lahf
dec
lret
lret
dec
mov
into
adc
iret
dec
dec
fs
xchg
push
xor
ljmp
push
cmpsb
mov
js
sahf
push
test
push
adc
dec
sbb
mov
sub
fdivr
xor
jle
sub
clc
or
xchg
add
cwtl
mov
daa
push
mov
sub
sub
adc
lcall
mov
mov
scas
cltd
jbe
mov
out
jp
in
test
xor
ret
ss
xchg
pushf
mov
sahf
fistl
xor
mov
adc
or
movsl
decl
push
xchg
bound
repnz
xchg
xchg
mov
fidivrs
mov
js
cmpsb
aaa
jp
xchg
push
cli
inc
pop
stos
fmull
and
push
cli
in
test
push
dec
sahf
fs
daa
sbb
cli
ja
push
or
fdivl
lock
jns
js
mov
mov
sbb
push
scas
add
ret
mov
jnp
hlt
add
sti
out
mov
stos
sarl
mov
or
mov
movl
add
rcl
ja
pushl
pop
test
push
imul
mov
pop
xor
xlat
stos
and
cmpsb
es
pop
adc
and
popa
cmp
icebp
sub
clc
inc
jno
cld
fdivs
pushf
fstpt
rcr
jle
out
and
mov
cmp
dec
or
fwait
push
mov
loope
shrl
and
pop
mov
jmp
dec
arpl
cmpsl
inc
adc
gs
fs
cmp
mov
push
push
jecxz
das
xor
mov
jecxz
cmp
mov
lret
push
flds
aam
jo
sbb
loop
or
pcmpgtw
xor
roll
pop
imul
add
jle
inc
clc
lods
xorb
les
movsb
sbb
push
sub
jg
mov
mov
pushf
inc
mov
enter
dec
jge
leave
xchg
push
rclw
jge
and
and
jmp
dec
das
add
mov
inc
mov
cmp
test
cmpsl
les
xchg
inc
pop
jb
mov
or
out
or
scas
lods
cmp
les
xchg
leave
in
xlat
aas
nop
outsb
add
sub
fcompl
push
shr
sbb
pop
mov
repz
mov
in
scas
into
and
rorl
ja
push
lcall
sub
cmp
push
loope
inc
jns
push
popa
aad
mov
inc
jno
imul
in
inc
dec
and
cmp
fistpll
ds
loope
or
popa
mov
lock
xchg
ret
xchg
add
cmp
cmp
lods
or
lds
into
arpl
push
xor
cs
add
fistpl
mov
shlb
lret
and
mov
add
cmp
cwtl
xor
dec
movsl
les
push
add
or
mov
jl
mov
xchg
mov
push
ret
push
inc
sub
dec
sbb
mov
push
mov
push
cmp
fcoms
sbb
jbe
orb
rcr
mov
sub
test
jecxz
imul
cmovbe
xchg
pop
mov
icebp
cwtl
jg
and
adc
jne
leave
sub
jmp
mov
dec
sar
ror
xor
shr
lret
add
jno
push
stc
fs
sbb
stc
mov
sarl
dec
add
adc
ds
mov
add
iret
jmp
sbb
arpl
adc
in
adc
mov
mov
loop
mov
dec
sub
icebp
jmp
lea
sub
and
fs
addr16
shl
mov
in
int
lret
and
sbb
addr16
add
scas
inc
daa
data16
test
adc
lock
cmp
jle
out
jp
test
paddsb
lcall
push
xchg
push
jnp
push
outsb
bnd
or
mov
sub
cltd
push
lahf
xchg
and
sub
gs
add
stos
idivl
aaa
push
jp
mov
pop
lea
arpl
es
adc
fldt
pop
mov
nop
dec
fisubrl
push
lea
and
mov
cwtl
pusha
sbb
repz
enter
dec
inc
xor
push
dec
jno
or
cmp
aad
sbb
inc
mov
cmpsl
aad
dec
or
mov
in
iret
mov
fists
loope
psadbw
stos
fisttpl
sbb
jecxz
sub
addr16
add
loop
mov
mov
xchg
or
into
sbb
cmpsb
dec
mov
sub
sub
mov
insl
out
out
aad
mov
push
repz
xchg
in
and
mov
stos
filds
xchg
aam
or
sbb
iret
and
or
call
push
jno
xor
into
into
in
mov
arpl
pop
aad
std
jb
shlb
inc
jbe
popa
mov
fnstenv
sti
ret
stos
pop
dec
and
adc
xor
sbb
gs
mov
push
mov
clc
dec
mov
mov
rclb
xchg
mov
aad
fistps
mov
push
sub
leave
push
movsl
mov
test
jns
insl
mov
sbb
xchg
fsts
ret
and
inc
push
mov
pushf
jb
jo
lods
dec
repnz
mov
sti
mov
jmp
test
movsl
pusha
pusha
pop
mov
push
sbb
mov
js
xor
or
cltd
aas
sbb
and
push
pop
repnz
dec
push
sbb
jge
clc
cli
orl
push
sbbb
out
aad
mov
or
daa
mov
out
xlat
stc
cmp
xchg
cmp
add
cwtl
insb
gs
push
ja
jne
ja
popl
mov
adc
mov
jns
cmp
sti
rcl
lock
pop
movaps
into
imull
mov
clc
xchg
mov
jns
popf
or
inc
xor
sub
loop
mov
popa
mov
jg
pxor
out
fwait
adc
lret
ds
xor
dec
dec
mov
sbb
std
inc
cmpsb
jmp
nop
out
mulb
xchg
addb
dec
xchg
cmp
mov
test
sahf
stos
xlat
xchg
push
test
xchg
test
mov
mov
mov
jnp
std
push
sbb
push
dec
jecxz
movsb
xor
aas
fisttpll
in
lret
dec
mov
pop
mov
in
mov
ja
sub
jle
sbb
push
mov
jne
add
jns
rcrb
std
or
test
dec
rcr
push
inc
rcrl
mov
sub
inc
divl
jecxz
pop
pushf
or
sbb
and
sar
es
add
orb
pop
sub
lods
inc
mov
push
push
test
lea
ss
popf
rorl
fistpll
lret
es
lcall
loop
adc
push
xchg
lahf
imul
repnz
dec
pop
negl
ret
push
shl
push
into
pusha
sbb
dec
mov
mov
push
popa
btc
push
faddl
mov
xchg
cmp
mov
outsb
adc
les
adc
pop
mov
jg
sub
sub
into
enter
mov
orb
mov
nop
shrl
sub
adc
adc
outsb
lods
mov
dec
mov
mov
jbe
sub
pushf
xor
icebp
rcr
in
ret
inc
out
adc
sbb
loopne
push
lahf
add
cwtl
sub
jmp
jle
jp
jbe
and
sbb
ja
cmpsb
mov
fsubrl
pusha
dec
fld1
xlat
popa
sbb
cmp
bound
test
out
outsl
out
mov
mov
push
es
std
dec
mov
push
pop
jg
mov
mov
sahf
mov
push
outsb
xchg
push
movsl
sub
ja
popf
jbe
dec
movsl
jmp
in
jo
xchg
in
mov
mov
pop
sbb
push
push
loope
mov
jae
fadds
sub
loopne
adc
mov
jecxz
adc
xor
and
jns
inc
es
mov
jmp
push
or
inc
std
sub
mov
inc
jecxz
mov
pop
or
xchg
xlat
mov
jno
scas
mov
push
mov
repnz
clc
fsubs
add
and
add
daa
sti
adc
adc
or
hlt
jmp
bound
push
pop
out
loop
lds
call
adc
arpl
mov
call
jb
std
sahf
lods
cmpsb
cli
push
pop
mov
imul
test
fdivs
mov
lods
insb
push
inc
mov
jne
mov
sub
inc
adc
xor
mov
call
call
and
imul
push
mov
adc
mov
loop
jns
loop
xor
inc
mov
icebp
push
and
les
mov
push
sbb
iret
mov
sti
cwtl
mov
xor
shl
dec
or
dec
outsl
mov
inc
add
mov
adc
add
inc
cmp
iret
sbb
push
pop
cwtl
push
sbb
ss
iret
movsl
xchg
sbb
cmc
fs
push
fucomi
sbb
adc
lods
xchg
sub
mov
sub
testl
jle
mov
sbbb
jmp
mov
push
and
rorb
out
stos
add
fildll
mov
jp
inc
or
cmp
enter
adcb
cli
fisttpll
sbb
aaa
push
jmp
imul
ficoms
mov
movb
scas
das
xchg
loop
test
loopne
mov
sbb
ljmp
popf
leave
pop
xor
popf
mov
mov
cwtl
in
push
jg
jl
xor
scas
aas
jne
lret
outsb
or
dec
ret
mov
mov
fwait
sub
xchg
dec
jp
shl
sub
mov
iret
ljmp
adc
in
sub
shll
pop
cmp
bound
inc
lods
mov
lahf
out
or
cltd
inc
cmp
fcomps
xchg
push
dec
pop
jo
mov
pop
icebp
sub
or
ja
mov
push
jno
adc
add
cmp
sub
jl
pop
imul
insl
jmp
lods
push
mov
arpl
and
fimull
fstl
mov
inc
or
shrl
inc
notb
popa
cmp
sbb
pusha
mov
or
push
mov
xchg
sti
leave
xor
pop
adc
sub
push
sub
cmpsl
imul
xchg
lods
lock
lods
mov
cmp
jle
cltd
cmp
test
aad
popl
jge
incl
popa
test
fstpl
cli
xchg
mov
fldenv
dec
mov
and
rorl
inc
adc
push
mov
lret
rcr
mov
or
add
xor
push
jmp
popa
push
mov
scas
rolb
xor
mov
and
mov
icebp
mov
push
adcl
mov
adc
in
dec
lea
out
cmpsb
mov
data16
lret
pop
loope
pop
pop
adc
aaa
jno
shlb
inc
out
and
dec
nopl
repnz
xorl
daa
mov
sbb
dec
mov
shrb
push
mov
xor
bound
add
and
imul
rcl
adc
cmp
mov
adc
js
mov
frstor
jmp
jne
and
movsb
sbb
dec
inc
sub
mov
jge
jne
out
push
xor
aaa
shlb
sub
fbld
test
std
sub
daa
mov
mov
shl
mov
pop
mov
fs
add
jmp
gs
lods
iret
inc
test
call
push
fnstenv
sar
add
jmp
xor
push
or
and
out
jmp
mov
sub
icebp
incb
adc
push
gs
dec
pop
push
aas
pop
dec
cmp
pop
mov
or
cmp
sub
sbb
jp
pop
inc
es
insb
and
fsubrs
xchg
xorb
aam
lret
jge
inc
and
pushf
lds
dec
xchg
in
mov
mov
popf
xor
cs
gs
adcl
orl
repnz
fucom
mov
xor
out
cmp
push
xlat
add
in
test
xor
jg
inc
ret
sbbb
stc
stos
pop
pop
lret
scas
adc
jge
sti
sbb
add
cld
or
dec
inc
pop
imul
adc
call
jno
inc
pusha
dec
lahf
mov
mov
add
pop
out
cmp
adc
inc
test
or
int3
ss
ds
cwtl
scas
sbb
jne
add
dec
daa
dec
mov
pushl
jo
gs
and
cmpsl
sub
divb
mov
insb
stc
repz
sub
add
repz
xchg
xchg
addr16
stc
cmp
dec
adcl
xchg
or
sub
push
movsl
mov
movsb
jecxz
inc
rcrl
mov
into
rcr
mov
mov
into
sarb
lods
pop
movsl
fstp
int3
in
mov
ja
ds
mov
lcall
sub
call
dec
mov
in
mov
gs
fld
cmpl
test
jmp
mov
stos
mov
push
push
enter
push
xor
ss
add
xchg
cs
sbb
mov
jnp
arpl
add
loopne
pop
mov
jecxz
mov
mov
or
bound
int
mov
lds
cmpsl
adc
ret
jno
pop
je
fstl
sarb
pop
mov
push
repz
cld
lahf
ljmp
stos
pop
dec
and
cmp
lods
sti
sarb
or
jp
pop
ds
sub
sub
sub
mov
lret
jle
push
jo
or
lahf
sbb
pop
xor
sbb
mov
mov
out
es
fstpt
in
loopne
sub
jb
pop
xor
sub
add
add
fidivl
fistl
ret
sub
popa
cmp
iret
cmc
lds
mov
stos
sub
or
orl
and
cmp
scas
add
sahf
sbb
sbb
mov
sbb
aaa
test
cli
lock
shll
sbb
or
testb
inc
adc
test
in
cmpsb
xchg
fsubrs
repz
ret
and
or
add
addl
pop
jl
mov
loope
das
enter
ss
or
fiaddl
stos
ss
pop
lea
lret
imul
xchg
xchg
stos
pushf
arpl
lret
mov
pop
daa
mov
or
ficoms
mov
push
push
test
arpl
fsubs
or
arpl
mov
mov
jno
xchg
adc
xor
data16
mov
repnz
push
aaa
inc
cmpsl
fcomi
xor
adc
inc
popa
sub
adc
and
repnz
leave
mov
pop
sub
iret
ss
out
fldenv
clc
sbb
mov
jl
scas
push
in
xor
or
gs
dec
insb
pop
inc
lcall
xor
xlat
out
in
test
push
pop
xor
pop
jb
push
fisttps
adc
test
fcmovu
pop
loop
add
sbb
stc
adc
jecxz
shrb
or
inc
aas
mov
mov
ja
movl
roll
enter
roll
loopne
pop
cmp
xor
xor
pop
jge
mov
scas
repz
sbb
and
adc
mov
mov
cmp
mov
mov
push
test
cltd
sahf
inc
roll
aam
fwait
mov
adc
test
imul
fisubl
jno
add
outsl
in
sbb
jne
imul
or
test
adc
fnstenv
cltd
mov
or
and
cmpb
cmp
and
ljmp
ss
shlb
imul
lcall
cmp
pop
dec
mov
sbb
inc
pop
insl
inc
push
xchg
in
jbe
enter
jo
xlat
mov
mov
mov
es
test
test
loop
orb
mov
and
jns
jbe
in
dec
xor
stc
and
xchg
dec
sub
and
sub
cltd
mov
inc
pop
fbld
test
outsb
cmpsb
outsb
ljmp
xchg
imul
xor
loop
jp
dec
outsb
xor
cltd
fdivl
jb
test
rol
in
lds
mov
xor
jmp
inc
pop
lods
mov
or
addr16
mov
nop
or
sahf
jns
icebp
cmp
jl
mov
out
inc
fidivrs
enter
rol
push
int
adc
and
orb
xchg
leave
jp
loop
popf
pushf
mov
xor
hlt
pop
lahf
sbb
xor
cli
fists
leave
lods
inc
jne
jmp
stos
ds
nop
mov
add
ljmp
mov
xchg
bound
lret
fwait
jle
pop
cmp
cmc
inc
sub
lods
cmpsl
aas
pop
fwait
fdivrs
dec
in
fdivrs
jbe
sub
pop
sarl
or
jno
and
pop
in
cmp
popa
pop
mov
sub
dec
inc
int
repz
lahf
or
pusha
insb
push
pop
or
addb
pop
ret
lods
lcall
inc
push
cld
out
cmc
mov
xlat
stos
push
mov
rorb
pop
mov
js
enter
ret
dec
jno
test
mov
out
test
sbb
xor
dec
xchg
cmp
cltd
jns
pop
mov
pop
clc
fucomp
enter
ljmp
mov
push
test
test
pop
daa
and
sbb
add
sarl
jl
mov
insb
xchg
add
adc
std
aas
xor
push
fisubrs
mov
lahf
cs
sub
fwait
push
loopne
cltd
jle
sub
enter
push
inc
inc
push
clc
pusha
push
xor
xchg
cmpsl
lods
cmp
add
inc
jmp
pop
repnz
adc
divl
scas
pushf
jg
aam
cmp
mov
int3
cmp
or
pop
mov
adc
jns
into
loop
xchg
gs
inc
jb
add
lods
shrb
mov
mov
test
or
test
adc
push
fwait
jmp
mov
enter
mov
push
xorb
dec
add
lahf
inc
nop
mov
ljmp
out
sub
cmp
add
jno
out
adc
xor
dec
jmp
call
fsubrs
bnd
inc
mov
adc
and
insb
insb
jmp
dec
mov
ds
push
mov
or
ja
sbb
and
out
xchg
repnz
jo
rcrb
stos
xorb
lcall
stos
daa
xchg
sub
push
mov
push
pop
xor
dec
xchg
inc
fisubl
add
repz
sub
push
push
dec
addb
mov
in
mov
inc
cmp
test
sbb
dec
mov
lahf
mov
xchg
pop
xchg
cmc
sub
jno
pop
fwait
pop
loope
pop
xor
adc
aaa
pop
cwtl
xchg
dec
sbb
insb
cmp
jge
mov
mov
aas
or
fnstenv
imul
popf
outsb
add
pop
pusha
cli
ljmp
aaa
push
insb
imul
xchg
jo
arpl
jb
shll
add
pop
or
aas
xchg
push
es
or
mov
repz
sub
shrl
pop
test
lea
push
and
addr16
in
pop
add
adcl
testl
fcompl
adc
call
fldcw
hlt
into
loope
xor
test
mov
mov
and
sbb
adc
inc
xlat
dec
pop
push
dec
and
push
sbb
in
arpl
xchg
xchg
mov
sbb
shlb
cli
sub
and
mov
aad
sub
in
lret
out
xor
xchg
jmp
sbb
pop
stos
scas
dec
les
rcrl
jbe
mov
jg
sbbl
adc
xor
or
loope
scas
lea
movsb
gs
pusha
sbb
and
fwait
out
lret
ret
lods
mov
cmp
sub
imul
sub
sub
xorl
sbb
sbb
jo
ret
mov
push
popa
fld
test
icebp
push
jo
aaa
mov
push
aad
stc
mov
cltd
into
mov
imul
or
imul
mov
or
cld
clc
cmpsb
outsb
inc
inc
xchg
push
sub
adc
pop
and
dec
fists
outsl
out
or
add
mov
fwait
nop
mov
insb
mov
pop
push
scas
lods
mov
xor
cmp
or
or
imul
fs
lds
outsl
movsl
or
xchg
mov
push
dec
dec
pop
inc
push
mov
and
mov
mov
iret
sub
xchg
and
sub
mov
test
push
les
lret
mov
mov
cs
dec
push
cmp
lods
mov
lret
pop
add
push
mov
pop
pop
adc
test
adc
aaa
out
fsubl
leave
fnsave
decb
push
loop
enter
dec
or
in
push
loop
mov
jmp
dec
out
xor
orl
cmc
mov
cli
add
data16
pop
add
mov
imul
stc
popa
jne
adc
xor
sub
push
xchg
std
push
call
add
shll
jg
pushf
cmp
shrl
je
lods
dec
jmp
test
push
jge
lods
mov
mov
mov
mov
movsb
pop
lret
rorb
lcall
out
enter
sub
sbb
mov
shlb
sub
jne
std
adc
gs
out
and
dec
adc
mov
and
icebp
push
lds
enter
lods
add
dec
add
mov
outsb
int3
js
mov
popf
js
jnp
pop
cwtl
xor
fisttpl
outsl
test
aas
inc
push
es
ret
dec
or
mov
daa
lea
fidivs
insb
shrl
leave
dec
inc
jle
imul
jne
ret
nopl
xor
adc
iret
xor
add
popa
push
adc
sub
sbb
shr
daa
dec
pop
push
pop
les
ret
sub
pop
ret
movsl
mov
rcrl
jl
xor
roll
popf
sub
or
adc
lret
test
or
lods
and
mov
cmp
fisttpl
shr
je
or
pop
mov
xchg
loope
test
push
xor
shrl
out
or
sbbl
pop
insl
dec
test
fnstsw
push
outsb
cmp
mov
ljmp
cmpsl
fisubrl
iret
pop
mov
cmpb
out
sahf
xor
fcomps
gs
divl
xchg
cs
push
loope
cmp
ss
std
xor
andb
or
sub
xchg
mov
ss
dec
fwait
leave
inc
adc
cmp
aad
sbb
call
bound
repz
ret
sub
or
inc
sub
cmp
nop
aam
fwait
add
es
ss
int3
cmp
mov
or
push
and
mov
mov
sub
addb
addr16
xchg
lret
gs
in
cwtl
dec
in
test
call
lods
add
mov
jmp
xor
mov
mov
sbb
sar
sub
pop
add
push
xor
inc
mov
mov
daa
xor
test
test
add
mov
stos
add
js
pop
cmpsl
push
dec
movsb
jnp
lds
adc
outsb
into
mov
loopne
mov
and
push
les
inc
sub
stos
mov
xchg
inc
inc
daa
testb
push
out
add
adc
mov
or
pop
mov
wbinvd
cmp
mov
mov
add
shrl
fsubl
test
fisttpll
loopne
fidivrs
mov
jnp
cwtl
call
dec
pop
out
lcall
mov
aas
mov
pop
insb
pop
icebp
loope
pop
xchg
jg
bound
fldt
and
and
or
xchg
shlb
pushf
mov
mov
jg
xor
inc
lret
dec
iret
or
mov
and
add
daa
xor
js
in
repz
repz
mull
mov
sbb
sub
in
inc
pop
jge
mov
xor
aaa
in
das
ja
imul
xor
sub
xor
xor
jp
ja
inc
inc
and
xor
dec
inc
fisubl
arpl
out
data16
aas
lcall
in
bound
iret
jg
mov
xchg
pop
test
adc
sub
aam
add
xor
or
adc
mov
jecxz
enter
cmc
pusha
fidivl
js
stc
aaa
push
xor
in
mov
inc
fwait
jmp
or
call
jp
ja
cmp
or
fisubrs
les
cmpsl
jns
rep
ljmp
pop
xchg
and
push
inc
je
lods
lahf
shlb
inc
inc
cmp
je
out
scas
jmp
jae
rcll
imul
cmpsb
xchg
xchg
in
fidivrl
rcr
ja
jno
xor
outsb
imul
outsb
push
out
test
push
pop
test
push
call
pop
out
inc
fdivrs
adc
adc
or
xor
ret
testl
inc
mov
out
clc
insb
rolb
addl
or
aas
xchg
pusha
iret
jns
ret
xchg
cmp
ds
and
push
mov
xchg
xchg
cmp
xor
fidivrs
out
push
mov
inc
fucomip
sti
js
inc
jno
imul
pop
pop
in
test
leave
sbb
cmp
push
out
shlb
outsb
mov
int3
jmp
bound
cwtl
movsb
sub
imul
outsl
mov
lret
mov
mov
mov
int
inc
push
jle
inc
lcall
xchg
in
push
sahf
ret
ficoms
or
pop
jmp
cmp
inc
andl
and
ljmp
adc
jns
movsl
and
imul
and
push
xor
js
enter
rdmsr
int3
mov
jge
add
mov
push
bound
mov
mov
add
mov
repz
scas
mov
mov
sti
loope
dec
or
cmp
ret
jo
outsl
xlat
xchg
inc
cmp
jle
adc
aam
push
loope
xchg
xorl
imul
mov
pop
pop
or
sti
jl
popa
inc
mov
push
jbe
lock
jo
xchg
dec
jp
mov
mov
outsb
sub
adc
cmp
rclb
les
or
and
daa
bound
outsl
mov
adc
ret
test
sub
dec
xchg
aam
xor
sbb
aaa
sbbl
pop
cwtl
enter
or
movsb
and
cmp
sub
mov
xor
pusha
mov
mov
and
loopne
xor
cmc
dec
aaa
fwait
pop
jns
pop
fidivl
lret
xchg
in
outsl
pop
or
xchg
push
imul
mov
pushf
pop
js
cmpb
xchg
mov
lahf
or
jecxz
out
popa
arpl
fstpt
jmp
cmp
aam
sub
sub
cmpsl
fldt
cs
rol
into
mov
test
das
out
push
cld
mov
lcall
mov
jmp
orb
inc
shl
ds
mov
jnp
mov
inc
mov
mulb
insl
jbe
stos
xchg
in
mov
pop
cltd
data16
or
int
rcr
xor
xor
inc
lcall
push
and
loop
or
sbb
clc
cmp
xor
cs
fldl
imull
xchg
ficoml
pop
mov
add
in
sub
jno
sub
push
imul
neg
dec
into
jbe
js
jmp
push
std
mov
ret
cmp
cwtl
sbb
aad
xor
inc
pop
aaa
lods
jo
adc
add
int
inc
xor
rorl
out
outsl
insl
or
stos
loopne
test
push
jb
int3
cmpsb
xor
and
and
fsubr
xor
cmp
mov
mov
pusha
mov
push
jb
repnz
cmpsl
and
sti
mov
les
add
scas
ss
std
jne
bound
repz
jnp
movsb
mov
data16
add
outsl
mov
push
pop
ds
loope
sub
mov
stc
repnz
clc
lds
pusha
adc
add
cmp
pop
arpl
hlt
scas
add
imul
ret
rcr
jmp
stos
xor
pop
and
adc
pop
scas
and
fcmovb
insb
mov
das
pop
je
movb
movsl
push
clc
imul
imul
imull
decl
stos
ss
jmp
pop
xor
repz
out
out
cmp
in
loopne
pop
ja
inc
sbbb
mov
ss
lock
xchg
cld
clc
push
popa
jns
xor
lock
fstl
push
sub
xor
fstpl
mov
leave
in
rolb
nop
inc
movsl
lret
imul
hlt
xchg
push
subb
fdivr
pop
inc
ljmp
cmp
adc
lds
push
and
unpcklps
dec
add
or
aad
into
aaa
or
int
push
sub
or
mov
repnz
addl
inc
outsb
orb
adc
push
scas
adc
add
lock
dec
out
aad
arpl
pop
into
xor
mov
jae
xchg
fstp
add
or
in
cmp
jmp
sub
adc
test
addb
mov
inc
mov
pop
popf
ss
mov
cmpsl
test
pusha
mov
dec
dec
mov
inc
ret
icebp
nop
cmp
sahf
pushw
adc
test
or
or
cltd
in
lds
cmp
divb
aad
cld
addr16
xlat
xor
int
xchg
dec
movsb
and
fsubs
dec
lret
cwtl
ja
int
jmp
sysenter
lret
mov
dec
fs
and
push
cmc
pop
cld
lock
and
into
ds
lock
cmp
jbe
mov
lret
jne
movsb
add
ret
adc
add
iret
lcall
data16
cmp
xchg
add
inc
or
pop
hlt
pop
mov
sbb
scas
add
xor
jp
fstl
dec
ret
pushf
lods
loope
scas
cmp
xchg
xor
call
jg
mov
cs
hlt
aaa
or
xor
insl
outsl
cmp
mov
mov
add
lods
sbb
sub
int3
jmp
mov
xor
nop
daa
add
notl
xchg
push
fistl
gs
mov
icebp
push
aad
adc
sub
adc
iret
cmp
lds
sub
ret
out
aaa
push
fidivrl
or
sub
popf
inc
icebp
dec
lret
fldenv
cmp
pop
or
sub
dec
daa
and
shlb
mov
insb
jl
shrl
and
xchg
mov
dec
jmp
push
add
nop
pop
or
mov
jl
and
in
lret
jp
les
lcall
call
cmp
mov
cmp
jb
enter
xchg
mov
push
xor
adc
mov
xchg
xchg
fdivr
repz
cmc
cltd
adc
sub
sub
fcoml
adc
xor
call
inc
sbb
aaa
jp,pn
lahf
cld
mov
mov
loopne
mov
sub
pop
jl
mov
jae
inc
lahf
ss
adc
dec
jmp
push
xchg
sbb
add
pop
ja
push
lods
shrb
and
push
stc
les
sbb
add
ja
clc
cltd
xchg
sbbl
mov
test
stos
xchg
fimull
faddp
fs
jmp
cwtl
scas
cmpsl
xchg
andps
xor
test
xor
or
sub
jge
mov
add
fstps
aas
out
cmc
stos
pusha
push
inc
cmp
ret
sub
imul
dec
dec
push
push
adc
mov
and
xlat
sub
ret
cltd
cld
jmp
ret
fiaddl
movsl
adc
psllw
je
add
shll
xor
mov
push
daa
repz
fnstcw
rcrb
mov
mov
orl
dec
pop
stos
pop
cmp
js
sti
xchg
test
xchg
lock
xchg
jno
push
bnd
cwtl
shl
bound
imul
test
clc
cmp
mov
push
cld
inc
popa
dec
jp
test
xchg
dec
out
cmpsb
cmp
fisubl
jmp
cmpb
sub
mov
push
shlb
inc
mov
rcll
rcrl
mov
add
jmp
jl
lock
stos
dec
loopne
push
sub
xor
or
in
decb
pop
out
shl
cltd
in
and
data16
fidivrs
xchg
mov
push
push
cli
jle
jb
outsl
jae
jecxz
mov
jmp
dec
daa
and
dec
jge
pusha
push
pop
mov
dec
xchg
rcll
cs
shr
pop
lods
inc
inc
sub
js
sarl
xchg
fcoms
ds
in
jmp
adc
imul
and
fbstp
dec
shll
idivl
cmpsb
and
in
sbb
add
test
push
jae
jp
cld
xchg
stc
roll
push
xor
mov
pop
cltd
mov
xlat
sbb
cs
inc
xchg
pop
jbe
dec
mov
xor
pushf
fnstsw
or
adc
or
mov
xlat
test
cmp
jmp
mov
jle
mov
cmc
outsl
into
outsb
jg
rclb
stos
sub
inc
xchg
scas
dec
sahf
scas
lahf
icebp
mov
mov
ja
adc
and
adc
or
scas
push
mov
rclb
push
jp
shrb
dec
xchg
sub
push
cmc
and
cmp
in
mov
mov
inc
xchg
imul
push
mov
add
jmp
bnd
xchg
add
and
pop
decl
mov
xor
add
out
movsb
cmpsl
push
jo
mov
cmp
adc
test
aad
or
lods
and
pushf
les
fimull
popl
lock
stc
dec
or
in
sbb
lahf
in
shrl
scas
dec
pop
aas
stos
jge
mov
xor
pushf
xchg
dec
addr16
mov
push
cmpsb
std
popf
xchg
xchg
fcoms
inc
mov
mov
adc
or
xor
out
and
test
int3
inc
imul
scas
dec
std
adc
sbb
mov
push
dec
ss
add
scas
or
cwtl
cli
js
adc
cwtl
xor
test
aaa
in
fcmovbe
ret
xchg
push
clc
faddp
flds
dec
adc
das
rolb
mov
push
mov
lret
pop
jns
and
out
sub
cmp
adc
or
rcll
and
icebp
lret
cmc
jae
cwtl
jl
mov
push
nop
ss
xchg
out
mov
push
scas
pop
fcomps
push
insl
pop
cwtl
sbb
push
cmova
add
cmpsl
adc
sub
sub
or
scas
sysexit
jns
mov
adc
sbb
add
pop
mov
cmp
or
inc
push
loopne
pop
mov
nop
pop
cmp
inc
cmp
mov
div
cmp
popf
fidivl
jmp
lret
jbe
sub
aam
jne
cltd
mov
adc
sbb
fsin
addl
arpl
aam
clc
or
hlt
test
or
ret
arpl
ljmp
add
das
cmp
xchg
mov
add
jbe
xchg
outsb
imul
sbb
inc
mov
dec
rolb
xchg
test
mov
lcall
xchg
data16
cs
mov
sub
jnp
rcrl
es
nop
jmp
sahf
adc
cli
jmp
xor
sub
cli
or
jl
sub
push
ds
jmp
cld
mov
sub
push
mov
loope
mov
fildll
inc
xchg
shll
mov
mov
adc
rcrb
or
push
idiv
enter
and
outsb
xor
inc
xchg
les
test
jp
sbbl
icebp
adc
in
popa
xchg
test
aad
xor
movsl
mov
jae
jmp
lds
push
add
mov
jmp
fldl
mulb
dec
mov
test
pop
les
and
cmp
mov
jbe
sub
xchg
pop
push
lcall
inc
mov
mov
push
packssdw
je
adc
loope
mov
mov
fnstsw
cld
lods
out
jne
pop
cltd
add
mov
iret
mov
daa
jo
cmp
pop
or
add
cli
out
ds
gs
insb
ficoms
and
cli
jp
aas
sti
cmp
insb
pop
mov
mov
lahf
add
roll
sahf
in
pop
insb
std
sub
sarl
xchg
mov
xchg
mov
dec
shll
in
int3
pop
sbb
lods
pop
aas
mov
mov
and
jbe
repnz
fisubrs
shrl
xor
or
test
xor
xlat
inc
mov
lahf
into
sbb
cltd
popf
hlt
sbb
pop
loopne
out
or
mov
dec
rorl
ret
popa
sub
icebp
std
xchg
cld
sub
dec
arpl
call
cmpsb
mov
rorb
xor
cwtl
adc
xchg
sub
movsb
cwtl
fs
test
mov
xchg
mov
mov
sub
scas
or
iret
mov
pop
push
push
jecxz
inc
pop
pop
jbe
jo
jecxz
cltd
xlat
mov
ds
mov
jge
and
add
xor
cli
std
xchg
xchg
jo
cli
sbb
mov
or
cmp
rcr
test
btr
dec
scas
push
jle
jecxz
jp
mov
pushf
jmp
xchg
lahf
mov
mov
sub
ffree
les
sbbb
xor
push
scas
test
test
xor
mov
iret
loopne
test
notb
and
call
push
sub
ja
int
cmc
sub
add
xor
scas
out
add
insb
push
add
clc
cli
push
mov
gs
xor
dec
jg
cmp
push
add
add
movsb
cmpsb
fcoml
or
je
loope
and
adc
loop
bound
ficomps
insb
sub
jno
xorb
push
cmp
mov
insb
loopne
scas
rorl
cmpb
push
int
push
push
movsb
lret
icebp
outsl
int3
in
outsl
in
loope
push
sbb
lea
in
sub
shlb
out
dec
sar
jp
mov
sub
mov
fwait
lcall
iret
loope
mov
sub
adc
and
cmpsb
repz
lods
bound
add
cli
push
push
or
lahf
mov
xor
pushf
lock
xor
add
repz
sub
test
pop
hlt
popf
fmuls
movsl
xchg
inc
stos
stos
push
cmpsb
xchg
jno
xor
mov
stos
mov
fcoml
adc
push
daa
jecxz
in
xchg
add
inc
jo
insb
push
mov
loop
fldenv
and
insl
cli
movb
mov
popa
daa
jae
dec
insb
or
mov
lods
iret
sub
lret
mov
sbb
mov
cmp
sti
cmc
cltd
repz
xchg
xor
xchg
xchg
xor
lahf
mov
jbe
adc
adc
pusha
sub
addb
outsl
lcall
lods
cmpsb
jge
push
push
aad
cmp
arpl
test
xchg
insb
push
sub
xchg
shrl
hlt
mov
dec
and
fiadds
repnz
dec
jge
dec
rolb
ljmp
mov
mov
add
fisttps
int3
pop
movsb
lcall
mov
loop
sbb
hlt
scas
ret
adc
adc
aad
sti
loope
mov
ret
pop
rep
xchg
and
jns
pop
xchg
outsl
jle
aaa
jo
das
call
dec
imul
stc
sub
scas
xchg
jmp
xor
dec
bound
push
stos
xchg
push
or
xchg
xchg
out
imul
push
pop
jnp
fmull
cwtl
imul
pop
sub
outsl
pop
dec
dec
sbb
sahf
rorb
test
mov
stos
lds
inc
add
pop
adc
lahf
cli
or
pop
movsb
lock
xchg
pop
jge
inc
dec
xchg
lea
fstps
jno
jmp
pop
fisttps
sbb
orb
stos
sbbb
loop
jno
aas
inc
add
je
movl
pop
lds
movsl
cmpsb
aad
pop
sub
popf
int
push
enter
orl
pop
outsl
sub
hlt
dec
mov
sub
xchg
mov
scas
dec
and
and
inc
adc
jecxz
xor
push
add
out
and
cmc
add
imul
mov
lock
movsl
sahf
mov
lcall
daa
jns
lods
mov
movsl
push
sti
mov
mov
dec
xchg
lcall
jo
outsb
jne
cld
xlat
mov
out
xor
jmp
and
lcall
ret
inc
inc
sub
pop
lret
rol
inc
push
stos
and
aad
adc
push
fcomp
jle
and
ret
cs
orb
ja
pop
add
neg
jecxz
ja
add
or
mov
cmp
lods
adcb
xor
mov
into
lahf
shll
or
push
xchg
int3
adc
mov
mov
sub
mov
mov
mov
and
pop
fildll
scas
ret
les
stos
aaa
mov
and
rcrl
es
dec
mov
xchg
sub
cli
xor
into
mov
inc
loope
fldenv
insl
pushl
lahf
push
ljmp
pop
mov
jb
mov
sbb
sub
inc
movsl
cmp
mov
gs
out
iret
shlb
mov
loopne
int3
hlt
insl
mov
and
call
mov
push
out
mov
lods
sbb
ret
int
and
rol
mov
pop
or
push
loop
sbb
xor
hlt
jb
push
sbb
mov
cmc
std
sbb
pop
arpl
inc
in
pop
cmp
sbb
pop
stc
adc
xchg
rclb
shlb
shll
mov
sbb
out
or
pop
jge
xchg
loopne
add
pop
jns
scas
sti
or
mov
test
fwait
mov
aas
mov
jge
out
mov
lahf
loopne
cli
aas
out
fdivp
ss
data16
mov
sub
push
ja
jle
push
jl
push
aas
dec
pop
roll
cmp
stc
xor
incl
xchg
mov
mov
repz
movsb
cld
in
xor
in
cmpsb
xchg
dec
sbb
std
pusha
es
andl
mov
fsubrl
mov
mov
mov
rcrb
pop
mov
inc
dec
addr16
pop
or
je
adc
fdivl
loopne
jge
orb
mov
arpl
dec
jns
mov
xchg
xorl
adc
sub
inc
xor
movsb
js
fisubrl
xor
jmp
xchg
fwait
dec
dec
movsb
loopne
pop
adcl
jnp
adc
cmp
enter
insb
jp
int
fldt
pop
fs
sub
sub
jbe
movsb
insl
test
inc
add
push
push
pop
sbb
mov
jp
pop
popf
sub
incb
jp
test
pop
or
pop
notb
xchg
add
leave
mov
inc
popf
sub
popa
or
jg
out
lea
rcrl
iret
in
orb
imul
js
lret
jnp
sti
fcmovne
push
shrb
mov
dec
xchg
push
sub
mov
sub
dec
sbb
pop
test
sti
repnz
xlat
and
int
push
addl
neg
nop
mov
xchg
dec
cmpsb
pusha
pushw
test
and
or
add
aaa
repz
push
aas
rolb
push
jae
or
jmp
mov
xchg
inc
adc
adc
add
mov
mov
fldt
lods
mov
xor
mov
addr16
ja
inc
pop
fcomps
jge
mov
sbb
popa
insb
or
xor
imul
mov
xchg
aas
pop
cmc
dec
add
cs
out
inc
xor
sti
fimull
mov
into
shll
mov
dec
mov
pop
mov
xor
push
push
adc
addr16
stos
scas
arpl
push
cmp
pop
lret
cmp
pop
mov
test
clc
adc
dec
inc
push
adc
xchg
mov
sbb
inc
xchg
std
leave
test
xchg
sbb
or
lret
fistpl
push
xor
push
cs
xchg
enter
pop
mov
cmp
mov
mov
pop
fidivrl
xchg
sbb
sub
pop
fcomip
loope
aaa
pop
es
inc
cmc
and
mov
cli
lods
sub
or
mov
xchg
mov
sbb
outsb
or
xor
pushl
cmp
loop
fcmovu
inc
les
xlat
inc
xor
cld
pop
push
into
fdivs
jno
jns
div
fs
push
rorb
out
mov
aas
movsb
push
lods
add
add
fdivrp
fldl
in
xchg
dec
cmpsb
dec
dec
rclb
ds
repnz
shrl
int3
or
test
push
jns
or
add
cmpsl
out
jg
inc
popl
cmc
mov
mov
aad
roll
push
incl
xchg
and
int3
sbb
orl
mov
repz
mov
xchg
mov
cmp
lods
inc
leave
mov
push
push
filds
mov
sub
hlt
iret
repnz
jmp
xchg
sub
in
jmp
cs
cmp
ffreep
leave
mov
sbb
jg
outsl
pop
xchg
mov
jecxz
cmpl
or
in
or
lods
out
ds
imul
and
mov
shll
hlt
in
mov
shrb
ljmp
jmp
cmp
mov
mov
icebp
push
es
mov
test
mov
and
sbbb
cmp
outsl
fisttpll
and
or
out
mov
inc
test
jae
mov
pop
sub
loope
xchg
xlat
mov
data16
pop
cmp
sbb
and
push
cmpl
dec
int
repnz
xchg
fcmovbe
dec
and
scas
add
xchg
sbb
push
mov
ljmp
mov
loopne
std
mov
push
stos
stos
ret
int3
out
ss
mov
or
mov
jnp
xor
sbb
adc
and
jo
and
mov
fwait
push
adc
xchg
mov
push
push
mov
loop
push
aas
mov
loope
notb
mov
je
xor
dec
adc
or
stos
dec
test
ss
jae
js
testl
subb
cmp
inc
std
cmp
cmp
pop
or
jle
add
nop
lcall
scas
mov
sub
or
add
filds
or
imul
into
stos
je
cmp
sahf
outsl
out
adc
xchg
pop
repnz
lret
add
add
sub
fstl
push
inc
jg
movsl
push
adc
bound
pop
outsw
inc
mov
sti
lods
and
call
mov
fstp
cmp
mov
inc
dec
loopne
mov
push
jo
mov
sahf
mov
xor
cmpsb
ljmp
daa
mov
push
jae
popf
sub
mov
loope
cli
sbb
in
popa
test
pusha
into
xchg
adc
pop
jo
push
popa
lahf
mov
add
jae
fmul
dec
xchg
cs
stos
int
and
add
cmp
je
cmc
pop
into
cmc
sub
or
in
enter
add
push
cwtl
and
mov
outsb
cmp
mov
push
inc
ret
and
aas
mov
mov
addr16
testl
aam
out
int3
push
or
pop
inc
and
ss
sub
ja
push
adc
scas
in
jo
add
mov
inc
call
orl
pop
faddl
jae
repz
sub
and
mov
xchg
dec
fadd
mov
adc
lret
sub
testb
daa
dec
push
jge
fisttps
inc
add
iret
dec
gs
pop
jecxz
mov
inc
in
add
push
jle
add
sarb
daa
cmp
enter
cmp
xor
add
leave
cmp
lahf
jo
ror
lods
enter
div
enter
inc
xor
sub
adc
fists
dec
fiaddl
std
aaa
jne
ss
push
inc
ret
add
jb
das
leave
mov
lret
lock
ja
push
aam
mov
or
cmp
xchg
sub
xor
adc
add
leave
in
es
inc
xchg
insb
push
incl
jne
fs
dec
sbb
push
sub
inc
jns
pop
cmp
cwtl
les
push
and
xchg
andl
push
sbb
fs
ffreep
dec
adc
sub
add
imul
pop
bound
jge
aam
pop
xor
imul
int
inc
adc
insl
sub
pop
push
cmc
xor
and
fldt
jle
repnz
lods
inc
es
repnz
add
xchg
ret
xor
push
adc
negb
dec
pop
sub
cmp
mov
scas
mov
rcl
cmpb
roll
adc
fs
leave
ret
popf
insb
loope
js
loop
and
sub
insb
das
hlt
or
insl
fucomip
add
and
sbb
mov
xchg
addr16
sahf
imul
ja
mov
push
mov
movb
dec
adc
fistpll
jb
ljmp
pop
aaa
jb
dec
leave
stos
in
clc
ds
pop
cwtl
push
dec
jo
leave
xchg
mov
sarl
andb
repnz
jo
or
add
xor
std
fldenv
mov
fildll
push
and
out
sbb
arpl
mov
mov
std
das
sti
adc
icebp
adc
sub
pop
xchg
pop
ret
pop
jmp
lret
cs
inc
dec
decb
lods
inc
sub
mov
sub
fisubl
jae
ja
clc
pop
or
sbb
mov
aas
mov
inc
jmp
and
and
push
test
or
lock
test
out
fstpt
xchg
insl
xchg
aas
dec
ljmp
pop
out
cld
stos
cld
popf
mov
mov
imul
pop
fisubrl
jl
lcall
ret
sub
pop
ja
fisubl
pop
xchg
rol
adc
aad
push
fstps
cmp
dec
loopne
and
cmp
xchg
cwtl
hlt
les
adc
sub
lods
pop
jge
cmp
fdivrs
int
js
dec
sub
andb
out
cld
xor
popa
or
call
mov
stos
jmp
add
inc
dec
jnp
inc
sub
jg
out
jo
pop
adc
outsb
fmuls
mov
mov
adc
dec
push
scas
pop
sub
jno
adc
xchg
pop
mull
insl
enter
mov
mov
notl
dec
jne
lds
fdivrs
inc
add
jp
pop
outsl
xchg
lods
data16
add
cld
push
cmpsl
enter
in
inc
arpl
into
mov
popa
xchg
or
shl
int3
into
push
add
add
pop
cli
pop
add
repnz
push
mov
or
mov
jl
sarl
bound
and
xor
jb
mov
jbe
cmp
jmp
jo
xchg
scas
inc
js
push
lret
pop
out
idivl
insl
xchg
hlt
mov
mov
arpl
cmc
jmp
or
jmp
mov
mov
and
or
jp
and
int
fldcw
mov
sub
lret
mov
or
dec
cltd
ret
add
in
add
arpl
push
jle
movl
or
xchg
push
sahf
fmulp
pop
cmp
popf
stos
rcrl
xor
jnp
cli
push
dec
and
or
mov
scas
aaa
js
cmp
mov
in
or
sar
pushf
call
pop
dec
inc
or
stos
mov
pusha
hlt
dec
pop
or
lock
filds
in
ljmp
push
dec
mov
cltd
jnp
cmp
dec
xchg
aaa
lcall
sub
push
cmp
cli
sbb
push
cmp
repnz
sbb
scas
pop
pop
rcrl
dec
iret
nop
cmp
das
or
xorb
out
xor
inc
in
and
inc
jecxz
dec
push
inc
popa
repnz
shlb
inc
mov
push
notb
and
inc
push
cmc
mov
mov
cs
in
mov
insl
mov
outsb
mov
mov
mov
xchg
push
push
mov
das
fadd
jo
add
inc
and
mov
add
cmp
mov
sbb
or
adcb
outsb
sbb
cli
insl
adcl
jg
arpl
jne
subl
add
lods
sbb
in
inc
popf
in
aam
insl
pushf
sub
rcr
int3
cmpl
push
jmp
test
fcom
xor
cmpsl
xor
pop
xor
out
cmp
sarl
popf
fistpl
and
adc
pop
inc
jge
xchg
test
clc
jle
sahf
iret
jge
hlt
imul
aam
push
fcompl
jmp
add
add
lahf
add
cmp
bound
filds
jbe
lret
pop
lods
pop
pop
cmp
subl
outsb
push
xor
xchg
cmp
insb
xchg
jmp
fucomip
in
fildl
sbb
add
mov
outsb
insl
cwtl
adc
jl
imull
mov
ffree
push
jbe
cwtl
adc
gs
fwait
sbb
mov
adc
clc
aaa
sahf
sub
jmp
sbbl
push
pop
fidivs
xlat
jle
sub
sbb
pop
fcomp
mov
push
subl
or
shl
push
scas
movsb
pop
add
xchg
jnp
lcall
loopne
roll
sbb
fsubrs
cmpb
cld
jb
shld
aaa
pop
sub
loopne
jmp
flds
lods
adc
jnp
mov
repz
addl
shll
add
push
pop
mov
sti
test
ja
bound
jno
cmc
daa
call
sti
aam
mov
xchg
jge
stos
jo
scas
cltd
rcrb
cmpsl
popa
test
icebp
je
mov
or
jo
inc
aaa
movsl
jg
mov
test
pop
push
dec
jle
out
sbb
lret
lret
lret
test
sub
mov
cmpsl
or
xchg
notb
or
ret
xchg
xor
jecxz
jno
inc
sbb
sub
mov
push
pop
sbb
ret
cmp
loope
mov
lahf
jbe
or
icebp
fcoms
fs
and
sbb
or
testl
push
dec
stos
icebp
fbld
lods
add
test
insl
and
push
and
push
sub
test
repnz
fcmovnb
push
xchg
cwtl
pop
add
popf
push
das
int
jae
push
dec
pop
popf
call
dec
push
insl
mov
dec
popf
ficoms
sbb
loope
lods
mov
fwait
xchg
cmp
jae
pop
leave
popf
mov
in
or
mov
mov
das
inc
addr16
inc
sbb
rcr
in
mov
mov
mov
das
aaa
pop
insl
adc
aad
in
mov
fimuls
add
sub
outsl
xchg
mov
outsl
inc
xchg
out
and
ljmp
mov
icebp
jg
fisttpl
gs
imul
jg
mov
in
fsubrp
je
add
jge
add
or
imul
scas
mov
lret
push
jmp
mov
test
mov
jbe
je
xchg
cmp
jbe
rcl
lret
fwait
or
pusha
xlat
push
mov
add
out
lcall
dec
mov
sub
pusha
xlat
lods
aaa
testl
daa
imul
cwtl
mov
leave
ja
enter
sub
test
cmp
cmp
dec
dec
filds
xor
fnsave
lahf
jecxz
es
ds
cmpl
pop
fadds
cs
nop
mov
or
dec
mov
imul
push
call
out
mov
jg
aad
xorb
cltd
hlt
pop
call
mov
mov
adc
clc
jbe
imul
fisttps
outsb
lds
lcall
or
pop
jge
sbb
ja
clc
jo
decl
or
icebp
jae
sub
out
pushf
and
sbb
rcll
dec
ja
or
xor
fisubrs
fcom
and
ret
ret
js
out
fsubrp
sub
sarb
or
push
pop
xchg
push
loopne
push
cmp
adc
jmp
add
cmp
xchg
aad
bound
jns
pop
mov
push
in
push
shl
push
notb
add
insb
xor
pusha
out
pushf
aad
and
sbb
inc
movsl
out
cmc
push
loope
addr16
pop
pusha
mov
popa
mov
cmpsb
loop
mov
je
xor
inc
dec
scas
xadd
cmp
xor
dec
mov
adc
xchg
jae
inc
int
mov
rorb
ret
ret
or
sbb
sub
sub
xchg
push
dec
lock
cmp
inc
fldenv
inc
adc
inc
fwait
xchg
test
or
inc
stos
mov
mov
ljmp
jcxz
mov
pop
test
mov
xchg
push
cs
dec
notb
push
fistps
out
xchg
popa
cltd
mov
enter
mov
jne
in
fwait
inc
push
and
ja,pt
ret
fidivs
test
xchg
mov
mov
sub
or
dec
in
xchg
roll
pop
sub
add
loop
test
rorb
sbb
push
cmpsl
cmp
fwait
and
cmp
pop
outsb
mov
nop
xorl
mov
mov
inc
test
mov
scas
xor
dec
fcmove
imul
push
mov
ret
xor
or
fstps
pop
or
rcrb
lcall
pop
sub
adc
mov
jle
cmpl
jmp
shlb
enter
fwait
loope
dec
daa
mov
sbb
bound
stos
push
lods
push
or
xor
dec
mov
dec
cmp
xor
push
pop
shll
test
sbb
fs
add
fadds
sbb
sahf
addl
lcall
jmp
sbb
fiadds
mov
ret
push
js
test
push
adc
enter
inc
push
inc
sar
in
jmp
mov
mov
js
xor
pop
test
mov
ret
cwtl
dec
adc
xor
lea
mov
scas
cmp
sub
mov
dec
sub
jmp
xchg
dec
and
dec
mov
js
sbb
inc
add
fcoms
bound
jl
jl
divb
adc
aad
jp
mov
int3
stos
test
sub
imul
xchg
out
push
push
mov
pop
ret
dec
stc
xor
sbb
fistpll
mov
mov
mov
les
push
in
in
mov
pop
and
adc
jmp
cwtl
ffreep
shlb
arpl
jmp
aad
andb
aam
push
inc
mov
nop
sub
sbb
nop
lods
out
xorb
xchg
and
push
sbb
in
inc
aad
je
sub
add
popa
sub
das
xor
shlw
mov
or
inc
pop
jp
movsb
aas
std
aam
mov
adc
sub
movsl
fbld
sub
jmp
or
cs
imulb
dec
pusha
in
or
pusha
cmpsb
dec
mull
aad
iret
mov
mov
pop
roll
xor
bswap
adc
sti
cwtl
ret
pop
mov
leave
add
xchg
and
cli
push
pop
mov
mov
mov
lahf
cmp
clc
inc
jnp
mov
arpl
hlt
jmp
sub
push
daa
pusha
scas
sbb
mov
sbb
roll
jne
or
popa
mov
test
inc
adc
clc
mov
pop
outsb
stc
pop
jle
fdivrl
mov
cmpb
enter
loopne
mov
adc
sbb
dec
ror
cmp
sti
fbstp
shrl
lcall
sub
lods
iret
lret
adc
jecxz
sbb
mov
xchg
loope
icebp
add
cli
insb
add
jno
or
test
sub
push
bound
pop
push
test
cmp
ja
outsb
addl
outsb
push
mov
add
mov
adc
test
dec
adc
fwait
loope
out
ljmp
shll
aad
dec
xor
ret
fidivrs
mov
or
push
sub
and
pushf
jo
mov
pop
rclb
xor
xchg
pop
cwtl
jecxz
dec
mov
push
push
loopne
pusha
adc
out
test
xlat
test
xchg
and
lds
lret
and
jmp
subb
mov
gs
aad
fisttps
cld
mov
lret
cltd
jno
mov
add
loop
out
mov
or
stos
xlat
rcll
bound
movsl
fs
outsb
loopne
aam
test
nop
out
jle
pushf
cltd
jmp
sbb
outsl
ljmp
mov
push
mov
mov
test
dec
pop
cld
mov
mov
cmp
mov
or
gs
push
outsb
fildl
cld
mov
int
dec
cmp
lcall
sbb
mov
dec
fidivl
inc
out
jmp
movsb
mov
mov
lods
mov
int3
mov
test
mov
ja
mov
dec
push
pop
and
push
aam
mov
ret
pop
mov
pop
push
cmc
add
jl
mov
aam
push
out
rolb
cmp
sub
push
and
xchg
out
xor
add
in
es
xor
enter
loopne
je
mov
push
and
inc
mov
int
jno
xlat
lret
dec
in
lret
rcr
and
xor
xor
movsb
fsub
lods
outsl
lods
lcall
pop
mov
sbb
inc
sbb
jg
aam
jo
cltd
mov
push
push
mov
inc
mov
pop
in
add
imul
lock
lret
sub
xchg
cltd
inc
lods
cs
xchg
aad
push
and
cwtl
fsubrl
ficomps
cmp
stos
jno
es
lret
dec
jne
out
insb
or
scas
add
gs
sbb
pop
addr16
pop
sbbl
dec
inc
fldl
pop
sub
push
lcall
or
insl
mov
pop
out
mov
call
xchg
fstl
jbe
enter
popa
mov
jp
into
and
dec
in
push
int
push
test
sbb
loope
xchg
arpl
adcl
scas
fadds
add
popa
arpl
and
push
popa
adc
mov
cmp
mov
cmpsl
and
sbb
push
add
jge
leave
adc
je
lahf
shll
incl
fstps
cli
or
fs
sub
in
jae
sub
mov
mov
pop
or
bound
sbb
adc
ljmp
push
xchg
movsl
lock
inc
fcmovnu
leave
sti
pop
dec
movsl
mov
into
inc
into
cmp
push
xchg
push
daa
cld
xchg
popa
pop
cmp
inc
adc
mov
out
outsb
lret
inc
ds
xchg
fsubp
sub
sub
mov
push
adc
cwtl
ljmp
and
add
mov
mov
ja
ljmp
mov
test
dec
cli
addl
les
mov
xchg
adc
mov
fisubrs
out
inc
mov
pop
in
sbb
cmp
out
aaa
fprem
mov
inc
aam
inc
in
stos
jne
iret
das
mov
in
mov
lock
xchg
jb
test
outsb
insl
sarb
ds
jb
jl
mov
add
cmp
mov
jnp
stos
mov
ljmp
int
cmp
xor
or
cld
cmp
flds
ret
loope
adc
push
repz
xchg
rorb
push
xchg
mov
fs
in
outsb
dec
sbb
sti
outsb
sub
movl
mov
jp
out
loopne
jmp
xor
mov
cmc
mov
xor
pusha
insl
push
fsubr
scas
mov
add
stos
les
push
sbb
out
movsl
sub
jl
das
push
mov
xchg
cltd
lret
mov
dec
cmpsb
fsubrl
inc
mov
outsl
cmp
loopne
adc
mov
jg
shrb
xor
cmpsb
scas
or
aad
mov
bnd
jmp
xchg
aam
jl
scas
dec
lds
enter
sub
jecxz
dec
fistl
and
xor
repz
add
stos
or
lahf
inc
in
das
cli
shrb
iret
fucomip
dec
xchg
dec
sbbl
mov
std
nop
insl
pop
xchg
xchg
stc
les
inc
dec
or
mov
push
test
in
nop
inc
push
ret
cwtl
cmp
add
xor
imul
lea
adc
sti
mov
and
jb
jmp
xchg
test
insl
sub
sar
ss
mov
xor
ds
int3
mov
dec
shll
imul
sti
pop
mov
dec
adc
aad
cmp
cmp
and
mov
push
push
xor
sti
test
das
mov
push
xor
mov
jno
aad
insl
mov
dec
imul
subb
dec
inc
and
enter
fwait
mov
cwtl
xchg
xchg
out
shr
loop
pop
and
pop
les
xor
movsl
scas
push
addr16
lock
cwtl
jnp
mov
ja
lret
inc
loope
mov
pop
aad
pop
popl
pop
xchg
int3
lods
mov
pusha
mov
add
outsl
xchg
fsubs
pop
mov
dec
inc
adc
xchg
push
pop
push
xchg
inc
lea
inc
pop
fs
push
jle
ffreep
xor
lret
push
ret
dec
scas
or
sub
ljmp
sub
xor
gs
jmp
inc
bnd
jne
test
ljmp
jecxz
in
in
std
mov
jge
xchg
adc
jl
popf
aas
mov
push
shrb
cmpl
add
jb
add
out
mov
sbb
scas
pop
ficoml
adcb
jae
cltd
cmp
push
pushf
push
fwait
sbbb
sub
jle
in
add
cmp
or
lret
lods
gs
or
cmp
adc
adc
mov
dec
jne
stos
popa
lret
out
incl
pop
adc
insl
testl
sbb
jmp
and
dec
adc
adc
inc
mov
and
pop
sar
hlt
or
jmp
scas
mov
sahf
test
mov
fbld
cmpsl
jns
sub
push
aaa
mov
icebp
ss
xorb
insl
dec
cs
xchg
mov
adc
divb
mov
dec
stos
mov
fdivrl
cmp
xor
fadd
shlb
xchg
addr16
fwait
mov
movsl
in
std
adc
fsubs
mov
mov
out
add
nop
mov
fldl
and
dec
dec
loop
loope
push
call
dec
mov
jo
sbb
cwtl
lcall
aas
add
dec
push
rcll
aaa
pusha
xchg
pop
mov
lods
in
cmp
out
imulb
sbb
fisttps
movsl
sbb
mov
test
xor
xor
pop
insl
ret
adc
sub
int3
sbb
add
in
xchg
pop
daa
jnp
arpl
push
in
test
lret
cmp
adc
jne
lret
popl
or
cmp
in
jnp
xchg
outsb
jp
in
push
sub
jb
xor
icebp
dec
mov
xchg
dec
mov
and
jmp
scas
sahf
xchg
mov
in
or
mov
fwait
cli
fcom
out
dec
out
sbb
shll
push
ja
cs
data16
pop
neg
xor
jl
and
dec
insl
jbe
pusha
clc
lea
sub
fsubr
cmp
jge
add
stc
pop
int
adc
fldenv
cwtl
out
movl
int
shlb
sti
shll
lock
fsts
mov
dec
jae
cmpsl
and
cmpsb
pop
xchg
lock
aad
mov
xchg
pop
cmc
ljmp
sbb
iret
push
iret
xchg
out
rolb
outsb
repz
call
outsb
mov
sbb
mov
mov
les
es
fmull
nop
rolb
add
fimuls
enter
pop
shl
cmpsl
cwtl
fstpt
mov
das
mov
mov
xchg
and
rol
dec
gs
jl
jge
cltd
loop
sahf
arpl
push
cs
xor
sar
push
sarb
xchg
out
push
lds
je
or
outsb
movsb
ss
mov
out
stos
in
jnp
mov
daa
int3
mov
pushf
jno
xlat
aam
insl
pop
lcall
call
hlt
arpl
in
stos
sbb
int3
shrb
pop
pusha
in
push
sbb
ja
dec
xor
add
fildll
dec
test
dec
inc
xchg
lock
sbb
dec
loope
movsb
test
rolb
std
sub
adc
cmc
fs
aam
out
pusha
mov
pop
mov
add
pushf
adc
pop
and
ds
mov
push
mov
jl
xlat
sub
lods
pop
sar
lods
push
lea
push
push
jae
and
fbstp
lret
xor
cmp
and
sarl
into
and
test
pop
and
sub
or
inc
push
testb
loop
cmc
test
xor
sub
into
mov
inc
push
xchg
xorl
mov
push
das
inc
mov
int
adc
testl
cmp
and
rcr
push
ret
cmc
and
dec
js
into
cmpsb
aad
int3
and
ja
pop
test
pop
loop
loope
xchg
inc
mov
adc
addr16
jae
push
fmul
xchg
insl
xchg
fnsave
and
jns
fnstsw
jmp
leave
mov
mov
sbb
dec
jge
aad
sbb
and
pop
movsb
mov
dec
arpl
sti
push
icebp
out
jb
cld
cltd
cltd
out
in
sbb
mov
pop
in
xor
fidivrl
jl
mov
xorb
outsb
mov
push
imul
xor
adc
out
jno
cld
int3
je
xchg
mov
mov
imul
adc
or
mov
ja
push
lds
dec
sub
addr16
and
inc
mov
arpl
ret
cmp
ja
dec
test
and
dec
push
cmpb
jnp
add
dec
sbb
shrl
iret
mov
cmpsl
outsl
insl
xchg
dec
popf
hlt
push
mov
sbb
push
adc
adc
push
mov
dec
scas
or
adc
rcll
repz
xlat
int
jne
ss
sarb
push
and
addr16
or
inc
add
dec
xor
fsubr
jl
push
sbb
scas
jbe
int3
subl
fsubrp
pop
mov
popa
adc
dec
mov
daa
sub
add
add
je
dec
subb
fiaddl
outsb
dec
nop
rorb
out
push
mov
test
and
mov
push
rcr
lgs
dec
xchg
lret
lret
ds
and
stc
insl
or
or
add
int3
jae
adc
mov
jl
xor
lods
pop
insl
and
mov
push
inc
xor
xor
sbb
mov
addr16
repz
pushl
pop
loopne
iret
rclb
shrl
hlt
jmp
lret
pop
stos
fwait
scas
dec
jp,pt
mov
xor
andl
popl
and
add
push
shlb
add
mov
test
dec
rcll
jle
inc
cwtl
jb
jecxz
add
xor
or
nop
ret
inc
mov
mov
rcll
push
fistps
lods
inc
loop
or
xor
adc
pop
pop
xchg
mov
cld
mov
mov
xor
xchg
xchg
cli
cs
lcall
arpl
icebp
cwtl
ret
lock
inc
fcomp
cmpsl
scas
popf
movsl
sbb
push
mov
adc
and
sbb
xor
sbb
mov
mov
into
mov
xchg
push
mov
hlt
call
jp
in
cmp
cwtl
inc
negb
adc
or
test
jae
icebp
movsb
push
mov
popf
leave
int3
inc
fmull
test
xchg
cwtl
stos
cli
cmp
push
out
adc
sub
add
inc
pop
dec
xlat
rcl
std
movsb
stc
notl
xor
or
sbb
inc
int3
rorb
fld
mov
addl
and
jp
cmp
dec
mov
mov
cwtl
mov
dec
out
adc
rcrb
fildll
mov
test
sahf
lods
xchg
jg
loop
or
roll
outsl
aam
mov
mov
push
aam
dec
mov
mov
or
inc
aad
int
lds
dec
out
bound
div
inc
in
mov
xchg
inc
jmp
sbb
push
rcrb
xorb
lea
leave
jnp
jbe
lahf
sbb
fsubrl
mov
jl
in
dec
int
dec
into
xor
loope
dec
rclb
ficompl
xchg
adc
jmp
sti
add
push
mov
fnstcw
popf
addr16
lret
xchg
mov
into
adc
ljmp
fmull
jecxz
cmp
mov
stc
inc
jbe
notl
jno
jmp
ja
aad
fnstcw
lahf
dec
aad
shlb
xchg
dec
and
test
das
cmp
pop
sub
inc
mov
lock
jecxz
adc
dec
xchg
cltd
mov
and
aam
out
or
xchg
mov
xchg
jno
insl
repz
ja
push
cmc
cmp
jge
rcr
inc
test
loope
push
mov
add
fdivrs
jge
out
dec
fisttps
mov
mov
push
adc
adc
sbb
xorb
addl
ret
fs
or
test
xlat
fistpll
cmpsl
mov
cld
out
push
xor
and
mov
loop,pt
mov
test
in
scas
mov
test
cmc
inc
les
push
cmp
jb
jg
inc
push
es
xchg
mov
mov
loopne
jns
jge
mov
adc
jmp
out
aam
cwtl
stos
nop
popa
popa
mov
lds
pop
in
lea
loop
pop
jbe
sarb
test
pop
mov
inc
loop
or
ret
or
test
add
mov
mov
cs
andl
mov
pop
push
push
pop
xchg
or
es
test
sbb
jp
ret
dec
movsl
pop
nop
in
adc
popf
sbb
int
jmp
sbb
jne
fbstp
rol
and
sub
or
pop
stos
stc
aam
scas
outsl
dec
icebp
or
and
add
imul
push
sbb
push
mov
sub
mov
in
adc
outsb
cmc
xchg
and
push
pop
lcall
lret
mov
jb
push
jbe
lods
mov
xchg
addr16
xchg
xchg
frstor
into
pop
lods
out
mov
jge
xchg
pop
mov
je
cmp
xchg
outsb
cmp
adc
xor
in
jp
stc
cli
jnp
sbb
pop
or
cmpsl
mov
rcrb
cmc
fisttpl
jge
mov
and
hlt
dec
dec
inc
push
pop
movsb
jge
dec
addb
push
bound
aad
loope
les
loop
cmp
xchg
pop
test
fisttpll
and
mull
cmp
int
lea
mov
or
push
cmp
fistpll
inc
dec
pop
loopne
xchg
mov
loop
or
scas
enter
jb
out
adc
outsl
loopne
loope
mov
and
aaa
mov
mov
pop
pop
aam
mov
shll
std
cmc
add
jne
ficoms
lcall
ljmp
test
mov
inc
xor
xor
jmp
mov
dec
pop
test
int
mov
mov
int3
xchg
push
inc
out
cmp
cwtl
cmp
inc
fmull
lahf
cmpsb
pushl
js
mov
sbb
mov
pop
dec
movsl
adc
js
lock
pop
dec
pop
mov
stos
mov
and
loopne
sub
cltd
xlat
sahf
cmc
int3
jno
test
mov
jmp
xor
data16
add
inc
fildll
fdivrs
add
in
dec
addr16
push
test
aam
inc
dec
cmp
pushf
sti
nop
adc
lahf
sub
fimull
and
test
xlat
test
add
add
mov
cmp
xor
loopne,pn
add
insb
int
dec
jmp
repz
imul
fisubs
mov
push
xor
jmp
iret
sbb
dec
jecxz
jge
xchg
mov
out
out
stos
aad
mov
ret
mov
aaa
int3
scas
dec
cwtl
push
dec
out
mov
or
xchg
mov
mov
inc
inc
outsl
cli
adc
ljmp
cwtl
repz
mov
ficompl
inc
aaa
rcll
aam
arpl
xor
mov
sbb
std
addb
rol
mov
add
sarl
stc
and
cmpsb
test
addl
fnstsw
ja
sbb
addl
out
pop
cli
lcall
mov
xor
or
mov
int
cmp
shrl
lret
testb
pop
fildll
inc
xlat
icebp
fisttpll
hlt
cwtl
jle
jle
jl
dec
cmpsl
into
test
push
insb
loopne
std
pop
flds
push
lcall
clc
or
xor
ss
call
dec
or
pop
sti
js
test
cltd
mov
sub
add
test
cmpl
adc
pop
dec
out
pop
sub
sbb
das
sub
mov
shl
gs
ljmp
popa
cmc
xchg
sub
push
xlat
dec
jae
pushf
mov
dec
lret
ret
enter
in
mov
cmpsl
popa
xorb
pop
scas
pop
popf
rcr
pop
mov
punpcklbw
xor
push
stc
push
in
xchg
push
push
push
movsb
pop
xlat
or
jns
mov
punpckhbw
call
xchg
xchg
mov
sahf
cwtl
pop
inc
cmc
ljmp
mov
add
push
inc
in
mov
pop
mov
xchg
addb
mov
xchg
pop
or
sub
sbb
mov
nop
xchg
push
mov
or
jmp
arpl
test
shll
pop
xchg
add
add
cmp
stos
imul
rclb
lods
mov
pop
in
test
fcmovnbe
push
dec
sti
jmp
outsl
roll
or
repnz
xor
ret
filds
mov
xor
adc
test
add
mov
aaa
cld
lcall
xchg
add
sub
insb
or
inc
sti
push
clc
push
inc
out
lcall
stos
xchg
outsl
jno
cmp
jle
enter
lahf
int3
mov
jle
shl
stos
icebp
and
int
add
fiadds
ljmp
lock
movsl
popl
fisubl
hlt
xchg
subl
mov
xor
mov
push
les
jp
dec
pop
jne
repz
test
repnz
jp
fdivl
jnp
push
aas
xor
cmp
mov
out
inc
loop
loopew
pushf
scas
sbb
push
and
xchg
popa
mov
enter
lods
pop
aam
jcxz
jl
mov
jns
setp
call
les
cmpsl
pushf
jmp
push
popf
aam
inc
je
hlt
add
cmc
pop
pop
jl
cmp
xlat
sbb
into
pop
mov
dec
addb
or
and
aad
shll
jo
dec
mov
pop
fwait
dec
stos
shr
mov
stos
lods
out
sbb
push
not
add
jp
in
fdivrs
pop
mov
and
lock
bound
mov
sub
out
mov
inc
setp
cwtl
adc
jno
repz
rcl
push
fsts
dec
dec
js
dec
stc
dec
add
sahf
mov
icebp
xchg
outsl
add
lods
mov
xchg
fsubrl
mov
nop
jno
data16
cmc
sbb
aaa
jge
lret
mov
jl
cltd
imul
stos
adc
gs
and
sub
pop
mov
imul
dec
sbb
les
add
xor
inc
mov
fdivrs
mov
insb
stos
iret
pop
shll
push
jle
fwait
rorl
scas
jae
sub
inc
cld
sbb
sub
xor
sahf
pop
mov
int3
cli
push
inc
add
pushf
jle
cmp
add
inc
test
xchg
in
in
dec
pushf
pop
in
insl
pop
sub
inc
pop
repnz
mov
mov
clc
mov
iret
inc
loope
dec
daa
pop
icebp
pop
lret
mov
mov
add
test
jne
add
adc
inc
mov
std
outsl
outsb
pop
aam
loopne
cltd
iret
inc
popf
xchg
enter
mov
pop
mov
pop
ss
xchg
sbb
push
rol
push
cltd
lds
shl
faddl
arpl
add
sbb
cs
and
fsubl
cmp
addr16
mov
nop
sub
dec
and
movsb
insl
xchg
sub
inc
sub
inc
out
outsl
testl
jl
jne
pop
fstps
xorl
popa
or
arpl
mov
xor
jnp
mov
imul
adc
popa
je
mov
rorl
mov
pushf
stos
int
push
jo
movsb
cs
stos
and
gs
mov
out
jbe
lret
sbbl
push
lods
adc
test
and
fnstcw
aaa
mov
push
cwtl
pop
adc
xor
sarb
mov
jbe
add
test
adc
push
pop
dec
imul
cmpsl
cmp
cmpsb
xor
fsubrs
fwait
push
popa
push
pop
mov
repz
das
ret
jns
int
add
dec
mov
mov
xor
push
jmp
mov
es
andl
lock
add
pop
pop
rorb
pop
in
sbb
cld
imul
cltd
xor
sarb
inc
jl
pop
sbb
xchg
pop
std
push
jo
inc
pop
movsl
leave
cwtl
push
shll
out
cmp
sub
cli
mov
out
inc
sub
hlt
adc
dec
cmp
loop
std
ret
addr16
mov
cmp
xor
sub
cli
or
or
jnp
int
adc
mov
shll
xchg
jl
dec
loop
mov
adc
and
pop
adcb
cmpsb
loope
clc
push
inc
les
test
imul
jns
roll
rcrb
test
mov
add
lods
xor
popf
add
adc
fsubrl
inc
mov
fcoml
call
popf
mov
cmp
pop
xchg
movsl
int3
jmp
push
xchg
je
into
jmp
cmp
mov
jno
sub
aaa
fidivl
es
dec
lahf
aas
sahf
dec
cmc
in
testb
aaa
arpl
sbb
gs
cmpb
mov
cmpsb
jge
pop
sbbl
ja
adc
sub
and
js
mov
fwait
lods
inc
mov
jnp
adc
sbb
and
pop
cmp
sbbl
pop
sbb
xor
mov
push
cmp
inc
adc
outsb
loope
mov
sbbl
push
fs
aaa
popf
sub
repz
fisubrs
loop
test
mov
repz
imul
jp
jb
fisttps
fiaddl
adc
jo
jno
jecxz
jp
rcrb
dec
in
sub
mov
jae
test
mov
inc
es
jb
inc
dec
xchg
pop
mov
push
sbb
shl
out
mov
push
mov
lahf
and
push
sub
mov
stos
je
xchg
mov
fistl
popa
das
or
push
inc
in
xchg
aas
dec
sub
mov
stos
pop
or
inc
pop
out
andb
mov
jl
es
xor
push
adc
or
repz
shlb
pop
jae
je
sub
call
mov
mov
in
cld
sub
mov
or
pop
push
push
pop
mov
pop
mov
or
je
push
jge
ret
adc
addb
cmp
repz
aaa
daa
inc
test
rcll
inc
stos
fs
cmp
into
cmp
sub
sbb
dec
adc
loope
inc
push
cmp
pop
mov
mov
jmp
fstpl
fstl
nop
mov
dec
pop
sub
sbbb
ret
ss
inc
scas
and
inc
ret
icebp
cmc
mov
sbb
cmp
lret
cmp
xor
push
pushf
dec
fsubrl
out
add
and
out
cmpsl
pop
daa
adc
pop
int3
jl
lods
mov
repnz
mov
outsb
insl
sub
cmp
cmpsb
out
leave
jnp
popf
jne
lock
aam
iret
imul
sub
ret
xor
push
shrb
or
fdivr
ljmp
jns
add
cmp
xchg
jo
mov
fistl
cmp
push
sub
mov
outsl
jo
xor
add
cmp
test
xor
out
aam
xor
mov
or
addr16
dec
nop
cmpsb
mul
popa
push
mov
into
ficoml
decb
inc
mov
aaa
jbe
jns
push
jbe
inc
ljmp
xor
and
and
cmp
not
loope
pop
fnstcw
jmp
xor
jmp
and
sbb
aas
sbb
mov
popaw
addr16
lcall
aas
mov
cmpsb
sbb
and
xchg
mov
cli
pop
push
gs
fldcw
lret
xor
pop
std
push
test
mov
mov
push
mov
out
pop
scas
subb
pop
rcrl
cmc
pop
jo
xor
outsb
add
jns
fcomps
adc
pop
dec
jl
lahf
jecxz
jb
mov
daa
cmpsb
cmp
push
nop
push
inc
fnsave
lret
rcr
mov
xchg
insl
adc
stos
sub
dec
subl
loopne
div
fisubl
xor
frstor
mov
cmpb
int
push
and
inc
mov
mov
adcl
inc
push
inc
imul
aaa
mov
out
xchg
clc
mov
inc
movsl
movsl
push
es
add
mov
lock
daa
insl
in
std
mull
es
or
cltd
adc
adc
xchg
sbbb
push
xor
dec
mov
out
inc
xor
push
xchg
jbe
mov
mov
jmp
mov
shrl
add
xchg
jnp
xor
mov
jle
xchg
pop
mov
pop
xchg
jns
in
gs
xor
fsubrs
ficoms
loop
test
js
sub
jns
pop
int3
cs
test
jmp
test
loope
ss
jnp
jmp
in
ljmp
jmp
scas
xor
jbe
sbb
jb
das
pop
rol
shl
gs
shlb
dec
xchg
lods
fbld
adc
out
scas
nop
adc
leave
testb
insl
loop
test
or
or
xor
pop
aaa
jne
shlb
sub
movsb
negl
jb
add
rep
mov
shlb
shll
jg
enter
shr
lcall
adc
jle
push
xor
in
and
pop
inc
mov
cmpsb
pop
das
mov
int3
rcll
pop
cld
jle
lret
fwait
lret
push
dec
daa
dec
popa
enter
fiaddl
cltd
sbb
jo
sbb
fsubl
arpl
inc
cmpsl
orl
inc
xchg
movsl
cmp
push
adc
push
mov
or
cli
inc
fs
adcl
data16
addr16
xchg
mov
pop
dec
popa
out
adc
add
fisubs
insb
adc
xor
jecxz
push
inc
fs
addr16
mov
in
in
call
dec
push
test
jmp
push
xor
sub
jl
jge
add
jecxz
in
das
pop
and
push
aas
stos
and
jl
xor
test
xor
jge
pop
cwtl
movb
inc
push
and
jge
cltd
jne
pop
in
aas
xor
mov
pop
sbb
movl
lcall
cmp
rcrl
stos
add
shlb
scas
pop
sbb
leave
je
cmp
stc
addr16
push
lret
sbb
push
xor
xor
dec
repnz
lahf
pop
or
mov
jmp
test
scas
ljmp
arpl
mov
arpl
inc
and
xchg
das
stos
sub
pusha
mov
cbtw
sub
mov
lods
sbb
lahf
in
es
fcmove
outsl
xor
inc
mov
enter
dec
sbbb
fdivl
mov
sub
or
inc
or
lcall
jge
int3
addb
mov
js
ja
push
pop
cli
cmp
clc
outsb
pop
mov
pushf
out
xchg
mov
aas
das
push
xor
cmpsb
ror
and
out
mov
out
sti
sahf
and
notb
sub
pop
mov
and
stc
mov
xor
fsubrs
push
data16
ret
rclb
mov
cmp
add
push
pop
nop
stos
push
push
mov
je
call
nop
repz
inc
out
pop
mov
push
fdiv
pop
icebp
xor
outsl
cmpsl
aaa
sbb
hlt
movsl
fbld
inc
jbe
jo
push
aad
push
stc
jmp
sub
call
cli
fldcw
push
mov
push
push
lahf
mov
lret
dec
or
sti
ss
add
mov
stos
dec
xor
mov
xchg
repz
mov
cmp
xor
popf
cmp
imul
sbb
and
mov
shll
mov
sahf
xor
cmpsb
arpl
xor
sbb
arpl
inc
mov
push
lahf
jg
jnp
adc
push
inc
inc
sub
pop
or
jo
call
add
dec
pop
push
rcl
inc
cmpsl
lret
dec
lds
jb
mov
cld
add
mov
ret
mov
popa
test
fcmovnb
xor
into
dec
outsb
data16
fcoms
insb
pop
js
stos
inc
cmpsl
in
dec
mov
sbb
lret
iret
pop
popf
xchg
in
popf
dec
lods
cmp
aad
enter
sbb
stos
clc
pop
aad
inc
push
sti
sahf
flds
lret
mov
fwait
outsl
pop
sub
fiaddl
push
out
in
jb
jno
out
rcrb
xor
mov
cwtl
sub
dec
sub
add
sbb
pop
mov
mov
xor
sarb
dec
test
and
xchg
into
in
lea
test
pushf
or
mov
mov
std
stos
int3
cwtl
adc
rolb
xor
nop
sti
dec
imul
movsl
mov
add
roll
jg
fs
ds
daa
gs
cmpsb
mov
cmpsl
cmpsb
pop
jp
inc
in
aam
addl
lahf
imul
sbb
test
dec
cmp
or
shlb
les
mov
mov
out
sub
add
icebp
call
xchg
fsubs
xchg
ret
leave
call
jp
imul
aas
sub
sti
cmpsb
xor
out
sbb
dec
movsb
or
jle
lods
rcrl
imul
push
leave
xchg
daa
xchg
jge
sub
mov
jp
fistpll
mov
sahf
jbe
mov
mov
into
add
in
or
push
jbe
xor
insb
adc
mov
aam
fstp
xchg
gs
loope
pop
dec
je
es
loop
lods
lea
add
scas
jne
push
out
add
shl
sbb
dec
in
fs
mov
and
lods
rclb
in
pushf
or
cmp
xlat
push
sbb
xor
insb
xchg
aaa
std
std
hlt
enter
inc
push
movsl
inc
sti
mov
cmp
cmp
push
arpl
scas
xor
ret
and
mov
ljmp
lock
mov
bound
push
mov
stc
add
ret
mov
push
jecxz
mov
mov
test
into
hlt
sub
icebp
cmpsb
fisubrs
out
cmpxchg
jne
mov
loope
lahf
cmp
loopne
sbb
mov
cmc
sub
aas
jno
lods
push
scas
fsubrs
xchg
incb
aad
fcmovb
sbb
xor
in
mov
je
loopne
sbb
fs
mov
fadd
test
ds
push
sbb
fs
add
inc
mov
or
pop
pop
adc
push
pushf
push
push
mov
cmpsl
mov
test
cmp
pop
das
repnz
loop
push
cmpsl
or
sbb
mov
push
fdivl
test
clc
and
rol
mov
cs
aad
jge
outsb
xchg
mov
and
mov
insb
dec
mov
sub
hlt
dec
mov
xor
or
jbe
push
and
mov
cld
add
fstpt
dec
push
sar
jl
mov
add
insl
insl
or
push
inc
add
pushf
sub
mov
test
jge
push
loopne
test
ret
imul
loopne
out
popf
mov
int
data16
insl
or
scas
stc
dec
js
popa
mov
inc
inc
jbe
cltd
cmpsb
pop
fstps
imul
xchg
jecxz
cmp
out
xchg
adc
pushl
sbb
xlat
fiadds
inc
mov
cwtl
inc
push
addr16
sti
xchg
cwtl
mov
or
pop
xor
in
lret
out
mov
int
and
pop
and
and
in
dec
cmp
mov
xor
gs
cmp
sbb
popa
jbe
das
mov
pop
addb
mov
cmp
xchg
cmp
insl
xchg
lret
jns
cmpl
push
clc
inc
imul
daa
popa
stos
pavgb
jo
or
loope
daa
mov
inc
or
pop
cwtl
cmp
sahf
and
inc
nop
xor
mov
testb
roll
shrb
jmp
std
pushf
out
sbb
xchg
out
stos
mov
push
xor
mov
mov
push
lods
push
movsl
cmpsl
fdivs
mov
mov
adc
in
pop
sbb
cli
jge
lea
mov
inc
or
insl
popa
pop
int
pop
cmpsl
sub
push
mov
movsb
sbb
rcrb
or
or
scas
ja
insl
or
sbb
inc
mov
ss
aad
dec
sub
push
addl
fadd
lret
or
fcmovu
out
hlt
call
test
mov
mov
and
into
dec
inc
mov
out
lret
shll
mov
add
dec
add
loopne
lock
adc
inc
fistl
ljmp
push
lret
mov
jecxz
ficompl
jle
and
data16
testb
inc
or
test
mov
pop
aad
jmp
lock
ret
stc
pushl
mov
popa
mov
test
sbb
sbb
es
xor
push
adc
adc
pop
jne
jo
inc
sub
scas
shll
ret
aas
dec
daa
push
sub
push
ret
mov
or
mov
inc
cld
cld
and
sbb
inc
jns
pop
add
pop
scas
add
lahf
sbb
ja
mov
mov
or
push
fnstenv
call
push
sti
lea
out
mov
push
rorb
inc
outsb
mov
insb
push
xlat
loope
popa
mov
lock
dec
mov
and
fstpl
adc
es
xor
aas
fld1
xchg
xlat
xchg
xchg
adc
add
in
clc
rcr
jmp
jne
int
mov
mov
imul
dec
adc
pop
dec
adc
jmp
jmp
cmp
or
or
cld
pop
cmp
test
out
cmp
out
pop
lcall
mov
xchg
jae
sub
outsl
pushf
mov
push
sbb
scas
xchg
call
jp
and
xor
adc
cmp
je
adc
or
arpl
rolb
push
adc
aam
inc
push
mov
dec
nop
cwtl
pop
jmp
insb
sbb
sub
iret
xor
pop
outsb
mov
clc
jno
jnp
mov
mov
xor
mov
inc
call
xchg
cmpsb
ljmp
outsb
mov
pop
mov
test
or
subb
outsb
sub
jnp
pusha
inc
cmc
mov
sub
ds
fcomps
call
or
insl
data16
mov
fsubl
jecxz
push
repnz
add
add
outsl
fisttpl
mov
scas
aaa
xor
jne
imull
jno
push
jo
add
loopne
push
jg
mov
movsl
mov
mov
ja
sub
fdivr
fimull
and
or
int
and
out
out
orb
loop
and
sub
add
adc
xlat
dec
xor
inc
in
push
push
cmp
inc
xchg
inc
aaa
xchg
imul
movsl
fisubrl
xchg
pusha
or
xor
and
sarb
pop
sbb
pop
insb
mov
mov
push
cmp
mov
mov
popf
inc
mov
lcall
clc
nop
mov
jp
ljmp
in
and
aad
aas
rcrb
ret
and
sbb
ret
xlat
add
pop
sbb
sub
and
inc
subl
pop
out
outsl
adc
fwait
jne
clts
mov
and
push
lret
js
cltd
mov
arpl
imul
mov
or
stc
lock
std
or
aam
add
test
dec
sbb
dec
mov
fists
test
cmp
cmpb
jl
sub
mov
dec
mov
outsb
cmp
jmp
inc
mov
subl
jge
inc
pusha
ret
icebp
push
mov
repnz
imul
xchg
pop
pop
push
gs
sub
or
rorb
sub
and
clc
ljmp
or
add
loopne
mov
std
ret
cmc
ret
dec
in
cmp
orb
imulb
sub
repnz
in
mov
xchg
sub
push
insl
popa
sub
jmp
sub
add
and
test
test
lods
icebp
xchg
int3
jns
dec
xchg
mov
inc
push
xchg
outsb
inc
repz
out
aaa
pop
sbb
lret
call
push
cmpsb
pop
push
pop
fnsave
dec
into
cmp
or
push
lods
inc
pop
sbb
xchg
icebp
in
adc
sti
stos
xor
mov
mov
divb
addr16
inc
adc
lahf
xor
out
pop
sarb
lahf
scas
adc
or
pop
and
pop
push
ss
or
sahf
mov
adc
jo
pop
sub
dec
xchg
fs
pop
lock
xor
adc
sub
xchg
mov
and
inc
add
push
or
push
mov
lock
shlb
push
xor
dec
dec
daa
sub
add
and
sbb
pop
mov
pop
pop
push
sbb
dec
loop
insl
add
cmp
push
and
es
jmp
inc
push
cmpl
sti
push
add
jge
ret
jbe
pop
ss
mov
inc
xchg
loopne
nop
push
add
lcall
cltd
xor
xor
mov
push
dec
call
sub
push
dec
pop
mov
sub
adc
es
les
lcall
push
sbb
mov
dec
adc
scas
or
lcall
push
jo
xor
popa
dec
imul
in
mov
mov
hlt
dec
pop
stos
adc
mulb
cmp
and
xchg
push
stos
pushf
jge
aam
jmp
xchg
jbe
insb
test
xor
or
xor
lcall
jns
jmp
test
mov
pop
adc
cmpsl
lret
inc
or
es
mov
icebp
sub
into
add
push
pop
pop
enter
mov
mov
daa
clc
or
dec
int
je
call
xchg
lcall
and
lock
shrb
jb
cmpsl
push
jno
cmp
lcall
push
mov
lods
sahf
push
lcall
fucomip
inc
in
std
in
add
push
jl
sub
mov
bound
pop
xor
xor
fbld
ss
push
or
push
into
pop
shll
inc
pop
mov
cmp
adc
mov
test
imul
outsb
lret
rcl
pop
lahf
dec
movsb
lret
imul
js
sub
jecxz
xchg
sub
sti
shll
rolw
popf
nop
mov
sub
pop
jmp
mov
mov
mov
fisttpll
js
pop
mov
cli
add
sbb
pop
mov
mov
fst
add
in
lcall
jbe
push
cmp
pop
jmp
jno
loope
inc
mov
sbb
sub
mov
test
and
jg
and
in
pop
data16
lock
test
sub
mov
hlt
out
xchg
mov
imul
rcrb
jmp
xor
in
lds
sub
inc
lahf
imul
out
aaa
int
pop
stos
sbbl
jecxz
cli
dec
lahf
push
add
xchg
or
xchg
pop
cmp
call
das
xchg
enter
icebp
pusha
push
mov
mov
mov
in
pushf
pop
mov
outsb
out
sbb
sub
pop
push
stos
cmp
scas
fs
xor
and
loop
sahf
ja
and
int3
mov
je
mov
mov
and
into
iret
pop
xor
mov
dec
xchg
out
jge
pop
or
cmpsb
sub
lea
push
or
ss
jo
test
xor
add
jge
dec
dec
arpl
fidivrl
mov
jne
adc
subl
aaa
adc
push
sti
dec
sbb
outsl
mov
and
push
push
sbb
and
push
inc
adc
scas
jmp
jge
inc
inc
adc
shll
dec
jmp
push
dec
pop
imulb
jbe
mov
pop
orl
push
addr16
sbb
pop
bound
mov
movsl
decb
ret
test
rcll
in
cmp
push
xor
and
imulb
cs
pop
ficomps
testb
fisttpl
jg
mov
push
adc
stos
and
test
add
cmpb
out
dec
mov
mov
pushf
sti
pop
or
jno
std
rorl
addr16
popf
fistps
xor
cmp
ss
cli
pop
data16
sti
pop
mov
insb
mov
leave
mov
adcl
mov
cmpsl
xchg
sub
sub
aaa
fs
inc
cld
shr
mov
outsl
adc
std
jo
pop
fisttpl
mov
sbb
xchg
push
sbb
mov
adc
or
sbbb
push
sbb
enter
jp
push
jmp
arpl
cmc
jge
pop
in
or
lods
scas
jo
scas
out
mov
push
inc
nop
insb
rcl
aas
sub
xlat
cld
jne
adc
push
in
xor
adcb
xor
xlat
enter
rcl
and
jecxz
pusha
decl
fnstcw
outsl
lock
sub
ss
push
es
pop
pushf
xchg
inc
add
xchg
inc
fstps
int
insb
enter
ljmp
data16
stc
imulb
sub
leave
cmc
pop
and
ret
xchg
cmpsl
int3
leave
insb
xor
cmovne
adc
mov
stos
pusha
mov
cld
jmp
sti
repnz
mov
xchg
xchg
leave
sub
jmp
insl
xchg
in
shll
push
jmp
insb
mov
pusha
jl
and
cmc
arpl
mov
xchg
or
adcl
jbe
shr
call
adc
inc
int3
jle
jae
and
fdiv
in
mov
in
out
mov
mov
sarl
xchg
xchg
cmp
dec
or
cmpsb
add
je
pop
fistpll
stos
inc
imul
push
popf
inc
cmpsl
push
jge
fistl
sub
xor
lods
cmp
push
cwtl
jnp
cwtl
imul
je
int3
out
ret
jnp
orl
insl
scas
mov
adcb
out
fbstp
je
cmpl
dec
sub
dec
lods
jne
loopne
shrl
push
inc
add
lahf
xchg
cli
pushf
cmp
or
or
cmp
xchg
pop
loope
pop
dec
shll
inc
shlb
mov
mov
and
ficoms
xchg
je
test
push
and
mov
pop
mov
jb
adc
mov
scas
xchg
pushl
scas
in
xor
jbe
inc
orl
cmpb
hlt
icebp
add
mov
sbb
leave
and
mov
pop
fidivl
mov
xchg
dec
cli
insl
icebp
leave
inc
lock
test
xchg
push
lods
mov
add
cmp
jo
sbb
adc
add
or
hlt
push
loopne
lret
mov
or
pusha
jle
imul
sbb
popa
xchg
imul
bound
iret
stc
or
dec
mov
aam
fiadds
das
mov
adc
xorb
fwait
cmpsl
or
lret
cs
or
mov
dec
ret
xor
test
pop
sub
jmp
repz
sub
inc
sti
or
xchg
push
mov
jbe
adc
testl
pop
mov
cs
dec
cmpsl
insl
int3
pop
fwait
inc
sbb
push
xor
pusha
negl
mov
cmp
jecxz
mov
sti
mov
rcrl
nop
mov
adc
sbb
add
ds
call
sbb
aad
push
pop
out
fidivrs
loop
ljmp
xor
sub
jbe
int3
xchg
sub
bound
ficoms
cmp
rolb
lcall
in
fildll
or
jg
jne
add
and
pop
fidivrs
xchg
or
fisttpll
test
xor
loop
inc
cmp
icebp
xchg
xchg
dec
es
adc
jp
stos
jo
ret
adc
inc
aas
filds
rorb
mov
or
push
rcll
xchg
sub
imul
or
and
mov
mov
dec
push
mov
stc
mov
xor
xor
cld
lods
daa
mov
stc
pusha
divl
gs
shrb
data16
dec
test
arpl
xor
addr16
lock
jle
sub
fwait
xchg
fcoms
or
push
das
fadd
push
test
fidivs
cmp
mov
insb
cmpsb
std
sub
or
sub
xor
sbb
or
jo
andb
push
ror
jmp
lret
mov
pop
pop
mov
ficomps
or
lock
mov
push
xchg
sahf
sbb
inc
aad
aad
xor
add
lds
mov
add
or
xchg
mov
fldenv
sub
orb
cwtl
sub
mov
pop
sub
mov
jecxz
mov
ss
mov
orb
bound
std
cwtl
xor
ret
dec
jge
fbld
add
and
inc
and
lods
and
insb
push
lock
push
or
aaa
je
ret
repz
mov
sarl
adc
add
cmova
ljmp
testb
bsf
adcl
cli
jno
xchg
and
rcrl
dec
aaa
sbb
jecxz
inc
sub
dec
nop
in
test
xor
fiadds
xor
cmp
mov
mov
mov
xor
pop
lcall
jne
rolb
insb
test
jo
sbb
fnstenv
insl
sub
or
xchg
inc
mov
rcr
ss
cmp
jbe
inc
sub
cmc
or
mov
or
sti
loope
aas
loopne
xor
in
xchg
addr16
xlat
outsl
dec
imul
sbb
test
mov
mov
sub
inc
xchg
sbb
das
xchg
xchg
fbld
movsl
orb
lods
clc
add
pop
loop
or
fnsave
dec
or
push
pushl
jns
jae
orl
pop
mov
mov
testb
inc
lock
jns
jae
mov
lahf
push
shl
sar
pusha
pushf
add
add
or
jmp
sub
sbb
dec
int3
es
testb
sub
xor
movsl
and
sti
scas
setno
ja
adc
movsl
or
push
ljmp
dec
cld
add
adc
imul
cmc
mov
push
or
mov
aas
mov
xchg
int3
jmp
mov
movsl
push
push
in
xor
sti
in
sub
arpl
cmp
mov
cmp
push
vorpd
add
pop
ljmp
iret
ficoms
adc
adc
and
or
stos
cmp
jnp
jb
jp
pop
pushf
dec
and
jbe
and
lods
mov
repz
inc
inc
fcomip
mov
in
sbb
sub
push
cvtps2pi
stos
pop
mov
pusha
xchg
clc
stos
or
addr16
daa
pop
outsl
adc
jae
test
enter
sarl
sbb
adc
enter
stos
jmp
cmp
adc
xor
mov
dec
cmp
mov
mov
iret
in
mov
in
repnz
dec
adc
mov
aas
jmp
aas
ficoms
pop
sbb
rorl
and
jb
je
mov
rol
shlb
aas
in
xchg
aam
shrb
dec
adcl
add
inc
push
movsl
jnp
xor
add
jg
shr
repnz
xchg
fbld
jo
mov
arpl
scas
cmp
mov
adc
aas
or
push
mov
clc
lods
xchg
fcoml
push
push
mov
pop
push
xor
pop
in
lret
dec
mov
por
mov
inc
into
ret
lods
xor
and
or
mov
push
push
dec
ds
jnp
js
popa
std
and
clc
in
vpmacsdd
adc
addl
iret
lea
mov
jae
std
add
int
rorb
inc
push
out
rcrb
xchg
add
sbb
fldenv
cmpsb
pop
xchg
adc
sar
push
aam
adc
ja
xor
xchg
loop
das
pop
push
in
mov
add
mov
and
sahf
push
dec
leave
jmp
or
nop
fdivrs
push
dec
xor
clc
test
popa
sbb
iret
cmpsb
sbb
dec
nop
test
sti
test
adcb
jae
fcompl
pop
push
out
add
sarl
jg
cld
or
sub
inc
lret
rcrb
and
ja
leave
xchg
adc
movsl
sub
push
jg
inc
es
cmp
pop
movsl
xchg
pop
hlt
adc
add
sub
call
pop
adc
sub
sbb
mov
jle
lock
push
das
cmp
push
insl
mov
jnp
rcrl
dec
mov
movsl
and
pop
push
jp
push
dec
cmp
pop
jns
and
fisubs
jmp
adc
cltd
insl
dec
pop
cmpl
lret
xlat
push
fdiv
movsl
jns
lods
pop
push
lock
es
cmp
push
sub
ds
popf
push
imul
fcmovne
mov
jb
pop
sub
sbb
stos
or
sbb
mov
pop
ret
sbb
int3
pop
push
cmp
outsb
ret
enter
pop
lds
xor
inc
in
stos
sti
push
dec
dec
out
push
mov
sub
pushf
add
mov
jne
adc
lret
mov
aaa
xor
sbb
xchg
repz
jge
and
inc
or
push
movsb
outsl
enter
cmp
subb
stc
jl
into
adc
ret
push
cli
cmp
roll
insb
and
mov
leave
add
mov
jno
adc
nop
add
int
ficoml
aas
fucom
mov
mov
fcmovb
popa
mov
push
in
sbb
mov
jne
dec
adc
pusha
out
jbe
sbb
mov
stos
sub
dec
push
lock
xchg
adc
mov
mov
mov
pop
in
movsl
xchg
movsl
addr16
shl
dec
shrb
insl
in
inc
or
frstor
lods
adc
and
loop
dec
popa
inc
inc
and
fistpll
in
int
popf
mov
clc
push
mov
in
ret
xor
mov
fnstsw
mov
ss
cmp
nop
roll
shr
lret
mov
dec
das
popf
dec
aaa
xor
aam
imul
push
out
pop
mov
push
and
pop
push
lea
mov
mov
stos
fsubr
add
hlt
and
jo
test
sbb
dec
inc
cmp
testb
mov
stos
cmp
pop
or
mov
mov
dec
inc
std
ficomps
inc
mov
out
sub
roll
adc
push
pop
scas
and
pop
push
pop
rol
pop
xor
and
or
stc
xchg
das
mov
or
add
pop
sub
cmp
sbb
ret
jb
sub
push
sub
sbb
or
and
imul
repnz
adc
mov
mov
movsl
inc
movsl
mov
mov
in
cld
xlat
stos
adc
movsb
aad
lock
xchg
aaa
rcrl
testb
and
lds
add
leave
je
in
into
sti
lahf
push
mov
push
rcr
sbb
pop
xor
add
fisubs
cmp
ss
fisubrl
in
inc
fisttpll
arpl
push
add
fisttpll
mov
clc
jae
adc
and
pop
cmpsb
xchg
aaa
mov
jg
lods
imul
scas
jns
test
fsubrl
push
outsl
daa
mov
cmp
xor
sub
add
das
sbb
addr16
jp
scas
mov
sub
push
fmull
xor
xor
jbe
lret
jp
xchg
nop
mov
sub
sbb
mov
test
mov
lods
dec
and
cmp
pusha
jge
jle
in
jno
nop
sbb
lods
dec
dec
xchg
mov
or
xlat
mov
stos
mov
and
imul
popf
xchg
daa
sub
aam
mov
fs
xor
inc
mov
lods
push
xchg
outsl
add
popa
cmpsw
cmc
pop
xchg
dec
jae
lcall
add
jecxz
inc
pop
pop
add
mov
sbb
lds
inc
cmc
xorb
outsl
clc
inc
sti
fsts
xlat
jnp
fwait
adc
lea
push
arpl
cld
cmpsl
lret
cmp
lret
jp
repz
mov
mov
sub
adc
cmp
jl
int
iret
adc
mov
sahf
in
inc
std
dec
xor
fldcw
or
sub
push
les
push
lods
sub
in
dec
or
jmp
nop
repnz
and
add
and
mov
jnp
cld
loop
cwtl
ljmp
or
push
mov
icebp
std
popa
push
fbstp
mov
sti
add
jle
test
cmpb
popf
test
outsl
addr16
arpl
and
jne
xchg
pop
or
pop
lahf
mov
stos
jb
rolb
hlt
mov
fisttpll
xchg
xchg
jge
add
insb
jp
push
int3
pop
arpl
fwait
pop
ret
stc
icebp
mov
cs
sbb
mov
push
xchg
sbb
sub
mov
lods
in
inc
adc
mov
out
fs
imul
sbb
jae
xchg
ds
mov
aam
sub
sub
je
jp
call
nop
pusha
pop
cmpsl
mov
mov
andl
add
pop
mov
fcomip
mov
mov
les
xor
jne
decb
jnp
jmp
ss
out
cmc
mov
out
jle
jecxz
push
ljmp
cld
or
add
stc
data16
stc
sbb
push
cmpsb
jecxz
cmpl
push
pop
sti
dec
jmp
push
jl
sub
mov
dec
xchg
push
mov
push
sbb
enter
int
mull
outsl
fwait
jl
sub
lret
mov
push
push
cmp
cmp
out
pushf
cwtl
inc
rcrl
mov
aam
adc
inc
cli
jae
popa
xchg
and
cmpl
ds
aad
dec
daa
mov
jecxz,pn
sti
cmp
mull
or
mov
std
and
jg
and
jge
pusha
inc
add
inc
sbb
icebp
ret
lods
and
pop
sub
addl
adc
inc
push
lcall
mov
add
push
jg
insl
pusha
or
mov
push
add
add
repz
movsb
push
loop
bound
dec
sti
sub
push
dec
jmp
ds
syscall
push
pop
cmp
clc
sarl
loop
cmp
sub
in
fdivrs
int
pop
xchg
and
in
inc
inc
inc
aas
xchg
call
loopne
insl
out
insb
sbb
mov
into
mov
roll
jp
hlt
cmp
loope
lods
shrl
pop
scas
fcmovnbe
clc
pop
cmc
push
mov
sub
and
cltd
sbb
cmpsl
mov
fdivrp
cmp
fiadds
cmc
popa
sbb
incl
daa
fiadds
inc
sbb
int
cmpsl
jae
addr16
mov
ror
lret
lahf
or
dec
addb
subl
xchg
dec
aad
lods
mov
push
mov
cld
les
test
insb
inc
dec
aam
ss
mov
xchg
leave
scas
cwtl
or
dec
fimuls
pop
lods
adc
imul
sub
fcmovnbe
ret
inc
loope
adc
mov
rcrb
xchg
shll
mov
loopne
es
mov
cmpsl
pop
scas
mov
inc
popa
xchg
divb
cli
arpl
or
in
out
mov
bound
in
jae
int
test
inc
into
dec
stos
insb
push
fwait
xchg
mov
out
jecxz
jge
pop
mov
stos
jg
dec
lcall
xchg
mov
call
push
mov
mull
hlt
enter
mov
cmpsl
shr
scas
fistl
sbb
mov
push
ja
test
add
add
std
out
iret
add
pop
pop
push
cmp
push
divl
mov
insb
cmp
pop
mov
inc
dec
mov
push
pop
mov
xchg
xor
clc
insb
pop
jae
stos
and
pop
dec
jne
andb
inc
mov
adc
in
insb
sub
loop
ss
push
xchg
pop
scas
movsl
jp
shll
fcom
adc
in
mov
sbb
add
cwtl
or
stos
add
out
loop
inc
pop
xchg
pop
out
and
fadds
icebp
adc
push
orb
lahf
or
cltd
mov
sbb
mov
push
jge
test
sti
andl
bound
xor
bound
pop
mov
xchg
xchg
das
sub
pop
dec
push
popf
pop
les
fsubrs
xchg
mov
imul
sbb
push
aam
cmp
cmp
stos
cmc
push
dec
insl
addr16
and
push
leave
mov
xor
cmpsb
xchg
lds
cwtl
adc
sbb
pushf
and
orl
in
les
test
cmc
xchg
push
jg
insl
xchg
test
push
fsubs
cmp
push
aad
jge
push
dec
fbld
outsb
not
or
les
insl
push
cmp
jle
and
call
aam
dec
xchg
xchg
outsl
xor
sbb
mov
push
sub
push
ds
add
mov
pop
ja
shl
fs
sahf
push
mulb
outsl
jl
fs
scas
lods
ret
mov
push
mov
or
lar
pop
xchg
inc
mov
cld
jnp
lea
and
cwtl
cmp
out
push
xchg
adc
aaa
push
inc
dec
daa
add
or
sub
out
push
mov
push
mov
pop
sbb
out
js
pop
jge
gs
cmp
pushf
stc
xchg
or
lret
or
call
cmpsb
gs
out
shlb
inc
lahf
xchg
and
mov
int3
adc
jmp
xor
add
fsubr
mov
inc
mov
sbb
bound
jno
inc
jmp
ss
insb
push
pop
or
push
and
push
adc
fs
mov
or
fimull
out
aam
push
enter
push
pushf
inc
dec
cmc
cwtl
push
jp
push
sbb
adc
mov
out
jnp
pop
inc
fwait
add
mov
adc
out
xor
aas
mov
mov
ret
xchg
mov
sbb
push
in
lods
jmp
xchg
or
sub
scas
jae
mov
push
scas
stos
in
sbb
xor
jp
jmp
inc
jmp
mov
push
xchg
call
or
mov
movsl
ss
or
into
mov
pop
dec
pop
divb
loop
outsb
xchg
mov
push
and
mov
dec
mov
sub
sbb
inc
xchg
push
ficomps
in
movsl
sbb
mov
jns
add
or
lahf
xor
es
jl
sbb
or
mov
dec
mov
adc
sub
and
mov
inc
int
mov
cmp
add
lea
dec
jecxz
sub
mov
push
sub
adc
mov
add
call
shrb
mov
mov
mov
repnz
adc
int
xchg
popl
push
test
jb
add
xchg
mov
jp
fadds
call
cmp
pop
les
out
cmp
test
cmp
dec
inc
and
push
push
mov
push
mov
xchg
fildll
adc
jnp
and
xchg
loop
push
repz
lret
sub
inc
cs
sbb
cltd
imul
pop
jbe
rclb
and
jns
leave
pop
jmp
cmp
xor
xchg
in
jnp
jbe
inc
sbb
stc
mov
cmp
xor
mov
and
push
into
in
fs
sbb
pushf
imul
addb
test
jmp
sti
iret
in
mov
and
outsl
adc
int
mov
insl
lret
inc
iret
movsb
dec
test
test
inc
fwait
nop
shrl
sbb
and
jge
push
pop
jmp
gs
fs
xchg
pop
mov
mov
sub
into
imul
icebp
outsl
pop
aam
mov
mov
pusha
out
cltd
xchg
in
ror
es
inc
mov
jae
push
pop
mov
dec
out
insb
add
movsl
cmp
inc
pop
sbb
fwait
pavgw
mov
adc
sbb
mov
push
ficoms
push
add
xor
xchg
jge
jb
rclb
shlb
sbb
dec
dec
insl
xchg
pop
pusha
xchg
sbb
shlb
pop
xchg
fisttps
lret
cmp
or
sarb
mov
arpl
cmp
lods
shrl
pushf
in
cld
or
pop
loopne
pop
jbe
in
add
adc
sub
mov
mov
insl
fs
push
dec
mov
sahf
mov
pop
test
test
push
push
lret
js
test
insl
movsb
push
jo
lds
mov
sub
pop
inc
mov
daa
xorl
add
jbe
in
xlat
adc
inc
insb
ljmp
leave
stc
movsb
sbb
sbb
ret
fsubr
hlt
cli
jge
dec
into
int
adc
pop
jns
bound
out
pop
loopne
add
outsl
push
das
adc
stos
sub
daa
sti
xor
and
jb
sub
call
imul
pusha
cmpsl
pop
fidivl
pop
stc
cmpsb
and
push
fcmovu
xlat
dec
ljmp
popf
in
dec
sbb
out
pop
inc
pop
dec
mov
gs
inc
inc
iret
xor
mov
rcrl
lret
xor
mov
or
andl
cmp
lock
sbb
push
pop
push
mov
jno
ss
mov
push
ror
mov
ret
loop
test
xorb
inc
lds
mov
xorb
das
jae
add
bound
xchg
insb
and
inc
lea
xor
loope
or
xchg
mov
xor
insl
xchg
or
push
in
sub
std
daa
or
pop
jno
hlt
inc
dec
js
test
xchg
xchg
inc
push
fistl
xlat
and
std
insl
aas
and
inc
jg
mov
cmp
je
xlat
lret
jmp
jnp
lcall
fmul
cmp
push
lods
pusha
lods
push
jb
in
cli
aaa
inc
ret
push
pop
mov
jae
and
outsb
inc
ret
into
xor
mov
xchg
adc
int
sub
dec
xchg
mov
inc
sti
cmp
test
jmp
fnstcw
add
pop
scas
outsb
lds
ja
jns
btsl
cmpsl
sub
aam
mov
add
ja
mov
sbb
push
dec
xlat
xchg
nop
mov
out
cmp
imul
shlb
push
and
shll
mov
pop
cmp
push
ret
cmc
mov
jecxz
pop
fs
and
sbb
add
iret
fld1
repz
loopne
scas
addr16
pop
jns
or
pop
out
je
mov
jl
cmp
add
scas
jle
cmp
push
lcall
lods
adc
daa
in
das
inc
xor
inc
xchg
arpl
popf
addr16
inc
cmp
dec
or
jbe
mov
repz
dec
das
sub
ret
xor
clc
ficomps
xchg
pop
mov
mov
xor
push
enter
outsl
stos
mov
cmp
shll
or
pop
out
mov
pop
pop
adc
inc
pop
movsb
add
adc
scas
add
fistps
sub
repnz
and
cmp
sbb
pop
pop
cmp
stos
xor
inc
pop
lods
bound
push
jg
lds
stos
jbe
pop
fcmovnu
mov
push
inc
push
fsubrl
nop
sub
push
add
pushf
xchg
cwtl
push
pop
pop
cmp
dec
jmp
std
loopne
dec
mov
fndisi(8087
stc
push
shlb
cmp
and
pusha
addb
mov
hlt
xor
outsb
add
outsb
jecxz
sub
dec
insb
cltd
imul
mov
jp
addr16
repnz
in
js
outsl
loope
stos
dec
adc
movsb
test
scas
dec
mov
cmp
push
pop
mulb
cmp
call
dec
out
or
lods
xor
lahf
mov
sub
sbb
xchg
pop
inc
mov
add
stos
sub
mov
je
inc
ret
xor
jb
loopne
pop
fisubrl
mov
jp
ja
cli
lret
mov
jp
cli
push
daa
sar
cld
jae
mov
mov
jg
adc
inc
cmp
popfw
test
call
mov
mov
jmp
test
push
jns
ljmp
push
push
fsts
cltd
jmp
shlb
push
mov
cli
cwtl
adcl
not
lock
shl
dec
inc
jl
cmp
int
add
lods
inc
sbb
mull
xchg
icebp
dec
xor
addl
sahf
stos
mov
lret
fisttps
cmpsb
int
pop
test
xchg
xchg
mov
inc
push
cmp
add
or
cmp
cmpb
scas
insl
imul
icebp
ret
arpl
cmpsb
mov
or
nop
pop
mov
out
adc
sub
push
ficoml
repnz
xchg
insl
sub
jp
test
adc
dec
jmp
loop
adc
or
pushf
in
jecxz
mov
jns
mov
xlat
inc
xor
or
rcr
sarl
cmp
int
not
out
dec
pop
pop
adcl
test
adc
push
mov
mov
mov
fs
push
jnp
repz
mov
xlat
lret
outsl
push
xchg
jle
sub
shl
and
scas
sub
add
and
rclb
fldt
stc
jae
add
int3
push
popa
mov
int3
pop
imul
or
jge
inc
sbb
lds
and
jnp
arpl
sbb
cmp
or
cmp
pushf
das
xor
scas
mov
fisubl
push
test
dec
push
push
lcallw
adc
dec
xor
push
mov
and
imul
push
cli
inc
xor
xor
xchg
jmp
lcall
xor
cltd
test
sbb
addl
mov
test
js
pusha
mov
adc
repz
push
sub
ljmp
mov
lea
ss
sahf
sbb
shr
cli
push
sahf
xchg
cmp
cli
pop
outsb
stos
jecxz
fisttpll
jns
sbb
pop
aad
das
cmc
pop
shlb
sbb
test
dec
xlat
and
clc
and
jmp
mov
cmc
add
mov
jns
out
xchg
jmp
add
or
clc
leave
xchg
aam
mov
add
repnz
insl
cmpsl
mov
mov
out
cwtl
adc
lods
notl
mov
pop
sub
pop
xor
roll
xchg
test
mov
loope
push
mov
lret
inc
int
xchg
or
repz
jno
push
mov
and
dec
xchg
add
sub
dec
rorl
in
out
mov
pop
jp
in
or
cmpsb
lahf
jno
mov
aaa
rol
lock
push
lods
xchg
xor
psubsb
push
shrb
out
pop
push
imul
pop
adc
inc
movsl
cmp
addr16
pop
or
jno
addl
enter
orb
jbe
in
jbe
gs
ret
jle
outsl
inc
imul
or
mul
in
lret
push
out
fldcw
mov
cli
cmp
jbe
xchg
addl
mov
mov
xchg
stos
jg
call
ljmp
popa
pop
pshufw
andl
dec
add
gs
scas
sbb
in
jle
ljmp
jbe
imul
jbe
aam
mov
sub
xlat
xor
jno
push
out
lods
jae
xor
and
mov
outsl
or
sbb
pushf
sbb
cwtl
jne
mov
sahf
mov
mov
adcl
pop
lods
lahf
push
mov
xchg
add
int
jmp
jmp
lods
add
fistps
sysret
cli
jecxz
xor
data16
lods
xchg
cmp
inc
outsl
inc
mov
ja
lret
ljmp
sbbb
repnz
movsb
mov
scas
je
shr
sti
pop
pop
xchg
es
jo
aaa
xor
cmp
sbb
mov
repz
stos
push
jge
imul
jno
lock
mov
nop
xlat
stos
dec
lret
pusha
shl
hlt
adc
pushf
in
xchg
sub
inc
out
fists
inc
cmpsl
sub
test
icebp
and
aam
stos
dec
pop
mov
iret
cwtl
cld
mov
jno
enter
push
loopne
scas
adc
js
rclb
adc
icebp
int3
inc
or
dec
inc
clc
inc
out
and
adcl
mov
stc
push
add
rorl
rcl
dec
jae
fwait
push
sub
sub
scas
mov
xchg
lahf
rcrl
sub
scas
sub
jg
clc
sbb
loopne
and
scas
es
pop
dec
inc
dec
jne
sbb
sbb
push
mov
jb
jns
pop
ret
mov
sub
mov
in
jns
adc
or
or
xchg
jecxz
sub
lret
lret
and
gs
mov
mov
mov
inc
mov
or
leave
cmp
pop
or
addl
push
push
les
lret
insl
std
push
out
or
add
adc
xor
out
or
sub
inc
and
mov
sti
xchg
dec
jmp
iret
cmpxchg
bound
enter
dec
invd
addr16
push
xor
push
je
ljmp
adc
xchg
loope
out
outsl
cmp
dec
inc
sub
ja
xlat
in
dec
adc
hlt
jge
ljmp
rorl
out
jecxz
push
and
xchg
imul
sub
mov
inc
movsl
mov
mov
into
mov
stos
scas
mov
mov
dec
inc
loope
pop
and
adc
scas
push
sub
push
jbe
enter
sub
daa
adc
or
dec
sbb
sbb
mov
jl
popf
fdivl
push
add
imull
roll
push
scas
lea
insl
sbb
sbb
daa
xorl
jg
sahf
sub
mov
and
jl
mov
sub
xchg
rdtsc
fisubrs
add
xorb
in
lods
xchg
jle
and
andb
fcoms
repnz
mov
xchg
adc
sub
stos
in
mov
in
aas
mov
mov
adcl
sbb
mov
les
addr16
mov
and
jg
sub
shrb
popf
dec
dec
frstor
movsl
andb
js
mov
sbb
dec
push
xor
sbb
xor
gs
je
push
hlt
push
fstpt
jae
mov
push
mov
pushf
lahf
int
push
mov
int
fisubrl
adc
stos
fucomip
jb
jae
or
adc
pop
dec
pop
loop
xchg
fbstp
fdivl
inc
insl
pop
push
and
gs
loop
cmp
imul
inc
jge
lods
sub
cmp
stos
inc
pop
mov
movb
and
mov
insl
mov
lds
jno
outsl
arpl
lea
mov
js
test
cmp
cltd
xor
xchg
inc
jl
adc
mov
adc
push
sub
cmp
in
jle
cltd
testl
lahf
cmp
jnp
test
and
push
shlb
into
out
test
cmpsb
outsl
addr16
jg
adc
xchg
icebp
sbb
add
jecxz
mov
sub
dec
daa
push
adc
mov
cmp
and
test
pop
mov
pop
lds
and
xchg
and
jl
push
into
dec
in
sarl
sahf
into
push
sub
inc
push
in
out
loopne
jg
xchg
cmpb
mov
sbb
hlt
push
sub
cmp
jne
scas
xor
fisubrs
shl
push
rcr
jne
and
adc
aam
push
or
add
addr16
out
lods
repnz
ret
inc
in
out
ljmp
rcll
jecxz
or
adc
push
rorb
cwtl
jnp
sub
scas
xchg
ret
sahf
or
leave
iret
mov
push
popa
rolb
add
bound
mov
and
hlt
mov
std
jnp
xor
add
sub
shlb
mov
mov
mov
movsl
inc
lahf
fs
fstl
dec
sti
lret
loopne
int3
pop
loope
jb
je
inc
ficompl
jne
mull
or
adc
inc
xor
fsubrl
xlat
mov
aad
fldenv
cld
dec
xchg
jp
or
dec
jg
mov
pop
xchg
dec
stos
sbb
mov
sarb
aaa
xchg
sahf
aas
dec
je
lea
dec
sar
dec
cmpsb
imul
inc
push
fildl
notl
xchg
mov
inc
pop
add
out
cltd
dec
push
scas
push
push
icebp
push
movsb
sbb
iret
lfs
loop
inc
add
and
loopne
sar
orl
or
cmp
bound
in
dec
pop
ljmp
fwait
aad
pusha
push
add
rcrl
mov
mov
pop
dec
jno
ja
leave
shlb
imul
imul
popa
sbb
daa
iret
sub
popa
addr16
outsl
mov
add
dec
inc
rcrb
jp
add
pop
xor
pushf
push
les
inc
rcrb
aaa
push
pop
jle
testl
roll
and
iret
ret
cmp
enter
mull
pop
mov
push
in
out
cwtl
fsubrl
push
mov
test
sarb
push
mov
shrl
dec
mov
and
out
xor
sub
mov
add
add
adc
cld
sti
xchg
jp
fcomps
clc
push
jmp
rclb
dec
test
es
mov
mov
cmp
jbe
jo
fsubrl
mov
pop
sub
mov
dec
dec
jo
inc
lcall
lods
sbb
sbb
mov
test
adc
popa
loopne
lock
pop
mov
add
loopne
shrb
dec
insl
inc
icebp
pop
jge
xchg
call
dec
in
imul
roll
push
push
pop
mov
das
mov
jae
ljmp
aas
lods
mov
fsubrs
cltd
xor
pop
imul
mov
inc
push
xchg
push
les
adc
sbb
inc
call
pop
stos
push
xchg
insl
inc
decl
andb
cltd
int3
inc
int
enter
orb
scas
mov
shl
xchg
push
push
adc
fisubrl
mov
data16
cmp
add
and
jbe
bound
das
mov
cmp
in
pop
imulb
mov
movsl
or
iret
popa
ret
popa
inc
out
cltd
pop
dec
inc
fsubr
out
jnp
jp
inc
sub
ds
rcll
push
stc
cs
add
mov
add
mov
sub
and
out
int
orl
das
pusha
mov
xchg
outsl
xor
popf
in
insb
cs
xlat
push
mov
xchg
adc
out
dec
fsubrl
fwait
adc
mov
out
out
sbb
dec
pop
popa
mov
pop
pushf
sti
mov
and
mov
stos
or
lods
mov
scas
jnp
dec
mov
adc
addr16
xchg
and
addr16
sarb
cli
cs
negl
in
xor
cmp
mov
fcomps
xor
mov
push
mov
lcall
lods
pop
mov
pop
sahf
jle
sbb
je
mov
mov
inc
mov
aam
xor
pop
mov
cmc
fdiv
rcrl
push
jbe
sbbl
imul
jecxz
je
cmpsl
mov
jle
lahf
nop
mov
cmp
jne
xor
out
les
mov
mov
sbb
jge
pop
mov
push
xchg
mov
pop
js
pop
inc
inc
xlat
inc
aas
pop
push
dec
jmp
mov
repz
ljmp
imul
cmp
jae
dec
loop,pn
or
xor
sub
cmp
inc
pop
pop
mov
cmp
movsb
fidivrs
mov
es
movsl
clc
shrl
mov
outsb
imul
and
jecxz
fdivl
clc
mov
dec
fsubrs
pushf
adcb
outsb
ds
fnstcw
in
jecxz
push
mov
stos
shl
ficompl
lcall
aad
lahf
outsb
mov
adc
nop
rcr
xor
roll
int3
fsubs
dec
mov
int3
adc
outsl
mov
push
cmpb
lods
fs
push
nop
xor
call
mov
es
js
xchg
divb
jg
aam
dec
inc
fsubrs
mov
scas
daa
and
daa
add
mov
scas
cmc
fs
adc
xchg
cs
pop
push
ror
mov
movsb
xchg
mov
popl
xchg
sub
das
arpl
jp
stos
add
ljmp
dec
jg
adc
data16
pop
leave
bound
fiaddl
int
bound
daa
push
dec
jl
fnstsw
outsb
push
inc
je
jne
jmp
das
cmpsb
inc
add
cmp
repnz
jno
pusha
xor
mov
pop
and
in
loop
push
dec
repz
pop
cld
mov
jb
or
fdivr
sub
fs
inc
mov
cmp
inc
imul
inc
int3
mov
sub
mov
ja
push
mov
mov
fsts
push
outsb
insb
movsb
scas
mov
leave
repnz
sub
ds
xor
sub
imul
clc
inc
jne
jb
xor
mov
jae
push
repnz
fildl
jecxz
add
lcall
add
enter
jecxz
push
icebp
inc
aam
mov
popf
sahf
sbb
mov
js
sbb
iret
cmp
aaa
adc
mov
lret
shll
sbb
cwtl
in
sub
mov
mov
imul
mov
cmpsl
fmuls
stos
sti
cmp
cmp
fidivrl
repz
mov
movsl
mov
aam
addl
out
adc
lcall
xlat
lods
sbb
int
push
mov
movsb
cmpsb
leave
add
pop
xor
ss
pop
imul
xlat
add
in
icebp
inc
outsb
mov
adc
clc
xchg
pop
es
pop
mov
dec
xchg
jno
loop
andl
cmp
notl
ds
cmp
sbb
mov
bound
scas
xlat
xchg
push
push
push
pop
lret
ret
xor
lcall
xor
add
arpl
add
inc
cmp
es
mov
inc
dec
out
jge
outsl
lahf
cmp
std
lahf
movsb
jbe
insb
push
jl,pn
movsb
mov
mov
cmpsl
mov
mov
cld
jbe
jo
sbb
jbe
popa
mov
movsb
ss
sbb
mov
fidivrs
sub
mov
jmp
test
int3
jge
xor
shrl
adc
add
sub
mov
or
adc
sbb
xor
test
xchg
push
insl
dec
sahf
enter
mov
mov
sbb
lock
shll
or
dec
inc
and
bound
adc
pop
shll
ja
movsl
fldl
adc
adc
repz
lret
push
rclb
stos
ret
pop
pop
les
push
add
lods
push
mull
int
xchg
repz
or
pusha
fldcw
push
or
data16
push
das
loop
rcrl
test
pusha
in
pushf
add
or
xchg
jo
mov
loope
xlat
aas
scas
lods
sti
loopne
in
pop
push
and
sub
and
es
int3
je
xor
push
cli
inc
mov
ja
daa
test
cmp
mov
outsl
jo
xor
push
out
fcoms
divl
test
movsl
mov
push
jae
inc
jmp
test
mov
mov
or
loop
mov
push
xchg
loop
outsl
cmpsb
and
test
cmp
andl
lds
pop
or
dec
dec
sti
ja
pop
shrd
rcrb
cs
outsl
movsb
mulb
out
xchg
inc
cld
fs
pushf
imul
pusha
divl
pop
test
pop
mov
nop
mov
cmp
mov
leave
sub
xchg
sub
mov
ja
sarl
pop
bound
insb
hlt
fistps
inc
ljmp
leave
xor
adcb
mov
sbb
sub
les
jno
movsl
movsb
lods
outsl
roll
sbb
in
push
outsl
adc
sub
cld
mov
pop
xor
ss
cmp
xor
movsb
cmp
cmp
mov
adc
std
mov
jmp
repnz
cmp
dec
push
push
popf
popf
jl
jecxz
notl
add
ret
fdivr
leave
rolb
cmp
push
inc
add
cmpsl
mov
in
fildl
fimuls
ljmp
dec
andb
out
sbb
sbb
pushf
insl
add
loopne
fldcw
jmp
in
add
les
xor
cvtdq2ps
mov
adcl
xchg
hlt
lods
hlt
sbb
inc
add
lcall
xor
and
lods
ljmp
sub
mov
arpl
xchg
roll
sbbl
addr16
mov
mov
lods
movsbl
mov
insl
pop
dec
lods
out
sub
pop
ret
inc
ret
xchg
notl
mov
pop
lahf
addr16
sbb
and
or
out
es
jnp
pusha
inc
adc
mov
insl
add
jae
mov
xchg
push
xor
pop
push
jnp
xor
sub
pop
push
xor
xlat
test
inc
sub
addr16
dec
icebp
mov
jle
imul
inc
lret
mov
pop
stos
and
jg
aad
xor
inc
div
fs
lret
mov
mov
loop
add
adc
ljmp
aas
in
mov
lahf
push
les
push
xor
and
mov
daa
mov
or
xchg
addr16
mov
cmc
mov
pop
pop
out
cmc
cmp
sub
mov
adc
sbb
fwait
and
cmpsl
mov
jo
add
mov
je
mov
outsb
test
pop
sub
mov
sbb
daa
xchg
ret
xchg
push
shrl
fwait
dec
aaa
ja
cs
push
add
ss
mov
dec
xchg
push
int
mov
cmp
add
js
loop
dec
out
mov
fsubp
popa
fldl
xchg
fcompl
cs
dec
jge
imul
pop
insb
jae,pn
into
mov
add
daa
push
incb
lahf
sub
and
movsl
adc
adc
call
add
cwtl
add
push
lret
cwtl
fs
cmpsb
mov
sti
ror
es
cmp
and
add
cmp
dec
mov
in
pop
lret
cltd
mov
add
add
repnz
nop
xor
mov
xchg
gs
repnz
or
roll
fs
mov
aaa
or
arpl
sbb
jns
cwtl
xlat
pop
fistps
push
and
sbb
call
loop
in
mov
mov
adc
pop
fisubrl
mov
add
loop
jl
inc
test
leave
aaa
cmp
xchg
adc
push
dec
pop
add
xor
aad
adc
xchg
negl
xor
popf
or
sarb
lock
sub
js
cmp
inc
dec
call
insl
mov
insl
pop
sub
jo
mov
pop
sarb
xchg
xchg
jecxz
cs
jp
cmp
dec
xlat
xorb
inc
push
jmp
aad
fldt
add
out
loop
aam
or
pop
or
and
cwtl
inc
adc
mov
cmpsl
inc
mov
fiaddl
push
sti
sbb
and
cmp
sbb
lret
push
int3
aad
or
and
xchg
mov
or
mov
std
ror
or
in
mov
dec
xlat
push
stos
push
jne
popa
xchg
or
xor
lcall
movsl
mov
hlt
inc
fcoml
insb
dec
jle
xor
andl
dec
pop
daa
sbb
mov
dec
lret
shrb
lods
ret
scas
dec
adc
or
jle
cld
lods
pop
xchg
adc
push
adc
pushl
in
sub
add
fdivrp
mov
pop
rorb
aad
jbe
scas
inc
jnp
lea
lea
sbb
jbe
stc
cwtl
cmp
push
scas
lcall
and
or
mov
in
adc
dec
subl
fs
stc
pop
mov
sbb
mov
mov
test
pop
cwtl
sbb
ja
mov
xlat
loop
add
shll
ret
insb
pushf
aam
imul
sbb
xchg
or
fisubrs
fnsave
sub
decl
rolb
pop
jae
inc
add
mov
shrb
mov
repnz
repnz
push
pusha
jbe
mov
mov
adc
cmp
mov
mov
pop
cld
jle
jp
mov
xchg
mov
stos
loope
insl
jns
jo
xchg
pusha
rcll
and
hlt
cltd
mov
add
int3
into
mov
dec
jl
mov
jno
mov
aam
jnp
push
mov
mov
sub
mov
lret
jbe
adc
mov
pop
mov
jo
ljmp
adc
imul
mov
rcrb
stos
push
popa
inc
inc
es
ljmp
repnz
std
test
fdivrl
jne
data16
inc
inc
fnstenv
bound
stos
push
pop
dec
pusha
ret
and
test
push
pop
test
outsb
daa
pop
jg
sub
stc
and
jg
pop
mov
in
insb
loopne
push
add
mov
mov
dec
test
scas
neg
in
cwtl
dec
pop
cmp
cmp
cmp
addl
pop
push
mov
dec
insl
push
cmpl
sub
mov
in
xor
pop
inc
ret
lods
andb
stc
leave
mov
mov
addl
call
pushf
cmpsb
loop
movsl
std
imul
sbb
or
and
mov
das
jbe
pop
lds
scas
pminub
je
xchg
and
xchg
call
mov
jae
mov
aas
xor
enter
addb
mov
movsl
nop
pop
cli
and
cld
push
mov
push
ljmp
and
add
movsl
adc
and
adc
rcr
ss
in
sub
mov
test
shrb
mov
mov
pop
inc
imul
xchg
pop
xcrypt-ecb
cmpsl
dec
and
daa
dec
xor
mov
sarb
ds
jb
out
iret
shrb
xchg
sub
mov
cmp
cwtl
push
cmpsb
pusha
int3
push
xchg
bound
sbb
pop
pusha
stos
and
sub
insb
pop
mov
push
push
jecxz
xor
pusha
wbinvd
and
sbb
xchg
xchg
mov
imul
push
dec
inc
rcr
dec
jo
in
fistps
jbe
jns
pop
sub
das
ljmp
sbb
pop
mov
mov
dec
daa
stos
jns
imul
push
add
push
mov
lret
cmpsl
das
ljmp
insb
out
and
repnz
mov
popf
shr
push
incl
fistpl
pop
jl
push
dec
sbb
dec
cltd
push
jg
fcoms
mov
mov
or
and
sti
xor
iret
mov
into
out
sbb
xor
xchg
add
xchg
in
fbld
jnp
sbbl
xor
leave
out
dec
xchg
mov
cmc
mov
fstl
shr
inc
daa
jne
stc
loop
scas
cwtl
in
int
aaa
addr16
inc
fldl
sbb
adc
cmp
adc
sahf
pop
jns
sbb
sarb
dec
js
test
xchg
pop
pop
mov
mov
out
and
jno
out
and
mov
mov
or
test
imulb
xlat
fnstsw
outsl
sbb
or
push
sub
aaa
dec
add
xchg
xchg
xchg
sbb
push
and
sub
dec
sub
loope
stos
leave
cmp
lahf
ds
data16
xor
sub
adc
mov
push
push
push
popf
enter
add
pop
inc
sbb
sbb
sbb
pop
fmuls
mov
icebp
inc
xor
push
fildll
add
shrl
pushw
and
insb
inc
jmp
test
adc
cmp
adc
sub
popf
repz
mov
adc
bound
add
imul
mov
shl
xchg
fdivl
push
fistpll
outsl
test
into
mov
xchg
test
repz
lahf
rcll
push
push
bound
sbb
jbe
data16
test
je
sub
in
call
inc
push
enter
pop
lret
das
xor
mov
sub
cmpsb
out
dec
jl
loope
jno
fdivrs
push
or
out
sbb
sahf
pop
and
cs
mov
cwtl
jbe
mov
mov
xchg
sbb
xlat
int
mov
push
sbb
pusha
mov
ss
mov
jae
and
fistl
mov
arpl
jl
pop
loope
sub
ds
mov
cmp
push
adc
mov
adcl
adc
inc
push
faddl
nop
inc
sahf
clc
and
and
fistl
pop
mov
stos
cld
sub
mov
jae
into
test
xchg
sub
or
movsl
xor
mov
lea
aaa
cmp
sbb
in
lret
cmp
lods
pop
inc
cmpsl
xchg
fmul
ds
loopne
out
sub
xor
out
mov
mov
into
push
inc
repnz
loop
or
sbb
cmp
ja
sarl
enter
jns
and
cmp
sbb
jns
scas
scas
add
push
xchg
inc
xchg
ljmp
stc
out
ret
mov
jne
mov
insb
push
inc
scas
hlt
loop
mov
movsb
imul
cltd
fdivrl
shrb
inc
hlt
push
js
outsb
imul
or
cs
inc
clc
aas
dec
movsl
scas
jnp
or
mov
addl
inc
rolb
lcall
sub
adc
adc
out
or
cmpsb
in
in
popa
aaa
jp
ja
add
out
mov
out
mov
or
lahf
pop
orb
addb
xchg
mov
mov
roll
adc
and
pop
push
xchg
mov
jg
dec
cmp
dec
ficoms
out
sub
dec
dec
in
dec
stc
fwait
cltd
xor
leave
mov
sub
add
xlat
int
aas
add
loope
jnp
mov
movsb
loope
dec
push
test
hlt
shlb
jl
testl
lods
push
mov
lods
sbb
mov
xchg
shrl
jecxz
mov
mov
add
sub
popf
lds
cmpsl
ja
sarl
inc
lods
sub
pop
loop
add
dec
ror
je
mov
ja
jg
loope
dec
mov
icebp
add
xchg
lret
cmp
and
xchg
jne
les
jp
mov
sar
das
test
aad
jbe
nop
clc
sub
adc
xchg
cltd
shlb
pop
nop
xor
pop
ds
cmp
jnp
outsl
stc
aaa
adc
sub
lock
adc
cmpsl
xor
inc
shr
add
or
imul
cmp
push
cld
and
mov
sbb
lds
shl
pop
daa
in
mov
ja
push
js
jge
arpl
pop
xchg
loope
fsubl
dec
xor
push
jns
lret
and
xor
mov
insb
jmp
jbe
push
lret
fisttps
mov
mov
test
add
mov
sub
add
pop
loope
dec
rol
mov
aam
loopne
outsl
aas
adc
dec
jmp
cld
jbe
int
js
lahf
sub
sub
push
testb
nop
repz
mov
push
daa
cmpsb
rcrb
cld
jb
mov
or
xchg
cmp
mov
mov
add
jg
lods
xchg
pop
xchg
movsb
adc
push
andb
xchg
inc
test
sbbb
xchg
mov
jno
mov
loop
jp
push
push
pop
push
mov
loop
and
mov
pop
inc
dec
pop
outsl
cmp
inc
int3
mov
cld
ds
cmpsb
xor
dec
dec
xchg
pop
or
mov
xchg
and
or
xchg
fs
in
jmp
inc
pop
dec
lods
imul
xor
imul
and
fsubrl
mov
jle
xor
adc
mov
jge
xlat
sub
push
jge
movsb
icebp
rclb
cmpb
pop
adcl
gs
xchg
mov
jg
mov
in
xor
stos
ret
mov
or
cmp
add
cmp
aas
pop
push
and
and
lahf
push
jnp
push
jmp
add
push
add
sub
test
loope
xlat
aas
popf
loopne
and
mov
inc
pop
pop
mov
inc
ds
test
stos
insb
subl
mov
loope
sub
sbb
mov
mov
or
lahf
test
xchg
popf
out
pop
xchg
inc
push
jb
clc
dec
fstl
xor
mov
rorl
out
adc
cwtl
xchg
lahf
mov
das
insl
ret
jbe
cmp
pop
lahf
aad
ja
adc
mov
push
mov
cmpsb
imul
push
fisubrs
jge
je
js
test
sbbl
dec
into
lcall
mov
std
fdiv
sar
sbb
pusha
mov
mov
sbb
and
ret
stc
addr16
insl
out
jae
add
imul
push
add
into
das
clc
push
aam
xchg
cmp
xchg
loopne
ds
daa
add
jnp
call
inc
int3
das
push
mov
fdivr
push
imul
cld
fmuls
es
popa
sub
inc
xlat
xchg
xor
mov
js
inc
insb
and
mov
xor
pop
pop
pop
mov
xchg
leave
inc
popf
lcall
push
loopne
mov
jns
xchg
or
dec
shlb
add
xchg
int
jle
fsts
jmp
xchg
int
ret
scas
xchg
test
cmp
arpl
push
mov
aaa
aam
inc
sub
or
dec
xchg
enter
adc
in
inc
clc
sub
scas
imul
jmp
pop
mov
sbb
frstor
sub
arpl
cmp
jne
cmpsl
cmp
loope
insb
sub
divl
jmp
ret
mov
inc
cmp
arpl
add
hlt
ljmp
mov
mov
test
jbe
les
cwtl
lods
cmpsb
push
lfs
adc
mov
sbb
loopne
inc
mov
ds
push
sub
adc
out
mov
outsb
outsl
sub
jmp
xchg
test
ds
mov
shrd
sbb
mov
jle
in
sub
dec
xor
test
push
jmp
out
push
add
pop
mov
mov
aad
jae
cmpsl
pop
insl
mov
push
mov
pop
mov
mov
call
pop
jecxz
imul
sub
dec
sbb
inc
or
lea
cmpsl
adc
les
shlb
adc
push
dec
outsl
pop
jb
repz
jl
xor
add
cmpsl
mov
add
cli
push
arpl
dec
or
or
jg
push
dec
jp
mov
lea
sub
rolb
lock
sub
loope
push
leave
or
pop
jno
insb
xchg
scas
jno
adc
or
jbe
or
inc
into
xor
and
or
and
mov
stos
cmp
lods
push
and
loop
loope
daa
pop
sbb
jbe
xor
out
ret
mov
inc
or
pop
repz
mov
loopne
push
test
enter
movsl
add
pop
jns
lret
or
cmp
xchg
xor
hlt
shlb
ja
insl
hlt
sbb
sbb
xchg
enter
xor
mov
lds
jae
stos
push
mov
pop
loope
daa
xor
cmp
fdivl
cmc
shrb
dec
nop
sub
mov
inc
test
mov
push
fistps
push
jmp
dec
pop
rcll
mov
pusha
rclb
mov
pop
nop
or
mull
jle
mov
pop
push
jb
ja
jno
daa
rcll
clc
out
cmpsb
mov
mov
xor
scas
jbe
div
lahf
jg
outsb
pop
sbb
fidivrl
dec
push
cmc
or
jne
mov
fiadds
push
mov
pop
jo
out
mov
mulb
dec
sbb
xchg
loopne
cmp
xchg
scas
cmp
mov
incb
cmpsl
fst
sbb
stc
sub
pop
jno
pop
out
ja
repnz
in
mov
mov
add
mov
lcall
cmpsb
push
lods
or
rcrl
and
ja
adc
shr
std
dec
xor
pop
enter
sub
dec
xchg
dec
or
xchg
xchg
and
and
jnp
daa
leave
lret
test
hlt
pop
mov
cs
sarl
push
jp
rcrb
and
mov
pop
sub
mov
aaa
cs
or
vmread
iret
inc
inc
das
es
jb
loopne
cmp
pop
jae
imul
xchg
rcll
into
movsl
sbb
popf
jo
pop
imul
or
cmpsl
and
pop
popa
add
mov
jp
or
nop
fistl
nop
aaa
cmp
mov
test
dec
mov
push
mov
jge
xchg
mov
dec
mov
out
add
scas
and
stc
leave
pop
jb
lret
imul
add
rolb
adc
sti
pop
in
add
scas
pop
ret
inc
test
cltd
sub
sbb
nop
xor
fidivrl
mov
add
mov
outsl
fdivrs
enter
daa
inc
in
xchg
xor
pusha
push
cmp
mov
outsb
sbb
out
orb
jle
fldt
inc
popa
push
loope
pop
sbb
pop
jne
test
lods
std
cmpsl
dec
pushf
jle
sbb
sbb
filds
pop
sbb
fisttps
sahf
or
shlb
cmp
lahf
arpl
popa
aad
pop
cmpsl
fwait
sub
hlt
xor
outsl
xor
adc
xchg
mov
xchg
xchg
adc
mov
movsl
jne
push
mov
mov
pop
lcall
pop
data16
jg
mov
aad
cli
pop
jbe
out
les
jne
hlt
lds
data16
outsl
sbb
lahf
and
inc
sub
pusha
imul
xchg
xor
enter
inc
ret
adcl
and
mov
fcomi
es
cli
push
imul
aas
lods
adc
mov
inc
sarb
mov
into
xlat
adcb
push
jnp
int3
dec
aam
xorb
adc
mov
or
dec
inc
cmpsl
dec
lret
or
pop
sbb
fs
push
add
loop
ret
out
push
xchg
cmp
push
mov
dec
cwtl
adc
add
pop
scas
push
mov
lret
inc
into
push
js
jne
mov
sbb
je
nop
nop
xorl
sbb
clc
aad
repnz
int
add
cmp
cmp
sub
cs
mov
mov
xchg
push
inc
dec
mov
jl
mov
lcall
sbb
lahf
icebp
std
push
fcomi
sbb
inc
outsl
xor
dec
push
test
decb
cmp
cmpsl
mov
call
outsl
xlat
jmp
and
push
jne
jmp
out
sub
mov
xchg
mov
pushw
sbb
push
pushf
jmp
in
addr16
jne
addr16
or
mov
sbb
jae
push
in
stc
xchg
scas
stc
inc
cmpsb
mov
push
jp
pop
xor
push
cmpsb
mov
test
cmc
inc
inc
jno
xor
pop
pusha
lods
xchg
dec
mov
fmull
adc
dec
jbe
mov
cmp
add
or
mull
pop
decl
out
sub
pop
jecxz
fdivr
clc
cmovge
dec
push
adc
arpl
jo
lahf
jg
push
mov
jo
push
icebp
dec
push
shrl
mov
imul
test
aad
in
cmp
cmpsb
out
mov
jge
fdivrl
out
inc
int3
rcr
movsb
cwtl
cmp
fs
jns
clc
jg
mov
leave
cltd
shl
mov
jecxz
mov
pop
inc
and
xchg
mov
add
push
enter
inc
cld
shrl
out
mov
mov
push
xchg
loopne
jle
sbb
scas
mov
out
repz
mov
xchg
cmp
sahf
xlat
fimuls
jmp
or
jb
out
outsb
push
bound
or
ljmp
mov
or
xchg
pop
mov
in
ja
bnd
push
add
sub
jno
mov
in
fisttpl
mov
fcmovnb
pushl
jns
rcll
and
dec
and
jae
mov
imul
sarl
or
inc
mov
es
xor
imul
out
in
or
in
mov
sbb
sbb
mov
lock
mov
test
or
fistpll
pop
pop
pop
fwait
and
leave
add
fistps
add
pusha
dec
xchg
shlb
sti
test
ficoml
js
test
ret
add
pushf
jl
sbb
cmp
cmp
adc
inc
xor
xchg
add
in
mov
stc
insl
inc
mov
iret
xor
jne
pop
mov
rcl
sbb
xor
adc
and
daa
imull
sub
sbb
dec
repz
call
sub
xchg
lret
sub
aas
cmp
and
cltd
insb
js
push
or
xor
pop
pinsrw
insb
ficoml
shll
dec
dec
addr16
les
loop
mov
cs
jo
jle
mov
jno
cwtl
repnz
sub
stos
mov
mov
imul
std
sti
cmp
push
and
mov
sar
sub
mov
gs
inc
ss
cmp
bswap
pop
in
inc
xchg
scas
pop
xchg
mov
stos
and
pop
xor
sbbl
ja
clc
movsb
cli
xchg
jno
cli
mov
out
andb
pop
push
adc
xchg
xor
adc
push
lods
jge
cmp
lahf
push
ret
inc
sbb
ja
sbb
mov
icebp
in
pop
imul
add
add
test
inc
pop
cmp
stc
das
mov
dec
test
loopne
outsl
inc
leave
add
sub
adc
pop
lcall
cmpl
mov
add
xor
sbb
stos
ljmp
mov
add
nop
jbe
or
in
fbstp
mov
test
sub
push
push
cmp
les
pop
ds
out
push
inc
ljmp
xchg
push
rcrl
fstl
mov
mov
jae
xchg
aas
lahf
jmp
ret
xchg
movsl
fs
mov
in
mov
mov
jb
add
stos
loop
and
push
pop
adc
dec
cs
cmp
leavew
push
testb
jb
stos
dec
loop
stc
mov
mov
divb
mov
or
stos
jle
inc
lods
sti
in
paddb
shlb
sub
xor
cmpsl
mov
dec
or
lret
loop
mov
std
mov
int3
popa
test
cmp
mov
jle
pop
cmp
stc
aaa
mov
and
or
jno
dec
mov
mov
shrb
loopne
lret
xchg
sub
sub
fwait
cmp
orl
ljmp
decb
pop
arpl
sub
dec
lret
imul
leave
mov
cmpsl
xchg
sub
adc
roll
or
and
divb
jns
push
sbb
push
rcll
rorb
in
mov
repz
mov
shrl
jbe
mov
pop
mov
cltd
int3
cmc
inc
std
sbb
jmp
mov
jo
imul
and
leave
jp
xchg
aas
adc
mov
rclb
xchg
scas
push
bound
loope
inc
pop
mov
cmpsb
jge
or
jmp
fcomp
dec
mov
adc
das
cmp
aad
shll
sbb
mov
sbb
add
scas
dec
insb
pop
mov
pop
test
xchg
inc
mov
into
leave
leave
mov
sbb
and
popf
lcall
pop
cltd
or
ja
add
cmpsb
scas
adc
jecxz
icebp
cs
adc
or
xchg
arpl
pop
cmp
push
cmpsl
js
out
jo
pop
dec
rcll
jne
test
jo
scas
sarb
hlt
lret
dec
ret
mov
pop
lcall
and
icebp
pop
push
clc
mov
dec
dec
xor
pop
sub
loopne
lahf
jns
enter
ds
push
add
mov
in
popa
mov
cmpsb
cmovle
imul
dec
sub
sub
dec
mov
mov
loopne
pop
pop
out
adc
outsl
rolb
push
add
std
test
fistpll
fs
ret
sub
push
idivb
iret
ja
stos
ss
js
lahf
push
int
adc
dec
push
rorb
clc
lods
shlb
pop
inc
jno
pusha
outsl
cmpsb
mov
xor
sub
shll
push
sbb
je
push
xor
xor
lods
aas
icebp
adc
and
mov
dec
icebp
mov
xor
mov
push
pop
or
fs
xchg
ds
inc
stos
mov
clc
inc
js
stos
sub
cld
xchg
jbe
dec
test
lahf
scas
adc
cmp
add
stos
sbb
mov
cli
js
or
notb
loopne
sbb
out
mov
and
nop
mov
arpl
stos
repz
mov
scas
out
cmp
aad
gs
repz
jo
mov
dec
lahf
push
mov
lahf
push
or
mov
das
mov
test
jecxz
cltd
iret
jo
push
pop
push
mov
iret
hlt
jmp
je
pusha
test
sbb
push
and
mov
sub
jmp
mov
std
sahf
jecxz
jb
mov
andl
push
cs
mov
or
inc
pop
stc
shll
sub
push
jae
and
subl
faddl
cmp
sbb
cmp
and
dec
inc
sub
clts
out
stos
mov
cmp
sti
xchg
ja
mov
insl
mov
or
mov
pop
imul
inc
xor
js
xor
mov
dec
loopne
mov
xor
andb
sub
push
bound
mov
data16
fildl
addr16
out
in
jb
rorl
repz
aad
gs
add
cmp
pop
stos
call
sub
jae
jl
das
cmp
fnstsw
cmp
adc
sbb
lret
out
pop
add
aas
ljmp
pop
mov
or
mov
mov
dec
pop
cwtl
outsb
jbe
stos
push
xorb
popa
insl
sbb
jmp
icebp
mov
pop
jg
call
clc
mov
cmp
js
push
je
adc
add
and
jp
lcall
stos
push
push
cld
xchg
dec
push
stos
xchg
fists
xchg
mov
push
test
fcompl
jg
outsb
jge
xchg
jb
mov
dec
xchg
outsb
inc
and
push
push
out
xchg
cmpsb
xchg
test
sbb
and
push
imul
aas
mov
addb
ds
jle
scas
inc
addr16
ficoms
xchg
push
sub
adc
mov
push
xchg
jae
mov
test
daa
mov
movsl
mov
js
ret
jne
les
gs
xchg
add
sub
mov
sub
testl
dec
in
sarb
iret
and
shrb
sub
xor
pushf
sub
xchg
cld
leave
sub
sub
mov
pop
jge
in
add
lret
mov
xchg
and
lret
mov
incl
cmp
inc
nop
inc
bound
mov
popa
cmp
clc
mov
mov
dec
sbb
mov
mov
stos
jne
push
cmp
stos
dec
xchg
clc
mov
jle
enter
xlat
push
das
add
or
mov
fistpll
adc
cs
sarl
scas
ret
stc
jp
sub
test
adc
rol
jge
adc
lahf
out
jp
js
mov
inc
jg
cmovnp
test
cli
sbb
cmp
jne
mov
xor
daa
hlt
jle
or
push
inc
mov
insb
icebp
das
cld
leave
dec
mov
sub
add
daa
mov
lock
repnz
repnz
xlat
pop
test
ret
jmp
mov
pop
pop
stos
les
xchg
pop
mov
fwait
dec
imul
jmp
aaa
fistpl
pop
xor
xchg
dec
pop
jbe
or
push
in
ljmp
scas
in
lahf
pop
sub
outsl
and
jecxz
lcall
ljmp
sbb
and
mov
mov
lds
call
or
sbb
or
mov
in
mov
out
or
ret
pop
js
and
stos
sub
and
mov
out
push
sub
cmp
lcall
sti
push
ret
int3
mov
out
lods
push
and
rcl
repz
iret
ljmp
nop
cltd
xchg
add
or
cwtl
inc
out
cwtl
in
fs
xor
inc
lcall
stos
mov
inc
and
mov
dec
cmpsb
fnstsw
add
and
shlb
ds
insb
inc
pop
outsb
roll
mov
push
adc
ss
insl
push
fisubrs
ss
addr16
es
push
pop
pop
add
jne
lds
sbb
test
mov
cld
fists
push
mov
fidivs
ja
lret
popf
xchg
pusha
out
inc
adc
jg
cmc
dec
xor
xor
cmpsl
jae
fldenv
cmp
and
in
aam
and
push
ja
rclb
fisttps
loopne
mov
push
ss
xchg
and
add
gs
test
incb
dec
mov
stos
jp
movsb
in
pusha
jne
jo
or
popa
push
iret
in
cmp
fs
cmpsb
xor
push
incl
in
cmp
ljmp
jne
and
push
inc
jp
xchg
lret
cmp
or
sub
movsl
cmp
and
inc
fistpll
adc
add
inc
push
jge
pop
je
push
and
adc
fstl
mov
cwtl
xchg
repz
xor
jne
insb
in
nop
cmp
outsb
mov
mov
or
jne
push
push
xlat
inc
cmp
sub
loope
lock
fwait
xchg
popf
jge
bound
sub
lock
add
and
daa
xchg
orb
push
xor
stos
adc
icebp
dec
out
lret
xorl
fcmovu
loope
test
adc
test
sub
push
add
les
arpl
jb
std
loopne
adc
adc
mov
outsl
sub
mov
mov
insb
jns
arpl
movsb
aaa
jns
sub
lahf
das
sub
and
popf
js
mov
jl
fnsave
fs
movsb
arpl
in
and
nop
adc
mov
xor
daa
add
xlat
bound
stos
jle
mov
add
dec
int
push
lret
xchg
outsb
mov
mov
int
sbb
or
push
fmuls
sub
xchg
in
jae
lock
sbb
mov
mov
int
ret
ja
pop
ret
mov
fwait
xchg
sub
dec
dec
xchg
inc
and
xor
adc
or
aas
sbb
les
push
testl
inc
xor
clc
adc
mov
stos
push
or
cmp
fsubr
cmp
pop
clc
scas
leave
push
imul
aam
mov
arpl
das
dec
sbb
pop
aaa
popf
pop
pusha
sub
es
push
pop
xchg
jbe
cmp
icebp
pop
xor
and
pop
xor
jb
lock
push
add
stos
pushf
lods
adc
lock
adc
push
ljmp
mov
movsb
pop
inc
pop
lahf
fstl
or
clc
inc
cwtl
mov
ret
loope
push
ret
sbb
scas
pop
pop
arpl
pop
outsl
fs
push
pop
test
push
aam
cs
mov
and
cs
into
daa
cli
or
pop
sbb
mov
das
addr16
and
orl
imul
lock
insb
jle
mov
inc
dec
mov
repz
dec
es
and
xor
clc
inc
test
pop
aaa
sub
bound
mov
insb
add
es
out
xor
cmpsl
mov
loope
leave
fs
out
test
imul
or
pop
into
in
push
cltd
add
ds
shll
sbb
push
cmp
je
cmp
pop
xor
dec
test
add
adc
and
cwtl
xor
inc
gs
sbb
sub
adc
shl
xor
sbb
jnp
ljmp
or
out
sub
loope
sub
and
push
cmpsb
and
aam
xlat
lods
pop
movsb
mov
inc
jbe
pop
mov
xor
adc
or
je
fcmovu
adc
pop
jg
shrb
lcall
jge
js
dec
dec
sbb
xor
xchg
enter
stos
orl
or
xchg
cli
enter
js
jae
cld
inc
stc
cmp
push
add
sbbl
jo
rolb
inc
fstpt
int3
push
pop
negb
mov
mov
out
cld
xor
add
mov
pop
outsb
or
cltd
cmp
dec
rcrl
nop
jns
xor
push
and
xchg
addr16
jle
je
jbe
pop
lcall
inc
in
and
adc
ffree
sub
cld
mov
and
movsb
dec
sub
jmp
lea
jb
rorl
fsubrl
lcall
or
or
adc
repz
add
rcrb
inc
sub
inc
shl
and
out
jne
mov
and
push
sub
adc
cmp
loop
xor
fidivrs
dec
scas
insl
and
movsb
mov
rorb
adc
push
and
fcmovu
fimull
jo
cmp
je
idiv
jne
insl
popa
loop
pop
add
add
push
pop
sbb
cmpsb
stc
pushl
mov
mov
lea
cmc
fcompl
xchg
cmp
inc
jns
jecxz
int
sbb
dec
mov
mov
or
rcll
notb
sub
out
aad
inc
dec
ds
or
pusha
dec
xor
dec
dec
push
inc
aam
xor
sbb
jmp
jo
xchg
test
imul
mov
pop
andb
gs
pusha
mov
xchg
daa
xchg
pop
aad
add
stos
imul
repz
inc
jae
dec
in
jmp
insb
gs
negl
cwtl
xor
mov
fstpl
fs
adc
sub
insl
mov
add
mov
or
or
adc
enter
fistps
mov
in
jns
imul
pushf
insb
jns
push
aam
or
pushf
dec
or
adc
outsl
inc
lock
pop
mov
and
xchg
insl
cmp
sub
outsb
clc
fsts
jl
pop
loop
jns
sub
mov
mov
subl
clc
mov
inc
and
aaa
out
in
or
xchg
sub
pop
mov
push
test
jp
sbb
inc
push
add
mov
sub
out
mov
punpcklwd
mov
loopne
push
ds
mov
push
shr
cmp
xor
fwait
mov
or
xchg
lret
sbb
cmp
cmc
pop
dec
and
loope
cmp
xchg
push
mov
cli
mov
adc
cs
lock
or
push
mov
iret
push
push
mov
stos
arpl
adc
hlt
pop
roll
sbb
push
adc
add
dec
cmc
xchg
xor
mov
push
mov
ret
mov
pop
mov
outsl
andl
or
addr16
add
insl
and
insl
mov
ds
pop
pop
mov
enter
popf
popa
cltd
and
sbb
loop
loop
popa
pop
clc
and
jnp
mov
pop
xor
add
xchg
xchg
fs
or
xchg
movsl
insl
xor
add
xchg
sbb
shl
adc
add
lret
dec
fdivr
add
add
mov
loop
add
cli
adc
push
sub
and
jg
pop
adc
outsl
cwtl
imulb
dec
outsl
or
or
imul
popf
mov
xlat
fidivs
mov
dec
push
xor
mov
and
pusha
pusha
cld
cld
das
popa
or
das
sti
loopne
stos
lds
aad
fsubrs
in
pop
jmp
sarb
push
or
sti
imul
inc
pop
in
xchg
xchg
push
cmp
mov
cmp
mov
xorl
scas
data16
outsl
je
mov
addb
adc
ficoml
fbld
mov
lods
sbb
arpl
addr16
jae
daa
jno
xlat
js
xor
lods
inc
adc
mov
pushf
fwait
cs
pop
ret
test
cltd
stos
inc
stc
xorb
in
cmpsl
and
push
test
fimull
imul
mov
push
fwait
pop
loope
pop
fcompl
adc
mov
shll
fwait
xchg
std
dec
jbe
push
ds
pop
leave
popa
das
sbb
lahf
cs
imul
dec
and
pop
movsb
cmpsl
add
xchg
mov
adc
movsl
nop
outsb
lret
bound
push
std
in
xlat
and
jnp
sbb
sbb
in
imul
mov
sub
outsl
cmp
sbb
mov
push
or
add
imul
into
fucomip
mov
mov
fcmovb
les
add
push
and
pop
call
or
cmpsl
add
mov
sarb
rolb
cmp
popa
and
and
sub
cmp
dec
adc
add
in
scas
cmp
test
add
popa
cmp
adc
inc
sub
fnstenv
das
dec
mov
hlt
jno
and
fldl
or
cmpsl
outsb
dec
mov
into
cmp
cmp
jle
in
mov
aas
cmp
push
dec
mov
push
jge
add
arpl
scas
jbe
out
in
fidivrs
push
lcall
sbb
lret
cld
lods
dec
daa
out
cmpsb
lcall
and
icebp
aad
jecxz
in
hlt
dec
xor
xchg
jl
in
xor
out
lods
inc
inc
addr16
pop
fstpl
arpl
xchg
test
or
jno
sub
movsl
aaa
mov
push
push
cmpsb
lret
sahf
dec
jno
in
push
mov
std
mov
iret
jns
dec
pushl
lea
test
psrld
nop
jle
aas
popf
pushf
push
mov
cs
xor
lds
adc
or
lods
adc
and
vsubss
inc
sub
dec
outsb
mov
xor
jl
adc
scas
xor
mov
mov
fs
loope
jnp
xlat
xchg
out
mov
repz
sub
pop
inc
push
mov
or
pusha
aam
ds
push
sti
les
outsl
sub
cmp
ret
sbb
inc
aas
mov
or
mov
fldt
sbb
xor
adc
out
cmp
out
xchg
push
test
jg
mov
loope
mov
xchg
mov
cmp
orb
xchg
mov
adc
rcl
repnz
add
testb
lcall
clc
pop
jle
mov
pop
inc
scas
pop
bound
pop
ljmp
xchg
jae
xor
cmp
fimull
pop
repz
or
xor
repz
pop
hlt
and
jmpw
cs
sbb
aad
lahf
mov
addl
cltd
shl
insb
xlat
xorl
add
dec
lahf
inc
and
mov
loop
pop
insb
out
in
mov
jge
je,pn
ja
in
jmp
sub
divl
and
in
adc
mov
repnz
dec
inc
or
inc
je
pop
mov
cmovl
jmp
push
lret
ror
lea
cmp
add
daa
neg
xlat
sbb
add
xchg
dec
rcrb
cmp
xor
mov
test
pop
sbb
xor
mov
leave
push
ljmp
pop
jmp
repz
or
jge
stos
arpl
xchg
aaa
lods
rorl
inc
cmp
mov
incl
cmp
push
or
lret
push
std
xchg
push
mov
imul
test
sbb
rcr
iret
jb
adc
pop
sbb
jae
cmpw
push
fdivl
ret
lods
push
out
popf
lods
sub
push
pop
int3
xchg
add
mov
add
xor
out
lret
and
arpl
or
cmpsl
mov
dec
mov
inc
cmp
add
repz
cmp
mov
jp
ss
clc
xor
fwait
push
pop
cld
out
aaa
jmp
push
mov
nop
push
xor
daa
push
aas
xorl
stc
push
mov
inc
lahf
out
out
call
push
add
cmp
enter
cmp
inc
inc
lcall
dec
into
mov
addr16
inc
push
scas
dec
sahf
mov
out
lock
lret
notl
ds
adc
js
jmp
jmp
add
dec
ja
inc
loope
out
mov
inc
xchg
jb
cmpb
mov
cltd
jge
je
mov
es
insl
inc
leave
xor
clc
iret
sbb
sub
pop
sub
out
stos
test
cmc
ja
add
ficoms
push
pop
aad
aam
xor
pushf
push
mov
data16
shll
cltd
int
add
fildll
jbe
fs
ljmp
inc
xor
or
and
pop
adc
je
push
xlat
daa
pop
xor
ja
push
xchg
jp
mov
or
xchg
fwait
mov
mov
pop
lcall
inc
sbb
subl
gs
out
mov
xor
sub
cmp
or
mov
cmp
mov
mov
cmp
mov
add
xor
xchg
push
mov
dec
adc
ret
enter
dec
dec
test
push
push
test
cmpsl
mov
cmp
rcr
xchg
xchg
or
mov
inc
xchg
cwtl
leave
icebp
mov
sub
scas
test
adc
add
mov
std
orl
mov
mov
inc
xchg
fsubr
daa
push
mov
mov
and
add
ljmp
and
dec
xchg
jbe
movsb
sti
pop
lods
jle
and
inc
jmp
xor
daa
fsubl
es
repnz
aad
ljmp
outsl
ss
gs
mov
ret
xchg
or
mov
loopne
dec
int
in
adc
xchg
push
fisttpl
cwtl
add
or
in
les
mov
dec
mulb
in
mov
lods
jno
outsb
sbb
push
jae
cmp
shrl
jmp
fs
sbb
dec
mov
mov
mov
daa
loope
insb
xchg
mov
cmp
add
rclb
inc
roll
sbb
call
mov
imul
cld
sbb
test
popf
pop
ja
mov
das
dec
bnd
add
shlb
adc
mov
mov
and
cwtl
sub
daa
mov
mov
out
pop
in
hlt
int
stos
pop
insb
sub
mov
shlb
and
stos
and
imul
stos
or
pop
pop
lods
or
stc
inc
call
lahf
pushf
xchg
ljmp
lret
idiv
aam
add
mov
les
subb
jbe
pusha
cli
sbb
int
test
jmp
xchg
add
xor
roll
popa
cmp
dec
inc
movsl
xor
jmp
mov
rcr
mov
and
sbb
push
sbb
call
push
daa
daa
aas
inc
std
pop
add
out
shrl
stc
les
cwtl
rcrb
inc
loopne
aam
je
or
and
adc
or
addr16
inc
sbb
fwait
pop
and
dec
cmp
loop
in
movsb
or
dec
gs
sub
xlat
adc
pop
stos
out
sbb
sbb
pop
gs
mov
lahf
fdivs
adcl
int
push
filds
jns
fiaddl
and
xor
jo
mov
aaa
ja
mov
leave
andl
xorl
gs
decl
add
lods
ja
cmpsb
dec
xor
xlat
xchg
mov
cmp
pushf
je
arpl
cmp
rcll
out
stos
sbb
call
repz
imul
xor
std
xlat
das
mov
movq
sbb
cli
push
das
in
inc
addb
cld
jne
sub
loopne
push
mov
loope
or
or
shlb
mov
jns
cmc
pop
push
mov
lcall
mov
hlt
pop
add
movsl
xchg
cli
inc
mov
inc
mov
sti
lea
imul
push
loop
shll
add
ja
cmp
ja
lret
mov
loope
lcall
inc
fwait
fs
xchg
mov
ds
mov
jp
lahf
and
mov
insl
mov
stc
nop
sbb
into
movsb
xor
adc
and
and
jne
xchg
leave
bound
mov
jnp
lahf
into
loop
pop
and
jp
dec
sar
dec
addr16
push
call
sub
push
xchg
nop
jb
push
jmp
xor
push
jbe
sbbl
loope
aam
mov
pop
jmp
inc
add
sbb
stos
sar
pop
out
xor
out
cwtl
jnp
daa
les
push
dec
icebp
add
push
or
sbb
and
loope
mov
pop
fisubs
cmp
xor
cmc
mov
rcrb
mov
push
add
sub
lcall
xchg
inc
mov
cmp
mov
pop
dec
push
jns
imul
adc
lahf
fdivrl
jmp
cwtl
aad
jmp
andb
pusha
jl
out
sub
add
les
std
out
loopne
mov
aas
xchg
and
repz
shll
push
jg
adc
add
jl
xor
mov
pop
jne
mov
lea
std
mov
lret
mov
cmp
ret
ficompl
fcmovne
scas
cmp
ret
mov
adc
xchg
add
mov
mov
divb
out
pusha
rcll
aad
or
push
mov
nop
fdivrl
in
sbb
jecxz
cmp
scas
xchg
sub
push
dec
inc
cld
mov
jmp
pop
pop
adc
or
pop
cld
daa
cmp
dec
notl
out
aaa
push
test
bound
inc
pop
rolb
inc
cs
cmc
addr16
adc
pop
add
cmp
pop
ss
mov
ds
fadds
xchg
push
add
add
lock
popa
pop
dec
jp
and
cmc
das
dec
addr16
push
das
push
sarb
inc
mov
enter
add
dec
std
stos
movsl
loopne
xchg
incb
sbb
sti
jno
xchg
or
adc
lods
push
adc
clc
add
std
dec
pop
mov
xor
xchg
jl
cmpsb
lods
adc
aas
pop
mov
add
test
mov
sbb
jno
adc
pop
adc
rorb
pop
cli
push
and
inc
push
outsl
mov
jl
inc
sub
fidivrl
cmc
addr16
sti
cmp
pop
stc
push
scas
fs
cmp
mov
movsb
xchg
in
push
xchg
jmp
sti
sub
xchg
rolb
fldenv
loope
jbe
negb
je
mov
mov
iret
loope
mov
dec
lahf
mov
test
adc
or
ret
in
ficoml
lret
add
inc
testb
cmp
movsb
insb
xchg
adc
xchg
enter
cmp
add
xor
sub
call
loopne
insb
push
scas
jae
shlb
sub
jae
test
mov
push
push
lods
lock
push
add
xor
mov
jmp
movsl
sbb
nop
and
jbe
mov
decl
mov
inc
scas
xlat
test
or
out
mov
xor
mov
jb
inc
and
mov
jmp
out
aaa
lods
popf
mov
adc
mov
add
lods
inc
enter
cmp
add
mov
sub
in
es
divb
adc
pop
pop
loop
fs
adcl
jo
jmp
pop
dec
xchg
leave
xor
