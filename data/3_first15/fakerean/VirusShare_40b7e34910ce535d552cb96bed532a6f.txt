mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
cmp
jne
lea
cmp
jb
lea
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
fdivl
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
mov
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
fldl
faddl
fcomp
fnstsw
test
je
fstp
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
add
push
pushl
call
mov
pop
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
mov
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
cmpl
je
lea
call
xor
pop
pop
pop
pop
add
ret
lea
push
mov
mov
call
testb
jne
mov
mov
mov
mov
mov
push
push
push
mov
push
push
push
push
push
call
pop
pop
pop
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
push
push
mov
push
push
lea
movl
call
add
cmpl
je
test
jl
mov
mov
lea
push
mov
push
mov
mov
mov
add
push
push
call
test
js
cmp
jae
push
push
push
push
push
push
push
push
call
mov
mov
mov
add
mov
pop
pop
pop
xor
ret
int3
push
mov
and
sub
test
push
push
je
movl
test
je
sar
test
je
movl
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
lea
push
push
push
call
add
test
je
mov
mov
lea
push
mov
push
push
push
call
add
test
je
fldl
lea
push
sub
fstpl
call
add
test
jne
mov
push
call
add
pop
or
pop
mov
pop
ret
pushl
andl
mov
mov
call
mov
ret
mov
mov
mov
mov
cmp
push
jne
call
ret
int3
sub
mov
xor
mov
push
mov
push
push
push
mov
call
mov
cmp
je
cmp
je
cmp
je
movzbl
cmp
jle
mov
mov
mov
push
push
mov
call
test
jne
mov
orl
mov
cmpl
jne
cmpb
jne
mov
orl
mov
cmpl
jne
testw
je
mov
call
test
je
cmpb
jne
mov
orl
mov
movzbl
cmp
jne
mov
mov
mov
push
push
mov
call
test
je
mov
test
je
cmp
je
mov
mov
lea
push
call
test
je
mov
test
lea
mov
movl
movl
movl
mov
movw
lea
je
push
push
call
cmpl
je
mov
test
jne
test
jne
mov
test
jne
mov
mov
pop
pop
pop
xor
call
add
ret
cmpl
je
jmp
sub
cmp
ja
movzbl
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
mov
mov
mov
push
push
call
test
je
jmp
testb
jne
cmpb
je
mov
mov
lea
lea
push
push
movl
call
cmpl
je
mov
orl
mov
jmp
mov
orl
mov
jmp
testw
je
jmp
mov
orl
mov
jmp
add
adc
ja
adc
add
add
add
add
add
int3
int3
int3
int3
int3
mov
mov
push
push
push
mov
test
push
jg
mov
pop
pop
pop
movl
xor
pop
ret
mov
mov
xor
lea
mov
cmp
je
add
add
cmp
jl
mov
pop
pop
pop
movl
xor
pop
ret
mov
push
mov
call
add
test
je
mov
jmp
mov
lea
call
test
je
mov
mov
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
lea
push
mov
push
mov
push
push
movl
call
mov
test
jge
push
mov
push
call
test
je
movl
orl
pop
xor
pop
pop
ret
mov
mov
shl
sub
lea
mov
push
push
call
xor
pop
pop
ret
mov
mov
cmpl
je
push
pushl
call
ret
xor
jmp
int3
int3
push
push
mov
mov
mov
mov
mov
call
test
jbe
push
push
push
mov
mov
xor
mov
mov
push
mov
call
mov
mov
mov
cmp
je
mov
mov
push
push
push
push
mov
call
add
cmp
jb
pop
pop
pop
pop
pop
ret
mov
cmp
jne
mov
mov
test
jne
push
push
call
test
je
mov
mov
push
call
mov
jmp
mov
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
xor
cmp
jne
push
call
cmp
pop
je
movl
mov
mov
mov
push
call
push
lea
mov
call
mov
lea
push
push
push
call
mov
push
call
pushl
movb
pushl
pushl
push
call
test
mov
js
mov
call
mov
push
push
mov
pushl
mov
push
call
sub
je
dec
je
mov
call
mov
pop
pop
pop
pop
ret
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
push
mov
mov
mov
mov
push
mov
xor
cmpb
mov
mov
jne
cmpb
je
call
test
jne
mov
mov
mov
push
push
mov
call
cmp
je
mov
call
mov
movl
mov
mov
mov
push
push
push
push
push
push
mov
call
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
add
cmp
jne
mov
mov
lea
push
push
add
push
push
mov
mov
mov
call
mov
test
js
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
push
mov
push
mov
push
push
push
mov
call
mov
lea
mov
push
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
jne
lea
test
je
mov
test
mov
movl
movl
mov
mov
je
mov
mov
push
call
mov
test
mov
push
mov
push
mov
mov
je
mov
mov
push
call
mov
test
mov
jne
mov
lea
call
lea
call
mov
test
pop
pop
je
mov
mov
push
call
xor
add
ret
mov
jmp
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
cmp
push
push
lea
push
mov
mov
jb
mov
xor
cmp
je
mov
mov
lea
push
push
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
test
je
cmpl
jb
mov
mov
mov
add
push
push
push
xor
lea
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
mov
call
test
js
mov
push
push
xor
lea
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
mov
push
mov
push
mov
push
push
push
push
call
test
je
lea
push
push
push
call
add
test
je
test
mov
je
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
mov
sub
cmp
push
mov
push
je
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
add
ret
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
add
ret
cmpl
je
xor
ret
cmpl
je
push
push
mov
push
lea
mov
call
test
je
push
lea
push
mov
call
push
lea
call
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jbe
push
mov
xor
cmp
je
movzwl
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jae
cmp
jae
cmp
jae
cmp
jae
add
cmp
jb
pop
pop
ret
mov
movzbw
movzwl
jmp
cmp
ja
jmp
movb
jmp
mov
test
je
mov
test
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
push
push
push
mov
push
mov
test
mov
je
mov
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
or
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
push
push
push
call
xor
add
cmp
jne
cmp
jne
xor
lea
mov
push
call
add
cmp
jne
jmp
cmp
jne
mov
mov
mov
cmp
jge
mov
call
mov
mov
mov
mov
cmp
je
lea
cmpl
je
mov
mov
push
call
add
cmp
jne
cmp
jne
xor
mov
push
call
add
cmp
jne
mov
lea
mov
mov
cmp
jl
cmp
je
mov
cmp
je
add
mov
cmp
mov
je
addl
cmp
jne
mov
mov
call
push
call
add
jmp
mov
sub
je
sub
jne
cmp
jne
mov
mov
call
mov
cmp
jne
lea
call
movl
mov
call
pop
pop
pop
pop
pop
ret
cmp
je
mov
mov
cmp
lea
jne
mov
push
push
call
pop
pop
pop
pop
pop
ret
mov
push
call
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
call
test
movl
mov
je
addl
mov
mov
mov
mov
mov
movl
mov
xor
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
lea
push
lea
mov
call
mov
movl
mov
push
call
add
jmp
mov
mov
mov
mov
jmp
mov
push
call
jmp
push
mov
lea
push
call
mov
pop
mov
mov
cmp
pop
push
jne
call
ret
push
mov
sub
push
push
push
mov
mov
call
test
mov
je
mov
mov
push
xor
call
cmp
je
mov
mov
call
push
mov
lea
mov
call
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
push
lea
lea
mov
mov
mov
call
mov
cmp
je
call
cmp
jne
cmp
jne
mov
mov
push
push
pushl
call
lea
call
lea
call
lea
call
lea
call
cmp
jne
lea
call
pop
pop
pop
leave
ret
pushl
call
test
pop
jne
jmp
push
mov
sub
andl
push
push
push
call
test
je
mov
xor
lea
inc
mov
push
mov
mov
mov
call
test
pop
mov
jne
mov
lea
push
movl
mov
mov
mov
call
test
pop
jne
mov
testb
je
pushl
andl
pushl
call
pop
pop
test
je
push
push
call
pop
pop
cmpb
jne
mov
lea
mov
push
mov
mov
mov
call
push
push
mov
call
add
cmpl
jne
mov
andl
lea
push
movl
mov
call
lea
push
lea
push
lea
mov
push
movl
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
push
call
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
mov
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
test
je
mov
add
lea
push
push
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
mov
call
cmpb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
subl
jne
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
add
rol
add
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
push
push
call
mov
jae
add
add
add
mov
lods
add
imulb
je
add
in
add
add
bound
add
xlat
add
mov
mov
push
add
add
insb
add
pop
add
add
lret
add
in
add
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
lahf
mull
jae
cmp
loopne
add
jo
mov
jmp
cli
cmpsb
fildl
add
lock
rorl
add
add
lcall
inc
in
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
loop
add
lcall
add
add
add
mov
std
mov
add
add
pop
jb
xchg
mov
jnp
add
add
testl
cmpsb
add
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
mull
add
mov
add
push
out
add
mov
addl
mov
out
add
jecxz
push
lods
add
add
icebp
lahf
pushf
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
int
int
xchg
add
outsl
mov
mov
add
lahf
xchg
add
out
mov
mov
addb
cltd
mov
add
add
mov
lcall
sub
pop
push
push
push
push
push
push
call
imul
movl
test
pop
mov
add
mov
cmc
arpl
xchg
add
xchg
pop
add
test
xchg
nop
cmc
add
add
add
add
add
ffreep
add
add
pop
mov
add
loop
rorl
lcall
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
xlat
push
mov
add
icebp
sahf
add
fidivs
lahf
stos
xchg
lcall
fwait
add
in
pop
xchg
fildl
add
cmc
mov
mov
test
add
fmuls
in
fdivr
lcall
rcrl
add
push
push
call
mov
mov
je
add
mov
add
out
in
aad
jnp
add
lret
add
fildll
in
lock
jmp
ret
push
push
push
push
push
push
push
push
call
add
sahf
lock
mov
push
jp
add
mov
arpl
pop
fildll
cmpsb
add
les
xchg
add
in
loopne
lcall
inc
hlt
push
push
lea
push
push
push
push
push
push
push
call
add
scas
movb
cld
fldl
add
cmpsl
js
clc
ljmp
add
fisubs
call
add
in
mov
add
out
pop
out
out
sub
lcall
pop
hlt
push
push
lea
push
lea
push
push
call
xlat
xchg
xchg
addb
lea
add
loope
add
cmpsl
mov
mov
add
push
jb
test
add
add
add
mov
mov
arpl
in
add
mov
add
ljmp
add
imul
js
in
in
pop
add
push
push
push
push
push
call
cld
add
add
add
jno
out
rolb
add
pushf
add
add
add
iret
add
popf
xchg
add
movsb
pop
fwait
loop
shll
add
cld
jns
mov
jge
loop
fnstcw
test
add
je
pusha
add
sub
pop
add
push
lea
push
push
call
mov
iret
fadds
add
add
add
mov
adcb
mov
sarl
rolb
loop
add
imul
jle
pop
add
add
add
into
cwtl
mov
mul
rolb
add
movsb
fadds
sub
pop
add
mov
push
push
push
push
push
lea
push
call
add
jp
ffreep
add
mov
mov
add
nop
add
add
fsubr
cwtl
loop
mov
add
add
addb
sub
pop
xor
push
push
push
push
push
call
icebp
fists
mov
fincstp
add
movl
add
add
add
test
sub
mov
add
mov
add
in
pop
add
push
push
shl
push
push
pop
add
not
sub
inc
sub
sub
sub
rol
ror
pop
add
dec
xor
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
jle
add
les
lods
add
mov
mov
mov
stos
add
add
fnsave
add
add
pusha
mov
add
add
aad
jne
sahf
jb
add
add
pop
cwtl
add
test
add
add
je
icebp
xchg
add
sub
pop
pushl
call
push
push
push
push
push
call
add
xchg
add
xlat
push
shr
add
xchg
movb
add
mov
outsl
mov
rcrb
arpl
add
xchg
add
arpl
lret
fists
in
in
pop
mov
push
lea
push
lea
push
call
bound
add
jns
out
mov
jle
jns
rcr
mov
add
clc
pop
add
add
jb
nop
add
add
add
add
push
int
add
faddl
add
out
mov
incb
add
jns
add
flds
mov
int3
mov
std
in
add
lcall
inc
call
push
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
icebp
imul
xchg
in
addr16
testb
sti
hlt
add
add
pop
jbe
pop
ljmp
lds
fxch
sub
pop
lea
push
push
push
push
lea
push
lea
push
push
push
call
leave
outsl
in
add
mov
add
add
outsl
mov
lock
add
xchg
add
clc
cli
add
mov
push
addb
arpl
mov
pushf
push
mov
add
andl
popa
ja
jnp
push
mov
sub
mull
test
in
loopne
lcall
pushl
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
in
sar
fisubrl
sti
add
jmp
test
pushf
add
fcomps
add
push
filds
add
add
cwtl
add
lock
push
insb
add
add
stos
add
add
push
add
jne
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
cmpsb
add
add
out
push
add
lods
add
add
xlat
mov
add
lcall
jp
add
push
push
push
push
lea
push
push
push
call
add
in
clc
add
push
add
add
rolb
int3
popf
arpl
test
jle
fisubrl
arpl
mov
repnz
ja
push
jmp
in
in
pushl
pushl
push
push
lea
push
push
push
call
jge
pop
jno
pushf
scas
into
stc
mov
int
test
push
jb
mov
xchg
add
adcb
mov
jle
add
testl
jbe
add
add
in
in
lcall
imul
aam
stos
push
add
push
or
not
add
add
rol
sub
shl
shl
pop
add
pop
push
lea
push
push
push
push
push
push
call
rolb
stc
in
mov
add
add
pop
add
lea
mov
add
add
aad
incb
call
rclb
add
xchg
sub
pop
pushl
call
push
push
push
call
lcall
mov
add
imul
add
add
sti
std
lods
add
in
test
add
movsl
add
add
mov
in
hlt
lcall
inc
push
push
xor
add
push
and
add
not
sub
lea
dec
pop
add
inc
pop
push
push
lea
push
call
roll
add
mov
xchg
cmc
add
fcoms
xchg
lods
pop
add
rolb
movsl
xchg
add
in
add
add
filds
add
xlat
add
mov
add
movsb
add
loopw
in
hlt
lcall
push
push
push
push
push
push
push
call
add
add
mov
imul
add
mov
add
cli
add
push
add
flds
push
icebp
jno
in
jmp
call
mov
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
xchg
mov
add
add
add
rolb
shrb
mov
add
jbe
add
cwtl
add
push
add
in
push
add
add
fiaddl
add
dec
add
add
rolb
jnp
add
add
add
sarl
out
in
in
add
add
fiaddl
mov
test
in
fdivr
lcall
push
push
push
push
push
push
lea
push
push
call
lock
mov
popa
cwtl
mov
xchg
sbbb
je
mov
add
push
add
popf
outsl
jno
pop
add
add
add
add
add
mov
add
add
faddl
add
add
icebp
jno
mov
loope
add
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
lret
mov
add
add
add
add
add
lahf
add
insb
add
mov
cld
pop
mov
add
add
scas
mov
int3
test
add
jo
add
mov
fcompl
pop
in
push
push
lea
push
lea
push
push
push
call
cmpsb
cmpsl
pop
mov
add
std
test
incb
stos
xchg
add
add
add
xchg
leave
leave
icebp
imul
add
in
add
sub
pop
add
push
push
push
push
push
push
push
push
call
jae
add
add
add
add
sbb
add
add
add
add
in
fldt
add
ja
cltd
repnz
loopne
add
push
lea
push
call
pop
imul
test
fiadds
in
movsl
add
bnd
aam
test
xchg
mov
out
add
loope
int
scas
add
sub
pop
mov
push
push
push
push
call
add
mov
jmp
movsl
fwait
add
jecxz
add
add
push
cmpsl
add
cld
fdivl
add
loop
in
hlt
pop
xor
push
push
push
push
push
push
push
push
lea
push
push
call
andb
mov
jecxz
add
add
movl
jae
popf
lds
loope
mov
add
cwtl
add
add
loopne
add
add
ror
add
cmc
mov
pop
add
std
add
add
jp
in
jp
cltd
faddl
add
lcall
les
push
lea
push
lea
push
push
push
push
call
add
out
pusha
out
add
mov
add
out
jo
add
add
arpl
jae
repnz
mov
lock
add
js
xchg
out
add
add
add
cwtl
sub
pop
add
push
push
push
lea
push
push
push
call
add
fadds
fsubr
add
mov
cmpsb
push
add
jge
jecxz
mov
push
clc
nop
add
in
mov
add
add
add
cwtl
int
add
cmpsb
add
in
mov
std
add
mov
add
pop
add
add
add
add
in
lcall
inc
or
adc
add
sbbb
shr
dec
add
add
push
add
mov
pop
add
pop
add
lea
xchg
add
add
add
mov
add
add
add
bound
sub
add
les
pop
testb
pop
add
add
lock
push
push
push
push
call
add
add
arpl
mov
add
add
cmpsb
mov
add
lahf
xchg
jecxz
lods
js
in
add
test
out
mov
add
add
mov
add
add
add
add
jo
test
lret
add
sub
pop
pop
push
push
call
fdivr
add
lods
add
add
add
add
enter
mov
add
ljmp
add
fdivs
add
add
popf
stc
add
mov
add
test
mov
mov
xlat
leave
add
jns
add
add
lcall
dec
add
icebp
xor
adc
dec
jecxz
push
lea
push
lea
push
push
push
push
push
push
call
add
pop
add
add
mov
xchg
popa
mov
add
mov
add
pop
add
xlat
mov
push
mov
in
push
ja
int3
lds
xchg
jmp
test
add
enter
add
add
lds
stc
repnz
add
sub
pop
push
mov
xor
push
push
push
push
push
push
push
call
xchg
add
add
add
in
jmp
les
add
nop
add
push
mov
imul
js
add
scas
fsubrl
add
addl
fiadds
add
add
jge
js
hlt
add
push
add
lods
mov
add
addr16
imul
add
in
in
sub
push
push
push
lea
push
push
lea
push
push
call
mov
xchg
add
xchg
lcall
test
add
jp
repnz
into
clc
xchg
rcrl
lock
pop
pop
push
push
push
push
call
in
orl
popf
add
jb
add
add
mov
add
pop
bound
add
add
add
cltd
mov
add
lock
add
mov
sub
pop
rep
push
push
push
push
push
lea
push
lea
push
lea
push
call
rolb
jl
jno
in
add
mov
jbe
in
clc
mov
mov
add
roll
add
cli
jp
add
loopne
add
add
jae
add
add
pop
mov
jae
push
pushf
add
add
subb
add
add
pushf
add
lcall
push
push
lea
push
push
call
push
pusha
add
pop
add
fwait
loop
lds
add
add
insb
add
xchg
movsl
scas
add
add
imul
pop
sahf
je
add
js
je
mov
add
add
aad
add
add
add
add
add
xchg
add
pop
hlt
push
lea
push
push
push
push
lea
push
lea
push
call
xchg
pop
enter
add
jo
testb
lcall
sarl
add
add
add
add
add
add
push
jbe
clc
jb
add
add
add
mov
jb
xchg
add
stos
lret
jo
popf
add
add
add
add
add
add
push
add
add
add
in
in
lcall
pop
in
push
push
lea
push
lea
push
push
lea
push
lea
push
call
bound
loop
int3
jns
mov
pop
in
xlat
rcll
mov
add
add
iret
movsl
mov
lods
data16
sarb
lret
add
push
add
cmpsl
add
int3
or
fwait
xchg
je
add
pop
add
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
add
xchg
add
movsl
push
add
cli
mov
push
mov
add
jge
ret
les
lock
jl
jmp
mov
add
sub
pop
add
push
push
lea
push
call
rolb
add
int
cmpsb
pop
add
mov
popa
pop
add
add
add
xchg
mov
pop
mov
int3
add
je
mov
mov
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
stc
jle
mov
add
add
add
mov
add
add
add
add
push
push
adcl
cmpsb
xchg
add
jne
fnstcw
add
add
movsb
mov
je
push
lcall
add
in
add
mov
arpl
in
loopne
xor
push
lea
push
call
add
add
add
mov
add
lret
add
loop
mov
cwtl
jl
loopne
xchg
add
add
add
add
icebp
fcomps
ljmp
testb
jo
leave
test
add
add
aad
jo
cli
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
test
mov
stos
fwait
add
mov
add
add
flds
add
lcall
add
std
cltd
fistl
test
mov
add
in
add
xchg
xchg
jnp
shll
lcall
push
and
xor
adc
xchg
jae
xchg
inc
push
push
lea
push
push
push
push
lea
push
push
push
call
pop
mov
mov
jecxz
xchg
int
out
jns
add
add
loopne
push
add
out
xchg
mov
push
test
add
add
test
lcall
adc
push
push
push
push
push
push
push
lea
push
call
faddl
add
lea
add
add
stos
aam
stos
outsl
aad
add
add
lock
out
xchg
add
std
add
add
cmpsl
add
xchg
add
mov
push
mov
lret
cwtl
scas
out
add
push
out
add
add
lcall
les
push
push
push
push
lea
push
push
push
lea
push
call
add
add
rclb
add
pop
mov
aam
xchg
add
rcl
add
add
add
fsts
cmpsb
add
sbbb
push
fldl
int
test
cld
jle
cmc
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
call
jo
jns
add
xchg
jmp
push
xchg
jle
testl
add
addr16
pop
jne
sti
addr16
pop
xor
push
push
push
push
push
call
add
mov
add
mov
test
mov
shr
add
call
movsb
add
nop
add
enter
add
into
xchg
gs
int
stc
add
add
add
out
add
stos
pop
add
jl
leave
add
mov
in
in
pop
add
push
xor
inc
pop
add
push
sub
shl
pop
add
mov
push
push
add
push
or
not
add
inc
sub
add
shr
rol
sub
pop
sub
shl
xor
add
pop
push
add
pop
pushl
push
push
push
push
lea
push
push
call
std
add
roll
cltd
add
fs
into
sarb
xchg
mov
add
std
jbe
jo
xchg
call
add
pop
call
push
add
pop
push
push
push
ror
rol
add
push
and
add
shr
not
sub
sub
shl
pop
rol
pop
push
push
push
push
lea
push
push
push
push
push
call
add
sti
movsl
lock
into
add
nop
add
add
pop
add
xchg
add
add
popf
test
add
aad
push
mov
add
xchg
testb
cltd
mov
add
lahf
sub
pop
push
push
push
ror
rol
pop
call
push
push
push
push
push
call
loopne
add
jmp
xchg
jmp
shl
in
les
add
push
add
xchg
add
xchg
add
clc
xchg
add
mov
flds
add
test
add
jle
sub
pop
mov
push
lea
push
push
call
add
add
data16
scas
add
mov
add
mov
lds
add
add
add
add
mov
sarl
clc
add
push
push
lea
push
call
jmp
leave
pop
mov
fcmovnu
enter
cld
mov
mov
fptan
mov
fildl
rolb
jecxz
mov
add
add
lcall
push
lea
push
push
push
call
mov
imul
add
add
xlat
out
jb
xchg
pop
lds
andl
xchg
add
pop
push
add
mov
add
popl
add
sub
pop
mov
add
push
push
push
push
push
lea
push
push
push
call
lret
mov
mov
cmpsl
add
cld
int3
xchg
in
mov
loope
add
xchg
fldenv
popl
int
in
imul
add
add
lcall
ret
add
add
push
sub
shr
pop
add
mov
push
push
push
push
push
call
add
add
jmp
filds
pop
jp
push
xchg
cld
lret
cmc
jb
mov
test
mov
mov
icebp
roll
xchg
jge
je
enter
add
loop
push
pop
add
add
movsb
roll
add
lahf
cli
lahf
iret
xchg
popa
std
add
cmc
andb
pop
xor
push
lea
push
lea
push
push
push
push
push
push
call
add
sahf
jo
add
mov
add
in
add
imul
fldenv
add
cwtl
ficoml
mov
add
scas
enter
add
jo
mov
cmpsb
imul
fbld
add
ret
rcrl
lcall
les
push
call
icebp
sahf
add
add
pop
shl
add
fs
add
pop
add
mov
std
popl
add
lds
add
in
push
jns
mov
jnp
add
addb
popf
sub
pop
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
add
loope
add
add
lock
bound
add
add
add
ror
jae
filds
js
insb
pushf
add
in
loopne
lcall
push
add
sub
add
not
pop
mov
push
push
lea
push
push
lea
push
push
call
add
add
cmpsl
loope
add
add
push
add
add
lret
add
div
jae
enter
add
sub
pop
xor
push
lea
push
push
push
call
add
add
add
mov
out
push
in
pop
cld
add
pop
add
add
bound
add
mul
cld
repnz
push
imul
movsb
cmc
arpl
mov
mov
push
add
add
push
push
lea
push
push
call
repnz
add
mov
idivl
add
cld
add
jb
in
pop
mov
faddl
push
mov
sahf
data16
lock
lea
push
lea
push
call
addl
add
flds
popa
clc
push
rorl
pop
fiaddl
add
mov
mov
add
jbe
enter
hlt
lcall
mov
xor
push
sub
shr
pop
rep
push
add
shr
pop
mov
xor
push
lea
push
push
lea
push
push
call
add
ja
mov
add
cwtl
lds
test
out
je
loopne
pop
scas
add
cmpsl
test
mov
jo
popl
xchg
add
nop
movsl
data16
add
pop
mov
sub
pop
or
je
push
pop
mov
xor
push
dec
sub
lea
pop
mov
xor
push
push
push
call
pop
mov
push
xchg
mov
cmc
lcall
test
mov
add
stc
mov
mov
add
add
add
xchg
adcb
add
nop
add
pop
sub
pop
add
push
inc
ror
pop
add
push
lea
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
fucomi
mov
xchg
add
nop
cltd
add
xchg
out
add
add
add
test
jae
lods
mov
pop
add
add
mov
push
push
push
push
lea
push
call
push
push
lods
mov
jnp
add
mov
pop
xlat
ret
scas
testl
add
xlat
out
popl
add
jno
add
ret
cmpsl
add
nop
push
lea
int
fdivs
testl
in
lock
xor
push
lea
push
lea
push
push
push
push
call
add
out
ljmp
add
add
xchg
add
pop
out
xchg
add
add
iret
mov
add
add
add
imul
add
add
add
mov
push
push
xchg
add
pop
add
pop
add
dec
mov
jo
pusha
push
add
add
mov
jbe
popf
jp
sub
pop
add
push
ror
pop
add
pop
push
lea
push
push
lea
push
push
lea
push
call
ja
jp
stos
aad
mov
lcall
xchg
add
mov
push
pop
xlat
add
xchg
add
add
gs
add
pop
rep
mov
xor
push
push
lea
push
push
push
push
push
push
call
std
push
xchg
mov
add
add
add
jecxz
icebp
pop
imul
into
gs
out
xchg
add
add
int
in
add
add
loop
add
repnz
jno
movsl
add
test
add
sub
pop
or
je
mov
push
lea
push
push
push
call
test
std
add
lcall
jl
add
add
jle
loopne
mov
add
add
rolb
test
pushf
mov
filds
into
jo
jecxz
add
out
nop
lahf
bound
testb
add
cli
iret
sub
pop
add
push
push
lea
push
push
call
add
add
lods
add
jge
in
xchg
popf
std
js
pushf
lods
int
add
add
add
jl
rclb
add
mov
loope
add
lcall
movb
add
push
push
push
call
mov
popf
mov
add
add
add
mov
loop
add
shlb
addl
add
rcl
lods
add
push
push
arpl
mov
xchg
fs
add
iret
fdecstp
add
xor
sub
pop
rep
pop
push
push
inc
push
or
inc
add
rol
ror
sub
add
dec
pop
sub
pop
push
rol
pop
pop
push
add
lea
not
pop
mov
push
push
push
lea
push
push
push
call
in
mov
stos
add
add
add
add
add
filds
cli
add
gs
push
add
repnz
sub
pop
mov
mov
push
push
push
lea
push
push
lea
push
call
add
add
ja
xchg
sti
add
pop
add
loop
mov
icebp
negb
mul
fildl
lods
gs
insb
lods
insb
mov
fdiv
add
pop
popf
push
testl
xchg
push
loope
add
xchg
add
add
pop
jmp
push
rol
pop
push
mov
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
xlat
stos
add
jae
add
add
ljmp
test
add
mov
sti
xorl
fidivrs
xchg
incb
mov
lcall
cld
push
lea
push
push
push
push
push
push
push
lea
push
call
add
mov
add
add
add
add
mov
sub
add
mov
mov
stc
add
add
add
addb
pop
push
push
shr
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
pusha
in
mov
xchg
sahf
add
mov
stos
out
add
jb
imul
rclb
sahf
xchg
sub
pop
push
push
dec
ror
add
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
in
fwait
jmp
jmp
mov
imul
test
ret
add
hlt
mov
add
js
add
gs
add
lcall
inc
cld
push
push
call
fninit
jo
add
mov
out
add
add
push
add
pop
fistps
mov
lock
add
lcall
push
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
mov
test
push
enter
add
aad
movb
addl
mov
outsl
push
roll
scas
push
movb
add
lcall
pop
push
push
push
lea
push
call
in
cli
xchg
add
fs
xchg
enter
gs
add
mov
loop
cltd
mov
add
scas
movsb
mov
outsl
fildl
jmp
stos
js
out
cli
rcl
pop
sub
pop
leave
push
push
push
push
push
push
push
push
call
mov
push
loopne
jbe
add
mov
rolb
add
test
out
xchg
mov
mov
je
add
add
add
mov
add
pop
mov
arpl
loopne
ret
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
add
pop
mov
mov
add
add
loop
fptan
add
add
add
shlb
insb
lock
les
loopne
lcall
in
push
inc
lea
rol
pop
add
push
push
inc
inc
ror
pop
push
push
push
call
add
add
pop
fwait
cmc
movsl
add
add
rolb
imull
test
scas
add
test
add
add
add
pop
add
add
loope
lret
add
jo
in
clc
lcall
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
xchg
lret
scas
aam
add
add
aad
xchg
mov
xchg
add
add
lahf
push
add
int3
add
add
xchg
movsb
mov
add
mov
sub
pop
movl
addl
push
add
not
add
pop
test
je
push
lea
push
push
push
push
push
call
popa
test
movsb
je
jl
add
add
add
pop
clc
add
add
add
add
addr16
ret
xchg
addr16
add
iret
fisubs
add
faddl
scas
fldl
js
add
mov
add
iret
shrl
add
call
mov
pop
push
sub
add
pop
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
fnstenv
mov
xchg
mov
add
add
addl
add
ja
aad
push
sti
add
imull
insb
andl
mov
add
add
sub
pop
pop
push
sub
sub
pop
pop
leave
push
push
lea
push
lea
push
call
add
sahf
lock
bound
add
add
add
lcall
push
addl
add
mov
add
mov
int
lods
rolb
js
js
fnstcw
add
fiadds
add
push
jp
fwait
cmpsb
int3
lcall
lock
ret
push
push
push
call
ret
add
add
mov
add
int3
add
fnstsw
in
pop
rcrl
add
mov
add
shl
push
neg
jecxz
or
fisttpll
add
mov
cwtl
fsubs
add
lds
in
add
fildl
les
loopne
mov
push
push
lea
pop
mov
push
not
pop
add
push
dec
add
pop
push
push
push
push
push
push
push
call
leave
add
add
mov
je
icebp
add
cli
lcall
mov
add
add
add
add
add
incb
lcall
push
inc
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
sarb
add
add
fwait
in
out
rcrl
test
fiadds
arpl
icebp
add
std
scas
add
lahf
rolb
add
mov
call
add
int3
mov
add
pop
roll
add
ficomps
mov
add
add
mov
add
mov
std
xchg
cli
sub
pop
testl
push
not
pop
addl
push
push
call
add
add
pop
push
bound
shr
add
cltd
pop
add
insb
xor
add
add
enter
bound
xchg
add
call
outsl
sub
pop
push
call
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
popl
add
mov
add
xchg
pop
jle
add
add
lods
popf
mov
je
fistpl
mov
pop
add
mov
add
add
add
inc
cld
push
sub
pop
pushl
push
push
inc
sub
pop
push
push
ror
ror
sub
ror
pop
call
push
push
call
loopne
add
sti
mov
add
out
cmp
jb
add
imul
rcr
mov
mov
loop
sub
pop
cmpl
jne
pop
push
add
sub
inc
ror
pop
pop
push
xor
shl
sub
pop
pop
push
lea
push
push
call
add
jb
adcl
mov
xchg
aad
pop
jmp
jno
add
add
add
pop
push
je
add
add
add
in
lods
je
addb
jmp
repnz
add
lods
into
add
push
push
push
lea
push
lea
push
push
push
call
rcrb
jo
lds
add
add
je
add
outsl
hlt
cltd
add
clc
add
out
je
add
add
jbe
pop
add
add
aad
add
add
int3
cmpsb
push
roll
lahf
lcall
jmp
mov
fcmove
in
lea
sub
pop
leave
push
push
push
push
push
push
call
imul
add
movb
mov
addb
arpl
data16
lods
into
mov
add
add
add
fwait
js
add
popa
add
mov
add
mov
movsb
movsb
add
outsl
add
iret
in
add
jge
xchg
add
mov
addr16
sub
pop
ret
push
lea
push
push
push
push
push
call
mov
mov
push
xchg
cwtl
mov
jne
xchg
mov
add
pop
movsb
stc
add
add
mov
xlat
cmpsb
imul
add
movb
add
push
add
add
add
add
arpl
std
out
in
call
lret
lret
pop
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
lret
add
shll
pop
add
add
add
push
add
add
leave
int
imul
push
add
fiaddl
lcall
cld
push
dec
pop
push
push
push
sub
pop
push
push
push
add
pop
movl
push
push
lea
push
lea
push
call
les
xchg
test
add
in
add
push
cltd
mov
jnp
add
add
add
addl
pop
push
call
push
add
not
sub
pop
push
push
push
push
call
insb
add
lcall
js
add
flds
xchg
pusha
add
add
xchg
mov
fwait
add
add
cmpb
add
rcr
add
fisubl
mov
call
stos
test
lods
lcall
lcall
mov
lea
push
lea
push
push
lea
push
push
push
push
call
add
xchg
add
add
add
iret
add
add
add
cmc
pop
add
mov
add
loope
add
ljmp
rolb
add
hlt
loopne
in
push
add
add
add
pop
add
icebp
add
in
add
add
add
sub
pop
subl
push
push
push
lea
push
push
call
add
mov
fstpl
mov
add
lret
push
add
push
add
stos
add
mov
fadds
add
add
add
loopne
xchg
sti
mov
jge
lods
lret
roll
add
sub
pop
cmpl
jne
push
shr
rol
sub
pop
pop
push
push
push
call
add
mov
movsl
push
add
add
jns
jne
stc
pusha
popa
cld
imul
sahf
add
add
pop
movsb
mov
add
lods
add
test
push
add
add
clc
jo
add
add
imul
mov
hlt
pop
pop
pop
push
push
push
lea
push
call
xchg
add
cmpb
not
add
mov
in
jecxz
mov
add
add
add
add
jbe
add
test
mov
add
mov
add
loopne
xchg
mov
add
add
adcb
pop
pop
push
dec
shl
ror
pop
leave
ret
push
lea
push
push
push
push
push
call
shll
lret
add
push
mov
add
hlt
add
mov
test
std
jl
add
call
add
loopne
cwtl
clc
addl
imul
jno
add
add
mov
pop
add
pop
enter
in
jne
jne
mov
mov
in
call
mov
jecxz
scas
adc
dec
add
pop
lea
push
call
ficompl
add
add
jnp
mov
push
outsl
repnz
mov
add
lahf
add
out
add
xor
push
jns
push
add
add
add
xchg
popa
mov
add
adc
add
out
sar
add
mov
popa
roll
fwait
add
test
xchg
sub
pop
mov
push
lea
push
lea
push
push
push
push
call
addr16
mov
ja
add
jno
xlat
add
stos
scas
insb
jecxz
add
test
lock
add
add
leave
jbe
add
add
sub
pop
add
push
push
ror
sub
add
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
fldl
add
scas
subb
pop
lods
add
mov
add
jp
mov
fwait
imul
pop
add
addr16
flds
add
mov
mov
les
pop
icebp
jne
out
and
js
mov
add
sub
pop
push
push
push
push
push
lea
push
call
faddl
pop
add
loopne
mov
leave
jnp
add
aam
add
add
add
add
add
int
addr16
in
out
add
jnp
add
jecxz
ficompl
mov
add
lods
add
add
mov
pop
mov
push
add
sub
pop
lea
push
lea
push
push
push
push
push
push
call
shlb
int
jge
fadds
push
push
add
add
add
add
jge
hlt
add
in
test
push
mov
aad
ret
add
add
xchg
out
mov
add
jns
pop
add
add
rolb
jge
pop
loop
add
add
mov
sub
pop
sub
push
push
push
push
push
call
add
push
add
pop
hlt
push
filds
enter
sti
mov
jmp
aad
add
add
mov
lods
add
xchg
add
roll
in
in
lcall
add
call
jno
push
lea
push
push
push
push
call
into
add
sahf
add
add
add
add
scas
rol
fldl
sti
add
ror
loopne
add
mov
add
int3
push
push
add
call
add
sub
pop
add
mov
push
push
push
lea
push
call
mov
stc
add
ret
add
jle
pop
add
jns
add
add
scas
movsb
add
mov
popa
pusha
roll
outsl
add
mov
add
add
cmc
jecxz
lock
add
add
jge
push
pop
add
mov
mov
add
hlt
sub
pop
mov
push
push
push
push
push
call
aad
push
cmpsb
add
xchg
add
sahf
fadd
popf
hlt
xchg
je
sti
mov
pushf
mov
lret
xlat
add
lahf
idivb
push
out
add
add
rolb
or
shr
xor
pop
add
mov
push
lea
push
push
push
lea
push
push
push
push
call
popf
push
add
cmc
les
cmpsl
cmpsl
div
add
xchg
andb
add
pop
add
xchg
sub
pop
mov
push
rol
inc
pop
cmp
jne
cmp
jne
push
sub
sub
pop
mov
movl
push
push
push
push
push
push
push
push
push
call
add
add
add
in
add
cmc
mov
loop
mov
add
pop
leave
mov
jo
xlat
movsb
add
add
in
cmpsl
in
int3
lock
scas
add
push
add
mov
add
scas
mov
data16
add
mov
mov
fcompl
or
add
mov
push
shr
sub
pop
mov
push
pop
sub
jne
push
push
push
lea
push
push
call
add
mov
add
add
add
cmpsl
nop
js
add
add
in
add
imul
lock
add
add
push
add
add
jle
mov
add
lods
add
mov
jmp
add
jns
add
mov
in
in
pop
mov
movl
push
push
push
push
push
push
push
push
push
call
sbbl
xchg
add
pop
jno
fisttpl
add
adc
mov
repnz
sahf
add
mov
add
add
faddp
add
mov
add
cwtl
xchg
jbe
sub
pop
jmp
push
xor
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
mov
rcl
push
pop
mov
jno
add
jne
jmp
add
cltd
js
add
sarl
pop
out
xchg
test
out
out
pusha
pop
mov
in
fcompl
nop
mov
add
push
lea
shl
dec
pop
cmp
jne
mov
push
push
push
push
push
call
add
mov
scas
add
add
fldl
pop
gs
add
add
add
pop
lret
add
jns
add
add
add
add
dec
or
add
push
call
add
lock
xchg
jns
into
aad
add
jl
mov
mov
fsubl
add
mov
add
add
add
popa
mov
add
sahf
mov
jae
add
cli
xchg
push
add
sub
pop
mov
push
add
dec
add
pop
cmpw
jne
push
ror
dec
pop
mov
movl
push
add
lea
pop
jmp
push
lea
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
call
add
add
jns
ret
mov
gs
hlt
sti
xchg
out
add
add
popf
mov
lcall
mov
push
push
push
push
push
lea
push
push
push
push
push
call
fiaddl
mov
add
push
sahf
mov
fs
add
add
shlb
aad
fadds
add
test
add
mov
add
inc
sbb
push
or
mov
rclb
incl
roll
add
lea
shr
dec
sub
shl
ror
dec
shr
pop
sub
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
roll
mov
cmpsl
mov
bound
rolb
js
enter
lret
add
push
mov
lcall
mov
sti
xchg
test
mov
roll
xchg
add
mov
add
add
test
xorl
add
add
lcall
push
push
lea
push
push
lea
push
call
loopne
lea
xchg
test
call
stos
mov
fimull
add
testl
add
add
icebp
add
add
lret
add
mov
xchg
cli
add
lcall
movsb
nop
rolb
fildl
mov
mul
cwtl
add
icebp
pop
add
rcl
je
jp
in
in
lcall
inc
aaa
add
push
push
push
lea
push
lea
push
push
call
mov
testb
add
jl
add
add
add
test
iret
outsl
int
add
filds
rcrl
add
pusha
mov
cltd
cli
add
test
add
ja
gs
rorb
lcall
js
int3
fldz
ret
pop
or
add
dec
pop
inc
push
shl
xor
xor
push
or
not
add
sub
ror
sub
sub
sub
sub
rol
xor
pop
add
pop
push
shl
not
pop
push
push
push
push
call
add
add
mov
aam
xlat
fdivl
add
test
xchg
cwtl
add
jmp
add
cld
add
cli
add
add
pusha
test
pop
add
add
add
call
push
push
push
push
call
add
add
add
add
mov
mov
add
add
test
pop
enter
out
lock
loope
add
roll
add
add
in
lock
cmpl
je
push
push
not
xor
inc
dec
push
or
inc
add
add
sub
sub
sub
pop
dec
pop
push
sub
ror
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
test
add
popf
add
movsb
filds
add
rorl
add
jnp
add
loopne
push
addl
add
call
arpl
jb
imul
xchg
cmpsl
xchg
xchg
lods
mov
les
loopne
lcall
dec
xor
addr16
lahf
push
lea
push
lea
push
push
lea
push
push
push
call
add
cmc
xchg
fwait
add
int
cmpsb
mov
icebp
popa
add
xchg
mov
pop
cmpl
out
add
add
jns
movsl
clc
mov
add
add
add
sahf
add
in
fcompl
cmp
add
int3
je
push
push
shl
push
and
add
sub
inc
lea
sub
inc
pop
add
xor
pop
push
lea
push
push
push
push
push
push
push
call
hlt
add
jb
add
add
loopne
mov
test
mov
pop
mov
add
loope
fs
outsl
popa
into
out
add
insb
sarl
push
testb
stos
fnstsw
add
jmp
popf
mov
mov
add
add
add
mov
pop
push
push
dec
add
pop
call
push
push
lea
push
push
lea
push
call
mov
add
out
jns
add
enter
add
add
add
pop
add
in
aad
add
pop
jmp
add
les
in
lcall
cmp
rol
je
push
push
dec
sub
push
or
inc
add
add
add
add
sub
add
rol
pop
not
pop
push
push
call
add
shll
add
adcl
xchg
pop
add
add
rolb
aam
add
rorl
add
cltd
ja
add
lcall
mov
roll
stc
add
push
lea
push
push
push
call
xchg
imul
xchg
mov
add
add
mov
add
add
nop
add
shll
popf
add
in
jbe
add
add
int
cld
add
add
test
test
scas
add
pusha
add
in
mov
lock
lcall
xor
add
xchg
lea
push
lea
push
push
call
xchg
push
jno
ficomps
lods
xchg
lock
mov
jge
cmc
add
leave
aad
fisubrl
push
lods
add
clc
out
add
mov
push
scas
fistps
add
cmp
rol
je
push
push
add
inc
push
xor
add
rol
sub
shr
inc
not
pop
rol
shr
pop
push
push
call
fsubl
cmpsb
pop
add
mov
mov
mov
out
add
add
add
jbe
out
ja
addl
push
lods
add
add
add
mov
ljmp
add
push
lods
add
lods
sub
pop
push
call
push
lea
sub
xor
pop
cmpl
je
push
push
sub
not
push
and
add
add
rol
sub
lea
add
add
sub
pop
add
pop
push
push
push
push
push
push
push
call
cld
movb
test
cmpl
add
movl
add
fs
ja
ja
nop
mov
filds
in
test
rolb
push
add
mov
mov
lret
add
add
add
cli
xchg
xchg
push
not
inc
shr
pop
call
cmpl
je
push
push
xor
push
and
add
xor
sub
not
pop
add
pop
push
ror
pop
push
call
push
lea
push
push
push
push
push
call
add
push
add
out
mov
add
imul
pop
mov
mov
fwait
pop
mov
arpl
xchg
loope
mov
sub
pop
cmpl
je
push
push
shr
shr
xor
push
xor
add
rol
dec
xor
sub
sub
rol
shl
inc
pop
shl
xor
pop
push
xor
dec
pop
push
call
push
sub
inc
pop
cmpl
je
push
push
sub
push
or
not
add
shr
ror
sub
sub
shl
dec
pop
lea
ror
add
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
lea
add
jle
mov
jecxz
in
xchg
add
test
sti
fiaddl
push
add
lods
xchg
add
mov
in
loopne
push
call
push
not
inc
add
shr
pop
cmpl
je
push
push
add
push
and
add
add
ror
sub
inc
pop
add
rol
shr
pop
push
shr
pop
push
call
push
add
add
not
pop
cmpl
je
push
push
inc
inc
push
push
pop
add
inc
not
add
add
sub
dec
rol
pop
lea
add
dec
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
hlt
ficomps
mov
mov
rolb
pop
lcall
lods
bnd
fnstcw
add
bound
add
push
jp
cmpsb
imul
add
test
rcrl
xchg
stc
add
fdivr
lcall
push
push
push
call
pop
scas
cltd
add
add
mov
out
add
loopw
fildl
add
mov
movsl
add
mov
lods
popa
jl
add
add
add
add
pop
aam
ja
leave
add
mov
hlt
mov
jle
add
cld
add
add
xor
rolb
loope
in
add
mov
add
leave
add
add
test
lcall
and
add
push
pop
cmpl
je
push
push
dec
push
push
pop
add
add
ror
shl
sub
add
sub
add
pop
shl
sub
pop
push
lea
pop
push
push
not
pop
call
push
push
push
call
add
add
lock
stos
add
outsl
repnz
add
loop
lods
js
jmp
stc
xchg
pop
les
test
add
sub
pop
cmpl
jne
mov
push
lea
add
rol
add
pop
movl
jmp
push
xor
lea
xor
pop
xor
pop
push
push
push
push
push
lea
push
call
add
insb
cmpb
add
ffreep
add
movsl
cmpsb
rolb
mov
pop
add
mov
lcall
jnp
imul
jb
add
lret
mov
add
std
scas
add
add
je
add
in
add
mov
in
call
push
lea
push
push
push
lea
push
call
add
roll
roll
add
cwtl
lods
push
add
loop
movb
add
push
pop
testb
repnz
in
pop
icebp
xchg
add
add
aam
jne
pop
jle
hlt
call
add
push
pop
cmpsb
mov
add
pop
test
call
lcall
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pop
pop
loopne
add
rolb
xchg
add
cld
xchg
mov
faddl
add
arpl
jbe
add
shll
faddl
sub
pop
leave
push
push
lea
push
push
lea
push
call
add
add
add
add
add
out
lods
pushf
add
rorb
add
add
jl
mov
flds
add
add
add
add
out
add
ljmp
ret
push
push
inc
xor
sub
pop
mov
push
push
call
add
add
cli
scas
add
add
add
add
add
out
mov
add
mov
mov
jno
in
xchg
mov
nop
mov
flds
jecxz
add
xchg
insb
jle
sahf
movsb
les
mov
fbld
add
add
hlt
sub
pop
add
push
rol
shl
add
pop
cmpl
jne
push
push
shl
shl
shr
push
or
inc
add
xor
ror
ror
lea
sub
sub
pop
inc
add
pop
push
lea
push
push
push
call
ja
rolb
add
add
add
add
mov
add
pusha
xchg
add
jle
mov
add
sti
insb
add
xchg
add
add
add
div
lret
add
pop
pop
add
ljmp
lock
pushl
call
push
inc
pop
push
call
push
push
lea
push
lea
push
push
push
push
call
mov
in
mov
add
pushf
pop
jne
stos
add
flds
leave
lods
mov
nop
in
mov
jo
add
aad
in
in
lcall
mov
push
push
push
lea
push
push
push
call
pop
stos
sti
add
pop
call
in
xchg
add
mov
add
out
out
jecxz
outsl
lret
jmp
add
lret
in
jo
gs
js
add
rcr
add
add
add
pop
add
nop
mov
movsl
add
cmpl
je
push
lea
pop
cmpl
jne
push
push
push
lea
push
push
push
push
call
cli
iret
push
add
add
int
ret
xlat
std
stos
test
push
jecxz
mov
test
int
ljmp
fstpt
add
sub
pop
mov
call
push
dec
pop
ret
push
add
add
pop
jmp
cmpl
jne
push
push
sub
add
push
and
add
lea
ror
sub
not
sub
pop
pop
push
push
push
call
popa
add
lods
mov
add
addr16
test
add
into
push
outsl
pusha
fidivrs
add
add
pop
js
filds
testb
sub
pop
pushl
push
lea
push
push
call
stc
add
out
add
fs
jbe
cmp
jb
add
cmc
fdivrl
add
loopne
add
loopne
cmpsb
addb
lahf
add
add
jp
mov
add
cmc
ljmp
mov
add
lret
lret
add
movsb
mov
xchg
popf
add
add
lcall
inc
sub
add
call
add
ja
stos
add
fildl
add
push
add
add
pop
add
add
fwait
mov
mov
pop
push
add
add
cwtl
jp
int3
add
add
insb
add
add
mov
jns
mov
in
clc
lcall
add
sbb
push
push
call
jge
mov
add
add
xchg
mov
add
pop
ljmp
add
stc
add
add
add
jns
add
xchg
stos
add
call
roll
add
mov
add
in
lcall
rclb
pop
jmp
push
push
push
push
push
lea
push
push
lea
push
call
mov
out
add
add
add
flds
insb
add
movsb
add
add
xchg
repnz
push
in
lods
repnz
add
bound
jns
sub
pop
cmpl
jne
mov
push
push
push
push
lea
push
push
push
call
test
xorb
mov
add
add
add
xchg
add
pop
bound
push
test
add
test
loopne
add
pop
iret
test
add
jnp
iret
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
cmc
add
mov
add
scas
mov
mov
add
push
mov
int3
cmp
add
add
add
add
pusha
gs
add
add
add
cwtl
mov
push
jbe
mov
shr
mov
mov
add
add
in
push
push
push
rol
push
sub
add
xor
dec
not
sub
lea
pop
add
not
xor
pop
push
push
call
add
add
jecxz
add
out
cli
add
add
addb
mov
add
nop
movsl
add
sti
fdivs
add
repnz
add
add
roll
add
lcall
jne
push
push
push
push
push
push
push
push
push
push
call
movb
add
add
add
pop
mov
add
add
xchg
add
pop
in
lea
out
bnd
out
add
jns
add
scas
pop
jns
movb
add
les
add
je
out
add
jmp
xchg
mov
nop
push
mov
jb
add
sub
pop
call
call
push
push
rol
shl
push
sub
add
lea
dec
inc
sub
lea
rol
lea
not
pop
sub
pop
push
ror
pop
pushl
push
push
lea
push
push
push
push
call
mov
add
add
xchg
add
add
mov
xchg
add
jge
mov
push
add
fiadds
xchg
stc
mov
sarb
pop
add
stos
loopne
push
add
push
add
add
cwtl
les
add
add
add
lods
add
add
test
je
ficompl
notl
add
in
call
call
call
push
push
shr
shl
push
push
pop
add
shr
sub
add
pop
add
shr
pop
push
rol
pop
pushl
call
push
rol
add
inc
pop
call
push
push
add
lea
push
xor
add
sub
sub
rol
pop
shr
inc
pop
push
push
push
push
call
roll
mov
in
add
add
add
aam
mov
gs
xchg
mov
jle
pushf
xchg
add
cwtl
lds
scas
call
bound
add
in
add
pusha
les
popa
add
pop
arpl
add
mov
out
add
xchg
mov
cltd
test
in
lock
lcall
jne
push
sub
shl
sub
pop
call
push
shl
not
pop
call
push
push
add
push
or
not
add
dec
sub
shl
rol
pop
lea
pop
push
not
dec
pop
pushl
push
add
shr
rol
sub
pop
call
push
push
call
mov
fistl
sti
add
push
test
fadd
scas
add
add
xchg
add
mov
add
push
push
cmc
movsb
add
jae
add
push
pop
addb
pop
add
jmp
push
add
add
fwait
add
in
jne
loopne
sti
add
mov
in
clc
lcall
shrb
lcall
dec
sub
push
or
not
add
sub
sub
add
add
sub
lea
shl
sub
dec
pop
lea
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
add
add
add
outsl
movsl
lds
fisubs
rclb
je
imul
data16
push
push
xchg
hlt
push
fists
xchg
stos
add
rcr
add
arpl
iret
add
in
fcomps
jne
push
ror
pop
call
push
push
push
push
call
movsl
int3
mov
les
add
mov
shr
cli
add
add
add
xchg
lods
add
xchg
add
add
mov
data16
jecxz
add
add
add
outsl
flds
lcall
shrb
outsl
pop
push
xor
lea
push
xor
add
sub
xor
sub
pop
lea
lea
not
xor
pop
push
lea
push
push
lea
push
push
call
clc
enter
iret
js
add
pop
je
add
add
leave
xchg
fwait
add
cltd
fwait
add
cmc
add
mov
iret
testb
cmpb
add
movsb
add
mov
mov
jmp
pop
stc
mov
ja
int
in
in
pop
pushl
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
repnz
add
jl
xchg
nop
jae
subb
mov
rolb
gs
cmpsb
add
add
stc
lds
cmc
mov
add
mov
mov
xchg
icebp
jle
sti
push
cmpsl
out
scas
push
mov
add
jnp
add
add
sub
pop
call
push
shl
dec
ror
add
pop
call
push
push
xor
dec
dec
xor
push
push
pop
add
ror
inc
shr
sub
xor
shl
shr
pop
not
pop
push
push
push
push
push
push
push
push
call
add
fld
cltd
leave
add
push
add
cltd
add
lods
add
add
push
stc
pop
add
add
jp
pop
mov
in
loopne
pushl
call
push
lea
push
push
push
push
push
push
call
mov
fimuls
pop
xchg
leave
sbbl
add
mov
mov
aam
add
add
clc
add
enter
data16
mov
xchg
mov
add
lea
add
add
ljmp
pop
call
push
push
sub
sub
push
or
inc
add
sub
inc
sub
lea
pop
pop
push
dec
pop
pushl
call
push
push
push
call
test
add
add
add
fsubr
lcall
jge
mov
pop
mov
add
call
pop
add
push
add
sti
mov
divl
xchg
in
mov
gs
enter
popf
call
lock
add
pop
call
push
push
dec
inc
sub
rol
push
or
inc
add
xor
sub
sub
lea
pop
pop
push
lea
push
push
call
lds
add
add
sahf
arpl
notb
add
clc
xchg
fmulp
add
jmp
jo
in
add
add
fadds
sub
pop
pushl
call
push
sub
pop
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
sub
shlb
loope
mov
xchg
add
cltd
mov
ljmp
add
mov
test
add
mov
fisubl
call
add
pop
add
iret
ja
add
mov
mov
add
bound
movsb
mov
sub
pop
push
push
add
pop
call
push
push
inc
shr
add
push
push
pop
add
sub
sub
rol
sub
shr
pop
lea
add
not
pop
push
push
push
call
ja
add
clc
add
add
mov
imul
add
add
add
add
add
mov
add
push
mov
add
jno
ljmp
jns
flds
add
lcall
jne
call
push
sub
pop
call
push
push
add
shr
push
or
not
add
sub
add
sub
add
ror
not
shr
pop
inc
not
pop
push
lea
add
shl
not
pop
pushl
push
push
push
push
call
add
in
imul
add
lcall
add
add
add
insb
add
stos
fcomps
popl
jb
addl
lods
movsb
add
pop
call
push
push
push
push
push
push
push
push
push
call
add
lcall
add
rolb
jmp
add
sahf
int3
mov
out
add
fnsave
xchg
add
add
pop
fadds
shrb
mov
lea
push
and
add
ror
sub
not
pop
not
pop
push
not
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
xchg
mov
add
out
jo
mov
mov
add
pushf
add
add
jbe
push
add
mov
add
into
add
add
add
pushf
add
add
add
add
add
mov
cwtl
scas
int3
add
jne
add
add
fldl
sub
pop
call
call
push
push
inc
shr
dec
xor
push
or
inc
add
add
xor
sub
shl
sub
add
dec
pop
shl
not
pop
push
sub
add
pop
pushl
push
sub
not
shl
pop
call
push
push
lea
inc
inc
push
or
not
add
inc
sub
inc
dec
pop
sub
pop
push
push
shl
sub
push
or
not
add
sub
add
add
add
add
pop
inc
add
add
pop
push
push
lea
push
push
lea
push
lea
push
call
enter
add
add
mov
add
aam
add
add
add
add
iret
add
add
mov
add
xchg
mov
cld
iret
push
mov
stos
repnz
pushf
loop
in
cwtl
out
push
add
jne
add
leave
add
lahf
xchg
jl
add
test
call
pop
push
sub
sub
sub
sub
pop
dec
jne
call
push
push
inc
push
and
add
sub
sub
pop
lea
lea
add
rol
pop
push
not
rol
lea
pop
pushl
push
lea
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
stos
mov
add
lahf
jo
xlat
jp
test
arpl
jl
add
in
ja
in
fdivs
fdivrs
out
add
mov
pop
jmp
pusha
xchg
xchg
nop
add
jp
cmc
pop
add
jns
mov
mov
leave
jne
add
mov
sub
pop
push
push
add
pop
call
push
pop
mov
push
push
dec
shl
ror
push
or
not
add
inc
add
sub
sub
lea
inc
pop
xor
add
pop
push
lea
push
call
pusha
add
incb
out
lock
add
je
push
add
add
push
mov
add
jb
jno
add
pusha
imul
test
push
sub
pop
pushl
push
shr
pop
call
push
push
call
xabort
lds
mov
add
add
pop
add
add
add
mov
insb
cld
push
fldl
add
mov
add
mov
in
clc
pop
lea
push
push
push
push
push
push
push
lea
push
push
lea
push
call
jae
add
roll
add
data16
rolb
add
out
aad
jns
add
add
add
add
pusha
add
pop
add
addb
gs
add
cmc
add
fcomps
push
push
push
lea
push
push
push
push
push
call
into
add
add
loop
jge
fimuls
add
rolb
cld
call
mov
mov
add
popf
sti
push
stos
xchg
gs
mov
movsb
flds
insb
add
repnz
xchg
aam
in
in
in
push
push
add
pop
push
push
push
push
push
push
call
mov
add
adcl
xchg
jmp
add
popa
out
fiadds
add
add
add
jl
test
add
out
bound
add
jecxz
mov
pop
pop
mov
add
jo
shlb
mov
mov
lock
lods
fcomp
arpl
in
in
lcall
rorb
ljmp
and
repnz
shr
push
and
add
inc
rol
shl
sub
dec
pop
pop
push
rol
pop
pushl
push
push
push
push
push
push
call
add
je
ljmp
add
jle
add
jl
add
add
add
movsl
push
jle
ljmp
xchg
mov
out
int3
mov
add
test
add
add
xchg
scas
mulb
add
jmp
add
xchg
xchg
mov
sub
pop
call
push
ror
add
pop
push
call
push
push
add
push
and
add
sub
sub
sub
rol
pop
sub
dec
lea
sub
pop
push
push
lea
push
push
lea
push
call
lahf
fildl
into
cmpsb
in
add
cli
int
loop
add
cwtl
out
add
jle
xchg
add
imul
fwait
add
loop
add
scas
cmc
add
int3
add
fadds
subb
add
cmc
loopne
enter
jbe
lea
add
sub
pop
pushl
push
ror
rol
ror
pop
call
call
push
push
push
push
push
push
push
lea
push
call
into
insb
in
jle
add
add
add
add
mov
ret
mov
test
loopne
add
movsb
push
ljmp
jns
add
add
cli
add
in
loopne
lcall
inc
cld
lea
push
push
shl
xor
push
and
add
inc
sub
sub
add
xor
sub
add
pop
lea
ror
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
insb
add
add
les
movsl
add
add
movsb
jle
out
add
rolb
mov
mov
addl
test
add
jnp
lods
pop
sub
pop
pushl
push
lea
pop
call
push
dec
pop
lea
push
push
rol
shr
rol
pop
push
push
push
not
lea
lea
pop
pushl
push
push
dec
ror
sub
lea
push
or
not
add
add
xor
sub
shl
pop
add
sub
not
xor
pop
push
inc
sub
pop
push
call
push
push
xor
not
push
xor
add
inc
sub
dec
pop
pop
push
xor
pop
pushl
push
push
push
push
push
call
add
iret
clc
jns
add
cmpsb
loop
add
clc
push
cld
pop
add
pop
scas
add
push
add
xchg
data16
sar
xchg
jne
mov
push
add
add
popa
mov
out
mov
mov
in
lcall
inc
adc
add
out
pop
push
push
push
call
add
add
add
popl
imul
add
push
mov
cmpb
cld
cli
sahf
push
fdiv
add
loope
jl
outsl
imul
add
into
add
add
lock
scas
pop
add
add
add
lock
add
add
faddl
fcomps
add
jae
add
mov
clc
pop
call
push
push
sub
push
xor
add
sub
sub
add
shr
shr
pop
sub
sub
rol
xor
pop
push
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
add
jmp
arpl
js
in
add
add
mov
lea
data16
xchg
pop
rcll
sbbb
add
add
imul
add
into
mov
cmpl
lcall
and
add
call
push
lea
push
push
push
push
call
enter
rcl
nop
mov
lods
add
int
add
loop
cli
in
ja
push
lcall
add
lock
add
sti
jbe
mov
add
addr16
add
shlb
mov
add
add
js
gs
add
add
int3
cwtl
jbe
add
fs
enter
in
in
pop
jmp
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
in
mov
mov
test
add
xchg
jge
add
movsb
pop
hlt
add
addl
add
jnp
sub
pop
pushl
push
xor
pop
mov
push
lea
push
push
call
mov
mov
add
add
add
xchg
add
gs
in
popf
mov
int
add
pop
add
rolb
rcrl
hlt
pop
jmp
push
push
add
rol
push
and
add
lea
sub
xor
dec
pop
xor
pop
push
lea
push
lea
push
lea
push
push
lea
push
call
movsb
rcl
insb
jmp
push
cmpsb
add
mov
insb
in
add
pop
sahf
add
add
mov
imul
mov
jnp
mov
add
add
fildl
push
pop
stc
add
out
sahf
add
add
add
jne
push
push
push
push
lea
push
lea
push
push
call
xchg
add
add
stc
add
out
stc
test
add
flds
pusha
mov
lock
lahf
mov
add
rcrb
in
add
add
add
pusha
add
mov
imul
xchg
data16
rcrb
add
loopne
add
push
lea
push
call
add
add
jbe
add
flds
mov
add
cli
add
mov
clc
add
xchg
int
std
mov
add
loop
clc
lods
mov
push
aam
test
stos
notl
rolb
test
loope
addl
rolb
pop
push
push
sub
add
not
rol
pop
call
push
push
dec
push
push
pop
add
inc
sub
rol
not
pop
ror
add
pop
push
rol
add
sub
pop
pushl
call
push
pop
push
push
xor
shr
rol
pop
call
push
inc
pop
leave
add
push
inc
pop
pop
push
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
add
cli
add
add
add
mov
mov
add
lods
add
add
add
shrb
add
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
lods
clc
mov
xchg
add
add
out
in
add
add
mov
push
icebp
cmc
add
nop
add
add
lds
add
scas
push
jmp
insb
in
mov
add
add
jle
mov
add
add
out
add
in
in
fdivr
lcall
rclb
xchg
dec
shlb
xchg
mov
push
lea
push
push
lea
push
lea
push
push
push
call
add
arpl
mov
add
add
add
mov
fstp
add
add
mov
loopne
mov
scas
add
add
jp
mov
out
add
sub
pop
inc
ret
push
push
call
add
add
ljmp
fiaddl
mov
add
movsb
add
add
add
add
add
add
jge
mov
add
push
dec
shl
shl
sub
pop
ret
push
lea
push
push
push
call
lahf
add
loope
push
pusha
jle
rcrb
add
jl
add
shlb
add
push
add
add
rolb
pop
push
mov
push
add
add
xor
add
pop
cmpl
jne
mov
push
shr
lea
pop
jmp
push
push
lea
push
push
push
push
push
call
mov
add
pusha
add
mov
add
pusha
mov
add
add
add
add
fisubl
iret
popa
insb
addr16
add
pop
add
bound
add
add
cmpsl
je
nop
add
inc
or
loopne
push
ror
pop
xor
push
push
call
add
add
jnp
xchg
add
add
lea
faddl
shr
imul
push
add
pop
add
jmp
ret
xchg
add
add
add
cmc
gs
fldl
add
jp
add
add
lret
shlb
lea
mov
clc
lcall
push
xor
xor
push
add
pop
dec
push
push
push
call
popa
add
push
mov
mov
add
lock
test
add
roll
add
ljmp
add
add
in
in
hlt
pop
sub
jmp
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
mov
add
mov
add
popf
jecxz
add
add
pop
jmp
add
testb
in
mov
clc
push
add
jno
imul
notb
add
loopne
add
lret
add
out
enter
in
fcompl
add
add
push
push
push
call
push
sbbb
lods
add
sahf
add
mov
add
movsb
int
add
add
data16
mov
mov
addr16
out
add
sti
insb
add
imul
loope
add
cli
out
imul
bound
sub
pop
pushl
push
sub
dec
pop
pop
sub
push
add
add
pop
cmp
jne
push
xor
dec
add
pop
mov
push
rol
add
not
pop
lea
push
ror
add
pop
sub
push
push
push
lea
push
push
push
push
push
push
push
call
mov
mov
add
add
add
loope
xchg
add
lcall
lahf
lds
jno
add
add
mov
ja
add
jo
add
icebp
pop
cmpsl
add
sub
pop
mov
push
lea
shr
rol
dec
pop
shr
push
add
lea
pop
add
push
push
lea
push
push
push
lea
push
call
imul
add
ja
lahf
mov
addl
lods
pushf
filds
jge
iret
mov
add
add
mov
jp
test
sbb
jle
test
add
jns
add
cmc
pop
pop
in
sub
pop
sub
push
sub
add
shr
pop
pushl
push
push
push
push
push
push
push
push
call
loopne
add
mov
add
add
cltd
add
add
add
fbstp
add
gs
xchg
test
sub
pop
pop
push
add
rol
pop
shr
push
shl
lea
pop
and
push
lea
push
lea
push
call
pop
add
xchg
add
stos
movl
add
shrb
add
jnp
mov
jnp
push
mov
add
lahf
add
stos
out
jnp
xlat
add
add
cwtl
pop
jb
out
add
add
push
jno
in
fldpi
add
test
test
in
add
add
int
sub
pop
sub
cmp
jne
push
push
push
lea
push
call
add
icebp
cmpsl
cwtl
add
add
pop
sti
push
xchg
into
add
add
jbe
add
add
jno
add
sbb
jle
out
shrb
jbe
shll
lock
leave
push
push
push
lea
push
push
lea
push
call
lods
mov
mov
cli
fadds
add
repnz
call
add
add
add
add
jae
add
add
iret
add
scas
lock
pop
ret
push
push
push
lea
push
call
xchg
add
add
test
loope
mov
add
add
cwtl
add
pushf
add
add
add
lcall
in
add
push
push
call
add
add
cmpsb
cwtl
push
add
int
ja
addl
add
push
add
scas
xchg
sub
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
call
add
lret
hlt
add
add
sahf
clc
jo
add
add
jge
add
loope
add
cmc
xchg
imul
je
js
add
add
mov
outsl
aam
push
add
jp
xchg
repnz
mov
jl
add
fsts
out
sub
pop
push
push
push
sub
lea
shr
pop
push
mov
push
lea
push
push
lea
push
push
lea
push
push
call
xchg
pop
mov
fcmovb
mov
imul
lods
cld
loope
sbb
add
add
loopne
lods
lods
jmp
mov
xchg
mov
mov
movl
add
sub
pop
lea
push
pop
sub
mov
push
lea
push
call
test
and
hlt
icebp
xlat
pop
mov
add
testl
jecxz
jmp
loop
add
push
leave
cmc
jmp
jo
testl
add
shr
push
inc
lea
inc
inc
pop
add
push
push
call
pop
add
add
into
mov
lret
fildl
test
test
add
mov
add
add
cwtl
mov
add
add
xchg
push
lahf
rolb
add
sarb
lcall
fwait
addb
add
pop
or
incl
out
jmp
push
add
add
lea
pop
add
push
push
lea
push
push
push
push
push
push
call
jp
mov
pop
mov
leave
lcall
mov
add
push
xchg
add
add
add
add
add
scas
mov
std
push
sub
pop
xor
push
dec
xor
xor
pop
mov
push
sub
pop
and
rol
push
push
lea
push
call
mov
in
add
cmpsl
add
jge
add
add
add
push
cltd
ret
xchg
add
add
mov
add
sarl
mov
add
add
fsubs
repnz
std
add
pop
adc
icebp
add
add
push
pop
mov
insb
mov
ljmp
add
je
pushf
push
push
call
add
scas
cld
add
stos
leave
add
add
add
int3
add
int
shl
movsl
add
lcall
add
pop
add
add
add
add
popa
mov
add
add
push
popa
add
add
add
stos
xchg
movl
ljmp
push
xchg
add
in
hlt
pop
xor
push
rol
pop
inc
push
push
push
call
add
mov
fstpl
lcall
mov
stos
mov
push
mov
jns
hlt
add
add
stc
test
aam
add
cltd
mov
pop
add
movb
add
clc
fidivl
push
int
ja
add
fdivs
cmp
jne
push
push
push
push
push
lea
push
push
call
add
add
repnz
add
enter
add
mov
add
lea
add
add
jge
jbe
add
popl
sub
pop
add
push
pop
cmp
je
add
push
shl
inc
pop
cmpl
jne
xor
push
add
ror
sub
shr
pop
pop
push
add
add
rol
add
pop
pop
push
inc
dec
pop
pop
push
push
push
push
push
push
call
nop
add
fildl
lock
ja
add
icebp
pop
movb
add
push
cmpsb
ret
add
enter
icebp
fisubrs
pop
in
mov
out
fcoms
add
push
jae
in
call
push
push
push
push
push
lea
push
push
lea
push
call
add
in
add
mov
int
add
xchg
add
stc
lods
jl
pop
add
icebp
add
add
andl
ja
add
fildl
iret
jp
pop
test
add
pop
cmpsl
int
xchg
add
gs
mov
add
in
fdivr
lcall
ret
push
xor
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
add
add
std
mov
roll
add
xchg
add
scas
sahf
lods
pushf
ret
imul
add
scas
jecxz
pop
add
add
add
mov
add
testb
stos
jae
mov
add
mov
add
add
jne
add
fs
pop
add
push
push
lea
push
call
imul
add
stc
fiaddl
mov
movsl
add
jp
xchg
add
mov
leave
popa
iret
addl
test
fsub
pop
popf
sub
pop
mov
push
shr
dec
shr
xor
pop
push
push
push
push
push
call
cli
add
add
out
add
add
sti
add
add
movsb
add
push
add
mov
xchg
iret
jb
add
lret
jl
add
lahf
push
add
stos
add
sub
pop
mulb
push
lea
push
push
call
imul
movb
add
call
add
imul
lret
jne
insb
addr16
imul
stos
mov
xchg
add
xlat
xchg
roll
add
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
fdivr
add
out
out
add
jnp
add
lds
add
push
mov
add
mov
cmc
testb
popl
jmp
add
mov
filds
mov
add
add
jmp
jae
mov
popa
outsl
popa
add
fsubrl
pop
call
push
push
sub
sub
dec
pop
call
push
push
push
push
push
push
call
add
mov
mov
jns
fiaddl
add
mov
add
jb
mov
add
xchg
add
fstpt
add
bound
add
leave
add
add
sub
pop
xor
pop
push
push
push
push
call
in
add
add
mov
add
push
mov
add
lahf
mov
xchg
add
in
repnz
je
loopne
jecxz
movsb
xchg
xlat
jns
add
std
add
add
add
add
mov
lcall
lock
pop
push
lea
push
push
call
cmpsl
pusha
in
add
icebp
js
sti
loope
add
xchg
add
fstp
add
ja
clc
lds
add
in
hlt
pop
pop
push
rol
shl
sub
lea
pop
pop
push
push
call
pop
ja
add
pop
add
add
add
int
mov
xlat
push
add
push
add
movsl
pop
add
add
add
in
push
lods
mov
stos
jb
sahf
aam
mov
test
cwtl
call
movsl
add
add
out
fldl
add
in
clc
lcall
push
push
lea
push
push
push
push
lea
push
call
nop
bound
mov
add
ljmp
mov
fiadds
add
mov
hlt
add
add
add
movsb
add
add
leave
push
shr
pop
ret
push
xor
pop
push
push
sub
shl
pop
mov
push
xor
pop
add
push
sub
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
pop
mov
in
flds
add
cmpsl
push
add
loop
fsubrl
loop
add
out
xchg
add
add
shlb
add
icebp
add
ret
add
add
add
add
push
xchg
or
hlt
xchg
rolb
pop
push
push
push
push
push
lea
push
push
call
add
add
shll
add
add
test
add
pop
push
jle
bnd
add
add
mov
add
lret
add
pop
or
cmc
pop
push
pop
push
push
call
mov
jo
mov
add
push
add
add
out
push
xchg
out
loopne
mov
mov
add
jne
jge
pop
loope
aam
add
add
mov
jbe
clc
test
pushf
test
lods
add
add
fdivr
add
xchg
cli
add
fildl
push
cmp
push
lea
push
lea
push
lea
push
push
call
leave
js
lds
mov
lods
aad
popf
push
out
pop
pusha
popa
aad
pushf
mov
xchg
lea
leave
jae
cltd
sub
pop
sub
push
push
push
push
push
lea
push
call
aam
xlat
in
in
out
add
add
add
jmp
mov
sahf
iret
add
add
test
sub
pop
mov
push
push
call
enter
into
add
pop
faddl
loope
in
add
mov
mov
push
fiadds
add
add
mov
mov
mov
imulb
cmpb
mov
pop
repnz
mov
add
sbbl
mov
add
clc
pop
shr
push
push
push
push
push
lea
push
push
push
push
call
add
add
pop
add
incb
insb
nop
pop
mov
push
out
add
add
flds
mov
rolb
enter
cld
push
jns
cltd
fdiv
add
add
add
add
add
lcall
ficoml
fistpl
pop
js
fsts
add
mov
pop
hlt
push
push
push
call
add
sub
in
pusha
add
cli
stos
add
mov
add
jp
fisubrl
xchg
add
test
sub
pop
pushl
popl
push
push
push
lea
push
call
data16
loope
add
arpl
gs
pushf
loop
xchg
fdivp
add
add
mov
add
std
add
add
addr16
mov
rclb
fistpl
jae
add
add
add
scas
ljmp
jae
add
add
add
lcall
jnp
push
shl
not
ror
sub
pop
add
push
add
add
pop
xor
push
push
push
push
push
push
lea
push
push
push
lea
push
call
push
add
add
filds
lea
movsl
int
outsl
cmpsb
fstpl
js
jge
add
xchg
add
out
jle
add
std
push
lods
insb
lret
add
add
stos
cmc
add
lcall
adc
push
rol
pop
mov
add
push
sub
pop
xor
push
pop
rol
push
lea
push
call
add
lods
data16
push
loop
arpl
add
mov
xchg
add
xchg
add
fildll
add
add
in
add
lahf
fdivrl
add
add
add
fsubr
pop
add
addb
pop
nop
nop
push
sub
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
jl
add
leave
add
fcoml
aad
xchg
add
movsl
mov
arpl
out
popf
pop
movb
lret
add
add
int3
add
pop
nop
push
push
push
push
push
push
lea
push
push
call
je
mov
mov
add
mov
jnp
push
lods
xlat
mov
add
add
add
in
loopne
lcall
push
inc
pop
inc
push
xor
not
pop
nop
push
not
pop
nop
cmpb
jne
push
push
push
push
push
push
push
push
push
push
call
add
add
add
mov
add
add
divb
mov
ret
negl
add
int3
aam
int
add
in
add
popl
test
mov
mov
sahf
add
add
in
fnstenv
in
fcomps
inc
pop
ss
push
push
push
push
lea
push
push
call
int
xchg
lock
add
add
add
add
lods
jle
mov
add
add
cmpsl
add
add
pop
pop
cltd
add
mov
int
fadd
add
add
add
add
pusha
mov
int
ja
scas
fadds
jmp
mov
in
call
nop
push
lea
push
push
lea
push
push
push
call
fstps
add
add
scas
add
iret
add
stos
mov
push
add
ja
add
mov
shll
add
add
add
mov
add
fisubl
lahf
mov
add
add
cmp
je
push
pop
nop
push
push
push
push
push
call
add
push
jecxz
out
add
add
sahf
popf
ja
cmpsl
jge
popa
jl
shrb
test
pop
jno
add
mov
fsubp
jmp
mov
add
add
mov
nop
push
add
shr
pop
inc
nop
push
push
push
call
fisubs
stc
js
xchg
lods
add
rolb
xchg
repnz
sti
data16
jae
pop
jecxz
add
addl
clc
mov
xchg
mov
pop
ret
stos
les
add
xchg
out
xchg
add
insb
add
add
lret
fildl
out
add
jne
mov
out
add
hlt
pop
nop
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
cmpb
fcmovu
jnp
roll
mov
fwait
push
pusha
loopne
add
lret
imul
pushf
mov
add
rolb
add
addb
lcall
mov
add
xchg
cwtl
notl
mov
add
mov
add
out
sub
pop
cmp
jb
push
lea
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
lods
add
cmc
add
in
add
mov
add
pop
xchg
xchg
add
roll
mov
arpl
insb
pusha
add
mov
mov
mov
add
out
icebp
sub
pop
xor
push
lea
push
push
call
add
add
add
rolb
ljmp
mov
mov
add
add
into
mov
add
mov
mov
out
jnp
leave
loop
test
jnp
test
mov
jle
testl
add
test
mov
add
lcall
add
add
push
push
push
push
lea
push
push
push
push
lea
push
call
add
loopne
mov
fwait
add
test
jae
out
aad
in
int
fistps
push
scas
jne
add
int3
add
lret
lods
jns
imull
add
ja
icebp
jmp
test
rcl
lods
out
add
add
add
add
pop
mov
push
add
shl
pop
add
movzwl
push
inc
dec
dec
pop
mov
push
lea
push
push
push
lea
push
push
call
add
add
rolb
add
add
push
add
mov
lods
xchg
mov
out
add
cmpsb
mov
in
call
push
push
push
call
loopne
add
add
add
sahf
add
test
out
jle
add
lock
fiaddl
add
js
xchg
add
mov
mov
mov
add
pop
jo
pop
mov
mov
push
sub
dec
pop
xor
push
push
call
xchg
add
add
add
mov
lcall
fiadds
push
add
in
add
in
add
fisubs
cmpsl
stc
pop
test
add
jno
jae
enter
add
mov
in
clc
pop
xor
push
rol
rol
sub
pop
shl
push
shr
shl
pop
xor
push
lea
push
push
call
jns
mov
add
add
icebp
shrb
cmpsl
cwtl
cmpsb
add
stc
test
jmp
mov
shlb
testl
into
add
mov
gs
lds
add
imul
iret
add
add
pop
add
add
test
mov
in
hlt
lcall
loope
xor
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
pop
sub
pop
pop
add
add
add
mov
push
add
ja
jne
popf
add
xlat
mov
add
push
xchg
add
sub
pop
shl
push
inc
add
pop
xor
push
push
call
stc
clc
filds
add
mov
mov
imul
mov
mov
add
enter
add
bound
jp
lret
mov
test
cmpb
push
push
mov
xchg
jb
mov
lods
gs
add
add
lcall
roll
hlt
push
lea
rol
pop
pop
push
sub
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
cmc
in
mov
pop
add
add
mov
mov
std
pop
stc
add
add
add
pushf
stos
add
clc
into
movsl
add
loope
movsb
add
icebp
enter
fadds
push
add
mov
test
add
jp
add
sub
pop
pop
push
push
call
add
popf
popf
mov
lea
mov
mov
test
fiaddl
push
add
iret
jae
add
add
roll
cmc
add
add
add
fucomp
add
gs
in
clc
lcall
push
shl
shl
pop
ret
push
dec
shr
pop
push
push
add
pop
mov
push
shr
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
bnd
add
lea
fldt
shr
add
int3
loopne
add
pushf
nop
add
addb
mov
add
lods
jne
std
std
cmp
push
int
pushf
in
rcr
movsl
sub
pop
push
push
push
call
lret
pop
movb
mov
add
add
in
nop
stc
add
add
xchg
lret
add
rolb
sub
pop
push
mov
push
dec
inc
pop
mov
push
shr
shr
add
pop
mov
push
ror
shl
add
pop
test
je
push
rol
pop
mov
push
add
ror
inc
pop
test
je
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
lahf
out
nop
js
ror
add
add
add
in
add
hlt
js
add
cmc
xchg
add
js
add
testl
aad
or
add
pop
mov
push
push
push
call
add
mov
cltd
add
xlat
push
add
xchg
mov
add
add
add
add
rolb
add
fwait
add
lds
lcall
push
add
sub
pop
cmp
je
push
inc
xor
pop
test
je
push
sub
inc
pop
mov
push
sub
inc
not
pop
inc
push
lea
push
push
lea
push
push
call
fidivl
fimuls
cltd
add
mov
xchg
add
add
add
clc
clc
outsl
int3
add
jl
cltd
add
add
test
arpl
jbe
jne
add
flds
iret
ljmp
xchg
add
add
push
add
mov
sub
pop
cmp
je
push
ror
not
pop
test
jne
xor
push
push
push
push
call
push
add
push
jp
add
add
add
icebp
cltd
xlat
xchg
add
scas
add
mov
loope
pop
add
add
add
shlb
movl
push
add
call
loopne
add
mov
mov
add
lcall
push
sub
rol
pop
pop
push
push
push
call
add
add
add
loope
add
push
add
rolb
mov
rclb
add
add
sub
pop
pop
pop
push
push
push
push
push
push
call
pop
mov
add
popa
mov
add
into
movsb
add
push
nop
lea
add
add
scas
push
push
pop
xchg
add
stc
add
fmul
sub
pop
leave
push
shl
shl
sub
shl
pop
ret
mov
push
add
pop
inc
push
pop
cmp
jne
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
cwtl
jnp
mov
out
into
add
mov
add
xchg
add
movsl
mov
xchg
xlat
jle
add
add
ja
add
jae
pop
add
push
mov
sbbl
js
cmpsb
jae
enter
add
mov
add
add
sub
pop
lea
mov
push
rol
lea
dec
pop
test
je
push
push
push
push
push
push
lea
push
call
out
push
lcall
add
int
fmul
add
add
add
add
cmp
int
add
iret
add
pop
push
imul
mov
jecxz
add
xchg
xchg
add
push
add
add
incb
rolb
add
out
push
out
mov
mov
add
hlt
sub
pop
mov
add
push
push
push
push
push
push
lea
push
lea
push
push
call
loopne
jmp
add
add
add
sahf
div
addb
push
into
add
icebp
mov
mov
push
data16
add
je
add
imul
jp
aad
add
scas
mov
shll
cmp
jne
mov
push
add
add
pop
test
je
push
push
push
call
fucomip
add
jno
incb
in
scas
add
iret
ja
jbe
pop
fistpl
mov
add
add
mov
shlb
cmc
roll
sbbb
add
sub
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
call
mov
add
icebp
fnstsw
lret
add
add
ror
xchg
add
fadds
jecxz
add
add
int
nop
mov
lock
jns
mov
loopne
test
jmp
push
push
push
push
push
push
call
pop
add
mov
loopne
scas
add
hlt
ficoms
add
add
add
jl
nop
add
nop
mov
add
sub
pop
xor
push
push
push
push
lea
push
lea
push
call
aad
mov
nop
add
cmpsl
add
fdiv
add
push
add
sahf
mov
jae
jl
jmp
ljmp
add
pushf
jmp
lcall
push
push
push
push
push
push
push
push
push
push
call
out
xlat
mov
les
out
pop
add
mov
add
mov
outsl
in
cmc
sar
add
pop
scas
push
add
jnp
add
xchg
std
divl
outsl
jecxz
pop
aad
pop
add
mov
jmp
jmp
jge
cli
add
jl
push
add
mov
fdivr
lcall
pop
push
push
push
call
add
jo
out
jle
out
hlt
ljmp
testb
cmc
push
add
in
arpl
mov
jecxz
add
push
add
aad
add
add
jne
in
jle
add
pop
pop
push
lea
dec
lea
pop
leave
push
dec
sub
dec
pop
ret
push
push
lea
push
push
push
push
lea
push
push
push
call
add
push
hlt
add
andb
add
out
arpl
add
mov
insb
out
jge
jmp
jo
add
add
shl
out
add
add
nop
shlb
add
add
lcall
inc
lcall
not
ror
add
add
pop
pop
pop
push
shl
shr
rol
sub
pop
pop
push
sub
pop
leave
push
push
push
push
push
push
push
push
lea
push
push
call
mov
out
add
add
scas
filds
add
add
add
add
add
add
mov
divl
aam
outsl
data16
cmpsb
out
add
fiaddl
push
lahf
nop
mov
test
mov
repnz
jo
mov
repnz
filds
cmc
add
add
add
lcall
or
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
popf
out
xchg
add
add
add
lds
js
cltd
ja
loop
scas
add
pop
push
rcl
aad
icebp
mov
cltd
sub
pop
pop
push
sub
sub
sub
pop
pop
push
add
pop
pop
push
xor
sub
not
pop
pop
push
pop
leave
push
shl
not
pop
ret
xor
cmp
in
cmp
xor
adc
and
adc
dec
cmp
sbb
adc
cmp
xor
adc
jb
adc
add
add
subl
ret
xor
sarl
out
ja
in
lods
adc
xor
test
dec
sbb
or
xchg
push
mov
movsl
rcrb
mov
push
mov
popa
outsl
cltd
and
or
jge
inc
dec
push
mov
jbe
pop
mov
cmc
sti
mov
in
mov
test
andb
and
dec
xor
cmpsl
xchg
xor
mov
add
sbbl
hlt
movsb
fstl
ret
inc
adc
push
repz
inc
in
push
dec
je
inc
in
xor
in
sbb
push
and
inc
mov
mov
mov
aas
popf
xchg
mov
lock
sbb
mov
popa
test
sub
stos
rorb
data16
arpl
and
or
mov
mov
xor
mov
sub
lea
pop
stos
ss
cmp
pop
dec
push
xchg
insb
lods
outsb
scas
jae
div
addr16
stos
pop
xlat
fstpt
add
in
sbb
mov
mov
cmp
add
fcomi
cmp
mov
mov
sub
insl
fdivrs
popa
repz
in
outsl
mov
jbe
movsl
xor
mov
mov
mov
data16
adc
adcb
add
jge
popf
pop
addr16
lods
add
xor
or
push
xor
xchg
orb
pop
mov
push
mov
mov
push
jnp
leave
add
scas
mov
scas
lret
pop
lods
int3
ffree
mov
loop
sbb
dec
mov
fnstcw
mov
int
dec
stos
cmp
test
repz
or
faddl
jbe
in
inc
lret
cmpsl
add
insb
inc
sahf
adc
jl
sub
sub
pusha
movsl
das
xchg
repz
and
mov
mov
out
mov
pop
int
inc
jmp
xchg
sbb
pop
jnp
jnp
dec
ficoms
adc
or
fucom
xor
sbb
pop
lock
push
mov
push
fdiv
xchg
jne
pop
xor
jno
les
pop
dec
xchg
je
pop
ret
imul
les
pusha
sbb
ja
adc
idivb
test
sbb
repnz
dec
sar
pop
fstps
pop
jns
jg
lods
repnz
lret
lds
sub
pushf
sbb
sbb
imul
jo
sbb
iret
ljmp
cmpl
clc
cmpb
call
add
pop
lea
outsb
pop
mov
jne
je
cs
in
leave
and
jge
adc
stos
outsb
inc
out
push
push
jae
outsl
jb
dec
scas
xor
jo
inc
add
jne
jo
mov
ss
sbbb
push
jae
stos
and
test
pushf
cld
pusha
cld
mov
into
aaa
dec
mov
sub
icebp
pop
cltd
dec
mov
xorb
inc
repz
cmp
mov
sti
inc
mov
cwtl
xchg
hlt
pusha
or
ja
rcr
btc
or
pop
jnp
xchg
and
jnp
jno
mov
adc
mov
mov
enter
pop
lea
int
flds
and
jno
jbe
mov
fs
int3
mov
ljmp
and
imul
lret
pop
push
int
scas
loopne
loopne
mov
out
es
scas
and
or
std
fisubrs
and
popf
mov
imul
insb
push
mov
das
jg
scas
dec
push
adc
sub
cmp
push
sbb
inc
cmp
push
sbb
imul
loope
jne
fucomi
ss
xor
jns
mov
pop
test
sbb
sub
test
mov
jg
jno
inc
fcmovbe
dec
sub
int
dec
hlt
fstpt
push
shll
mov
inc
addr16
add
adc
sbb
mov
adc
mov
scas
pop
repz
pop
jo
mov
mov
adc
imul
mov
push
gs
cmp
ja
movsl
loopne
daa
push
or
cli
mov
inc
xchg
fsub
jno
sub
and
push
lahf
std
sub
sub
enter
dec
jb
mov
repnz
les
push
or
es
adc
sub
imul
sbb
bound
xor
lock
js
push
in
dec
and
arpl
xlat
ficompl
lahf
ret
dec
mov
adc
outsb
fsubl
cmp
xchg
in
push
mov
iret
ljmp
imul
ja,pn
jl
into
in
icebp
negb
into
cltd
mov
rorl
dec
adc
add
icebp
jns
xchg
mov
xchg
lcall
repz
aad
inc
pusha
jecxz
sbb
call
int
dec
add
incb
aaa
jp
and
cmp
sub
call
dec
jle
sbb
xor
aam
mov
inc
ret
or
fucompp
fs
ret
mov
sbb
push
jbe
mov
dec
push
das
sbbl
scas
scas
lods
or
jp
ljmp
lret
aas
xorb
sti
inc
les
xchg
je
imulb
test
dec
push
aas
imul
div
bound
pop
out
xchg
test
dec
sti
psraw
lds
sub
cmpsb
jb
jns
adcb
xchg
mov
pause
jbe
xchg
push
add
adc
inc
movd
lods
add
std
and
addr16
push
inc
mov
mov
sti
mov
enter
sahf
mov
inc
imul
mov
fstpl
jecxz
jbe
jbe
in
cs
or
js
dec
imul
int
les
and
stc
mov
mov
or
push
dec
add
adc
push
pop
insl
sbb
jp
push
and
xchg
mov
nop
mov
fiaddl
jae
fildll
push
adc
xchg
push
pop
add
lds
fimuls
fnstcw
push
mov
push
stos
push
repnz
mov
jae
stos
mov
insl
adc
pop
mov
cmp
cmpsb
xchg
push
fsubl
cwtl
inc
inc
ss
or
xchg
jmp
push
jnp
pop
add
inc
pushf
sub
sub
dec
mov
roll
lret
cli
popa
mov
icebp
outsb
jne
cmp
ret
jge
les
test
mov
sbb
ja
loopne
push
outsb
mov
sahf
lea
mov
out
out
imul
jl
ret
or
fxch
sub
inc
bnd
adc
fbstp
mov
stos
dec
pusha
sub
lods
dec
mov
push
aas
nop
ret
movsb
cltd
int3
cmpsl
sub
pop
jg
imul
inc
jecxz
adc
sbb
popf
push
xlat
mov
inc
fucomp
loop
andb
scas
pop
sbb
inc
add
or
movsl
mov
int
jge
shlb
es
sbb
or
cld
stos
int
pop
enter
call
stos
sub
pop
mov
push
mov
xor
pop
fwait
add
jns
xor
mov
imulb
call
jb
mov
dec
enter
rcll
dec
cmp
mov
cltd
shll
fmuls
sbb
sub
push
dec
xchg
lock
jnp
in
pop
or
push
mov
inc
push
dec
cmp
mov
push
movsb
mov
pop
shrb
call
dec
mov
lret
imul
jecxz
mov
lcall
addl
adcl
sub
mov
lret
mov
mov
push
arpl
out
cwtl
std
jl
xor
and
shr
fistpll
push
stc
and
nop
jmp
mov
mov
mov
dec
fdivp
adc
out
mov
add
mov
ret
cmpsb
cmpsl
mov
fwait
lock
jae
dec
and
fstl
push
scas
inc
inc
test
shlb
jmp
jae
inc
mov
sub
test
sub
push
sbb
push
ds
push
adc
cmc
xchg
fdivs
stos
jg
mov
xorb
int3
sahf
mov
dec
push
jbe
aam
sbb
mov
xchg
inc
dec
adc
daa
mov
imul
jl
dec
add
mov
mov
xchg
lcall
pop
push
push
sbb
cwtl
add
fcoml
jecxz
and
mov
cmp
fs
add
std
pop
repz
cmp
call
xchg
mov
push
lods
sbb
jne,pn
sbb
std
xchg
mov
add
test
fldt
sti
roll
add
nop
icebp
push
and
leave
or
mov
sbb
jg
push
hlt
dec
outsl
jb
mov
mov
push
out
js
in
sbb
adc
ss
cmp
js
loopne
lods
sbb
shlb
rolb
mov
mov
fistpl
imul
add
test
lods
sbb
or
enter
out
jl,pt
push
mov
jb
lock
add
lcall
mov
into
movd
or
xchg
inc
dec
push
xchg
fidivrs
push
jno
add
inc
shlb
test
dec
test
sub
ret
pop
movsb
cmp
and
push
mov
fsts
or
push
mov
jmp
push
cmp
scas
jne
mov
dec
std
jg
xchg
popf
test
mov
xchg
inc
orl
in
push
inc
insl
sbb
pop
jb
cwtl
imul
pop
or
adc
sbb
xchg
insb
shl
sub
and
adc
or
clc
and
pop
aad
insl
sbb
push
inc
jb
sbb
dec
add
adc
dec
jl
sbb
sbbl
dec
sahf
mov
sbb
insb
adc
enter
and
subb
fdivrs
adc
loope
sbb
pop
cmp
adc
into
sarl
dec
xlat
nop
cwtl
cmp
fisubrl
ljmp
loopne
rcll
xchg
repz
jne
mov
push
xor
dec
mov
shlb
fisubs
cli
pop
pop
jge
addr16
outsb
jb
cmp
xor
mov
inc
fidivs
vpmadcswd
insl
sbb
sahf
insl
fwait
icebp
sub
push
test
add
sub
dec
movsb
rcr
je
pop
inc
lods
lods
push
cmpl
add
test
cmpl
loopne
mov
orb
mov
scas
ret
mov
or
or
insb
xor
adc
test
mov
icebp
sub
sub
fsubs
cltd
cmp
cli
mov
lahf
or
in
lods
rcrb
lea
mov
pop
or
and
lods
pop
int
mov
xchg
daa
fldpi
mov
cmc
jle
fwait
out
fs
je
test
push
sbb
outsl
test
mov
insl
jg
je
cmp
ret
push
outsl
xor
mov
lods
mov
or
lea
vprotb
dec
fdivl
dec
outsl
adc
pop
fsubrs
gs
fstl
data16
gs
push
pop
and
add
les
nop
and
dec
sbbb
mov
push
aaa
aaa
imul
push
ljmp
add
mov
test
mov
popa
xchg
sti
inc
xchg
sar
in
lcall
sti
sbb
push
push
adc
aam
ficoml
pusha
iret
fnsave
dec
ret
dec
inc
pop
dec
mov
add
jle
fistps
faddl
ret
xchg
mov
lret
mov
rorl
test
mov
divl
and
jo
stos
mov
dec
lret
filds
dec
mov
arpl
mov
jno
push
push
fidivrs
je
lahf
mov
stc
setl
push
mov
frstor
add
fnstcw
mov
fbld
outsl
jg
stc
xchg
mov
lock
insl
push
add
and
int
adc
pop
ljmp
jnp
sub
or
and
test
mov
nopl
sahf
push
xchg
arpl
xchg
out
mov
mov
fldt
jle
and
and
jns
and
cltd
adc
stos
not
cmpsl
mov
out
repz
lds
push
in
and
dec
lea
std
push
int3
mov
insb
inc
adc
adc
or
dec
js
sub
or
jo
adc
ss
cmp
xchg
scas
mov
add
or
lret
xor
mov
cmp
mov
lock
push
and
pop
testb
icebp
inc
in
jbe
jg
jo
mov
sub
shl
push
xor
sbb
or
inc
add
popa
mov
outsl
add
add
sbb
sar
pop
mov
fwait
jnp
jnp,pt
push
nop
incl
add
mov
hlt
pop
incb
pop
in
pop
cmp
addr16
out
cmp
mov
cmp
sub
and
lahf
inc
aaa
xchg
jb
xor
mov
pusha
jmp
inc
xchg
add
es
jp
iret
sbb
imulb
cmc
dec
adc
jbe
inc
push
push
inc
ljmp
and
jno
out
fiaddl
add
adc
ret
lock
scas
lock
pop
xchg
test
aam
add
sbb
adc
aad
jmp
xor
bound
mov
insb
mov
fwait
pop
add
pop
mov
pop
mov
addl
out
scas
sti
out
dec
lahf
mov
pop
xchg
cmp
lock
mov
dec
fnstcw
daa
movsl
push
sub
or
aaa
dec
or
daa
jmp
out
aad
xchg
repnz
popf
fsubrl
stos
roll
incl
fs
jle
cmp
dec
sahf
outsb
fiaddl
fwait
out
or
cmc
push
data16
jo
repz
or
fdivrl
inc
or
cmp
aaa
sub
lret
sub
ljmp
xchg
and
aad
leave
div
or
and
ljmp
xor
mov
inc
push
fnsave
scas
mov
lret
cmp
or
cs
adc
pop
popf
and
or
jnp
fisubrl
push
pop
ss
stos
inc
mov
daa
mov
pop
mov
mov
push
jl
pop
outsl
fmuls
fdivl
int
xchg
stos
out
push
stos
pop
jae
pop
ret
lds
and
movsb
mov
dec
xchg
aam
and
mov
int3
repnz
mov
stos
pop
fidivl
pushl
fmull
repz
or
in
jb
jle
jg
push
adc
das
mov
popf
push
call
loope
clc
pop
gs
sbb
jl
push
cs
xchg
jo
mov
repnz
mov
cmp
fwait
popa
xorb
ffreep
fistps
xchg
push
xchg
or
out
or
mov
mov
inc
or
xchg
jno
lods
sbb
stos
jbe
fs
scas
jbe
mov
pop
xor
ljmp
ret
xchg
or
in
in
sub
popf
into
ja
mov
lods
ljmp
int3
aad
xor
lds
jle
lds
sub
adc
push
pop
sub
push
mov
dec
xchg
insl
push
pop
negl
cmc
mov
pushl
nop
ds
out
xchg
or
xor
adc
add
fcomps
cmpsb
int
cmp
jae
sbb
mov
mov
test
mov
jbe
repnz
jbe
push
mov
jp
sidtl
sar
mov
push
add
sbb
or
sub
cmpsl
into
mov
xor
xchg
in
test
mov
xchg
lahf
insl
loope
shll
push
or
dec
mov
push
fdivr
dec
addb
outsl
and
cmp
ds
add
xor
jb
and
adc
cmc
xor
add
add
and
cmp
sub
push
mov
jb
lds
sub
add
pop
sbb
push
out
pop
into
and
xchg
inc
add
insb
lret
stc
lds
or
jge
or
aaa
in
nop
adc
inc
mov
jns
xchg
imul
std
mov
cmp
insb
and
test
adc
and
xor
mov
cs
test
jnp
dec
pushf
test
jns
in
dec
adc
push
jb
movsl
pop
jge
repz
pop
pop
mov
dec
out
add
sbb
push
fmuls
outsl
push
cs
jno
adc
mov
pop
adc
sub
mov
repnz
mov
adc
pusha
mov
jno
jne
out
mov
jg
fdivrs
push
mov
fucomi
or
jle
out
push
mov
cmp
jecxz
fwait
in
cld
push
mov
mov
add
push
jne
jno
je
sub
push
inc
lahf
push
cwtl
lds
incl
and
mov
jecxz
and
add
sub
dec
mov
popa
xorb
sbb
sub
fiaddl
mov
pop
jbe
in
pop
or
pop
enter
out
xor
cmpsb
imul
mov
or
dec
add
stos
daa
cmp
enter
loop
xchg
and
adc
outsb
popf
scas
xchg
icebp
pop
cmpsl
inc
add
mov
and
pop
mov
cmp
ret
cmp
sbb
pusha
push
and
cmpsb
and
dec
mov
add
jns
test
sti
sbb
mov
jg
jne
in
add
inc
rolb
jge
lret
fcoml
add
outsb
dec
jecxz
xchg
push
mov
add
push
call
popf
fnstcw
cwtl
lods
fmull
dec
repnz
inc
dec
cmp
into
outsb
sbb
test
roll
scas
in
and
ret
movsl
add
cmp
inc
mov
fisttpll
jge
shr
jge
cld
push
cmp
add
imul
mov
mov
daa
sbb
data16
clc
sar
sarl
incb
arpl
pop
mov
mov
mov
ret
lods
dec
xchg
cmp
test
sbb
mov
and
jp
xor
cmp
pop
adc
iret
fwait
pop
push
mov
outsb
push
inc
push
lock
and
jecxz
adc
cmp
nop
rcll
test
repz
sub
and
pop
test
jne
dec
sbb
int
in
aad
or
sti
or
inc
jns
lods
mov
outsl
cmp
sti
add
cmp
mov
mov
push
jno
jns
rorl
filds
std
dec
repz
lahf
adc
leave
leave
nop
repnz
out
mov
addr16
xor
popa
push
pop
pop
xor
adc
mov
cwtl
fdivrp
ljmp
xchg
inc
fadds
stc
jg
mov
testb
js
ret
jmp
imul
xorl
xchg
pop
fidivs
push
vpsrlw
fcomps
and
mov
mov
arpl
fsub
and
inc
xlat
popf
ret
mov
mov
add
in
dec
les
icebp
jg
push
lock
lret
sbb
push
adc
xor
mov
movsl
push
and
lods
mov
sarb
jno
shl
jns
mov
arpl
jle
sub
cs
xor
mov
addb
inc
sub
mov
and
data16
xchg
fstp
xor
adc
in
scas
lods
int3
cmpb
cmp
cmc
mov
fdivr
int
inc
mov
xchg
mov
pushf
xorb
pop
jle
and
or
cmp
push
ret
movsb
and
inc
pop
push
adc
inc
push
cmpsl
nop
inc
jl
and
insl
adc
into
or
ret
fstpl
fwait
sbb
addb
mov
out
pop
lea
mov
or
xchg
xchg
lds
dec
push
mov
xchg
lods
shl
popa
into
mov
jb
cmp
inc
je
test
xchg
and
loope
jns
dec
add
iret
adc
lret
shl
lds
test
or
xchg
gs
pusha
jp
mov
xchg
pop
fsts
mov
dec
call
test
outsb
push
leave
mov
adc
rol
mov
xor
sbb
sahf
into
fcoms
pop
adc
in
pop
push
cmp
gs
or
xchg
pop
stc
xor
jbe
pop
mov
mov
mov
mov
fmull
imul
pop
adc
cmpl
flds
add
int
mov
inc
or
push
mov
aaa
insb
stc
mov
in
adcb
push
rcll
sbb
in
xor
dec
jnp
push
xor
pop
les
icebp
pushf
fstp
or
inc
push
dec
xchg
push
xor
mov
into
in
xchg
adc
fwait
lods
arpl
sbb
push
cmpsb
sbb
fcoms
enter
pop
dec
xor
aam
cmp
inc
lahf
ds
xchg
add
scas
cmp
add
push
dec
jle
sbb
cmp
icebp
lds
mov
mov
mov
and
in
lds
lret
sbb
sbb
jge
and
pop
cli
andl
popf
popf
xchg
out
pushf
push
out
shr
mov
insl
cmp
dec
frstor
adc
outsb
lret
std
fdiv
push
lods
sub
push
sub
push
mov
pushf
movsb
mov
jae
jne
jbe
cmpsl
inc
and
add
gs
cltd
mov
fucom
lea
jns
inc
lret
adc
pop
add
mov
lds
push
fstps
rol
xchg
mov
stos
mov
pop
mulb
jnp
test
push
iret
daa
daa
jb
into
fiaddl
nop
xor
mov
lret
cmp
mov
mov
addr16
push
xchg
mov
call
mov
js
jp
movsl
jae
jecxz
in
cmp
dec
and
imul
dec
ds
mov
sbb
push
xchg
fistpl
test
cmpsb
add
sti
out
pop
and
inc
inc
sbb
bound
jmp
xchg
mov
mov
sahf
mov
xor
cli
mov
and
jns
out
pop
pop
push
pushf
out
imul
sub
sub
push
dec
nop
lahf
mov
xor
or
repnz
inc
rcrl
faddl
cmp
repnz
fwait
jae
in
cmpsb
mov
cmp
sub
pop
pop
in
movsl
pop
mov
jmp
divb
mov
mov
pop
and
test
lock
insb
and
dec
clc
cmpsb
or
add
and
out
inc
test
test
pop
imul
dec
pop
inc
lea
repz
or
sbb
pop
popa
jae
int3
das
pop
and
lods
aad
scas
aad
lds
inc
fwait
push
xor
ja
jge
addr16
fisttpl
pop
in
xchg
in
jge
mov
arpl
cmp
dec
pop
jae
xor
mov
mov
in
mov
aam
sbb
cld
lods
iret
fwait
xchg
dec
popa
pop
cld
adc
add
lods
incb
lcall
rolb
cmp
lea
cmp
mov
in
imul
dec
and
das
call
or
jne
test
call
in
inc
push
lods
in
inc
mov
adc
xchg
and
mov
dec
sti
rcll
clc
and
mov
inc
lret
loopne
xchg
icebp
iret
sbb
xor
ss
into
mov
js
sub
daa
repz
roll
xor
sbb
jecxz
in
xchg
inc
stos
inc
pop
repnz
xor
ja
jp
mov
and
out
mov
inc
rdmsr
sub
mov
sbb
mov
ljmp
mov
jmp
andl
xchg
arpl
leave
stos
mov
pop
std
sbb
lret
imulb
bound
into
dec
inc
enter
imul
lret
dec
jmp
inc
pop
out
adc
cld
xchg
fistps
into
inc
add
pop
pop
repz
adc
mov
into
insb
xor
pop
call
push
loope
out
dec
sub
push
xchg
or
lds
arpl
push
xchg
mov
or
push
adc
or
dec
xor
daa
dec
frstor
imul
push
mov
movsb
out
sbb
ss
popf
iret
fldt
mov
dec
xchg
mov
bound
add
enter
xchg
popf
stos
jno
insb
jae
iretw
fwait
inc
mov
sbbl
mov
and
cmpsl
insl
and
and
sbb
add
mov
std
mov
push
arpl
lahf
test
pop
mov
lahf
mov
adc
pushl
lahf
jb
mov
mov
cli
adcl
xchg
mov
popf
cli
dec
push
dec
out
and
xor
pop
cld
imul
loop
push
lods
add
ljmp
jmp
mov
mov
lcall
es
xor
popa
sbb
inc
mov
sub
decb
xchg
mov
push
mov
repz
sti
jecxz
push
sbb
icebp
addl
outsb
fisubs
lret
inc
les
jne
xchg
cmp
in
push
dec
loop
jmp
and
mov
xchg
lock
xor
mov
mov
or
mov
adc
cmp
outsl
push
les
xor
shrl
adc
fldenv
lret
sub
scas
jns
fwait
adc
aad
push
fisttpll
pop
mov
cld
pop
inc
test
in
and
cmp
in
fistpll
cs
inc
nop
das
mov
jnp
inc
add
pusha
xchg
push
jle
sub
adc
outsl
mov
test
fadd
les
or
adc
lock
xchg
xlat
cltd
add
jmp
arpl
xchg
cli
mov
mov
adc
inc
xor
int
pop
lsl
cmpsb
adc
es
cli
fcompl
roll
lods
mov
push
fisttps
jb
fstpl
enter
cmpsl
shll
mov
lret
mov
adcb
jl
fsubs
push
ss
sti
lds
lret
les
dec
pop
mov
in
cmc
adc
cmpsl
or
mov
shrl
lds
movsl
fmuls
ljmp
fistpll
roll
pop
mov
lret
int
stc
out
lods
cmp
pop
in
fisubrs
mov
jge
adc
lret
mov
fiadds
mov
cwtl
sub
jne
add
mov
fstps
pop
mov
lods
or
int3
or
xchg
aad
sbb
xchg
std
rcpps
pop
pop
mov
and
mov
arpl
stos
jp
mov
into
out
and
pop
xor
imul
sub
mov
bound
mov
jl
mov
in
xchg
inc
sub
sbb
xlat
das
dec
test
sbb
jmp
jae
jg
push
adcb
mov
rcr
idivl
xor
daa
lret
xchg
adc
xor
bound
sti
dec
jle
mov
sbb
lret
rcrb
sub
add
mov
lret
dec
mov
and
popf
add
aas
cmpsb
andb
cmpsl
arpl
mov
jmp
mov
or
sahf
mov
add
jmp
xchg
mov
dec
bound
pop
iret
inc
lcall
sub
push
stos
sti
and
pusha
das
and
push
imul
lea
pop
dec
mov
movsb
arpl
das
imul
and
mov
jno
xor
sub
out
test
sbb
jl
loope
fdivp
dec
mov
mov
scas
enter
xor
jmp
cmp
adc
and
sbb
push
call
pop
adc
clc
loope
scas
ret
mov
outsl
sbb
and
les
mov
pusha
and
or
popa
or
mov
cmp
data16
sbb
lcall
mov
nop
and
clc
xchg
and
adc
push
and
out
repnz
or
das
popl
movsb
ds
fs
scas
cmpsl
dec
popf
inc
shll
jae
js
jmp
mov
mov
fdivrs
push
add
inc
ja
jle
dec
adc
rcr
pop
int
test
lods
sub
mov
cmp
mov
lock
and
scas
adc
jbe
int
and
arpl
scas
in
add
and
sub
test
mov
mov
push
lcall
daa
jnp
jp
hlt
lret
mov
pop
or
add
xchg
xor
fildll
xor
sahf
fcomip
lahf
in
data16
mov
lods
mov
in
add
inc
ror
dec
xchg
inc
and
fisubs
xor
and
test
loope
das
sti
out
or
lret
jb
in
push
jl
loope
add
xchg
subl
add
or
sub
inc
shrb
mov
out
mov
push
push
adc
pop
cmp
add
fisubs
push
icebp
loopne
sbb
dec
aaa
rorl
imulb
out
push
std
and
aas
in
mov
mov
lods
in
ja
arpl
repnz
into
fmulp
hlt
or
daa
lods
icebp
cmpsb
lea
rcrl
nop
insb
jmp
mov
mov
cwtl
lods
mov
mov
mov
pop
sub
mov
cmp
xor
gs
cmp
cmp
cmp
jmp
and
insl
jl
adc
sub
pop
jnp
jo
stos
or
xchg
popf
and
xchg
mov
clc
xchg
in
sub
xor
adc
fmuls
cld
xor
shr
outsb
pop
sbb
inc
gs
cmp
push
test
test
enter
push
jmp
fwait
cmp
mov
addr16
push
xor
cwtl
mov
fcom
mov
dec
repz
mov
cmpsb
xor
nop
sbb
lea
push
dec
and
mov
and
addr16
fldt
pop
cld
cmp
jl
repz
movl
insl
popf
add
pusha
jge
mov
stos
xor
sub
sub
xor
popw
or
push
adc
pop
cld
int3
pop
lcall
mov
jecxz
and
ss
pop
mov
mov
add
lea
mov
les
sahf
into
inc
jno
cmp
das
xorl
shrb
lahf
je
dec
or
cmp
or
mov
adc
outsl
jns
add
xchg
sub
jno
rcrb
pop
jb
out
mov
lret
stos
je
outsl
fs
pop
scas
xor
fdivp
or
jmp
xlat
or
adc
pop
sub
call
aad
adc
test
fnstsw
js
outsb
rorl
adc
in
pop
xor
popf
outsb
mov
jl
rclb
xbegin
mov
fcoms
das
push
hlt
in
fimuls
dec
cmp
lea
mov
call
icebp
ss
mov
stos
in
into
fiadds
movb
pop
jp
loop
popa
xchg
pop
sub
and
fwait
push
mov
add
gs
xchg
adc
jecxz
aas
sub
jo
testl
cmp
test
in
pop
xor
out
sbb
cmpsb
in
gs
jns
cmc
pushf
out
cmc
pop
cmc
ficoml
out
add
cltd
mov
lahf
lret
stos
ds
pop
int
xorl
jmp
sbb
insb
jbe
xor
jg
arpl
dec
leave
push
negl
pop
cmp
sbb
jae
pop
dec
dec
lahf
addb
cmp
dec
mov
sahf
adc
inc
mov
mov
push
faddl
out
mov
and
push
push
adc
js
sub
push
mov
push
ja
flds
lahf
pop
or
mov
arpl
cltd
dec
sbb
loopne
int3
aaa
push
popf
mov
pop
or
fists
es
sub
addl
inc
jns
mov
jecxz
and
out
fiaddl
pop
repz
xchg
or
sub
xchg
mov
mov
sarb
add
push
fcoml
loop
sarl
fidivl
je
movsb
sub
push
leave
loope
pusha
clc
test
daa
jecxz
pop
xor
loop
enter
push
outsl
arpl
mov
adc
inc
xchg
jnp
mov
jp
jp
test
cmp
imul
mov
inc
push
shlb
ret
fwait
movsb
pop
repnz
ljmp
call
imul
inc
insb
xor
into
inc
cmp
jg
dec
pop
xchg
jne
adc
fsubrs
xor
xchg
cli
mov
fists
fisttpll
test
jg
pop
push
push
mov
xor
mov
pop
or
sbbl
mov
addr16
lods
sbb
jecxz
xchg
add
jnp
lahf
mov
xchg
in
mov
enter
xor
dec
out
mov
mov
sub
into
jg
mov
inc
inc
rol
enter
sbbb
sbb
sbb
lds
mov
sbb
inc
outsb
mov
ljmp
das
lret
popf
pop
dec
andl
leave
dec
push
adcb
cli
mov
jno
ljmp
dec
push
outsl
mov
pop
scas
mov
dec
xchg
push
ret
and
cld
jg
das
stc
out
jb
imul
dec
and
jg
and
adc
mov
test
dec
test
hlt
fchs
mov
rorl
cmp
cmp
xor
fnstsw
push
push
jns
add
cmp
fs
sub
pop
and
cs
in
add
add
aaa
cmc
enter
ficoms
imul
pop
push
sub
bound
mov
mov
cmp
push
outsl
jle
sbb
pop
mov
jmp
outsl
xor
rcrb
mov
push
test
mov
pop
push
shlb
xor
or
dec
mov
mov
sbb
push
mov
push
test
mov
jno
imul
arpl
adc
movsb
or
mov
aaa
shl
mov
pushf
dec
int3
std
pusha
loop
sbb
sti
icebp
lock
int
outsb
pop
add
xorl
and
rcll
int
rorb
les
int3
js
out
je
dec
inc
adc
jle
mov
add
xlat
push
mov
jecxz
ds
xor
lds
xchg
out
pop
inc
xchg
pop
jo
xchg
ja
mov
xchg
mov
imul
xlat
out
int
arpl
pop
inc
call
mov
or
in
add
imul
fistps
cmpsb
out
sub
sbb
pop
adc
mov
mov
ljmp
jnp
jns
mov
pop
jle
adc
xchg
out
mov
or
test
dec
jbe
test
int3
jae
fcmovnu
lock
fsubrl
stos
fchs
sub
ljmp
mov
movsb
lds
pop
movsb
mov
int3
lcall
lahf
mov
aaa
les
cmpb
inc
pusha
mov
imul
inc
insl
fdivrs
mov
rcrb
mov
gs
cmpsb
jmp
cltd
repz
lret
clc
lcall
sub
pushf
pop
bound
sub
js
hlt
out
out
and
mov
jp
and
cli
add
cs
dec
lock
call
dec
stc
mov
and
jo
xchg
cld
mov
js
mov
mov
bound
loopne
xchg
xor
call
popa
add
andb
ds
je
pop
mov
or
xchg
loope
xorb
xchg
adc
xchg
ja
pusha
test
hlt
shl
jbe
mov
inc
add
pushf
pop
nop
into
pop
jns
das
or
push
xchg
loopne
icebp
mov
fimull
test
lock
and
inc
test
pushf
in
jne
jae
push
push
shrb
out
ja
outsl
lods
cmpl
aad
add
call
lods
cwtl
std
add
cltd
outsl
and
loop
sub
fdivrp
lcall
andb
enter
js
push
mov
inc
adc
mov
loope
out
jb
mov
xchg
mov
shr
fimull
subl
icebp
push
pop
lds
mov
cvtdq2ps
jp
or
popf
mov
and
xchg
lret
pop
sub
adc
andb
and
pop
add
xor
fcoml
pushf
and
and
lods
sbb
xchg
fnstenv
sbb
xor
out
daa
loope
jl
hlt
push
sub
ss
mov
subl
cmp
sub
lahf
or
sbb
push
xor
cmp
mov
or
fadd
mov
ja
push
daa
fidivrl
or
add
outsb
or
call
popa
push
rcrl
pop
test
and
popf
aam
mov
fsts
into
inc
lods
es
addr16
and
pushf
outsl
jp
mov
test
outsl
jecxz
je
sub
inc
sbb
mov
push
test
sbb
jns
jmp
xlat
push
cmp
xlat
sbb
mov
cwtl
leave
mov
lds
and
lods
imul
ljmp
sbb
call
sub
rcl
fisubs
push
scas
test
inc
xor
imul
arpl
push
mov
mov
mov
mov
push
or
mov
enter
fs
aam
mov
popa
rcrb
negl
sub
mov
cwtl
shrb
pop
cld
adc
icebp
jbe
shll
ret
cmp
sbb
test
repz
cltd
mov
and
jbe
popf
outsl
dec
lods
sbb
push
loopne
pop
or
int
stos
push
add
movsb
dec
mov
xchg
fwait
in
ss
pop
push
cltd
add
pusha
mov
insl
insb
mov
mov
pop
insl
pop
adc
lock
or
scas
cmp
out
int3
out
lock
mov
js
cmpl
dec
sarl
or
bound
das
cmpsl
insl
lods
jb
add
jge
cmpsl
mov
ss
mov
int3
mov
mov
or
xor
ja
test
shl
aad
fsubp
loop
mov
aaa
aaa
lods
dec
cmpsl
push
mov
movsl
cmp
push
je
addr16
inc
mov
sbb
insb
fstps
inc
cwtl
dec
or
cld
mov
xchg
jns
inc
jb
enter
sbb
nop
mov
inc
pop
inc
je
loope
mov
cmpsb
jp
pop
mov
bnd
bound
inc
mov
xchg
push
mov
pop
mov
lods
pop
pop
push
bnd
fistps
into
arpl
dec
or
out
or
pop
push
dec
push
int
shll
inc
cmp
cltd
sbbb
outsb
jecxz
fadds
sub
inc
pop
subb
fwait
push
sti
rcrb
dec
ror
or
jl
xlat
enter
pop
test
ljmp
adc
pop
loop
xor
xchg
jge
loop
popf
fisttps
outsb
popa
std
addl
push
scas
shlb
xchg
add
jno
fsubl
nop
les
mov
cmpsb
imul
lock
out
xor
dec
sbb
pop
iret
adc
pop
cld
mov
adc
xor
and
mov
js
sbb
fisubrl
rcl
jmp
fidivl
jo
cltd
ret
pusha
aaa
mov
mov
mov
repz
sti
aas
cmp
pop
imul
je
fwait
xor
add
mov
loope
dec
mov
shrb
in
push
jmp
add
inc
fwait
scas
inc
add
mov
in
pop
pop
mov
jb
test
mov
push
push
ficompl
arpl
xor
into
enter
push
int3
jbe
mov
sub
lret
jne
lds
movsb
add
sbb
sub
fcoms
addb
or
mov
jbe
mov
insl
ja
js
and
push
incl
cld
inc
fsubs
in
hlt
les
jbe
sbb
and
sbb
cltd
or
dec
sub
dec
pop
cmc
sarl
push
mov
mov
fldenv
or
aas
in
or
popa
cmp
jns
dec
adc
negl
sbb
lcall
adc
gs
or
popa
dec
push
loopne
pop
data16
jae
cmc
mov
insb
sub
test
add
repnz
je
in
in
mov
pop
and
ret
xor
mov
ss
mov
pop
cmp
aad
lret
out
mov
mov
imull
lret
lock
pop
inc
mov
loopne
sbb
jnp
xchg
cmovbe
imul
jns
out
aam
xor
pop
outsb
loop
inc
xor
out
push
test
lcall
mov
sub
lea
test
ret
sub
push
mov
fwait
mov
pusha
jno
repz
ljmp
cmp
aas
or
ss
mov
push
lods
push
jae
jecxz
add
dec
xchg
jns
test
jge
push
jnp
lods
addr16
xor
loopne
js
sub
in
repnz
dec
xor
jbe
jle
cmp
sti
in
loope
push
popa
cmp
pop
push
dec
mov
jae
gs
repz
cmpsl
fsts
jp
mov
dec
rorl
ss
jo
repnz
mov
jo
xor
jl
xor
fstpl
popf
ja
jae
and
movsl
in
jns
gs
xlat
fisubrs
inc
push
stos
gs
push
adc
and
nop
pop
aam
mov
fwait
push
shlb
popf
mov
aas
daa
ljmp
lret
lcall
push
inc
es
ftst
scas
and
mov
add
loop
leave
int
kmovw
jae
pop
rclb
or
add
add
jle,pn
scas
add
enter
gs
sti
add
adc
mov
mov
sbb
cmc
mov
push
dec
lcall
scas
icebp
std
or
sbb
sbb
sub
pop
cmp
bound
mov
xchg
mov
push
adc
and
fwait
dec
or
jo
dec
fistpl
adc
movsl
mov
sub
rcr
pop
or
add
in
lods
adc
mov
jo
push
fnsave
sti
ds
shll
rcrl
rcrb
inc
push
adc
int
cli
mov
sbb
idivl
cmc
sbb
add
dec
repnz
into
pop
and
mov
test
push
cmp
add
ror
sbb
out
inc
in
jae
mov
xor
mov
lds
movsb
jecxz
loopne
mov
dec
mov
jbe
push
inc
sbb
cltd
cmpsb
movsl
mov
mov
test
push
push
popa
jg
push
mov
lock
mov
or
push
fsubr
ret
pushf
shl
push
pop
xor
cld
adc
imul
mov
mov
push
xlat
popf
add
fnstcw
jns
aas
ja
push
sub
pop
mov
enter
into
arpl
sub
jge
ds
mov
sbb
leave
cmp
cs
xchg
pop
xchg
outsl
xor
sbb
cli
cwtl
jbe
push
and
enter
xor
pop
pop
pop
xchg
and
or
push
sub
xor
rorb
data16
xchg
add
clc
out
cmp
cmp
push
mov
pop
fstpt
mov
xchg
in
aaa
insb
push
js
push
in
add
mov
sub
and
push
sub
stc
aad
push
fistpl
cltd
add
sbb
nop
jl
cmpsl
mov
push
aas
aaa
out
nop
lret
mov
or
push
cmp
push
and
es
push
mov
and
xchg
adc
imul
roll
cmp
in
mov
subb
push
scas
dec
cmc
pop
jl
sub
les
adc
push
push
pop
push
pop
das
loopne
mov
and
jecxz,pt
call
outsb
adc
int
mov
das
and
sbb
add
inc
in
js
test
xor
add
add
jge
mov
adc
test
xchg
out
cmc
pop
sub
int
insl
lods
scas
cmpsl
xlat
repz
mov
xor
mov
test
in
sbb
push
ret
lahf
push
inc
add
sbb
inc
out
and
sub
shrl
adc
nop
mov
gs
add
mov
gs
jbe
loopne
imulb
and
loope
fbld
hlt
repz
push
scas
push
loope
fdivs
loopne
xor
scas
mov
jno
push
or
jb
jmp
out
cs
mov
push
cmp
lock
inc
mov
jg
mov
divl
popf
int
cltd
scas
mov
movb
xchg
arpl
in
gs
push
sarl
clc
cmpsl
inc
imul
adc
mov
fcompl
adc
cmpsb
daa
xchg
fs
ljmp
jbe
adcl
push
cmc
adc
mov
or
pop
arpl
mov
adc
cwtl
out
push
jne
int
lret
leave
cmc
inc
lcall
pusha
mov
dec
in
pop
adc
jno
cmp
cs
or
dec
aaa
or
add
xor
xchg
sbb
or
sub
dec
std
or
sbb
out
mov
mov
push
add
punpckhdq
sub
xor
cmpsb
fdivl
test
ds
sti
mov
imul
shl
xor
jae
mov
outsl
aas
imul
sub
mov
dec
fpatan
mov
and
xchg
data16
sbb
dec
dec
fidivl
mov
xor
or
add
lods
rcrl
push
test
gs
adc
adc
pushf
mov
dec
and
sub
or
pop
fwait
mov
or
push
popf
mov
cld
add
rclb
add
mov
pop
imul
xor
or
es
mov
xor
pop
repz
idivb
fiadds
jge
push
mov
jne
cmp
fcmovnbe
int
mov
pop
jno
pop
add
push
shlb
push
jne
cmp
inc
dec
sarb
inc
cltd
or
and
aas
dec
cmp
add
jg
loop
push
setle
push
inc
call
mov
push
pop
lahf
mov
sbb
xor
push
jne
dec
dec
roll
enter
mov
pop
mov
add
pusha
fdivp
jns
cmp
jecxz
mov
sub
iret
hlt
ja
cmp
push
shrl
mov
mov
icebp
out
imul
jae
clc
dec
inc
mov
mov
add
aas
ds
mov
enter
xor
out
nop
add
into
lock
or
inc
inc
mov
lret
inc
add
xchg
imul
push
mov
shlb
mov
xlat
hlt
es
cmpsb
dec
dec
fisttpl
inc
pop
lods
inc
inc
adc
daa
jecxz
cmpsl
push
mov
test
mov
mov
or
shl
mov
add
lods
ss
les
lods
fdivrl
cmpsl
aas
sbb
scas
ficomps
pop
addr16
cmp
in
adc
cmpsb
ss
xchg
pop
sub
out
dec
inc
outsl
scas
mov
mov
cwtl
xchg
cltd
pop
cs
cmpsl
push
ljmp
mov
mov
mov
aad
sbbb
subl
mov
push
fs
cmp
pop
decl
push
popf
inc
jg
repnz
loop
pop
test
inc
cmc
push
jg
ret
arpl
push
inc
sbb
mov
xchg
pop
push
push
pusha
and
or
pop
nop
shrl
addb
push
stos
push
mov
pop
in
rolb
enter
repz
jnp
dec
xor
mov
fwait
ljmp
in
push
lock
jle
add
test
adc
adc
fcomps
incl
out
jns
inc
into
add
pop
push
sbb
jae
adc
aad
imul
daa
mov
xchg
cmpsb
stos
pop
pusha
xchg
scas
jge
push
enter
push
in
pop
xchg
mov
loop
lahf
shrd
and
cmpsl
repz
push
out
cmp
test
add
addl
in
pop
adc
mov
jo
into
leave
xchg
mov
lret
pushf
push
or
mov
lahf
lods
scas
outsb
outsb
inc
inc
mov
adc
leave
jno
dec
sbb
and
js
sbb
cmp
pop
fnstcw
mov
cli
inc
ss
shlb
pop
ss
loopne
cmpsb
inc
and
out
sbb
in
pop
and
push
repz
push
icebp
inc
sub
xchg
iret
dec
cli
sub
ljmp
push
inc
mov
jge
cmpb
movsl
push
and
sbb
push
push
push
adc
pop
push
out
test
jmp
scas
dec
and
cwtl
fucompp
inc
andl
inc
ljmp
mov
lds
mov
in
dec
in
shll
imull
insb
dec
inc
dec
andb
loopne
xor
repnz
push
jno
pop
mov
xor
lret
loop
mov
push
shl
adc
das
sub
sbb
or
or
or
cmp
std
aam
fldcw
add
lahf
repz
insl
and
shl
aam
sub
fistpl
jl
jl
subl
cmp
je
jns
outsb
lret
push
data16
jmp
sti
jne
sbb
xchg
dec
cwtl
pop
fnstenv
movsb
inc
bound
and
dec
aas
outsl
lcall
xchg
out
xchg
mov
test
in
adc
inc
jno
mov
push
xlat
mov
test
rcrl
mov
inc
shll
gs
cmp
adc
jg
jb
je,pn
inc
inc
xor
xor
and
sub
pop
mov
adc
ficoml
sbb
insb
pop
addr16
mov
mov
sahf
pop
loope
mov
jnp
xchg
dec
mov
sub
mov
xchg
fdivp
xchg
ficomps
push
cli
push
mov
cmp
mov
push
cmpsl
mov
cmc
lock
jne
pop
sub
in
fisttpl
mov
divb
jle
mov
stos
and
jmp
arpl
arpl
push
shl
rolb
out
cwtl
lahf
es
std
push
imul
shrl
out
repz
test
sbb
pop
shl
movsb
dec
in
imul
out
decl
adc
out
dec
fnstenv
mov
and
xchg
ljmp
sbb
mov
das
add
cmp
les
push
jge
scas
push
lret
clc
mov
mov
es
pusha
je
xchg
cmp
mov
lods
aas
dec
cmp
mov
xor
jg
mov
lds
aas
sub
cwtl
ror
adc
test
cmp
mov
iret
iret
and
cmp
cld
dec
mov
jg
mov
jae
pop
stc
lds
in
jle
inc
sbb
std
push
adc
cmp
rcr
add
mov
cltd
push
fcoms
jg
fwait
enter
pushf
clc
daa
or
mov
sbb
cmp
gs
lahf
inc
sub
cmp
cmpsb
test
imul
int
rcll
daa
dec
mov
jp
pop
dec
cmovo
shlb
jae
scas
sbb
lcall
cmp
lahf
cmc
mov
and
fldcw
dec
adc
or
popa
imul
push
jl
ret
lret
sbb
add
pop
pop
push
sbb
or
sti
push
adc
mov
hlt
call
ja
pop
aas
mov
sub
sub
idiv
pop
adc
push
or
nop
insl
mov
inc
jge
imull
push
adc
das
int3
jnp
pop
add
mov
das
pop
mov
inc
push
lret
cld
into
jg
sub
or
mov
xchg
mov
adc
test
xor
loopne
push
add
xor
push
or
ljmp
cmp
adc
repnz
gs
mov
int3
mov
xchg
cmp
sti
in
lcall
mov
pop
add
add
inc
xchg
mov
sub
pop
mov
aad
inc
fiadds
cmpl
add
mov
inc
les
sub
mov
mov
mov
mov
fwait
enter
push
xchg
cmp
mov
mov
fwait
jg
sub
pop
and
xor
push
shrb
ja
mov
cmp
inc
mov
ret
xchg
jle
dec
mov
dec
divb
jge
mov
push
ljmp
aad
pop
push
and
ds
mov
cli
sti
mov
or
xchg
mov
repnz
sbb
sbb
fs
add
ss
mov
push
push
out
outsl
dec
or
mov
cmpsb
xlat
cmp
jae
or
call
adc
dec
lods
imul
or
ficomps
repz
jae
enter
push
fdivr
push
or
pxor
mov
pop
pop
push
and
cltd
fwait
sub
jmp
adc
mov
or
les
mov
movsl
pop
insb
fisubrl
lret
test
loopne
fisubrs
sbb
cltd
dec
fistps
mov
cmpsl
pushf
pop
mov
pop
dec
xorl
cmc
xchg
mov
inc
push
dec
ret
jno
jmp
lods
leave
jp
sti
xchg
fwait
inc
sarb
dec
sub
sbb
icebp
jecxz
inc
sbb
pop
enter
call
in
fidivl
mov
xchg
js,pn
jp
in
pop
adc
rclb
mov
adc
jo
lock
pop
stc
stc
test
stc
xchg
inc
adc
mov
outsl
loope
adc
xor
icebp
xchg
imul
mov
xchg
cmpsl
pop
in
xor
jbe
repnz
mov
xchg
mov
and
fstl
pop
jns
mov
pop
mov
jge
lret
shrl
js
movsl
data16
imul
push
adc
cmp
inc
dec
cmp
ja
lods
ds
sbb
pop
in
scas
mov
ja
loop
int
xchg
mov
inc
pop
jle
lret
xchg
test
dec
mov
push
or
cmp
adc
mov
mov
shlb
aam
aam
cmp
out
jno
add
cltd
xor
inc
inc
call
add
cmp
es
outsb
mov
mov
push
pusha
mov
pop
mov
outsb
sti
outsl
repz
jecxz
clc
mov
push
mov
sbb
out
es
mov
addr16
jecxz
cmp
xchg
leave
cmpl
mov
xchg
cmpsb
add
or
push
jno
adc
mov
add
jno
ficomps
xchg
icebp
arpl
stc
adc
movsb
and
cltd
mov
mov
nop
sarl
divl
jmp
add
inc
iret
mov
and
pop
test
sbb
aad
imul
aas
loope
orl
icebp
pop
sub
loope
dec
stc
dec
push
sub
cmp
pusha
imull
add
stc
push
arpl
ret
adc
neg
jb
sbb
xchg
pop
stos
xchg
leave
or
in
xor
xchg
and
test
mov
dec
adcb
cmp
pop
scas
insb
sti
clc
dec
mov
arpl
dec
pusha
mov
jge
pop
inc
movsl
in
icebp
pop
orb
sub
mov
cwtl
data16
inc
mov
lds
lods
iret
test
lcall
mov
es
ret
push
fwait
and
jp
iret
xor
mov
into
mov
jbe
loopne
addl
mov
lcallw
pop
popf
inc
sbb
fstps
gs
movl
or
cmp
mov
aaa
mov
sub
scas
movl
cmpsl
pop
in
sbb
dec
or
lret
push
into
icebp
mov
hlt
jae
cmp
mov
xchg
push
imul
int
ljmp
rcrl
mov
sub
sbb
adc
fistl
leave
xlat
mov
push
pop
mov
imulb
xchg
sbbl
loop
cltd
push
cmc
dec
in
push
mov
in
iret
out
and
mov
mov
push
aas
xchg
push
cmp
in
bound
push
imul
popa
ficoml
push
xor
pop
adc
pop
dec
imul
push
push
sub
stos
dec
repnz
test
pop
es
hlt
and
sbb
jmp
loopne
cmp
inc
call
es
outsb
sub
pop
nop
ficomps
dec
push
push
cltd
cmc
js
adc
sub
jmp
or
movsl
pusha
lret
xor
cmp
or
stos
fwait
mov
lret
ret
xchg
mov
mov
mov
loope
cwtl
adc
add
xchg
mov
add
rorl
movsl
adc
cld
leave
jg
xchg
test
orb
mov
mov
lcall
and
adc
mov
jb
fisubs
jmp
mov
sahf
jo
jae
sarl
push
adc
std
popl
mov
inc
daa
adcl
out
cld
cld
mov
js
loope
xchg
dec
aam
call
xor
enter
test
sbb
sbb
leave
cwtl
mov
adc
jle
mov
fs
ljmp
mov
inc
dec
movsb
push
or
push
movsb
push
jle
addr16
sbb
add
addr16
or
jl
aas
push
push
int
jl
pop
xchg
int
and
mov
std
jns
enter
cmp
cmp
ret
jo
sbb
jmp
mov
cmp
test
fistpl
sbb
adc
xchg
dec
push
pushf
mov
in
adc
out
sub
cmpsl
sub
push
inc
sbb
or
out
jb
cwtl
bound
jns
pushf
push
mov
gs
out
pop
pop
je
inc
and
push
testl
gs
cmpsb
mov
add
movl
daa
push
push
pop
jecxz
gs
inc
fsub
roll
mov
xor
sub
xor
mov
aas
outsb
mov
cld
jb
sbb
dec
add
pushf
sahf
clc
sub
or
icebp
fsubrl
inc
inc
xor
movsl
mov
scas
pop
das
test
sub
mov
das
pop
lock
in
adc
or
loopne
enter
ret
push
xchg
jecxz
in
mov
std
inc
call
mov
shl
xchg
in
adc
cltd
js
xorb
lcall
push
adc
push
scas
scas
sub
pop
lods
ljmp
jmp
movsb
mov
jp
scas
sbb
push
mov
push
jg
jno
sbb
xchg
jmp
jno
adc
add
xchg
xchg
pushl
and
push
inc
and
clc
orb
xor
add
push
xchg
xchg
xchg
movsl
jb
jmp
movsl
icebp
mov
cmp
ss
sub
jge
push
dec
push
lcall
test
stc
adc
jbe
arpl
enter
sub
stos
repnz
in
push
mov
sti
sti
and
ljmp
je
shl
push
xchg
push
cmp
xor
jne
push
arpl
jae
sbb
stos
xchg
mov
aaa
lock
sub
mov
mov
push
pushf
in
lods
std
xchg
pushf
and
dec
mov
add
lret
das
lea
mov
ljmp
lcall
mov
mov
out
les
mov
pop
sbb
sbb
fiaddl
push
aad
cld
les
xor
into
ret
mov
pop
repnz
in
lahf
push
mov
dec
pop
mov
addb
inc
sbb
mov
testb
pushf
and
sub
mov
and
ds
fcmovbe
cmp
push
xor
xor
sbb
jg
and
incb
pop
adc
je
std
les
lcall
pop
shl
push
push
fwait
xchg
rcrl
mov
add
add
stc
mov
nop
jns
mov
rcr
into
xchg
pop
cmp
dec
and
mov
mov
push
int3
xlat
fidivrs
pop
sub
fs
add
push
mov
dec
aaa
mov
scas
mov
into
fbstp
bnd
cli
add
lds
jne
adc
lods
adc
dec
stos
push
dec
jmp
dec
mov
ret
sub
add
jae
fnsave
jae
test
mov
and
imul
test
mov
andb
lods
icebp
daa
and
es
inc
or
sub
mov
and
call
and
dec
add
mov
xchg
es
pop
or
mov
push
mov
shll
mov
enter
mov
hlt
sbb
sbb
add
sub
repz
icebp
jl
inc
pop
sahf
cltd
pusha
jne
jno
out
cmp
aaa
bound
push
or
sub
xor
cmp
cwtl
and
mov
jns
aas
insb
jns
enter
inc
sbbb
in
dec
and
dec
bnd
int3
pop
push
fstps
sbb
inc
lret
cmp
out
push
loopne
inc
and
insl
mov
and
cwtl
sub
fimuls
sbb
ret
xor
pop
add
and
jb
jae
mov
popf
xor
fcom
jl
lret
and
mov
notl
adc
jno
scas
rcr
dec
xchg
xor
shrl
nop
push
adc
xlat
and
xchg
daa
push
inc
mov
decb
mov
xchg
jno
push
jns
cmp
dec
xchg
xchg
enter
jae
mov
dec
dec
or
push
lods
dec
dec
clc
push
cli
push
add
outsb
mov
jno
lods
cmp
lret
push
xor
flds
rcrb
dec
sub
xor
femms
adc
xchg
fwait
imul
adc
fs
mov
xchg
rcrl
pop
jae
rcll
pop
sbb
daa
pop
addr16
or
mov
leave
and
cmp
inc
pop
mov
dec
ret
mov
adc
out
daa
sbb
pop
xchg
les
and
insb
fcompl
scas
mov
jb
arpl
scas
std
out
lods
data16
xchg
dec
pop
std
jb
pcmpeqb
pop
jne
fildl
xchg
mov
and
pushl
cwtl
lcall
fstl
dec
in
add
pop
out
sbb
jmp
data16
std
or
into
cmp
enter
or
icebp
lods
pop
aam
inc
pop
push
and
inc
call
dec
or
int3
ret
add
sbb
js
lods
arpl
in
dec
adc
pusha
gs
xor
inc
stc
mov
lret
or
jle
enter
xor
mov
lcall
pop
cmp
and
inc
mov
adc
mov
pop
push
shl
aad
out
lock
test
push
xchg
rolb
ficomps
mov
call
ficomps
mov
shl
sub
lret
push
mov
scas
pusha
insl
pop
cmp
aaa
cmp
in
jo
testl
jae
cmpsl
and
pop
andl
push
mov
jle
gs
add
rcrl
xchg
ror
icebp
fsubrl
inc
cmp
movsb
mov
xor
adc
cmc
mov
outsl
and
orb
adc
pop
mov
nop
push
jp
pop
and
shlb
inc
xor
ds
lds
sarl
bnd
and
popa
int
sbb
sbb
xlat
ret
push
inc
add
sahf
shrl
mov
sbb
lock
adc
xor
fsubs
ja
mov
dec
add
shlb
adc
push
cmp
inc
sbb
cmpb
jo
xor
int
sti
pop
aas
add
jge
sub
shlb
popa
mov
stos
xor
out
mov
push
adc
outsb
enter
add
cmpsb
rcr
sbb
mov
movsb
mov
xor
sbb
dec
in
cwtl
mov
or
jecxz
mov
rcl
bound
or
lds
inc
and
clc
inc
inc
mov
xchg
je,pt
aas
rcl
jo
push
mov
aaa
stc
int3
cld
es
lods
ffree
pop
bound
push
push
mov
mov
scas
dec
push
pusha
mov
nop
mov
ja
dec
lret
call
sub
sub
fisubs
pop
jecxz
xor
not
je
mov
addr16
nop
xor
in
dec
mov
jg
adc
dec
mov
pop
aaa
sbb
subl
movsb
pop
js
pop
ja
mov
sbb
cli
cmpl
xor
lods
pop
or
repnz
push
sbb
in
lret
cmp
dec
aas
in
call
push
cmp
mov
mov
pushl
addr16
ljmp
sbb
shr
or
mov
or
cmp
cmp
cmp
sbb
pop
adc
cld
sahf
jne
imul
adc
cmpsb
rcr
dec
cmpsb
sub
pop
arpl
sub
sub
jecxz
jae
mov
add
test
or
popf
ficoms
ret
loopne
insb
fistl
fs
jbe
lcallw
lahf
pop
xchg
in
mov
loope
outsb
adc
mov
inc
pop
add
mov
xor
sub
push
std
adc
out
push
pop
or
lods
xor
cmp
mov
lret
aas
test
xchg
add
mov
or
flds
fistps
and
loopne
repnz
pop
adc
pop
xor
push
sbb
scas
mov
pop
cmpsb
stc
xchg
mov
push
sahf
cmp
mov
stos
mov
mov
fists
mov
jp
sbb
in
jne
sub
xchg
push
aam
and
daa
sbb
jmp
cld
fildll
pop
xor
jns
xor
sub
push
and
lret
xchg
xchg
xchg
push
enter
cwtl
inc
push
inc
add
outsl
std
movsl
inc
add
inc
das
ret
and
pop
adc
xor
divl
cmpsb
xchg
inc
insl
addr16
sbb
popa
xor
cmpsl
cld
je
mov
and
das
pop
movsl
pop
mov
xchg
movsl
iret
cmp
int
pop
dec
je
dec
add
dec
cwtl
arpl
adc
inc
inc
mov
and
das
pop
or
mov
jle
ja
inc
aaa
orl
jb
adcb
mov
inc
jmp
test
mov
insl
mov
lahf
test
je
xchg
cmp
aas
push
int
iret
imul
mov
stos
inc
inc
pop
movsl
scas
jnp
push
in
ja
push
add
out
into
push
mov
dec
rcr
xor
dec
in
insb
mov
aad
mov
jnp
xor
xor
repnz
loopne
jb,pn
cmp
sub
push
and
xchg
sti
shlb
pushf
iret
and
loopne
lret
jns
cmp
orl
and
dec
push
js
out
scas
xchg
adc
cmpsb
push
ret
sahf
imul
xor
sub
sub
lret
jg
adc
scas
loopne
addr16
shrl
push
mov
mov
outsb
pop
push
push
scas
push
mov
cmp
sbb
scas
xchg
or
in
rcr
sti
jecxz
test
push
push
and
fisubs
fmull
dec
add
jnp
mov
mov
and
sub
test
pop
test
pop
fidivrl
and
idivb
sub
inc
and
xchg
in
fisubrl
push
lret
repnz
xchg
stos
xchg
ret
rclb
and
cmpsl
jo
push
pushf
dec
ljmp
sbb
sub
cmp
sbb
icebp
cld
cmp
inc
pop
fbstp
mov
fistpll
cmp
push
inc
push
xchg
out
outsl
push
sbb
sbb
js
insl
mov
ja
pop
pop
jbe
leave
pop
and
ljmp
cli
dec
mov
cltd
movsl
int
out
ljmp
addr16
jp
sub
mov
ret
sti
and
xor
repnz
cs
jg
inc
jnp
mov
mov
jg
ss
scas
lods
flds
or
jecxz
fsubrl
mov
jnp
jne
jg
add
mov
jbe
imulb
inc
xchg
lret
pop
sub
xchg
inc
and
cwtl
loope
inc
rcrl
clc
cwtl
imul
pop
xlat
push
in
insl
mov
loop
scas
adc
xchg
push
push
sbb
test
cmp
mov
iret
scas
cmp
sbbb
push
cli
dec
shlb
shll
jne
mov
aas
pop
jbe
mov
add
jecxz
push
inc
int3
xchg
sub
cmp
push
out
add
ja
imul
aam
cmp
inc
fcmovbe
gs
and
jo
cwtl
and
cld
out
ficoml
fs
out
roll
stos
sub
cmpsb
testb
jbe
in
jmp
shr
pop
lods
cmp
test
int3
clc
es
push
xor
mov
out
cltd
pop
int3
xchg
sub
jno
jnp
pop
ljmp
cs
push
jle
jne
je
sbb
lcall
popa
out
lahf
inc
fs
fxch
dec
mov
push
pop
aaa
mov
push
dec
xor
iret
sbbb
stos
sahf
mov
rol
jl
or
or
xor
pop
pop
imul
xchg
inc
lret
mov
test
mov
clc
jnp
mov
push
mov
fdivs
lods
insl
push
movsl
mov
movsb
add
aas
pop
jnp
mov
cmp
mov
add
flds
dec
sub
fabs
xor
xchg
lods
dec
sbb
inc
cmp
fstpt
aaa
push
ja
sub
xor
fmull
scas
pop
pushw
cmpsb
add
dec
lds
negb
mov
xchg
pop
adc
xor
std
aam
xchg
cmp
adc
stc
in
adc
fstpt
push
cmp
push
out
jb
insb
fs
sahf
daa
push
or
add
mov
sub
cmp
pop
mov
mov
push
and
fwait
clc
push
repnz
addr16
jbe
leave
xor
push
mov
cwtl
pop
scas
in
push
push
jbe
xchg
outsl
pop
in
mov
xor
mov
mov
cmp
ja
inc
mov
jl
mov
std
sbb
rcll
cmp
pop
xor
ret
bound
insb
test
fidivl
aaa
movsb
and
mov
mov
push
mov
cmp
mov
mov
mov
sbb
cs
adc
cli
inc
mov
mov
jmp
rol
popf
pusha
pop
out
imul
aas
inc
test
push
mov
rorb
loope
gs
cmc
call
jnp
in
mov
ror
or
flds
test
gs
cmp
xchg
cmp
sbbb
add
fisttps
insb
ret
or
mov
out
dec
cld
loop
das
int
ja
jmp
sub
sub
bound
push
cmp
cld
insl
cwtl
into
mov
push
cltd
ss
dec
loop
ljmp
out
fsubs
and
cmovp
xor
cwtl
hlt
inc
pusha
pop
jnp
dec
lds
call
scas
movsl
mov
icebp
lods
mov
stos
dec
lock
xor
xchg
rclb
mov
mov
aam
lods
adc
stos
inc
push
cwtl
sbbb
insb
adc
das
enter
cmp
push
into
clc
sbb
pop
pushf
pushf
jns
das
movb
mov
outsb
sub
nop
fst
or
cmp
jo
sbb
jg
dec
std
lods
subb
pop
and
pop
mov
shrb
dec
insb
or
sti
cmp
fwait
lock
jmp
mov
mov
fsubrs
daa
lahf
lahf
mov
sbb
movsl
xchg
mov
adc
add
adc
aas
mov
pop
push
mov
mov
push
jle
inc
sub
dec
dec
pop
rorb
stos
nop
mov
sahf
ret
rolb
imul
test
pop
pop
pop
out
std
dec
inc
pop
fildl
sahf
mov
jns
sub
push
addr16
push
rclb
sub
dec
push
cmp
push
add
popl
insb
iret
and
push
loopne
repz
push
outsl
out
clc
or
and
pop
push
ljmp
ficompl
cmc
decl
std
out
fcoms
cmp
subl
pop
push
sahf
int3
fs
ret
movsb
fs
pop
mov
mov
mov
pop
adcb
imul
push
push
sahf
xchg
fimuls
dec
inc
cltd
test
js
mov
pop
out
test
pushf
inc
add
cmp
push
jge
inc
fwait
pushf
in
fs
imul
stos
push
xlat
pop
out
mov
mov
xor
inc
aad
out
add
mov
add
fnstsw
call
jnp
lret
jl
mov
jge
add
dec
xchg
aaa
pop
mov
aam
stos
sbb
add
arpl
dec
pushf
jle
arpl
in
cmp
sbb
hlt
add
pop
push
and
in
xchg
lock
or
add
inc
mov
mov
enter
test
jae
iret
fadd
test
mov
xor
in
sub
call
add
sbb
xchg
push
out
or
jno
and
sbb
pop
push
sbb
xchg
add
fcom
mov
jg
fs
mov
aad
int3
test
jle
repnz
jmp
ss
sarb
data16
sbb
aas
fs
inc
jle
push
ret
xchg
dec
movsl
in
into
or
cmpsl
mov
das
mov
and
adc
mov
mov
jecxz
sub
stos
iret
mov
insl
cli
ljmp
xchg
ret
xchg
imul
sub
cld
cs
mov
mov
xchg
sub
mov
sbb
push
and
fisubl
sbb
mov
push
test
cmpsl
and
test
stc
sarb
dec
int
lock
cli
sub
insl
in
jg
or
and
lahf
scas
cmp
loopne
into
push
dec
xchg
mov
fadds
sub
out
movl
out
xchg
inc
je
loope
cmc
adc
pop
repz
mov
jno
movsl
shl
pop
jp
fwait
mov
dec
mov
mov
pop
adc
mov
inc
cs
mov
pop
lcall
lret
jecxz
faddp
cs
popf
int
xchg
inc
shlb
fstps
cmc
jmp
pusha
test
xor
es
sbb
out
stc
and
shr
inc
inc
push
xchg
fisttps
enter
and
push
test
das
orb
repnz
mov
dec
add
jmp
fcoms
push
xorb
xor
ljmp
add
pop
out
fsubs
mov
adc
mov
xlat
fbstp
imul
push
fiaddl
aaa
lcall
fsubrl
pop
ss
popa
fsubs
cmc
fisubrl
pop
iret
popf
dec
add
mov
lret
mov
gs
sbb
mov
outsb
pop
lds
adc
lea
xchg
add
call
filds
xchg
add
mov
and
dec
pop
out
scas
data16
cld
fwait
cmp
ret
mull
sbb
xchg
stos
addr16
js
es
es
xchg
cltd
dec
ds
or
sub
mov
jp
into
outsb
ficoml
dec
mov
cmc
mov
cmp
std
test
popf
inc
scas
mov
fs
mov
dec
xor
lock
loopne
jnp
cmpsb
sbb
jno
dec
lods
test
out
in
sti
or
pop
repnz
mov
fildll
cmpsb
dec
out
ljmp
mov
xchg
ss
xor
imul
pop
cmp
out
push
lahf
iret
push
out
fiaddl
fs
divb
iret
repz
inc
fsubl
insl
mov
sbb
inc
push
cli
pushl
shrl
stos
pop
adc
mov
cld
xchg
pushf
sti
inc
lret
idivl
cmp
fdivl
in
movswl
ljmp
or
pop
or
cmp
adc
pop
das
xchg
outsb
test
les
add
stc
mov
lret
sbb
iret
mov
fstps
push
call
std
jb
pop
andb
add
sbb
pop
jo
sub
inc
mov
xchg
xchg
test
sub
pop
in
fimuls
aad
arpl
xchg
insb
inc
cmc
add
aam
imul
jge
pop
lea
or
in
cmp
xor
inc
and
ret
mov
jp
xchg
dec
dec
jb
or
adc
popf
xchg
mov
aas
js
ret
lret
call
adcl
push
je
testb
test
imulb
inc
xchg
xlat
fwait
aad
push
mov
and
lds
xor
sub
lock
mov
cli
fstps
push
add
out
sub
mov
mov
xchg
je
push
ljmp
aad
add
mov
jl
cs
xor
fiaddl
mov
movsl
rolb
add
dec
rcr
ja
push
sbbb
inc
sbb
xlat
and
add
loop
test
mov
sub
cmpsb
loope
sbb
jp
js
jmp
repz
arpl
leave
pop
inc
jb
or
jle
xor
xor
xchg
gs
iret
dec
sub
icebp
adc
jo
push
je
mov
cmpsl
lea
loopne
push
adcb
shlb
pop
pop
mov
push
sub
sub
das
loopne
shll
ja
cmp
lock
pop
aas
mov
or
loopne
xchg
mov
fisubl
rcrl
pop
cmpsb
repnz
mov
jle
nop
lcall
orb
xor
sbb
xor
cmpsl
cmpsl
lock
pop
dec
notl
cmc
push
sar
into
loop
mov
sub
jbe
aam
es
dec
xor
add
mov
jmp
pop
aaa
and
pop
ret
rcrl
mov
adc
dec
jp,pn
jg
inc
sbb
mov
fisubrl
sbb
aaa
jle
fdivs
cmc
mov
add
mov
cld
rclb
jmp
adc
sti
fs
add
pop
xor
loope
ss
xchg
clc
or
cmpsb
xchg
cmpl
clc
xchg
dec
mov
rclb
out
add
icebp
add
pop
jg
clc
and
push
xchg
push
ljmp
lods
mov
fistps
xchg
jo
and
shlb
jnp
in
mov
out
test
out
pop
aad
es
mov
push
or
dec
mov
sarl
mov
call
mov
test
int
mov
push
inc
push
mov
sub
insb
xlat
imul
or
mov
out
xchg
lock
imul
and
pop
mov
inc
psubusw
cltd
pop
fisubs
mov
es
cmp
gs
or
and
aas
stc
mov
pop
stos
xchg
sub
pop
lret
nopl
xor
divl
and
mov
pop
pop
push
mov
lahf
and
mov
lds
pop
std
aas
pop
adc
aas
repz
icebp
hlt
xor
in
outsl
push
sub
mov
es
out
mov
out
std
loopne
push
xlat
jb
loope
sbb
xchg
ss
sub
xor
arpl
mov
call
loope
js
nop
into
mov
gs
enter
add
in
leave
or
and
xchg
pusha
and
sbb
or
pop
in
pop
cmpsb
popa
insb
scas
pop
dec
adc
sub
and
pop
jmp
cmp
mov
mov
cmp
add
dec
cld
imul
jge
and
adc
cmp
pop
jne
mov
dec
jb
push
bound
sti
sbb
enter
cmpsl
mov
jg
loop
call
aad
mov
xor
shlb
stos
mov
fildl
dec
int3
mov
adc
or
jbe
xlat
cmp
adc
inc
lds
xor
mov
push
jg
dec
aam
orl
pop
pop
movsb
and
and
inc
int3
pop
outsl
aaa
ja
jp
sub
movsb
pop
cmp
lret
lret
out
push
ret
fdiv
mov
cmp
jl
pop
and
aas
mov
sbb
cld
testl
lods
in
sub
out
imul
mov
lcall
dec
popa
fiadds
dec
jp
jg
inc
jno
fcmovu
shl
call
arpl
pop
adc
lcall
nop
out
aad
mov
repnz
hlt
jbe
mov
decl
scas
add
cld
dec
inc
pop
mov
fcomps
les
nop
clc
rol
imul
int3
fsubs
dec
jo
mov
inc
sub
scas
dec
mov
aad
inc
push
add
dec
shrb
jo
adc
push
pop
pop
lcall
mov
sbb
sar
mov
mov
jb
mov
test
scas
test
dec
lret
orb
faddl
xchg
sti
mov
jns,pt
out
aaa
fcmovne
mov
xchg
stos
js
rolb
imul
scas
pop
add
js
lret
les
bound
lcall
pop
xchg
dec
lcall
cmp
mov
inc
adc
insl
nop
push
adc
xchg
mov
pop
inc
mov
cmp
lret
cmp
cmpl
nop
loope
inc
inc
fwait
imul
jg
int
idivl
or
adc
in
lock
jo
mov
adc
xor
loope
jecxz
ja
mov
mov
repnz
dec
mov
into
cmp
push
and
lahf
jmp
ret
imul
xor
sub
loope
cmc
cmc
clc
jecxz
inc
and
aas
pop
xchg
into
shl
lds
sbb
jns
out
cmp
adc
es
inc
or
push
mov
popa
aaa
cli
mov
enter
cmp
lahf
in
mov
adc
lret
jns
add
mov
push
pop
addr16
insb
jecxz
lret
sti
push
sets
daa
incb
fst
nop
fists
out
pop
fadds
push
dec
mov
std
hlt
cmp
or
sahf
loopne
inc
fnstsw
ja
nop
xchg
add
mov
push
cmp
push
cmpsl
mov
jg
dec
cs
imull
aad
aas
in
shld
aaa
sub
sub
aad
fisttpl
je
cli
sbb
and
adc
jmp
push
dec
dec
sar
xor
jmp
pop
sub
lock
sahf
movsl
clc
movsb
je
outsb
lahf
repnz
lods
add
bound
jno
rcrb
push
mov
es
nop
rep
aam
jmp
ffreep
mov
mov
jge
jno
mov
sub
cltd
mov
rol
cmc
push
pop
jg
popf
pop
in
enter
lcall
mov
dec
dec
or
mov
inc
movsl
mov
push
add
mov
adc
push
test
cmpsl
sbb
out
pmaddwd
cmpsl
cmpsb
shll
ficoml
cmc
pop
jmp
push
data16
ss
movsb
jbe
hlt
lea
xor
adc
jb
push
pop
scas
adc
ret
jle
push
lret
cs
dec
xor
jbe
cmp
xchg
jb
pop
pop
cmpsl
and
dec
mov
xchg
hlt
jmp
mov
sbb
push
call
out
add
cmp
xlat
push
cmp
in
out
ret
js
ret
test
pop
fcomps
mov
pop
mov
jp
iret
cmc
pushf
inc
dec
adc
inc
cwtl
jecxz
push
pop
movsl
cld
mov
fwait
mov
lods
out
push
scas
into
mov
adc
mov
cltd
or
rcrl
pop
mov
fdivl
jle
add
int
je
ret
lea
in
push
mov
imul
repz
jmp
sahf
mov
or
lock
pushf
jmp
iret
inc
loop
and
and
mov
outsl
ss
adc
enter
sbb
dec
test
xchg
xchg
cwtl
inc
sbb
imul
mov
and
mov
push
sub
mov
or
xchg
ror
inc
test
dec
jecxz
sbb
adc
clc
test
rcrb
test
jo
scas
faddl
rorl
test
daa
xor
and
lret
outsl
or
mov
dec
sbb
mov
sub
test
movsbl
ds
jecxz
push
lds
sbb
xchg
jecxz
add
in
js
idivl
cmp
add
adc
repz
mov
mov
ret
in
xchg
dec
rolb
imul
mov
jb
into
or
sub
sub
cltd
cmp
pop
rcrb
pop
dec
cmp
arpl
in
jecxz
pop
out
xorl
pop
mov
aaa
inc
mov
sbb
sub
dec
fsubrs
jns
pop
lea
sbb
cmc
lds
push
pop
movsl
out
rorl
push
ljmp
adc
lea
mov
jecxz
lea
insl
aam
frndint
mov
push
repz
dec
add
mov
lret
hlt
call
xor
hlt
inc
mul
adc
movsl
in
sbb
mov
or
aas
loope
fisubl
arpl
les
in
cld
adc
pop
mov
mov
popa
sbb
adc
jge
stc
jo
fstl
pop
inc
mov
xchg
or
xchg
loopne
fiadds
adc
dec
and
and
push
push
cmpsb
add
insl
mov
iret
rcrb
pop
add
or
or
xchg
cwtl
shl
jle
ss
adc
mov
cmpsl
negl
stos
jg
leave
call
xchg
frstor
pusha
andl
inc
cmp
roll
shrl
inc
inc
loope
cltd
push
hlt
negl
xchg
neg
and
pusha
xor
test
daa
stc
push
aaa
bswap
mov
test
icebp
xor
adc
rcrl
xchg
xor
xor
sbb
frstor
jnp
popf
bnd
pop
lahf
and
mov
enter
lods
fstps
push
loopne
jbe
mov
push
xor
dec
mov
pminub
xchg
sub
add
popa
rclb
out
add
pop
loop
mov
test
and
out
stos
jno
rcll
inc
mov
dec
xchg
mov
out
push
mov
xchg
rcrb
jno
movsl
jae
and
je
insb
pop
pop
push
cmp
xor
adc
sbb
sbb
les
sub
sub
scas
jne
das
adc
int3
add
mov
out
lea
int3
push
aad
in
divl
mov
xchg
scas
mov
je
fstl
in
push
fcompl
aaa
popa
push
lea
lods
cmp
daa
test
xchg
in
mov
cs
jecxz
gs
mov
arpl
daa
sub
cwtl
scas
xor
mov
xchg
stos
lods
stos
outsl
in
iret
xor
dec
out
lods
loop
or
lcall
fcmovbe
mov
lods
repnz
cs
ret
mov
hlt
je
and
cmp
sbb
dec
fistpll
cli
lock
xchg
dec
jle
xor
int3
mov
ret
fdivl
ds
push
add
xchg
das
mov
mov
faddp
push
out
sbb
into
pusha
lods
sub
out
test
test
inc
mov
cld
enter
popa
sarl
xchg
mov
dec
add
out
pop
mov
or
cld
xchg
mov
lock
push
xor
stc
lahf
mov
js
loope
xor
mov
mov
jb
fnstsw
lods
cmp
fildl
push
std
enterw
into
and
add
lret
xchg
ret
pop
js
rorl
xor
es
sub
jnp
xchg
dec
cmp
jle
jb
sub
in
lea
cmp
xor
lret
stos
or
and
xor
out
movb
loopne
xlat
xchg
sbb
push
divb
dec
fiadds
mov
add
aad
cmovb
fcomip
mov
out
outsl
jbe
mov
stos
xor
or
jnp
mov
inc
and
shl
mov
js
out
sub
xchg
pop
sahf
leave
inc
add
push
test
jnp
pushf
out
idivb
shlb
add
in
push
inc
in
das
inc
enter
mov
xor
stos
sub
lds
shrl
outsb
inc
lret
bound
clc
dec
dec
leave
rclb
jne
faddl
push
pop
pop
stos
lcall
shr
push
jnp
addr16
adc
jnp
xchg
inc
enter
xchg
fcmovne
mov
out
test
cmpsl
dec
loop
dec
xlat
stos
rorl
decb
lret
ja
lret
add
or
dec
jge
lock
push
cmpsb
jne
in
shll
test
inc
inc
adc
les
add
xchg
inc
addl
xorb
out
mov
sti
xchg
fisttps
out
loop
mov
adc
add
cltd
fiadds
or
lods
hlt
inc
push
jbe
bnd
and
aaa
add
int
call
daa
ds
add
push
arpl
mov
jno
xchg
or
jns
pop
mov
cmpsl
pop
add
mov
jns
push
ds
sti
aas
aam
xchg
jo
push
loop
sbb
mov
dec
ja
bound
cmp
cmpsl
mov
mov
mov
inc
mov
jo
loop
xchg
mov
mov
dec
or
ret
ret
pop
cltd
adc
scas
repz
imul
xchg
jne
fs
iret
cmp
xor
call
pop
dec
sbb
mov
push
imul
repz
jle
aas
fwait
sub
in
lahf
adc
fisttpll
inc
jmp
cmpsl
lock
pop
pop
repnz
repnz
lods
pop
bound
shl
add
std
inc
out
out
dec
mov
add
lret
stos
jmp
insb
sbb
cmp
and
jno
pop
rcll
cld
xchg
sub
jb
adc
out
cmp
arpl
lret
or
aam
xchg
stos
mov
cld
xchg
push
mov
pop
sbb
loope
xchg
add
inc
xchg
repz
in
imul
dec
dec
cmp
js
iret
or
jg
lret
xchg
ljmp
dec
mov
stos
sub
shll
adc
int
cltd
mov
pop
xor
daa
push
dec
cmp
cmp
in
mov
dec
add
sbb
cli
xchg
out
cli
dec
jno
cmp
mov
ret
iret
aam
lret
mov
inc
adc
and
test
sahf
cwtl
aam
int
out
cmp
inc
xor
sti
int3
mov
je
test
test
data16
lahf
mov
pop
dec
mov
inc
in
outsl
add
lret
inc
jns
mov
outsl
scas
fwait
inc
mov
int
adc
jle
ja
cmp
iret
and
cli
repz
dec
aam
adc
pop
rolb
pusha
jne
int3
mov
cld
or
aad
and
dec
or
xor
inc
pop
mov
xor
xor
dec
inc
movsl
mov
les
repz
pop
out
lock
in
push
mov
sbb
inc
push
push
mov
mov
push
push
gs
ret
cmp
ficomps
jae
fldt
push
mov
jmp
cli
jp
sbb
shlb
xor
arpl
add
cmc
push
push
dec
push
cmp
pop
xchg
jmp
addr16
and
lods
push
cmp
adc
jmp
cld
clc
xor
rcl
imulb
and
and
xchg
mov
pop
in
fcomps
shlb
and
rorl
les
ret
add
mov
sub
into
cltd
push
pop
test
jg
fs
jle
repz
jl
mov
mov
jb
pusha
cmp
mov
dec
push
clc
loope
sbb
enter
ret
sti
sub
imul
scas
sub
roll
inc
push
stos
and
inc
movsl
clc
xor
out
cmpsb
out
jle
add
xchg
dec
insw
push
ss
loopne
ficomps
adc
hlt
pusha
jle
push
jbe
enter
into
dec
adcb
sub
jnp
js
rolb
lock
mov
inc
jno
call
pop
push
sbb
movsb
in
popl
sarb
cmp
sub
mov
sarl
cmp
cmp
and
jns
and
shl
and
jbe
add
lods
mov
pop
adcl
sub
mov
lret
mov
dec
pop
push
rorl
adc
cmp
inc
data16
shll
xchg
mov
fdivr
xchg
dec
sub
sub
pop
fsubrl
mov
jne
add
outsb
rolb
nop
xor
inc
dec
sbb
pop
jg
addr16
dec
lea
aas
test
sub
into
mov
jae
jo
std
and
lds
repz
hlt
mov
sbb
mov
popa
jmp
icebp
fsubs
mov
pop
push
sub
inc
push
std
xchg
nop
xor
sbb
arpl
adc
or
int3
sarb
push
aam
pop
sti
cmpb
xchg
gs
jo
pusha
lock
testb
in
pop
fisttpll
adc
adc
mov
test
in
in
sbb
shl
roll
ret
cmpb
lret
sbb
in
or
or
inc
xor
rcrb
jle
push
call
ret
push
mov
add
add
xor
fistl
popa
int3
dec
and
xchg
cmp
sbb
hlt
push
orb
add
xor
xchg
and
mov
mov
out
arpl
mov
adc
push
arpl
sub
push
imul
insl
cli
cmp
mov
rorl
sub
lret
mov
scas
shr
mov
mov
push
xchg
xchg
inc
add
outsl
ss
cwtl
add
bound
js
mov
inc
dec
sbbl
xchg
xchg
decb
repz
clc
mov
inc
xor
outsl
ja
pop
popf
das
adc
out
lea
sub
cld
testl
lods
sti
sbb
ret
andl
test
add
lahf
arpl
pop
scas
out
in
cmp
ss
push
or
test
hlt
fisttpl
mov
notb
mov
pop
mov
icebp
loope
inc
pop
add
jnp
xchg
sbb
nop
cmpb
clc
in
mov
xor
mov
lods
and
call
jecxz
sub
pushf
xor
pop
mov
sub
test
popa
jp
fidivrs
jb
cmp
sbb
or
push
lret
sbb
sahf
sarb
push
push
mov
scas
inc
mov
mov
mov
out
int3
push
push
aas
dec
push
lods
cmp
jno
scas
sub
xchg
xchg
inc
lods
jp
pusha
pop
push
sub
and
out
imul
or
push
push
scas
mov
hlt
cli
aas
adc
mov
jne
loop
cmp
jmp
lcall
adc
cmp
jne
inc
adc
xchg
inc
aam
icebp
js
push
mov
and
lods
xchg
mov
lock
cmp
xchg
xchg
mov
inc
iret
adc
rorb
cli
dec
repnz
imul
push
jae
test
push
push
fistl
sub
out
sub
xchg
cmp
enter
push
insb
fmuls
mov
dec
xchg
stc
out
mov
push
pop
mov
bnd
aad
jmp
popa
stos
pop
adc
jno
xchg
scas
insb
out
jmp
xchg
mov
mov
push
mov
sahf
shll
test
mov
inc
cmpb
subb
les
mov
cwtl
fstl
loope
xchg
sub
lods
xchg
xchg
out
lds
int
sbb
aad
xor
aad
ja
les
lods
dec
movsl
cmp
pop
test
push
mov
fwait
ja
or
popa
cmp
or
dec
pop
adc
push
cmp
fcomi
jecxz
inc
aam
loope
mov
ja
lods
in
push
cmpsl
mov
jo
fcomi
mov
test
pop
adc
rclb
rorl
xchg
and
adc
iret
jmp
in
jb
clc
leave
ret
xor
aas
sarb
push
inc
cmp
imul
fdivrl
xchg
jmp
or
add
int
insl
sbbl
dec
or
dec
add
dec
repnz
sbb
add
xor
mov
jecxz
xor
or
cmpl
push
cmp
adc
aad
repz
ljmp
rolb
enter
fs
arpl
lahf
dec
xor
sub
push
xchg
xor
push
xchg
cli
sub
call
lock
imul
ljmp
mov
clc
sbb
sub
js
jmp
mov
out
sti
into
cs
bound
sub
cltd
adc
shlb
cmp
or
push
inc
cmpsl
test
test
ret
push
scas
mov
dec
cmpsl
ss
inc
clc
mov
adc
cmp
dec
mov
and
push
ja
mov
and
lock
xchg
inc
in
pop
jne
pop
inc
fildll
scas
rorl
mov
fnstenv
imul
jecxz
pusha
rorl
mov
jo
gs
enter
ret
lret
jl
test
fwait
add
mov
push
ja
dec
loope
out
sbb
adc
jp
add
xlat
jno
shll
jb
std
lods
ljmp
dec
xor
mov
lods
stos
mov
ss
mov
push
loope
sub
mov
mov
lods
shll
ret
mov
mov
xchg
int3
xchg
call
add
pop
add
push
xor
std
jge
cmp
xchg
cmpl
dec
mov
insb
scas
pusha
mov
push
dec
lods
mov
repz
into
cwtl
cmpsb
inc
and
dec
ds
in
jae
and
mov
nop
repnz
sub
in
lds
in
or
aad
popl
pop
test
daa
shrb
cli
cli
ret
xchg
fdivrs
leave
sbb
add
sbb
sub
call
and
out
pop
aam
mov
xor
mov
mov
insl
cmp
pop
pop
cld
fs
jp
loopne
aaa
jg
ds
jp
push
or
adc
es
jnp
pop
dec
lret
rcrl
adc
adc
jp
hlt
cld
sub
mov
pop
imul
in
std
xor
loop
xor
sub
imul
lock
xor
lret
add
mov
cmc
jp
cmp
lods
cltd
pop
insl
xchg
mulb
aaa
call
push
adc
mov
dec
cmp
pop
jo
bound
push
pushf
push
add
pop
testl
loope
adc
loop
sub
jnp
mov
das
xchg
rclb
aas
push
in
test
lock
in
and
fdivrp
sub
out
cmp
cmp
arpl
push
leave
or
cmp
inc
pop
push
mov
inc
lds
dec
push
adc
dec
sub
movsl
mov
jnp
sbb
mov
shlb
pushf
imul
loop
jae
and
xlat
in
sub
sbb
adc
scas
popa
into
das
inc
pop
in
fisttpl
mov
push
pushf
xchg
pop
lods
mov
adcb
lods
outsb
jno
push
jb
dec
jmp
xchg
in
cmp
add
lock
cld
cmp
out
jno
repz
std
in
push
imul
test
loop
inc
pop
pop
insb
lea
js
jne
lds
sbb
sarl
mov
adc
sub
mov
lahf
mov
outsl
inc
imul
je
stc
aam
ss
repnz
xor
fcoml
stos
scas
push
xor
fcmove
mov
movsb
mov
push
adc
insb
push
cmp
fs
push
inc
es
lds
test
add
sbb
sbb
pop
dec
stos
ror
mov
xchg
cmpsb
addr16
xor
movsb
shl
int3
sub
jmp
dec
testl
adc
mov
jne
mov
inc
out
test
jae
and
push
rcrl
int3
cmp
mov
cli
mul
sarb
push
mov
setl
pop
cld
or
xchg
leave
or
out
ret
jg
scas
loope
mov
add
ret
in
mov
sub
scas
pop
rorl
mov
jecxz
pusha
std
adc
xchg
inc
cli
cmp
rol
test
mov
leave
int
fstpl
inc
push
jg
dec
loopne
gs
lret
push
mov
enter
pop
test
fstpt
ss
or
pushf
sbb
sub
lret
ljmp
out
mov
cmpsb
aam
in
dec
lods
aaa
push
rol
ss
mov
popa
inc
sub
mov
inc
or
jge
imul
cld
inc
sub
rcrb
mov
cmp
mov
jbe
cmp
cmp
add
ja
dec
mov
cmp
or
sub
dec
aam
jle
mov
sub
test
or
xchg
stos
cmp
xor
test
jge
mov
stos
ret
pop
into
dec
pushf
push
test
mov
into
cmp
jnp
js
jecxz
lcall
xor
xor
repz
fildl
adc
enter
cmpsl
xchg
icebp
sub
into
adc
shl
in
adc
ljmp
dec
in
pop
imul
sbb
scas
mov
stos
in
jno
and
jecxz
pop
inc
mov
mov
xchg
pop
imul
mov
or
jae
lods
mov
test
mov
popf
out
add
jae
loopne
fdiv
das
push
int3
mov
je
out
sub
jmp
mov
add
inc
rorl
sbb
fwait
sarb
test
jns
test
pop
sub
push
in
mov
mov
jno
pusha
xchg
mov
dec
add
mov
les
xchg
cmp
xor
aad
pop
jb
call
sub
andb
int
pop
in
jne
outsl
mov
cmp
enter
cmp
mov
cli
push
jae
sbbl
test
xchg
rclb
clc
lds
xor
movsb
outsl
outsl
lds
cwtl
pop
stos
jl
or
cmp
mov
adc
je
dec
cmp
add
mov
inc
out
mov
adc
xor
imul
out
cld
mov
lcall
ds
jmp
pop
mov
shll
stos
xchg
test
out
mov
xorps
cwtl
mov
sti
stc
outsb
xchg
shl
push
sti
xor
bound
popf
lret
fcmovne
cmpl
fists
lea
dec
xor
not
push
lret
iret
ss
loope
les
or
imul
js,pt
bound
or
inc
mov
dec
push
rcr
imul
repz
rcrl
cs
sarb
sbb
cmp
xchg
loop
mov
inc
sbb
insb
lahf
mov
sub
jg,pt
mov
adc
xchg
lods
pop
rolb
popf
fistl
imul
cmp
aas
xchg
scas
mov
sbb
into
dec
sub
mov
decb
imul
jmp
cmpsl
push
add
mov
dec
ljmp
stos
jbe
lea
xchg
ljmp
jne
add
cmp
lret
cli
pop
pop
out
inc
pushl
hlt
icebp
jno
mov
or
push
loope
andl
push
out
ss
lds
cmp
dec
sbb
nop
rcrl
or
push
movsl
adc
mov
aam
mov
je
scas
aad
xchg
int3
mov
xchg
ret
pushf
jge
xlat
test
fnsave
dec
add
mov
add
cltd
lahf
jb
rcll
cmp
imul
testb
outsl
jne
or
cmp
pop
jbe
mov
popf
mov
int
sbb
das
scas
sbbl
xchg
inc
sti
cmc
lahf
dec
inc
pop
push
das
dec
push
xchg
mov
inc
xor
sbb
imul
jns
cmpl
scas
xor
sbb
mov
dec
xor
cmpsl
fldenv
lret
fcomps
orb
jp
dec
pop
push
in
push
jg
mov
dec
call
cmp
fldcw
push
pop
mov
imul
stos
stos
ret
aad
sti
fwait
ret
arpl
jmp
sti
push
jle
sub
jo
jmp
aaa
push
int3
mov
notb
xor
movsl
cltd
mov
sbb
imul
xchg
jne
jmp
jae
push
sbbl
movsb
out
jle
cltd
or
cmpb
mov
sbb
das
push
lock
test
and
inc
dec
das
stos
fwait
sbb
sbb
push
sbb
jmp
cmp
pop
jge
mov
xchg
imull
in
mov
into
mov
mov
lcall
pop
int
dec
inc
sahf
xchg
mov
or
adc
sub
inc
addr16
cmpsl
in
cmp
ds
in
sub
rcr
xchg
lds
mov
test
insb
fcmovnbe
xor
xchg
enter
je
dec
and
xchg
xlat
test
inc
xor
or
popl
enter
mov
xchg
insl
lock
in
jno
sahf
mov
fstps
gs
xor
add
ljmp
ficomps
dec
inc
rorb
push
scas
jnp
fnstsw
pop
xor
jnp
jmp
sbb
in
xchg
push
in
jb
pop
or
push
pop
push
mov
fs
iret
add
andb
push
icebp
jae
jbe
push
mov
enter
imul
mov
xchg
pop
sahf
jns
push
pop
fucomi
sbb
and
outsb
add
lock
test
mov
lods
mov
adc
push
ljmp
mov
jp
rcrb
pop
push
outsl
sbb
outsb
or
mov
cmove
test
xchg
inc
lahf
decb
cli
mov
push
jecxz
ss
cmp
sbb
lret
dec
mov
push
lret
fmulp
sbb
xchg
or
xor
fnstsw
stos
jnp
mov
std
ret
in
jmp
shll
test
outsb
jns
test
jb
in
fnstcw
stc
pusha
call
ljmp
jo
movsb
mov
sbb
mov
and
imul
ja
les
inc
add
fwait
je
jnp
add
jae
lahf
xor
add
cld
fwait
jecxz
shrb
mov
sbb
sbb
xchg
adc
scas
xor
jge
adc
xorb
out
out
testb
sub
stc
adc
xchg
daa
int
add
push
push
mov
loope
popf
arpl
fwait
add
jbe
mov
pushf
adc
push
loope
dec
inc
ja
lods
xchg
ret
xor
imulb
fcompl
ret
xor
fnsave
in
dec
movsb
fucomip
frstor
in
add
test
adc
bound
out
mov
out
dec
repnz
jns
xchg
icebp
sti
call
dec
dec
hlt
push
lods
xchg
negl
mov
out
ljmp
mov
pop
lods
loop
jo
aaa
mov
or
xchg
jae
subl
jg
cmp
mov
in
push
lods
loopne
js
dec
cmc
dec
leave
sub
sarl
cmpsl
adc
xchg
aam
jo
push
push
in
testl
fildll
bswap
dec
jle
adc
fistl
stos
adc
mov
add
mov
cmp
sti
mov
or
mov
add
sarb
pop
cmp
dec
sub
xchg
das
pop
daa
insl
movsl
xor
sub
sahf
push
shl
dec
jnp
test
insb
das
popa
shll
testb
pop
sbb
cltd
or
inc
jno
movsl
popa
hlt
mov
scas
cmpsl
loopne
test
mov
sbb
and
dec
outsb
add
push
push
push
sub
shll
lock
xor
mov
mov
out
sub
daa
inc
mov
in
fiaddl
testl
jo
jae
push
and
aad
aaa
and
aas
mov
xlat
idivl
lock
or
adc
iret
mov
push
adc
nop
nopl
jecxz
push
push
sbb
and
stos
test
adc
into
push
inc
scas
je
cmc
popa
or
and
pusha
sar
imul
inc
scas
pop
out
mov
loopne
rcrl
jns
leave
cwtl
ret
lcall
stos
in
stos
and
or
push
mov
out
and
sub
rorb
fcompl
cmp
dec
or
sbb
cmovle
cwtl
or
mov
pop
in
inc
aas
sarl
push
ret
es
lret
push
mov
mov
pop
mov
lea
mov
mov
inc
sbb
stos
lea
cmp
cmp
xor
fcoml
nop
pop
mov
xchg
xor
mov
lcall
cmp
mov
sub
or
loop
mov
scas
adc
xor
idivb
dec
nop
rcrl
roll
add
aam
mov
fyl2xp1
push
fcompl
mov
push
jmp
loop
mov
mov
js
sbb
mov
sub
test
and
mov
add
mov
imul
pop
and
and
sub
cmp
faddp
insl
pop
data16
xchg
add
dec
mov
rcll
test
mov
lds
shrb
outsb
push
add
adc
fcmovbe
mov
popa
sti
popf
xchg
push
xor
sbb
sbb
adc
lcall
or
jecxz
pop
nop
mov
scas
movb
ja
cmpsb
data16
dec
xor
inc
jno
insb
in
and
bound
cmpsl
mov
xor
shlb
repz
and
dec
cmp
xchg
cmp
shr
cmp
jp
movsb
cmp
and
jae
inc
adc
sbb
cmpsb
cmc
push
cmp
cltd
shrl
add
in
push
lods
add
ret
repnz
xchg
ljmp
pushf
jg
icebp
sbb
mov
add
clc
inc
shrl
mov
sti
das
or
lcall
addr16
cwtl
loop
addr16
js
loope
sbb
mov
xor
mov
lods
movsb
add
sbb
fdivs
cmp
js
xor
stc
xchg
fcmove
or
popa
adc
test
adcl
fcomip
movsl
out
decb
test
in
or
outsl
xchg
ss
or
xchg
cmc
dec
lock
ljmp
push
stos
sub
adc
adc
ret
pop
dec
cmp
jmp
sbb
dec
scas
call
test
out
push
xor
cmc
mov
xchg
cmp
scas
in
femms
adc
lock
jns
sbb
inc
pop
xchg
mov
aad
add
lods
xchg
jmp
das
inc
aaa
mov
iret
rcll
jno
add
js
sbb
aad
cli
cmp
push
fidivrs
cmp
bound
inc
and
adc
lods
out
cmpsl
cli
pop
testl
in
xor
mov
xchg
mov
sahf
cmp
nop
int
repnz
negb
stos
or
inc
stos
into
in
add
je
inc
push
add
pop
xor
add
sahf
ljmp
dec
shl
or
sub
arpl
loop
xor
add
sub
movl
jno
rcll
addr16
sub
add
in
loopne
sti
sub
mov
jle
adc
cmp
cmpsl
imul
data16
adc
aam
add
pop
hlt
fwait
dec
add
test
mov
imul
mov
aad
movb
mov
icebp
mov
mov
jmp
xchg
dec
pop
loop
and
mov
in
inc
mov
and
daa
sub
jo
pushf
lret
mov
sbb
lock
adc
jp
cmc
jo
and
jge
push
xchg
mov
pop
xchg
loop
sub
mov
andl
mov
out
dec
mov
jne
add
jp
jns
sbb
jmp
cld
cmpsl
jecxz
cmc
mov
push
cld
xchg
jne
imul
mov
add
mov
scas
icebp
mov
inc
add
sub
mov
jno
fiadds
inc
push
out
cmc
icebp
popa
iret
ficompl
movsb
ss
rclb
shr
int
xchg
inc
jle
jmp
mov
hlt
inc
aas
push
outsl
bound
stc
mov
aaa
cmc
sub
inc
jmp
fimull
sbb
pmullw
std
lock
cmp
es
add
lret
addb
loope
mov
jg
not
sbbb
in
jp
sub
push
and
pop
dec
repz
xor
jo
fsubl
push
fdivl
lcall
and
out
and
or
neg
test
xorb
cmp
stos
dec
xor
pusha
and
ret
gs
mov
ja
scas
lret
cmc
push
cmp
sub
outsl
jae
test
sub
out
pushf
faddl
add
out
pop
mov
imul
push
mov
roll
insl
stos
pop
shrb
sbb
xchg
cmc
mov
pop
cltd
fisttpl
inc
das
mov
mov
lcall
fstpt
dec
enter
inc
and
mov
push
popa
pop
inc
mov
jle
hlt
xchg
push
xchg
fstpl
sub
sbb
shlb
and
arpl
inc
dec
mov
and
jo
pushf
mov
aad
xor
jecxz
or
mov
jbe
pushl
rcrb
xlat
fsubrs
and
movsl
pop
jb
pop
ret
xor
or
test
lahf
nop
sbb
and
add
dec
fisubs
imull
add
xor
stos
xchg
push
stos
mov
push
jle
into
inc
push
add
roll
pop
testl
nop
sbb
aam
cmp
sbb
sbb
mov
or
dec
sbb
stos
out
insl
add
mov
inc
xor
sbb
repz
push
mov
rcr
or
jecxz
outsl
loop
push
test
mov
xchg
ror
dec
cli
call
and
jno
popf
aad
in
shrb
aam
ja
sub
mov
pop
nop
jae
push
mov
ficompl
xor
add
cld
jge
ror
fcomi
sbb
sbb
popl
jb
pop
xchg
cmp
xchg
fidivl
out
or
inc
out
adcb
sub
cmpsl
aas
xchg
mov
aad
dec
sub
ret
shlb
mov
cmpsb
insb
les
add
movsb
lret
std
in
fnstcw
pop
jecxz
mov
cwtl
int
add
add
dec
fldt
sbb
pop
cmp
imul
sahf
mov
ret
or
scas
fcompl
inc
mov
mov
mov
mov
cmp
cmp
sub
sub
aad
icebp
loope
insl
dec
mov
sbbb
push
lods
or
in
addb
pushf
aad
push
and
hlt
pushf
imul
test
xor
ret
fnstenv
std
rcrl
inc
out
out
pop
mov
movsl
jb
mov
test
xor
daa
jg
je
test
cmp
jg
inc
xor
dec
mov
mov
push
repnz
jae
push
in
bound
adc
stos
cli
cwtl
push
lcall
xchg
jg
push
jo
and
sub
cmp
xchg
sahf
fsubrs
lock
outsb
xchg
lods
or
ljmp
inc
in
sub
mov
addb
movb
mov
fs
pop
loopne
cs
fstpl
mov
inc
mov
cmp
lret
push
rcl
call
add
xchg
add
notl
fldenv
lods
cmp
hlt
fimuls
mov
xchg
pusha
push
and
lods
push
push
mov
xor
jno
xchg
rcl
les
shrb
xor
add
mov
enter
sbb
mov
pop
fistpl
sub
fcom
into
test
test
add
jg
sahf
out
dec
movsl
and
dec
subl
stos
jb
xlat
out
cmpsb
push
adc
dec
mov
int3
pop
mov
mov
dec
shll
inc
stos
or
pop
popa
cmpsb
pop
push
nop
push
jne
shl
leave
sbb
ficomps
icebp
and
adc
icebp
clc
insb
fsubp
faddl
mov
arpl
cmp
addps
add
cwtl
mov
stc
incl
jno
bound
mov
adc
mov
lods
inc
dec
bound
subb
std
push
dec
mov
les
xor
sbb
fdivrs
sub
adc
lret
out
mov
xor
mov
sbb
jno
lret
mov
or
in
data16
push
push
xor
insb
call
das
popa
xchg
jns
fsubs
mov
jmp
pop
lret
cmpsl
ds
fwait
or
adc
mov
dec
std
or
in
test
sub
adc
xchg
insl
lea
dec
push
lods
ja
xor
cs
xor
push
subb
mov
scas
shl
test
fcompl
loope
add
sub
push
xchg
mov
xor
and
inc
in
bound
pop
push
mov
or
aad
ret
hlt
adc
pop
ret
dec
or
ret
xchg
fsubs
pop
jp
fidivs
shll
enter
ret
inc
add
sbbl
cli
mov
pop
js
das
add
push
fsubs
jbe
xchg
cmp
jo
pop
xor
mov
mov
cli
test
fwait
rorl
pop
jo
out
cmpsb
adc
sti
push
add
pop
lock
push
imul
frstor
cmc
orb
mov
pop
cmpsl
mov
mov
lret
mov
outsb
dec
dec
lret
mov
adc
xchg
std
jg
pop
sbb
sub
mov
fistpl
adc
pop
sbb
sbbl
shr
jmp
sub
sub
js
sub
mov
push
outsl
sti
add
test
fcmovnu
bound
sbb
lea
sbb
in
mov
xchg
mov
hlt
rol
shrb
jae
ds
addl
inc
push
and
stc
mov
stc
push
pop
fdivrl
mov
ret
movsl
mov
push
insl
sbb
in
adc
mull
xchg
into
pop
popa
test
and
push
jno
popfw
addb
push
shrl
and
fcoms
loope
in
idiv
jno
iret
pop
pushf
lcall
out
mov
and
xor
jl
and
push
jecxz
inc
rcrb
out
insl
and
dec
jns
inc
pop
or
inc
filds
sarb
stos
inc
add
test
add
jle
or
into
xor
lret
mov
xchg
xor
jmp
notb
xor
inc
in
push
pop
push
test
sub
les
or
push
sahf
lea
inc
lods
mov
fldcw
sti
and
push
mov
js
jns
add
loopne
addl
leave
stc
xor
sti
sub
aad
mov
cmp
or
jg
fsubrs
shll
sub
push
hlt
leave
fdivrp
sahf
lahf
lahf
test
adc
outsb
sahf
pushf
cld
sahf
or
popf
mov
push
outsl
sub
or
insl
mov
fwait
in
mov
sbb
mov
mov
cmp
jne
dec
sbb
test
cwtl
enter
sub
pop
stos
stc
rcl
push
movsb
scas
push
daa
divl
xchg
js
stos
mov
adc
das
cmp
repnz
add
in
lahf
shr
inc
popa
push
in
jbe
sbb
cmpsl
pop
xchg
xchg
popa
stos
addl
sahf
or
adc
in
jecxz
imul
clc
ljmp
test
shrb
pop
mov
cmpsb
das
xchg
fsubs
inc
mov
sahf
lret
xchg
add
add
repnz
fiaddl
cmc
push
inc
mov
cld
mov
stos
sbb
jbe
xchg
inc
leave
dec
enter
test
xor
mov
ds
inc
dec
hlt
ret
lock
or
adc
outsl
push
sbb
push
cld
test
and
or
adc
push
mov
jb
repnz
aad
xchg
sbb
repz
sub
sub
xor
call
popa
jae
pop
dec
gs
mov
clc
out
notb
mov
dec
andb
mov
pop
pop
mov
sbb
add
outsb
iret
lea
cltd
hlt
cmp
pop
sub
sbb
push
xchg
dec
mov
push
or
js
pop
xor
call
pushf
xor
subl
sub
psrld
lds
addr16
lea
cmp
fs
xchg
rolb
jnp,pn
aaa
rcr
hlt
adcl
std
mov
push
pop
jl
aam
add
push
add
mov
or
mov
pop
scas
sti
push
push
push
push
popf
jecxz
and
dec
or
pop
pop
ds
bound
pop
lcall
push
inc
es
sahf
stos
rcrl
xor
fwait
stc
mov
cmpl
sub
aas
arpl
inc
ret
cmc
lahf
call
cmp
stos
lods
pop
inc
fldenv
or
lret
scas
adc
push
cli
testb
xchg
add
mov
out
adc
stos
add
mov
inc
nop
and
mov
loopne
jg
mov
jg
sbb
ja
fistl
mov
push
xchg
insl
sbb
xor
or
sbb
scas
and
xchg
out
sbb
mov
lods
test
mov
pop
call
add
mov
stos
pop
xchg
into
jl
xor
stos
sbb
add
xorl
adcl
aam
inc
and
imul
and
mov
shll
clc
shl
rep
imul
je
in
adc
push
dec
movsl
xor
fwait
push
push
cmpsb
xchg
or
mov
lea
arpl
leave
jbe
push
and
dec
xchg
mov
mov
jne
xor
cmp
loopne
addr16
xchg
inc
addr16
shlb
outsl
sub
sub
dec
cmc
xlat
push
rorb
into
add
xchg
out
repz
mov
popa
or
les
xchg
adc
loope
and
add
pop
aas
add
mov
rolb
sub
or
push
lea
fistpl
and
aam
test
cmpsb
es
insl
inc
mov
pop
dec
dec
adc
and
ljmp
jl,pt
add
xchg
jae
inc
rolb
fs
cmp
add
xchg
cmp
jns
adc
out
mov
jmpw
pop
sbbl
negl
pusha
push
lea
cmp
sbb
adc
dec
mov
lds
sbb
loopne
jno
add
int
pop
sbb
nop
test
cmpsb
adc
pop
inc
sbb
jl
icebp
sbb
jl
into
push
icebp
mov
push
add
push
sbb
sbbl
cmp
or
inc
or
push
outsl
mov
jbe
mov
mov
sbb
xchg
nop
hlt
jno
inc
es
pop
hlt
outsb
jecxz
test
fstps
rorb
ret
lret
ficoms
or
push
add
insb
jl
jge
xor
or
add
jo
fnsave
sbb
daa
inc
mov
or
adc
adc
add
pop
aas
mov
add
aaa
cli
test
xchg
add
or
out
adc
ljmp
add
enter
loop
aad
jbe
sub
fs
xor
ret
push
pushf
test
or
popfw
dec
test
pop
pop
lret
sbb
fisubl
push
xor
sahf
cmp
push
testl
aad
fwait
jp
xchg
addr16
push
pop
adc
xor
sbb
inc
add
lea
jne
mov
jmp
mov
add
sub
loop
mov
fst
ljmp
bound
cmp
ret
mov
lss
jo,pn
insl
mov
pop
xchg
popa
push
pusha
or
cmp
inc
push
fs
push
pop
stos
and
fsts
xchg
cld
and
andl
mov
fcmovbe
adc
imul
shl
setbe
aad
out
scas
mov
popa
ja
adc
jae
lods
shlb
inc
dec
inc
aaa
xchg
xlat
adc
pop
jl
pop
les
and
sahf
and
lea
sbb
jns
lahf
xchg
int3
cmp
mov
mov
jmp
lcall
push
in
add
cmp
loopne
inc
inc
jg
cmp
aaa
sahf
cmp
jno
push
nop
es
shrl
and
xor
cld
stos
gs
push
mov
test
je
mov
push
paddusw
inc
test
sbb
pop
insb
jnp
int3
cltd
es
push
dec
sbb
outsb
mov
loope
loope
push
xchg
xchg
in
ljmp
sar
dec
inc
mov
jne
faddl
push
cmpsb
push
dec
int
es
xor
daa
std
lds
insb
and
insl
out
xor
es
repnz
mov
popf
cmp
push
mov
xchg
lods
std
cmp
lock
lret
mov
movsb
fld
inc
mov
shll
push
movsbl
fsubs
loop
push
stc
or
pusha
sub
sti
loopne
lcall
imul
adc
loop
cs
push
std
sub
xor
push
hlt
sub
inc
test
xchg
popf
push
repnz
sti
add
add
aas
imul
sbb
xchg
repnz
push
pop
das
push
sbb
push
in
mov
in
mov
popa
add
mov
cmpl
lretw
cmp
mov
lods
gs
icebp
mov
jbe
les
sub
fimull
mov
xchg
jbe
xor
and
mov
in
sbb
loop
test
outsl
sbb
sbb
inc
in
sbbl
jl
sbb
movsb
dec
out
cmp
ja
sahf
add
std
push
add
jl
jne
pop
fucomp
lods
shl
mov
in
mov
push
lret
aaa
or
mov
xchg
out
inc
pop
aas
xchg
sub
pop
sub
jle
faddp
cmpsb
std
test
testl
orb
mov
mov
xor
sarb
push
js
iret
dec
mov
movl
cltd
jne
sbb
mov
sub
sbb
sti
jg
stc
push
xor
add
imul
and
dec
cmpb
sub
test
ret
sahf
xlat
jle
andb
sbb
addr16
imul
xchg
lcall
jae
mov
mov
out
repnz
cmp
mov
in
and
iret
out
mov
aad
add
rcr
test
adc
sbb
scas
add
sbb
or
mov
outsl
pop
dec
pop
js
mov
pop
out
or
shlb
enter
inc
xchg
call
lods
into
shrl
scas
dec
mov
xorl
jecxz
aas
je
mov
hlt
loop
xchg
add
jmp
xchg
xor
fisttpll
lods
dec
ds
jg
mov
push
sahf
aam
cmp
lret
es
lret
xchg
dec
loopne
sub
sub
arpl
adc
enter
loopne
es
mov
xor
loop
imul
or
in
cli
shlb
cmp
add
sbb
pop
inc
int3
cltd
cmc
mov
xchg
cmc
sub
lret
jno
push
sbb
fcomi
jle
ds
xor
ljmp
or
jae
pop
add
jo
rcll
adc
inc
pop
cmp
add
popf
push
shll
shll
cmp
mov
push
pop
in
cltd
mov
push
push
jb
dec
pop
leave
sbb
je
jo
cmp
loop
pop
pop
arpl
jmp
push
in
mov
and
mov
jl
out
aas
stos
pop
aad
fnstenv
and
js
das
push
adc
mov
rol
jb
and
das
adc
gs
pop
pusha
mov
pop
xchg
mov
in
je
arpl
pusha
cmpsl
mov
adcl
pop
sbb
in
add
fmull
pop
call
ja
test
fcmove
fcmovu
sbb
mov
inc
pop
out
push
jno
aam
xor
sbb
dec
dec
mov
enter
mov
es
pushl
add
insl
pop
lret
in
std
cmc
subl
lea
iret
addl
aam
arpl
scas
inc
dec
inc
iret
mov
jno
mov
dec
inc
imul
ds
ds
pop
arpl
in
sub
sbb
aas
adc
data16
test
ret
pop
xlat
out
inc
ja
in
xchg
push
sbb
cli
sub
dec
xchg
ja
mov
call
lea
add
add
jl
mov
mov
jle
sub
orl
xchg
xor
add
in
jecxz
sbb
pop
es
int3
ret
movsl
pop
adc
aam
adcl
mov
cmp
push
jl
sub
scas
pop
call
scas
mov
pop
lret
mov
mov
xor
cmp
adc
imul
cmp
popf
mov
jge
call
fsub
push
sbb
test
sub
repz
pop
push
mov
cmp
out
nop
jnp
fcmovbe
or
jno
cwtl
pop
pushf
clc
jecxz
enter
addr16
lahf
cmpsb
jmp
mov
outsl
sub
in
leave
les
xor
insl
pop
mov
lea
ljmp
cmpsl
rolb
mov
fstpl
mov
inc
or
mov
ficoms
lods
push
in
sub
addr16
popa
push
dec
mov
adc
lret
into
inc
sysenter
adc
stos
lcall
sbb
and
or
lods
dec
aas
nop
cmp
ljmp
or
stc
insb
inc
pop
cmovo
and
imul
test
cmp
push
lds
loop
sbb
sbb
incl
adc
pop
cmpsb
fs
daa
sbb
jnp
jl
popa
subl
mov
cltd
cmp
gs
insb
push
sbb
out
push
sbb
lock
xchg
mov
mov
sub
lock
into
add
xchg
das
out
push
scas
stos
fs
nop
fsts
cmp
mov
out
popa
outsl
add
pushw
ljmp
stos
add
inc
or
insb
nop
mov
loope
dec
sbb
cmp
and
add
pop
jae
call
jmp
dec
jl
jg
sbb
cli
xlat
jecxz
ror
sub
push
xor
and
rclb
inc
cltd
adc
mov
jg,pt
cmp
pop
mov
cmp
sub
out
movsl
and
call
fcomp
sub
mov
jae
insb
mov
mov
mov
mov
dec
pop
lahf
lods
call
ret
test
ret
jno
mov
push
enter
pusha
add
mov
xchg
push
dec
loopne
fucomip
mov
pop
push
lahf
xchg
inc
call
shrl
aas
sub
jno
sbb
and
sub
mov
push
push
mov
push
call
mov
dec
jle
lods
add
sub
mov
bound
mov
mov
cmp
scas
inc
rcl
or
pop
mov
ss
jno
pusha
scas
stc
xor
and
clc
das
filds
cs
imul
sbb
pop
fdiv
les
jmp
fimuls
imul
sub
scas
ja
mov
fisubs
in
fcomp
hlt
int3
pop
mov
fwait
addb
icebp
mov
test
push
test
mov
scas
aam
xchg
inc
das
dec
mov
adc
addl
adc
jge
bound
add
add
outsb
leave
fldcw
cs
push
subb
addr16
dec
frstor
dec
jge
fistps
adc
out
push
imul
jo
movsl
mov
andl
xor
mov
cmp
inc
push
push
push
bound
idiv
xchg
mov
dec
lret
pop
jb
outsb
mov
pop
leave
xchg
jp
push
inc
or
xchg
rolb
inc
mov
xchg
jo
dec
faddl
test
mov
sub
sti
lea
cmp
adcl
iret
cwtl
loop
filds
push
movq
adcl
mov
fdivs
adc
push
addr16
and
mov
and
inc
add
addb
cmpsb
xchg
cmp
or
adc
mov
mov
gs
dec
sub
push
int
aam
push
arpl
pop
push
and
shlb
push
notb
inc
movsl
cmp
adc
jl
and
int3
pop
sub
pop
adcb
out
adc
fmull
or
pop
out
fs
sub
cmc
stos
repz
cld
cmp
pop
cmp
clc
lret
pop
fucomi
xchg
aam
in
mov
data16
mov
mov
mov
jp
daa
jo
outsl
nop
aaa
adc
test
shlb
adc
inc
pop
fmull
xlat
in
xchg
cld
sti
push
mov
pop
cli
ljmp
xor
clc
xchg
pop
shl
jnp
inc
pushf
lcall
add
sub
jmp
mov
inc
filds
xchg
lret
jp
inc
push
mov
int
cwtl
or
js
mov
mov
dec
mov
pop
popf
loop
mov
insb
popa
jle
and
push
aam
mov
imul
test
stos
shl
in
cmpsl
sub
push
add
mov
lods
or
jne
and
fidivl
popf
lcall
scas
pushf
sti
mov
aad
jp
stos
sbb
add
outsl
xlat
and
mov
inc
ret
jle
push
insl
fistps
fdivrl
imul
add
popf
cwtl
out
xlat
adc
push
add
subb
lahf
or
ss
fwait
jge
mov
mov
cli
clc
cmp
cli
sbb
stos
pop
pop
jbe
fldcw
xchg
jp
je
sbb
fs
outsb
jne
add
stc
inc
cmc
out
icebp
adc
aas
loopne
ja
mov
vmread
add
mov
fmuls
adc
jmp
outsl
addr16
lcall
cmp
into
cs
mov
cmp
lret
sbb
pop
xchg
and
or
clc
mov
out
and
aad
pop
xchg
xchg
sar
test
mov
leave
cmp
mov
ljmp
pop
pop
je
push
repnz
popa
sbb
sub
pop
insb
push
mov
sbb
mov
popl
cmc
fxch
jl
pop
inc
ror
pop
gs
xlat
fisttpl
sub
push
mov
ss
aam
js
and
mov
jae
mov
jne
jns
loopne
and
inc
jae
mov
out
jns
and
adc
jl
xor
imul
icebp
xchg
inc
mov
lret
test
ficoms
mov
enter
push
sub
repz
repnz
mov
lods
andb
and
ret
lahf
enter
add
mov
sahf
enter
jae
call
dec
ss
repnz
adc
daa
add
mov
in
xor
outsl
pop
out
mov
int3
xchg
adc
in
xchg
fildll
cmpsl
dec
aam
sbb
mov
mov
adc
dec
cld
inc
add
jmp
test
mov
or
out
ret
ret
mov
push
cmp
mov
lods
sbb
push
pop
test
mov
push
movb
mov
pusha
lock
cltd
mov
mov
leave
cmp
dec
push
add
jmp
repnz
insb
sub
inc
pop
mov
xchg
stos
push
incl
pushf
insb
loope
aad
mov
rcrb
or
push
sub
or
in
jne,pn
std
test
fstpl
out
insl
cwtl
pusha
sub
jmp
mov
cmpsb
cld
hlt
mov
sub
sbb
in
add
stc
jp
stc
cwtl
xlat
pusha
adc
dec
test
mov
sbb
mov
hlt
mov
cli
adcl
in
or
jne
movsl
dec
or
add
add
sbb
popf
outsb
xchg
dec
cli
mull
pushf
push
mov
es
pop
inc
xlat
mov
lea
aaa
outsl
xchg
fldt
cmpsb
dec
pop
aam
mov
js
and
jo
movsl
in
leave
cltd
cwtl
shrb
jle
test
and
xchg
int3
lret
adcb
dec
adc
jb
dec
mov
xor
fsubrl
rcr
fldl
xchg
out
orl
jae
sahf
movsl
lea
jns
or
mov
mov
test
mov
sti
loopne
add
mov
and
les
sub
loop
pushf
dec
sub
mov
iret
push
and
movsb
lcall
jmp
cs
sub
frstor
mov
xchg
insl
mov
jecxz
jecxz
loope
stos
cmp
mov
sub
pop
adc
andl
aam
aaa
test
cmp
xor
and
push
pop
sub
outsb
rcrl
inc
xor
and
jmp
addb
jg
sarb
jo
outsb
pop
push
jns
xchg
ljmp
in
dec
outsb
and
mov
xchg
cmp
andb
int3
les
movsb
into
ds
jnp
movsb
das
cmpsb
mov
pop
lret
cmp
test
mov
data16
adc
or
inc
fcomps
pusha
stos
fidivrl
xchg
mov
cmp
xor
sbb
scas
sub
mov
sbb
scas
xor
jmp
push
jae
and
imul
fstl
add
shll
pop
jle
jo
adc
mov
test
mov
insb
insl
or
fs
pop
xor
aad
lret
jbe
mov
pop
cli
cmp
dec
cmp
pop
fnstsw
mov
loope
dec
dec
daa
insb
pmulhw
inc
cmp
cmp
lret
leave
push
dec
add
cmpsl
ja
push
jns
and
lea
push
gs
pop
mov
lret
fstl
cmp
xchg
lods
popa
mov
add
pop
sti
cmp
ss
mov
inc
or
aam
lds
jbe
dec
jno,pn
sbb
xchg
pop
icebp
sbb
xchg
mov
mov
jns
xchg
jns
adc
pop
lea
sbb
fmulp
push
popf
sub
je
rcrb
daa
daa
jle
add
jno
mov
inc
fadds
test
push
out
in
ja
lock
sbb
sub
sub
mov
jecxz
sub
and
dec
lds
mulb
imul
mov
inc
xor
sbb
mov
outsl
daa
mov
fs
or
movsl
dec
and
or
inc
mov
or
sub
mov
and
mov
cmovbe
xor
add
pop
mov
and
sub
loope
test
pusha
push
xor
aas
sbb
or
es
loopne
adc
les
in
dec
cld
arpl
mov
shrb
test
gs
jmp
push
mov
jne
inc
sahf
in
sub
fld
mov
sbb
xchg
jle
pop
pop
mov
xor
fidivrs
mov
add
jmp
rcll
pushf
clc
out
add
fistpll
or
adc
lods
ljmp
mov
add
and
in
jecxz
into
pop
popf
dec
nopl
inc
loopne
cwtl
inc
sbb
inc
hlt
mov
fistl
das
cmp
iret
pushf
jne
dec
sub
adc
ja
sbb
jae
mov
cli
lock
lock
mov
pop
mov
and
repz
stos
dec
mov
stc
test
jmp
out
iret
adc
cmp
dec
mov
cmp
pusha
insl
mov
inc
inc
in
pop
repz
jno
inc
adc
push
cltd
xchg
jmp
mov
dec
push
mov
lret
pushl
adc
stos
loope
inc
mov
mov
sbb
push
jo
leave
push
mov
push
and
mov
je
jo
cmp
mov
and
dec
ja
imul
push
dec
mov
mov
enter
sbb
ja
push
jae
jmp
cmp
aam
into
call
aam
or
push
lret
dec
or
sub
addr16
sbb
outsb
inc
inc
fs
std
mov
into
xor
loopne
mov
cltd
sub
xchg
adc
and
dec
fmuls
inc
xchg
lea
addl
mov
cmpsb
out
scas
cmp
mov
mov
cwtl
jbe
lcall
call
loope
jbe
inc
adc
mov
lods
sbb
lods
out
hlt
pop
jne
xchg
jne
lahf
cs
fists
popa
ss
lods
push
test
stos
and
inc
int
dec
loopne
enter
pushf
test
cli
and
out
adc
incb
push
add
bswap
les
sbb
cmp
mov
jb
cmc
mov
movsl
dec
adc
imulb
es
shl
ljmp
xor
shl
pop
and
arpl
aam
outsb
cli
ja
and
cmp
cmp
sarb
xchg
or
shlb
mov
mov
sbb
mov
pusha
push
xchg
cmpsl
pushf
jmp
or
jmp
movsl
cld
mov
inc
mov
add
ret
mov
testb
test
test
dec
std
jge
xchg
push
leave
js
jmp
inc
mov
in
lock
push
stos
cmp
xchg
and
add
mov
inc
jae
int3
subl
popf
mov
add
cmpsb
out
icebp
shlb
pop
pop
pop
xor
popa
test
or
rcrb
jge
sbb
scas
testl
pop
aam
clc
testb
sub
inc
dec
aaa
dec
outsl
sbb
aas
lods
jne
xlat
popl
lret
lods
pop
cmc
out
testl
insb
add
jg
sub
jecxz
rol
in
mov
fistl
pop
pop
mov
inc
and
mov
xchg
rep
scas
mov
call
out
dec
sbb
addr16
sbb
imul
cmpsl
push
popf
in
in
mov
dec
in
lods
xchg
repz
pop
sbb
add
hlt
shl
push
cmpb
jl
xchg
dec
add
call
mul
push
jno
dec
sti
daa
jae
ss
xor
fcoms
mov
jecxz
mov
jmp
shlb
inc
sti
mov
out
xor
aad
adc
sub
dec
insb
sti
pop
sar
pushf
sbb
add
pushf
or
aaa
sub
ret
jo
jno
aaa
mov
sub
or
enter
rorl
sbb
xorl
dec
addr16
iret
push
in
dec
sahf
lock
xchg
ss
cmp
xor
in
jl
aaa
andl
adc
xchg
scas
xchg
jle
mov
cmp
and
lds
insb
into
push
fwait
dec
or
dec
mov
mov
mov
cmp
or
sub
dec
mov
imul
lock
andb
ret
in
js
out
adc
xchg
stos
add
outsb
push
xor
int
daa
or
mov
mov
idivb
dec
fiadds
pop
xchg
add
sarb
push
dec
test
xlat
push
into
xlat
sahf
lods
and
mov
incb
aad
jne
gs
or
pushf
out
pop
xchg
add
inc
ljmp
dec
mov
insl
and
test
and
mov
loope
popf
int
je
cmpsb
xchg
cmp
push
movsb
cmp
mov
and
flds
nop
mov
cmp
repz
data16
sbb
popf
jae
lea
push
shrb
mov
andl
push
idivb
inc
or
pop
and
push
add
mov
mov
outsb
aad
jno
sbb
testl
adc
insb
fisttps
stos
pop
inc
xor
outsl
sarb
inc
cmp
out
adc
es
pop
in
xchg
xchg
sti
mov
lahf
and
dec
loop
inc
aad
xchg
test
push
xchg
inc
xor
dec
sbb
cmp
pop
push
in
inc
xchg
pop
sub
incb
hlt
fcoms
push
aaa
repnz
dec
xor
iret
movsl
pop
fs
mov
jl
popf
xor
lret
shll
test
lds
xlat
xchg
adc
sub
push
jge
clc
mov
arpl
push
mov
sarb
rclb
cmp
imul
enter
jnp
xor
faddl
rolb
push
sub
cmp
popf
addl
mov
mull
mov
rol
faddl
dec
repnz
out
fs
in
jl
mov
aad
jge
ds
cmc
popa
jp
rcrl
adc
ret
cmp
xor
mov
lret
das
clc
mov
mov
mov
negl
jle
xor
in
xor
lret
std
jge
mov
add
addr16
xorl
test
lahf
int
aam
xrelease
and
xchg
dec
leave
ljmp
ljmp
pop
stos
sub
and
cmp
adc
lds
js
iretw
sbb
cli
ret
fstps
scas
jae
rclb
push
xchg
jae
mov
pop
or
test
push
daa
and
imul
jns
enter
and
sub
movsb
xor
test
xchg
shlb
xchg
mov
push
jecxz
imul
data16
sub
ss
push
jae
mov
dec
xchg
adc
repnz
xchg
jmp
clc
mov
imul
testb
cld
repnz
inc
mov
loopne
jnp
cli
std
pop
repnz
mov
cmc
or
sub
add
aam
or
enter
adc
sahf
push
enter
inc
mov
jle
push
push
push
call
dec
cs
or
push
push
mov
fdivs
cli
fmull
ror
cmp
pop
insb
loopne
cltd
adc
outsb
dec
enter
cmp
in
std
ffree
ds
sti
dec
out
lahf
call
sti
movsb
repnz
push
in
jg
dec
out
cmpsb
mov
bound
cli
jne
add
cmpsl
rcrb
adc
mov
out
cmc
or
jno
ret
sbb
mov
inc
and
mov
mov
ret
call
xchg
or
popl
sahf
xor
sbb
aad
sbb
sub
loopne
push
cmp
pop
jle
mov
insb
nop
add
lret
popf
inc
or
andl
inc
fadds
push
push
adc
xor
push
add
dec
cltd
mov
jecxz
xchg
ljmp
add
add
or
aaa
std
std
mov
lcall
sbb
or
fistps
dec
cmc
fdivs
lcall
jne
push
add
push
adc
sahf
lret
jl
add
imull
pop
push
sbb
outsb
ja
hlt
subb
rolb
mov
out
test
xchg
jl
sbb
sbb
ljmp
inc
hlt
stc
fs
ljmp
decl
out
adc
push
push
xchg
sbb
hlt
push
xchg
hlt
and
sbb
pop
xchg
push
mov
xor
rcrb
mov
repnz
or
scas
pop
jp
pusha
daa
pop
dec
scas
jb
cmc
je
mov
cmp
sub
rcr
mov
cs
sub
into
mov
mov
fwait
jo
ret
sbb
popf
xchg
push
shll
stos
stos
inc
rolb
stc
jno
pop
push
mov
jnp
je
bnd
mov
leave
or
mov
push
cmp
inc
pop
repz
and
sbb
mov
mov
dec
pop
rclb
sub
scas
push
mov
xor
pusha
test
std
mov
ret
xor
xor
dec
hlt
pop
ds
loop
imulb
xchg
xchg
xor
aam
jmp
and
cmpsb
aad
psrld
inc
mov
dec
cmp
ret
shl
sub
jle
xchg
mov
clc
nop
xor
loope
imull
jle
lret
jbe
sbb
imul
xchg
stos
cmpsb
jge
data16
lahf
mov
push
jns
out
mov
jmp
jmp
int3
inc
mov
adc
out
addr16
xor
add
jae
lods
repz
cmpsb
or
arpl
out
inc
dec
mov
dec
loop
push
push
mov
dec
loope
inc
daa
pusha
jnp
pusha
ja
lret
scas
fisttpll
pushf
nop
in
jecxz
mov
inc
xorb
cmp
insl
sbb
sti
in
xor
pop
dec
lcall
fsubl
stc
iret
ljmp
or
hlt
cs
pop
push
push
lahf
or
pop
pop
enter
adc
push
test
pop
outsl
sti
scas
enter
cmpsl
shr
adc
jp
push
lahf
inc
fdivrs
divl
or
pop
rol
push
aas
inc
xor
mov
jp
xor
add
int
xchg
pop
push
sub
sti
cmpsl
jno
and
cmp
pop
decl
rcr
jmp
movsb
xchg
imul
orl
inc
jl
fisttpl
sub
push
mov
mov
fnstsw
push
sti
mov
fwait
and
icebp
pop
jo
sarl
add
stc
push
mov
in
adc
stc
mov
ds
mov
mov
rcrb
dec
dec
xchg
shlb
nop
ret
adc
repnz
insl
xor
pop
mov
inc
les
inc
ljmp
jb
repz
mov
xor
xor
and
ja
push
sbb
push
xor
in
inc
jl
shrb
xor
mov
mov
ds
lret
cld
subb
adc
jmp
and
lods
sub
ljmp
psllw
fistpll
test
lods
mov
and
mov
mov
movsb
lds
xor
call
sbb
jmp
cmp
cs
mov
std
jecxz
add
sbb
daa
push
jmp
jno
sbb
add
xor
adc
adc
sbb
aaa
aam
mov
fcomi
je
cld
and
shlb
lea
push
stos
movsb
fistps
or
notb
movl
pushf
sub
fistps
cli
nop
sbb
mov
inc
shll
mov
repz
sbb
inc
roll
dec
das
mov
mov
xor
aad
lds
dec
xchg
cmp
and
jae
out
call
hlt
push
jp
lods
addr16
int3
xchg
cmp
arpl
add
cmpsb
xor
sub
dec
cld
cmp
das
xchg
xor
dec
js
je
jo
push
mov
lea
sub
cmc
mov
and
push
and
xchg
xor
jae
lds
clc
mov
ret
testb
cltd
incl
add
sbb
out
mov
rcrl
push
cmp
mov
loop
int
jo
mov
pusha
xlat
ja
adc
scas
popf
rcrl
int3
sbb
adcb
pop
xchg
or
into
repz
adcl
shr
push
mov
sbb
lret
inc
jecxz
mov
and
mov
sarl
rorb
cs
pop
mov
pop
jl
mov
mov
xor
mov
xchg
popf
es
out
movups
notb
jae
adc
pop
xchg
cmp
jnp
push
outsb
loope
xchg
insl
inc
xchg
aaa
ljmp
inc
mov
outsb
test
ret
jne
arpl
int
mov
jle
int
aam
inc
flds
xor
push
cwtl
pop
mov
push
adc
loop
jns
mov
xchg
jns
jnp
cltd
outsb
cmp
jne
data16
jb
test
subl
mov
jae
sub
popa
imul
in
mov
out
mov
pop
mov
es
mov
xchg
mov
stos
stos
mov
sbb
pusha
fdivl
cmp
xchg
mov
call
xchg
mov
iret
mov
xchg
mov
mov
fisubrl
clc
dec
xor
or
mov
push
dec
out
jp
mov
shlb
add
xor
pushf
and
ficompl
popf
dec
je
cli
dec
andb
loope
fcompl
or
dec
repz
rorb
mov
add
das
jnp
push
jnp
fsubr
ss
jne
imul
out
and
lods
fstl
cmp
jae
cmp
inc
xor
inc
push
xchg
std
push
rcrb
mov
nop
xor
inc
inc
lea
popa
sbb
mov
loope
xor
dec
ds
dec
inc
jl
std
mov
xchg
adc
gs
loopne
mov
mov
int
pop
subl
stos
js
gs
out
pop
inc
orb
jg
xor
xchg
test
xor
pop
adc
in
fstpt
pop
aas
dec
inc
inc
daa
sbb
dec
adc
loopne
aam
push
stos
push
cmp
jge
test
cmp
xchg
dec
jg
mov
mov
mov
pop
xor
sbb
test
pop
das
rcl
push
mov
sub
lret
mov
lock
cmp
mov
push
call
mov
hlt
hlt
aad
pusha
mov
xchg
je
loop
fdiv
mov
inc
mov
xchg
out
daa
push
cmp
cmp
inc
dec
sbb
lahf
out
outsb
or
out
in
arpl
enter
add
rol
fildll
mov
add
pop
mov
out
sub
xchg
pop
aas
mov
jnp
sbb
jg
sbb
lods
and
add
mov
dec
push
arpl
push
movsl
ret
jnp
jae
cmc
mov
addb
stos
pop
test
xchg
lods
lea
mov
sub
pop
pop
lods
mov
mov
inc
pop
hlt
xor
sub
outsl
rcrb
gs
lods
jg
ljmp
in
lahf
test
sar
bound
mov
mov
xchg
xchg
xchg
gs
pop
sub
pop
rorl
ljmp
adc
cmp
fsts
cmp
sbb
fdecstp
stos
pop
and
cmp
das
fadd
xchg
pop
test
nop
aam
test
push
xchg
add
or
xor
cltd
jbe
les
xchg
inc
out
out
jge
pop
sahf
fisttps
int3
cli
loope
lds
mov
in
inc
ja
jo
dec
push
mov
scas
fldcw
pop
ficoms
mov
add
fadds
mov
pause
mov
push
mov
pop
test
add
adc
push
lds
push
imul
xchg
jge
sbb
cltd
std
xchg
mov
inc
mov
sub
call
shrb
mov
mul
ret
mov
insb
push
mov
xchg
fldt
gs
les
mov
cmp
xchg
shlb
rcr
daa
xor
pushl
mov
pop
and
lods
sub
dec
pop
cmp
fisubrs
into
test
out
push
mov
out
loop
xchg
cli
jo
jae
push
pop
enter
stos
loope
jbe
ljmp
push
mov
fwait
test
xor
cmpsb
jp
fwait
nop
aas
add
sbb
jbe
cmc
mov
cmp
rorl
data16
js
cmp
jbe
jle
jno
lret
mov
mov
dec
pop
push
sbb
and
in
xlat
xlat
sub
mov
push
shll
adc
ret
rcrb
stos
dec
xchg
sbb
xchg
xchg
sub
sbb
shr
cmpsb
push
pop
fdivs
aad
dec
push
pop
dec
cld
mov
aas
arpl
shrl
test
imul
test
js
call
xchg
out
mov
inc
stos
pop
cmp
and
or
xchg
cmp
mov
lods
xchg
subl
inc
jo
lea
and
es
bound
fsubrs
push
pop
cmpsl
sub
incb
jnp
sahf
jno
cmp
ficoms
jecxz
ja
dec
cli
add
std
sbb
aas
decb
loopne
lcall
shlb
dec
mov
lds
jp
mov
sbb
in
and
cmp
fs
test
lret
leave
in
push
adc
das
fistps
mov
pop
push
hlt
fyl2x
ds
loope
shl
sub
xor
leave
out
mov
xchg
insb
sub
les
push
pushf
adc
cmpsb
fisttpll
insl
sub
xchg
aam
leave
ljmp
int
push
aam
test
rep
inc
aaa
nop
lahf
fwait
stos
add
incb
xchg
fucomip
sbb
and
insb
adc
adc
xchg
and
or
sahf
xchg
insl
xor
sbb
out
fnstsw
loope
sub
or
cmp
rcr
inc
xchg
rcl
subl
dec
mov
out
add
inc
mov
push
addr16
imul
add
mov
pop
dec
icebp
inc
mov
test
add
repz
enter
lock
sub
lods
dec
add
sbb
xchg
jge
mov
adc
outsb
out
sarb
movsl
jl
cmovl
jg
pushf
iret
insb
pusha
xor
iret
lods
fistl
cwtl
xchg
imul
cmp
es
mov
scas
hlt
in
push
out
and
jl
xchg
outsb
dec
adc
bound
pop
lahf
mov
and
inc
xchg
rol
repz
in
fdivr
mov
or
fwait
or
xor
sub
mov
xor
xor
xchg
fcmovnbe
mov
mov
or
rorb
cmp
nop
lods
sti
in
bound
in
mov
cmpsb
int3
fwait
shll
inc
movsb
mov
add
dec
call
and
xchg
cmp
mov
repnz
or
sbb
daa
lods
xchg
out
add
adc
dec
mov
cli
cmp
movsb
cmp
test
ret
loop
xchg
sub
sarb
cmpsb
sub
push
pop
mov
stos
xchg
enter
mov
add
xchg
jp
std
push
mov
mov
pop
clc
cmp
fwait
test
sti
repnz
xor
es
les
in
lret
fildll
jno
push
jge
xchg
pop
sbb
in
daa
gs
or
outsl
mov
stos
push
in
dec
pop
sbb
addr16
jbe
movsb
test
call
lds
xchg
scas
cmp
dec
repz
cmp
push
loope
pushl
push
xor
iret
test
xchg
lods
xchg
sub
pop
jns
mov
cmp
daa
xor
aad
or
bnd
push
sub
test
filds
adc
sub
sarl
xor
aam
scas
enter
movsl
test
adc
test
push
jno
es
pop
and
mov
xorb
pop
subb
cmp
stc
dec
arpl
sbb
and
inc
cs
cmpsl
pop
lock
add
test
sub
cltd
add
add
outsb
mov
sub
sbb
mov
arpl
int
insl
lcall
xchg
dec
cmp
imul
cmpsb
int3
insl
je
cmp
jns
pop
jle
sub
xor
movsl
sbb
fsubs
orb
dec
sub
leave
das
sbb
fiadds
clc
lea
inc
adc
mov
pop
xlat
and
xor
iret
aad
jo
cmpl
pop
popf
daa
cmp
scas
xor
call
fisttpll
in
cmpsl
or
scas
mov
push
mov
inc
push
cmp
or
sbb
xor
sbb
and
pop
gs
add
sti
stos
add
je
insb
jae
rclb
lods
mov
dec
pop
add
or
sub
es
mov
mov
xchg
bound
jmp
stc
jno
and
clc
in
dec
test
push
fstl
push
mov
and
jg
pop
ret
lods
or
jl,pn
inc
add
adc
outsb
and
jnp
sub
xchg
punpcklbw
adc
or
mov
jge
adc
dec
call
xchg
ja
pop
lock
mov
cmpsl
pusha
add
out
aam
xchg
std
xlat
out
test
jno
xchg
jmp
jnp
push
xlat
mov
icebp
sbb
cltd
push
fcoms
dec
movsb
sbbb
jb
or
sbb
sub
mov
ljmp
movsl
test
mov
sbb
out
and
dec
mov
lock
ret
sti
jmp
dec
in
lock
les
mov
insl
lahf
push
mov
xor
pop
icebp
cli
out
maskmovq
mov
cmpsl
mov
lcall
mov
std
pop
stos
ret
jne
in
lds
fistpl
sahf
push
sbb
inc
adc
mov
adc
in
decl
leave
fdivr
lock
sub
push
pop
inc
scas
push
cmpsb
jbe
fisttpl
fxch
xor
or
mov
mov
lock
les
in
dec
xchg
and
rorb
mov
add
orl
mov
mov
cmp
pushl
pop
xchg
int
jg
mov
or
lods
xchg
lcall
leave
cmp
rcll
push
je
xchg
imul
daa
dec
test
ja
push
mov
and
cmp
push
cmp
cltd
adc
nop
int
aas
nop
std
nopl
pushf
inc
lret
and
gs
cmpsb
orl
outsl
je
aas
pop
loop
fisubl
js
inc
sub
mov
pop
mov
arpl
nop
das
dec
test
push
push
xchg
das
inc
sub
test
sbb
sub
lret
inc
dec
bound
arpl
mov
cmc
in
loope
popf
jle
inc
lock
xlat
pop
inc
test
out
lret
jmp
js
pop
pop
test
xorl
int3
ja
xchg
sub
xchg
notl
cmp
or
jnp
jmp
jno
mov
jae
arpl
cmp
xchg
jmp
data16
jno
jb
pop
mov
xchg
fwait
inc
lcall
mov
jnp
xlat
fildl
dec
inc
jne
fsubrs
mov
mov
mov
add
in
ret
cmp
add
push
push
adc
jg
xchg
bound
or
ficompl
or
aas
mov
iret
data16
int3
mov
aam
in
cld
icebp
fbstp
mov
out
fsubrs
imul
js
mov
xor
rcr
les
lahf
dec
mov
mov
lods
push
xor
loopne
xchg
iret
fwait
je
je
lea
and
nop
xchg
sti
popa
pop
cwtl
in
xchg
xchg
add
jns
dec
pop
lret
sbb
das
inc
mov
mov
push
add
sub
jns
hlt
scas
jmp
jne
lret
sub
add
or
jno
mov
mov
pop
jns
sbb
add
faddl
and
jp
dec
lods
inc
jo
pop
pop
add
add
and
push
rcl
aas
sub
mov
hlt
push
xchg
fldl
stos
push
push
ret
mov
dec
or
outsl
andb
hlt
xlat
scas
fisttps
jo
and
repz
jb
jmp
das
mov
add
adc
pop
lahf
add
mov
mov
ffreep
sub
cmp
dec
imul
hlt
lahf
push
sub
hlt
xchg
outsb
inc
add
insl
lahf
leave
mov
pop
adc
out
divb
inc
fwait
in
push
pushf
into
fildll
mov
push
xchg
repz
add
fs
mov
cs
add
mov
jne
xor
or
xor
outsb
leave
arpl
daa
xchg
xor
sbb
mov
arpl
inc
stos
xchg
pop
sbb
pop
int
adc
sbb
and
adc
mov
push
xor
and
testl
push
add
aas
mov
mov
aam
fiaddl
out
test
xor
test
jp
int
sbb
jo
pop
fsub
mov
fidivl
xchg
cltd
xchg
ds
mov
int
pop
shlb
mov
pushf
add
cld
or
decb
adc
mov
jecxz
cmp
xchg
in
adc
jo
idivb
enter
into
xchg
push
sub
push
test
sub
mov
xchg
andb
xor
add
pop
mov
mov
sub
mov
pop
pop
int3
and
sub
lret
call
fwait
in
out
and
lret
adc
mov
sbb
out
outsb
mov
dec
aam
mov
pop
sbb
sub
push
mov
pop
imul
test
shlb
xchg
adc
pop
rclb
mov
inc
cmp
mov
jb
or
jl
jns
cmp
int3
dec
in
sbb
jecxz
shlb
mov
leave
sub
dec
aaa
xchg
ljmp
ja
dec
adc
mov
in
lea
xlat
add
mov
mov
cmpsb
inc
lods
fistps
lret
mov
xor
and
cmc
es
mov
push
stos
adc
lahf
insl
ja
out
movsl
ret
xor
out
inc
sbb
int
cs
daa
xchg
shrl
add
cmp
addr16
rcll
aas
xchg
call
sub
aaa
enter
inc
jge
loope
jecxz
sub
and
sub
xchg
data16
into
mov
push
jno
lret
ffreep
incb
sbb
or
das
adc
adc
lods
jno
into
mov
out
ss
mov
popa
minps
mov
test
fcoml
xlat
and
leave
test
test
xchg
adc
out
fbstp
mov
testl
mov
cld
xchg
jbe
xchg
cmp
cmp
mov
in
mov
pop
mov
in
lret
mov
cmp
dec
jbe
je
les
insl
xor
std
jbe
or
fsub
hlt
aad
lock
jbe
and
pop
orb
pop
sarl
test
insl
push
xlat
xor
loope
in
cmp
cmp
lea
lahf
mov
add
jae
int3
sbb
leave
pushf
pop
dec
movsb
mov
test
mov
sar
dec
pop
idiv
in
add
inc
push
cmp
xchg
jnp
jmp
aaa
cmpsb
cltd
inc
jnp
fldt
inc
lea
mov
arpl
adc
jno
cmp
mov
pop
mov
adc
xchg
adc
insl
imul
adc
je
or
cltd
outsb
jl
xor
sbb
shll
mov
add
jle
sub
ja
xchg
bound
rclb
sub
jb
add
sub
xchg
adc
fldt
sbb
sbb
xor
fistps
sbb
xchg
inc
rorb
sbb
lahf
fstl
loop
mov
hlt
mov
cltd
decl
fcoml
movsl
xor
or
sti
xor
minps
fcmovnb
sub
int3
pop
pop
mov
fnsave
movsl
outsl
and
and
enter
aad
xor
je
pop
in
mov
test
shlb
mov
sbb
fcmove
jbe
ret
cld
push
dec
movsl
xlat
mov
dec
les
jp
das
loope
add
jge
arpl
mov
xor
cli
imulb
lret
xchg
push
aam
push
mov
fsincos
call
ss
mov
inc
mov
stc
push
andb
adc
ja
test
dec
sub
pop
movsl
push
jmp
or
xchg
mov
mov
dec
insl
mov
stos
sbb
cmp
pop
enter
xor
sub
pop
mov
mov
orb
lods
aaa
dec
icebp
mov
scas
cmpsl
mov
adc
push
mov
fcomps
xor
iret
rcrb
ja
ljmp
cmp
xchg
push
pop
pop
pusha
repz
sub
divb
cmp
cmpsb
incl
movsb
sub
je
lock
lds
and
hlt
mov
pushf
out
sub
fs
push
add
xchg
ss
leave
xor
es
sbb
pop
mov
and
xor
pop
push
out
pop
jecxz
mov
xor
mov
ret
rcrb
movsl
push
inc
lds
add
cmp
sbb
push
cmpsl
hlt
decl
or
pop
push
mov
hlt
scas
test
push
fcoml
ret
iret
pop
in
xlat
mov
mov
push
push
test
add
rol
jns
sub
out
jne
leave
das
sbb
add
imul
or
movhps
and
push
inc
outsl
cld
mov
and
call
cmp
fisubrs
test
cmpsb
lods
xchg
mulb
pushf
int
daa
out
cmp
aas
and
inc
out
sahf
insb
inc
push
and
sub
call
cwtl
cmc
mov
idivb
adc
lock
jp
push
sahf
jno
sbb
loope
jns
cmp
cwtl
add
xor
fiaddl
out
pop
push
cwtl
and
dec
shlb
out
xchg
es
adc
dec
mov
rorb
xchg
add
daa
jns
addr16
adc
inc
sub
imul
pushf
jmp
mov
cmpsl
mov
jge
adc
push
dec
push
or
cmp
negl
xor
fisttpl
cld
xor
or
jo
mov
adc
sub
shr
dec
pusha
dec
cmpsb
imul
push
sbb
leave
push
cmp
out
fnstenv
xorl
icebp
cmpsb
lahf
mov
sbb
sahf
dec
fmull
mov
inc
lods
xchg
or
insl
sub
xchg
ljmp
mov
popa
xchg
lods
xorb
sarb
dec
and
hlt
add
addr16
cmp
sub
jno
xlat
lock
sarl
stos
pop
ss
fwait
ds
cmp
jge
sub
sbb
ret
hlt
jbe
aam
or
test
arpl
aam
cmp
mov
push
adc
and
cltd
clc
push
mov
push
jl
sbb
push
mov
jecxz
dec
adc
sub
std
adc
jle
pop
leave
adc
in
call
inc
xor
dec
cltd
ret
pop
sub
mov
mov
dec
mov
push
sahf
cltd
sub
or
sub
xchg
xchg
add
mov
incl
sahf
test
shrl
loopne
add
orb
xchg
lcall
loope
lcall
int3
orb
js
int3
xchg
mov
out
mov
fisubrl
jp
ror
cld
sbb
dec
jno
in
xchg
addl
enter
aad
dec
scas
push
hlt
andl
fldln2
int
movsb
sarl
shrd
mov
pop
daa
sub
test
jbe
mov
mov
les
addr16
fstpl
sub
into
sub
sbb
and
sub
xchg
mov
cmpsb
scas
and
adc
jmp
pop
dec
xchg
xor
mov
mov
mov
test
pop
dec
clc
push
jns
push
xor
sti
ret
mov
into
xchg
clc
fcom
sbb
xor
push
out
cmc
sarb
sti
sub
pusha
jbe
fnstcw
add
loope
movsb
pop
pushl
mov
aaa
pop
mov
in
in
out
std
mov
lea
pop
lds
orl
and
test
xor
mov
xlat
in
add
lock
int3
add
push
and
push
ret
outsl
mov
test
or
xor
movsl
addl
xor
pop
jbe
sbb
je
int
dec
adc
sbb
mov
imull
cmp
jae
mov
push
sub
inc
sbb
adc
pop
lock
adc
loope
push
mov
shll
scas
ret
cmp
das
jle
or
cmpb
jle
bound
push
mov
dec
icebp
loope
out
outsb
aas
mov
cmp
cwtl
mov
mov
adc
in
push
mov
imul
mov
out
push
jne
push
out
jge
es
sbb
mov
cmpl
dec
sub
and
into
lods
stos
aam
jo
sbb
jnp
call
js
or
leave
mov
or
test
imul
mov
nop
xchg
ljmp
jecxz
ds
in
dec
pop
pop
jl
orb
sbb
xchg
daa
inc
inc
xor
jp
clc
inc
mov
arpl
push
dec
pop
inc
sysenter
sbb
xchg
inc
ss
das
push
es
and
xchg
push
mov
lahf
adc
xor
cmp
dec
mov
xchg
xchg
mov
repz
mov
sbb
inc
adc
mov
loope
lods
in
ss
pop
roll
sub
jo
cmp
push
lods
sub
mov
add
insl
dec
cltd
scas
sbb
imul
daa
sbb
push
add
jns
cmp
xor
rorl
sbbb
mov
sub
jl
fdivrs
std
xor
in
push
and
test
andb
push
in
jmp
sub
jae
push
mov
mov
scas
jno
mov
ss
or
mov
mov
in
dec
cmp
aam
adc
das
test
xchg
popf
fldcw
xchg
mov
ficomps
jle
out
mov
mov
mov
xchg
aam
and
mov
mov
shlb
jp
add
icebp
pop
jo
fs
rorl
and
xorl
leave
out
aaa
cmc
cwtl
rcll
das
scas
and
mov
mov
stc
sbb
sub
fcmovu
aas
dec
icebp
xlat
xchg
fnstcw
ds
xor
stos
das
mov
pop
es
and
mov
fwait
xchg
out
cmpsb
jecxz
stos
sub
aaa
sub
popf
sub
pop
inc
les
jge
mov
push
divl
fbld
nop
or
ficomps
pop
lods
mov
sbb
jmp
out
cmpl
sbb
cmpsl
push
filds
test
add
fldt
add
stc
jae
ret
sub
sub
shll
adc
cmp
das
sub
mov
inc
sub
xchg
ret
and
sbb
xchg
add
mov
xor
nop
inc
xor
test
xchg
jl
adc
inc
jle
orb
fndisi(8087
cs
mov
ret
arpl
loope
pop
xor
dec
test
jg
addb
jl
mov
fistl
xchg
jo
shrb
and
add
xchg
sub
xor
pop
or
imul
test
sub
insb
rcll
imul
dec
sti
outsb
push
jbe
ret
push
dec
push
or
les
adc
push
andb
xchg
jae
sbb
mov
outsl
dec
sbb
or
xlat
sbb
cmp
shll
lcall
mov
push
lahf
test
sbb
jbe
fwait
jmp
pop
cmp
mov
dec
ret
lret
xchg
adc
cmpsb
insl
lahf
sbb
fscale
dec
lods
icebp
fwait
daa
out
jb
fiaddl
mov
shl
iret
mov
cs
adc
pusha
iret
mov
fmuls
sub
sbb
leave
xor
fmul
stos
push
sti
adc
sbb
dec
inc
lcall
punpckhdq
sbb
sbb
push
mov
push
movb
mov
lods
xor
lds
sbb
or
movsb
dec
ljmp
popa
lods
sahf
in
cmpsb
mov
loop
mov
sub
jae
dec
scas
addl
or
push
and
jne
enter
jno
mov
adc
mov
sub
mov
xorl
lods
imul
and
add
xchg
es
adc
sbb
pop
mov
in
add
mov
cmpsb
popa
sbb
lret
pusha
mov
jne
xor
pop
pop
dec
cmp
pop
jne
cmp
inc
out
divb
std
in
mov
inc
cwtl
fidivrl
add
in
adc
pop
hlt
fbld
pop
jg
adc
xchg
incb
sub
cmp
mov
mov
pop
pop
sbb
lds
xchg
and
adc
loope
adc
je
mov
lock
popa
pop
add
fstpt
mov
xchg
jnp
jb
fdivp
sub
icebp
data16
jge
into
outsb
insb
repz
push
xchg
insb
daa
scas
xor
jge
xchg
fcomps
sbb
cwtl
cmpsb
outsl
xlat
fimuls
aas
adc
std
sar
shrb
mov
mov
mov
orb
inc
mov
mov
fs
lret
lret
sbb
mov
sub
sub
jno
hlt
fadd
xor
ret
mov
or
das
das
gs
xor
mov
mov
xor
lahf
mov
sub
inc
pop
pop
inc
push
inc
push
in
pop
mov
fcmovne
mov
not
cmp
cwtl
rclb
icebp
ljmp
in
adc
pop
adc
mov
aam
idivb
jae
mov
rol
icebp
cld
stc
popf
test
ficompl
repz
pop
leave
aaa
pop
in
arpl
sti
cmp
fisttpll
mov
sbb
lea
jne
movsl
xor
outsb
clc
push
rcrl
pop
mov
sub
pop
repz
inc
mov
pop
mov
jns
fists
add
or
sub
int3
into
xchg
loope
cltd
add
dec
mov
mov
xchg
push
popa
ljmp
leave
out
lret
cs
or
pop
pop
std
mov
sbb
push
ret
mov
mov
bound
pop
imul
pop
mov
repz
push
fisubl
sarl
popa
mov
add
pusha
out
push
ret
icebp
mov
or
pop
test
aaa
fdivr
cmp
sbbb
inc
sti
mov
bound
out
xchg
push
jae
mov
repnz
mov
dec
int3
pop
add
mov
add
jo
das
imul
ss
ret
ss
and
fcompl
sbb
out
das
pop
cmp
mov
lret
cltd
mov
push
loopne
fdivrl
fwait
cltd
je
daa
xchg
dec
xchg
ljmp
loopne
mov
lock
movsb
adc
int3
mov
aas
mov
pop
sub
adc
mov
int
scas
jnp
ljmp
int
add
xor
push
fsubr
arpl
cmpl
ljmp
sub
js
scas
popa
adc
pusha
inc
lods
enter
outsb
jne
pushf
or
mov
jge
xchg
jmp
jl
js
add
or
cmp
adc
neg
cmp
cmp
scas
jp
out
movb
add
mov
jp
lds
in
inc
pop
push
inc
or
test
xchg
cmpsl
mov
dec
cli
cmp
adc
add
gs
mov
add
and
loopne
notl
imul
push
xchg
je
mov
mov
pop
adcl
rolb
dec
filds
sbbb
cltd
jp
push
repz
dec
sti
sub
mov
outsl
inc
xor
sub
lods
push
cltd
push
sbbb
aad
pop
insb
in
popa
mov
fs
lret
mov
jns
icebp
mov
orl
mov
pop
push
inc
imul
and
push
ret
pop
inc
mov
fsubrs
seta
mov
imul
jecxz
cmp
inc
je
jle
hlt
push
in
xor
jns
sub
push
inc
mov
insb
sub
inc
jae
add
insb
or
data16
sbb
mov
cli
div
and
into
cmp
adc
int
rcl
and
dec
rcrl
jl
bound
add
mov
sub
aam
jg
push
adc
or
mov
or
jp
loop
mov
add
jo
and
repz
out
out
mov
jp
pop
stc
and
mov
adc
bswap
and
cs
cmp
lret
or
cmc
mov
mov
or
cmpsl
cltd
jne
rcr
cmpb
sysenter
cmp
ds
sbb
out
push
jno
xor
xor
fs
mov
mov
test
mov
pop
and
cld
adc
lahf
ret
cmovge
ficomps
pop
cmp
test
xchg
lret
js
rol
xchg
dec
popa
imul
pop
jp
inc
sub
lcall
test
adc
jmp
add
sub
or
in
mov
mov
sbb
cmpsb
aam
or
dec
and
fstpt
mov
push
add
pop
and
mov
in
sub
pop
add
pop
mov
test
repnz
int
and
mov
push
mov
jl
inc
mov
jne
xchg
adc
andb
loopne
jne
lret
lods
dec
lret
sbb
pushf
jecxz
add
out
bound
daa
adc
out
inc
insb
xchg
jg
icebp
mov
in
imul
mov
imul
test
mov
jmp
and
imul
inc
sbb
xchg
pop
xchg
dec
int3
aad
add
or
inc
out
ljmp
sub
ret
imul
xchg
fs
fdivrl
ret
in
sbb
or
jmp
add
adc
mov
cmp
repz
leave
test
xchg
sti
int
sbb
out
cmpsl
dec
inc
imul
filds
jne
pop
cmc
scas
and
fists
iret
lcall
mov
push
fildll
or
stos
shl
add
fnstenv
adc
and
std
add
fistps
push
jl
xor
cwtl
scas
cmp
popa
sub
jae
call
dec
in
push
stos
movsb
add
cmp
fidivs
mov
hlt
fcomip
out
add
mov
inc
cli
xor
lahf
mov
xor
fisttpl
add
cmp
push
imul
sub
mov
fidivl
push
adc
pop
mov
rcl
adc
in
movsl
mov
cwtl
std
js
xchg
sub
test
cmp
mov
test
and
mov
pop
leave
cmp
inc
jnp
into
push
sbb
int3
add
out
loopne
cmp
ret
push
and
es
mov
push
pop
mov
or
repz
daa
fistl
lock
sbb
lret
fnstsw
add
mov
movsb
jecxz
into
pop
sbb
push
rorb
lods
push
mov
dec
sub
movsl
gs
aad
sbb
sub
stc
call
jno
iret
jmp
push
jae
dec
jp
cmpsl
cs
pop
or
jb
add
gs
dec
aaa
mov
int3
or
mov
mov
test
out
xchg
sbb
je
xor
fistpll
pop
daa
push
sub
and
inc
imull
xor
jg
cmp
fldcw
adc
divl
sub
lcall
fisubl
hlt
mov
push
cmp
and
fdivl
popa
sub
pop
fcoms
stos
fisttps
ja
inc
mov
add
and
das
leave
pop
loop
jbe
adc
pop
sub
push
inc
mov
sbb
bound
test
push
clc
rclb
or
pop
mov
push
mov
and
sbb
sbb
lock
xchg
dec
and
mov
add
dec
nop
lods
push
jae
jbe
inc
and
lds
leave
mov
scas
cmp
mov
hlt
outsb
out
pop
add
cmpsb
in
push
shr
and
hlt
jbe
adc
xor
xor
dec
mov
cs
push
inc
xor
popf
add
mov
scas
hlt
nop
or
cmp
xor
je
call
fcompl
adc
enter
loop
xor
mov
sahf
jg
sub
mov
lahf
jae
sub
fwait
mov
push
sbb
ljmp
adc
dec
and
xchg
std
pop
out
into
xchg
adc
lds
loop
fs
xchg
dec
in
imul
push
gs
mov
in
gs
loope
aad
or
jae
cmp
insb
mov
imul
cmp
adc
xor
in
and
mov
cltd
in
xchg
sarb
imul
lahf
pop
ja
pop
fs
fldcw
pop
sub
std
mov
test
or
inc
sbb
inc
mov
leave
sub
fdiv
xchg
jb
cmpsb
and
and
xchg
scas
fcomip
jecxz
jl
je
sbb
jecxz
and
sub
cmpsl
imull
add
stc
ljmp
xor
ljmp
cli
into
adc
add
rcll
aad
clc
push
mov
dec
pop
mov
popf
and
ret
std
sarl
cmp
shr
mov
cmpsb
xchg
ret
xchg
fwait
mov
out
jmp
andl
cmc
leave
mov
mov
es
mov
inc
jmp
iret
leave
test
mov
rorl
movsb
lret
stos
or
dec
xchg
or
or
in
insb
pop
mov
ja
sbb
ret
mov
subl
out
add
shlb
dec
pop
pop
adcb
pop
aas
jb
idivb
inc
cmp
loopne
outsb
push
pop
mov
inc
adc
inc
pop
lret
mov
pusha
pop
outsb
popf
sarb
imul
adc
and
adc
leave
push
inc
in
jl
lret
mov
add
dec
push
je
add
pop
outsb
imul
test
pop
fistps
fs
lds
cs
mov
xchg
jns
outsl
mov
xchg
divl
cmpsb
push
sahf
dec
push
arpl
cmpsl
rcrl
adc
sahf
cmpsl
and
pop
ljmp
fsub
scas
push
inc
outsl
cmp
imul
and
fsubrs
loop
scas
leave
add
js
daa
push
adc
fbstp
ret
call
fcmovne
jno
orb
mov
das
jo
stc
or
insl
sbb
int3
dec
cmp
or
mov
cmp
into
fcoml
outsl
mulb
data16
mov
movsl
testl
out
std
mov
and
outsl
pop
call
mov
adc
and
inc
into
pop
pop
mov
les
xchg
fwait
mov
inc
xchg
arpl
push
outsl
adc
jle
in
sub
mov
pop
aas
add
cmp
ret
scas
mov
xchg
stos
ss
xchg
gs
in
fs
dec
roll
jno
inc
sub
leave
stc
ror
insb
push
test
mov
aas
es
aam
cmpsb
sub
xchg
push
mov
inc
pop
dec
aam
add
test
js
iret
sti
jecxz
add
sub
inc
call
pusha
inc
dec
lahf
xchg
push
mov
outsb
mov
int
aaa
mov
stos
fildll
jne
and
insl
inc
mov
pop
xor
lods
pop
xor
les
ret
xchg
shlb
or
inc
cld
std
xor
popf
inc
push
cmp
bound
mov
jmp
push
in
jg
mov
mov
in
and
push
cltd
shll
sub
xor
jecxz
sbb
mov
aaa
arpl
cmpsb
inc
sbb
mov
dec
cmp
xchg
out
dec
xchg
fdivrs
inc
fnstenv
mov
push
add
out
ds
shl
icebp
imul
mov
int3
mov
push
jno
xorb
dec
adc
mov
push
xchg
add
test
or
ds
aaa
inc
mov
lret
sbb
or
mov
and
push
mov
in
bound
imul
pop
lods
jae
jne
repnz
es
imul
jae
xchg
jns
and
inc
push
xchg
cmp
cmp
loop
or
adc
sarb
cltd
insb
paddusb
cli
xor
movsl
andl
mov
and
lock
popa
push
jp
mov
adc
jns
mov
add
jne
rcl
lahf
lahf
lea
push
push
sbb
rcrb
dec
test
ret
dec
push
lods
jns
das
sub
xchg
shll
xor
pop
xchg
les
sarb
leave
mov
adc
rorl
jno
mov
mov
fcom
push
bound
jl
mov
push
push
es
jg
cmpsl
les
xchg
jne
loop
les
or
and
iret
pop
mov
adc
stc
je
stc
push
or
int3
dec
inc
lds
sub
push
jmp
call
loop
push
rcrb
push
or
nop
mov
insl
or
dec
test
and
lcall
pop
outsl
sbb
enter
mov
and
add
data16
xchg
cmp
pushf
or
in
pop
rclb
js
sarb
xchg
leave
loopne
insb
jb
pop
mov
pop
ljmp
add
cltd
je
mov
lret
and
lcall
ja
data16
fistpll
mov
sub
jne
sbb
inc
divb
rcrl
and
mov
xor
pop
xchg
stc
push
fcmovu
xor
iret
xor
dec
iret
lcall
cmp
out
in
fists
cli
call
lret
inc
lcall
orl
nop
lock
mov
mov
call
and
xchg
cmpsl
ret
or
into
mov
push
inc
push
and
xor
adc
and
or
inc
call
test
sbb
pop
and
mov
movsb
std
adcb
mov
stos
add
and
cmp
into
jns
insb
sbb
or
pop
push
shufps
cmp
jne
test
mov
leave
enter
popa
lods
loopne
or
call
inc
enter
xor
push
adc
adc
cli
dec
test
enter
mov
xlat
addr16
lods
xchg
icebp
or
push
and
testl
dec
jns
daa
jge
jl
cld
and
loop
add
sub
jge
pop
push
mov
cmpsb
push
add
add
inc
ljmp
sarb
jmp
sti
cmp
ja
xchg
fldcw
dec
sub
push
jl
dec
aam
cli
and
subb
pop
mov
push
cmp
pop
or
jb
loopne
xor
lods
xor
push
and
add
mov
sub
mov
outsb
stc
dec
cld
cmp
cmp
xorl
outsl
sbbl
pop
inc
daa
decb
mov
mov
hlt
jp
push
call
adc
inc
les
pop
pop
lcall
push
adc
fdivs
jbe
mov
and
cltd
outsl
cmp
sbb
outsb
and
push
sbb
dec
fmuls
movsb
cmp
jnp
mov
inc
ret
jecxz
movsl
add
jnp
rclb
xor
lahf
mov
push
into
decl
mov
pop
inc
movsb
fstpt
std
push
push
sub
inc
push
mulb
xor
mov
sti
stos
shl
int3
repnz
aas
add
aaa
and
pop
xchg
mov
leave
push
bound
push
xchg
mov
jo
push
dec
ret
cmc
xor
pop
xlat
mov
sets
movsl
or
jnp
push
mov
lods
call
dec
and
loop
cmpsl
pushf
rcrb
push
in
push
xchg
sub
repnz
cmp
push
and
pop
push
sbb
or
addr16
xor
inc
adc
setp
stos
lods
and
push
cmpsb
aad
or
xlat
lods
and
je
dec
ret
jp
pop
lcall
xorl
pop
das
js
lods
dec
push
sbb
in
mov
pop
lret
aaa
push
sub
int3
jmp
outsb
and
cmp
jnp
push
out
icebp
xor
jae
jb
sbb
sbbl
jg
test
mov
scas
popa
data16
cld
sbb
push
les
or
ret
jae
hlt
sub
cmp
bound
out
repnz
aas
clc
ja
push
jle
xor
push
adc
cmc
lcall
inc
sbb
sbb
shll
add
incb
loope
pop
mov
cmp
mov
push
cltd
push
pop
icebp
sub
push
inc
and
sbbb
int
pushf
mov
ret
in
sbb
pop
pop
outsb
pop
or
and
mov
mov
scas
popf
lcall
outsl
repnz
adc
pop
sbb
pop
mov
bound
mov
mov
mov
rcr
push
push
cmp
cli
nop
mov
cmpl
std
addl
fnstsw
xchg
in
jl
clc
add
push
pop
dec
cmp
movsb
in
rorl
daa
jg
ss
addb
pusha
andb
lret
or
test
out
mov
push
mov
xor
out
imul
loop
js
orl
sbb
repz
loop
imul
sub
or
jno
lret
dec
sbb
cmp
xchg
stc
cmp
push
lea
dec
cmp
xorps
adc
ja
or
rcrl
jl
cs
or
push
popa
rcrl
add
lret
shlb
scas
mov
les
or
inc
mov
mov
inc
add
dec
test
scas
pop
notl
inc
sub
enter
les
mov
mov
jl
xor
cmp
test
or
mov
xor
cwtl
xchg
push
sbb
or
popf
pop
outsb
add
fcomps
sub
insb
push
inc
bound
pop
jno
mov
leave
pop
shrl
mov
pop
lds
ja
jae
dec
mov
mov
mov
xor
icebp
lcall
add
or
lahf
mov
nop
xchg
jnp
in
sarl
movsb
mov
iret
jge
test
mov
xchg
fs
sub
dec
incl
jo
aad
and
int
stos
mov
popa
pop
and
push
mov
pop
inc
jns
and
add
rolb
and
push
lods
jg
or
in
jp
out
scas
ja
xchg
pop
cmpsb
jle
in
movsl
inc
adc
aam
or
cs
out
lods
pusha
sbb
jg
push
out
outsb
pop
cvtdq2ps
insb
or
push
icebp
adc
out
or
pop
test
pop
push
scas
notb
xchg
or
jge
sub
out
fstl
in
and
or
ss
lods
mov
jns
js
leave
pop
and
mov
in
nop
push
or
js
or
in
xor
es
add
aas
cmp
shlb
out
std
add
mov
mov
add
mov
mov
cwtl
cmc
mov
sub
inc
lods
ret
enter
push
gs
xchg
rcr
mov
pop
mov
aaa
lock
xchg
and
adc
adc
jbe
mov
outsb
xor
imul
jne
jns
pop
jg
mov
mov
inc
stos
sbb
lds
movb
daa
rolb
pop
jbe
pop
pop
popf
out
mov
hlt
push
loope
mov
xchg
mov
ja
inc
stc
jle
out
aas
mov
xchg
sub
leave
fldl
mov
mov
out
fwait
lret
cmp
sub
pusha
ret
push
addr16
lret
add
fs
lods
loopne
dec
xchg
sbb
sub
or
xchg
out
ficompl
add
xchg
pop
pushf
sub
out
mov
mov
mov
or
add
jnp
dec
int3
xor
jge
icebp
dec
addb
xchg
out
inc
mov
xchg
inc
jo
scas
sub
push
add
and
ret
pushf
into
out
pop
inc
xchg
lahf
dec
and
addl
cmc
nop
add
fcoml
cmpsl
inc
and
mov
mov
into
jae
sub
cltd
and
add
jns
roll
lret
stos
inc
cltd
and
pop
repnz
mov
push
in
push
notl
loope
cs
mov
jmp
lods
inc
movsb
ds
data16
je
gs
jbe
mov
pop
sbb
or
int3
movsb
fistpll
cmp
stc
fbstp
xchg
inc
pop
sahf
arpl
sbb
mov
pop
test
test
out
jmp
push
cs
pop
push
inc
mov
and
dec
mov
dec
divb
out
xchg
in
xchg
cli
xchg
lods
jo
pop
stc
mov
test
xchg
pop
js
mov
bound
ret
das
sarl
dec
inc
cmp
jecxz
fisttpll
call
cltd
enter
addl
ljmp
add
mov
movb
cli
mov
out
and
cltd
push
jno
mov
push
outsl
xchg
pop
pop
pop
inc
add
movsl
fs
out
js
outsb
ljmp
jl
ret
in
das
jo
aad
repnz
inc
push
sbb
push
daa
jae
xor
and
sbb
fdivrs
or
fimull
ds
pop
dec
sbb
xchg
adc
imul
int
cwtl
push
mov
jl
sbb
or
adc
mov
rclb
cmp
mov
sbb
push
dec
cmpsb
bswap
lds
xchg
or
movsb
pop
movzwl
mov
mov
fdivr
icebp
insl
std
outsl
clc
mov
rorb
add
xchg
adc
rorl
fstpl
loopne
in
movsw
ds
in
jae
icebp
pop
dec
sbb
cmp
mov
inc
jb
ret
cli
outsb
das
rcll
sub
fisubl
js
orb
fistpl
pop
adc
hlt
cmpsl
push
fnsave
clc
xor
push
sbb
movhps
fdivr
push
jp
hlt
inc
call
fisubl
gs
outsl
insl
push
push
push
enter
add
xchg
adc
gs
divl
xchg
dec
jmp
xor
test
stos
lock
cmp
mov
call
stos
fsubs
insb
or
xor
jne
inc
jge
scas
lahf
addr16
mov
out
mov
outsb
adc
lahf
cltd
fstl
cmp
mov
jo
mov
in
and
sbbb
pop
fpatan
push
out
shll
sahf
cmp
jmp
mov
loopne
push
xlat
push
mov
mov
rcl
ja
push
pop
sti
mov
pushf
aad
testb
adc
int3
in
fiaddl
xor
xchg
out
roll
and
popa
inc
stc
or
idivl
in
push
int
sub
cmp
stos
jb,pt
or
imul
dec
mov
sbb
cmp
jbe
push
xor
call
nop
dec
add
aam
cmp
or
icebp
add
dec
mov
mov
mov
xor
ret
test
mov
inc
idivl
inc
xchg
jg
push
xor
fbld
pop
negl
mov
inc
iret
inc
xchg
mov
xlat
cmp
insl
into
loope
inc
cld
dec
loope
ret
out
push
in
dec
fisttps
dec
jne
xor
neg
inc
mov
cld
pop
lea
cmpsb
xor
daa
cwtl
sub
ss
mov
bound
jno
or
gs
lods
push
out
dec
int
cmp
lahf
fidivl
daa
inc
lds
arpl
push
dec
jae
lret
insb
push
fdivrs
xor
mov
inc
outsl
mov
imul
mov
fldl
push
call
add
lds
repnz
adc
push
sbb
arpl
mov
lods
fidivl
inc
aaa
sbb
cmpsb
aaa
iret
sub
mov
sub
clc
enter
push
pusha
push
mov
add
cli
sti
sub
push
cmp
mov
xchg
cwtl
cmp
pop
sub
popa
mov
xchg
scas
dec
xor
je
stos
jmp
out
adc
adc
jns,pn
popf
push
mov
cmp
dec
push
push
clc
out
push
and
pop
sbb
jle
leave
data16
cld
popa
push
mov
loop
and
push
dec
pop
pop
mov
aas
aam
mov
xor
int
pop
push
dec
sbb
cmp
dec
mov
cmp
insb
inc
mov
inc
pop
cs
ja
adc
inc
ljmp
inc
adc
aad
fwait
dec
cmp
xchg
fisubrl
icebp
inc
push
je
test
inc
adc
sub
push
gs
shl
movsb
iret
pop
dec
mov
jle
sarb
mov
adc
movsb
leave
fwait
jge
imul
insb
xchg
std
mov
xor
mov
loop
fwait
xor
sub
jo
or
sbb
push
inc
jecxz
inc
jg
fcompl
imul
mov
shrb
subb
xlat
jo
or
gs
xlat
cmpsl
or
inc
data16
push
ficompl
ret
mov
adc
cmp
incl
out
xor
dec
imul
and
pop
adc
pop
sahf
cmp
push
and
xchg
std
cmp
dec
dec
icebp
xchg
jmp
mov
aad
push
insb
jae
cmp
shll
mov
and
pop
inc
rol
rcl
movsb
stos
sahf
inc
sbb
loope
dec
sbbb
add
subb
inc
out
dec
pop
lods
test
sbb
daa
lgs
or
push
outsb
sbb
in
mov
nop
push
popa
aad
adc
jae
mov
movl
sbb
xchg
push
scas
mov
jb
jmp
mov
cmpsl
lret
bound
xchg
dec
mov
cld
jge
jl
repnz
pop
xchg
xor
xor
sub
xor
cld
int3
mov
mov
lds
mov
dec
inc
jmp
test
dec
or
aam
mov
mov
bound
mov
mov
insb
jns
mov
in
jg
clc
jl
adc
cltd
cmpxchg
xor
aam
insl
or
addr16
clc
stos
cmc
mov
mov
mov
test
nop
dec
sub
scas
add
test
outsl
gs
sub
push
jbe
cmp
xchg
mov
jp
cmp
sti
sub
jno
adc
cmpb
pop
or
sbb
adc
jmp
add
add
enter
out
mov
movsb
add
mov
sub
icebp
cltd
in
or
in
add
sub
rcll
ror
pop
jbe
sbb
xchg
out
push
jb
shr
push
cmp
sub
and
lock
pop
sub
orl
and
xor
fsubs
stos
xlat
jno
mov
mov
pop
cmp
sbb
ds
das
adc
cmpsl
jmp
cmp
insl
sbb
cmpl
ret
cld
xor
enter
sbb
inc
dec
pop
pop
cmp
and
pop
out
jmp
dec
enter
push
clc
fnstenv
add
sar
mov
movsl
push
inc
and
filds
jae
push
mov
imul
mov
lods
ljmp
rcrl
or
mov
and
ss
aaa
fwait
and
ret
leave
inc
cld
cmp
inc
inc
add
and
repnz
inc
jecxz
pop
mov
mov
mov
push
and
push
aad
mov
pop
fwait
rolb
jns
mov
inc
addr16
jno
sbb
and
insb
fbld
pop
scas
into
lods
jae
add
push
push
incl
adc
movsl
ret
add
hlt
adc
into
add
shrb
es
scas
pop
push
add
add
mul
or
dec
arpl
cmpsl
dec
lahf
xor
and
test
add
mov
fwait
rcrl
pop
aas
daa
movsl
jle
ret
popa
loope
cmp
adc
xor
or
xchg
add
lret
and
jae
mov
jmp
push
shl
push
loope
out
jae
jbe
fstps
lods
sub
or
add
or
push
lret
ss
adc
adcl
ss
notb
xorb
cmp
ret
sahf
imul
and
push
dec
roll
js
aam
in
mov
enter
push
and
push
out
outsl
movsl
enter
mov
mov
cmp
fldl
and
mov
cld
push
mov
and
cltd
mov
xchg
lds
test
lods
push
sub
jb
int
pop
jg
divl
sti
popf
js
sti
test
jnp
and
sbb
cmp
mov
in
adc
iret
fnstenv
inc
dec
xor
xchg
xor
in
xor
xchg
in
outsl
sarl
test
jmp
push
dec
movsb
dec
pushf
popf
mov
rcrb
pop
dec
ljmp
adc
lock
mov
lea
aas
daa
fimuls
je
xchg
dec
mov
rcl
addr16
push
xor
pop
fldenv
mov
loope
mov
in
divl
in
mov
daa
cmpb
cwtl
cmp
and
jbe
mov
lea
mov
imul
push
sub
daa
cld
sub
fs
punpcklbw
stos
gs
lret
sbb
bound
xor
imul
push
cwtl
out
xchg
out
add
fidivs
mov
xchg
and
mov
sbb
inc
sbb
lods
call
mov
js
push
mov
sti
dec
xor
pop
gs
push
popa
data16
andl
mov
xor
into
mov
or
jge
lods
jb
lahf
mov
xor
inc
jno
sub
scas
pop
push
sbb
arpl
mov
roll
mov
fisubs
pop
push
bound
mov
jno
and
pop
lret
pop
jne
fbld
rcrb
dec
cli
mov
fdivrs
mov
adcb
jno
pop
fs
aas
enter
jecxz
out
fmuls
pop
gs
and
call
dec
js
outsb
dec
rcrl
mov
out
int
stos
inc
or
push
add
or
hlt
inc
in
cmp
stc
out
mov
je
lds
roll
push
addr16
test
or
stc
scas
aam
adc
iret
pop
iret
push
sbb
mov
jle
cmpsl
cmp
or
cmpsl
sub
inc
mov
mov
adc
stc
xlat
pop
enter
pop
cmp
and
cmp
push
xchg
xchg
arpl
out
pop
std
nop
mov
sbb
jle
xlat
xor
addr16
movsl
cmpsl
mov
out
xchg
sub
mov
push
adc
inc
dec
push
push
aad
in
idivb
xlat
data16
xchg
insb
jmp
imul
js
mov
ja
dec
cmp
loopne
ret
cli
lods
icebp
inc
lahf
jb
loope
mov
lock
gs
cmp
rcr
dec
gs
add
mov
cmp
push
or
rcll
inc
insl
outsl
bound
adc
insb
pop
jmp
pop
dec
push
outsl
aas
cmp
xchg
push
cmp
cmp
das
jle
lods
dec
mov
sub
idivl
push
ficoms
xchg
addr16
stc
jae
fs
leave
sub
test
or
sbb
sub
rcll
lea
inc
arpl
jmp
cmpsb
sbb
repz
sbb
mov
xchg
mov
fs
mov
pusha
jno
dec
or
push
sbb
push
pop
xor
xchg
xchg
dec
or
lahf
jl
pop
test
icebp
imul
pushf
fisubs
mov
xchg
lahf
int3
popa
push
ret
out
mov
insb
mov
ret
es
inc
push
js
add
mov
or
xor
loope
nop
movsb
xor
loope
mov
gs
movl
jl
aaa
push
add
inc
xchg
mov
fsub
int
xchg
rol
push
sub
shl
lcall
fcmovne
sbb
popf
out
xor
sbb
in
cmp
jecxz
jp
xchg
test
lods
lea
sub
or
mov
sbb
xchg
in
and
sahf
xchg
xor
hlt
mov
in
cmpsb
push
les
fs
dec
lock
adc
es
cld
xchg
lock
jle
or
fldcw
adc
lock
mov
mov
idivb
xor
mov
xchg
adc
cmp
xchg
movsl
lea
pop
pusha
jp
mov
adc
dec
push
sub
sbbl
jb
repnz
cld
sarl
xlat
sub
xchg
out
orb
xchg
mov
das
or
inc
in
popa
mov
popf
xchg
or
add
xchg
cmpsb
lea
sahf
imul
lcall
into
fists
bswap
imul
shll
push
xchg
iret
cmp
adc
data16
push
cmp
cltd
ret
icebp
incb
rcrb
adc
cs
out
adc
xchg
dec
scas
jle
outsl
or
arpl
fnstsw
xor
sbb
mov
and
push
test
dec
xchg
mov
or
push
faddl
mov
ljmp
sub
lods
sbb
xchg
and
inc
inc
out
imul
test
jecxz
es
stos
push
lds
cld
sub
sbb
mov
mov
lods
les
jg
mov
jo
imul
mov
jae
or
call
cmc
outsb
or
add
or
movsl
mov
or
sbb
stos
outsl
jmp
stos
jnp
xchg
adc
mov
stos
cmp
movsb
dec
pushf
and
dec
mov
dec
pop
cmp
int3
stos
mov
push
sbb
xchg
xlat
jo
js
mov
pop
dec
jns
cmc
loope
shll
dec
aaa
xchg
fisubs
add
jne
cmpsl
sub
push
daa
rorl
sbb
add
mov
pushf
imul
les
clc
push
insb
stos
jns
mov
repz
xchg
xor
or
jno
addl
icebp
pop
je
cmp
ret
dec
daa
in
dec
sbb
xchg
aas
fwait
rorl
adc
xchg
and
js
sub
inc
sub
push
sub
mov
add
js
dec
add
pop
loopne
xchg
imul
mov
xor
test
mov
dec
cld
out
stos
into
mov
push
js
push
repz
rcll
clc
sub
in
adc
loope
or
cld
cltd
dec
dec
rcll
hlt
fistpll
push
xchg
add
xchg
jns
into
mov
lea
fdivrs
pop
jb
leave
adc
adc
inc
or
sub
dec
into
pop
into
mov
imul
xor
sbb
pop
xor
inc
xor
dec
add
leave
sbb
mov
sahf
pop
sub
std
inc
cmp
cli
std
sub
push
fstpl
stos
lds
dec
push
je,pn
shrl
in
popa
cs
jg
mov
gs
enter
xchg
mov
cmp
mov
mov
fisubl
xor
mov
pop
or
xor
pushf
mov
and
cwtl
mov
inc
lret
iret
cmp
icebp
dec
or
inc
mov
xchg
mov
add
push
sub
jmp
mov
and
cmpsl
or
stos
mov
and
js
xchg
fwait
mov
ljmp
or
mov
mov
mov
mov
lret
outsb
inc
push
mov
imul
xchg
test
in
dec
jl
sub
push
rcrl
pop
mov
repz
cmp
push
adc
lahf
popa
xchg
js
inc
xchg
cmpsb
ret
hlt
lret
aad
adcl
cmp
xchg
xor
jmp
push
mov
mov
test
xor
adc
lods
jl
ja
jl
sbb
dec
iret
dec
rolb
inc
int3
xchg
xchg
pop
mov
lret
scas
jmp
cmp
stos
xchg
jg
xor
sub
push
sub
lahf
iret
push
adc
sbb
rol
ds
adc
mov
jns
fists
rorb
sbb
ds
scas
popf
stos
fdivs
addr16
enter
pop
sbb
mov
into
orl
or
clc
jo
ss
adc
jo
arpl
jecxz
fildl
int3
sbb
shrb
imul
jmp
test
scas
sub
xchg
jge
fidivrl
adc
pop
xor
push
sahf
add
and
jge
sub
push
ds
es
adcb
and
fnstsw
icebp
imul
adc
or
push
loopne
test
lret
push
scas
in
mov
popa
mov
or
sbb
je
inc
adc
mov
mov
pop
push
adc
mov
cmp
xchg
xchg
add
in
inc
lret
pop
and
xlat
and
shll
out
inc
adc
cld
mov
mov
inc
enter
mov
in
jb
test
or
mov
cmp
stos
ror
leave
fwait
pop
dec
pop
inc
ja
mov
jo
test
inc
mov
stos
xchg
jecxz
xor
or
ret
and
shll
or
imul
test
inc
sbb
push
or
cmp
ret
mov
mov
dec
fucomi
imul
inc
cmp
fwait
out
mov
dec
stos
pop
or
dec
es
jnp
int3
sub
jno
sub
mov
xor
add
shl
inc
sbb
pop
pop
mov
call
sbb
data16
fistps
pop
dec
movsb
lahf
fistpll
xor
jne
jo
pop
orl
les
jl
mov
lret
sub
imul
dec
rol
daa
and
clc
or
aam
stos
mov
shl
mov
or
das
push
sub
jns
and
mov
sub
fstpl
dec
loopne
inc
cmp
xchg
mov
subb
enter
mov
pushf
jl
mov
cmp
or
std
lret
xchg
rcrl
ss
mov
rorb
test
xor
fnsave
xchg
pop
adc
and
push
mov
xchg
imulb
cmpsb
pop
daa
cmp
shlb
and
mov
pop
sbb
xchg
inc
mov
pop
inc
adc
push
cmc
xor
mov
andl
jnp
js
fiadds
lock
shlb
cld
cli
sbb
sti
inc
add
fnop
loop
enter
cmp
xor
inc
pushf
cmpl
fnstsw
gs
and
clc
mov
out
and
ss
add
lock
pop
nop
ret
jecxz
push
pop
pushf
push
cmp
jl
xor
ret
sbb
push
lea
vpmulhw
xor
sarb
lock
lcall
mov
enter
pusha
mov
pop
adc
jnp
xor
and
dec
xchg
fadd
adc
and
js
mov
lods
iret
loop
jnp,pn
in
js
loopne
mov
dec
adc
cmp
inc
push
lahf
ljmp
ljmp
sub
nop
or
mov
lock
ja
mov
mov
push
cmp
inc
popa
xor
and
and
add
icebp
jb
arpl
and
mov
ret
mov
testb
dec
mov
inc
cmp
jl
scas
lock
pop
jg
mov
sti
in
out
add
and
or
loopne
pop
dec
and
ret
dec
jb
cld
aas
push
div
rcrl
test
test
jle
jne
lcall
sub
and
aad
sub
cmpsb
nop
jg
dec
out
ja
rorb
add
mov
adc
or
sbb
add
xchg
pop
test
inc
mov
aaa
mov
inc
adc
gs
pop
xchg
pop
loopne
xor
mov
lock
shlb
xchg
pushf
adc
ret
cmp
or
repz
lds
dec
enter
push
int3
jbe
pop
mov
push
lret
das
and
movsl
mov
daa
negl
jp
enter
lods
push
fcomps
subb
sub
je
jne
flds
sahf
test
mov
inc
pop
or
xor
addps
push
ja
fmuls
add
mov
push
dec
jns
sar
pushf
cld
fistl
repnz
inc
leave
jns
repz
call
inc
scas
mov
stc
cmpsb
movsb
shlb
sbbl
jge
push
movsb
sub
mov
add
in
sub
add
add
mov
out
aas
out
test
jmp
lea
dec
arpl
cmc
mov
aaa
adc
sub
xor
fwait
cld
aad
in
call
mov
out
adc
mov
cmpsl
xchg
iret
sbb
push
mov
xor
shrb
dec
ja
pusha
push
jecxz
or
mov
jl
and
sub
lods
dec
xchg
outsl
fnstenv
adc
cwtl
and
cmpl
mov
shlb
stc
clc
pop
pop
movsb
notl
push
mov
test
mov
mov
push
lahf
notl
or
adc
jl
setge
vmovntps
movsl
repnz
les
mov
mov
lret
pusha
test
jle
fldcw
aad
or
or
rcll
sbb
test
add
loopne
pop
frndint
pop
scas
sbb
xchg
pop
dec
lret
pushf
cmpsl
mov
cmp
leave
andb
fildl
sbb
jns
cmc
jg
mov
and
xchg
xchg
xchg
aam
xor
mov
xchg
sbb
ja
cmc
and
mov
repnz
add
hlt
call
jmp
imul
fstpl
sbb
pop
xchg
mov
xchg
and
aam
push
cmp
push
inc
dec
cmp
xor
xchg
mov
jmp
or
outsl
fsub
mov
add
repz
imul
jb
xor
or
or
rcrl
or
test
sub
jmp
inc
fstps
nop
xchg
xchg
jmp
mov
stos
int3
addr16
pushw
xchg
fistpl
xchg
mov
ret
roll
xor
sti
dec
mov
in
or
out
lods
pop
sbb
and
add
or
push
pop
dec
lods
inc
jne
test
sbb
addr16
inc
pop
xchg
cmp
push
aas
jg
or
mov
pop
out
movsb
xor
test
shlb
pop
adc
dec
pop
jnp
test
stos
and
jecxz
pop
sub
lahf
sub
outsb
fstpl
int
call
xor
mov
fs
jnp
adc
in
lods
cmp
mov
insb
push
cmp
loope
aad
leave
add
dec
adc
inc
enter
mov
cld
jno
sbb
adc
mov
jge
nop
mov
or
add
jl
addr16
pop
dec
lea
outsl
out
add
cwtl
inc
push
dec
cli
dec
xor
scas
lds
bound
addr16
repz
cltd
fidivs
rolb
repz
mov
push
in
push
cmp
mov
lret
jo
add
inc
cwtl
je
out
cld
add
mov
shlb
mov
or
cmp
and
lret
xchg
fsubp
push
lods
and
movsb
sbb
jle
jecxz
fdivr
and
aaa
and
add
push
arpl
jecxz
scas
adc
jns
divl
sub
popf
sar
xchg
pop
adc
stc
sbb
mov
repz
rol
pusha
pop
pop
inc
jne
daa
subl
add
jnp
ss
repz
es
cmp
add
fidivrs
lcall
les
out
pushf
jne
mov
add
mov
test
cmp
cmp
xchg
and
aas
mov
push
addr16
pop
ret
insb
dec
cmp
rorl
ds
or
xchg
or
xchg
scas
vcomisd
je
and
cmpsb
into
inc
add
add
jbe
jge
adc
mov
cs
imul
add
pushf
icebp
mov
int
imul
push
js
aas
dec
cwtl
rcr
out
imul
inc
push
test
lret
mov
or
mov
xchg
push
adc
jecxz
andl
inc
mov
cmp
fisubs
inc
nop
dec
mov
or
push
push
jae
cmp
vpextrb
inc
cld
lret
je
nop
fdiv
ja
xor
mov
out
xor
cmpsl
add
negb
cmp
fildll
loop
mov
push
rol
pop
jp
xchg
in
gs
add
mov
into
subl
fadd
dec
fildl
leave
xchg
mov
lea
out
rcl
inc
jecxz
lret
xchg
cmp
outsl
lret
in
xlat
imull
in
xchg
repnz
sbb
lods
out
ret
aaa
push
ljmp
fcoml
dec
addb
and
lea
push
jbe
jb
mov
cld
pushf
jnp
or
mov
mov
push
test
movsl
mov
arpl
mov
and
sbb
lods
cld
daa
ds
inc
fs
add
cmp
sbbb
pop
sub
jae
or
add
sub
push
mov
in
xor
call
sub
and
repnz
lea
add
mov
aad
mov
jecxz
add
pop
fsubrs
aam
xchg
fwait
sub
cli
sahf
enter
mov
fcos
jmp
nop
mov
hlt
sbb
aam
insb
pop
das
xor
inc
int
xlat
mov
hlt
inc
mov
cmp
jo
fnstcw
pop
adcl
add
ja
dec
pop
adc
pop
xchg
inc
adc
lret
push
mov
loop
xor
cmp
cmp
lret
fwait
out
das
fistps
sbb
inc
and
dec
mov
popa
repz
or
insl
xlat
sub
stos
adc
jns
fcom
xchg
adc
loopne
sbb
sub
add
push
push
lcall
push
loope
ja
repnz
sbb
push
add
xchg
lea
xchg
or
int3
mov
jae
divl
push
daa
jmp
push
adc
and
ja
pop
inc
adc
adc
add
cmp
mov
jle
aad
xor
pop
dec
inc
add
push
cmp
loope
out
out
in
imul
test
fs
sahf
call
inc
insb
add
or
call
mov
orb
mov
loope
xor
cmpsb
imul
pop
movsb
pop
or
popa
mov
inc
lcall
movsb
inc
jo
pop
or
test
xchg
sub
in
add
les
and
shrl
or
inc
push
sbb
lods
cmc
in
dec
fsubr
in
cmp
mov
jb
jb
stos
enter
shrb
mov
insb
ljmp
xchg
xor
out
div
xor
and
cwtl
dec
les
push
repnz
pop
pop
sbb
dec
pop
shrl
cs
out
xchg
dec
pusha
push
xor
pop
cmp
xchg
pushl
addb
mov
push
ret
rorb
inc
mov
inc
test
or
fs
and
divb
ja
ss
dec
cs
mov
aad
push
lcall
iret
xor
ret
xorb
inc
cld
mov
xor
sbb
shlb
movsl
cmp
mull
sar
xor
cwtl
in
add
xchg
into
cltd
or
add
mov
out
jne
xchg
jmp
push
fisttps
das
test
leave
packsswb
testb
notl
push
add
pop
lahf
int
in
sbbb
mov
add
jbe
add
mov
jmp
xorb
jmp
mov
shrl
lea
imul
inc
in
add
int
push
lds
bound
pop
ljmp
inc
mov
in
inc
fistps
test
xor
jb
or
xchg
mov
jp
xchg
mov
mov
pop
adc
loope
mov
test
push
bound
ljmp
xor
mov
inc
das
sbb
cmp
int3
adc
add
xor
fcmovu
mov
scas
scas
lret
std
cmp
push
xor
fdivr
mov
clc
lods
shlb
dec
call
pcmpgtd
aad
sub
or
lcall
fcoml
lods
inc
inc
cmp
dec
call
mov
sub
inc
enter
pop
mov
dec
cmp
add
mov
cmp
pop
notb
imul
jbe
out
add
repz
out
call
out
sub
movsb
insl
int3
arpl
iret
fs
inc
mov
add
xlat
cld
leave
jno
fbld
cs
mov
scas
add
test
clc
mov
outsb
in
mov
dec
shrb
vphadduwd
aad
mov
sti
mov
dec
int
pop
mov
or
pop
push
jmp
or
bound
rcr
inc
or
lret
pop
dec
ficomps
cmp
fcoml
into
or
mov
enter
sbb
mov
cli
add
mov
fcoms
shr
xlat
cmp
xchg
into
out
lea
ficomps
stos
cmpsl
sahf
loope
fwait
popf
sbb
xchg
add
mov
outsl
mov
xlat
test
inc
inc
xchg
dec
mov
std
into
xchg
jg
in
cld
nop
pop
mov
popf
sub
movsb
std
inc
cltd
cwtl
ja
lds
xchg
and
test
dec
pop
adc
cmpsb
dec
sub
stc
sbb
jae
dec
inc
xchg
jg
inc
js
adc
mov
or
dec
stos
sub
pusha
mov
dec
cltd
xor
sub
dec
std
es
clc
repz
out
andb
addr16
ljmp
jbe
jno
jnp
ret
gs
xchg
xor
lret
iret
leave
adc
push
outsl
test
xchg
sub
les
rorl
pop
push
loopne
jns
jl
ret
cli
lock
stos
pop
sub
mov
push
mov
mov
loop
fsubs
cmp
stos
jns
int3
pop
mov
lods
jg
dec
pop
dec
or
push
mov
subl
pop
scas
push
or
lods
mull
xchg
shll
add
mov
adc
popf
push
add
jecxz
push
sbb
incb
repz
or
mov
inc
pop
mov
mov
shlb
jge
pop
mov
mov
loop
gs
cmc
out
sti
leave
push
xor
jl
and
mov
addr16
inc
sub
dec
repz
lahf
xor
jne
lahf
mov
dec
or
xor
inc
rcl
addr16
inc
inc
stc
lods
aaa
mov
movups
into
stos
cmp
int3
mov
insl
mov
lret
pop
aam
xchg
jmp
mov
dec
pop
movsb
cmp
lahf
test
out
fimuls
in
mov
pminub
mov
xor
mov
and
push
pop
adc
addr16
popa
mov
xor
stos
loop
popf
inc
push
jecxz
imul
mov
aas
repz
test
sbb
dec
xchg
ret
mov
movsb
jne
push
push
mov
lock
dec
in
pop
insb
cltd
iret
shrb
out
call
outsb
test
cltd
out
push
xchg
inc
fcomip
inc
mov
pushl
push
mov
push
rcr
dec
int
mov
jge
xchg
or
lods
sub
movsb
jbe
into
mov
push
lds
mov
sbb
cld
cld
cs
sbb
dec
cmc
or
ficomps
movsl
sub
pop
sbb
leave
add
mov
pop
adc
sbb
push
sti
shll
daa
sub
lahf
fsub
sub
mov
fidivrs
stos
adc
pop
mov
sub
add
aaa
or
je
pop
adc
xchg
pop
mov
aam
sbb
push
fisubs
mov
clc
cmpsl
add
in
mov
aam
stc
sbb
shll
mov
lods
xor
in
shl
nop
mov
jb
add
jno
stc
inc
sub
push
test
push
and
add
xchg
imul
mov
lods
mov
pop
aaa
fildl
jl
idiv
dec
enter
fmuls
je
aaa
sbb
iret
fcomp
addr16
push
push
dec
dec
imul
test
and
push
mov
lcall
jns
movsl
push
xor
dec
sbb
jmp
rorb
mov
sbb
push
dec
pop
shl
cli
push
push
cmp
jp
inc
add
scas
add
rcl
xor
into
daa
fwait
insl
mov
mov
loopne
xor
mov
data16
popf
push
subb
adc
inc
and
adc
push
outsl
cwtl
iret
call
xchg
mov
inc
addb
sbb
inc
data16
insb
inc
addr16
xor
rolb
pop
mov
jecxz
xor
outsl
ljmp
fisttpl
or
sbb
and
dec
es
xchg
loopne
pop
sub
push
pop
push
in
testl
pop
lret
ds
in
cmp
shll
pop
cmp
popa
loop
xchg
mov
out
fnsave
ljmp
push
jge
adc
sar
fwait
lret
dec
scas
pop
lret
push
imul
lret
iret
xchg
incb
test
dec
mov
scas
sbb
cltd
adc
jbe
push
rcrb
ds
insl
std
jmp
adc
subl
mov
jmp
xchg
sub
repz
push
pusha
push
push
out
dec
xchg
mov
lret
jg
out
scas
jo
or
sbb
sub
mov
popf
js
push
add
mov
cmpsb
add
les
movswl
shll
arpl
mov
mov
sbbl
mov
xchg
jo
mov
push
pop
ds
fisubrl
call
lcall
xchg
inc
push
push
jg
mov
lahf
cmpl
mov
jne
mov
mov
xchg
or
mov
add
adc
mov
jge
in
ds
lcall
adc
push
push
neg
dec
pushf
jp
outsb
inc
xchg
insl
in
mov
push
aaa
adc
lret
mov
sbb
shll
je
movzbl
mov
xor
inc
lahf
sbb
fisttpl
mov
push
sti
cmp
out
xor
lret
and
cli
push
mov
in
movsb
in
cmp
push
aas
xor
outsb
pushf
jl
xchg
mov
cmp
adc
xlat
jp
jle
inc
jo
mov
push
xlat
rcl
cltd
ds
outsb
es
fistpl
pop
pop
jl
arpl
push
frstor
jmp
lds
shll
enter
es
sub
adc
xlat
loope
fildl
xchg
and
mov
pop
push
inc
pop
add
xchg
lods
mov
into
test
out
adc
outsl
pop
stos
dec
jne
je
stc
adc
dec
inc
mov
hlt
roll
xor
les
adc
pop
xchg
pop
loop
sub
cmp
aam
dec
fdiv
fcomps
push
jmp
in
jle
stos
les
push
xor
xchg
inc
dec
jbe
dec
push
dec
aas
test
jno
xchg
xchg
pusha
subl
push
xchg
test
ret
data16
push
xchg
scas
inc
dec
ss
ljmp
popa
insl
dec
leave
outsl
and
dec
pop
addr16
xchg
fs
pop
xor
out
aaa
fnstcw
ret
loope
fsubrs
lcall
imul
rcrb
jmp
pop
xchg
fsub
cmp
pop
int
mov
cltd
andl
and
pusha
or
sbb
imul
add
insl
lock
mov
lcall
lock
jp
dec
lret
jbe
lret
pop
sub
inc
dec
cld
adc
sbb
pop
bound
xchg
sub
xchg
pop
insb
push
nop
out
jmp
xchg
mov
push
nop
imul
and
sub
test
mov
xchg
mov
test
xchg
ret
repz
adc
nop
jb
out
cwtl
dec
adc
repnz
adc
stc
aaa
xchg
insb
fimull
repz
inc
repnz
sub
sub
rclb
sbb
hlt
int3
add
insl
push
and
dec
out
repnz
and
daa
sbb
or
xchg
and
or
scas
test
pop
push
insb
xor
test
adc
mov
roll
movsl
imul
fsubs
push
les
sub
fs
cmp
cmp
pop
shrl
ljmp
push
je
out
jbe
in
jmp
inc
jg
hlt
fsubr
repnz
pusha
xchg
test
pop
cltd
mov
cmc
pop
push
cmc
cwtl
cmp
fistpl
loopne
lods
mov
jp
mov
cld
movl
cmpsl
nop
loopne
inc
mov
jg
sbb
xor
mov
mov
sbb
aam
std
sub
sti
pop
sbb
ljmp
inc
push
jne
push
or
sbb
cltd
stc
loopne
cld
xchg
nop
xchg
rcrl
rcrl
rorl
mov
jns
pusha
dec
out
jle
loopne
std
mov
out
lahf
in
in
mov
clc
scas
mov
mov
inc
push
mov
push
mov
inc
arpl
cmp
movsb
dec
shll
jle
mov
mov
dec
mov
rolb
add
jb
dec
mov
add
popa
mov
scas
gs
je
adc
cli
pushf
adc
adc
outsl
cmp
fcoms
lock
mov
in
ja
add
inc
mov
pop
movsl
or
sub
outsl
and
and
out
call
jle
adc
add
adc
push
mov
inc
cli
mov
push
cmp
cmc
aad
jg
cmp
or
imul
enter
mov
insl
test
adc
jnp
gs
iret
cmpsb
jmp
hlt
lahf
out
rcll
dec
push
pop
gs
bnd
jle
and
pop
cmc
inc
mov
loop
xor
rorl
add
pop
idivl
jmp
jle
dec
sahf
mov
aam
jnp
cmpl
mov
sbb
into
xor
jle
or
mulb
lock
dec
jns
testb
out
sub
or
mov
add
loope
and
sbb
push
test
jle,pn
xchg
imul
mov
inc
xchg
lock
mov
mov
ljmp
jmp
pop
pop
addr16
mov
loopne
and
xor
mov
loop
cmpsb
push
test
and
dec
in
mov
xlat
or
pop
dec
ds
mov
fists
mov
jmp
leave
mov
xchg
jp
std
das
hlt
fldt
jecxz
out
jge
mov
mov
iret
xchg
mov
cwtl
test
loop
xor
ffree
out
imulb
lsl
add
divl
stc
sbb
stos
mov
lcall
cmp
mov
adc
lds
add
scas
xchg
loopne
adcl
xor
mull
out
dec
pop
jl
xor
pop
sub
push
push
pop
cmpsl
out
insb
sahf
push
fstl
pop
xchg
dec
test
cmc
xchg
ret
dec
movsb
dec
jecxz
aad
sub
mov
aaa
jle
and
mov
adc
mov
sarb
xor
ja
or
loope
sbbl
sbb
fistpll
outsl
loop
movsb
xor
dec
push
frstor
xchg
push
in
imul
pop
hlt
pop
mov
out
out
add
push
std
xchg
call
jne
mov
dec
lock
push
fildll
fisubrs
push
mov
call
xchg
int3
iret
dec
dec
divb
pop
jnp
pop
sbb
test
pop
dec
int3
insl
insl
adc
jno
mov
sarb
in
dec
dec
ret
mov
adc
mov
jae
mov
cmpsb
xchg
xchg
jne
dec
cmp
mov
jae
je
cmc
pushf
lahf
into
xor
pushf
inc
sbb
ficoml
add
mov
fcoms
hlt
mov
jg
jmp
push
xor
jg
fistps
lret
adc
test
mov
icebp
mov
scas
out
dec
adc
pop
cs
repnz
cmp
enter
or
lea
and
xchg
je
call
nop
cld
dec
sahf
arpl
jb
popa
test
and
inc
sub
xchg
int3
bound
sub
dec
sub
ret
mov
shlb
adc
mov
out
mov
jp
lret
rclb
push
mov
add
sti
jg
mov
outsl
jecxz
movsl
aad
or
ret
mov
dec
mov
in
add
imul
xchg
dec
sub
add
pop
lods
xchg
mov
inc
hlt
jmp
cmc
or
xor
mov
jmp
es
mov
mov
pop
ds
jo
push
aas
mov
mov
data16
inc
movsb
sbb
loopne
dec
add
or
or
jle
xchg
out
int3
fsubs
mov
cwtl
jb
in
leave
into
xor
xor
xchg
add
pushf
in
jnp
inc
cmpsw
fsub
js
push
jge
mov
bound
dec
xlat
dec
pop
dec
iret
add
imul
movd
push
or
cmp
adc
rcrb
cli
or
rclb
sarl
dec
in
pusha
test
out
mov
je
adc
lds
stos
or
jns
push
jg
in
and
pop
lds
lret
and
xchg
pop
adc
xchg
sti
jno
das
and
insl
mov
data16
xlat
add
bound
inc
icebp
sub
jle
xor
shlb
pop
and
in
jb
mov
scas
mov
inc
mov
xlat
jno
jns
daa
test
push
inc
repz
mov
jmp
bound
push
repnz
jo
mov
mov
sub
icebp
loope
nop
loope
sub
bound
push
jbe
fisubs
cmp
out
imul
mov
jmp
pop
jecxz
in
adc
ds
lret
mov
cmp
into
push
push
stc
pop
jle
stc
sarl
das
sub
cmpl
cwtl
xor
or
pop
pop
pop
xchg
cs
or
aaa
mov
add
xor
push
orb
pop
fwait
in
inc
pop
fstl
lret
cmp
or
mov
cltd
pushf
dec
sub
or
push
retw
vpsraw
fcmovne
cmp
loope
jbe
mov
cmc
sub
xchg
sub
js
fidivs
ds
insl
inc
add
dec
repnz
out
jle
iret
cmp
enter
test
pop
sub
mov
mov
or
cli
je
xchg
sti
sbb
jmp
cmp
out
loop
scas
orb
cmc
setge
sub
lds
dec
push
data16
xchg
cld
dec
ret
push
test
aam
scas
dec
aam
sub
cmc
adc
sbb
cmp
xchg
cmp
lea
clc
fwait
out
ja
or
pushf
insb
loope
mov
iret
and
pop
push
popa
les
pop
push
inc
push
mov
xor
loope
mov
pop
dec
cwtl
mov
test
push
and
sbb
adc
mov
test
stos
cmp
pushf
mov
sbb
stc
adc
gs
lcall
pop
test
xchg
insl
push
hlt
xchg
dec
cmpsl
dec
insl
push
jge
fldt
test
test
fneni(8087
daa
mov
jns
adc
fiaddl
sub
jns
int3
test
push
dec
outsb
add
cmp
js
shl
sbb
sbb
xchg
ja
dec
nop
mov
xchg
sbb
shr
arpl
or
cmp
push
ljmp
mov
or
mov
mov
mov
sub
mov
jmp
ret
mov
and
xchg
je
mov
mov
ljmp
test
rorb
sbb
in
fs
fildl
jg
movsb
sbb
fstl
mov
call
mov
sub
push
daa
or
aaa
and
jge
lahf
arpl
and
sbb
les
pop
mov
sbb
repz
pop
mov
push
xlat
aas
dec
insl
xorb
outsb
dec
sub
sub
adc
loope
out
push
pop
mov
adc
cltd
loop
in
cmp
mov
push
leave
shlb
test
pop
out
inc
fsts
ja
xchg
out
mov
imul
arpl
and
mov
subb
dec
or
push
push
mov
notb
cmp
popa
add
inc
fistl
outsl
inc
sub
sti
mov
sbb
call
pop
cs
out
add
and
push
mov
out
pop
add
lret
jbe
adc
sbb
cltd
adc
jmp
cltd
into
or
pushf
prefetcht1
mov
js
xor
inc
repnz
jae
mov
imull
push
adc
fnsave
jne
mov
sbb
pop
inc
nop
out
pop
orb
adc
fdivp
std
cltd
mov
fisttpl
pop
inc
in
cltd
inc
cmp
mov
mov
mov
push
dec
and
cmp
pop
inc
sub
mov
mov
jg
lods
pusha
enter
xchg
and
clc
jp
cmp
leave
into
fwait
addl
stc
fsub
xchg
ja
out
sbb
movsl
gs
jl
lock
popf
jg
pop
inc
push
dec
pop
or
cmp
out
ljmp
jle
add
xchg
push
or
mov
cmp
sub
std
mov
add
orl
bound
xchg
xchg
xchg
xchg
sbb
xor
lods
xchg
enter
scas
ljmp
popf
dec
inc
ret
jg
call
sub
xor
pop
into
enter
cmp
stos
inc
or
inc
jmp
or
adc
or
and
jns
out
rorb
xor
xchg
mov
mov
cmp
and
cmpsb
inc
in
fbld
mov
cltd
adc
mov
ficoml
sub
stos
mov
ds
and
mov
add
cmc
ffree
add
push
ja
cmp
add
mov
push
out
out
and
ss
js
pop
push
cld
ljmp
insl
mov
push
mov
and
outsl
rep
xor
stos
inc
sbb
mov
out
jg
fsts
and
adc
or
ljmp
dec
jb
rclb
mov
lret
repz
ror
rcrb
call
xchg
outsb
cmp
int3
or
pop
push
divb
mov
and
hlt
call
lea
and
scas
xchg
cmp
mov
out
mov
ss
int
call
dec
stos
mov
mov
mov
jne
fninit
xchg
mov
push
and
push
test
lcall
daa
cmpsl
sti
cs
jmp
inc
stos
pop
add
in
pop
mov
ja,pn
mov
add
cmp
add
cld
mov
in
xchg
inc
xchg
jmp
shll
adc
lcall
popf
cmp
sub
mov
xor
inc
add
das
mov
jg
mov
testl
mov
sub
xchg
mov
mov
sbb
mov
sbb
cmp
push
jno
fidivs
lock
repnz
lock
dec
test
push
lods
rolb
fldl2e
xchg
iret
push
mov
dec
push
jmp
gs
lods
sahf
sarl
insl
lods
cli
orl
or
or
sbb
xchg
ja
mov
add
xor
loopne
xor
movsb
js
data16
mov
xchg
add
jne
pop
xor
and
inc
mov
xor
inc
adc
repnz
cmpb
jbe
xor
mov
imul
push
cmp
inc
jns
adc
inc
lret
push
scas
fwait
mov
loope
pop
push
jno
sarb
dec
mov
sub
pop
pop
dec
stc
stos
lods
jo
loop
sbb
jecxz
push
cmpsl
inc
mov
mov
adc
push
sbb
mov
or
mov
dec
xchg
pusha
hlt
jecxz
or
cmp
ljmp
cmp
inc
dec
mov
xlat
fisubs
shrl
outsb
gs
and
pop
testl
xor
mov
lret
stos
sub
into
in
mov
sbb
pop
iret
xchg
fmul
iret
cwtl
leave
sbb
int
dec
lock
aad
mov
push
aad
aaa
iret
cwtl
jns
cltd
push
test
push
xchg
push
in
jns
mov
lock
cmpsb
fwait
stos
adc
push
xor
inc
mov
push
mov
xchg
jo
andb
gs
aas
test
fucomi
cmp
adc
imul
es
or
int3
sbb
mov
push
and
jp
clc
aas
lock
xchg
jne
aaa
ret
mov
rorl
icebp
test
add
out
mov
sub
cmpl
fcompl
nop
movsl
jns
mov
stc
mov
and
faddl
inc
jecxz
inc
inc
cmp
or
mov
bound
xchg
mov
ficoms
in
adc
fistl
xchg
inc
scas
push
pushf
dec
stc
mov
test
push
push
add
dec
fdivrl
inc
dec
jne
popa
mov
sbbb
aam
xchg
xor
mov
mov
and
or
xchg
in
lret
cmpsb
lea
and
ja
les
add
in
inc
test
mov
test
lcall
ficoms
cmp
jb
lock
inc
dec
sbb
xor
push
into
lea
push
sub
lds
filds
mov
push
push
or
adc
xchg
inc
out
mov
xchg
mov
mov
dec
int3
bound
dec
cli
lods
iret
aaa
or
in
mov
mov
mov
jnp
es
idivl
gs
mov
xchg
xor
imul
sub
in
xchg
add
or
xor
inc
xor
dec
inc
add
jp
or
dec
sub
dec
clc
push
and
cmp
mov
outsb
sbb
test
sub
jecxz
pushf
mov
mov
das
test
lahf
enter
jge
sbb
mov
movl
inc
nop
sub
xchg
inc
stos
jecxz
jmp
fnstcw
or
push
movsl
fldcw
fistl
push
mov
dec
mov
dec
out
xchg
sub
push
cmp
push
and
es
fs
xorb
scas
pushf
rcr
dec
push
iret
xlat
loopne
cmp
mov
mov
cmp
ret
push
mov
or
sbb
imul
flds
std
call
fs
test
bound
out
lcall
mov
or
icebp
mov
sub
jnp
int3
rcll
std
pop
dec
ds
jo
adc
mov
mov
jecxz
ja
and
push
movsb
push
lods
xchg
pop
fchs
dec
sbb
test
mov
jb
adc
imul
or
jp
into
int3
push
mov
ret
xor
mov
out
mov
xchg
xlat
data16
test
mov
jne
xor
push
in
cmp
daa
adc
jmp
scas
jne
mov
in
cld
loop
and
or
int
mov
xor
xchg
insl
into
mov
or
dec
daa
push
add
cltd
add
std
imul
repz
mov
jno
gs
stos
ljmp
cmpsb
cmp
ljmp
nop
xchg
into
push
jp
mov
adc
int
sub
cmpsb
outsl
cmpb
arpl
pushl
cld
popf
dec
lods
je
sbb
mov
push
dec
jge
inc
pop
out
dec
inc
es
lea
out
int
inc
inc
xorb
ss
pop
sbb
mov
or
enter
insb
dec
push
movsl
pop
adc
xchg
jae
jnp
jp
mov
mov
push
mov
mov
movsl
in
xchg
push
xor
xor
cmc
jle
jmp
enter
cmp
dec
stos
push
mov
punpckhwd
mov
adc
cs
dec
and
pop
dec
div
jno
dec
mov
push
push
subl
xor
repnz
cltd
or
jo
imul
insl
in
push
sub
add
sbb
lcall
xchg
xor
cmp
or
rcll
push
adc
jg
fsubl
and
push
adc
and
lods
xor
js
push
adcl
shl
pushf
shll
push
lcall
je
stc
mov
pop
jnp
aas
pop
inc
mov
sub
cmp
sub
cmp
mov
fdivl
lahf
dec
lcall
ss
lods
lods
add
bound
sub
stc
xor
leave
pop
jbe
lret
or
repz
sub
push
test
sbb
lds
mov
aad
add
xchg
pop
ret
inc
test
test
nop
iret
or
pop
mov
or
clc
sub
jmp
cs
cwtl
fisubrl
outsl
sbb
push
fiaddl
sub
pop
jns
fidivrl
push
sbb
sbb
xor
test
subl
jp
cmp
sbb
repnz
dec
mov
push
pushf
das
and
adc
mov
loopne
xorl
cmc
jp
mov
jb
pop
and
aas
add
jno
stos
bound
add
loopne
adc
xor
cwtl
xorl
dec
cmpsb
mov
fcompl
mov
out
mov
push
in
adc
mov
inc
sbb
lret
hlt
and
fwait
js
pop
arpl
add
leave
test
pop
mov
dec
inc
nop
push
mov
outsb
cs
lods
or
mov
sub
pushf
pop
fs
lret
lret
fcmovu
mov
pop
jb
lcall
jb
add
loopne
jle
dec
pop
dec
dec
mov
mov
stc
jmp
and
shlb
lret
outsl
adc
and
sub
xchg
sub
ret
push
push
push
icebp
and
cs
aas
out
mov
sbb
aam
icebp
dec
incb
push
shll
and
jb
mov
cld
imul
push
push
and
ja
imulb
leave
add
sub
test
movsl
and
repnz
gs
mov
push
shll
fistpl
pop
dec
cmp
aam
int
jae
lds
and
icebp
test
stos
cmp
test
adc
fisttps
mov
stos
cmp
adc
popl
fildl
popf
incb
adcb
pusha
or
sub
imul
push
dec
aas
out
inc
fnstenv
rorl
out
iret
xchg
mov
cwtl
shr
inc
or
fdivl
lea
jge
dec
sub
pop
test
shrb
inc
inc
xor
xor
pop
fisubl
lret
jmp
push
adc
mov
adc
ficompl
loop
and
and
ret
jnp
ficomps
and
repz
mov
push
popf
arpl
aas
movsb
cltd
pop
stos
and
addr16
pop
scas
sbb
jae
xor
xchg
and
enter
cs
dec
xchg
mov
add
dec
pop
test
jmp
call
iret
jmp
out
dec
iret
out
bound
sub
ficomps
xchg
clc
jnp
loope
lock
xchg
popf
addl
sbb
in
repz
mov
stos
mov
mov
imul
cwtl
jge
dec
popf
mov
lret
pop
std
imul
or
xchg
xor
fstpt
push
pop
into
or
inc
add
fucom
scas
xchg
aam
cmpsl
test
insb
pop
scas
je
push
idivb
out
fsubl
pop
xchg
push
jne
icebp
jmp
fwait
push
mov
pop
sub
dec
jno
mov
je
and
sbb
jp
arpl
mov
outsl
aad
or
xlat
arpl
xor
rcr
sub
pop
jno
inc
xchg
sar
xchg
mov
push
leave
stos
cs
imul
jmp
sbb
jmp
push
cmc
hlt
add
cltd
in
cli
lea
enter
jmp
jle
jnp
call
cmp
ja
std
rorb
and
or
mov
push
xor
divb
jno
ret
cmp
inc
add
jno,pn
pop
iret
ss
cmp
setns
lahf
and
neg
iret
cwtl
lret
xor
xor
push
jge
mov
mov
gs
stos
jo
testl
dec
pop
das
xor
xor
jge
adc
test
dec
jmp
push
add
out
ss
js
rclb
adc
loopne
push
adc
push
xchg
pop
ret
xor
mov
dec
add
mov
add
jge
out
push
dec
mov
fwait
and
aad
shrl
lock
or
lea
sbb
mov
loop
mull
cmp
xor
and
push
js
adc
pushf
xchg
lret
imul
call
jb
cmp
push
cltd
mov
test
rclb
jmp
lds
lock
leave
shlb
jno
sub
insb
mov
mov
sub
dec
sarl
movsl
adc
iret
lods
xchg
sbb
imul
xchg
sub
lahf
test
mov
sub
roll
push
mov
dec
idivl
pop
out
pop
and
enter
pop
out
mov
popa
or
stos
ss
addr16
in
pop
and
xchg
adc
lret
xchg
subb
shll
adc
es
clc
scas
test
ja
fists
sub
addl
push
xchg
js
hlt
mov
fbld
cmp
pop
mov
gs
mov
push
push
mov
pop
sbb
loopne
push
mov
mul
pop
xor
jb
pusha
sbb
sub
mov
add
xchg
push
inc
bound
negb
add
pop
test
fldenv
add
je
jnp
cmp
lret
popf
xchg
inc
cmp
fisttpl
sbbl
or
adc
fnstcw
dec
shl
jg
pmulhuw
and
xlat
popf
mov
les
jno
sbb
mov
pop
mov
mov
bound
pop
jb
or
xor
adc
sub
sub
nop
sbb
or
lods
inc
push
in
mov
or
mov
hlt
fildll
inc
mov
cmc
sub
shlb
mov
or
xchg
jl,pt
or
loopne
push
popf
sbb
inc
out
fsubl
mov
andb
iret
dec
icebp
imul
cmpsl
xor
js
xor
push
push
dec
push
lods
add
push
aas
cmp
sub
test
icebp
xchg
inc
add
in
movsl
inc
and
insl
aad
xor
lcall
mov
push
lea
lret
pop
jo
pop
les
es
fnstenv
ss
fdivl
daa
out
xchg
lock
cmpsb
sbb
imull
pop
add
mov
jl
les
shl
sbb
ret
addr16
pop
xchg
ret
sbb
pusha
out
xchg
imul
pop
lds
or
testl
mov
adc
jo
sub
mov
jnp
enterw
mov
mov
inc
jl
xchg
mov
loop
pop
inc
dec
mov
cld
movsbl
arpl
mov
rorl
stc
cs
ret
cmpsb
mov
std
leave
loopne
mov
jg
jge
icebp
xchg
scas
jbe
lock
lahf
sbb
rcrl
daa
xchg
das
or
clc
aam
adc
loop
mov
push
rorl
lock
loope
test
pop
cmpsl
and
cmp
imulb
out
mov
lret
fldcw
pop
add
out
push
scas
hlt
xchg
xor
pop
push
mov
cmp
pop
jle
inc
xor
int
out
and
cmp
cmp
jge
add
xchg
xchg
stc
and
dec
stos
mov
dec
xchg
scas
imul
or
cltd
aad
aas
loop
cs
xchg
mov
pop
mov
or
adc
push
in
scas
cmp
loopne
inc
lret
movsb
mov
adc
push
shlb
repz
cld
in
test
push
pop
inc
repz
push
sbb
pop
in
rorl
pop
pop
push
jbe
jmp
pop
inc
scas
mov
or
sbb
and
lods
loope
cmp
cmc
xor
xor
out
mov
pusha
pop
cmp
jb
add
mov
shlb
adc
xchg
lods
int3
mov
xchg
push
cmpsb
lods
lret
ret
mov
sbb
mov
test
or
or
mov
dec
addr16
daa
ret
movsb
into
mov
pop
decl
sti
popa
ljmp
mov
leave
subl
adc
hlt
jl
sub
notl
dec
inc
mov
jge
mov
fnstcw
xor
ret
stc
push
cwtl
jnp
dec
and
xor
xor
iret
ja
insl
add
inc
and
add
adc
pop
ret
mov
xchg
jl
mov
jbe
mov
sbb
sahf
rcr
fcomip
insb
pusha
cmp
mov
or
hlt
imul
add
lret
jbe
xchg
cmp
ljmp
push
dec
cmp
push
dec
in
push
mov
dec
or
sub
clc
inc
mov
jne
mov
mov
cmp
loopne
lret
leave
jl
clc
mov
div
xchg
mov
rclb
mov
out
cs
mov
mov
fsubl
mov
cmpsl
data16
cmp
test
movsl
pop
push
repnz
test
dec
mov
pop
inc
add
stc
and
popf
icebp
int
es
ss
xchg
dec
mov
mov
fcoms
xor
mov
mov
dec
mov
jecxz
cmp
ss
arpl
and
add
add
ds
add
inc
pusha
mov
outsb
enter
arpl
pop
push
loope
rolb
jnp
sbb
push
dec
and
stos
test
stc
fucomi
or
lea
mov
movsb
push
mov
inc
pusha
sub
pop
jns
into
dec
fildl
dec
aad
push
loopne
inc
mov
notb
and
aad
or
or
dec
clc
mov
cmp
ds
sbb
dec
popf
mov
and
push
xchg
andl
adc
loope
mov
mov
lret
push
aam
sub
pop
dec
lods
popf
loop
jecxz
xchg
dec
add
jae
push
cs
bswap
jecxz
push
out
adc
sub
cmpsl
popw
dec
xor
lret
xchg
jne
pop
in
or
jp
adc
push
mov
sbb
lret
popf
sarl
es
test
pop
and
and
jnp
cli
gs
lods
pop
insb
aas
cmp
mov
or
insb
xor
mov
push
xchg
imul
xchg
push
loope
jne
test
pop
pop
dec
int3
imul
popf
mov
test
outsl
mov
clc
push
adc
int
dec
or
std
mov
mov
iret
int3
or
arpl
outsb
inc
sub
lret
push
mov
sub
cld
cmpsb
in
sub
lahf
pusha
cmp
fwait
and
adc
inc
lods
or
jp
rorl
aam
pop
lods
ja
rcrb
inc
sbb
mov
mov
jb
push
mov
cmp
mov
mov
dec
push
fnstenv
xchg
fdivl
inc
pop
fs
push
sbb
mov
jmp
sbb
mov
pop
xor
fwait
subb
xchg
daa
jae
add
add
cmpsl
push
or
sarl
xor
jns
xchg
lcall
jp
cmp
sti
lods
push
outsl
xor
dec
push
push
lcall
or
pop
xchg
ret
xlat
xchg
adc
popa
mov
sbbl
add
xchg
fstpl
sarl
sahf
push
mov
jo
cli
inc
in
jb
or
cs
add
fwait
in
jp
fiadds
pop
clc
loop
lock
inc
lahf
cmp
int
jle
adc
sbb
andl
xor
adc
push
aaa
scas
gs
je
jno
cmp
out
xchg
add
fwait
lahf
inc
shlb
test
les
inc
sub
or
fidivrl
push
lds
inc
arpl
popl
cmpsl
mov
dec
les
mov
mov
sbb
les
or
rep
sti
lea
andl
inc
popf
jg
push
inc
sub
sub
pusha
cs
xchg
or
mov
mov
in
aam
push
lods
cmp
movsl
popf
xlat
xchg
outsl
pop
add
adc
mov
or
add
cmp
sahf
pop
js
std
adc
arpl
in
jecxz
sbb
test
xchg
ss
adc
test
mov
test
je
inc
test
xor
mov
inc
mov
add
outsb
fwait
or
jae
add
xor
sub
add
sbb
mov
fnstcw
mov
orl
rclb
ficoml
add
sbbb
push
push
enter
pop
pop
aas
xchg
sbb
test
cli
mov
repnz
in
out
imul
leave
fs
fstpt
adcb
mov
scas
orl
pop
mov
or
jne
shll
out
test
enter
aas
les
repz
adc
mov
lods
fstp
mov
popf
add
push
popf
adcb
xchg
bound
or
or
pop
pop
pop
in
and
adc
push
push
cs
cmp
ss
insb
out
fwait
loopne
lcall
das
mov
sub
pop
imul
mov
inc
xchg
pushw
outsl
jle
inc
lds
ds
decl
push
push
inc
mov
add
cs
ljmp
sbb
int
push
outsb
dec
clc
popl
sbb
xchg
loop
mov
push
cmp
divb
out
adc
xchg
jno
stos
push
sub
icebp
jmp
aad
sub
sub
adc
xchg
inc
rolb
fwait
cmpsb
sahf
and
loope
sbb
cmp
xlat
jl
imul
mov
xor
jmp
cmc
shr
cs
pop
aam
aad
aad
pop
fists
movl
cltd
jp
int
aad
pop
push
mov
push
sbb
bound
add
out
outsl
jbe
dec
pop
lds
fmull
mov
ret
out
cmp
inc
test
fwait
mov
repnz
xlat
sbb
inc
xor
iret
popa
ret
aam
cmpsb
or
popa
add
fmuls
mov
lahf
in
or
cltd
inc
mov
mov
in
in
out
cmpsl
mov
dec
dec
frstor
mov
mov
pop
enter
push
js
fsub
movsl
addl
sbb
pop
addr16
add
aaa
xor
pusha
es
or
inc
or
add
popa
scas
cmp
xchg
mov
iret
fs
les
cmpsb
test
mov
shrb
out
inc
xchg
in
cmp
lret
movsb
hlt
push
dec
inc
loope
mov
inc
and
lret
adc
mov
test
fimuls
stos
push
add
inc
push
inc
adc
arpl
jg
dec
ss
cmp
inc
add
cwtl
cmpsb
mov
jp
imul
jb
loop
adc
outsl
xchg
lahf
mov
clc
jp
cmp
push
adc
pop
adc
push
mov
dec
jno
mov
test
stos
dec
sub
xlat
jg
or
cmpsb
push
cltd
inc
ret
shll
out
push
arpl
xor
ds
fcoml
or
stc
cmp
and
cs
cmp
nop
rcrb
add
addr16
push
dec
add
rcrl
push
sub
daa
mov
lock
inc
movsb
xchg
push
aaa
imul
pushf
adc
jmp
adc
inc
loop
jb
push
push
aas
mov
mov
inc
shl
insb
jl
lods
xor
mov
mov
xorb
pushf
pop
dec
pushf
cmp
aam
in
push
mov
out
scas
mov
sub
or
xchg
lea
dec
pop
or
es
jno
lcall
sti
movsl
lds
sbb
cmp
iret
ror
popf
or
outsl
fstpl
outsb
enter
push
push
xor
mov
sbb
adc
cmpl
loope
xchg
push
mov
mov
js
lock
in
mov
inc
xchg
dec
inc
xor
sub
sub
aam
adc
sbb
xor
mov
hlt
cmp
mov
xor
out
ret
jo
jo
repnz
xor
inc
lods
icebp
and
fsubs
cmp
aas
cmp
xor
jl
imul
out
into
test
cld
push
adc
stos
sub
sar
bts
pop
test
cli
lock
or
sarb
outsl
in
popf
xchg
sub
pop
and
shl
add
sbb
loopne
das
popa
pop
mov
push
adc
jmp
jge
sbb
stos
cmpsl
fwait
or
sbb
push
push
je
mov
push
and
add
mov
pop
es
mov
into
inc
frstor
std
sbb
push
dec
mov
ret
std
add
mov
cltd
adc
mov
add
mov
mov
repz
jne
sbb
cmpsl
mov
mov
iret
cltd
push
add
mov
dec
jns
aad
outsl
ss
mov
xor
cmp
xchg
xchg
mull
sbbb
sbb
push
push
cmp
jl
and
jne
jns
loopne
outsl
xchg
popf
stos
mov
rcll
xchg
push
lods
jle
push
inc
addr16
mov
jle
cmpb
out
mov
in
and
mov
adcl
imul
jno
shlb
mov
add
xchg
je
das
pop
mov
cmp
stos
xchg
pop
pop
test
fsubrs
in
fldcw
inc
imul
cld
lahf
xor
adc
xchg
test
pop
push
xchg
add
and
outsb
mov
std
mov
or
je
inc
mov
mov
aam
fistpl
out
push
jmp
xor
subl
adc
push
xchg
mov
xrelease
and
cmp
jns
xchg
add
les
push
aas
push
aad
mov
and
and
shr
xchg
mov
cmp
int3
pop
inc
cli
fdivrl
xor
jnp
mov
cli
rep
insl
mov
mov
mov
stos
bound
sbb
mov
or
pop
mov
add
out
fcomp
in
aad
jb
sbb
mov
repz
mov
dec
inc
mul
insl
pop
popf
mov
popa
repz
jecxz
push
xchg
add
insl
cli
add
xor
aas
aam
cmp
hlt
ds
cmp
ret
cltd
fidivl
neg
push
dec
out
iret
pusha
and
fdivs
cmp
int
xchg
pop
dec
andl
jnp
jge
movsb
in
sbb
add
push
nop
int3
movsl
mov
repz
xor
lret
sbbl
mov
push
stos
cmp
ret
rcl
pop
or
out
nop
out
stc
cwtl
sti
arpl
jmp
add
cmp
rcrb
movsl
pop
stc
pop
or
add
sbb
out
loopne
sub
in
add
enter
dec
lret
pop
movsl
adc
jo
dec
stos
rcrb
cmpsl
pop
pop
insb
es
enter
push
cmpsl
mov
in
into
mov
mov
jb
jl
mov
mov
xchg
add
sub
ret
popw
hlt
mov
repz
add
sbb
or
pusha
aam
xorb
xchg
pushf
repnz
dec
dec
jg
jne
cltd
mov
sti
adc
push
mov
cmp
xor
ret
sub
inc
inc
adc
dec
sub
mov
popa
jle
test
fs
hlt
fcomps
dec
dec
aas
pop
jno
movsb
xor
adc
movsb
jb
test
mov
imul
mov
cmp
sbb
push
outsl
pop
dec
repz
in
pushl
fldt
inc
stos
mov
fwait
sub
sbb
xor
cmpsl
cmp
mov
push
adc
sbb
add
rorb
dec
dec
cmp
fmuls
adcl
ret
addps
sub
aaa
jns
xchg
je
jne
cmpsl
and
add
jo
fadd
inc
scas
lret
push
mov
adc
inc
cmp
shll
cmpsl
jecxz
jmp
test
xchg
pop
arpl
cs
mov
lret
fstpt
jo
stos
movsb
insl
repz
sub
and
mov
call
in
cmp
mov
or
in
jp
pop
aam
cwtl
push
sbb
repz
xor
xor
ret
gs
insl
out
popf
addl
je
pop
xorb
int
dec
clc
dec
icebp
add
add
bound
sahf
adc
mov
rcrb
loopne
jns
dec
cmp
aad
mov
outsb
aam
ljmp
out
movsb
lahf
sbb
pop
mov
pop
popa
lock
data16
lds
aam
xor
fwait
inc
mov
cli
jne
inc
inc
mov
cmpsl
hlt
mov
out
hlt
jns
or
arpl
mov
mov
fmuls
dec
cli
ret
outsb
push
sbb
jae
dec
aas
bndstx
movsl
adc
jg
jae
mov
cmp
rclb
or
sub
es
push
into
notb
fnstsw
cmp
cmp
repnz
pusha
adc
cmp
xchg
insl
xor
jp
mov
cli
stc
sub
in
stos
pop
cmp
addr16
adc
and
inc
adc
cmp
fisttpll
int3
mov
movsl
mov
sbb
fistpl
js
test
dec
mov
or
jae
test
ss
ds
sbb
es
xchg
sarl
daa
imul
xor
lea
sbb
and
repz
cmp
cmp
or
jge
leave
mov
add
sbb
push
pop
test
dec
mov
mov
popf
inc
adc
lahf
or
cmc
aas
mov
cld
sub
shrl
jmp
xor
lds
rorl
scas
inc
cli
std
in
gs
jmp
mov
imul
jns
dec
ja
sub
lods
pusha
cmp
scas
mov
xor
leave
push
mov
jbe
adc
mov
stos
cmpsb
mov
inc
movsl
arpl
mov
jo
adc
hlt
push
stos
test
std
dec
lods
scas
add
mov
in
insl
xchg
adcb
stos
inc
jmp
push
fs
rorb
mov
mov
inc
xchg
xchg
js
jg
rorb
movsb
mov
out
add
scas
or
xchg
cmp
push
std
pop
test
es
jmp
jp
lds
cmp
mov
pop
jle
sbb
insb
jns
lahf
push
cmp
mov
sub
and
into
cli
jecxz
jmp
or
fidivrs
xor
std
lock
cmp
fdivl
adc
push
jmp
adc
adc
imul
ss
or
mov
repz
imul
xor
insl
or
or
push
in
cmpl
and
mov
scas
jb
inc
icebp
loope
enter
xchg
sbbl
push
js
cltd
sarb
jecxz
imul
sub
add
adc
loopne
loop
mov
repz
aam
mov
adcb
in
inc
repnz
and
pushf
pop
adc
ljmp
nop
dec
inc
divb
loopne
ret
mov
aad
mov
rorb
add
ljmp
adc
dec
jbe
sbb
sbb
ss
in
jb
jecxz
sub
gs
mov
mov
out
rol
ret
mov
pop
cli
cmp
dec
pop
insb
sarb
std
and
pop
lahf
adc
or
mov
stc
loop
in
mov
jl
into
mov
pushf
jno
lcall
adc
or
mov
push
pop
mov
outsl
xchg
orl
dec
cli
in
or
int
push
or
icebp
out
fcompl
and
jnp
shrb
xchg
pop
jge
fistpl
xor
mov
and
mov
test
lock
into
ja
xor
imul
test
mov
xchg
mov
jge
mov
sbbl
pop
cmc
ret
mov
jae
shlb
xor
jle
ret
or
in
scas
addr16
push
daa
push
in
push
lcall
xchg
shlb
stc
push
int3
movsb
pop
mov
rolb
pop
gs
mov
sahf
push
and
stc
sti
jecxz
lcall
sub
leave
testl
ss
hlt
jge
dec
sahf
add
jne
sbb
inc
les
test
cld
sub
sub
pop
subl
aas
addl
ds
adc
out
xor
mov
xor
into
andl
push
int
mov
loopne
jbe
pop
xor
aaa
clc
mov
fisubrl
push
mov
push
int3
jecxz
pop
mov
and
cmp
mov
push
push
in
mov
and
push
pop
out
loope
cs
xor
dec
insl
movsb
lcall
mov
xor
call
xlat
fdivrs
push
in
lds
xorl
jb
push
cltd
jge
jbe
lcall
iret
xchg
insl
out
xchg
adc
pop
lahf
mov
add
cltd
enter
xchg
lock
pop
pop
fists
sbb
les
aad
cwtl
push
fisttpll
adc
in
and
rcrb
ja
adc
rcrl
pop
pop
or
loop
inc
pop
adcb
and
stc
mov
xchg
sbb
test
xchg
inc
jmp
adc
aaa
jmp
sbb
push
imul
pop
cli
int
xchg
fnsave
movsb
push
inc
adc
xchg
inc
cltd
mov
mov
out
sbb
in
je
pop
fistps
push
mov
fcomip
frstor
pushf
mov
push
mov
testb
and
fcomip
cmp
push
icebp
jg
sbbb
jb
mov
pop
pop
sub
lret
loop
add
inc
pop
jecxz
sbb
cmpsl
or
jle
inc
jmp
cmpsb
mov
mov
inc
and
xorb
outsb
insl
sbb
leave
mov
pop
push
jbe
scas
inc
sti
loop
in
cmp
fstp
mov
push
in
or
xchg
lahf
cltd
adc
out
adc
mov
push
inc
std
and
xchg
test
jno
mov
out
dec
inc
cwtl
push
dec
push
push
lea
xchg
push
cmp
inc
daa
repnz
into
xorl
fisubl
fcmovnu
push
shl
mov
mov
out
jbe
iret
or
rcrl
jo
cmp
mov
lock
int
adc
pop
inc
sbb
and
nop
jae
add
xlat
pop
sub
movsb
push
or
or
aas
iret
mov
pusha
out
push
or
pusha
cmpsl
mov
add
fisttpl
in
cmp
pusha
xchg
pop
mov
push
sbb
data16
jbe
ror
xchg
sub
xor
repnz
das
jnp
rolb
lea
sub
pslld
adc
mov
fbstp
add
add
adc
dec
xchg
fstps
jb
push
and
pop
mov
stos
sub
aaa
out
adc
in
push
lods
mov
sbb
fs
cmpsl
or
sub
cmp
rcrl
test
inc
jl
xor
and
mov
dec
inc
add
fidivs
add
fldenv
jno
jg
aad
lds
pop
and
stos
mov
out
sub
cmc
push
sbb
cli
mov
add
mov
in
sub
lods
cli
aad
add
xchg
cmp
iret
data16
or
mov
add
scas
ds
into
push
cld
cmpsb
rcrl
dec
cmp
shrb
outsl
inc
adc
and
pop
and
bound
inc
dec
fistps
sub
pop
popa
and
xor
sbb
push
daa
jl
mov
imul
idiv
in
popa
mov
pushf
sarb
mov
xchg
rorl
mov
inc
in
xor
mov
es
std
pushf
hlt
pop
adc
test
sub
xchg
and
and
ja
pop
jmp
call
nop
fisubrs
cmp
dec
jp
fstpl
inc
sbb
out
not
xchg
je
divl
ljmp
pop
scas
js
mov
fcompl
pop
and
dec
pop
adc
sub
cs
mov
cmp
rorb
filds
cmp
je
dec
shrb
push
sahf
sbb
scas
cmc
inc
in
int
jnp
dec
adc
jb
jns
std
in
lcall
push
movsl
add
shrb
cmpsb
push
dec
adc
std
pop
pop
push
lods
inc
aad
aas
adc
push
repz
and
push
mov
mov
inc
aaa
ds
ret
xchg
js
ror
push
into
loopne
pop
out
jnp
add
rcrb
xor
or
xchg
inc
lds
aad
mov
add
adcb
adc
fidivl
sub
inc
enter
jg
mov
push
scas
inc
inc
jns
mov
sbb
cmp
mov
lock
jo
clc
test
sbb
loope
push
nop
mov
push
pusha
push
jl
sub
jmp
jmp
in
scas
in
loope
sub
or
dec
jmp
pop
mov
mov
xchg
cmpsb
outsl
dec
imul
out
jle
daa
cmc
cmpl
sub
cli
aaa
jnp
mov
jno
pop
rcrl
mov
jno
dec
insl
inc
push
xor
or
call
pop
push
loopne
jl
mov
sbb
sub
in
inc
sbb
jb
int3
test
push
fdivl
jecxz
adc
mov
repz
inc
jl
inc
and
popa
mov
pop
xor
test
jno
fsubrl
icebp
mov
hlt
aas
jecxz
jns
data16
push
fldt
jns
inc
adc
push
inc
cmp
ficomps
shll
pop
xor
cmp
xor
add
mov
inc
or
callw
sbb
adc
test
mov
fisubl
insl
fistpll
scas
xor
mov
fiadds
andl
add
test
xchg
or
icebp
sub
sahf
fwait
icebp
adc
addr16
lods
mov
fs
mov
mov
mov
inc
into
jno
xlat
mov
pop
and
ljmp
sub
sub
push
push
dec
sarb
push
les
push
lcall
cmp
push
sub
lahf
loope
mov
psraw
imul
dec
sub
mov
inc
nop
ljmp
fs
and
test
scas
gs
xchg
sti
jns
and
dec
js
xchg
das
inc
pop
das
call
sub
iret
or
sarl
push
cs
aam
mov
in
addr16
imul
jns
sti
in
cs
cmpsl
sbb
jp
or
adc
icebp
pop
add
pop
xlat
sub
mov
xchg
jno
mov
and
pop
sub
leave
and
insl
cmp
or
and
fwait
mov
repz
in
iret
adc
mov
mov
incb
lret
lods
cwtl
rolb
jp
cmc
or
mov
popf
ret
es
xorb
js
pushf
sub
sub
mov
and
xor
inc
jae
jne
push
fs
push
xchg
mov
or
adc
pop
add
pop
leave
mov
pop
andb
pushf
mov
cli
mov
ret
fmul
pop
lods
adc
lcall
sbb
sub
ret
ljmp
or
push
xchg
inc
adc
jp
sti
sahf
addl
outsb
out
jnp
add
ds
cmpsl
jb
out
movsb
aam
ja
lretw
pop
js
and
in
lods
inc
sub
mov
mov
dec
inc
lds
sti
xchg
fisttpl
mov
inc
pop
idiv
ss
loopne
pushf
cmpsl
xchg
and
idivb
outsb
cmpsl
mov
insl
adc
leave
dec
ret
mov
aaa
adc
mov
and
mov
mov
fadd
sub
mov
mov
pop
add
push
jno
mull
sub
neg
pop
popf
and
push
dec
sub
hlt
daa
mov
dec
inc
jae
leave
cmpsl
mov
add
jnp
andb
push
shlb
xchg
incb
scas
sbb
call
xor
push
xchg
mov
xor
add
loopne
mov
pop
xchg
pop
test
mov
lds
mov
mov
sub
jecxz
scas
cltd
pinsrw
or
mov
test
stc
shll
mov
mov
inc
mov
xchg
shrl
enter
mov
fisubrs
push
pop
pop
or
push
sarb
flds
imul
insl
aaa
and
push
call
sub
sbb
je
cmp
in
add
lahf
mov
mov
ja
imul
xor
lods
nop
push
cwtl
cs
in
into
cwtl
ficomps
pop
leave
mov
fs
jmp
xchg
scas
add
cmp
outsb
lea
xchg
xchg
mov
jno
rolb
fcom
cmp
add
fst
stos
add
add
cmp
std
lahf
popf
inc
sbb
or
ret
popa
outsl
or
sbb
inc
ljmp
mov
or
sbb
cmc
aam
lret
adc
insb
inc
out
cmp
fstps
cmpsb
pop
jecxz
pusha
cmp
sub
mov
dec
scas
push
mov
cmp
pop
mov
outsl
mov
rorl
xor
jae
fnsave
repz
ljmp
lret
aad
movsl
js
cmp
push
icebp
cmp
push
push
jmp
and
aad
inc
mov
sbb
fmul
adc
dec
pop
out
xor
out
icebp
push
inc
aaa
insb
xchg
imul
or
xchg
xor
xchg
addl
jnp
into
mov
rolb
mov
lds
shl
pop
insl
cwtl
jo
jg
dec
daa
add
adc
jo
push
cmp
pop
xchg
sbb
push
je
and
dec
movsl
out
lea
adc
sub
int
sahf
cmp
js
fldt
jo
push
in
adc
mov
out
outsl
aaa
jmp
mov
insb
mov
stos
aad
dec
dec
out
cmc
cmp
xor
data16
lret
int3
xchg
hlt
imulb
cmpsl
jns
out
out
in
hlt
decl
pop
arpl
dec
loopne
pop
stos
scas
arpl
jge
mov
or
sub
or
ja
rorb
orb
sbb
dec
sub
in
scas
movsl
adc
lods
push
addr16
shl
mov
pushf
lock
arpl
pop
jp
in
jb
mov
daa
bound
pop
insl
pop
cli
shlb
jmp
in
add
add
xor
pop
gs
out
stc
push
mov
popf
xor
cmpsl
rol
jo
inc
into
cmp
or
loop
xchg
lret
outsl
out
dec
push
add
fsts
push
pop
mov
mov
int
pop
cmpsl
push
cmp
adcl
mov
bound
enter
sub
push
repz
mov
cltd
std
xchg
adc
push
jns
jno
or
insb
stos
push
jb
test
pop
mov
cwtl
add
xchg
test
sbb
mov
lret
int
ds
divb
lfs
mov
ljmp
jb
fisttps
out
xchg
cmp
pop
lods
loopne
xor
xor
mov
mov
pushf
xor
add
dec
fcomps
ss
inc
cmp
jge
dec
mov
mov
push
sahf
rolb
or
inc
sbb
xchg
je
dec
adc
mov
decl
pop
call
push
iret
hlt
jecxz
push
stos
lea
inc
pop
cmpl
je
or
fdivl
aam
pushaw
jmp
loopne
sub
jge
pop
iret
test
xor
aam
mov
loop
xchg
popa
lcall
fwait
out
gs
sbbb
aam
mov
xor
jne
in
pushf
dec
rcr
sahf
decl
pop
data16
or
ficomps
sub
adc
cwtl
sub
out
adc
and
fdivl
sub
inc
fdivs
fxch
pop
add
shll
or
shll
pop
addr16
test
jmp
rcll
dec
mov
mov
jae
mov
push
xchg
leave
sub
cmp
and
dec
sbb
sarb
stos
cmp
cmp
aas
in
aaa
fmull
cli
jb
lahf
test
aam
sarl
add
sbb
fyl2xp1
fst
fs
dec
mov
loop
fidivl
sub
out
bound
pop
inc
inc
fs
shl
mov
sub
push
push
sub
pop
xor
jecxz
cld
lret
sub
jnp
xchg
mov
fstpl
pop
shr
andb
xchg
mov
inc
mov
out
and
and
inc
idivb
aaa
xchg
sub
xchg
int3
fs
movsb
dec
push
mov
sbb
xchg
xchg
mov
pop
int3
fcomps
cmp
sub
dec
out
addr16
cmpsb
cmpsb
into
aas
inc
and
mov
adcl
mov
clc
fistpll
push
stos
aam
pop
mov
mov
lret
pop
cltd
or
xor
pop
push
cmpsb
aas
leave
inc
and
imull
sbb
pop
push
push
cmp
cmc
adc
shl
hlt
ds
and
lock
inc
imul
lods
sub
jg
pop
inc
push
xchg
loop
rcrb
pop
add
lods
aas
push
xor
mov
out
movl
mov
push
sub
push
pop
int3
sbb
cwtl
les
push
jmp
cmp
xchg
shr
cli
push
cmpsb
xor
jno
scas
cltd
mov
repnz
in
je
mov
popa
cmc
rorl
mov
je
bound
push
push
jno
xchg
mov
hlt
jnp
cs
lock
sbb
out
mov
out
pop
push
arpl
inc
outsl
adc
and
ret
aad
inc
call
xor
shlb
and
or
leave
push
and
out
jo
rcrb
dec
cmpsb
xor
mov
outsb
mov
iret
mov
lahf
lahf
pop
pop
jmp
mov
add
mov
inc
mov
hlt
andb
scas
into
and
mov
mov
fstps
imul
sbbb
mulb
or
sbb
nop
sbb
pusha
mov
rorl
hlt
mov
xchg
cmp
adc
loope
addr16
cmp
scas
mov
out
cld
or
xchg
js
inc
mov
addr16
cli
mov
add
xorb
mov
test
pushf
cltd
rep
cmc
scas
iret
cmc
dec
notb
cmpsb
dec
and
lea
jb
inc
xorl
call
jl
out
sub
and
popf
and
lods
std
lods
in
leave
mul
das
popf
cld
adc
dec
mov
inc
shlb
enter
pop
adc
inc
jle
inc
mov
xchg
xchg
jnp
ljmp
dec
adc
daa
idivb
mov
jae
mov
roll
pop
int
mov
xchg
lahf
leave
mov
mov
iret
dec
cwtl
add
sub
pushf
push
xor
andb
out
test
push
inc
sub
add
push
cmp
jb
nop
cmp
add
xchg
jae
jno
cmp
pop
or
mov
adc
dec
ja
cs
pushf
push
out
cld
int
sar
loope
sub
scas
stos
mov
add
out
mov
cmpsl
js
jmp
mov
sbb
insb
mov
pop
mov
lock
sar
mov
and
ret
roll
loop
insl
push
and
sahf
xor
dec
lret
sbb
jge
sub
and
mov
adc
test
divb
iret
inc
dec
jge
push
inc
mov
mov
aam
stc
xor
dec
pop
adc
xchg
pop
ret
xchg
and
test
cmp
aaa
jp
repz
fcomps
or
cmp
outsb
sub
enter
dec
aas
xor
lahf
scas
pop
loope
pop
jp
outsb
repnz
cmp
daa
fstpl
lahf
pop
xor
and
and
jp
scas
mov
and
push
dec
insb
adc
testb
xor
cmp
push
shrl
jns
mov
inc
xor
add
test
test
movsl
pop
fs
pop
mov
lea
in
popa
loop
dec
mov
in
ror
xchg
mul
xchg
lcall
imul
cmp
sbb
cmp
and
fwait
jecxz
test
mov
repz
push
pushf
push
mov
fwait
rcll
out
jo
xchg
cmp
out
cmc
in
sub
sub
mov
mov
pop
sbb
jmp
push
dec
icebp
add
sub
shl
add
or
mov
mov
adc
jg
les
and
out
in
push
nop
into
jmp
ds
dec
cmp
dec
repnz
je
pushf
mov
dec
pinsrw
sbb
adc
adc
pop
roll
and
inc
std
bound
dec
popa
outsb
sub
shlb
cli
add
mov
cld
mov
or
xchg
adc
or
inc
icebp
push
shl
mov
fisttpll
pop
sub
push
daa
add
and
sub
mov
cmp
push
fidivs
bound
mov
lods
adc
test
jmp
and
ss
fnstsw
testl
in
pop
mov
add
into
mov
mov
divl
or
xor
mov
xchg
jl
dec
inc
pop
insb
bound
mov
dec
aam
iret
pop
pushl
aad
je
pusha
mov
pop
sbb
inc
pop
or
push
sbb
xchg
jbe
les
adc
inc
xchg
and
mov
jmp
dec
xor
pushf
hlt
mov
es
cs
or
jl
fistpl
pop
adc
mov
xor
jae
mov
xor
xor
subl
addr16
sub
test
pushf
js
notb
mov
xchg
pop
pop
xor
cmpl
aas
lods
in
push
mov
cld
pop
push
fdivrs
lock
stos
iret
pushw
fs
mov
pusha
push
mov
pusha
pop
adc
arpl
mov
cmp
add
and
pop
pop
shlb
daa
cmp
and
xchg
lret
inc
xorps
lods
fwait
rcrb
push
insl
out
test
cmp
test
pop
jno
and
adc
add
scas
xor
xlat
pusha
jg
add
mov
ret
dec
in
xlat
into
lahf
outsb
xor
and
push
sti
add
jbe
stos
aad
aad
pop
cmpsb
adc
xchg
call
jl
sbb
push
dec
inc
popf
jmp
jbe
fnstenv
mov
insb
push
mov
xchg
push
scas
push
fcomps
iret
push
inc
cmp
push
jg
or
stc
sti
test
xor
mov
scas
ljmp
pop
mov
cmpsb
aaa
popf
fnsave
test
jge
jb
loope
push
hlt
loopne
cmp
or
in
fidivrs
ficoms
add
push
pop
rclb
ss
movsl
fsubl
inc
rcrl
fidivl
xor
and
sub
pusha
rclb
loope
push
psubsb
mov
lea
rorl
mov
js
icebp
insb
jno
adc
aas
insl
sbb
jg
subb
jg
jmp
sub
leave
push
jno
leave
sub
xor
adc
jmp
mov
push
cli
sbb
lock
cmp
xor
ret
and
scas
jmp
add
jns
pop
lret
lahf
outsb
push
mov
sub
push
and
inc
sub
push
in
dec
ss
pop
and
js
ss
sbb
repnz
stc
add
or
repnz
push
int
mov
cwtl
mov
xchg
int
lock
ljmp
push
and
sub
call
push
frstor
xor
idivb
push
jp
xlat
clc
shll
pop
sub
adc
mov
stos
mov
or
sub
ja
fistps
iret
ljmp
es
data16
dec
int
xchg
sub
arpl
movsl
or
cmp
sub
cmpsb
or
fsubrl
xchg
scas
pop
into
mov
lock
jae
mov
inc
mov
push
xor
add
pop
cmp
pop
int
mov
mov
ljmp
std
pop
fwait
notl
cmp
sub
xchg
sbb
mov
lods
xor
xor
fldl
pop
scas
jl
fwait
and
adc
sub
fimull
sbbb
jp
scas
push
dec
out
pop
xlat
andl
or
or
sub
push
add
pop
sti
fsubs
loopne
inc
lahf
ljmp
lret
es
jecxz
call
fwait
nop
decl
xor
xor
and
lahf
inc
insl
push
cmp
cmpsb
and
sub
xchg
mov
hlt
call
mov
jnp
shrl
pop
rcll
mov
setno
out
popf
or
int
pushf
es
push
shlb
push
loope
jo
add
push
mov
or
jecxz
or
ds
sbb
imul
sbb
mov
out
inc
daa
inc
call
rcrl
ja
popf
jne
lods
ret
or
pushl
mov
pop
mov
pop
push
mov
repnz
les
bound
or
sti
xor
mov
pusha
das
or
shll
dec
fisttps
pop
rclb
daa
out
or
cmp
ret
mov
je
pop
inc
outsb
scas
jae
jmp
cmp
mov
lea
out
mov
cwtl
jge
int
test
or
jb
adc
fcoml
int
rorb
lea
in
jge
sbb
xchg
inc
popa
push
out
and
mov
sbb
lds
sbbb
mov
dec
out
loope
xchg
ljmp
xchg
call
loope
push
xchg
adc
push
xchg
test
frstor
movsl
add
cmc
mov
in
or
out
mov
mov
imul
les
mov
in
mov
daa
das
add
in
sbb
loope
push
mov
int
lcall
stos
sti
cld
mov
add
add
push
std
jnp
push
outsb
leave
sub
xor
or
cmpsb
jecxz
xlat
test
mov
jl
jne
inc
sub
ret
repnz
sub
add
or
lea
mov
add
or
loopne
and
mov
popa
lret
std
andl
xchg
insl
inc
xlat
outsb
gs
stos
cmp
movl
or
pop
xchg
cmp
fnsave
mov
scas
mov
mov
fwait
cmc
push
loopne
sbb
jo
push
test
cmp
jecxz
push
push
cmovge
inc
into
paddd
in
fs
fdivs
out
push
popf
je
dec
and
push
and
dec
mov
mov
repnz
add
pop
mov
idivl
pop
pop
xchg
sti
and
push
daa
mov
das
js
pusha
and
arpl
mov
addb
fimull
cmp
fimuls
loop
xchg
cmpsb
aad
lcall
xchg
iret
lret
loop
ret
mov
cmc
pop
and
daa
popa
loopne
pop
adc
sbb
add
lods
sub
in
mov
mov
jb
rcrl
lea
js
xlat
adc
fsubrl
ret
push
pop
fwait
xchg
pop
pop
jmp
pop
ja
cltd
xchg
shll
stos
ret
sbb
scas
dec
jp,pt
leave
inc
jbe
fmul
mov
mov
scas
push
xlat
fistl
pop
add
xchg
add
jae
jmp
fsts
xchg
cmp
mov
lahf
jne
mov
outsb
cld
fsubs
stc
jns
mov
pop
imul
test
xor
jl
repz
dec
add
dec
sti
bound
lret
sbb
jb
sbb
pmuludq
ret
and
subl
jns
mov
idivl
inc
fildll
xor
jo
test
jbe
mov
ljmp
cmc
sahf
pop
push
sub
sub
dec
lock
loop
jns
rcrb
pop
and
test
push
loopne
lahf
rorb
data16
pop
scas
sub
push
jne
adc
bnd
pop
lahf
pushf
je
mov
shll
push
std
push
aas
mov
add
add
cmp
jmp
cli
xlat
out
outsl
push
push
jbe
fcompl
filds
fwait
pushf
xchg
clc
sub
ret
shlb
daa
mov
das
sbb
roll
fstps
subb
lret
or
test
fstl
test
or
xor
fstpl
add
out
dec
repnz
addr16
dec
xchg
nop
dec
or
loop
pushf
jo
iret
stos
mov
lahf
and
scas
pop
pop
ljmp
push
add
jns
inc
fisubrs
push
enter
std
xor
aad
jb
daa
pop
push
out
sti
xchg
test
and
adc
inc
dec
pop
pop
jl
lahf
shrl
or
mov
mov
hlt
imul
mov
popf
mov
dec
loopne
movsl
jns
push
adc
jb
or
out
lret
adc
cmp
fsubrl
or
and
fstpl
push
inc
or
jp
psrlw
dec
dec
mov
cwtl
outsb
adc
dec
jne
xchg
testl
mov
in
orb
outsl
fwait
xor
loope
pop
je
divl
scas
jns
adcl
push
cmpsl
mov
fmul
in
repz
icebp
cld
dec
and
bound
dec
push
fwait
aad
xchg
sbb
mov
adc
sbb
fsubrl
iret
xchg
leave
mov
jns
mov
dec
push
ret
xor
clc
cmp
dec
imul
das
daa
add
pop
ja
xor
movsb
lock
ficoml
cmpsl
cli
push
mov
adc
adc
mov
mov
test
fstpt
xor
aaa
push
inc
dec
push
lahf
xchg
pop
gs
imul
addl
sub
push
mov
push
xlat
outsb
rorb
out
in
les
add
xorl
ds
pop
mov
jle
cmp
pop
sub
pop
mov
or
dec
xor
sub
bound
add
outsl
push
pop
adc
aam
imul
pop
lock
mov
test
adc
clc
ret
adcb
jnp
mov
jns
add
js
inc
lcall
sbb
xchg
clc
dec
xchg
adc
sbb
lcall
gs
idivb
mov
data16
push
mov
test
test
mov
lds
xchg
pop
ffree
jmp
fmulp
cltd
adcl
pop
inc
out
sub
orl
and
sub
les
imul
dec
cmp
and
mov
fsubrl
mov
dec
xchg
cs
jne
sub
movsb
mov
inc
cmp
cmc
dec
test
mov
inc
xor
pop
lods
jno
jb
dec
incl
js
jne
mov
xchg
out
aam
dec
xchg
scas
cli
dec
xchg
sbb
in
pop
and
sub
mov
lea
push
mov
adc
push
enter
hlt
int
push
or
fmul
data16
xor
mov
cmpsb
nop
xor
lds
inc
mov
pop
rcl
popf
ret
fwait
testb
enter
lds
jbe
ss
sbb
mov
addl
mov
aaa
adc
loopne
sbb
imul
push
mov
cwtl
mov
push
pusha
into
xchg
cmp
int3
mov
push
andb
lret
cmp
add
xchg
push
addr16
sub
xchg
rcrb
js
divb
pop
cmpb
cmp
mov
fcomps
clc
sbb
cmp
into
cmp
xlat
mov
add
loop
pop
test
cmp
lret
mov
dec
mov
mov
mov
out
pop
es
sbb
push
add
aaa
sub
das
ds
push
push
xor
popf
out
mov
insl
fsub
adc
pop
dec
mov
add
pushl
sbb
jg
sar
jae
jge
std
mov
pop
push
das
out
mov
leave
outsl
lret
lret
out
add
test
and
les
out
bswap
rorl
dec
inc
cltd
ret
add
or
lahf
jg
jae
in
aad
in
and
inc
pop
mov
push
jbe
int
xchg
inc
mov
xor
jae
jns
and
or
fucomp
adc
ja
je
sbb
imul
cmpsb
pop
xor
or
enter
jns
xor
hlt
repz
or
fimull
loop
push
cld
push
add
fs
out
xlat
dec
lret
xor
cld
addr16
push
ss
adc
xor
xor
enter
xor
jae
rolb
push
test
xchg
int3
mov
push
mov
fiaddl
cmp
mov
addl
hlt
call
pop
adc
cwtl
into
dec
idivb
cmpl
push
jbe
lcall
stos
xor
sbb
in
sub
cmp
mov
bound
fisttpll
push
sbb
inc
das
push
ret
mov
aad
arpl
mov
or
sahf
sbb
sbb
mov
cmp
mov
or
add
pop
dec
mov
inc
ror
stc
pop
xchg
and
pop
cmpl
jo
add
aad
sti
negb
adc
sete
pop
pop
xor
lods
sub
sarb
sbb
movsb
int
int
into
mov
scas
adc
jne
inc
push
cmp
pop
cmc
cmc
pop
ja
inc
xchg
rorl
arpl
je
popa
repnz
sbb
rorl
dec
scas
test
xchg
and
jle
aam
add
lcall
lds
add
pop
int
int
shl
and
add
mov
orl
xchg
ret
mov
fmuls
sub
and
int
sub
lea
xchg
cmp
fisttpl
mov
cmpl
adc
and
jp
xor
out
pushw
dec
xorb
cld
loope
ss
imulb
xchg
sarb
pop
sub
mov
pusha
mov
cmp
xor
out
in
repz
je
mov
fs
sbb
lods
sbb
leave
jmp
xor
repnz
push
shlb
loop
fs
push
xchg
imul
or
es
and
imul
test
sbb
stos
pop
neg
addr16
fdivs
std
stos
or
out
mov
or
outsb
mov
xlat
inc
push
in
lcall
insb
cmpsl
outsb
icebp
adc
xchg
pop
rcrl
ficoml
out
test
rclb
mov
lahf
cmp
subb
and
mov
sbbb
xchg
push
imulb
cld
mov
or
add
or
jle
adc
jp
shlb
aad
fucomp
fadds
push
enter
or
punpckldq
fidivl
aad
call
fs
fmuls
in
divl
push
inc
jmp
pop
rol
pop
or
sarl
pusha
fsubr
adc
cmp
dec
xchg
push
xchg
sub
mov
sub
aam
jb
es
mov
mov
test
jbe
arpl
xchg
jb
imul
and
sti
jp
xchg
dec
or
inc
sub
jo
pop
sub
push
sub
jbe
sahf
xchg
iret
mov
adc
gs
mov
js
inc
imul
rcl
mov
xor
les
clc
jcxz
jnp
jmp
popa
push
pushf
data16
outsb
mov
pop
cmc
neg
xchg
push
and
hlt
push
pop
addr16
pop
std
out
popf
xor
mov
push
jns
fnstsw
dec
xchg
sub
repnz
inc
push
xor
scas
jp
mov
sarl
jmp
fdivrs
mov
pop
inc
jle
mov
mov
out
movsl
jg
pop
sbb
mov
std
mov
adc
sub
int3
shr
or
mov
lcall
xchg
add
addr16
xorl
xor
orl
mov
jno
clc
jne
outsb
or
dec
dec
push
addr16
pop
jge
out
xor
pop
out
mov
sahf
jns
xchg
fisttps
jno
xor
inc
xor
aas
cld
negl
int
cmp
movsl
mov
inc
je
pop
pop
or
mov
ljmp
and
out
inc
xlat
loopne
popf
inc
lock
loopne
dec
jne
pushf
lret
adc
popf
ss
add
clc
stos
aas
pop
xor
xor
cli
pop
arpl
jl
in
sub
push
mov
insl
movsl
movsl
dec
mov
std
scas
enter
insb
mov
out
adc
inc
aad
es
das
push
mov
clc
adcb
cmp
sub
stos
loop
add
imul
cmpsl
or
xor
out
xchg
sbb
push
jb
sub
aas
int3
and
xlat
xor
int
sbb
mov
xor
jbe
cmp
fdivrl
mov
repnz
inc
inc
and
pop
add
pop
je
mov
pop
xchg
jb
call
xor
mov
jg
cli
cmp
add
ret
add
arpl
push
cmpl
aas
pop
xchg
mov
inc
cli
stc
mov
inc
sub
mov
xlat
loop
sbb
fistl
inc
rorl
push
test
mov
pop
out
add
dec
xor
les
je
cmp
sbb
outsl
outsb
mov
jg
out
mov
inc
ja
sbb
mov
sti
xor
int
int3
clc
stos
lret
shrb
adc
cli
xchg
adc
popa
inc
enter
fdivl
rclb
xor
dec
imul
cmp
pop
xor
imulb
and
pushf
mov
mov
sbb
faddp
ja,pn
aam
xchg
jecxz
cs
jle
jno
gs
add
or
rcr
outsl
int3
add
jns
test
out
sbb
scas
and
mull
push
mov
mov
push
decb
pop
xor
inc
daa
lahf
ja
xchg
mov
arpl
mov
lret
sar
lods
in
sbb
aad
pusha
ljmp
mov
add
adcl
mov
push
mov
mov
popa
sub
mov
enter
xor
add
loopne
mov
mov
inc
adc
fwait
out
xchg
inc
out
lcall
jb
add
add
mov
pop
mov
mul
pop
sbb
and
leave
loop
cmp
mov
imulb
ja
sub
stos
inc
daa
cmpb
add
sbb
sahf
loop
into
aad
pop
mov
sub
std
jne
mov
mov
scas
pop
cli
push
out
jnp
push
mov
xchg
orb
popa
push
loop
in
cltd
sub
add
pop
mov
int3
js
pop
repz
lret
push
cmp
ret
sub
push
out
jle
cs
lods
cmp
stc
in
bound
xor
pop
xchg
cmp
xchg
movsb
pop
fildll
mov
mov
mov
or
dec
or
ret
rcl
and
mov
fdivr
jbe
mov
mov
cmp
mov
jno
sbbb
fnstsw
jg
sbbl
aaa
cmpsb
xchg
mov
int3
nop
push
mov
jmp
je
sbb
out
dec
cmp
mov
pop
mov
sub
and
add
pushf
inc
push
sub
xchg
addl
mov
fistl
mov
jp
xor
mov
mov
aaa
repnz
fbstp
aaa
inc
mov
inc
xor
aas
mov
mov
outsb
orb
loopne
xor
gs
into
mov
imul
mov
addb
jmp
dec
loop
test
insb
fisttpll
mov
lods
cld
loop
cmc
fdivrl
or
call
dec
pusha
sbb
xchg
xor
sbb
leave
decl
pop
pop
xchg
sub
in
xor
mov
or
ficomps
jmp
ror
mov
insl
pop
pushf
lds
aas
sbb
add
cmp
dec
inc
faddp
int
dec
nop
test
stc
les
fdivl
lods
cmc
scas
xchg
mov
mov
mov
sub
pushf
imul
sub
ljmp
push
sub
mov
loop
out
dec
adc
push
adc
pop
insl
leave
and
xchg
mov
inc
cmp
adcb
cmp
xor
cmpsl
cmp
jb
loope
sub
scas
jne
sbb
jb
push
pop
add
pop
iret
out
jns
adc
into
mov
and
and
sbb
out
xlat
fnstsw
pop
push
adc
mov
jbe
sbb
xchg
cmpl
add
sub
lahf
adc
or
pop
jne
out
outsb
outsl
icebp
sub
push
fcompl
aam
sar
push
in
adc
hlt
xor
pop
pop
rorl
push
pop
mov
pop
dec
mov
dec
iret
and
fnstenv
movsl
leave
fnsave
cli
and
jns
daa
cli
gs
adc
mov
pop
outsl
jl
mov
clc
repnz
inc
mov
or
pop
jb
sahf
repnz
or
subl
sbb
out
jge
ds
mov
out
fists
add
adc
dec
sub
pop
and
jb
sub
in
pop
jl
cltd
pop
cli
data16
js
lock
mov
int3
and
add
pop
xor
sbb
and
lret
arpl
mov
hlt
push
out
or
mov
or
in
int
mov
inc
in
and
jl
xchg
aaa
int3
add
sbb
push
fwait
testb
loop
jle
sahf
dec
push
mov
sub
lcall
add
jae
sbb
hlt
div
fistpl
xchg
repz
sti
mov
lds
mov
pop
aaa
ss
cmp
xchg
adcb
in
mov
outsl
gs
inc
cmp
xchg
in
cmpsb
cmp
pop
push
mov
pushf
jb
cmpsb
pop
cmc
loop
outsb
xchg
mov
stos
xor
inc
scas
stc
jmp
ja
outsb
sbbb
addb
cmp
mov
mov
shll
fidivs
leave
push
daa
jmp
jns
push
stc
mov
imul
les
jo
ret
aad
fbld
sahf
lret
jae
cltd
adc
or
jle
iret
xchg
push
jo
push
hlt
jecxz
add
popf
xchg
movsb
sbb
in
or
cli
adc
cltd
test
stc
gs
mov
aaa
pop
sbb
push
pop
add
cmp
lock
push
ret
push
gs
cmpsl
rolb
ds
xor
add
lcall
pop
mov
out
xchg
jp
and
ror
mov
sbb
int3
xorl
loop
into
insb
out
sub
movsb
push
xchg
jns
dec
pusha
push
and
ljmp
ret
rcr
add
or
cli
jno
sbb
cli
dec
call
les
xchg
and
jae
loopne
clc
addr16
sbb
es
out
sti
idiv
cmp
cli
push
push
mov
aad
loope
dec
cmp
mov
sbb
mov
mov
bound
and
dec
adc
ret
decl
sub
mov
push
scas
sbbb
cwtl
cmpsl
aam
pop
mov
fstpt
nop
mov
xchg
or
lret
or
adc
inc
repz
in
sahf
dec
and
cmp
push
push
nop
lahf
loop
in
cmpl
lods
pop
xchg
mov
jg
dec
push
mov
pop
cmpsl
sbb
cld
adc
ret
jns
stos
dec
xchg
pop
xor
lds
fcoms
xor
iret
xchg
enter
xchg
sub
subb
cs
out
mov
xor
ss
aaa
fstl
dec
jg
cld
out
add
jno
lods
pop
xlat
insl
and
lahf
push
scas
inc
xchg
pop
mov
pop
imul
adcb
xor
xchg
dec
int
add
xchg
cmp
jl
pop
call
or
pop
mov
push
mov
repz
sarb
dec
divb
sbb
clc
and
dec
jns
adc
jl
cld
movsb
push
push
pop
jno
in
xchg
loopne
cmp
lcall
dec
mov
repnz
dec
rcrl
lods
jmp
sub
mov
scas
rcr
and
movsb
dec
mov
cmpsb
push
int
xor
out
cmc
push
cmp
adc
jmp
insb
xor
jecxz
test
push
mov
in
sub
mov
into
jg
nop
cmp
mov
nop
mov
std
testb
pushl
inc
or
mov
sbb
xor
fcmovbe
and
outsb
pop
pop
dec
je,pt
outsl
stos
cli
fistl
aaa
repz
sub
lea
rol
scas
lcall
andl
push
sbb
shl
out
aad
mov
rclb
ret
pop
addr16
adc
or
faddl
ficomps
xchg
rcll
ljmp
sub
mov
dec
pop
cmp
jnp
and
cmp
xchg
adc
xor
and
inc
mov
idivb
and
jp
repz
sbb
fs
sub
fldcw
mov
xchg
je
mov
gs
sbb
push
add
add
push
daa
sub
es
mov
jbe
rcrl
jmp
dec
and
shl
pusha
les
outsl
jb
pushf
lock
pop
fsts
mov
ret
shrl
push
mov
pop
fisubrs
pop
mov
push
lds
and
das
pusha
push
cmp
pop
push
add
xchg
lahf
push
call
xchg
mov
dec
pop
movsb
pop
xor
arpl
or
cmp
lcall
lds
mov
push
out
popa
mov
jecxz
insb
jbe
mov
dec
stos
mov
add
bound
mov
in
sub
mov
add
xchg
push
clc
mov
push
lods
lahf
popf
pop
xlat
inc
xor
movsl
jmp
mov
sbb
mov
dec
das
sbb
mov
xchg
mov
dec
fnstsw
les
add
mov
in
adc
mov
jnp
adc
jno
movsl
pop
or
shrl
outsl
adc
jns
ret
je
mov
popf
xchg
stos
cmp
movsl
popa
std
sbbb
call
arpl
cmovns
scas
dec
pop
arpl
sbb
sub
popf
push
push
push
nop
jb
pop
daa
mov
jle
and
sub
je
jno
push
rcll
add
inc
xor
pxor
push
lods
xchg
push
js
inc
test
ljmp
jl
aas
clc
clc
adc
int
in
cmp
push
pop
aas
adc
sub
push
das
je
mov
jns
adc
lahf
mov
push
or
push
jb
push
popf
mov
bound
outsl
inc
jle
shlb
popf
mov
jge
ja
out
in
mov
adc
mov
cmp
jbe
imul
gs
push
dec
push
test
imulb
pop
imulb
fcoml
nop
cmp
mov
movsb
std
movsl
dec
or
fisubrl
push
cmpb
or
lret
loope
add
push
push
adc
push
inc
in
xchg
cmp
sbb
enter
fstpl
mov
sbb
pop
cmp
dec
mov
mov
mov
push
aad
sub
push
xchg
sahf
psubd
lret
inc
jl
inc
xchg
inc
test
dec
mov
and
repz
xlat
fdivrs
ret
int3
aas
sbbl
and
adc
add
jb
jns
sbb
add
add
scas
fstpt
out
jge
out
dec
jns
stos
mov
movsb
cltd
xor
iret
ja
jmp
fs
faddl
repnz
outsb
sbb
std
xchg
enter
mov
and
inc
pushf
pop
cmp
cli
ds
sub
sbb
pop
inc
mov
rcrl
lea
aaa
loope
idiv
dec
mov
mov
cmp
sub
lods
in
inc
sub
jne
jl
xor
dec
inc
dec
lret
xchg
dec
sub
push
insb
jnp
gs
mov
xchg
dec
fucomi
ror
ficompl
dec
sub
push
int3
jns
pop
inc
js
xchg
mov
mov
pusha
xchg
cs
je
push
cltd
and
and
repz
out
lea
inc
sbb
movsl
pushf
mov
fsts
mov
adc
cmp
stc
xchg
in
jle
add
mov
adc
pop
add
insb
dec
rolb
mov
lea
popa
aam
mov
insb
xchg
popa
xchg
das
mov
mov
loope
adc
orb
sub
sar
sbb
push
dec
aas
mul
mov
and
outsb
faddp
push
sub
int3
sbb
cmp
fwait
push
ret
cmovb
cld
mov
out
scas
sbb
fdivrs
clc
sbb
cmp
aas
pop
in
jae
lds
ret
push
imul
out
pop
pop
fidivs
aas
sub
push
push
aam
dec
pushf
int
push
or
xorl
push
jle
repz
inc
movsl
cmpl
sbb
arpl
or
sbb
xchg
cmp
pop
push
pop
or
rcrb
dec
cwtl
sahf
mov
int3
mov
pop
daa
ja
sbb
mov
push
mov
jecxz
adc
aam
and
mov
add
stc
lods
sbb
gs
adc
pop
push
rorb
push
jmp
dec
sub
stos
cmp
cmpsb
inc
add
in
repz
sbbl
adc
loop
out
inc
mov
sbb
lds
js
je
lret
add
fucomp
leave
add
int3
push
enter
cli
and
xor
cmpsl
ficoms
sub
mov
adc
xchg
push
mov
inc
andb
dec
cwtl
lcall
push
lods
jb
xor
outsb
jl
xchg
pop
scas
cmp
inc
dec
inc
cltd
cld
sub
sub
fidivrs
call
fsts
xchg
filds
stos
mov
xorl
divb
add
mov
sub
jbe
jo
pop
in
call
mov
movsl
jnp
lea
mov
ja
fcomps
aad
test
xor
push
pushf
jp
add
ss
ret
cltd
cmp
inc
test
push
aaa
std
lret
mov
out
aaa
pop
mov
xor
mov
inc
or
inc
push
je
mov
movsb
cwtl
xchg
mov
dec
rcr
fimull
and
call
sub
xchg
push
sbb
rcll
jb
push
pop
rolb
in
cmc
shrb
jecxz
mov
cmc
adc
inc
sahf
sbb
test
daa
jl
or
rcr
push
or
and
push
divl
test
popf
push
fninit
lret
xor
sarb
daa
pop
fldenv
aad
dec
movsl
leave
sbb
xchg
popa
scas
mov
mov
jmp
idiv
mov
jg
xor
addr16
test
out
pop
sub
push
addr16
dec
ss
sbb
orl
inc
je
dec
or
lods
jns
lea
sbb
mov
or
ret
testb
lret
jo
mov
mov
jg
stc
pop
sbb
lcall
xchg
adc
enter
inc
xor
xor
ret
adc
jmp
inc
daa
lds
dec
in
test
pop
sub
push
pusha
lret
adc
imul
mov
shlb
cmp
mov
mulb
popl
in
mov
or
stos
dec
cmp
push
mul
or
dec
pop
pop
or
cmpsb
add
sub
loope
and
lock
xor
adc
jns
in
mov
add
sub
hlt
loopne
scas
or
xor
inc
dec
lahf
andb
repnz
pushf
xchg
xor
jl
mov
pop
loop
cmp
push
xchg
cmpsl
in
stos
jp
insb
and
adc
jns
iret
dec
pop
adc
pop
pop
fwait
mov
enter
nop
cmp
ljmp
movsb
sbbl
dec
ret
test
dec
pop
mov
ret
xchg
sbb
loope
and
in
jne
mov
aam
test
outsb
mov
mov
insl
cmp
jle
pop
inc
jge
test
les
out
repnz
sbb
scas
cltd
sbb
inc
pusha
push
lds
out
shlb
xchg
pusha
loopne
xchg
and
adcb
repnz
sahf
test
sbb
or
enter
rorb
mov
mov
les
int
lahf
xlat
movsb
push
inc
sbbb
sbb
sub
mov
jmp
lock
sbb
fldt
popa
and
push
pusha
dec
push
movl
xchg
outsl
dec
popf
popf
cltd
push
jmp
in
sub
cmpb
clc
mov
and
dec
lcall
inc
dec
test
aas
jmp
inc
stc
sub
lods
out
mov
lahf
fistps
outsb
lock
inc
rcll
rcrl
pop
clc
fidivs
pop
add
or
sub
orl
ja
inc
andl
xchg
cmp
jp
addr16
mov
int3
mov
lret
scas
mov
inc
and
cli
stos
mov
xor
push
jecxz
or
bound
push
adc
adc
bound
add
loope
or
std
sub
enter
mov
xlat
xlat
sbb
mov
push
shr
aas
push
test
test
jno
clc
or
mov
xlat
xchg
or
loopne
test
cmpsb
cmp
addr16
mov
jle
mov
fdivrl
lahf
jecxz
and
lret
jne
lahf
call
fscale
fstl
cmpsl
int3
sarl
mov
mov
dec
xchg
jae
enter
in
mov
xchg
dec
test
jge
movsl
mov
and
dec
pop
lods
jl
xor
mov
sub
inc
call
fwait
jg
sub
dec
ror
pop
stos
test
outsl
fs
and
mov
aaa
jmp
jne
jl
sub
in
pushf
test
aas
mov
push
mov
nop
cmp
jle
adc
add
mov
stos
out
xchg
movsb
push
push
rcrb
daa
dec
dec
mov
in
je
mov
lds
mov
push
mov
sbb
ret
and
loopne
je
pop
xor
aaa
addr16
and
lcall
mov
mov
cwtl
shrb
lds
addr16
pop
les
int3
sbb
mov
mov
pop
fs
mov
jb
jle
ljmp
mov
es
popf
pop
and
add
add
dec
lret
push
pusha
repnz
pop
xor
pop
imull
or
mov
stos
test
mov
push
sahf
out
xor
xchg
dec
mov
sub
dec
cmp
mov
std
push
mov
mul
cmp
stc
add
inc
xchg
dec
pop
sub
sub
mov
movsb
mov
pop
adc
pop
jbe
arpl
subl
push
ja
sbbl
clc
sub
pop
push
xor
mov
inc
sbb
imul
punpcklbw
jb
mov
icebp
jo
push
xlat
out
dec
push
cmpsb
pop
and
pusha
insb
mov
xchg
mov
adc
inc
stc
cmp
cmp
mov
lock
xchg
and
test
pushf
fstps
cld
sub
jp
push
shrl
gs
dec
aad
fisttps
jp
addr16
jmp
xchg
ret
mov
push
popa
add
fsubrl
add
dec
fs
repz
add
xor
addb
pop
mov
daa
inc
std
jno
std
lods
or
push
in
sub
dec
jnp
sub
xor
push
adc
jle
clc
jle
jl
sub
xchg
stos
xchg
sub
out
xor
bnd
jns
jo
mov
adc
jge
movsb
ret
push
jo
pop
fcoml
sbb
inc
jnp
iret
push
subl
dec
iret
and
inc
adc
pop
fidivrs
and
pandn
pop
xchg
in
imul
mov
imul
sub
adc
testb
jl
test
ja
xor
lds
and
scas
xor
pop
jb
pushf
pop
push
push
pushf
lock
fimull
xchg
cli
gs
or
mov
cwtl
repz
ds
jne
add
out
xchg
scas
jb
popa
outsl
fsubl
pop
rcr
insb
or
mov
add
fwait
xor
test
stos
pop
xchg
hlt
je
add
sarb
ret
and
and
ss
and
dec
inc
xchg
mov
cmpsb
lret
pop
jmp
jbe
imul
call
xor
aad
ljmp
xchg
jne
mov
fwait
addr16
into
mov
push
sub
cmp
inc
push
add
les
sarb
push
lock
dec
adc
data16
test
push
in
icebp
inc
in
imul
jmp
test
xchg
clc
pop
pushf
fcompl
imul
or
test
idivl
divl
repnz
pop
jo
pop
into
aam
mov
nop
mov
cltd
jge
lret
or
fwait
outsb
add
mov
cld
xor
mov
inc
mov
ljmp
add
add
jns
outsl
dec
jae
sbb
xchg
mov
dec
cld
push
jns
sub
lea
dec
ds
cmpsl
xchg
sub
or
dec
push
cmp
in
jp
xchg
cld
outsl
mov
and
pushf
fisttps
in
fsubr
xchg
loopne
fs
imull
sarb
xchg
popf
cmpsl
stos
cmp
repz
mov
jg
repz
outsb
stc
cmp
mov
xlat
lock
jl
mov
lahf
stc
adc
insl
or
inc
xchg
xor
pop
push
dec
shlb
movsl
pop
mov
lods
leave
dec
inc
jnp
inc
pop
lods
mov
scas
sbb
push
pop
xchg
and
pop
mov
decb
std
test
jmp
add
fildll
ret
dec
sbbb
xor
test
clc
push
loop
xchg
sub
cli
ljmp
or
pop
imul
std
lds
jge
rcrl
or
mov
sahf
jle
jns
outsl
mov
fwait
ja
sub
dec
daa
fsubrs
leave
pop
sub
xlat
pushf
div
push
sbb
cli
sub
mov
imull
mov
popl
dec
roll
movsb
xor
mov
sbb
sahf
or
in
fsubrs
sbb
mov
xchg
sbb
lret
xchg
mov
ds
fcoms
fs
adc
loope
je
out
jns
jb
popa
jne
fdivrl
int
out
lret
insl
mov
dec
xor
xchg
cli
fs
out
jecxz
addr16
and
mov
xlat
jne
test
ret
out
push
adc
mov
sbb
ret
push
add
inc
mov
cmc
cmc
fcoms
xor
insl
ljmp
insb
push
sbb
insb
in
mov
leave
lea
cld
jb
out
jl
gs
jmp
mov
or
pop
fwait
cmc
ds
ljmp
dec
xchg
out
sbb
jl
pop
loope
mov
mov
xchg
sti
aaa
fadd
lods
dec
ja
js
lods
pop
pop
or
sub
aaa
scas
gs
mov
jno
xor
add
cltd
or
jne
divl
mov
cld
jp
fxam
aam
mov
shrl
mov
adc
setp
inc
mov
mov
dec
test
push
or
icebp
add
inc
mov
sbb
add
test
cmp
fmulp
outsl
mov
cwtl
sahf
loopne
cmp
jle,pt
mov
jmp
adc
xchg
push
xchg
enter
scas
sub
xchg
sub
xor
push
sarl
imul
dec
cmp
jns
xchg
cmp
mov
add
push
jbe,pn
lock
mov
dec
test
sti
shll
xchg
sbb
mov
aas
mov
in
cmp
adc
fs
out
dec
and
mov
lea
out
cmp
adc
std
add
dec
lods
pop
push
push
leave
lods
sub
xchg
fdivl
add
push
adc
mov
pop
sbb
pop
cs
pop
stos
popa
mov
test
xchg
adc
mov
ret
mov
sbb
or
push
stc
data16
or
sahf
mov
clc
mov
mov
sbbl
lahf
imul
add
fisubrl
fxsave
es
js
adc
xchg
insb
mov
jo
add
or
push
sbb
push
lret
xchg
lret
push
mov
or
jl
cwtl
add
rcrl
fcoml
or
or
mov
jecxz
push
repnz
test
lods
xchg
icebp
cmp
daa
or
es
mov
int3
rcl
adc
sti
cld
sti
cmc
jnp
iret
test
movl
std
lret
insl
or
add
outsb
mov
and
cmpsl
push
pop
fst
push
test
andl
add
out
shll
or
insb
insb
rcrl
pop
cmc
jecxz
in
subb
ds
pop
push
xor
rcrb
adc
cmp
sahf
or
and
cmp
vmulpd
sbb
popf
aas
inc
xor
aas
push
sar
popf
push
lods
pop
in
inc
mov
lcall
inc
repz
jae
mov
popf
addr16
pop
mov
es
repz
sbb
mov
aad
nop
imul
inc
mov
cmp
scas
scas
int3
out
pop
and
sub
or
cs
add
aad
ljmp
stos
cltd
add
mov
cwtl
xchg
imul
adc
pop
xchg
mov
test
movsb
push
push
sub
cmc
sbbb
push
mov
adc
stos
dec
sub
arpl
in
loope
iret
cltd
test
es
pop
bnd
or
je
cmp
push
xchg
popf
cwtl
mov
cmp
pop
test
fwait
mov
out
xor
and
jo
push
insl
cld
jge
popl
frstpm(287
pusha
xchg
and
test
pop
jmp
adc
fsubr
loope
cmp
jo
mov
mov
dec
into
loope
fsubs
push
sbb
jne
cmp
ds
dec
es
pop
cmp
nop
nop
push
push
push
push
inc
pop
dec
cmp
mov
stos
cmp
xor
sahf
mov
ret
call
dec
xchg
mov
clc
push
push
push
aas
movl
lahf
mov
inc
or
push
pop
cmpsl
leave
pop
inc
mov
mov
bound
cmc
lahf
pusha
pop
rorb
jmp
xor
in
cmp
lea
cmp
mov
pop
xchg
ror
push
cmp
cmpsb
daa
push
data16
pop
int3
push
sahf
into
lods
ljmp
and
lea
negl
sbb
push
inc
jbe
xor
lcall
addr16
fxch
ja
and
cmpsl
xor
jns
ret
cmp
aam
pop
push
or
rclb
push
rclb
stc
sbb
and
pop
xchg
jp
imul
xor
movsl
stos
jle
sbb
and
lret
stos
cmp
mov
sarb
push
daa
inc
pop
movsb
or
nop
imul
inc
loop
pop
int
stc
xchg
pushf
inc
cmp
scas
enter
mov
repnz
push
mov
adc
mov
mov
cs
das
insl
addr16
daa
push
sbb
mov
mov
pop
xor
inc
and
pop
int3
inc
mov
inc
jb
lret
adc
arpl
inc
jle
in
lret
sbb
repz
xchg
js
pop
hlt
roll
mov
rclb
adc
inc
xor
aad
movl
sub
dec
sbb
cld
into
cmp
mov
inc
jl
cmpsl
xchg
loop
and
lahf
xchg
jae
add
mov
addl
fwait
je
mov
or
icebp
dec
ror
add
enter
test
inc
fimull
popa
addr16
push
gs
mov
sbb
mov
mov
sbb
jns
adc
aaa
cs
mov
ret
xor
shlb
jmp
jecxz
cmp
sub
xor
rorl
sahf
mov
nop
data16
mov
sbb
xor
lea
loope
pop
cld
push
jae
cmp
push
add
sub
mov
lea
inc
mov
ss
mov
jl
cmc
cmp
sbb
aam
shll
pop
loopne
fsts
imul
pop
adc
pop
lret
mov
fisubrs
loop
pop
dec
lds
xor
repz
outsl
or
out
imul
call
sub
or
fwait
in
ret
pusha
sub
cmp
shl
mov
xlat
iret
sub
pushf
and
xchg
xor
add
in
pop
fbstp
mov
inc
in
out
push
cmc
pop
xchg
add
push
sahf
rcrb
lahf
leave
sbb
mov
hlt
jnp
jne
scas
or
xchg
enter
scas
mov
loope
nop
ficoms
sbb
loopne
repz
push
popa
jne
ja
cmp
fisttpl
cltd
in
jmp
pop
jnp
add
sub
inc
jmp
xor
dec
scas
sahf
rclb
in
mov
int
jne
andl
js
int3
fmuls
out
add
shrl
idivl
out
scas
mov
mov
cmc
lea
mov
pushf
or
jmp
lcall
fstps
mov
xor
sub
add
int
data16
mov
scas
mov
inc
aaa
hlt
ja
push
jle
cmp
out
jno
insl
lods
jmp
adc
je
pop
and
jb
xchg
adc
cli
push
pop
mov
mov
and
cli
or
push
or
pop
cli
add
test
push
fabs
js
and
inc
into
scas
or
dec
cmp
outsb
pop
std
hlt
ret
push
stc
and
mov
neg
fs
add
push
xchg
dec
popf
xor
xchg
jl
fdivr
inc
lods
aad
pop
std
or
mov
repnz
push
cmp
mov
cmc
mov
mov
pop
jbe
insb
mov
shll
inc
dec
fwait
cmp
and
sarb
mov
xor
std
push
cwtl
sub
jno
fcmovne
ret
add
pop
sbb
add
jg
in
mov
sbb
mov
mov
loop
inc
testl
data16
lds
lcall
push
jmp
out
mov
sbb
sbb
sub
push
jmp
insb
lahf
xor
cli
xchg
sahf
cmp
add
xchg
shr
xchg
xchg
jmp
enter
movsl
popf
rclb
adc
das
mov
shl
xor
daa
cmp
xor
lock
jmp
sub
inc
cmpsl
cmp
pop
les
push
in
sbbb
and
pop
xchg
fs
mov
mov
lods
add
es
mov
loope
dec
pop
cs
fadds
dec
sub
pop
xor
jno
and
sbb
add
mov
push
jb
adc
insb
imul
dec
lahf
sub
push
or
xor
push
push
jne
mov
test
xchg
mov
jmp
push
jmp
test
in
cwtl
out
mov
loope
dec
test
mov
jbe
mov
fsubl
shrb
aam
pop
jl
jg
push
ret
cmpsb
xor
mov
sub
mov
mov
cmc
mov
jae
pop
mov
xor
mov
rorb
ficoms
sbbb
mov
xchg
mov
mov
std
push
mov
fistpll
ret
jae
mov
rol
pop
inc
cmpsl
adc
fwait
add
ds
xchg
sarl
lea
mov
lock
adc
gs
sti
jbe
pusha
fistpll
or
or
and
xlat
xchg
cmpsb
subb
iret
push
outsl
xor
shlb
cmp
cmp
ss
insb
out
inc
lahf
and
jo
orl
movsl
outsl
icebp
inc
gs
mov
cmp
hlt
pop
mov
xchg
sub
mov
iret
subb
or
push
jmp
inc
test
ljmp
or
lea
lds
inc
push
test
mov
mov
test
insl
sbb
dec
rcrl
aam
fwait
push
pop
jmp
in
imul
and
in
lods
pop
ljmp
push
mov
jbe
loop
fdivs
push
push
test
mov
int
es
push
mov
gs
adc
ret
movsl
pop
movl
cmp
cmp
adc
adc
out
mov
aad
loop
adc
rorl
add
mov
mov
shll
iret
and
enter
xor
mov
jmp
cmp
out
cmp
inc
sti
jo
push
xor
jno
int3
sahf
adc
cmp
pop
push
cmp
or
sbb
stc
xchg
sti
popf
mov
jecxz
cli
mov
xlat
out
jl
iret
shl
cli
pop
mov
je
inc
mov
xchg
aas
mov
movsl
jno
hlt
mov
jmp
inc
lods
mov
add
cli
mov
cmpsl
jg
orb
jp
out
fnstsw
scas
inc
add
push
push
adc
mov
jp
mov
fidivrl
and
xchg
mov
jg
mov
jne
int3
loope
decb
idiv
orb
and
pop
nop
mov
ss
mov
aaa
inc
inc
icebp
cmp
jp
dec
jb
jg
ljmp
xchg
jnp
dec
xor
push
jl
mov
cmp
fsubp
cmp
stos
mov
int
xor
dec
dec
mov
insl
pusha
cmp
pop
loope
lahf
mov
inc
notl
pop
inc
mov
dec
mov
stc
fwait
sbb
inc
popf
roll
sbb
repz
xchg
es
out
mov
sbb
or
test
jp
js
and
adc
pop
dec
or
cmpsb
add
test
in
push
and
fmuls
or
add
out
mov
dec
dec
in
jno
ja
cmp
lock
mov
stos
data16
roll
xchg
loopne
xor
jns
mov
decl
jnp
addr16
rcll
call
sub
sub
stos
int
xor
dec
mov
aaa
dec
mov
adc
hlt
jge
sbb
lds
mov
push
shrb
jbe
cld
gs
testb
dec
andb
in
dec
xchg
addr16
mov
imul
cmpsl
inc
cmp
xchg
mov
jbe
fwait
test
xchg
jl
out
push
mov
movl
out
pusha
fildll
out
sbb
sar
pop
daa
ss
mov
decb
sub
js
imul
scas
das
stc
dec
int3
mov
sbb
cmp
out
xchg
add
cmp
lea
stos
jle
fnstenv
insb
aam
jne
sbb
push
jecxz
adc
jecxz
mov
pop
mov
in
lds
mov
lcall
rcrl
addr16
push
cld
mov
pushl
sbb
pop
jns
insl
mov
xor
rolb
ficompl
pop
leave
cmp
movsl
lock
outsb
or
mov
push
fildll
or
aas
inc
rolb
cvttps2pi
or
xchg
fs
jbe
mov
dec
xor
lock
loope
pusha
cmp
push
jge
xchg
aad
jno
add
lahf
cmpsb
pop
sbb
lcall
clc
test
or
lods
stos
sbb
and
mov
insl
test
cli
jbe
pop
testw
sub
and
or
lods
test
repz
pop
mov
push
pop
loop
imul
pop
mov
inc
out
jb
ss
dec
mov
pop
jle
add
popa
mov
adc
mov
mov
ds
sub
lret
test
jle
xchg
xchg
shrl
scas
out
inc
push
dec
out
fistpll
inc
mov
mov
inc
jge
sbb
pop
adc
add
dec
sub
xchg
push
dec
and
mov
repnz
rolb
dec
fsubrl
les
xchg
hlt
add
insb
lret
mov
inc
cmpsl
sbb
bnd
out
in
xor
jl
sub
mov
jns
lahf
inc
adc
xor
adc
jns
mov
stos
pushf
cmp
push
pop
ret
mov
incl
frstor
fs
lret
sti
mov
in
or
aam
fwait
loopne
icebp
adc
std
or
jg
sbb
and
cmp
repnz
fs
push
jbe
cmp
testl
andl
cmp
fisubrs
bound
pop
pop
push
inc
out
adc
inc
mov
mov
add
imul
sub
push
dec
jecxz
rcll
xor
out
cmpsl
imul
sub
sub
jg
cmp
inc
es
lods
scas
sbb
in
adc
jb
testl
and
enter
push
jmp
jno
push
inc
or
mov
movsl
xor
loope
or
popf
sub
jbe
scas
stc
jnp
clc
idiv
pushf
or
xor
outsb
ret
cltd
pusha
inc
xlat
sbb
cmpsl
mov
push
out
jecxz
cmp
divps
decl
cmpl
rorb
dec
daa
outsb
push
cmp
pop
addr16
ljmp
mov
shlb
adc
shrl
ficoml
cmp
aad
les
pop
arpl
sub
hlt
adc
or
leave
mov
push
hlt
dec
scas
and
jns
mov
and
iret
add
mov
or
inc
jbe
lahf
jge
sbb
mov
ds
out
pop
inc
xchg
mov
pop
inc
mov
scas
rcrl
cmc
sbb
ficompl
mov
in
jle
out
test
push
adcl
jae
jmp
adc
sub
and
ljmp
fsts
cld
jp
out
mov
or
adc
std
jb
mov
inc
xchg
arpl
pop
sub
sar
cli
mov
in
fldenv
hlt
addr16
cmp
movl
push
push
scas
test
xor
adc
jne
js
mov
and
pop
fldt
mov
in
inc
pop
adc
cvtps2pd
and
sub
mov
jnp
shl
in
sbb
test
lock
hlt
or
jae
inc
lahf
xchg
aam
clc
xchg
xor
sub
cmp
int
sbb
push
fdiv
cmp
pop
lods
imul
aam
ror
cwtl
notb
leave
daa
adc
dec
xchg
mov
xor
in
push
int
mov
push
push
fistpl
pusha
pop
push
pop
xor
lods
int3
pop
je
fistps
div
out
add
pop
inc
dec
pop
pusha
scas
arpl
or
jecxz
sbb
stos
das
push
repz
cs
fstpl
cmc
subl
lahf
in
fs
sbb
jns
hlt
xchg
or
inc
and
jae
dec
repnz
out
adc
push
xchg
pop
jnp
ret
mov
out
jl
in
rolb
jle
inc
std
cmp
fidivrl
repz
add
mov
lea
cmp
inc
rolb
sbb
mov
ja
adc
sub
push
out
loop
popf
mov
sbb
outsb
sahf
xchg
pushf
das
js
roll
mov
arpl
cmp
adc
push
fwait
scas
mov
add
cs
aam
dec
hlt
xor
pushf
mov
repnz
in
push
imul
mov
jg
iret
jmp
sbb
daa
je
adc
mov
aam
mov
push
enter
fcoml
jns
scas
cmp
xor
mov
sahf
idivl
sbb
stc
out
sbb
add
aas
xlat
inc
cmp
pushf
ret
cli
notb
pop
stc
jmp
jmp
mov
loope
stc
fiaddl
cmpsb
lods
xchg
fwait
stos
mov
add
sahf
into
push
negl
rclb
in
ds
cli
or
shlb
jmp
mov
into
loope
iret
xlat
sbbl
adc
enter
xchg
jge
arpl
xor
pop
pop
or
mov
dec
xor
mov
and
jno
or
add
arpl
rorl
jns
sbb
popa
sbb
jmp
les
cmp
mov
pop
pop
fmull
mov
push
repz
push
out
jg
push
fimull
js
mov
xchg
enter
je
cmc
jmp
pop
jo
das
mov
inc
and
lret
fcmovne
mov
cld
sub
ds
daa
into
scas
fs
mov
into
xchg
xor
mov
hlt
sub
pushf
xor
xor
sbb
test
xchg
push
rcll
cmp
notb
dec
sbb
fldcw
mov
scas
add
mov
xchg
jge
jne
mov
cmpsl
enter
shll
push
out
jne
or
jnp
imul
in
mov
cli
push
les
fstl
repnz
das
xchg
ds
ja
pop
sub
or
cmp
adc
push
cmp
addr16
mov
sahf
dec
jb
scas
dec
push
jge
lret
inc
push
xchg
and
lahf
call
clc
pop
mov
mov
xchg
mov
into
inc
hlt
mov
pop
sbb
inc
pop
addr16
cld
dec
jmp
mov
add
sbbb
mov
push
inc
leave
into
sbb
or
cmp
mov
pop
push
adc
mov
or
call
in
repnz
adc
lock
popf
inc
rol
jmp
mov
pop
sbb
imul
adc
ljmp
fwait
ret
mov
xchg
pusha
xchg
mov
shlb
sub
jb
movsl
cli
insb
shll
call
es
push
sbb
pop
mov
xchg
mov
add
data16
mov
pop
loope
adc
mov
sub
dec
mov
rorl
scas
sbb
sbb
mov
sbb
mov
xorl
je
mov
stos
or
xchg
test
loop
add
inc
pop
jae
mov
and
imul
jno
gs
mov
test
inc
mov
xchg
popa
xchg
aaa
mov
jns
aaa
sub
or
mov
leave
jns
cmp
mov
inc
aad
sbb
xchg
fbstp
lds
push
icebp
sub
mov
loopne
bound
or
loope
bound
push
cltd
aam
ret
test
cmp
stos
sar
xor
adc
and
popf
add
xchg
scas
or
and
icebp
mov
push
xor
adc
inc
je
out
sub
ja
push
stos
sub
and
lds
stos
sub
mov
bnd
aaa
lcall
cs
adc
sbb
enter
inc
rolb
inc
loopne
in
insl
mov
lock
add
les
decb
xchg
and
ret
cld
mov
ds
mov
aad
add
aam
sub
movsb
ror
jbe
test
dec
mov
out
andl
dec
test
hlt
pop
sbb
add
jbe
sub
push
push
scas
lds
add
inc
xchg
rclb
cmp
loopne
out
mov
pop
mov
int
inc
mov
fldt
hlt
enter
pushf
jne
dec
or
bound
and
nop
push
cli
xchg
mov
jmp
xor
push
mov
out
iret
in
das
incl
push
cli
sub
jbe
int
sbb
pop
inc
jbe
insb
xchg
and
dec
mov
les
aas
flds
stc
or
xchg
rcrl
leave
dec
mov
loopne
test
lds
push
cmp
clc
xor
adc
adc
sub
jb
lea
lods
in
push
lcall
sbb
cli
repnz
nop
outsl
jle
pop
push
insl
push
js
ret
push
mov
pop
xchg
subb
cli
cmp
stc
mov
nop
xchg
shl
mov
stos
addb
dec
mov
inc
sub
cltd
nop
lret
stos
stos
fwait
adc
adc
jecxz
insl
xor
mov
out
mov
cmp
cwtl
jecxz
inc
scas
cmpsl
jno
jecxz
push
notb
mov
sbb
shrl
sbb
adc
push
outsb
outsl
clc
pushf
out
cmp
xor
jo
pusha
or
subb
jne
adcb
jecxz
adc
es
out
lds
ss
mov
push
push
mov
mov
xchg
add
aas
adcb
gs
out
push
js
adc
pop
and
sub
aaa
mov
lock
in
xchg
mov
mov
dec
movsl
cmpsb
std
or
mov
mov
iret
and
in
xchg
mov
inc
sbb
insb
in
cmp
xchg
jecxz
xchg
es
lcall
ljmp
pop
aad
pop
push
mov
cmp
add
sub
lcall
dec
cmp
sbb
cmp
pop
and
adc
ds
test
dec
jns
int
adc
pop
pop
out
cld
aas
mov
fisttps
mov
loop
pop
movsl
or
inc
mov
fs
fwait
rclb
mov
push
fwait
out
fcoml
les
fimuls
lret
adc
push
dec
pop
lods
sbb
jle
mov
movsb
fadds
pop
js
mov
push
cmp
inc
subl
in
jnp
stc
je
adc
push
mov
ja
inc
movsl
lods
xchg
cmp
fdivl
mov
cs
push
and
sbb
fcomps
repnz
dec
pop
fidivl
dec
pop
faddl
sbb
pusha
xor
rorb
add
aad
pop
pop
mov
cmp
test
jns
orl
dec
jne
ret
inc
xor
hlt
aas
icebp
sub
pop
mov
and
and
lock
xchg
in
loop
pop
icebp
push
mov
repz
test
imul
inc
stc
sub
pop
gs
test
out
fs
xchg
push
add
xchg
inc
adc
cmp
fistpl
loop
dec
in
adc
jge
cwtl
test
xchg
loopne
jne
dec
arpl
shlb
nop
cmp
adc
stos
mov
loopne
mov
inc
jg
in
mov
adc
push
testl
add
pusha
cld
lret
and
stos
fdivr
pushf
pop
and
jg
mov
data16
pop
nop
imul
mov
push
sbb
es
mov
out
mov
push
xchg
jno
pop
test
les
lahf
and
dec
jb
lret
testb
inc
mov
cmp
in
in
jmp
xor
sbb
aad
ret
add
push
push
loope
pop
xchg
fld
jp
jo
shll
adc
jae
adc
lea
jbe
sub
xchg
das
or
push
popa
out
dec
jl
ljmp
xchg
sarb
xchg
ds
lods
lahf
cmpsb
leave
xor
dec
dec
cwtl
std
loop
xlat
cmp
or
cmp
cwtl
or
adc
and
cmp
cmp
ret
popa
ror
sub
mov
imulb
incl
inc
sbb
paddq
lcall
push
sbb
sub
pusha
pop
push
lret
lret
or
push
mov
push
mov
push
jne
imul
jmp
das
pusha
or
sub
mov
dec
fisubs
push
jb
fmuls
loopne
or
lds
mov
dec
mov
dec
sbb
and
mov
mov
xchg
loope
dec
adc
lods
enter
pop
or
and
adc
jae
mov
sub
jb
mov
adc
mov
sub
cltd
jbe
push
pop
mov
dec
aas
dec
inc
dec
aam
daa
cli
or
ss
rorl
ret
movsl
mov
aad
sub
push
xor
aad
test
mov
add
adc
scas
rorb
testl
popf
nop
fwait
dec
dec
in
leave
push
adc
aaa
movsl
cmp
xchg
jb
mov
cmp
fucom
fstpl
jle
mov
lret
mov
insb
orl
lret
sub
mov
push
mov
push
xor
fcomps
js
cltd
mov
mov
loope
jge
sarl
ljmp
in
push
cmc
pushf
cmp
test
rcr
aad
pop
sub
or
aaa
sbb
push
sbb
jbe
enter
mov
or
int
or
sub
inc
stos
test
mov
adc
repz
adc
mov
pop
call
loope
pop
add
daa
bound
and
adc
push
pop
imul
mov
or
fcomp
lods
sub
leave
loopne
inc
mov
fisubs
sti
push
mov
test
into
movb
sahf
ret
fildl
outsl
and
arpl
mov
test
mov
int3
out
cwtl
dec
jmp
inc
cwtl
mov
testb
push
test
mov
test
test
pop
pop
and
daa
inc
jb
mov
ret
sbb
push
pop
pop
insl
mov
adc
xchg
das
in
pop
fwait
rcll
and
jno
push
fucomp
jae
xorl
push
jns
cli
xchg
lahf
sub
push
stos
fs
and
pop
mov
push
push
xor
sub
jl
add
icebp
cmp
arpl
in
inc
lahf
lock
loope
mov
jns
push
cmp
lret
or
mov
mov
addr16
mov
enter
cs
jmp
notb
and
mov
lds
mov
into
add
jl
jl
xchg
int
and
aam
xchg
pop
jae
jmp
inc
mov
inc
or
mov
jmp
das
pop
push
adc
int
xchg
xor
lock
mov
cmc
pop
cmp
fildl
cmp
or
pop
xor
xchg
jnp
scas
add
fs
repnz
shll
ja
xchg
addl
mov
inc
inc
arpl
pusha
or
les
push
insb
mov
xchg
sahf
andl
xor
jmp
pop
aas
or
pop
cmp
imulb
inc
hlt
mov
fcomip
xchg
or
sbbb
mov
cmp
mov
mov
out
xor
mov
push
aaa
rol
pop
sub
ret
cmp
add
cmpsb
sbb
bound
lret
adc
insb
ja
inc
sbb
pop
loopne
shlb
into
js
shlb
sar
movsl
or
mov
dec
and
sub
cld
fs
insb
fcmovbe
or
jp
adc
and
jo
add
ret
fdivrs
jge
movsb
out
cmp
adc
cwtl
jge
dec
fmull
pusha
paddsw
mov
negb
adc
adc
daa
inc
cmpsl
mov
popa
add
loopne
xlat
sbb
jp
stos
jne
sub
dec
dec
adc
push
mov
push
nop
or
lods
xor
test
jno
add
xor
aam
xor
mov
mov
lods
xchg
and
push
jecxz
into
stos
sbb
andb
and
imulb
push
inc
dec
leave
xchg
mov
or
call
and
loopne
or
add
fnsave
sbb
out
shl
add
jbe
push
jge
stos
leave
aas
shl
cmp
lds
add
imul
adc
fwait
mov
lret
jp
jge
jbe
js
mov
pusha
jno
pop
pop
push
in
cmp
js
imul
inc
push
add
aad
aad
jmp
cmpsb
jmp
ss
je
call
xor
add
dec
sarb
sbb
xor
jno
fcmovnb
cld
imul
dec
clc
cld
cmp
mov
mov
adc
adc
scas
movsb
lds
adc
mov
pop
cltd
adc
jbe
out
push
imul
xlat
sbb
pusha
mov
insb
in
cmp
mov
push
cli
movsb
xor
jne
ret
xor
jecxz
inc
inc
mov
outsl
jg
push
bound
mov
xchg
gs
call
orl
push
scas
push
push
sbb
jge
dec
jbe
mov
insl
ret
popa
out
in
push
cli
cmc
cmc
sub
xor
outsl
jno
in
aas
test
push
lods
shrl
jno
ljmp
leave
sub
xchg
inc
push
aas
test
nop
inc
daa
mov
in
sub
loopne
rclb
sbb
in
cmp
or
xchg
mov
and
mov
mov
aas
mov
mov
and
les
adc
mov
mov
sbb
jnp
sub
inc
movsb
call
jnp
mov
mov
ret
lahf
sti
rcr
sbb
lds
cmp
jnp
add
pop
mov
fmuls
sahf
push
xchg
iret
mov
xor
mov
lock
sbb
aaa
je
inc
cwtl
sti
push
or
sub
dec
in
es
test
pop
and
sbb
jb
pusha
js
mov
lahf
mov
ds
fimuls
cmpsb
push
sti
aaa
dec
out
sysret
xor
sub
loopne
aad
fwait
aaa
ret
sbb
outsl
pop
jl
insl
and
das
mov
and
in
js
icebp
xchg
mov
add
jg
xchg
pop
int
lock
in
les
dec
inc
cs
and
sbb
jns
dec
rcll
sarl
fstl
jne
mov
sub
std
popa
jns
dec
or
mov
je
andb
jge
push
jmp
sbb
int
es
inc
mov
mov
push
inc
cmovp
fcmovu
jno
and
and
jl
fadds
popa
pop
in
push
lcall
xchg
dec
ret
sti
ds
cmp
in
sbb
je
xchg
cli
mov
mov
jae
dec
repz
or
jmp
int3
lret
shll
into
int
test
jp
sbb
or
pop
imul
push
mov
shrb
aaa
jnp
mov
jnp
lds
mov
lods
jp
repnz
call
xchg
pusha
jbe
and
cmp
dec
aas
pop
push
inc
fdivrl
mov
push
dec
sub
and
push
sahf
sub
outsl
setl
and
pop
and
bt
jle
xchg
cld
pop
mov
xor
sub
fistpl
in
jl
cld
icebp
ficompl
and
add
push
bound
jb
repz
mov
lods
mov
xchg
rol
fwait
xor
stos
daa
cwtl
and
cmp
leave
inc
lret
xor
ds
sub
pushf
push
lods
loop
or
ljmp
sti
jecxz
inc
sub
cwtl
push
rclb
xor
scas
jp
ret
lods
std
dec
rorl
sub
push
aaa
push
push
adc
or
mov
mov
adc
dec
les
sarb
mov
hlt
shrl
xor
xchg
mov
mov
popa
sbbb
fdivs
sbb
pop
mov
add
and
les
or
jno
jmp
cli
outsl
xchg
xor
jnp
jbe
loope
adc
xlat
sbb
jnp
push
cmp
add
pop
cwtl
sub
hlt
push
leave
cs
mov
pop
cwtl
add
sbb
and
sbb
jo
mov
int3
test
pushf
hlt
mov
jns
jno
popf
inc
inc
or
movsb
mov
daa
lahf
and
cs
data16
dec
rcll
imul
sub
inc
les
cmp
arpl
cmpsl
xchg
mov
bound
out
outsb
pop
xlat
jmp
jae
mov
int
cmp
insb
mov
in
pop
or
fdiv
jnp
xor
or
aam
int
mov
xor
scas
mov
inc
push
jae
adc
push
cmp
leave
adc
push
dec
je
push
rcrl
pusha
pop
outsl
mov
cli
out
data16
push
scas
cmc
cmp
mov
mov
lret
xchg
roll
idiv
push
addr16
jno
push
lods
jl
repnz
test
sub
inc
mov
dec
or
loope
dec
xchg
mov
sub
xor
add
inc
pop
xlat
stos
jne
push
stc
fcomip
gs
sbb
xor
out
incb
cltd
scas
mov
mov
jg
sbb
shlb
int
sysenter
or
adcb
psllq
add
xor
out
adc
in
mov
in
jmp
je
push
xlat
xchg
movsl
int
in
fstpt
push
cld
aam
dec
jnp
xchg
subl
cmp
addr16
add
mov
adc
adc
stos
andb
movsl
orl
lret
lret
sbb
inc
sub
repz
les
ret
or
shrb
inc
jb
jl
lock
mov
fsts
in
insl
add
arpl
cmpsb
inc
pop
add
mov
add
mov
mov
cmp
lret
mov
mov
ss
sarb
jne
mov
cmp
xor
xlat
push
xor
aas
ret
call
fidivrs
pop
mov
or
pop
mov
or
pop
xchg
sub
aas
cmp
xor
add
icebp
cmc
add
push
push
pop
fldl
out
mov
in
mov
lods
jo
inc
cltd
call
cmp
clc
rorl
lds
lods
subb
shlb
out
push
aas
lret
push
mov
repnz
push
cmpl
arpl
sub
push
pop
imull
jo
mov
mov
jns
test
xchg
aaa
sbb
jecxz
out
aam
aaa
enter
mov
mov
test
and
mull
inc
adc
out
inc
adc
into
cli
inc
jp
fisubrs
les
xchg
pusha
cmp
popf
pop
xor
enter
or
adc
push
popf
ficoms
xor
test
fstp
cmp
nop
push
fcomip
out
jo
dec
mov
mov
dec
inc
adc
lock
fwait
rol
inc
push
ret
pop
inc
push
xchg
inc
in
sbb
sub
xchg
aaa
add
dec
pop
cmp
cwtl
repnz
mov
cmpsl
aaa
fucomip
jp
or
movsl
clc
mov
jecxz
adc
dec
int
mov
icebp
addb
cmp
xchg
or
mov
lock
stc
je
xchg
cmc
xchg
pusha
fisubrs
int3
sub
xchg
loop
and
rorb
mov
jnp
loope
jnp
and
into
xchg
add
cmp
mov
ror
popf
loope
xchg
test
jge
pop
int
bound
fcoms
loop
xor
mov
add
sub
cli
enter
mov
or
push
xor
push
or
xor
cmp
je
out
mov
and
dec
push
in
in
push
dec
add
push
pop
movsb
mov
cmp
push
pusha
negb
or
iret
xchg
add
lds
push
inc
sub
sub
cmp
clc
dec
sub
inc
sub
or
sarb
fwait
mov
inc
in
sub
sbb
cmp
sbb
and
inc
push
sbb
pop
mov
and
fwait
xchg
addr16
leave
add
jmp
stos
orl
xor
cmc
mov
dec
push
mov
and
sbb
repnz
test
imul
dec
mov
shrb
add
dec
stos
test
mov
cmp
flds
mov
clc
pusha
dec
push
ljmp
test
sub
mov
xchg
inc
sub
push
inc
scas
subl
mov
es
and
mov
sti
sbb
mov
loopne
fnop
iret
in
or
fdivrs
lock
sahf
jge
ds
sub
pop
shll
loopne
push
push
repnz
push
add
xchg
inc
mov
leave
shll
sbb
movsl
cli
movsl
cmp
or
out
gs
pop
leave
adc
xor
fsubl
shl
inc
cmp
sub
ret
mov
cmp
aam
ffreep
xor
repz
push
iret
add
jbe
mov
pusha
cmp
add
cmc
mov
mov
xlat
cmc
dec
sbb
out
dec
inc
xchg
shl
sub
dec
mov
push
fldcw
stc
sbb
pop
stc
mov
jb
leave
loop
hlt
fnstcw
jbe
jp
jbe
mov
adc
mov
fldl
jo
cli
and
lret
repnz
mov
push
lahf
in
rorl
xor
dec
gs
push
aas
out
clc
subl
mov
outsb
dec
aas
std
or
add
mov
orb
out
jg
mov
pop
testl
mov
ret
cli
je
pop
mov
jno
mov
or
mov
dec
adc
aad
adc
pop
je
and
mov
bnd
mov
xchg
and
pop
jg
inc
mov
repnz
pop
cwtl
fmul
out
enter
and
adc
mov
sbb
loope
inc
les
cmc
pop
lahf
jbe
arpl
aad
in
jge
hlt
aas
mull
fisubrl
inc
aas
sbb
push
lods
in
in
test
mov
dec
fwait
shl
add
xlat
and
or
jo
inc
pop
test
mov
mov
add
or
cs
mov
pop
mov
pop
test
mov
adc
int
shrb
shr
or
cmp
jle
es
jle
dec
mov
mov
shr
xor
mov
ss
test
pop
idivl
lret
mov
sub
test
mov
sbb
mov
mov
in
push
lahf
push
lcall
outsl
cmpsb
xor
ja
cmp
test
es
sbb
test
mov
xchg
mov
aaa
stos
dec
sub
mov
and
test
mov
push
pop
in
popf
mov
lahf
jb
sar
jbe
ja
rclb
les
or
and
mov
and
sbb
jne
mov
cmp
test
xchg
mov
jl
adc
popa
dec
sbb
lods
stos
shrl
adc
rcrl
mov
push
scas
add
lock
data16
into
out
iret
sbb
pop
ret
outsl
loope
mov
fistpl
jp
ficomps
sahf
cmpsb
cld
sbb
dec
adc
sbb
inc
mov
cmp
and
sbb
xchg
xor
sar
push
arpl
out
xor
xor
stos
clc
stc
add
in
fcompl
aam
int3
in
mov
leave
mov
sub
ss
ss
test
pop
test
jecxz
pop
sbb
push
sub
and
add
inc
dec
jmp
push
mov
jg
and
or
outsl
add
ss
or
cmp
aad
inc
or
mov
inc
xchg
mov
mov
dec
in
loope
push
add
fsubs
xchg
push
neg
mov
dec
and
rcrb
pop
push
add
orb
add
into
fisttpll
leave
loopne
fcomip
imul
mov
push
fdivl
dec
outsl
jecxz
mov
adc
sbb
pop
imul
stos
push
xorb
xchg
sbb
loope
mov
cmpsl
cltd
or
jne
sub
sbb
aas
lods
or
sub
cmp
jae
sub
mov
dec
sub
pop
scas
and
rorl
jle
push
aam
or
pushf
fld
clc
movsb
mov
mov
adc
faddl
incb
sub
cmpsb
shl
push
jns
cwtl
xor
and
aas
and
mov
inc
ljmp
push
pop
mov
pop
div
call
mov
ret
push
sub
xchg
mov
jns
test
orb
xor
stc
iret
and
scas
jno
lea
inc
xor
push
icebp
sbb
rorl
scas
bound
jmp
push
int3
test
jns
stos
and
inc
and
mov
decl
xor
xchg
cmp
mov
popaw
movb
adc
mov
lods
insb
adc
mov
pop
nop
in
icebp
pushf
out
jne
sbb
add
add
out
jb
test
dec
call
mov
push
inc
cld
mov
sbb
push
push
fisttpl
mov
in
imul
or
mov
pusha
add
and
jns
stos
test
mov
xchg
pop
sti
rorb
fsubp
mov
lahf
adc
mov
adc
xchg
iret
das
mulb
mov
xor
push
in
dec
mov
mov
cmp
push
and
ds
jmp
cld
cmp
mov
adc
mov
notl
scas
loopne
xor
repnz
cmp
lods
jmp
aas
push
dec
insl
jae
loopne
cmp
sub
xchg
movsb
cmp
adc
dec
jge
mov
xor
shll
sbb
icebp
sub
dec
das
xchg
iret
dec
add
fnstsw
lea
insb
insb
lods
push
sub
jnp
movb
je
push
test
add
cmpsl
loop
mov
push
push
push
add
rolb
jecxz
loopne
insb
lret
lret
out
fildl
xchg
fdivrs
fscale
test
push
int3
sbb
dec
mov
mov
shll
push
push
and
mov
push
call
xor
bound
push
ds
popa
jns
push
cmpsl
mov
fsts
fadd
mov
or
pop
daa
mov
push
clc
push
and
xchg
adc
lods
cmp
frstor
xchg
addl
xchg
ret
mov
or
mov
outsb
and
rol
pop
pop
pop
pop
and
aas
dec
inc
in
pop
inc
enter
cmpsb
cmp
subb
data16
jbe
mov
loope
cmpsb
cmpb
xor
dec
cld
sar
stos
das
int3
inc
lret
xchg
aas
icebp
pop
test
or
int
and
adc
adc
stc
inc
cmp
or
cmp
jne
push
adc
adc
pop
cli
mov
cmp
fisubs
push
addr16
jg
orl
mov
iret
xchg
xchg
mov
xor
mov
test
lret
inc
push
jns
xchg
arpl
jae
jle
jl
xchg
cmp
insl
inc
cmp
stos
xchg
add
jbe
xchg
pushl
cwtl
xchg
and
and
ret
mov
and
push
push
xchg
mull
lret
cld
xchg
fsub
add
and
mov
mov
xor
fwait
cmp
mov
in
lods
loop
faddp
iret
lret
sbb
jmp
movsb
dec
call
int
stc
test
jo
push
jo
xchg
or
push
adc
inc
xchg
fwait
and
ret
aam
mov
test
sbb
in
mov
insb
sub
mov
push
lcall
sub
adc
pop
lds
xchg
pop
imul
mov
leave
popa
inc
popa
push
xchg
repz
push
imul
or
add
in
addr16
ljmp
and
and
jns
add
sbb
mulb
popa
movsl
in
popf
shl
pop
jns
popf
std
pop
inc
or
test
jae
pop
gs
js
lock
sahf
gs
stos
jb
cld
jl
int
dec
sbb
or
push
pop
adc
and
pusha
adc
call
adc
pop
scas
sbb
mov
and
inc
adc
xchg
mov
jmp
push
leave
sub
sbb
fs
mov
jge
push
mov
sbb
imul
inc
xchg
push
adc
fnstsw
arpl
into
xlat
xchg
jl
int3
ss
pop
lret
out
shr
mov
cmp
push
inc
push
and
xchg
dec
adc
pop
mov
inc
and
push
mul
jl
pop
repnz
pop
fwait
icebp
lods
sub
aas
and
adc
out
push
rclb
push
stos
mov
fscale
and
inc
aad
jb
xchg
mov
and
mov
xchg
mov
in
aad
imul
push
inc
add
loop
stos
mov
and
in
fildll
mov
das
push
push
stc
jbe
and
mov
dec
dec
pop
jno
pop
stos
mov
sahf
rorb
stos
pusha
push
adc
inc
leave
xchg
sub
leave
push
fisubl
shl
shll
repnz
push
insl
mov
in
pop
mov
cmp
and
shll
flds
or
mov
jmp
xchg
popa
aad
movsl
das
cmp
lahf
jg
inc
stos
sahf
std
cmp
inc
ja
lock
stc
lods
lahf
sbb
scas
out
dec
jbe
shlb
jb
jnp
pop
mov
roll
sbb
imul
cmp
in
lcall
jae
jb
fisubl
add
inc
dec
adc
push
jo
sub
jmp
and
pop
incb
mov
out
jo
ds
test
xchg
mov
xchg
sbb
xchg
sahf
lea
add
mov
and
insl
and
pushf
jns
stos
call
add
aam
xor
cwtl
aas
imul
mov
push
push
sub
jno
xor
loop
and
popa
ds
inc
sarl
mov
push
push
push
lock
dec
aaa
stos
fdivl
xchg
arpl
cs
cmp
cmpsl
pop
mov
stos
mov
fistpll
stc
mov
xor
call
add
shr
mov
add
mov
decl
cs
sub
mov
shlb
adc
cmpsl
push
xchg
cmp
pop
lea
rcrl
jae
aam
mov
scas
cmc
pusha
test
je
push
xchg
aad
dec
sarl
jne
imul
arpl
sbbb
imulb
cmp
shll
pop
xor
mov
push
add
pushf
mov
jg
nop
lds
stc
ret
cmc
es
pop
add
into
xlat
dec
xlat
stos
inc
and
sub
movsb
mov
pop
stc
out
inc
scas
push
stc
cmpsl
dec
out
aad
addb
mov
inc
cmc
jg
sub
xchg
dec
sub
cs
testb
inc
xchg
in
add
fimuls
fs
fsubs
and
push
xor
lcall
lret
dec
filds
dec
or
push
fincstp
pop
mov
sub
push
dec
add
jo
subl
mov
xchg
mov
xchg
stos
xlat
inc
pop
cmp
jb
fiaddl
dec
das
and
popf
adc
fcmovnb
mov
nop
or
enter
js
ds
loopne
xlat
pop
inc
aaa
mov
push
cmp
in
pop
jno
pop
mov
fwait
push
subl
pop
cld
pop
mov
shll
lods
push
dec
inc
cltd
loopne
jmp
inc
inc
and
cld
fldl2e
xlat
test
pop
mov
or
test
sbb
and
pusha
out
pop
aad
pusha
xchg
lahf
outsl
jl
mov
sub
sbb
ljmp
cmc
or
rcll
mov
insb
and
adc
add
mov
sub
sarl
sbb
add
out
pop
pop
decl
jo
cs
sbb
add
or
bound
push
pop
or
stc
cmpsb
sbb
int
inc
scas
cmpsb
inc
addr16
sbb
shll
mov
sub
out
push
push
xchg
inc
pop
mov
js
adc
add
or
jge
popf
jnp
jae
sub
sub
dec
test
dec
pop
sbb
mov
data16
stos
jae
pop
or
inc
repz
cltd
or
jge
in
sbb
inc
pop
pop
rcrb
mov
call
stos
ja
lods
out
ret
aas
leave
or
ljmp
mov
orl
mov
mov
xchg
mov
aas
sub
aaa
pop
testb
cmp
cmpsb
shlb
xchg
and
add
and
xchg
loope
jmp
add
sbb
cmp
jmp
cltd
ret
cli
xchg
stc
dec
insl
adc
mov
sub
cmp
test
insl
scas
mov
and
sub
nop
subl
pop
stc
xor
fdivrs
cmp
mov
pushl
fstpl
cmp
adc
xor
mov
pop
rcll
cmpsl
pop
add
and
adc
loopne
xchg
fwait
and
or
xor
fimuls
jnp
clc
fisubs
sub
mov
test
int3
jecxz
add
and
cs
pop
cmc
iret
cwtl
mov
pop
mov
aam
cmc
push
jo
adc
addl
leave
lea
daa
movsb
lahf
es
pop
outsb
sub
je
xchg
jl
shlb
sbb
jp
ss
pop
in
scas
ret
jae
mov
lahf
dec
jle
xchg
and
inc
xor
imul
bound
sub
insb
lahf
adc
ljmp
mov
push
addr16
jo
cmp
mov
inc
dec
mov
insl
jae
push
aaa
mov
inc
jp
pop
cmp
adc
mov
xor
aas
repnz
sbb
arpl
push
iret
mov
dec
rcl
loop
fdivrs
sahf
xor
xrelease
adc
xchg
jge
sbb
cmpsl
es
std
sub
sub
jo
pop
mov
ret
loop
adc
sti
pop
jp
insl
es
lods
push
roll
aam
sbb
sbb
sub
insb
data16
dec
movsb
cs
mov
and
insl
cli
pop
cmp
cli
or
dec
test
push
inc
inc
or
out
or
xchg
outsb
leave
enter
loopne
adc
rcl
inc
mov
cwtl
lods
push
pop
imul
mov
push
push
mov
push
jmp
cld
mov
cmc
pop
rorb
sub
fmul
adc
dec
lea
out
subl
mov
inc
js
xchg
push
cmp
mov
mov
jo
fsubrs
add
adc
cmp
sahf
cltd
dec
mov
add
loop,pn
enter
gs
imul
push
sub
lahf
fistpl
xchg
insb
adc
mov
pushf
imul
out
test
mov
or
fbld
push
jmp
and
sbb
jbe
mov
lahf
loope
jo
and
mov
xlat
std
jle
scas
aas
cltd
jmp
push
aas
sub
sbb
pop
jno
lret
sarb
repnz
xlat
jg
push
inc
rcl
inc
or
inc
pushf
lret
mov
mov
idivl
jne
lods
loopne
lods
add
popf
inc
jmp
cs
cli
or
pop
fwait
test
fcmovu
mov
ret
mov
mov
hlt
pop
stc
shlb
mov
push
in
rcr
popf
bound
call
add
cmp
mov
decb
inc
inc
mov
ds
jno
pop
inc
dec
mov
rcrl
pop
notl
pop
js
in
fwait
int
int
fidivrl
cmp
int3
inc
lret
mov
in
pop
jge
filds
test
hlt
xchg
insb
int
ds
push
test
into
stos
adc
test
cwtl
lret
bound
dec
and
movsl
pop
mov
add
xor
jge
jl
mov
ss
repnz
pop
cmp
les
out
xlat
fidivrl
int3
mov
sbb
jge
test
hlt
mov
mov
enter
cmp
mov
insb
pop
int3
push
sub
mov
jo
mov
xor
push
xlat
lds
jo
sub
mov
aam
and
xor
mov
xor
adc
cmpsl
icebp
cwtl
mov
xor
cli
scas
fidivrl
or
sub
pop
enter
js
sub
daa
nop
cld
mov
xchg
sub
loopne
mov
bnd
mov
pop
xor
call
test
into
cwtl
cmp
out
and
or
enter
inc
push
xor
faddl
cld
pop
je
ljmp
fnsave
inc
in
lcall
pop
mov
cs
xor
cld
add
sar
inc
and
or
jns
sub
dec
sbb
sub
sub
dec
cmp
inc
cmp
sbb
ds
jnp
push
dec
push
rcr
adc
les
movsl
dec
cmp
test
xor
cli
dec
adc
hlt
push
mov
gs
mov
dec
fnstsw
shl
xchg
jecxz
push
dec
enter
push
int3
push
imul
or
adc
lea
push
adc
mov
sbb
jp
out
mov
icebp
jl
xchg
lret
cli
mov
push
shll
testb
outsl
xor
xor
ja
sub
mov
add
jg
lds
out
xor
and
mov
insb
or
daa
mov
dec
jp
inc
pop
movsb
scas
mov
jnp
inc
push
adc
dec
sbb
test
in
std
ljmp
ds
adc
mov
mov
push
add
adc
in
in
into
lcall
shrb
pop
sbb
dec
xor
cmp
pop
add
xchg
inc
loope
rclb
daa
mov
mov
mov
in
pop
fs
add
nop
xor
jmp
push
mov
and
add
mov
cmc
dec
mov
jl
loopne
mov
scas
bound
lret
xor
call
mov
mov
or
aas
xor
push
mov
addb
fiaddl
jb
mov
mov
repz
insl
lods
movsl
stos
hlt
mov
xchg
fsts
rorb
add
out
mov
cmp
mov
sar
hlt
or
jge
xchg
or
push
cmp
jae
push
and
push
je
sub
xorl
fs
mov
sbb
dec
mov
bound
sbbb
cmp
rorb
pop
mov
xor
xchg
movsl
in
test
xor
jns
push
rorb
dec
cmpsl
adc
jle
aad
ret
cmpsb
and
in
jae
sbb
sbb
pop
xchg
aam
out
inc
mov
sti
cmp
push
bound
sub
dec
or
adc
mov
sub
fildll
jno
shrl
movsl
pop
outsb
nop
mov
mov
inc
and
sbb
cmp
pop
dec
mov
scas
xchg
imulb
movsb
sub
or
aam
jecxz
dec
xor
rcll
pop
fmuls
ret
rorl
jb
mov
mov
dec
outsb
sbb
add
inc
push
sbb
repnz
and
mov
out
leave
and
mov
pop
jle
or
mov
fnstenv
sbb
jnp
fwait
lea
cmp
outsb
aad
dec
in
cmp
inc
aas
jnp
mov
add
mov
lea
cld
fsts
cmp
xchg
ljmp
fdivl
dec
sbb
daa
sbb
pushl
push
cmpl
cmc
shlb
mov
bnd
mov
loopne
call
repz
ja
sbb
pop
or
fistpll
mov
bound
add
aam
inc
or
push
cmp
xor
pop
xchg
mov
test
add
hlt
push
rclb
push
sahf
mov
and
popa
bound
jne
int3
and
mov
xor
push
xchg
adc
subb
cmp
fwait
stos
fabs
push
js
mov
pop
and
add
sahf
jge
call
xor
icebp
mov
ds
mov
mov
dec
lret
sbb
fbld
shll
mov
add
int
or
dec
sbb
mov
out
lahf
leave
js
fadds
je
push
adc
js
adcb
jg
and
lds
push
dec
fsubrl
jne
es
or
insb
imul
add
repnz
xor
imul
test
movsl
roll
sahf
push
std
jbe
mov
fdivrp
negl
inc
inc
sbb
add
mov
pop
add
pop
add
lds
pop
inc
in
push
pop
outsb
daa
enter
sahf
scas
gs
das
loop
dec
mov
sbb
xchg
shll
add
jge
mov
rclb
loopne
and
fidivs
add
push
pop
fcompl
psllw
call
mov
adc
inc
lods
mov
ret
cs
shrb
push
cmp
xchg
test
mov
sbb
fchs
push
adc
pop
popa
xchg
add
sbb
inc
pop
int3
add
inc
xor
test
xchg
xchg
jnp
mov
aad
inc
bound
shrb
loop
loop
cmp
mov
pop
dec
pop
push
xor
mov
movsb
add
and
aas
mov
jne
mov
out
dec
fcomps
mov
in
call
imul
push
clc
movsb
xchg
out
add
mov
push
sub
adc
mov
dec
fstl
cmp
aaa
jbe
mov
add
or
inc
xor
out
popf
out
sbb
movsb
pop
test
add
jne
iret
popa
xor
cmp
sub
mov
adc
push
push
and
cmp
movsl
add
aaa
imul
xchg
mov
add
mov
aas
mov
push
push
fwait
repnz
pop
push
dec
cmp
mov
dec
les
cmpsb
ret
cmc
lea
sbb
addl
xchg
addr16
shlb
jno
shl
andl
lret
dec
clc
lret
jnp
sub
out
scas
fstpl
add
andl
sub
rcrb
dec
mov
mov
pushf
xchg
shrb
outsb
pop
jmp
lods
mov
cmp
daa
mov
add
scas
push
insb
xchg
mov
sbb
sbb
mov
or
out
sub
aaa
ljmp
fwait
repz
dec
es
mov
xchg
movsb
subl
cmp
cmpsl
sti
aas
rclb
ljmp
or
aaa
loopne
push
cmp
pop
inc
sbb
sbb
jo
cmp
aaa
gs
xchg
sar
jno
or
sub
in
pop
mov
adc
in
fcoml
cmp
push
bound
mov
int
aaa
cmp
xchg
pushf
mov
into
pop
nop
mov
mov
inc
jnp
inc
jmp
aaa
mov
pusha
fnstcw
sbb
leave
out
stos
dec
scas
lret
mov
stos
mov
push
xor
aaa
mov
push
aam
rclb
inc
cltd
sub
adc
sub
xchg
sub
aaa
push
dec
mov
rol
movsb
les
in
xor
rcr
or
fisubrl
lea
fnstcw
scas
jp
mov
orl
push
jns
lock
jbe
inc
ret
js
mov
decb
xchg
popf
out
pop
scas
aaa
pop
or
cmp
popa
pop
clc
imul
pop
pusha
mov
mov
pusha
mov
insl
push
fldl
push
and
call
push
aas
and
adc
pop
ljmp
and
stc
cmp
mov
rcrb
pop
mov
cs
cltd
fcom
testl
mov
pop
mov
int3
in
dec
xchg
mov
pop
cmpsb
lcall
dec
call
daa
ret
lds
movsb
push
sar
xor
mov
inc
mov
mov
movd
loope
sub
sbb
lods
sbb
lods
mov
xor
fwait
jb
addr16
push
out
movsb
xor
xchg
pop
lods
push
and
adc
insl
int
mov
sub
orl
lea
pushf
fdivl
dec
and
mov
pop
scas
xor
cmc
call
enter
hlt
stos
adc
mov
shrl
aaa
imul
pop
adc
or
mov
ret
scas
test
mov
ret
or
dec
pop
pop
or
jp
nop
js
xchg
push
pushf
cmpsl
xchg
pop
lret
lret
iret
stos
jnp
cmp
mov
rclb
pushf
xchg
in
or
push
sbb
les
jae
xor
sahf
mov
imul
adc
data16
sub
or
rorb
add
mull
or
or
hlt
mov
dec
lret
sub
shrb
push
popf
mov
push
mov
jecxz
in
inc
mov
flds
push
push
addr16
jl
mov
das
neg
mov
mov
dec
or
add
jl
jl
shll
inc
rolb
mov
mov
imul
inc
lcall
leave
bound
inc
scas
shll
push
adc
imul
ficoms
jmp
jecxz
jns
mov
pop
dec
repz
add
ficoms
sahf
pop
pop
xchg
sub
int3
lret
hlt
fucomp
xchg
push
cld
mov
fldl
sbb
xor
xlat
mov
pop
and
rcr
ds
mov
sub
mov
enter
es
fwait
ja
movsl
lret
sub
nop
enter
sub
mov
lea
shll
fimull
dec
and
xor
out
pop
je
insl
cmc
stc
dec
xchg
dec
outsb
dec
pop
or
pop
inc
pop
out
cmp
inc
dec
sti
mov
pop
loope
push
pop
mov
jp
inc
sub
push
mov
jl
ss
fnsave
mov
lds
out
jecxz
mov
xchg
mov
or
sbb
sub
sbb
data16
mov
jge
dec
stos
orl
mov
pop
test
lahf
out
mov
pop
lret
cmp
jno
adc
loopne
push
and
mov
inc
ds
cmp
and
xor
vmovhpd
xchg
cld
dec
cmp
sahf
jp
sbb
pushl
mov
inc
xchg
jo
dec
test
and
hlt
mov
cmp
add
call
out
sbb
cmp
mov
stos
shrl
jmp
orb
jmp
daa
orl
stc
loope
cmpsb
add
push
call
and
cmp
jae
cmp
lret
sbb
push
mov
mov
push
mov
inc
sbb
dec
mov
stos
iret
add
dec
sub
cwtl
push
push
sbb
les
sub
repz
xor
dec
mov
xor
adc
mov
cmp
fs
das
mov
pop
popf
icebp
jle
push
cmp
aas
lods
cld
stc
add
xor
xchg
pop
fs
pop
dec
cmc
push
lahf
insb
shld
xchg
pop
pop
fcoms
stos
in
or
pop
subb
fiadds
jmp
rclb
mull
inc
push
pop
inc
pop
xlat
movsl
daa
faddl
roll
movsb
xor
scas
cmpsl
sbb
outsl
popf
dec
mov
jle
cmp
aas
lea
stc
push
push
pusha
es
stos
or
sbb
xor
sbb
xchg
or
push
pop
push
mov
pop
xor
insb
fcompp
dec
js
xor
out
and
aam
in
push
cmp
lock
push
push
mov
test
sbb
andl
or
daa
cmpsl
or
cmp
leave
and
adc
cs
daa
add
pop
dec
les
mov
sbb
mov
in
fnstsw
jb
push
lods
add
ss
fisttps
xchg
imul
out
push
mov
stc
ds
test
mov
lahf
cmp
lret
xor
or
inc
loopne
scas
les
imul
dec
push
jl
repz
scas
mov
lcall
sarl
pop
push
call
fsubs
add
pop
out
jg
jae
arpl
jb
shrl
out
sbb
cmp
leave
xor
cmp
in
ljmp
inc
aas
pushf
cwtl
mov
sbb
jno
dec
pop
jg
cld
fwait
push
inc
lods
shll
lock
sub
jmp
daa
in
pop
adc
addb
lea
rolb
inc
pop
pop
leave
pushf
arpl
loop
inc
xchg
in
mov
fistps
cmc
fnstsw
add
xor
lret
push
sbb
jp
out
das
int3
in
fistpl
bound
std
mov
lcall
pop
sahf
lahf
scas
stos
mov
inc
inc
inc
int
jbe
repz
push
pop
push
sbb
and
or
mov
mov
pop
movsl
out
addr16
lods
dec
je
and
xlat
xchg
nop
push
movsl
ljmp
in
into
jnp
add
sarb
jo
cli
stos
inc
popa
rorl
leave
or
add
inc
push
inc
dec
jmp
inc
sti
mov
in
pop
or
stos
add
sub
mov
inc
in
data16
pop
adc
lret
mov
adc
in
out
insb
mov
sub
ja
call
jg
pop
decl
int3
lretw
push
cli
out
push
or
xchg
inc
sub
inc
sub
roll
jmp
popa
lds
out
imul
fcoms
add
or
jae
xchg
jecxz
dec
fadd
jle
mov
mov
mov
add
push
push
test
call
pop
imul
aas
lds
in
ss
adc
mov
push
or
sahf
mov
inc
xchg
sti
mov
mov
std
xlat
pop
outsl
xor
icebp
or
sbb
shrb
ret
popf
call
and
out
add
negl
fadds
push
xor
imul
mov
movsb
jg
gs
loop
and
arpl
jge
jns
fisubs
outsl
fsubl
push
in
lahf
enter
sbb
mov
cwtl
int
mov
movl
xor
inc
jle
ret
push
icebp
xchg
sub
sbb
and
cmp
aas
mov
jg
jae
mov
push
lock
test
jl
out
test
je
loope
pop
add
enter
xorl
mov
leave
subb
pop
icebp
and
repnz
mov
pop
mov
idiv
mov
xchg
loop
mov
jne
cmp
arpl
inc
out
push
mov
arpl
stos
push
and
cli
das
mov
pop
dec
in
mov
adc
lahf
addr16
repz
push
push
mov
fwait
inc
inc
sbb
xchg
or
adc
push
andl
mov
data16
or
flds
jmp
cmp
dec
mov
inc
popf
jb
xchg
mull
adc
ja
iret
rclb
bnd
popf
insl
dec
xchg
scas
adc
cmp
shll
bound
call
rol
push
int3
fidivl
subb
loop
fildll
das
lahf
subl
sbb
mov
dec
pop
mov
inc
mov
push
and
outsl
iret
pop
cmpl
mov
je
out
or
add
outsl
or
cmp
mov
or
lock
pop
mov
fsts
jne
pusha
fst
ret
push
or
je
fildll
mov
or
or
lret
xor
pop
shlb
mov
jnp
push
ret
lds
inc
inc
in
cmp
es
push
adc
int3
inc
xor
mov
mov
insb
mov
jp
jnp
rcrb
xchg
je
dec
mov
fcoms
mov
std
mov
fidivl
out
ret
push
and
mov
add
pop
pop
mov
int3
and
xorl
sub
ja
fwait
xor
pop
and
inc
fs
das
sbbl
cmp
mov
xlat
xchg
call
in
dec
enter
lahf
adc
push
push
loop
jle
test
test
inc
pop
jae
int
jg
and
mov
dec
pop
and
test
mov
pop
xchg
or
dec
sbb
arpl
push
ja
popa
sbbl
mov
loopne
dec
push
mov
sbb
pop
int3
xchg
xchg
sti
fidivrl
adc
fstpt
ja
movsl
cwtl
xchg
rorl
mov
fnsave
xor
dec
sbb
lret
mov
stos
icebp
lods
xchg
cs
sub
sbb
xchg
into
jnp
xchg
sahf
cmpsb
adc
hlt
push
cli
daa
mov
push
and
dec
and
mov
jne
mov
dec
outsb
popa
add
imul
adc
dec
cmc
adc
pop
stos
push
sarl
test
mov
inc
nop
lods
jo
pop
cmpsl
push
jno
jle
push
scas
and
addr16
stos
adc
int
je
adc
push
sti
sub
dec
movsl
push
dec
stos
jae
or
dec
xchg
out
clc
aas
mov
xor
xlat
mov
lahf
enter
clc
mov
inc
sahf
xor
stc
xchg
ret
cmp
inc
addr16
lock
and
in
int
adc
ret
xchg
xchg
shrb
sbb
fldcw
jmp
repz
push
adc
es
push
lcall
sbb
js
add
jl
out
rcl
cli
add
sub
push
out
inc
push
scas
xchg
lds
bound
loop
icebp
loop
rcrb
cs
test
subb
aas
insb
jo
repnz
movsl
mov
xchg
mov
dec
pop
imul
inc
data16
ret
push
add
xor
sbb
call
sub
adc
mov
stos
in
out
test
scas
and
xor
pop
sub
jo
sbbl
sahf
and
imul
xor
mov
cmp
adc
decl
or
push
outsl
inc
push
addr16
push
or
mov
cmpsl
movl
xchg
jnp
inc
inc
dec
push
dec
adc
fwait
imul
inc
lahf
add
or
arpl
test
in
sahf
jg
dec
cwtl
scas
jge
cwtl
test
xchg
test
or
bound
adc
adc
ret
push
mov
cmp
xchg
and
dec
pop
movsb
sub
in
ret
xchg
loope
inc
pushf
cwtl
jmp
mov
dec
jne
xchg
sub
cmp
clc
and
push
js
andb
andl
fwait
mov
cwtl
mov
xor
and
mov
lcall
xlat
push
hlt
nop
mov
mov
mov
mov
xchg
sbb
cmpsb
lods
sar
sbb
clc
sub
es
into
ds
push
inc
repz
lods
gs
loope
xchg
shll
in
jle
jle
mov
sub
dec
push
push
testl
mov
push
std
mov
mov
ficoml
jns
je
sbb
ficomps
inc
in
pusha
adc
push
imul
mov
xchg
int
test
or
addr16
movsb
ljmp
mov
int3
xor
loope
xor
arpl
jle
arpl
jae
xor
je
or
push
and
mov
shr
push
push
xor
mov
mov
and
mov
jecxz
inc
addl
sub
adc
shll
jmp
pop
pushf
lods
bound
sbb
mov
mov
cmp
dec
xchg
push
and
and
daa
and
dec
jmp
push
jg
pop
pop
adc
add
or
xchg
adc
xor
insl
ja
test
test
loopne
cmp
je
nop
inc
push
mov
mov
push
je
lahf
inc
fdivrs
sarl
in
test
xchg
inc
aas
pop
cmp
out
or
insl
push
add
mov
push
sbb
movsl
subb
lds
inc
jns
push
cmpsb
fisttps
mov
fnsave
inc
scas
jecxz
adc
out
add
and
popa
inc
repnz
std
fs
out
sti
shrb
adc
cmp
ds
sbb
outsb
mov
mov
sbbl
test
inc
push
addr16
xchg
dec
inc
cmp
test
fistpl
les
inc
push
or
ljmp
test
shrl
xchg
inc
repnz
add
fistps
lret
fcmovbe
aas
jb
cs
sbb
sub
push
repnz
inc
cld
les
lock
cmpsl
jle
fnstenv
fwait
or
xchg
loop
add
pop
jo
push
push
cmc
sbb
das
dec
mov
scas
mov
dec
das
add
repz
push
pop
in
in
ficoml
push
test
shll
xchg
je
fistpl
inc
imul
aad
push
data16
mov
outsl
xor
enter
loope
sahf
jnp
pop
xchg
jg
test
mov
add
movsb
sub
aad
les
xchg
push
push
jne
mov
pop
scas
lret
fnstsw
cwtl
xchg
or
cmp
sbb
nop
mov
aas
arpl
cmpl
mov
push
adc
inc
mov
movl
cmp
lahf
adcl
mov
aad
mov
mov
cmp
cli
lret
adc
push
enter
inc
and
stos
lret
jge
add
sub
dec
inc
scas
rcrb
fwait
int
or
sbb
jecxz
push
popa
mov
mov
cmp
sbb
dec
ljmp
nop
pop
pop
cltd
loope
pusha
inc
jb
add
lods
call
push
mov
push
xor
std
div
jecxz
jb
and
pop
or
orb
sub
bound
add
mov
mov
xchg
jbe
adc
test
cmpsl
sub
daa
inc
das
leavew
xchg
das
rol
clc
jge
clc
popf
pop
add
or
adc
push
insb
movsb
pop
fiaddl
movsb
repnz
mov
sub
ffreep
cwtl
js
and
movsb
mov
sti
in
lcall
in
jb
iret
call
dec
xchg
mov
out
dec
jbe
imul
add
or
mov
pop
addb
dec
mov
daa
and
and
mov
aam
pushf
notl
inc
fmul
addl
and
cwtl
and
mov
mov
lcall
sub
mov
fisubrl
jmp
pop
inc
jle
aas
mov
sub
repnz
cs
ja
out
sbb
mov
loopne
arpl
push
xchg
out
scas
in
add
push
xor
mov
in
popl
pop
push
xchg
fs
fadds
inc
jns
jne
test
sbb
add
int3
fidivrs
loope
ficoml
xchg
push
int
mov
sub
cs
stos
arpl
inc
hlt
outsl
mov
jmp
jge
or
jp
cwtl
enter
xor
xchg
pop
adc
adc
add
mov
sbb
sbb
sbb
test
adc
pop
xchg
add
xchg
jge
repz
sub
fildl
fcmovnu
cmp
lret
adc
jl
ss
or
lds
inc
lret
mov
sbb
jp
lds
fsubs
mov
adc
fldt
jl
push
jp
adc
pop
cmp
testl
int3
repnz
mov
insl
lods
loopne
ror
adc
jns
cltd
xchg
pop
xchg
mov
mov
xor
mov
add
stos
mov
xchg
add
jecxz
push
popf
mov
pop
ret
inc
aad
addr16
shll
fdiv
pushf
jg
mov
push
dec
dec
inc
negl
xor
movsl
push
enter
es
leave
mov
push
lret
or
jle
sub
add
mov
es
jb
pop
aas
sti
ret
push
call
test
and
and
call
jp
insb
xchg
sti
notl
insb
dec
out
adc
repnz
mov
xor
inc
test
cs
mov
aad
mov
cmp
leave
push
dec
ss
mov
xchg
loop
push
inc
clc
xchg
movl
in
imul
lahf
push
fildll
sbb
aaa
inc
mov
xchg
outsl
jns
jnp
in
push
scas
pop
jne
cmp
out
in
dec
stos
inc
repz
movb
cmpb
lret
repnz
and
sub
fisubrs
les
mov
arpl
hlt
cmpsl
sub
cmp
movsl
out
imull
mov
jb
xor
stos
pop
popf
jmp
aam
lods
mov
mov
sbb
fimull
jo
loop
in
orl
or
ret
adc
mov
loopne
inc
jns
sbb
js
sub
xor
or
add
clc
scas
push
shll
data16
pop
pop
imul
sub
imul
je,pt
leave
mov
and
mov
xchg
cmp
fldt
add
in
mov
and
cli
jge
push
add
jno
into
and
jno
mov
adc
shll
sbb
aas
and
xor
fiaddl
mov
jp
clc
stos
dec
xchg
push
mov
sub
js
ljmp
cmpsl
outsb
adc
repnz
mov
pop
jp
inc
and
popa
mov
call
out
sub
std
lods
pusha
push
adc
inc
and
sbb
aad
out
push
cmp
bswap
fildl
push
cmpl
adc
std
push
mov
xlat
dec
mov
jnp
push
inc
inc
pop
xor
popa
fbld
lods
inc
mov
in
jl
fldt
in
jno
sahf
std
mov
jge
aaa
daa
sbb
and
mov
sub
sarb
cmp
ss
push
cmp
lcall
jb
and
fwait
cld
cmp
jno
mov
inc
outsl
mov
mov
mov
imulb
fwait
test
iret
shl
xchg
in
dec
push
in
pop
or
adc
sbb
stc
mov
imul
and
in
ljmp
lds
inc
mov
out
add
pop
adc
cli
mov
insb
into
iret
cmpsl
cmp
in
in
stc
and
cs
or
es
repnz
xor
inc
es
cli
enter
pop
repnz
mov
xchg
loope
into
ljmp
push
cmpsl
js
inc
hlt
bnd
ss
xchg
imul
mov
mov
mov
push
jmp
cmp
imul
sahf
jne
xchg
je
cmp
mov
xchg
pop
out
mov
xchg
jg
mov
dec
dec
dec
xchg
paddusw
and
out
or
xor
imul
cli
shr
adc
subb
repnz
jns
jno
ja
pop
cltd
leave
push
repz
sti
jg
xlat
xchg
mov
xchg
test
mov
xor
inc
stc
jnp
sub
mov
jg
ficoml
popf
cmp
aas
fwait
mov
sub
pop
jae
lea
mov
enter
ja
bound
mov
jl
sbbb
mov
fildll
rcrb
pop
aas
sbbl
pop
mov
stos
adc
das
pusha
mov
adc
mov
xor
mov
shr
jb
fistpl
aaa
or
test
jo
jbe
movsl
add
and
inc
movsl
cmp
lret
cmp
or
bswap
pop
cmp
push
popa
cmp
adc
or
dec
pop
daa
adc
mov
sbb
mov
lods
inc
push
and
rol
inc
cs
sbb
pop
fdivrs
and
je
out
jg
int3
mov
cmp
sbb
repz
pop
out
and
call
mov
jmp
scas
loopne
sbb
into
and
iret
fdivs
out
fcompl
leave
aaa
mov
cltd
mov
cmp
jne
dec
and
sti
sti
or
inc
mov
add
cmp
iretw
jg
inc
loop
pop
js
js
stos
dec
sbb
inc
cmp
push
and
mov
or
stos
repnz
mov
add
sbb
mov
lret
mov
arpl
sahf
insb
jmp
dec
in
jg
mov
ja
aad
icebp
xchg
mov
imul
pop
fnstcw
mov
out
insb
pop
xchg
outsl
les
std
xlat
sarl
repnz
ficompl
pop
jne
movsl
fisubl
shll
mov
cwtl
inc
jp
sbb
sub
gs
popa
lock
rdtsc
sub
xchg
popf
mov
jge
or
sbb
mov
inc
test
dec
das
jno
mov
negb
push
push
push
add
pushf
dec
pop
aaa
sbbb
push
rol
adc
addr16
and
jns
pop
lahf
daa
lret
outsb
push
ss
repz
dec
pusha
fwait
loop
movsl
loope
adc
adc
dec
sbb
test
jg
lcall
inc
pop
mov
popa
gs
cmpsl
sbb
adc
add
mov
sub
dec
lret
mov
sti
cmp
adc
sbb
out
push
mov
addr16
lea
into
lods
and
orl
inc
pop
js
dec
sbb
sub
cmp
scas
lds
cmp
ljmp
push
les
clc
add
push
aad
sub
enter
adc
in
xchg
cmp
mov
jae
push
lahf
mov
cmp
sbb
rcll
mov
push
push
dec
mov
mov
cli
jne
clc
cltd
dec
cmp
mov
sub
and
insb
sub
stos
sbb
cmp
cmpsb
rcll
add
mov
xor
scas
dec
or
test
jnp
mov
pushf
adc
bound
mov
das
scas
cwtl
cmpsl
adc
jge
out
stc
sub
dec
mov
dec
js
nop
xor
mov
test
lock
imul
jne
int3
inc
xor
mov
sbbb
sub
pop
push
dec
lret
pushf
insb
xor
aaa
out
dec
icebp
push
lret
dec
lea
icebp
lods
test
adc
dec
iret
mov
cmc
sbb
das
ds
mov
leave
cmp
sub
inc
mov
je
out
mov
lcall
mov
bnd
cwtl
gs
mov
sbb
mov
dec
out
cmpl
sub
in
in
dec
in
cmc
loope
mov
repz
repz
insb
out
cmpsl
pop
cmp
adc
xor
xor
shlb
mov
in
inc
sub
xchg
insl
clc
pop
fwait
or
out
jl
jae
dec
mov
adc
adc
add
ret
mov
in
dec
pop
out
aam
dec
pusha
mov
das
into
test
out
lods
aam
adc
mov
mull
fcoms
jbe
movsb
inc
std
add
popa
sahf
scas
cli
add
cmpb
mov
mov
jle
imul
sbb
lods
mov
imul
arpl
imulb
inc
sub
test
inc
mov
test
loop
xor
push
cli
addr16
sahf
stos
idivl
push
mov
imul
mov
pop
mov
lret
lret
jo
or
mov
adc
and
js
out
mov
ja
inc
mov
popa
scas
cltd
mov
out
mov
jo
lea
lods
int
in
sahf
lahf
popa
mov
cmc
and
dec
xchg
je
lret
inc
mov
popf
xor
pusha
dec
lcall
mov
out
xor
mov
movsl
int
filds
out
push
jo
and
dec
cmpsb
sub
cs
push
ljmp
jmp
andb
adc
mov
mov
movsl
mov
jnp
dec
popa
inc
mov
gs
dec
cld
jne
fisubl
jns
in
mov
jmp
cmpsb
pop
stos
or
test
in
sub
sub
xchg
lock
repz
fnstsw
ror
movsb
imul
call
movsl
mov
out
subb
push
xchg
and
mov
mov
inc
and
int
add
cwtl
xor
movsb
test
and
stos
xorb
mov
xlat
mov
insb
mov
scas
int
jmp
aam
sbb
sub
xchg
xchg
mov
call
ljmp
jnp
jae
clc
cmp
sbb
inc
cwtl
adcl
mov
int3
je
test
jge
inc
cmp
push
cld
bswap
lock
adc
xlat
les
sub
aam
sti
and
adcb
out
lea
xor
jne
push
dec
addr16
add
jo
push
aas
nop
inc
fsqrt
adc
or
mov
push
sbb
lock
fwait
mov
mov
sub
jg
pop
in
pop
insb
sarb
cltd
cmp
vprotd
or
dec
sbbb
shlb
push
or
sub
mov
test
push
lods
in
mov
xchg
aaa
cs
dec
push
lret
sahf
ja
popa
xchg
pop
sbb
inc
loopne
xor
das
iret
call
mov
jnp
mov
jp
subl
enter
scas
dec
cli
jbe
xor
sub
ss
mov
xchg
sub
sarb
pushl
xchg
int
inc
sub
ret
inc
push
cli
lock
cmp
repz
pop
and
ret
lods
aam
xor
or
xchg
ljmp
sbb
add
sbb
repnz
xlat
cmp
stc
ret
mov
mov
aaa
adc
stos
loopne
sub
lahf
enter
pusha
in
shlb
jb
mov
xor
cmpsl
les
icebp
mov
hlt
rcl
lods
in
mov
push
outsb
or
push
mov
inc
fcoms
dec
push
call
sbb
xorb
cld
pop
sbb
shrb
add
cmp
adc
repnz
cmp
sub
mov
push
sub
lock
dec
das
and
or
fisubrs
arpl
scas
pop
xchg
scas
sub
movsl
movsl
push
into
repz
jecxz
push
in
dec
std
std
or
negb
pop
imul
sbb
test
jbe
or
push
daa
fstpl
inc
push
jo
testl
mov
and
push
movsb
dec
dec
imul
pop
or
jge
push
push
xor
sub
dec
pop
jbe,pt
test
loopne
nop
mov
cltd
inc
in
jno
sub
lahf
shlb
adc
mov
jle
pusha
inc
inc
adc
pop
xorl
icebp
xchg
and
and
cli
bndstx
aaa
out
add
mov
int
jp
sub
xchg
mov
fcomp
mov
orl
fnstsw
mov
sbb
add
imul
pop
les
aam
or
xchg
push
cmp
pop
mov
push
jl
dec
sub
and
ss
pop
in
push
adc
idivl
push
sub
and
clc
int3
sbb
cwtl
add
sbb
xor
ljmp
mov
mov
lret
pop
jge
cmp
lret
mov
mov
add
pusha
sub
xchg
nop
push
subb
insl
xlat
jp
cmp
xchg
xor
add
dec
mov
xor
pusha
fsubrs
adcl
call
push
cmpsb
add
fbstp
fildl
dec
cmp
push
mov
sbb
pop
mov
lods
pop
sahf
fimuls
stos
mov
sub
iret
xchg
xor
sub
cmp
jg
in
orb
lret
stos
pop
jecxz
imul
test
inc
fwait
ret
add
cmp
push
mov
movsl
add
popf
mov
cmp
ja
call
aam
gs
fcoml
stos
push
fs
mov
adc
push
and
add
pushf
and
repnz
shll
push
dec
loopne
ss
dec
imul
pop
ficoms
shrb
mov
sbb
sub
mov
xor
imul
mov
pop
aad
sahf
mov
inc
cmp
test
sahf
lret
fistl
cmp
inc
mov
mov
sub
aam
lds
lods
add
xlat
movb
lcall
fists
cs
lds
ret
stc
pop
mov
fisttps
out
fwait
out
adc
xor
jg
insb
test
cmpb
jo
cwtl
arpl
out
sub
lahf
je
dec
sub
testl
lcall
pop
aas
jns
adc
in
fcmovnu
and
incb
mov
jmp
pop
movb
jle
lcall
divb
call
jb
push
inc
xchg
jle
daa
jle
les
jbe
dec
jns
push
dec
push
xor
adc
gs
xchg
cmpsl
test
mov
pop
jmp
insb
addr16
jecxz
mov
int3
es
jle
imul
mov
jno
rcrl
add
pop
add
scas
in
xchg
mov
push
mov
push
cmp
dec
add
jg
pop
in
insb
clc
or
outsl
jmp
dec
push
in
test
lcall
sbb
pushf
jp
outsl
mov
sbb
inc
sub
fs
push
sahf
pop
jecxz
pop
movsl
sbb
jp
or
inc
cmp
mov
sti
push
ja
insb
jb
dec
adc
mov
adc
ljmp
or
pop
push
out
movsl
negl
mov
in
push
fbstp
lret
cmp
jnp
gs
lods
ss
addl
jp
cltd
mov
jp
xchg
movsl
mov
and
int
cmp
pop
xlat
jbe
ds
std
imul
or
push
rolb
ds
mov
inc
sub
ficoml
inc
cmpsb
cmp
scas
fwait
mov
shl
popf
xor
pop
push
je
dec
cmc
jne
orb
fs
cld
lea
das
jl
pop
fnstenv
mov
sub
fidivs
das
lret
adc
sahf
xchg
and
jg
ds
and
dec
xor
shlb
add
incb
gs
aas
mov
cmp
movsb
mov
adc
mov
movsb
out
jg
cli
sub
add
dec
add
enter
mov
push
aas
adc
xchg
adc
mov
sbbb
adc
inc
jp
test
add
stos
xor
cmp
push
adc
ficomps
repz
shlw
inc
lahf
cltd
mov
nop
lret
add
pop
je
lds
xor
mov
push
inc
jg
mov
ds
cmpsl
mov
out
aam
fcmovne
lret
push
scas
out
xchg
dec
aas
int3
sub
push
cs
jae
mov
xchg
jl
call
jp
dec
mov
aaa
jg
lock
lods
mov
adc
jge
inc
or
lods
xor
xor
sbb
lret
int3
mov
xchg
mov
mov
push
outsl
xor
pop
in
lods
dec
adc
popa
movsl
andl
pushf
push
mov
int3
mov
sbb
mov
pop
pop
sbb
cltd
xchg
mov
xchg
mov
and
stos
addl
add
sub
dec
repz
mov
jp
xchg
cmpsb
or
add
jmp
jl
cli
cmp
movsb
ss
sarl
jecxz
loop
pop
lods
into
dec
jnp
es
add
and
imul
sub
push
aam
lock
int
in
add
jecxz
jno
clc
mov
mov
idivl
or
ljmp
xchg
arpl
push
cmp
pop
jmp
insb
pop
in
cmpsb
dec
stos
adc
xor
dec
mov
xor
inc
dec
or
stc
ja
lret
xor
or
xor
cmp
and
sarl
aas
xchg
rcr
cmp
jg
in
inc
sbb
mov
sbbb
mov
sub
xlat
pop
or
lcall
push
adc
ret
mov
push
push
ret
and
inc
ds
xchg
fs
lea
setne
clc
mov
push
pop
jge
xchg
dec
mov
testl
leave
std
fucomp
daa
sub
call
testb
dec
jmp
sub
nop
xchg
sbb
cmp
call
in
pop
push
pop
test
fcmovb
jae
lea
in
push
cmp
shrl
xchg
cmpb
clc
pop
mov
shl
mov
xchg
mov
mov
dec
mov
lcall
push
outsb
jns
imul
sub
in
pop
xchg
pop
push
sub
cmp
cmp
sbb
rorb
data16
les
mov
adc
vmulss
psrlw
mov
outsl
mov
add
sub
jbe
bound
rorl
cmp
lods
test
daa
ret
inc
rcl
sub
push
repz
stos
mov
sbb
inc
test
jle
and
cltd
fidivrl
gs
std
rolb
sbb
or
push
xor
lcall
pop
dec
pop
into
daa
or
mov
push
pop
out
dec
icebp
jno
fists
and
xchg
not
push
movsl
adc
pop
adc
test
xor
push
ret
mov
push
int
mov
mov
lret
sti
ja
push
in
push
int3
sub
lret
test
jl
js
dec
sub
outsb
mov
add
cs
inc
sbb
lods
push
push
out
or
lds
jnp
inc
cmc
jp
xor
pop
lret
fldl
je
xchg
mov
stos
cmp
inc
xor
push
jbe
mov
leave
ss
sub
xor
mov
jl
dec
cmp
cmpsl
lds
mov
fbld
xchg
or
cmp
inc
inc
mov
jo
xlat
and
ljmp
jne
mov
sbb
loop
rorl
divl
shr
sbb
mov
sbb
pop
jo
loop
and
mov
out
sub
dec
lods
int
das
addb
inc
lods
out
subl
shrl
jp
inc
add
fdivrp
xor
gs
jmp
in
mov
push
iret
adc
xchg
bound
sub
jns
adc
jge
push
add
cmp
xchg
xchg
inc
add
jbe
xlat
adc
scas
xchg
pop
xchg
and
push
cmc
or
sub
clc
mov
imul
dec
jecxz
sbb
imul
ds
stos
insb
imul
cltd
ljmp
stos
loope
arpl
inc
ljmp
mulb
popa
fcoml
pop
and
loopne
inc
and
xor
repnz
and
push
cmp
dec
int3
into
cmp
and
xchg
jg
add
into
mov
loopne
xor
cmc
sub
cmp
dec
in
inc
dec
lret
xchg
hlt
into
nop
into
into
or
xor
dec
or
je
pusha
sub
lret
mov
add
in
sti
jbe
sub
pop
ds
test
les
lods
xchg
sahf
xchg
shl
sub
mov
xor
mov
das
insl
loop
mov
ljmp
sub
loope
sbb
add
xchg
pusha
cmp
xchg
sbbl
xchg
repnz
jp
jns
pop
mov
data16
rcr
inc
mov
mov
xchg
add
adc
mov
out
mov
ror
sahf
jg
lods
test
decb
ret
add
inc
repnz
test
out
adc
dec
icebp
sbbl
xor
nopl
js
pop
adc
push
stos
mov
jns
stos
sub
pmaxsw
lret
ss
cmc
mov
call
rcl
and
loopne
sbb
sbb
jg
lock
add
adc
sbb
jmp
movsb
push
inc
insb
pop
cmp
shlb
dec
aad
mov
push
push
jle
adc
aaa
stc
or
cs
pop
dec
outsl
xor
dec
inc
jo
movl
xchg
fwait
stos
cld
imul
add
pop
lret
xchg
lods
aas
rcrl
pop
shll
push
shrb
lcall
fldenv
fdivl
sbb
sub
push
mov
push
mov
jg
adc
call
movsb
mov
jl,pt
dec
lods
sbb
jmp
mov
adc
divb
push
icebp
xor
es
push
mov
pop
push
ja
fstps
sbb
push
mov
cmp
dec
and
fimull
repnz
scas
imul
fstps
rclb
insb
cltd
xor
jns
push
sbb
in
aas
rol
insb
mov
adcl
cld
cld
jns
cmp
xor
pop
add
mov
mov
lods
cli
jnp
push
sbbb
and
or
cmp
push
pusha
ljmp
push
lcall
or
aad
sarb
xlat
xchg
shll
add
cltd
das
mov
mov
shll
js
out
inc
add
loopne
inc
mov
lcall
or
insb
xor
xchg
rol
jno
pop
in
cmp
test
and
hlt
dec
scas
mov
inc
stos
pop
push
out
lea
jno
jecxz
outsw
xchg
dec
repnz
in
pop
mov
ret
lahf
xchg
aaa
jns
ljmp
cli
fsubs
out
test
outsb
mov
int3
inc
xchg
pop
iret
pop
jp
orl
adc
lea
xchg
mov
push
xor
add
outsb
test
and
mov
lods
test
dec
leave
mov
je
test
insl
loop
fwait
sbb
loope
push
mov
xchg
lods
pop
xchg
cli
insb
add
pop
test
mov
mov
xor
dec
mov
adc
aaa
inc
mov
daa
mov
mov
inc
pop
push
mov
orb
xor
in
or
mov
mov
jmp
ljmp
jne
out
and
xor
stos
push
jle,pn
lds
dec
xchg
dec
je
in
push
and
or
enter
push
aad
test
pushl
and
daa
pop
push
pop
sbb
stos
or
out
dec
nop
cmp
mov
jp
pop
inc
mov
dec
xor
std
imul
jg
stos
into
cmp
fnstenv
mov
and
cmc
mov
fistpll
shll
test
cmc
stc
addr16
and
and
adc
repnz
push
arpl
add
dec
popf
test
test
push
dec
xorl
sbb
jmp
imul
in
push
push
int
cltd
lret
jl
mov
int3
xchg
mov
xor
imulb
xchg
ds
cltd
test
and
xor
mov
cmp
jmp
hlt
jb
mov
orb
jecxz
pop
adc
cltd
inc
negb
adc
test
sbb
inc
sub
xor
pop
push
push
push
negl
out
cmpl
mov
ss
mov
sub
arpl
inc
les
or
xchg
rol
lods
cmp
aas
adc
mov
je
push
decl
rorb
not
shrb
sbb
cli
js
subl
add
imul
mov
mov
xor
pop
pop
clc
push
or
jecxz
add
insl
inc
out
cmpsl
lods
ret
xchg
mov
outsl
inc
aas
xchg
movsl
out
mov
dec
into
hlt
mov
xchg
in
fsubl
jns
lods
adc
lahf
dec
mov
stos
add
xor
insl
mov
and
cmp
lcall
inc
cmp
mov
fcoml
daa
sub
xchg
sbb
dec
add
mov
sub
pushf
nop
mov
loop
loop
dec
clc
pushl
sbb
mov
sub
mov
movsb
lds
paddusb
pusha
sbb
movl
xlat
and
insb
repnz
lahf
sbb
idiv
mov
nop
or
xchg
clc
and
push
in
ret
aam
jo
cmp
push
add
push
xchg
fsubr
cmp
mov
ds
pop
cmp
inc
and
test
xor
add
in
in
js
add
repnz
xor
mov
sti
scas
scas
test
movsl
movsb
xor
clc
add
ss
cltd
xchg
xor
xchg
push
mov
mov
mov
sub
mov
aam
jecxz
std
out
js
mov
mov
mov
scas
sub
mov
mov
clc
out
out
lods
loope
xchg
xor
cmp
sub
adc
cs
adc
outsb
idivl
cltd
lds
clc
ds
jns
and
inc
loope
push
mov
xchg
loope
sbb
outsb
push
mov
xor
fucomip
and
dec
jo
jae
xchg
nop
pop
cmpsb
sbb
testb
hlt
push
push
jge
rcll
lds
jns
stos
bound
cmpl
lds
imul
sbb
pop
stos
cld
lds
stos
or
cmc
sbb
push
popa
xchg
jmp
mov
mov
mull
jp
iret
jns
mov
push
scas
push
adc
fcomps
fidivrl
lea
movsl
ret
ds
out
shlb
cmp
int
cmp
outsl
sub
in
sbb
jo
int
jns
lret
mov
icebp
movsb
aas
aaa
sbb
pushf
pop
fistl
mov
xchg
call
cmc
lods
mov
ss
outsl
xchg
xchg
mov
jl
add
xchg
das
das
mov
scas
sbb
das
aas
mov
adc
pop
ds
mov
dec
push
inc
mov
outsb
lcall
mov
pop
sysret
fsubp
jno
push
pop
xor
pop
mov
insb
pop
sbb
adc
adc
jno
mov
jo
or
jae
or
loop
inc
dec
cwtl
cltd
fs
idivb
cli
out
cmc
fsubrl
out
or
xchg
dec
mov
cmp
js
lea
mov
mov
or
xchg
inc
dec
test
sbb
inc
jno
push
inc
mov
aaa
js
push
adc
lret
aad
andb
mov
sti
mov
idivb
dec
xchg
leave
mov
sub
mov
popf
out
and
pushf
xchg
push
or
cmpb
les
mov
movsb
into
add
sti
insb
popa
mov
sbb
int
in
xor
sub
adc
dec
les
inc
add
aaa
out
out
or
jecxz
lea
dec
adc
xor
cmpsl
jg
or
push
jle
pusha
sub
insl
dec
cltd
fdivl
and
fwait
cmp
dec
pop
sub
push
loopne
adc
outsl
repz
faddl
sub
mov
lea
into
mov
aad
inc
mov
push
cwtl
xor
gs
pop
ret
ljmp
and
icebp
fldcw
nop
add
fbld
jo
add
pop
add
mulb
js
int
mov
mov
cli
jnp
fwait
cli
cmc
je
dec
push
jp
mov
adc
and
fidivl
xor
in
cmp
jl
out
popf
cmp
xchg
popf
hlt
aam
cmp
cmp
jno
lock
sbb
sarl
sbb
lahf
mov
mov
call
sbb
out
or
xlat
or
pushf
sahf
inc
jb
dec
aaa
inc
push
repnz
pop
add
mov
dec
ss
pop
sbb
stc
and
inc
mov
out
enter
cmp
xchg
iret
sahf
cmp
ja
jo
jmp
jns
adc
lock
int
imul
daa
testl
arpl
mov
or
insb
sub
and
xchg
icebp
inc
sbb
inc
xor
pop
or
or
cmpsl
loopne
rcl
adc
cltd
cmp
sbb
push
xchg
das
add
mov
scas
inc
add
insl
insl
dec
push
stos
sbb
pop
push
or
dec
cmc
and
in
sarl
test
jnp
divl
mov
out
aaa
xor
jb
gs
adc
aad
xlat
test
repnz
popf
and
cmpsl
xor
push
jge
test
popa
shl
test
pop
mov
sahf
cli
in
hlt
pop
aas
ss
push
test
cmc
fists
pop
cmp
shrb
dec
jne
inc
mov
scas
jno
sbb
xchg
push
cmp
insb
sub
int3
mov
inc
push
jmp
add
jo
or
xchg
and
pushf
sti
jno
pop
mov
sub
push
push
sub
jno
fstl
outsb
adc
movsl
and
das
ret
pop
push
mov
inc
aaa
lock
push
push
inc
arpl
xchg
push
dec
leave
xlat
test
push
inc
push
mov
mov
sar
clc
cmpsb
inc
dec
push
jb
xor
cmp
pop
mov
dec
jge
daa
mov
cmp
push
and
jne
xlat
inc
nop
in
lret
and
cltd
imul
fwait
int3
adc
xor
loop
imulb
xor
fwait
aaa
fs
outsb
mov
push
inc
cli
je
mov
ret
loope
jmp
fs
or
imul
icebp
jmp
sbb
sbb
das
sbb
repz
fisttps
out
push
adc
or
mov
mov
mov
arpl
pop
clc
fisttpl
push
into
movsb
cwtl
sbb
inc
cltd
and
pop
cmp
sti
cmova
faddl
js
enter
adc
subl
test
inc
fistl
mov
sbb
jg
stc
mov
cmp
xor
imul
lret
adc
mov
inc
mov
push
sub
cmpsb
sbb
lret
sub
xchg
dec
sarb
pop
jo
scas
mov
cmpb
imul
add
add
daa
adcl
das
fcompl
xchg
adc
jo
test
call
xor
clc
cmc
push
insb
in
outsb
mov
jnp
mov
mov
int3
jae
mov
std
adc
outsb
mov
cmp
cli
sbb
pop
or
aad
mov
sub
cmpxchg
jbe
mov
fidivl
dec
xchg
sbb
sbb
push
insl
mov
push
pop
dec
jb
scas
shrb
andl
nop
jns
inc
cltd
push
les
push
push
cmp
xchg
imul
adc
adc
lret
xchg
aam
pop
dec
and
dec
out
sbb
xchg
fmuls
stos
push
cmp
xchg
das
in
cwtl
inc
fucom
loope
mov
out
jnp
rcll
outsb
dec
cmovb
imul
mov
jae
xor
cmp
data16
or
inc
insl
add
sub
xor
repnz
pop
or
in
mov
fistpll
mov
sbb
andl
pop
pop
frstor
or
sbb
shlb
mov
orb
add
push
add
aam
xor
in
jle
mov
jns
int
xor
test
ficoml
fstpt
incl
aaa
or
inc
cld
push
mov
movsb
pop
leave
inc
ja
inc
push
mov
mov
test
cld
lods
mov
cs
movsb
mov
out
push
pop
pop
sar
int3
add
jnp
lea
lret
inc
cmp
mov
fisttps
mov
cmpsl
mov
pop
cmp
mov
out
cmpsb
cmp
jecxz
push
int3
inc
pop
test
dec
cld
roll
or
cmp
dec
inc
outsl
sub
push
and
push
mov
icebp
lds
inc
pop
mov
mov
rcl
insb
pop
jnp
lods
lock
fstl
lock
mov
repnz
enter
lods
push
inc
inc
fcmovnu
push
inc
add
jg
jns
dec
clc
repz
out
shlb
inc
mov
scas
sub
pop
xor
mov
cmc
adc
imul
push
out
fidivrl
inc
lea
insb
bswap
lahf
jne
in
mov
mov
imul
outsb
pop
into
in
fistpll
cmp
es
insl
sub
mov
inc
ror
adc
mov
ret
mov
roll
push
rcl
imul
ss
ds
cmpsb
je
popf
fcom
jecxz
je
mov
mov
or
inc
shrl
or
ja
notb
fbstp
call
imul
jecxz
outsb
scas
cwtl
lahf
cmp
or
fs
loop
mov
add
ds
cmp
adc
std
push
inc
mov
mov
inc
shll
pop
psubusb
mov
mov
lahf
mov
lcall
fcoms
adc
cmp
sbb
subb
fs
jg
insb
mov
popa
stos
std
cmpsl
sub
popa
pusha
xlat
mov
aaa
divl
decb
in
andl
inc
and
pop
adc
mov
repnz
adc
or
mov
lock
mov
dec
cs
push
mov
imul
xor
adc
dec
stc
aaa
xchg
test
sub
insb
fs
and
sub
inc
mov
or
mov
mov
adc
mov
shlb
add
lret
mov
xchg
mov
pop
insl
push
sti
pop
data16
stc
scas
movsl
cs
gs
adc
mov
divl
and
lahf
fisubs
mov
in
inc
ljmp
mov
fimuls
jmp
mov
fstps
cltd
xchg
mov
aad
into
pop
xchg
outsl
push
and
scas
xor
inc
int3
or
aad
pop
test
sbb
loopne
sti
dec
imul
xchg
push
sbb
lret
xchg
sub
xlat
test
sbb
and
sbb
push
aaa
insl
icebp
mov
stos
add
inc
inc
xlat
rcrb
pusha
sub
xchg
mov
adc
sub
push
rorb
scas
inc
ret
adc
sub
enter
xor
cmpsb
pop
jecxz
xor
jne
add
fwait
jo
bound
ficoms
daa
xor
cli
jae
ss
lret
inc
int3
add
cltd
pop
hlt
or
mov
mov
adc
pop
and
movsb
mov
dec
mov
mov
sti
jnp
jmp
icebp
lret
lods
mov
jmp
xor
cmpsb
lret
dec
mov
sub
xor
inc
xchg
movsl
pop
mov
lret
outsl
pop
jae
mov
mov
jo
lods
loop
pop
mov
cmp
push
jmp
out
nop
andb
xchg
push
pop
aam
mov
ret
sub
pop
sbb
in
mov
jae
rclb
cmp
sub
sbb
pop
push
cmpsb
cmpsl
adc
mov
mov
jns
shrl
and
lret
sub
or
daa
xchg
repz
popa
aam
mov
mov
outsb
sbbl
push
or
push
mov
sub
pop
gs
fs
scas
mov
adc
fidivs
mov
stos
push
ret
pushf
out
push
daa
xchg
mov
push
jp
cmp
or
out
mov
test
or
dec
push
and
mov
jae
dec
mov
lods
adc
push
fcmovnu
mov
clc
mov
jbe
fadd
cmpl
add
mov
outsl
jl
pop
add
pop
xorb
adc
xchg
test
jl
sbb
jae
cld
faddp
cmpsl
call
sti
jnp
add
or
push
lret
rolb
pop
or
movsb
ja
inc
faddp
cmp
test
jle
pusha
lret
lret
xchg
mov
dec
pop
sbb
test
movsb
rol
jno
loop
push
sub
icebp
mov
sub
pop
jge
jmp
cli
sbb
xor
add
in
outsl
stos
mov
into
and
arpl
shll
pop
enter
cs
test
mov
cltd
jb
outsl
xchg
mov
je
daa
push
xchg
and
lahf
pop
loop
jle
cld
adcl
push
xor
pop
xor
mov
mov
std
xchg
sarl
outsb
adc
out
xchg
adc
movsl
shr
mov
push
add
ss
fistl
movsb
test
mov
in
ljmp
adc
lahf
push
sbb
jp
jl
pop
imul
bound
sbb
cmp
push
in
nop
jnp
pop
pusha
dec
in
test
stc
imulb
xchg
jle
inc
repnz
jb
and
mov
mov
sub
sbb
pop
xchg
pop
jg
mov
rcl
mov
dec
cmpsl
lcall
adc
add
rcr
iret
ret
cmp
push
movsb
mov
add
repnz
je
cmc
sbb
ficompl
insl
out
hlt
sbb
push
add
adc
jecxz
ss
push
xor
xchg
jo
or
xor
mov
jo
adcl
adc
out
mov
popa
or
shrb
lret
and
xor
mull
and
jmp
jmp
das
fldl
pop
dec
and
fdivs
add
dec
mov
imul
popa
lods
cmp
sbb
or
rcll
in
sub
test
and
sub
fildll
cld
fisubrl
inc
addr16
shr
and
mov
push
cmp
inc
push
addr16
clc
adc
iret
inc
push
divl
sub
or
xorl
xor
mov
mov
push
jno
jae
xlat
aas
pop
sbb
out
and
mov
dec
cmp
jl
mov
add
sbb
clc
std
mov
or
inc
lea
pop
pop
mov
cli
ret
inc
inc
mov
inc
inc
int3
xchg
mov
stos
sbb
xor
je
fcmovb
xchg
rcrb
pop
pusha
decl
arpl
ret
inc
scas
inc
aad
scas
jae
pop
push
lret
icebp
cltd
int
jp
adc
int
sbb
sbb
and
jg
into
stos
loop
ret
pushl
ds
movsb
stos
andb
adc
jecxz
rclb
sbb
xchg
fs
push
out
mov
stc
pop
jae
jo
movsb
and
mov
mov
push
pop
xor
repz
mov
lds
or
pop
fwait
or
sbb
sub
adc
test
std
ret
bound
inc
out
push
roll
fsubrl
shll
dec
out
sti
sti
or
push
stc
xchg
movsb
fsts
push
push
sbb
pop
ret
inc
adc
jg
xor
movups
push
and
movsb
push
sti
push
addr16
loop
icebp
ret
mov
pop
in
sub
pop
movsbl
outsb
pop
lock
divps
cli
pop
dec
gs
xor
not
outsl
ljmp
fdiv
je
gs
shlb
add
ret
ficompl
test
dec
sub
cmp
cld
xchg
enter
push
cmp
xchg
lods
cmp
mov
pop
sbb
or
push
mov
pushf
push
outsb
test
and
jl
or
ds
outsl
xchg
sub
and
in
in
pop
dec
or
fcomps
mov
loope
sub
sbb
aam
int
add
inc
pusha
fistps
sbb
subl
lock
dec
adc
mov
xlat
test
dec
cmp
xchg
add
sub
jns
adc
arpl
gs
mov
test
shlb
movsb
insl
sub
cmp
xor
lret
sbb
adc
lcall
xchg
cmc
xorb
inc
push
cli
adc
push
adc
cltd
add
mov
cmp
aas
cld
dec
jge
cwtl
push
dec
out
loopne
mov
xchg
mov
mov
outsl
test
jl
xchg
add
mov
adc
out
push
andb
push
int3
push
push
mov
pop
adc
or
es
loop
xlat
jg
xlat
lret
push
out
sbbb
repnz
sub
shl
inc
loope
and
xor
test
jl
mov
mov
add
addr16
mov
xchg
inc
dec
xchg
inc
ljmp
popl
movl
shrb
shr
mov
add
cmp
sub
cmpsl
jp
or
sub
lret
fldt
mov
lods
sub
mov
jge
loop
hlt
adc
ficoml
cmp
leave
out
data16
pop
lret
cli
jne
pop
into
hlt
inc
jo
inc
push
dec
cmp
xchg
dec
pop
push
or
add
lcall
iret
insb
test
mov
and
pop
aaa
lds
je
mov
xorl
xchg
cmp
hlt
fidivl
sti
pop
inc
in
js
xor
rcrb
adc
mov
pop
push
jns
add
cmp
inc
cmp
push
insb
loope
and
mov
mov
mov
jge
mov
das
insb
push
fidivl
add
cmc
add
xchg
sbb
pop
dec
cltd
mov
rcrl
cmpsb
jp
rolb
rcr
std
xchg
sbb
sub
pop
mov
or
out
and
enter
push
mov
std
jmp
dec
xchg
fcmove
xchg
fprem
test
xchg
pop
insl
pop
xor
mov
and
sub
aam
pop
in
mov
push
pop
cmp
add
test
mov
add
ds
in
mov
inc
dec
push
iret
dec
add
inc
or
sbb
mov
jp
jge
mov
jae
xor
sbb
sub
mov
and
cld
fs
inc
loop
adc
xchg
es
aas
repz
sub
and
jecxz
les
mov
dec
dec
jl
jo
movsb
adc
or
jle
mov
test
jmp
dec
js
fisttps
dec
fstps
fnstcw
stc
loopne
adc
mov
cmc
fwait
js
inc
fisubrs
xchg
fsubs
adc
mov
push
call
leave
out
add
dec
jmp
inc
pop
mov
sbb
call
xchg
jmp
xor
cli
int3
mov
jne
in
scas
cmp
adc
dec
dec
int3
fadd
movsl
cld
mov
rcrb
test
call
jns
xchg
and
lock
enter
adc
fidivl
imul
aaa
inc
out
gs
loope
rolb
push
icebp
push
loop
push
pop
imul
sbb
and
dec
mov
sub
test
inc
cmpsb
mov
js
dec
cld
pavgb
lahf
xchg
cltd
adc
lret
sbb
fucom
in
add
pop
fadd
out
leave
sbb
js
xchg
addr16
pop
mov
mov
xchg
adc
lods
push
dec
data16
sub
ljmp
cltd
jnp
scas
xchg
pop
sub
pop
jb
or
repz
jmp
outsl
jne
add
sbb
andl
sbb
or
pop
addr16
cwtl
pushf
xor
ret
lods
mov
enter
inc
sub
adc
cwtl
in
aad
shrl
mov
loop
mov
adc
mull
test
roll
outsl
xor
pop
adc
lods
test
dec
scas
addr16
inc
stos
jbe
adc
add
add
dec
add
clc
and
cld
aad
cvtps2pi
mov
sub
mov
pop
insb
or
imul
sahf
push
je
lahf
and
adc
cmp
outsb
cmpsb
outsl
xchg
rolb
loope
pushf
cld
aam
cwtl
rolb
mov
mov
int
in
xchg
gs
jp
mov
scas
popf
aam
xchg
icebp
xchg
mov
divb
cs
mov
jmp
push
addr16
pop
data16
das
push
xchg
aaa
int
sub
cwtl
inc
icebp
sub
lds
addr16
jae
push
sbb
cmpsl
jo
mov
imul
ret
add
dec
inc
je
adc
xchg
lods
lahf
std
aas
imul
sub
cld
je
mov
mov
pop
sbb
dec
ljmp
test
pop
enter
push
add
in
push
or
push
enter
inc
gs
cmpsb
js
aas
rcrb
cltd
xor
lods
insb
or
jb
shrl
jmp
inc
push
mov
dec
mov
push
popa
sub
adc
push
lahf
pop
int
pop
cmpb
ret
push
stos
add
addr16
mov
cmp
pop
sub
cs
adc
adc
in
or
shrb
ljmp
cmpsb
xchg
cwtl
or
inc
sub
into
sbb
cmp
jae
mov
leave
jno
pop
mov
pop
outsl
jne
and
sbb
sbb
fadds
addr16
pop
adc
cs
insb
mov
adc
sub
xchg
fildl
cs
cmp
mov
pop
add
adc
popa
xchg
test
jne
clc
sub
sbbb
xor
xchg
sbbb
push
mov
sahf
pop
out
shrl
out
mov
sbb
lods
mov
scas
and
jl
adcb
das
cmc
std
adc
cmpl
sahf
fstpl
mov
pop
hlt
arpl
inc
mov
repnz
ljmp
fcompl
aad
mov
mov
hlt
repz
sub
adc
xchg
push
mov
nop
push
push
mov
je
jg
cmc
or
js
iret
dec
cltd
adc
out
leave
arpl
f2xm1
inc
cmp
imul
cs
aas
repnz
rcrl
push
push
cmp
stos
repz
iret
mov
fists
cmp
ljmp
add
popf
sub
pop
cmp
cmp
pop
mov
and
setnp
repz
sub
aas
add
xchg
cld
loopne
stc
enter
add
inc
icebp
icebp
arpl
or
cwtl
lret
add
stos
fsubp
mov
rcll
inc
xchg
jne
xlat
ss
mov
mov
scas
repz
mov
jle
clc
or
push
pushf
cmp
jbe
dec
loopne
fs
adc
sarl
mov
pop
outsl
xchg
mov
outsl
mov
lods
outsl
push
jb
outsb
dec
mov
subb
pop
jo
or
pop
mov
imul
loop
push
lods
dec
mov
hlt
dec
scas
mov
and
or
dec
adc
insb
jl
cld
cmp
shrl
les
arpl
or
pushf
jge
inc
jle
sahf
sahf
xor
sti
rorl
mov
les
mov
push
inc
xchg
mov
lock
dec
sbbb
jae
movsl
jo
cwtl
jae
push
test
int
lcall
fst
xchg
fs
cld
mov
andl
xchg
and
jg
test
fcoms
adc
mov
mov
cltd
fmuls
loope
pop
mov
fcomps
xchg
and
sbb
out
add
movsb
icebp
jmp
popa
push
mov
sub
pop
roll
cmc
ljmp
std
in
add
or
cmp
test
movsl
jle
addl
add
leave
test
push
xchg
inc
testb
gs
xchg
or
sahf
test
cmp
test
jb
push
cmp
mov
fbstp
movb
cmp
mov
sbb
je
mov
icebp
bnd
or
add
inc
sbb
insb
outsb
aas
lock
or
cmp
add
xchg
inc
lret
push
ja
into
cmp
sbb
stc
adc
fnsetpm(287
fbstp
sub
out
outsb
popf
and
imul
int
adc
cmp
pop
pop
xchg
push
cmp
das
ret
pop
rcl
test
insb
jecxz
data16
inc
sahf
or
adc
repz
movsl
adc
gs
loopne
pop
lahf
mov
in
pop
test
push
and
sbb
push
dec
mov
mov
pop
mov
and
xor
push
pushf
fs
divb
xchg
pop
xchg
lsl
sub
adc
ljmp
call
sub
mov
dec
data16
dec
out
cmpsb
lock
clc
push
xchg
mov
roll
lret
cmp
lds
lock
pop
jp
sbb
pop
pop
pop
jle
push
sarl
mov
push
mov
arpl
lods
inc
pop
mov
and
jo
sub
test
mov
loopne
xchg
cmp
mov
pop
imul
mov
scas
lcall
cmpl
pop
mov
push
dec
fimull
sbb
sahf
ret
dec
adc
mov
fldenv
movsb
insb
fisubl
mov
pushf
pop
out
int
add
ret
or
and
pop
add
cmp
adc
mov
fwait
xor
idivl
push
or
ret
add
lds
movsb
adc
int
outsb
mov
push
aas
pop
jmp
jg,pn
pusha
sahf
push
adc
mov
arpl
addl
sub
rcr
imul
add
outsb
sbb
xchg
ljmp
lahf
fucomp
mov
add
mov
fdivl
add
adc
mov
mov
or
push
mov
leave
lock
sbb
repnz
fwait
adc
pop
push
add
ret
rcrl
pop
dec
aas
sbb
jae
fs
js
in
xchg
mov
fstps
xor
sbb
cmpsb
pop
test
ja
ret
xchg
mov
test
iret
movsb
in
push
adc
fs
hlt
jge
leave
mov
rolb
popf
xor
rcl
cmc
mov
or
mov
lret
cmp
ljmp
int3
out
fistps
jnp
pusha
xchg
lds
aad
fwait
ja
mov
pop
lods
mov
dec
and
stc
sbb
subl
sub
stos
test
and
add
jmp
and
and
xchg
xchg
xor
fadd
bound
xor
outsb
mov
mov
mov
mov
mov
mov
xchg
aaa
fiaddl
gs
inc
fcomps
push
pop
inc
insl
and
and
cmp
pop
dec
shr
cmp
cli
mov
mov
or
mov
mov
call
insl
data16
ds
mov
sbb
mov
bound
int3
movsl
in
leave
ds
iret
or
imul
mov
lock
lods
and
mov
insl
ja
jno
movsb
cmp
push
out
ja
loopne
and
clc
pop
lahf
jno
mov
jle
repz
std
xchg
sbb
push
xchg
mov
jecxz
push
and
hlt
xchg
mov
add
xchg
int3
dec
push
adc
jecxz
sbb
adc
and
movsl
add
cmpb
pop
sub
or
insb
ret
lcall
mov
popa
aam
movsb
loop
lods
mov
lahf
jmp
loop
pop
imul
adc
std
lret
add
push
insb
inc
inc
mov
mov
push
jmp
lds
aad
jo
jae
add
or
add
mov
and
int
xchg
stos
jmp
cld
das
and
xchg
mov
jmp
shll
xchg
lds
and
fsubr
dec
jns
mov
lcall
fidivs
inc
mov
cmpsl
xchg
pushf
mov
das
and
jno
pop
add
sub
push
out
mov
push
dec
test
jecxz
aas
mov
sahf
arpl
xorb
movsb
push
aad
cmp
cmpsb
insb
test
adc
add
mov
add
xor
loope
cmp
mov
cmp
movsl
pushf
in
clc
push
add
inc
aad
movsl
sub
pop
clc
xchg
fldl
mov
sbb
pop
inc
movsl
dec
mov
cmp
stc
fdivrs
push
or
andb
testl
inc
insl
aad
xchg
movsl
mov
xchg
lods
sub
das
addr16
das
stos
cmp
aam
xor
add
daa
mov
inc
mov
mov
inc
mov
mov
cmp
test
cld
aad
xor
add
cwtl
add
js
sbb
in
jnp
vpunpckhdq
jo
sbb
push
fildl
push
sbb
jg
mov
movsb
jb
cmp
frstor
sbb
jle
gs
and
sbb
add
sbb
mov
lahf
ret
out
lods
outsb
dec
xor
dec
clc
push
cmp
push
jge
mov
cmpl
push
test
shrl
xor
dec
mov
adc
mov
inc
adc
ret
and
imull
adc
sbb
nop
pop
loope
gs
je
cs
jmp
sub
test
push
xor
mov
adc
xlat
add
enter
xchg
push
pushf
scas
fsts
sbb
adc
sub
push
sbb
xchg
lods
add
add
mov
pop
jmp
mov
loope
and
imul
inc
movsl
jns
xchg
scas
call
std
cld
adc
pop
sti
aad
inc
xchg
inc
rorb
mov
inc
jnp
lahf
push
and
imul
push
addr16
mov
shll
xchg
loope
add
dec
xchg
sub
stos
and
negb
sbb
rcrb
stc
sbb
mov
sub
mov
loopne
cmp
add
outsl
js
and
inc
push
and
xchg
sbb
mov
int3
mov
or
pop
push
jnp
xor
add
mov
push
jecxz
hlt
adc
inc
out
outsl
adc
jle
movsb
inc
in
and
lods
jg
test
lret
mov
sub
int
hlt
in
push
sub
call
iret
xlat
push
mov
push
les
mov
sahf
and
lds
in
jp
jg
mov
mov
fidivrs
movsb
enter
jge
pop
xor
sub
test
pop
dec
mov
mov
test
sbb
cmp
test
fistpl
ds
or
mov
inc
fstpl
ljmp
jnp
popf
rorl
insl
and
adc
mov
mov
dec
int
shrb
xchg
xor
push
enter
push
test
mov
cli
adc
aas
lods
push
jb
jns
bound
arpl
lock
push
mov
pop
gs
pop
pop
fisttpll
inc
hlt
cmp
jle
cmp
cmpsb
or
rcrb
fs
dec
jmp
clc
and
and
enter
out
mov
add
xor
jecxz
dec
repz
inc
mov
push
cmp
pop
dec
adcb
push
pop
cmp
test
mov
cmc
cmpsb
push
mov
mov
and
scas
mov
dec
or
mov
stos
aaa
sarl
inc
jg
aam
or
movsb
xor
pop
cmpsb
rcrl
inc
jns
rep
out
pop
cmp
movsl
in
pushf
xor
dec
pop
add
jge
scas
pop
xchg
test
add
dec
cmp
xor
adc
fwait
add
iret
test
jmp
lds
push
loope
sbb
in
pop
and
add
xchg
mov
pop
adc
aaa
or
cltd
jmp
arpl
push
mov
mov
and
xor
dec
imul
or
push
mov
hlt
sbb
lret
jbe
cltd
iret
lods
arpl
and
xchg
sbb
cmp
cmp
push
dec
out
push
subb
dec
imul
lds
pushf
jno
jmp
xor
cmpsl
int
xchg
pop
fwait
ja
in
into
fwait
mov
jne
mov
pop
xchg
pop
dec
adc
pop
jno
jmp
pop
mov
rcl
aaa
ss
sub
scas
pop
je
cmp
icebp
loop
pop
xchg
push
mov
add
das
lods
sbb
out
mov
lds
loop
movsl
hlt
mov
lahf
cli
xchg
xor
mov
xchg
mov
rcrb
ja
mov
adc
ds
pusha
imul
out
movsl
mov
cmp
testb
jb
test
stos
mov
leave
or
inc
bound
sbb
hlt
cmp
mov
loopne
xchg
sbb
or
mov
dec
xor
es
adc
inc
stc
dec
xor
lea
out
andb
popa
lds
das
into
out
sub
div
loope
inc
mov
in
loop
xor
adc
cwtl
jg
test
mov
xchg
xlat
cmpsl
push
pop
fstps
pusha
decl
sub
mov
dec
daa
cmc
inc
adc
and
adc
jp
jecxz
or
and
adc
fs
std
stc
loop
xor
inc
inc
mov
ficompl
pop
sbb
pushf
or
cmc
push
and
rclb
gs
mov
push
sub
xor
jnp
cmp
cmpsl
and
or
sbb
sbb
ss
cltd
and
jle
subl
enter
or
xor
push
andl
div
cli
jae
add
xchg
movsl
mov
xorl
sti
cmpsb
mov
xchg
sbb
sbb
andb
hlt
push
pop
lock
icebp
pop
jne
add
aad
cmp
pusha
xchg
cmpsb
push
mov
jne
jnp
addr16
jmp
xor
sub
pop
pop
mov
rorl
add
fldenv
out
arpl
int3
inc
lahf
mov
cmpsl
mov
xor
sub
push
dec
int3
mov
xor
add
enter
mov
jnp
jae
add
jae
xchg
cmp
xchg
xor
gs
xchg
cmp
inc
lea
int3
jp
sub
pushf
jmp
ss
cs
leave
in
xchg
std
add
aad
jne
lock
iret
lds
push
insl
hlt
in
xor
jg
jle
sub
pop
lret
jp
out
pop
aaa
dec
mov
fs
ror
lods
xlat
repnz
lret
add
xchg
and
out
push
lahf
lret
repz
idivb
xor
mov
xor
adc
sub
push
mov
jo
nop
lods
inc
sbb
sti
pop
pop
xchg
rcll
sub
dec
pop
cmc
enter
add
jo
movsl
sub
xchg
fsubs
and
jmp
aam
xchg
lret
pop
fstpl
dec
out
je
and
xchg
xchg
std
jg
inc
sbb
mov
xor
push
push
add
xchg
out
mov
xchg
lds
mov
add
mov
mov
push
cli
fdivrl
jne
loope
dec
movsb
repnz
into
shrb
fcomi
xchg
adc
cmp
pop
dec
cmp
clc
xor
xchg
jl
cwtl
add
cmc
jne
leave
cmc
insl
mov
test
or
dec
nop
stc
push
sub
pop
mov
push
pop
in
xchg
mov
loope
stos
sbb
enter
jg
dec
into
hlt
jl
lret
ret
jp
in
sub
pop
or
sbb
lcall
pop
cmpsb
adc
xor
and
fcmovnbe
mov
push
pushl
inc
sbb
int
test
loope
jne
jnp
mov
enter
push
jecxz
xor
mov
shrl
dec
xor
mov
sbb
in
push
movsb
or
inc
or
call
pop
sub
popl
stos
jb
data16
inc
xchg
pop
push
sub
movsl
inc
loope
pop
inc
loopne
mov
fisttps
lret
xor
push
cmpsb
roll
ffree
sbb
mov
mov
pop
cltd
mov
jbe
in
cmpsb
mov
inc
andl
mov
adc
mov
sbb
push
repnz
inc
pop
pushf
ss
pop
jne
sarb
fsubrs
cmp
xchg
shlb
sub
ljmp
insb
jno
and
jmp
dec
inc
imul
cmp
jns
mov
je
ret
pop
cmp
adc
xchg
icebp
adc
and
jno
sub
xchg
dec
cmp
sbb
negb
mov
addb
mov
mov
xor
outsb
sub
loop
cli
xor
pop
add
bndldx
cld
jb
push
or
pop
push
ret
ja
aad
in
in
xor
push
ss
bnd
inc
movl
daa
push
dec
fptan
je
jle
lods
add
sub
shll
mov
js
dec
insl
add
xor
lahf
mov
incb
call
rorb
addb
xchg
fisttpl
xchg
daa
addr16
xchg
dec
ljmp
pop
or
sahf
push
sbb
inc
stos
idivw
imul
scas
test
push
inc
lret
add
cmp
pop
pop
mulb
testb
popf
fwait
rcl
dec
mov
mov
rolb
sbb
sub
inc
mov
mov
fistpll
or
or
xor
rolb
push
cmp
xchg
negb
bound
xchg
mov
loopne
dec
xor
not
jo
shlb
pushf
mov
cs
adc
pop
sarl
shlb
mov
xor
inc
test
pushl
lret
sbb
lods
negl
dec
mov
lds
cmp
sub
mov
pop
scas
xchg
pop
in
repz
push
mov
push
sub
shlb
rcr
jae
sbb
fs
mov
jb
mov
les
lock
clc
dec
shld
mov
loopne
mov
lret
stos
lret
rclb
or
cld
xchg
adc
testb
lods
adcl
mov
push
dec
add
or
inc
icebp
dec
shrb
adc
in
add
jg
arpl
rol
jp
shl
xchg
jmp
icebp
mov
inc
sbb
cmp
cwtl
sbb
lret
dec
dec
paddsw
xor
les
movsl
sub
push
leave
bound
add
cmovb
inc
cmc
or
pop
or
cld
cmp
push
movl
or
cmp
shll
jb
fdivs
js
addb
es
jecxz
call
push
loope
lods
das
into
lret
push
jp
push
ss
mov
jb
mov
and
adc
in
movsl
adc
idivl
mov
popl
mov
std
clc
std
call
hlt
cltd
xor
sub
mov
xor
pusha
xor
pop
fwait
mov
mov
adcl
popf
mov
inc
xor
xor
dec
popf
ja
mov
pop
jl
or
inc
popf
enter
shl
ss
push
dec
push
lock
pop
outsl
mov
andl
xchg
xchg
pop
push
push
daa
dec
or
xchg
rcrb
mov
loopne
das
sti
mov
pop
sarb
fwait
rclb
xlat
xchg
dec
jno
sub
bound
ror
cmp
ret
lods
enter
dec
dec
test
and
or
adc
mov
in
mov
or
test
out
xchg
xchg
sub
es
or
mov
inc
and
jb
in
fs
push
cmp
push
aaa
pop
push
sub
sbb
cld
in
test
adc
adc
jnp
jmp
inc
int
or
mov
ss
scas
inc
and
jp
pushf
into
or
mov
mov
and
loop
test
mov
adc
cmp
ficomps
push
inc
jae
lock
sti
int3
cmp
or
imul
popa
and
push
push
incl
sbb
or
lret
mov
ret
or
sbb
ljmp
addr16
sub
jno
lahf
dec
push
das
push
push
mov
mov
inc
leave
ja
or
adc
mov
push
jmp
inc
and
sti
mov
sub
sbb
ficoml
jno
xchg
mov
xchg
div
or
mov
mov
xor
jno
xchg
rcrb
cltd
pop
or
fisubs
pop
xor
mov
mov
pop
std
xor
test
push
jne
decl
std
movsl
pop
adc
iret
into
dec
or
je
dec
ret
lret
cmp
stos
insb
movsb
mov
sarl
stos
ljmp
add
push
ret
sbb
stc
mov
aad
jae
dec
push
jmp
sbb
jg
mov
sbb
sub
decb
negb
lret
bound
aad
mov
sub
mov
xchg
sub
inc
jne
hlt
les
mov
mov
jge
bound
push
fistpl
fisttps
add
dec
cmp
xchg
popa
push
jo
fdivr
mov
addr16
sub
push
daa
cmp
add
loop
jno
test
pop
out
push
and
pop
lods
fwait
and
repz
pop
or
jecxz
cmp
out
outsb
sar
cltd
mov
cmp
jp
ss
and
cmp
mul
nop
jge
outsl
mov
xchg
mov
fisttps
add
out
push
xchg
xchg
lods
pushf
sub
je
outsl
dec
insb
sbb
in
and
xchg
shll
inc
mov
js
addr16
push
cmpsb
scas
psubw
scas
jae
cmp
xchg
pushf
jns
xlat
add
stc
ret
fcomps
shrb
out
pop
es
bound
adc
inc
stos
imul
outsb
mov
jle
xchg
out
push
gs
in
xor
mov
sbb
jbe
aam
adc
mov
mov
xchg
mov
or
or
loopne
negl
sub
jb
xchg
adc
dec
test
jae
or
xor
jb
daa
arpl
lock
cmp
fsubrs
inc
mov
sub
lods
movsl
mov
mov
mov
cld
jns
add
shlb
pop
and
cmp
cld
pusha
mov
aad
fists
movsl
fsubrl
push
jmp
push
mov
jge
subb
mov
ret
mov
dec
mov
jp
mov
repz
movsl
add
push
inc
cs
imul
movsb
push
xchg
ret
inc
cmpsb
push
es
lods
mov
repz
mov
sar
outsb
loop
fildll
mov
mov
fidivrl
sbb
test
jle
jecxz
aaa
sub
or
shl
xor
adc
adc
shll
inc
lods
sbb
cmp
data16
mov
int3
jne
mov
out
mov
fstl
sub
aaa
or
hlt
negl
mov
scas
cmp
sub
pop
ja
xor
mov
aad
out
add
adc
out
repz
cwtl
mov
add
fdecstp
les
cltd
in
loopne
cmp
xchg
lods
mov
pop
loopne
inc
dec
gs
testb
xor
es
dec
sbb
xchg
xchg
mov
jmp
jmp
out
test
out
xchg
das
dec
adc
dec
xor
xchg
adc
sahf
mov
pop
inc
call
pop
lods
dec
inc
cwtl
addb
fmulp
xor
pop
mov
lock
xor
and
test
pop
xchg
fucom
inc
adc
mov
movsl
mov
lcall
jmp
loop
mov
inc
insb
ljmp
insb
mov
cmp
mov
pop
mov
stc
mov
stos
fisttpl
push
clc
test
push
clc
ret
inc
loope
dec
xor
cmp
movsb
cmp
mov
push
loopne
adc
adc
es
repz
add
xor
push
or
sti
ret
es
stos
mov
pushf
dec
insb
cmc
insb
pop
subl
insb
mov
dec
adc
and
in
in
shrb
mov
jo
mov
xor
mov
add
addr16
add
pminub
insl
das
out
and
push
xlat
fs
cwtl
add
lret
mov
movsl
popa
sbb
mov
mov
into
pop
rep
jno
loope
lahf
int3
and
addl
lret
mov
jnp
inc
addr16
mov
stos
hlt
lcall
dec
insb
ja
mov
ds
or
jmp
aam
mov
xor
mov
in
inc
xor
jmp
xchg
insb
shr
mov
jecxz
movsl
jns
shlb
sbb
push
ret
dec
cmp
push
lods
pop
cmp
sbb
lcall
jae
jmp
mov
jnp
or
andl
mov
ja
push
adc
cld
aam
out
leave
int3
push
gs
sub
and
cs
mov
push
mov
mov
inc
sub
push
or
loop
mov
pusha
sub
inc
cmp
pop
fcom
push
and
inc
jns
or
add
xor
xor
negb
pop
mov
andl
fldcw
cmpsl
inc
or
loopne
jae
jmp
and
hlt
add
xchg
pop
sahf
xchg
and
cmpsb
add
shrb
pushf
fucomip
js
cmp
push
cmp
clc
pop
call
inc
das
cmp
jmp
and
pusha
outsl
aaa
iret
or
jnp
ds
dec
xchg
aas
repnz
jnp
jbe
and
lret
out
repz
dec
outsl
imul
pop
lea
out
cmc
mov
cmp
push
xchg
jno
gs
jnp
sahf
icebp
sbb
fnsave
sarl
aam
cmp
jp
jae
jge
jl
push
mull
mov
xchg
js
insl
orb
imul
ja
cmp
sub
jb
stos
mov
cltd
mov
js
rorl
mov
call
cltd
mov
lret
or
insl
pushf
sbb
outsb
or
popa
outsb
xor
lods
rcll
loopne
and
xor
mov
mov
pop
sub
lret
out
ljmp
out
sub
cmpsb
xchg
push
bound
jbe
mov
mov
out
jnp
arpl
push
inc
lods
xchg
xor
add
mov
pop
mov
movsb
sti
mov
xchg
xor
mov
les
in
and
rorb
mov
pop
adc
inc
jo
push
cmp
or
idivb
mov
push
mov
jnp
int
mov
je
repz
push
push
das
cmp
sub
and
movsl
popf
jno
clc
inc
loope
cmpsl
jge
xor
test
mov
std
inc
cmp
xor
mov
add
pusha
push
xchg
mov
inc
sub
dec
xor
sub
mov
outsb
jmp
jge
dec
out
push
daa
fmuls
iret
jno
push
aaa
and
push
aaa
push
adc
xorb
pop
jg
sti
andb
sbb
jle
mov
dec
dec
push
add
test
or
mov
cmp
movsb
mov
mov
fistps
add
lods
sbb
push
cli
fdivs
in
adc
js
push
jns
sbb
pop
xor
jns
and
popa
mov
cmp
jno
decb
xor
jae
scas
add
push
xchg
cmpsb
jg
jle
int3
std
lock
mov
test
psraw
lcall
notb
or
loopne
mov
mov
movsl
cwtl
mov
xor
adc
inc
jmp
adc
mov
into
mov
daa
sarl
int
in
pusha
stc
xchg
gs
push
xor
or
or
shrb
mov
dec
push
mov
in
pop
sub
test
int3
stos
arpl
adc
mov
ret
cmpb
push
ss
lret
nop
lds
xchg
sub
rolb
nopl
int3
adc
push
repnz
outsl
mov
mov
mov
test
in
and
adc
test
loop
xchg
repnz
pop
dec
aas
ja
sub
jg
jb
lea
cmp
lahf
setae
ja
pop
mov
sbb
int
ret
jbe
cmc
out
mov
mov
daa
mov
mov
arpl
cld
fldenv
enter
nop
fistps
or
inc
or
pop
lods
xchg
xchg
xchg
jecxz
popa
inc
fcomps
jmp
jge
push
cld
sub
cld
andl
in
aad
ss
in
test
pop
dec
enter
andl
push
mov
jmp
scas
adc
pop
enter
or
sub
inc
dec
jne
cli
in
xchg
sub
pop
jb
cmp
adc
inc
fidivs
inc
aaa
xorl
push
aaa
mov
cmpsl
mov
arpl
inc
cs
dec
push
into
inc
and
ret
negl
repz
test
push
fldenv
stos
test
into
ss
shrb
dec
sub
ds
lret
addr16
mov
lds
hlt
xchg
scas
cmpsb
stos
jno
jno
call
adc
cmpsb
lret
pop
xchg
stc
scas
inc
popf
aam
mov
insb
fcomp
lods
mov
cmp
mov
sub
mov
jnp
shll
movsl
out
add
or
pushf
bound
aas
mov
and
insl
shlb
lock
movsb
leave
pop
lds
es
fsts
add
push
fwait
mov
mov
arpl
popa
xor
jmp
sti
xchg
jnp
push
or
sahf
push
enter
int
scas
sahf
mov
push
push
sahf
adc
iret
in
pop
add
xchg
les
or
xchg
jae
mov
out
dec
push
inc
push
fstpt
or
imul
mov
shlb
jecxz
mov
jbe
fdivrl
sbb
into
shll
jb
lret
in
inc
shl
lds
jle
and
dec
jb
adc
je
in
xlat
jl
inc
add
pop
das
test
data16
sbb
insb
sbbl
sub
pop
rclb
mov
and
addr16
pop
enter
out
stos
in
insl
sbb
movsl
mov
fisubrl
dec
ret
push
mov
rcrb
xlat
cmp
or
xchg
cmp
ficoms
sub
fcmovu
scas
adc
divl
adc
inc
xorl
jno
or
int3
xlat
inc
test
pop
fiadds
or
inc
inc
cvtps2pd
addb
arpl
cmp
shrl
sub
jle
stos
cltd
pop
nop
cmp
rcr
dec
inc
push
lahf
push
es
shrl
adc
push
or
jg
push
push
lret
push
xor
data16
fisubrl
mov
or
mov
pop
xlat
cmp
push
scas
stos
xor
outsb
outsl
xor
ljmp
mov
repnz
shll
enter
stos
xor
jp
xlat
in
pop
lods
loopne
push
daa
cmc
stos
cmp
xor
popa
sub
sub
xlat
repz
jns
mov
pop
movsl
gs
inc
pop
sub
pop
xor
iret
xchg
ret
daa
mov
sub
fistpll
adc
out
int
cmp
mov
lods
iret
hlt
or
iret
mov
or
insl
andl
aam
adc
add
jge
cmpb
or
aam
int3
cmp
shll
rol
inc
fistps
hlt
jmp
into
or
cmp
and
nop
inc
xor
or
cltd
mov
xchg
test
mov
mov
bound
arpl
sbb
shll
nop
in
fidivl
adcb
mov
out
imul
into
cli
cltd
loop
pushf
cmp
xor
mov
mov
les
sub
scas
out
mov
push
aaa
out
movsb
iret
push
scas
test
jmp
in
mov
faddp
into
int3
es
dec
pop
fsubrl
and
into
pop
add
int3
test
adc
les
rcll
aam
push
es
sub
inc
scas
jle
aad
jbe
jbe
cmp
xlat
push
inc
pop
popa
mov
mov
jne
add
or
xchg
sbb
cmc
sub
inc
cli
div
inc
jae
or
inc
inc
sbb
cwtl
push
mov
pop
cmpsl
dec
je
push
mov
mov
aas
scas
sbb
aad
pusha
inc
mov
jne
mov
imul
lcall
call
push
inc
mov
lret
sahf
inc
push
push
clc
push
mov
les
cltd
inc
mov
mov
pop
movsl
inc
jl
jl
lock
jae
add
cmpsl
inc
pop
jo
fcmovnbe
mov
xor
mov
push
stos
cmp
in
mov
ss
js
jnp
mov
lock
jl
xchg
cmpl
cltd
xchg
pop
push
mov
cmpsb
sub
lea
aas
pop
pop
in
push
adc
push
imull
les
xchg
movsb
push
mov
sbb
aas
lods
adc
sti
dec
into
cwtl
arpl
sbb
and
jge
adc
nop
fdivs
mov
push
orl
mov
xchg
std
push
es
mov
push
mov
xchg
jb
jecxz
imul
out
rclb
nop
mov
lcall
mov
xlat
adc
iret
daa
sbb
or
shll
insb
xor
stos
mov
add
cmc
jns
add
ret
mov
test
aaa
dec
adc
inc
pop
aad
pushf
rcrl
aam
sub
es
sub
mov
inc
and
lcall
dec
call
push
fmul
mov
stc
mov
outsb
cmpsl
sub
xchg
and
dec
sbb
addr16
fs
or
in
or
pop
cmp
ret
loop
fcomps
xor
fmull
test
xchg
jg
into
mov
daa
fdivl
and
enter
ficompl
cmp
push
and
pop
inc
daa
lret
hlt
push
jl
popf
lock
cmp
int3
push
dec
out
or
mov
or
ror
adc
push
sub
mov
push
sbb
pusha
dec
imul
aaa
xchg
daa
stos
dec
test
repnz
lret
inc
mov
data16
test
cmp
xchg
ss
adc
ljmp
pushf
fsubs
int3
repz
lock
and
cmp
xchg
cli
jae
or
lret
das
loop
stc
mov
and
lods
rcrl
pop
and
sbb
lret
ljmp
scas
movsl
sub
push
sbb
mov
dec
xchg
dec
pop
and
adc
dec
cvttps2pi
dec
daa
mov
cwtl
jecxz
std
andl
std
fnstcw
lods
data16
clc
cmpsb
jg
dec
scas
js
out
imul
popf
rorb
into
pop
cmp
cmp
adc
push
push
lea
shl
push
sub
ret
dec
repnz
inc
mov
fdivl
adc
aaa
lock
sbb
jnp
mov
daa
aam
add
jmp
mov
mov
shlb
andl
cmpsb
xchg
stc
aam
xchg
repnz
push
sub
ljmp
fsubrs
jge
fwait
mov
lret
les
sbb
xor
call
lock
push
test
mov
mov
add
nop
jp
adc
fidivl
adc
lds
outsb
je
popf
shlb
lahf
mov
lahf
pop
aaa
adc
sub
jl
scas
cmpsl
out
sbb
xor
lds
inc
nop
xchg
movl
cmp
js
mov
jp
mov
jge
xchg
push
sti
add
stos
jns
bound
les
pop
js
insl
negl
sub
sbb
ficoml
imul
es
add
add
es
add
cmc
sbb
addr16
cmp
lods
dec
in
aas
cmp
call
lret
loope
mov
or
fs
mov
sbb
cmpsb
insl
jmp
inc
out
rcll
dec
orb
aaa
mov
lret
mov
clc
jae
mov
ret
add
xor
xor
jno
lods
dec
aam
movsb
aad
loope
push
fs
push
inc
lock
xchg
mov
adc
lock
adcb
mov
ret
test
out
outsl
dec
ds
out
dec
cmp
data16
inc
and
dec
cmpsb
loop
shll
pop
faddp
mov
aaa
cwtl
mov
and
dec
adc
mov
bound
mov
scas
iret
inc
sub
dec
push
add
negl
scas
lds
ja
push
sbb
lods
popf
mov
adc
imul
mov
lock
sti
and
mov
in
push
enter
loopne
clc
add
mov
sbb
jle
push
insb
insl
mov
xchg
jo
push
push
adcb
push
xchg
cmpl
arpl
inc
mov
lahf
sub
jns
aas
or
xlat
push
pop
scas
mov
pop
fildl
push
pop
and
push
inc
int3
push
jl
aad
or
flds
in
xor
ss
fsubs
push
xchg
fsubr
filds
sub
cmp
xchg
sti
int
pop
mov
and
sub
mov
clc
sub
insb
and
pop
mov
push
mov
sbb
and
test
jbe
mov
imul
fwait
movsl
cmp
cmpsb
mov
pusha
sbb
or
loopne
cmp
mov
mov
dec
or
jnp
xchg
enter
jmp
dec
cmp
and
jne
sbb
inc
mov
aam
push
rcrb
stos
jno
push
stos
push
xor
xor
mov
ficompl
insb
cmp
pop
loopne
imul
xchg
push
fistpl
addb
idivl
sbb
popa
scas
cld
dec
jge
pop
fwait
scas
jb
ret
and
cmc
cmp
pop
inc
or
adc
movl
js
mov
insb
mov
dec
lcall
push
adc
fcoms
clc
push
inc
push
ljmp
shlb
and
pushf
imul
int
dec
xchg
and
lahf
push
sbb
jmp
les
mov
fcoml
mov
ret
xchg
je
fwait
and
mov
das
int3
sbb
lods
jl
push
lcall
data16
ret
cmpsb
sarb
imul
dec
mov
cmp
stc
inc
orl
cltd
les
pop
out
fdivp
jge
lods
test
pop
xchg
movsb
mov
cmp
test
and
aam
cwtl
into
lret
mov
roll
jnp
movsl
xchg
adc
imul
inc
mov
call
inc
rclb
inc
loope
cmp
arpl
add
cwtl
push
shll
in
cli
test
pop
in
jg
pop
fmuls
xor
fnstsw
test
insl
lcall
cmp
push
mov
pop
lock
lcall
push
jae
clc
dec
xchg
mov
loopne
mov
adc
mov
and
icebp
sub
in
std
xor
cs
sbb
int
movsb
fnstsw
bound
js
jae
arpl
add
cmpb
ficoms
repz
xchg
xchg
dec
lock
mov
add
into
mov
test
das
movsb
mov
mov
out
push
jl
popa
gs
into
push
jmp
push
jb
and
push
lcall
lods
xlat
jbe
addl
imul
and
dec
mov
sti
sub
jmp
scas
cmc
mov
push
fs
xor
test
mov
push
out
inc
pop
pop
fwait
and
add
add
arpl
ret
ds
mov
mov
pop
test
lret
mov
out
cmp
or
jle
int3
rorb
fisttpl
mov
adc
add
rorb
cmp
ds
testb
xlat
or
pop
frstor
cwtl
mov
repnz
push
cmp
and
mov
xchg
xchg
mov
sti
test
lds
sahf
lret
enter
and
lret
clc
xchg
or
in
pop
inc
ss
push
cwtl
imul
sbb
adc
in
pop
sub
jbe
and
adc
movsb
dec
or
pop
and
lahf
jmp
int
dec
pop
cmp
cmp
popf
mov
test
pop
sub
inc
and
jno
or
enter
fnstenv
ljmp
mov
out
mov
push
movsl
add
int
lahf
in
sub
lahf
lahf
sbb
or
sub
fldl
add
stos
and
and
pusha
repz
cli
sub
and
mov
xchg
inc
jo
dec
push
jo
incl
int3
repnz
and
push
or
xchg
adcb
ror
sbb
lret
xchg
sub
out
jmp
cmp
xor
sub
out
and
and
adc
jno
sbb
sub
mov
mov
lcall
sub
add
xchg
cmp
enter
xor
push
insl
cmp
jge
mov
out
inc
es
xor
dec
lret
dec
popf
and
mov
add
xor
aam
aas
mov
pop
mov
adc
inc
aas
xchg
cmp
xchg
push
xor
add
rclb
arpl
xor
mov
testb
cmp
mov
into
jnp
adc
pop
lahf
pop
mov
lods
nop
adc
out
ret
loope
push
nop
sti
inc
and
pusha
sti
std
stc
push
mov
xor
dec
push
dec
adc
mov
in
mov
adc
dec
push
out
sbb
push
fbstp
lods
mov
data16
xor
imul
shr
xchg
in
stc
mov
lds
stc
adc
rolb
push
mov
adc
jge
cli
loopne
test
fistpll
mov
push
lcall
std
fucom
scas
push
mov
cmpsl
jae
adc
xor
bswap
dec
sbb
call
ja
pop
jne
pop
rolb
and
and
loopne
cmp
lcall
pxor
in
xchg
repz
mov
and
gs
outsb
pop
add
jmp
and
mull
mov
les
cmp
bound
xchg
pushf
ret
push
mov
mov
adc
mov
js
movsb
enter
mov
jo
outsb
push
sarl
cmpsl
lds
mov
cmp
jno
and
mov
push
fnstenv
fs
jge
test
mov
stos
sub
and
lcall
add
stos
mov
mov
xchg
adc
test
sub
bnd
repnz
icebp
add
ljmp
fnstcw
xor
add
and
xchg
fidivs
pushf
aaa
xchg
std
outsb
xchg
pop
cs
in
ss
test
adc
fmuls
mov
cwtl
cmp
mov
js
es
cwtl
adc
sbb
cld
out
jae
test
loopne
push
or
jmp
push
mov
lock
ja
dec
jae
jb
jne
push
mov
in
jb
push
aaa
pop
daa
inc
cmc
pop
in
icebp
into
mov
push
in
inc
pop
pop
dec
xor
insb
rol
lods
mov
mov
pop
xchg
cmp
mov
and
imul
cmovno
out
out
inc
mov
addr16
aad
arpl
jp
test
jp
inc
sbb
and
cmpsl
pop
pop
cmpb
fwait
and
dec
shl
add
movsb
mov
imul
jbe
sbb
scas
or
divl
in
xchg
popf
fidivrl
shr
jle
sbb
push
das
mov
rorl
and
imul
jnp
popf
stos
testl
sbb
jnp
cmpsl
cwtl
js
push
xchg
fsts
loope
stc
je
sahf
into
mov
imul
dec
lock
and
mov
pushf
push
xchg
arpl
pushl
insl
mov
scas
dec
xchg
lahf
mov
mov
cmp
jo
push
jl
pop
jp
enter
jbe
mov
xchg
push
dec
mov
cmp
inc
jmp
inc
xchg
add
or
int
arpl
scas
loopne
or
or
rol
incl
sbb
lods
int3
cli
cs
jne
fcomps
in
push
inc
pushf
in
sub
arpl
mov
pushw
lea
fcmovu
jnp
imul
xorb
pop
cltd
out
add
jge
inc
sub
xor
jecxz
and
push
dec
cmp
int
iret
push
fcoms
pushf
ret
sub
into
bound
and
ret
orl
test
dec
lret
pushf
dec
divl
xor
insl
imul
push
xchg
pushf
dec
push
movsb
dec
xchg
aaa
push
pop
outsl
mov
ret
jnp
out
pop
mov
mov
adc
sbb
mov
pop
aaa
clc
jmp
inc
mov
shrl
test
cmp
repnz
cmp
sti
pop
rorl
je
xchg
add
adc
mov
sbb
imul
ret
js
inc
rcr
testl
fistl
add
adc
and
mov
stc
mov
in
xor
sub
cmpsb
push
cmp
pop
ret
ds
push
clc
mov
mov
push
mov
test
mov
aam
mov
mulb
ret
lcall
mov
cli
in
cli
cmp
cmp
xchg
jecxz
and
push
pop
xchg
ja
or
inc
adc
mov
and
aam
aad
arpl
in
add
outsb
stc
jno,pt
imul
mov
lea
mov
sbb
add
aaa
xchg
lret
push
pop
lock
adc
stos
mov
adc
push
sub
scas
testl
ja
adc
shll
shrl
xchg
aaa
jle
xor
cld
in
pusha
jecxz
pusha
imul
jmp
bound
adc
sub
push
push
pop
test
xchg
jge
or
mov
push
pop
cld
pop
enter
dec
push
push
jbe
add
mov
jbe
jl
cwtl
pushl
pop
cli
inc
test
pop
jecxz
ret
lods
fistl
jbe
jns
and
mov
mov
add
jnp
and
lock
aas
insl
adc
in
add
jb
push
je
xchg
aas
pushl
pop
cmp
ja
lret
pop
push
push
mov
sub
mov
les
push
push
push
mov
das
in
int
das
mov
in
mov
scas
pop
in
pop
in
push
stc
stos
jmp
test
pop
sti
sub
cmc
or
sti
xor
outsb
into
cmp
add
ret
push
cmc
push
mov
lods
mov
mov
movsb
stos
cmpsl
jnp
pushf
loop
mov
adc
sbb
or
xchg
and
add
or
fs
gs
sbb
test
out
jmp
lret
mov
xor
sub
pop
push
imulb
ret
sbb
xchg
inc
adc
out
mov
movsl
push
rorl
out
hlt
xlat
pop
cmp
stc
arpl
fwait
mov
jbe
add
mov
dec
jg
loope
jge
mov
ss
outsl
lahf
imul
dec
cwtl
out
lret
mov
inc
mov
jnp
fwait
cmc
jl
jns
arpl
lret
push
add
adc
push
ljmp
cmpsb
inc
adc
and
cld
adc
mov
sub
mov
dec
test
lcall
call
inc
and
mov
mov
jns
mov
inc
lret
sahf
es
inc
adc
adc
add
icebp
fwait
jmp
push
insl
cld
loope
xchg
mov
cmp
cltd
xor
adc
pop
mov
popa
call
cmp
scas
xchg
dec
clc
dec
aam
je
pop
add
and
mov
lret
out
and
dec
or
sbb
mov
push
loopne
dec
xchg
repnz
cmp
xor
pop
sub
inc
lcall
and
lds
cmp
xchg
and
cmp
and
dec
decb
rcl
repz
pusha
adc
add
je
test
sti
das
mov
aad
sbb
test
mov
mov
fildll
pop
cmpb
cltd
fwait
aaa
mov
mov
sbb
daa
pusha
dec
ror
add
dec
in
das
fst
sub
mov
xchg
and
cmp
cmp
ret
test
sub
xchg
sub
popa
imul
enter
lods
cmp
mov
rclb
mov
pushf
icebp
xor
dec
outsl
fidivrs
outsb
into
sub
add
inc
pop
cli
pop
inc
psrad
dec
or
mov
outsb
add
jecxz
xchg
sbb
sub
dec
lock
and
inc
js
pop
inc
push
mov
comiss
sbb
lcall
xchg
jle
imul
lahf
sub
mov
dec
ficoml
fstl
push
shrl
push
lods
xchg
add
or
imul
xchg
shrb
pop
lret
xchg
sub
std
ret
sarl
cmpsb
xor
adc
push
and
imul
out
sbb
or
sahf
mov
sub
inc
push
cld
das
insl
scas
jecxz
add
iret
cmc
in
and
mov
mov
and
cli
sahf
cmp
loope
sub
push
in
adc
sub
xor
lret
xchg
and
mov
std
ja
pusha
ss
pop
push
mov
iret
je
inc
push
ja
in
int
loope
cs
pop
lock
push
lods
fwait
cmp
mov
rcr
xchg
lds
lcall
sahf
cmc
jp
cmpsb
in
xchg
add
cmc
ljmp
es
xchg
dec
cli
mov
loop
push
idivb
int3
dec
cmc
or
in
push
dec
lahf
sbb
mov
out
icebp
pusha
push
mov
int
cmc
sub
movsl
push
insl
lret
mov
push
mov
mov
aam
jmp
pop
mov
std
xor
push
repz
add
leave
movsl
sar
inc
push
pop
lock
lcall
cmpsb
test
push
sahf
and
sbb
jmp
xchg
mov
inc
mov
arpl
dec
jmp
push
jno
insb
mov
imull
add
icebp
repnz
ret
repz
loope
inc
stos
pop
scas
sar
dec
adc
outsl
std
mov
xchg
rorl
into
in
xchg
lods
lods
das
out
or
mov
lahf
or
push
sbb
fisubs
jb
pop
or
dec
mov
inc
loope
sub
in
loopne
into
cmp
pop
movsl
jb
dec
enter
mov
push
cmp
add
xchg
lea
cli
jmp
mov
inc
push
shrl
push
push
ficomps
movsl
test
bound
jg
lock
jecxz
stos
jno
pop
cltd
jecxz
mov
cmp
jb
xchg
push
aam
pop
mov
fmuls
xchg
scas
adc
lods
fdivrl
int
aad
pop
je
fsubrl
cs
test
jecxz
push
inc
enter
ja
in
ret
mov
jle
out
dec
fsub
cmp
adc
cwtl
adc
sbb
fisubs
je
inc
loop
lods
push
faddl
xchg
cmpsl
xchg
push
rolb
mov
inc
imul
aaa
in
insb
out
fisubl
mov
mov
mov
pop
mov
mov
pop
in
jge
inc
cmc
leave
call
mov
pop
inc
xor
pop
dec
xor
outsb
mov
cltd
je
push
or
jmp
or
pusha
add
enter
int3
sbb
add
xchg
mov
and
or
aaa
fnstcw
inc
popf
test
icebp
pop
dec
movsb
jbe
ds
lds
pop
orb
jno
add
je
fists
fdivrl
lock
mov
pop
shll
mov
xchg
xchg
push
jecxz
sub
jl
scas
mov
sti
xchg
popf
push
pop
ja
fs
bound
insb
mov
or
pop
test
and
sbb
or
icebp
sub
mov
sbb
jl
rcrb
cmp
lock
sub
push
frstor
push
cmp
cmpl
or
cmp
fwait
add
cs
test
std
mov
stos
into
mov
pop
push
out
test
push
cmp
xor
or
add
cli
xchg
dec
nop
pop
or
std
jge
rclb
lock
frstor
or
jmp
nop
cmp
add
mov
dec
fisttps
xor
push
mov
leave
inc
dec
push
sti
cmpsb
add
in
stos
push
xorb
dec
jb
inc
push
test
sbb
cld
fs
out
cmpsb
cmpsb
jnp
popa
sbb
and
cmpsb
sub
ret
add
cli
sbb
jnp
fists
push
scas
scas
mov
pop
or
mov
inc
xchg
cmpsl
rorl
movsl
or
sub
adc
out
test
int3
hlt
in
into
and
pop
test
inc
andb
lret
pop
lds
xor
cmp
jmp
cmp
loope
es
mov
add
ljmp
cmp
mov
testb
jae
in
pusha
mov
ds
sub
xor
test
mov
push
jp
pop
xchg
ss
xchg
sub
rcrb
mov
cmpsb
add
pop
sub
mov
rcrl
pop
pop
inc
clc
cs
push
aaa
push
testl
icebp
cmpsb
int3
inc
push
sub
and
std
jae
std
cmp
shr
add
push
dec
lahf
cmp
andl
cmpsl
or
or
sti
dec
stc
rcrl
pop
out
icebp
mov
dec
and
pop
pop
int3
mov
in
packuswb
imulb
pop
enter
and
jmp
mov
push
lds
or
add
stos
cmpb
push
popf
mov
mov
stc
add
ss
inc
xor
mov
pop
in
dec
cmp
inc
jae
sub
jp
push
stos
jb
hlt
and
mov
pusha
cmpsl
test
scas
xor
outsl
out
pop
inc
xor
shlb
ror
fistps
adc
jle
sbb
loopne
popf
and
jo
idiv
xor
loopne
mov
sbb
outsl
inc
push
into
and
mov
hlt
adc
stos
cmc
cmp
inc
cmpsl
lret
cmp
jno
shlb
js
inc
jbe
xlat
inc
cld
ret
repnz
cmp
sub
jge
insb
mov
icebp
xchg
sub
ss
xlat
push
push
lds
dec
or
lcall
push
xor
mov
lods
jnp
mov
icebp
test
hlt
xlat
aam
lock
das
jnp
in
hlt
sub
xor
pop
jns
or
sub
pop
sbb
mov
lret
push
dec
lods
mov
lds
sahf
mov
adc
fisttpl
addr16
cs
into
out
push
into
sub
gs
xchg
shll
jge
in
aas
stos
adc
mov
cmpb
fwait
cmpsl
xchg
addr16
pop
cmpsl
mov
mov
popf
mov
hlt
mov
int3
xchg
sarl
cmp
stos
push
sbbl
rolb
mov
xchg
loopne
or
cli
push
mov
cmpsl
inc
dec
pop
mov
pushf
mov
into
xchg
cltd
jne
call
repnz
and
jbe
push
gs
outsb
inc
cmc
fisttpll
pop
jo
push
mov
adc
jge
jb
add
nop
fistpll
push
loop
lods
jge
add
mov
add
add
cmpsl
divl
lea
jne
cmp
daa
pop
fldcw
sbb
xchg
iret
pop
mov
stc
xchg
loopw
fldenv
mov
xlat
push
out
outsl
stos
mov
pop
lea
dec
mov
jnp
adc
cmpsb
cmp
mov
int3
adc
jb
mov
stos
sbb
sti
xchg
mov
ret
movsb
jg
cli
jne
xchg
xchg
adc
sbb
push
mov
sub
pop
popa
lret
andb
lods
testl
jne
imul
je,pt
or
jp
int3
and
insl
mov
jg
sti
sti
lods
inc
add
mov
aaa
sub
push
popf
jo
inc
aam
jmp
or
cs
cli
fdivrp
fisubrl
movb
xchg
jl
loop
fildll
fstpt
mov
push
push
out
sub
jecxz
out
decb
push
ja
aas
push
adc
cld
mov
xchg
out
dec
imul
mov
stc
sbbl
lods
sti
insl
stos
cmpsb
xchg
fsts
call
in
dec
pop
nop
roll
push
mov
or
pop
bound
and
mov
inc
xchg
jl
pop
pop
test
cmpb
jl
mov
and
inc
pop
or
inc
mov
rcll
rorl
shlb
les
mov
xor
lods
dec
arpl
add
xor
int3
dec
out
rol
ret
dec
std
insl
popa
int3
mov
inc
ljmp
jo
cmc
dec
ror
xchg
outsb
push
das
push
jno
arpl
test
cwtl
mov
ret
shll
jnp
xchg
lret
or
dec
jnp
cmp
insb
mov
mov
cmp
xor
cs
data16
insb
out
inc
xchg
sahf
mov
mov
xor
and
jmp
jb
cmp
cmpsl
stc
push
std
test
shlb
xchg
adc
xchg
xor
out
sbb
pop
mov
and
popf
aam
push
into
sarb
pop
xlat
stos
adc
jbe
push
hlt
push
loopne
test
test
in
xor
add
push
add
pop
push
cmp
xchg
mov
inc
mov
adc
test
stc
js
and
stos
lock
pop
icebp
loope
ja
inc
add
pop
cld
popw
int
aam
inc
in
imul
es
xchg
and
enter
inc
jbe
and
and
cmp
pop
imul
add
xor
cwtl
in
jg
dec
mov
insl
cwtl
xchg
cmp
sub
enter
inc
xchg
pop
int
loopne
push
paddw
xor
xchg
test
pop
sti
pusha
es
fdivs
in
outsl
dec
adc
incb
inc
out
pop
lret
aam
sarb
inc
or
push
xlat
xor
jle
inc
adc
push
push
or
movsl
outsl
inc
jp
cmp
jg
mov
cmp
inc
cltd
xchg
and
pop
cmpsb
test
stos
in
scas
cmp
int3
and
mov
pop
jge
hlt
jmp
in
aaa
pop
ret
loop
add
cmp
lcall
lret
int3
jle
shll
cmc
ret
add
call
cmpsb
add
into
jecxz
and
sub
js
mov
aad
sub
std
data16
pop
fbld
jne
pop
and
dec
mov
enter
sub
mov
mov
lcall
nop
pushf
jp
inc
outsb
mulb
add
std
movsb
and
jo
je
jecxz
addr16
stc
adc
stos
repz
inc
je
lret
and
stos
xor
pop
sbb
fs
jle
cld
lret
and
add
cmp
add
popf
rorl
jle
leave
add
add
sub
dec
sbb
icebp
push
cltd
jmp
lods
xchg
flds
popf
ret
sub
or
ljmp
adcl
inc
lea
or
data16
xchg
or
fcompl
push
xor
iret
jge
mov
stc
mov
xchg
push
xchg
ljmp
ret
mov
cwtl
cld
shl
popf
aam
scas
or
lcallw
mov
lcall
outsl
movsb
add
inc
sbb
hlt
stos
adcb
mov
leave
xchg
xor
pop
minps
pop
mov
mov
jae
mov
imul
mov
sti
sbb
jg
xchg
mov
mov
or
incl
sbb
push
out
push
mov
fisubrs
xchg
sub
sbb
enter
mov
shrl
insl
into
in
mov
ss
jecxz
push
aaa
test
cmc
mov
lcall
das
xor
cmpsl
sbb
loop
sub
push
sbb
xchg
push
sbb
xchg
lock
jg
or
gs
movsb
push
push
adc
daa
outsb
ret
pop
stos
inc
cld
cld
mov
sbb
or
dec
mov
addl
dec
cmpsb
mov
xchg
ss
aam
in
scas
add
mov
mov
or
cmp
insb
ja
dec
bound
cmp
pop
dec
xor
xor
insl
repnz
adc
xchg
push
cmpsb
mov
push
push
nop
dec
mov
test
js
aaa
rcrb
imul
xor
test
lock
pop
mov
and
push
mov
mov
outsb
out
aam
cmp
xchg
inc
inc
mov
mov
and
jb
leave
repz
inc
std
call
mov
addl
popf
lds
push
dec
mov
aam
cld
cld
mov
sarl
sbb
stc
jne
push
mov
and
cmp
mov
cmc
push
es
pop
addr16
mov
pop
xor
xchg
andl
mov
pop
add
stos
dec
mov
popf
cmp
aad
xor
push
dec
cs
jbe
and
jp
jb
cs
leave
jnp
mov
mov
cmp
rcrl
inc
sarl
mov
or
xorl
dec
xchg
push
lcall
adc
jp
ret
sbb
add
push
add
out
test
cmpb
std
mov
push
stc
xor
mov
sbb
and
in
and
mov
mov
pop
leave
mov
adc
adc
xchg
imul
sub
call
cmp
pop
into
jno
add
stos
pop
movsb
push
ljmp
xor
jno
in
cmp
cmp
push
enter
fstpt
lret
lahf
repnz
mov
fisttpll
imul
and
dec
movsb
push
cmpl
pop
cmp
xchg
les
pusha
out
mov
inc
lret
xchg
xchg
out
xchg
xchg
add
movsl
mov
out
xchg
jne
xchg
out
mov
pop
adc
ret
cmp
jno
sahf
cmp
mov
sbb
icebp
jbe
and
js
xlat
incb
fsubrl
push
xor
jbe
or
push
add
movsl
pushf
xchg
fwait
lahf
push
pushf
pop
cmp
xchg
mov
cltd
mov
sbb
hlt
jg
movsl
xor
imul
mov
or
sbb
and
lret
fisubrl
jp
and
loopne
rorb
test
add
add
nop
adc
repz
imul
push
inc
cltd
movsb
dec
mov
ljmp
mov
mov
pop
push
pushf
jecxz
mov
shll
es
and
pop
adc
dec
push
jo
sub
jecxz
or
cmpb
xor
adc
aaa
adc
popf
sarb
mov
std
mov
addb
push
push
jge
fstps
repnz
lahf
in
cmp
ja
dec
push
pop
clc
call
mov
out
in
cmp
sbb
cmp
repz
leave
bound
test
les
and
test
ffreep
pop
popa
not
int3
incb
fidivl
daa
push
incb
leave
or
ret
lcall
push
jno
sub
sbb
lahf
mov
addr16
orb
rcll
xor
push
arpl
into
enter
push
negl
jbe
mov
mov
add
das
xchg
bound
sbb
sti
jg
movsb
sbb
fwait
mov
stos
scas
xchg
fcompl
sub
negl
push
sbbl
and
and
mov
jbe
es
gs
pop
or
push
int3
mov
ja
stos
rorl
xlat
xlat
and
inc
les
mov
mov
ljmp
fldt
mov
stos
inc
push
push
mov
sbb
cli
dec
push
shrl
jbe
into
iret
adc
mov
cwtl
in
sahf
nop
imul
xchg
addr16
push
and
sbb
or
flds
and
mov
repz
xor
xor
ficompl
xor
fbstp
cmp
jbe
jmp
cli
inc
jmp
add
sarb
xchg
mov
mov
or
sarl
outsb
xor
stos
adc
inc
addr16
push
flds
push
test
fdivrs
or
ja
test
daa
xlat
or
sbb
lret
ljmp
jge
ret
popf
mov
jg
push
mov
jecxz
outsl
jnp
mov
mov
movntps
sarl
scas
inc
popa
fdivrl
cs
ljmp
inc
lahf
in
xchg
cmovge
test
jmp
fnstsw
in
fs
adc
xor
lcall
mov
movsb
dec
clc
loopne
adc
into
mov
jmp
les
test
mov
add
ljmp
add
test
xchg
fcompl
sub
ja
inc
lods
mov
outsl
iret
jo
fsubrl
daa
adc
push
mov
push
or
in
add
mov
adc
dec
push
and
adc
pop
push
cmpsl
adc
mov
xor
jno
xchg
xor
rcl
je
adc
inc
push
push
mov
inc
push
fimuls
cli
arpl
lret
ss
mov
mov
gs
push
or
sub
les
add
adc
jnp
in
push
push
sahf
push
push
inc
or
test
push
mov
jbe
aam
pop
jecxz
pop
add
iret
sbb
insb
push
dec
rolb
xchg
pop
mov
jno
aaa
dec
mov
push
sbb
scas
ror
imul
int
cmp
mull
fisubs
sub
pop
int
pop
fidivs
pop
dec
cwtl
cmp
mov
jecxz
inc
and
or
or
ds
cmp
jbe
mov
repz
pushf
loopne
pop
iret
sbb
in
fwait
jle
aam
pop
sbb
mov
mov
jmp
jae
fmulp
movsl
fisttpl
incb
int
or
xlat
dec
pop
xchg
dec
add
loope
shr
movq
pop
adc
call
aam
aaa
mov
shlb
hlt
sub
mov
movsl
add
ud0
or
jp
shlb
test
pushf
ljmp
adc
push
mov
sbb
loope
stos
jmp
pop
mov
leave
mov
add
in
push
icebp
adc
movsb
push
movsb
adc
pushf
and
inc
sub
icebp
out
jg
nop
lahf
adc
pop
and
loope
add
and
push
push
push
mov
lods
into
mov
adc
cmp
loopne
mov
pushf
out
mov
in
pop
es
mov
inc
dec
add
ret
paddusb
jae
mov
in
mov
mov
popf
push
lret
dec
in
jmp
dec
or
cwtl
stos
sub
or
aas
jg
mov
mov
nop
jg
mov
xlat
and
es
scas
adcl
push
in
adc
inc
fbstp
xchg
out
mov
mov
call
adc
add
adcb
fistpl
xchg
jge
dec
push
pop
and
jmp
cmp
fwait
je
outsb
int
sub
sub
xor
jnp
lods
out
jmp
mov
test
sbb
xor
pop
adc
in
cmp
fisubs
pop
ret
loop
push
dec
xchg
and
popf
add
adc
ljmp
hlt
push
jnp
cs
add
jae
mov
mov
lds
call
sub
das
cmp
pop
stos
cmp
add
in
push
cmc
gs
mov
lds
pop
pop
out
fucom
add
jno
or
popa
or
movq
or
jno
scas
insl
fwait
lret
cli
add
mov
ss
ljmp
inc
out
jg
mov
mov
out
pop
xor
aaa
sub
lcall
dec
aaa
outsb
es
lods
xchg
call
cmp
xchg
movl
push
adc
push
in
jbe
insb
es
push
fistpll
fistpll
sbb
pop
pop
gs
add
lcall
psllq
out
out
cs
lea
int3
mov
daa
int3
mov
push
stos
cmc
mov
sti
adc
add
cmpsb
fstl
pop
cmc
mov
shlb
movsl
in
gs
dec
ss
pop
popf
outsl
dec
dec
ret
lret
pop
mov
movsl
or
cmp
jle
stos
sub
out
es
dec
sti
into
adc
inc
aad
stc
stos
pop
inc
inc
nop
and
insb
jno
jg
jb
in
sbb
sbb
or
lock
sub
shll
cmp
push
fildl
sbb
inc
dec
imul
add
lods
scas
mov
std
inc
into
adc
dec
adc
in
dec
mov
call
mov
mov
inc
cmp
in
cltd
fidivrl
loope
xor
testb
popa
outsb
or
loopne
fwait
data16
mov
loop
cmc
push
cmp
scas
movsl
xor
mov
push
or
cmc
fsub
ret
inc
dec
in
out
inc
mov
sbb
scas
dec
inc
mov
loop
imul
cmc
mov
jmp
es
xor
daa
xlat
test
ja
iret
jns
add
andb
push
inc
lock
xchg
push
test
shll
je
push
push
bnd
loop
stos
shll
push
pop
jle
mov
push
xorb
mov
aaa
jp
fwait
mov
pop
or
daa
or
cmc
int3
inc
stos
loope
jecxz
adc
fidivs
push
and
cmc
sbb
and
or
dec
loop
out
jecxz
bound
mov
sahf
push
pop
mov
or
dec
and
imul
rorb
push
push
aas
xor
outsb
repz
popa
test
test
dec
lret
sarl
push
and
std
xor
adc
pcmpgtw
add
mov
xchg
jnp
enter
sti
fisttpll
xor
pop
out
fwait
rcrb
mov
stos
add
fmuls
cs
je
ss
sub
adc
cli
mov
dec
daa
pop
int3
adc
push
mov
sarb
pop
mov
mov
cmp
cmp
dec
mov
outsl
adc
push
sahf
mov
sahf
dec
into
inc
mov
push
cmp
mov
arpl
or
sbb
cmp
adc
cmpsb
xchg
ja
loope
sbb
bound
test
rol
loop
bound
push
inc
add
mov
dec
mov
dec
ss
xchg
jmp
mov
clc
sub
in
mov
pop
and
jne
clc
or
cmp
xor
sub
cmpsl
js
push
daa
lea
mov
sbb
lea
mov
lret
sbb
adc
or
inc
xchg
mov
fsub
lock
scas
jnp
or
fwait
jg
jo
xor
std
scas
cwtl
inc
mov
das
add
mov
jg
test
dec
je
repnz
push
lret
adc
jp
sub
inc
cmp
mov
aaa
adcb
xchg
inc
xor
dec
sub
loop
int
push
or
in
in
sub
sahf
push
inc
xor
inc
mov
xor
sub
stos
mov
rcl
pop
push
xorl
or
std
sbb
inc
lcall
sbb
in
adcl
sbb
mov
cmp
add
int3
jmp
pop
insb
leave
pushf
fxch
xlat
pop
out
dec
loope
sub
sub
sbb
jmp
cmp
std
lahf
fidivs
adc
fists
enter
das
add
inc
jne
jmp
cmp
pop
jb
cmp
sbb
inc
jb
jp
push
push
cld
or
pop
push
sbb
jne
mov
pmaxsw
mov
shl
inc
ljmp
mov
lds
sub
rorl
jecxz
jmp
xor
sub
es
jo
lret
jae
cli
lretw
mov
dec
xchg
popa
popa
xchg
test
cli
and
push
dec
lock
mov
xlat
jl
in
popf
mov
push
adc
out
cmpsb
nop
fldl
or
add
sub
mov
mov
pop
nop
mov
push
movsl
fidivrs
sub
mov
in
pop
mov
cmp
xor
rcrl
decl
inc
rolb
sahf
xor
push
sahf
test
in
pop
mov
cmpsl
lret
adc
pushl
sub
outsb
test
andb
jae
addr16
fists
jge
test
pop
testl
aaa
add
rcr
jl
mov
or
inc
ljmp
push
jne
popa
inc
add
cmp
xchg
push
push
mov
lods
ja
mov
popf
test
repz
or
add
push
int
cmp
xor
add
mov
sbb
int3
sub
inc
xchg
pop
punpckldq
and
mov
xchg
and
xchg
mov
out
les
mov
mov
movsb
call
ljmp
cltd
lea
sbb
test
inc
inc
daa
lar
out
mov
cli
lcall
xchg
subl
jl
int
xchg
adc
mov
mov
mov
dec
and
clc
dec
int3
repnz
mov
xor
movsb
test
adc
shrb
push
xchg
shrl
push
inc
dec
jge
dec
mov
gs
xor
test
xchg
ljmp
lea
dec
xchg
roll
dec
ja
hlt
hlt
stos
fcomip
scas
lcall
stc
icebp
adc
sbb
sti
cli
and
movsb
sub
mov
inc
cmpsl
mov
out
out
xchg
in
pop
jno
fsts
bound
mov
in
adc
aas
dec
xchg
cli
aam
ja
cmp
push
mov
into
mov
lea
loope
mov
clc
lea
sahf
les
jp
je
mov
mov
daa
lods
daa
mov
pop
js
test
adc
adc
fdivrs
lcall
jo
es
es
inc
and
aad
movsl
push
and
scas
cmp
int3
mov
jo
stc
fsubrp
in
scas
stc
mov
fnstenv
pop
xorb
arpl
sub
and
mov
rcrl
or
dec
sub
and
cmpsb
lock
fwait
xorl
stos
dec
and
clc
scas
jp
dec
shrl
pop
pop
aam
test
mov
inc
mov
push
stc
mov
pop
jecxz
add
push
int
loope
in
out
pop
or
fadds
in
pop
popf
pusha
jne
inc
cmp
sbb
dec
jl
pop
mov
pop
getsec
xor
mov
aad
jge
test
fisttps
pop
je
adcl
mov
sub
dec
into
sub
sub
out
push
testl
shl
test
loopne
mov
cmp
inc
mov
sahf
addr16
add
stos
mov
dec
aad
bndstx
jnp
ljmp
jno
fnstenv
insb
inc
pop
or
adc
jo
push
popf
pop
jns
frstor
je
or
jb
andl
nop
jle
gs
sbb
sub
rcr
cmp
aas
add
sbb
jl
iret
imul
mov
sbb
lods
add
inc
mov
jp
dec
imul
loopne
jns
push
repz
cmpsb
rcll
xor
pop
inc
sbb
out
orl
test
test
and
inc
int
popf
lods
pop
mov
insb
jb
outsl
adc
orl
invd
mov
sub
pop
in
cmp
je
push
fsubrs
sub
sub
sbb
les
cmpsl
sbb
enter
lds
xor
sbb
loop
jp
ror
in
xlat
pushf
cmp
fistpl
cltd
stos
adc
pop
mov
push
mov
mov
or
aas
push
loopne
xorl
jecxz
pop
xchg
fdivl
mov
lds
negl
and
push
jecxz
pop
inc
mov
imul
jl
fisttpl
dec
and
xchg
and
int
nop
mov
sbb
xor
hlt
mov
push
xlat
inc
cmc
cwtl
int
pop
lods
into
and
ret
call
mov
sub
or
lcall
jle
out
pop
sbb
dec
mov
enter
stos
sub
rcl
popa
xchg
dec
jnp
data16
mov
xchg
popa
aas
jnp
or
mov
adc
std
mov
adcb
jne
jno
inc
xor
cmpsl
push
int3
fisubl
push
aam
insl
loopne
out
xchg
popl
xor
les
fdivrp
xlat
adc
xor
in
sub
push
daa
or
and
inc
and
lcall
ret
sub
push
sbb
mov
dec
xchg
mov
pop
aam
mov
inc
xchg
lret
mov
stc
jmp
es
js
push
or
xor
lret
test
xchg
das
jo
dec
add
and
or
loopne
dec
subb
cld
cmp
in
test
jae
scas
jge
out
rep
ret
adc
fcoms
in
pop
jo
aad
adc
inc
iret
mov
push
xchg
add
inc
jns
pushf
out
lods
jg
jle
rcrb
jp
ret
mov
shlb
and
bound
dec
mov
outsl
pop
or
pop
cmp
dec
mov
pop
and
movsl
pop
adc
inc
leave
mov
sbbb
xorl
jmp
aaa
ja
jle
nop
rolb
push
xor
xor
sub
gs
inc
call
test
mov
loop
lods
pop
icebp
dec
ss
mov
push
mov
test
jecxz
fimull
popf
jns
add
add
mov
pop
bound
mov
movsb
in
and
adc
cmp
ds
xchg
out
mov
add
adcb
or
test
mov
add
lods
bound
sub
aad
and
jno
inc
push
test
dec
mov
push
mov
repz
adc
jl
pop
int3
movsl
sub
or
inc
jns
mov
stos
insb
inc
add
dec
inc
cmp
sub
xor
adcb
or
shrb
cmp
mov
adc
rol
bound
jne
push
sbb
xchg
mov
fidivrl
xchg
icebp
dec
out
sub
jge
divb
cwtl
sbb
es
adc
xchg
pop
lahf
cli
ja
inc
mov
cld
faddl
mov
mov
scas
add
ret
pushf
xchg
hlt
cli
xchg
pop
and
aam
ss
icebp
mov
flds
popa
daa
xchg
popa
inc
adc
scas
aaa
fwait
dec
ja
test
cmp
sbb
push
loopne
fadds
cld
and
dec
cmp
and
xchg
imul
ret
cmc
push
std
push
ss
push
mov
cmpsb
pop
pop
mov
cmpsb
outsb
cmp
sbb
pop
dec
jbe
decb
pop
mov
inc
inc
dec
jge
rolb
pop
pop
call
adc
pop
les
fcomip
pop
dec
ljmp
out
mov
call
into
sbb
pushf
jg
mov
dec
mov
jae
xchg
inc
xor
das
jle
xor
jno
cmc
lcall
add
lock
and
cmpsl
bound
xchg
mov
enter
subb
clc
push
dec
pop
call
aad
cltd
or
pop
mov
shl
mov
push
mov
jle
pushf
sbb
loopne
push
test
cmp
mov
and
mov
popa
pop
ss
dec
stos
xor
lds
cmp
mov
dec
xchg
xlat
or
fbstp
or
cmovns
or
inc
dec
or
sbb
aad
jo
jae
sbb
dec
and
mov
in
sarb
mov
cmp
adc
in
pop
data16
gs
and
pop
pop
and
int
push
iret
jo
inc
lods
push
push
sbb
ficoml
imul
dec
aad
jp
sbb
daa
scas
pusha
frstor
rcll
push
sbb
xchg
ja
out
jnp
sti
aam
and
dec
xchg
jecxz
push
dec
pusha
adc
xchg
mov
lea
mov
dec
mov
shl
sarl
xor
add
xchg
push
orb
pop
push
aad
nop
insl
xor
push
jne
sub
jecxz
or
add
cs
xor
jno
jecxz
lds
fs
fisttpll
icebp
sbb
scas
out
mov
sbb
adc
andl
sbb
cwtl
ja
push
subb
frstor
inc
sub
stc
inc
addr16
or
daa
push
fsubrs
loop
xchg
xchg
js
insb
mov
mov
push
lea
add
push
lods
jecxz
ds
xchg
add
adc
add
ficompl
jae
arpl
dec
push
xor
mov
mov
je
pop
adc
out
cmp
jae
add
sub
gs
je
sub
cmp
int
dec
cmp
mov
mov
xchg
add
mov
or
cmp
rclb
mov
or
mov
jp
pop
xchg
into
sbb
jecxz
xor
out
cs
popf
and
mov
repnz
sub
adc
and
mov
ret
xor
and
arpl
inc
ljmp
sub
mov
jle
sub
inc
imul
mov
mov
xor
in
xchg
xlat
into
mov
fmull
test
mov
jb
lahf
pop
cwtl
add
icebp
testb
sbb
xchg
fisubl
xchg
insb
sub
adc
je
sbb
out
iret
sub
jbe
out
mov
jo
and
adc
mov
test
xor
xchg
jge
push
lret
aaa
dec
inc
loop
or
xchg
xchg
jge
and
loopne
sbb
inc
data16
jg
fdiv
or
dec
lea
je
es
ja
iret
movsl
inc
pop
ljmp
aas
dec
movsb
mov
and
pop
cld
mov
pusha
xor
sbb
cmp
imul
scas
leave
xchg
loopew
idivb
pop
addr16
cltd
xchg
std
rclb
inc
mov
inc
aad
iret
sub
pop
mov
push
aam
testb
push
imul
imul
hlt
sti
jnp
mov
and
rcl
xchg
shrb
push
inc
test
aas
out
mov
faddp
mov
mov
lock
pop
rcl
fcoms
icebp
shl
scas
add
inc
sbb
or
add
aaa
add
add
xor
mov
loopne
in
cmp
mov
imul
pushf
push
sub
test
push
and
gs
test
cmp
xchg
xchg
ret
movsb
jge
adc
mov
adc
mov
jae
movsb
outsl
inc
lods
mov
add
rcl
push
adc
cmp
pop
mov
int
adc
adc
inc
shl
add
cwtl
jg
inc
cli
mov
mov
cmp
ja
or
lret
jmp
loopne
and
icebp
enter
and
cmp
jae
bnd
cmp
jg
les
cwtl
mov
nopl
repnz
pop
adc
pop
sbb
mov
cs
sub
pop
shll
inc
in
lods
mov
cmp
jns
fsincos
xor
xlat
fsubl
int
pop
xchg
add
sub
jbe
xchg
out
icebp
aaa
mov
ret
pop
mov
loop
push
push
mov
shll
sub
test
and
repnz
js
fiadds
pop
jle
inc
adc
fstl
fimull
movsb
and
leave
ds
daa
incb
mov
xchg
pop
xchg
and
iret
cmp
dec
iretw
fcmovnu
inc
adc
lret
mov
loop
pop
leave
fwait
xlat
icebp
xchg
jg
lret
das
addr16
jae
sub
sarb
dec
test
fs
lods
jl
es
cmp
add
pop
decl
mov
repz
mov
decl
gs
adc
scas
dec
pop
into
or
fwait
in
fdivrl
scas
inc
stc
and
test
mov
inc
xchg
pop
dec
sti
jae,pt
mov
pushl
xchg
mov
push
or
cmp
and
insb
nop
outsl
adc
add
mov
sbb
cli
cltd
fiadds
cwtl
nop
adc
pop
jns
inc
pop
loope
call
dec
adc
lods
lock
fmull
add
out
cltd
aaa
out
movsl
jg
loopne
jmp
mov
sbbb
cmp
stc
out
and
push
pop
orb
dec
clc
mov
sbb
mov
dec
idivl
inc
jge
hlt
ss
loope
jo
test
inc
test
ret
lret
xor
outsb
push
call
adc
loop
jb
dec
ja,pn
mov
inc
mov
idivb
inc
cli
jae
js
sub
sbb
adcl
add
push
sub
cmp
loopne
into
xlat
lret
lahf
aam
sarb
jmp
mov
lea
fildll
add
test
rorl
push
test
mov
fimuls
jo
scas
test
lea
fmull
lahf
test
cmp
std
in
pop
outsl
cmpsb
pop
xor
in
sti
or
adc
jp
lods
lcall
or
push
roll
aad
mov
rcll
scas
xchg
mov
cli
test
and
in
das
dec
cli
jno
pop
lea
fmull
inc
dec
or
clc
mov
adc
adc
mov
pushf
imul
add
scas
add
jge
test
sub
cli
xchg
sbbl
push
sbb
mov
xlat
dec
mov
sahf
mov
inc
push
xchg
loopne
pop
add
mov
jne
daa
daa
push
insb
push
lahf
shll
mov
es
add
xchg
push
repz
filds
and
gs
movsb
sbb
loope
inc
xchg
fdivrl
addr16
int
lahf
jae
lds
pop
and
adc
ficoms
cmpsb
mov
pushf
cld
cmpsb
fwait
xchg
or
jl
lds
adc
daa
jb
cmp
cmpb
inc
into
xchg
flds
add
xor
lret
std
mov
xlat
dec
lahf
daa
in
jns
icebp
push
mov
into
push
mov
mov
nop
notb
cmp
in
addb
cmpsl
push
lret
pop
push
aaa
jmp
pusha
and
mov
add
push
repz
or
les
xchg
sub
push
pop
aad
movsl
ja
roll
mul
xchg
lret
pop
mov
popf
out
sub
and
push
mov
ror
pop
and
pop
inc
dec
test
data16
jb
sahf
inc
xchg
mov
sbb
pushf
sub
mov
pop
rclb
pop
fsubrp
cwtl
sbb
or
adc
cmp
stc
mov
test
int3
push
xchg
mov
push
mov
xchg
dec
mov
clc
mov
enter
mov
icebp
sub
mov
jg
push
cmp
sahf
mov
sahf
xchg
adc
scas
mov
cwtl
in
push
pop
ja
xlat
icebp
adc
lcall
cmp
out
jo
jno
in
sbb
xchg
or
push
add
jne
ds
add
cmp
xor
and
lds
add
jecxz
push
std
fnsave
xor
in
arpl
cwtl
jns
lods
iret
fnsave
ljmp
or
cli
dec
xchg
jns
lods
mov
insl
push
push
mov
mov
jmp
xor
ss
dec
and
fabs
imul
and
or
enter
out
jg
es
jg
loop
movsl
js
test
call
mov
nop
dec
popf
adc
fimull
lds
mov
inc
sub
rcrl
ljmp
pop
pop
shrb
and
push
pop
inc
jno
jnp
jb
xchg
and
subb
insl
test
dec
in
in
push
dec
mov
cltd
cld
shl
sahf
sbb
adc
mov
movsl
pushf
sbb
aaa
adc
nop
jg
incb
cmp
dec
iret
push
mov
push
push
mov
sub
movsb
cmp
jnp
pavgw
mov
mov
pushf
nop
pop
cmp
enter
push
sub
mov
ja
lock
aad
fmull
mov
adcl
imul
adc
sbb
ret
cmp
sub
insb
aaa
insb
movsb
mov
mov
jo
xchg
xchg
shll
movsb
and
int
inc
icebp
push
out
mov
bound
jmp
push
push
movhps
push
or
add
push
ret
dec
cmp
les
outsb
add
adc
lahf
sub
rorl
add
sub
rorb
mov
les
arpl
lea
out
and
xor
pop
std
sarb
xchg
jnp
repz
push
inc
movb
lret
pop
shrl
enter
xor
fsubl
or
xchg
jecxz
test
mov
push
sub
je
sub
inc
icebp
fwait
adc
cmp
negl
add
test
lods
push
je
cmpsb
insl
xlat
xchg
add
lret
xor
sub
in
imul
leave
sti
xchg
loope
movb
sub
cmpsl
rorl
mov
lret
test
outsl
mov
dec
and
jle
sbb
in
pop
int3
inc
sti
gs
inc
xchg
fisttpll
sbb
pop
jle
aam
mov
adc
sbb
fsubl
lret
jmp
push
imul
out
xor
mov
xor
pop
arpl
fistl
push
or
cmp
xor
mov
rol
and
rdpmc
fisubrl
rolb
xchg
jmp
stos
outsl
test
insl
js
or
lods
cmp
inc
sbb
in
mov
mov
fldenv
ja
clc
push
fcompl
imul
or
xor
inc
lahf
ds
adc
nop
cmp
push
fwait
pop
push
push
and
cmpsb
jg
add
nop
mov
cltd
mov
or
mov
jl
inc
out
pop
and
lock
jge
xor
sbb
dec
test
push
mov
fimuls
sub
insb
inc
lods
jmp
icebp
call
and
les
jmp
inc
filds
cld
subl
out
cmc
out
dec
ret
mov
ss
cmp
fcomps
jmp
pop
je
out
sbb
movb
ljmp
pop
call
testl
xchg
sub
shlb
outsb
cmp
mov
repz
loopne
ja
push
cs
les
push
lea
jl
mov
lds
std
jge
add
insl
daa
cmp
sbbb
xchg
adc
fldenv
in
ja
int3
ret
dec
mov
inc
mov
movb
fs
push
adc
ja
test
test
jmp
les
fmul
data16
pusha
sahf
xor
jmp
jne
jp
mov
inc
out
push
dec
mov
test
pushf
ljmp
adc
push
clc
xchg
xor
sub
mov
xor
popf
push
icebp
adc
es
faddp
je
stos
xorb
add
cmpsb
test
add
mov
dec
mov
jle
mov
xchg
and
dec
cld
pushf
push
or
fiadds
sbb
int3
popa
add
add
shl
push
leave
mov
lret
jo
in
push
pop
add
jmp
or
and
fs
jg
jnp
push
push
or
in
xor
out
icebp
sbb
pop
xchg
rcl
pop
sub
xchg
call
arpl
sub
and
xor
dec
dec
out
leave
into
pushf
in
cmp
je
pop
xor
push
pop
gs
xchg
or
mov
loopne
test
orl
add
ljmp
stos
fsubrp
jno
inc
cmp
push
pop
xor
hlt
and
fidivs
inc
jae
lock
idivb
pop
inc
ljmp
sub
mov
mov
mov
sbbb
lds
movb
mul
adc
push
je
mov
mov
xor
je
cltd
add
push
jno
jge
mov
les
pop
repz
shl
data16
jbe
or
jnp
or
and
sbb
andl
xor
test
cmp
push
lcall
arpl
insl
shr
dec
fdivs
mov
std
mov
push
pop
push
call
cli
push
sub
loopne
xchg
cmp
test
inc
dec
cmc
ljmp
cmc
jmp
adcb
mov
in
sbb
push
ljmp
jo
or
imulb
jae
fwait
lcall
das
mov
js
add
mov
outsl
scas
mov
xchg
out
in
loopne
add
imul
mov
jbe
frstor
and
dec
mov
mov
sub
fsubl
pop
adc
pop
or
fadd
push
lahf
xor
lfs
mov
sub
mov
or
addr16
repnz
jns
add
push
cmc
in
int
enter
popa
xor
not
jae
aam
call
call
lock
push
mov
push
pop
xchg
push
shl
mov
je
test
and
sub
push
or
rcrl
fidivs
and
push
xchg
cmp
jae
enter
mov
jmp
sbb
orl
or
fnstcw
dec
sti
sub
bound
add
subb
enter
out
xorl
or
ja
sub
dec
test
and
neg
sub
jp
sbb
or
push
shll
in
cmp
or
int3
sub
fnstenv
xor
pop
inc
jp
xchg
adc
cmp
fisubl
inc
mov
test
gs
fmuls
test
filds
enter
and
push
mov
mov
pop
xchg
repnz
lret
cwtl
dec
add
pop
mov
jb
in
inc
cltd
push
mov
sbb
xchg
xchg
out
pushf
ja
jp
jbe
daa
inc
jnp
push
mov
jg
push
mov
pop
inc
sahf
ljmp
bound
mov
xor
jl
mov
push
test
dec
aaa
rcl
mov
mov
mov
or
rol
mov
jne
inc
xchg
pop
and
xchg
mov
jecxz
out
in
mov
stos
sub
sbb
mov
sarl
sarb
enter
mov
push
cmpsl
xchg
stos
jo
fcomi
jle
add
push
cltd
aaa
jae
scas
lret
stc
add
cmc
mov
jno
adc
test
test
pop
mov
inc
xor
cmpsl
pop
sbb
pop
fcmovbe
or
addr16
mov
sbb
add
pop
adc
push
gs
dec
jp
dec
ret
mov
pusha
jp
les
decl
push
cmp
or
adc
hlt
fnstsw
mov
lods
dec
pop
jle
stc
add
xor
xchg
inc
rolb
cmp
xchg
mov
mov
cmc
fsubrl
stc
test
mov
and
push
sahf
dec
mov
pop
sub
mov
inc
into
daa
leave
pop
mov
jle
mov
unpckhps
out
inc
add
pop
test
push
ficomps
xchg
sub
mov
mov
sbb
lcall
fldcw
mov
daa
pop
fisubl
dec
movsl
les
das
les
pop
mov
or
rorb
adc
orl
pop
movsl
xor
dec
inc
out
mov
and
dec
mov
mov
lods
mov
add
lcall
fmuls
inc
sub
fistl
out
mov
cmp
sub
iret
xchg
jmp
add
insl
sub
jns
rcrb
cld
and
in
mov
aad
out
or
jmp
pop
dec
sti
xchg
inc
aam
and
insb
sub
cmp
ss
dec
scas
mov
popa
sbb
data16
pop
or
or
aaa
lods
sahf
rolb
push
xor
shrb
xchg
lahf
inc
inc
xor
loopne
addr16
add
mov
test
fs
fistpll
daa
or
nop
add
pop
dec
mov
cwtl
cmpb
fcomp
nop
and
outsb
aaa
rorl
mov
sbb
aaa
pusha
test
dec
test
mov
in
pop
xor
add
jae
xchg
and
inc
lahf
ja
out
jbe
xchg
inc
icebp
jnp
xchg
clc
jmp
jg,pt
jae
outsb
inc
es
dec
out
sbb
mov
lds
mov
pusha
sub
popf
ficoms
jo
mov
sbb
idivl
push
icebp
mov
push
call
nop
mov
jl
fldl
or
xor
jo
es
mov
dec
add
les
aam
adc
rorb
jmp
push
notl
inc
and
adc
repz
addr16
test
imul
int
repnz
lock
lods
pop
xchg
stos
outsb
dec
movl
adc
lahf
push
hlt
pushf
lods
mov
cmpsl
xor
sub
and
or
sub
lahf
xchg
dec
call
pop
ret
das
test
or
sbb
imulb
jle
add
icebp
add
testl
scas
mov
mov
mov
popf
mov
leave
cwtl
enter
mov
in
psrlq
ret
call
xlat
xchg
mov
int3
popf
push
or
mov
and
lahf
icebp
sbb
cltd
and
cmp
outsl
mov
scas
mov
ljmp
and
out
movsb
xchg
test
or
out
xchg
add
imull
mov
pop
add
aad
std
in
cwtl
adc
jmp
mov
inc
cmp
enter
push
push
addr16
ret
mov
test
jns
jne
out
mov
mov
lds
add
pop
mov
stos
inc
xchg
pop
cmpsb
bound
stos
add
pop
fwait
pushf
imul
jnp
out
add
decl
inc
outsl
faddl
push
insl
mov
stos
lds
pop
sub
jns
push
repz
aad
mov
mov
mov
dec
push
push
scas
xlat
pop
jg
loope
mov
inc
pusha
aam
cmp
cmpsl
pop
lahf
cmp
fdivrl
xchg
push
adc
ljmp
push
sub
mov
sbb
adc
add
xchg
es
outsl
mov
bound
cmp
jecxz
xor
aas
leave
es
pop
out
mov
jns
pushl
sbbb
das
fnsave
in
xor
repnz
push
and
ss
icebp
mov
daa
push
lock
sbb
les
scas
sbb
jp
lods
aad
mov
dec
jge
fs
dec
xor
mov
ret
repz
mov
shl
pusha
lcall
pusha
stos
push
mov
or
and
mov
lods
repnz
leave
or
jb
or
jmp
jp,pn
lock
orb
or
push
mov
negl
int3
xchg
sub
dec
lock
push
cmp
es
or
cmp
imull
dec
cmp
pushl
in
xchg
cmc
shll
jo
and
icebp
imul
bound
xor
inc
sub
inc
shll
sbb
imul
lock
gs
lahf
cmp
inc
adc
lock
test
push
in
jo
sbb
mov
inc
aas
stos
xor
inc
pop
add
shll
int3
aam
insb
dec
mov
pop
repz
and
std
cmc
or
bound
inc
pop
cld
jno
stos
lcall
cmp
and
push
jb
inc
sarl
jmp
mov
scas
mov
mov
cmp
pop
and
mov
fst
adc
shl
lcall
mov
fs
insb
std
cmc
imul
mov
pop
std
xchg
adcl
repz
fcompl
sub
shl
repz
sbb
scas
inc
icebp
mov
pop
dec
shll
mov
das
jbe
mov
xlat
repz
scas
mov
cmp
jbe
sbb
mov
jnp
sbb
cmpsb
je
mov
push
cmpsb
rorb
fldt
sbb
ss
add
jo
lea
add
das
sarb
shl
in
je
push
mov
loop
stc
andl
push
loop
jmp
dec
in
cmpsl
rcrl
sbb
bound
push
je
ljmp
out
mov
scas
xor
push
pop
dec
dec
sbb
or
mov
lock
adc
insl
xchg
or
repz
inc
jg
orl
out
jns
sub
and
push
sbb
sub
ja
cmp
repz
aaa
mov
lret
mov
jp
inc
or
mov
ror
jo
sub
lods
cmpb
arpl
lock
xor
loop
cmp
sub
imull
out
jecxz
adc
xchg
lret
cmpsb
add
and
dec
in
lea
ja
push
jne
xor
mov
sarb
popa
jo
stos
jbe
test
pusha
jno
test
or
mov
pop
scas
mov
popl
call
mov
cs
add
xor
cli
outsb
js
repnz
push
dec
sbb
ret
lods
aam
sbb
movsl
adc
adc
enter
lods
mov
data16
dec
mov
mull
shll
stos
fstl
cmp
ljmp
fcmovnu
pop
sbb
call
imul
jge
int3
test
mov
insl
pop
and
mov
sub
adc
int
iret
pop
mov
adc
pop
pop
andl
das
mov
adc
popl
popf
loope
jle
lds
xor
xchg
je
out
xchg
sub
push
sub
xchg
sbb
std
dec
mov
insb
pop
xchg
mov
inc
mov
xchg
and
aam
mov
jp
and
stos
cs
push
aas
icebp
pop
push
lea
and
add
jecxz
adc
push
js
jnp
mov
out
shrb
xlat
rclb
pop
fistpll
sub
ficompl
xchg
test
cmp
mov
pop
shl
test
pop
mov
add
or
daa
inc
cmpsb
or
mov
std
cmc
lock
fucom
popa
rcl
mov
pop
jbe
cmp
insb
loop
push
fdiv
push
adc
in
add
inc
add
fs
xor
xchg
jge
pusha
lret
cmp
into
or
adc
cmp
mov
cld
push
in
add
test
xchg
adc
testl
jb
shll
push
icebp
fmull
into
arpl
loopne
cmp
imul
lret
jp
movsl
into
ret
xor
imul
aam
fwait
sbb
jmp
push
inc
push
movsl
cmpsb
mov
lea
cmp
mov
mov
mov
xor
jmp
or
fwait
push
fsubs
js
mov
idiv
lds
in
and
mov
cmp
cmp
cmp
or
call
lock
add
push
mov
pop
dec
js,pt
xchg
sub
mov
xchg
stos
cs
bound
dec
xchg
aam
dec
push
sub
adc
jg
sub
fsubl
or
ret
int
enter
nop
jp
xor
push
add
jp
push
lcall
cmc
pushf
add
mov
jg
fisttps
sbb
in
bound
ss
push
orb
cmp
jo
and
insl
cmp
rorl
loopne
xchg
jae
in
push
lret
popa
mov
cs
and
sbb
push
inc
icebp
add
jle
repnz
pand
adc
jbe
mov
fidivrl
psubb
aad
push
loopne
filds
fwait
pop
mov
lock
js
xchg
mov
pop
inc
cltd
and
jb
push
xchg
fimuls
outsl
imul
andb
xor
fisttps
mov
sahf
xor
scas
add
mov
mov
add
push
shrb
push
cmp
cmp
pop
mov
loope
aaa
inc
lods
fwait
imul
mov
jp
push
outsb
mov
daa
js
push
xor
lahf
adc
mov
sarl
ficompl
jnp
loopne
add
sarb
js
mov
bound
in
iret
popf
mov
cld
int
test
adc
mov
mov
mov
dec
jae
mov
pop
pushf
sti
lods
and
mov
push
sbb
jmp
pop
sub
adc
mov
ret
dec
fisubrs
cmp
mov
inc
divb
jo
cmova
mov
and
jo
hlt
ret
cmp
sub
cmp
hlt
std
aad
add
das
add
sub
push
adc
xor
arpl
pop
dec
loopne
pop
sar
xor
pop
inc
jns
stos
bound
pop
loope
lret
out
xor
xchg
mov
xchg
pop
sbb
jmp
mov
int3
pop
xlat
or
lea
push
inc
ror
setbe
movsl
jb
jge
xor
repnz
xor
sti
push
test
rcll
stc
cs
in
shll
jae
fyl2x
int3
mov
dec
cmp
and
aas
stos
gs
inc
scas
mov
xchg
gs
int3
mov
jge
into
cmp
cmp
negl
jo
xchg
sbb
pop
dec
jge
mov
popf
in
cltd
push
sti
inc
inc
addr16
lret
rclb
mov
in
movsl
or
push
int3
sub
cmpsl
insb
fldt
ja
xorb
and
fadd
or
movsb
negb
or
xor
mov
cs
xor
lahf
jns
lret
pop
and
rcrb
inc
ljmp
nop
mov
ret
pop
jo
scas
sub
pop
dec
test
pop
ds
adc
nop
cmp
sahf
xor
out
in
jp
push
inc
cli
mov
push
and
jmp
inc
jae
nop
add
pop
pop
aad
in
arpl
inc
ljmp
loopne
sub
push
mov
cld
sub
sbb
incb
inc
push
pop
sbb
fstl
frstor
bound
mov
adc
or
add
imulb
mov
ret
imul
xor
mov
mov
cmp
push
bound
loop
aad
add
push
out
xchg
nop
inc
inc
mov
pop
addr16
mov
inc
lcall
ja
jns
cmp
xor
dec
mov
mov
arpl
push
add
inc
loopne
mov
sti
xor
sub
push
mov
lss
andb
jns
jo
xlat
jnp
lods
push
pop
pop
xchg
mov
orb
icebp
pop
adc
mulb
push
add
sbb
cmp
push
xor
dec
shlb
sbb
mov
cwtd
inc
pop
pusha
js
sub
adc
shll
mov
shlb
mov
mov
cmp
mov
stos
in
xchg
jnp
pop
fwait
data16
out
daa
mov
mov
fwait
in
sarl
adc
pop
jl
jp
push
rorb
aaa
aas
out
insl
icebp
pushf
sbb
inc
add
mov
xchg
mov
sub
movb
sub
dec
mov
pusha
fcoml
xor
aam
test
ja
cmc
mov
adc
xor
lret
jnp
mov
sub
pop
cld
xlat
inc
in
pop
sbb
paddusw
fildl
dec
into
jno
mov
out
loope
movsl
movsb
outsb
mov
daa
push
or
loope
or
sbb
rcrb
hlt
and
xchg
rcll
xchg
cmp
sub
cmp
pop
mov
sub
mov
cli
dec
shll
sub
or
test
pusha
movsb
sub
icebp
jo
mov
outsb
cmp
fcmove
cmp
cltd
jo
xlat
lret
ror
and
test
sub
pop
adc
lea
test
and
shlb
push
popa
call
xchg
push
in
movsb
fistpl
add
mov
sbb
push
or
mov
or
das
jnp
in
in
add
sub
jnp
jg
je
repnz
cwtl
cmpb
inc
xchg
std
add
stc
push
inc
lods
or
inc
or
movb
cmp
pop
imul
mov
inc
add
je
cmp
movsb
call
shl
adc
jp
addr16
je
dec
xor
push
hlt
iret
jae
dec
mov
inc
jge
sti
pminsw
sbb
imul
inc
insb
daa
enter
out
mov
stos
push
add
hlt
jge
stos
mov
xchg
xor
sub
ss
add
dec
mov
dec
sarb
jne
mov
aam
mov
cld
ljmp
cmp
movsl
ret
mov
dec
sbb
inc
sbb
loopne
inc
xor
mov
andl
mov
inc
in
inc
add
mov
sub
cmp
adc
cli
mov
jae
pop
lahf
les
gs
mov
adc
lret
fsub
je
shll
ss
push
push
sbb
adc
xor
imul
pusha
dec
jnp
push
xchg
cmp
jnp
aas
leave
xor
mov
xchg
mov
xor
dec
dec
pusha
push
mov
mov
and
sub
insl
pop
pop
pop
jmp
test
insb
stos
mov
lods
nop
test
fisubrs
inc
push
fnstsw
dec
lahf
add
or
adc
adc
stos
ror
fildl
lods
sbb
mov
mov
xchg
mov
push
test
push
jle
mov
scas
cltd
xor
or
push
fisttps
cmpsb
sahf
jecxz
les
xor
add
dec
add
sbb
or
ltr
sub
xor
mov
icebp
fmuls
xor
ds
cs
jo
jo
popf
es
fsubrs
push
mov
mov
test
push
rorb
popf
shlb
xor
or
cmp
push
dec
cmovnp
int
test
pop
jg
mov
jnp
and
add
xchg
xor
lcall
test
andb
or
mov
jle
in
cli
insl
cmp
sbb
inc
ret
sbb
rorl
sub
leave
xor
nop
xchg
sbb
in
jecxz
fwait
lcall
imul
xchg
mov
pop
orl
test
dec
imul
push
cli
jne
xchg
mul
mov
sbb
adc
push
pop
mov
xlat
pop
popf
cmp
loope
js
cmp
movsb
xchg
out
addr16
sahf
leave
dec
icebp
loope
pop
mov
aaa
in
push
sbb
cmpsl
mov
cmpsl
sti
push
xchg
dec
cmp
xchg
pop
lret
leave
pushf
adc
mov
stc
cmp
cmp
push
mov
mov
xor
stc
sbb
mov
sub
repz
test
cltd
jne
test
out
mov
rcrl
sbb
rclb
ja
adc
imul
xchg
fwait
mov
ja
aas
stos
xchg
sub
or
cmc
bnd
add
push
jbe
xor
mov
jge
aam
and
mov
mov
rolb
lods
xchg
cltd
xor
push
pop
xchg
mov
mov
cmp
popf
testl
add
pop
xor
scas
pop
clc
sub
daa
cmp
push
inc
add
in
xchg
cmp
adc
jmp
lods
pop
aas
xchg
enter
jns
xchg
test
sub
das
xor
pop
gs
lea
ljmp
icebp
cmp
and
add
cmp
movsl
push
sahf
cmc
jno
mov
pushf
int
pop
cmp
ss
outsb
int
push
cltd
mov
pop
cmp
stos
cs
outsb
jnp
test
or
push
xchg
or
push
inc
shlb
push
dec
out
jl
jge
xlat
mov
cmp
mov
add
in
pop
xor
fisubrl
lcall
into
sub
cmp
pop
fwait
sub
jae
clc
pop
ret
inc
cmc
aad
movsb
mov
mov
ss
inc
stc
xchg
adc
jle
sub
jns
or
jg
fistl
sbb
mov
fsubs
inc
test
repnz
sub
pushf
add
aaa
fsubrs
cmp
xchg
mov
cltd
mov
addb
mov
add
ret
and
xchg
sbb
inc
push
lahf
push
sbb
js
mov
pop
pop
test
or
push
xor
mov
sbb
fstpt
cmpsl
std
popf
push
enter
std
add
xor
mov
xor
mov
loop
ja
mov
xor
fwait
push
out
movsl
inc
cmp
dec
mov
add
mov
scas
ds
mov
lock
repnz
xor
fnsave
sbb
lock
dec
add
and
xor
cltd
int3
cmp
cmp
push
ficompl
pusha
test
or
xor
cmp
pop
mov
ss
call
mov
xchg
cmpsl
mov
ret
dec
int
add
xchg
aas
mov
jle
fidivl
cmpsl
test
push
das
cmpsb
fadds
aam
jp
jb
xchg
mov
pushl
iret
cs
loope
add
movsb
sti
mov
mov
cmp
mov
add
sub
mov
dec
daa
push
movsl
int
out
add
iret
pushf
mov
inc
pop
mov
mov
pop
rclb
call
and
insl
mov
sub
push
testb
aam
mov
fdiv
adc
and
and
xor
insl
mov
ja
xchg
mov
mov
subl
push
scas
iret
sub
in
inc
das
push
xor
xchg
insl
and
stos
rcll
dec
mov
icebp
push
popw
loop
push
test
xchg
insb
jge
call
push
shlb
and
push
pop
lcall
sub
pop
std
xchg
test
fwait
push
mov
or
lcall
lret
mov
sarl
pop
imulb
fs
lret
mov
sti
cltd
adc
lret
fnop
ja
push
sub
std
icebp
jo
mov
mov
inc
sub
lea
leave
sub
ljmp
and
in
pop
shlb
sub
ds
mov
inc
das
or
add
lods
lock
pop
stc
pushf
jmp
push
mov
or
and
xor
mov
in
imul
dec
cmpsl
xorb
inc
outsl
movsl
shlb
push
cltd
dec
icebp
out
sub
adc
mov
xor
in
jno
sub
test
call
mov
push
or
mov
pop
sbb
les
test
xchg
push
adc
fistpll
incl
and
or
xor
ljmp
jo
add
out
cs
and
jle
divl
das
inc
add
leave
mov
cmp
inc
shl
int
dec
inc
divl
out
arpl
jp
outsl
mov
out
jg
imulb
fcompl
inc
outsb
idivl
iret
push
sub
or
mov
ret
stos
push
dec
cld
rorl
aad
inc
push
pslld
int
or
inc
leave
insl
fnstenv
mov
popf
jno
sub
sti
push
scas
mov
jmp
pop
je
push
add
cmp
xchg
cwtl
fidivl
pop
cmp
mov
xlat
aam
pop
push
mov
mov
imul
adc
mov
mov
xor
dec
cltd
or
outsl
imul
or
hlt
xchg
add
rorl
jp
decl
leave
mov
mov
mov
inc
fmuls
jno
mov
repnz
ja
mov
adcb
push
ja
and
mov
lds
imul
fstps
dec
inc
jo
and
xor
inc
push
inc
inc
sub
dec
popa
push
sti
mov
cmp
hlt
or
sbb
mov
repz
and
sub
popf
sub
pop
xor
ja
cmp
insb
fmul
xor
movsb
mov
decl
mov
cltd
lea
dec
jne
out
or
sbb
jae
jge
cld
repnz
mov
arpl
rcr
add
lods
cmp
mov
cltd
inc
lds
in
clc
gs
xlat
sub
push
xor
pop
add
jnp
push
sub
addr16
jge
jg
cmpsl
mov
mov
shll
insb
imul
xchg
sub
in
pushf
mov
test
mov
cli
mov
mov
xchg
int3
iret
movsl
lahf
pop
out
scas
push
adc
mov
add
scas
push
in
out
rcrb
mov
fisttpll
rol
sub
arpl
cmpsb
mov
mov
sti
add
mov
xchg
lret
mov
dec
jae
cwtl
push
movsl
fwait
icebp
add
cmp
fsub
inc
pusha
rolb
push
ds
xor
roll
call
ss
sbb
iret
adc
inc
adcl
scas
dec
pusha
adc
out
and
gs
shll
pop
ljmp
mov
data16
mov
jmp
scas
pop
enter
adc
lds
or
popf
xor
cmpsl
pop
push
aad
inc
fsubs
and
subl
xor
add
mov
data16
pop
push
mov
sbb
jne
pop
xor
mov
ret
pop
mov
mov
cmp
sub
dec
mov
push
stos
out
mov
cmp
shrb
not
push
sub
cmp
aas
pushf
push
pop
mov
les
jne
jne
int3
cmpsb
sti
jp
cmpsb
add
pop
add
daa
sti
pop
mov
jb
xor
loope
jecxz
arpl
lret
mulb
scas
jae
icebp
out
pusha
jae
icebp
cmp
and
lock
and
pop
or
addr16
push
dec
mov
mov
inc
cmp
dec
sbb
sbb
dec
or
mov
xchg
std
jmp
jnp
pushf
enter
push
mov
xorb
rcrl
das
xchg
push
jae
fsubs
outsb
int
mov
popf
popa
adc
sbb
rcr
dec
mov
pushf
aad
nop
sub
in
aad
adc
bound
or
movsb
pop
loop
loope
dec
fs
xor
lret
pop
fwait
call
mov
sub
shll
pop
sub
add
int3
or
stc
ss
jge
fsubrs
inc
sbb
jb
push
xchg
inc
push
out
mov
mov
fwait
cmp
jle
and
dec
icebp
sbb
jge
cld
pop
xchg
sarb
inc
dec
mov
sbb
dec
jno
cmp
sub
repz
mov
fsub
mov
pop
mov
das
pop
pop
enter
cmp
and
call
in
jno
xchg
fbld
clc
arpl
dec
jb
mov
cmp
xchg
and
seto
xchg
xchg
outsl
jae
hlt
add
cmp
cmp
orl
addl
insl
add
pop
cmpsl
sbb
iret
loope
or
fs
cmp
or
insl
sub
push
ja
inc
pop
subl
hlt
scas
loopne
lock
xchg
inc
add
movhps
ficomps
shrb
mov
mov
sub
fcompl
leave
mov
lahf
out
inc
inc
mov
scas
es
out
fnstcw
xor
push
xchg
sub
jb
or
push
or
cmpl
mov
mov
repz
into
sbb
add
and
aad
mov
push
mov
fistps
or
mov
jl
aam
mov
mov
and
inc
pop
or
push
into
mov
das
dec
loope
stos
hlt
mov
imul
jns
in
ljmp
out
jle
add
aad
fcmovne
lahf
cmp
add
aad
fidivrl
pop
popf
push
mov
and
ss
and
rclb
aas
mov
loope
mov
mov
lds
popa
cltd
push
mov
push
imul
dec
in
dec
pop
sub
inc
push
popf
push
fidivs
into
shrl
out
cmp
in
bnd
cmp
cmp
out
dec
pop
mov
call
jp
aam
push
mov
dec
int
inc
pop
push
fldenv
incb
lcall
movsb
xor
shlb
inc
jno
cld
adc
xchg
sahf
push
or
js
lret
add
add
test
mov
jge
xor
mov
adc
xchg
dec
sub
pusha
jmp
add
test
add
sub
in
test
xchg
inc
sub
add
xor
ds
stos
iret
mov
inc
ja
insb
mov
imul
dec
icebp
bound
je
fisttpll
lret
xor
push
sub
int
and
push
adc
inc
fidivrs
jmp
outsb
mov
lock
insb
mov
cmpsl
xchg
clc
pop
loopne
adc
out
push
insb
sbb
repz
mov
inc
stos
leave
stos
imulb
fisubs
mov
jo
fs
or
dec
push
jp
stos
out
xor
sub
fildl
sbb
mov
loope
stc
stc
and
dec
cmp
jne
shl
push
inc
out
imul
addl
pop
pop
jle
pop
mov
imul
lcall
push
cmpsb
cmp
jp
repz
imul
xchg
lds
adc
out
mov
mov
adc
inc
push
aam
mov
pusha
mov
jg
cmp
mov
inc
sub
inc
clc
inc
and
addl
and
iret
pop
mov
sbb
adc
mov
std
jbe
orl
sub
xchg
add
push
in
mov
fwait
xlat
leave
sahf
jno
shll
pop
sub
loop
inc
sub
mov
data16
push
ss
ficomps
sbbb
push
out
jg
mov
in
inc
xchg
callw
daa
jge
and
rolb
sti
sarl
jae
popl
ds
dec
cmp
jecxz
bound
push
in
adc
push
push
inc
jp
test
fs
dec
pop
mov
in
test
sub
jns
stos
repnz
arpl
divl
xor
lret
xor
cs
mov
sbbb
adc
inc
out
xchg
jl
insb
xor
dec
pop
cmp
xlat
outsb
mov
mov
add
dec
inc
es
sub
inc
or
jmp
pushf
fcoms
addr16
mov
mov
out
scas
mov
ret
and
out
mov
fsts
sub
aad
push
mov
jnp
cld
daa
je
cmp
xor
jge
in
mov
mov
shl
inc
jno
cli
adc
out
movsb
cmpsb
outsb
roll
enter
mov
or
addr16
scas
fnstenv
bound
push
shrl
mov
jae
sub
int3
movsl
cwtl
out
pop
jne
cmp
add
mov
pop
push
mov
inc
pushf
push
test
mov
xchg
pusha
icebp
mov
sbb
xlat
stc
leave
adc
sar
jns
mov
cwtl
xor
std
mov
sarl
shll
fidivrs
outsl
adc
cltd
stos
addr16
add
mov
mov
pop
add
mov
cmp
push
sti
push
rcll
ret
and
jmp
add
cs
imul
sub
and
push
decb
jge
bound
xchg
and
jp
gs
ss
leave
iret
and
mov
or
lods
test
pop
jg
ret
subl
cmp
sti
lret
test
ret
xchg
outsb
in
or
mov
testb
js
pop
or
icebp
sbb
xchg
jmp
dec
test
lods
inc
out
mov
sbb
lds
fwait
ret
fisttpl
cwtl
lds
mov
sahf
push
pop
les
xchg
sub
xor
mov
dec
dec
out
xchg
dec
pop
ja
dec
dec
jb
ficompl
mov
and
pop
out
mov
push
ljmp
into
mov
scas
fdivl
imul
out
fstps
lds
xor
add
inc
int
cmpsb
mov
addr16
paddd
and
dec
fstl
enter
cmc
xor
pop
les
das
aas
in
stos
xor
and
rcll
lods
out
mov
sbb
enter
dec
out
scas
pop
stos
in
jne,pt
adc
mov
ljmp
xchg
xor
mov
push
adc
xor
in
ja
fdivrl
push
xchg
pushf
pop
int3
adc
lds
and
xchg
inc
pushf
and
and
pop
les
aaa
jg
jecxz
pusha
inc
push
ret
xchg
jp
enter
outsl
out
dec
popf
sub
stc
xchg
outsb
jno
mov
adc
rcl
sahf
lods
pop
repnz
enter
pop
fisttpll
imul
ja
lods
ret
dec
sbb
cltd
sahf
xchg
add
cmpsb
jmp
fwait
lds
rolb
adc
inc
add
loop
outsb
jns
add
sub
or
push
mov
xor
inc
push
popl
shll
cmp
movsl
push
jmp
sub
ljmp
out
loopne
gs
enter
inc
xor
inc
test
jne
mov
or
dec
inc
int
sub
mov
stc
fs
add
xor
ds
jae
jl
ljmp
xor
es
dec
mov
add
lods
mov
cmpb
push
rcl
mov
aaa
inc
lcall
push
push
jnp
sbb
fdivrs
stos
addl
jnp
jl
gs
jle
push
aaa
lahf
mov
ja
loopne
loop
xlat
loopne
push
ljmp
sub
loop
mov
out
push
pop
rolb
adc
fcmovnu
mov
adc
or
ds
icebp
iret
outsb
sbb
cmc
jno
jle
clc
ffree
dec
jne
mov
mov
test
cmp
jno
xor
cmc
fscale
mov
add
repz
mov
xor
fdivrs
and
mov
pop
mov
fdivrs
sbb
lcall
xchg
dec
mov
in
imul
mov
int3
pop
push
pop
xchg
lea
lds
push
inc
add
in
movsl
pop
push
out
int
cmpsb
je
stos
xlat
sub
sbb
daa
test
cli
test
cmpsb
or
pop
xor
or
adc
cmp
out
add
or
push
sub
jno
push
xlat
push
scas
adc
xor
inc
dec
push
jecxz
rolb
in
aaa
outsl
cltd
cmp
jbe
xchg
mov
dec
ljmp
scas
inc
sbb
decl
dec
inc
dec
sbb
enter
dec
lret
mov
aad
shll
adc
sub
jo
stos
das
adc
inc
mov
jmp
sahf
sbb
and
push
test
lret
cmpb
inc
push
scas
les
movsl
inc
xlat
or
aas
cld
imul
loopne
jge
inc
jmp
das
mov
outsl
into
out
fdivl
sbb
push
xchg
xchg
mov
and
sbb
js
adc
xchg
mov
test
sub
addr16
and
inc
mov
xlat
js
js
aaa
iret
pusha
fchs
loopne
mov
nop
mov
mov
mov
cmpsb
cmp
outsl
mov
std
cmp
pop
jb
aam
mov
cmp
sub
push
outsb
sbb
loope
cmp
fbld
int
dec
int
xchg
dec
add
add
xor
xchg
fucomp
shlb
ret
lahf
mov
fisubl
hlt
mov
test
or
dec
push
daa
mov
inc
cs
test
fcomi
arpl
inc
xor
movsl
dec
shl
loop
or
cmp
arpl
cld
pop
xor
pop
icebp
outsb
rclb
xor
inc
aaa
mov
fbld
add
icebp
pushf
cltd
cmpsl
dec
cmc
leave
sbb
add
sub
stos
push
sbb
pop
lods
outsl
movsl
das
inc
pop
loopne
in
inc
pop
jnp
adc
adc
xlat
or
mov
push
test
push
into
stc
mov
adc
push
fistpll
orl
add
ja
xor
lret
sbb
movsb
sbb
pop
popa
loopne
pop
add
adc
test
orl
mov
leave
cs
xchg
movsb
pusha
lahf
jae
ret
dec
out
pop
sarb
ljmp
sub
xchg
scas
fs
jmp
ja
cmp
jae
mov
sub
sub
insb
sahf
adc
repz
jbe
out
rcrb
ss
and
add
movsb
outsl
xor
inc
or
addb
adc
movsl
add
mov
pop
sbb
mov
jp
xlat
imul
hlt
xor
mov
jns
aam
lahf
out
add
add
nop
cmp
mov
sbb
and
and
pop
mov
xlat
loopne
test
or
cmpsb
pusha
jmp
sub
jmp
aam
repnz
cmpsb
std
das
mov
sub
cmp
mov
sub
sbb
mov
pop
loopne
das
push
lods
dec
jmp
ds
push
out
xchg
gs
ss
pusha
cmp
push
pop
into
mov
out
xchg
orb
or
gs
in
mov
pop
mov
cli
repnz
mov
jl
sbb
or
pushf
mov
push
mov
jl
dec
adc
mov
add
sub
xchg
mov
outsl
int
inc
xchg
mov
pop
popf
inc
lea
sub
cmp
lods
fucomip
inc
sbb
push
orl
inc
push
mov
pop
inc
sbb
xchg
pop
loop
test
fs
popa
adc
inc
pusha
mov
fcomip
in
hlt
cli
dec
jne
cwtl
lock
enter
mov
aaa
vmulss
sub
pop
or
jg
sahf
outsl
out
rorb
mov
cli
ud2
push
dec
mov
insl
xor
in
pop
pop
loope
mov
and
shl
mov
addl
mov
inc
out
int3
and
je
lret
jns
and
movsb
in
std
mov
in
xchg
jmp
scas
outsl
repz
daa
icebp
xor
fnsave
imul
subl
inc
in
mov
sbb
lahf
mov
sbb
sub
inc
cld
mov
mul
mov
and
push
jns
push
push
pop
addr16
dec
nop
xor
sub
xchg
int
inc
add
sti
cmp
xor
rorl
pop
pop
xor
cmp
sub
mov
inc
repnz
iret
dec
movsb
push
int
lcall
lret
scas
sti
out
mov
mov
sti
hlt
cmp
imul
mov
adc
jecxz
sbb
loopne
sbb
jo
xor
pop
or
xchg
push
xchg
mov
pop
mov
iret
int3
mov
pusha
xchg
test
and
call
push
sbb
dec
enter
scas
in
inc
sar
out
cmp
ret
repnz
and
add
push
mov
jae
xchg
pusha
pop
inc
push
popa
jecxz
test
xchg
push
out
mov
push
xor
lea
adc
roll
out
push
mov
sub
mov
jnp
sub
sbb
lcall
movsb
sub
xlat
iret
and
test
or
scas
adc
xchg
jl
mov
xchg
insl
lea
push
lahf
inc
lods
lods
push
aas
repz
outsl
sub
push
cmpsl
jno
jae
stc
std
push
mov
xor
sti
repz
nop
mov
call
imul
std
cltd
pop
cmp
xor
and
and
mov
mov
mov
clc
insb
jp
cli
inc
lret
in
dec
push
push
mov
sub
sarb
xor
lods
nop
call
xchg
jmp
xchg
insl
in
jo
lods
sub
movsl
lret
ffree
clc
sbbl
loop
dec
add
sbb
sbb
scas
sub
loop
popf
dec
cmpsl
movsl
mov
adc
scas
xchg
add
adc
sbb
or
lods
js
imul
arpl
xor
in
mov
cld
sub
jmp
inc
lds
sbb
lcall
mov
cs
adc
or
mov
push
outsb
pop
cmpsl
data16
and
movsl
pop
sarb
call
pop
pop
mov
mov
xchg
mov
data16
icebp
movsl
sub
jge
xchg
push
mov
imul
xchg
jl
popf
cli
dec
test
fcoms
fdivl
pop
das
xor
pop
mov
cmpsl
aas
sbb
cld
stos
and
push
push
jge
xchg
jge
pop
jmp
repz
mov
jle
mov
mov
enter
push
fdivl
mov
fisubrs
xchg
mov
scas
xlat
and
xor
or
fstps
sbb
rorb
dec
jp
mov
fisubrs
nop
xchg
sbb
movsb
adc
push
cmp
loopne,pn
sti
mov
xchg
in
fimull
xchg
inc
out
lds
xor
bound
ljmp
sbb
cmp
xchg
jle
jnp
xchg
int3
xor
dec
jns
add
sub
imul
push
fisttps
mov
popf
ret
xchg
pusha
fisubl
rcl
inc
mov
dec
icebp
je
lea
add
mov
gs
test
ds
std
int3
adc
add
aas
push
lods
xchg
loopne
xor
dec
push
jno
dec
pop
fnstcw
mov
jecxz
cmpsb
scas
xchg
lcall
fildll
jnp
mov
push
shlb
xor
cwtl
push
mov
dec
pop
cwtl
std
test
mov
pop
int
js
adc
push
push
cmpsb
mov
fimull
xor
sub
ljmp
std
std
jb
lahf
xlat
push
pop
dec
jne
arpl
add
jecxz
fldl
in
mov
jg
push
dec
inc
mov
cmp
movsl
loope
sbb
xchg
inc
imul
cmc
sbb
scas
fidivrl
push
or
ds
inc
sbb
mov
lret
mov
xor
clc
insl
adc
sahf
sub
push
jmp
aam
in
cmc
fidivrs
lods
mov
stos
push
movsl
cwtl
xchg
inc
adc
mov
or
jecxz
ss
and
test
iret
push
sbb
fwait
sbb
ljmp
out
sub
or
iret
mov
adc
sbb
das
cmp
inc
ficompl
add
cwtl
pop
pop
fwait
pop
dec
out
je
pop
ja
adc
aam
movsl
out
cmovne
or
loop
dec
aad
mov
les
pop
test
rcr
xchg
mov
je
addr16
stc
sbb
ja
mov
push
pusha
shrb
pop
dec
les
jl
and
cmpsb
xchg
sub
fs
adc
jle
mov
xchg
out
xchg
popf
mov
sahf
lcall
mov
jl
adc
cmpl
dec
cmc
cmp
arpl
and
and
mov
pop
mov
sub
jae
lods
add
jnp
out
push
outsb
xchg
jl
dec
aam
push
cld
mov
lods
fistpll
push
sub
lods
in
outsb
dec
xchg
fcoms
pop
std
push
xor
out
inc
jmp
cmp
jo
les
mov
lods
je
pusha
adc
clc
in
movsb
cld
dec
add
cld
sub
imul
pop
or
mov
cmc
sub
push
insl
jne
imul
adc
daa
add
mov
sub
jae
out
popa
dec
jnp
mov
mov
cli
dec
cwtl
mov
popf
loopne
loopne
sbb
pusha
dec
fsubs
mov
nop
mov
jecxz
adc
push
sbb
inc
in
call
lods
outsb
test
pushf
inc
xor
push
mov
or
cli
fnsave
push
in
xor
in
int3
push
hlt
push
push
clc
fistl
inc
es
push
cmpsl
pushf
mov
mov
adc
push
xor
cltd
push
inc
test
xchg
or
ja
es
push
sahf
out
xor
in
pop
lea
pop
daa
enter
sbb
pop
dec
lods
out
inc
out
aas
in
mov
les
stos
rorl
mov
xor
dec
fdivrl
mov
sub
mov
jle
sbb
xor
mov
rorb
or
mov
cwtl
mov
iret
loop
sbb
pop
adc
xlat
or
aaa
cld
mov
movsl
adc
lods
jg
fwait
int3
cmp
and
loope
inc
cmp
sbb
dec
mov
cmpl
mov
sub
out
or
lods
xchg
icebp
dec
push
out
cli
xor
sbb
jne
mov
bound
add
mov
pop
push
imul
push
ret
add
test
in
lahf
pop
push
xor
adc
repnz
mov
pop
imul
scas
mov
xor
and
adc
dec
out
ret
test
lock
adc
les
adc
sbb
jbe
or
stos
cmpsb
mov
xorb
sahf
push
and
pop
lcall
pop
jl
sbb
popf
or
aas
orl
mov
cltd
fisttpll
push
fists
je
jl
orl
jbe
add
jns
int3
mov
cwtl
xor
adc
sub
push
push
aam
in
cld
aad
push
push
push
xchg
sub
cli
add
xchg
sbb
xchg
xor
push
ret
xchg
fadd
js
xchg
xlat
pop
aaa
mov
dec
popa
push
jmp
and
inc
daa
xchg
mov
inc
clc
push
inc
adc
xchg
aam
test
jnp
xchg
push
dec
into
mov
cmp
fdivrl
das
add
ss
sbb
and
and
movl
insb
xor
jnp
pop
pop
jo
outsb
in
in
jb
ret
push
mov
jmp
add
lahf
ja
fmuls
test
cmp
push
rcl
inc
inc
and
sbb
sbb
cmpsl
stos
add
cmp
leave
pop
sbb
pop
sub
rclb
loopne
iret
sub
add
xor
iret
and
decb
cmp
repnz
jge
stos
loope
and
inc
lock
inc
xchg
xchg
gs
iret
fistps
rcrb
or
mov
jo
jecxz
out
bound
test
cli
sbbb
or
inc
mov
loope
sbb
inc
fstps
insb
rclb
popf
fucomip
ss
mov
xchg
dec
dec
push
xchg
das
lcall
in
xlat
adc
sbb
and
shll
xchg
xor
js
cmp
sbb
xchg
jae
jecxz
lods
insl
test
jno
dec
pop
aam
xchg
xchg
nop
xchg
sti
add
and
fwait
stc
aad
mov
fwait
inc
adc
pop
and
jecxz
jo
insb
push
enter
sbb
cmpsb
jge
inc
pushf
xor
dec
lods
daa
jb
lea
xlat
iret
dec
pop
mov
popf
push
jge
in
insb
add
mov
fstpl
adc
leave
stc
jne
fwait
iret
arpl
push
xor
sub
xchg
jp
dec
mov
not
insl
mov
xor
aas
mov
adc
mov
mov
pop
mov
push
cwtl
icebp
xor
inc
ret
fwait
cmp
ss
jle
notl
lret
dec
mov
mov
mov
pop
enter
sbb
std
xlat
inc
and
into
dec
addr16
sbb
adc
loopne
pop
adc
stos
jne
dec
sub
sbb
xor
jb
xor
mov
sbb
aam
cmpsl
movsl
rolb
jne
add
call
dec
mov
das
rorb
sbb
lods
sti
shrl
add
ljmp
mov
outsb
push
not
xor
fildll
or
popa
dec
mov
int
inc
pop
hlt
in
xor
int
pop
jmp
xor
push
fs
aas
xchg
rcrl
xchg
pop
test
jmp
fsubrp
gs
push
lret
icebp
and
cld
arpl
imul
xor
push
in
xchg
data16
inc
mov
jl
aaa
inc
in
cmp
subb
pop
mov
pop
mov
inc
add
xor
push
ret
fdivrl
icebp
push
or
xchg
or
cmp
stc
ljmp
sahf
loop
mov
xlat
out
in
push
add
addl
ret
mov
jp
movsl
cmp
push
inc
aaa
mov
cmpsl
ret
mov
fsubs
push
add
mov
fst
pop
cmp
fcoms
mov
lods
in
in
inc
ret
jg
sbbb
push
cmp
sub
xchg
mov
sub
and
jp
sbb
ds
ficompl
or
dec
jo
add
mov
int
cld
and
leave
scas
repz
cltd
das
push
arpl
inc
idivb
dec
pop
jg
rclb
jecxz
push
push
cmpsb
sub
rcrl
out
mov
add
mov
pop
jns
jmp
sbb
frstor
jns
aad
sbb
mov
loop
push
add
or
inc
cmp
mov
jp
mov
mov
xor
push
sub
or
ja
mov
mov
mov
jp
push
sub
mov
mov
push
ja
leave
push
or
mov
repnz
push
mov
dec
fwait
mov
out
out
ror
decl
fwait
cld
fdivrl
xorl
mov
and
mov
mov
xchg
repnz
mov
out
lock
jne
jb
add
idivl
cwtl
ret
push
in
sub
out
divl
push
rorl
lcall
pusha
sub
xchg
js
loopne
dec
inc
sbb
cmp
sbb
fdivs
dec
dec
test
mov
dec
call
adc
lret
dec
add
mov
xchg
xor
fiaddl
sbbb
out
cs
dec
jle
xchg
lds
arpl
out
loopne
pusha
shll
add
push
inc
sbb
cmc
mov
mov
rorb
xor
or
push
ds
aam
sub
add
cmpb
jnp
jae
decb
or
or
popf
stos
xor
xchg
scas
loope
fcmovbe
data16
xchg
out
lret
push
jb
inc
out
movsb
sub
test
insl
imul
adc
cld
cmpsb
sahf
fldlg2
add
pop
cmp
lods
or
inc
cs
push
je
xor
aam
cld
lea
xlat
icebp
vfrczss
mov
sti
pusha
jno
dec
insl
xchg
jne
dec
shrl
filds
sub
mov
xor
js
sti
aaa
popf
popa
aas
mov
dec
inc
mov
das
mov
mov
dec
push
jp
scas
dec
in
lea
js,pn
sbbb
dec
jmp
rorl
sahf
and
fimull
aam
ret
ss
pop
mov
jmp
sbb
adc
mov
mov
jnp
jmp
xchg
cmpsl
lds
scas
jge
sbb
pop
movsb
or
sahf
cmpsl
jl
dec
aas
push
mov
xchg
pop
and
shrb
or
xchg
mov
xchg
xchg
push
jb
popf
test
jns
push
fs
fstpt
or
outsl
loopne
sbb
popa
inc
ret
divl
and
xor
cmc
int3
aad
mov
cmpsl
fisubs
enter
push
push
jne
cltd
sbb
pop
dec
inc
icebp
fmulp
in
push
mov
mov
or
sbb
or
testl
add
xchg
adc
mov
mov
or
mov
nop
enter
mov
in
xor
xchg
mov
mov
xchg
aad
outsl
mov
or
cmp
rolb
add
out
lret
iret
sub
nop
xor
add
jnp
adc
test
cs
aad
inc
push
stos
xchg
jp
cmp
pop
push
dec
scas
scas
fnsave
mov
mov
dec
mov
inc
push
loope
jl
orl
outsl
adc
test
cli
outsb
push
pop
jmp
xor
add
addb
push
push
repnz
pop
lcall
mov
push
push
xor
arpl
sbb
adc
xlat
pushf
pop
xor
stos
subb
or
adc
test
stos
sub
gs
adc
fcoml
jo
andl
jle
fwait
push
cmpsb
js
aas
icebp
gs
push
mov
call
leave
pop
xor
sub
sub
or
call
pop
out
mov
dec
dec
push
subb
data16
idivl
add
or
lods
pop
and
int
xchg
aam
adc
push
pop
adc
insl
hlt
pop
ds
mov
outsl
sahf
mov
jae
xchg
inc
out
jae
lcall
movsb
adc
cmp
xchg
stos
fmuls
bound
adcb
cli
ja
repz
mov
jo
mov
ja
push
scas
aaa
je
nop
xchg
pop
xchg
mov
sub
lea
aas
xor
xchg
xchg
lds
or
ss
jb
aas
xchg
rcrb
sbb
pop
lds
lret
in
inc
sub
dec
lcall
lods
jp
or
pop
fimuls
es
cmpl
inc
in
dec
jne
fdivs
mov
in
insl
ljmp
dec
and
xlat
fisubrs
pop
xorl
clc
inc
pushf
ficoml
jmp
pop
into
jmp
js,pt
movsl
bound
dec
lods
mov
jnp
and
mov
popf
sbb
test
jl
cli
add
push
cmc
mov
mov
jg
add
adc
mov
cltd
clc
rcrl
dec
push
xor
cld
popf
cld
jle
sbb
lahf
add
add
neg
out
int3
lds
call
ljmp
or
sub
xsha256
cmpsb
push
imul
lret
out
aam
sub
pop
or
and
jle
sub
inc
add
jns
je
sub
mov
pop
xchg
ds
out
dec
fcomip
add
stos
and
mov
mov
std
sbb
mov
ljmp
cli
mov
roll
std
sub
frstor
sbb
leave
mov
shrl
push
mov
aam
loopne
cmp
shrl
repz
adc
add
pop
jmp
dec
and
push
setne
div
push
sbb
pusha
fldl
cmp
movl
or
orl
inc
mov
push
outsl
or
ja
lahf
inc
fcmovnu
loope
and
xchg
js
ss
jl
add
repnz
ffree
dec
dec
add
mov
mov
stos
loop
ficoms
xor
mov
dec
jae
dec
sbb
icebp
mov
cmpsb
jo
shlb
jg
iret
mov
hlt
sub
cmp
in
test
mov
fistpll
inc
stos
xor
iret
add
mov
and
int3
ret
pop
push
jno
movsb
push
icebp
xor
stos
sbb
es
lret
dec
mov
add
sete
lods
repz
push
push
and
fdiv
pop
xor
dec
sub
scas
pop
mov
sbb
mov
mov
imul
xchg
lcall
daa
push
data16
cli
mov
test
repz
js
dec
int
sub
out
shr
inc
mov
stc
sub
jmp
pop
jp
mov
fs
xor
test
xchg
outsl
das
movsb
aad
popf
pop
outsb
and
gs
mov
ss
test
ds
xlat
and
flds
stc
scas
mov
scas
stos
push
sub
xchg
sbb
push
mov
fcomps
lret
cmp
add
test
or
popf
js
ja
sbb
lret
xchg
inc
bound
sbb
sahf
or
in
add
pop
mov
cmp
xchg
and
mov
mov
and
clc
mov
adc
cmp
hlt
sar
push
fimull
arpl
cmpsb
data16
shlb
ret
leave
bound
mov
mov
movl
dec
xor
mov
imul
movb
xlat
jbe
sarb
cmpsl
pop
ljmp
push
repz
dec
jecxz
dec
xor
clc
fists
add
push
jg
sub
xor
je
cmpsb
push
in
fcomps
adc
push
cmpsl
adc
jo
call
scas
cs
shll
push
icebp
mov
and
cld
xor
add
sbb
jo
pop
and
jmp
jmp
mov
add
test
aas
pop
sub
pushf
sbb
stos
sub
outsl
lods
sbb
pop
push
cmp
xchg
out
and
in
jb
xchg
testb
test
test
movb
incb
sbb
xchg
pop
or
repnz
ljmp
cld
xchg
lock
aas
and
or
jg
cmpsb
xor
xor
push
mov
sub
inc
in
xor
lret
repz
clc
jno
cmp
movsl
dec
dec
push
gs
xchg
pushf
and
in
in
loopne
push
mov
inc
cmpb
push
sub
dec
int3
and
mov
loopne
cmp
cmp
add
repz
xchg
xor
xor
stos
dec
imul
sbb
out
add
inc
fisubs
js
fscale
or
mov
std
mov
ljmp
enter
jg
mov
sbb
mov
daa
fsubrs
repnz
adc
shll
pop
push
lret
ljmp
mov
aam
fdivrl
cmp
push
insl
push
and
add
jmp
rolb
loope
sub
stc
adc
xor
mov
or
or
or
pop
dec
jbe
xlat
in
scas
sbb
arpl
add
jnp
mov
int
iret
sub
sub
and
test
dec
sbb
int
xchg
fisubl
pop
aaa
mov
jno
movsb
xchg
insl
in
mov
xor
ds
ljmp
cltd
push
cltd
push
sub
aaa
push
add
bound
xor
xchg
xchg
push
jne
pop
xor
stc
popa
mov
sbb
scas
addl
xor
xor
xor
ret
cmc
enter
mov
mov
test
mov
push
sub
mov
jbe
sub
mov
xchg
lcall
mov
xchg
cld
sub
inc
push
push
fnstsw
popa
mov
imul
stos
push
or
push
movsl
lea
inc
imul
lret
fadd
mov
jne
sbbl
adc
cmp
mov
inc
push
sub
xorb
aas
sarb
mov
iret
fcmovbe
cmp
ljmp
jg
jg
sbb
and
out
sbb
jge
incl
popf
sti
test
and
nop
ss
mov
inc
push
pusha
fxch
mov
movsl
xchg
push
loopne
sub
pop
nop
in
and
loop
out
cs
xor
cmpl
and
in
insb
les
mov
js
lds
icebp
sub
arpl
sub
adc
xor
jbe
adc
rorl
cmpsb
xchg
mov
fisttpl
mov
repz
jo
imul
loop
fistpll
lods
std
cmp
add
add
fisubrl
jmp
or
mov
pop
add
es
mov
xchg
rep
in
inc
and
loope
xchg
dec
pop
xor
and
add
or
lret
bound
fwait
adc
or
je
adc
cmp
push
sarb
xchg
jae
cmp
jb
push
mov
std
cmp
loope
inc
mov
push
mov
rorb
sub
imul
add
enter
add
fwait
adc
mov
jge
push
cli
outsb
cltd
and
jle
xor
movsl
push
cli
add
jns
push
lock
inc
xor
or
bound
xor
popa
and
test
mov
and
lret
adc
pop
cmp
out
dec
xchg
fmuls
mov
test
int
mov
pop
add
divb
xchg
fisubrl
xor
incl
jecxz
filds
jl
insb
popa
add
insl
fcomp
push
cmp
adc
push
clc
cmpsl
sahf
cmpsb
jne
inc
ja
ja
push
addr16
test
insl
iret
movsb
pop
lcall
fistpl
fsubrl
dec
movsl
test
shlb
inc
sbb
stos
lcall
movsb
fs
mov
xchg
xor
stc
fwait
repz
jno
ss
gs
adc
or
cmp
pop
push
mov
xchg
fstpl
popf
pop
ljmp
dec
jmp
xchg
adc
mov
sbb
jmp
mov
aas
pop
pop
int3
pop
fstp
push
popa
sub
fimuls
xlat
inc
repnz
clc
popa
add
pushf
xlat
repnz
fcoms
rclb
push
lret
adc
push
and
mov
push
insb
lahf
cmpsl
stc
shrl
outsl
xor
cltd
outsb
lea
dec
xor
vmwrite
or
fbstp
loopne
insl
push
add
mov
std
lret
lock
imul
sub
in
inc
test
sbb
pop
adc
sub
call
adc
fisttpll
imul
outsl
adc
adc
adc
and
pusha
mov
jl
pushf
cmp
cmp
or
dec
sbb
adc
int3
sub
mov
gs
or
and
xor
lret
lea
test
dec
stos
sub
pushf
cltd
or
push
dec
fcompl
sub
lock
orb
rcrl
cs
dec
jno
push
test
test
cwtl
xchg
jnp
pop
imul
and
xchg
inc
adc
aas
add
inc
xchg
scas
rcrl
test
cmp
cmpsl
lret
es
jmp
pop
ret
lret
ret
ja
sbb
xor
jge
xor
lret
xor
sub
or
fadds
insb
sbb
adc
push
cwtl
xor
int
movsl
cld
push
sbb
mov
cmp
repz
and
add
sbb
cmc
cmpsb
xor
lret
xor
cmp
jp
cli
roll
imul
pushl
mov
cwtl
jg
lret
sub
out
pmaddwd
into
xchg
cmc
lods
int3
jb
cmp
ss
arpl
mov
lahf
jns
ret
test
fistpll
ss
sarb
lahf
loope
mov
lret
sahf
mov
add
rcrb
or
ret
and
iret
scas
test
movsl
popf
cmp
cli
pop
pusha
aad
push
out
subb
call
xor
insl
ret
ret
movsb
adc
iret
es
popf
dec
xchg
call
jl
fildll
ret
out
sti
mov
in
jecxz
or
dec
popf
bound
sti
jnp
icebp
push
daa
inc
jbe
rcrl
not
into
stc
pushf
out
xchg
rol
inc
dec
ja
or
cmp
mov
fidivs
aas
mov
jg
cld
in
popf
ljmp
push
add
dec
cmp
outsb
mov
dec
pop
add
and
fistpll
mov
iret
cmp
in
inc
insl
pop
xor
add
mov
cmp
test
out
jne
int
cmpsb
lret
dec
cmp
in
adc
or
pop
ljmp
in
aam
xor
sub
lahf
push
inc
popa
mov
inc
mov
call
mov
mov
out
xor
movsl
pushf
popf
xor
sub
push
jno
cmp
inc
jae
inc
add
dec
mov
mov
add
sbb
xor
add
xchg
adc
inc
sbb
fwait
xlat
lods
out
push
xor
lret
divl
jae
bound
flds
mov
std
xchg
xchg
push
test
push
sbb
inc
ror
xchg
mov
popf
js
xchg
dec
shrl
iret
push
add
fstps
icebp
jle
into
xchg
cmpsb
test
add
sbb
xor
mov
shlb
push
add
ret
sub
test
fcompl
xchg
mov
cmp
test
push
mov
repz
movsl
adcl
adc
insb
lds
inc
or
push
rcrb
add
loopne
inc
aam
imulb
adc
xchg
aaa
cmpsb
outsl
xchg
xchg
js
add
fcomi
dec
jmp
lock
jns
add
pop
clc
stc
jbe
sub
inc
jo
pop
jno
jmp
dec
aas
push
lret
out
mov
cwtl
in
shlb
mov
xor
sbb
cmp
cmc
pop
dec
aam
cmp
pop
push
test
sub
xor
icebp
mov
cmpsb
enter
cmpsl
lret
adc
bound
or
adc
xchg
in
xorl
cmpsb
cmpsb
enter
addr16
divl
movlps
dec
outsb
add
add
dec
pop
xchg
add
jno
pop
dec
ljmp
out
leave
jns
fistpll
mov
mov
insb
test
pop
je
inc
pop
loop
sub
in
scas
sub
mov
int3
cmpl
sub
add
pop
xor
and
xor
fisubs
dec
neg
mov
jo
lcall
out
into
push
xlat
and
pop
jg
call
mov
and
sbb
rorb
sbb
stos
aad
lods
pusha
inc
mov
cmp
clc
lcall
lcall
jmp
stc
pop
orl
adc
sbb
aad
outsl
jmp
inc
aad
xchg
cmp
add
cli
mov
enter
or
sub
fldcw
ss
roll
dec
loop
pop
insl
mull
addr16
push
mov
loope
cmp
outsl
js
mov
stos
lods
push
sbb
aas
lods
dec
out
popl
push
xchg
mov
mov
mov
icebp
loope
or
ja
push
imul
and
push
or
ja
pop
out
or
cld
ds
in
sbb
test
outsl
xlat
out
fsts
fldenv
rcrb
mov
daa
cltd
pop
aam
jge
and
jnp
mov
xchg
push
pop
add
jge
in
xchg
push
sbb
jp
shlb
add
mov
subl
or
push
nop
cmpsl
adc
xchg
int
sub
mov
out
cmp
and
xor
or
lock
test
jmp
mov
hlt
sub
dec
mull
and
push
cmpsb
test
das
mov
inc
xlat
and
xchg
or
sti
inc
jp
mov
pop
insl
popa
cmp
repz
inc
frstpm(287
pcmpgtd
push
add
cmp
fisttps
and
lcall
out
cli
xchg
jo
scas
adc
es
leave
scas
or
outsb
mov
arpl
adc
sbb
sbb
shl
mov
movsb
stc
jnp
pusha
sbb
mov
add
add
lret
xchg
cmc
push
jnp,pn
popf
xor
scas
arpl
fistps
xor
out
and
mov
pop
xchg
mov
mov
inc
testl
mov
pop
sar
fs
or
mov
fcomps
mov
xchg
push
xchg
lahf
dec
mov
jnp
and
sbb
rolb
outsl
mov
clc
call
cmp
std
push
jl
lret
aaa
arpl
mov
add
sbb
push
loope
inc
mov
push
jae
mov
mov
cmc
inc
mov
adc
sub
movl
push
inc
cltd
push
jb
pop
lock
fsts
lods
adc
mov
cmc
jb
push
mov
and
sbb
mulps
xor
in
or
cmp
ret
fcoml
mov
jbe
inc
fbstp
fiaddl
sbb
sbb
pop
xchg
or
xor
mov
addl
add
ss
inc
scas
sti
sub
xor
fcomp
adc
lods
imul
lods
addr16
jo
pop
xor
imull
movsl
inc
push
sbb
rcrb
rclb
sub
lret
xchg
xchg
add
sub
mov
cli
scas
xchg
push
nop
push
cwtl
sahf
bound
iret
mov
or
cmp
mov
jb
push
fsub
add
movsb
mov
cmpsl
sbb
mov
in
sar
and
js
frstor
and
sbb
icebp
je
or
clc
sbb
mov
sbb
xchg
sti
sti
movl
sbb
pushf
les
inc
hlt
aad
repz
nop
and
inc
fs
mov
jo
push
fstl
imul
sub
dec
mov
pop
pop
fidivrl
lds
out
mov
pop
and
bound
lds
iret
push
incb
fsubrl
jne
enter
imul
addr16
and
aam
inc
inc
mov
dec
inc
fildll
nop
sub
mov
test
mov
test
mov
jg
ret
inc
or
push
adc
adc
je
insl
cmp
test
repz
std
sbb
mov
fwait
pop
xor
mov
movsb
fs
xchg
test
sbb
sbb
cltd
mov
or
insl
fwait
xor
and
fisubrl
cltd
mov
mov
sti
and
jg
loopne
sub
xor
lds
mov
mov
or
lods
sub
xor
nop
cmp
pusha
mov
push
es
cmpl
adc
push
dec
iret
mov
xor
sbbl
xchg
cmc
aaa
push
pushf
aas
movsl
xchg
and
push
aaa
mov
jnp
data16
insl
int
add
push
sub
and
sub
les
test
shrb
pop
cmpsl
fcoms
add
jl
sub
outsb
je
xor
pop
adc
sete
inc
ljmp
adc
inc
sbb
lret
ret
xchg
outsl
mov
mov
mov
repz
dec
adc
add
in
or
pop
and
push
xchg
iret
lea
cwtl
dec
bound
movsl
push
and
push
sub
xchg
movsl
jns
and
imul
addb
add
push
inc
mov
out
loop
es
add
sub
add
push
mov
enter
xor
push
jl
cwtl
adc
jl
cmp
insb
aaa
arpl
dec
mov
dec
pop
pusha
outsb
insb
or
cmp
dec
push
cli
repz
out
pop
shrb
out
fmuls
xchg
lcall
hlt
test
lods
jge
xchg
popf
clc
shrb
mov
dec
adc
add
sbb
mov
lock
sbb
and
stos
dec
dec
jl
cwtl
push
cmp
xchg
insb
pop
jbe
adc
les
add
push
or
les
leave
andl
das
mov
push
push
jae
popa
shll
mov
jne
jg
into
fdivl
pop
sarb
jmp
xor
sti
lock
sahf
push
adc
ss
cmc
test
scas
mov
sub
aad
in
ret
stc
add
dec
mov
mov
test
mov
fs
sahf
stos
hlt
cmp
sbb
jns
lea
es
push
idivl
cmp
les
inc
dec
fnstcw
xor
dec
vsqrtps
pop
cwtl
repz
icebp
mov
and
mov
xchg
out
jmp
lret
imul
xor
mov
cmp
mov
cltd
xor
cmp
sbb
jmp
aaa
pushf
pop
lods
mov
into
jbe
inc
in
aad
cmp
xor
aad
dec
xor
or
push
idiv
dec
xchg
mov
adc
arpl
mov
cs
pop
cld
push
xchg
pop
dec
pop
fnstsw
es
pop
daa
push
imul
cs
testl
pop
inc
insb
jnp
xchg
cltd
dec
cli
fbstp
dec
fdivl
push
testb
cmpsb
das
sbb
lret
rclb
test
into
test
emms
pop
xchg
dec
int3
and
test
sub
hlt
je
pop
leave
mov
cmp
xchg
add
ljmp
adc
or
or
adc
sbb
sbb
and
mov
push
dec
pop
jae
push
iret
jo
dec
aam
out
std
test
arpl
adc
hlt
lret
cmp
inc
or
and
add
ss
popf
lods
inc
xchg
xor
arpl
mov
add
jl
pop
jecxz
ja
cmpsl
mov
popf
dec
adc
imull
xchg
jbe
iret
je
enter
lret
cmpsl
xchg
sbb
sbb
mov
test
xor
or
pop
add
add
sub
mov
dec
xor
inc
outsl
dec
insb
je
leave
cltd
dec
sbb
mov
lret
addr16
mov
push
leave
mov
jae
dec
icebp
mov
in
outsb
popa
add
mov
movsb
jp
movsb
loopne
mov
stos
enter
cs
xchg
pop
fldt
mov
mov
push
dec
inc
mov
push
loope
xor
fistl
call
push
cmc
xchg
or
fistl
fsubs
sub
lahf
stos
cwtl
pop
add
mov
mov
test
je
or
fisttpll
iret
les
repnz
cmp
push
fdivr
xor
cmpsb
mov
jmp
sub
iret
cmpsb
je
jns
dec
mov
jg
mov
xor
data16
inc
jmp
loope
xchg
push
pop
arpl
insb
rcrl
gs
sar
jnp
fidivrs
xchg
pop
cld
add
xchg
shlb
push
add
adc
xchg
call
and
sbbb
loop
lods
aam
imul
jge
call
add
push
cmp
and
xor
xchg
or
mov
ret
outsl
aaa
push
jbe
mov
shll
iret
push
add
dec
lods
popa
cmp
nop
mov
mov
xor
inc
cmp
jo
mov
test
xchg
and
push
mov
jbe
push
mov
inc
dec
push
hlt
scas
lcall
xchg
aam
stc
mov
ret
jbe
adc
dec
mov
sub
and
out
jno
pop
popf
mov
adc
and
dec
movsl
int3
add
test
iret
outsl
jbe
cmpsl
adc
jg
xlat
sahf
lods
and
es
mov
rorl
cmpsl
push
pop
mov
andl
imul
mov
insb
enter
in
adc
sub
inc
xor
dec
pop
and
jg
gs
movsb
xor
adcl
sub
dec
jmp
loop
sub
jecxz
xor
mov
in
addr16
inc
fadds
adc
lea
sub
sbb
adc
movsl
mov
add
and
inc
fistps
or
mov
jle
cmp
daa
mov
dec
nop
jo
test
aam
test
aam
jnp
cmpsb
fbld
add
push
in
xchg
xor
lret
cmp
mov
add
mov
in
lret
xor
fdivl
sbb
inc
arpl
ss
loopne
jns
xor
jl
sub
cmc
mov
call
push
ljmp
cmp
and
out
sbb
aaa
xchg
dec
nop
jmp
xor
inc
mov
xchg
pop
xchg
mov
jmp
repz
jns
adcl
inc
push
push
popf
push
xor
push
pop
push
and
push
cltd
lret
sub
mov
mov
mov
cmpl
outsb
scas
outsl
add
popf
imul
adc
lret
sub
insl
jl
pop
adcb
arpl
pop
dec
mov
jmp
fisttpll
jb
xchg
repnz
je
rolb
dec
pop
test
testb
adc
