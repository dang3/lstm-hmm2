sbb
add
mov
xchg
fcoml
jecxz
cmp
xor
data16
jmp
push
xorl
aam
ss
lahf
xor
imul
ss
xchg
adc
ret
cmpb
pop
adc
mov
xchg
mov
sbb
adc
pop
fdivl
repz
sbb
or
inc
mov
jge
lahf
lret
pop
sarb
into
adc
dec
xor
xor
adc
jg
aam
mov
das
les
inc
rcrb
aaa
mov
lods
cltd
les
out
mov
push
dec
add
or
test
pop
push
jb
add
cmp
popf
fdivrl
adc
mov
push
imul
out
pop
pop
pop
jp
stc
and
mov
int3
movsl
mov
xchg
push
pop
jns
inc
mov
divl
mov
xor
xchg
hlt
push
xchg
jl
mov
xchg
inc
jecxz
or
pop
adc
sub
push
fcmove
inc
loope
push
int3
ss
mov
cmpsl
andb
lret
cmp
rorb
jecxz
and
mov
pop
rclb
hlt
inc
and
bound
pop
jnp
cmp
cmc
sbb
ljmp
popf
loop
inc
scas
dec
jmp
xchg
add
add
cmp
inc
loope
out
cmp
jp
cs
ljmp
push
popa
clc
rcrb
je
cmp
negb
and
adc
inc
arpl
mov
jnp
xor
adc
cld
sysexit
inc
daa
adc
daa
jle
jg
mov
pop
push
test
mov
fdiv
outsb
xchg
and
mov
inc
movsb
dec
cmc
mov
rolb
push
lock
sub
dec
push
push
mov
inc
ror
int
jge
and
pop
inc
xor
dec
loope
fistpll
fstps
mov
push
dec
ja
sbb
test
mov
sbb
popf
mov
ljmp
sub
leave
popa
aas
bound
mov
dec
aaa
jne
inc
dec
in
add
fimull
xor
mov
push
cwtl
shll
nop
push
in
push
insb
cld
fwait
in
ret
in
fiadds
xchg
push
fdivrp
rcrb
out
fdivl
or
push
insl
mov
push
in
sbb
sarb
push
shl
cmp
mov
add
shr
inc
push
arpl
imul
pop
mov
lods
pop
jge
push
inc
jo
push
xchg
push
sub
ds
mov
addl
add
cmc
dec
adcl
mov
mov
pop
aas
or
ljmp
or
push
and
dec
in
lods
add
emms
sub
cmp
ja
cwtl
mov
imul
jno
cmp
jbe
shrl
pop
add
clc
in
add
xor
aam
bound
adc
cmpsl
jo
in
sahf
cmp
mov
popa
and
insb
xchg
sbb
aam
dec
fmulp
sbb
stos
pop
out
movsl
in
cli
and
jle
add
xor
sub
mov
adc
dec
cmp
test
test
sub
inc
loope
jle
fst
cs
mov
lock
jnp
mov
inc
push
insb
fwait
sbb
jnp
in
outsl
bound
insl
push
int
mov
sbb
jge
jge
mov
sahf
inc
and
xchg
and
jae
mov
cld
sub
xchg
imul
sti
es
or
std
das
fldenv
lahf
push
das
cmp
xor
push
pop
arpl
mov
iret
je
sti
call
adc
sahf
ret
inc
add
pop
out
out
add
ror
and
outsl
cltd
movsl
jle
pop
or
push
or
setne
push
sarl
stos
pop
insb
scas
dec
stos
test
cmp
packuswb
in
mov
push
daa
inc
jns
std
dec
ret
icebp
and
fmull
or
jns
cmp
push
iret
push
imul
ret
or
fidivrs
loop
cld
daa
dec
fiadds
aaa
dec
lods
data16
mov
jo
ror
mov
adc
pop
cwtl
cmpsb
and
cwtl
push
inc
testb
movsb
je
rclb
adcl
loop
push
aam
test
add
repnz
stos
nop
cmp
pop
jge
dec
rol
dec
mov
into
and
movsl
mov
orb
iret
ljmp
pop
dec
inc
xor
pop
inc
cmc
imull
cmp
imul
ja
mov
push
xor
jbe
push
arpl
out
dec
rcrl
stos
arpl
dec
pop
out
cmp
lcall
jae
pop
std
xchg
xchg
mov
mov
dec
mov
lcall
ret
lock
xchg
stos
test
pushf
sub
xor
inc
movsl
cmp
pop
in
fidivrs
or
movsb
ds
daa
and
out
das
push
jno
push
push
xchg
mov
xchg
imul
cmp
lock
sub
push
cmp
add
push
xor
adc
add
into
int3
lods
inc
movsl
repz
jmp
stos
aas
and
push
dec
lods
jo
mov
push
mov
sbb
pusha
sar
in
pop
cmp
xchg
add
xchg
pop
hlt
in
sub
xor
adc
das
lret
and
iret
in
cmc
and
mov
inc
sbb
xchg
negb
jecxz
jp
outsl
lret
stc
sbb
jns
popa
shl
sub
and
stos
fwait
in
add
nop
xor
js
mov
xor
adc
push
pop
sub
xchg
rcl
mov
xor
and
push
ret
and
shll
add
jne
loope
mov
xor
dec
ret
pusha
xchg
out
pop
jle
jb
lret
shlb
inc
mov
and
scas
sbb
addr16
inc
gs
icebp
jno
rcrb
js
scas
inc
pop
sub
ljmp
enter
clc
inc
cmpsl
int3
mov
mov
sbb
sbb
mov
hlt
mov
sub
mov
push
or
das
das
xor
dec
mov
sub
pop
dec
ja
inc
loopne
pop
leave
inc
lahf
cmp
popa
xchg
inc
adc
inc
dec
mulb
mov
or
out
stos
inc
loop
insl
ljmp
jp
mov
sub
lods
inc
inc
push
bound
leave
or
adc
pop
sub
fadds
jae
xchg
inc
lods
push
jp
xchg
dec
bound
inc
pop
sub
and
mov
push
sbb
fstps
sbb
es
pop
mov
add
outsl
loop
cmp
sub
sbbl
or
cmc
in
xchg
sahf
insl
sti
test
dec
imul
movsl
xchg
xor
mov
mov
ret
out
outsb
inc
movsl
xchg
and
or
orl
insl
inc
fsubl
pushf
mov
xchg
mov
xchg
outsb
and
jb
xchg
add
shlb
arpl
lahf
rolb
push
aaa
icebp
jnp
pushf
div
loopne
push
lock
lea
stos
data16
adc
mov
fildll
je
add
das
push
or
test
inc
adc
stos
leave
dec
or
psraw
mov
xor
cli
insb
jmp
incb
stos
fcomps
imulb
outsl
pop
sahf
mov
call
movsl
push
pop
push
fmuls
insl
sub
shlb
imul
xchg
icebp
and
mov
lcall
fsubrl
pop
sub
xchg
fldt
mov
fsubs
fistpll
adc
xor
xor
jp
dec
jbe
inc
mov
sub
or
mov
arpl
lahf
popa
jl
jo
sti
data16
jns
mov
in
dec
test
mov
adcl
mov
arpl
mov
lods
pop
sub
sub
pop
mov
pop
push
pop
mov
dec
add
cwtl
mov
lods
in
inc
jmp
gs
mov
pushf
inc
jbe
jnp
das
jle
ljmp
xchg
fstl
int3
xchg
or
es
je
xor
sbb
adc
xor
js
mov
in
aas
jns
inc
push
and
test
inc
sub
call
mov
xlat
fsub
call
mov
rorl
dec
out
ret
inc
repnz
stc
out
nop
or
shrb
push
clc
lcall
hlt
push
sbb
out
inc
sub
repz
adc
mov
es
jnp
xor
mov
addr16
adc
push
lods
dec
das
and
imul
rcr
mov
pop
mov
dec
sub
mov
jmp
je
mov
add
cmp
and
popf
into
xlat
mov
adc
jge
test
push
push
mov
in
mov
cli
sub
mov
imul
cmp
sub
pop
mov
into
add
pushf
arpl
mov
xchg
xor
pop
test
jle
iret
stos
push
test
cmp
popa
int3
and
stc
sbb
jecxz
adc
xchg
ja
xchg
imul
and
fldcw
lret
or
jl
xchg
insb
adc
xchg
xchg
push
pop
push
mov
jmp
add
addr16
cmpsl
mov
pop
cmp
test
pushw
dec
testb
sarb
test
ret
insb
lds
cmp
mov
push
lcall
mov
jo
mov
imul
pop
lds
pusha
adc
inc
ljmp
je
movsl
pop
orl
pop
xchg
lods
movsb
int3
cmp
push
mov
in
sbb
pushf
mov
jge
sbb
xor
ljmp
push
sbb
outsb
aam
or
scas
outsb
fmuls
lea
lock
pop
add
mov
sbb
popa
test
aas
dec
mov
sahf
pop
pop
sub
jge
js
inc
sub
fistl
fisttps
lds
fcmovbe
cmc
jae
ja
lea
inc
xchg
hlt
push
cltd
jmp
out
daa
adcl
js
add
rorl
inc
xchg
test
mov
cmp
ljmp
insl
pop
cltd
insl
cmp
pop
jmp
mov
stc
insl
and
jbe
es
lret
in
sub
clc
ds
sbb
mov
cld
jl
mov
data16
mov
cli
sbb
push
mov
jo
mov
es
ss
iret
daa
fisubs
jl
xchg
inc
push
and
mov
iret
pop
fildll
jmp
push
sbb
not
jbe
inc
cmp
imul
xchg
xchg
fwait
xchg
inc
xchg
dec
xchg
inc
and
lcall
jp
das
pop
xchg
mov
aas
shrb
insl
js
or
fmuls
in
mov
in
mov
int3
ds
lret
lea
mov
jecxz
outsl
cmp
or
sbb
mov
adc
bound
xor
push
jmp
push
enter
cs
movsb
fs
jns
int3
es
fistl
and
pop
xchg
jo
bound
sub
push
repz
sub
into
mov
ljmp
add
mov
lret
repz
add
adc
push
stos
lahf
andl
ret
and
mov
or
imul
imul
mov
cli
lcall
or
xchg
adc
sbb
sbb
outsl
adc
jno
mov
filds
lock
cmp
push
or
xchg
repz
inc
dec
add
and
pop
and
add
xor
outsl
sbb
cmpsb
mov
sbb
pusha
sub
xchg
xchg
les
cmp
cmc
cmpsb
push
sub
icebp
subb
add
pop
js
mov
ret
mov
dec
add
jns
xor
inc
lock
cmp
cmp
sbb
jl
and
adcb
outsb
js
dec
hlt
mov
push
iret
inc
int
aam
sub
xchg
mov
sub
dec
pop
das
sub
pop
push
movb
push
inc
xchg
daa
das
pop
hlt
xorb
mov
outsl
mov
ja
mov
adc
sub
es
dec
cs
aad
push
cmp
enter
push
mov
pop
loop
pop
inc
mov
dec
rcrl
push
mov
push
rolb
jno
xchg
frstor
popa
sbb
dec
pop
iret
popf
test
fcompl
cmp
movsb
clc
das
cmp
push
push
mov
out
sbb
sbb
cmpl
dec
add
mov
lahf
dec
mov
cltd
insb
or
push
insl
shl
repz
imull
sbb
push
and
jmp
sub
inc
roll
stos
mov
jb
jp
lods
push
pusha
aad
data16
push
and
js
inc
mov
lds
xchg
and
push
adc
iret
and
imul
cld
movsb
popa
fs
jno
mov
push
lds
fdivrl
adc
mov
xchg
mov
cmovne
enter
enter
outsl
xchg
ja
xlat
dec
dec
xchg
stos
or
mov
cwtl
sub
loope
and
ljmp
rolb
inc
dec
dec
es
sbb
jne
jo
scas
lock
sbb
into
push
bound
xchg
sub
jg
xlat
pop
loopne
aad
arpl
cmc
add
cwtl
andl
popa
xchg
ljmp
testb
js
jne
xor
mov
add
pop
decl
pusha
mov
inc
sub
cmp
mov
loope
sub
dec
lret
or
pusha
adc
in
mov
mov
jae
fcomip
mov
adc
pop
mov
jo
xchg
push
add
fisubs
cmp
loopne
into
mov
adc
dec
pushf
imul
enter
xlat
dec
mov
repz
addr16
dec
push
xchg
sbb
sbb
push
push
pushf
fxch
sbb
sub
sbb
fs
push
push
outsl
fidivrl
shrb
rcll
cwtl
xorl
pusha
aaa
aaa
dec
cli
inc
cwtl
and
sahf
aaa
dec
or
movsl
add
cmp
push
xchg
pop
daa
mov
mov
mov
mov
ljmp
jmp
daa
pop
cmc
jmp
std
xchg
lret
outsb
adc
push
lds
adc
push
arpl
mov
dec
push
jno
lock
out
jbe
cmpsl
or
jbe
sub
fwait
ret
mov
mov
push
out
int3
cs
adc
jl
xor
mov
repnz
and
xor
sbb
cmp
fdivrs
mov
fdivrl
aaa
sbb
and
data16
inc
rcr
scas
xchg
pop
sub
rcll
daa
push
jl
jae
lcall
repz
and
or
jnp
clc
loop
imul
mov
mov
or
mov
ja
add
or
int3
leave
test
das
scas
mov
in
jo
clc
into
add
jno
iret
push
xor
dec
fmull
lds
les
jg
pop
repz
jg
dec
js
sbb
aam
sahf
pop
or
fistpll
lret
stc
sbb
ror
pushf
mov
push
fwait
lods
mov
mov
xor
lahf
lods
add
xchg
divl
insl
ss
cmp
adc
data16
repnz
test
out
or
fdivl
sar
flds
bound
jl
scas
jnp
mov
dec
sub
add
test
cli
sbbb
xchg
xchg
sahf
lock
into
mov
inc
xchg
sbb
mov
ffree
je
dec
imul
or
mov
cmp
cmpsb
jmp
paddsw
xchg
fildl
mov
xchg
jo
leave
mov
jg
aas
aad
adc
vpsubusb
out
mov
lods
arpl
pop
das
ret
or
or
mov
xor
js
inc
cli
dec
or
jb
add
insl
mov
aaa
lea
lods
sbb
mov
shrb
mov
sbb
push
xchg
stos
out
aas
jns
fcmovnb
pop
push
pop
push
and
jg
aad
mov
push
xor
jns
pop
sbb
out
movsb
pop
mov
fists
push
in
lds
mov
fs
and
gs
cmp
out
push
xor
inc
and
vcvtdq2ps
xchg
xlat
sti
fisttpl
and
loopne
outsb
adc
into
cwtl
jo
sbb
outsb
sub
test
cltd
shrb
push
adc
ret
in
mov
xchg
ret
pusha
mov
movb
mov
push
mov
mov
lahf
arpl
inc
jno
sahf
in
add
call
sbb
ret
int
rcrl
jne
adc
push
adc
call
cli
fisubrl
adc
add
adc
sub
rcll
loopne
ds
xor
jle
cwtl
je
in
stos
add
outsl
and
push
in
jnp
mov
jle
xor
mov
scas
mov
gs
push
inc
cltd
and
movsl
int3
pop
pop
sbb
inc
dec
xchg
xlat
and
xor
mov
out
push
pop
jnp
je
xor
flds
mov
sti
loopne
push
mov
sbb
loopne
fwait
rol
into
mov
adc
pop
fcomip
sbb
push
mov
mov
mov
int3
push
sbb
outsl
inc
outsb
loopne
dec
jnp
in
adc
xor
xor
push
mov
xor
push
in
sbb
testb
leave
testl
shr
push
and
loopne
jmp
movsl
dec
inc
mov
jo
test
loop
out
and
cmp
bound
outsl
cmpsl
adc
jge
mov
punpckldq
sti
pop
in
cmp
mov
popf
insl
out
sub
out
pop
stos
add
leave
jmp
cs
pop
mov
push
js
push
das
jge
rolb
lods
jo
stos
pop
hlt
cmp
movsl
jp,pn
mov
push
leave
mov
pop
add
repnz
lret
cmp
jbe
push
out
lahf
pop
mov
mov
lods
push
test
shrl
mov
mov
out
xor
xchg
or
cld
mov
icebp
pop
lret
or
addr16
pop
mov
lcall
mov
sbb
and
fidivrl
lds
mov
fbld
je
push
cmpsb
adc
imul
cmpsl
or
inc
mov
testl
insb
dec
stos
and
ret
je
in
mov
std
jge
pop
dec
mov
adc
xor
repnz
je
scas
arpl
mov
frstor
outsl
jl
push
jg
jg
inc
xor
jne
xor
cmp
xchg
mov
lret
dec
dec
fisubrl
xchg
xchg
lret
xor
aaa
sti
push
in
push
aad
jne
repnz
fstl
je
je
dec
mov
test
scas
and
js
mov
call
xor
inc
fistps
and
sbb
or
aas
daa
lahf
push
out
cld
mov
fwait
sub
pushl
test
cmpl
mov
or
imul
fs
in
dec
mov
lock
inc
ss
mov
adcb
jbe
loope
jbe
xchg
bound
fs
stc
sub
shll
jbe
pop
sub
das
imull
pop
mov
sahf
les
cmpsl
cmpsw
add
jns
mov
aad
movb
jo
or
jae
cli
or
js
rcr
jmp
adc
aas
lret
pusha
bound
popf
test
inc
aaa
jne
aam
test
jge
pop
mov
fstpl
rorl
push
dec
lock
lahf
addr16
jae
sub
mov
and
jno
xlat
jnp
push
data16
sti
jp
jbe
imull
mov
pop
inc
movb
sub
loope
fsubl
mov
and
hlt
xchg
ret
sahf
sbb
dec
sub
fldt
rcl
dec
inc
cltd
lret
data16
xchg
mov
js
cmp
or
sbb
pop
sub
mov
xor
push
mov
pushf
jns
mov
div
out
inc
cmp
pusha
ja
cmovle
jecxz
xor
jnp
mov
mov
sbb
aam
and
jg
icebp
adc
pop
sub
bound
cmc
mov
aaa
push
or
int3
and
jl
outsl
fimuls
cmpsb
jns
jne,pn
fildl
jle
in
cwtl
lds
lea
jns
sbb
adc
jg
jb
mov
and
mov
dec
iret
or
jo
and
push
mov
stc
lds
mov
and
addb
inc
lea
sub
jo
lret
inc
xchg
pop
sub
int3
pop
inc
insl
cmp
pop
lds
mov
dec
xchg
outsl
mov
loope
outsb
pop
out
xchg
aaa
push
jb
notl
mov
aad
xor
fisttpll
fabs
imul
xchg
xor
divl
stos
or
and
imul
js
sbb
ret
adc
dec
pop
popf
xor
sub
dec
add
mov
lcall
and
pop
inc
shrb
js
sub
or
xchg
lods
stc
aas
add
dec
icebp
scas
imul
mov
pop
cmc
popa
ret
jmp
jg
sub
jmp
test
jmp
mov
add
mov
mov
or
adc
jge
sar
inc
mov
out
scas
out
jge
push
movsb
mov
std
sub
pop
fprem1
test
lahf
and
push
imul
aaa
fs
pop
dec
outsl
leave
adcb
add
push
mov
inc
xor
out
es
jne
arpl
or
scas
jbe
imul
mov
shll
mov
sub
cltd
lcall
mov
sub
jbe
pop
loopne
dec
imul
iret
mov
xor
jno
outsl
lds
leave
mov
jmp
sti
or
and
arpl
mov
lea
les
jp
push
jno
push
ljmp
imul
push
pop
or
xor
xor
int
addr16
test
and
insl
pop
scas
mov
inc
xor
ret
ret
test
sti
test
dec
lock
ret
inc
imul
ss
push
mov
int3
lcall
test
scas
adc
stc
pushf
sub
lret
mov
rclb
rclb
cmpsb
test
dec
les
cmp
pop
out
push
cltd
ret
adc
cmp
pop
push
sbb
push
out
adc
lds
cmp
push
dec
jg
stc
mov
cwtl
mov
and
fs
shll
sti
loopne
push
lret
sbbb
jmp
outsb
pop
sub
xchg
stos
and
test
jmp
push
jle
notl
mov
hlt
loop
jecxz
cmc
je
das
sbb
sahf
xchg
cwtl
pop
push
in
push
mov
mov
cs
clc
push
in
mov
loop
push
fcoms
std
movsl
sub
lahf
sub
in
bound
xchg
ror
push
cmp
fcom
outsb
in
lcall
mov
mov
or
push
std
jp
les
in
int3
in
test
mov
daa
jle
shr
mov
arpl
inc
mov
inc
cmp
mov
add
das
and
shll
mov
repnz
enter
cmp
fidivs
fistpl
test
dec
sti
mov
pop
sbb
mov
in
dec
ja
mov
and
subb
pop
mov
fidivl
sub
cli
mov
cs
and
out
sbb
add
push
cmp
push
cwtl
pushf
jnp
add
pop
and
orb
enter
lock
xor
test
movsb
sbb
cmc
sti
inc
stc
xlat
jmp
loopne
cld
fcoms
ffree
es
jmp
das
xlat
leave
rcrl
pop
popf
fistpl
inc
daa
pusha
jmp
or
or
cwtl
sar
repz
sub
out
xchg
push
test
push
loop
ret
repz
xchg
xchg
pop
jle
xor
jge
scas
popf
jge
movsb
pop
xchg
into
xor
mov
shl
in
push
mov
orl
stos
enter
insb
or
mov
popf
mov
xchg
jge
cmp
and
sub
outsl
pop
outsl
pushf
mov
jl
push
dec
inc
loopne
cmpsl
xor
pop
stos
jno
ss
insl
mov
inc
inc
lods
or
in
mov
movsl
xor
push
xor
inc
repz
adc
out
cmpsl
jp
or
aam
adc
mov
or
cs
adc
clc
pop
cmp
and
pop
mov
lock
aad
int3
pop
push
pop
mov
int
in
clc
es
lods
cli
add
or
fneni(8087
xchg
mov
sahf
mov
or
test
cmp
mov
mov
std
inc
mov
push
dec
paddsw
inc
aam
adc
add
add
cmc
xor
arpl
add
jbe
cli
sub
dec
movsl
adc
je
fsubl
pop
pop
fiaddl
jnp
fidivs
dec
cmp
add
cli
aas
cmp
xlat
xchg
lcall
es
or
xor
aas
fucomi
adc
xchg
xor
rcrb
sbbl
enter
vpshlq
stc
xchg
aaa
pop
hlt
add
outsb
adc
cwtl
push
sbb
daa
adc
in
push
aaa
add
loopne
xchg
nop
push
sbb
jo
lock
jp
mov
insb
fnstcw
out
inc
rcrb
imul
popf
mov
cmp
xor
push
push
push
lds
mov
outsl
xchg
in
cmp
inc
xchg
nop
jl
pop
idivl
sbb
test
adc
push
sub
outsl
adc
pusha
mov
adc
dec
pop
dec
sub
int3
dec
dec
and
insl
and
int3
mov
fdivs
mov
xchg
ret
mov
fisubrl
adc
pop
sub
adc
jp
popf
jmp
stos
cmp
ret
jmp
out
fidivl
rcrl
lret
xor
inc
outsl
xchg
ds
cmp
icebp
dec
sbbl
repnz
or
mov
ljmp
call
jo
bound
pop
dec
dec
mov
adc
fwait
jns
adc
inc
imul
mov
mov
adc
cmp
loope
nop
stc
add
shl
sub
mov
cmc
jbe
inc
adc
xor
je
daa
dec
gs
int3
or
add
popa
loopne
cltd
adc
xchg
cmp
cmp
les
stos
xchg
into
xor
cmpsl
sbb
repz
and
add
fmul
inc
int3
sbb
jl
cmpsb
fs
sbb
cwtl
xchg
lgs
test
sbb
and
dec
mov
sub
mov
pop
push
cwtl
fimull
sub
call
pop
xchg
leave
imul
sub
cli
sub
cmp
lcall
jl
ret
pop
imul
push
rcrl
shll
inc
adc
push
aas
stc
sub
add
cmc
loope
jmp
mov
rclb
out
mov
mov
cltd
jb
out
adc
cltd
adc
loop
mov
rcr
xlat
dec
xchg
jae
lcall
sbb
imull
jge
movsb
icebp
xchg
pop
push
mov
jmp
add
mov
inc
popf
lret
lods
jg
sub
out
mov
test
popa
pop
sub
lea
in
dec
call
jnp
jo
add
xor
inc
sbb
in
out
mov
cs
mov
cmp
add
sbb
adc
mov
in
insb
sub
sbb
push
aam
fimuls
xchg
in
jns
add
fwait
loope
mov
fidivs
cmp
dec
movsl
jp
xor
in
es
sbbl
add
rclb
adc
subl
jmp
mov
stc
xor
mov
aad
lds
jp
fsubrs
or
mov
sub
paddw
shr
jbe
in
ljmp
cs
sbb
insb
call
jle
inc
dec
sub
pop
inc
dec
movsl
rcll
cmpsl
mov
jns
ljmp
stos
or
lods
mov
and
cmp
push
fimuls
push
outsb
sahf
cs
ficomps
sbb
ret
in
add
shrb
ror
gs
pop
loope
mov
pop
cmc
xchg
test
testl
cmp
outsb
or
aaa
pushf
mov
or
pop
test
leave
iret
jns
negb
mov
lret
rorl
xchg
mov
or
inc
pop
adc
cmp
mov
fldt
push
in
mov
dec
cmp
cmp
or
movsb
cwtl
iret
xor
jmp
into
insb
mov
pusha
cmp
aaa
xchg
in
dec
mov
mov
stc
sub
push
or
std
mov
cmpsl
out
cli
std
shr
andb
stos
fwait
sbb
out
and
insl
pop
popa
insl
mov
xor
lock
in
jb
lds
lods
sbb
mov
lods
repz
sbb
pop
ljmp
pop
fnstcw
push
scas
test
adc
in
mov
cwtl
cwtl
repnz
lock
mov
pop
pop
lods
pop
in
nop
cmpsb
fadd
sti
pop
mov
push
push
das
out
sbbl
or
adcb
push
popa
mov
lock
xor
in
lahf
pop
clc
insb
push
mov
xchg
clc
cmpsl
loopne
sub
xor
adc
ss
scas
pop
push
push
mov
std
in
pop
ror
sbb
cmpsl
adc
jle
out
popa
sti
dec
mov
mov
dec
sub
data16
ljmp
xor
in
sub
aam
xchg
or
dec
aaa
mov
movsb
jmp
pop
icebp
push
icebp
xor
maxps
rorl
inc
fsubr
iret
pop
pop
lods
fs
stos
xor
test
test
mov
mov
fsubs
imul
push
jp
mov
add
mov
xchg
pop
into
into
mov
dec
cmp
incl
outsl
loop
loop
jecxz
sbb
inc
or
mov
roll
mov
lods
xor
scas
fmulp
icebp
inc
push
mov
add
add
jo
jg
pop
push
and
push
xor
pop
sub
mov
push
jp
mov
mov
in
ss
fucomi
push
pcmpeqd
sbb
inc
out
fdivrl
outsb
lret
dec
outsb
mov
popa
test
jecxz
cwtl
and
out
xchg
pop
inc
cmp
nop
adc
mov
inc
daa
in
js
xor
and
and
push
test
sub
jle
pop
cltd
shll
pop
insb
das
cmp
jo
mov
rcrb
int3
pop
xor
leave
scas
xchg
stc
xchg
xchg
jp
popa
aam
cmp
out
ftst
jno
pop
sub
ss
xchg
cwtl
adc
imul
mov
stos
mov
xor
jecxz
jecxz
movl
orb
mov
sub
ret
test
lods
sahf
lahf
mov
or
cli
in
leave
aas
sub
shr
jecxz
call
xchg
movsl
mov
xchg
ret
inc
aaa
jg
inc
ret
jg
cwtl
adc
data16
pop
sbb
dec
cmp
jnp
and
roll
or
sbb
incb
sbb
and
push
out
cmp
jmp
mov
dec
mov
nop
pusha
dec
sbb
sub
loope
fiadds
or
test
fldt
dec
mov
mov
push
pop
sbb
sahf
dec
xor
jle
into
mov
scas
jl
cmp
xchg
fbstp
in
sbb
and
repz
pop
mov
pop
js
arpl
xchg
mov
aaa
dec
xlat
xor
ret
push
push
scas
test
sbb
mov
jno
and
imul
nop
andb
sub
sub
das
inc
pop
mov
xor
mov
xor
clc
adc
out
mul
jmp
mov
xchg
arpl
and
sbb
or
xchg
mov
imul
jo
inc
add
mov
inc
leave
rclb
aam
jl
aaa
fcoml
sti
shrb
dec
xor
out
push
shll
jle
iret
jmp
sbb
xchg
fs
test
icebp
js
imul
sub
mov
hlt
push
fiadds
notb
pop
loop,pn
jo
cwtl
ret
daa
rcrb
adc
push
pushf
out
in
rorb
ja
and
sub
push
aam
push
popa
jne,pt
loope
or
push
push
movsb
lret
out
sub
sbb
push
add
mov
out
cmp
add
js
mov
aam
mov
inc
lds
sahf
out
daa
dec
icebp
shrl
push
call
add
xchg
fcoms
mov
out
adc
sti
int
add
add
cmp
or
nop
inc
xchg
pop
push
psraw
aam
cwtl
pop
push
shll
pop
xor
repnz
lahf
mov
dec
inc
inc
mov
dec
imull
xor
imul
pop
ret
push
dec
and
rcll
pushf
pop
in
jg
pop
cmp
dec
mov
das
enter
in
outsl
fs
out
leave
insb
xchg
and
mov
dec
fstps
ret
loope
insl
xor
test
ss
bound
loopne
inc
xchg
xor
sbb
les
in
pop
mov
and
ljmp
push
pop
cs
or
out
pop
fs
lods
ret
mov
rcrl
fiadds
loopne
rorl
lahf
mov
dec
mov
shl
hlt
xchg
mov
rclb
adc
testl
push
test
lds
cmp
cwtl
inc
mov
out
lcall
fcoml
sti
daa
out
xor
adc
mov
push
bound
mov
push
arpl
js
shrb
cwtl
xchg
sarb
and
mov
arpl
and
jne
pop
hlt
jns
xchg
icebp
mov
lcall
movb
fbstp
movsl
xchg
pop
shrb
dec
cmp
movsb
rcl
cmpsb
lret
or
lock
call
hlt
adc
jmp
dec
xchg
push
xor
loop
push
ds
jle
fmul
inc
jno
repz
ret
sub
jb
daa
imul
xor
sbbl
sub
xchg
pop
int
popf
movsl
sub
mov
in
cwtl
repz
xchg
xor
mov
xchg
daa
cmp
jl
push
test
dec
insl
arpl
inc
add
das
sarb
pop
jp
push
out
test
jb
shlb
out
aam
fstps
push
insb
out
repnz
das
shll
stos
nop
jecxz
add
negl
cmc
aaa
adc
push
or
inc
into
js
adc
mov
lds
mov
out
lahf
cmpsb
fcom
push
jg
arpl
jb
and
push
fbstp
mov
or
push
sub
in
aam
mov
fdivr
leave
in
xchg
xchg
ljmp
dec
xchg
popa
and
lret
test
or
sub
dec
insl
push
out
xchg
sbb
stos
mov
ret
add
pop
mov
cmp
clc
cmc
rcrb
jns
push
rcll
ja
sub
mov
das
mov
loope
sbb
lods
pop
outsl
sti
cmp
xchg
jo
arpl
or
aaa
jecxz
dec
lcall
xor
insl
push
ljmp
pop
cwtl
push
jmp
inc
and
stos
fucomip
dec
pop
jmp
imul
cmc
rcrl
adc
lock
jle
in
jno
pusha
push
push
cmp
sti
mov
cmp
icebp
pusha
dec
call
jns
sahf
or
and
repz
cmpsb
lods
sbb
xor
leave
leave
fs
or
mov
sub
inc
push
push
cltd
dec
shlb
mov
lds
push
push
or
pop
gs
sbb
mov
imul
psrld
and
mov
insl
push
sahf
and
fnsetpm(287
lahf
push
lods
xchg
pop
sbb
xchg
cmp
int3
mov
ret
pop
push
testb
pop
filds
ljmp
mov
ret
dec
pop
adc
sti
clc
ret
jg
or
fstl
cmp
xor
das
mov
mov
or
sub
loop
or
inc
ss
mov
and
mov
xchg
ja
call
jmp
mov
cmpsb
cld
ja
push
enter
adc
cmpsl
nop
sub
iret
inc
add
jns
jmp
dec
mov
sbb
pop
gs
icebp
pop
xor
aas
cltd
iret
dec
mov
add
fsubl
call
push
cwtl
jp
pop
jl
dec
scas
mov
test
pop
pushf
mov
xor
popa
sarl
cmp
lods
sarl
add
mov
jnp
lahf
jbe
sbb
loopne
sbb
add
add
push
sub
sbb
dec
repnz
aas
lret
ret
hlt
hlt
mov
mov
mov
or
cmp
sbb
dec
out
dec
mov
mov
hlt
push
test
stos
mov
cwtl
jecxz
push
out
jb
sarb
mov
out
mov
popf
mov
or
sahf
mov
adc
popa
xchg
sbb
push
xchg
adc
into
pop
lahf
or
inc
xor
fidivrl
imul
mov
sarb
adc
pop
popf
lcall
insl
mov
jae
push
popa
les
inc
lds
adc
cwtl
and
inc
mov
leave
mov
das
inc
iret
xor
aas
loope
push
mov
out
in
jmp
add
dec
out
and
adc
std
lret
jne
dec
push
mov
push
popa
xchg
add
in
ret
jns
mov
dec
int3
inc
mov
imul
sub
iret
sti
fidivrs
repz
or
cmp
jp
and
je
in
push
shr
sbbl
shrb
inc
fcomp
or
cld
pop
xor
shll
sbb
in
push
add
inc
mov
aam
cmp
xchg
ret
mov
xchg
xchg
xchg
pop
pop
mov
sub
xchg
push
movsl
xor
test
out
push
pop
fnstenv
inc
push
cld
mov
inc
mov
xor
test
and
inc
mov
sub
inc
jge
lahf
das
dec
lcall
fildl
mov
push
adc
push
int
cmpl
call
pop
out
and
fmull
fs
jle
inc
jle
push
cltd
ja
aad
push
ja
leave
mov
fldenv
std
leave
ficoml
add
push
jae
sub
adc
xchg
loopne
addl
jecxz
sub
neg
leave
jne
movsb
es
movsl
mov
xchg
push
insb
pop
mov
sbb
mov
jne
out
pop
xchg
mov
int3
xchg
outsb
mov
pop
mov
insl
dec
cmp
cmpsl
or
cmp
scas
mov
gs
into
pop
fisubrl
jb
xchg
mov
xor
adc
test
mov
lahf
sbb
shl
call
dec
mov
jo
dec
and
xlat
aaa
cwtl
mov
dec
mov
inc
push
xorl
aad
test
xchg
mov
popf
jge
scas
push
insl
sub
jle
jo
cs
shl
xchg
int3
jno
and
int
pop
lods
jl
lcall
outsl
popa
bound
pop
inc
scas
mov
cli
fcoms
mov
dec
in
push
cwtl
xor
das
test
mov
test
jp
ss
popf
call
fstl
in
jle
clc
and
adc
movsb
mov
add
mov
or
adc
adc
adc
into
adc
notb
xor
pop
xorl
jnp
jmp
adc
scas
in
sbb
fsubs
mov
cmp
dec
aaa
push
mov
loope
mov
mov
andl
sbb
fldt
das
push
mov
jae
sub
cmp
mov
test
push
or
lret
cli
cmp
cs
icebp
mov
int
mov
imull
jmp
out
test
mov
lret
xor
and
popf
mov
mov
sbb
lods
fstps
call
incl
jg
scas
pop
andl
aam
js
shll
idivl
and
mov
jg
mov
fldenv
mov
jmp
adc
mov
or
sub
movsl
flds
pminub
out
sbb
pop
mov
jb
jecxz
out
jp
lds
aad
les
in
xchg
cmp
icebp
inc
insl
jge
lret
sub
lock
sbb
jecxz
je
stos
fiaddl
fdivl
scas
js
push
xchg
push
mov
lcall
js
push
adc
int3
push
mov
adc
mov
push
or
daa
aaa
jae
iret
sub
fnstcw
pop
iret
pop
bound
je
sub
xchg
and
clc
xlat
dec
cmpsb
scas
outsb
jl
imul
invd
clc
dec
mov
arpl
jo
mov
aas
mov
les
cmp
jb
cmp
or
stos
sub
mov
iret
stos
pushf
das
mov
loope
ret
push
mov
inc
sbb
pop
fstl
xchg
cs
lret
dec
fstps
pop
in
testl
or
sahf
mov
pusha
mov
xchg
roll
sub
testl
into
stos
mov
mov
in
and
xor
mov
aas
adc
loope
xor
bound
cwtl
pop
stos
inc
icebp
cmp
push
out
es
mov
and
dec
int3
cmp
repz
fdivs
lds
dec
test
test
cmpsl
ljmp
add
xchg
fimuls
push
and
loope
aaa
outsl
repnz
pop
xlat
mov
adc
shll
sub
ja
jmp
inc
add
outsb
jb
inc
jb
pop
adc
push
outsb
xchg
daa
adc
test
pop
insb
mov
or
sbb
notl
pop
repz
ss
cld
cmpsl
scas
test
add
xchg
sbb
xchg
add
add
std
mov
hlt
jb
fmuls
fstl
pop
imul
scas
pop
daa
xchg
jg
sub
pop
mov
add
out
fsub
sub
lods
lahf
mov
jns
adc
out
mov
jns
cwtl
inc
lcall
push
adc
loope
sahf
test
push
cmp
in
lods
insb
or
xchg
movsb
and
arpl
lret
add
jne
arpl
mov
xchg
imul
inc
lahf
push
xchg
clc
fisttpll
jne
or
out
rcll
mov
mov
mov
je
inc
push
adc
mov
imull
gs
and
lods
fcomi
lret
popf
imul
popf
adc
adc
ja
mov
hlt
pop
ds
testl
mov
and
sbb
repnz
jbe
out
in
jnp
out
mov
aam
mov
fs
sbb
imul
xchg
sbb
loope
and
add
pop
dec
pop
nop
or
sub
sub
stos
sbb
es
xchg
clc
call
add
scas
sbb
jmp
sub
cmp
pusha
inc
mov
push
xchg
lods
sub
ret
fwait
incl
repz
enter
int
faddl
cmp
iret
jno
cmp
sarb
cmp
daa
push
add
leave
dec
jb
popa
rcll
jo
jno
xchg
push
mov
mov
xor
jmp
dec
fcomp
inc
or
xor
shlb
cmp
negl
out
mov
mov
aad
bound
in
addr16
and
mov
jnp
jge
cmp
fcmovb
js
or
add
aam
pushf
inc
xchg
call
xchg
jl
inc
enter
pop
mov
out
aaa
mov
inc
xor
imul
fsts
push
sub
clc
mov
daa
cltd
or
pop
lret
jae
jo
cld
and
imul
jne
push
aam
imul
lods
mov
adc
xor
lea
incl
mov
cmp
dec
jne
insb
outsb
pmaddwd
jge
pop
std
xchg
test
or
sti
jmp
cld
ss
stos
inc
leave
clc
lea
int3
xchg
fisubrs
dec
pop
fistpl
pop
push
sbb
clc
repnz
shlb
xchg
xor
cwtl
aad
ret
xchg
ja
mov
inc
mov
mov
icebp
test
or
push
in
xchg
cs
push
fistpll
ret
mov
xor
adc
pusha
xchg
xchg
xor
dec
cmp
ja
test
pop
fs
in
inc
cmpb
addr16
jmp
cltd
xor
xor
rcrb
push
mov
arpl
jbe
int
mov
dec
cmp
nop
cmc
sbb
loop
xor
pop
push
fcomp
jp
xchg
jb
cmp
xchg
sbb
in
andl
sub
add
and
rol
insl
adc
xchg
dec
dec
and
jp
sbb
and
or
repz
add
sub
clc
dec
jo
ljmp
inc
xor
jnp
ficompl
or
lret
sub
sbb
stos
idivb
xorl
cmpsb
or
fsubrp
test
pop
enter
addr16
xlat
pop
jbe
mov
lock
cmp
inc
jo
test
lret
aad
cmp
test
mov
js
sbb
lods
pop
stos
mov
lock
xor
popf
xchg
jb
mov
iret
push
lret
dec
mov
test
or
jge
push
fidivrs
cmp
pop
sbb
loopne
dec
cs
or
adcb
add
fnsave
push
cltd
bound
setle
mov
clc
lret
iret
roll
lahf
ror
iret
stos
mov
scas
jns
jmp
andb
inc
or
dec
xor
ret
or
sbb
nop
jnp
sbbl
daa
mov
scas
fdivrl
pop
cmp
dec
jne
incb
std
lcall
or
subb
nop
xor
lds
and
push
mov
stos
inc
int
jnp
sbb
pop
popa
pop
xchg
sbb
push
out
addr16
push
repz
ficoms
notb
dec
pop
ret
jmp
add
push
mov
int
out
push
and
movsl
jae
push
movsl
in
int
fisubrs
repnz
daa
xchg
dec
jne
lea
gs
mov
shll
fcmovb
test
fisubrl
push
sahf
arpl
fsub
out
mov
cmp
dec
daa
sub
lahf
sub
or
dec
imul
aad
aas
and
aaa
and
adc
in
es
gs
aad
cwtl
cmpsb
fmul
andl
ret
out
pop
mov
int
loope
leave
inc
in
into
mov
repnz
add
call
jmp
cmp
and
lea
loop
scas
and
xor
sub
push
adc
cmc
jl
subb
popa
stos
jp
and
pushf
std
cmpsl
and
mov
sub
repz
and
adc
mov
push
lcall
xor
cmp
push
shlb
hlt
mov
std
call
pop
mov
ret
sbb
ds
push
inc
mov
jecxz
or
dec
add
loopne
mov
jbe
mov
inc
mov
push
mov
cmc
in
push
add
insl
in
xor
cmpl
dec
dec
mov
sarb
inc
fidivs
xor
cmpsl
cmpsl
jg
pop
push
test
and
cmp
dec
sbb
inc
and
stos
cs
push
fsubs
push
loop
jbe
mov
sbb
enter
mov
stc
insb
fsubr
sub
cwtl
dec
rcrl
jmp
add
out
add
ret
jo
mov
dec
and
rcr
mov
dec
shll
mov
cmpsl
mov
out
fldenv
lea
testb
outsl
xor
arpl
inc
xchg
rorl
sbbl
jmp
adc
push
push
push
decb
fcoms
test
inc
cmpsb
cmp
mov
out
sub
mov
xchg
subl
out
jbe
jmp
dec
lds
pop
mov
pop
push
sub
ret
cmp
sahf
sbb
xchg
sub
mov
lcall
stos
lods
sub
mov
insb
cmp
pop
dec
sbb
cmpsb
xchg
fsub
fistpl
add
sbb
push
cli
xchg
add
cmp
call
push
jle
icebp
mov
fldenv
negb
jbe
sbb
aam
mov
jmp
fidivrl
xchg
lds
inc
pop
jb
push
dec
jmp
ret
xor
pushl
mov
in
popa
cmp
mov
jae
dec
aaa
add
or
sub
and
dec
mov
jb
mov
xor
repz
lods
sarl
xor
xchg
jns
dec
sub
imul
rcrb
cmpsl
push
dec
add
adc
cmpsb
out
pop
pop
mov
pop
mov
sub
hlt
adc
rol
inc
mov
inc
sub
mov
cmp
jb
sub
cld
cmp
add
lock
sbb
pop
imul
pop
clc
inc
mov
or
xchg
add
cwtl
sarb
add
or
aam
mov
xor
dec
lea
pop
dec
dec
jb
stos
addr16
jnp
pop
sub
je
out
movsb
dec
or
aaa
push
mov
loopne
shlb
into
pop
aad
mov
push
icebp
inc
inc
mov
sbb
imul
lahf
imul
imull
jmp
outsb
enter
push
pop
addr16
mov
sarl
lock
loope
mov
cmp
xchg
mov
jb
mov
rclb
mov
mov
jcxz
inc
mov
push
daa
jle
push
pushf
adc
jnp
fs
dec
pop
cmp
daa
pop
dec
cmp
add
jae
imul
push
popa
adc
es
mov
lret
pop
test
aaa
dec
add
pop
rcl
sbb
mull
es
push
pop
dec
psllw
mov
sti
jae
dec
or
pop
jae
pusha
xlat
xor
dec
sub
jb
into
ljmp
fs
mov
loopne
das
xchg
mov
shrb
and
inc
inc
ja
mov
jge
mov
jno
pop
idivl
shlb
inc
rolb
int3
xor
inc
lock
ss
in
push
lods
dec
lcall
iret
repz
je
xchg
push
cmpsl
inc
or
cli
std
mov
daa
xchg
xchg
js
add
push
xor
adc
pop
push
xor
stos
inc
repz
and
addl
pop
push
in
cltd
ret
adc
push
lahf
imul
inc
out
fisubrl
imul
out
leave
inc
pop
add
std
out
cli
add
jp
hlt
fsubrl
jg
int
xchg
cwtl
pop
jb
ret
out
popf
in
ficoms
scas
cmp
sub
xchg
xchg
jns
notl
in
shll
sahf
fwait
xchg
repnz
inc
repz
out
mov
or
pop
roll
mov
in
and
sub
faddl
fwait
xchg
mov
mov
mov
cmp
push
adc
stos
dec
cltd
mov
ljmp
lahf
lods
ret
in
mov
aam
dec
inc
mov
test
fidivrs
hlt
mov
mov
bound
int
or
sub
movsl
mov
inc
mov
loop
nop
lret
cmc
push
mov
cmp
sbb
imul
xchg
and
jne
adc
push
jb
std
cmpsw
std
push
xor
jg
in
jno
xor
mov
or
dec
sbb
leave
xchg
xchg
mov
imull
jns
stos
adc
mov
or
roll
sub
mov
add
xor
mov
ljmp
pop
add
lods
ljmp
scas
les
outsb
dec
lock
mov
xchg
subl
mov
mov
mov
loop
cmpl
inc
xor
ret
inc
out
pop
and
mov
fdivr
fisttps
out
push
sbb
cmc
jne
jnp
aad
xchg
adc
dec
out
mov
xor
stos
std
mov
cmp
dec
mov
and
pop
jb
pushf
jl
in
jae
repnz
iret
sarb
and
fld
mov
sahf
xorb
push
mov
pop
imul
jl
mov
pop
push
push
dec
adc
sub
aam
fbstp
arpl
ja
outsl
xchg
or
dec
out
dec
mov
sub
js
jecxz
loop
icebp
push
int3
rolb
pushf
cmpsl
mov
inc
push
mov
lods
xor
fidivrs
dec
lea
mov
loopne
pop
sbb
add
lds
xchg
mov
mov
ret
push
dec
jecxz
cltd
or
in
push
movsl
fcomps
mov
xchg
sti
cmp
add
loop
lret
mov
pop
std
mov
pushf
int3
jge
aad
push
dec
ljmp
ret
lcall
data16
pop
jl
ss
jecxz
sbb
outsb
add
mov
lcall
xchg
stos
or
loopne
popf
in
leave
mov
mov
xchg
into
push
cmp
fimull
pushf
clc
adc
das
into
mov
xchg
mov
int3
lret
data16
xor
loopne
add
mov
pop
dec
fcmovb
xor
mov
in
and
dec
repnz
xchg
or
lret
shrl
ds
jl
push
push
dec
stc
add
jmp
mov
out
cmpsb
and
xchg
inc
shrl
cmpsl
and
pop
js
lret
imul
cmp
cmp
and
or
test
mov
mov
popa
fldcw
or
lods
sbb
cwtl
jg
sbb
inc
add
pop
or
fdivp
jge
out
fstpt
pop
outsb
xchg
lds
and
jne
push
int3
inc
jbe
and
pop
enter
xchg
in
xor
mov
and
cld
jae
stos
or
bound
xor
test
mov
push
mov
sbb
xchg
clc
clc
push
inc
push
cli
jns
adc
add
and
dec
mov
std
cmpsl
lahf
pushf
ljmp
sbb
inc
dec
xchg
les
lret
xchg
sub
in
mov
push
xchg
xchg
movsb
mov
neg
jp
movsl
jno
loope
rorl
sbb
inc
add
in
dec
inc
lret
mov
test
push
dec
xchg
ja
cmp
mov
pop
xchg
mov
lds
xor
aas
int3
aad
xchg
jno
xchg
scas
push
mov
mov
cmpsl
and
dec
vrsqrtps
xchg
pop
inc
pop
add
push
mov
outsl
scas
sbb
mov
lock
and
xor
adc
pushf
lds
cmc
sbb
cmp
mov
xchg
jmp
mov
cmc
mov
ret
fidivs
loope
enter
sub
loop
aaa
xchg
ljmp
movsb
pop
sub
xchg
push
add
cmp
test
fmull
fs
stos
mov
movsl
add
mov
sbb
je
fdivl
mov
data16
test
imul
mov
fimull
jne
out
xchg
jne
sub
jp
repnz
sahf
nop
loopne
jno
jno
adc
pop
mov
or
test
ljmp
mov
jb
ja
lods
inc
fidivl
add
jmp
test
adc
daa
nop
shr
dec
mov
out
cmpsb
ljmp
push
and
lea
scas
mov
test
out
scas
or
cmp
push
add
out
hlt
repz
lret
mov
jne
clc
movsl
inc
lock
cli
cwtl
cmp
sahf
hlt
cmp
aas
jecxz
mov
imul
movsl
sbb
std
rolb
outsl
imul
push
push
mov
stos
add
rorl
fidivrs
xchg
int
pop
xchg
push
lret
in
jle
xchg
mov
dec
adc
mov
mov
add
insl
add
inc
lods
test
lods
mov
cmp
inc
insb
push
test
dec
test
ret
push
pop
sub
filds
and
sbb
gs
xorb
push
cmp
jle
mov
pushf
roll
jbe
je
jle
rolb
inc
mov
mov
mov
repnz
adc
xor
xchg
pop
in
cmp
lret
mov
cmpsl
insb
icebp
test
inc
adc
push
data16
xor
scas
js
sahf
in
adc
pop
xchg
add
jb
in
daa
adc
xor
push
popf
pop
cmp
mov
and
xchg
cltd
and
cmpsb
inc
or
jecxz
fnstenv
jg
push
popa
xor
les
pop
not
out
and
push
pop
fwait
loopne
push
test
adcl
cmp
xchg
subb
dec
rclb
ds
loop
movsb
adc
divl
rolb
cmpsb
in
subb
sbb
aas
dec
aam
pop
adc
daa
xchg
inc
xorl
out
das
mov
or
cmpsl
adc
ret
adc
sahf
test
idivb
jns
xor
cwtl
fimull
jne
sbb
inc
lcall
mov
ret
mov
push
aas
das
add
movsl
adc
xchg
add
and
les
inc
push
mov
loopne
xchg
dec
sbb
stc
adc
mov
mov
sub
pop
mov
addr16
aam
push
cmp
fucom
pop
xchg
ds
jbe
aad
call
inc
sub
mov
in
jecxz
fs
movsb
jo
xchg
adc
xor
in
jle
push
aam
mov
pop
adc
mov
jl
testl
add
xchg
pop
xchg
das
lods
or
sti
testb
pop
push
enter
mov
inc
enter
jg
push
push
jg
xchg
adc
repnz
shlb
push
jno
xchg
adc
loope
nop
fimull
nop
xor
arpl
add
ljmp
in
aam
fs
xchg
fwait
xchg
mov
imul
push
mov
jge
pop
sahf
inc
aad
add
dec
pop
addr16
jbe
mov
in
cmp
daa
sarl
inc
dec
loopne
mov
lods
sub
pop
lret
outsb
and
or
push
sbb
outsb
or
pop
xlat
fwait
enter
dec
loope
pop
enter
inc
out
mov
sub
xor
xor
cmp
dec
jns
bound
mov
cltd
stos
out
dec
adc
mov
pop
daa
mov
hlt
fisttpll
lods
xchg
dec
push
xchg
inc
add
faddl
jnp
mov
insb
cs
fwait
cmpsb
in
inc
neg
fidivrs
xchg
outsl
leave
xchg
mov
xchg
xor
in
mov
lea
or
lods
stos
mov
xchg
pop
mov
adc
mov
scas
ja
aaa
dec
adc
int
packuswb
jl
mov
jb
sub
sub
test
xchg
xor
bound
mov
push
ror
test
hlt
xchg
gs
aam
addb
inc
mov
jbe
and
into
lock
rclb
out
xor
int3
xchg
mov
mov
mov
mov
fs
push
jno
lods
sub
addb
xlat
inc
into
test
scas
pop
movb
mov
xor
mov
mov
shl
mov
lods
sbb
push
stos
inc
fadds
dec
outsl
mov
sub
push
cmp
cltd
lods
jp
or
xor
or
out
jae
mov
adc
push
sahf
jnp
cltd
enter
pop
sub
mov
push
js
dec
pop
insl
cmp
add
push
aad
ljmp
movsl
insb
sti
mov
mov
sub
push
mov
lods
mov
in
ja
cmp
jbe
inc
imul
call
xor
jae
adc
jle
insb
loop
mov
adc
push
push
gs
sbb
push
cmpsl
hlt
stos
pop
clc
pop
jl
push
sbb
add
mov
push
mov
leave
cmp
loope
int
adc
sub
aaa
xchg
aas
icebp
inc
xor
repnz
mov
push
neg
nop
fsubl
jae
cmpsl
push
sbb
test
pop
cld
mov
dec
adc
lods
xchg
out
xchg
loop
mov
cmp
and
push
lcall
hlt
dec
jae
and
xchg
push
xor
fldenv
fldt
jmp
sub
lock
cltd
mov
jecxz
mov
andl
jns
push
movsb
jbe
fidivs
icebp
dec
push
xor
inc
iret
mov
scas
jmp
aaa
push
ljmp
gs
mov
jo
lock
mov
popf
movsb
cmp
dec
mov
sbb
shlb
dec
enter
sbb
lea
and
sarl
push
insb
or
and
in
test
lea
pusha
repnz
push
bound
dec
scas
sbb
mov
lods
jne
stos
adc
and
jge
stos
pushf
scas
into
cmp
lret
mov
mov
push
mov
cmp
add
dec
clc
add
std
pop
jno
sahf
out
rcr
rorl
add
fmull
mov
pop
je
inc
cmp
push
lock
insl
adc
fwait
insl
pusha
int3
mov
nop
outsb
enter
push
enter
xchg
add
das
mov
push
jbe
aaa
cli
gs
and
mov
push
xlat
loopne
ja
lret
push
mov
insb
imul
push
cmpsl
jo
push
arpl
test
bound
mov
into
pop
mov
sub
int3
cli
icebp
js
pop
rcrl
sarl
inc
test
cmc
lods
push
push
lods
fists
out
sbb
out
inc
mov
ljmp
or
pop
loopne
push
xchg
cs
movsl
mov
jo
adc
push
loop
or
jg
fcmovb
push
jge
test
imul
inc
mov
pop
sub
jmp
cld
jnp
shrb
out
aad
lahf
add
inc
out
cmp
pop
jl
out
pop
pop
xor
xor
mov
sti
ja
or
cld
mov
loope
stc
fsts
and
pinsrw
gs
pushl
or
jmp
mov
mov
aad
cmp
cmpsb
add
loop
pop
imul
lahf
mov
jl
daa
cmc
and
mov
cmp
xchg
mov
nop
fnsave
outsb
cld
shll
mull
pushf
dec
gs
mov
test
mov
imul
mov
aam
or
pop
cmp
mov
loope
xchg
cmp
outsl
add
insl
sbb
arpl
dec
or
sbb
push
in
repnz
ret
or
xchg
add
push
xor
dec
mov
adc
rorl
jp
data16
mov
test
or
or
stos
pop
inc
bndldx
ret
jp
loop
mov
xchg
imul
dec
sbb
lods
dec
test
ljmp
faddp
popf
arpl
or
inc
adc
jae
out
or
insl
pop
sbb
in
cs
loopne
pop
xor
icebp
insl
stos
xchg
outsl
xor
cs
enter
xchg
sbb
xor
popf
clc
or
lea
push
pop
aas
das
faddl
pop
and
jp
jnp
or
dec
fnstcw
mov
fidivs
bound
adc
subl
mov
sbb
add
inc
jg
adc
ljmp
loope
adc
and
xchg
fcoms
in
push
inc
push
lea
mov
ds
xor
dec
das
pop
xor
je
mov
cmpsl
mov
int
mov
add
inc
push
fstpt
adc
mov
testb
jp
clc
fnstcw
inc
fadds
sbb
scas
jle
jmp
and
push
adc
decb
and
inc
out
lods
hlt
adc
xor
push
mov
dec
or
nop
inc
push
mov
and
leave
jmp
insl
and
push
sbb
addr16
push
jns
xchg
fisubrs
lret
inc
jmp
sbb
mov
pop
outsl
sbb
inc
xor
add
push
mov
mov
pusha
push
mov
test
jnp
inc
ret
mov
fcomps
je
pop
jmp
sub
and
leave
mov
shr
lret
jmp
sahf
and
jns
cwtl
push
pop
fwait
push
data16
clc
dec
mov
pop
mov
rol
pushf
dec
inc
dec
dec
add
mull
cld
les
enter
negl
stc
xor
sub
sub
popf
cmp
scas
in
les
in
cld
fimuls
cmp
pop
xchg
shl
and
inc
imul
scas
jecxz
in
and
jge
insl
and
pop
ljmp
mov
mov
dec
sub
call
mov
add
xchg
daa
jne
mov
pop
mov
mov
ss
cld
dec
test
push
mov
jp
lock
sbb
mov
outsb
mov
or
xchg
scas
sub
xbegin
add
xor
sbb
xor
clc
cltd
les
inc
js
inc
sub
int
sarl
subl
dec
ret
out
mov
and
es
or
fs
cmp
stos
test
mov
jecxz
push
jns
fidivrs
hlt
test
xchg
lods
lahf
jle
or
fwait
rorl
outsl
movsl
lock
xchg
repz
pushf
mov
xor
pop
jne
sub
jno
imul
stos
cmp
mov
sbb
test
dec
cmp
cmp
xor
add
out
mov
pop
mov
cmpl
sub
int
pop
pop
fiaddl
xchg
sub
mov
mov
out
jecxz
jne
sub
adc
adc
jge
repnz
or
or
sub
mov
xor
xchg
int
jno
scas
pop
aam
mov
adc
and
pop
movsl
xchg
push
pusha
pop
inc
out
and
jg
mov
push
push
stos
jmp
or
mov
jae
sbb
testb
insb
out
out
jnp
jne
add
xor
imul
popa
xor
pop
mov
or
out
stos
test
mov
rorb
inc
push
xchg
sbb
jo
xchg
jmp
leave
xlat
out
addb
jmp
mov
fcompp
nop
psubw
in
pusha
or
test
dec
or
lret
out
push
pop
pand
dec
repnz
adc
push
sub
sub
pop
mov
int
test
sub
js
pop
lahf
mov
mov
cmp
jns
dec
pushf
inc
jae
jae
outsl
jo
xchg
leave
roll
dec
pop
insl
mov
popa
add
mov
mov
insl
mov
push
push
sbb
in
out
xchg
mov
pusha
mov
xchg
stos
jmp
pop
enter
imul
je
jne
mov
lret
adc
jnp
bound
sub
sbb
pop
cltd
adc
movsb
aad
push
pusha
rclb
popa
or
jge
cmpsl
push
adc
pop
xchg
mov
and
xchg
adcl
mov
dec
ret
lahf
add
dec
push
inc
sub
fisubl
adc
je
xlat
jp
cld
sbb
sbb
mov
icebp
push
fdivrl
and
scas
sbb
imul
inc
in
sub
stos
pop
push
or
test
ss
jno
ds
out
enter
adc
add
fsubr
data16
mov
mov
out
push
adc
mov
out
cld
jne
movsb
push
mov
fldcw
test
cmpsl
xchg
fucom
pop
test
nop
mov
fldt
push
push
jnp
adc
cli
cmp
xorl
xor
pop
adc
int
sbb
sbb
lcall
mov
cld
add
pushf
jnp
clc
cli
bnd
add
iret
xchg
popf
jge
xchg
xor
lds
lds
dec
jb
lahf
ja
call
jno
movsb
sub
cmp
xchg
mov
pop
lods
cs
pop
pop
jge
iret
shr
dec
xchg
pop
xor
mov
jl
xchg
pop
pop
ljmp
daa
rcrb
ss
adcl
inc
dec
fstl
xchg
das
jb
sbb
push
cmp
jno
popf
je
mov
sbb
popf
test
sbb
mov
jo
shlb
xor
add
push
cmp
je
pop
xor
pop
xchg
sbb
aas
mov
ja
inc
sbb
movsl
xchg
and
lock
lea
enter
pop
and
std
pop
fsubs
pop
sbb
add
xor
fsubp
insb
sbb
inc
outsl
insb
fisubrl
std
roll
mov
pop
dec
popa
out
jg
jbe
add
mov
lret
iret
cs
and
fwait
out
mov
or
lods
sub
imul
push
inc
lret
mov
mov
ja
adc
xchg
test
push
movsl
hlt
jl
mov
or
imul
fstpt
push
aaa
pushf
cmp
mov
inc
add
inc
jo
cmpsb
lods
sbb
jne
leave
pop
jne
insl
loop
and
or
nop
push
mov
or
xchg
mov
unpckhps
xor
xlat
aaa
outsl
out
es
mov
jns
jp
xchg
cmp
sub
inc
test
sbb
fstps
push
and
inc
pop
and
stos
mov
cld
adc
xlat
leave
negl
mulb
les
fwait
push
repnz
ljmp
mov
inc
add
push
push
incb
out
daa
and
sbbl
repz
mov
and
jnp
mov
cmp
mov
mov
leave
imul
pop
jb
sti
testl
icebp
shl
jbe
fs
into
jg
xor
mov
and
roll
cs
fucomp
dec
and
push
pop
add
mov
xchg
in
mov
iret
negl
xchg
cmpsb
hlt
lret
test
imul
pmulhuw
sub
mov
pusha
adc
mov
push
stos
lret
mov
xchg
cmp
mov
dec
lahf
rcrl
mov
inc
insb
pop
int
je
or
mov
sub
filds
mov
fistps
push
jbe
pop
mulb
mov
xlat
in
aam
fdivrl
imul
push
xor
std
sbb
dec
in
iret
xor
ljmp
pop
and
cmp
roll
mov
jg
lret
fadds
mov
cmpsl
inc
sbb
or
mov
xor
mov
inc
test
and
addps
repz
movsl
push
mov
dec
push
mov
mov
xchg
adc
cmpsb
imul
xchg
sbbb
dec
cmp
and
jmp
shl
mov
push
sbb
sti
pop
lds
cmpsb
leave
or
add
jns
mov
or
sbb
push
je
sub
lahf
movsb
mov
jbe
or
aad
ret
xor
adc
adc
jnp
inc
fistpll
sbb
sub
movsb
adc
pop
cmc
in
clc
xchg
ljmp
outsl
aam
push
xlat
mov
bound
mov
jne
mov
cmc
fcoml
mov
imul
jl
aam
xchg
out
mov
leave
stos
outsb
push
aad
sarb
fsubs
repz
loope
adc
push
iret
mov
out
fs
cmp
aas
pop
fbstp
mov
hlt
mov
inc
les
mov
repnz
jg
adc
jo
les
lret
jo
jle
dec
xchg
and
ds
imul
mov
out
dec
lods
inc
push
mov
sub
cmp
push
aad
repnz
rcrb
inc
push
sbb
dec
aad
cmp
cmp
lods
int
or
shl
rcrl
xchg
push
orl
fs
aad
popa
adc
mov
rcr
adc
pop
or
adc
hlt
sub
adc
mov
xchg
in
je
cltd
daa
stc
out
mov
xchg
push
fldenv
or
xor
clc
cmp
in
ficoms
ss
data16
mov
pop
lock
mov
mov
cmp
fs
adc
push
push
inc
and
loope
mov
jp
pushf
mov
xchg
pop
push
and
cmp
fnstcw
sbb
cmpb
fidivl
push
rolb
push
cmp
fldcw
xor
mov
jp
mov
fidivs
mov
sti
inc
mov
pop
xchg
pop
push
push
fwait
sub
cmp
cmc
mov
hlt
fmuls
jns
lds
outsl
push
xor
flds
leave
subl
ljmp
mov
jg
jns
add
test
inc
stc
adc
mov
jp
pop
ret
test
nop
push
xor
mov
push
push
lods
push
cmpsl
mov
and
pop
std
xor
js
dec
push
and
mov
and
pop
push
test
outsl
sub
arpl
iret
stos
add
mov
cmp
add
je
push
push
hlt
xchg
fidivs
mov
dec
jmp
ja,pn
jg
sbb
push
mov
sbb
adc
mov
push
aad
jle
cwtl
cmp
iret
lods
mov
shlb
cs
test
ja
pop
sbb
push
or
addl
aaa
push
daa
out
xchg
and
pop
pushf
cmp
jg,pn
imul
call
sahf
and
sbb
repz
adc
push
leave
cmpsl
in
dec
lcall
cmp
add
sarl
aad
insl
aam
or
sbbl
int3
fmuls
or
shl
scas
push
push
cs
test
jg
sub
add
jo
dec
pop
je
orl
cltd
aad
add
in
add
rorb
rclb
sbbb
inc
lahf
popf
leave
sarl
add
lahf
or
test
xchg
clc
push
cmpsb
and
in
insl
xchg
insl
jae
push
mov
sbb
pushl
cmpl
shlb
mov
sbb
fdivr
leave
outsl
fisubrl
add
mov
jle
jp
pop
mov
stos
mov
add
jo
js
lret
arpl
rorl
or
cs
push
jmp
mov
lcall
sbb
or
jg
mov
mov
pop
xchg
lock
ja
jns
addr16
bnd
dec
or
mov
xor
fdivrl
or
pop
add
loopne
outsl
out
xchg
push
adc
idivb
inc
mov
pop
sbb
push
sbb
pop
pop
shlb
outsb
push
addb
add
add
lods
aam
lret
andl
shrb
in
xor
dec
push
outsb
movsl
mov
mov
adc
push
xor
lods
and
xchg
mov
popf
inc
lods
ret
adc
push
inc
out
push
test
stc
pushf
jge
cli
cmp
cmpsb
pop
push
xor
adc
flds
in
ljmp
stos
sbb
xchg
js
mov
push
rorb
stos
adc
fldlg2
add
dec
je
testb
adc
clc
cs
sbb
mov
mov
fdivl
daa
pop
mov
pop
cmp
hlt
push
push
imul
and
std
cmp
mov
cmpsb
sbb
ljmp
loope
and
clc
inc
jecxz
inc
cwtl
cmp
xchg
repnz
adc
pop
pop
mov
popf
outsl
jnp
sbb
push
test
xchg
mov
fs
repnz
add
frstor
adc
nop/reserved
loope
xor
add
addr16
xor
nop
jg
lcall
lods
xor
data16
repz
ret
outsb
inc
inc
int
btc
cmpsb
iret
mov
or
push
loop
cmpsl
mov
into
aam
jge
push
push
dec
test
lods
ds
ficoms
movsl
inc
out
pop
push
adc
or
divl
int
int
aaa
xor
mov
in
scas
cli
push
lcall
and
outsb
es
add
scas
pushf
pop
int
xor
pop
mov
mov
jne
decl
jbe
push
popa
xchg
mov
cwtl
cmpsl
mov
inc
cmp
sbb
stos
sahf
lds
test
xchg
jbe
add
xor
add
pop
popa
ja
pop
xchg
cmc
xchg
out
neg
das
lret
popf
mov
dec
mov
icebp
test
mov
dec
pop
dec
test
shrl
shrl
shlb
mov
jp
or
fisubs
out
jp
mov
and
push
insb
mov
fcomip
cmpsb
movb
fidivl
cmp
gs
pushf
xchg
sti
cld
jbe
push
cmp
sub
inc
xor
in
in
mov
pop
scas
testb
fmull
call
aaa
cltd
enter
stos
in
mov
dec
cmp
adc
test
mov
fwait
pop
dec
jecxz
xor
xchg
lock
out
into
mov
adc
les
and
repz
and
in
ss
jb
sbb
and
xor
push
sub
mov
jl
mov
mov
enter
test
arpl
jge
xchg
and
out
mov
push
push
outsl
xchg
fsubs
xlat
lea
rorl
rorl
loop
jl
mov
stc
decb
sti
mov
ds
add
push
jg
or
sbb
sahf
push
rcl
loopne
push
mov
jbe
mov
dec
das
sti
mov
mov
icebp
xor
stos
xor
push
mov
ja
jge
jns
cmp
jne
dec
mov
mov
test
into
fsubr
cld
jecxz
or
int3
inc
sbb
mov
lods
sub
fwait
lock
icebp
mov
xor
mov
lea
jecxz
pop
sar
mov
sti
xchg
mov
rorb
push
sahf
push
movsl
pop
or
xchg
imul
add
lahf
in
and
xchg
inc
mov
mov
icebp
scas
pop
jmp
in
insl
jne
rcrb
cmp
lea
rcl
lods
rcrl
sbb
sub
mov
cmp
ja
sub
std
ret
mov
loop
popf
lret
mov
jg
das
jg
pop
xor
xchg
rorl
push
jmp
dec
push
sub
xchg
mov
pop
jno
stos
inc
pop
jg
testb
sbb
mov
scas
fists
lret
pop
mov
fisubl
out
add
jbe
push
xor
ja,pt
jb
fwait
adc
and
int3
cmc
mov
sub
es
movsl
ja
sub
incl
inc
fwait
dec
pop
inc
mov
inc
mov
icebp
nop
dec
loopne
mov
sti
cmc
cmovge
adc
mov
mov
call
cmp
mov
jno
adc
jmp
scas
aaa
dec
pop
mov
lds
xlat
aaa
and
ja
cmc
enter
test
or
push
dec
or
pop
adc
sti
aaa
xchg
imul
xor
xchg
imul
cmpsb
or
cmp
stos
lcall
mov
je
adc
cli
js
jge
imul
xchg
or
out
test
test
jecxz
jmp
jge
loope
mov
out
mov
jo
sbb
int
mov
sub
push
jmp
mov
inc
ret
ret
push
adc
enter
arpl
seto
push
push
xchg
pop
dec
sahf
aad
or
je
add
inc
stc
adcl
lock
mov
cmp
mov
add
cmp
push
repz
push
inc
test
mov
fisubrl
in
mov
or
adc
repnz
lods
lcall
or
test
mov
sub
insl
cmp
mov
in
es
push
add
and
sub
and
rcl
mov
pushf
xchg
or
pop
jo
bound
mov
xor
pop
push
aas
pop
jle
fsub
stos
or
adc
stos
mov
divb
sbb
repz
scas
dec
ret
xlat
stc
jmp
dec
call
dec
jmp
jle
pop
rep
cmp
sub
jp
loopne
inc
lea
xor
jl
movsb
std
dec
xorl
iret
push
cs
test
rcrb
xor
outsl
push
sahf
jmp
jns
cld
jmp
dec
inc
mov
xlat
fnstsw
sbb
in
push
stos
push
sbb
sbb
jmp
rcll
imull
dec
cs
out
mov
mov
cmp
sbb
jle
xchg
das
je
or
aas
cmp
mov
and
ret
xchg
push
mov
pop
lret
add
jle
and
aam
cmp
mov
cmp
js
rcrl
xor
mov
inc
pop
xchg
sbb
cmp
icebp
inc
fldenv
fs
fistpl
data16
fs
jae
test
xor
xor
hlt
xchg
xor
adc
dec
gs
jno
stos
sub
mov
out
inc
lahf
mov
out
jecxz
fidivrl
push
xchg
aas
lods
pop
loope
cmp
clc
add
das
push
xor
jg
mov
cmpsb
xor
push
scas
ss
xor
push
push
jp
mov
mov
ret
push
outsl
fcompl
xchg
shl
stos
mov
or
sbb
push
pop
in
stc
push
sbb
pop
rorb
push
and
mov
in
xor
and
mov
stos
mov
fidivrl
pop
and
jmp
in
add
mov
pop
lock
or
cmp
ret
push
into
pop
test
or
ret
and
jge
fbld
xchg
push
xchg
inc
cmp
idivl
sub
push
mov
not
xor
fnstenv
std
es
sahf
popf
jns
and
stos
inc
cmp
cmp
arpl
popa
inc
jns
aad
or
movsb
das
pop
cs
stc
in
cmp
mov
nop
in
mov
ljmp
pop
and
mov
leave
xchg
jge
mov
xor
pop
aaa
fsubs
es
fimuls
sub
icebp
xorb
inc
add
sbb
ficomps
inc
xchg
loop
inc
cld
xor
cmpsl
dec
sub
imul
push
sbb
adc
xchg
scas
mov
outsl
or
jge
push
roll
popa
lods
arpl
enter
nopl
inc
out
adc
xor
pushf
outsb
mov
mov
dec
mov
adc
in
cmpsl
or
ds
aad
fs
into
cmc
sub
pop
pop
add
jl
in
sbb
push
sub
fstps
mov
fmuls
push
enter
test
jb
int3
adc
dec
jno
and
sbb
mov
dec
push
lret
dec
imul
adc
mov
pop
pop
xor
dec
shlb
add
sahf
in
ss
mov
sub
xchg
cmp
and
jp
push
movsb
jns
cltd
cmpsb
sub
dec
iret
mov
repz
fisubrs
cmp
imul
cmpsl
mov
dec
sbb
repnz
push
fwait
jecxz
adc
in
hlt
and
and
push
aad
xor
sbb
orl
inc
fdiv
and
pop
fs
test
into
mov
add
pop
xchg
stos
pop
daa
lret
stc
repz
push
pop
in
sbbb
cltd
ljmp
pushf
lock
mov
in
sahf
repz
adc
lds
xchg
aam
mov
cmp
enter
imul
sub
jle
mov
or
xlat
push
inc
add
or
lods
in
sbb
outsl
xchg
fldt
mov
pop
sbb
lock
inc
xlat
lods
jb
pop
cmp
pop
js
leave
in
sbb
stos
ljmp
inc
inc
das
dec
xor
pop
sub
icebp
pop
inc
fdivs
push
pop
mul
pop
imul
mov
mov
or
cmp
int3
lods
xchg
push
fptan
mov
inc
and
out
cld
lds
and
push
mov
jge
jnp
jae
xchg
iret
gs
or
test
iret
incb
jmp
popf
mov
jg
adc
pop
shl
loop
fcompl
movsl
xchg
mov
repnz
mul
aas
mov
xchg
in
fidivrl
movsb
sub
mov
std
adc
shlb
push
mov
neg
sbb
sbb
gs
cmp
pop
cld
out
or
cmp
mov
jg
mov
je
and
in
popf
inc
stc
mov
divl
fistl
mov
aad
mov
loop
push
jns
mov
jl
stc
mov
js
xchg
mov
mov
sbb
dec
cmpsl
fwait
cmp
arpl
mov
and
outsl
cmpl
mov
data16
mov
sti
loope
int
mov
bound
xchg
iret
or
leave
aad
and
adc
cltd
pop
aaa
pop
add
mov
add
jl
mov
push
lret
scas
and
push
into
jmp
xlat
mov
xchg
test
insl
jl
push
add
cmp
rcr
jo
sbb
mov
mov
je
dec
xor
mov
repz
inc
mov
out
es
gs
int3
out
loop
add
mov
inc
ret
jno
push
stos
stos
xchg
pop
mulw
xchg
adc
mov
loopne
lock
inc
shlb
cld
sti
inc
sub
das
dec
and
inc
mov
push
les
rorl
dec
add
out
add
movsb
sub
mul
test
leave
pop
inc
dec
mov
xlat
mov
mov
add
movsl
dec
xlat
sub
mov
push
dec
shr
sub
inc
jae
stos
push
mov
sub
xchg
mov
and
loop
ljmp
dec
sbb
fucomip
xchg
pop
cmp
ja
sub
clc
lods
xor
xchg
daa
pop
cli
subb
lods
shll
pushf
adcb
sub
xor
inc
stos
dec
popf
cmp
pop
and
push
push
push
push
xor
adc
pop
xchg
test
or
mov
and
es
xchg
pop
dec
test
cltd
in
cli
inc
divl
cmp
jae
ss
out
ficoms
jo
or
xchg
aaa
and
out
xlat
lea
loopne
ljmp
cld
mov
sarl
inc
sbb
outsl
inc
jne
fucomip
mov
push
inc
cwtl
jae
mov
or
cmp
or
pop
lahf
mov
divb
cmp
mov
sub
mov
ja
mov
mov
sbb
xchg
xchg
push
icebp
xchg
sbb
stc
mov
sub
repz
fstp
dec
fldcw
sub
mov
mov
mov
jp
xor
testw
inc
push
or
dec
sbb
test
sub
sub
test
into
dec
and
sub
test
jecxz
cs
cld
mov
xchg
frstor
pop
cmpsb
inc
cwtl
movsb
cvtps2pi
mov
inc
les
pushl
out
mov
rcr
rcrl
jl
insb
icebp
rorl
fs
xor
xchg
jo
pop
ret
push
test
mov
test
adc
xchg
iret
dec
pop
mov
and
outsl
xlat
sbb
mov
mov
xchg
dec
or
mov
xchg
xlat
cmp
mov
and
jle
mov
push
cmpsb
cwtl
gs
dec
bound
mov
ror
or
sbb
gs
mov
subb
leave
sarb
jmp
xchg
inc
adc
xchg
out
mov
xchg
push
fsubr
jns
sub
xchg
hlt
lods
pop
sarl
jne
int
push
or
mov
ficomps
sbb
neg
dec
pop
popf
jp
shrb
leave
lock
stos
dec
pop
jp
gs
out
sahf
add
pop
adc
mov
repz
jno
push
dec
push
les
inc
xchg
outsl
loop
test
sbb
xchg
mov
sti
mov
xchg
mov
fwait
mov
int
test
mov
cmp
shlb
sub
clc
mov
shlb
pop
out
and
in
sbb
or
addl
shlb
push
xchg
shl
inc
lods
rcr
mov
sbbb
ljmp
lods
addb
mov
adc
xor
adc
mov
jl
add
adc
mov
imul
mov
push
xor
adc
mov
rcl
mov
cmp
rcrl
sbb
movsb
cmp
sub
aaa
inc
scas
lods
or
jno
fidivrs
roll
add
imul
fldl2e
adcl
gs
push
adc
or
or
jo
popf
pop
into
es
shr
lods
fwait
movsl
andl
lret
add
cwtl
test
dec
mov
mov
les
mov
push
out
dec
out
fadds
adc
mov
lea
fwait
pop
addr16
mov
mov
in
dec
jp
bnd
inc
cmp
and
cmp
inc
iret
and
mov
add
pop
inc
outsl
sub
cli
std
mov
cmp
pop
shl
jae
outsl
subl
insb
mov
insl
shrl
and
cli
in
repnz
fcoms
inc
inc
js
jbe
dec
adc
adc
inc
sub
std
mov
and
add
adc
jge
lods
fnstsw
or
xchg
movsb
out
sbb
into
pop
cmpsl
jmp
jl
sbb
jg
gs
inc
ret
and
xchg
out
data16
xor
push
push
push
stc
add
sbb
lret
or
loope
addr16
jbe
mov
loop
dec
lea
jns
pop
jno
xor
fscale
out
jecxz
ficoml
cwtl
and
jo
stos
mov
std
inc
dec
test
in
push
vpmacswd
movsl
icebp
loope
in
inc
in
fs
sar
mov
sub
shlb
or
mov
cld
into
xchg
or
inc
mov
hlt
sarb
aas
dec
ja
push
shll
mov
xchg
cwtl
add
mov
clc
loope
pop
sub
negl
jmp
jns
xchg
lcall
test
stc
cmp
mov
cmpsb
adcb
ja
push
mov
orl
push
sub
lret
and
mov
shlb
push
push
aam
iret
imul
leave
xchg
mov
jo
or
sub
shrb
mov
stos
clc
mov
cmp
cs
mov
pop
mov
xor
mov
mov
and
or
xor
jg
cmp
jecxz
mov
xchg
data16
ds
jns
and
mov
mov
xor
pop
fs
jbe
lcall
scas
insl
push
lods
js
or
fwait
xchg
jecxz
mov
fs
inc
pushf
stos
sbb
adc
mov
mov
orl
jecxz
bound
mov
adc
xchg
xchg
je
mov
nop
inc
call
push
js
dec
xchg
cmpsl
cmp
leave
std
dec
add
xchg
outsb
dec
cmpsb
jecxz
jmp
repz
cwtl
push
sbb
mov
sub
jnp
adc
daa
dec
jmp
test
scas
outsb
mov
mov
sti
lods
lahf
mov
mov
mov
frstor
rolb
dec
scas
cld
fimull
outsl
sbb
sbb
mov
cwtl
adc
stos
popa
sub
scas
add
icebp
insb
pop
gs
or
mov
inc
aad
imul
sbb
ds
mov
lock
cmp
jmp
icebp
sbb
pop
cmp
nop
test
xchg
das
mov
mov
push
cmp
add
cli
push
and
daa
or
add
test
and
push
adc
cmp
mov
mov
ret
cmp
adc
inc
cmp
in
adc
subb
or
xor
lock
test
jecxz
gs
jmp
mov
out
push
cwtl
es
cmp
dec
and
into
mov
add
adc
mov
dec
in
fmulp
pop
outsl
bswap
fiadds
xchg
mov
cwtl
pushf
sarl
sar
mov
int
sub
adc
jae
push
jl
add
pop
push
push
sarl
roll
xorb
mov
jle
sbb
loopne
jae
cmp
out
mov
into
pop
or
in
jmp
cli
mov
scas
aam
pop
mov
mov
popf
aam
std
cmc
jecxz
shll
fsts
xchg
testb
sbb
push
jo
movsb
cmpl
jle
pushf
out
int3
mov
add
fcmovb
sub
sub
ss
fs
cmpsb
aam
inc
sub
fwait
ljmp
icebp
ret
adc
mov
or
pop
mov
outsb
pop
movsl
mov
jmp
sub
xor
push
iret
out
sbb
shrl
test
push
std
mov
ljmp
push
in
icebp
stos
push
jmp
mov
pop
dec
jmp
or
jae
ret
cmp
dec
lock
lea
sbb
gs
cmpsb
cmp
xchg
jns
mov
in
and
jno
xchg
sbb
mov
rcl
in
sub
push
push
fwait
imul
scas
es
in
insb
aad
sbbl
in
sub
inc
into
popf
clc
mov
xchg
imull
adc
ds
xchg
or
inc
add
pop
push
sahf
mov
mov
roll
inc
xor
inc
int3
mov
mov
repnz
and
in
cs
scas
pushf
add
int
cmp
and
pushf
inc
lods
bound
sbb
div
lock
add
pop
lods
xor
test
outsb
inc
test
or
clc
insl
sarl
jecxz
mov
ss
xchg
mov
test
ljmp
test
test
pop
imul
add
mov
mov
sub
out
pop
int3
push
jg
decb
inc
inc
push
inc
add
rolb
imul
daa
cwtl
pop
pop
std
scas
jo
shrb
cld
sbb
fdivrl
adc
shrl
call
out
popf
call
sub
inc
popa
xlat
jnp
pop
aam
lahf
ljmp
in
cmp
push
push
xchg
xor
dec
inc
lret
mov
inc
decb
pop
cltd
mov
js
mov
js
int
pop
call
rorl
xor
loop
in
fcoms
fdivp
cmp
test
lock
cmpsb
push
jge
lods
loopne
sbb
pop
cmp
push
hlt
jle
int
ret
jecxz
xor
ret
pop
cmpl
sahf
adc
dec
iret
sub
push
cmpsb
jg
push
mov
xchg
les
aaa
and
int3
data16
mov
std
dec
sbb
fdivrl
stos
stc
sbb
gs
cltd
cmp
repz
cltd
jbe
sbb
cmp
jbe
push
jnp
dec
out
out
les
dec
cmp
push
mov
pop
inc
fsts
jg
jp
iret
or
inc
bnd
into
mov
xlat
imul
sbb
dec
scas
push
fdivs
test
out
mov
mov
and
cmp
arpl
add
or
mov
jmp
call
cmpsb
add
es
aad
andl
movsl
inc
out
faddl
popa
mov
dec
push
cmp
rorb
add
mov
cmc
xor
aam
addr16
dec
je
shrb
fs
adc
push
jecxz
inc
sub
jo
mov
das
lock
call
mov
enter
in
aad
ret
arpl
hlt
int3
push
push
fdivl
enter
add
dec
fnstsw
pop
or
das
insl
lock
stc
mov
push
dec
ja
mov
into
popa
addr16
adc
or
lahf
inc
jne
fldt
pop
jns
leave
push
xchg
pop
hlt
fisttpll
mov
mov
rcll
jecxz
push
stc
fcmovnu
jle
out
sub
leave
push
subb
out
mov
cmp
pop
shlb
in
jle
out
push
mov
subl
cmpsb
mov
add
clc
cwtl
inc
lock
or
jns
andl
add
idivl
lock
aas
push
lret
push
gs
cmc
mov
bswap
jecxz
mov
je
xlat
pushf
sub
js
pop
or
mov
or
mov
loope
gs
ffree
cmp
sahf
ror
xchg
jg
notl
das
adc
imul
pop
scas
cmp
xchg
cmc
loopne
movsl
mov
push
pop
aad
stos
dec
jmp
mov
sbb
cmp
mov
pop
push
and
sub
xchg
jle
shlb
fcomip
repz
jne
lods
sub
push
mov
jge
xchg
push
and
clc
pop
jl
mov
lret
call
mov
dec
pop
cmp
push
insl
fdivrl
add
jae
dec
insl
popa
push
out
add
lds
scas
das
pusha
loop
add
jae
gs
or
push
filds
pop
ret
dec
stc
sbb
pop
fnstsw
aad
pop
cmp
mov
push
jbe
adc
fcoms
repz
xchg
mov
rcrl
cli
and
or
je
adc
mov
mov
dec
mov
pop
notl
adc
xlat
mov
dec
mov
mov
push
pop
adc
dec
and
and
inc
aam
shl
and
les
scas
test
and
push
aam
xor
imul
mov
loope
jecxz
adc
fbld
cmc
adc
jb
cmp
or
repnz
lret
lret
inc
and
push
and
pop
roll
out
loope
pusha
add
sbb
shrb
stos
jecxz
adc
hlt
pop
scas
call
test
cmp
cmc
stos
outsl
mov
fcompl
lea
test
push
jne
and
pop
mov
pusha
pop
orl
jecxz
or
rorb
aaa
adc
sbbb
je
cli
shl
jmp
mov
push
scas
popa
mov
out
std
mov
push
pop
jecxz
jno
add
dec
dec
inc
loop
jge
xor
test
faddl
dec
mov
sbb
mov
lock
lcall
jne
jne
pop
lcall
cmc
shll
jno
fcom
xor
xorl
mov
pop
sbb
jl
ret
rorl
addl
mov
into
dec
fistl
xchg
test
sbb
dec
ret
pop
xlat
cltd
stc
bswap
add
mov
pop
gs
fmull
icebp
sub
push
cmpsb
xor
push
or
cmp
fldcw
adc
dec
inc
and
shufps
loop
jns
xchg
adc
ret
fistpl
jae
adc
inc
pusha
dec
shlb
repz
sbb
cmp
fdivs
push
cmc
decl
dec
shl
or
jg
not
pop
fbstp
stc
dec
out
outsb
xor
adc
jnp
push
cmp
mov
in
xchg
sbb
or
or
popf
aas
or
int
es
mov
jbe
inc
ds
aas
aaa
loopne
addr16
xchg
adc
imul
mov
add
test
cmp
loop
cs
out
in
mov
mov
cmp
inc
lods
jl
adc
js
mov
cmp
sub
xchg
imul
fstpl
xchg
and
or
pop
fdivr
push
mov
push
pop
scas
imul
mov
rorl
jle
lret
dec
dec
sub
out
and
mov
mov
jnp
fcmovb
jl
jb
insb
ret
sbb
insl
or
fildll
aad
xlat
test
test
xchg
aaa
or
pop
jl
in
push
aam
sub
movsb
mov
xchg
mov
jmp
ja
mov
in
repnz
sbb
das
push
loope
pushf
jae
aam
repz
notl
sub
jmp
pop
fisubrl
retw
sbb
subb
adc
int
imul
test
pop
dec
pop
mov
cmp
jecxz
dec
test
js
xor
leave
sbb
aad
fnsave
dec
or
jns
jnp
add
leave
scas
leave
inc
jmp
ficoml
inc
inc
daa
popa
mov
sub
gs
repz
shll
int
in
scas
xor
lret
mov
ss
je
mov
lods
icebp
adc
pop
inc
adc
pop
pop
scas
push
lods
sbbb
xchg
sub
inc
xchg
pop
pop
les
mov
mov
adc
dec
push
shr
dec
or
sbbl
mov
sbb
fldt
aas
sbb
loope
push
int3
adc
jge
xchg
push
repz
mov
repnz
inc
shlb
jge
ds
cmp
sub
out
mull
in
into
inc
push
sbb
cmp
add
push
sbb
sub
pop
push
outsl
mov
mov
sahf
test
sub
lock
push
jno
cmpsl
out
jb
loop
in
mov
sub
xchg
ret
fisubrs
lods
das
test
in
push
push
add
ds
lock
dec
bound
adc
ss
dec
test
int
pop
add
cli
mov
jg
mov
loope
add
mov
push
ljmp
es
ret
ja
loope
mov
inc
lret
fwait
push
add
daa
cmp
mov
xchg
lahf
add
mov
scas
scas
jbe
add
xor
dec
ficompl
add
stos
sub
or
xor
dec
mov
jnp
lods
andb
dec
insb
push
stos
xor
sub
cmovne
movsb
pop
cmp
scas
push
ret
cmp
stc
mov
adc
imulb
push
mov
andl
mov
add
and
int
sbb
fs
rorl
add
pop
push
int3
pusha
mov
push
nop
sbb
cmp
push
inc
es
shr
xor
test
dec
cltd
popf
pop
lahf
mov
es
fs
or
lds
add
cmp
loop
push
cli
cmc
ljmp
adc
pop
adc
inc
sbbl
jb
xor
pop
sub
mov
inc
cmpsb
sub
pop
hlt
push
xchg
dec
outsb
cmp
lock
sbb
adc
leave
cwtl
je
push
adc
imul
sahf
mov
mov
add
add
ret
mov
stos
je
cmpsl
dec
jmp
sub
mov
aas
loope
xchg
in
fildll
mov
and
lret
lods
or
jmp
mov
jmp
xchg
stos
aaa
mov
ds
dec
les
mov
in
cmc
pop
mov
xchg
mov
sbb
out
inc
jmp
pop
xchg
cmovno
jecxz
out
push
ds
cmp
fdivr
mov
jns
adc
popf
adc
les
test
inc
repz
push
cmp
insl
aad
adc
or
add
pop
inc
ret
out
cmp
xchg
push
aam
test
dec
fsubrs
push
pushf
mov
push
inc
call
sbb
pop
fdivp
xchg
fdiv
inc
xchg
mov
dec
arpl
stos
movsb
rcrl
fistl
out
push
mov
cmp
mov
in
pop
lods
jnp
mov
or
addl
xchg
sub
mov
lods
add
subl
pop
cmp
dec
lock
pushf
and
sbb
jno
sbb
cmpl
pusha
mov
test
cmp
addr16
cld
dec
test
lahf
jno
or
enter
dec
fmulp
xor
clc
std
je
repz
xor
ss
pop
pusha
out
insb
sar
leave
int3
mov
and
cmp
inc
sbb
sub
or
lahf
push
adc
daa
pop
outsl
pop
push
cmpsb
nop
and
ss
cmpsl
lcall
mov
loope
push
aad
cmp
lret
mov
adc
fldl
xor
xchg
in
cmp
mov
cmpsl
sbb
mov
lret
flds
in
inc
cmc
cmp
adc
cli
inc
fldt
jae
jno
mov
cmp
or
repnz
mov
fldenv
sub
add
lods
aas
push
cwtl
sbb
dec
cmp
push
outsb
dec
addr16
push
daa
sbb
ds
xor
xchg
call
in
mov
lret
imul
mov
xchg
gs
sub
sub
nop
ja
ret
lcall
mov
cmp
lds
xchg
inc
js
cltd
inc
cwtl
pop
pop
or
scas
in
stos
sbb
aam
imul
stos
mov
jl
mov
loope
xchg
orb
sbb
pop
or
mov
pop
sahf
lea
mov
aas
dec
je
test
cld
test
cmc
loope
xchg
or
jmp
dec
into
add
jmp
ret
inc
data16
insb
pop
pop
arpl
mov
mov
xchg
jge
mov
insb
aam
cmpsl
popa
ja
lahf
icebp
dec
out
sub
sbb
imul
fists
cmc
ds
mov
fisubl
cmp
jne
fdivs
fwait
xchg
hlt
outsl
xor
and
and
test
es
sbb
adc
js
mov
sarb
jo
adc
sbb
push
mov
out
and
push
add
push
sbb
and
popf
cld
mov
mov
fistps
negl
ja
in
mov
cmp
sbb
xlat
andb
lret
jno
ret
mov
jns
or
mov
loope
push
adc
test
sub
movsl
pop
xchg
rcl
xchg
sbb
mov
aaa
mov
and
xchg
test
es
push
mov
mov
arpl
push
xor
cmp
mov
jo
ds
das
loope
dec
and
fadds
pusha
lahf
push
test
adc
ja
xor
dec
xchg
jbe
inc
leave
push
cmp
pop
mov
xchg
sub
pop
cwtl
scas
aam
mov
inc
out
daa
and
add
xlat
imull
dec
notb
orb
out
stos
or
mov
in
and
sti
push
cmp
mov
cmp
lahf
mov
or
cs
out
js
push
lahf
rolb
call
cltd
push
cmp
das
hlt
ret
movsl
mov
andb
mov
mov
dec
iret
lods
call
stc
inc
jno
icebp
xchg
inc
push
push
inc
sti
jp
push
add
sti
js
pop
adc
cmpsb
out
mov
sub
sbb
test
adc
daa
pusha
in
inc
cmc
lea
incb
and
sbb
lds
pop
push
mov
lods
and
into
arpl
addb
js
imul
push
xor
out
jae
or
pop
cmp
sbb
aad
imul
mov
xor
cmp
sub
shrb
lock
cli
movsb
enter
negb
pusha
data16
es
mov
fs
int
ret
fstl
aad
iret
addr16
sub
gs
mov
xor
btc
cmp
aam
into
jmp
sub
mov
and
nop
aaa
xchg
jb,pt
les
lods
leave
std
cs
mov
pop
push
outsl
jle
cld
mov
jge
leave
int
jl
ja
inc
mov
lods
nop
add
imul
loope
movl
mov
popa
test
or
xor
mov
fidivs
dec
aam
inc
cmp
xchg
repz
inc
outsl
aad
sub
movsl
in
jmp
es
popa
xchg
and
jle
movsl
enter
pop
ds
mov
imul
lods
mov
inc
dec
adc
jecxz
gs
jno
outsb
or
cwtl
xor
or
pop
mov
dec
add
xchg
cs
cmc
push
inc
pusha
inc
or
sub
jae
gs
je
out
jnp
aas
sub
pop
add
and
inc
cmpsl
in
xor
scas
cmp
dec
jle
lea
call
sbb
cmp
inc
stos
sub
push
xor
cmp
push
xor
call
inc
ljmp
fisttpl
or
stos
fs
idiv
push
push
push
dec
fs
lcall
out
lods
dec
adc
aad
bound
cmpb
inc
in
mov
ds
divl
ljmp
mov
frstor
fcoms
jb
mov
imul
lea
icebp
repz
jl
push
xorl
pop
lret
test
int3
adc
push
cmp
insl
mov
ds
cld
inc
xchg
push
lcall
mov
jmp
pop
add
or
sub
lea
daa
pop
and
or
aam
inc
ss
mov
frstor
inc
loope
or
dec
sub
int
push
xchg
and
lods
mov
and
clc
and
sbb
daa
cmp
mov
or
ds
mov
es
ret
outsl
mov
mov
inc
lret
outsl
sbb
and
pusha
sub
aad
loop
push
jnp
jae
loop
pop
jp
fiaddl
xor
adc
repnz
and
lahf
shrb
sub
add
add
sub
pushf
sbb
jle
jns
push
fsubs
push
lods
popa
imul
mov
jnp
ss
inc
add
or
call
inc
mov
xor
ficoml
fstpt
sbb
sbb
mov
mov
jp
mov
and
dec
pusha
pop
push
add
rorl
shll
mov
lock
push
add
inc
xchg
or
pop
outsl
mov
push
and
xchg
inc
inc
mov
int3
fstpt
je
push
dec
and
iret
inc
hlt
xchg
inc
pop
mov
popa
mov
pop
pop
xchg
loope
test
fsub
add
test
inc
jle
sbb
sti
adc
pop
ss
xlat
aas
cs
fsubl
std
cmc
add
fwait
pop
or
cs
push
cmp
hlt
sub
movsl
push
shl
jmp
xchg
lahf
fsubrs
mov
cs
dec
dec
fmull
mov
and
leave
or
mov
negl
add
mov
mov
sbb
sbb
insl
fucomi
mov
jg
pop
add
inc
mov
sbb
loopne
mov
daa
outsl
xchg
mov
mov
pop
lock
jle
mov
jl
negl
shll
jg
cmp
call
subl
mov
popf
lock
cmp
mov
push
shll
cmpsb
adc
xor
xor
dec
rolb
xor
rclb
cmp
jge
and
in
jl
dec
outsl
sub
inc
call
lds
jmp
imul
mov
daa
sbb
mov
loope
call
cmp
pop
enter
addr16
outsb
jle
adc
jne
push
shll
jmp
fistpll
lea
in
in
fwait
rol
mov
mov
neg
sub
add
pop
sub
sbb
ret
es
hlt
jecxz
sub
mov
adc
inc
mov
fstps
in
subl
arpl
add
enter
pop
xchg
popl
dec
out
adc
fcos
mov
adc
mov
sub
inc
sbb
xlat
cli
mov
cs
das
xor
nop
rorb
movsb
xor
jg
sti
popl
mov
dec
pop
je
out
test
sub
sbb
xlat
or
push
mov
jecxz
and
xchg
xorb
cmc
lcall
adc
mov
shrb
inc
add
mov
lea
stos
lcall
pop
out
je
adc
sahf
inc
imul
out
or
mov
add
movsb
sub
or
call
aaa
mov
inc
dec
xchg
je
pop
jns
in
push
aas
xchg
inc
mov
shrb
scas
jbe
stc
loope
mov
or
enter
mov
shl
out
mov
inc
ret
push
aam
sub
adc
cmpb
or
test
adc
daa
pop
jecxz
scas
sarb
shr
push
inc
push
fsts
xchg
jg
pop
lret
test
xor
jp
mov
pop
lds
push
inc
pop
jp
nop
xchg
in
mov
and
pop
sbbl
push
out
jns
xchg
push
add
pop
ljmp
pop
rcl
sbb
xchg
aam
into
and
insb
add
xchg
cmp
ds
xor
lret
mov
sbb
popf
jne
lds
adc
aaa
mov
mov
mov
pop
adc
rcr
push
cmpsl
inc
clc
lret
inc
push
dec
jmp
inc
iret
dec
ret
and
pop
push
xlat
loop
loop
xchg
mov
jae
push
rolb
add
je
std
popa
stos
pop
push
adc
push
or
inc
neg
test
xor
sub
int3
sub
and
sbb
jno
lds
xchg
mov
imul
sarl
fwait
inc
dec
or
outsb
lods
sbb
dec
add
sub
jb
daa
mov
pop
cmp
inc
cwtl
das
leave
les
push
add
jmp
or
push
loopne
jge
icebp
sbb
xchg
movsl
push
ret
xchg
or
mov
or
add
sbb
push
lea
sub
lock
shll
pop
movsb
mov
jge
pop
outsl
fmuls
and
xor
out
push
cmp
testl
xor
loopne
xchg
loop
adc
push
aas
mov
cld
dec
loopne
imul
cmc
int3
mov
jle
sub
out
sbb
dec
push
mov
add
test
imul
mov
push
dec
aas
pusha
xchg
jae
aam
stc
jmp
and
outsl
pop
mov
jne
in
dec
push
rcll
repnz
jb
insb
ficomps
adc
aad
cmc
dec
lret
add
cmp
fldt
cmc
enter
scas
out
cmp
rorl
adc
popf
inc
jle
adc
mov
mov
cmpsb
xor
sub
jecxz
push
add
aaa
in
pop
push
xchg
adc
mov
leave
pop
jo
lret
and
loope
or
or
mov
jo
movsb
dec
mov
sbb
cmp
loop
in
or
dec
aam
add
xchg
arpl
cmp
mov
add
repz
vmulss
hlt
add
dec
int
adc
loop
xchg
loop
xchg
mov
jmp
jmp
lret
and
test
lods
aad
jecxz
sub
cmp
mov
mov
or
push
push
xlat
stos
fmuls
cmp
push
outsl
or
repz
pop
cmp
sbb
jb
in
scas
push
or
iret
lods
mov
adc
cli
popa
add
push
lcall
clc
pusha
mov
fs
repz
cmp
roll
imul
dec
std
in
aam
es
loop
scas
das
out
andl
pop
adc
cmp
mov
into
mov
cmc
xchg
mov
dec
jl
adc
push
lea
cmp
dec
repnz
or
loope
mov
xchg
sub
jo
rcll
cli
and
pop
daa
in
out
cmp
jo
xchg
and
xor
pop
inc
mov
cmp
into
dec
sbb
inc
in
or
iret
push
jae
fs
outsb
dec
scas
and
push
sti
mov
xor
lds
out
les
daa
push
cmp
rcrl
sub
ret
lret
or
pminsw
xor
mov
inc
fs
pop
inc
idivl
fcoml
int
icebp
cltd
push
adc
subl
test
shl
outsb
gs
cs
into
inc
push
jae
lods
leave
stos
push
sub
dec
fwait
sbbb
or
mov
push
shll
cmp
popa
cmc
scas
in
call
imul
jae
ds
push
sub
pusha
mov
mov
icebp
mov
push
dec
lahf
lods
mov
in
add
insl
shld
ljmp
mov
nop
add
lcall
push
insb
cmc
sbb
mov
sbb
mov
sbb
int3
lahf
cmp
xchg
lret
mov
fildll
add
std
into
or
pop
mov
add
cli
cld
cmp
inc
aaa
mov
cli
add
cmp
cld
scas
mov
cmp
xlat
pop
mov
cs
sub
fwait
push
jecxz
dec
repz
ljmp
test
pop
jns
inc
fbld
orb
pop
fwait
cmp
test
sti
jo
xor
and
fldenv
and
add
ljmp
push
or
pop
rol
subb
push
mov
test
aas
pop
icebp
or
dec
add
add
ret
fldenv
pop
mov
fwait
hlt
and
clc
mov
out
test
cs
dec
stos
das
es
outsb
imul
mov
xor
push
lds
adc
adc
loopne
enter
xor
pop
fistpl
and
in
sbb
psubd
sti
push
lock
jns
mov
jl
clc
mov
test
adc
out
cwtl
movsl
xor
or
aaa
push
enter
scas
sbbb
mov
fidivs
jno
into
call
sbb
mov
aaa
push
psubsw
xor
pop
cmpsl
pushf
into
cwtl
dec
adc
or
in
add
and
aaa
dec
mov
mov
cli
inc
push
popa
jmp
xor
shlb
and
jne
fistpll
out
add
dec
rorb
mov
adc
push
cmpsb
sahf
out
outsl
lods
xor
daa
js
mov
out
jg
inc
outsl
mov
inc
adc
or
xor
cmp
fistpl
jbe,pt
fimuls
xchg
mov
fdiv
jle
mov
sbb
call
dec
sbb
ret
xlat
adc
in
xor
fiadds
dec
repnz
scas
jl
nop
mov
add
mov
add
and
xchg
xchg
xchg
je
mov
cmp
daa
mov
repnz
mov
cwtl
cmp
sbb
xchg
dec
addl
or
or
pop
lret
mov
sub
aad
sub
mov
sti
fsubr
addl
add
icebp
outsb
lods
sarb
xor
or
shrl
enter
lea
aas
mov
jl
jge
jo
push
loopne
xor
lcall
enter
inc
cmp
addr16
jnp
inc
inc
lods
out
pop
inc
mov
inc
push
mov
push
xchg
je
xchg
fisubs
push
hlt
fmuls
insl
or
sahf
sub
cmpsl
out
pop
push
dec
and
pusha
ja
or
gs
push
jns
xor
add
add
push
xlat
shlb
mov
aad
dec
add
out
lret
icebp
popa
rcll
dec
mov
cmp
lret
jecxz
rcrb
dec
xchg
jno
push
das
sub
xlat
dec
call
push
mov
xchg
xchg
sub
je
push
loop
jno
pop
mov
push
jge
pop
pushf
sub
stos
int
mov
loop
jno
cmp
and
jbe
xchg
ret
hlt
loope
jle
popf
or
mulb
jae
inc
imul
call
adc
mov
push
xchg
mov
lds
daa
loope
jge
inc
imulb
cwtl
pop
call
mov
mov
mulb
dec
test
shll
out
loope
scas
and
push
test
mov
lds
adc
ss
adc
insl
pop
es
mov
pushf
call
jno
insb
iret
bound
insl
lea
lret
sub
inc
dec
add
pop
out
in
adc
mov
out
jg
divl
push
popf
jbe
mov
push
cmp
repz
cli
inc
mulb
xchg
in
jno
and
test
sub
adc
leave
mov
fs
dec
jns
adc
pop
jmp
cld
mov
xor
test
cltd
or
mov
dec
out
stc
bound
mov
dec
jge
fldcw
movsl
iret
out
stos
js
test
in
iret
mov
lods
popa
shrb
dec
enter
pop
imul
test
std
dec
ljmp
loope
mov
inc
and
pop
or
mov
xor
dec
push
test
cmp
pop
test
call
sbb
imul
adc
push
outsl
and
push
inc
pusha
and
and
insb
sub
xor
bound
enter
jns
inc
sub
lds
pcmpeqd
mov
sbb
dec
sub
aaa
lcall
stc
jbe
es
filds
cmp
jecxz
outsl
repnz
adc
inc
dec
mov
xchg
jnp
push
dec
sti
stc
inc
repz
dec
pop
xchg
cmp
and
movsl
cld
adc
js
ds
mov
lods
in
ret
mov
std
mov
stc
test
daa
xchg
or
add
xor
push
mov
rcrl
mov
loope
dec
lahf
inc
daa
cmp
push
jo
aaa
sub
sub
push
xor
ds
addr16
orl
daa
call
pop
shrl
xchg
xchg
lock
sub
in
jmp
jp
jno
enter
stc
fstp
add
dec
enter
mov
inc
or
mov
sbb
fadds
add
ds
dec
andl
jbe
loop
ror
cld
jmp
in
rorl
push
jns
push
and
cmc
pop
push
xchg
xchg
dec
xor
das
jge
xchg
push
cmc
dec
out
xchg
xchg
push
call
insl
cld
out
xlat
loopne
icebp
jmp
xlat
cmp
inc
inc
sahf
mov
and
jnp
stos
add
shl
dec
push
and
dec
mov
mov
push
cld
mov
push
adc
xchg
mov
ja
testl
inc
adcb
adc
enter
movsl
rcll
push
sbb
jns
jl
dec
shl
or
mov
push
or
cmp
push
mov
dec
cmp
out
sub
xor
cmpb
data16
jbe
pop
fwait
xchg
inc
int
mov
adc
mov
xor
ret
sub
js
mov
push
mov
xchg
and
pop
sahf
cmc
bnd
or
mov
push
fidivs
insb
pop
out
sbb
std
xchg
and
pop
fmull
xchg
mov
jmp
mov
cs
repnz
mov
sbb
int
iret
sbb
out
ljmp
pop
das
or
int
xchg
outsb
ret
mov
jbe
and
mov
test
mov
loop
into
mov
cltd
cld
decb
mov
or
iret
dec
adc
inc
and
adc
lret
loop
lcall
inc
jbe
mov
mov
lret
hlt
xchg
mov
ja
popa
int
pop
lcall
out
test
pop
push
setns
lahf
adc
lcall
xor
and
lcall
cltd
fldcw
pop
pop
dec
xor
daa
test
imul
sbb
pop
and
mov
or
push
into
and
mov
or
jae
int
out
sub
negb
int3
pop
mov
mov
jmp
pushf
sbb
sarb
push
cmp
xor
jno
jo
shll
push
or
in
bound
repz
outsb
cbtw
pop
push
fldl
and
inc
out
sahf
jmp
mov
outsb
shlb
push
jnp
xchg
jp
adc
inc
movsl
cld
dec
jg,pn
mov
adc
xor
xor
enter
pop
sub
cli
test
cld
sub
cmc
pusha
cmpsl
mov
and
xor
test
xor
xchg
cmp
rorb
lock
jns
out
sub
xchg
ljmp
sti
test
dec
bound
add
push
or
mov
sbb
mov
lock
jne
mov
std
sub
ljmp
pushf
scas
imul
and
and
fldcw
js
mov
mov
icebp
xor
mov
or
stos
cwtl
test
les
shrb
shlb
push
leave
pop
lea
ss
pushl
add
aam
stos
or
jbe
fcoml
mov
xor
call
outsb
std
mov
sub
jl
movsl
mov
xchg
xor
and
push
das
fsubs
sahf
jmp
xchg
arpl
aam
test
filds
push
xchg
pop
ret
mov
fcoms
sti
dec
scas
mov
push
inc
cmp
int3
xor
das
cmp
adc
leave
cmp
push
jmp
sub
in
test
fcoml
inc
scas
jno
aad
inc
ljmp
les
lods
sub
xor
popf
mov
mov
test
push
or
insb
out
arpl
icebp
sub
mov
movsb
hlt
loop
dec
xchg
mov
stos
dec
mov
xor
pusha
dec
push
int
in
adc
cmp
add
add
push
push
fmulp
sti
jbe
leave
int3
jmp
jns
pop
dec
dec
dec
out
and
cmp
popf
xchg
insb
sub
cmc
dec
es
int
imul
mov
mov
dec
jne
and
scas
xchg
push
fisubs
and
inc
lret
xor
fildl
lret
cmp
cli
lahf
push
je
fildll
mov
loop
mov
aas
mov
in
sbb
icebp
jbe
daa
jo
pslld
lock
xchg
jbe
popa
dec
int3
mov
rol
pop
push
pop
mov
cmp
ja
imul
jecxz
lret
fmuls
outsl
jnp
aad
add
jp
sub
sti
loop
cli
bound
sub
imul
or
cld
mov
adc
sub
xlat
arpl
mov
jge
xor
or
orl
adc
outsl
push
sahf
out
aam
push
mov
fisubs
scas
ficompl
jp
out
fidivrs
rorl
in
imul
push
lods
repz
les
sub
mov
mov
pop
mov
jno
aaa
push
adcl
jne
fwait
nop
mov
lock
ficompl
roll
dec
shrl
cmp
imul
loopne
mov
jo
inc
fs
xchg
dec
pop
jne
fldl
adc
cmp
lods
jmp
or
pop
test
lahf
popf
js
mov
cmpsl
jnp
insl
ds
pop
mov
mov
jg
dec
pop
xor
xor
mov
pop
int3
dec
sub
xchg
xor
push
mov
outsl
mov
subl
lahf
lret
mov
rcrl
adc
push
pop
fildl
scas
or
scas
push
out
insb
es
sbb
les
ffreep
pop
mov
data16
in
mov
jecxz
nop
mov
or
or
mov
jecxz
sub
pushw
shrb
les
push
rcrl
rcr
sub
es
push
jge
sub
in
or
adc
popa
or
jns
sbb
mov
lea
jno
xchg
or
jl
lock
add
movsl
jb
mov
lcall
pusha
mov
mov
jb
adc
mov
into
mov
adc
push
lcall
sub
daa
jge
insb
mov
xor
and
mov
testl
jns
dec
sub
dec
ljmp
cmc
popf
popa
sub
jo
adc
xor
dec
into
pop
test
sub
in
das
adc
pop
pop
rclb
mov
or
inc
mov
adc
push
jnp
mov
jle
inc
jp
pop
adc
sbb
push
adc
int3
testl
dec
push
repz
or
dec
icebp
enter
inc
and
int
pop
pushf
imul
enter
jmp
leave
fs
call
out
jno
mov
and
cmp
jp
fucom
mull
dec
popf
mov
in
sbbl
test
clc
mov
and
push
rcr
xchg
in
adc
hlt
and
sub
sbb
mov
cmp
fsubl
rep
dec
int3
ljmp
mov
rclb
bound
shll
repnz
icebp
aad
lock
popa
sbb
leave
bound
test
cmpsl
scas
hlt
and
dec
roll
andl
in
into
xlat
notb
pop
and
int3
xor
lret
cmp
out
sbb
jbe
sahf
fldcw
lret
out
call
iret
dec
jle
outsl
cmpsb
mov
inc
test
sahf
mov
mov
xchg
jg
cmp
test
jnp
test
lods
fistps
mov
stos
add
mov
add
test
int3
jmp
cmp
cmp
sub
sarb
pushf
jmp
xor
test
nop
jecxz
test
inc
jae
stos
add
xchg
mov
and
jb
mov
test
loope
adc
out
out
add
adc
ds
pop
lods
xor
pop
xchg
push
mov
imul
cmc
sarl
dec
cwtl
insl
outsb
xchg
loope
adc
cwtl
ss
inc
or
xchg
jbe
pop
insl
mov
mov
shll
jge
mov
dec
sub
push
cmp
stos
shlb
mov
movsl
fistpll
ret
xor
sub
pop
ret
dec
jae
push
mov
push
test
sbb
and
xor
rorl
adc
adc
imul
and
pop
ret
insb
icebp
mov
mov
lods
sar
fadds
scas
adc
or
push
cmp
adc
inc
adc
xor
loop
ficoms
adc
cs
lahf
jecxz
es
xchg
sbbl
xor
cmpsb
or
jo
cmp
mov
mov
sbb
jmp
fucom
scas
imul
sbb
add
icebp
lock
test
ja
outsb
jmp
or
fcomps
sub
in
adc
int
rorb
pop
int
fcoms
mov
clc
clc
push
jne
and
and
jmp
cmp
int
mov
les
fwait
push
mov
jo
or
sbb
orb
cmp
jb
inc
lret
lods
mov
cmp
pushf
lret
fcompl
xchg
filds
xchg
push
iret
ret
popf
movb
mov
roll
dec
mulb
rorb
shrb
cmc
pop
xchg
ret
pusha
fistl
or
pop
movsb
jmp
fwait
sbb
adc
ss
dec
pop
jo
dec
push
sbb
aad
mov
movsb
mov
jmp
mov
jo
dec
outsb
ljmp
popf
lret
fisubrl
mov
mov
scas
mov
pushf
fidivl
xchg
scas
insb
pop
pop
xor
push
push
and
add
add
movsb
sub
sub
daa
mov
popf
dec
xchg
push
dec
inc
mov
nop
jmp
mov
das
add
pop
mov
lcall
ss
dec
pop
lcall
mov
test
popa
arpl
inc
mov
xor
aad
cs
xor
push
jns
cld
rcrb
xlat
jae
dec
inc
aam
idiv
inc
inc
std
fs
adc
pop
mov
repnz
out
fstpt
cli
cld
push
das
enter
mov
sub
int3
xor
cmp
lds
and
dec
dec
fidivrs
dec
push
bound
sti
pushf
mov
mov
dec
mov
pop
int3
mov
push
and
int
sbb
shlb
test
addb
dec
xor
loopne
addr16
lods
out
loope
adc
in
out
std
ljmp
push
cwtl
or
lock
cmpsl
xchg
insb
and
stos
pop
push
int3
pop
loope
imul
sahf
pop
cs
lahf
pop
nop
pushf
mov
xchg
inc
fisttpl
fwait
xchg
hlt
sahf
cltd
fisubrs
neg
add
test
adc
jp
adc
test
repnz
out
dec
int3
addr16
mov
and
lods
je
jns
shrb
movsb
pop
dec
cmpsb
mov
test
imul
pop
dec
adc
mov
aaa
fisubrs
add
cmp
fistl
mov
icebp
mov
test
sbb
outsb
add
xor
mov
frstor
inc
add
stos
cwtl
repnz
subl
cmp
xchg
out
orl
lahf
mov
jg
je
cld
aaa
inc
or
push
cmp
jp
push
ret
mov
icebp
jb
sbb
push
outsl
stc
loope
xor
jae
sbb
xor
dec
hlt
cwtl
push
sub
inc
push
cmp
mov
mov
pop
fcmovnb
ss
shr
or
adcl
mov
out
sbb
movsb
lds
bound
bound
std
sub
in
cmp
scas
push
adc
imul
imul
mov
fwait
popa
mov
dec
cmp
fbstp
les
dec
jbe
pop
clc
lods
mov
in
and
jo
cltd
push
ds
jecxz
shrb
pusha
ljmp
out
sahf
sub
dec
bnd
adcb
mov
lock
dec
jmp
es
jl
insl
push
shrb
enter
shll
push
inc
or
and
add
cmp
lds
dec
mov
jns
cmp
cmpb
push
sbb
push
or
mov
adc
mov
mov
repnz
hlt
andl
sbb
push
loope
ret
adc
mov
inc
leave
lods
sahf
testb
sbb
cmpsb
cmp
ret
mov
mov
fnstsw
xor
orb
mov
ret
pop
adcb
xchg
xor
aad
mov
arpl
loop
mov
ds
inc
push
mov
or
ds
lods
jp
push
movsb
mov
add
jmp
sti
mov
push
mov
imul
pop
jle
jo
dec
cmp
xchg
jge
adc
xor
lea
pop
inc
mov
outsl
jecxz
ds
inc
mov
sbb
mov
popa
pusha
les
mov
fists
aad
mov
push
cmpsb
lea
je
in
iret
xchg
shrb
sub
adc
mov
aaa
loop
dec
pop
ss
imul
lret
sbb
repnz
or
mov
inc
xor
or
sub
xlat
aam
leave
adc
stc
test
sub
add
xchg
ret
pop
or
stos
mov
mov
stos
call
jp
iret
inc
in
xchg
adc
pop
call
mov
std
inc
outsb
imul
leave
xor
xchg
or
pop
out
mov
mov
jne
mov
int3
pop
add
mov
arpl
fcmovne
jge
cmpsl
ds
dec
mov
xor
gs
jbe
call
cltd
mov
mov
imul
dec
mov
push
jp
mov
ret
repnz
adc
movsl
inc
sub
add
adc
xor
inc
mov
ds
inc
or
stc
xchg
sbb
stc
mov
cli
icebp
xor
adc
dec
jecxz
mov
dec
icebp
xor
inc
fs
scas
inc
in
mov
imul
inc
call
cmpsl
loop
jle
js
test
push
cmp
mov
pushf
xchg
addr16
xchg
mov
aam
decb
xchg
cmc
xchg
cmpsb
pop
nop
insl
mov
jle
push
mov
lret
stos
jno
das
or
mov
and
cli
aaa
and
jbe
pusha
sub
dec
les
test
das
mov
mov
inc
dec
ja
repz
iret
fisttpll
mov
popa
shl
mov
lock
dec
add
out
mov
test
fstps
fnstsw
sbb
pop
xchg
inc
inc
ja
cli
and
in
sbb
pop
popf
pop
std
pop
cwtl
out
cmp
icebp
mov
mov
aas
addb
adc
and
mov
cli
outsb
mov
ret
mov
ret
and
movl
in
or
aam
sbb
std
lahf
aam
xchg
out
and
push
stos
pop
cmp
or
or
sbb
mov
fmull
movl
or
cltd
inc
mov
fisttpll
pop
add
pop
xor
popa
inc
fdivl
movsb
lahf
shl
into
aam
mov
and
cmp
ret
daa
lods
mov
add
pop
js
test
dec
mov
pop
xor
lock
in
sbbb
push
and
adcb
stos
xchg
stc
les
dec
in
iret
fnsave
ret
testb
jb
inc
arpl
and
ret
cli
dec
sub
imull
les
pop
and
mov
aas
add
cltd
outsl
loop
xor
sub
pop
push
inc
mov
test
add
jl
cmp
mov
test
call
loopne
add
loop
push
pop
cmpsb
xchg
or
mov
ss
in
cmp
icebp
into
dec
sbb
testb
cmp
fwait
mov
pop
inc
pop
lods
xor
bnd
pop
add
inc
movsl
push
es
mov
push
dec
ja
mov
sbb
rcll
jmp
lods
inc
mov
loopne
add
fldenv
adc
stos
std
test
and
dec
mov
jne
add
pop
sbb
add
push
jp
ja
in
and
pop
mov
mov
push
out
adc
dec
push
aas
xor
inc
fsubl
push
inc
xor
repnz
cmc
mov
xor
movsl
or
sti
inc
mov
cmpsb
or
movsb
sti
pusha
cmp
aas
inc
dec
mov
xchg
dec
or
mov
xchg
inc
mov
add
pop
imul
mov
sub
xor
les
les
ret
daa
jge
add
jecxz
pop
sarl
sti
test
jb
pushf
push
jp
or
add
push
dec
mov
inc
insl
jp
xchg
out
push
sbb
pusha
sub
int3
mov
xor
pop
dec
or
mov
dec
xlat
mov
in
es
xchg
fisubrl
roll
lods
sbb
or
mov
inc
int
stc
dec
xchg
ljmp
add
or
dec
adc
add
xchg
orb
xlat
and
mov
xor
and
int
dec
xchg
mov
mov
ss
and
mov
ja
dec
inc
sub
xchg
cmp
cmp
xor
out
test
lods
sahf
dec
xor
pop
jo
into
mov
sbb
push
std
data16
sub
push
aaa
sar
adc
idiv
jae
vpsrlq
or
enter
addl
xor
adc
cs
pop
xchg
ss
push
inc
xor
and
xor
mov
cld
xor
mov
cmpsl
insl
cwtl
and
mov
fcomi
je
pop
adc
lods
test
add
push
test
in
inc
jo
mov
and
dec
mov
mov
cmovs
mov
add
gs
pop
fistpll
inc
test
out
mov
mov
ds
push
mov
imul
inc
or
pop
bound
int3
xlat
rcr
cmpsl
sarl
jb
jg
movl
xchg
xor
mov
xchg
imul
jo
inc
xor
cmp
mov
insl
mov
and
bswap
xchg
adc
mov
push
inc
xlat
xor
sbb
test
mov
xor
std
sbb
xor
adc
push
inc
mov
sbb
imul
jns
mov
lahf
push
xorl
xchg
out
mov
cmp
lret
sub
test
push
xchg
imul
jnp
cmp
sbb
pop
or
arpl
adc
pop
cmc
or
dec
xor
mov
cmc
ljmp
jp
and
mov
xor
jp
repnz
iret
push
dec
pop
into
ret
or
jmp
jecxz
dec
push
scas
jb
mov
aas
mov
jo
rorb
test
out
xor
jno
pusha
test
hlt
repnz
mov
push
fidivl
ret
clc
push
pop
pop
push
fs
fdivrs
xor
and
sub
pop
mul
inc
cwtl
sbb
inc
addr16
jbe
cmp
pusha
outsb
mov
and
jmp
push
mov
in
test
aas
mov
pop
mov
outsb
add
fwait
jg
inc
xchg
incb
cmp
addr16
push
loopne
xlat
cli
xchg
mov
add
ret
aas
shrb
sub
sbb
and
daa
lods
dec
fwait
mov
loop
pop
sub
and
shrl
pop
out
push
cld
mov
mov
mov
call
test
fucomp
aam
inc
sub
stos
loop
sahf
int3
sub
lock
sub
addb
shll
add
shl
push
and
clc
mov
sbb
out
xchg
fisubrl
es
sbb
imul
push
add
lret
sarl
xorb
fistpll
xchg
imul
imull
ficoml
fwait
mov
std
push
pop
inc
sbb
jp
ja
in
rclb
push
repnz
add
adc
fdivrl
leave
leave
and
mov
mov
mov
pop
dec
lret
scas
call
outsl
in
jmp
ja
mov
orb
xor
sub
dec
sbb
mov
sub
sub
mov
dec
imul
subl
xchg
int3
mov
push
xchg
fistps
sub
scas
ds
sub
cmp
and
sbb
mov
push
jmp
mov
xchg
scas
cld
out
lods
pushf
or
frstor
xchg
inc
jge
push
clc
int
scas
sub
movb
cwtl
lods
insb
into
bound
inc
dec
sbb
mov
pop
adc
add
inc
movsl
or
jne
dec
jbe
sbb
scas
cmp
or
mov
and
xchg
mov
shr
push
mov
icebp
mov
iret
out
in
imul
mov
jno
outsb
and
addr16
jnp
mov
xchg
rclb
inc
push
in
or
cmpsl
repz
inc
cmp
xlat
or
je
push
push
jno
xchg
scas
lods
cmp
xchg
push
sub
ljmp
mov
repz
mov
shrl
or
outsb
das
mul
adc
add
iret
dec
xchg
arpl
or
dec
das
iret
push
inc
add
lods
mov
mov
hlt
stc
mov
sbb
divb
push
jl
test
sar
aas
adc
sub
imul
mov
or
inc
sahf
xlat
mov
xchg
outsb
nop
or
ljmp
imul
pop
mov
mov
mov
dec
jae
jnp
mov
push
jae
mov
iret
pop
scas
setno
mov
in
push
pop
jns
adc
push
adc
and
push
cmpsl
adc
fs
popf
in
jnp
sbb
fcoml
pop
mov
inc
jns
push
add
fs
cmp
cmp
fisubrs
cmpsl
enter
movsb
adc
mov
call
xchg
insl
cmpl
inc
iret
jo,pn
xchg
xchg
ja
pop
les
mov
pop
adc
sbbl
or
xchg
stos
ror
dec
sbb
cld
and
inc
fs
adc
int
adc
hlt
out
lea
jne
jl
lret
sti
xor
mov
icebp
cltd
data16
das
cmp
lds
and
std
cltd
aam
xchg
lea
jns
add
dec
jnp
jmp
pop
mov
mov
sub
mov
inc
loop
xor
in
push
sbb
subb
xlat
neg
xor
gs
jmp
leave
pop
dec
aad
dec
xor
or
xor
lea
dec
xchg
cwtl
loopne
aad
lds
mov
cmpsb
adc
lea
xchg
out
cmp
lods
jns
sbb
dec
and
jnp
mov
outsb
lcall
pop
in
xchg
cmp
in
sbb
jle
or
adc
sti
dec
xchg
jmp
cmpsb
clc
lods
mov
push
or
popa
sti
pop
loope
ljmp
mov
jns
nop
cmc
and
dec
int3
and
cmp
das
xchg
test
jle
jle
std
lea
dec
mov
mov
mov
cltd
dec
push
mov
dec
xchg
pusha
mov
mov
loop
or
lret
pushf
je
mov
mov
inc
cmc
das
icebp
loopne
js
inc
inc
push
mov
sub
lret
or
data16
js
xchg
mov
rcl
pop
and
cmpsl
adc
jge
out
in
call
stc
enter
pushf
xor
repnz
into
dec
or
rcrb
lock
fmull
push
sbb
xchg
outsl
fidivs
mov
mov
xchg
sub
loopew
push
negl
in
xor
mov
pushw
shll
jae
push
add
inc
bound
or
xor
pop
aaa
jl
popf
fisubl
xor
stc
xor
in
stc
icebp
sbb
jb
sbb
and
ljmp
lock
in
fnstsw
jp
inc
inc
mov
jae
mov
dec
jp
mov
adc
or
shrl
push
shll
scas
cmc
lea
ja
xchg
stos
and
mov
imul
rol
inc
mov
out
jns
xor
xchg
repnz
jno
pop
inc
jb
dec
cs
fidivrs
fadd
scas
mov
sub
fisttpll
and
out
dec
movsb
je
pusha
daa
push
mov
or
mov
out
in
je
pusha
xchg
scas
jb
pop
into
and
in
ljmp
inc
cmpsl
hlt
adc
mov
mov
push
pushf
xchg
or
adc
mov
mov
es
cmc
int
popa
call
sbbb
dec
imul
scas
jae
sub
sub
xor
cmp
lahf
rcll
lea
add
adc
fs
cs
cwtl
mov
cli
aaa
loop
inc
push
xchg
pop
dec
xchg
repnz
daa
mov
data16
push
adc
add
in
xchg
and
cmp
inc
cmp
add
lods
out
mov
push
pop
xchg
aam
scas
jae
sub
jl
sub
adc
nop
xchg
lock
push
call
jge
out
shl
push
push
fisttpl
fdivs
mov
push
mov
test
pushf
jnp
mov
loope
xor
jo
xlat
pop
sar
inc
int
sbb
pop
cmp
fistpll
inc
nop
incb
lret
cmp
xchg
mov
jae
cmp
adc
xchg
mov
inc
dec
popl
cmpl
fimuls
arpl
push
or
stos
fldt
shl
push
fsubrs
mov
xor
out
std
cmp
repnz
or
loopne
pop
in
add
xlat
out
xor
sbb
pop
dec
frstor
loop
xchg
icebp
mov
push
sub
push
sbb
je
dec
inc
test
jmp
ja
rclb
jge
fsubr
loope
mov
xor
dec
push
mov
jb
std
mov
imul
jge
les
stos
out
push
dec
pushf
add
jp
jle
into
mov
test
cmp
add
xchg
dec
cmp
xor
push
cmp
fdivl
js
arpl
xchg
stos
push
leave
arpl
cmp
sbb
pushf
insb
sbb
lret
sub
mov
mov
sbb
iret
xor
sbb
inc
inc
hlt
cmp
lret
lea
add
and
cld
imul
pop
cmpsl
xor
and
inc
cmp
jne
mov
or
dec
fdivrl
movsl
filds
push
mulb
shlb
jmp
inc
outsb
adc
shrb
sbb
xor
lea
sub
pop
jns
test
adc
cli
sub
jns
xchg
inc
and
mov
scas
repnz
or
jbe
fcompl
pop
cld
xchg
loop
lds
mov
rorb
sbb
or
xor
mov
xor
leave
into
jnp
arpl
cmp
xor
mov
dec
jo
pop
outsb
pop
push
and
nop
sbb
fimuls
mov
push
mov
sbb
adc
sbb
in
orb
ljmp
jne
add
add
loope
xor
mov
mov
jae
add
lcall
sub
icebp
repnz
imul
in
repnz
or
das
cmp
stos
adc
popa
lret
jmp
inc
mov
cmp
lret
push
mov
xchg
mov
xchg
mov
into
inc
mov
sub
mov
pop
test
jmp
nop
insl
mov
sbbb
das
adc
mov
jo
mov
shlb
inc
iret
pop
xor
int
mov
in
std
pop
inc
xchg
xor
add
or
adc
dec
std
adc
or
xlat
iret
jg
lret
test
test
push
sub
pop
lods
mov
cwtl
dec
cli
adc
sub
mov
cmp
lock
rcr
cltd
xor
imul
gs
sbbl
sahf
and
js
inc
lds
dec
outsb
dec
into
push
mov
lods
add
nop
popf
out
jno
aas
fucomi
test
mov
or
es
fidivrl
and
pop
mov
jg
sub
or
mov
push
js
test
enter
movsb
icebp
lahf
jne
shrl
mov
lods
aas
cmp
fdivs
xchg
adc
sarl
jnp
pop
ds
jns
jb
mov
jo
imul
sub
xor
rcrb
jp
mov
std
gs
shrl
imul
in
inc
xlat
pop
pop
pop
rcrb
mov
lret
and
js
rclb
test
lahf
into
je
filds
shlb
sarl
cmp
sub
cs
sub
enter
jge,pn
test
into
xor
xchg
add
jnp
mov
mov
into
je
pusha
test
pop
dec
and
push
mov
test
xlat
loope
mov
stos
sbb
mov
dec
cmp
mov
test
and
and
pop
push
adc
xchg
shll
bnd
xchg
dec
repnz
xor
cmpb
push
inc
gs
test
pusha
dec
push
pop
sub
pushf
insl
sub
or
enter
push
filds
inc
cmp
cltd
pop
add
mov
arpl
dec
mov
in
int3
stos
pop
mov
dec
pop
das
mov
pop
and
xchg
loope
lods
jbe
adc
cli
adc
mov
iret
out
gs
fistps
xchg
out
imul
stc
push
xchg
arpl
and
xchg
stos
jge
shlb
mov
jg
sub
sbb
mov
leave
je
lret
mov
cltd
fstpl
enter
gs
movsl
mov
or
add
sbb
mov
jae
in
popa
push
out
dec
pop
mov
jns
mov
jnp
xor
mov
adcl
jg
jp
insb
fstps
das
sub
push
das
inc
xlat
sbb
push
inc
sub
cltd
nop
std
or
pop
and
mov
fdivl
pop
mov
dec
sub
enter
sub
fsubrl
pop
stc
shr
shl
es
or
mov
into
mov
js
data16
pop
jmp
push
loopne
adc
lock
repnz
jp
cmpl
negl
ss
iret
imul
lea
pop
lea
xor
in
loope
push
add
loope
xchg
dec
lock
ljmp
leave
xchg
subb
fwait
inc
inc
jl
xor
mov
and
ret
cs
push
xor
fwait
call
ljmp
cltd
roll
nop
mov
pusha
cmp
jmp
and
push
arpl
cld
mov
sub
xchg
mov
xor
add
jne
cmp
mov
inc
repz
add
cld
cmp
and
dec
lahf
int3
popa
jnp
dec
fwait
fwait
clc
lods
out
and
or
sbb
std
loop
out
jge
outsl
dec
arpl
les
imul
cmpsb
xchg
mov
dec
pop
pop
in
add
add
mov
out
cmp
repnz
pusha
dec
pop
dec
push
push
loope
out
dec
sahf
sbb
int3
cmp
stos
pop
sbb
sbb
push
lds
push
bound
pushf
test
std
sbb
push
xor
mov
jns
jmp
mov
aam
hlt
iret
cld
jg
or
lret
add
test
add
mov
cmp
repz
nop
sub
adc
aaa
mov
lmsw
adc
andb
hlt
adcl
adc
pop
lods
es
xchg
cmpsl
fstps
sahf
xchg
les
nop
sti
lods
ret
mov
or
sarl
xchg
xor
mov
and
aas
add
pop
fldt
or
lea
add
push
pop
lahf
jl
fisubrl
add
movb
mov
xor
cmp
fs
mov
mov
jl
cmp
cwtl
push
or
mov
inc
jp
aam
repz
bound
lcall
test
inc
inc
fs
pop
mov
cs
mov
jnp
xchg
lea
ss
mov
into
inc
xor
mov
adc
stos
mov
test
imul
test
cli
lcall
dec
into
pop
xchg
jo
aam
pushf
xor
and
adc
push
mov
sbb
push
xor
repnz
xorl
jne
jge
popf
sbbl
xchg
mov
lods
leave
cwtl
lea
push
sarl
scas
sub
arpl
mov
fwait
sbb
mov
mov
pop
mov
int
push
push
sub
jge
xor
std
nop
or
sbb
jae
stos
subl
adc
pop
test
cmp
push
and
jnp
mov
dec
popf
sahf
enter
cmp
inc
mov
cli
cs
iret
popa
int
fwait
jnp
add
jle
out
pushf
jae
testl
sbb
lea
push
test
addr16
out
sub
pop
push
out
gs
push
dec
dec
push
xor
or
or
daa
jecxz
shr
fsubl
xchg
popa
dec
dec
ficompl
mov
lahf
or
inc
adc
adc
lret
xchg
mov
popa
cmpsl
jnp
pop
mov
lcall
mov
addr16
movsl
dec
fcompl
mov
or
stos
sti
mov
stc
push
xchg
adc
cmp
mov
into
stos
stc
and
aad
and
push
cwtl
fimuls
stc
cmp
xchg
push
mov
movsl
loop
mov
in
mov
dec
lahf
jno
iret
iret
push
mov
push
mov
push
mov
decl
sub
into
pop
push
test
dec
jno
mov
pop
xor
push
xor
jne
stos
inc
sub
in
mov
sbb
or
movsb
dec
push
adc
push
out
das
adc
xor
xchg
mov
iret
in
daa
xchg
neg
or
daa
pop
push
ljmp
mov
in
mov
scas
xchg
mov
movsl
mov
mov
mov
or
shlb
lcall
inc
popl
adc
push
out
cmp
cmp
mov
ror
loopne
mov
imul
cli
add
pushf
in
xorb
inc
or
push
mov
xorl
pushf
ret
xchg
or
inc
sarl
sbb
andb
mov
andb
or
ljmp
cmp
mov
daa
xor
repnz
mov
into
imul
imul
pop
jge
enter
cli
fstps
lret
push
ja
iret
jl
xor
fsubp
xlat
dec
fistl
mov
stos
test
mov
mov
sbb
add
adc
push
fwait
jae
xchg
movsb
int3
cmp
pop
pusha
rep
cmp
jbe
fnstcw
mov
sbbl
rorb
push
add
sbb
and
ss
sub
std
push
enter
sahf
push
fisttpll
mov
scas
lock
test
lods
sbb
jne
out
cmpsb
xor
ficoml
xor
jb
mov
jae
ljmp
aad
out
push
inc
in
inc
aas
mov
lea
loope
aad
sbb
jge
sub
mov
mov
out
in
in
mov
mov
mov
inc
jl
addr16
int
dec
dec
inc
loopne
push
jl
clc
pop
and
sub
movsl
cmp
subb
loope
pop
and
sub
aad
mov
cmpsl
or
arpl
loopne
icebp
push
or
aad
ds
ret
sub
jmp
push
mulb
in
jmp
cld
dec
adcl
or
cmpsb
fldenv
subl
jns
adc
inc
dec
loopne
aam
push
fisubl
das
push
sub
and
test
mov
xchg
les
aad
and
jns
sub
jle
shrl
pop
fwait
xchg
clc
sbb
xchg
inc
or
pop
pop
sbb
stos
cmp
jno
jmp
enter
or
rcrb
mov
js
xchg
pushf
loopne
adc
jae
pop
cmp
sbb
or
test
in
imul
imul
rcll
or
in
outsb
or
add
into
fsin
mov
xchg
or
out
mov
dec
shlb
shlb
sub
stc
sub
push
add
out
mov
stos
inc
pop
popa
sbb
repz
dec
into
into
and
cmp
mov
cs
dec
jb
push
xchg
pushf
fnstenv
icebp
sub
xchg
insl
sarl
add
scas
lret
lcall
shll
outsb
mov
sbb
push
push
lret
divl
mov
sahf
movsb
jns
orb
pop
out
lods
sarl
jne
mov
clc
sti
iret
movups
fwait
dec
or
pop
fwait
repnz
rcrb
hlt
mov
adc
repz
adc
lret
dec
push
pop
rorb
aad
sbb
xchg
mov
inc
or
adc
aam
mov
pusha
leave
jmp
out
mov
jae
aaa
xchg
lds
inc
inc
ret
cmp
xorb
andl
mov
test
adc
nop
push
cmp
outsb
adc
cmp
xchg
out
mov
xchg
mov
test
lret
mov
lret
loopne
push
sbb
pop
dec
cmp
bound
mov
adc
lret
add
inc
mov
pop
and
and
mov
inc
mov
enter
adc
mov
mov
xor
mov
xchg
sbb
xor
xchg
pop
pop
push
mov
xor
mov
add
jmp
jns
pop
repnz
adc
ds
lret
mov
rolb
xor
stc
jg
je
and
fdivs
aam
loopne
or
pop
xorl
jmp
adc
or
sub
and
lods
divb
and
shrb
sbb
repz
or
sbb
out
mov
cli
inc
sub
and
or
cmp
repz
aaa
in
xchg
mov
sub
mov
rcrl
lret
sbb
jmp
mov
sub
xor
fwait
outsl
xchg
mov
xchg
rcl
push
imul
mov
insb
xchg
ret
out
cmp
lock
or
mov
mov
mov
inc
repz
in
shr
mov
lret
pop
mov
inc
leave
mov
shlb
inc
xchg
mov
pop
inc
out
xchg
out
aas
idivl
sbb
push
xor
inc
xchg
int
popa
in
not
and
add
fs
loopne
int
clc
ret
neg
testb
dec
pushf
push
jmp
pcmpgtb
divl
xor
in
jnp
loop
leave
add
ljmp
mov
xor
add
mov
mov
mov
mov
push
mov
xchg
aaa
sbb
inc
iret
mov
push
add
in
xchg
cmp
mov
dec
adc
fildll
in
cmc
stos
mov
push
repz
xchg
data16
pop
and
mov
icebp
or
cmp
int
push
inc
mov
adc
fisttpl
sub
data16
push
dec
cld
jo
gs
cmp
daa
xchg
loope
push
cmp
mov
sub
inc
int
xchg
loope
std
xchg
shrl
pop
sbb
push
test
jecxz
lret
popa
ja
jbe
push
xchg
es
push
fwait
mov
pop
ss
stc
movsl
or
cmp
mov
sub
sbb
mov
cs
xchg
insl
push
cmpsb
lods
addr16
jp
subb
cmc
mov
mov
loope
lcall
mov
adc
jo
push
or
repnz
xabort
int3
fisubs
cmovae
lret
in
pop
adc
mov
sbb
and
pop
clc
mov
push
or
fisubrs
inc
and
add
lret
jl
aam
push
add
ljmp
mov
pop
xor
loope
inc
push
pop
loope
sbb
imul
jns
mov
stc
sbb
out
pop
loop
and
or
je
arpl
scas
add
add
cmc
jmp
pop
sub
pop
mov
dec
lret
rclb
addr16
mov
push
mov
insb
out
je
mov
ret
push
or
mov
pop
aaa
popa
pop
pop
push
pop
xlat
and
or
mov
andl
push
pop
sahf
lea
xchg
xor
mov
mov
add
mov
hlt
xor
fldl
loope
and
lea
mov
out
cmp
push
push
test
inc
popa
movsb
mov
add
mov
lret
shlb
js
xor
je
sti
dec
push
inc
ror
xor
leave
pop
mov
aad
pop
jnp
hlt
pop
out
jnp
push
out
push
and
fildll
hlt
sub
sti
ss
sbb
ficoml
sbb
pop
cmp
rorl
std
mov
inc
add
sub
rolb
adc
adc
cmp
pop
sarl
push
imul
mov
dec
xchg
cmp
enter
testl
and
ljmp
scas
iret
out
sahf
mov
outsb
sub
sub
push
sub
mov
lahf
xlat
pushf
pushf
sub
inc
or
cmpsl
fsubrl
rclb
adc
repnz
add
push
pop
jbe
mov
ret
aaa
test
inc
adc
aaa
push
cmpsb
pop
and
lea
cli
cmpl
aad
fsubl
lods
enter
inc
mov
pop
enter
shr
and
add
loope
pop
pop
subl
dec
dec
std
loope
sub
jne
cld
cltd
xchg
mov
xlat
jmp
jecxz
jp
jns
repz
call
dec
dec
lods
xchg
popf
sbbb
pop
sahf
out
xor
and
pxor
into
stos
pop
lods
or
repnz
ja
pushf
xor
sarl
imul
loopne
je
mov
es
xchg
cmp
xlat
push
push
push
mov
add
inc
push
or
dec
shll
orb
in
cs
imul
in
inc
xchg
pop
mov
repz
jge
mov
sbb
jmp
in
mov
or
or
std
mov
xchg
mov
mov
je
pop
add
stos
mov
pop
jo
mov
cli
mov
pop
icebp
cs
push
cmp
adc
fs
call
cmpsb
fisubrs
sub
fstps
cwtl
jl
cmpb
adcb
adc
xchg
jl
sbb
stos
sub
cmpb
shrl
imul
mov
rclb
insb
or
andl
cmp
add
out
mov
xor
adc
jae
les
dec
hlt
out
stos
sahf
sbb
sti
jo
add
mov
dec
jb
cmpsl
out
push
sbb
negl
loop,pt
adc
mov
add
dec
sub
movntq
push
int
push
cmc
or
lret
mov
mov
xor
outsb
rclb
or
andl
icebp
adc
ds
pop
hlt
popa
sub
jmp
bnd
ficompl
fiaddl
lahf
sbb
imul
or
jno
sub
cmc
lea
sub
mov
call
sbb
fsubrs
cli
lea
in
inc
in
mov
data16
addr16
xor
fst
and
in
push
test
ljmp
pop
out
xchg
aaa
movsl
mov
or
mov
fwait
in
mov
dec
pop
into
adc
cmc
cld
mov
mov
dec
movsb
test
hlt
cmpsb
test
fwait
mov
pop
sub
std
mov
push
leave
sti
movsl
or
in
mov
clc
jp
pop
sub
inc
adc
gs
xchg
jns
mov
stos
mov
lds
mov
test
lds
loope
push
xor
rcrl
pop
cmpsl
pop
lds
or
popf
jp
lods
xchg
aaa
mov
mov
lods
js
fnsave
xchg
cmpb
shrl
adc
fnstenvs
inc
scas
cmp
nop
push
rcll
jp
jecxz
or
dec
push
and
out
cli
push
lcall
lods
and
inc
iret
fsubrp
loope
xchg
mov
dec
sbb
jmp
push
in
cmp
dec
imul
int3
stos
loopne
into
mov
fistl
dec
cltd
stos
pop
aam
sub
pop
push
sahf
jecxz
in
or
ficompl
data16
add
test
xchg
scas
mov
sub
orl
xor
mov
pushf
xchg
push
cmp
mov
mov
add
jb
sub
inc
lea
gs
js
xchg
shlw
sar
nop
xchg
test
insb
decb
fnsave
lock
mov
mov
sbb
mov
fcomps
lcall
cmpsb
push
jns
aad
adc
and
dec
gs
mov
push
cmp
sbb
dec
sbb
daa
xchg
mov
lods
loop
jg
arpl
into
aas
push
in
in
rcll
dec
aas
jno
and
mov
out
xchg
mulb
movsl
fbld
sub
fists
negb
push
stc
mov
jo
repz
das
and
mov
std
lods
push
and
mov
bound
jle
sub
jae
inc
cmp
sbb
into
cmp
imul
sub
add
imul
add
jnp
sub
shll
js
out
or
inc
std
lds
into
dec
imul
pop
repz
cli
sbb
cmp
sub
cltd
outsb
inc
int
jp
jne
sbb
sahf
mov
fdivrl
mov
lret
ja
xchg
xchg
icebp
mov
cs
fidivl
mov
insl
je
dec
imul
pushf
add
and
fisttpl
gs
push
jb
sbb
or
push
mov
icebp
mov
and
dec
imul
rorl
rcrl
cmp
cwtl
arpl
lods
jno
xlat
sub
enter
jns
daa
in
dec
icebp
lahf
cmp
std
dec
adc
xchg
jo
or
test
fists
and
adc
sahf
sahf
lret
js
mov
or
sbbb
ja
xchg
add
hlt
int
jmp
mov
iret
cld
lods
cmp
test
xchg
mov
enter
jb
xlat
cmp
popa
mov
and
into
cmp
outsb
or
cmpsl
sub
scas
negb
out
mov
push
and
lods
hlt
ffreep
xor
mov
cmp
jns
repz
cmp
add
lock
pop
shrl
sti
cmp
roll
in
sahf
mov
xchg
add
mov
jns
data16
mov
lahf
lcall
jo
cmp
add
aam
test
pop
gs
push
mov
insb
roll
and
xchg
adc
ds
imul
mov
cmp
and
into
mov
cmc
mov
mov
scas
call
in
iret
aad
insl
pusha
ret
or
sub
sbb
mov
cmpsl
loopne
imul
out
pop
fsubl
lock
lods
lahf
test
sbb
add
sbb
mov
je
xor
cmp
xchg
xor
fisttps
xor
cli
sbb
nop
adc
inc
xchg
imul
leave
mov
jge
cmc
fldcw
xchg
insb
or
adc
shl
adc
mov
dec
xchg
data16
int3
aaa
lods
sbb
dec
inc
pop
push
ret
shll
dec
inc
xchg
adc
push
pop
sub
leave
iret
push
int3
jno
pop
test
jo
les
cmpsl
les
mov
lea
andb
ljmp
test
adc
sub
stc
out
and
ss
int
in
xchg
mov
ret
out
sarb
imul
data16
iret
test
sub
xacquire
sbb
ja
std
and
gs
jbe
lret
sub
cs
mov
and
jae
test
inc
out
fists
nop
popa
outsb
bound
or
and
mov
mov
fs
cwtl
into
inc
icebp
movsb
jo
push
rcrl
shlb
das
sbb
into
sahf
add
or
addr16
fists
aam
add
mov
cld
out
cmpsl
in
mov
in
fxch
xchg
add
mov
jnp
pop
sti
popa
pop
xchg
mov
or
pop
sub
or
fwait
mov
pop
mov
jg
mov
xchg
jge
push
sbb
lahf
inc
dec
push
cmp
ror
inc
and
ljmp
mov
fimuls
aaa
lret
enter
push
fcmovbe
mov
jmp
repnz
xchg
imul
adc
sahf
das
xor
mov
pop
lret
jnp
and
shrl
jmp
and
mov
sarl
dec
std
sahf
mov
inc
ljmp
push
mov
sub
orb
loop
aaa
cwtl
lods
adc
mov
ret
in
and
out
push
jp
insl
out
test
add
xchg
ja
fs
jbe
or
xor
jnp
lock
movsl
adc
leave
adc
adc
es
ret
lds
fs
mov
push
in
add
jmp
fadds
enter
insl
mov
push
or
in
popa
pop
inc
add
mov
mov
add
push
lock
push
xor
pop
sub
insl
jno
leave
sbb
adc
cmc
and
sbb
mov
incl
pop
icebp
in
cmp
sbb
dec
or
mov
shrl
imul
xchg
fcom
shll
stos
pop
pop
int
roll
jge
xchg
or
in
push
xchg
xchg
test
mov
cmp
fwait
ja
jg
sbb
leave
jno
movsl
imul
cltd
ds
lea
iret
out
pusha
push
icebp
mov
mov
push
sub
sbb
fmull
jge
cwtl
push
jmp
cmp
popf
push
adc
mov
cs
stos
sbb
fists
in
int
pop
jmp
dec
jg
lds
sub
sub
imulb
xchg
sarb
sti
fwait
sub
scas
mov
push
daa
jg
es
cmpb
push
mov
cli
and
movsl
mov
gs
pop
mov
fimuls
pop
dec
sbb
fcomi
stos
mov
and
sarb
mov
jl
pop
fldl
inc
sbb
ret
rcl
cmp
jecxz
push
orb
push
into
fisubrl
mov
lods
aaa
pop
ss
sbb
incb
lahf
cmp
mov
mov
int3
xchg
mov
pop
cmpsl
out
inc
outsb
pop
mov
cmc
jp
rclb
aas
pop
cmp
inc
fs
pusha
aas
outsb
push
sub
mov
pop
sti
repnz
inc
add
mov
in
xor
adc
cmp
push
ret
sub
aad
in
loope
loopne
out
ja
call
ror
test
sbb
loop
pop
jbe
sbb
mov
sahf
sub
push
icebp
ss
sbb
add
mov
test
int
dec
jp
add
jae
add
sarb
test
mov
fistpl
inc
fisubs
test
lock
hlt
sub
mov
jmp
xchg
jae
flds
outsb
pop
fwait
or
push
jmp
int
mov
ja
sub
cmpsb
adc
pop
push
in
fisttps
fdivp
ret
jle
pushf
pop
aam
dec
hlt
mov
or
in
gs
lcall
or
cs
jbe
testl
or
scas
adc
rol
add
pop
jno
cmp
pop
into
xor
shlb
cltd
inc
push
les
mov
in
add
rclb
pushf
dec
out
xchg
xor
mov
pop
mov
fs
mov
ds
add
xorl
or
mov
aaa
pushf
or
lea
inc
out
jne
cltd
shr
or
mov
mov
sbb
ss
rolb
test
scas
jle
pop
adc
mov
jmp
loop
in
dec
add
mov
xor
dec
push
movsl
jno
addr16
jle
mov
insl
insb
repz
lods
arpl
repnz
stos
jo
icebp
fistpl
dec
jmp
jmp
xor
clc
outsb
cltd
push
bound
mov
sahf
aad
fistpl
jp
push
sbb
xchg
cli
ret
out
std
popa
inc
mov
gs
lea
mov
fisttpll
lret
push
add
movsb
cmp
inc
sub
andl
jge
popl
mov
lods
les
test
push
and
sbb
test
nop
dec
push
and
mov
mov
xchg
test
dec
jmp
push
and
loopne
pop
scas
jmp
push
ss
pushl
sbb
cmp
mov
cmp
aam
int
push
hlt
push
dec
adc
insb
mov
mov
dec
xor
sbb
mov
out
mov
ret
rol
rorl
cmp
outsb
mov
or
dec
inc
sbb
xchg
pop
push
mov
sahf
sub
daa
sbb
inc
arpl
ss
adc
xchg
cmp
mov
and
imul
adc
cmpsl
les
ja
lea
or
jns
scas
scas
fcompl
inc
pushf
pop
cmpsl
mov
leave
sbb
xor
rcl
mov
push
push
and
outsb
push
loope
sbb
repz
cld
divl
jbe
pusha
mov
orl
or
push
inc
or
sub
fs
dec
rorl
stos
dec
cltd
fs
nop
imul
or
rclb
mov
xchg
sub
pop
dec
cmpsb
enter
jo
pusha
xor
mov
rorl
in
hlt
cmp
ja
xchg
or
or
mov
icebp
mov
dec
mov
mov
nop
jle
gs
ds
nop
xor
mov
mov
xchg
or
lock
pop
mov
movsl
mov
mov
pop
dec
mov
jno
mov
repz
test
or
aas
or
jecxz
sbb
mov
sbb
rcrb
and
lds
loope
clc
loope
out
adc
xchg
ret
loopne
dec
js
mov
das
nop
fs
aam
mov
sahf
dec
popf
inc
push
sqrtps
cli
mov
mov
cmpl
stos
sbb
jb
mov
arpl
stos
jmp
movntps
add
inc
ljmp
jb
cs
sbb
sarb
cld
or
add
aam
cmc
add
aaa
mov
pop
hlt
push
fstpl
mov
insl
arpl
ror
int
jne
lods
test
cld
jmp
popa
push
sbb
scas
sbbl
sbb
in
jmp
xor
imul
mov
test
inc
adc
cmp
mov
pop
jae
insl
inc
or
inc
testl
mov
movl
sub
arpl
mov
es
jo
jmp
and
into
hlt
jo
enter
call
pop
repnz
mov
gs
jno
lret
add
imul
adc
je
mov
dec
adc
mov
fcmovnbe
inc
mov
inc
xchg
loop
xchg
dec
stc
dec
and
outsb
jne
mov
repnz
ret
xchg
or
jno
push
inc
fstl
imul
lcall
adc
jb
push
repnz
sbb
cmp
test
xor
mov
add
or
push
ficoml
and
ss
sbb
cmp
mov
imul
lret
jecxz
and
xor
out
xor
iret
lahf
repnz
jge
xlat
pushf
fs
xchg
call
push
in
mov
divl
rorl
fcmovnb
push
push
jb
aam
mov
push
jmp
sbb
mov
or
lods
pop
addb
insl
lret
jecxz
xor
adc
push
push
jmp
xor
shr
aad
mov
sti
lahf
dec
es
lock
jl
out
popa
sbbl
es
repnz
push
or
cs
jg
ficoml
outsb
jns
icebp
push
fnsave
mov
inc
push
pop
fistpll
sub
dec
jle
jl
xchg
lods
rcrb
ljmp
sti
xchg
sbb
lods
push
inc
inc
jne
ror
push
fwait
popl
dec
mov
lock
pop
cmp
ret
push
outsb
popf
sbb
xchg
out
xchg
insl
mov
fcmove
push
dec
mov
in
aam
mov
xor
movsb
jmp
add
lods
enter
mov
ja
bound
xchg
jnp
add
add
sbbb
xchg
dec
gs
push
cmp
into
pop
fdivl
mov
fstl
les
hlt
or
xchg
mov
xor
lea
mov
fwait
cmp
jns
mov
repnz
daa
sub
or
lret
mov
or
mov
test
test
data16
mov
sahf
in
insb
jge
fimuls
xchg
xor
cmp
adc
and
enter
inc
fisttpl
dec
mov
push
or
scas
sqrtps
cld
mov
stos
shll
cmp
jmp
call
cmp
outsl
imul
inc
test
mov
xor
shlb
shl
pop
jp
paddusw
cmp
stos
lcall
rcrl
roll
cmp
sbb
push
adc
mov
push
sar
xchg
outsb
dec
data16
push
xor
gs
std
mov
addr16
and
and
in
xor
cmp
mov
bound
dec
pop
jb
add
push
in
mov
inc
jns
lock
mov
hlt
movsl
pop
cmc
out
cmp
test
js
and
mov
hlt
jmp
out
cwtd
popf
jecxz
lods
scas
add
mov
fcmovbe
int
cmp
dec
cwtl
jmp
leave
sub
sti
pop
and
in
and
push
dec
fwait
stos
push
in
xchg
hlt
imul
and
stos
jg
pop
das
cmp
cmp
enter
add
cwtl
cmp
imul
push
loope
xchg
adc
jl
cwtl
fdivs
mov
fsubs
fildl
sub
sbb
repz
mov
in
or
or
lret
adc
sar
sub
movsl
ja
aas
pop
jp
cmpsl
add
lods
je
das
aaa
pop
jae
std
push
in
pop
scas
test
cli
add
jmp
mov
push
xchg
inc
xor
outsl
subb
mov
mov
in
mov
out
nop
cmc
mov
mov
jp
out
imul
popf
mov
mov
adcb
test
test
pxor
cmp
test
xchg
jbe
roll
out
gs
rcrl
xor
inc
std
enter
scas
fs
outsb
cmp
sub
outsl
andb
pop
add
dec
movzbl
push
sar
fucom
adc
or
adc
imul
nop
pop
lret
das
enter
mov
out
scas
lds
subb
cmp
gs
push
into
mov
xchg
or
call
ret
mov
mov
mov
pop
mov
mov
xor
sbb
add
xchg
stos
xchg
pop
cmpsl
sub
push
int3
jl
lea
add
sbb
mov
xchg
in
or
mov
xor
repz
jae
sbb
ss
jo
std
test
mov
mov
pop
xor
lods
jns
xor
pop
push
push
out
insl
push
jbe
icebp
adcb
rorb
imul
mov
mov
mov
pop
xchg
lods
fnstsw
out
aaa
cmp
jecxz
fisubl
leave
into
test
or
mov
adc
cmp
repnz
jg
inc
xor
xchg
and
xor
xlat
add
pop
cmp
jp
test
xchg
popl
call
jbe
movsb
mov
leave
add
mov
xchg
jp
shl
jmp
mov
test
cmpsl
insl
insl
xor
sbbl
push
adc
xchg
cmp
xor
js
into
rorl
cltd
fstl
jb
push
xchg
iret
xchg
cmp
and
es
and
xor
pop
loope
aas
mov
fucom
cmpsb
xchg
pop
imul
ja
jnp
aad
mov
jge
dec
pop
pop
cmp
adc
push
mov
jnp
int
fdiv
xchg
mov
leave
xor
test
adc
in
push
dec
dec
outsb
xor
sub
add
loope
mov
pop
lds
lock
aam
sub
push
cmpsb
dec
lahf
jl
rclb
test
ret
ss
or
stc
scas
movsb
and
mov
push
pop
sahf
push
mov
stc
mov
fsub
mov
subl
or
mov
fsubrp
xor
negl
movsl
xor
push
ja
or
push
xor
stc
dec
adc
cmpsl
mov
fiadds
sbb
xor
mov
xor
push
jb
shlb
mul
sbb
adc
pop
mov
add
xchg
fsubrl
inc
addl
mov
cmpb
mov
hlt
mov
dec
sbb
jb
pop
dec
jl
add
in
sti
inc
jmp
cmp
into
and
cmp
ljmp
pop
inc
sti
ds
popf
mov
test
rolb
add
and
in
xor
jmp
jl
xchg
das
jnp
jns
cmp
pop
push
adc
sbb
int3
jbe
movsb
repz
inc
jnp
xchg
ds
jle
in
shll
out
and
popf
popf
push
pop
popf
nop
test
jge
lret
xchg
rcll
dec
sub
mov
hlt
push
lods
adc
mov
dec
cltd
mov
in
aas
pop
sbb
rclb
cmp
in
je
push
xchg
bnd
addl
add
pop
incb
icebp
xchg
mov
loop
incl
cmp
pop
in
or
mov
lods
repnz
je
cli
hlt
gs
and
rorl
repz
shr
iret
fincstp
cwtl
push
push
sti
xor
inc
dec
cli
lcall
aam
js
xchg
hlt
jp
jl
pusha
cmpsl
ficompl
data16
inc
pop
xor
fimull
add
and
sbb
js
and
jle
jle
shl
and
fisubrl
push
pop
push
daa
shrl
jnp
jne
push
std
iret
cld
push
aam
xor
in
sbb
sub
outsb
cmpsl
mov
imul
test
xchg
int3
add
jge
ret
adc
out
in
inc
data16
jno
cld
mov
xchg
bnd
jmp
daa
or
rcrl
ja
sti
int
setg
sbb
inc
lahf
out
leave
cmp
clc
xlat
pushf
lret
out
pop
dec
mov
cltd
lret
out
or
packsswb
mov
in
cmpsl
loope
jne
fcompl
push
popa
lahf
push
xor
mov
inc
aam
aam
adc
pop
repz
and
adc
jnp
add
sar
repnz
lahf
clc
xor
sbb
sub
bound
sbb
and
mov
imul
aam
add
fs
subb
push
cwtl
popl
or
in
je
test
in
and
and
testb
fst
das
adc
lds
cmpsl
xor
mov
push
pusha
sbb
or
push
xchg
fucomip
xor
inc
cmpsb
mov
pop
in
jl
xchg
sbb
pop
inc
sub
cwtl
mov
xchg
subl
jae
ret
dec
sbb
rcrb
movsb
mov
dec
cmp
aam
and
sti
test
aad
jle
mov
fistpll
fwait
int
int
push
das
lret
mov
scas
js
shr
mov
inc
jb
cld
mulb
insl
popa
cmpsl
imull
sub
imul
push
and
subb
out
xchg
cli
test
cmpsl
loope
dec
xchg
rcll
das
add
repz
jmp
cli
push
fmuls
in
add
in
lods
iret
lret
pop
insl
inc
xor
push
xor
aad
push
popa
sti
jno
jb
sub
fstpt
pop
rol
jnp
sti
mov
and
inc
mov
insl
je
cvttps2pi
lods
inc
in
mov
adcl
pop
testl
loop
and
repz
cmp
pop
jg,pt
sbb
push
fdivl
mov
and
rorb
jle
movsl
mov
cmp
mov
pop
daa
sub
das
pop
fwait
sub
out
or
bound
dec
orb
cs
mov
in
inc
in
adc
xchg
mov
mov
mov
mov
fisttpll
jae
in
sbbb
rorb
cld
andl
test
mov
lahf
movsb
cli
loopne
aaa
inc
and
cli
stos
int3
ret
int3
sbb
adc
jnp
or
dec
push
cwtl
or
test
and
add
in
or
pop
int
rolb
jmp
sub
add
mov
mov
inc
add
mov
ja
cmp
in
xchg
and
insb
mov
sbb
ds
pop
outsb
sub
cmpsb
push
dec
pop
test
divb
adc
dec
mov
xor
dec
mov
and
loope
fwait
leave
cmpsl
arpl
push
lcall
imul
lods
mov
fsubs
mov
dec
mov
pop
je
lahf
adc
lods
arpl
fildll
push
dec
test
stos
jne
call
push
sbb
sarb
mov
fdivs
out
mov
outsb
lahf
enter
mov
push
cmpsb
repz
jge
mov
loopne
push
mov
inc
data16
pop
sbb
add
dec
jo
nop
test
js
push
iret
mov
xchg
popf
hlt
test
ret
shr
cmp
adc
push
adc
add
ljmp
inc
jp
jmp
shlb
sub
ret
pop
movsb
sbb
xchg
cmp
nop
cld
mov
inc
sti
mov
dec
bound
test
cmp
and
jne
adc
pop
out
mov
les
sbb
in
mov
in
mov
pop
lock
sbb
mov
xlat
xchg
iret
or
ljmp
fidivrs
cli
outsl
xlat
push
movsl
xchg
push
ficomps
les
bound
cmp
jae
add
dec
sub
push
xor
mov
int
mov
add
fsubl
cs
mov
mov
stos
or
sahf
ret
pop
and
stc
add
sub
sub
add
insl
pop
sar
or
pop
out
xchg
pop
addr16
subb
in
add
loope
pusha
mov
inc
jle
inc
lret
mov
std
jbe
out
out
and
in
lret
jecxz
pop
stos
sbb
xor
sub
andb
test
xchg
cmc
sarb
rclb
les
and
fs
insl
add
orl
lahf
movsl
add
in
aad
jle,pn
scas
mov
xchg
and
mov
dec
and
xor
xchg
loopne
in
iret
shl
scas
adc
rorl
or
icebp
xchg
mov
and
xchg
mov
or
arpl
jne
and
pop
stc
cmp
sbb
aaa
insl
mov
jne
fistl
iret
rolb
pop
sbb
bound
mov
xor
mov
int3
call
mov
je
mov
push
push
cld
sbb
dec
test
add
je
pop
dec
mov
adc
and
cmpsb
mov
mov
push
pop
ljmp
add
outsl
dec
pop
push
sbb
inc
insb
cmp
pop
outsl
xor
or
ss
ja
lret
movsl
bound
jnp
jnp
out
lds
pop
mov
ja
int
add
fnsave
mov
mov
jno
xor
scas
cmpl
lds
es
and
adc
test
into
sti
inc
lcall
pop
xor
jnp
xor
aam
fwait
pop
aad
adc
call
mov
lock
ds
xchg
sub
mov
push
fisubrl
mov
ficoms
call
sbb
aas
cld
into
or
mov
leave
sarl
add
popf
dec
push
dec
dec
sbb
pop
xor
sti
jae
shrb
enter
push
mov
cmp
adc
push
mov
scas
inc
loope
divb
pop
mov
dec
mov
mov
inc
and
push
push
roll
adc
pop
push
vphaddubq
mov
xchg
cmpsl
pop
bound
xor
mov
outsb
mov
xchg
pop
jmp
adc
jnp
call
add
inc
mov
cwtl
movsl
lahf
aam
test
inc
cmpsb
pop
xor
xlat
mov
add
pop
cwtl
or
stos
dec
push
mov
mov
xor
pop
and
js
or
outsb
cmp
dec
xor
rcl
pushl
fwait
fwait
cmp
fistps
or
inc
mov
out
pop
mov
or
std
lret
ja
jne
je
sti
and
imul
jp
add
test
mov
fsubrl
dec
inc
cmp
jb
jg
or
aaa
dec
pop
cmp
inc
xchg
sub
test
or
lods
aam
lea
inc
orl
in
cmp
loope
fistl
pop
in
xor
dec
jp
mov
ret
push
fwait
cli
aaa
mov
pop
not
sub
xchg
pop
add
sbb
mov
mov
int3
mov
jge
fnstenv
or
mov
rorl
jb
pusha
mov
arpl
sub
dec
bound
or
push
nop
dec
es
sub
test
xor
lea
cmp
imul
xchg
adc
jmp
cmp
insl
fbstp
push
push
xchg
sbb
hlt
loope
jecxz
test
and
bound
pop
fwait
mov
fdivr
or
mov
out
lret
ja
mov
add
adc
cmp
mov
fisttpll
mov
inc
cmp
mov
or
arpl
cmp
rorl
shrl
imul
jge
mov
mov
dec
lcall
lret
dec
mov
pop
mov
adc
mov
jmp
scas
add
ljmp
movsb
push
sbb
popa
out
stos
ds
cs
xor
jle
jne
jno
inc
adc
mov
mov
jae
cmp
xor
loop
push
sbb
xor
push
pushf
or
push
add
pop
mov
pop
sbb
xor
push
outsb
pop
arpl
out
out
add
xchg
shrb
rcrl
movsl
mov
in
shlb
xor
jnp
add
push
imul
pop
repnz
fstl
sub
rorl
pushf
movsb
mov
sbb
inc
mov
ds
sti
clc
jns
ja
lret
mov
mov
xlat
inc
adc
out
mov
je
or
outsl
dec
jg
mov
enter
sahf
stos
inc
cli
and
xor
jmp
mov
int3
bound
rcr
pop
mov
std
rorb
outsl
out
xlat
add
lea
dec
jge
pop
mov
sub
ret
adc
loope
inc
inc
mov
sub
pop
mov
or
adcl
je
hlt
scas
add
cmp
pop
out
cmp
jge
dec
int
outsl
clc
xor
xchg
in
lret
or
loopne
adc
add
cmpsl
and
in
movsb
inc
mov
das
lods
imul
xchg
sar
pop
daa
daa
ficoms
mov
imul
dec
cmp
xor
leave
pop
jge
push
add
xor
aam
xor
loope
mov
int3
inc
xlat
lcall
pop
dec
xchg
out
mov
pop
mov
and
and
bound
cmp
inc
cmp
sub
push
mov
aaa
in
and
jb
mov
jne
dec
mov
inc
pop
filds
imul
mov
test
jmp
out
sbb
xor
adc
inc
or
mov
cmp
add
arpl
adc
xor
outsl
xor
mov
gs
mov
push
das
ja
pushf
lret
pop
dec
push
or
xorl
pop
lods
out
push
pop
mov
cli
cmc
mov
das
sbb
jns
add
sbb
or
aaa
jp
xor
xchg
test
test
cld
cmp
gs
jle
sbb
xchg
or
cli
fsubrp
stos
mov
scas
inc
cli
push
aaa
xor
push
sarb
stos
je
mov
pop
or
dec
push
into
push
dec
xchg
mov
sub
mov
jb
inc
mov
ja
jb
xchg
inc
jle
push
xchg
aas
inc
cmp
fsubrs
cmp
add
insl
and
mov
test
sub
sub
jge
jle
ds
aas
insb
adc
mov
or
jl
rorb
and
mov
ljmp
popf
addr16
jmp
push
inc
adc
leavew
cmpsb
cmp
icebp
lret
std
shll
and
gs
mov
pop
add
nop
mov
enter
push
mov
aad
inc
dec
mov
dec
jg
fistpll
jno
sub
xchg
push
roll
cmp
and
repnz
sahf
push
xchg
push
nop
cmp
gs
rcrb
jmp
sub
lea
pop
add
push
or
cs
mov
sbb
pop
push
scas
or
lret
pop
xchg
push
inc
out
pusha
dec
jae
icebp
pop
cmp
clc
cmp
loop
shrb
dec
pop
out
xchg
insb
sbb
lcall
popa
adc
ret
xor
xchg
incl
dec
sbbw
std
mov
pop
ficomps
push
js
sarb
test
insl
adc
fmuls
dec
rorb
jecxz
test
mov
xor
mov
notb
out
shl
mov
push
or
mov
ret
mov
inc
mov
pusha
imul
out
xchg
mov
xchg
out
mov
dec
int
cmp
in
sbb
sbb
cli
popa
sbb
inc
ret
mov
mov
jns
cmp
inc
dec
imul
movsb
sub
lods
push
mov
loope
repz
jnp
cmp
test
adc
lea
or
in
insl
or
adc
imul
mov
movsl
cmc
mov
fstl
subl
xchg
jmp
adc
or
rclb
sarb
shll
insl
sub
inc
inc
inc
push
mov
dec
scas
mov
sti
movsb
incl
cmp
sub
popf
mov
scas
push
int3
cmp
xor
into
xor
jg
and
cwtl
xchg
rcl
and
in
mov
xchg
or
movsl
inc
scas
nop
repnz
push
or
xlat
adc
mov
movsl
arpl
pop
mov
jp
imul
jle
shlb
mov
push
lods
test
xor
adc
cmpsb
xchg
test
lret
outsl
mov
iret
sub
and
push
fnstcw
cs
push
fisubs
jp
jno
and
cmpsl
and
popf
stc
inc
into
sbb
pop
xor
or
and
in
fdivrl
out
mov
push
push
or
scas
popf
jne
sub
imul
sub
aas
aas
adc
insb
xor
pushf
movsb
push
xchg
jmp
cld
fisubl
and
imul
xor
dec
push
icebp
xchg
vpaddw
jo
mov
or
scas
mov
test
inc
loop
data16
cmp
mov
jmp
imul
repz
shr
sarl
insb
sub
pop
in
xor
and
cmp
jno
xlat
xchg
sbb
fs
push
push
mov
fdivl
pop
cli
xchg
cwtl
xchg
or
jnp
bound
add
fstpt
push
push
fwait
loope
ja
or
jns
inc
insl
inc
add
lret
nop
fistpll
pop
jl
mov
enter
lret
addr16
pushf
enter
cmp
js
lds
add
bound
negb
test
adc
and
xchg
pushf
push
add
push
pop
stos
or
pop
aas
inc
xlat
inc
or
cwtl
cwtl
pop
mov
mov
mov
fisttps
fisubrs
or
das
int3
push
pushf
shl
xchg
loopne
xrelease
mov
dec
bound
subl
ficoml
aad
adc
push
es
sbbl
push
xor
je
cmpsl
or
mov
push
adc
sub
xchg
call
les
sbb
push
roll
or
lcall
lret
mov
loop
shll
cmp
jns
cmp
jae
xchg
popl
stos
fcomip
out
out
cmp
inc
aam
rorb
mov
mov
jb
push
loopne
dec
jne
test
pop
sbb
xlat
mov
lahf
xchg
or
cmp
xchg
in
decl
jle
pop
add
popf
or
or
mov
out
cmc
dec
scas
dec
fistl
mov
fdivp
mov
jno,pt
add
cmp
ret
cs
sub
jns
jb
into
cltd
mov
out
aaa
lods
cmpsb
mov
mov
push
adc
sub
xchg
dec
cmp
insl
cwtl
repz
out
jge
or
inc
int3
push
cld
cmp
repz
mov
movsl
jns
xlat
xchg
stos
adc
or
sbb
mov
jmp
aas
iret
pop
lret
xor
ja
lahf
xchg
dec
loopne
or
test
out
lods
xor
jecxz
xor
push
pop
cmp
xor
addr16
shlb
orl
dec
mov
mov
cs
subl
loopne
or
push
loope
xor
mov
imul
jbe
pop
lret
adc
fwait
shlb
push
iret
imul
mov
pop
jae
inc
aaa
mov
aad
xchg
cmp
cmc
test
test
jbe
rolb
xchg
testl
sbb
out
sub
mov
push
adc
jae
aas
add
push
sbb
cmp
cwtl
mov
sub
and
mov
fidivrs
js
pop
cmpsl
movsl
or
mov
cmp
sub
and
js
lret
mov
pop
push
test
scas
dec
push
cmp
ljmp
ret
pop
popf
xor
bound
mov
inc
push
and
adc
mov
imulb
or
popa
and
xor
aas
lds
setae
xor
xchg
iret
jecxz
movsb
inc
test
and
jbe
jp
das
cld
push
ret
or
pop
stc
shl
cmp
cwtl
mov
pop
inc
mov
adc
jae
outsb
pop
push
arpl
mov
fnstsw
lret
sti
mov
inc
push
shrl
push
scas
mov
sub
insl
rolb
push
bound
mov
in
rolb
inc
push
jp
or
pop
adc
dec
xor
pop
pop
sti
xor
sub
rorb
adc
andb
push
movsb
mov
test
jnp
aaa
sub
sbb
std
sbb
call
ret
dec
test
mov
mulb
mov
insb
inc
roll
cwtl
adc
sub
jmp
sahf
andl
jmp
stc
imul
ljmp
and
xchg
jl
repnz
pop
out
in
jmp
inc
mov
sub
out
iret
jo
xorl
lss
jmp
in
std
test
ja
stos
or
out
inc
mov
or
cltd
mov
hlt
xchg
sarl
incl
inc
test
fwait
cmpsl
xchg
xchg
leave
jecxz
or
orb
popf
ficoms
mov
incl
imul
mov
mov
lret
cli
push
cmp
dec
jae
mov
insb
fsts
xor
scas
push
sbb
mov
rorb
dec
popa
int
lret
insb
and
dec
cmp
ljmp
rcrb
lret
pop
popf
dec
xchg
fdivrl
repz
push
loope
add
lahf
js
loopne
notb
into
cmp
mov
inc
mov
scas
or
sbb
pop
std
jo
std
and
mov
add
jge
aam
iret
test
ret
sub
sbb
adc
jo
or
jno
mov
aad
dec
sub
mov
push
lea
fstl
loope
hlt
push
jle
mov
mov
mov
lcall
dec
mov
clc
aad
cmp
lods
pop
mov
mov
jno
in
fcmove
test
clc
mov
lret
fistpll
xor
xacquire
adc
std
cmp
les
idiv
push
movsb
test
xlat
jne
hlt
imul
push
xchg
jbe
fmul
cmc
jg
outsl
in
popa
xchg
xchg
lods
ffree
dec
mov
adc
push
jge
inc
mov
or
fldcw
push
xor
and
in
data16
xchg
dec
mov
jle
lret
ss
loopne
mov
cmp
jl
stos
push
or
pop
rolb
sti
sbb
xchg
mov
jl
pop
inc
lcall
pop
jmp
jb
jg
test
fsubrs
std
test
inc
inc
cmpl
lahf
in
ffree
or
jns
jl
test
adc
imul
fstpl
push
inc
repz
icebp
cmpsl
shll
add
pop
je
mov
mov
xchg
pop
movsl
mov
adc
adc
mov
xor
lock
xor
mov
dec
sbb
jo
sub
push
and
cwtl
insb
adc
xor
bound
outsl
dec
loop
xlat
and
nop
clc
jg
int
mov
lea
aaa
jecxz
pop
push
pop
cmp
mov
mov
adc
aam
scas
cmp
jmp
cmp
sub
cmp
sar
cmpsl
adc
sbb
xchg
mov
lea
lahf
cmp
add
push
mov
dec
sbb
aaa
cmp
aam
cs
out
shll
iret
or
fsubr
cli
fisubrs
aaa
cli
inc
adc
add
push
push
xor
das
jl
jb
sahf
push
or
mov
jnp
mov
mov
add
mov
pop
dec
jmp
test
mov
aas
repnz
lods
lea
ficoms
scas
jae
dec
aam
sti
mov
test
push
pop
mov
sub
loope
and
pop
adc
mov
xor
in
out
fisttpll
mov
test
cli
adc
fists
push
inc
dec
dec
bound
xchg
test
in
andb
mov
dec
loope
mov
pop
cmp
mov
cli
bound
loope
jnp
mov
mov
mov
imul
out
xchg
mov
cmp
test
push
sub
adc
stc
inc
mov
push
mov
icebp
or
jbe
stos
fimuls
jmp
xchg
aaa
aas
mov
out
lds
mov
js
into
ljmp
inc
js
cmpsl
jge
fiadds
lea
fadds
test
push
pop
jle
shl
in
xchg
adc
add
popa
repnz
xor
movlps
icebp
mov
adc
mov
and
popf
adc
pop
xchg
xchg
dec
mov
dec
sahf
pusha
dec
xor
cmp
add
out
sub
xor
adc
fcmovne
xor
int3
xor
repnz
fists
cmpsb
jnp
je
icebp
mov
sub
scas
jae
aam
mov
mov
fnsave
sub
repz
jo
push
addr16
and
pop
int
sub
and
adc
repz
test
repz
lcall
rcrl
cmp
fisubrs
push
out
mov
push
xor
push
lret
or
mov
push
lea
or
outsl
repnz
push
pop
inc
movsl
movsl
ja
pop
imul
jmp
add
push
aam
push
xor
or
jns
popa
mov
fwait
aaa
sub
int3
pop
test
jne
call
push
jne
push
cmp
fcompl
ss
mov
xchg
cli
push
add
addl
faddl
push
lret
jg
out
nop
ss
movsb
cmp
mov
idiv
pop
bound
adcl
lret
push
xchg
sub
or
cmp
inc
inc
ds
loop
dec
int
cmpsl
inc
sub
pop
cmc
inc
sub
mov
jae
loope
incb
std
lret
mov
push
push
lret
into
fstl
inc
lods
cmp
pop
notb
mov
add
pop
js
or
lds
stos
addr16
or
xchg
outsb
mov
dec
rcr
outsb
repnz
or
push
mov
pop
jb
bnd
xchg
mov
sbb
inc
sbb
sbb
pushf
pusha
mov
or
cmpsb
push
les
in
add
inc
add
shrl
pop
adc
mov
and
xchg
into
pop
xchg
mov
dec
cmp
mov
sbb
push
dec
jle
sbb
das
aas
push
pop
int
addb
add
jo
mov
not
inc
outsl
push
adc
xchg
dec
mov
icebp
xor
and
call
imul
in
imul
push
xor
test
clc
mov
sub
int
ss
adc
das
loop
test
sti
adc
jle
jbe
cwtl
dec
in
out
test
sub
jne
push
or
idivl
mov
push
xchg
jg
add
sti
mov
sub
mov
sub
insl
orl
mov
jns
pop
dec
cwtl
movswl
aas
fstl
pushf
mov
sub
pop
xchg
dec
sbb
movsl
lods
pop
imul
adc
in
ljmp
lret
cld
mov
dec
int3
in
mov
mov
jno
inc
xlat
dec
xor
lods
sub
call
mov
inc
push
stos
sbb
in
aam
add
ret
stc
inc
ret
mov
and
xor
in
aas
sbb
mov
xchg
adc
xor
leave
inc
stos
ds
or
ljmp
popf
mov
inc
shll
jmp
inc
xchg
in
decl
dec
mov
stos
jge
out
sub
lea
sahf
test
jmp
ljmp
cltd
in
adc
pop
jns
mov
mov
mov
xchg
cli
mov
sahf
xchg
and
ds
popf
sbb
sub
lods
mov
imul
leave
pop
test
orb
scas
aam
lods
push
std
push
je
add
pop
stos
cmp
aaa
test
nop
rol
lret
repz
psrld
push
jbe
scas
push
movsl
xchg
mov
ret
mov
mov
push
lret
scas
int3
test
fmul
into
add
icebp
lods
xor
push
inc
cmp
loopne
pop
ja
les
cmpsl
movsb
pushf
xchg
or
sti
cmp
dec
lock
sbb
les
lcall
push
ja
mov
sbb
sbb
fs
mov
in
aam
jecxz
cmp
sbb
filds
cmp
pusha
push
inc
repnz
sbb
adc
mov
sub
sar
pop
mov
test
jns
outsl
inc
in
push
sarl
imull
fcoms
add
sbb
or
mov
or
lcall
pop
inc
out
data16
cmpsb
jo
sbb
inc
lret
sbb
ret
pop
aam
loopne
fildll
cli
mov
lea
call
out
fwait
push
jo
leave
icebp
jge
jno
xchg
imull
add
es
jge
dec
arpl
repnz
jnp
push
fucomi
ret
fs
icebp
mov
repnz
stc
movsl
mull
into
pop
mov
add
cmp
data16
call
xchg
cmpb
pop
push
dec
into
and
nop
mov
leave
in
aad
push
aam
fst
rcrl
xchg
mov
das
ds
dec
xchg
mov
insb
pop
or
lods
add
mov
adc
inc
mov
sbb
cmpb
icebp
and
sbb
or
xchg
mov
imul
or
dec
or
add
mov
cmp
inc
lret
nop
xchg
cltd
stos
mov
pop
pop
xorb
mov
mov
mov
aam
dec
mov
ja
fs
xor
sahf
jmp
adc
cmp
lds
lahf
fcoms
pop
das
cmp
inc
sub
jge
xchg
insl
movsb
push
lcall
cld
add
dec
leave
pusha
inc
sbb
mov
out
lret
add
and
and
pushf
mov
ror
dec
or
mov
pop
lds
enter
sub
popa
pop
mov
pop
mov
movsl
sbb
je
dec
movsb
jno
into
xchg
or
leave
pop
mov
es
cmp
fcompl
in
add
push
or
bound
xchg
test
daa
jge
and
push
pop
and
cmp
ret
stos
inc
in
rorb
sub
push
or
sbb
xchg
push
call
test
cltd
sbb
shrb
sbb
test
les
adc
mov
add
fdivrs
jge
and
jle
pop
or
add
push
cli
pushf
pop
dec
je
push
daa
das
dec
push
dec
je
loop
add
es
aas
in
in
adc
cmp
nop
pop
cmp
sbb
aam
pop
leave
mov
es
dec
add
mov
lcall
add
in
mov
xor
jbe
arpl
fsub
fs
xchg
pop
das
fwait
cmp
ret
push
adc
push
out
add
pusha
jno
mov
dec
cmc
jbe
inc
adc
sub
or
int
mov
lret
lods
sti
mov
sbb
sub
pop
pop
fsts
sbb
nop
mov
or
mov
push
dec
mov
xor
subl
insl
inc
and
and
shrl
imul
insl
pusha
lock
push
in
insl
mov
jecxz
lret
lahf
adcl
jle
mov
rolb
bound
inc
or
lahf
cld
adc
sub
jecxz
pushf
sbb
add
ja
repz
sub
mov
and
popf
call
xor
xchg
fimull
sub
mov
inc
pop
pop
mov
ljmp
jo
xor
jne
pop
hlt
adc
mov
ljmp
int3
mov
movl
and
cmc
stc
xor
daa
adcl
or
lret
mov
int
jno
and
mov
clc
dec
sbb
mov
int3
and
mov
enter
xchg
roll
xchg
xor
lahf
shlb
sbb
bound
jb
dec
xor
sub
outsl
ror
fmulp
adc
popa
stos
addr16
int3
mov
sbb
inc
pop
jbe
lahf
lods
out
cli
mov
leave
sub
into
mov
sahf
dec
icebp
aad
push
push
mov
jecxz
lds
jge
push
cmp
mov
mov
mov
ror
jae
pop
add
sub
add
iret
add
push
ss
add
popa
lods
fiadds
push
pop
jle
shrl
ret
andb
jmp
cltd
sub
xchg
pop
pushf
out
inc
out
pop
jo
inc
inc
test
push
aad
sbb
pop
out
inc
cld
jle
xor
and
sbb
sbb
mov
push
popf
pop
loop
outsl
xchg
movsl
cwtl
sub
std
mov
jmp
fisubs
mov
xchg
xchg
sub
dec
les
insb
in
dec
jne
jae
fsub
lahf
rep
lock
leave
out
fnstenv
mov
add
test
in
mov
pop
shll
sbb
mov
shl
in
lds
pop
fmull
dec
ret
push
shrl
lret
jb
jns
lods
cli
xor
adc
mov
outsb
cmp
fucomip
and
movsb
fs
jl
pop
inc
pushf
jle
push
outsb
call
adc
out
pop
sahf
jmp
movsl
hlt
lcall
mov
mov
js
loop
cmp
xor
sarl
in
gs
addb
jmp
loope
jne
jmp
sub
je
lea
dec
jnp
push
gs
outsl
daa
fiaddl
imul
in
in
push
sbb
filds
aas
sub
mov
pushf
fucomip
andb
in
push
mov
arpl
inc
push
das
xor
jge
les
lcall
pop
aaa
insb
in
lret
enter
jle
add
stc
mov
out
jno
push
mov
jmp
icebp
daa
call
push
cmp
mov
xorb
push
add
fistps
ljmp
enter
and
cmpb
adc
or
push
insl
xchg
or
clc
int
fs
xchg
jle
mov
icebp
cmp
inc
pushf
sbb
enter
data16
adc
push
add
jb
mov
sbb
mov
xchg
jno
xchg
lds
sbb
in
dec
jo
or
add
inc
aam
dec
in
sbb
jno
fwait
mov
imul
sub
sarb
rorl
aad
add
incb
rolb
cmp
dec
aad
mov
je
aaa
in
inc
xor
rcrl
inc
stos
pop
out
sahf
inc
pop
cmp
mov
add
pop
je
addb
out
sub
les
in
jge
xchg
cltd
xchg
ds
xor
mov
jecxz
mov
jmp
fildl
mov
stos
push
sbb
in
aas
sbb
addr16
sbb
fucomp
xcrypt-ecb
cmpsl
leave
mov
aad
lods
inc
ljmp
iret
stc
loopne
fsubp
faddl
stos
dec
shl
mov
loopne
movsl
push
jecxz
test
mov
adc
add
pop
push
sbb
mov
arpl
test
dec
jmp
inc
mov
das
stos
lahf
into
ljmp
mov
push
aaa
dec
arpl
lods
sarb
mov
loope
sarb
cmpsl
add
and
jb
sbb
lock
stc
fwait
lcall
pushf
or
aas
pusha
leave
or
push
adc
sub
push
fnsave
negb
shrb
je
xlat
icebp
jmp
mov
lods
enter
dec
xchg
inc
outsl
pop
fwait
xor
dec
out
jp
orl
jno
and
mov
ret
cmpsb
test
dec
test
cmp
xor
inc
out
or
add
int3
mov
clc
test
rcl
jl
xchg
mov
dec
int
pavgw
adc
sbb
pop
add
test
jg
cmp
cmp
fcomp
sbb
sub
lret
jecxz
test
push
inc
out
std
stos
jp
or
jp
int3
xchg
ja
mov
ror
insl
popa
fwait
pop
add
arpl
cmc
xchg
imul
mov
imul
jns
inc
rolb
push
push
mov
pop
jne
jle
or
and
gs
cltd
xchg
jb
pop
and
out
pusha
mov
xor
aas
jecxz
push
push
mov
xlat
and
rcr
enter
mov
mov
fldt
mov
addr16
push
mov
icebp
outsl
jp
cmpsl
faddl
filds
xchg
stos
fwait
cmp
aam
or
sbb
fcompl
fsubrs
test
arpl
xchg
lret
pusha
push
sbb
cwtl
das
gs
sub
adc
inc
sar
fldl
adc
adc
test
sub
idivl
mov
daa
ljmp
ss
push
cmp
xor
xchg
pop
adc
movsbl
out
aaa
dec
mov
out
lret
pop
inc
arpl
mov
mov
mov
pop
mov
lret
ret
iret
add
push
scas
outsl
push
jecxz
jle
sbb
std
mov
xchg
xor
add
testb
adc
rep
mov
cmpsl
aam
sub
mov
das
inc
pop
in
ret
les
or
push
fcoml
sbb
pop
cli
fiadds
lods
mov
cmp
pop
cmc
xor
out
jmp
cmp
xchg
mov
and
aaa
mov
jne
test
push
mov
push
or
js
inc
out
push
jge
add
test
or
dec
rcll
sahf
jp
sub
call
shr
add
adcb
push
cmp
je
dec
fistpl
and
cmc
outsl
loope
movsb
pop
js
test
xchg
xor
pop
inc
loopne
fsubrs
sub
loopne
sub
and
sub
loop
adc
rolb
js
cmp
cmp
cmp
lahf
inc
mov
leave
icebp
sub
int3
jl
push
xor
sub
jne
fiadds
aam
je
add
pop
pop
outsl
addr16
cmc
sahf
xor
mov
negl
out
sub
out
add
je
sbb
cmp
push
adcl
mov
mov
jbe
pop
adcl
and
cmc
je
clc
xchg
jle
cmp
ficoms
and
mov
nop
mov
jg
pop
out
dec
mov
scas
sbb
fldl
gs
icebp
loopne
mov
lods
enter
mov
adc
pop
push
add
cli
push
out
mov
cmp
cmp
or
add
pop
les
test
mov
mov
xor
push
sub
cmp
pop
fildll
pop
stos
lock
jg
outsb
cltd
pop
mov
dec
push
jae
in
mov
mov
outsl
in
cmp
pop
loope
lods
cmp
or
mov
gs
sub
loope
xor
mov
push
incb
es
mov
sbb
leave
mov
repnz
xchg
addr16
outsb
or
or
sbb
mov
stc
xor
sbb
push
cli
imul
and
test
pop
inc
jnp
cmpsb
push
cvtps2pi
iret
cmp
stos
iret
fistl
mov
inc
or
lcall
addl
inc
push
int
loop
dec
xchg
cmpsl
inc
inc
cltd
sbb
das
jmp
out
repz
scas
jg
rolb
cmp
fstl
jb
sub
inc
sti
int
icebp
loop
fwait
xor
orb
xor
shll
cmpsb
mov
and
pop
cltd
gs
fcomps
loopne
movsl
shr
std
jne
sbb
pop
jae
test
insl
int3
out
ds
rcrl
adc
std
jmp
cmc
sub
mov
or
cmp
pop
xchg
bound
mov
cwtl
pop
movsl
add
adc
push
cmc
and
inc
test
repz
cmpsl
dec
ss
flds
test
pop
fwait
orl
cli
cmpl
insl
pop
into
imul
mov
mov
mov
jecxz
das
lods
sahf
clc
dec
cmp
mov
add
sahf
fldcw
call
jmp
xchg
and
pop
test
xor
push
mov
mov
adc
mov
jo
mov
sub
pop
jecxz
es
dec
add
add
push
adc
or
mov
nop
add
js
pusha
jb
adc
pushf
push
cmc
lods
cld
pop
repnz
push
sub
jbe
lcall
loop
add
out
xor
je
mov
mov
lcall
stc
hlt
mov
fcomip
in
dec
push
push
inc
int
outsl
outsl
scas
jns
in
in
cmp
inc
jnp,pt
aaa
pop
dec
stc
mov
xor
lods
sub
fwait
xlat
inc
fstpl
rclb
jle
pop
fadds
iret
dec
jl
push
mov
mov
and
addr16
scas
xor
ficompl
popa
lods
lock
mov
mov
inc
mov
fcompl
xor
push
and
pop
mov
ds
frstor
mov
jmp
and
ss
bound
jae
sbb
stos
shll
mov
lret
leave
popa
xchg
sub
daa
sbb
mov
subl
jno
test
jl
pop
loopne
or
nop
scas
test
xchg
jno
xor
shrw
imul
enter
add
mov
out
mov
in
iret
or
iret
popa
mov
jo
jge
adc
push
ret
pop
rcll
mov
push
les
data16
hlt
inc
pop
movb
das
add
push
inc
nop
push
and
jp
xchg
movups
repnz
inc
call
inc
mov
bound
ret
mov
in
and
mov
cmp
pop
leave
push
in
add
dec
int3
repz
insb
outsl
mov
enter
adc
daa
leave
dec
pushf
jbe
into
lret
cmc
push
xor
dec
mov
aad
mov
repz
mov
jecxz
inc
fs
pop
test
cmp
sub
inc
push
mov
push
int
sbb
dec
or
test
or
push
jae
test
lock
popf
mov
dec
xor
mov
cwtl
sbb
inc
hlt
loope
negl
xchg
push
xchg
shll
inc
dec
andl
mov
movsl
adc
jne
stc
scas
jbe,pn
add
jecxz
arpl
sub
jmp
push
cmc
or
int
jmp
pop
xchg
stos
popa
add
adc
push
xchg
mov
mov
or
rol
movsb
or
movsb
jo
and
xchg
jmp
mov
xor
fadds
push
jo
stos
pop
push
fs
or
adc
popa
imul
lret
insl
mov
xlat
pop
cmp
pop
cld
jae
push
sbb
inc
hlt
lods
jno
and
or
je
addr16
rorl
mov
ficoml
out
inc
dec
jne
jbe
jmp
push
jns
dec
insl
mov
sub
js
pusha
inc
insb
jno
nop
testb
xlat
in
aas
cli
mov
or
jno
and
test
es
outsb
lahf
push
push
test
test
push
sub
push
mov
xchg
pop
pop
lret
jp
pop
in
pop
lods
shlb
addr16
pop
push
cmp
cltd
dec
inc
lret
add
push
inc
jp
lods
mov
cmc
je
shrl
fs
xchg
push
or
sub
or
jo
adc
xor
xor
sarl
fcmove
adc
loop
addr16
imul
adc
mov
cld
cs
into
jmp
rcr
addr16
scas
mov
mov
or
cmp
adc
xchg
cmc
cld
aam
adc
pushf
nop
ljmp
mov
sub
outsl
jae
mov
pop
aaa
add
dec
adc
orl
dec
or
cmpsb
imul
je
stc
or
fsubrl
pusha
in
fisubl
subl
push
sub
pop
jne
cwtl
pop
and
pop
xor
xchg
add
and
and
and
pop
add
cmp
ds
mov
mov
les
pop
nop
dec
clc
and
push
mov
mov
jbe
sub
or
add
xchg
mov
adcb
outsb
mov
pop
sub
mov
ljmp
pop
mov
je
xor
sarl
xchg
push
mov
sub
cmp
mov
xchg
insl
push
popl
int
sarb
jo
pop
jmp
rcll
sbb
ficomps
dec
push
mov
or
lock
daa
addr16
dec
jne
sub
shll
pop
adc
fsubrl
or
movsb
push
push
mov
clc
xchg
cmp
fsts
pop
inc
fwait
in
in
scas
push
lahf
cmc
mov
cmp
and
mov
dec
sub
mov
push
mov
ss
shlb
bound
pop
pusha
fucomip
pop
and
inc
mov
data16
cld
gs
gs
jg
flds
dec
scas
sub
mov
add
lods
mov
and
call
stos
push
leave
mov
inc
mov
and
pop
das
lret
mov
push
inc
ror
aam
out
in
insl
add
fsubrl
xchg
cs
out
sbb
push
dec
shrb
stos
sub
and
sbb
ljmp
aad
inc
int
hlt
js
cmp
xor
imul
sub
repnz
aam
lds
dec
mov
jnp
cmp
dec
xchg
push
mov
dec
iret
push
cmc
push
out
lods
clc
aam
push
push
mov
mov
daa
loop
dec
mov
xor
or
inc
adc
and
cmc
adc
popf
and
ds
push
insb
out
cld
and
sbb
or
aam
test
xor
stos
push
adc
sbb
enter
lret
xchg
es
pushf
insl
subl
lods
mov
lahf
inc
push
add
popa
or
mov
mov
cmc
adc
add
ficoms
inc
sbb
xchg
mov
push
nop
pop
bound
mov
push
cmpb
pop
adc
pop
jnp,pn
inc
xor
adc
or
sbb
aam
popa
orl
or
out
into
lods
sahf
push
pop
push
mov
gs
in
scas
daa
pop
pop
jle
out
mov
dec
and
sbb
sub
adc
insb
mov
add
pop
lret
shl
out
push
loopne
push
mov
aaa
adcl
lcall
xchg
mov
repz
dec
outsb
sbb
in
popf
das
xor
xchg
test
adc
push
xchg
push
inc
sbb
mov
int
scas
sub
pop
and
ficoms
sarl
mov
inc
data16
ss
out
int3
in
dec
push
jmp
int
xchg
mov
xchg
mov
or
and
pop
pusha
jmp
lcall
and
sub
test
cld
out
xchg
sbb
push
orb
mov
and
mov
in
lret
adc
out
xor
icebp
pop
fwait
jl
add
jmp
or
push
popl
test
cs
xchg
imul
cmp
add
subl
sarl
js
add
mov
fdivrp
xchg
movsl
pop
out
sub
cmp
icebp
mov
in
test
jns
inc
or
repnz
cmc
and
jns
xlat
push
or
ret
cmp
out
fs
jae
aad
push
jmp
test
andl
out
xor
jp
jb
and
dec
mov
jg
mov
dec
cmp
testb
pusha
cmp
cmp
push
mov
and
cmp
xchg
sbb
pusha
dec
pop
aam
cmp
cmp
push
jbe
or
jmp
inc
mov
clc
sub
push
push
cmp
imull
xchg
scas
cmp
lahf
dec
scas
incl
mov
or
gs
add
stos
mov
lods
mov
jg
adc
andb
cmp
cld
std
push
mov
insb
xlat
cmp
add
sub
cmp
pop
rcrl
xor
ss
fcom
mov
pop
movsl
jl
or
mov
inc
in
dec
sub
or
mov
je
repnz
mov
testb
xchg
pop
or
movsl
test
fildll
lret
icebp
int3
mov
es
xchg
push
and
decl
cwtl
sbb
fwait
rcrl
mov
mov
out
aam
clc
js
push
into
mov
popf
adc
pop
xor
sbb
jno
add
loope
dec
xlat
mov
xor
fst
insb
cmp
js
mov
ror
add
mov
lret
push
push
call
or
mov
mov
ds
mov
dec
inc
pop
sub
sti
sub
adc
xchg
out
jbe
popf
jle
mov
cwtl
add
dec
cmpsb
int3
fs
cmp
movsl
sbb
dec
adc
or
lahf
popf
popa
int3
inc
jmp
es
pop
es
jb
mov
cmp
in
fs
mov
clc
pushf
jle
pop
push
cmpsb
lahf
pop
pop
stos
andl
mov
lods
loopne
mov
aad
loope
sbb
xor
lods
mull
imul
insb
push
int
fmull
leave
daa
es
mov
jne
add
lcall
mov
ja
shlb
cmp
out
inc
roll
dec
mov
popf
push
ljmp
pushf
movsl
in
xlat
and
adc
and
mov
fwait
sti
sbb
adc
or
sbb
out
pop
inc
cmp
cmpsl
dec
cltd
inc
inc
into
and
icebp
xchg
sbb
mov
addr16
pusha
mov
xchg
outsl
inc
imul
jae
cmpsb
popf
mov
sbb
pop
mov
fs
push
xchg
shll
loopne
add
dec
in
dec
push
adc
push
icebp
pop
insb
cmpl
inc
les
ljmp
jmp
and
es
icebp
lcall
pop
movsl
test
icebp
fwait
sarb
ja
nop
lods
or
int
call
jnp
sbb
mov
inc
sub
ja
ja
adc
test
mov
xchg
fcmove
mov
cmp
and
lea
fucomp
cmp
inc
inc
repnz
pop
add
outsb
scas
xchg
pushf
jmp
mov
jne
ret
movsl
jnp
rclb
dec
sub
icebp
hlt
pushf
lds
mov
xor
movsb
add
test
add
aam
cmp
ds
push
cmp
mov
paddb
fbstp
push
mov
scas
cmpsb
adc
mov
adc
add
iret
mov
inc
mov
adc
aam
pop
aas
dec
jmp
dec
jle
addb
inc
jne
inc
mov
dec
mov
icebp
mov
jo
inc
popf
inc
mov
sbb
push
add
outsl
jno
pop
dec
jne
popl
adcb
cmovb
sarl
jnp
dec
jp
xchg
in
jp
test
push
jle
and
mov
stos
cmp
in
test
and
mov
mov
mov
push
fs
dec
mov
rolb
mov
stos
in
fdivr
sbb
fidivl
fadds
jb
out
ret
daa
mov
jge
lret
cmp
stc
fucomp
stos
lret
call
in
or
cmp
xchg
dec
cmp
or
arpl
mov
lods
enter
adc
add
mov
jns
adc
push
or
mov
scas
cmpsl
out
cmp
jnp
addr16
or
int
adc
scas
bound
cmpsb
in
and
push
rcll
outsb
aam
int3
push
inc
cmp
idivl
mov
and
xor
lahf
pop
fcmovne
mov
fs
xor
vunpckhpd
jecxz
pop
and
imul
mov
fbstp
xor
scas
sbb
sub
out
mov
pop
lock
or
adc
and
repz
and
inc
push
xchg
sub
je
xchg
jecxz
lahf
push
dec
sub
push
mov
xlat
out
or
adc
sbbb
mov
jns
outsl
scas
add
ljmp
adcl
movsb
xor
pop
movsl
addb
cmpsl
movsb
sub
add
jg
test
inc
mov
sbb
faddl
enter
into
sub
xor
shll
inc
and
into
je
dec
mov
mov
add
mov
xchg
and
stos
push
popl
stos
lea
sarl
mov
into
sbb
sti
sbb
push
imul
popa
inc
mov
xchg
out
mov
dec
insb
xchg
je
aam
adc
cld
cmp
icebp
or
push
lods
sub
pushf
test
rcrb
mov
leave
sbb
dec
inc
mov
test
sbb
enter
xor
lods
iret
cmp
xlat
lods
mov
adc
cmp
call
stos
in
aad
subl
mov
add
pop
xchg
pop
inc
mov
and
sub
xchg
sub
ljmp
jb
sub
sub
movsb
mov
sbb
mov
mov
mov
jb
cmc
lahf
jl
clc
push
insl
shll
scas
ljmp
popa
jne
addl
push
fdivrs
enter
clc
add
fwait
shlb
cmp
shr
int
arpl
sbb
dec
repz
daa
jns
movsl
cmc
push
int3
gs
jle
add
call
shlb
dec
enter
stos
shrl
cmp
push
jno
and
lret
xchg
dec
cmp
ret
ja
sar
gs
pop
loope
lds
dec
or
jbe
cmp
out
push
cmpsb
inc
sbb
fisttpll
das
imul
add
pop
or
sbb
xchg
std
cwtl
mov
subl
movsb
loopne
jecxz
push
int
inc
imul
adc
cmp
xchg
loop
gs
push
inc
leave
mov
mov
xchg
xchg
jne
inc
and
pop
jns
call
xchg
std
xchg
cltd
lods
cmp
push
pop
push
jp
cs
lcall
lea
int3
and
shrb
lcall
dec
jno
dec
arpl
jnp
jno
aaa
mov
push
xchg
dec
cmp
stos
cmpsb
imul
jle
icebp
jo
inc
das
mov
call
xchg
jmp
sbb
lea
xchg
inc
add
addr16
ret
or
lods
mov
and
loope
fisubrl
dec
rorl
sti
pop
dec
cmovae
push
outsb
mov
pop
data16
lahf
mov
cmp
xlat
xchg
xchg
aam
mov
sahf
stos
mov
movhps
and
insl
lds
popf
mov
aas
cld
jmp
gs
sbb
lea
xor
xor
sub
or
hlt
lea
ja
ds
ja
mov
mov
and
mov
cmp
jle
les
sub
cmpsb
pop
mov
lahf
cltd
insb
sti
scas
stos
mov
cwtl
push
inc
push
jge
stc
push
push
nop
jo
leave
lahf
mov
repz
sti
sbb
jge
imul
data16
mov
mov
mov
cmp
adc
mov
jae
sub
mov
out
xor
xchg
les
test
lock
aaa
dec
ss
sub
sbb
jbe
or
jge
cmp
adc
lock
or
enter
imul
ss
outsl
into
pushf
push
push
cmp
push
fs
movsl
sub
in
lds
or
divl
push
adc
sbb
xor
shll
in
pop
test
jo
fimuls
test
adc
push
mov
ss
sub
push
push
adc
pop
fsub
std
pop
xchg
cmp
sub
dec
mov
mov
lea
loopne
cmpsb
repnz
sbb
xchg
jnp
repnz
cmp
imul
mov
dec
push
jae
out
jl
sub
dec
push
xchg
mov
testb
push
cmp
test
xor
frstor
cmp
dec
les
or
les
xchg
inc
inc
xchg
pop
push
clc
mul
repz
gs
aaa
fwait
int3
xlat
mov
add
push
pop
push
xchg
lret
or
loop
popa
xor
rcll
pop
jb
push
and
mov
lahf
ds
int
mov
pop
shrl
push
std
mov
int
mov
mov
inc
aas
pop
imul
xchg
or
aad
gs
jmp
mov
loopne
scas
and
ret
daa
leave
nop
pop
add
or
shl
test
xor
add
push
mov
aad
xchg
popf
mov
sub
sbb
daa
push
je
jno
mov
in
movsl
ja
inc
jnp
stos
mov
in
xchg
pop
in
push
dec
jecxz
push
cmpb
xchg
dec
imul
cmpsl
data16
stc
push
jo
addr16
dec
or
out
add
sbb
adc
je
sbb
jae
pop
mov
repz
fmul
pop
jl
push
out
shrb
adc
in
movzwl
sbb
dec
int
jmp
mov
je
pop
xor
lcall
out
andb
ss
repnz
sub
imul
int
push
dec
or
or
aas
rclb
or
call
lods
cmp
mov
sbb
and
dec
adc
in
mov
sub
lea
or
sub
and
lods
leave
jmp
faddl
rolb
dec
push
int3
cwtl
aas
scas
xor
in
lret
mov
mov
mov
jbe
js
aas
fld
xchg
push
sub
adc
ljmp
add
sbb
or
cmc
jmp
les
data16
and
test
mov
push
out
pop
or
push
dec
out
orb
cmp
cmpsb
pop
mov
jns
lock
lock
push
add
les
xor
dec
testb
or
jge
inc
rorb
stos
mov
or
xor
push
movsl
repnz
adc
std
out
les
ja
mov
mov
pop
stos
adc
add
cs
mov
imul
jae
fs
jnp
andb
xor
xor
js
call
xchg
mov
jnp
out
or
add
popa
rolb
pop
mov
mov
repz
loopne
or
pop
pop
add
aaa
inc
outsl
sub
icebp
mov
cld
loope
adc
call
adc
mov
mov
rcll
loope
jno
daa
lods
jg
jp
fdivp
test
daa
jbe
mov
adc
enter
cli
imul
cli
mov
mov
ret
push
addr16
dec
inc
shll
shr
mov
cmpsl
dec
pop
pusha
pop
push
sbb
pushl
dec
mov
in
repnz
push
insb
inc
rcr
cmc
or
lcall
stos
leave
arpl
push
call
push
hlt
fdivs
ficoml
mov
cwtl
xlat
xor
imul
shlb
sbb
outsb
jl
shll
movsb
es
cmp
push
xor
fldt
mov
shll
mov
or
jmp
lret
stos
in
adc
lods
lock
scas
mov
or
hlt
push
xchg
dec
sub
lea
inc
jns
shll
mov
mov
pop
popa
pop
lcall
add
or
loope
rolb
out
adc
mov
int
push
insb
xorl
icebp
cmp
cmpsl
mov
jl
push
mov
adc
sub
out
aaa
mov
mov
mov
movsl
enter
inc
fadds
jnp
sub
mov
jmp
jb
or
cs
ds
mov
push
shlb
fwait
jecxz
fdivr
jmp
or
inc
loop
mov
mov
inc
jnp
and
and
in
das
or
sbb
fisttps
cmp
stos
jnp
and
daa
xor
sbb
and
js
pop
cmpsb
repz
adc
add
mov
out
add
ret
mov
inc
aad
movsb
gs
nopl
lcall
jecxz
xchg
lea
lea
aad
hlt
sub
mov
lret
pminub
popa
mov
mov
faddp
pop
out
push
xchg
loope
dec
shll
subb
gs
std
idivl
dec
and
dec
mov
pop
cwtl
xlat
inc
ficoml
cmpsl
std
mov
jnp
pop
adc
adcl
sbb
scas
mov
pop
mov
and
xor
sbb
pop
sbb
rorb
sti
popf
popf
call
dec
cwtl
cld
dec
push
cmp
lods
lds
mov
adc
add
pop
mov
push
or
sahf
arpl
fstps
inc
sahf
shl
sbb
out
loopne
or
out
mov
cmp
sbb
popa
xor
xor
and
mov
mov
add
rcll
mov
xchg
xor
loopne
mov
out
cmp
dec
fmuls
lret
loop
fadds
dec
std
aam
xlat
xor
mov
rorl
sbb
aad
and
sub
mov
into
pop
orb
sarb
daa
or
xlat
cmpsb
mov
lods
or
mov
outsl
adc
shl
les
pop
imul
leave
out
das
into
pop
xchg
dec
fstps
pushf
push
dec
xchg
je
add
push
mov
loope
negl
adc
mov
leave
xor
ficoml
sbb
outsb
out
sahf
test
push
aas
pop
xor
or
enter
fistps
out
sub
imul
pop
inc
inc
jmp
or
gs
pop
jns
lods
lret
mov
sub
imul
cltd
dec
ror
ud1
jae
out
dec
cmp
jecxz
xchg
ret
aam
pop
dec
negb
xchg
pop
rorb
add
mov
mov
dec
add
mov
int
fcmovnbe
dec
test
pop
dec
add
mov
xchg
cs
insb
add
cmp
pop
out
ss
sub
aaa
fisubrl
inc
call
fwait
clc
jp
pop
inc
call
pop
adc
sbbl
cmp
dec
cmp
iret
in
mov
adc
xor
cmpsb
jb
outsl
test
adc
xchg
test
mov
mov
dec
ret
jns
leave
push
inc
ret
bnd
jg
dec
adc
and
mov
cmc
mov
or
push
jb
cmpsb
xchg
popa
mov
cmp
add
add
xchg
mov
or
cmp
mov
cmp
sbb
cwtl
and
jge
pop
sti
jg
xor
xor
hlt
les
mov
push
stc
push
mov
orl
mov
movaps
std
test
dec
pop
xchg
fldl
lret
cmp
push
push
pusha
bound
iret
jl
fsubrl
mov
enter
sarb
pusha
cmc
std
jp
sub
fists
out
sub
movsl
mov
and
jg
fildl
mov
mov
or
pop
shrl
xchg
outsb
and
cli
gs
movl
std
mov
push
add
dec
icebp
out
mov
xchg
pop
icebp
cmpsl
mov
les
das
push
sbb
push
pop
movsb
std
xor
xor
push
mov
xor
shl
mov
xor
das
mov
in
sbb
mov
in
shll
inc
fcoms
jge
push
or
rcrl
pop
idivb
cmpsb
repnz
add
dec
lea
inc
sti
ret
andb
sti
mov
test
scas
cmp
sahf
lods
iret
push
out
repnz
pop
movsl
stc
adc
lret
pop
jno
fwait
lret
cli
cmp
xchg
fists
inc
mov
adc
dec
popl
iret
xor
push
js
test
sub
lods
into
out
or
fnsave
shlb
sbb
sbb
jmp
inc
xor
sub
fwait
push
setns
aaa
jle
dec
xor
fimuls
sub
lock
sbb
cli
xchg
cmp
into
js
dec
lret
pusha
lea
fsub
lcall
pop
jbe
nop
cmc
in
idivl
sub
mov
push
xorb
or
push
pop
bound
sbb
jge
lea
decl
mov
stos
cmp
jge
mov
mov
ret
fisubl
lods
or
ss
lea
pop
cmp
push
cmp
adc
add
pop
ret
add
jae
out
push
cltd
cli
into
pop
push
cld
push
mov
cmp
scas
pop
hlt
shrb
jns
das
popa
lods
outsb
je
inc
add
xchg
mov
iret
push
adcb
fidivs
out
je
cmp
cmpsl
or
sti
push
xchg
pop
sub
cld
jns
or
or
push
xchg
dec
mov
sub
sahf
cmc
fstpl
mov
enter
movsb
clc
xchg
adc
addr16
andb
pop
psllq
adc
cmpsb
stos
cwtl
inc
pop
xchg
cmpsb
rcrl
jge
lods
xchg
pop
cmp
mov
adc
cmp
shll
jmp
cmp
notl
mov
mov
fwait
lcall
inc
xor
mov
fcomps
rorl
and
int3
xor
call
leave
iret
lea
push
or
das
or
pop
mov
pop
sti
loop,pt
hlt
out
dec
repnz
fprem1
add
emms
std
shl
test
cld
shll
mov
xchg
fistl
lret
rclb
dec
scas
or
and
sbb
xchg
jle
cmp
push
jl
test
test
cvtps2pd
xchg
push
ret
and
cmp
jno
pushl
aaa
cmc
jg
ljmp
sar
loop
test
int3
mov
dec
pushf
and
pop
push
or
in
pop
ret
pusha
test
mov
loopne
push
xor
movsb
pop
stc
push
cmp
inc
inc
jecxz
and
or
cwtl
dec
xor
out
insl
fs
cmp
shlb
xor
mov
or
sti
xchg
cltd
add
push
fisubl
std
sbb
mov
push
sub
daa
mov
push
mov
ljmp
lock
inc
push
clc
in
sub
xchg
clc
and
leave
inc
mov
call
inc
xchg
cmp
push
push
xchg
or
adc
mov
sbb
cmovne
js
cmp
pop
cmpsb
imul
mov
movsl
sbb
shrb
mov
insl
and
fisttpll
int3
mov
mov
mov
inc
xor
ja
xor
mov
std
ljmp
jecxz
jg
gs
jmp
add
js
pushf
adc
shl
es
out
inc
cmp
adc
flds
sub
test
xchg
js
addr16
xor
mov
mov
jl
add
add
jecxz
je
mov
lret
mov
mov
iret
repnz
pushf
inc
sub
hlt
cmp
int
jp
push
insl
sbbb
adcb
nop
pusha
push
je
subl
jecxz
sub
out
sbb
sbb
push
popf
je
insl
add
gs
imul
fstp
mov
lea
lret
sahf
mov
xchg
push
mov
adc
cmp
add
test
cwtl
mov
loopne
mov
dec
xor
xchg
sahf
inc
jg
mov
aaa
push
sub
arpl
fwait
mov
push
rorb
imul
sub
cmp
lea
inc
jp
xor
popa
mov
je
ljmp
nop
shrl
jae
mov
lods
xor
aad
out
pop
shl
jmp
in
gs
and
dec
and
test
call
int3
push
jo
push
scas
lock
fs
pop
xor
xor
negl
pop
daa
sbb
mov
and
pusha
cmpb
inc
outsb
enter
cld
xchg
outsb
fxch
push
loop
lods
mov
xchg
inc
aad
test
loope
inc
push
cmp
dec
jns
out
and
mov
stc
jg
and
and
mov
sbb
cwtl
stos
mov
or
inc
dec
js
xchg
stos
nop
enter
sub
xor
sub
xchg
mov
in
aas
jmp
mov
ja
sbb
iret
jo
icebp
pop
mov
or
shlb
cmp
clc
pop
cmpl
roll
cltd
popa
xchg
or
push
stos
xor
xlat
jbe
pop
divl
cs
mov
les
and
xchg
lods
mov
int
outsl
fcoms
jle
pop
lret
test
mov
push
ds
xor
clc
cli
leave
mov
push
mov
push
add
in
inc
sbb
stc
inc
jmp
cmp
mov
fidivrs
cmp
jmp
aam
aas
sahf
adc
mov
adc
ljmp
jge
hlt
inc
push
xchg
lds
sbb
bound
or
push
inc
loope
mov
fnstcw
shrb
mov
aas
pop
mov
jmp
aad
sarb
sub
test
out
sub
xchg
icebp
lcall
mov
lahf
pop
dec
add
cmp
nop
xchg
ds
pusha
mov
insb
adc
je
icebp
inc
mov
add
movsl
aaa
aaa
dec
ficompl
cmpsb
das
aas
cmove
mov
lods
lret
mov
adc
das
sahf
repnz
xor
scas
sbb
lret
stos
dec
es
dec
sbb
push
movsb
into
adc
fisubl
push
mov
mov
popl
insb
adc
data16
loopne
leave
movsb
subl
and
jbe
cmp
ja
fwait
and
xchg
jae
xor
decb
push
shl
imulb
adc
in
xor
into
fisubs
lods
pop
rcll
sub
xor
xchg
cmp
cld
xchg
xor
insl
out
mov
or
lcall
pushf
mov
mov
lret
inc
pop
nop
insl
push
js
sub
jnp
xor
imul
test
push
xchg
inc
mov
or
or
out
pop
mov
mov
adc
pusha
in
repnz
mov
daa
popa
outsb
and
lock
lods
xchg
inc
ljmp
adc
push
cmp
ds
xchg
aaa
xor
push
or
pop
icebp
ja
scas
lods
adc
or
dec
out
mov
jno
ss
push
lock
subb
jle
shrb
push
pop
daa
leave
dec
fs
inc
popa
cmp
push
jl
xlat
jecxz
aad
dec
popa
in
mov
mov
sub
add
inc
notb
lcall
jg
xor
mov
ljmp
lcall
lret
and
sub
mov
cs
leave
aad
jl
sbb
popf
es
nop
or
add
cmpsb
data16
repz
push
icebp
sub
xchg
loop
adc
add
movsl
xor
and
jne
xorl
outsb
ljmp
das
out
sub
sub
loopne
cmpsl
fildl
mov
pop
adc
cmpsl
inc
sub
pushf
push
mov
bound
out
jne
mov
xlat
mov
pop
and
pop
lahf
repz
mov
std
outsb
inc
lods
pop
xchg
shl
jo
cmc
jecxz
xchg
push
mov
mov
cmp
subb
imul
jns
jnp
pushf
mov
idiv
and
outsb
cmp
or
das
mov
fnsave
leave
push
sbb
outsl
clc
mov
jns
andl
icebp
shrb
push
jmp
xor
pop
push
in
lret
scas
mov
mov
in
scas
cmp
ret
iret
dec
xchg
mov
sub
xor
sahf
mov
add
ret
jge
push
mov
in
inc
adc
mov
pop
inc
mov
mov
icebp
or
inc
fcompl
cmp
popa
dec
mov
or
mov
clc
pop
mov
sub
cmp
fcomps
add
pop
jns
shrb
cmovo
mov
mov
adc
test
nop
test
sub
jo
out
add
repz
sbb
lods
hlt
loop
or
mov
inc
cmp
pop
call
pop
sbbl
push
stc
cli
xor
xor
daa
out
inc
pop
sub
add
out
int
ret
jmp
xchg
xchg
adc
int
fidivrl
push
mov
sbb
cmp
mov
hlt
data16
inc
sub
mov
jmp
mov
mov
xor
test
imul
into
pop
ret
inc
icebp
inc
fcoml
sbb
mov
into
mov
loopne
xchg
mov
daa
leave
fistpll
inc
jae
fs
ds
hlt
jg
repz
mov
popa
mov
scas
add
adc
iret
mov
add
sub
loope
push
xchg
std
inc
xchg
sbb
data16
nop
movsb
cs
xchg
fidivrs
mov
cmpsl
stos
mov
dec
mov
shll
xchg
out
jg
cli
sub
and
pop
in
loopne
or
mulb
mov
jbe
pop
cltd
ret
lret
jle
mov
cld
or
jns
fs
and
sub
push
loope
out
xor
cmpsl
cmp
dec
popf
shrb
adc
sbb
enter
mov
int3
pop
cmp
mov
movsb
mov
adc
aad
repz
adcb
cmp
cli
mov
int3
pushf
sbb
addr16
daa
or
sub
push
jns
push
inc
mov
pop
test
ja
pushf
aad
add
mov
test
jl
jg
dec
rcll
leave
dec
idivl
shll
insl
popf
std
pop
and
add
inc
xor
mov
push
pusha
ljmp
mov
out
push
fsubrs
push
dec
lahf
add
test
or
push
jns
mov
dec
sahf
adc
adc
insb
es
aas
mov
arpl
out
add
cmp
xor
loope
sbb
scas
cmp
and
lds
push
nop
xchg
sub
bound
das
sahf
rcl
test
sbb
dec
mov
dec
outsb
jb
loop
negl
inc
cmp
or
xor
std
mov
mov
or
jle
dec
mov
pop
mov
gs
repz
sbb
cs
xor
insl
mov
pop
je
lret
inc
incb
sbb
inc
movsb
push
sbb
cvttps2pi
pop
sahf
lea
dec
sbb
dec
cli
cltd
ljmp
jge
mov
lret
jns
insb
ret
xchg
pop
cmpb
loope
jae
xor
arpl
inc
add
cmp
lret
add
scas
jne
outsl
lcall
and
lahf
bswap
inc
or
jl
repz
andb
pop
mov
das
mov
bound
push
je
arpl
les
into
int3
rclb
lock
and
xchg
sub
fsubr
fldt
pushf
pusha
cmp
shrb
lret
cmc
mov
adcb
xor
hlt
movsl
mov
test
mov
icebp
pop
popa
repnz
dec
jno
mov
aad
push
xor
pop
stc
sub
jns
pushf
sarb
push
xchg
sbb
sub
scas
dec
and
add
sub
cli
in
dec
lods
lock
lret
xchg
xchg
push
inc
into
shl
cltd
cmp
fbld
xor
jle
cmp
sarl
add
ja
scas
mov
ror
cltd
cmp
paddb
movl
push
add
mov
jmp
testl
or
pop
xchg
ja
int
push
xor
adcl
pop
jge
xchg
push
test
fnstcw
cmp
cld
inc
idivl
subb
cli
sbb
jmp
push
or
mov
outsl
and
cmp
sbb
sbbl
mov
out
jae
daa
fbld
adc
dec
sub
or
push
sub
lods
inc
xchg
sbb
pop
sub
test
jb
mov
mov
mov
or
or
ret
popf
dec
and
insl
cwtl
or
cmp
int
mov
pop
ds
cmpsl
inc
fstp
jl
sbbb
sahf
push
sbb
lcall
xchg
das
movsl
loope
mov
repz
dec
imul
std
mov
cmpsb
fdivrp
push
cld
in
int3
push
jns
fcmovbe
fadds
and
inc
and
push
rcl
jl
mov
fnsave
jno
imul
repnz
pop
popa
xor
rcll
push
mov
sahf
stos
dec
dec
xchg
push
repz
ja
add
ss
jno
xadd
push
ljmp
and
test
sub
outsl
loop
ja
cwtl
js
outsl
sub
xchg
popf
jne
gs
push
jg
adc
xlat
mov
sbb
imul
jns
sbb
scas
xchg
ljmp
lret
into
adc
jno
mov
cli
dec
mov
mov
outsb
in
dec
push
dec
orb
or
pushf
xchg
cmpsl
mov
test
sahf
mov
rolb
out
mov
or
jmp
and
call
mov
pop
adc
cmc
jl
and
or
or
insl
popl
jno
gs
mov
jnp
sbb
mov
push
mov
dec
inc
outsl
or
lods
call
or
and
push
or
mov
scas
pop
ds
jl
adc
lods
cmpsb
insl
add
mov
mov
jle
push
lret
lahf
push
xchg
and
inc
pop
adc
jmp
xchg
mov
imul
pusha
scas
jle
sbb
minps
shrl
in
test
pop
jo
mov
fs
int
fldenv
push
frstor
addl
fldl
movsb
pop
xchg
lock
fists
cmp
mov
stc
xor
out
mov
sub
ljmp
out
dec
sub
push
gs
push
shl
and
mov
inc
int
div
in
les
jmp
cmp
and
pop
xor
enter
popa
push
aaa
lcall
xchg
cltd
fstps
popa
lcall
ljmp
jbe
inc
push
loop
inc
adc
cld
stos
movsl
movhps
daa
push
xchg
es
fists
jmp
add
ljmp
mov
jle
jp
xorb
dec
xchg
sbbl
sub
cmpsl
ret
out
shll
out
xchg
lods
lds
outsl
mov
call
push
xchg
mov
or
mov
aas
arpl
mov
mov
push
test
jge
mov
test
push
jmp
cli
clc
bound
test
adc
jnp
lret
scas
push
xor
xor
xlat
and
arpl
and
aas
sbb
in
push
xor
test
inc
pop
fsub
jge
inc
sub
sub
mov
push
in
sub
jmp
xchg
pop
aam
jecxz
mov
cld
out
adc
inc
shll
ds
repnz
xor
inc
and
mov
adc
mov
xor
lret
push
movsb
inc
lods
addr16
mov
inc
mov
and
out
sub
mov
and
inc
sub
sub
fst
aad
outsb
mov
jp
jne
sbbb
cmp
mov
push
push
sti
push
cmp
clc
lea
shll
scas
popf
loop
iret
data16
pop
pusha
data16
xchg
clc
out
loopne
adc
push
and
jecxz
subl
jge
scas
addr16
enter
mov
aaa
ret
lea
es
mov
inc
lods
sahf
mov
mov
mov
cli
add
sahf
inc
scas
ret
cmpsl
mov
sub
mov
xchg
pop
loopne
stos
dec
xchg
mov
cmp
jno
xchg
mov
ret
lcall
sbb
ret
jo
ficoml
aad
and
push
xchg
out
inc
cmp
add
sub
int3
pop
fildll
adc
jg
sbb
or
gs
mov
adc
out
inc
in
mov
dec
or
dec
fisubl
mov
fstpt
mov
or
inc
scas
pop
loope
fwait
loope
fcompl
sbb
insb
repz
inc
jnp
and
jnp
sbb
and
addb
inc
nop
out
jmp
and
mov
push
jne
push
test
frstor
shl
and
inc
xrelease
cmp
or
sbb
aam
and
fwait
mov
sub
sub
in
jbe
fisubrl
es
adc
sbb
xlat
cmpsb
stc
aaa
cli
arpl
jge
popa
xor
push
jge
push
lahf
jae
fldt
hlt
gs
xlat
cmp
fistps
jb
pop
pop
lods
rorl
hlt
jle
jns
jo
lahf
sub
sbb
push
pusha
lahf
add
mov
lods
xlat
jecxz
jecxz
popa
or
arpl
rorb
icebp
in
filds
xor
inc
sbb
test
std
pop
mov
pusha
stc
add
sbb
and
mov
push
mov
mov
scas
ret
movsl
imul
jae
cmpsb
movsb
jmp
xor
test
mov
sahf
inc
mov
mov
filds
mov
mov
pop
fcmovb
pop
mov
push
jbe
lds
push
test
mov
sub
sub
sbb
jne
inc
rolb
jne
cmp
ds
cmc
push
loope
out
out
repnz
test
iret
push
and
imul
sub
out
jg
push
fimull
stc
push
pop
data16
push
or
sbb
and
mov
push
rclb
adc
repnz
nop/reserved
movsb
cmpsl
xchg
fadds
insl
mov
loop
pop
add
push
mov
xor
xlat
add
inc
mov
fdiv
in
mov
pusha
imul
push
sbb
jno
or
add
das
leave
sub
inc
sarl
stos
lock
sti
add
popf
jbe
stos
fdivrl
dec
and
cmpsb
jno
mov
push
mov
sbbl
inc
adc
adc
mov
test
lcall
lds
out
jmp
xchg
cmp
aad
jg
sub
popa
dec
mov
test
fcoms
adc
push
hlt
insl
fldt
into
inc
add
cli
jnp
add
sub
lds
jno
outsb
lock
sahf
mov
adc
mov
add
cmp
mov
iret
mov
icebp
xor
arpl
pop
sti
shll
sbb
add
leave
and
dec
pop
dec
or
xor
adc
lock
lret
scas
xor
xchg
cmpsl
jmp
or
fldenv
in
lods
testb
rorb
in
pop
sti
adc
repz
loopne
lea
enter
outsl
mov
fdivrl
mov
jge
pushf
int
outsb
sar
jae
dec
scas
xlat
iret
push
movsl
out
xchg
jecxz
inc
pushf
popf
iret
cwtl
addr16
int
mov
jbe
inc
aaa
je
call
jno
adc
sahf
fstl
loope
das
imul
data16
lcall
arpl
aam
dec
lret
adc
adc
xor
dec
arpl
fisubs
movsb
push
mov
popa
dec
imul
lods
dec
loope
aad
mov
in
sarl
xchg
adc
fwait
rclb
mov
cltd
push
mov
mov
ret
xorb
stos
cmp
mov
adc
push
popa
push
pusha
adc
shl
pop
adc
xor
xor
mov
and
jecxz
out
adcl
mov
mov
int
push
repz
push
mov
cwtl
push
loop
add
roll
or
stc
stc
jns
and
jbe
outsb
cmp
add
xor
jmp
jecxz
xchg
je
sahf
mov
dec
pushf
je
gs
mov
mov
mov
out
sbb
mov
ds
mov
xchg
test
add
mov
int3
xchg
mov
inc
ljmp
dec
lahf
mov
addr16
xor
dec
pop
out
leave
test
frstor
fistpl
call
ss
push
hlt
sarl
sbb
gs
aad
push
lds
rolb
imul
xchg
aas
test
arpl
nop
jnp
gs
scas
in
test
adc
fists
mov
bound
and
repz
leave
cmpsb
clc
mov
dec
ds
inc
std
sub
xchg
dec
hlt
ret
imul
scas
mov
mov
cmpsb
mov
cltd
push
stc
out
push
mov
repnz
sbb
inc
loopne
mov
xlat
jae
pop
xchg
sub
es
js
addr16
xor
shrb
pop
xchg
pop
outsb
popf
push
fstpl
dec
dec
pop
mov
in
push
sbb
repnz
xchg
cli
dec
add
enter
gs
pop
add
or
add
mov
add
cmp
mov
mov
xlat
test
push
mov
ja
fiaddl
mov
cmp
push
adc
ja
mov
push
icebp
dec
xlat
sub
mov
jae
jb
pop
movsb
push
mov
mov
add
es
sub
fsubr
pushf
pop
arpl
lahf
ret
aas
aad
repnz
add
add
dec
aas
pop
mov
int3
pop
in
and
pushf
mov
lcall
les
push
repnz
mov
call
xchg
popf
sub
jns
test
nop
jmp
jo
mov
sub
cltd
cmp
jns
dec
sbbl
cmp
or
mov
mull
mov
cmc
fsubr
or
cmp
outsb
aad
leave
sbb
mov
jecxz
sub
arpl
inc
add
lods
aas
lods
lret
ret
sbbb
inc
lcall
dec
out
adc
repz
dec
xchg
fldenv
mov
iret
adc
inc
xor
cmp
jo
mov
push
cmp
iret
aas
inc
add
xchg
mov
mov
repz
xchg
jecxz
mov
ret
popf
test
sub
pop
cmp
aam
cmpl
jle
pop
test
push
andl
xor
shr
das
xchg
pop
xlat
stos
inc
pop
push
icebp
push
mov
clc
ja
fwait
cmp
jns
push
ds
enter
bound
das
ret
aad
cmpsb
orb
adcb
dec
sub
lcall
jnp
fdivrs
test
jno
jge
xor
shlb
add
test
inc
jbe
jns
sub
cltd
xchg
aas
mov
push
lods
popa
test
cld
stc
cmp
fistl
sbb
mov
mov
ja
push
leave
xchg
sar
xor
popf
lods
xchg
imul
xor
aas
add
jo
push
daa
push
rorl
inc
jbe
scas
mov
scas
pop
mov
pop
daa
jecxz
adc
repz
popa
loop
mov
mov
pop
add
sbb
mov
jo
inc
idivl
or
or
fwait
push
fmull
addb
in
push
inc
ja
push
in
push
sbb
mov
jl
pop
andl
int3
and
nopl
std
inc
sbb
lret
andb
mov
fs
dec
xchg
insl
lret
nop
inc
lret
fidivs
and
ljmp
loop
aas
mov
test
imul
pop
xchg
repnz
cld
fisttpl
fsubrs
pop
inc
adc
jecxz
dec
mov
loopne
xor
mov
sbb
push
inc
xor
cmp
les
cwtl
mov
jmp
in
adc
pop
cs
shr
ret
pop
sub
xchg
les
dec
cmp
out
push
cli
imul
inc
jg
sub
push
push
cmc
fwait
dec
push
adc
cwtl
dec
fcomi
fsubl
pop
rol
xorb
enter
lret
sub
lods
nop
mov
lcall
adc
lods
aad
dec
mov
outsb
fldcw
pop
int
addb
xor
mov
sahf
jbe
and
push
mov
or
out
add
cli
hlt
aam
dec
pop
sbb
sbb
repnz
fldl
cmpsb
pop
mov
clc
jbe
sub
add
dec
and
jae
push
mov
mov
push
int3
and
stos
xchg
fcomps
nop
icebp
jno
xorl
sahf
leave
test
add
fidivl
ret
les
pop
xchg
fstl
push
pop
add
sarb
movsl
push
xchg
cmpsl
pop
jne
jae
stc
inc
adc
xor
push
mov
mov
sbb
xchg
add
in
aad
pop
push
int
adc
xor
pop
fwait
js
into
push
mov
sti
inc
mov
adcb
je
divl
mov
hlt
out
and
rcrl
wrmsr
mov
ja
xchg
imul
popa
sahf
push
push
adc
adc
add
inc
pop
push
das
push
pushf
or
mov
pop
cmc
sbbl
sub
aas
or
idivb
xor
pop
repnz
add
xlat
xchg
in
aam
mov
mov
or
or
repnz
sbb
add
sub
xorb
aaa
repz
or
push
mov
test
fldcw
pop
inc
dec
in
sub
push
or
inc
jbe
bound
insb
inc
icebp
sub
jbe
push
ds
loope
out
mov
fdivrp
push
cmp
adcl
jb
loope
sarl
cwtl
sbb
shll
ljmp
pop
test
push
push
pop
push
lea
sbb
lock
jbe
cld
mov
out
repnz
out
lss
xchg
push
xlat
inc
setle
out
add
jns
mov
rcll
stc
push
mov
aad
jmp
mov
fcompl
add
xchg
jnp
sbb
mov
mov
cpuid
mov
out
nop
mov
sbb
pop
fstpt
xchg
daa
jb
cmp
hlt
push
jmp
push
lods
ds
movb
ficomps
daa
sar
push
mov
jmp
cmp
xchg
adc
add
test
sbb
sub
in
mov
cmpl
repz
sub
jo
scas
dec
lods
cmp
aad
cmp
push
dec
mov
out
push
imul
loopne
mov
mov
aaa
sub
repz
jecxz
aam
xlat
mov
jne
je
xorl
mov
loop
outsl
mov
mov
insl
inc
cmp
loop
out
cmpsl
lea
mov
dec
push
and
sub
inc
xchg
xchg
fcompl
movsl
inc
xor
fnstcw
fnclex
cwtl
js
inc
jae
std
push
repz
cmpb
jb
clc
xchg
pop
mov
or
dec
cmp
stc
das
mov
mov
call
mov
jmp
cmp
scas
inc
xlat
enter
dec
sub
aam
push
fisubrs
xchg
sub
push
inc
divb
in
iret
or
jno
mov
je
add
mov
outsb
cmp
cwtl
mov
mov
lcall
out
xchg
xchg
xchg
mov
xorl
in
loope
enter
pop
out
pop
push
jns
xchg
pop
mov
fs
cmp
outsl
sbb
add
adc
jecxz
adc
sahf
ret
pop
mov
cmp
scas
xchg
dec
js
mov
lahf
out
pop
enter
int3
mov
adc
js
jecxz
int3
rcl
jp
jne
ret
cmc
popa
push
pop
lahf
inc
jnp
mov
out
mov
xchg
les
sarb
adc
cmpsb
inc
cs
xor
arpl
cmp
stc
sub
mov
decl
jmp
mov
outsb
leave
jno
imul
fnstenv
and
inc
xchg
and
stc
and
mov
pop
push
mov
mov
es
push
lcall
inc
add
pop
mov
mov
cmp
fwait
js
gs
xchg
lods
test
dec
cs
push
push
aaa
fwait
shr
pop
xlat
mov
mov
lods
dec
bound
sarl
add
mov
shlb
mov
push
mov
push
inc
ficoml
popa
xchg
sub
imul
insb
int3
dec
sarl
pop
fcompl
mov
dec
ss
or
popf
cmp
push
shll
cmpsb
dec
dec
adc
or
imul
dec
jle
add
dec
fisubl
or
or
popa
push
stos
xchg
cmp
jae
lock
mov
ffree
inc
negl
js
clc
xchg
inc
jecxz
push
out
push
sbb
loope
lds
std
in
mov
out
adc
or
mov
jle
xchg
jecxz
mov
add
cmp
imul
xor
fs
and
loopne
push
pop
pop
xlat
cmp
shrb
ss
lods
faddl
aas
push
adc
or
mov
mov
or
iret
lods
pushf
lods
icebp
push
mov
repz
push
daa
mov
push
out
movl
sub
pusha
adc
out
push
stc
xchg
add
push
fwait
mov
or
or
xor
pop
nop
and
les
fdivl
xchg
push
add
in
ljmp
cmpsb
stos
adc
push
nop
shlb
dec
jbe
jnp
mov
push
out
repz
jo
sti
aam
aas
lret
dec
xor
enter
xor
cmp
les
sahf
xchg
ja
and
lds
push
pop
adc
andl
mov
popa
jle
and
fwait
xor
or
es
xor
inc
sub
mov
nop
cmp
xchg
shr
push
mov
inc
mov
fnstcw
inc
xlat
rcrl
or
sub
int
inc
dec
mov
das
mov
outsl
pop
xor
inc
adc
imul
push
int
pop
sti
inc
push
fstl
or
push
in
push
dec
test
sub
push
add
mov
movsb
idiv
lret
int
mov
sbb
push
repnz
pop
mull
lahf
push
jbe
cmpb
out
int3
js
out
call
jns
stc
cld
bound
push
loope
or
clc
lahf
pop
jne
cmpsl
aaa
dec
add
and
sub
lret
cmp
ret
fbstp
imul
sbb
mov
jge
pop
ret
pop
jp
mov
lcall
int
inc
lahf
adc
stos
popf
test
dec
std
fmull
in
aad
push
xchg
mov
cmp
cmc
cld
cwtl
cmp
sahf
mov
ret
inc
addb
fdivrs
jmp
xor
adc
ficoms
pop
mov
aad
mov
imul
xlat
xor
dec
xchg
sbb
cmc
xor
loope
dec
or
mov
and
orl
adc
ja
clc
or
sbb
popf
add
pusha
dec
dec
sbb
leave
sub
daa
sbb
leave
clc
jmp
ds
decl
pop
loopne
sbb
add
cli
push
incl
push
and
popa
in
in
mov
dec
or
addr16
and
ret
sbb
cmp
push
cld
and
and
aam
xor
fwait
mov
mov
cmpsl
sar
sub
dec
test
mov
mov
xor
inc
xchg
rcrl
mov
in
inc
cs
pop
rcr
mov
pop
xor
int
or
shll
inc
dec
or
movsb
pushf
push
popa
dec
mov
jg
je
inc
insb
sub
jne
adcl
cmpsb
push
sbb
iret
fstl
xchg
test
mov
dec
jg,pn
lods
or
addl
ss
mov
cmp
sub
pminub
rorb
sub
pop
fwait
xchg
ds
arpl
out
lcall
jns
test
outsl
pop
rcrl
ss
xchg
sub
and
xor
testl
dec
mov
outsl
lahf
cmpsb
lret
lret
jl
xchg
or
mov
mov
fisubs
adc
sub
test
roll
fs
adc
test
mov
or
jo
mov
inc
add
inc
mov
sub
fs
out
dec
repnz
xchg
cltd
in
mov
or
xchg
push
or
mov
or
jmp
icebp
lret
push
mov
in
roll
fstpl
ss
test
lahf
iret
sbb
jmp
insl
jae
mov
cmpl
orl
movsb
sarb
imul
shl
add
sbb
pop
popf
mov
or
ljmp
stc
stos
iret
test
or
cmp
mov
xlat
mov
lcall
push
into
cs
mov
aam
je
pop
mov
pop
adc
cld
mov
xor
and
xor
mov
jl
mov
mov
pop
lcall
aaa
movsl
mov
std
push
decl
test
mov
sbb
jp
js
shll
mov
push
sub
aaa
daa
inc
test
inc
aas
xchg
or
inc
xor
lds
sub
ret
ret
call
and
imul
outsb
test
xchg
jo
inc
cmp
in
xor
out
gs
dec
push
hlt
inc
test
pop
sbb
push
sbbl
mov
jmp
cs
mov
stos
jmp
clc
mov
out
mov
push
ds
sub
xlat
mov
sbb
lcall
inc
mov
gs
outsl
and
fstl
call
xchg
cmp
scas
fbstp
xor
sarl
mov
xchg
xchg
aas
push
dec
pop
jns
push
dec
mov
nop
jns
pusha
icebp
push
stc
shrl
hlt
movsl
daa
or
lret
sub
pop
dec
mov
push
sbb
int3
pop
inc
pop
cmc
jmp
dec
xchg
xchg
xchg
lods
sub
arpl
gs
arpl
jnp
pop
jge
cmp
xchg
movsb
pop
pop
pop
movsb
mov
fisttpll
and
outsb
inc
fiaddl
pop
movsb
outsb
jmp
call
push
mov
js
call
cltd
aas
mov
dec
pop
add
and
pop
and
stos
das
mov
aaa
cmp
pop
xlat
es
pop
inc
mov
add
in
or
sbb
adc
pop
pop
in
daa
push
inc
les
add
xor
cld
outsl
es
push
and
jmp
jp
scas
adc
rcr
pop
mov
mov
shll
mov
mov
cmp
push
push
xlat
adc
subl
stos
push
push
xor
into
adc
mov
loop
push
rcr
jle
xchg
leave
ss
aas
imul
outsb
mov
pop
push
mov
xchg
inc
adc
mov
inc
aaa
ljmp
inc
enter
dec
pop
ror
test
gs
dec
mov
sub
and
fisttpll
dec
inc
nop
loope
popf
out
iret
out
xchg
dec
sbb
mov
cltd
fmuls
lods
aas
orl
lcall
pop
pop
clc
or
inc
insb
bound
in
test
dec
sub
adc
lods
sub
aam
repz
sub
pop
sub
add
inc
lcall
imul
cmpl
jne
sub
mov
xchg
movsl
sub
pop
stos
cmovs
mov
xor
insl
sbb
fcomip
fs
mov
cli
xchg
cmp
adc
dec
mov
push
sub
cld
sub
or
ret
and
cmp
das
and
or
pusha
fstpl
sahf
and
into
sti
loop
cmc
lret
push
push
mov
add
xchg
cmovno
test
mov
xchg
add
push
dec
mov
inc
sub
loopne
cwtl
cmp
insl
scas
jg
add
movsl
add
jle
add
jne
mov
hlt
pusha
aad
in
sahf
stos
mov
in
int3
aaa
sub
or
cmpsl
notl
fldt
rcrl
dec
sbb
xchg
and
test
out
inc
mov
xor
cmpsl
cmp
mov
sub
arpl
jb
stos
lock
mov
enter
push
arpl
faddl
push
lahf
pusha
push
mov
dec
push
jge
rcrl
dec
popl
ret
or
test
test
push
add
mov
jbe
pop
out
mov
inc
inc
sbb
pop
add
js
repnz
sbb
lretw
stos
loop
jmp
dec
pop
jb
call
in
mov
sahf
scas
jp
lock
add
loope
daa
out
pop
pop
cli
add
enter
std
lea
shll
sti
push
jae
aam
loop
mov
shlb
fwait
daa
popf
ds
pop
jbe
pushf
fidivrl
add
mov
jmp
mov
repnz
cmp
testb
inc
test
jnp
xor
hlt
add
pop
mov
ret
jle
jmp
movsl
xlat
js
push
sub
jne
sub
xor
pop
xor
xchg
cmp
mulb
adc
hlt
pushf
test
rcll
pop
inc
inc
xchg
sub
inc
outsb
pop
ficoml
push
jb
dec
push
mov
movsl
mov
cmp
mov
das
inc
in
lock
ret
dec
and
pop
addr16
add
add
rclb
and
xor
sub
daa
enter
mov
test
repnz
dec
mov
mov
sbb
cmpb
inc
divb
incl
stos
rcrl
push
fwait
xchg
sbb
into
mov
lahf
xchg
fucom
ljmp
cwtl
inc
sti
lock
jmp
adc
xchg
cwtl
das
mov
add
jno
lods
fcomps
xchg
xchg
xlat
push
jbe
dec
inc
loope
fidivs
mov
inc
mov
mov
jnp
dec
and
push
jge
xor
cmp
js
sub
xor
dec
inc
xor
call
loopne
jg
int
push
leave
add
and
mov
fadd
sub
jns
sahf
jno
adc
xchg
mov
cmp
popa
mov
mov
test
mov
or
sbb
repz
mov
cmpb
jae
mov
pop
loop
ret
stos
lea
cld
mov
add
cmp
xlat
mov
imul
sub
lret
ss
ds
jo
loopne
fdivrl
pop
je
popa
ret
inc
mov
push
push
ret
mov
bound
subl
adc
pop
notb
stos
test
adc
rolb
fidivrl
inc
jge
sbb
xlat
mov
sahf
jmp
fildll
sbb
testb
inc
nop
mov
andl
stos
in
in
jle
add
les
inc
push
push
dec
in
imul
icebp
xor
jp
je
push
or
fs
push
cmp
and
cmp
lods
mov
jle
aad
clc
int
cmp
xor
dec
aam
jle
imul
or
mov
inc
nop
sub
iret
sub
xchg
push
jnp
arpl
push
sbb
mov
mov
fiaddl
inc
rclb
fwait
or
inc
cld
or
js
dec
sahf
sarb
scas
and
sub
jno
out
jns
inc
mov
xlat
hlt
cmp
jp
nop
mov
add
in
sub
xchg
fmull
cmpsl
icebp
mov
addr16
fiaddl
mov
jb
sahf
pop
fisttps
xlat
adc
lret
lcall
dec
mov
jle
inc
cmpsb
cmp
outsl
repz
mov
sbb
cld
adc
mov
fs
pushf
adc
mov
jecxz
fstpt
fwait
sbb
jecxz
or
psubd
fistps
pusha
cmp
add
divl
sub
mov
insl
push
adc
ds
popf
nop
arpl
popf
xchg
mov
negb
repz
mov
imul
pop
pop
jb
gs
mov
test
jno
mov
push
shlb
inc
scas
test
cmc
mov
push
mov
call
mov
or
push
mov
repz
ja
xor
add
add
fcoml
addr16
push
sti
popa
lcall
pusha
cmpb
loope
mov
faddl
xchg
fistl
cwtl
aad
sti
cmp
lea
aas
mov
adc
mov
push
frstor
push
mov
out
mov
pusha
pop
ret
movsl
mov
or
iret
aam
dec
repnz
mov
fs
js
stos
sub
leave
or
mov
or
test
push
mov
pop
inc
movsl
or
pop
addb
pop
add
xchg
sbb
xchg
jecxz
mov
pop
mov
jp
addr16
out
and
xchg
push
pop
and
gs
dec
les
jge
imul
jecxz
or
addr16
mov
je
pushf
int3
adc
rol
pop
int3
ds
bound
shll
in
js
push
dec
mov
push
inc
cmp
into
std
push
mov
and
mov
sub
outsb
jns
int
xor
icebp
push
add
push
jb
out
pushf
test
mov
and
fsubl
fistpll
push
lods
arpl
fstps
in
popa
daa
add
lock
inc
fcoml
push
lods
mov
test
cltd
and
dec
adc
cld
out
int3
jns
fcomp
ljmp
rol
and
ja
push
mov
xchg
mov
in
mov
leave
and
push
push
cmp
jns
call
imul
mov
into
pop
pop
int3
mov
adc
sub
and
pusha
sub
lods
dec
pusha
push
arpl
aam
stos
lock
pop
leave
mov
scas
or
pushf
bound
cs
pop
xor
repz
sti
push
andl
pop
sbb
cltd
or
jno
sbbb
movsl
sub
xchg
loopne
push
dec
xor
mov
mov
xchg
xchg
or
es
dec
lcall
mov
sbb
sub
push
inc
push
xor
and
jne
xor
lea
aaa
add
push
stos
push
mov
pop
mov
inc
into
test
jbe
mov
sbb
lahf
xchg
inc
idiv
lcall
sub
gs
mov
xor
stc
test
mov
jmp
xorb
repz
test
jg
insl
inc
xor
dec
sbb
sub
push
bound
and
icebp
sub
adc
jmp
adc
push
cmp
bound
orl
sub
cli
adc
dec
repnz
pusha
pop
repz
sub
xchg
push
xchg
hlt
mov
fstpt
adc
xor
imul
jge
xchg
pusha
sbb
mov
xchg
dec
sarl
push
sahf
jns
iret
test
fs
jge
mov
mov
xchg
aas
jmp
sub
movsl
es
lods
jnp
loope
call
pop
or
xchg
mov
jg
je
repz
add
leave
xchg
sbb
xorl
mov
daa
ret
mov
adc
adc
stos
sti
popa
cmp
fwait
pop
pextrw
cmp
jl
add
int
pop
mov
je
inc
cmc
ja
mov
inc
scas
movsl
test
rorb
ljmp
inc
clc
xchg
jle
mov
lods
dec
mov
daa
sbb
es
cmp
or
rcll
or
adc
test
push
daa
mov
mov
lcall
ljmp
or
xor
lret
call
aad
enter
add
and
sub
sub
sub
or
inc
xorl
xor
js
mov
dec
outsb
pop
mov
cld
fnstsw
push
pop
pop
fistl
rorl
movsl
mov
cmp
and
divb
roll
and
aam
ljmp
shl
dec
xor
pushl
and
fisubrs
xor
sbb
jb
mov
xchg
cmpsl
mov
inc
adc
in
pushf
adc
jp
jne
fisttpll
hlt
pusha
mov
gs
xlat
sub
jb
and
dec
into
jno
in
adc
pop
ret
mov
out
test
std
mov
lcall
outsb
aad
insb
pop
sar
and
outsl
adc
inc
in
jnp
ds
mov
sahf
sbb
aaa
or
orl
js
cmp
les
scas
xchg
push
dec
xor
leave
aas
cmpsb
pop
push
loopne
test
push
jle
mov
or
pushf
in
insl
xchg
and
ss
aas
and
xorb
xor
sar
mov
dec
mov
adc
into
scas
lock
inc
lock
jno
pop
mov
jmp
insl
mov
dec
test
jmp
pop
add
mov
shrb
out
test
push
insl
nop
mov
mov
sub
adc
clc
sti
stos
sbb
ret
inc
sub
xchg
fmull
mov
test
mov
mov
pop
outsb
ret
ficomps
jmp
or
cmpsl
xchg
dec
lahf
sbb
dec
popf
loope
jle
ja
fcompl
or
dec
xchg
daa
add
inc
add
cltd
xor
mov
out
sbb
add
lock
push
sub
xlat
addl
lea
out
adc
or
shrb
sti
and
dec
out
pop
lcall
xchg
pop
fadds
test
xlat
pop
mov
rclb
mov
in
pop
mov
mov
fstpl
data16
ds
push
sub
dec
jo
jae
jno
sbb
in
rcrl
mov
in
cmc
stos
lcall
ja
mov
push
lea
cli
mov
aad
xor
xchg
lahf
adc
loope
dec
fsubs
aad
cwtl
fwait
loope
add
mov
mov
jp
fsubs
pop
push
aam
cs
sahf
inc
sub
push
daa
testl
and
stc
xchg
and
mov
sub
and
jge
dec
jno
mov
inc
or
enter
push
enter
sbb
insl
scas
daa
mov
add
sub
jbe
fsubr
addr16
jb
xchg
sahf
pop
mov
das
aad
push
and
sub
jge
aas
cmp
mov
sbb
pop
arpl
adc
lea
pop
jo
cs
jb
test
out
cmp
adc
cltd
adc
andl
jae
les
ja
cmp
fucomi
data16
sarb
mov
cld
pop
loopne
xor
repnz
fsubs
jmp
sub
mov
mov
or
mov
jmp
loopne
or
adc
in
mov
xor
or
pop
mov
inc
addl
out
pop
xchg
sbb
mov
sbb
fmuls
cmc
xchg
fisttpl
push
add
popf
xchg
int
cltd
or
sub
jmp
sub
pop
xlat
and
jp
xchg
scas
imul
mov
jns
cmp
aam
shr
loopne
push
fimull
pushw
repnz
and
stc
ret
cltd
mov
stos
add
sarl
js
xor
sub
scas
hlt
mov
ds
jnp
insl
adc
jae
std
jmp
in
lods
dec
push
push
cmp
test
dec
jge
jnp
lcall
fdivrp
scas
and
mov
cwtl
in
repz
push
xchg
lock
sbb
call
inc
dec
jecxz
jns
je
sub
lret
push
inc
test
inc
add
jbe
push
pop
imul
shl
stc
jno
dec
loop
sbb
pushl
adc
pop
mov
rorb
lds
arpl
data16
arpl
fstp
push
push
ja
hlt
les
xor
and
mov
push
jp
jg
adc
movsb
add
and
dec
inc
cld
sub
call
stos
lret
rcr
out
popf
mov
xchg
dec
mov
fldt
ljmp
call
je
adc
cwtl
daa
xor
out
adc
pushf
jae
adc
cmc
mov
ss
mov
push
push
or
sbb
insb
jge
add
je
scas
jns
les
sbb
add
cmp
mov
xchg
and
cmpsb
dec
lcall
les
pop
pop
pushf
push
or
xchg
push
imul
push
cwtl
add
adc
and
cmpsl
adc
mov
push
xor
data16
xor
mov
imul
and
mov
push
std
mov
jmp
xor
scas
add
mov
mov
ja
jle
outsl
aam
cmpsl
mov
mov
mov
rorb
xor
push
sarl
enter
subl
dec
sub
mov
shrl
std
out
mov
mov
enter
sbb
movsb
ljmp
pop
mov
jle
test
inc
push
sti
scas
jb
and
mov
push
mov
sti
xchg
fldcw
add
cmp
cmp
jbe
movsl
aaa
rcrl
aad
nop
rol
inc
dec
xchg
jp
jb
mov
subl
dec
call
and
ja
sub
dec
mov
pop
and
mov
dec
mov
imul
es
sub
adc
out
xor
jo
mov
pop
fstl
or
test
pushf
mov
cmp
fwait
hlt
je
or
jl
mov
pop
mov
and
push
push
loop
mov
mov
mov
shl
cmp
xchg
sbb
inc
sti
jle
adc
cmp
cmpsl
fsub
xchg
mov
mov
imul
divb
ficoml
rcr
jae
dec
jns
test
xor
enter
int
fsubrl
jmp
push
xchg
add
loope
les
inc
mov
lahf
and
scas
shr
mov
hlt
cli
insl
sub
cld
fnsave
test
and
mov
pop
popaw
pop
and
xor
push
aam
lock
cmp
fimull
inc
mov
lock
and
sub
dec
mov
adc
repnz
jo
push
xchg
cmp
shrl
pop
or
dec
outsl
incl
pop
add
push
sbb
jo
fcoml
jmp
xchg
pushf
cmp
div
and
sbbb
negb
push
test
adc
in
out
xchg
mov
sarb
or
cmp
and
mov
lcall
cmc
pop
push
fs
mov
push
push
ds
arpl
push
jb
and
mov
jmp
dec
add
bound
sahf
jae
loopne
and
push
inc
push
adc
push
test
push
mov
jns
mov
les
enter
dec
xlat
pop
inc
mov
cmpsl
xor
push
add
es
out
jge
int3
stos
das
add
rclb
fiadds
jb
jnp
sbb
stc
or
add
out
xchg
outsl
fistpll
inc
in
xor
outsb
inc
fwait
jb
and
and
xchg
stos
mov
ljmp
xor
and
fs
pop
mov
repz
ja
out
js
loopne
jp
inc
jmp
fsubp
insb
in
lock
sbb
ret
fcom
roll
out
mov
fcmovnb
shrl
into
leave
mov
in
sbb
fcomps
stos
in
dec
cmpsl
sbb
dec
in
inc
negl
inc
mov
cmp
add
inc
enter
push
adc
cltd
stos
fsubl
fnstenv
jae
ja
xchg
jns
jecxz
enter
jns
mov
or
repnz
cmc
popf
mov
push
sbb
sbb
jmp
xor
or
cwtl
fwait
mov
sbb
fdivrl
xchg
mov
cmpsl
icebp
jp
xchg
and
push
fldenv
arpl
xor
sti
jl
data16
pop
pop
pop
pop
nop
xor
loopne
bound
int3
and
cmp
cmpsb
mov
jns
adc
lea
sarb
jl
mov
mov
into
sahf
cmpb
xor
imul
fimull
or
adc
addr16
sub
rorl
faddl
pop
sub
les
and
push
into
outsb
iret
sahf
xchg
add
lahf
jl
fsubrl
inc
repz
mov
sbb
jne
cmp
inc
push
test
punpcklwd
mov
subb
adc
jbe
dec
mov
ja
push
ljmp
cmp
jmp
scas
stos
jg
or
push
pop
push
ljmp
imul
les
mov
jbe
xchg
pop
mov
or
sbb
jo
dec
lock
je
das
popa
add
cmp
mov
scas
lahf
aaa
into
and
mov
out
stos
das
iret
pop
movsl
lret
movsl
sahf
inc
push
xor
mov
mov
add
mov
int3
loopne
ja
cld
nop
cmpsb
dec
lret
sub
mov
pop
xor
insb
scas
js
icebp
push
insb
push
gs
andb
jne
test
repz
cmc
addr16
adc
adc
or
fs
out
lcall
es
cmp
add
jle
lods
inc
sbb
push
sub
sbb
aad
movsb
push
cmp
lret
in
enter
dec
jnp
mov
sbb
push
ljmp
into
sub
addl
fcmovb
rol
stos
jo
shll
fcoms
sub
xor
cld
mov
mov
pop
cli
in
aam
xor
iret
cmp
call
fistps
xor
out
inc
insb
jo
out
in
sub
mov
iret
cmp
inc
push
ljmp
mov
je
movsl
xor
fdivrl
mov
in
push
xchg
xor
adc
fs
adc
mov
mov
push
in
dec
jmp
mov
and
inc
or
idivl
ret
mov
mov
pop
pusha
cmp
outsl
mov
inc
out
xchg
inc
sub
sub
inc
add
or
and
shrb
add
push
adc
lcall
inc
xchg
cmc
and
sub
bound
adcb
mov
pop
xor
adc
movsl
scas
dec
cwtl
lods
leave
jg
clc
lds
dec
bound
loop
mov
lods
inc
xor
ds
jp
xor
fstl
sub
sub
inc
push
lock
sbb
mov
and
andb
in
adc
repz
lahf
or
fildll
sbb
fstp
nop
and
sbb
pop
cmp
inc
es
rcr
xchg
sti
rolb
dec
sbb
jg
push
mov
add
mov
sbb
sub
add
subb
mov
mov
mov
or
xchg
aad
je,pt
pop
sahf
jno
pushf
dec
idiv
adc
mov
sbb
rorb
loop
sub
roll
mov
fwait
xor
addr16
int3
in
jge
mov
es
adc
mov
pop
adc
mov
pop
js
xor
xchg
fcompl
mov
mov
or
pushf
mov
ret
hlt
inc
mov
cmp
jns
out
pop
movsl
adc
and
movsl
sbb
pop
pop
bound
jp
sub
add
sbb
test
leave
shl
push
aad
mov
mov
sarl
ja
clc
lcall
je
mov
mov
mov
sub
mov
jne
ljmp
or
cmp
mov
mov
and
sahf
pop
mov
out
sbb
mov
xchg
lock
push
adc
std
dec
pop
mov
into
mov
cmc
and
inc
mov
sub
mov
stc
test
jae
sahf
shrl
xorb
enter
cmc
push
pop
fucomi
dec
scas
sub
test
int3
sahf
int3
cltd
xlat
cmp
adc
outsl
scas
jge
sti
movsb
cltd
jle
inc
and
fsubrl
dec
xor
nop
xor
lret
adc
pop
sti
add
out
out
pop
push
lcall
adc
repnz
xchg
scas
inc
dec
js
enter
inc
xchg
scas
shrb
mov
lds
mov
in
and
shrb
test
inc
arpl
mov
xorl
mov
js
mov
pop
mov
lret
sub
loopne
xor
push
sbbl
xchg
sbbb
ja
lahf
fsts
push
add
pop
mov
test
jb
cmpsb
inc
mov
pop
faddl
xlat
jns
in
sbb
mov
nop
cmp
fstpl
fiadds
inc
sbb
lods
clc
xlat
rorb
add
lret
stos
push
loope
decb
addl
scas
imul
rorl
add
push
shll
xor
aaa
ds
adc
andb
mov
add
lock
and
test
mov
sti
inc
add
inc
push
pop
je
inc
adc
fidivl
lods
sbb
scas
jnp
mov
ret
hlt
pusha
push
sbb
jecxz
pop
cmp
pop
and
dec
mov
dec
inc
bnd
xchg
jl
jp
sbb
xchg
sub
mov
or
add
ljmp
es
mov
mov
jge
mov
cld
imul
inc
stos
dec
lods
and
mov
mov
dec
clc
add
scas
cmpsl
pop
sbb
jo
adc
jg
out
push
and
arpl
push
sbb
sbb
and
add
inc
mov
pop
xor
mov
mov
push
cld
mov
pop
in
and
stos
testl
shrb
mov
sbb
clc
xlat
mov
push
mov
mov
adc
push
and
flds
js
mov
imul
loop
jg
dec
push
cmpsb
aad
dec
lret
cwtl
inc
insl
mov
shll
push
sub
jnp
xchg
lea
adc
and
pop
add
add
shlb
negb
inc
fstl
jmp
sbb
outsb
xchg
inc
pushf
cld
loop
xor
sti
sub
les
cmp
xor
dec
flds
push
add
cmp
es
mov
mov
inc
or
jno
adc
cs
cmp
jns
inc
pusha
pop
xchg
test
xorl
jo
sahf
ja
sbb
in
xchg
in
rolb
ret
ja
push
sar
or
push
xor
xor
xor
jp
xchg
or
movsb
call
mov
xor
dec
pop
cmp
fistl
int
mov
rclb
iret
push
xor
jae
popa
stos
dec
ror
mov
daa
fstl
les
mov
pcmpgtw
jecxz
lcall
add
stos
js
gs
aad
xor
movsl
dec
sbb
rorb
push
loop
nop
jns
push
mov
add
fidivs
cli
cmp
xor
or
daa
rclb
insb
mov
test
xor
adc
push
enter
pop
xchg
cmp
ds
sbb
cmc
or
rcl
cmp
cmpl
ljmp
cmp
ljmp
cmc
jp
pop
jl
mov
pusha
sahf
mov
mov
fdivrs
idivl
das
mov
das
adc
push
cmp
cld
sub
mov
cmp
negl
setns
lret
sub
push
outsb
ja
and
xor
or
bound
lods
fiaddl
lret
lds
xor
push
mov
les
mov
mov
add
aam
ja,pn
push
mov
ficoml
mov
mov
rorl
mov
pusha
ds
or
dec
or
xchg
pop
cmp
rol
cwtl
sub
lds
rolb
sbb
dec
sbb
pop
cld
jmp
and
lret
pop
mov
orb
out
add
repnz
mov
jg
sbb
hlt
adc
cmp
xchg
dec
push
sarl
sub
imul
sbb
cltd
inc
add
xor
in
out
pop
iret
pushf
jp
in
jae
ficoml
data16
fs
xchg
pop
ja
jp
xor
ret
incb
adc
iret
sahf
jle
push
or
mov
cmp
fwait
insl
or
pop
daa
ror
cli
jmp
jmp
iret
push
mov
push
outsl
or
inc
ja
mov
add
popa
rcl
pop
lds
xorb
sbb
insb
xchg
sbb
xchg
sub
test
jle
into
sbbb
add
sar
cmp
mov
xor
or
jge
popa
ret
mov
jb
dec
mov
adc
sti
or
pusha
ret
dec
push
loop
mov
pop
ss
xchg
bound
mov
jecxz
hlt
xor
out
pop
insb
repz
inc
dec
xchg
sub
jge
mov
sbb
mov
loopne
je
inc
test
xlat
pop
push
mov
mov
in
cmc
xlat
in
fs
jge,pn
or
push
mov
lahf
dec
jb
inc
xlat
and
ret
mov
mov
mov
or
lahf
andl
and
dec
daa
xor
cmp
pushf
mov
sbbl
popf
jmp
imul
pushf
or
pop
cli
popf
push
outsb
jle
xor
adc
push
dec
push
xchg
cmpl
adc
dec
add
bound
mov
lea
stos
add
jmp
loop
out
in
and
or
fdivrl
hlt
sub
mov
scas
dec
mov
cs
mov
xor
push
cmp
adc
loope
push
scas
cmp
adcl
rolb
fdivl
push
loopne
les
test
adc
jbe
push
and
int3
shl
pop
jae
pushf
repnz
sub
xchg
mov
popa
icebp
dec
mov
or
pop
sub
and
xchg
loop
rclb
fistpl
dec
dec
movsb
jae
push
popa
jg
pop
test
mov
sbb
stos
or
xchg
pop
pusha
push
fs
das
sbb
add
mov
pop
mov
mov
rorl
in
push
mov
xchg
popa
pop
adc
and
stc
jmp
mov
mov
dec
out
mov
add
ss
iret
lods
push
xchg
jl
sahf
jg
mov
lret
into
ret
jno
mov
sbb
sub
mov
sub
mull
xchg
fmul
push
xchg
pushf
fcmovbe
movsb
jl
into
ljmp
loopne
mov
test
adc
outsl
pop
in
and
add
in
jb
xorl
or
sub
and
xchg
push
in
orb
loop
lock
scas
add
xor
inc
pop
pop
mov
pop
inc
icebp
jne
repnz
out
adc
outsl
mov
iret
lret
in
into
and
fstl
xlat
xlat
cmpb
push
push
fisubrl
or
out
dec
mov
sub
xchg
cmp
incb
pop
sbb
pushf
hlt
shl
lock
push
addr16
test
ret
ss
mov
in
cmc
sub
add
xchg
inc
jb
cld
adc
push
fs
iret
divb
movsl
pop
cmp
inc
popl
mov
loopne
mov
loop
xor
cmpsb
lods
jne
mov
mov
sbb
push
push
pop
xchg
mov
xchg
or
xchg
or
jne
and
out
imul
dec
lahf
rorb
sub
push
push
mov
outsb
fsub
bound
push
and
and
cmpl
in
mov
rcl
pop
js
lock
ficompl
adc
test
arpl
mov
sub
paddusb
bound
das
pop
daa
arpl
daa
pop
mov
xchg
or
rol
and
out
mov
xor
ret
into
xor
jo
fwait
fs
sbb
add
je
cwtl
insl
add
pusha
jae
dec
cs
push
jnp
bound
sahf
and
jnp
add
pop
jne
add
enter
fcoml
xlat
cmp
jge
xchg
mov
mov
loopne
jmp
mov
cmc
push
dec
pop
push
pop
dec
call
into
testb
xor
mov
call
icebp
outsb
mov
cli
rorb
fdivs
rorl
ljmp
out
sub
xor
scas
xor
mov
incb
imul
sub
aad
pop
test
dec
lahf
jae
push
sbb
mov
or
rcrb
rclb
jb
xor
test
adc
dec
fildl
iret
mov
loop
xchg
adc
fadd
rcr
or
adcl
jnp
jae
sbb
pop
sub
pop
pop
or
ret
push
jnp
repnz
std
mov
neg
jp,pt
rorb
xor
xchg
cmp
lret
sahf
cmp
imul
xchg
and
and
jo
cmp
add
cwtl
in
hlt
movsb
mov
mov
push
mov
and
addr16
jl
sahf
pop
push
call
push
adc
push
je
int3
or
push
inc
stos
dec
div
pusha
test
mov
push
adc
sub
nop
mov
movb
push
fiadds
lock
dec
xor
adc
lret
ret
mov
fmul
mov
es
movsb
std
cli
sahf
bound
mov
and
mov
loop
jns
mov
sub
js
mov
movsb
in
dec
push
inc
gs
xchg
jl
cmp
mov
rcrl
inc
loopne
sbb
sub
test
iret
data16
xchg
fucom
subl
inc
outsl
dec
adc
idiv
fmull
mov
jnp
aad
lcall
jecxz
loopne
ja
jmp
fimuls
sub
cmpl
or
xchg
jnp
inc
sbb
in
dec
lcall
loop
lea
pop
repz
in
rolb
ljmp
pop
sub
rcr
mov
and
loop
push
and
xor
fwait
test
subl
add
pop
mov
xchg
xchg
jns
test
jmp
jb
sub
gs
or
push
lods
out
jmp
pop
lock
cli
adc
rcr
movsb
scas
lcall
loope
mov
push
mov
cmp
fwait
jnp
addl
jne
sbb
mov
fdivl
iret
pop
pop
jle
dec
lods
gs
pop
add
mov
test
fdivs
jp
repz
lahf
adc
aam
pop
mov
lcall
test
iret
push
jns
fists
testb
mov
aas
jmp
mov
ljmp
sub
pop
dec
cmpsb
test
mov
dec
mov
imul
pusha
mov
sbb
insb
cmpl
and
call
andl
xor
or
fildl
jge
sub
fwait
pshufw
imul
test
add
int
ja
insb
sbb
sbb
je
pop
ret
sbb
hlt
sub
bound
push
cli
inc
scas
add
xor
cmp
sbb
fidivl
cltd
sub
out
cltd
pop
adc
sti
add
push
dec
or
cli
call
pop
cld
bound
sub
inc
sub
mov
ljmp
fcomps
cltd
cltd
xchg
and
scas
jb
imul
repz
lahf
pop
push
lret
add
out
test
jg
lret
or
jl,pt
push
xor
cmp
jae
sbb
or
adc
push
jp
inc
ja
add
pop
imul
scas
loope
xchg
mov
outsl
add
mov
sbb
cwtl
lret
sub
std
dec
mov
sbb
add
roll
inc
fs
call
sub
insb
lahf
mov
mov
dec
shlb
iret
lea
mov
add
je
inc
mov
fsubrs
orb
test
push
movsl
inc
test
fcmove
mov
add
pop
pop
movl
data16
ljmp
scas
incb
pushf
cwtl
movsl
inc
pop
loop
sub
loop
ds
dec
push
xchg
cmp
add
hlt
adc
cmp
pop
inc
xchg
mov
jne
jmp
push
inc
sarl
ljmp
mov
cmc
mov
loop
xchg
sbb
push
adc
adc
dec
mov
cli
jb
and
sub
mov
add
mov
sub
frstor
je
es
in
jg
jg
cwtl
sbb
int3
jle
outsb
ficompl
inc
add
lock
add
lahf
sbb
in
imul
xchg
xchg
ficompl
xchg
into
fldl
lret
or
add
push
jl
pop
mov
mov
sub
jge
xor
subb
push
js
pop
out
sbb
addr16
inc
out
mov
cmpsb
stos
xchg
nop
in
lcall
cli
in
pop
cmc
xchg
and
or
pop
xchg
push
out
xchg
out
loopne
stc
js
fldl
imul
incl
mov
mov
in
mov
insb
xchg
popf
pop
daa
dec
cmpsl
push
sub
jae
mov
pop
cmp
ret
daa
mov
cmp
loop
jp
add
movsl
xor
cli
adc
pop
sbb
cmpsl
sub
aaa
ss
or
negl
out
xchg
dec
fs
iretw
jmp
push
mov
rcl
jbe
adc
lods
or
push
insl
lods
dec
sub
mulb
lea
aad
sarl
push
popf
mov
insl
orb
xchg
cmp
in
jb
or
fs
icebp
pop
sbb
pusha
in
cmp
dec
pop
pop
jecxz
pop
repnz
xchg
rcl
or
stos
cmp
outsl
cmpsl
in
inc
in
hlt
repnz
hlt
sub
mov
dec
roll
dec
mov
cmpsb
and
sahf
popf
push
cmp
inc
and
test
xor
push
scas
insl
dec
pop
and
insl
and
iret
lods
xor
es
imul
into
repnz
push
imul
rcrb
dec
cmpsl
jno
push
insl
dec
adc
test
repnz
iret
fldcw
mov
scas
daa
adcb
xchg
sbb
aaa
mov
mov
mov
or
jmp
int
subl
jle
mov
js
cwtl
cmp
shll
xchg
aam
fistps
mov
dec
mov
aam
xchg
xchg
pop
adc
or
add
insb
scas
rclb
fiadds
push
sbb
dec
jmp
pop
mov
mov
mov
dec
adc
mov
mov
cmpsb
and
sbb
push
or
and
jge
pop
sbb
adc
add
pop
popf
xchg
inc
sub
inc
add
mov
inc
xchg
les
jge
mov
fcomp
je
dec
push
cmp
aaa
mov
cwtl
lods
mov
jbe
fildl
cmp
adc
push
pop
dec
pop
mov
pop
sbb
pushf
mov
dec
bswap
movsb
shr
pop
mov
or
jmp
cmp
fiadds
pop
mov
loope
lcall
repnz
jg
mov
pop
fistl
fidivrs
add
cmp
stos
out
cmp
loope
and
xchg
popf
push
adcb
and
mov
xor
daa
inc
mov
sub
sub
cmp
nop
or
adc
inc
sub
ds
xor
fwait
mov
jns
xor
test
jne
lods
pop
pushf
mov
aad
and
sbb
mov
or
sbb
xchg
hlt
mov
dec
sbb
les
test
loop
push
aas
or
xchg
pop
dec
mov
or
push
scas
clc
mov
inc
adc
mov
cmp
js
pop
mov
cmp
out
cmp
call
jno
inc
or
xchg
ja
or
orl
sub
push
mov
scas
std
xchg
cs
sub
rcrl
adc
push
or
cmpsl
cmpsb
mov
xchg
jmp
jnp
inc
mov
scas
xchg
sub
add
push
outsw
lock
adc
daa
mov
gs
sar
fstpl
add
jle
cmp
mov
push
xor
jnp
aam
fnstsw
push
fwait
mov
dec
test
jo
add
or
push
jp
mov
jge
sub
adc
fstl
adc
xchg
add
mov
mov
jl
orb
out
fsubrl
adc
mov
jge
dec
push
das
aad
popf
or
movsl
xlat
mov
int
pop
mov
test
dec
pop
or
inc
xor
out
jmp
mov
bnd
sub
enter
dec
and
adc
jae
push
fwait
add
into
mov
sub
subb
push
xlat
xchg
out
xor
pop
pushf
adc
push
xchg
push
pop
addr16
or
iret
cmp
in
fisubrs
into
out
fwait
dec
in
loope
in
pop
fwait
add
mov
orb
mov
lret
orl
loop
push
sti
pop
pop
sub
sub
inc
xchg
movl
and
or
test
inc
test
xor
mov
pop
in
mov
push
push
and
aad
test
dec
add
inc
cmp
cmp
sub
out
jg
jnp
in
pop
inc
mov
pop
stos
inc
and
testl
inc
mov
int
divl
pop
lods
movsb
xchg
das
jns
data16
or
mov
sub
inc
mov
mov
clc
sti
sub
push
xchg
js
cmc
lret
add
hlt
mov
xchg
repnz
into
and
mov
pushl
shrb
fidivs
lcall
and
jbe
sbb
lahf
mov
out
loope
popf
mov
pusha
mov
or
mov
mov
push
scas
cwtl
pushf
pushf
jne
mov
mov
pop
ds
add
mov
push
les
mov
out
mov
adc
lock
xor
jo
test
ret
inc
pop
sbb
in
push
dec
sbb
jns
push
call
insb
jle
rolb
aas
adc
fistl
stos
test
pusha
hlt
sbb
push
sub
and
fnsave
mov
add
ja
jne
out
orb
int
and
outsl
xor
and
pushf
dec
cmp
fwait
add
stc
pop
sarl
outsl
aas
cmp
jns
stc
mov
aas
jb
jb
cmp
pusha
sbb
cli
adc
test
pop
xchg
cmp
jno
jb
out
out
push
jns
jmp
sbb
xchg
dec
mov
xchg
out
ret
frstor
or
mov
hlt
mov
ret
sbb
lret
or
test
adc
stc
std
mov
loope
jg
cli
push
sbb
mov
xchg
xor
adc
and
jae
jmp
or
sub
icebp
and
xor
push
fcmove
jne
notl
sahf
std
sbb
dec
cld
add
shl
arpl
fidivrs
lcall
push
dec
pop
cmp
das
mov
lcall
data16
roll
inc
xchg
bound
imul
cmp
xor
das
xchg
cs
cmp
addr16
jg
pop
adc
pusha
mov
mov
push
or
dec
xor
dec
gs
xor
sti
jge
loop
push
mov
xchg
or
popa
jno
call
xlat
xor
in
push
adc
cmpsb
cmc
fdivrs
mov
pop
neg
and
call
int3
pop
adc
das
cltd
cmpw
jbe
out
mov
rcl
repnz
arpl
mov
or
out
pop
xor
and
push
mov
adc
sbb
mov
dec
xor
fldenv
out
mov
iret
cs
gs
mov
in
sbb
repnz
daa
sub
sbb
bound
fiadds
push
repz
jmp
cld
sbb
sub
outsl
cmpsb
aam
rorb
and
cwtl
dec
add
repnz
mov
call
pop
andnps
out
insl
dec
clc
xchg
or
imul
cmp
stos
in
jge
jl
jne
inc
into
in
sarl
xor
lds
clc
xor
fildl
stos
mov
cmp
sbb
ss
inc
shl
and
jmp
xor
mov
mov
pop
out
aam
jbe
test
lock
pop
pop
loope
out
xor
cmp
aaa
jmp
jae
push
add
call
or
sub
cmpsb
cmp
sbb
roll
push
push
jne
jbe
and
sub
iret
ss
pop
es
cmc
and
add
cmp
cmpsb
adcb
add
cmc
mov
aam
in
sub
cld
xor
subb
les
xchg
xchg
xlat
repnz
mov
movsl
testl
add
adc
sarl
inc
mov
xchg
outsb
add
orb
cmpsl
sbb
xor
sysret
xor
jl
xchg
xor
mov
and
mov
test
push
jns
sar
adcl
not
mov
ss
stos
sub
adcb
xor
mov
push
bound
ret
push
leave
xor
fidivl
dec
mov
mov
clts
popa
pop
je
lret
dec
mov
xor
xchg
xor
xchg
nop
xor
or
pusha
call
xchg
pop
aas
stos
arpl
mov
cmp
rcrl
es
mov
das
xchg
inc
xchg
cwtd
cwtl
out
xchg
mov
cwtl
stos
mov
xor
cmp
add
or
cli
cli
adc
popf
insl
xchg
add
cmp
sbb
cmp
sub
insl
push
cmp
sbb
xchg
mov
movsl
mov
leave
inc
pusha
scas
sub
loope
pop
mov
mov
imul
mov
push
rcll
jbe
movb
mov
add
jae
repz
cmpsl
aad
dec
js
iret
push
out
std
les
mov
dec
inc
les
mov
or
lret
or
enter
sub
mov
pop
ss
aas
scas
cmc
call
pop
cld
inc
xor
jp
mov
fwait
jo
lahf
sub
mov
pop
xor
mov
sbb
ss
pop
mov
outsb
sahf
jns
dec
mov
pop
xor
or
jge
jge
loop
mov
popf
jp
push
xchg
xor
mov
adc
je
push
mov
in
cmp
iret
ja
mov
addb
add
std
mov
xchg
cmp
sbb
mov
test
or
sarb
or
cwtl
shll
and
sbb
test
add
smsw
jg
iret
jne
xchg
sarl
pop
bound
cmp
and
or
out
in
jle
mov
add
push
cmp
add
and
push
sbb
lods
rol
cs
pop
test
pop
lods
xor
imul
bound
xchg
inc
js
sub
and
push
add
cmp
call
enter
add
repz
add
push
out
push
lds
sbb
xchg
stos
movsl
pop
leave
xlat
xchg
dec
push
jns
mov
push
push
xchg
and
out
in
sarb
ljmp
test
jmp
pop
cmp
je
inc
clc
pop
fwait
inc
sahf
gs
sbb
push
sbb
out
pop
sub
or
jne
push
jle
call
or
jl
das
mov
das
shl
sbb
xor
cs
add
ud0
xor
js
inc
mov
cmp
lret
jno
frstor
mov
pop
push
popa
mov
pop
int
sbb
out
arpl
inc
lahf
and
xchg
adc
addr16
inc
pop
push
and
jae
and
les
cmpsb
add
testb
sub
pop
adc
popa
mov
jge
ret
mov
icebp
out
fiadds
out
pop
mov
pop
sub
ret
xchg
cltd
stos
sbb
jo
jmp
sub
cmpsl
pop
fs
pop
filds
ljmp
xchg
mov
push
cmp
ss
mov
jns
je
mov
int3
nop
mov
push
adc
xchg
push
cmp
xchg
add
mov
jp
fcomip
in
ret
and
int
in
jae
ss
loope
aam
loope
mov
fdivl
pop
stc
jne
push
test
outsb
in
push
mov
push
int
cmp
sbb
push
gs
mov
scas
movsl
lret
aas
popf
push
fstpt
popf
mov
push
inc
ss
outsb
out
inc
xor
push
mov
popa
rcll
call
shll
cmp
movsb
jmp
mov
xlat
lret
mov
xchg
mov
aaa
mov
dec
and
lahf
inc
jnp
adc
test
dec
std
sub
test
pushf
pop
data16
push
cs
cld
test
and
pop
repz
addr16
mov
pop
rorl
mov
pushf
pop
scas
fnstenv
mov
mov
dec
or
lds
lcall
pop
push
stos
pop
sar
inc
mov
push
cmp
jp
aas
mov
ds
cltd
dec
leave
nop
sub
mov
mov
cld
adc
fnstenv
cmc
inc
jnp
xor
shrl
insl
xchg
stos
mov
sbb
orl
repz
cmc
jbe
ds
enterw
sbb
jb
js
inc
mov
jecxz
je
dec
lea
cwtl
cmp
scas
rcll
and
dec
dec
lea
js
lahf
iret
rcrl
inc
loope
cld
mov
stc
in
gs
cmp
add
enter
mov
sbb
outsl
mov
pop
jl
aam
adc
scas
cltd
inc
call
ljmp
pmulhw
or
enter
in
loop
xor
push
xchg
lock
pop
lahf
popf
out
xlat
rorb
inc
or
ret
out
xchg
test
mov
iret
xor
xchg
ret
sub
inc
stos
jae
das
push
call
mov
xchg
mov
repz
add
outsl
aaa
cmc
jmp
scas
push
outsl
dec
mov
fwait
shl
mov
lds
cmp
jge
push
dec
pop
cltd
mov
ss
push
inc
gs
imul
pop
insb
or
mov
xchg
imul
xor
movsl
xor
fdivrs
xchg
mov
cmp
cmp
loop
je
jmp
lcall
add
mov
aam
repnz
insb
jecxz
dec
jb
repz
icebp
sbb
stos
inc
inc
js
sub
imul
or
mov
mov
push
aas
pop
push
pusha
in
hlt
jecxz
mov
pop
push
lods
mov
mov
inc
xor
pushf
mov
inc
and
fidivrl
add
and
iret
push
in
mov
mov
jp
out
test
sub
push
iret
js
shll
fsubs
jmp
dec
into
jae
xor
mov
or
fimuls
aad
loopne
into
popf
sbb
imul
mov
push
jle
arpl
xor
loop
push
jle
pop
addr16
xor
sahf
in
outsb
outsl
rcrb
inc
and
pusha
cmpl
insb
es
in
dec
out
mull
xchg
or
dec
pop
cmp
jns
lret
cmp
addr16
push
loop
divb
or
mov
xchg
lea
xor
cmpsl
push
sub
pop
outsb
cmp
cmc
push
and
fdivrs
dec
aaa
loope
mov
imul
scas
mov
das
repz
cmp
or
mov
sbb
jne
mov
jg
lret
fbstp
or
sbb
mov
in
add
mov
mov
add
insb
fs
mov
call
push
xor
xchg
or
stos
jne
xchg
cld
pop
sbb
lds
shll
jle
mov
jb
roll
jae
cmp
sbb
je
mov
sub
jbe
dec
adc
mov
clc
push
in
xor
jae
stos
xchg
sbb
montmul
cmpsb
add
push
imul
rcr
add
xor
mov
movsl
pop
lods
mov
push
fwait
and
int
pop
mov
mov
sbb
and
mov
repnz
push
push
pop
inc
test
imul
shrl
enter
lcall
xor
inc
jmp
subl
cwtl
jbe
insl
dec
and
inc
aas
sbb
bound
ljmp
jge
repz
inc
rcrb
xchg
dec
into
xor
jnp
add
popa
into
into
setb
scas
lods
mov
sbb
mov
pop
into
xor
inc
out
inc
aas
sub
stc
lea
lods
xor
dec
test
stos
lcall
jbe
shll
outsb
mov
mov
lds
push
jmp
fmul
xor
mov
fcoml
mov
adc
adc
ljmp
jle
dec
mov
gs
pop
xlat
mov
fsub
mov
sub
aaa
movsb
dec
push
lock
inc
dec
jmp
jmp
mov
add
mov
jmp
lds
ret
mov
adc
mov
test
loope
aas
movsl
sub
out
orl
sbb
out
push
in
dec
mov
and
xchg
cmc
sti
cmp
adc
jbe
cmp
subl
popf
push
mov
lea
loop
adcb
insb
dec
cmc
in
and
in
nop
dec
and
out
repnz
es
and
cmovg
push
lea
inc
sub
std
orb
lret
lock
xor
sub
clc
push
repz
push
mov
aas
bound
xchg
pop
pusha
leave
inc
ret
pop
das
add
mov
pop
in
mov
incl
aad
cmp
mov
cwtl
shl
test
push
dec
xchg
sub
jg
cmpsb
inc
mov
cmc
adc
sbb
jge
les
shr
push
xchg
sbb
insl
mov
jo
andb
ret
and
jns
dec
out
stos
push
and
popa
aas
xchg
mov
xlat
mov
mov
les
or
fildll
sarl
mov
cmp
mov
sbb
add
fcmove
cld
cmp
int
out
shrl
imul
jp
insl
and
and
push
arpl
sbbb
lods
push
int3
sti
loopne
sbb
pusha
nop
xchg
and
jns
cmpsb
sahf
mov
adc
mov
mov
and
jp
cld
and
and
jb
and
adc
dec
rcrb
dec
movsb
mov
adc
out
sub
push
in
aad
and
xor
test
adcb
int
jmp
je
lahf
ss
adc
outsb
sub
push
jmp
lock
xor
jg
lea
ret
out
jnp
shlb
push
push
lods
jge
ja
out
add
inc
mov
xor
lock
cwtl
fnsave
adc
mov
shr
dec
fiadds
jp
imul
or
cmc
xor
or
rorl
or
rorb
imul
add
lds
fldenv
cmpsl
sub
mov
aaa
fisubrs
xchg
shlb
shll
sub
sub
sub
mov
mov
mov
push
movsb
pop
stc
jb
mov
and
shl
jp
daa
int3
sbb
rolb
push
repnz
push
lods
jmp
jge
mov
popf
sub
dec
insb
lret
sahf
cs
fdivs
mov
jno
and
cmp
in
movsb
negl
sub
dec
and
xor
ds
fildll
je
mov
and
push
push
loope
xor
sub
fisubrs
btr
cmp
xchg
pop
sub
leave
inc
dec
push
add
mov
jbe
lods
nop
daa
out
xchg
push
mov
sarb
popf
ret
es
mov
jo
lret
iret
sbb
inc
jmp
sbb
movsl
sbb
mov
ret
enter
push
ljmp
out
xor
ret
jns
mov
cld
jb
popf
hlt
test
in
outsl
lea
xchg
stc
mov
mov
sub
pop
in
inc
insl
in
add
mov
xor
aam
inc
lahf
leave
and
mov
dec
pusha
call
data16
notl
negl
out
fsubp
xchg
and
mov
das
push
cmp
fisttpll
cltd
sarl
push
cmpsl
push
test
cwtl
mov
idivl
sti
mov
xchg
mov
cs
and
pop
adc
icebp
cmp
dec
hlt
ljmp
mov
mov
imul
adc
mov
ja
xchg
imul
mov
mov
cmpsl
daa
inc
shlb
adc
mov
inc
adc
cvtps2pi
add
mov
push
add
adc
test
arpl
add
pop
push
sbb
dec
in
jge
push
stc
or
dec
clc
jne
out
fsubs
push
in
mov
jne
aaa
mov
xor
push
das
mov
mov
mov
icebp
test
popa
push
imul
testl
cmp
sti
mov
mov
dec
or
insl
xchg
jg
test
mov
jge
xor
or
cmpsl
xor
loopne
cld
jle
jg
cwtl
cmpl
addr16
les
scas
test
cmpsl
cmpsl
cmpsb
or
stc
imul
lret
xlat
fstpl
notb
int3
js
pushf
divb
stc
jge
out
cs
loope
mov
rolb
les
lret
popa
out
sti
push
hlt
push
add
fbstp
adc
data16
fadds
stos
mov
xchg
xchg
sub
je
out
ss
mov
push
das
shr
popa
xor
xor
jo
pop
jge
adc
jmp
loope
int
sub
jae
cmp
jno
clc
push
inc
mov
das
xlat
sbb
arpl
sub
repnz
cwtl
and
adc
bts
scas
sub
js
mov
fcoms
add
arpl
roll
sti
and
or
mov
loopne
xchg
sub
jg
test
enter
mov
pop
ds
adc
jae
or
sbb
and
rcr
sub
sbb
push
das
pop
add
in
mov
push
aad
stos
push
call
and
jg
mov
rol
xchg
mov
in
or
mov
or
jmp
jo
outsl
mov
pop
jbe
fs
repnz
inc
push
sbb
shll
push
sub
mov
and
and
pop
mov
jae
lret
out
cli
add
push
push
mov
push
jb
inc
sahf
or
jle
insb
out
mov
xor
fidivl
sub
mov
push
mov
xor
flds
sub
mov
pop
shl
adc
in
aad
mov
jae
inc
leave
and
je
fidivrl
add
int
test
adc
mov
mov
out
mov
fdivl
fisubl
fists
jmp
push
dec
bound
mov
inc
loop
xchg
addb
or
cmc
cmpsl
js
mov
xchg
imul
into
loopne
ja
loop
insb
add
inc
mov
aad
inc
rcrl
out
push
jp
ds
repnz
rcrl
int3
in
cmpsl
dec
arpl
or
pop
in
pop
inc
pushf
loopne
mov
daa
les
xor
cltd
roll
xchg
leave
addr16
fbld
mov
fsubrs
and
mov
cs
mov
aam
dec
jge
mov
sub
stos
rorl
int
loop
scas
add
xor
gs
push
idivb
mov
aaa
push
outsb
add
aas
push
in
lret
mov
fiaddl
jle
pop
shll
cmpl
or
push
ja
scas
fisttpll
int
dec
sub
fcomp
loop
out
add
jnp
mov
xor
push
enter
addl
xor
lcall
subl
mov
fiadds
mov
pop
or
movsl
sbb
lods
sbb
xorb
mov
push
push
mov
lods
sub
and
addr16
out
xchg
add
xchg
sbb
flds
and
xchg
in
jmp
sbb
xor
out
xchg
adcl
fstpl
lock
adc
lock
cmp
aam
test
mov
push
out
inc
scas
popf
pop
inc
jl
mov
lea
or
data16
xor
ret
js
mov
test
shl
xchg
and
out
clc
pusha
sub
movsb
mov
ret
bnd
idivb
fprem1
jle
jl
pop
and
dec
std
fsubrs
rcrb
sarl
push
adc
and
divb
sub
call
and
add
or
adc
or
repnz
in
lret
fldcw
int3
popf
sbb
sbb
push
dec
mov
mov
pushf
imull
xchg
push
inc
xchg
outsl
std
sarb
popa
scas
xor
sbb
mov
insl
mov
mov
sbb
or
aam
mov
mov
xchg
push
ljmp
jle
push
add
sbb
xchg
aaa
call
xchg
test
test
and
popf
lods
cmp
push
dec
xchg
cmp
mov
adc
mov
hlt
pop
sub
scas
mov
cmpsb
dec
adcl
xlat
push
or
jo
xor
and
pop
push
dec
mov
mov
push
add
mov
jecxz
ljmp
dec
xchg
pop
mov
xchg
jecxz
lret
sub
mov
movsb
sbbl
mov
cmp
jmp
add
lret
repz
into
movsl
pop
pop
xchg
jb
cmc
ficompl
loopne
mov
outsl
bound
pusha
cmp
in
pop
ret
sub
roll
xchg
fdivrs
add
add
loop
sub
imull
cmpsb
int
stos
mov
test
cmp
and
xchg
popa
push
cmpsl
data16
cmpsl
test
bnd
nop
dec
pop
jl
dec
xor
stos
aaa
cli
cmp
cmova
rcrb
pushf
jge
jl
out
pop
lods
insb
rcrl
cmp
ret
dec
jae
and
add
jge
cwtl
mov
fstpl
and
test
incb
inc
xor
lahf
mov
mov
adc
jbe
cld
out
mov
and
aaa
fwait
lret
sub
rclb
lds
pop
xchg
call
pusha
mov
jno
xor
punpckldq
shll
dec
sub
push
leave
mov
ds
pop
sbb
pushf
mov
ret
fst
mull
out
gs
sub
sahf
andl
jl
dec
fistpll
cs
jl
xchg
push
sbb
mov
cmp
int3
mov
or
loop
loop
xor
shlb
mov
cld
das
or
fistpl
sbb
dec
inc
div
push
in
clc
xchg
pop
je
nop
int
aad
mov
xchg
and
fcoml
jge
loopne
mov
gs
lahf
cmp
cmpsb
data16
jne
repnz
scas
jp
adc
orb
sahf
jmp
jno
add
call
lods
xchg
dec
cmp
fimuls
mov
icebp
dec
test
dec
inc
dec
out
aaa
popa
push
mov
loopne
in
insb
or
int3
xchg
add
into
push
push
and
dec
or
outsl
adc
sbb
jno
dec
xchg
jecxz
xor
shll
rcrl
adc
lock
cld
xchg
fmulp
xor
popa
out
jmp
xor
enter
mov
mov
je
push
out
push
mov
mov
lret
stos
jge
sbb
or
jg
add
cmp
inc
or
lret
xchg
out
ret
jae
shrb
mov
inc
xor
inc
jae
and
movsl
shll
rclb
sbb
aam
mov
mov
rolb
shr
ljmp
loopne
cmp
aam
sub
and
inc
or
sub
cmp
push
out
and
loope
mull
mov
add
outsb
sub
pop
sbb
pop
fimuls
inc
aad
int3
inc
loopne
loop
xor
and
cmp
aaa
imul
popf
outsl
pop
outsl
ja
daa
aam
inc
xchg
cli
ret
push
inc
repnz
adc
lods
fisubl
add
pop
sub
ret
je
sbb
loop
xlat
pop
idivb
inc
lcall
imul
or
into
pushf
rorl
in
fldt
subl
jle
ds
notb
leave
cwtl
sub
loopne
movsl
jl
repz
mov
cmpsl
mov
call
adc
cmp
subb
cmpsl
dec
or
mov
push
mov
xor
or
xor
inc
imul
push
or
jne
inc
sub
inc
sbb
cld
jb
xchg
jp
or
sahf
mov
idivb
add
xlat
cltd
cmp
dec
or
pusha
mov
ret
pop
outsl
xchg
and
cmp
pop
sbb
cmp
mov
ret
push
loop
scas
dec
mov
jb
sbb
fsubr
rcrl
shll
mov
dec
in
out
fstl
jb
lds
frstor
sbb
dec
add
inc
imul
rcrb
and
cmpsl
pop
test
sbbb
test
add
popf
out
sub
push
stos
jae
jge
cmp
xor
fistpll
lea
lret
push
lods
enter
cmp
ss
cmpsl
and
cmp
stos
add
xchg
sbbl
dec
lea
nop
scas
adc
pop
pusha
jge
loopne
pushf
out
popf
cmp
call
jg
sub
adc
inc
mov
mov
data16
inc
mov
mov
addr16
insb
sub
in
mov
out
xorb
push
pop
je
pop
shl
sbb
test
inc
lcall
into
xchg
out
dec
sar
adc
movsb
jecxz
lret
mov
sub
sahf
fcompl
call
loop
jle
mov
cld
jbe
dec
sbb
test
mov
pop
cltd
jmp
andb
aaa
outsl
and
sub
sbb
movsl
sbb
xlat
jg
in
nop
sbb
fdivl
mov
mov
sbb
fimuls
in
inc
adc
fdivs
stos
dec
pop
cmp
sub
pop
mov
ja
pop
cmp
sub
mov
push
pusha
shrl
fiadds
pop
jmp
sbb
fdivs
in
stc
dec
ret
mov
sub
movsl
mov
in
outsb
and
rorb
fsts
shlb
fdivp
cmp
or
loope
in
into
mov
popa
test
sub
sbb
cmpsb
pop
dec
lahf
cmp
lds
ljmp
in
loope
scas
mov
adc
or
mov
cld
pop
imull
sbb
cmc
jbe
mull
fs
outsl
mov
jle
in
pusha
mov
add
ror
leave
lret
fisttpll
xchg
int3
fiadds
pop
cmp
mov
pop
ret
mov
imul
adc
sarl
mov
sbb
addl
pusha
or
add
mov
insl
xor
add
les
dec
ljmp
lock
test
lret
dec
push
punpckhdq
lret
fs
mov
jo
inc
pop
pusha
sub
lret
mov
pusha
pop
push
jno
push
sahf
arpl
xchg
scas
mov
fwait
xchg
add
movsb
lret
scas
push
sub
in
and
cmpsl
sbb
jne
adc
ds
push
das
decl
jmp
ficompl
jge
push
push
mov
shl
lock
aam
push
ss
xchg
cwtl
fs
add
push
ret
nop
ljmp
in
sarb
inc
hlt
mov
xlat
sbb
xor
inc
cwtl
gs
pop
ret
pop
pop
into
jg
pop
mov
pushf
adc
mov
mov
dec
lods
insw
and
cmp
std
insb
and
mov
inc
adc
mov
int
and
fistpl
adc
cmp
sub
into
aaa
jg
dec
pop
ss
in
cwtl
or
leave
sbb
sbb
outsb
add
xchg
ja
mov
jge
inc
addr16
movsl
mov
xchg
or
lock
jl
test
stos
lret
insb
mov
xor
or
pop
stos
int
aad
jp
cli
ret
cmp
xor
jl
or
jl
add
es
gs
int
arpl
in
sahf
fwait
jo
or
loopne
call
sub
mov
rclb
pop
cld
fistps
xchg
pushf
imul
xor
xchg
test
pop
je
hlt
inc
cmc
clc
mov
or
sbbl
sbb
ljmp
fmuls
fistpl
pop
les
mov
insl
mov
comiss
sbb
jecxz
mov
movsl
divb
pop
imul
xor
std
imul
or
lret
cmpsl
xchg
int
sbb
std
insb
sti
leave
je
lcall
adc
xor
ja
or
insl
into
pop
push
aas
rol
sahf
jne
jl
ret
mov
es
es
jne
xlat
mov
lea
jle
sti
add
enter
adc
mov
sub
sbb
mov
mov
pop
jne
push
fwait
or
jle
jae
push
push
pop
cmp
xchg
inc
out
add
lret
and
dec
shr
push
xor
fwait
clc
jecxz
xchg
insl
fistps
dec
orl
xor
insb
into
mov
xchg
xchg
jns
test
lds
lds
int
dec
mov
cs
test
pop
dec
cli
aad
ret
xor
inc
mov
pop
xor
pop
add
mov
mov
push
aam
xor
int3
mov
std
std
or
xchg
scas
xchg
add
ja
cwtl
daa
add
pop
fsubl
stc
stc
clc
jno
inc
ss
dec
and
imul
in
add
lahf
cmp
daa
imul
pop
jo
push
stos
mov
fistpll
inc
xor
dec
std
adc
cmp
xchg
in
bound
and
pusha
jmp
add
aaa
adc
lods
add
mov
mov
or
rcr
mov
jle
mov
mov
mov
sbb
les
imul
sub
lret
mov
fwait
call
pushl
shll
stos
pop
fisubrs
movsl
ljmp
jp
jns
push
mov
mov
cmp
mov
mov
popf
jg
or
bound
pop
xchg
popf
int3
push
frstor
xlat
test
std
rcr
adc
sub
adc
push
movsb
jmp
inc
orl
mov
mov
mov
out
js
cli
adc
push
jo
jmp
push
jmp
ds
push
inc
jns
jle
mov
adcl
cli
pop
out
mov
lock
movsl
mov
pop
iret
jb
inc
xor
addr16
adcb
jo
imul
inc
add
or
push
mov
mov
leave
xchg
sahf
hlt
repnz
icebp
scas
push
cmp
out
dec
loop
cmp
push
imul
jmp
ret
or
pop
jmp
bound
pop
mov
enter
xlat
jno
sbb
xor
cmp
jg
pop
adc
cmc
xor
and
xor
lahf
int3
fs
sub
push
ja
jmp
ja
add
cmp
xor
in
mov
sub
cld
dec
stos
or
xchg
nop
popa
or
in
stc
xchg
and
repnz
shrl
jp
mov
jnp
sub
xchg
adc
xchg
mov
call
mov
test
pop
daa
test
daa
xchg
scas
jge
roll
push
fimull
js
cmp
push
fcomps
push
addl
enter
pusha
dec
fistps
or
sbb
daa
stos
stos
out
test
roll
enter
stos
leave
cs
ret
stc
mov
stc
dec
and
push
sahf
lds
repnz
repz
dec
mov
xchg
add
gs
lret
mov
mov
jecxz
in
adc
js
lahf
inc
jbe
cmpl
mov
stos
jo
dec
sub
jno
loopne
mov
jne
mov
push
test
push
jle
aam
xchg
cmp
mov
pop
scas
dec
pop
add
jnp
push
mov
cmpsl
repnz
mov
cli
je
jns
loope
xlat
mov
xchg
cld
xor
mov
push
data16
cs
js
dec
call
xor
cmp
xor
dec
gs
jns
inc
shlb
int
data16
fstps
mov
ljmp
jmp
jne
data16
jae
icebp
adc
jecxz
xchg
adc
aaa
pop
aaa
mov
xchg
out
push
push
loope
imul
std
inc
push
or
in
mov
js
or
lods
lret
out
out
jb
adc
xchg
sahf
pop
mov
sbb
int
sub
sahf
inc
cmp
cwtl
out
adc
adc
or
sti
add
sti
xchg
fs
arpl
mov
out
loope
dec
fstpt
xchg
std
push
jge
bound
jnp
test
loopne
mov
jno,pn
imul
add
mov
lret
mov
jmp
into
dec
sub
cmp
enter
fsts
das
inc
inc
push
sub
sar
dec
movsl
xor
push
adc
stos
aaa
and
repnz
and
push
sub
mov
imul
ficomps
ljmp
int
icebp
add
lock
lods
lods
out
fidivl
jne
mov
loop
hlt
test
shll
out
mov
daa
jns
enter
cmp
data16
sub
sub
push
mov
notb
cld
repnz
push
test
int
push
cli
nop
inc
push
inc
jp
sub
int3
lcall
xchg
sbb
or
sub
jno
outsl
pop
pushf
repnz
xchg
sub
cmp
xor
jle
lcall
lahf
addr16
test
pop
ret
jl
inc
mov
xor
mov
lds
mov
mov
hlt
fs
andl
ret
xchg
dec
daa
in
and
and
adc
jno
fisubrs
out
mov
push
jmp
adc
nop
jmp
mov
pop
outsb
pop
xor
sahf
push
sar
push
lods
divb
jg
dec
insb
cltd
and
sbb
push
pop
mov
js
pop
inc
mov
pop
jp
push
out
jno
mov
sbb
out
xchg
mov
mov
xor
inc
pusha
pop
scas
movsb
enter
ljmp
adc
ljmp
jae
sub
sbb
jge
xor
cs
aad
push
cltd
mov
push
add
dec
or
fldl
xor
fs
shr
ljmp
mov
into
enter
lea
in
mov
iret
add
push
fadds
insb
mov
xchg
jp
in
lock
sbb
mov
inc
jg
inc
cltd
adc
jmp
nop
cmpsl
enter
push
inc
mov
mov
cli
fmuls
insl
cmp
clc
pop
lret
xchg
jbe
in
mov
scas
mov
xor
pop
rcrb
mov
mov
cmp
mov
mov
jno
je
dec
push
repnz
lret
inc
adc
aam
lcall
ds
inc
jae
gs
pop
addr16
sub
xor
inc
jne
lods
push
add
xchg
xchg
nop
adc
aaa
push
push
sbb
jne
xchg
pop
xor
or
mov
xchg
cmp
sahf
ljmp
adc
cmp
xchg
and
aad
mov
stos
rcll
enter
fistpl
pop
pusha
loop
scas
sti
adc
mov
xchg
call
dec
inc
lods
shl
jns
push
fistpl
cmpb
ljmp
xor
bound
dec
cmp
push
repnz
mov
or
aaa
clc
repz
fs
test
pop
ret
jnp
cmpsb
xor
scas
inc
push
sbb
lcall
mov
fisubl
imul
add
lcall
into
ljmp
cmp
enter
xchg
mov
mov
int
lods
test
hlt
outsb
ljmp
sti
dec
notl
bound
stos
xor
sub
pop
mov
gs
cmp
bound
insl
outsl
mov
call
in
incl
push
loop
mov
lock
mov
cmp
sbb
inc
repz
into
mov
or
ljmp
push
test
push
sub
notl
inc
push
jecxz
jmp
das
pop
sarl
cmpsl
pop
dec
pop
inc
adc
cmpsb
and
aas
lret
ja
push
cld
add
aam
iret
hlt
push
pop
test
arpl
fcmovu
fsubs
push
int3
orb
jno
push
mov
nop
pop
inc
popl
jno
mov
imull
pop
mov
sbb
mov
pop
pop
adc
add
push
push
or
daa
jp
cmpsb
adc
mov
mov
repz
bswap
push
jmp
sbb
or
mov
insl
jae
push
cmpsb
cmp
ja
ss
jne
arpl
adc
fwait
xchg
loop
push
and
fstpt
aad
loopne
dec
pusha
add
mov
inc
pop
sub
aam
cmpsb
mov
jno
lret
cmpsb
inc
and
iret
out
mov
adc
xchg
movsl
push
cltd
xlat
xor
jg
cmp
shlb
pop
mov
ss
inc
in
mov
xchg
add
adc
test
call
fdivs
pop
out
orb
mov
cmp
std
out
imul
adc
xor
jl
loope
jo
push
jae
push
fistpl
imul
and
fmull
xchg
test
sbb
test
mov
cmp
lds
adc
jl
sbbb
fsubp
ja
xchg
adc
mov
pop
dec
lret
pop
or
pop
and
mov
pop
test
jns
mov
jo
lods
in
leave
cmp
add
pop
inc
cmpsb
jecxz
sub
and
daa
sbb
pop
cltd
shlb
repnz
xchg
cwtl
outsb
and
dec
jp
int
mov
arpl
cmpsl
lock
mov
lea
pop
cmp
adc
jns
dec
xchg
arpl
mov
movsb
mov
lods
jae
sbbl
outsb
pop
push
mov
push
aad
and
sti
xor
mov
or
imul
mov
and
aas
sbb
jo
mov
pop
jge
push
repnz
out
je
aaa
inc
bound
lret
sbb
xchg
inc
or
inc
hlt
ret
fcoml
push
mov
sarb
inc
arpl
ret
inc
push
jo
mov
test
aaa
cwtd
and
xor
xor
loopne
xchg
sbb
push
in
mov
mov
cmc
push
adc
ret
std
testl
int
loope
jg
addr16
or
cmp
out
mov
sarb
or
jns
imul
sbb
push
jle
inc
mov
hlt
lea
lahf
add
bound
shrl
in
scas
sti
mov
push
cs
xchg
mov
negb
sub
les
or
arpl
push
stos
outsb
aad
jb,pn
jnp
adc
mov
pop
shl
rclb
push
xorb
enter
incl
and
dec
popa
scas
popf
mov
xlat
mov
loopne
pop
fistps
fnsave
leave
hlt
sbb
inc
xor
dec
jns
mov
mov
in
add
xor
roll
ljmp
add
nop
aad
inc
and
fisubrs
lahf
inc
pop
mov
push
jns
mov
imul
shrl
movsb
inc
cwtl
fcmovnbe
test
stos
jl
sti
sub
inc
add
xchg
jo
jae
fiadds
dec
lds
and
or
dec
movsb
and
pop
push
mov
outsl
addr16
push
mov
addr16
and
nop
cwtl
xor
xor
stos
cmpsb
push
out
xchg
mov
mov
sbb
xchg
stc
paddusw
imul
mov
inc
cmp
aam
outsb
sarb
icebp
cmp
dec
pop
sbb
clc
into
or
lahf
sbb
imul
repz
ret
mov
push
xchg
push
mov
je
push
xchg
mov
push
cmp
xchg
push
jne
in
mov
sub
push
mov
xor
mov
jo
dec
mov
sbb
fstps
xor
aam
je
and
je
sbbl
dec
loope
dec
inc
jno
cmp
add
or
mov
sbb
push
pop
iret
jle
and
cmp
je
outsb
imul
jecxz
add
cltd
sbb
push
xchg
les
jb
out
out
mov
call
add
out
insl
mov
scas
loopne
dec
mov
gs
xor
stc
pop
lahf
xchg
ficoms
push
push
push
xor
jbe
adc
shll
aad
cwtl
inc
mov
rorl
add
daa
pop
jae
lods
mov
mov
shlb
jecxz
stc
jns
jnp
mov
sbb
jns
in
inc
add
and
xchg
and
imul
jnp
shr
cwtl
mov
jb
mov
aad
mov
das
or
int3
lock
faddl
cmpsb
inc
push
adc
push
push
xchg
movsl
jecxz
das
sbb
insb
or
iret
sbb
add
cmp
shll
cmp
lret
fwait
addr16
lods
notb
jge
jmp
mov
loope
test
gs
clc
mov
psrlq
outsl
mov
xchg
ret
es
ja
or
daa
arpl
cwtl
data16
cmp
and
mov
push
cmp
dec
and
mov
xchg
adc
mov
sti
loop
mov
subl
jae
scas
fs
or
cltd
cmpsl
mov
aad
pop
mov
push
icebp
add
jecxz
fsubl
mov
mull
inc
cmpsb
push
imul
jge
adc
jmp
pusha
add
out
dec
fnstenv
jge
inc
lea
addl
imull
mov
ljmp
sarb
and
dec
add
add
pop
sbb
aad
ds
loop
std
cmpl
xor
mov
ja
cmpsl
inc
aam
fwait
push
mov
andl
in
adc
sbb
loopne
xor
outsl
push
push
adc
fsubrs
andb
gs
outsl
mov
mov
lahf
mov
sahf
and
jno
inc
fcompl
sub
xchg
jmp
adc
fstpt
shr
test
icebp
subb
popa
xchg
in
ja
pop
jle
adc
sbbl
fwait
mov
enter
or
jns
inc
inc
ss
movsb
jecxz
or
dec
fldenv
lret
in
addr16
inc
inc
jl
push
lds
mov
gs
inc
ret
sub
ds
push
enter
aas
out
dec
add
sub
sti
rcrb
sahf
loope
shlb
adc
push
fiadds
jecxz
push
mov
sbb
loopnew
mov
inc
mov
push
fnstsw
dec
andb
je
sub
inc
mov
lcall
orl
and
sbb
js
in
test
lret
popa
push
jb
lcall
cmpsb
sbb
cmp
dec
mov
add
mov
and
xchg
mov
mov
push
xchg
cmp
xchg
stos
mov
inc
scas
push
inc
mov
movsb
je
xchg
add
insb
sub
test
pop
mov
cmp
push
push
int3
mov
cmp
or
nop
adc
cmp
or
and
push
inc
aad
inc
in
popa
out
jle
roll
xchg
movsl
pushf
xor
arpl
inc
sahf
cs
pop
push
pop
pusha
dec
jb
insl
jne
ret
push
adc
jnp
mov
sbb
push
iret
push
or
xchg
lea
add
ljmp
mov
lret
push
ds
cmp
sub
sbb
int
sub
sub
cwtl
xor
push
cmpsb
rol
xor
test
push
push
test
inc
insl
dec
fimuls
dec
into
xchg
fcomp
shll
cmp
or
xor
mov
sbb
sbb
out
std
xlat
xor
xor
fbld
push
std
ss
mov
stos
scas
fdivl
push
cld
sbb
scas
loop
mov
test
sbb
cmp
or
mov
sub
loope
push
sti
ss
sbb
push
pop
mov
adcl
xchg
cmp
pop
cmp
fnstsw
pusha
dec
push
dec
sti
test
es
mov
adc
int
sti
inc
and
dec
dec
in
lods
add
out
or
inc
and
rcrb
nop
js
jnp
xchg
jb
repnz
sbb
cmpsb
out
or
movl
ljmp
mov
mov
popf
push
pop
js
adc
pop
sub
fsub
rol
xchg
in
adc
sub
adc
js
lret
fisttpll
inc
cmp
sahf
scas
mov
pop
and
loope
insl
mov
cmp
push
sbb
int3
cs
dec
cld
fucomip
dec
or
ficompl
fstpl
and
fdivrs
lock
and
nop
jno
ret
mov
leave
scas
fimull
fcompl
add
adc
mov
sarl
pop
dec
cmp
mov
dec
hlt
xor
lods
or
lret
repnz
adc
clc
mov
jecxz
xchg
pushf
nop
cwtl
xor
add
adc
lret
mov
andl
pushf
mov
pop
adc
cld
xor
movsl
idivb
add
cmp
fiadds
dec
je
pop
jne
es
cmp
pop
scas
call
icebp
scas
sbb
aaa
pop
push
inc
inc
mov
jbe
int3
pop
gs
fsubr
cmp
add
fs
imulb
mov
mov
push
cmpsl
push
xor
test
into
aaa
pop
push
mov
movsb
add
ret
mov
arpl
mov
fsub
mov
add
les
test
dec
and
decl
cmpsb
mov
pop
in
loope
inc
jnp
mov
dec
pop
lahf
call
push
inc
icebp
or
test
mov
popa
loope
loope
mov
in
lods
mov
and
pop
insb
ret
in
or
mov
test
pusha
fnop
in
dec
loopne
adc
mov
stos
cmp
shrb
cmp
mov
inc
push
popf
jo
xchg
xchg
sahf
xor
push
cmp
das
aam
das
pop
adc
push
push
mov
negl
popf
jnp
or
fsts
or
and
xchg
ret
sub
cli
mov
dec
dec
pop
add
call
shll
push
movsl
cmpsl
js
and
scas
call
out
jnp
sbb
xlat
stos
jg
mov
iret
les
sbb
test
sbb
test
insl
xchg
jae
dec
cld
jg
in
push
sbb
ja
movsb
xlat
clc
stc
sub
arpl
pop
scas
arpl
sbb
xchg
pop
sub
das
jp
test
repnz
leave
pop
jno
add
xchg
jae
dec
iret
fistpl
adc
out
adc
cld
push
cmp
ret
test
xlat
and
aas
push
jns
jg
cli
adc
les
lret
stos
dec
test
mov
push
pop
jp
cmp
lock
adc
jmp
inc
push
fistl
jno
sub
xchg
dec
int
orl
cli
or
lock
dec
jo
lods
inc
out
mov
and
into
pop
xchg
mov
pusha
mov
addr16
fldcw
or
push
add
dec
adc
xchg
jmp
cwtl
mov
enter
fmuls
cwtl
ret
pushf
mov
addr16
mov
dec
xchg
jb
dec
icebp
mov
data16
call
andb
insb
ja
mov
dec
dec
nop
mov
sub
mul
add
push
icebp
sarb
test
lret
dec
dec
roll
rol
or
push
sahf
lahf
cmp
clc
pop
or
xchg
leave
mov
push
and
incb
sbb
jl
rcrl
mov
mov
imul
aam
dec
sar
adc
or
ljmp
cmp
ja
mov
push
call
pop
inc
outsb
call
inc
mov
add
dec
mov
orb
add
xchg
pop
mov
leave
lds
push
mov
pop
lret
out
xchg
pop
push
out
pop
jnp
test
dec
ret
mov
dec
lods
xor
xlat
inc
dec
jns
adc
mov
mov
adc
push
push
cmp
adcl
outsl
mov
pushf
push
or
fwait
stc
insl
mov
cli
ficomps
data16
fiaddl
bound
and
push
je
ljmp
xor
xchg
popa
sbb
pop
xchg
push
push
push
cwtl
cmp
inc
ja
ss
iret
mov
aaa
mov
pop
js
jb
sbb
sbb
das
dec
mov
outsl
xor
or
mov
inc
pushf
dec
and
enter
sub
xchg
sahf
pusha
mov
add
in
insl
sbbl
pop
pop
loop
aam
or
mov
mov
int3
daa
popf
imul
cmp
rol
mov
push
push
pop
lcall
lea
movsl
sahf
mov
mov
scas
mov
lret
or
sbb
clc
adc
cwtl
jo
mov
lock
dec
xchg
int
repnz
mov
mov
daa
pop
cmc
fwait
in
in
push
sar
lock
fs
and
fmuls
lret
dec
popf
test
fimuls
in
xchg
jo
sbb
sbb
hlt
mov
push
cmc
popf
insl
in
adc
xor
xor
lahf
adc
fdivrs
jp
and
lods
insb
adcb
jno
or
add
pop
mov
mov
ret
loop
shrb
ret
mov
das
fcmove
and
fimull
outsl
adc
in
sub
fildl
sahf
insb
sub
ljmp
inc
leave
cli
pop
cwtl
jecxz
imull
mov
sub
xor
xchg
mov
mov
sbb
out
gs
xor
aam
lds
lcall
inc
or
dec
jl
stos
shrb
pop
cmp
cmp
imulb
js
pop
pusha
data16
std
pop
rcrl
lods
loop
shll
fistl
mov
xor
mov
pusha
mov
push
test
sub
sub
and
pop
push
divps
jae
mov
incl
mov
push
or
insb
mov
dec
dec
call
or
subb
in
adc
sti
ja
fxch
data16
roll
cmc
push
inc
imul
mov
jnp
jge
sub
lea
xchg
pop
push
popa
mov
rcrb
icebp
fwait
in
sbb
stos
mov
lcall
sbb
sbb
aaa
cli
and
out
xchg
js
ss
xchg
mov
mov
xor
sub
adc
jmp
loope
rcr
sbb
inc
fstps
fcoml
call
mov
xor
in
sbb
js
mov
cltd
add
pop
js
das
jle
lds
scas
pop
jno
dec
mov
mov
lret
dec
and
or
mov
jae
enter
mov
lods
cs
fsubl
mov
dec
mov
mov
fcmovu
insl
cmp
inc
icebp
loopne
add
aad
lds
popf
cmpsl
pusha
jno
scas
xchg
mov
cmp
lds
stc
shlb
adc
out
imul
ja
dec
lock
mov
mov
daa
cmc
add
sbb
loopne
sbb
fwait
pushl
mov
pop
xlat
movsb
inc
mov
sbb
inc
jae
subl
sbb
jle
sbbl
nop
pushf
or
mov
dec
test
mov
or
out
cmp
cli
or
testb
test
push
push
dec
pop
dec
lds
outsl
lret
adc
push
into
pop
mov
and
jmp
mulb
js
mov
popf
mov
adc
enter
rorb
pop
cmpsl
adc
lcall
stos
aas
push
mov
jns
mov
pop
ret
pop
and
lret
jno
dec
pop
inc
push
in
test
xchg
pushf
sub
idiv
mov
mov
pop
or
rep
cmpsb
and
test
mov
mov
shl
pop
fstpl
lret
int3
ss
cmp
inc
mov
mov
jae
cmp
enter
dec
jmp
push
xor
mov
sub
inc
and
mov
lock
inc
stos
fimull
push
rcrb
jbe
scas
lods
push
push
jle
imul
mov
pop
and
cmp
add
jne
out
sarb
outsl
mov
jb
fmul
pop
add
out
mov
push
shlb
repnz
in
push
add
pop
gs
push
xor
cs
and
mov
jmp
movsb
adc
insl
test
mov
sub
cwtl
mov
dec
call
mov
xor
faddl
cltd
or
jno
fmuls
mov
xor
fimull
xlat
aaa
xchg
push
insb
pop
sub
fists
mov
dec
out
cmp
aam
adc
shlb
sbb
xchg
jl
fisubrl
lea
call
std
in
rclb
pop
xchg
add
mov
mov
sbb
inc
nop
add
movsb
stc
js
and
outsb
add
addl
arpl
and
stos
mov
pop
hlt
les
push
adc
testb
mov
pop
dec
imul
push
bound
lret
xchg
test
add
xorb
sbb
push
cmp
rorl
stos
fcoml
mov
mov
cmp
push
xlat
sti
out
cmpsl
mov
cli
movsb
fists
sub
mov
and
and
leave
shrb
das
movsl
rcrl
xorl
dec
xchg
pop
cmp
adc
mov
stos
cli
iret
clc
outsl
loope
cmp
cmpsl
and
xchg
inc
pop
xor
or
dec
sbb
xchg
arpl
push
leave
ljmp
and
je
mov
loopne
xchg
push
adcl
loopne
xchg
fisttpl
mov
jl
push
or
xchg
inc
mov
mov
adc
out
add
push
xor
mov
sbb
dec
mov
in
stos
test
cs
bound
repz
pop
test
xchg
cmp
dec
stos
sbb
popa
sub
and
push
jno
mov
inc
xchg
and
jl
rcl
das
sar
nop
shlb
stc
xchg
push
adc
cli
mov
loopne
loopne
cmc
mov
lds
sub
and
popa
lods
and
sbb
stos
jne
mov
add
sub
gs
je
daa
repnz
sar
cmp
jae
cmpsb
lcall
scas
xor
rcll
imul
cmpsl
mov
pop
and
mov
pop
inc
outsb
or
and
je
cmc
xor
jl
xlat
jae
and
cmp
sub
in
xor
mov
daa
mov
dec
jecxz
xchg
xchg
mov
leave
jbe
mov
add
jae
mov
dec
clc
lds
pop
and
lods
push
jae
jno
test
inc
js
mov
andb
icebp
negb
cli
js
sub
insl
sahf
sbb
or
push
cwtl
lea
inc
leave
inc
and
aas
xlat
int3
mov
bound
cmc
cs
mov
mov
gs
cltd
mov
xor
add
pavgb
pop
flds
push
jae
sti
sub
xlat
inc
ja
pop
dec
pop
xchg
sbb
mov
repz
sbb
sarb
cli
jp
jle
and
adc
dec
xor
imul
add
jmp
jle
test
movsl
mov
jae
pop
mov
scas
imul
jmp
cltd
aad
dec
jbe
xor
dec
sub
loopne
adc
fdivrs
push
jnp
inc
rorb
adc
xor
gs
push
inc
sub
add
pop
out
repz
movsb
aad
xor
dec
xor
popa
push
mov
inc
imul
dec
nop
lcall
test
and
xor
push
pop
xor
add
test
mov
push
mov
pusha
fucomip
ret
sub
punpckldq
add
jbe
sbb
fidivrl
push
sbb
add
in
pop
xlat
add
sahf
add
loopne
inc
or
mov
in
xchg
or
mov
push
add
test
test
test
insb
lret
xchg
add
fsubr
cmp
jl
and
inc
inc
nop
mov
xchg
xchg
inc
in
sbb
or
mov
sti
lret
add
into
adc
xchg
and
in
mov
xor
cltd
mov
fs
fdivrs
xchg
jnp
in
subl
xchg
lret
ds
mov
push
rclb
push
adc
pop
subb
fcomi
dec
fbld
sbb
daa
xchg
dec
push
leave
add
pushf
ja
stc
int3
sub
xchg
popa
pop
dec
cmp
call
icebp
inc
xor
or
jge
pop
push
xchg
sub
lock
ljmp
sub
xchg
jmp
jnp
xor
lahf
and
enter
addl
aad
orl
adc
xchg
cmpsb
jp
xor
popf
jbe
ret
and
cmp
pop
filds
xlat
and
pop
cmpb
sbb
jae
adc
or
and
pop
xchg
push
pop
push
mov
xchg
movsl
popa
xchg
pusha
inc
adc
arpl
adc
mov
iret
fcmovu
jns
or
inc
jg
push
test
test
mov
cmc
dec
mov
push
xor
adc
roll
xchg
addl
aas
repnz
push
inc
jmp
mov
xchg
insb
sarl
andl
cmp
leave
dec
xchg
pop
sub
fsub
jg
xchg
jmp
out
fisubl
mov
frstor
dec
lret
iret
add
and
sti
dec
mov
jnp
dec
popf
cltd
xor
xor
lcall
dec
jno
inc
inc
stc
jmp
scas
addr16
shll
les
ret
or
add
fildll
sub
fstp
and
jp
fsts
cmp
sub
push
jo
out
fwait
mov
dec
mov
mov
mov
repz
inc
mov
outsb
xlat
notb
jp
pop
fwait
pop
add
push
jg
mov
mov
xor
sbb
js
out
push
jne
adc
or
xor
xor
mov
mov
imul
dec
mov
rorl
pop
cmp
popf
add
jle
test
or
cmp
xchg
sub
mov
xlat
adc
xchg
in
jg
shll
or
push
xlat
out
lods
mov
pop
imul
jb
inc
rorl
push
pop
mov
pop
add
adc
insb
jmp
xor
ret
out
ljmp
cmpsl
push
outsl
jns
xor
loop
jp
sub
fisubl
add
outsb
hlt
xchg
mov
lock
push
jg
cmp
lea
xor
jnp
cltd
dec
push
mov
add
mov
jg
aaa
pop
push
push
adc
shl
jl
stos
sub
mov
loopne
mov
mov
push
sub
nop
shl
jl
add
cmp
add
and
sbbb
add
pop
dec
divb
lahf
jo
mov
popl
das
dec
mov
xlat
push
pop
mov
lahf
sar
sarl
adc
inc
ss
xchg
jae
cmc
xor
movsl
scas
jge
mov
adcb
loop
lret
aad
fs
and
out
mov
pop
ja
cmp
mov
fmuls
popa
xor
lods
rcll
rclb
fadds
subb
enter
lods
pop
sub
aas
mov
fimull
jb
fisttpll
push
test
pop
mov
sub
sbb
roll
inc
subb
add
cld
adc
mov
cmpsb
xlat
adc
int
test
mov
repnz
repz
adc
adc
inc
jge
mov
cmp
jl
cmp
mov
mov
data16
insl
jmp
fadds
add
mov
mov
sbb
pusha
mov
andl
aas
sahf
std
push
arpl
cltd
pusha
out
shlb
dec
jle
dec
xchg
cmp
push
sbb
dec
sub
lret
adcb
daa
out
sti
jecxz
xchg
ljmp
loopne
adc
divl
ljmp
and
call
mov
mov
jge
test
add
int
and
dec
cs
test
push
inc
xchg
push
mov
shll
lods
push
cmpsb
imul
mov
call
fidivs
sti
sub
mov
sbb
lods
rol
push
mov
xor
push
shr
cmc
push
dec
test
notl
fidivrl
nop
dec
fld
jl
xor
mov
mov
shll
push
out
jle
test
test
push
push
jbe
or
movsl
loop
inc
pushf
cmpsb
lahf
movsl
and
adc
loopne
mov
stos
cmpsl
out
cs
push
cmpb
xor
es
rcrb
nop
mov
dec
fisubl
or
mov
ret
dec
sbb
mov
roll
js
cs
in
aam
or
adc
adc
dec
in
subl
jae,pt
movsb
jne
add
push
mov
test
scas
pop
push
xor
mov
or
or
das
daa
data16
jmp
shll
sub
lret
adc
and
lods
in
sti
and
jns
clc
clc
push
shrl
and
mov
imul
add
add
out
rcl
cltd
mov
rcr
cmp
adc
cmp
leave
js
xor
out
push
loopne
sub
or
pop
pop
mov
lret
add
icebp
sbbl
add
xchg
std
flds
jge
xor
push
mov
into
add
cmp
iret
cwtl
push
iret
gs
jno
pop
pop
mov
cmc
lahf
xchg
movsl
mov
test
mov
push
mov
cmpb
add
subb
push
or
inc
lcall
jb
ds
fnstcw
jge
jge
pop
mov
cmc
mov
cld
loope
js
call
sarb
lds
movsb
mov
mov
xchg
ss
adc
pop
jmp
adc
enter
ret
addr16
mov
scas
jl
test
out
push
jo
xchg
push
repnz
xchg
jnp
mov
out
in
in
fimuls
and
inc
jo
push
mov
add
jl
adc
addr16
insb
jno
int3
jp
dec
testl
pop
cli
add
dec
xchg
popf
xlat
aas
fs
push
shr
xchg
jnp
std
loopne
adc
jge
sub
jle
cmpsl
insl
sub
mov
adc
cmp
stos
pop
mov
push
add
fnstsw
jns
scas
mov
in
fsubl
dec
repnz
enter
sub
pusha
sbb
lcall
pusha
scas
inc
insb
dec
lods
out
aas
fcompl
xchg
and
xchg
or
dec
cmp
cmp
sub
into
repz
pop
add
test
arpl
mov
movsl
dec
daa
dec
dec
subb
ret
leave
inc
sub
enter
in
lock
cld
stc
cwtl
pop
push
lods
pop
and
pop
jg
mov
fmull
pop
into
add
in
xchg
adc
cli
stos
jb
nop
push
aas
je
cwtl
pop
xchg
push
sbb
push
jge
sbbb
movsb
mov
xor
push
leave
sbb
sub
rcrb
loope
out
js
mov
loopne
mov
inc
jae
adcl
stc
push
popf
mov
aaa
jne
and
insb
aas
dec
push
and
js
xchg
or
jns
xor
movsl
nop
outsl
addb
and
pushf
jb
dec
icebp
cmpsl
test
stos
inc
add
das
or
dec
xor
ficoms
ret
add
mov
pop
leave
imul
scas
clc
sbb
cmpb
push
ja
les
mov
push
sbb
or
adc
or
mov
lret
movsl
xor
pop
test
mov
pop
push
cmp
jns
push
mov
mov
sub
shlb
jbe
rcll
int3
cltd
hlt
adc
mov
mov
pop
out
cmp
lahf
sbb
leave
mov
aaa
les
in
inc
fwait
stos
clc
fdivs
ds
pop
mov
xlat
pop
push
sbb
cmp
jecxz
cmpsb
addr16
int3
sbb
jo
sub
lcall
mov
add
add
std
movb
inc
xor
lock
push
lret
adc
add
mov
cmp
push
test
cmp
test
fcom
xor
push
push
imul
in
out
jnp,pt
add
pop
imul
pushf
pop
ret
adc
test
push
and
ljmp
stos
lret
iret
xor
fisubrl
jnp
xor
mov
insb
add
dec
popf
imul
and
ret
xchg
jbe
xlat
or
jle
lcall
icebp
jo
lret
dec
pop
fdivrs
adcl
pushf
lea
jb
sub
daa
test
mov
push
sbb
repz
xchg
sbb
xor
cltd
pushf
hlt
test
lea
fs
rcrb
inc
leave
and
popf
call
mov
pop
inc
sub
loopne
sar
sub
sbb
mov
loop
cmp
dec
and
mov
or
jne
sub
stos
clc
push
cli
fwait
sti
rclb
sti
repz
mov
xor
or
nop
mov
mov
mov
loopne
jbe
or
mov
dec
push
add
or
loope
sub
shll
push
dec
imul
and
push
xlat
jnp
fisubrl
loop
and
enter
adc
jecxz
adc
adc
and
pop
les
lret
add
sub
addr16
testl
mov
in
fisubs
jno
inc
je
movsb
push
int3
inc
xor
data16
mov
pop
mov
ficoml
aad
push
out
add
pop
sub
aaa
add
cmp
jne
int3
cmc
lcall
mov
inc
add
pop
pop
pop
jns
and
ret
inc
cli
mov
call
addb
dec
test
stos
loopne
xor
push
mov
sbb
dec
push
fimull
mov
jnp
mov
xchg
enter
inc
adc
xchg
sbb
imul
lock
mov
jb
cmp
jl
mov
sbb
icebp
das
test
addr16
adc
inc
fidivrs
cmp
pop
dec
inc
dec
inc
iret
call
testb
sbbl
jne
push
mov
fwait
es
and
xor
xchg
mov
movups
ljmp
mov
mov
sti
push
test
rol
call
inc
shll
push
clc
mov
push
scas
mov
xchg
push
leave
and
testl
jo
inc
cs
scas
pop
shrb
cmpsb
out
sbb
xchg
iret
ja
sub
int3
mov
jns
push
loopne
xchg
pop
shlb
xor
dec
jge
push
or
popf
push
mov
adc
aaa
inc
cmp
insb
jne
cmp
adc
shr
mov
pop
sbb
and
inc
fwait
nop
movsb
sti
adcl
jo
xor
inc
pop
fwait
mov
mov
xor
adc
mov
in
std
repz
sbb
icebp
into
arpl
nop
shll
pushf
dec
mov
push
mov
mov
jg
adc
test
push
adc
push
loope
mov
dec
cltd
mov
inc
in
fnstsw
push
sbb
inc
js
xchg
sub
dec
shrl
inc
mov
push
std
sarb
xchg
or
cmpsb
and
push
int3
mov
push
mov
jmp
sub
xchg
sub
shll
les
gs
xchg
cltd
fildll
call
ds
mov
cmpsl
adc
cmp
cmp
and
xchg
inc
xor
add
data16
cs
inc
sub
fists
push
xchg
push
inc
daa
movntq
out
fbld
pop
dec
push
nop
decl
jl
in
sar
ds
arpl
lds
dec
in
dec
dec
pop
dec
pop
push
stos
xchg
ljmp
add
mov
scas
xchg
stc
mov
xor
in
push
leave
mov
and
das
xchg
mov
testb
in
call
imul
push
stos
mov
sbb
loop
pop
scas
gs
scas
cmp
outsl
es
out
push
hlt
mov
test
mov
repnz
cmp
mov
pop
sbb
jnp
inc
or
push
sub
xchg
add
inc
jl
je
fildll
mov
xorl
in
xor
push
xchg
mov
cld
adc
icebp
jecxz
sub
sub
popa
or
aas
cmpsb
jmp
dec
fucomp
dec
repnz
xchg
ds
mov
cmc
jne
ret
out
mov
or
dec
mov
xor
mov
adc
mov
xchg
mov
lcall
fs
xchg
cmp
pop
cs
stc
dec
dec
shlb
or
aaa
push
in
mov
movsl
leave
mov
orb
xchg
filds
push
push
ret
sbb
cmp
test
or
dec
lods
adc
push
arpl
andb
test
stos
out
out
adc
xchg
push
aad
push
sub
mov
ljmp
add
xchg
mov
mov
push
and
negl
push
loopne
xchg
fwait
jge
cli
jp
add
or
mov
arpl
cmp
je
jecxz
fmull
ss
mov
or
push
inc
xor
xor
cmp
mov
xlat
add
push
mov
jae
jmp
mov
cmp
cmpsb
div
aaa
mov
and
mov
push
sarb
push
shll
insb
sbb
xchg
adcb
in
scas
repnz
lcall
add
cwtl
mov
mov
js
and
pop
insl
mov
fsub
nop
mov
jns
or
sar
adc
fcmovnb
mov
orl
jne
xchg
or
outsl
lcall
xchg
jmp
adc
mov
pop
push
xor
or
shrb
in
repnz
mov
adc
out
js
cmpsb
jl
sub
aas
inc
push
inc
neg
aaa
jbe
jmp
add
jns
xlat
add
nop
cmp
xchg
jnp
jmp
sub
sbbl
mov
pop
jg
stos
repz
xor
fnsave
enter
fsubrl
cmp
push
loop
fidivrs
jbe
or
cwtl
ret
push
fs
scas
cmpsb
and
repz
mov
jb
imul
xor
addb
shrb
cmp
aas
les
cmc
adc
stos
mov
add
mov
adc
mov
loopne
mov
jp
sbb
jmp
xchg
adc
sbb
jnp
sub
in
push
fs
int
sbb
cs
mov
rcrl
cmc
push
fwait
rorl
addr16
mov
scas
xchg
pop
aad
push
out
pop
dec
insl
xchg
xor
bound
ss
imul
jns
adc
xor
mov
scas
mov
idivl
and
lea
xor
mov
add
dec
cwtl
cmp
pop
loop
lret
cmpsb
fldt
adc
cmp
and
sbb
add
lret
jo
fsubrs
or
pushf
adc
add
mov
mov
or
xor
pop
jnp
inc
mov
movsb
stos
jp
xor
sarl
fisubrl
cmpsl
dec
movhps
add
mov
adc
sub
adc
jbe
dec
int3
flds
dec
jg
dec
in
mov
cs
add
push
pop
sahf
jg
sbb
xchg
sub
subb
adc
pop
in
imul
cmp
shll
aam
pusha
pop
inc
xor
mov
mov
mov
scas
sbb
imul
adc
loope
jnp
scas
jge
and
inc
icebp
out
xchg
push
inc
mov
fildl
xor
pop
sub
xchg
cmc
cmp
idiv
jp
sub
or
scas
jae
sub
push
mov
arpl
in
push
pushf
cmp
xchg
jg
or
mov
scas
rcll
add
jecxz
test
push
cmpl
dec
xchg
lock
ret
and
jbe
push
pop
pusha
or
mov
daa
xlat
push
xchg
mov
adc
inc
lret
xor
sahf
inc
outsl
pop
xchg
imul
cmc
push
sub
push
add
cmp
mov
sub
mov
test
add
fwait
dec
les
lods
std
js
mov
in
jge
cmp
sub
mov
pop
loopne
sbb
adc
repnz
std
push
cmp
in
aad
push
mov
mov
repnz
dec
orb
fldl
cmc
ljmp
push
inc
lahf
in
testb
jb
lahf
pop
movsb
jbe
mov
icebp
cmpsl
adc
add
xor
insb
ja
jo
insb
sbb
jl
enter
jnp
and
jbe
out
div
pusha
das
movsl
xchg
fstl
insb
xchg
sub
sbb
jo
inc
sbb
mov
xchg
lods
xchg
dec
fistps
adc
jo
mov
inc
test
sub
mov
inc
aas
dec
stos
loopne
sub
insb
imul
lock
mov
mov
xchg
mov
mov
inc
adc
dec
xchg
dec
daa
pop
mov
and
loopne
test
loopne
fmulp
add
pop
pop
jmp
mov
push
cld
adc
hlt
inc
adc
repnz
fwait
sub
test
insb
adc
xchg
outsb
mov
arpl
cwtl
mov
pop
push
rcrb
pop
es
icebp
adc
xchg
mov
aas
insl
jecxz
inc
cmp
pushf
mov
jb
movsl
xor
and
or
mov
mov
lret
aas
bound
lods
push
inc
iret
jno
push
in
aad
stos
comiss
sub
int
loopne
pop
sub
xor
mov
lcall
push
in
out
sar
pop
mov
sbb
adc
inc
sub
icebp
pop
bound
jno
jp
adc
mov
mov
xor
add
into
insb
loop
sbb
cmp
mov
test
scas
dec
mov
shl
in
mov
push
stos
cwtl
std
pop
or
das
jae
and
cmpsb
test
das
lods
aas
outsb
je
lods
cmp
pop
cwtl
xor
loope
mov
shlb
cs
aaa
insl
rolb
stc
xchg
icebp
mov
repnz
or
aad
dec
lahf
dec
rol
push
roll
mov
push
mov
push
jae
in
mov
stos
xchg
iret
jge
xchg
ja
dec
clc
lea
cmp
hlt
loopne
shrl
ja
lahf
stos
fwait
xor
mulb
outsl
push
fcoms
push
pop
jp
adc
or
mov
mov
mov
aam
dec
mov
enter
and
and
push
push
inc
loope
xchg
lea
sub
inc
xchg
out
lcall
mov
mov
dec
repz
fcmovb
leave
push
jne
jg
sbb
inc
sbb
mov
pop
gs
decl
mov
mov
cmc
loope
bnd
fistpll
push
stos
fcompl
in
das
xor
mov
add
lcall
out
aad
mov
adc
xor
mov
out
test
xor
adc
shrl
mov
adc
test
call
pop
aad
pop
fldcw
cmpsb
mov
add
ds
mov
stc
xchg
cmp
lds
lods
movsb
pop
push
aas
add
loop
pop
out
mov
push
cmp
test
stc
test
adc
sbb
andb
divb
fcoml
and
mov
mov
repz
xchg
jg
or
lock
ficomps
fsubs
je
cmp
mov
dec
lret
insl
push
cmpsl
int3
popa
lret
xor
pop
mov
arpl
test
push
xchg
icebp
test
fsub
out
test
jg
mov
pop
cmpl
in
jne
psrad
and
mov
repz
push
jmp
or
es
das
lahf
std
arpl
inc
adc
insb
pop
imul
jge
mov
add
lcall
lcall
mov
je
jne
mov
pop
mov
test
stos
stc
mov
pop
nop
xchg
push
clc
nop
sbb
jg
or
mov
inc
lea
aas
mov
mov
xor
xchg
and
jb
or
mov
or
or
mov
pop
lahf
mov
mov
out
mov
int3
xor
aaa
mov
cwtl
nop
mov
inc
repnz
jno
idiv
rcll
cmp
fildl
cmp
cs
addr16
repnz
aas
ds
push
pusha
popa
mov
outsl
jmpw
sbb
sub
in
jp
cmpsb
aam
dec
cmpsb
js
in
mov
sub
test
jge
mov
add
push
dec
pop
inc
outsl
sbb
sbb
bound
rorb
sub
xor
arpl
pop
stos
pushf
out
insb
mov
fmulp
sbb
sahf
and
rcrl
sbb
data16
pop
adc
mov
and
outsl
push
notl
js
pop
or
inc
mov
push
jno
sti
lret
jg
scas
mov
dec
fisubl
fwait
mov
sbb
les
dec
jle
repnz
inc
sub
adc
rcpps
mov
xchg
xchg
jnp
aaa
sbb
push
push
mov
fldcw
cwtl
cmp
mov
push
and
push
xor
decl
cmp
fdivr
stos
xchg
mov
or
mov
mov
fidivl
mov
fs
adc
insb
dec
cmpsb
lods
subb
insl
add
aas
jae
or
sub
fistl
mov
or
mov
and
mov
lahf
pop
sbb
dec
sbb
outsl
sub
pusha
dec
arpl
jg
insl
mov
insl
int
das
pop
fsubs
out
xchg
ror
xchg
mov
push
xor
sahf
add
mov
mov
or
mov
pusha
inc
cmpsb
rcll
adc
mov
add
stc
pushf
enter
enter
mov
and
pop
cwtd
push
mov
out
fisubrl
sahf
mov
call
out
mov
test
pop
or
shl
arpl
jge
aam
sti
inc
sub
dec
mov
out
jno
or
mov
and
sbb
leave
jl
loope
jnp
bound
mov
cmpsb
sbb
divb
ljmp
xor
mov
cmp
call
push
fnsave
es
mov
mov
push
cmpsb
xchg
aas
xor
mov
add
stc
jnp
pop
inc
mov
aaa
subb
mov
sub
jl
inc
push
testb
mov
sub
xchg
push
mov
adc
test
mov
ljmp
mov
inc
push
xor
rolb
out
xchg
sbb
arpl
aam
xchg
xor
sbb
loopne
and
fs
shlb
stc
mov
inc
imul
mov
lds
pop
adc
popa
push
cmpsl
mov
fnstsw
push
push
in
cmpsb
or
jle
push
jle
int
pop
mov
sub
mov
and
sub
sahf
mov
jl
ret
lods
loopne
test
sub
xchg
js
sar
inc
fisubl
sbb
out
xor
inc
aad
mov
adc
movb
aaa
js
jns
dec
lea
in
sub
idivl
xchg
sahf
push
cltd
nop
xor
sub
lahf
dec
sysexit
jle
fists
arpl
shll
push
inc
inc
cmp
pop
or
sti
pop
jbe
dec
faddl
xor
pop
sub
bound
and
fimuls
mov
adc
mov
clc
and
mov
xor
cmp
pop
xchg
push
cmp
stc
bound
andl
pop
cli
push
mov
xor
cmp
rcl
inc
jae
xchg
movsb
inc
xor
lret
push
adc
pop
adc
jno
dec
mov
adc
cmpsb
push
pushf
xchg
movsb
xchg
leave
stos
xor
out
cmc
push
xchg
jg
inc
and
mov
jecxz
rcl
jmp
push
das
mov
das
pushfw
fwait
rolb
cmc
sti
push
xlat
push
dec
push
sbb
fcoml
cld
and
popf
and
or
popf
and
sub
cmpsl
sub
clc
scas
jle
cmpsb
notb
mov
fdivr
jg
call
add
popa
mov
lea
xor
mov
jns
cmc
mov
push
pop
rorl
dec
jmp
and
xchg
push
jp
and
adc
dec
lret
sub
fabs
lahf
jle
dec
roll
jp
sbb
fisubs
jae
fnstenv
dec
dec
push
lea
mov
popf
cmp
adc
mov
jecxz
iret
lods
sbb
dec
lea
jp
test
sub
or
mov
mov
call
cmpsl
loop
inc
in
or
sub
jl
fs
cmp
and
bound
xchg
jns
shl
scas
rcl
test
push
testb
mov
orl
test
pop
shll
int3
scas
scas
xrelease
dec
xchg
lods
inc
out
in
mov
cmp
sti
mov
js
mov
lock
rcl
jmp
mov
xchg
dec
sbb
xor
scas
sub
pop
sbb
call
stos
or
out
in
sbb
pop
dec
and
xor
add
dec
out
dec
dec
mov
ljmp
test
and
inc
add
fidivrs
jle
bnd
mov
pop
jl
cmpsl
xchg
push
dec
ss
mov
in
sbb
ret
sbb
xchg
cmpsb
jmp
test
adc
icebp
jle
rolb
lahf
pushf
inc
mov
in
loop
mov
ds
xchg
dec
dec
push
add
mov
push
out
popa
dec
mov
test
mov
pop
mov
dec
xor
cmp
mov
int3
or
and
pushf
inc
fcoml
xor
aam
sbb
data16
out
clc
loope
sub
inc
mov
jp
or
cli
pushf
ret
lret
jg
mov
enter
loopne
xor
jo
jae
lods
jnp
sub
sub
sbb
mov
mov
inc
jae
mov
cli
jnp
xchg
sbb
cmpsl
out
icebp
cli
in
adc
outsb
push
sub
cltd
xor
jmp
mov
addb
loop
out
xchg
popf
mov
push
cmp
sbb
je
mov
adc
out
sbb
or
fisubrs
jecxz
into
mov
fst
daa
mov
in
push
jo
idivl
clc
sbb
add
add
js
data16
in
mov
xor
insb
mov
in
pushl
add
cmpsb
sbb
inc
lea
insl
pop
add
sbb
cmpl
fnstcw
inc
mov
out
xchg
push
jbe
rorl
sbb
and
jl
mov
cmpsb
mov
jb
jbe
mov
sbb
cmp
xchg
lret
lods
getsec
rclb
jo
dec
fadds
dec
call
and
rcr
mov
imul
stos
add
leave
push
adc
push
pushf
out
sbb
lret
repnz
stc
jb
pop
je
xor
lods
ljmp
sbb
jecxz
ret
mov
xlat
popf
cmp
mov
jge
cmp
dec
or
mov
in
or
outsl
cmpsl
sub
mov
cwtl
and
cmp
adc
fimuls
sbb
pop
cwtl
int
mov
mov
and
cmp
call
dec
cmp
sbb
pop
out
fwait
ljmp
mov
dec
aam
lods
leave
inc
fcmovnu
adc
mov
mov
mov
cli
mov
in
pop
sub
lret
cli
ret
cld
cltd
mov
mov
addl
mov
xchg
and
sarb
mov
out
movsb
std
imul
mov
push
leave
in
clc
sbb
out
cs
push
jmp
mov
xor
xchg
mov
jle
ljmp
rcrb
or
jns
pop
js
shlb
dec
fcoml
sbb
shrl
out
jmp
or
push
ds
and
add
hlt
subl
sub
insl
js
add
movsb
outsb
shl
rorb
mov
jge
incl
mov
inc
adc
lret
inc
int
subl
xor
gs
adc
leave
mov
mov
in
xor
fcompl
xor
and
clc
sub
lock
mov
cmp
dec
lahf
add
cmpsb
out
lret
iret
push
es
cmpsb
arpl
mov
mov
inc
jecxz
mov
aas
ljmp
mov
cli
ret
pop
sbb
mov
test
mov
jbe
enter
in
orl
mov
lds
fcmovnb
pop
add
aad
xor
icebp
push
xchg
xlat
push
push
out
jge
mov
movsl
pop
pop
sahf
adc
popf
cs
orl
fisttpl
cs
or
loop
or
xchg
seto
jle
jbe
ja
out
stos
rclb
sbb
into
mov
dec
fistpl
cmp
aam
pushf
ret
mov
fwait
mov
mov
sbb
aad
jmp
mov
cltd
mov
mov
jno
sbb
lods
stos
arpl
jg
dec
stc
out
mov
imul
jmp
pop
cli
jp
mov
push
fucomi
push
pop
inc
orb
lods
sbb
xchg
in
mov
pop
adc
pop
adc
pushf
sub
mov
adc
loop
jge
and
xchg
fiadds
cmp
mov
add
xchg
rcl
insl
cltd
and
and
xor
inc
cmp
inc
popa
ljmp
mov
xchg
jne
loop
adc
dec
test
outsl
icebp
inc
vpsrad
js
cwtl
nop
and
popa
sub
inc
dec
mov
aas
mov
dec
sbb
add
xchg
jnp
pop
mov
jmp
mov
dec
cmc
outsb
sbb
les
stos
fstpl
repnz
insl
lods
cmpsl
push
mov
int
pop
jle
rcl
ret
aas
mov
out
cmp
jl
pushf
pushf
nop
cmpsb
push
shr
repnz
cmp
push
pop
pop
jl
push
add
jbe
pusha
dec
and
hlt
inc
lds
imul
fs
outsb
rol
sub
insl
cmp
push
xchg
jb
sbbl
mov
inc
cmp
ljmp
mov
adc
ljmp
xchg
push
hlt
popf
adc
sub
rcrb
push
pop
sbb
cmc
cmp
xor
push
push
insl
jle
and
sahf
out
pop
fiadds
scas
movsb
insl
jb
mov
imul
sub
stos
addr16
dec
cmp
gs
ds
xchg
in
fistl
sbb
divb
mov
repz
les
sub
shlb
sbb
lret
mov
dec
jo
sbb
sbb
test
push
inc
ja
and
pcmpeqd
enter
xchg
cmpsl
imul
jg
mov
inc
pop
mov
jae
mov
loop
sub
push
nop
cmpl
mov
icebp
mov
adc
dec
faddl
jno
aad
ja
data16
mov
fwait
shlb
push
and
cmp
xor
xchg
bound
jne
aam
pop
lea
push
mov
xor
mov
adc
icebp
popf
leave
pop
or
call
repz
lods
dec
adc
lcall
dec
fiadds
and
jns
cwtl
inc
lods
test
std
cmp
clc
loop
jg
ffreep
and
mov
fwait
mov
out
adc
icebp
roll
insl
bound
mov
out
mov
jb
mov
push
mov
dec
insl
loop
dec
lods
loopne
pop
lds
and
mov
xlat
add
sbb
ja
cmp
mov
iret
push
adc
ret
dec
xor
pop
stc
add
clc
xchg
decb
scas
mov
pop
hlt
inc
sbb
mov
adc
mov
shll
fs
mov
mov
test
jo
sub
mov
jno
mov
fs
cmp
sbb
cmp
inc
mov
cmp
les
shrb
gs
mov
push
idivb
sbb
call
jb
add
sub
out
sti
cmp
mov
jb
out
lds
je
aad
lods
push
xor
inc
cmp
and
mov
cmp
loopne
sub
jl
jae
cld
mov
dec
dec
jp
dec
mov
leave
jne
stos
xor
sub
cmpl
arpl
xor
mov
mov
mov
jg
hlt
pusha
addr16
or
stos
cli
inc
push
push
into
xchg
mov
shrl
mov
fisubs
add
loopne
xchg
aam
xor
stos
xorb
dec
cmpsl
and
xor
fwait
roll
scas
pop
insl
in
adc
nop
push
pop
mov
repz
jno
cmp
mov
xchg
sub
inc
insb
pusha
bound
jge
jae
ret
scas
fistl
or
ficoml
out
ss
lock
push
nop
pop
leave
push
dec
pop
xor
adc
inc
jle
xor
xchg
xor
xchg
test
and
pop
inc
rcr
jno
les
aam
stc
popa
xchg
vmulsd
or
jl
xlat
bound
push
cld
testb
jge
xor
jne
pop
push
rcrb
fdivs
xchg
out
sti
int
aas
add
or
sub
lock
orl
rorb
pop
ds
pop
and
rcpps
cmc
add
loopne
or
cmp
pushf
dec
jae
sub
mull
scas
xor
or
ret
imul
pop
and
dec
jp
jl
add
ret
scas
leave
and
jl
push
mov
stc
push
xchg
jne
add
or
lret
call
in
mov
repnz
shrb
push
push
jmp
hlt
cmp
adc
sub
imul
das
jae,pn
jle
test
mov
jge
fnsetpm(287
sbb
cmp
aad
lret
cmp
jp
xor
jmp
mov
stc
repnz
iret
mov
push
or
imul
fwait
shrl
jmp
xchg
mov
pop
jno
sub
lcall
pop
in
pop
xchg
jecxz
jo
vpand
inc
loopne
lods
dec
scas
push
popa
addr16
pop
xchg
jg
fmul
or
pop
in
sbb
or
fs
testb
test
push
mov
repnz
mov
and
push
out
mul
sub
mov
bnd
frndint
test
ret
pop
stos
iret
sbb
test
jnp
outsl
add
stos
and
popf
mov
popa
fstpl
mov
cmp
cld
and
test
xchg
ja
loope
push
xor
and
pop
jle
or
mov
adc
xor
dec
sbb
push
cltd
jle
push
imul
aaa
xchg
mov
xchg
ret
sahf
push
xchg
and
fsubs
ficompl
inc
mov
jne
sbb
add
xlat
push
das
mov
push
movsl
popa
cmc
lods
push
bound
aam
jl
jecxz
inc
clc
jmp
insb
mov
push
xchg
daa
movsl
ljmp
cmpsb
ret
push
or
sbb
gs
lret
jmp
movsl
orl
mov
xor
xchg
leave
pop
pop
adc
into
and
lret
daa
mov
sbb
cmp
aam
dec
push
sahf
pushf
jns
jmp
or
sbb
inc
rcl
push
add
in
lods
dec
xor
inc
flds
fldt
sub
je
adc
cmp
push
dec
sub
cli
inc
dec
dec
mov
or
cmpl
in
ja
fbstp
jns
xor
mov
dec
cmc
inc
dec
cs
cmpsl
pop
or
mov
push
add
mov
or
fnstcw
stc
inc
arpl
cmp
cmp
sub
lret
cmp
out
std
jo
cli
lcall
loopne,pt
lock
jmp
mov
push
scas
cwtl
es
icebp
nop
cmpl
packssdw
or
fsubrs
js
add
xchg
aas
aas
jnp
loope
enter
cld
and
adc
lret
arpl
adc
loop
out
pop
sbb
push
push
sti
loope
push
ljmp
mov
cmp
mov
jle
lcall
xchg
lret
and
cmp
jbe
cld
push
add
xchg
das
ja
dec
inc
jbe
xor
sti
nop
cmpsl
pop
mov
xorb
repz
test
stc
fnsave
sbb
lcall
xor
sub
out
xchg
inc
push
outsb
leave
adc
ret
xlat
sub
addr16
and
cmp
stc
adc
push
fstpt
mov
inc
cwtl
or
sbb
xor
in
rclb
add
pop
pusha
leave
ss
push
add
cli
nop
cltd
cmp
aam
lock
orb
int3
loop
aaa
arpl
ljmp
push
cmp
insb
inc
push
sub
in
shl
sbb
flds
pusha
xchg
test
mov
xor
pop
push
push
dec
push
and
inc
imul
pushf
or
add
arpl
jne
xchg
lret
or
dec
pop
adcb
std
insb
cmp
lret
sahf
push
and
loopne
shl
sbbl
mov
rolb
movsb
mov
cmp
mov
insl
faddl
push
inc
pop
decl
jmp
idiv
out
cmp
gs
sbb
sahf
sbb
dec
fdivrl
ja
ss
adc
inc
std
xor
addr16
xlat
mov
icebp
aas
ret
mov
test
rorb
in
fdivrp
or
in
fmul
sub
jae
and
pop
pop
scas
lahf
xor
and
xlat
add
adc
jb
jl
insb
arpl
shl
jae
lret
mov
lds
stc
cmp
push
psllw
stc
mov
xchg
add
mov
pop
fldenv
add
xchg
adc
inc
jae
popa
xchg
clc
daa
shll
inc
pop
lods
push
repnz
fdivs
sbb
nop
xor
pop
rorb
loopne
jge
cmp
mov
popa
and
lods
pop
xlat
and
mov
mov
lret
cmp
enter
mov
das
and
jp
cmc
xchg
push
cmp
pop
out
and
xchg
or
cli
adc
xchg
incb
xchg
mov
cmp
ret
pop
mov
push
inc
cld
adc
jge
mov
dec
and
dec
adc
jne
pop
xchg
xor
sub
shrl
and
ljmp
popa
popf
lret
add
mov
pop
dec
or
stos
jecxz
add
lgdtl
jae
push
lods
cmp
fcoml
sahf
jae
int3
or
xchg
test
out
mov
mov
into
mov
adc
jo
divl
sti
xor
inc
cmp
or
lahf
mov
aam
inc
add
sub
inc
orb
mov
mov
in
aam
inc
push
stos
in
cmp
scas
push
ret
icebp
adc
sub
jo
in
dec
cmp
rolb
mov
mov
sbb
jl
pop
sahf
out
dec
hlt
pop
or
js
push
stc
enter
add
lret
lds
sahf
mov
fstps
hlt
push
sub
fists
adc
test
shrb
dec
shrb
mov
pop
ret
das
fmulp
and
dec
mov
cmp
out
mov
pop
jle
mov
xchg
xchg
push
xchg
sbb
xor
test
pusha
jne
mov
stc
mov
jne
stos
jle
sub
push
push
mov
cmpsb
movsb
jno
mov
imul
les
cld
ds
xchg
jp
mov
clc
pop
push
movl
mov
dec
pop
les
test
mov
jb
mov
jle
mov
and
les
cmc
aad
sub
push
add
movsb
and
es
test
in
add
xor
mov
or
xchg
sbb
icebp
dec
test
out
dec
arpl
imul
mov
xor
mov
dec
jo
dec
inc
sbb
js
pop
inc
dec
into
xchg
mov
and
popa
sub
dec
xchg
sbb
push
mov
ds
ficomps
addr16
cs
loopne
lock
and
adc
ret
dec
adc
cmp
pusha
cwtl
loope
cmpsl
js
sti
imul
sbb
fdivl
fisubs
arpl
movb
js
loopne
cmp
fbld
adc
xor
pop
or
push
notl
inc
aaa
and
lods
mov
stos
shll
jb
mov
int
jnp
and
int3
sbbb
enter
push
push
lods
imul
lret
or
xchg
jecxz
dec
xchg
lods
fwait
push
mov
jo
test
dec
cli
lahf
cli
xor
ret
mov
xor
sub
push
adc
dec
push
xchg
push
xor
lcall
push
xchg
es
popf
gs
in
hlt
push
imull
int
pop
fcomps
lock
sti
ljmp
testb
and
imul
outsb
push
in
push
adc
cmp
sbb
daa
cli
out
pop
mov
test
leave
pop
scas
scas
or
fistpll
loop
push
sub
xchg
adc
divb
in
push
inc
in
jae
stos
jecxz
sbb
pushf
pop
ja
pop
pop
data16
lods
mov
loope
call
xor
in
movsb
in
out
sub
adc
movsb
lcall
cmp
dec
pop
int
mov
push
jns
jbe
xor
jmp
dec
mov
orl
dec
ja
mov
addr16
mov
sbb
movsl
addb
lock
mov
adc
loop
fucomp
or
in
int
sarl
repz
shrb
sub
test
adc
push
loope
lods
rorl
inc
xchg
aas
add
push
loop
mov
pop
dec
dec
insb
mov
mov
in
movsb
cmp
pop
push
faddl
inc
cmp
pop
or
xor
pop
pop
test
xchg
ja
cmpsb
sbb
mov
cwtl
lahf
lcall
jb
push
and
xchg
loope
aad
xchg
in
sarl
daa
lret
xchg
je
xor
enter
jg
mov
jp
bnd
ds
mov
push
pop
adc
cmpsl
jecxz
dec
ljmp
mov
pslld
fistpl
mov
in
sbb
and
dec
iret
jmp
sbb
insl
dec
jbe
gs
jb
push
xchg
jmp
imul
xchg
sub
ret
add
jmp
fisubrl
adc
ds
adc
sbb
xchg
out
xor
pop
decl
andb
les
add
pop
in
push
aaa
stos
hlt
mov
xchg
add
aam
adc
es
cmc
mov
xor
sarl
insb
sub
ljmp
cwtl
scas
das
pop
mov
lret
jno
mov
and
std
daa
popf
dec
xchg
int3
pushf
and
xchg
movb
mov
mov
jmp
aam
pop
roll
or
jns
jg
int
adc
pop
dec
adc
jnp
std
arpl
in
ss
add
add
push
imul
mov
inc
pop
repz
push
push
xor
jmp
mov
pusha
xlat
movsb
sbbb
and
pop
jl
jg
and
jecxz
mov
aam
fldcw
into
add
add
jne
pop
or
clc
enter
js
test
mov
dec
sub
cmp
xchg
jge,pn
add
and
mov
lea
out
cmp
inc
and
rorb
aam
imul
pop
mov
mov
test
push
pop
mov
inc
sub
push
push
jp
sub
iret
es
int3
popa
push
push
outsb
or
jecxz
punpckhbw
out
icebp
ret
lcall
mov
pop
addb
adc
pusha
out
loope
fistpll
push
iret
daa
mov
shlb
imul
xchg
es
js
cmp
mov
lea
leave
arpl
push
cmpsb
stos
and
scas
out
fs
aas
lret
cmp
mov
cli
dec
icebp
or
lods
cmpsl
out
push
loopne
dec
jp
in
dec
sti
or
loop
pushf
sar
out
sub
sub
movsl
push
mov
xchg
outsl
test
sub
mov
out
lea
lahf
push
sbb
or
push
xchg
ljmp
sub
inc
mov
and
add
xchg
sub
fst
daa
mov
pop
pop
aam
icebp
or
je
pop
mov
pop
push
add
mov
mov
cmp
push
dec
out
and
fdivrl
jne
fs
jo
and
jp
loop
jae
push
inc
test
mov
ljmp
xor
fisubl
mov
call
xlat
sub
cmp
icebp
clc
dec
std
lret
lcall
notl
in
adc
fs
sub
fcmovu
mov
fs
addr16
cmp
jbe
inc
mov
add
je
mov
adc
out
inc
sub
mov
sub
stos
repz
rcl
adc
mov
jno
dec
mov
repnz
cmp
mov
pop
push
inc
cmp
ljmp
clc
pop
das
outsl
sub
jg
sbb
push
ret
jg
hlt
cmp
outsl
in
mov
loope
inc
and
xchg
imul
and
mov
int3
leave
push
mov
test
cmp
ret
mov
cmc
xchg
lahf
sub
sbb
addr16
lods
and
call
stos
fwait
add
xchg
imul
jo
jmp
push
mov
out
aaa
cli
xor
inc
inc
stos
push
cmp
in
in
mov
adc
inc
push
mov
or
hlt
mov
rcl
xchg
insb
mov
dec
pop
hlt
sub
sbb
int3
xchg
inc
rsm
jo
outsl
test
sbb
cmc
add
cmp
negl
adc
fldl
mov
inc
aaa
cwtl
jg
pop
dec
pop
test
jecxz
jno
xchg
pushf
shll
mov
repz
divl
imul
mov
in
jp
dec
aaa
addr16
popa
and
call
push
inc
faddp
mov
pcmpgtb
shr
mov
sbb
fidivrs
adc
mov
cmp
or
xchg
xchg
daa
ret
out
cmpsl
push
lcall
fs
stos
lea
sbb
jns
push
adc
cmc
xlat
jmp
lret
arpl
lcall
in
pop
dec
ret
outsb
fcoms
pop
into
mov
xchg
in
push
mov
xor
loopne
push
bnd
sbb
push
or
jg
aad
aam
loope
pushf
leave
lcall
int3
std
xor
pop
push
cmp
lret
aaa
rcrl
cwtl
arpl
jge
imul
out
lret
mov
fsub
push
dec
int
or
fisttpl
mov
jo
pop
push
pop
inc
xor
hlt
mov
jmp
mov
lret
sbb
and
inc
mov
lock
leave
jge
mov
mov
andb
push
xchg
adc
mov
aad
js
push
push
push
push
mov
enter
push
out
pop
rcrb
dec
int3
dec
loopne
mov
imul
rcrb
cwtl
gs
fidivs
fwait
push
xchg
sub
inc
clc
xchg
test
pop
outsb
push
ret
mov
movsl
loopne
mov
nop
jae
insb
inc
outsb
popf
daa
in
out
push
xchg
xchg
fs
cmpl
jecxz
das
jle
xor
push
jno
xchg
cmp
aam
movsb
cmpsl
cmp
lret
test
aas
cmp
lahf
pop
inc
fistpll
outsl
xchg
clc
pop
pop
out
das
and
and
mov
sbb
into
fnstcw
lret
push
sbb
cld
jmp
daa
pusha
popa
fstpt
cmp
xchg
sbb
xor
push
lock
out
or
dec
sub
adc
jmp
mov
addr16
fwait
mov
xchg
arpl
arpl
dec
js
mov
mov
pop
fcomps
mov
lock
test
fmulp
jmp
adc
push
not
dec
mov
fwait
mov
js
jb
jns
in
fwait
sub
fiadds
cli
stos
fstl
leave
stc
lock
push
sub
add
loope
pop
jp
cltd
pop
xchg
icebp
cmpsb
xchg
arpl
mov
or
mov
ja
popa
lret
push
hlt
mov
xor
sub
sarl
out
pop
jge
jmp
and
dec
xchg
aad
cmp
sbb
lret
xchg
fsubrs
repnz
jmp
lods
subb
dec
mov
iret
sbb
inc
mov
repz
mov
test
jge
and
ljmp
nop
pop
jge
sbb
imul
mov
or
daa
cmp
sbb
cmp
mov
movsb
repnz
jmp
xor
jg
sti
fdivrl
cmpsl
mov
lret
push
pop
xor
jb
mov
leave
inc
roll
xchg
xor
xchg
test
cmp
mov
into
adc
pop
sbb
fisttpl
push
pop
jb
scas
fsubrs
dec
inc
hlt
fbld
inc
lea
sub
inc
xchg
mov
outsl
into
fisubrs
ds
jecxz
cmc
mov
xchg
dec
imul
cwtl
sarb
dec
xor
push
jno
pop
das
fsubrs
test
das
or
stos
aas
in
aas
xor
hlt
popf
ss
or
in
icebp
add
popa
sub
lret
xor
or
loopne
imul
cmpsl
ret
or
imul
and
and
rclb
scas
out
mov
push
jb
loopne
and
cwtl
mov
xor
sahf
inc
mov
sbb
loope
lds
jmp
les
or
adc
xchg
loopne
pop
fwait
cmpsl
sub
pop
pop
test
inc
cmp
push
jmp
out
movsb
cmc
cld
inc
cli
test
mov
push
sbb
je
jg
pop
lods
cmpsl
inc
inc
pusha
cmp
lods
lea
jecxz
mov
iret
out
out
cwtl
inc
pop
cmp
push
ds
pop
inc
test
jb
pop
push
lret
adc
popf
sarb
mov
mov
and
cmp
and
bound
or
stos
stos
sbb
test
pusha
out
jns
out
jl
mov
aaa
mov
popf
pop
fbld
cwtl
xchg
push
es
in
dec
out
add
push
cs
jmp
bound
movsl
mov
lret
mov
imul
pop
fsubr
mov
mov
inc
or
cmpsl
mov
lea
dec
push
je
and
pop
imul
push
push
jb
sub
pop
pop
mov
cmpsb
xor
mov
lret
inc
jecxz
xor
mov
aad
pop
clc
pop
xlat
pop
jo
jp
addl
ljmp
jnp
pushf
leave
dec
dec
test
push
push
loop
xchg
or
inc
push
inc
in
sub
cmc
lret
pop
mov
mov
xor
lock
mov
push
data16
mov
lds
imul
inc
lock
push
repz
xor
jae
jmp
insl
lcall
cmp
or
cmp
adc
mov
inc
out
mov
jbe
andb
lret
das
icebp
xchg
ds
dec
and
stos
jo
jle
andb
int3
lret
jmp
test
les
out
sarb
xchg
test
testb
dec
push
cli
adc
pusha
jp
popa
dec
out
leave
jge
loope
dec
pop
data16
push
mov
jg
ljmp
jg
cltd
stos
je
adc
dec
in
xlat
pop
icebp
sub
adc
and
test
sahf
lods
sub
ret
out
jge
pop
je,pn
icebp
cmp
daa
in
inc
fs
adc
sub
mov
lea
lahf
dec
and
adc
out
adc
int
mov
add
ss
pop
add
mov
fsubs
inc
lods
stos
movsl
push
fwait
pop
inc
sub
mov
sub
outsl
xchg
lods
or
inc
sub
test
lret
stc
adc
mov
lcall
dec
inc
aam
les
in
aad
in
data16
jg
mov
repz
bound
or
push
mov
hlt
inc
je
hlt
insl
dec
jne
push
icebp
in
rcrl
addl
movsl
xchg
inc
in
out
addr16
sub
data16
sub
xor
xchg
adc
jge
inc
push
lahf
pop
fisttpl
stos
outsb
adcb
xlat
pop
nop
pusha
scas
mov
sbbl
or
jp
or
push
jnp
scas
sub
sbb
jne
das
ds
clflush
es
stos
test
dec
lret
pop
dec
push
ja
ud0
fldcw
out
cltd
inc
out
notb
xorb
call
std
inc
in
mov
mov
scas
bound
lds
adc
idivb
xor
daa
js
jne
xor
inc
dec
pop
arpl
ds
icebp
arpl
out
icebp
cmp
jno
push
repz
pop
push
pop
push
dec
inc
notb
mov
stos
mov
into
cmp
mov
scas
mov
movsb
loop
out
stos
stos
std
jg
rolb
push
pop
push
push
add
and
gs
ret
adc
jb
mov
adc
push
mov
lods
mov
add
jp
and
jmp
pushf
rorb
pop
lods
jno
outsl
outsl
and
scas
sarb
push
cmp
inc
cmpsb
push
pop
out
pushf
mov
mov
or
inc
inc
push
push
sarb
adc
cmp
loope
dec
in
into
movb
lret
mov
pop
out
fdivs
scas
cmp
mov
leave
or
mov
pop
cmp
into
inc
cmp
mov
int
stc
adcl
adc
push
mov
in
stos
mov
jo
pop
ja
loopne
ret
pop
jbe
aam
dec
xor
out
xorl
lcall
fwait
xorl
jl
jge
pop
mov
or
sbb
push
enter
sahf
rcrl
std
movsb
loope
cltd
stos
or
mov
adc
jecxz
stc
and
add
loopne
mov
add
lds
dec
or
push
or
inc
push
mov
push
sbb
xchg
std
jl
ds
inc
stc
inc
pop
shrb
jle
add
mov
test
inc
xor
scas
xchg
sti
lea
fsubs
and
insb
mov
enter
jmp
popf
jb
subb
lahf
jg
lds
pop
mov
adc
jbe
mov
fwait
cmp
rorl
negb
mov
std
das
cmp
adc
popf
adc
sbb
out
std
mov
js
cmpsb
inc
rep
jp
jnp
or
cmp
dec
js
mov
call
in
sub
xchg
add
jnp
mov
or
dec
hlt
mov
popa
or
shll
nop
test
in
hlt
sbb
mov
cmp
push
or
xchg
inc
dec
adc
lret
aas
out
jg
adc
cs
add
dec
xor
mov
adc
and
repnz
rorb
mov
fdivs
adc
xchg
outsb
repz
jb
cli
xchg
fnstsw
mov
std
ss
pop
fdivr
pop
pop
xchg
jl
push
icebp
cmp
jo
scas
pop
push
cmp
aad
outsl
cltd
dec
lret
les
pusha
jb
rcl
scas
jecxz
push
mov
mov
cmc
in
in
adc
fstl
mov
mov
pop
sbb
fs
mov
fdivl
sbb
dec
in
fisttpl
rcrl
xchg
lock
je
sbb
cmp
lahf
xchg
mov
cwtl
push
pop
icebp
stc
repnz
jno
insb
mov
das
jnp
roll
dec
mov
subl
xor
sbb
lds
lret
or
inc
dec
stc
jae
inc
dec
jae
aaa
cmp
ret
cmp
addl
jne
pop
test
sub
inc
outsb
out
ds
dec
adc
or
rcll
loope
xchg
pop
xchg
push
pop
xchg
imul
jb
outsl
fbld
movsl
test
jnp
mov
inc
arpl
mov
cmp
inc
and
mov
pop
scas
pop
je
aam
movsb
push
insb
push
xchg
pushf
push
rorb
sbb
xchg
loope
mov
xor
mov
lods
cld
imul
dec
or
loopne
daa
xchg
push
in
jbe
rol
out
mov
dec
or
xlat
ret
jnp
adc
cmpsl
pusha
mov
adc
push
aas
in
ret
sti
push
xorl
sahf
out
dec
add
or
add
dec
cmpsb
inc
mull
rcr
jns
rclb
lea
jno
inc
scas
jb
jne
lahf
push
frstor
mov
mov
ss
scas
insl
lahf
sahf
pop
insb
cwtl
sti
pop
dec
jle
call
add
dec
js
push
mov
das
hlt
inc
addb
mov
inc
cmc
out
xlat
pop
into
push
pop
cltd
mov
pop
iret
scas
mov
cld
lahf
push
sbb
dec
es
testb
push
mov
insb
xor
dec
xchg
push
pushf
aaa
test
scas
dec
lcall
fs
adc
pop
rcr
adc
push
adc
sti
fdivs
xor
xlat
sbb
add
scas
hlt
cmp
fs
pop
ret
sub
xchg
movl
sbb
loopne
int
popf
scas
scas
sbb
arpl
lcall
je
sub
dec
sti
mov
cwtl
lret
popf
int3
jge
jle
ljmp
mov
xchg
cmp
or
ret
xlat
mov
push
sbb
and
out
lcall
in
fwait
shlb
les
mov
aaa
popa
pushf
push
push
aad
mov
pop
jno
cmpsl
les
stos
ret
mov
subb
outsb
push
insl
xor
leave
into
cmpsl
loopne
dec
lcall
dec
dec
jp
mov
int3
scas
daa
test
add
mov
add
sub
rep
mov
test
pop
dec
ret
fsubrl
in
rclb
aad
mov
loop
mov
jae
not
fildll
jge
std
mov
mov
in
lret
shll
jbe
cltd
lods
jge
ja
push
enter
shll
cmpsb
in
stc
xor
lock
das
inc
test
sub
fsts
add
out
mov
adcl
and
dec
pusha
cs
cmp
sbb
clc
arpl
jmp
inc
cwtl
cmpsb
xlat
mov
or
jle
mov
jnp
inc
out
pop
push
orl
sub
mov
jg
push
sbb
jl
loopne
loop
push
pop
movsl
sub
je
jno
sbb
repnz
addr16
inc
lock
fldt
inc
shl
pop
lods
push
bound
jl
test
nop
aad
imul
dec
insb
xor
cwtl
in
int3
daa
inc
ja
sub
mov
jge
inc
add
les
bound
jmp
imull
sbb
push
divl
pop
mov
stos
push
xor
inc
push
and
lock
xchg
aaa
fisubl
push
fsub
mov
bnd
test
mov
or
scas
add
or
jne
jmp
insb
out
pop
mov
fildll
push
subl
jecxz
mov
ret
ficoml
or
mov
add
outsb
mov
mov
ja
cmpsb
sbb
push
lcall
adc
adc
pop
and
rcl
and
dec
xchg
sbb
pop
pop
pop
mov
adc
in
popf
mov
cli
mov
and
repnz
out
bound
data16
inc
repnz
outsb
fwait
arpl
dec
push
add
pop
pushf
sbb
push
ss
pushf
inc
inc
jno
inc
xor
scas
cmpl
or
and
dec
outsl
push
pop
cmp
add
sbb
or
pop
iret
adc
lds
dec
lcall
mov
jle
xor
xchg
cld
cmc
out
jo
push
adc
add
insl
and
inc
fisubrs
add
lret
and
flds
je
push
scas
das
jns
inc
xor
filds
and
pop
in
mov
adc
push
xor
jle
and
push
int
repnz
jno
mov
cltd
fiadds
sbbl
cmc
lahf
mov
fdivrs
clc
cmp
ret
jbe
lds
cmp
and
or
clc
addl
and
inc
je
inc
les
std
push
in
test
or
sub
loope
adc
jns
add
sub
lds
pop
loope
jg
or
lock
imul
mov
scas
in
stos
popf
repnz
and
xchg
sbb
pop
pop
push
arpl
mov
fbld
mov
aaa
je
arpl
add
popa
in
mov
test
addr16
mov
fs
lcall
xlat
filds
and
pop
sub
cmp
mov
pop
mov
sbb
jno
add
and
adc
test
adcl
pop
and
jno
adc
mov
push
ret
or
mov
pusha
sub
add
aam
mov
add
and
sbb
leave
scas
fcmovnu
dec
jle
or
jns
adc
adc
inc
cmp
fbstp
sub
sbb
and
mov
cwtl
pop
and
ds
xor
dec
lret
add
jp
mov
lods
jne
bnd
dec
push
insb
popa
hlt
stos
and
cli
lods
and
shlb
fisubrs
rorl
movsb
fdivrs
and
roll
arpl
loope
or
fcomip
inc
aaa
inc
pop
stos
andb
std
dec
xchg
add
fisttpl
lcall
xchg
repnz
jo
lds
ja
pop
hlt
ss
rcrl
mov
pop
pushw
sub
roll
and
xor
fwait
add
xchg
test
rorl
cmp
mov
roll
push
movsl
xlat
int3
pop
pop
mov
mov
cmp
js
adc
cli
imul
in
addb
je
mov
add
mov
dec
xchg
std
cmp
lods
push
push
movsl
cli
inc
das
xor
push
das
or
cmp
out
inc
mov
jae
mov
test
mov
push
fucomp
pop
push
insl
shr
jecxz
outsb
in
divb
movsl
insl
cmpsb
repnz
xchg
pop
or
fisttps
push
pop
push
or
jae
cld
add
xor
fsubrp
repz
test
xchg
shl
xor
imul
pop
ret
push
xor
insl
xchg
cmp
sbb
jbe
lods
inc
dec
fs
mov
je
cmp
cmc
outsl
xchg
movsb
push
xor
aaa
mov
jg
sbb
pushl
outsl
out
and
xlat
mov
outsl
movsl
pop
out
pop
fldt
xor
sti
les
out
adc
adc
aam
pop
add
jne
scas
aaa
push
mov
psubsb
pushf
sub
xchg
xor
nopl
jge
and
sahf
inc
cmpsb
pop
pop
hlt
hlt
cmp
add
jl
sub
jbe
bound
aam
add
fistpll
cld
pop
icebp
repz
sub
dec
cwtl
inc
cld
and
icebp
sub
lods
inc
push
xchg
cmpsb
ret
std
scas
jg
push
jl
or
push
cltd
xchg
sub
or
mov
adc
xchg
fstpl
cmp
add
mov
jmp
xchg
xchg
sub
add
stc
shl
mov
jne
daa
fs
pop
shr
dec
js
test
cmp
jae
ds
or
xchg
xchg
int
xchg
mov
sub
cmpsl
or
jne
cmp
mov
imul
pop
fs
and
pop
sub
jl
adc
sbb
outsl
fs
stos
shrl
std
pop
push
ja
stos
arpl
movsl
push
in
outsb
pop
idiv
fimull
push
loopne
sub
ljmp
and
scas
push
adc
jns
sahf
cmp
jge
call
pop
rclb
cmp
and
inc
jne
mov
lret
push
xor
popa
popa
jge
push
cwtl
ss
mov
sbb
jle
jmp
inc
insb
cmp
inc
pop
mov
push
int3
ljmp
mov
add
jge
outsl
incl
jae
movsb
and
sbb
and
jb
cltd
cmp
daa
cmp
mov
mov
fimuls
test
fwait
fs
clc
mov
push
std
cmpsl
add
sarb
mov
ljmp
push
imul
mov
cmp
sbb
lcall
push
mov
int
xor
cmp
xchg
xchg
repnz
push
mov
xor
sub
lahf
fnsave
inc
bound
add
push
mov
lea
add
mov
std
or
imul
pop
xlat
push
sar
mov
and
dec
in
xchg
add
mov
pop
mov
rcrl
dec
jnp
fists
aad
out
scas
imul
sarb
jle
out
dec
out
rolb
jg
shrb
loopne
dec
jmp
aaa
cmp
stos
xor
inc
icebp
push
lods
outsl
mov
aaa
inc
jbe
jbe
xchg
or
out
into
inc
jb
shll
mov
leave
in
in
fcom
xor
add
adc
adc
gs
mov
lds
mov
mov
cmp
cmp
mov
dec
aaa
jecxz
jns
or
adc
mov
cmp
dec
xchg
sbb
cld
aad
pop
sbb
mov
test
add
fisubl
dec
lcall
or
add
jmp
loope
mov
and
push
cmpsl
mov
ja
andb
xchg
test
xchg
repnz
scas
rclb
mov
out
sub
cmc
adc
int3
push
jae
sbb
inc
inc
insb
insl
jl
scas
pop
cld
insl
cmpsb
fdecstp
test
pushf
push
lret
pop
inc
sahf
add
test
and
rorb
add
pop
clc
neg
dec
cwtl
adc
adc
mov
stc
aad
rep
iret
inc
test
sar
sarl
and
mov
out
xchg
hlt
inc
hlt
out
pop
ficompl
inc
repz
mov
or
add
loope
and
mov
push
push
std
popf
mov
loopne
xchg
imul
sahf
push
add
out
cmp
les
std
adc
cmpsb
aaa
lock
pop
stos
cmp
add
xchg
sub
cmc
sbb
add
adc
mov
adc
pop
mov
adc
xor
adc
inc
jmp
test
pop
adc
push
insb
adc
js
push
jbe
loopne
mov
js
imul
adc
cmp
out
dec
ljmp
lcall
out
fsubp
jp
cli
aas
jmp
ret
inc
xchg
in
das
into
imul
jbe
js
inc
xor
ja
test
iret
cltd
filds
xchg
jo
mov
sbb
fs
pop
xorb
faddl
dec
inc
mov
push
movsb
add
dec
daa
mov
fcomps
repnz
les
add
scas
pop
lret
in
xchg
cmp
or
adc
int
int
js
mov
fnstenv
mov
testl
push
pop
int
stos
cmpsb
fucomip
cli
sbb
jl
stc
pop
jecxz
ljmp
dec
negb
test
stos
push
push
xor
aas
dec
mov
outsl
aas
cltd
inc
adc
ss
sbb
jge
mov
adc
int
dec
sub
mov
sub
cwtl
mov
pop
loopne
into
loop
inc
pop
inc
fstpl
mov
cmpsb
pop
mov
or
fyl2xp1
adc
dec
inc
sub
xor
shrl
lcall
xchg
inc
addr16
add
fmuls
xchg
rcr
sbb
fists
mov
or
aam
cwtl
aam
jb
outsb
ss
xor
jno
add
pop
ljmp
push
fidivl
jecxz
hlt
cwtl
ds
fisubrl
loop
loopne
mov
les
scas
cmp
jmp
and
arpl
dec
jnp
jle
mov
sbb
fucomip
pop
lods
movsb
dec
ret
push
call
pop
fldt
repnz
and
mov
mov
sahf
pusha
jge
cmp
adc
clc
jle
stos
lahf
hlt
jl
aad
mov
push
push
incl
pop
push
rcrl
insb
cmpsb
mov
jg
push
iret
xchg
int
push
aam
xchg
adc
ja
push
arpl
add
decb
sahf
sti
push
mov
cmp
dec
std
mov
jae
mov
push
dec
sbb
mov
mov
adc
outsb
shlb
mov
push
jg
cmp
fisttpll
jne
mov
mov
xchg
movsb
inc
loopne
xor
sbb
subl
or
test
shufps
mov
cmp
and
outsb
pop
out
test
sub
xor
movsb
xchg
dec
ds
and
pop
push
fdiv
lods
push
pop
mov
pop
ds
or
cwtl
push
das
adc
out
fnstcw
out
inc
push
lds
repnz
lret
inc
adc
add
inc
jns
and
sbb
mov
fsubs
mov
outsl
out
dec
imul
adc
sub
sahf
shl
pusha
dec
loope
fadd
cli
insl
add
and
mov
out
ja
mov
adc
out
cld
insb
xchg
jl
mov
push
jl
and
mov
mov
outsl
push
adc
movb
mov
lea
xchg
ja
ficomps
mov
fiaddl
mov
jae
out
test
dec
int3
push
filds
cmpl
mov
sub
mov
insl
call
jae
pop
mov
imul
or
sbb
ljmp
cmp
test
rclb
mov
movsb
pop
std
adc
dec
cmp
idivb
icebp
aam
test
popf
adc
pop
clc
mov
cmovs
out
add
pop
mov
pop
lods
adc
movsl
push
dec
aam
pop
mov
sarb
imul
lods
dec
fsubs
and
push
fwait
mov
aaa
sbb
xchg
in
mov
sbb
out
add
popf
ret
cmp
or
push
sbb
in
jb
push
outsl
aas
cs
scas
and
jl
test
sub
lds
pop
dec
inc
mov
cmp
push
fs
and
jo
aas
push
push
push
dec
outsl
rsqrtps
pusha
xor
imul
out
jge
aam
hlt
test
and
in
in
lahf
or
dec
iret
dec
pop
xchg
fstps
mov
mov
fidivrl
lods
xchg
xchg
push
dec
sti
push
mov
ja
jae
cmp
shl
das
push
xor
outsb
mov
sub
roll
and
in
shr
push
jge
add
rcrb
outsl
jne
pop
pop
dec
bound
scas
scas
sub
mov
mov
mov
add
lock
and
lods
sbb
cli
xchg
sbb
adc
cmc
test
mov
xor
sub
sub
xchg
ss
lock
sub
add
pop
aas
and
ja
ljmp
adc
mov
in
or
sbb
xor
push
outsl
rcll
sub
scas
cmp
mov
xchg
les
jmp
mov
xor
test
jb
mov
rolb
jne
insl
mov
out
mov
subb
lods
push
push
rcl
out
test
outsb
sub
shrl
cmpsl
in
js
xchg
std
adc
push
xor
push
push
mov
cmpl
in
mov
js
fxch
xchg
jne
adcl
scas
inc
add
sbb
mov
fisubrl
jae
xchg
mov
in
fwait
mov
jns
or
xlat
in
fwait
jp
test
push
pusha
jbe
and
pminub
mov
sbb
push
xchg
scas
jo
pushf
mov
sbb
cltd
xchg
adc
dec
js
inc
jecxz
inc
mov
dec
fst
adc
lcall
cltd
loop
insb
icebp
jle
int3
lret
daa
dec
cld
jge
daa
in
mov
iret
aas
pop
push
pop
sbb
leave
xchg
mov
dec
lds
rcll
ret
popa
je
les
or
inc
xchg
sbb
sub
sbb
ljmp
and
sub
cltd
add
addr16
fidivrl
add
pop
pop
je
imul
adcb
out
inc
pop
sbb
ss
mov
jno
cld
sub
movsb
enter
pop
imul
and
mov
pop
ds
xlat
or
lcall
data16
dec
xor
ret
and
jmp
pop
adc
fwait
cwtl
lock
repz
xchg
inc
lret
push
xor
mov
cmpsb
xchg
xchg
mov
and
xor
std
push
inc
call
push
sub
test
mov
push
ss
incb
popa
and
mov
xor
cmp
fmull
ss
push
faddp
mov
lahf
aad
addr16
lock
xlat
push
mov
enter
enter
test
pop
mov
sbb
stos
sbb
daa
or
test
mov
sbb
push
mov
or
mov
lcall
add
xchg
pop
jne
add
xor
movsb
xchg
daa
xchg
add
xchg
neg
cwtl
dec
xchg
das
cmp
jle
xchg
xor
test
dec
imul
loop
sbb
cwtl
pop
jne
fidivs
divb
ds
daa
in
push
jp
lock
jge
popa
adc
add
insb
xor
std
jmp
jb
in
adc
pop
shlb
sub
jne
leave
pop
jl
or
dec
pop
inc
mov
sbb
lock
mov
mov
pop
sbb
or
xchg
out
je
pop
push
dec
xor
rorb
or
cltd
aam
and
fsubrs
andb
jb
imul
sbb
mov
cmpb
std
push
js
mov
js
test
aad
aam
mov
cwtd
sub
daa
add
jnp
xchg
push
cli
test
lret
cs
add
inc
mov
mov
push
scas
adc
sbb
add
cmp
cmp
push
enter
or
inc
mov
jecxz
xor
add
daa
in
mov
loopne
push
arpl
imul
enter
sahf
std
in
push
ljmp
hlt
loopne
add
iret
outsl
dec
aam
and
xorb
sbb
mov
push
paddusb
movsl
out
adc
lea
roll
cmc
mov
xor
in
jl
xchg
retw
push
jp
mov
mov
inc
jecxz
dec
push
loop
test
fnsave
stos
outsl
cld
notl
or
lods
adcb
sbb
or
inc
loop
sbb
sub
cmp
jmp
dec
pop
lea
jp
leave
mov
aad
sti
sbb
pop
cmp
sbb
dec
mov
ss
dec
mov
xor
jno
test
ss
cmp
xchg
inc
mul
mov
jp
lcall
call
rol
xchg
dec
sub
sti
rcrl
stos
imul
inc
sub
ss
mov
xchg
xchg
dec
xchg
movsb
negb
or
xor
rolb
movsl
popf
clc
jo
and
push
mov
sbb
hlt
jmp
mov
cmp
leave
pop
push
mov
jae
cmc
lcall
sub
push
and
pop
or
aaa
mov
or
sbb
jge
xorb
rcrb
adcb
cld
notb
test
test
popa
sub
stos
ffreep
outsw
jle
jbe
lea
inc
clc
scas
test
rorl
flds
adc
cmp
mov
int3
xchg
lods
adc
push
sub
js
jnp
jno
inc
xchg
aad
imul
loopne
inc
pushf
stos
shrl
or
xor
rcll
pop
jae
ja
mov
dec
in
inc
jp
movsl
mov
pop
sahf
jae
mov
cltd
stos
popf
lods
lret
or
xchg
adc
lock
mov
shrb
sub
sub
fcmovnb
xchg
imull
and
fildll
sub
js
ret
push
mov
add
sbb
cld
cmp
sub
inc
jbe
lret
popf
cmpsb
fdivl
in
es
dec
sbb
inc
nop
iret
or
fs
les
cld
inc
cmp
mov
sbb
movsl
mov
imul
cmpsb
dec
mov
rclb
mov
mov
aad
cmp
lods
loope
or
or
imul
and
mov
push
sahf
daa
jne
pop
into
icebp
jae
sbb
lcall
mov
push
sahf
enter
sbbb
sub
sbb
ficomps
adc
dec
mov
lret
jge
sti
fmull
test
fildll
nop
js
and
jge
and
popa
mov
mov
aad
xor
int3
test
ss
mov
jb
cmp
lea
movsl
imulb
mov
lret
lds
fstpl
enter
inc
jno
xchg
scas
jne
jmp
test
xor
jns
fsub
xchg
adc
aad
add
jg
dec
jo
push
push
bound
mov
rorb
cmp
pop
out
ja
andl
push
sbb
cmp
ret
xlat
jmp
outsl
icebp
mov
cmp
cmp
cmpl
inc
hlt
fstpt
fwait
pop
push
rcll
dec
cltd
incb
and
and
int
mov
lods
lret
xor
int
sbb
out
mulb
or
push
testb
icebp
adcb
movsb
pop
inc
push
ja
stos
pushf
sub
push
clc
mov
sbb
in
test
sbb
or
pop
xchg
or
emms
ror
shrb
or
dec
xchg
mov
or
jne
sub
mov
xlat
mov
xorb
addb
add
stos
js
add
pop
in
mov
mov
lret
lods
inc
xchg
mov
xor
sbb
call
adc
xchg
add
ds
negl
mov
dec
and
lcall
jmp
push
lahf
mov
ds
arpl
fs
cwtl
ss
sbb
xchg
fstpl
cmp
lea
iret
mov
fstpt
push
gs
orl
add
lcall
out
out
mov
dec
int3
and
jmp
push
cmp
mov
cmpsb
and
mov
push
push
dec
fcmovnb
xchg
push
pop
jmp
ret
xor
lock
insl
nop
inc
push
xlat
int3
push
scas
std
ss
lods
pop
push
push
scas
nop
mov
or
pop
add
sub
les
stos
ror
cmp
stos
in
jns
cwtl
cs
aas
add
outsb
push
jo
ja
aad
stos
and
shlb
aam
repnz
rcrl
add
hlt
push
mov
hlt
pop
leave
in
and
jae
sbb
pop
addr16
mov
sub
adc
cs
sbb
lcall
movsb
pop
ja
inc
jo
mov
sub
sub
dec
sbb
sub
push
push
push
jg
mov
inc
lock
cld
out
and
push
xchg
mov
andb
push
movb
iret
and
cs
push
push
pushf
jo
push
mov
idiv
xor
repnz
mov
out
dec
fstl
mov
pop
inc
push
push
sbbl
in
or
cmc
sbb
cmp
pusha
enter
addr16
std
fs
sahf
out
lods
sahf
jge
add
sahf
xchg
rcrb
push
out
mov
stc
jne
addr16
mov
imul
ja
pop
jnp
imul
movb
popa
sub
subl
push
mov
mov
je,pt
popa
cmpsb
push
mov
xchg
jecxz
pop
add
icebp
into
lcall
cli
mov
jnp
jp
mov
mov
test
add
push
dec
sub
mov
add
add
sub
sub
popa
fwait
push
xchg
and
add
xchg
adc
sbb
push
pop
mov
testb
xchg
xlat
out
pop
aam
push
test
push
mov
push
mov
pop
push
jae
lcall
push
out
in
pop
sub
and
sti
int3
cli
imul
outsl
shr
sub
and
mov
adc
xchg
popa
sbb
je
adc
mov
cwtl
pop
fisttpl
sbbb
lahf
dec
pop
pushf
jg
clc
mov
into
mov
mov
mov
dec
jp
or
pop
ja
enter
xchg
pop
xor
imul
sbb
or
pop
mov
mov
xchg
bound
and
adc
mov
inc
mov
dec
inc
inc
mov
out
daa
icebp
inc
xchg
in
mov
mov
out
out
xor
and
and
movsb
fstps
and
pop
insl
mov
aaa
push
jnp
or
add
mov
xor
loopne
enter
xchg
les
ds
sub
std
and
pop
sbb
shlb
orb
mov
icebp
lea
in
jns
notb
mov
popf
mov
outsb
cmpsl
sbb
arpl
fmuls
mov
jg
mov
cmp
lds
int
into
sbb
in
iret
mov
nop
dec
xor
add
inc
jno
xor
xor
pop
sbb
pop
decb
aad
mov
pop
leave
repz
sub
dec
std
xchg
lcall
negb
push
or
sbbb
bound
or
or
xchg
call
adc
bound
shrl
mov
data16
imul
push
popa
or
popa
inc
lret
mov
adc
lret
ret
mov
int3
movsl
loopne
test
adcb
dec
sbb
inc
pushf
mov
mov
mov
xchg
bound
cmpl
add
mov
sahf
cmp
and
fisubl
inc
into
lahf
jmp
lods
push
lahf
loopne
mov
call
sbbl
jo
aad
aad
dec
mov
mov
bound
ret
add
pop
clc
sbb
insl
add
or
push
call
xchg
push
fcmovbe
pop
lods
imul
push
es
jp
cli
leave
test
jo
push
inc
lods
loopne
dec
sub
push
mov
cmp
xor
lahf
inc
adc
add
jae
rep
mov
push
sbb
sti
mov
jae
test
xchg
adc
out
adc
into
mov
xor
in
pop
imul
daa
pop
aaa
xchg
dec
sbb
enter
in
mov
pop
inc
inc
loopne
dec
es
add
mov
adc
adc
ljmp
call
inc
enter
pop
movsl
pop
in
push
in
imul
nop
cld
xchg
in
mov
cwtl
add
int3
lods
aad
lods
or
push
roll
lcall
pop
mov
aad
gs
push
or
pop
cmpsb
icebp
pop
je
pop
pop
aaa
pop
ret
mov
sub
or
rorl
inc
jb
scas
out
fwait
stos
aad
dec
xchg
das
inc
mov
and
mov
cmc
mov
and
mov
sub
not
shrl
add
push
mov
jb
mov
xor
jbe
ficoms
imul
pop
lods
cmpxchg
inc
loop
mov
and
adc
and
fisttpl
imul
scas
push
outsb
cmpsb
xor
gs
mov
jecxz
mov
fnstenv
jno
imul
in
scas
jnp
mov
sub
adc
gs
inc
test
xor
ss
inc
adc
sbb
sub
dec
or
in
cmp
sti
cmp
xlat
insl
loope
into
mov
add
aad
jns
into
inc
sbb
xor
mov
push
cmpsb
push
jbe
pop
iret
je
mov
xchg
xor
decb
ss
cmp
xchg
outsb
addr16
mov
sahf
mov
in
push
or
popa
xchg
dec
push
xchg
scas
or
push
test
mov
and
push
cmp
or
icebp
ret
xor
dec
jne
push
jb
dec
repz
ds
sub
jle
cmovae
insl
cmp
ret
cmp
daa
add
orb
imul
stc
fndisi(8087
sbb
mov
int
mov
cmp
rcrl
fisttpl
mov
inc
jae
add
dec
adc
dec
sbbb
jmp
test
mov
and
or
mov
imul
clc
mov
enter
lods
pop
mov
adc
push
mov
jne
stc
das
enter
scas
push
orl
pop
push
add
fwait
adc
cmp
push
or
adc
cmpl
xchg
pop
fistpl
add
nop
hlt
sub
stos
sub
in
loopne
test
out
popf
jns
mov
rcrb
jl
daa
repnz
push
test
daa
out
lcall
gs
pop
jp
movsb
mov
rcrb
xlat
scas
nop
fwait
mov
mov
sbb
mov
lret
jp
lock
cmp
fucomi
xchg
sarb
cmpsb
mov
mov
imul
sub
or
loope
inc
fld
xor
adc
mov
fistl
pushf
sbb
xor
push
in
mov
sar
out
mov
mov
or
movsb
pop
fidivl
movl
stc
in
adc
imul
xchg
mov
xlat
mov
enter
push
xchg
es
out
pop
or
imul
stos
mov
inc
mov
mov
fnstsw
fst
inc
and
jp
pop
scas
push
loopne
dec
mov
cmovne
loopne
mov
nop
dec
pop
sbb
xchg
test
les
jno
leave
popa
xchg
rcll
jno
repnz
cmp
ret
gs
loopne
bswap
mov
into
inc
xchg
push
fdivp
hlt
fdiv
xorb
aaa
cli
int3
jns
insl
add
sub
xor
adc
cmpb
sbb
inc
sti
push
xor
in
adcl
repz
xlat
xchg
insl
mov
cmpsb
repnz
leave
dec
lret
jbe
imul
xor
aad
xchg
pop
nop
mov
hlt
dec
inc
push
push
outsl
add
stc
add
movsl
sbb
in
dec
jne
outsb
pusha
or
flds
test
mov
mov
sub
fldl
test
inc
cmp
pop
jo
mov
and
call
dec
pop
js
testl
push
sahf
rcll
sbb
inc
mov
ds
out
dec
dec
rorb
std
adc
push
imulb
inc
and
jmp
mov
das
data16
adc
out
flds
push
or
sub
scas
nop
imulb
lods
sbb
into
dec
push
pop
div
or
xchg
push
test
and
xchg
push
fldcw
outsl
xor
mov
mov
fsubrp
out
xchg
mov
jno
mov
jecxz
jnp
push
cld
or
mov
shr
insl
roll
jnp
jb
es
ljmp
dec
outsl
add
mov
cmp
out
push
das
jge
cli
fcoml
jo
scas
push
fsubrp
stc
dec
hlt
sti
jo
js
pop
push
push
int
pop
pop
inc
pusha
mov
jmp
insb
xchg
inc
mov
adc
inc
cmp
jno
lock
stos
mov
mov
mov
and
dec
dec
aam
xchg
movsb
push
jo
cmp
push
loope
push
fcmovne
and
notl
mov
sbb
sti
cmpb
loope
mov
addr16
scas
test
dec
in
popf
jge
jo
and
jg
inc
xor
cmp
shr
outsl
nop
mov
cld
jo
or
or
lock
enter
jge
mov
xchg
pop
mov
dec
inc
scas
add
fsub
xchg
inc
roll
mov
out
xor
jmp
shlb
dec
enter
popa
aas
fwait
and
addr16
cld
push
add
les
sbb
or
addr16
and
adc
cmpsl
mov
mov
add
sbb
insb
fidivs
and
ds
push
sbb
sbb
pop
dec
leave
lock
enter
sbb
xlat
ja
iret
insl
int
insw
mov
cmpsb
xlat
push
xchg
je
dec
loopne
mov
inc
mov
dec
les
pop
into
xor
daa
scas
xchg
push
sbb
je
sbb
jmp
cmp
xchg
push
pop
mov
es
and
inc
add
mov
sub
xchg
xlat
or
add
adc
cs
into
test
inc
pusha
inc
sub
fadd
adc
shrb
sbb
jno
sub
pop
mov
loope
addl
nop
pop
pop
add
push
jns
jmp
push
aas
imul
or
mov
das
das
int3
inc
add
mov
sub
push
shlb
push
sbb
cmp
pmulhuw
imul
jg
inc
loope
cmc
mov
cmpsb
mov
mov
fs
push
pop
lahf
int3
sbb
push
sub
pop
loop
addr16
fwait
pop
mov
mov
popf
inc
inc
push
mov
cld
inc
aas
pop
insl
xchg
pop
lock
xchg
cmpsl
sub
cwtl
loop
xchg
mov
push
ss
mov
mov
inc
ja
jecxz
inc
outsl
fwait
sub
outsl
lea
xor
xor
std
cwtl
repz
repnz
mov
pop
and
leave
inc
and
cli
mov
adc
pusha
jle
xchg
sub
popa
mov
rcr
pop
shlb
push
shrb
xchg
repnz
cmp
iret
es
test
cmp
bound
decb
outsb
push
adc
jns
adc
jle
lret
sub
mov
mov
es
lret
push
clc
cmpsb
jg
jmp
clc
xchg
fisttpll
push
repz
inc
adc
xchg
jle
clc
jle
xchg
mov
push
and
cmp
adc
push
or
xor
test
in
shrb
mov
sbb
adc
cmpsb
ret
adc
icebp
lret
push
rcr
mov
adc
jo
ret
add
dec
xchg
aam
xor
mov
dec
jp
jns
lret
adc
inc
arpl
xchg
inc
cmpsl
sub
inc
loop
sbb
aas
cmp
fidivrs
movsl
jae
lods
enter
push
add
out
jne
cmp
out
dec
mov
jmp
fstpt
mov
mov
fwait
xchg
add
cmpsb
xchg
movl
adc
jnp
sub
iret
pusha
add
popf
xlat
xchg
fisubrl
jb
int3
xor
dec
and
pop
ret
mov
jbe
mov
cmc
pop
repnz
mov
repnz
sbb
data16
or
lea
and
mov
inc
jnp
in
js
mov
add
jno
inc
mov
movsl
cld
jns
pop
cmpb
jno
pop
push
mov
push
sbb
psraw
add
add
cmc
shll
iret
mov
addr16
mov
sti
or
iret
out
cli
rcll
sbb
mov
cltd
lahf
js
jle
and
ret
fmul
or
jecxz
adc
mov
mov
mov
imul
loopne
mov
lea
sub
push
out
mov
sbb
sbb
jne
sahf
push
bound
xchg
sub
dec
or
sbb
lahf
lds
shll
mov
sub
jg
jno
data16
pop
sahf
lds
xchg
insl
stc
pusha
notl
stos
xchg
addr16
or
test
pop
popf
test
or
popf
fimuls
lcall
popa
adc
jg
add
dec
mov
fnstenv
and
test
frstor
adcb
sbb
cmp
inc
int3
mov
clc
mov
mov
loop
mov
inc
dec
mov
push
sub
loope
jle
idivb
test
lret
sbb
or
xchg
in
push
movsl
cmpsl
jecxz
gs
gs
shlb
out
std
stos
add
sarl
decb
pop
mov
aas
mov
scas
lahf
push
push
out
imul
push
int
minps
cmpsb
inc
pushf
dec
shl
orl
dec
xor
pop
pop
sub
loop
call
mov
orl
pop
ret
not
adc
cld
and
je
subb
dec
pop
push
cmp
cmp
xor
in
addl
stos
inc
dec
sahf
pop
push
pop
rcr
insb
arpl
dec
test
fiaddl
push
adcl
imul
shrb
int3
jmp
test
push
inc
jl
pop
push
adc
mov
inc
fists
pushf
rcl
cs
imul
adc
add
jne
pop
imul
fucomi
adc
push
or
mov
cld
flds
outsl
and
xor
cmpl
scas
stc
aam
cs
shlb
out
fs
jno
cltd
ret
inc
cld
sahf
add
repnz
imul
push
cmp
mov
inc
sub
sub
sub
push
push
mov
fldenv
push
iret
rcl
out
mov
scas
mov
mov
testb
and
lods
sbb
inc
popa
jne
sub
push
push
inc
mov
inc
in
or
into
pop
call
leave
test
and
mov
push
xchg
ja
mov
push
ret
incb
out
rcrl
outsl
jno
hlt
ret
mov
lds
adc
xor
push
adc
xchg
adc
xchg
addr16
ficomps
xchg
xchg
push
iret
add
ficoms
int3
push
push
hlt
xlat
fimuls
pop
add
shll
sbb
movb
jecxz
js
int3
fcmove
ret
in
xor
scas
jno
js
and
aaa
fwait
xchg
das
dec
sub
inc
addr16
out
jecxz
and
stos
pop
or
insb
int3
adc
sbb
mov
fsub
lret
int3
cmp
repnz
or
cmp
sub
test
stos
mov
lcall
daa
cmpb
inc
inc
xchg
fcomp
and
dec
outsb
idivb
aaa
mov
xlat
push
or
pusha
enter
daa
and
movsb
sbb
ss
pop
xchg
insl
mov
jg,pt
jmp
mov
mov
jo,pn
xchg
test
mov
sbb
add
mov
aaa
psubb
inc
mov
adc
aas
cli
cmp
out
mov
daa
fs
je
sbb
and
jne
fidivl
xor
xchg
adc
cltd
adc
test
and
sti
loopne
in
ja
jmp
ss
dec
cmp
ror
xlat
jmp
adc
or
jle
xchg
mov
cmpsb
es
mov
or
mov
inc
push
cmp
push
push
xor
pop
inc
test
andl
pop
cs
add
jae
and
fxch
cmp
adc
pop
ljmp
pushf
data16
cmp
mov
insb
push
inc
test
loopne
ret
in
shlb
mov
outsl
fiadds
sub
xchg
cmp
aas
fistpll
insb
xchg
mov
adcl
push
imul
mov
insb
ljmp
sbb
sbb
aaa
and
jge
rorl
subb
ds
jbe
dec
xor
mov
fidivl
lcall
mov
mov
in
hlt
cmp
int3
cmp
movsb
rcl
dec
mov
jp
inc
add
inc
ret
fcomp
popf
mov
rorb
aaa
xchg
dec
arpl
movsb
les
ljmp
jae
xchg
lahf
das
jmp
not
xor
jns
jne
mov
mov
sbb
cmp
xor
icebp
fcom
xor
mov
test
dec
mov
andb
xchg
dec
sub
outsl
push
mov
sub
add
insl
push
rcrl
lcall
cli
std
je
fcmovnbe
and
movsl
push
pushf
repz
aas
dec
push
aas
int3
xchg
cmc
sbb
movsb
out
cli
xchg
jmp
in
xor
or
jle
mov
enter
jo
mov
shll
stos
lock
rol
mov
mov
ret
outsl
repz
data16
inc
jg
in
mov
decl
inc
cwtl
dec
mov
push
cli
xchg
sub
mov
xchg
xor
jae
out
pop
test
pop
add
ja
push
xlat
inc
push
cmp
push
repz
fiadds
lret
ss
jge
pop
push
scas
inc
stos
push
mov
sbb
cmp
les
adc
xchg
xchg
cmp
pop
test
cs
jmp
cli
sbbb
xchg
stos
cmp
adc
rolb
mov
out
jne
mov
push
cmp
pop
push
insl
rol
inc
or
iretw
push
fsubp
mov
or
bound
mov
imul
icebp
or
xchg
push
nop
iret
push
repnz
mov
aaa
mov
lods
sub
xchg
lods
dec
scas
loop
sbb
outsl
cmp
out
sti
cli
out
cmp
pusha
mul
cmp
xor
add
mulb
or
jae
jne
push
cmpsl
mov
push
adc
xchg
out
lahf
outsb
iret
shrb
and
fcmovne
fisttpll
adc
jne
dec
fstl
into
mov
loopne
hlt
xchg
xlat
data16
or
cmp
push
jg
adc
ljmp
out
std
ljmp
out
std
push
sub
fdivr
mov
xor
inc
sub
stc
cmpsl
jge
lds
and
and
cltd
fiaddl
or
pop
aas
add
sbbb
pop
outsl
push
push
push
dec
je
and
ljmp
inc
push
leave
dec
fistps
xchg
daa
daa
scas
xchg
cmp
in
sahf
in
xorb
imul
sbb
dec
cmp
mov
mov
out
push
movsl
xlat
xor
pop
pop
loopne
jne
sub
pop
sbb
stc
les
incl
addl
or
pop
inc
repnz
call
icebp
test
fisttpl
into
repnz
push
cmp
loop
jecxz
addb
pop
mov
outsl
adc
int
adc
adc
nop
and
repz
sahf
cmp
xchg
sbb
pushf
and
pushf
rcrl
in
call
cmp
hlt
adc
into
movsb
cmc
test
es
pop
cmp
dec
pop
sbb
iret
fcmovb
arpl
idiv
test
lahf
movsl
dec
push
hlt
adc
js
addr16
lods
push
ljmp
or
adc
xchg
cmp
jo
sub
push
ja
push
xchg
ja
push
clc
or
call
lods
sar
pop
dec
cwtl
jl
push
xchg
call
push
ljmp
jge
mov
test
cld
repz
ret
push
fisubl
imul
sti
sub
jae
outsl
popf
mov
dec
and
imull
mov
adc
mov
outsb
fidivrs
in
xchg
insb
jb
sub
or
push
dec
xor
movb
sub
push
xlat
mov
aad
sub
mov
shl
mov
or
cmpl
bound
je
push
push
rcrl
mov
adc
sahf
dec
testb
fs
add
cltd
sbb
mov
lods
jnp
mov
add
adc
mov
fstpt
pop
add
sbb
and
adcb
xchg
pushf
xchg
data16
cmc
out
xor
and
shr
add
push
mov
aas
repz
sbb
adc
test
out
xchg
mov
pop
mov
loopne
stos
in
jle,pn
mov
push
clc
addl
sub
adc
pxor
and
fwait
push
cmp
mov
repnz
jno
addr16
addr16
dec
sbb
inc
dec
push
xor
fwait
xchg
rcl
in
sarl
mov
mov
pop
sbb
nop
je
jb
jle
mov
cli
push
outsb
and
xor
repnz
out
insl
dec
jbe
jnp
fs
fwait
leave
cwtl
das
add
std
leave
clc
stc
mov
daa
aaa
xchg
stos
jmp
test
inc
lahf
imull
hlt
sbb
aas
lahf
pop
imul
fimuls
mov
mov
les
jbe
lret
sti
orb
lret
mov
dec
mov
xchg
push
cmp
sbb
or
jecxz
das
pop
cmp
ror
fdivl
mov
xor
in
mov
jnp
sbb
out
into
gs
movsl
je
xchg
clc
push
cli
je
cmp
js
std
pop
cld
fwait
dec
je
or
ret
cmpsl
addr16
xchg
je
mov
std
mov
dec
cmp
mov
push
jecxz
and
jbe
push
adc
outsl
rorl
add
imul
or
dec
jne
lret
je
pop
daa
push
inc
sub
mov
mov
repz
int3
sti
xchg
pop
rcrl
inc
andb
and
arpl
cmp
test
pusha
pop
ret
add
addr16
pop
imul
cmp
jno
andl
xor
inc
xlat
lods
jns
mov
dec
pop
xchg
dec
dec
call
stos
sub
sub
cmpsl
sbb
inc
dec
fdivs
in
loope
shl
lock
cltd
test
ret
ja
add
imulb
xorl
add
in
push
addr16
mov
sar
jmp
movsl
into
or
pop
push
cmp
std
push
faddl
inc
push
lock
insb
cmp
or
lea
clc
cmpb
lea
xor
int
bound
xchg
jp
test
mov
sar
or
aam
or
xorl
pop
test
dec
xchg
dec
xchg
xchg
push
and
enter
fcoms
cltd
or
pop
repz
push
and
or
movsl
inc
aad
test
adc
pop
in
mov
push
mov
jae
push
inc
sarb
xor
into
pop
mov
jmp
pusha
js
in
mov
mov
mov
addr16
xchg
pop
sahf
and
and
inc
dec
jg
jle
mov
aaa
lds
sbb
rclb
push
xchg
jne
mov
dec
inc
pusha
or
inc
mov
fistl
fcomps
cmpsb
movsb
dec
clc
int
xchg
ds
push
sbb
js
cmc
mov
jnp
mov
cld
push
je
popf
inc
jle
cmp
lock
push
pop
lock
gs
int3
jle
xchg
dec
and
adcb
jne
sub
sbb
xchg
mov
and
les
nop
subl
inc
pop
mov
sarl
jo
fwait
lea
popa
add
outsl
inc
jb
mov
repnz
pop
sub
xor
push
in
push
or
mov
jns
bt
sbb
stc
or
push
adc
mov
std
add
dec
and
cmc
fsubr
jns
cmp
sbb
lret
in
sbb
add
cmc
dec
sub
jecxz
int
insl
test
into
add
pushf
popa
sbb
cmp
cwtl
outsb
push
fsubrl
mov
aam
shll
jno
cld
ja
scas
mov
and
xchg
add
lds
addb
pop
jo
mov
xchg
push
aaa
orb
fnsave
jne
pop
gs
inc
lea
outsb
push
and
pushf
jl
mov
jge
dec
imul
mov
test
mov
test
adc
mov
push
imul
std
mov
adc
shlb
cmp
shrb
sub
outsb
push
lea
imul
ss
loope
ss
sbb
and
adc
mov
push
call
mov
outsb
imul
or
add
and
dec
in
pop
in
icebp
cmp
mov
sbb
sub
cmp
or
mov
movsb
iret
ret
mov
stc
sahf
and
push
sub
inc
sub
mov
lahf
in
aaa
or
inc
in
mov
imul
add
adc
xchg
mov
pusha
cmp
push
out
je
inc
sbb
push
iret
cmpsl
scas
xchg
cmpsb
scas
out
xor
inc
pushl
or
sbb
mov
adc
mov
stos
mov
leave
sbb
data16
xorb
sti
push
adc
pop
xchg
pop
mov
in
or
pushf
push
jp
mov
and
in
push
lds
xorl
or
rcrb
outsb
insb
push
push
scas
mov
mov
aaa
hlt
lods
call
sub
sbb
sub
cmp
out
addr16
sub
dec
lock
addr16
xchg
mov
or
and
shrl
call
pop
xor
xor
adc
xor
sbb
shlb
dec
xor
xor
sub
addb
das
lret
and
lods
add
lret
es
mov
push
jg
pusha
xor
pop
pop
cmp
push
add
int
ljmp
cmp
cltd
adc
mov
es
mov
ss
es
mov
mov
adc
mov
sub
clc
jne
push
fwait
inc
sbb
mov
mov
mov
cli
dec
je
out
mov
aaa
lcall
mov
jae
pushf
sahf
push
and
sbb
mov
dec
shll
hlt
dec
leave
push
push
cmp
clc
sti
std
mov
push
enter
test
int3
mov
stc
aaa
push
push
xchg
jmp
enter
sub
mov
cld
push
sub
dec
int
dec
cmpb
cli
ficoms
inc
pop
add
icebp
mov
and
pop
lea
es
cmpsl
test
push
js
jne
or
mov
movsb
mov
pop
xlat
or
rcl
mov
das
mov
or
enter
jnp
dec
ljmp
movsl
xor
inc
or
and
jbe
mov
xchg
cmp
fwait
pusha
push
push
popf
into
xorb
inc
xor
pop
or
popf
xchg
gs
jb
iret
repz
push
pusha
js
das
pop
movsl
mov
xor
into
cli
les
icebp
pop
sbb
mov
mov
pop
sub
movsl
xor
dec
cli
and
jnp
adc
dec
inc
dec
push
out
add
loope
insl
pop
jecxz
outsl
sbb
test
push
scas
pop
and
mov
lods
xchg
pop
mov
rcr
inc
test
mov
test
xor
dec
shlb
jg
sbb
jns
movsl
push
mov
mov
pop
fs
jbe
into
in
xchg
mov
jb
aam
cltd
sbb
cmpsl
out
test
js
push
cli
xlat
push
adc
mov
aad
addb
aaa
lods
pop
fsub
out
mov
or
cmp
popa
cmp
sahf
push
test
aad
scas
addr16
mov
int3
je
out
push
iret
leave
jmp
shlb
shlb
inc
call
mov
lock
ret
mov
mov
icebp
add
sarl
jp
cmp
lds
pop
or
pop
insb
addr16
dec
push
movsb
repz
xchg
enter
and
aam
pop
push
aas
cmp
insb
dec
sbb
pop
aas
inc
lcall
inc
scas
cmp
dec
dec
test
repz
shr
orl
aaa
adc
scas
or
pop
mov
pushf
jb
je
inc
jns
push
aad
sbb
sarl
je
mov
ret
cwtl
pop
pop
outsb
idivb
add
lods
sete
scas
mov
arpl
mov
inc
clc
int3
push
inc
icebp
rclb
sti
mov
jae
jne
imul
and
fcomps
pop
push
stc
xor
lcall
inc
mov
xchg
adc
xchg
jp
js
aam
call
xor
mov
push
mov
mull
dec
outsb
stos
xor
iret
cmpsl
mov
mov
lock
jle
popf
adcb
push
lods
jg
arpl
jmp
xchg
pop
add
pop
lea
and
pop
push
gs
stos
push
in
mov
gs
aaa
sub
test
cmpl
and
ret
mov
push
faddl
jo
sbb
pop
adc
sub
ds
arpl
lret
ret
push
pop
push
enter
mov
push
mov
inc
xor
and
pop
sti
lds
mov
sub
andb
insb
add
push
jno
stos
xor
push
mov
shr
jp
icebp
outsb
mov
fists
out
das
pop
push
jns
into
inc
lcall
jg
movsb
gs
leave
out
push
lret
mov
inc
loope
or
iret
notb
adc
sti
cmc
shrb
push
dec
cmpsl
fcmovu
icebp
shl
xor
xchg
xchg
pop
test
stos
std
das
out
cs
add
jne
in
add
popf
daa
shl
out
imul
ljmp
and
or
in
cmp
jl
add
rcll
ja
cmp
xchg
int
mov
lret
push
ret
pushf
push
call
ljmp
mov
mov
jb
cmpb
dec
xchg
mov
xchg
rcll
inc
daa
push
das
add
lahf
aaa
mov
std
mov
or
push
lret
adc
ljmp
imul
stc
notl
in
in
xchg
scas
test
mov
pop
or
or
test
jbe
jmp
shrl
or
jae
into
dec
pop
mov
xor
jge
or
mov
xor
not
xchg
dec
aam
pop
lea
or
and
stc
mov
mov
fcompl
jb
decb
mov
jle
or
add
xor
and
cltd
addr16
and
fisttpl
rcr
lock
popa
add
nop
fisttps
inc
pop
in
cmp
out
loopne
scas
push
add
cmpsb
cltd
adc
mov
lds
xchg
fldz
or
cli
lods
xlat
repz
lods
and
push
xor
lock
fs
adc
cli
mov
mov
xchg
pusha
pop
jp
lock
cmp
pop
mov
adc
cmp
adc
je
add
sahf
fsts
test
mov
sbb
and
int3
out
daa
pop
aam
cmc
in
js
mov
popa
jge
imul
xor
cmp
mov
jbe
lahf
push
mov
push
sub
mov
cmc
xchg
in
push
das
dec
outsl
mov
mov
mov
sub
or
fisubrl
dec
test
daa
xor
xlat
mov
scas
mov
lcall
mov
sbb
fsubrs
cmp
xchg
push
or
sub
or
dec
mov
xchg
lods
or
es
jg
out
sub
xchg
push
std
and
fwait
clc
push
mov
pop
push
pop
stos
and
and
outsl
xchg
jp
dec
testl
jle
stos
xchg
rcll
jge
inc
pop
xlat
or
sub
jbe
sub
xchg
mov
mov
cmp
mov
ljmp
stos
jne
cmc
dec
rcrl
adc
popa
in
fidivl
sbb
cmp
sbb
popf
sbb
fcomi
cmp
or
cwtl
dec
leave
lock
push
sbb
sbbl
push
or
adc
int3
xor
lock
rcl
js
sti
sbb
scas
fistps
mov
push
sub
movsb
adc
mov
repnz
int
xor
sub
mov
or
mov
ljmp
fdivrs
dec
pop
sbb
xchg
sub
dec
push
jmp
and
mov
lock
imul
mov
jns
rcrl
sbb
sbb
pop
cld
shll
outsb
sti
js
mov
xor
mov
shr
sarb
sbb
dec
les
imul
cmpsl
xlat
sbb
fisttps
pop
push
outsl
mov
es
jl
jl
push
clc
scas
shlb
fadd
in
inc
lock
lods
cld
cmp
xor
enter
lahf
adc
mov
clc
or
xchg
repz
stc
and
imul
popfw
icebp
lds
fdivrl
inc
movsl
enter
mov
mov
orl
repnz
jno
mull
pusha
leave
sbb
mov
imul
int3
xchg
adc
jnp
jo
push
or
das
fimuls
and
les
xchg
mov
pushf
fldenv
pop
sbb
cltd
xchg
adc
mov
cmc
pop
add
mov
cmc
out
sub
cmc
pop
lea
popa
sahf
xor
and
enter
stc
xchg
jmp
into
pop
pushf
aad
ss
in
out
jns
hlt
mov
mov
ljmp
adc
cmovns
movsb
andb
loop
in
or
popf
orb
mov
aad
loopne
clc
mov
jg
nop
jmp
fldt
or
pop
lret
push
mov
dec
popl
mov
jb
lds
aas
cltd
das
dec
mov
jge
adc
dec
enter
aad
fiaddl
mov
psrlq
jle
push
jns
test
mov
fildl
pop
mov
push
mov
sti
js
out
aam
cs
add
mov
aaa
lret
imul
decb
xor
inc
int
add
ret
dec
test
jno
lret
cmp
pop
loop
popf
addl
xchg
jle
rorl
fwait
ds
stos
fcompl
pop
xor
mov
mov
daa
imul
xchg
ss
mov
inc
xorb
lds
adc
ds
call
in
or
movsb
mov
ja
xchg
popf
jp
adc
testb
aam
dec
std
pusha
sub
sub
sbb
ss
fisubl
pop
pop
xor
mov
add
jge
add
sbb
subl
imul
inc
pop
arpl
pop
cmp
movups
sub
mov
fcoml
jno
mov
gs
and
rolb
and
pop
cmc
std
sub
or
xor
lea
cmpl
sub
hlt
jle
inc
and
dec
jnp
xorb
xor
xchg
das
jge
loop
bound
mov
repz
pusha
mov
push
loope
ffree
mov
shrl
mov
es
sbb
jl
test
mov
movsl
cmp
xchg
jle
jb
scas
sbb
pop
bound
shlb
and
inc
leave
mov
sub
aad
jnp
test
idivl
test
sub
xor
xor
lods
std
jae
ficomps
sub
dec
adc
or
shll
push
scas
ja
loope
mov
adc
std
dec
and
or
jmp
lods
bswap
adc
or
nop
mov
fistpl
push
sarl
mov
sti
call
mov
ret
pop
insb
sbb
push
repnz
sbb
adcl
mov
dec
lods
push
xor
insl
cld
add
dec
js
pop
xor
jbe
popf
popa
rcll
add
dec
das
hlt
xor
in
pop
sub
mull
fisubrs
mov
ja
loope
lods
mov
pop
adc
mov
add
push
hlt
mov
imul
movsl
cs
mov
shll
fstps
rcl
test
pop
ffree
pusha
jb
dec
sbb
subb
insb
jno
sub
fimuls
iret
insb
and
and
enter
mov
imul
push
sub
xor
pop
mul
or
aaa
xor
inc
fsubl
or
negb
push
adc
sti
adc
popf
xchg
imul
cmp
and
mov
cmp
mov
dec
repnz
jns
add
test
dec
shll
lods
mov
push
fiadds
leave
lcall
out
les
shrb
add
insl
sbb
push
push
mov
rcr
inc
add
jo
xchg
in
call
pop
or
and
mov
vcmple_oqsd
xchg
shlb
push
sbb
cmpsb
mov
aam
fistps
shll
mov
and
jae
or
negl
and
lret
je
addr16
fdivl
jg
mov
xchg
jp
into
jp
inc
scas
jbe,pt
fidivl
stos
loopne
lret
cmp
out
push
mov
in
lahf
inc
ret
xchg
sub
or
adc
mov
xor
ficoms
mov
ss
pop
xor
dec
xchg
scas
outsl
ljmp
mov
sbb
push
scas
and
stc
push
inc
push
insl
inc
mov
push
or
outsb
add
jecxz
lods
mov
sbb
lock
sbb
pop
sub
push
ss
sbb
cmp
push
add
loope
test
mov
xchg
xchg
push
push
jnp
ror
js
dec
sub
add
jmp
xchg
lret
and
les
mov
mov
mov
cwtl
inc
cs
dec
mov
cli
inc
or
adc
addl
sbb
add
jo
dec
shrl
std
lret
mov
adc
adc
push
lret
fs
imul
and
icebp
repnz
add
lock
test
ljmp
adc
xor
ret
xor
and
jge
mov
negl
je
ret
or
iret
ret
jp
and
sbb
sub
mov
sahf
je
nop
inc
sbb
jmp
push
fistl
jne
add
dec
decb
and
int3
mov
xlat
pop
insb
jmp
loopne
cmp
scas
sub
lcall
shrb
cli
adc
out
cmc
push
leave
out
xor
adc
dec
data16
pop
inc
aas
sub
jge
idivl
pop
pop
es
in
dec
or
stc
scas
shll
ljmp
dec
test
test
cmc
and
adc
outsb
adc
cmp
in
fisttpl
out
jo
ret
dec
sbb
imul
add
mov
movsl
mov
fdivl
mull
dec
cmpsb
imul
and
nop
shl
mov
dec
push
push
sub
jnp
cmp
lret
rorb
data16
repnz
add
mov
push
mov
lea
jo
lret
or
fmuls
shrb
cmp
sahf
ret
mov
sti
insl
xlat
mov
dec
sub
sub
adc
sub
sbb
out
fidivl
stos
xchg
mov
sub
ja
mov
xchg
int3
push
inc
or
xor
inc
sub
ret
jnp
or
ja
pop
sar
pop
jae
dec
aam
cwtl
cmp
cwtl
jne
and
stc
xchg
pop
xchg
movsb
mov
imul
lock
dec
sub
jl
cmpsl
xchg
std
add
push
lds
inc
sbb
aaa
mov
inc
nop
mov
nop
repz
or
xsaves
sub
mov
or
push
shrb
movsb
xor
pop
je
adc
xor
divb
jp
mov
jp
jo
inc
fcmovnbe
in
outsl
lret
inc
dec
gs
fs
stos
rolb
rorl
fimull
loope
push
add
jmp
sbb
dec
les
mov
insb
movl
xchg
repnz
jg
dec
xchg
mov
dec
outsl
dec
adc
sbb
out
dec
xor
dec
xlat
xchg
fimuls
hlt
cmp
inc
xorb
insb
xlat
mov
std
dec
mov
mov
cs
iret
loop
fiaddl
mov
mov
arpl
jecxz
mov
das
sti
sbbb
ss
dec
cmp
stos
into
adc
bound
pop
shlb
fs
xchg
repz
insl
xchg
cmp
mov
call
pushf
jg
inc
ss
lds
movsl
popa
test
sub
sti
call
xlat
jle
sub
fadds
cmc
ss
or
mov
cltd
pop
inc
das
xchg
jbe
popa
xchg
addr16
cmp
jns
es
cmpsb
sub
lock
mov
lahf
call
int3
mov
addl
data16
mov
xor
in
jmp
icebp
push
push
dec
div
xor
out
jle
inc
out
aas
lock
pop
add
or
cltd
loope
in
mov
push
jb
mov
sbb
lcall
xor
sbb
sub
cmc
popf
dec
cmpsb
fsubr
arpl
je
fists
pop
mov
out
movsb
sarl
sub
add
or
fidivrl
pop
bound
repz
xchg
loopne
je
lahf
push
dec
xchg
jnp
xor
movsb
dec
adc
out
cmpsb
sub
arpl
jns
sbb
out
mov
xchg
push
push
call
adcb
cmp
pop
push
jge
jmp
adc
jo
icebp
cmpsb
int
and
fs
jmp
sbb
sub
flds
ljmp
sbb
mov
stc
adc
push
dec
sub
jbe
add
loopne
cmpsb
inc
rcll
push
clc
cmp
out
repnz
jg
xor
jmp
push
push
push
out
pop
test
cld
inc
pop
and
in
in
dec
stos
mov
ja
pusha
lret
pushf
cwtl
pop
or
dec
lcall
mov
mov
sbb
das
mov
inc
aam
repnz
cmc
daa
js
popf
scas
inc
adc
adc
fldz
bound
mov
adc
mov
mov
sub
adc
mov
loop
xchg
nop
push
push
mov
xlat
jl
pop
scas
pushf
inc
push
add
mov
shl
lods
imul
test
ljmp
pop
and
xchg
stc
adcb
inc
and
mov
scas
stc
or
sub
xchg
testb
inc
stos
cmp
jmp
sub
and
sbb
xchg
js,pn
dec
inc
lret
in
cltd
inc
sub
lds
lods
cmp
push
cwtl
push
stos
jb
pop
push
mov
cmpsb
sbbb
es
fisttpl
dec
cmpsb
aaa
jl
and
mov
dec
xor
inc
jbe
mov
js
insb
and
dec
pop
loop
mov
imul
xlat
jge
mov
aam
pop
or
sbb
pop
lret
sahf
loopne
stc
jmp
cmp
add
xchg
jle
add
pop
dec
add
and
cmpsb
outsl
icebp
mov
sub
xor
and
or
fistpl
icebp
xchg
dec
cwtl
movsl
jbe
inc
inc
cli
adc
mov
mov
cmpsb
lcall
adc
xchg
pop
push
insl
mov
adc
lret
js
cmp
xchg
add
push
jb
pop
stos
js
xchg
or
inc
add
loopne
dec
dec
inc
mov
dec
in
xchg
loop
xlat
dec
mov
addb
add
jle
leave
clc
ret
addr16
jbe
loopne
fistl
les
and
dec
out
movsb
lret
lods
sub
arpl
sbb
xor
mov
mov
xchg
movsb
jg
test
push
imul
jnp
pop
out
fnstsw
test
pop
mov
sbb
ljmp
pop
aaa
dec
inc
ret
adc
jle
clc
xchg
cmpsb
or
mov
adc
int3
xchg
jp
testb
insb
loope
fildll
loop
xor
clc
pop
and
lret
pop
inc
jno
pop
imul
push
fwait
ja
mov
lock
push
ret
dec
mov
cmp
outsl
sbb
testb
jae
loope
out
push
jb,pn
fadd
shrb
adc
jno
insb
mov
bound
push
shrl
mov
mov
mov
pop
cwtl
sub
sbb
add
data16
jns
adc
addr16
lahf
jno
add
jnp
popf
hlt
xor
mov
add
fucom
adc
xor
jbe,pt
jmp
jecxz
dec
mov
xchg
jbe
inc
fs
pop
and
mov
imul
jecxz
cmc
lods
mov
bswap
push
xchg
cld
cmc
test
jnp
in
stc
orb
loope
outsb
popa
mov
in
por
push
cltd
inc
jmp
inc
mov
inc
cmpsl
into
inc
lcall
push
push
jns
shlb
fs
mov
sub
jns
mov
jmp
mov
cwtl
dec
jp
jg
into
sarb
push
push
push
sub
pop
xchg
jb
pmulhw
lods
sbb
push
xchg
mov
cwtl
pop
sub
clc
and
xor
xchg
jae
negb
xchg
lahf
and
sub
ljmp
adc
sub
cli
inc
je
pop
mov
push
inc
je
xor
cmp
lods
jmp
nop
or
dec
sub
dec
ret
test
xor
fs
jle
sub
or
jae
test
in
data16
xchg
cmp
xor
test
mov
ja
test
popa
sub
jns
cltd
lret
ret
add
je
pushf
xor
decb
lret
fs
lds
in
mov
aam
jg
sbb
sub
pop
adc
jnp
sbb
icebp
bound
mov
mov
cltd
mov
outsb
push
je
and
test
out
sub
test
or
stos
mov
test
mov
ret
push
xor
jbe
adc
xchg
inc
popf
or
sti
xchg
or
call
or
arpl
mov
xchg
stc
enter
cmpsb
or
stos
sarl
jno
clc
pop
mov
xchg
sbb
ret
je
je
shl
cmpsb
lcall
adc
sarb
mov
lcall
fidivl
add
xor
inc
xchg
mov
popa
je
call
and
mov
push
fsts
cmp
sub
shll
pop
push
push
pop
and
cmp
in
cli
cmp
idivb
int
push
mov
jae
pushf
lods
icebp
out
mov
lcall
push
add
inc
and
jns
fdiv
push
cli
and
mov
mov
rol
cwtl
neg
ficoms
call
pop
inc
adc
push
imul
pop
es
lahf
xor
xor
leave
incb
test
adc
fs
and
insl
mov
add
data16
outsb
add
mov
pop
jbe
loop
clc
faddl
xchg
insb
adcb
or
jp
mov
add
sbb
pusha
mov
sbb
cld
sub
outsl
les
mov
mov
adc
mov
popf
push
inc
add
mov
int
jecxz
mov
mov
mov
add
mov
scas
inc
ficoml
movsb
outsb
pop
sarb
es
cmp
sbb
out
cmp
divb
lcall
sarb
mov
test
roll
sbb
scas
jae
loope
negb
add
test
notb
sahf
lds
xor
loopne
push
rcll
insl
mov
add
mov
or
jno
mov
push
cld
lock
mov
inc
and
pop
or
test
sarl
xor
pop
add
mov
mov
hlt
xor
xchg
sbb
xor
imul
add
in
cltd
xchg
decl
adc
xchg
push
orl
stos
pusha
or
xchg
adc
cmp
daa
movsb
mov
shr
and
xor
dec
mov
cmpsb
inc
mov
mov
icebp
rcr
sbb
rol
and
mov
sub
jno
sub
and
or
xchg
clc
or
fldt
sbb
jg
sarl
and
rolb
adc
pop
xor
pop
das
fld
scas
xchg
push
mov
or
ds
aad
pop
inc
cmpsl
cmp
push
ret
cmp
out
jne
fwait
add
movsl
dec
test
cwtl
or
test
push
lods
test
movsl
pop
outsl
into
clc
popf
mov
jmp
xchg
bound
cwtl
test
imul
mov
ret
push
mov
sub
repnz
push
dec
icebp
fs
cmpl
and
inc
jmp
sbbb
inc
jns
and
dec
add
cmp
cs
hlt
and
popa
cmp
sti
clc
js
pop
insb
and
stc
pop
pop
sub
cmp
in
xchg
mov
and
or
cmpsb
clc
fldenv
add
mov
jg
popa
mov
std
stos
adc
iret
pop
inc
or
xor
add
cmp
loope
mov
stc
pop
xchg
cmp
add
cmc
movsl
lret
xor
sub
mov
xchg
jno
inc
in
mov
jle
adc
adc
add
aam
xchg
cmpsb
pop
or
lcall
xorb
pop
and
cmp
mov
cmpsb
xchg
adc
loop
out
sbb
int3
xlat
loopne
mov
ljmp
sub
dec
jne
sub
test
push
insb
fcomi
sbb
inc
stos
xor
fsub
lods
pop
clc
sbb
ljmp
cmpsl
add
xchg
xchg
mov
mov
sahf
fsubl
icebp
push
jecxz
sbb
pushf
loope
js
jae
sti
orl
pop
dec
mov
push
sub
xchg
mov
inc
clc
arpl
sub
push
in
aaa
xlat
adc
sub
arpl
pop
in
sbb
loop
add
out
in
lods
sbb
movsb
ret
aam
xchg
or
in
adc
cmp
cld
jno
mov
inc
out
mov
ja
mov
test
xchg
mov
icebp
ret
lret
shr
and
enter
or
mov
push
pop
and
inc
push
mov
movsl
lret
mov
inc
push
xchg
loopne
xchg
jp
adc
push
push
push
sub
sub
add
sub
and
adc
aaa
ficomps
test
clc
sbb
pop
insb
movsb
adc
ficompl
fdivl
loope
push
movsb
aas
clc
shlb
imul
cwtl
insl
clc
lcall
shrl
xor
pop
imul
call
jp
lret
pop
sub
dec
inc
push
jg
nop
xor
aad
push
stos
enter
mov
lock
shrl
ds
les
push
sahf
or
mov
loope
repnz
push
aas
xchg
ljmp
lahf
leave
inc
dec
mov
imul
int
insl
add
pop
sbbl
lods
cli
sbb
fistps
cwtl
fs
jge
jl
fsubr
cwtl
std
dec
aad
or
pop
push
mov
std
mov
inc
nop
out
sub
js
lods
cmpsb
fwait
mov
outsl
pop
inc
dec
int3
hlt
pop
rcrl
pushf
dec
pop
cli
fdivs
lret
icebp
iret
outsb
ljmp
mov
dec
ljmp
xor
inc
xorb
and
push
push
mov
mov
out
or
jmp
xchg
push
jae
cmp
popf
adc
inc
inc
lods
jp
addr16
xchg
scas
xchg
fcompl
mov
or
data16
cmp
aam
or
int3
mov
ret
insl
movsl
xchg
notb
pop
pop
add
movsb
xorl
ret
cmp
jge
add
jb
movsb
mov
or
add
adc
dec
out
divb
pushf
inc
stos
wrmsr
mov
pop
ret
loopne
xor
or
jmp
sbb
loop
in
xchg
mov
fsubl
inc
xchg
shlb
inc
mov
movsl
inc
adc
mov
add
sbb
fcmovb
ret
loope
adc
leave
pop
jg
sub
pop
inc
call
mov
pop
ret
sbb
xchg
sub
jge
fs
or
cli
xchg
dec
jns,pn
jg
fs
into
or
mov
adc
jo
mov
rcrl
lahf
push
pop
int
popa
xor
bound
cwtl
or
jge
mov
xor
push
cmpsb
push
negb
test
arpl
divb
repz
mov
pop
sub
ljmp
les
sub
stc
fbstp
test
and
xorb
and
or
stc
xchg
push
pop
mov
rcll
jno
cwtl
sub
out
adc
adc
add
xor
add
push
mov
aas
and
mov
mov
xor
jnp
fsincos
jl
lods
pop
pop
out
in
mov
cld
and
scas
aaa
pop
out
addr16
fimuls
call
add
outsb
out
clc
jne
sbb
xchg
push
out
insl
lock
pusha
bound
outsl
mov
xchg
test
sbb
test
mov
test
fstpl
int
testb
xchg
pop
mov
std
shl
jle
jl
mov
adc
rcrl
mov
hlt
add
outsl
lds
jp
mov
and
pop
add
adc
mov
mov
inc
sarb
leave
test
push
fs
mov
arpl
adc
movsb
stos
mov
insb
cmp
jb
push
stc
fisttps
push
lea
aas
rcl
pop
xchg
pop
loope
ss
pop
pop
push
das
jge
jmp
mov
mov
ljmp
addr16
leave
jb
mov
mov
pop
mov
das
mulb
inc
sub
xlat
cmp
add
fcmove
outsb
loop
pop
xor
fs
sbb
inc
call
insb
les
adc
insl
xor
mov
sti
pop
jo
mov
cmp
fsubl
xor
and
xor
stos
stos
push
fists
mov
sarl
lcall
jecxz
mov
pop
les
xchg
mov
hlt
mov
movsl
xorb
pop
sbbb
xchg
push
roll
popa
push
xor
inc
xor
repz
pusha
repz
push
cwtl
push
es
subb
push
dec
dec
outsl
mov
push
mov
mov
aad
add
pop
pop
push
cwtl
push
popl
push
jle
imul
imul
inc
shlb
imul
add
jne
mov
and
push
mov
inc
inc
in
ja
inc
jl
add
jle
adc
lret
scas
out
jb
bound
scas
pop
inc
pop
mov
xlat
sub
rcl
pop
sub
lcall
push
sub
jno
gs
xchg
inc
mov
je
inc
or
or
fcomps
insl
aas
push
popf
subb
mov
cmp
lret
lahf
inc
mov
shr
jmp
xchg
imul
mov
sub
mov
mov
out
mov
cmpsl
sbb
jp
push
xor
insl
push
push
xor
or
dec
mov
cmp
es
pop
cmpsl
repnz
pusha
xchg
adc
std
inc
and
jp
jbe
add
in
or
imul
stos
cmp
dec
mov
lcall
and
stos
repnz
inc
icebp
rorb
xchg
inc
xlat
add
mov
push
or
adc
push
fisttpl
loop
aas
lcall
lds
movsl
inc
cmpsb
ret
jle
mov
popa
popa
sbb
inc
arpl
lea
or
push
inc
cltd
jg
dec
pop
outsl
int3
test
dec
cmp
jnp
push
lret
fldl
nop
xor
mov
sub
lahf
and
sub
jmp
fsubrl
in
dec
cmc
ss
pop
fsts
std
or
and
mov
mov
dec
mov
les
test
daa
mov
rorl
inc
nop
mull
push
test
fwait
push
rcrb
pushf
pop
iret
jp
xorl
jae
in
cli
mov
fs
les
stos
xchg
add
mov
fstl
cld
mov
add
mov
mov
push
inc
and
pminsw
xchg
pusha
shll
jle
stc
mov
int
subl
out
mov
loop
roll
clc
sub
fs
cmpsb
add
ficompl
push
adc
test
hlt
and
into
cmp
jmp
fwait
sub
outsl
lret
mov
loope
mov
roll
xlat
sub
xor
dec
sbb
into
sub
sub
pop
pop
sbb
sbb
adc
bound
and
jbe
jbe
mov
outsb
mov
push
and
ss
mov
jnp
mov
mov
lea
mov
lock
xor
lods
pop
repnz
mov
jg
lret
jmp
pop
std
or
sub
insb
or
lods
xchg
das
faddl
stc
das
mov
andl
data16
lret
mov
outsb
xchg
pop
adc
fwait
scas
jns
clc
push
sub
ret
popa
adc
xlat
stos
adc
lds
in
xor
dec
mov
in
pop
mov
adc
test
pop
add
pushf
jns
ss
pop
int3
cmpb
pushf
dec
mov
push
outsl
addb
xchg
shl
add
xor
push
out
imul
subl
imul
stc
xchg
sub
pop
dec
inc
aad
inc
ret
bound
pop
xor
nop
ljmp
mov
pop
mov
jmp
adc
xor
push
scas
shl
add
imul
pop
mov
mov
hlt
add
push
mov
sahf
and
stos
sbb
sub
push
xchg
hlt
lds
inc
sbb
cmc
pop
jmp
mov
jge
or
xchg
push
jg
sbb
das
rcrb
mov
mov
out
insl
shlb
cli
jmp
mov
cmpsl
adc
jp,pt
mov
icebp
jle
jp
sub
inc
clc
dec
lcall
pushf
xchg
imul
mov
dec
imul
push
in
cld
mov
lods
jns
sarl
adc
mov
dec
jnp
xor
jmp
stos
inc
jp
cld
clc
sbb
jae
push
push
inc
inc
and
out
cli
cmpsb
cmp
aas
cmp
push
fs
add
das
cmp
cli
cli
fiadds
dec
xchg
mov
pop
int
xchg
jmp
or
push
mov
xchg
lret
jecxz
mov
ret
leave
or
shrl
sub
cmpsb
sub
ds
mov
cmc
int3
fadds
idivb
mov
pop
push
jmp
xor
xchg
repz
mov
dec
push
fs
xchg
lds
jp
pop
pop
xchg
cmp
jle
mov
nop
push
mov
xchg
and
xchg
add
insl
mov
aaa
sub
mov
sbb
dec
cmc
or
inc
jo
out
xchg
sbb
inc
aam
adc
icebp
xor
or
orl
jge
or
popa
addr16
mov
data16
ret
cld
mov
lods
cmp
add
mov
stc
push
insl
mov
std
xchg
cmpsl
lea
int
dec
cmpsl
or
and
mov
mov
push
cmp
or
sbb
pop
push
arpl
scas
sub
mov
outsb
push
mov
fadds
data16
jb
adc
pop
out
lcall
and
jge
sub
repnz
adc
inc
dec
gs
pop
xchg
out
adc
mov
lea
cmp
mov
lods
loopne
mov
cmpl
jns
pop
jge
jle
testb
and
mov
mov
cltd
cmp
inc
adcl
leave
or
inc
popf
popa
insb
popa
inc
mov
xor
lahf
iret
mov
mov
add
push
sahf
add
stc
cmp
xchg
sahf
daa
sbb
insb
mov
cmpsb
sbb
test
aad
inc
mov
insb
jp
out
pop
sub
notl
sub
int3
shl
ja
aad
sub
ds
inc
or
mov
mov
jl
ds
jle
add
les
cmc
insb
sahf
sub
push
xorl
movsl
lcall
mov
adc
mov
mov
imul
push
outsl
dec
scas
gs
in
fstp
bswap
les
pop
adc
fldl
add
mov
insb
and
push
push
popf
fidivl
adc
mov
adc
cmp
push
adc
mov
icebp
cmpsl
fcmovnb
hlt
ficompl
in
lds
sub
mov
jle
cmp
sarl
lret
lock
push
sbb
cmp
aaa
mov
lcall
lea
mov
out
out
fcomip
adc
test
cmp
mov
cmp
xor
dec
and
mov
leave
push
fmull
pop
cmp
out
int
jns
xchg
out
dec
push
xor
icebp
or
loopne
mov
xor
mov
dec
jl
dec
mov
lcall
xor
sahf
sub
ljmp
add
clc
xlat
insb
inc
xchg
sbb
ret
out
jae
test
pusha
xlat
push
shll
jnp
sub
xchg
pop
mov
daa
imul
pop
mov
and
sub
mov
lea
add
lcall
movsl
and
data16
dec
enter
nop
jne
push
push
inc
in
imul
jp
pop
pop
imul
or
jne
js
add
pop
mov
dec
mov
out
xchg
push
pop
nop
xchg
mov
lds
movsl
and
cld
nop
jb
scas
inc
inc
inc
loopne
pop
jg
insl
cltd
push
ja
test
jecxz
out
mov
or
lret
mov
dec
repnz
lret
adc
mov
data16
push
mov
fs
aaa
sbb
pop
cmc
xor
rcll
xchg
mov
icebp
mov
mov
inc
addr16
push
sbb
mov
lret
add
outsw
jl
scas
enter
xor
jae
adc
jbe
mov
xchg
xor
inc
std
mov
mov
shlb
and
cs
add
xchg
jge
xchg
inc
ss
inc
nop
adc
inc
push
mov
jge
loopne
fstpt
aad
pop
aas
lahf
dec
cmc
push
inc
dec
icebp
pusha
lea
popa
fildl
fimuls
sbb
sahf
lret
mov
stos
mov
std
mov
or
push
test
mov
dec
push
dec
scas
hlt
xchg
in
xlat
sar
xchg
inc
xchg
cmc
shll
dec
ja
rorb
in
jmp
sub
inc
cmp
aam
dec
scas
psrad
sbbl
jns
mulb
ja
fidivs
cmp
pop
jle
and
cmp
insl
imul
inc
jbe
xchg
aam
cmpsb
cwtl
and
or
in
ss
lret
mov
dec
jmp
ret
shrl
enter
stc
cmp
pop
sbb
dec
xchg
cmpsb
push
shll
mov
mov
pop
test
js
pop
sub
sub
add
cmp
or
mov
in
pop
ja
pop
ret
cmp
data16
jbe
dec
pop
mov
ds
inc
into
jno
std
das
and
cmp
les
mov
and
mov
ljmp
mov
dec
mov
jnp
enter
xor
cmp
push
push
dec
inc
ljmp
in
cltd
jge
int3
jmp
cmpsl
lret
inc
std
cld
dec
push
fsts
pop
mov
mov
jp
lret
movsb
mov
cld
cwtl
push
xchg
xchg
cmp
cmp
mov
add
lods
std
adc
bnd
in
test
out
push
mov
xor
in
or
imul
add
push
mov
sub
cmp
lods
mov
je
mov
cmpsl
push
xor
flds
fisubrl
jb
leave
dec
pop
aam
sti
pop
xor
inc
jp
sbb
push
jmp
outsl
inc
rorl
ret
aas
shrl
mov
clc
scas
arpl
cli
jp
mov
fcmovbe
aaa
sbb
stos
adc
mov
out
pop
sbb
repz
push
mov
or
pusha
pop
shl
mov
ss
inc
stos
lcall
cmp
sub
clc
and
lcall
lock
dec
pop
dec
scas
jle
iret
mov
add
sarl
pop
addr16
xor
xor
jns
fsubrl
fmuls
lret
cld
inc
dec
jo
jnp
ja
sub
push
das
inc
jecxz
lret
mov
cmpsl
fldl
inc
mov
xchg
les
insb
pop
pop
sbb
sub
mov
or
lahf
jp
push
fistpl
mov
add
aaa
iret
jl
jg
icebp
movsb
add
xchg
pop
outsb
iret
adc
mov
rclb
popa
jae
inc
inc
lods
and
push
jecxz
dec
ja
pop
mov
out
insl
mov
or
std
test
xor
test
movsb
lret
cmp
test
sbb
ss
or
inc
adc
sbb
aam
ds
icebp
scas
or
test
or
aam
mov
and
xor
into
xor
cmpsl
movsb
ljmp
popl
shl
push
sbb
xchg
and
pop
icebp
adc
outsb
in
xchg
addl
or
add
inc
sub
add
ja
or
cld
frstor
mov
addb
nop
inc
add
sbb
je
test
sbb
outsb
add
sub
gs
adc
cmpsl
aaa
fsub
outsl
or
out
push
je
jo
xlat
mov
jnp
mov
or
fstpl
xor
adc
int3
jp
dec
xor
xor
mov
xchg
push
sti
adc
clc
adc
xchg
test
pushf
lahf
xor
test
lcall
mov
pop
mov
out
or
inc
xor
mov
mov
fidivs
cmp
cltd
dec
push
jno
bound
mov
aad
adc
mov
jmp
movsl
ja
loope
dec
sbb
cltd
insb
sub
fxch
addl
stos
fisttpll
push
cmp
xchg
out
pop
ffree
icebp
test
adc
nop
pop
cwtl
or
sub
ret
das
stos
cli
sub
rorb
xor
mov
rorl
idivb
inc
sarb
cmp
cld
pop
cmpsb
mov
push
add
fsubl
mov
imul
les
and
fistps
sbb
mov
mov
outsb
xchg
ret
push
mov
pusha
mov
cltd
sti
cwtl
test
push
cmp
and
jmp
std
lods
lds
inc
imul
inc
jge
inc
push
repnz
ss
mov
add
dec
lea
fistl
jge
inc
pop
gs
stc
jb
fisttps
fimull
and
mov
jl
adc
mov
mov
mov
mov
add
push
add
movb
fcompl
ljmp
dec
pushf
sahf
dec
mov
fs
jle
push
inc
inc
test
and
xchg
mov
rcrb
dec
cmp
stos
jbe
push
mov
dec
sub
stos
or
jmp
mov
mov
lds
adc
insl
adc
adc
pop
scas
jb
xchg
jmp
ret
cmp
xchg
push
inc
fiaddl
mov
push
adc
mov
ret
enter
leave
or
fs
ficoml
mov
cmp
xchg
push
in
mov
es
push
mov
jge
rcr
ret
cmc
xchg
jne
jecxz
jbe
dec
lcall
les
xor
out
pop
popa
xchg
push
ret
into
repnz
dec
addr16
adc
xchg
jg
or
iret
push
push
and
subb
or
mov
mulb
inc
addb
jmp
mov
out
addb
clc
and
pop
xor
jne
mov
add
test
idivb
pop
arpl
add
loope
popa
mov
jae
dec
mov
or
in
data16
lea
push
inc
mov
es
push
push
pop
and
mov
movsl
in
stos
pusha
das
out
jae
fsubr
jnp
mov
mov
jns
and
dec
sbb
rcrl
add
adcl
mov
add
mov
test
dec
push
push
insl
or
sahf
gs
push
int
fcompl
mov
shll
lahf
jmp
ret
dec
shl
mov
inc
cli
inc
dec
sub
push
ds
adc
rcl
inc
adc
pop
jp
cmp
cmp
cmp
sub
test
imul
dec
repz
or
cltd
mov
inc
mov
push
lahf
inc
pop
mov
test
push
aad
sahf
ja
fsubrl
sbb
xchg
pop
xchg
pop
mov
or
dec
inc
out
xor
dec
cli
xchg
add
mov
inc
test
cmp
jmp
cmp
repnz
adc
adc
dec
mov
mov
call
lea
jnp
push
sarb
mov
sti
int3
cmp
mov
notl
jbe
jne
jne
in
stos
fs
fldt
sub
pop
aaa
rcll
add
or
cmpsl
fcoms
into
out
lock
mov
out
shll
sub
xor
int3
add
xor
cmpb
aas
pusha
cwtl
dec
cmp
in
pop
in
cltd
xchg
data16
sarl
sub
mov
dec
cmp
clc
xchg
roll
add
lret
mov
pop
imul
dec
data16
movsl
push
hlt
xchg
add
push
xor
jns
xor
js
inc
jg
fists
pop
shrb
and
daa
mov
dec
inc
loopne
inc
das
stos
jmp
xchg
es
push
fcomi
dec
xor
push
aad
add
movsb
jg
out
cmpsl
or
in
push
fs
mov
iret
add
jns
int3
jb
lock
loope
sub
dec
loop
dec
inc
push
cltd
pop
mov
mov
loope
js
rclb
jp
loope
fdivp
push
xor
stos
add
jo
mov
adc
push
xor
mov
cmp
and
leave
stos
mov
insl
mov
lods
push
repnz
adc
sbb
jb
loopne
mov
or
rolb
dec
data16
or
addb
out
add
add
in
les
pop
repnz
mov
pop
jmp
add
xchg
out
stos
aas
and
or
lods
jp
ss
cmp
je
dec
leave
into
dec
mov
inc
dec
mov
cmpsl
fnstenv
dec
or
push
xorb
test
adc
out
push
ds
movsl
sbb
and
push
push
push
ret
mov
adc
scas
mov
jnp
add
mov
loopne
sub
in
data16
xchg
insb
pushl
addr16
mov
jns
cli
sti
inc
shll
in
stos
and
push
aaa
jo
data16
fcmovnb
mov
sub
and
decl
dec
cmp
sbb
xor
mov
and
mov
test
divl
sub
and
ds
jbe
jle
lret
pop
arpl
sarb
and
repz
sahf
cltd
pop
push
jp
xor
adc
out
ss
mov
xchg
data16
je
js
sbb
popa
jl
sub
outsb
jo
mov
in
sbb
xor
mov
xor
gs
popf
stos
inc
movsb
fnstenv
popf
xlat
cli
mov
or
jo
popa
mov
js
mov
push
xchg
in
pop
js
push
and
mov
push
jb
fldl2t
call
xor
xchg
sub
fadd
pop
adcb
fisttpl
inc
mov
daa
or
psubw
inc
mov
sub
push
lds
inc
sub
arpl
in
int
aaa
mov
sbb
cmp
pop
aaa
arpl
in
add
or
imul
sbb
int
in
sub
outsb
ja
fstl
mov
sti
dec
and
cmp
adc
leave
xor
adc
sahf
cmp
adc
add
cmp
daa
repz
push
xchg
lds
xchg
pushf
mov
mov
out
stc
jb
push
aam
popa
or
dec
adc
xor
pop
test
into
xchg
dec
int3
push
sbb
stos
mov
mov
cmc
or
mov
push
and
or
push
fbld
shlb
push
pop
jns
adc
les
outsl
xor
cltd
or
inc
push
add
push
xor
imul
in
sub
mov
sbb
aam
sti
pop
or
dec
out
and
hlt
or
ljmp
jmp
pop
test
sarb
into
jns
jne
push
pop
lahf
dec
or
mov
js
bound
ja
xor
subl
test
imul
pop
ss
jl
mov
adc
shll
pop
dec
cmc
fmull
dec
mov
or
and
or
sub
dec
enter
mov
push
xorb
xchg
fistpll
shrb
or
pop
in
pop
hlt
jl
ret
push
jnp
jmp
xchg
outsb
sahf
std
push
loopne
xchg
push
mov
xor
into
or
jl
icebp
movb
jp
mov
push
push
sbb
mov
mov
xorl
stos
scas
dec
or
sub
push
cmpsl
lret
xchg
out
bound
in
pop
test
pusha
mov
enter
scas
aaa
jne
mov
or
and
fcomps
clc
cmp
adc
dec
bound
out
ljmp
addb
sti
mov
sahf
mov
add
mov
flds
cltd
mov
test
out
push
dec
dec
push
sbb
dec
or
mov
rcrl
push
fmuls
jae
cmp
push
inc
mov
mov
fisubrs
push
data16
push
xor
cmp
push
rcl
shrb
pushf
sub
jmp
call
div
iret
push
sub
subl
mov
push
or
test
std
sarl
imul
push
int3
js
roll
mov
fists
bound
xchg
push
jbe
cwtl
in
jg
mov
xchg
mov
xchg
cmp
insl
out
int
test
data16
jg
or
scas
add
mov
bnd
arpl
mov
xchg
clc
das
ret
xchg
mov
jl
jmp
jo
mov
fwait
xchg
pop
push
and
or
mov
cmpsl
ss
test
jbe
sbb
mov
xchg
rorl
je
pop
in
js
outsb
in
jb
adcb
jb
sar
test
sbb
andl
sub
stc
xor
sbb
add
jp
cs
icebp
dec
bound
inc
push
push
in
fst
sbb
into
xchg
sub
cmc
scas
jae
std
mov
mov
call
jg
out
add
fdiv
les
call
xchg
push
mov
int
mov
xor
into
repnz
mov
lds
jl
sbb
dec
pop
lock
bound
pop
movsb
rolb
stos
jae
xor
sahf
inc
movsb
popf
out
jl
test
adcl
sbb
sub
add
inc
cmpsl
stos
or
enter
xlat
mov
out
fimull
sahf
filds
adc
enter
sahf
daa
icebp
push
and
and
cld
jbe
cmpsb
icebp
nop
mov
pop
clc
insb
cmp
cmc
xchg
sub
clc
pop
xor
int
xchg
mov
mov
pushf
sbb
cltd
aaa
pop
rorl
sub
rcl
dec
fs
mov
scas
aad
fs
xchg
movsb
adc
sbb
jae
es
xor
cmp
mov
cmpl
xchg
movsl
js
stc
movsb
cmp
fdivrs
aam
in
ret
cmp
in
jae
inc
and
ds
adc
pop
jg
jg
sti
lds
arpl
sahf
dec
insl
lahf
adc
sbb
xchg
lods
push
movsl
fscale
jle
test
cmp
je
out
pop
cmp
adc
jno
orl
and
inc
insl
imul
lcall
mov
repz
mov
pusha
nop
call
xor
push
lcall
mov
in
scas
loopne
fdiv
lods
inc
cmp
nop
push
movsl
pushf
fwait
cmp
xchg
leave
in
xor
inc
pushf
js
mov
pop
movsl
sbb
fidivrs
repnz
push
or
fsubrl
push
jle
pop
sbb
lea
out
or
mov
jno
test
push
bound
cmp
push
lahf
mov
repnz
fnstenv
int3
add
jnp
mov
lret
fcomps
divl
pushw
cltd
imul
mov
pop
jl
sbb
fnstcw
xor
and
add
out
cwtl
loope
jno
ljmp
jnp
jl
inc
jbe
or
xchg
cmp
mov
mov
xchg
dec
pop
mov
repz
in
imul
ret
jbe
jp
pop
imul
mov
mov
popf
adcb
push
cmpsl
pop
inc
gs
inc
jns
mov
xor
xchg
sbb
and
aam
outsb
sbb
dec
fs
and
adc
adcl
cs
test
push
jb
rcrb
test
dec
hlt
mov
mov
fbld
and
mov
jmp
ds
push
inc
rolb
adcb
mov
and
cltd
jle
dec
gs
push
cmp
sbb
mov
pop
fs
jns
outsb
cmp
mov
dec
add
fsubrp
cli
mov
cmp
mov
repnz
pop
adc
mov
cmp
jbe
int
aaa
pop
mov
cmp
scas
fsts
test
push
pop
mov
imul
es
test
lods
cli
xor
sbb
sub
sbb
imul
xchg
cs
sti
sbb
hlt
mov
jns
or
xchg
pop
xor
sub
aad
pusha
sbb
sbb
push
cmpsl
jbe
xor
ret
xchg
ds
aas
lret
xchg
shlb
adc
push
xchg
sahf
jno
vmovss
mov
xorb
or
out
jae
ss
fldl
insl
stos
jg
lcall
add
xchg
addr16
popf
fwait
daa
sub
dec
xor
incb
fcoms
ja
push
psrlq
sbb
and
stc
cmp
ljmp
add
push
sbbl
aad
dec
subb
in
xor
adc
enter
xor
xor
xor
stc
jne
out
cmp
sbb
mov
shl
sub
cmp
dec
add
pop
push
and
or
cmp
jecxz
outsb
sbb
cmp
ret
outsl
arpl
rorl
loopne
or
fstpt
loopne
mov
mov
inc
gs
mov
mov
and
mov
xchg
mulb
aad
push
and
fwait
jecxz
das
movsl
add
mov
sub
stos
mov
xchg
cwtl
psrlw
adc
shrb
ljmp
inc
and
mov
mov
dec
sbb
cmp
adc
jmp
dec
clc
lods
inc
mov
std
add
int
shr
inc
add
insl
pop
mov
mov
inc
in
outsb
jne
jo
push
push
repz
cld
daa
scas
push
mov
sbb
test
mov
jmp
jmp
sbb
cld
fsubrs
cmpsl
fsubrl
lahf
and
aam
fistps
add
or
cs
shll
and
push
jno
and
sbb
or
jge
mov
jg
mov
or
movsb
les
leave
sbb
mov
push
and
inc
lcall
neg
lret
int
subl
sub
lcall
lcall
push
mov
aas
aam
sbb
xchg
shl
and
aaa
ja
inc
xor
xchg
fidivl
fimuls
or
jae
jg
or
je
fs
push
iret
insb
sub
mov
xchg
lods
aam
mov
dec
sti
mov
jge
in
out
cmp
pop
dec
psrad
jle
add
cmp
inc
pop
dec
shlb
or
pop
mov
ljmp
in
leave
lcall
push
mov
movsl
add
push
adc
ss
pop
mov
testb
fwait
scas
in
push
and
sarl
add
jl
lret
mov
dec
loop
pop
js
jecxz
es
jecxz
div
dec
lock
jp
adc
mov
mov
imul
dec
jp
shll
mov
sbb
jmp
sbb
mov
cmp
in
push
add
and
bound
lcall
add
subl
ja
xchg
cmp
hlt
adc
jmp
adc
sub
in
add
es
sbb
jge
adc
xchg
adc
arpl
lea
sub
mov
cmp
or
stc
hlt
pop
sbbb
dec
test
je
fidivrl
push
cmp
sahf
iret
jp
stos
je
mulb
call
divb
cmp
imul
and
movsl
dec
mov
ret
leave
testl
leave
add
mov
aas
xor
icebp
dec
bound
cmp
mov
sbb
pusha
and
and
mov
notb
mov
rolb
ficompl
mov
icebp
mov
cwtl
notb
sub
icebp
push
inc
mov
ret
popa
xchg
cmc
imul
cltd
enter
mov
xorb
mov
je
xchg
ja
pop
mov
ds
mov
in
loope
push
lock
mov
mov
stos
jp
sub
mov
cld
lahf
popf
or
in
and
inc
mov
jo
mov
loopne
test
pop
orb
testl
push
inc
int
lret
lret
dec
rcll
sbb
sub
int
mov
dec
mov
mov
jmp
xor
ljmp
popa
imul
adc
loope
mov
mov
jae
imul
jnp
mov
xor
test
cmp
aam
dec
inc
jns
sub
lds
jb
inc
push
xchg
xchg
xchg
pop
mov
inc
aam
push
lret
adc
int3
xchg
pop
loope
pop
addr16
mov
jo
pop
dec
repnz
stc
xchg
pop
mov
sbb
ret
lds
lock
or
shll
jne
scas
test
out
mov
loopne
into
mov
call
aad
shrl
sub
dec
shll
sub
and
out
cmpsl
cmp
aad
add
inc
lds
add
jb
jae
mov
dec
outsb
inc
out
mov
lret
pop
call
push
stc
add
aaa
dec
test
jbe
pop
dec
adc
loope
mov
jmp
push
adc
das
shl
pop
test
xor
ret
adc
mov
adc
shll
mov
dec
nop
vpor
fstpt
add
inc
jp
sub
xor
mov
dec
xor
fwait
xchg
pop
jl
in
mov
mov
hlt
inc
ret
cmp
and
sub
lret
dec
pop
xchg
mov
sbb
test
jecxz
sub
mov
cmp
push
xor
ja
mov
aas
ret
aaa
fildll
add
aam
jge
jle
xchg
popa
push
xchg
jmp
jb
int3
or
data16
in
dec
cmp
pop
into
cmpsl
data16
repz
pushl
les
lea
jno
leave
pop
loop
inc
and
mov
stos
aas
adcb
mov
loope
decb
sub
adc
fisubl
pop
jge
xor
scas
std
and
or
jno
mov
sbb
xchg
jge
dec
cmpsb
dec
andl
inc
lods
sarb
jbe
add
inc
sbb
cmp
mov
and
int
hlt
mov
loop
or
xchg
xchg
dec
bound
hlt
clc
jecxz
cld
sarb
pop
mov
dec
cmp
out
lock
sub
lret
in
int
cs
jmp
pop
jno
mov
dec
mov
jb
jne
arpl
jl
cltd
pop
push
daa
xor
xorl
push
insl
jp
jg
xorl
mov
loope
push
push
inc
cwtl
iret
inc
icebp
xchg
lcall
push
fldenv
in
pop
xor
lea
cmp
mov
mov
xlat
imulb
pop
ljmp
cmc
xchg
adc
or
xor
pop
adc
jge
imul
xchg
call
mov
subl
cmp
repnz
xor
adc
xchg
pop
inc
dec
std
cwtl
enter
jmp
xchg
xchg
inc
sbb
mov
mov
aas
stos
adc
jb
cmp
mov
adc
notl
outsb
inc
jnp
add
daa
shl
mov
ds
test
sti
jg
shll
dec
jmp
out
cmp
fs
stc
jb
scas
dec
call
mov
cmp
insl
push
mov
cmpsb
push
aaa
test
clc
mov
push
xor
sbb
mov
repnz
addr16
scas
and
lods
repnz
jl
sbb
inc
pop
push
xchg
xor
inc
insb
cmp
or
adc
sbb
mov
sbb
sub
sbb
ret
sbb
add
out
or
cwtl
jle
xchg
mov
push
les
jl
loopne
insl
pop
push
adc
fisttpl
xchg
add
cltd
mov
mov
std
mov
test
pop
dec
dec
mov
xor
cmpsb
test
jno
mov
pusha
sarb
pop
xchg
das
pop
push
adc
mov
fbstp
push
cmpsb
sub
xorb
sbb
lds
pop
mov
pop
mov
mov
ljmp
pop
push
push
jg
mov
jno
xchg
outsl
mov
jo
stc
pop
xchg
jp
inc
aas
aaa
push
mov
andb
out
lds
pop
or
in
loop,pn
xor
pop
xchg
pop
cli
out
fidivs
cmpsb
popf
aas
xchg
pop
rclb
push
lahf
jl
mov
mov
lds
cltd
jle
jae
lcall
pop
xor
mov
dec
jp
lret
pop
xrelease
andl
fistpl
imul
popl
fisttps
dec
les
addr16
push
push
cmp
jb
pop
ret
jae
fcmovbe
mul
cmpsl
inc
cmpb
stos
popa
cmp
icebp
pop
mov
int3
test
decb
aam
mov
shlb
add
jae
and
pop
sbb
mov
js
jl
sub
mov
xchg
jns
test
gs
dec
ja
es
cld
sub
pusha
shlb
notb
cmp
lret
mov
fistpll
jae
pop
pushf
sahf
mov
aam
out
mov
push
outsl
mov
lahf
dec
push
test
mov
sbb
das
lock
and
loope
add
mov
add
rclb
js
jl
ljmp
fists
dec
xchg
dec
in
cmpsb
jb
mov
adc
aas
clc
je
xorl
mov
scas
jns
and
xchg
ficompl
dec
mov
rcrb
push
mov
jp
pop
or
rol
in
inc
ja
mov
es
xorl
cmovge
mov
es
dec
ret
add
into
loopne
add
ljmp
mov
mov
cmpsl
mov
adc
push
popf
sbb
repnz
shll
and
mov
add
push
mov
sbb
pop
into
addr16
mov
int
xchg
xchg
push
adc
fisubrl
addr16
xor
and
sub
inc
iret
jne
aad
cmp
cmp
mov
push
add
xorl
cmp
xchg
fstpt
dec
xor
ret
and
repnz
aad
mov
push
pushf
mov
cmp
fimull
lods
std
cmp
or
or
xchg
mov
sbb
lcall
cmp
mov
cmp
push
sub
addl
push
loope
or
xchg
xor
mov
sbb
fs
pop
sti
push
fidivrl
jno
test
ljmp
mov
xchg
dec
in
sub
iret
scas
sahf
ret
sub
adc
or
pop
and
inc
xchg
cmp
jnp
mov
and
pop
out
dec
lock
and
stos
sub
addb
outsb
adcl
out
shlb
ds
mov
push
sbb
sarb
loopne
bound
inc
xor
test
fadd
cmp
jecxz
fs
jl
and
jbe
adc
cmp
xor
cmp
fisttpl
mov
mov
mov
js
outsb
push
jle
sub
fs
movsl
std
in
fstpl
cmc
aam
es
dec
adc
jnp
popf
or
jmp
data16
mov
cs
lret
notl
dec
mov
jae
cmp
adc
push
xchg
inc
and
sub
in
or
out
xor
push
sbb
cltd
xor
iret
sbb
loope
add
les
adc
or
xor
xor
pop
imul
out
sub
mov
lods
fidivs
stc
scas
out
xchg
popa
xchg
imull
adc
mov
into
jbe
lods
mov
sub
ror
sub
push
int
add
adc
imul
mul
mov
xchg
pop
mov
xchg
or
xchg
sub
fisubrs
iret
aas
int3
cmp
xchg
clc
sti
mov
rep
movsl
sbb
adc
lahf
jl
in
inc
add
dec
nop
xor
jle
outsb
pop
pop
mov
in
addb
lock
gs
mov
pop
mov
lds
mov
movsl
jl
cld
jge
lock
push
push
incl
mov
or
add
mov
mov
pop
ret
into
in
fdivrl
sub
jne
sbb
loope
mov
mov
stc
sub
ret
enter
jp
cmp
pop
int3
popa
xchg
mov
mov
sti
mov
cmc
adc
pop
lcall
jmp
xchg
shrb
test
ja
add
jns
mov
cld
aaa
mov
fiaddl
jnp
hlt
dec
sub
fdivrl
mov
ja
add
addl
jb
es
cmc
push
ljmp
shll
sbb
jmp
bound
scas
faddl
lret
rcrb
dec
cmp
sbb
scas
mov
adc
push
jmp
jmp
js
adc
and
lret
lds
rcll
stos
dec
add
or
xchg
inc
or
std
jg
jne
jmp
push
pop
aam
jo
cltd
clc
cmp
repnz
add
in
add
pop
outsb
xchg
test
rcrl
mov
aaa
adc
sbb
and
jl
bound
pop
xor
test
f2xm1
and
mov
imul
fwait
into
ja
push
and
pop
sbb
add
sbbl
pop
test
cli
ja
rcl
mov
xor
cmp
push
jge
fiaddl
and
mov
stos
arpl
idiv
je
mov
outsl
pushl
shll
ret
jbe
push
cmpps
dec
dec
sbb
sub
adc
out
stos
fnstenv
add
ficoms
fcompl
stos
addl
cmpsb
outsl
rol
jae
cmp
ret
sbbl
scas
push
inc
mov
imul
push
in
in
jne
push
inc
or
scas
dec
add
add
sbb
sbb
movsb
icebp
cmpsb
sahf
rcl
sti
ss
xor
bound
iret
or
cwtl
ror
sbb
fdiv
enter
push
xor
pop
push
inc
or
test
dec
out
push
xchg
lret
aad
mov
popa
mov
or
loopne
ret
mov
les
int
push
mov
test
in
insb
popa
push
pop
clc
inc
test
sbb
sub
jmp
aaa
pushf
and
fldt
adc
lcall
leave
nop
in
push
or
mov
cmp
xchg
cmpsl
cs
or
adc
in
out
or
or
pop
in
or
push
lahf
sbb
pop
sbb
in
mov
test
mov
or
xchg
dec
int
sub
loope
mov
mov
mov
ret
jg
mov
and
inc
adc
adc
mov
jmp
add
xchg
dec
mov
repz
js
pushf
shll
pop
nop
stos
adc
sarb
in
jmp
adc
in
cwtl
shl
dec
and
push
push
mov
pop
rclb
and
mov
stc
inc
xchg
pop
aas
je
cli
mov
outsl
sbb
rcll
rorb
cld
cmp
dec
dec
fcmovnb
pusha
xor
mov
mov
and
je
sub
shlb
mov
and
xor
xchg
xor
imul
fcmovu
xor
xchg
push
dec
fiaddl
inc
ret
mov
jp
stos
testl
fwait
ss
pop
movsl
int3
lret
xchg
stos
mov
aas
iret
jp
scas
out
and
sbb
out
out
lea
dec
popa
imul
cld
xor
pop
jno
mov
in
and
loopne
pop
cmp
jne
xchg
mov
fs
inc
cmc
fidivl
stos
or
dec
pop
adc
scas
fisubrs
xor
sub
outsb
fnstenv
in
dec
fwait
out
xchg
aas
sub
or
js
ds
nop
or
das
cmpsb
js
leave
cltd
cmp
repz
insb
les
mov
ret
gs
dec
push
adc
imul
bound
sbb
fwait
sub
es
inc
test
sbb
adc
lret
aaa
dec
inc
cmpsb
push
daa
pop
push
das
repnz
stos
xor
aam
arpl
mov
inc
scas
inc
mov
sub
and
fsubrs
xor
and
xor
jno
sahf
aam
pop
mov
mov
pop
mov
scas
movl
shll
sti
pop
sti
dec
es
push
enter
mov
and
mul
imul
xchg
dec
mov
movsb
daa
sub
cmp
xor
popf
pop
test
stos
mov
mov
pop
aas
lds
loopne
cmp
hlt
mov
mov
bound
int3
clc
in
cmpsb
mov
cld
push
fwait
cs
repnz
xlat
pusha
sbb
mov
xor
add
js
std
pop
jne
sarl
sub
jp
lret
jne
cmovp
push
lcall
int3
je
xchg
pop
cvttps2pi
repz
dec
and
jb
test
sarb
hlt
sub
cmpsb
and
cli
nop
add
pop
inc
in
xor
popa
out
loope
aam
cmp
loop
iret
ret
outsb
test
mov
or
and
cmp
sahf
inc
inc
jno
push
mov
mov
push
insb
xor
jg
dec
pushf
cmp
xchg
jecxz
test
mov
mov
sahf
xchg
jae
cmp
sub
and
in
mov
push
push
inc
test
xchg
les
xchg
xchg
mov
jecxz
call
and
xor
repnz
call
ror
loop
mov
mov
out
push
mov
into
add
and
push
aad
mov
mov
pop
xchg
mov
inc
mov
insb
xchg
pop
add
fcompl
in
ret
lock
jmp
sub
out
jp
ss
test
sbb
and
mov
hlt
fcomip
mov
enter
xor
cld
sub
test
out
imull
push
clc
in
mov
jg
repz
mov
ret
push
mov
ja
mov
mov
xchg
xor
cli
push
int
mov
cs
sbb
in
sbb
lahf
out
ficomps
imul
sub
push
out
jle
push
jl
or
push
xlat
sti
cmp
push
bound
pop
or
cmp
test
sbb
push
pop
test
jecxz
adc
adc
mov
lret
mov
jno
cmp
into
mov
pusha
jno
loop
add
add
inc
insb
xor
inc
jmp
int3
xlat
cmp
lods
lret
mov
mov
out
fld
and
xchg
add
mov
mov
cmp
aaa
andb
and
mov
in
sbb
cmpsb
inc
xlat
dec
and
clc
aad
ficomps
test
lret
adcl
call
mov
jmp
jl
inc
mov
dec
and
sub
lahf
add
mov
push
add
push
pusha
cmp
xchg
out
movsl
xor
aam
ds
lock
xor
stc
shrb
sub
aas
movl
adc
outsl
xchg
fadds
cmp
je
pusha
inc
push
sub
xor
pushf
in
sahf
fisubl
mov
test
popf
pop
jns
ss
mov
push
cltd
rorb
jbe
or
mov
and
cmc
jl
pop
lret
ljmp
rcll
insb
mov
int3
adc
addr16
repz
pop
int
addl
js
push
xchg
xor
jbe
mov
push
imul
imul
inc
out
cmpb
add
pushf
mov
add
push
scas
pusha
jecxz
jmp
lea
xor
mov
jb
lahf
mov
or
rol
xchg
sbbl
mov
addr16
cmpsb
cli
push
sub
cltd
mov
pop
fnstsw
push
mov
outsl
ja,pn
push
movsb
negl
loope
gs
loopne
xchg
xlat
rorl
ret
lret
xor
xchg
mov
out
clc
pop
xor
fucomp
pop
mov
xor
call
mov
mov
out
jb
xlat
ret
fdivs
or
pop
cmp
popf
pushf
xchg
lret
arpl
mov
mov
add
jge
mov
pop
fnstenv
rolb
sub
push
imull
or
and
fstl
ret
scas
aam
and
xor
outsl
int3
xor
out
imul
xchg
mov
shrb
int3
in
or
clc
add
add
ljmp
mov
or
cmp
cmpsb
sbb
push
ja
push
daa
push
mov
loope
mov
pop
mov
cs
jb
shl
sysexit
sbb
mov
xlat
jle
and
inc
pop
lret
inc
fwait
xor
push
and
push
enter
rorb
add
decl
jmp
mov
pushf
mov
mov
stc
mov
xorl
inc
cwtl
mov
or
leave
pop
or
pop
mov
mov
orb
test
xor
xor
loopne
adc
sbb
inc
arpl
pop
scas
outsl
jno
jnp
jo
inc
xchg
and
or
adcl
repnz
push
mov
int3
nop
lds
add
sbb
iret
pop
mov
cli
adc
sbb
inc
xor
adc
jecxz
push
ret
mov
and
daa
inc
loope
mov
xchg
add
jno
test
jmp
push
sub
mov
popl
rorb
pop
lock
fisttps
and
roll
ret
loope
mov
pop
js
in
sbb
xchg
mov
pushf
js
push
inc
jl
inc
insl
jg
ret
repnz
stos
and
test
push
mov
adcl
dec
arpl
loope
sbb
add
mov
sbb
jb
sub
sbb
mov
sub
dec
mov
mov
leave
icebp
xor
jecxz
jge
dec
adc
int
fstpl
inc
dec
repnz
xchg
lahf
daa
aas
xchg
call
ret
je
sarb
mov
add
movsb
fnstcw
or
adc
sarb
push
test
loop
xchg
push
mov
pop
xor
and
lret
cmp
sbbl
mov
mov
inc
cmp
ja
int3
repnz
jle
or
push
loope
dec
dec
push
dec
test
orl
push
sbb
in
fnstcw
cmpsb
subl
xor
repz
jbe
outsl
jno
lret
fwait
sbb
ffree
shrb
and
iret
movsl
and
cs
fisubrl
or
aam
lods
mov
mul
xor
inc
fmuls
mov
or
je
xor
or
add
cmp
dec
leave
repz
pop
mov
and
jno
cmp
cmpsb
js
mov
mov
mov
adc
cmc
mov
jnp
movsl
push
shl
cmp
mov
mov
mov
inc
mov
push
add
ds
es
lods
je
test
iret
js
enter
mov
cwtl
fs
pop
jl
sub
dec
inc
mov
dec
clc
and
test
inc
push
data16
insb
ds
in
out
or
shlb
lods
div
sub
or
test
xchg
adc
jp
jns
mov
push
loopne
push
inc
ds
shll
sbb
daa
fucomip
dec
stc
ret
loop
pop
dec
in
hlt
cli
push
ss
jl
pop
sub
adc
hlt
fsubs
mov
xor
jo
or
xor
xchg
push
dec
lret
push
das
cmc
mov
outsl
sub
shlb
dec
sbb
imul
jle
stos
mov
cmp
mov
adcb
hlt
out
adc
mov
mov
pop
cwtl
ds
int3
mov
push
xor
sarl
lock
sbb
inc
push
sti
jecxz
xlat
add
mov
inc
mov
pop
mov
pusha
pop
sub
mov
mov
jno
xor
pop
std
lods
push
fistl
pop
mov
and
inc
jb
pop
xchg
or
std
mov
push
test
inc
mov
ja
pop
mov
inc
mov
push
aaa
dec
js
push
addr16
mov
fsubs
jge
fs
add
loop
sub
xor
scas
lods
mov
and
ss
clc
fimull
mov
add
loopne
xor
frstor
aas
dec
mov
mov
cmpsl
inc
sub
lods
push
lock
insb
xor
mov
mov
fcmove
filds
in
xchg
inc
sar
jne
jp
xchg
xor
mov
fdivs
bnd
jmp
sub
rclb
push
stos
inc
pushf
or
dec
mov
pushf
sbb
leave
dec
jg
lahf
fsubl
push
pushf
push
loope
sub
mov
mov
cwtl
popa
test
leave
idiv
push
mov
insb
mov
sbb
loop
jae
lahf
aaa
sub
cs
in
mov
inc
mov
xor
or
je
out
test
mov
mov
lcall
sub
filds
lock
lock
xor
pminub
pop
int3
sbb
cmpsl
xor
adc
call
sub
xchg
data16
sahf
push
in
pop
adc
lret
inc
xchg
in
jecxz
lea
or
mov
into
mov
xchg
fdivrl
cmp
outsl
sti
push
jb
mov
pop
push
fwait
xchg
nop
adcb
lds
fnsave
adc
int3
and
test
stos
add
lcall
testl
stos
mov
xor
nop
das
dec
repz
in
mov
lret
leave
xchg
adc
mov
jl
jb
stc
mov
stos
and
inc
adc
push
mov
testl
jmp
lcall
cmp
iret
xlat
icebp
push
pop
insb
mov
mov
test
pop
or
sbb
jns
mov
out
mov
cmp
jle
mov
adc
cmc
loope
pop
fsub
call
pop
xor
adc
cltd
dec
shll
adc
sub
sub
int3
inc
sub
cs
ret
push
dec
pusha
lods
and
push
enter
fcomip
jmp
scas
add
imul
aad
add
dec
cmp
notb
mov
arpl
pop
lock
in
cmpsl
mov
insl
loopne
sub
fnstsw
sub
fwait
push
and
leave
mov
js
jns
popf
mov
sbb
rclb
add
mov
mov
and
mov
xchg
and
repnz
nop
loopne
mov
push
cmp
clc
adc
sub
inc
inc
jnp
mov
stc
xchg
jo
pop
adc
iret
xor
sub
aad
dec
xor
cmp
jle
cltd
aad
xchg
pmaxub
or
in
out
popf
mov
add
dec
mov
cwtl
jecxz
into
mov
cld
add
cld
cmp
adc
jno
pop
adc
inc
dec
aad
pop
mov
xchg
pop
rcrb
ret
mov
sbb
scas
arpl
enter
jbe
std
push
in
pop
push
in
pop
mov
out
mov
ljmp
jne
push
movsb
pop
inc
pop
outsb
push
jmp
lock
fwait
inc
pop
sub
fidivl
adcl
mov
ljmp
int
inc
pop
mov
fisubrs
xchg
test
or
or
lea
xchg
idivl
gs
push
lea
repnz
or
dec
push
in
jmp
jge
push
js
fisubs
outsb
sbb
inc
pop
push
sub
cli
mov
jle
rcrb
pop
add
push
and
out
jb
inc
leave
inc
push
cwtl
adc
mov
popfw
fimuls
cwtl
xchg
cmp
aam
jae
sti
out
pushf
rol
xor
xor
and
and
sbb
lds
imul
mov
adc
mov
jp
fdivs
mov
mov
test
in
iret
and
jns
or
cmp
sub
ret
ss
lock
dec
push
pop
sbb
xchg
scas
sbb
or
mov
pop
mov
cmp
rcr
adc
mov
pop
das
in
sbb
jns
and
cmp
inc
std
ret
and
pushf
push
push
jo
sti
xchg
fs
xchg
movsb
ret
inc
int
sub
movsl
out
pusha
adc
lahf
lods
sbb
or
mov
std
outsb
inc
sub
btl
mov
add
aam
les
xor
ret
outsl
cmp
mov
xchg
stos
popa
icebp
stc
cmp
sbb
lods
enter
adc
mov
mov
mov
stos
dec
jle
int3
data16
insb
pop
jnp
jae
dec
cli
sub
out
std
push
int
mov
arpl
lds
loope
cmp
add
loop
xor
cmpsl
jnp
leave
outsb
inc
pop
mov
mov
mov
stos
lods
shlb
push
adc
pop
and
in
ja,pt
mov
lret
adcl
aam
lea
inc
dec
jp
fisttpl
mov
push
aad
lock
push
notl
mov
push
jae
lret
jo
roll
jne
jmp
inc
adcl
stc
test
loope
repz
jns
pusha
sub
sahf
push
mov
test
dec
gs
rorl
jle
jns
xchg
cwtl
cltd
cmc
jbe
pop
mov
mov
imul
imul
lret
pop
add
xor
clc
out
jb
or
cs
pop
outsb
xchg
jno
fstl
cmc
dec
mov
xchg
mov
clc
int
or
data16
jnp
push
xor
test
mov
aaa
jb
hlt
mov
ret
mov
adc
push
insb
repnz
mov
pop
pop
in
adc
ss
cs
push
jo
xor
ds
loope
and
call
out
in
adc
aaa
out
dec
addr16
jo
mov
in
jae
add
int
pop
jl
mov
mov
int3
mov
xor
pop
xlat
mov
jmp
das
mov
xor
mov
out
jecxz
shlb
loopne
mov
insb
mov
jecxz
lds
mov
out
testl
mov
xchg
add
sub
je
push
jnp
cli
rcrb
mov
in
call
stc
inc
iret
lcall
push
lock
fdivp
push
loope
shrb
inc
es
push
outsl
ja
lods
push
inc
in
push
pop
push
daa
mov
add
push
aam
jb
imul
mov
cmp
jae
inc
fnstsw
or
sti
push
out
imul
push
sbb
iret
int
imul
pop
stos
sub
cmp
pop
adc
stos
mov
inc
cmpsl
shrl
aad
test
arpl
lods
sub
fidivl
and
and
or
dec
mov
inc
xor
int
inc
cmp
dec
faddp
push
cltd
add
aad
hlt
sti
aas
imul
fdivr
inc
sub
daa
jmp
adc
popa
das
sbb
repz
jo
and
sub
dec
push
pop
push
jbe
lods
mov
jmp
pop
hlt
sbb
push
cltd
adc
pop
pushf
inc
lods
sub
bound
jl
jnp
mov
movsb
in
aaa
xorl
arpl
push
mov
adc
mov
mov
outsb
jbe
out
sti
shr
cmp
sbbl
adc
inc
sub
aad
cld
push
jle
cmp
inc
push
leave
in
cmp
inc
inc
or
aam
sbb
enter
lahf
and
fwait
mov
je
mov
out
rcrb
sbb
sbb
hlt
sbb
sbb
mov
and
mov
je
xor
dec
les
cmp
lcall
push
jp
in
lea
loop
enter
cli
les
and
add
cmp
mov
jno
add
outsl
sbb
fwait
enter
xchg
std
dec
jno
adc
mov
cld
iret
push
xlat
and
inc
mov
loopne
imul
xchg
and
sub
das
push
subb
or
iret
add
sbb
dec
dec
push
push
xchg
insl
jl
jnp
iret
rcr
xchg
xchg
sub
gs
cmpsb
cmp
sub
jp
inc
hlt
and
adc
fisttpl
xor
xchg
clc
movsl
gs
adc
mov
mov
inc
jge
shlb
test
sti
dec
add
mov
inc
xchg
in
cmc
popf
cmpsb
cmc
push
stos
dec
inc
fadds
fists
xchg
and
mov
add
xchg
jbe
push
jmp
inc
fidivrl
inc
fucom
sbb
out
popa
cs
addr16
cmp
sahf
pop
loope
xchg
cmp
and
adc
mov
mov
fimuls
xor
adc
jmp
adc
pop
jns
scas
out
clc
cmp
and
in
push
sbb
cmp
cltd
and
push
fnsave
sub
pop
lcall
lahf
pusha
pop
rcll
gs
sub
nop
dec
adc
fdiv
mov
arpl
adc
sbb
jo
mov
dec
fsts
push
sub
lods
fnsave
xor
mov
cmpsb
movsb
scas
loopne
xchg
jp
jno
pop
cmpsl
pop
inc
subb
or
lds
jnp
mov
add
cltd
mov
rclb
sar
jmp
loop
rclb
mov
lods
pop
sbb
pop
add
in
pusha
mov
jo
lret
push
push
and
ds
lods
xchg
test
cmpsl
in
out
jae
loop
inc
lods
and
add
es
arpl
addr16
fnstenv
jbe
ss
cld
adc
push
dec
push
adc
pop
mov
dec
subl
and
fs
lahf
xchg
xchg
inc
xchg
and
aam
stos
or
cmp
or
jmp
in
aaa
xchg
ret
inc
jge
idiv
sub
jle
movsb
test
or
mov
xor
ljmp
jle
fld
ja
int3
add
in
es
hlt
add
lcall
je
cwtl
xchg
gs
scas
ljmp
pop
add
dec
rclb
clc
outsb
or
adc
xchg
mov
out
push
or
inc
lods
pusha
adc
xchg
pushf
pop
imul
aaa
ds
repnz
test
mov
cli
lret
mov
out
hlt
or
fldl
dec
inc
jb
cmp
outsl
mov
push
mov
jbe
cmpsb
fcomi
pushf
mov
sbb
push
push
insb
je
sbb
pop
mov
cmp
stc
and
in
movsb
lret
fdivrs
fildl
ds
cmp
je
jno
iret
in
je
aaa
mov
dec
rcr
xchg
das
subb
xor
lods
xor
aaa
dec
xor
and
test
cmp
ja
vpsubb
mov
add
ret
lods
or
addw
out
ret
ljmp
sbb
dec
dec
adc
jbe
jns
enter
cltd
xlat
cmpsb
test
inc
mov
sbb
test
out
call
data16
xor
xchg
in
mov
push
cmovns
dec
insl
fmuls
imul
cltd
jle
fstl
jae
mov
fdivr
addr16
lods
xchg
rcr
repz
xor
call
mov
xchg
jne
inc
pop
sti
cmp
mov
ret
rolb
stos
dec
xchg
push
push
jno
addr16
mov
lods
xchg
scas
xor
imul
dec
enter
sub
xor
push
add
adc
jmp
adc
loope
decl
andl
push
arpl
stos
push
in
hlt
xchg
mov
mov
mov
mov
les
repz
inc
mov
and
xor
in
adc
mov
fimuls
push
lds
imul
dec
das
cmc
repnz
adc
pop
shr
ss
mov
arpl
cmp
jp
mov
int
loop
stos
sti
aaa
push
sti
sbb
pop
mov
sub
aam
aaa
les
cmp
fadds
sbb
dec
pop
xchg
adc
fsub
loop
mov
mov
fwait
mov
xor
outsl
push
mov
dec
jb
jl
mov
jbe
xchg
or
int
xchg
mov
jbe
es
mov
cwtl
mov
push
enter
cltd
and
in
dec
addb
or
sbb
test
stos
or
mov
inc
mov
repnz
and
mov
mov
insb
jbe
inc
mov
mov
xchg
std
jne
push
sarl
hlt
dec
loop
loope
ss
test
push
jb
fs
or
dec
or
push
jge
xchg
xchg
adc
inc
rclb
mov
push
or
out
mov
push
sbb
fdivs
incb
adc
pop
call
sbb
xchg
inc
fmul
repnz
mov
stos
mov
pushf
stos
enter
cmpsl
add
insl
push
mov
lret
icebp
aad
lret
test
xor
mov
lds
xor
push
out
push
or
mov
mov
xor
enter
mov
push
adc
stc
repnz
je
dec
inc
and
lret
fs
ljmp
aad
das
or
push
adc
hlt
out
xor
pop
lds
cwtl
fwait
pushf
in
xor
pop
dec
ficomps
mov
out
cmp
aam
mov
mov
sub
idivb
adc
bound
pop
imul
lea
jnp
add
or
icebp
xor
pop
test
js
popl
loop
mov
orl
xchg
orb
test
les
cmp
push
mov
arpl
and
lock
enter
mov
dec
stc
push
shll
cmpsl
xor
dec
in
push
stos
adc
aas
sbb
lcall
mov
xchg
pushf
dec
xor
mov
inc
pop
lods
fimull
cltd
and
adc
loope
add
jmp
adc
jle
cmp
push
push
ficomps
inc
push
sbb
outsl
cltd
out
cmpsl
pusha
mov
movsl
loope
mov
dec
sbb
cli
shll
divb
adc
fdivl
cmpsb
inc
mov
imul
sbb
push
aam
jecxz
sbb
ret
dec
mov
xor
pop
inc
es
ljmp
or
mov
addr16
adc
mov
lret
jp
mov
mov
add
xor
inc
fidivl
aas
jo
pop
sub
in
cmp
out
int
xchg
lea
outsl
int3
dec
dec
jl
mov
ret
in
stos
icebp
add
cmp
mov
loope
xchg
lea
loopne
mov
mov
mov
dec
sub
cmc
in
test
pop
xchg
adc
aas
popl
daa
and
xor
mov
addr16
inc
jmp
sbb
pop
lds
lods
mov
ljmp
push
mov
lret
and
mov
out
add
adc
imul
xchg
repnz
sar
push
mov
cmpsl
js
dec
sub
out
popa
inc
in
pop
add
sahf
popa
adc
xchg
pop
jo
pop
jmp
sub
pop
or
das
daa
mov
imul
xor
pop
fisubrl
lret
lods
and
iret
andb
or
fdivl
lds
movsb
aaa
sub
sub
mov
or
iret
scas
dec
test
sbb
and
or
pushf
cmp
lock
scas
add
in
mov
popa
aaa
and
push
mov
xchg
popf
mov
push
stos
push
pop
loop
mov
in
enter
ret
adc
daa
popa
mov
insb
mov
add
cld
mov
mov
push
push
push
sbb
sub
dec
mov
add
out
fimull
sub
insb
inc
xlat
in
imul
xor
fidivs
sub
mov
roll
adcb
dec
dec
xlat
es
sbb
jo
gs
cmp
repz
cmp
mov
cmp
jnp
int3
les
mov
pop
loopne
pop
stos
sbb
scas
adc
imul
fcmove
lcall
xchg
in
jbe
notb
nop
nop
fdivp
arpl
ret
ds
dec
stos
ja
imul
mov
cltd
cwtl
mov
pop
mov
std
jbe
sbb
inc
clc
xchg
in
loope
push
push
inc
mov
into
test
out
movsl
loopne
lret
xchg
ja
dec
adc
in
jecxz
and
push
into
into
pop
idiv
sub
lock
sbb
cmc
imul
xor
in
subl
es
inc
loopne
int3
push
adc
pusha
mov
or
or
in
xchg
imul
out
repz
pop
push
mov
lea
xchg
and
mov
mov
mov
pop
mov
or
add
xor
pop
cs
aam
or
aam
loop
dec
push
lock
or
sub
jp
rcrl
push
sub
cmpsl
rcr
test
adc
jne,pn
xchg
out
lcall
out
ss
push
aas
fucomp
push
jmp
test
mov
lods
jo
stc
add
imul
aas
aam
adc
bound
fmuls
lret
imul
xchg
mov
vandnpd
fcompl
mov
xor
or
sbb
shll
adc
xor
jg
xchg
imull
mov
int3
rclb
fwait
mov
mov
std
cmp
insl
sub
fwait
jp
int
adc
and
jne
xor
mov
push
inc
stos
mov
sti
test
bound
mov
xor
adc
hlt
mov
enter
pop
add
mov
mov
mov
jecxz
pop
hlt
pushf
mov
in
out
lret
test
mov
addb
mov
sbb
adc
or
out
adc
jae
jbe
mov
lods
cmp
inc
xor
lea
in
mov
repz
out
mov
or
push
jo
mov
sbb
lcall
repz
cltd
jae
pusha
pushf
scas
jno
pushf
call
pop
pop
sub
arpl
fdivl
int3
popa
mov
sbb
mov
pop
test
in
out
pop
popf
dec
sbb
test
loope
lcall
loopne
es
mov
sarl
popf
add
or
xor
jl
lcall
adc
movsb
mov
cld
dec
insb
lods
into
rol
xchg
sub
or
ret
mov
stc
sahf
add
push
push
rclb
xchg
popa
fnsave
dec
movsb
movd
cltd
mov
movlps
pusha
in
pop
fcompl
dec
aad
cmovo
mov
push
bound
rsm
daa
mov
imul
stc
clc
xor
js
inc
and
push
pop
test
dec
xor
xor
or
lea
repnz
and
mov
cmp
mov
jmp
and
movsl
movsb
in
and
push
out
jns
push
jns
fimuls
pop
in
lods
fldenv
inc
scas
sbb
inc
stos
sub
or
shr
adc
stos
popf
jecxz
mov
jl
insl
scas
pushf
data16
mov
sbb
sbb
dec
sahf
jmp
or
mov
ficomps
mov
fsub
inc
adc
jno
sahf
pop
das
mov
xchg
mov
out
cmp
mov
cld
fsubr
fwait
and
mov
or
inc
fistpll
imul
pop
push
nop
add
sahf
mov
js
out
sbb
mov
pop
cs
xor
pop
fdiv
sbb
loopne
aam
xor
xor
mov
jne
daa
jecxz
andl
aad
stc
mov
lahf
pop
pop
jp
dec
je
cmp
mov
push
pop
jl
sbb
xor
push
lds
sbb
sub
adc
pop
sub
xor
std
mov
push
arpl
fwait
imul
jae
pop
iret
mov
scas
jle
xchg
into
cltd
xchg
mov
out
adc
popf
xchg
sub
cmp
xchg
sahf
repnz
lock
lods
je
testl
cmp
fistl
mov
inc
xor
sti
mov
fistpl
pop
jecxz
inc
dec
jl
scas
sbb
mov
cmc
test
pop
clc
insl
jg
dec
dec
dec
push
mov
sub
aaa
stc
xorb
add
add
jb
ret
jmp
aas
xchg
in
ret
and
sbb
cmp
pop
mov
lcall
gs
mov
xlat
inc
stos
test
int3
lret
mov
repnz
je
mov
jb
scas
mov
push
mov
lahf
les
jnp
push
jp
adc
loopne
es
pop
enter
lcall
movsl
adc
cs
xchg
insl
push
les
lock
mov
xlat
pop
or
movsb
insl
xchg
imul
pop
xchg
stos
mov
testb
in
jp
adc
push
adc
add
xor
xchg
push
pop
sbb
sbb
adc
ret
dec
mov
pop
es
sub
push
adc
mov
inc
dec
dec
sbb
push
or
cmpsb
adcb
mov
fs
mov
dec
pop
shrb
std
push
aad
scas
icebp
dec
lret
mov
iret
arpl
js
mov
cwtl
pop
xor
mov
addl
cwtl
push
xor
lret
push
leave
adc
cmpl
mov
add
pmulhw
mov
dec
popf
inc
inc
data16
mov
mov
js
movsl
or
and
xchg
aaa
adc
add
and
cmpsb
pop
mov
and
inc
fldl
jmp
push
sub
and
dec
out
adcb
aaa
cs
lock
xor
sbb
int3
add
cltd
cmp
in
push
jg
push
add
xchg
add
mov
sub
pop
and
xor
popa
insb
add
jns
mov
jmp
cmpsl
mov
adc
push
and
shrl
test
xlat
andl
adc
rcrb
gs
xlat
addr16
push
les
outsb
mov
das
gs
pop
mov
fdivr
mov
sbb
in
ss
jge
sub
loopne
arpl
outsl
hlt
adc
sarl
fildll
xchg
sahf
aad
ja
sub
es
jmp
pop
inc
andb
int3
lea
rcrb
mov
ret
ret
or
test
mov
sbb
loop
mov
push
int3
jge
or
lahf
sbb
addr16
jmp
sahf
or
jae
aad
mov
dec
mov
sbb
inc
sbb
jmp
stos
cltd
shll
sti
xor
mov
ds
push
pusha
sbb
das
hlt
aad
dec
adc
addr16
cwtl
mov
imul
jg
dec
sbb
mov
in
aam
insl
and
sbb
add
sub
inc
and
cltd
lcall
imul
sbb
hlt
rorl
inc
in
loope
imul
cwtl
jl
leave
push
sbb
rcl
cmp
cmpsb
mov
pop
arpl
pop
adc
cld
xor
fisubs
adc
out
add
lock
mov
xor
pop
insb
mov
dec
push
mov
and
sarb
sahf
cltd
aaa
cmp
mov
ljmp
pop
xor
push
loope
or
cld
jno
or
fwait
cmc
aam
push
or
repz
mov
in
mov
int
cmc
pop
xorl
clc
or
jae
or
add
mov
jbe
mov
jo
sahf
push
push
push
jns
pop
fldenv
lahf
sbb
jmp
inc
jge
mov
inc
dec
add
jb
push
cmp
sti
mov
ret
mov
into
pop
js
push
adc
xchg
mov
dec
inc
mov
mov
enter
cmp
pop
add
mov
mov
cs
mov
rol
or
push
xchg
push
divb
inc
mov
out
sub
repz
out
dec
inc
jl
fs
call
fs
xchg
icebp
pop
jbe
push
push
clc
das
stos
sub
mov
sbb
sub
sub
or
push
dec
loop
xchg
mov
or
lods
in
mov
incl
xchg
js
add
xchg
adc
in
jmp
mov
mov
ror
popf
loop
data16
sbb
fst
sub
sti
shlb
bound
mov
mov
sbb
sub
mov
jne
jle
out
dec
push
push
or
xchg
pusha
mov
lret
pop
sbb
daa
es
movd
pop
test
lahf
dec
mov
outsl
movups
adc
std
bound
xlat
inc
sub
mov
lret
sarb
and
adc
mov
jae
shr
and
xchg
loopne,pn
aas
ret
nop
mov
mov
jge
aas
cmp
push
fisttps
stos
js
and
sub
enter
arpl
popf
in
xor
sub
mov
aad
dec
fwait
sub
push
loope
xor
jns
inc
sbb
mov
jae
pop
sarb
ficompl
cli
sbbb
xchg
mov
pop
pop
mov
mov
sti
ja
rol
jbe
sub
mov
in
cmp
mov
addb
ljmp
mov
inc
pop
and
xor
daa
imul
hlt
or
dec
sub
and
xchg
daa
hlt
out
xor
adc
fidivrl
cmp
mov
or
in
push
or
in
loop
sub
jecxz
cmp
mov
stos
sbb
hlt
mov
aam
movsb
scas
cwtl
pop
mov
add
inc
adc
or
js
test
imul
sub
cmpsl
shlb
mov
ret
jae
lret
add
ljmp
scas
mov
sub
pop
adc
cmpsl
ficomps
ss
sti
jns
jl
push
rclb
cmp
adc
outsb
mov
xlat
movsl
int
fidivs
jb
mov
jecxz
pop
mov
jl
and
jns
fisubrs
mov
inc
loop
xor
test
out
ljmp
sbb
fwait
popa
push
push
dec
jbe
test
cmp
jns
xchg
and
je
inc
addr16
or
popf
dec
push
arpl
fisubrl
fistps
ret
out
or
into
imul
out
adc
cmpsb
xor
push
jo
shr
mov
cmp
std
dec
xor
xchg
sub
and
mov
push
loopne
stos
adc
popa
stc
add
xor
lret
fcomip
xchg
in
sar
imul
push
push
mov
mov
gs
fdivrl
in
mov
mov
push
dec
or
jmp
cli
and
sbb
fdivp
js
xchg
clc
clc
jg
popa
mov
inc
filds
aam
rorb
mov
jo
dec
and
aad
push
jb
leave
sbb
test
dec
imul
lods
mov
jae
int
inc
subb
cmp
cmp
in
push
femms
mov
sub
call
aam
loopne
or
jge
or
test
mov
jne
cwtl
lret
mov
add
faddp
in
and
jle
pop
mov
and
test
pop
jecxz
iret
sub
stc
jae
leave
shll
dec
mov
inc
fildl
and
outsl
pop
xchg
adc
outsl
les
jae
add
cmp
mov
js
adcl
sub
enter
mov
pop
cmc
adc
dec
mov
inc
xchg
gs
cmp
xor
data16
and
insb
test
mov
bnd
adc
mov
enter
fld
out
outsb
push
dec
pushf
fldl
pop
sbb
aas
sub
mov
fcoms
ljmp
rcll
neg
imul
rolb
mov
scas
sbb
inc
nop
mov
lods
mov
sbb
dec
cli
and
loopne
sub
cmp
cmpsb
push
pop
xchg
inc
fldt
cmp
pop
mov
pop
cmp
and
mov
jns
dec
pop
jae
loop
jo
cmpsb
xor
popa
and
pop
out
fldl
mov
or
mov
movsl
jecxz
shlb
enter
dec
xchg
addl
ret
imul
jno
xor
lods
ljmp
ds
adc
mov
out
push
popa
test
mov
mov
push
jle
les
sbb
sub
gs
fisttps
lds
lods
push
jo
jl
mov
lea
dec
add
js
xlat
mov
adc
test
stos
sti
loope
lock
inc
sub
push
popf
push
in
call
cltd
adc
sbb
je
add
mov
inc
cmp
adc
inc
jmp
popf
das
xlat
and
dec
push
cmp
pop
icebp
aam
popf
add
cwtl
pusha
movsb
or
sub
or
jnp
incb
mov
out
popf
jmp
dec
xor
gs
add
or
xor
dec
dec
lcall
adc
cmp
les
fwait
imul
or
sbb
sub
enter
mov
xor
scas
imul
test
and
sub
push
mov
pop
push
lds
cmpsb
ljmp
cld
and
inc
or
push
mov
and
out
jne
gs
mov
cli
movsl
out
dec
cmp
adc
in
push
aad
cmp
cmc
dec
fidivrs
dec
aad
nop
cmp
cmp
outsl
and
sbb
iret
pop
push
jnp
cwtl
movsl
nop
pop
fcoml
test
lret
roll
in
neg
cli
aam
outsb
repz
les
xor
mov
mov
jno
sbb
fstp
or
das
int3
sub
std
gs
cmp
or
pop
push
jo
xor
lcall
dec
negb
inc
outsb
cli
jmp
mov
push
into
in
xor
mov
cmp
xchg
xchg
push
ret
or
cmp
jg
jae
sub
pop
mov
test
xor
dec
inc
loop
cli
jns
adc
inc
lcall
ja
mov
push
xchg
inc
push
pop
or
cld
roll
push
das
notb
roll
push
sub
leave
in
push
inc
fwait
add
loop
jnp
sbb
sub
or
cmp
pusha
shll
loopne
imul
lret
xchg
movsl
mov
mov
aad
int
add
bound
fisttpll
mov
xchg
push
pusha
xchg
rcr
fisubl
ljmp
stc
push
cli
out
jle
mov
ja
mov
or
out
xor
inc
sbb
addb
pop
xchg
add
out
mov
das
repnz
repnz
pop
shrb
ret
mov
loop
fs
mov
data16
flds
or
lds
fstpl
out
xchg
adc
insl
mov
mov
arpl
ja
addb
mov
shrl
mov
outsl
outsb
imul
cli
dec
subl
xor
pushl
and
sub
xlat
out
pushf
pusha
leave
sub
mov
dec
cmc
shlb
push
sti
lahf
mulb
dec
xchg
fistl
inc
sti
out
mov
scas
mov
or
pop
subb
sub
lods
xor
frstor
pop
and
pop
outsb
mov
mov
out
jp
jge
data16
aaa
xchg
jg
jae
and
fiadds
xchg
sub
jb
sbb
andb
jne
jmp
sbb
cmp
xor
sbb
mov
das
shll
shll
inc
xor
sub
sub
outsl
int3
loopne
xor
in
and
fdivr
ret
sub
inc
or
push
js
lcall
push
cmp
xchg
dec
test
inc
pop
in
pop
xchg
imul
xchg
push
sbb
jb
inc
push
arpl
jecxz
hlt
repz
dec
stos
arpl
into
adc
sar
data16
insb
fdivrs
mov
lcall
jo
bound
push
or
xchg
andb
push
mov
xchg
dec
fcmovnb
push
push
in
jne
fwait
test
loop
dec
jnp
lahf
add
lods
push
mov
sub
repnz
adc
push
jne
fmul
push
cld
sub
sub
jle
cmp
out
xor
imul
or
pusha
and
movsb
pop
lds
out
push
sti
in
leave
or
ror
sbb
ret
ja
movl
dec
push
aad
sarl
repnz
sbb
xorb
xchg
iret
inc
iret
and
inc
inc
add
in
jnp
fildll
pop
pushl
jnp
and
add
in
cmp
sbb
bound
mov
jnp
lock
sub
xor
imul
lods
inc
jle
test
mov
xor
push
mov
ret
sbb
cmpsl
addb
jo
adc
pop
mov
mov
je
mov
enter
or
jnp
mov
push
aas
push
jae
jb
rolb
std
in
xchg
fcmovbe
cwtl
xlat
cmc
add
jbe
xor
sbb
push
push
mov
inc
push
sbb
xor
idiv
pop
subb
jmp
in
imul
adc
repnz
out
push
insl
dec
icebp
add
cmpsb
pop
mov
shl
ret
fs
jo
lret
out
cmc
into
test
jne
popl
and
sarb
arpl
insl
cmp
fmuls
push
roll
clc
into
movsl
arpl
adc
pop
and
push
sbb
imul
in
jecxz
xor
dec
mov
out
and
fisttpl
fwait
sub
lods
lcall
test
cmp
or
sti
or
xchg
jg
xchg
pop
jbe
orb
outsl
adc
roll
cli
loopne
icebp
mov
shrb
dec
fisubrs
mov
mov
and
call
xor
jae
pop
xchg
mov
dec
jp
test
pop
addr16
dec
pop
roll
mov
push
in
jnp
mov
mov
jbe
imul
aaa
fwait
dec
pop
push
cmp
xor
mov
mov
aas
rcl
push
out
jl
push
lret
xchg
xchg
jmp
cld
push
add
cmpsl
inc
movsb
jle
in
mov
leave
jnp
pop
push
cmp
dec
subb
cmp
jl
in
mov
test
aaa
and
and
popf
stos
push
ret
pusha
and
out
movsb
outsb
insb
inc
inc
jp
loop
je
nop
mov
mov
cmp
aaa
mov
sub
xor
hlt
int
pop
lods
pop
fs
add
sbb
test
dec
movsl
call
jb
push
mov
xor
outsb
push
scas
loope
in
jp
fwait
add
in
push
sbb
sub
push
out
ja
cmp
ret
es
dec
push
hlt
bound
mov
and
pop
xchg
cltd
pop
or
pushf
adc
inc
lds
xchg
sub
rcrl
test
or
cmp
adc
aad
int3
dec
cmp
scas
ret
push
sbb
out
loopne
icebp
jno
mov
rorl
jp
es
lods
xor
pop
or
dec
or
xor
sarl
sbb
or
pop
jl
lret
dec
in
dec
and
stc
int3
call
inc
decl
inc
imul
loopne
out
es
shl
shlb
xor
jbe
enter
std
push
jo
movsl
dec
loope
pushf
hlt
adcl
add
cmc
out
add
aaa
inc
mov
addb
in
daa
pop
mov
cmp
sbb
pop
mov
mov
lret
cmp
test
adc
in
nop
cld
imul
jb
int
int
xchg
push
aam
or
ljmp
and
jle
xor
outsl
mov
mov
jne
mov
add
ret
mov
and
mov
leave
out
nop
cmp
xor
sbb
sahf
aaa
imul
mov
add
into
adc
xchg
je
imulb
andl
mov
lret
shrl
mov
mov
jbe
push
int
jno
mov
jb
mov
xchg
lcall
aas
add
adc
mov
sub
push
dec
sbb
cmc
loop
jns
xchg
inc
test
test
jno
mov
cmp
aad
sub
push
jp
mov
push
fs
fistpl
dec
mov
inc
xor
pop
dec
and
mov
push
movsl
repz
dec
inc
daa
inc
incb
cld
jno
ds
mov
aad
das
inc
xchg
or
into
imul
xlat
das
icebp
mov
xchg
dec
sbb
sbb
clc
addb
dec
aaa
icebp
popf
adc
jecxz
inc
in
add
sub
sub
out
into
adc
mov
add
faddl
bnd
adc
addr16
push
cs
pop
ja
insl
cli
fs
mov
hlt
inc
sbb
lock
cli
enter
leave
or
xor
sbb
sub
loopne
test
cmp
subl
mov
push
nop
sub
out
popa
bound
lcall
mov
scas
cmovbe
test
pop
fistps
inc
sbb
je
loop
daa
or
or
fnstenv
mov
xchg
mov
xchg
mov
out
mov
mov
movsb
jae
xchg
mov
test
insb
xlat
add
mov
mov
aaa
and
sbb
data16
movsb
loope
dec
rolb
mov
sub
lahf
push
inc
inc
shrb
push
mov
stos
lret
test
ja
dec
dec
popf
bound
push
insl
xorw
les
fiaddl
mov
sbb
nop
dec
push
and
xor
inc
test
cmp
movsl
daa
mov
mov
fwait
cli
mov
mov
pop
mov
arpl
jecxz
add
imull
or
adc
or
pop
inc
in
nop
daa
imul
push
xor
stc
fwait
sbb
push
xchg
pop
or
mov
adc
notb
mov
push
xor
sahf
in
mov
iret
pop
jl
fsubrp
ljmp
fwait
shl
sahf
in
xor
test
push
lock
sbb
jo
inc
pop
xor
cmp
xor
outsl
xor
and
add
mov
clc
aas
push
imul
xor
mov
jle
fisubrl
inc
adcb
jle
shl
push
mov
test
sub
xchg
sub
xchg
xchg
out
mov
push
mov
ljmp
popf
fcomps
out
mov
jb
paddusw
add
add
fidivl
dec
push
or
inc
iret
pop
pop
sbb
jbe
pop
push
cmp
inc
out
test
inc
push
cmp
icebp
add
or
insl
inc
pop
mov
dec
or
push
adc
test
mov
mov
std
lea
mov
insl
in
mov
push
or
xchg
outsl
sub
movsl
arpl
daa
pop
xor
shrb
and
aas
inc
add
cli
or
mov
aaa
mov
cli
hlt
stos
xor
imul
mov
scas
cmp
sub
dec
mov
int
push
xor
cwtl
pop
out
cmpsb
add
lods
mov
push
das
inc
out
test
dec
xchg
dec
lret
cmp
jp
popa
lret
mov
push
add
fsubs
outsb
push
and
loopne
iret
test
pushf
cltd
popf
sbb
dec
pop
std
xchg
xchg
or
lret
ret
pop
push
push
mov
lret
lahf
popf
mov
popa
inc
pop
aas
mov
jae
ud2
movsl
adc
andb
inc
pop
mov
jmp
decb
lods
jne
xor
sub
jne
add
sub
jne
or
shlb
mov
lcall
into
repz
fwait
sub
cmp
pushf
leave
or
stc
xor
or
cld
dec
call
mov
imul
int
add
dec
int
cmp
push
add
xchg
fdivl
stc
test
push
shll
push
push
out
xor
mov
movsl
lods
out
xrelease
or
push
ret
fwait
or
push
inc
push
jb
lcall
add
cmp
adcb
xor
jg
mov
dec
daa
pop
or
bound
pop
aam
pop
das
inc
cltd
sbb
dec
push
xlat
jecxz
cmc
call
das
or
mov
lahf
lahf
pop
mov
cmpsb
pusha
roll
cmc
sti
pushf
adc
shl
hlt
cmp
mov
or
into
loope,pt
test
testb
push
enter
xchg
test
dec
int
dec
jo
sub
fimull
mov
adc
loopne
add
aad
mul
push
xchg
mov
fdivl
iret
lock
sbb
add
cmp
jb
cmpsb
orb
xor
fmuls
les
mov
add
sbb
inc
lds
mov
pop
cmp
sbb
sbbb
mov
mov
out
ljmp
nop
cmp
mov
cmpsl
xchg
loop
adc
mov
jbe
mov
enter
mov
stos
push
fsubl
js
mov
adc
push
roll
push
pop
imull
orb
push
xlat
cmc
mov
xchg
add
sub
lahf
sar
add
fisttpl
aaa
add
xchg
std
inc
cmp
push
adc
lods
jge
mov
inc
sub
inc
pushf
pop
mov
pop
rorb
addr16
inc
lea
mov
xor
add
xchg
fucomp
fcmovbe
xor
mov
scas
call
add
or
subb
pop
orb
cs
or
ds
movsl
cmp
sbb
cmpsl
insb
cmpb
pop
jmp
aam
je
adc
pop
mov
movsl
popf
lahf
imul
jp
test
or
loope
cmpsl
inc
sub
popa
cmpsb
lret
dec
or
lcall
imul
add
mov
das
es
sbb
and
mov
mov
push
fidivrl
and
lret
out
cwtl
push
xor
inc
and
aam
rorb
push
sbb
rclb
mov
sbb
jno
pusha
mov
pop
leave
and
jecxz
clc
lret
cmpsb
dec
cli
insb
mov
data16
xor
cmpsl
and
add
mov
icebp
or
jne
stos
jl
cmc
jae
loope
lcall
daa
lahf
lcall
fidivs
push
push
cmpsb
icebp
fcmovne
rcrl
mov
sahf
fwait
xor
mov
dec
nop
mov
cmp
lahf
sub
xchg
sub
les
add
inc
roll
dec
mov
orl
je
fsts
int
in
pushf
dec
arpl
dec
lret
faddp
imul
lret
test
aas
xchg
ret
addl
push
jo
push
sub
pop
push
outsl
aaa
pop
pop
lret
jge
cmp
mov
dec
add
enter
popa
mov
xchg
adc
add
loopne
jns
inc
pusha
cli
pop
push
movsl
ljmp
dec
aad
mov
push
push
mov
jg
xchg
push
ds
sarb
fcmovb
or
cmp
sub
roll
scas
loopne
int3
cmpl
inc
xchg
pop
sub
push
test
pop
out
mov
daa
lods
pop
fs
or
sbb
lods
into
rcrl
insl
push
or
mov
lahf
ret
sub
push
je
cmp
into
sbb
ficomps
orb
pushf
cmc
cmp
rcrb
rcr
adc
subb
inc
movsl
mov
inc
pop
cmp
insl
aas
pop
jl
sub
repnz
out
repnz
inc
inc
mov
rolb
mov
enter
xchg
sub
lods
repnz
test
jno
test
repz
lret
outsl
cmp
lock
jg
nop
jae
mov
xor
in
shrb
cmpsb
add
xchg
add
filds
sbb
add
jns
shl
xchg
mov
pop
outsl
out
cld
inc
sub
inc
cmp
cmp
lock
fdivrl
dec
lret
or
insl
cmpsb
xor
enter
pop
xchg
cmpl
clc
fldl
loope
inc
push
hlt
xlat
in
add
call
add
xchg
sbb
nop
in
push
sub
mov
pop
add
jecxz
icebp
adc
jmp
roll
push
or
sbb
lahf
sbb
jno
inc
dec
jo
paddsw
cmp
popa
push
jl
xor
in
es
int
inc
adc
lcall
cli
mov
push
mov
or
inc
xor
test
sti
or
movsb
xor
pop
test
jl
cld
flds
test
cmc
pusha
pop
aas
hlt
sbb
push
mov
push
lea
test
sub
lods
test
sub
mov
pop
mov
ret
test
fildl
fwait
lret
and
loop
and
vcmppd
adc
xor
int
adc
ss
sbb
inc
push
cmp
pop
ja
pop
add
gs
daa
dec
gs
xor
or
jle
pop
leave
adc
lret
leave
orb
lods
xchg
or
pushf
adc
stc
in
rorl
xchg
loope
dec
js
xor
mov
jg
dec
xor
inc
js
stos
cmp
cmp
repz
fildll
or
inc
in
pop
sub
push
sub
mov
mov
mov
pop
fisubs
lret
inc
out
lahf
int
add
cmp
dec
int
push
dec
insb
cmp
daa
mov
not
mov
and
jb
jp
push
insb
in
addr16
in
mov
enter
bound
mov
sbb
push
outsl
jl
sub
or
xorl
test
xchg
mov
stos
mov
jae
push
call
cmpsb
mov
shl
xlat
ds
inc
push
imul
push
bnd
rclb
insl
stos
mov
es
sbb
insb
jecxz
push
ds
jecxz
xchg
hlt
jle
xor
push
and
push
adc
or
jno
in
push
fsubp
cltd
sub
sbb
ss
mov
scas
jae
in
lea
mov
push
add
xchg
sub
aam
sub
add
lret
pop
in
add
add
mov
clc
stos
xchg
andl
sub
sub
nop
cltd
test
mov
pop
inc
xor
scas
ljmp
mov
push
jae
mov
inc
sbb
jo
in
jp
mov
sbb
mov
mov
sub
add
icebp
fcomip
jmp
xchg
xchg
push
inc
inc
rcrb
aas
orl
int
push
sbb
xchg
mov
xchg
xor
daa
sbb
jnp
xor
mov
dec
dec
cltd
and
sbb
inc
popa
scas
dec
fistpl
mov
cmp
xor
mov
pop
cli
movsb
negl
stos
cmp
pop
pop
or
xlat
out
inc
clc
jns
jbe
lcall
jp
or
adc
in
xor
cmpsl
mov
aas
lahf
xor
loop
adc
data16
jae
xchg
add
mov
ljmp
dec
push
dec
test
sbbb
sbbb
sub
lods
adc
sarl
jge
imul
xchg
aaa
pop
xor
aam
push
dec
sub
jge
flds
leave
daa
adc
inc
mov
dec
in
leave
testl
pop
lret
mov
cwtl
lods
cld
adc
sbb
adc
add
sar
lcall
jecxz
jbe
dec
adc
xor
outsl
enter
aas
ljmp
mov
enter
jbe
arpl
sub
and
mull
sbb
pop
xchg
adc
outsb
ds
pop
arpl
jae
leave
add
lret
mov
mov
js
inc
sbb
mov
mov
aad
pop
mov
lret
or
and
mov
adc
ja
fidivrl
lods
push
inc
mov
inc
pop
fs
lds
and
mulb
or
cmp
jl
cmp
xchg
faddp
xchg
mov
stos
and
mov
add
xchg
push
insb
lahf
fwait
nop
shrb
cltd
popa
inc
es
sub
ds
push
dec
stos
inc
lret
add
cmp
jnp
inc
pop
lahf
fnstcw
dec
mov
mov
or
or
push
outsb
sbb
xchg
int3
xor
testl
pop
xor
pushf
xor
pusha
leave
mov
xchg
int
inc
mov
rcll
add
jp
push
aaa
stc
push
je
stc
les
ror
jmp
fisubrs
mov
enter
push
sbb
mov
inc
decb
mov
cmp
inc
cld
fistl
mov
mov
mov
pusha
dec
in
shl
xchg
es
js
stos
mov
jl
or
cltd
insl
and
out
push
sbb
xchg
gs
fisttps
mov
adc
or
rcrb
loope
dec
mov
or
mov
shll
cmp
sub
stos
add
loope
mov
imul
push
mov
push
mov
mov
int
imul
mov
in
add
adc
pop
test
fdivs
rcrl
lea
ss
sub
mov
pop
sub
test
or
in
rcrl
jae
sub
lahf
inc
xchg
fdivl
dec
sub
cmp
xlat
pop
jno
call
ret
or
in
enter
xor
mov
movsb
jbe
pop
add
in
push
ret
sub
sbb
mov
lret
adc
loope
rcrl
daa
fnsetpm(287
out
test
aad
sub
es
mov
lret
aaa
inc
gs
fwait
scas
lcall
xor
jmp
inc
xchg
dec
push
test
cmpsb
sbb
mov
mov
and
or
and
fstpl
push
cmp
cmpsl
insl
inc
and
fidivrs
cmp
lods
aaa
push
lods
in
sahf
jl
pop
pop
dec
lods
popa
mov
adc
mov
sub
adc
push
lcall
inc
cmp
mov
js
sub
pop
lret
push
fisttpl
inc
mov
cwtl
push
stos
test
decb
stos
jns
icebp
xchg
jbe
out
cmp
sarb
cmc
sbb
sub
xchg
mov
jp
das
sbb
dec
mov
jno
cmpsb
arpl
add
jmp
fwait
pop
cmpsl
jns
call
in
inc
outsb
je
dec
mov
xor
jmp
mov
cld
inc
lea
or
js
mov
inc
out
subl
scas
out
lea
adc
add
xlat
gs
rcll
add
out
aaa
cld
or
lret
jge
cld
inc
cwtl
outsb
aas
inc
adc
push
insb
cmp
and
iret
or
add
movsb
add
shr
sbb
out
xchg
push
das
test
mov
sub
cld
out
cmp
adc
flds
mov
sti
jecxz
orb
jns
push
rcrl
lahf
cmp
adc
pushf
or
or
or
jb,pn
push
nop
xchg
mov
into
xlat
fistpll
and
xchg
add
loopne
jns
jl
push
cld
stos
ja
les
inc
mov
mov
sub
cmp
push
imul
jnp
inc
and
aas
mov
push
adc
push
inc
and
rcrb
ret
insl
lcall
jbe
xchg
ljmp
lods
push
mov
lret
pushl
mov
je
and
ljmp
js
dec
lahf
mov
lock
inc
adc
push
adc
mov
insb
lahf
push
aaa
or
xchg
add
dec
cmp
push
push
clc
subl
mov
in
loopne
or
xchg
mov
sub
push
out
pop
outsl
xchg
leave
pop
mov
jg
xor
mov
mov
call
cmp
out
push
sti
add
push
sahf
shrb
push
push
mov
or
cwtl
leave
xor
and
jecxz
pop
leave
xchg
pop
inc
push
mov
push
jecxz
xchg
add
outsb
js
fcomps
je
mov
imul
xor
gs
repz
sarl
sbb
pop
outsb
ss
das
ficoml
mov
ja
xchg
lods
xchg
jmp
cmc
dec
leave
daa
jae
inc
pop
or
movsl
shlb
out
push
sarb
mov
jmp
and
movsb
fsub
jnp
inc
rorl
pop
aad
int3
adc
jae
jnp
mov
clc
lds
imul
mov
xor
jp
xor
out
pushf
dec
stos
ljmp
pop
and
xor
jl
xor
sub
ljmp
aad
mov
aad
clc
fmuls
jecxz
into
ljmp
shlb
add
testb
xchg
inc
or
jns
shlb
repz
fcmovbe
push
push
mov
pop
loopne
cmp
test
jno
fildll
push
dec
add
mov
std
sbb
stos
cmp
xor
in
dec
mov
jnp
add
pop
push
cwtl
mov
movl
xchg
jae
sub
cmp
sti
stos
pop
jmp
loopne
lea
xor
xor
cld
leave
in
ljmp
lahf
movsb
xor
push
imul
sbb
repnz
sbb
mov
mov
roll
test
insl
dec
xor
aad
fildl
pop
sbb
je
insb
xlat
imul
push
cmpb
pop
inc
and
fimuls
pusha
push
into
inc
int
or
inc
mov
sarl
pop
adc
jne
test
and
push
ss
xchg
test
mov
lods
je
cs
cmpsl
xchg
les
ficoml
mov
insl
cld
ret
cwtl
add
sbb
rolb
shll
in
inc
scas
lret
rclb
sub
cmp
cmp
cmp
cmpl
dec
lahf
cmpsb
jecxz
test
jns
xor
push
dec
inc
mov
out
sub
sub
sub
sub
dec
scas
filds
and
fidivl
movb
fsubl
jge
repz
scas
jecxz
dec
notb
insb
jb,pt
mov
les
int3
insb
mov
lret
out
ret
lret
xor
inc
fidivrs
pop
hlt
pop
mov
loopne
push
jbe
adc
ljmp
cli
jo
insl
jmp
cld
mov
rcl
aam
pop
lahf
fistpl
inc
xchg
jmp
in
adc
push
lea
xor
xor
hlt
popa
or
scas
mov
xchg
loop
mov
xor
cld
lods
xchg
push
bound
or
mov
push
aam
ret
xchg
pusha
loop
outsb
scas
icebp
fdiv
and
cwtl
inc
lds
in
outsl
pop
lret
adc
das
pop
fsubrp
jns
sbb
and
lret
xchg
les
sub
aas
movsb
fcoms
les
call
out
or
js
rorl
repz
or
sub
push
jo
and
fs
adc
call
scas
or
xor
fcomps
mov
mov
cltd
inc
push
jl
mov
pushf
and
leave
pop
jbe
xlat
cli
pop
and
inc
addr16
lods
sub
mov
ljmp
nop
pushf
push
test
pop
mov
aas
out
insb
xchg
and
mov
jnp
jns
lcall
sbb
and
sarb
inc
mov
fwait
and
xor
outsl
movsb
xchg
dec
adc
mov
cmp
pop
inc
push
xor
jbe
roll
pop
scas
int
arpl
lcall
in
out
stos
jo
and
popw
push
lds
and
pop
cmc
or
xor
mov
ret
jecxz
adcl
test
adc
popf
int
ret
out
pop
jle
pop
jmp
ja
or
push
pop
rorb
sub
cmc
or
mov
mov
cmp
jl
loope
ret
inc
ss
test
mov
add
shrb
cwtl
sti
shll
mov
jnp
fnsave
fwait
scas
arpl
std
mov
mov
dec
mov
inc
xchg
fsubl
repz
popa
ret
inc
push
cltd
mov
dec
loope
je
dec
lret
push
cmp
fwait
jge
lock
mov
andb
insb
push
rcrb
xchg
lds
lret
lahf
cltd
rdpmc
cli
sbb
fisubrs
push
aam
stos
jno
sub
fisubl
xor
add
and
adcl
das
mov
lea
mov
and
lahf
mov
xchg
ljmp
add
dec
pop
lret
adc
add
mov
in
in
xchg
dec
push
and
ret
sub
adc
xchg
pop
pop
fwait
adc
sbb
adc
or
mov
mov
sbb
xor
mov
adc
fidivrs
jne
or
add
mov
adc
scas
mov
xchg
lods
inc
call
xor
xor
iret
sbb
sarl
mov
and
jg
in
mov
repnz
adc
rcrb
dec
inc
pusha
lea
test
js
loopne
inc
dec
lret
dec
out
popf
xchg
ja
mov
pop
mov
es
sub
test
mov
xchg
xorl
sti
add
or
lret
xchg
out
fistpl
shll
jb
mov
mov
nop
dec
mov
inc
jno
mov
mov
mov
out
call
mov
add
ds
sbb
mov
mov
cltd
ret
inc
jle
cwtl
cmp
gs
fildll
popa
jle
adc
xor
adcl
or
cmp
sbb
mov
dec
sbb
cmp
jmp
test
cli
xchg
add
ffreep
dec
mov
and
sbb
xor
and
aas
lods
mov
aas
shl
imulb
cmp
lret
lods
xor
or
fldl
cld
sbb
lods
mov
lock
xchg
jge
movsb
cmp
pop
out
or
std
mov
push
adc
cld
cmp
lahf
cltd
in
dec
inc
gs
dec
mov
fbstp
aaa
fcoml
js
test
rorb
mov
movsb
fisubrl
xchg
xor
mov
sbb
jge
iret
mov
ffreep
lret
xchg
sbb
xchg
or
sub
stos
add
and
xor
mov
stc
sbb
andl
sahf
push
push
cmp
fmulp
xchg
mov
jbe
adc
jg
mov
mov
sbb
rcl
lock
scas
and
dec
jns
pminsw
mov
shr
in
int
shl
mov
cmp
jmp
or
lret
iret
scas
inc
inc
mov
pop
in
test
xchg
adc
aam
and
lods
dec
cwtl
movsl
xchg
and
mov
xchg
nop
xor
dec
xchg
mov
stos
cmp
mov
ds
sbb
outsb
xor
xor
mov
jl
push
sub
out
negl
pop
pop
and
jge
inc
xchg
sti
pop
xchg
ja
xchg
rcr
popa
pop
cltd
lods
mov
dec
xor
pop
push
lods
in
mov
sbb
xor
and
ss
cmpsl
inc
jecxz
sub
add
inc
mov
insb
push
iret
jae
cmpsl
jecxz
xor
aad
dec
xor
cmp
adc
sub
test
jno
push
adc
ja
adcl
mov
inc
test
js,pn
mov
sti
iret
xor
xchg
ret
mov
aam
aam
je
das
divb
ficompl
movsl
xchg
and
inc
jmp
adc
fldt
adc
rcl
loopne
out
movsl
pop
sbb
jl
cmpsl
mov
ror
sub
or
pop
iret
loopne
xchg
mov
shrl
shrb
ljmp
or
outsb
and
mov
jb
imul
sbb
dec
jmp
mov
mov
cmp
jmp
mov
test
repnz
sub
pop
push
fcompl
push
dec
sub
lcall
mov
outsl
pop
stos
jl
cmp
xor
jne
ds
int
sub
test
jno
mov
or
inc
repnz
scas
leave
adcl
leave
sti
sub
cmp
daa
xorl
pop
push
adc
pop
decl
adc
test
pop
in
sahf
clc
int3
fsubrl
movsl
test
push
aaa
mov
sub
cmpsb
mov
addl
xor
pop
sbb
test
shll
push
decl
int
bound
ret
into
jnp
pusha
or
fimull
int3
mov
mov
outsb
in
push
fs
xchg
add
jae
and
jb
sti
pushl
outsl
mov
loopne
lret
nop
lods
pop
bound
cmc
sbb
cwtl
cmpsb
jb
sahf
pop
mov
inc
lcall
lods
cmp
push
jmp
sbb
mov
bound
push
or
xchg
cmpsb
jle
out
lock
and
dec
shl
dec
test
scas
addl
mov
out
mov
mov
inc
xchg
mov
ret
inc
mov
xchg
popf
mov
sarl
es
add
inc
pop
das
push
and
push
or
mov
repnz
mov
mov
test
lsl
stos
cs
dec
cmp
sbb
mov
or
xor
adc
cs
push
repnz
insb
imul
sbb
nop
mov
out
int
daa
int3
fwait
mov
dec
inc
pop
popa
sbb
xchg
in
mov
test
loopne
int
xlat
dec
cmp
in
shlb
push
mov
ss
mov
sub
repnz
fcoml
jnp
jne
in
cmpb
xchg
arpl
xchg
lret
outsl
cwtl
pop
mov
lret
sahf
dec
add
nop
dec
jae
cmp
adc
insl
xchg
mov
cmp
in
imul
jns
xor
jnp
sub
jecxz
adc
add
push
cs
ret
ljmp
mov
fstps
mov
sub
loopne
jo
int3
fs
aad
aam
test
inc
mov
jg
repnz
jmp
iret
push
cmpsb
pop
fistps
ret
arpl
or
push
push
xchg
jle
push
push
add
fsubs
cmp
outsl
xchg
or
decb
sbb
sbb
call
adc
jae
subb
add
cmpl
jno
push
outsb
push
xchg
or
fcmovu
aas
xchg
shr
xor
sbb
ss
xchg
xchg
lods
je
mov
jecxz
icebp
add
sysret
in
sub
mov
push
es
jno
pusha
sbbl
mov
and
lret
rcrl
out
cld
push
imul
dec
repz
into
mov
and
aas
pusha
pushf
mov
mov
lock
mov
std
mov
test
mov
cmp
pop
mov
and
inc
sub
or
ret
lcall
mov
test
and
mov
bswap
into
push
mov
out
aaa
mov
sbb
sub
inc
and
jo
jle
sub
mov
scas
sub
add
test
push
mov
movsl
test
insb
inc
cmpsl
add
push
cmpsb
mov
out
jmp
ljmp
jmp
jecxz
inc
hlt
push
adc
and
mov
arpl
inc
les
js
flds
mov
test
loope
or
test
add
sarb
rolb
jae
mov
daa
imull
call
mov
push
outsl
lea
jno
dec
add
mov
push
mov
punpckhbw
add
loope
add
jnp
inc
adc
mov
push
mov
inc
into
inc
jno
outsb
inc
xlat
enter
gs
pusha
daa
rcr
pop
nop
fistpll
cmpsb
aad
cli
in
repnz
sar
lea
cmp
imul
xchg
mov
jno
les
push
xor
movsb
push
in
xchg
incb
sar
imull
adc
push
mov
neg
jns
xchg
enter
mov
sub
lret
pop
pop
cmp
or
ret
cmp
rorl
mov
fsubrs
jae
or
iret
cs
jae
ljmp
sub
xlat
sarl
mov
lcall
pop
mov
insl
or
addr16
mov
fs
shl
ss
ret
dec
orb
cltd
xchg
cmc
loop
test
mov
push
jns
orb
addl
sarl
sti
lods
ds
ficoms
xchg
sub
cwtl
jae
add
imul
shrb
sub
fmulp
cmpsb
pop
jo
ja
mov
stc
xchg
sbb
pop
test
arpl
movsb
ja
jmp
sub
dec
jp
iret
scas
cmp
lods
xchg
xchg
pushf
push
loope
and
and
out
cmp
add
daa
cmp
fidivs
mov
movsb
adc
mov
ljmp
push
ss
sub
dec
repz
rol
xchg
mov
mov
clc
xchg
test
test
inc
ja
mov
xor
xlat
std
ja
roll
mov
icebp
outsw
sarb
mov
mov
flds
cwtl
daa
push
notb
aas
mov
inc
sbb
ds
addr16
popa
lahf
add
mov
jbe
xor
notl
mov
xor
sbb
cmp
pop
mov
mov
mov
popa
cmp
jg
cwtl
fnstenv
in
mov
movsb
xor
add
cs
repz
leave
sub
fldl
orb
out
dec
jp
inc
out
loopne
fisttpll
jo
dec
fucomip
in
arpl
cwtl
jne
jp
pop
push
rcl
dec
jmp
lods
repz
jae
xlat
mov
push
dec
in
and
std
xor
or
jmp
sub
mov
ss
test
mov
sub
sti
sub
mov
cmp
push
cltd
push
sub
mov
les
mov
cmp
jl
jmp
cmc
insl
arpl
and
pop
and
and
cmpsl
and
les
xchg
inc
push
and
or
test
push
int3
push
jmp
pusha
sbb
ljmp
xchg
shlb
lock
mov
inc
mov
fnstcw
nop
mov
fistpll
stc
mov
xchg
mov
jne
nop
movsl
loopne
jp
cmpsl
push
and
or
jb
clc
clc
stc
dec
dec
lret
sub
push
inc
xlat
jne
adc
and
mov
pop
les
int
mov
cmp
les
std
sub
push
cs
aad
pop
lds
cmpsb
adc
xchg
adc
and
and
jp
imul
mov
insb
jno
aas
adc
cli
sbb
inc
outsb
je
clc
xlat
adc
addb
add
cwtl
rcll
pop
ret
loopne
jp
sub
mov
sub
cmp
dec
mov
xchg
add
lcall
inc
sahf
imul
fiaddl
fwait
loopne
roll
jg
xor
xchg
les
or
mov
push
pop
adc
pop
inc
dec
mov
std
int
push
bound
mov
cmc
vrcp28sd
pushf
mov
pop
push
sub
push
mov
inc
mov
lahf
imul
xchg
xlat
insl
je
mov
sbb
jp
cmp
movsl
loope
mov
mov
rclb
mov
lahf
push
in
lods
fstpt
mov
xor
inc
stos
push
out
mov
xor
xchg
push
icebp
stc
mov
cmp
mov
movsl
adc
mov
inc
sbb
mov
clc
jbe
cmp
mov
gs
dec
sub
push
mov
sbb
jge
push
iret
dec
incb
in
mov
xor
mulb
and
pop
pop
out
sahf
das
mov
push
addl
mov
out
ret
or
rorl
jp
cmpsl
ljmp
sub
push
mov
sbb
test
mov
insl
push
hlt
scas
pushf
jnp
lret
push
rol
or
clc
or
stos
aas
sbb
arpl
pop
popa
cmc
repz
push
jecxz
xlat
arpl
sbb
pop
adc
adc
test
cmp
jo
iret
pop
shll
xor
inc
fists
inc
cmc
adc
lcall
jbe
out
idivb
pmaxub
in
pop
scas
addr16
or
dec
ret
stc
nop
push
xor
dec
fmuls
aaa
or
mov
ret
out
aad
inc
out
jmp
sbb
rorb
out
or
cmpsl
inc
dec
sahf
or
mov
xchg
cld
movb
fisttpl
scas
shlb
xor
mov
js
sti
movsl
adc
sub
add
sbb
hlt
test
jecxz
std
xchg
arpl
mov
cwtl
inc
xchg
inc
cwtl
jbe
das
pop
fcmovnbe
mov
adc
sbb
sub
aam
push
out
push
repnz
sar
adc
lret
fidivl
les
cwtl
mov
inc
push
sbb
fwait
push
and
push
cld
xor
sbb
es
push
xor
pop
cli
mov
in
jg
xchg
fmuls
sub
push
ret
lar
adc
mov
cli
dec
dec
jbe
mov
sub
int
mov
mov
int
jb
decl
and
daa
pop
icebp
push
enter
fsincos
decb
xlat
addr16
inc
adc
call
sbb
and
push
mov
mov
and
jp
cwtl
imul
sbb
or
js
les
sub
adc
into
pop
cmpsl
dec
xchg
or
jo
stc
std
add
pop
add
pushf
out
out
jae
jo
dec
jmp
push
movsb
rorb
mov
push
mov
mov
jnp
aam
outsb
adc
dec
jae
test
fidivl
push
insb
pop
mov
push
test
idiv
shlb
add
mov
in
mov
adc
sbb
and
arpl
imul
sbb
cmp
mov
xchg
aaa
xorb
pop
and
push
fcoml
sub
pop
pop
jl
das
pop
enter
adc
mov
xlat
popa
inc
popa
pop
out
shll
and
imul
dec
pop
rcrl
xor
enter
and
lahf
mov
cwtl
cmpsb
adc
cld
mov
cld
imul
cmp
inc
sbbb
inc
adcl
cmp
dec
leave
movsl
notb
or
inc
or
lods
stos
jb
add
inc
mov
andl
aaa
ret
mov
sbb
xchg
cld
sti
sbb
xor
shlb
frstor
cmp
stos
js
add
mov
jo
push
jno
jp
dec
jne
fstl
sub
xlat
in
sbb
lahf
fwait
push
dec
cmp
stos
sbb
inc
pushf
shlb
sbb
pop
out
sub
and
jae
repnz
adc
fdivp
or
cmpsl
xchg
pop
add
les
jp
fidivrl
aad
stos
dec
aam
testl
pop
sbb
ljmp
popl
cmovs
mov
adc
repz
push
mov
and
fs
dec
loope
test
push
mov
pusha
xchg
repz
shll
aam
xchg
jae
adc
insb
outsb
cld
imul
push
pop
hlt
xlat
jmp
adc
adc
mov
jbe
stos
or
cmp
or
iret
pop
enter
dec
xchg
push
adc
stos
inc
ljmp
xchg
fnstsw
loop
push
in
cmp
push
pop
mov
pushf
out
sbb
test
fstpt
or
lods
sbb
push
mov
in
mov
in
pop
jno
jae
mov
popf
mov
adc
jle
xor
push
add
fscale
andb
aas
dec
into
xor
aas
sti
hlt
mov
popf
in
es
cmp
and
mov
jb
xor
out
addr16
fnsetpm(287
cs
xchg
popa
stc
jg
sub
mov
ljmp
adc
cmp
and
dec
test
sbb
sub
movsb
cmpsb
mov
shl
into
pop
xor
adc
into
aaa
hlt
sub
xor
mov
orb
jns
lds
sti
iret
addr16
sti
push
rcll
push
sbb
push
out
data16
inc
sbb
inc
je
cmpsb
mov
push
ss
shl
push
mov
mov
mov
roll
fadds
mov
cmp
dec
aas
pop
leave
jbe
fwait
pop
fcomi
leave
mov
mov
in
fdiv
add
mov
outsb
mov
xorl
dec
pushw
pusha
in
or
dec
mov
inc
dec
sti
sbb
mov
dec
and
mov
mov
dec
insb
sub
xor
sbb
int
jne
ret
ss
mov
jns
cmp
xor
clc
pop
rorb
popf
xchg
cmp
xchg
push
cmp
gs
insl
mov
jo
lock
aas
fwait
arpl
xlat
neg
jnp
push
insl
cmpsb
fdivrl
ds
and
push
push
jp
or
outsl
adc
int3
or
in
xchg
cmc
lods
rclb
test
xchg
out
inc
mov
es
pop
cmp
stc
imul
or
and
inc
push
fimull
aas
sub
dec
dec
adc
stc
stos
mov
outsl
andb
out
test
pusha
mov
mov
aam
inc
inc
leave
jge
adc
pop
scas
icebp
pop
int3
dec
xchg
or
mov
jb
int3
adc
mov
shlb
jmp
push
xor
xchg
out
fwait
cmp
sub
lahf
je
daa
xor
into
sub
stos
mov
inc
jbe
xor
fsubrl
dec
add
addr16
pop
pop
xor
popf
or
and
stc
stos
ja
push
enter
jecxz
mov
mov
pop
rorb
pop
dec
scas
ret
mov
imul
mov
push
xor
jmp
lcall
push
xchg
notb
or
mov
daa
rorl
or
popf
ret
add
push
cltd
je
pushf
scas
dec
xor
jmp
scas
cmpb
xor
inc
sub
push
clc
arpl
cmpsb
mov
rcl
pop
popf
imul
dec
cmc
stos
lea
push
gs
sub
arpl
stos
sbb
add
adc
orl
push
jl
clc
fiadds
fadd
aad
xor
mov
or
xchg
movsb
cmc
arpl
pop
test
imul
adc
mulb
mov
push
inc
mov
outsb
xchg
sarb
adc
clc
pop
xchg
push
js
mov
test
pop
mov
pop
int3
imul
shlb
and
std
in
rorl
in
roll
js
inc
sbb
mov
and
test
shrl
mov
cmp
lret
add
or
or
shlb
jge
pop
bound
jl
stos
sub
loopne
pop
stos
or
cltd
test
xchg
xor
je
mov
mov
mov
rsm
push
push
loopne
fwait
ret
add
mov
mov
mov
fcmovne
jae
fmul
xor
into
jne
adc
cmp
les
mov
mov
jo
stos
enter
aas
pushf
jmp
mov
pop
inc
lock
test
xor
outsb
test
loop
icebp
leave
sub
dec
push
xor
bound
cmp
pushf
sub
inc
inc
sub
xchg
jl
jl
nop
int
mov
fsubrl
mov
shl
and
inc
jnp
ljmp
icebp
push
dec
dec
stos
loop
mov
loopne
pop
test
ficompl
aam
int3
and
sub
sbb
mov
push
mov
gs
add
cld
pop
or
pop
add
inc
xchg
into
int3
rol
inc
std
fmuls
rolb
jne
aad
popf
adc
les
adc
mov
mov
cmpsl
lahf
sub
xchg
inc
rol
call
xor
mov
shrl
popf
xchg
jb
mov
and
repnz
cmp
negl
adcl
iret
clc
and
fcomps
mov
repz
and
mov
sub
out
dec
dec
mov
scas
fwait
pop
cmpsb
ss
aad
xchg
inc
std
fdecstp
leave
pop
mov
imul
insl
cld
mov
push
pop
mov
in
nop
jnp
xor
sub
sub
loopne
les
and
decb
add
adc
std
sbb
cmp
stc
icebp
loop
lock
test
cwtl
test
loopne
in
mov
es
inc
pushf
pop
and
and
mov
adc
sbb
add
in
mov
mov
sbb
add
insl
js
mov
mov
stos
pop
xchg
xchg
adc
ljmp
and
mov
adc
fsts
clc
sbb
mov
push
adc
negl
fnstenv
popl
jl
mov
mov
aas
or
lods
xchg
mov
push
pop
int
loope
ss
mov
fwait
or
cltd
sbbb
jle
outsb
xor
cld
sub
inc
jecxz
ret
lret
cmp
in
inc
add
mov
mov
dec
push
xchg
push
enter
nop
or
bound
jae
xchg
sti
sbb
pop
int3
lcall
and
orb
xor
pop
mov
push
js
rcrl
dec
enter
movsl
mov
pushf
sub
aad
xchg
or
lock
mov
mov
jne
xchg
sub
pop
or
jne
mov
test
jmp
xchg
mov
insl
cltd
xor
shll
data16
dec
in
data16
pop
int
je
cli
dec
test
into
add
pop
xchg
jno
xor
cmp
mov
cltd
cmpsb
leave
out
mov
call
out
das
fisubl
mov
fcmovne
pusha
or
fs
and
push
test
outsb
sbb
imul
cmpsb
xlat
sub
sahf
lods
sbb
sbb
add
enter
adc
or
push
pop
dec
popa
xchg
or
ljmp
aas
and
cmpsb
loop
push
push
stos
stc
insb
push
push
add
xor
pop
out
inc
movsb
clc
lahf
mov
inc
pop
push
dec
and
pusha
into
out
mov
or
inc
sbb
xchg
lods
aaa
adc
and
repz
ds
sbb
add
push
mov
sarl
imulb
add
aas
or
dec
jnp
jmp
sar
cmp
dec
xor
jle
cmp
and
sbb
inc
xchg
adc
dec
dec
push
jae
repz
faddl
mov
iret
mov
pusha
mov
mov
cwtl
loopne
mov
out
les
inc
or
cmc
in
push
pop
add
jge
loop
call
test
push
push
mov
fisubrl
movntq
out
insl
shll
mov
inc
xchg
sar
mov
jmp
inc
xchg
jmp
arpl
xchg
std
and
pop
xchg
stc
loopne
sbb
popa
pop
cltd
iret
addl
in
add
mov
into
push
push
mov
pop
mov
cltd
in
inc
sbb
aaa
jns
movsb
inc
push
jae
adc
rcl
repz
push
cltd
push
das
ja
push
out
out
outsl
adc
arpl
inc
mov
and
jae
ds
stc
ss
xor
jnp
insl
sbb
clc
pop
cltd
outsb
push
das
enter
bound
jle
leave
ds
mov
cmpsb
xlat
outsb
fcoml
cmp
inc
das
adc
jne
cwtl
mov
jmp
pop
sub
es
sbb
sbbl
gs
jle
int
loope,pn
push
shrd
hlt
pop
test
xor
in
js
push
xlat
mov
ss
enter
inc
nop
jmp
sbb
lcall
xchg
cmp
call
cli
pop
adc
cmpsb
fnstsw
notb
in
bound
xchg
sbbb
sub
fwait
inc
pop
pop
jge
ja
sarb
shlb
rcrb
mov
pop
push
aas
push
jg
push
arpl
inc
pop
jae
rorl
repz
jg
push
xchg
jge
leave
pop
pusha
inc
push
fwait
test
cmp
cmp
cs
sub
mov
jl
mov
lcall
dec
sbb
dec
xchg
out
sub
movsb
jg
cmp
mov
lods
add
sarb
jnp
cmp
sub
cmpb
push
imul
mov
pop
enter
xchg
ret
dec
jbe
lret
js
mov
imul
mov
je
pop
insb
lods
push
ret
fs
divl
ljmp
ds
add
loopne
xorb
ss
push
jno
cli
sbb
divb
or
and
xor
mov
xchg
xor
pop
mov
dec
jge
fcompl
in
and
cmpb
inc
cmc
sub
into
jle
ja
gs
int3
adc
sbb
sub
inc
and
pop
popa
ret
int
movsl
cltd
sub
in
push
dec
jno
aas
loop
inc
push
mov
mov
mov
jecxz
cli
and
jo
rolb
pop
mov
jl
and
aad
data16
mov
sub
push
scas
inc
or
cwtl
repnz
jns
and
mov
xchg
sbbb
daa
mov
mov
lock
mov
xor
xlat
pop
add
cltd
or
cltd
xor
ret
daa
stos
push
lock
push
icebp
insb
and
jecxz
fs
les
testl
test
out
test
andb
cwtl
xchg
jle
cmc
in
push
fcomp
aam
mov
stos
movsl
sbb
ss
negl
in
jb
mov
fwait
cmpsl
adc
jge
pop
daa
pop
mov
mov
add
mov
mov
in
or
fcmovu
out
or
push
mov
roll
int3
movsb
pop
push
ss
adcb
fs
mov
jno
mov
dec
xchg
jo
nop
or
out
adc
shll
xor
push
js
jno
int
xchg
stc
pop
push
mov
dec
pusha
adc
xchg
js
les
adc
xor
push
mov
out
in
and
enter
sarl
outsb
add
jb
outsl
mov
ja
fiadds
insl
dec
and
mov
rcr
mov
dec
xor
in
inc
out
in
test
outsl
ja
add
movnti
jp
push
fld
imul
and
xor
sbb
and
or
adc
xchg
cltd
outsb
out
jae
lods
jecxz
push
out
inc
mov
icebp
je
push
in
pop
ficoml
or
data16
add
push
sbb
pop
aad
pop
and
add
bound
outsl
sub
pslld
jae
cmp
jge
xchg
and
aad
xchg
icebp
jmp
or
lret
push
shrl
insl
or
aaa
mov
dec
add
ucomiss
shll
lods
xchg
mov
xchg
and
cltd
pop
or
pop
cmp
fst
pushf
and
jo
mov
mov
mov
pop
cmpsl
jnp
xorb
sbb
pop
in
xor
out
add
adc
idiv
gs
out
dec
nop
sar
sbbl
sub
push
pushf
fisubrs
jmp
push
enter
push
jle
dec
fwait
pop
test
inc
sbb
rclb
add
xor
out
pop
in
cli
adc
dec
imul
lock
into
and
inc
imul
sub
mov
pop
clc
flds
jo
lods
imul
and
sbb
or
sbb
pop
push
pushf
in
jmp
jmp
iret
pop
out
mov
repnz
test
sarb
pop
xchg
hlt
jbe
mov
daa
mov
pop
clc
dec
pop
inc
out
lahf
and
stos
xor
testb
mov
jbe
sub
sarl
in
psrlw
mov
push
mov
xchg
push
loope
sarb
cmpsb
jp
xor
push
in
ds
out
dec
fcoms
adc
call
pop
sti
mov
and
jbe
stc
adc
pop
nop
lods
push
outsl
xor
imul
mov
test
pop
add
mov
je
push
adc
cltd
pop
sbb
lret
inc
sti
mov
hlt
pop
and
outsl
jns
jle
dec
jne
pop
push
pop
pop
ja
sti
jo
dec
add
lods
sbb
cmc
cmp
ficoml
dec
cmpsb
mov
movsl
out
fwait
es
jmp
push
in
sti
ror
mov
sbb
and
mov
dec
cltd
stc
pusha
iret
cwtl
int3
xor
push
out
xchg
popa
lods
or
ret
mov
test
je
adc
mov
repnz
mov
cmp
nop
dec
inc
mov
push
lods
in
into
aam
jbe
push
ret
xor
mov
scas
mov
add
fsubl
loopne
pxor
xor
cld
test
cmpsl
mov
jl
iret
test
mov
adc
sbb
jge
fcoml
cli
aaa
in
adc
mov
test
xor
and
ja
lds
cmpsl
adc
rcrb
and
mov
dec
scas
mov
pop
cwtl
mov
and
fs
aam
or
icebp
and
jmp
mov
addb
pop
jl
sub
leave
push
add
mov
pushf
repnz
and
je
decl
icebp
pusha
mov
or
outsl
aad
or
test
shlb
inc
push
sub
sub
insl
jns
sub
dec
push
jmp
mov
data16
iret
mov
fs
inc
and
lds
inc
cmp
fldenv
movsb
dec
sub
ss
pop
push
pop
ljmp
call
cltd
stos
mov
cs
push
mov
dec
imul
push
enter
test
push
insb
mov
cmp
cwtl
dec
loop
pop
cmpsb
mov
movsl
sbb
insl
cwtl
mov
leave
mov
shll
pop
xchg
popl
push
and
cmp
jmp
fisubrs
or
in
mov
insl
sbb
flds
sbb
call
inc
cmp
add
and
fisttps
jnp
mov
call
and
decb
jne
mov
insl
aaa
stos
or
push
xchg
jl
bound
loope
jge
mov
dec
in
or
pop
loopne
es
cmp
cmp
and
in
sbb
incl
fidivrl
xchg
sbb
mov
imul
les
jmp
ds
inc
push
inc
xor
add
and
int3
pusha
inc
and
ja
push
lcall
add
cmp
fcom
rorl
mov
cli
push
dec
mov
shr
dec
fcmovne
and
scas
and
push
xchg
adc
jp
sbb
sub
mov
push
pop
jbe
scas
faddl
outsb
cmp
ja
add
jl
mov
xchg
xchg
adc
add
aaa
or
push
int
cmc
test
mov
add
mov
xorl
popf
dec
mov
imulb
and
cmp
mov
cmpsb
imul
xor
loop
ret
popa
insl
scas
out
imul
adc
fisttps
lret
data16
cmp
hlt
jb
stc
sti
push
cmp
in
adc
jb
mov
mov
xchg
lret
icebp
out
idivb
in
jle
nop
sbb
lea
in
jg
cmpb
inc
scas
dec
rclb
aam
pop
mov
jno
dec
cmc
or
push
add
leave
xchg
jae
mov
xchg
xor
jmp
inc
arpl
lock
jae
dec
lret
cmpsl
sbbl
or
test
adc
jg
sbb
dec
sub
aam
insl
inc
cmp
xchg
call
cmp
mov
test
in
subl
pop
mov
pop
icebp
mov
inc
repz
xor
addr16
jp
out
and
and
pop
daa
add
nop
lret
xchg
pop
or
int
hlt
cmc
or
xor
add
cli
mov
cmp
mov
cld
sub
aas
roll
les
mov
icebp
dec
js
lahf
xchg
jae
fs
pop
cmpsb
push
adc
mov
jp
aaa
cmp
cmp
xor
mov
xor
stos
mov
pop
cmp
xor
js
fsubs
movsb
ja
imul
mov
je
lahf
shll
jnp,pt
jmp
sti
jbe
cmp
addl
fucomip
mov
out
cwtl
daa
add
push
enter
test
push
pop
xorl
sbb
xchg
data16
mov
cltd
jl
in
xchg
add
fucomip
out
xchg
sub
or
xchg
stos
sar
inc
sahf
lods
sub
xchg
test
rorl
push
pop
mov
pop
shll
push
push
add
sub
mov
fs
popf
adc
and
das
dec
outsb
push
fstps
outsl
fbld
loope
xor
cmp
xorl
jmp
shl
pop
mov
cmp
sbb
xchg
pop
adc
push
aam
pop
xor
push
stc
cld
gs
cli
test
mov
xor
bound
cmp
ficoml
scas
nop
inc
shrb
sar
sbbb
lds
ficomps
stos
sub
shrl
pop
pop
and
test
movsb
ja
hlt
mulb
popf
mov
mov
mov
pop
push
je
jnp
sbb
test
push
mov
inc
pop
rcll
into
stos
pusha
shrb
push
xchg
or
adc
pop
jb
mov
cmp
div
in
adcb
hlt
xchg
pop
mov
dec
add
dec
pop
ss
pop
dec
push
adc
test
out
cmpsb
sbb
pushf
add
cmpsl
sbb
adc
lock
cs
loop
cmp
cmpsl
mov
xor
js
dec
inc
jp
in
int
hlt
mov
add
and
movb
cwtl
sub
jl
jl
jge
clc
sahf
sahf
loop
pop
fsts
movsl
push
ljmp
mov
mov
mov
inc
mov
xor
inc
fwait
hlt
sbb
pop
call
mov
or
jbe
lret
cmp
mov
arpl
adc
negl
jp
inc
adc
sbb
xlat
clc
imul
or
outsl
pop
enter
out
push
cmpsb
dec
outsb
or
mov
mov
mov
lcall
dec
mov
xor
vaddps
sbb
or
loope
mov
mov
or
in
mov
icebp
out
addr16
dec
mov
adc
pop
cmc
mov
testb
mov
inc
call
pop
and
ja
loope
fs
adc
ret
cmp
mov
adc
pop
daa
and
ja
fwait
idivl
mov
pop
cmovns
inc
sahf
xchg
enter
popa
insl
jmp
stos
aam
movsb
and
mov
enter
and
sub
jae
lahf
adc
cld
mov
sub
repz
cmp
pop
and
incb
pop
or
dec
inc
pop
mov
mov
jp
pushl
das
pop
push
cmp
cmpsb
popaw
mov
xlat
int
sahf
push
iret
jg
lea
xor
push
loope
sub
push
add
les
rcl
mov
punpckhwd
ds
lret
jb
mov
inc
xor
stos
mov
xchg
jle
push
fxch
inc
imul
xor
cmpsl
inc
cwtl
test
xchg
jg
arpl
inc
mov
icebp
push
shlb
lret
pop
inc
push
xor
adc
inc
and
fidivl
xchg
repz
leave
jecxz
pop
xor
stos
loope
cs
adc
fnstcw
pop
sbb
push
outsb
jns
lahf
mov
in
int
fs
push
inc
pop
mov
sub
test
repnz
push
jno
iret
cmp
adc
enter
es
lcall
aaa
or
jmp
mov
pop
cmp
mov
mov
ljmp
inc
mov
adc
xchg
sub
cmpb
pop
bound
test
test
push
fsubp
xchg
hlt
lret
push
mov
or
ljmp
inc
imul
insl
sub
and
xor
xor
pop
pop
pop
std
data16
lahf
cmc
or
in
iret
sti
int3
mov
lods
add
mov
cli
sar
or
scas
frstor
iret
cmpsl
ja
push
add
dec
pop
sahf
fbstp
imul
dec
jecxz
add
mov
lods
sahf
adc
push
mov
popf
push
pop
push
movsb
jo
add
lcall
jne
gs
jno
xchg
popf
clc
and
sarl
int3
enter
push
cmp
shrl
mov
hlt
mov
push
dec
inc
adc
orb
cwtl
mov
pop
sub
aaa
popa
jnp
movsb
dec
and
pop
jl
mov
sahf
scas
push
pop
mov
cmp
pop
dec
push
call
cmp
test
mov
or
mov
mov
jmp
enter
lcall
push
mov
xchg
jmp
push
jo
lret
lret
test
mov
inc
jne
dec
add
mov
add
adc
or
inc
mov
insb
and
mov
push
pop
pop
push
jp
movsl
xor
mov
fidivs
mov
int3
ljmp
sub
arpl
lahf
imul
pop
pop
mov
fisubrs
jb
jmp
ljmp
xor
adc
pop
mov
ret
xchg
jae
divb
inc
adc
lahf
ret
cld
aad
fwait
jecxz
xor
rol
repnz
test
mov
add
sub
les
iret
shll
sub
mov
mov
push
sbb
xchg
adc
int
jb
add
xor
loope
or
out
adc
xchg
rolb
xorb
jl
mov
in
ret
cli
push
and
inc
movsl
and
add
push
adc
xchg
pusha
xchg
pop
shll
inc
xchg
in
sub
and
imull
jb
adc
roll
xchg
dec
xchg
jmp
mov
jmp
pop
push
dec
ret
cmpsb
decl
das
inc
jmp
fistpl
cmp
test
je
inc
pop
jno
fcoml
jmp
push
add
add
test
pop
into
add
lret
popf
test
into
mov
in
and
insb
push
mov
mov
pop
xchg
xchg
inc
clc
adc
cmp
fcoms
ret
repz
push
cmp
lods
mov
lret
add
add
push
inc
lcall
cmp
mov
std
jl
adc
popf
mov
cmp
bound
mov
js
ss
inc
mov
hlt
sub
shlb
jle
scas
mov
mulb
pop
in
fcom
mov
das
into
testb
sub
mov
sar
xchg
cmovp
cmp
jmp
mov
push
setge
std
imul
ss
imull
loopne
add
push
push
popl
mov
pop
and
adc
out
vmwrite
jp
push
fldl2t
call
add
sub
mov
pop
push
jmp
aad
jnp
in
push
add
jo
sarb
scas
mov
mov
loope
xchg
movsl
jnp
nop
mov
test
mov
inc
xchg
addr16
or
xlat
pop
in
cmpsl
pop
dec
mov
idivl
cmp
negl
std
adc
xchg
jno
stos
push
loope
or
cmp
incl
gs
jecxz
add
cmp
loopne
in
fdivp
stc
jbe
inc
repz
adc
cwtl
sub
add
or
into
imul
ret
in
mov
call
push
fwait
pop
or
in
int
outsl
ffreep
pop
ret
cwtl
mov
cmp
xlat
ss
icebp
jecxz
ja
cmp
pop
xor
outsb
dec
shlb
xchg
shlb
test
outsl
in
fwait
or
mov
les
sub
ds
add
test
test
lods
lret
hlt
ss
adc
inc
mov
insb
loopne
stos
ja
lods
sbb
lea
stc
outsb
fildl
and
test
xchg
shrl
cmc
cmp
pop
lds
call
push
dec
xchg
mov
sub
in
pushf
inc
jecxz
push
mov
adc
sub
lds
popa
add
mov
push
xchg
js
dec
push
cmp
cltd
mov
mov
outsl
sub
mov
in
xlat
fnstcw
mov
or
mov
jp
cmp
dec
xchg
stc
dec
jae
cmp
into
std
mov
cmp
jae
jbe
rcrb
or
jmp
shr
pop
int3
sbb
shrb
or
push
jb
ret
lahf
out
outsb
stos
lahf
push
mov
insb
xchg
shll
mov
mov
inc
rolb
cmp
test
rorl
jp
inc
mov
mov
ffreep
ljmp
push
cmp
jo
mov
jno
xchg
inc
das
addr16
dec
stos
sahf
popf
mov
outsl
das
mov
sbb
and
je
adc
imul
jnp
imul
cmp
jl
lock
out
inc
jg
aas
push
xor
mull
and
jae
xchg
in
gs
pop
out
btc
pop
pop
sub
jge
adc
js
cmc
inc
adc
sub
mov
push
fwait
lret
push
mov
stc
loop
pushf
das
pop
pop
lahf
ret
aad
add
xor
outsb
mov
add
out
aad
xchg
or
cmp
shl
dec
addb
add
ja
add
nop
and
adc
cltd
fcomp
sbb
dec
mov
add
cmp
jmp
popf
addl
sbb
sbb
jne
cmp
rol
cmpsl
and
and
outsb
adc
adc
sub
add
lret
ss
inc
sub
sarb
pop
inc
sbb
cmp
loopne
xchg
arpl
mov
in
mov
ficomps
nop
in
pop
lret
sub
cltd
xchg
pop
push
pusha
push
scas
push
daa
dec
pop
sbb
sub
repnz
inc
and
in
adc
mov
mov
jo
ja
or
out
lock
imul
call
js
mov
outsl
rorl
and
add
sub
cmpsl
scas
push
cmp
jp
cmpsl
add
or
ljmp
and
shll
push
aas
rcl
xlat
adc
jnp
test
cmovno
int3
ja
mov
jae
mov
sub
dec
mov
test
nop
fdivl
and
adc
or
stos
pop
xchg
orl
and
xchg
jns
aam
sub
shlb
dec
adc
ret
and
xchg
cld
ja
or
cmpsl
outsl
scas
sub
xchg
push
jg
cmp
push
test
mov
jge
adc
jbe
dec
or
dec
ret
add
outsb
push
dec
xchg
push
fnstenv
ljmp
hlt
sub
das
mov
pushf
lock
cmp
xchg
insb
shlb
repnz
out
loope
push
inc
dec
or
sahf
outsl
or
xchg
rcrb
shlb
out
aaa
mov
adc
add
sub
ret
or
inc
repz
pop
and
testb
scas
lea
add
pop
mov
std
call
loop
add
adc
mov
rorb
cmp
or
or
test
pop
ja
pop
push
mov
je
xor
jecxz
pop
cmp
arpl
mov
xor
ds
leave
js
out
mull
sarb
shrb
push
adc
push
dec
dec
inc
and
jae
scas
lret
lahf
push
repz
shlb
push
jl
imul
mov
inc
adc
insl
jnp
pop
shld
mov
jl
push
mov
inc
add
popa
sarl
mov
pop
iret
lahf
mov
jp
jmp
imul
int
push
and
push
jo
pop
aad
add
fimull
test
sbb
call
jle
aaa
loopne
addr16
ds
stos
out
xchg
sarb
pop
pop
test
out
sahf
je
lret
movb
andb
aas
sub
xchg
xor
jo
addb
xchg
pop
outsb
xor
aam
dec
ljmp
fadd
push
ss
inc
idivl
add
pop
jo
sbbb
bound
scas
xlat
sub
in
mov
rep
mov
les
pop
les
mov
out
into
stc
add
add
lret
sbb
rcrb
add
sub
pop
mov
lods
xchg
xorb
sbb
pop
inc
int
sub
test
jmp
cli
and
popa
je
add
sbb
mov
notb
aam
push
lods
inc
loope
adc
fnsave
cmp
sub
dec
scas
dec
push
cmp
inc
jae
loop
addr16
lods
imul
adc
loopne
aad
jns
mov
pushf
leave
movsb
xorl
or
shrl
push
xchg
xor
sbb
cmp
and
inc
mov
or
imul
mov
test
adc
or
int3
aas
test
and
daa
jo
jg
cwtl
sahf
aaa
repz
cmp
and
idivl
out
jle
mov
in
cs
ljmp
pop
dec
mov
test
fst
cwtl
push
add
jne
sbb
push
ss
xchg
mov
movsb
scas
mov
rol
aaa
push
mov
nop
aaa
jecxz
inc
arpl
sahf
popf
dec
lods
fstl
mull
mov
jnp
dec
sub
push
cwtl
mov
cld
adc
add
je
cmp
or
test
daa
loopne
out
push
repz
call
lcall
pushf
lds
rcrb
stos
sti
andb
xchg
pop
or
xchg
pop
push
pop
repz
aaa
pusha
xlat
jb
in
js
xchg
xor
shll
sbb
or
adc
add
push
xchg
stc
in
ss
pop
mov
cltd
out
rcr
cmpsb
cmp
f2xm1
push
jp
xchg
addr16
imul
dec
mov
inc
sub
sub
adc
xor
cmp
pop
ret
cmp
sbb
push
iret
and
pop
cltd
ret
incl
addr16
dec
ja
lds
mov
ss
sti
int3
jmp
jmp
pop
and
iret
mov
mov
int
mov
lods
pusha
add
arpl
jecxz
push
lea
pop
jg
imul
mov
ljmp
mov
sarb
rolb
pusha
mov
cmp
loope
mov
and
out
jne
pop
fstpl
xor
pop
rclb
mov
mov
outsb
jmp
ljmp
daa
mov
ds
imul
shr
jbe
cmp
cwtl
mov
loope
sbb
outsb
pop
jl
sub
adc
das
pop
ja
inc
mov
xchg
movsb
jo
push
out
ja
scas
cmc
lahf
faddl
lret
ljmp
mov
out
push
mulb
addr16
push
pop
insl
mov
dec
mov
pop
dec
cli
xchg
mov
stos
adc
lods
fdivr
stos
mov
divl
loopne
imul
les
sub
in
sbb
insl
mov
cli
cmp
bound
cmp
cltd
pushf
mov
clc
and
popaw
loope
popf
stos
arpl
sbb
test
bound
inc
addr16
out
aaa
pushf
jmp
loop
inc
inc
repnz
and
push
sub
cli
scas
xor
cmp
rorb
and
jl
dec
imul
repnz
test
sahf
and
enter
jno
mov
in
ljmp
andb
fxch
push
sahf
adc
lods
popf
sub
inc
push
int
jnp
aas
cwtl
inc
and
or
inc
js
sahf
adc
pop
push
dec
imul
or
out
jmp
arpl
jmp
pop
call
cmp
aam
mov
mov
je
clc
push
popf
push
or
adc
jmp
pop
andl
aas
in
fnstsw
xor
pop
add
or
cmpsb
jecxz
leave
push
and
cmp
mov
inc
fidivrs
gs
ja
mul
cltd
sahf
lea
mov
shl
repnz
sub
frstor
bound
outsb
lcall
pop
xlat
sbb
fldt
adc
jae
push
mov
in
xchg
notrack
mov
int
sub
mov
adc
jl
jbe
dec
fs
les
cmp
ret
mov
sbb
mov
cmp
dec
mov
mov
or
iret
mov
fsubr
call
mov
sbb
cmpsb
rol
xchg
push
int
popa
stos
lods
jb
fnstcw
push
das
hlt
popf
push
push
stos
xchg
mov
mov
les
jns
pushw
bound
push
andl
xor
pop
std
adc
fbld
xchg
push
aam
mov
cmp
xor
mov
push
stos
and
mov
sbb
fcoms
enter
pusha
les
xchg
in
mov
lock
pop
sbb
mov
jae
xchg
rcr
lret
les
inc
mov
fdiv
lods
add
std
jmp
bound
pushf
and
into
pop
jg
loopne
jg
daa
adc
pusha
mov
idivl
jb
push
into
rcrl
sbb
outsl
enter
xchg
dec
aam
sti
mov
xor
and
test
in
inc
and
fstps
pop
sbbb
jmp
cmc
push
pop
mov
fiaddl
out
mov
push
das
enter
push
jb
jbe
fnop
pop
pop
cmpb
xchg
dec
mov
fadd
xchg
fwait
pop
outsl
and
or
mov
cmp
aam
or
sbb
pop
sub
testl
mull
insl
mov
imulb
lods
iret
mov
inc
pop
inc
in
in
lcall
push
push
push
cltd
jbe
jmp
lahf
shll
data16
pop
fidivrl
pusha
add
xchg
lret
lods
jo
jmp
pop
adc
movsl
ja
lret
movsb
inc
pop
sbb
cmp
imul
or
xchg
aad
inc
int3
dec
or
mov
scas
mov
js
cltd
iret
fdivrs
test
inc
dec
out
pop
adc
jmp
pusha
jmp
je
ss
andl
cltd
loop
js
lret
inc
arpl
push
aaa
mov
jmp
enter
xorb
std
jg
enter
enter
and
test
pop
sub
lcall
cmp
xchg
dec
out
in
stos
mov
dec
sbb
pop
arpl
sub
fcomps
jle
jge
pushf
ret
and
xor
mov
push
cld
ljmp
scas
lret
sub
loopne
jecxz
jno,pn
inc
shlb
or
lret
sub
bound
and
xlat
rcl
pop
icebp
fsubs
and
push
divl
dec
mov
gs
sub
imul
insb
aaa
mov
stc
aam
and
stos
mov
js
pop
inc
test
std
add
dec
jle
movsb
jmp
dec
sahf
inc
bound
sarb
cmc
mov
lea
or
insl
mov
notb
ds
dec
cmp
aad
or
clc
in
mov
and
and
lock
fisubs
testb
mov
fsubrl
repz
xchg
cwtl
mov
mov
cltd
sti
out
fdivs
int3
cmp
mov
int3
mov
jae
mov
loopne
cmpsl
repz
scas
mov
xchg
in
push
nop
js
adc
push
lret
sbb
and
add
jl
addr16
sub
mov
pop
xchg
cmc
mov
cmp
std
in
int
lahf
iret
fsts
inc
clc
in
sarl
mov
rcr
or
mov
je
inc
mov
dec
scas
sbb
pop
sub
fucomip
shl
mov
addl
xchg
mov
sub
adc
fwait
push
fadd
inc
fdivrp
scas
cmpsb
inc
mov
adc
jp
cmp
sub
cmpsb
lods
bnd
cmpsb
call
push
xlat
test
incb
mov
hlt
out
mov
mov
xor
iret
cmp
adc
push
ljmp
jl
data16
fldcw
push
push
shlb
or
xor
loop
pop
xchg
or
ss
jb
xchg
and
pop
add
jle
cmpsl
fsubr
pop
xchg
jecxz
cmpsb
push
pop
xor
cld
cmp
jg
and
test
mov
cwtl
mov
hlt
js
roll
push
dec
aaa
push
push
insb
scas
and
mov
dec
aam
pop
cmp
test
sbb
cltd
or
daa
cld
mov
fstps
fstl
clc
aad
xchg
aaa
pop
adc
outsb
pop
cmpl
mov
mov
pop
stos
sub
mov
xor
xchg
fidivs
xor
adc
xor
xchg
ss
jo
inc
insb
notb
fistl
mov
pop
jge
stos
andl
xchg
mov
aas
movsb
lret
mov
pusha
mov
or
cmpsb
insl
push
loop,pt
cmp
or
xor
sub
pop
je
pop
dec
push
fstpl
fildll
cmova
inc
and
pusha
test
cmpsl
test
mov
in
sub
scas
or
mov
popa
icebp
test
ret
push
push
pop
and
mov
or
adc
out
dec
adc
and
jle
mov
test
mulb
inc
xor
cmp
xchg
and
mov
in
mov
in
in
imul
fmul
mov
mov
addr16
dec
push
jmp
push
popa
ret
test
in
lret
mov
out
cmpsl
push
insb
sub
call
and
into
les
hlt
ret
mov
push
outsb
push
dec
add
dec
in
aam
ja
aad
mov
shrb
lret
roll
sahf
movsb
jbe
add
push
pop
pop
pop
fwait
in
and
or
and
rclb
enter
cmp
push
xchg
xchg
movsl
lds
inc
push
adc
xchg
dec
pop
add
ljmp
xor
insb
cmp
sub
pop
xor
fwait
mov
cmp
mov
int
jb
ljmp
jp
jo
pop
daa
sbb
lret
add
inc
cmp
out
jge
dec
or
jge
jmp
adc
sub
push
sub
jg
add
mov
or
popa
cli
pusha
sub
dec
fnsave
std
out
mov
pop
pushf
insl
rolb
das
test
push
sub
add
into
dec
adc
lcall
into
xor
adc
sbb
jbe
test
aas
and
fs
imul
adc
push
jmp
addl
mov
push
sub
mov
mov
lahf
xor
mov
nop
inc
sub
sub
scas
mov
push
pusha
pop
aaa
mov
outsl
movsbl
add
jmp
sub
dec
sbb
into
xorl
jnp
subb
rcrl
scas
pop
and
stc
in
or
insl
test
lret
or
lcall
fwait
lock
aaa
or
dec
in
or
push
adc
inc
mov
mov
sbb
inc
test
and
mov
pop
test
xor
dec
or
push
pop
xorb
pop
xchg
jo
inc
mov
mov
ja
sbb
mov
cmp
bound
add
repz
pop
fdivl
ret
push
inc
jge
jbe
inc
sbb
orl
nop
mov
aad
aam
xchg
in
pusha
les
cmp
std
jecxz
add
enter
cmp
jnp
lret
fsubp
popa
imul
movsb
mov
add
rcrb
loope
inc
cmp
outsl
adcb
pop
repnz
int3
std
addl
sub
xchg
inc
sub
dec
pop
in
adc
movsl
sub
stc
std
scas
scas
cmp
sub
imul
scas
or
test
sub
mov
stos
adcl
jae
cmpsl
sub
insl
pop
outsl
pop
mov
push
push
mov
icebp
xchg
icebp
mov
out
out
shlb
add
ds
leave
rolb
mov
mov
push
stos
push
adc
mov
mov
sub
mov
leave
cmc
iret
aad
les
ds
mov
shll
jb
pop
imul
add
data16
in
icebp
aas
push
stos
sub
aaa
fcoms
sti
xor
xchg
incl
fyl2x
pop
mov
popf
push
fnsave
iret
mov
lret
lahf
ja
repnz
outsl
xorb
out
call
jmp
test
lahf
xchg
popf
dec
jae
inc
shl
cwtl
sub
fiadds
mov
aaa
sti
or
sbb
out
data16
insl
or
inc
jl
rcrl
fwait
mov
or
cmp
cmpsl
adc
div
inc
loop
in
mov
in
sbb
loopne
int3
cli
xor
out
gs
jmp
xchg
jo
test
sub
jp
inc
sti
pop
or
sahf
xchg
imul
roll
lahf
add
shl
outsb
sbb
fwait
inc
int
xor
dec
stos
aad
mov
test
shlb
popf
orl
imul
rorb
jns
out
sub
jmp
sbb
sbb
loope
aaa
popf
push
xchg
jno
or
bound
lahf
pop
sbb
cltd
out
push
jb
or
mov
push
pop
or
sbb
jecxz
sub
mov
xchg
mov
pop
xor
rorl
xor
sbb
aad
icebp
sbb
add
or
lret
or
xor
sub
xchg
into
inc
ja
push
mov
inc
jo
ds
fldenv
cli
outsb
push
xchg
push
or
xchg
mov
call
repz
call
adc
cmc
mov
stc
imul
jo
adc
jmp
pop
cld
sbb
pop
movsl
insl
mov
xchg
jp
pop
mov
in
sarb
ljmp
int
inc
mov
imul
sbb
mov
mov
aam
xor
aas
jne
dec
jle
cmp
add
sub
inc
in
cmc
insb
andl
lds
add
and
mov
ret
cli
mov
aas
enter
icebp
aaa
sub
frstor
add
outsb
jge
pop
xor
xchg
inc
add
pop
push
std
xchg
jae
push
xchg
and
shrl
aas
cmp
adc
sbb
lods
cmp
inc
and
loop
xor
ljmp
imul
mov
mov
sub
cmpsl
cmpb
pop
cmp
fsubrl
jmp
add
sbb
lea
lret
stos
jo
jp
inc
inc
jecxz
jg
jle
push
cmp
bound
pop
into
dec
jmp
pop
and
lcall
xchg
rorb
popf
xor
iret
loope
or
cmp
push
sbbl
stos
dec
mov
jecxz
or
repnz
mov
inc
inc
enter
mov
out
out
add
mov
jae
push
mov
or
or
gs
mov
nop
testl
stos
dec
lods
jle,pn
jno
inc
xchg
and
push
cli
dec
and
ret
jl
mov
cmpb
arpl
flds
push
xlat
inc
cld
repnz
aaa
bound
js
cwtl
adc
fwait
adc
inc
mov
jb
mov
in
sbb
mov
xor
sub
adc
bound
popa
or
ret
test
jg
jge
adc
fstpt
mov
dec
in
roll
incb
push
mov
mov
orl
data16
mov
pop
push
pop
pop
outsl
popl
adc
aas
mov
stos
das
sbb
jne
jnp
mov
in
lret
jo
sbb
adc
jl
push
cmp
incb
clc
mov
aas
ljmp
fisttpll
mov
movsb
in
enter
xor
movsl
cmp
pop
shll
pop
fs
cmp
pop
jecxz
dec
cmc
xchg
fs
inc
xlat
xor
test
mov
jb
mov
into
push
rcrb
mov
mov
pop
add
iret
ljmp
add
std
mov
repnz
lret
sub
daa
shl
ds
mov
xchg
jg
jno
ret
add
in
mov
cs
stos
xchg
sbb
adc
cli
mov
stos
sub
dec
adc
daa
mov
sbbl
imul
call
push
dec
fscale
pop
inc
push
mov
test
or
jmp
dec
cli
or
or
fildll
loopne
xchg
adc
mov
add
xchg
inc
and
add
mov
fwait
jmp
in
das
imull
pop
in
sbb
add
mov
add
leave
cs
lret
insl
dec
sbb
xor
lret
sahf
andb
xchg
subl
jnp
adc
rclb
xchg
xor
dec
jmp
sahf
mov
xchg
popa
out
test
push
repnz
mov
loop
push
sbb
sbb
test
sub
adc
inc
cmp
push
ja
mov
in
dec
inc
stos
in
lods
xchg
jge
les
push
das
jle
sub
in
add
je
push
push
pop
lahf
out
jb
imul
rcrl
push
sbb
fcomi
bswap
pop
jo
ds
sub
adc
in
clc
pop
mov
mov
fwait
loop
rcr
inc
inc
sub
xchg
xchg
sub
mov
cld
mov
jns
dec
pusha
jmp
xchg
fcoms
cmpsl
and
arpl
mov
sub
xchg
test
cwtl
imul
inc
push
mov
or
pop
mov
sbb
into
mov
mov
xor
jb
or
push
sbb
sbb
daa
lea
sti
pusha
mov
popa
and
mov
push
or
inc
ret
and
jg
sub
mov
shl
push
call
loop
push
inc
inc
movsl
test
mov
xchg
push
jp
jg
jb
pop
xor
scas
push
xchg
mov
xlat
and
insb
pop
ss
mov
and
fwait
sahf
cmp
inc
roll
xorb
mov
adc
ja
push
inc
add
mov
mov
sbb
sarb
popa
ljmp
call
lock
aaa
and
lea
push
imul
xor
sub
xor
cli
aaa
dec
mov
adc
je
push
and
jge
push
jns
rcl
ret
pop
ss
into
sahf
es
aas
std
cmp
movsb
xchg
pop
popa
jle
push
push
int3
jne
sbb
popf
cmpsb
fcoms
sub
jge
cmpl
mov
jecxz
push
mov
mov
outsb
cltd
test
sahf
mov
ficoms
out
xchg
shrl
sarl
pushl
cmc
mov
ret
loopne
pop
inc
adc
mov
jo
popa
inc
addr16
repnz
jbe
pop
repnz
inc
js
out
sub
sti
sbb
and
icebp
ds
leave
push
jo
arpl
fisttpll
adc
mov
jno
jno
sahf
dec
mov
rep
inc
sahf
add
jnp
cmp
cmp
adc
xor
dec
mov
ret
notl
fistpll
jne
fsubl
cmpsb
push
mov
insb
or
or
sub
cmp
rcl
dec
inc
dec
jnp
sub
mov
int
cmc
adc
aas
shll
mov
xor
mov
fisubs
or
push
outsl
fsubrl
js
mov
dec
jmp
push
popa
pop
mov
cwtl
mov
outsl
ja
arpl
mov
gs
sbb
ds
add
mov
dec
inc
idivb
jne
mov
push
cwtl
sbb
leave
mov
pop
idivl
stos
movsl
jecxz
out
pop
icebp
mov
pop
push
xchg
xchg
xorb
dec
cmp
mov
mov
aam
xor
and
notb
mov
rcrl
xchg
jge
divl
inc
mov
rcrl
or
fiaddl
push
jbe
fisubrl
pop
aad
jb
jmp
out
ficoms
lcall
dec
addl
icebp
lods
pop
cmp
and
and
xchg
dec
cmpsb
sbbl
or
test
aad
or
pop
fisttpll
nop
push
add
hlt
in
shlb
pop
aas
ror
test
jnp
mov
pop
xor
js
pop
mov
in
adcl
pop
inc
in
add
cmp
push
mov
movsl
inc
dec
pusha
mov
dec
mov
mov
cmpsl
scas
fsubrs
dec
loopne
mov
cmp
mov
jecxz
out
adc
xor
dec
test
incb
jmp
int
push
or
adcb
xor
stc
or
pop
addr16
mov
mov
lds
in
inc
cwtl
mov
movsb
out
pop
inc
out
insb
xorl
jmp
dec
push
mov
popf
push
adcl
xchg
clc
outsb
fdivl
jne
outsl
insb
sbb
loop
ds
adc
pop
mov
shlb
pushf
jge
mov
mov
int3
and
stc
clc
movsb
ret
dec
jnp
inc
imul
jns
sbb
mov
inc
cmp
adc
inc
add
popl
test
push
push
or
out
mov
mov
sahf
lahf
jnp
sbb
xchg
test
scas
cltd
sub
cmp
into
push
jge
xchg
mov
lds
pop
das
sti
insl
xor
push
sbb
sub
add
out
mov
xchg
shrl
fs
jb
insl
add
pop
dec
test
add
cmp
add
sub
adc
aaa
nop
outsb
jb
insl
scas
loopne
and
nop
mov
es
daa
xchg
dec
mov
movsb
inc
les
push
test
pop
inc
jb
adc
mov
cld
imul
push
imul
fprem
mov
pop
pop
fbld
popa
lcall
rcrl
outsb
fisubs
adc
cmpsl
leave
push
mov
jo
mov
fiaddl
icebp
repnz
pop
jecxz
xchg
jg
mov
clc
or
imul
and
out
aam
stos
sbb
push
jp
inc
push
sarl
call
imulb
frstor
cmc
sbb
ror
lods
xor
adc
test
inc
add
addr16
add
jg
dec
mov
pop
mov
addr16
lahf
and
ret
xchg
sub
outsl
pop
adc
sbb
stos
mov
pop
loopne
mov
rol
push
pop
lock
sub
pop
pushf
and
cmpsb
and
xchg
xchg
js
dec
mov
mov
aaa
lret
iret
aam
jnp
add
mov
test
add
nop
mov
test
fwait
sbb
xchg
mov
cltd
sbb
add
jmp
jmp
push
nop
push
std
mov
sub
xor
test
sbb
sub
lds
fcoms
fmuls
sbb
adc
hlt
pop
pushf
jne
push
aad
jnp
sbb
adc
cwtl
loope
shlb
cmp
or
mov
cmp
sbb
jnp
sub
sbb
out
in
stos
add
pushf
or
sbb
adc
push
cwtl
int3
mov
mov
sti
xor
loop
add
jbe
mov
and
sbb
lret
fisubrs
mov
fldenv
aas
movsl
cmp
adc
dec
pop
les
inc
mov
jns
inc
inc
add
cmp
sub
dec
jle
pop
cmpsb
loop
ja
orb
push
mov
popf
adc
cmc
dec
lea
xor
jg
pop
push
add
stos
rorb
cmc
inc
testb
cld
movsb
dec
insl
cmp
mov
mov
lret
mov
dec
dec
push
lods
in
xchg
insb
add
jecxz
out
inc
lret
adc
loop
pop
mov
xchg
out
xor
mov
lcall
mov
inc
fs
jnp
or
outsb
pop
mov
lahf
push
and
sbb
fmull
imul
movsb
cmp
dec
scas
mov
cmp
xlat
xchg
adcl
mov
testl
jno
xlat
lods
jnp
cmpsb
lret
call
ss
push
inc
imul
inc
xchg
fwait
adc
outsl
out
out
bound
or
loope
dec
mov
andb
dec
push
push
xor
movsb
enter
mov
dec
punpckhbw
out
aas
pop
orl
cmp
mov
dec
xchg
stos
cmpsl
xor
into
fstpt
sar
enter
pop
jnp
je
subl
lret
dec
xchg
inc
dec
rcll
xor
fwait
dec
out
sbb
adc
insl
push
nop
loop
mov
test
out
sub
outsb
mov
sarl
push
inc
fwait
sarl
sub
inc
stc
push
int3
sahf
test
sub
insb
mov
fcoml
pop
jns
sub
aad
sti
adc
cmp
ret
out
fidivs
mov
or
jmp
insb
add
sbb
mov
mov
lods
aam
push
fld
repnz
inc
call
js
xlat
push
popf
xchg
mov
mov
out
fsubrl
cmp
sahf
and
cli
jae
mov
xchg
push
mov
arpl
stos
repnz
or
jg
clc
mov
stc
das
xor
jge
in
mov
jmp
fmuls
imul
nop
inc
sub
xchg
adc
xchg
inc
mov
leave
xchg
leave
xchg
dec
dec
jns
inc
adc
sub
mov
lahf
inc
pop
pop
loope
mov
xor
mov
xchg
rorl
xchg
imul
out
imul
xchg
test
sub
pop
and
test
jmp
mov
ss
inc
pushf
pop
sbb
and
sbb
cmp
xchg
xor
or
jle
pop
jns
cmp
jb
in
test
psllq
into
sahf
out
les
jo
cli
pop
aaa
sbb
jbe
mov
daa
jl
daa
mov
fnstsw
outsl
rcll
ret
out
jnp
mov
push
push
lods
adc
adc
sub
ret
pusha
popa
insl
ret
jb
repnz
jne
lods
scas
inc
sbb
adc
lahf
push
inc
dec
ffreep
loope
jne
bsf
loopne
in
push
push
xchg
repz
push
sbb
inc
inc
testl
or
push
lods
and
add
mov
pop
add
or
push
dec
daa
cmp
xchg
out
mov
mov
mov
jnp
pop
out
jns
mov
add
sbb
sub
cmpsl
repnz
xor
mov
jp
out
sub
xor
mov
aam
push
scas
out
enter
cmp
adc
sti
jmp
movsl
int3
lea
xor
scas
movsl
or
out
jns
add
data16
pop
test
repnz
push
stc
xchg
mov
cli
sub
outsl
xor
cli
push
pop
dec
cmp
mov
xor
arpl
mov
mov
add
adc
sbb
cs
push
aad
pop
add
sbb
push
cmc
sti
addb
ficompl
out
xchg
or
enter
fldcw
repnz
jne
iret
mov
outsb
repz
repz
mov
sahf
xor
jno
jbe
negb
push
int
mov
mov
lods
jnp
xchg
push
sbb
xchg
mov
std
inc
rorb
ljmp
ljmp
aas
jbe
mov
call
jmp
sub
jo
jge
adc
mov
add
and
sahf
cmp
data16
mov
in
or
fstl
in
in
cmpsb
inc
xor
jp
arpl
shll
pop
xchg
scas
sbb
cmp
das
xor
gs
outsb
jle
rcrb
lds
mov
xor
pop
mov
pop
cmpsb
bound
mov
shl
neg
je
mov
and
pop
lcall
ficomps
call
cli
xor
pusha
cmp
scas
xor
xor
push
outsb
clc
sub
divl
out
mov
test
mov
pushf
inc
jns
lods
push
daa
loope
mov
xor
jno
out
cltd
test
stc
hlt
iret
cmp
shl
mov
jecxz
inc
cmpl
popf
iret
pop
jo
repz
dec
dec
fs
lcall
lock
cmc
loop
leave
jecxz
jnp
or
jg
push
enter
das
and
add
jmp
mov
sub
ss
addr16
insl
cli
pop
in
mov
push
jge
add
loopne
jl
icebp
add
sub
push
mov
cwtl
dec
cli
inc
jp
mov
or
dec
jmp
pushf
loope
sbb
mov
lahf
pop
jmp
jmp
pop
mov
sub
popa
imul
lock
fisubs
fwait
cld
jo
dec
mov
jbe
mov
push
out
bound
pop
lcall
je
dec
cmpsl
arpl
dec
mov
lcall
dec
mov
jmp
cltd
jns
ss
sub
ret
sbb
jne
push
ds
js
fstpl
xor
push
je
rolb
pop
je
std
or
sub
movsl
xor
dec
dec
ss
insl
loope
out
cmpsl
or
pop
cmp
jg
xor
cltd
repnz
sbb
mov
jno
lret
dec
insb
xchg
xchg
push
repnz
mov
lds
mov
call
mov
cld
jne
xor
loop
push
push
push
fildll
adc
mov
ljmp
scas
pop
pop
enter
inc
jp
mov
sbb
xchg
mov
dec
je
mov
enter
mov
imul
pop
pushf
jno
mov
fs
jp
ja
xchg
cs
icebp
jl
jae
lock
jb
lcall
push
cmp
push
test
pusha
ja
push
mov
mov
sti
leave
jae
loope
fsubs
cmp
sti
hlt
push
mov
xchg
push
pop
sub
ljmp
or
jmp
inc
nop
jae
ret
jecxz
jns
ds
cmpsl
adc
loopne
gs
leave
adc
shlb
mov
jae
xor
rcrl
lods
jge
lods
xor
and
dec
movsb
lds
mov
pop
nop
xchg
xor
xor
push
push
shrl
outsl
ja
sub
jne
sub
xorb
addr16
addr16
add
cmp
xchg
adc
sbb
fiaddl
mov
shll
or
imul
lock
mov
rorb
cmpsl
pusha
mov
lock
jp
mov
in
ja
mov
sub
scas
clc
pop
mov
jo
gs
pop
push
push
lods
ror
push
add
mov
movsb
rorb
movsl
jo
or
lock
loop
jge
dec
sub
sbb
and
sub
mov
xchg
hlt
add
movsb
adc
lock
bound
mov
iret
pop
stos
xor
mov
bound
push
sbb
xchg
xchg
adc
mov
adc
jne
adc
imull
in
stc
cmc
cmp
shl
arpl
mov
ds
xor
icebp
je
lods
cmpsb
and
dec
icebp
fs
std
fldenv
xchg
sbb
pop
inc
push
outsb
jbe
ret
and
clc
loopne
repz
cwtl
xchg
arpl
aaa
pop
xor
pusha
out
je
cmp
stc
leave
fnstenv
lahf
in
fsts
cld
cmp
add
fistpll
daa
mov
pusha
enter
int
pop
arpl
pop
int3
test
fnstcw
aas
inc
cmp
clc
test
stos
xchg
test
movsb
fcmovbe
pop
ret
cld
shlb
mov
push
xor
dec
repz
imul
movsb
imul
sbb
lret
pushf
xchg
cmp
jae
sahf
imul
lea
lret
das
sbbl
fisubl
int3
and
inc
push
xchg
mov
jns
mov
rol
mov
or
test
mov
ret
mov
pushf
stos
and
negl
and
loope
push
mov
sbb
sti
movsb
repnz
sub
icebp
pop
loope
jb
xchg
jno
sub
ja
das
push
or
jmp
inc
xor
popf
cmpb
sbb
je
pop
mov
mov
mov
insb
sub
dec
jmp
push
test
push
jmp
cmpsb
xor
xchg
rorl
std
in
push
in
xchg
movsl
and
mov
cs
push
mov
sbb
scas
jp
push
jle
and
mov
loope
lret
rorl
jb
add
daa
cmpsl
dec
mov
jo
lods
imul
mov
pop
mov
add
xchg
and
cmp
jo
callw
out
into
push
fnstsw
in
mov
sub
call
xchg
jmp
push
ljmp
mov
inc
and
pop
test
add
pop
mov
out
fldl
loop
aas
xor
aas
test
shl
ja
and
dec
mov
push
jb
inc
test
repz
sub
aad
pop
cmp
fsubrp
aas
imul
jns
adc
mov
testl
dec
adc
pusha
cmp
cltd
adc
push
dec
jl
mov
ds
sbb
mov
enter
cmc
lock
loopne
shlb
imulb
add
push
rcrl
out
mov
pop
mov
dec
push
sbb
lods
xor
pushf
fstps
shll
out
adc
push
es
mov
ss
dec
cmpsb
or
xor
add
fstps
xchg
xchg
in
xor
mov
mov
xchg
mov
xor
mov
es
inc
leave
gs
adc
add
push
in
push
xchg
xor
adc
xchg
into
adc
and
fimull
push
lret
pop
jae
cmp
xor
sub
jmp
sub
sbb
pusha
ja
mov
pop
cmp
scas
xor
stos
das
fisttpll
daa
outsb
mov
push
mov
xor
imull
dec
cmc
fdivrl
stos
push
das
pop
ret
jns
sbb
lret
sbb
fsts
test
adc
xchg
mov
pop
mov
cmp
cmp
cwtl
jb
jmp
xor
fidivrs
das
das
add
pop
hlt
rorb
jae
mov
in
out
mov
pop
xor
cwtl
cs
cli
aaa
xor
int3
gs
add
cwtl
xchg
dec
aaa
cmpsw
push
repnz
fdivl
aad
pop
test
mov
sbb
sti
cmp
movsb
pusha
scas
sub
sub
jb
jg
sbbl
int
dec
xchg
stc
push
mov
stos
test
enter
inc
lret
jno
into
pop
je
lahf
movsl
mov
fldcw
pop
cmp
jb
xor
cmp
sub
xor
and
fwait
xchg
push
popf
int3
fistps
int
pop
insl
cltd
adc
sbb
ds
and
xor
popf
ds
stos
cmc
shrl
les
mov
je
jp,pn
aas
xor
in
push
add
mov
push
ret
in
xchg
fcomi
push
jle
push
inc
sbb
dec
mov
dec
je
movsb
scas
mov
mov
out
es
xor
cltd
jle,pt
mov
loope
lret
mov
or
hlt
out
test
add
mov
shl
jnp
das
test
sahf
mov
add
data16
pop
fs
mov
inc
jne
cmp
push
jl
fstl
push
fsubr
jbe
jne
mov
loopne
aam
icebp
stos
mov
xlat
lcall
push
xor
xchg
cmp
push
and
adc
in
cwtl
mov
mov
enter
imul
or
cmp
push
and
xchg
arpl
add
in
dec
adc
inc
and
pop
mov
or
insl
ljmp
push
fldenv
test
mov
ss
fistpl
adc
sbb
js
rorl
sti
add
push
xchg
sahf
aam
cmp
idivl
mov
imul
and
push
nop
test
nop
test
loope
sub
fcmovb
loope
sbbl
mov
cmp
dec
add
push
inc
jo
cld
test
in
add
movaps
or
inc
int
push
mov
pop
ror
jecxz
mov
pop
lret
add
sub
loopne
cmpl
imul
jnp
cmp
stos
js
stos
lds
shrd
mov
scas
dec
pop
dec
inc
fildl
jg
mov
sub
je
leave
imul
mov
flds
xchg
inc
sub
pop
adc
fidivs
push
push
lods
stos
mov
jp
rcr
out
push
jp
movsl
push
jge
pusha
mov
scas
mov
repz
cld
pop
adc
lahf
push
scas
rcrb
or
xor
std
jmp
push
inc
cltd
cld
mov
push
adc
jmp
mov
pop
notl
or
dec
sub
nop
mov
pop
and
lret
into
fistps
je
push
jnp
stos
jo
jb
cli
adc
gs
cmp
insb
loop
cmc
pop
fildl
fcompl
gs
sbb
scas
adc
test
adc
jno
xor
sbb
mov
fadds
cmc
mov
push
mov
adcl
or
sub
push
fsts
mov
push
xor
loopne
pop
clc
inc
jb
clc
fsubrs
cmp
mov
sub
aad
cmc
outsl
xchg
dec
out
js
negl
fildll
pop
xor
inc
push
xchg
and
cmpsb
xor
mov
push
movsb
stos
xor
push
push
and
sbb
movsb
outsb
stos
les
mov
jmp
repz
loopne
js
clc
das
pop
and
push
data16
leave
mov
loopne
inc
xor
pop
aam
subb
aad
das
dec
out
fwait
adc
mov
sub
fdivl
lret
and
sub
cmp
fldl
out
idivl
fs
xchg
push
shlb
dec
sbb
mov
imulb
loope
mul
je
lret
push
movsl
jno
and
movsb
mov
andb
sub
pop
dec
mov
mov
mov
pop
sahf
cltd
push
pop
xlat
fsubs
pop
jae
inc
repz
repz
dec
dec
xchg
fsubs
adc
xchg
pop
movsb
sbb
mov
stos
pop
adc
sbb
push
incb
xlat
cmp
outsb
sbb
xor
jnp
insb
inc
add
mov
add
adc
lea
adc
xorl
push
jp
mov
inc
add
stc
jp
leave
cmpl
inc
cld
fbld
and
pop
cmp
sbb
dec
cmp
push
inc
stos
mov
cmp
pop
push
jo
mov
or
popf
out
das
pushf
mov
mov
add
pavgw
adc
or
inc
jnp
lea
ret
lods
aaa
cmp
lcall
in
notb
fs
jle
cmp
xchg
pop
inc
inc
xchg
mov
fstl
add
pop
push
pusha
test
leave
add
fs
and
xchg
mov
imul
and
aad
fucomip
cltd
sar
push
jp
shl
sbb
sbb
neg
push
setae
out
aad
cmpsb
pusha
popf
cmpsl
add
dec
jne
push
add
sbb
idivb
xchg
lret
lea
int3
dec
xlat
insl
shlb
js
shl
mov
cmp
ja
pop
ss
or
mov
xor
add
dec
in
xchg
mov
adc
in
sbb
in
mov
add
jne
inc
jp
rorl
out
aad
pop
ret
inc
add
pusha
sub
push
dec
cmp
movsb
scas
into
pop
into
mov
lret
or
fmull
into
rol
subb
enter
and
into
xchg
jo
idivb
xor
lret
lods
lds
lods
sbb
push
add
out
neg
pop
loope
shll
mov
sub
xchg
pop
aas
loopne
cmc
ja
aaa
cmp
xchg
mov
outsl
and
mov
pop
hlt
and
mov
aam
sbb
sbb
push
jno
dec
lcall
movsl
inc
pop
sbb
cwtl
int3
mov
mov
add
lds
push
jo
mov
roll
push
ljmp
pusha
pop
clc
jo
pop
cmp
xchg
push
push
or
inc
leave
sbb
ljmp
pop
inc
leave
les
pop
sub
cmp
and
sub
or
repz
pop
ret
outsl
lea
das
sbb
nop
mov
xchg
sub
in
aaa
mov
das
ja
push
out
sbb
cli
xor
xchg
dec
inc
sarl
dec
stos
push
into
cmp
shl
mov
cmp
addb
das
and
jle
data16
fcomi
or
xor
inc
pop
jb
push
pop
cli
lcall
and
mov
stc
adc
dec
sbb
cwtl
add
pop
inc
push
xchg
iret
popf
jg
mov
fsubs
jae
jbe
mov
cmp
dec
arpl
std
pop
push
ja
f2xm1
push
push
jp
jg
cwtl
js
xchg
mov
mov
mov
adc
ror
movsl
mov
into
sti
xor
push
jb
mov
outsl
je
pusha
cli
lock
fs
sbb
pop
jp
pop
jbe
jb
sbb
insb
scas
mov
arpl
add
inc
hlt
pop
cmp
and
and
adc
add
push
push
mov
cwtl
popa
push
fistl
or
inc
sbb
xchg
cs
push
mov
arpl
fcmovnu
push
push
or
adc
in
movsl
xchg
push
enter
imul
cltd
in
les
lods
push
mov
push
push
lcall
push
add
mov
or
push
push
and
loop
test
shlb
xor
int3
pop
push
fdivrp
movsl
pop
sbb
lea
mov
mov
into
test
dec
push
lcall
xchg
jle
push
cld
adc
sub
add
in
icebp
movsb
lcall
mov
pop
ret
sbb
aam
mov
mov
inc
sbb
jp
dec
addr16
ffreep
push
pop
xchg
ret
out
adc
mov
pop
push
push
jge
dec
shlb
jl
lock
inc
mov
mov
and
or
lds
xchg
dec
nop
loope
and
or
adc
or
sub
addr16
inc
fisubrl
adc
das
inc
leave
fs
mov
add
lret
sahf
cmp
cltd
dec
xchg
orl
mov
andb
cwtl
adc
scas
xchg
fistpll
xlat
or
inc
cmp
into
daa
outsl
shrl
mov
mov
or
dec
jbe
or
push
sbb
outsb
negl
nop
sub
andl
test
sbb
imul
insl
mov
cmp
es
dec
outsb
or
in
jbe
leave
inc
ljmp
jo
fucomip
lcall
jmp
pop
adc
sub
int
xor
mov
pop
cmc
fsts
mov
ds
mov
mov
dec
test
enter
lock
xchg
add
ret
arpl
sub
sbb
insb
arpl
jge
loop
jnp
xor
xchg
rol
arpl
shll
cmpsl
xchg
sbb
inc
jg
sbb
out
mov
inc
dec
or
sub
fs
test
sbb
loope
xchg
cli
shll
hlt
insb
iret
lds
dec
push
int3
ja
in
mov
add
ret
loop
cltd
outsl
pop
sub
icebp
cmp
mov
adcb
out
push
fisttpll
mov
push
xor
test
push
xchg
rolb
in
pop
sbb
mov
pop
adcl
pop
std
xorb
xor
jb
mov
scas
idivb
jp
jo
jno
daa
data16
cmc
test
mov
jae
inc
sbb
or
cs
mov
mov
popf
and
sti
jge
dec
cmpsl
push
push
enter
dec
lea
mov
inc
les
in
and
mov
repz
or
mov
mov
push
into
fs
cmp
adc
jb
pusha
pushf
lret
push
in
sbb
push
fdivs
jnp
loopne
jle
test
pop
movsb
xor
js
call
xchg
insl
pop
stc
cmp
fmuls
scas
fxch
adcb
inc
sub
mov
bound
outsb
or
pop
cwtl
and
sbb
icebp
out
jns
xlat
imul
test
and
and
ss
repz
fists
jo
mov
jne
mov
adc
es
sbb
inc
mov
mov
add
outsb
jne,pn
pop
gs
sbb
jne
enter
add
lods
push
sub
push
nop
jecxz
add
das
and
in
bound
pop
push
lret
aam
dec
lret
sbb
xlat
pop
fdivrl
push
cli
push
imul
mov
in
mov
fs
cmpb
iret
sbb
push
dec
pusha
mov
mov
movsl
aaa
repnz
rcll
add
pushf
xor
mov
mov
jb
or
adc
lea
sub
mov
pop
repz
xor
mov
notl
mov
lds
sbb
das
mov
cli
push
pop
in
pusha
xor
inc
and
jmp
add
pushf
jl
and
mov
xor
jo
loopne
sub
ret
lret
and
lods
mov
loop
or
arpl
repz
int
xlat
testl
insb
pop
jo
add
jbe
fisubrl
popf
js
das
xor
cmp
mov
ss
lock
xchg
in
mov
into
pushf
test
in
push
sub
js
mov
push
jle
add
and
xchg
cmp
push
cmpsl
cmp
sbb
lock
out
pop
cwtl
xor
scas
and
add
imul
cmpsl
sbb
cs
add
lods
dec
mov
dec
das
pop
dec
sbb
xor
movsl
push
lret
add
clc
inc
scas
inc
out
jbe
jge
jnp
test
popa
scas
dec
in
insl
in
mov
popa
jle
mov
bound
movsl
jnp
mov
dec
cmp
sbb
ljmp
lret
cmp
jg
dec
push
pop
mov
rcl
sub
jne
cltd
jns
sbb
test
sbb
push
mov
in
xor
jmp
addr16
add
dec
push
rcl
jecxz
stos
ds
shl
mov
adc
cmp
push
push
add
das
popl
aad
push
jns
and
pop
xchg
push
xor
popa
xchg
xchg
xchg
aaa
and
inc
in
icebp
inc
je
incl
stos
sbb
mov
sahf
mov
mov
xchg
popf
push
and
jae
xchg
clc
jl
ficompl
cmpsl
mov
inc
mov
repnz
popa
xor
fsubp
ret
inc
sub
mov
nop
out
adc
ss
fisttpl
test
sub
xor
mov
lock
je
loopne
aam
popa
cmpsl
sbb
sahf
cmpsl
dec
notl
out
lock
xchg
jmp
dec
test
imul
cli
popa
movsl
test
mov
adc
pop
ljmp
nop
cmpsb
lret
clc
loopne
jecxz
mov
outsl
mov
xchg
xchg
repz
ret
testb
fimuls
push
pop
dec
or
repz
xor
test
in
xchg
xchg
ficompl
add
fs
imul
daa
cltd
push
inc
mov
xchg
in
loope
cmc
loopne
fimuls
std
rcrb
daa
ja
bound
push
mov
decb
sub
andl
adc
das
xlat
nop
shlb
xor
lret
stos
push
movsb
test
aaa
fiadds
and
push
jo
pop
dec
cld
pop
push
sbb
inc
xor
repnz
lret
scas
mull
fistpll
xchg
adcb
inc
mov
cmpsb
jns
sub
or
sti
add
sbb
push
fadds
aas
dec
shlb
add
pushf
and
inc
add
lret
loop
fnstcw
or
stc
sub
push
iret
dec
pushf
adc
pop
jle
sbb
mov
outsb
adc
loop
jb
cmp
push
pusha
sub
push
fwait
pop
outsb
mov
push
arpl
repz
insl
rorb
sub
mov
ja
mov
fisttpll
xchg
mov
loop
and
daa
lock
mov
cmp
dec
dec
imul
cmp
xchg
push
jecxz
bnd
mov
jae
mull
push
inc
mov
cmp
cs
sti
dec
pop
push
insb
dec
pop
aam
sbb
push
jg
sub
pop
scas
mov
xor
mov
inc
add
cmp
out
out
xchg
and
imul
in
inc
push
xlat
mov
mov
jnp
sbb
inc
or
fcmovb
test
xchg
mov
int
inc
imul
push
dec
or
int
xchg
aad
cmpsb
push
mov
mov
test
test
mov
dec
pusha
lods
push
aad
mov
popa
push
mov
enter
sarl
std
mov
gs
mov
ss
push
pushl
in
rcrb
adc
xchg
sbb
negb
iret
fs
push
fdivp
test
dec
in
mov
mov
ja
inc
xchg
mov
or
in
dec
cmpsb
imul
mov
out
lock
and
inc
adc
push
adc
and
fldt
outsb
jbe
dec
aad
movl
inc
sub
cmp
cs
hlt
jne
cli
inc
leave
inc
vmovupd
cmp
rcl
mov
xor
cmp
rol
cmpl
ret
out
das
adc
mov
xor
clc
pushf
mov
imulb
pop
push
lods
test
iret
sarl
test
xchg
adc
pushl
add
dec
cltd
sbb
pop
cmp
mov
roll
xchg
sbbl
jo
sti
sub
std
push
mov
add
cmpsl
clc
sbb
push
lret
sub
push
mov
in
mov
inc
cmp
out
mov
popf
push
imul
adc
mov
mov
mov
nop
xchg
pop
inc
movsl
out
or
ret
add
mov
mov
mov
js
pop
lods
popa
popf
pcmpgtw
sbb
xlat
pop
jmp
xchg
sub
jnp
or
test
push
shll
and
aam
jo
dec
push
push
cmp
mov
add
sub
lods
lahf
and
inc
xchg
inc
fnstcw
shrl
jg
data16
stc
incb
test
xchg
sahf
filds
inc
pusha
cs
aad
jns
jnp
jmp
mov
cli
rol
int
jne
mov
add
xor
lea
cld
cs
out
push
cs
push
jp
and
mov
push
subb
das
iret
add
repz
xchg
sub
jmp
mov
cmp
pop
sahf
xchg
jl
aaa
and
jg
mov
out
loop
lret
in
sarl
cmp
inc
xchg
sub
hlt
sub
fistpll
fnsave
pusha
mov
xchg
xlat
in
scas
cmc
pop
mov
pusha
scas
loope
lock
push
shr
pop
inc
or
xchg
sub
push
les
mov
repnz
in
imul
adc
xor
inc
lcall
jl
sub
cmc
cli
sub
inc
lcall
or
stc
xchg
idivl
sbb
adc
push
sub
loope
sti
or
in
sbb
dec
idivb
dec
cmp
scas
add
mov
shlb
mov
jle
fildll
push
scas
xchg
aam
mov
ficomps
in
dec
mov
out
rorl
rcrb
outsl
js,pt
ret
push
hlt
dec
out
idivl
sarb
or
lds
dec
xlat
adc
adc
push
mov
aas
push
sub
inc
pop
lahf
idivb
dec
xchg
lahf
arpl
enter
dec
es
out
push
ss
insb
lock
cmp
lret
adc
stos
mov
sub
stc
std
popa
jecxz
mov
jb
mov
fs
filds
sbb
or
call
andl
sbb
push
push
fdivrl
cmp
add
std
test
xchg
out
cmpsb
lret
add
stc
icebp
sarl
insl
inc
mov
pop
push
hlt
rcl
mov
mov
fiaddl
rcrl
adc
sub
jmp
sbb
dec
dec
mov
xor
add
cltd
lods
hlt
in
dec
fcompl
flds
inc
lods
testb
fnstsw
repz
ljmp
rcrb
pop
popf
mov
cmp
outsb
ffree
std
arpl
cli
fstl
jp
imul
sbb
sub
dec
cmp
rcrl
mov
dec
mov
ljmp
adc
xor
cltd
xchg
push
imul
xorl
lcall
mov
pop
add
xchg
dec
jle
movsl
and
out
outsl
pop
cmp
fbstp
lock
ja
add
out
jbe
pop
lahf
in
adcl
ja
mov
pop
mov
popa
aam
leave
stos
test
int3
or
mov
shll
push
pushf
sbb
push
daa
and
mov
jge
mov
sub
or
lcall
cmp
xor
xchg
inc
jae
sbb
sbb
cmp
loopne
sbb
jno,pn
jnp
pop
nop
adc
fsubs
xor
xchg
cmp
daa
push
xor
out
cmc
sarb
mov
inc
mov
xchg
and
xchg
xor
mov
inc
push
sub
mov
lods
push
adc
jmp
or
hlt
out
int
test
xlat
ljmp
push
cmp
shlb
aaa
lds
mov
enter
adc
notb
gs
cmp
sbb
push
std
jnp
int
mov
fildll
pop
scas
in
dec
xor
mov
jmp
pusha
or
dec
outsb
push
ret
mov
jns
lock
push
mov
pop
add
adc
decl
jne
pop
rolb
push
lahf
enter
ss
inc
add
xchg
push
sti
pusha
xchg
rcll
in
mov
jge
cmp
inc
add
pop
or
pop
xor
addr16
int
adc
aaa
imul
imul
cmp
adc
jns
sahf
cmp
push
push
fs
mov
cmp
sub
or
inc
dec
mov
dec
mov
repz
dec
sub
mov
mov
fisubrs
cmpsl
call
enter
test
out
rclb
dec
repnz
fistpll
xor
push
rorb
sbb
movsb
ljmp
pop
loopne
out
inc
jle
jnp
inc
sub
mov
jl
repnz
mov
aam
lds
adc
mov
jne
out
mov
mov
test
js
out
idivb
adc
bound
cmp
lods
in
mov
add
popf
jmp
push
xchg
xlat
and
fiaddl
sub
xorb
pop
aam
sub
mov
push
sub
cli
out
push
bound
stos
fsts
cmp
jge
shlb
out
ss
push
xchg
xor
dec
test
mov
mov
mov
out
sbb
xchg
hlt
mov
mov
dec
or
into
or
cld
sub
imul
jmp
push
mov
cmp
pop
adc
or
pop
lret
cmpsb
push
adc
mov
repnz
in
into
movsl
aaa
lahf
xor
rclb
aam
pop
xchg
out
sbb
push
repz
fstpt
or
ds
xchg
shrl
mov
in
push
stos
aam
xchg
mov
clc
xchg
xor
sets
in
adc
scas
mov
test
add
mov
fildll
jmp
fsubr
insb
loop
ss
lahf
lock
cmp
imul
sub
iret
fistpl
and
nop
outsl
test
lahf
bound
inc
out
movsl
stos
out
out
aaa
pop
in
stos
outsb
sbb
out
xor
fisubrs
push
xchg
repnz
cwtl
lret
lahf
fisubl
sbb
jne
pop
sub
ja,pt
aam
add
ss
mov
push
or
and
nop
punpckhbw
cli
add
add
cmp
mov
call
test
pop
or
stos
mov
jo
sbb
outsb
mov
jne
lcall
dec
jno
sbb
repz
xchg
dec
mov
outsl
inc
xchg
pop
mov
xor
jae
iret
in
adc
add
dec
mov
and
loopne
or
fwait
lahf
pop
inc
icebp
xorl
stc
push
lods
mov
inc
out
dec
loop
jne
arpl
mov
daa
popa
das
mov
rcll
inc
ljmp
in
repz
fisubs
fidivrs
mov
inc
mov
adc
dec
ror
orb
inc
mov
add
cmp
xor
loopne
ss
lret
ret
arpl
dec
loopne
mov
lods
mov
movsl
cmp
mov
mov
ljmp
push
adc
daa
dec
inc
sbb
jle
andl
or
adc
addb
jg
lcall
cmp
outsb
mov
in
and
out
arpl
dec
or
pop
jo
inc
adc
int3
xchg
scas
push
cwtl
andl
scas
lahf
pusha
in
cmova
fsubrs
mov
int3
add
sbb
push
dec
js
adc
xor
loope
sub
imul
mov
imul
jg
fs
repz
test
test
pop
insb
scas
mov
test
mov
repnz
div
aaa
and
outsb
dec
in
pop
arpl
pop
pushf
mov
inc
lret
stos
inc
repz
div
icebp
rorl
out
or
xor
mov
cltd
fscale
inc
movsb
or
sub
sbb
js
push
mov
xorl
stos
xor
shl
sahf
or
push
stos
das
add
jmp
mov
mov
adc
adc
mov
mull
push
ljmp
adc
imul
int
das
imul
in
scas
movsl
sarb
dec
out
out
loop
jne
mov
add
sub
icebp
shlb
sbb
jae
rcr
jnp
dec
mov
mov
push
mov
or
dec
inc
call
pop
sbb
stos
ret
cmp
cmpl
fists
test
push
mov
sbb
push
mov
or
notb
mov
test
lods
iret
pushf
mov
pop
dec
adc
mov
add
jbe
add
lods
jl
inc
stos
or
sub
ljmp
cmc
dec
and
jge
mov
cltd
jge
push
out
ljmp
ret
jg
mov
addr16
mov
add
cmpsb
roll
orb
ljmp
cmp
mov
test
loope
sbb
ret
cmc
data16
lea
out
xchg
cmpsl
gs
add
lret
inc
sbb
inc
add
xor
pop
or
sbb
mov
pop
call
std
mov
mov
popa
add
adc
movb
dec
xor
out
sub
loopne
sbb
scas
addl
and
outsb
in
jg
inc
push
dec
push
sahf
push
out
pop
sahf
add
mov
mov
shlb
test
push
fdivrl
mov
call
getsec
mov
xchg
outsb
mov
inc
loopne
sbb
pop
cmpl
test
push
dec
imul
test
pushf
sbb
jbe
pop
or
out
rcll
fimull
or
pop
xchg
mov
push
inc
jne
push
jl
out
add
in
mov
out
outsb
adc
ja
xor
push
data16
jo
add
sub
lret
fstpl
inc
push
cli
or
mulb
mov
push
or
push
lods
and
pop
inc
sarl
retw
test
in
push
loop
test
or
adc
int
cmp
nop
inc
fists
push
in
cmpsl
aas
cs
sub
sbb
jnp
bound
xchg
add
sarb
inc
jle
push
popa
ja
or
fucomp
xor
cs
lret
sbb
sub
inc
sahf
mov
outsl
addl
repnz
pop
lods
and
dec
or
and
pop
push
inc
and
dec
mov
sub
mov
clc
fwait
sub
in
arpl
out
and
shlb
cs
cmpsb
roll
jno
xor
fldl
ret
in
popa
insb
rclb
jmp
cmp
int
rcll
mov
ss
fwait
rcr
add
xor
ret
jb
mov
fwait
dec
fs
into
movsl
lcall
sub
push
lret
push
pop
push
adc
dec
sarl
pop
sbb
push
dec
inc
adc
mov
sub
inc
or
sbb
out
jb
roll
push
cmp
fstps
aad
push
jle
test
or
mov
mov
adc
sub
repz
rorb
rcll
or
jp
and
push
push
sbb
pop
fdivr
and
rorl
pushf
bound
jnp
shlb
mov
lock
or
cld
and
sub
sarb
data16
cmpsl
fistl
sub
adc
push
pop
adc
xchg
or
mov
mov
ljmp
mov
jnp
add
test
push
inc
mov
icebp
xchg
adc
xchg
jno
mov
sub
jmp
insb
push
lods
cld
xor
jle
sti
xchg
in
daa
gs
jl
jo
int
sub
repz
outsb
nop
xchg
xor
dec
aaa
cmp
cmp
mov
jno
into
mov
enter
aam
dec
lret
movsl
imul
or
lahf
add
ja
lea
xchg
ret
mov
lea
push
push
inc
int
push
lcall
int
adc
mov
cmp
popf
dec
push
shl
insb
push
xchg
add
lahf
scas
mov
mov
sahf
je
mov
sbbb
xchg
call
xchg
rorb
imul
sbb
mov
mov
test
inc
cmp
sbbl
mov
jo
jo
pop
addl
jo
bound
dec
lods
add
add
xor
aad
add
sub
sub
dec
adc
inc
dec
imulb
mov
addr16
insb
int3
sbb
fsts
or
rcl
std
shrl
enter
test
and
data16
fdivr
je
call
xor
pusha
lcall
cltd
inc
lock
mov
adc
stc
sbb
repnz
push
filds
aad
jno
test
jmp
push
jge
dec
lcall
xchg
and
arpl
in
imul
xchg
cmp
lods
out
or
aaa
pop
bound
iret
adc
pop
mov
jnp
xor
leave
dec
mov
sub
repnz
mov
nop
scas
mov
stos
movsl
xor
mov
fdivl
mov
mov
mov
daa
lahf
cmpsb
ffreep
loop
jno
cmc
and
aas
std
icebp
xlat
cmpsb
or
movsb
iret
xorb
mov
stc
out
nop
adc
jb
pop
mov
das
int
pop
xchg
inc
lcall
pop
sub
xor
aaa
pop
or
or
cmpl
push
into
mov
cmp
or
push
shrb
inc
mov
mov
and
cltd
add
xor
inc
xor
sbb
and
repz
adc
lock
pop
or
test
imul
xchg
bound
mov
sti
fincstp
sbb
lea
imul
fcmove
data16
leave
jmp
pop
sub
iret
xor
push
lret
xor
fldt
fistpl
add
sub
mov
stos
push
icebp
push
imul
nop
inc
popl
xchg
add
les
dec
js
and
cmpsl
sub
shlb
jecxz
jl
in
cmp
jle
mov
pop
rcll
pop
cmp
rorb
pop
inc
jnp
into
sub
popf
mov
aaa
ret
sahf
xchg
inc
sbb
insb
imul
fisubs
rcr
and
rorl
or
mov
or
add
push
or
ret
aaa
stc
mov
dec
sti
pop
adc
cmc
cmpl
cmp
mov
or
pop
and
mov
push
cmp
loop
lods
xor
addb
inc
xchg
jns
pop
fnstsw
movsb
imul
adc
mov
cwtl
mov
pop
int3
sahf
loop
sahf
jns
xor
and
xchg
mov
mov
mov
cmpsb
xchg
dec
cs
test
aas
jb
rcrl
cmp
pop
jmp
sub
ds
inc
das
rorl
jns
push
pusha
jno
outsb
xchg
fsubrp
pop
adc
les
push
lods
push
mov
popf
rclb
ret
nop
sub
jae
pusha
and
fdivrp
push
jle
lcall
push
and
cmp
cld
jnp,pt
jbe
jno
fisttpll
push
jge
push
lret
scas
cmc
sahf
add
in
out
hlt
stc
add
xchg
insb
popa
push
push
adc
mov
pop
adc
jg
xchg
pop
loopne
in
leave
inc
xchg
addr16
jmp
mov
pop
sub
mov
fwait
int
sbb
cmp
push
lea
fsubs
ret
cmp
push
pop
jl
sbb
test
fsubs
mov
jle
fdiv
mov
test
out
adc
push
pop
mov
and
out
push
sbb
sub
orl
cltd
add
mov
outsl
push
dec
jl
sub
ret
fdivr
xchg
testl
cmp
mov
popf
add
cmp
mov
js
ds
mov
js
outsb
stos
mov
outsl
push
xor
cld
mov
pop
sbb
sbb
xchg
pop
fisubs
or
jbe
mov
jnp
mov
dec
xor
movsb
jae
push
popa
or
shl
sbb
into
fld
ret
arpl
scas
cmp
xor
pop
dec
jge
mov
leave
xchg
ljmp
ret
aas
lret
push
aas
movsl
inc
sub
repnz
sarb
out
ss
cld
or
mov
sbb
cwtl
shrb
lcall
shl
sbb
pop
lahf
pop
sub
and
xchg
ret
mov
pop
pop
jb
sbb
mov
sbb
mov
pop
pop
mov
dec
add
push
adc
les
inc
cli
test
adc
push
push
cld
lret
and
mov
ds
lret
data16
cs
add
rol
ds
popa
inc
adc
addb
ret
stos
push
pop
ljmp
insl
lods
and
cmp
pop
movsb
jmp
mov
hlt
icebp
mov
pop
fs
sub
mov
std
ja
xor
movsb
jg
jecxz
cli
fcmovb
inc
call
or
push
out
cmc
jmp
test
sbb
imul
or
insl
cmp
push
or
xchg
subl
push
sub
dec
pop
add
ds
rorl
mov
push
jge
xchg
enter
xchg
jnp
call
or
or
push
mov
push
mov
dec
cmpsb
scas
leave
cli
js
pop
or
pop
daa
fs
subb
cmp
adc
sub
mov
adc
sbb
das
ja
jns
mov
jecxz
aam
xchg
mov
jp
cmovp
cli
adc
and
call
cs
adc
dec
sub
stc
pop
lods
cmp
test
cmp
push
test
cmp
cltd
or
sub
mov
fimuls
or
or
flds
pop
repnz
inc
pop
pusha
jae
je
and
sub
repnz
fwait
ja
cmovne
pop
pop
cwtl
insl
int3
rorb
dec
and
mov
push
sub
push
in
jae
add
push
test
sub
in
shlb
push
adc
in
pop
sbb
out
fpatan
dec
bound
mov
fcmovu
movsb
mov
jge
shll
pop
pop
aas
mov
jns
push
jecxz
fwait
xchg
daa
and
int3
icebp
sahf
sbb
icebp
mov
lahf
add
test
sbb
mov
mov
leave
lock
sub
mov
xor
jecxz
ss
fs
dec
mov
add
mov
outsb
and
cmp
push
clc
ja
fiaddl
sahf
inc
inc
stos
arpl
dec
out
sbb
cmp
cwtl
sbb
cmp
pop
addl
test
pusha
rcl
jo
sub
sub
lret
or
int
adc
cld
dec
fsubl
pushf
inc
out
pop
add
push
mov
lods
mov
push
imul
dec
ja
scas
scas
lock
lahf
fwait
ljmp
je
xor
int
mov
xor
bound
jecxz
out
inc
fsqrt
call
gs
cmpsb
push
xchg
xor
das
jne
cwtl
lcall
clc
ljmp
mov
addr16
stos
hlt
jge
fiadds
cmp
push
add
test
push
stos
inc
xlat
sub
dec
pop
daa
test
sub
fldt
stc
mov
sub
loop
int3
inc
sub
sbb
bound
sbb
xor
push
lock
rorl
jns
ficoml
lods
lods
cmpsb
sbb
clc
cmp
fsubrs
jle
dec
lock
mov
fwait
les
imul
sbb
mov
sub
ret
js
adc
mov
dec
pop
jl
or
adc
pop
cli
test
mov
pop
mov
pop
pop
and
insb
sbb
mov
lea
mov
jl
arpl
sub
outsl
pop
aam
daa
clc
mov
or
rorl
std
pop
mov
cmp
push
sbb
dec
inc
loope
pop
inc
popf
fsubrp
jbe
mov
popf
dec
movsl
cwtl
add
data16
adcb
cmp
sbb
jbe
adc
mov
dec
jp
push
cmpsl
mov
rolb
aad
das
int3
pop
outsb
xchg
or
cli
in
jge
mov
sub
ds
js
fstps
jne
arpl
or
frstor
inc
fsubrl
stos
scas
lea
aas
cmp
out
mov
inc
mov
test
lock
dec
xchg
cltd
push
push
lcall
push
jmp
mov
cli
jnp
cmp
packsswb
jl
movsl
aas
arpl
lret
lahf
lret
insl
adc
inc
dec
ret
add
enter
andl
out
sub
sub
lds
jbe
mov
sti
mov
idivb
push
cmpsb
push
rcl
in
xor
fmul
sbb
loopne
fdivp
pop
dec
add
jne
push
cld
sub
cwtl
push
mov
into
loop
clc
cmpsb
faddl
cmp
fimuls
pop
push
xor
mov
dec
mov
cltd
movsb
inc
call
es
xchg
enter
mov
xor
clc
or
push
and
jno
arpl
push
fsts
xor
aad
sahf
test
jge
xchg
movsl
ds
test
cmp
xchg
xchg
jo
mov
dec
sub
imul
add
mov
aas
pop
mov
sub
mov
ret
lds
inc
add
jno
pop
in
xor
incb
add
nop
push
fimuls
les
out
int
push
xor
jne
icebp
sti
mov
jge
test
cmpsb
or
cmp
lcall
jb
xlat
push
mov
add
sub
mov
out
jl
dec
std
test
cmp
mov
outsl
push
cmpb
lcall
xchg
pusha
out
and
lock
leave
rcll
imulb
idivb
ljmp
movsb
jp
loope
stos
lret
jne
into
ret
test
inc
out
inc
std
sbb
add
xor
or
mov
rclb
jg
loopne
mov
jae
sub
mov
jle
stc
adc
test
xchg
sbb
scas
push
fidivl
int3
sbb
insb
adc
inc
mov
cmp
pop
aaa
in
repz
stc
ret
cmp
aas
or
mov
xchg
adc
pop
xchg
adc
iret
or
in
xor
mov
pushl
mov
pop
dec
arpl
aaa
out
mov
inc
mov
cmc
mov
xor
xor
les
iret
sub
movsb
ds
dec
std
jnp
jmp
sub
mov
sbb
adc
dec
push
push
mov
inc
cli
sbb
pop
lret
icebp
mov
jb
in
jbe
pusha
and
mov
mov
std
jbe
xchg
xchg
mov
mov
push
mov
js
or
out
rcrl
cmp
or
jge
cmp
lcall
lcall
fsubs
aam
mov
aad
mov
loopne
jno
cmp
mov
mov
call
popf
stc
or
or
iret
fisubrl
xlat
std
fbstp
xchg
sub
and
push
push
jae
pop
lret
roll
dec
movsb
clc
daa
and
push
ret
adc
push
addr16
inc
xchg
jl
shlb
aam
inc
mov
imul
loope
aad
xchg
jmp
ss
mov
gs
test
lret
and
mov
mov
mov
xor
and
into
xor
loopne
pushf
and
xor
icebp
add
add
cwtl
sbb
in
cmp
cwtl
xchg
xchg
dec
jnp
inc
mov
jno
push
pop
or
push
out
cmp
pmuludq
sub
mov
lcall
xchg
sbb
fcom
daa
lds
pop
lods
dec
dec
adc
and
fmull
mov
std
lods
adc
jnp
pop
lret
cld
fnstenv
sub
pushf
adc
xor
jge
adc
mov
cld
sub
xchg
mov
int3
int3
imull
fsubrl
jg
andb
test
dec
js
mov
cmp
icebp
std
rcr
sbb
pop
ja
pop
jnp
fisubrl
iret
outsl
mov
inc
and
push
pop
fwait
pop
out
mov
fs
mov
dec
pop
xchg
imul
mov
gs
add
pop
lods
bound
mov
aam
lods
lahf
int
dec
mov
imul
orb
cmc
out
ret
loopne
test
adcl
and
call
insl
mov
mov
sbb
movb
dec
xchg
loope
mov
lds
cmp
sub
or
cmpsb
xor
add
sbbb
inc
mov
add
add
dec
xchg
cmp
inc
adc
xchg
icebp
fdivrl
insb
jns
xchg
pop
out
sbb
push
cs
sahf
add
add
cmp
movsb
test
dec
stc
adc
sub
mov
cltd
pop
clc
push
sbb
je
imul
or
sbbl
mov
movsl
rcl
mov
mov
nop
mov
inc
sbb
xchg
dec
cmc
js
jo
adc
cmp
mov
cmpsb
cli
or
add
dec
mov
cwtl
add
in
rcrl
pop
rcr
sti
dec
mov
or
mov
in
mov
dec
mov
push
inc
xor
in
dec
subl
mov
push
test
jge
or
mov
sbb
dec
movsb
popf
push
lahf
cmpsl
pushf
frstor
in
stc
xor
jmp
mov
faddl
ds
int
cld
mov
adc
outsb
lret
scas
jge
outsl
mov
test
adc
bound
sub
fmuls
cltd
popa
loop
xchg
or
pop
or
xor
push
in
lret
sti
clc
cmp
sbb
dec
fnstcw
mov
popa
push
inc
fwait
std
sbb
sub
mov
cmp
dec
ljmp
outsl
outsl
pop
pop
imul
mov
adc
fistps
or
push
repnz
sbb
jmp
adc
sub
jbe
pusha
sbb
fistl
shrl
into
std
push
out
push
xchg
mov
and
lock
cmp
push
and
pop
testb
mov
pop
dec
sbb
ljmp
and
xor
xchg
mov
push
pop
inc
push
shld
das
cmp
jmp
fidivs
cmp
push
je
sub
outsb
dec
jmp
aas
inc
dec
lock
and
out
cmpsw
loopne
pop
add
lods
es
ret
jecxz
int
dec
push
push
aad
xchg
jnp
mov
sbb
add
sti
je
call
xchg
pusha
stos
stos
push
sahf
mov
jbe
inc
shll
mov
jae
mov
push
xchg
popa
stc
inc
mov
stc
push
mov
inc
dec
lret
dec
pop
imul
jl
dec
scas
mov
gs
jp
jne
aaa
push
push
arpl
ljmp
xor
lret
insb
lock
adc
sbb
jg
lret
xor
or
xchg
ds
xor
ror
pushf
mov
fistps
shrb
mov
fsubrl
lods
sbb
adc
push
dec
and
push
insb
dec
jb
jmp
test
add
push
mov
lahf
mov
and
sbb
mov
dec
addb
jmp
adc
cmp
adc
adc
enter
and
outsb
push
mov
gs
xor
mov
jl
ljmp
xchg
hlt
popf
inc
and
inc
lahf
mov
pushf
rorl
push
repnz
fcmovnb
and
add
mov
cmpsb
daa
lock
cs
fidivl
rcrb
gs
push
and
cmpb
lods
pop
inc
aad
test
cmp
push
dec
ret
jge
ljmp
jbe
pop
xchg
clc
arpl
mov
push
in
lret
inc
test
cwtl
aas
outsb
mov
adc
mov
in
pop
scas
add
xchg
adc
cmp
aad
xchg
arpl
ret
loop
mov
mov
pushf
adc
daa
mov
iret
ds
ret
stos
lret
icebp
xor
nop
mov
pop
enter
or
ret
pop
and
mov
daa
je
orb
filds
xchg
adcl
cmpsb
lahf
test
sbb
sub
mov
rcl
loopne
jae
push
pop
inc
inc
xchg
lret
pop
jp
sti
je
add
mov
or
push
jb
mov
scas
andb
adc
cmpsl
imul
push
adc
cmp
lret
subl
sub
ja
mov
xor
jmp
test
lahf
stc
sbb
sub
cmp
or
add
mov
test
pop
mov
mov
cwtl
call
pop
int
adc
mov
lods
mov
xchg
not
add
push
fsubrl
xchg
or
out
fbld
enter
jl
push
xchg
and
push
pop
and
inc
cmpsl
push
sub
shlb
cmp
in
mov
push
arpl
lea
test
icebp
lret
mov
jecxz
sbb
and
pop
push
adc
xor
lods
cmp
mul
xchg
sub
jmp
pusha
pop
dec
inc
out
sub
ljmp
cmp
jno
xor
jge
sbb
in
shlb
mov
mov
stos
pop
sbb
or
xchg
popa
shl
xchg
subl
in
pop
xchg
mov
test
addr16
and
cmp
clc
loop
sub
xor
mov
les
inc
out
mov
lods
add
sbb
pop
popa
movsw
call
dec
and
xchg
lods
stos
dec
popa
ljmp
jo
mov
cmp
push
pop
push
mov
add
enter
jle
ljmp
pop
mov
sbb
cmp
cmp
ja
inc
lods
arpl
test
lahf
mov
xor
andl
add
lods
fistpll
add
mov
enter
cmp
aam
inc
inc
fcmovb
push
mov
out
sub
sbb
test
mov
sbb
cli
push
fnstenv
xchg
cmp
leave
outsl
testb
cmc
adc
jg
ficompl
sub
sbb
xor
test
test
test
call
mov
jecxz
cmp
jmp
ret
and
imul
mov
sbbl
jg
or
mov
not
ja
dec
push
gs
mulb
cmp
loope
dec
jle
int
xchg
mov
out
in
adc
sub
jp
arpl
out
repnz
imul
sbb
jne
les
imul
jmp
xor
fiadds
scas
daa
mov
mov
cli
pushf
mov
jge
inc
test
es
ds
push
cltd
mov
jnp
mov
test
mov
mov
cmp
fs
in
xchg
add
add
movsb
adc
clc
outsb
loop
jle
mov
inc
cli
and
mov
ret
js
adc
int
xor
sbb
pop
out
cmpsb
dec
add
cmp
mov
xchg
push
sub
lret
aas
fdivl
add
insl
stos
inc
jo
push
dec
pushf
aad
lcall
mov
push
jl
inc
or
inc
jp
or
repnz
sarl
pusha
jnp
loop
cli
cmp
imul
xchg
outsl
inc
js
add
mov
fstpl
inc
cmp
and
addb
out
loopne
aad
xor
push
shl
xor
push
dec
lret
mov
sbb
mov
or
loop
pop
out
fisubrs
jns
sbb
cmp
nop
pusha
xor
xchg
dec
outsb
dec
jne
or
arpl
ret
dec
jb
cmc
inc
push
dec
movsl
mov
shrl
popa
cmpsl
adc
lcall
ret
outsl
mov
jle
and
xchg
popa
inc
xor
iret
jp
pusha
jp
in
test
jno
pop
add
or
movsb
and
mov
cs
mov
mov
sub
cwtl
repz
jns
test
js
dec
inc
int
inc
dec
push
mov
scas
int3
outsb
fs
jge
test
hlt
pop
add
sub
pop
jns
dec
push
lods
sbb
scas
loop
lock
fisttps
stc
adc
sub
xchg
cld
mov
mov
or
mov
lds
gs
push
cld
ljmp
outsl
mov
mov
pop
rcrb
subb
and
add
push
test
cmpsl
push
inc
loop
std
sub
insb
mov
mov
fisttpll
inc
mov
lods
mov
mov
xchg
and
cmpsb
bound
test
jno
loopne
jmp
jge
pop
mov
adc
mov
daa
outsl
pushf
cld
outsb
cwtl
clc
xlat
or
push
popa
push
and
xchg
std
loope
out
clc
loope
cmp
or
add
mov
mov
fs
scas
cmp
pop
sbb
and
aad
mov
or
sahf
cli
pop
test
ja
cwtl
out
xchg
push
inc
mov
pop
xorl
leave
addps
jne
daa
xchg
iret
and
mov
adc
xor
sbb
jmp
ss
je
out
daa
fcmovnb
or
dec
jns
cwtl
sahf
daa
jecxz
test
sbb
mov
arpl
or
cmp
cwtl
fcmovu
jnp
jl
test
mov
push
mov
mov
mov
cmp
hlt
jbe
pop
test
inc
dec
cmp
mov
nop
add
sbbl
aas
push
aas
jo
std
and
js
xchg
leave
mov
jge
sahf
cmp
lods
push
and
pop
outsb
add
loope
mov
adc
fisttps
inc
jge
add
movsb
cltd
dec
or
pop
sub
nop
inc
sahf
xchg
scas
push
push
insl
inc
enter
bound
adc
cmp
outsl
inc
in
dec
hlt
iret
insb
pop
popa
in
push
outsb
jb
xlat
decb
mov
repz
xor
stos
daa
inc
addr16
mov
mov
imul
in
pop
outsl
jne
nop
into
lds
dec
jne
xchg
jp
gs
lock
imul
and
or
in
sub
rolb
ljmp
arpl
cmpsb
mov
sbb
aas
cmp
cmpsb
push
popa
addr16
addr16
jne
or
scas
stos
or
adc
in
mov
pop
cmpsl
add
lds
mov
imul
mov
dec
inc
daa
cmp
inc
inc
or
fwait
xor
and
xchg
out
mov
xor
jle
fldcw
imul
jmp
mov
mov
mov
pop
mov
lds
pop
in
shl
sti
sub
outsl
imul
push
jp
push
sub
fcmovnu
or
push
insl
mov
sti
inc
push
or
push
cs
daa
jge
sub
mov
inc
nop
cmp
popa
xchg
sbb
mov
mov
stc
imul
test
sub
jp
xchg
xor
scas
flds
cmp
inc
pop
add
movsl
mov
leave
xor
pop
and
hlt
orb
adc
mov
jge
scas
and
fld
jge
push
repz
push
popf
sub
ret
xlat
jle
mov
ja
adc
add
push
xor
adc
mov
movsl
xchg
jns
lods
mulb
dec
cld
sti
jne,pn
sub
push
cld
sub
push
int
inc
jg
xchg
dec
in
push
jcxz
sbb
outsb
jb
push
mov
jmp
out
inc
lds
dec
ja
loop
das
mov
mov
mov
xor
in
icebp
movsl
ficompl
out
lods
mov
xor
fidivs
cmpsb
adcl
das
sub
outsb
jae
lods
jo
mov
pop
pop
dec
add
mov
or
ss
hlt
xchg
rorb
mov
into
mov
inc
mov
push
imul
push
pop
stc
cwtl
mov
lahf
jmp
leave
std
cmc
loopne
daa
into
xchg
push
inc
mov
adc
push
outsl
mov
orb
and
imul
pop
fldt
test
push
je
rolb
adc
or
mov
mov
push
insl
fistpll
mov
popf
ret
xchg
jns
cmp
fnstcw
xchg
inc
and
test
ror
aaa
faddl
inc
adc
push
hlt
fidivl
daa
sbb
insl
loop
add
decl
xor
stos
inc
and
inc
pop
pop
mov
subl
pop
fstpl
push
xor
sti
add
test
cmpl
push
adc
icebp
dec
mov
nop
das
pop
xchg
mov
imul
faddl
in
arpl
push
in
clc
pop
pushf
stos
and
mov
inc
insb
insl
and
mov
jmp
pop
inc
int3
jmp
push
dec
adc
push
shll
adc
mov
gs
push
cmp
pop
std
cld
dec
jmp
loope
nop
decl
test
cs
popa
dec
popw
cwtl
or
mov
pop
loopne
mov
lock
jp
xchg
push
and
in
aad
and
enter
push
cmp
mov
xchg
mov
fdivl
leave
mov
mov
mov
rdpmc
xchg
fidivl
icebp
pushf
mov
or
add
add
cmp
cli
jp
js
jmp
jp
in
in
xor
jae
mov
xchg
outsb
imul
jg
jp
repz
xchg
mov
push
in
mov
pushf
cmp
dec
dec
mov
adc
loopne
mov
js
ficompl
stos
fldt
adcl
shrl
filds
dec
sbb
push
mov
xor
mov
jne
js
ja
jg
sub
sbb
cli
jl
jnp
movsb
add
or
dec
nop
push
dec
mov
ficoml
cs
pop
or
in
mov
xor
xchg
addr16
xor
sub
pusha
into
and
rcrl
mov
add
sbb
js
movsb
orb
lods
mov
lock
xchg
ljmp
xor
out
clc
insl
cmc
push
rol
stc
dec
sbb
mov
or
daa
xor
movsb
xor
dec
cmpsb
lds
popf
sub
dec
xor
and
leave
cmpsb
les
push
fwait
inc
mov
insl
cli
dec
or
movsb
cmpl
in
test
and
and
push
mov
sbb
test
and
mov
push
fdivs
cmp
cmp
addr16
push
cld
lods
and
shrb
dec
imul
adc
sti
jmp
mov
mov
mov
jne
dec
adc
xchg
sbb
mov
cld
jae
xor
adc
dec
dec
filds
cs
jmp
push
mov
jecxz
cmp
mov
dec
jne
out
shlb
cmp
in
bound
rcrb
jno
sarl
ret
dec
mov
sbb
mov
jns
leave
shl
lahf
insl
mov
jo
inc
adc
sti
lods
es
aas
or
add
imul
lods
test
mov
clc
scas
lret
or
outsl
lods
inc
int
pop
lods
jb
sub
push
fbstp
and
lret
punpckhdq
dec
sti
lods
mov
sbb
cs
lods
fldl
dec
add
xchg
pop
or
adc
jp
push
inc
mov
jne
dec
cmp
stc
push
dec
pop
jp
in
daa
cmp
cli
mov
out
rcl
imul
stos
addr16
daa
aas
mov
push
or
inc
cltd
in
mov
cmpsl
xor
test
jb
adc
inc
pushf
push
sub
ret
loop
inc
or
into
push
push
sbb
mov
cs
inc
outsb
inc
and
mov
add
or
mov
or
popf
inc
clc
rcll
ret
test
jge
das
scas
inc
inc
inc
jnp
shrb
clc
or
bound
xor
cmp
int3
add
or
cmp
xor
loopne
and
adc
rcl
cmp
sub
push
mov
fs
jo
in
jp
loopne
mov
gs
xor
and
sub
icebp
push
ljmp
in
cmp
fisubrs
lahf
xlat
cmp
pop
subl
push
fmul
dec
mov
cwtl
lcall
lock
test
jns
push
test
xchg
lcall
sub
mov
hlt
sahf
out
in
call
incb
cli
sbb
movsl
jb
jecxz
push
xor
pop
xchg
cmp
mov
bound
mov
std
xlat
xchg
sbb
jl
shlb
shl
jae
dec
sub
repnz
dec
sbb
imul
test
pop
in
loope
pop
test
pop
adc
ret
lods
bound
dec
cli
outsl
push
push
sbb
cmp
add
cmp
sub
mov
stc
push
xor
pushf
aas
pushf
xchg
adc
out
sbb
jb
mov
stos
orl
inc
repnz
push
dec
das
mov
adcb
jo
daa
ret
or
aam
xor
lea
xchg
inc
scas
xchg
jnp
clc
xchg
int
xor
xor
test
lahf
mov
es
cs
popf
roll
outsl
arpl
xor
bound
xor
jnp
jl
push
xorb
aam
cld
sub
add
cmp
xchg
push
mov
push
or
test
jmp
loope
lea
ljmp
jl
inc
dec
push
mov
mov
xchg
lea
fwait
mov
jmp
inc
aas
repnz
and
test
fnstcw
inc
cmp
ret
xchg
loopne
pop
xchg
test
bound
ds
xchg
dec
fsubs
mov
jmp
inc
fistl
leave
cld
or
xchg
pop
ja
push
dec
fs
mov
mov
cmp
lds
inc
sahf
lds
cmp
arpl
mov
hlt
fmul
add
scas
into
jge
sub
cs
shlb
xchg
mov
mov
xor
and
ja
pop
mov
sbb
lret
xchg
sub
mov
js
and
pushf
push
push
sub
mov
inc
mov
dec
mov
test
pop
movsb
mov
rclb
lea
dec
xchg
in
push
add
add
inc
cwtl
aas
aaa
or
fsubrp
mov
lret
xchg
mov
push
fistl
sahf
add
adc
mov
adc
fs
mov
cs
testl
sbb
stos
adcb
movsb
dec
lret
vpmacsswd
insb
shr
int
mov
test
cld
dec
jne
pusha
int
push
push
das
int
pop
not
xlat
outsl
adc
mov
xchg
fwait
mov
cli
jns
add
sub
into
test
shrb
in
out
rol
sub
ds
imul
clc
push
popa
or
popa
or
pop
push
outsb
nop
push
in
insl
cmpsl
imul
fldt
out
mov
push
pop
mov
ret
inc
push
in
loope
dec
inc
sub
ljmp
pop
aam
sbb
sub
inc
sub
aas
cs
flds
xchg
mov
pop
mov
dec
xor
add
rcll
push
in
xor
pop
xlat
adc
data16
test
sti
dec
addr16
sub
jnp
jne
mov
outsl
mov
fld1
imul
into
imul
cmpsb
cltd
fsubl
enter
ret
outsl
aas
fbstp
push
xor
rorl
shlb
fcmove
inc
push
or
and
xchg
lock
or
jecxz
jnp
sbb
sti
sahf
fsts
mov
adcl
bound
or
das
pop
cmpsb
adc
orl
repnz
addr16
cmp
mov
mov
ss
adc
ljmp
pop
push
dec
iret
cmpsl
aaa
loope
push
xchg
push
xchg
aam
andl
test
dec
add
pop
inc
xchg
push
jge
loope
xor
loope
popf
sahf
cld
cmp
mov
stc
lods
repnz
cltd
das
xchg
sti
insb
add
mov
inc
arpl
mov
inc
je
add
loopne
xchg
mov
sarl
xor
fldcw
add
mov
jo
flds
add
sbb
out
je
jmp
pop
xchg
lret
jl
addr16
pop
subb
subl
adc
mov
xor
imul
adc
mov
pop
or
mov
bound
sub
les
pop
xchg
scas
pusha
pop
mov
imul
mov
add
out
enter
dec
mov
adc
add
mov
or
cmc
pop
imul
jp
sarb
fcmovbe
fadds
mov
xchg
sub
mov
test
jmp
pop
fadd
add
push
enter
push
pop
popa
in
js
push
clc
cmp
out
repz
icebp
shlb
xchg
mov
add
mov
dec
repz
push
push
pop
rorb
add
test
imul
outsl
push
repz
movsb
and
pop
xchg
rcrl
stos
push
pop
jae
int3
shlb
out
xchg
add
cmpsb
sub
lods
pop
inc
dec
cmp
sahf
jb
pop
andl
test
ds
sbb
dec
pop
fisttpl
mov
fcmovbe
jp
sub
imul
rcrb
imul
push
adc
mov
adc
xchg
dec
lea
fs
imul
mov
xchg
nop
sbbl
push
xchg
ss
inc
pop
cmp
lock
jb
aas
stc
lods
into
sbb
jae
dec
dec
ds
sbb
jp
push
out
fdivrl
dec
mov
popa
push
cli
addr16
pop
cmp
into
jbe
pop
fildl
aaa
popf
mov
stc
jge
sub
mov
cmp
inc
mov
sarb
jbe
loope
fimull
call
push
test
sbb
xor
test
jg
and
movlps
sahf
or
decb
add
push
rcrb
and
mov
adcl
les
pop
cmp
pop
xlat
mov
jmp
sbb
push
cmp
stos
sbb
jge
sbb
add
inc
cli
int
xchg
add
movsl
mov
dec
jne
call
aaa
push
xchg
and
mov
in
in
pushf
adc
cmp
xor
pop
fcoms
and
rol
fldl
sub
cmp
push
dec
sub
movsl
cmp
push
lret
xchg
and
sub
and
shlb
cmp
xchg
stc
nop
or
sti
cmp
mov
mov
sahf
test
mov
mov
andl
fs
xchg
stos
out
out
into
inc
stos
sub
in
addb
stos
aaa
loopne
cs
mov
mov
call
popa
xor
cmpsl
rcrl
mov
out
out
mov
test
lods
inc
jle
push
jecxz
movsb
xchg
xor
pop
sbb
popa
mov
clc
or
repz
or
popa
inc
inc
in
add
mov
dec
push
sbbl
push
xor
pusha
movsl
ret
fbstp
roll
and
fnstcw
fnstsw
in
dec
lods
sub
sub
es
adc
imul
pop
loop
sbb
ret
push
xor
test
jne
pop
out
stos
sbb
scas
mov
movl
cs
sub
push
dec
data16
mov
loopne
loope
ret
mov
and
jg
fwait
and
dec
call
push
push
pop
scas
pop
pusha
xor
aad
int
inc
les
push
xlat
push
push
scas
lock
icebp
in
inc
out
dec
test
mov
orb
dec
xlat
int
or
stos
push
cld
pop
mov
sarb
daa
xchg
pusha
mov
ds
cli
movsl
stos
sub
lret
clc
jmp
and
arpl
dec
jne
bound
je
cmp
xchg
stc
and
adc
mov
mov
int
adc
call
fwait
pop
insl
insb
xchg
fcmove
repz
call
and
sbb
shr
pop
leave
cld
int
sahf
les
rolb
jne
f2xm1
arpl
into
sub
arpl
push
sti
mov
notl
inc
cmp
jne
xor
inc
pop
pop
insl
filds
or
lea
fldt
cld
lahf
clc
cli
test
andl
jle
pop
les
push
cmp
xchg
sub
or
pushf
out
mov
orl
ja
fisubrs
loopne
mov
or
fwait
dec
fsub
loopne
mov
fsubs
outsb
test
loopne
sbb
adc
movsl
xor
pushf
or
subl
push
rol
cmc
dec
pop
push
adc
bound
xor
push
inc
ja
iret
sbb
aad
lds
jg
rol
or
addr16
or
pop
data16
pop
fdivrl
jmp
sub
pop
aaa
push
sub
mov
or
cwtl
int3
jns
mov
jecxz
pop
dec
pop
dec
push
addr16
add
add
push
xorl
movsb
aas
pop
jecxz
xor
adc
mov
pop
aaa
push
cmp
or
jp
inc
xchg
pop
adc
jne
dec
movsb
jp
xor
inc
sbb
ret
arpl
out
cld
dec
fnstcw
xchg
je
out
sbb
sbb
pop
jge
cld
inc
in
or
sarb
les
mov
adc
rcl
mov
pop
ss
lods
test
add
pushf
jle
cld
sahf
add
lret
jae
adc
xchg
ds
xchg
subl
jmp
xor
adc
lret
mov
sarl
adc
rorb
test
cmp
cmpsl
xchg
adc
or
jecxz
scas
ds
pop
movl
cmpsb
xchg
andl
lahf
outsl
mov
mov
xlat
inc
mov
push
xlat
daa
xchg
and
sbb
adc
mul
inc
cs
outsl
jmp
scas
test
orb
int3
cmp
mov
adc
jp
pop
push
xchg
stos
inc
and
sbb
movsl
sahf
rclb
fst
mov
mov
cmp
addr16
jle
cmc
xchg
pop
xchg
fiaddl
dec
sti
push
push
ret
mov
popf
inc
adc
jno
movb
add
dec
js
dec
pop
shl
xor
mov
pop
outsl
push
nop
fsubrl
pop
rcrb
das
xchg
jge
data16
jle
in
add
sub
test
inc
outsl
push
movsb
cmp
jno
adcl
outsb
pusha
xchg
dec
in
sub
test
mov
int
imul
insb
jno
int3
test
or
jle
rorb
aam
or
out
xchg
testb
sbb
dec
pop
in
popf
adc
push
mov
adc
sti
cmpsb
push
rcrl
pop
sub
pop
xchg
insl
and
mov
cmp
icebp
mov
repnz
xchg
cmp
subw
push
imul
sub
jno
in
mov
xlat
pop
fsubrl
rorb
dec
fwait
addl
add
sub
shrl
repz
adc
adc
sub
lock
outsb
and
movsb
add
mov
stos
fldl
insb
jecxz
loop
jmp
cmpsl
or
shll
xor
lret
dec
inc
mov
xchg
es
push
add
lret
cmpsl
inc
outsl
sbbb
mov
in
imul
pusha
inc
and
sahf
insb
jae
sbb
test
dec
iret
loop
scas
mov
cmpsb
popf
cmc
popf
add
daa
repnz
push
push
lcall
pop
lret
push
push
cmp
dec
xor
jnp
cmp
mov
push
gs
aad
inc
xor
adc
mov
nop
mov
aaa
jle
xchg
lcall
mov
arpl
inc
jg
loope
sub
sbb
enter
add
in
stc
dec
leave
push
jg
inc
mov
aad
mov
cmp
pop
cltd
cmp
push
pop
cmpsb
sbb
and
mov
out
and
jmp
push
in
test
mov
stos
sbb
push
and
cwtl
in
push
jmp
fstpl
testb
movsb
sarl
mov
adc
arpl
add
xor
push
xchg
sub
stos
call
pusha
data16
cmp
es
and
or
add
jle
push
xor
insl
gs
ficomps
add
sahf
mov
cld
sti
stos
push
push
int
push
stos
or
imul
sbb
rcrl
sar
iret
inc
loope
ja
cld
push
adcb
xor
daa
push
and
daa
cmp
mov
aam
adc
cmpsl
int3
or
shrl
int
pop
das
sbbl
ret
js
jae
cmpsb
enter
shlb
cmp
repnz
fs
cwtl
rorl
out
jnp
das
out
inc
fldcw
lock
add
jnp
into
xorb
mov
out
repz
push
movsb
popf
dec
aaa
mov
jl
mov
jmp
mov
add
cmp
pop
jbe
mov
or
fistps
add
jno
scas
cmp
js
popa
insl
push
adc
std
fs
fisubrs
lods
es
xchg
sbb
dec
or
hlt
adcb
xchg
dec
push
add
inc
loop
imul
add
xor
les
sbb
jmp
hlt
dec
nop
cli
repnz
lahf
mov
dec
test
not
sahf
adc
std
repz
xor
inc
fidivrs
bound
lahf
jae
mov
xchg
out
pop
insb
mov
aaa
in
jns
mov
cmc
outsb
cli
shlb
mov
lcall
cld
mov
add
jbe
xor
cmp
jae
mov
testb
sar
dec
ja
cmp
sub
mov
cltd
mov
inc
cmp
xchg
adc
and
or
ljmp
jbe
xchg
ljmp
stos
test
jo
ficoms
pop
dec
jle
pop
mov
sbb
jecxz
adc
sub
adc
test
call
dec
loop
mov
imul
pusha
pop
fsubl
mov
xchg
mov
in
pop
leave
add
dec
divl
shrb
loopne
imul
inc
lea
mov
pop
pop
in
stc
dec
pop
mov
xchg
push
dec
fistl
adc
in
adc
mov
mov
fstl
repnz
pop
imul
arpl
shll
xor
rol
xchg
and
jg
fcmovbe
test
addr16
pop
out
mov
js
sub
loop
sub
mov
adc
pop
lods
pop
sti
xchg
xchg
lcall
inc
and
neg
mov
pop
dec
scas
enter
push
inc
imul
lods
loope
daa
xchg
push
adc
cltd
aam
add
loope
das
cmp
sbb
cmp
jbe
fisttpl
sbb
xor
inc
mov
sub
data16
xchg
fwait
cmpsl
add
and
in
dec
lsl
cmp
and
cmc
int
and
cmp
movsb
or
push
lods
out
jnp
popl
loope
mov
push
cmp
divb
mov
ret
frstor
jle
cmp
mov
xor
sbb
adc
ss
insb
js
outsl
xchg
xchg
dec
out
hlt
xchg
push
and
mov
jo
push
xchg
jg
dec
inc
fnstsw
and
xchg
or
ds
push
or
xchg
cmp
jae
xor
xor
xchg
iret
sub
mov
mov
xor
scas
xlat
jns
mov
test
js
mov
cmpb
clc
fadd
sbb
push
aas
rcrb
jno
jno
mov
cmp
push
xchg
pop
cmpsb
inc
xchg
add
mov
lock
push
mov
xchg
and
mov
sub
inc
das
popa
jae
mov
das
fmul
lret
imul
lea
cmc
mov
les
cltd
scas
jmp
fwait
rcrb
pushl
aas
dec
add
adc
aaa
cltd
shlb
and
mov
cmpsb
jle
sbb
mov
pushf
add
int
jl
pop
imul
push
enter
xor
clc
insl
push
imul
sbb
fnstcw
pop
dec
out
test
mov
dec
add
or
pushf
sbb
jecxz
sbb
repz
aam
sbb
dec
mov
shlb
mov
shrl
pop
dec
stos
cmp
cmpl
andb
pop
daa
mov
jb
pop
mov
scas
mov
fs
dec
and
shll
add
lock
mov
sub
in
fdivs
cmp
mov
scas
insl
pushf
or
into
sarb
dec
ljmp
fwait
leave
sub
es
xorb
movsl
popa
scas
clc
call
in
shlb
jns
negl
adc
and
xlat
inc
add
vminpd
or
sbb
mov
cmpsl
fnstenv
notl
cwtl
push
mov
cmp
add
push
aas
ss
pop
mov
out
push
scas
and
sub
add
ds
push
and
sahf
imul
xor
shll
add
lahf
in
ds
out
jp
sbb
pop
test
out
fmul
ds
sti
out
iret
call
cmpsl
sbb
in
ljmp
push
lea
or
andl
int
jmp
mov
pop
ret
loope
inc
or
push
fisttps
dec
push
lcall
jno
fcoml
cmpb
dec
sbb
les
xchg
andb
add
cltd
fiadds
xchg
es
xor
dec
fisubl
and
sbb
in
sahf
adc
ficoms
loopnew
repz
lret
test
push
lea
xorl
outsl
loope
push
jp
jno
mov
rcl
push
push
je
push
test
pop
aaa
repz
scas
das
repz
push
sub
jo
test
ds
and
daa
hlt
mov
xchg
pop
and
test
ljmp
mov
xchg
push
arpl
inc
paddsw
rolb
out
aam
mov
cs
pop
call
push
sarl
inc
dec
fstps
int3
shrb
repnz
jns
mov
mov
out
data16
cmovne
jp
call
mov
sub
mov
jne
rcr
lds
jle
or
jge
push
daa
jns
and
and
icebp
adc
jb
sbb
sahf
ret
shlb
push
subb
cmpsb
jnp
enter
hlt
or
arpl
hlt
fcos
cs
ret
in
dec
mov
nop
movsb
repnz
cmp
fdivrl
adc
jb
leave
lods
inc
push
mov
xor
test
dec
ljmp
pop
sbb
add
and
jae
or
adc
pop
aad
push
fisttpll
inc
inc
popa
in
ss
push
push
fsts
xor
xchg
lea
xor
fnsave
call
fistpl
sbbl
arpl
fsubl
push
in
and
les
ljmp
cs
jge
cmpb
pop
xchg
imul
push
mov
daa
je
mov
in
nop
push
ret
or
mov
sub
mov
mov
pop
les
push
sub
lahf
out
sbb
xor
sub
enter
cmp
shrb
push
setl
inc
adc
sub
mov
outsb
xorb
je
or
add
xchg
add
mov
jge
imul
dec
aad
adc
mov
mov
fstl
ljmp
mov
xor
and
push
push
repz
repz
out
int3
scas
repz
sarl
push
sub
outsl
inc
xor
adcb
sub
fxch
and
push
and
aam
test
fistpll
inc
rclb
mov
loope
cmp
jns
dec
popa
cmpsb
xor
add
es
ret
add
ret
hlt
sub
in
xchg
xlat
loope
incb
or
dec
jns
popf
or
aam
in
aas
adc
adc
ds
in
inc
dec
lret
dec
test
add
mov
push
test
jnp
or
pop
in
stos
aad
pop
rcr
xor
adc
fs
nop
mov
testb
outsb
xchg
lds
pop
lock
rcr
ljmp
mov
pop
jne
sub
pop
jmp
mov
pop
add
jbe
mov
mov
mov
xchg
repz
test
add
mov
aaa
pop
movsb
inc
adc
icebp
ss
or
push
loopne
scas
cs
lea
fidivrl
iret
xlat
or
mov
imul
add
pusha
mov
and
test
sti
into
push
pop
mov
imul
jmp
sub
imul
or
cmc
ret
cmp
sbb
shrl
out
mov
movsl
inc
lcall
sub
ds
xchg
pop
jbe
addl
outsb
dec
pusha
and
dec
iret
and
lahf
hlt
clc
aaa
daa
jb
mov
flds
fnstenv
fstpt
mov
js
gs
add
out
ss
int3
test
out
aas
pushf
xchg
imul
xchg
lret
and
inc
adc
ds
adc
clc
aas
loopne
jbe
push
adc
jmp
mov
test
aam
int3
frstor
cmp
mov
mov
or
ret
mov
outsl
enter
pop
rcll
xor
loope
jnp
sbbb
shlb
inc
outsb
sbb
jae
aas
xchg
inc
mov
and
dec
daa
aaa
dec
js
inc
ret
sub
lds
dec
jo
xor
je
lods
mov
mov
fsubs
xlat
cmpb
enter
fsubr
mov
mov
push
dec
mov
subb
mov
sbb
cmp
mov
dec
gs
test
fdivrs
xor
cmc
inc
cmp
push
sahf
mov
fsubr
jno
push
lods
aaa
js
ret
mov
adc
sti
mov
jecxz
add
cmpsl
jg
scas
mov
mov
sti
lcall
mov
shrl
enter
xor
repnz
out
or
movaps
sbb
xor
sbb
cmp
stos
push
dec
push
cmp
test
imul
cmp
inc
or
add
cwtl
into
aaa
adc
fidivl
aaa
add
pop
jnp
inc
into
lods
fnstenv
fcmovb
int
mov
outsl
inc
rep
fsubl
jbe
int3
and
flds
dec
mov
and
fmuls
insb
jle
enter
and
lock
push
es
and
mov
jno
sbb
mov
add
into
xor
jle
and
scas
xor
pop
dec
popa
jo
sbb
negb
jge
mov
daa
ja
xor
hlt
enter
fstpt
xchg
je
test
pop
rol
cmpb
daa
sbb
sub
sbb
mov
xor
xor
jp
in
nop
mov
xchg
jb
ja
push
popa
xchg
idivb
mov
and
fadds
mov
fistpl
das
mov
shll
jl
dec
and
addl
mov
push
inc
and
cmp
ret
aam
addb
icebp
hlt
mov
out
xor
cmpsb
nop
cmp
stc
push
pop
jg
push
movsl
inc
pop
xchg
mov
out
mov
popa
cmpb
stos
push
lea
lods
and
in
cmp
cmpsb
mov
test
popa
inc
inc
or
pop
jns
and
mov
rclb
dec
rcr
adc
stos
push
scas
seto
mov
addr16
lret
inc
daa
outsb
jo
push
adc
cli
stos
cmp
fadd
pop
ret
mov
pop
add
cmpb
bound
movsl
inc
mov
sub
dec
arpl
mov
xor
addr16
and
addl
push
jecxz
pushl
les
decb
aaa
jae
rcrl
loop
push
gs
scas
sarb
movsl
movsb
cmp
insl
add
outsl
mov
lds
es
mov
inc
mov
pcmpeqd
fdivs
dec
lock
xchg
sub
and
and
xor
pop
sbb
std
inc
lret
insb
add
mov
ss
lods
popf
xchg
sbb
test
repz
adc
pop
and
push
and
jb
xor
pop
inc
nop
ret
outsl
pop
aam
xor
and
nop
in
or
sbbl
sbb
mov
xchg
xchg
pop
mov
pop
or
mov
frstor
jb
push
dec
fxch
mov
gs
push
and
lret
pop
mov
push
dec
xor
loop
mov
xchg
inc
pop
addr16
push
shrl
int3
data16
lods
xchg
enter
cmpl
add
sub
push
mov
hlt
inc
or
mov
aas
fisubrs
mov
mov
insb
sub
mov
xor
popa
jo
xchg
roll
jne
sub
pop
pushl
aad
scas
xor
sti
inc
adc
sub
negb
notb
mov
mov
test
cwtl
dec
push
ret
add
in
cld
xor
out
daa
xor
in
fcmovne
arpl
cmp
ss
rcl
adc
out
mov
dec
in
dec
in
frstor
cmc
xor
and
mov
cmp
pop
pop
lock
pop
and
stos
add
hlt
push
outsb
mov
ror
fistl
dec
fcoms
push
cltd
call
int
repnz
in
sub
in
push
lods
aam
movsl
sub
stos
adc
xchg
or
addr16
leave
sub
out
dec
cmpb
and
mov
jmp
xlat
jp
mov
call
test
xchg
sub
jge
sbb
jle
repz
jg
sbb
inc
mov
out
mov
popa
mov
in
add
fcoml
sub
addl
dec
iret
jne
xchg
adc
and
aas
aas
and
ss
ljmp
sbb
ret
mov
pop
push
out
jno
shll
fcoms
pop
xchg
test
js
and
inc
xor
sub
out
outsb
xor
scas
cmc
dec
adc
test
mov
cmp
push
dec
sahf
lret
movsb
loope
dec
aaa
lds
xchg
cmp
lcall
adc
add
ror
lock
or
test
mov
mov
pop
je
ja
sub
ss
adc
mov
outsl
aad
movsb
fildll
outsb
dec
shr
mov
cmp
jne
test
push
xor
scas
mov
sub
lods
idivb
xor
xor
push
fdivrl
pop
and
scas
fistpll
lock
pop
lods
add
ret
dec
mov
push
cmc
jo
sbb
roll
jg
fistl
sbb
xchg
sbb
mov
mov
ds
mov
enter
pop
mov
fsubs
shl
inc
xorb
push
lods
daa
jg
es
and
pushf
div
dec
sub
fiaddl
or
cmpsb
pop
popf
xor
push
mov
pop
scas
inc
test
xchg
adc
mov
xchg
pop
jge
repnz
fs
xor
inc
test
push
adc
or
outsb
or
jnp
mov
mov
out
and
pop
mov
fst
js
push
mov
jne
pop
movaps
add
or
jae
cs
push
cmp
mov
mov
and
mov
inc
movsl
add
es
enter
xor
sbb
in
cmp
pusha
push
cmp
inc
adc
int3
jl
push
pop
pop
pop
ret
xor
xchg
faddl
push
adc
out
scas
adc
mov
imul
dec
mov
hlt
enter
mov
icebp
xorl
insb
mov
add
and
jmp
stc
ficompl
pop
jae
push
lcall
aad
mov
push
pop
sbb
push
inc
sub
sub
je
mov
mov
out
es
aaa
popa
rcr
or
in
mov
xlat
aaa
inc
filds
xchg
scas
xchg
rcrb
outsb
mov
jne
fsts
xchg
int3
add
sub
add
scas
fs
jne
stos
cld
ljmp
mov
mov
mov
test
and
or
or
and
inc
add
jo
pop
xlat
int3
adc
mov
bound
imul
mov
push
pop
mov
call
add
jno
xchg
add
icebp
stc
mov
inc
in
in
add
hlt
cmp
hlt
pop
mov
xor
inc
rolb
in
arpl
out
ror
mov
mov
arpl
push
cwtl
add
push
cli
xchg
mov
bound
roll
jno
inc
jecxz
daa
data16
dec
mov
jb
aas
pop
cld
subb
xchg
pop
movsl
in
cmp
hlt
xchg
das
or
mov
mov
ret
test
inc
lahf
mov
scas
or
mov
mov
int
je
lret
or
push
mov
ficompl
mov
or
repz
test
sub
pop
or
push
xchg
mov
sbbb
jmp
cmp
hlt
xor
pop
inc
push
pop
bound
test
sti
dec
sbb
mov
push
addr16
aaa
fcoms
imul
mov
fwait
sbb
imul
jbe
xchg
jnp
icebp
js
loop
shlb
mov
xor
sub
out
leave
test
clc
inc
icebp
mov
mov
inc
lds
inc
dec
pop
cli
scas
add
cld
jb
add
scas
pop
addl
jge
inc
jno
rorl
xchg
cmp
cli
mov
add
pushf
add
inc
ficoms
dec
xor
mov
mov
test
xchg
fs
loope
push
testb
and
pop
int3
lock
mov
sub
test
jmp
or
gs
inc
jp
inc
in
aam
hlt
aaa
insl
push
outsl
imul
mov
and
es
in
sbb
xchg
push
decb
fmuls
sbb
sbb
cmpsl
rorl
dec
idivl
adc
pop
rorl
xor
and
enter
cmpsb
dec
inc
dec
leave
int3
mov
xor
sbb
test
mov
fisttpl
jmp
inc
dec
sbb
cmp
out
fldt
pop
arpl
inc
push
sbb
sbb
or
cs
push
xlat
leave
xchg
or
jnp
fistl
pop
sbb
cmpsl
mov
add
outsl
stc
jmp
outsl
in
adc
mov
dec
jns
rol
dec
xor
xchg
jbe
push
jb
inc
adc
call
and
sbb
sbb
and
cmp
out
je
inc
push
lods
repz
arpl
scas
mov
xor
dec
adc
push
gs
push
and
mov
in
idiv
fstps
ljmp
dec
test
add
nop
out
fwait
mov
lret
cmpsl
push
mov
mov
idivl
or
pusha
push
mov
push
ret
test
push
ret
lock
mov
jbe
mov
roll
std
out
inc
imul
mov
or
mov
adc
js
in
sbb
push
fdivs
addr16
add
or
push
add
jns
hlt
cmp
pop
add
imul
movsb
stos
pusha
jmp
insb
int3
pop
fwait
inc
mov
xchg
mov
push
mov
clc
lds
scas
jnp
xchg
fildl
xor
dec
std
sbb
in
jbe
push
aas
jnp
and
sahf
popa
iret
jl
dec
out
in
fwait
in
lcall
mov
jp
xchg
ret
shl
xchg
pop
addr16
push
and
sti
and
pop
push
es
testl
xchg
roll
mov
data16
dec
mov
subl
scas
test
hlt
cmpsl
mov
and
aas
adc
adc
inc
pop
adc
add
fwait
sub
fsubrl
inc
idivb
and
aas
inc
out
sbb
cltd
dec
icebp
mov
jmp
into
test
mov
jns
add
push
xchg
pavgb
jns
adc
sub
mov
dec
jmp
and
mov
lret
out
js
ret
add
xchg
sub
insl
push
sub
les
movsl
pop
pushf
rcrb
aas
dec
inc
aas
sti
cli
or
in
imull
inc
ret
mov
push
js
out
xchg
jg
rcrb
fwait
xor
fbld
xchg
dec
int3
in
jg
inc
out
pop
ret
loop
addl
push
pushf
insb
pop
mov
daa
inc
cli
jge
or
adc
leave
jge
ret
cld
in
cmpsb
inc
mov
int3
jnp
hlt
jae
mov
and
shlb
xchg
or
add
inc
mov
sbb
lcall
dec
push
sbb
iret
adc
lods
mov
adc
and
lcall
jno
dec
inc
jns
ljmp
inc
xchg
in
mov
xlat
dec
divl
repz
insl
push
cld
mov
mov
repz
iret
mov
adc
mov
xor
ss
cmp
aad
mov
push
xchg
jnp
andb
sti
pop
jg
sub
lods
testl
pop
xchg
orl
dec
push
stc
fistpl
movsb
xchg
push
push
dec
push
pop
cs
push
das
cmp
std
insl
loop
popa
inc
push
ret
and
shrb
push
roll
sbb
jnp
cmp
daa
insl
push
insl
pop
sub
mov
dec
bound
xchg
sub
or
aad
loope
call
add
inc
xchg
je
mov
xchg
incl
adc
adc
mov
mov
shrb
jg
sub
jge
loop
lods
mov
and
sub
mov
xchg
test
fdivp
push
cmc
out
out
fdivr
mov
call
or
aam
pop
xchg
jmp
mov
fwait
cs
insl
fistpll
pop
mov
jecxz
sti
repnz
cwtl
lcall
jecxz
rcl
xor
mov
aam
cmp
xchg
jo
inc
mov
cmp
imul
mov
jbe
repnz
jbe
sbb
pop
pushf
arpl
icebp
std
int
clc
cmc
and
cmp
and
mov
cmpsl
fwait
cmc
imul
mov
fmuls
fstps
add
cmc
jl
add
push
mov
out
and
adc
enter
dec
lret
mov
int
mov
repnz
xor
or
test
in
fmull
cmp
aad
mov
sub
and
pushf
jbe
mov
mov
fwait
movsl
lahf
or
pop
jle
push
mov
sub
cmp
into
es
jecxz
pop
pop
ret
int
jg
fnsave
out
fs
ja
cmp
loop
push
int
pop
xchg
cmp
loop
jmp
pop
movsb
pop
ret
icebp
adc
sarl
mov
outsb
scas
inc
aas
mov
rclb
inc
push
mov
xchg
scas
aaa
test
mov
push
push
call
dec
ljmp
pop
pop
mov
insb
mov
addr16
out
jne
xor
mov
push
push
xor
fcoms
push
jns
mov
sub
adc
xchg
ret
cmpsl
mov
cmp
bnd
rcrb
stos
repnz
xor
adc
fisttps
aad
mov
addr16
lods
cli
jl
adc
and
jle
and
mov
imull
mov
xor
or
arpl
push
ret
jecxz
cli
mov
push
addl
loope
adcb
mov
xchg
call
sub
xor
movsl
jo
data16
fldenv
in
pop
push
fisubrl
or
push
fidivl
xorb
sbb
and
pop
mov
jecxz
in
lds
add
and
loopne
addl
scas
adc
scas
mov
sub
sub
imul
pop
jg
push
sbb
mov
pushf
pop
lods
sub
pop
test
adc
rorl
mov
mov
sub
mov
popl
cmp
mov
aad
cmpsl
fwait
cltd
int
aam
testl
add
in
nop
pop
mov
mov
jno
mov
out
rclb
mov
adc
jns
xor
ret
inc
dec
xchg
mov
cmpsb
add
dec
loopne
jle
sub
data16
pop
sbb
mov
and
adc
scas
scas
mov
xor
or
lock
lods
jb
xchg
mov
push
fidivl
mov
inc
lahf
jp
jle
int
dec
aas
mov
jae
xchg
and
popf
xchg
sub
xor
xchg
shr
lods
icebp
or
adc
ss
insb
out
pop
jecxz
adc
sahf
mov
lahf
test
je
out
and
imul
push
xchg
sub
les
fsubs
dec
and
jo
push
leave
mov
insl
in
pop
aad
or
push
push
out
sbb
pop
rorb
jb
jge
sub
addr16
cmpsl
and
das
mov
xchg
pop
sub
ljmp
loope
jg
out
inc
jl
sub
inc
or
push
lret
loop
pop
jl
pop
test
fdivrl
jne
rorb
push
fs
and
and
ja
mov
lret
push
and
mov
test
imul
into
addr16
aad
cltd
sub
xor
shrb
lcall
add
loopne
xchg
add
neg
mov
out
mov
fcoms
pop
fldenv
xor
and
jae
aas
aaa
adcb
or
cltd
adc
btc
jns
xchg
movsl
inc
std
call
lods
sbb
lahf
jmp
mov
loopne
cmp
sbb
mov
lea
out
mov
and
adc
xchg
js
lahf
push
xor
xor
mov
xchg
jecxz
inc
mov
add
and
in
ja
mov
cmc
lret
aas
sti
jno
sti
pop
push
mov
rcll
aaa
jae
add
push
mov
pusha
call
adc
jl
movsb
jb
and
test
fimull
clc
jl
test
push
mov
stc
push
into
push
and
in
dec
lret
pop
cmpsb
xchg
outsb
jmp
push
gs
addr16
outsl
pop
lods
into
addl
aad
mov
push
lods
into
mov
xor
movsl
jl
or
cmp
adc
mov
lahf
arpl
and
rcrb
adc
inc
mov
imul
jbe
jno
mov
repz
inc
xor
dec
add
bound
cmc
andb
iret
jmp
lahf
outsl
and
ljmp
xchg
rorb
lret
cmp
adc
mov
sub
adcb
idiv
shll
out
lods
cmp
inc
out
jne
lahf
fwait
jle
or
sahf
adc
cmp
xorl
popa
sub
cld
cmp
sbb
jp
and
test
es
dec
xor
and
imul
out
call
lock
loopne
inc
mov
test
shll
xchg
ret
loopne
mov
dec
and
iret
jp
inc
jae
in
dec
and
test
or
mov
adc
add
or
decb
xchg
mov
cmpsl
dec
icebp
sbb
mov
jg
hlt
pop
xor
orb
mov
mov
push
mov
inc
sti
inc
test
xlat
fildl
iret
xchg
addl
add
int3
sti
sbb
inc
lret
icebp
pop
aas
mov
addr16
push
or
fnsave
inc
dec
sub
cmp
inc
sub
adc
loope
pushf
gs
dec
pushf
mov
sbb
jp
mov
pop
popf
cs
and
scas
ss
xor
stc
add
gs
cmp
jae
jmp
add
cmpsb
adc
fists
popf
add
add
xchg
daa
or
hlt
sbb
inc
fcmovnu
or
test
sub
out
fbstp
inc
out
xor
inc
jecxz
int
icebp
cwtl
fdivrs
jecxz
or
out
mov
adc
lods
xlat
fnsave
loope
mov
int3
outsl
roll
or
xchg
lret
dec
lea
fsubr
cli
stc
dec
clc
mov
dec
add
lret
ret
dec
pushf
shlb
aas
cmpsl
mov
test
dec
xor
xchg
sub
xchg
mov
push
movsl
mov
js
leave
es
mov
lods
dec
out
sub
shrb
mov
inc
call
push
andl
insb
lahf
mov
mov
repnz
insb
pushf
push
icebp
stc
fstpl
mov
gs
les
push
js
sahf
test
mov
pop
data16
mov
or
test
lock
aam
test
popf
loopne
sbb
cmp
pop
sti
lds
adc
imul
or
lods
stos
or
push
push
dec
xchg
add
and
shll
mov
std
inc
inc
mov
dec
sbb
sti
pause
mov
iret
loop
int
into
scas
mov
xchg
or
jne
mov
js
das
cld
out
aad
nop
mov
ds
pop
loopne
pop
jmp
stos
shlb
mov
std
mov
cs
jbe
stos
xchg
add
sub
mov
xor
dec
mov
jmp
daa
out
ds
out
lcall
sti
sub
xor
shll
or
imul
leave
cwtl
movntq
xlat
sahf
mov
mov
sbb
out
mov
dec
xlat
rcl
pop
movsb
pop
sbb
loop
retw
lret
out
mov
hlt
xchg
fnstcw
cmp
adcb
cli
scas
stos
push
sub
jb
shr
aad
jl
sbb
sbb
insb
pusha
dec
movsl
mov
jo
or
lods
mov
cld
mov
leave
or
addr16
dec
pop
xchg
push
and
popf
iret
jno,pt
pop
or
popa
jbe
push
jb
sbb
adc
mov
cmpsb
mov
mov
loop
push
jl
add
jnp
mov
aam
stc
in
cmp
rcrl
and
test
testl
and
mov
xchg
pop
inc
jle
out
push
mov
frstor
testb
push
sbb
roll
ret
pushf
add
and
add
mov
rcrl
mov
jmp
rolb
inc
fistl
and
dec
jb
inc
sti
mov
sub
js
out
ficomps
sbb
cmp
dec
shll
add
arpl
push
and
les
negb
mov
mov
jno
out
mov
mov
pushf
adc
mov
or
add
mov
ret
mov
mov
or
leave
push
cmc
pop
jg
mov
push
xchg
add
dec
mov
lods
gs
nop
add
inc
idivb
mov
or
sub
scas
in
mov
lods
fstps
jbe
and
jns
adc
sub
dec
mov
iret
adc
dec
xchg
push
jbe
cmp
xchg
cmpsb
les
and
add
and
xorb
std
loope
ss
adc
pop
mov
cmp
xlat
jmp
addr16
ljmp
jnp
mov
jno
dec
sub
inc
jmp
orb
and
loope
xchg
fisubl
std
jecxz
aas
cmp
movsl
sub
dec
pop
lret
mov
add
mov
dec
test
rcrl
ss
add
mov
xchg
sahf
gs
orb
sbb
data16
jnp
or
fmul
xor
loop
ljmp
adcb
sbbb
dec
jne
incb
std
push
or
jae
shrb
ja
sub
lea
sub
scas
test
inc
push
adc
daa
xchg
clc
stos
repnz
insl
ror
into
push
pop
lret
rcrl
inc
inc
mov
xorb
mov
adcl
ret
jnp
xchg
jle
cmc
lret
mov
cmp
jae
xor
adc
mov
adc
mov
loop
lahf
aaa
sbb
jmp
mov
mov
fnsave
ja
adc
jo
dec
sbb
outsb
inc
xor
out
and
call
push
cmc
push
in
jne
dec
sbb
jb
scas
repnz
pop
push
inc
dec
mov
mov
pop
lock
and
mov
mov
es
rep
nop
sbbb
je
cwtl
pusha
pop
enter
add
mov
jno
push
dec
addr16
xlat
jne
jns
push
mov
inc
ret
aad
cmp
and
adc
adcl
pusha
adc
jg
sarl
add
jns
mov
or
pop
sahf
lods
roll
pop
cwtl
xchg
clc
push
cmp
mov
pop
adc
data16
lret
jecxz
cmpsl
jne
mov
ficompl
enter
xor
inc
cmp
adc
cltd
aaa
cli
fwait
lock
cli
fldl
jle
lret
and
sbb
popf
add
cmpsl
addr16
inc
sbb
ret
inc
push
ficoml
pop
aas
iret
aad
scas
inc
ret
jb
lock
sbb
cmpb
jle
pop
into
or
xchg
adc
push
push
mov
pminub
inc
iret
cld
xor
mov
shlb
add
scas
aas
cld
inc
ja
pusha
std
pcmpgtb
dec
xchg
jle
mov
into
aaa
decb
inc
rcrb
imul
pop
pop
lock
xchg
les
loopne
ljmp
mov
dec
cmp
pop
sbb
ja
fs
and
int3
mov
fsubr
popf
or
insl
dec
jns
or
sub
jno
jo
sbb
out
mov
sbb
imul
imul
mov
jae
xchg
jg
xor
insb
dec
aam
fnsave
sbb
rcrb
xchg
mov
arpl
outsl
clc
jo
cmpsl
adc
sti
into
in
pop
pushf
orl
and
or
es
lods
push
jo
cmpsb
inc
or
loop
outsl
dec
or
aaa
dec
in
in
mov
pop
fistpl
mov
push
lahf
repnz
rol
pop
add
add
push
shlb
add
jecxz
push
stc
mov
sbb
push
dec
jbe
mov
in
iret
inc
lods
imul
adc
xor
sbb
pushf
mov
xchg
je
inc
lods
bound
int3
and
jp
in
imul
sub
xor
inc
js
mov
push
stos
imul
adc
shlb
mov
rcrb
dec
adc
sbb
mov
aaa
mov
or
cmp
and
push
ss
mov
jns
xchg
cwtl
fs
jnp
adc
and
ds
testl
pop
dec
jnp
mov
or
cld
adc
xchg
mov
adc
cld
jb
fs
adc
push
xchg
push
hlt
iret
ss
cmc
call
jo
fdivr
lret
jmp
add
push
push
icebp
rcrb
leave
test
pusha
lret
arpl
push
push
cmp
fwait
add
push
clc
mov
mov
cmp
cmpb
mov
and
mov
mov
dec
mov
scas
mov
adc
cmp
add
and
xlat
mov
addl
push
imul
lcall
jmp
inc
push
or
add
xor
mov
int3
xchg
push
add
mov
xchg
pop
pop
mov
sbb
pshufw
mov
mov
xor
lea
hlt
enter
inc
pop
clc
test
cmp
inc
subl
cmp
ja
stc
imul
cmc
rorl
repnz
sbb
jb
dec
xor
gs
aad
xchg
or
bound
cwtl
cmpsl
mov
dec
or
or
mov
sbbl
gs
sub
jp
fisubrs
movsl
cmp
sbb
and
sbb
sub
leave
xor
mov
insb
lret
mov
pop
mov
call
stos
or
mov
dec
lret
jge
adc
in
aam
outsb
sub
sti
adc
mov
nop
lcall
pop
jne
jnp
xchg
and
mov
push
fldenv
fcomps
adc
pop
scas
and
lcall
in
sahf
cmp
mul
ret
cmpsb
sub
jbe
jbe,pn
pop
test
xor
ret
mov
enter
sbb
pop
outsb
xchg
jmp
fmull
frstor
mov
pushf
push
cwtl
adc
fcmovnu
popf
xchg
push
mov
fs
cmp
push
inc
sahf
or
call
inc
xor
dec
out
cwtl
mov
mov
outsb
cld
and
jns
mov
call
in
inc
std
add
lcall
inc
jns
sub
cmp
and
or
iret
addb
arpl
xor
mov
je
mov
out
or
into
push
cmp
adc
out
push
sahf
inc
dec
mov
insb
dec
cwtl
inc
inc
fmull
orl
stos
das
inc
test
aad
push
testb
and
test
jns
aad
mov
jo
cs
jae
lods
shll
test
dec
and
mov
lods
cli
jecxz
xchg
adc
cli
jg
pop
imul
sbb
push
xchg
repnz
mov
mov
lds
fstl
pushf
ret
nop
scas
fistpll
mov
les
pop
aad
push
add
imul
xor
insb
mov
out
lret
add
jge
jecxz
movsb
addr16
xchg
outsl
or
push
jle
pusha
inc
test
add
sub
sbbb
hlt
call
mov
or
mov
sub
pop
jmp
ljmp
ds
js
xchg
push
sbb
push
mov
jle
mov
aad
lcall
mov
pop
sub
adc
adc
sbb
pusha
decl
cmp
data16
jno
subb
add
mov
in
mov
inc
adc
mov
cwtl
mov
les
pop
or
xor
lret
add
insb
add
orb
and
fildl
out
mov
inc
inc
pop
repnz
mov
inc
lods
push
push
mov
dec
push
xchg
cltd
sub
repz
bound
cmp
sbbb
sbb
shlb
fwait
ss
lock
sub
lcall
cmpsl
cmpsb
addl
cli
fwait
test
add
and
mov
mov
adc
lea
not
iret
jge
sbb
cmc
adc
sbb
out
push
push
clc
hlt
mov
mov
jmp
cmp
inc
fnstcw
pop
push
xlat
mov
dec
das
mulb
dec
mov
or
ja
nop
xlat
lods
mov
sub
imul
mov
mov
mov
ja
lret
push
add
fdivs
push
inc
cmp
mov
aad
xor
negl
mov
out
push
xchg
es
mov
mov
sub
push
xlat
inc
lret
xchg
fcoml
ss
into
pop
dec
push
shrl
mov
loop
insb
xchg
push
jb
jl
test
popf
xlat
lcall
jnp
inc
xrelease
adc
stos
push
in
gs
cmp
ret
inc
lds
cli
test
jno
xchg
hlt
jae
pusha
jmp
lea
add
mov
jmp
dec
jl
lock
cli
jno
dec
ret
dec
enter
mov
stc
outsb
cmp
ror
popf
jmp
pop
gs
es
push
pop
mov
rcll
mov
xor
and
adc
sub
cmp
xchg
rorb
push
xchg
push
out
daa
sbb
sub
cmc
std
lea
adc
xor
inc
dec
adc
mov
xchg
ficoml
jp
das
lahf
sub
shl
enter
adc
and
add
mov
add
inc
push
dec
leave
mov
jnp
cmp
inc
loop
imul
loop
inc
xchg
pop
mov
sub
xchg
aad
mov
adc
sti
into
cmp
pop
or
lret
xchg
jno
lods
stos
stc
movsl
pop
in
std
aaa
jbe
ret
popa
lds
je
ss
sbb
sub
loop
mov
cmc
xor
into
out
idivl
pop
or
or
repnz
addr16
imul
inc
shlb
test
je
sbb
int3
inc
sbb
xchg
adc
jmp
pushf
out
scas
inc
out
sti
sub
out
mov
inc
mov
add
cld
iret
fisttps
andb
xor
push
div
scas
sub
imul
and
fidivrs
cmpsl
mov
vpmadd52luq
dec
imul
push
push
add
fidivrl
xor
in
mov
xor
mov
insb
leave
cli
gs
sub
ljmp
mov
jae
ret
xchg
and
sbb
xor
jns
push
lock
cmp
mov
mov
inc
lods
out
or
fcoml
mov
push
xchg
dec
push
stc
mov
add
dec
lock
imul
add
mov
xor
mov
xchg
notl
sti
cld
ljmp
stos
xchg
sbb
sbb
mov
adc
xor
push
aas
hlt
and
es
push
jg
cs
call
fiaddl
or
jl
add
sub
fldt
mov
icebp
test
mov
xor
addr16
sub
nop
sub
cmpsl
arpl
xchg
leave
push
jge
mov
scas
sti
fidivl
sahf
mov
std
rorb
jmp
aas
sub
sarl
shrl
mov
outsb
add
xor
lcall
mov
sbb
dec
xchg
sbb
je
cmp
pop
cmp
or
mov
faddp
ud2
mov
mov
mov
push
addr16
lea
addr16
js
out
std
mov
mov
es
pop
mov
push
lahf
jmp
adc
lock
and
adc
sub
fnstsw
mov
outsl
xor
lock
or
test
negl
xlat
stc
sbb
leave
jb
mov
insl
add
dec
and
lret
adc
pusha
ret
cmp
and
lods
cli
scas
sbb
push
stos
stos
or
out
int3
outsb
sbb
test
inc
test
movb
es
mov
imul
push
leave
sbb
and
push
push
xor
fmull
lods
into
int3
mov
outsb
sbb
dec
inc
shrb
cltd
insb
sti
pop
mov
adcb
cmp
mov
dec
cmp
inc
aas
sahf
xor
lea
push
inc
fldl
mov
fcoms
sub
icebp
addr16
jb
dec
fnstcw
cmpl
stos
in
sbb
jmp
xor
loopne
sbb
mov
xchg
cmc
sti
movsb
addr16
add
dec
pop
sub
pop
mov
inc
bound
mov
push
jg
inc
test
push
xor
mov
faddp
call
repz
out
inc
mov
js
xchg
or
insl
mov
mov
add
les
mov
rorb
and
sbb
cmpsl
pop
add
imul
mov
dec
popa
jno
mov
sbb
gs
adc
testl
bound
outsl
pop
pushf
popa
movsl
inc
ds
lahf
xchg
pop
mov
dec
arpl
outsl
pop
mov
dec
int
sbb
xor
dec
dec
outsl
cmp
shr
cmpb
lods
adc
cmp
int
ja
or
push
xor
push
loop
nop
sahf
out
sub
or
sti
dec
test
pop
fwait
cmpsl
dec
stos
and
iret
add
adc
or
push
insb
enter
push
popf
push
jg
call
popf
add
sbb
jl
sbb
xlat
pop
sub
push
insb
xlat
jo
outsb
adc
dec
cmp
sbb
inc
and
lret
jl
shr
movsl
mov
sub
lahf
ds
mov
xchg
repnz
xor
mov
dec
addr16
or
mov
inc
dec
or
nop
stos
dec
loope
lcall
add
aas
fldcw
das
cwtl
mov
push
or
frstor
pusha
xchg
xor
lea
xor
sbb
repz
mov
inc
nop
and
fsubr
lds
fdivr
pop
int
fcompl
arpl
xchg
movsb
adc
sbb
adc
dec
sbb
inc
popf
and
inc
cmpsl
fdivl
shll
mov
cli
mov
bound
dec
cwtl
out
dec
or
and
push
add
aad
push
mov
dec
aad
jp
iret
movsb
jmp
lfs
jge
mov
xor
loop
addb
xchg
pop
dec
mov
repz
cmp
jbe
ljmp
sarb
and
sbb
push
mov
pop
andb
dec
jb
jecxz
mov
and
in
inc
xchg
and
sarb
pushl
xchg
push
fdivrs
ss
stos
xchg
mov
fs
sub
and
or
jb
xor
sub
add
pop
and
outsb
and
cwtl
push
fwait
and
mov
or
mov
dec
and
arpl
inc
imul
adcl
adc
or
mov
xor
or
cmp
mov
popa
leave
push
test
mov
jb
push
shl
push
adc
int3
or
add
ficomps
sarb
cmpsl
mov
dec
push
repz
pop
test
xor
movsl
jl
jns
or
sub
leave
pop
fsts
lds
dec
iret
push
add
pop
rep
das
and
and
mov
push
xchg
filds
mov
stos
vorpd
mov
inc
enter
cmp
cmp
imul
or
add
cmc
inc
mov
sbb
mov
insb
ds
sub
clc
sub
sub
loope
orb
sbb
lret
int
push
fistl
push
pop
roll
sti
pop
jmp
ret
push
sti
or
std
je
popa
int3
int
cmp
std
mov
cld
sbb
jae
pusha
addr16
test
jno
stos
mov
lods
cmp
cmpsb
je
scas
int3
jno
int
das
sub
nop
xchg
inc
mov
test
pushl
inc
push
xchg
ret
pop
cmp
xchg
xor
pop
mov
enter
ljmp
jno
mov
lret
xor
and
jno
imul
jbe
jnp
push
ficoms
arpl
dec
out
das
xor
inc
out
das
fld1
push
lea
sbb
call
push
jmp
dec
ficoms
pop
xchg
pop
psadbw
dec
xchg
jne
inc
into
imul
mov
addr16
mov
xchg
inc
iret
sbb
cmp
mulb
xor
and
fdivrs
inc
sub
add
jbe
loope
stos
xchg
dec
mov
mov
inc
pop
icebp
push
sbb
mov
pop
mov
lods
ss
jb
or
das
into
aaa
push
sub
lret
push
outsl
jl
js
outsl
pand
jmp
es
dec
lahf
pop
test
xlat
scas
andb
jge
push
adc
enter
rorb
xchg
daa
sub
hlt
sub
xchg
inc
lret
es
or
push
clc
cmpb
scas
fldt
mov
iret
idiv
js
ss
adcb
cmp
inc
jl
jmp
sti
mov
int3
and
mov
pop
nop
je
or
cmc
mov
and
in
jae
jns
mov
imul
mov
scas
cld
aaa
fdivs
jb
ljmp
cmp
popf
cli
mov
pushf
xchg
mov
insb
shlb
rcll
mov
xor
int
pop
out
cs
lods
push
inc
rolb
leave
lret
ficoms
sub
aaa
pop
fmuls
icebp
ds
mov
out
es
testb
mov
cmp
and
ret
push
pop
movl
je
push
fistps
in
dec
xor
jns
add
sbb
imul
mov
xorb
bound
xor
sbb
cld
cltd
int
adc
rcll
push
adc
add
test
push
out
mov
push
test
sub
js
imul
test
inc
push
mov
mov
out
lret
or
push
push
or
pop
pop
fs
mov
inc
sub
orb
test
and
in
test
inc
sub
lock
or
xchg
int3
jno
lret
aaa
stc
inc
repnz
adc
and
jns
mov
pop
sti
dec
test
sub
lea
stos
cmp
adc
inc
inc
ret
inc
shll
mov
in
in
es
into
mov
xor
mov
repnz
ja
dec
push
dec
stos
mov
inc
mov
adc
mov
sub
dec
ds
ret
jge
cmp
sbb
mov
jge
hlt
jo
shrb
sub
mov
mov
adc
mov
mov
xor
daa
mov
sbb
mov
scas
cmp
push
insl
add
imul
test
subl
js
adc
lret
add
sub
repz
rclb
js
xor
rorb
push
push
inc
or
test
pop
push
pop
in
out
lds
outsl
push
lea
hlt
bnd
cmp
add
cmc
movsb
sbbl
scas
je
xchg
clc
lea
cmp
out
jg
mov
sub
scas
fsubrl
dec
inc
int3
shrb
mov
push
mov
insb
jmp
adc
or
fnsave
mov
int
shrl
jp
in
fnstcw
push
inc
mov
test
jb
movsb
dec
shl
pop
shl
sbb
int
pop
lds
iret
in
je
hlt
push
sti
adc
test
xor
pop
stc
sub
dec
rclb
cwtl
clc
fbld
or
shrb
jb
dec
jb
cmp
ds
fadd
sub
pusha
gs
sbb
pop
icebp
push
lods
call
adc
pop
mov
mov
or
fadd
jbe
mov
push
ret
adc
xchg
and
mov
clc
add
inc
lods
add
insb
add
jle
or
mov
add
es
lcall
xlat
push
repz
in
dec
or
imul
adc
xchg
loope
adcl
xor
cvtps2pi
aaa
or
pusha
std
mov
jecxz
mov
test
lcall
sti
das
push
loop
out
test
in
inc
push
push
inc
fildl
lds
or
repz
movsb
mov
sub
mov
faddl
les
push
cmp
push
jnp
xchg
ja
cmp
push
bound
add
addl
lods
xchg
dec
cmp
jle
insb
or
sub
icebp
sub
data16
jo
incb
mov
and
sbb
pop
pop
addr16
dec
jnp
or
dec
dec
xchg
adc
push
sbb
not
dec
add
xor
jno
xchg
aas
sub
ret
or
xchg
xor
fisubl
cmp
xor
add
sub
xchg
mov
nop
mov
fsub
aas
lods
xchg
adcb
in
cltd
pop
jl
sub
sahf
cwtl
test
sub
fsubs
clc
std
and
fistpl
inc
sti
sub
test
outsl
adc
lcall
mov
adcb
in
inc
cs
push
add
mov
rcrb
xor
xor
repnz
int3
sub
jl
scas
es
out
mov
filds
sub
cwtl
clc
and
xlat
aas
mov
mov
mov
popa
out
push
xlat
push
inc
xchg
pop
lret
mov
test
lret
mov
mov
push
jnp
mov
adc
test
lahf
mov
mov
pop
dec
fists
incl
fs
outsb
sbb
jne
sbb
dec
inc
add
int
aas
cmp
lods
pop
das
sahf
lds
lret
sub
xor
jns
xor
adc
dec
loope,pn
add
xor
mov
test
dec
icebp
stos
mov
sbb
sbb
scas
negb
inc
jne
cmp
outsb
cltd
mov
add
aaa
mov
sub
inc
mov
mov
xchg
dec
cmc
bound
mov
mov
mov
cld
mov
lds
hlt
xor
or
mov
pop
pop
sbb
outsl
gs
inc
aam
adc
inc
jg
inc
ret
dec
in
rorb
mov
and
or
and
cmc
xchg
mov
mov
or
sub
mov
cmp
cs
ret
jnp
sbbb
pop
repnz
jmp
out
je
sub
in
pop
mov
cs
int3
mov
cmp
xor
out
xor
or
mov
pop
sbb
mov
notb
iret
aad
or
lea
out
scas
pushf
add
push
sub
cmp
ds
mov
sbb
addb
xchg
fistps
fwait
cmp
mov
scas
mov
pop
daa
or
cmpb
and
cmc
xchg
push
fidivs
dec
gs
scas
xrelease
cli
pop
andl
mov
jne
xor
xchg
pop
mov
cmp
out
mov
pop
mov
cld
mov
stos
std
and
lcall
sbb
mov
pop
cwtl
xchg
mov
jbe
push
xor
xchg
mov
inc
adc
mov
out
inc
cld
or
pop
sbb
bound
and
mov
repz
int
movsb
push
push
xor
and
add
test
mov
loope
mov
pop
dec
dec
popl
cltd
sbb
jnp
jecxz
add
add
fisubs
test
mov
mov
enter
test
imul
mov
test
movsl
fldenv
add
pop
aaa
inc
aam
mov
sbb
dec
int
cmpl
mov
xlat
popa
inc
int
rcll
inc
pop
mov
xchg
sbb
cmp
into
xor
sets
mov
inc
in
jno
scas
fwait
inc
test
cltd
into
sbb
inc
out
dec
pusha
push
outsb
add
dec
pop
int
repnz
inc
call
xchg
hlt
pusha
sbbl
sbb
fldenv
leave
mov
and
jle
ds
daa
push
out
mov
andb
aam
int
sbb
pop
mov
test
push
jno
enter
inc
int
and
cmpl
rorb
pop
xchg
inc
loop
mov
clc
lock
and
xor
out
xchg
pop
pop
imul
clc
addl
outsl
insb
jl
xchg
cwtl
cmp
mov
pop
jae
cmp
or
pop
cli
lret
push
adc
add
mov
push
lods
mov
dec
ds
fwait
xchg
jge
movsbl
insb
xchg
add
out
cmp
mov
inc
testb
mov
ja
les
fidivs
int
add
xor
sbb
add
adc
cmc
lahf
xor
sbb
ja
mov
mov
rcll
inc
ds
add
fidivrl
jg
loop
inc
push
aad
and
movsl
test
imul
inc
adc
out
loop
pop
scas
cmp
test
jno
adc
or
bound
pop
mov
cmpsb
sbb
cwtl
mov
icebp
leave
xchg
mov
mov
ja
leave
cmp
je
mov
xor
rcl
xor
sub
fwait
jo
jo
mov
dec
mov
jne
jl
dec
jnp
sbb
sub
adc
ja
mov
iret
adc
pop
add
iret
add
sbb
sbb
push
fistps
loopne
hlt
ljmp
js
lahf
fsubl
into
push
jecxz
lods
push
and
cwtl
loopne
mov
pop
aas
add
and
imul
lods
iret
push
sub
mov
xor
pushf
pop
fdivrl
decb
cli
repz
adc
adc
loopne
lods
xor
das
or
ffree
fstl
flds
dec
gs
ret
add
xchg
mov
xchg
lock
add
bound
adc
mov
jmp
push
jae
clc
repz
or
call
mov
negl
ffree
das
mov
scas
mov
mov
aad
push
aam
and
dec
ret
xlat
jge
fdivrl
pop
jno
mov
push
mov
lret
shr
dec
inc
aaa
mov
cmc
and
in
sbbl
fwait
mov
xchg
ljmp
push
jo
add
dec
aas
clc
push
push
sti
mov
shll
mov
mov
leave
xor
rorb
dec
rcll
sbb
lret
jno
jge
ret
jge
jns
xchg
fcompl
xchg
repnz
cli
cmp
call
or
imul
sub
cs
or
jp
sbb
in
mov
mov
push
loopne
mov
pop
pop
repnz
push
repnz
notb
aam
mov
fldl
cmp
adc
push
mov
sbb
xchg
jne
in
jmp
xchg
xor
lahf
cmp
pop
mov
sbb
push
repz
cmp
fstpl
pop
clc
xchg
sbb
hlt
lock
jo
bound
sbbb
xor
xor
scas
seto
int3
frstor
je
jp
out
loopne
lods
movl
xor
sub
mov
addr16
ljmp
aad
xor
mov
ljmp
xchg
or
mov
push
xor
adc
rcll
xchg
movb
cmp
push
repnz
ja
lock
mov
inc
sbb
sbb
jae
insb
aad
into
sahf
mov
lods
jmp
cmp
lret
pop
fwait
add
jns
test
inc
fs
cmp
or
push
mov
xchg
dec
mov
mov
dec
add
xor
dec
mov
mov
xorb
test
mov
push
mov
and
int
sbb
in
and
mov
xlat
xchg
enter
out
cltd
sub
pusha
sbb
and
push
test
and
sub
and
and
stos
adc
lcall
je
pop
rol
cltd
push
jecxz
aam
jae
mov
pop
test
lea
xlat
test
je
stos
roll
lret
fidivrl
out
add
pop
mov
and
and
jnp
lret
nop
dec
popf
sub
lods
pusha
or
mov
fstps
mov
popa
xor
pushf
insl
mov
fidivs
cmp
mov
das
sbbb
mov
clc
data16
in
xchg
push
inc
lcall
pop
loopne
ret
rcl
xchg
jl
dec
push
mov
iret
jp
cmp
popf
fisubrl
pop
mov
movsb
inc
push
jg
pop
arpl
pushf
outsb
add
sbb
movsb
nop
or
dec
lea
mov
pop
repz
xor
std
lods
je
stos
dec
inc
or
cmc
sub
addr16
sub
popa
sbb
pop
call
aam
pop
jno
out
xchg
out
push
lret
xchg
cmp
les
cmp
and
sbb
jle
lret
std
in
pop
inc
cmpsl
neg
fadds
fs
dec
or
dec
mov
inc
xchg
xchg
test
fldcw
adc
mov
pop
push
repz
ja
sub
ljmp
test
mov
scas
lock
stos
into
cmpsl
mov
mov
data16
mov
lods
stos
dec
cmc
jmp
testb
adc
shlb
push
neg
fldl
pop
sub
mov
dec
sub
push
jp
js
and
or
ss
test
push
lock
popa
out
pop
rorb
mov
das
mov
sub
adc
xlat
xor
or
cmp
mov
aaa
sub
rcrb
mov
push
pop
xchg
pop
xchg
xchg
cmp
inc
outsl
xor
sar
and
mov
jg
lahf
enter
fcoms
mov
test
dec
dec
or
negb
xchg
inc
push
stos
mov
out
insb
and
aam
xor
jno
aaa
lcall
rorb
lret
fcomp
cli
push
xlat
and
inc
loopne
mov
aad
and
xchg
shrl
aaa
leave
add
arpl
dec
in
popa
jge
aad
lds
dec
add
pusha
push
add
clc
cltd
adc
rcrl
rcr
sbbl
fistpl
lea
rclb
mov
out
cs
lcall
xchg
xchg
sahf
cmpsl
mov
test
xlat
pushf
dec
fs
or
or
scas
std
add
rcl
sub
mov
push
add
rcrl
mov
decb
jno
xchg
adc
sub
inc
adc
mov
sub
outsb
xor
out
inc
or
arpl
sub
mov
push
xchg
in
mov
subl
data16
mov
or
int3
jl
pop
fsubs
push
or
inc
pop
push
or
in
leave
or
jo
cwtl
aas
popa
cmp
pop
cltd
cmpsl
push
xchg
int3
mov
dec
roll
inc
ret
jmp
arpl
sbb
leave
sahf
jp
daa
jo
sub
fsub
inc
bound
lret
pushf
dec
jge
pop
out
andl
adc
ror
mov
pop
mov
or
inc
lret
sub
jmp
cmpsb
push
testl
cmp
cmp
int3
pushl
xor
lret
ret
adc
rol
cmp
lea
pop
push
push
in
jp
push
adc
pop
loop
fwait
jmp
loope
pop
add
repnz
jle
rcll
aaa
lahf
cmp
mov
add
mov
outsl
scas
push
shrl
or
addb
lods
mov
lret
add
insb
add
inc
pusha
pop
hlt
mov
ja
mov
loopne
out
aaa
cwtl
xor
aam
add
inc
mov
daa
adc
out
outsb
sahf
call
cmpsl
sub
scas
sbb
sti
pop
inc
rclb
and
pop
das
push
sbb
shll
mov
adc
orb
movsl
mov
cmp
int3
aas
cmpsb
out
pusha
inc
test
inc
imul
fucomi
roll
ljmp
ds
cs
push
or
outsl
pop
xchg
and
xchg
iret
hlt
sub
and
adc
jbe
dec
enter
in
pop
push
pop
andl
lret
push
inc
adc
bnd
aad
stos
roll
lret
jnp
add
xor
out
cld
int3
inc
divb
and
fistps
sbb
testb
push
repz
sti
neg
jecxz
mov
add
xchg
fdiv
fwait
bound
in
ja
loopne
iret
outsb
adc
dec
xor
push
lret
pop
sbb
xor
sbb
fwait
in
dec
outsb
test
gs
jb
push
aad
mov
les
hlt
mov
das
push
inc
inc
popaw
adc
pop
sbb
scas
fstps
inc
addr16
pop
sub
jmp
or
jle
mov
mov
fcomps
adc
mov
xchg
jo
push
push
dec
cmc
loopne
nop
inc
pop
outsl
adcb
and
cmp
popf
mov
adc
sahf
mov
clc
fs
cmp
dec
adc
xchg
push
xlat
inc
cmp
dec
stos
fnstsw
jno
test
fdivrl
jle
popa
repnz
outsl
xor
xor
fs
je
cwtl
adc
cs
xor
dec
test
or
xchg
in
test
popf
out
mov
in
sub
cmp
nop
cmp
inc
popa
adc
mov
mov
inc
adc
cmc
pusha
scas
cltd
mov
fs
shrl
xor
dec
inc
mov
add
mov
xor
mov
lods
mov
pop
jg
andl
rcl
fcomps
pusha
jl
add
scas
dec
mov
mov
mov
cld
popf
hlt
loopne
cld
es
sar
xchg
pop
and
xchg
lret
xchg
jbe
fdivl
iret
addb
sub
pushf
xor
or
dec
pushf
fldl
rorl
pop
shlb
mov
xchg
jp
pop
pop
and
jne
into
jmp
xlat
xchg
nop
dec
adc
xchg
pop
push
push
or
cs
fcompl
fwait
adc
mov
cmp
xchg
iret
cmp
sbb
cltd
and
popa
and
and
adc
cmc
out
fwait
in
cmp
mov
gs
sub
movsb
popa
sbb
int3
dec
and
or
cmpb
inc
les
stos
mov
pop
sbb
cmp
cmp
add
cli
notl
hlt
je
insl
dec
inc
repnz
arpl
cmp
ret
or
stos
nop
cmp
jmp
dec
adc
mov
mov
or
dec
mov
cmp
xlat
mov
push
mov
pop
mov
inc
and
das
pusha
movsl
pop
xor
gs
iret
hlt
enter
dec
int
adc
sub
ret
inc
mov
jg
adc
sbb
sbb
xor
shl
mov
sub
mov
addr16
push
loope
fidivrl
mov
movl
cmp
pop
and
stc
fistps
loopne
cmp
call
and
cmp
pushf
mov
mov
or
out
in
imull
rolb
pop
xchg
xor
inc
mov
dec
push
push
sbb
and
data16
imul
adc
add
xchg
inc
xor
loop
push
sub
stos
fucom
shlb
mov
cmp
pop
inc
sbb
test
and
ret
adc
sbb
mov
test
into
loope
je
daa
xchg
lahf
sub
outsb
xchg
sub
repnz
inc
cltd
les
xor
adc
testl
xchg
rcll
xchg
adc
jmp
mov
pusha
into
icebp
mov
cmp
dec
outsl
xor
push
cld
ret
cmp
jp
leave
jmp
adc
push
inc
mov
mov
rcrl
lcall
adc
scas
sub
ljmp
in
test
fcoml
mov
cs
jae
bound
xchg
inc
bound
xorb
xor
stos
xor
jmp
adcl
cmpsl
hlt
movsl
cmc
cmp
cmp
cmpsb
lret
inc
xchg
sbb
arpl
repz
loope
icebp
push
cmp
aad
lock
mov
iret
imull
in
shrb
adc
and
mov
stos
stos
ljmp
ret
mov
pusha
fstp
jo
jnp
pop
pop
dec
add
sarl
mov
xchg
mov
lret
or
mov
nop
sbb
lret
or
stos
std
push
xor
movsb
add
mov
scas
es
loopne
addr16
pushw
arpl
adc
dec
pop
jno
sbb
mov
push
cmp
jne
pop
sbb
mov
out
lret
test
cli
xchg
dec
lret
cmpl
pop
mov
repnz
scas
mov
pusha
xchg
into
cmpsl
xchg
mov
imul
or
mov
inc
jae
add
jp
jo
outsb
jmp
adc
mov
enter
xor
pushf
sahf
xchg
test
cmp
lds
lods
xor
xchg
mov
test
xchg
lock
dec
repnz
loop
adc
jle
aas
test
and
mov
daa
xor
inc
shr
movsl
ud1
push
and
shll
xchg
bound
ret
jecxz
addr16
int
sti
pop
enter
jl
in
mov
addr16
sbb
adc
hlt
outsl
es
cmp
sub
xchg
shll
fistl
xchg
sub
mov
push
mov
xchg
and
push
pop
fsubl
xor
xchg
xchg
xchg
sbb
in
repnz
popf
ret
stos
adc
push
mov
aam
lds
gs
mov
stos
xor
xor
push
nop
inc
pop
pop
add
jo
leave
outsl
je
cmp
mov
jnp
rep
and
xor
inc
dec
xlat
ficompl
jle
stc
sub
out
add
mov
cmpsb
loopne
jmp
nop
lds
mov
test
bound
in
cmpsl
std
cmc
mov
rolb
stos
xchg
jnp
jmp
pop
nop
push
inc
push
mulb
test
sbb
push
out
pop
mov
pop
fcoms
push
xor
cmc
push
sbb
add
mov
mov
jp
inc
shll
faddp
xchg
pop
iret
inc
cmp
xchg
adc
sub
daa
out
and
pop
jnp
les
push
push
leave
jae
mov
lea
divb
sub
aam
lea
push
jl
daa
pushf
outsb
mov
mov
pop
adc
jge
sbb
ja
mov
mov
addr16
jns
mov
aad
add
sti
push
add
lret
dec
push
pop
mov
pushf
xchg
das
and
sahf
insb
push
add
bound
jl
or
push
jp
in
adcl
and
int3
jmp
mov
dec
jo
test
in
sbb
adc
jl
ret
cmp
sub
push
push
xor
jae
add
cmpsl
push
sahf
lea
pop
bound
push
jae
inc
mov
or
jb
testl
hlt
stos
sub
aad
mov
xor
mov
and
mov
jo
jno
dec
leave
xchg
bsr
cmp
sbb
clc
mov
cmp
aam
mov
inc
and
aad
jb
ljmp
cld
mov
xchg
mov
cmp
or
jl
inc
pop
imul
dec
repz
stc
mov
repz
and
lahf
cmpsl
fptan
mov
mov
jo
aas
and
outsb
jno
and
lret
imul
mov
mov
out
push
das
and
out
xchg
lds
xor
cs
pop
mov
xlat
fsubrs
stos
cmp
sti
pop
outsl
or
aas
mov
lds
pop
ret
leave
loopne
mull
imul
push
flds
outsb
mov
aam
int
ljmp
pop
inc
imul
xor
push
mov
enter
mov
pop
xor
cmp
jns
xchg
stc
dec
mov
mov
sub
out
rclb
ret
aaa
rolb
push
ret
fcom
pop
mov
fistps
jmp
loope
mov
xor
sbb
je
jb
cmc
lods
sub
sbb
mulb
sub
in
fcoml
mov
nop
mov
out
cmp
push
pop
push
dec
ret
xchg
jne
aam
xchg
cltd
jne
push
mov
call
scas
arpl
out
out
cli
fwait
push
xchg
cmpsb
dec
jle
test
mov
push
sub
jmp
pop
rorl
adc
push
fimuls
stos
dec
and
xor
insl
jecxz
jne
or
adc
rcll
sbb
fwait
adc
and
outsb
add
dec
das
push
mov
nop
jno
int3
add
adc
mov
push
shll
out
mov
and
cmpsl
lret
jg
loope
iret
aas
sub
sbb
pop
fistps
cmp
sub
fs
add
hlt
sub
pop
xor
dec
rcrb
jns
enter
loopne
pop
or
sub
bound
nop
adc
shrl
mov
mov
mulb
dec
dec
aad
xor
dec
mov
mov
cmp
adc
out
jae
sbb
jl
test
mov
aad
cmp
cmp
inc
scas
or
addl
or
in
outsl
or
outsb
in
in
push
mov
mov
push
push
sbb
mov
pop
mov
and
inc
mov
lods
mov
sub
add
mov
imul
loope
in
jns
jle
push
inc
inc
push
movsb
jo
mov
dec
pop
add
push
or
sbb
mov
push
dec
shlb
mov
push
mov
aaa
imul
ds
inc
add
jno
mov
sub
dec
push
mov
stos
adc
mov
or
iret
push
rorb
insl
mov
btcl
mov
jp
ss
jne
dec
mov
jo
int3
test
and
pushf
mov
popa
and
pop
push
pop
ja
pop
mov
ja
call
mov
sub
inc
sub
dec
push
and
pushf
push
cmp
pop
test
cmpsl
sbb
cwtl
js
push
jbe
and
stos
in
stos
roll
shll
out
addr16
mov
outsb
xor
mov
int
xchg
int
aas
arpl
lods
imull
inc
adc
pushf
lahf
inc
js
cmpsl
leave
dec
in
inc
leave
in
enter
in
mov
aad
movsl
jb
jae
fdivs
or
scas
or
sub
lcall
sbb
in
cmc
data16
or
test
insb
cltd
xor
sub
out
stos
aam
add
aaa
xchg
or
dec
pop
enter
scas
movsl
fnstenv
int
xchg
fisttpll
movsb
and
ret
mov
jbe
or
dec
cmc
xchg
mov
das
push
push
outsb
enter
pushw
loope
mov
inc
xchg
out
xchg
jecxz
mov
rcrl
pop
dec
push
out
push
mov
in
js
cwtl
xlat
push
xor
and
stc
inc
imul
jnp
movsb
lret
xor
pop
les
cmp
push
cmp
icebp
jl
jae
cli
out
ds
ret
test
gs
push
out
loopne
sahf
push
sub
xor
and
pop
mov
mov
push
jb
scas
fs
push
or
int3
icebp
sbb
mov
dec
pop
imul
dec
inc
cmc
push
mov
and
push
ret
or
test
sahf
xchg
cmc
fldcw
mov
andb
mov
insl
loop
movsl
sbb
lahf
add
and
and
jp
push
sbb
inc
add
sbb
call
or
dec
bound
cmpsl
movq
sarb
add
push
dec
mull
jmp
mov
mov
cmc
or
adc
xorb
jl
sub
push
fidivrs
out
adc
rcrl
addr16
cld
cwtl
sti
xor
test
sbb
movsb
lret
lret
imul
pop
adcb
mov
stos
inc
add
inc
mulb
daa
sahf
daa
test
stos
mov
adc
push
pop
cltd
dec
scas
stc
mov
orl
pop
lock
fcomps
mov
fnstcw
nop
inc
in
mull
fcomps
std
loop
jp
xor
add
movb
jp
and
dec
popf
out
push
mov
or
pop
pop
inc
xchg
inc
dec
pop
icebp
or
push
fcoml
cli
lret
sub
mov
cmp
xorb
stos
mov
pop
jo
sub
cmpsb
pop
js
daa
shlb
lock
sti
mov
mov
gs
das
movsl
jb
dec
inc
mov
adc
mov
xchg
lods
rclb
or
push
ficoms
popf
lar
dec
xor
and
repz
jne
lods
ja
insb
xchg
leave
add
enter
out
mov
xor
push
mov
in
int
sti
sbb
clc
cmpsl
cmpsl
sbb
dec
add
jo
jmp
lock
cmp
js
and
jae
lahf
and
sti
pusha
aas
push
cld
pushf
cltd
clc
adc
or
insl
in
dec
jge
and
and
jno
rorl
sub
pop
and
pop
cltd
inc
push
mov
ljmp
push
ja
outsl
mov
lock
sub
out
xor
pop
push
cld
sub
jge
xor
mov
ds
add
mov
jmp
cmp
int
dec
pop
idiv
push
dec
cmp
ret
jno
cmpsl
hlt
pop
push
xchg
jae
mov
pop
cs
cltd
sar
xchg
dec
lds
mov
push
xlat
dec
xchg
inc
mov
outsb
push
xor
or
test
iret
sub
aad
lock
inc
cmpl
mov
fs
add
int
mov
orl
adc
push
or
lcall
or
loop
pop
mov
scas
mov
xor
add
bnd
cmp
dec
shll
bound
dec
loopne
xlat
rorb
bound
push
pop
jns
outsb
fs
outsl
add
ror
mov
lds
mov
push
jmp
rclb
pop
jmp
xchg
test
cmp
push
out
shll
mov
sub
sbb
fwait
sbb
aam
push
lahf
mov
arpl
push
and
jmp
pop
testl
lods
add
add
cmp
test
push
mov
pop
test
cmp
or
cmp
pop
leave
fs
or
gs
stos
and
out
sbb
rcrb
negl
and
fisttpll
insb
dec
stos
scas
sub
call
rclb
push
data16
push
cmp
mov
push
in
loop
or
fnstsw
mov
mov
jnp
jg
sbb
xor
mov
in
scas
cmp
outsb
pop
or
cmp
divb
loop
loopne
jl
lods
clc
sub
cmpsb
loope
sub
fimuls
mov
lret
mov
dec
jge
aam
data16
int
icebp
or
dec
add
test
shrb
addl
cli
cmp
mov
add
aam
rcl
adc
jle
jmp
mov
xchg
shl
test
dec
mov
loope
mov
xlat
jp
outsb
push
subl
inc
adc
inc
lock
pop
fnstsw
fisttpl
cltd
push
arpl
cmp
pop
xlat
adc
push
jns,pn
mov
xor
int3
pushf
andl
inc
arpl
adc
xchg
mov
and
dec
mov
pop
mov
sbb
push
push
dec
push
mov
push
sub
aad
xchg
mov
and
call
mov
xorl
in
dec
test
push
xchg
rorl
sahf
cmp
mov
inc
pop
cmp
cmp
rcrb
jp
mov
pop
cli
loopne
jmp
loopne
jb
push
mov
std
mov
add
mov
stos
pop
sbb
inc
scas
mov
xlat
daa
ss
push
add
in
aas
inc
mov
xlat
ja
stos
jle
xchg
mov
jbe
jnp
jmpw
ret
out
cmp
rclb
cltd
fisttpl
inc
pushf
mov
fdivs
daa
and
fisubrs
imul
jecxz
xchg
cltd
inc
pushf
ds
xchg
jmp
lds
adcl
adc
sub
fs
test
test
test
outsb
lock
lret
mov
clc
test
pop
gs
inc
sub
loopne
sub
mov
pop
mov
movsl
sahf
ret
cmp
hlt
andb
movsb
aam
sarb
cmp
test
mov
call
pop
adc
imul
insl
fdivl
scas
push
lods
or
sbb
fdiv
out
pop
mov
mov
out
fnsave
sub
jb
mov
cmp
out
push
xchg
fdiv
aaa
imul
mov
mov
inc
or
arpl
mov
and
sahf
jns
sti
out
ljmp
outsb
mov
xchg
and
sub
fdecstp
xchg
cmp
shlb
out
icebp
das
or
std
icebp
and
loopne
test
into
xchg
mov
ja
imul
sub
push
inc
mov
test
mov
incb
sbb
sarl
and
inc
lret
sahf
in
pop
ss
test
sbb
insl
jno
cltd
mov
lock
xchg
aad
cld
in
push
pop
inc
inc
repnz
dec
test
mov
push
xchg
and
leave
push
or
ljmp
out
flds
mov
jae
mov
pop
lcall
lcall
in
insb
or
pop
push
xchg
cld
push
push
cltd
mov
insb
xchg
orb
xchg
movsb
xor
test
fcoms
test
cmp
pop
ror
test
jbe
icebp
xchg
mov
push
jle
ljmp
add
ret
lcall
push
movsl
add
xchg
fisubrs
or
mov
cmp
cs
out
push
cs
test
nop
hlt
xchg
sbbl
rolb
mov
shll
daa
cmpsl
mov
fsubrs
outsl
test
sub
sub
gs
xor
test
push
jbe
les
sbb
out
je
jmp
fcmovu
xchg
arpl
mov
das
dec
mov
xor
mov
fcomps
dec
cmc
addr16
test
sbb
cli
stc
xchg
push
xor
pop
push
stc
inc
mov
jle
ret
inc
adc
mov
adc
outsb
dec
imul
push
cmc
lret
outsb
inc
std
pop
test
xor
aad
std
jnp
jno
jns
or
outsb
mov
arpl
ss
jns
mov
data16
mov
pop
mov
or
pushl
xchg
std
mov
cmp
mov
pop
push
add
aas
cmp
inc
push
adc
jb
cmc
adcl
mov
notl
dec
scas
lods
jg
ja
aad
cmpsb
stos
adc
jnp
divl
stc
dec
mov
mov
mov
repnz
ss
es
jmp
xor
cmp
int3
idiv
loopne
fstl
jae
dec
test
cmp
jmp
jns
outsb
xor
or
add
push
push
dec
mov
sbb
aam
dec
pop
jae
out
xchg
push
test
pushf
push
and
dec
clc
push
fiadds
pop
ds
jb
mov
or
or
xchg
lret
adc
or
cmc
loope
add
ljmp
push
sub
repz
pop
xchg
mov
push
or
lcall
jl
adc
xchg
ds
fnstenv
stos
adc
sub
fnstcw
cwtl
jecxz
xorl
hlt
cmpsl
pop
or
push
xchg
xlat
out
fstps
sahf
loopne
aaa
pusha
pop
ljmp
jno
lds
mov
adc
cltd
hlt
sbb
bound
or
insl
mov
jb
push
stos
shl
sbb
lahf
xor
je
repnz
sbb
or
cltd
ret
orl
mov
dec
and
aas
mov
and
add
pop
out
xor
leave
lret
ret
js
jns
or
lahf
and
popf
or
loop
jp
imul
daa
push
sbb
jl
xor
inc
dec
adc
jle
push
in
dec
test
xchg
and
jp
xchg
or
icebp
xor
cmp
les
pop
adc
mov
fdivl
test
or
inc
cld
jae
mov
in
xchg
jo
rorl
fwait
cmp
test
mov
test
dec
imul
out
int
andl
xor
or
cmp
xchg
in
in
sub
cmp
xchg
int
jo
enter
int3
aad
daa
ret
push
mov
push
or
pop
aad
bound
pop
inc
push
add
mov
pop
test
enter
mov
ret
jb
lods
ds
sub
ds
or
stos
add
adc
out
push
jbe
stos
cld
fs
mov
scas
push
add
xor
inc
pop
repnz
lods
sahf
lahf
sbb
mov
ss
xlat
repnz
lods
push
dec
add
adc
dec
lret
dec
mov
shlb
cltd
gs
fsts
lods
xchg
push
hlt
sbb
icebp
sahf
addb
jne
mov
xchg
push
mov
sbb
cmpsb
pushf
popa
adc
inc
and
pop
push
mov
xchg
cld
jecxz
sahf
fildl
lahf
mov
and
sti
call
cld
xchg
icebp
push
inc
or
icebp
or
jge
scas
cs
mov
aas
cmc
pushf
mov
aad
mov
sbb
mov
fs
lret
mov
xchg
jle
lcall
ret
pop
data16
jo
pop
ret
addr16
dec
push
es
xchg
ljmp
leave
ret
hlt
jbe
adc
push
int3
mov
repnz
xor
mov
shl
out
inc
ljmp
ret
inc
push
popa
int3
xchg
jmp
sbb
inc
dec
sbb
xor
inc
sub
insl
shrl
pop
or
mov
or
sbb
cmp
push
sti
pop
repz
jg
dec
lahf
mov
sub
and
cmp
outsl
lret
dec
out
cmp
jno
inc
shl
or
xchg
xlat
push
push
pop
mov
insl
jecxz
mov
arpl
sti
dec
jg
mov
test
filds
add
aad
movsb
cmp
xor
repz
cmp
insl
xchg
add
fiaddl
in
dec
jge
sub
push
loope
mov
into
mov
sub
sbb
adcl
mov
jecxz
pop
repz
push
ja
pop
icebp
mov
push
pop
mov
lds
popa
add
seto
sub
test
add
test
pop
in
mov
stos
push
push
sbb
or
mov
mov
dec
inc
rorb
xlat
dec
mov
add
mov
mov
adc
push
jp
icebp
dec
loop
xchg
dec
fwait
movsl
or
or
in
sbb
mov
cmp
push
cwtl
aad
sbb
lock
cmpsb
ljmp
test
into
ficoml
mov
idiv
dec
jbe
mov
add
outsb
enter
insb
ret
ds
xor
fisubrl
repz
lea
call
ljmp
jp
test
push
cs
fmulp
lods
movsb
fisttps
addb
leave
mov
jmp
shlb
aad
pop
loop
addl
movsb
adc
bound
faddl
jno
into
xor
push
cmp
mov
jnp
cmpsl
pop
xlat
add
mov
imul
mov
push
rcll
js
shll
pushl
bound
pop
jno
fdivrl
or
jne
xor
icebp
jns
ret
push
lret
repz
stos
push
je
jbe
cmp
add
mov
bound
mov
rcll
shll
cmp
mov
daa
xchg
mov
add
or
cwtl
imul
test
lea
in
adc
inc
ljmp
push
push
mov
jmp
add
stc
or
arpl
ret
mov
cmp
and
hlt
mov
inc
xor
hlt
mov
adc
xor
movq
or
xlat
lret
jp
lcall
shrl
mov
jae
push
xorb
in
jmp
mov
stc
jbe
adc
lods
repnz
and
mov
leave
inc
cmp
cs
lahf
fmuls
xchg
pop
pushf
dec
push
adc
dec
lods
push
bound
lret
jge
loop
jle
dec
or
mov
and
pop
cmp
arpl
pandn
xchg
adc
jp
int
or
push
mov
orl
ljmp
sub
jp
jbe
mov
push
aaa
mov
aam
xor
mov
or
popf
jns
dec
lds
inc
das
test
jecxz
js
mov
push
mov
push
dec
pop
fs
inc
add
pop
xor
notb
xchg
or
les
out
aam
int
mov
test
pop
and
aas
adc
cs
sbb
test
cmp
pop
pop
pusha
outsb
movsl
pusha
lods
out
dec
daa
cmp
test
add
mov
andl
out
xchg
sbbl
sbb
xlat
aaa
loope
and
fidivl
rcll
push
pop
cld
das
mov
xlat
test
or
fldt
stos
ds
sbb
idivb
jge
add
xchg
dec
incl
sti
loop
push
movsb
addr16
xor
pop
inc
in
in
das
xchg
jno
xor
sbbb
add
in
loop
sbb
out
movsb
nop
movsb
cmc
or
jb
jnp
sbb
je
mov
xchg
xchg
or
mov
cmp
xor
scas
imul
sub
stos
jno
inc
hlt
stc
mov
or
add
mov
sbb
movsb
frstor
inc
fdivs
das
mov
push
insb
test
ljmp
out
dec
and
roll
mov
cmp
stc
push
jl
movb
mov
insl
adc
dec
jmp
xorb
popa
into
shlb
btr
sub
and
in
lock
pusha
insb
imul
repnz
fcmovne
fiadds
add
repz
ljmp
pop
mov
sub
insl
aam
ja
int3
popf
xchg
movsl
jo
in
push
scas
in
pop
push
xlat
fldenv
rorl
inc
aam
sbb
cmpsl
pusha
leave
fildl
sbb
test
int3
jecxz
outsb
jo
pop
add
popf
fisttpll
hlt
jmp
sub
cli
jge
sub
rorb
testl
mov
jns
test
jl
mov
pushf
push
dec
iret
mov
cmp
xchg
jl
cmp
pop
nop
repz
cwtl
mov
mov
jecxz
popa
mov
jno
lret
iret
xchg
push
and
dec
xchg
out
jnp,pt
clc
dec
dec
out
cld
ds
movsl
dec
popa
mov
ficomps
lods
sbb
clc
cs
pop
or
outsb
outsl
push
jno
aas
pop
sbb
inc
stc
xor
jne
jbe
mov
mov
inc
fdivl
ss
push
clc
mov
loope
push
std
leave
icebp
xchg
in
test
mov
cmp
popa
mov
or
jbe
ret
and
pop
cmp
add
insb
les
push
aas
repz
leave
es
icebp
ljmp
push
dec
or
jp
dec
cltd
jge
loopne
das
lahf
add
movsl
fldl
jae
iret
sub
outsl
psubw
shlb
cmp
or
test
ret
adc
ss
pop
int3
subl
aad
lahf
out
sub
movl
adc
mov
xchg
pusha
adc
lds
lock
cmpsl
sahf
pop
bound
lods
mov
cmpsl
mov
push
scas
sbb
movsb
inc
sub
sbb
inc
and
aaa
adc
adc
movsb
loope
insl
cmp
jle
xor
add
xchg
stos
pusha
sbb
and
or
xor
out
ss
popa
ja
cmp
rolb
mov
movsl
mov
les
incw
arpl
enter
pop
popf
lock
test
push
push
or
jae
xchg
in
fwait
popa
push
sub
add
pop
in
mov
std
mov
mov
xor
mov
and
xor
ja
lret
les
sub
pop
std
sub
pop
mov
bsf
and
mov
inc
repz
inc
fdivrs
lahf
xor
xchg
dec
add
push
cli
aaa
sub
cmc
sub
cs
mov
ret
xchg
xchg
outsb
in
or
and
inc
mov
out
jnp
rcr
mov
pusha
xchg
mov
test
pop
mov
inc
push
pushf
pop
das
inc
pop
insb
push
mov
subl
jmp
cltd
fs
xor
add
mov
iret
sahf
hlt
loope
test
sub
in
mov
pop
cmp
lret
jae
enter
mov
adc
fld
fwait
outsl
jecxz
scas
mov
mov
shrb
cmp
pop
sub
jns
jo
sbb
cwtl
and
into
insl
push
dec
xchg
mov
sbb
pop
lea
dec
mov
scas
cli
in
pop
out
xor
jno
mov
dec
sbb
jl
adc
dec
dec
pusha
out
popl
sarl
subl
inc
in
loope
dec
xchg
hlt
mov
ss
mov
push
in
jo
adc
xchg
push
jo
jb
cmpsl
jecxz
mov
jbe
mov
loop
jl
jne
add
icebp
jge
imul
dec
pop
aas
fs
and
xchg
pminsw
pop
sbb
push
cmpsb
inc
mov
mov
in
in
dec
adc
sarl
mov
les
pop
and
fldenv
loopne
and
jae
adc
sbb
cmp
cltd
int
sbb
jbe
or
lahf
lret
outsb
icebp
loope
leave
push
and
lret
xlat
call
scas
push
test
inc
mov
mov
inc
std
xchg
mov
aas
adc
lds
mov
xchg
mov
movsb
sub
mov
mov
xchg
testl
vmread
filds
push
out
mov
xor
xchg
std
mov
cwtl
dec
test
adc
and
and
push
jae
jo
or
jmp
sub
jnp
pop
cmpsb
test
adc
popf
imull
mov
bound
xor
std
sarl
push
mov
mov
sbb
xchg
sub
pop
test
leave
mov
fiaddl
icebp
or
and
in
and
pop
in
dec
pop
cmp
scas
test
repz
jl
sub
xlat
aas
push
into
insl
cmp
jg
xchg
std
cmpsb
mov
loop,pn
je
mov
es
bound
mov
jno
add
repnz
xlat
mov
push
or
jmp
mov
orb
mov
or
push
cli
mov
jp
out
ss
lret
popf
dec
out
mov
loop
jno
hlt
mov
rorb
cld
int3
pop
sti
sub
fidivl
mov
cld
mov
jae
out
lea
cmp
icebp
lahf
xorb
push
test
ror
mov
test
mov
cmpb
roll
ret
xor
dec
mov
fwait
loope
shll
es
lret
rclb
ds
mov
xor
cld
mov
je
sub
cmp
push
out
or
mov
dec
xor
insb
mov
int3
or
aaa
jnp
push
out
mov
scas
inc
mov
or
stc
mov
arpl
adc
or
dec
aas
pushf
lahf
enter
lock
fucomip
out
test
inc
jo
add
jl
cmp
inc
push
cli
add
pop
js
outsl
jns
out
insb
xchg
adc
gs
test
adcl
sub
mov
outsl
bound
sub
xchg
dec
test
mov
imul
cmp
mov
pop
push
roll
testl
iret
idivl
lret
push
mov
in
out
shrl
or
add
fistpl
popf
sub
pop
icebp
mov
js
xchg
xchg
lods
lret
enter
lcall
and
push
push
push
inc
andb
rolb
fmul
insb
jmp
frstor
xchg
inc
xor
stos
rorl
jo
mov
cmp
xlat
dec
jae
scas
jle
fldenv
sbb
test
mov
xchg
insb
xchg
dec
push
mov
or
ret
or
sti
sub
pop
mov
mov
pop
dec
adc
pop
or
mov
inc
xor
xor
sbb
dec
push
pop
pop
pop
mov
mov
test
lock
ss
sub
sub
dec
in
adc
cmpsl
daa
adc
ss
pmulhw
mov
cmp
sti
nop
adc
fisttpl
cmp
fs
rcll
stc
in
sub
popf
inc
sub
add
xchg
sub
imul
in
fnsave
daa
cltd
mov
dec
or
push
mov
dec
pop
loope
rclb
lods
pop
outsb
add
jl
mov
adc
test
push
rcrb
rol
sbb
xchg
mov
repnz
hlt
xchg
push
in
sahf
adc
arpl
test
sub
lahf
in
sub
daa
mov
dec
dec
mov
cli
mov
rol
je
leave
das
xchg
repnz
add
jne
stos
push
aad
inc
push
xlat
push
outsb
rorb
insl
mov
xorl
fimuls
or
jmp
in
js
sub
mov
and
enter
cmp
push
mov
in
xor
sbb
xchg
jle
jnp
leave
sbb
sub
mov
or
aas
jnp
mov
mov
jle
xchg
rcrl
or
jp
loope
inc
sbb
clc
fisubrl
inc
mov
int
sbb
cmp
inc
imul
ficoml
push
insl
std
addr16
sbb
xor
scas
cmp
hlt
push
sbb
in
mov
mov
mov
mov
mov
add
popf
adc
lahf
jo
or
rorl
cwtl
nop
outsb
outsl
lahf
and
push
and
sti
mov
pop
loope
mov
push
push
nop
jecxz
mov
mov
xor
cmpsb
inc
jge
push
xlat
inc
xchg
or
movsb
lret
dec
sub
aaa
cmc
lret
pop
popf
shl
arpl
mov
clc
loopne
pop
daa
bound
xchg
ja
shlb
fisubs
loope
aas
push
sub
cwtl
jo
fcoml
loope
inc
push
cs
push
xor
lret
jns
and
cmp
jge
mov
negl
aas
cmpl
repnz
cmp
mov
pop
push
push
leave
and
sbb
stos
jecxz,pn
adc
stos
ds
shlb
or
sub
adc
aad
sub
jo
fld
pusha
stos
inc
fidivrs
mov
inc
pushf
imul
in
add
mov
dec
aam
or
lods
dec
call
push
sbb
jmp
das
mov
jo
cld
cli
and
jb
in
jns
pop
iret
sbb
and
ficoml
push
mov
mov
dec
push
sub
pop
add
icebp
xor
popa
add
das
dec
and
sti
cmp
xor
inc
js
pop
or
push
iret
mov
push
cmp
addb
inc
push
les
add
jp
xchg
insb
inc
sahf
test
xor
out
jo
mov
mov
das
xorb
add
out
mov
dec
ljmp
sub
adc
repnz
jmp
cwtl
cmp
jbe
insl
loopne
xor
or
inc
push
call
inc
pusha
cmp
push
jne
test
add
loope
cmp
xor
aaa
clc
or
pop
sub
add
sub
lcall
loope
fcompl
into
inc
out
or
in
adc
notb
xor
add
mov
mov
es
lret
push
bound
leave
mov
dec
shrl
aad
aas
pop
sub
sub
fs
add
cmp
sub
pop
lock
popa
add
xchg
imul
sbb
jne
int3
pop
int
cli
lcall
jle
lods
ss
push
cmpsl
cmp
fstpl
mov
orl
fdivl
sbb
push
cmp
jmp
or
cmpsl
pop
push
sti
push
arpl
hlt
jbe
subb
cld
cmpl
push
sar
into
pop
stos
cli
call
xor
ja
testb
xchg
mov
or
test
aas
inc
adc
pop
pop
xchg
ficompl
test
adc
and
dec
push
xchg
jnp
ljmp
shl
push
fwait
xor
push
jmp
aas
mov
mov
jae
imul
pop
sbbl
sahf
ss
push
aaa
or
pop
sub
add
push
dec
mov
ror
jmp
sub
push
cli
aam
add
bound
mul
mov
das
cmp
ss
mov
dec
cmp
push
int3
inc
xor
mov
mov
pusha
fs
nop
sub
push
scas
pop
sub
pusha
lods
pop
incl
cmc
pop
mov
rcrl
or
mov
mov
mov
in
jecxz
push
stos
pop
imul
mov
adc
dec
nop
mov
sarb
push
cltd
cltd
or
add
pop
push
js
fdivl
test
dec
les
fnstcw
add
and
xor
or
mov
out
ljmp
pop
jmp
out
mov
pop
sbb
mov
push
adc
jle
mov
adc
bnd
add
aad
ds
adc
fwait
and
mov
lcall
inc
mov
sbb
shlb
fnop
not
lret
cmp
das
loope
fnstcw
loopne
xor
and
arpl
ror
pop
push
adc
dec
stc
ja
jg
push
stos
sbb
decl
push
lea
test
pop
lock
pop
add
or
adcb
adc
cli
push
gs
mov
rcrl
mov
push
sarl
push
inc
popf
mov
out
jnp
push
sub
gs
mov
loope
pop
dec
iret
repnz
mov
sbb
loope
popf
lret
stos
inc
lock
int3
sub
sub
push
into
mov
mov
incb
jl
std
mov
sbb
sbb
cmp
test
adc
jo
and
fsubrl
jae
add
imul
ja
xchg
cmp
out
lock
scas
pusha
jmp
jle
pop
mov
loop
inc
xor
popl
cmpsl
outsl
push
sub
cmp
popf
aam
mov
pop
push
sahf
inc
inc
fs
jae
push
xchg
pop
push
sub
cmpsb
bound
scas
mov
sahf
cmp
bound
add
fdivs
mov
je
insb
push
pop
pushf
mov
lret
ljmp
enter
xor
fidivs
mov
xchg
lods
outsb
cs
imul
repnz
dec
cmc
xor
push
fcoms
cmp
in
addr16
jmp
pop
nop
xchg
xor
mov
pop
mov
iret
in
popf
rorb
lahf
jmp
jg
push
fiaddl
adc
shl
sbb
out
mov
dec
cmp
jmp
inc
push
push
in
out
popf
mov
sbb
xchg
xchg
enter
and
aad
mov
sub
and
pop
mov
testl
in
es
adc
roll
xchg
and
add
fistps
jge
cmpsb
test
push
loopne
add
push
or
push
shlb
mov
push
inc
ficoms
test
push
imul
push
xor
loope
push
xchg
add
xor
mov
xor
stos
add
xchg
pop
cltd
mov
mov
and
and
cmp
dec
add
fs
push
dec
and
jge
cmpsl
mov
imul
push
cmp
rcrl
rolb
cld
stc
inc
cmp
loop
rorb
inc
sbbb
lods
cmc
mov
lods
mov
xor
sub
cmpsl
cmp
and
imul
mov
mov
pop
notb
out
shl
pop
lret
xor
and
test
mov
pop
sub
fnstsw
mov
jb
mov
dec
mov
dec
cmc
cs
mov
xchg
int
data16
in
sub
scas
popf
cmp
rolb
scas
ds
movsb
test
shlb
push
xchg
xchg
fisubrs
push
xchg
mov
xchg
mov
lcall
adc
adc
add
mov
outsl
pop
fnsave
test
int3
rol
cmp
xor
sbb
jg
add
call
addl
xchg
pop
sahf
mov
mov
or
xchg
imul
mov
insb
sbb
or
aas
jg
sahf
fldenv
add
shrb
mov
call
sbb
lea
cli
inc
pop
pushf
mov
fildl
xchg
aad
jbe
dec
mov
dec
and
xchg
or
cmp
cld
call
sbb
or
sbb
push
pop
xchg
mov
dec
pop
pop
lret
push
arpl
fnstenv
or
loop
xchg
ds
dec
add
ljmp
stos
cmpsb
loop
hlt
mov
mov
shlb
adc
repnz
mov
xor
mov
enter
dec
enter
lea
cmp
xor
add
mov
lret
jmp
jns
ror
pop
jl
xchg
jecxz
push
iret
xchg
call
fdivl
nop
cwtl
jmp
ss
mov
data16
out
jno
fmulp
sbb
and
or
dec
std
dec
jp
mov
mov
push
jbe
test
lcall
xor
out
xchg
mov
in
pop
jmp
sar
pop
sbb
pop
sbb
cmpsb
mov
cmc
xor
mov
pop
pop
cltd
sub
cmpsl
std
lret
mull
loop
inc
ds
and
or
mov
mov
jle
andb
sbb
sahf
mov
mov
jg
dec
or
test
cltd
or
xchg
ret
sub
sbb
xchg
ds
sbb
ljmp
push
push
test
cmp
pop
mov
or
xor
dec
xchg
mov
push
fidivs
mov
roll
mov
int
dec
fucomi
xor
rorl
pusha
push
adc
mov
adc
ljmp
mov
lret
sub
jecxz
pop
xor
andl
hlt
inc
rclb
bound
and
add
xor
push
fldl
repz
fistpl
mov
mov
jnp
and
ss
push
xchg
jns
mov
xor
mov
mov
out
loopne
or
sub
daa
test
pop
push
lahf
sbb
dec
out
adc
into
test
add
loopne
pop
mov
push
rcll
icebp
insl
push
mov
adc
mov
mov
adc
dec
xchg
daa
andb
xchg
cmp
and
mov
inc
sub
jne
std
ljmp
test
outsb
add
movsb
sub
xor
out
lock
faddp
inc
xchg
sbb
pop
cmp
movsl
push
and
cwtl
lret
in
pop
sbb
push
enter
dec
or
into
aas
sub
push
pushf
push
mov
rolw
mov
add
adc
cmp
test
mov
jno
sbbl
push
mov
ffree
xchg
mov
or
gs
sahf
cli
pop
fmul
cmp
add
mov
test
in
or
adc
aad
xchg
es
int
lock
in
fsubrs
imul
add
sbb
mov
pop
add
sahf
sarl
iret
arpl
xchg
dec
in
aaa
inc
pop
insb
pusha
or
pop
inc
push
out
hlt
imul
cs
lea
stos
divl
inc
sbb
scas
iret
stc
mov
mov
test
in
ja
jbe
sub
mov
int3
jb
add
mov
out
lcall
fnstcw
enter
cmp
imul
cmpsb
sbb
mov
push
add
pusha
lea
imul
test
cmp
adc
enter
or
jecxz
jp
pop
and
push
insb
sub
jmp
xor
loopne
xchg
jl
xor
dec
push
loopne
test
or
call
bound
ja
sbb
cmp
nop
cli
mov
lock
rcrl
cmp
push
insl
and
pop
stos
decl
xor
sub
push
jno
xchg
andb
and
pop
jecxz
sbb
or
ja
cmp
leave
fs
scas
inc
imul
popa
pop
ja
mov
jl,pn
push
cltd
mov
mov
jg
shlb
mov
jecxz
adc
test
jge
fistpll
call
add
adc
cmpsb
push
mov
pop
push
pop
dec
cwtl
dec
and
cmp
push
adc
cmp
pop
int3
adc
addr16
mov
sub
cmp
movsl
mov
pop
std
cltd
inc
and
xlat
add
mov
jmp
call
jo
dec
inc
cltd
xchg
sbb
xchg
call
enter
add
push
push
xchg
aad
dec
xlat
xchg
mov
jb
inc
or
sub
jae
mov
lret
push
jb
push
loopne
das
lock
clc
push
mov
mov
sbb
outsl
cwtl
cmp
push
or
rcr
or
fcomip
out
lret
movsb
sbb
loope
popf
pusha
push
stos
jno
inc
pop
neg
mov
jno
jmp
or
sbb
mov
loope
cmp
push
push
mov
jp
jae
push
mov
faddl
adc
dec
dec
mov
mov
jle
int3
nop
add
loopne
add
push
shl
jge
pop
cli
jae
shrl
and
inc
jle
cmp
mov
scas
cmpsl
xchg
xchg
mov
pop
xchg
ss
xchg
insl
jnp
sbb
jp
and
inc
adc
mov
xchg
jecxz
jp
in
sbbb
and
ret
jmp
sub
add
out
jnp,pn
inc
bound
mov
mov
sti
ds
mov
xor
or
push
push
sub
fsubrl
dec
add
sbb
fcomps
fucompp
and
xor
lret
in
mov
jle
mov
dec
push
xchg
mov
aaa
push
lods
ret
sub
fldl
addr16
inc
jbe
decb
cmpsb
ja,pt
and
out
rcl
std
or
test
call
and
mov
fs
adc
lods
popa
out
mov
jo
gs
lahf
into
jp
mov
es
mov
sbb
jmp
hlt
or
mov
add
sub
xchg
pop
add
push
pop
decl
int3
clc
stos
jmp
pop
mov
mov
test
mov
mov
or
cmp
int3
sar
ja
jae
pop
add
lahf
dec
pop
cltd
mov
in
sub
clc
mov
ljmp
fiaddl
cltd
cwtl
mov
dec
je
fs
pusha
clc
push
imulb
cmpl
adc
fbld
xor
aam
mov
fsubrs
xor
bound
lods
fwait
add
insb
cwtl
sbb
inc
pop
js
movsl
shll
xchg
daa
in
lret
push
push
pop
add
nop
es
and
add
xchg
jne
pop
sub
sbb
jns
mov
ljmp
and
cmc
adc
les
ljmp
mov
imul
shlb
mov
xor
dec
aad
orl
js
je
jg
lods
mov
and
arpl
push
int3
xchg
pop
mov
cmpsl
dec
insl
mov
lret
and
add
jecxz
cltd
arpl
jno
stos
outsl
js
pop
repnz
adc
insl
nop
mov
mov
mov
sti
push
call
add
xchg
dec
xor
leave
lods
mov
movsl
lea
jl
aam
fidivl
mov
popf
aam
mov
je
movsb
sbb
out
imul
stos
cmpsl
aad
cmp
ljmp
or
or
ljmp
aaa
gs
pop
or
out
int
mov
jbe
jns
iret
jnp
or
or
sub
ja
cmc
dec
fdivs
pop
mov
mov
lea
iret
mov
int3
shrb
adc
vfrczpd
bound
xor
mov
imul
xor
jnp
mov
lret
icebp
hlt
fwait
xchg
xor
jge
and
cmp
mov
pop
mov
cmp
nop
mov
int
imull
adc
insl
addr16
jmp
mov
adc
in
mov
cmp
in
and
lret
adc
jge
mov
push
mov
xchg
or
addr16
mov
rcrl
nop
jns
insl
push
int
into
call
daa
imul
enter
test
mov
push
xor
add
dec
out
loopne
jp
dec
lcall
xor
push
xchg
or
add
add
mov
aas
and
sub
or
es
cmp
push
arpl
or
xchg
cmpsl
inc
fdivl
sub
lods
mov
pop
shlb
sbb
arpl
fadds
push
xchg
outsb
sbb
and
test
fwait
jl
lcall
pop
xchg
xchg
ror
inc
les
xchg
jbe
icebp
addl
push
dec
sub
mov
jns
pushf
pop
cmp
xchg
mov
jne
or
inc
fs
lods
testl
dec
imull
enter
je
jmp
sti
jecxz
popa
mov
mov
shll
mov
push
mov
ds
xor
ror
jg
sub
push
shrb
movsb
test
add
mov
xchg
in
clc
repz
xor
jne
push
add
pusha
insl
cmc
lahf
push
mov
jle
das
les
popf
mov
adc
jns
jnp
xchg
mov
out
mov
jns
dec
push
cmp
mov
push
clc
mov
jne
scas
rol
mov
dec
cli
jo
push
lock
out
cs
mov
stc
mov
dec
ljmp
lea
sub
mov
mov
test
push
out
adc
xchg
mov
sahf
icebp
push
shrl
xor
cmp
and
lahf
ss
test
dec
scas
das
sbb
ja
add
test
jg
add
add
mov
push
bound
stos
jne
ljmp
jg
push
mov
cmp
mov
sbb
test
aas
cmc
jo
mov
pop
pushf
sbb
mov
xchg
movsb
mov
in
arpl
sahf
nop
add
adc
mov
lret
js
xor
lcall
scas
xchg
decb
fstpt
push
mov
lods
aad
std
xor
orl
inc
xor
nop
movsb
rcr
lods
add
mov
mov
xor
or
rorb
loope
lds
cmpsl
jo
mov
leave
shll
mov
shrb
dec
push
ds
jb
push
sbb
mov
cmp
aas
pop
scas
mov
mov
pushf
and
sbb
cmp
lcall
cltd
inc
repz
add
xchg
adc
mov
xchg
jge
inc
push
mov
in
lods
mov
push
stc
movsl
ja
pop
inc
repz
shll
outsl
stos
ffree
loope
sbb
je
push
icebp
loop
pushl
and
jno
mov
outsb
bound
decl
ss
loope
das
aas
stos
push
sbb
sub
shr
dec
sar
dec
pop
add
leave
movb
sbb
dec
pop
xor
fxch
add
push
mov
inc
fmul
arpl
push
out
outsb
icebp
fldcw
push
xor
pop
mov
sub
adc
adc
xorl
and
pusha
cs
jecxz
sbb
and
mov
cld
imul
push
fiadds
cs
inc
das
push
adc
lret
cltd
stos
push
shll
jmp
pop
inc
xlat
inc
xchg
dec
mov
sub
sbb
inc
cwtl
mov
das
jge
cmpsl
cmpsl
mov
scas
jb
hlt
xchg
dec
ffree
out
popa
jmp
ret
nop
js
out
sbb
pop
inc
jge
scas
out
outsl
outsb
push
mov
mov
cmp
xchg
push
or
icebp
add
mov
mov
pushf
popa
jne
nop
imul
jmp
imul
add
fisubl
adc
xchg
dec
mov
cmp
pop
sbb
outsb
and
mov
mov
cld
out
js
xchg
sbb
and
cmp
ret
bound
cmp
push
std
cltd
cmpsl
cmp
push
int
cmp
stos
mov
aas
cmp
cmpw
xor
sub
scas
cmp
das
jne
imul
cmp
pop
push
jno
fnstcw
test
xchg
mov
loop
dec
pop
push
stos
sub
pop
fistps
sahf
in
xor
ljmp
sub
enter
jg
sahf
dec
int3
lea
xchg
jg
lea
insl
pop
fimuls
dec
stc
cs
or
adc
mov
jg
adc
inc
stc
add
push
jecxz
xor
cmp
loopne
repnz
test
and
add
call
adc
rcr
lea
mov
adc
out
inc
mov
aam
lods
fdivr
cltd
cltd
mov
pusha
jge
mov
jge
mov
or
xor
cmp
mov
lret
or
shll
xchg
loop
xchg
pop
das
shrb
cmp
out
fdiv
imul
jecxz
or
ja
mov
in
dec
sbb
icebp
cmpsl
loop
hlt
mov
movsl
decl
and
jbe
and
imulb
cmp
mov
sbb
push
fcompl
faddl
xor
scas
cwtl
cmp
test
push
mov
aaa
test
stos
mov
add
sub
out
arpl
lods
mov
lahf
mov
out
faddl
mov
jnp
add
call
aam
cld
fists
push
pop
push
dec
jl
mov
into
movsl
add
pop
icebp
outsl
nop
cltd
or
pop
push
cwtl
xchg
adc
lods
sbb
inc
es
xchg
sti
pop
sub
cltd
or
insl
pushf
push
call
ja
adc
adc
negl
xchg
sbb
popf
xchg
insb
jl
stos
ret
push
sub
mov
mov
jne
add
lods
jns
adcl
push
fiadds
arpl
daa
lods
js
movsb
jb
or
lods
xor
loopne
dec
xor
in
mov
mov
lods
fnstenv
test
mov
shr
jbe
pop
push
mov
push
shrl
popf
dec
clc
adc
mov
int
sbb
jo
inc
xorb
xor
inc
adc
cld
and
stos
lods
scas
out
mov
inc
loope
aas
jbe
sarb
adc
test
es
mov
sbb
mov
xchg
test
fwait
or
pop
sub
out
dec
push
sub
shlb
inc
cmp
cltd
add
ret
pushf
cs
arpl
adc
leave
ret
cs
rorb
adc
dec
and
jl
xchg
mov
mov
lret
push
pop
adc
jae
add
testl
daa
mov
xchg
into
cmpsl
imulb
ljmp
mov
outsl
lea
add
out
xor
jp
das
push
mov
adc
inc
arpl
jne
lcall
out
cld
stos
sbb
mov
sbb
imul
sub
jne
cmc
mov
ret
cmp
sar
lcall
bswap
dec
xchg
fstpl
xchg
mov
mov
repnz
jb
pop
inc
push
out
dec
sbb
lods
or
mov
pop
adc
mov
iret
pushf
mov
les
mov
mov
add
push
xchg
aaa
loopew
xchg
push
iret
loope
inc
iret
jb
jg
or
les
and
popf
add
out
xchg
call
xchg
nop
bound
mov
pusha
xorl
std
fucomp
cld
xlat
add
jb
sahf
popa
inc
or
popa
push
jmp
push
int3
xor
inc
mov
ljmp
in
test
or
pop
fmuls
arpl
push
or
or
pop
cmp
cmp
sbb
mov
fildl
jne
xor
aaa
push
and
cltd
lret
lcall
cli
repz
xor
aas
dec
pushf
push
stos
imul
or
bnd
andl
fnstenv
andl
jae
jno
sbb
mov
test
mov
ja
in
xor
xchg
cmpsl
dec
std
cltd
mov
nop
adc
add
loop
xchg
add
das
out
outsl
sbb
or
hlt
mov
divl
lret
fnstcw
test
aas
inc
mov
movsb
mov
out
push
repz
push
mov
lahf
xor
lahf
sarl
enter
test
js
dec
push
cmpl
cmpsb
push
xor
jo
shrb
and
mov
lret
push
aad
orl
es
lcall
mov
sub
mov
cmp
xor
jae
sub
mov
mov
daa
imul
popf
rcrb
test
roll
jecxz
cmp
dec
mov
add
push
rorb
inc
repnz
lahf
or
jmp
and
stos
outsl
jge
std
dec
fmull
mov
das
ficoms
cld
in
mov
cmc
test
aad
push
xchg
pop
and
mov
sbb
cltd
add
xchg
cmp
add
jne
and
aam
xchg
fprem
insl
inc
push
lods
test
repz
insl
daa
adc
sbb
loope
lock
pop
dec
add
mov
es
or
and
sbb
ds
or
popa
sub
adc
loopne
or
jmp
sbb
shlb
ror
cmp
push
mov
cmpsb
adc
push
js
into
cmp
mov
xchg
xor
mov
in
sahf
add
fsubrl
insb
jg
xchg
mov
push
mov
mov
jnp
mov
rclb
loopne
fdivrl
jo
cmovp
scas
sub
inc
imul
in
popa
mov
insb
or
sub
lret
add
xor
mov
or
lods
aaa
jbe
jo
mov
xchg
and
cltd
xchg
pop
orb
xchg
mov
mov
mov
inc
push
inc
dec
out
mov
daa
mov
js
mov
and
and
jp
xchg
bound
adc
sbb
shr
inc
jp
nop
jg
aas
mov
into
rclb
sbb
cmp
add
jbe
ret
ror
xabort
fwait
in
cmpsl
iret
mov
xor
lahf
imul
inc
jo
fs
cmc
daa
xor
jecxz
mov
iret
mov
sbb
adc
cmp
push
rcrl
mov
pop
xor
adc
ljmp
jnp
into
xlat
movsb
test
lock
ljmp
sti
dec
popf
push
pop
pop
mov
test
pusha
ror
sub
call
push
and
or
push
scas
adc
fisubl
std
leave
add
cmp
das
xchg
sahf
pop
loop
xchg
sub
repnz
sbb
and
jmp
mov
mov
mov
pop
popf
nop
dec
adc
aas
out
aaa
xchg
pop
and
adc
clc
sbb
insb
pop
mov
js
mov
xchg
mov
fcmovbe
mov
out
mov
ret
push
mov
outsl
add
lock
loope
data16
aas
and
cmp
scas
push
add
xlat
imul
xor
jmp
sbb
cmpsl
movsb
pop
into
dec
mov
test
dec
ljmp
pop
pushf
aaa
aaa
icebp
fldcw
fnsave
mov
shr
fsubr
test
repz
mov
xor
repnz
aam
push
cltd
stos
add
sahf
sahf
sarb
lds
inc
pop
js
jb
jo
imul
mov
mov
mov
xchg
jbe
out
adc
je
push
pop
dec
jns
push
pop
cmpb
push
rcll
mov
inc
mov
jns
xor
ret
dec
ss
into
leave
mov
sub
push
mov
sbb
pushf
pop
add
sbb
xor
mov
mov
mov
sti
js
cmp
push
xor
movsl
cli
xchg
sbb
sub
add
push
outsb
inc
pushf
leave
movsl
inc
cmp
bound
adc
aas
clc
inc
adc
outsb
pop
lahf
insb
outsb
enter
int
or
mov
lods
dec
jnp
push
subb
shl
mov
shl
stos
add
clc
fcomip
aad
sbb
scas
cmp
call
bnd
ss
je
call
pop
sub
sbb
add
dec
pop
xchg
fmul
or
inc
cmp
leave
push
sahf
mov
arpl
sub
fadds
lods
icebp
jae
sbb
dec
sub
dec
push
imull
pop
adc
adc
pop
mov
or
xor
imul
add
aam
jl
in
push
push
pop
mov
pop
mov
push
jbe
push
adc
adc
jmp
rdtsc
orb
rcl
iret
jle
xor
fsts
dec
mov
dec
sbbl
pushf
rolb
xor
fisttps
imul
mov
sub
scas
or
call
dec
call
icebp
fldt
sbb
rcr
sub
lahf
xchg
xor
xchg
lcall
dec
mov
add
xchg
sub
jb
xchg
popf
jb
fwait
std
add
inc
dec
push
imul
mov
inc
rclb
out
cmc
call
mov
ja
lret
dec
mov
movsl
or
jp
cmpb
mov
sbb
ret
cmp
sub
inc
je
mov
pop
aas
mov
push
jecxz
test
mov
fnstcw
mov
push
clc
push
fsubr
ja
xor
sub
lods
jp
and
or
xchg
mov
push
and
clc
dec
repz
dec
test
popa
inc
mov
std
jge
xchg
xchg
aam
addr16
ds
and
leave
jnp
scas
inc
mov
mov
xchg
loop
imul
push
jl
dec
xchg
mov
ret
xchg
inc
std
adc
mov
popf
test
das
and
fisttpl
ljmp
fistpll
dec
sbb
jo
pop
add
shll
out
push
pushl
je
cmp
cmp
aad
adc
xorb
outsb
pop
popa
dec
cmc
xchg
out
into
jae
shrl
pop
lods
nop
out
push
xchg
mov
dec
xor
jle
repnz
add
jge
inc
push
mov
push
sub
por
mov
pop
push
jns
or
sub
push
ret
add
std
sub
jne
xor
pop
sub
add
lods
stos
sarb
inc
lods
sub
dec
lods
mov
les
leave
lock
mov
jb
cli
mov
imul
sbb
inc
add
scas
ljmp
mov
push
mov
mov
mov
cltd
add
scas
iret
sbb
test
and
push
cmp
inc
outsl
pop
ljmp
xchg
call
mov
jb
popa
xchg
lret
mov
test
das
bound
or
push
add
adc
pop
and
pop
imul
xor
hlt
lret
or
or
mov
std
adc
iret
mov
push
lock
clc
mov
imul
cltd
jae
inc
mov
out
cltd
fs
push
mov
filds
mov
push
movsb
inc
pushf
or
mov
out
mov
enter
pushf
lock
stos
cmp
mov
popf
sub
dec
loope
in
and
or
ja
or
sbb
js
mov
xor
dec
mov
xor
sub
in
dec
adc
out
in
es
pop
inc
leave
jno
es
xor
lods
mov
in
sbb
sub
std
into
out
and
pop
mov
arpl
das
repz
cwtl
xchg
fs
xchg
out
lret
andb
in
sbb
aad
shll
jecxz
outsb
ja
fcmovnu
pop
jmp
pop
inc
popf
in
mov
push
dec
and
aad
fimull
cmp
mov
lds
and
inc
jns
dec
sub
pop
repz
fnstenv
or
test
push
fwait
cld
cmpsl
nop
loop
xchg
mov
outsl
and
imul
xchg
aaa
lock
inc
cmp
mov
and
test
into
stos
push
gs
or
push
mov
or
pop
inc
mov
xor
push
fwait
cli
mov
sar
mov
pop
xchg
or
cmp
xchg
jb
sti
loope
jle
scas
and
and
aam
cltd
cmc
inc
xor
pop
ror
dec
mov
jge
dec
add
ret
or
adc
jge
mov
pop
out
lretw
sbb
ficompl
dec
ret
bswap
mov
loope
jmp
and
jmp
dec
add
in
jmp
sti
push
es
push
mov
dec
and
bnd
mov
mov
lret
daa
icebp
daa
xorl
sub
sbb
mov
xchg
nop
imul
xchg
daa
mov
cmp
nop
icebp
sbb
shrl
ds
outsb
ss
xor
ror
xor
dec
test
je
dec
lds
cwtl
test
mov
popf
stos
nop
je
push
cmp
or
jbe
jnp
inc
sub
mov
lret
inc
jns
dec
dec
out
pop
jp
dec
into
lds
rcll
mov
adc
cmp
imul
adc
movsb
ret
testb
pusha
pop
cmc
push
cmpsl
lret
dec
pop
adc
into
aad
fmulp
pop
sub
outsl
into
xchg
and
sub
cmc
pop
sub
fistps
pop
cltd
xlat
jle
sbb
icebp
gs
les
push
sub
xchg
add
lods
add
lahf
rol
push
adc
pop
fdivrs
shl
stos
ds
xchg
xlat
es
hlt
or
stc
daa
in
pop
movsb
jmp
cmp
mov
add
cmp
sub
add
mov
xchg
pushf
movsl
mov
push
and
mov
jnp
rcl
pop
adc
push
addb
xor
xor
push
adc
lahf
pop
push
cmpl
mov
insb
nop
out
leave
fdivr
jmp
xchg
xor
xchg
pop
push
mov
daa
jl
push
and
imul
test
fnstsw
les
cmp
inc
gs
nop
jo
pop
pop
je
cmp
and
mov
push
jns
pop
xchg
cmp
mov
inc
push
lods
mov
add
or
mov
pop
lods
cltd
cmc
sub
or
mov
stos
pop
scas
fbld
jecxz
pop
dec
insl
test
mov
or
push
fadd
js
xchg
mov
lcall
in
mov
cmp
mov
adc
mov
es
loope
xorl
subb
cli
cwtl
mov
les
fs
inc
cmp
pop
or
lcall
xchg
mov
test
cmpsl
pop
loope
xchg
add
sub
jno
dec
xor
push
in
push
subl
inc
xchg
sub
into
rcrb
popf
loop
scas
jecxz
je
mov
adc
lea
sub
aam
mov
jle
pop
insl
popa
cmp
shlb
pop
mov
jle
or
enter
adc
fucom
pushl
mov
clc
mov
push
inc
push
loopne
inc
test
rcrl
scas
push
movsb
and
pop
mov
loopne
add
movsb
cmpsl
loop
outsb
outsb
xchg
cmp
xchg
int
mov
cmp
sbb
dec
movsb
fwait
inc
mov
pop
mov
or
xchg
fwait
mov
inc
xor
fidivs
shll
jne
shrl
dec
arpl
sbb
push
pop
xchg
mov
pop
xor
add
jae
jb
cmc
sub
cmpl
mov
aaa
sarb
ret
fwait
lcall
jb
insb
test
cs
nop
loope
addr16
jb
cmp
adc
jp
aaa
aad
mov
xlat
mov
je
mov
lods
sub
lods
add
and
pop
xchg
ret
mov
sub
hlt
jo
cmc
ja
cltd
shrl
and
dec
and
adc
pop
jmp
loopne
rclb
mov
and
mov
sbb
or
xchg
mov
movsb
xchg
leave
mov
lea
inc
les
adc
jg,pn
inc
push
mov
lock
jb
xor
icebp
loop
in
mov
dec
mov
out
push
xor
test
xor
jb
sub
scas
enter
leave
or
adc
jns
push
lods
das
mov
lds
and
out
adc
dec
imul
sbb
out
and
sti
orb
lock
test
daa
xchg
cmpsl
subb
in
mov
andb
push
call
jbe
shll
mov
ffree
call
bound
js
cmp
imulb
mov
jnp
and
or
cltd
outsl
shrb
rol
pop
in
sbb
adc
fs
mov
lret
push
xchg
repz
in
lds
pushf
mov
sub
mov
add
dec
mov
jae
insl
jmp
mov
add
sub
inc
mov
ss
popa
out
pop
pop
cmc
sbb
xchg
jle
pop
ret
xchg
test
pop
sub
orl
xor
lds
xor
es
std
ljmp
mov
push
int3
mov
push
movsl
loopne
xor
sub
insb
lods
out
scas
sbb
dec
pop
mov
es
jecxz
pop
popf
mov
fcmovu
lret
fists
xchg
insb
inc
rcl
xchg
mov
lea
stos
andb
icebp
icebp
es
mov
add
lock
inc
pusha
dec
fwait
xor
mov
popf
push
inc
lock
dec
jg
cld
push
pop
std
mov
push
cmc
loope
sbb
mov
jno
loopne
lret
sub
cmpsl
sbb
dec
aam
push
and
dec
test
repz
sbb
add
or
jb
pop
push
call
ss
add
loope
adc
mov
jle
cmpsb
cmp
push
scas
xor
xor
loopne
sub
xor
xchg
jle
mov
dec
push
sub
test
ja
fisttps
rorl
jae
imul
xchg
cli
pop
cld
dec
scas
adc
xor
cmp
imul
adc
insb
mov
or
jmp
rorb
mov
clc
push
sahf
sahf
out
shll
mov
cltd
movsb
jle
aas
loop
fisubs
fdivs
enter
push
xor
adc
cmp
push
pop
dec
rcll
jp
bound
cmpsb
or
loope
adc
push
adc
dec
ja
test
push
daa
jg
mov
push
scas
icebp
jge
fwait
idivb
arpl
sub
stc
pop
cmp
out
mov
das
lock
mov
jae
lret
pop
lds
outsl
jo
std
aaa
mov
dec
or
pmulhuw
push
dec
mov
inc
pusha
inc
lret
xor
fwait
jmp
mov
sub
cli
loope
ds
imull
shrb
test
in
add
push
mov
mov
out
rorb
in
les
mov
jge
and
mov
jnp
test
mov
call
xchg
push
lahf
jo
cwtl
imul
push
jp
in
mov
xrelease
sbb
imul
cmpsb
aas
mov
imul
stos
fbld
orb
dec
mov
movsb
lahf
mov
repnz
ss
shll
popf
cmp
out
inc
stos
out
imul
icebp
popf
xor
repnz
jge
push
imul
aaa
movsl
lock
or
fs
nop
sbb
dec
cmpb
and
adc
inc
lds
xchg
rcrb
int3
dec
imul
fisttpll
and
xor
xor
or
adc
stc
outsb
aam
jae
dec
fidivrs
jno
je
cmpsl
and
and
sub
into
push
jae
jl
pop
shlb
cli
fsubl
pop
inc
sub
cmc
rclb
sbbb
popa
clc
inc
testb
fwait
bound
lahf
out
lahf
jb
mov
mov
xchg
mov
cwtl
cmp
xchg
jns
cwtl
mov
scas
inc
adc
outsl
mov
enter
popa
arpl
ret
xchg
pop
sbb
lock
hlt
in
jl
push
pop
les
inc
mov
pop
faddl
mov
test
or
js
test
dec
sbb
out
adc
ljmp
adc
xor
jmp
clc
lods
sbb
inc
xchg
pop
in
add
sbb
cmp
call
out
sub
fstpl
dec
sub
adc
pop
rcr
insb
pop
gs
jp
outsb
fsubrp
cwtl
stc
popf
dec
loopne
mov
inc
loop
sub
mov
jp
sub
sbb
leave
add
loope
bound
xchg
lret
sub
gs
fnstenv
push
fnstcw
adc
stos
push
addl
xchg
mov
sbb
lahf
and
sbb
std
jmp
into
lret
jecxz
mov
jno
xchg
jb
aam
sti
pop
outsb
fimuls
in
dec
lods
mov
aaa
loopne
pop
or
adcb
cmp
xchg
divl
inc
movsl
add
xor
dec
cmc
and
adc
push
inc
inc
push
inc
pushf
out
or
mov
insl
pop
lahf
ja
movl
insb
out
lahf
lcall
addr16
stos
jl
adc
sbb
pcmpgtd
aas
es
into
pop
sub
test
sbb
clc
push
push
mov
out
cmp
rorl
stc
leave
xlat
jnp
xchg
jb
aas
inc
addr16
popa
mov
adc
imul
and
inc
sbb
das
sub
jae
in
cwtl
add
mov
mov
pop
into
jo
adc
jae
mov
jecxz
imul
xchg
aas
fld
jo
jbe
push
pop
jbe
shll
lea
mov
stc
test
data16
and
sub
outsb
in
cwtl
mov
loopne
xchg
cltd
mov
mov
pusha
icebp
mov
in
in
fildl
mov
or
out
cmp
add
push
xchg
pusha
inc
repz
iret
lcall
or
and
sbb
fmuls
sti
movsl
add
push
ret
adc
push
dec
xchg
mov
sarb
in
mov
jmp
cltd
mov
fisubrl
mov
or
sub
data16
stc
pusha
test
add
cmp
nop
idivb
stc
mov
inc
into
out
sbb
ret
xchg
flds
cld
leave
jp
out
xor
bswap
and
adc
cmp
mov
push
loop
pop
adc
cld
fnstsw
push
push
clc
out
cmp
lds
mov
push
sub
pop
fwait
scas
shr
jge
pop
mov
sub
movsl
jp
in
leave
ret
cmp
push
cmp
add
lea
pop
jmp
andb
mov
iret
leave
jno
cmp
cli
mov
add
repnz
aad
jp
pop
sbb
mov
mov
stos
mov
jg
cld
sub
mov
ret
test
jmp
inc
inc
mov
push
adc
jmp
mov
pop
adc
movsl
sbb
jns
mov
cwtl
push
out
loopne
movsl
pop
jae
xor
lret
ljmp
push
sub
sub
or
or
lret
fsubl
fimuls
test
inc
sub
iret
mov
mov
xor
dec
xor
shll
dec
xor
lock
jmp
js
push
movsb
inc
in
sub
jbe
das
bts
and
std
test
push
pop
lret
aam
adc
adc
lods
mov
sub
es
sub
test
lret
xor
mov
pop
mov
jg
pusha
jle
pop
mov
test
pop
lock
lcall
xor
xchg
jo
mov
push
leave
outsl
mov
outsb
movsb
xchg
mov
test
arpl
fcom
clc
mov
popf
sub
loopne
cmpl
dec
mov
fnsave
xor
fnsave
stc
roll
push
or
adc
push
inc
mov
or
mov
aas
add
js
arpl
xchg
es
cmpsb
loope
dec
sub
or
mov
and
sub
cmp
mov
lcall
xorl
sub
arpl
xchg
cli
inc
and
dec
push
xchg
mov
aad
jns
ja
movsl
imul
mov
fs
in
imul
stos
xor
out
rclb
or
jbe
fst
shl
xor
cmpl
incl
dec
mov
mov
rolb
in
add
bnd
mov
mov
cmp
pop
divb
mov
jl
pop
xchg
adc
shrb
test
adc
fs
les
cltd
imul
adc
mov
dec
jae
add
push
add
and
bound
jmp
ds
sbb
shld
lahf
sub
movsl
pushf
lcall
shlb
and
shlb
mov
js
xchg
movsl
sub
xchg
mov
push
pop
jge
pop
aas
sbb
push
jl
and
and
cmp
jbe
loop
lcall
loop
sarl
mov
push
inc
sbb
bound
push
jnp
test
and
pop
pop
push
sbb
mov
add
ljmp
into
enter
xchg
pop
inc
mov
fs
pusha
add
sbb
enter
ss
arpl
ret
or
inc
enter
into
hlt
pop
gs
mov
xor
and
xlat
or
loope
mov
pop
leave
push
lock
sbb
aad
in
in
out
inc
repnz
std
popa
inc
xorb
icebp
sbbb
cmc
pop
xchg
es
aam
imul
stc
sub
or
ret
xlat
or
pusha
mov
push
cmpsl
dec
movsb
push
scas
ss
pop
lahf
test
data16
xlat
adc
mov
enter
pop
add
loope
pop
jb
std
push
insb
jmp
stc
jecxz
mov
cmp
xchg
sarb
movsl
sub
inc
outsb
push
cmpsb
and
jmp
pop
dec
scas
dec
fs
out
mov
jmp
pop
mov
inc
and
pop
jne
dec
mov
mov
jmp
filds
push
insb
push
imul
int
outsb
dec
adc
pop
das
mov
jbe
test
fisttps
and
movups
jns
xchg
fdivl
incl
mov
push
jg
add
lods
sti
xchg
pop
mov
jbe
or
subb
or
mov
popa
push
incb
test
jp
decl
subb
iret
cwtl
int3
es
sub
xor
xchg
movsb
repz
fisubs
aad
jl
aaa
or
sub
scas
jle
jno
std
and
ja
dec
inc
imul
out
sbb
fst
adc
nop
cld
sbb
cmpsl
aad
loopne
xchg
pop
ljmp
mov
xchg
stc
push
push
stc
fsubr
xor
les
or
lret
push
sbb
add
pushf
sbb
push
iret
mov
loop
leave
mov
dec
popl
out
jle
lds
inc
leave
loope
xor
and
bound
push
inc
adc
add
cld
pop
pop
mov
pushf
dec
dec
jge
xchg
rcrl
je
shrl
aad
fisttpl
xchg
xchg
add
push
rcrl
in
popf
ds
push
int3
loopne
xor
dec
jae
in
dec
aad
add
add
add
stos
aaa
stos
xchg
insb
stos
in
jecxz
idivb
mov
iret
jnp
cltd
jmp
out
push
adc
and
sbb
orl
lret
jl
cmp
and
or
popa
inc
test
sbb
repz
test
shr
sub
out
loope
hlt
add
mov
fldenv
and
cmp
lods
imul
stc
gs
call
push
lcall
sub
ret
cmp
adc
movsb
ja
or
out
mov
icebp
fs
cvtps2pi
js
adc
cld
daa
lcall
xor
jo
xlat
scas
ret
push
jg
sbb
cmc
aad
xor
andl
mov
test
scas
fisttps
pop
cmp
lea
inc
xor
pop
imul
mov
test
out
dec
and
mov
faddl
xchg
movsb
insb
add
test
testb
cltd
ja
mov
sbb
inc
mov
push
daa
repnz
cmpsl
movsl
jge
sbbl
ret
inc
sbb
cs
lock
sbb
add
loope
adc
sub
add
movl
xchg
mov
out
inc
or
lcall
popl
xchg
jnp
icebp
xor
mov
mov
pusha
in
xlat
loope
outsl
rcll
jmp
insl
je
enter
add
sbb
cmc
lahf
jp
ja
fcompl
pop
ss
fs
adc
xchg
test
rcr
pushf
sbb
lea
mov
mov
je
and
imul
outsl
icebp
inc
cmp
sbb
adc
push
bound
test
pop
add
cmpsb
xchg
scas
out
jl
out
pusha
dec
ret
fwait
repz
cmp
adc
jl
pop
iret
sub
mov
into
mov
cmc
xor
add
push
sbb
add
jecxz
enterw
xchg
in
pop
shrl
push
adc
jo
popf
jno
or
jge
and
nop
inc
and
flds
enter
inc
addb
pushl
das
popa
or
inc
dec
daa
shrl
xor
ret
cmpsb
inc
fisubs
sub
pop
push
in
sub
in
adc
data16
adc
pop
add
loopne
ds
lods
stos
and
jle
cmpsb
xchg
aaa
mov
fldt
test
xchg
aas
xchg
mov
fcmove
sub
pop
sbb
shrb
div
xchg
push
mov
sbb
cmp
push
fidivs
loop
in
movsb
shll
mov
or
cmc
les
lret
mov
or
or
adc
inc
cmp
jmp
ds
lret
fsubrp
pop
icebp
cmc
mov
dec
and
sbb
add
arpl
cwtl
sbb
test
pop
xchg
call
sbb
jmp
movsb
cmp
movl
mov
in
cmp
adc
inc
pop
fistl
push
dec
mov
movntq
mov
je
aad
inc
out
pop
dec
pop
mov
dec
and
sbb
call
dec
and
push
cwtl
mov
or
outsb
jb
xor
sub
in
xor
pop
jae
add
daa
xor
fwait
or
call
jb
outsb
mov
inc
push
dec
fwait
adc
jmp
add
and
mov
mov
pop
int3
cwtl
lods
in
loopne
or
dec
pusha
sub
cwtl
lahf
jecxz
ret
fimuls
mov
push
and
xor
in
push
movsl
or
data16
push
cmc
repnz
push
mov
mov
pop
and
insl
cs
xchg
mov
loope
cmp
add
cld
dec
jl
das
out
int
xor
cmp
rcrb
and
pop
cmp
adc
mov
cmp
cmp
cmp
dec
sahf
cmp
imul
loope
cmpb
hlt
out
out
int
sbb
xchg
xchg
mov
lcall
jae
push
mov
out
stos
stos
shl
lods
mov
repz
xor
mov
fstl
cmp
mov
and
xchg
cmp
test
push
out
xlat
in
int3
insl
xor
adc
arpl
out
adc
mov
adc
test
lcall
mov
ja
stos
stc
lret
xlat
jae
test
push
pop
outsb
sub
lods
mov
jge
dec
jmp
sub
or
jbe
inc
push
mov
jnp
mov
mov
lret
cmpsb
fistps
pop
cmpsl
jp
int3
dec
aas
xor
sahf
push
pop
roll
addl
push
mov
in
jno
sbb
xor
aad
xchg
inc
jmp
sbb
mov
movsb
jle
mov
lret
imul
in
mov
les
fmuls
imull
mov
lcall
push
out
int
xchg
idiv
xlat
cmp
shlb
sub
jb
or
movsb
jle
dec
mov
push
xchg
es
pop
jb
ss
mov
nop
in
jae
fistps
dec
xor
mov
xchg
lods
or
loopne
fisubrs
mov
or
je
movb
dec
jge
ljmp
inc
mov
or
mov
shlb
test
mov
xlat
leave
xchg
pushf
mov
jg
lods
int
dec
adc
out
jge
xor
sub
jmp
jne
aas
fwait
ret
or
loope
pop
mov
loopne
cmc
adc
mov
jb
das
dec
cmp
adc
loope
cmp
fnsave
scas
scas
cs
xlat
cld
and
mov
jo
fwait
orl
xor
cmp
and
rcrb
mov
mov
push
cmp
jae
cs
negl
lahf
lds
add
ret
in
clc
test
shr
dec
test
sbb
test
xor
dec
out
scas
test
pop
pop
in
bound
imul
sub
xchg
movsb
push
pop
sahf
enter
push
nop
decl
sbb
push
das
loope
rolb
repnz
add
mov
movsl
cmpsl
cli
sub
cwtl
testl
clc
test
mov
mov
jo
pusha
add
scas
imul
pusha
test
dec
pop
cmp
jb
mov
popf
fnstenv
je
xor
add
sahf
int3
hlt
cmp
je
adc
imul
repz
dec
adc
cwtl
addr16
mov
scas
dec
icebp
int
inc
pop
push
imul
adc
dec
test
shlb
sbb
shlb
jmp
bound
push
push
jge
pusha
negb
sbb
lock
shll
int
dec
xchg
jge
jle
jbe
pop
cmp
add
sbb
rcrb
and
mov
adc
cli
scas
push
inc
das
movsb
adc
fadds
sbb
add
mov
std
and
push
xchg
add
jge
out
jae
fldcw
xor
cmpsl
fldl
ja
in
testb
and
shrb
mov
sbb
pop
aam
xchg
xchg
lds
sti
cmp
xchg
add
inc
seto
adc
fildl
push
xchg
inc
sub
mov
push
out
ret
popf
sbb
cld
imul
jnp
jb
mov
cmp
fcomip
or
mov
mov
and
inc
fdivl
jge
sub
adc
cld
data16
cmp
leave
push
pop
jns
push
xchg
pusha
inc
lock
push
push
lds
loop
adc
xchg
mov
jmp
cmp
call
mov
into
pushl
fisttpl
clc
xchg
cmc
sub
imul
xchg
sbb
pop
dec
or
xor
mov
hlt
inc
or
dec
sbb
outsb
or
and
jecxz
ja
push
fidivrl
xchg
xchg
mov
and
inc
xor
mov
pop
push
in
sbb
push
cmp
xchg
ror
sti
fstpt
adc
iret
outsb
mov
push
fucomp
std
stos
xchg
sahf
push
xor
sahf
mov
mov
push
rclb
jp
push
inc
loop
mov
cmp
jns
adc
fmuls
stc
pop
dec
inc
inc
xchg
lds
xchg
test
push
js
pop
dec
inc
push
cli
cltd
xor
cmp
iret
mov
movsb
or
lock
inc
aas
cwtl
mov
mov
jae
shlb
inc
notl
jle
sbb
cmp
popa
ret
adc
xlat
add
push
cmpsl
mov
mov
out
xchg
jg
cmp
stos
xchg
or
call
fdiv
clc
mov
mov
or
xchg
rcrb
xor
jmp
test
pop
loopne
dec
cmp
sbb
jns
lcall
xchg
int3
in
push
jl
sub
clc
cmc
arpl
push
xchg
in
and
fdivs
jmp
mov
int
or
xchg
mov
mov
adc
jp
and
stos
mov
test
insl
vpextrw
lds
or
stos
mov
jnp
ss
stc
mov
lahf
or
ljmp
xchg
sar
subb
mov
arpl
jo
popf
adc
cs
pop
enter
hlt
and
jno
cmp
mov
stos
ret
enter
jb
lds
push
nop
push
mov
add
cmpsb
mov
es
lret
adc
mov
mov
sbb
add
cmpsb
xor
pop
jl
scas
lods
out
movsb
pop
adc
mov
pop
mov
push
movsb
jecxz
pop
sbb
xor
xchg
cwtl
stos
inc
xchg
mov
fcmovnbe
cmp
roll
mov
jae
repz
popa
les
push
out
lock
popf
inc
in
test
into
ljmp
insl
cmp
ja
inc
jg
xor
jecxz
icebp
in
xchg
jl
xchg
mov
mov
pop
mov
cmp
mov
outsl
int3
xchg
icebp
mov
pushf
mov
sub
push
out
pusha
hlt
inc
sbb
sbb
dec
inc
sarl
imul
sti
pushf
es
xchg
cmpsb
sbb
jecxz
fmuls
aaa
pop
lds
loop
push
pushf
das
stos
sub
jl
mov
and
test
inc
mov
adc
ret
adc
bnd
dec
push
out
add
cmp
add
test
pop
repz
nop
inc
into
xchg
inc
outsb
ret
mov
sub
lds
cld
dec
mov
int3
fmull
hlt
jo
shr
mov
dec
lahf
fldt
cmp
test
movsl
pop
push
xchg
dec
fdiv
cwtl
rcll
je
rorl
jns
cwtl
mov
lret
xchg
lret
sub
push
in
xchg
jo
and
movsl
adc
jns
outsb
das
data16
vstmxcsr
stc
inc
repz
push
push
loope
popf
hlt
das
invlpg
pop
xor
int
mov
sbb
inc
jns
mov
cld
outsl
pop
sarl
inc
addr16
ss
mov
les
fsubl
inc
sub
cmp
out
scas
pop
rolb
sbb
or
test
pop
out
shlb
inc
mov
push
dec
stc
mov
std
xchg
add
ljmp
lcall
arpl
das
sbb
nop
jae
cmpl
add
sbb
mov
jb
jmp
push
mov
sub
out
out
iret
jb
mov
aad
stc
jno
add
push
add
sub
movsb
leave
push
inc
shlb
add
mov
mov
test
mov
cltd
jno
mov
stos
insb
pop
scas
testb
in
add
fmull
sbbb
out
sub
push
sbb
xchg
pop
xor
add
ret
in
mov
sbb
fsubl
mov
and
aad
in
pop
cmp
mov
jns
xchg
adc
in
sbb
adc
sub
mov
sti
orl
les
fnstcw
xchg
xchg
out
jmp
push
push
and
xchg
dec
push
mov
bound
enter
out
mov
in
test
push
dec
fisubrl
push
clc
jns
push
pusha
stos
in
imul
nop
pop
xchg
inc
push
sbb
mov
mov
add
push
push
outsb
and
jnp
add
divl
repz
and
jl
jp
or
xchg
mov
repz
mov
imul
inc
inc
or
test
iret
cmpsb
out
int
xorb
or
pop
mov
jle
or
bound
push
pop
xchg
mov
mov
pushf
iret
bnd
xchg
lea
mov
fcoml
gs
push
in
xchg
inc
rorl
fcoml
push
vpslld
jae
mov
jnp
xor
cmp
enter
nop
cmpsl
and
mov
das
or
aam
fistl
pop
data16
adc
inc
push
data16
adc
ss
popf
mov
mov
add
popf
mov
mov
adc
outsl
xor
aad
imulb
arpl
mov
mov
mov
mov
dec
lods
pop
arpl
daa
push
sub
xor
cmp
orb
push
adc
mov
std
jmp
xor
jno
in
sarl
arpl
test
les
pop
psubq
dec
or
fsubrs
scas
stc
push
out
mov
sub
sahf
repz
jp
repz
push
push
in
xor
mov
xchg
sbb
js
fildl
sbb
fnstcw
je
je
push
add
es
or
xchg
jnp
ja
xor
das
and
daa
aaa
addl
cmp
fwait
mov
cmp
dec
sbbb
adc
nop
xchg
aad
and
les
push
fimull
push
pop
daa
dec
inc
mov
pop
mov
loop
mov
or
jmp
xor
sub
inc
pop
inc
loopne
jg
out
adc
add
inc
and
cmp
add
lret
push
xor
hlt
add
inc
inc
mov
loop
adc
jg
mov
sub
mov
dec
inc
mov
aam
adc
loopne
xchg
stos
mov
mov
inc
dec
aas
add
cmp
sub
or
sarl
fnstenv
out
out
and
pop
sbb
sub
ffreep
jmp
es
xchg
xor
dec
arpl
ja
push
jg
sbb
mov
in
pop
lods
sahf
sub
lods
and
cwtl
cmp
mov
jge
data16
das
mov
dec
jae
jecxz
mov
ret
jp
outsl
into
and
mov
xchg
pop
inc
stc
cmp
and
adc
mov
orb
pop
adc
dec
in
jge
sbb
jne
pop
and
ds
jmp
cmp
int
pop
mov
inc
dec
movsb
or
mov
and
cmp
pop
xchg
sub
mov
push
push
xchg
push
adc
out
outsl
lahf
outsl
push
sbb
leave
push
stos
adc
sub
nop
ja
movsl
add
cmp
cmc
cmovg
icebp
add
sbb
mov
in
push
mov
inc
idivb
sub
lock
sub
lea
test
shll
sbb
imul
push
inc
mov
xor
ss
lea
xor
mov
mov
fadd
jae
movsl
jne
mov
cmpsb
movsl
xchg
out
add
sub
xlat
cmp
pop
roll
imul
ljmp
push
das
jecxz
shrl
popl
cmpsb
out
sbb
test
add
stos
bound
pop
lret
xchg
aaa
mov
rcll
add
movsb
dec
pusha
fcmovbe
mov
out
xchg
mov
sbb
outsb
pushf
jp
mov
push
jl
rclb
sbb
jge
and
dec
icebp
jo
mov
aaa
aaa
pop
pushf
inc
pop
xchg
adc
cmp
addb
leave
scas
sahf
push
lcall
xor
nop
jno
pop
les
push
popf
sbb
mov
mov
mov
ds
xchg
mov
test
std
jmp
pusha
xchg
jg
lcall
mov
repnz
fwait
add
push
push
ret
pop
mov
loop
aaa
loop
sbb
push
sub
jg
cmc
or
push
mov
ret
mov
sub
jge
stos
hlt
jg
jg
in
out
movsl
roll
push
mov
ss
dec
push
fnsave
fisttpl
jge
and
push
stc
aaa
incl
repz
fmul
inc
add
imul
loope
dec
stc
shr
jne
lahf
ret
iret
pop
mov
jg
mov
jge
cmpsl
cmp
inc
sbb
ss
rorb
std
jge
and
clc
mov
iret
adc
inc
repnz
loopne
jmp
data16
mov
test
icebp
cmpsl
xchg
mov
and
push
sub
inc
inc
xchg
jne
pusha
cld
push
call
mov
dec
xor
sahf
out
je
sbb
shl
add
ja
and
xchg
shll
jecxz
bound
lret
mov
add
out
cmp
fsubrs
fs
mulps
jbe
xchg
mov
mov
and
push
dec
int
repz
push
inc
sbb
xchg
inc
xchg
ljmp
or
std
outsl
jl
mov
inc
leave
cmp
imul
push
adc
mov
insl
daa
fwait
or
iret
cmc
mov
out
and
inc
inc
push
fdivs
mov
loopne
adc
insb
addr16
jo
adc
jne
sbb
push
cmc
lock
test
add
sub
pop
inc
or
stc
in
cld
insl
jecxz
fidivrl
stos
rclb
test
xor
das
jns
inc
mov
and
xor
out
jecxz
xlat
iret
inc
push
aaa
sahf
mov
aas
subl
xchg
fsubs
jmp
add
pop
js
sub
cmp
sahf
les
stc
data16
cmp
in
inc
or
daa
mov
xor
jne
xchg
and
enter
sbb
icebp
jo
lock
mov
icebp
adc
mov
arpl
pop
jae
cmp
lods
push
pop
aas
mov
sub
mov
test
int
sar
or
add
jae
in
and
stos
stos
pop
pop
and
fwait
push
icebp
push
data16
sub
adc
dec
jle
push
mov
pop
xor
mov
out
in
stc
xchg
jae
mov
pop
cmpsl
inc
sub
inc
mov
add
test
add
push
xor
mov
fcoml
push
mov
push
adc
push
scas
mov
lds
imul
push
xchg
loopne
test
sarb
push
aad
lock
dec
lea
mov
cmp
sub
and
nop
adc
lret
int
inc
or
or
ljmp
outsb
or
sub
mov
mov
dec
jp
negl
pusha
ds
dec
xchg
dec
push
cmc
sbb
cli
dec
mov
sti
pop
jge
add
xor
pop
in
xchg
pop
test
sbb
jb
lods
and
stc
cmp
fiaddl
dec
cli
sub
sub
add
inc
sub
inc
push
dec
bnd
xor
xorb
ljmp
mov
enter
fldcw
cmp
push
fcmove
or
fildll
push
cli
ljmp
fbstp
insb
pop
inc
movsb
leave
stos
shl
notb
jge
iret
mov
sbbb
add
mov
ss
mov
add
sub
lock
das
mov
rcrb
sti
xchg
pop
pushf
inc
sub
push
lret
lret
push
cmc
push
push
mov
clc
lret
adc
pushf
mov
sub
int3
lcall
adc
stos
aas
cmp
aad
orb
movsl
jmp
shll
or
test
leave
ss
inc
flds
in
mov
adc
xor
mov
int3
cmp
fwait
cli
push
out
loope
cwtl
dec
enter
mov
inc
fcmovnu
cwtl
flds
pop
jmp
jno
pop
jg
sub
inc
loope
pop
rcrb
sub
xor
jg
mov
push
addr16
out
cs
in
jnp
test
ds
push
mov
sbb
jnp
inc
fisttpll
add
aas
leave
repz
test
arpl
pop
lds
sub
outsb
lcall
stc
sbb
imul
lea
lret
in
cmpsb
xor
ret
mov
push
jo
pop
fistps
xchg
jbe
cmp
sbb
push
lahf
dec
js
mov
jb
pop
adc
push
lcall
gs
sbb
xchg
pop
dec
sbb
pop
jns
outsb
divl
leave
xchg
fmuls
pushf
adc
out
ss
nop
fidivrl
rolb
fildl
decb
lods
stc
sub
leave
fsubrl
jge
scas
jmp
push
test
bound
divb
mov
je
aam
cltd
repz
test
push
test
sbbl
push
xchg
mov
lea
dec
inc
in
scas
cmpsl
pop
inc
rep
fnstsw
xchg
sub
lds
aaa
sbb
data16
test
stc
fs
adc
ficompl
fisttps
xchg
gs
pop
sarl
adc
divl
es
out
jmp
imul
arpl
rep
add
ja
cld
mov
test
pop
adc
loope
adc
lahf
call
sbb
out
repz
sarl
mov
jb
sbb
mov
sub
push
imul
fstl
pushf
cwtl
stc
out
les
test
repnz
negl
stos
fnstsw
cs
mov
icebp
inc
stos
adc
loop
push
enter
push
mov
cmp
jmp
movsb
shl
das
mov
lret
divb
xchg
lds
in
mov
push
cmc
cmpsl
cmp
add
mov
test
xchg
lock
adcb
jnp
push
jle
mov
in
mov
test
push
int3
add
popf
hlt
jg
xor
fwait
dec
cmpsb
sbb
jnp
nop
out
dec
loopne
pop
push
add
fsubrl
push
xlat
jle
push
cmp
dec
fucomi
fcmovnu
roll
loope
and
xchg
mov
jecxz
in
sub
push
repz
pushf
or
jne
xchg
fidivrs
aas
and
and
cmp
xor
push
insl
sbb
pop
cld
mov
inc
xchg
jnp
push
push
pushw
jbe
popa
shll
or
xchg
inc
pop
lahf
fs
stos
pop
mov
mov
cli
das
mov
data16
adc
mov
mov
xchg
sub
jl
test
cmp
popa
push
or
jb
loopne
fdivs
sbb
jmp
cmpsl
es
sbb
es
mov
fstpl
mov
popa
addr16
pop
pop
sbb
rol
sahf
mov
out
notl
aad
push
xchg
mov
shrb
inc
scas
push
mov
in
stos
pushf
inc
call
rcll
sbb
cmp
popa
ss
test
aaa
adc
jns
in
inc
les
push
or
into
add
loope
push
mov
lret
sub
cmp
inc
push
cmc
sahf
jae
dec
xor
mov
adc
mov
jg
jg
pop
inc
ss
xorb
out
cmc
rcrb
fstp
adc
scas
mov
adcb
scas
adc
das
jl
push
or
sahf
gs
xchg
data16
xor
mov
das
neg
fsub
lea
push
jbe
add
mov
aad
or
ja
adc
mov
jg
call
inc
push
mov
add
add
and
pop
sub
popa
aas
das
test
jb
movsl
push
mov
cmpl
gs
cmpb
lcall
xor
jmp
aad
cmpsl
cmpl
clc
in
movsl
mov
push
jbe
mov
add
aad
mov
adc
jbe
jns
xchg
lods
push
and
mov
mov
pusha
jmp
repnz
and
xchg
mov
add
jns
call
mov
sub
jmp
bound
pop
cmpsb
aam
mov
add
out
sub
pusha
jbe
lock
or
cmpsb
movsb
test
pop
cmp
push
scas
push
outsl
insl
or
movsb
jg
xchg
adc
jno
adc
sub
std
and
jmp
neg
or
or
aaa
add
fs
cwtl
and
inc
fcoms
xchg
les
bound
cs
push
jecxz
mov
jo
pushf
pop
dec
or
ret
adc
cli
xlat
add
repnz
push
xlat
lods
and
mov
pop
xor
test
mov
out
adc
dec
or
cld
adc
movsb
lcall
lea
mov
pop
scas
or
sarl
or
pop
int
sbb
pop
out
scas
test
lcall
xor
test
sbb
cs
test
mov
mov
sbb
add
mov
stc
pop
xchg
test
and
dec
xlat
mov
repz
dec
xlat
dec
lahf
inc
fimuls
into
and
clc
dec
or
cmpsl
ss
imul
xchg
or
jg
jae
mov
mov
loop
jl
orb
aaa
mov
loop
in
cltd
sbb
loope
stc
in
lret
or
sub
data16
push
rorl
hlt
das
test
push
movsb
out
ret
pop
xchg
cmpsl
pop
mov
mov
adc
pop
sbb
or
sub
test
mov
lods
daa
fisubs
inc
pushf
and
cmp
jne
jae
mov
inc
bound
test
icebp
notb
adc
mov
inc
xchg
jg
xchg
jle
push
nop
and
sar
std
pop
or
aam
scas
cmp
loopne
stos
enter
add
adc
aam
sub
jnp
mov
xor
sbb
shr
and
lret
adc
mov
push
mov
imul
xchg
insb
pop
push
add
push
jbe
or
test
bound
frstor
pop
lods
or
das
jbe
xor
iret
out
addr16
in
icebp
sbb
adc
pop
bndldx
mov
les
insl
loopne
lods
insb
orl
pushw
adcl
xor
loop
push
cmp
ficompl
push
push
loop
lret
mov
xchg
cmp
xchg
ljmp
daa
stc
ret
popf
jno
mov
data16
adcb
fadds
clc
nop
mov
xor
push
jmp
icebp
push
int
mov
das
aad
outsl
div
xchg
outsl
pop
jno
jge
imul
popa
aad
mov
and
loope
add
xchg
popa
shl
mov
imul
jo
ss
aas
xchg
mov
and
clc
aaa
icebp
aam
lock
nop
xchg
out
mov
repnz
xchg
push
test
scas
out
addr16
or
cmp
out
outsl
test
in
jb
movsb
loopne
mov
nop
das
pop
lock
mov
pushf
mov
sarb
addl
push
pop
add
inc
outsb
pop
testl
cs
aad
cld
outsb
jo
sti
mov
ja
sbb
jnp
je
sub
mov
xor
xchg
and
inc
push
xlat
or
test
popa
movsl
mov
dec
inc
cmp
dec
push
jle
test
fwait
xchg
in
mov
int3
add
arpl
cmp
pop
jo
repz
aad
enter
jmp
adc
or
fnstsw
les
xor
sub
jo
xchg
hlt
lret
out
pop
pop
jmp
and
movsl
mov
mov
lret
fistpl
dec
jmp
xchg
lcall
sub
push
andb
xorb
pop
nop
push
mov
xor
push
imul
aas
mov
jmp
inc
arpl
pop
push
fmuls
cmovle
xchg
rcrb
and
cmp
mov
insb
push
jno
jo
cmp
jg
xchg
jmp
and
jbe
cld
push
lahf
fsubs
data16
adc
fiaddl
inc
sbb
loopne
xchg
inc
push
test
outsl
xchg
pop
or
cmp
rcrl
incl
sbb
out
out
in
cmp
inc
pop
cmp
inc
jmp
sbb
push
inc
popa
xchg
inc
fs
and
pop
daa
sub
cmpsl
sti
push
sbb
std
negl
imul
ficoml
pusha
or
js
clc
mov
addr16
aad
loope
pop
or
in
ja
inc
xor
fstl
jne
xor
js
add
cmp
push
mov
shlb
faddl
xor
ret
sbb
ds
xchg
pop
aas
out
xchg
jle
sub
cli
add
push
monitor
sub
push
rcll
mulb
or
push
loope
jge
andnps
mov
repnz
cmpsb
sub
cmc
adc
cld
mov
pop
rcl
imul
or
sbb
xchg
clc
in
outsl
adc
fiaddl
adc
lock
mov
add
sbb
mov
xchg
ja
leave
lods
jns
icebp
outsb
test
jae
arpl
add
stos
jns
or
repz
xchg
scas
nop
mov
xchg
lock
loopne
add
mov
xchg
lea
into
nop
lea
push
mov
mov
push
jl
sarl
sub
jmp
bound
jns
ds
jbe
pusha
leave
mov
enter
lods
lods
push
fcomps
mov
dec
or
outsl
les
adc
addr16
loopne
nop
mov
imul
movd
sub
push
imul
std
mov
add
movsl
xor
sub
sub
lds
popf
lcall
lahf
sarb
cmp
xchg
les
add
sbb
stos
enter
or
mov
in
aas
ds
mov
cmp
push
jbe
lods
mov
add
orb
xchg
sahf
add
iret
cwtl
xor
fs
xor
pusha
xor
aam
push
jge
in
jmp
inc
fildll
xchg
xchg
jge
inc
in
stc
sar
pop
shl
das
in
nop
adc
xor
sub
rolb
out
sub
and
out
fiaddl
rcr
sbbl
inc
push
jnp
movsl
cmpsb
aaa
sub
loop
jle
sbb
sbb
out
dec
mov
repnz
push
sub
pop
inc
lods
orb
mov
gs
and
pop
cmp
mov
pop
xchg
insb
xchg
mov
fwait
int
es
or
sub
jns
sar
push
lds
inc
mov
pop
mov
pop
add
movsl
leave
jne
ret
sbb
out
mov
rcrb
push
jmp
outsl
hlt
outsl
in
imul
fisttps
sub
stos
xor
sub
sbb
imul
cs
test
pop
in
add
push
push
sbb
fisubl
jg
xor
rcl
pop
sbb
sahf
jp
jo
jl
jmp
imul
or
std
mov
cmp
and
icebp
clc
enter
test
sub
xchg
in
movsb
outsl
arpl
mov
push
pop
aad
mov
dec
cmc
ljmp
insl
loopne
mov
cmp
push
hlt
mov
mov
addl
inc
out
sbbb
pop
rclb
dec
xchg
or
lcall
push
cmp
sahf
in
mov
cmp
cmp
pop
lcall
sbb
jae
in
push
dec
das
pop
test
cmp
mov
jnp
ret
ss
lods
sbb
fadds
leave
scas
hlt
cld
or
iret
leave
pop
inc
xorl
jl
jle
dec
jecxz
push
xor
inc
es
xchg
add
es
call
push
das
jl
imul
ret
pop
xlat
add
push
mov
test
or
jae
sahf
cmc
pop
fisttps
lret
or
ficoms
aas
imul
jp
add
add
push
push
pop
ss
cli
adc
and
cwtl
repnz
sub
and
repz
loop
outsl
in
add
std
cwtl
bound
sbb
add
and
imul
or
adcl
mov
dec
xadd
pushf
ret
aaa
mov
lcall
or
push
or
aam
fnstcw
rcl
mov
stos
xor
and
pop
lock
les
fisubrs
cmp
ror
and
daa
aas
data16
pop
nop
adc
xchg
mov
sbb
xchg
sub
xchg
pop
fidivs
jo
enter
fadds
aam
cltd
call
pop
sbb
add
test
les
daa
inc
adc
push
lods
mov
pop
push
mov
and
mov
push
dec
jl
inc
gs
pop
sub
ffreep
sahf
pop
shrb
repz
cmp
in
mov
push
xor
xor
mov
jg
inc
xorl
xor
lds
fwait
data16
dec
lea
call
cltd
dec
dec
subl
popf
dec
in
mov
adc
adc
sbb
push
popf
daa
pop
jno
pop
mov
mov
stos
daa
inc
popf
inc
pop
pop
inc
jmp
lds
imul
pusha
xchg
lret
push
in
ja
cli
lcall
mov
rol
jnp
dec
cmpsl
jle
mov
ss
mov
daa
mov
iret
and
lock
repz
daa
scas
test
push
sub
xchg
sub
outsb
stos
add
inc
lods
jnp
xor
push
xchg
pop
xchg
in
hlt
mov
stos
pop
lret
mov
or
mov
cli
xchg
push
cmpb
int3
sub
nop
lds
sahf
cmc
sbb
movsl
jmp
push
xchg
into
inc
icebp
jp
mov
sub
inc
loope
loope
xor
jo
cmpsl
stc
rorl
xor
pop
dec
add
es
lahf
lcall
push
lock
aad
push
iret
cmp
cmp
movsl
xchg
or
xchg
ficoml
aam
mov
xchg
scas
push
rcrb
mov
int3
adc
xor
sub
sub
lds
cmp
aas
push
xor
mov
scas
scas
ret
loopne
jp
mov
pusha
repz
lock
ret
pop
add
sub
mov
push
sub
rorl
sub
mov
loope
mov
adc
dec
cmp
pop
cmp
scas
sbb
sti
push
cmp
fwait
in
je
rcl
in
push
inc
iret
mov
cmp
insl
js
outsb
cs
ror
mov
and
mov
push
jae
pop
add
sahf
jge
sub
rclb
cmpb
aad
fdiv
sbb
daa
popa
ficomps
and
ljmp
test
push
sbb
cmp
inc
sbb
fldenv
gs
mov
inc
scas
mov
loop
in
adc
and
sub
scas
adc
dec
add
cmp
and
add
enter
adc
cmp
and
out
inc
xchg
lds
sbb
sbb
les
in
stos
into
and
shrl
adc
mov
je
ds
call
test
sbb
cld
clc
xor
sbb
in
sbb
ret
dec
xchg
hlt
dec
pop
daa
mov
jge
scas
int3
aad
leave
dec
pop
adc
mov
lods
pop
imul
daa
lds
insb
loope
inc
add
fmull
sbb
ja
and
in
fldenv
jle
mov
adc
sub
jns
stos
mov
and
in
cmpsl
cmp
xchg
les
add
xchg
mov
ret
movsb
and
mov
jb
jo
gs
divb
jecxz
mov
xchg
mov
dec
in
pop
adc
add
xchg
loop
pop
les
and
in
sub
insl
xchg
and
add
sbb
fistpll
jnp
rcrl
add
xor
roll
out
nop
aaa
push
pop
add
mov
jp
pop
stos
bound
mov
add
dec
mov
fst
dec
jge
push
loope
out
xlat
and
jp
cmp
push
mov
popw
or
loopne
jne
aad
sar
mov
adc
jecxz
mov
loopne
sub
jbe
mov
mov
inc
das
in
imul
xchg
fistpll
int3
push
loope
jno
cwtl
fisttpl
jnp
sbb
test
mov
mov
jo
push
sar
sbb
cwtl
add
setne
cmpsl
bound
or
push
push
icebp
inc
inc
mov
mov
int3
in
lods
insb
cmp
xor
lock
mov
sub
mov
adc
pop
jmp
xor
sub
jmp
dec
in
scas
aad
in
cld
lahf
pop
dec
xchg
mov
pushl
mov
mov
push
jne
adc
testl
mov
test
adc
imul
xchg
sbb
fyl2xp1
mov
add
cmp
imul
in
sbb
sets
popa
and
dec
jge
hlt
into
les
mov
sahf
pop
andl
dec
ret
mov
jle
lcall
mov
push
test
jne
pop
adc
cmp
into
pop
daa
adc
push
mov
cmp
mov
lret
jb
sub
add
mov
xor
xchg
sub
arpl
shl
rcrl
loopne
push
stos
cs
loop
pop
movsb
test
ret
repnz
jl
jmp
repnz
pop
sbbl
loopne
dec
mov
inc
jb
divb
stos
sbb
testl
fcmovbe
xchg
mov
cmpsl
xor
arpl
cmp
lcall
or
cmpsb
push
and
inc
cld
std
shlb
xchg
lret
negb
stc
inc
adc
mov
js
int3
xor
arpl
pop
inc
aam
clc
lahf
xchg
xchg
lods
inc
mov
icebp
bound
mov
or
popf
pop
ret
push
pop
outsl
shll
push
xlat
int
test
sbbl
add
pop
jno
push
lds
mov
jmp
rcl
jno
adc
mov
lcall
mov
jo
or
xor
adcb
xlat
iret
out
dec
lret
push
scas
pop
nop
push
xchg
pusha
cltd
xorb
jb
mov
pop
stc
pop
outsl
in
sub
outsl
pop
mov
lods
cld
aas
and
test
fidivl
test
cmp
dec
add
and
lahf
mov
pop
push
xchg
xor
rcll
xchg
and
push
cmp
jmp
enter
add
push
fcoms
out
mov
xchg
push
jne
arpl
mov
mov
and
or
push
sbb
inc
es
cmp
mov
jmp
dec
mov
mov
sub
fdivp
clc
mov
pop
xchg
dec
pop
xchg
mov
push
dec
aas
pushl
cmp
push
filds
cli
movsl
add
xchg
xor
jl
cmpsl
ficoms
add
adc
or
adc
mov
in
sub
into
lods
rep
test
or
xlat
sbb
addb
inc
shrl
or
lret
pushf
loop
sbb
test
shlb
clc
test
xorb
dec
loope
cld
pop
or
xchg
mov
dec
stc
andl
dec
aaa
in
add
popaw
data16
rcr
js
cmpsl
ja
dec
add
nop
xor
xor
in
bound
pop
dec
filds
outsb
inc
aam
dec
popf
mov
mov
jne
ds
test
xor
and
push
movsb
inc
mov
jne
repnz
outsb
popa
incl
daa
push
push
aaa
ja
jmp
or
jge
mov
mulb
mov
push
test
pop
sub
mov
add
mov
data16
add
mov
leave
outsl
out
sub
rcl
jae
scas
cmp
in
jmp
aaa
mov
xchg
push
sbb
sub
movsb
mov
jo
iret
sbb
mov
cwtl
xchg
or
mov
push
scas
fwait
clc
jp
std
dec
xchg
or
les
jno
into
pushl
mov
add
pop
add
mov
mov
push
cs
sub
scas
add
push
fwait
addr16
add
cltd
xor
xor
scas
ret
or
or
aad
ss
pop
adc
add
pop
xchg
mov
jns
fstl
xchg
cwtl
jno
fmul
out
jmp
sub
pop
aaa
int
xor
icebp
jne
push
sbb
mov
lret
xchg
mov
filds
sbb
and
xlat
ds
cmp
mov
mov
add
sar
sub
pop
enter
popa
xor
in
int
sbb
cmpsb
imul
mov
mov
mov
ljmp
mov
xor
lahf
mov
aas
mov
insb
pop
mov
cmp
outsb
and
pop
in
into
and
adc
xchg
fwait
mov
dec
test
sub
test
pusha
sahf
addr16
or
mov
sub
rolb
iret
idivb
dec
jge
mov
cmp
leave
pop
inc
lret
push
pop
movsl
movsb
repnz
push
ljmp
shl
jmp
cs
cmp
mov
mov
push
movsl
lret
scas
inc
out
scas
data16
push
fldenv
fistps
jno
js
cmpsl
sub
in
lods
jno
add
fisttps
call
cmpsb
inc
mov
nop
mov
popf
arpl
loop
mov
jo
jg,pn
repnz
and
int3
rcl
fwait
xchg
push
and
xchg
pop
and
loop
push
nop
std
jbe
hlt
cmpsl
rorb
enter
inc
repnz
add
push
out
xchg
imul
in
mov
and
jns
and
xor
jmp
ds
js
push
pop
xchg
mov
dec
stos
aaa
loope
std
movsl
popf
xchg
dec
mov
nop
jmp
loop
jo
movsb
xchg
mov
jg
aas
add
loopne
cmc
cmc
mov
or
cmp
dec
and
jo
pusha
not
std
cmp
mov
imul
adc
ja
add
adc
lahf
testl
jmp
xchg
fdivl
scas
jnp
mov
inc
idivb
cltd
mul
fisttps
test
dec
xchg
das
mov
and
jg
jp
cmc
add
icebp
xor
ljmp
push
mov
rorb
test
push
pop
movb
popa
mov
or
hlt
sub
pop
add
mov
dec
push
sbb
or
jge
lock
add
jnp
js
sub
jge
sbb
sbb
out
jnp
in
lods
in
shlb
pop
nop
pop
out
gs
jns
loope
popf
mov
fwait
push
mov
push
loopne
sbb
loopne
and
or
stc
fwait
jmp
cmp
jmp
jns
test
xchg
sub
jns
cwtl
cmpsb
sti
jnp
ret
sbb
pop
xor
mov
fmull
xchg
push
cli
cld
popa
jge
iret
icebp
test
roll
inc
mov
in
push
jg
out
ret
adc
lea
popf
icebp
hlt
xchg
push
mov
inc
scas
cmpl
mov
subl
pop
mov
movl
dec
mov
push
ficompl
add
mov
jecxz
sbb
ljmp
jno
imul
push
outsl
ss
mov
xor
je
cmc
pop
lods
sub
int3
loope
test
icebp
dec
addr16
das
adc
out
or
add
jecxz
sub
lret
and
dec
ret
cmpsl
out
and
sbb
push
and
aad
popa
jg
cli
push
jbe
popf
mov
xor
pop
mov
mov
hlt
pop
negb
lea
fisubrs
mov
and
imul
fcomi
sarb
aad
scas
push
jo
or
sarl
mov
lock
ja
into
outsl
xchg
pop
adcl
jmp
in
dec
sbb
pop
pusha
fcoms
dec
scas
js
adc
jl
xor
xchg
add
mov
xor
shl
pop
cmp
jnp
in
repnz
fdiv
jp
add
dec
adc
loop
pop
rol
mov
or
push
lret
iret
gs
fdivrs
and
jbe
lcall
cmp
jecxz
inc
xchg
mov
cmc
jnp
fsubrs
dec
gs
aas
cmp
shl
sbb
xchg
jbe
aaa
dec
insb
sbb
addr16
loope
jo
ret
inc
mov
cs
lds
mov
lcall
imul
lods
cmp
in
jb
lods
pop
cltd
pushf
gs
push
pop
mov
mov
ror
push
xchg
imul
push
aad
pop
rcll
mov
fsubrp
pop
cmp
js
mov
sub
mov
cltd
cmpsl
and
pop
test
in
sub
mov
adc
cld
decl
ror
add
outsb
or
mov
cmp
add
std
inc
in
or
mov
imul
jnp
jp
shll
testl
ljmp
pop
sub
jnp
pop
sbbl
ljmp
sahf
xchg
roll
movsb
cmp
mov
insl
xor
pop
icebp
ja
mov
inc
xor
xor
lea
xchg
aaa
ret
lret
jbe
imul
ds
xlat
sub
add
insb
sub
mov
lret
data16
stc
shr
xor
jb
jecxz
add
mov
or
ja
pop
add
push
rcl
push
xchg
dec
inc
add
mov
inc
xor
scas
sub
dec
sub
shrl
or
add
sti
jne
jg
fprem1
dec
test
lea
xchg
mov
xchg
sbb
fnstcw
push
push
movsl
push
jo
mov
xor
mov
jno
push
mov
ror
lock
idivl
test
movsb
mov
dec
gs
or
lea
pop
sbb
outsl
xlat
and
add
daa
shll
aaa
arpl
movsb
ljmp
data16
dec
and
pop
mov
outsb
sub
inc
icebp
out
add
lcall
icebp
mov
inc
arpl
mov
shrl
mov
pop
aad
inc
dec
sbb
or
pop
push
fidivs
out
jl
daa
sti
imul
sbb
or
rorl
sub
adc
adc
mov
cs
jecxz
inc
mov
idiv
push
dec
test
adc
push
inc
in
jl
icebp
sub
testl
pop
inc
in
shl
outsb
or
inc
imul
adcl
fwait
sahf
jbe
and
mov
xchg
imul
je
icebp
mov
pop
and
outsb
das
jnp
jecxz
xor
in
mov
aaa
push
or
lock
mov
hlt
iret
push
jnp
or
mov
mov
inc
xor
xchg
sahf
lret
cmp
rorb
aas
ret
dec
and
inc
ja
shll
enter
jl
jl
xchg
cli
lods
pushf
inc
jle
aaa
jge
out
sarl
pushf
rorl
and
lahf
push
outsb
test
cmpsl
sarb
adc
cmc
mov
lret
pushf
add
adc
stos
cmp
scas
frstor
mov
push
pushf
stos
fisubrl
adc
push
and
inc
lods
or
jb
fst
mov
and
js
andl
jne
pop
jecxz
cmp
and
mov
out
sbb
inc
cmpsl
pop
cmp
scas
outsl
pop
cmp
out
mov
fcmovnbe
cs
pop
sub
mov
inc
mov
sbb
mov
inc
inc
repnz
jge
testl
rclb
outsb
xlat
data16
and
out
ud2
push
mov
or
sahf
fbstp
mov
add
mov
and
and
fwait
mov
xor
adc
pop
leave
and
aas
cmpsl
jg
mov
adc
mov
and
frstor
dec
mov
shrl
jmp
jmp
sbb
lods
addl
mov
xchg
pop
push
lret
cmp
pop
xchg
adc
xor
add
mov
fidivrs
mov
cs
in
lods
pusha
mov
jo
add
pop
push
xor
inc
inc
sbb
fcoms
movsl
mov
lret
in
or
mov
cs
outsb
jge
jmp
roll
movsl
or
mov
aam
add
mov
sub
add
fwait
into
jmp
call
dec
push
insl
fs
and
test
getsec
inc
faddl
mov
ds
insl
mov
mov
cmp
insb
lods
nop
pusha
pop
aaa
movsl
push
xchg
cltd
lock
xor
push
jmp
cmp
add
test
orl
fwait
jb
testl
arpl
dec
daa
xor
push
fnstsw
aad
pop
dec
loopne
pop
xchg
test
into
cltd
imul
jne
in
jge
into
push
jle
and
jl
loopne
cmp
xchg
lods
popa
lcall
insb
aam
dec
sub
daa
pop
enter
push
aam
cwtl
jne
cmp
push
and
sbb
and
pop
aaa
aad
mov
xchg
push
jbe
inc
cmp
fbld
mov
push
test
out
jge
pop
clc
dec
add
jbe
inc
push
fsts
addr16
cmp
add
inc
push
inc
iret
cld
mov
pusha
out
repnz
sbbl
addr16
sub
pusha
ljmp
pop
sub
aaa
push
pop
cld
or
daa
xchg
cmp
je
mov
jl
xor
adc
inc
pop
push
sahf
jne
fiadds
js
lea
pop
jl
or
daa
aam
xchg
adc
aaa
ljmp
sbb
and
cmpb
clc
repnz
in
adc
xchg
dec
loop
cli
sar
add
xchg
inc
add
mov
sbb
cmp
xchg
or
adc
jb,pn
cltd
jb
dec
dec
enter
or
lcall
ds
pop
gs
push
jb
xor
setns
fwait
ret
sbb
jo
rolb
rcrl
add
cld
data16
ret
jp
push
pushf
mov
subb
imul
sub
jae
ss
jb
rcl
mov
pop
dec
dec
test
xchg
or
fmuls
push
mov
addr16
pop
dec
popl
pop
fdiv
dec
push
cmpl
outsl
andl
das
add
iret
sub
iret
andb
mov
pop
sub
inc
mov
fldt
adc
dec
shrl
lret
aaa
lahf
fisubrs
mov
mov
adc
ljmp
inc
test
lea
ds
test
aad
inc
jg
jle
mov
and
and
push
pop
mov
scas
ljmp
fcmovne
pop
push
loop
shrl
fstp
shrb
mov
sbb
mov
repnz
and
in
mov
adc
movntps
sbb
xchg
mov
adc
or
loopne
lea
or
xor
pop
clc
push
pusha
xchg
sub
gs
aam
inc
add
cmc
adc
out
iret
add
pusha
int3
jo
mov
mov
leave
testb
push
cli
jmp
int
sbb
lcall
sub
popa
xchg
dec
jmp
add
iret
or
in
stos
and
mov
fisubrs
mov
cmp
mov
sbb
sbb
jmp
sub
je
lahf
jg
mov
cmp
inc
mov
sub
scas
push
adc
cmpsl
pusha
cs
test
mov
xor
call
jb
sub
outsb
mov
jo
lcall
push
sbb
xchg
imul
loope
mov
loopne
sbb
jae
enter
pop
jmp
icebp
dec
idivl
xlat
jo
imul
mov
iret
push
add
or
mov
sbb
adc
and
sub
pop
out
gs
int3
negl
call
sarb
push
arpl
push
lods
jl
jp
mov
lahf
xchg
das
or
iret
and
mov
push
loop
testb
and
sbb
pop
inc
in
stc
pop
or
aaa
or
leave
add
cmp
dec
fadd
sub
mov
and
sub
cltd
lret
mov
test
jo
xchg
ret
sbb
imul
dec
add
cmp
daa
movl
push
icebp
in
xchg
xchg
xchg
loop
inc
lahf
sub
pop
sarb
das
out
sub
adc
adc
setp
mov
pop
pop
ljmp
pop
push
or
pusha
mov
test
and
aad
mov
scas
mov
sbb
jle
ss
out
aad
lret
xchg
mov
push
rolb
inc
push
leave
mov
in
mov
xchg
add
xchg
jo
mov
mov
popa
test
addr16
push
scas
sbb
mov
dec
stc
inc
dec
xchg
push
pause
inc
cmc
or
int3
push
mov
popa
mov
and
shl
cli
mov
sbb
jge
inc
cmp
call
or
sahf
or
ret
hlt
stc
jns
mov
rorl
fstl
mov
shlb
shll
mov
insl
out
push
test
mov
push
movsb
insb
test
popa
pop
jne
scas
mov
xchg
xor
mov
add
xchg
xor
dec
pop
mov
push
mov
fimuls
cmp
test
push
inc
test
mov
enter
dec
fucom
push
loopne
rolb
cli
test
pusha
out
iret
test
enter
jbe
addb
xchg
jne
out
mov
scas
cmp
push
dec
jb
push
pusha
jmp
mov
in
jg
int
push
stos
sahf
stos
dec
xchg
add
pop
cld
mov
lahf
movsl
insb
out
inc
stos
cs
imulb
ficomps
push
in
rcrb
sub
mov
movl
add
xchg
outsl
dec
xchg
dec
hlt
fildl
sub
outsl
insl
push
rcrb
sbb
mov
or
mov
xor
outsl
ljmp
jo
pop
mov
scas
lods
mov
stc
mov
test
dec
lods
stos
mov
out
mov
lods
leave
mov
ljmp
or
inc
loope
lret
in
fisubrl
mov
shlb
xlat
dec
xor
adc
loopne
cmp
test
out
xor
xor
lcall
into
lea
pop
mov
test
sbb
sub
mov
pop
push
testl
push
lret
adc
stos
mov
jge
dec
push
mov
mov
cmc
imul
in
cs
xor
and
cmp
and
sub
rcll
add
xor
mov
popf
ds
dec
mov
roll
pusha
js
mov
push
mov
sarb
sbb
int
cli
sbb
loopne
orl
pushf
repnz
aaa
sub
fisttpll
lods
mov
ret
and
imull
cld
inc
or
add
test
ljmp
sbb
ljmp
pop
loope
mov
test
inc
repnz
repz
pop
cli
sub
xor
dec
arpl
orb
fsubs
loop
scas
sub
aam
sub
add
lret
fadds
lret
bnd
mov
test
mov
cmp
xor
xchg
dec
sub
jns
inc
or
lahf
jnp
popa
xor
sahf
xorl
sbb
rorb
push
or
outsl
cs
data16
jns
cmp
and
pop
rcrb
push
addl
mov
shrb
in
mov
mov
xchg
ret
mov
aam
sub
lret
xor
adc
testb
aaa
push
int
or
adc
int3
int3
aam
xor
negl
fs
cmp
push
adc
icebp
pop
jns
lret
add
adc
mov
shrb
or
push
push
fcompl
loop
push
ficompl
ss
jo
das
clc
jmp
test
jae
lcall
aaa
dec
daa
sub
fs
xchg
sbb
sub
inc
and
cltd
or
aas
movsl
in
out
mov
or
push
mov
pop
ds
mov
dec
sarb
adc
mov
mov
jge
notb
stos
cmp
aam
pop
cmp
jno
inc
scas
or
or
inc
lcall
jne
push
mov
ret
into
repz
add
bound
add
popa
pop
rclb
roll
jns
add
xor
out
cmp
push
insb
sti
and
aam
shrb
push
fldl
pop
fldt
or
lcall
mov
jle
pop
mov
sbb
and
lret
ja
lds
xor
pop
jnp
sub
inc
fnstenv
sbb
ljmp
inc
inc
dec
repz
add
movsb
daa
in
cmp
push
jle
xchg
pop
sahf
sbb
sbb
xchg
push
push
enter
cltd
mov
in
mov
xchg
insb
ss
xor
shrb
mov
repz
jge
int3
mov
mov
aam
xchg
xchg
adc
xchg
testb
inc
je
rcll
mov
mov
sub
add
dec
clc
push
lcall
into
loopne
mov
scas
push
xlat
movb
lcall
fdiv
inc
hlt
in
or
pop
xchg
enter
xor
divl
fildll
sbb
mov
pop
jecxz
sub
push
insb
dec
icebp
pushw
sub
dec
in
into
and
pop
imul
dec
push
leave
adc
push
mov
ljmp
jb
adc
jmp
mov
scas
cwtl
fs
fwait
pop
push
das
enter
repnz
mov
loopne
push
stc
xchg
mov
out
jecxz
xchg
fnsave
addl
mov
jle
cld
rorl
loop
loope
shr
push
sarl
adc
cltd
xchg
sbb
cmpsl
xor
insb
mov
int
adc
popf
inc
push
aad
mov
orl
jne
addr16
add
js
aaa
inc
mov
shl
aam
mov
mov
int
adc
adc
lret
popf
mov
xor
loopne
aaa
inc
fwait
xor
imul
sbb
add
lret
xor
adc
sub
pop
adc
dec
sahf
es
xlat
mov
sbb
or
or
pushf
call
out
fisubrl
adc
repz
xchg
cmp
dec
fwait
sbb
loop
inc
push
lock
mov
push
pop
mov
inc
cmp
sbb
sub
add
xor
loopne
cmpsl
cmp
rorb
insl
lret
stos
jae
les
jb
mov
sbb
jmp
sahf
mov
sahf
add
icebp
aad
aad
rorl
rcll
push
movsl
push
adc
subl
add
and
fildl
cmp
gs
sbb
sbb
scas
mov
nop
push
out
add
test
mov
lret
adcl
int
adcl
ret
jle
cltd
pop
xchg
sbb
lock
jb
dec
cmp
or
xchg
dec
push
adc
int3
inc
pusha
adc
lods
cltd
stos
jp
inc
clc
xor
popf
jle
loop
aas
out
adc
mov
fistpll
popa
jl
clc
call
mov
jno
rcrl
jbe
out
ret
shll
mov
adc
bound
repz
inc
or
rcl
nop
in
jnp
cmp
addl
dec
pop
jbe
pop
stc
lret
adc
cmc
psrlq
iret
cli
hlt
inc
clc
mov
or
fs
sbb
xchg
leave
dec
cmp
mov
adc
dec
fwait
lock
loope
aam
cltd
pop
lea
scas
cmp
les
mov
addr16
sbbb
faddl
mov
ficoml
aad
dec
call
cli
inc
sarl
leave
ljmp
mov
test
jmp
or
jle
imul
dec
dec
fst
push
dec
adc
stos
popf
andb
outsb
sbb
sbb
popf
lcall
popa
icebp
nop
lock
mov
push
jns
pop
js
jb
daa
mov
incl
pop
push
push
inc
sbbb
movsl
push
jp
int
cmovne
mov
out
and
xor
mov
xor
xchg
jbe
dec
aas
packuswb
xchg
fmul
mov
mov
jne
or
add
or
int3
pop
loopne
dec
shl
bound
jp
in
jne
arpl
fcompl
shr
js
push
jno
lahf
sti
xchg
movsl
das
cmp
cmp
popf
stos
xor
push
dec
pop
cmp
jb
and
lret
dec
xchg
lret
fstps
inc
mov
out
cmp
and
stos
out
or
loopne
dec
push
int
mov
test
cmp
ds
fsubrp
add
xchg
sbb
outsb
jl
mov
pop
add
mov
jecxz
repz
in
and
mov
sbb
jle
add
mov
adc
dec
cltd
js
add
rorl
jne
call
in
jmp
pop
popa
lcall
aam
xchg
sbb
mov
mov
pop
add
xchg
mov
icebp
les
loopne
sbb
mov
lcall
pop
mov
jae
sbb
jae
out
cmp
std
pop
mov
mov
push
jl,pn
push
imul
push
dec
jl
xor
decl
pop
clc
mov
ret
inc
out
lods
jbe
cmpsb
cmp
or
fwait
addr16
pop
mov
call
mov
aas
adc
push
add
add
mov
leave
lods
mov
call
mov
push
cmp
int3
rclb
es
mov
sbb
fwait
mov
test
arpl
fdivrl
push
jbe
or
dec
jno
pop
cmp
je
xchg
ljmp
sbb
in
lods
es
jp
stc
mov
inc
push
cmp
xor
sarl
pop
pop
jl
push
mov
mov
dec
or
push
jns
xor
lret
jae
xor
adc
test
mov
push
stos
loopne
testb
dec
gs
cmp
sbb
or
das
data16
mov
or
lret
lods
mov
dec
cmc
nop
inc
sbb
cld
xor
bound
mov
pop
int3
inc
jbe
adc
movsl
daa
mov
pop
push
lcall
mov
mov
test
xor
ret
hlt
jb
jnp
out
sbb
aam
outsb
xchg
xchg
push
add
xor
js
mov
mov
stos
push
xlat
inc
xchg
mov
std
in
push
adc
cmpsb
push
pop
pop
mov
push
sbbl
push
mov
hlt
stos
lds
sar
xor
cmp
or
and
cmp
jbe
xchg
sbb
push
mov
shl
sbb
push
inc
sbb
and
ret
fistps
sbb
out
xor
aaa
inc
jns
mov
push
sar
xchg
add
and
push
mov
and
into
stc
push
call
pushf
inc
imul
fimull
cmc
arpl
push
fnsave
jg
leave
in
pop
cmp
sbb
cli
lods
push
or
inc
fcomps
ret
cwtl
into
test
jp
out
fistpl
pop
pop
inc
inc
pop
sbb
out
xchg
jb
test
es
and
jg
jbe
mov
outsl
insb
push
jb
orb
popa
push
divl
pusha
int
dec
je
sub
fnstsw
sbb
ror
rcll
test
enter
out
xchg
pushf
scas
ljmp
call
cmp
mov
mov
stc
push
test
jl
xor
mov
leave
aam
jae
mov
sbb
insl
setbe
loop
cmp
add
in
sbb
ja
fsubs
mov
cmpsb
sbb
xor
mov
pop
and
cmpsl
and
xchg
mov
xor
sub
outsl
adc
stos
dec
mov
xchg
ret
cmp
lock
mov
and
pop
inc
fsubrs
jb
fsubrp
aam
mov
jae
cmp
xchg
testb
imul
inc
ja
cmp
push
inc
mov
add
jle
loop
sti
lahf
xchg
ficomps
sbb
mov
mov
sub
sub
mov
jl
add
dec
andl
xlat
lret
push
in
aas
jb
out
in
stos
cmc
and
add
pusha
or
les
xchg
xlat
push
call
xor
movsb
fisttpl
jnp,pn
cli
adc
ret
lahf
cld
pop
dec
scas
cltd
stos
mov
xor
add
fcomps
es
xchg
adc
xchg
lahf
mov
lods
push
fbstp
sbb
out
hlt
xchg
inc
pop
pusha
rorb
in
lods
push
or
imul
aam
jb
movsb
cltd
rolb
and
dec
mov
xchg
stc
adc
jmp
sbb
stos
xchg
push
in
loopne
cmp
xchg
test
pop
cltd
adc
iret
jecxz
shll
and
push
sti
ja
sub
and
xorl
mov
dec
fimull
fsub
movsb
scas
push
cs
sbb
jecxz
jno
cmpsb
enter
icebp
xor
inc
lret
push
aam
mov
push
or
xchg
add
add
addr16
jnp
or
je
arpl
addb
pop
pushf
push
cld
mov
pop
jno
test
dec
xor
xor
testl
xor
icebp
aad
and
imulb
sbb
sbb
mov
or
ret
pop
repnz
jp
mov
inc
ret
outsl
lcall
pushf
sub
jg
out
cltd
inc
xlat
out
adc
cmc
or
scas
test
or
or
push
iret
push
mov
dec
inc
xchg
popa
ljmp
and
sahf
adc
test
xchg
inc
xchg
dec
lds
mov
hlt
fstl
cmp
xor
movsl
cmp
xlat
leave
mov
adc
inc
xor
mov
imul
icebp
push
cmp
add
pop
push
pop
mov
repz
icebp
pop
xor
mov
out
out
imul
pop
das
fs
loope
repz
out
int3
lret
push
fcompl
add
fdivs
mov
ja
ss
lock
bound
cli
les
pop
in
fwait
mov
lahf
push
cwtl
ljmp
mov
jbe
dec
out
call
aaa
pop
lock
mov
aas
jb
push
repnz
pop
leave
pop
shrb
xchg
shll
test
sub
mov
daa
mov
cmp
negl
outsb
int
mov
xchg
mov
xchg
sub
xchg
rcll
insb
mov
in
xchg
cld
in
xor
dec
lods
inc
mov
and
rolb
punpckhwd
lea
ss
adc
int3
imul
stos
jne
cmc
mov
xchg
inc
xor
mov
das
stos
stos
and
mov
inc
aad
push
push
mov
and
xor
lahf
mov
pop
mov
xchg
push
xlat
test
mov
mov
pop
jl
sub
outsl
adcb
sbb
mov
iret
cmp
sub
add
repnz
stos
pop
popa
mov
loope
in
xor
fstpt
loopne
add
daa
icebp
push
test
repnz
pop
icebp
xchg
push
push
lods
xor
ss
sbb
aam
mov
lock
sahf
mov
cmp
dec
fidivrs
sahf
push
and
outsb
jmp
inc
fcomps
js
iret
sub
add
inc
xchg
sub
pop
ret
leave
xor
out
popf
shrb
push
cwtl
xchg
xchg
test
xchg
dec
and
rcr
cmpsl
pop
insb
in
clc
inc
sbb
paddq
push
sub
and
mov
out
mov
jmp
cmp
push
jmp
mov
shl
andb
pusha
sub
adcb
mov
cld
rorb
in
pop
lret
sub
pop
mov
adc
movsb
pop
mov
jmp
lcall
lods
imul
and
rolb
mov
pushf
test
jle
hlt
leave
imul
jmp
arpl
add
in
or
adc
je
rcll
jp
jp
inc
leave
sbb
jne
cmp
into
hlt
cmp
pushf
cmp
push
daa
add
sub
loop
pop
xchg
movsl
out
in
in
std
ret
inc
sarb
pop
push
fistl
gs
sbb
mov
idiv
out
fs
movsb
rcll
out
sub
adc
cmp
xor
or
cltd
mov
mov
inc
mov
add
bound
xchg
stos
pop
test
loope
out
add
cltd
mov
addb
call
arpl
lds
xlat
andb
xchg
out
or
popf
dec
add
lock
xor
mov
testb
cmpsl
ret
pop
decl
cmp
arpl
shrb
push
in
sbb
cmp
inc
mov
mov
lea
and
stc
jmp
pop
jbe
pop
add
xorb
or
fsubrs
or
mov
into
jge
imul
jno
lods
mov
loope
mov
mov
pop
iret
faddl
loop
test
sub
adc
lcall
les
pop
inc
cmp
rorb
pop
cs
scas
fwait
sbb
pop
mov
mov
adc
or
adc
or
sub
lret
xchg
mov
out
out
es
adc
adc
mov
ret
aas
leave
or
add
adc
mov
jg
das
lret
call
or
add
ds
mov
xchg
add
jmp
ljmp
or
out
enter
dec
adc
mov
mov
mov
and
cmpsb
xchg
stos
jle
frstor
stos
and
insb
out
mov
and
orb
ss
fimull
sti
dec
in
adc
in
imul
dec
sub
repz
cmp
xchg
pop
addr16
add
or
pop
jmp
data16
popa
mov
dec
ss
pop
int
in
push
loopne
cmp
dec
sub
imul
scas
nop
sub
frstor
iret
insb
dec
aam
pop
xor
subb
mov
jg
jae
test
xor
je
and
cmp
dec
sbb
lods
xchg
test
cmp
test
dec
xchg
cmp
mov
clc
mov
jecxz
out
push
add
add
insl
push
cwtl
xor
orb
in
vcvttpd2dq
mov
jnp
bound
popf
pushf
xchg
pop
xor
bound
push
cmp
jle
aaa
jmp
and
adc
ret
js
clc
lock
fnstcw
push
cs
inc
sub
xorb
arpl
cmp
ljmp
cmp
push
push
xchg
outsb
outsl
popf
sti
fbld
movsb
sbb
outsb
jns
stos
adc
movsl
adc
movsb
xchg
sbb
push
mov
jb
sarl
ret
insb
loopne
cltd
add
cmc
rcrl
stos
inc
lods
and
leave
movsb
stc
sbb
inc
pop
subb
enter
jae
mov
aad
loopne
dec
push
hlt
fisubrl
xor
aad
fldl
cli
fcompl
sbb
cli
pop
fucomp
in
mov
adc
inc
pop
popa
cmp
adc
out
xchg
sub
sbb
pop
in
es
push
sarb
pop
ljmp
pushf
ror
call
jmp
inc
inc
push
es
pop
jg
push
jns
cwtl
pop
pop
mov
ds
les
or
adc
cmp
leave
pushf
xchg
in
jmp
jb
mov
cmp
inc
arpl
pop
out
xor
repnz
sub
push
xor
mov
adc
pusha
enter
mov
insb
fldcw
pop
mov
in
dec
loop
push
aaa
test
inc
jne
fcompl
fcmove
adc
scas
sbb
add
push
and
loope
outsl
adc
jno
and
jns
lahf
sub
shrl
pop
aas
fwait
jecxz
inc
mov
imul
dec
fdivr
pop
aas
pop
loop
std
dec
cltd
incl
movsl
je
dec
xor
dec
cli
sbb
dec
sbb
call
es
mov
leave
pop
jo
movsl
clc
push
sub
add
jmp
cmp
fcoms
lods
xor
insl
sub
xchg
mov
add
lcall
mov
mov
sbb
mov
mov
dec
sub
inc
insl
jnp
jae
sbbl
pop
in
hlt
in
push
or
cmc
popf
sbb
popa
cltd
xchg
jnp
repz
aad
mov
bound
mov
fistps
in
or
mov
push
sbb
pop
jg
xlat
fidivl
and
push
mov
clc
popf
push
xor
pop
inc
sbb
and
imul
push
inc
orb
movsl
jl
in
mov
jo
sbb
iret
cmp
aad
in
iret
in
movsb
out
ja
push
pop
pop
pushf
xor
or
cli
pop
jecxz
imul
and
bound
cs
cmpsl
ss
mov
and
mov
or
int3
test
pop
mov
ss
pop
or
nop
ss
or
dec
in
loop
push
xchg
lcall
movsl
fcoms
xchg
and
or
jae
addr16
xor
sub
popa
leave
dec
inc
sar
mov
and
pop
xorb
pop
push
jo
adc
inc
xor
pop
fcoml
fsubl
ret
jo
in
or
in
and
jno
cmp
ret
push
jne
cmpsl
lds
pop
jne
es
movsb
xor
nop
jecxz
cmpsb
jecxz
in
jne
adc
pop
repz
out
lock
ficompl
dec
cmp
sarl
mov
inc
mov
or
jecxz,pn
cmp
push
inc
xchg
stos
ljmp
mov
push
ret
imul
and
movsl
subl
notl
sub
pushf
in
and
push
xor
fbstp
adc
iret
lods
popa
pop
data16
ret
pop
sub
adc
gs
lock
into
cmp
adc
push
fstps
mov
sahf
iret
jb
movsb
aas
mov
in
adc
sti
cmpsl
cs
push
je
fwait
repz
push
or
out
cmpsl
inc
sbb
xor
adc
pusha
notl
xor
std
je
inc
pusha
std
ja
cmp
and
jge
pop
stos
aam
inc
xor
push
xor
mov
movsl
arpl
pop
sub
loop
in
pop
jb
xchg
mov
sarb
inc
push
ret
mov
xlat
adcl
imul
es
movzbl
jg
mov
int
mov
movsl
inc
or
push
loop
push
mov
pop
xchg
movsl
xor
adc
in
xor
invd
imul
or
popf
not
aam
imul
or
fiaddl
add
or
das
in
push
insl
arpl
dec
mov
and
sub
sub
test
mov
cmc
adc
mov
jecxz
xchg
pop
push
mov
cmp
jae
out
xchg
pop
push
out
or
test
imul
mov
lret
xor
sbb
or
jle
sub
xchg
cli
push
sub
pop
pop
daa
js
pop
cmpps
push
movsl
pop
leave
cmp
sub
push
lock
sbb
inc
sub
push
pop
pop
mov
jl
fists
add
cwtl
sbb
movsb
or
xchg
dec
push
int
pop
push
mov
sub
inc
bound
add
mov
or
pop
fldcw
mov
stos
add
pop
push
arpl
cmp
pop
lds
jns
xchg
je
xbegin
jns
mov
mov
ret
insb
push
loopne
imulb
jmp
xchg
orb
fadds
aad
rcrb
cmp
xchg
adc
jbe
mov
popf
sbb
dec
movsl
sbb
mov
jmp
cmp
dec
mov
mov
mov
fisttpll
mov
jb
pop
pop
inc
mov
dec
sub
iret
inc
aaa
push
jg
ljmp
inc
or
cmp
adc
loopne
mov
push
test
adc
loope
call
ret
rol
jae
jecxz
popa
push
and
push
sahf
or
xchg
push
xor
xor
sbb
cbtw
add
or
imul
push
sub
fdivr
xchg
bound
addl
insl
mov
sti
and
outsb
pop
mov
adc
stos
jecxz
pop
pop
cld
and
sti
xchg
or
mov
mov
movsl
add
add
or
push
loope
add
or
es
out
xchg
pop
mov
repnz
pushf
pop
and
or
inc
or
imul
add
and
dec
pop
fistpl
mov
aaa
mov
inc
sbb
dec
popa
or
xor
xchg
ret
and
inc
subb
shrl
lds
subps
out
add
dec
sub
inc
imul
jb
jno
ret
repnz
xor
xor
popf
add
add
xchg
cmpsl
in
aad
addr16
sub
popf
test
mov
push
pop
add
xchg
push
in
pop
sbb
add
lock
push
pop
cmp
or
in
adc
cmpsb
pxor
sbb
ret
add
test
in
adc
jbe
hlt
and
push
rep
orb
lods
cmp
cmp
xchg
negb
jo
mov
stos
pusha
jbe
aaa
sub
mov
mov
dec
sbb
push
add
fdivl
pop
sbbb
dec
loope
mov
push
sub
clc
dec
adc
xor
rcr
mov
sahf
loop
mov
pop
in
imul
jb
push
xor
adc
mov
sar
jae
sub
cmpsb
sub
std
sbb
shufps
and
mov
push
loope
cltd
notl
icebp
cmp
add
jnp
sbb
push
and
ficoml
aad
mov
test
fcmovnb
sbb
addr16
leave
fldt
loope
cmovae
ss
cwtl
stos
xor
ret
cmp
test
nop
add
stos
sub
and
or
test
fbld
jle
lock
inc
gs
mov
fisubl
scas
sbb
sbb
bound
sarb
xchg
pop
or
popa
dec
xchg
jbe
mov
mov
sahf
push
cmp
sub
daa
lahf
jne
mov
cltd
andl
ret
inc
in
iret
cwtl
std
adc
jp
stos
mov
flds
fdivl
into
pusha
jne
jl
divb
xchg
popa
add
int
add
cmp
fsubl
push
daa
in
fmull
mov
or
lea
sbb
mov
daa
jle
sbb
mov
mov
repz
loop
jmp
call
pop
out
lea
mov
xchg
pop
adc
ss
add
sbb
lods
lea
into
out
bound
cltd
scas
mov
stos
cmp
cs
xlat
stc
cmp
ror
test
in
xor
or
xor
push
sub
repnz
push
jge
enter
cmc
test
xchg
sbb
into
jp
jbe
dec
stc
out
out
jecxz
cmc
inc
shl
ss
es
cltd
push
cmp
and
outsl
addr16
and
sbbb
in
mov
xchg
xchg
add
mov
rclb
jno
or
add
jecxz
mov
aam
lock
stos
cli
leave
lods
mov
pop
aas
mov
sarl
je
jge
movb
pop
inc
ret
es
adc
and
cmp
xchg
push
hlt
ret
inc
pop
cld
and
fisttpl
nop
loope
gs
pop
ljmp
pop
aas
mov
adc
test
orb
out
movsb
scas
pop
sub
add
jp
test
xlat
push
scas
and
ret
add
mov
addb
push
roll
sub
cltd
leave
push
daa
addr16
lret
push
addb
or
and
das
in
fnsave
add
sbb
rcrl
inc
push
mov
sub
add
push
rorl
pop
pop
aaa
push
push
pop
daa
in
push
outsb
mov
fmuls
sub
push
out
push
loope
mov
pop
xchg
scas
jp
cs
and
inc
add
add
dec
jl
aas
jge
outsl
lock
push
adc
aaa
mov
xlat
outsb
fbstp
mov
fdivl
rcll
xor
push
jno
mov
fbld
std
mov
dec
fdivp
cmp
push
mov
js
ret
xor
das
dec
push
jl
sar
inc
repnz
cs
ficoms
test
imul
je
or
fwait
sbb
sub
xchg
fsubs
pop
jle
test
adc
and
mov
sbb
mov
fwait
push
fdivrl
pop
jmp
or
xchg
sub
or
mov
cwtl
mov
inc
aad
es
in
push
adc
stos
mov
dec
xor
stos
dec
mov
cmp
cli
sbb
mov
mov
and
cmpsl
xchg
pop
mov
adc
cli
or
xchg
xchg
push
inc
push
movsb
out
push
adc
gs
sub
popf
aaa
push
jnp
sbb
mov
sub
cli
test
addr16
push
shll
adcb
ss
stos
int3
cmp
xchg
rorb
lods
lods
or
outsb
inc
fwait
fwait
clc
sub
pop
cmp
mov
push
fs
clc
push
xchg
pop
out
into
ret
dec
popa
jb
adc
icebp
aaa
cli
xchg
mov
addr16
pop
pop
bnd
jo
mov
jnp
ljmp
cs
adc
jbe
cmpsb
mov
out
xor
push
or
into
push
sahf
scas
add
jb
push
and
cli
jns,pn
push
or
sub
xchg
xchg
in
dec
andb
fmull
xlat
popa
stos
push
out
jge
mov
add
adc
shl
sbbb
add
or
jnp
add
jecxz
jmp
fnstcw
sub
mov
dec
adc
mov
shll
mov
sbb
mov
cld
inc
mov
js
je
call
out
mov
cs
sbb
cmp
lret
outsl
ja
leave
mov
ficompl
jbe
rorb
ret
xor
les
addr16
or
or
adc
jnp
les
pop
test
xor
mov
cmp
js
fisubs
test
xchg
mov
dec
adc
lahf
mov
push
cmpsb
adc
inc
mov
pop
int3
out
mov
lcall
shll
adc
or
xchg
stos
rcrl
dec
dec
loop
rorb
lret
push
mov
out
ljmp
mov
add
ja
bound
ds
xor
cmp
sub
mov
ret
in
cmp
test
pop
push
test
mov
sub
mov
dec
and
xchg
push
ret
inc
test
es
push
fs
les
outsl
jo
fidivrl
push
lds
mov
ror
push
xchg
insb
idivl
push
mov
addb
imul
xor
adc
rcr
inc
pusha
dec
lahf
arpl
dec
mov
scas
mov
pop
mov
xor
sbb
push
pop
pop
lret
dec
pop
pop
mov
push
insb
mov
xchg
in
js
push
jle
rcrb
adc
pusha
dec
xchg
shll
scas
fldenv
dec
pop
dec
pop
dec
lods
in
gs
out
decl
adc
mov
imul
loope
xor
ss
ljmp
clc
out
sub
push
das
in
xchg
rolb
sbb
arpl
out
sub
or
orb
xchg
mov
xchg
xor
arpl
adc
fs
cmp
push
add
stos
sarl
mov
jb
ret
add
mov
cwtl
mov
inc
aaa
jle
pop
cmp
aam
and
pop
bound
jne
mov
aas
xchg
adc
js
in
or
std
jbe
sahf
xchg
daa
push
xchg
push
add
je
aad
lods
lods
add
out
xchg
pushf
rorl
push
imul
and
adc
test
cmp
in
lret
sbb
push
arpl
cmp
inc
mov
popf
aaa
inc
pop
les
lock
jbe
fidivrs
pop
push
clc
movsl
cmpsb
sbb
adc
or
sub
or
lret
pushf
fildll
mov
es
mov
adc
enter
sarl
add
push
jno
xor
das
pusha
inc
adc
out
out
sub
or
subl
mov
adc
adc
dec
add
add
mov
push
in
push
sti
shrb
add
cli
ljmp
cmp
data16
data16
and
mov
lcall
rcr
sti
cmp
cld
call
sahf
dec
mov
jg
into
push
lcall
lea
inc
sar
rep
daa
inc
movsb
mov
jns
mov
sahf
inc
scas
test
jae
repnz
mov
xor
pop
bound
sbb
mov
cmpb
adc
addr16
sub
popf
dec
cs
jmp
push
adc
jecxz
fld
icebp
mov
xor
push
imul
mov
xchg
mov
push
push
aas
pusha
push
insl
stos
lea
xchg
jns
lods
inc
rolb
pop
dec
dec
cli
adc
cmpsb
test
xor
out
cmp
insb
push
inc
loopne
and
mov
jb
lcall
xchg
mov
test
mov
sub
cld
dec
fldl
stc
mov
mov
shlb
sub
pop
adc
xor
push
daa
movsb
aas
fadds
out
cli
jecxz
inc
jae
add
mov
mov
cwtl
nop
mov
cmp
into
mov
mov
jb
jns
rorb
mov
xchg
jnp
jae
jmp
pop
lock
xchg
jbe
jne
mov
shlb
pop
xchg
mov
ljmp
ljmp
pusha
sahf
fwait
shrl
and
push
dec
shll
dec
mov
pop
push
xchg
movsb
mov
inc
mov
cmp
jecxz
cmp
rep
jle
inc
push
sbb
ret
ficomps
mov
cmpsl
test
inc
mov
cltd
hlt
clc
dec
in
jnp
test
jno
fwait
scas
mov
push
cmp
mov
outsb
loopne
sbb
inc
les
jb
mov
inc
aam
mov
incl
pop
cmp
nop
stc
icebp
adc
push
ret
daa
out
cmp
xor
test
fadds
push
dec
dec
aad
mov
loop
push
sahf
jmp
ds
mov
repz
imul
jecxz
sbb
cmp
sub
cmp
fldln2
add
jbe
pop
scas
clc
adc
jnp
pop
sbb
mov
mov
stos
and
ss
mov
and
sbb
push
xchg
fmull
jns
mov
jle
inc
out
test
out
lret
pop
dec
mov
sbb
push
data16
jge
and
jae
inc
add
cmp
xorb
cmp
popa
adc
jnp
xor
or
cmp
test
cmpsl
cli
pop
je
push
je
into
mov
aad
adc
xchg
pop
push
pop
xor
hlt
stos
std
jbe
addr16
pop
dec
notb
sub
addr16
div
addr16
add
cltd
mov
test
inc
movsl
imul
jnp
mov
lret
movsb
mov
push
mov
mov
push
icebp
sub
js
mov
outsb
cmp
outsb
sahf
adc
data16
insb
pusha
push
sub
nop
xor
arpl
out
dec
and
sub
lds
pop
insb
add
sbb
inc
mov
std
cmp
cwtl
add
pop
cmp
xchg
out
cmp
and
test
push
sbb
mov
push
and
add
push
out
adc
xchg
punpckldq
bound
movb
add
fmuls
cmp
mov
loope
test
scas
int3
pushf
and
dec
bound
lahf
or
jle
jle
sub
push
xchg
sbb
jmp
pop
jle
rolb
xchg
push
out
jbe
insb
nop
shlb
aaa
mov
out
leave
cmp
or
outsl
xchg
out
stos
sbb
lret
xor
test
icebp
push
push
push
idivb
mov
aas
xchg
aam
add
sahf
in
or
mov
add
ret
mov
and
lret
xor
push
shrl
pop
push
test
xchg
push
js
cmpsb
test
xchg
lahf
mov
add
jne
dec
nop
fstps
dec
mov
sub
push
enter
pop
shrb
xor
and
inc
mov
or
cwtl
mov
jne
jg
or
add
sarb
inc
ja
inc
pushf
mov
subb
shrb
inc
cmpsb
nop
push
fs
mov
sbb
loop
call
das
push
rcl
gs
xchg
out
xchg
stos
fmul
push
cmp
fnstenv
div
add
adc
cmc
mov
xchg
leave
js
xchg
ret
mov
ja
call
icebp
lcall
daa
mov
loope
call
sar
scas
insl
pop
add
fisubrs
xchg
rcll
adc
fsubrs
mov
fstpl
mov
data16
jecxz
cmp
test
push
rolb
lds
movsl
bound
mov
mov
xorl
sbbl
clc
mov
push
call
std
jb
dec
loope
dec
sbb
push
aam
push
dec
sub
sub
pop
jbe
leave
mov
outsl
pop
mov
leave
outsl
and
or
mov
dec
adc
in
mov
mov
cltd
out
fiadds
inc
into
mov
insl
mov
xchg
adc
cmpsb
and
stos
imul
add
jecxz
bnd
xchg
xor
add
jb
cld
cmpsb
add
cmpsb
jb
dec
pop
xor
cmc
pushl
sbb
test
push
das
xor
jmp
loopne
lods
cli
pop
aad
cmpsl
pop
arpl
aas
push
jle
sbb
movsb
jg
mov
cmp
adc
mov
xchg
into
in
mov
pop
fs
mov
adc
test
es
push
mov
pop
jge
insb
inc
rcrl
or
or
jmp
mov
jae
xchg
mov
jp
mov
jmp
les
test
int
sbb
push
mov
or
cmpsb
xchg
repnz
inc
ret
lahf
and
jns
add
stos
xchg
mov
in
sub
mov
cmp
lods
sbb
adc
xlat
xor
out
lcall
add
loop
and
or
mov
insb
add
loopne
dec
stc
dec
cwtl
js
add
jecxz
sub
idivl
filds
jo
aas
sarl
fisttps
pushl
pop
inc
mov
mov
jp
xor
jb
aam
add
and
insb
lods
jmp
lret
ja
insb
adc
adc
add
inc
pop
lods
lds
cmp
es
fldl
adc
mov
imul
imul
in
mov
sub
adcb
dec
cmpsb
xor
scas
cmp
adc
xlat
cmp
sub
jle
xor
adc
stos
sbb
repz
in
ret
inc
cmp
push
nop
mov
decl
mov
cmp
mov
insl
ror
sarl
bound
inc
adc
iret
addb
cmpsl
adc
jb
push
mov
adc
imul
and
mov
dec
pop
cmpsb
mov
test
cmp
movb
loope
adc
mulb
fs
stos
or
loopne
mov
dec
pushf
xchg
leave
dec
mov
xchg
pop
popf
push
pop
mov
out
xchg
cmp
jb
mov
loop
hlt
scas
push
xchg
js
and
ret
subb
lcall
sbb
mov
mul
and
adc
mov
stos
fsubr
orl
idivb
cli
scas
imul
mov
pop
fs
sbb
sahf
adc
shlb
cmp
pushf
mov
cmpsb
into
decl
xor
mov
repz
and
pop
cmpsl
push
xchg
inc
and
and
and
jg
daa
mov
faddl
add
inc
je
pop
mov
jo
movsb
sub
das
xlat
test
inc
lret
xchg
mov
add
inc
wrmsr
mov
xor
inc
mov
mov
inc
add
fsubrs
imul
adc
mov
movsb
sub
dec
fadds
scas
sbb
mov
and
adc
test
aam
jg
hlt
cmp
je
pop
sub
sub
add
or
adcb
adc
fbld
fs
sub
insb
aas
ds
dec
out
sarb
mov
dec
fmuls
xlat
jbe
push
fcompl
insl
cmp
mov
sub
test
loope
shl
out
mov
push
into
jnp
aad
icebp
into
jb
adcl
fs
ret
xchg
push
lret
push
shlb
nop
mov
call
lret
lods
dec
cmp
pop
sti
sub
xor
loopne
ret
pop
inc
dec
leave
mov
adc
gs
mov
inc
jno
xchg
mov
mov
push
lock
int3
mov
cli
mov
out
push
mov
stos
mov
push
pushf
mov
mov
in
ret
sub
je
mov
in
lods
sbbl
push
pop
sbb
jl
pop
sbb
adc
sub
lock
rorl
mov
mov
jae,pn
movb
shl
and
or
jmp
jecxz
add
lds
fmulp
mov
or
jle
jno
xchg
paddw
add
pop
popa
in
pop
pop
imul
shlb
mov
scas
and
xor
push
sahf
cld
add
bnd
inc
push
icebp
add
or
inc
mov
dec
mov
insl
addr16
les
push
mov
cwtl
sub
inc
xor
sub
xor
bound
es
out
pop
mov
sbb
out
int3
int3
adc
in
adc
out
dec
daa
push
sti
mov
clc
mov
sahf
lock
jno
daa
stos
adc
int3
stos
and
shl
cmp
cmpsb
mov
xchg
xchg
lcall
loop
outsb
adc
rcll
cli
out
out
mov
jg
cmp
fisttps
daa
outsl
mov
addl
inc
pushw
dec
scas
inc
mov
add
outsl
insb
and
dec
pusha
sti
cmove
xchg
dec
sbb
dec
jp
and
adcl
outsl
and
sub
xchg
and
dec
xor
push
out
popa
inc
hlt
ss
inc
xor
adc
insl
movsl
and
cli
test
lret
arpl
scas
je
movl
stos
adc
int
lret
jns
mov
mov
outsl
loop
dec
inc
gs
es
mov
push
mov
pop
mov
and
add
testl
dec
cmp
pop
lea
mov
pusha
das
gs
inc
inc
xorl
in
mov
sahf
rcrb
insb
fadds
addr16
movsl
rolb
jno
fsubs
xchg
pop
lahf
mov
pop
out
outsl
or
rcr
xchg
sahf
mov
xor
push
fsts
cmp
lcall
push
test
dec
pop
xchg
xor
cwtl
jp
add
loopne
jb
xchg
lods
std
scas
pop
bound
or
jno
ror
jbe
icebp
inc
iret
lock
jbe
xchg
repz
sbb
repnz
xchg
loope
or
stc
mov
cs
mov
cmp
or
push
ret
cmpsb
rorb
push
push
mov
imul
mov
adc
push
xor
mov
jnp
out
dec
push
adc
repnz
add
stos
stos
inc
into
adc
jp
pusha
jbe
cmp
lahf
jmp
movsl
xchg
ss
cld
or
or
mov
test
rcr
jge
sbb
es
aam
out
imul
cmp
popa
jns
aaa
xorb
jbe
mov
nop
out
push
loop
jb
addb
leave
sahf
fnsave
dec
das
ds
push
iret
icebp
dec
and
icebp
sbbb
out
flds
ficomps
cmp
or
loopne
jle
cltd
inc
inc
mov
add
sbb
aad
xchg
jne
adc
insl
adc
jp
fwait
xchg
aad
rorb
fwait
xlat
sbb
sub
mov
aaa
xchg
bnd
jae
outsl
inc
bound
dec
popw
jnp
push
jle
stos
movsl
scas
add
xchg
andb
xlat
xor
jo
mov
sbb
sbb
inc
mov
not
mov
dec
xchg
stc
imul
dec
jp
ss
lods
jmp
fists
and
xor
bound
push
jecxz
mov
out
outsl
sub
popa
inc
jb
clc
fldln2
mov
rcr
ret
imul
xor
jbe
rcrb
in
xchg
imul
jmp
lods
and
leave
cmp
dec
mov
jg
lret
movb
push
add
es
lret
ja
inc
or
mov
mov
repz
push
cmp
jg
add
or
lods
lret
imul
add
mov
sbbl
cli
ja
add
sub
aam
or
cmp
inc
push
cmp
sub
dec
dec
and
movsl
or
lods
imul
xchg
push
adc
mov
adc
adc
sbb
pop
jle
pop
mov
pop
adcl
movsb
sbb
fldl
push
xor
in
cmp
adc
cltd
repz
stos
lock
cmpsb
jns
dec
mov
add
jbe
cmp
out
js
mov
scas
mov
jge
dec
out
mov
or
inc
mov
add
leave
pop
imul
jg
popa
inc
jle
icebp
mov
fistps
cmp
scas
sbb
adc
sbb
ss
inc
aam
add
mov
xchg
es
rclb
jne
enter
sbb
clc
enter
mov
popf
in
or
gs
arpl
inc
mov
mov
xor
xchg
mov
or
dec
push
xchg
xor
mov
jb
loopne
aad
jmp
jns
stc
add
cmpl
call
fmul
les
in
push
jle
in
or
fisubrl
mov
aam
js
orb
push
mov
lahf
pushf
add
push
lahf
lock
and
or
sahf
fsubrs
aaa
fdivrl
rorl
mov
lret
dec
bswap
mov
mov
add
sub
incl
stc
popa
push
or
xchg
xchg
mov
xchg
je
mov
mov
xlat
addl
or
or
sub
stos
or
add
imul
inc
insb
sti
xor
fwait
in
fsubs
jno
mov
mov
sti
push
sbb
sbb
or
mov
popa
lods
out
in
xchg
std
loopne
adc
nop
add
sub
mov
daa
cmp
mov
fnsave
mov
insl
js
mov
lret
arpl
jle
cmp
inc
movsb
lds
stos
pop
jg
cli
mov
nop
jo
fsubr
mov
sbb
insb
jns
std
ds
loope
mov
gs
movsb
jo
jmp
sub
stc
jnp
repz
jo
imul
cwtl
mov
cltd
inc
xor
lods
or
in
jb
lods
xor
mov
or
aas
inc
insl
jne
adc
lret
jle
fnstenv
fcmovne
mov
xchg
mov
repnz
hlt
es
dec
pop
push
fadd
jmp
pusha
sub
cmc
jecxz
outsl
cli
xor
jbe
rclb
scas
popa
mov
mov
insl
fiadds
mov
sub
rcll
mov
xchg
push
mov
push
jne
jbe
orb
adcl
rorb
cs
inc
push
mov
sub
test
fldcw
loop
mov
je
mov
arpl
int3
addl
jb
adc
xor
mov
sub
mov
jb
jl
mov
aam
mov
jo
push
das
mov
sbb
sbb
push
lret
cmpsb
mov
mov
scas
pop
xchg
aam
in
inc
ret
xchg
cmc
ret
pop
jl
jle
stos
and
negl
push
in
jg
mov
push
and
inc
and
scas
xchg
mov
mov
test
xor
test
subl
divb
orb
inc
mov
jne
cs
xchg
rol
pop
out
repz
or
popf
or
or
push
push
dec
add
scas
jle
cmp
cmp
cli
bound
stos
inc
inc
jb
fadds
dec
push
or
mov
xor
insl
imul
hlt
mov
dec
out
cli
push
adc
out
iret
or
lods
mov
mov
mov
jb
xchg
mov
cli
ljmp
fwait
nop
insb
stc
jle
cmp
lcall
push
jp
out
fs
mov
lods
inc
insb
mov
sbb
sub
mov
in
xchg
arpl
cmp
push
fcoml
div
insl
push
mov
sti
mov
dec
mov
pop
test
and
jp
insb
imul
push
cmpsb
inc
sbb
mov
fistpl
cmc
js
mov
xor
ja
jb
jecxz
mov
shrl
jmp
push
std
loop
clc
sub
and
sbb
stos
jle
jge
in
mov
dec
mov
ljmp
sbb
push
rorb
call
jp
sub
adc
outsl
cld
test
hlt
cwtl
xchg
cmp
or
jp
push
cmpsb
xchg
add
cmpsb
adc
cld
add
les
mov
pop
push
leave
mov
cmp
arpl
ret
push
sbb
aam
andb
dec
mov
mov
add
inc
iret
dec
nop
inc
loop
sub
mov
mov
inc
les
imul
rcrl
popa
cltd
icebp
cmp
xor
icebp
cmc
mov
jnp
flds
or
test
and
jmp
fsubr
pop
push
mov
jp
loopne
xchg
mov
xor
adc
jge
jns
push
and
ret
add
push
fcompl
mov
cmp
mov
and
push
lods
inc
movb
stos
sti
mov
xorb
stos
xchg
xor
sbb
jmp
cmpsl
nop
fldt
pop
ja
cmpsb
ficoms
push
dec
movsb
jae
fwait
jne
test
cli
or
fcoml
movsl
dec
fadd
sarb
fdivp
stos
fnstsw
leave
xchg
mov
xor
dec
mov
fstps
rclb
arpl
xor
push
xchg
mov
mov
adc
ds
dec
ret
repz
jg
push
dec
cmp
lret
out
push
inc
test
pop
scas
arpl
add
or
std
mov
pushf
xor
cmc
ja
rdmsr
xchg
jae
cmp
or
dec
mov
or
cmc
mov
leave
orl
loop
das
imul
push
sub
insb
and
pop
pushf
lock
xor
aad
sbb
out
xchg
popf
scas
out
or
mov
fcompl
cwtl
add
sub
sub
in
stos
mov
lea
pop
fists
out
dec
pop
or
pop
cmp
int3
call
xchg
mov
push
scas
xor
loope
sub
fsubrs
pop
movsl
push
test
aaa
shrb
inc
sarl
mov
inc
xchg
out
jnp
pop
insl
xchg
incl
aaa
mov
jbe
jg
jo
sub
in
in
cwtl
and
sarb
ss
cmp
mov
hlt
cmp
outsb
cmp
add
lret
data16
fsubl
or
je
int3
cwtl
add
call
imull
pop
test
mov
push
insl
pop
inc
and
orb
sarl
mov
loopne
repz
jns
div
inc
pop
dec
cwtl
pushf
fmulp
or
adc
pushf
xor
push
mov
imul
sbb
fmuls
adc
dec
decl
cmp
dec
testl
lahf
add
gs
into
fidivl
xchg
push
or
addl
fcmove
sbb
cwtl
imul
addr16
jl
popf
into
xor
jg
outsl
push
xor
xor
std
xor
jae
cld
nop
popl
int
mov
add
popf
sarl
out
sbb
enter
stos
mov
nopl
inc
sbb
pop
cmp
testb
push
jne
popa
xchg
outsb
aam
cli
push
pop
pusha
inc
mov
cwtl
dec
add
jno
mov
sbb
nop
ja
sub
add
pop
sub
loopne
pop
lret
mov
and
fs
hlt
rclb
cmp
scas
ret
add
jg
movsb
ljmp
shr
mov
jbe
shr
pop
dec
cmc
pop
xor
push
les
xchg
push
movsl
pushf
outsb
dec
lock
jp
je
iret
js
add
sub
xchg
push
cmovp
sbb
aam
cmp
push
sbb
std
sub
xchg
xchg
push
add
dec
negb
adc
dec
or
or
mov
add
call
not
pop
insb
mov
in
pop
incl
jo
and
cmp
or
add
jno
pop
cmp
xchg
and
push
pop
xor
stos
pop
push
out
insl
and
push
xchg
mov
int
stos
sub
dec
fidivrs
test
movsb
mov
sbb
sbb
add
lret
aam
imul
sub
inc
sub
flds
add
mov
scas
sahf
and
mov
jbe
or
and
sbb
jle
push
sarb
or
call
cmp
ret
jmp
dec
xorb
cmp
jle
ljmp
mov
mov
mov
jne
add
fwait
in
mov
rorb
inc
lahf
mov
iret
jp
cld
mov
xor
sbb
xor
aaa
and
lcall
repz
ds
lds
test
cwtl
lret
aad
or
loopne
or
scas
aas
mov
pop
cltd
lahf
sbb
aad
ljmp
test
jae
add
iret
mov
sub
sub
cmc
movsb
pusha
and
xor
pop
repz
jne
push
xchg
push
and
mov
pop
into
flds
das
dec
fsubr
sahf
dec
sbb
fcomi
popa
aam
sub
scas
xchg
xchg
jg
loope
shlb
arpl
pop
ret
shrb
and
pop
push
jne
add
ja
add
cmpsb
dec
dec
je
ret
sbb
jno
scas
fs
inc
outsl
andl
lret
orb
mov
cmpb
decb
mov
test
fdiv
scas
sbb
scas
lcall
mov
xchg
dec
mov
test
dec
add
jmp
stos
jge
jno
pushf
gs
lods
loop
ror
mov
out
adc
subb
cmp
cmp
std
rclb
dec
mov
aam
dec
adc
ljmp
testl
test
clc
and
cmpsl
mov
icebp
aam
jle
stos
push
test
or
push
mov
jnp
sarl
lcall
xchg
push
inc
push
aaa
sub
scas
pop
and
scas
dec
dec
sbb
xchg
xchg
mov
mov
pop
mov
inc
jae
push
pop
pusha
sbb
cmpsl
mov
fs
stos
std
rclb
hlt
scas
es
xorl
push
mov
clc
lret
xlat
sub
push
mov
in
inc
in
faddp
fistps
in
lds
loope
int
roll
sbb
outsl
lahf
pushf
stc
inc
jl
pop
push
cmovb
pop
ja
cmpb
stos
dec
cmp
push
lods
add
jp
jb
int3
pop
xor
rorb
lret
jge
xor
andb
fildll
inc
mov
mov
or
sahf
mov
es
jne
das
push
jno
jle
fsub
push
sbb
push
xchg
aam
push
jg
jp
xor
aad
inc
scas
xor
mov
adc
push
out
xchg
sti
arpl
jns
lock
or
push
push
mov
inc
gs
inc
je
dec
push
cmp
popa
mov
pop
das
out
xor
int
fstpl
and
data16
lret
fisubrs
lahf
lret
andl
int
testb
call
xchg
xchg
xchg
insb
sbb
xor
mov
clc
push
cltd
jmp
jns
scas
lods
pop
dec
inc
xor
jns
xor
in
xchg
sbbl
cmp
mov
cwtl
add
stos
lret
jne
out
cmp
xor
or
or
sbb
cmp
dec
scas
dec
pop
gs
adc
xor
std
arpl
loopne
jge
aaa
cmp
mov
jb
push
dec
movsb
ret
in
icebp
movsb
loope
mov
inc
fstps
push
outsl
test
and
jmp
push
les
fidivl
jno
popa
dec
or
fsubs
es
fisttpl
cmp
inc
jnp
jp
or
js
sbb
loopne
imul
cld
pop
icebp
int
notb
loope
add
insb
and
inc
and
sub
sti
push
cmp
jne
sbb
ljmp
lods
dec
daa
jl
int
sub
dec
add
adc
test
lahf
and
decb
fldl
lret
jle
rcr
or
xchg
dec
shll
mov
jb
push
push
push
cmp
mov
ja
mov
cmpsb
mov
mov
add
subl
sub
add
cmp
or
outsb
jno
dec
sbb
icebp
pop
add
mov
out
fimull
pop
jb
dec
mov
and
out
mov
or
insl
add
sbb
hlt
inc
inc
xor
bound
add
inc
or
loope
pop
int
mov
scas
lea
xor
dec
ret
xor
test
into
push
fistpl
iret
or
and
aad
pop
adc
int3
in
cmp
cmp
xor
dec
shl
cmpb
mov
jl
in
cmc
xchg
idivl
xlat
adcl
cmp
inc
stos
jno
jne
popl
mov
mov
orb
sbb
hlt
shll
aam
in
dec
stos
xchg
push
mov
fisttpl
fsubrs
loopne
mov
or
movsl
mov
mov
mov
mov
movsb
int
arpl
push
jle
xor
sarl
stos
iret
movsb
xchg
imul
pop
xchg
movsb
or
cmc
push
add
mov
nop
mov
insl
mov
int3
or
popa
jbe
push
clc
pop
push
mov
push
test
lods
hlt
outsl
cs
fidivrs
outsl
sti
mov
push
ds
pop
pop
scas
add
push
pushf
jge
and
inc
pop
mov
je
xchg
add
cmp
addr16
sarl
cmp
pusha
out
lds
mov
daa
add
xchg
inc
add
outsl
jae
dec
cmc
xor
and
add
inc
test
adc
stos
add
mov
ljmp
mov
call
mov
fildl
fists
pushl
mov
xor
loop
xchg
rcrl
cwtl
inc
inc
and
js
and
sbb
xor
cmp
aaa
fdivr
ljmp
nop
sub
mov
adc
dec
dec
inc
mov
mov
into
cmp
dec
push
inc
sbb
lea
int3
add
mov
enter
cmp
jae
stc
nop
xor
pop
cli
push
mov
imul
loopne
stos
push
negb
lcall
pop
lret
aam
jle
insl
add
fildll
ret
pushf
xchg
fadds
cmpsl
cmp
xor
popl
or
sub
mov
jns
dec
cwtl
js
lret
je
mov
xor
push
or
add
push
xchg
stos
sbb
je
insb
inc
pusha
mov
cmp
movsl
pop
cmp
adcl
fimull
fists
imul
inc
daa
mov
test
xor
sarb
xchg
mov
inc
in
outsl
sbb
push
call
lahf
adcb
pop
xor
jnp
jo
pop
mov
int
iret
jnp,pn
dec
loope
je
clc
sbb
push
cmp
jle
sbb
dec
adc
and
sbb
adc
out
xor
jns
xchg
das
gs
mov
or
and
sbb
sbb
mov
fimull
fstpl
dec
stos
lods
inc
sbb
es
xchg
push
loope,pt
int3
dec
dec
inc
leave
jmp
sbb
adc
and
sub
scas
and
push
lock
xchg
adc
jbe
and
aaa
pop
in
loope
adc
out
dec
sbb
sbb
insb
dec
dec
lds
mov
dec
sbb
jno
repz
and
push
lret
and
data16
cmpsb
aaa
test
xchg
clc
xchg
add
push
mov
and
repz
mov
fwait
add
mov
out
add
xchg
jo
movsl
notl
hlt
dec
and
bnd
sub
std
pop
adc
in
push
xor
pop
inc
pop
dec
stos
mov
xor
xchg
imul
lret
dec
shlb
cli
pushf
outsb
inc
rolb
dec
jg
rclb
mov
push
jmp
mov
adc
push
add
hlt
push
cmp
mov
call
mov
div
push
jmp
ljmp
cmpsl
push
pushw
xchg
xor
xorl
insb
inc
mov
mov
sbb
sub
lds
pop
dec
push
lret
shll
out
mov
aas
pop
push
mov
outsl
movups
subl
push
testb
sbb
repnz
jne
pop
pusha
loop
mov
movsl
xchg
mov
loop
stc
cld
mov
jns
inc
sub
push
sahf
or
stc
pmaxub
das
pop
test
pop
subb
jmp
mov
mov
repnz
lods
pushf
mov
adc
sbb
dec
mov
stos
add
shrd
imul
lret
loopne
std
fcoms
arpl
mov
hlt
test
jle
mov
popa
je
sbb
xchg
movsl
adc
dec
add
mov
mov
xor
pop
and
shrl
mov
jl
mov
or
shlb
lahf
xlat
dec
adc
xor
loope
mov
mov
nop
xchg
inc
mov
cltd
cmpsl
aas
xchg
adc
push
pop
cld
and
push
push
repz
jmp
mov
adc
fsubrs
push
insl
or
in
xor
xchg
outsb
pcmpeqw
popf
jge
gs
mov
cwtl
lds
mov
lock
movsl
mov
inc
push
arpl
mov
sbb
sbb
mov
dec
pop
xor
inc
mov
in
jbe
xchg
int3
xchg
sbb
adc
cmp
adc
mov
push
push
std
out
inc
mov
add
orb
cs
lds
jle
in
or
pushf
jl
mov
popf
test
inc
ret
add
fsts
push
xchg
mov
mov
repnz
in
ret
shrl
inc
adc
aaa
mov
add
dec
pop
pop
lret
pusha
push
cmpsl
fstpt
cmp
aas
xor
sub
std
sbbl
mov
sub
sub
pop
lcall
push
fdivl
fcomps
movsb
cs
jmp
add
ss
bnd
jg
sub
mov
call
cmp
adc
fimull
pop
add
or
jge
ret
pusha
jp
mov
and
cmp
rolb
in
mul
mov
xchg
sarl
mov
xlat
add
mov
mov
add
xchg
mov
stc
adc
cmp
in
sbb
lods
jns
pop
js
cltd
cmpsb
jg
and
xchg
icebp
mov
jnp
xor
mov
lds
mov
mov
push
mov
mov
jle
sbb
aam
loop
xorl
shll
popf
cmp
cli
aam
and
cld
ljmp
or
sub
or
xor
rolb
push
and
rorb
mov
incl
sub
inc
push
lcall
cmp
pop
dec
fists
lods
cwtl
lret
sarl
scas
std
aam
mov
dec
xor
xchg
push
inc
mov
inc
test
inc
jg
std
sub
jno
ret
mov
mov
jp
dec
ret
ret
in
stos
fs
push
mov
test
cmp
lea
aad
repz
sbb
sub
sub
xchg
loopne
adc
sbb
mov
mov
aaa
fsubl
mov
jmp
or
cmpsb
xor
ret
daa
lcall
pop
ret
negb
insl
fmull
in
icebp
cs
sbb
shl
rorb
sarb
scas
test
xchg
sbb
ficoms
xchg
popa
jbe
ficompl
xor
dec
mov
sarb
sbb
or
mov
hlt
xor
mov
pop
js
test
test
popa
inc
dec
ror
sbb
jp
fwait
pop
and
pusha
icebp
and
ret
sbb
jbe
push
data16
add
ja
aad
push
fidivrl
xor
cli
pop
mov
out
xchg
aaa
add
xchg
jne
mov
cwtl
and
scas
movsl
push
cmp
cmpsl
push
loope
loopne
or
stc
adc
push
cmpsb
or
pop
push
gs
jl
cmp
nop
xor
out
xchg
sub
inc
add
mov
out
fwait
xlat
mov
adc
push
aam
mov
jbe
xor
clc
enter
fildll
mov
aad
sub
mov
xchg
ss
add
add
xor
mov
psubsw
int
enter
or
mov
orl
push
out
inc
clc
lahf
mov
mov
jnp
push
and
inc
hlt
and
cmpb
cmpsb
shr
flds
jo
in
cwtl
arpl
fwait
out
or
aaa
pop
or
daa
fisttpll
jg
jmp
in
pop
and
fwait
js
aam
add
add
cmp
test
jno
pop
mov
adc
bswap
aam
jmp
notb
cmp
rolb
clc
jge
imul
jmp
icebp
and
std
stc
sbb
xor
loope
jl
outsl
cli
mov
pusha
sub
ljmp
adc
mov
adc
or
stos
cmpsl
mov
sub
adc
and
sub
adc
lea
push
mov
stos
aam
and
ret
scas
es
clc
cmp
into
lahf
add
sub
fstpl
mov
mov
out
mov
enter
pop
xor
cld
cs
adc
btr
cmp
cmpsl
lcall
push
repz
xchg
in
lret
lret
push
sti
dec
je
pop
sahf
rol
inc
xchg
cld
dec
sub
mov
paddd
and
inc
xor
push
lret
clc
dec
inc
pop
jle
jnp
cli
mov
aas
std
ds
adc
dec
xor
pop
decl
jp
loopne
fidivl
inc
stos
sub
repnz
push
ficomps
xor
daa
push
pop
xor
or
jne
daa
xor
in
out
ffree
call
mov
jmp
inc
xchg
jmp
ljmp
data16
nop
fs
pop
data16
rcrl
ja
stos
dec
jnp
in
push
or
in
adc
insb
xchg
xor
inc
push
cmpsb
inc
cmp
lahf
xchg
ja
add
je
mov
andb
idiv
and
je
in
ret
test
sarl
fstl
ficoms
in
in
outsb
sbb
rcrl
cmp
fnstsw
cmp
shl
push
and
jnp
clc
jg
fidivl
mov
leave
lods
xrstors
fldenv
jp
cmc
mov
dec
sub
sbb
ret
add
xor
add
dec
or
dec
adc
mov
jno
cmp
sbb
push
pop
xchg
gs
add
aas
in
dec
in
or
dec
je
mov
fildl
popa
sti
mov
pop
adc
sbb
jae
lds
adc
cltd
pop
outsb
jg
lock
mov
adc
jecxz
xchg
aad
loopne
sub
mulb
inc
mov
adc
pusha
cmp
pmaxub
inc
sbb
ja
lds
add
and
jp
aaa
clc
imul
push
or
mov
xchg
fildl
cmpsb
and
les
adc
fwait
pop
adc
pushf
mov
scas
adc
mov
sbb
int
xchg
add
ja
ljmp
jns
shr
mov
xlat
ret
pop
xor
inc
jge
or
test
paddb
xchg
lods
dec
sub
loope
popf
fisubl
mov
sub
ds
jno
push
sub
arpl
adc
mov
aam
mov
int
popf
negl
jl
sub
test
jle
aad
lret
xor
and
int
xor
or
xchg
out
and
adc
xchg
inc
push
ljmp
xchg
jns
push
ja
pop
ret
dec
dec
stos
sahf
push
jp
repz
xchg
scas
in
lahf
dec
mov
jne
into
fsubrl
xor
pop
mov
pop
imul
shrb
add
xor
imul
xchg
sub
mov
lcall
xchg
push
dec
add
outsb
xchg
push
adc
pop
iret
mov
or
lds
mov
adc
mov
fldcw
cs
and
clc
xorb
cmp
dec
lods
or
cmp
es
ja
mov
in
jo
pop
cmp
adc
sub
arpl
mov
movsb
fidivl
inc
pop
dec
lds
jae
rclb
dec
stc
sub
cld
inc
into
or
pop
sub
into
sub
mov
dec
sti
or
mov
mov
push
cmp
or
mov
mov
xchg
mov
xor
sbb
jle
aas
xor
sub
dec
ds
xor
aam
cwtl
inc
in
sub
loopne
push
cli
jmp
push
scas
cmp
jmp
js
pop
mov
cmp
mov
out
sub
mov
rcrl
xchg
sbb
jae
imul
cmp
xlat
outsb
loopne
icebp
jbe
xchg
inc
xchg
sub
sbb
push
mov
je
mov
mov
je
jge
xchg
into
fldl
lret
xchg
pop
pop
pop
adc
shrb
cmpsb
dec
shrb
jno
js
je
insb
lret
popa
mov
int3
inc
sbbl
or
cmpl
loopne
pop
call
or
fs
shlb
ja
popf
xor
js
in
ds
add
shlb
movb
cmp
sahf
lret
xorb
dec
notl
or
or
outsb
lock
fdivrs
mov
sbb
pop
insl
nop
mov
pop
or
mov
cltd
cltd
test
inc
mov
out
loop
mov
add
sub
dec
pop
jbe
cmp
add
jae
faddp
jnp
mov
or
lret
leave
shl
adc
ficomps
xchg
cmc
adc
testb
and
cld
push
sub
dec
int3
loope
add
push
xchg
js
mov
xor
mov
lahf
or
icebp
shrb
pop
pop
out
adc
iret
and
mov
adc
aas
sbb
lret
xor
and
cwtl
sbb
test
push
test
sbb
enter
xchg
arpl
daa
call
or
mov
mov
jns
sbb
sahf
sbb
in
cmc
push
test
push
mov
push
enter
pop
pushf
push
js
fimuls
mov
jl
sbb
daa
mov
insl
mov
or
or
xchg
push
movsl
shll
mov
addl
xchg
push
xchg
dec
jns
mov
and
rolb
and
add
jnp
mov
outsb
jb
sub
repnz
adcb
push
loope
cmp
adc
push
sti
and
shrb
pop
or
or
mov
rcll
dec
outsl
clc
dec
inc
adc
mov
arpl
jb
adc
adc
jbe
mov
add
xchg
ljmp
xor
popf
dec
pop
cmp
mov
lret
mov
ljmp
fs
jl
and
insl
cwtl
pop
jb
mov
cmc
push
and
sarl
sti
add
call
xchg
popa
lods
xor
lcall
aad
rcll
int
in
ljmp
ss
movsl
pop
fucomp
lods
mov
dec
out
aad
test
xorb
insb
test
out
out
popf
repz
les
loopne
fs
push
sbb
push
xor
filds
daa
movsb
sub
pushaw
mov
push
aaa
pusha
adc
ljmp
data16
rcll
outsl
outsl
xchg
push
sbb
xchg
add
pop
arpl
cmc
out
pop
fs
iret
and
cld
cmp
arpl
cltd
mov
inc
test
cmp
adc
dec
cmp
and
cmp
add
jmp
aaa
lds
jge
in
fxch
nop
lock
mov
mov
es
push
mov
repz
xor
enter
push
xor
xchg
out
pop
inc
xchg
andb
push
stos
popf
mov
cmpl
mov
stos
mov
ror
mov
ret
add
inc
jne
mov
pop
dec
jne
in
sbb
cmp
and
ror
mov
adc
leave
cli
sti
je
outsb
pushf
mov
pop
sbb
ret
mov
pop
and
push
lret
out
insl
push
xchg
cmp
sbbb
xchg
imul
mov
add
jno
aaa
js
cmpsl
fnstsw
out
xor
or
sub
mov
inc
fldenv
or
dec
faddl
insl
mov
bound
icebp
or
pop
add
and
add
mov
inc
lock
mov
xlat
test
dec
fwait
out
push
mov
lock
push
lret
test
hlt
add
mov
cltd
inc
cltd
and
fcomps
int
sbb
mov
or
mov
movsb
and
testb
imul
mov
xchg
cmovge
enter
aad
fmull
push
mov
pop
add
add
and
ljmp
std
int
imul
enter
int
lods
ja
scas
dec
dec
loop
dec
sbb
out
insb
push
movsl
or
jecxz
mulb
add
fwait
and
imul
fsubr
xor
lret
mov
imul
pop
jge
add
and
push
mov
and
inc
mov
cs
jo
xchg
jo
sarl
xor
out
rcr
xchg
cs
pop
test
filds
push
lret
ja
out
sub
adc
pop
xchg
lea
jno
insl
and
lock
mov
bound
insl
inc
ss
aam
shrl
lret
int
sbb
or
rcll
pop
inc
lcall
sti
push
pusha
jl
decb
mov
sub
sti
add
inc
ret
lods
imul
adc
fadds
cmpl
sbb
std
mov
daa
inc
jb
aaa
sub
loope
stos
pop
and
jbe
gs
lods
in
shr
push
nop
out
dec
mov
push
cmp
lods
lahf
push
mov
push
inc
daa
ds
scas
or
andl
dec
jecxz
adc
sbb
dec
sub
adc
sub
push
sub
cs
push
mov
mov
enter
add
cmpsb
in
adc
xor
pop
jg
test
ds
lea
push
push
dec
sub
pusha
pop
icebp
repnz
lock
xor
push
movsl
sti
sbb
subb
in
dec
jns
loope
xor
ficomps
into
jo
call
xor
cld
frstor
pop
push
fisttpl
loopne
sbb
pop
insl
lock
xor
add
push
dec
mov
movsb
fsubrs
js
pusha
xor
pusha
test
and
and
cmpsb
divl
andb
xchg
int
and
sbb
enter
xor
mov
add
mov
cwtl
mov
jne
movsb
lret
pushf
les
and
xor
int
mov
mov
lret
mov
cwtl
mov
push
loope
ret
lcall
dec
lds
jecxz
std
add
fnsave
xchg
pop
in
das
dec
cmp
push
sub
push
xor
out
mov
decl
mov
mov
adc
push
popf
xchg
pop
jg
shll
clc
and
loope
or
xor
mov
idivb
and
lods
dec
aad
hlt
push
mov
sbbl
sbb
mov
and
xorl
das
mov
cmp
ljmp
out
ret
rcrl
int
imul
es
or
jecxz
sbb
xchg
xchg
cwtl
inc
add
xor
pop
pop
sub
add
pushf
lahf
and
pop
mov
mov
and
leave
div
scas
out
cmp
sahf
lret
scas
nopl
jle
mov
out
test
divb
mov
sub
jmp
jns
sub
inc
xor
icebp
jno
repz
out
push
aas
addb
ss
ja
ret
mov
out
xchg
movsl
mov
push
sub
xchg
orb
in
and
fistl
adc
inc
cwtl
and
rcr
jg
rcll
std
call
stos
cmovg
push
inc
sbb
imull
fldcw
aam
xchg
inc
int3
cmp
jo
cmp
mov
repnz
in
sbb
cmp
repnz
pop
fs
notl
cli
popf
dec
mov
call
inc
mov
or
or
or
mov
outsb
xchg
popa
into
mov
xor
inc
pop
mov
addr16
lret
les
push
inc
xchg
pop
ja
xor
inc
out
nop
addr16
std
and
xchg
push
mov
lahf
std
mov
nop
jne
frstor
adc
pop
or
add
sub
ja
pop
lock
and
sub
shrb
jle
nop
fs
pop
out
cld
fdivr
cmp
test
xor
push
repz
xor
add
ljmp
call
je
fdivrl
jno
imul
dec
add
cltd
mov
outsb
push
cmp
movsl
outsb
stos
sti
mov
jp
lock
xchg
imul
lock
insb
xchg
fmuls
or
adc
xlat
test
push
pushf
cs
pop
iret
sub
out
add
adc
cmp
xchg
inc
dec
xchg
sub
cld
rorl
aad
mov
shlb
das
xor
rorl
mov
jne
test
lds
loope
sbbb
and
sub
fbstp
rclb
xlat
cmp
cwtl
sbb
sub
rolb
leave
leave
ja
sub
loopne
dec
mov
out
js
sub
and
insl
mov
sbb
mov
push
cltd
aad
lret
xor
push
or
loop
pop
add
dec
imul
fistpll
xlat
js
imul
inc
addl
insl
jle
pusha
pop
mov
loop
and
sub
mov
rclb
loop
mov
cmp
sti
push
cwtl
inc
cmp
negb
inc
xor
push
xchg
lahf
std
loopne
cmp
mov
and
je
mov
pop
sub
dec
shlb
mov
sub
add
rcrb
xchg
fdivs
out
xor
mov
sub
sub
iret
mov
arpl
dec
push
pop
aam
mov
adc
repnz
nop
or
idivl
add
dec
adc
mov
pop
cmpb
jns,pn
nop
jp
stos
xor
mov
ljmp
out
int
idiv
xchg
mov
sti
inc
in
testb
add
out
mov
std
xchg
outsl
fcomp
pop
ja
and
fdivs
lea
out
lock
xlat
xor
cli
adc
xchg
stos
test
test
mov
inc
jmp
add
lock
xor
movsb
ljmp
fwait
sbbl
push
loope
gs
mov
mov
mov
imul
add
mov
pop
adc
sub
imul
mov
jl
fsts
fcom
leave
les
jp
mov
jecxz
notb
mov
add
cmp
mov
insl
mov
jp
es
lcall
push
jbe
cld
clc
sbb
mulb
xor
sbb
aam
enter
push
xchg
xchg
cli
xchg
lock
in
lods
jp
mov
push
in
repnz
and
mov
ds
push
or
push
jno
dec
scas
imul
xchg
xor
pop
and
adc
cmp
rcrl
je
repnz
jg
add
in
sub
arpl
mov
mov
fsubs
and
add
inc
popa
xchg
test
mov
in
mov
js
pop
and
pop
lret
frstor
test
leave
pop
idivb
jge
cmp
imul
xor
push
lock
ja
in
inc
mov
sbb
and
sub
or
jno
ljmp
lea
fdivs
int
adc
push
outsl
mov
xchg
jb
into
repnz
mov
adc
mov
outsl
jne
mov
bound
adc
jecxz
or
mov
mov
jl
xchg
sbbl
lcall
es
jecxz
pusha
lods
fs
mov
test
pop
jo
icebp
data16
es
jae
out
notl
icebp
stos
movsl
jg
sarl
push
mov
and
aas
jmp
popf
pop
xchg
mov
add
test
int3
repz
aaa
js
call
movsb
pop
sub
mov
popf
sub
outsl
xchg
daa
call
and
xor
push
notl
pop
pop
jp
cmpsb
pop
push
push
fsubl
lods
mov
bnd
add
sub
cmp
adc
add
xchg
mov
popa
cmp
cmp
lret
cmpl
cmpsb
dec
aad
mov
mov
adc
iret
lea
leave
cmc
fdiv
imul
jmp
xchg
cltd
jle
inc
mov
mov
mov
scas
in
mov
inc
push
hlt
fmulp
mov
fdiv
and
mov
outsb
or
hlt
push
and
imul
add
lock
mov
imull
in
xor
nop
push
push
jmp
out
addr16
mov
aas
mov
call
or
and
lds
and
cmpsb
test
mov
mov
and
xchg
adcl
inc
shrb
xchg
jns
insl
stos
jno
mov
xor
push
lock
sti
fsubr
and
or
xchg
push
fistl
divl
xor
inc
mov
scas
sbbl
add
fsubp
inc
stos
repnz
aam
pushf
loope
jae
xchg
mov
aaa
fisttpll
sti
xlat
shl
js
mov
cmp
addr16
xchg
ret
mov
dec
in
arpl
pop
mov
mov
in
or
icebp
in
mov
xlat
xor
lret
data16
cwtl
lods
insb
jmp
inc
ret
scas
jnp
aad
pop
pop
xchg
leave
xor
pusha
lock
mov
jns
xchg
call
int
inc
movsl
pop
call
popa
mov
mull
repz
jnp
cltd
jnp
clc
jl
jl
jmp
pop
mov
and
jmp
pop
mov
xlat
imull
and
mov
mov
inc
mov
sti
popa
pop
js
faddl
cmp
lea
and
je
inc
inc
ret
lret
sub
cmp
inc
sbb
lret
cmp
ret
sub
pop
subl
jecxz
mov
in
inc
pop
je
and
stos
aas
jbe
or
lret
cld
shrb
sbbl
push
jp
popf
rcll
or
insb
sbb
jg
dec
inc
fmul
ret
mov
pop
in
xor
jnp
das
push
subb
sub
incl
and
nop
push
jb
in
mov
adc
lahf
lea
movsl
push
bound
lret
orb
lret
fcmovbe
pop
mov
sahf
daa
fsts
inc
fistl
and
mov
xor
test
inc
lcall
xchg
in
and
and
push
xchg
or
adc
jecxz
jl
out
inc
add
nop
mov
push
insb
mov
add
flds
mov
lret
push
add
adc
pusha
dec
mov
fwait
les
cmp
push
pop
mov
stc
loop
cmp
loope
jmp
outsb
or
push
fidivl
xor
cmp
das
push
data16
sub
call
cmc
lret
popf
jg
pop
sub
hlt
pop
into
lock
push
adc
xchg
mov
ja
movsb
or
dec
and
dec
pop
mov
sub
mov
popa
nop
mov
in
jnp
jo
lods
jecxz
mov
aaa
jb
iret
jmp
xchg
aad
lock
enter
std
inc
add
mov
lret
mov
daa
mov
cltd
mov
inc
mov
bound
stos
jmp
push
test
loop
mov
inc
shll
test
lds
sbb
jae
cmpsb
inc
xchg
outsl
mov
gs
lret
and
sub
dec
fdivs
jb
ljmp
mov
push
mov
in
scas
mov
lret
dec
imul
fdivp
jae
cld
fdivr
fsubrl
stos
sbb
sbb
mov
push
sbbl
jno
out
es
repnz
jp
and
daa
jnp
outsl
fmull
add
int3
inc
loop
stc
mov
les
rcr
mov
movsb
push
pop
jns
sarb
imul
leave
lahf
jmp
call
xor
fstps
push
cwtl
clc
cmp
and
adc
data16
ret
mov
mov
cld
pop
lret
dec
push
jmp
stos
fcomp
sub
fisttpl
and
movsl
fnsave
jge
sti
push
dec
fdivr
sbb
xor
or
ss
stos
cmp
xchg
fisttpll
shll
stos
shll
jno
inc
xchg
js
cmp
dec
mov
or
xchg
dec
jo
sub
dec
pop
data16
jns
and
cmc
mov
jg
out
outsl
sub
js
cmp
mov
or
js
and
mov
adc
cmp
jp
jo
or
mov
dec
test
jo
mov
xchg
sub
push
mov
sbb
stos
arpl
cmpsl
or
sub
ss
push
adc
les
sbb
jecxz
bt
push
mov
int3
push
fisttpll
sti
es
xchg
imull
sub
mov
xchg
outsl
mov
inc
or
mov
xchg
and
mov
pushl
ljmp
sbbb
stos
dec
xchg
xor
cld
cmp
pop
dec
jp
mov
ficoml
arpl
mov
add
test
jg
adc
xchg
xor
insl
mov
push
jns
adc
insl
test
mull
out
lock
sbb
mov
or
adcb
dec
aaa
inc
cwtl
faddl
pop
push
shrb
fsubr
test
mov
test
test
dec
in
in
xchg
std
push
pop
lcall
mov
xor
in
inc
fwait
dec
inc
inc
fisubrs
test
in
stc
icebp
sbbl
and
sti
add
xchg
mov
fstps
sbb
fsqrt
push
lcall
hlt
repnz
sbb
xor
adc
lea
adc
lahf
push
aam
push
repz
les
jne
sub
adc
insb
ljmp
mov
call
lock
jne
xlat
xlat
or
push
cltd
cmp
mov
xor
pop
or
cmp
or
cli
mov
pop
sbb
mov
pop
cmpl
aad
shl
test
pop
test
xchg
mov
addb
xor
lds
mov
cmp
stos
mov
or
xor
sub
ds
loopne
jl
in
insl
loop
xchg
add
frstor
inc
fcompl
out
cmpsb
decb
push
xor
dec
jge
mov
rorb
daa
and
cwtl
push
push
leave
cmp
test
std
fcom
call
lea
arpl
xor
dec
mov
test
rcll
push
cmp
pop
scas
pushf
push
xchg
xor
test
imul
popa
jle
jecxz
jecxz
scas
lahf
sbb
fsubrl
push
pop
insb
sub
jne
mov
push
test
mov
cld
push
lret
lods
scas
pop
xchg
push
mov
xlat
les
sbb
pushf
xchg
orl
test
push
pop
mov
mov
mov
je
pop
pop
aas
imulb
mov
xchg
in
clc
cli
shl
sahf
jno
sub
and
mov
incl
hlt
sub
jecxz
dec
stc
and
dec
test
jb
fadds
and
insb
gs
xorl
int
insl
mov
addr16
ret
xorb
or
xchg
fwait
int3
lret
sbb
mov
cmc
jo
gs
in
inc
lahf
mov
in
insb
mov
gs
dec
lods
push
jns
inc
outsb
cmpb
dec
inc
xor
pandn
jb
jnp
and
ljmp
les
cli
fiadds
cmp
push
sahf
push
idiv
divb
jcxz
flds
push
pop
lock
repz
mov
sbb
inc
ret
sbb
inc
or
cmpsb
cpuid
pop
or
xchg
or
jmp
js
sub
movsl
icebp
lods
imull
pop
adc
in
enter
out
dec
popa
mov
pop
nop
out
sbb
pop
sbb
adc
cmp
jp
rcll
xchg
jecxz
add
sbb
in
mov
jno
or
xor
mov
pop
cld
mov
inc
cltd
and
mov
xor
cwtl
push
lea
lock
cmp
mov
pop
pop
mov
insl
addr16
cmp
adc
cltd
rol
jg
xchg
xchg
leave
xor
test
pusha
in
clc
insb
repz
jnp
rol
ds
sub
push
cmovae
fcoms
popf
and
notb
sarl
testl
fildll
adc
les
jle
imul
fisttps
bound
and
or
in
out
test
jns
jmp
adc
fwait
inc
test
mov
inc
stos
and
ljmp
cmpsb
icebp
rcrl
loopne
dec
cld
mov
adc
xlat
or
cmpsl
xlat
cmpsb
aaa
arpl
mov
sub
mov
lock
cmp
mov
std
push
ja
push
xchg
dec
xor
in
fbstp
rolb
insb
mov
mov
inc
cmpb
test
or
mov
xor
inc
std
mov
test
jbe
hlt
cwtl
in
mov
cltd
add
mov
lret
stos
xor
mov
add
sbb
not
int3
popa
inc
push
sbb
mov
stc
mov
dec
xlat
or
bound
rcrb
outsb
cli
adc
pop
xchg
std
fsts
push
xchg
loopne
in
pop
dec
loop
pop
lcall
popf
in
mov
inc
fcoml
bound
pop
out
push
jnp
icebp
add
call
jmp
jb
and
mov
push
fwait
popf
test
mov
or
and
dec
mov
lahf
xchg
call
inc
pushl
mov
jno
stos
mov
int3
icebp
sarb
xchg
mov
push
mov
jl
stos
loope
pusha
cli
and
jae
popl
cltd
cli
xor
mov
test
xchg
xlat
dec
jg
sub
jo
pusha
fdivrs
adc
mov
cmpsb
insb
inc
jne
pop
and
jg
aad
incb
and
imul
mov
sarb
test
pop
mov
add
fcomps
fsubrl
cmp
fs
push
sub
sub
sarb
and
int
roll
lods
xchg
shll
mov
stc
pop
sub
mov
mov
int3
lret
loop
ljmp
dec
jl
fnstsw
negl
cmp
std
jmp
jge
inc
loopne
xor
scas
or
sub
push
pop
cmp
and
cmp
and
rcll
push
scas
xor
ja
mov
or
push
das
rcrb
xor
inc
and
add
test
mov
in
movsb
int
sub
mov
pop
jb
mov
mov
or
je
adc
xor
add
and
fistps
pop
pop
popf
push
scas
ret
cmp
xchg
mov
les
xor
push
pushf
push
or
jge
addl
aas
cmp
jmp
in
jb
inc
les
and
bound
add
xor
imul
pop
sar
dec
or
xchg
push
aam
jae
cmp
cli
mov
push
sub
push
inc
push
fwait
xor
test
into
popf
push
in
in
sub
sbb
mov
dec
push
shl
add
xchg
cmp
fnstenv
js
jp
pop
jge
inc
cld
xor
enter
mov
sub
xchg
push
pop
out
shrl
inc
cmp
or
ds
pop
test
std
push
mov
jns
inc
popa
test
bound
jle
scas
xchg
lret
andb
lock
xor
mov
push
push
xchg
out
mov
push
jge
adc
mov
fsub
adc
mov
cs
adc
mov
scas
add
lods
jp
dec
mov
pop
or
xor
push
stos
pusha
rorl
adc
fcmovnbe
add
push
lahf
jne
add
cli
addr16
mov
mov
je
in
add
mov
mov
les
idiv
cmp
push
not
inc
xor
or
adc
or
rolb
scas
loope
fisttpl
and
test
push
and
dec
sub
xchg
push
lods
xchg
aas
mov
cld
push
into
out
cwtl
cmp
add
imul
cwtl
add
ret
out
mov
dec
movsb
mov
adc
jl
out
mov
and
test
pop
lcall
mov
ret
adc
ret
mov
enter
out
rcll
jae
int3
mov
push
mov
or
xor
dec
sub
je
rorl
into
daa
mov
adc
cmpsb
adc
scas
rcrb
xlat
sbb
pop
je
nop
rorb
imul
push
cmp
inc
jl
cld
jnp
pop
mov
ret
fdivs
not
dec
mov
fldenv
addr16
leave
mov
push
mov
jecxz
idiv
insl
sti
das
mov
xor
or
mov
cmpsl
inc
jl
mov
test
jnp
push
mov
in
repnz
and
sbb
pop
pop
sub
popa
sbb
inc
repz
and
push
scas
sub
push
jb
xchg
jle
notb
scas
hlt
aad
mov
adc
cmp
int3
test
push
mov
pop
fsubl
cmp
mov
sbb
xor
test
pop
inc
faddl
adc
int3
test
lea
dec
xor
jp
imul
iret
add
pop
and
stc
fildll
shll
fadds
inc
dec
stos
cld
dec
in
push
dec
js
mov
ljmp
or
xor
cli
sbb
ret
sahf
rorl
ret
xor
add
sub
push
sar
stos
sti
imul
and
mov
dec
test
xchg
adc
dec
dec
insl
mov
adc
test
and
push
ds
mov
sub
add
mov
sub
mov
ds
clc
jo
mov
test
mov
mov
sbb
in
push
push
pop
add
emms
sbb
shl
mov
sbb
out
jg
pop
test
cmp
xchg
fisubrs
popf
or
dec
mov
push
std
xor
jge
xor
loopne
lock
jo
adc
call
jle
cltd
xor
jge
ret
sti
push
inc
scas
jnp
push
xor
add
adc
out
mov
sub
xchg
adc
fcmovb
sub
stc
pop
notb
out
in
cmp
test
mov
pop
test
or
mov
dec
das
fsubrl
dec
and
addr16
shll
sub
ds
outsl
xchg
jae
jo
mov
fwait
sub
mov
les
test
mov
es
adc
shl
fisttpl
push
arpl
mov
in
sti
fcmovnbe
js
out
mov
jl
test
add
xor
mov
push
ftst
pop
movsb
add
fsubrl
mov
out
test
xchg
push
cmpl
lret
ja
mov
sub
cmp
pop
cwtl
push
je
push
sarl
in
lret
cmpsb
mov
xchg
dec
fisubs
push
and
add
stos
out
mov
jno
sbb
xor
inc
aam
data16
pop
or
inc
mov
sbb
mov
push
mov
cmc
sbb
lret
jmp
jnp
cmp
xchg
jbe
fsts
sub
sbb
push
sar
jge
inc
lea
jae
pop
mov
add
test
popa
cmp
and
push
and
aaa
xchg
pop
inc
cld
nop
and
jle
mulb
rcl
jbe
sub
int
adc
adc
push
andl
cmpsb
push
jl
pop
jb
insb
int3
push
cwtl
test
or
lods
shlb
cmp
push
add
push
jmp
rdpmc
lea
std
pop
int3
fsub
mov
dec
mov
inc
hlt
lret
xor
shll
rorb
sbb
aam
popf
mov
push
cmp
mov
test
mov
sub
dec
push
pop
mov
xor
popa
ret
inc
xor
je
lds
cmpsl
repz
arpl
mov
add
icebp
testb
cmp
dec
jns
jno
sbb
pusha
mulb
loop
xchg
test
inc
fs
lods
jge
or
mov
sbb
es
add
cltd
pop
leave
inc
out
cmpsl
inc
jp
pop
xchg
jns
iret
es
test
mov
dec
adc
sahf
mov
inc
ret
sbbb
or
mov
iret
pusha
loope
enter
in
inc
xchg
arpl
stc
pop
lods
out
cmpsl
sbb
out
cmp
and
test
mov
dec
xchg
popf
jge
hlt
int3
test
je
push
divl
adc
inc
mov
inc
cld
xchg
or
ds
scas
and
js
pop
les
icebp
lods
add
mov
addr16
outsb
jne
xor
pop
cwtl
stos
sti
adc
clc
push
rclb
xchg
fwait
pusha
sbb
divb
push
dec
out
je
inc
mov
fmuls
inc
arpl
jne
movsb
xor
cli
mov
push
jmp
ret
or
push
repnz
mov
jle
dec
hlt
daa
pop
sbb
rolb
pop
ja
inc
cltd
fidivrs
scas
lods
xchg
fisttps
ret
mov
mov
not
testl
sub
pushf
cltd
xor
arpl
jo
outsl
iret
loop
and
sarb
subb
int3
mov
jb
std
pop
rcll
jno
adc
xor
xchg
jne
fisubs
dec
inc
hlt
loope
roll
out
int3
inc
push
xchg
xchg
imul
test
cmc
jo
or
arpl
sahf
jmp
inc
movsb
loop
cmpsl
mov
jge
mov
pop
or
xor
jecxz
idivl
inc
add
mov
das
mov
mov
sbb
out
push
cmp
cmp
inc
rclb
pop
flds
mov
test
xlat
hlt
cmp
ljmp
shll
inc
mov
and
repnz
in
adcb
dec
fimuls
pop
frstor
repnz
out
push
mov
mov
pop
xchg
cltd
int
jecxz
add
dec
jns
xor
inc
push
iret
xor
add
jae
push
js
enter
sbbl
fisubrs
mov
cmp
aam
dec
jnp
mov
mov
imul
mov
cmp
cwtl
leave
mov
and
inc
ds
and
and
rorb
aas
loope
or
addr16
adc
xor
mov
lret
mov
push
cli
ret
insb
and
mov
xor
jns
test
dec
bound
xor
es
xchg
pop
jl
int
xchg
pop
fidivrl
fisubrs
js
mov
sub
sub
xchg
push
aas
jbe
adc
outsl
adc
pop
and
faddp
call
pop
dec
xor
inc
lret
out
fnsave
inc
imul
pop
addl
in
adc
add
loope
dec
je
jbe
mov
sub
sub
push
cmpsb
mov
pop
adc
inc
test
subb
xor
pop
mov
cmpsb
int3
loopne
xlat
sbb
xor
pusha
sbb
cli
je
lds
fs
dec
scas
mov
mov
push
sub
xchg
mov
xor
add
mov
sub
dec
and
push
xchg
xchg
ss
cmpsl
mov
xchg
and
mov
out
xor
xchg
in
sbb
and
jle
mov
xor
inc
sub
mov
out
lock
iret
insb
loop
jge
pop
loop
add
jb
push
mov
dec
hlt
out
loop
mov
push
call
dec
shrl
enter
rcrb
xchg
ja
sbb
test
mov
out
cmp
test
pop
in
arpl
std
cmp
shrl
es
or
stc
cltd
or
add
cmp
sub
xor
movsb
arpl
add
mov
mov
ljmp
mov
xor
gs
mov
xlat
test
fcoms
dec
fistpl
dec
mov
push
sub
jmp
in
scas
sub
mov
rcl
push
fdivrl
cwtl
push
mov
fs
das
cmp
ret
sbb
rcl
and
cli
ljmp
add
push
out
dec
cmpsl
rol
in
shr
cmp
aaa
cmc
fcoms
jecxz
ss
je
xchg
dec
sbb
ja
ja
xchg
pushf
rorl
cmp
mov
xlat
pop
jg
mov
sub
sub
outsb
sbb
int3
sub
clc
cmpsb
inc
mov
int
xor
mov
jbe
xor
sbb
shl
dec
test
int
adc
iret
xor
stc
cmp
xchg
pop
xchg
cwtl
sbb
add
icebp
sbb
nop
push
jl
lret
xlat
les
mov
inc
in
cmc
mov
cld
test
pushf
jb
xor
mov
or
into
push
lds
pop
or
lds
jb
add
clc
loope
sbb
or
mov
movsl
arpl
jne
loopne
xchg
cmp
adc
pop
cmc
cmp
insb
jo
adc
shll
insb
ret
roll
inc
inc
shr
mov
iret
inc
mulb
fldt
clc
xchg
xlat
jnp
adc
sub
jnp
cli
push
lret
test
mov
arpl
stos
add
in
clc
je
out
push
xchg
jge
aas
insb
call
sub
dec
jae
cmp
test
mov
inc
push
jnp
es
xchg
cmpsl
std
inc
and
loope
push
pushf
rcll
mov
lea
adc
bound
jle
push
mov
jb
sti
sub
les
std
push
rcll
outsb
cmp
cmp
xlat
push
xchg
cmp
in
pminub
enter
dec
test
mov
jno
sub
pushf
sub
push
popa
shlb
imul
fisttpl
lret
adc
sub
dec
cmpsl
mov
xchg
stc
aas
sbb
fstl
jbe
pop
ja
xchg
ja
lret
loopne
sbb
into
xchg
fdivr
in
mov
cmp
stos
mov
int3
lret
inc
int3
sbb
insb
push
and
ljmp
sub
cmc
mov
mov
mov
aaa
negb
je
psubw
mov
sbb
dec
cmp
jae
xchg
movsl
push
hlt
mov
in
mov
in
mov
add
adcb
in
insl
cld
push
mov
call
inc
add
pop
imull
push
nop
rcrl
sarb
test
mov
inc
pop
pop
iret
add
jge
aad
movsb
xchg
div
mov
scas
sub
xchg
lods
je
sub
test
add
pop
into
jecxz
sub
mov
or
jge
add
or
adc
or
dec
mov
xor
stos
mov
sbb
jmp
scas
push
fisubrs
daa
pop
loopne
stc
mov
mov
jbe
pop
loopne
fcomp
sub
in
jno
push
das
mov
imul
dec
dec
and
mov
mov
inc
popf
icebp
mov
loope
or
mov
mov
mov
xchg
mov
std
add
mov
mov
pop
cmp
cli
jge
and
adc
std
lahf
jno
pop
lret
loope
mov
lcall
xchg
rcrb
add
jns
cltd
and
cmp
mov
push
xlat
addb
pop
mov
js
add
mov
or
fldln2
add
daa
xor
call
mov
ficoms
in
dec
dec
cmp
dec
or
mov
mov
imul
in
andl
scas
mov
sub
mov
add
jmp
rorl
inc
aam
cmp
add
in
andb
mov
iret
sbb
mov
add
mov
shll
nop
adc
xchg
negb
push
out
xor
sub
jmp
mov
iret
jmp
xchg
stc
mov
sbb
pop
fprem1
popf
subl
mov
fld
and
fs
ficoml
push
sti
sbb
call
popa
scas
cmc
jo
enter
dec
scas
push
cmp
and
mov
pop
push
iret
inc
xchg
pop
int
add
inc
push
lcall
mov
dec
push
xchg
iret
fcompl
inc
shld
pop
ss
adc
rolb
fiadds
aaa
push
jne
insl
rorb
ljmp
iret
xchg
mov
icebp
add
add
in
xchg
cmp
sub
data16
pop
int
cld
cmp
cmc
shlb
xorl
aaa
dec
lock
out
push
dec
loop
xchg
cmp
leave
test
adc
xchg
es
daa
in
sbb
cwtl
mov
jbe
enter
jle
pop
sub
lcall
jg
xor
xor
or
adc
sub
push
jmp
rolb
dec
cmp
lret
and
ret
loopne
mov
inc
cmp
jge
in
mov
pop
mov
lea
dec
mov
jns
stos
jb
rcll
scas
addl
push
sub
adc
mov
stos
or
das
add
xor
sar
hlt
push
mov
mov
push
outsb
pushf
sti
subl
adc
and
jmp
lds
in
xchg
cmp
in
leave
das
js
imul
movsl
pop
lods
jo
ljmp
pop
jg
mov
cmpsl
cmc
jecxz
aas
into
push
cmp
jbe
fistps
pop
js
lcall
stos
leave
das
and
js
xchg
sbb
mov
inc
sahf
aaa
ds
cld
inc
bound
inc
pop
push
sub
outsl
inc
leave
adc
addr16
cmp
call
movsb
push
xchg
mov
imulb
cmp
in
test
rcll
cmp
mov
in
clc
sub
loopne
js
test
inc
ret
or
inc
mov
dec
mov
inc
popa
ret
mov
cmc
and
rolb
mov
sarb
sbb
adc
push
jae
inc
dec
xor
lods
and
jge
jne
cmc
fcmovnu
mov
fiadds
ja
add
and
add
repnz
sbb
or
fiaddl
fs
mov
int3
mov
call
cmp
jge
and
fsubrl
xchg
lret
cmp
aaa
jmp
jbe
test
nop
mov
mov
mov
fmuls
aaa
ret
dec
pop
pop
dec
loopne
aam
sub
fs
mov
push
cmp
adc
push
aad
loope
inc
mov
mov
mov
je
add
das
inc
or
mov
or
xor
dec
mov
inc
mov
pop
fs
mov
loopne
push
push
lahf
imul
roll
test
ret
leave
pop
arpl
repnz
mov
out
push
fsubrl
mov
and
iret
jle
in
cli
addr16
inc
add
insl
and
xchg
faddl
sbb
xor
je
popf
sbb
aas
adc
mov
push
js
pop
lds
mov
cmp
pop
mov
enter
fwait
pslld
shlb
mov
push
es
cmp
push
aam
lret
sub
add
bound
pop
lcall
shll
scas
test
mov
mov
aad
hlt
jnp
pop
mov
scas
adc
push
idivl
sahf
mov
pop
ret
sub
lcall
ds
mov
jbe
inc
negl
add
jecxz
sbb
das
sub
int
pop
movsb
cmp
insl
scas
adc
ss
ret
mov
shll
adc
sub
jnp
jp
stos
add
aad
add
xchg
xchg
addr16
sub
dec
push
sub
mov
cmc
cmovne
or
ja
sti
ja
xor
sub
in
pop
mov
jle
stos
or
cld
outsb
fildll
pop
sbb
inc
sahf
cmpb
js
push
xor
in
xchg
mov
or
hlt
stos
xchg
into
sahf
cmpsb
sbb
sbb
adc
movsl
aaa
pop
in
mov
or
andb
xchg
add
sbb
add
or
jecxz
xchg
popa
pop
bswap
adc
rcll
shll
push
cmpxchg
pop
popf
pop
subb
jmp
jmp
test
mov
mov
lcall
mov
pop
orb
add
push
push
and
xchg
imul
fbld
popf
xlat
imul
sbb
cmp
aas
or
loop
aaa
fmulp
cs
push
xor
rol
mov
jge,pt
pop
mov
int
inc
lea
negl
fcoml
fldenv
mov
cmc
push
mov
aaa
ja
push
fsubrl
sbb
nop
xchg
pop
dec
jmp
enter
push
in
adc
xor
mov
jns
movsl
add
inc
cmp
mov
lahf
push
xor
jb
jg
loop
jl
xor
movsb
dec
adc
pop
not
andb
bnd
xchg
into
ja
jno
mov
movsl
insl
pop
mov
ljmp
jno
lods
xor
sbb
sbbb
xor
jo
xchg
mov
inc
jmp
lret
rcrl
jo
test
scas
js
mov
xorb
cmp
sahf
lcall
fwait
pop
das
in
imull
fwait
mov
neg
mov
mov
js
idivl
pop
mov
dec
xchg
cmpsl
jp
pop
pop
loop
jns
jbe
dec
stos
mov
mov
dec
scas
jb
out
mov
mov
aaa
xchg
cmp
dec
mov
inc
outsl
xorl
aam
enter
lock
icebp
ds
mov
dec
dec
aaa
mov
pop
into
adc
in
cmp
push
out
push
inc
sub
push
mov
xor
fs
mov
mov
std
fisttpll
mov
jg
hlt
pop
dec
jae
push
push
mov
vpunpcklbw
rorb
inc
pushf
ja
scas
push
push
cld
and
pop
pop
jmp
test
movsl
call
add
pop
movsl
sahf
fs
pushw
idiv
cli
es
and
jle
and
sbb
or
mov
sti
cli
stc
ret
jmp
je
mov
out
dec
xorb
in
xor
in
adc
fdivs
pop
lods
icebp
dec
and
ss
and
add
hlt
aas
out
cltd
jmp
inc
adc
push
jno
loope
std
pop
subb
hlt
cmp
mov
stc
orb
push
mov
add
mov
lret
push
fwait
cmp
push
jo
out
or
mov
and
jp
or
sahf
and
scas
cmc
jge
cld
insl
mov
insl
adc
push
mov
int
adc
scas
cmp
mov
fucom
out
cltd
push
pushl
xor
and
xor
negl
in
shrl
pop
jno
adc
xor
adc
push
js
and
sahf
pop
sbb
cmp
out
roll
jp
jl
inc
add
popf
xor
imul
in
enter
inc
jecxz
mov
add
mov
and
lock
and
int
mov
jp
scas
icebp
clc
ret
add
adc
icebp
mov
lcall
pop
fs
or
jg
or
sti
in
das
add
push
xor
jns
pop
and
int3
in
push
push
into
xor
outsb
dec
call
sub
jecxz
hlt
lods
scas
and
out
adc
sub
add
adc
sub
sub
or
notl
pop
mov
popa
jne
cmp
sbb
sub
push
int
adc
mov
imul
jl
or
jmp
push
inc
pop
ss
sub
rcll
dec
or
mov
push
mov
div
pop
push
xor
xor
jecxz
std
xor
adcl
fdivs
rorl
jp
dec
jo
ja
lock
or
fildl
adc
es
jnp
addr16
lods
dec
cmp
pop
insl
and
fstpt
stc
adc
aaa
xor
loop
fsubs
inc
fwait
dec
mov
sahf
xchg
dec
add
mov
add
cmp
jge
pop
sti
std
ret
sti
pop
popa
adc
cmpsl
scas
cli
inc
call
data16
cmpsl
loope
adc
fstps
xchg
iret
aas
arpl
mov
int
add
cs
and
jge
sbb
sub
add
and
loopne
xlat
add
pop
push
mov
outsl
mov
mov
xchg
pop
cs
fs
xlat
addr16
sub
sbb
mov
hlt
aas
push
das
scas
mov
xlat
pop
testb
adc
in
mov
or
ljmp
jbe
mov
or
sbb
jmp
xchg
lock
adc
push
and
or
ret
pop
jge
dec
test
add
and
lods
jo
add
mov
mov
jno
and
pop
pop
and
stos
xchg
inc
jge
add
mov
stos
fiadds
insl
inc
mov
dec
add
mov
in
pusha
or
daa
jecxz
mov
sub
mov
scas
mov
cli
xor
or
and
sub
insl
push
js
lret
jge
mov
fimull
jbe
cwtl
jne
outsl
xor
rcl
shlb
lahf
or
leave
mov
lods
jne
outsb
mov
sti
cmp
inc
xchg
fcomip
cmc
xor
jnp
cmpsb
cmpsl
or
push
pop
dec
sbb
cwtl
cli
faddl
cld
daa
mov
ja
ficomps
inc
out
jne
lret
cwtl
fists
sub
ret
xchg
insb
pushf
mov
xchg
cmpsl
lock
sub
pop
cmp
scas
xor
call
dec
xchg
mov
cwtl
cmp
pop
sub
push
cltd
push
es
pop
push
and
filds
not
cltd
stc
xlat
aaa
jmp
push
rolb
push
pop
xor
jno
sahf
mov
fdivl
cmp
in
out
into
sbb
add
in
or
inc
mov
outsl
sub
sbb
mov
sub
pop
inc
cld
ljmp
inc
movsb
lock
lods
clc
push
shlb
inc
ja
push
bound
cltd
out
insl
mov
lahf
cmpsb
mov
xor
pop
mov
loope
int
sahf
cmpsb
aaa
je
loopne
call
ja
pop
xchg
js
sbb
or
or
mov
jnp
data16
lds
ljmp
mov
es
mov
xorl
mov
fdivrs
imul
jbe
test
jnp
test
icebp
popa
jg
xor
lock
outsb
or
or
fdivs
sub
movsl
inc
mov
pop
dec
lock
inc
ficompl
pop
sbb
mov
sub
mov
idivb
xlat
subl
jns
mov
mov
sbb
xor
fisubrs
jns
jg
jmp
dec
sti
loop
enter
lcall
outsb
lea
nop
adc
je
cmp
sbb
rolb
fsubr
shlb
sub
clc
jg
inc
mov
imul
sub
aam
xchg
inc
shlb
dec
cmp
xor
mov
mov
pop
add
test
imul
lahf
test
cltd
and
push
fisubrl
add
push
xor
mov
cli
psubw
mov
inc
loopne
dec
or
cmp
cmp
es
sahf
jb
mov
mov
xor
or
mov
sarb
add
push
outsb
movsl
sbb
jl
fisttps
or
mov
jg
testb
test
movsb
es
cmp
dec
movsb
xor
pop
mov
mov
inc
pop
add
stos
mov
fiaddl
dec
add
cmp
xchg
cmpl
loop
cmpsl
jmp
inc
lea
mov
mov
dec
inc
mov
in
rclb
clc
or
push
jge
sub
out
add
fldz
sti
and
xor
mov
rorl
js
xchg
xlat
loop
adc
cwtl
test
pop
sub
cltd
ds
dec
pop
push
mov
mov
icebp
push
test
dec
out
or
push
inc
pop
jns
cli
mov
scas
in
cs
test
fisubs
orl
mov
lcall
dec
in
fisttpll
bound
shll
lret
das
pop
imul
dec
mov
inc
dec
repnz
add
sbb
in
ljmp
mov
mov
sub
xor
xorl
pop
repz
mov
insl
sbb
xor
xchg
mov
lods
lcall
lods
xor
push
icebp
mov
rcll
add
arpl
fs
inc
mov
data16
test
cltd
adcb
xor
mov
lret
scas
xor
pop
and
loop
sub
stos
mov
insl
push
xor
jg
jno
iret
pop
jno
mov
jmp
stos
push
inc
fisttpll
int3
adc
in
fcmovnu
fists
sub
adc
and
mov
in
repz
ficoms
test
orb
mov
mov
and
sbb
fs
cmp
cmc
mov
cmp
mov
or
pop
and
inc
sbb
sahf
mov
mov
sbb
jecxz
pop
or
xchg
mov
jp
push
cmp
adc
push
les
push
das
jl
sbb
loop
mov
cmpsb
jo
repnz
sbb
dec
xchg
scas
call
mov
ret
jle
into
push
sbb
mov
push
sbb
sarl
dec
test
xchg
pop
mov
and
xor
cmpb
stc
fists
mov
lret
xor
or
cli
sub
mov
pusha
leave
jmp
arpl
mov
add
movsl
test
inc
pop
repnz
mov
jp
xor
or
add
adc
jg
xor
and
sbb
xor
jle
fs
bnd
sub
cmp
pop
rclb
mov
dec
mov
movsl
lds
mov
ss
jns
or
outsl
aam
into
or
into
lahf
das
ds
mov
aaa
sahf
or
push
xchg
ljmp
cmpsl
and
mov
cmp
int3
xchg
cld
fwait
hlt
push
cmp
and
lods
xchg
test
data16
lea
sub
lret
sub
or
jns
ret
jb
push
fcomi
in
int
mov
xchg
scas
adc
loopne
fisubs
repz
cmp
pop
aam
or
loope
mov
sub
rolb
jo
std
test
cmpsb
lods
inc
mov
pop
int
fists
and
jl
scas
pop
push
jo
cmp
sub
mov
dec
scas
pop
or
cwtl
out
pusha
sbb
jecxz
xor
insb
jns
outsb
adcl
adc
sarl
cmp
dec
dec
jge
pop
cmp
dec
add
mov
ficoml
int3
scas
xchg
sub
icebp
sbb
xchg
mov
loop
mov
sub
push
cmp
repnz
enter
rcrb
psadbw
bound
mov
sahf
inc
xor
enter
orb
lahf
stos
dec
dec
push
jae
xchg
xlat
pop
insl
lods
xlat
or
jo
pop
pop
or
lret
repnz
dec
cmp
fs
adcl
fdivp
xor
jecxz
lods
loop
mov
sbb
int3
pop
xchg
je
jp
mov
push
dec
mov
pop
push
cmpsl
mul
xor
xchg
jg
test
cmp
clc
xchg
cmpb
fstl
loope
adc
es
shll
addr16
jno
xor
pop
popf
cmpl
and
pop
mov
into
sub
sar
lods
sti
xchg
pop
mov
push
lods
sahf
cmp
dec
jbe
or
js
mov
inc
inc
mov
fsubl
pushf
fs
dec
add
xor
sub
xor
mov
repz
pop
mov
adc
cmp
jl
inc
jb
mov
sarl
mov
test
add
es
mov
and
sbbl
jge
xor
mov
enter
test
gs
cmpsb
inc
fwait
mov
mov
pop
out
fstl
fstpt
push
pop
movsb
in
aam
dec
jl
repz
and
aaa
dec
clc
push
dec
ja
jbe
cmpsb
jecxz
jno
enter
inc
pop
lcall
pop
sub
push
mov
inc
test
push
insl
cmp
mov
mov
and
mov
xchg
fidivs
int3
mov
xchg
jmp
mov
pop
test
in
sbb
adc
dec
out
jo
jle
bswap
rol
and
icebp
cld
outsb
or
push
xor
fs
xchg
sub
ret
xchg
xchg
cld
shlb
data16
mov
and
ja
repz
data16
push
sub
cmp
xchg
jg
dec
push
aad
pop
aam
jne
pop
sbb
xchg
add
negb
js
jl
enter
cld
lret
adc
lcall
dec
popa
shrb
jnp
xor
or
sub
fmull
lods
addb
mov
neg
hlt
pop
mov
out
sbb
jnp
xor
push
es
ljmp
mov
pop
and
adc
mov
stos
fidivrs
stc
cmp
ljmp
push
lock
mov
jg
cmpsl
or
push
sub
xor
mov
and
fmuls
xor
xchg
daa
and
popf
cmc
cmp
cmp
sbbl
fidivs
or
icebp
jmp
mov
push
mov
mov
ret
xchg
into
push
cmpsl
divb
sahf
clc
xchg
movsb
or
in
mov
fwait
nop
sbb
ja
jb
mov
cltd
push
rep
and
rclb
ret
pop
cmp
inc
int3
shr
mov
or
lock
sbb
sbb
jl
das
negb
jb
pop
les
jns
notb
aas
popf
daa
sub
push
mov
adcb
jns
mov
ss
test
inc
fstpl
jp
push
ds
cs
das
inc
int3
int
aam
cmp
inc
je
or
je
cmp
das
mov
sbb
pop
push
push
mov
jmp
cmp
test
add
adc
pop
mov
xor
dec
notl
ret
cmp
mov
or
fsubl
cltd
jb
sahf
cmpl
sarl
outsl
andb
mov
cmp
push
pusha
mov
int
inc
movsl
loope
std
call
mov
sub
mov
push
inc
test
mov
sbb
sub
incl
call
stos
jns
pushf
fimull
faddl
xchg
sbb
js
or
add
hlt
hlt
add
rorl
adc
cmp
jmp
test
les
jo
nop
xor
cmp
jmp
push
stos
mov
mov
int
jle
mov
scas
scas
xchg
daa
pop
jnp
popa
dec
push
or
into
push
jae
repnz
inc
ja
mov
outsl
loope
pop
add
popa
in
adc
jo
iret
mov
jg
mov
mov
aaa
jge
dec
mov
mov
inc
flds
in
negb
stc
fldt
push
cld
lcall
mov
idiv
sub
dec
push
scas
pop
push
and
mov
cld
dec
push
fs
push
mov
ret
cmp
rclb
mull
out
inc
push
inc
shl
fidivs
mov
pusha
leave
lret
lret
subb
pop
mov
ds
mov
and
fsub
rcrb
add
xor
popf
icebp
push
push
popa
dec
mov
ds
setbe
imul
daa
push
or
lret
sbb
sbb
xor
push
shrb
movsl
fstps
mov
lret
xor
xor
outsl
addr16
in
lcall
jecxz
cwtl
inc
ljmp
int
sub
sbb
sti
test
shrb
sbb
dec
cmp
push
pushl
pusha
jo
fwait
cwtl
cmp
sub
and
int3
rcl
adc
mov
pop
jb
xchg
lahf
int3
pusha
es
jge
int
cwtl
cmp
mov
testl
cmc
inc
out
repz
mov
rolb
jmp
pop
pop
adc
xor
rclb
pop
add
test
pop
push
xchg
jne
sub
shrb
inc
xor
imul
xchg
add
pop
add
dec
inc
inc
fs
jne
div
add
and
mov
inc
mov
push
iret
repz
mov
xor
xchg
push
mov
adc
lcall
and
sarb
xchg
and
xlat
cmp
mov
es
dec
xor
les
pop
loop
sbb
stc
and
call
nop
je
roll
push
cltd
je
sbb
popa
dec
fwait
and
popa
fisubs
popa
clc
fsubl
cmc
sbb
cmpsb
or
out
and
mov
shrl
cmp
xchg
or
and
inc
movsl
fwait
sar
in
jo
inc
mov
shlb
inc
adc
sub
sbb
cmpsb
sub
push
outsb
fs
push
dec
fmuls
stc
sub
pop
cmp
insb
fs
jne
loop
stc
into
sbb
jle
push
xchg
inc
cmp
lret
pushf
ret
stos
out
pusha
push
pushl
adc
xchg
inc
in
add
lods
cmp
int
pop
in
mov
out
scas
ds
les
je
test
xchg
and
mov
pop
lds
aas
repnz
mov
xor
pop
jne
xchg
sbb
movsl
add
rol
xchg
pop
imul
aam
rcr
sbb
or
mov
addr16
ja
aad
loope
loopne
inc
mov
sbb
cwtl
and
cmp
push
aam
arpl
loop
dec
pop
xlat
movsb
ljmp
out
push
xor
jle
loope
inc
fwait
pop
mov
in
jl
push
sbb
mov
or
aam
in
ret
push
les
mov
mov
imul
or
bound
pop
fwait
lock
cwtl
adc
mov
hlt
push
fildll
dec
andl
jge
cmp
cmpb
imul
cmp
xchg
pop
lds
mov
pop
mov
pushf
mov
push
adcb
sti
xlat
lds
sbb
rclb
mov
cmp
xor
popf
sahf
jbe
lret
js
add
sbb
xchg
inc
jg
in
lods
movsb
xchg
insl
jne
xchg
xchg
sti
insl
push
cmp
add
ja
aam
xchg
fadd
sbb
cltd
xor
mov
cmpsl
popa
ja
lahf
xchg
mov
int
adc
cli
clc
push
sbb
into
test
sub
lret
mov
test
cmc
daa
cmp
ja
mov
fcmovnbe
mov
in
adc
mov
les
lds
mov
add
sbb
ret
xchg
pop
fisttps
andb
dec
pop
inc
push
sub
mov
movsb
jecxz
dec
mov
sbbl
inc
xchg
push
into
outsl
movsb
xor
fimuls
dec
data16
cmpsl
mov
and
mov
push
push
fcompl
loopne
dec
test
jns
mov
and
nop
adc
aaa
pop
adc
xchg
shrb
aad
fnstenv
mov
cmp
pop
inc
dec
mov
push
jne
movsb
sbb
cwtl
fwait
aad
pop
int3
aam
jg
pop
addr16
xor
fists
sbb
lahf
cli
inc
pop
mov
cmp
dec
mov
push
imul
xchg
bound
dec
jl
aad
std
sahf
ja
mov
outsb
push
fsubp
addl
aas
mov
imul
push
xchg
fstpt
gs
js,pt
cmp
xor
jne
dec
xor
xchg
icebp
outsb
ljmp
inc
in
mov
test
lods
pop
lds
dec
aad
push
and
pop
fimull
jb
jb
mov
or
popf
inc
js
aas
xor
jno
jl
lahf
adc
int3
out
adc
test
lods
mov
sti
xchg
xchg
sbb
outsl
out
xchg
cmc
shl
adc
ss
lahf
pushf
addl
or
outsl
testb
cli
mov
fcoms
ja
mov
jae
dec
pop
jg
adc
dec
sbb
imul
pop
shrl
xchg
push
jno
jb
out
pushf
fcomps
cmp
xchg
pop
int3
cmc
das
fcoms
or
cmp
sub
sub
fs
adc
inc
mov
cmp
xor
sar
pop
rolb
and
add
push
sub
fwait
adcb
adc
pop
or
mov
daa
push
mov
leave
xchg
jbe
or
jmp
mov
aas
jb
in
outsl
xor
pusha
loope
inc
add
inc
shll
sub
fstpl
jae
data16
and
test
push
fsts
out
fsubr
dec
mov
xchg
xchg
cmp
add
inc
dec
in
push
xor
shrb
test
add
or
pop
outsb
or
xchg
push
inc
add
jae
sti
ja
jo
xchg
mov
loopne
inc
mov
sbb
nop
jmp
xchg
js
decl
lret
xchg
shll
adc
retw
adc
push
jecxz
xchg
mov
fs
jmp
sub
inc
out
icebp
clc
ds
pusha
sbb
mov
test
icebp
orl
jge
test
push
push
lret
cmp
and
cwtl
out
scas
dec
fimull
jo
or
aas
xor
fs
mov
sub
jp
sbb
mov
in
jecxz
hlt
lret
add
add
xchg
andb
rolb
repz
inc
jl
push
mov
in
adc
stos
mov
cltd
cmp
mov
cmpsb
cld
push
dec
pop
adcb
stc
inc
jae
xchg
xchg
negl
out
dec
push
inc
int
test
jle
mov
or
ret
insl
dec
adc
sbb
mov
xchg
mov
addr16
sub
fwait
clc
inc
mov
mov
dec
in
clc
lahf
arpl
mov
jns
repz
jmp
and
mov
mov
jp
movntq
jecxz
pop
mov
add
lods
mov
mov
lret
shl
xor
dec
mov
inc
cmp
push
lea
cmpsb
xlat
mov
clc
nop
adc
pop
adc
daa
cli
scas
mov
pop
add
pop
adc
fisubs
inc
adc
mov
mov
jg
shl
fldl
roll
mov
sub
out
jae
sbb
dec
mov
push
mov
incl
or
xchg
daa
push
out
add
xchg
sbb
xchg
mov
adc
popa
jne
adc
push
xchg
insb
add
jns
sub
inc
stos
xor
dec
addr16
jnp
xchg
out
jmp
pop
mov
mov
lret
ret
aam
fsubs
xchg
mov
fndisi(8087
sub
divb
fcomp
je
imul
fs
jecxz
nop
stos
sbb
leave
cmp
loopne
adc
mov
xchg
or
push
xorl
shll
add
push
push
add
inc
mov
jmp
jne
mov
add
aad
jmp
sub
dec
push
cmp
data16
add
andb
test
inc
arpl
ljmp
lahf
jo,pn
pop
fcmovu
sti
lret
pop
outsl
call
inc
lahf
out
sar
add
and
pop
sub
roll
cmp
push
adc
pop
lea
lcall
outsb
push
dec
mov
and
xor
mov
push
adc
mov
in
sub
dec
stos
jbe
iret
add
dec
jb
or
cmp
int3
jg
ss
repz
jp
scas
leave
scas
dec
sbb
insb
enter
and
les
scas
add
aam
jmp
xor
xchg
ss
loopne
sbb
movsl
mov
fiaddl
mov
mov
loop
imul
icebp
inc
lea
jae
ja
jbe
sahf
cmp
je
in
sbb
enter
faddp
in
jmp
ret
test
test
je
xor
inc
and
arpl
mov
push
ret
dec
and
scas
fwait
dec
lahf
add
xlat
rolb
mov
rcll
pop
xor
pusha
xor
cld
or
nop
jo
jmp
orl
popa
dec
push
lea
in
cli
cmc
les
aam
push
shl
mov
fsub
loop
inc
in
pop
adcb
mov
das
jno
push
jbe,pn
mov
je
out
inc
fdivr
mov
xchg
or
or
movsl
leave
icebp
sti
daa
push
icebp
mov
fadds
jae
pusha
nop
inc
nop
xor
cmp
xor
push
sbbb
and
mov
fdivs
mov
sbb
mov
jmp
jle
mov
movsb
cmpsl
lock
xor
ss
outsb
mov
or
mov
jecxz
cmp
or
test
or
jmp
lds
in
rorl
andb
fldl
fldenv
mov
inc
inc
and
daa
enter
inc
in
aam
aas
lock
and
cmp
scas
cmp
je
mov
push
dec
push
cld
or
std
ret
inc
pop
setge
ljmp
cmp
adc
jbe
iret
mov
out
xchg
orb
mov
aad
test
push
test
movb
popf
cmp
bnd
push
or
shll
push
add
adc
sub
mov
or
insl
push
into
cmp
adc
mov
mov
lea
loope
aad
stos
jg
ds
out
mov
loopne
fsubrs
and
rcll
jo
jne
mov
fstpt
insl
xchg
inc
popf
jl
sahf
test
imul
popf
aad
add
daa
ds
mov
popa
imul
mov
xlat
jl
dec
cmp
popa
xlat
push
and
push
hlt
cwtl
jg
mov
adc
mov
insb
fs
lea
rolb
in
fwait
push
clc
xchg
mov
ret
stos
cmpsl
mov
out
xchg
sub
loop
sub
test
call
jp
iret
or
in
test
cmp
je
dec
mov
mov
add
loope
fidivl
xlat
lcall
gs
lcall
cmp
in
and
dec
xor
insb
mov
xor
mov
das
add
mov
shlb
test
loopne
inc
push
jb
mov
cmpsl
sub
xchg
sbb
pusha
rcrb
inc
dec
sub
mov
leave
inc
movsl
leave
xchg
daa
add
push
jnp
cmpsb
inc
push
test
jmp
gs
icebp
in
cmpb
mov
mov
pop
xor
sub
sarb
enter
lret
aaa
or
xchg
fisttpll
jnp
push
sbb
daa
shl
es
add
cmp
mov
jle
xchg
insl
pop
xor
dec
cltd
mov
lods
jb
mov
dec
out
std
iret
adc
inc
shrb
sbb
orb
xlat
xchg
mov
icebp
into
mov
mov
jae
add
sbb
jp
out
cmc
mov
jp
xchg
cmp
jmp
outsl
jp
lock
loop
ds
inc
aaa
jno,pn
xlat
clc
mov
jns
dec
adc
jbe,pt
imul
les
adc
xor
daa
pop
loop
mov
xlat
mov
dec
sbb
fimuls
fdivrs
aad
loopne
mov
jmp
test
adc
jno
push
mov
dec
std
adc
cmp
out
aad
test
sbb
adc
cwtl
mov
push
sahf
pop
test
adc
jnp
mov
xchg
sti
push
daa
add
call
sbb
mulb
pop
pop
jmp
push
repz
dec
xchg
movsl
testl
jle
in
loop
ja
push
into
jmp
outsl
scas
dec
movsb
outsb
sub
xlat
fwait
lahf
out
and
lea
push
and
jnp
out
and
icebp
push
sub
mov
push
fistpll
jecxz
jb
push
fstl
and
in
jae
cmp
sbb
mov
and
outsl
jmp
stc
inc
mov
add
fucomip
ds
mov
popf
push
adc
and
loope
lds
pop
gs
scas
mov
add
cmp
mov
shll
dec
push
and
int3
test
push
test
adc
mov
cld
mov
pusha
and
iret
rcll
imul
xchg
jnp
adc
aad
out
adc
adc
pop
mov
pop
push
add
mov
testl
mov
cmpsl
popf
or
lods
orl
mov
scas
dec
xorb
dec
fwait
push
and
jno
cmp
fucomi
mov
sbb
test
push
push
jl
rorb
scas
xchg
sbb
push
pop
test
das
insl
pop
out
ss
sbb
orb
xor
fadd
sarl
xor
cli
les
sbb
push
sub
inc
sub
repz
ss
lock
ret
cld
cmpsl
pop
jge
and
add
or
mov
inc
in
pop
mov
out
fimuls
scas
xchg
mov
xor
adc
sbb
or
xor
cmpsb
das
jae
sbb
sub
dec
dec
add
mov
mov
outsb
lods
outsl
stos
cld
inc
dec
stos
dec
sub
mov
pop
andl
mov
jmp
jmp
fs
jmp
inc
lcall
xchg
mov
mov
adc
xor
arpl
cwtl
or
pop
mov
cli
xor
mov
insb
adcb
daa
and
sub
xchg
xchg
inc
xor
mov
jle
es
cmc
repz
jp
test
sub
stos
mov
mov
sbb
mov
xchg
xor
aaa
adc
hlt
cmp
cltd
mov
inc
out
pop
loope
jo
sbb
lcall
mov
sub
cli
fisttps
pop
inc
lahf
xor
cmp
into
adc
cmpsb
in
and
xchg
add
jnp
lods
cmp
popa
xchg
dec
push
inc
jecxz
shrb
aam
pop
push
push
push
repz
dec
sbbl
or
out
mov
stos
mov
jns
add
sub
sbbb
notl
or
jns
aas
incl
cmp
mov
into
pop
xor
ss
dec
fs
cmpsl
hlt
dec
or
enter
das
xorl
xchg
mov
ffree
and
jp,pt
inc
pushf
push
sbb
lods
stos
jb
rorb
rcrl
lock
insl
sbb
mulb
inc
jo
cmp
dec
sub
call
ret
js
inc
test
sarl
test
adc
xor
xor
mov
hlt
adc
into
dec
sub
stos
shr
rorb
xor
mov
dec
mov
push
int
sbb
xchg
aam
lods
dec
sub
test
sub
or
stos
jns
and
outsl
xor
stos
jle
lcall
ljmp
iret
mov
shlb
cli
jle
popa
lahf
xchg
aaa
stos
incb
fcompl
mov
inc
out
lock
and
push
pop
and
sbb
mov
push
sub
or
adc
xchg
dec
lret
mov
mov
push
cmp
mov
lea
cmp
fistpll
and
rcll
add
and
sti
jge
stos
pop
fstl
dec
mov
imul
mov
loop
mov
xchg
into
fisttpl
push
cmp
aaa
mov
ja
pop
sti
ret
dec
xchg
ja
or
out
ds
mov
lahf
in
es
cmpsl
scas
push
jb
inc
popa
std
scas
lods
push
xchg
sahf
inc
out
dec
in
inc
inc
or
test
and
push
add
mov
sub
mov
or
sbb
cltd
dec
sub
sub
and
mov
jbe
jle
int
or
out
jb
sbb
pop
push
sbbl
cli
movsl
or
push
imulb
fsts
sub
sbb
add
insl
or
xchg
dec
je
mov
stos
fcomps
std
or
jbe
jne
mov
out
cmp
push
jns
cmc
jae
pop
imul
bound
nop
and
fxch
mov
lret
xor
mov
jle
gs
aam
adc
in
mov
mov
adcb
sbb
pusha
insl
cmpb
sarb
or
fst
loop
inc
js
sbb
mov
add
testl
mov
inc
ljmp
push
xor
mov
sub
xchg
xor
mov
add
inc
jo
sarb
sub
push
mov
adc
jg
xchg
fisttpll
fcomps
repnz
nop
or
in
jp
stc
aaa
repz
imul
rol
jne
rorl
ljmp
sub
jb
dec
mov
or
xchg
mov
dec
scas
mov
sbb
les
mov
sub
call
loop
int
inc
jb
shlb
in
cmp
xor
mov
imul
cmp
jno
sbb
jne
in
aas
xor
dec
cmpsb
pop
test
ljmp
xchg
dec
xor
imul
jo
jg
ret
mov
icebp
mov
icebp
sahf
ret
xor
leave
faddl
hlt
xlat
jp
lcall
stc
mov
cs
xchg
xor
shlb
jns
xor
and
jmp
out
fistl
sbb
sub
insb
popf
sub
xchg
out
dec
jo
out
jmp
and
loopne
mov
add
inc
mov
pop
xor
out
sahf
or
ret
pop
gs
inc
out
mov
dec
jl
dec
popf
adc
outsl
sub
imul
jbe
mov
sbb
ss
jae
shlb
sub
push
sbb
test
adc
lea
or
adc
mov
cmp
mov
lods
push
mov
repnz
sub
jns
imul
mov
scas
mov
mov
fwait
loop
lret
loop
sbb
xor
int
imull
ret
bound
test
or
push
push
push
mulb
fcom
ss
lock
out
lcall
aaa
push
sub
push
cld
popa
repnz
mov
xchg
aaa
push
sarb
mov
out
mov
movsb
mov
adc
cwtl
sbb
int3
imul
pop
pop
xor
cmpsb
cmp
push
sbb
cmp
adc
jns
and
inc
mov
out
pop
fsubp
or
mov
mov
in
add
adc
inc
mov
dec
mov
pop
sbb
cmc
les
shr
add
cltd
les
and
shrl
outsb
outsb
push
data16
hlt
into
mov
inc
jae
movsl
enter
add
add
mov
and
jo
mov
and
gs
clc
dec
mov
test
das
mov
clts
and
or
xchg
cmp
andl
and
mov
int
jg
test
mov
pop
cs
sub
lea
adc
add
pop
xor
leave
mov
dec
pop
cli
jo
std
leave
scas
stos
pop
ljmp
pop
fldl2t
and
jnp
bound
or
lret
imul
outsb
mov
fildl
addr16
mov
mov
cld
ficomps
outsb
imul
mov
cmpl
mov
scas
jg
lcall
popf
mov
ljmp
in
jecxz
mov
sbb
out
test
inc
fnclex
xchg
cmp
out
test
mov
outsl
hlt
test
push
addr16
cs
jns
xor
cmp
sub
sarb
les
jp
push
cmp
movsb
push
jmp
fsubrs
and
pop
enter
mov
mov
sub
add
xor
mov
mov
cs
loopne
adc
loope
lods
and
inc
std
mov
out
ret
pop
shlb
push
dec
stc
xchg
adc
jge
push
clc
aam
out
sub
cmc
pop
adc
lret
int3
mov
mov
and
enter
dec
fwait
push
out
xor
je
fnstsw
pop
addb
test
mov
inc
inc
and
aaa
inc
xchg
sbb
outsl
mov
shll
or
arpl
imull
mov
pop
xchg
enter
jno
mov
jo
sbb
mov
inc
inc
mov
mov
cmpsb
sub
sti
andl
jbe
shrb
inc
mov
xchg
mov
je
rorb
js
shll
fwait
insb
into
fcmovnbe
cli
leave
jg
dec
icebp
outsb
aam
insb
and
frstor
int
sub
ret
cltd
or
ljmp
mov
inc
push
lods
negl
stos
mov
cmpsb
rorb
lods
lock
or
and
jcxz
xor
dec
mov
sbb
test
aas
lods
dec
andl
sbb
or
or
enter
push
push
cli
je
ss
test
mov
iret
jle
and
aad
cmp
pop
ss
scas
inc
xor
mov
xchg
xor
js
lcall
mov
repz
xchg
testb
push
pusha
shll
cld
cmp
pop
sti
aas
cmp
mov
inc
dec
movsl
cmpl
push
repnz
jge
push
sub
mov
pop
fsincos
mov
cmp
mov
mov
movsb
jae
bound
loopne
pusha
dec
cmpsb
xorl
jmp
test
pop
jne
push
faddl
jl
dec
fwait
in
popa
sub
pop
dec
and
btr
arpl
and
test
mov
imul
out
addr16
mov
cmpsl
mov
dec
inc
icebp
mov
sbb
and
enter
and
repz
out
daa
inc
ja
fcomps
xor
and
mov
dec
call
hlt
xchg
push
ret
xchg
adc
ret
mov
jb
leave
popa
adcb
mov
aas
push
xchg
dec
inc
sahf
sbbl
cmpsl
in
sub
das
movb
mov
insb
popf
addr16
js
idivl
int3
adc
loop
lods
pop
sub
sbb
bound
xchg
pop
cmp
jle
and
stos
jmp
push
lret
xor
dec
mov
jb
sbb
adc
pop
dec
cmp
jno
push
subb
sub
mov
lcall
and
inc
fistpl
aam
js
push
repz
cld
aam
xor
mov
divb
xchg
pop
jb
fstp
and
leave
add
add
inc
mov
mov
add
call
jle
push
xchg
push
push
push
lret
out
push
and
lea
pop
xchg
jp
fsts
inc
mov
sti
lcall
fldcw
xchg
hlt
xchg
mov
out
std
arpl
mov
call
jp
mov
dec
fidivrs
fildl
dec
sti
sub
xor
std
or
fcmovne
addr16
in
mov
sbb
xor
lods
push
jge
pop
js
sub
push
testl
cli
sbb
cs
push
pop
add
inc
xchg
outsl
pop
aam
sbb
scas
in
call
inc
inc
nop
xchg
pop
mov
fwait
xor
pop
adc
lods
mull
inc
add
inc
inc
lahf
je
push
leave
pop
inc
imul
cmp
sarb
daa
das
jo
xlat
mov
jns
pop
jo
movb
inc
add
jge
in
inc
lds
jbe
lds
push
push
jo
aas
and
xchg
fmuls
mov
fdivrs
and
xchg
xor
xchg
outsl
xor
xchg
xor
or
dec
inc
sub
xchg
lds
jne
lods
or
xchg
jg
dec
mov
jnp
rcrb
cmp
rorl
sti
andb
outsl
jle
mov
and
push
out
jns
fnstcw
push
cmp
mov
sbb
pusha
mov
mov
pop
xchg
or
movsl
cmp
scas
adc
movl
aas
mov
sbb
push
jb
loop
dec
imul
add
test
repz
lret
std
mov
push
xor
xchg
pop
in
inc
sar
in
mov
inc
stc
jns
or
mov
push
ja
add
sbb
or
mov
lret
push
mov
cmp
inc
xor
sarb
pop
out
fisttpl
in
add
nop
addr16
lods
sbb
cmp
popf
sbb
xlat
jl
xlat
icebp
mov
stos
mov
mov
mov
mov
jno
dec
call
insb
cmp
adc
ds
outsb
pop
dec
lahf
xor
ds
and
aas
js
jle
leave
movsl
es
jp
pop
xchg
fsts
mov
out
js
or
leave
fsubrs
mov
mov
into
mov
orb
or
push
mov
or
add
adc
xor
pop
loop
pop
fnstcw
ret
bound
shrl
out
add
mov
mov
push
subl
pop
pop
fcoml
dec
scas
movsb
mov
into
testb
xchg
out
lock
pop
cs
xor
mov
jbe
cwtl
dec
clc
test
test
pushf
lahf
pop
frstor
ds
add
jbe
stos
sub
pop
xchg
into
xchg
out
mov
in
jmp
in
mov
pop
sbb
dec
adc
cmp
xchg
outsl
pop
push
test
add
lock
arpl
pop
dec
mov
scas
jg
shrb
ljmp
rol
lods
clc
mov
pop
in
and
sahf
mov
push
cmp
fidivrl
sbb
ret
sub
lods
aam
jno
mov
or
mov
rorb
xchg
js
mov
cltd
cmp
cmp
push
push
mov
mov
popf
or
arpl
dec
rcrb
mov
xchg
aaa
inc
sub
add
ja
addr16
inc
test
lock
outsb
xor
mov
aas
pop
sub
add
outsl
mov
cltd
fwait
jb
xor
pushf
shrb
addr16
jo
xor
inc
cmp
pop
jo
lea
add
aad
sahf
mov
cltd
pop
fs
pop
and
sub
mov
jne
loop
xchg
mov
lods
scas
dec
sbb
sbb
pop
out
ficoms
loope
sub
sbb
in
nop
mov
mov
aam
push
adc
insl
fwait
lahf
nop
push
loope
psubusw
es
mov
out
cmp
sbb
mov
int
add
movsl
push
flds
lea
testb
sar
xor
movsb
ret
dec
out
lcall
addr16
aad
pusha
pushf
outsl
into
cmc
xchg
xchg
jo
lods
inc
or
xchg
add
loope
nop
or
imul
and
scas
xlat
push
aam
dec
mov
dec
loope
lahf
test
mov
pop
outsb
or
sub
adc
jge
pop
push
int
or
xchg
jl
arpl
popa
and
shrb
or
dec
lds
push
push
imul
dec
or
ja
lcall
jns
pop
xchg
jo
insl
loopne
cs
jp
jo
pop
xor
push
pop
ficoms
sbb
call
es
xchg
mov
mov
add
cltd
jae
mov
jns
push
push
or
or
pop
inc
or
mov
adc
mov
jnp
repz
mov
cmpb
mov
in
xorb
cld
mov
ljmp
lods
push
insb
mov
insl
xor
movb
push
stos
mov
insb
and
loop
sbb
pop
cmp
sub
int
push
aad
add
je
lret
adc
cmpsb
add
out
ret
testl
xor
fimull
mov
into
and
cmp
mov
adcb
nop
push
sub
dec
imul
rcrb
lds
adc
cmp
jae
pop
jle
pop
pop
lods
pop
pop
adc
mov
aam
mov
arpl
es
sarb
mov
xor
jno
movsb
add
loopne
sbb
rcll
pop
push
repnz
xlat
fsts
cmp
inc
daa
xchg
loopne
sbb
pop
js
mov
pop
and
adc
loop
dec
inc
cld
movsb
xchg
mov
repz
adc
dec
ds
lea
push
nop
inc
imul
xchg
jb
test
icebp
jne
add
in
imul
das
inc
int3
or
aad
push
rcl
or
push
cmpsb
add
cmp
mov
fstpl
sub
sbb
int
dec
popa
mov
filds
cmp
lret
fwait
push
ret
aad
cmpb
popa
lock
pop
les
leave
popf
inc
pop
sbb
clc
stos
mov
jb
xchg
push
mov
or
cmpb
nop
push
cmc
or
push
ss
lds
xchg
iret
pop
inc
daa
out
lcall
sbb
test
push
and
sub
push
inc
popf
ds
dec
dec
enter
in
iret
xor
aam
repz
pusha
jae
imul
ficoms
mov
and
test
les
pop
or
mov
and
mov
sub
cltd
xchg
popa
cmp
sbb
sbb
pop
and
mov
sti
jmp
cld
mov
ja
fisubrs
lret
jbe
cwtl
divl
pushl
movsb
js
xchg
out
call
jns
and
test
and
mov
mov
call
mov
int3
insb
lods
sbb
fsubs
xchg
ja
mov
lcall
add
aad
repnz
fdivp
out
cmp
mov
enter
sub
ljmp
fcoms
inc
gs
cmp
lahf
mov
iret
mov
push
fs
insb
add
loopne
test
jp
dec
mov
jne
add
fcoms
pop
xor
xchg
loop
cltd
cmp
gs
add
lcall
fsts
xchg
jno
push
ret
aaa
daa
in
push
xor
cwtl
mov
out
popf
inc
sbb
jne
je
xchg
mov
adc
les
push
push
or
dec
cmp
incb
pop
insb
and
orl
pop
inc
dec
inc
push
push
adc
loope
aas
sti
je
pop
call
and
idivl
adc
and
jmp
movsb
icebp
mov
repz
je
mov
aad
mov
ficoml
push
icebp
inc
out
test
push
cmpsb
popl
push
ljmp
pop
mov
mov
lret
int3
mov
test
add
sub
jecxz
pushf
jne
repz
lea
cmpsl
adc
push
stos
ret
cmc
dec
es
push
orb
xchg
mov
pop
mov
adcb
mov
dec
adc
push
out
jl
enter
gs
push
pop
push
cmp
xor
leave
mov
jp
lcall
or
fisubl
fisubrl
add
out
ja
pop
cmc
iret
popf
push
jecxz
xor
or
xchg
pop
add
cmovg
pop
cld
ficompl
sub
dec
leave
test
xor
data16
xor
sbb
sub
pop
loopne
lds
push
shll
cmpsl
xchg
push
call
notb
xor
pop
xchg
add
in
cs
mov
lods
fs
xchg
sub
push
jge
outsb
js
out
xor
push
sbb
imul
out
push
inc
dec
test
cmp
out
jne
pop
clc
into
mov
out
xlat
sbb
rcrb
and
fmull
das
mov
mov
mov
rclb
jnp
stos
dec
add
sahf
popa
mov
aas
jmp
and
sub
xchg
xlat
pop
xlat
inc
into
frstor
bound
push
cmp
ljmp
lds
push
add
xchg
adc
adc
enter
add
sub
dec
ds
xchg
popf
xor
stos
mov
mov
hlt
xchg
adc
js
jbe
xorl
sbb
cli
xchg
jg
icebp
aam
push
enter
rorb
jmp
push
mov
mov
cmp
repnz
call
dec
lcall
adc
pop
xchg
mov
pop
xlat
dec
cmp
push
out
lahf
push
push
sub
add
jl
sub
jno
push
mov
aad
or
lea
lcall
dec
fucomp
in
push
cltd
push
jne
insb
mov
mov
lahf
lcall
pop
leave
cmpsl
and
ja
bound
shl
or
pop
lcall
je
lods
cmp
sub
cltd
and
popa
cld
push
mov
lds
mov
aas
push
mov
pop
pushf
sbb
pop
mov
aaa
inc
jae
imul
xorl
jae
pushf
jno
outsb
pop
xor
inc
push
pop
sti
adc
shlb
mov
inc
add
mov
scas
xor
pop
je
sbb
mov
mov
out
dec
test
mov
lahf
jle
mov
int
xchg
into
ret
cmp
test
movsl
push
adc
adc
sub
ss
cmpsb
add
sbb
add
bound
sbb
gs
fwait
insl
xchg
cmp
incb
mov
cmp
shrl
iret
addr16
iret
nop
and
xor
jae
out
push
je
xchg
jns
out
and
mov
insb
sahf
leave
test
into
xchg
push
loope
cs
lods
xchg
sbb
or
push
fwait
shr
sbb
cmp
sbb
sbb
hlt
dec
es
inc
adc
nop
mov
add
leave
fidivrl
mov
jno
and
ds
pop
aaa
push
ret
iret
push
andl
xor
add
repnz
das
push
pop
iret
adc
mov
adc
test
aas
fwait
jae
mov
mov
sub
outsl
inc
and
mov
cmpsl
xor
sbb
mov
into
mov
lods
dec
adc
dec
mov
cwtl
jecxz
out
or
imulb
sub
pop
insb
xchg
repz
mov
xchg
lret
call
stos
mov
lock
or
call
dec
shl
push
into
cli
fwait
lods
pop
es
aas
test
imul
testl
cmp
inc
ss
inc
in
cmp
jno
mov
icebp
cli
xchg
mov
jge
fcmovnb
mov
out
lock
loopne
loope
test
sub
rolb
jo
jae
dec
ficomps
inc
data16
in
add
mov
jnp
data16
lahf
adc
in
push
fmull
aad
fwait
mov
cltd
pop
push
std
flds
cmp
mov
loopne
lods
sbb
cmc
xor
ret
inc
add
mov
aaa
fsub
jmp
cmp
aaa
and
pop
cmp
repnz
leave
mov
sub
inc
stos
xchg
push
shrl
out
jae
inc
test
cmp
mov
pop
pop
xor
arpl
mov
sarl
mov
cli
cli
ljmp
pushl
jge
pop
lods
imul
pop
daa
and
insl
fcomps
addr16
dec
cs
xor
lahf
and
aam
mov
lret
ja
scas
fdivl
ljmp
cmpsl
lock
imulb
aas
cmp
xchg
and
inc
add
mov
push
adc
sarb
in
push
js
xchg
lds
jecxz
push
jne
out
std
sarb
mov
orb
push
pop
negl
cli
mov
movsb
xor
imul
jns
movsb
scas
xor
popa
enter
push
repz
loope
lcall
aas
scas
stos
stos
inc
jmp
test
pop
insl
mov
pop
adc
shlb
int3
rolb
inc
pop
and
mov
fdivrs
xlat
or
cltd
repz
sub
dec
and
fistpll
mov
pop
ret
sti
mov
int3
mov
decb
adc
mov
fidivl
mov
sar
fisttpl
insb
popf
push
or
mov
dec
pop
stc
add
pop
fcom
and
sbb
push
ja
and
adc
imul
mov
lock
hlt
das
inc
sbb
test
fwait
in
push
clc
mull
es
mov
jae
push
lods
mov
inc
jns
pop
dec
fs
add
mov
dec
inc
mov
sbb
rorb
or
mov
bound
mov
jmp
mov
add
stos
fcoms
test
sub
lock
lods
adc
int3
test
pushf
pop
mov
push
daa
daa
pop
insb
push
test
xor
ficoms
mov
xor
call
ja
fwait
aad
adc
cmp
pop
rorb
sbb
out
jp
pop
cmc
mov
shll
ss
sub
sub
test
mov
dec
hlt
int
sti
and
outsb
adc
mov
jnp
pusha
mov
dec
xchg
adc
rcrb
lds
dec
cmpb
out
push
loop
rol
jmp
sbb
inc
push
or
inc
jmp
adc
enter
xor
jno
fstpt
add
lock
das
sti
mov
test
xor
lret
testb
xor
push
les
sub
rorb
and
xchg
pusha
stc
aam
mov
xor
xchg
loope
lcall
orb
rcrb
sub
out
daa
mov
and
pop
jle
cmpsb
sub
aam
movsl
ret
das
mov
mov
jnp
pop
lret
sbb
in
xor
jecxz
rcrl
jae
sbb
inc
inc
sub
lock
bound
jl,pn
pop
divl
cmp
lahf
pop
rol
repnz
mov
fnstenv
lcall
data16
xor
xchg
jl
leave
or
int3
bound
data16
push
cmp
add
add
fdivrp
jp
shll
cmp
mov
clc
popa
xor
or
icebp
loop
jecxz
ljmpw
dec
in
xchg
imul
jl
loopne
pushf
lds
push
mov
jge
aam
mov
cld
outsl
popf
push
sbb
pop
cld
test
ret
bound
movsb
push
sub
pop
mov
sbb
mov
dec
mov
fcoml
mov
jl
sub
sub
mov
ss
push
pop
mov
imul
je
mov
lret
mov
mov
cmp
aad
sbb
adc
inc
adc
repz
and
xchg
dec
xchg
adc
push
inc
rolb
orb
mov
stos
mov
adc
sub
je
inc
jbe
push
add
inc
cmp
and
jne
jg
add
xchg
cwtl
cmpb
add
xchg
sub
pop
fwait
addr16
sub
shll
pusha
or
adc
push
rolb
and
daa
and
je
leave
xchg
jae
sahf
mov
daa
test
or
popf
int3
mov
mov
jmp
fadd
adc
inc
out
ja
jp
adc
jbe
jbe
in
or
adc
decl
into
ds
mov
pop
clc
cmp
push
mov
and
dec
pop
shll
sarb
ret
xor
insl
sub
enter
fisubrl
dec
sbb
daa
inc
jmp
push
and
dec
aam
xor
and
out
and
mov
or
jae
or
shlb
lods
mov
loop
shrb
cmp
mov
movsl
cltd
rolb
fs
stc
aam
int
push
or
call
stos
js
das
inc
cmpsb
ds
xchg
jp
dec
repnz
mov
xchg
dec
xor
mov
in
add
xor
into
pop
mulb
push
mov
mov
mov
pushf
loop
out
imul
fsubp
mov
fcomps
push
lret
mov
mov
adc
push
movl
call
fwait
cmpl
test
rcl
push
ret
fs
repnz
or
inc
jns,pt
sub
and
push
add
cmp
mov
pushf
and
jecxz
add
stc
mov
out
mov
rcr
and
pop
int
mov
dec
daa
fs
rcrb
test
xchg
pop
loope
xchg
mov
push
sbb
xchg
mov
shrb
jb
jno
jbe
push
inc
jae
cltd
jae
mov
cmp
es
les
nop
sbb
lods
mov
test
aaa
sbb
flds
test
in
xor
jmp
mov
sbb
insl
mov
cwtl
bts
aad
pop
lcall
mov
hlt
push
mov
jecxz
int
mov
js
cmp
jle
mov
dec
jl
repz
cli
xor
stos
das
adc
dec
lods
icebp
sarl
enter
push
loopne
xchg
pop
pop
lcall
mov
cltd
push
push
and
mov
xchg
loopne
push
mov
inc
pop
pusha
ret
stos
mov
cmp
adc
and
jg
es
adc
aas
push
fs
ficoml
js
cmp
jnp
or
sbb
mov
call
les
pop
repnz
sub
stos
scas
sub
or
pop
stos
push
out
inc
bound
cwtl
leave
add
jbe
rcrl
mov
shlb
repnz
xor
rcll
jmp
pop
loop
int3
cmp
ret
aaa
cli
push
add
outsb
out
push
test
rcll
test
adc
add
dec
sarl
test
push
mov
cli
jmp
jg
jl
test
inc
xor
adc
pop
decl
dec
popa
inc
mov
and
test
lods
cwtl
xchg
fnstcw
sub
aaa
js
mov
push
arpl
mov
jns
rcrb
sbb
push
ljmp
pop
cltd
mov
push
mov
push
fistps
ljmp
cmp
test
out
cs
mov
popa
jecxz
dec
cmp
pop
lods
jmp
pop
sub
pop
adc
mov
mov
testl
js
or
mov
stos
dec
cwtl
sub
adc
pop
and
movsb
mov
sbb
shl
ret
arpl
or
jbe
pop
jne
test
push
lret
test
fimull
adc
popa
sbb
dec
lcall
pop
lds
cltd
test
pop
dec
mov
ja
arpl
out
push
push
inc
mov
mov
xor
pop
xlat
jle
push
push
adc
pop
dec
cwtl
fstl
xchg
sti
sbb
cmp
inc
sbb
in
mov
mov
sbb
js
fwait
sahf
loope
cmpsl
aad
adc
fldl2e
add
sub
rcrb
cmp
je
sbbb
das
mov
fdivs
and
pop
test
in
stc
cmp
syscall
imul
cmpb
repz
cmp
xchg
xchg
add
sbb
xlat
mov
pop
jns
sbb
hlt
push
sub
rdmsr
adc
dec
jg
mov
sub
dec
mov
sarl
rorl
jecxz
jp
scas
fs
xchg
xor
nop
shlb
xchg
xchg
pop
pusha
xchg
jb
or
inc
jnp
outsl
mov
rcr
ljmp
add
lahf
xor
pop
iret
jb
mov
sbb
or
xchg
mov
arpl
loope
out
mov
lea
jo
test
addr16
or
jns
push
int3
test
shlb
test
and
push
nop
mov
lods
mov
push
fisubrs
mov
jae
popf
pop
push
or
scas
push
push
dec
lea
aam
cmc
jg
outsl
in
jnp
int3
or
iret
xlat
xchg
mov
add
in
inc
jmp
mov
dec
xchg
jg
inc
movsl
push
cld
add
xchg
int
mov
or
daa
mov
inc
pop
pop
sbb
jb
icebp
mov
pop
push
testb
addr16
sub
je
out
ds
lock
sub
inc
xor
mov
and
test
mov
or
or
icebp
fildl
test
sub
jl
mov
popa
loop
sub
rorb
inc
add
out
nop
icebp
sbb
cmp
clc
push
lcall
mov
idivb
lods
icebp
jmp
xchg
cmp
xor
or
or
scas
icebp
orl
sub
inc
sbb
fcmove
out
fimuls
mov
dec
mov
push
js
mov
int3
lcall
sti
lret
lds
shr
outsl
mov
add
mov
pop
out
xor
push
mov
in
mov
test
sub
or
xor
inc
test
add
mov
repz
nop
push
mov
movsb
lods
or
cmp
out
mov
mov
sbb
test
addb
dec
movsl
xchg
sub
lahf
push
xchg
sti
out
loopne
stos
pop
xorl
xchg
xchg
xchg
icebp
in
push
fisubrl
addl
inc
test
icebp
add
dec
shll
sub
jb
lods
and
shr
test
lcall
cmp
inc
mov
fbstp
mov
mov
push
lods
dec
dec
xor
sub
enter
decl
cmpsb
push
pop
inc
and
daa
outsb
sahf
fildll
dec
sti
cmpsl
adc
repz
pop
fcomps
add
lahf
test
sbb
xchg
mov
sahf
scas
les
mov
push
std
add
ficomps
rclb
xor
xchg
fldcw
jmp
lea
test
rorb
outsb
adcb
call
pmaxsw
das
inc
inc
mov
pop
pop
repz
mov
rcr
xor
xchg
mov
jne
pop
popf
sbb
jo
jne
loopne
out
iret
jecxz
stos
mov
scas
jmp
fidivs
sbbl
sub
pop
js
mov
lret
or
aas
adc
rep
mov
fnsave
sbb
push
popa
xor
aad
mov
xchg
ret
sbb
mov
imul
insb
dec
add
pop
lds
dec
repnz
jg
xor
es
clc
cs
and
pop
std
stos
ss
scas
stos
cs
dec
cmp
inc
push
push
push
mov
test
shrb
inc
or
add
ret
mov
sbb
cmpb
xor
mov
mov
rcrl
or
popa
jae
sub
xchg
fiaddl
push
sub
inc
iret
inc
test
js
pop
xchg
cmp
cli
mov
fistps
xchg
mov
outsb
mov
mov
adc
int
push
xor
push
mov
in
mov
inc
add
test
mov
xchg
imul
in
sbb
cmpsb
lcall
idivb
jmp
pop
jge
or
andl
jbe
sub
loop
xchg
cwtl
jno
mov
dec
fimuls
and
xchg
mov
ficompl
out
mov
push
pop
inc
dec
lds
dec
xchg
shl
and
movsb
push
dec
mov
pop
fsub
xor
call
fdivr
lahf
cli
push
push
fldcw
dec
xchg
push
jo
inc
pop
loop
push
inc
xor
mov
jge
jmp
movb
popa
adc
mov
inc
movhps
jne
and
imul
es
cli
mov
das
mov
rorb
dec
xchg
mov
adc
lahf
inc
sbb
ret
sahf
jmp
hlt
int3
inc
sbb
add
loop
mov
cltd
arpl
mov
test
or
pusha
imul
icebp
jbe
dec
cmp
and
jmp
repz
xor
sub
mov
pop
jne
xor
pop
mov
es
in
sub
adc
lds
dec
inc
push
and
lds
sarb
cmpsb
das
test
nop
data16
dec
mov
cmc
ja
dec
pop
popf
jne
shrl
imulb
mov
es
xor
adc
cmpsb
je
out
pusha
push
jp
lcall
adc
inc
imul
mov
sbb
push
movl
pop
pop
or
fs
aad
es
out
and
mov
dec
pop
adcb
jecxz
xchg
iret
pop
shl
xor
jnp
mov
cmp
adc
dec
ret
jne
xor
jb
xchg
pop
imul
sbb
fcmovbe
dec
mov
dec
mov
mov
jns
jne
sub
jge
pop
and
cltd
mov
cmp
es
lods
jmp
lret
and
gs
jp
cmc
loopne
add
scas
pop
pusha
inc
testl
cmp
xchg
movsl
xchg
or
inc
enter
insb
sbbl
push
popa
iret
add
mov
lret
scas
fcmovnu
xorb
sbb
adc
xor
mov
jns
jo
pop
jbe
add
cmp
cs
adc
out
push
and
sbbb
pop
negl
or
inc
cmp
fwait
popa
dec
js
xchg
dec
les
ret
sbb
fwait
jne
sub
lds
inc
in
aad
pop
push
xchg
leave
jo
and
imul
insb
testl
cmp
fs
push
outsl
test
scas
dec
mov
add
mov
pusha
dec
mov
popa
jmp
into
jmp
sub
fiadds
pop
or
scas
arpl
subb
or
andb
push
inc
mov
repz
dec
mov
add
inc
mov
jne
xor
jge
rcll
gs
or
insl
pop
aaa
sbb
dec
incb
cmp
mov
into
loopne
cld
sub
mov
mov
inc
iret
cwtl
outsl
popf
sbb
cmc
mov
dec
adc
imul
push
fiadds
pop
lea
mov
leave
jle
rorb
pop
cmp
loop
cmp
push
mov
test
nop
xorl
fistps
scas
movsb
jns
jns
mov
scas
push
aas
xchg
and
scas
mov
and
dec
xor
pop
in
dec
sbb
inc
add
and
das
insl
push
push
fdivr
pop
fbld
lahf
in
test
pop
arpl
xor
cmp
bound
fcomi
ja
sbbb
add
jno
insb
hlt
ljmp
inc
loop
mov
cmp
js
sub
mov
rorl
repnz
mov
insb
aaa
lods
jmp
imul
bound
xchg
and
adc
pop
jae
cwtl
shrl
rolb
lahf
add
fmull
mov
push
xchg
push
jmp
jnp
xchg
dec
mov
test
scas
inc
rcrl
ret
test
mov
out
into
out
fnsave
push
enter
out
push
xchg
sbb
jp
dec
fldl
lods
movsb
jb
dec
dec
inc
daa
mov
mulb
mov
cmpsb
dec
lock
or
push
mov
mov
mov
jle
xchg
add
mov
sbb
xor
and
jnp
push
icebp
and
mov
ljmp
insb
add
fisttpl
xor
push
addr16
lds
inc
rol
inc
adc
pop
addr16
xchg
bound
shl
test
outsl
loopne
mov
das
xchg
lret
add
imul
sahf
roll
inc
adc
sub
and
mov
sbb
aam
cltd
movsb
inc
clc
lds
cmpsl
ret
insl
fwait
daa
cmpsl
pop
fidivl
nop
pop
sbb
pop
and
int
imul
test
pop
lods
inc
jmp
mov
orb
js
fstpt
dec
fistps
mov
ss
push
arpl
add
mov
inc
pop
add
outsb
daa
clc
and
push
mov
in
cs
inc
insl
mov
inc
icebp
pop
dec
dec
ret
mov
xor
dec
sarb
sub
shll
out
loope
lret
xor
leave
inc
dec
push
outsl
dec
ret
fcmovnu
pusha
cmp
lahf
cmpsb
in
mov
add
inc
aaa
lahf
les
stos
mov
and
jp
test
or
and
enter
sbb
mov
dec
int3
insb
testb
cwtl
push
mov
pop
ret
sub
fmul
xchg
inc
mov
arpl
jl
mov
fwait
push
xchg
xor
fidivs
xchg
imul
fisubl
inc
dec
xor
fcoms
fistps
hlt
insb
fmuls
hlt
nop
out
fwait
data16
test
imul
fs
pop
inc
mov
fcom
pop
imul
cmp
and
insb
lret
fwait
xor
mov
hlt
icebp
mov
xor
sub
cld
std
fs
aas
xchg
subb
dec
pop
cmp
shrb
lds
pushf
mov
xchg
imulb
inc
xchg
cmp
jge
rolb
std
pop
scas
std
inc
jg
pop
lods
sbb
push
xchg
movsl
inc
das
inc
hlt
movsb
inc
aam
xchg
jno
cmc
push
push
jae
mov
adc
cmp
in
fisttpll
inc
out
pop
out
rcrb
cmp
imul
pusha
lret
mov
ret
mov
pusha
adc
xchg
lods
mov
es
loopne
cld
cmc
fstp
cmp
pushf
sbb
xchg
xchg
icebp
testb
mov
xchg
inc
cmpsb
inc
sub
mov
cli
movsb
imul
or
or
xor
jno
mov
jecxz
pushl
int3
clc
ljmp
pop
lret
ds
mov
mov
xchg
addb
fs
and
pop
sbb
inc
aam
and
jmp
or
in
sarb
fidivrs
dec
loopne
out
mov
push
mov
les
lods
push
outsl
decl
pop
lahf
adc
lods
fnstenv
adc
mov
cmp
sbb
loopne
jae
mov
xchg
movsl
fwait
inc
jne
cmp
mov
imul
js
insb
fidivs
inc
jge
jns
scas
mov
fildll
mov
and
mov
xor
int3
xor
ror
cld
aad
mov
inc
lret
fdiv
mov
push
pop
sbbl
lret
push
in
push
mov
pop
pushf
xor
orb
roll
arpl
hlt
xchg
mov
adc
or
sub
sub
add
and
ja
cmc
cmp
push
dec
and
lahf
insb
movsl
lods
cmp
xchg
inc
data16
xchg
pop
push
or
int3
ret
lcall
nop
rcrb
push
ret
scas
mov
mov
sbb
ss
incb
test
inc
or
push
stc
mov
in
test
or
test
cltd
into
pop
cwtl
jle
or
jecxz
cmpsb
jle
pop
add
addr16
addb
clc
test
xor
push
inc
out
adc
test
adc
adc
mov
sub
addr16
xchg
push
in
clc
shll
lcall
lods
mov
in
xorl
and
out
ret
repz
sbbb
add
push
adc
jmp
ret
scas
pop
xor
sbb
inc
jbe
inc
add
pushf
hlt
sub
repz
push
cld
rclb
jnp
pushf
addr16
mov
pop
in
popa
push
ret
sbb
lcall
lret
shrl
add
mov
push
in
scas
and
pop
andl
pop
subl
inc
xchg
popf
dec
inc
dec
scas
adc
cmp
stc
js
sub
data16
xor
int
mov
pop
fwait
ret
mov
inc
adc
mov
mov
mov
push
lret
adc
clc
inc
rcr
les
adc
test
inc
sub
bswap
test
jb
sub
neg
je
insb
inc
pop
push
adc
adcl
jo
daa
loope
test
dec
sarb
mov
mov
lds
pop
pop
inc
pop
sbb
cmp
xchg
add
ficoms
loopne
mov
push
out
mov
aam
mov
xchg
jb
into
icebp
mov
stc
fidivs
aam
push
mov
mov
sbb
jl
clc
loope
push
inc
lret
push
cmp
mov
jns
mov
cmp
push
dec
test
cs
pop
out
stos
mov
aam
push
xchg
into
lods
mov
mov
pop
sub
fidivl
pop
out
ret
xor
shll
push
add
in
cld
aad
sarb
sti
pop
jns
xchg
test
stc
pop
cmp
outsl
mov
push
cmp
sbb
inc
clc
xor
fsubrl
push
cwtl
inc
cmpsb
xorb
cmp
xor
test
aad
arpl
lret
insb
les
js
lock
jl
jbe
mov
dec
arpl
pop
push
in
sub
scas
jmp
stos
mov
push
jmp
out
and
pop
cli
in
inc
fsubrs
dec
xchg
adc
dec
mov
fldcw
sub
jecxz
dec
lret
cmc
test
sub
mov
shl
pop
xchg
cli
outsl
stc
mov
movsl
xchg
in
pusha
loopne
imul
mov
mov
push
and
cld
icebp
jle
pushf
sub
push
push
inc
fsubrs
mov
divb
dec
sti
dec
movsl
daa
fdivl
pusha
pop
or
into
mov
sub
xchg
pmulhw
loop
out
lahf
pop
aad
add
adc
sub
dec
filds
jmp
jle
xchg
or
repz
pop
fldt
mulb
adc
xor
pop
jmp
add
cs
adc
cmp
mov
adc
out
call
jecxz
loop
aaa
int3
pop
outsl
iret
lds
jge
cmp
pushf
loope
jle
aaa
les
xchg
mov
jb
push
inc
fiadds
js
xor
dec
mov
xor
sbb
fs
in
ja
push
add
data16
mov
mov
add
adc
sbb
icebp
inc
in
and
add
leave
iret
fs
sbb
cmpsb
lret
cmp
out
setnp
sbb
shrb
sub
dec
std
movsb
outsb
les
rcrb
xchg
icebp
pop
in
rolb
pop
lods
in
pop
mov
jg
mov
mov
int
mov
sbb
sbb
mov
lcall
mov
adc
add
sub
jne
cmp
subl
sbb
enter
or
push
cmp
shlb
xor
stc
lret
js
iret
mov
ljmp
xor
dec
push
push
repnz
and
inc
inc
lcall
dec
jmp
std
jge
xchg
push
pop
jne
push
push
push
fmull
rcrb
out
or
sbb
outsl
stos
dec
outsl
int3
and
shrl
shll
jg
imul
loope
movsl
and
fmuls
aaa
xor
cmp
out
xchg
test
or
in
inc
dec
fs
cmc
and
add
cmp
mov
adc
inc
addr16
adc
sub
pusha
and
sub
cs
jl
insl
setae
arpl
push
or
push
sti
push
popa
push
lods
dec
lcall
sarw
add
jnp
shrb
outsl
shlb
mov
mov
call
push
shlb
mov
scas
pop
pop
mov
adc
ss
cmc
ljmp
scas
sub
sub
mov
ror
adc
test
mov
sbb
stos
pop
fcmovnbe
adc
xor
fidivrl
js
or
je
bound
cli
dec
or
pop
xor
cs
rorl
je
std
sbb
inc
scas
mov
aad
shl
xchg
insb
hlt
sarl
jns
into
jae
mov
rolb
dec
cmp
test
sbb
xor
inc
out
cwtl
test
bound
cmp
scas
and
imul
xchg
std
out
loop
adc
iret
test
pop
ficoms
pushl
faddl
gs
adc
inc
pop
pushf
jg
and
mov
cmp
test
push
loopne
adc
outsb
je
xor
mov
mov
push
ret
sbb
sub
inc
aaa
cltd
andb
cltd
mov
test
mov
mov
pop
popf
repz
pop
xchg
popa
rorl
subb
push
ret
lods
stos
loop
mov
sub
repz
and
das
sub
add
dec
test
push
mov
cld
fcoms
mov
fisubl
push
sbb
imul
jnp
add
jl
cs
pushf
push
sarb
sub
inc
dec
jne
sbbb
mov
out
data16
mov
in
je
mov
rorl
popf
test
xor
sbb
mov
shrb
fidivrl
jnp
orb
xor
and
mov
je
fimuls
daa
lods
adc
ja
jb
stos
sub
stos
dec
and
ja
or
fwait
or
mov
mov
add
mov
or
lret
cmc
mov
aam
ss
dec
xchg
addr16
push
incb
adc
jle
adc
adc
sbb
xor
ss
jmp
stos
je
stos
loop
dec
adc
push
in
mov
xchg
mov
xor
fs
test
fisttpl
sahf
jnp
aam
or
push
adcb
mov
movsl
and
sti
pop
inc
out
mov
int3
and
addl
cmpsb
jecxz
scas
xchg
push
xor
movsb
xchg
sti
xor
jg
xor
push
in
pop
outsb
insl
ljmp
in
andl
into
adc
pop
add
mov
pop
adc
inc
pusha
in
inc
aam
pop
hlt
leave
lock
and
ret
fisubs
popa
sub
lea
ret
ds
cmp
lds
xchg
cmp
jl
ljmp
imul
popf
add
daa
and
mov
inc
mov
sbb
mov
add
fcoml
adc
nop
mov
movsl
mov
mov
and
bound
imul
sbb
xor
adc
push
hlt
mov
je
in
lret
test
jp
add
jmp
xchg
mov
outsl
test
iret
add
mov
add
pop
rcll
dec
jae
popa
popa
cld
sbb
adc
push
cs
push
inc
push
aaa
mov
cmp
fadds
loop
fcoml
xor
mov
xor
out
add
and
push
and
leave
mov
pop
fldln2
add
jl
scas
jp
mov
mov
cmpl
imul
das
sub
and
shrl
adc
add
cmp
adc
loopne
pop
dec
add
int
cmpsb
fsubrs
or
lods
and
lcall
fbld
xor
mov
iret
je
fwait
add
cmc
push
pop
and
mov
fwait
adc
mov
pop
fcmovu
rorl
punpcklwd
mov
mov
rcrb
pop
sti
icebp
scas
push
pop
push
dec
sarl
push
sub
adc
mul
xchg
clc
lret
xchg
dec
and
dec
shlb
adc
xchg
xlat
in
test
dec
lock
xor
ss
xlat
fs
mov
punpcklwd
test
dec
inc
out
adc
in
push
add
jno
mov
fldl
lcall
sub
movsl
shl
xorl
sarb
inc
jl
mov
and
call
imul
enter
xor
out
pop
enter
loop
repnz
popf
cwtl
mov
loop
dec
clc
mov
mov
into
xchg
out
iret
push
mov
and
sub
jo
push
scas
in
repz
and
dec
jmp
sub
test
jne
jno
pop
ret
mov
or
adc
int
or
rolb
jb
xor
mov
roll
dec
xchg
mov
into
ret
shlb
pop
les
and
ss
xlat
mov
outsb
daa
call
jbe
dec
addr16
xor
push
adc
jmp
cmp
aas
ret
push
adc
lahf
sti
aaa
fistps
push
mov
sub
jg
daa
es
xor
dec
clc
pop
jbe
lods
sub
and
out
or
fisubs
mov
test
push
out
pop
cli
sub
push
iret
aas
loopne
jge
cwtl
out
outsl
inc
movsb
and
sahf
pop
mov
add
popl
pop
and
xor
xor
sub
cwtl
lret
ds
pop
aas
inc
cmp
xlat
jnp
cmpsl
sbb
mov
lods
fcoms
jbe
outsl
or
add
xchg
pop
cwtl
mov
sbb
ret
int
mov
dec
out
test
stc
xor
aas
out
mov
sub
out
sub
cmc
in
mov
scas
xor
loopne
dec
idiv
aam
xor
mov
push
mov
xchg
repnz
aam
mov
push
fstpt
mov
adcb
sbb
jl
jae
mov
out
xor
aas
or
jl
xchg
push
mov
and
mov
mov
sub
jp
pushw
jb
leave
sbb
and
dec
inc
imul
inc
pop
mov
or
xchg
mov
xchg
fcoml
mov
sahf
cmp
and
nop
sbb
pop
or
fcoml
sub
mov
inc
pop
mov
out
fcoml
fucomp
xlat
pop
paddb
pop
shlb
cmc
push
cmpsb
adc
cmpsl
enter
inc
aas
mov
lahf
jg
movsb
es
push
and
lock
jbe
leave
pop
cld
jns
mov
pop
in
jbe,pn
mov
cld
sub
and
mov
stos
mov
pusha
adc
cmp
mov
arpl
scas
jne
sub
mov
ret
adcl
fst
mov
push
push
or
lds
imul
mov
jle
icebp
fs
dec
add
mov
xchg
sbb
mov
sbb
stc
mov
or
pusha
aaa
in
vmread
push
lds
les
loope
andl
push
filds
aas
ret
cmp
imul
cs
aaa
std
xchg
mov
mov
push
jecxz
cli
xor
scas
lods
or
das
pop
cmpb
cmpsb
sub
jno
jg
mov
std
stc
push
lods
push
repnz
scas
xor
aam
pop
sbb
aas
sbb
push
or
imul
sub
mov
insb
pop
and
jle
add
repnz
call
gs
test
inc
mov
fistpl
outsl
cltd
inc
sbb
out
inc
test
loope
sahf
mov
adc
test
addr16
lods
xor
mov
dec
push
push
loop
add
lods
sbb
sub
lods
mov
xchg
sbb
aam
jbe
ja
faddl
pop
xor
js
mov
mov
gs
inc
pop
push
cld
cmc
popa
shrb
cmpsl
sarb
aaa
inc
in
lds
mov
sbb
mov
pop
pop
aam
dec
inc
cmp
ret
mov
pop
jo
cmp
push
sarb
outsl
out
sub
lods
and
push
movsb
jmp
test
inc
je
es
xor
bound
ss
jge
or
and
and
sub
int3
xor
lret
mov
in
push
movsl
and
jo
sarl
xchg
gs
outsl
iret
hlt
jb
mov
cs
stc
test
in
adc
mov
push
xor
fcom
add
jl
xchg
or
out
popa
sub
cmpsl
fldt
stc
sti
in
data16
and
mov
sbb
jl
mov
dec
test
inc
inc
dec
push
in
ret
ret
inc
jecxz
push
push
leave
push
or
xor
mov
lahf
push
mov
nop
bound
mov
pushf
ljmp
aas
ret
shlb
imul
daa
call
cmp
inc
dec
and
ret
out
fwait
xor
andb
test
aam
xor
sti
mov
sbb
sub
int3
jge
dec
lods
cmpsl
loope
sub
mov
je
xor
jmp
push
adc
cmc
lea
pop
sbb
out
and
mov
sub
and
std
inc
ljmp
popa
xor
fwait
xor
out
ja
cmc
adc
and
pop
scas
pop
pop
pushf
sbb
inc
add
pop
mov
xor
pop
xchg
shl
jecxz
add
mov
or
stos
adc
push
test
lret
cmp
imul
sbb
or
cltd
jmp
insl
scas
adc
or
dec
and
sub
test
or
ja
imul
mov
es
adc
pusha
dec
cmp
sub
notl
mov
mov
jle
sbb
mov
jg
loope
lods
gs
inc
outsl
mov
je
test
repz
and
push
jmp
loope
mov
std
in
xor
das
pop
cltd
mov
call
jg
xorb
ret
test
xor
add
mov
xchg
out
nop
xchg
lahf
mov
loop
das
sbb
test
inc
push
mov
sub
ljmp
ret
mov
and
fldcw
cmpsb
and
scas
nop
mov
aam
adc
adc
ja
dec
jmp
jmp
inc
shlb
int3
mov
adc
jg
cmpsl
push
xor
mov
lahf
aaa
sahf
cmp
outsl
mov
fcoms
dec
sarb
out
xchg
shl
aad
cmpsl
fs
lahf
es
adc
xor
arpl
jecxz
ds
inc
mov
ds
push
divl
jns
repz
or
pop
ret
cmc
inc
and
enter
test
inc
lock
pop
mov
fnsave
in
int
inc
in
xchg
mov
stos
cmc
rcr
ret
ja
push
push
sbb
lock
sahf
lret
bound
inc
fnsave
mov
mov
or
jmp
push
mov
push
popf
inc
or
roll
stc
sbb
and
xchg
mov
inc
adc
stos
dec
cmpb
add
xchg
or
mov
push
imul
inc
push
adc
cmpsl
in
cld
and
and
mov
movsb
and
sub
decl
push
lods
mov
insb
ds
add
sub
or
add
int
lock
jge
es
out
xor
xor
pusha
xchg
ljmp
popf
lods
and
xchg
add
inc
mov
jno
subb
mov
xor
aam
mov
je
push
adc
jo
and
fwait
jb
sub
sub
mov
or
fistl
push
enter
add
or
mov
dec
lret
sbb
or
stc
lods
adc
jecxz
jae
sub
pushf
out
adc
lods
sbb
in
mov
mov
and
or
js
push
ja
outsb
xor
cmp
pop
js
daa
lods
sbb
imul
add
test
lods
inc
iret
pop
scas
push
js
movsl
mov
cmp
dec
or
push
mov
ficoml
notb
mov
pop
jle
mov
sub
mov
sub
lret
scas
in
mov
jle
fbld
mov
ss
scas
imul
jae
adc
cmp
sahf
adc
insb
test
lods
ljmp
cld
shlb
inc
xchg
dec
sbb
sbb
imul
xchg
pushf
jecxz
bound
loope
hlt
xchg
mov
and
std
push
and
decl
or
clc
scas
ss
and
insb
movswl
jns
popf
mov
popa
dec
sub
dec
or
mov
mov
in
jg
mov
mov
ds
es
insl
dec
adc
mov
or
dec
test
mov
gs
fdiv
cmp
sub
xor
cmp
inc
pop
cmpsb
lret
test
dec
ret
lret
mov
or
adc
out
sub
fs
psubq
sti
test
jecxz
mov
mov
in
and
gs
mov
rcrb
pop
pop
mov
outsl
xor
push
sbb
in
adc
leave
out
stos
sbb
ja
repz
sbb
in
aaa
mov
pop
outsl
mov
enter
push
aad
pop
cmp
mov
sarl
add
dec
mov
sbbb
insl
lea
pop
cmp
push
pop
rep
xorl
dec
stos
test
out
inc
andl
cmpsl
xor
subb
mov
nop
jge
pop
adc
or
shrl
mov
out
movsb
mov
xor
add
lret
mov
mulb
out
inc
and
lock
cld
aam
pop
out
mov
repz
adc
mov
mov
je
pop
sub
mov
mov
sarb
ss
cld
mov
cli
xchg
ja
or
daa
mov
outsb
bnd
shl
lret
imul
cmp
call
imul
adc
xchg
out
cmpsb
xor
cmpsb
gs
jno
mov
xor
scas
and
mov
test
movsl
jg
lea
repz
ret
push
cmp
mov
int3
paddb
jmp
fnstenv
sbb
mov
aas
cmp
ds
aam
cmp
jecxz
flds
insl
data16
jle
scas
dec
repz
or
out
jbe
roll
push
popf
push
cli
in
sbb
mov
sub
fisubrs
mov
cmp
int
adc
je
dec
insb
popf
in
jbe
inc
or
and
fdivrl
sbb
lea
adc
pop
in
in
cld
enter
sbb
sub
and
dec
mov
adc
fcomps
xchg
sub
loopne
dec
shl
jg
pop
jl
imul
lret
andb
dec
cmpb
sbb
shll
addr16
sbb
pop
push
inc
stos
jle
mov
aam
jb
mulb
cmpsb
test
call
mov
cltd
jmp
mov
sahf
cmpsb
ja
mov
gs
addr16
sbb
push
popf
jg
inc
scas
into
sbb
add
sbb
sahf
pop
push
inc
mov
inc
or
mov
call
xor
insl
mov
hlt
xchg
in
or
inc
push
icebp
jo
fdivrl
mulb
out
jmp
mov
in
std
into
add
adc
mov
xchg
das
adc
fwait
movsb
push
fcomps
xchg
mov
and
push
sbb
nop
xchg
in
jnp
add
outsl
mov
data16
and
aad
mov
sub
cltd
icebp
mov
adc
add
cmpsb
xchg
cmp
jl
stos
int3
psubusb
test
lock
jge
or
mov
lret
insl
jge
popf
lahf
xchg
lret
xor
rcl
xchg
jns
sbb
out
push
xor
sti
lock
and
adc
js
add
jmp
push
ljmp
sub
lahf
fwait
imul
xchg
push
sbb
ret
mov
lahf
fidivrs
stos
dec
test
cmpsl
mov
or
dec
mulb
mov
mov
aam
mov
imul
sub
arpl
sub
dec
stos
sbb
jbe
push
call
sbb
jmp
push
fcom
cltd
js
mov
orb
add
rclb
mov
das
ljmp
dec
mov
jecxz
fcomps
inc
movsb
dec
cwtl
push
inc
fwait
and
lcall
push
push
loope
adc
xor
fidivs
mov
sbb
add
push
lods
inc
adc
dec
jecxz
movsb
gs
repnz
lret
mov
repz
sti
push
pop
mov
decl
cmp
outsb
imul
dec
roll
push
inc
and
jge
mov
aaa
push
jne
pop
inc
out
stos
aaa
cmp
jecxz
adc
fld1
idivl
add
jle
pop
mulb
mov
ds
or
dec
addb
push
popf
rcrb
lcall
dec
movsl
sub
pop
cltd
adc
ret
ljmp
mov
stc
jb
sbb
mov
mov
and
bound
jg
ficompl
cmp
dec
aas
xor
sbb
cmp
stos
dec
cmp
cltd
loope
cmp
xchg
xor
pop
int3
testl
testb
xchg
test
push
jo
adc
jnp
mov
or
mov
aas
call
in
mov
pop
add
test
push
std
les
add
out
pop
jmp
cld
xor
test
iret
pop
sbb
test
jl
cmp
popf
xchg
fisttpll
mov
push
sbb
out
pop
inc
push
cmp
call
xor
jmp
jg
aad
pop
xchg
mov
fimuls
and
xchg
add
add
js
popf
push
or
cmp
push
cld
inc
aad
jae
leave
mov
sahf
leave
in
mov
int
or
and
add
stc
fdivrs
adc
dec
cmp
inc
ljmp
aaa
mov
xor
dec
pushf
sbb
repz
je
inc
imul
stos
out
jae
sbb
fldt
xor
push
shlb
mov
rorl
mov
mov
call
and
test
repz
mov
sbb
ja
dec
pop
add
dec
fisubs
in
push
mov
or
shrl
jno
pop
xchg
in
mov
lds
ljmp
pop
mov
insb
pop
dec
cmp
xchg
andl
inc
push
ss
xchg
jp
mov
call
adc
add
xchg
pop
in
int
push
sub
sbb
fstpl
movsl
cmp
ss
pop
push
pop
pop
pusha
jb
dec
fcmovnu
adc
inc
ds
mov
stos
out
mov
mov
mov
mov
inc
fldenv
lods
mov
scas
stc
lcall
pop
jae
dec
sub
hlt
popa
mov
pop
data16
and
imul
cmc
ss
sub
pop
jo
ja
mov
icebp
mov
imul
xchg
and
cmp
and
pop
pop
push
fsubrs
fdivr
nop
out
dec
xor
ljmp
add
or
in
fisubrl
and
push
dec
add
mov
jl
xlat
fdiv
aad
daa
cmp
cmpsl
cld
push
pop
ljmp
out
arpl
loope
inc
divl
ljmp
sbb
adc
mov
jecxz
pop
jge
in
inc
jo
lea
ret
cmp
ficoml
push
stos
add
mov
lahf
xchg
test
loopne
jno
or
jo
dec
arpl
cmp
dec
loop
movsb
std
imul
add
jge
and
lcall
sarl
lods
xor
icebp
sbb
test
xchg
xorb
leave
jl
push
xchg
lcall
add
test
push
movb
mov
and
cmp
push
sub
mov
insl
jae
xor
fstl
test
push
mov
mov
fwait
mov
adc
jno
mov
xchg
mov
ja
mov
mov
sahf
jns
jns
xor
ror
les
mov
lods
jmp
mov
push
fs
insl
xor
and
les
ljmp
sti
call
scas
jnp
adc
inc
scas
push
jge
cli
mov
arpl
add
xchg
cmpsb
call
movsl
pop
imul
daa
inc
push
in
call
dec
mov
add
xorl
pusha
fucomp
mulb
add
or
lds
mov
add
pop
cmp
push
push
outsb
fnsave
jle
das
cli
and
or
xlat
jb
mov
xlat
xchg
cmp
push
pop
or
subl
nop
cmp
aaa
sub
adcb
fsts
mov
mov
es
pop
xchg
shrb
and
bnd
jnp
inc
ret
or
fcompl
das
xchg
es
pop
jmp
aam
xor
adc
cwtl
sub
inc
jns
nop
dec
adc
mov
xor
or
cltd
lcall
lret
shr
fs
adc
cwtl
cli
push
insl
jl
jl
push
shlb
call
pop
sbb
xor
es
add
add
ja
xorw
aaa
cld
jae
rcrl
xchg
sbb
movsl
lds
xlat
cltd
clc
pop
mov
add
xchg
jle
mov
pop
pop
shlb
and
aaa
mov
add
mov
push
popa
xor
pop
movsl
xlat
push
mov
sbb
or
mov
mov
xchg
data16
push
cmp
fiaddl
or
push
mov
ja
in
sbb
push
cld
dec
pop
adc
lahf
inc
cs
jecxz
push
and
inc
aaa
lret
and
jl
lea
pop
in
aad
jmp
test
addr16
xor
cmp
ficompl
lds
call
fdivrp
ss
sahf
out
fisttpl
jbe
scas
lcall
sub
mov
bound
cmp
andl
adc
js
jns
stc
cld
nop
lods
test
and
mov
jnp
sub
mov
pushf
cwtl
pop
cmp
push
clc
xchg
mov
sub
push
push
mov
jl
jg
inc
or
sbb
out
push
pop
cwtl
testb
jge
lock
pop
inc
jle
jb
scas
out
mov
ret
insl
out
cltd
mov
ds
mov
out
gs
cwtl
dec
icebp
mov
cmp
test
inc
inc
fimuls
sub
shlb
out
add
gs
jo
fldl
mov
mov
jo
jb
repz
into
inc
jmp
dec
add
in
movsl
sbbb
fistps
cli
pushl
or
xor
and
imul
inc
xor
pop
inc
loope
dec
icebp
jnp
xchg
cmp
xchg
xchg
mov
mov
dec
mov
std
addl
mov
adc
push
cmpsl
in
hlt
cmp
out
js
ret
xchg
ljmp
dec
xchg
fucomip
adc
mov
imul
fcmovnb
push
xor
or
std
loopne
jns
lods
repz
sti
lds
addr16
xlat
and
inc
mov
aad
popf
movsl
std
jbe
dec
sub
repnz
dec
fs
mov
jge
mov
cmpsl
push
test
sub
mov
jle
test
scas
fnstsw
pop
cli
adc
xchg
into
mov
movsl
jb
push
addr16
loope
sti
or
xchg
fucom
mov
add
sbb
cld
sahf
out
out
mov
movsb
add
pop
aas
cmpsb
dec
lcall
mov
dec
sbb
fldlg2
xor
or
sbb
rorl
nop
jp
pop
hlt
push
inc
sti
add
add
or
dec
int3
lcall
xchg
lahf
pop
dec
adc
mov
insl
fs
fisubl
mov
push
jno
pcmpeqw
out
cmpsl
or
mov
sti
test
cmp
mov
jo
dec
mov
cmpl
inc
bound
lcall
and
pop
stos
xchg
dec
das
xchg
dec
jnp
into
sti
repnz
ret
out
imul
jb
or
mov
ds
xchg
es
nop
out
outsb
nop
pop
ljmp
sbb
xchg
cld
jne
and
pop
jl
push
push
xor
inc
dec
sub
hlt
mov
ljmp
addr16
mov
or
cmc
sub
dec
iret
cmpb
je
mov
adc
cmp
sbb
into
mov
sub
inc
mov
repz
es
inc
jbe
xchg
pushf
pop
int3
inc
sti
pushf
repz
or
pop
sbb
cmp
mov
sbb
cmp
jb
or
mov
in
mov
inc
xchg
sahf
push
xchg
fistl
fs
lds
inc
push
adc
mov
pop
cmpsb
jno
int
inc
adc
push
imul
stc
cmpsb
or
pusha
cmc
imul
ss
adc
jae
adc
sub
shrl
cmp
sbb
scas
ret
jmp
xor
mov
loopne
les
jbe
fcmovnb
andnpd
inc
loop
cmp
ss
lret
test
xchg
jae
clc
mov
je
stos
push
push
test
fwait
jnp
pop
adc
jae
cli
xchg
and
push
iret
mov
scas
and
xor
rcl
mov
push
shlb
loope
fs
ljmp
popf
or
add
inc
push
xchg
cmp
in
ror
inc
cmp
loop
pop
stos
adc
cmc
iret
mov
int3
scas
leave
out
scas
cmovae
push
cli
les
push
int3
push
cmp
jnp
fldenv
lahf
icebp
repnz
xor
ss
inc
xor
add
sub
adcb
or
xchg
push
imul
sub
cmpsl
std
mov
add
hlt
push
mov
rcr
bound
mov
xlat
filds
test
cs
pop
or
mov
cs
mov
mov
xor
nop
xlat
loop
push
fsubrl
xchg
jb
cmc
or
pmaxsw
out
adc
hlt
dec
mov
sub
bound
les
scas
cmc
fdiv
xchg
jno
imul
int
jmp
jp
movsb
inc
or
cld
call
lret
add
pusha
xchg
sbb
add
xor
int3
lea
and
andb
sbb
pop
enter
in
sub
lea
add
push
push
pop
jne
or
sti
scas
negl
or
xchg
lods
xchg
in
xor
xor
cli
jo
dec
adc
test
std
mov
dec
cmpsb
xchg
push
sub
test
gs
rorl
fidivs
je
mov
imul
sub
jbe
movsb
loop
xor
roll
and
and
loope
jl
fidivrs
inc
jecxz
repnz
sbbb
add
aas
mov
fsub
popa
in
jg
jo
push
adc
mov
inc
and
div
mov
cli
or
cmc
xor
ja
sub
add
call
sub
pop
popf
mov
icebp
out
add
add
add
outsb
xchg
into
out
decb
fisttpl
cmp
es
fdivl
dec
fisubl
int3
scas
xchg
pop
cltd
jb
sub
inc
sarl
pop
xchg
insb
das
sbb
xor
inc
push
int
fsubs
inc
mov
es
jno
or
outsb
jl
outsl
dec
push
outsb
ds
mov
orps
push
popl
cmp
sub
mov
push
sub
leave
pop
into
movsb
popf
dec
shlb
dec
addr16
stos
xchg
mov
mov
loopne
out
es
pusha
jae
mov
lret
xor
shll
icebp
inc
fs
and
outsl
test
imul
cmp
fstl
sbb
xor
daa
and
loop
xlat
pop
addr16
jle
adc
xchg
fidivl
lock
cmp
mov
fnstcw
je
mov
push
dec
test
insb
jns
and
add
lret
xor
jns
xchg
sti
mov
fnstenv
popf
arpl
mov
fidivrl
rcll
xchg
imul
pop
jae
cmp
lods
je
lss
hlt
mov
push
or
and
cld
inc
pop
or
inc
inc
pop
test
roll
mov
enter
pop
mov
push
addl
mov
ljmp
js
sub
popf
into
xchg
movsl
jmp
test
ljmp
sarl
mov
stos
inc
cmp
lret
shr
movsl
xorps
iret
dec
arpl
fsubrl
sarl
fdivrs
add
hlt
cmc
std
jo
xchg
dec
loopne
push
in
pop
xchg
imul
push
hlt
daa
pop
mov
sbb
shl
aad
sub
jae
sub
and
mov
cmpsb
out
dec
xor
cltd
icebp
mov
add
mov
dec
cltd
xlat
inc
test
js
cmpsl
pop
inc
jns
lods
outsb
insb
and
out
fildll
xchg
out
addr16
xor
lock
cmpsl
pop
mov
cmp
inc
xlat
cmc
fadd
mov
and
ror
xlat
jno
mov
adc
mov
int
add
xor
jns
fs
mov
push
cmp
cs
jmp
pop
jae
mov
jno
adc
cmp
or
test
xor
ret
lahf
jae
test
imul
sub
lods
out
xchg
pop
das
sub
dec
stos
repnz
ja
popf
movsl
loope
add
pop
cs
jbe
notb
iret
mov
iret
jl
fmulp
jb
jae
mov
inc
cld
mov
icebp
mov
sti
imul
sub
fcoms
or
mov
pop
xor
lahf
add
sub
push
gs
jmp
dec
pop
mov
dec
sbb
jmp
or
pop
aaa
call
movsb
or
adc
repnz
lea
hlt
sub
jno
test
push
push
add
xchg
xor
nop
pusha
mov
mov
in
lret
in
lock
cwtl
adc
add
adc
js
roll
inc
loopne
je
push
pop
outsb
lods
jl
mov
rolb
call
pop
movsl
cmp
mov
scas
mov
mov
mov
add
xchg
aaa
push
jbe
sub
ret
sbb
cmp
xchg
les
ljmp
xchg
push
adc
lds
sbb
imul
mov
fstl
jge
in
das
mov
dec
push
lds
test
sub
sbb
in
mov
jge
and
shlb
xor
add
push
pop
sub
sub
ret
adc
ja
and
mov
pop
mov
ret
lahf
sti
loope
ja
add
jo
mov
xor
sbb
cwtl
fst
mov
and
dec
cli
lret
mov
xchg
xor
pop
gs
jge
and
or
sarb
movsl
test
lret
sbb
mov
adc
inc
inc
mov
mov
sub
mov
outsb
or
add
jno
in
outsb
jns
sbb
fwait
xchg
xchg
jne
or
fcompl
sub
push
daa
or
cmpsl
dec
inc
data16
push
jne
es
xchg
into
xor
mov
cmpsl
rcrb
hlt
mov
jae
lahf
lods
shrl
outsl
es
jp
add
je
rorb
inc
mov
xchg
fdivrs
inc
push
sub
xchg
nop
mov
nop
jl
mov
push
mov
out
in
fildl
mov
or
nop
lcall
dec
mov
negl
ret
jb
jl
into
stos
mov
out
cs
lret
paddusb
sub
and
rorb
js
lret
mov
scas
pop
push
mov
cmp
push
outsb
loop
sub
mov
xchg
cmpsb
movd
cmpsl
cmpsb
adc
xchg
bound
cwtl
sahf
push
xlat
xchg
lahf
repnz
or
xchg
cmc
cmpl
xor
ret
lods
jp
and
inc
push
mov
scas
call
arpl
adc
lods
loope
pop
and
sbb
sub
mov
cmp
in
ja
adc
mov
jns
cwtl
jbe
jmp
adc
jmp
daa
cmp
push
cmpsl
je
add
cmp
pop
dec
data16
in
das
sbb
stc
jecxz
xor
ljmp
inc
data16
jp
adc
jl
mov
incl
rcl
xor
push
sti
sbb
addr16
jbe
sbb
cmp
sbb
fdivr
cmp
jecxz
pop
pop
in
je
sahf
leave
xchg
push
iret
enter
loope
and
pop
fiaddl
mov
inc
lods
sub
mov
inc
adc
cmp
int3
sub
xor
sub
stc
rorl
cmp
ljmp
inc
iret
sbb
popf
xor
cmp
dec
rcl
push
inc
add
push
arpl
lods
pop
in
xor
jp
mov
inc
sbb
mov
pushf
xor
leave
lods
xchg
out
xor
jle
inc
outsl
arpl
pop
push
daa
pop
cmpsl
pop
pop
cmp
sahf
sub
and
call
pop
sbb
int3
jbe
push
mov
sbb
mov
aaa
loop
add
sbb
mov
cwtl
ror
mov
mov
nop
adc
inc
add
andb
outsb
pop
or
fdivs
jns
jge
mov
cmpsl
or
loope
cmc
cmpsb
push
add
cmp
and
ret
and
jp
into
pop
fbld
pop
jecxz
cld
xchg
test
int3
adc
dec
jl
test
push
idivb
dec
test
ljmp
dec
lahf
jle
rclb
push
repz
sbb
clc
mov
push
sub
mov
divb
pop
jl
mov
or
daa
xor
fiaddl
sti
imul
mov
sti
dec
arpl
rcll
or
pop
cli
data16
hlt
icebp
sbb
outsl
pop
jp
sub
into
push
loope
fisttpl
lds
in
mov
scas
push
pop
cmp
mov
mov
sub
repnz
pop
sahf
repnz
movsb
aam
lcall
outsl
loop
rol
xchg
or
arpl
pop
test
pop
data16
fwait
test
adc
pop
movb
and
add
adc
fs
push
dec
sti
xchg
lods
in
mov
sbb
loopne
loopne
subb
adc
sbb
cmp
popa
test
dec
cs
lahf
inc
test
ret
jbe
enter
xorl
fsubrs
sub
stos
jmp
pushf
jbe
fimull
push
aaa
cmpl
jne
dec
mov
and
push
add
xor
xchg
inc
fists
loop
outsl
mov
push
imul
jnp
lcall
mov
xor
movsb
and
lds
sti
add
add
sub
mov
sbb
ljmp
leave
shlb
lds
push
xlat
dec
std
lcall
fldl
pop
mov
movq
ss
mov
mov
test
dec
push
cmpb
inc
jae
mov
and
xor
or
pop
mov
xor
mov
mov
shll
cmpsl
clc
sahf
es
mov
pop
pop
cmp
xchg
addr16
xor
outsb
jl
dec
fstl
test
xlat
mov
in
lock
fistl
lahf
pop
call
mov
mov
jns
pop
sub
ret
xor
mov
sub
dec
xor
divb
dec
push
inc
sub
add
sub
push
shlb
cmpsb
pop
lcall
ljmp
cltd
fsubrs
jle
aad
imul
push
pop
sbb
push
push
aaa
jns
ss
sub
imul
adc
or
xchg
mov
jo
aam
adc
aad
adc
push
mov
mov
cmpsl
inc
adc
mov
mov
ret
mov
sbb
stos
mov
ljmp
jg
cmp
mov
xor
mov
aad
adc
sar
shr
sub
das
out
bound
xlat
jle
fs
jbe
lret
and
test
outsb
mov
fdivrs
lds
xchg
in
mov
dec
js
int
int
inc
mov
jns
pop
xor
jmp
repnz
lret
push
lods
insl
cmp
jo
imull
pop
lret
cmp
sub
adc
xchg
int
adc
mov
cli
dec
outsb
cmpsl
and
inc
jno
mov
push
sbb
js
cmp
cmp
sahf
rcll
push
pop
xchg
cmpl
inc
popa
test
stos
imul
mov
mov
orb
aad
pusha
ret
inc
sub
cmp
and
ret
addr16
aaa
mov
mov
mov
and
nop
inc
mov
inc
in
adc
xchg
jge
cli
lea
test
push
les
sbb
mov
fsubrl
loopne
fcomp
fs
sbb
sbb
aam
and
inc
mov
adc
mov
lea
sbb
mov
stos
imul
inc
inc
push
stc
xchg
ja
pop
ss
sub
sbb
aas
and
pop
out
aaa
cmp
mov
xchg
data16
mov
imul
ss
mov
push
sub
inc
rolb
outsb
adc
leave
or
jae
js
addl
inc
imul
icebp
movsb
rcl
cmp
fbstp
or
lret
mov
sub
jmp
pop
mov
sub
movsb
outsl
jl
pusha
jge
cltd
inc
mov
mov
notb
sbb
sbb
jge
xchg
in
es
ja
mov
xchg
data16
or
outsl
mov
sub
sub
outsb
mov
stc
mov
aad
jecxz
fisttps
rcll
cmpsl
addr16
sub
out
insb
sbb
push
bound
fistl
mov
push
xchg
sahf
push
mov
mov
jl
sub
push
loop
popa
sbb
jge
js
sbb
inc
xor
sbb
dec
fimull
and
sub
in
jg
jae
mov
jns
shlb
lcall
xchg
icebp
mulb
jle
mov
jl,pn
rcrb
imul
mov
inc
roll
pusha
pusha
rcr
pop
mov
jle
or
push
mov
or
xor
cmp
jl
push
mov
in
aaa
test
cmp
int3
rcl
mov
test
xchg
and
adc
jle
int
mov
stos
pop
cs
add
addr16
jmp
mov
add
xchg
mov
inc
ss
lods
mov
rcrl
loopne
mov
and
push
sbb
add
ret
push
xchg
inc
scas
andb
xlat
fs
mul
mov
jecxz
mov
in
and
xor
imul
xchg
push
data16
imul
push
cmp
inc
ds
inc
sarl
mov
lret
cli
mov
push
cmp
enter
or
xor
adc
clc
cli
aam
movsb
in
pop
sarb
outsb
xor
imul
das
mov
cmpsb
adc
or
ret
push
aas
out
imul
adc
fstpl
imul
cmp
stc
into
pusha
or
sbb
stc
fidivl
mov
rcrb
hlt
mov
sti
nop
or
mov
scas
enter
aaa
xchg
dec
in
mov
ficoml
jecxz
mov
clc
lahf
pop
lock
cmp
aam
ret
call
rcrl
or
mov
testl
movsb
shrb
xchg
icebp
in
or
xacquire
aas
add
jle
lea
repz
fidivl
into
lret
test
cs
cmp
jno
add
rolb
bound
and
mov
addb
repz
pop
jp
pop
nop
lea
mov
rorl
mov
lds
repnz
cmp
in
cs
push
or
aad
sub
jae
loope
push
sbb
scas
jo
or
insb
mov
in
faddl
pop
sbb
ja
int3
add
mov
xchg
testb
push
daa
call
in
fnstcw
inc
pop
adcl
push
push
sbb
xchg
outsb
daa
icebp
xchg
or
inc
lea
cli
xchg
stos
lods
fcoml
push
stos
mov
adc
xchg
nop
mov
mov
add
lods
std
adc
cmp
dec
mov
data16
inc
leave
in
xor
popa
dec
mov
int
subl
lods
xchg
cmp
fisubrs
xor
inc
cmp
std
repnz
movsb
jo
sub
sarb
mov
add
shl
jmp
loope
inc
aas
and
cmc
in
inc
sahf
dec
sbb
adc
jbe
pop
movsb
aad
jp
fisubrl
fsubp
jg
sub
sahf
in
add
in
es
popa
fisubs
fisubrs
jnp
pushf
test
jle
mov
pop
hlt
inc
in
enter
push
cmp
add
xor
insl
sub
inc
je
icebp
push
pop
cmc
jae
xor
pop
xor
enter
ljmp
hlt
mov
stos
cmp
push
jns
push
xor
call
mov
lods
inc
lock
jo
adc
adc
and
or
leave
dec
inc
fimull
popf
jmp
xor
mov
push
and
insb
jbe
loop
and
enter
mov
xchg
scas
fwait
pop
sbb
adc
testl
push
jecxz
add
imul
fistpll
int3
adc
push
call
push
xor
mov
sar
add
roll
cmpsb
mov
mov
hlt
mov
inc
fwait
mov
out
xchg
mov
adc
sbb
ret
aam
or
adc
mov
rcrb
dec
sub
orb
or
xchg
movsl
cmp
or
aad
cmpsl
sbb
stos
rcrb
leave
sarb
ficompl
mov
in
aaa
lret
inc
pop
rclb
pop
add
mov
ss
gs
fiadds
out
ss
test
mov
cs
lret
and
cmp
lcall
or
imull
inc
call
mov
lcall
arpl
sbb
add
push
into
js
xor
xor
mov
in
dec
ret
jne
sahf
xchg
fimull
test
inc
xchg
ror
stos
mov
out
mul
stc
into
imul
lods
in
xor
fwait
mov
pop
cmp
or
sub
ja
pop
shlb
xchg
mov
movsl
cmp
out
xlat
xor
xchg
sbb
jb
inc
pop
xor
fdivrs
mov
rorb
into
ret
leave
sbb
push
loopne
stc
test
cmp
add
dec
mov
lea
sub
fwait
sahf
or
pop
dec
in
mov
push
pop
shrb
mov
out
push
and
sti
popf
jns
pusha
inc
mov
das
test
shll
add
jecxz
and
rol
push
cmpsl
andb
mov
cmpsl
push
add
out
fisubs
daa
cmc
xchg
mov
das
nop
fdivl
xchg
fadds
pushf
fwait
bound
mov
in
jmp
sub
push
pop
sub
hlt
fmuls
push
mov
inc
mov
push
pop
clc
out
mov
popf
mov
dec
fimull
xchg
in
mulb
and
inc
loop
iret
xor
shlb
js
cwtl
jp
pop
dec
mov
jge
out
pop
jbe
cld
subb
xor
cmp
aaa
mov
dec
push
cmp
imull
adc
scas
jmp
push
out
js
and
pushf
notb
jnp
ficomps
sub
sbbl
push
test
enter
std
push
pop
fs
push
mov
lods
inc
jnp
add
dec
jo
in
push
push
jl
jb
repnz
adc
addb
loope
fisubs
dec
int3
mov
pop
loope
cltd
outsl
adc
pop
dec
jb
sub
out
push
sbb
xor
sub
and
dec
dec
lahf
sub
add
dec
cmpl
roll
out
fiaddl
xchg
mov
and
push
mov
xchg
repnz
rorb
lret
inc
loopne
mov
mov
imul
push
pop
and
sbb
pop
and
hlt
push
xchg
jno
mov
nop
lods
mov
cwtl
cmpsb
jae
loope
pop
or
incb
movsl
dec
hlt
js
xchg
cmpb
jns
pop
push
es
add
push
push
mov
or
pop
daa
or
mov
jmp
pop
adcb
les
lcall
jl
pop
jo
dec
movsl
sbb
cmc
push
dec
enter
sarl
push
dec
out
mov
sbb
sub
mov
dec
pop
mov
sbb
das
xchg
mov
sahf
imul
ja
popf
mov
aad
sbb
adcb
data16
rcl
and
cli
mov
pop
and
cwtl
lret
fidivrl
andb
dec
lds
lret
loope
leave
ror
mov
xor
cmp
xchg
fsub
push
shlb
mov
loopne
adc
out
dec
push
in
adc
stos
movsb
jp
push
xlat
mov
ljmp
jne
andl
mov
sbb
test
rorl
xor
mov
repnz
push
xorb
jo
mov
sub
dec
outsb
mov
cmp
ffree
loop
subb
jno
shl
pop
mov
ljmp
fsubrp
pop
jo
ret
sub
pusha
push
cli
pop
jnp
ds
adc
out
dec
xor
shl
sbbb
jp
xchg
scas
or
mov
es
sar
jmp
pop
xlat
push
out
call
xchg
mov
fistps
testb
pop
lcall
push
stc
push
mov
mov
jmp
fwait
adc
imul
cltd
decb
push
dec
inc
sbb
dec
inc
imul
jnp
cmpb
fiadds
cmpsb
adc
sbb
cltd
test
stos
jns
cwtl
sub
xchg
repz
push
mov
jge
out
or
pop
lods
jp
or
push
mov
xor
out
arpl
repz
popa
test
mov
push
shll
int3
add
sbbb
repz
icebp
je
mov
loope
mov
mov
test
cltd
mov
aas
inc
ljmp
call
orl
hlt
or
rolb
int3
xchg
cmpsl
shrl
pop
enter
insl
or
xchg
loope
js
lahf
pusha
adc
dec
ja
bound
dec
shr
jb
aad
rcll
push
xor
jnp
sbb
pop
push
adc
or
pop
pop
jl
andl
aas
adc
shr
aas
push
lock
sub
pop
xchg
inc
sub
jnp
sbb
add
movsl
stos
lds
pop
push
sbb
adc
mov
ss
lahf
jp
mov
imul
dec
stc
iret
mov
fistpl
mov
dec
cmp
pop
ret
sub
pop
adc
movb
mov
inc
cmc
xchg
icebp
mov
stos
psubw
mov
imul
subl
add
push
sahf
cmp
in
sbbb
bnd
movsl
lods
adc
and
mov
push
xor
sub
aam
add
dec
push
fwait
test
and
xor
xchg
xchg
lock
aaa
push
imul
fwait
xor
aam
js
and
aad
xor
insl
or
cld
rcll
js
cmp
cmp
lods
in
pushf
jnp
popf
push
mov
stos
cmc
cmpsl
loope
shll
mov
pop
mov
cld
jb
orb
push
in
ret
mov
icebp
test
jae
mov
popf
into
lret
pushf
add
push
mov
pushf
inc
jbe
insl
xor
or
pop
add
ds
repz
mov
jg
insl
arpl
fwait
adc
jns
add
mov
push
jmp
sbbl
hlt
xorb
bound
push
fwait
push
pop
stc
fstpl
pushf
andb
aas
sbb
sbb
cmp
adc
fwait
xchg
mov
shlb
ss
ja
push
ret
pop
aam
mov
sbb
jnp
lahf
lds
add
xchg
sub
sbb
add
mov
or
mov
jecxz
mov
in
fcoml
lea
sub
insl
int3
and
rorl
pop
enter
movsb
adc
subb
adc
dec
xor
adc
into
xor
ret
cli
fstl
mulb
les
in
jae
sub
cmp
fstpl
lods
cld
popa
mov
add
push
and
arpl
xchg
ds
dec
adc
xchg
cmpb
in
or
mov
movsb
jl
xor
es
mov
fisubrs
jmp
clc
and
icebp
lds
rorl
in
jb
cmpsl
out
repz
sbb
mov
data16
lea
loope
mov
or
loopne
into
xlat
and
call
ret
aas
fs
sahf
sub
cwtl
out
mov
jb
or
das
mov
xchg
leave
inc
es
dec
and
fldenv
push
add
push
push
push
cmp
sub
test
js
iret
xor
movsb
data16
mov
sub
push
adc
xchg
jmp
inc
jb
ljmp
jo
push
inc
ds
or
fstl
or
and
mov
pop
daa
es
andl
jmp
insl
xor
mov
pop
push
mov
xor
in
lods
jnp
repnz
push
into
fcmovbe
inc
sbb
addb
dec
stc
xchg
arpl
scas
in
mov
add
jb
jno
jb
pushf
mov
xor
imul
and
into
xchg
mov
int3
cmpsb
dec
cwtl
sarl
sub
sbb
mov
fistpl
addb
push
inc
pop
push
aad
fisubrs
push
pop
jbe
inc
mov
xlat
push
xchg
push
mov
push
stos
mov
stos
out
in
add
jp
and
loopne
push
jle
in
inc
in
sub
mov
ret
shlb
insl
test
hlt
xor
jg
fdiv
adc
cmp
cwtl
mov
cli
outsb
xor
mov
adc
fst
lods
mov
cmp
jns
mov
cld
push
jecxz
and
scas
adc
ret
cmp
es
cmp
insl
sub
shrl
out
cmp
mov
stos
ja
mov
inc
lret
repz
faddl
xchg
cmp
loopne
movsl
por
cmc
inc
sbb
push
and
add
movsl
mov
or
mov
in
sbb
mov
push
or
ja
sahf
xchg
jae
mov
mov
sub
call
into
sub
jnp
insl
dec
fstpl
mov
lcall
fistpl
dec
sub
divl
fcompl
out
adc
mov
sbb
dec
repnz
push
mov
and
cs
inc
push
xchg
xchg
subl
mov
push
inc
cmp
cmp
pushf
adc
addb
call
mov
cltd
pop
test
pusha
cmp
push
lcall
add
test
xor
adc
inc
mov
mov
stos
sbb
sti
out
adcl
pop
add
mov
ljmp
int3
sbb
nop
ret
and
adc
inc
cmp
in
scas
andl
and
leave
fildl
mov
xchg
pop
fnsave
pop
mov
jo
dec
loopne
xor
lahf
leave
push
sbb
cmp
out
pop
imul
mov
fbld
insb
jno
add
int3
sub
cld
mov
inc
inc
fs
push
push
mov
sbb
xchg
inc
pop
and
sbb
mov
inc
shrb
fscale
inc
jmp
stc
mov
pop
repnz
fimuls
cmp
push
icebp
idivw
mov
lcall
mov
rorl
lret
sub
mov
cmp
roll
xchg
scas
js
mov
sub
ljmp
adc
lcall
int
dec
jb
or
loop
xchg
enter
sti
imul
mov
out
incl
and
inc
adc
push
in
adc
jnp
in
out
ret
test
lock
inc
rorl
xor
jl
imulb
outsl
lods
cli
add
xchg
test
cmovp
aas
adc
callw
jge
aam
scas
ret
xor
xlat
cmpsb
jo
shl
out
jns
sahf
inc
fwait
push
nop
daa
pop
mov
ret
lret
inc
inc
mov
cmpsb
scas
lods
les
insb
jnp
nop
call
xor
outsb
cltd
insb
dec
das
jle
and
int3
mov
dec
pop
aam
loopne
xor
ret
pop
bound
cmpsl
sti
iret
sub
repz
push
lret
inc
sub
push
mov
fdivrs
xlat
and
mov
add
push
mov
push
arpl
ds
jmp
repnz
mov
rcl
or
inc
stc
fistl
test
fcmovne
xchg
lds
cmp
jl
fstpt
mov
mov
adc
and
popf
movsl
pop
inc
stc
or
bound
xchg
int
jmp
mov
repz
xor
and
les
test
mov
pop
das
clc
sbb
jg
jmp
cmpsb
jns
into
dec
xchg
sub
xor
ficomps
mov
dec
and
pop
icebp
jo
dec
notb
es
or
fs
lods
mov
push
and
iret
insb
mov
lret
fisubrl
aaa
inc
int3
mov
fstpl
add
pop
cmp
movsl
cmp
fs
adc
scas
test
fists
rclb
lea
and
mov
sub
roll
lods
int3
outsb
sub
mov
sbbb
adc
imul
jno
loopne
dec
mov
inc
jp
lret
inc
pusha
sbb
add
xor
sbb
jo
shll
add
enter
sarl
fbstp
pop
mov
xchg
jle
inc
orl
push
scas
pop
sbbl
leave
xchg
sub
lret
and
pop
mov
mov
fcom
lds
mov
mov
add
pop
sub
mov
sub
xchg
sbb
sbb
mov
xor
or
lret
dec
inc
jns
jge
aad
mov
je
jge
lods
ret
cmp
cmpsb
xor
or
aad
js
stos
jmp
jl
outsb
sbb
xor
in
ds
mov
aas
mov
fiaddl
mov
int3
ljmp
icebp
push
stos
inc
cmp
sti
daa
in
daa
addr16
and
push
notl
sub
repnz
fiadds
adcb
in
and
into
and
test
mov
mov
fcmovne
xor
aaa
mov
push
adc
mul
jns
pop
sbb
mov
jle
dec
sarb
arpl
test
icebp
ffree
dec
dec
inc
fsubr
xor
pop
mov
shlb
push
orb
add
mov
into
dec
cld
test
cmp
sub
bound
jae
pop
pop
ficoms
and
bound
cwtl
cmc
lds
cs
mov
push
js
xchg
into
test
and
mov
imul
mov
int
mov
adc
aad
add
jb
insb
cmp
call
pop
mov
lea
bnd
aaa
loopne
cmp
mov
adc
or
test
inc
sub
dec
imul
setg
adc
dec
or
sahf
mov
mov
jae
inc
dec
je
jno
int3
dec
aam
mov
mov
pushf
pop
jl
int
inc
cld
icebp
xor
fistpll
inc
inc
add
jle
insl
mov
xor
cmp
inc
out
push
cli
ljmp
xchg
push
add
add
rcr
call
mulb
cmp
cmp
and
cs
push
fs
adc
xorb
cmp
outsb
mov
out
dec
dec
adc
sub
fwait
rolb
lcall
jb
jno
jo
cmp
adc
arpl
insb
xor
cmpsl
sub
inc
xor
mov
iret
cltd
dec
xorb
push
xor
or
aam
aas
je
push
xchg
loope
or
in
cmc
lahf
pop
iret
fwait
pop
in
dec
mov
mov
xor
aas
pop
push
mov
xlat
lea
xor
scas
jo
fucomi
mov
imul
shr
popf
leave
out
scas
loopne
sbb
jns
arpl
ds
push
or
sarb
add
inc
pop
jle
lds
push
push
call
out
insl
rcrl
out
adc
sbb
rol
push
xlat
hlt
inc
scas
push
stos
leave
xor
add
insl
mov
repnz
pop
dec
inc
adc
mov
pop
inc
lahf
popf
mov
jp
push
stos
sbb
push
lahf
fnop
lcall
leave
push
hlt
push
xchg
cmp
dec
into
xor
dec
adc
add
adc
outsb
dec
xchg
loop
fimull
mov
adc
or
movsb
dec
shl
lret
outsb
sbb
mov
pop
pop
in
cmp
xor
and
inc
sub
mov
testl
mov
fwait
dec
sub
pop
hlt
adc
dec
cmp
xor
or
or
in
out
test
add
outsb
xchg
xchg
mov
pop
int
imul
daa
cmpl
add
inc
jno
jno
jnp
lods
les
andb
test
and
fcoms
xor
push
out
out
mov
jb
push
push
lock
subl
mov
test
sbb
sbb
sbb
jp
xchg
test
inc
pop
cmc
sub
or
push
add
mov
jecxz
sub
pop
xchg
enter
pop
and
or
test
stos
sbb
repnz
add
gs
movb
jmp
test
push
mov
rorb
icebp
pop
lret
pusha
fnop
cwtl
mov
addr16
outsb
lock
xor
ds
or
jmp
adc
inc
fidivl
sbb
lahf
cltd
lea
shlb
mov
fwait
pop
xchg
es
and
divl
push
ja
es
loopne
mov
jg
aad
icebp
cmp
ds
out
aam
fwait
adc
leave
cld
dec
jge
in
in
cmp
push
mov
push
cmp
out
imul
ljmp
stc
jl
outsl
pushf
ljmp
cmc
out
shr
jb
cmc
pop
in
push
fcmovbe
mov
push
inc
sbb
add
mov
add
popf
rolb
jb
sahf
xor
adc
andb
cmpsb
sbb
ja
sbb
mov
aad
add
sbb
out
cmovl
xlat
mov
pop
inc
cmp
inc
mov
lret
nop
and
scas
jl
pusha
push
pop
nop
pop
mov
mov
add
cmc
gs
xchg
mov
lcall
out
or
insl
xchg
cld
or
stc
mov
mov
je
sub
notl
pop
mov
cmp
fistpll
cmp
mov
jmp
lock
test
mov
or
push
clc
mov
mov
cmpsb
dec
aad
imul
mov
xlat
or
adc
mov
das
inc
xchg
mov
push
adc
shll
and
stos
mov
in
push
push
xor
mov
setg
sahf
sub
cltd
pop
loop
mov
mov
mov
inc
call
pop
cmp
cmp
movsb
mov
push
sbbl
int
pop
in
jp
icebp
iret
jge
mov
xchg
pop
mov
cmp
or
xorl
or
cmc
xlat
mov
loopne
pop
mov
xchg
mov
push
rorb
and
add
out
cmp
test
fisubrs
rcrb
inc
std
push
lcall
jo
jns
lret
int
mov
cmp
out
fistl
mov
call
sbb
sbb
xchg
xchg
cmp
roll
jle
jo
repnz
xor
js
out
arpl
inc
cmp
sub
ja
loopne
aaa
pop
adc
fisubrl
lods
idivb
push
sub
xchg
les
push
xor
xchg
mov
ret
insb
repz
xchg
mov
stc
bound
mov
rcrb
sarl
ds
sbbb
and
push
test
iret
jae
fdivrp
movsl
cmp
pop
xchg
xchg
imul
dec
inc
jge
and
push
mov
dec
adc
cmp
jne
push
loope
xor
std
arpl
jns
popa
fidivl
cmp
mov
lret
pusha
cs
jle
repz
sub
adc
bound
jno
mov
or
pop
cmp
push
std
adc
adc
inc
cld
aas
out
mov
mov
mov
pop
sbb
sbb
int3
ja
push
leave
xchg
mov
cltd
xchg
ja
inc
jg
jl
pusha
fdivrp
lods
cmpsb
adc
aas
or
das
cmp
outsb
mov
adc
xchg
lods
mov
mov
push
gs
push
sub
icebp
xchg
xor
lock
scas
or
aaa
mov
inc
enter
insb
or
sar
sbb
out
out
jmp
lret
fs
lods
dec
mov
xchg
fidivs
jae
int
lret
cmp
jecxz
xchg
test
xor
cltd
mov
call
mov
sub
and
jne
inc
es
pop
jne
push
jle
jbe
int
sbb
mov
inc
xor
sti
xchg
sbb
pop
add
cmpsb
mov
js
pusha
push
dec
inc
xchg
jne
mov
enter
sbb
xchg
push
loop
push
lret
out
hlt
pusha
cmc
inc
pushf
imul
popf
loope
out
call
lcall
iret
jmp
adc
mov
les
into
sub
or
fimull
or
ret
cld
push
lea
ljmp
mov
das
ja
sahf
mov
aam
mov
jb
sub
syscall
rcll
stc
test
into
popa
jmp
or
ja
movsl
aad
mov
mov
xor
pop
or
leave
cmp
cmc
cmp
fprem
mov
out
mov
mov
or
mov
popa
fildl
stc
rcrb
loopne
out
sbb
mov
or
repnz
ret
lds
lea
incl
daa
fisubs
into
repnz
lret
cmp
xchg
pop
dec
xor
std
push
push
pop
stos
fnstenv
mov
inc
mov
nop/reserved
in
pop
inc
ret
xor
jb
enter
cwtl
shrb
stos
pop
xchg
adc
fs
inc
pop
mov
jne
xchg
push
fwait
ljmp
and
in
ljmp
xorl
stos
imul
inc
adcl
push
add
cmp
imul
xchg
pop
pushf
pavgw
les
imul
imul
cli
clc
idiv
dec
xor
jno
pop
add
je
iret
mov
mov
sub
mov
out
pop
ds
or
sbbl
arpl
ljmp
add
into
or
sbbl
xor
adc
mov
shll
mov
scas
cmpsb
repz
les
ucomiss
lds
jne
in
xchg
push
push
cs
push
ret
sub
iret
jne
cmp
and
sti
aas
repnz
dec
mov
ljmp
sub
adc
cwtl
sbb
pop
add
mov
cltd
cmp
outsl
in
dec
cmp
stos
insl
nop
adc
in
jno
lret
aas
inc
clc
decb
cmpsl
fisubs
clc
test
jbe
repnz
jecxz
pop
stc
mov
inc
xchg
cmc
sub
pusha
dec
mov
loopne
sub
repnz
xchg
dec
lahf
pusha
jle
clc
cmp
popa
aam
lcall
incl
jno
mov
outsb
jecxz
adc
scas
mov
inc
sub
pop
xchg
jmp
add
jge
iret
jo
popf
mov
dec
fistps
fwait
jmp
scas
stos
sbb
add
cmpsl
das
mov
push
enter
out
mov
dec
dec
test
mov
pusha
jns
les
in
mov
adc
mov
aaa
adc
mov
xchg
adc
push
xor
mov
jns
sub
adc
mov
xor
loop
xchg
aam
arpl
int
xchg
call
cmp
repnz
jp
in
iret
fs
push
mov
pushf
jle
pop
stos
adc
aam
inc
rcrb
and
xor
push
sbb
xchg
enter
or
jmp
xchg
xchg
mov
sub
rcrl
lds
loop
sub
data16
or
shll
add
sub
icebp
adc
gs
xchg
cltd
sub
repz
cmpsb
dec
or
xlat
push
pop
xorb
movsl
xchg
sub
je
cs
cltd
pop
mov
stos
dec
push
cs
xor
push
push
sub
sub
dec
lret
imul
sub
pop
mov
or
mov
push
insb
adc
inc
push
or
in
cmp
cli
mov
xor
clc
or
ljmp
add
pop
es
rcl
push
add
jo
xchg
addl
or
ss
scas
test
daa
add
sbb
test
out
gs
push
out
jg
inc
mov
test
push
adc
fmuls
out
icebp
pop
int3
dec
fildl
fcmove
sti
pop
cwtl
or
sbb
mov
or
lods
push
nop
loopne
jb
push
push
and
or
js
dec
jl
data16
into
std
iret
or
arpl
cwtl
dec
xor
fldcw
insl
mov
push
xchg
bound
in
sbb
icebp
loopne
mov
mov
out
lret
add
push
mov
or
testb
or
add
test
jne
xor
xlat
fbld
cmp
lret
sbb
lock
dec
jbe,pt
test
add
outsb
mov
sbb
shrb
dec
fdiv
cltd
mov
lea
mov
push
gs
repz
push
fs
adc
stos
lods
pop
inc
sub
test
fnstsw
addl
dec
cmp
out
and
out
mov
cmp
ljmp
sub
mull
notb
orb
iret
faddl
push
cld
jae
cli
ja
sub
out
or
ljmp
push
mull
inc
pop
adc
mov
cs
into
mov
adc
adc
mov
in
into
sarb
out
in
lret
inc
test
and
aas
scas
cmp
mov
mov
and
pop
sub
movsb
stc
mov
or
out
push
rorl
out
leave
movsb
mov
dec
dec
dec
das
mov
and
inc
push
test
aad
mov
lcall
jl
pop
xchg
imul
mov
ds
movb
push
pop
mov
das
hlt
cmpsl
push
mov
cltd
orl
daa
and
es
xchg
lods
mov
mov
xor
push
adc
mov
sub
adc
mov
imul
daa
inc
push
notl
pop
js
hlt
frstor
jb
dec
ja
jne
call
aaa
sub
and
fiadds
fs
cwtl
call
pop
pushf
jmp
add
push
sub
int
xchg
jg
mov
lea
or
mov
fwait
fs
fmul
shl
push
aaa
jecxz
pop
shr
sbb
fnstcw
mov
xchg
adc
xor
out
mov
xchg
lret
lahf
aaa
inc
test
push
or
xchg
jg
adc
fadds
js
add
lods
aaa
adc
or
das
sub
dec
shrl
and
xor
xchg
mov
mov
pop
pop
push
movsl
push
add
test
popf
in
mov
xchg
push
dec
inc
add
ljmp
mov
ds
dec
push
xchg
xchg
or
fcmovnb
jl
cmp
cmp
fnstcw
in
mov
or
adc
inc
xlat
jmp
lock
cmpsl
mov
aaa
dec
repz
sub
mov
fadd
mov
ds
xor
pop
mov
mov
pop
dec
mov
shrl
test
dec
sbb
xchg
movsl
and
pop
jecxz
sub
ret
push
push
addr16
mov
test
int3
dec
arpl
dec
dec
inc
out
lock
add
sub
jmp
add
pop
lea
in
mov
cmp
dec
bnd
xchg
sub
pop
in
inc
lahf
jge
jns
out
xor
bound
mov
adc
inc
pop
les
pop
shll
cs
das
jmp
ja
outsl
jo
push
mov
out
fdivrs
stos
jl
test
popa
xchg
push
imul
fwait
dec
shll
adc
pop
sub
cmp
out
test
pop
xchg
out
lcall
aas
mov
mov
mov
adc
xchg
test
cmp
and
lret
xchg
xor
ret
clc
and
pop
shlb
lods
outsl
fldenv
mov
gs
jecxz
mov
dec
lock
dec
push
mov
jb
cmpsl
pop
cwtl
xor
fidivrs
int3
or
and
aam
xchg
test
cmovb
ds
dec
push
js
pop
push
test
mov
push
fldenv
and
dec
inc
cmp
stos
mov
inc
aas
aam
daa
jbe
lock
xchg
pop
mov
push
stos
outsl
int3
fwait
mov
push
push
pop
je
jl
in
sbb
dec
mov
dec
jp
pop
mov
dec
jle
shlb
jnp
pop
mov
fstpl
das
xor
mov
jbe
jo
adc
sbb
pop
dec
ljmp
daa
loop
and
cmp
sub
mov
mov
lcall
and
cmp
mov
sub
pop
inc
rolb
shl
dec
push
or
js
pop
cmp
andb
add
and
out
pop
lahf
pop
mov
xor
inc
push
mov
in
adc
mov
mov
xor
clc
add
lods
xor
es
outsb
or
hlt
push
push
stc
jge
sti
gs
mov
push
mov
mov
shl
pusha
lcall
cmpsb
fidivrs
jecxz
fs
test
ja
std
and
or
movsl
hlt
insb
sbb
mov
aaa
mov
test
pop
jb
shll
xchg
cmp
xchg
jmp
iret
push
shlb
jb
inc
dec
push
outsb
test
lcall
lock
mov
or
xor
or
xchg
fldl
or
les
jae
ss
enter
xlat
std
ret
es
cli
lret
push
insl
mov
jbe
fs
xchg
insl
hlt
mov
test
aad
addb
jmp
stc
adc
fs
adc
shlb
in
sub
mov
lahf
xchg
pop
adc
sahf
shl
or
jnp
mov
jnp
loop
or
mov
adc
xor
and
cmpsl
outsl
or
jns
jae
enter
incl
jns
push
aaa
adc
addr16
xor
mov
dec
pushf
hlt
pop
push
movsb
xchg
mov
cmp
adc
sti
cmp
dec
test
out
pop
or
dec
jb
push
and
stos
mov
jmp
and
repz
pop
les
arpl
mov
push
inc
push
std
lcall
adc
out
cmp
arpl
and
xchg
mov
pop
adc
cmp
and
cli
pop
push
and
mov
sbb
into
mov
mov
bound
inc
mov
mov
jns
dec
xchg
cmp
cmp
aaa
mov
out
mov
hlt
pop
out
and
jnp
dec
inc
fstpl
jmp
mov
int3
lock
jmp
xor
ja
stos
jbe
sarl
das
dec
mov
out
lret
fsubl
pusha
sarl
cmpsb
cmp
mov
das
outsl
add
adc
negl
and
ljmp
arpl
iret
adc
mov
xchg
cmpsl
out
rorb
push
or
into
pop
insl
or
fdivp
sahf
cmpsl
push
icebp
shrb
les
rcl
shrb
scas
jo
or
ret
push
pop
lods
pop
sbb
mov
pop
add
ja
mov
daa
xchg
pusha
fidivl
stos
mov
cltd
pop
mov
push
jmp
dec
xor
pop
inc
mov
mov
or
add
mov
gs
movsl
and
outsb
jbe
mov
mov
pushf
dec
outsb
arpl
add
sub
mov
aas
mov
andl
ljmp
ret
mov
dec
rcrl
pop
pop
cmp
bound
pop
movl
pop
jecxz
dec
jno
and
hlt
stos
push
mov
lds
pop
loop
xchg
test
enter
xchg
xchg
rol
dec
cmp
fadd
mov
pushf
xchg
out
or
mov
xor
stc
or
mov
lods
pop
cmp
jle
pop
or
sub
pop
rol
sti
dec
outsb
push
fs
dec
lock
add
or
cmp
pop
sbbl
nop
ffree
test
dec
rcl
cmpsb
inc
mov
mov
fwait
xlat
mov
clc
jb
dec
mov
imul
fs
iret
jne
bound
mov
pop
or
or
inc
test
mov
fldenv
stos
aaa
push
out
or
adcl
push
movsl
or
pusha
int
stc
sarl
out
fwait
jb
addr16
sti
popl
test
push
push
push
jne
shrl
testb
pop
fwait
loop
lds
jmp
inc
data16
push
xchg
or
dec
mov
push
mov
xchg
sbb
adc
and
and
mov
lds
nop
xor
xor
rcrl
add
sub
mov
push
pop
xorl
stc
push
add
iret
faddl
xchg
pop
testb
jmp
fst
sub
pop
shlb
data16
jne
out
sub
nop
movsb
sbb
jnp
cli
and
mov
outsb
pop
imulb
push
xchg
dec
hlt
fstps
mov
cmp
push
or
mov
push
cmp
or
bound
adc
push
ljmp
jo
jne
mov
sbb
xchg
push
sbb
out
jle
out
cld
test
adc
inc
mov
orl
pop
fbstp
pop
mov
push
mov
cmp
cmpsl
xchg
fmulp
add
ss
push
adc
in
into
mov
jbe
test
pop
aas
cli
jno
mov
adc
leave
sbb
add
pushf
scas
popf
iret
shll
cld
sbb
stos
popa
jmp
divb
xor
inc
in
and
es
in
pusha
mov
pop
imul
sbb
mov
sub
popa
rcrb
mov
imul
loop
jle
insl
lds
repz
nop
jb
jbe
ss
cmpsb
push
pop
popa
std
add
pop
mov
stos
scas
jecxz
rol
xchg
ss
hlt
inc
pop
int
addr16
test
and
cld
dec
sti
adc
dec
inc
jecxz
sub
dec
adc
cmp
and
inc
jno
je
mov
popa
sbb
dec
lret
test
mov
popf
xchg
push
cmc
lds
adc
mov
lods
mov
test
stc
sahf
jmp
in
in
pop
cwtl
fs
mov
ds
movsb
push
fdivrl
imul
lret
sub
cmpb
pop
add
out
popf
dec
sahf
mov
sub
mov
lret
lods
je
pop
mov
popw
xchg
leave
push
mov
ds
xchg
adc
mov
pop
cli
xchg
enter
cmp
sahf
les
orb
inc
inc
lods
or
les
fs
inc
jmp
jo
dec
mov
clc
xchg
dec
or
and
mov
pop
jl
jmp
cmc
outsl
push
jmp
incb
xchg
sarl
jns
call
andl
fisttps
mulb
loop
leave
sub
dec
jbe
mov
fsts
lods
pop
popa
inc
fisubs
dec
lcall
in
scas
inc
mov
cmp
out
jle
ss
fldenv
loope
sub
adc
in
jo
gs
push
cli
push
add
xchg
test
mov
fadd
fmull
stos
jne
pushl
lock
xchg
clc
loope
pop
sub
scas
dec
push
and
call
mov
cmp
and
lret
add
jno
arpl
lods
iret
xchg
ret
or
fildl
push
dec
hlt
lret
jle
andb
xlat
pop
in
mov
test
jge
pop
orb
add
fwait
pop
mov
push
pop
pop
ja
adc
adc
push
lea
xorb
push
stos
xor
imul
sub
popf
js
aaa
dec
xchg
sbb
and
pop
xlat
push
dec
orb
stos
popf
pusha
scas
and
or
fsubr
push
dec
pop
rcll
cmp
mov
fistpl
arpl
and
outsb
out
jae
lret
cltd
dec
repz
jns
and
cmp
imul
sbb
xchg
mov
cmp
lcall
cmp
ret
xchg
ffree
cltd
jbe
out
jmp
inc
mov
sub
xchg
dec
shlb
dec
dec
orl
pop
lods
xchg
push
lods
shrl
call
push
dec
popa
mov
mov
lea
cltd
xor
das
pop
loopne
outsl
sub
scas
cli
iret
addr16
fildll
ds
add
mov
jle
add
adc
xor
addb
ja
sub
insb
jae
pusha
mov
or
xchg
mov
and
addb
jmp
mov
or
mov
pop
loopne
mov
add
or
dec
jl
push
add
lea
fs
testb
pop
mov
in
mov
adc
leave
dec
lock
jg
inc
pushf
xchg
ss
rcl
or
into
test
cmp
sub
adc
fidivrl
test
je
aad
pop
sub
lcall
or
adc
cmp
and
mov
ffreep
xlat
loop
mov
add
add
xchg
pop
aaa
lock
daa
movsl
out
xor
cmp
push
push
stc
dec
movsl
jge
sub
aam
test
add
clc
add
gs
dec
sub
ret
sbb
sub
sahf
add
testl
and
pusha
jl
ja
mov
and
sub
movsl
adc
mov
pop
pop
aam
mov
xor
mov
jno
popa
push
mov
adc
and
jne
sahf
and
xchg
cli
mov
jne
pop
sbb
ja
ja
pop
stos
mov
test
push
pop
push
dec
cs
mov
daa
dec
or
lcall
mov
fcoms
sub
pop
cmpsl
sub
push
in
stos
inc
add
ljmp
mov
xor
sti
jl
jmp
mov
mov
das
mov
or
inc
xchg
clc
in
and
aad
xchg
pop
push
stos
xchg
xchg
rcrb
ja
xlat
mov
stos
test
lret
or
sbb
fnstcw
mov
mov
shlb
dec
sbb
enter
add
adcl
mov
pop
pop
movsb
push
mov
stos
xchg
aad
or
jg
and
mov
dec
shll
push
or
dec
xchg
push
and
imul
add
ds
in
std
outsb
movsb
fs
push
and
cmp
push
mov
int3
pop
jnp
lock
mov
ljmp
xchg
jae
ret
fwait
add
testl
es
scas
mov
test
mov
fimull
mov
jle
cltd
cmp
adc
pop
xchg
or
xor
cli
pop
mov
push
jl
lret
and
orl
clc
inc
xor
dec
push
xchg
mov
cmp
cwtl
iret
cmc
inc
stc
xorb
and
addr16
int3
sub
sbb
mov
xor
jp
mov
popf
nop
mov
jmp
loopne
ljmp
clc
mov
out
mov
xchg
or
mov
cmp
in
pop
pop
mov
pop
idivl
push
sub
jne
or
dec
jmp
xchg
jecxz
mov
mov
jb
jae
lret
outsl
add
lret
je
scas
jnp
jno
push
fldcw
test
mov
jno
fs
xor
pusha
pop
aad
or
push
sub
outsb
lahf
aam
jns
lcall
movsb
xorb
dec
jo
dec
scas
dec
lods
xor
sub
sti
cwtl
xchg
das
pushw
cltd
xchg
push
sahf
loopne
cwtl
push
push
mov
out
rolb
lret
mov
testl
add
mov
xor
or
sub
nop
adc
cmp
mov
outsb
out
cmp
push
repz
xchg
cmc
into
or
mov
bswap
dec
sub
jecxz
xorl
sbb
push
and
mov
pusha
sub
push
ja
jmp
mov
jnp
jg
cmpsl
mov
fldt
fs
stos
ficoms
leave
adc
out
into
cmp
sbb
fldt
sarb
push
outsl
mov
lret
inc
test
ljmp
scas
push
mov
push
call
lods
sahf
fisttps
adc
mov
pop
popa
mov
mov
xor
mov
push
das
in
pop
xchg
pop
mov
jno
jle
repnz
add
sbb
mov
push
sbb
xchg
push
sarb
dec
jmp
mov
mov
pop
cltd
push
or
leave
mov
fmul
add
pop
add
loope
or
sbb
fs
nop
xor
out
sub
jb
mov
mov
std
divb
adc
leave
add
in
xor
cmp
call
pop
mov
and
stos
out
stos
xchg
jg
mov
sbb
sbb
inc
dec
push
mov
or
aad
and
jmp
inc
and
sbb
cli
and
xchg
xor
cmc
adc
js
mov
ljmp
push
add
daa
or
aaa
jmp
push
jno
inc
ss
out
aad
cmp
leave
in
mov
pop
push
dec
cmp
or
push
sbb
adc
dec
xor
pop
cmp
sbb
inc
adc
inc
mov
jbe
or
xchg
shl
jecxz
movsb
test
jecxz
mov
std
sbb
inc
lds
mov
adc
insl
xchg
hlt
sti
rclb
pushf
jo
jl
cld
cltd
mov
fisubrl
sbb
sbb
clc
test
in
out
imul
mov
add
sub
inc
mov
mov
sbb
adc
outsb
inc
dec
lea
loope
dec
mov
add
aaa
push
mov
push
in
mov
add
adc
dec
mov
shll
pop
mov
pop
jae
orl
loopne
loope
repnz
cmp
dec
loope
and
insl
sbb
mov
jno
mov
fsts
nop
sbb
lret
lea
adc
cmp
mov
sub
xor
repnz
sti
adc
adc
or
adc
in
xchg
xor
fldenv
nopl
fs
aad
js
shlb
push
push
scas
dec
mov
cs
adc
jmp
inc
xchg
or
or
mov
stos
test
fs
fimull
mov
or
leave
jp
inc
ret
push
dec
js
xchg
mov
or
mov
dec
xor
mov
sbbb
xchg
cmpb
cmp
inc
insb
add
fprem
add
out
ljmp
adc
lahf
testl
lret
xor
je
mov
jge
add
and
jne
jge
push
jge
xorl
test
xor
in
fbld
stos
push
dec
cmpsl
jne
inc
inc
mov
mov
push
push
add
jle
scas
mov
mov
xchg
jo
cs
dec
mov
imul
jo
sti
and
ds
insb
pop
pop
sub
adc
stos
movsl
xor
adcl
cmc
shr
fdivs
iret
mov
sub
mov
inc
js
xor
aaa
push
inc
sbb
fldl
lods
orb
subb
sub
addr16
fidivl
or
pusha
mov
mov
sub
cmp
jno
jnp
sbb
lret
xor
lret
rorb
inc
add
push
sbb
scas
add
pushf
inc
jecxz
hlt
int3
inc
sbb
lret
cli
popa
cld
cmpsb
push
add
jno
clc
int
iret
cltd
jb
dec
js
jmp
js
jge
in
sub
xchg
jb
lret
fwait
and
mov
lret
pop
andl
push
xchg
roll
mov
or
aaa
dec
push
cwtl
rorl
sti
ja
pop
int3
adc
sahf
and
aad
and
movsb
jmp
xchg
test
jp
adc
mov
sbb
xchg
xchg
cs
int
cmc
adc
xor
add
mov
aam
ss
mov
out
pusha
shll
inc
fwait
aas
dec
inc
jecxz
ds
lock
mov
push
lahf
fs
inc
dec
fisubrl
jbe
mov
sbb
mov
insb
xchg
jae
popf
xlat
stc
notl
neg
les
test
sub
xor
negl
movsl
xor
mov
push
js
mov
add
leave
cmpsl
insl
loop
push
je
cmp
push
adc
sbb
mov
or
push
pop
mov
push
scas
in
das
imul
inc
js
adc
and
aas
cmp
pop
mov
inc
out
fadd
xchg
pop
push
mov
xor
xchg
sbb
pop
sbb
aaa
dec
cwtl
mov
or
cmp
loop
mov
mov
outsl
push
xchg
in
mov
sub
test
icebp
ret
sub
pop
pop
lods
jle
sub
adc
cmp
and
mov
adc
out
movsl
xchg
xor
push
nop
repnz
mov
call
cmp
xchg
mov
scas
or
in
and
cli
sub
sbb
jbe
rclb
push
mov
sub
sub
sbb
sub
xchg
or
cltd
movb
sbb
pop
insb
add
pop
cmp
lock
pop
mov
mov
adc
sbb
push
aaa
dec
scas
into
pop
int
dec
and
and
sub
inc
jb
test
jecxz
mov
add
mov
xchg
and
sub
dec
je
push
js
gs
mov
jle
daa
dec
xchg
jo
in
inc
sub
ja
mov
push
sti
mov
jl
adc
sub
add
in
push
mov
aad
push
dec
ds
cli
ss
adc
stos
cmpsb
pusha
add
lods
sti
push
pop
ja
cmp
pop
imul
push
in
cmp
jecxz
stc
dec
imul
test
test
cmp
adc
mov
sub
in
test
sbb
lea
pop
or
cmpsl
int3
xchg
arpl
inc
leave
jb
stc
mov
lea
xchg
into
lret
bswap
iret
lea
fmull
scas
cmp
clc
sub
ret
mov
fbstp
out
pop
cmp
xchg
pop
gs
pop
dec
mov
dec
add
iret
leave
mov
or
or
xchg
imul
adc
insl
mov
xor
pop
aam
insl
or
lds
inc
mov
jl
mov
pop
fcmovne
pop
xchg
frstor
shrl
add
pop
out
adc
idiv
shrl
push
inc
lea
add
fisubrs
pop
fmul
rolb
cmp
int3
es
xor
scas
insb
cmp
and
fcmovb
repz
add
icebp
pushf
aaa
dec
xchg
das
int3
mov
sbb
pusha
cmp
jg
xor
add
fld
mov
clc
dec
or
cmp
cmovae
repnz
enter
fidivrs
fs
sub
and
aad
hlt
or
inc
lcall
or
out
and
sahf
in
sbb
fs
cmp
mov
mov
sub
cli
scas
sahf
fsubr
xchg
bound
sub
jmp
int3
sub
and
mov
mov
inc
mov
adcb
leave
pop
iret
adc
push
xor
lock
pop
dec
sbb
xchg
or
cwtl
aam
xor
xchg
clc
ljmp
push
mov
scas
cs
int
gs
into
mov
cmp
loop
and
stc
imul
fstpt
cmpsb
rcr
scas
jg
sbb
adc
pushf
mov
pop
call
cmp
jae
bound
xchg
add
jns
aas
ljmp
xor
mov
sub
dec
stc
pop
xchg
xchg
ljmp
hlt
jbe
jp
and
popa
icebp
xchg
mov
dec
cmp
scas
cmp
or
add
lods
dec
mov
push
xor
cmpsb
loop
out
jbe
ss
mov
cmc
insb
sbb
add
clc
lock
pop
xor
add
mov
fmuls
pop
lret
sub
mov
add
or
dec
test
testl
or
xchg
xchg
sbb
jg
adc
xchg
xlat
add
ja
or
mov
out
mov
lods
jg
pop
mov
cld
jno
nop
push
xchg
mov
adc
into
dec
adc
idivl
scas
and
push
pop
aam
iret
shlb
sahf
cli
jmp
lahf
mov
mov
icebp
mov
repnz
test
xchg
xchg
sbb
add
sub
adc
lret
idiv
cmp
mov
xlat
adc
stc
faddl
and
and
in
adc
fcmovnbe
jbe
stos
fildl
and
push
mov
out
sbb
dec
cld
popf
aas
or
sub
sbb
in
mov
jmp
xchg
aas
addl
mov
xchg
enter
cld
sbb
cmp
movl
jno
fwait
lods
adc
xor
pop
or
pop
pop
ret
cmp
testb
stos
mov
cltd
pusha
push
mov
adc
and
xchg
mov
mov
jle
rcr
stc
shll
dec
mov
sub
movsb
fsts
mov
out
in
test
or
dec
or
mov
cmp
scas
jmp
bound
mov
outsb
mov
aas
pop
xchg
cld
mov
not
aam
imul
or
pop
jno
xlat
xor
xchg
dec
popf
adc
addr16
push
mov
inc
xlat
movsl
ds
addr16
mov
push
insb
stos
cmp
mov
mov
push
scas
imul
outsb
call
adc
and
xchg
jmp
xchg
jg
adc
mov
mov
mov
std
ds
cmp
test
andl
movb
aas
and
push
mov
inc
dec
xchg
test
xor
cltd
decl
mov
pop
xchg
xor
push
jmp
jg
idivl
adc
test
sub
mov
jbe
in
adc
pop
push
inc
enter
imul
leave
dec
xor
mov
xor
pusha
dec
stc
jne
push
rcrl
cmp
mov
popa
inc
cmp
out
add
cli
std
push
mov
je
inc
xor
das
xor
mov
jmp
pop
test
mov
cmpsl
fldenv
mov
cltd
in
dec
inc
daa
pop
jne
addr16
aad
jge
push
xchg
lock
repnz
icebp
fisttps
lret
push
pusha
cs
pop
stc
sub
adc
hlt
adc
pop
push
mov
fidivrl
xchg
add
pusha
call
dec
mov
cmpsl
xor
fimuls
mov
rorl
leave
mov
fistl
js
notb
or
shl
addr16
sub
mov
sub
scas
out
pushf
and
sbb
and
mov
fistps
repnz
stc
push
sti
in
adc
dec
mov
jnp
adc
sub
out
jne
mov
pop
test
lret
fcmovnb
cmp
hlt
pushf
cmp
cltd
lock
loop
jne
stc
mov
cwtl
jb
ret
pop
sub
xor
cmp
in
call
popf
push
xchg
cmc
jno
orl
pop
repnz
cmp
outsb
push
mov
mov
xchg
or
idivl
fisttps
dec
jnp
adc
enter
jmp
scas
loope
xchg
mov
ljmp
js
repnz
subb
bnd
or
adc
push
inc
mov
and
mov
xchg
add
add
jp
push
data16
jnp
sbb
adc
add
cmp
movsl
add
in
call
insb
add
push
pop
pop
addr16
rcl
imul
jne
jb
or
or
dec
aaa
scas
test
imul
movsl
das
das
outsl
sahf
gs
lock
mov
jge
pop
sub
pushf
sti
and
inc
mov
jne
inc
pop
clc
iret
mov
int3
and
push
xor
dec
jno
ret
inc
xchg
mov
dec
or
inc
cli
hlt
loope
arpl
je
cwtl
pop
addb
mov
lods
or
arpl
mov
nop
pop
mov
push
xchg
sarb
mov
cmp
call
imul
jge
add
mov
mov
sub
add
dec
negb
and
dec
cmp
pop
push
ficompl
jo
inc
pusha
mov
test
cmpsb
fs
sub
jnp
and
das
mov
fs
mov
mov
pop
aaa
cwtl
insb
jp
dec
jge
push
mov
xchg
movsb
sub
adc
lahf
adc
pop
cmp
xor
nop
xor
dec
loope
repnz
add
cld
or
mov
movsb
popa
mov
cltd
push
inc
mov
and
mov
xchg
test
mov
lods
in
cmp
push
push
xchg
xchg
jbe
xlat
aam
data16
fbld
mov
loop
jne
pop
xor
xchg
inc
or
dec
push
xor
test
push
insl
lea
lcall
decl
lret
or
scas
cmp
leave
inc
mov
xchg
pop
lret
std
jae
mov
pop
adc
or
insb
mov
cmp
pop
dec
jo
cmp
icebp
dec
xchg
sbb
or
cmp
add
sub
aas
test
push
xchg
sahf
mov
sbb
sub
fidivrs
test
inc
fs
stos
shr
pop
xchg
mov
inc
test
push
jp
xchg
incb
inc
cmp
mov
sub
inc
cmp
adc
jb
inc
aas
rclb
and
sahf
scas
fwait
and
rcll
sbb
addr16
lock
jmp
cmc
loopne
scas
ret
add
cmp
add
pop
push
mov
sub
mov
jmp
cmp
pushl
lea
jg
in
cwtl
insl
lret
add
jmp
mov
idiv
jo
scas
repnz
xchg
jno
aad
add
mov
xchg
xor
shl
mov
imul
popf
lret
cmp
xchg
sub
inc
dec
into
xor
andb
testl
aam
mov
je
mov
out
ds
insb
pop
mov
add
xchg
hlt
sub
pop
aad
mov
xchg
inc
cwtl
scas
pusha
in
sbb
mov
adc
daa
adc
cmp
mov
nop
mov
lds
add
enter
cmpsl
xor
mov
arpl
dec
jmp
inc
pop
ffreep
faddl
push
sub
mov
pop
or
mov
jo
loopne
in
push
sub
stos
fwait
repz
jnp
cmp
popl
xor
leave
in
pop
push
inc
stos
sbb
pop
add
ds
mov
subl
in
mov
adc
cltd
aad
mov
ffree
jb
fs
and
add
mov
lods
cs
fwait
mov
cli
mov
cmp
pop
mov
xchg
popf
out
sbb
push
xor
ret
mov
popl
mov
xor
loope
stos
mov
xchg
jmp
push
scas
pushf
sahf
push
cmp
and
cs
add
sbb
lea
or
cs
jmp
mov
and
lcall
mov
xchg
dec
inc
adc
int3
sub
enter
ret
cmpsl
in
rcrl
jg
mov
mov
imul
dec
add
enter
jp
loope
gs
popl
fs
cwtl
cmp
adc
pop
or
js
lret
enter
push
mov
loope
int
es
xor
dec
pop
out
mov
lods
cmc
pop
daa
addr16
mov
adc
sbb
in
mov
xchg
pop
out
adc
dec
dec
pop
in
lds
sti
dec
int3
int3
movsl
lahf
xlat
xchg
xchg
cmp
mov
sbb
popf
mov
push
dec
mov
inc
lahf
cmpsb
fldenv
push
adc
mov
xor
loop
cmp
test
pop
repz
sub
jg
jp
xor
sub
xorl
rorb
fmul
xchg
sub
inc
or
std
sub
out
push
ss
test
fucom
jbe
fmuls
pop
repnz
inc
movsl
cwtl
in
repz
cs
mov
fidivs
repnz
imul
cmp
sub
pop
lods
filds
in
aaa
call
pop
dec
loopne
dec
xor
dec
jo
loope
outsl
popf
dec
mov
inc
aaa
insb
pop
psubusw
pushf
pusha
dec
cmp
nop
mov
jbe
test
xchg
sbb
es
sbbl
jno
in
icebp
pop
loope
iret
jg
sbb
ljmp
mov
fiadds
jmp
imul
push
inc
sar
sbbl
mov
dec
orb
push
ljmp
mov
in
adc
jne
and
push
loopne
rcll
movsb
stos
add
jo
push
imul
or
leave
pop
push
jg
and
mov
pop
int
icebp
xchg
jno
repz
shr
pop
ret
aaa
add
movsb
iret
and
xchg
dec
dec
jp
je
cmp
mov
in
ss
punpckhdq
xchg
outsl
fdecstp
sub
lret
sub
imul
jle
mov
mov
jne
sbb
fdivl
push
repnz
aas
insl
push
scas
add
in
popf
dec
cwtl
or
scas
jg
sub
fdivrs
pop
lods
sbb
rol
cmpsb
inc
dec
orl
adc
ret
and
dec
fucomp
mov
flds
mov
pop
lret
sbb
movsb
push
pop
shr
pop
enter
out
stc
in
icebp
loopne
inc
sub
mov
sbb
or
push
shrl
mov
inc
addl
cltd
jl
add
in
icebp
jmp
xor
shll
loop
push
in
xor
dec
aaa
fadds
mov
shr
cmp
xchg
xchg
mov
shlb
in
jecxz
add
mov
push
mov
cli
push
jle
fs
outsl
lods
lret
mov
mov
adc
movsb
test
adcb
jge
jo
or
sbb
test
fcoms
sbb
enter
in
add
rep
setle
jnp
or
mov
inc
mov
pop
mov
aas
imul
aam
sub
cltd
xchg
push
push
cmpl
fisubrs
inc
movl
into
cmp
dec
lret
fidivl
call
mov
aam
js
mov
sub
xchg
jp
jg
test
test
daa
inc
sbb
or
pusha
xor
mul
jmp
test
xor
xchg
inc
sbb
pusha
addb
out
or
leave
ljmp
inc
mov
or
js
xchg
insb
aad
stc
sub
or
adc
xor
in
push
rclb
sbb
aaa
sahf
xlat
in
inc
ret
cltd
jmp
fnsave
or
cmpl
cmc
push
pop
mov
ljmp
adc
jl
mov
shrl
jo
fnsave
repz
daa
push
aad
lret
lret
pop
orl
jl
cli
cltd
pop
imul
cs
test
jmp
adc
rorb
and
outsb
add
int3
jle
cmp
xchg
imulb
sti
mov
stos
cmpsl
sbb
push
push
pop
out
mov
popa
xlat
ds
push
nop
cwtl
sti
mov
loopne
mov
out
mov
push
jmp
scas
iret
mov
sbb
add
pop
das
out
mov
test
adc
fcmovnbe
xchg
sbb
inc
jg
mov
cmp
pop
into
add
or
out
push
adc
pop
adc
fdivrl
mov
push
ljmp
dec
test
shll
inc
fwait
rcrl
test
rclb
mov
jg
insl
xchg
push
sub
jle
insb
push
add
mov
std
xor
xchg
sub
xor
insl
cld
dec
push
lods
addb
int3
mov
lret
lock
js
movsl
and
imul
mov
cli
dec
daa
ficoms
ja
leave
into
imul
shll
sub
lret
dec
pop
cwtl
push
sbbb
loop
int3
fadd
sbb
jmp
ret
mov
cwtl
sub
dec
cmpsb
cmp
xor
xchg
inc
fcom
sub
mov
lahf
dec
into
out
mov
ret
out
testb
test
cs
popf
push
mov
les
add
int
aam
xchg
outsl
mov
adc
pop
popa
jmp
shlb
cs
adc
cs
enter
fsubl
daa
leave
pop
cmp
popf
add
adc
sbb
gs
iret
xor
cwtl
cmp
cwtl
imul
popl
xor
frstor
inc
daa
ret
push
sub
pcmpeqb
not
inc
lret
cltd
popf
sub
cmpsl
lcall
out
pop
fsubs
xor
dec
gs
cmpsl
ret
jns
jecxz
sub
jne
loope
sbb
push
pusha
jbe
xchg
xor
outsb
pop
rorb
andl
jns
nop
mov
shll
shll
xchg
sbb
shll
stos
jge
add
mov
fnsave
push
dec
xor
jne
or
loop
popf
mov
pushf
pop
jb
dec
and
jg
xchg
add
rcl
test
fnsave
cmp
jo
hlt
fidivs
int
fadd
lret
mov
or
int
cltd
std
pop
lcall
dec
and
push
jo
push
stc
dec
lods
pop
jg
lods
out
xor
pop
lods
mov
cli
mov
pop
and
sbb
jmp
aam
sub
xor
cmp
xor
int3
popa
stc
fstps
dec
sbb
ret
ret
addr16
xor
push
incb
adc
std
clc
lods
add
bsr
test
push
loopne
pop
popl
cmp
ljmp
mov
add
jb
in
and
mov
loope
inc
insl
push
aas
dec
lods
sbb
leave
mov
jb
adc
add
out
cmp
repnz
jle
fcoms
test
xchg
jecxz
dec
scas
inc
loopne
xchg
call
jne
sbb
lods
into
lahf
cld
hlt
push
xor
mov
cwtl
imul
push
xchg
outsb
mov
inc
jge
aaa
les
dec
lods
jbe
shlb
test
push
jecxz
arpl
fstpl
fcmovnb
pop
int3
test
xchg
mov
sub
mov
sbb
cwtl
roll
xchg
pop
leave
lahf
ds
push
scas
add
cmp
or
xchg
sahf
movsl
inc
pusha
out
dec
mov
jl
lahf
bound
push
rol
mov
xchg
push
insl
xor
mov
loop
aas
pop
and
mov
pop
xor
jne
mov
inc
cmc
mov
call
ja
rolb
scas
int3
in
shll
pop
mov
insb
sahf
mov
out
pop
aaa
cmp
jbe
xor
push
xchg
insl
push
add
or
fdiv
out
fstpt
dec
popa
add
cwtl
fs
xchg
stos
adcb
cmp
shlb
in
xchg
test
inc
loope
or
bound
mov
sarl
pop
les
sub
psrld
jnp
shlb
call
ss
cmp
push
xchg
mov
mov
fists
out
xchg
push
push
out
aaa
div
lcall
es
mov
cmpsb
fcoml
cli
pop
cmpb
pop
mov
push
aam
mov
fisubrs
rcll
and
inc
lret
inc
ret
in
lds
jp
aad
in
sbb
ja
jecxz
or
jnp
jp
arpl
cmp
or
xor
sub
mov
sbb
insb
insb
adc
cmpsb
call
cmp
pop
bound
mov
xor
sti
sub
test
aaa
and
xchg
xor
insl
gs
pop
cmp
mov
popa
pop
stc
outsl
ret
jo
outsl
xor
test
loope
mov
pop
shlb
insb
cmpsb
adc
mov
stos
dec
sbb
rorb
fidivl
pop
xchg
int
jle
dec
daa
or
xor
inc
sar
jbe
in
jg
cmc
stc
add
dec
add
xchg
and
or
andl
dec
and
xchg
aam
fidivs
jno
xchg
adc
cmp
enter
sub
inc
push
std
fisubrl
mov
ja
lret
js
jno
movsw
push
ds
xchg
movsl
in
lret
mov
lock
mov
divb
into
mov
gs
pop
lahf
lcall
and
in
mov
jge
sub
cmc
mov
mov
lret
clc
xchg
mov
add
iret
add
cmp
xchg
ficoml
popf
je
popa
std
mov
mov
sub
jo
into
push
mov
stos
push
dec
jge
dec
pop
pop
add
cltd
insb
dec
xor
popf
loopne
or
sub
push
jb
std
dec
cmp
jo
mov
cld
or
cmp
jb
xchg
pop
out
pushw
shll
push
frstor
xchg
fcoml
xor
mov
and
dec
mov
mov
cli
inc
sub
repz
inc
inc
mov
ret
loopne
iret
iret
add
insl
mov
mov
push
adc
iret
sbb
sahf
setl
push
addr16
popa
lret
shr
aam
ds
cmp
aas
dec
sti
mov
loopne
cmp
cmp
ljmp
into
dec
inc
push
ja
mov
mov
sbb
jp
xor
and
lcall
inc
sahf
mov
add
xchg
mov
dec
mov
sub
sarl
mov
ret
inc
add
pushf
stc
loop
inc
and
loopne
jno
ror
int3
cltd
shlb
movsb
rcrb
push
add
jge
cmp
scas
inc
enter
fidivs
mov
sub
ret
dec
pop
inc
es
icebp
imul
shl
call
push
scas
call
push
and
shl
and
stos
fimull
add
cltd
sbb
push
pop
lods
test
scas
xchg
gs
sti
xor
aad
cmp
push
jg
cmp
rcrl
push
xor
std
test
sub
cltd
addb
cld
pop
mov
pop
add
or
call
int3
inc
push
and
mov
dec
inc
sub
adc
les
test
mov
jne
pop
stc
aam
hlt
repz
push
add
or
and
xchg
xor
inc
repz
cmp
out
xchg
mov
pop
pop
xchg
ss
clc
adc
mov
fnsave
ret
push
push
inc
lret
mov
push
xchg
xchg
out
test
cs
or
loop
mov
mov
add
fcompl
out
enter
push
push
pusha
call
ret
and
cmpsb
jae
sub
fucomi
out
inc
adc
lret
sar
test
dec
cmp
pusha
out
pop
sub
ret
or
ljmp
jne
xorb
imul
push
xor
popf
insl
lcall
mov
pop
cmpsb
jl
int3
jno,pn
faddl
push
aam
push
xchg
inc
scas
mov
daa
js
in
mov
lds
pop
adc
pop
lods
cwtl
jl
test
mov
cs
jbe
inc
mov
mov
mov
insl
fdivp
and
add
pop
mov
pop
jmp
mov
iret
pop
mov
xor
xchg
or
xchg
shlb
mov
inc
sbb
or
fwait
pop
sahf
out
or
xor
cmc
xor
cmp
xlat
pusha
repnz
push
push
xchg
xchg
cmpsl
mov
xlat
jge
fcmovnu
dec
mov
out
ds
mov
mov
jno
jl
aad
adc
outsl
pop
xchg
cmpl
lret
mov
or
fildll
imul
jmp
jp
jns
mov
test
pop
xor
sbb
dec
cmpsl
inc
fadd
or
jno
pop
outsb
sti
hlt
stos
pop
mov
mov
mov
cltd
data16
lret
pop
add
fdivrs
lahf
clc
sub
das
mov
arpl
adc
cmpl
add
aas
add
out
clc
lods
jno
fsubl
es
dec
jmp
lds
pop
or
xor
xchg
push
rclb
popf
fcmovbe
jmp
push
pop
loop
mov
mov
and
loopne
fmul
fisttps
insl
call
arpl
jb
xor
inc
dec
shr
cmp
sbb
cs
inc
or
mov
xchg
cpuid
pop
jl
sbb
mov
shl
or
faddl
jbe
sahf
out
push
adc
subl
inc
sbb
sbb
jbe
and
jp
loop
fisttpl
shlb
shl
imul
lock
and
ret
out
addr16
dec
push
mov
jle
push
into
push
das
pop
in
lea
cltd
ret
mov
add
push
mov
mov
sbbb
push
sbb
adcl
xchg
cld
mov
pop
nop
mov
das
fnstsw
push
ret
pop
mov
jecxz
mov
xchg
xor
xchg
sbb
pop
aaa
das
dec
in
cs
push
imul
adc
jnp
push
leave
or
lods
mov
or
aam
mov
or
ja
or
clc
push
push
dec
lds
xchg
mov
clc
popa
xchg
test
xchg
dec
loope
daa
lods
fsub
je
and
mov
push
repz
xchg
popa
inc
mov
mov
dec
jnp
out
repnz
sti
push
cmp
shlb
xchg
sub
adc
test
pop
push
mov
loope
popf
mov
imul
pop
popa
lods
cld
jo
nop
xchg
mov
popa
fwait
outsl
push
mov
inc
nop
jge
push
sbb
xchg
fsts
and
sub
sub
lds
jne
mov
jl
mov
jg
popf
ljmp
iret
mov
pushf
mov
dec
mov
lods
aam
sti
into
sbb
pop
enter
inc
stc
pop
and
loop
and
in
jae,pt
out
inc
mov
add
jb
into
jl
fists
cwtl
mov
loopne
or
aas
mov
inc
or
pop
incb
ret
fwait
push
stos
dec
adc
lock
and
cmp
out
add
dec
and
es
fldl
cmp
loop
and
jp
sub
sub
lds
add
lea
lods
mov
in
sbb
sbb
jb
add
mov
hlt
xor
cmp
sub
inc
and
scas
mov
std
enter
add
arpl
mov
push
dec
lods
fwait
pop
cld
mov
pop
inc
jl
stc
or
sbb
mov
fldt
pop
mov
lods
aam
pop
mov
cmp
call
mov
mov
mov
out
rcrl
xchg
dec
inc
or
sbb
popa
cwtl
mov
push
xor
push
fcoml
jge
repz
sbbb
insl
mov
inc
mov
xchg
jmp
pusha
das
mov
push
fwait
popf
loop
stos
lret
lret
pop
lcall
inc
iret
push
mov
rorb
stc
inc
ficomps
sbb
mov
sbb
dec
or
push
lock
xchg
scas
adc
push
movsl
cmpsl
jnp
arpl
cmpsl
enter
adc
sbb
cmpl
mov
movsl
sahf
jb
xor
and
sbb
call
hlt
lahf
sub
adc
sub
or
push
mov
fstpl
mov
leave
js
add
pop
into
sarl
and
cmpsl
jle
adc
cmp
inc
repz
loopne
jmp
adc
stc
pop
repnz
imul
in
insb
loope
fldenv
or
iret
aad
xchg
pop
outsl
call
leave
jecxz
and
jb
push
repnz
rorb
nop
adc
imul
in
dec
sub
pusha
xor
mov
mov
push
push
pop
xchg
ret
dec
es
sub
jbe
and
flds
adc
push
mov
popa
sbb
push
or
lret
pop
push
mov
aam
mov
cmp
inc
mov
and
mov
adc
cmp
cltd
addr16
or
lret
fcmovu
pop
test
xchg
cmp
cmp
cmc
jno
xor
push
pop
aaa
jae
mov
sub
mov
jb
movsb
fs
xor
lods
push
notl
in
loopne
lret
je
outsl
paddusw
sub
ret
pop
mov
sub
push
addr16
ret
dec
js
cs
clc
jp
jae
stos
jno
lret
aas
std
aad
orl
frstor
imul
ljmp
adc
pop
pop
stos
lahf
rolb
call
fnstcw
scas
jmp
mov
psrld
jge
xchg
ss
mov
fsubp
inc
add
stos
repz
int3
fdivrs
addl
mov
outsl
out
jbe
scas
cs
negb
push
loopne
in
shrb
mov
in
call
jnp
aaa
es
orb
fistl
add
sbb
test
shlb
shr
popf
xlat
mov
cli
push
xor
mov
jb
ret
jbe
cmp
movsb
scas
movsl
fisubs
les
and
mov
xchg
xor
push
rep
rclb
jl
dec
cwtl
test
push
repnz
xchg
and
xchg
cli
rclb
mov
orl
push
sub
add
psadbw
jnp
pusha
rcrb
pop
mov
push
mov
in
mov
cli
cmp
and
ljmp
mov
add
mov
inc
add
popf
outsl
cmp
cltd
js
js
jbe
jne
xor
xchg
mov
or
and
jg
xor
inc
ret
sbb
jmp
push
gs
adc
jns
in
inc
pop
in
icebp
and
cld
mov
or
pushf
and
cmc
lret
iret
in
ret
inc
fwait
std
into
jae
add
cld
and
sbb
out
or
pop
stos
test
out
or
xchg
mov
pop
adc
add
mov
mov
imulb
sahf
dec
inc
fwait
xor
mov
je
push
push
mov
fcompl
inc
inc
xchg
aam
sbb
cmp
in
mov
dec
jl
addb
jne
add
sub
movl
int
repz
inc
cmpsl
add
iret
inc
pop
cmpsb
popa
cmp
add
jno
xorl
scas
jmp
dec
mov
push
lods
arpl
rcrl
xchg
jg
pop
fstpl
dec
dec
push
test
or
inc
movsl
inc
cmp
dec
cltd
mov
movsl
pop
stos
mov
mov
dec
push
jno
dec
cmpsb
xor
add
ret
dec
dec
push
jb
jmp
jo
adc
mov
inc
cwtl
popa
out
ljmp
add
mov
int3
add
clc
pop
sti
nop
sti
mov
jge
popf
lods
push
lds
mov
loope
ss
dec
in
and
mov
jae
dec
jne
jnp
mov
stos
mov
aas
ljmp
dec
iret
loopne
mov
aad
xor
shll
dec
aaa
out
push
aaa
les
cld
negl
sbb
push
out
xchg
mov
push
dec
jg
add
jb
push
scas
cmc
test
lret
jno
adc
sbb
push
sub
xor
push
std
punpckhwd
mov
dec
lds
cmc
iret
outsl
push
inc
fsubrs
test
xchg
repnz
mov
jle
fnstcw
dec
mov
xchg
push
mov
cltd
adc
mov
out
ret
dec
add
in
fcoml
jp
out
sbb
scas
pop
out
ret
shl
outsb
sub
sub
sbb
sub
mov
jmp
xor
pop
mov
cmpsb
iret
test
sub
add
and
add
mov
outsl
fimuls
stos
sbb
movsl
rol
xchg
out
and
in
pop
inc
pop
lock
push
in
lahf
pop
mov
sahf
push
sbb
call
pop
mov
les
lret
sub
cmp
mov
data16
sarb
xlat
pop
xchg
and
mov
ss
cmp
adc
rol
cmp
mov
add
push
jmp
xchg
popf
pop
xlat
jb
mov
pop
add
mov
jle
add
dec
adc
aad
mov
xchg
pusha
shll
push
jp
out
add
xor
insl
xor
jl
mov
icebp
push
pop
out
nop
xor
fadd
test
ss
mov
push
icebp
adc
sbb
jp
mov
fmuls
repnz
fucomip
cwtl
push
jmp
xchg
dec
cmp
cmp
subl
jle
xor
sub
je
out
and
mov
xchg
std
add
jle
sub
mov
and
lock
jo
pop
lret
mov
fistps
and
push
push
add
cmp
fsubs
mov
pop
push
cmc
outsb
sbb
push
sub
sti
scas
cmpsl
inc
xlat
xor
xchg
push
aaa
jmp
jg
int3
mov
outsl
popaw
cltd
leave
push
lcall
add
pusha
lret
das
jnp
fsubrl
imul
and
daa
lcall
jnp
lea
or
movsb
fs
dec
pop
sarb
cmp
mov
int3
xchg
pop
int3
pop
int
mov
testl
insl
cld
gs
pop
dec
push
jmp
cmp
icebp
add
mov
out
dec
add
adc
fidivrs
add
xchg
xorb
mov
mov
fdivr
mov
cmp
add
and
or
cmp
xlat
fucomp
xchg
inc
add
mov
sarl
push
pusha
push
or
popf
cld
or
push
and
pop
sub
mov
in
test
mov
xchg
mov
and
scas
sub
out
xor
pop
sti
bound
pcmpeqb
leave
ljmp
mov
stos
sarb
out
cmc
mov
pop
add
jge
inc
mov
cli
pop
into
testb
ret
pop
pop
jae
es
call
test
mov
jmp
xor
into
ljmp
dec
mov
cmc
lods
jge
xor
arpl
mov
sub
into
lcall
dec
xor
jecxz
fdivs
add
enter
and
andl
int
popf
out
int3
mov
push
or
inc
pop
dec
pop
aaa
repz
sbb
daa
into
jo
in
jmp
mov
nop
xor
dec
hlt
aaa
mov
xor
and
dec
inc
decl
loop
and
jp
jp
outsb
sbb
rolb
cmp
lods
leave
sbb
jb
lods
out
out
bnd
mov
gs
push
cmp
sub
cmp
enter
rolb
loopne
adc
ret
inc
rcrl
sbb
mov
mov
test
mov
sub
sub
mov
jge
xor
clc
es
std
push
push
nop
outsb
mov
aam
insb
xlat
imul
or
test
ret
scas
xchg
dec
xor
imul
jl
scas
loope
cmp
jnp
js
or
or
mov
imul
pushf
andl
adc
xchg
inc
sbb
scas
pusha
scas
dec
jl
std
cmp
mov
sub
mov
imul
sahf
adcb
dec
xorb
mov
sbb
and
popa
adc
sbb
push
iret
arpl
shl
out
test
mov
sbb
roll
and
xchg
in
hlt
insb
add
outsb
leave
insl
addr16
pop
or
cmp
lcall
mov
xchg
xor
xchg
ja
iret
sahf
pop
mulb
xor
inc
xchg
and
push
push
jno
rorl
jns
add
xor
cmp
rcrb
out
cwtl
xchg
and
inc
jo
cmp
xor
xor
mov
lods
lock
lea
and
push
mov
fucomp
mov
aam
xchg
push
cmpsb
enter
in
cmp
jns
lock
mov
mov
out
imul
repz
push
in
push
mov
inc
bound
out
cmc
daa
or
inc
ret
push
xorb
or
insb
adc
jbe
xchg
in
stos
mov
decl
sbb
push
dec
cmp
mov
mov
enter
clc
aad
add
sbb
cmp
iret
adc
test
test
push
insl
mov
and
xor
add
xorb
sub
adcb
je
sub
iret
mov
std
mov
ret
fcomp
sub
pop
cmp
rorb
inc
popa
cs
lret
fcompp
sub
or
adc
add
cwtl
jge
pop
in
dec
cltd
mov
pop
inc
jae
stc
mov
imul
jns
add
ds
sbb
lods
lods
sub
cmpsl
movb
mov
stos
pop
outsl
or
mov
xor
and
pop
push
jl
and
movsb
inc
ljmp
jmp
fnstsw
and
mov
dec
inc
sub
stos
inc
imul
aam
int
lock
cmpb
mov
pop
lods
cs
addr16
in
imul
sub
sub
xchg
cmp
cmc
push
mov
xlat
test
daa
push
xor
inc
mov
pushf
gs
push
popa
xor
mov
adcl
and
push
pusha
pushw
mov
int3
in
jb
xchg
lods
icebp
dec
scas
out
es
loopne
mov
lods
test
sub
xor
jno
out
pop
in
lock
pop
pop
xchg
add
mov
aas
dec
mov
mov
scas
mov
xchg
fdivs
pop
pop
pushf
es
icebp
inc
cli
mov
dec
pop
xchg
or
and
fcompl
inc
ds
idivb
flds
dec
popf
in
cmp
aaa
mov
lret
aam
cld
pop
shlb
mov
shlb
mov
aaa
and
push
xor
inc
add
sub
rorb
push
mov
aam
cmp
das
dec
inc
sti
pop
mov
or
push
mov
xor
mov
icebp
jle
mov
adc
fdivr
mov
mov
addl
jbe
lods
xchg
fidivl
jbe
ja
and
xor
mov
mov
and
repnz
shll
int
push
cld
sub
jmp
add
fdivl
sti
fnstenv
push
insb
push
clc
lret
jbe
lcall
or
int
in
xor
or
mov
divl
pop
sbb
or
pusha
pop
push
or
jmp
sbbl
rclb
hlt
jo
mov
mov
inc
xchg
inc
inc
leave
mov
adc
push
fbstp
inc
out
cwtl
mov
and
rcll
jmp
adc
aaa
push
jl
iret
add
loop
into
and
fs
add
fs
in
dec
cwtl
sbb
repz
sbb
lret
jp
jge
lret
xchg
cwtl
sub
dec
into
inc
add
push
inc
fisubrs
sub
lods
in
sbb
rep
shrb
jmp
pop
scas
mov
dec
std
lret
xchg
cmp
mov
inc
sbb
mov
mull
inc
dec
pop
std
mov
ret
sbb
dec
sbb
xor
xor
out
mov
push
fldl
pop
gs
lods
inc
ret
or
outsl
gs
xchg
sbb
fsubs
pop
shl
ror
dec
stos
adc
jle
push
pusha
inc
mov
and
shrl
cltd
mov
add
mov
int
movsl
push
inc
pop
and
call
inc
and
movsb
in
loope
sub
aas
sub
lock
xor
shrl
mov
mov
sbb
xchg
inc
add
xchg
mov
movsl
insl
std
jle
or
lea
pop
xchg
in
xchg
mov
and
stc
bound
lea
pop
push
xchg
fnstcw
faddl
cli
sub
pop
arpl
dec
scas
in
cmp
test
ss
add
or
push
jbe
xor
jnp
sti
int
jg
fwait
xchg
andb
mov
stc
add
cmp
in
dec
pushf
jmp
lds
mov
rorb
ret
ds
mov
adc
andb
dec
cmp
mov
fs
adc
loop
xor
aam
xlat
iret
mov
std
mov
nop
pop
mov
inc
sbb
xorl
or
fst
mov
cwtl
xor
jp
jmp
fcmovnbe
mov
and
pop
push
push
mov
shr
xchg
xor
mov
fs
popf
dec
out
mov
aas
add
push
into
enter
dec
or
leave
call
xor
lea
ds
jecxz
and
out
jnp
sarb
out
jbe
mov
fcmovb
ret
add
in
adcl
fstl
pop
repz
leave
dec
pop
fld
adc
inc
mov
adc
pop
data16
jg
enter
fs
in
ljmp
imul
ret
cltd
hlt
aam
mov
pop
jb
loop
jmp
repz
pop
cmpsb
dec
lret
ds
and
lret
hlt
rcll
push
adc
jno
lock
lock
icebp
xchg
pop
push
mov
xor
subb
xchg
cmp
and
ja
andb
inc
jns
leave
fsubrp
dec
cwtl
lahf
test
adc
adcl
xlat
ret
pusha
pop
jno
pop
notl
lods
mov
xchg
xchg
sbb
pop
ds
push
lret
pusha
int3
cwtl
jb
and
pop
inc
pushl
cmp
cmp
add
ljmp
pop
push
push
jge
or
push
sub
and
xchg
dec
mov
sub
mov
jp
in
fcoms
push
push
insb
pop
mov
out
mov
push
outsb
xchg
jae
insl
scas
inc
jp
jge
insb
or
push
loope
add
mov
out
js
jle
cli
sbb
scas
rolb
xlat
js
add
inc
push
movl
dec
xchg
inc
mov
cs
mov
and
cmp
push
and
xchg
and
in
icebp
andb
dec
or
fcompl
xchg
sub
xchg
push
bnd
xchg
xchg
push
mov
in
out
cmp
fwait
sbb
clc
les
mov
neg
mov
out
or
imul
inc
sub
pop
jp
pop
adc
sub
clc
dec
adc
or
inc
sti
xchg
cld
add
add
add
imul
je
int3
cmp
jbe
mov
outsl
arpl
and
mov
hlt
mov
sti
rol
push
sub
adc
mov
stos
enter
out
lret
in
mov
pop
inc
fisubrl
bound
jbe
pushl
cmp
mov
leave
jg
cmpsl
inc
cwtl
arpl
pop
push
stc
outsl
hlt
in
adc
push
mov
push
jmp
rcll
rclb
outsb
pop
lcall
add
push
add
std
mov
push
adcl
imul
sbb
loope
jl
sahf
mov
rcrb
fs
das
mov
mov
pop
dec
test
movsb
jecxz
inc
shlb
dec
xchg
les
lret
mov
repz
xor
in
mov
sub
cs
scas
inc
jge
dec
pop
mov
dec
xchg
sbb
aaa
movsl
xchg
call
push
jns
fprem
mov
xchg
mov
mov
xor
lret
dec
int3
test
test
xchg
push
ret
sbb
push
or
push
iret
adc
sub
xchg
sub
mov
shrb
out
int
mov
inc
iret
dec
mov
sbb
pushf
cmp
fadds
into
mov
test
andb
stc
aaa
hlt
sti
adc
xlat
cmp
pop
xchg
dec
cmpsl
sbbb
add
mov
aad
mov
pop
cmpl
frstor
inc
into
ret
push
hlt
insb
adc
je
aaa
mov
and
movsl
pop
mov
shrl
sbb
popf
push
push
test
outsl
and
test
test
mov
sbb
dec
cltd
in
iret
inc
push
adc
lods
imull
out
and
rep
fldl
int3
aam
jne
lods
mov
out
sahf
insb
fisttps
mov
adc
pop
pusha
inc
std
mov
test
mov
or
in
into
dec
out
cmp
jo
mov
xchg
xor
daa
xor
and
dec
mov
fnstsw
ljmp
lret
push
adcb
flds
int
aas
xor
cmp
iret
ds
xlat
loope
insl
fidivrs
push
rcr
mov
dec
test
int3
dec
mov
mov
dec
mov
push
jecxz
fisttpl
addl
scas
mov
or
sbb
andl
stos
std
jne
add
push
mov
xor
cwtl
ret
cmpsb
lret
mov
call
mov
daa
arpl
repz
and
sahf
aad
icebp
xchg
sbb
test
cmp
add
or
std
cwtl
and
je
call
inc
mov
fwait
sub
in
and
out
imul
fs
int3
mov
cmp
xorl
fdiv
stos
lods
sub
push
xchg
mov
insl
pushl
icebp
loope,pn
cmp
and
inc
mov
jne
mov
mov
sti
xchg
js
cmpsb
cmp
jmp
lahf
cmp
jmp
fstpl
or
fs
shl
jo
and
lds
and
insb
xchg
cmp
xchg
cli
push
outsl
imul
mov
xor
jg
mov
pop
push
inc
push
adc
repnz
std
test
in
aaa
push
add
cmp
test
flds
arpl
mov
xchg
xor
cmpsb
jo
leave
pop
mov
cld
adc
pop
in
rorl
xor
nop
cmp
loopne
je
jle
pop
inc
js
mov
push
insb
mov
std
xchg
mov
inc
lret
movsb
aad
mov
neg
mov
mov
int3
sbb
and
push
cmc
pop
or
xchg
lea
aas
fidivrs
lods
sbb
ljmp
aas
aas
mov
mov
pop
or
mov
sub
cld
daa
iret
pop
pop
mov
mov
add
test
ss
shll
dec
cmp
out
out
stos
xor
int3
mov
adc
or
movsl
lret
cmp
jae
mov
jecxz
lods
insl
fstpt
or
pop
shll
loope
imul
jg
sbb
fs
dec
inc
sub
in
cmpsl
and
popf
std
popf
sbb
mov
test
cmpsl
xchg
push
pop
pusha
and
cltd
nop
dec
icebp
notb
je
aas
xor
cmp
cmp
push
ds
cli
xor
cmpsl
sub
cwtl
sbb
mov
mov
pop
aam
xlat
inc
adc
xlat
aam
push
int3
dec
aas
adc
push
pop
cmp
nop
cmp
lret
out
out
xchg
pop
xchg
subb
lds
mov
xor
movsl
xchg
js
mov
mov
out
repz
fcmovnbe
fstpl
mov
mov
in
pushf
in
aaa
add
pop
sub
loope
stos
lock
jae
decl
jl
addr16
pushw
cmp
pop
cs
stos
inc
iret
lock
loope
ja
adc
cmp
jl
stos
push
or
popf
rclb
add
pop
jge
sti
and
call
sub
jge
mov
inc
testl
adc
ss
push
xchg
mov
or
jb
cmp
repnz
add
hlt
loopne
sub
mov
adc
subl
fwait
add
or
out
jb
jae
aad
xchg
xchg
add
daa
adc
jbe
jecxz
xchg
mov
mov
das
dec
out
cmp
sub
pop
adc
idivl
fistpll
cmpsl
and
lods
and
add
push
mov
ret
xorb
std
nop
sbb
ss
movl
pop
cmp
aaa
pop
daa
sub
pop
push
inc
ja
sub
sub
xchg
inc
imul
adc
push
mov
ret
push
xchg
loop
mov
std
add
pop
lods
push
or
mov
outsl
dec
repnz
xchg
mov
test
mov
sarl
jno
loope
daa
popf
int
pop
sbb
push
push
arpl
mov
and
mov
adc
jo
xor
outsl
outsb
pop
push
outsb
xchg
mov
xor
repnz
and
fwait
xchg
xchg
mov
adc
out
daa
cld
fnstsw
sbb
in
test
jae
pop
insb
sub
filds
lods
inc
xor
movsb
fistpll
cmp
inc
aas
mov
adc
cmpsb
lods
les
xchg
pop
sbb
and
mov
roll
sub
or
mov
xor
xorb
int3
inc
jns
jecxz
mov
mov
push
fs
mov
sbb
xchg
dec
pop
out
popf
sbb
out
scas
cli
shlb
or
js
jg
adc
hlt
icebp
mov
ret
sub
sar
mov
out
inc
stos
add
or
mov
shrb
sbb
jmp
outsb
loopne
in
push
lea
pusha
push
outsl
jg
outsb
cltd
adcl
dec
fwait
and
inc
xchg
pop
ficoml
cmp
pop
push
and
pop
mov
adc
or
rcrl
ror
push
lret
out
test
nop
mov
push
jo
mov
in
lret
dec
rolb
add
lret
loopne
je
jno
leave
mov
xchg
mov
cmpsl
adc
mov
xchg
dec
sbb
fisubrl
or
aaa
or
ss
ljmp
mov
gs
into
cmp
daa
xchg
insl
shlb
or
mov
inc
and
nop
inc
rorb
int3
scas
imul
sbb
push
push
sbb
jae
lock
stc
jno
push
pushf
fs
mov
outsl
jecxz
aad
adc
sbb
mov
neg
mov
push
shrb
inc
pop
aam
in
out
shrb
mov
mov
adc
mov
xchg
or
dec
lea
test
mov
adc
imul
orl
mov
mov
pop
sub
xchg
and
adc
and
or
mov
and
aam
xchg
mov
test
inc
scas
jo
xchg
call
or
jns
xchg
mov
push
jno
lds
jmp
idivb
inc
jge
or
xor
xor
sbbl
fidivs
jb
sub
cwtl
xchg
mov
jb
add
insl
clc
sub
mov
push
and
movsl
popf
bound
pop
pop
sbb
mov
stc
out
int3
into
stos
cmpsb
sbb
sbb
jb
push
adc
add
adc
ret
cmp
mov
push
mov
mov
or
adc
adc
movsl
add
mov
pop
push
jmp
sarb
push
jg
hlt
jp
scas
add
int3
pop
jae
cmp
inc
mov
aam
shrl
rorl
ror
sbbb
and
lods
divb
sbb
xor
movsb
movsl
lods
pop
nop
mov
cli
adc
mov
fcompl
push
dec
pusha
jp
sub
out
mov
xchg
insb
std
dec
daa
mov
dec
push
jbe
mov
adc
cwtl
adc
fists
test
out
stos
cmp
loop
mov
jno
inc
std
add
repz
scas
les
adc
popa
or
imul
sbb
xchg
sub
push
call
jns
adc
orl
imul
push
push
cmpsl
je
sbbl
mov
sub
lcall
cmp
ss
out
bnd
mov
cmpsl
adcl
repnz
and
xor
and
pop
cmpsb
loopne
sbb
pop
xchg
xchg
cmp
mov
push
fwait
pop
adc
lock
mov
out
fists
pop
leave
pop
bound
push
push
fidivrs
in
ds
pop
and
outsl
sub
xor
das
sbb
mov
add
sbb
lahf
daa
das
std
mov
cmp
adc
push
imul
sbb
bswap
jg
aad
dec
fldenv
popa
sbb
xchg
gs
jle
adc
xchg
cmp
push
inc
insb
lea
mov
ja
push
pop
add
ret
dec
xor
out
push
scas
aad
lret
mov
std
adc
movsl
adc
sti
sub
stos
push
and
adc
movsl
xchg
sub
sub
popf
jmp
inc
sarb
bound
cmc
rolb
dec
loop,pn
mov
push
stos
rcll
jne
xchg
add
out
or
xor
fnsave
pop
test
fdivl
pop
jnp
push
cmp
add
lods
jno
filds
mov
clc
mov
rcll
cmpb
jns
add
fwait
subl
sub
lret
clc
mov
push
dec
flds
lret
or
pop
imul
jle
jo
hlt
pusha
jae
inc
xchg
pop
fcoml
push
cmp
out
jmp
lahf
xchg
cmp
sub
mov
mov
cwtl
push
stos
push
addr16
jmp
jle
jbe
outsl
fcom
sbb
push
cwtl
inc
push
xchg
adc
push
fwait
and
xchg
flds
adc
ds
flds
cmp
mov
push
push
cmp
sbb
sarl
int3
xchg
scas
xchg
sbb
cmp
jg
fldcw
hlt
daa
inc
ja
fisttps
mov
mov
in
mov
test
xchg
add
or
lods
sahf
mov
cmp
push
jmp
or
dec
inc
out
pop
sub
ret
jno
cmp
roll
ljmp
push
push
or
and
sbb
jge
inc
jns
push
notl
clc
in
out
sbb
es
push
cmc
push
sub
inc
popf
insb
push
iret
fidivrs
mov
cld
mov
inc
lds
cmp
xchg
adc
mov
mov
mov
adc
mov
test
testl
out
jb
popf
sbb
es
pop
add
loop
jb
sub
mov
adc
aaa
jecxz
lea
dec
jns
mov
enter
xchg
adc
sub
add
loop
xchg
pop
cli
in
in
jg
aaa
imulb
push
pop
mov
test
pop
mov
inc
sub
inc
ret
int3
sub
mov
sti
and
fcomip
arpl
fs
xor
aad
sahf
arpl
arpl
push
jl
aam
inc
dec
adc
mov
xor
es
and
cmp
pop
pop
mov
aad
insb
pop
aaa
popf
faddl
sbb
pop
mov
cmpsl
stos
outsb
xor
or
mov
xor
fcom
xchg
ja
xchg
mov
xor
sbb
xor
outsb
stc
cmp
clc
mov
sbb
mov
and
enter
out
enter
out
cmp
cmp
mov
jno
push
scas
jne
ret
andb
and
or
lret
add
cmp
xchg
push
mov
mov
add
jecxz
jmp
cld
sbb
into
dec
mov
and
inc
inc
lock
movsb
jns
xchg
push
adc
lods
cmpb
adc
pop
imul
or
dec
out
in
jo
sarb
jp
jns
jle
push
lret
js
addb
xchg
add
lds
in
pop
imul
sbb
push
push
scas
push
xor
xor
mov
jae
scas
pop
pop
cld
mov
rorl
mov
pop
pusha
jp
mov
push
or
clc
adc
outsb
mov
ss
or
dec
pop
mov
fstps
jl
dec
adc
or
lods
pop
in
aam
adc
enter
pop
scas
mov
andb
push
or
push
and
ficomps
jle
sti
sahf
and
popf
mov
movmskps
inc
jmp
jo
adc
fld
adc
jo
xor
in
pop
clc
or
mov
add
xor
cmc
movsb
pop
jmp
push
and
adc
mov
xchg
dec
incb
jecxz
popf
sbb
daa
test
mov
pop
mov
call
jb
and
or
int3
aas
and
aam
sub
add
dec
leave
or
cmp
dec
test
adc
arpl
bound
out
dec
dec
adc
push
lret
out
push
pushf
dec
gs
lret
daa
inc
mov
movsl
sbb
sbb
popf
and
cmp
push
pop
xor
xchg
mov
xor
popf
mov
in
inc
popf
std
xor
cwtl
xchg
jmp
out
dec
push
or
iret
mov
sbb
aam
mov
das
xlat
and
popf
cmp
mov
lea
clc
mov
std
inc
addl
iret
in
mov
sbb
arpl
test
imul
sar
pop
cmpsl
ss
mov
out
mov
in
iret
xchg
xor
daa
mov
repz
cs
adc
daa
pop
xchg
or
popl
or
ds
sbb
data16
into
inc
xor
lahf
repz
xchg
fwait
stos
iret
ucomiss
adc
jle
std
cmpsb
sbb
fwait
sub
test
sub
adc
mov
inc
mov
add
dec
sbb
fistpll
addr16
mov
push
ds
dec
rolb
ljmp
mov
orl
adc
popa
push
ja
sub
and
in
lret
mov
sbb
filds
push
pop
repnz
xor
push
js
stos
loope
shll
shrb
dec
arpl
lock
sbb
stc
idivb
cmc
add
and
fyl2x
stc
in
movsl
jmp
push
cli
mov
sub
mov
out
jns
add
imul
xchg
insl
push
fxch
jo
cmp
je
loopne
ret
push
xor
pop
pusha
inc
aam
test
cld
pop
xor
cmpps
in
jecxz
jae
inc
es
jae
aam
out
mov
push
outsb
mov
lea
fildl
jl
and
inc
sub
into
mov
cmp
mov
pusha
sarl
cmp
push
push
adc
pop
pop
xchg
mov
pop
ds
in
daa
pand
push
fnsave
mov
push
jbe
shl
push
out
jl
adcl
arpl
fldl
fisubrs
xchg
push
loope
xchg
cmp
push
xchg
dec
fiadds
xchg
les
xchg
adc
cmp
jne
fisttpl
lret
lret
sub
xlat
rcrl
dec
ret
xor
sbb
loopne
inc
jae
mov
adc
aaa
mov
or
jle
les
clc
lahf
test
popa
aas
lods
push
fildl
dec
pop
jne
stos
fidivrl
and
test
lea
leave
dec
dec
push
lret
xchg
sub
adc
push
dec
pop
push
pop
add
movsb
out
clc
in
imul
and
pushf
add
faddl
inc
pop
inc
aad
into
push
jl
push
push
cwtl
out
jp
ret
dec
mov
sub
sbb
lret
jle
lret
mov
inc
cli
add
jae
ss
repnz
jecxz
outsl
repz
xchg
outsb
mov
xchg
mov
and
adc
jmp
pop
mov
jno
adc
daa
fs
push
cli
lds
icebp
mov
out
mov
outsl
adc
cmp
sub
and
iret
and
xchg
xlat
push
test
add
mov
add
push
outsb
add
test
jle
cmpsl
sub
mov
popa
sbb
push
mov
fistpll
push
imul
cmpsb
mov
jo
popa
cmp
sbb
pop
std
fidivl
pop
xor
movq
arpl
push
xchg
imul
xchg
mov
loope
jnp
cs
lahf
push
pop
sub
pop
lods
sub
shll
out
lahf
fidivs
xor
sahf
dec
xchg
fistpl
mov
or
xor
imul
subb
cmp
fwait
rorb
sbb
jmp
fmul
mov
push
add
lea
icebp
daa
xchg
mov
mov
mov
insb
ja
sti
shrb
sbb
stc
inc
scas
xchg
sub
xlat
mov
pop
out
nop
enter
fildl
ret
adc
mov
fs
push
jb
jbe
dec
inc
rol
daa
test
aas
mov
out
icebp
xchg
je
push
jmp
icebp
vrcpps
or
lods
imul
xor
add
movsb
mov
in
repz
dec
js
test
cs
and
add
cwtl
push
cmp
lods
out
sub
lds
lods
in
or
icebp
loope
xchg
ret
sbb
pop
jbe
pop
decl
jne
adc
es
sbb
xor
cmp
es
inc
and
cs
and
rcl
cmp
jnp
js
xor
pushf
cmp
imul
sub
fdivrs
andl
pop
cld
add
xchg
repnz
pop
aad
leave
insb
data16
popf
test
lock
out
jae
ds
aaa
mov
dec
jecxz
pop
insl
lret
xlat
xlat
add
lcall
inc
pop
jae
repnz
jecxz
xlat
arpl
or
icebp
rcr
ret
mov
mov
add
add
xchg
fldenv
rol
xlat
aad
mov
add
je
pusha
inc
call
out
and
nop
test
lock
adc
pop
and
stos
lcall
arpl
cwtl
clc
inc
push
stos
mov
rorl
shl
mov
lds
ret
push
push
and
mov
cmp
xor
xchg
xchg
roll
jle
out
mov
stos
push
mov
mov
andl
das
faddp
fs
and
dec
xchg
inc
jnp
ljmp
jecxz
cmp
aam
mov
xorb
sarb
jmp
stos
mov
inc
mov
pop
aaa
xchg
cwtl
gs
jmp
cmpsl
and
aaa
mov
xchg
jle
shrb
sub
psubd
dec
in
or
cltd
xorb
sub
sub
dec
mov
fadds
cmp
sbb
xchg
jmp
mov
pop
and
push
mov
out
mov
iret
lods
dec
push
or
mov
push
xchg
push
jae
movsl
add
leave
shr
add
sub
xchg
add
sbb
cmp
cltd
cmp
dec
jp
int3
roll
imul
sub
fisttpll
decb
cltd
rcl
aad
jmp
into
jno
dec
mov
jnp
fisubs
aad
pop
stos
mov
or
adc
adc
cwtl
cmp
pop
mov
push
les
xor
lods
inc
jg
jno
popf
add
enter
movsl
mov
push
pusha
jmp
enter
sahf
jge
shrl
cli
dec
and
adc
aad
jle
pop
test
jmp
das
lea
ss
scas
push
inc
call
dec
std
pop
out
sarl
and
insl
cwtl
test
addr16
jmp
jns
dec
push
mov
add
pushf
xor
lods
adc
and
fistpll
icebp
cmp
loope
sub
cwtl
scas
cmp
loope
add
outsl
push
dec
lods
and
xchg
xchg
test
pop
es
fisttps
mov
pop
movsb
mov
rcl
push
jg
inc
mov
test
add
mov
leave
fmuls
mov
mov
les
push
in
movl
fildl
lods
push
mov
mov
jmp
mov
je
xchg
cwtl
inc
inc
lods
outsb
jg
sub
movsb
lahf
fdivrl
or
cmp
fwait
bound
adc
mov
dec
call
movsl
cs
adc
dec
insl
loope
hlt
test
movsl
loope
adc
scas
mov
test
orl
imul
inc
jecxz
cmp
inc
repz
mov
movsb
xlat
daa
mov
in
nop
xchg
add
sbb
jmp
cli
dec
jle
js
push
adc
rorb
push
and
pop
sub
and
add
insl
psubq
lods
loopne
sub
es
call
adc
mov
in
movsb
popf
jle
std
lret
outsl
ficomps
repz
sub
mov
mov
sub
stos
cmp
inc
gs
sbb
ds
insb
push
mov
cmp
inc
mov
cmp
push
jmp
in
insb
cmovo
add
aad
fdivl
adc
aaa
add
lods
fs
es
aas
fldcw
mov
jne
hlt
sbb
insl
js
dec
cltd
push
pop
jecxz
repz
lds
lds
xchg
insb
enter
ss
or
push
or
sbb
aam
xor
inc
xchg
inc
addr16
stos
addr16
or
fsubp
jp
mov
mov
mov
cmp
xchg
push
xchg
in
xlat
mov
imul
xchg
repnz
adc
sub
nop
out
mov
jecxz
or
mov
out
push
mov
repz
fstps
js
pusha
nop
sub
or
movsb
fstps
cmpsb
scas
cmp
mov
fadds
andb
movsb
flds
fisttpl
dec
out
sub
inc
push
cmp
lock
icebp
popa
mov
ljmpw
das
shll
xchg
xor
fsubs
xchg
test
nop
pop
sbb
dec
xor
sbb
pop
xchg
jae,pt
pop
movsb
lret
jnp
mulb
dec
dec
pop
push
pop
out
mov
pop
fcompl
push
and
stos
jb
jbe
mov
fisttps
add
in
dec
imul
aaa
sbb
add
aas
cmpsl
mov
rcll
pusha
inc
add
out
fcoms
mov
cvtpi2ps
rcll
inc
pushf
call
mov
add
mov
lret
vcvtpd2dq
mov
jnp
fsubp
push
sahf
dec
jmp
inc
push
sbb
popf
mov
mov
or
daa
ret
jne
pop
sub
mov
sbb
jb
insl
jo
lcall
addb
mov
xor
cmp
stos
xchg
mov
pop
cmp
add
dec
jg
iret
bound
rolb
cmp
outsb
cltd
cmp
es
test
push
sti
cmp
push
mov
dec
mov
pop
adc
mov
leave
aaa
sahf
sub
mov
adc
cmpb
in
jbe
sub
ss
subl
dec
pop
lret
fs
repnz
xchg
orl
aam
or
add
push
subb
es
sub
xchg
imul
cld
test
cmp
into
stc
xchg
mulb
mov
mov
add
aaa
and
lret
or
xor
scas
ss
fcomip
scas
cmpsb
lods
push
add
mov
stos
add
xor
movsb
clc
mov
mull
push
jae
or
and
cmp
sbb
fistl
jns
jmp
pop
int
aas
xchg
cmpb
test
jl
bound
popa
push
adc
pop
shl
in
loope
loopne
cld
cmp
mov
ja
js
pop
cmpsl
jns
pop
push
lcall
mov
loopne
pusha
inc
popa
sbb
adc
mov
fwait
xor
push
bound
hlt
int
stc
cmp
xor
lods
and
xor
push
inc
pop
subl
hlt
xchg
pushf
daa
sbbb
mov
imul
rcrb
jp
les
adc
popf
pop
cmpsl
pop
mov
and
push
daa
div
push
mov
pop
outsb
mov
cli
loopne
xor
std
repz
in
xlat
add
mov
and
movsl
push
cwtl
adc
cmpsl
fildl
cmp
mov
cltd
push
mov
outsl
or
decb
cmpsb
mov
mov
ret
arpl
mov
mov
xor
push
popf
mov
aad
add
add
ljmp
pop
xchg
scas
cmp
pop
test
adc
sub
rcll
imul
and
shlb
ljmp
loopne
jne
cmpsb
fnsave
fwait
dec
aam
jmp
icebp
add
fistpl
sbb
call
or
xor
dec
sub
jecxz
push
lods
ror
into
sub
popf
xchg
and
int3
outsb
fwait
out
cmp
mov
push
or
and
add
adc
jle
xchg
je
loopne
pop
scas
push
or
xchg
pop
jp
push
out
cmpsl
and
mov
je
mov
xor
test
int3
add
inc
pop
mov
jo
sbbl
xchg
pop
je
jg
insb
mov
xor
add
arpl
pop
mov
and
imul
push
add
gs
stos
leave
fistl
jnp
xchg
and
add
xchg
mov
aam
mov
fisubl
mov
dec
cli
fcomip
pop
out
or
out
sbb
popa
repz
pop
or
cmp
gs
outsl
jb
lret
aaa
iret
scas
lahf
mov
movsb
or
in
sub
inc
out
fnstsw
cmp
push
les
inc
cmp
adc
fisubrs
and
out
repnz
fdivs
and
and
cmc
sbbb
les
xchg
jno
rcl
push
icebp
and
xor
leave
push
ss
push
mov
sbb
push
mov
out
mov
fidivl
aad
adc
out
add
push
sbbb
push
jbe
xchg
mov
xor
insl
inc
test
rolb
push
repnz
dec
rolb
pop
cmp
inc
sub
mov
fs
sbb
add
mov
mov
rol
push
in
bound
dec
add
mull
and
pop
add
jmp
cwtl
aaa
setb
test
lahf
add
dec
loop
enter
inc
inc
xchg
mov
sbb
add
sub
aaa
add
push
pop
xchg
jmp
push
das
clc
sqrtps
xchg
dec
test
mov
add
aas
inc
sti
fucomp
pop
nop
mov
dec
daa
repnz
xchg
andb
or
int3
loop
xchg
push
add
imul
mov
adc
and
je
adc
cmp
push
pusha
es
divl
lcall
in
xchg
mov
cmp
inc
ds
fcmovu
mov
or
xchg
aas
jp
sahf
jno
in
sti
mov
push
repz
jmp
mov
dec
call
lea
imul
push
push
push
div
jns
jmp
add
mov
in
cmpxchg
sbb
mov
sub
mov
add
stos
leave
and
push
imul
into
mov
mov
sti
mov
sub
pop
inc
xor
das
fucomi
inc
test
cli
stos
push
cmp
pop
aas
les
repz
mov
sbb
add
sbbb
clc
fbstp
das
mov
dec
enter
sub
mov
imul
and
jmp
sahf
jne
loope
pop
loope
inc
test
fldl
and
inc
fucomi
push
cld
cltd
roll
pop
lods
mov
out
pop
outsl
cs
aam
hlt
inc
daa
pop
daa
sub
cmpsl
mov
push
sub
xchg
cmc
jne
ds
xchg
jl
cmp
and
in
movsl
stos
adc
pop
adc
xor
int
rorb
andb
and
and
push
mov
pop
fbstp
mov
mov
stos
mov
aad
lods
cs
pop
xor
fnop
cmc
cs
push
inc
imul
jnp
into
cmp
push
push
idiv
push
mov
paddw
fs
xchg
cs
out
adcb
out
xchg
scas
sub
call
jmp
adc
addl
and
adc
bound
movsb
cmp
orl
jbe
pop
outsb
gs
jg
add
stc
lret
fdivrs
cmc
mov
cmp
xor
push
xchg
sbb
sar
rep
push
xchg
loop
stos
add
loope
repnz
dec
jg
sub
sbb
xchg
mov
js
ljmp
xor
xchg
lods
add
pusha
adc
xor
in
mov
test
cltd
sbb
mov
push
std
pop
incb
pop
inc
std
push
mov
jns
ret
ret
push
ja
lds
out
dec
cli
sbb
push
loopne
call
gs
data16
mov
cmc
adc
in
or
inc
mov
aad
dec
mov
lret
fldt
jp
fisubl
jne
xchg
dec
gs
ret
mov
daa
xor
lods
dec
jg
mov
inc
sub
push
sbb
xor
out
cmpsb
rorb
or
movsb
jo
ret
mov
addr16
movl
xchg
jecxz
or
fisubl
pop
add
pop
cltd
mov
add
insl
jmp
into
roll
dec
div
dec
ret
outsb
insl
loope
mov
daa
movsl
fcmovnu
leave
xchg
inc
dec
xchg
jge
hlt
mov
inc
xchg
daa
push
mov
out
inc
xchg
movsb
cli
and
xlat
xorl
sbb
orl
mov
loope
fisttpll
insb
cmp
xor
push
aad
mov
leave
sti
xchg
mov
jmp
insb
xchg
insl
push
lret
int
xchg
pusha
scas
jl
mov
pusha
cwtl
ja
jnp
lds
push
push
test
in
inc
jmp
scas
icebp
int3
bound
cmp
mov
repnz
fs
jmp
mov
ret
pop
jge
mov
dec
adcl
push
mov
fistps
jb
stos
int
pop
insb
ss
je
xor
fcomps
pusha
fistpll
cwtl
xor
imul
nop
sbb
dec
fiadds
out
cmp
pop
pop
mov
inc
sti
fiaddl
les
jo
fsubrl
and
iret
jns
fcompl
arpl
addb
jns
jae
sbb
push
jle
or
or
xchg
add
mov
and
stc
int
inc
lods
pop
dec
xor
add
popa
push
mov
pop
mov
dec
adcb
cmp
rorl
movsb
mov
xchg
push
sarb
mulb
mov
arpl
inc
ss
mov
ss
dec
gs
cmp
cmc
repz
pop
outsb
in
insl
push
pushf
or
add
inc
mov
cmc
jnp
in
dec
test
lretw
sub
negl
lahf
or
imul
mov
popf
ret
lods
push
sbb
mov
xchg
lds
outsl
cltd
sub
push
jb
jae
mov
push
jle
fnstsw
mov
lds
push
test
sub
lea
fdivrl
iret
es
lea
cmp
fstps
lods
xor
cltd
mov
or
sub
push
fildll
cli
aas
imul
popa
mov
cmp
adc
cmp
dec
dec
mov
jmp
jge
ret
cmc
fildll
fisttps
inc
in
out
arpl
out
dec
rclb
repz
jns
mov
pop
stos
mov
stos
push
test
bound
inc
adc
xchg
popf
cmp
cmp
cli
pop
xor
inc
mov
mov
cmp
mov
mov
add
xchg
and
mov
stc
jmp
or
jb
rorl
ret
sbb
mov
out
xchg
push
mov
inc
mov
inc
jg
and
popa
cmc
sub
jno
lock
fsubl
out
cwtl
mov
and
adc
jae
fisubl
scas
push
ds
add
sub
test
mov
push
out
lods
cmpb
push
xchg
bound
lcall
push
push
loopne
cld
sbb
imul
pop
pop
mov
fisubrs
js
fcmovu
pop
sbb
jne
out
mov
sub
in
cmp
sbb
inc
cmpsl
out
scas
mov
pop
iret
or
cmp
xlat
std
and
sub
and
push
xor
sub
lcall
xchg
sbb
add
xchg
enter
sti
cmp
lcall
push
adc
fisubrs
ret
or
stos
mov
into
and
fldt
jae
ret
and
scas
sbb
rorb
mull
pop
cmp
test
sub
scas
fsubrp
cld
outsl
pop
ss
popl
iret
or
outsb
cld
fnstenv
or
je
jecxz
insl
and
jmp
dec
popa
mov
test
pop
inc
ds
pop
xor
mov
stos
gs
xchg
pop
ljmp
mov
mov
push
pop
and
xor
mov
push
push
shll
ja
dec
sbb
push
imul
cltd
xchg
and
push
in
int3
out
negl
icebp
cmp
pop
xor
mov
mov
icebp
cmc
push
xchg
and
mov
lcall
mov
enter
sbb
jle
xchg
outsl
lods
mov
or
push
in
sbb
pusha
negb
adcb
jae
movsb
pop
stos
push
mov
into
in
pop
dec
hlt
mov
pop
or
mov
in
sub
inc
ja
ljmp
ret
and
stos
aas
cmpsb
stc
shlb
pusha
push
call
and
xchg
das
dec
pop
hlt
inc
test
inc
rcl
imul
lds
jl
push
les
fimuls
negl
push
pop
xchg
and
xor
lods
or
cli
lcall
jnp
mov
xchg
gs
xor
jmp
imull
jbe
shll
sub
mov
in
xchg
jnp
sti
aas
stos
lret
mov
cmp
enter
push
dec
xchg
fs
cmp
repz
clc
cli
fidivl
add
call
aad
xchg
xchg
mov
adc
inc
inc
cmp
add
in
mov
mov
push
fucomi
or
push
arpl
fldenv
ljmp
aam
pop
pushf
mov
mov
dec
jbe
test
adc
stos
mov
orl
push
pop
std
shlb
mov
inc
add
dec
aad
mov
fstpt
out
sbb
mov
adc
test
push
scas
ds
jbe
call
and
or
mov
cs
fld
mov
jo
mov
xlat
jno
outsl
mov
addr16
sti
jbe
fadds
in
and
call
xchg
dec
les
sub
push
push
cmpsb
fs
xchg
rolb
dec
mov
movsb
enter
in
aam
outsl
lahf
sbb
add
mov
sarl
xchg
cmp
jl
lret
inc
xchg
push
scas
clc
mov
in
dec
inc
sahf
clc
inc
jnp
and
in
popf
sbb
dec
mov
fcompl
jb
xchg
cmp
jbe
mov
dec
stos
pop
inc
xchg
xchg
pop
jbe
mov
xchg
pop
out
imul
and
xor
outsl
add
or
mov
popf
popa
inc
or
pushf
mov
inc
jns
xor
and
std
fidivl
sbb
ds
scas
lea
inc
fimull
push
jmp
mov
ret
das
xor
cmpsb
jae
mov
mov
dec
pop
push
xchg
icebp
mov
shrl
inc
mov
sbb
dec
movsl
dec
xor
pop
jecxz
dec
cmpsl
xchg
outsl
sub
adc
out
sbb
pop
jecxz
rorb
cli
das
rol
push
insb
sbb
inc
dec
dec
and
stos
dec
push
jle
das
in
push
mov
mov
xchg
ds
jmp
ss
loope
jb
imul
into
sbb
adc
sub
int
adc
test
cmp
pop
stc
push
lahf
ret
addl
test
jecxz
movsl
sbb
mov
push
dec
or
imul
lds
pushf
gs
and
lds
jmp
sub
ss
arpl
cwtl
jg
add
dec
repnz
inc
adc
ljmp
jbe
push
rorl
int
jmp
or
in
shr
push
dec
mov
jmp
stos
popf
in
daa
sahf
sub
mov
and
pop
jge
cwtl
fs
ss
pop
sbb
sub
xlat
pop
jp
sub
bound
outsl
jb
fptan
sbb
or
mov
leave
push
inc
loop
mov
mov
push
maskmovq
testl
out
mov
push
inc
pop
fwait
shr
xlat
stc
or
push
fiaddl
pop
out
adc
jno
je
dec
cmovb
sahf
mov
ljmp
jecxz
icebp
rsm
dec
dec
lods
cmp
xchg
mov
push
adc
fisubrl
pop
mov
out
loopne
inc
addb
inc
int
inc
cld
arpl
sub
sbb
and
xor
outsl
mov
cmpsb
repnz
aam
ja
in
mov
mov
aad
test
push
std
addr16
adc
and
add
add
jecxz
adc
sub
inc
mov
xchg
ja
dec
pop
adc
adc
orl
dec
mov
scas
fsubr
pop
mov
mov
mov
loopne
incl
mov
inc
fdivl
clc
add
fdivrl
daa
mov
fldenv
mov
or
in
jne
jecxz
insl
fs
cmp
mov
mov
mov
out
clc
inc
sarl
dec
xchg
test
shll
mov
movsb
leave
sub
inc
jmp
inc
push
lcall
cmpsl
mov
test
xchg
lahf
shlb
fldenv
lods
inc
test
add
cli
dec
pop
cmc
rcll
sbb
mov
hlt
push
jnp
mov
mov
nop
mov
xor
imull
jl
or
sub
mov
xlat
jns
sar
jg
push
loop
js
stc
push
daa
pop
xor
sub
mov
cmp
jne
stos
xchg
std
jne
xchg
jno
ja
test
shrl
and
mov
aad
sbb
lods
pop
call
aam
cmp
lock
rcr
pop
mov
imul
fldt
sbb
cld
or
rcrb
in
movsb
inc
rorl
icebp
out
insl
flds
adc
das
jmp
push
negl
push
loop
mov
cli
xor
add
cmp
js
pop
in
rcrb
fwait
in
bound
sbb
or
cmpl
mov
and
sbb
cli
imul
sub
pop
jae
aaa
mov
stc
cmp
xor
add
out
cmp
sbb
push
xor
test
sahf
or
or
sbb
pop
inc
xchg
enter
cmp
je
std
pop
and
cmp
jecxz
inc
subl
mov
sub
js
test
inc
xchg
pop
xor
jnp
in
xor
loopne
popl
xchg
inc
mov
add
mov
mov
movsb
cmp
add
inc
pop
arpl
push
adc
sub
outsl
mov
mov
sbb
les
fs
cmpsb
js
pop
setge
imul
ret
push
or
jne
jp
jg
shlb
pop
and
or
cmp
pop
lea
xlat
push
shlb
fsub
test
mull
sbb
ret
lret
cld
jle
andl
xchg
lcall
adc
and
adc
mov
sbb
xchg
dec
lods
andb
or
outsb
stos
cmp
add
dec
or
add
faddp
cmp
adcb
pop
ret
lahf
mov
xchg
int3
loopne
jne
cs
push
cmp
shlb
dec
push
mov
shlb
sti
xchg
xlat
pop
and
push
fld
sub
xchg
icebp
dec
ret
out
mov
and
cmp
jbe
cmp
sbb
mov
imul
and
jmp
dec
ret
mov
movsl
movb
stos
outsb
xchg
lea
fwait
aaa
nop
jbe
ret
lret
dec
int3
or
cmpsl
rorl
xor
addr16
cmp
mov
arpl
setg
inc
push
stc
cmp
push
out
mov
andl
mov
mov
jge
xchg
ja
xchg
mov
inc
push
popf
cmp
rcl
aas
mov
inc
in
add
sub
adc
push
repz
std
mov
mov
hlt
xchg
jns
and
push
lods
icebp
pop
dec
jle
insb
int
pop
inc
pop
sbb
jb
ds
or
sbb
inc
cmp
fsubl
pop
hlt
and
dec
pusha
mov
subl
hlt
cwtl
rcrl
jp
gs
xchg
mov
push
mov
dec
cwtl
ret
nop
jl
pop
jnp
rcrb
in
aad
js
ret
cltd
xchg
enter
mov
or
inc
ljmp
scas
jae
rorb
xor
adc
lea
mov
stos
in
out
out
pop
or
out
inc
pop
sub
pop
push
push
fs
dec
mov
mov
mov
push
dec
and
xchg
test
in
or
mov
sahf
cmp
pop
or
fdiv
std
push
fisttps
popl
subl
aaa
fwait
xlat
sti
xlat
xor
mov
aam
sahf
sbb
and
mov
pop
push
sti
sti
sbb
call
cmpsl
jl
add
aam
adc
gs
hlt
dec
pop
mov
push
jne
popf
xor
out
jo
sbb
xchg
add
mov
pop
dec
popa
loop
or
adc
and
mov
jo
push
push
cmp
pop
cmp
into
scas
outsl
cld
or
push
add
pop
in
mov
jae
jecxz
dec
pop
jb
xorl
call
push
xor
imul
jnp
lret
dec
inc
js
idivl
dec
push
pop
push
ljmp
data16
rcll
inc
pop
mov
sbb
cmp
add
adc
jmp
and
es
cli
pop
test
jle
mov
rolb
pop
repnz
test
daa
out
mov
push
cmp
fadd
sub
lahf
out
sbb
repnz
cmp
cmp
rol
rorb
call
fiadds
std
mov
int
or
out
pop
xchg
das
fiaddl
sub
add
mov
mov
sub
shrl
add
mov
bound
push
dec
js
sar
movsl
enter
add
enter
push
mov
data16
aaa
call
cmp
aas
lods
xor
sub
negl
add
pop
sahf
loopne
sbb
stc
and
in
sub
fcmovb
scas
mov
es
gs
aad
loope
sub
push
jle
rolb
mov
sbb
and
loope
nop
xchg
xchg
inc
adc
or
and
mov
decb
xchg
adc
int3
push
adc
xor
push
inc
stos
adc
jmp
pop
les
or
cwtl
idiv
inc
inc
xor
xchg
sub
xor
add
stc
call
repz
mov
scas
mov
xchg
xor
outsl
imul
loop
sub
arpl
sbb
jns
sbb
je
xor
sub
hlt
jg
movsl
imul
sub
ret
pushf
out
dec
inc
stos
lods
dec
cmp
mov
decb
enter
sbb
ljmp
loopne
mov
pop
pop
movsl
xchg
andl
testb
pop
cs
sbb
stos
pop
add
jmp
jo
out
ja
movsb
pop
js
xchg
outsb
push
arpl
ljmp
or
out
addl
sub
and
pop
flds
rolb
movq
mov
cmc
shl
insl
xor
sbb
mov
dec
fdiv
jae
pop
xchg
jns
fldl
fdivs
leave
xchg
jle
icebp
fidivl
push
in
and
xor
data16
or
daa
loopne
xor
ja
cmp
aam
scas
and
leave
push
stos
sbb
in
pushf
jbe
dec
xor
mov
dec
loopne
push
xchg
enter
xchg
std
fdivp
dec
push
enter
scas
mov
lcall
add
arpl
fs
mov
pop
push
mov
adc
jecxz
insb
mov
or
rolb
lock
add
xchg
jne
fwait
xor
cmp
repz
jo
stos
jae
adc
dec
lods
insb
mov
rorl
rorl
jbe
and
add
movsl
xor
push
fldcw
jno
sbb
push
shl
or
sbb
sarl
cmpsl
ja
and
push
in
lret
xchg
cltd
in
jg
ljmp
push
mov
pop
jno
push
icebp
or
xchg
inc
popa
jl
in
mov
jb
push
sub
popf
sub
mov
adc
les
push
js
sub
js
sub
mov
bswap
jge
sti
clc
sbb
mov
sbb
sar
test
add
data16
mov
dec
xchg
dec
sbb
sbb
and
lahf
sub
lods
add
jl
xchg
addr16
jns
mov
in
or
adc
xchg
jg
mov
xchg
pop
push
sbb
pop
js
inc
call
stos
pop
hlt
pop
push
inc
lret
push
fs
ljmp
dec
and
rcrl
arpl
mov
cmp
push
add
sub
add
pop
mov
mov
and
inc
jmp
or
test
push
arpl
inc
xchg
mov
ds
or
inc
and
pop
push
cmc
lock
pop
dec
scas
xor
adc
jge
mov
xor
or
xchg
in
psubd
inc
arpl
xlat
movsb
rcr
lahf
inc
mov
push
addb
sahf
movsb
dec
or
hlt
add
gs
repz
orl
inc
inc
cmp
push
push
and
pop
test
xchg
es
das
xor
pop
stos
shll
inc
stos
adc
call
dec
fldenv
out
cmpl
and
mov
pop
mov
xchg
mov
in
pop
sbb
jo
les
mov
dec
push
fldt
sbb
cmpb
xorb
inc
mov
and
nop
add
pop
std
mov
outsl
rcrb
inc
jnp
filds
jmp
lret
mov
cltd
pop
hlt
mov
pop
sar
imulb
push
dec
push
or
xchg
mov
pop
jno
sbb
cmp
mov
les
je
clc
aad
ret
xchg
fadds
jmp
sahf
aad
inc
ret
jl
xor
adc
inc
ds
jo
call
cmp
aad
aas
dec
inc
addr16
mov
mov
pop
rcrb
mov
or
jge
push
test
and
js
sbb
jmp
movsb
test
sbb
sbb
xchg
cmp
pop
cltd
push
out
xchg
push
gs
enter
adc
popf
jns
popa
cmp
test
add
ret
test
jae
sbb
xchg
lock
mov
lock
jle
pop
mov
leave
inc
es
sub
ret
sub
push
rcrl
jg
cs
lcall
rolb
push
sub
adc
and
sub
sbb
jl
sti
mov
ret
and
mov
inc
push
xor
out
lea
add
psrlw
inc
adc
les
cltd
dec
imul
stc
arpl
add
jae
dec
fsubr
out
push
mov
adc
push
js
imul
and
mov
sti
mov
pop
jp
sbb
lahf
rclb
add
mov
in
or
and
inc
xor
jmp
mov
or
sub
daa
ret
mov
push
mov
push
xlat
jmp
cmpb
fwait
cmp
xchg
dec
nop
jge
out
mov
fstps
pop
add
adc
cli
adc
inc
cmp
and
mov
xchg
cwtl
cmc
daa
sub
outsb
into
sub
inc
je
lret
ljmp
sahf
mov
fdivrl
das
or
lret
and
call
sbb
jbe
mov
xchg
imul
mov
push
stos
dec
loope
lods
pusha
rcl
ret
sti
lods
mov
rcl
ror
popf
call
cmpsl
xchg
cwtl
ja
mov
push
pop
jno
rolb
push
adc
test
xlat
test
cmp
outsb
cmp
mov
test
sarl
kmovw
mov
les
lea
std
jne
sub
popa
clc
push
fcompl
adc
jmp
shll
sbb
hlt
cmp
ret
cmp
push
and
sub
sbb
inc
je
fcomps
sbb
xchg
push
mov
xchg
inc
pusha
sti
mov
mov
sbb
les
ja
movl
mov
out
cmpsl
mov
out
adc
shl
stos
enter
push
int3
cmpl
add
in
xchg
dec
in
fldenv
mov
daa
data16
and
sbb
ret
subl
pop
out
xchg
cmpsb
call
out
iret
xor
les
inc
inc
or
mov
push
cmpsl
and
sub
mov
push
jno
icebp
in
repnz
pop
movsb
out
stos
pop
jne
gs
jmp
adc
insl
xchg
cmpsl
xlat
loop
inc
and
adc
nop
enter
mov
mov
add
jp
das
or
and
jmp
lcall
fdivrs
bound
mov
in
ret
add
inc
xchg
fsincos
in
jecxz
push
popf
sub
inc
xchg
dec
cwtl
ror
add
jecxz
adc
test
insb
fwait
insb
clc
mov
das
xchg
and
stos
mov
mov
inc
cltd
dec
or
dec
popa
daa
mov
sahf
and
dec
pusha
pop
push
cli
shll
sarl
or
pop
cli
fwait
loopne
ror
insb
mov
pop
adc
xor
xor
mov
sub
adc
and
push
lea
out
mov
pop
push
dec
push
aad
sbb
xchg
out
xor
outsl
xchg
mov
out
lods
adc
popf
xor
testb
decb
scas
js
sbb
push
push
arpl
or
lods
inc
jmp
lods
xlat
mov
jo
fidivrs
ja
ffree
call
aam
inc
xsha1
cmpsb
or
rcrb
lods
xchg
sub
dec
pop
bound
sub
pop
mov
outsb
rcr
add
pop
mov
mov
xor
outsb
or
xchg
dec
pop
add
add
test
sbb
hlt
mov
sub
es
cmp
int3
data16
data16
or
ljmp
dec
push
lods
pop
stos
pop
mov
adc
sbb
or
cmpsl
fmul
mov
push
movsb
cmp
mov
jmp
out
test
inc
das
aas
loope
call
or
push
je
out
xchg
or
dec
push
or
loopne
dec
pop
dec
lods
cmp
xchg
xchg
sti
mov
and
sub
xlat
lods
xor
popf
xchg
sub
pop
jns
jno
mov
hlt
add
inc
rolb
movsl
pop
mov
adc
test
clc
mov
insb
sbb
adc
or
add
scas
sbb
jne
in
aaa
fsub
pop
xor
data16
ljmp
push
mov
lods
and
pusha
ss
cmp
sub
sbb
insb
jle
dec
gs
push
xor
lahf
outsl
bound
gs
adc
cli
mov
inc
ja
stc
mov
lods
dec
sub
mov
sub
notl
jp
mov
sub
jb
insb
loop
cmp
mov
hlt
mov
ss
push
rol
xor
mov
xor
ja
dec
xchg
ljmp
int
lahf
roll
dec
cwtl
fs
jl
or
in
nop
mul
sarl
adc
lret
scas
pop
inc
jecxz
addr16
ret
mov
scas
aad
sbb
fsubrs
pop
pushf
aas
mov
add
xchg
mov
cld
sub
sbb
data16
movsb
sub
jb
inc
gs
sub
cwtl
pop
sti
mov
mov
cmc
out
push
mulb
add
movsl
sub
icebp
pop
in
push
inc
jnp
pop
fs
mov
xchg
jae
pop
jno
pushl
sub
or
mov
fisttps
pop
ja
cmpsb
and
iret
int3
arpl
fdivl
outsl
and
sbb
gs
push
sbb
outsb
adc
pop
mov
je
xchg
out
nop
out
mov
push
pop
mov
ljmp
lea
fcompl
add
sub
ja
or
mov
add
push
scas
scas
std
push
sbb
push
rclb
enter
push
inc
lods
ret
dec
dec
mov
adc
adc
push
pop
xchg
mov
push
fildl
xchg
dec
pop
mov
cmpsb
mov
test
nop
mov
xchg
xor
mov
and
sarl
out
add
inc
push
ds
xor
cmp
ficoml
repnz
cmp
leave
dec
jno
mov
jg
adc
push
mov
sub
fstpl
in
cmc
test
das
jge
bound
jp
sub
push
push
movsl
and
fstl
pop
add
and
cmc
mov
xor
cmp
mov
cmp
xor
loop
push
lret
pop
sub
and
fdivs
cmp
in
fisttps
push
add
jg
mov
popa
adc
and
test
aam
xchg
bound
jmp
push
mov
xor
mov
pusha
movsb
inc
lods
ret
pop
xlat
dec
adc
pop
or
lods
nop
sbb
dec
push
sbb
ljmp
rorb
pop
imul
push
dec
subl
arpl
aaa
mov
mul
mov
xchg
push
adc
xor
sbb
mov
adc
out
call
insl
push
xchg
outsl
out
lock
js
cmp
mov
aas
inc
sbb
or
add
imul
mov
jle
dec
test
leave
mov
xchg
push
cmp
adc
enter
stos
xchg
or
gs
lods
pushf
mov
dec
les
pushf
or
in
push
les
clc
dec
mov
xor
xlat
mov
inc
mov
int
dec
mov
mov
jbe
mov
scas
add
stos
clc
sbb
push
pop
stc
jmp
mov
test
mov
dec
mov
inc
fwait
adc
jo
sub
push
lcall
xchg
dec
es
push
pop
in
xchg
adc
in
mov
nop
xor
subb
out
or
mov
test
test
adc
ljmp
cmpsl
xchg
cmc
jb
notl
lcall
insl
scas
mov
call
adc
jnp
dec
add
jge
push
and
inc
popf
push
xchg
loopne
enter
daa
fnstcw
xlat
data16
pop
push
out
dec
popa
popa
push
pop
sbbb
mov
lods
rcl
pop
lret
arpl
xor
sbbl
ret
jnp
repz
fadd
pop
les
popf
sbb
ret
adc
std
jae
push
push
mov
mov
xchg
stc
in
in
sti
jb
enter
adc
mov
or
and
cmp
push
add
fcompl
jmp
popa
pop
data16
movsb
test
and
inc
jo
addr16
mov
dec
out
push
or
mov
sahf
cmp
enter
call
imul
mov
mov
add
iret
sbb
inc
xchg
push
sbb
inc
test
jg
test
mov
pushf
into
std
jl
xor
mov
jno
jno
std
repnz
xchg
xchg
mov
push
xchg
leave
sub
adc
cmpsb
call
xchg
mov
inc
lcall
xchg
outsb
and
out
sub
dec
cpuid
scas
mov
lods
mov
xchg
sub
xlat
out
imul
and
add
loope
and
adc
or
fdivs
andb
jmp
imul
fsubp
mov
aad
and
inc
inc
dec
fbstp
xor
std
leave
jno
adc
push
movsb
lret
stos
cmp
sub
push
xchg
insb
mov
imul
shl
push
imul
sub
mov
rcrb
aam
rcll
jmp
mov
inc
fwait
ja
test
pusha
jle
jecxz
into
repz
and
fstp
lret
mov
sub
stos
inc
popa
sar
neg
scas
aam
out
sbb
sbb
mov
js
out
push
repz
mov
les
jae
cltd
adc
inc
xor
cwtl
xchg
jge
out
jp
iret
dec
jnp
xor
adc
out
stc
mov
xchg
add
jle
inc
in
mov
xlat
fildl
imul
lahf
aad
enter
sub
out
adc
cmc
fisubl
or
aas
jo
adc
aaa
inc
movsb
mov
sti
shl
sbb
jns
addr16
add
cld
jle
lock
ds
repnz
push
popf
addr16
lock
and
cmp
mov
sbb
nop
mov
out
mov
imul
adc
fnsave
jle
loop
or
cmp
stos
insl
pop
add
mov
ja
test
std
fldcw
pop
loopne
mov
loop
or
cmpsl
cmc
xchg
iret
jecxz
inc
pushf
sub
and
xorl
icebp
cwtl
das
fwait
test
in
popa
dec
adc
jns
pop
xor
ficoms
push
mov
xor
imul
shlb
popa
pop
clc
and
mov
repz
jns
pop
and
pop
pop
sahf
ds
inc
or
out
adc
jmp
shr
mull
sbb
push
xchg
sub
lret
cmp
iret
xor
lock
lea
add
test
push
lods
dec
pusha
pop
orl
roll
sbbl
daa
and
incl
sub
jp
imul
jg
popa
loope
lret
in
pop
stos
sub
jns
leave
add
test
scas
or
xor
or
or
lahf
pushf
scas
sbbl
shl
data16
loopne
icebp
or
loop
or
cmp
mov
push
cmp
stos
or
testb
stos
in
dec
imul
ret
cmp
in
out
mov
xor
roll
sub
loop
push
pop
ss
xchg
outsb
dec
mov
les
in
jbe
mov
xor
in
les
movsb
shll
fldt
repz
xchg
in
popa
mov
mov
insb
dec
jb
and
dec
leave
int3
mov
push
and
jae
call
mov
filds
jg
repz
out
jns
ror
int
adc
loope
movsl
cmpsl
mov
xor
ljmp
xchg
sbb
or
add
jns
sbb
mov
mov
movlhps
prefetchnta
aas
out
rolb
cld
sub
ret
pop
ljmp
sub
cmp
mov
in
fidivl
test
loope
xlat
dec
mov
push
sbb
xor
call
push
shlb
mov
jl
mov
mov
pop
aam
xor
dec
dec
sub
ss
ljmp
pop
movsl
fprem1
test
std
pop
movsl
xchg
mov
jae
lea
sbb
es
jbe
out
xor
dec
fildl
mov
inc
aaa
and
mov
mov
fists
inc
inc
ja
out
ljmp
pop
adc
cltd
mov
mov
aad
aas
jle
addr16
scas
js
push
xchg
xor
je
iret
mov
aam
shr
xor
clc
push
je
jbe
dec
lcall
add
ret
icebp
mov
movsb
enter
mov
fwait
fwait
xchg
add
int3
jmp
jbe
pushf
jge
inc
xlat
mov
xlat
mov
mov
xor
mov
mov
add
inc
jl
sbb
ret
aad
mov
xchg
cli
mov
pop
popf
sbb
xchg
dec
add
clc
je
in
adc
test
mov
xchg
sbb
add
outsb
lea
movsl
cmp
push
icebp
inc
push
push
xchg
sbb
pop
cmpsb
sbb
int
sbb
mov
pop
into
test
add
cmp
xorb
test
test
ret
and
push
fisttpl
arpl
into
cmc
mov
inc
out
call
lods
sbb
leave
orb
ret
sbb
jle
and
pusha
mov
inc
fcmovnbe
add
les
icebp
lds
clc
adc
imul
arpl
or
xor
loop
jl
xchg
sahf
push
lret
lods
adc
rcr
lods
pop
mov
addr16
push
add
scas
pop
stos
js
std
and
and
mov
icebp
cmp
mov
rol
cs
push
mov
vcomisd
mov
lret
cmc
out
rcr
cmp
data16
jae
mov
in
in
sub
pop
add
lret
mov
shll
add
cmp
lods
push
inc
fmull
jae
jne
sbb
lods
notb
cmp
fdecstp
dec
in
outsb
inc
or
jbe,pt
fdivrs
out
ret
loope
adc
lods
push
xor
test
test
pop
into
push
aam
mov
add
sbb
outsl
mov
and
loopne
outsb
sbb
jno
movsb
out
xor
daa
mov
andl
shrl
lds
mov
enter
push
scas
shll
nop
in
gs
orb
push
push
mov
mov
fisttpl
loope
fs
mov
sbb
int
aas
cld
sahf
leave
rcrl
fsubr
outsb
xchg
mov
push
nop
jnp
ljmp
jp
aad
push
leave
inc
dec
pop
inc
jnp
fcoms
sub
inc
idivl
push
lods
mov
lds
cmp
sub
lahf
push
iret
mov
cwtl
mov
and
int3
dec
mov
repz
insl
dec
pop
fiaddl
fisubrs
sahf
pop
mov
push
repnz
inc
imul
jp
aam
cmp
mov
je
aad
add
adc
aaa
ror
or
xor
out
sahf
in
je
mov
push
or
aaa
or
inc
add
pusha
frndint
int
push
out
adc
andl
jo
test
inc
cmp
cmp
xor
xchg
add
or
mov
cmp
push
pop
push
and
dec
test
sbb
jbe
imul
xchg
mov
mov
outsl
lock
out
and
mov
push
aaa
sbb
and
je
mov
jno
cmp
enter
push
orb
sarl
subb
xchg
sbb
push
sub
jae
inc
pop
adc
add
mov
or
lahf
mov
mov
test
imul
shrb
jb
mov
daa
xchg
xlat
mov
mov
fisttps
dec
jne
add
push
rol
dec
insb
cmp
ret
pop
fwait
sbb
sub
imul
dec
push
test
aaa
subb
cwtl
incl
lds
out
mov
enter
lea
ja
jmp
jle
nop
addr16
stc
cld
mov
add
aad
push
cmp
cmp
pop
mov
xorb
mov
sbb
fdivs
xorl
xchg
clc
outsl
push
mov
or
cmp
lret
cmp
jle
popa
mov
mov
or
movsb
cwtl
add
dec
or
sbbl
add
and
or
xchg
cwtl
mov
fistps
mov
sbb
fbstp
test
xchg
fnstenv
movsb
test
jmp
arpl
shll
pusha
mov
mov
xchg
stos
jbe
push
or
mov
cmpsl
ret
sbb
test
fistl
data16
jg
sbb
xor
push
or
popf
cmpsb
aaa
pop
dec
pop
pop
xchg
js
cmpsb
sub
jns
es
negb
add
stos
or
and
xor
lcall
pop
in
sbb
js
dec
dec
push
jp
les
push
jb
out
cmp
jne
inc
outsl
mov
adc
sbb
adc
xor
cmpsb
add
int3
cld
jecxz
sub
sarb
adc
in
lods
inc
jmp
hlt
roll
jb
adc
lea
pop
xchg
lock
outsb
mov
pop
cs
pop
cmc
cmpsb
adc
cmp
lods
int
movsl
and
shlb
daa
mov
movsb
mov
mov
and
testl
inc
or
out
mov
jmp
and
out
addr16
cmp
lds
nop
stos
pop
mov
ss
imul
mov
es
pop
adc
dec
out
cld
loope
mov
lock
sub
push
mov
mov
test
push
ljmp
dec
pop
cmc
xchg
cmpsl
sarb
jmp
ss
ja
testl
jnp
cmpsb
stos
push
ljmp
pushf
jg
push
cld
setge
xor
dec
sbb
jne
push
push
loop
add
lods
divl
es
cmp
jg
clc
or
add
push
and
leave
xchg
arpl
pushf
inc
aas
mov
std
jne
mov
mov
popf
or
or
dec
sbbb
dec
pop
jae
andb
add
inc
adc
inc
loopne
inc
and
adc
pop
out
jge
repz
mov
sub
je
sbb
ror
std
out
inc
adc
xor
adc
je
stos
cmpsl
sub
cmp
out
scas
fildl
addr16
je
hlt
cmp
scas
xchg
fisttpll
inc
cwtl
insb
mov
adc
int3
popf
pop
lods
lret
ss
clc
jo
hlt
cmp
js
test
mov
or
aam
cltd
adc
add
push
cld
ret
pop
pop
enter
mov
add
jns
std
data16
sbb
mov
xor
inc
cmp
clc
jo
notb
dec
daa
subb
daa
stos
xor
loop
movl
inc
dec
and
or
mov
jae
mov
pushf
sbb
fstl
dec
mov
xchg
clc
add
dec
jo
jecxz
adc
in
add
rcl
cmpb
test
sbb
push
fidivl
cmpsb
dec
data16
pop
and
inc
push
dec
shr
bnd
push
roll
and
pop
pushf
mov
pop
or
xchg
pop
or
mov
pop
and
fcmovne
and
fiadds
mov
aaa
inc
and
bound
add
cld
lcall
jne
push
sub
data16
xor
pop
shlb
loope
in
lds
ds
sub
pop
in
and
stos
pop
jb
std
shll
call
int
repnz
mov
mov
popf
push
jnp
add
mov
push
jo
lock
sub
push
add
cmp
lea
push
cmc
push
repnz
jle
lods
mov
push
and
cli
jo
mov
data16
xor
push
xchg
dec
add
mov
stc
scas
sbb
adc
inc
adc
dec
push
mov
mov
pop
adc
in
cmp
mov
adc
ret
mov
sub
cmp
mov
pop
jo
mov
rorb
int3
xchg
cmp
mov
pop
dec
sahf
push
adc
icebp
addb
jnp
or
mov
mov
enter
xor
mov
sbb
inc
xchg
sbb
sbb
loopne
outsl
int3
pop
popa
sbb
lods
dec
in
cmpsb
pop
ljmp
xchg
push
push
mov
out
sahf
and
pop
and
insl
pop
pop
outsb
test
mov
ljmp
pop
jno
pop
push
push
push
lods
mov
fisttpl
cltd
in
je
clc
or
lods
fistl
or
les
cwtl
subb
adc
add
add
lock
xor
scas
dec
xchg
call
jg
mov
loopne
test
sbb
or
sbb
rolb
mov
imul
or
xor
cmp
inc
arpl
xor
mov
loop
pop
fcom
xchg
and
mov
cld
push
dec
data16
ljmp
push
jl
xchg
or
xchg
ja
lahf
dec
mov
ja
icebp
arpl
cs
mov
dec
stos
mov
dec
in
xchg
sbb
lahf
pop
std
movsl
cwtl
std
in
movb
iret
xor
jno
inc
xchg
jmp
add
xchg
pushf
leave
dec
xor
inc
sub
xchg
adc
jne
mov
push
adc
push
inc
call
xchg
cld
lret
enter
inc
xchg
pop
inc
or
js
rorb
xchg
jns
lahf
negb
xchg
add
scas
pop
fldl
loopne
cmp
mov
mov
dec
xor
and
adc
insl
push
mov
sti
cmp
add
pop
bound
cmp
push
enter
cmp
inc
jg
xchg
out
xor
enter
pop
rcll
adc
push
or
imulb
int3
lods
lods
cmp
adc
mov
int
push
sbb
dec
or
addl
push
cli
or
sbb
jae
daa
jae
stos
jp
out
sub
mov
mov
movsl
inc
inc
hlt
xlat
mov
and
dec
inc
lods
inc
into
xchg
pop
or
sub
push
add
push
inc
mov
decb
adc
sbb
push
jnp
push
pop
lahf
pusha
cld
lea
cmp
push
dec
pop
dec
cmpsl
outsl
rclb
popa
cs
xor
lret
push
hlt
movsb
pop
fldt
inc
pop
lods
notl
jmp
pop
and
pusha
loope
mov
adc
scas
pop
lods
movsb
iret
add
stc
movlps
push
cmp
and
hlt
into
rcrb
mov
sub
cmp
jae
xchg
pushf
push
les
aad
shll
push
mov
adc
jecxz
cmp
xchg
pextrw
mov
xor
xor
divb
aas
lea
mov
and
or
mov
sub
xchg
xchg
out
push
imul
sub
loop
in
dec
or
cmp
cmp
jle
xor
stc
add
xor
shll
rclb
lea
cld
call
mov
cltd
cmp
sub
lds
ficompl
clc
ds
dec
mov
imul
sbb
adc
xor
mov
jne
xor
cmp
sbb
add
outsb
fcomps
and
mov
ss
test
jnp
cmp
dec
movsl
xchg
iret
push
sub
mov
icebp
or
and
fs
xchg
sbb
scas
pop
loopne
scas
sub
lea
mov
lods
push
sahf
clc
les
mov
dec
js
adc
dec
sti
xchg
adc
or
cld
and
jno
shlb
fimuls
push
cs
xchg
and
subb
cli
mov
add
into
mov
adc
aam
rclb
sbb
in
dec
movsl
sar
call
pop
test
adc
fdivr
mov
shrl
test
sbb
imul
or
inc
adc
add
stos
rep
inc
jae
sbb
faddl
sub
sub
jle
in
aam
adc
push
ret
mov
mov
inc
test
xor
outsl
or
aam
pop
jg
adc
dec
sbb
cvtpi2ps
dec
enter
inc
xor
movsl
inc
rcl
test
outsl
mov
and
adc
fs
bnd
out
ret
sahf
adc
adc
dec
mov
cwtl
sbb
aad
std
push
jns
pop
daa
jl
add
dec
cmc
mov
in
and
inc
shl
dec
aas
xor
je
mov
popf
ret
and
mov
lahf
int3
add
fidivrl
sarb
es
pop
adc
neg
inc
cmp
ss
test
lahf
rcrl
lcall
cmc
flds
popf
cmp
cmp
push
js
shl
pop
jnp
out
pop
sbb
clc
jecxz
jnp
les
push
and
mov
stos
push
pop
imul
xor
fcmovnbe
movsb
mov
sbb
cs
adc
dec
sub
lods
jns
daa
sbbl
lcall
jp
popa
rol
cmp
adc
cwtl
push
sub
mov
mov
jge
out
idivb
mov
lods
stos
dec
arpl
push
xchg
fisubrs
push
rcrl
jg
jmp
test
xchg
sbb
ljmp
mov
sub
in
rep
shlb
jne
pop
cmp
mov
lds
loope
cltd
je
lret
aaa
aas
push
push
sahf
xchg
dec
scas
scas
cld
sahf
and
mov
sbb
mov
xor
inc
dec
rol
sbb
pushl
iret
mov
xchg
sbb
pusha
mov
in
je
dec
dec
ret
mov
test
jnp
sti
sub
pop
jl,pt
cld
xlat
cmp
shll
dec
repnz
mov
cmp
pop
int3
lods
es
jecxz
fimuls
out
jl
pop
addr16
mov
arpl
mov
out
inc
adc
lea
arpl
add
or
jnp
lds
loop
aam
test
jne
enter
mov
rorb
imul
vmovd
mov
shl
insb
mov
stos
insl
lcall
popw
in
imul
stc
mov
jne
dec
lea
cmpsb
adc
mov
fs
das
clc
popf
cmp
add
mov
filds
pop
cmp
pushf
fimuls
xchg
sub
aas
mov
inc
push
into
pop
fidivrl
fdivp
adc
jge
jl
add
xchg
pop
inc
pop
iret
add
ds
imul
mov
repnz
ljmp
ss
cltd
sbb
pop
fistpll
pop
xchg
and
or
fstpl
mov
lret
lret
out
inc
sub
sbb
dec
fwait
xor
ficoml
push
pop
pop
xor
stc
xchg
mov
add
pop
addr16
sub
and
push
sbb
xor
dec
inc
xchg
mov
ficoml
bound
xor
dec
cmp
bound
xchg
test
jmp
jge
jl
pop
mov
inc
inc
icebp
sub
adc
sbb
les
push
fldl
stos
xor
adc
aas
mov
outsb
iret
push
dec
push
or
add
cmp
scas
fisubrs
sbb
sub
lods
sbb
lods
mov
adc
lret
mov
adc
mov
les
or
cld
mov
inc
lret
enter
pop
push
loop
cmpsl
cli
das
xchg
popl
std
sub
rcll
xor
ss
scas
pop
aaa
jmp
pop
fldl
mov
pop
mov
loope
cld
pop
ds
cmc
mov
mov
dec
jno
adc
xchg
loope
mov
sarb
lds
cwtl
dec
jmp
cmp
jmp
mov
cmp
jo
xor
xorl
aaa
ds
jg
adc
repz
cmp
out
cmp
sbb
jnp
scas
adc
mov
in
gs
cmc
aam
pop
dec
mov
je
pop
test
jle
movsb
pop
stc
add
rcrb
fwait
xchg
adc
fisttpl
mov
vpand
mov
popa
pop
jg
insb
sub
jo
and
mov
fstl
pop
cli
insb
mov
jp
gs
xor
popa
in
inc
push
int
jnp
das
mov
inc
ljmp
dec
repz
sub
sahf
jmp
fs
mov
pop
mov
xor
jl
les
out
jb
popa
push
and
push
xlat
sbb
mov
jmp
shll
out
dec
scas
cmp
into
imul
or
test
xor
repz
or
cmp
movb
pop
mov
push
jo
notb
pop
imul
mov
or
and
cmp
test
sarl
add
push
mov
jae
jge
xchg
cmp
dec
or
cmc
xchg
mov
mov
mov
jne
mov
repz
sysenter
or
test
push
imul
xor
fldenv
adc
test
cmp
dec
mov
lods
gs
cmp
mov
mov
mov
push
add
push
ss
test
icebp
pop
jp
jne
push
lret
insl
addr16
repnz
inc
mov
mov
mov
test
rol
push
sub
mov
cmp
jae
mov
lods
in
sbb
aaa
mov
dec
xchg
inc
cltd
xchg
js
lods
inc
and
sub
xor
jns
cmp
sbb
fcoml
addl
stc
adc
adcl
negb
les
sbb
push
cmc
fwait
iret
sbb
fstpt
cld
and
adc
and
shlb
adc
push
ficoml
addb
fsubrp
out
sub
pop
imul
mov
jmp
add
imul
jmp
sub
xor
inc
inc
inc
js
sbb
xor
push
sti
data16
loope
and
push
push
call
daa
outsb
hlt
es
and
cmp
mov
filds
jne
add
sbb
mov
into
lcall
out
mov
xchg
mov
cmp
shrb
add
ret
inc
leave
jmp
fsubs
cwtl
mov
pop
mov
jmp
jbe,pn
clc
out
xlat
dec
scas
sbb
repz
cwtl
inc
jae
aam
or
mov
scas
mov
add
rcrb
mov
or
leave
dec
push
mov
in
pop
stos
std
push
or
push
ret
dec
test
daa
ds
lret
push
aas
test
insl
mov
icebp
fnsave
lea
iret
or
fstl
gs
out
scas
xor
pop
sub
fs
mov
cmc
pop
sbb
cli
dec
and
mov
mov
cld
push
sbb
cmp
and
in
push
pop
inc
xor
sub
fstpl
adc
mov
mov
dec
mov
sub
mov
xchg
push
mov
inc
arpl
cmp
fistps
out
fidivs
in
sub
mov
mov
popf
lret
test
inc
inc
or
pop
ja,pt
pop
iret
cmp
mov
dec
push
add
xchg
push
fwait
cs
jnp
shr
xchg
inc
in
and
mov
dec
rorl
nop
test
fdivl
cmp
rcll
addr16
shl
pop
ret
push
lcall
insb
inc
dec
loope
jae
or
xor
jle
and
dec
or
push
lods
mov
adc
int
push
sub
push
jp
jbe
mov
ret
mov
sub
notl
add
add
adc
push
scas
inc
ret
mov
outsb
inc
into
fwait
xchg
out
rcrl
mov
out
lcall
lret
test
jp
jnp
push
std
or
pop
pop
mov
rcll
dec
jle
cltd
nop
inc
jg
mov
jne
add
pop
dec
ds
clc
mov
push
aad
js
shll
pop
movsl
popa
sarb
fyl2xp1
mov
pop
std
js
pop
fadds
hlt
test
jo
cwtl
pop
lods
test
shll
subb
pop
xorb
pushf
push
in
scas
inc
mov
sub
rcrb
repz
mov
out
cltd
rcrl
xchg
mov
mov
lret
dec
inc
and
push
jne
add
sub
sti
dec
inc
movsl
out
lods
xor
insl
cmpsl
jne
js
ja
daa
jmp
xchg
cs
stos
ret
xor
sbb
mov
imul
loope
repnz
and
push
sbb
inc
je
cmp
jecxz
and
adc
or
jge
js
adc
stos
loopne
hlt
pop
cmp
fcmovnu
xor
sub
mov
adc
hlt
dec
push
mov
xchg
xor
cmpsb
sub
push
fnstcw
mov
aaa
mov
arpl
mov
pop
cmpsl
test
inc
and
adc
cld
jge
cld
adc
popf
mov
inc
jb
imul
push
ja
into
xor
mov
sub
adc
addb
in
nop
xchg
sbb
pop
movsb
jg
lock
mov
adc
leave
int3
dec
sbb
rol
sub
outsb
ljmp
gs
inc
in
or
int
in
je
in
sbb
push
xor
std
fidivrs
shlb
scas
and
mov
push
test
int
and
sarl
stos
adc
dec
loop
jbe
mov
call
std
je
out
test
xor
fistpl
xor
add
add
les
xchg
or
sbb
mov
int
mov
sub
mov
or
push
push
cmp
jno
insb
bound
sbb
cmpsb
xchg
in
js
mov
dec
cs
adc
loope
or
mov
sbb
adc
mov
or
movsb
mov
out
outsb
mov
lock
aas
mov
xlat
addr16
mov
pop
xlat
dec
push
adc
cmpsb
cmp
stos
enter
mov
mov
sub
dec
outsb
push
insl
xchg
mov
push
aam
push
pop
push
adc
in
cmp
push
or
sahf
dec
orb
adc
xchg
jmp
mov
adc
rcrb
xor
loope
and
mov
push
std
clc
fimull
mov
jle
fnstcw
cmp
mov
je
aad
ljmp
scas
or
jo
es
gs
add
test
fildll
mov
test
rorb
mov
push
mov
dec
jb
mov
xchg
xor
clc
sbb
add
sbb
mov
inc
adc
call
lcall
push
or
push
fs
fwait
inc
lods
cmpsb
mov
movsb
fidivs
and
jmp
icebp
mov
lret
popf
cltd
sub
or
push
xor
les
imul
fcoms
mov
sbb
inc
xlat
inc
mov
adc
mov
add
repnz
add
pushf
leavew
int
adc
ret
iret
adc
push
jmp
stos
xchg
mov
push
cltd
pop
xor
inc
jl
and
sub
mov
fimull
mov
int
test
pop
pusha
mov
jp
mov
xchg
mov
inc
rorl
adc
daa
in
xor
mov
test
out
push
jmp
sbb
stc
sub
sub
dec
divb
ljmp
xchg
and
jecxz
int
cli
or
repnz
push
push
lcall
mov
imul
mov
lods
add
int
and
add
and
ljmp
mov
pop
inc
les
jno
lret
push
push
int
push
pop
daa
lock
test
mov
repnz
dec
lods
movb
inc
dec
add
adc
lcall
pop
ljmp
cs
in
jnp
adc
mov
mov
int3
fs
loope
in
mov
push
add
sub
add
dec
loope
out
sbb
push
add
add
mov
aas
push
pushf
dec
call
add
test
fwait
cmp
into
daa
xchg
and
push
loope
movsl
je
test
clc
sbb
jl
out
arpl
jle
xor
jne
pop
push
imul
outsb
jae
loopne
xchg
adcb
mov
daa
fstl
pop
adc
sub
mov
jp
inc
es
mov
mov
inc
aaa
cs
sbb
hlt
push
stos
xchg
pop
lock
xchg
or
jmp
shll
addb
clc
mov
jl
test
shr
push
and
shl
mov
sbb
jecxz
enter
cmpsl
icebp
lea
and
fs
imul
push
cltd
imul
push
mov
arpl
ljmp
popf
cmp
push
loop
or
inc
enter
inc
or
add
mov
in
lret
pusha
sub
jbe
sbb
psrld
or
call
movsl
xor
sub
repz
test
clc
sub
or
out
push
out
jmp
push
push
sub
cld
pop
out
xor
into
into
pop
sbb
sti
enter
ret
or
sbb
sbbl
xchg
inc
ss
cmp
sahf
out
mov
cmp
sbb
mul
inc
jns
mov
mov
outsl
or
jns
cld
insl
push
add
jnp
aaa
mov
cmc
gs
dec
add
loop
inc
fcomp
shr
in
les
shrl
cmp
dec
repz
nop
add
mov
aad
aaa
inc
mov
call
mov
pushf
sub
lods
fildll
inc
test
jle
mov
xor
add
push
icebp
and
jg
dec
cmc
lock
cmp
and
mov
cmp
push
inc
xchg
incb
es
or
subb
mov
repnz
jno
ja
dec
clc
push
stc
sbb
pusha
bound
mov
xor
bnd
mov
pop
out
cmpsb
mov
ret
push
inc
in
icebp
push
jbe
xchg
daa
mov
adc
cmpsb
addr16
out
call
push
in
test
push
popf
xchg
sub
inc
es
int
insb
pushf
aad
adc
push
jle
inc
mov
loope
cmp
xchg
mov
mov
scas
mov
iret
sbb
push
ret
inc
leave
loope
int
or
movsb
dec
fdivrs
orb
inc
lock
mov
pop
pop
inc
add
cs
sub
pop
outsb
or
ror
movb
mov
push
imul
jle
fidivrs
cmp
mov
iret
cli
inc
sub
insl
fldl
into
cli
lret
movsb
cmp
mov
xor
lods
arpl
fldlg2
pop
adc
jb
std
bound
pop
jge
cwtl
stos
adc
movsb
jbe
mov
ret
mov
lret
loop
out
or
xchg
inc
fnsave
loop
in
add
jecxz
cmpsb
pop
fnsave
int
push
bound
js
dec
cmpsl
mov
les
rorl
add
cmp
dec
sub
push
and
fdivs
and
lret
inc
ret
xor
mov
lock
andb
popa
aad
adc
sub
movsb
sub
fisttps
fisttpll
lret
xchg
cmp
push
andl
enter
negl
mov
int3
xor
insb
pop
in
mov
fucomip
push
fdivs
mov
mov
sub
iret
jl
jb
jg
or
inc
stos
or
mov
jnp
sub
pop
insl
int3
loopne
js
cmc
jb
jg
cmp
add
sahf
scas
mov
inc
or
and
cs
or
jecxz
push
jge
ret
pop
pop
xor
cmp
imul
mov
ss
push
or
pop
or
xor
xor
dec
enter
ljmp
repz
ljmp
sahf
cli
les
xor
lret
mov
ss
in
lods
loop
mov
loopne
aaa
loope
sub
stc
insb
ret
repz
push
icebp
rcl
icebp
mull
dec
fnstsw
in
in
xor
sub
xor
lods
push
call
dec
sbb
shll
fldl2e
cld
decb
or
xchg
sub
or
stos
loope
test
xchg
jns
mov
mov
push
rorb
xchg
inc
cmp
clc
pop
popa
mov
mov
mov
outsl
push
xchg
xor
add
add
in
jne
inc
ret
pop
clc
outsl
popf
addr16
in
inc
mov
frstor
insb
pusha
xor
jns
lock
xchg
jecxz
mov
cmp
cmpsb
movsl
cmp
xor
cmpsl
dec
int
push
insl
ret
test
test
lret
and
and
movsb
mov
xchg
sbb
popa
mov
insl
xor
popf
jmp
jbe
xchg
outsl
sub
leave
jbe
pop
loope
movsl
sbb
pop
js
sub
dec
ss
pop
ljmp
xor
fistpl
rolb
mov
sbb
mov
jmp
aam
repnz
testb
lret
xor
add
loop
jle
xor
aas
jp
xor
sbb
mov
test
ror
push
lret
xor
imul
mov
xor
iret
inc
sub
movsl
leave
pusha
nop
adc
mov
jbe
mov
cmp
nop
mov
imul
inc
xor
fidivrs
sub
sub
xchg
stos
sub
xor
sub
stos
imul
push
inc
lcall
push
xchg
cwtl
add
jns
jecxz
js
je
adc
ficomps
sbb
jae
fsubs
adc
or
xor
pop
lods
es
and
sti
rcrb
jecxz
addr16
jmp
dec
syscall
push
and
cmp
adc
sub
lods
jb
push
fstpt
xor
jnp
aam
inc
and
cmp
ljmp
mov
xor
into
or
xor
push
scas
adc
sbb
hlt
sub
in
sti
or
dec
pop
cmp
loopne
out
jno
mov
or
add
lahf
pop
adc
push
push
subb
and
adc
push
faddl
jle
inc
and
popf
and
repz
mov
sbb
addr16
icebp
sbb
jne
jge
aam
mov
pop
or
clc
arpl
push
push
mov
cmp
mov
mov
inc
repz
cmpsl
enter
lahf
jecxz
push
data16
mov
inc
hlt
pop
inc
push
push
stc
mov
pop
push
js
sar
aam
jb
mov
jne
fsincos
xchg
jg
les
dec
stos
add
dec
xor
dec
and
push
clc
sbb
aas
jo
je
jno
arpl
scas
arpl
sbb
mov
cltd
jne
scas
inc
push
ret
pop
pop
mov
mov
outsl
imul
xchg
sub
rorl
clc
and
imul
cmp
xchg
push
xor
xor
jbe
inc
inc
mov
test
ds
test
jp
into
decl
jno
jbe
test
xor
fwait
sub
daa
adc
mov
rolb
pusha
stc
in
int3
sub
repnz
add
inc
call
test
jb
stc
fsubs
or
cmpl
xor
push
push
inc
arpl
cwtl
lret
sbb
je
cld
push
hlt
adc
stos
lahf
inc
jo
jecxz
clc
std
push
imul
shrl
dec
out
push
xlat
xlat
out
xchg
decl
adc
bswap
cmp
movsl
dec
dec
lods
out
pusha
loopne
fnop
jmp
lret
inc
and
mov
inc
and
sub
nop
jecxz
movsl
mov
div
out
mov
cmp
std
inc
add
mov
in
rol
inc
popa
out
subl
nop
nop
mov
loope
into
cmp
jnp
out
or
shlb
test
adcl
or
mov
lods
mov
ret
add
jno
ja
test
icebp
test
lods
aad
pushf
lret
pop
cmp
lods
cmp
sbb
jge
push
ror
sbb
mov
sub
cs
ds
mov
xchg
xor
js
jmp
iretw
mov
add
jb
or
out
mov
mov
shll
mov
jbe
ss
sbb
push
mov
lcall
mov
inc
iret
aas
in
inc
test
cltd
loope
aad
popf
daa
dec
bound
inc
mov
add
scas
data16
fucomp
lods
inc
push
mov
jg
push
and
xlat
cli
mov
and
add
das
jb
push
outsl
push
adc
cmp
scas
lret
pop
xor
rcl
pop
push
adc
dec
mov
jmp
xlat
ud2
mov
or
jo
lret
xchg
xchg
pop
jnp
mov
jp
insl
das
cwtl
inc
and
xchg
cmpsl
jmp
xchg
ret
daa
sub
push
popf
mov
push
or
gs
mov
int
jne
iret
test
jbe
adc
enter
mov
xchg
aam
pushf
popa
cltd
inc
sbb
repnz
jecxz
setge
out
sbb
out
xchg
push
adc
jnp
inc
fwait
push
dec
pop
int
sbbb
and
fnstcw
popf
mulb
sbb
mov
shll
mov
xchg
jae
push
addl
sub
adc
mov
cmp
dec
or
and
inc
xchg
inc
mov
mov
loopne
xchg
jae
sub
xchg
mov
loope
inc
push
repz
test
mov
dec
cs
and
imul
aaa
push
test
stos
movsl
cmp
and
leave
inc
enter
push
mov
insl
repz
jo
fldcw
xchg
cmp
xor
jns
pushf
test
fidivrl
lea
and
notb
and
in
xchg
in
loopne
pop
mull
mov
enterw
or
dec
into
jns
daa
cmp
jmp
add
inc
add
sub
mov
icebp
and
dec
jecxz
mov
outsl
bound
xor
add
ds
jle
xor
femms
test
out
mov
enter
cmp
inc
adc
mov
xor
mov
mov
imul
push
pop
fists
xchg
mov
aas
dec
lock
or
dec
sub
je
pop
mov
xor
xor
fcoml
sbb
jmp
inc
cmp
ss
dec
cmp
cld
lods
sbb
or
das
push
adc
mov
mov
fisttpl
push
shl
and
xlat
ret
jle
scas
xchg
pushf
and
pop
sbb
inc
das
mov
mov
imul
popa
jo
imulb
mov
push
ret
or
outsl
and
ficoml
aas
mov
fsubl
xchg
lock
mov
push
imul
pop
pushf
lret
icebp
mov
pop
ljmp
sti
xchg
mov
xor
negl
test
or
in
aas
sbb
inc
mov
xchg
fdivrl
out
mov
push
stos
ret
pop
inc
in
mov
push
repnz
jp
mov
pop
pop
sbb
or
cld
rcr
jne
jne
mov
ljmp
sbb
movsb
xchg
xor
mov
into
mov
mov
aam
and
jns
push
or
in
daa
lret
inc
movsl
mov
adc
mov
testb
mov
xchg
test
aaa
pop
mov
lret
fistps
or
out
adc
mov
inc
adc
add
xchg
inc
mov
loop
mov
outsl
std
jle,pt
mov
adc
in
cwtl
hlt
sti
adc
mov
shll
das
imul
xor
ja
addr16
mov
in
in
scas
xor
xor
inc
cmp
mov
addb
fucomi
mov
hlt
sub
mov
mov
mov
popf
cmp
push
push
test
aam
imul
test
sti
fldl
or
mov
inc
xchg
or
dec
pop
lea
xchg
call
int
cwtl
ss
ljmp
pop
pop
stos
xor
xchg
xor
and
inc
rcll
add
push
add
movsl
xchg
mov
xor
nop
or
and
scas
call
lcall
dec
mov
jns
jmp
cld
xchg
xchg
and
test
adc
mov
ja
cld
cld
dec
in
mov
and
jmp
leave
into
repz
int
std
pop
cmc
cmp
mov
bound
repnz
xchg
out
dec
mov
in
add
sti
fwait
cltd
movsb
sub
mov
jg
mov
xchg
out
popf
pop
push
daa
sbb
mov
fstpl
orb
ffreep
push
push
cld
arpl
clc
mov
cltd
mov
push
aaa
test
push
popf
add
out
lods
lods
dec
or
cld
xchg
sbb
mov
dec
mov
orl
inc
ljmp
jae
mov
stos
dec
xor
popf
jmp
cmp
dec
outsl
inc
mov
adc
push
inc
pop
inc
add
cli
inc
inc
clc
sbb
mov
adc
lahf
mov
test
ret
pushf
pusha
das
push
sarl
mov
in
mov
adc
sbb
xor
out
inc
std
jle
push
imul
push
sahf
shlb
jns
dec
lahf
rcrl
in
mov
add
pop
mov
fmuls
and
mov
push
cmpsb
inc
sbb
sub
dec
rolb
out
pop
sbb
jbe
cmpsb
insl
adc
mov
lock
pop
les
mov
or
inc
jae
cmp
cltd
out
dec
sahf
mov
aam
pop
sahf
sbb
mov
dec
idivb
adc
jge
inc
pop
jmp
pop
and
pop
data16
cmp
add
mov
loopne
cwtl
sub
cmp
popa
and
xor
push
dec
adcl
mov
cmp
push
cmpb
js
add
or
aas
das
and
sbbl
arpl
addl
push
pop
fistl
jns
cmp
or
stc
xor
cmpsb
insb
cli
push
out
adc
icebp
or
xor
jg
xchg
add
test
out
rcll
or
pop
outsl
mov
inc
or
lret
mull
pop
jno
out
popa
add
mov
out
pop
cmc
jmp
xor
cmp
or
inc
loop
sub
or
push
ljmp
inc
mov
mov
mov
imul
mov
outsl
xchg
inc
sbb
dec
cwtl
lds
test
mov
fcoml
andb
dec
insl
xchg
sbb
int3
ds
jg
add
mov
cltd
mov
pop
cltd
xchg
in
int3
lret
jp
rcl
cmovge
jle
xor
mov
stc
dec
stos
mov
cwtl
push
aad
inc
test
push
and
cwtl
rcl
and
sbb
jle
dec
cltd
out
ret
cmp
or
add
fnsave
push
xchg
adc
jae
call
xor
jl
adc
shr
mov
dec
push
aas
ds
push
aad
and
push
and
popf
rcll
push
dec
popf
inc
add
sarb
pop
sbb
mov
sub
imul
enter
out
loopne
pop
inc
pop
mov
out
mov
sahf
outsl
add
test
pop
xlat
ficompl
inc
insb
ss
xchg
cld
pusha
fimull
popa
adc
mov
xor
cli
xchg
jl
nop
lahf
lds
imul
or
pop
ljmp
test
sub
add
popf
jge
ret
mov
mov
dec
pop
repz
iret
push
pop
call
dec
subb
dec
or
push
addr16
mov
int3
cld
cmc
mov
test
adcl
inc
add
mov
out
sub
imul
jp
and
ss
adc
lret
pop
adc
add
push
imul
jmp
and
hlt
movsl
vmwrite
pop
lret
mov
cmpsl
stos
cmpsb
add
imul
mov
mov
inc
pop
sti
mov
aas
sahf
cs
push
mov
cmp
ja
loope
rorl
lahf
sub
mov
push
ret
nop
jmp
jns
mov
mov
daa
xchg
repnz
adc
xorb
jp
in
outsl
or
sbb
dec
jnp
in
lock
adc
and
dec
inc
mov
mov
mov
bound
popf
ret
jbe
cmp
es
mov
sub
jl
or
js
jge
or
mov
cmp
mov
js
pusha
cmp
lds
pop
mov
cmp
jp
ret
mov
fwait
push
mov
sub
lds
loopne
shlb
pusha
cmp
aaa
and
stos
add
adc
push
aaa
nop
pop
sub
cmp
pop
cs
pop
cli
pop
lea
mov
push
sub
pop
shl
pushf
xchg
movsl
or
stos
stc
mov
pop
sbb
in
in
add
lret
inc
shl
aam
mov
and
mov
sub
fnstcw
xor
push
cmp
jnp
test
gs
jl
and
add
lock
lock
sti
stos
stos
mov
inc
in
aaa
sbb
and
addr16
adcb
xchg
cmp
mov
icebp
std
mov
enter
insb
push
cltd
test
cmp
inc
nop
ss
xor
sti
push
fbstp
pop
cmp
cmpsb
inc
sbb
test
xlat
je
fildl
scas
in
roll
inc
fs
or
call
adc
popa
out
xor
pushf
and
repnz
or
pushf
or
fildl
xchg
mov
rcll
push
cmp
call
adc
lds
and
push
mov
xor
jo
push
nop
out
cld
ret
bnd
jmp
pop
aam
mov
xor
int
ljmp
xchg
xor
clc
ret
test
or
fmull
f2xm1
adcb
pop
xchg
add
pop
enter
repz
pop
push
imul
pop
popf
inc
add
push
cmpsl
jle
mov
cltd
xchg
out
sbb
cmp
adc
dec
mov
and
in
sub
ud2
xchg
rorl
sub
fidivrl
cmpsb
loopne
push
jne
pop
je
cmp
frstor
adc
mov
jnp
lahf
xor
mov
add
icebp
enter
push
rolb
xchg
mov
nop
xor
js
repz
push
stc
sbb
pop
mov
cmp
repnz
fisttpll
inc
lret
xlat
test
test
inc
jge
dec
shlb
dec
jae
repnz
in
and
loopne
mov
sub
push
shl
aas
test
push
aad
sti
scas
sbb
xchg
inc
rcr
sbb
jne
jnp
loopne
or
inc
cmp
aas
push
cld
dec
mov
pop
jne
insb
push
gs
mov
loope
mov
cwtl
or
adc
xor
lock
pop
xor
repz
xor
divb
dec
int3
es
xchg
stc
xchg
push
jbe
lahf
mov
cmp
sub
push
insb
push
out
fxch
xchg
repz
mov
and
mov
and
sarb
mov
in
loopne
push
nop
lcall
sub
ret
je
popa
push
mov
outsb
and
and
lea
push
movsl
mov
mov
mov
dec
inc
pop
xchg
or
imul
hlt
mov
ret
movsb
push
jl
sbb
mov
stos
popa
dec
sub
cmp
push
addb
bound
lahf
pop
pop
and
lock
xchg
jge
cmp
andl
int3
mov
dec
jnp
lock
cli
das
jbe
lcall
outsl
into
icebp
pop
int
xchg
aad
sahf
lret
insl
lods
add
fidivrl
push
das
jb
test
in
leave
jl
sbb
sbb
lret
push
dec
push
cmpsl
ljmp
mov
es
mov
mov
jmp
sbb
ljmp
scas
testl
lods
fs
in
aaa
lock
or
outsl
aas
xlat
fmul
cli
js
hlt
push
stc
mov
inc
mov
test
mov
dec
out
sub
adc
inc
jle
test
dec
mov
dec
pop
mov
push
cmc
fsub
iret
repz
jnp
iret
int
dec
sub
inc
pop
in
jmp
out
scas
xor
pop
xchg
sub
jmp
jge
pop
mov
std
mov
and
pop
jae
xor
dec
add
cmp
enter
imul
or
xchg
lods
inc
dec
push
lcall
bound
ljmp
push
lcall
jae
sub
jmp
mov
and
mov
mov
mov
ljmp
sub
in
cmpsl
dec
add
hlt
mov
mov
lcall
xorb
js
mov
push
cld
lret
outsl
icebp
movsb
loop
bound
loope
cmp
sbb
dec
and
lret
mov
jno
fnstcw
cli
lcall
jp
mov
mov
sbb
je
mov
pop
dec
push
dec
aaa
stos
push
xchg
xchg
or
push
cmp
inc
xchg
lahf
lock
jmp
xchg
shrb
insb
mov
scas
stos
seto
leave
mov
fldenv
ss
mov
xchg
shl
pop
jecxz
mov
add
adc
in
addb
sbb
lahf
test
push
mov
sbb
bound
lods
mov
subb
jbe
adc
frstor
int
inc
and
add
test
sbb
cmp
adc
and
push
in
fiadds
xchg
pop
test
xchg
mov
stos
hlt
pop
add
mov
nop
cli
fldl
pusha
pop
pop
jo
adc
sti
xchg
push
mov
xchg
cld
fistpl
in
dec
fcomp
xor
jl
aad
mov
ret
test
dec
cmc
adc
hlt
test
push
outsb
dec
imul
insb
lret
stc
ss
sub
inc
repz
sbb
dec
dec
xor
jbe
or
jno
or
jo
add
dec
mov
pop
outsb
nop
notl
push
inc
shlb
outsl
xchg
daa
insb
jle
pop
das
pusha
inc
mov
insl
mov
aas
sbb
ss
loopne
or
lods
sub
mov
mov
push
lret
cwtl
push
mov
xor
xchg
das
outsb
add
fcomip
and
pushf
push
ret
or
xor
in
repz
cmp
mov
enter
gs
aaa
mov
mov
lret
mov
ret
inc
sbb
rolb
cmp
fwait
rol
add
cmp
push
sub
insl
and
es
and
mov
or
jmp
aad
repnz
out
pop
push
xor
adc
icebp
fs
pop
in
jae
add
xor
push
aad
xchg
mov
adc
popa
sbb
lock
mov
inc
sub
in
xchg
jno
mov
mov
aaa
push
adc
leave
pop
out
mov
ret
push
mov
dec
insl
jns
dec
aaa
fistps
mov
aaa
test
shrb
or
hlt
dec
mov
pop
cmp
mov
iret
bound
lds
sbb
idivb
pop
sbbl
adc
pop
stos
pushf
in
stos
pop
mov
cwtl
imul
inc
jns
mov
fisttpll
inc
loope
fdiv
data16
jle
int3
jne
and
sbb
dec
inc
mov
jo
inc
rcrl
lods
test
mov
insb
fsubrp
outsb
sub
mov
lcall
outsb
lods
dec
fsubrl
fldcw
adcl
leave
decb
and
and
and
mov
shll
int3
cltd
pop
cld
mov
xor
daa
mov
jnp
and
in
sub
into
mov
cmp
adc
mov
daa
pushf
fstpl
int3
scas
pusha
aam
inc
fisttpl
not
cmp
xor
or
loop
jmp
mov
xor
mov
repnz
xlat
xchg
pop
sub
ret
insl
test
sub
push
js
pop
sub
jae
mov
iret
mov
add
mov
cmp
sbb
clc
call
mov
js
and
jae
mov
scas
dec
lret
cs
stc
mov
jecxz
jno
out
imul
add
jb
xor
out
add
aas
mov
mov
sub
xor
adc
shl
sub
js
xor
xchg
mov
pop
repz
jge
jbe
mov
ror
mov
jecxz
add
bound
jno
pop
dec
cmp
call
jge
cmpsl
ds
cmp
jno
adc
jno
fdivrs
mull
mov
xchg
mov
and
mov
dec
dec
lret
and
inc
lret
mov
gs
xchg
sbb
testb
repz
cli
and
sbb
cmpsl
xadd
jge
mov
cs
sbb
lods
lahf
mov
fldenv
inc
or
jl
aas
mov
add
inc
sbb
inc
fisubl
pop
pop
pop
jo
adc
addb
sub
xchg
mov
inc
hlt
dec
sub
and
loop
fstl
insl
sbb
mov
dec
shl
out
push
lret
xor
adc
les
fists
int
aam
and
and
daa
js
cmp
inc
movl
mov
mov
test
xor
outsb
cmp
leave
inc
sub
sahf
cld
push
and
sbb
in
mov
adc
xchg
imul
repz
push
stos
xor
sub
sub
push
loop
adc
or
pusha
fdivrs
jp
popa
cmp
jns
in
pop
in
xchg
das
xor
mov
je
and
xchg
pop
add
adc
xchg
pop
push
lahf
dec
cmpsl
icebp
jne
mov
push
fdivr
fisubl
ja
mov
jnp
popf
ret
cmp
int
bound
loope
rorl
jns
clc
xchg
outsb
ds
cli
sub
cmp
aad
or
ja
pop
pop
jp
in
incb
scas
aas
sub
push
push
jbe
and
test
sub
xchg
dec
cld
mov
add
pop
in
stos
hlt
push
or
mov
xchg
push
cmp
and
flds
jl
cmp
push
fwait
pop
sarb
inc
xlat
int
push
mov
adc
sub
cli
dec
sbb
mov
xchg
ljmp
es
daa
jb
push
fwait
cld
test
push
adc
adc
stos
pop
cs
jb
jecxz
pop
add
dec
stc
and
leave
out
out
inc
jo
pop
mov
dec
insl
int3
movl
idivb
mov
mov
dec
shlb
ret
xchg
add
mov
movsb
hlt
jmp
sbb
movsb
leave
lea
mov
adc
rol
jg
movsl
or
inc
dec
inc
dec
inc
out
popa
clc
push
dec
fsubrl
popf
dec
sarl
testl
js
jnp
mov
lahf
inc
adc
into
std
push
mov
lret
ret
push
cli
loopne
inc
hlt
add
push
xchg
ljmp
cld
popf
inc
and
cld
dec
dec
into
mov
fdivl
iret
push
sbb
lds
daa
pusha
insl
ficoms
out
add
mov
fcmovb
fisttpll
imulb
pop
in
pop
pusha
mov
add
popf
adcb
negb
xchg
mov
sbb
divb
out
sarb
enter
testl
aas
cltd
out
shrb
jno
and
and
lods
fs
lcall
out
stos
stos
xchg
dec
adc
movsl
arpl
rcrl
add
lea
fs
pop
jo
cmp
jg
sub
in
repnz
dec
adc
push
cmpsl
mov
xor
xchg
sti
inc
inc
lret
and
es
push
and
movsl
faddl
call
push
adc
xchg
inc
es
mov
das
push
hlt
daa
aas
mov
sub
in
add
fbstp
cli
imul
lods
add
xor
jae
or
xchg
pop
mov
pop
mov
jbe
aas
repnz
jmp
icebp
jbe
rcr
test
pop
adc
jl
rclb
mov
fidivs
rclb
out
mov
adc
adc
aas
and
sbb
or
out
mov
cltd
or
push
pop
nop
sub
test
aaa
out
mov
push
cmpsl
cs
inc
pop
outsb
mov
pop
scas
mov
out
jnp
fs
dec
jns
sub
or
addr16
or
loop
js
xchg
push
icebp
push
inc
sub
inc
sub
xlat
adc
sub
enter
loope
rcll
pop
push
ds
or
and
and
sub
in
lcall
pusha
arpl
int
sub
and
sbb
sti
es
push
aas
setae
mov
xchg
int3
dec
pushf
in
mov
mov
movsl
rcl
ja
out
lret
sbb
push
divb
sub
repnz
sarl
push
mov
xchg
movsl
lahf
sub
mov
adc
mov
bound
sub
xorb
mov
pop
add
outsl
rorb
add
push
scas
push
inc
push
ds
lahf
stos
mov
int
lea
cmp
xchg
ljmp
sub
into
movsl
ljmp
or
aad
or
pop
cmp
sbb
pop
test
jmp
dec
rcl
fimuls
lea
out
enter
sbb
fdiv
aam
rcrl
mov
add
outsl
notb
add
adc
dec
pop
scas
mov
sub
cmp
insl
cwtl
pop
cmc
faddl
popa
add
nop
xchg
pop
jp
sbb
lock
pusha
mov
enter
dec
dec
hlt
int
xor
and
cmpsl
ss
insb
and
gs
and
scas
dec
push
adc
pop
sub
cmpsb
sbb
not
imul
sbb
xor
jne
and
jnp
nop
pop
and
pop
pusha
lock
mov
sbb
aaa
les
arpl
icebp
push
lret
lea
jo
sub
out
rcrl
adc
sub
adc
scas
mov
jge
mov
mov
pop
push
mov
pushf
out
jnp
loop
xchg
sti
test
imul
jg
fisubrs
dec
add
test
jp
mov
loopne
add
mov
add
in
inc
in
icebp
das
stos
jmp
lret
mov
push
fstps
jns
xchg
mov
push
pusha
xor
leave
xchg
mov
adc
rcrb
loope
rcr
fcomp
adc
insb
push
mov
cli
xor
outsb
rcrb
cmpsl
out
xchg
in
push
je
add
insb
dec
das
rcll
push
jo
xor
ljmp
sub
jo
mov
or
cltd
hlt
inc
out
cmp
xor
jno
mov
jns
cld
or
mov
mov
scas
dec
xor
inc
pop
dec
pop
js
adc
cmpsb
xchg
shr
mov
xchg
dec
adc
sbb
mov
stc
lahf
push
adc
push
jbe
lods
xchg
adc
stos
cld
adc
nop
adc
lods
inc
sbb
or
rcl
nop
mov
pop
push
mov
rol
cmpb
mov
mov
mov
rcr
bound
dec
cmpsl
xchg
iret
clc
and
mov
in
push
jle
lock
mov
enter
in
cltd
loope
lret
xchg
mov
pusha
xor
and
ret
push
addr16
cltd
fsubrl
in
aas
test
add
jo
xchg
lods
cmp
pop
jno
scas
mov
lea
ja
add
out
mov
sti
xchg
cmp
and
jge
enter
jne
push
in
loope
pusha
loop
jbe
sbb
idivl
mov
mov
dec
scas
jb
cmp
mov
outsl
stos
int
mov
pop
mov
popf
pop
scas
test
dec
in
cli
nop
in
cmp
movsl
das
pusha
loopne,pn
repz
xchg
xchg
fld
js
subb
jbe
lock
dec
cmp
cwtl
mov
jg
sahf
cmp
xor
sbb
and
loopne
aas
outsb
fsubrl
enter
shlb
jb
in
fwait
inc
cmp
cmc
popa
and
cmpsl
pop
mov
mov
mov
loop
push
inc
add
leave
ret
jae
lcall
push
and
or
and
leave
mov
xchg
sbb
int3
sub
pop
jg
xchg
pop
arpl
fsubrl
test
sti
xchg
dec
nop
sub
adc
fiadds
mov
pop
jecxz
in
pop
and
jnp
mov
fisubl
movsb
adc
scas
lds
sub
or
mov
and
xchg
push
adc
jnp
cmpsl
dec
js
lods
lcall
in
ja
inc
add
ret
adc
push
bound
enter
xor
adc
rclb
cmc
add
scas
or
jg
je
pop
iret
pop
push
jnp
addr16
inc
xchg
enter
test
lea
sbb
mov
and
cltd
xor
inc
out
popf
cltd
orl
and
stc
test
in
mov
addr16
arpl
mov
andl
sub
out
es
sbb
mov
pop
jb
cld
sub
xchg
lcall
insb
mov
aas
push
aaa
mov
lcall
push
mov
cmp
dec
test
jg
mov
aad
sbb
and
sub
mov
xchg
sbb
xchg
sti
pop
mov
in
insb
mov
cmp
sbb
lock
enter
loope
repz
mov
movsb
xchg
add
adc
notl
je
jg
mov
xor
lods
mov
fcmovnb
rcr
rcrb
fwait
mov
in
in
lahf
mov
insb
mov
mov
mov
dec
mov
xor
popa
aam
mov
mov
sbb
lret
xchg
sub
xor
inc
das
pop
mov
mov
ljmp
popf
lret
xchg
sbb
push
cmpsl
or
mov
xor
mov
mov
out
inc
mov
std
inc
xor
cltd
or
dec
mov
adc
pop
dec
mov
jg
movsb
jnp
addb
xor
shll
add
xor
or
push
pop
mov
add
inc
dec
or
outsb
xor
popa
rcll
int
push
pop
xchg
pop
faddp
ja
push
loopne
popf
mov
subl
arpl
insl
ret
sbb
cmp
fs
sbb
js
out
out
dec
push
mov
jae
cmp
test
pusha
jge
sahf
gs
das
inc
and
pop
and
es
sbb
imul
inc
xor
addr16
sar
inc
out
xchg
cwtl
add
mov
mov
add
fisubs
push
test
scas
cmp
dec
adc
or
test
push
add
adc
or
ficomps
lds
pop
pop
push
insl
sbb
rcrb
jb
xchg
jno
mov
jnp
lea
xor
pop
std
mov
jl
sbb
jno
xchg
inc
inc
sti
xchg
adc
sbb
and
adc
dec
or
xchg
cwtl
inc
stc
add
pop
cli
mov
mov
in
shl
sub
cmpsl
push
std
inc
adc
and
ja
jb
call
ret
sub
pop
add
pop
stc
jmp
dec
aad
fld1
push
test
dec
pop
xchg
push
out
cmp
pcmpgtd
adc
pop
and
cmpsb
rcl
popf
mov
and
pop
stc
sti
push
in
pop
les
mov
mov
in
push
lret
cld
ret
mov
add
insl
push
mov
scas
xor
adc
hlt
aas
dec
dec
movsb
dec
mov
adc
fs
mov
inc
hlt
pop
add
cwtl
outsb
popf
add
pop
lcall
xchg
sub
out
or
mov
dec
shrb
or
adc
clc
fiadds
inc
xor
int
push
mov
fistps
out
inc
das
adc
mov
pop
lahf
push
mov
lods
in
imul
enter
ret
xchg
mov
add
pop
out
scas
in
addl
mov
mov
dec
or
xor
mov
and
aas
aaa
clc
cmp
pop
stos
cmp
dec
mov
nop
clc
dec
sbb
inc
sbbl
jg
lds
stos
xchg
mov
ja
leave
dec
dec
add
ret
xor
push
mov
test
loopne
dec
scas
jae
mov
xlat
stos
mov
call
push
xor
xor
cli
push
jp
jo
xchg
jnp
jp
xor
mov
mov
mov
test
jle
adc
bnd
dec
movsl
addr16
dec
dec
push
add
cmpsl
xchg
push
stos
mov
std
lods
lahf
imull
sub
mov
or
mov
test
out
add
rorl
lods
pop
sub
imul
fnstcw
xor
cmc
loopne
insl
xchg
rol
inc
shl
fmul
cld
int3
xchg
nop
call
pop
test
test
rcll
push
sbbb
sub
fs
push
pop
add
lcall
adc
push
push
adc
cmc
hlt
mov
nop
sub
inc
call
jle
lock
mov
sarb
pop
sub
sbb
adc
cwtl
add
jg
movsl
das
jne
out
pusha
loop
rcr
insl
mov
or
mov
fidivl
call
rcll
ja
cmp
jb
jae
lods
or
push
fsubr
inc
push
or
lock
cmpsb
xchg
xchg
jmp
test
xor
aaa
mov
pop
pusha
and
clc
dec
insl
test
sub
icebp
cld
add
je
xor
or
rcrb
jno
lods
sahf
and
push
bound
orl
jge
add
int
xchg
xchg
cs
cmp
sahf
outsb
lcall
pop
sbb
mov
sbb
hlt
je
inc
test
mov
pop
push
cmc
ja
popa
mov
loopne
xor
out
addr16
jle
xchg
adc
sub
lcall
sbb
fsubl
lock
fisubl
xlat
push
push
mov
sub
jbe
mov
out
sbb
inc
icebp
adc
outsl
xchg
mov
lock
testb
sub
xor
lcall
sbb
repz
jns
mov
xchg
mov
pusha
inc
fcmovb
cltd
mov
ret
jmp
cmpsb
mov
pop
arpl
and
push
imulb
dec
xchg
push
xor
stos
insl
arpl
mov
outsb
mov
fists
xor
mov
mov
jnp
jmp
mov
mov
iret
mov
ret
imul
cmc
cwtl
push
sbb
out
jno
repnz
mov
pop
sbb
loope
mov
cld
mov
icebp
or
aas
inc
xchg
dec
ret
test
ds
cwtl
sub
in
scas
lods
in
mov
loopne
mov
bound
inc
xchg
lcall
ljmp
stos
test
loope
mov
outsl
mov
into
loop
dec
pop
add
inc
icebp
push
push
lods
ja
jle
out
mov
cs
add
cmpsl
cmp
xor
add
or
jg
dec
in
mov
shrl
outsl
cmp
movsb
dec
jl
loopne
test
test
aas
imul
pop
shl
das
or
and
ds
inc
ret
inc
gs
cmp
jno
adc
push
test
test
testl
xchg
fsub
ror
add
and
lret
mov
sbb
mov
fs
jns
xchg
and
cmpsl
mov
pop
mov
dec
inc
or
insl
sbb
push
cmc
and
fnstcw
test
sub
inc
mov
cs
cmpb
ret
decb
inc
sub
sbb
fldenv
cld
mov
xchg
mull
int
js
cmp
pushf
mov
cltd
sbb
stos
popa
out
sub
lods
aaa
int3
out
or
int
cmp
or
mov
shl
or
insb
cmp
jno
xor
mov
sub
rorb
cli
call
pop
pop
jnp
stc
daa
xchg
or
push
jbe
push
inc
sub
jno
pop
xlat
and
jb
jp
sub
add
fstl
lcall
out
addb
aam
add
or
lea
xchg
iret
push
pop
dec
int3
xchg
or
jb
sbb
das
in
jg
lret
fwait
test
fbld
jo
lods
xor
mov
rcll
mov
mov
sub
int
pop
jbe
imul
scas
ficompl
out
cmp
or
roll
push
rcrl
insb
test
jae
popf
jg
jno
sbb
gs
lea
xchg
rorl
test
dec
sbb
and
pop
jno
insb
es
jmp
jmp
or
dec
or
jae
dec
inc
out
mov
fwait
adc
mov
imul
lods
ret
sarb
mov
and
insb
fs
mov
sub
pop
xchg
je
adcb
imul
dec
dec
or
mov
gs
and
pop
adc
test
inc
xlat
test
pushl
inc
dec
jg
sbb
add
xchg
or
cli
daa
das
sub
or
sahf
mov
lret
rorl
sub
addr16
jl
pop
sti
call
cli
inc
jecxz
mov
shlb
scas
sub
or
pop
fnsave
add
push
or
and
cmpsb
dec
ljmp
sbb
add
push
movsb
jg
lds
inc
push
test
popa
jp
test
pop
sti
sti
aas
dec
cmp
outsb
in
mov
inc
mov
into
les
add
cwtl
push
push
pop
lds
lods
into
adc
lcall
scas
push
aaa
lret
in
insl
push
add
lods
out
mov
add
jno
lea
add
pop
inc
fwait
mov
mov
pop
dec
in
cmp
inc
sbb
jecxz
adc
ret
jae
xchg
ljmp
pop
shl
mov
push
inc
jb
arpl
xor
into
mov
ret
adc
and
mov
ret
push
jp
pusha
push
mov
push
int3
out
xor
movl
cs
arpl
dec
jnp
repnz
sbb
xor
mov
push
mov
sbb
or
jmp
jno
mov
xchg
push
jge
enter
insl
dec
popa
insb
xchg
dec
fld
ret
mov
mov
loopw
xchg
roll
hlt
mov
mov
inc
stc
ret
xchg
repnz
dec
xlat
fldt
xor
mov
mov
lock
pop
mov
test
xchg
test
mov
lods
pop
sub
stos
out
mov
cld
add
mov
and
imul
sbb
mov
rcll
aad
daa
orl
enter
xor
sub
fisubl
jo
lds
insb
xchg
mov
mov
std
aas
pop
adc
and
push
mov
push
sbb
push
aas
xlat
sub
mov
popf
call
leave
lcall
adc
scas
xchg
loopne
inc
and
and
fxch
dec
cmpsl
and
fidivrl
sub
fstps
js
imul
xlat
arpl
jb
pop
pop
es
clc
cmp
stos
mov
pop
sub
push
inc
mov
push
loopne
mov
dec
shlb
jmp
jle
cmpsb
cs
jge
and
jno
inc
mov
es
out
test
mov
xchg
xchg
dec
sub
and
cmpsb
loop
popf
int
mov
lahf
icebp
mov
sbb
jne
xchg
inc
jno
adc
mov
jecxz
data16
pushf
sub
mov
adc
fsts
push
stos
das
fcmovnbe
pop
stos
push
mov
xor
xchg
mov
pop
aaa
pusha
push
push
addr16
mov
dec
out
xor
jp
mov
stos
inc
xchg
or
movsb
add
dec
mov
fldpi
sti
lret
popf
ret
scas
call
jns
inc
dec
fstps
cwtl
mov
loope
sti
gs
pop
in
jg
add
sub
xlat
pop
out
jl
sub
movsl
into
mov
pop
addr16
or
or
test
push
sbb
es
xchg
into
gs
in
aas
out
outsl
fstpl
mov
mov
imul
pop
dec
ss
xor
xor
mov
iret
inc
loop
push
repz
mov
imul
pushf
je
cmp
cmc
out
mov
ds
dec
mov
test
and
mov
lods
aaa
sub
icebp
jg
cmp
outsb
sub
push
data16
sahf
pop
in
lods
mov
xor
sbb
out
sti
imul
add
push
adc
sub
dec
scas
or
ds
dec
sbb
cmc
cwtl
stos
movsl
pusha
cmp
mov
or
dec
xor
adc
mull
enter
in
xor
addr16
outsb
or
xchg
mov
jno
cmp
xchg
xorb
and
and
in
rolb
xchg
cmc
in
inc
adc
movsb
push
in
xor
leave
jecxz
inc
daa
lret
cmp
aaa
repz
and
loop
test
jmp
out
bound
push
test
jecxz
adc
sub
loope
inc
xchg
add
in
stos
pop
neg
out
mov
push
jl
inc
shr
push
ret
and
enter
sub
repz
addb
push
in
adc
jbe
das
scas
popf
out
dec
dec
dec
mov
in
call
popf
mov
aam
popf
popf
jb
sbb
out
pop
test
cltd
stc
or
gs
arpl
repnz
or
not
push
in
enter
sbb
add
jns
inc
enter
sub
jge
mov
push
addr16
fmull
popa
push
inc
adc
or
dec
mov
push
xchg
out
rolb
jnp
pop
pop
dec
outsl
fsubrl
es
int3
and
mov
jb
inc
imul
sbb
dec
rorb
sarl
sbb
dec
mov
addr16
int
add
sbb
outsl
lock
fmuls
scas
repnz
addr16
pop
cmp
pushf
or
push
pop
inc
adc
or
sti
jmp
lahf
or
sub
insb
sub
popa
pop
xor
or
stos
pusha
mov
dec
outsl
dec
mov
push
ss
cs
mov
dec
sbb
aas
pop
mov
dec
mov
add
lds
loop
sbb
fs
scas
xor
adc
dec
mov
sub
fnsave
insl
aad
sarb
mov
jbe
aas
movsl
push
cmpsb
xchg
sub
xor
push
xor
push
in
cmp
mov
cmp
mov
icebp
jle
and
in
call
in
int3
mov
jmp
pop
inc
jns
xorl
inc
fsubl
cmp
jae
mov
imulb
daa
mov
mov
sbb
je
sub
cmp
cmp
repnz
sahf
shll
xor
fidivrs
insl
pop
into
repz
sbb
jmp
aas
jb
movsb
fldln2
icebp
push
jg
add
pop
lea
jae
push
jmp
jmp
add
sbb
call
imul
das
mov
push
in
outsb
rcl
mov
lods
std
and
and
inc
stc
mov
lods
jae
popa
inc
out
lock
jne
lock
dec
rolb
or
or
cli
push
jmp
scas
cmp
pop
sbb
push
add
and
repz
inc
cmp
push
add
cmc
lea
pop
or
rcl
cmp
push
sbb
outsl
jmp
push
pop
fistl
into
add
pop
test
inc
jp
xchg
dec
lds
inc
xchg
popf
mov
inc
mov
push
sbb
sti
jle
dec
xchg
push
mov
dec
lret
and
xor
iret
aam
cltd
jae
stos
gs
test
movsl
stos
sbb
push
push
sbb
push
or
lds
xchg
inc
stos
fsubrl
jns
stos
in
jno
mov
xor
xchg
pushf
cmp
xor
inc
loope
lods
cli
rorl
fwait
hlt
ds
mov
std
push
movl
jg
shl
lods
xchg
scas
test
sbb
outsb
mov
mov
pop
sub
clc
sub
sbb
fiadds
pop
or
jge
stc
and
adc
jg
sbb
ror
cmpsl
stos
inc
mov
sub
ljmp
lods
dec
adc
adc
mov
sbb
xor
mov
int
lds
std
sub
mov
stos
mov
mov
lret
mov
into
aaa
pop
movsl
repz
or
push
mov
bound
dec
fistps
outsb
and
hlt
or
aas
arpl
xchg
inc
jg
add
push
int
xchg
mov
add
mov
clc
rorl
xor
lret
cli
dec
sbb
lods
cmp
bound
lret
mov
mov
sbb
jle
xchg
xor
shrl
pop
push
repz
sbb
cld
push
or
sub
xlat
or
femms
cmpsl
out
and
rolb
push
sar
mov
xchg
xchg
xor
cwtl
add
or
roll
jae
insl
movsl
pusha
pop
ss
aam
inc
in
cli
xor
adc
cltd
dec
jbe
mov
pop
jl
das
fs
adcl
inc
aad
call
mov
jae
mov
andl
or
xchg
jge
fwait
push
xchg
sub
mov
mov
jge
nop
inc
int
adc
lahf
mov
or
sub
sbb
lods
xchg
scas
addr16
popf
adc
pushf
shll
mov
sbb
sbbl
pop
dec
ret
sbb
and
xchg
push
test
mov
dec
mov
adc
adc
xor
sbb
add
mov
sarb
aas
jb
inc
cmp
pop
scas
add
lret
xchg
xchg
stc
xchg
dec
mov
pushf
adc
pop
push
mov
mov
pop
fs
or
ss
hlt
addr16
mov
or
xchg
mov
pop
fisubl
test
test
gs
roll
dec
cmpsb
jmp
or
cmp
fwait
popf
into
fcompl
jo
cmpsb
or
adc
add
popa
jg
mov
push
fcmovb
mov
outsb
mov
and
in
jg
adc
pop
movsl
aas
scas
insl
in
fsts
xchg
push
sbb
push
jmp
lock
ja
ja
imul
xchg
in
xorb
pop
dec
cli
xchg
nop
mov
mov
in
dec
ss
out
xchg
in
cmp
mov
xchg
adcl
jmp
cmc
xor
test
add
arpl
mov
jnp
push
xor
ss
sub
jnp
lods
add
inc
adc
insb
in
pop
fistl
xchg
mov
in
add
loope
mov
lcall
xchg
or
adc
and
daa
jmp
imul
shl
loopne
add
or
xchg
decl
sub
mov
xchg
leave
rcll
pop
and
adc
pop
insb
pop
popf
fnstsw
scas
lods
cmpsb
jo
stos
add
aaa
ja
xor
fwait
cmc
ret
in
insb
jecxz
xchg
push
xor
test
xchg
or
movsb
push
jno
iret
fwait
addr16
pop
out
rcl
pop
test
mov
and
xor
add
push
dec
in
in
es
in
inc
push
inc
pop
shlb
mov
jp
push
lds
daa
in
test
scas
jns
jmp
cmp
add
pusha
add
jmp
xchg
js
test
mov
in
out
mov
jns
cli
aad
dec
push
pop
test
and
fnstsw
aam
sub
or
jmp
cmpl
mov
roll
in
sub
ja
jnp
out
inc
andb
testl
addb
in
movsb
or
les
mov
sbb
jl
mov
fmuls
pop
xchg
in
mov
loope
mov
jns
pushf
push
and
lret
sti
mov
nop
aam
mov
jae
cltd
dec
inc
jbe
and
ss
mov
mov
inc
bound
in
movsl
out
ret
and
in
and
daa
push
sub
js
dec
scas
mov
cmc
repz
push
in
loope
xor
in
pop
out
and
xchg
pushf
ret
outsb
or
lods
cli
cltd
xchg
imul
or
jns
fwait
xchg
mov
sub
scas
pop
out
and
call
out
out
test
add
fildll
stos
loop
fsubl
fsub
inc
leave
leave
inc
jno
sub
testl
mov
mov
sbb
sbb
sub
movsb
jg
sti
fwait
push
mov
addl
xchg
incb
cmpl
insl
ljmp
nop
loope
icebp
dec
je
adc
mov
int
push
add
jb
test
and
lds
push
popa
cmp
dec
ds
sbb
jmp
mov
or
hlt
dec
es
sbb
out
mov
insl
stos
mov
adc
xchg
dec
mov
sub
rcrl
jbe
clc
cmp
cmpsl
lock
cltd
lcall
inc
fimuls
mov
push
add
test
mov
or
adc
and
sbb
aas
scas
cmpsl
cwtl
arpl
and
ret
cmc
mov
push
mov
iret
or
pusha
sahf
arpl
sti
enter
mov
bound
jnp
popa
push
xchg
dec
push
pop
mov
lea
jns
loop
mov
fistl
mov
fwait
rcrb
mov
xchg
andb
cwtl
icebp
xor
repz
dec
into
dec
pop
scas
inc
jo
dec
jecxz
and
shrb
mov
inc
pop
pop
pop
inc
popa
inc
ja
dec
adc
lock
sbb
jns
pop
repz
test
pop
mov
cli
ss
scas
popa
cmp
jae
fidivrl
in
insb
ret
adc
jbe
fs
loopne
negb
fstpl
or
lret
ja
pop
fistps
into
clc
mov
mov
sahf
hlt
jne
mov
adc
push
push
bound
push
jecxz
lea
gs
decb
scas
out
lea
pop
out
cmp
lahf
mov
inc
jl
in
iret
ja
lret
data16
int3
add
push
shrb
notb
nop
inc
and
jle
ficomps
testb
xor
mov
sbbb
sbb
lods
add
or
repnz
sbb
jae
lahf
cld
cmp
fsubrs
xchg
jmp
cs
sbb
leave
sbb
sbb
pop
and
xlat
shlb
cs
lds
dec
sahf
orb
add
stc
sahf
push
gs
push
jmp
scas
aaa
pop
int3
dec
xchg
adc
mov
rcll
sub
pusha
in
push
push
cmp
pop
ret
jb
dec
sbb
scas
in
stc
jle
cmovg
or
jg
and
aas
add
jno
mov
fistps
jbe
sub
dec
pop
dec
or
jmp
rcrb
jns
gs
fstl
mov
push
xor
test
lldt
mov
push
mov
repnz
dec
loop
cltd
or
mov
fists
jmp
mov
sbb
je
mov
int3
int3
and
adc
xor
sbb
in
lcall
xlat
mov
jg
add
adc
imul
sbb
inc
in
mov
imul
or
sbb
xchg
sbb
dec
addr16
fcmovbe
jp
out
fidivl
lret
add
cli
lea
movsb
es
xor
sub
movsb
mov
adc
or
std
and
or
shl
jge
adc
hlt
mov
mov
aas
mov
movsl
cmp
jl
jb
inc
mov
pop
insb
cltd
jge
in
jo
lcall
ret
inc
xchg
sbb
dec
mov
loope
and
pop
dec
lret
mov
xor
push
dec
mov
inc
xorl
jb
and
fsts
mov
iret
adc
mov
or
addr16
fcomps
clc
mov
lods
and
int
aad
iret
dec
add
xchg
mov
add
dec
cmp
pop
mov
pop
sbb
xor
mov
aam
popa
fstpt
or
add
ds
push
push
mov
mov
dec
cld
add
aad
ljmp
clc
jns
lds
aam
push
mov
jns
fbld
cs
rorb
cld
ffreep
adc
adc
dec
mov
pusha
ror
add
pop
jns
insl
mov
int
sub
bndstx
hlt
and
call
sub
xchg
pusha
mov
scas
cmp
in
pop
orl
sarl
cmc
aaa
dec
jno
jo
mov
xor
ds
xor
hlt
das
mov
push
inc
pop
push
or
movsb
into
adc
xlat
bound
inc
fstps
inc
test
out
decb
sub
clc
inc
xor
xchg
mov
cmp
xor
mov
ss
movsb
pop
fwait
push
or
mov
sbb
mov
jmp
lret
sbb
pusha
shll
sbb
into
nop
xchg
and
push
adc
pop
pop
push
adc
mov
or
lock
mov
mov
adc
sbb
push
mov
ljmp
or
cmpl
sub
push
rcll
jl
shl
sbb
test
test
fwait
pop
test
push
add
ret
out
mov
or
jno
jns
je
ficompl
mov
pusha
inc
jle
test
sbb
adc
rolb
lret
stos
repz
insb
sar
in
add
fwait
push
repnz
jmp
jp
dec
jle
mov
js
out
xor
scas
scas
bound
int3
inc
repz
pop
push
std
sti
mov
dec
loopne
in
rolb
jns
iret
push
sbb
daa
mov
mov
mov
add
sub
and
xchg
mov
cmc
pop
sbb
lock
jne
cwtl
pop
int3
pop
dec
mov
add
inc
rclb
cld
or
insl
lods
incb
jecxz
subb
mov
or
test
push
adc
les
clc
into
rorl
sub
aam
xor
inc
addr16
scas
xchg
lea
cmpsl
mul
xor
imul
fadds
adc
mov
dec
loopne
dec
mov
in
mov
push
adc
sbb
stos
mov
stos
cli
fsub
das
sahf
xchg
push
int3
cwtl
mov
mov
pusha
rorl
sub
dec
enter
dec
dec
mov
stos
mov
lret
or
movsb
mov
dec
fsubrl
mull
enter
mov
lds
jb
cmp
fildll
in
mov
ja
pop
dec
jne
dec
push
or
and
push
cmp
jl
push
popl
push
fisubrs
xor
dec
scas
pop
movsb
inc
cmpsb
fwait
insb
in
cmpsb
jle
scas
mov
add
jp
push
iret
inc
sub
andl
je
lcall
ret
add
or
push
inc
inc
xchg
mov
adc
shll
pop
push
hlt
cmp
mov
loop
sub
mov
fsubl
sti
inc
loop
push
cwtl
dec
stos
stos
mov
and
fidivl
jmp
sbb
dec
aad
sbb
mov
outsb
lret
jbe
xlat
xchg
xor
or
push
int3
mov
xchg
daa
stos
pop
xchg
mov
iret
lret
mov
adc
xor
xchg
lcall
stos
mov
xor
shr
cmp
xchg
push
and
xlat
mov
cmove
mov
or
aam
orb
cwtl
movsl
test
dec
movsb
adc
jl
insl
testl
push
ret
jl
test
cmp
and
jbe
out
cmp
jb
inc
fsubrl
shlb
leave
ja
lahf
xor
out
jl
stos
inc
sarb
in
push
xor
shlb
ficompl
and
imul
pop
inc
sub
fists
pop
dec
adc
add
or
mov
xchg
xor
xchg
push
repnz
test
stc
rclb
in
pop
out
sbb
xlat
mov
dec
inc
lea
inc
mov
mov
lcall
dec
mov
sbb
scas
ja
push
mov
cmp
jl
cmp
es
loope
sub
or
jne
adc
xchg
imul
arpl
sub
nop
adc
xchg
insl
and
inc
ds
mov
and
sbb
jl
in
rsm
loopne
ret
out
mov
or
dec
outsl
sub
sub
push
sti
pushf
ret
adcl
dec
cmp
mov
jbe
mov
add
mov
js
mov
cmp
mov
mov
and
rcl
dec
jl
aaa
add
ds
into
push
in
push
fidivrl
adc
fistpl
mov
xchg
xchg
mov
out
sub
fnstsw
nop
test
test
test
push
xchg
je
jle
shlb
mov
dec
lods
repz
imul
adc
xlat
sub
bswap
mov
jg
in
jecxz
pushf
dec
mul
add
loop
fcoml
sbb
sti
mov
inc
mov
stos
test
repnz
test
mov
rorb
call
fwait
lahf
and
sub
stc
popa
mov
sbb
shlb
sbb
pop
or
ficompl
cmpsb
sub
mov
sbb
enter
jb
mov
push
stos
popf
in
xor
xlat
clc
and
stos
cmp
dec
inc
push
mov
fistpll
push
int
shll
bound
clc
out
dec
js
pop
mov
or
outsl
xor
cmp
icebp
mov
jecxz
pop
sbb
xor
push
ja
rorb
call
arpl
xchg
repz
je
mov
dec
mov
call
in
mov
repz
repnz
sbb
enter
xchg
mov
ret
enter
jmp
js
push
mov
or
add
je
sbb
mov
inc
cmp
inc
mov
fcomps
jmp
into
aaa
jne
jp
dec
rorb
mov
popf
arpl
sub
dec
out
loop
and
aam
iret
and
xchg
inc
minps
dec
lods
sub
lds
cltd
mov
jno
aad
mov
pop
pop
in
mov
sbb
shlb
xlat
pushf
inc
pop
jle
jge
jle
je
shll
add
data16
addr16
or
add
sbb
lea
pop
sbb
imul
or
aas
jecxz
data16
test
mov
in
sub
or
lret
outsl
cmpsb
jecxz
xor
iret
sbb
dec
and
add
jb
mov
dec
push
jno
cmpsl
cld
aam
dec
ljmp
jae
pop
mov
mov
cmp
xchg
add
lods
es
enter
xor
xchg
adc
xor
push
fs
movsb
int
cmp
jecxz
ficoml
rolb
add
gs
rep
les
je
mov
cs
cli
cld
arpl
mov
sbbl
mov
mov
insl
push
sub
push
lods
pop
pop
mul
mov
fildll
insb
les
xor
xchg
inc
push
shlb
int
pop
arpl
xor
and
aas
arpl
dec
sarl
dec
adc
fstps
stc
and
push
or
jne
push
rorb
cmpsb
push
add
inc
jb
in
loopne
aaa
lret
stos
arpl
push
lcall
mov
inc
mov
pop
fdivl
cmpsl
stc
lock
push
mov
iret
dec
cmpl
push
dec
dec
sbb
jae
push
jmp
ret
xchg
lret
and
into
dec
or
imul
loop
pop
jle
push
push
outsl
mov
xor
daa
mov
std
add
cmp
nop
mov
jne
jle
cwtl
or
data16
lods
jle
push
xchg
ss
stos
sahf
mov
inc
cmp
mov
pop
bswap
lahf
cmc
mov
and
cs
xor
pusha
or
test
pushf
sarl
shl
data16
sbb
jne
imul
ret
cmp
jae
add
adc
mov
loopne
loopne
mov
arpl
fidivs
push
mov
sub
fistpll
sbb
ja
xor
ds
mov
repz
nop
lahf
adc
iret
xchg
push
aad
test
mov
enter
lcall
sbb
push
add
repnz
lea
andb
data16
adc
inc
or
mov
jbe
rclb
js
loope
sti
pop
pop
iret
jnp
sbb
in
ljmp
adcb
fists
xchg
adc
rolb
inc
inc
sbb
addl
xlat
or
fildl
cmp
aas
pop
daa
stc
jl
mov
cmp
or
fisttps
fidivrs
loopne
fsubr
push
and
push
add
and
iret
test
xor
dec
sbb
xor
sbb
in
mov
das
mov
sti
pop
je
mov
inc
xchg
mov
stos
pop
jo
cmp
push
push
out
jl
cmp
pop
dec
cld
ds
adcl
mov
aad
test
xor
inc
rclb
hlt
insb
sbb
movsl
jnp
xorb
rcr
push
and
sarl
stos
jmp
incb
lret
push
add
movsl
and
xchg
dec
bound
ret
movsb
push
loope
cmpsb
mov
jl
das
cmp
je
in
xlat
mov
jge
aad
mov
je
and
insb
cmp
jge
adcl
push
or
xchg
fnstsw
dec
dec
arpl
cli
dec
arpl
loop
adc
lahf
xor
mov
cmp
cmpsb
cmc
mov
test
inc
push
ds
imul
cmp
mov
es
adc
ret
mov
in
add
mov
mov
imulb
pop
aaa
jl
rorl
fwait
hlt
and
insl
jge
or
pop
inc
mov
mov
aaa
in
push
cmp
push
rorb
add
dec
gs
xlat
mov
add
ss
jne
in
repnz
jg
repz
popa
sub
aad
sub
jp
and
adc
sbb
push
mov
scas
js
xor
cmpsl
fsubs
xchg
pop
adc
mulb
arpl
incb
mov
sbb
adc
mov
dec
arpl
clc
push
je
or
xchg
inc
jmp
add
loopne
jg
pop
es
or
or
push
dec
cmp
add
inc
out
push
ret
xchg
repnz
ret
xchg
sbb
das
out
loope
add
mov
out
xor
add
or
mov
test
stos
fdivr
orl
sti
arpl
and
out
cmpsb
lock
movsb
jecxz
repz
outsl
add
xor
pop
xor
call
mov
fildl
repz
cmp
jecxz
loope
inc
fcomps
pop
test
push
sbb
pushl
shl
pop
and
jecxz
daa
adc
gs
push
popfw
in
rorl
subl
pushf
mov
fstps
jae
scas
rcr
ds
popl
xor
inc
sbb
std
inc
mov
adc
int3
mov
cmpsb
jg
mov
push
push
lcall
pop
and
shll
pusha
in
jmp
scas
gs
imul
insl
aad
stc
cli
int
shl
fs
add
negb
das
loopne
lcall
xchg
popf
iret
adc
or
mov
lods
sub
pushl
xchg
fisubs
jmp
lahf
adc
push
jno
or
cmc
mov
popa
jmp
jecxz
pop
push
mov
nop
xchg
mov
dec
in
outsb
imul
adc
sbb
pop
and
popa
mov
stos
lods
mov
xchg
movsl
sbb
outsb
and
and
jbe
dec
call
rclb
ret
pushf
hlt
scas
sbbl
ds
mov
mov
aas
mov
mov
fidivrl
sti
push
repz
mov
push
shlb
gs
ret
sti
dec
fnsave
dec
and
out
jne
aas
lods
push
adc
or
add
test
test
ret
in
xor
je
rorl
pop
rorl
jecxz
dec
sub
jle
push
lret
adc
andb
cmp
testb
adc
adc
adc
mov
and
out
test
jl
movsb
sub
dec
jb
fwait
mov
or
ja
adc
jbe
push
lock
clc
xor
test
scas
loopne
movsl
fcompl
frstor
rcrb
nop
or
sti
jns
xor
cmp
mov
mov
and
lods
int3
pop
leave
sub
adc
sbb
mov
scas
hlt
aad
jno
icebp
fcompl
mov
mov
test
adc
sbb
fiaddl
mov
mov
fsubrs
dec
mov
jbe
jne
sbb
ret
push
inc
hlt
add
pop
inc
mov
xchg
hlt
cmpsb
fisttpl
mov
mov
lcall
bound
lcall
xchg
sub
push
push
mov
sbb
adc
jns
mov
xor
add
push
ret
jnp
mov
pusha
fisubrl
cmp
jge
in
movsb
test
pop
rcll
addl
addr16
jnp
cmp
xchg
rclb
gs
enter
cmpsl
movb
fisttpll
aam
mov
cld
pop
ja
sahf
in
stos
push
add
mov
test
mov
in
and
pop
xchg
jno
test
xlat
push
pop
ror
cmpsl
pop
sbb
sbb
movsl
lods
ja
mov
mov
dec
cld
test
mov
out
or
popa
stos
cmpb
pop
xchg
xlat
popa
and
insb
push
flds
aam
push
mov
into
pushf
push
push
aad
mov
inc
mov
mov
add
mov
mov
cs
cmc
test
jbe
fistpll
jp
mov
sbb
xor
aam
lock
dec
pop
subb
push
cmp
push
cltd
clc
hlt
loop
and
cld
mov
fwait
cmp
xchg
adc
adc
inc
enter
push
es
pushf
adc
cs
test
xor
or
pop
cmpsb
movsl
sub
daa
and
jbe
xchg
sub
cmp
mov
shlb
movsb
fs
mov
lret
test
xlat
mov
xchg
out
test
mov
inc
adcb
gs
mov
insl
jp
xor
and
fildll
aad
push
pop
sub
fiaddl
inc
pushf
or
xlat
sbb
sbb
cmp
mov
inc
jo
pop
push
repz
mov
cmp
or
sbbb
enter
cmp
into
into
movsl
aas
adcb
mov
pop
inc
jmp
cld
lods
mov
xchg
mov
neg
mov
call
mov
fs
fnsave
mov
jg
mov
ret
push
push
mov
pop
shrb
add
insl
sub
popf
add
insb
sbb
jae
push
andb
fwait
xor
sti
aaa
mov
push
mov
pop
inc
fnsave
sub
sbb
push
stos
lret
xchg
and
sub
xor
xor
mov
and
inc
sub
inc
mov
subb
ret
addr16
test
lock
jecxz
inc
push
loope
or
enter
stos
clc
repz
mov
pop
cmpsl
stc
pusha
mov
lods
in
push
lret
sbb
cli
ljmp
cwtl
das
sub
mov
fwait
inc
cwtl
jle
ljmp
out
dec
mov
gs
mov
adc
mov
dec
push
mov
inc
lds
sbb
test
sbb
aad
push
fcoml
movsb
dec
outsb
enter
in
shlb
cmc
adc
push
inc
mov
xchg
dec
jp
into
mov
push
adc
xchg
lds
call
push
pop
jmp
aad
sbbb
mov
stos
call
xchg
dec
subb
ficompl
and
push
clc
and
in
es
cld
repz
xchg
and
mov
xor
dec
and
add
fisttpl
rcrl
or
jge
pop
sbb
or
movsb
outsl
out
in
jmp
fbstp
lods
adc
jl
inc
lea
dec
loopne
add
xchg
adc
enter
cmpsl
xchg
ljmp
mov
cld
mov
jp
push
addr16
xchg
lret
ffree
cwtl
mov
lahf
addr16
sub
inc
pop
scas
call
hlt
arpl
call
or
xor
sbb
fistl
call
movsb
popf
cmp
cwtl
adcb
dec
inc
mov
lcall
sbb
rcrb
sub
movsl
lcall
insl
cmp
mov
int
cmpsb
sub
adc
je
adc
cli
jnp
mov
insl
leave
dec
arpl
inc
out
popa
popf
ret
ja
popf
jg
adc
mov
cmp
pop
mov
scas
adc
push
push
out
pop
mov
mov
gs
adcb
dec
call
xchg
out
push
mov
and
jae
ljmp
ljmp
cmp
aad
les
add
rep
cmp
aaa
push
imulb
fsubrs
shll
scas
dec
pop
outsl
adc
sub
sti
dec
sbb
ret
sarb
sahf
dec
adc
sbb
jne
dec
ret
aad
cmc
repnz
shrb
bound
sbb
cmp
cmpsb
mov
sbb
mov
addl
imul
jle
imul
std
fildl
es
inc
dec
pop
cltd
ror
sahf
xchg
int3
sbb
inc
xchg
mov
lock
xchg
push
mov
and
sub
sbb
adc
fidivl
or
lcall
fisttpll
push
xchg
xchg
sti
cmpsl
dec
xor
xor
out
into
dec
add
pop
repz
push
inc
scas
shll
insl
mov
les
pop
mov
les
dec
push
rcll
outsl
les
or
cs
mov
or
hlt
xchg
insb
xor
xchg
fwait
dec
push
mov
xchg
repnz
xlat
shrb
lahf
mov
aam
dec
pusha
scas
cmp
cltd
jnp
dec
int
fstp
inc
add
or
push
jnp
push
in
mov
in
call
js
inc
jae
add
push
or
and
jae
jmp
popf
add
sub
popa
push
repnz
pushf
in
mov
js
jp
and
out
and
inc
hlt
mov
xchg
movsb
adc
test
dec
ret
sbb
stos
inc
pop
rcrb
dec
addr16
arpl
inc
mov
in
in
xor
add
add
insl
mov
mov
fdivp
cwtl
pusha
pop
scas
push
pop
pusha
mov
add
inc
les
outsl
pop
iret
out
push
adc
test
test
outsb
jno
repz
and
lods
dec
push
and
repnz
rorl
sti
lods
aaa
jne
pop
sbb
lods
and
jle
inc
jns
test
cmp
mov
dec
das
lahf
and
xchg
mov
sbb
mov
sub
jp
adc
adc
push
xchg
push
and
adc
cwtl
or
les
scas
stos
and
pop
popf
or
or
jge
repz
imull
in
adc
mov
mov
or
mov
adc
lock
ror
outsb
mov
xchg
xchg
and
scas
push
hlt
sbb
or
jp
test
lods
jo
pushf
xor
out
pop
mov
stos
lds
mov
add
jle
and
xchg
sbb
xchg
addr16
xchg
mov
mov
sub
lret
mov
xchg
jl
mov
int3
push
dec
out
inc
out
xor
mov
test
mov
cmp
pop
out
jge
adc
pop
out
xchg
movsl
mov
cmpsb
pop
iret
sub
stos
dec
push
and
ds
push
add
mov
insl
jge
jg
mov
lock
mov
stos
inc
mov
imul
fsubr
loop
dec
lret
repnz
or
iret
mov
push
inc
cmp
jb
stos
or
movb
insl
cs
inc
inc
inc
pop
pop
fisubrl
shrb
or
dec
or
arpl
fidivrs
or
cmpsb
mov
xor
cmp
lahf
inc
push
cmp
aaa
cmc
pop
sbb
mov
fnstsw
sar
addr16
mov
jbe
inc
cwtl
in
jmp
mov
sub
jp
icebp
and
jecxz
arpl
mov
fstpl
sub
sarl
rorb
imul
sbb
repnz
xlat
push
rorb
stos
mov
push
mov
imul
fs
jecxz
ljmp
int
pop
adc
nop
rolb
stos
insb
dec
mov
pop
out
inc
and
and
mov
xor
dec
mov
or
mov
adc
add
xor
popa
add
and
xchg
fsubs
xchg
scas
pop
mov
xor
push
mov
sub
mov
push
mov
in
push
jp
xchg
lret
insb
pop
enter
lods
mov
sahf
or
mov
pushf
scas
insl
cmp
mov
jle
jne
mov
out
jbe
sbb
fsubl
pop
pushf
nop
mov
inc
add
xchg
lret
ja
sub
mov
pusha
mov
sbb
inc
movsl
jle
xchg
fs
cli
mov
pop
push
xchg
gs
cmp
push
mov
sbb
out
cmp
clc
cmp
mov
push
inc
mov
sbb
lock
std
pop
into
push
movsl
les
mov
loope
shll
and
shll
and
pop
insb
inc
cmp
nop
insl
daa
xchg
lcall
lcall
sti
cwtl
lds
push
lahf
cmpsl
push
sub
and
and
movsb
leave
jecxz
cmp
or
shlb
adc
dec
and
jbe
cmpsb
adc
and
fs
call
lea
sbb
test
mov
push
in
fstl
fwait
popf
orl
ja
je
sub
andb
pop
or
sub
push
je
add
push
fcmovnu
mulb
mov
cmpsl
inc
push
xchg
ljmp
push
stc
icebp
pop
inc
rclb
out
xchg
hlt
pmaxsw
repz
jp
sub
mov
hlt
xchg
jle
and
ja
adc
jae
not
xchg
mov
incl
mov
jnp
imul
aaa
mov
fistpl
mov
aad
out
popf
popf
cmpsb
sub
out
xor
pop
dec
test
or
mov
add
scas
pusha
mov
lock
xor
in
jecxz
outsb
xorb
fdivs
out
pop
sbb
xchg
iret
xorl
icebp
rolb
lahf
xor
lock
mov
notb
popa
adc
inc
pop
pop
in
dec
mov
in
sti
movsb
inc
sbb
in
mov
popf
mov
xorb
cmp
or
jp
sbb
pop
add
or
outsl
inc
or
inc
inc
shrl
dec
and
repz
or
push
sbbb
and
mov
mov
scas
adc
scas
xchg
adc
dec
stc
sub
ret
cmpsb
imul
push
mov
mov
pop
lret
push
xchg
int
mov
pop
inc
test
sar
js
lock
ss
xlat
leave
dec
shlb
bound
lods
popf
daa
xchg
add
popf
mov
sbb
and
stc
out
add
inc
insb
hlt
les
addb
shlb
or
cmp
jbe
jp
push
inc
mov
mov
sub
jns,pt
push
sub
lock
pop
dec
and
or
add
xchg
enter
or
sub
ds
test
sbb
scas
andb
fsubp
popl
add
js
push
jb
pop
push
dec
mov
arpl
das
and
out
movsb
mov
call
push
jo
test
mov
dec
push
push
inc
adc
scas
jp
cld
in
add
xchg
loope
jne
lock
adc
jne
pushf
adc
and
dec
pop
cmc
imul
add
or
nop
mov
leave
das
add
dec
movsl
jns
sbb
sbb
mov
test
mov
mov
mov
inc
sti
mov
cmpsb
jp
mov
xchg
xor
aas
aaa
stos
mov
sub
push
or
hlt
sub
inc
lahf
pop
int3
and
add
ljmp
push
pop
jge
jbe
sbb
push
adc
test
cmc
push
mov
es
cwtl
mov
jnp
lods
mov
test
xlat
xlat
cmp
dec
movsb
ja
ret
insb
pusha
xchg
mov
mov
push
jb
mov
jecxz
jecxz
mov
push
scas
push
dec
xchg
cmp
es
or
lods
inc
mov
sti
ret
pop
lcall
in
rcl
int
cmpsb
and
adc
shlb
sub
mov
pushf
iret
cmpl
add
int
pop
xchg
add
lock
imul
mov
insb
insb
roll
inc
mov
dec
push
push
cmp
fcoms
test
cmpl
lret
push
ja
mov
jl
pop
mov
sub
mov
movsl
adc
xor
jle
pop
and
cmp
add
iret
and
sarl
push
adc
es
stc
xchg
stc
jle
jmp
stos
mov
into
jp
aam
pop
or
jbe
mov
addl
xchg
jbe
mov
add
sbb
fiadds
dec
int
loop
int
repz
test
hlt
add
shlb
mov
sti
orb
scas
add
sarb
pusha
xchg
pop
cmp
cli
fcoml
lret
dec
cmp
lahf
nop
mov
cmp
push
mov
mov
gs
dec
fnsave
movsb
mov
loop
bound
sub
hlt
mov
sbb
add
add
dec
mov
mov
add
pusha
adcl
aam
daa
cmp
fcomps
and
push
pop
pop
sub
dec
mov
loop
adc
xor
push
fmuls
push
jns
leave
mov
int3
leave
mov
cmp
pop
movsb
mov
bound
in
sub
xchg
dec
push
push
jmp
mov
pop
inc
xor
aam
sub
lods
dec
out
div
dec
xor
cs
dec
inc
mov
enter
inc
out
sub
dec
jge
popf
mov
sub
sbb
ss
xorl
int
adc
xor
fdivl
insl
cmpsb
pop
pop
testl
scas
xor
adc
mov
int
or
rcr
adc
jmp
add
inc
xor
jl
mov
cmp
mov
jb
mov
flds
imul
lahf
mov
push
imul
les
jl
cli
aad
cmpsb
xchg
fldl
push
jnp
inc
test
xor
insb
xchg
sub
scas
flds
add
popf
iret
out
aas
dec
push
outsb
imull
fidivrs
pminsw
fucomip
ret
jl
cmp
add
dec
frstor
inc
fisubrl
mov
cmp
aam
cmpxchg
ljmp
xor
jl
sbb
cwtl
fiaddl
mov
stc
jnp
pop
xchg
cld
bound
add
push
popf
push
imul
jns,pn
mov
in
int3
out
cmp
movsb
leave
icebp
pop
push
pushl
mov
stos
push
mov
stc
lds
ror
jno
xchg
test
jmp
aaa
jo
dec
es
das
sub
je
scas
jnp
push
inc
mov
jae
insl
shlb
ljmp
imul
ds
pop
imul
es
imul
ljmp
and
out
sub
movsl
sbb
jbe
dec
jl
jle
lods
sub
inc
out
adc
inc
mov
and
fildll
movsb
jl
mov
inc
rcl
je
movsb
push
adc
sub
andb
cmpsb
inc
jo
mov
rclb
mov
pop
and
nop
push
int3
lea
and
pushf
das
imul
stos
rclb
mov
inc
inc
dec
leave
lock
mov
dec
lods
cmp
or
inc
mov
push
imul
scas
pop
scas
lret
sarl
mov
cmpsl
pop
mov
jmp
or
mov
add
shrb
lock
add
cmp
xor
jl
fdiv
ja
pop
cmp
subb
sub
lret
dec
sbb
in
xchg
sbb
push
stos
repnz
mov
sahf
cmp
cli
and
nopl
mov
pushf
mov
shl
cmp
mov
mov
les
mov
pusha
fsts
das
adc
pop
iret
in
fdivs
mov
push
xlat
stos
mov
push
test
repz
inc
add
mov
dec
insl
add
dec
rclb
sub
int
mov
in
cltd
test
je
cmp
dec
or
scas
push
push
jp
cmp
inc
and
test
jge
pushf
cmp
jae
jnp
dec
idivl
scas
sub
mov
shll
aas
gs
imul
cmp
pop
dec
stc
insl
insb
pusha
xor
xchg
mov
inc
js
dec
aam
push
push
jnp
adcb
sub
lods
xor
repnz
mov
fidivrs
imul
xchg
test
mov
ljmp
xor
jmp
adc
fsubrs
test
mov
sbb
nop
test
push
inc
cmc
imul
es
push
nop
fwait
cmp
idivl
add
push
mov
rcr
dec
mov
data16
fsts
dec
into
cmpsl
sub
enter
popa
stos
mov
jecxz
jns
repnz
or
mov
arpl
pop
sub
and
push
sub
testb
mov
enter
aaa
movsl
add
mov
push
xor
mov
adcl
decb
mov
add
jp
js
mov
lcall
mov
pop
dec
jno
push
cwtl
push
jmp
push
mov
add
popa
cltd
adc
add
jecxz
aaa
push
sub
jne
pop
add
push
aad
cmp
divb
add
cltd
ljmp
ret
iret
jmp
xor
sub
dec
push
inc
push
and
je
xchg
cmp
jp
ret
adc
or
mov
data16
icebp
outsl
add
dec
js
popa
or
pop
lods
or
sbb
pop
mov
repnz
ret
cld
xchg
out
hlt
test
fisubl
jmp
mov
pop
out
push
sbb
xchg
inc
xchg
insl
mov
int3
sbb
fdivrp
xor
mov
ss
mov
aaa
enter
cmpl
and
xchg
mov
cmpsb
xchg
gs
lahf
push
pop
mov
jbe
addr16
push
inc
jmp
xor
mov
rcr
sbb
in
inc
mov
test
negl
push
je
sub
fbld
add
or
inc
mov
es
or
pop
and
inc
lahf
js
test
push
or
outsb
dec
icebp
pop
mov
into
mov
inc
pop
fisttpl
stos
shll
orb
popf
dec
lret
xor
outsl
icebp
dec
aad
fwait
add
jle,pn
push
enter
xor
lds
es
aaa
add
and
aam
mov
inc
sub
enter
iret
insb
mov
xchg
arpl
mov
add
into
jnp
sarb
sub
push
mov
and
shlb
xchg
addr16
clc
movsb
andb
popa
ss
pushf
mov
inc
int
push
inc
call
in
fwait
sahf
xor
shr
xor
mov
pop
mov
jae
out
lcall
hlt
dec
aad
dec
sbb
mov
dec
mov
imul
cmp
or
push
mov
xchg
adc
mov
sti
jmp
cltd
mov
adc
decl
mov
mov
icebp
xchg
hlt
or
push
insb
dec
mov
xchg
dec
fstpl
int3
loope
inc
lods
pop
inc
test
xchg
repnz
sbb
mov
mov
in
movsb
sub
data16
sbbb
loope
ficomps
xor
fcmovnu
adc
xchg
mov
cmp
clc
push
shrb
fistps
inc
out
and
testl
mov
std
push
into
adc
in
jbe
adcl
xor
or
sahf
push
sbb
cs
cmp
ret
mov
and
pop
push
pusha
sub
movsb
dec
pop
cmp
popf
pop
dec
out
aad
aad
cmp
xor
out
ret
lahf
jmp
adc
mov
jmp
jns
sti
and
outsb
outsl
pop
mov
inc
fisubrl
add
mov
loopne
addr16
or
dec
or
lds
mov
add
inc
cwtl
mov
inc
notl
fsubl
mov
pop
mov
fisubl
gs
mov
neg
out
adc
xchg
inc
jl
scas
in
mov
subl
lods
mov
test
sbb
push
imul
data16
repz
xor
fs
int
sub
hlt
cmp
cmp
call
mov
mov
xchg
popa
sub
aaa
dec
rcrb
test
inc
inc
fidivs
cmp
ljmp
dec
mov
adc
xchg
pop
jae
push
mov
push
test
cltd
andl
xor
lods
inc
push
mov
test
xor
mov
jge
cli
dec
inc
pop
loop
daa
insl
adc
shlb
mul
mov
adc
cmpsl
inc
rcll
xor
jge
lock
push
test
and
or
jae
in
mov
add
push
test
jne
mov
stc
dec
mov
jbe
pop
lds
mov
sub
data16
xchg
jg
push
jge
inc
add
sub
fchs
mov
inc
int3
out
cs
aam
movsb
adcb
ret
ds
adc
mov
movl
subb
orb
jb
loopne
xor
cmp
ret
pushf
dec
sub
jmp
pop
jnp
adc
data16
pop
int
andb
rorl
pop
xchg
add
sbb
loope
popf
jbe
or
das
insl
and
or
pop
dec
sub
mov
xchg
pusha
push
pop
imulb
ret
imul
sub
dec
jne
sub
dec
mov
sub
xor
push
or
adc
push
jns
shll
out
ds
test
push
in
or
push
push
mov
popf
sbb
pop
into
or
mov
cmp
fadds
ret
repz
inc
mov
scas
mov
addb
fmull
rorl
mov
push
hlt
or
fadd
lock
aaa
loopne
sub
aam
mov
push
aaa
in
lock
popa
pop
arpl
inc
mov
fildl
fwait
lret
cmp
dec
rcrb
xchg
aam
xor
sbb
aaa
into
dec
fbstp
add
jb
jbe
mov
xchg
addr16
out
ret
mov
sub
out
sarl
fsts
mov
lock
add
out
inc
adc
leave
test
inc
adc
aad
cmp
icebp
pop
jl
jg
and
stos
aam
push
sahf
sbbl
in
aaa
mov
mov
cmp
popa
and
test
movsl
mov
mov
add
xchg
pop
sbb
mov
mov
cmp
jecxz
mov
ficoml
lcall
cwtl
in
movsb
push
shl
xchg
addl
mov
xor
scas
dec
insb
dec
dec
lret
scas
sub
add
cmp
inc
push
sub
pop
pop
mov
mov
mov
lock
pop
ficompl
mov
cmp
ds
dec
cs
inc
xchg
call
xlat
int
sbb
jo
mov
scas
cwtl
clc
stc
adc
mov
mov
lods
pushf
push
fimuls
mov
imul
mov
xrelease
loopne
test
or
es
dec
mov
jbe
test
sub
loopne
je
push
sbb
add
inc
and
aas
insl
push
bound
cmp
shl
cmp
leave
push
fidivs
push
lock
hlt
mov
out
pop
mov
dec
dec
jb
mov
insl
pop
repnz
jp
cs
jb
setle
push
mov
aaa
xor
mov
mov
data16
mov
sub
cld
xlat
sbb
imul
int
loopne
add
jmp
add
cwtl
push
repnz
pop
push
int
shll
je
stos
lock
outsb
das
mov
mov
out
rdmsr
pop
sbb
jmp
repnz
test
daa
push
xchg
addb
inc
and
jbe
ficoml
movsb
imul
hlt
pop
mov
push
mov
test
sbb
in
mov
fstpl
cs
mov
inc
mov
or
mov
jbe
dec
sarl
push
roll
adc
fnstsw
push
inc
je
ljmp
jns
mov
dec
sbb
addr16
loop
mov
mov
cmp
test
cmp
pop
mov
dec
or
xor
mov
xchg
mov
addr16
movsl
shrl
test
push
and
push
arpl
int3
je
movsl
nop
mov
xlat
jl
es
arpl
inc
add
mov
mov
dec
jl
xchg
xchg
icebp
fbld
subb
inc
js
xchg
mov
sbb
cli
cmp
mov
sbb
movsl
and
jne
insl
jae
movsl
push
imul
mov
outsl
shlb
jno
sbb
mov
jle
sbb
push
and
fistps
pop
scas
xchg
inc
stos
xchg
out
dec
push
inc
mov
cmpl
lods
cmp
popa
insl
aad
push
push
add
scas
sub
inc
sbb
cmp
out
or
pop
leave
in
mov
cmp
rorl
rorl
mov
xor
outsl
and
cltd
lock
sub
fsubrs
lahf
and
outsl
dec
bound
mov
imul
sub
std
mov
or
inc
mov
jmp
pushf
push
adc
pop
and
mov
mov
pop
mov
mov
mov
or
pop
xchg
jb
fidivrl
pop
outsb
lret
loope
xchg
and
lock
pop
out
rorb
pop
out
out
xchg
add
call
mov
sub
lock
jmp
cmp
testb
rcrl
pushf
mov
movsb
pop
ljmp
inc
cmpb
jmp
adc
movsl
outsb
clc
jg
cmp
lahf
push
add
decl
imul
lret
mov
mov
xor
mov
out
mov
lret
jle
xor
xor
add
lods
mov
adc
add
ljmp
xor
jle
add
icebp
cli
xlat
and
mov
cli
pop
aam
arpl
push
xchg
dec
int3
inc
jo
in
ret
fcomp
and
or
dec
shrl
add
pop
xchg
test
lods
dec
cmp
fcompl
out
pop
aaa
and
or
sub
scas
outsb
mov
or
call
into
jge
pop
loope
cmp
rol
dec
mov
add
xor
jl
jmp
aam
inc
imul
addl
addr16
lret
mov
repnz
adc
push
adcb
shrb
imul
inc
mov
mov
aaa
cmp
push
roll
mov
dec
lret
bnd
mov
push
movsb
lods
dec
add
icebp
insl
adc
dec
jno
pop
sahf
mov
pop
pop
jbe
ret
rorl
xor
fimuls
outsl
or
lcall
mov
or
xor
shlb
ljmp
or
pushf
dec
stc
clc
cwtl
mov
or
sahf
sahf
mov
scas
add
lret
mov
ss
fistpl
stos
and
lret
push
sub
adc
lods
push
push
lods
ds
lcall
push
stos
icebp
ficomps
orb
in
fistl
dec
stc
stc
mov
mov
inc
ret
es
xorb
ljmp
lods
mov
adc
test
sbb
xchg
dec
in
adc
push
mov
inc
stos
sahf
ss
ret
or
cli
cmp
lcall
mov
icebp
mov
mov
ljmp
or
loope
pop
in
sub
xchg
inc
repz
cmpsl
negl
cld
bnd
ret
mov
mov
insl
xchg
push
mov
mov
mov
xchg
jmp
push
add
lret
fildll
mov
add
xchg
xor
xchg
ja
pop
add
mov
int3
or
jb
stos
mov
or
icebp
into
icebp
sub
in
movb
dec
inc
outsl
pop
cmp
push
sti
dec
mov
aas
mov
pop
pop
sbb
cmp
push
and
mov
scas
and
xor
test
mov
ss
scas
std
mov
pusha
test
pop
xor
sub
mov
shrl
scas
jne
outsb
movsl
nop
mov
and
dec
add
in
jbe
pop
sbb
push
sbb
pop
cs
out
mov
and
xorl
jns
push
mov
xor
aas
jg
mov
aaa
es
shlb
jmp
add
xchg
ret
repz
mov
cmpxchg
lahf
inc
cmp
lods
aas
mov
leave
push
dec
in
movl
adc
cmp
mov
cmp
sbb
xor
pop
rep
pop
xchg
dec
fldl
les
pushf
push
jl
popa
das
test
mov
mov
jp
out
add
xchg
outsb
imul
pop
xchg
inc
adc
pop
sti
cmc
mov
in
mov
inc
dec
insl
pushf
push
xor
in
xchg
sub
subl
stos
pop
cmp
cmp
mov
sbb
xor
js
aaa
xor
js
mov
jnp
pop
arpl
jne
or
and
in
add
adc
jne
mov
pop
mov
pop
cmp
xor
data16
jno
lcall
cmpsb
push
je
insl
sar
aam
scas
out
std
loop
cmpsl
add
leave
out
shl
icebp
jae
int
rcll
fbstp
xchg
adc
std
lods
loopne
sbb
bound
cmpsl
and
in
xor
jb
test
roll
and
mov
and
push
int
lea
call
cs
jbe
stos
cmp
outsb
jp
stos
jo
pop
popa
call
std
cld
jle
add
enter
test
pop
xor
daa
popf
lds
xor
rorb
ja
fcomi
das
cltd
inc
fstl
push
mov
pop
lods
pop
lret
imul
movsb
addr16
sbb
ljmp
into
insl
jns
mov
add
inc
mov
xor
fidivrl
es
outsl
insl
movsl
stos
cltd
jmp
sbb
dec
ret
add
imul
pop
or
or
daa
jne
xor
adcl
jmp
ljmp
mov
pop
das
loop,pn
stos
loope
ret
call
leave
xor
cli
je
and
mov
aam
push
jno
dec
push
imull
sbb
jp
loopne
shr
loop
fsubrs
and
lea
lret
shrl
popa
imul
inc
ljmp
sahf
jle
and
push
inc
jbe
mov
mov
js
add
mov
xchg
fcmovnu
mov
cltd
pop
adc
adc
xlat
fildl
push
insb
out
testb
cmc
cmp
cwtl
out
lods
mov
in
in
les
cmp
xor
pop
jmp
sub
mov
cld
psubq
inc
inc
xor
scas
inc
out
insl
pop
sahf
xor
jno
fcmovu
mov
sub
jnp
jp
dec
out
jnp
sbb
lock
mov
rol
nop
push
mov
orb
cltd
jns
push
xor
in
sbb
in
sbb
add
push
xchg
adcl
jae
lea
ret
mov
inc
add
dec
sti
mov
xchg
mov
xchg
fadds
call
push
xor
in
stc
ljmp
xor
dec
pop
outsb
xorb
in
add
jecxz
outsb
xorb
and
jnp
jb
imul
loopne
gs
jge
in
cmp
dec
ljmp
pushl
bound
jl
aas
mov
pop
cmc
nop
mov
sub
jp
dec
push
or
enter
movsb
sub
jg
add
imul
push
ja
push
lea
add
bound
lcall
cltd
pop
outsb
adc
je
adc
add
mov
dec
loopne
daa
mov
lret
shl
xor
mov
push
xor
and
dec
inc
push
js
and
inc
out
lods
pop
adc
popa
repz
cli
gs
mov
push
cld
inc
adcl
lods
cltd
adc
mov
addb
xorl
ds
mov
mov
lods
and
rclb
bndstx
sub
pusha
rcrl
xchg
xor
mov
lods
xor
lcall
lret
xchg
pop
out
inc
fwait
popa
sti
cmc
loop
mov
outsl
pop
sub
inc
repz
xchg
inc
cmp
in
push
addr16
xchg
gs
scas
sub
shr
xchg
loop
fildll
stos
jo
div
jae
mov
or
lahf
cwtl
lock
xchg
pop
or
lret
shll
popf
mov
fwait
subl
and
cltd
pop
loope
cmpsl
loope
mov
mov
sbb
jge
test
addb
es
and
push
or
push
mov
cmp
push
mov
hlt
adc
out
shlb
adc
sbb
mov
inc
aad
adc
das
jge
loope
outsb
push
repnz
add
cmp
std
push
dec
lcall
aad
inc
outsb
es
xchg
push
scas
pop
fstl
scas
mov
adc
cmp
dec
adc
pop
cmpsl
jl
int3
push
sub
mov
add
ret
fcoml
nop
ja
xchg
push
inc
adc
push
test
out
loopne
cli
ret
aam
or
add
hlt
scas
dec
adc
sub
xlat
dec
push
push
fmull
mov
ret
jle
xor
jmp
pop
out
add
fsubrl
movsb
rcl
inc
orl
xchg
loope
pop
push
adc
pushf
imull
movsl
xlat
mov
or
mov
nop
bound
pusha
adc
sub
cmp
jae
push
add
jg
pop
cwtl
mov
sbb
inc
movsl
xchg
sbb
jnp
sahf
repnz
out
ret
pop
repz
lahf
in
repnz
lcall
fs
cmp
cmc
or
jmp
dec
shl
rorl
mov
dec
xchg
std
gs
inc
xchg
test
push
inc
aas
adc
das
lds
mov
jmp
adc
pushf
ret
les
test
and
test
jo
xchg
push
les
dec
pop
cmp
andl
pop
push
mov
adc
stos
mov
sbb
adc
or
fdivr
data16
xchg
mov
jno
data16
sub
push
jg
pop
ficompl
addb
scas
pop
scas
fists
outsl
jmp
ds
push
ss
or
mov
leave
dec
mov
aas
cmc
xchg
inc
adc
int
rcrl
cld
mov
ret
popa
and
mov
xor
addl
out
lods
jno
xchg
dec
mov
cmpsl
jle
scas
cmp
movsb
fs
mov
lahf
fmul
push
and
inc
fadds
or
mov
lret
add
mov
mov
mov
int
mov
testl
cmp
cmp
inc
xchg
push
sbb
mov
xchg
sbb
call
add
lods
jge
push
repz
mov
pop
out
xor
addr16
fistpl
pop
sahf
add
xlat
mov
out
int
lock
pop
loope
lods
lock
lods
adc
jg
enter
sbb
xchg
mov
push
mov
push
xchg
jns
adc
setge
outsl
aam
gs
std
cmp
mov
fsub
sub
pop
push
lahf
adc
and
movsl
pop
mov
xchg
jns
js
mov
jns
movsb
xchg
fisubrl
ljmp
sub
sahf
add
lret
iret
scas
int3
ret
movsb
cmpsl
dec
ss
jnp
arpl
jg
cwtl
lds
cltd
popl
cmp
sub
insl
add
or
ret
cwtl
in
aas
xchg
outsb
xor
cs
leave
add
cmp
dec
call
out
mov
cltd
mov
lods
xor
fs
mov
shll
data16
pop
popa
sub
jl
inc
mov
dec
mov
mov
xchg
nop
xchg
push
push
xchg
popf
icebp
fdivl
insb
jbe
sbb
mov
fnstenv
sbb
fxch
push
mov
mov
int
and
cltd
data16
inc
pop
mov
xor
mov
inc
mov
cmp
sahf
sub
xlat
mov
comiss
pop
daa
gs
sub
lods
sahf
or
movsb
push
aas
mov
fisttpll
cwtl
mov
sbb
mov
dec
imul
cmpsb
out
loope
pop
test
shlb
dec
add
dec
ja
lret
push
fsubs
xchg
jne
lret
rorl
sub
inc
sbb
shrb
push
add
clc
mov
or
pop
shl
pop
dec
cmp
sti
andl
jg
mov
lods
in
xor
mov
mov
sub
push
lock
repz
mov
add
and
roll
mov
das
inc
int
ret
rorl
jp
int
adc
enter
stos
xor
insl
das
mov
pop
mov
ss
sahf
movsl
lods
inc
and
insb
sbb
sub
call
push
call
fildl
cmc
outsb
xchg
daa
in
in
inc
sti
jbe,pn
ror
sub
adc
pop
cmp
cwtl
pushf
mov
sbb
scas
clc
scas
insb
dec
idivl
add
inc
fiadds
jns
mov
mov
xchg
test
idiv
imul
int
outsb
dec
test
rcll
outsl
js
in
mov
sbbl
es
in
ud1
xlat
in
sub
pop
lret
lods
cmpsb
clc
movsl
push
shll
repnz
cmp
pushf
push
sbb
hlt
pop
dec
xlat
adc
pop
jmp
mov
sub
into
andb
rorl
pop
mov
test
ja
bound
jbe
pop
xchg
push
enter
jae
mov
daa
test
fcmovnb
mov
adc
mov
sbb
push
lds
imul
mov
test
cmp
cmp
mov
hlt
gs
xchg
jo
lcall
ds
mov
jnp
inc
lods
mov
push
mov
popa
mov
fstps
and
icebp
in
repz
ss
jp
call
inc
pop
loope
hlt
add
mov
push
imul
icebp
mov
adcl
xchg
jnp
ret
add
shll
sub
pop
lods
pop
sbb
sub
insl
pop
out
push
ds
pop
inc
imul
inc
dec
outsb
sub
sbb
cmp
mov
sbb
shlb
pop
adcb
jl
dec
inc
dec
lock
leave
jno
mov
mov
xor
insl
jle
ret
cmp
out
in
repz
or
dec
cmpsl
pop
roll
xchg
add
or
and
pop
aaa
jmp
xor
mov
lds
shll
jmp
push
in
loopne
push
ja
pop
mov
lahf
jmp
loopne,pn
jecxz
xchg
icebp
popl
push
movsl
insl
mov
adc
aad
fists
pop
test
mov
out
jge
add
sbb
insl
test
xchg
das
jle
xorb
and
mov
mov
add
sub
adc
mov
test
das
scas
xor
out
sub
or
xor
jne
stos
xor
sbb
mov
mov
cltd
vmread
ficoms
pop
adc
dec
mov
nop
fildll
sub
push
andb
adc
sub
inc
sbb
add
adc
pop
fwait
push
mov
pop
pusha
dec
jmp
je
out
push
enter
or
in
push
pop
roll
jae
stos
or
jns
cmpsl
push
mov
cwtl
jb
sbb
dec
mov
in
push
or
push
fldt
dec
js
jge
jo
inc
pop
xor
jp
jns
mov
cmp
or
inc
push
movsb
add
pop
or
sbb
push
enter
and
pop
push
mov
cmp
pop
mov
inc
int
inc
jnp
pop
sub
lahf
or
jle
scas
add
sub
in
dec
rorb
not
sarl
inc
cld
sbb
ja
mov
les
loop
pop
fcmovbe
lea
cli
and
shlb
test
cmp
in
dec
aad
adc
nop
pop
dec
jle
mov
in
insb
push
xchg
nop
xor
inc
subl
xchg
and
popf
int3
mov
outsb
jbe
xor
cmc
out
adc
push
push
xor
dec
dec
jmp
pop
xchg
xchg
inc
add
mov
pushw
inc
je
ljmp
jecxz
pop
fidivl
inc
das
add
add
xchg
out
imul
sti
or
mov
insl
xchg
fwait
js
xor
je
lock
aam
fwait
cmp
jmp
lahf
cmp
adc
pop
push
jbe
pop
add
or
mov
mov
sbb
and
in
mov
jae
sub
mov
xchg
xor
clc
inc
dec
mov
clc
fsubs
mov
push
mov
lret
out
mov
push
sarb
xchg
ja
jno
xor
inc
rorl
icebp
insl
cmp
js
rolb
sbb
mov
pop
stos
cmpsl
adc
jns
xchg
pusha
adc
sbb
adc
or
dec
inc
pop
jns
test
aas
sbb
sub
pushf
shr
repz
lcall
add
push
dec
mov
fisubrs
int3
ds
or
dec
jns
nop
inc
add
iret
lock
les
ror
imul
and
xchg
daa
xchg
dec
pop
pop
test
popa
jmp
daa
add
mov
jne
scas
pop
pop
cmp
pop
adc
dec
or
sbbl
rcr
cmp
out
and
inc
pop
jl
imul
sub
pop
in
lods
lock
adc
mov
das
add
mov
repz
mov
aam
call
cmpsl
leave
es
cmpsb
mov
push
cmp
imul
sbb
sub
and
mov
xchg
les
push
ret
pop
fists
insb
cmpps
daa
inc
jl
xor
mov
xor
jns
or
and
repnz
out
std
add
xchg
fistpll
push
push
push
mov
push
scas
pop
icebp
dec
inc
cmp
xchg
mulb
fstpt
mov
xchg
bound
sti
sbb
dec
pop
xlat
inc
jo
icebp
int
dec
sbb
out
popf
jp
push
push
mov
cs
ffree
mov
xchg
cmp
rorb
sbb
add
stc
mov
mov
mov
aam
and
cld
jge
xchg
and
fst
add
and
ret
sbb
fcoms
pop
cmp
aaa
inc
cmp
fcmovbe
sub
or
jle
test
rolb
jecxz
clc
inc
xorl
inc
int
sbb
movsl
rcrl
jno
inc
push
clc
cmpsb
push
ret
xchg
in
jae
out
xchg
pop
inc
jle
jp
add
mov
push
mov
sub
ds
push
rcl
add
aad
inc
add
mov
jne
add
mov
pop
jo
stos
and
stos
pop
ljmp
int
pop
cmpsb
cld
or
cmpsl
or
sbb
aaa
xor
nop
mov
dec
xor
mov
movsb
inc
sti
inc
scas
hlt
xchg
dec
xchg
sbb
cmp
popl
inc
xchg
pop
pop
or
test
out
push
ljmp
ss
in
insl
rcr
repz
std
mov
test
movsl
cwtl
push
lcall
cmp
es
je
add
xchg
popf
cmc
mov
push
mov
decl
clc
scas
fldcw
cmpl
rcrb
pop
jmp
inc
cmp
xor
mov
push
inc
pop
jge
sbb
mov
pop
inc
sahf
jmp
out
jb
lret
cmpsb
cs
cmovge
mov
js
or
ja
fsub
or
int3
or
inc
jnp
repz
test
add
repz
ret
hlt
movsl
cmpsl
sbb
popa
mov
jmp
lea
jae
inc
adc
hlt
xchg
push
xchg
fsubrs
cmpsb
mov
movsl
movsb
jmp
xor
push
mov
pop
dec
lea
fisubrl
pop
fdivs
jp
mov
out
xchg
ficompl
cmc
xchg
shlb
fs
pop
cli
mov
repz
pusha
fisubs
dec
pop
bound
loope
adc
cli
jmp
jns
loope
rorb
mov
scas
in
cmc
cwtl
fs
mov
mov
dec
lock
ss
inc
mov
add
sbb
dec
sbb
cmp
sub
jmp
or
int
in
push
scas
pop
call
div
pop
push
jge
mov
inc
xchg
fbld
bound
sbb
pop
pop
push
insb
cmc
mov
in
lcall
out
push
mov
lds
dec
iret
sub
jno
enter
dec
jno
sub
push
popa
add
mov
sbb
popf
sbb
jns
xchg
fistpll
sub
mov
push
scas
mov
xchg
mov
push
lods
dec
pop
imul
mov
jo
push
cmp
adc
jnp
ljmp
je
cmp
popa
mov
out
push
cmp
add
push
pop
idiv
lret
lea
sub
aad
jnp
xchg
pusha
pop
out
std
jp
inc
jl
xchg
or
xchg
cmp
call
jl
jl
inc
jno
xchg
out
pop
sub
mov
lods
ss
inc
loopne
ss
pushf
jo
test
fnstcw
and
ficoms
imul
sub
in
mov
movsl
mov
imul
push
fsub
leave
cmp
les
ss
mov
inc
cld
imul
in
loopne
fisubl
add
pop
cmpsb
dec
int
xor
test
jl
fcom
aaa
mov
push
cs
push
mov
mov
adc
push
jecxz
xchg
adcl
loop
or
dec
sar
lds
mov
call
sbb
mov
xor
push
sbb
jmp
lcall
mov
jmp
mov
pop
clc
imul
stos
hlt
fsubr
ss
fs
sub
call
stc
movsb
jbe
mov
lret
jnp
aad
repnz
loope
add
jae
push
movsb
imul
sub
iret
repz
js
ss
jecxz
lods
ja
jle
adc
sbb
xchg
mov
popf
inc
jge
lret
decl
cmp
push
jne
sbb
enter
or
mov
fs
jnp
lds
jb
and
adc
jb
push
es
mov
scas
aaa
cmp
data16
pusha
mov
mov
sbb
mov
xor
outsb
aad
mov
stos
icebp
mov
sbb
mov
push
das
jo,pn
cwtl
add
testb
imul
mov
icebp
jecxz
jp
mov
xchg
cltd
js
mov
int3
test
adc
mov
lods
push
hlt
stos
fstl
sub
mov
insb
inc
aas
jbe
cmp
insb
std
push
ja
dec
ljmp
xor
or
in
shll
add
xor
jecxz
dec
testl
mov
lret
inc
lea
sub
dec
cmp
pop
int
and
call
sub
jle
adc
lret
fwait
pop
jbe
push
push
sti
dec
aaa
ljmp
rolb
add
jle
mov
pusha
fsubs
sub
pop
dec
iret
into
push
in
test
jp,pt
adc
std
subl
push
fistl
jg
xchg
rcr
sbb
ret
fistps
jae
pop
push
push
cmp
xchg
sub
push
fiadds
sub
jb
sub
dec
dec
psraw
dec
xor
mov
rcl
push
mov
pop
mov
and
mov
xchg
cli
add
adc
mov
gs
js
es
in
mov
or
imul
insl
test
mov
pushw
cmp
imul
inc
sahf
in
ss
scas
push
clc
aaa
xchg
sbb
test
pop
mov
xor
pop
sub
add
pushf
je
sar
jmp
push
enter
sub
xchg
into
into
fimull
push
das
cmpsl
fcomp
outsl
xorb
lcall
loop
je
andl
call
loop
or
push
pop
xor
lea
js
mov
sub
inc
add
sub
popf
loopne
mov
sub
push
int3
and
xor
call
cmp
mov
shl
cmpsl
jne
pusha
mov
adc
sbbb
jns
and
add
daa
jecxz
shl
sbb
rorb
ret
ljmp
inc
pop
inc
lahf
out
leave
lret
lret
dec
and
hlt
xchg
jmp
xor
sbb
inc
inc
enter
stc
fcoms
cmp
int
cmc
jb
mov
xor
sti
fs
fsubl
sbb
lcall
dec
cmp
inc
jnp
ficompl
sbb
lods
mov
xorl
movsb
pop
push
out
and
dec
cld
inc
mov
js
les
fildll
add
mov
and
movsb
dec
xorl
mov
loop
pop
and
mov
jge
xorb
dec
fcomps
pop
xor
popf
push
jno
adc
add
arpl
jne
pop
stos
ficompl
mov
push
jmp
jl
push
or
iret
mov
cld
sub
aas
les
lcall
push
inc
cmp
push
jmp
dec
mov
mov
sub
cmc
cwtl
test
stc
pop
xor
scas
cmpsl
mov
dec
das
into
call
inc
jne
cwtl
pop
out
repz
outsb
pop
int
jmp
jno
mov
scas
sub
fisttps
push
out
xor
xchg
push
in
out
aad
mov
stos
sbb
xchg
lcall
mov
sbb
and
dec
sub
or
jge
jb
imul
and
in
cmp
test
pop
add
inc
cmc
int3
sbb
push
or
mov
loope
inc
xchg
test
fcomps
cmp
cli
mov
out
test
xchg
push
push
dec
hlt
lock
inc
push
lock
jmp
popa
shlb
xor
rcr
stos
or
mov
jecxz
cmpsb
aas
sub
xor
das
popl
aas
xchg
dec
add
roll
cwtl
cmp
std
add
pop
push
bound
rcrl
aad
cmpl
dec
sarl
sti
xchg
aad
lea
jecxz
inc
sub
or
shlb
mov
inc
inc
adc
incl
mov
into
aam
scas
xor
mov
imul
add
mulb
int3
sub
cld
lods
xlat
shlb
daa
stc
mov
jb
cmp
mov
dec
data16
movsl
lods
mov
lcall
push
repnz
out
lcall
push
xorl
adc
test
imul
call
fwait
or
push
bound
xor
stos
ja
pop
and
mov
imul
pop
xor
lods
push
insl
jnp
push
mov
stos
out
stos
arpl
inc
push
xor
inc
push
xchg
mov
cmovne
xchg
jmp
ja
test
jmp
fsubrp
mov
pop
mov
jge
aaa
add
ss
mov
push
mov
jnp
or
and
sarl
int
imul
out
lds
sbbl
xor
jmp
mov
rcll
sub
mov
lret
lods
add
ret
push
jns
enter
cmpl
jo
push
mov
into
sbb
mov
sbb
inc
inc
mov
clc
push
inc
jns
cmc
jae
test
lret
in
inc
dec
jnp
mov
pop
loopne
sbb
jmp
mov
cmp
sbb
jnp
xor
icebp
data16
sbb
leave
test
jb
enter
les
cmp
insl
mov
hlt
in
xchg
pusha
jle
mov
movsb
enter
sub
hlt
mov
sbbl
sub
shl
or
dec
cld
test
mov
in
dec
ficoms
and
sbb
fsts
mov
enter
push
xor
add
push
add
scas
cld
mov
sbb
xor
push
dec
sbb
cwtl
pop
mov
or
pop
fsubs
fisttps
push
adcl
pop
stos
ljmp
gs
dec
cmp
and
pop
sub
mov
ficoms
mov
scas
imul
or
fiaddl
or
mov
inc
imul
imul
in
mov
pop
and
sbb
or
inc
push
and
movsl
insl
or
fs
pop
fmuls
ret
sbb
xor
jae
mov
lahf
sar
int3
hlt
pop
outsb
and
and
xchg
rorl
pop
push
cmp
push
push
and
jb
aam
add
enter
cwtl
clc
cltd
inc
mov
mov
pop
jb
mov
fdivrs
mov
jmp
mov
adc
cmp
adc
movsl
jle
fdiv
in
and
adc
je
lcall
xorl
jecxz
mov
ret
and
mov
xchg
out
aad
popf
lret
andl
xchg
enter
call
sub
or
cli
test
pop
mov
jno
fwait
imul
test
mov
mov
fwait
lcall
push
or
int
and
fildll
mov
pop
jmp
ffreep
push
dec
mov
loope
xor
arpl
ja
mov
or
push
inc
pop
add
pop
ret
dec
pop
hlt
ljmp
out
mov
push
inc
adc
movb
xchg
call
ret
sbbb
pop
ds
mov
xchg
dec
daa
jl
dec
insb
jo
lods
loopne
bound
cmp
cltd
fcompl
xchg
loopne
add
ja
and
jl
not
and
mov
scas
or
popa
pop
sbb
mov
or
mov
cmc
outsl
mov
mov
fidivl
pop
lods
adc
cmp
iret
and
jle
fidivl
movsb
xor
cmp
xor
mov
push
gs
sbb
in
push
in
push
sbb
jnp
je
mov
adc
dec
jnp
mov
xchg
fisttpll
bound
gs
xchg
jno
mov
fstpt
ss
loopne
mov
inc
add
fstps
lds
jmp
jl
enter
gs
pop
test
push
out
dec
rolb
std
or
sub
jmp
pop
dec
pop
fsubr
dec
pop
imul
call
pop
jecxz
or
cmp
sahf
in
sti
hlt
fnstcw
mov
leave
divl
dec
pop
pop
xor
mov
jl
out
cs
xor
aas
mov
dec
xor
adc
xchg
dec
push
fs
push
adc
jae
xchg
pop
push
add
mov
iret
lods
xor
lock
pop
mov
fsubl
cmp
into
es
test
data16
xchg
cmp
inc
lret
sub
xchg
loopne
cmp
add
cwtl
clc
push
jmp
push
lock
outsb
dec
ret
call
mov
sub
rolb
adc
rorb
mov
loop
icebp
shll
xor
xchg
inc
mov
dec
sub
out
test
push
push
fnstsw
mov
int3
adc
xchg
cmp
mov
iret
inc
hlt
mov
jno
jne
aas
out
mov
jge
push
stos
in
lods
cmpb
dec
test
mov
pop
mov
dec
mov
adc
xor
jne
xor
cmp
mov
xor
jnp
inc
aas
mov
xorb
mov
inc
push
out
pop
es
inc
movsb
jbe
ret
xor
cs
out
pop
cmp
jmp
aad
sub
cltd
push
mov
fwait
xor
pop
lods
out
pushf
add
pop
push
daa
jns
xchg
mov
das
btr
xor
gs
aad
loop
mov
xchg
hlt
cwtl
cli
cmp
inc
hlt
sub
cmp
cli
sbb
pop
movsl
push
push
mov
out
test
mov
iret
mov
pop
and
sub
cmp
int3
iret
testb
rcr
repz
jae
cmp
adc
sbbb
sub
rol
sub
outsl
cli
xorb
push
xchg
ljmp
andb
and
jp
xchg
xchg
pop
push
iret
dec
test
pop
sbb
add
add
lea
push
jnp
jmp
xor
fcmovnb
in
and
iret
inc
or
popf
and
daa
pop
rclb
out
mov
lods
int3
scas
mov
push
cltd
scas
je
inc
xor
repnz
sub
cwtl
sub
notl
inc
shll
adc
push
ret
out
adc
mov
or
fildl
inc
idivl
mov
callw
nop
adc
adc
stos
mov
or
sti
cmpsb
fimull
data16
pop
iret
push
or
insb
and
pop
adc
xchg
test
sbb
push
sub
shll
xor
inc
fisubs
cld
mov
inc
jo
pop
jno
outsl
mov
das
dec
ror
sbb
push
jno
mov
test
jle
insb
into
outsl
adc
inc
inc
iret
xor
or
jns
cmp
filds
sub
add
push
cmp
int
inc
pop
jg
add
push
jno
inc
addl
and
das
lods
hlt
arpl
mov
imul
push
lds
sub
out
aaa
leave
nop
sub
xchg
sahf
dec
sub
xchg
cmpsl
loop
xchg
iret
xchg
mov
ja
sub
shlb
jae
decb
fistl
jmp
out
cld
in
lret
xor
push
adc
add
or
xchg
xor
mov
cwtl
push
push
imul
ljmp
add
push
pop
dec
or
sub
jns
xchg
cmpsl
dec
js
fildl
sbb
das
repz
fnsave
into
sbb
xor
enter
cmc
mov
sbb
icebp
rclb
pop
lea
push
xorb
call
repnz
aad
push
fs
or
out
adcl
add
push
pop
inc
sub
and
jo
int3
cwtl
xor
movb
and
stos
jecxz
loop
mov
dec
stc
fdivrs
test
mov
jmp
cs
adc
repnz
cmpb
pop
out
repnz
ss
lods
xchg
push
pushf
ret
scas
push
add
rolb
int3
push
mov
inc
fs
imul
mov
jns
pop
mov
fbstp
out
mov
dec
fsubrs
lahf
ret
jge
cs
xor
xchg
pop
fimuls
xor
cli
into
mov
mov
mov
in
shll
lds
js
push
push
fstpt
jne
add
ds
dec
nop
jmp
cmc
xor
js
sarl
movsb
xchg
fisubrl
and
lock
adc
dec
mov
cmp
mov
jmp
pop
dec
or
push
push
nop
mov
sbb
out
test
fcmovb
mov
mov
pushf
scas
and
sbb
jle
jecxz
cltd
fdivs
stc
push
mov
arpl
aam
sbb
jnp
adc
mov
xchg
inc
test
int
leave
mov
mov
mov
lahf
xorl
insl
push
aam
dec
sub
loope
aaa
rcrl
mov
dec
pop
sbb
arpl
fwait
push
insb
cwtl
rcll
xor
fiaddl
inc
push
cmp
cmp
or
test
sbb
xor
or
sbb
mov
xchg
inc
sbb
sub
test
sub
js
je
pop
mov
addr16
dec
and
hlt
orb
mov
xchg
push
add
xchg
xlat
sti
fs
xchg
fwait
sub
out
repnz
xor
aad
xchg
jmp
pop
or
jo
fsubrl
adc
mov
inc
mov
lahf
imul
xchg
xor
loop
cwtl
cmp
js
sbb
lea
iret
sub
hlt
push
jne
add
and
out
mov
sub
and
fidivrl
fldenv
sub
test
std
dec
mov
adc
aad
aaa
stos
dec
imul
fidivrl
or
jae
test
cmp
mov
push
inc
cmc
lods
dec
mov
rcll
xadd
jne
inc
mov
xchg
cmc
jbe
outsl
sbb
ljmp
ret
addb
call
ja
les
daa
pop
or
cwtl
enter
and
jo
mov
lcall
pop
out
aad
jecxz
pop
sub
mov
aaa
out
or
jp
rclb
mov
sbb
or
pop
repnz
fbld
pushf
ss
push
sub
mov
out
push
cmpsl
test
push
mov
int3
scas
js
inc
xor
cmp
add
push
mov
lret
pop
js
test
and
adcb
outsl
jg
adc
jbe
push
cmp
dec
divb
or
push
sahf
ljmp
outsb
jmp
sbb
sub
jmp
cmp
out
jae
faddl
and
mov
xor
adc
lock
out
movsl
lcall
cld
pop
pop
cmp
inc
stc
xchg
lahf
push
inc
dec
es
push
divb
je
daa
dec
mull
cli
pop
data16
lcall
insb
add
ja
dec
mov
sub
outsb
sub
pop
dec
jmp
lds
inc
or
mov
shrb
daa
lods
je
mov
sarl
mov
std
pop
call
call
call
and
imul
adc
push
cmp
pop
icebp
aas
jp
lea
jnp
xchg
insb
add
jns
add
jo
mov
sahf
bound
push
shl
mov
sbb
fidivs
ud0
mov
pop
subb
fwait
pusha
add
cmpsl
rol
fucomp
lahf
std
stos
mov
fcmovu
in
ljmp
sub
repz
lea
scas
mov
aaa
test
outsl
cmp
mov
add
mov
mov
mov
and
mov
test
gs
or
cmc
jp
rcrb
push
imul
cmp
inc
mov
push
ja
and
cmp
add
sub
mov
inc
jae
jle
jns
or
and
adc
and
arpl
push
mov
imul
lds
bound
add
outsb
movsl
dec
js
xor
fstpt
jmp
in
jmp
sub
lock
inc
jno
pop
adc
popa
imul
popl
nop
inc
rcll
arpl
sbb
sbb
mov
mov
sbb
in
int
sti
lcall
lock
mov
xchg
push
pop
sbb
pop
xor
aam
es
cmp
jmp
shll
mov
mov
sbb
lret
sbb
call
fstps
mov
movsb
ret
stos
adc
jnp
mov
stos
dec
iret
dec
cld
jge
inc
addr16
dec
and
xchg
sbb
bound
sbb
out
scas
ja
fiadds
pushf
cmpsl
mov
clc
loopne
add
push
pushf
ja
leave
or
pop
hlt
icebp
jecxz
and
xchg
adc
cmp
jecxz
divl
mov
les
lret
lock
in
dec
push
mov
incb
jbe
mov
add
and
mov
jmp
cmp
imul
leave
aaa
adc
xchg
cmpb
adc
pop
mov
ret
mov
inc
mov
das
ss
bound
hlt
outsl
mov
nop
push
mov
cmpsb
pop
mov
filds
out
cli
fxch
es
inc
fists
and
int3
pop
out
jmp
lea
imull
cli
xor
add
loopne
cmp
jne
dec
das
mov
int3
cmc
lea
xchg
mov
pop
jb
int
xchg
push
mov
insl
cltd
and
mov
ret
clc
xchg
orl
jbe
push
ds
gs
lcall
xchg
jmp
xor
mov
jae
jns
mov
ljmp
clc
flds
fstpl
leave
nop
scas
jmp
mov
out
out
loope
leave
cltd
and
xchg
lahf
lahf
dec
push
cli
jnp
fsubl
cmp
dec
jb
mov
test
imul
cmp
call
mov
cmc
cli
pop
dec
in
cltd
pusha
outsl
insb
repnz
data16
mov
dec
push
or
sub
sub
testb
xor
xchg
cmp
test
mov
adc
jp
pop
hlt
jmp
xlat
pop
jns
pusha
mov
js
dec
jp
test
and
xchg
movsb
push
mov
popa
sbb
loopne
mov
pop
sub
pop
rcll
pop
dec
aaa
jns
aaa
mov
lock
mov
push
or
jecxz
shrb
lret
stos
ret
je
dec
pushf
jge
xlat
repz
popl
xor
ror
sbb
fwait
cltd
sahf
gs
sarb
cmp
ja
loopne
andb
pusha
nop
push
es
out
mov
pop
outsl
shlb
daa
wbinvd
push
roll
outsb
add
mov
jge
jge
pop
shll
xor
test
sahf
lret
mov
mov
sbb
and
jmp
fucompp
inc
push
js
pop
cmp
jb
ficoms
jb
mov
shl
cmpsl
outsb
sti
mov
push
bound
pop
jge
ret
add
and
push
out
mov
out
ljmp
enter
aam
mov
add
jno
scas
insb
int
sbb
or
cwtl
xchg
pop
enter
inc
pop
jb
imull
and
pop
movsl
sub
pop
sub
fwait
pop
cwtl
ja
test
cmp
pop
jge
movsb
sti
cmp
jnp
outsb
add
cltd
dec
stos
xor
in
lods
sub
into
sub
mov
sub
and
push
int
sbb
xchg
and
dec
or
std
mov
mov
or
je
daa
pop
mov
mov
mov
sbb
and
ja
pop
ds
xor
sbb
jae
xchg
negl
inc
cmpsb
shrl
lret
mov
lret
pop
xor
mov
push
out
aas
imul
nop
xchg
lds
mov
jg
or
je
imul
xchg
mov
jecxz
das
testb
sbb
hlt
pop
mov
xchg
mov
out
xchg
xchg
popf
filds
push
pop
jns
aaa
inc
decl
inc
mov
mov
fldenv
xchg
push
push
ja
dec
stc
out
dec
pop
lcall
je
and
jne
mov
sahf
or
flds
cmpl
sbb
pop
fcom
xchg
cmpsb
xchg
mov
mov
push
dec
push
repnz
sarb
in
sub
aaa
mov
out
sbb
icebp
add
insb
sub
daa
popl
cmpsl
aad
cmpl
outsb
inc
inc
loopne
fadds
jne
pop
pop
ds
mov
inc
xor
pushf
mov
std
inc
inc
xor
leave
xchg
pop
rcr
rcrl
add
or
dec
pop
xchg
cmp
xor
dec
subl
and
add
jnp
jmp
loope
pop
repnz
hlt
movsl
xchg
mov
xor
in
jg
mov
lods
jns
movsb
popa
das
fbld
mov
xor
sbb
dec
or
roll
lods
sbb
arpl
mov
push
mov
sbb
and
jne
adc
sbb
mov
roll
scas
dec
add
sarb
pop
xor
fwait
pop
or
mov
lahf
xor
pop
outsb
fcmovb
test
out
rcrl
jae
add
cmpsl
add
cmc
ret
xor
and
fsubrs
int3
rcll
mov
imul
repz
fidivl
mov
shl
add
fucomip
cld
sub
je
cmp
hlt
nop
dec
xchg
xchg
adc
inc
mov
mov
arpl
aaa
lahf
jne
mov
mov
cmp
cmc
mov
sbb
sbb
mov
mov
stos
fs
pop
aas
or
int3
adc
jmp
adc
test
dec
xor
xlat
shlb
xchg
adc
cmp
inc
fstpl
mov
enter
push
cld
std
iret
orb
ffreep
and
out
xor
outsb
jo
movsl
push
out
out
lods
jle
cwtl
push
mov
lret
js
scas
jno
jp
daa
add
mov
ja
test
imul
ret
jb
mov
mov
sahf
fsubrl
scas
cmp
aam
fstpt
jg
cwtl
fbstp
test
dec
pushf
pop
div
inc
loop
loope
sbb
push
mov
pop
push
outsb
mov
xchg
pop
sub
imul
lret
loop
sub
pusha
jbe
push
test
aas
mov
adc
cmp
add
loopne
mov
in
or
xchg
cli
jmp
xchg
mov
dec
xchg
clc
jae
movsb
and
jmp
xchg
pushf
roll
subb
pop
sbbb
ss
cmpsl
push
jnp
outsb
xchg
inc
shrb
shr
cmpsl
lret
pop
jp
adcb
movsb
cwtl
mov
dec
in
dec
xchg
stos
mov
iret
idivl
pop
movsl
test
repz
jp
mov
sbb
dec
in
jae
insb
int3
jmp
pop
test
pop
cmp
or
cmp
adc
dec
and
ljmp
pop
mov
daa
jmp
adc
jne
mov
mov
sbb
pop
inc
in
add
xor
xchg
xchg
dec
xor
sub
adc
out
xor
shlb
and
push
stc
out
add
addr16
mov
or
fisubl
jnp
lcall
jae
in
bound
test
push
sub
icebp
out
fxch
fcompl
or
mov
into
inc
shlb
imull
add
ret
sarb
adc
stos
push
pusha
out
mov
push
xor
sub
hlt
add
jnp
cmpsb
sbb
mov
rcrl
sti
xchg
cmc
dec
loope
or
sar
cmpsb
clc
aam
mov
movsb
shlb
lock
hlt
cmc
sub
into
jl
and
in
hlt
pop
lret
jns
mov
inc
xor
or
dec
int3
bound
or
dec
pop
dec
cmp
int3
mov
outsl
loopne
push
or
sahf
sbb
aam
sbb
in
xlat
xor
sbb
xchg
jmp
stos
out
cmp
mov
nop
dec
test
inc
dec
out
sbb
push
pusha
les
xchg
pushf
lahf
out
inc
test
push
push
sti
loopne
xor
hlt
imul
inc
add
pop
or
testb
dec
stc
mov
lock
rcll
aas
mov
push
mov
je
push
inc
movsb
inc
cmp
fs
sbb
mov
push
xchg
add
sub
js
xchg
xchg
pushf
xor
clc
in
lret
clc
test
cmp
shll
fwait
hlt
ffree
rcrl
sahf
pop
jae
popa
test
mov
xor
push
dec
mov
sbb
or
in
mov
xor
rolb
sub
xorb
sbb
je
cmp
cmp
outsb
xlat
sbb
push
mov
insl
add
cmp
sbbb
icebp
sbb
pushf
inc
cmp
das
push
xor
repz
xchg
divl
bound
jle
cmpsb
inc
sub
xlat
les
push
dec
jb
int
cli
sub
test
xchg
in
mov
addl
arpl
sub
loop
enter
mov
out
ds
mov
insb
ss
dec
mov
and
imul
test
xchg
fcomps
int
outsl
mov
fimull
jmp
in
push
cli
and
xchg
push
insl
pop
fstps
jl
shlb
pop
idivb
lahf
inc
cmpsb
push
sahf
fildll
mov
dec
jle
xor
out
jge
out
outsb
imul
bound
out
xor
xchg
movsl
mov
cmp
mov
adcl
aad
jo
inc
pop
lahf
adc
or
xchg
mov
inc
sbb
mov
enter
fwait
lods
andl
scas
cmp
or
and
vpaddusw
jle
or
lret
bound
xchg
mov
in
pop
mov
or
out
arpl
mov
aad
fimuls
sbb
mov
push
jmp
idivb
or
mov
fmull
out
inc
icebp
ss
cmp
mov
mov
in
mov
mov
and
sub
add
in
push
xor
cld
and
mov
add
xor
xorl
dec
stc
out
je
js
add
adc
jbe
inc
shlb
xor
fdivr
fdivrs
adc
inc
jg
aaa
push
pusha
mov
mov
jmp
or
or
cmp
mov
ja
leave
mov
mov
sub
arpl
dec
loopne
ret
add
leave
jmp
cmpl
xchg
testb
xchg
bound
leave
in
jae
mov
lahf
cmp
adc
pop
hlt
bound
push
or
shrl
pushf
lret
cli
cmp
pop
push
outsb
ljmp
aam
orl
insb
clc
cmp
sysenter
or
ficomps
and
xchg
sets
jle
sti
adc
add
cmpsb
adc
cltd
popf
cmp
out
and
lods
lea
in
lahf
inc
out
int
cmc
mov
popa
loop
adc
push
lret
mov
push
sub
jnp
repz
or
mov
push
stos
mov
rcrl
lods
aaa
loop
mov
push
cmp
xadd
in
popa
clc
add
fcoml
mov
lret
pop
cmp
push
shr
jg
popf
pop
inc
inc
pop
push
ret
xchg
fistl
jo
adc
cmpsl
lods
jnp
pop
into
and
jle
inc
or
bound
push
and
es
in
cltd
cs
pop
cmp
pop
into
loope
jno
cmpl
dec
jecxz
jg
push
xchg
or
insl
in
jecxz
xchg
pop
cld
fsub
push
pop
cwtl
push
mov
inc
clc
xchg
movl
jle
outsl
iret
dec
inc
test
or
xor
and
addr16
xchg
pushf
daa
and
sahf
scas
adc
dec
inc
mov
scas
xor
pop
loope
pop
dec
daa
jmp
push
xchg
adc
faddp
mov
push
adc
test
xchg
mov
jecxz
lock
sbb
pop
pop
test
sub
dec
outsl
rorb
dec
cmpsb
jo
cld
jmp
pop
lret
fstpt
inc
adc
push
sub
call
mov
cvtpi2ps
jmp
jbe
add
mov
or
ss
in
cld
mov
sbb
lret
std
stos
cli
cmp
and
movl
popf
push
fwait
dec
or
xchg
jge
cwtl
or
std
push
es
fscale
insb
daa
cmpsb
test
xchg
arpl
shrl
jecxz
loope
adc
mov
xor
adc
ret
ja
stos
stos
mov
ret
pop
cltd
xor
sbb
inc
xchg
adc
mov
fsub
sub
lock
inc
push
push
add
push
or
mov
inc
insb
test
adc
jne
lcall
or
addl
or
or
cli
movsb
arpl
mov
dec
sbb
dec
outsb
xorl
xchg
bound
adc
mov
mov
mov
push
pop
inc
dec
xchg
in
inc
pop
xchg
ret
jg
cs
sbb
mov
aaa
cltd
jmp
and
push
gs
sbb
pop
add
jns
push
test
inc
aad
xor
xor
push
inc
les
mov
hlt
call
in
pop
pop
pop
sub
sti
lret
or
jmp
xchg
jo
cli
xlat
push
mov
mov
adc
sub
dec
lds
push
mov
shlb
inc
xchg
icebp
cltd
cmp
add
xor
jl
lock
ljmp
loope
es
sub
or
subb
aad
sub
mov
push
mov
xchg
outsl
adc
xchg
outsl
jns
into
std
lret
mov
inc
mov
aaa
test
shl
sub
stos
notl
or
mov
in
adc
jle
stc
dec
out
loop
mov
cli
clc
int3
stos
jmp
mov
testb
jbe
cld
rcrb
mov
push
or
add
idiv
adc
mov
mov
xchg
push
test
fldt
imul
xchg
ljmp
stos
dec
ret
jb
mov
push
pushf
push
shl
orl
push
daa
movsl
mov
xchg
lea
lock
adc
and
push
cmpsl
mov
pop
push
push
out
jno
mov
loope
jecxz
rcr
and
pop
sbb
cmp
add
clc
mov
push
mov
mul
dec
mov
add
orl
arpl
pop
push
or
jp
popa
xor
sub
push
dec
pop
xor
js
insb
and
jl
into
hlt
test
pop
rcrl
cmp
leave
leave
push
and
or
punpckldq
repz
mov
mov
mov
jecxz
popf
sbb
pop
sbb
dec
jo
mov
mov
in
jne
cmp
ficoml
mov
sbb
cmp
jne
cli
jnp
xchg
mov
cmp
xchg
ja
rorb
inc
xlat
jno
jo
mov
push
jp
cmp
call
jecxz
sub
stos
sti
add
pop
pop
movsb
cmc
pop
pop
addr16
xchg
pop
inc
arpl
xor
stos
and
xchg
mov
pop
fs
push
stos
fistpll
ficompl
loopne
xchg
aam
clc
push
push
xchg
call
mov
or
jae
push
test
in
iret
push
testl
insl
add
imul
scas
mov
test
jmp
stc
cmpsl
cmp
xor
aas
popa
push
and
aad
push
andl
xor
test
insb
and
sub
jl
mov
cmpsb
andl
fimull
lret
xlat
mov
mov
in
sbb
pop
into
push
sbb
fldenv
adc
fs
or
jecxz
mov
mov
pop
fs
in
sbb
jmp
or
inc
fs
sbb
loope
or
jnp
push
ret
xor
subb
or
jmp
pushf
insb
mov
out
mov
mov
dec
xor
mov
jmp
mov
arpl
sub
and
xchg
pushf
pop
lods
cmc
jnp
mov
inc
mov
push
insl
loope
pop
fistpl
mov
bound
sahf
dec
mov
insb
sbb
xchg
adc
fsubl
mov
addr16
lret
std
loope
ss
stc
icebp
dec
mov
mov
ds
pop
stc
cs
and
jae
pop
dec
in
imulb
push
xor
lods
shll
pusha
mov
data16
or
xchg
std
outsb
aam
jo
sbb
ja
shlb
shrb
pop
jbe
mov
cmpsl
jecxz
sbb
sbb
cmp
lods
sub
lds
decb
or
xchg
add
in
pop
jle
inc
es
push
movsl
and
inc
ds
ss
mov
fstl
subb
xchg
mov
fwait
sub
test
xchg
mov
cmp
xor
xchg
push
push
int
and
xchg
enter
les
jge
xor
outsb
or
bound
stos
and
jp
insl
int3
mov
in
and
cmpsl
in
in
inc
shlb
repnz
fs
div
dec
or
addl
testb
xchg
jecxz
mov
pushf
jne
in
cld
xchg
mov
out
mov
sbbb
pop
iret
repz
scas
lcall
push
push
xchg
ljmp
lret
rcr
insl
xor
pop
jne
add
aam
or
js
hlt
or
in
xor
in
push
scas
xchg
xor
mov
pop
xor
in
mov
lock
subl
xchg
in
mov
outsl
and
int3
push
push
sbb
popf
nop
jle
inc
fistl
dec
ljmp
cmp
sarb
cmc
in
mov
xchg
jo
adcl
rcll
clc
jmp
out
mov
loope
push
mov
xchg
push
add
ss
inc
push
pop
mov
ret
mov
jnp
das
push
fs
mov
lret
pop
es
push
fisttpl
mov
xorl
insb
into
dec
stos
dec
push
cld
popf
xor
fidivrl
lcall
sub
and
test
pop
gs
sub
inc
adc
xor
add
in
mov
lret
pushf
ror
add
cli
ret
clc
sub
mov
mov
repnz
outsb
xchg
outsl
fsubl
aad
repnz
scas
lock
mov
dec
pop
mov
mov
pusha
rorb
fldln2
pop
jb
hlt
cltd
scas
ljmp
std
or
movsl
sub
stc
push
mov
das
in
cld
nop
or
lret
mov
mov
add
add
scas
sahf
cli
sbb
ljmp
pop
mov
js
sbb
imul
cld
mov
xor
mov
sub
and
sbbb
jae
jno
adc
jns
shl
and
pop
mov
mov
dec
sahf
pop
addr16
seto
xchg
sarb
movsl
pop
jne
pop
mov
icebp
pushl
jae
jecxz
insl
daa
stos
hlt
popa
out
movsl
clc
mov
pop
sbb
pop
clc
adc
xor
out
andb
add
jle
add
mov
adc
pop
cld
adc
pop
outsb
xchg
in
adc
cmp
cmp
popf
adc
lock
jp
dec
pushf
ljmp
and
adc
scas
out
sub
and
push
or
mov
pop
and
aas
mov
dec
inc
sbb
adc
push
pop
pop
scas
inc
and
cmp
icebp
xchg
int
xchg
adc
sbb
cld
cmp
in
out
aad
ljmp
push
hlt
bound
ds
add
mov
jp
std
mov
fsubr
icebp
arpl
int3
sti
dec
jns
and
adc
inc
cmp
roll
pushf
dec
fadds
push
cwtl
sub
add
shrl
cmc
int3
das
cmp
insb
cmp
jo
adc
les
or
mov
out
pop
sbb
movsl
lret
mov
aad
and
and
push
movsl
js
pop
cmc
lea
sbb
ljmp
std
pop
sahf
push
add
daa
adc
inc
adc
in
cmpsl
in
in
les
lret
or
or
cwtl
stc
mov
or
jo
pop
jmp
and
neg
jg
iret
cmp
cmp
loopne
scas
pop
jmp
dec
pop
mov
inc
jae
std
icebp
xor
dec
aaa
cmpsb
lods
push
jnp
andb
mov
jae
mov
sub
fidivrs
pop
mov
je
xchg
stos
cmc
movl
pop
lods
das
scas
sub
in
iret
xchg
dec
push
int
orb
jae
std
pop
pop
pop
mov
xor
std
int
cmp
adc
jge
pushf
push
adc
pop
daa
push
xchg
lds
pop
fmull
pop
dec
push
xor
pop
mov
jb
sahf
xchg
out
dec
shlw
cmp
dec
loopne
shll
push
es
mov
subl
xchg
push
xchg
inc
xchg
cli
jg
shll
ljmp
outsl
or
xchg
loop
cmpb
mov
mov
ret
mov
cmp
addr16
jb
lds
icebp
sbb
ret
xchg
push
sbb
dec
ficoml
scas
insl
cmpsl
fildl
cs
repnz
aaa
enter
jmp
daa
add
movsl
aaa
insl
adc
in
int
lods
pop
inc
pop
add
or
inc
xchg
adc
fiadds
imul
fdivrs
mov
daa
out
int
inc
pop
fsubrl
dec
rcrl
je
add
cli
pop
jge
out
shl
lea
pop
push
push
mov
int
lock
in
dec
repz
add
data16
cmpsl
xlat
sarl
mov
inc
pusha
mov
or
sub
sub
dec
imul
mov
fldl
mov
xchg
clts
fidivrl
xor
cmp
jo
cmp
jne
shll
xchg
xor
xor
jnp
pop
mov
fbld
inc
inc
fdivl
lock
inc
jmp
jmp
imul
mov
inc
stos
insl
ja
stos
add
rcll
fcoml
xor
mov
pop
and
or
fstpt
push
mov
xchg
icebp
insb
mov
jne
dec
fisttps
pop
sbbb
mov
out
jbe
into
xchg
out
push
pop
inc
into
out
jne
fldcw
mov
push
mov
inc
adc
dec
imul
adc
xchg
cmp
bound
fcomps
pop
fdivl
imul
sbb
divb
adc
adc
scas
jae
sarb
inc
je
dec
ds
inc
lds
mov
cmpsl
aaa
jmp
jl
mov
repnz
or
and
sbb
jne
inc
pop
cmc
out
test
push
shrl
cmpl
pop
repz
dec
push
sub
jl
dec
mov
out
push
add
mov
scas
pop
push
stos
nop
and
pop
pop
mov
jge
and
stos
ss
lret
add
adc
gs
fsin
sbbl
mov
jp
stos
movsb
ss
nop
outsb
jb
dec
mov
mov
push
pop
sub
js
xchg
sub
insb
xor
fcomps
int3
mov
jno
mov
dec
aad
js
lods
in
outsb
or
movsb
cmc
xor
les
loop
xor
fwait
shrl
push
pop
jecxz
add
sbb
cmp
in
ret
mov
outsl
pminub
std
ficomps
inc
popf
clc
jecxz
and
jl
cmpsl
test
out
sbb
sub
mov
cmp
jno
mov
dec
mov
mov
sub
pop
xchg
mov
arpl
scas
mov
xchg
pop
mov
jo
lea
lods
xchg
fmulp
cld
pop
mov
cwtl
mov
jns
inc
leave
jne
lea
in
cmc
aam
pop
sbbb
pop
sbb
push
js
sbb
clc
mov
mov
adc
xlat
inc
adcb
loope
adc
insb
sti
push
fnstcw
test
pop
shlb
pop
xchg
out
jmp
iret
mov
inc
hlt
or
lret
lahf
out
sub
js
stc
imul
roll
inc
mov
repz
mov
dec
push
ret
xchg
insb
inc
daa
stc
add
call
test
sub
in
push
pop
fisttpll
loope
dec
clc
fwait
lcall
data16
aam
xchg
rcrl
mov
inc
insb
fndisi(8087
lret
movsb
push
xor
stos
pop
dec
sahf
cmp
pop
add
roll
jg
and
mov
sbb
pop
adc
pop
arpl
mov
inc
cwtl
mov
repz
loop
and
outsb
sub
mov
js
movsl
sbb
cwtl
cltd
dec
lods
out
cltd
mov
inc
scas
fisubl
outsl
lea
fimull
hlt
ljmp
mov
mov
pop
cmp
into
leave
mov
adc
pop
ret
subb
call
dec
mov
scas
mov
xchg
jle
sub
dec
sub
jbe
cmp
inc
out
xor
call
aas
addb
shlb
mov
movsl
sub
mov
repz
adc
das
xchg
ds
pusha
cmc
adc
aad
jp
testl
adc
sbb
lret
mov
mov
push
or
pop
sub
pushf
push
loop
adc
or
popa
lock
ret
leave
daa
nop
andb
cmc
ljmp
lock
pop
into
std
pop
fisubrl
cmp
xor
mov
sahf
lea
fucomip
sub
mov
ljmp
lods
mov
rorb
mov
pop
lods
or
and
pop
int3
lret
decb
data16
pop
int
out
shll
jg
sub
mov
adc
imul
sbb
lret
js
or
push
push
icebp
lods
jbe
push
add
adc
fcmovnbe
pusha
cmc
std
es
add
cmp
lret
mov
imul
or
ret
iret
jle
mov
popa
into
dec
in
test
or
sbb
fmull
and
push
test
arpl
sbb
xor
int
push
scas
and
and
push
lret
popa
sbb
cli
mov
mov
lods
mov
inc
mov
into
insl
add
imul
movsl
xchg
icebp
mov
add
mov
mov
into
sbb
sub
mov
call
arpl
add
or
mov
jp
inc
adc
push
add
movsb
mov
dec
lock
cwtl
mov
stos
cmp
test
addr16
test
lcall
sbb
cmpb
add
cs
push
incl
jno
in
jg
loopne
adc
fcoml
nop
dec
cmp
sub
std
push
scas
and
cmp
test
xchg
arpl
in
std
sti
add
repnz
and
and
and
lret
or
add
jle
adc
into
pop
scas
dec
cmp
adc
cmp
sub
xor
rcll
mov
stos
and
cmp
push
pop
addr16
mov
cli
dec
das
xchg
mov
lods
mov
cltd
cmp
scas
into
xchg
dec
lock
out
add
adc
outsl
enter
lret
lea
sahf
xchg
ljmp
push
or
push
cmp
dec
ds
fiaddl
and
pop
dec
lret
fnstcw
shr
test
mov
lds
push
out
lods
imul
inc
push
or
adc
out
insb
xor
sub
ss
mov
in
std
xchg
lock
icebp
lea
fidivs
pusha
dec
in
dec
jbe
adc
or
cmp
hlt
js
outsb
push
mov
mov
sub
aas
pusha
mov
xchg
jae
xor
in
xchg
pop
rolb
subb
dec
lret
imul
jp
jae
mov
mov
imul
cmpsb
in
ret
mov
jns
or
jne
push
pop
adc
lods
jl
dec
xor
xchg
mov
jno
sbb
fisttpll
cmp
rep
sbb
mov
or
pop
in
rcr
jmp
jno
std
mov
mov
mov
mov
fcmovnbe
jp
pop
mov
or
hlt
lea
push
js
popf
cmpsb
idivl
pop
mov
adc
lock
cmp
mov
stc
jg
pop
inc
cmp
outsl
popf
jb
dec
stos
addr16
xchg
sti
xchg
es
xchg
out
cli
mov
mov
pop
cli
mov
sub
aam
pusha
imul
stc
pushl
cmp
ljmp
mov
cmp
pop
rorl
aas
xor
mov
out
inc
or
shlb
dec
arpl
and
scas
inc
lds
test
or
icebp
notl
push
decb
sub
shr
and
pop
jno
xor
ljmp
in
mov
jp
and
xor
jnp
mov
pop
lock
in
mov
enter
push
cmc
les
mov
sbb
daa
cmpsb
stc
sub
xor
sbb
iret
dec
jbe
nop
or
pop
push
dec
movsb
es
lret
lods
inc
out
inc
in
leave
and
jnp
arpl
mov
test
decl
sub
shlb
sbb
cmp
cld
cmp
mov
int3
sbb
dec
xchg
xchg
imul
leave
adc
ret
and
mov
xchg
dec
add
pop
and
rcll
jl
lret
xlat
ret
jnp
fwait
mov
push
pop
ja
jbe
repz
fisubrs
sub
mov
jne
and
or
xchg
in
stos
xor
addr16
xor
scas
xor
js
dec
cmp
sahf
lods
or
dec
and
out
xor
inc
lds
sub
loopne
nop
dec
jnp
icebp
sbb
mov
push
clc
bound
insb
ds
sub
jge
push
and
popa
outsb
mov
cmp
jnp
add
dec
insb
cmpsl
jp
xchg
scas
mov
sbb
and
ret
cwtl
mov
pop
and
lcall
shrb
call
mov
push
push
jmp
sahf
lods
xchg
scas
cmp
xlat
cmc
and
xor
lods
repnz
inc
fstpl
stos
test
aad
cmc
sub
mov
aad
mov
in
fadds
jmp
loope
fwait
std
mov
pop
inc
repz
xor
test
add
mov
cmpsl
adc
test
jb
daa
mov
stos
mov
icebp
std
xor
adc
pop
mov
cltd
les
xor
fildll
jle
jbe
movl
mov
cltd
mov
jno
insl
adc
ficoms
bound
inc
into
cs
rcrl
int
loope
cmp
xchg
imul
aam
bound
das
sbb
jmp
or
push
insl
sbb
je
imul
mov
sbb
test
inc
xlat
fsubr
xor
jmp
inc
cmp
jbe
iret
shll
jb
or
out
lret
in
inc
add
movl
in
mov
pop
clc
jb
or
adc
cld
enter
dec
int3
adc
into
or
lds
mov
stc
movsl
cltd
dec
pushf
inc
xor
jae
cmp
cwtl
sub
out
mov
mov
inc
or
xor
stc
jp
lret
inc
sbbl
dec
out
inc
fstp
xchg
jno
and
nop
adc
rcr
lea
and
test
lods
mov
add
push
into
mul
or
fisttpl
push
je
or
nop
and
add
and
cli
fisubrl
cmpsb
mov
xor
cltd
mov
out
stc
out
aad
pusha
add
sbb
xchg
loop
pop
push
int
add
nop
jns
repnz
add
add
adc
add
movsb
arpl
fistps
stos
pusha
push
jl
cmc
cmc
aas
cmc
adc
mov
rcl
pop
push
sub
push
dec
mov
mov
pop
mov
mov
push
push
xor
repz
sbbl
das
and
dec
shl
idiv
push
js
and
xchg
iret
es
enter
andb
pop
inc
mov
fs
in
leave
push
out
sbb
push
and
pop
outsl
in
sub
jo
push
aas
cmp
add
push
xor
pop
pop
outsb
stos
fcomp
ret
cltd
stc
dec
sbb
test
dec
aam
adc
cmpsb
mov
fcoms
or
dec
cli
idivl
mov
in
cmp
shr
cld
dec
lods
adc
dec
testb
and
sti
daa
cmp
cli
jecxz
lcall
int
or
xorb
leave
ds
cwtl
mov
pop
inc
fdivrs
push
in
xlat
jo
sbb
sbb
mov
mov
xor
std
lock
pop
pop
pop
aam
outsl
jl
popf
jmp
in
mov
mov
mov
push
movsb
ret
cmp
les
into
cmpsb
push
test
or
outsb
mov
hlt
jle
mov
loop
cwtl
inc
loopne
dec
sbb
sti
cmpsl
sub
dec
jbe
adc
or
pusha
jmp
clc
aam
xchg
js
push
cmp
jecxz
inc
shlb
dec
stc
and
scas
daa
mov
and
mov
xchg
test
cmpsl
das
push
add
sbb
leave
and
inc
cmpsb
cmp
addr16
outsb
or
mov
xchg
sbb
pop
dec
inc
dec
cwtl
mov
adc
ret
push
clc
popa
pop
movhps
ss
mov
and
xchg
cmc
sbb
sub
call
test
dec
push
push
ret
nop
cmp
sahf
aaa
jmp
adc
push
xchg
ret
cs
ljmp
movsl
stc
popl
mov
scas
push
in
or
lods
push
mov
lret
aam
sub
movsb
insl
test
es
divl
sbbl
popf
lds
rcrb
outsl
int3
mov
sarl
mov
test
pushf
pop
movsl
inc
xchg
jmp
roll
roll
fsubrs
add
jnp
mov
ret
insl
outsl
inc
jne
cli
mov
in
inc
cmp
push
fidivrl
adc
push
ja
xchg
js
js
pop
inc
stos
jle
add
lret
icebp
dec
imul
shll
mov
ret
in
adc
outsb
cmp
inc
push
fisttpl
mov
pop
pusha
xchg
subb
ss
arpl
add
out
inc
ret
cmpl
outsb
arpl
clc
shll
sbb
int
mov
stos
or
cmp
jmp
fdivrs
enter
jl
or
sub
sub
testb
pop
dec
test
cmp
and
push
enter
movl
cmp
jecxz
jo
sub
mov
cmpsl
sub
stc
fnstcw
clc
in
mov
mov
mov
rcl
ret
cmp
out
sarl
arpl
sbb
and
push
mov
lcall
fbld
sbb
push
xchg
popw
sahf
mov
in
push
pop
adc
psllw
sarb
cwtd
push
push
leave
js
dec
dec
les
push
sbb
push
es
ret
popf
mov
inc
xchg
jb
jbe
pushl
xor
mov
jno
inc
pop
sti
inc
std
lods
nop
insl
pop
mov
push
fstl
sbb
adc
iret
int3
aaa
mov
xchg
movsb
mov
add
dec
cs
les
push
movsl
insl
push
das
mov
sub
lahf
pop
jl
pusha
dec
lods
sub
test
push
movsb
lret
lret
mov
inc
lret
mov
inc
push
push
push
sbb
cmpsb
cmpsb
enter
stos
and
xchg
sub
xor
ja
cmp
cmpsb
push
cmp
out
subl
inc
sub
mov
in
je
add
out
mov
jl
orl
scas
xor
xchg
std
add
jl
scas
lods
mov
ds
xchg
or
ljmp
and
jnp
xor
subl
jle
int
xor
pop
pop
or
add
je
cli
cltd
pop
bound
mov
add
hlt
sub
sub
or
loope
sbb
pop
leave
out
pop
insb
xchg
push
xor
jnp
les
add
push
test
cmp
jl
ret
push
jno
test
xchg
scas
out
and
movsl
fwait
aas
jnp
loopne
add
jl
fdivs
mov
lock
pop
pop
fwait
dec
push
je
mov
sub
test
fildll
jg
sub
xor
rorl
pop
lods
inc
pop
popf
xchg
pop
jecxz
lock
filds
and
out
out
or
mov
movsl
ds
push
push
xchg
dec
hlt
out
jnp
add
inc
and
daa
cmpsl
inc
cmc
scas
ja
sub
ss
cmpsl
insl
push
push
jnp
lret
mov
clc
lods
cmp
sbb
rol
das
xchg
dec
push
aam
dec
xchg
or
dec
push
mov
bound
push
mov
and
shl
add
sub
mov
pop
stos
jbe
push
cmp
out
jg
iret
movsb
adcb
out
stos
sub
add
sbb
test
js
inc
or
sbbl
out
push
mov
mov
addl
js
sub
inc
mov
sbb
popa
cmp
fiadds
pop
jbe
lcall
pop
fildll
add
rcrb
daa
xor
int3
nop
inc
jae
rcl
sti
mov
outsl
xor
test
incl
mov
dec
aad
lock
mov
stos
daa
add
cmp
sbb
lahf
add
les
xorb
sub
ficoml
pusha
sub
arpl
and
xchg
aaa
clc
ds
loop
adc
pop
sub
mov
fwait
sti
pushf
and
lcall
repnz
jp
and
outsl
enter
repnz
xchg
lret
sub
mov
orl
push
xlat
adcb
enter
push
aad
jle
xchg
in
add
insl
jno
push
aam
jmp
add
push
lret
movsb
je
and
mov
sbb
testl
mov
xor
xchg
test
stos
mov
sub
and
adc
loopne
nop
movl
rcr
fs
inc
aam
push
cmpsl
push
nop
mov
mov
dec
iret
ret
xchg
loop
shl
je
or
insl
test
adc
dec
push
icebp
or
roll
jne
movsb
add
stos
xchg
cmp
aam
je
inc
sub
out
call
stos
inc
shll
jnp
loop
shl
jp
cmp
cld
fstps
movsl
jne
jle
sti
cmp
ljmp
xchg
or
pop
fldenv
fidivl
sahf
outsb
std
and
jbe
cmp
enter
mov
push
fucomip
js
dec
xchg
jne
aam
adc
xor
add
lret
dec
xor
rcl
dec
push
aad
sub
imul
and
lods
nop
outsb
adc
mov
add
cltd
cmp
jo
cmc
xor
faddl
rorl
fidivs
mov
xchg
dec
xchg
int3
inc
mov
lret
jecxz
into
mov
mov
add
inc
setp
mov
cltd
push
inc
jnp
es
fptan
test
dec
stos
and
mov
out
ja
je
ja
push
and
nop
sub
sub
cld
pop
sub
xor
xor
es
ljmp
int3
inc
aas
jmp
scas
add
cli
rcrb
mov
decb
jmp
add
pop
into
aad
lret
and
and
inc
pop
ds
ret
int3
inc
sahf
outsl
push
xor
jns
xor
dec
in
lret
nop
xchg
pop
sti
inc
lret
or
cs
mull
lcall
imul
stos
jle
stos
xchg
insl
les
out
js
inc
sbb
in
xchg
jb
dec
cmp
inc
sahf
pop
leave
adc
inc
and
loope
sbb
sub
lcall
jns
jecxz
leave
adc
ficoml
insl
mov
xor
insb
inc
adc
ljmp
lock
out
das
loop
testb
lea
jnp
test
inc
jecxz
sbb
mov
pusha
das
dec
std
ja
jg
xorl
test
jecxz
jns
nop
push
outsl
xchg
xor
fimull
sbb
aas
pop
out
dec
iret
je
incl
adc
mov
xchg
loope
pop
sub
cli
pop
inc
inc
cmpsl
test
mov
in
lahf
pop
je
call
jmp
mov
sbb
out
sbb
add
stos
adcb
ja
stc
les
pop
clc
jb
pop
and
and
cmp
xchg
sbb
scas
add
loop
xchg
jl
dec
mov
ret
fldenv
jecxz
xchg
repnz
fwait
mov
lods
add
daa
lock
xchg
repnz
adc
push
inc
pop
and
xor
rcpps
pop
push
pop
jno
rolb
inc
aam
mov
mov
xchg
cmpsb
pop
sub
popa
pop
jns
dec
clc
fstl
rclb
or
xor
mov
je
movl
mov
xor
cs
mov
ret
mov
jl
std
mov
jecxz
push
push
hlt
cmp
int3
repz
jg
scas
arpl
in
jge
rcll
loope
sbb
push
fldenv
xchg
dec
fidivl
mov
icebp
loope
push
aam
test
es
repz
inc
cwtl
push
dec
rclb
iret
push
loop
xor
popf
dec
ja
sbbl
dec
mov
in
insl
stos
das
cmp
inc
dec
sbb
or
cltd
inc
imul
pushl
rclb
sbb
push
fsub
ret
and
sbb
inc
or
push
fwait
scas
popf
jge
and
stos
mov
adc
xor
shlb
adc
insb
ret
roll
scas
test
das
push
out
mov
jg
fcmovu
mov
cmpsl
adc
inc
test
out
aas
shll
dec
repz
out
hlt
mov
fldenv
js
js
pop
jl
clc
adc
rcrb
sub
ss
insb
mov
aaa
sbb
int
sub
xor
jmp
lds
scas
xor
mov
enter
dec
jecxz
mov
leave
insb
inc
push
sub
xchg
mov
pusha
cmpsb
outsl
loopne
dec
lods
add
fiadds
popa
das
pop
leave
cmpsb
sub
fs
push
sbb
cli
xchg
test
mov
and
js
test
xor
xor
cwtl
iret
js
int3
les
stos
int
push
push
outsb
imul
clc
mov
add
mov
test
push
les
or
sbb
fs
lret
sbb
jns
dec
mov
mov
sbb
inc
jnp
add
sbb
cmp
out
arpl
sub
or
stos
lcall
mov
fs
push
dec
xor
ja
cs
jno
pop
lods
ficomps
leave
push
loop
jns
mov
xchg
fimuls
cmpsb
jbe
sbb
and
pusha
cmp
cltd
stc
call
sub
inc
rorb
fs
jo
jle
add
mov
shll
and
ljmp
jae
xor
imul
and
lea
stos
or
xor
xor
adc
aas
xor
stc
inc
cmp
add
inc
mov
sub
cmpsb
rorb
push
push
jle
repnz
pop
dec
and
cmpsl
mov
sub
bound
sub
shl
mov
dec
mov
in
into
sub
in
int
in
pushf
adc
std
cli
pop
push
je
push
sahf
stos
repnz
out
sbb
inc
inc
mov
cmp
mov
jo
sbb
movq
fisubrs
mov
push
dec
push
xlat
incb
js
mov
rolb
sub
adc
lret
jae
mov
xor
cmp
cwtl
inc
mov
mov
fnstcw
dec
mov
negb
pop
mov
jg
test
dec
std
mov
inc
fistpl
notl
aaa
and
or
rclb
xchg
addr16
add
mov
mov
repnz
add
aam
ror
mov
jge
jbe
mov
inc
int3
adc
sahf
jns
inc
popa
call
and
xchg
and
xor
aaa
sahf
cwtl
push
cltd
mov
mov
cltd
repz
repz
jg
mov
rcrb
aaa
sub
dec
pop
dec
ljmpw
push
sahf
mov
aaa
push
je
inc
jmp
pusha
push
fwait
pop
mul
xor
movsb
test
scas
test
test
addl
adc
cwtl
pop
aaa
loope
mov
jbe
push
and
cmp
stc
in
sbbl
in
cwtl
jmp
test
pop
arpl
add
aas
mov
mov
jge
in
rcll
daa
push
xor
sub
rcrl
jno
cmp
jns
mov
cli
push
jo
mov
or
bound
aaa
jns
das
ljmp
push
and
ljmp
add
dec
jmp
test
lea
dec
subb
add
push
sub
jo
das
xor
xor
dec
mov
inc
mov
sbb
rcpps
out
mov
and
mov
pop
loope
cmp
fdivrl
sub
jge
xchg
std
cmp
xor
loope
and
inc
cltd
add
std
jl
dec
aaa
jmp
fs
lods
dec
or
cwtl
dec
mov
sbb
subl
mov
mov
xlat
rcrl
xor
push
or
xor
test
adc
pop
mov
iret
test
dec
test
or
jp
push
aaa
hlt
inc
cs
imul
and
xor
adc
push
and
fwait
dec
clc
sahf
sub
mov
dec
sub
lahf
ret
rcrl
or
mov
mov
test
bound
sbb
jecxz
jp
sub
ljmp
or
inc
jno
enter
mov
mov
cli
pop
jg
ja
stos
push
loope
jp
and
je
sahf
xchg
xchg
imul
pushf
fsubl
sub
xchg
cmp
lahf
push
sub
jmp
aam
xchg
push
mov
or
push
in
ffree
or
pop
nop
push
jnp
insl
sub
xchg
fisttps
cmpsb
test
push
int3
decl
rcll
into
mov
stos
shll
mov
xchg
or
lcall
pusha
xchg
test
and
inc
mov
push
lea
mov
push
dec
pop
inc
cs
bound
jne
or
add
mov
icebp
out
mov
fwait
sub
hlt
and
fidivrl
or
fcoml
sbb
mov
insb
out
cld
sbb
lods
in
add
fdivs
js
sahf
xchg
aad
push
in
mov
cmp
pop
jmp
aam
out
add
fsubs
loope
pop
arpl
jge
std
mov
sub
lods
insb
repz
push
push
xchg
int3
sub
scas
mov
in
gs
sti
ror
push
mov
out
imul
add
repnz
inc
push
daa
rorl
test
jmp
out
cmp
fstp
push
shll
sbb
jle,pn
rcrl
les
in
and
les
inc
iret
stos
and
stos
mov
testb
lock
movsb
in
push
clc
call
sahf
scas
push
push
sub
fisubl
xchg
dec
mov
pop
mov
les
jbe
stos
or
push
cmp
cltd
aaa
ds
pushf
sbb
popf
pop
out
xlat
add
out
fbld
ror
inc
sbb
sbb
stc
popf
jge
fbstp
mov
mov
mov
sbb
dec
arpl
mov
push
dec
test
mov
lret
add
in
ds
pop
mov
sub
dec
nop
add
mov
cmp
jno
incl
xor
mov
xor
int
rorb
enter
inc
and
mov
jno
jmp
jge
int
in
int
xchg
or
ret
sub
sub
sbb
adc
mov
inc
jo
dec
push
or
jp
ja
je
fstps
sub
sbbl
cmpsb
lahf
bound
in
pop
in
enter
or
cmpsl
pop
mov
outsl
mov
pop
arpl
lret
fnstcw
pop
cmpsb
pop
fwait
data16
mov
sub
mov
call
out
sbb
push
fstsw
aas
sub
daa
rcrl
insl
lods
pop
mov
jo
xor
popa
xor
inc
mov
loop
and
nop
xlat
mov
scas
popa
inc
push
jecxz
pop
or
lods
jns
or
mov
loop
xor
xchg
adc
push
scas
mov
jno
xchg
push
in
xchg
lea
cmpsb
pop
adc
xchg
sbb
inc
ret
ja
xchg
fsubl
inc
push
add
pop
xchg
in
call
fimull
ss
pop
xchg
lcall
dec
std
stos
push
popa
cmp
stos
leave
call
xor
inc
int3
out
inc
imul
push
cld
jno
or
xchg
out
cltd
mov
pop
fs
shll
cwtl
jle
sbb
out
pop
shlb
add
xchg
jnp
sahf
push
cmp
ror
or
xlat
fwait
jl
inc
fcomi
mov
jbe
jmp
cmp
jmp
js
dec
push
movsl
popf
push
psubusw
or
test
push
bound
xchg
ret
jmp
fistpll
enter
push
add
pop
or
mov
js
das
xor
ret
pop
lock
xchg
cmp
xor
stc
xchg
fldt
cmp
push
push
dec
scas
push
jns
push
jo
xchg
scas
push
add
je
dec
lods
jecxz
pusha
adc
mov
dec
std
jbe
sub
out
roll
xchg
mov
cmpsl
pop
icebp
xchg
repnz
add
daa
ljmp
sub
loop
push
sub
xchg
mov
hlt
insb
in
orl
jg
cmpsl
loop
mov
shlb
mov
xchg
mov
nop
cmc
lcall
mov
ret
test
notl
jbe
notb
in
call
push
es
jecxz,pt
imul
xchg
imul
or
fwait
testb
not
xor
jge
pop
aam
fmul
sbb
cmp
cmp
xorb
out
and
cmpsb
loopne
sar
xor
jl
jbe
ss
mov
adc
movsl
shrl
add
inc
mov
pop
faddp
dec
lods
push
stos
test
ja
pushf
xchg
out
mov
mov
mov
loopne
and
mov
mov
mov
call
or
fiadds
mov
sbb
or
mov
fmuls
pop
enter
push
pop
ss
pushf
dec
push
mov
dec
cmpb
in
fsubr
mov
or
pop
sub
jbe
fidivl
popf
mov
aaa
jbe
pop
push
cmp
sti
and
xor
cmp
or
rcll
pusha
pop
fldcw
sub
lock
pushf
in
lock
insb
shlb
xchg
pop
cmp
aam
sub
jg
test
push
dec
push
adc
int
mov
sbb
xchg
cmp
mov
mov
push
lret
movsb
imul
or
pop
mov
fistpll
lahf
ljmp
mov
jnp
mov
push
add
repz
or
pop
inc
lahf
jl
mov
add
cmp
stos
xor
cmpb
notb
pusha
pop
adc
mov
xchg
mov
loopne
xchg
inc
mov
xchg
cmp
dec
cwtd
jo
mov
lcall
sbb
mov
movsb
shl
pop
call
daa
or
das
add
lods
mov
mov
fnsave
dec
push
xchg
cmp
sbb
mov
ljmp
mov
addr16
cmp
enter
incl
mov
sti
insl
add
out
pusha
cmc
leave
stc
call
lret
btr
push
test
fdivp
shl
imul
sub
pushf
sub
jl
and
outsl
push
mov
aad
adc
ja
mov
adc
sbb
or
jle
daa
pop
out
movsl
das
mov
and
test
mov
daa
inc
lods
push
ss
mov
push
mov
fimuls
pop
mov
les
xchg
fldcw
mov
shll
push
stc
xchg
sub
mov
mov
or
push
inc
inc
sbb
pusha
bound
sbb
or
out
xor
es
cmp
jb
pop
mov
xor
sub
ds
jg
ss
movsl
into
js
add
sub
sbb
subb
dec
out
in
mov
lock
fwait
mov
movsl
inc
mov
mov
hlt
ret
jecxz
sub
xchg
int
mov
mov
dec
rclb
inc
scas
cltd
add
inc
shll
fisttpll
sub
enter
inc
movsl
sbb
outsl
daa
sahf
shl
mov
jnp
sub
test
inc
dec
sub
leave
rcrl
jecxz
daa
aas
and
ror
pop
jle
xchg
std
sub
fadd
sbb
mov
push
aas
addr16
inc
mov
push
xlat
sub
fdivr
gs
mov
jne
push
inc
add
sub
fisttpll
pushf
pop
test
loop
mov
adc
lea
push
inc
pop
outsb
inc
push
inc
xor
fsubs
stos
ljmp
xchg
and
sub
or
scas
loop
sarl
subb
bound
lret
enter
pop
mov
mov
loopne
cmpsb
xchg
cmp
inc
push
pop
in
lahf
in
cmp
in
cmpsl
insb
xor
ret
mov
mov
outsb
xchg
jbe
mov
lods
in
push
push
aas
or
test
sub
cmpsl
dec
mov
mov
pop
pop
push
or
cld
mov
jb
push
xor
lea
mov
add
daa
push
int
mov
js
mov
arpl
mov
cmp
sbb
cmp
jle
adc
loope
int3
aaa
jmp
shlb
xchg
in
mov
mov
int
shll
mov
fisttpl
xchg
sbb
ljmp
push
jo
cmp
hlt
das
jno
jle
fistl
pop
arpl
sub
aaa
lods
cli
iret
jl
or
dec
mov
add
jne
jns
xchg
ret
fwait
mov
push
sbb
adc
lea
jnp
test
mov
pop
xor
ljmp
dec
aaa
rorb
pop
inc
mov
lds
jl
dec
fadds
test
ljmp
cs
addr16
sahf
addr16
xor
mov
test
loop
sbb
shrl
int3
jle
lods
jmp
ret
mov
imul
in
jmp
jnp
mov
mov
or
dec
dec
sub
in
jp
scas
cmc
or
das
enter
pop
add
mov
and
adc
lahf
dec
je
movsb
cmp
xchg
jg
jp
inc
sbb
repnz
cwtl
xor
xor
mov
and
movsb
jg
cli
bound
mov
push
and
daa
mov
xor
push
sbb
xchg
pop
mov
inc
lret
jle
stos
push
mov
repz
push
sub
roll
and
sbb
cmpb
push
mov
pusha
scas
pop
jae
in
outsb
xor
mov
cmpsl
int
js
xchg
icebp
and
hlt
mov
jnp
add
xor
jnp
stos
sbb
aad
mov
dec
loopne
pop
divl
xchg
inc
mov
movsl
loope
sub
out
int
sbb
sub
add
loop
mov
pusha
push
call
imul
mov
cmpsb
mov
pop
mov
jno
ss
xchg
xchg
adc
jnp
xchg
test
xor
dec
std
pop
ret
mov
or
cmc
inc
lea
push
lea
iret
in
sub
add
js
arpl
outsl
iret
or
out
leave
sbb
loope
and
inc
pop
adc
pop
mov
cmc
mov
jb
jbe
inc
rclb
mov
push
mov
xchg
xorl
push
pop
or
push
int
push
fcompl
fdivs
xor
mov
mov
arpl
test
out
inc
lock
push
out
sub
shrl
mov
xchg
adc
into
mov
pushl
rorl
push
jle
data16
or
pushf
mov
fmul
test
pop
leave
in
call
and
loope
in
sti
ljmp
pop
push
aas
mov
inc
sub
fcomps
je
or
mov
push
jle
jg
iret
enter
cltd
int
sahf
sub
test
ret
rclb
filds
and
jne
add
jb
fcoml
test
or
loope
xor
push
mov
pop
or
lods
cmpsl
and
movl
mov
loop
cwtl
subb
mov
inc
jp
sbb
sbb
jbe
aam
xor
jns
mov
aad
loopne
imul
jecxz
fldcw
inc
fisubl
daa
jbe
jp
ficomps
addr16
pop
jae
cmpsb
fs
loope
test
aaa
int
mov
cmp
jmp
in
inc
loopne
xor
sub
mov
xchg
loop
mov
mov
mov
push
cmp
pop
sbb
pusha
es
mulb
imul
mov
add
stos
sbb
push
js
pusha
nop
cmp
fimuls
ja
les
loopne
call
ret
lret
pop
mov
int
loop
mov
insl
cmp
pushf
push
fiaddl
cmc
out
push
xor
test
pusha
xchg
adc
outsl
pop
std
lcall
mov
pop
pop
ds
addr16
dec
mov
push
into
lret
add
pop
mov
xchg
loopne
sbb
es
lret
in
dec
xlat
push
cwtl
lea
shrb
cld
lods
jnp
outsb
cmpsl
xorb
inc
xor
ljmp
mov
dec
icebp
out
in
lods
popf
jmp
mov
lret
fwait
sbb
push
lock
subb
jnp
stos
mov
ss
jns
add
mov
divb
mul
push
xchg
cld
jl
xor
into
stc
jne
xorl
ret
fs
inc
cmp
fcomi
testb
test
insb
mov
shrl
push
enter
ds
fwait
xchg
mov
mov
mov
mov
and
movsb
iret
xchg
subb
dec
lds
dec
xor
fmuls
mov
in
jb
fstps
andl
in
daa
mov
mov
fsubrs
loop
xchg
daa
or
shll
sarl
pop
mov
fimuls
fcos
mov
sbb
sbb
pusha
adc
adc
jne
arpl
jae
inc
or
fmuls
insb
das
addr16
push
mov
mov
mov
add
mov
ljmp
mov
stos
mov
mov
jmp
push
cmpsl
rcll
inc
pop
lods
jns
outsl
stos
add
mov
repnz
or
and
repz
in
mov
ret
mov
xchg
mov
dec
loop
push
lds
add
sub
jne
pop
cmp
addr16
jp
icebp
sbb
sbb
loop
dec
sbb
mov
gs
mov
jmp
rcrb
movsl
les
cmc
jle
repz
mov
pop
mov
sarl
push
cmpsl
cwtl
jo
jmp
pop
orl
pop
push
stos
sbb
out
pop
sti
adc
sbb
and
push
jmp
push
adc
mov
pop
dec
jge
test
xchg
mov
push
jle
bound
and
out
ror
ret
rorb
xor
jnp
mov
mov
jnp
loopw
stc
mov
jne
mov
gs
fstp
shll
jp
imul
popa
lret
push
pop
jl
fdivrp
cmp
push
add
cld
enter
or
push
xor
adc
or
loop
fcmovnu
and
setbe
repnz
hlt
mov
sub
add
jecxz
cmp
jno
mov
outsl
cmpsb
xor
dec
movsl
cld
fcoms
cld
pop
aam
jae
fdivs
je
test
or
jae
les
fisubrl
icebp
movsl
arpl
adc
push
inc
lods
insb
cmp
mov
aad
in
out
and
xor
jecxz
lds
notb
cwtl
adc
mov
and
mov
or
cmp
mov
mov
and
lahf
sub
jne
mov
xor
loopne
add
loope
push
lea
add
les
lock
sub
or
icebp
cmpsb
jle
mov
in
push
push
pop
mov
inc
cwtl
vpunpckldq
inc
mov
cmp
stos
cmpsl
xchg
ja
in
fsub
mov
adc
jle
sbb
jb
and
jbe
inc
lds
int
adc
lock
in
jns
into
dec
dec
js
push
dec
arpl
fisttpll
push
popa
add
mov
xchg
inc
jecxz
sti
sub
out
jno
adc
cmp
and
xor
ror
test
push
pop
sub
mov
lds
lret
arpl
and
sahf
addb
mov
scas
mov
sbb
movsl
and
pop
mov
dec
lods
inc
orb
xor
xchg
fs
xor
jnp
in
test
xchg
cmp
pop
or
sbb
scas
js
lds
dec
adcb
mov
mov
test
jmp
sbb
jo
lods
call
imul
pop
imulb
mov
add
js
jbe
push
mov
imul
push
add
mov
lcall
xor
ret
mov
pop
push
adc
movsb
mov
jbe
add
xchg
out
pop
xchg
push
ficoms
repnz
jl
jg
inc
popa
jle
jge
insb
push
inc
sbb
rclb
insl
push
xor
push
xor
sub
xor
sub
mov
test
xlat
lret
inc
push
fcomp
lret
xchg
test
out
jle
push
call
and
push
mov
jle
and
and
sbb
mov
daa
aas
out
push
cwtl
mov
xorb
or
xor
out
aaa
subl
frstor
pop
scas
add
push
xor
dec
mov
pop
sub
xchg
inc
xorb
xchg
shlb
sbb
sbb
js
or
or
or
xlat
jge
xchg
inc
push
jno,pt
xchg
jns
int3
mov
and
sub
inc
mov
fstpt
fistpl
mov
sbb
and
mov
pop
pop
js
ret
lcall
mov
lahf
popf
imul
push
sbb
mov
decb
scas
xchg
mov
jmp
iret
outsb
dec
in
xor
scas
pusha
andb
je
aas
push
test
ljmp
iret
dec
enter
dec
sub
dec
pop
pushf
jae
inc
aad
mov
fistl
movsl
inc
fdivl
sub
mov
jl
hlt
dec
insl
out
cmpsb
aaa
pop
jb
dec
insl
nop
test
jp
jno
xor
scas
dec
or
dec
fcoms
lret
sarb
inc
sbb
pusha
jo
xor
jb
inc
out
inc
stc
in
ja
inc
addr16
push
mov
adc
ja
mov
or
or
aad
cltd
adc
add
aas
xchg
arpl
xor
or
shl
ret
lods
cmpsb
pop
scas
in
inc
stos
rolb
push
xor
lea
int
jns
xor
jb
ljmp
mov
inc
loope
scas
pop
pmaxsw
sar
cltd
lret
inc
outsl
add
loop
xchg
gs
push
ds
imul
cmp
mov
int3
daa
out
jnp
add
cltd
pop
or
mov
add
cld
movsb
dec
sbb
imul
xor
xor
cmp
lods
fcomip
push
lods
sti
icebp
jge
push
sbb
cmovb
jb
ljmp
leave
jmp
nop
cmp
xor
repz
and
mov
mov
xor
das
ds
iret
mov
lret
nop
out
jo
dec
dec
mov
sub
ds
fidivl
lea
jbe
cmpsb
sbb
imul
ja
clc
sub
std
pop
and
cmpsl
fcompl
or
sbb
incb
popf
clc
dec
or
popf
mov
dec
xor
js
xchg
lahf
xor
cmp
cmp
and
int3
add
mov
xchg
nop
ret
cmp
mov
sbb
mov
jb
leave
lock
repz
xchg
lods
adc
stos
ljmp
into
nop
inc
and
adc
decb
add
insl
repnz
outsb
and
jge
pop
mov
push
outsl
sbb
js
pop
std
lret
es
cmp
mov
pop
out
jbe
sub
xchg
inc
int
dec
stos
jmp
fimull
push
sub
sbb
and
les
scas
testb
lods
adc
mov
pushf
enter
arpl
push
sbb
cmpsb
jb
or
lahf
mov
rcrb
jmp
inc
mov
mov
sub
mov
inc
stos
mov
or
shlb
lea
push
xchg
push
out
lahf
jb
bound
jno
cltd
xchg
sub
mov
test
in
adc
stos
lea
hlt
push
mov
add
xor
out
testl
icebp
mov
jge
jae
insb
insb
gs
sarl
in
pop
out
cmp
lea
sbb
fstl
sbb
sub
ret
dec
popf
jle
adc
mov
shr
enter
pop
jp
xlat
mov
test
xchg
adc
mov
xchg
js
or
je
mov
inc
and
ja
hlt
andps
push
cmp
scas
fsubl
dec
xchg
xchg
add
jp
nop
or
test
or
ljmp
idivb
sub
mov
and
jle
jae
mov
pushf
push
or
adc
xlat
or
cmp
imul
in
cmpsl
mov
xor
or
repnz
lock
push
inc
jb
pop
out
out
pop
fdiv
xchg
das
testl
sarb
ljmp
mov
fiadds
int
push
inc
sub
push
test
jmp
hlt
sti
sub
xorl
push
ror
jle
jo
sub
mov
std
movsb
les
les
add
iret
loope
outsl
stc
mov
fwait
mov
out
xor
es
cmp
inc
adc
jp
shl
leave
out
jnp
jl
rorb
inc
scas
test
and
cmpsb
movsl
jns
mov
test
std
xchg
sbbb
xor
pop
imul
or
outsl
cmp
int
inc
sbbb
insb
xchg
cmp
pop
and
or
jmp
pop
dec
sbb
adc
inc
xchg
repnz
das
in
and
jmp
mov
pop
pushf
push
rclb
sbb
mov
imul
int3
mov
stc
or
ljmp
fildl
aad
pop
leave
sbb
test
mov
add
mov
repz
dec
les
mov
loop
xchg
mov
lcall
mov
adc
jo
filds
jo
mov
or
pop
cmp
mov
pop
sub
sbb
push
lods
pop
scas
xchg
out
test
fldt
popa
or
dec
lret
sub
es
out
pop
sub
in
sub
mov
outsl
adc
aaa
jbe
inc
call
pop
fnstcw
test
imul
loope
fsubrs
insl
jmp
fdivl
push
pop
dec
pop
ds
popa
insb
sbb
std
mov
dec
pusha
mov
dec
mov
mov
pop
out
jae
jns
push
dec
out
lds
mov
mov
xor
cltd
sub
popf
and
jmp
out
add
xor
aam
mov
lahf
out
into
sub
and
cmpsl
jne
fnsave
xor
inc
data16
mov
jae
mov
data16
xor
pop
inc
leave
pop
sub
jl
pop
dec
cwtl
inc
or
push
stos
pop
int3
mov
sbbb
ss
and
out
xor
pop
in
in
fcmovu
push
dec
stc
ja
call
mov
fidivl
fwait
mov
cmp
clc
out
jle
jae
sbbl
je
sub
das
insb
daa
inc
dec
fstp
movsl
push
cmp
pop
sbb
xor
ja
movb
in
ds
pop
nop
aas
or
add
jp
inc
fucomip
test
mov
push
and
std
gs
je
pop
push
stc
sbb
mov
imul
movsl
mov
lret
push
loope
lock
popf
pop
popa
jle
pop
nop
fadds
add
enter
push
dec
test
movsl
stos
popa
loope
mov
sbb
cli
mov
roll
es
jl
out
iret
inc
addl
xchg
lcall
ja
jle
pop
mov
lods
mov
inc
mov
cmpsl
sbb
mov
ljmp
sbb
push
mov
or
inc
adc
jne
pop
lods
enter
xchg
loopne
scas
js
dec
jnp
adc
jg
push
inc
aaa
ja
fidivl
leave
popa
sub
mov
shlb
les
sbb
pop
pop
notl
mov
sub
ljmp
cmpsb
fistpll
mov
inc
sti
mov
xor
roll
ret
sar
and
ds
pushf
jo
dec
mov
jp
daa
aaa
pusha
fstl
sub
test
pop
ficomps
push
xor
les
movl
bnd
or
inc
mov
dec
std
stc
sarl
xchg
adc
imul
iret
xor
loop
mov
cmc
test
enter
out
add
inc
mov
cmp
jp
popf
repz
push
mov
mov
movsl
stos
dec
test
mov
test
cmp
cmpsl
subb
jb
sbb
cli
push
divb
lahf
das
push
mov
pop
push
in
pusha
jl
push
leave
adc
ja
sbb
cmp
sub
push
mov
loopne
cltd
idivb
rol
mov
dec
outsb
xchg
loope
or
or
dec
mov
xchg
fs
movsb
add
add
xor
ret
pushf
pop
cltd
fistps
mov
inc
dec
inc
aaa
add
adc
subl
sbb
fldl
sub
ljmp
inc
sub
sbb
cmp
je
mov
lock
lock
sbb
mov
dec
jnp
mov
ss
pop
sahf
adc
adc
lds
cmc
aas
mov
jbe
out
nop
mov
in
push
and
xor
add
inc
test
mov
adc
out
out
and
in
int
lahf
stc
test
jp
notb
sbb
call
push
sbb
insl
inc
lahf
xchg
mov
jge
leave
adc
outsb
fwait
test
in
pop
lods
popa
daa
mov
inc
pop
dec
mov
dec
int
sarl
test
je
stos
lahf
out
pusha
inc
xorb
scas
repnz
in
arpl
fadds
incl
adc
pop
push
popf
xchg
out
cmp
imul
jo
aam
jne
fcoms
add
mov
sub
cmc
xor
jg
inc
adc
es
movsl
lea
jo
inc
int
loop
lods
inc
adcb
test
shrl
dec
test
jle
subb
out
data16
push
lock
clc
lret
jge
jnp
pop
hlt
push
jp
and
rorl
lea
fdivrl
or
es
pop
and
outsb
jle
or
dec
pushf
out
fnstenv
aam
subb
mov
jbe
sahf
mov
aad
sub
pop
jle
mov
push
pop
push
mov
andb
xor
adc
pop
les
popa
call
les
rorb
mov
gs
push
mov
inc
popa
dec
or
and
es
pop
test
ljmp
loopne
push
in
push
enter
test
test
dec
popf
cmc
es
jae
xor
cmpsb
repz
repz
mov
pop
mov
mov
mov
outsb
stos
and
inc
push
sbb
add
icebp
pop
mov
repz
jp
ljmp
xchg
out
mov
jle
jle
sahf
lret
ljmp
cmp
pushf
int
lds
lret
pusha
test
fisttps
into
sub
sahf
pop
xor
cmp
scas
push
sub
sahf
inc
bound
daa
icebp
xor
dec
ljmp
pop
mov
xchg
cmp
sbb
test
sbb
adc
out
jecxz
repnz
in
shrl
ret
ljmp
jo
push
xchg
sbb
imull
jb
sbb
add
sbb
xor
out
das
jl
and
sub
cs
and
adc
dec
pushl
sub
adcl
fwait
aaa
pop
nop
dec
mov
cmpsl
and
sbb
dec
repz
jne
xlat
loope
add
cwtl
lcall
lds
dec
fistpll
mov
mov
pop
in
mov
mov
sub
or
adc
or
neg
test
inc
leave
xchg
fldt
iret
out
mov
out
xchg
enter
cltd
sub
je
lahf
ds
xorl
dec
mov
cmp
xchg
cmp
mov
testb
lcall
sbb
mov
cmc
outsb
mov
iret
push
or
mov
and
or
mov
popa
pop
push
xlat
push
pop
mov
xor
xchg
mov
mov
and
xchg
mov
inc
pop
sub
ret
add
movsb
in
or
jmp
sub
std
mov
out
mov
xor
jns
push
and
jecxz
mov
cmpsl
testb
std
hlt
and
daa
sbb
nop
jmp
cld
sub
call
adc
cmp
push
pop
jl
fcomp
mov
push
mov
aad
add
pop
mov
pop
stos
shll
ss
aaa
lea
stos
out
sbb
pusha
cwtl
aad
call
push
inc
pop
adcl
jmp
test
rcrl
pop
cwtl
pop
mov
mov
in
mov
xlat
pop
fidivl
scas
bound
push
fbld
adc
mov
mov
sub
mov
pop
js
lahf
mov
mov
inc
sub
mov
popa
add
shrb
xchg
jbe
cmp
sbb
sub
rolb
inc
add
xlat
jge
or
cmp
jae
pop
sub
jae
aad
push
adc
fwait
xor
pop
jp
aas
ss
sub
dec
ljmp
insb
aam
in
mov
and
sub
push
les
or
lahf
outsl
repz
pusha
popf
lea
movsb
cld
mov
pusha
mov
std
mov
int
add
loop
inc
add
sbb
cltd
cld
je
loope
adc
inc
bound
pop
jno
inc
js
push
jne
adc
addr16
or
scas
sti
fdivr
mov
cmp
push
pop
inc
mov
loop
bound
int
in
in
ret
mov
stc
dec
adc
mov
sbb
les
jecxz
loop
fs
inc
or
adc
adc
jl
dec
fadds
sbb
cltd
out
je
or
xor
add
cmp
cmc
pushf
pop
pushf
add
lret
mov
stos
jns
push
or
sbb
lcall
cmp
xchg
cmpsb
cs
inc
mov
cmp
imul
lea
inc
enter
inc
jae
repnz
xchg
push
or
fsubl
inc
push
nop
rcrb
or
cmp
pusha
das
cmc
fcomps
jne
test
cs
ret
rcll
hlt
fs
pop
in
fdivl
fdivl
jmp
out
mov
test
outsl
and
mov
test
inc
mov
iret
cld
imul
sub
out
push
cli
adc
adc
push
push
dec
pop
imul
xor
xchg
sub
sub
push
dec
mov
xchg
fwait
lret
ljmp
mov
mov
and
push
push
mov
push
inc
mulb
out
repnz
dec
xor
xlat
iret
enter
xor
mov
je
and
pop
les
mov
insb
mov
dec
fbstp
add
cmp
out
in
pop
inc
pop
push
adc
cltd
cli
cmpsl
sti
push
dec
pop
and
sti
lret
outsb
cmp
ret
inc
push
sbb
dec
mov
sbb
mov
push
repz
and
cmp
jnp
lret
jge
sub
fiaddl
lret
rolb
xor
mov
push
sbb
cli
test
sub
xor
dec
sbb
and
lds
lcall
in
lds
lret
push
imul
stc
mov
scas
cmp
push
jae
push
js
xor
std
stos
sub
push
ret
lds
jns
loopne
sub
push
lods
ja
jo
mov
fcompl
addr16
xlat
push
or
hlt
movsb
lahf
pop
push
enter
pop
jb
mov
mov
mov
dec
jne
shlb
loop
stos
and
jo
add
jo
scas
sbb
testl
fcomps
adc
jno
sbb
fs
lcall
jnp
fwait
pop
adc
and
xchg
dec
cltd
popf
mov
adc
mov
fcmovb
add
bound
cltd
repnz
lret
in
inc
add
sub
pop
lahf
cmp
fimuls
pop
ds
push
roll
rcrb
stos
push
imul
add
add
loope
cs
out
xchg
and
sub
int
jl
add
add
subb
or
cmp
into
clc
sub
icebp
sub
inc
insb
jns
in
sar
xlat
mov
out
mov
in
shll
jle
inc
test
jnp
mov
fimuls
adc
push
pop
ret
mov
shrb
pop
leave
lahf
jle
stc
mov
adc
loope
cwtl
bound
jp
test
stc
add
cltd
test
lods
out
add
inc
sbb
mov
inc
insb
jp
push
clc
xchg
sbb
roll
sahf
imul
jecxz
arpl
int
js
cmpsl
dec
lret
sub
and
in
das
inc
xlat
cmp
sub
cmpsl
mov
popa
or
dec
mov
arpl
sub
mov
push
sbb
jae
in
loop
cmpl
pop
out
pop
xchg
lock
push
test
ja
mov
cltd
inc
pop
scas
cmpl
repz
cmp
ret
repnz
stos
mov
dec
adcl
sbb
shrl
imul
pop
lds
imul
and
in
or
push
int3
pop
shll
xor
adc
mov
fwait
popf
cmp
fstl
jmp
push
mov
popa
mov
andl
adc
lahf
pop
jmp
lret
push
les
push
aam
mov
pop
cmp
jge
dec
add
les
push
sbb
punpckhdq
mov
mov
inc
sub
mov
std
out
xchg
call
cmpsb
dec
pop
push
add
pop
stc
or
or
aas
mov
call
adc
adc
pop
xchg
in
sbb
popf
add
lock
pop
lods
fldt
test
fdivl
movsb
ret
insb
cmc
enter
outsl
mov
add
inc
push
pop
push
push
fdiv
out
mov
lods
add
cs
sahf
push
arpl
ja
cli
jae
mov
stos
sub
xchg
and
and
jge
mov
out
hlt
daa
jmp
mov
inc
mov
xor
and
sub
pop
ret
stos
cld
mov
mov
rorb
adc
dec
not
stos
and
jmp
inc
push
pop
push
pop
mov
int3
lods
lret
inc
mov
xor
jnp
mov
test
xor
xchg
lcall
add
sbb
mov
jns
pop
ja
dec
cmp
loop
daa
mov
cltd
sbb
adc
sbb
stc
nop
mov
mov
aam
mov
fisubs
ja
mov
cmp
cmpsb
filds
xchg
push
in
xor
and
adc
cmp
movsb
fwait
imul
jp
fisubrl
std
les
cld
inc
js
mov
mov
fmull
stc
fucomp
dec
cli
mov
fbstp
aaa
push
stos
sarl
sbb
inc
ret
pop
repz
add
stc
sbb
pop
jle
stc
loop
sbb
dec
outsb
lock
mov
xchg
mov
fdiv
jg
sbb
mov
int3
or
fisttpl
dec
add
push
shll
fs
es
ret
xor
fs
xchg
and
jo
push
add
fmull
icebp
cmp
shll
and
test
and
inc
movsl
or
push
sbb
mov
loope
cld
jbe
and
insb
dec
std
daa
pop
push
cmp
jp
mov
cmp
or
gs
sub
sarb
int3
mov
pop
add
adc
xor
lret
push
adc
push
add
push
and
outsl
jbe
xchg
jbe
mov
jge
adc
dec
mov
or
mov
out
adc
push
xchg
ficoms
je
test
inc
mov
mov
pop
mov
pusha
addr16
mov
xchg
mov
xor
shr
jmp
cli
or
aad
jns
enter
sbbb
jp
adc
in
pop
push
cmp
lods
incb
or
mov
mov
fdiv
cmp
pushf
clc
mov
mov
loope
mov
andnps
gs
and
push
mov
es
xchg
mov
adc
xchg
mov
jp
addl
sub
and
scas
push
mov
jae
insl
std
imul
iret
adc
lcall
int3
xchg
in
sbb
mov
xor
inc
inc
das
gs
lahf
xchg
outsl
pop
out
or
add
iret
repz
leave
sbb
mov
jbe
mov
js
jo
jo
sub
movsl
xor
stos
int3
mov
fistps
cmp
add
xorb
dec
jns
pop
gs
lds
cmpsb
repnz
xchg
pop
ljmp
fs
iret
add
xchg
daa
push
ret
adc
pushf
loop
int3
loop
divb
add
sub
lods
mov
lock
inc
ret
int
cwtl
lea
hlt
pop
loope
imul
mov
jg
clc
or
jecxz
dec
fldt
adc
ja
lret
push
push
into
lret
scas
jno
mov
xor
call
sbb
jmp
bound
mov
aad
loope
lods
cmp
inc
inc
sahf
mov
inc
add
push
int
dec
pop
cmc
pop
movsb
out
int
pop
jp
pop
adc
das
add
mov
and
loope
or
xor
scas
sbb
movsl
dec
jnp
prefetch
js
scas
negl
pop
je
test
mov
push
or
or
mov
ljmp
loop
xchg
js
inc
test
out
dec
sub
and
negb
lock
push
test
add
sub
inc
enter
pop
shl
scas
fs
inc
hlt
sbb
push
adcb
test
xor
xchg
or
cwtl
inc
push
out
mov
xor
xchg
fcompl
cmp
gs
jge
std
loope
dec
cmp
insl
and
jbe
mov
add
movsl
daa
inc
sbb
push
push
addr16
mov
push
jecxz
ficoms
ja
mov
and
xor
pop
mov
fldenv
sahf
insb
rclb
aad
hlt
pop
xor
sub
popa
movsl
mov
cmpsl
les
dec
xlat
push
imul
shrb
jmp
dec
inc
ja
adc
stos
rolb
xchg
xor
ror
xchg
jo
fwait
cmp
xchg
mov
stc
push
icebp
aam
sbb
into
das
inc
leave
insb
add
loop
outsl
ret
fdivl
mov
jle
push
mov
fs
fnsave
xor
xor
dec
je
rcrl
ljmp
adc
out
mov
dec
call
scas
pusha
xor
in
pop
mov
adc
fbld
add
nop
hlt
sub
inc
cli
sub
xor
mov
pop
roll
gs
xchg
cmp
dec
and
xchg
insb
imul
and
cmc
sbb
inc
mov
mov
rcl
mov
sbbb
sub
mov
mov
daa
xchg
mov
jnp
cld
orl
leave
cs
mov
adc
fcoml
jns
push
xchg
mov
cli
or
xchg
push
jge
test
gs
lcall
adc
adc
andl
push
pop
test
sbb
dec
int3
adc
mov
aaa
sbb
xorb
hlt
push
push
int3
das
dec
mov
adc
fcoml
lods
cmp
cli
or
push
xchg
daa
push
xlat
lods
cmp
rorl
sbb
movsl
sbb
mov
inc
fsubrl
loopne
push
cltd
stos
dec
cmp
daa
mov
bound
testl
nop
aad
push
jae
lock
out
inc
and
outsl
and
jo
and
adc
cltd
scas
cs
nop
insb
mov
or
rcrl
out
lcall
mov
lcall
shll
adc
pop
inc
fbstp
outsb
aaa
mov
dec
xchg
sub
push
xchg
faddp
or
daa
mov
dec
mov
xchg
inc
cmc
je
mov
dec
mov
aad
mov
push
out
mov
mov
xchg
cmp
sbb
call
pop
xchg
push
std
and
inc
int3
push
jb
mov
xor
daa
pcmpeqd
jecxz
lret
dec
and
subl
aad
adc
cmp
int3
lods
cwtl
aam
and
shl
xchg
lret
out
stos
and
pop
mov
xor
mov
shlb
das
clc
movsb
xchg
adc
movsl
bound
xor
or
cltd
push
out
adc
addb
shr
dec
loope
scas
ja
out
lea
inc
negb
lcall
inc
ljmp
cmp
dec
pusha
enter
push
scas
dec
mov
into
or
into
jmp
mov
shl
cmpl
ja
or
mov
add
push
dec
and
inc
push
lret
add
imul
jge
lahf
aam
cmp
loope
int3
jp
lret
push
test
loopne
icebp
xchg
mov
icebp
enter
push
mov
pusha
sub
cmp
adc
test
jmp
and
and
popf
cs
jp
or
xchg
call
fmuls
mov
outsb
jo
outsb
stos
jne
inc
insb
inc
subl
sub
int
or
or
mov
push
ja
pop
bound
inc
mov
push
pop
iret
mov
stos
mov
adc
pop
jo
or
xchg
outsl
and
incb
add
fisttpl
mov
test
in
cmp
xchg
pop
pop
in
out
cli
fs
adc
int3
lods
cwtl
aaa
mov
in
sub
jle
cmp
cwtl
ss
dec
xchg
add
sub
imul
and
cmp
add
add
mov
push
stos
adc
adc
xchg
xor
and
fidivl
mov
mov
push
loop
hlt
ljmp
scas
pushf
mov
pop
shlb
mov
push
insl
dec
xchg
jnp
iret
add
inc
shll
aad
jle
cltd
dec
jl
push
lds
enter
mov
hlt
xor
xchg
adc
or
cmp
fidivrl
out
test
pop
or
jle
xor
shrl
stos
shlb
fdivl
orl
jmp
ss
mov
cltd
pop
push
rolb
mov
inc
paddb
and
pusha
outsb
lods
add
cmp
sub
mov
mov
cmp
out
popf
jp
mov
aad
rcll
add
push
lret
es
or
push
hlt
sbb
push
popa
aas
push
pop
out
lds
dec
test
adc
mov
call
call
and
aaa
in
int
lcall
loope
pop
out
xor
cmp
cltd
sbb
aaa
outsl
out
xor
dec
repz
mov
xchg
cmp
mov
inc
test
inc
mov
mov
jg
clc
popa
pop
and
dec
fstpl
addr16
pusha
add
imul
inc
add
rol
in
xchg
adc
inc
aaa
mov
gs
and
andl
cmpsl
rolb
inc
fisubrs
nop
es
scas
cmpsb
lods
nop
ret
sti
imulb
insb
push
les
mov
add
add
test
cmp
sarl
push
jg
jecxz
pop
jnp
push
push
lahf
xor
lcall
lds
inc
xchg
leave
lret
lds
jmp
outsl
xchg
lret
and
cmp
jns
aad
push
pop
and
clc
bound
jb
les
or
out
daa
mov
lods
adc
ds
sub
xor
pushf
in
fists
mov
loop
cmp
addr16
adc
aam
data16
adc
pop
pop
jle
fisttpl
mov
das
mov
xor
lcall
xor
and
pop
mov
mov
xor
stos
and
test
jns
xchg
testl
sbb
or
arpl
xor
push
xchg
xor
sbb
cmp
in
cli
mov
pop
mov
das
sbb
jne
aad
mov
loop
mov
jmp
mov
je
mov
or
push
rcrb
push
jb
fdivs
mov
mov
jne
xchg
or
jl
je
pop
mov
add
repz
out
scas
sbb
adc
push
jnp
clc
movl
mov
and
sbb
mov
fiaddl
sbb
fldl
aam
sbb
icebp
outsl
jle
jecxz
ret
test
xor
in
imul
pop
adc
icebp
cmp
lods
mov
sub
xchg
jns
or
xchg
andb
adc
push
insl
mov
xchg
sti
lcall
insl
pushf
sub
mov
lret
mov
mov
sub
pop
mov
and
push
pop
add
mov
sahf
and
xor
mov
xchg
sbb
jo
imul
cld
lods
rorl
test
sbb
out
adc
and
addl
call
stc
add
adc
insb
addb
push
fs
sahf
mov
pushw
out
out
dec
pop
xlat
adc
mov
ret
or
stos
and
aam
ret
loop
dec
dec
adc
in
out
inc
movsl
dec
gs
pop
out
pop
hlt
fnsave
in
out
or
push
cmpsl
jmp
and
addl
scas
lods
xor
lock
cltd
inc
adc
ss
call
or
std
add
inc
cmp
sbb
push
xchg
pop
sub
sub
push
mov
mov
decb
or
cmc
loop
in
sub
jge
inc
mulb
push
sahf
add
add
sub
add
lods
mov
sarl
xchg
enter
and
sub
inc
mov
jl
mov
mov
loopne
jl
jl
and
mov
shll
nop
cmp
cmc
orl
out
push
fcoml
sub
or
inc
out
sbb
fdivr
call
mov
test
js
outsb
lods
and
out
pop
jmp
or
orl
dec
mov
sbb
inc
lcall
insb
jnp
push
pushf
jp
sub
sub
jecxz
pop
repnz
dec
adc
mov
inc
cmpsb
aad
lods
dec
add
shrb
push
jmp
jge
dec
bound
lret
push
sub
pop
nop
nop
mov
scas
adc
cs
jno
inc
and
push
test
cmp
and
imul
or
jo
add
fisttpll
add
or
mov
sub
pusha
pop
add
inc
stos
adc
test
es
gs
add
cmpl
ret
mov
push
into
int3
fsubr
fmul
mov
pop
in
jle
arpl
jae
xor
lods
cltd
pop
fs
setl
cmp
jl
pop
mov
and
sarl
jge
and
cmp
sub
cmp
dec
movsb
in
dec
fxch
sahf
daa
sbb
adc
jnp
pop
mov
outsb
outsb
xchg
xchg
sub
mov
jp
mov
jge
lods
es
mov
jbe
andb
xchg
xchg
mov
jne
push
aad
int
iret
repnz
or
shll
rolb
or
add
jecxz
jg
and
add
shlb
push
sbb
sub
pop
mov
aam
mov
sbb
shll
sub
dec
cli
inc
insb
arpl
push
inc
sbb
lock
js
fnstcw
inc
xchg
sub
lahf
sahf
jne
xchg
daa
and
sbb
xchg
pusha
ss
or
mov
cmp
lret
stc
fwait
nop
mov
movsb
mov
leave
adc
or
repz
lods
popf
and
test
mov
insb
mov
fwait
and
arpl
push
mov
xor
imul
inc
sub
ljmp
mov
and
mov
lcall
lods
mov
pop
cmc
xchg
aaa
sbb
mulb
lcall
inc
js
cmp
pushf
cmc
or
pop
dec
mov
cmp
or
sahf
data16
cmp
jb
divl
jecxz,pt
inc
mov
dec
push
jmp
xor
mov
jb
or
sbb
adc
sbb
sbb
fisttpl
cmp
cmp
xchg
lret
add
leave
in
into
test
xor
imul
lahf
pop
pop
ficoms
or
and
enter
cmp
push
xchg
insl
imulb
dec
xchg
into
mov
xchg
ret
stc
inc
in
xchg
and
cld
mov
das
jo
inc
jnp
mov
scas
mov
mov
inc
inc
fimuls
inc
mov
outsb
and
jb
fcomp
mov
lock
je
mov
ror
mov
pop
dec
and
pop
lods
scas
dec
sbb
pop
push
out
fstps
and
adc
mov
pop
or
ja
stc
outsb
cltd
jge
dec
or
pop
xor
aaa
test
frstor
ret
inc
mov
out
pop
pushf
pop
push
dec
xchg
and
xchg
mov
iret
call
pop
pop
int
pusha
xchg
add
cmp
or
sub
mov
or
sub
push
sbb
add
ror
ficomps
or
adc
mov
mov
enter
push
or
std
loope
mov
aad
ss
iret
mov
incb
out
cmpsb
push
movlps
int
cmpsl
pop
bound
shrl
or
movsl
inc
mov
mov
test
add
push
mov
lret
mov
adc
mov
sub
cltd
and
pop
jnp
imulb
xchg
loopne
sti
insb
dec
stc
fisttps
jecxz
aad
xchg
xor
mov
or
in
loope
push
mov
jp
push
adc
push
aaa
rcrb
or
inc
lahf
adc
rorb
adc
sbb
fadd
push
sub
pop
movsl
xchg
sub
push
mov
fnstsw
xchg
jle
mov
fwait
rep
ret
add
ficoms
adc
xor
cmp
mov
push
lret
inc
fstpt
jecxz
jns
adc
pop
add
sti
or
movsl
rcr
mov
inc
add
sub
int
mov
mov
ret
push
adc
gs
xor
pop
outsb
or
jnp
jle
mov
outsl
popa
and
xlat
lret
insb
or
out
dec
fs
jp
mov
xchg
jp
pop
lds
sbbl
dec
mov
cltd
jg
push
repz
jg
inc
enter
nop
int
inc
movb
push
mov
sbb
dec
mov
cmp
dec
sub
sbb
gs
nop
pop
movsb
inc
mov
xlat
xchg
pop
sub
sub
dec
mov
inc
je
jno
mov
inc
and
sub
insl
fucomip
and
jnp
xchg
mov
je
add
mov
push
mov
orl
lret
mov
sarl
pusha
test
gs
imul
push
icebp
or
mov
mov
cltd
in
fildll
mov
mov
cmp
xor
sbb
test
daa
mov
int
andb
roll
roll
xchg
dec
int3
popa
jmp
inc
and
in
stc
out
push
pcmpgtb
fisttpll
push
bound
xor
mov
or
pop
jo
jns
jecxz
fwait
js,pn
push
imul
and
mov
jb
mov
shl
stos
aaa
mov
jae
fnstcw
cmp
mov
or
lret
lods
int3
xchg
dec
repnz
mov
jle
inc
arpl
and
fbld
adc
mov
jle
ret
xlat
ja
pushf
inc
cmp
jns
sub
cld
mov
mov
rclb
loopne
test
mov
mov
dec
das
sbb
adc
or
andl
mov
mov
and
cmp
enter
sbb
mov
repnz
aad
inc
lds
xchg
repz
and
inc
stos
test
cmpsb
mov
xor
ss
out
and
ds
ret
cmc
mov
mov
or
jle
das
cmp
test
xlat
aad
add
jle
popf
subb
js
int
pop
rcll
sbb
inc
pushf
pop
mov
pushf
in
inc
loopne
push
sub
adc
jne
dec
xor
cs
pop
jno
pop
imul
test
xor
or
cmpsl
cmp
scas
jns
mov
xchg
jl
repz
in
out
test
mov
mov
fcmovb
add
fcomp
fs
jnp
xor
loopne
ja
cwtl
loope
pop
xchg
mov
mov
mov
inc
sbb
and
adc
jno
fs
push
scas
jns
cmpsb
xor
xchg
in
repnz
jb
mov
ret
or
cld
mov
fistl
arpl
jae
mov
xchg
push
sbb
xor
imull
pop
cmp
cltd
popa
and
mov
dec
sti
int3
shll
xor
sub
daa
ficompl
ret
or
pop
xor
sarl
add
push
nop
or
dec
xlat
mov
mov
xchg
rcrb
cmpsb
adc
mov
mov
out
addr16
icebp
nop
dec
jmp
xor
and
test
jmp
int3
add
jbe
shr
adc
dec
push
jo
xlat
popf
out
mov
xor
cmc
popa
and
mov
pop
inc
aas
and
outsl
jae
in
ja
xchg
mov
cs
mov
test
pop
pusha
lea
mov
fcomi
adc
scas
mov
sbb
out
movsb
cltd
popa
cmp
sub
fistpll
sbb
rcr
ret
mov
pop
mov
inc
push
pop
mov
xchg
mov
pop
cli
out
lods
lret
enter
popf
test
dec
aam
loop
pop
call
xor
inc
in
xchg
stos
movsl
dec
add
dec
sbb
inc
stos
xchg
jp
cmp
adc
js
in
add
inc
xchg
mov
dec
or
movsl
sub
jbe
push
int3
arpl
push
jmp
push
pop
stc
xorl
mov
mov
loopne
movsb
xor
dec
mov
dec
cmpsl
inc
cltd
daa
jae
push
stos
sbb
fdivrl
lock
sbb
add
mov
dec
pop
addr16
repz
add
dec
mov
mov
xchg
inc
aaa
adc
pop
adc
dec
leave
lcall
leave
popl
in
dec
cmpsb
mov
in
ljmp
dec
adc
and
mov
mov
or
or
fs
shrl
out
mov
shlb
xchg
cwtl
xchg
jns
out
loope
pushf
sahf
sub
jg,pt
push
rorl
lock
and
push
stos
into
mov
ret
outsb
test
test
mov
cld
push
inc
call
mov
dec
mov
xor
xchg
insl
mov
es
xchg
insl
sti
or
xor
add
pusha
mov
mov
popa
imul
mov
add
pop
sub
jle
daa
fcmovnb
mov
lock
sbb
jo
mov
fcom
das
fdiv
mov
sub
mov
sbb
js
mov
ret
pop
jae
fildll
fcmove
sbb
mov
xor
mov
into
dec
shlb
sar
push
clc
int3
cwtl
add
in
testl
mov
jp
inc
pop
divb
dec
in
imul
outsl
loopne
outsb
hlt
stos
adc
test
xchg
sbb
insl
stos
cltd
shlb
rcrb
scas
cs
jg
push
xchg
sti
cmpsb
shrb
inc
or
pop
and
mov
sub
pop
mov
repnz
and
jp
jg
cmp
add
into
xchg
movsl
push
out
nop
jns
fisttpl
mov
mov
jo
std
fcom
mov
cmp
and
xor
clc
jo
ficomps
repz
pop
xchg
shlb
and
into
dec
and
cmp
js
lods
mov
mov
adc
sbb
and
sahf
scas
popa
sbb
dec
mov
aas
sbb
mov
movsb
push
lock
pop
lods
mov
dec
je
mov
inc
and
jbe
inc
pop
shl
aas
push
inc
sti
pushf
insb
stos
outsb
daa
cmp
xor
enter
adc
push
js
repz
loopne
pop
xchg
pop
aam
out
clc
jo
push
or
repz
mov
ret
fcmovne
pop
dec
push
cwtl
add
mov
inc
fdivp
leave
icebp
test
mov
adc
sbb
mov
and
sbb
ret
adc
enter
xor
adc
in
cs
inc
mov
pop
push
aad
xor
adc
out
add
pushf
jo
inc
jmp
push
xor
xchg
push
fildl
stos
sbb
subl
sub
or
test
inc
icebp
mov
jb
and
jp
sbb
shrb
xor
sbb
jno
mov
jg
icebp
or
xor
movsb
xchg
adc
push
dec
jnp
add
adc
jne
inc
sub
mov
test
lahf
cld
ror
dec
arpl
pushw
dec
pop
mov
shll
ss
mov
scas
mov
fwait
pop
push
and
sbb
sbb
sbb
stos
je
mov
cmc
cmpsl
cmp
mov
mov
daa
fsub
add
sbb
idivl
sub
test
subb
jl
iret
push
adc
push
pop
std
dec
iret
cmp
push
mov
and
cmp
out
push
sbb
cmp
js
or
icebp
add
adc
xor
push
xor
fldt
or
test
cmpsb
add
sbbb
int
cmp
test
stos
cld
out
mov
sti
inc
sbb
dec
push
fcomps
push
push
ss
push
mov
scas
inc
xchg
inc
sub
jge
stc
jae
dec
aam
rol
dec
add
adc
and
or
int3
fimuls
gs
pop
or
sbb
and
mull
pusha
fcmovne
movsb
push
iret
and
sets
cwtl
les
sbb
xchg
test
adc
xchg
sub
cmp
push
sbb
mov
fmull
jo
and
pop
lock
sahf
stc
xor
mov
adc
dec
sub
xchg
jl
jge
std
mov
and
shl
mov
mov
and
adc
push
inc
or
xchg
movsl
push
lret
pop
push
in
fistps
gs
bound
daa
xchg
sub
and
xor
push
mov
lret
fiaddl
imul
insl
fstpt
or
test
lock
pop
loope
rolb
mov
mov
sahf
fists
out
movsl
and
movsl
imul
inc
fidivl
in
sub
cmpsl
mov
sub
imul
and
sbb
and
outsl
or
cld
dec
jge
aad
lods
pop
dec
mov
aaa
push
sub
xor
sbb
mov
fcoms
int3
inc
cmp
js
out
out
lods
inc
xor
pop
and
pop
sub
adc
es
xor
das
pushf
jp
fs
test
icebp
sbb
jnp
aaa
fldcw
cli
negb
add
stos
mov
push
cli
pop
or
xchg
addl
inc
sti
stc
scas
aam
jecxz
jp
add
mov
sbb
sub
hlt
inc
in
dec
push
popa
jecxz
test
shl
xchg
xchg
mov
cmpsb
push
lret
and
fisubl
or
mov
xlat
nop
jns
dec
xchg
mov
xchg
std
ss
mov
jl
ret
arpl
adc
cli
push
out
lods
loope
loope
mov
pop
sub
xchg
mov
ds
movsl
jmp
inc
popa
fisubrs
pop
clc
movsb
cld
shlb
cli
mov
jl
jb
cmp
or
xor
and
hlt
ficoms
pop
imul
mov
loop
push
sbb
adc
and
jbe
push
sub
and
sti
shlb
push
mov
add
call
add
hlt
mov
in
cmp
and
xor
inc
outsb
popa
jnp
rclb
mov
xor
scas
shlb
xor
loop
ljmp
fisttpl
lea
iret
outsb
das
stos
sbb
inc
cwtl
add
daa
test
mov
cmp
ss
sub
mov
inc
int
xchg
mov
rcrl
dec
aaa
adc
outsl
xchg
cmc
adc
out
hlt
test
dec
or
sbb
stc
sbb
pushl
sti
call
in
arpl
aam
add
mov
fstpl
enter
lods
xlat
fxch
test
stos
test
pushf
add
mov
xchg
rorl
mov
sarb
scas
lock
movsl
arpl
push
sbb
sub
jnp
mov
xlat
adc
jp
out
enter
push
mov
and
xchg
dec
mov
mov
sub
or
or
adc
negb
fwait
in
add
mov
fs
enter
int3
in
outsl
push
cs
fcom
add
test
mov
sahf
out
jbe
jp
mov
cmpsb
adc
sub
inc
add
jge
push
xchg
fs
lods
add
stc
rolb
mov
or
dec
xchg
ror
in
mov
cmp
jnp
pusha
std
std
cmpsl
pusha
add
fwait
add
add
in
push
lds
dec
inc
add
jecxz
mov
inc
mov
jg
insb
lods
inc
push
and
leave
arpl
pop
pusha
or
fwait
sbb
mov
imul
inc
inc
mov
push
push
adc
lcall
and
push
test
adc
sbb
jbe
prefetchwt1
xor
gs
sub
and
push
lds
cmp
push
mov
mov
cmp
mov
sub
popa
imul
lea
add
push
fsubrl
jae
in
push
out
sub
std
sbb
rorl
add
outsl
add
negl
cwtl
mulb
add
or
cmp
stos
and
fmuls
jnp
rorb
xlat
int
ja
adc
dec
inc
test
cmpsb
icebp
imulb
arpl
push
add
jmp
icebp
clc
incb
pop
addr16
add
adc
idiv
mull
stc
dec
ret
dec
add
pop
xor
xchg
dec
loopne
inc
adc
cmp
dec
add
stos
lods
push
sub
jp
fsub
lahf
adcl
or
xchg
mov
xchg
or
cmpsl
clc
dec
mov
rol
and
mov
lret
mov
mov
mov
enter
add
jns
cmp
pop
lret
lods
outsb
jae
xor
pop
sub
fstpl
jns
jae
outsl
lods
jg
inc
mov
lret
mov
push
pop
ja
sub
push
fistpl
in
ret
dec
lods
clc
pop
insb
and
push
out
and
hlt
add
or
in
add
xchg
sarl
xchg
xlat
nop
testb
aas
push
xor
or
in
pop
push
mov
jno
ficompl
out
inc
sub
lcall
pop
out
pop
inc
insb
dec
sarb
mov
je
cmc
adc
jo
mov
or
mov
ja
std
inc
xor
xor
fsub
adc
test
aad
inc
xchg
ss
xchg
ret
imul
sbb
jnp
std
dec
pushf
mov
inc
rorb
cmc
add
into
jecxz
loop
add
xor
pusha
push
sub
sub
xor
dec
adc
lock
cmpsb
xchg
ret
pushf
in
int
mov
imul
dec
cltd
xor
push
inc
add
fs
or
xor
or
push
inc
or
aad
aaa
push
mov
stos
int3
lret
loopne
cmp
mov
sbb
cmpsb
push
and
adc
and
mov
fdivl
loop
scas
pop
mov
push
lcall
mov
push
test
add
movsl
adc
jl
test
xor
outsb
std
mov
test
xor
cmpsb
cmp
lret
mov
xchg
sbb
mov
mov
hlt
daa
cs
lds
mov
inc
lcall
mov
xor
es
jne
leave
imul
fs
dec
push
mov
lahf
les
cmp
leave
jecxz
std
pop
scas
xchg
loop
sti
insl
cli
inc
insl
push
rcl
fnsave
add
dec
gs
stos
addr16
outsb
or
cli
int3
push
or
imul
add
arpl
pop
push
test
xchg
mov
test
mov
inc
js
shl
pop
mov
movl
outsb
sub
jmp
mov
dec
sbb
imul
and
mov
fwait
shll
jo
gs
aaa
cld
frstor
cmp
jne
stos
scas
icebp
jo
mov
dec
lods
inc
stos
sub
add
xchg
movsb
jne
push
mov
xchg
out
into
cmpsl
stc
jne
pop
mov
sub
notl
dec
imulb
adc
adc
pop
fdiv
xchg
add
pop
sbb
paddusw
push
adc
loope
data16
out
sub
sahf
scas
push
jno
ss
std
subl
ja
pop
lcall
mov
dec
mov
cmp
add
popa
pop
in
scas
add
mov
add
sti
stos
jne
inc
and
or
cltd
stc
or
scas
mov
mov
fiaddl
jmp
cmp
dec
cmp
incl
mov
sbb
sub
repnz
mov
sbbb
cltd
gs
ljmp
cmp
mov
movsl
push
dec
add
push
ret
enter
cli
ret
mov
jge
popf
mov
sbb
pusha
cmp
jge
sub
orb
int3
sbb
adc
nop
xor
repnz
pushf
js
cltd
sbb
repz
ds
sbb
mov
outsl
fldl
adc
cmp
popl
aaa
clc
add
rorb
cmp
inc
jmp
jae
cli
ret
jge
add
or
out
gs
mov
xchg
push
sub
push
std
cmpsb
ljmp
add
ret
sub
inc
mul
adc
push
lds
lods
mov
ljmp
mov
push
xor
rolb
punpckhdq
in
sub
cltd
lods
cli
sbb
push
scas
shlb
insb
inc
jae
mov
push
das
cld
insl
frstor
leave
mov
xor
mov
and
out
in
adc
test
pop
jge
push
push
bnd
arpl
sbb
aam
sbb
in
fnstenv
push
jns
xlat
xor
fstps
icebp
in
mov
sbb
mov
icebp
je
xchg
cmp
lods
pop
mov
jae
push
shld
mov
lret
cmp
lahf
and
repz
bts
shlb
aad
imul
nop
das
push
out
mov
std
pop
scas
pop
and
pop
mov
xor
fiadds
fidivl
out
push
dec
xlat
and
ficomps
or
stos
dec
push
out
js
mov
push
andb
xchg
je
loop
adc
lret
int
mov
cld
aas
adc
push
sbb
test
cs
stc
sbb
icebp
sbb
mov
push
add
mov
cmp
xor
aaa
lock
adc
rcll
or
stos
ffree
repz
sub
adc
jnp
popf
shrl
and
adc
cwtl
fsubl
pusha
pop
jbe
inc
stos
fwait
mov
lret
push
cmpsl
mov
ret
daa
xor
mov
jb
out
cmp
jp
pop
out
xchg
xlat
fs
es
scas
popa
xchg
sbb
js
mov
dec
cld
popa
std
mov
xchg
xchg
sub
jl
mov
push
xchg
icebp
in
addl
repz
mov
sub
sub
lret
aaa
and
out
test
int3
loop
add
negb
out
and
sbb
jl
dec
sub
or
mov
aaa
mov
insb
lea
adc
cld
lods
cmp
inc
sbb
pop
jle
aas
in
imul
mov
ret
mov
push
in
in
jmp
mov
mov
push
add
xchg
dec
push
xor
lret
fwait
sahf
sbb
hlt
sub
in
sub
mov
mov
inc
sub
cmp
fnsave
mov
gs
jmp
xchg
adc
fildl
jo
je
jb
inc
adc
popa
mov
fistpll
fsubr
loop
mulb
sahf
xor
scas
adcb
xchg
pop
cmp
mov
dec
rcll
xor
fiaddl
popa
test
mov
rolb
jo
pushf
das
addb
int
adc
and
cmc
lods
mov
les
test
or
sti
cwtl
aaa
sbb
and
sub
enter
sbb
cmp
mov
xchg
adc
mov
hlt
xchg
or
pusha
sbbb
push
mov
das
jb
stos
int
mov
subl
loop
dec
arpl
add
and
push
jle
ret
stc
addr16
mov
loope
es
or
adc
dec
xor
fists
lcall
pop
jge
and
sub
push
sub
inc
sbb
iret
sub
pop
pop
je
jmp
enter
inc
mov
mov
insb
popa
leave
and
pop
gs
cmpl
mov
rorb
test
mov
add
inc
lret
daa
shl
jne
pusha
pusha
and
jg
rorl
jg
or
sahf
outsl
movsl
pop
cltd
and
adc
xchg
cltd
fdivrl
or
std
or
insb
add
gs
lods
fsubr
ja
popa
pop
adc
cmp
bound
jno
mov
inc
inc
call
mov
fs
cmc
mov
ds
push
jne
fsubrl
cmp
int3
or
ss
xor
push
imul
pop
movsb
pushf
out
lcall
fimuls
aam
mov
inc
pop
shrl
or
in
test
push
in
jp
daa
mov
loop
or
cmc
aad
shl
dec
es
in
cmp
sbb
pop
xor
loopne
shll
jmp
out
xchg
mov
pop
jp
ret
lods
repnz
aaa
xor
mov
xor
dec
pop
ds
mov
test
es
adc
cmp
adc
inc
js
sub
jae
xchg
in
ret
psllw
testl
push
and
mov
imul
lods
jg
or
fstpt
pop
sbb
rcll
sarb
jmp
push
jl
xor
rorl
insl
and
ljmp
into
imul
into
daa
insl
fucom
stos
lahf
sbb
pop
sahf
mov
cmc
fwait
mov
jg
jae
shr
cmc
dec
add
jge
call
xor
dec
lea
out
jle
adc
sub
mov
popf
js
sbb
mov
shll
jecxz
cli
lds
clc
ss
ret
cltd
int3
lods
pop
shll
mov
pop
inc
jae
in
call
lods
lods
outsb
loop
popa
push
aaa
ror
test
test
or
jno
and
repnz
and
es
jmp
jl
xchg
sbb
loope
inc
sahf
fildll
dec
aas
in
shrl
push
push
xchg
or
dec
mul
out
dec
pop
cmpsl
dec
xor
sbb
xchg
xchg
xchg
into
inc
sbb
stos
pop
stos
jle
or
fistps
jg
or
scas
aad
outsb
in
inc
mov
stc
mov
mov
fcmovbe
adc
mov
insb
enter
mov
test
sbb
dec
pushf
push
adc
insb
fbstp
clc
out
movsl
cld
cltd
and
frstor
add
sub
xchg
pop
dec
or
mov
dec
cmp
icebp
or
mov
es
pusha
out
out
in
xor
lods
out
push
rep
rcl
rcr
bound
imul
out
pop
insl
movsl
mov
mov
fildl
enter
dec
icebp
or
rorl
xor
mov
pop
sti
sbb
pop
aas
xchg
add
jp
cmc
and
lods
cmp
std
dec
push
mov
and
lret
rcrl
data16
jmp
cmp
or
sarb
scas
inc
stos
shr
out
les
adc
js
mov
jmp
sub
jg
dec
sbb
pushf
sti
fs
add
pop
xchg
and
push
lahf
sti
ficoml
push
lcall
mov
aaa
out
icebp
pop
inc
sub
sbb
inc
shr
cmp
mov
fs
into
je
mov
mov
arpl
push
and
pop
and
or
mov
shll
sahf
sub
jmp
push
dec
add
cmp
push
ret
adc
jecxz
dec
loope
fsub
into
call
dec
mov
pop
mov
scas
dec
testl
inc
in
and
pop
mov
and
cmp
add
cld
push
mov
call
mov
stos
adcl
fadds
lret
filds
inc
lret
mov
mov
or
das
arpl
mov
dec
insb
loopne
add
sbb
mov
in
loopne
fdivl
sbb
push
and
xchg
test
lock
jbe
cwtl
or
outsb
enter
push
sti
out
add
pushf
pop
mov
sbb
pop
dec
stos
lods
xchg
dec
push
mov
popa
jns
dec
jle
add
movsb
outsl
fcmovu
dec
icebp
push
cmp
push
int3
mov
inc
sbb
push
xlat
jno
mov
mov
notb
cmp
xlat
or
int
sub
pop
cld
es
cmovge
jge
fwait
shll
inc
aad
adc
lret
mov
jg
enter
dec
or
jmp
cmpsl
ss
adc
or
dec
xor
jo
adc
imulb
scas
cmp
xchg
out
sub
push
dec
dec
or
adc
mov
dec
sahf
push
jge
sarb
les
jb
or
push
aas
push
loopne
push
test
into
lods
jae
mov
fnstcw
popf
inc
mov
inc
adc
aad
stos
ds
adc
adc
and
mov
push
sub
mov
xchg
inc
xchg
lock
mov
mov
mov
jg
xor
mov
and
push
in
sahf
aas
lock
rcrb
or
adcl
test
jne
mov
push
mov
pop
pop
mov
addr16
xchg
dec
scas
push
cmp
xor
cmp
xchg
shll
lea
aad
xor
add
stc
clc
ljmp
sub
mov
jle
mov
pop
xor
and
pop
and
test
das
mov
daa
mov
sbb
xorl
aam
mov
add
jmp
lret
btr
pop
push
pop
lea
and
insl
sub
out
jne
mov
lret
add
pushf
pop
xlat
lock
inc
pop
mov
outsl
sbb
les
test
xlat
lods
add
std
jno
aad
cmp
sub
cwtl
sar
push
mov
mov
xor
pusha
lea
add
jle
mov
jo
out
outsl
cmpsl
imul
clc
jnp
push
rorb
push
mov
and
inc
leave
xor
cmp
jp
jcxz
mov
xchg
pop
mov
ds
in
pop
lds
jmp
shrb
jmp
add
cmp
dec
lods
cltd
insl
inc
cmp
mov
dec
mov
andl
cmp
or
add
mov
adc
pop
xor
pop
out
hlt
cmpsl
mov
cmpsb
pcmpeqd
stos
mov
test
adcb
and
xchg
test
xchg
iret
data16
stos
pop
cmp
inc
cmp
aaa
loopne
in
sbb
adc
loope
dec
rorb
push
pushl
insb
popa
xchg
fwait
pop
adc
jbe
sbb
push
addr16
mov
dec
je
scas
add
adc
stos
pushf
icebp
jo
cltd
andb
arpl
add
outsl
or
xor
sbb
fistps
cmc
push
mov
movsl
test
js
outsb
inc
pop
xchg
rolb
faddl
cld
push
repz
ss
pop
push
mov
adc
add
test
jle
lahf
xchg
add
push
or
jg
mov
xor
shl
push
mov
adc
cmp
lea
iret
jecxz
xor
ja
push
ss
lret
jle
or
xor
sbb
ss
inc
dec
cli
jge
mov
mov
sbb
subb
psadbw
pop
inc
cld
lret
lea
xor
repz
jl
jmp
mull
adc
int3
and
push
out
pop
int3
xor
cmpsb
inc
or
jne
out
mov
xchg
test
call
adc
pop
insl
xchg
js
adc
iret
addr16
mov
out
mov
push
pop
rcrb
adc
bound
and
jge
lds
stc
mov
in
pop
adc
in
ja
and
mov
lcall
push
lret
cltd
mov
pop
add
test
adc
call
cmpsl
addr16
mov
mov
mov
sub
arpl
mov
sbb
sbb
sub
pop
add
pop
inc
push
push
outsb
jae
mov
jnp
xchg
roll
push
adc
pop
mov
aam
cmp
cwtl
push
xchg
push
rcll
mov
inc
mov
or
lods
and
outsl
addb
inc
sbb
mov
fistps
push
or
mov
fidivs
enter
or
ja
aam
test
xchg
dec
lds
push
rorb
js
pop
adc
insl
sbb
mov
rorl
jmp
sbb
push
into
jnp
cmp
daa
das
lods
mov
inc
shll
das
mov
cmp
cld
mov
push
fdivrs
nop
cwtl
inc
cmp
xchg
fs
and
les
sub
fsubp
push
rcl
popf
mov
into
sbb
mov
adc
add
inc
jp
push
shlb
sbb
dec
in
movsb
test
dec
sub
shrb
pop
and
lret
shrb
insb
jge
mull
xchg
adc
mov
pop
dec
add
xorb
notb
mov
xchg
aas
add
xchg
ror
lret
imul
out
adc
roll
ljmp
cmpl
inc
sbb
sub
dec
decl
xchg
mov
rorb
fsubrp
or
aas
and
push
adc
and
mov
mov
jmp
jns
inc
sbb
dec
mov
xchg
rolb
lds
xor
fnsave
dec
je
mov
inc
scas
adc
cmp
sub
and
push
ja
std
lods
and
mov
sub
stc
lods
and
popa
inc
adc
pop
mov
xor
fldcw
imul
adc
loop
cltd
rol
movsb
sub
or
sarb
jle
add
ret
jl
idivl
cmpsl
test
popf
and
leave
jb
fsubrs
out
repnz
outsl
jae
cmpsb
test
in
call
fdivs
mov
mov
cmpsl
ljmp
jg
shld
enter
pop
fdivrl
fdivp
sbb
pop
cmp
mov
jmp
xchg
data16
lret
xor
and
leave
ret
pop
es
xor
adc
mov
or
cltd
insb
add
jg
add
xchg
mov
ja
mov
or
adc
hlt
sti
lea
not
mov
scas
cmc
ljmp
xor
add
lahf
stos
cli
fistpll
popf
adc
sbb
subb
aam
mov
pop
mov
jb
mov
decb
mov
add
jae
inc
jl
ds
cmp
jg
ja
xchg
divl
push
test
cmp
push
loope
add
mov
ficoms
push
mov
test
sbbb
mov
fs
mov
or
fwait
mov
fldt
sbb
das
test
lods
popf
popf
je
push
bound
mov
inc
and
cli
das
outsb
int
cmp
int3
fsubrs
gs
insb
fdivrl
imul
ret
pop
pop
out
jo
push
in
mov
fwait
rcr
sbb
sbb
filds
in
nop
out
xor
es
or
gs
aas
jmp
add
pop
jae
adc
sub
test
leave
sub
sbb
jnp
rcrb
out
ljmp
add
je
pop
xchg
inc
mov
pop
cld
loope
mov
lret
sub
pop
cmpsb
lcall
into
daa
mov
loopne
icebp
idivl
sbb
xor
and
adc
int
mov
jb
jecxz
cmp
mov
pop
sub
jne
rorl
loopne
fldcw
xchg
xchg
pop
or
aas
ds
jge
mov
loop
pop
cs
xchg
nop
cs
ss
or
cmp
pop
nop
and
pop
shr
insl
ja
sbb
sub
adc
sti
sbb
lods
outsb
jp
decl
insl
fs
mov
mov
stc
cs
push
mov
nop
push
fiadds
into
test
rcrl
jbe
and
aas
clc
xchg
fsubl
in
loop
pop
ljmp
arpl
push
xor
pop
loope
sbb
rol
dec
rcrl
or
cld
xchg
pop
add
rcrl
pop
stc
mov
in
out
test
jb
add
add
add
mov
outsl
xchg
mov
addr16
fcoms
mov
fstps
test
ret
add
fnstsw
mov
jp
push
mov
in
repz
xor
add
mov
test
in
shr
int
dec
xor
es
fsubrl
jg,pt
jecxz
insb
push
mov
in
iret
add
mov
les
outsb
sub
or
scas
clc
sbb
sub
mov
aad
mov
add
aam
in
call
jbe
adc
cmpsb
inc
push
stc
rorl
push
mov
das
into
cltd
into
cltd
and
std
icebp
mov
enter
ja
sub
test
fcompl
cltd
mov
cmpsb
shlb
outsl
pop
cs
adc
xchg
imul
xorl
clc
sar
test
int3
call
or
scas
dec
out
or
dec
lcall
cmp
lea
mov
push
fdivr
je
jmp
repnz
mov
and
jge
mov
es
int3
pop
ficoms
inc
stc
cs
cli
mov
and
mov
lea
in
dec
mov
sti
and
popa
inc
and
les
adc
rolb
in
stos
push
jle
cmc
inc
mov
mov
push
push
sahf
in
enter
or
jb
js
jbe
int3
adc
add
push
cs
pop
push
js
mov
push
pusha
fstl
jbe
xor
int3
add
sti
mov
sbb
aaa
cli
xchg
fmul
mov
dec
xor
dec
push
test
dec
shll
pop
fnsave
pop
out
mov
lea
stos
mov
in
adc
addr16
lds
int
movsl
imull
push
fsubs
dec
pop
inc
pop
scas
mov
jg
call
clc
imul
push
sub
sbb
scas
push
popf
cmp
push
movsl
popf
jo
dec
xchg
cmp
loop
mov
daa
inc
out
cwtl
jmp
or
cltd
repz
lret
test
call
lock
mov
repz
test
mov
flds
movsb
pop
andl
test
aaa
sub
out
data16
lcall
cmc
ret
xor
orl
insl
push
outsb
sbb
pop
aam
mov
push
jnp
cli
mov
nop
pop
sbb
cmp
inc
mov
dec
leave
cmp
mov
scas
pop
out
dec
mov
xchg
imul
mov
js
mov
xor
mov
inc
movl
inc
sub
out
cmp
fbstp
out
int
cwtl
lea
adc
adc
adc
imul
outsl
cmp
icebp
cld
cmp
jne
int3
add
inc
mov
xchg
sbb
sbbb
stos
sub
out
lret
test
cmp
adc
popf
out
icebp
sarb
cmpsl
xchg
mov
mulb
ret
addl
enter
test
mov
lcall
mov
inc
pop
ret
xchg
rolb
mov
xor
sbb
mov
dec
dec
pushf
adc
stos
inc
aas
push
or
jmp
jbe
add
fcmovnbe
ljmp
repnz
stos
mov
mull
jns
movsl
into
or
add
inc
cmc
lods
imul
push
les
ret
lods
sbb
stos
in
xchg
sbb
mov
aad
lret
dec
mov
shrl
popa
push
rcll
cmpsl
push
dec
mov
push
insb
mov
sar
pop
xchg
or
jl
pushf
push
outsb
lcall
push
mov
adc
push
pop
int3
fldl
and
add
or
inc
push
pop
xor
xchg
fbld
lcall
arpl
cld
jno
incl
and
mov
mov
ret
jge
and
adc
pop
in
movsb
es
inc
adc
std
add
lret
pop
inc
shll
and
add
jge
mov
and
outsl
pusha
sub
mov
adc
imul
xchg
cltd
out
cmp
imul
movsb
inc
mov
daa
insb
ret
sbb
cmp
lock
pushf
jne
daa
push
loopne
jl
imul
xchg
rolb
cmpsb
adc
mov
inc
ret
je
jbe
xor
ds
push
mov
fsts
and
out
std
or
out
fmull
jno
out
adc
out
cli
out
jns
mov
pop
jp
mov
pusha
inc
and
cwtl
cwtl
popa
push
std
clc
lcall
xor
int3
xor
inc
dec
or
sbb
jb
dec
dec
xchg
cmp
es
mov
les
dec
repnz
bound
inc
int3
xchg
test
rcll
mov
push
adc
in
lock
sub
fimull
rorl
pop
inc
repz
mov
scas
pop
or
imul
std
imul
mov
xchg
fidivrs
dec
fsubrs
push
sub
add
pop
or
leave
add
xchg
flds
jl
mov
icebp
cwtl
xchg
xlat
movsb
mov
xor
sub
cmc
shl
stos
xchg
lret
cwtl
mov
sub
sub
rcrb
sbbl
jb
scas
cmp
dec
cltd
in
or
clc
sub
ret
leave
add
or
sub
cmp
es
mov
sub
mov
cmp
inc
stos
pusha
icebp
pop
daa
push
cmpl
roll
les
sbb
mov
arpl
lds
dec
bound
hlt
lods
fdivl
xor
sbb
lea
je
lcall
mov
outsb
push
mov
ret
aam
mov
fbstp
fisubs
cmpsb
lods
add
aam
andb
mov
nop
jp
mov
mov
mov
mov
fmuls
orb
push
adc
popa
mov
ljmp
mov
shl
xchg
scas
push
repz
pop
js
xor
pushf
lret
faddl
or
cmp
pop
jmp
xor
sbb
mov
sub
mov
dec
lock
rcrb
std
mov
push
jns
cltd
popa
dec
out
mov
push
cmc
add
inc
and
jno
mov
fimull
adc
std
pop
aas
test
jae
sbb
shr
mov
jecxz
popf
sbb
in
dec
loopne
jg
mov
popf
push
fldcw
sub
rclb
push
dec
push
popa
mov
int3
loopne
adc
imul
mov
jecxz
out
xor
stos
xor
add
sarb
adc
dec
jno
xor
add
sub
fadds
xchg
sbb
repnz
inc
inc
mov
out
leave
mulb
push
enter
lcall
jmp
lods
data16
add
bound
into
dec
fucomi
popa
xlat
fdivrs
das
mov
out
ret
lret
movsb
add
cmp
outsl
sar
jle
inc
aaa
addr16
xor
loopne
or
lret
mov
mov
xchg
mov
lods
mov
lods
repnz
push
dec
mov
inc
or
and
hlt
and
mov
test
dec
sahf
mov
xor
out
sbb
lock
and
jmp
pop
int3
leave
mov
loope
wbinvd
stos
loope
insb
jo
movsl
pop
lret
inc
jbe
insb
or
dec
jns
mov
add
push
test
dec
add
and
and
mov
fsts
daa
sub
out
lea
scas
xchg
dec
out
dec
xchg
inc
call
xchg
or
lods
mov
loop
and
call
insl
mov
mov
test
sbb
cmp
shll
ja
ljmp
insb
xor
fcom
icebp
and
mov
std
mov
into
call
push
jb
sub
scas
or
mov
push
aad
xchg
push
xchg
ds
mov
jp
cwtl
aam
adc
sbb
lcall
adc
xor
faddl
cld
rolb
jno
mov
xor
iret
out
mov
sahf
push
int3
adc
std
out
lds
xchg
cmc
sbbb
add
cmp
bound
lds
lock
pop
xchg
xchg
dec
mov
popf
push
sbb
pop
jmp
mov
push
adc
pop
add
movsb
sbb
out
test
or
cmpsl
dec
xchg
mov
stos
sti
pusha
cmp
je,pt
mov
repz
sbb
mov
out
ja
adc
in
dec
pop
gs
xchg
and
and
sub
add
mov
jge
pop
rcrl
xchg
pop
mov
std
jmp
xor
xchg
adc
sub
mov
xor
fisubl
jo
divb
jno
mov
mov
daa
jmp
test
inc
icebp
test
ret
jns
je
fldcw
xchg
cmpb
lds
clc
sti
mov
or
lods
push
pusha
aas
xor
pop
jmp
push
mov
sbbl
pop
pop
lock
xchg
xor
hlt
call
push
sbb
aam
popa
imul
test
xchg
filds
mov
fdivl
inc
or
pop
aam
push
insl
stos
xchg
xchg
out
lea
fdivl
popf
out
ds
cmp
lods
push
mov
mov
in
jg
es
cld
les
mov
adc
xor
inc
mov
xor
or
iret
es
fs
loopne
and
dec
dec
popf
or
inc
dec
add
rclb
pop
or
inc
xor
add
push
xchg
push
xor
das
cbtw
movsb
push
int3
jg
sarl
push
add
lahf
dec
sti
rorl
sub
gs
xlat
cmp
orb
jb
popf
xchg
cmp
sub
xor
mov
sbb
pop
cmp
stos
pop
and
ss
ja
mov
scas
xorb
daa
jecxz
jno
jmp
inc
mov
shrb
mov
mov
add
or
sbb
pop
lods
add
es
or
std
in
fwait
xor
testb
fidivs
lds
pushf
loope
mov
sarl
push
push
fs
or
inc
add
mov
pop
mov
push
mov
dec
shrb
cmp
or
xor
push
xchg
pop
popf
aas
and
test
inc
jbe
and
nop
iret
push
clc
pop
rcrl
dec
push
insl
dec
jmp
sub
inc
or
fnsave
sbb
sbb
dec
outsb
test
std
jmp
adc
mov
jp
ss
mov
add
mov
dec
xchg
mov
std
cmp
pop
enter
jno
daa
or
pop
dec
mov
aaa
mov
rcrl
out
push
jle
out
fldl2e
lea
adc
ds
cmp
sub
mov
add
out
push
adc
les
in
dec
aam
dec
outsl
movsl
les
scas
pusha
sub
sub
push
xchg
lret
pop
push
jge
notb
fstpl
sbb
cmp
mov
sbb
xor
sarb
fistl
cmp
jne
rol
aad
fistl
out
ljmp
xor
iret
in
inc
cmp
mov
pop
cmp
out
leave
jo
lahf
jae
push
pop
mov
xor
or
xchg
sbb
jecxz
mov
sub
movsb
adc
jbe
cwtl
dec
add
dec
jecxz
movsl
mov
call
fdivl
pop
call
cmp
pushf
sbb
out
jbe
and
outsb
cs
test
ljmp
loopne
imul
mov
lock
out
int
enter
sti
fabs
jae
js
cmp
and
stc
inc
movups
add
xchg
xor
mov
sahf
jl
mov
xlat
fcoms
mov
mov
bound
mov
addr16
sbb
pop
push
or
add
in
cli
inc
mov
jl
sub
jge
adc
arpl
mov
adc
push
mov
mov
pop
adc
push
int
add
addr16
lods
xlat
dec
loope
idivb
call
mov
xchg
or
test
xchg
jl
pusha
xor
test
std
insl
cmp
cld
movsb
imul
je
std
daa
mov
push
shlb
adc
mov
das
adc
das
mov
pop
push
scas
jge
cmpsb
pop
push
adc
addl
cmp
cld
jne
jge
les
ja
negl
adc
popf
add
sub
cld
daa
popa
rorl
mov
push
je
mov
mov
mov
dec
roll
call
adc
bound
sub
inc
cwtl
out
or
cmp
push
popa
mov
push
xor
popf
xchg
inc
pop
cmp
mov
mov
pop
pop
aad
pop
fcompl
cltd
lods
xor
sahf
jmp
scas
sbb
out
mov
fidivrs
mov
push
push
fidivs
cmpsl
xchg
stc
stos
scas
or
ss
and
and
mov
cmp
and
pop
lret
inc
mov
sahf
cmpsl
jb
cmp
jns
mov
cmpsb
das
xlat
lahf
fs
stc
lock
adc
mov
pusha
inc
adc
loope
and
jbe
push
out
mov
les
and
push
aam
mov
jno
jge
jge
out
in
int
pop
sbb
in
sbbl
ficompl
adcl
pop
dec
push
ret
mov
aam
and
in
out
insl
cltd
push
push
jb
test
push
mov
xchg
and
imul
push
sbbb
hlt
mov
dec
icebp
and
push
mov
dec
ret
mov
sbb
movsl
mov
shlb
stc
xor
mov
jnp
push
cli
aad
sub
inc
lods
mov
and
push
jbe
dec
test
and
pop
std
gs
sbb
or
mov
push
ds
xchg
adc
stos
lods
dec
jbe
add
sub
xchg
pop
mov
fs
xchg
in
fnstcw
nop
imul
dec
flds
push
adc
sbb
pop
push
addb
add
std
out
cmpsb
push
push
jbe
xor
in
add
notb
insb
stos
arpl
xorl
imul
loope
dec
je
inc
imul
aas
in
sub
mov
cmpb
or
stc
cmp
es
out
loope
mov
stos
push
shlb
mov
insl
rcll
xchg
dec
cmp
mov
jmp
jbe
scas
addb
ret
fstpt
inc
push
xor
fistpll
sub
aaa
shrb
cmp
pushf
test
imul
fs
fisubs
push
push
scas
je
or
mov
ret
cltd
mov
repnz
addr16
adc
scas
push
xchg
sbb
pushf
jp
andl
lods
lods
sbb
pop
mov
mov
pusha
loopne
leave
push
and
sbb
stos
or
or
dec
xchg
add
xlat
inc
test
mull
mov
aam
sub
dec
int
loop
movsl
or
mov
pop
fists
jo
add
movb
push
add
jns
push
stos
imul
xor
fstl
xor
fidivrs
pop
scas
and
mov
imul
movsb
dec
rcrb
inc
cmpsb
mov
add
leave
push
in
lea
mov
scas
mov
cmp
daa
popa
fdivrs
inc
mov
push
jl
add
aad
xor
test
mov
lods
fmul
sub
xor
pop
lock
or
ss
mov
jmp
daa
jo
lods
pop
ret
lock
sbb
dec
dec
int
adc
sbb
ds
repnz
ds
sbb
jbe
in
dec
dec
xor
jne
test
and
cmp
je
and
sbb
pop
faddl
leave
push
sbb
sbb
jns
cltd
mov
cmpb
sar
nop
inc
test
fcomip
mov
ja
and
jl
and
mov
cmp
fdivrp
xlat
push
mov
cmp
mulb
mov
call
jmp
adc
jl
jle
in
ljmp
mov
notl
pop
imull
stos
pop
jg
inc
xorl
dec
push
inc
mov
mov
push
cmc
out
out
into
or
mov
js
push
jnp
sahf
pushf
jle
mov
lock
dec
sarb
iretw
push
jg
scas
dec
je
mov
lea
out
push
pop
or
rol
les
pop
out
ja
cmpsl
lods
loope
enter
and
adc
idiv
or
rorl
sub
fstl
subb
js
hlt
push
inc
or
in
lods
idiv
cwtl
aad
aaa
imul
and
lret
sbb
jle
sahf
pop
cmpsl
into
lret
aas
aaa
jle
imul
cwtl
sti
cmpsl
and
sbb
jge
cli
cmpsl
fcmovu
ret
lret
daa
cld
pop
push
mov
popf
arpl
push
and
repnz
ja
mov
mov
call
sahf
inc
insb
mov
xchg
mov
mov
in
push
xchg
jbe
or
push
jle
inc
mov
xchg
sub
lea
mov
lret
int3
loope
xchg
test
mov
mov
je
ljmp
test
test
loope
mov
fmul
sub
push
insb
sub
cmp
or
cmp
testb
int3
dec
rolb
int3
add
incb
pop
jno
fisubl
inc
ficomps
rcrb
lret
push
cld
gs
push
mov
js
out
lret
mov
and
or
add
cmpsl
add
and
jp
icebp
add
repz
xchg
stos
xor
mov
ss
mov
mov
pop
notb
aas
or
test
sarb
pop
jnp
pushf
jns
cmpsb
in
enter
call
out
repz
cmp
and
fisubs
cltd
std
mov
mov
dec
fadds
scas
ljmp
and
inc
fsubs
sbb
push
mov
inc
xchg
dec
push
mov
fadds
and
andl
test
mov
fiaddl
push
test
or
mov
popa
outsb
push
iret
call
rorl
or
mov
xchg
lret
addb
pop
mov
jno
jmp
jno
jg
ret
inc
jno
mov
mov
sbb
pushf
adc
cmp
dec
cmp
dec
jmp
push
data16
leave
jp
cmp
test
mov
push
mov
mov
jl
lret
fisttpll
add
outsl
xchg
test
xor
jbe
add
mov
push
sub
lret
jno
fwait
jnp
adcb
rcll
cmp
repnz
cmp
add
loop
mov
bound
in
push
movsl
out
mov
sbb
pusha
and
int
popa
sbb
in
mov
push
fdivrl
mov
imul
sub
dec
std
jns
mov
add
xchg
in
hlt
lret
arpl
pop
fs
aam
dec
dec
mov
mov
repnz
stc
add
push
adc
lods
test
ja
adc
repnz
mov
dec
xchg
pop
push
sti
adc
subb
sub
rcrb
outsl
mov
frstor
repz
outsl
adc
adc
pop
adc
pop
mov
xor
and
push
roll
scas
sbb
jecxz
sti
mov
stc
jle
cmp
mull
mov
outsl
adc
push
lods
pop
jo
inc
out
mov
push
aam
adc
arpl
cs
stc
and
cwtl
pop
push
mov
mov
jg
incb
xor
pushl
mov
outsl
loopne
into
push
xor
hlt
adc
sub
aam
xorb
sub
mov
mov
frstor
sub
popf
jne
inc
cmp
mov
or
fcoml
xor
sub
scas
mov
iret
jecxz
scas
and
divb
loopne
jbe
fmul
xchg
stc
dec
fs
nop
iret
adc
sbb
jp
jo
push
cli
dec
rcll
sub
cmp
mov
bound
pop
sub
out
popa
fsubrs
or
sahf
scas
hlt
mov
fmull
dec
adc
cwtl
mov
mov
imul
push
popf
lret
int3
jb
ret
movsb
stos
inc
stos
lock
enter
mov
stos
pushf
add
xor
fcomp
lods
and
js
scas
xchg
push
mov
add
jge
fcom
rcll
imul
mov
popf
gs
in
fsubr
ret
and
out
popaw
xlat
gs
add
loop
out
dec
aam
mov
cmp
xchg
fistl
cld
and
cmp
mov
add
out
xor
push
in
enter
push
ret
adc
ja
fcmovnb
adc
mov
or
cltd
jg
adc
or
adc
das
push
pop
pop
shlb
fsts
push
mov
mov
push
jnp
es
cli
mov
retw
into
pop
test
lcall
xor
loope
mov
sbb
cmpb
call
fdivs
xchg
ret
push
and
sub
dec
dec
cmp
vpacksswb
adc
cwtl
or
cmp
adc
jns
mov
sub
dec
or
and
sub
xchg
sbb
push
push
js
add
out
cmp
xchg
lods
inc
fsub
mov
pop
add
mov
fsubs
lret
pusha
aas
cmpsl
jno
outsl
xor
repz
popf
fwait
lea
sub
out
jg
rorl
xchg
ja
hlt
mov
fdivr
js
pop
push
adc
cmc
and
test
cmpb
imul
add
in
mov
xchg
mov
fnstsw
sub
mov
sahf
adc
imul
sub
or
or
jle
cltd
jns
test
adc
je
pop
push
xchg
insl
addr16
lock
xchg
out
cs
cmc
sub
cs
mov
imul
jne
iret
mov
and
cmp
out
in
call
ss
dec
jae
es
negb
dec
jmp
cmpsl
in
fnstenv
adc
inc
cmp
jnp
dec
jb
xor
shrb
in
cmpsb
push
addb
out
hlt
push
insb
in
scas
pop
mov
pop
sub
pop
xchg
stc
incb
stos
sub
int
lret
fs
lds
ds
jl
adc
out
ret
outsb
mov
into
outsl
adc
fisubs
out
dec
loopne
jnp
dec
addr16
std
cmp
lods
xor
mov
std
cmp
gs
outsl
push
notb
jmp
lcall
lock
sub
fisubrs
cmc
cwtl
out
xchg
pop
jg
mov
das
shll
mov
adc
lods
push
pop
outsl
xchg
sbb
jae
ss
or
mov
dec
push
dec
sbb
inc
adc
cmp
jnp
xchg
cld
mov
sbb
cmp
pop
push
rcll
or
pop
ficomps
cwtl
rorb
shlb
scas
dec
jl
testl
loopne
loop
into
push
ret
ret
xor
shll
aad
mov
fsub
add
sub
mov
adc
movsb
mulb
scas
jnp
mov
inc
jbe
shr
fs
sub
jae
xor
sar
mov
flds
in
push
cmc
jns
adc
push
repnz
and
lret
mov
pop
ja
ja
mov
mov
out
out
cmc
adc
jno
shll
scas
push
pop
lds
mov
repz
pop
jle
jo
out
or
aas
mov
jo
cmc
in
xchg
je,pt
subb
jnp
dec
inc
jg
adcb
loopne
push
in
shrl
aam
jmp
mov
push
mov
push
add
sarb
rcll
push
and
jo
shrb
out
mov
scas
aam
popa
push
and
movsl
pop
inc
rcll
mov
pop
cli
std
iret
mov
loope
loopne
mull
jb
sti
mov
daa
xchg
in
jo
test
push
sub
inc
divb
xor
and
insb
cltd
pop
out
push
aad
xor
sbb
mov
repz
push
sbb
loope
jno
shl
mov
cmpsl
xlat
jle
cltd
aaa
cltd
xchg
cmpsl
notl
push
dec
aas
insb
int
mov
fildl
lcall
aaa
popf
mov
jo
outsb
mov
mov
std
sbb
xchg
cmp
aad
push
insl
out
test
iret
pop
int
movsl
cmc
ljmp
mov
sub
xor
push
xchg
mov
sub
add
rep
mov
imul
and
jp
fstpt
cwtl
cmp
jle
insb
andl
dec
cli
fwait
iret
hlt
lahf
test
or
adc
daa
int
push
lods
pop
or
ss
mov
outsl
daa
cld
jno
push
aad
lahf
cmc
movl
shr
addr16
outsb
insl
cmc
push
mov
stos
je
or
mov
repnz
or
push
setns
add
push
shll
xlat
mov
popa
mov
je
movsl
dec
adc
sub
adc
andb
cmp
lods
test
xchg
loopne
fwait
das
pop
jae
mov
lret
push
sub
rcll
test
int3
sbb
xorl
or
cmpsl
sub
es
jge
cmp
xchg
inc
shlb
lea
mov
roll
in
popf
je
aaa
xor
cmp
je
mov
or
sahf
outsl
enter
jg
cmp
out
jg
mov
hlt
aam
filds
or
xchg
and
push
cs
inc
call
icebp
test
stos
and
mov
xlat
outsb
inc
cld
insl
shrb
dec
icebp
jmp
sbb
jbe
mov
and
push
out
sub
and
cs
jecxz
es
movsb
arpl
add
movsl
xchg
jno
mulb
arpl
push
leave
dec
cmc
adc
fcmovnu
out
jb
shl
loope
movb
loope
cmc
dec
cmpsb
repz
cltd
xor
insb
xchg
sub
mov
jne
ljmp
je
sub
add
pop
add
add
mov
mov
scas
dec
idivl
jl
fcmovu
iret
repnz
and
push
jg
lds
jnp
jg
out
jno
in
dec
sbbb
cmp
mov
loop
adcb
clc
and
or
fimuls
pop
loope
dec
mov
fidivl
or
scas
sahf
shll
xchg
add
fcmovbe
imul
lret
adc
and
jnp
add
arpl
enter
lea
pushf
rcr
or
cs
imul
test
mov
dec
leave
cmpsb
int3
bound
xchg
mov
xchg
leave
jnp
adc
mov
adc
call
fwait
xchg
mov
pop
jne
cltd
mov
xor
sub
jecxz
roll
orl
mov
inc
js
push
push
rorl
in
int3
and
xchg
mov
mov
dec
xor
mov
dec
sub
and
stc
push
testl
push
wbinvd
push
lods
mov
add
addb
mov
xchg
sbb
mov
mov
sub
adc
sub
testl
decb
jge
xchg
lea
adc
daa
loop
mov
out
aaa
pop
jmp
jg
add
pusha
test
jge
dec
loopne
int
mov
pop
xlat
add
es
imul
ficoml
push
push
loopne
mov
mov
popf
and
stos
inc
in
xchg
jp
pop
adc
cmp
loopne
jb
mov
jecxz
sub
js
sub
dec
inc
ret
xchg
push
fdivl
and
push
mov
cld
sti
xor
inc
sub
push
mov
push
stos
aam
inc
push
dec
xchg
jl
push
mov
outsb
sbb
fstpt
lret
lods
loopne
dec
pop
push
mov
mov
jnp
je
gs
lahf
push
xorb
insb
add
mov
mov
cmp
mov
orl
incb
and
push
cs
dec
lods
sbb
lret
pushf
iret
sbb
jne,pt
add
cli
and
pop
xor
push
out
mov
sub
out
outsb
jb
xor
push
sbb
cwtl
sbb
out
xchg
push
inc
std
add
inc
jo
sub
pop
not
sub
icebp
xor
jns
in
jae
adc
cmp
xchg
jbe
sbb
pop
sub
sub
incb
mov
and
les
jae
pop
daa
jno
pop
es
pop
fnsave
cmp
xor
dec
pop
lock
lret
adc
sub
dec
es
add
pop
out
dec
mov
or
push
jns
in
dec
stos
jmp
or
xchg
loope
nop
lods
adc
mov
test
xchg
outsl
aad
pop
fdivrs
mov
push
cld
imul
xorl
xchg
test
push
push
out
mov
aas
clc
add
inc
dec
xchg
leave
cmp
sbb
rcrb
inc
pop
repz
cmpl
das
mov
test
xchg
subl
jp
fiadds
outsl
test
je
jle
lret
testb
lahf
sahf
imul
popa
scas
lock
ret
repnz
call
add
idivb
js
out
filds
add
jb
sbb
scas
pop
outsb
sub
aaa
ds
xchg
jg
xchg
roll
xor
add
pop
arpl
nop
sub
imul
scas
out
jno
out
add
test
or
lret
repz
mov
adc
test
jmp
lock
add
scas
in
gs
xchg
loopne
jno
push
inc
stc
pop
jl
rclb
incb
ljmp
sub
mov
in
cld
xchg
dec
xor
mov
pushw
xchg
or
mov
push
or
xchg
adc
test
adc
cmpsl
jne
loop
pop
jl
inc
mov
push
test
mov
repz
lea
xchg
shlb
dec
jo
lock
test
popa
cmp
add
jns
mov
mov
movsb
call
cmp
mov
xlat
aaa
or
stos
scas
sbb
fadd
outsl
xchg
es
adc
xchg
and
aad
hlt
in
addb
cmpsl
jecxz
loopne
sahf
jns
cmpsb
add
add
add
imul
out
xchg
pop
mov
fwait
data16
lods
out
subw
leave
ret
call
ficomps
addr16
out
adc
xchg
cmp
dec
xor
xchg
outsb
jecxz
cmp
iret
rclb
pop
cs
sub
and
fbld
mov
or
dec
mov
jae
insb
imul
aas
imul
cwtl
jmp
int3
cmp
add
adc
aaa
loopne
in
movsl
cmp
xchg
sbb
sub
rcll
in
shlb
inc
xchg
fmull
or
and
inc
stos
lods
mov
stc
xor
jne
adc
lcall
xor
je
push
imul
cmpsl
jecxz
push
push
leave
movb
clc
mov
mov
sbb
push
sbb
ja
pop
pop
rorl
ret
in
sub
pop
mov
lret
push
je
das
add
call
shlb
add
and
fists
inc
insb
push
xchg
pop
fisttpl
mov
and
loop
pop
pusha
inc
test
out
pop
mov
iret
mov
aad
jge
xor
jno
nop
jo
push
aaa
push
ja
add
mov
ss
mov
cmc
push
scas
jecxz
xor
mov
fnstcw
pop
or
imul
dec
mov
sbb
jge
pop
imul
dec
je
mov
jae
xor
jp
mov
out
or
jo
aaa
mov
mov
insb
outsb
xor
sahf
push
mov
dec
sti
mov
jne
mov
inc
mov
push
jge
mov
aam
dec
aaa
jns
aas
push
xchg
stos
stos
ret
mov
sbb
inc
or
sbb
mov
nop
adc
inc
stos
and
out
pop
jnp
int3
mov
jle
sub
xchg
lds
jns
test
test
imul
push
sti
movsb
sbb
pop
call
stc
xor
stos
scas
out
hlt
scas
test
mov
mov
lahf
incl
into
xchg
out
cmpl
sub
sbbb
inc
lods
lcall
loop
jmp
adc
xor
inc
jle
icebp
ds
cli
and
sub
filds
push
mov
pop
mov
cs
notb
inc
orb
rcl
aam
mov
jl
add
imul
dec
mov
in
fistl
imul
mov
jb
das
xor
repnz
and
sahf
xchg
pop
jge
mov
add
mov
jp
pop
add
xor
inc
adc
jns
and
mov
stos
call
fcomps
dec
subl
cltd
dec
dec
cwtl
cmp
mov
cwtl
clc
cwtl
jno
stos
cmp
stos
xor
adc
arpl
and
daa
cmpsl
lcall
dec
inc
arpl
mov
xchg
sbb
jmp
push
lods
mov
pushf
decb
rcl
xor
jno
cmp
jmp
add
call
inc
mov
or
jmp
sbb
and
lcall
xor
andb
stos
mov
jbe
xchg
jecxz
fs
call
xchg
mov
cmp
sub
add
leave
push
inc
xchg
scas
sub
jge
dec
mov
int3
sbbl
and
add
lods
pop
into
fwait
push
push
idivl
add
lahf
jns
rol
pop
lahf
mov
std
adc
push
dec
fwait
stos
sub
add
xchg
shlb
and
add
sub
out
xor
adc
icebp
mov
outsl
jb
rorb
xchg
imul
pop
dec
dec
aaa
mov
jae
cmpsl
sbb
sbb
pop
adc
xchg
adc
clc
test
fcoml
push
jbe
mov
data16
in
aaa
das
add
out
imulb
nop
push
and
fsubl
cmp
movsl
adc
or
jne
cmpsl
add
dec
int
xchg
xchg
sbb
clc
sahf
adc
int3
jle
fcmovu
or
or
inc
iret
sbb
icebp
lock
mov
or
push
loope
imul
xchg
mov
out
test
push
aam
loope
dec
shll
or
and
push
fidivl
test
mov
loope
sbb
mov
cwtl
mov
jne
mov
addr16
dec
jnp
jb
xor
push
mov
mov
cli
pop
jb
xchg
adc
popa
iret
or
mov
test
cmpsl
mov
inc
cld
lock
daa
pop
mov
ror
imul
dec
and
lret
js
pusha
pop
mov
cmp
push
jnp
cmp
imull
loope
inc
xchg
cmpsb
xchg
jmp
inc
push
inc
lods
cmpsb
jmp
inc
jnp
mov
mov
test
mov
sbb
int3
enter
jp
fsubrp
push
add
das
inc
subl
push
out
dec
addb
popf
out
push
popa
inc
fisttpl
stos
shlb
mov
adc
inc
mov
jne
add
lea
push
xor
test
mov
sbb
adc
cmpb
out
out
rcrb
aam
mov
mov
mov
popa
cmp
mov
sub
sub
pop
or
cmpsb
mov
push
test
movsl
jb
mov
call
scas
or
xchg
adc
cwtl
jb
push
or
pop
mov
mov
mov
or
lods
aas
inc
lock
cld
or
adc
xchg
mov
mov
xor
cmpsl
sub
pop
and
movsb
jl
add
fs
sbbb
ret
xchg
ja
mov
pop
add
jmp
inc
jle
inc
outsb
popf
das
mov
mov
movsb
inc
outsb
mov
sbb
add
push
or
rcrb
fimull
xor
iret
and
jnp
and
fists
cltd
adc
cld
and
frstor
gs
es
enter
dec
gs
rorl
test
mov
and
adc
ror
sub
push
jne
sub
jns
insl
popa
or
shr
mov
es
add
movsb
or
dec
cmpsb
mov
inc
and
add
xor
sub
lods
negb
adc
outsl
in
jle
insb
push
arpl
clc
ljmp
lods
xchg
out
mov
sub
sbb
test
pop
scas
xor
lsl
push
push
xchg
xlat
cmp
ficompl
insb
dec
xor
lods
ja
aaa
mov
add
add
mov
ss
lret
iret
popa
adc
cli
lods
xchg
mov
shrl
sub
jmp
repnz
xor
fdivp
ds
testb
in
aad
xchg
sub
and
pop
push
insb
adc
push
cli
ja
lds
movsb
lods
aam
adc
xchg
out
ja
idiv
jb
pop
pop
adc
mov
mov
and
mov
or
inc
cmp
fs
ret
mov
jne
mov
xor
mov
fildll
incb
gs
icebp
jle
sets
fildll
pop
push
fucomip
fcoml
enter
arpl
sub
jns
clc
mov
sub
fidivl
xchg
sbb
jge
push
fsub
push
outsb
rcrb
pop
ret
das
xor
scas
jecxz
xchg
and
mov
out
dec
test
lock
inc
cmpsl
adc
daa
fidivl
sbb
shl
mov
fldl
fdivrp
bound
mov
mov
ja
sbb
jg
cmp
sub
inc
inc
loopne
sub
cmp
inc
push
int
add
fadds
sub
repnz
incl
mov
mov
mov
push
pop
popf
cmpsb
fadds
ss
and
sub
inc
cmp
imul
faddl
mov
imul
outsl
dec
addr16
mov
or
fildl
cmp
lock
stos
mov
push
out
mov
pop
and
out
xorb
sbb
add
or
div
das
dec
ja
inc
aas
scas
and
xor
das
cli
push
cld
add
stos
sbbb
jge
push
int3
sub
roll
xchg
xor
mov
xor
movsb
imul
pop
and
cmp
das
push
pusha
mov
mov
inc
add
scas
inc
xchg
dec
add
ficomps
js
ljmp
nop
lods
add
out
flds
in
dec
mov
in
test
add
cmpsl
cmp
repz
int3
jp
ja
imul
int
jns
push
dec
xchg
jns
jo
mov
sub
in
adc
lahf
dec
ficompl
out
and
inc
sbb
or
rcrl
int3
xchg
addr16
xchg
jg
shl
jp
and
aas
xor
mov
mov
xchg
mov
dec
jnp
jo
lods
stc
insl
lds
or
int
clc
mov
scas
and
push
xchg
js
sbb
jb
sbb
xchg
mov
dec
inc
inc
pop
cmp
pop
xor
test
imul
cmc
adc
mov
jmp
jns
mov
test
fldl
xor
adc
xchg
lahf
xchg
dec
xlat
loop
xor
sbb
aam
enter
repnz
add
add
mov
or
dec
int3
jl
mov
pop
data16
jns
std
sbb
pop
mov
ror
mov
fstl
in
fsubl
inc
and
jns
je
lock
push
ret
jp
loopne
inc
or
or
repz
jp
pop
ja
scas
jnp
xchg
adc
push
movsb
pop
jmp
popa
lret
jne
sahf
jnp
adc
xor
xchg
movl
mov
mov
mov
cld
loop
shl
pop
inc
lret
xchg
ds
ror
mov
mov
fcmovu
sub
insl
jmp
test
adc
mov
fcoml
pushf
cwtl
jbe
mov
mov
pop
mov
ljmp
out
dec
lret
push
and
mov
cwtl
adc
add
fcomip
jge
pop
xor
insb
test
data16
mov
into
test
emms
shrb
aad
jo
leave
jge
fdivr
lret
mov
out
push
jb
pop
scas
and
addr16
mov
hlt
iret
nop
fwait
pop
cmp
jbe
cmp
stos
inc
jge
xchg
push
cmpsb
out
jmp
mov
jecxz
xchg
mov
xlat
jmp
inc
and
cli
and
out
in
inc
shll
mov
lea
sbb
scas
scas
popa
outsb
adc
mov
ljmp
dec
dec
push
cmpsb
add
lock
adc
xor
dec
or
in
mov
movsb
pusha
sahf
cld
and
xchg
pop
push
bound
fsubl
sbb
mov
mov
pop
dec
outsb
sub
or
lds
add
adc
mov
inc
pop
sbb
sub
jmp
pop
fcoms
xor
pusha
aaa
dec
adc
sub
inc
push
je
cmc
xchg
unpcklps
movsb
es
add
sahf
shlb
fs
xor
dec
push
push
lret
les
scas
test
out
les
in
incb
jmp
xchg
je
mov
aaa
xor
orl
aam
inc
cmp
jge
cmp
dec
mov
ja
clc
popa
lret
mov
cli
aaa
cs
mov
jo
mov
sbb
shlb
dec
and
xor
or
mov
jnp
dec
jo
aad
pop
inc
lret
mov
mov
sub
es
mov
xchg
mov
push
xlat
push
mov
pop
aam
sbb
pop
jns
jne
sub
movsb
lds
cmp
xor
xchg
mov
or
push
les
pop
out
enter
shlb
lret
ljmp
outsl
cmpl
dec
xor
mov
xchg
cmp
pop
test
mov
cwtl
fsub
xor
fldcw
cmp
inc
lock
add
sub
ds
fldt
pop
xor
stos
sbb
xor
sub
cmpsl
xchg
shr
adc
or
stos
repz
mov
inc
ret
dec
ficoms
xor
sahf
ret
int
inc
mov
stc
push
loopnew
faddl
fnstenv
aad
aas
mov
sub
xchg
xor
fisubs
xor
push
xlat
arpl
fcompl
loopne
mov
icebp
insl
icebp
cltd
jmp
aaa
nop
jns
sbb
pop
adc
inc
popf
cmpsb
je
cmp
sbb
xlat
push
cmp
cmp
pop
lcall
or
jae
cmp
xchg
cld
mov
ljmp
enter
pushf
aas
push
cmp
std
gs
popa
xchg
popf
inc
sub
add
scas
or
in
and
sarb
adc
xchg
aad
movsb
test
inc
aaa
mov
shl
repnz
push
xchg
and
pusha
xchg
or
or
test
fistl
pop
loop
icebp
clc
movsl
fidivs
adc
jne
jae
xlat
rcrl
fbld
and
clc
es
inc
imul
stos
adc
jmp
add
sbb
mov
in
out
loop
xchg
and
inc
je
fcompl
popa
fisttpl
mov
or
jg
repz
cmpsl
ds
les
rcrb
dec
iret
push
jae
out
and
add
and
jo
inc
xchg
cmp
inc
fs
cmp
xor
jbe
cmp
mov
notb
aam
inc
shrb
fcoml
or
and
loope
int
or
insl
jg
jg
jle
push
pop
xlat
and
or
in
lock
inc
es
repz
inc
sti
nop
lea
jl
pop
xchg
insb
pop
pop
in
hlt
cmp
fwait
and
leave
push
xchg
jno
mov
push
clc
sbb
mov
cmpsl
jnp
adc
ds
push
mull
jne
mov
adc
xchg
mov
repnz
or
neg
mov
jns
mov
mov
ss
mov
movsl
gs
dec
je
push
xchg
and
insl
mov
shrb
mov
in
int3
cmp
xchg
pushf
out
outsl
jb
cmp
mov
pop
pop
lret
imul
je
stos
mov
xor
or
hlt
popf
lock
dec
xor
or
iret
and
cmp
cmp
sarl
inc
fmuls
sub
add
lds
sbb
clc
jle
cli
movb
dec
mov
mov
or
ljmp
imul
ret
or
lods
xlat
es
xchg
sbbb
dec
mov
cld
and
push
jo
iret
jge
insb
lods
and
lcall
adc
and
pop
aaa
imul
sub
ror
loop
insb
mov
gs
xor
sub
mov
or
enter
das
or
pop
push
nop
lea
dec
dec
in
cmpsl
stos
lcall
or
test
or
xchg
mov
lahf
dec
mov
mov
mov
loope
xchg
ljmp
stos
mov
mov
cmpsb
inc
fwait
pop
cmp
mov
js
fisubrs
insb
push
and
push
hlt
push
aaa
add
cld
in
push
sub
cmpsl
pop
js,pt
ja
rcrb
mov
mov
aas
pop
cld
xor
out
imul
xchg
pop
icebp
sbb
add
cmp
push
jb
rorl
fcompl
fbld
scas
adc
and
mov
inc
ja
and
negb
cmp
imul
push
ljmp
push
inc
fs
int3
out
sub
push
inc
repz
mov
mov
jle
inc
push
nop
pop
xchg
cld
sbb
sbb
pusha
xchg
sub
mov
das
pop
mov
fsubrs
imul
and
mov
inc
mov
ds
mov
xchg
inc
mov
mov
inc
add
rorl
lahf
add
mov
push
aad
aaa
mov
mov
or
out
pop
or
stos
iret
mov
jae
dec
adc
fwait
pop
dec
inc
push
xlat
sub
mov
lcall
mov
adcb
add
inc
lds
lds
mov
jle
insb
cmp
popf
pop
xchg
xchg
test
daa
ja
in
aaa
mov
xor
mov
call
call
test
jp
sbb
xchg
shl
sbb
mov
dec
enter
mov
shlb
xor
adc
addb
fsubrs
or
ret
decl
pop
jns
mov
lcall
popf
pop
std
mov
leave
add
and
out
add
jae,pt
mov
fcmovnb
dec
and
jne
dec
ficompl
xor
xchg
pop
mov
cwtl
movsb
xchg
xor
dec
aad
add
and
out
mov
inc
mov
addr16
cwtl
je
jne
xchg
sub
add
push
push
mov
std
pop
sbb
jno
pop
roll
push
xchg
mov
mov
pop
loope
je
lahf
or
xchg
mov
inc
pop
push
movsl
adc
addb
ficomps
aam
adc
and
pop
jnp,pn
shll
pop
sbb
addr16
push
pop
lea
jmp
cmovne
sub
ljmp
add
nop
outsb
lahf
add
popf
xor
loopne
jb
mov
int3
inc
hlt
xchg
or
push
inc
push
pushf
mov
add
mov
test
xchg
jae
outsl
test
push
test
mov
inc
shlb
adc
pop
jl
mov
fstps
dec
add
loopne
lds
cltd
pop
inc
push
jno
idivl
je
add
pop
cmp
mov
push
and
lods
push
inc
icebp
fcmovnu
jmp
dec
pop
push
fs
fcoml
cmp
lods
addr16
lret
xchg
es
mov
adc
lock
cmpl
cltd
pop
iret
cmp
sub
movsb
jno
mov
dec
mov
or
push
clc
sbb
push
cltd
jo
mov
adc
mov
pusha
aaa
xchg
jp
xorb
in
sub
pop
aaa
insb
in
jge
mov
lcall
pop
imul
aad
mov
ja
into
cmp
test
inc
test
add
push
jae
std
cld
xchg
sub
pop
push
sbb
imul
js
out
sub
pop
and
push
add
mov
push
stc
lods
in
lods
jg
push
enter
xchg
jecxz
sub
popf
out
push
loopne
xor
test
push
inc
rclb
jno
lret
cmp
js
jb
lcall
sub
mov
sti
jbe
mov
pop
aaa
adc
add
das
fdiv
sub
pop
xchg
dec
bound
xchg
mov
mov
adc
jg
jae
arpl
mov
test
cmp
lea
push
inc
mov
lahf
fsubs
loopne
fwait
adc
sbb
cmpsb
rep
or
shl
and
adc
jb
fisttpl
ljmp
data16
jo
dec
push
jnp
addr16
sti
jle
mov
call
out
cmp
cmpb
jecxz
sub
sbb
mov
mov
dec
sbb
mov
popf
dec
and
in
inc
xor
sti
int
mov
inc
fwait
or
inc
dec
lret
std
lahf
xchg
pushf
jg
ljmp
repz
and
xor
pop
cmovno
iret
xlat
push
or
sbbl
mov
mov
add
loope
cld
lret
test
mov
and
mov
ljmp
sub
in
sub
mov
das
and
adc
xor
sbb
mov
jae
sarb
loop
cmp
push
imul
pop
mull
in
scas
mov
and
add
add
in
pushf
shlb
scas
and
cmpsb
sbb
int
jbe
jb
es
mov
add
and
stc
xchg
add
jmp
mov
push
fcomip
lds
or
insl
pop
incb
and
jmp
adc
pop
call
stos
mov
sub
cmp
mov
sub
shlb
inc
fsubl
insb
cmpsl
aaa
cmp
dec
push
push
push
jmp
cmpsl
call
mov
mov
xor
jns
jecxz
or
loop
dec
jnp
ret
lds
mov
xchg
sti
dec
test
cmp
or
es
icebp
getsec
cwtl
fwait
jge
imul
mov
pop
out
fldl
aad
sub
jle
jg
adc
xor
stos
shl
mov
mov
scas
ss
inc
andl
xor
bound
iret
sub
pop
add
in
fs
sbb
add
and
dec
lcall
mov
lret
nop
ret
les
das
hlt
xchg
movsb
pop
adc
jbe
pop
pop
sbb
push
mov
or
popa
sub
ret
adc
cmp
das
pop
mov
loop
rep
dec
hlt
inc
fisubl
fidivrs
fs
mov
jbe
or
test
xor
int
mov
jne
add
sbb
sbb
sub
aaa
pop
xor
xor
fildll
movsb
int3
add
ja
in
jg,pn
repz
cli
enter
adc
shlb
fwait
hlt
mov
or
addl
mov
cwtl
imul
sbb
pushf
lods
xorl
nop
push
jl
cwtl
adc
pop
rorb
xor
xor
fistpll
daa
test
cltd
out
ds
outsl
ds
lods
pop
cmpsb
lahf
sub
add
or
xor
rcll
iret
lock
add
adc
sarb
push
cmpsl
and
mov
and
mov
or
fdivl
xchg
or
lds
ds
push
or
fldt
and
insb
sbb
xchg
and
jmp
or
push
in
shlb
call
jb
pop
mov
or
mov
test
push
mov
pop
sahf
mov
adc
cmp
cltd
mov
mov
mov
repz
mov
jp
movsb
mov
mov
inc
xor
jmp
jmp
dec
xor
divb
repz
push
int
xchg
sbb
bound
divb
mov
sbb
push
movsl
insb
popa
cmp
xor
clc
mov
in
push
jl
push
leave
lret
add
seto
shrl
dec
stc
sbb
mov
push
add
push
push
and
push
iret
sbb
push
ffreep
and
idiv
jnp
xor
or
mov
stos
lock
mov
mov
std
push
adc
mov
insb
lret
push
xchg
jecxz
out
jp
nop
mov
cwtl
pop
pop
loop
mov
mov
ss
hlt
sub
or
mov
imul
mov
dec
fsts
sbb
adc
dec
xorl
sbb
lcall
icebp
jno
adc
or
sarb
or
xor
call
inc
xor
xchg
pop
arpl
testb
mov
aad
sub
test
sub
sub
add
mov
in
xchg
outsl
mov
fcomps
or
inc
lds
xchg
sub
and
push
mov
lods
bound
movsl
push
rol
pop
fsubs
push
cmp
mov
push
push
test
mov
inc
jle
push
scas
aam
sbb
cmp
pop
cmc
add
adc
mov
es
sbb
pop
enter
dec
push
lret
dec
fcmovbe
movsb
fwait
pushf
mov
out
sbb
das
cmc
xchg
add
jns
es
int3
aaa
mov
pop
repz
out
sbb
arpl
ds
sub
movsb
fimull
movsb
push
lock
push
test
mov
push
dec
mulb
in
daa
aam
xor
test
jae
xchg
or
and
or
in
outsb
in
xchg
call
xor
ljmp
cwtl
dec
mov
ljmp
dec
or
cmp
pop
inc
pusha
loop
dec
add
mov
fmul
jns
call
std
out
fwait
inc
mov
ficoml
dec
xchg
cmp
test
test
jp
cli
mov
sub
jne
lea
into
xchg
int3
push
jb
mov
sbb
fldl2t
scas
inc
inc
inc
scas
orb
xchg
inc
or
std
push
mov
fimull
cmp
cmp
pop
ss
mov
push
mov
mov
mov
sub
mov
repnz
lea
push
sub
and
int
mov
mov
out
in
or
and
cmp
in
inc
xchg
pop
xor
and
push
repnz
js
aad
push
push
hlt
int3
es
cmp
aad
dec
pop
stos
dec
mov
arpl
adc
and
jmp
cmc
daa
in
push
inc
cmp
cld
test
scas
cmpsb
mov
std
jae
mov
jecxz
sub
inc
push
add
push
dec
sarl
loopne
test
popa
loope
add
sub
imull
mulb
jmp
daa
add
testb
add
out
into
insl
adc
iret
sbb
fcmovb
leave
cli
mov
pop
popf
jbe
sbb
dec
idivb
std
cmp
adc
dec
push
call
jo
pop
sub
push
lods
loope
mov
imul
inc
add
divl
lods
jl
lcall
mov
mov
jno
lock
xchg
dec
push
in
ja
sub
adc
inc
cmpsl
xor
addr16
mov
sbb
push
mov
mov
popf
push
sub
cmpsb
cmp
cltd
cwtl
into
xor
stc
xchg
inc
popf
pop
subl
push
jecxz
mov
imul
jle
ror
xchg
popf
scas
es
lahf
xchg
push
jo
out
cmp
shlb
jnp
fnstenv
or
push
jge
daa
out
jnp
aaa
mov
bound
pop
pop
mov
sub
mov
imulb
mov
js
jo
push
adc
jo
jbe
push
sbbb
jge
loopne
xor
nop
lea
cli
inc
pop
push
cmp
mov
dec
jge
inc
cli
push
jp
dec
andl
xchg
pusha
adcl
mov
xor
cmpsb
mov
push
adc
aas
popa
xchg
xor
mov
insb
jecxz
pusha
pop
cmpsb
seto
push
test
aad
dec
and
and
std
and
dec
push
mov
mov
xchg
in
rorl
pusha
mov
into
fs
ret
mov
xlat
or
pop
leave
mov
ljmp
incb
call
icebp
dec
jl
lret
cmp
jp
adc
adc
aas
inc
dec
or
mov
pusha
aam
mov
or
mov
ja
lahf
adc
sub
sub
push
sub
inc
dec
xchg
inc
in
push
jecxz
fsubrs
rorb
dec
outsb
push
xlat
jno
mov
es
fbld
popa
pop
jmp
jecxz
jl
mov
and
jmp
popa
push
pop
dec
icebp
fldcw
scas
aam
leave
sub
shll
lret
jmp
mov
movsl
imul
cmp
cmp
push
mov
cwtl
pop
mov
leave
adc
repz
or
fildl
icebp
xchg
mov
je
je
int3
call
xchg
aas
xor
sbb
outsb
mov
or
mov
adc
dec
fwait
fwait
mov
data16
sub
xchg
pop
mov
lods
clc
xor
xor
pop
mov
idivb
jb
pop
xchg
popf
addr16
lret
pop
mov
mov
lods
add
imul
jg
fnsave
sub
std
repz
mov
dec
mov
push
cmp
mov
rcrb
mov
push
sbb
in
fnsave
mov
and
mov
orb
cmp
test
out
dec
loop
scas
lahf
jmp
loopne
xchg
ret
aas
daa
mov
stos
dec
lods
test
pop
inc
xchg
out
sbb
enter
add
lods
mov
sub
mov
or
mov
mov
cmp
jbe
push
in
lret
cmp
xor
js
negl
or
pop
and
adcl
insl
cmp
into
cmp
lahf
in
cmp
dec
into
test
or
test
sbb
xor
rorb
xlat
jno
jb
ja
pop
jne
fbstp
sub
xchg
popf
outsb
jnp
push
lahf
cmp
adc
fsubrl
lret
scas
sbb
xor
scas
or
lret
in
and
in
pusha
aas
fucom
js
in
mov
sbb
cli
into
mov
aas
shll
and
cwtl
xlat
or
add
adc
xor
cwtl
call
das
adc
lahf
adc
std
or
mov
jb
cli
adc
lock
cmpsb
mov
leave
cld
fcmovb
fimull
insl
xor
fcoms
add
test
xchg
sbb
dec
in
xchg
sar
lcall
ret
or
imul
lds
pop
nop
fstps
clc
add
sbb
mov
adc
pop
cmp
add
pushf
jnp
fisttps
outsb
js
loopne
cmp
and
and
or
jno
jnp
js
cli
xchg
jecxz
xchg
pop
hlt
out
mov
fistps
mov
cs
aam
inc
or
ret
cmp
rcrb
or
add
xor
mov
xor
ljmp
cli
and
sbbl
imulb
inc
mov
or
jnp
and
sbb
cmp
add
push
jnp
lds
or
sbb
notb
mov
add
pop
test
push
dec
xchg
mov
add
in
xlat
les
sar
rolb
lock
loop
cmc
adcb
mov
jne
test
sahf
fwait
in
ljmp
mov
or
repz
or
add
ret
xor
cmp
sub
dec
pusha
stos
lahf
cltd
and
push
adc
lods
mov
ljmp
into
and
pop
cmpsl
aad
mov
mov
xchg
loope
add
sub
push
xorl
repz
lods
and
push
xor
jnp
add
outsb
loop
daa
xor
cmc
aam
xor
or
mov
in
mov
sahf
jbe
and
jecxz
stos
or
xchg
ljmp
cmpsl
jge
stc
push
push
jb
movsb
xor
movswl
mov
mov
jl
in
jnp
add
mov
jp
mov
mov
adc
lret
mov
arpl
cwtl
out
repnz
add
dec
loop
pop
icebp
outsb
shrb
idiv
lcall
popf
mov
xchg
aas
in
mov
repz
test
inc
out
ss
and
ss
ret
das
mov
in
push
fcmove
push
pop
push
jp
stos
adc
xor
test
fnstcw
in
std
or
cli
in
fwait
pop
dec
add
dec
jg
ja
aam
scas
sub
call
dec
enter
lahf
jo
inc
aad
ss
sbb
add
shrl
adc
jecxz
jae
inc
sub
mov
lret
pop
and
push
mov
sub
mov
and
test
and
add
rolb
push
mov
flds
rorb
fsts
dec
int3
mov
xor
psubusw
pop
in
hlt
mov
push
into
notb
rol
out
repz
addb
pop
imul
jo
lock
iret
push
mov
std
mov
or
fisubs
outsl
popf
or
xchg
inc
les
lcall
cwtl
test
jg
mov
and
add
sbb
cmp
cltd
dec
repz
cwtl
pop
or
xlat
hlt
or
mov
subb
push
hlt
jae
pop
adc
int3
aam
xchg
mov
mov
lea
ret
rolb
scas
and
sub
mov
jle
cmpsl
popf
nop
roll
xchg
out
jge
mov
pop
les
mov
xchg
xor
add
sbb
test
ret
jp
pop
repz
and
add
imul
mov
das
testl
scas
int
dec
pop
cmp
xchg
inc
aaa
frstor
inc
xlat
and
add
jo
pop
leave
mov
push
cvtdq2ps
mov
popf
scas
and
mov
mov
adc
xor
pop
xchg
fcoms
push
adc
cmp
or
lds
shll
xor
scas
jl
enter
dec
out
loop
into
mov
cltd
icebp
aad
jmp
xor
cmp
faddl
rolb
movntq
add
add
cmpsb
push
inc
jg
sub
mov
ret
les
movhps
dec
push
sub
push
push
ds
sbb
rcrb
into
push
fs
mov
test
ljmp
inc
and
jne
pusha
clc
xchg
inc
dec
aaa
xchg
xchg
jge
pusha
cmpsb
mov
and
ret
aam
mov
push
cmpsb
loope,pn
adc
into
adc
jl
lret
sbb
xor
push
push
push
inc
aaa
clc
push
ret
mov
add
lods
pop
mov
jns
leave
cmp
or
or
rorl
add
aam
inc
into
cld
and
push
push
jnp
push
xlat
jnp
adcl
push
mov
pop
pop
imul
repnz
xor
adc
frstor
pop
inc
incb
ljmp
test
pop
ffreep
in
fisubrs
xor
push
movsl
popa
xchg
jno
push
jg
iret
pop
iret
mov
cli
jecxz
jne
sbb
jp
push
add
in
arpl
lds
jge
mov
jmp
mov
cmp
dec
xchg
das
shll
add
lea
insl
fldl
xchg
das
mov
or
imull
sbb
xor
lret
cmp
adc
cmp
loope
pop
test
mov
add
fcom
hlt
inc
cmp
inc
popa
mov
add
pop
xchg
wrmsr
mov
jb,pt
es
sub
nop
dec
pop
sbb
or
mov
and
iret
pop
aaa
xor
xchg
xchg
push
adc
js
add
arpl
enter
inc
pushf
inc
push
cwtl
fcomps
mov
pusha
cld
push
push
es
sbb
je
or
mov
stos
std
imul
out
sarl
leave
cmpsb
xlat
mov
push
lods
sub
jno
ljmp
repz
lea
insl
mov
das
jge
dec
jb
dec
xchg
fsubl
cmp
sbb
sbb
lret
xchg
dec
sbb
mov
pop
push
pop
repz
add
sarl
test
inc
cmp
jae
leave
dec
and
out
adc
xchg
sub
add
or
fstp
popf
add
ds
adc
mov
and
push
xchg
aas
dec
f2xm1
jg
pop
mov
out
test
test
test
aas
addr16
or
sar
mov
add
fwait
sbb
js
daa
je
inc
fnsave
push
sub
icebp
sub
lret
xor
pop
adc
mov
repnz
sub
xor
test
call
shrl
push
jecxz
mov
dec
enter
mov
repnz
shlb
fldenv
loope
mov
jae
fldenv
xor
lret
adc
sbb
or
lods
sbb
into
cwtl
or
inc
scas
popa
int3
push
xchg
push
jmp
roll
loopne
ljmp
push
xor
mov
test
dec
inc
jmp
xor
nop
mov
int3
pop
scas
add
in
push
adc
push
or
inc
ljmp
xchg
add
pop
xchg
cmp
inc
iret
test
ljmp
inc
sbbb
ss
xor
inc
push
adc
mov
or
mov
add
insb
adc
int
xor
xchg
mov
fcomps
and
cmp
imul
ds
sbb
pushf
je
and
jle
loope
std
adc
ret
test
or
cmp
mov
popf
insb
mov
push
aam
sbb
cmpsb
icebp
test
xchg
xor
lret
xor
jbe
jne
insl
sarb
inc
out
mov
pop
sub
mov
fcomp
xor
sbb
jge
daa
mov
out
clc
es
add
xchg
mov
aas
mov
stos
dec
push
out
xchg
jne
mov
loopne
push
jbe
mov
dec
mov
iret
bnd
ficoml
mov
fmulp
xchg
call
call
bound
loopne
pop
fiaddl
xor
push
aas
pop
xorb
inc
mov
int3
sbb
xchg
lcall
mov
stos
aam
and
pop
mov
pushf
insl
cmp
cmpsl
ja
out
or
xchg
ror
or
ja
xchg
popaw
mov
pushf
sbb
jp
lcall
mov
out
jae
push
test
hlt
ljmp
and
outsl
pop
adcl
scas
xor
cltd
inc
and
mov
cmp
inc
xorb
sbb
ret
mov
mov
loope
lcall
xor
xlat
fistl
lock
pop
outsl
jg
sbb
mov
adc
repz
aaa
mov
fmull
fisubrs
mov
lahf
jg
cli
mov
adc
push
shlb
or
inc
test
ficoml
mul
movsb
loopnew
js
cli
xchg
xor
jecxz
xchg
xchg
icebp
arpl
popf
inc
aaa
mov
lods
pop
mov
es
mov
xchg
inc
cmp
xchg
xchg
fsubp
iret
push
scas
ja
lret
mov
xchg
jb
jbe
sub
dec
in
and
in
xorl
fwait
xor
cs
push
mov
int
push
test
in
xchg
test
xchg
sbb
pop
je
add
inc
test
mov
mov
incb
pop
pop
shl
in
adc
loope
ffree
ret
inc
jb
enter
ret
push
rcll
int
jmp
rol
out
xchg
mov
mov
sub
cltd
das
sti
movsb
dec
xchg
sahf
xchg
in
sub
test
inc
pop
into
outsb
pop
test
or
mov
repnz
stc
scas
popf
sahf
jge
push
pop
loope
jnp
add
pop
add
repz
int3
push
push
fisubrs
push
sbb
jnp
gs
in
pop
pop
add
pop
in
cmp
call
cli
cwtl
pop
cld
js
jmp
dec
add
ja
xor
dec
sarb
cmp
out
clc
push
pop
push
lea
pop
lds
or
push
pop
lret
arpl
mul
pop
or
xchg
pop
xchg
sbb
ret
loop
push
xorl
xor
dec
push
je
inc
or
pop
xor
ds
adc
stos
mov
das
and
loop
or
cmpsb
and
aam
daa
arpl
and
cmpsl
imul
inc
fwait
out
ret
mov
ja
divl
in
in
rcrl
adc
mov
mov
daa
lea
das
jp
call
test
int
enter
xlat
rcl
daa
cmpsb
pop
add
decl
and
cmp
add
test
sub
adc
scas
dec
mov
pop
mov
lods
in
cmp
pop
cs
jo
outsl
fnstsw
add
push
orl
mov
gs
in
adc
lret
jo
ds
sub
or
rolb
mov
aaa
dec
pop
mov
pop
js
xor
aam
out
rolb
scas
das
fcomps
loope
cmp
ret
js
cltd
and
roll
mov
mov
pop
dec
jns
inc
sahf
sub
lahf
mov
iret
fistpl
xor
xor
arpl
sub
mov
mov
push
or
rolb
sti
mov
in
jae
push
cmp
imul
shrb
xchg
and
xchg
mov
ret
dec
mov
mov
mov
pushl
cmp
into
aaa
cwtl
xor
add
and
aam
ret
aaa
sbb
lret
add
dec
cmp
adc
dec
mov
popa
cmp
ja
aam
add
pop
aad
push
js
and
fcomps
xchg
dec
out
inc
jnp
iret
bound
push
bound
fbld
push
push
in
out
cmp
adc
push
inc
leave
mov
addb
aas
je
sbb
lods
fucom
mov
ror
clc
cmp
in
mov
jnp
dec
cmp
idivl
iret
mov
push
dec
fldenv
xor
jo
jo
push
xor
push
int
int3
push
lcall
lods
ret
lret
movq
mov
sub
mov
shll
out
ds
or
add
jno
sbb
xchg
push
pop
in
lea
mov
xchg
addr16
nop
cltd
inc
ja
std
mov
mov
sub
mov
push
ljmp
scas
xchg
mov
imul
mov
xchg
dec
cli
add
bound
inc
les
or
push
nop
je
push
gs
incl
xor
iret
std
cmpsb
das
call
and
adc
movsb
das
loope
mov
jl
xor
cld
test
mov
push
ret
fs
es
lcall
dec
mov
jns
daa
iret
mov
bound
sbbb
jo
inc
movsl
and
sub
movsl
adc
mov
xor
hlt
adc
repnz
sti
pop
mov
out
js
sub
daa
fmul
inc
jno
test
les
cmc
mov
pop
lock
sarl
adc
les
pop
out
jne
add
out
sahf
and
ret
jno
jns
pop
xor
xchg
lahf
aam
ss
imul
or
sbb
fldcw
inc
shrb
decb
cwtl
and
lods
sbb
jecxz
repnz
xchg
lret
add
xor
mov
xacquire
pop
pop
jno
dec
mov
inc
pop
push
es
mov
xchg
push
pop
jle
fdivrs
xor
xlat
je
pop
pop
test
mov
out
xchg
jg
cmp
push
dec
jp
and
outsb
insb
daa
mov
cli
loop
sbb
pop
sbb
ss
xchg
xchg
and
jae
and
pop
and
lret
xlat
lds
rolb
int
jmp
addr16
xchg
ja
addr16
mov
jne
inc
cmpsl
add
and
xor
scas
std
and
push
sub
mov
fsubrp
test
lret
mov
testl
mov
pop
arpl
test
in
notb
setl
xor
icebp
push
push
out
fsubs
mov
sarb
ja
or
mov
loope
cld
lock
test
mov
dec
xchg
jge
idiv
loop
xchg
cmp
fs
lea
cwtl
push
cmp
cmp
and
out
sub
sub
fisubrl
inc
mov
mov
pop
andb
movsl
and
inc
xor
mov
cmp
xor
pusha
adcb
rcrl
aam
popa
push
in
sub
pop
push
bound
and
xlat
jmp
push
int
mov
addr16
push
jmp
popf
cld
adc
mov
hlt
js
fsubrl
xchg
aam
fbstp
xchg
pop
cmp
out
daa
cwtl
mov
mov
fdivrl
imulb
das
iret
fcoml
cli
aam
mov
mov
mov
push
je
fisubs
cltd
push
cmp
test
pop
sbb
or
or
js
jp
or
xchg
mov
jp
pushf
mov
mov
stos
dec
nop
push
jp
lret
push
stos
ret
jl
popf
cli
call
aad
fdivl
cli
sub
xchg
sahf
lret
icebp
inc
pop
push
shlb
dec
shr
rorb
lods
xchg
out
sbb
jns
push
int3
add
movsl
lods
push
pop
adc
sbb
and
stc
xchg
fldenv
sarb
lods
fs
lcall
jecxz
imul
xorl
push
psubq
dec
iret
sti
adc
or
sti
je
loope
inc
adc
jmp
decb
push
and
mov
mov
cmp
mov
xchg
daa
ret
ja
das
in
jmp
mov
test
xor
pop
shll
loopne
ja
xchg
lret
roll
fmull
dec
adc
mov
outsl
in
sbb
ret
inc
dec
push
arpl
leave
pop
movsl
xor
mov
aad
xchg
or
or
fs
add
inc
cs
and
dec
pop
sbbb
call
jb
fcoml
cmp
adc
sbb
aaa
cld
ss
lahf
xchg
data16
mov
clc
cmp
adc
ljmp
inc
hlt
mov
stos
adc
sbb
fisttpl
out
add
dec
lcall
and
mov
mov
lahf
stos
stc
mov
test
sbb
add
jge
shrd
sahf
popf
pusha
cmp
les
outsl
outsl
lock
mov
popa
sub
testb
sarl
pinsrw
push
std
dec
idiv
xchg
stos
inc
dec
movsb
mov
adc
and
call
rcll
imul
int
cmp
ret
mov
lock
cmp
adc
mov
dec
lea
outsb
mov
xor
jns
inc
lea
inc
cmp
xchg
mov
xor
mov
insb
std
add
into
into
scas
iret
dec
xchg
push
cmp
push
mov
arpl
push
adc
push
loopne
imul
loop
push
or
dec
cmp
adc
add
mov
hlt
jne
mov
and
lret
repnz
xor
rorb
arpl
ja
push
insl
xor
xchg
cli
adc
xchg
out
jg
int
xchg
inc
jb
addb
mov
adc
roll
repz
subl
stc
add
fwait
and
mov
in
rcr
sub
test
stc
fwait
sub
push
gs
in
out
xor
imul
xchg
stos
aas
std
lock
xchg
ffreep
popf
lds
mov
pop
pop
test
or
mov
out
mov
and
stos
mov
subl
dec
pop
cwtl
xchg
cmc
inc
cmp
pop
push
push
mov
dec
dec
nop
or
pop
xchg
movsb
rcll
jb
addr16
jno
lret
push
push
push
dec
pusha
lret
push
pop
outsl
pop
xchg
pop
sub
mov
sbb
sbb
cmc
lea
fistpl
out
push
mov
inc
push
sub
add
mov
cmpsb
push
aas
aad
out
mov
cwtl
push
mov
loopne
lods
lret
mov
inc
mov
cmc
cmc
int3
iret
es
js
or
in
xchg
jo
aam
mov
cld
lds
adc
cltd
jno
sarb
xlat
in
les
mov
mov
es
inc
pop
sbb
mov
push
stos
pusha
int3
mov
mov
call
sarb
cs
mov
insb
or
lahf
and
xchg
fstps
je
and
aam
std
loopne
pop
dec
rorl
inc
fnsave
jp
or
scas
dec
adc
dec
cmp
or
xchg
lods
lea
out
repnz
or
test
loopne
sbb
mov
inc
jl
xchg
ljmp
leave
lret
imul
outsl
ja
shlb
repnz
sarl
mov
outsl
js
outsl
xchg
mov
jb
outsb
and
push
cmc
outsl
xchg
pop
mov
xorl
jae
insb
xor
jb
xlat
mov
leave
jecxz
std
inc
insb
scas
out
pop
repz
xchg
es
jge
add
or
lock
repz
in
mov
jnp
cmpl
inc
sbb
enter
mov
dec
pop
jg
ret
out
sahf
insl
in
inc
sub
aam
out
clc
mov
fdiv
int
push
sub
mov
sub
in
mov
jle
je
mov
mov
inc
jle
xchg
int
negl
repnz
filds
stos
sbb
adc
insl
add
orl
or
adc
movsl
fmuls
es
ret
popl
ss
insl
pop
nop
mov
movsb
stc
mov
outsl
mov
insl
mov
pop
test
jns
je
xchg
inc
adc
xor
xchg
sti
repz
int3
imul
stc
ftst
cs
sub
push
mov
pusha
pop
popf
and
add
cs
repnz
push
shlb
push
pop
scas
jne
xor
dec
xor
cmp
xchg
pusha
sub
mov
adc
cmp
andb
out
cli
mov
sub
mov
lock
xlat
sub
loope
jae
sbb
fdivr
pushl
dec
dec
cmp
mov
or
and
test
dec
les
mov
ficompl
lret
xlat
cmpsl
pop
jns
test
shll
adc
int
insb
or
cmp
inc
fldt
arpl
roll
cmpsl
popa
enter
dec
pop
mov
pop
lahf
pusha
stos
sub
dec
les
jle
inc
dec
in
orb
xlat
lock
xchg
sub
inc
dec
mov
dec
aam
sbb
sub
pop
fwait
or
push
pop
loope
pushf
push
ja
jo
mov
or
mov
push
push
pushf
add
xor
xor
int3
dec
sbb
or
test
pop
adc
add
inc
sbb
insl
fwait
sub
xchg
cld
jno
push
push
js
scas
mov
call
addb
cmpsl
jnp
pop
aad
push
push
jnp
movsb
adcb
mov
inc
out
js
mov
sbb
loop
loopne
gs
dec
xor
xchg
pop
aam
push
das
or
ud0
cs
push
cltd
jo
stos
lods
bound
test
imul
push
push
clc
dec
lea
roll
lcall
mov
cmp
dec
xorl
daa
out
dec
enter
sbb
mov
sub
test
or
shlb
jmp
jecxz
inc
je
ljmp
pop
in
cmp
dec
in
xorb
pop
xor
hlt
push
nop
outsl
sub
mov
adc
adc
scas
dec
xchg
lahf
cmp
scas
xor
fstpl
xchg
adc
cmc
cmc
arpl
out
stos
and
lcall
shlb
mov
pop
xor
test
mov
stos
push
mov
dec
test
jnp
xchg
loopne
cmpsl
incb
in
iret
sahf
addr16
push
repz
jp
js
cwtl
and
cmp
inc
push
adc
clc
lcallw
ret
adc
pop
inc
lcall
out
xchg
mov
fidivrs
jns
push
mov
push
cs
xchg
inc
shrb
je
cli
repnz
into
dec
leave
ja
xorl
mov
faddl
popf
aas
cmp
xchg
rorb
shlb
xor
mov
fildll
scas
xor
lock
sbb
jne
imul
sar
sub
ret
shlb
out
mov
cld
stos
enter
pop
or
pop
and
inc
sbb
insb
adc
stos
add
imul
xchg
xchg
pushw
ret
ss
dec
xor
fistpll
jbe
cmc
call
imul
push
cmp
xlat
aad
mov
mov
mov
sti
and
xchg
insl
in
enter
xchg
xchg
pop
mov
test
push
in
repz
push
jns
outsl
mov
in
adc
leave
aas
mov
in
cmc
jbe
mov
push
out
xchg
scas
sub
and
lcall
mov
insl
fcompl
mull
cmc
decl
popa
call
mov
xchg
jle
ja
mov
pop
les
mov
sbb
and
rcrb
hlt
ficompl
jecxz
cmp
jnp
xchg
test
sub
out
jno
jge
std
addr16
lods
imul
sbb
push
cmp
int
test
out
std
icebp
jb
push
js
fimuls
and
clc
loope
je
icebp
and
scas
ljmp
negb
mov
out
stos
xchg
sbb
aad
enter
mov
lret
dec
mov
jp
dec
aaa
xchg
fsts
dec
sarl
jmp
push
test
into
shl
adc
lods
insl
popa
lods
mov
loopne
cmp
push
pop
sti
fisubs
pop
test
sbb
dec
loope
mov
add
in
or
pop
dec
dec
sbb
out
cmp
fcmovnb
inc
daa
and
mov
and
push
movsb
push
mov
pop
inc
push
addb
call
testb
decl
rorb
fisubs
mov
inc
jnp
push
push
jno
rolb
repnz
and
mov
xchg
sti
decb
pop
mov
pop
jecxz
and
scas
xor
lods
rorl
cwtl
xchg
adc
push
jns
out
iret
mov
jle
push
popf
mov
adc
aaa
lds
pop
push
xor
mov
push
outsl
ljmp
mov
sbb
insl
sbb
push
sub
jl
or
xlat
mov
add
fisttpl
fsubrs
into
xor
leave
cmp
inc
fcomip
inc
and
out
cli
out
in
mov
mov
or
mov
push
mov
decl
pop
mov
stos
ss
mov
or
xchg
imul
mov
xor
out
cmp
popa
or
mov
loopne
fiaddl
leave
lret
pop
lds
test
xchg
in
or
insb
lret
stc
jne
sbb
inc
push
push
mov
mov
xchg
ret
dec
mov
aam
pop
daa
xor
pop
repz
pop
sahf
pop
lahf
shrb
sbb
push
mov
mov
xchg
pop
nop
dec
cmp
pushf
dec
idivb
fbld
and
pop
in
in
cmp
icebp
andl
push
sbb
cmpsl
out
inc
js
xchg
push
xchg
orl
cmp
jge
mov
movsb
lods
rcr
mov
sbb
fwait
rorb
lret
xor
xchg
adc
dec
pop
je
pusha
int
xchg
push
mov
ret
and
pop
outsl
sub
and
sbb
jae
je
and
mov
push
aad
jb
imul
cld
sbb
adc
push
sbb
sbb
xor
dec
inc
jge
pusha
lahf
dec
flds
outsb
adc
fmuls
cmp
das
mov
std
and
pushl
xchg
cmc
cmp
inc
movsl
jne
arpl
cli
lods
jno
lds
inc
push
cmp
jle
add
bound
mov
cmp
mov
or
adc
xor
and
popf
into
mov
xchg
stc
mov
mov
jmp
imul
push
sub
sbb
mov
mov
cwtl
or
mov
aaa
dec
jle
dec
dec
repz
push
adc
mov
or
push
adc
adc
pop
push
jb
lcall
dec
mov
push
std
cmp
xrelease
in
es
enter
es
adc
pcmpgtd
jmp
out
and
idivl
mov
aam
insl
in
lock
lcall
psadbw
call
push
and
sbb
inc
ret
inc
inc
pop
jne
out
jg
cmp
je
xchg
call
sbb
push
call
dec
mov
dec
xlat
inc
mov
outsb
push
jbe
fsubr
out
repnz
pop
lods
and
ret
adc
in
dec
mov
loope
xchg
lods
test
les
into
movsl
sbb
mov
push
aaa
aad
dec
in
cmpsl
push
mov
sahf
popf
inc
adc
mov
dec
jbe
xor
popa
nop
xor
sub
shll
mov
rol
push
icebp
test
out
mov
push
xchg
jno
sahf
das
add
in
cmpsl
fstpt
movsb
mov
pop
pop
lods
rcll
mov
aam
fsubrl
pushw
sub
test
jno
sbb
jle
jae
jb
push
push
adc
cmc
aam
push
mov
mov
adc
push
mov
mov
xor
xchg
aam
cmp
dec
popf
inc
add
ret
cmp
bsf
shl
inc
fisubs
pop
add
bound
mov
test
and
imul
xchg
adc
mov
push
sbb
insl
lods
mov
arpl
inc
pop
xchg
popa
push
xchg
lcall
pop
push
adc
aaa
jecxz
pusha
pop
xor
adc
jae
xchg
xorb
xor
and
xchg
scas
jnp
rcr
xchg
adc
jnp
test
sub
jns
dec
aad
in
lods
pmaxub
push
cmp
pop
mov
and
mov
jg
shll
mov
jne
leave
loop
enter
dec
xchg
dec
aad
and
test
in
jo
mov
push
shlb
repz
cli
jg
inc
ror
dec
cmpsb
test
jbe
out
sub
aam
pop
adc
mov
call
out
stc
fnstenv
fildll
fs
fldt
loopw
sbb
aam
pop
cmc
out
push
mov
gs
adcb
inc
insl
mov
fimull
jp
imul
pop
cmp
stc
jmp
mov
xchg
inc
testb
and
ljmp
ficompl
xor
fsubs
aad
push
xchg
and
fstpt
pop
iret
gs
jp
mov
shll
or
int3
jne
xchg
jo
mov
push
les
enter
jp
or
das
jecxz
push
add
xchg
popa
out
lret
ret
sub
jne
inc
mov
or
sub
xchg
int3
test
push
sbb
mov
jp
sbb
dec
xlat
jp
push
mov
hlt
jge
push
pop
aam
and
stos
push
sahf
dec
cmp
mov
add
sbb
or
jno
xor
dec
cmc
rcr
in
les
in
adc
and
pusha
dec
jg
inc
mov
sbb
daa
jnp
sti
pop
roll
sub
fidivrl
and
cmp
test
cmp
inc
imul
cmp
repz
stc
xchg
mov
int
decb
mov
daa
and
fdivrs
xor
test
push
xor
push
sub
divl
jb
mov
sbb
dec
lock
popf
test
sbb
jne
mov
cmc
jecxz
imul
mov
test
and
mov
adc
xor
mov
jne
push
fstpt
mov
or
movsl
sti
push
in
bound
js
mov
mov
mov
pop
je
dec
jle
jnp
cs
fisttpl
jae
push
and
pop
push
andl
inc
mov
js
ret
and
pop
xchg
jae
test
cmp
jg
jno
test
cmpsb
lret
xchg
and
aaa
xlat
sub
cs
orl
lcall
inc
lcall
mov
lahf
pop
push
xor
fmull
dec
dec
jle
jne
xchg
popa
aas
xor
sbb
rclb
out
fwait
mov
push
xorb
ljmp
out
inc
push
mov
xchg
xor
xorb
fidivs
xor
xchg
mov
mov
push
je
or
outsl
icebp
pop
in
sub
pop
outsl
repz
jae
mov
push
dec
rolb
mov
les
mov
mov
inc
lods
pop
test
lret
inc
xor
push
add
test
dec
push
lods
imul
xchg
push
loope
popf
cli
adc
jg
rclb
pop
sub
and
jp
cwtl
push
leave
arpl
leave
inc
mov
push
pop
xlat
inc
jmp
jbe
adc
add
pop
outsb
je
dec
adc
inc
popf
rorb
cmpsb
insb
in
std
cs
clc
js
out
sub
or
cmp
adc
or
pop
rcl
gs
out
mov
fdivp
leave
iret
lods
faddl
and
cmp
clc
dec
ficomps
loop
pusha
sbb
mov
data16
or
jns
mov
and
pop
xchg
in
adcb
inc
fsts
sti
inc
imul
repnz
arpl
cmpsl
pop
sub
inc
jbe
lret
jo
xchg
fwait
push
int3
out
es
cmpl
sub
or
or
out
xchg
ds
push
jle
pop
mov
xchg
clc
push
out
mov
xchg
mov
sti
rcr
out
movsl
mov
push
test
shll
shrl
fnstenv
xor
pushf
jmp
jbe
push
xchg
pop
jae
sub
pop
adc
push
test
adcb
mov
or
addr16
into
jb
call
jmp
xchg
pop
dec
xor
mov
sub
stos
cmp
mov
pop
xchg
pop
sub
xchg
dec
cmpl
aam
dec
sub
sarb
sbb
inc
adc
sub
ss
mov
into
dec
out
ficoml
pop
popa
add
xchg
sbb
cs
jbe
pop
scas
mov
mov
clc
in
int
loope
jne
lret
ret
and
ss
dec
mov
loope
loope
cmp
push
pop
xchg
into
jne
push
inc
stc
loope
jmp
movsl
adc
push
icebp
xchg
bound
push
loop
xchg
push
cmc
call
imul
mov
xchg
sbb
pop
cmp
pop
jno
mov
lods
mov
mov
fidivs
rcr
imul
mov
jo
pop
out
nop
inc
jmp
pop
jnp
dec
and
hlt
xchg
jg
jns
sbb
adc
jne
jnp
jge
fucomip
xor
data16
jl
lods
lods
lds
xchg
inc
push
in
and
sbb
add
imul
cmp
std
lods
pop
fs
sub
adc
mov
cmp
clc
test
mov
arpl
push
mov
xor
cmp
ljmp
and
xchg
int3
mov
sbb
add
scas
sarb
stos
mov
fcompl
pop
pop
in
jnp
fildll
and
push
loope
pop
pop
loop
sbb
push
mov
lahf
imul
push
test
or
cmp
cmp
clc
pop
sub
push
mov
hlt
cmpsb
test
test
mov
pop
daa
pop
dec
ds
xchg
xchg
imull
adc
imul
pushf
mov
pop
lods
loopne
or
sbb
bound
push
ror
mull
loope
jg
jle
cld
sub
daa
aad
xor
push
pop
mov
sbb
ret
fldcw
or
cmpsb
cmpsl
mov
xor
repnz
decb
jno
jecxz
xlat
jle
fcmovnu
jne
negb
stos
outsb
xlat
leave
pop
xchg
pop
add
pop
mov
mov
fstps
les
test
or
dec
dec
lret
push
jno
push
repz
imul
movsl
repnz
inc
push
faddl
inc
dec
pop
jg
hlt
movsl
stc
dec
jp
mov
add
push
mov
adc
mov
inc
mov
or
je
sub
push
jg
test
and
jno
fwait
jp
stc
lret
fnsave
add
scas
or
or
jp
add
sahf
pop
xor
in
pop
xor
inc
sub
and
or
xor
lahf
jmp
add
mov
add
imul
out
xor
pop
cmpsl
inc
fs
int
and
mov
pop
shrl
in
sub
or
mov
pop
test
dec
shll
jb
add
leave
cmpsb
jb
mov
loop
enter
divb
dec
add
aas
pop
mov
cmp
daa
sbb
fidivs
dec
int
lahf
push
shl
or
cmp
imul
jno
int3
enter
fcomip
stc
fidivl
fcomi
std
sbb
test
imul
cld
andb
and
add
fildl
pop
pop
leave
xor
push
enter
jb
outsl
test
and
lods
mov
int3
xchg
shr
jp
sbbb
mov
xchg
dec
dec
idiv
push
negl
inc
push
mov
jg
pop
pop
stos
fcmovbe
sahf
or
jb
dec
sub
fwait
les
adcb
mov
pop
add
dec
add
mov
call
test
loop
out
xchg
sub
rcl
leave
lahf
enter
cld
mov
adc
sub
mov
iret
xchg
shlb
mov
insl
jns
inc
xor
jnp,pn
cli
into
and
test
sbb
jmp
cmp
fadds
mov
outsl
sbb
aaa
mov
adc
cmc
loop
ret
sub
jl
pushf
push
into
jae
sahf
fs
stos
out
insb
xchg
mov
out
jg
decb
testl
gs
inc
clc
dec
fs
xlat
int3
jmp
faddp
scas
xorb
scas
mov
xchg
jnp
mov
fwait
imulb
sahf
std
js
cs
xor
push
data16
enter
inc
dec
cmp
xor
xchg
and
adc
lret
jne
lahf
das
int
incb
or
pop
arpl
ds
adc
push
andl
cmpsb
mov
add
adc
pop
sbb
xor
arpl
int3
xor
jp
jae
xchg
pop
pop
push
cwtl
jg
cld
cwtl
stos
insb
add
xchg
sahf
sbb
out
and
jno
lea
and
cs
xchg
dec
out
into
lea
push
xchg
fldcw
inc
and
sub
sbb
inc
xchg
pop
jb
pop
popa
adc
and
and
mov
mov
arpl
inc
mov
in
aam
push
pop
pop
mov
nop
xor
ret
nop
movsb
push
jge
fsubl
call
mov
xor
pop
mov
inc
mov
sbb
mov
std
lds
mov
mov
cmp
sub
fsub
das
sarl
inc
out
mov
cmp
icebp
repz
out
aaa
sub
jg
rcrl
push
dec
jns
xor
out
mov
dec
in
or
orb
sub
inc
jnp
insb
stc
or
mov
pop
outsl
or
cltd
add
and
cmp
int3
leave
mov
and
cmp
cmpsl
mov
rorb
jl
adc
mov
cmp
jno
aad
dec
call
daa
loope
insl
push
mov
cli
shrl
mov
and
loop
adc
xchg
mov
test
add
sbb
or
xchg
pop
xchg
shll
mov
inc
cmpsl
xchg
pop
inc
lds
or
mov
out
mov
jae
sbb
or
sub
aas
sbb
or
mov
push
sub
gs
push
jl
mov
aaa
ss
push
push
neg
cmp
adc
loope
mov
xchg
push
cmpsl
push
leave
scas
imulb
les
jg
stos
into
push
and
push
cmp
mov
pop
pop
mov
lret
and
add
mov
mov
stos
push
mov
jbe
es
xchg
shrl
add
jbe
adc
mov
mov
jne
inc
sahf
and
hlt
push
mov
dec
ds
in
sbb
es
outsl
data16
mov
cmp
and
mov
mov
add
inc
js
add
gs
push
int3
insl
xchg
pop
rolb
and
sbb
cmpsb
cs
mov
in
cmpsb
or
icebp
sbb
jg
fs
cli
adc
lock
jbe
stos
stos
sub
jp
xor
adc
mov
sub
mov
std
push
pop
outsl
xlat
out
adc
insl
outsb
mov
aam
jge
aas
std
inc
lods
mov
loopne
mov
jg,pn
in
enter
test
rcrb
ja
imulb
fldz
scas
je
push
inc
adc
cli
dec
mov
in
push
fcompl
mov
insb
les
and
or
cltd
jo
pusha
jmp
loope
cld
subb
adc
fidivrs
in
das
jge
inc
xchg
jb
and
pop
out
jae
sub
lock
xchg
pop
data16
sbb
stos
mov
fidivrl
mov
mov
add
aam
and
adc
or
stc
xchg
xchg
ljmp
shrl
out
adc
jne
push
mov
pop
dec
cmp
nop
sbb
or
loop
bnd
mov
lcall
cmc
push
std
xlat
dec
or
clc
add
fnstsw
pop
inc
and
pop
push
cld
mov
mov
and
jno
lds
out
sub
cli
loope
sbb
fimull
mov
sbb
ja
inc
popf
dec
push
cmp
dec
pop
out
sbb
jnp
dec
mov
outsb
dec
subb
jae
ljmp
rcrl
mov
push
add
stos
std
push
xchg
cwtl
jge
pop
jne
cmp
test
cmpsb
sbb
jg
mov
pop
xchg
pushf
sub
push
daa
cmpsl
imul
daa
cmp
jno
les
push
pop
xor
xchg
cmp
push
dec
and
test
shrl
arpl
sarl
or
popw
dec
jns
pushf
sbb
pop
push
nop
leave
sbb
sub
push
scas
sti
xchg
cmp
scas
sbb
loopne
xchg
jb
aam
mov
ficoms
adc
inc
std
mov
fsub
sub
adc
push
dec
inc
add
and
pop
and
scas
xchg
loopne
mov
lret
das
jnp
mov
outsb
dec
lods
dec
push
rdseed
neg
lcall
jno
decb
cmp
xchg
fisubs
ss
out
das
adc
jbe
cmp
mov
mov
aas
mov
push
cmp
sub
rorl
stos
std
or
push
iret
jo
xor
lahf
jle
jl
cmp
mov
test
sbb
jg
inc
sub
add
mov
and
hlt
mov
inc
inc
jo
adc
xor
xorl
les
xchg
add
jo
push
ds
out
int
dec
loop
cld
daa
outsl
cmp
jo
out
pop
lcall
fldt
into
shlb
mov
jbe
popf
rcll
mov
ficoml
mov
mov
scas
test
mov
sbb
sbb
lret
cs
push
stos
dec
call
adcl
cmpsl
cmpl
lods
add
cltd
xchg
inc
xchg
add
sahf
push
sbb
stc
or
dec
rorl
cld
push
or
sub
add
adc
leave
cmpb
pop
out
rolb
sti
mov
pop
dec
outsl
ret
mov
pop
inc
gs
push
adc
int3
cmpb
inc
addr16
mov
mov
loope
and
mov
sahf
das
pop
cmp
xchg
loope
mov
adc
cmp
cltd
jns
inc
pusha
clc
sahf
cld
adc
push
std
cmc
insl
inc
adc
pop
adcb
test
or
mov
popa
and
jns
or
cld
cmp
das
xchg
push
daa
inc
and
fcoml
adc
xchg
imul
lods
push
cs
popf
pinsrw
adc
mov
xchg
ret
ror
lods
add
add
mov
test
ja
add
cs
in
popf
add
enter
jns
aaa
ds
stos
and
mov
cs
lret
jmp
xor
pop
inc
fs
mulb
mov
mov
dec
mov
scas
insb
arpl
out
aad
frstor
push
imul
lret
pop
pop
mov
xchg
inc
sub
outsb
shrl
into
lret
jge
adcl
mov
iret
jmp
ja
or
cwtl
cmp
pusha
ror
jl
arpl
repnz
aam
mov
and
lret
jecxz
sub
sbb
cmpsl
cmpsb
scas
jge
test
imul
or
fldt
in
inc
mov
cmp
mov
add
cmpsl
or
xor
popf
push
iret
dec
cld
daa
ret
test
mov
aaa
cmpb
add
mov
dec
int3
push
cmc
sarl
outsl
outsl
mov
rorb
xlat
ja
mov
pop
pop
lea
cmpb
push
xor
mov
js
imul
xchg
jb
aaa
cmp
xchg
fldt
lea
out
sbb
add
insl
xchg
enter
mov
add
lods
test
scas
in
push
ficompl
xchg
out
cmp
nop
adc
inc
shl
mov
mov
add
mov
dec
push
sbb
adc
pop
enter
cmp
mov
aad
shl
imul
nop
mov
mov
push
inc
push
movl
iret
push
into
negb
mov
and
inc
aaa
adc
movl
adc
dec
pushf
and
mov
leave
ljmp
push
cmp
sarl
imul
cli
inc
shr
rorl
xor
xor
nop
mov
jae
cmc
mov
shlb
movb
in
xor
out
out
add
push
es
shll
imul
test
scas
jmp
popf
xchg
pop
nop
gs
adc
and
lcall
stc
int3
inc
inc
push
xor
sbb
sub
or
in
mov
mov
int
jmp
cmpsl
dec
or
movsl
mov
cmpsb
mov
dec
out
je
jno
xchg
pop
jge
push
out
cli
outsb
or
pop
iret
leave
or
cmpl
xchg
push
ds
jmp
out
inc
push
dec
call
mov
popa
lahf
xchg
mov
or
test
sub
xchg
pop
dec
pop
hlt
punpckhwd
aad
xchg
outsb
xor
stos
shll
dec
sub
or
in
pop
sub
jb
dec
sub
dec
ja
movsb
dec
push
adc
out
push
repz
add
scas
pop
xchg
add
cmp
sub
add
mov
push
bound
dec
pop
xchg
mov
push
imul
or
fbstp
push
and
je
push
lods
mov
fs
jle
jb
mov
test
fisttpll
out
lods
inc
ja
or
mov
out
lcall
les
ret
outsl
icebp
adc
cs
pop
cmp
loope
dec
pushf
and
pop
push
ja
arpl
jg
mov
sub
outsl
lock
aas
push
fwait
sahf
addr16
mov
mov
push
popa
cwtl
mov
cmp
hlt
jo
rclb
sbb
arpl
jnp
fisubs
fistps
loopne
sti
jb
imul
sbb
push
inc
pusha
cli
push
ss
nop
push
sar
testb
lea
xlat
push
push
jmp
xchg
das
xchg
sub
daa
mov
mov
shl
push
or
shrb
push
daa
mov
cwtl
aas
out
mov
insb
sbbb
mov
loope
jbe
imul
or
and
cld
ror
mov
inc
cmpl
push
bound
bound
ret
mov
cmp
cmpl
or
lds
dec
and
out
jo
movsl
test
out
or
dec
addr16
or
mov
mov
dec
mov
adc
mov
in
jns
mov
pusha
repz
xchg
cwtl
xor
push
movsb
and
call
sub
notrack
leave
fidivrl
aad
mov
add
jp
outsb
jmp
push
push
xor
outsl
icebp
cwtl
pop
xchg
cwtl
inc
xor
mov
sbb
cmpsl
jp
mov
sub
loope
mov
lcall
repnz
push
test
sub
push
addr16
mov
mov
dec
xor
lds
dec
and
xchg
aaa
insb
and
leave
mov
pop
pushf
jmp
adc
dec
fsts
cmp
adc
xchg
xchg
aas
lds
insl
push
dec
into
scas
outsl
pop
push
sbb
jne
and
pop
mov
or
mov
aad
clc
sub
jnp
jne
jns
pop
ljmp
xor
and
lods
cwtl
sarl
fcomp
mov
mov
roll
jge
and
dec
and
jl
dec
push
jecxz
stos
add
out
adc
cmpsl
jmp
xor
xchg
push
stc
les
es
adc
dec
aaa
add
roll
adc
pop
das
fsubr
mov
push
dec
fs
fbld
cmp
inc
or
mov
mov
inc
stc
push
rcrb
int3
mov
inc
popf
jge
test
inc
lcall
push
sahf
lds
cmp
and
mov
jns
aam
shlb
inc
xor
or
fs
mov
push
xchg
rolb
negl
adc
sti
mov
imul
xchg
cmp
jno
pop
jle
popf
jmp
nop
test
push
mov
lret
pop
out
xlat
ret
hlt
cmp
pop
nop
fmull
or
into
das
int3
mov
jno
xchg
pusha
xor
mov
xor
push
pop
cmpl
xchg
push
lret
jg
and
gs
sub
pop
inc
mov
push
mov
scas
jge
sub
push
lods
jne
add
mov
inc
adc
out
into
mov
test
push
jns
mov
adc
xor
cmp
enter
and
jle
jp
add
pop
adc
icebp
sub
scas
sub
or
dec
daa
sub
loopne
sbb
clc
pop
xchg
rep
mov
iret
pop
jecxz
adc
out
cs
dec
add
dec
push
pop
scas
int
cltd
mov
test
jp
out
out
outsb
scas
pop
cmp
jecxz
or
pop
and
push
movsb
push
fisttps
mov
mov
cmpsb
cmpsl
icebp
adc
or
and
fnsave
mov
jmp
and
mov
test
xchg
push
cmp
test
mov
shl
movsb
mov
shl
aaa
lock
add
test
mov
sub
loopne
sub
cld
sub
cltd
in
jns
jns
xchg
mov
pop
and
add
sub
add
rcll
pop
inc
popf
xor
loop
aaa
mov
hlt
push
xor
jle
mov
call
cltd
sub
fwait
xchg
lret
mov
mov
xchg
rorl
xchg
aam
mov
sub
pop
int
jno
cmpl
pop
ss
rolb
inc
pop
xchg
daa
aaa
sbb
cmpl
mov
jp
repz
jno
ret
inc
xor
add
in
sbbl
mov
mov
dec
mov
repz
mov
jmp
add
adcl
inc
lods
jl
stc
sub
adc
mov
add
adc
push
lret
push
mov
mov
add
ficoms
rcrl
ja
rclb
out
ret
je
fs
inc
mov
xchg
sub
sbb
movsb
dec
stc
lahf
xor
lea
frstor
xchg
mov
das
or
dec
xchg
push
movsb
mov
mov
loop
dec
movsl
sbb
inc
or
pusha
jp
jno
xchg
lcall
sbb
mov
dec
sub
loopne
insb
add
xor
push
in
push
sub
out
jge
fadds
mov
adc
jecxz
jg
hlt
mov
aaa
into
daa
incl
dec
ja
or
mov
mov
add
daa
movsl
sub
xchg
movsb
add
loopne
sub
addr16
sbb
stos
xchg
fdiv
hlt
dec
iret
inc
jb
xchg
insl
stc
jge
add
jle
in
shl
cmp
sbb
sbb
fwait
cmp
push
cmpsb
sub
imul
sti
int3
stos
or
shll
add
mov
jmp
enter
je
les
adc
lcall
or
adc
sbb
mov
jno
cmp
jg
adc
add
mov
sbb
pop
out
fbstp
stc
sub
and
xchg
push
std
xchg
xchg
daa
dec
jl
arpl
test
push
mov
out
mov
dec
xchg
shrl
mov
stc
jo
mov
sti
in
adc
repnz
fs
scas
inc
jg
nop
xchg
loopne
mov
xchg
fldcw
adc
inc
addb
std
sub
lds
mov
inc
push
push
sub
ds
sub
icebp
vshufi32x4
push
divl
cmp
cmpl
jnp
gs
lock
stos
or
lcall
push
aad
sub
push
xchg
push
adc
fs
mov
cltd
fisubrs
icebp
scas
imul
mov
leave
clc
lret
pop
sub
cltd
jno
jne
xor
adc
jnp
repnz
in
in
cltd
mov
xchg
enter
xor
call
dec
add
cld
xor
cmp
sub
les
pop
in
xchg
aad
hlt
into
cmp
add
cmp
icebp
test
mov
mov
dec
repnz
sbb
or
imul
inc
cmp
pop
mov
rorb
sahf
out
lahf
test
popa
nop
out
or
mov
cmp
jle
std
pop
xchg
pop
pop
outsb
xor
add
add
cli
add
pushf
aad
fildll
mov
out
mov
aam
testb
sub
notb
pop
pop
nop
dec
js
notl
out
pop
sub
xchg
pop
mov
xchg
sbb
adc
adc
mov
mov
push
xor
push
dec
cli
jne
xchg
dec
or
stos
xchg
xchg
js
mov
js
imul
aad
out
pop
lahf
shl
mov
in
pavgw
movsl
rcrl
cltd
insl
ficomps
jmp
add
push
ret
rcll
jmp
or
dec
out
mov
andb
std
inc
into
adc
push
mov
dec
outsl
imul
into
or
out
and
and
fnstcw
or
testl
lcall
insb
xchg
loop
movsl
push
std
cld
imul
or
shrb
xchg
cmpb
cmc
and
jge
out
pop
inc
push
add
aas
xor
lock
out
out
inc
jne
jg
push
pop
mul
in
xchg
push
stos
shlb
sbb
lods
pop
mov
jno
add
pop
pop
fst
xor
or
fldl
test
sbb
push
dec
sbb
cli
mov
xchg
repnz
dec
mov
adc
ret
popa
mov
dec
and
loope
lret
ret
in
js
neg
je
xlat
sbbl
iret
loope
into
add
mov
and
adc
ss
jb
and
xor
mov
ss
push
sbb
jb
mov
mov
lods
into
arpl
sub
inc
imul
cmp
pop
adc
aas
xchg
cmpl
test
pop
cmp
pop
jae
ret
mov
lds
sub
mov
jecxz
jno
cld
inc
pop
daa
dec
dec
cmpsl
mov
inc
loop
movsl
aad
mov
repz
add
or
mov
pop
inc
sbb
rcrb
push
movsl
mov
cmpsl
adc
jle
xchg
mov
popa
shll
loope
mov
sub
aam
pop
push
mov
cmpsl
sbb
xor
pop
adc
mov
adc
cmc
mov
lds
adc
cmp
sahf
jns
inc
jg
cmp
push
or
mov
lods
mov
inc
push
lods
mov
xchg
inc
jg
outsl
pop
sbb
stc
add
scas
mov
push
insl
call
and
repz
shlb
and
cwtl
aam
jnp
dec
and
fisubrs
sub
cli
jmp
add
jge
adc
out
fucomip
fs
sub
or
sahf
ja
cmpsl
imul
mov
enter
mov
in
int
and
repnz
sub
adc
sbb
adc
cmp
xchg
or
shr
push
bound
scas
cli
aam
fnstsw
or
bound
mov
inc
add
push
dec
jmp
stos
pop
aad
mov
into
inc
xor
push
sar
cmp
fdivs
aam
lods
les
sub
dec
jnp
sarb
xor
inc
stc
ljmp
push
xlat
add
pop
pop
jae
mov
and
ror
sbb
inc
lods
sbb
pushf
cmp
in
mov
pop
jmp
sbb
fidivl
test
das
scas
mov
push
test
lret
push
xor
mov
fldt
repnz
enter
stos
cmpsl
push
and
mov
pop
cmpsl
test
ja
cltd
repnz
sbbl
cmp
and
cli
pop
mov
and
imulb
pop
dec
cmp
jmp
fsubrp
in
aaa
imul
jmp
andb
shll
arpl
jle
jg
adc
test
inc
iret
fs
jl
xchg
jmp
mov
and
inc
in
jle
mov
fadds
fwait
outsb
in
push
jmp
xchg
outsb
xchg
les
out
sub
mov
ret
lea
fistps
pop
out
or
jle
push
rcl
andb
std
xchg
mov
movsl
dec
or
nop
xlat
leave
or
add
adc
jno
pop
lret
xchg
mov
dec
int
sbb
icebp
fcmovnb
xchg
sub
pushf
out
jle
jg
mov
push
xchg
cli
and
ret
cmpsb
call
sub
dec
jmp
jl
or
push
ret
rcll
pop
ret
cwtl
xchg
movsb
xchg
push
xorl
cmpsb
sbb
test
ret
les
mov
fldenv
mov
sbb
pop
mov
lods
data16
xchg
int3
sbb
mov
aad
das
int
je
sub
movsl
aad
dec
int
xor
jnp
rolb
fwait
popa
mov
std
cmp
add
mov
xor
cmovns
mov
mov
pop
cmp
insl
inc
ljmp
mov
cmp
in
mov
fsubs
fs
lods
dec
cmpsb
imul
push
xor
push
push
jno
push
fs
inc
bound
mov
out
test
js
pop
xor
fisttpl
jo
aas
adc
and
mov
fwait
push
addb
out
pop
ret
sub
out
les
rcr
cmp
shr
xchg
xor
stos
mov
xchg
fwait
repnz
dec
mov
pop
xchg
js
es
into
rol
imul
and
mov
clc
sub
pop
js
mov
inc
jnp
sbb
mov
out
lcall
xor
iret
ss
loope
cmpsl
pop
push
rcl
push
sub
pop
lods
scas
xor
xor
mov
and
ds
movsl
fisubs
inc
or
xchg
xor
dec
loope
int3
flds
fnstsw
scas
scas
dec
cltd
fnsave
test
outsl
js
xchg
fldenv
jg
pop
jbe
fdivrl
or
inc
imul
gs
xlat
mov
pushf
repz
xor
aad
jl
aas
xchg
adc
mov
sbb
or
imul
sub
lcall
test
mov
test
inc
xchg
adc
pop
adc
orb
lods
fmulp
pop
xchg
sahf
pop
mov
mov
and
adc
or
rclb
lods
adc
or
ljmp
jo
dec
stos
sub
ss
in
xchg
pop
cltd
mov
sti
sti
jno
jne
xchg
mov
aam
fnstsw
jb
or
aam
bnd
out
lock
ljmp
cmp
fldt
cmp
xchg
movsl
add
pop
push
out
xchg
push
outsb
lods
mov
test
add
outsl
stos
int
stos
cmp
mov
or
inc
mov
dec
divb
test
mov
xchg
or
sbb
sarb
int
lods
stos
sarb
daa
push
out
sbb
stos
sbb
xchg
and
outsl
and
std
shr
dec
lret
inc
jae
pop
je
es
mov
loopne
jns
cs
jg
cmp
scas
dec
divb
stos
mov
addr16
outsb
lret
mov
push
sbb
incl
testl
call
loopne
fptan
in
and
mov
negl
mov
lcall
jecxz
pusha
adc
arpl
rcll
mov
ss
fiadds
fdivrl
pop
push
add
push
rorb
mov
movsl
lock
psllw
in
pushf
data16
xchg
add
cltd
lret
loope
dec
rolb
ret
mov
loop
mov
fcoml
pop
imul
mov
dec
mov
jae
rcll
sbb
dec
and
and
add
and
dec
es
out
ds
or
mov
cmp
push
enter
sub
mov
aaa
push
and
cld
scas
add
outsb
adc
cli
cmp
fsubrs
jecxz
push
xor
out
enter
mov
push
sub
pop
sbb
sub
sahf
pop
inc
pop
outsl
push
aas
out
inc
or
cmpsb
xchg
dec
pop
lock
aam
ret
in
mov
mov
test
sub
mov
test
test
enter
adc
fldenv
fwait
or
adc
int3
jns
shl
sub
shrl
jb
xchg
jg
push
cmp
ds
fs
in
xchg
and
out
je
mov
xlat
jns
cmp
xchg
fidivrs
and
pop
pop
fmull
inc
stos
jge
inc
test
mov
inc
sub
xchg
dec
push
call
pop
sti
test
mov
push
pop
pop
push
mov
jnp
jp
mov
jl
mov
push
adc
inc
std
clc
sub
and
jae
arpl
mov
shll
jns
jns
mov
cmp
pop
jnp
sub
fbstp
lea
lock
imul
sub
xchg
mov
out
xchg
bound
and
jae
mov
shll
lret
fs
sbb
cltd
js
add
inc
sub
cmp
sbb
gs
aam
xor
clc
sub
pop
jmp
add
movsl
cwtl
pop
xor
movb
sbb
insb
out
xchg
jb
or
cmp
jno
jmp
sub
data16
pop
in
push
add
std
and
aaa
push
adc
mov
fwait
insb
fildl
xchg
lds
repz
mov
mov
lret
xchg
es
jg
pop
mov
test
dec
sub
ss
mov
inc
test
xchg
mov
dec
das
push
aas
and
adc
push
push
nop
pop
inc
lahf
cs
dec
mov
inc
add
adc
ss
pop
insb
loope
dec
push
cli
idiv
jge
sahf
cmp
test
or
test
xor
adc
inc
jl
outsb
xor
test
loopne,pn
sarb
cmp
xchg
jnp
ds
inc
jne
pop
imul
ljmp
in
sbb
ds
shll
ss
pushf
mov
ds
xchg
add
sub
push
pop
and
or
mov
xor
xchg
fimull
gs
out
sbbl
xor
movsb
jecxz
dec
dec
rcrb
roll
or
out
mov
mov
or
cwtl
dec
nop
je
mov
mov
ds
nop
mov
dec
fidivrs
arpl
pop
xchg
xchg
or
adc
cltd
gs
aad
mov
addr16
addb
mov
repnz
push
mov
shlb
cmp
and
fiadds
int3
sbb
push
dec
or
nop
scas
adc
adc
add
movsl
rcrb
sti
pusha
jae
push
arpl
mov
out
outsl
xchg
mov
jle
or
cs
jo
mov
xchg
outsb
or
aaa
mov
push
xorb
add
pmullw
stos
and
ss
int3
pop
adc
xchg
in
mov
adc
rol
and
push
or
jmp
call
sbb
mov
movsl
sbb
adc
or
flds
jae
lds
xchg
inc
shl
daa
ja
sub
mov
inc
sub
mov
test
out
fildl
fisttps
hlt
dec
les
mov
xchg
pusha
cmpsl
iret
lds
and
xor
mov
xchg
mov
push
xlat
push
std
mov
cmp
call
rorl
lds
mov
xor
adc
jg
mov
jmp
inc
sub
cmpsb
jb
inc
adc
mov
rcr
mov
adc
dec
shr
jo
pop
push
jmp
test
dec
fmul
cli
adc
mov
cmp
sbb
insb
inc
fnstsw
xorb
jp
fisubs
mov
stc
jne
add
sbb
fsubrl
dec
adc
sbbb
and
or
idiv
mov
mov
imull
iret
xchg
ja
add
fmulp
dec
insl
sub
pop
xchg
rcll
loop
jne
shr
enter
pop
push
xor
shlb
add
add
rolb
xor
lret
jnp
cli
fmull
and
adc
push
jbe
and
lods
xor
xor
pop
into
in
dec
das
inc
aaa
mov
repnz
addr16
and
add
mov
adc
sub
push
insl
sbb
call
and
cld
and
rol
push
je
mov
in
lds
les
testb
push
test
jmp
clc
xchg
xor
test
mov
cmp
scas
jmp
ja
adc
fmul
xchg
js
jns
in
mov
jbe
out
mov
cltd
mov
mov
pop
cmp
pop
jmp
xchg
icebp
fiaddl
cs
in
inc
int3
cwtl
repnz
mov
pop
int3
cwtl
dec
inc
sbb
mov
xchg
ret
int
je
cmp
leave
xor
add
lock
mov
outsb
adc
fnsave
push
sbb
sahf
sbb
jae
data16
and
outsb
cmpsb
lret
arpl
mov
mov
in
xor
cs
test
in
fisttps
dec
lods
ret
iret
in
or
mov
sbb
cs
adc
ds
and
dec
lcall
out
add
adc
xchg
push
push
xchg
mov
mov
insb
push
add
hlt
jne
or
aad
int
mov
push
sbb
dec
add
fdivrs
aaa
aad
mov
adcb
and
adc
jnp
jno
fsubr
pop
int3
mov
pop
inc
xchg
and
xchg
in
sbb
stos
hlt
popa
ret
fucom
out
cmp
bswap
aas
hlt
in
pushf
push
movsl
incl
sti
shrb
cld
pop
jo
test
loop
and
xor
cmp
loope
mov
sub
add
inc
dec
and
cmp
push
mov
out
cmp
mov
xchg
jmp
jecxz
shr
stc
ret
push
cmp
push
jmp
loop
cmpsb
inc
cmp
iret
pushaw
repnz
mov
lock
lret
xor
out
xchg
or
aaa
fcompl
insl
test
mov
pop
sbb
inc
ret
dec
inc
add
or
mov
xchg
mov
lret
js
scas
sub
rorb
jns
ds
xchg
and
enter
movsl
fsts
je
ljmp
pop
cltd
aad
icebp
stc
mov
add
pusha
js
sbb
sahf
sbb
dec
in
cli
and
out
lock
aam
stc
test
int3
add
pop
xor
push
lahf
sbb
orb
mov
mov
lret
fildl
clc
fnstsw
mov
pop
push
lahf
les
shll
xor
fisubrs
insb
aaa
mov
mov
mov
cmp
sbb
jle
ds
xorb
jne,pn
iret
mov
jae
push
cmp
jb
imul
aam
pusha
push
sar
mov
or
pop
xchg
addr16
fwait
jns
push
pop
imull
sti
fs
out
enter
and
ja
push
test
dec
inc
data16
pop
fbld
mov
jmp
pusha
dec
addr16
sub
adc
jo
sbb
fsubr
rcrb
inc
daa
add
sbb
pop
pusha
add
xor
adc
dec
std
mov
iret
push
jnp
sahf
scas
imulb
pop
sbb
in
sbb
gs
and
loopne
cld
pop
inc
aas
scas
aad
dec
decl
scas
push
dec
and
cmp
sti
dec
or
inc
add
adc
test
xchg
into
or
mov
xchg
out
mov
jns
lcall
dec
mov
sarb
xchg
les
or
mov
rolb
push
orl
dec
xor
mov
cltd
bound
out
lret
adc
cmp
xchg
and
pop
fcmovb
sbb
lock
outsl
sbb
xor
mov
test
mov
sbb
pop
xchg
movups
fisttpll
sub
lcall
push
inc
jl
hlt
adc
or
loop
mov
pop
call
or
xchg
inc
popl
jmp
fdivs
repnz
xchg
iret
jle
mov
cld
xchg
and
mov
push
test
cmp
mov
gs
or
lret
and
les
ret
dec
ss
mov
aaa
sbbl
pushf
mov
xchg
sub
addb
or
addr16
out
add
add
sahf
pop
jno
decb
cmpsb
xchg
das
adc
rorb
test
xor
dec
call
xchg
arpl
ficoml
cld
add
xchg
dec
adc
lods
notb
cltd
imul
xchg
les
sub
adcb
cmp
jge
icebp
fwait
jle
aaa
jnp
and
fs
adc
jle
mov
xchg
push
shll
dec
movsb
mov
push
sbb
addr16
repnz
adc
jne
sahf
xor
cli
movsl
shll
mov
lods
aaa
sub
push
ds
xchg
fstp
cmp
fs
loop
mov
shlb
add
mov
ret
in
testl
jg
insb
lahf
test
push
cmpsb
fs
mov
and
icebp
dec
dec
test
cmp
xchg
inc
test
out
aaa
bound
mov
lea
outsl
lahf
stc
clc
cld
push
rcrb
xor
sbb
sub
xor
nop
push
das
and
dec
fs
mov
bound
pop
jns
push
push
push
aas
push
lahf
addr16
insb
aam
nop
push
inc
sbb
cmp
cld
aam
imul
push
jg
push
sbb
jmp
pop
pop
shll
xchg
add
jnp
push
das
sbb
int3
daa
lret
les
leave
lods
mov
movsl
push
dec
lret
push
les
in
pushf
add
dec
mov
jo
or
mov
ljmp
dec
xchg
mov
fs
inc
push
push
popf
sbb
aam
inc
adc
adc
ja
mov
jge
xor
repnz
sub
push
test
xchg
cmp
addr16
jbe
jecxz
cltd
mov
mov
mov
push
es
xor
xchg
mov
in
fsincos
or
rclb
sub
sbb
xor
sub
test
arpl
inc
int3
inc
enter
stc
ds
stos
movsb
mov
ja
and
das
ret
push
dec
jnp
and
into
xchg
cs
and
adc
test
jae
sub
fisubrs
add
fs
outsl
hlt
inc
jno
push
cmp
fiadds
stos
pop
fstpt
dec
aam
jns
fwait
push
lcall
out
or
jno
int3
mov
loop
outsl
ss
test
subl
imul
addr16
in
push
pop
or
out
xor
mov
in
pushf
out
mov
out
xchg
xchg
lea
test
out
imul
out
push
test
xchg
and
inc
aad
xchg
out
cmp
lgs
xor
fwait
lret
or
xor
insb
aas
sahf
xchg
insb
inc
cmp
xlat
inc
push
inc
pop
lds
cmp
push
cltd
cmp
into
sbb
sub
xor
test
loope
xchg
fimull
push
addr16
xchg
xor
or
cmp
jns
add
sbb
push
inc
cmp
out
jmp
js
int3
mov
sub
jno
push
xor
jbe
js
arpl
cltd
or
xchg
orl
pop
into
or
lock
or
add
imul
addr16
ret
and
sbb
xchg
jbe
and
ds
inc
inc
push
popl
mov
and
outsb
jecxz
or
fucomp
pop
cwtl
jg
xchg
outsl
shlb
daa
mov
int3
jle
mov
push
mov
bound
xorl
popa
xor
push
adc
out
ret
sbb
mov
cmc
jb
jle
decb
xor
es
cmpb
sbb
or
pop
jb,pn
sbb
sbb
ljmp
mov
daa
jge
cld
leave
shll
sub
inc
aad
cmp
xlat
out
push
fdivrp
ja
mov
mov
fmull
test
outsl
pusha
frstor
aas
adc
and
repz
test
jo
aaa
bound
dec
mov
cmp
xchg
xor
cmpsl
adc
inc
cld
jo
lea
add
ja
dec
jb
pop
stos
push
mov
sbb
out
add
subl
cltd
imul
jle
jns
xchg
dec
or
stc
hlt
cmpsl
aas
push
gs
or
xor
push
in
push
gs
jge
incb
gs
jecxz
adc
lcall
and
dec
jne
rclb
inc
and
ljmp
shll
jmp
push
fldl
pop
stos
mov
jns
mov
out
movsl
adc
fisubrl
sub
dec
sub
outsl
adc
and
aaa
adc
cld
push
std
mov
jmp
repnz
push
je
pop
loope
mov
add
add
mov
jb
cmpsb
scas
sub
mov
scas
loop
jle
mov
jno
pop
xor
add
adc
or
lock
push
ja
gs
push
mov
sub
adc
sbb
adc
lds
dec
push
lahf
aad
iret
sti
push
pop
adc
pop
pop
inc
jb
subb
loope
mov
mov
xchg
int
jmp
ds
xchg
cmp
mov
negl
xchg
rcl
fnstsw
inc
jo
pushf
ja
les
es
and
push
rcll
lods
push
mov
or
pop
inc
xorl
dec
sub
arpl
or
andb
shl
outsb
mov
cld
lods
aad
decl
sub
fwait
jg
negl
nop
test
cs
out
jnp
fwait
sbb
push
in
inc
das
addl
and
mov
mov
sti
sub
aad
jg
adc
iret
push
xor
push
dec
sbb
scas
ficomps
loop
push
cmpsb
icebp
add
lods
mov
push
pop
lea
insb
stos
shrb
sbb
cmp
out
int3
ret
jne
jnp
adcb
int
lods
popa
shrl
sub
ds
scas
push
add
xchg
mov
jae
add
or
flds
dec
add
or
and
scas
cmp
cmpsb
repnz
or
fstpl
cld
sub
je
loop
movsb
int3
push
dec
leave
lea
insl
push
inc
imul
repnz
into
std
hlt
sar
adc
scas
jne
dec
faddl
xchg
cmp
mov
out
cmp
add
push
push
mov
movsl
je
sub
dec
pop
jae
lods
ret
hlt
ds
mov
sbb
or
adc
adc
lahf
xor
cmp
sbb
insl
jecxz
inc
inc
mov
add
or
push
nop
stos
pop
pop
jae
push
add
xchg
jb
dec
mov
popa
cmp
jmp
pop
in
push
sbb
mov
fisubrs
adc
xor
jg
mov
mov
std
in
dec
in
mov
xor
mov
sub
and
sbb
sti
inc
and
mov
or
iret
pop
pop
aas
gs
shll
pop
sbb
add
dec
stos
pop
xchg
sbb
mov
mov
lock
jle
repnz
add
mov
cltd
into
add
orl
outsb
jo
nop
das
mov
cli
daa
or
aas
lahf
ds
adc
shrb
and
ret
jmp
mov
push
outsb
jo
inc
and
pop
sbb
setno
jge
scas
movsb
insl
out
aam
ja
aaa
jle
lret
cltd
dec
adc
jo
push
mov
out
mov
ja
xchg
mov
loopne
jo
push
daa
lods
jo
jmp
push
push
fwait
dec
pop
jae
mov
push
pusha
sub
orl
dec
loopne
test
or
jecxz
dec
ret
jecxz
mov
jge
fcmovne
arpl
jnp
lds
push
sub
inc
cmp
std
and
pop
jmp
aam
xor
test
dec
pop
movsb
loope
mulb
fcmovbe
mov
fcoms
fcomps
sarb
mov
pop
ss
jl
nop
mov
fnstcw
into
sbb
aad
mov
adc
lods
add
xchg
decb
jns
jecxz
daa
and
xchg
xor
push
repnz
push
mov
add
fwait
bound
dec
fs
sbb
dec
adc
outsl
and
xor
lea
je
fcomps
ja
xorb
mov
mov
leave
mov
out
imulb
inc
sub
lahf
fstpt
mov
pop
testb
dec
xor
aas
dec
orps
in
movsb
push
mov
pop
in
inc
ljmp
in
and
test
dec
insl
inc
xor
xchg
xorl
push
add
jmp
out
and
xor
outsl
ja
fwait
push
int3
or
cmp
stos
or
test
loop
idivb
inc
fsubrl
ja
rcr
addr16
or
xchg
xor
mov
add
jbe
scas
daa
lcall
xor
ja
out
pushl
test
lret
xor
scas
mov
daa
dec
aaa
into
jns
cwtl
out
les
ret
sub
xchg
gs
ds
xlat
mov
pushf
scas
test
aam
cmp
jbe
jae
sub
mov
xorb
push
mov
pop
rcll
xor
inc
inc
and
cld
fimuls
test
dec
jle
out
or
mov
mov
out
pusha
xchg
push
mov
daa
popf
fdivs
call
and
xchg
ds
mov
ret
in
lods
pop
ret
cmp
mov
pop
pushf
arpl
cli
sbbb
imul
addr16
sbb
push
popf
outsl
cmp
int3
lea
dec
pop
insb
pop
add
in
adc
rcrb
dec
jnp
and
cmp
iret
pop
xor
out
xchg
mov
inc
pop
into
subb
jns
cs
inc
out
hlt
jmp
sub
gs
jmp
mov
pop
mov
data16
add
jb
push
push
inc
std
mov
js
ficoms
out
xlat
flds
dec
inc
aaa
div
stos
cmp
lods
mov
clc
cltd
jle
les
lret
loopne
push
out
mov
and
test
sbb
mov
lcall
js
fwait
jno
xchg
sbb
js
pop
mov
lcall
add
mov
adc
aam
inc
fdivrp
enter
mov
sbb
subl
mov
test
ljmp
movsb
leave
mov
test
pop
cmp
out
xor
pop
test
sub
push
add
iret
test
iret
sub
mov
jns
lret
stos
dec
pop
into
push
sub
push
push
nop
pusha
in
add
mov
add
lock
subb
imul
xchg
or
mov
cmovae
je
sbb
pushf
or
cltd
test
dec
movsl
ljmp
jno
dec
insl
cmp
mov
das
idiv
push
in
mov
les
test
dec
fidivl
cmpsl
jp
sub
sbb
les
scas
jmp
into
jb
pop
inc
fidivl
imul
jg
fsubs
out
and
cmpsb
fwait
movsl
test
outsb
addb
clc
pop
xchg
adc
sbb
call
inc
dec
pop
icebp
push
cmp
dec
mov
xchg
ja
push
shrb
cli
ffreep
sti
imul
ret
jg
push
xor
mov
shlb
and
sub
or
inc
lret
xlat
or
movsb
pusha
add
cwtl
xchg
sub
icebp
iret
push
lret
mov
push
jl
pop
or
rclb
sti
imul
scas
lods
and
popf
pop
aam
mov
insb
adc
or
fsubs
aaa
mov
jb
movsl
or
repnz
sbb
aad
mov
dec
int
pop
inc
jmp
mov
insl
lock
xchg
in
sub
lds
aaa
xchg
add
push
dec
mov
mov
cld
or
cs
push
in
int
cltd
pusha
pop
test
stos
sar
dec
pop
and
sub
adc
jne
fwait
aad
jle
mov
sub
pop
mov
adc
pop
and
add
cs
sbb
adc
add
push
xor
movsb
jb
mov
movsl
pop
loope
sub
imul
pop
mov
or
loope
and
mov
bound
inc
mov
xor
mov
sarb
mov
sbb
inc
fnstsw
popl
repnz
lret
dec
loop
jae
lea
push
test
rclb
fxch
push
sbbb
lds
scas
xlat
sbb
inc
aaa
in
in
push
sub
dec
adcl
in
lahf
fisubrl
add
test
add
add
shrl
aad
adc
push
cmp
xchg
push
mov
inc
fwait
sarb
in
jmp
push
das
mov
ja
gs
and
cmp
xchg
mov
movsb
push
je
xor
mov
stos
roll
push
sti
ror
push
outsb
sbb
xchg
mov
or
lock
mov
jo
jg
push
fxch
mov
outsl
jp
dec
test
fimull
das
out
daa
mov
xchg
fists
stos
cmc
outsb
sbb
mov
les
sbb
and
dec
stos
imul
push
testb
clc
popa
jb
arpl
fidivrl
stos
aad
outsl
mov
scas
inc
fs
mov
into
popf
sbb
and
pop
aaa
inc
out
cmp
jns
sbb
cs
add
mov
mov
xlat
or
mov
xor
in
loopne
aad
xor
insl
jmp
les
gs
and
imul
pop
mov
aam
loope
pop
sarb
push
lahf
cmp
jl
aas
jne
adc
fs
mov
mov
lret
scas
or
test
cld
shrb
xor
and
repnz
jp
fsts
mov
push
dec
leave
ss
loopne
pop
ss
daa
rcr
xor
mov
xchg
or
cmpsl
iret
cwtl
pxor
jno
inc
clc
push
inc
sub
add
sbb
test
mov
call
and
jns
pop
nop
sub
ds
push
xor
out
inc
xor
dec
rorl
mov
int3
movsl
orl
cli
fldt
cmp
inc
scas
testl
lock
sbb
jae
dec
xchg
xor
lcall
mov
or
push
ja
test
adc
scas
pop
adc
aaa
jb
pop
cmp
xchg
jle
push
adc
sub
cld
in
int3
xchg
mov
jecxz
xor
stc
nop
mov
cld
mov
enter
int3
jbe
mov
ret
jnp
daa
leave
repnz
aam
dec
leave
mov
popf
jne
dec
aam
ficompl
and
push
gs
fisubrl
jne
data16
ljmp
in
loop
inc
test
into
pusha
cmp
push
fidivrs
xor
rorb
push
jp
gs
cld
inc
push
enter
sbb
sub
scas
fxch
mov
jmp
or
in
xchg
jbe
js
mov
lret
cmpsb
jbe
pushf
std
in
pusha
andl
ud2
pop
ds
mov
add
iret
mov
inc
jge
xchg
aas
out
mov
mov
sar
sub
stos
shrb
mov
inc
sbb
rolb
or
mov
imul
loop
mov
adc
inc
mov
mov
notl
lret
das
aaa
sbb
lea
arpl
clc
pop
mov
int3
adc
mov
mov
pop
stos
mov
and
aam
jnp
test
mov
repnz
mov
mov
cmp
lahf
pop
inc
cmp
or
adc
pop
inc
mov
push
aad
push
enter
out
insl
aas
lea
pop
fsts
mov
pop
clc
fldt
and
mov
xchg
ja
aas
jg
add
rorl
pop
sub
xchg
inc
popf
faddl
inc
es
repnz
inc
inc
push
cmp
mov
int3
xor
sbb
jmp
in
push
fsubs
mov
push
aad
stos
mov
ds
cmpsb
sbb
je
xor
jnp
jno
pusha
mov
std
loop
std
add
pop
cltd
insb
push
hlt
inc
lds
mov
test
xchg
sbb
pushf
jbe
jo
int
pusha
cmpsl
mov
sarb
cmc
in
adc
mov
ficoms
loopnew
test
arpl
jl
xor
or
jecxz
sub
adc
and
call
ljmp
dec
xchg
pop
mov
mov
mov
lds
adc
mov
push
dec
popa
jne
mov
je
aas
movsb
mov
fistpl
sbb
cmp
mov
adc
out
cmp
movsl
fbstp
ss
add
jo
notb
jnp
outsl
movsb
mov
idiv
pop
or
inc
insl
jb
dec
fwait
adc
add
ljmp
lods
push
loop
push
int3
insb
sti
lods
xchg
sarl
pusha
fmulp
and
xor
mov
cltd
mov
nop
arpl
loopne
xor
jnp
xchg
push
push
pop
or
rorl
push
push
add
orb
pop
dec
pusha
sbb
sbb
mov
add
aas
ljmp
push
and
inc
add
sub
call
xor
cmpsl
push
js
data16
lds
or
mov
mov
lods
test
or
pop
mov
and
pop
hlt
push
and
and
jge
jb,pt
cld
sub
roll
dec
sarb
mov
mov
mov
shr
mov
out
imul
sbb
fwait
cwtl
cmpsb
fsts
mov
mov
jnp
ss
add
or
jnp
sub
sub
fidivl
mov
in
push
sbb
adc
int
mov
pop
dec
loopne
les
xor
sahf
dec
mov
outsl
into
test
fld
addl
xor
cli
xchg
jle
cltd
push
fstpt
repnz
mov
jp
push
pop
mov
mov
or
xchg
scas
fisubl
aam
das
cmpsb
push
jmp
xchg
aas
and
std
aas
push
movsl
xchg
lods
loop
sub
sub
ja
test
test
push
adc
add
fbld
add
arpl
sub
mov
in
push
mul
fimull
mov
insl
add
cmp
repz
inc
xchg
sbbb
xlat
push
cmp
inc
imul
inc
mov
sahf
adc
adc
inc
inc
lea
xchg
adc
rcll
sahf
dec
sbb
pop
jns
int3
inc
outsb
aaa
push
arpl
sbb
popa
mov
jecxz
sub
push
insb
imul
cmp
sbb
in
sub
and
xchg
push
sbb
lcall
xchg
mov
jecxz
inc
repz
out
push
ds
dec
inc
das
inc
dec
sub
pusha
icebp
jecxz,pt
xlat
test
insb
pushl
or
out
ffreep
cmp
in
push
stos
xchg
jns
and
jo
jmp
pushf
jecxz
aaa
cmp
test
mov
xor
shll
xlat
cmp
xchg
insb
xor
das
xchg
pop
jle
sub
mov
push
add
xlat
xchg
leave
outsb
adc
pop
mov
sbb
daa
loop
jge
test
jnp
cmp
outsl
sbb
out
jg
and
jb
xor
jno
sbb
mov
adc
mov
fs
insl
outsb
dec
clc
sub
mov
mov
pop
repz
clc
pop
clc
and
jae
sbb
dec
ss
and
sti
push
movsb
dec
sub
mov
adcb
sub
icebp
jp,pn
subl
pop
mov
movsl
pop
lods
addl
sbb
shrb
sub
or
movsl
shlb
fiaddl
movsb
out
jo
jmp
adc
fiadds
push
sti
push
dec
jno
and
cmc
xchg
in
push
jmp
incl
mov
mov
or
std
xor
std
and
mov
jno
xor
mov
inc
or
lods
pop
bound
cmc
test
les
or
loop
ljmp
or
add
cli
insl
pop
repz
or
jns
repnz
lods
cmc
ds
test
es
or
loopne
xchg
nop
sub
and
xor
push
xchg
enter
mov
mov
incb
pop
jns
cmp
insl
fucomp
std
sub
push
nopl
loope
mov
lods
pusha
inc
fs
pop
fcmovne
pusha
test
pop
out
in
int3
xchg
mov
mov
sub
adc
mov
sub
popf
mov
les
fdivl
push
test
popa
shr
loopne
pop
movsb
sbb
dec
test
pop
ds
lret
pop
xchg
idiv
imulb
push
out
mov
xor
xchg
add
xlat
outsb
inc
insb
test
popa
stos
push
push
bound
push
mov
mov
in
ss
sbb
fisubl
decb
mov
aas
sbb
cli
and
inc
add
pop
subl
hlt
sbb
cwtl
js
arpl
imul
dec
push
ja
dec
out
pcmpgtd
lret
push
pushf
mov
je
mov
rolb
out
dec
xor
loope
fimuls
jno
push
fmull
div
jmp
pop
push
sub
lret
andb
push
mov
xchg
cwtl
mov
adc
and
xchg
mov
pop
stos
xchg
jo
lock
loopne
cmc
les
sub
imul
test
mov
f2xm1
scas
xlat
in
jbe
xor
outsb
test
sbb
add
dec
scas
mov
cmp
sub
jo
popa
jb
out
out
jmp
xchg
ja
flds
inc
sahf
bound
add
movsb
push
ljmp
lock
adc
sbb
fs
dec
and
cmc
jmp
cwtl
pop
movsb
jno
cmp
fs
dec
mov
test
or
dec
mov
imul
mov
aas
dec
or
repnz
sti
fdivrp
rcrb
orl
jp
push
xsetbv
lock
xchg
pop
sarb
jecxz
lcall
shl
jle
mov
mov
dec
cld
mov
repz
dec
push
jmp
pushf
into
outsb
cltd
cmpl
gs
pop
dec
adc
insl
xchg
sbb
jae
scas
into
jp
sub
cs
push
std
inc
test
sub
es
dec
pop
fisubrl
dec
jg
fsub
mov
inc
clc
sti
and
sbb
call
sbb
out
gs
sub
test
push
repz
sub
lret
cs
dec
in
imul
ss
std
fs
pop
aaa
adc
cmp
ret
push
js
or
pop
adc
mov
mov
mov
imul
mov
jnp
test
adc
and
and
mov
jo
leave
mov
or
sub
xchg
and
sti
lcall
pop
in
cmpsb
xor
imul
push
xchg
push
push
pusha
cmp
mov
mov
jecxz
scas
pusha
mov
push
push
cmpsb
xor
sub
pop
push
movsb
pop
ret
inc
movsb
fwait
loop
push
loop
jp
pop
xchg
rcll
add
shl
jp
xchg
mov
ja
ret
push
mov
sbb
adc
mov
testl
pop
stos
and
sbb
xor
xor
xchg
xchg
and
dec
pop
xor
das
inc
mov
arpl
inc
aam
dec
mov
mov
add
shrl
rorl
mov
mov
jae
mov
jecxz
test
bsf
iret
fdivr
test
mov
pop
loope
jo
push
mov
outsb
jnp
pop
mov
fildll
jl
sub
cmp
xor
push
inc
cmpsb
inc
incb
pop
fmuls
push
in
push
es
push
pop
dec
ret
xchg
stos
loop
or
pushf
inc
push
jb
xchg
inc
jecxz
or
out
iret
in
inc
shll
leave
adc
rolb
inc
mov
ja
pop
sti
inc
push
add
test
cwtl
mov
loope
sbb
cltd
mov
in
scas
roll
pop
xchg
inc
or
in
mov
cwtl
lcall
push
lock
gs
pop
and
out
shrb
add
add
sbb
cmpsb
jmp
inc
and
xchg
fmull
mov
pop
sub
cmp
or
dec
movsl
fsub
mov
ja
into
mov
das
push
pop
repnz
call
push
push
mov
pop
mov
out
push
jno
ret
xor
scas
ds
jmp
inc
cwtl
jno
int3
pushf
jno
and
xchg
paddw
sbb
dec
orl
pop
jp
pop
cmp
rcll
dec
xchg
stos
dec
push
fldenv
xor
into
or
and
in
push
sub
inc
xor
pop
add
loopne
sub
mov
push
stc
lds
adc
cmp
mov
sbb
outsb
insb
call
jg
aad
dec
fnstcw
in
mov
pop
or
ljmp
dec
fwait
testb
or
jo
push
push
iret
xor
sbb
push
cmp
sarl
int3
shrl
or
dec
or
ljmp
jmp
pop
push
insb
nop
xchg
iret
adc
lret
gs
push
jl
loopne
mov
jge
ja
xchg
rorl
aaa
push
pusha
dec
jg
lds
adc
push
aam
push
mov
dec
mov
dec
fwait
ljmp
mov
dec
or
adc
fcompl
sbb
loop
aad
mov
out
mov
adc
js
in
mov
dec
or
or
lods
lahf
andl
aaa
fsin
mov
data16
notl
stos
dec
movsb
leave
in
insl
lret
adc
sub
mov
sbb
sahf
cld
mov
int
scas
mov
pop
inc
fistpll
mov
push
shrb
subb
gs
mov
int3
aaa
insb
cmp
push
jmp
pop
mov
sbbb
or
stos
fyl2xp1
pop
push
pop
clc
dec
rcll
sbb
sbb
xchg
arpl
push
pop
jb
cmpb
mov
cltd
push
sbb
lahf
adc
cmp
mov
lea
rclb
push
aaa
add
cmp
sbb
aad
hlt
jno
mov
mov
xchg
int3
jle
repnz
rcrb
fs
jns
add
or
mov
fdivrs
or
ret
addr16
jbe
sub
aad
iret
lahf
xchg
add
loopne
xchg
sti
cmpsl
dec
ret
icebp
iret
jge
add
fcoml
jnp
xor
sbb
fidivs
adc
push
loop
into
lret
xor
fstpl
scas
jo
pop
xor
mov
lods
jge
cwtl
adc
jle
imul
outsb
movsl
push
sub
mov
popf
xor
jae
in
in
lds
lret
dec
outsb
push
test
dec
aam
mov
stc
fmuls
outsb
inc
mov
dec
xchg
push
add
jbe
daa
xlat
mov
jnp
stos
push
inc
jns
sahf
jle
rolb
pushf
sti
cmp
inc
sbb
lods
dec
push
xor
and
into
or
mov
stc
pop
push
lcall
adc
addr16
push
or
mov
xlat
mov
adc
js
mov
stos
clc
mov
js
out
ja
pop
mov
dec
pop
movsb
cmpsb
popf
call
mul
cs
sarb
outsl
mov
lock
mov
pop
dec
fs
mov
cmpsb
xchg
xor
loope
pop
mov
jns
xchg
lods
jle
andl
adc
in
test
hlt
and
clc
je
add
mov
scas
mov
je
xor
jne
mov
jle
cmp
xchg
shlb
sub
lret
mov
jae
cmc
mov
xor
in
incb
pop
inc
ds
fcompl
pusha
aaa
lock
rcr
xlat
add
clc
mov
imul
lret
adc
fwait
inc
inc
insl
mov
lahf
ljmp
out
and
gs
out
arpl
fwait
add
cmpsl
xlat
popa
cmp
pop
or
stc
fcmovbe
mov
push
mov
adc
loop
dec
loop
mov
les
adc
outsl
mull
and
fcompl
add
pop
test
jmp
dec
in
and
jg
inc
or
push
loope
mov
les
mov
clc
imul
sub
mov
stos
add
dec
iret
mov
sahf
pop
sub
ret
fwait
sbb
cmp
push
adc
jge
sbb
adc
mov
out
ss
xor
jbe
xchg
das
cs
lret
jp
dec
jo
and
test
xchg
int3
nop
add
xchg
xchg
lret
push
sub
sub
dec
addr16
popw
jb
sub
jp
fnstcw
xchg
movsl
mov
inc
mov
daa
sub
sub
in
aas
ja
aad
jge
loop
movsb
mov
out
pop
xchg
sbb
jno
and
sub
cmp
pop
jp
inc
cmp
stc
stc
cmp
and
call
dec
jg
mov
stc
mov
add
mov
sub
aaa
dec
push
xchg
lcall
adcb
cmp
mov
adc
or
std
mov
jp
jno
xchg
add
push
mov
pop
fldt
sub
sub
fsubr
scas
daa
fdivl
sub
rcll
and
iret
aam
pop
jne
adc
repz
stos
mov
fdivr
mov
mov
js
push
sahf
movl
dec
sub
lea
ret
sarb
cmp
sbb
mov
sar
out
mov
push
je
sbb
lds
push
push
cmp
loop
test
inc
xor
pop
sbb
inc
jle
out
pop
aas
or
cvtdq2ps
movsb
loopne
idivb
dec
cmp
inc
pop
sti
sbb
inc
outsb
or
lea
push
shrl
out
fdivs
inc
and
and
add
push
inc
test
mov
pop
lods
mov
stos
jl
loope
or
shrb
cmp
pop
add
mov
push
push
mov
pusha
or
and
imul
cmp
call
xchg
xchg
movsl
js
call
cmpsb
pop
push
fwait
or
or
out
or
adc
xor
testb
mov
loop
xor
sahf
mov
push
js
sbb
dec
inc
lret
rol
mov
mov
fidivs
or
cltd
aam
cmpsb
outsb
pop
and
fildll
in
and
loope
stos
in
and
pop
leave
pop
push
mov
push
and
mov
jge
cli
sub
ror
jge
xorl
mov
filds
in
fisubs
cld
repnz
popf
add
pop
push
into
movsl
push
mov
add
push
or
fisubrs
rol
fistpl
push
mov
add
mov
hlt
cmpb
xchg
aad
xor
arpl
and
jne
std
repnz
xor
imul
out
cltd
push
stc
cmp
pop
rcrb
dec
std
pop
decb
movb
push
dec
dec
arpl
mov
mov
stos
lea
lret
out
popa
push
mov
ficoml
inc
outsl
sub
and
mov
call
adc
fs
es
js
test
cmp
imul
ljmp
mov
test
inc
fidivrl
sbb
pop
mov
into
jb
cmp
push
aaa
push
ljmp
dec
aam
sbb
into
sbbb
and
pop
dec
and
movsb
popf
dec
mov
ja
loopne
jnp
jmp
iret
lds
fistpl
les
fiaddl
aaa
xor
sbb
jmp
fnstsw
mov
leave
inc
fucomp
hlt
test
fadds
pop
repz
mov
mov
sahf
adc
mov
and
add
rorb
dec
daa
lock
daa
push
scas
sub
mov
add
out
dec
add
cld
mov
mov
inc
pop
fimuls
int
outsb
pop
cld
push
mov
adc
cmp
out
ret
push
ja
ja
mov
jo
loop
and
repz
cmp
cmp
test
cmp
push
dec
dec
mov
push
dec
sti
jg
stos
pop
mov
shld
mov
sahf
sbb
movsl
call
pushf
ss
lods
cmp
jle
jl
stos
and
jle
dec
fstps
or
dec
xchg
outsl
or
cli
in
ret
je
sub
mov
movl
imul
fistps
push
pop
adc
mov
test
test
or
or
mov
nop
test
lret
push
aaa
repnz
ja
sub
jnp
cmp
dec
mov
sbb
je
push
mov
ss
sbb
loopne
outsl
in
mull
xchg
fwait
xor
imul
int3
sub
mov
insl
push
jg
xchg
add
out
cs
jecxz
mov
xor
mov
push
and
mov
popf
addr16
jmp
jae
jle
test
or
mov
push
les
sub
adc
dec
jo
mov
hlt
leave
mov
xchg
icebp
mov
aad
inc
testb
ljmp
dec
mov
test
adc
add
inc
and
inc
pop
inc
cmp
dec
push
cmp
xorb
push
jb
aaa
mov
xchg
xchg
daa
dec
and
dec
mov
in
sarb
lret
js
mov
sub
stos
sbb
jmp
push
insl
inc
fdiv
movl
inc
cs
dec
mov
or
je
aad
mov
sbb
cs
test
addr16
sub
scas
cli
xor
xor
mov
and
jmp
in
mov
add
sub
in
lock
lahf
out
ficomps
cli
cmc
ja
lret
adcb
cmp
dec
push
fisubrs
pop
push
mov
dec
movaps
push
jmp
inc
pop
cwtl
ret
js
cld
cli
pusha
int3
inc
adc
xor
lahf
shll
cwtl
mov
xchg
jnp
inc
fdivrp
dec
mov
jns
shlb
loopne
dec
hlt
pop
int
loope
rclb
jae
nop
icebp
jno
idiv
fdivr
call
out
pop
mov
add
notl
mov
push
push
xor
mov
lods
subl
cmp
fsubrl
and
push
repnz
and
jge
xchg
mov
loop
push
ffree
and
das
inc
inc
faddl
call
daa
xor
ljmp
push
fcomi
push
stos
xor
mov
push
imul
push
pushf
xor
cmpsb
pop
int
iret
lods
add
jbe
push
pop
cltd
xchg
sti
arpl
cld
inc
pop
imul
mov
and
xchg
xchg
adcl
flds
ljmp
lahf
pop
outsl
into
mov
ja
push
icebp
ja
popa
arpl
add
cmp
test
dec
insb
mov
mov
ja
push
leave
arpl
in
into
add
push
jp
ret
xchg
sub
cmc
mov
imul
out
push
leave
xor
jbe
adc
addr16
shrb
shr
fs
cmp
notl
aaa
sbb
cwtl
inc
aad
std
out
vpunpcklwd
mov
dec
xor
in
scas
sbb
jbe
imul
push
add
iret
popf
dec
out
mov
imul
xor
or
bndstx
or
sbb
popf
jg
cmpl
and
or
stos
cli
adc
in
dec
out
push
push
add
inc
and
sbb
mov
dec
mov
lea
add
lds
stc
jae
in
dec
sti
test
mov
sub
test
mov
push
iret
in
push
cmp
addl
mov
hlt
pop
or
jecxz
pop
mov
in
fcomp
pop
les
ficomps
enter
jg
cmp
dec
paddd
inc
nop
xchg
push
or
pusha
das
in
xchg
dec
mov
pop
xchg
xchg
sub
inc
push
pushf
mov
fimuls
add
clc
test
ljmp
iret
out
inc
enter
and
insl
dec
lret
xchg
mov
sarb
pop
ret
xor
jl
jle
cmp
jbe
leave
addb
mov
bnd
hlt
out
mov
movsb
insl
sbbb
lahf
out
jo
fnstcw
xor
movsb
test
sti
add
test
and
cmpsl
sbbb
add
pop
mov
cld
push
xchg
imul
fcomp
scas
push
push
add
ds
adc
js
loop
push
stc
pop
ss
dec
ud1
aam
sbb
add
xchg
cmovo
pop
xlat
pop
fnstenv
pop
or
mov
enterw
pop
lahf
lcall
sub
jp
or
add
loop
xor
cmc
dec
mov
xchg
adc
xor
mov
xchg
ds
test
into
jmp
xchg
addr16
call
popf
dec
mov
sub
mov
cmp
shrl
xchg
fisubs
sub
scas
decl
fdivr
movsb
popa
lods
add
psllq
mov
aam
add
adc
xchg
mov
and
push
xor
xchg
add
aad
fcmovnb
mov
testl
push
in
pop
ljmp
add
inc
orl
div
lahf
addr16
mov
repnz
mov
sub
lahf
xor
rcl
dec
lods
push
test
outsl
insl
add
pop
das
ss
fincstp
cwtl
or
dec
push
cmp
out
xchg
fwait
and
jns
adc
xchg
xlat
test
adc
out
cli
out
push
xchg
jmp
clc
cmp
dec
icebp
cmpsb
and
repnz
pop
push
int
or
mov
into
xchg
xor
push
mov
loope
lds
mov
xchg
test
and
repnz
mov
fidivs
aaa
jmp
mov
mov
jmp
add
fadds
mov
mov
jp
lock
das
aad
inc
dec
stos
jmp
or
push
inc
fidivrl
das
lahf
fmuls
add
add
bound
in
sub
or
int
and
lret
lcall
loop
mov
add
loope
sub
jl
sarl
scas
xchg
cmp
shll
mov
push
xor
mov
inc
pop
mov
stc
icebp
dec
jae
push
lret
cmp
pop
fcom
and
xor
fnstenv
sbb
mov
adc
mov
pop
pop
jg
sub
jl
jno
inc
test
icebp
shl
lods
xchg
pushf
sbbb
or
loopne
push
push
cvtps2pi
hlt
inc
xor
sbb
daa
adc
cmpsb
notl
cltd
sbb
cmp
jbe
and
xchg
aad
sub
shll
sbb
xor
icebp
dec
aam
arpl
fisubs
xchg
mov
add
adc
xchg
mov
insb
push
movsb
std
dec
cmc
in
and
pop
xchg
dec
in
sub
pop
sarb
add
xchg
jb
scas
sbb
imul
testb
popf
push
ja
dec
stc
mov
sub
and
xlat
ss
jbe
xlat
pusha
push
adc
sbb
mov
clc
addr16
fsubrl
mov
lea
ljmp
movsl
fdivl
fsubs
ss
enter
in
popf
mov
mov
imul
movsb
in
jnp
cmp
dec
pop
cmp
push
or
and
sub
mov
mov
inc
jno
popa
in
fbld
fdivr
mov
inc
lea
pop
mov
es
cs
cld
fs
int3
mov
dec
aad
sahf
add
es
les
push
hlt
test
es
dec
push
xchg
test
ja
mov
push
inc
jl
mov
fwait
test
and
iret
repnz
bound
loope
sub
shl
mov
inc
popl
sbb
int
pop
sub
in
rcrb
sub
mov
or
arpl
out
sub
pusha
mov
movsl
ljmp
movsb
fs
mov
mov
mov
int
es
lret
int
int
xchg
repnz
ds
addr16
es
neg
xor
pop
gs
test
or
mov
dec
lock
xchg
sub
mov
mov
stos
aam
and
imul
xchg
addr16
bound
push
faddl
or
insl
or
lods
aad
cmpsl
loope
inc
mov
dec
nop
mov
mov
ret
jne
in
mov
inc
iret
xor
sarb
xor
ljmp
aaa
dec
cwtl
fistpll
xor
xchg
mov
dec
loopne
mov
outsb
shll
mov
sbb
hlt
repz
add
aaa
cmpsb
in
fimull
pop
sub
dec
add
mov
scas
jb
and
into
lret
and
or
pop
pop
enter
fdivrl
and
inc
mov
aad
test
test
nop
fmuls
popa
cmc
mov
cs
out
add
jb
mov
icebp
addr16
cmp
enter
mov
sbb
repnz
push
xor
test
sahf
pop
jg
in
lret
fnstenv
imul
jl
xlat
into
mov
lea
stos
and
pop
cmp
cmc
push
and
sbb
incb
and
data16
inc
imul
mov
push
outsb
aad
pop
imul
out
es
sub
xchg
fst
dec
pop
loop
fldt
jmp
shrl
clc
scas
jecxz
jne
inc
jnp
outsb
loope
inc
cmp
pushf
add
adc
insl
cmp
mov
pop
jmp
jl
fs
and
or
inc
pop
cwtl
std
test
dec
pop
stc
nop
mov
or
pop
and
enter
sub
jno
xor
xchg
inc
fcmovbe
fnstsw
aad
loope
sub
inc
clc
int3
mov
nop
shrl
int3
subl
cmp
shl
repnz
push
mov
ds
cmp
cmp
xor
mov
nop
or
pusha
mov
or
xchg
pop
rdtsc
push
fidivrs
mov
xchg
shlb
sti
cmp
adc
lret
mov
or
ds
push
pop
sbb
sub
out
xor
cmp
jecxz
jge
mov
aas
or
push
out
rcrl
dec
in
cmp
fs
leave
pop
notb
clc
mov
subl
xchg
xchg
mov
call
repz
ds
je
into
sub
push
pop
or
ret
mov
cmp
clc
and
mov
imul
adc
in
xor
mov
dec
adc
repnz
adc
push
xchg
mov
adc
pop
xchg
push
mov
mov
dec
mov
adc
sarb
lcall
and
jb
addr16
out
add
lods
movsb
jno
sub
mov
dec
cwtl
fistps
outsl
jo
js
inc
add
mov
sbb
fs
fwait
push
xchg
xchg
inc
loop
sbb
lds
inc
mov
test
mov
xor
faddl
call
and
jns
repnz
push
mov
jmp
push
pop
daa
scas
mov
adc
xor
sbb
and
jo
mov
test
cmp
es
add
sarl
mov
clc
cmc
mov
movsb
cltd
and
jns
mov
clc
test
push
pop
pop
les
and
sbb
imul
lahf
cs
dec
xchg
fmull
mov
mov
push
lea
add
add
dec
adc
mov
pop
cwtl
pop
jno
rcl
lret
lea
clc
std
stos
xchg
outsb
and
xchg
fadds
icebp
shlb
add
sbb
out
pop
sub
mov
or
test
jns
mov
rol
fcompl
push
loope
add
in
mov
xchg
jle
aas
mov
leave
lret
shl
mov
push
push
shll
xchg
out
push
xchg
xchg
or
in
add
mov
jmp
sub
inc
ss
inc
testb
pop
mov
call
call
arpl
or
loope
sbb
dec
pop
inc
fnstenv
cmp
and
shl
fs
pop
test
jae
fwait
mov
sbb
add
push
insl
fwait
add
fdivs
stc
outsb
and
lcall
arpl
enter
test
xchg
fdivl
cmc
cmpsb
std
mov
fwait
iret
int3
pushf
insb
loopne
sahf
mov
inc
push
mov
adc
out
push
test
mov
mov
push
addr16
and
sbb
sbb
pop
jae
xchg
lret
call
mov
das
cmp
gs
or
jmp
in
daa
pop
fadds
lds
or
repz
shlb
lret
add
outsb
out
push
out
or
aas
dec
mov
push
movsb
inc
rcr
dec
psllw
cmp
clc
aas
popf
sub
adc
imul
inc
lods
xor
in
loopne
cs
and
arpl
xlat
in
adc
iret
ljmp
xor
mov
dec
jp
mov
mov
mov
adc
mov
adc
xchg
xor
sub
sti
sarb
inc
sbb
push
sub
cmp
inc
xchg
pop
clc
fisubs
jns
or
cmp
sarl
xchg
sub
test
jbe
dec
pop
shrl
daa
int
pop
daa
mov
sbb
xchg
lods
ljmp
xchg
mov
dec
sahf
divl
mov
iret
jnp
and
cs
push
fldt
in
and
les
adc
mov
xchg
or
clc
out
push
and
inc
pop
insb
fistpll
adc
cmc
ret
jl
aad
gs
inc
mov
pop
mov
sub
hlt
jbe
gs
mov
int3
mov
hlt
dec
sub
into
jns
nop
jnp
frstor
int3
push
test
fistpl
leave
cmp
pop
lret
ficoml
sbb
loop
cmp
mov
xchg
pushf
out
sbb
adc
and
addr16
sti
cmp
xchg
jbe
mov
and
cmc
xchg
and
test
inc
nop
movsb
mov
stos
stc
fisubrl
or
sbb
push
and
je
js
xor
lods
fisubrl
stos
out
jb
cmpsb
test
push
and
cs
mov
add
dec
mov
repz
movsl
push
fs
lock
lret
inc
popl
mov
xchg
dec
lret
ss
aam
jg
add
push
gs
insl
mov
jo
ret
insl
mov
adc
ret
decb
fcoml
jnp
repz
insb
out
call
rcrl
cmpsb
mov
add
add
mov
sub
and
mov
sbb
js
int3
testl
xchg
fcoms
lret
jne
xlat
scas
ficoml
and
insl
push
andl
lret
xchg
int
arpl
xor
in
add
stos
pop
sbb
rorl
stos
add
je
push
repnz
movsl
add
jno
test
inc
pop
scas
dec
sbb
out
xchg
mov
mov
mov
mov
clc
aad
sbb
mov
push
in
mov
push
dec
imul
jge
add
pop
cmc
adcl
in
out
popa
sub
mov
fnstcw
add
jg
add
dec
das
and
ret
xchg
mov
mov
negl
xchg
xchg
shlb
rcrl
inc
subl
dec
loope
lds
jecxz
push
mov
fincstp
mov
outsl
iret
loopne
adc
jp
xchg
daa
out
inc
scas
imul
bound
cmpsl
ljmp
sbb
xor
out
jae
adc
cmp
inc
mov
rcll
sub
shlb
popf
jmp
inc
and
pop
xchg
in
inc
or
pop
std
into
in
pusha
jb
movaps
xor
and
lods
mov
mov
and
sti
adc
pop
mov
mov
into
or
or
jb
cmp
mov
clc
sub
sub
loope
mov
js
push
in
fstp
mov
or
and
mov
dec
jg
pushw
sbb
sub
mov
inc
xchg
push
push
cld
and
dec
push
mov
lods
push
xor
adc
sbb
rclb
fimuls
aas
mov
mov
cmc
xor
jae
imul
mov
outsb
rcl
pop
daa
out
cmpsl
jnp
ret
push
xor
xor
sti
lods
pop
mov
or
loopne
bound
repz
test
pop
or
sub
and
push
sbb
loop
pop
cltd
out
pop
jmp
pushf
int
test
lahf
inc
in
test
dec
push
mov
fstpt
add
test
xchg
inc
js
rclb
and
mov
cmpsb
xor
jno
inc
cmp
sbb
pop
out
test
pop
dec
push
xchg
push
hlt
clc
sbb
dec
cmp
mov
push
push
mov
jne
test
shrb
lods
cmp
movsl
push
fs
and
push
add
jle
in
sub
and
outsb
dec
mov
movsl
into
mov
cmp
xchg
pop
jno
mov
inc
gs
and
mov
ja
push
lcall
clc
js
add
and
jnp
dec
xchg
sbb
jno
lock
stc
push
add
dec
adc
ja
adc
jp
sub
das
inc
shrl
popf
or
cmp
shr
imul
test
sbb
js
xor
test
push
call
inc
pop
aam
inc
sub
aam
insb
cmp
xchg
mov
fmul
das
repz
lcall
ljmp
cmp
xor
sub
push
push
leave
inc
cmp
rclb
jl
lahf
sbbb
xlat
fisttpll
clc
scas
sahf
mov
adc
cli
aas
xor
gs
mov
mov
lock
insb
fwait
out
bound
subl
jns
dec
pop
xlat
xor
sbbb
mov
mov
xchg
gs
sti
adc
les
xor
mov
mov
repz
sub
scas
lahf
pop
js
dec
insl
int3
push
xchg
int
pop
call
adc
mov
ret
addr16
mov
xlat
adc
es
or
xchg
xor
pop
repz
jg
outsb
xor
or
inc
adc
xchg
push
push
push
stos
loopne
xchg
add
into
pop
out
lcall
call
mov
cmp
test
pop
jno
out
jl
jo
sub
push
aas
mov
das
out
or
push
sub
pop
movsb
rcll
ds
pop
xor
insb
pop
scas
mov
cld
in
and
cwtl
inc
es
xchg
sub
int3
aad
mov
xor
dec
inc
cmp
ds
sbb
jmp
cwtl
lret
push
out
stos
push
lods
mov
xchg
push
push
mov
insl
iret
pop
mov
cs
cmc
jge
mov
lock
jo
dec
std
sahf
or
xchg
push
push
pop
jge
inc
jl
xchg
or
push
xchg
cmp
push
in
rorl
leave
mov
ds
pop
xorl
sbb
mov
xchg
fs
popa
cmp
sbb
in
out
shlb
fimuls
sbb
aas
xlat
mov
mov
mov
sahf
jnp
test
in
dec
jl
cli
mov
nop
push
cld
ss
lcall
not
dec
sbb
ds
in
xchg
xchg
lds
imul
jbe
jg
or
popf
xchg
sub
jbe
lahf
xor
pop
add
add
push
addr16
xchg
pop
das
cmp
mov
dec
jb
sbb
dec
clc
jnp
push
fdivr
fdivrl
in
mov
jo
cmp
cmp
mov
jg
movsb
inc
js
arpl
lcall
sbb
inc
aas
scas
xchg
jmp
imull
cltd
cmp
mov
inc
add
lcall
pop
push
dec
divb
sbb
in
pop
mov
hlt
jl
xchg
pusha
hlt
cmp
jge
in
xor
cmpl
stos
dec
lret
rol
aam
mov
or
in
sbb
pushf
dec
cwtl
fs
xchg
daa
xor
xchg
xor
pusha
push
xchg
dec
jge
dec
iret
in
adc
xchg
pop
stos
add
lods
cmpsb
mov
ja
pop
movsl
jbe
jle
in
pop
lahf
sbb
adc
sub
loop
pop
mov
int3
sbb
fimull
mov
sbbl
adc
sbb
andps
test
lock
mov
jg
arpl
dec
inc
jg
nop
inc
daa
pop
rcrb
sub
add
clc
push
nop
loopne
jns
out
pop
dec
pop
xchg
mov
jns
jb
and
test
es
xor
bound
mov
in
and
fs
xor
xor
and
push
pusha
aaa
lods
js
inc
inc
repnz
lahf
jmp
sbb
popf
cld
sahf
lea
out
push
jno
es
outsl
mov
stc
add
sbb
cmpsb
pushf
test
adc
adc
into
cli
sub
sbb
dec
in
xor
xlat
inc
ja
cltd
into
test
out
ret
lret
fs
hlt
cmp
xchg
dec
lcall
adc
daa
inc
movsl
sub
pop
jo
mov
mov
sub
das
ret
dec
subb
pop
sbb
jecxz
cs
movsb
cwtl
stos
or
mov
adc
push
in
aad
and
cmp
mov
cmp
adc
popf
pop
scas
addr16
movb
jbe
inc
sub
xchg
inc
xchg
push
mov
fldenv
jg
xchg
gs
lock
push
fcompl
xchg
add
aaa
jle
je
jb
popa
andl
push
sbbl
clc
cli
gs
imul
test
xor
cli
repnz
sub
nop
ljmp
jg
shrl
add
cmp
daa
std
sbb
jns,pt
stos
xchg
sahf
xor
inc
jecxz
mov
push
cmp
or
and
or
stc
scas
inc
lock
pop
xchg
jg
fisubrs
pop
ss
sbb
mov
xor
jl
out
imul
xchg
mov
push
out
push
adc
add
leave
cmp
shlb
test
shl
and
cmp
push
fisubl
pop
pushf
test
adc
inc
shrl
adc
testl
mov
shll
stc
aas
mov
adc
adc
jp
hlt
jno
add
ret
xor
add
cmp
dec
push
call
xchg
sbb
mov
cli
xchg
xchg
fucomp
and
cli
lea
xor
fs
cmp
and
add
xchg
rcll
mov
or
fiaddl
xor
mov
jl
xchg
movsl
insl
out
repz
loop
fs
sub
or
fld
and
or
xchg
cmp
test
add
cmp
mov
cli
push
sti
pushf
movsl
cld
ret
aaa
shrb
push
mov
out
dec
pushl
mov
aaa
inc
out
pushf
test
sbb
xchg
jae
bound
cmp
xor
or
test
mov
call
outsl
xor
mov
pop
adc
ds
mov
fs
xchg
mov
scas
fnstenv
add
mov
clc
pop
arpl
xchg
test
sbb
jns
loop
pop
shrl
add
sub
shl
pop
cmc
mov
pop
loope
into
xchg
daa
bound
push
loopne
or
das
dec
aad
xchg
enter
inc
hlt
cmpsb
mov
sbb
push
das
hlt
inc
adc
pop
clc
and
adc
jnp
and
cmp
push
nop
addr16
jo
ret
stc
imulb
adcl
fisttps
xor
cltd
dec
iret
add
enter
sub
lcall
xchg
push
fidivrs
data16
repz
sub
lods
xor
mov
add
and
cli
adc
mov
push
dec
and
push
scas
mov
push
mov
jmp
push
or
pop
xchg
fimull
pop
mov
xlat
es
or
pop
adc
inc
lods
push
push
and
lahf
jle
fs
outsb
jns
andb
lods
js
ror
sub
arpl
inc
test
fnstenv
std
inc
das
sbbl
lret
insl
test
pushf
gs
repnz
dec
xor
xchg
adc
add
orl
mov
push
xchg
or
mov
out
xor
mov
out
imul
scas
and
xchg
pushf
pushf
pop
xchg
sbb
out
inc
test
sbb
mov
call
icebp
or
std
ds
jo
rolb
loope
mov
lock
sbbb
and
pop
or
cli
gs
outsb
xor
xor
cwtl
and
mov
jmp
scas
sbb
in
std
mov
fisubl
loope
xor
bound
mov
and
frstor
inc
cmp
inc
cwtl
cmp
jns
lcall
cld
mov
lret
pop
loope
call
or
jo
inc
dec
mov
jb
mov
repz
xchg
sub
mov
cwtl
adc
orl
iret
push
add
shlb
fs
insl
xchg
lea
sub
fs
mov
mull
mov
fcomip
inc
aad
sub
dec
or
daa
lods
adc
push
xchg
inc
sbb
das
dec
stc
test
adc
pop
fcomps
sub
cli
xchg
add
hlt
mov
mov
and
dec
or
ret
jp
stos
mov
add
mov
pop
push
dec
cmp
sub
dec
clc
nop
mov
aad
inc
jl
ficoml
stos
std
int
push
nop
inc
les
mov
out
dec
mov
sub
movsl
mov
jle
test
push
fldl
cmp
pushf
xor
mov
sbb
lods
inc
hlt
stos
int
ret
pusha
ss
lahf
out
out
xor
addl
data16
adc
mov
sub
stos
mov
push
into
add
push
rorl
cmpsb
xor
cwtl
leave
nop
mov
add
ret
cwtl
lahf
inc
call
cld
sub
pop
mov
mov
xchg
xchg
push
inc
aas
lcall
in
push
std
adc
int
sbb
mov
loop
jecxz
sub
sub
xchg
cmpsb
jl
xor
dec
enter
xchg
fucomip
lcall
loope,pn
mov
or
xlat
lahf
out
inc
outsb
xchg
movsb
inc
jns
fdivrs
or
xchg
repz
push
lret
mov
pop
nop
xchg
jl
out
jg
daa
add
stos
loopne
xchg
xor
pop
sub
push
or
inc
mov
jns
jnp
pop
in
sbb
fwait
sub
rorb
lret
inc
or
dec
lods
mov
repnz
insl
jmp
lret
xor
sti
notb
adc
adc
dec
cmp
cmp
mov
fcoms
inc
repnz
cmpsl
pop
mov
faddl
jmp
orl
fwait
xchg
and
pop
sahf
int
cs
leave
pop
test
out
fildl
stc
andb
je
sub
rolb
sub
lret
es
in
mov
jmp
push
xor
mov
sub
push
shl
es
std
das
sub
mov
inc
je
mov
hlt
jle
jge
push
test
xor
aaa
pop
push
loop
push
fmuls
test
lods
lods
xlat
push
xor
lods
sub
sub
pop
push
pop
test
and
ret
jns
lcall
cmpxchg
scas
xchg
shlb
aas
lcall
stos
cmp
or
inc
sbb
hlt
push
adc
outsb
sbb
pushw
sbb
add
lods
jns
push
add
in
inc
jge
test
aad
out
pop
ljmp
shll
cmpl
xchg
shlb
iret
flds
sub
loope
je
jno
clc
stos
xchg
daa
push
dec
cmpxchg
pop
mov
cmpb
mov
inc
sub
or
xchg
divl
lods
adc
mov
add
aaa
popa
add
rcr
dec
sub
xor
stc
xchg
mov
es
or
and
jp
xchg
adc
imul
stos
mov
cmpsl
test
xor
in
mov
jge
aam
call
xchg
test
jecxz
adc
lds
sbb
xor
out
xor
data16
or
into
dec
push
cmpsb
cmp
and
mov
cmp
push
sub
loop
xor
sbb
stos
mov
mov
dec
int3
add
mov
pop
clc
int3
int3
xchg
mov
inc
lcall
inc
push
nop
outsb
mov
mov
bound
sub
in
mov
js
lods
push
outsb
aam
pop
xchg
jmp
and
mov
shrb
loop
gs
lods
mov
les
loop
fbld
iret
mov
jp
xchg
and
inc
int
cwtl
orl
inc
xor
or
or
pop
xchg
ret
addr16
andb
or
pusha
movsb
xchg
bound
push
pop
inc
lcall
adc
mov
push
imul
shlb
in
sbb
movsb
sub
filds
pop
jbe
call
filds
sbb
mov
mov
clc
push
xlat
xlat
mov
cltd
dec
cld
lret
sub
jbe
push
test
xchg
xor
adc
ja
das
stc
push
pxor
mov
cmp
mov
inc
push
int3
and
lea
and
faddp
mov
and
scas
inc
lahf
push
out
sub
fistpll
mov
or
sub
mov
out
les
inc
ja
stos
in
sub
cmc
cmpsl
mov
pop
nop
mov
insl
jns
and
mov
ss
pop
mov
mov
out
jne
xorb
lds
xchg
cmp
jp
xchg
in
mov
ljmp
mov
adc
leave
xchg
aad
lock
das
xor
pop
mov
ss
and
sti
or
or
jg
sbb
outsl
rcl
mov
sbb
divl
dec
es
inc
pop
stos
sub
cld
push
inc
push
stc
repz
dec
sarl
movb
adc
into
ljmp
lret
rolb
and
dec
cld
lret
cli
fwait
insl
xchg
ret
pushf
cmp
fnsave
clc
popa
rolb
cld
aaa
jge
cmp
sbb
dec
arpl
pop
cwtl
outsl
pop
sbb
add
and
je
push
nop
sub
push
shrb
into
fisttpll
xchg
stc
jb
sbb
dec
or
imul
dec
adc
int
clc
mov
xor
out
lahf
or
icebp
mov
addl
xchg
or
sbb
repnz
sbb
mov
push
dec
xchg
lahf
in
or
push
add
fcoms
sti
scas
lds
xchg
adc
test
inc
cmp
cmp
jb
je
std
iret
call
rorl
mov
adc
push
arpl
in
scas
jnp
xor
pop
and
stos
mov
adc
inc
fists
cmpsl
test
notb
adc
loopne
cmp
inc
xchg
ret
jle
lods
test
dec
mov
pusha
fs
insl
or
pop
in
sbb
jae
fs
mov
xor
push
iret
push
pop
test
xchg
iret
jb
or
mov
push
ss
mov
dec
jno
dec
add
js
dec
or
mov
jo
pop
movsb
cli
ss
mov
sahf
daa
and
and
jb
push
lret
loope
cmpsb
ja
inc
cs
js
xchg
rcrb
jle
cmc
hlt
push
das
cltd
inc
ret
adc
nop
jnp
pop
psrld
push
stos
gs
or
cld
shrl
xor
aad
pop
mov
xchg
mov
xchg
mov
insb
cmp
clc
cmc
jge
aaa
int3
xchg
scas
fdivp
leave
ret
pop
movsb
pusha
sbb
outsb
cmc
jmp
adc
mov
std
mov
xor
and
lods
jl
push
cmc
inc
jae
ret
lds
std
mov
jmp
xlat
jmp
scas
inc
aad
jp
xor
in
jb
dec
add
fldcw
movsl
cmp
adc
nop
jp
jg
jns
pop
aaa
iret
xchg
mov
adc
jg
jbe
out
call
cli
xor
stos
adc
mov
aad
adc
sbbl
ret
jo
push
and
inc
loope
fstpt
push
cmp
sbb
repz
fdivrl
sti
jle
inc
pusha
arpl
repz
inc
mov
adc
push
ret
and
lods
cmp
pop
or
inc
mov
jae
frstor
mov
imul
stos
mov
aas
mov
mov
ror
fidivrl
inc
loope
pop
push
push
cmc
cld
jge
mov
and
push
xor
call
xchg
dec
add
cmp
add
iret
js
jns
or
xchg
sti
mov
add
icebp
notl
mov
cli
mov
nop
xor
mov
rcrl
adc
test
scas
loop
sbb
mov
jge
andl
stc
fstp
mov
add
sub
test
inc
lods
ds
mov
mov
jl
inc
stc
jecxz
in
scas
test
in
lcall
dec
inc
push
testl
mov
inc
stos
in
mov
cmpsb
mov
lcall
mov
hlt
push
inc
xchg
mov
pop
pop
mov
cmp
jge
pop
sbb
pop
push
adc
test
mov
lods
imul
sahf
clc
popf
xchg
insl
mov
fistl
pushf
jle
out
sub
and
xor
pop
cmp
out
call
mov
xchg
mov
cmp
arpl
out
mov
jecxz
sti
and
mov
xchg
mov
xchg
mov
cwtl
jns
push
push
ljmp
xor
cmpb
pop
movsb
insl
xchg
andb
out
das
mov
imul
adc
lock
cltd
add
mov
inc
sbb
fs
and
jno
or
mov
movsb
mov
and
cmp
fwait
push
cltd
push
xor
addl
cmp
imulb
pop
push
add
add
pusha
push
or
icebp
mov
cmpsl
insl
out
loope
add
mov
mov
jmp
lock
subb
jp
out
loope
dec
out
mov
pop
mov
jae
scas
or
jo
pop
lret
mov
or
mull
sbb
xchg
sarb
adc
adc
dec
aas
jnp
mov
cmp
fldpi
cltd
mov
jmp
into
and
outsl
out
cs
ret
int3
outsb
lcall
pop
aas
out
push
inc
cmp
or
jle
adc
movsl
rclb
fstl
pop
xchg
pusha
jl
scas
lock
mov
repnz
shll
pop
mov
aam
push
cmc
dec
movsl
movsl
out
in
jg
or
ret
jne
lahf
adc
add
ret
rcrl
pop
cmp
mov
sub
mov
and
insb
add
and
jb
pop
and
cmp
mov
push
in
insb
pop
lock
insw
inc
mov
mov
xor
dec
push
jns
ror
add
push
push
daa
test
cmpsb
testl
dec
xchg
jne
mov
imul
mov
cwtl
fsubrl
shl
out
mov
xchg
jp
aad
push
ja
enter
cmc
in
inc
xor
ret
add
lock
aaa
fs
cmp
dec
cmpsl
jbe
push
jae
jecxz
sbb
dec
xchg
xchg
inc
jno
and
icebp
push
xor
inc
adc
push
fstpl
clc
fs
lcall
inc
in
sbb
adc
movsb
adc
dec
fcomps
stos
or
pop
sbb
mov
jno
je
and
push
clc
mov
cmpb
stc
or
mov
xchg
rorl
xor
nop
inc
xlat
cmp
inc
dec
jo
ficoms
popf
cs
inc
push
dec
sub
xor
int
jns
pop
and
jnp
orl
daa
out
fs
roll
add
ljmp
and
fcoms
and
fwait
cmpsl
sub
cmp
sub
sub
and
push
sahf
in
ja
hlt
ret
xor
xor
mov
push
sbb
enter
xor
cwtl
lahf
bound
cmp
mov
inc
and
push
aas
add
int3
add
imul
je
mov
mov
jno
fildll
push
scas
mov
sahf
mov
jo
in
adc
daa
ficoml
xchg
push
xchg
dec
mov
cwtl
mov
lods
push
out
sbb
fcoml
jmp
or
aad
xchg
shlb
nop
fdivr
pop
xor
mov
cmc
ret
mov
ja
xchg
jl
or
movsb
mov
call
mov
lock
fdivrs
out
mov
mov
rclb
cmp
clc
jp
rcrl
jl
jle
fmuls
jb
daa
lret
pop
or
inc
fucomp
add
aad
and
sbb
cmp
add
jmp
jl
fs
push
mov
inc
cltd
outsl
or
out
rorl
das
outsl
icebp
loope
aam
scas
lea
nop
test
add
dec
into
add
rorl
fistpl
in
pop
movsb
adc
mov
xchg
das
sub
movsl
adc
movsl
mov
jo
mov
pop
lahf
mov
inc
xor
daa
jmp
cmp
jmp
and
cmc
sub
adc
pop
scas
pop
and
inc
push
into
mov
mov
sub
iret
jns
movsl
xor
sub
mov
fidivl
ss
outsl
imul
mov
aam
shlb
fdivr
ret
inc
insl
and
inc
ret
dec
jmp
popa
pop
jns
xchg
xlat
dec
pushf
xor
orl
push
fcmovbe
pop
add
or
sub
addr16
addr16
push
mov
sub
fistps
add
repz
mov
orl
xor
cmp
pusha
or
bound
aaa
inc
daa
push
fst
lcall
jno
div
ja
daa
test
add
insb
cmp
add
dec
jle
dec
les
into
xlat
jmp
xchg
test
shrl
andb
frstor
adc
adc
adc
bound
adc
jge
subb
mov
mov
fdivs
sub
dec
dec
push
aam
inc
popf
mov
leave
test
pushf
out
divb
lods
ljmp
aam
add
dec
cmp
inc
xor
or
stc
loope
cli
add
cwtl
xchg
js
jo
divb
pop
sub
repz
push
repnz
cltd
cmp
in
stos
mov
jecxz
jmp
xchg
clc
and
xchg
aaa
inc
pop
stc
add
jp
jo
xchg
pop
orb
add
sbb
xchg
aad
mov
mov
cs
or
adc
dec
adc
adc
pop
cmp
cmpsl
sub
xor
dec
into
sbb
xor
inc
fcmovb
std
mov
and
jbe,pn
jbe
fistps
mov
je
test
add
clc
sbb
adcb
ds
cmp
lods
xor
in
cwtl
ja
push
mov
jmp
jno
sbb
sahf
shlb
ljmp
sar
add
orl
fcmovnu
filds
mov
pop
xchg
psubd
push
mov
lds
movsl
mov
mov
fwait
adc
push
xlat
negb
push
and
movsb
stc
pusha
jne
scas
test
jl
cmp
inc
mov
xchg
mov
pushf
or
rclb
inc
lret
push
pop
aad
mov
daa
and
imul
lcall
popf
hlt
mov
mov
shlb
daa
sbbl
xor
push
repnz
lcall
fnstcw
xor
lds
pop
pushf
xchg
jp
mov
int
aam
jae
push
sub
mov
xchg
fisttpll
rorb
negb
movsb
js
or
pop
scas
xchg
and
pop
adc
jns
stc
out
xchg
mov
mov
enter
outsb
lret
cmp
lret
sbb
jecxz
xchg
inc
inc
push
repz
movsb
fcoms
xor
mov
pushf
leave
out
pop
jmp
push
mov
mov
adc
jle
mov
mov
xor
repnz
cltd
lret
lahf
out
lret
in
fxam
shlb
or
imulb
push
xor
push
ds
test
mov
adc
iret
push
imul
jnp
inc
jo
mov
sbb
inc
loope
js
cmp
jmp
add
xor
dec
sub
jae
ljmp
das
fmulp
jmp
add
addl
incb
and
pop
pop
int
jge
adc
pop
inc
loop
repz
dec
jecxz
call
sbb
and
and
mov
sub
fstl
je
ret
xor
ret
ror
hlt
sub
inc
pop
mov
fildll
push
lret
in
mov
out
imul
inc
mov
push
inc
jns
jns
mov
fs
xor
bound
fsubl
loopne
shlb
sti
pop
or
lock
xor
lods
inc
mov
and
xchg
enter
dec
gs
cmp
lds
sahf
mov
inc
or
sbb
shld
pusha
fisttps
jb
lea
into
cmp
lods
jns
and
in
cmp
hlt
das
pop
mov
xchg
movsb
fisttpll
int3
movsb
sub
inc
xor
mov
dec
repnz
call
jo
xchg
lcall
add
outsl
add
clc
or
iret
lret
cwtl
dec
data16
xor
pop
jne
ficoms
mov
lds
lock
in
lcall
mov
dec
out
push
cld
mov
push
mov
pop
ficomps
mov
jnp
outsb
dec
pop
fildl
ret
cld
sbb
sbb
adc
jmp
shlb
setae
lods
push
ret
test
aaa
push
add
cmp
push
fcompl
dec
cmp
push
test
andl
push
mov
mov
cmp
xor
cmp
xor
sahf
mov
test
sub
cmp
dec
ljmp
mov
aaa
inc
aaa
out
and
and
push
adc
stc
inc
push
ljmp
imul
testb
fsubrs
lock
out
sbb
out
inc
inc
jae
enter
test
xchg
push
inc
scas
nop
dec
xchg
test
adc
push
or
popa
add
movsl
ss
and
push
iret
out
push
out
dec
out
movsl
pusha
mov
lret
mov
sub
push
push
repz
test
scas
xorb
adc
xor
jo
pop
mov
fiadds
cltd
pop
cmp
push
cmpl
sub
sub
into
dec
mov
sub
int
stos
cmp
repz
and
add
bound
rcll
aad
dec
divb
movsl
rcll
mov
or
inc
popf
pop
sub
in
sti
iret
mov
ljmp
jmp
inc
int3
imul
scas
mov
pushf
das
into
int
push
lret
xchg
xlat
jno
push
cmp
mov
pop
mov
dec
stos
dec
dec
xchg
cmpsb
fcomps
sbb
inc
mov
mov
mov
mov
jecxz
push
cmp
in
int
pop
push
mov
xchg
inc
lock
iret
stos
outsl
inc
push
int
std
push
dec
pop
leave
adc
jmp
sbb
fldl
aas
lea
es
sarl
dec
xchg
cltd
xchg
mov
mov
mov
dec
ss
mov
std
jecxz
movsl
adc
leave
dec
mov
cmp
mov
in
dec
popf
ja
inc
testl
add
cmpsl
add
push
gs
sahf
sahf
push
mov
call
mov
jae
mov
shlb
ret
jno
pop
out
adcl
jle
nop
int
jle
jp
mov
pop
xchg
out
and
pop
mov
sbb
bound
jecxz
test
nop
out
popa
jl
lock
int3
push
aad
xchg
jmp
lret
lods
lret
add
dec
sbb
sub
ljmp
aas
mov
mov
roll
clc
mov
mov
lret
dec
dec
lret
xchg
jne
sub
aad
jnp
inc
stos
jo
xlat
ret
int3
cli
ss
mov
ficoms
adc
and
cmp
or
mov
xchg
ret
clc
les
mov
dec
fs
cmp
mov
xor
loopne
push
daa
mov
les
div
ret
fstps
rclb
movsl
jmp
fsts
fisttpll
and
adc
popa
push
mov
push
std
and
pop
in
xchg
filds
jle
mov
bound
inc
mov
mov
mov
push
xor
pop
dec
jo
clc
pop
out
test
push
xorl
mov
lock
dec
xor
lock
stos
fildl
inc
mov
inc
movsl
jbe
push
stos
jmp
xchg
sbb
mov
mov
pop
mov
fwait
sub
mov
push
ss
enter
inc
insb
sbb
fst
inc
rcl
mov
mov
icebp
push
mov
movsl
jecxz
jecxz
cmpsl
mov
mov
stos
sub
loopne
inc
push
dec
cmp
xchg
mov
outsb
xchg
xor
pop
inc
test
mov
jl
cs
add
push
leave
mov
cli
add
rorb
jle
jae
cmp
lcall
stc
shl
cli
cmp
sub
sbb
jle
aam
and
sbb
bound
sbb
shrb
mov
sub
dec
jno
rolb
out
loope
inc
test
cwtl
adc
cmp
shll
cmpsl
aaa
cli
push
jb
mov
lds
cmp
inc
and
pop
jge
ja
cmp
adc
mov
pop
into
xlat
xchg
xor
pop
add
imul
sbbb
hlt
addr16
aad
cmp
dec
std
movb
daa
sbb
mov
inc
mov
lods
stc
add
push
dec
mov
fdecstp
xor
fildll
push
mov
sbb
push
mov
sub
das
std
jge
pop
int3
inc
add
push
cmp
inc
insb
ja
syscall
xlat
mov
jbe
repnz
test
rcrl
cmp
jae
and
add
cmpb
add
mov
mov
out
cmp
in
stos
fldt
dec
xor
jae
in
jl
sbb
xchg
jmp
adc
cs
sbb
cltd
push
mov
int
mov
rorl
and
insb
cmpsl
frstor
lcall
adc
subb
or
cmp
jp
sti
sbb
loope
jg
aad
pop
lret
mov
lret
or
cld
pusha
repnz
jmp
test
mov
stos
xchg
lret
jae
rolb
lret
out
rclb
out
mov
xor
das
sti
add
mov
push
out
sbb
lahf
cwtl
js
loope
test
mov
aad
lahf
jecxz
je
sti
mov
cmc
dec
aam
mov
and
pop
cs
push
or
aad
jp
or
cltd
sbb
lock
xor
leave
scas
jl
add
and
mov
icebp
jns
fs
das
jp
cmpsb
mov
xchg
nop
mov
lcall
es
sbbl
sahf
or
inc
daa
jo
xor
addr16
jl
aaa
or
and
sub
aaa
and
mov
mov
movsl
jmp
test
roll
arpl
orb
fadds
mov
mov
enter
stos
mov
mov
cld
aas
xlat
mov
arpl
xor
mov
xor
sub
adc
scas
mov
ljmp
add
std
sub
push
add
in
lret
cmpsb
lods
push
pusha
aad
inc
clc
adc
xor
mov
pop
jno
mov
subb
mov
pop
push
lcall
mov
jmp
add
movsl
dec
xlat
lock
shll
lcall
pushf
daa
mov
pop
shlb
iret
cmp
xchg
out
int3
pop
add
inc
push
sub
inc
mov
cld
lods
pop
mov
mov
ds
lahf
push
xchg
in
lds
vmovlps
fcompl
test
dec
fcoms
fmul
addl
jle
cmp
or
sub
out
insl
fwait
cmpsb
arpl
mov
inc
lock
rcll
and
enter
test
pop
repnz
aas
imul
dec
adc
daa
das
gs
xchg
jnp
xchg
aaa
adcl
inc
adc
adc
mov
sbb
jns
pop
sbb
and
mov
shrb
mov
roll
in
lcall
xor
out
lcall
cmp
dec
scas
xchg
movsb
data16
gs
mov
mov
dec
dec
jle
fdivl
sub
pop
push
sub
or
sub
sub
data16
test
rorb
ret
push
inc
out
stc
ret
fwait
data16
mov
fidivl
pop
int3
push
jnp
addb
stc
mov
imul
push
outsl
push
adc
out
out
dec
cmpsl
pop
loope
push
ret
int3
flds
arpl
les
and
bound
pop
add
jns
lea
decl
test
mov
movsb
dec
icebp
in
test
mov
sub
inc
imul
mov
xchg
adc
out
push
pop
dec
inc
sub
cmp
aad
and
popa
movsl
xlat
popa
cwtl
and
lea
in
shll
and
mov
pop
push
xchg
aam
int
fcmovbe
or
movsl
xchg
movsl
cwtl
xchg
fidivl
mov
jg
dec
and
nop
scas
cmpsb
cmpsl
mov
cmp
ret
in
push
insb
shrb
mov
mov
mov
loop
adc
mov
fwait
std
xor
mov
cmp
push
adc
inc
sbb
ret
not
push
enter
or
call
fisubrl
add
dec
xor
ror
sub
out
sbb
xchg
and
mov
lods
dec
xchg
dec
mov
adc
cld
jae
rorb
adc
pop
add
lds
loopne
insl
loope
test
add
push
push
dec
xor
or
stc
fidivs
ret
mov
jp
in
or
daa
in
sbb
out
push
or
fcmove
mov
loopne
insl
mov
jo
ja
ja
and
js
jo
movsl
lahf
gs
cmp
in
sub
xlat
jmp
inc
int3
je
mov
repnz
je
inc
sub
mov
inc
jge
push
mov
inc
cmpsl
mov
prefetch
mov
dec
sub
push
add
adc
adc
fidivrs
mov
into
imul
cmpsb
fdivrl
adc
cmp
or
and
lea
mov
mov
out
testb
jecxz
jae
shr
dec
sbb
pop
rcr
jle
sub
jl
jmp
mov
jg
sbb
mov
pop
je
jl
lea
jle
rcll
fnstsw
jmp
mov
or
mov
insl
push
push
das
lock
mov
loop
stos
in
add
mov
ret
loope
addr16
test
repnz
fidivs
sahf
pusha
je
pop
or
inc
popa
add
jmp
in
xchg
add
lods
mov
stc
out
pop
pop
scas
lods
xchg
lods
jl
or
rcrl
ss
inc
sbb
add
xchg
out
lods
pushf
repnz
dec
cli
dec
inc
and
lods
jp
rolb
icebp
cs
popf
jnp
push
mov
mov
fsubrs
adc
lret
repnz
and
mov
cld
sub
popf
push
push
xchg
push
lods
and
mov
cmpsl
out
pop
rorl
pop
int3
xlat
lretw
fldcw
pusha
jge
sti
inc
inc
jbe
and
push
xchg
inc
jae
mov
mov
pop
cmp
mov
dec
pop
sbb
push
daa
cmp
incb
sub
adcl
shrb
mov
cmpsb
push
jle
dec
push
dec
nop
fnop
out
das
loopne
and
fs
push
mov
xor
into
fs
jae
into
in
xchg
repz
mov
lahf
pop
jbe
xor
out
out
sub
mov
outsl
mov
sub
pop
pop
in
xor
mov
push
mov
cmp
mov
jmp
insl
mov
popf
leave
jle
pop
or
loope
cmp
and
test
mov
or
sbb
mov
addl
pop
subl
mov
jno
mov
je
loope
lahf
call
xchg
cmc
movsb
jnp
or
push
sbb
dec
sbb
mov
sbb
lcall
test
fs
out
cmp
cmp
leave
lcall
jnp
fidivrl
push
mov
iret
cmp
int
add
cmc
fs
fisubrl
xchg
and
cmp
add
mov
lds
es
add
ja
jne
int
xchg
les
cwtl
sub
int
sub
lret
outsb
shl
xchg
inc
and
out
daa
xchg
js
jmp
cmp
xlat
cmp
scas
outsb
dec
dec
sbb
xor
mov
cmp
push
xchg
shl
stos
and
dec
adc
mov
and
ret
dec
adc
sbb
test
or
sbb
sbb
insb
call
movsb
dec
push
inc
mov
cltd
sub
mov
cwtl
pop
out
in
je
push
loopne
lcall
and
inc
nop
aas
lock
shrl
in
dec
in
sbb
push
xor
add
rep
adc
jbe
shrb
sbb
decl
sub
adc
dec
jae
sub
pop
out
loopne
dec
add
add
push
sahf
xchg
dec
jmp
ss
jmp
jno
inc
ret
push
cli
cmpsb
push
lods
cmc
cmp
xor
mov
sub
inc
inc
sahf
mov
repnz
dec
out
outsb
and
fimuls
push
dec
xchg
icebp
rorl
aaa
sub
mov
pop
pop
cmpsl
mov
inc
popa
sub
ja
scas
aad
sub
negb
push
fsubr
repnz
xlat
outsb
in
setnp
cltd
add
stc
or
xor
insb
pop
fdivs
mov
andl
sub
sbb
xorb
ds
mov
adc
jne
test
lock
mov
mov
push
leave
inc
sbb
jbe
ds
pop
test
rcrb
sub
xchg
mov
inc
aaa
pop
and
call
adc
in
mov
clc
fsts
mov
cmp
pop
jb
sub
les
mov
jne
imul
pop
xor
cmp
mov
and
fsubs
int3
in
jns
pop
leave
or
dec
in
rclb
xchg
cmp
push
cs
ss
aaa
repnz
bound
call
stos
jecxz
mov
xor
jp
sub
jo
xchg
xor
aad
sub
ja
cmp
test
ror
or
arpl
mov
xor
push
test
and
dec
push
into
mov
orb
loopne
outsl
jecxz
scas
out
or
pop
das
int3
push
bound
outsl
cli
mov
inc
push
ret
in
dec
ds
jne
push
enter
and
push
pop
sbb
push
xchg
call
push
and
and
into
hlt
sbb
aas
adc
mov
dec
pushf
push
shl
mov
addr16
push
int
pop
adc
gs
shr
imul
sbb
xchg
ficomps
cwtl
pop
sub
add
test
pop
shl
ret
sbb
ret
sub
jne
pop
xchg
fdivr
loop
push
jb
push
push
inc
outsl
sub
xchg
lret
out
pop
push
out
mov
mov
cwtl
fisubrl
cmpsb
push
movsb
inc
call
mov
nop
push
test
sbb
in
sub
cmpsl
shrl
cmpsb
push
sti
push
cwtl
add
mov
xchg
cs
dec
sbb
aas
ds
push
data16
pop
or
or
shlb
sbb
shrb
repnz
pop
pop
test
movsb
ficomps
cli
sub
dec
cmp
stc
lcall
pop
push
xchg
add
shlb
data16
inc
jae
mov
dec
jmp
lahf
or
push
pop
sti
test
es
cwtl
arpl
stc
shll
icebp
pop
sbb
shl
dec
xor
xor
fisttpl
mov
cmpl
scas
add
jp
xchg
scas
ror
push
nop
cmpl
sub
pop
mov
jmp
and
mov
insl
je
fldcw
divl
cmp
je
jne
push
add
mov
jp
ss
inc
ljmp
jae
das
jecxz
bound
aad
jae
dec
fsts
jne
loope
ja
or
sub
adc
scas
inc
icebp
rorb
sub
imul
xor
jl
push
or
sbb
push
add
notb
adc
sub
movsb
bound
or
jae
push
cli
xchg
gs
std
repz
add
push
push
in
push
push
xchg
adc
and
loopne
jno
aaa
jnp
and
or
adc
fistps
das
stos
xchg
sbb
bound
push
push
out
or
xor
shl
orb
leave
test
loop
jmp
jae
orb
sarb
cltd
mov
mov
or
fldcw
sbb
pop
cmp
push
call
push
fwait
sub
stc
or
sub
fwait
in
call
sbb
pusha
cmp
rorb
cmc
sbb
or
ja
mov
push
in
je
test
test
push
sbb
out
insb
xor
loopne
shlb
mov
fisubs
test
cmp
shrl
inc
mov
imulb
or
lcall
mov
xchg
outsb
insb
mov
test
out
inc
add
aaa
cmpsl
movsb
cmpsb
fsubrs
psllw
in
pop
in
push
hlt
imul
mov
sub
or
jle
fs
test
inc
dec
jecxz
xchg
imul
dec
push
fidivrl
leave
jmp
lahf
mov
mov
insl
rcr
test
fdivp
push
inc
mov
push
shr
or
test
mov
and
cmp
xor
lock
push
in
repnz
hlt
push
subb
xchg
push
adc
inc
mov
or
incl
cmp
sbb
and
or
jb
xor
out
jl
jle
stos
lret
je
aam
mov
mov
xchg
pop
hlt
or
popf
fistpl
add
mov
add
mov
mov
leave
pop
sub
push
lds
inc
xor
loop
push
xchg
push
pause
jo
adc
sbb
sub
sub
decl
pushf
in
int
dec
clc
inc
or
enter
les
add
std
lock
ss
fmull
stc
push
xor
cld
lahf
out
cmpsb
xchg
dec
adc
aas
inc
outsl
hlt
aas
ljmp
adc
jns
cmp
pop
scas
push
in
sbb
xor
sub
pusha
inc
adc
in
mov
mov
out
jno
das
mov
push
pop
mov
movsl
jg
out
loop
out
fmul
pop
push
sbb
call
iret
jb
push
sub
popf
or
xchg
jmp
bnd
in
out
je
fstp
aas
mov
fdivs
push
int3
mov
pop
stc
mov
popa
or
push
int3
test
lahf
jle
jge
pop
mov
add
jecxz
push
lds
fmul
fcmovnu
xchg
mov
scas
das
pop
imul
pop
jno
test
xor
cmp
xchg
ljmp
and
cmpl
mov
cmp
out
xor
lret
add
xchg
hlt
mov
ret
enter
xchg
lret
cmp
inc
cltd
jp
cmp
mov
sub
push
push
dec
pop
mov
js
jae
lds
repnz
ja
inc
mov
std
shlb
jge
sub
mov
and
xchg
mov
jecxz
loope
mov
data16
fbstp
sub
stos
sarb
das
nop
sti
and
adc
call
fcomps
pop
ss
dec
pop
pop
dec
dec
pop
inc
xchg
lea
shrb
push
push
mov
fwait
movsl
push
sbb
dec
sbb
fildl
mov
les
in
stos
aad
test
adc
cmp
cs
out
push
mov
cli
inc
dec
sbb
pop
adc
push
lcall
sbb
push
jnp
stos
out
loope
or
pusha
shlb
pop
sub
cld
inc
xchg
xchg
or
test
jecxz
inc
js
push
mov
cmpsl
xchg
out
data16
outsl
lret
faddp
cmpsb
add
cmp
call
es
out
jp
add
and
or
cmpsb
sub
push
js
test
cmp
jne
movsl
jbe
xchg
xchg
xor
xor
push
dec
xor
cwtl
jns
add
xor
in
sub
add
jg
rorl
adc
jmp
mov
add
mov
lods
shlb
or
and
xchg
fstps
xchg
mov
fistpll
out
fistpll
xchg
aaa
js
movsb
lea
in
mov
mov
push
sub
sahf
push
jb
mov
mov
mov
mov
jecxz
mov
cmp
fists
inc
push
add
mov
pushf
pop
lret
and
xor
mov
xchg
mov
push
add
jno
add
xchg
xor
xchg
pop
icebp
mov
push
js
push
ss
ret
push
add
in
cltd
xchg
jno
ret
popa
jb
mov
mov
mov
roll
push
or
xchg
aam
test
loope
shlb
and
dec
jle
cmc
cmp
xorl
shr
push
cmp
out
cmc
mov
cmpl
add
and
xor
xchg
mov
daa
cmpsb
rorl
mov
and
fiaddl
cmpsl
push
xchg
mov
push
andl
xchg
sbb
out
aad
dec
lahf
addr16
out
sub
mov
xchg
pop
ffreep
lea
adc
scas
dec
stos
jae
loopne
push
sbb
jae
stos
xchg
add
cmp
dec
pop
mov
test
fsubs
faddl
jmp
cli
mov
rorb
pop
mov
cmp
leave
mov
daa
mov
xchg
sti
or
lcall
xor
sub
loop
in
scas
push
xchg
cmc
add
adc
and
mov
cmp
and
mov
movsb
add
cs
iret
xchg
inc
dec
out
and
in
pusha
dec
xchg
mov
es
xor
xor
lock
jno
pop
out
or
xchg
test
lret
pop
lahf
in
ds
loop
inc
cmp
mov
adc
xor
daa
insl
cmc
mov
sarl
mov
mov
add
pushf
loopne
push
or
xor
test
daa
test
fildl
dec
arpl
cmpb
mov
out
mov
sub
iret
pop
orl
jns
push
les
xlat
shll
cmp
mov
dec
and
jecxz
or
push
add
andl
dec
adc
add
mov
out
mov
push
addl
mov
cmpsl
pop
out
les
sbb
mov
inc
mov
push
out
xor
pop
mov
pop
sbb
cmp
inc
xor
xor
rclb
cmpsl
adc
insl
js
movsb
sti
mov
icebp
jmp
repnz
xchg
aam
in
adc
pop
inc
inc
cmp
addr16
in
addl
lods
repz
testl
add
pop
fwait
or
dec
stos
and
add
les
push
add
push
dec
cmp
stos
icebp
mov
fisttpll
mov
sbb
lcall
gs
mov
inc
dec
xchg
movsb
mov
outsl
test
in
push
or
popa
cltd
mov
mov
push
push
dec
std
fucomip
fsubs
mov
stc
mov
jge
inc
imul
int
imul
jp
sbb
stc
std
ljmp
popf
cmp
and
inc
push
stos
into
sub
ror
add
pop
cmp
test
test
adc
add
mov
xor
inc
sahf
mov
mov
pop
add
aas
jp
repz
mov
dec
and
sbb
aam
pop
mov
ffreep
jno
mov
inc
rcl
dec
inc
test
cmpsb
sti
ret
in
mov
std
addl
push
dec
push
das
xor
xlat
stos
pop
leave
fwait
dec
jb
mov
and
div
adc
mov
cmpsl
or
fwait
xor
out
aaa
xchg
repz
cld
jae
daa
test
dec
out
jae
cmp
pop
dec
xor
adc
popf
xorb
xor
imul
mov
loope
mov
hlt
outsb
dec
jnp
pop
push
jnp
in
sbb
les
hlt
mov
fsubrs
ret
push
cltd
icebp
jb
fisttps
add
xchg
shlb
aas
fistpl
aad
bsr
stos
les
jo
pop
pop
inc
rorl
pop
arpl
mov
xchg
push
pushf
mov
das
das
sub
cmp
dec
sub
jecxz
movsb
cmp
add
push
leavew
mov
push
push
icebp
sti
arpl
add
leave
adc
ret
movsb
xchg
mov
ret
cmpsb
mov
pop
arpl
cwtl
lcall
jae
jbe
aas
lahf
jbe
xor
lock
gs
fistpl
inc
lods
cltd
stos
adc
add
adc
pop
cmp
mov
bound
in
arpl
inc
jns
in
in
lea
xchg
fbstp
call
add
cmp
out
or
test
xchg
jp
adc
fwait
cmc
mov
cmp
jecxz
sbb
mov
cmp
pop
stos
in
lret
ret
data16
ret
mov
es
int
pop
cmp
adc
icebp
sbb
aam
inc
jno
and
jmp
aam
push
lock
push
aaa
pop
adc
shll
cmp
call
and
inc
hlt
test
cltd
sub
pop
inc
inc
cmpsl
push
xor
imul
sbb
fimuls
mov
ja
and
les
hlt
push
jl
xchg
jecxz
adc
ds
stos
jnp
clc
lock
ret
aam
out
mov
or
cmc
jae
aas
sbb
jmp
pop
mov
push
test
inc
pop
fs
lods
xor
dec
out
mov
out
in
cmc
out
add
cmovge
ljmp
dec
popf
movsb
addl
sub
lea
nop
and
loope
mov
subb
scas
jno
jae
insb
je
mov
sbb
and
sub
jnp
xor
push
cs
sbb
imul
inc
mov
add
ror
scas
bound
ja
xor
out
fwait
sub
mov
sahf
addl
cltd
pop
jle
shrl
pop
sbb
das
testl
mov
sbb
nop
addr16
inc
in
rcll
push
cmp
push
add
popa
inc
inc
or
fstpl
in
pop
add
mov
fidivrl
mov
repz
andb
push
pminub
mov
popf
out
nop
stos
outsb
sbb
test
jns
add
lods
insb
push
jg
and
rcrl
push
jo
sub
inc
mov
lods
sbb
cli
rorb
mov
shlb
mov
cmpsb
inc
xor
in
ficomps
popa
xor
mov
pop
std
test
or
roll
in
jmp
loopne
xchg
pop
mov
push
insl
adc
pop
lock
int3
and
sbb
js
push
sarl
lods
ret
mov
dec
add
mov
mov
cmp
xchg
stos
rclb
push
aam
ss
jmp
insb
outsl
pop
pop
shrw
cmpl
jecxz
push
inc
cmpsb
int
loope
xor
int
sub
xchg
clc
gs
sub
out
push
fadds
xchg
cwtl
outsl
scas
sbb
push
jle
or
movsb
gs
ja
stos
push
jecxz
add
out
dec
xchg
aaa
out
push
mov
fidivrs
and
out
mov
push
int
xor
test
cmpsb
iret
aas
pop
lret
mov
aam
cmp
mov
push
movsl
imul
add
pusha
push
int
mov
mov
mov
cmp
in
sbb
cmp
xor
and
jne
pop
xchg
rolb
adc
pop
pop
cltd
icebp
fildl
movsl
in
jmp
cld
nop
cmp
and
das
sahf
cmp
push
sub
inc
dec
xor
xchg
sub
call
cmpsb
inc
mov
push
inc
in
pop
sti
xor
inc
pop
loop
fs
jo
cmp
repz
inc
iret
inc
lahf
lock
sbb
fcomps
jmp
jecxz
cmc
jb
movsl
adc
mov
adc
data16
xchg
fistps
xor
mov
mov
xchg
mov
lcall
push
jne
mov
rcl
mov
mov
mov
jge
dec
dec
jge
iret
sbb
jae
leave
adc
fcomps
loopne
rorl
mov
sbb
push
sub
or
rorl
scas
mov
ret
push
dec
nop
inc
xchg
scas
insl
loop
add
lods
adc
gs
les
and
jge
mov
mov
sub
mov
addr16
and
jne
jle
shlb
or
sub
daa
dec
sbb
jg
aaa
xor
bnd
les
push
dec
xor
xor
cltd
movsb
push
or
movsb
xchg
icebp
pop
jo
and
inc
jb
fisttpll
andl
adc
and
or
mov
dec
adc
loope
push
clc
xchg
mov
repnz
into
aaa
add
sub
cmp
pop
test
push
xor
lret
sbb
and
gs
mov
cmc
mov
pop
pop
lea
push
aam
call
pop
push
mov
andl
or
dec
lock
lret
cmp
mov
imul
push
out
pop
fldl
clc
xor
into
mov
dec
xchg
push
cs
movsl
mov
adc
call
jo
inc
mov
scas
call
idiv
sub
lds
push
sbb
and
mov
shrl
xor
xchg
data16
out
sahf
dec
movsb
xchg
ficoml
subb
or
mov
in
dec
xchg
mov
out
lret
cmc
inc
xor
dec
fisubl
jne
in
les
ds
filds
clc
orb
leave
mov
imul
lds
fistpll
sbb
mov
sbb
sub
mov
popf
es
sbb
push
mov
and
add
jne
adc
icebp
pop
arpl
mov
shll
pop
adc
ret
jp
cld
sub
fisttpl
pop
push
scas
cmp
adc
aad
cs
mov
xlat
into
fsts
fidivrs
push
loopne
cmpsb
cld
lods
or
xor
outsl
sub
cltd
outsb
stos
daa
in
shll
insl
dec
push
lods
lock
add
mov
xchg
popa
insl
mov
add
dec
xchg
movsb
or
and
pop
cmp
fstps
dec
outsb
orb
adc
xorl
add
mov
push
decb
fidivrs
sbb
sbb
mov
cmp
fsubp
loopne
ret
mulb
inc
jmp
stc
int
jge
sub
andb
into
adc
mov
decl
xchg
fstl
lret
inc
cli
add
inc
cmc
pop
in
lret
sub
mov
cmpsl
mov
inc
mov
loop
mov
imul
inc
xchg
inc
scas
aam
js
inc
inc
int
test
repnz
and
out
dec
and
dec
and
cs
bound
daa
xchg
cs
jae
jb
sahf
leave
mov
push
sub
das
xor
xor
fcomip
inc
adc
xchg
testb
movsl
ljmp
mov
xchg
stc
fcoms
jge
popf
jne
xchg
jb
repz
sbb
sbb
inc
rcl
jg
or
pop
movsl
fnstenv
adc
in
sub
dec
stos
sub
mov
insl
fnstcw
mov
in
xor
inc
push
outsl
stc
add
rcl
divl
testl
sbb
aaa
cmp
dec
dec
mov
jnp
insb
lea
iret
push
mov
int
push
sbb
mov
xchg
inc
jl
mov
xchg
outsb
popa
shll
push
data16
push
pop
cltd
jo
xchg
inc
iret
es
push
aam
mov
orb
adc
sub
pop
out
jbe
mov
ljmp
popa
push
ds
or
cmp
outsl
scas
jb
lods
ds
add
sbb
fwait
mov
jecxz
mov
movb
bound
lret
and
pop
mov
jg
shll
pop
fsubs
popf
loopne
xor
fdivl
jb
div
out
mov
punpcklwd
into
outsl
xorb
mov
mov
ds
dec
rcrb
cwtl
jne
test
pop
jbe
push
and
push
xchg
mov
cmp
nop
inc
cli
movsl
outsl
out
adc
std
cmp
sub
sub
xchg
pop
and
push
jle
jbe
pop
dec
in
xor
std
cs
cli
lahf
pop
outsl
inc
push
lock
cmpsb
sar
mov
jmp
loope
sub
stos
adc
rorb
sub
int3
cmp
inc
add
jle
push
enter
inc
sub
shl
cmp
je
xlat
aad
daa
adc
iret
enter
cs
adc
lret
jns
add
xor
sbb
xchg
sub
jl
jmp
cmpsl
cwtl
call
dec
pop
enter
jp
and
test
push
jmp
ljmp
jmp
mov
out
sub
mov
and
xor
jp
jp
and
push
int3
stc
pop
sub
inc
pop
sub
cmpsb
inc
add
fisttpl
mov
orb
rcrl
or
dec
adc
ds
push
xlat
ds
mov
xorl
xchg
sub
add
pop
dec
cmp
jge
push
cmpsl
add
xor
sbb
out
lock
mov
cmp
ret
mov
repz
test
and
out
std
out
enter
loop
push
hlt
cmp
cltd
out
mov
xchg
inc
repnz
dec
dec
aam
cs
repnz
or
fs
add
mov
add
scas
push
ja
bnd
outsl
adc
in
jne
lcall
dec
push
xchg
fistl
mov
lret
rolb
xchg
fnstenv
adc
or
pusha
movb
pop
and
xchg
jl
es
jb
xor
xchg
xorb
xchg
imul
xor
inc
inc
ret
call
fs
jmp
repz
loopne
xchg
rcll
mov
pop
mov
inc
or
mov
inc
mov
add
xchg
pop
repz
es
xor
ret
cld
push
xchg
lret
ja
push
in
cltd
and
xchg
enter
xchg
mov
enter
arpl
cltd
dec
adc
and
pusha
dec
ret
or
int
mov
or
imul
in
cmpsb
adc
in
pop
inc
int3
pop
test
pop
lret
xor
scas
add
mov
inc
mov
xor
mov
mov
mov
xchg
lock
movsl
add
fisttps
cld
dec
orl
and
sub
xchg
inc
ss
lcall
inc
add
popa
mov
popa
jle
xchg
call
and
cltd
inc
std
xor
insl
sub
add
lahf
into
in
dec
ja
icebp
ret
add
ljmp
fs
cmp
movsl
push
ret
lretw
out
scas
cld
adc
int3
sbb
push
sub
lods
out
dec
leave
out
xchg
inc
dec
cwtl
and
clc
pop
stos
adc
sbb
sub
cmp
mov
mov
arpl
outsb
or
push
xor
repnz
xchg
inc
loope
inc
xchg
in
stos
fldl2e
cmp
hlt
push
lret
repz
xchg
ja
jne
push
xchg
ret
inc
xor
mov
dec
clc
gs
push
or
or
pop
cmp
sbb
push
push
fsts
dec
sub
push
call
mov
add
jnp
inc
inc
mov
jge
dec
adc
pop
jle
xlat
add
xor
adc
cltd
rorb
mov
and
add
inc
das
fcomps
sub
ds
loope
inc
scas
lods
adc
mov
enter
inc
je
lds
push
pusha
inc
ja
insl
inc
inc
outsl
lcall
push
jo
sub
arpl
pop
add
test
cmpsb
fwait
xchg
and
jle
xchg
mov
and
lods
fucomip
push
adc
cmp
dec
subl
pushf
mov
jle
hlt
popa
jl
adc
faddl
into
push
testb
or
mov
outsl
adc
loope
popf
fdivrl
push
es
popa
cld
adcl
repnz
sar
fstpt
push
jno
insb
lock
cld
jno
or
sub
xor
aas
mov
add
pusha
pushf
inc
inc
aam
adc
xchg
cmpsb
pop
jge
jge
pop
and
mov
pop
pop
scas
jb
or
sbb
insl
fcoms
and
out
push
inc
add
std
dec
add
push
dec
bound
pop
sbb
lret
xchg
loop
push
push
inc
loope
cli
dec
icebp
imul
sbb
push
repz
xor
fs
cmpsl
arpl
xchg
inc
push
jle
push
icebp
std
test
cmpsb
outsb
and
cmpsl
jno
or
test
imul
cltd
insl
cmc
mov
xlat
outsl
xchg
inc
push
push
dec
jl
inc
movsl
jecxz
mov
jae
int
jle
lret
pop
mov
xchg
sub
pop
data16
xlat
cmpsl
daa
and
ret
mov
and
xor
out
pop
cmp
ds
aaa
mov
mov
pop
ret
pop
lea
fists
inc
fcom
shlb
xor
stos
jbe
pop
in
jae
scas
sbb
mov
push
aam
pop
xchg
ja
or
sub
xor
outsb
xchg
stos
push
xchg
mov
adc
lds
xor
jmp
mov
shrb
push
xchg
xchg
push
aaa
mov
pusha
mov
scas
into
and
mov
out
add
rcrl
sub
out
iret
ficomps
int
or
pop
leave
mov
sahf
mov
incb
in
loope
dec
dec
in
mov
mov
int3
cltd
mov
es
gs
out
cld
rolb
sbb
repz
push
jns
push
push
mov
adc
pop
add
lcall
ja
shlb
repz
pop
xchg
cwtl
push
mov
dec
xchg
inc
dec
cmp
ss
cs
in
ds
or
mov
mov
stos
xor
out
xor
push
ljmp
outsb
and
mov
adc
cli
lods
loopne
cltd
xchg
pop
push
cltd
lods
cmpsl
xchg
sbb
xchg
cmp
popf
repnz
push
scas
test
insl
jae
testl
or
mov
pop
pop
xchg
aam
fisubl
ljmp
stc
movsb
sub
or
stc
xchg
jp
jnp
aaa
jge
jo
adcl
testb
enter
inc
iret
repz
out
ss
daa
pop
mov
mov
stc
sub
xchg
leave
imul
adcl
iret
mov
inc
add
rcrl
sbb
int3
or
xchg
mov
jg
cmp
xchg
movsl
inc
cmp
add
dec
pop
out
or
push
cmpsb
aam
adc
push
push
ljmp
jns
xor
cmp
ficompl
out
fcoms
jg
push
repz
in
outsl
inc
negl
adc
fldenv
sbb
in
jmp
stc
jmp
stc
mov
lcall
repz
ds
sub
fnstcw
mov
xchg
arpl
stos
movb
sbb
push
imul
inc
fmull
add
or
fwait
dec
rorb
sbb
mov
push
lahf
rcll
les
jnp
lcall
fsqrt
sbb
fists
or
sub
repnz
jns
adc
mov
out
pop
jns
dec
hlt
subl
scas
test
sahf
cmp
mov
and
test
test
mov
int
icebp
sbb
cmp
outsb
popf
inc
mov
hlt
bound
mov
xor
in
lret
push
xorb
outsb
clc
mov
adc
outsb
mov
xchg
mov
rcll
arpl
inc
mov
xchg
jb
mov
xlat
pop
adc
divb
movsl
stos
xchg
inc
xchg
jbe
dec
insb
lret
xchg
mov
or
subl
lock
dec
xbegin
shll
cmc
sub
int3
adc
popf
mulb
shll
aam
push
scas
cmp
je
push
push
push
jne
pop
jo
ljmp
bnd
cmp
fsubp
js
sbb
cli
or
sub
jnp
cld
jae
insb
repnz
jno
std
popf
jno
addb
adc
mov
cs
jg
loope
xor
xor
test
iret
dec
xor
pop
or
imul
sbb
xchg
sti
call
jl
lcall
aam
mov
cld
insb
arpl
sub
sbb
xchg
loop
inc
popf
xor
pop
enter
push
out
mov
sahf
mov
aad
scas
test
in
fldl
cmp
orb
stos
dec
ret
cmp
push
cmp
shlb
scas
lds
xorb
mov
mov
ficoms
mov
into
adcb
cltd
cmpsb
pop
in
test
cs
out
push
dec
stos
sbb
adc
xchg
push
push
loope
jle
xchg
jp
pop
subb
mov
mov
insb
in
scas
push
mov
das
push
es
or
sbb
insl
ss
xchg
xchg
add
addr16
repz
in
mov
add
mov
inc
xor
dec
es
add
mov
pop
adc
ds
insl
addl
mov
fwait
jl
sbb
stos
add
pop
mov
dec
clc
cmc
aas
arpl
sbb
sbb
addl
xor
sub
push
cmp
cli
mov
jle
inc
xchg
xor
adc
jg
out
pop
add
enter
jae
sbb
sub
cmp
lahf
fidivrs
enter
and
scas
mov
pushw
fs
lea
and
out
adc
fbld
inc
mov
nop
and
jb
pop
das
jno
pop
jns
mov
and
jnp
push
pop
pop
sub
cmp
out
addr16
pop
bnd
adc
sbbb
jne
cmpsl
call
cs
cli
dec
loopne
dec
inc
push
aad
mov
loope
divl
xchg
adc
adc
or
fisubrl
shl
inc
arpl
push
data16
xchg
fsubrs
or
mov
or
pop
fldt
sbb
mov
fnstcw
dec
shlb
xor
das
xchg
clc
stos
ret
dec
or
or
ret
lock
pushf
adc
cmc
dec
dec
fadds
xorb
xlat
lret
push
ss
repz
mov
jp
lds
jo
mov
dec
xchg
imul
mov
and
cmp
sub
mov
imul
push
or
imul
push
fwait
lods
jno
cmp
push
dec
fidivl
jno
or
testb
dec
cmp
xor
rclb
ja
stos
sub
adcl
xchg
cs
rorb
fwait
sti
adc
ret
sub
cmp
fcoms
push
sahf
push
cli
stc
inc
adc
mov
cmp
mov
cmpsb
cmpsb
sbb
lret
push
out
iret
clc
es
push
pushw
mov
adc
or
mov
and
sbb
roll
stc
inc
adc
xchg
sub
jae
stos
cmp
outsb
es
push
xchg
in
mov
aad
rcrb
push
push
imul
cld
adc
mov
sub
jne
out
repnz
mov
add
in
inc
in
push
inc
ret
add
jp
cltd
inc
mov
sub
xchg
mov
inc
push
cwtl
testb
jmp
adc
sub
push
shlb
movsl
mov
mov
push
insb
and
mov
ret
fdivs
shll
mov
clc
aad
jnp
into
pop
aad
xor
jno
cmpxchg
mov
test
and
out
push
jg
aas
testl
ret
pop
out
or
jl
icebp
gs
mov
test
shl
rcrl
loop
movaps
nop
ss
dec
dec
and
cmp
inc
lahf
popa
mov
in
lds
out
icebp
and
hlt
inc
mov
sub
jbe
xor
inc
jno
ret
shll
out
imul
adcl
push
add
pop
mov
cmp
xchg
xor
popf
push
int
xchg
insb
xchg
dec
xchg
add
enter
and
add
fs
mov
mov
dec
aas
jg
sub
movsl
bound
scas
xchg
inc
in
and
push
jns
out
mov
xchg
pop
mov
pop
divl
push
jne
mov
fdivs
pop
test
cmp
rol
sarb
cmp
inc
arpl
aaa
and
cmp
cmpsb
pop
int
aam
xchg
cltd
cmp
mov
push
mov
movsb
test
call
out
add
jl
push
iret
out
adc
in
mov
pop
xchg
jmp
and
fwait
inc
aas
push
aas
adc
jecxz
push
sub
mov
pop
xchg
sbb
test
call
mov
fistl
jb
dec
push
pop
add
mov
mov
ja
outsl
cmp
xchg
inc
test
lcall
popf
mov
fwait
out
cmpl
xor
std
jne
lock
push
int3
mov
push
mov
inc
insl
lock
mov
repnz
scas
mov
nop
jo
push
pop
ljmp
add
xchg
scas
stc
jne
les
inc
mov
jno
or
jbe
es
subb
mov
sbb
fsubrs
in
mov
cmpsb
shll
ss
mov
not
daa
mov
test
and
mov
aam
xor
xor
jae
leave
dec
jmp
lock
out
cmc
lret
es
inc
jb
dec
loop
or
jmp
pop
mov
adcb
add
popa
xchg
mov
in
pop
call
push
push
dec
mov
pop
pop
sbb
dec
sbb
cld
sahf
adc
inc
pop
scas
insl
jecxz
loope
stos
andb
xlat
out
sbb
pop
push
pushf
fisubl
sti
add
stos
ljmp
mov
inc
lds
adc
push
xor
dec
cs
push
xchg
sub
pop
popa
inc
jmp
aas
das
sbb
cwtl
fdivs
cmp
cmpsl
aam
sarl
jmp
inc
insb
in
ss
sbb
aam
lods
test
lret
jnp
es
sar
or
mull
mov
ds
mov
mov
jmp
test
xor
sti
gs
adc
cmpsl
push
dec
enter
cltd
mov
in
cmc
movsb
inc
ret
mov
popf
enter
movsl
lods
sub
out
mov
lods
sbb
cmp
add
push
mov
std
sar
fisubl
lcall
pandn
movsl
mov
outsl
jo
stos
inc
shrb
int3
aam
sar
push
cmp
out
mov
rcll
xor
das
repz
or
outsl
cmp
mov
fistps
icebp
lods
pop
add
mov
dec
imul
pop
pop
gs
invd
repz
mov
and
dec
pop
sbb
cmp
xor
insl
rcll
sub
in
adc
das
xor
cmpsb
xor
gs
outsb
rclb
shr
or
inc
xchg
push
or
imul
and
jp
sbb
mov
inc
cwtl
rorl
lret
repz
bound
popa
cmp
sub
mov
mov
sarb
shll
xor
cmpsl
mov
inc
test
push
std
adc
jne
ss
xchg
mov
in
dec
movsl
ds
adc
mov
sti
pop
add
mov
decl
dec
aaa
ds
pop
lahf
es
inc
loopne,pt
stc
dec
xor
and
loope
dec
lock
jle
cmp
out
mov
push
cld
mov
out
imul
jl
jne
iret
cmc
imul
xchg
nop
push
movsb
lahf
mov
sub
sub
daa
ss
jl
mov
and
jnp
pusha
mov
movsb
and
or
xor
mov
push
in
cmp
or
nop
sar
pop
push
push
sub
inc
inc
inc
imul
shrb
inc
mov
pop
mov
push
pop
cmp
leave
in
arpl
loop
xchg
scas
xor
ja
inc
fldenv
ss
xchg
lret
xor
popa
enter
adc
sub
cmc
dec
sbb
pop
popf
loope
inc
or
iret
lods
subb
ret
shll
stc
ja
sub
pop
sub
jae
add
push
mov
xor
fs
and
test
icebp
cs
fsubrl
pop
fstpl
cmp
pop
lods
push
mov
cltd
inc
daa
lret
enter
sub
in
add
push
xor
lods
subb
and
or
divl
dec
shrb
pop
adc
or
sbb
cwtl
inc
leave
das
mov
ret
xor
jns
popa
mov
in
xchg
jle
xchg
inc
push
test
pushf
dec
xor
add
lcall
movsb
fs
jmp
mov
mov
xor
dec
or
push
dec
fwait
insl
cld
adc
mov
mov
mov
mov
sahf
cmc
mov
outsb
add
sbb
cmp
idivl
imul
mov
mov
mov
aam
xor
imul
xor
mov
enter
cmp
jecxz
imul
addb
xor
mov
xor
or
bnd
inc
adc
fisttpl
outsl
daa
mov
dec
mov
cmp
push
jl,pn
mov
and
shl
inc
inc
push
into
push
sbb
mov
outsb
push
loope
push
inc
stos
add
hlt
test
pop
cmp
lret
sub
push
loope
stc
pop
lret
cmp
pop
mov
fcmovnb
bound
scas
cs
inc
mov
and
xor
push
shll
push
shll
aaa
pop
fsubs
dec
jb
xchg
fldenv
call
jge
mov
xlat
out
es
jbe
cli
jne
lret
sub
mov
mov
cmp
lock
add
jae
inc
xor
and
sbb
movsb
popf
icebp
adc
push
and
cmp
sbb
fstps
mov
inc
mov
jbe
movsb
inc
push
icebp
jbe
jp
pop
movsb
xchg
hlt
lods
int
jbe
jg
sarb
pop
inc
sbb
xor
fcompl
scas
xchg
sub
jno
or
insb
stc
out
in
scas
dec
hlt
iret
sub
clc
add
inc
push
popf
scas
xchg
nop
mov
jae
mov
push
pop
cmovge
lock
pop
cmp
sti
jbe
jg
xor
cmpsl
push
shlb
xor
idivl
inc
jp
add
cmp
leave
jno
adc
push
jns
xor
mov
adc
jns
cltd
dec
and
dec
xor
stos
adc
je
xchg
lods
fdivl
dec
xchg
in
push
and
jl
lahf
pop
mov
inc
jbe
adc
mov
stos
fs
loopne
out
mov
mov
aas
sbb
add
adc
add
mov
jmp
cmp
cli
inc
das
hlt
lea
mov
xor
out
add
mov
or
dec
cmp
inc
es
movsl
mov
pop
mov
xchg
pushf
dec
adc
add
push
sub
das
mov
incl
into
sbb
fcoms
pop
es
adc
stos
lds
inc
movsb
inc
push
ret
cmpl
lods
mov
lea
fnstcw
add
dec
adc
and
pop
adc
outsb
lcall
push
pop
xchg
ja
and
pop
ret
push
xchg
repnz
cli
les
jmp
and
push
and
cmp
in
mov
fnstenv
mov
mov
inc
and
push
in
lods
dec
fnstenv
repz
lahf
add
mov
lahf
pxor
popf
call
dec
nop
inc
push
mov
jbe
xor
repnz
push
jl
fistpll
pop
in
xchg
adc
in
and
fnstcw
cmp
in
jge
inc
mov
fwait
cmp
rcl
mov
jp
mov
lcall
in
jle,pt
mov
psubq
inc
mov
mov
popf
loop
pop
hlt
aaa
jmp
clc
inc
pop
sbb
int3
es
hlt
cs
sub
aad
xchg
sub
adc
jae
mov
dec
pop
jmp
xchg
push
fxch
mov
jg
insl
mov
mov
jno
aad
or
ljmp
je
dec
jb
loope
stos
push
mov
and
nop
shlb
push
test
mov
push
xor
sbb
mov
fiadds
mov
dec
or
cmp
inc
lods
dec
imul
sbb
add
orl
icebp
call
sbb
sub
popa
lret
int3
arpl
int
jle
sbb
ret
sti
sub
mov
lods
sbb
bsr
iret
lcall
sub
std
out
fldenv
xchg
les
ret
and
xor
les
xchg
mov
mov
xchg
mov
and
xlat
js
aad
sbb
stos
ret
pushf
mov
inc
hlt
pusha
addr16
mov
shl
aad
out
ja
mov
or
xchg
push
mov
jbe
pop
inc
outsb
sub
pop
xor
and
sbb
mov
mov
jbe
add
ljmp
pop
into
push
adc
xchg
jle
cmp
cmc
out
iret
stos
dec
shlb
jp
leave
pop
pop
mov
pop
clc
inc
shlb
xchg
sbb
popf
ret
hlt
xchg
jle,pt
rorl
iret
fsts
loopne
jg
aas
call
dec
jg
xchg
fwait
xchg
xor
fwait
lea
xor
pusha
mov
dec
dec
ficompl
stos
inc
ds
inc
sub
mov
scas
sbb
mov
mov
test
push
inc
mov
ficoms
and
jecxz
rorb
aam
sbb
mov
jmp
aaa
mov
imul
mov
jo
pushf
mov
sub
in
xchg
mov
add
rol
push
pop
push
add
sbb
jle
in
jp
insb
or
push
dec
loop
addr16
xchg
jb
sub
push
enter
jmp
add
and
mov
rclb
sbb
pop
std
jecxz
dec
xor
mov
inc
pop
ret
js
mov
pop
or
pop
xor
jp
iret
in
xchg
mov
cmp
xchg
test
sbb
or
dec
push
adc
insl
xchg
sub
adc
popf
mov
xchg
add
icebp
lds
lock
jae
pop
push
xchg
ljmp
addr16
sahf
ss
adc
or
jb
ret
aam
rol
dec
jp
pop
sub
cmp
and
xor
clc
mov
rorl
push
shlb
pop
inc
int3
test
hlt
inc
sbb
in
shll
loop
paddq
sbb
mov
adc
xchg
mov
aas
push
adc
lods
mov
inc
pushf
xor
or
dec
pop
adc
sti
ret
cmpsl
or
or
mov
sub
in
dec
lods
test
aaa
xor
sub
pop
sub
add
jmp
test
push
lcall
adc
jg
push
ljmp
mov
je
xor
icebp
jnp
mov
pusha
mov
ss
add
fadds
mov
insl
pop
cmpsb
imul
mov
pop
cmpb
and
jns
std
jns
xor
add
outsl
aas
fxch
adc
cmpsl
fmull
and
clc
jmp
in
sub
hlt
jo
and
repnz
push
cmp
mov
mov
adc
std
sub
lock
pop
dec
in
popa
xlat
pop
outsb
xchg
jmp
fcoms
mov
jle
rcl
pop
aad
and
fldenv
aaa
out
or
and
pop
cmp
fld
dec
jg
aaa
xchg
fimull
imul
decl
in
mov
fildl
mov
call
test
jo
addr16
mov
pop
jns
dec
lret
aam
std
mov
jg
xchg
xchg
adc
iret
int3
and
push
fbstp
cmc
cltd
popa
mov
pop
xor
cmp
sub
xchg
inc
fidivl
mov
gs
add
out
push
jge
pop
enter
push
or
adc
add
repz
dec
mov
add
adc
jno
arpl
cld
pop
cwtl
insb
push
cltd
popf
sbbb
shl
mov
call
fidivl
out
mov
enter
test
data16
loope
lods
filds
push
int
mov
or
lret
cmpsb
pushf
dec
push
daa
sahf
xchg
les
mov
in
push
inc
dec
sti
pop
call
pop
pusha
push
gs
ljmp
mov
xchg
xlat
iret
cld
popa
xchg
xchg
or
jnp
jb
xor
mov
rcll
and
in
in
jp
mov
xchg
and
aaa
insb
xchg
nop
jp
jmp
cmp
or
int
dec
push
aam
inc
sar
out
xchg
sub
shrl
ret
divb
fs
push
enter
cmp
aas
jae
or
cmpsl
in
iret
push
mov
mov
stos
js
cwtl
int
ret
jl
mov
loopne
add
inc
fistpll
jl
sbb
push
mov
mov
mov
movsb
mull
mov
add
pop
sbb
jle
lret
lea
in
fdivr
rorl
mov
in
les
mov
out
sub
add
jg
cmp
inc
fistps
sub
mov
mov
jb
jle
jbe
add
cltd
pusha
cltd
pop
and
xchg
outsl
mov
fcompl
rcrb
imul
scas
pop
das
in
pop
dec
jno
xchg
sbb
stc
pop
xchg
dec
cmp
jmp
jno
add
adc
or
add
pusha
ss
insl
dec
aas
push
add
xor
cmp
imul
sub
inc
in
cwtl
push
decb
lcall
out
xchg
or
xchg
sub
push
push
sahf
lcall
add
cmpsb
jge
cli
mov
dec
adc
daa
addr16
pop
divb
push
jl
adc
mov
add
rolb
mov
in
xor
in
popa
and
xchg
mov
ficoml
dec
mov
xlat
iret
sahf
or
or
push
pop
jne
mov
sti
jnp
out
xchg
leave
push
aaa
pop
dec
dec
out
aam
enter
ret
inc
push
adc
pop
xchg
cmp
mov
js
cld
scas
mov
mull
dec
cmp
out
mov
loopne
leave
xor
dec
mov
aam
jbe
mov
jmp
cld
shrb
pop
loopne
or
inc
jl
imul
pop
ljmp
aas
push
mov
shll
cmc
mov
pop
in
cmp
aam
fcomp
testl
xor
pop
jbe
test
cmc
into
lret
mov
add
inc
sarl
dec
or
fistpl
cmp
jg
in
je
pop
pop
rclb
cs
lcall
and
cltd
jo
cmp
sub
repz
lcall
rcll
push
adc
mov
mov
pop
or
out
cmpsl
sbb
and
jecxz
scas
mov
and
mov
out
cmp
add
push
fstps
ret
gs
cmp
imul
jae
or
ret
jl
xchg
sub
ss
ja
push
pop
lcall
out
xor
dec
inc
inc
adc
pushf
test
and
cmp
xchg
and
fucomip
mov
shll
pop
movsl
dec
xor
int3
xchg
add
push
jmp
aam
mov
cmp
mov
sbb
aaa
daa
stos
in
pop
jno
pusha
jmp
xor
xchg
cwtl
xor
int3
in
push
repz
cmp
xchg
cltd
sbb
aad
sbb
mov
pop
add
lods
dec
roll
pop
mov
mov
lret
sar
lods
xor
sub
jbe
add
popf
lret
test
shr
cmp
inc
mov
and
out
les
loope
inc
cmp
xchg
mov
adc
mov
ficomps
or
mov
pop
cmc
out
mov
push
sbb
mov
roll
push
push
push
jle
xchg
icebp
mov
dec
pop
fists
mov
push
dec
pop
or
data16
or
cld
std
fistps
outsl
jae
jo
sahf
stc
dec
lea
inc
cltd
adc
dec
cli
xchg
cwtl
lcall
neg
jmp
push
js
fs
push
sar
xchg
sbb
cwtl
xlat
sbbb
cwtl
sar
rcrl
push
in
pop
pushf
cmp
mov
shlw
popf
fiaddl
dec
mov
rorb
les
mov
incb
test
inc
sbb
lea
lds
dec
out
pop
test
lods
ret
pop
xlat
adc
ror
add
mov
pop
test
sbb
int3
in
and
xlat
mov
adc
sub
xchg
and
or
push
mov
xchg
xchg
mov
xchg
shrl
mov
xchg
push
cltd
mov
sti
ljmp
mov
jp
mov
imul
loopne
pop
xchg
jecxz
in
psubb
sub
fsubs
sbb
testb
jle
push
mov
sti
jnp
mov
out
cmp
pop
clc
pop
or
sahf
push
imul
cmp
add
int3
jge
rol
xor
xor
xchg
inc
xchg
and
repz
adc
cmp
icebp
negb
fstps
loope
aaa
sar
mov
pop
adc
in
in
mov
sub
arpl
inc
jp
addr16
icebp
jb
mov
sub
es
repz
loope
in
dec
cmpsl
push
xor
ret
fildl
outsb
cld
leave
mov
push
cld
lock
pop
mov
jle
mov
lds
sbb
push
out
or
add
push
testb
test
sub
repnz
inc
outsb
test
xorb
sbb
sub
push
insb
nop
mov
and
push
sahf
cmp
adc
cwtl
xchg
shr
pop
scas
add
cld
jmp
push
dec
add
std
js
loopne
jp
shrl
mov
sbb
add
adc
mov
out
in
ljmp
mov
pop
cwtl
mov
aam
icebp
fldenv
or
adc
push
in
xor
fildl
pop
cmp
mov
sbb
aas
filds
lahf
sub
adc
ret
jno
jae
gs
fneni(8087
dec
fs
in
pop
jmp
call
icebp
adc
dec
inc
stos
daa
ljmp
jp
jp
mov
outsb
fmuls
outsl
cmpl
pop
insb
movsb
sub
popf
ja
loopne
mul
mov
test
xchg
jp
int
imul
lods
mov
inc
lods
push
loope
mov
and
xlat
sub
ficomps
mov
push
jno
cmc
negl
adc
push
jp
gs
mov
adc
cmp
popf
or
adc
mov
mov
ror
inc
pusha
dec
shlb
cmp
adc
mov
mov
xor
cwtl
dec
or
aad
rclb
fdivr
or
data16
or
dec
loopne
cmc
mov
shr
outsl
sub
xchg
in
lds
lods
adc
xchg
aas
mov
xor
fisubs
dec
inc
add
jg
test
test
out
cmp
cmpsl
insl
mov
xchg
sarb
jecxz
dec
adc
repnz
adc
dec
out
repz
mov
sahf
pusha
repnz
jns
sti
jnp
push
and
rorl
ja
mov
sub
dec
imul
push
sub
ljmp
shrb
mov
mov
ret
or
loopne
test
sub
xor
push
jae
stc
emms
and
fwait
jecxz
inc
xor
fisubl
sbb
int
mov
inc
ds
in
pusha
stos
cs
push
fnop
mov
pop
pushf
fwait
push
xor
out
lret
add
mov
push
inc
mov
xchg
sub
dec
cmp
subl
and
ds
call
dec
mov
rolb
fwait
cltd
popf
pop
pop
sub
lea
mov
stc
mov
icebp
out
pop
or
stos
push
testl
mov
ret
mov
fisttpll
mov
int
or
mov
xchg
jmp
push
loope
arpl
cmp
mov
xor
lods
bound
icebp
cs
sbb
into
fldt
in
mov
sbb
mov
add
adc
jge
pop
xchg
mov
mov
adc
aas
fildll
std
inc
inc
xor
dec
cltd
clc
daa
adc
or
stos
in
aam
js
dec
or
mov
add
call
lock
ljmp
push
push
out
xchg
xor
xor
fucompp
mov
push
xchg
loopne
imul
jmp
icebp
out
sub
push
sbb
lock
pop
fdivl
loop
add
int
push
insl
jb
inc
jecxz
inc
xchg
push
shlb
xlat
ja
stos
imul
cmp
and
mov
testl
ljmp
scas
inc
xchg
ret
sti
mov
sub
popf
fsubl
shll
daa
jp
aas
add
dec
sbbl
and
inc
add
repnz
adc
mov
pop
fstpt
or
into
cmp
inc
xchg
adc
xchg
iret
mov
call
xor
jmp
mov
aas
sbb
lods
hlt
pop
leave
bound
fdiv
movsl
mov
xchg
out
pop
push
ret
sti
mov
ljmp
dec
pop
push
add
notl
out
jae
fsubr
ret
jmp
mov
sub
mov
test
sbb
lods
les
arpl
das
inc
mov
mov
sub
mov
fdivs
cmp
xor
mov
xor
inc
mov
insb
lea
fstps
add
and
or
fbstp
int3
insb
add
sbb
jecxz
arpl
fcom
or
dec
fcomps
mov
sbb
adc
xor
imul
mov
test
jnp
cmpsl
xor
movsb
dec
shll
dec
cmp
sarl
fwait
pop
inc
push
mov
insb
je
shrb
fwait
push
xchg
test
dec
jne
test
adc
xor
aad
sbb
in
fiadds
loope
ja
scas
and
add
push
sbb
or
rcl
sub
roll
push
test
enter
push
js
or
lcall
arpl
int
repnz
cmpsl
or
xor
cwtl
cwtl
scas
daa
out
lods
and
lret
pop
in
mov
add
cmpsl
push
dec
dec
rclb
push
pop
mov
daa
fisubrl
test
aas
adc
popa
push
sub
mov
popa
ljmp
in
inc
test
jmp
xor
pop
mov
sub
loopne
add
and
sbb
int
push
push
cmc
cmc
cmp
popa
rorl
imul
aaa
push
and
sbb
scas
adcl
pop
lds
fxch
push
lock
lret
scas
bnd
scas
divl
xchg
jo
je
push
lahf
jmp
negb
je
jl
mov
ret
push
cmp
and
sbb
outsb
pop
cmc
out
fiadds
mov
jae
add
add
outsb
leave
aam
test
jecxz
sar
mov
xor
push
jo
ffreep
xchg
xor
mov
mov
and
inc
and
popa
std
ljmp
roll
insb
loope
or
inc
cli
sahf
les
rol
aas
es
rcrl
in
adc
jns
jmp
xchg
jnp
dec
cld
xchg
jecxz
ss
push
repnz
popa
es
es
jge
rcll
loop
mov
fisttpl
adc
sahf
sbb
xorb
mov
data16
sbb
mov
mov
hlt
push
cmp
inc
les
xchg
ret
mov
adc
or
js
ja
xor
mov
sbb
shlb
loope
xchg
popl
ret
pop
in
in
pop
popa
mov
stos
fldl
sbb
sub
maxps
push
push
aaa
mov
jnp
icebp
cmp
inc
jecxz
sub
jl
mov
aam
out
outsb
insb
xchg
push
dec
add
enter
push
ficoml
pop
std
jne
push
imul
pushf
and
cmc
sub
and
mov
mov
mov
andps
iret
xor
xchg
adc
lea
loope
dec
push
cmp
insl
in
adc
push
push
push
xor
or
stos
xchg
dec
cmpsb
pusha
xor
shlb
mov
xlat
sbb
daa
dec
gs
cmp
insl
pop
idiv
shll
sbb
dec
cmp
xchg
xor
sarl
add
insl
push
or
sahf
pop
cs
rcrl
mov
shlb
lods
pop
cmp
push
ds
sti
test
push
movsl
aam
cmp
jo
out
aaa
sub
and
dec
scas
mov
push
sar
or
inc
pusha
out
adc
and
pop
mov
mov
std
test
popf
rcrb
aas
test
mov
adc
adcb
mov
add
fldt
sti
lret
sbb
repz
imul
into
xor
dec
dec
jp
pop
dec
lret
sub
cli
and
fs
xor
aaa
xchg
jmp
test
jp
pop
lret
xor
popf
fnstenv
xchg
mov
ret
or
or
and
push
ja
mov
mov
lock
cmpsl
clc
adc
mov
push
inc
hlt
pop
movsl
jl
pop
hlt
sbb
xchg
int
bound
repz
insb
jo
test
mov
loope
enter
call
ret
insl
jp
divb
jg
jbe
sti
ja
fsubr
lret
aas
jne
shlb
sbb
adc
mov
scas
sbb
aam
lret
test
clc
xchg
xchg
std
adc
jecxz
call
lret
je
jge
arpl
in
jle
gs
addr16
inc
cmpsb
pop
jnp
data16
dec
sbb
popa
dec
mov
pop
popf
or
mov
mov
into
mov
pop
pop
lret
push
push
xchg
mov
ret
jle
or
push
mov
rclb
lahf
stos
nop
or
ss
daa
add
out
in
or
scas
cltd
out
sub
ret
test
add
test
pop
imul
negl
cmp
jmp
push
or
in
dec
outsb
jle
push
lret
lods
rcrl
jmp
inc
xlat
mov
jae
push
imul
mov
or
shll
inc
push
out
aam
cltd
in
mov
daa
arpl
mov
fldenv
sti
nop
add
stos
dec
cmp
loopne
mov
adc
and
ljmp
push
sahf
ss
int3
jge
jl
repz
sbb
fstps
hlt
test
push
mov
lahf
idivb
cld
xchg
int
push
out
insl
scas
push
push
and
inc
out
loopne
insl
test
push
xchg
cld
ret
roll
popa
aam
jae
add
pop
in
test
adc
popf
push
call
mov
cs
imul
rcll
mov
pop
ret
sub
lods
sbb
xor
xchg
addl
lret
in
inc
adc
push
aaa
test
xor
and
cmp
sub
mov
push
sahf
or
sbb
inc
data16
bound
inc
dec
pusha
and
std
cli
in
xor
mov
or
add
pop
adc
pminub
sbb
ja
jbe
mov
or
mov
imul
aaa
insl
pusha
scas
inc
les
xor
mov
mov
lds
push
gs
mov
mov
inc
or
arpl
adc
push
andl
cmpsb
jno
loope
inc
inc
sahf
xchg
cmp
jb
into
out
sub
mov
add
mov
jle
pop
ja
jns
jae
js
popa
inc
sub
sub
sub
and
xchg
rorl
orb
mov
sbb
and
js
sbb
bound
das
jbe
jns
pop
dec
aas
inc
mov
lods
out
cmp
sub
loopne
cmp
cli
ljmp
jle
mov
hlt
aaa
lods
sub
enter
mov
scas
aaa
xchg
cmp
add
out
lahf
push
out
in
and
sahf
frstor
xchg
sub
adc
into
push
push
pop
and
sti
nop
xor
jg
inc
mov
lock
loopne
lock
mov
sbb
sbb
fwait
std
scas
jae
pop
pop
test
push
ja
pushf
xchg
lock
fdivr
sbb
cmc
cmpsl
icebp
cltd
push
pop
into
andb
sbb
rcl
ja
xor
adc
aas
or
imul
aas
cld
lahf
out
repz
jnp
rol
enter
mov
sub
or
les
jb
inc
mov
cmp
inc
incb
lea
int3
icebp
inc
fs
add
fsubr
repnz
shr
dec
jmp
ffreep
js
sub
inc
mov
jb
les
ss
cmp
and
push
insb
jg
shll
les
xor
ret
es
nop
mov
stc
fucom
inc
adc
stc
pop
icebp
out
sbb
sarl
testl
add
es
sti
aad
xor
cltd
in
mov
dec
cld
adc
and
daa
cmp
iret
cs
aas
xor
cli
sti
mov
je
sbb
sub
adc
lea
enter
push
mov
pop
loop
push
xchg
pop
lret
and
pop
add
frstor
inc
fs
aad
add
insl
sbb
sub
cmp
jle
push
add
jne
out
add
jne
mov
sub
mov
testb
cmp
popl
or
lret
scas
add
xor
xchg
lds
xor
jg
lahf
adc
outsb
and
sub
push
popf
push
inc
jb
mov
jo
xor
gs
add
aaa
bound
cmpsb
push
in
scas
ret
fldenv
leave
lea
dec
lea
push
loop
jl
lcall
sub
lea
imulb
flds
sbb
mov
mov
jnp
ljmp
mov
lds
enter
pop
jmp
ds
outsb
aaa
notl
add
sub
loope
xor
and
cmpl
fbstp
in
sub
pop
adc
xor
push
sbb
dec
gs
mull
add
popf
imull
cmp
cmp
xchg
inc
xchg
cmp
iret
data16
out
jecxz
call
in
aad
inc
fsubrl
mov
testl
mov
mov
outsb
imul
mov
jno
out
cmp
mov
stc
loope
popa
std
xor
xchg
sub
cmpb
gs
mov
add
xor
xor
jne
mov
sbb
and
adc
fbstp
xchg
add
and
mov
xor
lock
mov
xor
insl
addr16
xchg
shll
fiadds
jl
rcrb
popf
lea
xchg
or
push
mov
popa
idivl
pop
sahf
xor
xor
mov
adc
xchg
sub
stos
jg
lods
adc
out
jns
jp
cmpsl
mov
aam
sahf
cs
std
imul
rcl
jecxz
sbbb
pop
pop
inc
xchg
gs
jmp
das
push
testl
jecxz
and
push
outsb
jmp
mul
xchg
mov
mov
jg
cmovo
inc
pop
idivb
pop
jb
xor
jp
daa
xor
lret
int3
lret
mov
js
dec
lock
mov
cld
bound
stc
out
jecxz
xchg
jg
filds
fistps
push
and
and
stos
ret
dec
pushf
xchg
adcb
dec
mov
imul
push
pop
ss
cs
or
ljmp
or
or
dec
stos
jle
aad
stos
jle
xchg
imul
cwtl
aam
les
push
jle
test
inc
or
rolb
insb
xchg
add
inc
int
mov
sbb
and
xlat
sub
dec
je
sub
ljmp
mov
xchg
hlt
cld
rclb
or
cltd
add
iret
in
add
into
imul
cs
jle
xchg
sbb
outsb
jo
inc
push
outsl
adc
push
jbe
movsl
rclb
dec
std
pop
sub
popa
call
js
jns
jp
ljmp
adc
adc
popa
pop
mov
stc
push
int
lret
icebp
mov
rorl
push
shl
lods
sbb
ret
jecxz
push
or
clc
sub
xor
out
add
inc
shr
ja
repz
add
daa
adc
aaa
mov
fcom
xchg
and
xchg
fsubrl
mov
testl
dec
jmp
jno
jb
inc
jne
mov
repz
cmp
lahf
push
sbb
cltd
adc
imul
addr16
inc
popf
or
sti
negb
adc
js
neg
outsb
sahf
jnp
imull
subb
lea
pop
fadd
xchg
ja
cli
pop
aaa
inc
push
enter
cld
mov
xor
icebp
add
mov
insb
enter
std
popf
out
jb
jo
dec
es
cmp
push
ljmp
test
hlt
fs
clc
popf
shlb
mov
cmpsb
ss
xchg
cli
dec
inc
dec
mov
ficomps
jne
add
in
enter
xor
push
fdivl
int3
mov
xchg
mov
arpl
xchg
iret
jecxz
movsb
lods
icebp
ret
sbb
out
xchg
sub
jno
movsl
in
out
roll
xchg
pop
inc
pop
lcall
push
cli
cs
lret
push
mov
out
mov
or
lock
sti
cld
mov
mov
sbb
sub
sub
inc
out
sbb
jcxz
iret
addr16
jo
inc
inc
mov
adc
loopne
inc
loopne
mov
dec
inc
mov
mov
cmp
int
mov
xor
lock
or
cmpsb
ljmp
out
cmp
push
test
pop
mov
mov
sub
data16
leave
mov
xchg
sahf
jae
lods
or
jg
ljmp
cs
and
and
fldl
jecxz
jbe
xor
jp
into
mov
cmp
aas
adc
fwait
add
lea
xor
push
mov
xorb
and
and
leave
aad
in
enter
dec
dec
push
pop
dec
mov
fbld
mov
inc
pop
mov
iret
jmp
xchg
sbb
dec
ret
call
movsl
ret
lret
pop
cld
adcl
mov
in
out
das
decb
sub
movsl
cmp
test
fld
ret
push
push
cli
jno
mov
add
push
movsb
inc
lock
mov
push
mov
cmc
repz
iret
jg
sbb
mov
fimuls
inc
in
test
and
cmc
add
sbb
negb
sub
inc
rcll
inc
in
xchg
dec
adc
arpl
push
adc
cmp
mov
imul
repnz
pop
jg
out
test
std
and
push
mov
jg
inc
mov
fidivl
ljmp
ret
das
cmp
jae
mov
adc
jecxz
jmp
xor
gs
dec
subb
repz
jmp
or
xor
mov
aad
xchg
xorb
lcall
ss
std
daa
je
sub
shrb
in
aam
xchg
inc
mov
xchg
adc
jecxz
pushf
aaa
loop
scas
mov
cltd
sti
pop
scas
addr16
and
mov
cmpsb
xor
arpl
in
push
test
inc
jecxz
adc
inc
mov
icebp
cwtl
hlt
out
and
ljmp
xor
in
mov
mov
adc
call
mov
out
ret
sbb
mov
daa
pop
mov
negb
mov
adc
mov
loope
xchg
sahf
mov
mov
sbb
sub
out
es
jnp
sbb
add
cmp
aam
or
mov
add
pop
loope
pop
aad
jnp
jmp
jmp
or
sbb
lock
xchg
popa
test
aas
fsts
push
cmp
sarb
sub
clc
push
mov
push
lahf
add
lret
and
or
push
add
sub
mov
lock
mov
popf
pop
push
mov
cmp
sbb
or
inc
loop
jo
push
xor
dec
adc
lds
outsb
xbegin
loope
int3
mov
bound
mov
fists
pop
xor
cmp
dec
jne
push
mov
sti
jle
mov
lahf
mov
mov
mov
inc
pushf
mov
add
mov
std
jmp
insb
lods
sub
add
pop
mov
lods
pop
dec
jb
inc
hlt
pop
cmovl
scas
lods
pop
shrb
movsl
xor
lret
sub
insb
xchg
shrl
mov
and
adc
xor
insl
imul
jne
int
cmp
pusha
sub
test
int
dec
sbb
call
add
inc
or
movsb
xchg
bound
rcrl
mov
dec
imul
sbb
xor
jb
push
mov
js
cmp
add
lret
rorb
pop
and
jecxz
sahf
sbb
fsubl
call
and
push
and
push
cld
dec
jnp
outsb
jb
movsb
out
adc
ror
rorb
aad
inc
cli
ret
jnp
scas
adc
notl
cltd
push
loopne
aam
add
cmp
fadd
pop
cmp
lret
gs
xor
push
lods
push
dec
clc
pop
mov
pop
testl
sbb
std
and
adc
jge
addr16
ljmp
pop
mov
and
fld
inc
add
fdivr
in
rcrl
shrb
jae
push
push
movsl
or
popf
dec
jg
nop
sbb
cltd
adc
push
cmpsb
test
cmp
test
xor
cmpsb
xor
lret
lock
fdivr
loopne
adc
adc
daa
or
adc
mov
daa
add
inc
adc
xchg
sbb
push
andb
sub
push
push
out
inc
mov
push
divb
pop
and
pop
test
fwait
jp
aas
and
addr16
inc
decb
daa
out
insb
push
lods
add
add
js
lret
enter
mov
mov
fimull
sbb
add
mov
arpl
test
mov
xchg
jp
fdivr
outsl
jns
in
add
sarl
fwait
or
hlt
mov
daa
sbb
or
xor
and
js
jo
mov
out
out
jns
stos
mov
adc
adc
push
mov
lock
dec
pop
movsl
std
cmp
cmpsl
pop
inc
loopne
clc
mov
outsl
mov
or
add
jecxz
stos
das
and
push
push
mov
xchg
xchg
nop
loope
scas
xchg
push
xor
xchg
cmp
mov
pop
imul
and
pop
mull
inc
lret
xchg
cli
or
lret
out
cld
push
js
pop
push
pop
pop
ficoms
out
jle
lcall
mov
mov
pushf
jns
enter
jb
pop
cwtl
imul
icebp
fistps
rclb
fisubl
and
rorl
inc
mov
inc
aam
pop
xchg
xor
out
inc
loopne
enter
pop
inc
mov
lret
mov
addr16
insl
es
idivl
rolb
test
adc
or
cmp
jecxz
mov
je
mov
mov
test
scas
test
xchg
imul
jb
lret
insb
loop
push
xchg
into
xchg
jae
mov
shr
mov
dec
subl
test
fwait
push
cld
popa
sub
mov
outsb
adc
pop
add
xchg
das
cmp
pusha
adc
mov
das
mov
jecxz
dec
push
add
mov
sub
and
stos
push
add
cld
ds
imul
jp
repnz
lods
push
jg
stc
adc
xchg
je
test
das
ds
shll
jne
mov
scas
adc
mov
dec
lret
das
xor
dec
push
ss
sbb
in
bswap
push
cmp
es
mov
mov
daa
or
cmp
mov
pop
addr16
push
mov
inc
movsl
stc
cmpsb
or
in
mov
mov
imul
sbb
xchg
sbb
fstl
mov
cmp
test
fistps
and
repz
inc
cltd
fmuls
inc
mov
sub
jae
xchg
push
and
sbb
push
les
nop
sahf
in
aad
aaa
rcll
and
addb
popa
xchg
cld
jbe
sahf
xchg
sbb
push
loope
jge
in
cmp
push
shlb
stos
push
jmp
or
dec
ds
nop
jl
mov
fwait
jmp
into
push
jp
push
rorb
ret
inc
sub
sub
dec
jg
das
imul
sar
mov
cmp
loope
lods
shr
es
xchg
out
das
adc
outsb
mov
mov
dec
cmp
fs
adc
rolb
ret
push
mov
pop
mov
nop
lods
mov
decb
sbb
js
es
outsb
inc
sbb
mov
and
clc
lods
inc
cmp
push
nop
xor
es
jb
repz
cmpsb
cmp
adc
std
cwtl
sub
jnp
dec
mov
cmp
sbb
roll
or
lret
shlb
lret
pushf
mov
movsb
xchg
and
fcom
mov
xchg
jge
jge
outsb
inc
sbb
pusha
loopne
mov
addr16
imul
sbb
mov
aad
pop
and
xchg
and
cs
dec
in
sbb
or
xchg
adc
cmpsb
push
ret
cld
js
sbb
sbb
mov
pop
adc
call
push
sub
add
inc
aad
mov
pop
les
push
mov
rol
cmp
fnstcw
dec
push
fmuls
push
out
loope,pt
rol
subb
dec
add
adc
fistps
xor
pusha
sbb
mov
push
push
mov
leave
fisttpl
fwait
push
imul
shlb
fsubs
imull
xchg
jae
daa
ficoml
push
push
sub
aaa
jmp
popf
mov
push
push
pop
mov
cmp
jmp
rcrl
fwait
add
jmp
mov
add
test
fmul
pusha
icebp
mov
push
dec
jle
or
pop
das
jmp
fcmove
aad
cmp
shrl
mov
mov
push
lcall
hlt
mov
mov
int3
inc
and
inc
adc
push
sub
insb
and
mov
mov
cs
pop
push
add
mov
mov
push
adc
push
mov
sbb
mov
and
roll
adc
jns
pop
int
enter
aad
sbb
xchg
push
decb
pop
mov
jp
and
imul
xchg
and
call
jns
cmpsl
sub
dec
rcrl
xchg
jecxz
xchg
dec
inc
or
call
jns
out
pop
jo
scas
push
xor
xor
decl
fcomi
push
jne
inc
shll
mov
mov
inc
jp
adc
inc
mov
js
mov
out
outsl
mov
mov
negl
pop
in
and
sbb
insl
mov
cltd
push
mov
sbb
xchg
inc
fidivrs
mov
out
mov
dec
sub
mov
imul
and
dec
pop
and
xchg
push
nop
mov
mov
xor
aad
jo
xchg
outsb
in
aaa
test
shl
aad
aam
ret
mov
mov
les
pop
jo
pop
aaa
mov
fwait
lcall
stos
xorl
dec
movsl
pop
imul
and
add
icebp
inc
sub
movsb
test
add
lcall
lcall
sbb
mov
stos
xchg
jmp
xchg
test
incb
and
add
and
xchg
or
inc
jo
xor
negb
and
cld
sarb
loopne
outsl
roll
js
sahf
dec
jne
rcrb
sahf
pop
in
dec
das
mov
xchg
jae
or
mov
loop
out
repnz
mov
jle
es
fwait
int
mov
cmpsl
jno
idivl
mov
inc
das
xchg
fs
adc
sbb
or
xor
xchg
and
nop
std
mov
jge
mov
jge
rcr
notb
pop
inc
push
shlb
fnstenv
mov
sbb
xchg
ljmp
mov
outsb
imul
xlat
mov
les
imul
bound
repz
test
dec
fidivl
mov
lods
adc
mov
adc
je
cmp
jmp
and
and
push
pop
ror
and
mov
loope
scas
dec
xchg
fucomp
aas
dec
inc
ja
into
nop
lds
xor
orps
repz
loopne
leave
push
jno
sub
imul
fsts
or
test
enter
dec
xchg
movsl
mov
loopne
cmp
pop
push
scas
pop
mov
fadd
imulb
sub
push
std
adc
jmp
rolb
mov
movsb
stc
das
inc
loopne
push
add
lcall
ja
into
imul
loope
xchg
aas
fldt
push
ret
jbe
push
cmp
add
xorb
int
jecxz
mov
shlb
loop
bound
mov
mov
push
xor
movsb
bound
push
mov
add
ja
cmp
dec
icebp
adc
push
test
xchg
fdivp
push
add
shlb
cmc
sub
xchg
cmc
popa
dec
cmpsb
popl
loope
out
pop
aaa
mov
shll
sti
in
imul
fs
push
dec
imul
inc
daa
mov
lods
imul
pushf
imul
lods
out
xchg
inc
mov
push
arpl
pop
jle
cli
inc
push
out
cs
mov
pop
mov
mov
icebp
and
movsb
stos
in
push
repz
jae
ret
test
mov
pop
pop
mov
ror
mov
repnz
dec
and
lret
sti
jno
fisubrl
test
cmp
scas
cmpsb
pop
xor
lods
mov
ja
cmpsl
adc
mov
ret
push
push
dec
pushf
fadds
cmc
movsb
jle
add
bound
mov
xor
scas
jmp
int
xchg
push
push
and
lock
data16
xor
sub
mov
lret
imul
xor
je
mov
jecxz
push
mov
add
or
jne
enter
sti
iret
cmc
popa
jmp
sarl
subb
cmpsb
adc
mov
mov
mov
push
loop
loopne
loop
dec
mov
pop
push
cmpsl
mov
cmp
arpl
outsb
and
xor
adc
lret
mov
sar
cmc
cmp
stos
inc
mov
jg
or
repnz
dec
cmp
out
xchg
jg
int3
fcmovnu
cli
mov
inc
pop
dec
fstpl
sbbb
mov
rolb
ret
inc
dec
cli
mov
sti
pop
add
inc
push
cmc
push
pop
in
call
lods
xchg
jg
xchg
pop
sarb
out
cmp
mov
loop
stc
jl
dec
adc
fisttps
fidivrl
mov
in
mov
cmp
push
pop
popa
ret
mov
insb
sub
test
or
xchg
pcmpeqb
jmp
jp
mov
mov
pop
divl
stc
inc
imulb
ret
mov
cs
mov
faddl
les
icebp
mov
sub
jns
gs
scas
lods
nop
lret
test
pop
pop
lods
dec
adc
in
hlt
inc
fildl
xchg
inc
pop
notb
push
mov
sahf
cmp
and
xlat
repz
faddp
inc
dec
or
jno
pop
push
ret
inc
lds
aam
pop
sbb
aas
pop
dec
jns
add
data16
dec
nop
sub
jle
cmc
and
cmp
mov
cmp
dec
jne
cmp
push
mov
inc
int3
pop
ffree
jg
fisttpl
pop
dec
push
xchg
daa
pop
sub
or
add
test
or
dec
test
xchg
push
loopw
outsl
adc
enter
sahf
sbb
xchg
lcall
cmpsl
sbb
hlt
xchg
inc
adc
sbb
xor
xor
jge
lret
inc
mov
sahf
out
clc
dec
fwait
jmp
inc
shl
jecxz
sbb
out
popa
jbe
sub
scas
sub
cwtl
shlb
cmp
push
out
test
cmp
lock
pushl
push
mov
jl
lret
cmp
lcall
pop
lea
add
pusha
bswap
and
aaa
out
or
inc
add
inc
sub
scas
adc
jle
pop
xlat
mov
lahf
mov
xchg
iret
fisubrs
sub
movsb
and
add
cmp
add
popa
inc
fstps
lds
sbb
sbb
add
arpl
insb
aad
pop
mov
inc
sbb
mov
pop
sbb
add
mov
adc
add
mov
rcrb
imul
je
pop
inc
push
fcoml
movsb
push
ret
or
mov
nop
pusha
notl
inc
inc
xchg
push
mov
lcall
js
loopne
sbb
mov
test
or
and
add
fwait
rcll
in
jae
push
mov
shl
mov
adc
mov
fwait
push
fabs
sub
push
cwtl
sub
pop
mov
cmp
js
mov
shll
subl
dec
and
sbb
jbe
cmp
cmp
pop
mov
inc
imul
sub
push
lea
cmc
mov
pop
xchg
inc
add
ret
mov
enter
adc
jae
pop
imul
sub
loope
mov
popf
dec
sub
test
imul
push
pop
sub
jmp
xchg
outsl
lods
xor
addr16
cmp
inc
repnz
sub
outsl
mov
add
sbb
push
jbe
sbb
test
movsb
movsb
xchg
aas
ret
aam
cmp
and
jp
sub
int
repz
in
popa
adc
aaa
add
xor
push
adc
pop
pop
dec
inc
mov
fsubs
mov
or
fnstsw
in
pushf
repnz
bnd
mov
fldenv
xchg
pop
insl
push
inc
jo
xchg
lods
outsl
mov
dec
icebp
dec
cmp
cmp
cmp
sar
and
xor
and
cmp
lods
aas
add
mov
sub
adc
outsl
push
std
out
aaa
xor
bound
fidivl
outsb
adc
outsl
enter
hlt
and
in
ror
leave
lcall
sub
push
gs
mov
aas
xchg
mov
xor
sbb
popa
test
clc
adc
cltd
cmp
mov
mov
jl
cmp
inc
mov
mov
mov
and
mov
sub
push
sbb
aas
jb
out
out
mov
rcr
aas
xchg
pop
sar
cmp
cmp
movsb
xchg
out
sbb
repnz
dec
pop
pop
add
or
cmp
data16
test
or
jne
in
ss
aam
inc
inc
call
je
jge
repz
loop
or
jecxz
aad
jge
push
jae
cli
and
aaa
jmp
addl
iretw
jle,pt
or
lock
aam
sbb
sbb
daa
scas
inc
jo,pt
adc
sbb
lcall
adc
push
mov
out
add
mov
int3
je
jb
ss
insl
cmp
cs
lcall
inc
imul
mov
xor
adc
inc
psubw
dec
fstps
mov
mov
xchg
loopne
mov
stos
jns
pop
sub
daa
sub
lea
cmpsb
fwait
pop
inc
add
ja
stc
outsb
or
scas
loope
or
mov
or
out
rol
cmp
fldcw
cmp
movsb
enter
xlat
cmc
mov
movsl
push
add
iret
sbb
insb
dec
and
cltd
lret
pop
rcl
shlb
mov
pop
jnp
and
sub
dec
fisubs
aam
sub
add
pop
ljmp
adc
sbb
fisubs
push
fcmovb
jecxz
xchg
mov
insl
inc
mov
sub
push
aaa
icebp
xorl
ds
inc
dec
ror
jmp
mov
imul
clc
cmp
sbb
aaa
addb
dec
notl
pop
jne
cmpb
jge
add
call
xchg
cld
jnp
cmc
out
mov
add
test
push
dec
in
push
repz
pushf
jecxz
and
clc
mov
js
xchg
aam
add
std
imul
ret
xchg
xor
scas
jmp
xchg
mov
mov
jecxz
mov
inc
cmp
push
jo
fsts
out
dec
in
addr16
sbb
pop
es
mov
push
lods
xor
dec
push
push
sahf
in
lret
lock
sbb
and
pop
mul
push
cmp
dec
mov
jnp
movsl
lret
mov
xor
test
int3
js
aas
scas
loopne
jae
les
lods
fucomip
hlt
shll
xchg
mov
push
adc
shll
or
add
add
fsubs
xor
mov
add
imul
push
cmpsl
ret
mov
push
mov
mov
push
movsl
inc
or
jp
push
ret
mov
pop
inc
gs
out
pop
jge
and
pop
leave
cltd
nop
in
std
mov
add
ja
mov
dec
or
jno
add
cmpsl
stc
je
pop
sbb
mov
dec
ret
jl
or
cmp
stos
jge
xchg
dec
inc
cmpsl
aam
and
fmull
sbb
and
xchg
lcall
lea
pop
mov
jo
mov
test
xorl
push
pop
sahf
stos
push
sub
stc
inc
xor
xchg
cli
test
add
adc
repnz
cmp
rorl
xchg
mov
cwtl
outsb
mov
mov
ja
icebp
and
xor
adc
fstps
leave
jecxz
mov
cmc
jnp
mov
mov
std
sub
mov
imul
cwtl
inc
mov
divb
dec
mov
js
test
lds
inc
imul
gs
push
pop
jae
popa
jbe
jno
call
push
sub
adc
adc
jno
aaa
pop
xor
sar
cs
mov
stos
and
pop
aaa
mov
xchg
stos
dec
shlb
adc
mov
outsl
mov
xchg
mov
or
xor
fcomi
rclb
xlat
loope
jmp
sub
push
sub
push
jae
sbb
cmc
inc
insb
repnz
inc
call
test
push
pop
adc
inc
mov
sub
and
ss
iret
add
fsubp
xchg
dec
mov
cmp
pushf
cs
subb
repz
xchg
adc
addr16
adc
push
and
push
xor
xchg
push
cmp
adc
mov
push
xlat
cwtl
or
repnz
repz
jp
pop
les
jbe
cld
test
cmpsl
enter
xorb
insb
das
test
pusha
loope
nop
and
roll
push
dec
and
enter
shrd
mov
jle
gs
aad
mov
mov
inc
mov
dec
and
aas
inc
mov
dec
fdivrs
out
ret
inc
jmp
mov
pusha
or
call
jnp
jns
sub
adc
push
pop
lcall
arpl
cld
addr16
adc
fwait
mov
jae
inc
in
vxorps
int3
cmp
test
lea
mov
call
or
test
inc
mov
mov
jg
fnstsw
or
push
mov
out
jne
loopne
dec
or
out
sbb
push
jb
and
test
imulb
jne
rorb
cmp
popa
dec
jo
movsl
pusha
movsl
int
mov
dec
adc
test
nop
push
xlat
jg
mov
mov
shld
dec
inc
fwait
push
nop
aaa
mov
push
add
lea
ljmp
push
mov
mov
aas
loope
in
xor
ljmp
push
jbe
push
xchg
mov
push
in
pop
icebp
mov
push
xchg
and
iret
xor
ss
dec
stc
divb
test
mov
push
lock
loope
and
jae
push
and
lahf
push
scas
popf
mov
ret
lock
fisttpll
pop
test
sahf
cltd
pop
push
jns
xchg
or
add
pusha
test
mov
inc
add
adc
punpcklwd
cmp
test
mov
cmpsb
int
push
xlat
inc
std
ret
xchg
sub
add
push
inc
sub
jo
adc
sti
push
jl
push
and
or
pop
idivl
frstor
jo
into
jmp
aaa
add
push
pop
enter
sbb
popa
cmp
mov
cmpsl
or
jne
sub
roll
mov
mov
dec
adc
add
jl
cmp
movsl
push
shrl
jns
jmp
mov
pop
dec
in
fstpl
scas
mov
push
lods
loope
adcl
cs
or
or
push
cld
sbb
cmp
add
lret
add
repz
popf
sub
xor
fnstcw
lea
sbb
push
sub
inc
cmp
sub
and
jge
mov
xchg
rcrl
dec
inc
jae
mov
mov
sbb
stc
pop
lret
dec
pop
cs
sub
or
mov
cmc
int
push
mov
fisttpl
adcw
lahf
and
dec
imul
cbtw
lea
test
jb
ss
mov
stc
lods
outsl
push
test
xchg
and
lcall
sbb
push
xor
adc
data16
in
dec
jle
adc
movsb
dec
fidivrs
xchg
cmpsb
sub
cmp
les
jecxz
mov
cmp
cmp
jg
fcompl
mov
ret
shl
mov
xchg
xor
mov
movsb
out
imul
sbb
out
lret
cmp
mov
push
cmp
dec
push
cmpsb
mov
mov
movsl
jmp
movsl
jmp
and
and
adc
mov
sbbl
iret
mov
lret
stc
lret
pushf
pop
into
ljmp
cmp
mov
or
in
sarl
ds
xchg
xchg
in
mov
mov
xchg
xor
lcall
sub
push
jge
inc
jo
scas
arpl
dec
mov
or
jge
or
sub
inc
or
fnstcw
pop
push
push
dec
orb
cli
test
test
ljmp
or
inc
or
and
lea
jne
push
stos
loop
sbb
mov
cmpsl
fcomi
add
ja
test
push
or
test
cmp
mov
push
jmp
lods
mov
clc
fistpll
sarl
jg
mov
xor
nop
mov
lahf
addr16
xor
xor
xor
sub
les
add
pop
test
pusha
sbb
pop
mov
insb
inc
loop
and
jmp
fdivl
pop
add
and
pop
dec
fildll
pop
daa
bound
lahf
call
out
push
adc
jnp
movsb
xchg
dec
mov
ficoms
orl
sub
popf
outsb
xor
inc
push
add
aaa
insl
jbe
jl
clc
test
addr16
or
lret
xchg
mov
imul
sbb
arpl
pusha
mov
jbe
call
mov
dec
cmovb
test
inc
mov
pop
mov
mov
push
inc
xor
and
imulb
inc
jle
add
ret
call
ja
inc
imul
mov
pop
mov
rolb
jge
adc
fs
xor
popf
shrl
jge
push
addr16
push
jle
fisubs
sbb
adc
aam
mov
rcrl
int
bound
xor
inc
jo
arpl
movsb
sub
mov
mov
enter
or
sub
push
dec
lea
mov
mov
ret
or
aas
fnstcw
push
push
ljmp
xor
sub
inc
jo
xchg
out
or
icebp
sti
stos
pushf
out
stc
inc
into
push
or
xchg
push
mov
push
sbb
sbb
ljmp
je
leave
inc
and
add
dec
push
mov
and
testl
outsb
nop
lods
mov
out
cmpsl
movsl
xchg
push
std
js
and
adc
jle
test
cmp
cmp
xlat
cs
addr16
es
cmp
enter
add
or
push
repz
int
inc
sbb
in
jg
mov
xchg
add
bound
xchg
dec
leave
xor
das
notl
sahf
lahf
jmp
pop
ja
test
and
sbb
insl
sarl
sbb
pop
sbbl
fcompl
das
inc
pop
dec
and
and
ss
sub
test
dec
inc
xchg
sar
arpl
aam
dec
push
subl
shrb
es
outsb
movsb
into
mov
popf
gs
adc
sbb
pop
fldenv
rolb
inc
shrl
mov
push
fiadds
adc
xchg
jg
dec
and
mov
adc
pop
popl
pop
cmc
hlt
or
xchg
push
mov
sbbl
cmpsl
stos
mov
enter
dec
outsb
xchg
int
nop
clc
and
push
xor
ds
arpl
xor
aas
sbb
mov
adc
pop
jmp
rorb
mov
xchg
adc
xchg
mov
xchg
lods
sub
sub
lret
iret
mov
or
mov
pushf
dec
adc
xlat
mov
or
jl
add
xchg
lcall
push
cmp
ljmp
jg
inc
dec
ss
fs
mov
jno
xchg
adc
scas
pop
rorb
mov
outsl
cld
mov
fs
add
movsb
pop
mov
xor
sbb
mov
ret
fmull
xor
pop
push
sub
xchg
mov
dec
mov
pop
or
add
jae
and
loopne
cmpsl
mov
andl
jecxz
or
pop
aam
je
pop
in
sub
arpl
xor
aam
insl
ljmp
js
cmp
mov
push
xor
jne
pop
lahf
fdivr
scas
cmpsb
pushf
mov
aaa
xchg
loop,pn
or
leave
or
sbb
mov
jg
cltd
outsb
jne
pop
jne
jle
movsb
ret
mov
adc
cmp
pop
mov
adc
dec
add
mov
xchg
pop
sbb
stos
xor
and
push
hlt
xor
in
aam
into
xchg
push
sub
sbb
jnp,pt
sbb
xor
mov
sub
mov
lcall
cwtl
pushf
xchg
add
clc
pop
popa
dec
cmc
and
xchg
cmc
xor
push
mov
xchg
les
dec
shrl
loopne
add
xchg
stc
hlt
mov
daa
insb
not
test
inc
adc
jmp
push
xchg
shrb
das
fadds
xchg
cmp
mov
ret
push
push
mov
pop
iret
and
push
iret
popa
test
jo
stos
pop
das
push
mov
push
les
jmp
in
jo
ret
cmc
xchg
add
repz
xchg
adc
xlat
adc
into
mov
mov
or
int3
xchg
mov
lret
jbe
adc
out
call
pushf
push
inc
cmp
cmp
cld
rcrl
push
mov
push
loop
lret
js
sub
ucomiss
push
dec
ljmp
xor
pushf
fs
lret
inc
xchg
repz
enter
push
int
cmpsb
mov
mov
jbe
aas
inc
loop
push
test
cmpl
add
sti
mov
xchg
sbb
mov
sbb
aaa
pop
jecxz
and
lods
jg
mov
or
adc
jp
push
outsb
cmp
fistl
das
std
imul
push
lock
jge
jecxz
adc
push
push
stos
imull
call
int3
and
pop
aad
fs
sub
xchg
sbbl
jecxz
je
inc
out
jecxz
mov
fstl
fcoml
rcrl
xor
push
pop
lds
sbb
mov
rcll
pop
pop
scas
jae
add
jae
shr
insb
xor
inc
lret
sub
push
sub
call
call
icebp
push
dec
xor
cli
in
aam
dec
ret
inc
sbb
xlat
jle
xorl
mov
scas
mov
xchg
sbb
movsl
sub
jge
fs
jbe
cli
daa
popf
sbb
mov
mov
outsl
xchg
mov
xchg
cmp
lcall
mov
sub
cmp
sbb
popf
int
sub
add
mov
sub
push
std
mov
xor
nop
adcb
movsb
mov
in
mov
add
mov
jnp
cmp
mov
lea
test
out
sahf
inc
test
cwtl
scas
lods
daa
mov
add
pop
inc
adc
int3
push
xchg
dec
ret
jmp
sbb
ret
lock
add
or
mov
jnp
xchg
imul
sbb
mov
ret
repnz
pop
fnstsw
data16
adc
add
ret
xchg
repz
dec
addr16
lret
sbbb
outsb
cmpsb
je
das
das
out
push
mov
divb
add
and
push
jle
pop
imul
push
sbb
adc
popa
mov
test
jne
cli
pop
les
fcmovb
cmp
jecxz
repz
gs
insl
aaa
xchg
pusha
ljmp
into
mov
sbb
sar
lods
pusha
iret
aam
mov
outsl
js
and
mov
jbe
data16
enter
mov
xchg
sbb
shll
sub
cmpsl
rorl
les
xor
scas
lds
icebp
cld
dec
and
push
or
sbb
fcomps
fists
ds
jbe
lods
insl
sti
pop
lcall
xor
int
lahf
int3
nop
cmp
inc
not
clc
sub
cli
out
jbe
cmpsb
sub
push
xchg
pop
mov
test
jmp
push
stos
adc
xchg
inc
ss
icebp
mov
and
xor
xor
ljmp
fdivrs
jo
jo
shll
dec
jns
push
push
sbb
mov
cmp
mov
aam
jmpw
ja
cmp
mov
mov
xor
mov
adcb
push
movsl
scas
dec
jg
ret
mov
xor
ljmp
mov
dec
xchg
lret
add
sbb
sub
push
fimull
call
adc
push
hlt
pop
iret
inc
cltd
inc
mov
rcrb
push
pop
or
leave
add
icebp
inc
popa
cmp
mov
mov
pop
int
clc
scas
inc
cmp
jmp
xchg
inc
leave
sub
in
pop
sub
sub
sbbl
les
push
jnp
adc
add
mov
pop
sbb
minps
inc
xor
loop
or
jecxz
stc
mov
std
loop
clc
mov
dec
cmp
sub
in
scas
repz
je
pop
repz
popf
out
jno
es
stc
out
sub
sbb
aaa
fcom
jp
in
mov
shl
je
mov
clc
mov
fstps
cld
mov
aas
lcall
les
cld
sti
jmp
rcll
sub
push
ljmp
pop
hlt
lret
ss
int3
into
adc
mov
sbb
loop
ljmp
sbb
loop
xchg
sub
cmp
adc
das
dec
ss
test
and
mov
bound
sbb
xor
sti
out
fwait
lods
sbb
xchg
aaa
add
sbb
gs
xor
jae
sub
mov
jne
cmpsl
adc
nop
inc
pop
adc
dec
insb
stc
imul
mov
fldl
inc
cmc
pop
pop
xchg
negl
or
jecxz
addr16
scas
sbb
jl
and
cli
and
sub
jge
push
or
pop
mov
or
pop
into
push
push
loopne
push
and
dec
mov
or
inc
push
lods
iret
in
ja
fdivrl
mov
jnp
jle
cwtl
fstpt
sbb
inc
add
jns
push
jae
dec
outsl
cmp
movsb
fiadds
adc
test
sub
ret
pushf
cs
out
cmpsl
adc
cmpsl
add
cld
sbb
sahf
or
sbb
call
je
cmpb
aas
loope
call
and
jl
cmpsl
pop
pop
mov
out
outsl
js
dec
xchg
xchg
push
shrl
lcall
lcall
cld
lahf
pop
mov
inc
jmp
test
mov
mov
cmp
cmc
data16
push
mov
incl
dec
mov
iret
shrb
sub
clc
adc
addr16
iret
bound
leave
fdivs
imul
clts
push
sub
cmp
aaa
cmp
mov
inc
imul
js
in
push
jle
addr16
sub
push
cli
int3
sbb
push
je
xchg
mov
or
adc
push
jne
outsl
mov
or
iret
xor
mov
cmp
pop
pop
mov
outsb
jbe
cli
clc
call
ret
aas
or
sahf
adc
ljmp
cmpsb
xor
or
mov
cmc
stos
insl
sbb
sti
in
ja
or
jmp
ljmp
sub
mov
cmp
shr
xchg
dec
shr
mov
push
lea
mov
faddl
mov
jecxz
and
rcrb
out
ret
or
frstor
add
sbb
pop
push
mov
ret
fdivs
movsl
int3
push
fchs
out
sbbl
dec
inc
loopne
and
in
jne
shr
idivl
and
xchg
push
into
stc
adc
popf
scas
xchg
xor
mov
mov
jb
add
and
mov
loop
mov
adc
sti
mov
xor
loope
test
cli
push
and
sub
jl
inc
lds
jbe
aad
push
shll
jae
ror
cmp
in
push
or
push
test
icebp
ret
cmc
push
add
mov
add
mov
in
insb
andl
loop
rcrb
add
mov
xorl
insb
fstps
push
clc
and
xchg
gs
mov
lds
ljmp
es
adc
sub
hlt
clc
fcompl
lret
fs
cmc
inc
mov
mov
int
and
lret
sbb
outsb
dec
in
cltd
call
add
xchg
push
out
and
jl
and
pushf
outsl
pushf
dec
jne
bound
arpl
add
scas
sbb
test
popa
jmp
mov
mov
int
fstp
roll
cmc
inc
mov
lds
push
mov
inc
div
dec
mov
subb
pop
mov
cmp
aas
sbb
inc
jae
lea
imul
test
repz
sub
and
pop
mov
or
or
data16
and
test
xchg
mov
aas
pushf
and
pushf
lahf
inc
and
mov
nop
cli
call
mov
mov
not
ficoml
mov
cmc
insl
xchg
xor
scas
mov
and
flds
pop
bound
push
adc
and
and
or
pop
inc
mov
test
lret
ljmp
fnstcw
mov
fstps
add
dec
iret
adc
mov
test
mov
sahf
mov
add
sbb
xchg
inc
popf
cltd
push
mov
cmpl
cld
add
xchg
out
mov
push
inc
pusha
ret
cmp
sbb
adc
inc
cmp
xor
testl
lds
jle
xchg
jne
adc
jge
dec
dec
mov
xor
movsl
push
sub
mov
imul
cmc
scas
dec
adc
lods
in
loopne
cmp
mov
pop
xlat
mov
pop
popa
inc
fsubrs
sub
pushf
jp
iret
stos
inc
sbb
pop
lock
stc
lods
nop
xor
out
into
add
push
xchg
cmp
fnstsw
lods
mov
and
mov
out
sub
in
dec
jl
or
pop
lea
movsl
fmuls
push
lds
mov
into
sub
movsl
or
cwtl
mov
dec
lret
adc
lahf
xchg
and
loope
sar
shll
fnsave
ret
push
mov
jns
jbe
je
or
test
ss
mov
mov
sbb
mov
sub
cmc
adc
scas
mov
adc
ret
addl
lcall
fcomp
int
daa
mov
jl
sub
test
es
mov
push
aaa
cmc
mov
inc
and
loop
enter
dec
pusha
movb
test
jbe
jae
icebp
mov
mov
scas
fs
cs
rcll
enter
jb
orl
push
pop
repz
cmp
popf
insl
xor
inc
in
mov
addb
jae
push
stos
int3
or
inc
pop
stos
aad
xor
mov
inc
adc
jo
scas
pushf
mov
int
lret
mov
sub
out
test
gs
mov
push
push
fildl
pop
xchg
cmpsl
stos
nop
add
lahf
cmp
cmp
xor
push
movsb
arpl
ss
xlat
dec
repz
mul
jmp
js
sub
scas
xor
call
mov
add
or
imul
fisubrs
cwtl
dec
mov
mov
or
push
add
jg
mov
mov
cs
and
nop
in
sti
push
data16
xchg
sbb
cmp
mov
add
leave
rcrl
imul
and
or
cmp
and
pop
in
pop
mov
pop
mov
int
add
popf
outsl
pushf
mov
je
lahf
mov
adc
fbstp
fsubrl
sub
repz
sti
add
cmp
sbb
fisubs
loop
mov
add
mov
dec
jns
cmp
pusha
jge
mov
movsb
and
sbb
adc
dec
xchg
xchg
and
lret
jns
xor
lahf
insb
stc
lods
mov
mov
mov
xor
hlt
test
or
adc
pop
mov
push
testl
sahf
aad
mov
jecxz
das
and
clc
imul
pop
mulb
inc
sub
enter
hlt
push
lret
outsb
je
je
xor
jns
mov
sbb
mov
mov
mov
and
and
mov
adc
cmpsb
add
push
loopne
jge
pop
mov
mov
in
and
xor
xchg
jno
dec
les
mov
jg
aaa
cmp
dec
sbb
push
enter
jb
in
push
jno
daa
fcomps
jbe
sub
mov
and
or
inc
int3
dec
mov
cmp
adc
cmp
push
push
inc
jno
imul
es
ss
sub
lods
adcl
push
pop
sbb
lods
push
clc
in
pushf
stos
rcl
push
xor
bound
repnz
cltd
adc
clc
mov
aas
test
add
adc
and
leave
cmp
inc
pop
imul
scas
inc
inc
iret
lret
pop
push
pop
lock
jp
sub
mov
insl
seta
ds
scas
mov
repnz
nop
sub
sub
cmp
call
lret
std
movsb
push
pusha
imul
cmp
mov
jle
mov
out
stos
adc
stos
xor
jo
dec
ja
in
dec
repz
jns
xlat
cmpsl
inc
popf
mov
pop
jnp
xchg
clc
mov
xlat
lods
mov
mov
test
pop
scas
ret
das
ret
pop
psubq
fildl
outsl
shl
std
ss
inc
push
mov
bound
mov
push
mov
or
jne
jbe
sbb
popa
arpl
stos
mov
lods
insb
addb
iret
push
mov
lods
add
aam
aaa
popa
std
out
jbe
data16
dec
loop
fisttpll
pop
jmp
adc
cs
jge
adc
test
push
add
insl
nop
mov
push
gs
inc
push
sub
std
imul
bswap
add
in
and
outsb
mov
sbb
stos
sbb
sahf
jg
add
mov
adc
add
repnz
imull
xchg
sub
ret
or
sub
shl
in
inc
mov
dec
pop
pop
jecxz
pop
clc
outsb
fcom
in
shl
jno
fdivl
sub
test
sub
test
xor
pop
enter
mov
mov
push
das
loope
sbb
hlt
pop
jle
in
shr
or
sarb
lahf
jl
add
addr16
sbb
ljmp
mov
xchg
xlat
mov
insb
xor
dec
push
mov
add
cmp
lret
xchg
cmp
push
jg
loope
popa
xor
push
push
imul
test
adc
neg
inc
inc
pop
push
jmp
inc
cmp
ss
int3
fcompl
jl
xlat
push
imul
ljmp
cmpsl
in
adcl
push
push
pop
cmpsl
and
clc
inc
push
test
scas
into
pop
in
jnp
mov
cmpl
insb
int3
add
mov
xchg
jns
mov
mov
jg
or
fcompp
xchg
or
mov
movsb
shrl
xorl
push
mov
mov
push
out
or
jno
and
mov
or
outsb
xor
pusha
lcall
pop
pop
add
das
imul
aad
inc
inc
push
sub
jno
and
idivb
adc
mov
cs
mov
lods
test
repz
mov
push
pop
xchg
jne
mov
jp
ret
xor
inc
shrl
inc
stos
add
xlat
adc
jmp
rcrb
scas
repz
adc
outsb
dec
dec
or
test
or
adc
in
ret
addr16
mov
xchg
xor
icebp
adc
or
leave
xchg
xor
data16
cmp
mov
ds
cmp
dec
sub
imul
xchg
shl
xor
addb
push
jno
mov
push
jne
pop
shl
sti
iret
xchg
dec
dec
fcomi
push
push
adc
mov
fwait
std
lahf
xchg
mov
stos
pop
add
xorl
xchg
pop
fucomip
stos
stos
lods
andb
xchg
add
scas
mov
mov
pop
xchg
mov
sub
sbb
bnd
cmpsl
lahf
xchg
addl
inc
insb
jb
es
push
fpatan
push
xor
push
stos
nop
hlt
daa
mulps
int
mov
and
cmc
xchg
fists
add
and
insl
jbe
and
shll
adc
cmc
dec
pushf
xor
dec
inc
add
pop
inc
stos
mov
sbb
cmp
mov
sbb
pushf
push
sub
fiaddl
jno,pn
aam
imull
mov
push
in
xor
loop
stos
push
out
dec
enter
dec
mov
mov
out
call
jne
xor
mov
mov
fcmovbe
pusha
push
roll
push
and
push
jo
repnz
lcall
dec
push
mov
out
dec
pop
push
add
and
dec
cmp
pusha
fldenv
xor
mov
adc
add
stc
cmp
jmp
sbb
push
adc
arpl
movsb
pop
adc
dec
push
inc
xor
dec
xor
popa
imul
sub
std
lods
sti
fldenv
test
jge
xchg
xchg
mov
sarl
loope
scas
xor
or
xchg
cmp
ret
push
inc
sub
jne
mov
int3
hlt
push
pop
dec
es
stos
jecxz
push
and
mov
mov
inc
cld
fs
pop
rcr
xchg
daa
mov
mov
test
je
jno
xchg
xchg
in
mov
sub
inc
sbb
xchg
ja
add
cmpsb
imul
xchg
ret
leave
xor
jnp
std
xchg
rcll
pop
sub
scas
mov
sbb
out
pop
xchg
cltd
sub
jns
pusha
xchg
push
adc
pop
adc
in
mov
icebp
jl
aaa
jecxz
ror
cmp
scas
pop
pop
adc
repnz
cltd
sbb
cltd
mov
es
inc
add
adc
lods
test
sbb
pushf
pop
sbb
push
and
cmc
xor
xor
jae
pop
ja
inc
fimuls
ss
out
dec
or
push
jmp
push
out
out
jecxz
aas
mov
dec
mov
cmpsb
xchg
and
fsts
dec
jl
fwait
sbb
imul
andl
popf
push
lret
push
fs
mov
arpl
xchg
gs
aaa
adc
jb
in
call
push
xchg
out
fnsave
mov
mov
pop
sbb
sarb
push
cmp
push
or
aaa
xor
loop
scas
cld
xchg
cltd
daa
xor
cmpb
fisubrl
add
cmpsl
test
aam
aam
loopne
or
lods
rcrl
scas
mov
lahf
jnp
push
jb
sub
dec
pop
int
inc
xlat
dec
push
arpl
enter
push
cmp
je
and
je
sbb
je
mov
dec
cmp
cmp
repnz
sbb
stc
sbb
dec
cmp
popa
xchg
flds
sahf
mov
dec
mov
arpl
sub
std
jo
movsb
shll
out
lods
sbb
aam
aas
std
xchg
xchg
loop
xor
pop
and
test
es
mov
xchg
mov
inc
pop
inc
cmp
test
jecxz
fs
addr16
shll
jle
js
loopne
stos
cmp
test
outsb
ja
cmc
lods
jp
dec
xchg
sbb
add
in
mov
lcall
inc
lret
cvtps2pd
pop
pop
rcrl
sbbb
lahf
enter
test
ds
push
dec
dec
iret
add
push
dec
and
sbb
lods
mov
jmp
pusha
inc
outsb
jb
movsl
sbb
and
mov
jmp
mov
mov
and
inc
test
mov
subl
jns
inc
movsb
icebp
jnp
sbb
enter
pop
push
or
out
mov
adc
sub
xor
inc
test
jg
es
pop
or
mov
test
loopne
push
mov
jne
outsl
mov
mov
dec
sub
dec
or
nop
dec
loop
cli
cmp
jmp
push
mov
inc
sti
sbb
fadd
cmp
repnz
fnsave
xchg
or
lods
stc
jge
mov
and
add
aas
repnz
jnp
dec
push
push
ja
mov
and
dec
jmp
fimuls
les
ds
xchg
lea
jne
loopne
sbb
mov
push
js
cmc
fs
mov
in
dec
xor
test
pop
jle
ds
add
sbb
jae
daa
ret
rorb
adc
sarb
add
out
arpl
fadd
mov
adc
orb
stc
xchg
adc
xchg
jecxz
pop
movsb
ja
movsb
xchg
mov
pop
xchg
adc
push
int3
roll
mov
in
mov
dec
fsubrl
je
enter
rcl
pop
orl
int3
jno
inc
rorb
ljmp
ja
xchg
adc
jne
xchg
les
mov
flds
dec
cmpb
mov
dec
aam
lds
std
je
je
jae
push
push
jno
and
inc
jae
lea
add
int
sar
into
xchg
pushf
and
mov
sbb
mov
nop
or
sbb
sbb
and
repnz
pop
sub
sub
adc
xor
mov
lret
lods
sahf
aam
gs
fsubl
push
mov
insb
test
dec
jmp
mov
icebp
adc
in
inc
pushl
fmuls
cmpsl
and
je
nop
mov
aam
pop
jecxz
inc
jmp
mov
mov
pop
or
lcall
and
dec
std
jecxz
inc
rcll
adc
or
fs
insl
rolb
pop
pop
int
enter
outsb
mov
sub
dec
loopne
mov
sbb
test
cmpsb
rcll
in
adc
aad
mov
or
sbb
sbb
cltd
dec
out
fcompl
mov
and
jge
mov
mov
dec
mov
dec
daa
push
pop
icebp
cltd
mov
add
rcrb
add
mov
pop
xchg
fsubrl
daa
or
push
aas
adc
mov
xor
mov
decb
pop
mov
mov
sahf
mov
rclb
int
push
sti
icebp
popa
jl
cmp
stos
sbb
das
push
or
jb
add
add
inc
mov
mov
xor
test
jle
xchg
icebp
or
icebp
sub
stos
mov
adc
adc
xor
mov
sub
sub
or
lret
pop
daa
arpl
fisttpl
jnp
cmp
idivb
cmp
cli
pop
lret
lock
sbb
sub
mov
inc
shlb
xorb
int
xor
jno
leave
repz
dec
xor
jmp
jecxz
xchg
push
or
insl
fyl2xp1
fsts
arpl
sub
inc
xchg
xor
imul
ljmp
dec
sarb
mov
in
jg
sti
jge
test
andb
mov
jg
push
aad
ljmp
dec
lret
lock
push
outsl
add
leave
pop
push
dec
outsb
aam
ret
and
jle
lods
mov
add
iret
std
mov
pop
loop,pn
push
ljmp
std
lock
aas
xchg
jl
dec
jmp
mulb
andb
xor
shrb
dec
cmp
shl
or
mov
mov
shll
pop
pop
jns
ret
mov
and
inc
fidivs
ret
int3
xor
insb
push
push
push
in
jns
xor
outsl
or
stos
filds
test
das
and
inc
sub
jmp
xchg
or
jp
jecxz
adc
shr
lret
mov
fsubrs
sbb
mov
xchg
xchg
mov
cmpb
adc
loopne
push
inc
mov
rclb
jnp
xchg
imul
push
push
sarb
in
out
sbb
dec
and
stos
mov
not
mov
jmp
mov
jb
ljmp
xor
iret
or
sub
jmp
pop
dec
shll
aad
setns
outsl
lret
in
xchg
mov
imul
xchg
sub
xor
fwait
xchg
add
add
mov
aad
testb
jmp
lret
jb
or
mov
jne
cmp
and
ffreep
js
outsl
sub
cmp
arpl
jmp
leave
jae
or
bound
negb
enter
jae
es
js
fistpl
jge
movsl
mov
sub
pop
jl
push
aas
es
bound
xchg
aas
sbb
movsl
ljmp
gs
cs
jbe
clc
xchg
sbb
aaa
and
push
or
cltd
lret
js
sti
fidivrl
movsb
inc
or
rcll
push
sub
call
les
xchg
xor
lcallw
nop
cmp
fiadds
adc
shrl
stc
push
or
xor
outsb
and
or
sub
movsb
loope
sbb
xchg
mov
add
adc
mov
leave
sbb
mov
mov
jbe
mov
fdivs
or
movsb
and
inc
cltd
test
jnp
push
insl
sbb
mov
js
dec
push
out
cmp
add
pop
fbstp
dec
adc
mov
sbb
arpl
sbb
movb
jbe
sub
push
cmp
cmpsl
xchg
nop
cmp
mov
push
sbb
mov
lret
in
add
and
xor
push
ljmp
data16
jbe
mov
add
mov
movntps
sub
pushl
adc
insl
jle
mov
fimuls
and
shrl
loopne
movsl
jle
sub
out
lret
pop
jno
ficoml
ret
mov
push
sbb
jae
inc
mov
cmp
hlt
in
call
or
jae
dec
bound
pop
sti
inc
xor
mov
push
jae
jle
jp
pop
pushl
mov
rcrl
ret
fmul
sub
jbe
mov
add
sbb
jg
scas
jno
test
ja
dec
xor
jns
test
cmp
xchg
add
js
out
or
or
mov
fwait
mov
adc
bound
sub
frstor
loopne
subl
and
mov
fcomip
icebp
mov
enter
push
jmp
outsl
add
movl
out
clc
push
sub
loop
loopne
push
inc
jae
std
xchg
nop
fnstsw
push
sub
sbb
xor
nop
mov
andb
ret
fs
lods
test
jnp
test
std
mov
pop
mov
xor
pop
gs
pop
ret
push
mov
pop
test
and
jae
cltd
leave
out
repz
dec
nop
lret
adc
std
fs
mov
jb
lock
inc
daa
mov
push
dec
dec
daa
push
push
inc
bound
repnz
jmp
mov
push
jno
pop
mov
cld
test
or
pop
cld
cwtl
rorl
sub
movsb
repz
mov
iret
jnp
or
bnd
fs
std
fcmovnu
adc
mov
push
xor
xchg
cmp
shlb
loop
cmp
out
addr16
les
mov
cmpsl
cld
mov
mov
mov
push
adc
insb
dec
or
adc
pop
push
push
pop
sbb
inc
push
pop
scas
imul
xor
loop
push
and
mov
leave
es
mov
ja
jl
cmp
cli
mov
lret
mov
into
and
and
sarl
into
jecxz
push
fisttpl
jecxz
mov
push
insb
push
dec
and
xlat
push
data16
stos
je
dec
xor
jp
and
jno
jle
sub
sub
xchg
xor
arpl
ret
sbb
test
and
push
and
arpl
sti
adc
in
mov
mov
out
andl
lds
cmp
out
push
xchg
or
dec
jns
imul
js
repz
mov
movlps
mov
xchg
lods
pop
out
adc
sbb
or
pop
adc
out
aas
push
push
sar
aad
jmp
push
scas
js
dec
pop
inc
repz
pop
jae
movsl
pop
push
mov
sti
and
outsl
cmp
mov
ds
mov
dec
dec
pop
lcall
aad
mov
sub
movsl
jmp
rclw
fdivrl
pusha
xchg
out
add
out
dec
sub
mov
test
into
aas
and
add
fiadds
add
out
cs
gs
imul
xchg
sbb
test
ljmp
xor
push
mov
mov
xchg
or
push
loopne
and
mov
push
sbb
add
dec
negl
loopne
add
into
xor
sub
es
mov
xchg
xchg
data16
aas
pop
push
add
adcl
mov
push
aam
mov
in
pop
push
lret
xchg
mov
shll
hlt
dec
cmpsb
cld
cs
stc
imul
cmp
sbb
push
mov
mov
xchg
ret
and
xchg
sbb
cs
stos
lds
lods
xlat
mov
addr16
push
or
adc
loop
mov
sbb
insb
lret
jmp
mov
add
push
xlat
movsb
jo
in
addr16
dec
cld
cmp
mov
test
adc
popa
push
punpckhdq
xchg
outsb
inc
mov
dec
test
aam
push
jbe
test
xchg
filds
jb
mov
inc
dec
leave
shl
xchg
inc
push
fwait
testl
icebp
fstpt
mov
pop
push
addl
pop
xchg
cmp
pop
imul
fld1
or
mov
sahf
xchg
lret
xor
sub
xor
jns
lcall
lods
fidivs
and
into
lds
dec
push
sbb
and
pop
aaa
add
cmpsb
push
pop
gs
push
jecxz
adc
xchg
cmp
mov
out
mov
bound
lds
xor
je
call
push
in
push
jmp
inc
inc
lea
test
sub
movsl
in
jl
imul
rol
inc
mov
mov
aad
iret
in
std
mov
mov
cmpl
pop
inc
xor
arpl
sbbl
mov
add
jg
pop
cmp
sub
shll
shlb
mov
fcomps
pop
xchg
nop
lods
mov
cmpsb
dec
sbb
xor
inc
sbb
daa
jecxz
cwtl
stos
movsb
mov
mov
cmp
push
adc
into
test
popa
hlt
in
cmpsb
out
cltd
mov
mov
dec
js
jmp
int3
xlat
scas
adc
loopne
or
pop
mov
pop
sti
fistpl
jp
insb
data16
pop
lret
fidivrs
inc
pop
popf
xor
stos
clc
jns
push
ja
arpl
mov
ds
sub
cwtl
movsb
in
mov
and
pop
sahf
adc
mov
xor
in
sbb
push
imul
or
jp
adc
pop
dec
jle
xchg
add
shl
cmp
sub
mov
into
imul
cmc
mov
adc
aas
fs
and
push
int
dec
mov
sar
lahf
inc
mov
cld
aaa
inc
pop
fwait
inc
pop
rcl
lods
jb
mov
lret
stc
es
cltd
pop
dec
jge
cld
mov
ds
add
dec
xchg
stos
insb
ret
and
sti
jo
xor
xchg
adc
and
out
mov
hlt
sub
sar
cmp
push
mov
xor
add
and
and
gs
fstpt
inc
je
mov
jno
xor
xchg
xchg
sbb
cmpsb
in
jns
jns
add
cwtl
arpl
movsb
sub
pop
stc
dec
lods
xchg
decl
sbb
leave
push
cld
sbb
je
bound
cmpsb
mov
mov
outsb
imul
ret
jmp
jno
sbb
add
f2xm1
sahf
mov
push
mov
xchg
test
push
push
in
mov
pusha
fbstp
fs
dec
cmp
push
mov
stos
lcall
jl
cmp
pop
stc
into
xchg
dec
push
mov
scas
fimull
push
call
ja
pop
mov
sti
mov
sbb
add
into
push
add
xchg
bound
das
pop
loop
mov
inc
cmp
jo
mov
data16
inc
stos
test
in
cmpsl
insb
int
sub
jo
call
daa
jnp
xchg
mov
mov
and
inc
in
and
or
lods
jg
rolb
sti
inc
mov
enter
out
inc
inc
inc
lds
pop
aas
push
aas
stos
dec
sbb
adc
popf
push
cli
dec
add
mov
std
lahf
adc
lcall
aaa
mov
lahf
push
or
lds
sbb
lahf
leave
or
mov
aas
fdivs
loope
aam
jle
lea
xchg
xor
pop
int
sarl
push
dec
setge
loope
mov
push
jbe
jle
negb
mov
rorb
es
out
mov
xchg
inc
hlt
cmc
out
or
test
subl
xor
daa
leave
repnz
mov
mov
push
pop
mov
pop
fisubrl
hlt
and
adc
ret
mov
dec
ja
mov
in
stos
stos
pop
or
pop
cmpsl
popf
in
sbb
and
scas
sub
jp
dec
cmp
in
xor
mov
clc
or
cmpl
sub
lcall
aaa
ret
test
adc
cmpsb
cmp
mov
rol
adc
loope
rcrl
or
xor
aam
popw
jo
int3
sbb
xchg
mov
and
and
cmc
mov
rclb
in
jbe
cmp
pop
mov
mov
shrl
push
movsl
outsl
stos
pop
cmp
stos
scas
push
and
into
mov
xchg
cmc
nop
or
mull
fwait
scas
or
stos
clc
sbb
icebp
lcall
adc
iret
inc
cmp
xlat
test
cmc
add
or
idivb
es
in
adc
scas
int3
int3
push
add
xor
mov
insl
js
xchg
dec
addr16
and
in
out
mov
sub
push
sbb
cmc
sub
sbb
gs
arpl
fs
inc
sub
out
scas
dec
mov
and
and
iret
mov
mov
mov
movsb
adc
cmp
ds
mov
nop
cltd
mov
jmp
out
imul
std
rorb
or
xchg
xchg
stos
dec
fs
cmp
pushf
mov
cmp
xorb
pop
cmpsl
and
shrl
movsb
adc
jle
xchg
push
xor
rorb
xchg
icebp
mov
movsl
jg
add
sbb
ret
fdivp
adc
sbb
cmp
xor
cmpb
ret
ret
js
xor
dec
repz
xchg
mov
inc
in
mov
xchg
lock
imul
mov
leave
cmp
xor
sbb
test
cmp
mov
imul
test
sub
sbb
out
mov
sub
lock
xor
mov
pop
push
pop
push
lock
das
pop
inc
sub
je
pop
xor
pop
enter
out
and
dec
into
adcb
jg
xchg
mov
inc
pop
and
or
pushf
mov
out
sbb
popa
mov
mov
leave
in
insb
ljmp
cmc
icebp
movsl
adc
shl
pushf
xor
test
adc
mov
sbb
sbb
gs
ja
xchg
xor
in
movl
dec
xchg
push
or
cmp
mov
dec
xchg
repz
push
xchg
fcompl
jbe
lods
mov
iret
or
sub
adc
mov
dec
sbb
push
xor
je
ds
jns
outsb
je
jmp
in
inc
leave
scas
mov
scas
test
lds
mov
in
mov
mov
iret
mov
push
int3
popa
mov
movsb
cmp
add
loope
dec
jnp
es
cltd
mull
cwtl
das
fildll
arpl
cmpsl
inc
cmp
cmp
inc
jbe
adc
std
fdivp
cli
jno
jo
ret
jbe
or
cmp
or
inc
mov
call
pop
lock
rclb
cltd
lea
lods
in
loopne
xor
cmp
mov
inc
in
inc
xchg
fwait
pop
lock
aad
lahf
mov
mov
lret
adc
mov
xchg
cs
sub
mov
mov
in
add
aam
out
add
imul
mov
incb
cmp
xchg
mov
lret
sub
daa
cmp
jno
push
stos
orl
enter
popa
and
mov
mov
movsb
mov
out
mov
cmp
jl
test
mov
jae
in
pop
pop
jge
std
aas
in
mov
test
xchg
das
aam
in
dec
mul
mov
movsb
xor
sub
mov
repz
scas
add
ja
dec
fwait
jae
adc
mov
sbb
xor
or
add
mov
pushf
add
add
or
dec
push
push
in
inc
push
and
outsl
jb,pn
inc
std
xchg
data16
push
addr16
outsb
and
adc
test
mov
loopne
lock
jp
mov
mov
ret
jno
out
jnp
adc
ljmp
bswap
add
add
insl
pop
loop
mov
ja
rcpps
push
jecxz
cld
loope
addb
cli
pusha
ds
fldl
inc
adc
mov
dec
daa
jle
sub
mov
aad
fdiv
out
aam
aaa
mov
mov
decb
adcb
fcomps
and
cld
cmpsl
adc
add
mov
mov
add
lcall
cmpsl
or
loopne
fildll
outsl
or
mov
xchg
sub
inc
add
icebp
mov
roll
cli
dec
stc
fimuls
cmpsl
pop
loopne
sbb
and
out
ret
out
xchg
sbb
stos
push
xchg
add
push
stc
jmp
pop
addr16
and
cld
rcll
xchg
dec
xor
mov
xchg
bound
add
and
push
mov
mov
xchg
daa
pop
pop
adc
nop
cmc
popf
lock
sub
pushf
icebp
ljmp
loopne
mov
or
add
lcall
lahf
ucomiss
fwait
ja
int
aaa
fisttpll
jns
dec
cld
mov
stos
mov
push
lea
cmp
subl
cwtl
xchg
jbe
inc
and
loope
pop
jp
inc
add
xchg
loope
dec
ret
cmp
inc
lret
nop
or
sbb
inc
cmp
xchg
or
sahf
pop
or
cmpsl
dec
lahf
movsl
mov
outsl
add
dec
int3
rorb
fdivrs
xchg
mov
add
into
xor
scas
shrl
or
mov
loop
loopne
sbb
shlb
cmp
pop
sub
adc
push
outsl
leave
stc
pop
cltd
push
and
or
sub
push
lret
popa
imul
xor
inc
andl
clc
xchg
dec
pop
jle
push
xor
popa
fisubrl
mov
jg
ret
fbld
js
fisubs
inc
ljmp
jp
sahf
ja
outsl
xor
orb
push
xchg
ror
jg
push
jnp
lcall
pop
or
loopw
and
popa
int3
cmpsl
inc
jno
repz
fldenv
jecxz
xor
inc
jne
and
adc
aam
inc
popf
mov
test
jmp
push
pop
movb
push
in
out
jo
push
fwait
mov
cmp
cmp
adc
repnz
sub
sbb
hlt
dec
out
jno
movsl
lret
mov
outsb
sbb
push
xchg
mov
pop
shll
push
popf
fs
enter
jle
push
insl
loopne
push
cmpsb
push
into
ljmp
dec
push
sbb
fnstsw
jl
lahf
rcrl
stos
sti
push
push
push
pusha
mov
rcl
iret
in
adc
jmp
and
xlat
popw
lcall
int
push
sti
mov
dec
cli
push
mov
data16
jae
push
sbb
pop
movsb
mov
push
pop
into
into
sub
inc
fildll
in
mov
fwait
lock
sbb
inc
push
push
in
sbb
and
cmpsb
int
dec
pop
adc
jae
popa
sub
ds
stc
add
cltd
cmpsl
cs
les
dec
repz
out
stos
push
in
imul
adc
sub
inc
sbb
cwtl
xchg
jae
push
bound
push
jge
cmp
es
das
jbe
les
add
pop
pusha
or
out
test
testb
stos
stos
testb
xorb
dec
mov
pop
rorb
push
cltd
add
pop
dec
push
frstor
inc
mov
loop
in
mov
bound
sub
call
add
push
jl
imul
ljmp
xchg
sahf
out
mov
cwtl
lock
test
xor
lret
in
int
test
test
xor
mov
push
and
negl
repz
adc
xchg
sub
xor
popa
dec
stos
pop
das
fldt
dec
mov
mov
pop
mov
daa
rolb
mov
fdivrs
sarb
xchg
add
popa
jp
mov
push
jb
ret
lret
adc
mov
not
mov
xchg
test
push
jns
dec
and
push
pop
hlt
sbb
dec
test
push
or
and
push
gs
inc
rcr
cmc
fadds
push
add
arpl
xchg
jecxz
icebp
jge
cmp
dec
cmp
xor
out
jb
and
lods
adc
in
pop
cmpsb
mov
cmp
test
test
xlat
lods
inc
ja
xchg
frstor
adc
out
movsb
out
jb
scas
faddl
fdivrs
sbb
sarb
sub
jae
sbb
pop
cld
xor
inc
or
jbe
jge
loopne
movsl
sarl
push
das
mov
push
adc
gs
dec
les
xchg
jnp
rorl
lret
aam
and
sbb
xor
adc
sbbl
xor
mov
mov
lds
leave
int
fidivrl
and
into
lahf
xor
cmp
fldenv
mull
inc
xor
fimuls
and
and
sub
cmp
push
adc
adc
rclb
jmp
insb
jb
pop
aad
mov
jne
inc
jl
repnz
or
pop
xchg
mov
pop
in
nop
dec
std
insb
push
sbb
lock
xchg
dec
xor
cmpsl
sahf
fcomps
and
xor
cmpb
popa
add
in
rcrl
inc
push
icebp
xor
add
fs
es
fidivrs
cmp
push
xchg
lock
mov
fwait
adc
adc
push
jbe
or
cmp
jl
adc
test
mov
subl
mov
pop
push
mov
mov
adc
int
adc
rorb
mov
mov
and
or
cmpsb
fisttpll
cmp
mov
and
ljmp
outsl
cmpb
adc
dec
jb
aam
lock
test
ja
js
hlt
inc
or
stc
pop
and
mov
inc
dec
sub
sbb
movsl
jp
ss
sti
or
push
xchg
cmpsb
shlb
imulb
loopne
jg
pop
jecxz
dec
cld
push
sbb
pop
sarl
pop
sub
inc
pusha
pop
ja
pop
mov
and
push
pop
mov
inc
pop
rcll
and
into
inc
jne
adc
std
scas
jns
xchg
repnz
test
jecxz
xchg
shlb
xchg
mov
push
cmp
fiaddl
mov
cwtl
icebp
sbb
xor
mov
test
cmp
pushf
insb
out
ja
and
cmc
sbb
sbb
ds
out
sbb
das
mov
mov
or
push
add
scas
lret
adc
sbb
inc
addr16
nop
ficomps
fisubl
cs
sbb
and
and
fildl
pop
cmp
dec
orb
mov
inc
jno
lahf
mov
xchg
push
std
sbb
rorl
out
xchg
push
sbb
xor
adc
movsb
jno
mov
cmp
pop
mov
adc
in
mov
jl
jge
push
jmp
push
divl
mov
mov
sbb
popa
pop
cmpsb
mov
movsb
sbb
jg
sbb
and
adc
mov
call
dec
movl
je
cltd
inc
subb
inc
fdivrl
popf
mov
adc
sarl
xor
push
jnp
and
mov
mov
adc
push
insb
enter
rorb
add
pushf
in
jnp
lahf
loope
cmc
sbb
inc
add
xchg
pushf
dec
jp
cmpsb
cmp
mov
lret
in
cmc
rol
insb
outsb
and
leave
mov
popf
mov
sub
mov
addr16
mov
xchg
int3
push
push
push
sbb
xor
mov
or
bound
fsts
xchg
decb
nop
out
sub
xor
leave
jecxz
dec
mov
add
fsubrs
adc
leave
sbb
cmp
inc
xor
xor
and
loopne
jg
test
pop
or
mov
popa
mov
xor
adc
mov
mov
bound
inc
cmpsl
cmpsl
shll
fistpll
fnsave
mov
dec
dec
mov
cmc
jb
repz
int3
add
repnz
movsb
in
xchg
in
push
push
add
imul
sub
push
cmp
adc
lea
scas
pop
hlt
sub
rorl
mov
sbb
xchg
aad
sbb
test
jg
mov
ror
lahf
stos
pop
sbb
aam
test
nop
lret
pushf
lcall
aam
dec
mov
cmp
negb
lret
imul
push
and
inc
mov
mov
hlt
cli
inc
aam
jge
mov
out
aaa
insl
jp
loopne
addr16
rcr
jle
aas
test
fisttpll
sbb
push
iret
in
push
cmp
xchg
or
adc
pop
leave
icebp
rcrb
xor
push
mov
mov
in
pop
xchg
aad
jae
js
jp
jnp
fwait
inc
fdivs
sbb
mov
mov
mov
add
fcoms
movsl
cmpsb
or
adc
mov
sbb
cmp
add
lds
repnz
mov
adc
lds
mov
push
xchg
and
subb
imul
sbb
add
daa
call
pusha
dec
cmp
sarl
and
cli
dec
adc
pop
insl
shrb
pusha
push
daa
rcrb
sbb
pop
jmp
cmp
mov
pop
outsl
dec
fs
jo
aam
jmp
aad
aad
push
mov
dec
sbb
jbe
ljmp
es
xchg
push
adc
push
popf
xchg
cmpsb
mov
hlt
lret
xchg
ss
jns
loop
xchg
pop
cmp
sbb
jmp
hlt
ficoms
nop
push
or
and
or
arpl
fs
xchg
in
movsb
push
arpl
push
or
jbe
cmpb
out
incb
dec
hlt
les
cmpsl
cs
adc
jne
es
pusha
adc
lods
aam
std
cmpsb
loop
aas
push
movntps
push
pop
sub
inc
mov
rol
adc
mov
pop
cmp
mov
cmp
add
lret
or
adc
std
mov
roll
scas
sub
stos
and
pushf
inc
addr16
push
xchg
daa
sbb
dec
push
mov
pop
insl
dec
add
mov
insb
imul
jbe
cmp
jae
adc
pushf
insb
int3
add
and
pop
pop
loopne
and
fmuls
test
shll
xor
pushf
adc
sti
negb
int
jno
loope
stos
outsl
sbb
push
mov
fwait
je
lods
add
jne
cli
cmp
xchg
fildl
fwait
or
insl
sub
arpl
pop
sti
push
aas
cs
in
lahf
jle
mov
test
push
add
imul
enter
xchg
or
out
mov
cltd
pop
sub
push
sarl
xor
fucomp
pop
or
xchg
popf
jb
insb
call
lods
or
imul
es
dec
jns
cltd
mov
xchg
cmpsb
pop
and
xorps
std
nop
divb
insb
dec
fcmovnb
out
xchg
push
sub
jno
dec
mov
add
mov
cmpsb
scas
dec
inc
dec
dec
xchg
or
sbb
dec
mov
and
scas
stos
inc
or
vmwrite
in
icebp
mov
out
fmull
incl
shlb
das
jp
loope
js
bound
outsb
fisubrs
adc
int3
mov
lcall
inc
or
stos
pop
movsb
dec
cmp
dec
sahf
mov
js
arpl
out
jnp
pop
ss
or
mov
xor
pop
dec
dec
adc
mov
push
dec
xor
xor
add
es
mov
adc
push
mov
shrb
ficompl
or
es
add
rclb
outsw
fldcw
adc
repnz
add
cmp
lods
mov
inc
sub
pop
xlat
fnstcw
sbb
sti
in
call
jg
sbb
into
xor
shrl
jge
or
lcall
pop
out
cli
and
repnz
mov
adc
cmpsl
xor
inc
cmp
loop
xchg
ficoml
and
stos
and
inc
pop
faddl
lods
push
movsb
mov
leave
cld
adc
push
lcall
into
or
pop
stc
pop
cld
ror
fwait
jnp
clc
inc
sbb
push
mov
pop
or
cs
push
jge
sbb
aas
jns
rclb
or
add
xchg
icebp
sbb
mov
lea
push
ds
jg
call
icebp
mov
add
lds
adc
lods
imul
lret
xor
mov
mov
xchg
insb
jge
out
enter
mov
cmp
cmp
or
or
sub
rcl
cmpsb
sbb
sti
xor
mov
call
aam
jns
mov
fucomp
add
xchg
xor
into
data16
out
sahf
xchg
mov
dec
push
push
push
push
mov
mov
insl
push
add
bound
mov
in
lock
pop
push
xchg
mov
insl
mov
mov
stos
mov
sbb
lea
gs
mov
mov
mov
leave
cs
jo
or
iret
es
and
and
pop
dec
jno
cmpsb
sar
sbbl
loopne
pop
sbbl
aad
rcrb
sbbb
scas
sbb
pushf
adc
dec
pop
mov
xor
push
cmp
adc
fiaddl
lock
in
sub
fcoml
sbb
push
push
fstl
cmp
bound
out
movsb
inc
mov
mov
jge
adc
pop
rcl
mov
bound
pushf
hlt
js
outsl
mov
and
popf
add
add
xor
arpl
jbe
mov
and
cmp
pop
pop
add
test
or
and
sbb
aad
add
iret
lock
gs
mov
pop
int
jle
xor
in
mov
xchg
mov
popa
mov
cli
stos
cmp
inc
adc
js
pushf
out
loop
in
int3
adc
mov
xchg
sbb
cmp
mov
mov
in
adc
cwtl
mov
loopne
jae
mov
into
sbb
push
xchg
add
test
into
adc
dec
es
cmpsb
mov
push
jmp
sub
fisubrs
sti
mov
gs
jo
or
bound
dec
pop
push
add
push
dec
adc
pop
test
lds
dec
clc
xor
add
mov
pop
insl
jno
jae
inc
shl
sarb
scas
mov
mov
xchg
stos
testb
pop
addb
sub
push
adc
dec
xchg
mov
popa
mov
jg
loopne
fistl
lret
xor
out
jg
call
cmp
mov
movsb
pop
cmp
shll
insl
pop
sub
mov
jmp
movsl
mov
mov
xor
or
push
mov
imul
jne
and
cltd
jno
cmp
sarb
cwtl
fists
push
fbld
pop
lret
sub
fimull
jge
imul
xlat
mov
stos
pushf
cmpsl
xchg
cld
adc
and
jnp
sub
movsb
enter
cmc
mov
sub
testl
mov
outsl
mov
or
pop
fisttps
mov
test
push
adc
xor
lcall
call
fwait
ds
mov
lods
jmp
das
jnp
xchg
push
mov
repnz
in
pop
adc
popa
add
add
mov
adc
add
inc
and
add
aam
mov
das
cmc
test
lahf
mov
add
out
inc
jg
fisttps
cli
popl
sarl
ss
cmp
aas
sub
shrl
in
xchg
repz
dec
outsl
jbe
es
push
hlt
out
fisttpll
adcb
or
test
and
dec
lock
push
lcall
repz
or
roll
fildl
fs
jle
pusha
sti
xor
jge
pop
jbe
add
loope
pop
cld
fwait
popf
enter
outsb
jmp
mov
xor
call
jno
jmp
fnstsw
push
push
xchg
test
xchg
sahf
pop
addr16
mov
xlat
inc
out
aam
je
fcoml
push
jge
mov
roll
ss
dec
sub
xor
fsubl
pop
insb
pop
scas
mulps
adc
popf
fdivl
mov
adc
mov
adc
clc
icebp
ljmp
cs
xchg
adc
cmp
imul
mov
xor
imul
out
dec
in
stos
fildll
mov
lret
gs
in
mov
pop
loopne
xchg
and
daa
in
inc
xor
pop
fs
and
iret
aam
pop
mov
jle
cmp
mov
shlb
or
xor
pop
sub
mov
adc
fildl
fs
inc
mov
mov
or
bndldx
mov
cli
stc
fidivrl
sub
sbb
andl
mov
pop
dec
xchg
jecxz
adcl
xor
ljmp
push
ds
ds
shl
aam
xchg
push
js
hlt
pop
pop
outsb
push
inc
imul
push
popf
dec
fildll
inc
pop
aaa
xchg
sbb
shrl
jg
xor
mov
mov
int
nop
scas
cmp
imulb
mov
mov
jae
xor
xchg
jns
sbb
cmp
cmp
lock
repz
pusha
clc
and
loopne
adc
xchg
pop
cli
cmp
cmp
addr16
mov
and
cmpsb
mov
loopne
pop
add
ja
je
dec
movsb
or
mov
mov
push
adc
mov
xor
push
add
rcrb
add
fistps
xchg
sub
sbb
adc
fstl
cmp
mov
iret
cs
mov
aas
push
xor
jmp
scas
lods
cmp
or
xlat
movsb
testb
cmp
lds
scas
push
jp
enter
test
pop
out
js
mov
ja
cmp
or
pop
push
push
into
imul
pop
mov
sub
clc
cld
icebp
mov
and
lods
or
scas
movsb
movsbl
sbb
inc
jmp
repz
mov
jns
call
jge
mov
add
std
int
add
subb
lcall
xchg
dec
test
out
pop
or
sub
xor
jge
insb
xor
les
jg
cmpsl
sbb
lahf
cltd
jecxz
xchg
sub
sub
cmpb
jb
int3
enter
test
js
inc
ror
sbb
daa
jb
insl
sbb
js
mov
pop
fwait
inc
mov
cmp
dec
repz
addr16
subl
mov
xchg
sub
je
mov
fdivrs
jns
push
aam
xchg
fmuls
fistpl
in
cmp
dec
xchg
cmp
sub
jmp
movd
rcll
and
dec
adc
movsb
pop
les
movl
jl
je
cwtl
insl
inc
aas
enter
jo
push
mov
push
mov
aas
xor
int
out
pop
push
cmpsl
popa
scas
sub
stos
add
icebp
push
pushf
xchg
add
jnp
xchg
sub
mov
testl
xchg
loop
movsl
and
sbb
push
jg
mov
movsl
les
cmpsl
imul
shl
jae
jge
cmp
or
movsb
outsb
out
sbb
cltd
pop
and
push
jmp
dec
scas
mov
lahf
outsb
inc
jns
push
mov
jo
aam
lock
cltd
ret
push
sbb
in
into
pop
inc
jmp
push
sbb
icebp
mov
push
adc
cmp
sbb
adc
dec
mov
push
dec
add
ja
or
fldt
fnstenv
add
shrb
repz
inc
inc
and
inc
dec
insb
test
insb
aaa
fs
popf
call
je
outsl
mov
aaa
cmpsl
push
fsubs
test
insb
popf
and
inc
stos
std
dec
les
out
push
xlat
inc
loopne
mov
jbe
int
inc
xor
sub
cmc
shrb
lods
jnp
icebp
dec
push
test
fimull
ret
aad
mov
mov
cmc
icebp
pop
in
test
dec
mov
pusha
movsl
or
loope
shrl
sbb
popf
fdiv
cmpsl
jle
cmp
and
cmp
test
ds
adcl
arpl
dec
xchg
add
xchg
ds
and
sahf
shrb
mov
das
sub
adc
jmp
scas
les
jmp
idivb
mov
ret
cld
fst
test
mov
pop
test
in
fisubrl
cld
leave
jb
mov
dec
stc
ja
les
dec
jecxz
inc
mov
leave
mov
push
cmp
int3
sub
inc
leave
popf
mov
shll
push
shrl
or
xchg
and
aad
xchg
xor
in
xor
popf
jl
fdivrl
sarl
rolb
xchg
jp
cmpsb
pop
mov
xchg
inc
pushf
dec
test
xchg
cmp
xchg
push
repnz
push
sub
leave
inc
leave
std
add
lds
adc
lods
insl
xchg
rorl
dec
outsl
xor
decb
sub
cltd
cmp
aam
or
imul
adc
push
data16
int
push
dec
cltd
sbb
sahf
js
and
addr16
and
stos
iret
jg
cli
dec
loop
mov
pcmpgtw
inc
push
mov
roll
lret
pop
xchg
xor
pop
loope
ljmp
sub
scas
clc
cmc
jbe
jmp
xchg
and
daa
fmul
mov
mov
ljmp
mov
rcl
sub
sub
cmp
outsl
rorl
outsl
stos
movsl
clc
andl
pop
data16
jge
dec
xchg
xorb
push
xchg
aam
xchg
push
add
out
mov
jecxz
cld
mov
cmp
jnp
jmp
sub
movsb
int
cld
inc
mov
and
rolb
pop
lock
push
add
dec
mov
dec
negl
or
stos
int3
xchg
add
mov
popa
scas
sbb
in
pop
mov
enter
ret
inc
ret
jmp
pushl
hlt
lahf
mov
pop
push
xchg
jnp
pop
mov
push
out
stos
lcall
xchg
jecxz
inc
push
hlt
mov
mov
nop
fnstenv
lods
loope
push
mov
mov
mov
pop
jb
jmp
movl
push
lcall
sbb
arpl
cltd
pop
push
mov
mov
push
dec
sarl
dec
gs
and
mov
add
mov
jbe
in
insl
push
mov
inc
jge
xchg
adc
imul
aas
sub
cli
push
fwait
xchg
jge
popl
xor
sub
push
sti
in
stc
in
js
sub
cmc
icebp
out
cmpsl
pusha
call
divl
les
lret
iret
lret
cmp
test
dec
out
pop
mov
and
adc
icebp
out
roll
sbb
add
jno
gs
push
dec
dec
sub
pop
jp
push
stos
push
jo
xor
int3
jns
loop
xchg
pushl
rorl
dec
sub
mov
add
popw
or
xchg
repnz
xor
out
cli
ljmp
push
pop
subl
or
mov
push
enter
out
and
sbb
dec
dec
jnp
and
adc
stos
push
lds
jecxz
out
mov
sub
in
pop
adc
sbb
xor
lret
fwait
or
dec
xor
insb
mov
or
sub
into
jnp
sar
loope
or
fimuls
lods
sbb
xchg
arpl
or
fxch
cs
fwait
pop
cmc
ljmp
stos
cltd
and
loop
mov
or
sti
scas
add
pop
dec
adc
xchg
rcll
lahf
lods
fcoml
mov
jle
xchg
ds
push
sub
pop
xchg
imul
jl
dec
add
pop
stos
jae
pop
jno
jbe
sti
out
push
push
add
pusha
out
lahf
div
addr16
xor
insl
mov
pop
pop
roll
adc
in
lods
dec
dec
sub
loopne
daa
dec
ret
push
ficompl
les
pop
imul
ret
cmp
imul
testl
and
pop
gs
inc
fs
mov
ds
or
sbb
rorb
ret
xchg
ret
xor
test
cld
cmp
and
mov
iret
jo
lods
cwtl
cmpsl
mov
mov
adcb
jne
sarb
fs
add
bound
bound
fs
call
iret
mov
mov
test
inc
mov
aad
lahf
mov
es
inc
and
in
sbb
add
movsl
ret
in
lcall
jnp
xor
int3
adc
add
pop
cmp
bound
dec
scas
rcr
mov
xchg
mov
outsb
repz
gs
gs
lea
or
inc
inc
jg
enter
mov
test
xchg
cltd
cmp
or
mov
pop
dec
les
xchg
outsb
xlat
adc
mov
pop
mov
and
fldt
cmp
xor
mov
clc
subl
xchg
out
jle
add
sub
out
cwtl
clc
inc
fidivrl
inc
fnsave
in
xchg
mov
addb
sbb
inc
cmpsw
cmp
and
notb
and
sub
in
mov
xlat
cltd
lcall
jbe
gs
adc
daa
test
stc
mov
loope
adc
jecxz
pusha
dec
addb
ror
cwtl
sti
mov
pop
les
mov
cmp
add
out
inc
sbb
leave
push
mov
cmpl
cmp
mov
int3
invd
dec
inc
xor
fcoms
mov
xor
arpl
dec
mov
cmp
sub
scas
jns
fadds
int
jecxz
das
jno
jbe
or
insl
mov
hlt
adc
jg
jae
cmp
repnz
rol
or
mov
test
ud0
xchg
int3
mov
jae
popa
call
dec
and
cmp
shr
cltd
out
loopne
fwait
or
adc
sub
and
scas
popa
js
ja
cmpl
scas
sbb
or
and
adc
xor
std
add
add
test
repnz
mov
cmp
jmp
shlb
xchg
out
loop
xchg
call
push
inc
outsb
sar
test
adc
push
jl
leave
jl
stos
fldcw
insb
push
mov
out
out
jno
out
fbld
push
je
mov
or
pop
cmp
cs
push
inc
mov
aam
dec
cwtl
mov
repz
nop
roll
and
cmp
xchg
repz
adc
pop
push
mov
repz
aaa
sub
cmpsl
dec
jle
lds
inc
sbb
adc
insl
push
jg
pop
or
aad
sub
pop
push
lds
mov
xor
and
or
mov
pop
xchg
aad
sbb
pusha
std
dec
into
push
dec
jbe
mov
nop
enter
cmp
dec
inc
sbb
push
mov
rolb
ds
lds
jne
sub
mov
adc
movlps
cli
pop
inc
sub
sbb
push
adc
sti
mov
mov
and
ret
mov
test
xor
out
jle
lret
loope
pop
imul
mov
dec
shlb
mov
cmp
xor
sub
pop
mov
mov
scas
pop
mov
orl
bound
mov
cmp
mov
adc
es
aad
inc
push
outsl
fidivs
rorl
loope
lds
scas
bound
and
rcl
std
jl
dec
adc
xlat
lahf
leave
icebp
stos
adc
and
dec
test
insb
in
outsl
xchg
jne
ret
popa
call
sub
fisubl
or
mov
mov
enter
sahf
pop
or
movb
scas
fistpl
mov
dec
add
orb
or
jecxz
adc
cmp
mov
push
xor
xor
cmp
push
dec
mov
jns
filds
adc
mov
repz
mov
push
in
filds
call
stos
fbld
or
arpl
push
scas
sub
and
lret
push
mov
push
sbb
lahf
push
int3
shll
les
add
sbb
std
mov
sbb
adc
add
lahf
sbb
mov
subb
mov
inc
notl
inc
in
pop
gs
out
insl
int
or
inc
int3
test
cmc
jns
inc
push
stos
cmp
data16
stos
imul
addr16
iret
clc
push
std
xor
pop
aam
cmp
push
cltd
aas
testl
lea
mul
xchg
fcmovnbe
inc
push
jge
in
test
mov
or
cmp
push
ret
repz
push
scas
cmp
mov
aam
pop
mov
popa
or
aaa
stc
hlt
cs
stc
lea
outsl
or
pop
loope
jne
lods
xchg
aam
cmpsb
ja
sub
stos
shrb
test
pop
cmp
add
fprem
mov
sti
shl
cmp
stc
mov
mov
leave
pop
int
sub
and
int3
xchg
outsl
cmpl
rorb
lds
ret
adc
and
cmp
xchg
mov
fmull
push
mov
imul
mov
mov
add
push
pop
inc
jl
jbe
and
xor
movsl
stc
mov
aas
test
test
ret
sti
cs
lcall
adc
push
loop
mov
sahf
fidivs
and
sbb
jbe
sti
call
mov
xor
mov
mov
int3
push
mov
dec
mov
cli
mov
fldl
enter
mov
call
cmc
inc
stc
push
rcll
xchg
loop
ds
sbb
mov
in
jbe
mov
mov
mov
imul
js
or
lods
andps
mov
xor
int3
and
inc
outsb
dec
je
add
sbb
mov
test
dec
and
test
dec
inc
or
rcr
mov
into
vpsubsw
inc
or
pop
clc
in
mov
int3
cmp
push
and
cmp
cmp
and
jp
sub
xchg
cld
sub
andl
mov
gs
addr16
jecxz
xchg
imul
push
push
push
ucomiss
fiadds
jmp
imul
push
dec
loope
idivb
xorb
enter
pop
adc
rcrb
jnp
mov
xor
das
and
mov
fldcw
mov
mov
out
cmp
cmp
push
cmc
pushf
popa
dec
mov
mov
out
rcr
xchg
sarb
xchg
sahf
insl
add
dec
ror
sub
cmpsb
push
arpl
sub
cwtl
iret
lods
mov
outsl
or
cmp
mov
mul
pop
xor
pop
fmull
and
cmova
mov
jmp
inc
mov
dec
fimuls
outsb
inc
jns
sarb
cmp
cmp
sub
data16
divl
sub
push
cld
ret
pop
mov
xor
lock
dec
rorb
hlt
iret
ss
iret
push
mov
lcall
jns
pop
pop
clc
ja
xchg
out
cmpsl
das
rclb
test
xchg
cs
fcoms
outsb
cltd
mov
leave
imul
push
rcrb
push
ficoml
ja
inc
mov
movsl
or
fisubs
push
fildl
sub
pushf
cltd
push
xor
std
mov
hlt
and
out
rclb
xor
jg
decl
loope
fistpl
mov
lods
push
add
push
out
jbe
mov
bound
push
cmpsl
mov
outsb
rcl
mov
gs
outsb
pop
xlat
mulb
loop
mov
lea
rcrl
pop
push
lret
fstps
add
and
and
fists
adc
push
in
in
lods
add
xchg
jae
xchg
mov
mov
xchg
mov
out
xor
add
sti
loopne
scas
repnz
cs
adc
push
push
cmpsl
sub
cmpsb
dec
dec
dec
ret
mov
pusha
push
xchg
jp
jno
lret
repnz
dec
jne
jnp
pusha
mov
mov
lods
fs
pop
pushf
adc
xchg
or
lods
mov
rcl
in
xchg
and
fldenv
xchg
repnz
push
addr16
in
mov
push
or
sub
jecxz
fstps
insb
fsubrp
cmp
pop
xlat
stos
loope
dec
or
std
mov
jge,pt
mov
testb
push
out
lret
in
xlat
xor
sbb
dec
sbb
push
and
sbb
shlb
cmp
mov
jmp
push
jp
add
sub
fsubl
fists
xlat
mov
push
cmp
es
sub
mov
mov
fidivl
sahf
add
lods
fwait
mov
rolb
out
and
sub
push
hlt
call
jb
cmp
dec
mov
cltd
mov
jb
xchg
cs
aam
push
outsl
jns
int3
and
jmp
popa
mov
sbb
pop
stos
pop
imul
dec
adc
mov
movsl
imul
push
rcr
in
push
out
pusha
repz
inc
inc
fdivrl
sbb
jb
mov
fneni(8087
push
jb
stc
jo
andb
xorl
mov
push
cmp
int
roll
cmp
or
call
or
adc
popf
scas
insb
sub
data16
mov
lcall
xchg
mov
jo
sub
push
cmp
int
sub
or
repz
movsl
cmp
push
mov
mov
pop
push
addl
arpl
repz
test
jae
pop
loop
out
test
jo
push
adc
rolb
adc
adc
add
add
mov
add
add
cmp
stos
lcall
cmc
clc
and
jbe
pop
leave
outsb
add
sub
or
sbb
stos
imul
jnp
pop
mov
pop
cmp
ljmp
es
insb
or
enter
in
pop
aad
shl
scas
inc
sbb
cwtl
outsl
jecxz
movl
aas
sahf
jg
nop
cmpl
push
pushf
adc
es
sbb
call
cmp
mul
in
jle
loopne
ds
fs
pusha
icebp
leave
out
mov
pop
sbb
ljmp
xor
mov
adc
lds
clc
pusha
mov
shlb
push
in
ret
mov
scas
insb
sbb
fiadds
mov
iret
data16
aaa
aad
popf
les
dec
push
cltd
iret
bnd
mov
stos
leave
in
call
or
mov
add
add
test
jp
js
out
dec
xchg
xor
push
add
insb
pop
and
pop
sbb
cmp
cs
xchg
mov
pop
mov
sub
popf
icebp
mov
mov
out
dec
into
aam
xorb
jae
mov
out
bound
notl
xlat
adc
mov
dec
daa
push
add
loop
insb
mov
insl
sub
inc
or
ret
xchg
mov
fxch
insl
sub
in
jmp
inc
ss
push
mov
ljmp
test
inc
movsl
scas
cmp
out
jno
addr16
std
popf
adc
cmp
jecxz
into
leave
jl
imul
push
sub
mov
xchg
out
addr16
lea
pop
jge
sbb
in
add
mul
jl
xchg
dec
loop
in
push
fucomip
lret
xor
sub
mov
lock
mov
movsl
aam
mov
lret
mov
mov
jecxz
je
add
push
push
xchg
push
rcl
dec
in
fcoms
push
test
cmp
push
dec
push
dec
dec
inc
imul
ret
imul
mov
add
pushf
jbe
add
sub
add
scas
mov
pop
je
imul
mov
scas
in
mov
jl
sub
jmp
rcr
call
jecxz
and
out
lret
clc
adc
jl
jge
outsl
push
test
lea
leave
xor
rorb
jns
out
xchg
std
xor
rol
repnz
xor
ljmp
pop
stos
pop
pushf
leave
mov
add
xor
xchg
mov
inc
clc
outsl
ret
push
clc
lds
cmp
and
inc
mov
insl
mov
scas
js
hlt
pop
cmp
and
fisubrl
and
imul
test
xchg
sub
gs
push
ja
push
mov
sub
adc
add
das
fiadds
cli
popa
or
cmp
and
fwait
lods
lret
xchg
mov
sti
test
add
popa
shrb
xchg
aad
jg
js
sub
and
mov
outsl
dec
popf
jb
std
sbb
mov
push
xor
icebp
sub
pop
aaa
lea
push
loope
push
stos
push
insb
lea
sti
ret
jns
in
mov
shl
in
xchg
push
hlt
roll
mov
lods
xor
out
and
scas
push
mov
pop
outsb
jmp
mov
mov
in
rolb
gs
out
repz
sub
and
push
std
fwait
mov
loope
adc
sbb
inc
mov
nop
ss
and
xor
test
outsb
fidivrs
ljmp
lret
lret
jl
andb
mov
xchg
into
push
addr16
push
faddl
test
loopne
cmp
cmp
mov
sub
dec
jns
nop
or
jbe
std
mov
into
loopne
ror
fistps
sub
mov
ret
mov
lahf
loope
add
add
repnz
ljmp
or
xchg
arpl
cmp
pop
push
and
xorl
in
and
jg
js
sub
push
inc
mov
sub
push
repnz
or
xor
sub
cmp
mov
data16
movsl
lock
lahf
lret
xor
xchg
and
movsb
decb
ret
xchg
pop
scas
cmp
dec
xor
pop
sbb
out
imul
lods
inc
inc
mov
imul
pop
xchg
inc
pop
inc
or
and
jg
push
mov
stos
jle
fstl
cmp
sbb
pop
push
lcall
cmp
fisubrl
lea
jb
cltd
fnclex
lret
into
dec
cli
lods
xor
add
in
clc
fsubrs
cmp
mov
andb
lcall
or
inc
movsb
out
sbb
cmpsl
inc
mov
aas
pop
subl
cli
in
jo
jmp
out
add
jp
xchg
adc
xlat
sub
xor
adc
cmp
out
popf
mov
sub
loope
add
dec
sub
movsb
pop
popa
scas
popa
test
negl
jl
sub
nop
pop
pop
pop
lret
sub
jo
sub
xchg
add
bound
repnz
repnz
xor
or
adc
cmp
or
int3
cmp
add
rolb
aad
cmp
dec
out
mov
cmp
cld
out
das
outsl
mov
bswap
call
push
repz
sbb
dec
leave
push
sahf
add
xchg
fs
and
lahf
shl
fdivl
pusha
sarl
push
pusha
repnz
cmp
outsb
scas
nop
ss
sub
push
out
dec
mov
sahf
ss
push
dec
pop
aam
sub
push
adc
mov
add
sub
cmpsb
xlat
mov
inc
mov
or
push
sahf
mov
and
aaa
int3
rcrl
add
inc
loope
pop
lods
loopne
je
outsl
jmp
repnz
iret
shl
les
sbb
in
jecxz
test
mov
pop
sub
adc
mov
dec
scas
pop
inc
imul
xor
xchg
clc
into
je
ljmp
push
xchg
inc
dec
cmp
addr16
xchg
jb
and
shlb
adc
pop
int
or
cmp
les
punpcklwd
jmp
fcoms
jl
xor
dec
je
les
sub
push
mov
rcrl
outsl
mov
jecxz
jae
cmp
addr16
inc
iret
clc
mov
lds
lds
mov
imul
call
jns
cs
adc
push
add
mov
icebp
mov
cmpsb
in
aaa
jmp
aad
faddl
xchg
xor
or
pop
adc
push
bound
scas
add
lcall
mov
mov
adc
lret
cmpl
daa
outsl
repz
rolb
xchg
rcrb
push
dec
fdivl
out
push
inc
mov
mov
sub
pop
push
orb
cmpsl
fists
movsb
ja
aas
in
and
fcmovb
add
mov
hlt
xor
push
pusha
sbb
cmp
addr16
push
dec
jecxz
int
mov
movsl
pusha
mov
mov
popa
mov
xor
push
add
or
incl
dec
and
jp
es
lret
sub
push
push
or
pop
fisttps
and
cltd
or
out
push
loope
pop
mov
mov
jb
mov
je
pop
xchg
cltd
inc
or
out
loopne
mov
test
in
das
call
iret
cmp
mov
jp
pop
ss
insl
push
xor
pop
les
ljmp
and
dec
ud0
inc
mov
jnp
jb
pop
rcl
inc
pop
and
adc
xchg
mov
lcall
jae
popf
push
out
lds
jnp
std
ja
or
sbb
xor
cmpsb
pop
push
pop
fs
fwait
int3
xchg
push
sbb
mov
dec
mov
loope
inc
stos
pop
or
add
mov
or
das
sub
mov
mov
and
les
pop
daa
iret
and
icebp
sub
stos
and
les
pop
jle
dec
lcall
out
jnp
mov
push
mov
and
leave
mov
xor
notl
addr16
repz
fsubl
jae
push
jg
lret
mov
cltd
js
pushf
call
cmp
sub
movsb
add
mov
adc
cmp
outsl
outsb
xchg
mov
xlat
sub
fidivs
dec
ret
cmp
xor
leave
cmp
inc
test
ds
aam
std
cmp
addr16
add
dec
les
mov
cmp
jp
xchg
cmp
jp
mov
sbb
mov
hlt
adc
fcmovnu
jle
mov
sbb
fstpl
ja
imul
jbe
sbb
cmc
mov
inc
xchg
lods
mov
out
shrb
outsb
push
dec
jge
ljmp
xchg
out
cwtl
hlt
add
push
adc
and
test
lret
scas
pop
xchg
sbbb
dec
pusha
pop
lods
push
push
jle
mov
cmc
mov
subl
xchg
sti
mov
addr16
movsb
addr16
cld
mov
jge
push
out
mov
push
fwait
and
stc
xor
fldl
scas
scas
push
jbe
mov
and
mov
lods
test
fldt
addr16
mov
loop
jmp
mov
dec
fcomip
cmp
sbb
push
rcl
jge
xchg
xchg
lahf
rcrl
push
fmuls
mov
push
stos
cs
mov
repnz
subb
mov
mov
dec
popa
aad
sarb
addr16
jo
xor
sti
loope
fs
inc
xchg
mov
mov
pop
stos
mov
daa
xor
jns
push
clc
nop
andl
cmp
adc
popa
inc
enter
mov
lahf
mov
dec
sbb
ss
data16
pop
or
fisubrl
das
cld
std
add
sbb
ljmp
dec
sbbl
out
fsubrp
sub
sub
icebp
mov
pop
or
popf
into
adc
push
dec
dec
xchg
pop
lret
ret
in
jne
and
fidivl
ds
lahf
jbe
pop
push
inc
scas
sbb
add
test
add
dec
mov
mov
inc
mov
xor
xchg
shll
scas
bnd
xor
pop
lahf
and
inc
cltd
loopne
push
inc
ret
or
scas
cmc
inc
inc
jne
mov
add
ja
popf
sub
mov
sbb
jmp
into
out
sub
push
rcrb
sbb
push
stc
push
mov
je
adc
and
xor
in
inc
xchg
ret
jg
rclb
jge
inc
sub
lds
sbb
mov
cwtl
fistps
cwtl
sarb
jmp
movsl
cmp
mov
sarb
sbb
xchg
pop
popl
jb
jl
leave
imul
loope
adc
loope
mov
js
mov
shrl
mov
push
mov
sbb
dec
mov
in
mov
cmp
sbb
in
das
and
mov
iret
cmpsl
out
daa
xchg
add
std
addr16
imul
add
jl
fnstcw
and
aaa
fnsave
insb
xor
push
mov
clc
mov
jne
jmp
dec
jb
cmc
lock
pop
pop
sahf
or
sub
shl
push
clc
add
sub
xor
mov
xor
xor
or
jne
out
xchg
and
inc
mov
xchg
inc
lock
push
inc
aam
cmp
das
lods
dec
cmc
jnp
jbe
mov
ret
data16
call
push
mov
xor
rorl
push
adc
not
push
add
sbb
call
sbb
or
sbb
jb
mov
loopne
add
cmpsl
jne
dec
mov
mov
jl
pop
fcoms
into
push
mov
xor
xchg
fwait
adc
repz
out
outsl
inc
mov
dec
rclb
inc
mov
insb
fimuls
movsl
nop
xchg
mov
pop
push
ficompl
xor
mov
les
test
add
rcrl
cwtl
test
stc
mov
dec
pusha
xor
ds
sub
or
jnp
iret
push
or
jns
xlat
mov
adcl
jl
stc
and
lock
pop
add
inc
cmp
cs
xor
mov
push
cmp
mov
daa
adc
in
pop
xor
jmp
inc
fdivl
sahf
or
xchg
mov
pushf
orl
push
ret
out
pop
xor
test
lods
or
fld
cmpsb
cmc
leave
enter
xor
cs
int3
ficomps
mov
pop
out
or
bound
fwait
cmpsl
dec
fsubr
std
push
std
dec
sbbb
cs
mov
ds
xchg
sub
jg
fwait
int3
xorb
jns
nop
lock
mov
mov
pop
js
shll
jp
jecxz
clc
sbb
pop
mov
outsl
subl
sub
add
lods
pop
insl
sti
test
xchg
dec
mov
dec
xchg
adc
das
lret
test
xchg
pop
cli
pop
jecxz
jns
sti
in
ret
jmp
ss
cmpb
fadds
xchg
fwait
sub
cmpsb
scas
add
xor
xor
outsl
outsb
decl
lahf
popf
daa
sub
xlat
out
ja
pop
fmull
lods
shrb
mov
int3
adcb
sub
cmc
mov
or
in
leave
in
aas
test
inc
out
pop
adcl
call
pop
in
aad
je
sbb
adc
hlt
pop
push
sarb
dec
push
cli
push
mov
jl
enter
fnsave
add
jae
out
filds
or
add
and
xor
push
lods
lods
add
push
out
cmp
jl
lahf
mov
ja
mov
mulb
lret
subl
mov
adc
or
out
outsl
and
loopne
loop
jns
dec
sub
jo
add
ss
int
inc
mov
das
push
jo
xorb
dec
mov
popf
nop
scas
lock
jns
adc
or
pop
cld
pop
adc
mov
adc
fidivl
or
adc
adc
insl
arpl
cmp
xor
xchg
pusha
cli
dec
scas
outsb
cmp
int3
arpl
mov
jno
lcall
scas
loopw
stos
rcrl
ljmp
adc
mov
add
or
mov
jnp
jo
lea
or
dec
inc
xchg
call
in
dec
jns
adc
lea
pop
pop
and
jmp
aad
clc
xchg
movsl
test
push
aaa
xchg
lret
imul
ret
fisubs
ja
push
pop
andb
jns
sbb
cwtl
ret
sarb
fisubrl
push
xchg
push
sbb
pop
sar
xor
ds
jmp
bound
jbe
sbb
xchg
rcl
mov
mov
sbb
imul
xchg
xlat
jmp
fidivs
stos
and
loope
cmc
daa
dec
cmpsl
in
mov
lods
mov
fs
mov
jne
in
add
sub
lock
and
iret
test
inc
imul
aaa
repnz
stos
insl
add
dec
lea
fcompl
fs
xlat
sbb
in
jb
mov
test
adc
in
out
push
gs
inc
aam
int
xchg
lret
pop
sub
pop
imul
xor
cmc
pop
cwtl
xor
mov
ret
sbb
icebp
enter
inc
sub
out
push
push
dec
aam
xchg
mov
adc
daa
fmuls
mov
cmp
testl
sub
test
int
inc
fnstcw
outsb
leave
adc
stos
inc
sbb
fstl
iret
sbb
mov
jmp
jb
jl
xchg
push
fiadds
pop
pop
mov
pop
jne
push
or
dec
adc
in
mov
jp
mov
lods
in
jns
stos
lock
les
dec
xchg
and
lahf
mov
and
push
mov
cmp
js
int
and
testl
and
mov
mov
cmc
data16
xchg
xor
and
push
add
jl
mov
fdivrl
xchg
clc
inc
inc
push
cwtl
lret
xor
jl
movsb
mov
push
add
addr16
enter
leave
loop
or
loopne
sub
jns
jmp
push
loopne
roll
pop
cld
arpl
fadds
ljmp
xchg
iret
imul
lretw
out
mov
push
cmpsl
mov
inc
or
mov
out
mov
movsl
pop
movl
fwait
add
xor
movl
push
mov
imul
cmc
xor
sti
mov
xor
popa
loope
imul
daa
into
addr16
jmp
xchg
sub
rcrb
mov
loopne
mov
cli
stos
push
push
lcall
jge
lret
aas
repnz
mov
fiaddl
ds
lahf
popa
rcl
inc
adc
mov
sti
repz
push
jp
add
inc
lret
test
jae,pt
bound
movsl
icebp
flds
jns
jmp
les
ss
pop
cwtl
mov
aas
jl
iret
push
add
jmp
popa
testb
add
call
sub
loop
jg
mov
mov
aad
pop
jl
int
pop
jp
aaa
or
sub
push
push
imul
ret
divb
andb
pop
push
mov
jmp
call
rolb
ret
push
repz
cmc
test
jb
cs
xlat
dec
xchg
test
add
jb
xor
jbe
sbb
push
add
push
aaa
push
mov
out
lods
xchg
sbb
leave
stos
in
jle
jl
subb
jecxz
pop
fistl
lods
icebp
hlt
sbb
dec
xchg
movsl
movd
mov
testb
xchg
pop
les
push
pmuludq
in
mov
inc
loopne
mov
icebp
cltd
adc
xchg
jg
sub
in
inc
pushf
push
enter
inc
clc
sbb
pushf
mull
aad
cwtl
in
push
push
push
xchg
dec
jb
xchg
inc
repnz
fcomi
or
push
cli
add
lahf
xor
call
mov
inc
push
in
add
loope
out
push
lea
imull
or
dec
outsl
ret
jmp
sahf
fldcw
icebp
leave
in
fwait
mov
andl
mov
cmp
outsb
adc
lret
xchg
xchg
pop
sub
ljmp
rorl
sub
in
aas
add
push
fstl
xor
jo
aam
stos
adc
out
jbe
data16
addr16
in
or
icebp
cmp
sbb
mov
mov
in
lret
mov
cs
push
call
xor
jnp
xchg
inc
xchg
fimuls
add
jl
sti
mov
stos
mov
push
inc
ja
cmc
stos
icebp
jmp
mov
addr16
adc
mov
mov
push
insl
ljmp
sub
ss
pop
or
adc
aas
loop
rorb
sahf
push
loop
shr
cmp
gs
stos
outsb
movsl
pop
mov
std
pop
daa
mov
or
leave
adc
idivl
mov
inc
jl
sbb
adc
lahf
push
add
xor
in
lods
pop
mov
xchg
xor
xchg
popf
mov
mov
in
pushf
aad
mov
cltd
adc
jmp
nop
xchg
inc
xchg
movl
xchg
stc
into
je
sbb
outsb
inc
sbb
fwait
push
xchg
sbb
adc
mov
out
add
dec
stos
pop
insl
hlt
sub
push
jle
lods
mov
popa
scas
or
mov
sub
jle
mov
jne
push
outsl
repz
arpl
lahf
cmp
mov
sarl
test
sub
imul
das
rorb
fdivrs
roll
pop
adc
sahf
dec
and
inc
out
mov
cmpsl
jmp
dec
or
inc
dec
clc
jns
mov
ret
jo
mov
cmp
xor
pushf
or
dec
imul
mov
and
out
mov
out
lret
fcompl
push
dec
add
jg
iret
gs
pusha
dec
hlt
push
push
lock
rclb
push
and
in
aaa
test
jno
mov
add
out
mov
outsb
andl
fsubr
xchg
inc
sbb
sbb
xchg
popa
or
test
xchg
add
mov
popf
mov
in
xchg
or
push
cmp
test
mov
jno
jns
mov
repz
imul
out
insb
aas
sub
dec
dec
mov
icebp
jbe
popa
int
in
xchg
push
iret
push
test
pop
in
in
ds
inc
bound
sub
nop
jne
popf
lcall
jl
cli
orl
mov
outsl
jbe
stc
jae,pn
js
jns
push
xor
test
dec
push
jmp
fbld
push
scas
pop
mov
jmp
leave
dec
cld
out
cmc
std
in
ret
inc
push
pusha
fldt
sub
jle
sti
outsl
daa
jb
packssdw
adc
xchg
loop
jl
pop
imul
mov
mov
cmp
mov
lahf
mov
scas
lret
cmp
pop
data16
fdivs
inc
loope
adc
test
jae
aad
jns
push
cli
jo
or
aad
jne
push
dec
hlt
or
call
lret
loopne
jno
xor
add
stc
in
popf
mov
push
and
test
or
outsl
int3
insl
arpl
adcl
add
out
xor
scas
and
mov
add
scas
jne
pop
das
push
sub
pop
jb
mov
or
aas
pushf
push
dec
xorb
addr16
roll
in
call
adc
out
jno
mov
dec
adc
xchg
mov
fwait
outsb
sbb
mov
mov
add
push
pop
div
ljmp
adcl
icebp
in
add
adc
add
fwait
fwait
pushf
into
xor
test
adc
dec
and
pop
shl
int
cmp
add
cmp
or
mov
inc
cs
jae
add
sbb
stc
cmp
push
in
and
pusha
testl
test
mov
std
orl
jl
push
mov
push
lods
addr16
pop
in
and
fcmove
sbb
or
gs
enter
adc
lahf
inc
mov
or
shrb
or
insb
xchg
not
je
jg
inc
jecxz
and
dec
dec
mov
sbb
decl
sbb
mov
ret
in
pop
inc
pushf
mov
cmc
lcall
nop
and
xchg
cmp
add
shlb
fwait
adc
sub
or
xor
sub
or
jno
sbb
cmc
xor
jp
sub
xor
push
call
adc
movl
xor
leave
push
data16
add
mov
add
inc
and
dec
add
lock
fldl
lcall
mov
pop
mov
les
dec
cmp
out
dec
int3
call
xchg
xor
mov
push
mov
imul
mov
orb
push
test
mov
pop
mov
inc
or
adc
xor
mov
mov
pop
mov
cli
xor
outsb
lret
testl
divl
popa
xchg
push
mov
aad
or
xor
sub
lret
out
ljmp
push
mov
sarl
add
shr
and
es
notl
sub
out
mov
xor
lcall
pop
inc
stos
mov
or
aas
pop
and
jg
or
nop
xor
jmp
adc
or
bound
out
cmp
mov
adc
sub
test
lea
dec
mov
add
flds
mov
test
dec
pop
add
push
mov
add
pop
pop
xor
sub
mov
js
jle
xchg
cmp
mov
orb
hlt
in
popf
cs
sub
aaa
add
rol
inc
loopne
pop
xchg
mov
xchg
inc
mov
shll
in
push
mov
outsl
pop
pop
or
add
ja
gs
cmp
add
xorl
pop
sub
mov
in
xor
sbb
push
stos
out
shlb
mov
out
fildll
push
add
push
ljmp
dec
add
cli
arpl
ja
xchg
xchg
jle,pn
cmpb
xlat
xchg
dec
inc
fisubl
mov
loope
arpl
test
das
pusha
add
jne
bound
mov
mov
mov
mov
pusha
cmpsb
pop
stc
inc
mov
adc
pop
jp
mov
ds
mov
movsl
pop
pop
into
mov
or
shl
out
jae
shl
xchg
mov
and
jl
nop
imul
dec
mov
loop
add
fdivs
clc
sti
push
loop
in
inc
adc
jle
test
push
pop
jb
cld
push
xchg
cltd
dec
inc
sbb
mov
arpl
pop
fadd
cmpsl
fistl
pop
or
sbb
cmp
ret
cmp
xchg
push
nop
add
mul
call
imul
mov
loope
shrl
xor
xchg
ljmp
adc
and
ret
loopne
jne
mov
inc
cmp
roll
out
mov
nop
in
xor
in
mov
mov
cwtl
inc
sbb
or
and
add
mov
arpl
push
lock
mov
out
mov
push
add
pop
lret
pusha
pop
mov
xorb
push
lret
in
sarl
mov
lods
pop
and
pop
mov
shll
jl
or
std
stc
sti
push
mov
pop
and
inc
cwtl
test
out
push
pop
out
arpl
or
push
sbb
xchg
rolb
mov
mov
ret
inc
dec
pop
xor
dec
out
fnsave
cmp
popa
aam
inc
cmp
mov
test
push
xchg
inc
or
inc
mov
iret
xchg
add
pop
fiaddl
cmp
mov
adcl
add
xor
or
or
cmpl
xchg
push
out
fistl
test
push
fwait
lods
mov
jge
and
imul
mov
add
xchg
mov
roll
ret
js
inc
lds
stc
cmpsb
sbb
movlhps
lods
fsubs
stos
jge
sbb
mov
mov
mov
adc
aam
test
bound
in
or
xor
sti
xchg
and
or
fdivrl
in
inc
sbb
test
int
push
jle
fyl2x
xchg
adcb
adc
outsl
es
mov
inc
xor
adc
pop
cwtl
cmp
and
cmp
daa
lahf
mov
xchg
repnz
in
push
aas
int3
push
jge
test
xor
outsb
and
lcall
movsl
xchg
nop
sub
out
mov
lahf
xor
push
inc
add
out
cmpsl
stc
leave
xlat
test
push
mov
inc
push
mov
xchg
lock
lock
mov
es
dec
inc
addr16
popf
ljmp
and
stc
pop
xchg
mov
pop
sbb
repz
ret
xchg
inc
adc
mov
inc
movsl
fwait
or
cmpl
call
in
inc
or
lods
mov
or
ficoml
iret
data16
jmp
movsb
inc
das
bound
sub
inc
negl
cli
sti
adc
xor
pop
push
shll
movb
addb
mov
sbb
int
scas
push
pop
scas
push
lahf
lahf
and
movsl
adc
xchg
ficoms
mov
inc
and
int
mov
fimuls
mov
cwtl
je
or
cmp
fmul
jecxz
jge
mov
mov
adc
in
sub
cmp
adc
test
add
lods
dec
xor
lods
ljmp
pop
ret
pop
xor
fwait
in
sub
mov
ljmp
sbb
sahf
pusha
movsl
std
adc
movsb
imul
adc
fcmovbe
in
add
mov
std
adc
lcall
fbstp
xchg
jge
jecxz
or
pop
aaa
data16
sub
add
loop
sarl
dec
ss
nop
xchg
mov
fs
mov
dec
push
stc
add
mov
test
xchg
inc
and
add
cltd
mov
add
cwtl
dec
add
out
cmp
cmp
out
xor
mov
or
jno
adc
fs
out
jno
lahf
ja
outsl
mov
or
aam
ds
pop
sub
fldl2e
inc
outsl
in
xchg
stos
inc
in
sbb
pop
add
add
es
stos
sub
mov
inc
sbb
xchg
inc
imul
xchg
xchg
fisubl
insl
adc
sarb
sbb
loope
jge
mov
push
xor
mov
sbb
pop
fstp
les
mov
lods
dec
cmpsb
cli
clc
jle
fs
or
loop
mull
push
aam
cmp
montmul
cmpsb
add
inc
jae
inc
sbb
test
daa
jp
fmul
mov
je
lret
in
testl
adc
xchg
js
lret
cmp
cli
scas
ret
stos
in
loop
leave
jg
lock
addr16
xchg
cmpsb
jp
mov
sub
mov
add
pop
xchg
stos
jmp
xchg
rcr
movsb
bound
push
repz
scas
sub
out
popa
dec
stc
inc
notb
pusha
sbb
pop
mov
inc
push
xlat
insl
mov
xchg
dec
iret
movsl
mov
mov
xor
adc
test
add
adc
or
ficomps
subb
imul
mov
dec
push
ja
pop
pop
mov
jb
call
roll
mov
mov
jbe
stc
sti
ja
or
xor
sbb
insl
lds
movsb
cltd
dec
mov
stos
ja
ss
js
xlat
shl
cs
je
hlt
call
ret
in
mov
and
push
mov
pop
ret
scas
sti
xchg
mov
insb
fldenv
jne
mov
sub
sub
arpl
movb
mov
pop
xor
pusha
adc
cmp
in
movsb
push
adc
fisubrl
ret
dec
dec
shrb
imul
mov
out
or
test
inc
jne
popa
clc
sub
push
xor
fcmovnu
mov
ret
sti
in
adc
call
pop
jno
mov
push
aam
daa
insl
jmp
and
xor
aas
or
or
inc
pop
popf
icebp
sarb
dec
and
mov
scas
test
les
sbb
insl
bound
jmp
ds
das
pop
aad
push
lcall
mov
leave
fldt
xchg
fwait
in
mov
or
sbb
std
ja
jmp
mov
jns
lock
mov
cmpsb
rorb
mov
push
add
push
fcoms
addb
xor
stos
and
and
cli
ljmp
add
mov
dec
loope
pushf
pop
xor
xchg
sub
jb
scas
les
fldenv
xchg
xchg
repnz
push
icebp
xlat
jg
xor
dec
adc
scas
mov
mov
xchg
outsb
out
loop
push
sar
icebp
add
mov
pop
arpl
sbbb
addr16
addl
sbb
nop
jle
mov
xchg
std
and
dec
arpl
out
push
pushf
gs
pop
mov
ror
add
hlt
test
std
fldt
add
xchg
push
jae
fsincos
cwtl
psubusb
arpl
dec
shlb
test
into
jp
jp
stos
sub
mov
xor
mov
es
daa
je
jl
cli
push
add
push
out
push
lret
push
fcomps
sbb
fstpl
repz
lret
dec
xchg
out
outsl
rclb
enter
xor
mov
addr16
mov
pop
dec
mov
in
sub
jbe
lea
mov
aam
add
movswl
sub
cmp
fdivrl
mov
inc
inc
sahf
sub
ss
cmp
popf
insl
sub
lock
pushf
stos
cwtl
lds
jnp
int3
cli
sbb
dec
jg
or
sahf
rolb
jbe
decl
in
xchg
insb
repnz
adc
lcall
sub
in
dec
mul
mov
mov
push
movsl
pop
xor
pop
scas
jge
pop
es
fimuls
iret
xor
push
mov
add
sbb
jg
xchg
pop
neg
popa
mov
adc
sbb
cmp
mov
mov
inc
es
cmc
lahf
pop
test
fistl
sbb
push
jnp
dec
xor
leave
mov
mov
adc
jg
xchg
lcall
push
jo
inc
xchg
pop
cld
stos
pop
push
hlt
pop
mov
sti
into
inc
aaa
mov
dec
icebp
xchg
adc
cmp
in
outsl
push
sbb
cli
ret
xchg
outsl
enter
xchg
mov
lret
outsl
cltd
mov
push
outsb
mov
pushf
adc
scas
imul
int3
andl
lea
jmp
scas
loope
dec
insl
cmp
inc
xchg
loope
pusha
dec
cmp
inc
gs
sub
clc
into
sub
subb
rcrl
xchg
mov
mov
pop
ret
not
fdivr
fs
mov
icebp
mov
ficoms
ja
shll
stc
jns
bound
push
xlat
inc
scas
mov
mov
adc
mov
sub
test
add
inc
sub
cmp
cmc
hlt
arpl
imul
out
xor
mov
ret
cltd
lods
pop
sbb
into
xchg
or
loope
in
add
cs
push
hlt
and
fdivrp
dec
hlt
dec
jecxz
je
push
fists
push
lock
pop
jns
ret
imul
and
lods
mov
cmp
xchg
stos
ja
or
pop
inc
nop
cmovg
pop
sbb
cwtl
call
imul
daa
gs
or
jecxz
pop
jo
xchg
sub
mov
adc
loope
pop
push
cmp
cli
cmp
pop
cltd
pop
add
pop
sbb
iret
jle
jp
xchg
call
dec
and
cs
addr16
fwait
mov
mov
cmp
loope
mov
scas
jmp
push
rorl
push
repnz
mov
cmc
rcll
and
lds
add
fdivl
inc
mov
cmp
aaa
flds
jbe
inc
fs
cmpl
add
pop
stc
sub
sub
cmp
mov
arpl
add
xchg
dec
jb
jnp
fisttpll
mov
cmpb
insb
pushfw
loop
popf
sub
lret
mov
adc
mov
mov
adc
inc
adc
xchg
dec
cwtl
mov
mov
fdivs
outsl
std
dec
and
mov
clc
mov
in
inc
into
add
sbb
push
hlt
imul
mov
ljmp
add
sub
push
mov
out
lret
cwtl
mov
loop
push
arpl
outsl
mull
jo
sub
dec
out
inc
push
jb
cmc
xor
js
dec
push
scas
sub
cmpsb
loopne
mov
push
lods
sbb
pop
lea
pop
mov
fcoml
gs
jge
psubd
movsb
mov
ja
enter
jb
push
cmp
jae
in
shlb
cwtl
aam
in
push
adc
xlat
lret
cmp
mov
pop
adc
in
dec
lods
and
fstpt
scas
rolb
popf
jb
xchg
sub
pop
mov
adc
add
inc
jmp
mov
dec
dec
sahf
pop
cwtl
fmull
push
or
jge
and
scas
mov
fwait
lret
xlat
pop
push
sarb
adc
daa
pusha
nop
sub
imul
aad
ret
jge
and
addr16
pop
lds
ret
ljmp
popa
adc
cs
mov
fdivrs
push
mov
loopne
je
ret
pushf
dec
push
xchg
subl
faddl
sahf
mov
es
outsl
test
ss
mov
dec
adc
lea
mov
sahf
jb
je
sbb
jno
fsub
or
scas
push
in
icebp
jg
jbe
clc
popa
int
mov
daa
lds
cltd
imul
inc
ss
sahf
out
dec
dec
pop
sub
loopne
mov
iret
dec
test
add
daa
sbb
jns
aad
arpl
dec
out
xchg
mov
in
sti
icebp
fsubp
xchg
imul
mov
mov
ss
inc
sbb
lret
andl
js
lock
aam
add
xchg
mov
addr16
scas
pop
pop
es
stos
ja
ret
fs
popa
adc
mov
lds
test
dec
popl
push
cmpsb
adc
ljmp
jne
insl
xchg
add
cs
loopne
mov
dec
and
sbb
jnp
push
add
insb
inc
mov
jb
clc
jl
scas
mov
addb
sub
xchg
jnp
outsb
mov
dec
sub
ss
inc
push
dec
loop
mov
loope
fcomp
jo
je
fmuls
stos
fdivrs
repnz
test
and
and
arpl
jge
clts
out
lods
inc
movsl
xor
xchg
enter
xchg
aaa
jg
dec
fnstenv
cwtl
addr16
stc
jmp
cs
scas
pusha
cmp
sub
out
adcb
xchg
pop
push
mov
aam
movsb
lcall
popa
xchg
out
sahf
xor
cmp
cmp
in
mov
hlt
popf
scas
movsl
pop
orl
fwait
negl
shll
jmp
push
test
clc
add
mov
mov
or
mov
clc
notrack
stos
mov
inc
aam
add
mov
mov
mov
jl
cmp
adc
mov
sbb
xor
or
out
push
xor
cli
enter
or
inc
mulb
sub
into
push
sub
pusha
pop
push
aas
adc
mov
cmpsb
in
sarb
lds
and
ret
dec
jl
dec
lahf
xchg
or
pop
rorb
scas
test
in
xchg
loop
push
aas
cmpsb
mov
inc
xchg
out
mov
add
xchg
pop
stos
out
stos
pop
inc
sbbb
pop
dec
mov
stos
mov
sub
adc
mov
mov
sahf
clc
and
popf
pusha
cwtl
sbb
ficompl
xor
push
push
movsb
ret
or
into
adc
cwtl
sbb
mov
iret
mov
mov
int
fmuls
pop
jmp
jbe
les
push
jecxz
rclb
or
es
dec
js
filds
mov
dec
ds
push
adc
mov
jecxz
push
lcall
xchg
pushf
push
cmp
dec
std
jb
insb
and
fisubrl
xchg
jmp
and
jg
xor
lret
call
hlt
sbb
stos
out
enter
sbb
jl
mov
inc
aas
inc
aaa
inc
enter
divb
dec
test
fstpt
lcall
adc
push
xchg
shll
mov
lcall
insb
outsl
sahf
and
lret
ret
dec
enter
jge
int3
or
ficoms
xlat
pop
pop
dec
movl
add
inc
push
fwait
inc
xor
mov
andl
in
mov
hlt
mov
jle
loop
jg
std
adc
lock
imul
lea
mov
ret
xlat
mov
daa
ds
mov
arpl
es
mov
icebp
scas
movsl
std
sahf
subl
push
jns
movsb
dec
mov
test
jl
fwait
lret
lods
xor
mov
subb
jbe
faddl
jmp
test
stos
or
ret
cmpsl
dec
jge
pop
nop
xchg
and
xchg
and
or
dec
xor
stos
dec
lahf
pop
inc
lcall
cltd
mov
loopne
pop
cld
repnz
sub
sub
negl
sbb
mov
xor
into
test
stc
mov
icebp
call
jnp
adc
inc
fimuls
jge
jecxz
movsb
cmp
jno
add
out
rcll
push
pop
nop
xlat
in
dec
xor
cmp
lahf
jbe
data16
mov
or
mov
movlhps
jle
stos
xchg
pop
mov
inc
cltd
in
ret
jo
cmp
in
mov
mov
enter
cld
jno
addr16
jo
push
xchg
subl
push
mov
or
jmp
lahf
cwtl
pop
movsl
mov
adc
adc
movsl
sub
lds
sub
xchg
outsb
lds
lods
add
cmp
mov
push
dec
and
cmpsb
and
loop
stc
enter
mov
or
mov
mov
adc
in
add
mov
cld
movsl
pop
stos
nop
push
cvtps2pi
mov
pop
xchg
and
out
jb
mov
sub
add
nop
sbb
cmp
outsl
adc
rorb
lret
cmp
in
daa
adc
mov
push
insb
adc
test
dec
aas
jl
xchg
pop
notb
jmp
mov
and
push
imul
out
icebp
sar
lock
mov
jle,pt
mov
icebp
lret
iret
or
dec
dec
in
lcall
sub
data16
cmp
daa
and
int
ffree
pop
stos
jmp
bound
xchg
out
outsl
arpl
aam
mov
push
inc
mov
jae
int3
pop
fidivrs
insl
pop
les
lock
je
mov
adc
push
dec
mov
loop
scas
mov
push
adc
cmp
mov
mov
dec
fisubrl
pop
std
push
adc
inc
mov
and
sti
jb
leave
and
push
and
ret
push
pop
dec
sub
rcrl
mov
and
in
fcoml
push
fs
add
sub
pop
mov
mov
push
jbe
mov
cmp
cmc
das
dec
stos
cmp
imul
imul
push
clc
push
movsb
fdivrp
shrb
cmp
aam
sub
xchg
or
push
cwtl
hlt
dec
test
push
sti
hlt
je
mov
and
mov
fs
dec
mov
in
iret
ds
bound
mov
jo
cmp
in
idivl
cmp
adc
aas
daa
push
push
jae
out
jbe
pop
jno
stos
test
loope
seto
fucomp
mov
cmp
mov
into
jmp
mov
fsubrl
imul
xchg
pop
push
out
jg
inc
inc
mov
icebp
in
shrl
scas
mov
cltd
out
cltd
pop
inc
stos
std
inc
test
in
jle
loopne
js
insb
shlb
and
aad
xchg
lods
imulb
mov
cltd
xchg
push
pop
clc
ret
xor
movsb
test
mov
mov
jno
jl
mov
sbbb
iret
fyl2xp1
shll
dec
test
push
lret
jg
cmp
add
xchg
dec
pop
pop
fcomp
cli
call
sbb
inc
sarl
stos
jbe
daa
mov
jb
dec
cmp
cmc
dec
jmp
insl
test
bound
fldenv
stos
mov
sti
jle
std
fs
int3
inc
jbe
orl
stos
jl
stos
int3
arpl
insl
icebp
add
mov
cmpsb
mov
xor
xor
push
and
lret
cmp
xor
fmul
xchg
and
and
pop
orb
xchg
and
inc
push
cmp
xchg
shr
int3
int
lods
sti
xchg
loopne,pn
sbb
push
sub
outsl
jo
lds
add
xchg
cmp
insl
cwtl
jo
nop
ret
mov
pop
mov
mull
sbb
ret
jno
mov
pop
ret
jg
cmp
push
out
mov
out
jne
dec
movl
cmp
iret
shl
movsl
fcompl
int3
jle
inc
mov
jle
fistpll
insl
jbe
xchg
inc
jbe
jmp
push
push
jb
and
and
sub
rcl
jo
jo
jecxz
ret
mov
pop
fcomps
mov
lea
shll
shll
icebp
repz
je
mov
sub
cmc
pop
push
outsb
mov
sbb
int
jge
and
out
out
fnstsw
std
and
add
mov
push
dec
push
and
add
jp
aas
mov
mov
std
fisubs
pusha
call
jne
jg
add
sbb
aam
jns
loopne
shlb
ffreep
das
pop
push
and
fdivrl
das
jnp
jl
mov
sub
xchg
lcall
outsb
xchg
cmp
fwait
leave
push
daa
or
aas
lds
push
fstpl
not
lahf
or
sub
lret
xchg
pusha
popa
es
xchg
jne
push
bound
sahf
leave
lea
dec
sub
imul
or
pop
dec
cmp
ja
addb
add
in
fmulp
leave
cwtl
adc
xor
dec
les
or
out
xchg
and
in
std
xlat
cs
add
mov
push
sub
or
adc
dec
or
fld1
inc
add
into
xlat
leave
divb
ret
lea
je
adc
nop
shlb
aad
sbbb
mov
idiv
mov
arpl
or
or
push
filds
rorl
sub
xor
inc
mov
push
lret
call
jp
push
sbb
inc
xor
adc
pop
dec
add
mov
mov
sbbl
mov
scas
sub
jge
test
jno
sbb
dec
sarb
fwait
fs
jns
xlat
adcb
lahf
popa
sbb
mov
add
cld
mov
mov
into
cld
mov
xchg
inc
inc
jno
lahf
bound
enter
test
add
or
fistl
pop
xlat
cli
cmp
data16
pop
testb
sbb
pop
int3
cmpsl
pop
mov
bound
sbb
inc
lock
repz
into
mov
outsb
cli
xchg
adc
adc
jecxz
pusha
fstpt
movsl
cmp
mov
adc
pop
pop
dec
and
and
imul
mov
mov
imul
pop
pop
lods
in
in
cltd
repz
lock
inc
lret
testb
jle
mov
pushf
int
call
les
sub
inc
jno
pop
in
xchg
dec
mov
dec
xchg
fxch
jo
into
push
cmp
xchg
mov
sete
mov
jle
adc
pop
lock
xor
stos
sbb
arpl
stc
cli
cvtpi2ps
rorl
clc
ret
mov
lods
adc
fcomps
in
mov
pop
rcl
jo
jbe
fistpl
inc
jp
push
lret
cmpb
and
nop
in
int3
xor
xor
mov
jmp
push
cmc
fisttpl
dec
mov
cmpsb
rcl
push
aam
fdivrl
mov
xchg
bound
js
jbe
lahf
enter
xchg
jnp
mov
lods
mov
mov
sbb
mov
or
leave
repnz
testl
shrl
mov
ja
imul
dec
jno
push
sbb
jnp
ret
orl
fistl
ret
in
aad
pop
cli
jecxz
js
mov
insb
jb,pt
cwtl
and
loope
aas
outsb
jno
fsubrl
sub
enter
into
les
out
add
repnz
inc
cmpsb
lahf
pop
popf
test
inc
jp
nop
xchg
mov
xchg
lds
sub
mov
fnsave
mov
cltd
adc
mov
lea
jl
cmpsl
pop
and
mov
rclb
adc
icebp
enter
ljmp
push
stc
sub
jmp
dec
xor
das
in
and
jmp
jbe
les
sub
cmpsb
pop
fxtract
mov
push
xchg
lock
cmp
mov
addr16
aaa
jnp
and
andl
repnz
inc
adc
rcr
pop
jg
loopne
incb
insb
subl
add
push
fidivs
sbb
nop
mov
cmp
dec
in
repnz
add
inc
insb
imul
mov
cmp
stos
mov
push
dec
mov
stc
loop
sub
insl
insb
and
dec
stc
cwtl
jl,pt
mov
push
and
pop
mov
fmul
cli
lcall
sub
fs
push
aas
mov
out
push
lahf
ss
mov
ror
out
mulb
mov
push
loop
dec
jae
call
fdivl
mov
fs
call
add
add
sbb
adc
xor
in
cmp
mov
lds
push
loopne
push
sbb
stos
pop
lcall
cmpsb
fsubs
and
stos
bound
sub
push
enter
push
sbb
cmc
jp
fcoms
mov
inc
and
es
add
inc
sub
ficoms
adc
pop
insb
out
fldl
xlat
js
jmp
jbe
xor
and
mov
mov
cmp
int3
mov
das
hlt
sub
xor
xchg
sbb
fildll
xlat
fucomip
mov
fsubl
mov
mov
sub
and
outsb
cmpsl
mov
mov
ljmp
int3
ja
in
mov
mov
and
jp
lods
loopne
iret
inc
push
sub
dec
sahf
fstl
hlt
pop
push
dec
repz
sub
jmp
cmp
shrl
fdivr
ljmp
ja
sbb
mov
lods
sbb
cmpsl
aam
pop
cmpsl
sbb
inc
nop
xchg
inc
mov
femms
leave
or
test
js
mov
sbb
push
or
je
loope
pop
and
mov
xchg
aas
cmc
stc
movsl
or
lds
push
mov
ljmp
xor
cmp
scas
push
dec
jbe
cwtl
imul
scas
xchg
sarb
dec
ficompl
arpl
das
sbb
push
and
jecxz
jbe
in
push
adc
mov
fsubrl
test
or
jmp
inc
xor
in
xor
pop
pop
cwtl
movsb
dec
dec
aad
dec
push
pusha
mov
std
arpl
iret
mov
dec
popf
jo
mov
loop
pop
dec
lods
jecxz
cmp
add
mov
mov
mov
rol
test
and
mov
add
push
les
into
out
xor
push
dec
adc
pop
cmpsb
or
jnp
out
push
mov
imull
push
fwait
dec
inc
sahf
mov
push
xor
fdivrp
sub
lods
sub
pop
cwtl
add
notl
enter
and
pusha
xchg
add
aam
mov
adc
fyl2x
pop
cmpsb
cmp
pop
jle
pop
shll
and
pop
movsl
adc
daa
stos
idivb
adc
jp
mov
pop
adc
enter
lret
and
or
push
mov
xchg
and
push
ret
adc
add
shrl
lods
clc
dec
repnz
loop
loop
inc
popa
repnz
iret
mov
sbb
stos
cli
pusha
inc
jne
into
mov
inc
ds
popa
clc
mov
and
insl
lea
ficompl
lods
sub
bnd
cs
ret
scas
pushf
pop
mov
enter
jae
stos
add
ret
mov
fwait
xchg
frstor
outsb
jecxz
pop
jno
and
test
mov
out
pop
ljmp
push
test
mov
sub
jp
inc
mov
mov
xchg
xlat
jmp
and
xchg
sahf
ds
inc
outsl
adcb
sbb
lods
loopne
sub
mov
cltd
imul
stos
cmp
mov
bound
in
or
xchg
and
rcll
jg
int
sbb
mov
dec
sbb
xchg
adc
jp
cld
sti
xor
jp
push
aaa
and
movsl
sbb
jmp
jae
bound
xchg
lahf
andl
stc
movsb
in
sub
subl
add
gs
sub
xchg
movsb
test
je
pop
and
and
in
cld
fcomps
add
in
das
cmp
out
mov
ljmp
push
sub
out
mov
sti
sti
jmp
sub
jbe
and
shrb
jmp
loop
adc
inc
pop
ljmp
lret
sti
push
pop
xchg
mov
icebp
test
adc
xchg
jno
ret
fisttps
cmc
jno
or
stos
xor
mov
xor
insb
jns
mov
outsl
mov
or
mul
out
ds
cmp
and
pop
addb
stos
add
into
cmp
js
xorb
add
shll
mov
movsl
push
int3
cs
mov
js
mov
sahf
jns
data16
pop
ret
sub
rorl
ljmp
push
dec
loope
aad
push
push
jo
pusha
movups
bswap
out
sub
pop
add
lods
dec
sub
adc
popa
push
popl
cmp
sub
push
lahf
fsts
fwait
stos
aad
stc
imul
or
mov
scas
sarb
jne
loop
lods
dec
adcb
clc
shll
and
add
jo
repnz
mov
cmp
repz
cmp
fstpl
cmp
pusha
add
cmp
mov
pop
sbb
scas
pop
adc
pop
mov
movsb
push
hlt
test
pop
in
imul
inc
sub
loope
in
adc
mov
fstpt
stos
out
cmp
in
jb
mov
push
js
loope
mov
lret
xor
stos
add
or
orb
in
movsl
imul
ret
loope
shlb
push
mov
pop
subb
sbb
mov
rol
ljmp
cmp
mov
movsb
mov
cmp
lret
and
fdivs
cltd
insl
xor
jae
outsl
jg
jbe
push
adcl
mov
loop
inc
sub
outsl
out
movb
jp
jae
push
andl
int
int
xchg
fsubr
lahf
jno
xchg
or
ds
shl
sub
mov
mov
inc
jecxz
sbb
sbb
rclb
push
sahf
nop
sub
rolb
in
push
out
push
pop
xchg
addl
inc
leave
jns
imul
inc
lret
sub
call
sub
hlt
mov
mov
dec
xchg
popf
jp
aad
add
pusha
test
or
into
sub
pop
jge
push
inc
pop
fdivrl
decl
sbb
nop
dec
sarl
enter
mov
push
call
xchg
sbb
mov
dec
pushf
inc
xor
fisttpll
lea
jl
lcall
jecxz
adc
dec
ljmp
sbb
loopne
test
jb
sbb
xchg
or
loop
mov
dec
add
cmp
es
int3
push
cmpsb
or
adcl
out
mov
dec
fisubrs
cmp
mov
loope
ds
fwait
or
adc
negb
pop
sub
pusha
or
mov
mov
in
xor
add
testb
pop
enter
or
popa
pop
gs
int3
pop
sub
fidivrl
out
mov
mov
decl
aas
push
push
sbb
lret
sbb
mov
cwtl
mov
xor
xlat
or
rcrl
stc
nop
pop
sti
sbb
out
in
lahf
stos
shlb
mov
inc
jo
sub
xor
std
mov
cmc
out
fists
xchg
sub
outsb
xor
sbb
std
aas
push
lahf
rorb
pop
push
jne
out
stc
orb
xor
add
notl
out
cltd
and
inc
mov
xchg
cli
push
lods
mov
sarl
and
out
fwait
stos
dec
clc
pop
loop
test
outsb
out
dec
lcall
out
xchg
push
rcl
mov
xchg
in
loop
xor
push
jns
add
leave
rorl
push
lock
enter
jecxz
js
popa
cld
lds
pop
loope
xchg
push
roll
or
ds
xor
roll
xor
movsl
mov
mov
add
dec
jnp
pop
test
in
mov
iret
xchg
mov
daa
arpl
xor
adc
add
jle
add
xor
mov
dec
js
pop
aas
iret
out
out
mov
push
stos
inc
fcmovnu
mov
and
sub
sub
pop
in
popf
cmc
mov
adc
divl
dec
sbb
pop
dec
xchg
dec
and
inc
dec
sub
fistps
push
dec
lds
push
sbb
sahf
or
notl
pusha
mov
lods
pop
add
fcoms
call
mov
out
cmp
fs
cli
incb
inc
pop
outsb
sbb
fldt
dec
cmp
scas
mov
push
adc
ja
test
cmp
cmp
mov
das
xchg
cmp
test
mov
jp
sub
xor
test
pop
lock
push
adc
mov
dec
push
out
fmuls
mov
cmc
rclb
arpl
rorl
push
sub
jge
mov
sub
fxch
jne
push
in
push
mov
sub
int
xchg
jp
xchg
imul
inc
pop
xor
repnz
push
cmp
jmp
aas
and
and
orb
push
stos
lret
mov
mov
push
push
mov
sub
mov
push
pop
dec
orb
sbb
xchg
inc
push
sub
fsubl
out
je
push
mov
or
sub
sub
xchg
xor
mull
mov
xor
and
int3
inc
enter
mov
jno
out
adc
loopne
push
lret
push
jo
sti
cmp
lods
inc
scas
aas
add
lcall
pop
stos
mov
xor
std
add
out
rorb
aad
daa
in
mov
pop
xor
adc
std
sub
in
int3
or
fwait
nop
cld
insb
sbb
dec
or
fidivs
push
and
andl
mov
inc
popa
insb
inc
cmp
cmpsl
push
dec
jae
insb
insl
bound
push
cltd
clc
adc
mov
mov
mov
mov
add
sub
cmpsl
dec
push
outsl
test
clc
test
cli
out
out
push
mov
enter
lret
movsl
rcll
vprotq
or
stos
inc
scas
jg
pop
inc
imul
mov
cmp
out
push
cmp
jg
pop
js
fstl
nop
or
jge
jmp
mov
push
mov
push
movsl
enter
xor
data16
jg
sti
dec
cltd
dec
fimuls
pop
into
in
std
add
adc
cmpsb
sub
jns
out
push
push
adc
sbb
shll
jnp
stos
dec
nop
loopne
push
xchg
in
fcoms
loopne
in
repnz
ficompl
mov
inc
subl
shll
out
dec
lds
aas
test
test
add
jle
in
jl
xchg
out
gs
jnp
les
aam
mov
xchg
pop
adc
aad
sub
xchg
mov
sar
cmp
imul
mov
mov
inc
enter
jp
lea
push
sub
or
add
pop
aam
push
dec
and
in
mov
pop
mov
cmpsb
scas
ss
sbb
sarb
and
in
outsb
jg
cwtl
lcall
mov
xor
pop
jo
pushf
test
std
and
in
jmp
iret
adc
gs
fsub
adc
cmp
dec
lock
in
mov
mov
mov
fidivrl
int3
call
fldcw
inc
and
scas
add
xor
xchg
xchg
fsubrs
or
mov
push
std
or
push
inc
outsb
and
cmc
xor
aam
stos
je
nop
and
add
into
add
repz
in
or
cltd
fcomip
lods
daa
dec
cmc
aas
dec
cld
int3
push
pop
hlt
lcall
xchg
mov
mov
mov
add
bnd
cmp
aad
add
rclb
mov
dec
cmp
repnz
push
repz
loope
repnz
nop
enter
stc
loop
xor
popa
repz
fsubrl
out
and
dec
mov
push
mov
xor
lods
xchg
stos
int
loop
mov
add
lock
or
popf
mov
insl
push
add
js
xchg
pop
sbb
inc
sub
sub
out
popa
loopne
xchg
fisttps
lock
pop
pushf
repz
nop
adc
xor
xchg
and
cmp
out
hlt
sub
xor
cmc
inc
jl
adc
mov
insb
je
repnz
out
ss
and
call
push
in
scas
or
adc
into
push
mov
scas
jno
mov
xchg
lds
inc
xor
loopne
in
inc
sub
or
das
jae
loopne
cs
add
outsl
int3
decl
inc
mov
lea
movsb
bound
popa
nop
sub
pop
repnz
mov
xor
popa
pusha
sub
mov
or
push
jns
push
xchg
pop
jmp
sub
adc
stos
popf
ja
mov
outsl
push
js
cmc
sahf
push
movsb
int3
lahf
dec
movsl
aam
add
sub
jo
mov
inc
loop
mov
sbb
add
dec
insb
nop
cmpsb
test
or
clc
push
movups
movsl
mov
test
jmp
mov
cltd
addl
push
inc
cmp
jg
xchg
mov
rcrb
loop
cmp
and
scas
repz
sub
in
je
xchg
js
or
sub
sbb
testl
movsb
jecxz
inc
jne
pushf
cmc
pop
lods
sbb
popf
out
mov
ret
xchg
lcall
jge
push
sti
imul
push
movsb
push
or
push
mov
jbe
int3
pop
add
ret
xchg
pushf
push
daa
lods
pop
pop
adc
lods
dec
adc
pop
push
mov
or
jge
adc
push
mov
or
pop
mov
inc
sti
test
dec
dec
pushf
jns
mov
out
push
jb
outsb
lahf
xor
jo
fstpt
xor
xchg
fcmovnu
inc
lds
palignr
mov
fucompp
lock
jg
sub
fadds
gs
cli
adc
fstps
push
mov
insb
dec
orl
cmp
or
jmp
adc
inc
insl
and
mov
cmp
mov
in
sub
js
test
gs
mov
xchg
inc
jl
aam
and
adc
std
fistps
aaa
dec
fwait
scas
fucomp
lahf
scas
fldlg2
in
pop
jns
mov
or
xor
repnz
sub
arpl
outsl
adcb
data16
imul
clc
sbb
ljmp
cmp
imul
je
pop
fucom
xor
add
or
aam
push
xor
cwtl
sbb
mov
jmp
mov
mov
and
push
adc
jo
inc
mov
movsl
adcb
mov
js
push
or
ror
add
aas
bound
mov
aam
sbb
hlt
divl
lcall
pop
clc
hlt
inc
enter
mov
in
and
cmc
xchg
out
adc
es
ret
popa
inc
push
mov
mov
mov
xor
ss
xor
ss
sbb
into
mov
mov
test
jg
ja
mov
cmp
out
ror
hlt
add
jnp
push
test
or
push
inc
fwait
mov
add
mov
sahf
push
cmc
out
fs
xor
inc
into
jge
sahf
cmp
je
sbb
mov
cmp
add
xor
cwtl
movsl
fs
cs
test
jns
mov
movsl
mov
xor
es
loop
xchg
mov
pop
adc
mov
cmp
sub
xor
add
shll
movsb
xor
filds
add
cmp
call
xor
inc
pop
rcrl
mov
aaa
jg
roll
jl
je
adc
or
and
mov
into
lcall
push
das
mov
mov
in
ja
aad
hlt
mov
xor
subl
inc
jo
repnz
cli
xor
inc
sahf
sbb
fsubl
or
les
pop
mov
push
and
pop
ljmp
and
shrl
out
mov
test
das
or
fs
lods
movb
ljmp
repz
sti
out
gs
rol
ja
rolb
mov
imul
inc
jmp
push
dec
xchg
clc
xor
mov
test
push
push
jno
ret
pop
lods
les
mov
push
iret
push
je
daa
test
and
loope
hlt
out
cmpb
std
mov
in
xlat
icebp
sbb
dec
rcrb
popf
cmp
jnp
int3
loope
sbbl
jns
jo
sbb
movb
jle
leave
cltd
stos
jl
faddl
es
es
push
mov
mov
mov
je
sbb
push
loopne
inc
scas
jnp
std
sti
cwtl
sbbl
push
imul
adc
repz
ljmp
daa
add
push
loop
xor
cmpsb
inc
xchg
push
aad
dec
xchg
mov
in
jge
shrb
jge
dec
dec
shll
push
xor
stos
negb
pop
or
pop
sarl
insl
mov
mov
cltd
add
xchg
pop
fucomi
cmp
mov
push
imul
or
jno
sbb
clc
cmpsb
je
adc
sbb
mov
xchg
fscale
xchg
xchg
mov
fs
xchg
int
sub
xchg
push
stos
sbb
fcmovnu
sbb
jne
sub
mov
int3
rcll
imul
stos
pop
mov
sub
push
jg
mov
mov
jecxz
mov
in
push
sahf
lods
lods
fstpt
sbb
push
or
int3
jb
jno
mov
clc
xchg
popa
pushf
insl
inc
xchg
test
lods
jnp
arpl
inc
cmp
cltd
push
test
ret
ret
bound
xchg
out
push
xchg
arpl
add
clc
or
jno
and
cmp
pop
arpl
outsb
mov
add
push
mov
mov
aad
xor
or
fnclex
in
int3
les
pop
xor
inc
xor
nop
dec
sbb
ret
xchg
nop
xor
ss
pop
aam
adc
ror
mov
rcl
xchg
fcmovb
nop
ljmp
xor
inc
or
jle
xor
or
push
jae
dec
popa
xor
mov
add
hlt
xchg
sub
and
push
mov
aas
loopne
leave
fwait
xchg
fdivrl
and
mov
mov
aad
enter
xor
push
xchg
ficoms
mov
jns
dec
push
xor
add
cmp
push
lret
cltd
leave
xor
ret
test
jecxz
sub
mov
jge
aad
mov
mov
xor
scas
sahf
push
dec
push
int3
bound
ds
or
fs
hlt
fistpll
pushf
mov
cwtl
xchg
mov
xchg
mov
xor
lret
mov
out
inc
lea
out
cmp
mov
aaa
jns
aaa
xor
mov
inc
dec
scas
popa
daa
call
imul
pop
mov
pop
and
sbb
push
sbb
xchg
or
cmpsb
sbb
repnz
dec
lock
pusha
sbb
mov
in
sub
ja
sub
pop
es
aaa
addr16
ja
sar
popf
out
jge
pop
psubsb
jne
inc
push
jns
mov
jmp
shl
ss
dec
inc
std
dec
imul
dec
pusha
mov
xlat
mov
orl
into
aaa
inc
or
dec
jg
data16
jp
xor
dec
cmc
aad
std
gs
push
pop
sbb
shll
mov
rcl
add
daa
fcoms
in
lock
and
sub
fcmovne
arpl
inc
push
mov
mov
add
out
push
cld
notl
ds
jmp
into
cmp
mov
sub
dec
rcr
mov
pop
or
insl
sti
add
dec
fistpll
and
mov
xor
mov
sub
cwtl
dec
in
enter
cmp
cwtl
sub
xlat
mov
mov
in
int3
push
in
xchg
in
int3
dec
mov
inc
push
insb
mov
mov
out
cld
mov
or
mov
fistpll
and
mov
or
push
dec
pop
mov
shll
stos
xchg
adcb
in
or
in
test
inc
mov
outsl
ret
mov
call
bound
jge
or
shrl
int3
sub
xor
mov
lcall
aas
mov
mov
sbb
adc
xlat
dec
enter
mov
aaa
incl
aas
inc
sbb
in
mov
pop
dec
daa
fwait
inc
sbb
pop
adc
shll
arpl
mov
mull
jg
jmp
or
fildll
in
push
hlt
aad
jp
sub
hlt
notb
test
mov
test
inc
shl
sbb
lret
ret
xlat
sbbb
and
jmp
adc
xor
addr16
fwait
pop
pop
cmp
popf
and
ja
xchg
pop
pop
add
mov
inc
rol
dec
test
xor
and
cltd
aad
jp
pop
mov
mov
dec
call
jg
mov
dec
sbb
clc
in
fcoms
sahf
jg
loope
cmp
sbb
sbb
insb
rcll
xor
shlb
out
xchg
jmp
scas
jbe
lock
and
aam
push
lea
roll
loop
jl
mov
int3
push
inc
lea
rorb
jmp
scas
fcmovne
int3
cmc
stos
push
out
mov
cmp
lret
loope
loopne
jp
sbb
daa
cmp
push
test
fwait
nop
sbb
fs
inc
mov
in
jno
ja
fiadds
loopne
cmp
insl
movsl
dec
iret
jb
ja
mov
pop
dec
insb
mov
cmp
lds
jne
dec
cld
mov
loop
mov
fdivrl
cmp
xor
sbbl
adc
test
inc
pop
push
xor
cli
in
fnstsw
or
mov
hlt
jmp
shrb
sub
sub
rcrl
cmp
add
dec
push
cld
cmc
jae
popf
int
pop
sbb
pushf
push
adc
leave
in
mov
lcall
pop
mov
aad
subb
ret
xchg
fs
fdivrs
frstor
dec
pushl
lock
aad
ljmp
dec
mov
int3
stc
adc
aas
or
aaa
dec
dec
inc
xlat
push
mov
lret
mov
mov
xor
fs
xor
shrb
ret
sarb
fists
stc
jb
xchg
mull
scas
jne
xchg
dec
cmp
sub
dec
push
frstor
mov
cmp
mov
call
push
ljmp
lcall
and
pop
dec
push
test
test
fcmovu
adc
enter
xlat
addr16
adc
cmp
cmp
push
in
jno
dec
xor
xchg
mov
fimuls
pop
fwait
cmp
dec
add
lcall
lods
loope
push
adc
sub
iret
pop
ret
insl
popf
fidivl
add
push
lea
add
cs
and
ja
stos
sub
fisubl
aas
push
mov
popf
inc
cmpsl
shrb
test
in
sbb
pop
notl
movsl
inc
mov
jns
xor
into
sbb
push
repz
dec
cmp
int
in
cmp
movl
push
jo
push
push
mov
mov
jnp
add
das
pop
sub
mov
gs
int3
xchg
push
dec
add
gs
pop
xor
cmp
cltd
jae
sbb
push
incl
stc
cld
push
shl
sbb
aam
xchg
shrd
iret
mov
sbb
adc
popf
or
xlat
fidivrs
xor
add
and
push
icebp
xor
xor
pusha
jnp
or
shl
adc
imul
jb
orb
sub
enter
add
dec
fldt
mov
mov
xor
cmp
ljmp
int3
jne
cmp
cmpsl
jle
add
dec
add
cld
std
ljmp
jae
andl
divl
inc
stos
add
push
test
sub
xchg
xchg
fisubrs
stc
mov
pop
jl
and
sbb
or
sub
xor
ja
es
pushf
mov
add
cmp
mov
jnp
cwtl
enter
jecxz
push
cmp
add
imul
cmp
enter
and
rorb
dec
jecxz
cli
cwtl
jmp
mov
sbb
cld
aas
shld
xchg
cmp
xlat
je
fstps
loopne
pop
sub
outsb
loope
mov
mov
mov
pushw
aad
fnstenv
cmpsl
mov
jle
jb
xor
sub
push
testl
push
mov
sbb
add
mov
stc
mulb
mov
jmp
or
rcrb
daa
dec
xchg
leave
pop
mov
adc
daa
xchg
lahf
mov
out
in
ds
stos
and
pop
jmp
aaa
xor
test
ljmp
pop
loop
adcl
in
sub
movsb
mov
push
out
fwait
test
insl
cwtl
loopne
test
fnstcw
pop
out
xchg
fmuls
sbb
in
sub
inc
lret
out
add
jl
sbb
rcr
in
rcrb
jae
add
inc
fbld
insl
je
push
jg
mov
push
xchg
ja
cli
bound
xchg
pop
dec
mov
or
repz
int
clc
scas
sub
dec
jmp
cmp
hlt
hlt
pop
leave
xchg
fnstsw
cmp
jl
push
sbb
test
mov
add
and
mov
fsubs
push
in
jg
ljmp
sbb
rcrl
in
xor
dec
mov
mov
test
add
cmc
test
dec
mov
and
push
xchg
mov
test
pusha
lcall
cmp
es
in
mul
xlat
push
pop
fsubr
fcoml
imul
push
loopne
ljmp
fisttps
mov
cmc
adc
and
cli
fcomps
xlat
push
xchg
and
cmp
sub
sbb
test
mov
jno
popa
cltd
arpl
stos
insb
iret
dec
dec
mov
or
pop
push
je
sbb
mov
xlat
or
cmp
inc
adc
xor
rorb
xchg
cmp
adc
push
mov
subb
jbe
lcall
cld
xor
ret
adc
mov
dec
cs
jmp
dec
xchg
mov
jne
push
lock
cmpsl
sub
mov
mov
sahf
mov
mov
pop
cmpsb
add
in
nop
loope
cmp
fisubrl
sbb
dec
or
cmp
in
add
sub
cli
xchg
shr
add
and
lods
inc
ret
cmpsl
push
add
push
push
adc
sti
jge
mov
mov
pop
int3
xor
add
out
inc
scas
xor
xlat
lea
repz
cmpsb
dec
faddl
adc
mov
out
pusha
pop
test
sbb
push
rcll
insb
test
sbb
mov
sbb
cwtl
sbb
cwtl
xlat
adc
xlat
repz
push
andb
pop
adc
dec
push
or
adc
mov
mov
scas
icebp
arpl
lds
out
mov
sbb
repnz
lea
cld
xchg
jne
pop
arpl
xchg
call
add
sahf
push
sbbl
fisttpll
xchg
inc
jo
stos
filds
or
lahf
pusha
fldenv
icebp
dec
cmp
add
leave
icebp
cmp
push
pop
xor
scas
mov
pushf
or
xchg
mov
push
jae
push
outsb
aam
and
or
inc
add
mov
add
dec
je
xchg
je
pusha
add
xor
add
sub
fsts
into
popa
push
out
out
nop
fnstenv
xchg
std
mov
lods
outsb
test
push
movsl
mov
mov
pop
pop
repz
fwait
nop
dec
sbb
sbb
in
std
or
cmp
jbe
test
dec
pop
jmp
and
adc
cltd
xchg
pop
mov
jle
mov
int
sbb
and
ret
cmp
in
imul
dec
and
cmp
cmp
xchg
out
test
pushaw
incb
shlb
lcall
loop
lahf
mov
lds
xor
mov
and
pop
mov
jo
fldenv
xor
outsl
jae
inc
fiaddl
sbb
fildl
mov
mov
mov
scas
cmc
je
mov
cmp
mov
sub
ror
in
imul
inc
in
movsb
daa
inc
ret
mov
adc
jmp
enter
scas
aad
popl
mov
jmp
jns
loopne
xor
popa
cmp
mov
xlat
sub
push
sbb
fmul
pop
dec
cli
pop
xchg
or
rorb
in
adc
and
jbe
jns
pop
ljmp
jmp
nop
dec
dec
bound
pop
fistps
inc
out
je
mov
sub
xchg
push
ficoms
filds
clc
pop
push
icebp
xor
orl
icebp
xor
pop
jo
repz
iret
lea
mov
sahf
cmc
push
jle
sahf
dec
shlb
shr
insl
in
addb
clc
cld
out
stos
adc
out
mov
mov
lods
pop
or
ja
ucomiss
stos
repz
mov
sbb
xlat
add
sbb
push
sub
stos
push
negl
lret
xor
inc
pop
inc
pop
mov
mov
add
push
shld
out
lret
push
sbb
lds
add
dec
or
lea
push
cmpsb
inc
jge
stos
ljmp
shrl
fwait
shlb
aam
xor
shl
stos
lret
mov
dec
xchg
or
mov
std
adc
ret
repz
add
scas
repz
in
cmp
xchg
movsl
cmpsb
and
loopne
popa
in
mov
jle
dec
push
lcall
or
loopne
ret
push
std
add
rcl
scas
mov
shlb
out
dec
xchg
fs
jb
outsl
xchg
or
lds
daa
popf
lret
lods
loope
mov
repnz
jb
and
mov
xchg
cli
jnp
subb
imul
mov
cltd
push
roll
lcall
xor
add
popf
push
lods
xor
add
push
xchg
das
mov
pop
sbb
xchg
jno
and
xor
mov
xor
sti
in
repnz
xor
xchg
dec
inc
fidivl
xchg
xor
mov
or
stos
mov
inc
sub
or
jb
pop
dec
push
mov
daa
rcrb
ja
das
test
add
xchg
into
pusha
jmp
loop
jnp
or
leave
xchg
daa
lods
adc
sarl
sbb
mov
dec
clc
arpl
mov
imul
aad
cld
mov
sbb
outsb
pushf
lods
lcall
or
and
xchg
repz
inc
fsts
cmp
jb
mov
push
cmp
inc
and
push
ret
in
pop
and
push
loopne
fs
popf
fwait
cwtl
ret
pop
xorl
push
pop
pop
fisubs
fisubs
lds
into
int
pushf
ret
inc
loopne
movsb
out
bound
inc
dec
jmp
sub
test
adc
mov
sbb
hlt
add
inc
cwtl
lret
xlat
subb
fiaddl
sbb
fildl
enter
cs
outsl
jns
pop
loope
daa
nop
push
das
xchg
mov
pop
inc
cmp
cmp
jnp
shr
je
inc
lret
mov
push
and
mov
mov
lods
outsb
dec
sbb
pop
inc
inc
dec
outsl
cmp
je
jae
mov
mov
loope
push
dec
add
mov
mov
std
in
out
cwtl
pop
into
and
scas
inc
idivl
mov
or
ljmp
fwait
imul
popa
popf
ja
lods
lcall
cmp
inc
stc
aas
ss
cmpsb
out
scas
test
clc
aaa
outsb
mov
fisubl
sar
sub
fldt
lock
adc
xor
bound
testl
shrl
mov
ficomps
mov
mov
and
dec
xor
outsb
inc
xor
pop
out
cwtl
xor
or
sbb
pusha
outsl
test
push
sbb
hlt
pop
pop
cmp
outsb
adc
imull
pop
js
mov
mov
xor
xchg
int3
mov
push
jns
xor
push
inc
mov
xchg
pop
jecxz
je
mov
pop
push
jge
loopne
xor
mov
mov
sub
mov
push
test
pop
imul
pop
pop
xchg
cmp
es
shl
cld
jl
lcall
lcall
sub
lahf
cmp
xchg
addb
aad
icebp
xchg
sub
xchg
add
add
mov
fldl
outsl
ds
negl
mov
mov
mov
movsb
add
les
push
fisubrs
mov
sub
adc
jg
lods
scas
jne
xchg
clc
and
test
adc
jbe
icebp
inc
mov
or
xchg
cmc
popa
xchg
into
mov
hlt
nop
xor
jnp
xchg
jno
fmuls
aam
cs
pop
or
dec
inc
imul
fisttpl
adc
in
stc
xchg
js
pop
fdivs
sub
mov
gs
cwtl
xor
push
cmp
outsl
push
jmp
xchg
mov
inc
out
faddl
sbb
repz
pop
cmpsl
dec
test
and
mov
adc
popa
mov
push
je
nop
jl
aad
adc
int3
add
idivb
cmp
jnp
xchg
and
and
gs
sub
ljmp
sub
or
add
aaa
ret
pop
sub
stos
mov
xchg
push
daa
mov
jne
cmpsl
aam
push
add
pop
aad
jecxz
sub
cmpsl
dec
xchg
jno
mov
xchg
pop
pop
jbe
div
sbb
and
xor
add
pop
xchg
call
cmc
stos
hlt
stc
cmp
pop
mov
mov
stos
ss
stos
add
cld
ret
cli
and
imul
jmp
scas
clc
inc
jns
and
inc
adc
lret
mov
xchg
jp
mov
mov
fldl
or
pop
in
pop
cmp
dec
filds
fldt
fucomip
imul
cmp
xor
adc
push
jg
out
in
pop
in
sbb
sub
loop
lods
mov
mov
test
lods
sti
inc
pop
mov
pop
and
cmp
push
push
and
mov
and
stc
jns
mov
add
jmp
jno
xor
les
mov
pop
jmp
loope
mov
sub
cmp
fwait
enter
and
ljmp
sbb
les
lock
xor
stos
sub
and
loop
jns
xchg
ror
pop
xchg
test
aad
negl
test
xchg
testl
stos
movb
and
cmpsb
and
testb
dec
and
mov
out
pop
cmp
pop
push
ret
es
leave
xchg
imul
pop
dec
and
loopne
rol
fmull
or
stos
pop
jl
fcmovbe
mov
sub
iret
insb
adc
or
push
push
mov
or
mov
ror
mov
fs
scas
cmc
sub
aas
mov
jge
adc
int
push
pop
aaa
adc
addps
test
push
push
inc
add
pop
mov
inc
inc
rcl
pop
xchg
sbb
addl
hlt
jle
outsb
leave
push
fistps
out
into
mov
lods
rclb
adc
or
mov
int
aaa
push
sub
jns
jbe
sub
lea
lods
repnz
xchg
xlat
adc
xchg
les
lods
xlat
dec
xor
sbb
mov
sub
mov
les
fstpt
je
dec
pop
or
pop
jb
add
cmp
or
movsb
test
push
pusha
mov
sbb
sub
imul
sar
insl
mov
pusha
je
pop
test
movsl
add
or
pop
ret
add
jo
aas
or
pop
sub
stc
rep
jns
ret
in
aam
pop
sub
jae
insb
rsm
mov
add
loope
inc
cmp
push
pop
repnz
gs
pusha
fs
jne
push
jl
ret
test
xor
or
in
jmp
adc
or
stos
mov
and
imul
mov
jo
push
cmp
cmpsb
ds
rorb
pop
cmp
xchg
and
mov
sbb
fs
das
lret
inc
push
mov
cmpsb
sbbb
xchg
or
xor
iret
xchg
orb
lods
scas
or
dec
insb
cmp
out
stos
add
and
andl
mov
dec
sbb
or
in
pause
add
testl
sub
mov
push
shl
sti
scas
and
jp
cmpsl
xchg
dec
mov
lods
push
inc
in
push
and
cwtl
enter
inc
ret
push
cli
mov
push
lret
adc
in
scas
mov
add
loope
test
push
xchg
sbb
add
jl
out
js
inc
movsl
bound
push
sbb
in
stos
adc
stc
lock
rcl
or
call
jae
stos
xor
inc
mov
xchg
leave
addr16
xor
xchg
mov
lcall
enter
inc
inc
lods
jmp
xchg
call
sub
xchg
clc
or
cwtl
mov
add
lahf
sub
cld
aaa
aad
ss
mov
jno
or
push
shl
pusha
sbb
iret
frstor
stc
ficoml
push
jp
out
push
inc
pop
int3
cmpsb
aaa
int
arpl
or
sbb
or
testl
push
neg
scas
cld
aam
jge
shrl
dec
jecxz
add
sbb
cmp
mov
cmp
mov
cmp
daa
xchg
add
inc
int3
push
and
call
jecxz
xchg
pop
test
jne
sub
sarb
dec
leave
movl
adc
loope
popf
dec
add
ficomps
insb
mov
out
cmpsb
dec
aam
stos
popa
aaa
and
xchg
push
sub
fwait
adc
rcr
fadds
mov
xor
and
outsl
les
call
mov
inc
pop
and
and
ret
scas
mov
xlat
xchg
mov
xchg
mov
push
cmpsb
imul
mov
mov
pop
add
push
push
adcl
repz
hlt
mov
rorb
gs
call
dec
jbe
in
addb
or
fidivl
mov
daa
jle
cmp
mov
nop
stos
es
cwtl
sbb
xor
das
and
mov
fildl
test
xor
sub
add
mov
dec
or
inc
mov
ds
add
cmp
cli
testb
xchg
xchg
sub
and
bound
push
daa
hlt
mov
es
mov
xchg
lds
cmpsb
mov
sub
cmp
pushf
jno
in
iret
mov
rcrb
jo
ret
cmp
outsl
loopne
nop
push
lret
ja
push
out
and
adc
roll
jle
ret
inc
movsl
jmp
xchg
je
out
jns
mov
pop
push
in
imul
pop
lahf
insb
mov
sti
ret
aas
mov
sysexit
outsl
mov
mull
fimuls
mov
jbe
push
lds
mov
sub
outsl
or
pop
icebp
xchg
es
stos
lods
getsec
call
push
lds
insl
js
jl
jp
lea
test
push
cmc
out
pusha
mov
jl
int3
mov
xchg
mov
popa
and
pop
add
in
decb
jp
cmpb
fucomi
enter
add
pop
xchg
mov
ss
cltd
ret
and
cmp
push
outsl
divl
fidivrs
loopne
pop
cld
pop
sbb
xor
in
fidivs
mov
xchg
rcll
xchg
movsb
ret
aaa
add
inc
push
sbb
aaa
in
adc
dec
insl
add
adc
imul
xor
aaa
mov
je
ret
outsl
addb
lcall
scas
pop
xorl
cmp
jecxz
inc
insl
mov
outsb
cwtl
dec
cmp
test
outsl
jb
xor
imul
inc
aad
shlb
ja
ret
pop
out
imul
insb
aad
sbb
push
jge
incl
ficoms
sbb
pop
loopne
push
mov
repnz
pop
dec
jmp
lret
xchg
mov
aas
mov
shll
insb
mov
js
add
mov
sti
cmp
and
in
sub
cmp
or
subb
push
jp
addl
xor
xchg
addr16
les
push
sbb
popf
inc
lock
cmp
mov
scas
mov
adc
aam
and
sub
inc
lret
stos
and
mov
xchg
push
daa
call
lods
cmp
fsubl
fisttpl
inc
iret
sbb
inc
bound
sub
hlt
popa
sub
test
out
mov
or
push
cli
push
das
mov
push
les
shll
xor
jg
jecxz
adc
push
sti
shll
aam
add
sti
push
xor
sbbl
jecxz
mov
jecxz
pop
mov
xchg
mov
pop
inc
fistps
je
repnz
dec
adc
add
inc
arpl
gs
in
mov
lret
aam
and
adc
sahf
jp
je
pusha
mov
int3
add
sbb
cmp
pop
cmp
pop
cltd
addr16
and
into
xor
je
loop
mov
mov
mov
addl
push
hlt
dec
cmpsb
loopne
sbb
pop
or
pop
add
jo
cli
xor
out
xchg
sar
lret
sti
les
pushl
mov
pusha
jp
and
add
leave
aaa
ret
xchg
mov
in
loop
int
enter
outsl
pop
add
push
xchg
xchg
or
lods
ret
fwait
popa
push
xchg
dec
sub
icebp
aad
scas
in
sbb
in
imul
xchg
notb
push
mov
imul
icebp
fwait
mov
ss
mov
and
add
cmpsl
xchg
ficoml
pop
sbb
gs
push
sbbl
sub
ljmp
lods
movsl
in
ret
xchg
jne
jb
repnz
movsl
fimull
dec
addb
das
insl
mov
dec
das
pop
test
scas
jle
rcrb
cmpsb
ret
incb
cmp
sbb
xchg
clc
dec
cs
inc
arpl
out
inc
insb
push
loopne
xor
aas
fildll
or
iret
cmp
push
dec
push
dec
xor
inc
add
rorl
dec
jl
dec
cld
mov
push
jle
aad
jmp
mov
fs
push
pop
mov
sbb
sbb
jle
pop
in
mov
mov
jmp
orl
sti
sbb
out
mov
subb
insl
or
fsts
mov
outsl
cld
push
mov
jp
adc
pop
push
mov
adc
aam
into
jg
mov
add
lcall
repnz
mov
sub
cmp
in
adc
bswap
push
pop
xchg
sbb
in
scas
adc
mov
push
dec
inc
test
aas
and
mov
das
mov
int
jae
sbb
mov
les
stos
cwtl
fcoml
cmpsl
mov
cmp
lahf
dec
xor
sbb
test
mov
adc
sbb
sub
leave
mov
pop
xor
int
loope
mov
cmp
shrb
dec
and
push
sbb
fcmovu
test
xchg
and
pop
jmp
add
pop
lds
jmp
test
imul
xchg
adc
fidivrl
leave
jbe
std
mov
out
sbb
fildl
mov
hlt
aad
ss
rorb
out
mov
jno
sbb
adc
pop
notl
xchg
imul
popf
pop
inc
inc
jne
movsb
lock
mov
out
mov
cmp
hlt
dec
outsl
outsl
das
into
addb
cmpsb
jge
xchg
add
or
jle
je
xchg
psrlq
das
mov
adc
fsubr
fmuls
mov
add
cltd
sbb
or
outsb
xor
push
adc
sbb
orl
sarb
and
bound
shll
ljmp
leave
sub
out
cmp
pop
cltd
lods
sub
bound
xor
xchg
ret
clc
sbb
or
add
pop
jge
and
mov
fmuls
push
jne
sbb
dec
stc
loopne
fnsave
arpl
in
adc
enter
mov
ljmp
sbb
xchg
les
mov
movsb
icebp
xchg
jecxz
and
push
mov
imul
xchg
jns
jg
negl
xor
loopne
add
mov
and
outsb
adc
push
add
xor
fs
adc
les
cmp
push
mov
jge
imul
mov
ret
and
adc
int3
data16
sahf
mov
jmp
rcrl
test
mov
xchg
xchg
push
pop
dec
lock
cs
push
das
andb
andl
or
mov
xor
lahf
push
cli
incb
jecxz
nop
subl
icebp
jmp
or
inc
shl
sahf
or
les
xchg
xor
inc
adc
inc
xor
fidivrl
xchg
mov
jb
sbb
iret
jae
add
add
pop
cmpsb
insb
push
sbb
rcl
fmull
movsl
fsubs
add
mov
fdivrs
mov
into
or
into
shl
push
push
sbb
lcall
push
cld
cmp
cli
cli
je
cmc
lahf
xchg
push
in
call
and
or
jnp
and
jnp
sbb
and
push
xchg
dec
jl
rolb
daa
je
mov
push
in
movsl
sbb
inc
adc
sbb
arpl
test
push
inc
mov
mov
inc
int
jbe
pop
sub
jo
mov
jno
sub
adc
movsb
iret
sbb
cmp
lea
dec
mov
imul
lret
mov
jbe
loope
nop
push
mov
push
push
aam
xchg
dec
mov
int
xor
fucomi
jge
pop
adc
lret
fdivs
cmp
sbb
inc
dec
push
pop
sbb
inc
pop
sub
sub
fs
and
push
push
xchg
or
mov
sarl
pop
jecxz
pop
mov
loope
sub
adc
ss
in
insb
sub
mov
jae
mov
test
mov
addr16
add
into
mov
mov
cs
xor
into
jno
lahf
add
or
mov
mov
cmpsb
or
sub
les
mov
fimull
jb
arpl
arpl
aaa
enter
fcmovnb
scas
stos
cmp
inc
inc
mulb
xchg
add
mov
inc
jmp
push
push
lret
aaa
push
sbb
rolb
inc
stc
pop
jle
cmp
push
sub
xchg
adc
add
mov
push
ss
ja
jmp
cli
jno
adc
inc
mov
mov
stos
inc
out
repnz
test
dec
mov
dec
pushf
test
pop
mov
dec
das
lock
daa
push
in
dec
stos
xchg
clc
in
and
mov
stos
adc
bound
gs
test
jg
cmp
add
or
adc
cld
das
ss
out
lcall
mov
mov
pop
push
lds
xchg
icebp
out
push
sbb
push
sbb
sbb
fidivrs
jge
cmp
jg
aad
ss
les
push
clc
sub
cmpsb
cld
ja
int3
insb
out
ljmp
adc
xor
xlat
jbe
push
sar
aam
pusha
lock
sub
xchg
xchg
jg
sarl
ljmp
and
xor
jno
rcrl
lret
scas
add
pop
in
sub
mov
or
out
add
fmulp
jp
enter
mov
sub
sbb
and
xchg
fidivrs
and
out
sbb
xor
mov
cwtl
xor
cltd
push
push
adc
rcll
inc
lret
xchg
jg
mov
xlat
sar
daa
mov
mov
mov
mov
fld
in
enter
icebp
cmc
mov
mov
fmull
hlt
xlat
hlt
push
pop
mov
cwtl
or
adc
cltd
mov
cwtl
scas
cwtl
sub
or
pop
fimuls
aad
cmp
sahf
pushf
mov
ret
mov
xchg
pop
cmp
mov
lods
push
mov
in
mov
loopne
loop
leave
repnz
sbb
in
lret
cs
in
lret
push
andl
sub
popf
or
jp
xchg
add
insl
fistps
dec
dec
adc
mov
icebp
nop
mov
mov
lods
movsb
out
ss
mov
in
in
dec
scas
aam
fs
lahf
testl
nop
inc
data16
adc
scas
stc
imul
lods
mov
xor
sbb
cld
outsl
cmc
cmpsb
data16
movsb
stos
les
mov
out
pop
adc
jb
add
add
xor
adc
jns
call
loopne
or
lahf
jne
jle
rcr
lret
xchg
insb
mul
sbb
test
xlat
movsb
push
shrl
in
mov
sbb
repnz
fidivrl
stos
lods
outsl
sub
subl
push
sar
sub
push
sub
sub
mov
aam
das
push
mov
xchg
xor
lahf
shlb
push
dec
jmp
cwtl
cld
es
ds
push
xor
xor
sbb
imul
cmp
cli
test
sbb
bound
inc
shll
test
jnp
int3
inc
out
mulb
jne
faddl
xor
mov
mov
test
shlb
lds
into
adc
int
xor
roll
fiaddl
mov
sbb
dec
scas
xor
xchg
out
test
shll
rorb
mov
xor
rcrb
mov
insl
jle
mov
nop
inc
mov
out
aaa
fsubl
scas
stc
jne
adc
loop
outsb
adc
jae,pt
fcompl
jmp
jmp
mov
jp
sub
adc
adc
int3
xor
sbb
cmp
mov
daa
mov
add
jo
bound
arpl
ret
sbb
cmpsl
cmpb
sarb
mov
fdivrs
jno
pop
pop
mov
sahf
ds
rcr
push
sbb
and
and
in
popa
xchg
mov
rolb
inc
mov
adc
jp
xchg
push
ret
sahf
or
ret
popa
pop
mov
jmp
lock
mov
push
into
sub
or
adc
or
idivb
std
jmp
xchg
aam
testb
in
jno
test
push
push
mov
aad
bound
fnstenv
xchg
fcoms
push
popf
mov
popa
jmp
push
mov
mov
push
lcall
mov
mov
pop
dec
imul
frstor
ror
or
jo
jle
nop
iret
pop
inc
lahf
pushf
sub
push
push
out
scas
repnz
cmpsl
sbb
in
cmpsl
and
push
jl
lret
cwtl
sbb
aas
adc
or
mov
push
lret
ds
stos
cld
pushf
add
pop
pop
push
and
fldenv
cld
gs
jb
cmp
or
push
and
push
ja
sahf
or
movsb
imul
pop
cli
out
inc
dec
xchg
inc
lcall
dec
les
les
xchg
inc
pop
cmp
movsb
push
out
adcb
dec
fwait
mov
jmp
out
lds
mov
clc
push
jge
test
pop
arpl
pop
pop
mov
repz
ret
call
fisubrs
cmp
outsb
fistl
dec
fcmovb
add
cli
fbld
xchg
cltd
adc
jno
sub
adc
enter
add
or
xchg
push
pushf
call
cmp
jmp
roll
mov
fldcw
lds
mov
les
mov
cmp
add
aaa
lcall
push
int
es
adc
decl
xchg
sbb
dec
cmp
nop
mov
sbb
add
cltd
inc
stc
jge
orl
pop
pop
out
call
mov
sahf
or
sbb
out
sub
xlat
sahf
loope
stos
mov
in
add
cmp
mov
sub
adc
and
adc
mov
iret
pop
jno
stos
push
adc
mov
cmpsb
mov
jmp
pushf
xlat
push
cmp
cmpsb
inc
aam
inc
loope
or
and
push
pop
mov
add
shr
push
jg
das
icebp
inc
add
iret
sahf
push
inc
pop
divb
scas
dec
int
ljmp
daa
sub
icebp
in
cmpsb
push
and
scas
dec
mov
cltd
push
xor
je
sub
sbb
pop
and
mov
xlat
inc
dec
sbb
insb
xor
sub
jp
jns
adc
imul
jge
out
ret
inc
pop
lcall
jecxz
mov
bound
jnp
jns
pop
adc
dec
push
pop
or
daa
add
jo
test
mov
outsb
in
ljmp
lret
mov
popf
outsl
mov
out
les
aas
or
cltd
rcll
or
add
shrl
mov
lods
outsb
aaa
dec
inc
aam
enter
stos
lds
rorb
nop
push
ret
clc
jge
mov
iret
mov
mov
test
lcall
jmp
xchg
aas
and
orl
aas
in
test
in
sub
and
insb
push
out
outsb
imul
pop
clc
xchg
bound
xchg
inc
push
xor
push
icebp
and
cmc
js
dec
jnp
test
or
sbb
ss
mov
cmovs
jbe
and
shl
in
andl
mov
ja
jge
dec
sti
popf
fsubl
jo
sub
mov
mov
mov
mov
pop
mov
pop
jno
loope
or
jg
das
sbb
add
cmp
test
mov
in
je
pop
sub
shl
arpl
sub
push
sahf
mov
jne
testl
movsb
adc
xor
dec
pop
arpl
dec
aad
sbb
popa
ja
dec
cmp
mov
xchg
mov
jge
fisubl
add
dec
not
dec
lahf
or
pop
adc
cmp
push
cmp
popl
xor
add
inc
sbb
push
repnz
mov
lcall
lret
inc
int
aam
inc
mov
lret
pusha
and
mov
imul
push
push
dec
jle
aaa
cmpsb
sbb
loopne
xchg
call
or
mov
and
add
mov
push
andb
dec
subl
mov
scas
jp
xor
mov
adc
mov
test
pop
iret
sub
int
mov
jge
sahf
and
out
xchg
cmp
gs
and
lods
inc
or
imul
jle
fwait
dec
jg
sub
push
cmpsb
sahf
in
sbb
cmp
divb
mov
sub
xor
inc
dec
adc
out
ret
jmp
fidivs
push
in
and
iret
je
sub
add
inc
xchg
arpl
xlat
mov
in
jge
out
jbe
data16
mov
test
and
pop
aam
in
mov
sahf
fdivl
jae
mov
adc
cltd
xchg
mov
cmpsb
setae
xorl
push
adc
or
xchg
insb
jne
jecxz
in
dec
push
mov
mov
fadds
lea
sti
test
inc
test
or
dec
movsl
outsb
mov
aam
ja
fwait
xor
jo
pop
xchg
or
and
cmp
adc
andb
leave
js
aam
ljmp
mov
dec
ret
in
loop
pop
inc
mov
inc
cld
mov
add
mov
les
mov
nop
mov
xor
cmp
fsubr
scas
cmp
mov
daa
outsl
dec
hlt
mov
stc
in
push
xchg
pushl
lods
cmc
loope
inc
scas
jmp
or
mov
sbb
nop
and
sbb
xchg
nop
hlt
mov
xor
fldl
add
lcall
int3
test
cmc
sub
adc
bound
aam
les
xor
aas
mov
lret
pop
cmp
fdivs
cmp
rcll
cltd
add
jnp
das
loop
fstpl
loop
cmp
test
push
push
inc
out
xchg
sub
imul
mov
int3
pop
rol
fisubl
jmp
and
xchg
lcall
pop
into
or
jle
xchg
out
cltd
cld
nop
repz
aaa
subl
and
push
add
loopne
sub
cld
sub
insb
push
in
out
pop
jecxz
mov
sbb
int3
mov
roll
jne
fs
lods
mov
inc
sbb
gs
stos
dec
sahf
mov
les
pop
add
lods
adc
inc
sbb
cmp
xor
ds
les
nop
adc
mov
sahf
arpl
cmp
mov
mov
lock
jge
xlat
adc
jnp
fldl
add
hlt
sub
mov
ret
push
mov
leave
xchg
adc
loop
and
xchg
inc
push
sub
xchg
scas
or
decl
aaa
icebp
add
xchg
icebp
or
aaa
mov
dec
js
mov
lea
cld
in
lock
dec
cwtl
cmp
pop
stc
mov
in
lods
jl
pop
pusha
xlat
pusha
pop
pop
jbe
or
fnstsw
loope
scas
sub
clc
cmp
test
mov
mov
ret
inc
mov
adc
imul
sahf
inc
add
add
push
bnd
cmp
sbb
jge
xchg
ljmp
push
fs
cwtl
incl
pop
daa
mov
add
hlt
stos
test
push
je
into
cmp
mov
movsb
jmp
popa
ja
shll
cmp
xlat
sbb
roll
sub
mov
insb
or
jne
ret
sbb
enter
add
fists
xchg
sbb
dec
enter
mov
push
fbld
cmpsl
pushf
das
xchg
out
into
adc
pop
rcl
ror
and
in
xor
xchg
mov
bound
mov
iret
xchg
inc
aaa
nop
mov
mov
cmp
or
mulb
xchg
mov
jno
xor
xchg
push
das
xor
adc
jbe
sub
add
xchg
sti
int3
lods
lea
out
out
jecxz
stc
mov
popa
dec
stc
jl
in
loopne
loop
inc
push
call
js
add
popf
out
push
stos
jbe
pusha
out
pusha
scas
mov
xor
pop
aad
bound
dec
das
sbb
insb
sbb
xchg
push
lret
xchg
aaa
cs
pop
inc
jae
ror
loop
inc
xor
mov
and
pop
scas
das
insl
call
fdivrs
cmp
jns
les
inc
sub
sbb
ret
shlb
shlb
les
dec
jb
pop
inc
add
or
aad
pop
cld
sub
sbbb
xor
mov
push
sbb
or
push
sbb
stc
mov
jno
fisubl
xor
ja
cmc
jp
fwait
lcall
in
add
pop
xchg
cmp
cs
push
in
mov
mov
or
and
loope
mov
ss
fistpl
or
cmp
popa
popl
out
out
jb
push
scas
vpcmpeqb
or
cmp
test
push
cmpsb
dec
mov
mov
pop
loope
pushf
xor
sub
xorl
into
mov
xchg
adc
mov
test
xchg
in
mov
push
pop
sub
les
fisttps
cmp
jnp
outsl
xor
xchg
push
cmp
dec
imul
and
xchg
testb
push
xor
imul
fdivs
jns
test
popa
lock
push
adc
xchg
lret
sub
jae
into
lods
sbb
and
mov
push
cmp
in
je
add
aam
test
loope
clc
push
push
pushf
mov
mov
sub
sub
or
call
mov
aad
loopne
push
sbb
mov
pop
jns
nop
inc
and
inc
push
mov
aad
mov
data16
fs
imul
cmp
stos
movsb
fsts
add
mov
push
push
pop
shll
bound
fwait
aam
fldl
fmuls
popf
popa
call
xchg
jmp
std
sbb
dec
fistpll
out
sub
pop
dec
mov
cmp
mov
lahf
pop
add
push
mov
scas
popf
cmp
cmc
ljmp
aas
jp
rcll
nop
outsb
lods
out
sarl
inc
mov
inc
cmp
cwtl
mov
adc
in
fildl
adc
inc
xlat
cmp
orl
sbbb
pusha
and
in
dec
fnstenv
mov
or
out
sahf
jns
fiadds
mov
xor
int
sti
push
push
movsl
adc
insb
std
or
sub
ret
dec
and
and
jge
fsubl
push
ret
je
test
mov
dec
adc
mov
ret
push
in
ss
js
xchg
mov
std
lahf
ljmp
adc
sbb
clc
roll
cmp
lahf
xor
add
scas
xchg
lcall
mov
out
mov
aas
mov
inc
xor
daa
mov
and
negl
cli
arpl
dec
jecxz
cmp
icebp
xor
xor
outsl
xchg
push
inc
fistpll
mov
xchg
orl
sarb
ds
xchg
sub
sbb
out
dec
fisubs
stos
push
dec
orl
jo
jp
cmp
scas
mov
stc
xchg
dec
jbe
sarb
dec
or
js
mov
insb
repnz
adc
mov
jns
lret
xor
aaa
fstps
xchg
sahf
scas
jl
push
lock
dec
dec
fs
inc
adcl
inc
js
aad
popf
jge
rcll
divb
mov
sahf
je
add
jg
pop
xlat
xchg
mull
stos
mov
rolb
adc
inc
fildl
test
jb
sub
imul
dec
jmp
addr16
arpl
ljmp
roll
ret
xor
cmp
push
iret
repnz
stos
jp
jmp
aaa
cmp
scas
dec
dec
add
mov
pop
test
stos
in
call
mov
ret
push
scas
stc
shll
sbb
enter
fldcw
out
add
push
out
mov
out
pop
cli
bnd
mov
jne
jbe
jns
push
pusha
mov
ds
pop
xchg
outsb
popa
mov
shll
mov
lods
xchg
mov
lods
inc
int
pushf
or
sbb
ja
lret
inc
inc
jp
js
add
hlt
inc
out
push
fwait
pop
inc
sub
push
jae
mov
ret
jnp
dec
pop
pop
jle
clc
adc
lock
xchg
lcall
mov
shrb
orl
xchg
mov
pop
jecxz
fprem
dec
mov
cmc
es
sub
loop
mov
int
add
adc
dec
add
mov
xor
popl
xchg
jb
xchg
mov
dec
dec
xchg
scas
outsb
popa
cmc
aad
dec
or
jge
insl
pop
inc
or
jle
data16
notb
mov
push
jno
cltd
mov
inc
in
icebp
sahf
clc
xchg
lahf
push
iret
mov
lcall
add
outsb
pop
fwait
in
push
mov
in
test
lret
ljmp
sbb
pop
movsb
cmp
xchg
or
xchg
popa
cmpsl
mov
xlat
in
lret
loopne
enter
add
pop
enter
std
or
push
mov
adc
rorl
inc
mov
push
lods
scas
inc
mov
nop
xlat
sahf
shr
mov
imul
out
xchg
repz
cmc
and
in
jbe
lds
sbb
inc
xor
jmp
xchg
adc
jno
xor
out
mov
ret
dec
adcb
movsb
std
popa
dec
mov
out
xchg
dec
sahf
and
xchg
lods
daa
fldpi
dec
sub
mov
aam
imul
add
xchg
test
lret
repnz
cmpsl
dec
jp
cmp
js
and
lds
iret
sahf
sti
outsb
leave
insb
lret
inc
cmp
add
fstpt
push
mov
lahf
test
shl
pop
aam
aaa
aas
add
push
mov
das
inc
xchg
pop
jbe
sub
or
xor
dec
adc
fists
addr16
shr
mov
push
movl
in
clc
bound
aad
rclb
ret
adc
jno
lahf
jmp
addr16
loope
mov
repz
enter
imul
movsb
or
sbb
in
mov
push
rorl
xchg
mov
in
nop
ss
jmp
es
cmpsb
push
repnz
cmc
xchg
scas
loopne
inc
addr16
pop
inc
sbb
lret
xchg
adc
cmp
pop
adc
dec
shrb
lahf
loop
mov
xor
jno
pop
lcall
call
adc
and
hlt
add
pop
add
push
dec
aad
push
fwait
ss
out
es
das
jmp
jns
add
inc
fstpt
inc
dec
push
in
sbb
jl
or
insb
pop
push
rcl
sub
mov
out
xchg
inc
push
push
dec
xchg
aas
lods
std
decb
in
test
dec
push
loop
repnz
add
push
out
mulb
sub
mov
mov
mov
pusha
mov
jne
and
sbb
mov
pop
insl
mov
les
aaa
and
xchg
sbb
cmp
gs
dec
das
stos
xchg
std
stos
fs
add
int
and
stos
bound
add
out
mov
popf
fsubr
and
sub
pop
pop
ret
fdivrs
cltd
subb
pop
and
outsb
ret
push
les
call
outsl
pop
mov
bound
sbb
loop
addr16
mov
jno
insl
mov
push
dec
lds
pushf
in
cs
pushf
and
sbb
mov
ds
mov
add
in
mov
adc
and
push
inc
in
xor
xchg
inc
or
sbb
scas
sti
push
outsl
icebp
mov
and
push
cld
jmp
pop
jl
inc
push
jbe
inc
rcrl
or
or
jle
push
sbb
outsb
sub
or
pop
sahf
lahf
ja
mov
sub
outsb
sbb
or
mov
adc
call
pop
dec
repz
mov
sbb
cmp
mov
pop
jns
fisttps
pop
shr
stc
dec
ja
ret
adcl
or
fcoml
out
fmul
cld
lea
in
out
cwtl
repnz
movsl
pushf
fadds
movsb
inc
jb
and
xchg
les
pop
adc
sub
iret
ss
popa
jmp
data16
adc
add
stos
lea
jno
xchg
movsb
mov
enter
jae
jp
repz
adc
mov
das
ss
into
sub
rolb
dec
rol
and
jo
jmp
std
test
dec
mov
mov
dec
pop
or
mov
ret
inc
test
sahf
test
pop
adc
mov
mov
jo
test
aad
push
icebp
pushf
jns
xchg
mov
test
inc
sbb
mov
inc
lods
fisubrs
add
inc
aas
pop
xchg
ds
jno
add
jne,pt
or
ds
pop
adcl
stc
pop
pop
popf
or
negl
loopne
loopne
mov
subl
xor
sbb
push
mov
pop
mov
mov
mov
xlat
repz
ljmp
dec
mov
scas
jns
lret
mov
cmp
sbb
push
add
xor
jne
stos
test
fildl
fadd
jbe
and
data16
repz
xlat
into
stos
mov
jb
test
dec
dec
je
or
out
pop
ja
adc
mov
pop
fcomps
push
lret
and
or
push
lds
call
jne
mov
out
xchg
mov
out
enter
jmp
sub
test
inc
pop
cli
xchg
ds
xchg
cmp
mov
rolb
add
push
push
outsl
insl
mov
and
jns
jb
in
mov
gs
andb
iret
xchg
imul
sahf
fcoms
mov
jecxz
aad
cmp
lcall
mov
add
and
int
xchg
in
jg
aaa
scas
dec
dec
pop
mov
mov
std
lret
add
sbb
cld
sub
push
push
jmp
and
hlt
jp
dec
jmp
enter
sahf
adc
out
unpcklps
xlat
and
das
cmp
enter
xor
push
push
mov
int
jns
jge
inc
dec
adcb
mov
rorl
cwtl
xchg
mov
dec
adc
xor
out
jmp
cmp
das
fmull
cmp
jns
pusha
fcmovnbe
xchg
test
push
push
xchg
cltd
mov
ret
cli
pop
fsubrl
or
aaa
stos
inc
pop
pop
jecxz
mov
popf
lods
data16
stos
les
jbe
add
ss
jle
iret
sub
fs
int3
or
sbb
repz
xchg
movsb
mov
in
fldpi
sahf
stc
outsl
insb
pop
outsb
sbb
inc
imul
in
fiadds
hlt
jns
inc
or
and
inc
mov
or
clc
jecxz
ljmp
test
fstpl
mov
test
ss
xchg
xchg
js
lahf
xor
outsl
xchg
jmp
add
xchg
and
popf
jmp
sbb
arpl
stos
push
cs
cmpsl
cmp
mov
jbe
mov
test
mov
sbb
loopne
inc
int
arpl
pushf
xlat
out
adc
ja
push
aas
jae
push
xor
js
iret
enter
pop
test
jns
lods
mov
cli
lds
cli
mull
xor
popa
mov
adc
dec
inc
push
lcall
pushf
sti
add
das
dec
inc
xor
fsubl
imul
insl
loopne
push
and
adc
mov
ljmp
inc
inc
fs
clc
jp
inc
pop
mov
sbb
mov
xor
jne,pn
push
mul
push
mov
cmp
mov
gs
into
std
nop
mov
jb
cli
test
arpl
nop
fsub
xchg
pop
xchg
push
outsl
xchg
push
pop
jge
int3
add
dec
outsb
sub
mov
sbb
jp
add
mov
and
mov
mov
fimull
adc
inc
ss
mov
cmp
adc
jmp
pusha
jns
je
jae
cmp
inc
or
sti
add
orl
cmp
out
pop
mov
adc
sbb
and
xchg
cltd
xchg
in
push
push
jo
jmp
mov
or
cmp
in
aad
and
and
push
outsb
adc
ficompl
les
test
iret
in
frndint
adc
add
push
xor
mov
mov
ret
xchg
jbe
into
insl
push
xchg
arpl
sti
mov
add
aas
sbb
cmp
leave
test
mov
arpl
cs
sub
jl
stos
lock
fdiv
inc
insl
cwtl
push
rorl
add
add
push
out
mov
and
sbb
call
adc
lret
movsl
push
mov
pop
nop
mov
sbb
aaa
sub
sbbl
adc
cltd
xchg
cmp
push
fimuls
mov
ljmp
mov
hlt
mov
inc
call
scas
pushf
aaa
jnp
bound
adc
pop
or
es
fcoml
out
mov
jle
xor
test
ret
jl
loope
lock
fstp
xchg
test
lock
mov
xchg
cmp
lcall
aad
popa
or
scas
mov
xchg
jne
dec
push
push
sub
mov
imul
jp
loope
lcall
cmp
push
lock
aad
dec
test
insl
sub
mov
mov
jmp
dec
xchg
xor
push
pop
les
sarl
and
scas
push
je
out
pop
aad
scas
das
push
in
pop
xor
push
je
sbb
loope
jbe
lds
sbb
cwtl
loop
adc
cmpsb
mov
pusha
mov
push
outsl
xor
out
stos
inc
lcall
outsb
add
and
jnp
out
push
and
sbb
int3
and
repnz
inc
shlb
pop
into
dec
jg
jg
add
in
cmp
add
into
cwtl
rorl
repz
mov
out
sbb
xchg
add
mov
fadd
shl
hlt
incl
pop
in
movsb
xlat
jl
lahf
xor
in
and
sbb
ret
scas
jle
mov
push
dec
pusha
cmpsl
mov
jae
or
ljmp
inc
lods
lods
es
pushf
scas
fadd
sti
lods
sub
loopne
mov
dec
lods
gs
or
lock
arpl
push
fwait
in
cmp
xor
inc
in
out
enter
dec
inc
andl
sub
mov
mov
mov
mov
cmp
mov
cmc
inc
mov
cmpsl
dec
popf
inc
ja
xchg
jnp
cmp
in
xor
dec
popa
dec
ss
or
mov
rcrl
mov
xchg
cli
lret
mov
or
and
mov
lock
cltd
sub
xlat
xlat
lea
outsl
loopne
jne
xor
daa
out
inc
cs
sbbb
jmp
arpl
gs
je
div
dec
mov
mulb
les
fnstcw
add
aad
xor
mov
inc
fld
cwtl
add
mov
aad
aas
into
jg
in
fldz
rolb
jmp
sbb
loope
and
add
jmp
dec
mov
adc
mov
and
xor
push
xor
sbb
in
lcall
push
dec
inc
sbb
mov
ror
and
pop
stc
lcall
iret
cld
test
push
xchg
adc
sbb
clc
sbb
jne
cmc
xlat
aam
iret
pushf
sub
or
dec
cltd
fldt
add
mov
mov
sbb
sbb
jno
enter
mov
adc
lahf
push
mov
pop
push
xchg
add
sbb
inc
je
inc
or
xor
cld
out
mov
loop
sub
stc
sysenter
test
push
das
mov
add
add
push
jecxz
push
jnp
and
adc
pop
fcmovu
dec
call
cld
push
push
push
or
mov
ljmp
movsl
cmc
xchg
xor
js
mov
add
dec
cmpsl
mov
cmp
mov
lods
ror
jge
and
mov
fnstenv
sbbl
popl
minps
arpl
or
fstpt
jne
or
in
push
sub
xorb
iret
mull
test
jmp
lahf
inc
xlat
push
push
pop
adc
loope
adc
push
cmp
mov
pop
arpl
xor
fwait
lods
sbb
inc
orl
les
out
push
dec
xchg
outsl
loop
add
xlat
ret
sbb
jge
test
in
sbb
jmp
sub
popf
push
fmuls
repnz
jbe
xor
popa
rcrl
ficompl
xchg
fstpt
cli
mov
inc
and
pop
movsl
lcall
push
filds
loope
jbe
fcoml
arpl
and
mov
stos
aad
cmpsb
mov
add
adc
sbb
cmpsl
xor
add
cmp
mov
mov
lods
mov
push
cmp
mov
adc
jnp
pusha
sbb
cwtl
popf
add
mov
add
pop
testl
std
mov
mov
sbb
ret
pop
or
pop
lods
cmp
je
nop
out
jne
dec
add
cwtl
mov
or
mov
cmpsb
pop
cmp
inc
push
popa
push
rcl
dec
push
fld
mov
mov
jl
lahf
nop
mov
jae
rorl
jmp
cmpsb
adc
dec
repz
fwait
or
ss
jno
push
add
out
das
movsl
mov
cmp
outsb
pop
jnp
mulb
push
push
clc
dec
test
add
inc
ds
stos
lock
dec
and
stos
xchg
data16
testb
pusha
sub
mov
cld
mov
popf
ret
mov
sbb
mov
lock
notb
jb
and
mov
test
and
add
push
insb
cli
and
or
out
sub
cli
push
out
leave
fcmovnbe
fldt
adc
dec
cli
and
sti
and
mov
add
push
inc
dec
mov
pop
hlt
push
into
arpl
movsl
pushl
and
sbb
jl
and
or
push
je
negl
or
scas
insl
outsl
jp
or
lret
mov
mov
sub
add
or
fwait
push
xchg
rcrb
fimull
fs
test
clc
cmp
and
add
in
cmp
jmp
inc
bswap
sbb
xor
cmc
movsl
mov
mov
data16
ds
jns
adc
xor
cld
imul
sti
and
push
out
inc
jg
xor
out
sub
adc
cmpsl
pushf
frndint
gs
cli
lret
and
test
pop
in
push
out
popa
cmp
in
dec
jmp
stos
sub
sbb
rorl
aas
outsb
cmp
inc
pop
sbb
sub
sub
hlt
insl
mov
mov
ja
out
scas
lahf
cmp
jno
mov
jnp
arpl
test
mov
loop
jno
or
adc
inc
xchg
sub
jl
mov
sbb
add
int
adc
mov
subl
lock
jbe
jp
loopne
cmp
mov
rcrl
jg
outsb
shr
clc
in
lods
fcompl
mov
aaa
pop
cmp
aam
cmp
mov
hlt
pusha
mov
bound
leave
add
leave
push
ds
push
cmp
std
fists
mov
pop
add
hlt
pop
loop
fwait
lea
lods
pop
or
push
xchg
cmp
loopne
inc
or
cs
mov
sub
or
jmp
pop
mov
lds
pop
rcl
cmp
inc
std
cwtl
mov
movsl
push
or
and
adc
loop
out
aaa
sahf
xchg
subb
orb
fwait
addr16
pop
pop
insb
xor
mov
pop
mov
clc
int3
hlt
mov
fsubp
in
repnz
fldz
jge
pop
adc
mov
outsb
push
mov
arpl
xor
jbe
mov
cli
inc
mov
or
clc
adc
mov
cmp
call
adc
sbb
mov
mov
xlat
mov
cmp
push
dec
mov
jns
push
in
nop
outsb
or
mov
stos
or
pop
test
dec
je
sarl
jns
cmp
fstl
jnp
es
lods
inc
adc
push
lods
int
mov
daa
or
xor
add
mov
xor
pop
push
adc
push
adc
mov
mov
shrb
xor
bound
sub
sub
cld
jns
push
mov
nop
incl
jne
jl
filds
adc
lret
push
mov
and
sbb
rclb
inc
sbb
mov
or
cmp
cmp
pop
arpl
jle
ficoml
cli
mov
loop
in
push
cmc
xor
scas
cmp
mov
xchg
adc
movsb
and
imul
roll
movb
add
mov
fnstsw
js
or
shrb
jb
dec
mov
test
jp
lock
pop
push
mov
gs
jmp
sbb
mov
mov
mov
sbb
fimuls
pop
push
pushf
stos
lods
dec
sub
outsl
dec
outsl
stos
push
ds
div
xchg
add
xor
mov
js
lods
cmp
cmp
jnp
inc
or
mov
ret
or
je
push
jbe
push
mov
inc
fidivl
pusha
jmp
dec
sbb
testl
outsl
ret
pop
insb
repz
sbb
out
imul
iret
mov
adc
jns
inc
pusha
outsl
fildll
jge
imulb
imul
xor
cld
mov
fisttps
pop
mov
jge
add
fcomps
addr16
loope
jb
fstpl
std
fsts
ret
xor
pop
cmp
jbe
fsub
jmp
push
pop
dec
mov
sub
xchg
pop
add
call
mov
loop
inc
jle
es
or
loope
sar
inc
ret
dec
jmp
inc
cmpsb
push
movsb
xor
dec
pop
pop
add
iret
ret
es
pop
sub
divb
repnz
dec
outsl
xor
in
mov
and
shlb
add
add
scas
outsb
cmp
out
and
sbb
push
je
adc
sub
fadds
ret
add
mov
or
push
mov
mov
js
idivl
in
insl
imul
int3
ljmp
add
mov
icebp
inc
mov
gs
pop
je
insb
jnp
jl
stos
xchg
jnp
add
lcall
je
dec
inc
aam
xchg
rolb
fcomps
and
enter
out
ficompl
push
cmc
jns
in
pop
jmp
sub
adc
adc
dec
sbb
in
lds
push
xchg
fs
inc
je
push
sbb
or
and
dec
repnz
lcall
movsl
icebp
popa
ds
in
push
or
xchg
outsl
pop
pop
xchg
mov
add
push
or
push
fmull
push
mov
jmp
sarb
mov
push
and
outsb
mov
mov
mov
sub
ss
int3
lcall
push
jmp
sub
dec
or
jle
in
in
or
lock
xchg
imul
scas
pushf
test
dec
pop
push
hlt
in
outsb
xchg
js
sub
enter
int3
subl
int
subb
pop
cwtl
or
xlat
adc
loopne
xchg
clc
scas
or
andb
add
push
aad
or
pusha
inc
lds
lcall
cmp
dec
pushf
sub
sbb
inc
sbb
fnstenv
pusha
dec
repz
jmp
addb
mov
imul
sbb
fbld
lea
jecxz
test
sbb
xchg
gs
pop
mov
pop
pop
mov
mov
rclb
dec
pop
aaa
jmp
pop
xchg
sub
pushf
lahf
cmp
xchg
jmp
xlat
xchg
pop
push
or
icebp
jmp
adc
scas
les
insb
movsb
retw
sbb
pop
jp
pop
fiadds
outsb
pop
rcll
lret
bndstx
das
jmp
pop
mov
sub
mov
dec
popf
pop
jg
push
or
mov
adc
fists
gs
sbb
and
test
ss
pop
dec
mov
add
mov
repz
cmp
das
cmp
inc
xchg
mov
pushl
jp
mov
popf
sbb
pop
push
inc
outsb
or
test
imul
dec
jne
cs
test
sbb
add
addr16
xchg
scas
mov
sub
cmp
imul
outsl
orl
imul
push
and
rcrb
inc
lock
adc
test
in
mov
adc
mov
jns
ljmpw
mov
dec
xor
add
pop
inc
bt
xchg
scas
inc
rorl
out
ds
push
or
data16
out
mov
fsubrp
js
ss
jne
test
xor
fdivs
lahf
jecxz
cmp
inc
lds
es
adc
mov
xchg
movsb
add
sbb
pop
push
jnp
mov
stos
popf
and
popf
hlt
ljmp
orl
adc
std
mov
rcl
add
fdiv
in
cltd
pop
xchg
sbb
jbe
rcl
xor
js
in
xchg
sti
fimull
sub
movsl
jle
sarb
movb
in
xor
push
adcl
mov
int3
pop
das
fisubrs
dec
sub
add
sti
scas
cli
pusha
pop
adc
inc
mov
dec
ds
test
aam
idivb
xchg
push
add
loope
imul
aas
jbe
xchg
jle
aas
mov
pushf
sbb
mov
inc
push
pusha
lock
les
jg
and
inc
rcr
dec
xchg
ljmp
dec
push
lret
sub
ret
lea
es
rclb
mov
cmp
pop
mov
inc
xchg
mov
in
sbb
and
cwtl
sub
or
or
or
aaa
in
repnz
push
orl
aas
jl
adc
xchg
loope
or
pushf
pop
lods
sbb
jo
repz
xor
adcl
pop
adc
and
decl
sub
aam
push
cmp
jb
cli
adc
mov
movsb
rorl
ffree
stos
out
xchg
adc
add
sub
fnstcw
aam
pop
mov
movsb
shrl
testl
and
imull
inc
loope
popf
fists
mov
inc
lcall
insl
xor
xlat
iret
dec
lahf
fdivrs
jnp
mov
scas
js
mov
rcr
pop
mov
jne
push
stos
xchg
mov
sub
fcompl
aad
or
xchg
fsubl
add
jmp
divb
and
fs
lret
ds
into
test
jns
dec
popa
roll
jne
mov
ret
jmp
push
ds
adc
rcrl
jo
cmp
cmp
xlat
into
fcmovnbe
hlt
xchg
ss
lret
jbe
push
movsl
fs
cmovae
sbb
cmpsl
sbb
push
mov
pop
sbb
dec
iret
dec
lcall
mov
mov
push
cld
icebp
iret
jge
cmp
push
mov
dec
scas
cmp
jae
push
into
data16
or
cmp
and
pushfw
jb
jb
in
mov
xor
jl
rcl
shrl
dec
mov
pop
dec
pop
xchg
call
stc
inc
insb
inc
fisubrs
roll
out
jecxz
xor
push
mov
push
lcall
clc
push
daa
cmp
adc
mov
pop
and
and
inc
xor
xor
lods
into
frstor
or
jns
dec
push
into
cld
cmp
cs
mov
cmp
xchg
ret
dec
or
sbb
fidivrl
sahf
ja
push
lret
in
filds
jbe
ja
sbb
xchg
sar
sub
mov
stos
xor
mov
pop
mov
scas
mov
popf
ret
mov
addr16
addr16
jns
out
mov
and
scas
test
xchg
in
arpl
jo
fcompl
push
jae
jno
and
pushf
add
int
cmp
test
bound
fmulp
push
inc
cmp
xor
scas
aad
loope
pop
add
repnz
ljmp
das
inc
jle
mov
xlat
and
test
xchg
inc
shrb
ljmp
out
rcrl
cwtl
lret
stos
add
mov
js
cltd
jge
movb
scas
fdivrl
pop
cmc
add
sub
and
or
xor
xor
iret
mov
dec
aas
mov
cmp
add
imul
xchg
cmpsb
cwtl
mov
mov
cmp
cmp
dec
push
pop
jno
rolb
cmp
mov
dec
cld
lret
ficomps
pop
mov
lahf
mov
inc
test
adc
lods
cli
inc
mov
out
xchg
xchg
cmc
sub
jle
outsb
inc
and
adc
sbb
das
das
sti
adc
push
shrb
out
xor
popl
lods
push
ljmp
aad
mov
mov
inc
rorb
push
lahf
sti
inc
iret
adc
ja
dec
fidivrs
sub
test
insl
push
lods
jmp
sbb
addr16
test
lea
stc
cwtl
fsub
insl
mov
xchg
pusha
scas
fdivrs
and
pushf
or
jb
and
xchg
sub
mov
add
movsb
mov
in
fnstsw
push
dec
cmp
mov
leave
sub
lock
adc
sub
cmp
nop
mov
sbb
push
sub
lahf
loope
inc
or
insl
sbb
cs
and
mov
inc
jno
pusha
jg
lret
test
icebp
push
lcall
stc
sub
xor
popf
add
inc
push
jmp
int3
sbb
out
rorl
inc
in
dec
addb
jnp
xchg
ljmp
or
addr16
fldenv
push
pop
cmpsb
scas
test
mov
xchg
iret
push
js
cmp
cmpsb
cltd
inc
mov
insb
push
inc
inc
stos
rcll
loop
int3
push
subb
pop
xchg
adc
jnp
mov
clc
xor
mov
shlb
inc
into
arpl
cltd
pop
sbb
nop
mov
cmpl
jb
xchg
fistps
add
pop
test
push
jne
daa
movsl
in
pushf
pop
inc
mov
lahf
xchg
rorl
outsl
jg
xor
pop
add
fldl
inc
push
mov
mov
fwait
pop
arpl
push
mov
ss
cmp
ja
or
jo
in
rcrl
adc
sahf
cli
xchg
lret
iret
adc
stc
or
cwtl
pop
inc
jae
cmp
xchg
mov
mov
inc
ja
mov
lods
push
dec
ds
ds
jmp
pop
sub
aas
arpl
cwtl
xchg
adc
jecxz
scas
sbb
lret
sub
inc
pop
or
mov
ret
cmp
jb
es
pushf
mov
loop
inc
jmp
inc
dec
outsl
pusha
mov
dec
movsl
out
cwtl
and
sub
imulb
inc
mov
fwait
sbb
jae
stos
jns
stos
sbb
adc
lret
sub
jo
lods
inc
or
out
mov
shrl
lods
lretw
pop
or
stos
push
xor
gs
mov
xchg
jg
scas
rorl
push
gs
mov
sub
out
adc
cs
shlb
mov
mov
xor
js
fildll
mov
imul
inc
outsl
mov
or
cmp
mov
mov
mov
and
and
pop
cmp
fisttps
insl
scas
or
outsl
test
jbe
inc
dec
sbb
adc
lods
dec
xchg
jns
stos
std
daa
adc
add
mov
jae
mov
mov
fldcw
jecxz
pop
nop
stos
ja
cld
xchg
sub
sahf
jns
movsl
stos
std
insl
les
adc
fwait
iret
int
mov
pop
push
test
pop
outsl
pop
push
jmp
mov
mov
scas
popl
pop
mov
xchg
or
mov
cwtl
gs
or
xlat
pop
shlb
out
test
xchg
sahf
pop
push
sti
push
pop
movb
fimull
jne
jb
or
inc
and
outsl
fdivrs
shlb
fnstcw
leave
push
arpl
mov
jg
sti
xchg
clc
xchg
mov
xchg
push
push
cmpb
pop
jae
rclb
in
inc
mull
bound
out
xchg
or
out
sbbl
jecxz
in
lods
mov
or
sbb
scas
cltd
or
or
dec
cmc
andl
add
dec
lods
test
add
jne
jp
inc
into
lods
loop
js
in
lods
sub
pusha
cmp
cmp
lret
sbb
xchg
hlt
iret
mov
popa
inc
or
inc
pop
sbb
jecxz
lods
cmp
das
mov
and
jp
inc
fwait
jb
lret
iret
loop
jnp
xchg
or
loop
cmp
pop
push
push
ds
rclb
and
js
mov
sti
mov
ss
lods
jns
cli
mov
jnp
adc
lds
and
lea
loop
pop
add
and
pop
std
stos
sbb
dec
sub
lret
xchg
mov
rolb
xchg
hlt
jge
push
dec
mov
adc
add
movsb
jns
iret
push
xchg
sub
pushf
hlt
lods
mov
xchg
incl
dec
pop
lds
jnp,pt
test
sti
and
adc
orb
mov
jmp
mov
icebp
out
sbb
js
xchg
lds
hlt
add
sahf
sbb
or
sub
test
xchg
ljmp
ljmp
pop
xchg
insb
or
cmp
scas
inc
adc
rcll
fdivp
das
mulb
jnp
lods
je
jae
arpl
cwtl
mulb
ljmp
cmpsb
lock
ret
cmpsb
jb
loopne
and
iret
mov
out
int
in
dec
and
outsl
add
inc
jmp
push
mov
dec
mov
push
cmpsl
mov
cmp
orb
lcall
adc
pop
cmpsl
xor
xchg
or
negl
dec
dec
outsb
mov
lods
xchg
cmp
xor
or
ret
xchg
sub
cmp
lods
inc
nop
inc
push
aas
out
loop
sub
xchg
mov
push
fidivs
pop
test
xor
pop
fldl
sahf
xchg
and
cmp
inc
int
xor
add
les
cmpsb
call
dec
xchg
xchg
cmp
mov
add
xlat
cmpsb
pop
sbb
add
lds
lock
mov
inc
or
mov
pop
add
xchg
or
adc
add
inc
and
jg
ficompl
sub
push
mov
int3
bound
xor
mov
insl
pop
data16
mov
pop
in
popa
fmull
aaa
pop
iret
mov
mov
jg
or
inc
imul
add
in
les
popa
notl
in
repz
movsb
test
mov
pop
test
rcrl
sbb
and
adcl
repz
push
inc
inc
stos
sbb
mov
scas
sbb
fbld
sbb
sub
sub
repz
mov
sti
cmp
jecxz
inc
out
cmp
mov
movsl
xchg
jnp
pop
xor
mov
jl
jae
rclb
sbb
adc
mov
iret
mov
fwait
outsb
mov
add
lahf
jno
jle
jnp
push
add
out
adcb
add
stos
shll
inc
inc
std
mov
test
cmp
adc
bnd
jnp
inc
add
sbb
je
ja
pushf
lcall
addb
pop
lds
push
xchg
pxor
mov
add
pop
lret
pushf
arpl
cmpsb
mov
adc
dec
imul
outsb
and
xchg
jp
mov
addr16
mov
sub
aaa
jl
pop
sub
pop
push
or
mov
int
ja
sub
jo,pn
xchg
mov
lcall
ficoms
sbb
jne
push
hlt
stos
scas
push
push
cmp
sub
clc
xchg
idivl
in
sub
sub
dec
fisttpl
mov
aad
bound
jle
test
sbb
mov
inc
pop
inc
mov
or
inc
cmp
inc
repnz
push
pop
movsb
test
inc
jo
fsubl
and
cmp
xchg
bound
jne
push
dec
int
adc
jecxz
dec
pop
into
mov
cli
and
rcrl
mov
jns
loopne
mov
sahf
jl
push
iret
jne
mov
out
mov
ret
xchg
push
add
in
jle
fisubl
popf
or
pop
dec
pop
sbbl
lods
and
or
stc
adc
sub
xor
push
stc
jb
int
xchg
ds
sti
xor
mov
sub
jp
push
push
jne
mov
in
fcmovne
add
push
push
out
in
aam
push
popa
pop
xchg
xchg
in
mov
xchg
icebp
ret
in
adc
inc
mov
mov
xchg
stc
rolb
sub
cs
ds
and
dec
das
dec
pop
push
sub
test
daa
ficoms
mov
xchg
pop
mov
cltd
add
sbb
out
inc
lcall
mov
mov
popf
push
sbb
push
movsl
mov
xchg
push
sub
insb
int3
push
icebp
mov
push
fs
icebp
jecxz
addl
mov
pop
lea
mov
fisubs
or
mov
ss
mov
dec
loopne
jb
add
xchg
or
dec
push
in
rol
ja
fldt
imul
xchg
ds
dec
repz
lods
jnp
mov
lea
fwait
dec
xorl
sub
cld
xchg
or
cltd
jmp
mov
add
sbb
xchg
lcall
pop
cmp
loopne
clc
push
loop
cmp
mov
test
subl
fwait
push
ljmp
push
int3
adc
test
rolb
mov
scas
stos
mov
or
leave
jge
dec
or
mov
addb
cltd
push
and
nop
jecxz
loop
mov
mov
les
or
fcmovnu
lcall
test
arpl
lock
and
hlt
sti
and
je
inc
lahf
movsb
jl
dec
or
test
add
pop
dec
inc
pop
and
jp
add
test
xor
pusha
xchg
mov
mov
lahf
dec
cmp
mov
repnz
ficompl
cmpsb
dec
xchg
jle
rolb
xchg
insb
mov
jecxz
cmp
pop
lock
rcrb
pop
jge
sub
mulb
push
jno
es
mov
dec
outsl
lea
sbb
sub
aas
lret
lds
or
stos
dec
jmp
shrb
pop
test
aaa
adc
mov
cmp
movsb
inc
les
xor
std
ret
loope
xchg
push
mov
mov
add
lods
jp
inc
out
push
add
mov
jp
and
stos
mov
sub
mov
pop
leave
inc
clc
insl
mov
lahf
xchg
dec
cmp
xor
arpl
cmp
sahf
jp
cwtl
rcll
cmp
xchg
mov
adc
cwtl
fisubrs
out
mov
mov
rcrb
mov
mov
lods
ret
loopne
mov
pop
and
pop
and
xchg
push
adcl
adc
subl
out
add
or
out
xor
push
mov
adc
inc
cmpsl
stc
add
lret
or
sub
clc
jae
inc
out
mov
jb
mov
movsl
inc
mov
cmpb
inc
cmpsb
push
cmp
sub
pop
aas
push
repz
xchg
push
dec
mov
lret
xchg
jo
xchg
mov
lods
dec
adc
pop
xor
js
stos
fcoml
jge
mov
inc
jg
push
xor
pop
aaa
data16
repz
xchg
jge
dec
lahf
jae
sbb
fiadds
inc
pop
push
aam
stos
add
scas
in
ret
leave
xchg
aad
cmp
imul
xor
scas
test
add
mov
pop
pop
jnp
pop
or
je
jbe
push
rol
xor
out
fnstenv
push
or
pop
pop
out
imull
jmp
outsw
xor
out
xor
icebp
jp
fucomi
jae
xchg
mov
push
imull
ss
pop
push
lret
mov
cmp
dec
sbb
dec
mov
inc
int
loopne
jmp
and
xchg
not
loop
inc
lret
test
jne
outsl
jge
inc
icebp
imul
pop
mov
cmpsb
scas
xor
sbb
hlt
dec
nopl
inc
or
mov
je
sti
test
push
lea
jge
push
in
add
jecxz
out
pop
gs
jo
mov
mov
and
jb
mov
xchg
in
inc
decl
jg
or
popf
orl
inc
leave
push
sub
stc
xchg
fwait
push
movsb
mov
inc
pusha
dec
mov
iret
loope
xchg
fidivs
cwtl
in
xchg
dec
lea
jmp
pop
mov
pop
push
xlat
out
push
dec
mov
jmp
clc
cmpsb
mov
inc
jnp
xor
call
jno
loopne
xorb
jmp
adc
punpckhbw
jbe
inc
sub
cld
scas
rcrb
inc
inc
clc
fwait
mov
icebp
adc
dec
scas
aad
cli
rcrl
mov
leave
iret
xchg
push
in
pop
pop
inc
sbb
addb
cli
xchg
aaa
xor
das
notb
mov
push
mov
out
aas
rcrb
or
cld
aad
inc
incl
jns
loop
sbb
testl
push
adc
sub
pop
loop
imul
adc
into
sbb
ret
mov
xor
aam
push
idivb
dec
hlt
jg
outsb
js
sub
push
mov
push
pop
mov
jecxz
push
ret
pushf
stos
or
nop
jp
inc
push
cmc
call
inc
stc
jmp
lds
es
pxor
jae
movlps
push
sub
jbe
mov
js
cs
cmp
jle
lcall
shrb
sub
add
add
add
pushf
iret
fcoml
xlat
cmp
adc
into
insb
insl
lods
dec
pop
imull
xor
fdivrs
inc
call
or
sahf
mov
dec
hlt
das
test
cmp
cld
inc
lcall
pop
push
popa
int3
adc
call
or
shlb
push
jae
xlat
int
fstpt
xchg
adcl
movsb
je
test
leave
pop
xchg
in
cmp
fistpll
dec
sub
aaa
mov
xchg
adc
scas
pop
mov
adcb
mov
xor
rcl
addr16
rcrb
popa
das
mulb
push
fdivrl
addr16
jo
push
clc
dec
fdivs
popf
or
jl
jmp
sub
data16
inc
lcall
mov
sti
pushf
pop
or
cmp
sti
mov
sbb
xor
mov
pop
inc
clc
sub
fstps
mov
loope
pusha
popf
jae
fs
shll
jp
xchg
mov
in
outsb
pop
int3
in
ss
xchg
insl
out
pop
xchg
mov
sub
xchg
mov
cmpsb
lods
mov
adc
jmp
out
jmp
cmpsl
sarl
xor
mov
jne
test
gs
xchg
in
aad
mov
and
sbb
in
imulb
cld
andb
rcrb
insl
sub
sahf
xor
test
div
mov
mov
roll
loope
les
xchg
scas
mov
rolb
hlt
in
mov
mov
stos
pop
std
aas
cmp
dec
inc
add
dec
ljmp
pop
arpl
add
shrb
in
fisubs
xchg
sub
stc
outsb
rclb
cmp
sbb
ds
sub
call
test
repz
and
jl
aaa
sub
adc
dec
push
add
inc
rolb
icebp
or
and
push
fmull
dec
fstps
push
pop
fsubrs
loop
dec
mov
cld
jp
cmp
pusha
pushf
mov
sbb
movb
mov
test
ljmp
cmpsl
insl
xchg
mov
pop
mov
fucomi
movq
in
out
out
mov
cmp
mov
loopne
in
mov
into
push
or
mov
and
cltd
pop
mov
fs
push
jno
clc
xor
mov
es
dec
scas
scas
mov
sbb
mov
push
jecxz
loopne
add
and
test
or
and
test
jb
add
cli
and
mov
mov
leave
jae
cmpsb
negl
sbb
mov
call
movsb
addr16
dec
call
inc
push
inc
inc
push
add
jp
lcall
push
loop
mov
lock
pusha
inc
scas
test
outsl
and
es
inc
fisttpll
add
cmp
js
add
fldcw
aaa
push
push
mov
pop
cli
cmpb
sub
mov
cld
mov
push
jns
and
xor
aas
mov
into
fbld
aam
cmp
out
fidivrs
xlat
mov
js
push
pusha
pop
jnp
insl
jge
bound
or
inc
add
push
pop
bound
in
jnp
std
sub
xchg
fldenv
mov
jp
scas
jo
inc
push
les
or
mov
std
imul
sub
fbstp
adc
push
mov
cmp
cmc
xor
xor
aaa
icebp
aad
in
stc
add
std
jae
insb
inc
icebp
inc
je
shlb
xor
cmp
cmp
nop
or
pop
xor
sbb
fildll
dec
paddusb
jb
out
push
adc
mov
mov
fildl
mov
jb
lret
xor
test
fistpll
jl
jmp
dec
lods
add
cwtl
popf
xchg
aaa
sbb
xor
cmp
sub
mov
cmp
inc
xor
stos
mov
push
dec
and
pop
xchg
sbb
fwait
test
add
add
push
arpl
sub
sub
mov
inc
nop
in
scas
pop
cwtl
cmpsl
mov
mov
js
in
inc
movb
test
mov
and
and
es
pop
xchg
fisubrl
je
fsubl
idivb
jmp
in
mov
cwtl
cmp
xchg
fwait
inc
push
cs
ja
sbb
add
cmp
mov
cmp
fucomi
dec
nop
adc
push
xchg
ds
popa
pop
and
add
std
jnp
out
xchg
mov
popa
mov
jmp
stos
xchg
test
call
adc
push
mov
outsl
inc
inc
sub
outsl
add
fcompl
pop
test
adc
adc
leave
dec
mov
sbb
inc
xor
in
inc
loopne
sbb
lds
and
mov
lods
loope
insl
push
mov
dec
mov
sbb
jp
push
inc
ret
add
mov
dec
outsb
mov
xor
popf
add
adc
insl
lds
inc
jl
pop
jecxz
addr16
xor
mov
pop
mov
and
inc
out
les
iret
into
ret
add
addr16
ljmp
aam
cmpsb
inc
jge
scas
out
xchg
push
scas
cmp
in
movsl
mov
lock
xchg
fisttpll
add
int3
cltd
push
sarb
imul
leave
sbb
inc
pop
int
push
repz
mov
push
mov
aam
push
clc
jg
xchg
lods
dec
jbe
ret
cltd
mov
push
push
jne
out
mov
xor
outsb
icebp
out
add
push
push
add
cwtl
ds
jmp
cmp
sub
mov
cmp
rcl
lcall
pop
in
push
das
push
aas
stos
insb
stos
addl
adc
lret
into
iret
fldcw
shrb
jae
out
xchg
addr16
adc
mov
shll
or
sbb
push
sbb
jb
rorl
out
out
pop
ljmp
sbb
in
sub
fisubl
sti
xchg
xor
movsb
ror
xchg
jbe
fs
push
cmpsb
mov
loop
dec
xor
insl
or
loopne
hlt
lock
scas
inc
xor
repz
pop
repnz
cld
inc
sbb
mov
add
in
pop
xchg
mov
sbb
mov
sub
or
xchg
pop
popa
mov
jbe
clc
movsb
lock
leave
xchg
rorl
fwait
cmp
adcl
jns
in
jmp
push
and
xor
push
xchg
aam
call
pop
jb
mov
dec
leave
inc
mov
xchg
stos
mov
mov
pop
ret
movb
dec
dec
add
push
add
cmp
inc
adc
in
jle
jp
pop
incb
push
push
daa
lret
lea
jns
in
pop
jle
dec
mov
pusha
int
in
sub
adc
loop
add
out
and
mov
loop
and
dec
sbb
add
test
and
pop
add
in
xchg
outsb
pop
inc
jl
ja
arpl
fldt
roll
clc
cmp
ja
inc
cmpsl
out
mov
cmp
popf
jmp
std
mov
mov
dec
pop
rorl
orl
jns,pt
cmp
aaa
out
cld
add
nop
mov
int3
dec
jbe
movsb
jne
mov
xchg
lea
popf
jne
int3
mov
out
test
and
testl
xchg
icebp
cli
cltd
lods
jo
cmp
leave
pusha
fstpt
xlat
insl
loopne
ja
rorb
imul
mov
nop
inc
mov
xchg
mov
stc
pop
mov
movsl
imul
mov
pop
js
in
mov
loopne
je
dec
adcb
mov
or
cs
jne
pop
xor
jb
jecxz
xchg
js
fnsave
jge
mov
mov
pop
sub
rcr
pop
fiadds
mov
lret
push
xchg
popa
je
and
fadd
dec
loop
test
mov
sbb
nop
imul
cmp
jae
jo
js
push
icebp
nop
fisttpll
dec
pushw
cmpsb
xorl
sbb
or
cmp
cld
xlat
out
jg
fs
mov
add
push
add
mov
insb
push
xchg
jg
xchg
cmp
stc
cmc
fsubl
inc
lret
cltd
or
adc
inc
or
sbb
adc
jns
xor
insb
mov
mov
call
mov
mov
mov
int3
xor
rclb
jp
adc
xor
xchg
xchg
mov
aas
push
cmpsl
sahf
pextrw
fldcw
jno
sub
aam
or
lret
rorl
sub
jnp
loopne
xor
mov
repnz
ror
and
imul
push
shll
sbb
push
cmp
lret
mov
sub
loop
or
or
cmpb
inc
sbb
js
xor
dec
fimull
das
scas
and
fstl
ds
push
fstl
xor
adc
addr16
cmp
mov
xchg
leave
mov
cmp
add
push
bound
ljmp
xchg
dec
sub
std
arpl
adcl
adc
lods
insl
xlat
mov
push
adc
jb
lock
or
popf
pop
test
fstp
insl
mov
push
sbb
int
sbb
push
test
mov
push
or
cli
imulb
ret
push
cmp
mov
mov
lods
jmp
inc
fidivrl
dec
or
shlb
lahf
ljmp
jl
cld
subb
xchg
push
cs
pop
push
daa
insb
inc
fbstp
test
lcall
adc
xor
inc
cmp
push
sub
aaa
outsb
fwait
inc
mov
es
mov
sub
cmp
pop
jns
pop
das
mov
nop
cmp
add
repz
xchg
sub
cmpsl
and
mov
icebp
xchg
add
push
stos
push
sti
dec
and
rcrb
ljmp
xchg
sbb
push
fs
inc
fdivrl
push
sbb
cmp
rol
sbb
and
push
mov
rorb
push
jge
sbb
pop
imul
inc
push
mov
mov
stos
dec
out
js
jecxz
test
inc
sub
mov
in
lcall
dec
jbe
push
js
std
rcr
sub
pop
in
sub
add
or
bswap
popf
shr
scas
and
push
ucomiss
add
ja
pop
inc
loopne
or
fsubrs
fsubp
adc
outsl
scas
or
and
cmpsl
jo
sahf
dec
and
cmp
leave
adc
adc
add
mov
pushf
adc
jb
insb
jb
and
push
mov
pop
lcall
ss
fildl
mov
sbb
ds
push
sbb
inc
mov
fisttpll
movsb
mov
push
hlt
mov
outsb
cwtl
rcr
mov
jmp
insl
xor
lcall
push
push
data16
lcall
and
adc
xchg
inc
or
push
pop
stos
outsl
mov
mov
xchg
ljmp
out
outsl
or
fs
jno
fst
sub
into
mov
dec
adc
ret
cld
jl
mov
xchg
cmp
dec
pop
es
mov
or
mov
jbe
and
sbb
ret
or
repz
mov
pop
out
mov
fabs
xlat
mov
pop
fcoml
fisubl
fisttpl
push
xor
imul
dec
fcompl
sub
cld
das
sub
pop
test
push
cs
mov
add
ss
lret
xor
lret
stc
jmp
sbb
fcmovbe
outsb
stos
cli
or
imul
andl
nop
and
add
roll
and
sub
mov
test
pop
push
inc
and
push
in
mov
out
fisubrl
cmp
out
xor
fs
push
jmp
jae
dec
jle
aad
cmc
xchg
sar
rorb
cli
mov
or
enter
movsb
pop
iret
xor
and
adc
xchg
js
jnp
insb
nop
mov
push
inc
movsb
lahf
jae
sbb
clc
dec
sub
in
mov
sbb
lods
fiadds
push
mov
lcall
mov
pop
lods
sbb
add
mov
cmp
and
into
push
pop
addr16
orl
mov
mov
mov
add
movsb
dec
pop
xchg
in
mov
lret
aad
sbb
and
iret
cmc
xlat
inc
aaa
sub
jnp
out
xchg
xchg
in
loope
lcall
nopl
xor
xchg
movsl
movsl
xchg
jmp
fidivrs
xor
sub
mov
jno
sub
fsubl
and
adc
mov
dec
jmp
sub
out
pop
out
inc
push
imul
pop
push
pop
out
push
roll
ljmp
add
imul
les
and
nop
mov
xchg
cmpsl
fadds
push
dec
nop
mov
out
mov
lock
jb
fsubl
shrl
xor
daa
adc
xlat
sub
push
push
jle
sahf
jmp
repz
rcr
mov
push
cmp
xchg
jp
test
int
dec
lods
lock
fnsave
adc
hlt
mov
or
fisubl
js
aam
push
cmp
mov
icebp
pop
int
mov
xchg
sub
hlt
out
jbe
mov
hlt
add
pop
fidivrl
mov
aam
sarb
ss
mul
repnz
cli
dec
mov
inc
bound
cmp
and
xor
cmpsb
dec
test
nop
ret
adc
sbb
push
mov
mov
fldenv
lods
jge
xor
mov
shl
call
iret
jns
fistpll
pushf
das
xchg
pop
push
inc
popl
incb
test
sbb
pop
jp
mov
inc
inc
in
cmp
dec
nop
int
push
mov
negl
push
es
adcb
out
lret
cmp
and
add
xor
les
lds
xorb
iret
mov
jg
fs
imul
fimull
lds
and
dec
push
and
or
and
and
adc
out
dec
in
mov
in
repnz
les
push
adc
dec
test
int3
in
scas
mov
push
add
ss
outsb
fnstcw
repnz
hlt
mov
cmp
rcrl
dec
inc
dec
jmp
test
addb
cltd
orb
out
jb
pushf
scas
fiadds
adc
sub
das
jecxz
int3
pop
scas
pushl
sbb
sub
adcb
xchg
insl
sub
int
outsl
outsb
pusha
repz
daa
aam
ret
dec
xchg
inc
mov
adc
xchg
je
out
mov
std
xchg
gs
ja
jns
jp
push
mov
xchg
or
sbb
cmpb
mov
mov
xchg
cmc
rcrl
ret
pusha
fists
aas
mov
ror
and
xchg
pusha
add
sub
inc
sbb
mov
xor
subl
sbb
into
notl
mov
test
xlat
aaa
sbb
arpl
std
pop
mov
add
adc
iret
shrl
xchg
pop
cmp
dec
je
adc
aad
xchg
mov
xchg
std
inc
mov
jp
imul
adcw
mov
mov
enter
mov
test
fmul
test
sbb
lods
or
adc
and
push
insl
pop
outsl
in
add
out
mov
clc
ss
bound
cmp
and
inc
es
pushf
mov
mov
or
stos
pop
push
mov
jge
mov
cmpsl
mov
ja
dec
xlat
sbb
inc
dec
fwait
jp
bound
pop
inc
xor
mov
lcall
dec
xor
cmp
xlat
insb
jae
loopne
lds
sahf
mov
sub
cmp
data16
rol
inc
jae
and
or
enter
push
mov
adc
dec
inc
pop
inc
or
and
movsb
xchg
movsb
sub
lock
out
dec
mov
pop
cs
sub
mov
fwait
push
aaa
outsl
repnz
cltd
jnp
dec
cmp
jae
and
out
movsl
ja
push
test
imul
lds
lahf
xchg
xlat
les
repnz
push
cmpsb
repz
xor
push
jo
cs
jecxz
sbb
cwtl
loop
sahf
mov
or
outsb
pusha
cmp
aas
cmpsb
inc
scas
js
xor
pushf
sub
out
xor
xor
pop
push
xchg
out
out
xchg
xchg
cmp
pop
and
mov
push
rcll
sub
fdiv
in
aad
xor
xchg
bound
jne
and
sbb
les
add
jle
shr
mov
sbb
cmp
imul
sbb
icebp
adc
std
add
add
jle
iret
popf
cmp
mov
sti
int3
ss
xor
iret
xor
and
and
sbb
sar
dec
fs
fistl
ret
jo
data16
sub
cmp
push
ficompl
pop
insb
outsl
pop
nop
xor
popf
push
cltd
das
das
sbb
icebp
fwait
js
iret
jp
ret
and
cmp
movsb
inc
in
dec
mov
js
adc
or
lret
push
adc
or
adc
inc
push
jno
repnz
dec
fsubrp
mov
pop
dec
hlt
mov
es
fisttpll
scas
push
push
nop
adc
sbb
pushf
cmp
les
cmc
sub
out
in
lcall
ficompl
xchg
mov
dec
push
sub
cltd
or
icebp
out
outsb
and
aas
xor
and
pop
jl
mov
add
sub
xor
fsubl
adc
mov
jecxz
cmp
mov
lcall
mov
pop
sub
vphaddbw
in
pushf
pop
sub
add
pop
mov
xchg
arpl
add
arpl
cmp
pop
jbe
scas
test
sarb
mov
cld
jae
jnp
pop
mov
cmp
mov
dec
mov
xchg
mov
cmp
hlt
pop
jo
in
enter
mov
dec
mov
icebp
push
xor
sub
test
xor
sbb
mov
cld
test
push
in
adc
into
int
mov
rolb
pop
add
push
mov
push
lds
pop
mov
sub
nop
pop
pop
push
mov
push
pop
stos
mov
mov
daa
pop
and
dec
loope
xchg
jns
cwtl
aaa
jo
mov
mov
pushf
sub
xor
leave
aaa
imul
aam
nop
xor
sbb
xor
addr16
pop
adc
pop
xchg
pop
mov
into
mov
loope
sbb
xchg
or
xor
mov
push
push
inc
push
sarb
mov
push
iret
push
push
or
shrb
cmp
into
add
xlat
cmp
jo
mov
add
cmc
cmp
outsl
and
lahf
xor
insb
mov
aad
sub
in
into
fldt
idiv
mov
sbb
pusha
aad
sbb
fbld
call
xor
stos
dec
out
and
push
cli
inc
jns
sbb
int3
lock
pop
or
shl
jbe
sti
jmp
lods
mov
cld
lahf
fs
inc
pop
or
lcall
lods
movsl
shrb
adc
clc
pusha
aam
cwtl
dec
mov
lds
pop
sub
xchg
cmp
or
and
ficoml
mov
xchg
or
dec
jg
scas
cmp
inc
lods
out
test
and
mov
push
repz
bound
test
adc
jb
jnp
xchg
mov
nop
jle
or
cmp
insb
jae
sbb
jl
push
adc
xor
push
xchg
les
lahf
sub
pusha
lods
mov
in
stos
xor
mov
push
lcall
icebp
in
lahf
int
fidivrl
test
xchg
insl
fisubrs
push
es
in
mov
arpl
mov
aam
add
jge
pop
cmp
or
ds
lds
dec
cmp
push
stos
and
and
lcall
sbb
mov
repnz
inc
outsl
add
mov
adc
xchg
cli
ret
mov
pop
aad
pop
xchg
inc
and
lods
jmp
xchg
push
xchg
or
lahf
jae
fistps
dec
test
aad
inc
je
xchg
inc
imul
fbstp
inc
imul
and
mov
ljmp
dec
in
enter
test
or
pop
mov
iret
mov
adcb
pop
icebp
into
cmp
jg
or
inc
mov
sahf
mov
xchg
movsb
rcll
mov
ret
sbb
jp
add
mull
dec
lods
dec
dec
xor
mov
sti
fcoms
adcl
testb
cs
movsb
scas
push
cmp
leave
jp
mov
fwait
int
pop
imul
in
inc
push
mov
sub
xchg
adc
bound
pusha
adc
pop
jl
pop
cwtl
jg
jg
into
add
out
mov
add
mov
xchg
fidivl
hlt
inc
xchg
or
pop
lcall
and
jmp
data16
into
fisubrl
loop
inc
leave
stc
aad
jl
push
xor
push
inc
lcall
nop
fidivl
lods
xor
xchg
js
pop
xchg
call
mov
push
outsb
dec
mov
ss
movb
xor
push
out
hlt
xlat
dec
push
and
aad
ret
xchg
je
aas
repz
loope
and
imul
mov
inc
popa
test
loopne
cs
pop
cmc
gs
rolb
stc
sub
in
mov
ret
mov
adcb
and
outsl
lret
icebp
dec
ret
pop
adc
mov
adc
jmp
cli
or
mov
mov
insl
inc
int
adc
inc
sti
test
adc
push
pop
cmpsl
aam
std
sbb
btc
mov
sbb
jg
je
xchg
inc
mov
out
outsb
fidivl
clc
in
jbe
shrb
loope
adc
je
or
and
pop
dec
fwait
jl
jno
cmpsb
js
mov
jno
cmpsl
xchg
xchg
mov
add
sbbb
ljmp
pop
lret
push
les
dec
push
sahf
lea
popa
daa
aas
pop
loop
xchg
mov
outsb
xor
arpl
mov
sbb
daa
adc
pop
hlt
sahf
out
mov
repnz
and
xchg
fcoms
arpl
pop
daa
mov
rorb
mov
mov
cmp
mov
push
fistl
int3
sarb
movsb
gs
rcrl
hlt
xchg
cmc
or
or
mov
inc
imull
mov
neg
addr16
sti
jl
mov
dec
shlb
notl
pop
jle
lahf
ljmp
add
loope
pop
xor
sub
cmpsb
fiaddl
fs
xor
rorb
insl
mov
pop
lods
aaa
loope,pn
out
or
out
out
adc
adc
cli
and
push
arpl
mov
call
out
jmp
push
adc
inc
das
mov
popa
sbb
and
adc
test
pop
mov
dec
fnstsw
lea
cmp
out
push
pushf
arpl
movsl
or
negl
and
stos
in
pop
pop
jecxz
ja
xchg
add
stos
orb
cmp
pop
movsb
sbb
int
xor
pop
xchg
mov
pop
in
push
sub
decl
inc
pop
insl
mov
jge
enter
out
xor
ss
rcrl
stos
addr16
sub
into
lds
test
jmp
ds
jno
mov
push
mov
mov
fdivs
out
aam
mov
push
jle
mov
ret
sti
and
and
gs
push
add
sub
mov
cld
and
add
ficomps
mov
cmpsb
jge
aad
std
xchg
aaa
sub
pushf
in
movsl
mov
in
ficompl
in
sysret
cwtl
out
ja
xchg
jge
xor
xchg
int
pop
in
ljmp
lea
fnsave
cmovb
pusha
add
int
push
cmp
outsb
popl
cltd
icebp
xor
pop
in
pop
lret
fcmove
adc
xor
roll
jb
in
cmp
sbb
repnz
enter
add
adc
jbe
leave
xchg
cmc
inc
popf
jne
inc
cmp
ret
orl
or
popf
cld
je
jg
xor
xorb
add
adc
dec
repnz
push
cltd
xor
aad
dec
loop
xchg
adc
pushf
mov
push
sbb
xorb
stos
push
aas
addl
cmpsb
and
xchg
push
cmp
pop
xor
xor
pop
int3
stc
sbb
xchg
popf
popa
inc
faddl
cmp
enter
push
mov
bnd
insb
bound
lods
mov
push
in
cwtl
sub
xchg
jae
push
xchg
mov
push
mov
mov
dec
xchg
aaa
cmp
inc
shll
dec
faddp
sbb
andl
loop
lods
mov
int3
popa
xor
in
movsl
mov
sbb
js
sub
xchg
and
imul
push
inc
mov
xchg
sbb
lret
adc
mov
ret
add
xor
xor
push
scas
push
cmp
add
inc
sbbl
mov
jp
push
frstor
adc
cli
sbb
cmpsb
aad
adc
and
push
jb
inc
ljmp
cmpsl
xor
lods
xor
imul
sbb
sbb
in
ds
lock
inc
or
and
stc
dec
pop
insl
jo
in
lret
inc
dec
lods
add
and
or
mov
xchg
out
aam
and
lret
adc
js
xor
mov
outsb
in
lea
rcrl
mov
bound
lds
jl
mov
and
roll
in
pop
fmulp
imul
mov
or
iret
out
es
leave
push
xchg
int
fs
push
lock
jae
dec
les
imul
es
inc
cmp
mov
mov
rorb
clc
sub
aad
pushl
outsl
xchg
mov
cmpsb
or
sbb
adc
mov
mov
adc
mov
cwtl
dec
fsts
mov
addr16
cmp
push
xor
lahf
add
jno
loopne
gs
cmpsl
mov
cmp
push
mov
int3
sub
cmp
pop
adc
das
push
lcall
jecxz
sbb
hlt
dec
mov
push
adc
mov
add
jecxz
mov
push
int3
push
jae
adc
and
inc
fstpt
pop
ja
dec
rcrl
xchg
and
popa
repz
pusha
and
test
js
test
jge
sub
stc
aam
sahf
lods
or
pop
int3
xchg
inc
mov
sbb
xchg
mov
dec
sbb
mov
cmp
roll
gs
mov
nop
mov
mov
shrb
push
or
inc
frstor
push
or
mov
stos
xor
aas
inc
clc
jnp
jmp
lret
popa
nop
cmovae
enter
test
test
movsl
sbb
jae
mov
call
jp
in
cmp
lea
mov
mov
xchg
test
push
sub
jmp
test
jmp
push
rorl
pop
inc
mov
out
or
out
adc
lea
loope
leave
in
push
mov
rcrl
sbb
dec
xchg
mov
aaa
and
sbb
jge
adc
dec
loope
adc
popa
ss
cmp
inc
sbb
sbb
pop
fnstcw
lcall
retw
stos
bound
cmp
xor
lds
cmp
and
repnz
roll
int3
or
jnp
cmp
inc
inc
shr
cld
data16
lret
adc
push
and
dec
cmpsl
xchg
mov
mov
mov
int3
iret
cmp
loopne
mov
inc
xchg
xchg
and
leave
cmp
pop
lds
das
xchg
inc
mov
mov
out
adcb
call
mov
insl
lds
sub
mov
lock
lods
fucomp
aam
and
int
fsubrl
xor
filds
movsl
inc
xchg
cmp
cli
inc
cmp
dec
adc
sub
jnp
inc
sbb
push
pop
aam
cli
mov
faddl
pop
sub
inc
insb
xor
add
shrl
xrelease
iret
add
js
dec
lock
iret
fucomi
cmpsl
cmp
add
xor
clc
mov
dec
dec
lcall
ljmp
outsl
jno
das
lahf
sbb
cwtl
je
aam
push
std
stos
push
pushf
pushf
popf
mov
adc
pop
fst
cmpsl
dec
subb
and
cld
dec
xor
fstps
mov
and
dec
jae
push
xor
jmp
jno
stc
xchg
dec
adc
jno
add
dec
mov
pop
mov
insb
dec
pop
addl
out
cld
inc
lahf
je
xchg
xchg
pop
inc
push
cmp
pop
adc
or
loopne
enter
mov
xorb
repnz
adc
push
inc
in
sahf
pop
dec
test
sbb
mov
cmpsl
pop
jb
das
dec
aam
mov
nop
outsl
add
ficoms
stc
lods
andl
test
jns,pn
mov
mov
jo
mov
arpl
cmp
fstl
xor
push
mov
mov
ds
movsb
divb
sbb
xchg
fcoms
inc
xor
add
jns
fcomps
leave
or
mov
ret
insl
jmp
stc
mov
xchg
inc
xor
or
test
xchg
sarl
cmpsl
aam
mov
iret
push
nop
pop
mov
push
les
add
mov
or
inc
cmp
mov
test
in
clc
ss
cmp
adc
shlb
shr
rcr
inc
pushf
cmp
pop
out
jbe
mov
frstor
out
pop
push
push
pop
inc
mov
out
aaa
jmp
fstl
stos
outsl
xor
dec
ja
jae
loop
push
ret
jp
push
mov
dec
ds
gs
or
std
push
adc
jmp
addl
outsb
pop
and
mov
or
cmp
fwait
mov
dec
add
sbb
pop
inc
daa
xor
xorb
sahf
sbbb
testl
mov
in
daa
jns
inc
push
mov
ljmp
xor
lahf
pop
popa
les
addl
lock
cs
push
scas
cltd
movsb
push
xchg
jo
out
outsb
xchg
add
inc
cmpsl
ss
stc
nop
loop
mov
out
in
stc
jecxz
mov
jbe
add
ret
pop
rol
mov
push
adc
sub
subb
sahf
pop
mov
and
inc
popa
mov
sbbb
daa
xlat
arpl
aam
shl
ret
push
dec
pop
sbb
pop
je
mov
dec
xor
enter
int3
out
xchg
xor
nop
test
imul
or
ficompl
and
decl
pop
mov
mov
mov
inc
call
cmp
rol
int
mov
sbb
or
pop
loopne
fistpl
icebp
stos
dec
adc
leave
jae
aad
jo
or
ret
sub
mov
out
xchg
out
je
cmp
adc
mov
cmpsb
sbb
or
pushf
lods
xlat
mov
and
or
lods
sub
fwait
arpl
mov
mov
int
pop
mov
mov
cmp
push
sbb
add
scas
xchg
fcoml
sub
movsb
pop
outsb
loope
dec
lea
setns
adc
mov
clc
add
mov
data16
adc
cli
test
mov
mov
adc
int
bound
jl
pop
adc
xchg
dec
xor
sbb
shll
mov
mov
iret
movsb
sbb
add
dec
insl
stc
out
andb
adc
xor
inc
xor
mov
xor
mov
adcl
dec
out
std
nop
dec
or
sarl
dec
fdivl
ds
pop
push
not
sub
push
sub
movsl
ret
movsb
push
or
hlt
jnp
mov
mov
push
repz
out
ss
test
mov
dec
mov
inc
sub
bound
nop
incb
jns
or
outsb
aas
dec
cli
scas
cmp
stos
sub
xchg
in
sbb
fbstp
dec
idivl
cmp
and
sbb
xchg
jp
ret
mov
aam
cmc
add
decb
ss
outsl
sub
mov
xor
xor
or
mov
cmp
adc
xor
mov
add
push
push
call
fwait
in
mov
mov
dec
andb
sub
mov
arpl
aas
push
xor
push
pop
jbe
or
cs
xchg
insl
lret
cmp
outsb
or
repnz
pop
sub
rorb
mov
push
or
fwait
mov
mov
pop
test
xor
dec
dec
jbe
subl
pop
sub
in
or
repnz
mov
lahf
divb
outsl
popf
fwait
cmp
ljmp
add
int
dec
fadd
in
std
pusha
loope
addl
leave
cmpsb
xchg
push
adc
jb
sarl
jbe
and
pop
xor
popa
popf
xchg
sbb
popf
outsl
repnz
int
push
les
dec
popf
cli
ja
xchg
lds
repz
std
sbb
cmpsl
dec
incl
arpl
call
int
mov
nop
dec
adcb
push
fsubs
out
mov
pusha
mov
fcmovnbe
stos
movsl
mov
mov
mov
inc
mov
rcrb
loop
out
pop
pop
sub
jmp
pusha
jge
fnop
or
cmc
sbb
sahf
jmp
into
movsl
fwait
cmp
cmp
dec
inc
and
or
popa
fwait
xchg
sbb
pop
lods
push
test
push
jl
push
out
fmuls
es
cmp
lret
or
cmpsl
jb
out
ficoml
mov
or
imul
pop
lcall
sbb
stos
rcrb
adcl
add
lret
or
int
inc
fisubl
repnz
xchg
adc
push
adc
and
outsb
in
out
and
lret
push
pusha
lods
mov
dec
dec
jns
cmp
mov
mov
mov
orl
adc
or
dec
out
out
ror
ss
shrl
mov
fnstenv
mov
out
mov
xor
sbb
arpl
data16
inc
adc
adc
cmp
adc
fldcw
sub
push
lcall
xchg
or
inc
cmp
cmc
adc
mov
jnp
cmpsl
aad
hlt
lds
adc
lret
fwait
aad
out
das
and
sbb
xorl
and
idivb
xor
pmulhuw
adc
fwait
mov
nop
sar
cli
xor
inc
xchg
and
je
nop
pop
sub
cmp
scas
cmc
push
ret
sub
pop
push
pop
mov
mov
loop
adc
int3
das
mov
inc
fmul
les
aas
and
xor
pop
mov
call
std
cmp
loopne
mov
or
std
lock
stc
loopne
cmp
les
lods
jo
pop
dec
or
lods
scas
fcomps
aaa
sub
data16
dec
movsl
cld
test
aad
out
adc
adc
pusha
popf
pop
cltd
jmp
dec
and
dec
gs
xlat
xor
je
xchg
sti
gs
add
sbb
jle
pushf
add
mov
mov
xchg
cwtl
xchg
adc
inc
out
push
cwtl
test
je
icebp
das
inc
cld
cmp
xchg
mov
jl
lcall
push
cld
mov
std
rcl
xor
iret
pop
outsb
mov
mov
lret
mov
dec
adc
dec
mov
in
jge
xor
imul
das
pop
movsl
mov
rolb
test
ror
es
or
jo
adcb
xchg
fwait
mov
scas
xchg
cmp
scas
pushf
cmc
mov
pop
pop
cld
test
shll
es
push
sub
and
stos
pop
push
adc
sub
pushf
add
std
inc
xor
dec
into
arpl
in
adc
popa
popf
leave
cmpl
js
push
mov
and
pop
xlat
mov
shll
js
jecxz
cmp
lock
addl
add
adc
insl
rcrl
jecxz
insl
sbb
xor
inc
test
inc
mov
fwait
inc
mov
push
add
pop
pop
mov
subb
push
jge
add
scas
lock
sbb
sbb
outsl
sbb
mov
out
shll
aas
mov
mov
pop
push
cmc
test
ret
loopne
popf
loop
test
push
fs
fildl
push
or
or
lods
imul
ret
inc
mov
jmp
mov
bound
mov
xchg
ja
andl
xchg
test
xor
add
frstor
out
out
adc
clc
fistps
fnstcw
xchg
push
push
jbe
push
scas
repnz
loope
dec
sub
rcrb
bound
fdivl
adc
cwtl
jns
sub
mov
jae
mov
and
pop
daa
lds
push
inc
lds
xchg
cmp
cmp
aas
stos
push
dec
sub
loop
pop
shlb
mov
lret
jno
xchg
shlb
loope
repz
jmp
sub
aad
test
mov
subb
mov
movsb
pop
in
mov
pusha
adc
push
int3
daa
sbb
icebp
cmp
add
mov
add
inc
adc
pop
pushf
xlat
adc
loop
aad
fcomps
adc
inc
lods
sahf
dec
mov
sbb
cmpl
ljmp
adc
mul
or
push
scas
lcall
out
push
mov
sti
adc
mov
adc
das
push
jecxz
mov
clc
sbb
or
into
push
popa
js
scas
mov
push
lock
jp
cs
mov
push
sub
lahf
push
jl
xchg
pop
cli
pop
mov
repnz
cmp
xchg
push
test
and
repz
dec
lahf
inc
xor
inc
pop
imul
adc
int3
and
sbb
aaa
jp,pn
mov
or
and
cwtl
imul
xor
in
sub
push
out
pop
add
add
in
call
bound
push
add
jb
repz
pop
mov
mov
jle
xor
pusha
inc
push
adc
add
movsb
imul
out
or
dec
stc
repnz
arpl
mov
jp
dec
mov
loope
lods
jbe
movsl
xor
fdivs
outsb
dec
dec
sbb
or
lock
nop
mov
cmp
push
or
adc
je
popf
push
fisttps
and
hlt
xchg
ret
jb
and
loop
sub
xlat
dec
rcrl
jmp
add
cmp
imul
lahf
xor
and
dec
mov
stos
into
push
out
inc
ljmp
mov
btl
cmp
fisubs
sub
adc
xorb
sbb
xchg
lods
or
push
loopne
imul
fstpl
inc
and
mov
sub
lcall
scas
xor
rorl
jmp
jmp
mov
movsl
ss
je
lock
xorb
dec
adc
mov
lods
sahf
loop
fcompl
adc
mov
insl
mov
jbe
and
lock
movsb
daa
icebp
nop
sub
add
fistps
xchg
mov
inc
rcr
xchg
out
jns
jle
adc
aam
add
sub
cld
cld
fadds
mull
inc
movq
jbe
cmp
data16
jo
mov
mov
cmp
push
dec
mov
xchg
mov
mov
push
and
inc
mov
aas
fcoml
inc
xchg
shrb
mov
inc
popa
cld
mov
outsl
jnp
pop
inc
loopne
mov
xchg
aaa
mov
xor
inc
add
dec
test
mov
jecxz
dec
mov
and
or
dec
xor
add
out
loop
pusha
push
lods
es
mov
add
xchg
in
mov
jg
push
sub
nop
jp
sub
xor
or
add
popa
sub
subl
pop
push
sub
mov
mov
shlb
bnd
push
push
iret
data16
adc
cmp
and
push
dec
roll
add
and
movsl
or
mov
int
pop
pop
sarl
fiaddl
pop
cmp
insb
rol
jmp
push
movsl
sub
ds
add
stc
jge
inc
cld
cmp
mov
mov
orb
scas
pusha
cmp
jb
popa
fadds
mov
sub
and
gs
sbb
inc
pop
fwait
push
outsl
adc
inc
in
pop
mov
imull
push
je
xchg
fnstsw
stos
arpl
inc
dec
mov
jns
mov
jle
xor
sub
rcrl
sub
mov
cld
xchg
fwait
and
cmp
pop
sub
add
jns
lahf
inc
sbb
jge
psrad
jecxz
pop
hlt
and
mull
ret
jae
subb
mov
mov
sbb
jg
aad
mov
dec
out
popw
pop
loopne
aam
movsb
xchg
dec
movsb
test
shrb
call
mov
shll
add
xor
and
jbe
push
xchg
leave
dec
jp
jg
das
cmp
jmp
add
mov
xchg
adc
daa
push
lcall
mov
imul
outsl
xchg
xor
mov
mov
iret
pushl
mov
xor
shlb
mov
push
testl
jne
loop
and
iret
mov
stos
pop
pop
rorb
fidivs
insb
rcl
fdivrs
jnp
shlb
jne
mov
imul
mov
sahf
xchg
fld
dec
adc
mov
out
xor
loope
inc
mov
lret
jns
dec
shlb
mov
pop
pop
or
mov
mov
in
push
pushf
ja
cmc
sbb
inc
lahf
adc
sbb
mov
and
lds
in
dec
sub
or
mov
sbb
jg
ja
js
cmpsl
dec
scas
fdivr
dec
mov
mov
mov
jnp
push
iret
icebp
cmp
shlb
push
loop
xchg
mov
insb
fnstsw
call
loop
pushf
xor
imull
lods
shr
xor
and
and
mov
cwtl
sbb
mov
bound
add
shrb
lds
sbb
aaa
loop
das
daa
inc
loope
fists
or
int3
andb
ss
dec
adc
mov
shrb
xchg
xchg
sub
cmp
or
test
and
and
imul
jmp
popa
std
jl
outsb
xlat
lods
repz
xchg
test
sub
xor
inc
sti
in
jae
jp
adcb
push
push
pop
xlat
icebp
add
imul
adc
pop
xor
jbe
ja
inc
pop
ljmp
pop
cwtl
movsb
arpl
je
scas
insl
adc
cmp
mov
outsb
or
jg
insl
pop
mov
ss
out
xchg
addr16
add
adc
cmp
stos
in
xchg
jnp
lahf
add
and
fisubs
sti
cmpsl
outsb
push
fstpl
faddl
mov
scas
jae
jo
ljmp
in
push
pop
cmc
mov
mov
or
mov
out
jbe
inc
mov
test
ljmp
dec
das
daa
and
test
andb
mov
cmpsb
or
or
and
aam
test
pop
dec
lods
adc
or
or
cmpsl
or
jp
incb
not
icebp
sbb
pop
push
data16
gs
pusha
call
push
mov
xor
gs
vcvttpd2dqy
arpl
mov
jns
pop
repnz
push
ljmp
mov
loopne
cmc
adc
ss
rep
gs
cmpb
cmp
ljmp
push
push
outsb
jmp
sub
sub
mov
add
test
insb
jne
cmp
mov
scas
iret
add
imul
push
mov
pop
or
jmp
mov
mov
mov
test
stos
je
outsb
hlt
xchg
movb
faddl
es
and
and
enter
push
add
push
lock
or
mul
dec
aad
cli
gs
dec
pop
xchg
clc
xchg
xchg
add
movsb
mov
test
mov
sbb
aad
add
out
outsl
mov
rolb
test
lret
mov
lret
lret
fists
xchg
cltd
out
std
xchg
lret
cwtl
test
mov
sub
mov
outsl
clc
mov
pop
and
push
in
or
pusha
pop
dec
pop
jecxz
rcl
subl
jns
adc
jo
daa
cmpl
dec
mov
jecxz
inc
cwtl
push
mov
xchg
andl
ljmp
movsl
mov
or
mov
sub
xchg
jnp
xor
js
jbe
cmp
popf
stc
or
push
mov
sbb
dec
lcall
fimull
movsl
cmp
pushf
fldl
fs
rclb
sub
mov
sub
daa
loopne
arpl
nop
test
push
or
sbb
sub
xor
rcrb
mov
push
mov
dec
cmpsb
jno
xor
push
and
jle
push
scas
push
and
sub
lret
xor
cmpsb
aam
ds
loopne
xchg
sub
repnz
add
mov
or
pop
jbe
push
jae
sub
into
addr16
stos
xlat
int3
scas
xchg
filds
pop
bound
add
xchg
mov
aas
or
sbb
xchg
testl
lods
out
mov
adc
movsl
jbe
mov
stos
or
sbb
sbb
jno
pop
popf
ljmp
cmc
test
pop
xor
jmp
ja
enter
push
mov
cmp
mov
roll
jae
sti
jge
add
mov
ss
cmpsl
loop
mov
mov
jl
pop
xor
rcl
aam
lea
adc
repz
and
add
inc
dec
jbe
das
dec
inc
lods
mov
or
repz
xchg
inc
insb
cmp
lahf
mov
cmp
dec
jne
es
fwait
pop
dec
xor
subl
mov
lret
test
arpl
sbb
mov
shl
test
jecxz,pn
rolb
xlat
sarb
test
xor
adc
dec
inc
das
ds
into
loope
dec
pop
or
inc
sub
daa
xor
popa
mov
mov
add
pop
mov
es
in
cwtl
cwtl
testb
test
cmc
mov
mov
xor
sub
cwtl
in
mov
jnp
xchg
lods
aam
enter
test
mov
aaa
sbb
aaa
pop
adc
insb
xchg
mov
jg
xor
mov
dec
xlat
subl
push
lret
movsl
xchg
popa
test
add
cli
inc
sub
aad
lret
in
mov
insl
or
jle
addr16
stc
mov
fwait
xchg
scas
icebp
addb
sub
outsb
sbb
jle
xor
push
es
mov
pushf
mov
aam
test
rcrl
or
sub
sarb
adcl
pop
and
or
mov
loopne
out
and
pop
push
gs
xchg
mov
in
jmp
or
or
cmpsb
lret
mov
pop
dec
clc
das
mov
rcll
xchg
aas
jmp
adc
mov
inc
mov
dec
loopne
cmp
dec
jne
loopne
shll
movsl
adc
xchg
lds
lock
xchg
nop
cmp
mov
mov
xor
rolb
outsb
fwait
push
je
outsb
call
or
or
sbb
inc
mov
arpl
shll
sub
dec
push
xchg
mov
into
pop
cmp
outsb
in
cwtl
dec
dec
dec
xor
jp
test
int
cs
aam
push
mov
push
movsb
add
xchg
lret
mov
push
pop
lret
cmp
outsb
sti
jg
into
sbb
xor
repnz
sbbb
test
xchg
sub
das
jns
stc
gs
sbb
xchg
sbb
cmp
add
lods
cmp
xchg
and
push
imul
arpl
add
aaa
bound
loope
aam
dec
loopne
adc
mov
mov
cmpsl
sub
aam
inc
lcall
push
cmp
fbstp
test
leave
mov
pop
bound
cltd
scas
js
pop
push
mov
loop
sbb
push
scas
movsl
call
mov
jns
push
jg
xchg
hlt
jle
sbb
call
test
test
inc
arpl
mov
jg
adc
ret
in
cmp
inc
xchg
mov
shlb
dec
fbld
mov
jmp
cld
add
iret
dec
mov
int
js
adc
mov
mov
xchg
mov
mov
jg
inc
pop
cmpsb
in
into
outsl
mov
jle
dec
cmp
cmp
mov
out
scas
dec
pop
xchg
adc
jae
lahf
push
sahf
fadds
push
out
xchg
push
and
enter
decl
or
rep
test
lret
outsl
jae
popl
push
dec
out
in
shl
test
xchg
test
std
pusha
sub
pop
sbb
fisttpll
xchg
xchg
fsts
push
jnp
mov
mov
sahf
xor
and
cmc
icebp
sti
mov
and
repz
cmc
mov
or
pop
dec
push
mov
jo
pushf
jne
fwait
addr16
sbb
imul
mov
and
jns
push
dec
adc
sub
lods
and
inc
aad
mov
mov
dec
mov
jnp
clc
mov
jmp
xor
pop
es
scas
mov
mov
add
jmp
movsb
movsb
into
mov
inc
les
outsb
jp
repnz
ss
fiaddl
into
lock
dec
icebp
add
mov
repnz
jl
stos
mov
sbb
pop
push
int
push
in
lods
imul
jne
add
mov
xchg
dec
dec
mov
xchg
and
fmuls
test
or
jne
sub
xor
testb
push
ja
pop
shll
aaa
adc
sbb
es
jbe
nop
popf
push
scas
xor
jl
dec
jae
push
std
adc
mov
push
cmpsl
mov
int
out
inc
ja
dec
xchg
jb
mov
push
xor
sub
add
jl
sub
jg
xor
jo
sti
hlt
push
jge
popf
int3
and
mov
sub
push
dec
xor
pop
movsl
jge
ret
adc
xlat
inc
and
les
mov
cli
int
xchg
outsb
jp
mov
test
hlt
sbb
mov
xchg
mov
pop
es
push
mov
mov
pop
mov
out
icebp
mov
xchg
mov
out
ret
xchg
out
fdivr
cltd
mov
sub
xor
push
jb
iret
pushf
jae
mov
pop
mov
fdivrs
imul
aaa
mov
dec
inc
loopne
movsl
mov
xor
sub
shrb
cltd
push
cmpsb
mov
lods
add
and
pop
dec
jbe
hlt
stc
sti
out
ficomps
shlb
adc
sti
dec
lods
sahf
shlb
sub
xchg
mul
cmp
push
mov
push
push
and
enter
jp
or
jge
lock
repz
jg
jecxz
lods
xchg
enter
cmp
shll
shlb
std
jb
iret
mov
adc
xor
or
test
data16
enter
and
xorb
ret
mov
sti
and
icebp
sub
sarl
sub
xor
xor
lods
cmpb
dec
ficompl
and
push
decl
dec
lret
subl
decb
mov
cmpsb
sbb
int
lock
mov
add
pextrw
stos
loope
hlt
jne
pop
les
loopne
insl
pop
push
cltd
sub
add
push
lock
aam
jno
hlt
iret
data16
mov
sbb
or
shlb
jp
movsl
fs
dec
arpl
std
jmp
or
outsb
xchg
out
stc
ret
mov
dec
xlat
and
nop
jge
aam
dec
sbb
mov
dec
jb
mov
data16
pop
mov
mov
mov
fldl
test
ljmp
mov
in
xor
xor
ret
jb
mov
dec
sbb
adc
sbb
rclb
mov
adc
dec
pop
fwait
sub
mov
iret
add
fstpt
jae
pop
adc
xchg
loopne
xor
jb
push
add
lret
ss
nop
inc
enter
mov
daa
sbb
fs
cld
popa
in
subb
push
pop
jae
dec
push
popf
cmpsb
jnp
cmp
jecxz
shll
mov
mov
das
sarb
jg
inc
icebp
push
lcall
pushf
sub
movsb
jb
and
js
xor
fucomp
cs
enter
je
mov
iret
add
cmp
add
mov
jne
lea
repz
fxch
idiv
or
test
mov
ret
cmp
shl
ss
lods
dec
pushf
nop
shl
int
repnz
icebp
lahf
and
inc
cltd
cwtl
sti
in
loop
ja
in
dec
push
or
add
xor
xor
mov
das
out
imul
sub
out
icebp
lahf
lahf
add
bound
stos
dec
mov
sub
sar
and
scas
add
push
sbb
negb
dec
or
cmp
fs
mov
xlat
shl
add
sbb
stos
xchg
movsl
sub
mov
adc
push
inc
aad
mov
orl
cmpsb
jne
addr16
test
iret
xlat
shl
cli
je
mov
add
sbb
je
clc
cmp
push
push
jge
stos
test
jge
daa
shlb
xor
mov
sub
dec
mov
js
ficomps
mov
rorb
inc
sub
stos
ficompl
xchg
fdivs
pop
xlat
mov
fsubrs
push
cwtl
inc
pmulhw
popf
sti
lods
aas
repz
sub
jp
add
pop
push
jne
nop
xlat
xor
push
cmp
pushw
int3
test
or
faddl
out
int
fcmovbe
pop
frstor
or
cmc
mov
sbb
push
push
orl
dec
jnp
rorb
mov
dec
frstor
and
repnz
sbb
repnz
loop
into
inc
fcomp
stc
cwtl
mov
dec
iret
xchg
jp
adc
dec
pop
aaa
and
bound
mov
das
mov
test
and
cli
and
pop
jb
addr16
or
jg
push
fucomi
pop
xor
fisttps
shlb
mov
bound
repnz
stc
daa
dec
out
xor
dec
int
sbb
cmp
mov
loopne
pushf
jae
push
and
pop
mov
outsl
adc
dec
or
ror
outsl
aam
ror
repz
or
fdivl
cwtl
sub
fmull
mov
jmp
lcall
inc
push
shrb
or
cmpsb
cmp
or
adc
pop
add
lods
xchg
xor
mov
add
pop
sbb
out
xchg
movl
dec
add
cmp
mov
jmp
push
fsubl
insb
mov
out
std
and
ret
in
push
pop
insl
mov
mov
mov
or
lahf
xlat
sar
xchg
sub
in
aad
jge
xor
mov
addb
cwtl
test
into
stc
pop
adc
push
xor
pop
test
jl
add
sbb
pop
or
mov
in
test
sarb
sub
xor
fwait
or
xor
test
shll
movl
jl
ret
push
test
cmp
shlb
xchg
fs
lds
in
xchg
pop
xchg
je
stos
cmp
stos
xchg
sbb
lods
out
mov
xchg
into
stos
and
sbb
lret
or
imul
ljmp
div
jae
popf
popf
xlat
or
pop
in
cmc
dec
push
cwtl
jl
es
sub
outsb
fdivl
or
imul
jecxz
xor
add
or
sti
lock
or
push
clc
fistpl
es
jae
xchg
push
sti
addr16
xchg
cmp
das
cmpsb
movsb
cmp
dec
in
into
mov
test
je
in
shll
jmp
outsl
cltd
sbb
lods
shrl
aam
adc
into
ds
and
mov
aad
in
pop
cmovae
push
xor
xor
mov
add
cmpb
mov
loopne
sbb
movsl
mov
sbb
bound
jmp
lods
sbb
xor
test
rorb
sarb
js
leave
adc
repz
rcrb
mov
mov
sub
int3
outsb
ficoml
dec
cmpl
adc
ja,pt
sti
ret
mov
jae
outsb
scas
loop
or
jo
out
mov
push
cmpsb
jb
jo
sbb
loope
xor
mov
ljmp
sahf
lcall
lds
pop
movsb
xchg
test
xchg
lock
cmpsb
push
mov
sbb
adc
fucompp
inc
into
xchg
sar
fcoms
jle
or
sub
mov
sbb
cmpsl
or
fcompl
dec
hlt
fsubl
pop
dec
add
adc
cld
cwtl
dec
sbb
mov
aaa
dec
adc
push
mov
dec
or
ljmp
fstl
mov
push
fldl
repnz
mov
loopne
popa
lds
sbb
add
lcall
imul
aam
sbb
hlt
sbb
clc
push
mov
negb
int3
aam
pop
mov
adc
pop
filds
pop
popa
xchg
adc
xlat
ds
push
ficompl
sbb
lods
jl
pop
inc
jge
clc
pop
dec
dec
or
adc
push
in
inc
ret
xchg
in
es
rclb
cld
arpl
push
xchg
mov
jno
cld
out
sbb
call
mov
lret
hlt
js
fadds
inc
inc
jb
icebp
lods
pop
push
cmpb
mov
test
push
push
test
inc
xchg
cmc
jno
repnz
subl
pop
and
push
movsb
dec
jecxz
shll
test
jnp
js
repz
mov
adc
inc
xchg
inc
sti
xchg
mov
inc
and
add
rorb
cmp
cmc
pop
fdivl
mov
pop
sub
jnp
fldlg2
std
lds
adc
jae
scas
mov
int
xor
js,pt
outsl
inc
push
xor
mov
movsb
cwtl
popf
daa
mov
mov
add
aas
rol
inc
fs
das
std
sbb
fsts
movsl
lods
push
mov
add
sar
jmp
xlat
test
inc
mov
lret
test
mov
xchg
fisttps
xchg
sbb
mov
mov
push
cmp
out
xlat
inc
lods
dec
cmp
loopne
pop
mov
sub
cwtl
imul
jb
push
shlb
arpl
xchg
lcall
test
outsb
int
movsl
out
mov
stc
lds
adc
aam
enter
faddl
cltd
xchg
insl
gs
sbb
mov
repnz
jge
fcompl
inc
mov
mov
mov
xor
pop
xor
rorl
xchg
movsb
out
roll
pop
test
subl
dec
notb
ret
mov
rcl
xor
add
push
jmp
imul
add
imul
adc
mov
jle
insl
call
je
gs
lods
mov
push
xor
sbb
loope
mov
leave
and
mov
sbb
sub
sti
mov
jae
test
pop
adc
and
sub
mov
loopne
cmp
fdiv
add
pop
ds
jo
sub
sbb
push
sbb
mov
out
fistpl
outsb
inc
cli
xor
xor
leave
jp
cld
push
jge
fwait
or
and
pop
mov
adc
xchg
xchg
fwait
in
insb
clc
repnz
mov
arpl
sub
push
loopne
inc
inc
clc
sbb
pop
loope
xor
jge
xor
lcall
mov
icebp
adc
inc
push
and
xchg
movsl
ret
inc
stc
orb
orb
lods
add
adc
mov
sub
jle
movsl
icebp
mov
add
jno
inc
sub
or
sub
and
push
adc
dec
pop
cli
cmpsl
imul
out
cli
dec
js
stos
call
cmp
push
outsb
xor
sbb
cld
inc
hlt
pop
xchg
jmp
and
dec
ret
loope
push
and
shll
lds
daa
push
int
cmc
movsb
push
addr16
mov
cwtl
mov
out
sarl
mov
loope
or
jns
sbb
or
shr
sbb
and
sbb
clc
jb
aas
fdivr
pop
fimull
roll
or
mov
movsb
mov
sub
jp
inc
sbb
jns
cwtl
mov
inc
lret
gs
mov
and
and
pop
inc
sti
mov
jge
xchg
push
popa
push
cmc
mov
or
in
sahf
fisttps
sbb
and
popf
jbe
add
and
mov
cmpsl
icebp
ljmp
popa
mov
fmulp
sub
pcmpgtd
call
pop
adc
push
call
and
neg
addl
pop
pop
lods
jb
adc
cs
sub
mov
mov
mov
lcall
call
scas
xchg
sub
mov
cmp
mov
test
mov
cmp
mov
loopne
cmp
lock
dec
or
mov
outsl
bound
inc
addr16
test
mov
pop
addr16
cltd
orb
and
jae
xchg
leave
pop
jns
int
les
add
add
cmp
cs
testl
pop
std
pop
int
xor
bound
pop
loope
in
cmp
add
scas
inc
pop
repnz
add
xor
mov
loope
in
adc
push
mov
mov
les
add
pop
jle
mov
cmp
push
pop
mov
popf
lds
das
stc
test
sbb
xor
mov
ret
scas
jp
rolb
cmp
insb
pop
andb
mov
add
call
pusha
and
dec
into
ja
mov
or
jbe
lods
std
dec
mov
sbb
sub
inc
push
lahf
push
mov
pop
mov
mov
cld
jae
or
in
sbb
dec
xor
aam
cmp
push
mov
adc
cmp
test
xchg
cmpsl
pop
fcoml
add
in
mov
loope,pt
fcoms
movsl
rolb
cmpb
push
stos
push
les
dec
inc
cs
out
sbb
cs
jge
and
ret
mov
fildl
ret
mov
jno
js
imul
iret
or
stc
fsubl
nop
jecxz
add
mov
mov
scas
test
arpl
mov
scas
clc
test
lock
and
add
std
inc
push
inc
out
or
daa
fs
out
and
push
das
rcrl
stos
and
push
cmpsl
dec
dec
dec
repnz
cmpb
cltd
xor
aas
jp
push
popf
rorl
jecxz
in
test
lea
and
mov
jge
xchg
and
pop
add
dec
pop
daa
out
sarl
ficoms
xor
addr16
sub
mov
clc
sbb
xor
icebp
loopne
sbb
jg
out
mov
sar
pusha
int
mov
jmp
les
std
popf
ror
pop
xchg
dec
mov
push
adc
shrb
mov
pop
out
insl
outsb
adc
fistpl
push
xor
mov
xor
jp
jo
jb
fcom
cmp
pop
pop
dec
insb
scas
jae
out
ds
cmp
jecxz
loope,pn
es
lcall
inc
mull
jmp
mov
scas
xchg
mov
cmp
insb
int
test
xchg
dec
mov
das
cmc
jb
mov
int3
mov
add
iret
inc
xchg
inc
xor
test
sbb
test
sbb
pop
loop
lock
dec
cltd
lds
add
pop
outsl
jmp
pop
int3
test
dec
xor
shll
sbb
sbb
es
shl
jns
sbb
xchg
ja
cwtl
add
pop
or
jmp
fs
cld
das
sbb
push
das
orb
jle
xor
lretw
mov
fdivrs
jbe
and
mov
dec
inc
cmp
scas
daa
pusha
jae
jmp
movsl
add
mov
call
repz
repnz
push
leave
cli
cmp
nop
jl
or
mov
jae
mov
sub
ret
sarb
movsb
mov
shrl
in
in
inc
jb
in
cmp
ljmp
inc
add
pop
xor
cmp
or
pop
cmp
push
popa
inc
mov
inc
jp
adc
shll
out
iret
das
negl
or
sbb
js
pop
cmc
aas
loopne
jmp
mov
sub
cmp
test
ret
fcmovnbe
das
jo
push
cli
and
js
ret
adc
jbe
paddsb
gs
xchg
and
add
xchg
mov
and
lret
xchg
or
push
loope
and
or
xchg
daa
pop
loope
xor
push
popa
add
push
mov
negb
pop
stos
jno
dec
xchg
jnp
stos
add
cmc
push
setae
fstpl
cmp
xchg
lock
es
arpl
leave
push
xchg
pop
or
pop
jle
int
jo
jg
pushw
mov
popl
stc
jbe
push
jecxz
jle
mov
add
into
popa
adc
push
jecxz
pop
mov
imull
stc
and
es
push
and
clc
loop
add
xor
pop
xorl
jbe
ja
lds
cmp
mov
insl
je
popa
ret
jbe
mov
scas
inc
jae
push
ds
es
mov
lds
inc
aas
stos
fs
pushf
pop
or
loope
out
mov
std
dec
js
cmp
inc
aam
and
mov
jne
jge
rcll
mov
push
sbb
cmc
addr16
test
adc
out
mov
pop
xchg
xchg
fidivrl
jbe
cmpsl
cli
sbb
je
and
add
push
shl
xchg
fst
pop
clc
xchg
mov
mov
rcl
icebp
aaa
xchg
mov
dec
sub
mov
mov
int
inc
dec
pop
fsts
stc
push
fld1
xor
cmp
dec
pop
mov
jb
into
ljmp
jmp
lahf
shll
rep
or
dec
cmpsl
cld
push
cmc
in
pop
dec
popl
dec
out
push
bound
stc
cmc
jnp
fnsave
mov
lock
lock
outsl
xor
sbb
test
xchg
dec
fmuls
pop
mov
cmp
out
inc
inc
test
in
xor
xchg
lock
xchg
mov
fmull
cmpsb
jo
ds
push
xor
jo
sti
lret
fsubl
inc
dec
repnz
or
shrl
ss
pusha
add
and
mov
push
add
inc
fs
jp
mov
and
int3
push
fmul
ficomps
jge
bound
jp
in
add
scas
lret
iret
push
in
hlt
lcall
ljmp
loope
fisttpl
mov
sub
aam
in
divb
jle
icebp
sti
and
stos
cs
pop
lods
xchg
jge
mov
mov
les
push
push
addr16
lods
cmp
and
loope
xor
rcr
jb
dec
outsb
mov
sbb
ret
imul
push
push
ret
xor
or
outsl
pusha
xchg
mov
bswap
and
xchg
dec
dec
das
jb
test
leave
add
add
cmp
and
push
mov
fstpl
out
aaa
cmpsb
clc
inc
push
cmp
pop
push
lea
scas
std
popa
subl
sbb
pop
subl
subl
and
iret
mov
stos
call
push
push
xchg
mov
jp
sarb
sahf
add
add
mov
sub
xchg
push
ror
push
sbb
loopne
cltd
or
insl
push
add
ds
mov
stos
xchg
mov
xchg
push
sbb
fsubrl
sbb
cmp
mov
insb
pop
and
dec
cmp
loopne
daa
test
outsb
dec
int
add
inc
xor
lcall
mov
sub
pop
hlt
test
shll
mull
cmc
mov
dec
fwait
int3
adc
inc
daa
incb
inc
xor
mov
xor
add
xchg
mov
sub
adc
mov
push
push
sti
test
adc
pop
andb
mov
dec
sbb
mov
js
imul
fwait
repnz
mov
and
lods
int3
into
xchg
std
xor
fildl
pop
lea
lods
mov
dec
pop
rcr
cmp
inc
fiaddl
ds
dec
mov
jecxz
cmp
ss
xor
adc
sub
out
mov
mov
clc
fcompl
push
loope
rclb
cli
inc
fsubl
or
cltd
or
mov
adc
lods
das
cwtl
sbb
or
popf
movsl
cli
add
sahf
mov
and
lock
frstor
mov
clc
cltd
dec
inc
pop
xor
sbb
push
test
push
and
mov
jg
and
add
push
push
pop
mov
mov
ss
dec
test
mov
inc
lahf
je
xor
add
mov
sarl
mov
or
div
add
jmp
mov
icebp
clc
cmc
or
adc
testb
adc
addr16
call
lea
mov
push
pop
unpcklps
hlt
inc
ja
daa
imul
mov
icebp
dec
push
fs
sbb
popa
mov
mov
mov
les
pop
xor
insb
fyl2xp1
pop
adc
nop
std
shl
fs
pop
pop
sti
lea
cli
add
dec
iret
or
xor
lea
sub
and
sbb
enter
movsl
stc
pop
sar
push
adc
clc
js
mov
mov
cmc
sub
insb
push
fcmovnbe
aaa
inc
shrb
cmpsb
movl
aad
add
or
pop
dec
xor
rolb
push
cmp
adc
int3
cmp
cs
dec
incb
cmp
pop
mov
insl
xchg
dec
fnstcw
inc
cmp
in
add
jmp
in
test
mov
fwait
adc
cmp
add
sbb
addr16
mov
test
outsb
in
cmp
std
push
std
gs
jns
ljmp
add
shrb
popa
fbstp
xchg
sbb
stos
pop
ret
pushf
sbb
cmp
sbb
ret
gs
cltd
sbb
icebp
dec
test
aas
inc
cmpsl
push
sub
push
sub
stos
xor
jl
pushf
rorb
sti
xchg
pusha
repz
je
int
nop
out
or
subb
sub
jne
sub
fidivrl
dec
cmp
pushl
clc
js
cmp
add
ds
in
cli
mov
movq
insb
test
inc
clc
push
mov
push
xchg
int
push
mov
pop
pavgb
repnz
std
push
fnstsw
sub
jne
ja
sahf
push
inc
jns
jmp
dec
imul
out
inc
iret
sub
or
fs
mov
movl
js
outsl
div
sbb
sub
pop
shrb
test
cmp
test
xorb
jne
cltd
sbb
and
inc
mov
in
or
jmp
addr16
push
repz
cmp
xchg
insl
cmpsb
cwtl
jmp
lock
cmp
inc
imul
cld
or
out
pusha
cmp
and
mov
int3
or
push
and
sub
mov
cmpsl
push
pop
mov
in
push
sub
imul
mov
xchg
cmpsb
cld
adc
sbbb
mov
sub
sub
dec
loope
jnp
sbb
fdivl
leave
imul
and
xchg
push
inc
es
cld
push
mov
shr
js
inc
jne
aaa
sbb
push
or
dec
data16
push
adcl
or
adc
pop
test
mov
aam
cmpsb
mov
loope
dec
cmp
outsl
ficomps
stos
js
lret
rep
ss
movsb
mov
in
lahf
loopne
mov
lods
jns
call
push
add
testb
inc
call
pop
shlb
fwait
jae
aad
dec
test
cmp
pop
ret
xor
cmp
rclb
fcom
in
aas
sub
xchg
inc
xchg
ds
ds
jnp
mov
orb
sti
cmp
mov
inc
mov
dec
cmp
jbe
dec
cmp
cmpsb
jns
into
mov
sbb
fidivrl
stos
out
xorb
fsts
jo
or
subb
xchg
in
inc
shrb
clc
or
inc
pop
mov
add
outsl
push
mov
cmpsb
push
scas
mov
andl
bound
ficomps
pop
in
inc
inc
nop
adc
cmc
jo
mov
sahf
and
mov
add
lahf
stc
or
pandn
sahf
stos
and
mov
push
ljmp
xchg
je
lods
add
aas
mov
xchg
lea
shll
cmp
outsl
push
adc
mov
movsb
add
rcl
into
lods
cmp
jg
or
sbb
les
or
iret
mov
pop
cltd
pop
cmp
mov
loopne
mov
out
jle
jno
cli
insl
adc
dec
and
inc
fidivl
inc
mov
ret
lods
ret
pop
sbb
pop
add
dec
roll
sahf
aad
ficompl
sub
out
or
das
jns
and
dec
mov
cmc
insl
dec
jb
dec
sti
pop
mov
mov
mov
sbb
mov
jg
and
into
movsb
pop
pop
repnz
ljmp
pop
adc
or
jno
sbb
lcall
push
les
mov
outsb
mov
pop
je
xchg
movsl
xchg
xor
xchg
push
addr16
das
movsl
mov
mov
cmp
rep
dec
or
aas
in
sbb
out
rcl
or
lret
push
outsb
scas
dec
lcall
repnz
and
leave
xor
gs
iret
fsub
jl
lahf
mov
and
mov
pop
adc
lds
lock
movsl
sahf
ror
mov
sahf
pop
ret
mov
xor
push
iret
lret
in
das
je
leave
sarl
movsb
mov
mov
out
rcll
jecxz
loope
inc
fs
stos
dec
addr16
mov
ret
int
cwtl
bound
fidivs
mov
push
pop
ficoms
adc
inc
push
add
sahf
or
and
push
push
cmp
pop
cmpsb
adc
sbb
fdiv
adcb
add
neg
ss
mov
in
loopne
mov
push
aam
jbe
ds
fists
xor
lret
sub
aad
jnp
hlt
notl
fadd
sub
and
push
fildl
push
pop
cmpsb
insl
rcl
addr16
sbb
cltd
pusha
cmp
dec
and
xor
jb
and
arpl
or
mov
push
mov
adc
xchg
or
mov
addr16
loopne
add
or
mov
clc
addr16
mov
mov
loop
int
dec
mov
mov
pop
push
pop
sbb
clc
mov
cmp
mov
repz
in
imul
ret
shl
loope
popa
mov
jecxz
adc
arpl
jne
sbb
sbbb
mov
inc
in
aas
jmp
cmpb
imul
cs
mov
and
mov
pop
pusha
xlat
rcrb
les
pop
mov
lahf
in
dec
sbb
sub
dec
push
sub
stos
or
push
xchg
cwtl
sbb
dec
sub
mov
leave
pop
daa
popa
in
jp
fbld
movb
mov
dec
js
rol
xchg
mov
sbb
push
mov
rcl
jbe
mov
orl
cs
jle
cmp
cld
iret
and
ss
les
mov
push
jns
or
sub
nop
push
pop
je
es
pop
xchg
cli
mov
sbb
rcl
sbb
xchg
insl
shr
inc
mov
xchg
xor
mull
and
lret
out
mov
or
cmp
xor
pushf
leave
mov
fxch
mov
and
int3
jo
sbb
repz
sub
xchg
jne
cwtl
jmp
inc
loop
sbb
pop
adc
sbb
mov
add
xor
adc
xchg
cmp
pop
lock
stos
in
addr16
jnp
testb
mov
cwtl
in
int
test
adc
push
inc
call
push
cmc
mov
mov
and
pop
in
push
out
std
stos
sub
jae
push
ret
insl
cmp
popf
movsb
pop
mov
mov
jns
and
dec
dec
and
aam
lret
push
aad
jnp
sbb
add
inc
cmpl
and
mov
mull
cmp
and
xor
adc
or
ljmp
xor
or
gs
andl
push
or
xlat
sub
push
rorl
jno
js
daa
lret
fcoml
xor
imul
bound
imul
jmp
stos
cld
rol
adc
in
aas
add
adc
fstps
nop
stos
jp
je
sbb
push
addb
push
rcrl
push
cmp
push
lock
or
or
cmp
inc
xchg
or
mov
sbb
imul
sub
push
in
and
nop
jecxz
dec
inc
push
pusha
push
aaa
sbb
adc
iret
dec
ljmp
add
int3
enter
test
loop
mov
jmp
dec
mov
jp
mov
jne
jns
iret
in
ss
rolb
call
or
lds
scas
xor
jg
mov
xrelease
pop
push
pushf
ficoms
push
inc
in
xchg
sub
fsub
shr
stos
jp
aam
mov
cmp
shlb
sbb
mov
push
push
fs
sbb
push
mov
aaa
and
pop
mov
pop
xor
or
ficomps
jmp
or
or
xlat
movsl
lods
inc
iret
and
adc
add
pop
arpl
ja
ret
jb
mov
xor
pop
jp
es
jecxz
adc
jl
jecxz
scas
aas
stos
mov
in
imul
inc
jae
call
xor
xchg
pop
lret
pop
aas
in
iret
aaa
outsb
xchg
adc
pop
bound
jo
pop
xor
not
mov
push
in
jg
cltd
xchg
rorl
test
fcmovbe
test
and
int
lods
out
or
mov
mov
popf
cmp
xchg
mov
xchg
in
mov
jle
dec
push
stos
pop
cmpb
pop
jno
add
data16
popa
xchg
pop
test
mov
jmp
leave
mov
nop
mov
or
mov
pushf
jnp
xchg
notb
loopne
sub
jecxz
scas
movsb
and
jge
pusha
fs
adc
divl
call
aam
adc
or
inc
sbb
xchg
mov
mov
add
jae
mov
cmp
scas
sub
iret
add
pop
lods
rcr
loope
insb
jp
std
push
cmpsb
jns
icebp
lcall
loopne
and
jmp
lea
mov
in
mov
movsl
mov
mov
dec
mov
imulb
lret
scas
subb
ret
enter
or
mov
ja,pt
lods
jge
lret
xchg
xchg
std
push
fs
insb
lret
xchg
push
xchg
ja
mov
push
xchg
shl
aaa
xlat
dec
xlat
xchg
cmp
arpl
mov
and
or
lods
cld
ja
mov
iret
out
pop
fnstcw
fstl
clc
fwait
pushf
xor
fistpll
outsb
movsb
dec
jge
pop
sti
and
jge
out
dec
repz
add
insl
es
daa
sarb
jae
aaa
cli
jle
mov
gs
inc
pop
imul
inc
hlt
lds
leave
inc
fcmove
mov
mov
jmp
xchg
xchg
push
jae
push
out
cmp
dec
leave
push
stos
xchg
out
or
scas
popa
pop
roll
clc
mov
mov
xchg
xor
and
out
movsb
mov
push
scas
add
sbb
xor
outsb
mov
push
or
jns
push
loope
mov
stos
jecxz
pop
dec
jg
sti
cwtl
outsl
in
cmc
popa
jle
jmp
cld
xchg
mov
jp
dec
aad
xchg
jno
fs
int
lods
jle
daa
popa
jbe
loop
dec
add
pshufw
popa
inc
dec
and
loope
add
ret
sbb
testl
lahf
int
push
ficomps
les
xor
jbe
dec
sahf
jne
or
sub
pop
jmp
ss
mov
xchg
xor
sub
lods
inc
pusha
cld
sbb
dec
cs
add
and
leave
cmpsl
test
mov
adc
sbb
lcall
aad
inc
ret
sahf
pop
jnp
inc
sarl
dec
ficoml
lea
xor
test
pushl
lea
and
xchg
adc
call
icebp
pop
and
jbe
pop
repnz
xor
fstps
mov
and
push
daa
push
mov
and
or
mov
out
hlt
lret
ret
xchg
jno
mov
orl
sbb
jno
jns
mov
pop
addl
popa
lock
fisubl
into
daa
adc
adc
mov
or
les
mov
aaa
inc
xor
adc
and
fwait
xchg
mov
lds
iret
inc
add
int
loop
rcrb
cmp
mov
in
cmpsb
sbb
fcomi
or
add
xchg
jno
cmp
mov
add
push
popa
push
sub
adc
leave
int3
cmp
or
xlat
pop
faddl
testb
jnp
mov
std
mov
pop
xlat
xor
clc
bound
mov
lret
stos
imul
cmpsb
or
pop
lcall
sub
xor
lea
test
aad
scas
mov
xchg
or
or
add
mov
push
push
test
or
pop
and
cli
jg
nop
mov
push
jmp
test
dec
mov
stc
fbstp
mov
lret
inc
lahf
push
pop
pop
imul
pusha
aaa
loope
in
cmp
stos
lods
andb
xchg
dec
cmp
add
push
push
and
push
ret
push
xchg
lret
push
push
ljmp
mov
test
sahf
sbb
mov
jbe
ss
xchg
inc
ljmp
dec
dec
pop
mov
cmp
mov
out
push
adc
sub
mov
fsubrl
sahf
mov
iret
cmp
jnp
mov
cld
clc
lret
call
popa
add
mov
pop
xor
xchg
cltd
jmp
push
xor
movsb
adc
mov
push
fnsave
subl
add
xchg
into
push
sub
mov
bound
mov
jnp
jmp
push
adc
fidivrs
lock
mov
je
stos
push
sbb
or
mov
cltd
out
test
leave
lcall
mov
outsl
dec
inc
js
popa
pop
pop
jbe
cmp
cs
stos
add
adc
push
imul
lock
or
sarl
repz
cli
mov
ljmp
fabs
loope
out
jae
daa
push
xchg
mov
aaa
es
xchg
cmp
subb
negl
xor
arpl
jg
sahf
push
xchg
mov
cltd
cmp
jns
in
fwait
lahf
push
push
dec
orl
cli
or
jae
movsb
cmp
sarb
sbb
lds
xlat
adc
aad
push
push
lods
dec
lods
or
sub
movsb
adc
mov
push
inc
incb
and
dec
fwait
mov
in
popa
insl
pusha
sub
jbe
inc
test
push
mov
sbb
aas
push
out
cmpsb
push
and
cli
out
lret
outsl
adc
fwait
xor
adc
pop
sbbl
js
jae
add
xchg
xor
rcrl
mov
xlat
jo
sub
lea
push
int
cmpsl
aam
cltd
mov
cmp
in
sahf
pop
jg
and
push
shl
pushf
and
orb
test
out
lret
add
sbb
das
sahf
push
orb
mov
xchg
push
mov
mov
xchg
cli
test
cmp
inc
andb
dec
je
lret
and
iret
repz
and
jo
aad
scas
out
cltd
incl
lcall
xchg
out
add
es
push
xor
push
or
sbb
fldcw
mov
xor
xchg
frstor
xchg
outsb
bound
push
dec
adc
pusha
jmp
xchg
push
mov
jns
leave
in
pop
stos
xchg
repnz
shll
ds
inc
jno
in
dec
frstor
pop
sti
test
sub
imulb
out
stos
xor
lcall
insl
cmp
mov
fs
mov
jecxz
movsl
sub
pop
cmp
mov
rcl
mov
fmull
lret
and
outsl
cmp
adc
cmp
pop
inc
mov
addr16
adc
shll
add
pop
push
sub
push
fistps
aas
adc
movsl
add
fsubl
insl
cmpsb
cld
add
movsb
cmp
bnd
les
imul
test
loopne
aaa
mov
iret
out
mov
push
add
lcall
leave
cld
das
pusha
negl
pop
mov
addb
mov
lods
cmp
push
cmpsb
pop
je
push
xlat
imul
cs
pop
inc
mov
idivl
inc
in
test
stos
sub
ret
and
dec
stos
push
jns
aam
inc
adc
push
jg
daa
ja
notb
mov
or
mov
inc
out
or
lret
cmp
push
jns
cmp
pop
fdivr
sbb
cmp
jo
mov
pop
adc
xchg
fbstp
dec
loope
pop
shlb
imul
incl
cmpsl
in
xchg
or
sub
ror
roll
pop
int3
stc
or
aaa
fisubl
imul
sub
outsl
mov
ds
popa
fwait
rorl
xchg
dec
xorb
dec
in
fwait
xchg
lds
ja
ljmp
pop
inc
rcr
xchg
cwtl
mov
fdivs
outsl
adc
fwait
push
popf
xor
mov
adc
sbb
jmp
ret
out
adc
jnp
and
enter
xchg
in
aad
mov
mov
test
das
ds
int
fsubl
cld
fstps
pusha
jno
push
sti
and
mov
sub
cwtl
fdivs
push
test
jg
jbe
fcomps
es
xchg
out
add
and
ja
daa
ret
add
pusha
and
push
mov
les
xchg
or
mov
dec
and
push
jae
enter
fiaddl
jo
sub
sarb
add
push
cmp
sarb
add
mov
xor
and
es
cltd
jne
or
add
cld
cli
shrl
leave
sbb
lods
xchg
mov
popa
lods
and
mov
jno
xchg
lret
xchg
aas
scas
ret
clc
mov
cmp
in
cmpsb
and
inc
ret
iret
mov
sahf
pop
aaa
jne
sbb
vpaddusw
cwtl
sub
cltd
fstl
cmp
jno
sahf
xchg
loop
in
push
push
insb
or
add
mov
loopne
ljmp
div
das
hlt
cmpsl
pusha
mov
adc
lahf
mov
add
jg
out
mov
outsb
cwtl
cmc
cmp
pop
dec
scas
sub
inc
mov
ret
pushf
mov
sub
mov
jnp
fsubrs
mov
sbbb
ss
xlat
lods
iret
xchg
jns
fistps
bound
adc
mov
ja
sub
jp
sar
adc
xchg
aad
push
push
mov
or
jmp
leave
aaa
mov
int3
shl
sbb
fistps
adc
enter
ret
sarb
mov
divb
mov
sub
mov
scas
sbb
mull
addr16
dec
cli
stos
push
fcompl
xchg
bnd
inc
sub
sahf
repz
xchg
mov
push
or
leave
push
js
mov
imul
ret
mov
jbe
ja
jge
lret
adc
dec
and
jae
rcr
lret
add
mov
subl
xchg
jnp
out
nop
push
cs
loop
push
lcall
ss
jp
repnz
fcoms
adcb
mov
pop
fnsave
xor
xor
cwtl
dec
and
adc
adc
xchg
lcall
push
mov
aad
adc
fstl
rcrl
sub
inc
jge
test
repnz
mov
lea
fnstenv
pop
test
pop
shrl
std
aaa
cli
push
xchg
lds
sub
mov
rorb
dec
pushw
js
sbb
lock
and
jp
jle
stos
mov
mov
add
cld
cmpsl
ret
enter
push
push
or
enter
pause
sub
xor
adc
mov
xchg
pop
pusha
addb
inc
or
icebp
shrb
mov
cmp
mov
addb
or
dec
mov
xchg
add
inc
inc
jns
and
cmp
test
hlt
cmpsl
popf
lcall
imull
nop
out
mov
sbb
inc
xchg
mov
dec
push
sti
out
jb
cmovne
push
into
xchg
mov
pop
xor
and
jae
daa
cmp
mov
jmp
cmp
push
gs
into
rcll
shlb
insb
lcall
jae
push
mov
inc
mov
mov
mov
fidivrl
sub
in
cmpsb
lahf
loope
mov
das
mov
inc
jns
aas
test
js
test
adc
das
push
jno
sti
decl
fwait
xor
cmp
sub
and
xchg
pop
stc
push
js
push
mov
sbb
xchg
adc
das
xor
adc
cltd
arpl
push
mov
in
stc
js
cs
push
dec
imul
ret
sbb
pop
xchg
push
add
loop
xchg
je
into
stos
aaa
fwait
mov
mov
jl
test
hlt
jg
out
mov
xchg
xchg
xchg
cli
jns,pt
and
icebp
add
mov
pop
mov
pop
mov
loope
add
rclb
insb
inc
insl
jp
sbb
jmp
sbb
and
push
insl
sarl
stos
xor
leave
aad
cmp
repz
test
nop
sbb
lcall
mov
xor
sub
xchg
movsl
jo
add
pop
mov
shl
out
push
cmc
xor
mov
lods
jp
loope
mov
in
lock
mov
popf
adc
push
inc
sbb
aaa
push
pusha
xchg
sub
out
sub
adc
mov
out
movsb
cmpsl
mov
mov
xor
jl
dec
push
xchg
or
enter
adc
fldcw
pusha
imul
jp
subl
mov
in
xchg
ficomps
push
or
fmull
pop
xor
call
sub
sbb
lods
nop
jo
sub
mov
pusha
lock
cmpsl
mov
and
out
mov
xlat
in
push
in
push
push
mov
lods
insl
or
ljmp
imul
lds
inc
mov
les
mov
jae
lds
stos
xchg
push
adc
fsub
dec
or
iret
cli
cmp
xchg
scas
push
xor
ficoms
filds
mov
adc
popl
jle
ja
pop
outsl
std
cmc
rcll
fldenv
int3
push
push
xchg
sbb
sbb
stc
popl
add
push
xor
dec
dec
push
xchg
mov
cmc
jne
subb
or
stos
jns
cmp
fidivrl
enter
dec
or
mov
aaa
mov
jle
jno
sbbl
cli
inc
insl
lahf
cmp
cmp
xchg
mov
xor
mov
fisubs
inc
pop
bnd
dec
fsts
mov
adc
outsb
mov
pop
pop
fwait
add
mov
pop
fstpt
mov
divl
mov
jo,pt
in
dec
out
sti
adc
cmp
movsb
add
mov
scas
je
or
mov
dec
addr16
dec
xor
pop
jecxz
lods
adc
sub
push
push
repz
pop
out
adc
data16
das
mov
leave
xchg
mov
data16
mov
push
mov
rol
mov
sub
pop
jb
xor
arpl
loopne
dec
je
mov
fcomip
int
mov
push
cmp
inc
push
rcll
lds
ret
fld1
inc
es
dec
sbb
test
fisubs
inc
adc
and
notb
pop
pop
inc
inc
out
mov
inc
fs
sub
xor
fnsave
pop
pop
xchg
xor
fnstsw
aam
das
push
sub
jg
dec
aas
out
lret
fimull
adc
in
mov
repz
lret
aas
incb
mov
addb
jbe
xchg
add
sub
out
push
mov
xor
sbb
in
out
push
cmp
mov
jbe
xchg
jmp
sbb
cmp
data16
fcomip
xchg
add
inc
xor
dec
cs
push
pop
sar
mov
jnp
sahf
popa
enter
mov
test
cmp
lret
jge
shl
mov
inc
repnz
shrb
lahf
sti
fucom
xor
push
mov
stos
insb
and
imul
out
adc
rorl
arpl
jne
cmp
ss
call
sub
stos
jne
cltd
push
lock
mov
les
adc
sbb
in
mov
fistpll
subb
and
jnp
js
mov
mov
xor
mov
push
fsts
pop
das
inc
loope
data16
xlat
stc
cmp
dec
dec
cld
pop
xor
ficoms
adc
mov
adc
push
popf
jge
xor
inc
add
push
xorl
mov
lds
add
mov
imul
pushf
lods
mov
aam
cmp
arpl
cmc
sbb
push
aam
out
movsb
xchg
cltd
sbb
fsubrs
and
bound
add
loopne
mov
stos
imul
mov
push
add
mov
sub
inc
daa
pop
sbb
in
std
mov
pop
or
imul
repz
adc
jmp
inc
imull
int
mov
xor
stos
ret
jo
aad
pop
jmp
cwtl
int
mov
push
pop
jne
out
lahf
popf
cmp
mov
movsb
andl
inc
fstps
and
push
frstor
adc
jle
mov
xchg
jmp
lahf
leave
sbb
jbe
cmc
aam
adc
fldt
xchg
cmp
mov
pop
imul
xor
lods
cmp
dec
and
pop
cmp
test
and
cmpsb
add
lret
xchg
je
lea
fists
jge
daa
adc
lret
pop
dec
adc
mov
inc
ja
lods
icebp
ret
adc
push
pop
or
outsl
cmp
daa
xchg
lahf
xchg
loope
lock
insb
sbb
scas
add
xor
addl
mov
or
out
jp
ret
fdivl
out
jmp
outsl
stos
ficoms
pop
int
and
inc
adc
daa
xchg
leave
fidivrl
xchg
xchg
inc
cmp
movsb
int
nop
jmp
add
lcall
int
loope
xchg
mov
icebp
jge
mov
or
rcll
push
loope
div
add
imul
jp
repz
push
data16
pop
sbb
jo
ss
shll
mov
pushf
push
cmp
add
mov
fsubs
inc
outsb
cli
addps
add
jmp
xor
xchg
mov
int3
ljmp
in
cmp
popa
jne
push
xor
cltd
std
sbb
sti
fwait
fs
inc
xlat
repz
mov
lods
gs
mov
mov
ljmp
dec
jp
cli
lock
jae
leave
xor
jns
cmp
imul
and
pop
lea
cmp
pop
test
or
add
ret
mov
in
sarl
rolb
mov
cltd
cmp
pop
std
stos
daa
out
lcall
xor
enter
in
stos
adc
int3
pop
cmp
mov
fcoms
out
inc
sub
sbb
sahf
mov
roll
scas
pop
inc
push
cmpsl
add
loope
add
push
arpl
pop
push
dec
dec
jp
inc
and
aad
add
pop
mov
fcmovnb
xor
ss
push
fidivrs
mov
aad
and
popf
inc
lret
push
addr16
fs
cmpsb
mov
pop
jecxz
ret
push
add
pop
push
cmp
aam
aas
dec
mov
and
mov
mov
enter
fstl
mulb
rcl
nop
sub
sub
mov
jmp
jg
or
mov
inc
mov
xchg
rorl
xchg
ss
cmp
pop
je
xor
and
mov
pop
sbb
pop
mov
or
mov
inc
sbb
cld
mov
mov
and
mov
movsl
jge
add
pop
adc
xchg
jns
loope
mov
call
ret
lahf
inc
lret
dec
rorb
cmpsb
cmp
lret
lret
lods
mov
or
cld
adc
popa
xchg
push
inc
xor
outsl
icebp
pop
loope
mov
sub
mov
mov
xchg
pop
subb
mov
cmpsb
mov
jg
lahf
orb
outsb
inc
dec
pop
test
sahf
push
icebp
into
jno
test
pushf
das
adc
xor
jnp
jae
leave
cwtl
mov
aad
cmpsb
xchg
ret
push
rclb
dec
loop
sbb
loope
dec
add
outsb
mov
mov
outsb
in
xor
lahf
add
jne
pop
jg
lock
sbbl
sub
mov
cli
sahf
add
dec
cmpsl
add
ljmp
and
ljmp
ljmp
fnsave
lea
test
dec
cmc
jle
jae
pushf
popf
and
jecxz
scas
push
cli
daa
lahf
out
add
jb
js
jae
xor
out
out
insl
or
hlt
mov
mov
push
push
inc
mov
adc
push
fwait
mov
mov
aad
sbb
insl
rcr
bound
mov
out
add
fsubr
add
out
xlat
inc
or
cmp
cmp
fstps
pop
mov
hlt
xchg
adc
cltd
pop
popa
inc
sti
addr16
test
pop
movsb
jnp
xchg
pushf
dec
cmpsb
adc
hlt
fwait
rcll
or
xor
movsb
or
and
addr16
out
mov
dec
fnstcw
fdivr
mov
loope
add
leave
mov
mov
push
xor
mov
iret
xor
xor
xchg
daa
rclb
lods
inc
pop
repnz
mov
mov
lock
mov
jg
xor
pop
push
ret
cmp
or
out
inc
xchg
scas
ja
sbb
inc
sub
mov
push
mov
push
pop
jns
lods
or
insb
aad
mov
fisubrs
pop
addr16
adc
mov
lret
push
dec
lahf
add
dec
fsubl
pop
lock
jns
ret
push
rorb
or
ss
jmp
cmp
icebp
xor
aad
push
xchg
add
hlt
jecxz
mov
scas
inc
js
push
lock
mov
repz
in
int
ficompl
out
push
test
sbb
jbe
push
add
cmp
bound
push
clc
repz
xchg
add
push
jp
cmp
add
pusha
mov
fildl
test
xor
push
and
pop
fcmovnu
mov
std
clc
pop
in
or
cmp
pop
inc
cmpsb
cmp
cmp
add
lcall
cmp
pop
pusha
out
aaa
imul
dec
add
inc
lds
adc
test
pushf
insl
xchg
adc
dec
movsl
loop
mov
inc
or
aam
sbb
cli
fists
inc
mov
mov
outsl
les
push
out
adc
jl
dec
adc
aaa
mov
das
push
fs
mov
cmp
cs
addr16
push
ret
sbbl
ds
mov
imul
idiv
mov
and
out
dec
mov
loop
icebp
lcall
in
jbe
cmp
jb
and
jb
or
push
and
inc
mov
icebp
fisttps
rorl
dec
lock
sbb
cmc
icebp
cmpsl
loope
fildll
and
jge
mov
push
mov
sahf
pop
cmpsb
ja
sub
cmp
sbb
jb
push
mov
pop
jp
or
fwait
cmp
addr16
js
into
pop
lret
leave
lock
cli
sub
stos
and
pushf
pop
in
inc
mov
movsl
shlb
pop
push
insl
je
in
pushf
insb
xor
bound
adc
pop
inc
jg
jmp
mov
pop
jnp
ljmp
jp
in
push
and
in
or
and
fnsetpm(287
jge
nop
lahf
push
push
sub
add
xchg
movsb
mov
lods
lret
pop
loop
pop
mov
mov
jge
mov
stos
jg
lcall
and
aas
sub
les
testl
and
lods
jmp
fildll
loop
stc
cwtl
sub
xor
pushf
cmp
adc
dec
test
mov
mov
leave
mov
xchg
pop
loope
lods
mov
sbb
and
js
shll
ret
sbb
lds
xchg
xor
mov
fstl
imul
dec
fsubl
sub
dec
push
jo
leave
out
test
in
dec
ffreep
cmc
adc
xor
push
push
adc
lods
sbb
xor
rorl
cmpsb
mov
add
nop
and
cmp
sub
push
pop
dec
incl
sarb
sub
inc
hlt
lds
shl
mov
pop
aaa
xchg
add
jge
cmp
xor
sub
pop
pop
sbb
scas
fcmovbe
fstpt
pop
addr16
mov
inc
in
outsb
mov
test
sbb
jo
mov
cmp
int3
bound
js
andb
push
outsb
sbb
and
test
xlat
js
inc
mov
sbb
mov
jmp
xor
xor
lret
cli
sub
sub
sub
ret
jmp
adc
jnp
mov
jae
sbb
cltd
or
aam
int
bound
mov
ud0
jl
and
jo,pt
test
aam
push
scas
aad
mov
popl
popa
cltd
mov
in
nop
mov
push
jae
data16
jae
icebp
lea
or
mov
pop
adc
push
cmp
fisubl
fwait
popf
cli
jbe
mov
data16
xor
sbb
sbb
test
mov
pop
inc
jnp
inc
cmpsb
dec
adc
out
sarb
out
push
je
jns
pushf
inc
scas
loopne
pop
pop
arpl
mov
mov
iret
mov
subl
leave
rorb
loop
and
clc
and
shll
sub
in
push
jecxz
mov
stc
mov
leave
pop
sub
dec
mov
push
adc
adc
sbb
in
aam
rcll
lahf
dec
lods
cmc
dec
pop
xchg
enter
mov
mov
jle
mov
in
sbb
pop
or
jbe
jmp
or
dec
outsl
in
shlb
in
pop
mov
loop
stos
insl
mov
leave
add
rolb
je
sub
ljmp
xchg
cmp
push
lahf
and
push
outsb
inc
rdpmc
cmp
and
jmp
lods
ud1
jle
and
movsl
sub
xor
icebp
pop
push
cmp
stos
mov
aad
call
sti
popf
rcrb
add
in
mov
add
lea
inc
insl
stos
test
rorl
xor
mov
dec
mov
pop
fsubrs
sub
outsb
mov
push
fmul
mov
cld
stos
push
mov
les
pop
add
cmp
sbb
ret
and
outsb
jbe
cli
add
mov
sub
fidivrl
shlb
test
stos
mov
into
sbb
dec
push
imul
loope
push
xchg
push
mov
les
pop
nop
push
adcb
pop
push
faddl
xchg
leave
lea
ret
in
and
sub
cmp
pop
dec
sub
das
mov
js
int3
pushl
or
xchg
jge
cli
and
dec
cmp
push
xor
pop
in
pop
and
aam
xchg
arpl
or
jno
movsl
fsubrl
hlt
mov
jmp
aad
and
push
sbb
jae
aad
pop
ds
xchg
mov
inc
movsb
push
mov
lods
das
sub
xchg
jl
lock
mov
push
test
iret
adcb
aad
jmp
jmp
sub
jo
stos
lods
inc
sub
cmp
mov
sub
adc
adc
cmpsb
dec
fisttpl
jns
push
cmp
xor
add
or
es
xchg
xor
shlb
fnstcw
inc
lahf
sub
xchg
enter
rcrb
xchg
in
or
ljmp
fiaddl
dec
mov
mov
cmp
imul
lods
push
jmp
inc
push
fdiv
scas
jnp
mov
stc
and
and
and
nop
aad
icebp
dec
push
je
out
pop
daa
shlb
jp
lods
not
mov
outsl
iret
std
mov
inc
aad
stos
loope
aas
sub
xor
std
dec
xor
and
sbb
cmp
push
stos
ret
inc
push
insl
ja
mov
imul
loopne,pt
lods
mov
jno
pop
out
out
or
sbb
push
int
inc
cld
lods
sbb
data16
push
sub
add
push
adc
sti
cmp
pop
inc
mov
popa
xchg
sbb
pushf
stos
pop
adc
push
stc
sub
insl
xor
push
mov
xor
test
inc
out
inc
roll
pusha
andl
leave
aas
cmp
stos
push
jg
sarl
outsl
in
push
xor
mov
data16
sbb
mov
outsl
mov
cmp
std
clc
out
jle
cltd
pop
adc
sub
add
xchg
pop
mov
out
sub
mov
stos
loop
insb
dec
adc
mov
inc
sub
jg
cld
adc
test
jge
out
pop
out
nop
lcall
adc
lods
cmp
and
xor
mov
inc
gs
sbb
pop
add
faddl
jo
xchg
cli
adc
lret
ss
jge
nop
mov
mov
rclb
sbb
pop
ja
sbb
gs
out
jl
jae
dec
das
cmp
call
jl
xchg
and
roll
xchg
es
in
sbb
imul
fstp
mov
int
arpl
mov
out
scas
lahf
xchg
les
jne
pushf
cmp
scas
inc
pop
lahf
iret
divb
sbb
add
adc
divb
adc
movsl
fwait
divb
inc
cmc
in
roll
sahf
jmp
shlb
push
inc
pop
cli
lds
cmc
daa
out
and
dec
push
arpl
mov
inc
cmp
inc
in
rcrl
ds
push
movsw
int3
cmp
pop
dec
daa
jno
test
je
imul
inc
or
test
or
jae
xor
pop
mov
pusha
sub
dec
dec
pusha
fdivr
fistl
lock
mov
mov
sti
xor
cmp
in
xchg
andl
xchg
dec
mov
icebp
and
and
test
lahf
sarb
sub
fwait
add
fldt
cmp
cmpsb
sbb
mov
loope
mov
cwtl
or
mov
addr16
pop
jle
repnz
rolb
jb
pop
dec
inc
jmp
sub
stos
inc
xchg
dec
pop
lea
add
mov
mov
xor
jae
inc
add
ljmp
sub
fldcw
movsl
xchg
dec
aas
mov
xor
cmp
xchg
notl
jbe
leave
stc
ljmp
adc
push
cwtl
jmp
fnstenv
dec
es
mov
int
aaa
sahf
or
mov
jle
mov
push
subl
cmpsb
cs
fisttpll
mov
jno
test
test
jge
hlt
mov
daa
xchg
out
loope
push
push
add
rolb
daa
jae
push
aaa
bound
push
xor
cs
outsl
cmp
enter
jmp
icebp
dec
adc
hlt
and
dec
jge
movsb
and
dec
xchg
adc
pop
cmp
xor
push
sub
fcoml
xchg
cmp
sub
cmp
mulb
fdivs
daa
mov
cwtl
imul
sub
insl
fcmovb
push
test
push
aas
test
xlat
or
push
dec
mov
xchg
xchg
adc
sbb
arpl
ljmp
in
jg
sub
xchg
idivl
aaa
push
mov
roll
int
gs
sti
dec
fcomps
cmovs
shlb
push
loop
cmc
nop
and
push
les
dec
ss
pusha
inc
lcall
adcb
pop
mov
xor
inc
mull
and
insl
adc
add
ror
dec
repz
rcpps
mov
aad
sub
movsl
inc
fidivrl
jp
cmp
fidivrl
data16
loope
xlat
ret
repz
repz
cmp
loopne
push
fiadds
sbb
and
ljmp
in
jne
test
pop
jno
xchg
pop
insl
addb
fstl
js
fildll
cld
push
pop
mov
popa
test
out
add
jbe
push
in
xor
sbb
pusha
bound
sti
mov
insb
xchg
mov
ja
cwtl
mov
fists
imul
inc
pop
rep
fstps
dec
cmp
in
testb
bound
in
mov
mov
fsubrl
mov
push
and
stos
pop
aam
cmp
popa
sub
and
nop
dec
scas
adc
mov
mov
and
push
xchg
stos
push
push
xor
mov
add
arpl
ss
loop
cmc
pushf
fs
mov
xchg
sbb
push
pop
fwait
outsl
aaa
push
loop
jl
imull
lahf
enter
pop
in
hlt
mov
mov
mov
jecxz
jne
in
mov
gs
data16
mov
ja
lods
jb
mov
test
mov
xor
mov
lods
and
pop
pop
push
add
xor
mov
test
add
sbb
dec
cli
scas
test
loop
pop
mov
ficoml
cli
imul
mov
mov
mov
dec
loope
lods
out
aam
addr16
and
add
pusha
jg
fcomi
mov
incb
and
mov
inc
jae
mov
lret
dec
xchg
sbb
cmp
push
push
scas
jg
cmp
or
push
jbe
pop
lret
iret
jbe
push
scas
insb
xchg
add
int
pop
jmp
xor
add
adc
dec
pop
dec
cmp
in
inc
add
es
lret
xor
push
scas
add
pause
xchg
popa
movsb
jnp
sbb
enter
push
stos
adc
loope
inc
mov
xor
ja
paddd
jb
mov
shrl
jne
cmpsl
call
jp
inc
subl
das
mov
sti
sub
inc
enter
je
mov
cmp
mov
jmp
mov
mov
mov
push
add
les
jo
fcomps
sarb
int
push
lds
jo
xorl
jno
jg
mov
dec
mov
jle
shrl
shrb
inc
xchg
inc
lods
ss
shll
push
out
aam
out
lcall
jae,pt
inc
loope
xchg
movsb
ljmp
jg
out
xchg
mov
pop
push
lods
lret
xchg
ljmp
xor
cmp
or
imul
cwtl
imul
push
ja
in
cs
aam
inc
sbb
or
enter
les
ret
dec
cmp
adc
das
mov
cmc
movsl
cmp
movsl
sbb
mov
and
jg
cmpsb
sbb
pop
gs
lret
jmp
in
adc
lock
andb
mov
or
adc
and
arpl
push
enter
fsts
stc
and
stos
pusha
add
and
pop
push
jbe
lret
lds
fisttpll
push
dec
mov
icebp
fsubrs
ss
jecxz
ror
mov
push
aam
repz
jg
sbbl
fnstsw
cmp
jb
jmp
int3
or
in
mov
mov
sbb
lahf
adc
and
inc
jae
shlb
dec
fwait
cli
mov
or
sub
cmp
or
scas
fnstenv
test
push
les
pop
movsl
dec
les
or
cmp
mov
bound
jg
add
push
push
add
mov
and
xor
pop
add
lods
fadds
into
or
mov
data16
out
jne
mov
loope
test
dec
jne
leave
inc
ficompl
imul
test
mov
insb
xor
pop
and
jle
mov
sbb
aaa
jnp
adc
loope
ja
sbb
ja
jae
lock
and
dec
mov
inc
adc
ret
dec
sbb
inc
in
stos
out
xchg
insl
inc
xchg
rorb
cmp
jl
push
stc
lods
aaa
or
scas
cmpsl
or
xor
dec
add
xchg
aas
inc
xchg
cs
ljmp
mov
cmc
push
or
call
mov
cmc
pushf
int3
nop
pushf
popa
jnp
dec
in
push
outsl
jno
int
cli
mov
cmp
pop
lea
les
stc
push
push
mov
push
sahf
dec
std
int3
inc
xor
int
loop
push
ja
push
mov
lods
xchg
jmp
xor
adc
daa
loopne
iret
or
lahf
into
sub
subl
xor
mov
loop
push
loop
sbb
js
dec
repnz
jns
and
jnp
xor
loope
insl
fsubr
ds
sub
jae
adc
pop
mov
dec
enter
dec
data16
ds
sub
sbb
jno
xchg
add
dec
fmull
mov
push
pop
rolb
xchg
dec
idiv
into
mov
mov
out
pcmpeqd
icebp
jb
mov
stc
fs
jno
cmp
push
in
mov
addr16
pop
push
stc
jbe
sarb
jns
mov
mov
dec
or
pushf
add
pusha
in
mov
sbb
jne
sti
ret
pop
sub
sar
pop
push
stos
push
gs
inc
cli
mov
xor
fistps
shlb
xchg
rcll
bound
aam
sub
ljmp
mov
sub
adc
inc
and
lret
xchg
push
imul
mov
imul
xchg
test
in
dec
xchg
das
cmp
sbb
sub
jno
sub
ljmp
rclb
ret
lahf
fwait
js
dec
push
das
push
pop
push
mov
add
outsl
cmp
xchg
sub
fsubl
test
xchg
add
repnz
push
or
in
add
mov
pop
sub
xchg
frstor
sbb
in
fildl
cmp
outsl
enter
inc
push
jns
add
aaa
jnp
dec
ret
pop
or
lcall
lret
lcall
lcall
movl
dec
fdivrs
mov
cmp
test
dec
mov
loope
pop
insl
shll
stos
mov
inc
mov
add
addr16
mov
xchg
adc
pop
mov
lret
rcrb
xchg
pop
add
jns
divl
cmp
pop
and
add
out
call
add
jno
adc
or
mov
lock
out
pop
imul
or
cmp
ret
or
aas
and
pop
xor
or
test
loope
loop
enter
hlt
enter
xor
or
sub
imul
mov
add
mov
shll
inc
aam
int
sbb
sub
add
pop
imul
fwait
mov
mov
loop
pop
or
aam
lcall
int3
mov
xchg
out
aas
ljmp
fdivrl
jecxz
pop
pop
out
out
inc
sbb
aad
jb
adc
inc
jge
adc
imulb
mov
and
out
cmpsl
add
or
shll
push
loopne
lock
push
fnsave
cmpsl
xchg
insb
pusha
mov
cmpsl
out
dec
pop
lret
or
mov
xchg
imul
adc
inc
addl
mov
or
mov
dec
mulb
and
loop
je
pushf
mov
adc
add
test
shll
in
jle
cmpsl
int
add
ss
cmc
lret
in
insl
iret
dec
ljmp
and
mov
test
and
fidivs
out
iret
call
icebp
int3
out
xchg
xorl
jnp
inc
push
arpl
repz
lret
push
pushf
int
push
stc
loope
orb
and
mov
out
cs
cld
jl
hlt
adc
ret
shlb
xor
ja
lock
cld
adc
pop
add
gs
pop
mov
mov
imul
insb
lret
testl
mov
sahf
add
pusha
sub
gs
mov
push
jbe
andb
imul
repz
insb
inc
pop
mov
aad
mov
adc
mov
push
cmp
or
push
push
xchg
add
loop
lcall
in
push
imul
or
cmp
mov
das
outsl
dec
xchg
mov
jecxz
mov
int3
cs
mov
clts
add
aaa
mov
cmp
imul
push
icebp
xchg
iret
mov
ret
inc
gs
sub
mov
loopne
fistpl
pop
xor
mov
fbstp
out
fs
pushf
pop
cmp
addb
stos
jb
jl
and
pop
mov
mov
jns
cmc
add
out
loopne
test
dec
jge
or
and
jb
test
loope
add
adc
aad
pop
fdivs
iret
dec
xlat
and
call
clc
xor
dec
clc
cmc
popf
dec
imul
cli
ds
xchg
sbb
pop
jle
mov
dec
mov
sbb
mov
lea
pusha
mov
icebp
push
out
sti
push
pop
mov
or
popa
jmp
add
inc
pusha
ror
push
mov
and
in
cmpb
and
sub
pop
pusha
mov
mov
lret
push
shr
xchg
mov
cmc
push
loopne
enter
insl
int3
leave
insl
dec
ljmp
test
mov
and
test
arpl
or
stc
jp
add
cmp
cli
xchg
fwait
testl
fstl
enter
or
int3
and
sbb
xchg
mov
sub
pop
and
xor
enter
cmc
popa
std
cmp
testl
or
pop
aad
mov
mov
mov
mov
sub
imul
rcrb
mov
and
dec
out
sub
lret
xorb
push
jns
jg
sbb
mov
adc
es
aam
cmp
repz
movl
aaa
sub
cmp
add
mov
jl
cmpsl
test
and
sbb
mov
sub
mov
rcll
mov
fsubl
ja
xlat
jb
cmc
mov
adc
fs
inc
jb
in
mov
lret
mov
sub
mov
push
mov
daa
mov
out
scas
gs
les
mov
adc
or
sahf
cmp
xchg
inc
mov
popf
jmp
jnp
mov
cmp
xchg
mov
fs
xor
in
inc
sti
mov
mov
jle
adc
rcrl
mov
movsl
call
das
dec
xchg
out
sbb
jg
nop
mov
pop
nop
cmp
daa
out
xor
push
dec
out
xchg
lods
adc
fwait
rcrb
test
push
inc
cltd
mov
ja
pop
xor
push
mov
scas
sahf
lret
cmp
imul
or
mov
mov
sahf
and
out
fistpl
add
add
fst
mov
fimuls
jg
inc
push
add
adc
inc
cwtl
insb
test
push
jp
sub
repnz
dec
cmp
jae
movsb
cmc
addr16
ficompl
push
call
std
push
jge
fcoml
dec
pop
sbb
jns
andl
mov
rcr
or
mov
in
jne
and
call
mov
pop
dec
fidivl
test
xchg
jge
loope
aad
sbb
push
ret
ficoms
addr16
cwtl
in
push
jl
push
adc
clc
and
xchg
arpl
jle
lret
xor
sub
bound
mov
test
push
repnz
dec
movsl
jle
or
inc
sub
mov
jne
inc
jmp
jg
inc
adc
adc
aam
mov
cmp
jne
mov
pop
sbb
scas
cmp
fwait
sarb
sti
imul
mov
push
divb
sub
add
mov
pop
dec
sbb
and
xchg
mov
es
mov
pop
xchg
addl
mov
clc
jbe
or
lods
outsl
cltd
dec
scas
dec
sub
fucomip
test
mov
movsb
cmpsb
xchg
aas
sub
in
loopne
ret
fucom
enter
jl
out
jb
sbb
movsb
push
cmc
sbb
mov
ret
dec
rcrb
iret
shrl
mov
ljmp
jae
aas
data16
mov
shr
js
test
pop
in
popa
cmp
sub
push
cli
fimuls
fdivrl
popf
cmpb
and
cmpsl
andl
jg
pop
cltd
sarl
pop
and
xor
in
outsb
mov
test
inc
mov
repz
add
mull
dec
cmpsb
xor
sbb
and
inc
std
adc
xchg
rcr
xchg
movsl
icebp
adc
or
adc
pop
in
jns
cmp
lea
push
add
mov
movsb
cmp
pusha
shrl
add
outsl
data16
push
mov
jnp
out
sbbb
inc
insl
push
repnz
push
daa
pop
repz
cmp
addr16
ret
cwtl
pop
mov
mov
inc
xchg
out
stos
sbb
filds
addr16
fldenv
shl
mov
loopne
dec
jnp
pop
mov
aam
inc
sub
pop
xchg
dec
nop
xchg
dec
mov
inc
cmp
or
or
xor
fpatan
cltd
arpl
mov
jle
mov
ds
test
in
jp
xlat
mov
das
adc
add
xchg
cmpsl
lods
ficoml
ret
testl
aaa
fisubrs
insl
aaa
push
test
push
mov
mov
movsl
add
mov
loope
sbb
test
pusha
fimull
or
mov
lret
mov
pushf
out
inc
out
leave
stc
dec
cmp
jl
cmpl
mov
jl
mov
sbb
int
stos
push
sub
les
cmpsb
fucomp
sbbb
repz
cltd
pop
ja
ss
fld
push
lcall
adc
aam
xchg
or
cld
push
inc
xor
xchg
pop
add
xchg
lahf
jb
pushf
sbb
dec
js
jecxz
pop
mov
shlb
xchg
and
test
adc
inc
push
cmc
and
or
jo
es
jns
in
mov
inc
aad
repnz
mov
pop
and
and
stos
loope
shr
adc
cmp
repz
sbb
movsl
jns
and
sahf
mov
js
ficoml
adc
data16
push
stc
mov
repz
lret
inc
push
daa
lock
jnp
shlb
fsubrl
xchg
clc
fadds
fs
fcoms
ja
int
pop
xlat
orb
test
push
icebp
pop
rcll
pop
in
pop
scas
rcrb
jg
pop
out
xchg
aaa
jp
push
pop
fst
stc
inc
rcll
cmc
lds
xor
add
dec
scas
cld
out
scas
xor
or
mov
fdivp
pop
aam
push
dec
je
cmp
out
cmp
insl
lods
or
mov
cmc
shll
or
pop
scas
adc
push
xchg
dec
cmp
xlat
cwtl
outsl
jno
lahf
jge
mov
mov
pop
in
add
and
clc
and
sbb
dec
inc
mov
ljmp
enter
sbb
mov
into
lds
jmp
clc
xorb
and
adc
in
add
pop
and
push
cltd
push
std
push
sub
push
test
add
xchg
jno
xor
and
jb
sbb
xlat
jae
adc
not
es
xchg
add
push
lock
cmpsb
mov
jecxz
out
sbb
cltd
movsl
add
xor
ss
hlt
pop
push
sbb
popa
mov
dec
loop
fdivrl
push
repz
inc
ljmp
adcb
mov
std
rorl
add
xor
inc
daa
adcb
or
lret
lock
dec
adc
push
push
arpl
js
dec
xor
out
arpl
push
pop
jle
addr16
inc
jl
xchg
pop
sahf
stos
stos
in
push
add
outsl
pop
loopne
push
pop
xor
jge
flds
inc
jne
notl
jmp
popf
xchg
loope
test
xchg
enter
popa
ret
fildl
arpl
movsb
iret
push
pop
xchg
push
pop
and
mov
mov
out
jo
xor
jbe
test
add
fnstenv
or
pop
inc
daa
and
and
mov
int
lods
sbb
jmp
cmp
and
dec
push
test
out
push
loope
sbb
adc
dec
and
mov
in
lods
in
int
popa
xchg
stos
out
testl
cmp
mov
push
movb
bound
movsl
mov
inc
movsl
or
lret
inc
mov
pop
nop
in
negl
and
mov
xor
ss
sarb
cs
pop
es
loop
push
sub
repz
inc
mov
dec
mov
adc
dec
les
sbb
imull
scas
xchg
jge
mov
xor
cs
push
adc
imul
or
inc
mov
aas
cmpsb
or
mov
cmp
jae
stos
imul
stos
dec
sbb
je
mov
scas
daa
dec
mov
ss
lret
pop
sub
cli
ljmp
jno
xor
push
mov
insl
rcpps
mov
add
mov
hlt
in
xchg
repz
cmpb
jge
mov
push
xchg
addr16
sbb
into
ja
js
into
jmp
xchg
bndstx
insb
and
mov
call
test
mov
jg
sti
outsl
xchg
xchg
jne
dec
sbb
mov
rorl
push
aaa
loop
clc
popa
loope
fidivl
mov
sahf
sub
mov
pop
cld
sub
mov
popf
mov
enter
data16
mov
fdivrl
mull
rcrl
inc
inc
ficoml
repnz
inc
inc
sub
sub
and
add
int
lret
pop
daa
and
mov
xor
inc
jnp
mov
and
sarb
out
insl
dec
cmp
aam
mov
movsb
pusha
jmp
jno
jg
jo
or
mov
aad
clc
sbbl
lds
stos
and
and
ret
adcb
xchg
mov
es
inc
int3
cmp
out
lret
rol
push
in
inc
push
testb
sub
jb
jbe
mov
add
mov
enter
and
pop
mov
mov
ret
out
imul
out
in
rcrb
add
jns
and
jg
or
aad
scas
lock
adc
ret
aas
xchg
mov
popf
fs
cmp
sarb
loop
push
mov
ja
push
pop
in
pop
stos
xor
mov
or
mov
or
test
sti
lock
inc
popf
add
hlt
movsl
mov
sub
mov
fucomi
repnz
movsb
push
sub
dec
jb
sbb
sub
xchg
jle
mov
orb
push
cmova
inc
pop
push
sub
xor
andl
cltd
clc
xchg
mov
out
mov
movsb
out
mov
repz
cmpsl
jns
jle
pop
fneni(8087
push
add
outsb
push
add
popf
xor
mov
mov
pop
aas
and
adc
xchg
lcall
inc
out
mov
in
movsb
cwtl
mov
dec
fidivs
fcomps
je
gs
xor
sub
lret
or
mov
mov
mov
sbb
pushf
lds
xchg
xor
lret
pop
cmp
fsubl
push
lods
stos
cwtl
jae
mov
mov
jle
stos
cli
fsubl
pop
shlb
adc
mov
cmp
mov
sbb
mov
jp
test
jb
sub
je
lods
xor
cmp
push
mov
test
jg
mov
jg
gs
jecxz
xchg
push
jnp
loope
aas
add
aad
das
jmp
popa
add
insb
lcall
cltd
jle
cmp
mov
mov
push
or
mov
cltd
div
inc
loope
xchg
dec
pop
push
out
fwait
mov
mov
fnsave
pop
out
jmp
xchg
test
xor
js
xor
cmp
lret
mov
xchg
mov
sbb
and
dec
dec
jg
mov
sub
fcoml
aaa
push
add
dec
jge
out
push
sbb
sbb
sub
leave
out
inc
ret
loop
outsl
es
mov
mov
out
and
mov
xchg
std
push
lods
jo
into
and
pushf
je
out
rcrl
dec
cmp
xchg
jns
addl
cmp
imul
adc
mov
inc
in
pop
sbbl
jmp
cwtl
cld
push
fnstsw
decl
inc
gs
fisttpl
jle
popa
and
and
jo
cwtl
gs
int
int
aam
add
repz
cs
dec
cmp
aam
mov
pop
fldcw
sbb
andps
lods
xor
je
jbe
fcomps
sbb
mov
pop
ss
cmpsl
ds
sub
dec
inc
js
je
lods
popa
movsb
movsl
push
je
loop
call
pop
add
mov
mov
dec
std
mov
popa
out
sub
sbbb
orb
lock
xor
and
fstl
jecxz
and
fistpl
fdivs
pushw
xchg
mov
mov
jno
jae
je
sbb
fsub
imul
push
xchg
xchg
sub
mov
cmc
fistpll
repnz
rorb
pop
loopne
mov
sbb
cmpsl
cmp
fstl
mov
dec
dec
icebp
pop
imul
lret
imul
push
xor
add
out
pop
call
sahf
cmp
xor
cmp
dec
sbb
mov
aas
mov
out
loope
mov
dec
sub
pop
pushf
stos
sub
cmp
dec
and
dec
pop
int3
xchg
adc
in
popa
jg
dec
inc
rcl
cwtl
pop
sbb
jo
add
xchg
push
mov
and
pop
jo
pushf
in
fsubl
aad
repnz
inc
sub
in
and
aaa
inc
out
out
adc
add
and
jne
add
imul
loope
jge
inc
cmpsl
hlt
cmp
pusha
mov
iret
mov
movl
imul
mov
cmp
dec
adc
hlt
shlb
adc
jns
cmpsb
cltd
xchg
push
mov
cmpsb
sti
jp
fisubrs
mov
f2xm1
xor
xchg
sarb
movsl
mov
cmp
shrd
imul
push
inc
pop
lret
rcrb
iret
sub
sub
leave
incb
mov
insb
push
dec
shrb
mov
mov
jo
mov
pop
xor
mov
stos
std
pop
sbb
insl
push
inc
push
call
ror
push
ss
rclb
lcall
mov
xor
mov
mov
pushf
orb
push
pop
mov
ss
jg
in
cmp
or
and
lahf
or
data16
push
out
and
fstps
cmp
dec
sub
xchg
je
insl
jno
mov
pop
int3
push
roll
rcr
lods
repnz
fiadds
sbb
iret
lds
shl
or
jb
jge
inc
rol
cmp
je
cltd
mov
scas
pop
push
push
fcmovnbe
jge
addr16
loopne
lods
add
dec
mov
push
ret
dec
sbb
stos
mov
repnz
adc
jb
fwait
mov
jns
pop
cmp
call
fidivrs
pop
adc
imul
shlb
repnz
sbb
shrl
cmpsb
push
add
fsubs
test
inc
cs
std
cs
bound
andl
mov
inc
dec
std
jp
repnz
cwtl
jb
inc
fwait
or
fldl
ljmp
fs
sub
sub
jbe
shl
fstps
sahf
adc
fnsave
mov
test
push
iret
ljmp
add
mov
ds
xchg
sbb
imul
repz
mov
pusha
mov
test
cwtl
or
mov
movsl
sbb
xlat
insl
shl
pop
inc
rcll
roll
in
imul
loopne
push
cli
xor
pop
rcrb
cli
dec
mov
xor
push
sbb
mov
int3
decl
push
pop
mov
test
add
xlat
or
nop
cwtl
scas
adc
repnz
push
int3
es
sar
add
mov
xor
or
pop
cld
pop
lock
push
addr16
rcrb
iret
push
out
bound
mov
add
sbb
mov
loopne
leave
jle
nop
fisttps
xorb
push
xchg
sbb
cmp
es
lods
pop
std
out
xlat
cmp
insl
or
in
or
es
fidivrl
ja
icebp
mov
xor
pushf
mov
ret
mov
xlat
inc
arpl
andl
lcall
test
dec
dec
xacquire
andl
ljmp
adc
inc
hlt
stos
push
pop
imul
imul
or
int3
jne
cmpl
fucom
stc
fiadds
cmp
fnsave
hlt
lock
loope
pop
hlt
inc
insb
or
sbb
loopne
inc
sbb
imulb
push
in
xor
insl
cmp
add
dec
loope
jge
push
int3
sarl
imul
add
mov
ret
or
sub
pop
pop
or
ss
push
and
pop
adc
add
pop
pop
fwait
mov
test
add
and
test
mov
jno
jge
mov
aas
dec
or
add
sub
sahf
sbb
out
mov
dec
jge
loop
cli
jne
iret
outsb
xchg
addr16
mov
fcomp
neg
jle
ds
xchg
int
scas
call
and
add
mov
xlat
inc
out
cmpsl
cmpsl
sbb
xor
jle
cmc
pop
adc
xchg
imulb
rsqrtps
cmp
xor
and
xor
ljmp
dec
mov
movsb
mov
sbb
lea
jbe
mov
jae
or
sbb
test
jecxz
pushf
pushw
inc
cmpsl
in
call
cmp
mov
imul
cs
xor
int
mov
or
cmpsl
insl
inc
mov
int3
xor
dec
add
or
es
cli
push
jbe
mov
lahf
push
mov
popf
decl
add
popf
out
cmpsb
xchg
adc
imul
cmp
dec
ja
les
xchg
mov
fmull
push
call
push
push
cld
adc
inc
scas
cmp
dec
clc
js
xchg
jbe
daa
outsl
jbe
xor
push
xchg
xor
pop
std
dec
pop
mov
add
push
clc
jae
mov
cmpsl
jno
push
cmc
jp
ficompl
loopne
xor
imul
jnp
push
outsl
adc
push
sub
jnp
push
cmp
scas
pop
cmp
outsl
aas
cmp
pop
rol
fidivl
pop
cld
cli
aad
fimull
cmpl
or
lret
push
mov
mov
loope
popa
jmp
push
xor
movsb
add
movsl
lds
jl
inc
jnp
adc
add
xlat
xor
out
add
cmpsb
jae
jo
loope
stos
es
cmp
cmpsl
addb
cs
fmul
leave
into
loop
jmp
xchg
xorps
sub
sarb
adc
xchg
js
dec
push
xchg
pusha
adc
push
push
and
jnp
pushf
mov
dec
lahf
iret
pop
cmp
pop
cli
popa
addr16
push
sbb
inc
or
or
or
xor
and
push
sub
out
adc
sarb
pop
ds
pop
in
ja
mov
xor
lahf
dec
sbb
pop
dec
adc
or
or
mov
and
lods
cmpsb
cmp
xor
cltd
fs
addr16
or
cmp
inc
jge
icebp
inc
inc
mov
mov
out
xchg
mov
mov
addr16
add
stos
dec
in
pusha
arpl
rcrb
jnp
and
out
clc
add
mov
les
ret
sti
xchg
out
mov
out
das
decl
jne
ljmp
jp
push
clc
out
add
mov
sbb
jmp
inc
mov
lret
test
ret
imul
mov
daa
data16
adc
mov
and
imul
push
jg
and
fstl
sub
xor
mov
jno
lock
mov
mov
lds
ljmp
movl
inc
mov
add
pop
add
mov
out
test
or
push
adc
and
popf
push
and
mov
rolb
test
insb
fdivrs
das
jecxz
orl
mov
mov
pop
lret
clc
adc
ljmp
jno
push
xchg
jbe
scas
pushf
xchg
push
and
pop
sub
pop
jae
pop
xor
test
movsl
xchg
add
xor
xor
push
lcall
pop
jg
and
js
pop
sbbb
out
and
mov
sub
or
cmp
int
sub
sub
jbe
jge
lock
pop
int
mov
aaa
imul
cmc
sbb
add
mov
mov
jno
cltd
aad
push
sub
inc
sub
subl
jecxz
mov
and
sub
mov
int
xchg
negl
cmp
cmc
cli
add
insb
fldcw
js
sub
ret
out
sub
addl
xchg
int
jmp
add
loope
enter
outsb
test
pop
push
jg
and
shl
xchg
dec
xor
and
dec
popa
adc
repnz
test
sub
dec
int3
lock
mov
xor
inc
mov
insl
stos
jno
mov
add
loop
lock
cmp
mov
jg
cmp
mov
sub
sub
xchg
ds
in
jnp
dec
out
mov
and
out
sar
jg
and
fmull
inc
push
lds
mov
lds
cmp
lock
add
in
push
ja
adc
push
les
adc
rorb
test
dec
stc
sbb
mov
xchg
push
jle
xchg
add
ret
pushf
sbbb
adc
inc
xchg
push
push
sub
inc
jp
mov
out
pop
scas
cli
dec
lahf
out
xchg
fwait
scas
xor
and
jb
pop
cmp
adc
or
cltd
mov
xor
scas
mov
add
cltd
lods
shr
mov
bound
arpl
stos
scas
loope
adc
scas
out
mov
fcompl
in
mov
mov
pop
imul
ret
movsb
in
sti
cmp
fwait
or
xor
les
mov
in
mov
sbb
mov
sub
hlt
outsb
imul
sahf
xor
out
or
mov
push
mov
arpl
add
push
push
ds
nop
jo
fcomps
dec
xor
cmp
shrb
jecxz
fcoml
aam
loope
add
out
mov
jae
dec
fisttpll
adc
dec
sbb
cmp
sub
sbb
push
gs
jae
mov
cmpl
push
popf
lret
je
test
lret
and
and
ja
in
inc
sbb
mov
ret
scas
push
inc
jae
popl
sahf
mov
scas
pop
fcmovu
and
or
mov
jp
mov
lea
cmp
jbe
sar
je
sub
xchg
int3
daa
push
icebp
mov
push
mov
adc
in
cmpsl
inc
std
cwtl
clc
and
fsub
imul
andb
jmp
adc
pop
pop
xchg
loope
push
push
pop
jmp
hlt
outsl
mov
adc
and
aam
repnz
jg
je
sub
iret
test
and
mov
push
hlt
jl
fwait
jg
repnz
xor
je
mov
adc
aad
sbbl
call
xor
lods
int3
pushf
push
out
mov
shr
inc
outsb
neg
test
dec
stos
flds
jl
push
adc
sub
xchg
or
sub
sub
cmp
mov
fadds
and
loope
and
jns
mov
jle
movb
dec
cs
in
pop
mov
das
mov
adc
ficomps
mov
out
add
popf
lods
lret
lcall
jmp
scas
pop
test
or
add
in
jb
mov
rclb
lods
jo
out
pop
sub
push
push
mov
dec
out
outsl
fistpll
sub
dec
cmp
fdivrs
in
push
movsl
push
rcrl
and
push
mov
cmp
and
mov
rorb
cltd
dec
addr16
ss
cmp
adc
mov
mov
inc
dec
mov
pop
popf
cmpsb
mov
dec
xchg
cs
test
sbb
jmp
mov
jmp
negb
add
cmp
inc
xlat
icebp
in
pushf
lea
adc
daa
xchg
aad
test
xchg
or
addl
mov
insl
fsubr
push
jmp
inc
adc
in
pop
mov
sbb
daa
dec
mov
adc
mov
cltd
movsb
stos
inc
adc
cmp
pushf
jmp
fs
cmp
gs
popl
pop
inc
jmp
repz
adcl
divl
movsb
adc
adc
cmc
popa
sbb
pop
and
in
push
gs
scas
leave
xor
call
loop
sti
cs
adcb
mov
xchg
push
cmp
dec
cs
sbb
cs
pop
rorb
jle
adc
imul
hlt
sti
les
out
cs
insl
lahf
nop
imul
ljmp
cmpsb
push
and
and
mov
fmull
subb
clc
and
and
fiaddl
push
xor
jge
jl
mov
mov
add
push
ljmp
mov
arpl
mov
adc
popf
test
dec
mov
mov
je
sbb
std
lea
rolb
adc
rcrl
mov
rcr
dec
jmp
mov
mov
push
xchg
jae
clc
xor
lcall
ja
inc
dec
test
je
push
push
pop
push
movsl
xchg
bound
pop
jo,pt
mov
jne
pop
test
inc
fldt
ds
ja
and
loop
test
test
xorl
fistl
dec
movsb
frstor
into
ljmp
pop
jg
jo
add
push
pop
jmp
push
in
push
ficomps
lret
mov
jl
sbb
cmpsl
adc
sar
jle
xchg
addb
insl
pop
dec
mov
or
mov
stos
lret
pop
outsb
repz
int
clc
sub
or
inc
fadd
jge
xlat
daa
mov
mov
fstpt
js
in
iret
divl
ds
pop
mov
xor
xor
int
sub
fwait
int3
aas
test
shrd
dec
lret
int3
out
popf
cli
pop
mulb
xor
lcall
xchg
scas
and
ja
adc
outsl
xchg
insb
adc
and
inc
test
int
and
jg
out
xor
push
xlat
pop
in
scas
add
lret
insb
jne
lret
mov
add
and
jbe
inc
test
fbstp
adc
pop
or
stos
popf
jp
inc
add
hlt
loope
xchg
cmp
shll
rorb
sbbb
fwait
lods
lcall
or
xchg
pop
dec
loopne
fdivrl
adc
aaa
sbb
xchg
int
adc
xchg
bound
repnz
push
mov
repnz
rorl
jg
sub
cs
pop
mov
add
jg
js
dec
cmpsl
ret
pop
outsb
shr
loop
fs
mov
xchg
clc
jecxz
aam
movsl
ret
mov
fisubs
push
mov
jns
je
pop
mov
cmp
test
and
push
sbb
bound
outsl
rcll
cmpsl
add
mov
js
and
xlat
out
push
and
jg
imul
mov
pop
lret
rcr
repnz
mov
jl
outsb
cmp
fistpll
xor
push
xchg
push
nop
fnsave
fwait
dec
lea
aaa
rcrb
fsts
imul
aad
fmuls
mov
xchg
or
cwtl
or
cmp
and
add
test
jno
test
inc
push
jae
dec
imul
ja
sbb
in
mov
jl
nop
push
fxch
not
xor
pop
dec
adc
xchg
insl
dec
ret
pop
repz
lret
shll
enter
jae
xchg
out
ds
aas
jle
fsub
push
bound
repz
repz
mov
fidivrl
inc
pusha
inc
movsb
add
data16
mov
out
fwait
jle
add
aaa
fcoms
loop
movsb
clc
jb
mov
fiaddl
mov
stos
jb
nop
in
inc
call
insl
sbb
xchg
js
rorl
and
call
aaa
pop
popa
flds
xchg
mov
pop
popf
push
mov
push
dec
insl
sarl
pop
add
push
and
shl
push
mov
rorl
lock
jmp
jecxz
movsl
push
or
add
aad
testb
in
pop
fdivr
ret
js
jmp
jmp
ds
sbb
cmpsb
jg
adc
mov
cmp
add
xchg
out
mov
push
jmp
inc
mov
or
fwait
mov
fdivs
mov
cmp
test
jb
pop
ljmp
in
xor
add
call
sarl
fbld
mov
or
inc
adc
add
fwait
iret
inc
xor
mov
jnp
mov
ja
push
popf
es
imul
inc
jnp
jo
fs
xchg
cmp
sar
hlt
iret
and
push
test
insl
pusha
mov
push
inc
lcall
mov
out
hlt
add
mov
cltd
lock
imul
xor
bound
nop
push
mov
xor
pop
mov
mov
ret
push
in
mov
mov
and
xchg
pusha
jns
test
lds
ja
setnp
mov
xor
dec
jecxz
cmp
fs
jge
ljmp
into
ret
pop
cs
rcr
movsb
and
pop
pop
and
aas
xor
xlat
fs
pop
mov
js
jno
shrl
push
xor
rclb
decl
adc
mov
pop
or
dec
xchg
out
xchg
ja
add
negl
dec
negl
jo
aam
cwtl
cld
stos
fnstcw
bsr
adc
mov
xor
mov
cmpl
xor
or
push
ja
push
movsb
sub
mov
jae
imul
lods
jne
cmp
int3
lahf
mov
jne
xor
adc
out
cmp
fsubr
add
cmc
cltd
popa
rcr
xor
shrl
push
in
xchg
mov
cmp
cmp
in
out
imul
nop
sahf
sahf
mov
ret
mov
hlt
lock
xchg
in
aaa
pop
push
jmp
sti
out
into
inc
test
mov
or
cltd
pop
mov
repnz
xor
repnz
stos
cli
jbe
mov
out
subb
ret
xchg
jne
pop
push
negb
je
xchg
icebp
xchg
mov
xchg
pusha
sahf
lds
push
loope
mov
aaa
xchg
loopne
xlat
mov
fisubrl
rcll
out
ds
jo
inc
mov
imul
or
xor
inc
fildll
dec
stos
fiadds
and
mov
jl
insl
std
gs
push
orb
out
sti
pavgw
mov
adc
mov
adc
or
xchg
cmc
mov
jg
dec
push
mov
jp
idivl
jne
cmpl
push
in
out
leave
les
shrl
icebp
imul
popa
dec
sbb
fstpt
inc
adc
daa
fcmove
mov
loopne
xor
adc
hlt
flds
lds
out
push
leave
pusha
fcmovbe
loop
sub
sbb
pop
ja
aaa
pop
mov
mov
nop
dec
sub
add
cmp
popf
je
das
push
inc
das
lret
push
mov
mov
mov
and
push
and
xor
out
cld
cmp
push
cmp
fldl
jne
jg
movsl
arpl
je
loope
push
in
xor
sbb
ljmp
es
adcb
imulb
roll
sub
xor
xor
jns
inc
push
sub
mov
cltd
aam
mov
leave
icebp
jo
pop
loop
or
xlat
int
jno
enter
clc
out
mov
ret
jnp
cli
push
mov
leave
or
xorb
cmpsl
test
xchg
sbb
mov
enter
lea
mov
inc
jo
scas
mov
cmp
clc
add
lret
push
call
mov
lret
cld
jmp
iret
xor
sub
mov
and
jg
fmul
push
mov
inc
push
mov
pop
repnz
add
mov
fwait
pop
mov
push
jp
cld
aad
dec
out
add
adc
xchg
into
mov
push
mov
ljmp
push
das
out
std
push
add
inc
movsl
sbb
fcmovne
xor
ror
ret
stos
fldcw
mov
dec
push
sbbl
xchg
pop
sub
and
or
ds
jmp
pop
sub
dec
cmpl
pop
loopne
mov
rclb
icebp
or
add
jbe
inc
hlt
push
ret
popf
outsl
jge
sub
rorl
jecxz
xchg
lcall
cld
jno
sub
fildll
sub
or
add
adc
out
ja
cld
jg
aam
adc
sti
adc
add
inc
cmp
jo
bound
sbb
gs
into
push
add
mov
iret
jo
adc
sbb
dec
pop
subb
xchg
cld
jbe
pop
orl
pop
xchg
out
movsb
add
inc
movsl
and
fadd
andb
sbb
movsb
cmp
popf
or
mov
fmulp
out
mov
fldcw
stos
dec
mov
test
int3
inc
push
imul
sub
sti
out
xor
xor
enter
jecxz
imul
and
ret
fisttpll
ja
xor
pop
xor
inc
cli
push
lods
xor
sti
js
repnz
imulb
dec
subl
inc
inc
mov
or
dec
xchg
fadd
add
dec
jp
mov
fcmovne
in
test
shll
gs
into
lods
stos
xor
push
push
je
add
iret
nop
dec
out
push
insl
fcoml
lods
cmp
ja
out
mov
xor
jecxz
pushf
fidivrs
shlb
xor
and
mov
mov
jle
and
jg
and
mov
jl
mov
cld
dec
in
int
rol
sti
repnz
out
push
dec
loopne
clc
inc
cld
jle
adc
sbb
lahf
hlt
divl
out
push
into
outsl
pop
sub
jp
sub
nop
stos
inc
jecxz
inc
test
aas
leave
rcll
ret
push
or
leave
adc
xchg
adc
test
mov
or
pop
ljmp
cli
stc
repz
lods
xchg
or
das
dec
xchg
add
add
pop
jno
cld
xor
sub
add
out
and
mov
sar
adc
insb
andl
cwtl
mov
and
cmp
jne
add
inc
and
sub
push
jmp
xchg
popf
es
jmp
rolb
cwtl
lods
cwtl
ds
mov
cmp
lock
dec
test
loopne
sti
out
imul
jl
push
bswap
sub
adc
push
je
inc
addr16
adc
in
mov
xchg
pop
dec
sbbl
sbb
cmp
in
jp
xor
test
scas
xchg
addr16
pop
push
adc
sbb
gs
lock
iret
xchg
aad
insb
dec
test
in
mov
inc
aas
or
lds
mov
jae
movsb
pop
jle
cwtl
ffreep
xchg
mov
daa
in
outsb
xchg
xchg
mov
mov
or
leave
mov
popa
cmp
fwait
mov
test
jbe
jbe
and
add
inc
mov
pop
pop
inc
push
cli
addr16
pop
jnp
stc
fidivl
insb
cmp
shl
popa
icebp
add
inc
xchg
push
pop
mov
dec
insb
lods
pop
jns
adc
jle
lods
cmp
xchg
xchg
cltd
add
inc
es
xchg
mov
push
cltd
and
insl
xor
xor
rcr
xor
mov
add
aam
push
movsl
push
stos
outsb
xor
jno
stos
nop
bound
int3
mov
stc
adc
jmp
mov
or
orb
dec
mov
faddl
jnp
push
push
stos
arpl
push
das
adc
inc
arpl
in
test
and
xchg
jmp
shlb
popf
faddl
pop
stos
push
rorb
or
dec
out
jg
pop
dec
xchg
xchg
sub
inc
imul
stc
xchg
inc
aam
jno
stos
fstps
leave
cld
pop
hlt
into
mov
jns
adc
jns
and
pop
pushf
lock
jle
dec
mov
xor
inc
idivl
sbb
jge
sti
shll
movsb
jg
test
cvtdq2ps
js
add
mov
dec
cltd
imul
loop
pop
push
adc
push
stos
aaa
std
dec
mov
mov
lods
dec
add
pop
cmpsl
es
add
rcl
push
jle
push
fidivrl
les
loopne
push
aad
push
xchg
mov
xchg
js
outsb
mov
into
add
jns
inc
arpl
fsubr
shr
outsl
subl
jnp
mov
pop
test
sub
rclb
addr16
cltd
sub
lcall
popa
adc
int
sbb
lods
test
xor
test
leave
jo
mov
call
jmp
sbb
pop
mov
xor
jne
popa
pop
adc
cmp
add
iret
imul
cmp
xchg
aad
pop
or
dec
pop
xchg
mov
mov
ljmp
pop
push
and
mov
rorb
in
xor
push
shlb
sub
cmc
repnz
out
sub
fisubrs
xchg
es
or
aam
ss
movb
sbb
push
and
aas
notl
inc
out
pushl
ret
out
data16
js
cmp
popf
xor
fnstcw
fildll
out
push
push
jns
into
add
inc
add
les
ljmp
sub
dec
sbb
pop
adc
mov
divb
aaa
sbb
lret
scas
fdivr
mov
push
icebp
rol
pop
jg
push
ret
jp
outsl
cmp
mov
cltd
or
enter
push
mov
dec
xchg
lret
aas
and
shll
data16
xchg
ficompl
mov
cmp
call
arpl
xorb
popa
decb
jmp
imul
bound
out
mov
lahf
jg
or
rcrb
filds
jle
into
sub
repnz
mov
mov
gs
or
mov
adc
pop
pusha
loopne
pusha
xor
inc
push
cmc
mov
cmp
or
insb
push
repz
sub
fldl
sbb
out
aad
addr16
repz
push
and
cmpsl
xlat
dec
pop
ljmp
mov
sbb
mov
inc
pop
xor
loopne
imul
out
mov
or
mov
insl
pop
fldcw
jae
mov
lock
push
dec
dec
xor
test
pop
daa
gs
xchg
pop
lea
out
mov
add
mov
divb
sahf
adc
inc
sub
push
xor
mov
icebp
xchg
std
mov
fsub
repz
sarl
sub
xchg
arpl
pop
lcall
sub
enter
scas
mov
push
dec
in
add
lock
xor
shll
pusha
pop
in
sub
add
pushf
pop
sbb
push
fmull
sbb
inc
das
cmp
inc
sub
clc
cmp
jle
dec
sti
jg
icebp
and
mov
loope,pt
outsb
dec
add
cmpsb
add
jmp
add
adc
adc
add
adcb
sbb
hlt
ror
pop
mov
inc
aaa
dec
stc
dec
push
xlat
jnp
push
jecxz
ret
icebp
pop
sub
mov
sub
mov
ret
sbb
dec
into
jnp
imul
pop
mov
cld
fmull
push
test
mov
inc
sub
fsubrp
inc
sbb
test
xor
mov
adc
faddp
stc
ds
push
xchg
or
cmp
or
xchg
add
push
mov
mov
inc
xchg
movb
mul
loopne
push
enter
or
jp
lods
shrb
loopne
xchg
outsb
pop
cmp
les
dec
pop
pop
adc
mov
sbb
jg
and
mov
jno
sbb
xchg
lock
xchg
adc
ss
mov
dec
ret
js
bnd
std
fcmovne
xor
aaa
or
insl
rcrl
in
sarb
call
orl
pop
pop
mov
ret
andb
aas
cmc
adc
outsl
dec
pop
pop
inc
and
add
mov
adc
lahf
xor
xchg
scas
xor
popa
inc
ja
xchg
lret
mov
testb
pop
out
out
or
iret
adcl
or
mov
daa
sbb
pop
out
jbe
or
push
push
cmp
cwtl
leave
shl
add
and
aas
es
pop
push
imul
test
pop
insb
movsb
shrl
ret
add
and
inc
jl
jl
inc
shl
sbb
aam
cmpsb
push
pusha
xor
mov
bound
mov
mov
dec
jnp
sbb
mov
and
sarl
cmp
mov
mov
cmp
shlb
cmpb
pop
jns
lock
mov
mov
aaa
sub
js
jg
rcr
popa
inc
jmp
fdivrs
pop
ds
clc
xchg
add
mov
inc
push
sub
xor
loop
out
cmp
xorb
mov
or
lds
hlt
and
cmpsl
push
fdivl
mov
inc
fistl
and
in
add
das
push
push
pop
mov
repnz
aaa
cmp
mov
mov
lds
push
lret
cmp
and
jae
push
in
xor
ficoml
ret
inc
leave
ror
inc
pop
andl
xor
bound
sub
daa
daa
xchg
test
ss
sbb
adc
xor
dec
mov
outsl
mov
lods
or
rcll
push
dec
mov
sbb
cmp
fdivl
hlt
enter
call
sub
mov
test
cmp
xor
or
out
ja
es
aad
xchg
xchg
adc
outsl
push
pop
jmp
mov
sahf
inc
cmp
gs
pusha
out
sbb
stc
mov
xchg
pushf
mov
fs
outsb
mov
fistl
rorl
jmp
pop
jecxz
mov
xorb
sbb
imul
aaa
popf
and
mov
cld
jge
test
test
shlb
mov
gs
pop
mov
add
mov
cmp
xchg
insb
push
test
mov
jns
pop
scas
imul
adc
push
fsub
sbb
xlat
sti
into
daa
sbb
iret
add
add
xor
fs
adc
arpl
jp
mov
lods
jnp
push
outsb
inc
out
inc
add
aam
adc
dec
leave
testb
pop
outsl
mov
mov
cwtl
add
aas
dec
sub
and
push
mov
fbld
adc
je
cmpsl
mov
scas
enter
mov
and
inc
dec
and
mov
push
rolb
pusha
add
shll
data16
xchg
mov
je
into
movsl
mov
add
jp
gs
jmp
lret
rcll
mov
ds
cmpsl
imul
mov
loop,pt
mov
xchg
adc
jo
push
out
mov
test
adc
adc
stos
pop
xor
lcall
sahf
in
bnd
jle
insb
lods
gs
clc
mov
incl
inc
dec
ret
pushf
scas
jo
xor
fisubrs
pop
push
mov
jae
sbb
or
pop
and
cmc
dec
lock
inc
daa
outsb
icebp
int
jle
adc
inc
lcall
subb
ret
dec
dec
xchg
jne
sar
sahf
jge
rol
sbb
jb
iret
inc
pop
push
enter
cmp
and
lock
xchg
pop
test
insl
rcl
cmpsl
outsb
in
inc
sub
and
jbe
mov
popf
mov
sbb
xchg
pop
ja
imul
js
data16
push
cmp
stos
nop
out
scas
xchg
pop
test
mov
push
mov
mov
sub
popf
jl
adc
jae
push
das
test
rcrl
push
xor
mov
inc
add
jge
jecxz
xchg
sbb
cwtl
les
pop
mov
push
xlat
sub
sbb
pop
pusha
loop
push
aaa
fsubr
lahf
jp
xchg
xchg
hlt
cltd
dec
xor
mov
icebp
lods
pop
pushf
popl
ret
in
stos
mov
mov
xchg
jns
pop
adc
outsl
mov
jmp
outsl
xor
inc
outsb
dec
jne
push
cvtps2pd
jno
ret
or
jne
mov
cmp
aam
mov
loope
lret
and
xlat
jno
into
jb
sub
icebp
negl
cmpsl
sbb
push
and
out
movsb
outsl
pop
movsb
cwtl
ficoml
mov
scas
pop
adc
add
fs
xor
ficompl
cmp
add
inc
cmp
pop
cmpsl
pop
mov
loop
stc
test
mov
imul
jecxz
lret
or
lods
adc
jae
lock
cmp
add
push
fbld
jns
adc
adcb
out
and
mov
xor
dec
clc
sar
cmpl
mov
rcrb
scas
lret
sti
lret
dec
pop
ds
ret
scas
sbb
jle
bound
mov
and
enter
fiadds
stos
cmp
dec
mov
inc
jae
xchg
mov
stc
mov
cmp
aaa
or
jb
jge
repnz
rcl
insb
jae
fiadds
popa
inc
les
lock
mov
mov
jecxz
mov
mov
ja
jg
pop
lret
out
and
xchg
testb
out
test
repnz
ret
mov
jg
cli
inc
out
dec
jp
add
out
mov
nop
not
jp
clc
inc
pop
add
sti
xor
push
aam
lahf
out
mov
sub
push
push
push
inc
sbb
inc
xchg
sbb
gs
test
fcmovne
ffree
add
xlat
push
xchg
xor
dec
lods
push
jmp
out
lret
add
dec
dec
xchg
outsb
jno
inc
cmp
outsl
jne
add
sbb
xchg
popa
decl
xchg
sahf
arpl
sbb
shlb
outsl
fsubp
mov
ja
adc
test
push
sti
xor
mov
scas
mov
pop
xchg
mov
dec
add
jl
insb
sub
icebp
dec
test
sbb
sbb
fldt
pop
cmp
ret
dec
mov
jmp
lret
ss
out
fwait
jp
pop
pop
testb
push
xchg
stos
pop
and
sub
sbb
lock
lret
test
push
aas
adc
cmp
push
adc
lcall
pop
mov
lret
jmp
sbb
xchg
in
in
out
jnp
mov
les
into
in
push
mov
mov
pop
and
pop
ja
jmp
xor
aas
loop
jg
lods
jle
jmp
xchg
test
xchg
mov
pop
jne
cmc
daa
hlt
insb
cmp
pop
jno
jbe
xchg
push
push
mov
cmp
sahf
repz
mov
cmp
jb
or
popa
inc
test
pushf
fdivl
lcall
dec
mov
and
dec
mull
daa
sbb
cs
mov
sti
out
add
sub
nop
push
movl
mov
pop
cli
out
xchg
jle
xchg
xor
fdiv
loope
add
ljmp
out
mov
pop
xchg
push
in
fwait
ret
lock
sbb
or
dec
in
mov
xor
jb
jnp
push
enter
es
fbstp
adc
and
repnz
mov
jbe
cmp
sub
pop
imul
data16
xor
ret
out
in
test
movsb
lret
pusha
test
out
je
gs
cmp
sbb
add
movsb
lahf
jno
popa
std
push
dec
mov
xor
mull
add
in
cmp
das
mov
daa
push
mov
jmp
fsubrp
fstps
add
sbb
pushf
add
int3
das
xor
push
dec
and
xlat
hlt
in
enter
std
sahf
cmc
sub
ss
push
or
rcrl
mov
movsb
jae
and
out
mov
fwait
aaa
pop
jmp
pop
loopne
test
push
dec
xor
mov
test
cmp
aam
imul
cmp
enter
out
ret
pop
sub
sti
clc
sub
or
loop
out
aam
sub
xlat
fldenv
fs
cmp
pop
scas
sub
arpl
push
stc
aad
insl
call
sbb
cmp
pop
ljmp
out
push
ljmp
push
orb
inc
gs
mov
lods
mov
jbe
sub
push
adc
or
cmp
pop
hlt
lods
xorb
je
sub
orb
cmpsb
jne
cmpsl
cwtl
mov
cmpl
xchg
cmp
jecxz
aam
fisttpll
xchg
adc
jmp
andb
sub
pop
ss
ljmp
jle
adc
push
nop
ja
mov
or
in
imul
push
inc
aad
jg
xchg
inc
jbe
jae
mov
cwtl
bnd
mov
and
es
into
lcall
jbe
loope
fs
out
into
xchg
mov
fisubs
xchg
fs
add
fdivs
inc
mov
das
lcall
loopne
insl
test
mov
pop
adcl
std
sub
insb
jns
sbb
test
cmp
pop
lret
hlt
pusha
ljmp
popl
dec
push
pop
cli
shlb
sub
dec
mov
ret
pop
rclb
sub
dec
fnsave
lods
notb
adc
hlt
cmp
cmpb
or
mov
ffreep
out
sbb
and
adc
mov
fstpt
jg
sahf
pop
pop
push
enter
or
push
pop
iret
xor
lret
xor
push
std
jns
bound
pop
leave
mov
not
xor
fadd
xchg
xchg
push
xchg
push
xlat
outsb
push
stos
cmp
dec
adc
adc
call
ret
sarl
enter
lock
adc
js
aaa
movsl
imul
in
xchg
pop
into
repz
shlb
cmp
jle
push
cmp
in
inc
mov
xchg
or
je
mov
subb
add
add
jae
arpl
pop
push
push
push
push
in
mov
mov
outsl
jo
add
repnz
aam
out
sub
ljmp
sarb
xchg
aam
sbb
mov
cmp
imul
push
dec
fs
mov
pop
arpl
sub
mov
pusha
xor
into
cmc
pop
mov
pop
push
mov
dec
inc
adc
cmpb
mov
fs
dec
gs
scas
inc
mov
jo
outsb
das
mov
repz
mov
jg
in
add
fld
rclb
add
sahf
and
ja
add
pop
mov
mov
mov
push
push
and
sbb
mov
rcll
adc
mov
pop
jb
inc
aaa
xchg
jnp
pop
shrb
adc
xor
lahf
test
sub
xchg
xchg
cmp
rorb
sbb
ss
xchg
sub
xor
and
xchg
and
ret
in
jns
js
pop
dec
mov
add
push
dec
add
movsb
or
fiaddl
and
out
xor
push
lahf
std
in
dec
out
imul
sahf
mov
and
out
push
pop
lds
pop
shrb
jp
jl
add
or
clc
jecxz
mov
add
stos
jge
add
xor
cmpsb
and
push
out
lods
in
adc
loope
pop
dec
add
jbe
repz
jp
popa
sub
xor
mov
cmc
cmc
dec
pusha
into
mov
hlt
inc
out
in
insl
adc
std
mov
dec
pop
fs
in
mov
jmp
and
cmp
sbb
enter
jbe
popf
add
add
fcomps
pop
icebp
cmpsb
mov
enter
inc
xchg
daa
add
ds
dec
push
pop
inc
sahf
hlt
test
jns
mov
cmpb
es
adc
mov
push
cmp
inc
mov
aam
inc
std
dec
in
adc
xchg
sub
hlt
inc
fidivs
cmp
pop
jne
aaa
mov
or
add
sub
loope
sbb
mov
fcomi
ret
in
mov
loopne
je
rcr
std
or
push
les
les
lret
cmpsb
rcll
pop
xchg
xchg
jge
mov
rcrl
loopne
or
xchg
and
push
xor
insl
imul
sbb
fmuls
adc
cmp
xor
inc
cmp
xchg
adc
fstpt
imull
cmp
ljmp
xorb
xchg
test
pop
add
mov
lea
adc
mov
pusha
rcrb
xchg
dec
xchg
jae
inc
jmp
cmpsl
xchg
inc
dec
sbb
sti
adc
push
dec
int
sub
movsb
setae
fcmovbe
push
xor
jmp
int3
mov
mov
test
pop
xchg
add
pause
xchg
lahf
fldcw
and
jle
inc
jp
sti
cltd
test
sahf
fstl
push
xchg
in
mov
and
jmp
mov
mov
mov
test
mov
nop
jmp
mov
jo,pn
bound
add
cltd
testl
jmp
push
dec
pop
dec
inc
scas
fdivs
fsubp
pop
mov
lds
call
push
sub
mov
lds
repnz
in
inc
addr16
pusha
pop
das
mov
jo
shl
adc
call
je
mov
loop
fsubl
sub
mov
cmp
pop
fsubrl
punpcklbw
mov
lock
int3
arpl
fiaddl
in
mov
leave
bound
out
jmp
sbb
dec
test
dec
into
incl
lahf
imul
adc
stc
adc
movsbl
mov
cmpb
sarb
cld
es
aad
das
idivb
inc
xor
dec
sub
imul
xchg
pop
mov
push
insl
inc
cwtl
push
loop
xor
mov
icebp
outsb
xor
call
out
rcll
in
push
xchg
loop
push
mov
lods
cmp
stos
mov
adc
xor
dec
mov
icebp
and
sarl
ds
rcr
lcall
xor
js
or
cmpsl
mov
cmp
sub
mov
shll
push
cmc
and
push
das
adc
lods
aaa
xchg
mov
fsubrl
and
pop
inc
mov
arpl
mov
adc
cmp
push
push
inc
adc
push
rol
je
mov
pop
iret
dec
int3
into
lea
add
mov
jecxz
inc
add
inc
jns
xchg
mov
sub
jns
adc
lahf
aaa
adc
mov
push
jo
sub
pop
push
pop
xchg
shll
gs
lret
lods
sbb
dec
xor
imul
mov
dec
and
push
add
xchg
fldt
jne
outsb
adc
in
xor
dec
divw
push
pop
clc
push
push
push
nop
and
xor
test
sub
cld
pop
xchg
pop
inc
jmp
or
pop
or
dec
mov
sub
ds
jns
mov
daa
stos
pop
ss
test
or
jns
mov
test
and
dec
push
push
enter
shlb
jp
les
lahf
dec
and
mov
mov
cmp
jne
jb
xchg
add
sbb
push
cwtl
mov
jae
test
inc
loop
pop
add
arpl
div
or
inc
addb
mov
hlt
dec
sub
or
lds
cmp
xor
frstor
dec
aas
fxch
fsubrs
icebp
jno
add
aas
or
ss
imul
push
cmp
pop
pop
lcall
das
xchg
shlb
or
aam
sbb
push
rorl
test
push
xor
aam
xchg
sub
mov
lods
jno
hlt
mov
stos
ja
loopne
or
ret
pop
xchg
adc
enter
loopne
mov
add
out
mov
ljmp
sub
pop
loopne
test
xchg
add
fisttps
push
dec
adc
gs
pop
in
inc
js
popl
inc
adc
jno
mov
cmp
cmp
rcrl
notb
sbb
mov
fnstcw
inc
mov
fs
ljmp
rorl
vpxor
inc
add
cmp
xor
pop
mov
pop
push
cmp
xor
push
or
adc
push
jp
add
fabs
xlat
insb
aaa
cmp
divl
add
fsub
or
das
std
jg
cmp
into
sbb
lret
fs
dec
imul
sub
clc
and
fwait
ret
xor
idivl
cmc
lock
addr16
mov
ja
xchg
mov
movsl
insb
or
fiaddl
adc
test
pushf
sahf
pop
cmp
out
loope
sbb
gs
or
ret
dec
shlb
iret
lds
xchg
out
test
into
inc
xchg
cmp
lods
sbb
dec
insl
inc
and
jb
stc
lods
sti
lods
jne
xchg
jo
or
inc
mov
or
stos
push
dec
adc
rcll
mov
sub
imul
jne
push
subw
sub
outsl
in
inc
cmp
arpl
mov
jmp
pop
or
push
dec
sub
mov
mov
mov
dec
test
jl
sbbl
add
divb
lahf
push
stos
fistpll
sahf
mov
hlt
loope
lcall
sbb
sub
test
adc
ss
fdivrp
cmpsl
cmp
daa
das
in
xchg
cltd
testb
outsb
mov
into
adc
mov
jne
mov
test
test
mov
xchg
sarl
sub
cmp
loope
loopne
mov
mov
lods
outsl
mov
and
inc
push
cmp
sbb
xor
addb
jnp
xchg
divl
fdivl
rcr
stos
out
mov
std
sub
lods
xor
xchg
lock
iret
faddp
adc
and
xchg
xchg
into
dec
cmp
sbb
jg
and
lods
in
mov
js
xor
jno
dec
divb
pop
int3
out
inc
add
push
or
pusha
mov
loop
test
ds
add
aam
std
jne
cmpb
int3
add
clc
repnz
and
pop
jecxz
imul
mov
ja
or
mov
or
fwait
in
int3
xor
or
hlt
fildll
cmpsb
push
inc
flds
pop
inc
mov
and
cmp
push
dec
jbe
int
das
jp
push
sbb
aam
bound
outsl
lods
stos
clc
or
add
cld
add
in
dec
js
fwait
das
dec
insb
fstpt
pop
lea
and
scas
out
ja
mov
jno
push
fwait
xchg
ret
jp
movsb
or
out
adc
xchg
test
adc
push
add
xor
mov
mov
jb
dec
or
xchg
jp
sub
pop
dec
dec
add
mov
ret
aaa
loop
sbb
sub
loopne
int3
pushf
pop
subb
dec
sbb
push
push
jmp
sbbb
test
xchg
mov
jno,pn
out
bound
push
in
pop
and
ret
mov
cli
jge
lods
aad
cwtl
xchg
jge
ljmp
push
or
call
into
lcall
push
dec
arpl
lea
call
push
jmp
inc
sbb
jno
cmp
dec
icebp
iret
pop
movb
lret
movsl
pop
push
pop
js
addb
adc
mov
arpl
lea
jbe
std
dec
das
insl
aaa
mov
movsl
cmpsl
sbb
test
inc
fsubl
xchg
es
pusha
addb
cli
sarl
int3
mov
in
bound
insl
in
sbbb
cmpsl
pusha
mov
sbb
es
mov
sahf
sbb
push
lret
mov
cmp
adc
dec
dec
das
dec
cmpsl
jnp
xchg
lods
inc
aas
xchg
xorl
dec
sahf
push
nop
bound
push
in
jo
test
add
xor
orb
lods
loope
or
xlat
es
cltd
js
xor
lds
mov
std
fdivrl
mov
pop
jbe
and
repnz
adcl
shrl
into
lods
push
xor
cmpl
mov
mov
pop
push
sti
sbb
cmp
add
inc
aas
xlat
bound
ljmp
push
insl
scas
rcrb
pop
into
push
mov
bound
mull
fmuls
jg
xor
adc
mov
dec
mov
jae
sbb
push
dec
in
adc
push
pop
push
imul
mov
jae
mov
dec
and
dec
mov
xor
frstor
mov
aad
cs
xchg
inc
push
stos
clc
mov
sub
in
dec
call
out
or
push
repz
cmp
shrl
repz
inc
int3
mov
imul
stos
or
pop
aam
addr16
mov
movsl
fidivl
scas
fsubrl
sbb
jnp
pop
sub
pop
pop
jnp
jp
jae
dec
leave
ss
out
push
adc
loop,pt
jp
nop
and
xor
rorb
jne
pop
dec
stos
xchg
lahf
testb
inc
gs
ret
pop
add
scas
push
mov
add
ja
std
in
ss
pop
pop
cs
fstps
mov
xchg
adc
cmp
mov
divb
cwtl
cmp
and
sbbb
xor
mov
pop
jle
mov
push
sub
or
push
and
scas
pop
mov
loopne
out
sub
ret
push
cltd
div
lods
clc
dec
in
pop
sub
push
and
ss
or
sub
jmp
aad
xchg
xchg
fldenv
and
mov
arpl
imul
lods
xchg
xchg
stc
fdivr
sbb
ljmp
imulb
add
sahf
pop
cmp
les
pop
cld
jl
pop
push
fs
push
jge
insb
das
fstps
push
xor
inc
pop
or
popf
cmp
scas
rcrl
in
and
mov
adc
mov
loopne
repnz
pop
mov
js
cmp
xchg
cli
jne
int
push
jl
mov
stos
push
mul
and
mov
cmp
jmp
int
jo
dec
flds
notl
int
xchg
imul
imul
cmc
mov
shrl
mulb
call
ficomps
cmp
das
push
jecxz
adc
int
lock
int
sahf
call
cld
dec
jns
jg
jns
imul
inc
xchg
fwait
rcrl
push
pop
dec
outsb
and
sbb
icebp
cs
insl
sub
cli
dec
mov
std
and
sub
xchg
xchg
repnz
fcompl
aas
daa
inc
cmp
stos
push
fs
leave
inc
jle
int
add
js
push
pop
add
sub
sahf
cmp
and
pop
pop
jecxz
push
mov
faddl
or
rclb
mov
mov
lret
mov
test
inc
and
jp
pop
loop
xor
out
push
or
push
icebp
lods
ds
jno
call
adc
push
xlat
push
jne
ds
cwtl
sbb
push
mov
xor
movsb
add
mov
or
or
rep
mov
adc
adc
pop
cmpsb
es
mov
mov
pusha
xchg
movntq
out
pop
repnz
fs
lahf
aam
mov
jo
mov
test
fmull
cwtl
incb
ja
sarl
push
addl
cmp
sbb
mov
repnz
call
xchg
inc
dec
jno
mov
int3
mov
inc
mov
xor
mov
in
mov
mov
mov
cli
lods
xor
cli
sbb
shr
fiadds
fsubr
jae
mov
js
cmp
movsl
and
fwait
js
pushf
dec
shrl
add
inc
mov
ret
jecxz
mov
cld
imul
sarb
iret
dec
lock
aaa
fnstenv
xor
std
subb
and
pop
and
inc
in
pop
or
divb
iret
dec
xorl
mov
mov
ljmp
mov
nop
test
mov
addr16
add
or
jecxz
cmp
xor
lret
dec
push
or
fwait
sub
xchg
and
fs
in
lock
mov
fs
mov
sub
enter
rcrl
ja
mov
push
cmp
aaa
icebp
ja
cwtl
mov
lret
inc
lods
jmp
xor
ss
mov
fmull
cltd
push
mov
shrb
movsl
sbb
pop
ret
inc
fstps
and
push
xchg
aas
pop
xor
repz
inc
jl
or
mov
shrb
popf
call
iret
andl
cmp
mov
mov
xor
cmp
insl
inc
js
xorb
loop
dec
sbb
jb
fisttps
adc
add
inc
sub
push
dec
aad
mov
mov
es
pusha
test
jmp
mov
fimuls
rcll
push
sbbl
mov
fwait
test
test
mov
sahf
jg
sbb
pop
or
je
pop
sub
rolb
loopne
adc
mov
sbb
ljmp
add
xor
int
push
mov
es
loop
push
or
adc
fisubl
add
test
fstps
mov
or
mov
mov
xor
and
outsl
xor
cwtl
dec
xchg
lock
pop
jge
popf
add
in
push
nop
out
push
lock
sub
mov
adcb
mov
pop
nop
outsl
sbb
loop
roll
iret
pop
xor
mov
icebp
inc
cmp
jno
sbb
mov
aad
mov
enter
xor
mov
or
bound
int3
aas
adc
repz
mov
popf
adc
lahf
mov
dec
insb
jle
cmp
insb
mov
mov
mov
shll
cmpsl
repnz
shlb
in
loopne
leavew
mov
push
ss
dec
rolb
pop
pop
push
fs
rcrb
daa
pusha
push
test
leave
xchg
call
sub
inc
loope
shll
lock
inc
icebp
mov
push
jle
jmp
xor
out
in
test
jno
mov
sub
pop
out
gs
cld
lret
add
xor
sbb
jecxz
repnz
data16
mov
cmp
mov
adc
jp
jbe
mov
cmp
std
add
add
and
add
pop
push
nop
aad
pop
jno
cmp
dec
sbbl
mov
das
xchg
or
sbbb
lock
lea
call
xchg
mov
jmp
test
sbb
lock
add
mov
data16
leave
stos
movsb
mov
sbb
es
dec
inc
push
sbb
repnz
jg
std
mov
mov
sub
add
js
imul
xchg
push
pop
fcoms
dec
lcall
cmc
je
es
mov
cltd
mov
jg
or
iret
add
fcmovu
adc
gs
pushf
dec
stos
sbb
adc
aam
addr16
mov
ffree
xor
cmp
outsl
inc
adc
mov
std
jb
cmp
sahf
jecxz
shrb
xchg
add
test
or
fdivl
mov
scas
popf
cmp
mov
mov
xor
lds
cli
subb
add
fisubs
popf
pop
mov
push
ljmp
jp
in
mov
loopne
lret
in
lcall
push
ret
xchg
mov
movsl
mov
or
cmp
push
xchg
jae
jo
clc
push
stos
pushf
ficoml
cld
test
sahf
test
xchg
fstl
cmp
inc
xchg
mov
enter
push
js
jecxz
xor
dec
loop
push
mov
jmp
mov
and
lock
add
xor
xchg
fmull
jmp
mov
stc
outsb
fs
sub
lret
sbb
pop
lds
popf
pop
push
add
repnz
xor
mov
xchg
in
cmpsb
pop
push
mov
sbbl
mov
mull
jbe
pop
mov
mov
mov
sbb
jecxz
outsb
push
loop
xor
lret
arpl
stos
mov
out
cwtl
adc
pop
inc
xchg
fmul
jmp
jae
sbb
pop
jle
pop
cmpsb
repz
scas
mov
pop
inc
rcl
push
xchg
repnz
sub
inc
leave
je
fdivrl
jno
shlb
xchg
movb
je
out
shrl
fisttpll
ljmp
inc
push
pop
ror
add
fs
jge
pop
pushf
cmp
ss
daa
ret
loopne
add
lret
adc
mov
xor
jbe
cmc
cmp
test
stc
push
or
pop
xor
xor
ds
in
ret
adc
scas
int
je
sbb
push
aad
shl
inc
sti
outsl
sub
xchg
xchg
add
xor
adc
sub
mov
inc
cwtl
int3
jmp
inc
jnp
adc
add
rcrl
pusha
pusha
adc
sarl
repnz
insb
call
cmp
sub
imul
pop
add
das
movsb
sub
fwait
xor
ret
mov
jle
cmp
cmp
sub
repnz
adc
out
movsb
push
add
adc
imul
rclb
pop
movb
add
sub
test
stos
adc
jb
ds
add
push
roll
mov
out
jbe
fst
xchg
rclb
sbb
pop
mov
adc
icebp
rep
imul
cmp
or
std
cs
and
fisttps
mov
js
not
out
pusha
adc
shll
scas
jge
test
xchg
out
xor
adc
jne
dec
mov
fists
pop
xor
push
test
sub
popa
push
loop
or
inc
dec
sub
jae
push
inc
push
ljmp
pop
insl
out
jge
cld
insb
aad
add
and
cs
xchg
push
incl
mov
mov
mov
lea
cs
hlt
adc
lock
rclb
cli
int
pop
push
mov
loope
pop
ret
mov
and
dec
cmpsb
icebp
mov
jne
aad
mov
fprem
jl
mov
cltd
out
pop
rcrl
dec
lds
jle,pn
inc
insl
mov
fwait
mov
mov
daa
ds
inc
inc
repz
xor
pop
dec
sub
fisubrs
jbe
movsb
add
jmp
inc
cli
arpl
aas
push
cmp
pop
divl
ret
jne
or
gs
mov
dec
in
lret
repnz
add
js
iret
xor
leave
call
xor
mov
fdivrl
aad
mov
jo
test
or
imul
cmp
dec
pop
jmp
ljmp
dec
adc
jecxz
fstps
jmp
arpl
fistpl
cmp
mov
mov
push
rcll
push
mov
fisubs
sar
push
sbb
pop
out
rdmsr
fs
rol
jbe
dec
rolb
pop
ljmp
in
and
xchg
inc
push
orb
push
adc
lret
faddp
test
mov
aaa
sub
push
xlat
loopne
inc
xchg
shl
xor
sahf
mov
xor
sub
ljmp
mov
sbb
inc
dec
dec
and
lcall
sbb
inc
mov
aas
push
test
stos
jbe
aas
outsl
jecxz
mov
jns
inc
sub
ret
repz
loop
cmp
jg
pop
lods
je
pop
je
xor
push
pop
fnstcw
mov
fdivrp
mov
jbe
jns
imul
sbb
daa
cmpsl
inc
xchg
sbb
inc
lcall
xor
mov
and
shll
ss
and
and
adc
lods
jbe
cld
cmpsb
inc
sbb
enter
loope
jbe
stc
adc
in
enter
insl
js
leave
pushf
pop
rorl
ficompl
jge
mov
pop
mov
out
push
jns
movsl
mov
into
int
lods
loop
enter
inc
dec
xchg
aam
loope
fisttps
pop
sbb
and
and
call
xchg
inc
dec
and
dec
jp
stos
jne
xchg
fistps
cmpsl
lock
dec
int
or
popa
mov
add
xor
sbb
sti
pop
scas
mov
in
aaa
mov
fcoms
mov
aad
jp
cwtl
cmpsl
dec
add
lcall
adc
sbb
mov
jmp
nop
mov
subl
jg
hlt
cmp
negb
and
dec
mov
scas
lahf
push
push
imul
inc
fdivrl
in
ds
les
jmp
jae
sahf
push
call
xor
pop
jo
mov
xchg
pushf
and
in
mov
sub
jecxz
xchg
push
jnp
mov
and
mov
jbe
loopne
sub
cmp
movsl
push
addr16
inc
cmpsl
sbb
pop
xor
in
sarl
and
push
pop
xchg
adc
xchg
addr16
xchg
lods
sti
inc
sub
int3
mov
rolb
lcall
bound
fstpt
cld
lods
int
sbb
repz
xchg
mov
add
icebp
popa
and
adc
loopne
and
pushf
mov
mov
je
and
frstor
js
mov
mov
xlat
and
sub
outsb
sahf
ja
push
adcb
xor
jo
popa
int
sbb
test
addl
xchg
scas
xor
and
xor
lret
cld
and
lret
fidivl
xchg
xchg
sub
hlt
mov
push
sbb
cmp
jo
outsb
lcall
pusha
pushw
sti
mov
lahf
insb
dec
sbb
jmp
pop
enter
or
add
pop
adc
xchg
outsl
sbb
cltd
jmp
int3
bound
es
addr16
xchg
fwait
cli
leave
fs
jecxz
push
icebp
jg
pop
mov
inc
pushw
sbb
push
cli
sahf
xlat
mov
jmp
jnp
clc
pop
insl
add
xor
pop
mov
imul
rorl
decb
hlt
imul
in
rcrl
fldenv
jl
dec
fstpl
jns
push
inc
mov
loopne
mov
mov
push
int
inc
lea
push
push
jns
or
pop
fldcw
mov
bound
xor
dec
mov
jmp
push
es
ljmp
pop
push
fsts
mov
or
cs
inc
int
mov
ret
adc
mov
mov
pop
push
sub
add
lret
push
aas
fmull
rorb
popa
fnstsw
scas
add
ret
mov
leave
jo
cmp
data16
fwait
cmc
lret
call
mov
lods
stos
push
lods
lock
scas
adc
std
fdivl
mov
inc
push
sbb
ss
xlat
cmpsl
fiaddl
add
fstpl
jge
das
fists
and
and
rcrl
jne
and
sub
and
dec
and
enter
mov
lock
popf
das
bnd
shr
inc
ja
push
push
cmpsl
and
xchg
syscall
fisubs
xor
xor
fnstenv
movsw
xchg
sbb
jae
cmc
xchg
jmp
imul
push
lea
lock
add
xor
sbb
mov
lret
adc
mov
sbb
cmpsl
lods
jge
lock
inc
rcrb
add
mov
adc
leave
jg
test
clc
inc
sub
out
clc
into
lds
or
loopne
imul
jle
ljmp
xchg
cmc
mov
mov
cmp
or
jp
ds
aas
adc
pop
push
mov
cmpsb
adc
and
lcall
out
dec
pusha
inc
testb
in
fldenv
sub
jb
cmpsl
notb
jl
out
mov
imulb
movsb
in
out
fcompp
arpl
enter
adc
lds
fcmovbe
dec
dec
dec
out
lods
xchg
iret
or
adc
xchg
aaa
cmp
lret
or
mov
mov
pop
add
and
or
jne
add
xchg
pop
fnstenv
and
mov
jmp
and
test
sbb
jecxz
incb
or
loope
xchg
insb
enter
adc
sbb
cmp
loope
sbb
sar
rorl
daa
dec
std
mov
loope
xchg
sub
push
push
xorl
stc
pop
aam
outsb
popf
out
pop
inc
xor
xchg
pop
mov
stos
or
dec
push
mov
insb
test
jns
fstl
lods
mov
inc
shl
xchg
mov
mov
pop
iret
inc
cmp
scas
stos
pop
and
add
xchg
rcll
mov
lahf
jo
shl
inc
lret
je
cmp
lahf
clc
aas
xor
cwtl
outsl
mov
xor
inc
cltd
inc
ds
iret
ja
jo
xchg
or
lods
push
sub
jecxz
adc
dec
or
adc
cmp
mov
out
add
mul
addb
mov
insb
das
fwait
jg
dec
inc
pusha
jne
jge
ret
test
pop
cmc
lret
adcl
sbb
in
cmp
adc
jmp
mov
mov
add
insl
test
das
sub
xchg
mov
pop
sbb
dec
sbb
mov
jns
sbb
imul
mul
sti
xor
lods
in
cli
inc
mov
subb
push
shll
jl
fwait
pop
push
fisubl
cmc
out
clc
inc
add
pop
mov
out
mov
mov
jb
or
stc
loopne
gs
dec
fs
sub
push
mov
aam
pop
fwait
imul
call
jg
jnp
mov
inc
xor
sub
test
call
adc
pop
or
ret
push
inc
test
aaa
pop
cmp
ret
sbb
pop
inc
clc
orb
es
sub
ds
movsl
xchg
lock
dec
mov
js
mov
int
or
and
repnz
xor
sub
js
and
pop
stos
dec
add
aad
lds
or
cmp
adcl
je
iret
inc
xor
test
xchg
daa
sub
and
pop
xor
test
scas
stc
push
test
cmp
enter
adc
ljmp
mov
xchg
inc
mov
sar
mov
push
inc
int
fisttpl
mov
outsb
movsb
adc
cmpsl
lret
scas
pop
orb
mov
xchg
sbb
adc
stos
popf
gs
mov
or
pop
or
sarb
out
dec
js
enter
rclb
imul
xchg
les
cmp
mov
stos
mov
scas
popa
insl
int
xchg
jl
loope
aas
jmp
das
sub
sub
in
jne
mov
mov
and
jge
adcb
jecxz
jb
inc
xchg
or
daa
out
rorb
dec
adc
cltd
mov
sti
int3
lahf
pusha
idivb
mov
sbb
push
xor
jmp
cmp
call
outsl
fstpt
sarb
ja
scas
cmp
and
pop
xor
dec
jge
int3
push
cmp
xor
outsb
lds
leave
pop
and
shlb
and
mov
pop
jmp
aam
lods
lock
sbb
and
inc
test
dec
lcall
loop
jg
fsubs
adc
add
or
loop
sub
lds
jbe
sbb
cld
sub
xor
sbb
cltd
into
mov
bound
inc
jns
sahf
popf
pextrw
cwtl
mov
scas
inc
iret
ja
cmp
loop
xchg
icebp
inc
push
and
cmp
add
test
insb
mov
push
mov
test
jp
bound
fucomip
pop
xchg
and
mov
test
in
mov
cmp
cltd
lock
icebp
jo
jecxz
pop
cmp
mov
inc
mov
leave
nop
popf
adc
jle
cmp
arpl
sbb
dec
popa
lcall
and
sub
xchg
and
mov
mov
in
add
rorl
jnp
out
push
into
sbb
test
aas
xchg
lods
scas
push
ret
xchg
jnp
shrl
dec
mov
push
icebp
cmpsl
lods
fcompl
cltd
cmp
cmp
aam
mov
xor
push
inc
fildll
repnz
and
push
jb
cmpsl
dec
dec
testl
add
mov
dec
sbb
lock
push
sbb
inc
pop
push
sub
cld
fdivl
mov
jne
fsts
xor
push
xor
mov
je
out
jge
jmp
xor
or
pop
stc
inc
clc
cmpsb
jns
add
mov
mov
jno
imulb
or
arpl
dec
shl
dec
xchg
cmpl
xlat
mov
roll
or
mov
aad
mov
or
xchg
mov
push
fstpl
mov
push
test
sub
or
or
arpl
cmp
jne
cmp
imul
jge
mov
addb
das
pop
push
xchg
scas
dec
subb
aam
jae
and
mov
pop
pop
arpl
dec
or
pusha
repz
out
daa
jecxz
roll
add
mov
pop
push
hlt
je
inc
ficompl
push
and
cld
mov
stos
dec
inc
mov
sub
subl
out
lods
test
in
and
pop
xor
push
sahf
mull
or
mov
popa
shlb
pop
stc
data16
stos
mov
mov
test
call
xchg
insl
and
cmp
cmp
push
or
xchg
fildll
sub
shrb
xchg
cs
fsubrs
add
lock
jbe
xchg
jno
scas
insb
add
push
imul
cli
add
cmc
loop
dec
mov
push
mov
divl
xor
jnp
cmp
sbb
fmull
es
xlat
dec
repz
jns
shll
loopne
xchg
push
lds
test
mov
in
cmpsl
sbb
daa
adc
mov
jne
ja
xchg
pop
rclb
lret
push
xchg
imul
mov
cmc
and
sbb
ret
imul
lret
not
out
pop
xor
ss
enter
ljmp
pop
nop
mov
cmpsl
xchg
cmp
mov
sub
pop
pop
cltd
cmp
dec
jne
incb
ds
xchg
call
mov
mov
div
mov
mov
outsb
loopne
rolb
jb
loopne,pt
pop
fnstsw
insl
jmp
sbb
or
jo
clc
mov
out
stos
pusha
dec
mov
mov
dec
std
adcl
xlat
cli
scas
mov
lds
add
jb
jge
movl
mov
dec
push
adc
mov
pop
icebp
or
xchg
arpl
add
xor
movsb
mov
in
sbb
xchg
lods
scas
fcoms
stc
imul
aaa
cltd
jecxz
xchg
pop
sbb
stos
sbb
jg
aam
aam
daa
into
push
aas
jge
into
mov
dec
or
inc
xor
xchg
popa
mov
mov
xlat
adc
popa
push
in
sub
pushf
jecxz
je
data16
sub
and
loopne
sub
sarb
lods
inc
xchg
adc
push
sub
js
stos
lods
ja
mov
sbb
addr16
fcompl
ja
mov
shrl
cmp
lahf
popf
jbe
inc
dec
sub
push
inc
insb
into
inc
sbb
mov
push
pop
fcmovnb
lock
xor
dec
arpl
int3
iret
int
sub
jae
sbb
sub
or
adc
scas
add
js
fwait
pusha
je
pop
movsb
adc
enter
xor
xlat
push
push
lods
mov
push
jl
mov
hlt
dec
int3
mov
fwait
xchg
pop
mov
bound
inc
xchg
test
jecxz
cwtl
call
inc
into
icebp
fst
call
orl
fsubl
mov
lds
sub
pop
cmp
sub
add
add
mov
test
cmp
daa
ds
out
push
test
mov
lock
lcall
test
fistl
aam
addr16
leave
push
jl
mov
cs
cmp
jmp
jmp
xor
stc
cmp
adc
cmc
sti
iret
push
nop
fwait
and
xchg
in
imul
fcoml
mov
sbb
mov
in
lea
mov
xchg
in
clc
and
aaa
shll
inc
in
sarb
ret
inc
mov
cmpsb
xor
daa
inc
or
stos
xorb
in
xchg
mov
jb
and
cld
sbb
xchg
mov
fmuls
cmpb
int
jne
das
lods
and
out
inc
push
xlat
xor
cwtl
dec
xor
or
push
cmp
sarb
or
push
insb
lret
pop
lahf
pop
add
mov
dec
rclb
dec
aam
fwait
mov
loope
jbe
pop
xchg
into
fdivrs
bnd
insl
lret
test
bound
popf
rcr
cs
sbb
aad
inc
xchg
adc
xchg
jmp
and
xchg
jg
mov
iret
jmp
lret
mov
mov
repz
and
ret
lods
loope
loop
mov
mov
pop
stc
mov
sbb
cltd
dec
pusha
data16
inc
inc
shr
ljmp
cmp
pop
mov
fs
jp
loopne
fsubs
adc
js
push
or
dec
idivl
jmp
jg
arpl
dec
sub
adc
pusha
push
icebp
or
out
ja
addl
fxch
push
fwait
pop
add
rolb
sub
push
daa
add
stos
fistps
mov
fwait
cli
cmp
lret
inc
jmp
jp
rolb
and
fadds
xor
popf
stos
sbbb
push
inc
pop
cmpsl
stc
inc
sti
test
ret
adcl
outsb
lahf
insb
out
lods
iret
cmp
and
pop
aad
pop
fcmovb
sahf
pop
addb
arpl
test
dec
lea
out
aas
test
pop
iret
xor
xorl
into
lret
sub
push
test
inc
jae
mov
xchg
xchg
cmp
or
loop
stos
lret
inc
xchg
and
xlat
cld
xlat
mul
std
mov
jnp
cld
inc
js
shr
dec
mov
inc
or
pop
inc
cld
adc
int3
je
dec
adc
rep
cld
test
jae
jo
fs
add
scas
cs
dec
mov
mov
jle
bound
and
ljmp
outsb
sbb
test
mov
push
mov
sbb
or
popa
mov
pop
mov
ret
sbbl
orl
add
testl
movsb
addr16
inc
and
out
ret
test
pinsrw
pushf
test
sub
out
das
imul
adc
xor
dec
xchg
add
inc
mov
out
sbb
cmp
dec
ds
pop
push
lea
xor
push
xchg
and
xor
pop
pop
cli
inc
insb
sub
je
mov
and
or
iret
and
add
ret
insl
mov
sarl
sub
sbb
insl
ja
loopne
test
xchg
sarb
ja
pop
mov
icebp
or
mov
adc
repz
lock
rcll
cmc
lods
or
rsm
xor
inc
andl
in
inc
test
dec
mov
imul
fs
sub
fbstp
test
push
pop
jmp
sbb
sti
dec
arpl
mov
cmpl
cmpsb
loopne
fwait
xor
xor
and
mov
or
int
add
lcall
out
cld
lcall
insl
je
out
int3
das
sub
js
sub
out
jmp
idivb
popf
test
ljmp
lret
dec
dec
jle
mov
mull
mov
test
cmpsb
mov
movsl
sub
insl
jle
or
jle
lods
fisubrs
mov
rorb
xchg
in
lock
adc
jg
xor
dec
xor
mov
test
lahf
sub
pop
jns
movsb
add
sbbl
sbb
or
cmp
xchg
jae
jecxz
jo
push
and
sbbl
bnd
leave
or
sub
stos
inc
push
mov
nop
mov
lods
imul
popf
xchg
shlb
push
nop
inc
push
ret
push
mov
fldcw
add
mov
xchg
sub
pop
out
addr16
inc
jbe
rclb
mov
fcoms
stc
mov
in
int3
jl
rcrl
data16
lea
xchg
dec
fwait
ss
push
shlb
mov
ds
jmp
sahf
xlat
mov
cmpsb
dec
popa
mov
sub
xchg
push
pop
call
sbb
fdivl
lea
xor
mov
push
stos
maxps
or
mov
xlat
jmp
adc
sub
outsl
sahf
ret
stc
testb
xlat
mov
or
mov
js
inc
ret
push
fmulp
les
enter
adc
mov
out
or
imul
addr16
sbb
sub
pop
xor
out
repnz
bound
pop
mov
enter
cmp
add
jmp
mov
mov
mov
ss
or
js
pop
jns
pop
out
xor
call
push
sbb
cwtl
sahf
ds
lea
add
xchg
mov
mov
fisttpll
push
fildl
inc
fadd
cmp
ds
xchg
cmp
mov
inc
call
xor
add
xor
xor
xchg
mov
dec
rorb
sar
dec
sbb
std
nop
cmpsb
imul
repnz
or
lock
das
orb
and
movsb
add
add
jmp
fadd
ljmp
imul
add
adc
adc
aaa
mov
icebp
in
pop
fisubrl
mov
decl
jno
rcll
pop
movsl
and
fs
ss
jae
xchg
ja
adc
fdivl
mov
mov
jecxz
es
cwtl
addb
sub
imul
pop
jmp
xchg
pop
add
les
adc
mov
call
pop
stos
dec
push
mov
loopne
movb
jge
pop
lock
aam
imul
inc
mov
lret
imul
clc
jb
test
int
sub
ss
loope
jae
or
lahf
das
xchg
mov
movsl
jle
mov
jae
xchg
mov
into
aad
jp
dec
add
mov
or
add
leave
and
insb
cmpsb
inc
mov
sbb
out
mov
xorl
adc
push
mov
gs
lcall
inc
pop
cltd
int
mov
push
aad
cmp
add
pop
ss
mov
orl
mov
insl
pushf
adc
decl
ss
cmp
sub
mov
jle
outsl
lcall
mov
mov
jnp
xchg
test
ficoml
dec
lods
imul
sbb
add
push
add
stos
add
jl
sbbb
into
jg
inc
les
ljmp
pushf
js
xor
jno
call
adc
xchg
push
inc
jbe
fdivl
jns
sbb
pop
pop
loop
inc
dec
mov
in
dec
lds
bound
in
jg
cmc
movswl
inc
jl
test
cmp
cli
std
cmpsl
inc
cmpb
sahf
daa
lahf
rcrb
sub
add
cs
iret
sub
mov
cmp
imul
call
push
and
movsb
ja
notl
or
push
sbb
rcrb
or
popa
adc
fwait
and
and
add
sbb
add
loopne
cmpsb
dec
insl
add
dec
lods
scas
mov
int
adc
clc
add
sub
call
sbb
inc
sub
dec
dec
inc
sub
jmp
jmp
dec
iret
and
push
xor
stos
shrl
inc
lods
pop
call
test
cmpsb
mov
sub
pushf
pusha
and
add
popa
xchg
test
adc
jecxz
hlt
fidivrs
fsubrl
pop
cmc
pop
les
dec
fsts
xchg
push
push
inc
clc
pop
sbb
push
insl
adc
adc
fcmove
pop
mov
and
movsb
ret
add
pop
scas
bound
icebp
xchg
sub
jo
cmp
das
push
xchg
push
call
lea
push
xchg
sbb
adc
mov
enter
xchg
aam
je
jnp
pop
add
xor
inc
repnz
dec
add
cmp
xchg
js
rcrb
jnp
push
sub
nop
sahf
popf
mov
mov
jecxz
jae
jb
cli
xor
adcb
pop
mov
push
pusha
dec
xchg
shl
sub
clc
fwait
test
or
mov
insb
cli
pushf
add
stos
adc
pop
cmp
repz
test
xchg
fstps
repnz
shrb
mov
mov
inc
dec
push
icebp
fcoms
inc
fdiv
sbb
pop
xchg
ret
int3
adc
fldl
test
lcall
mov
sub
leave
cmp
enter
leave
mov
pop
mov
dec
fwait
xchg
sahf
xor
cmp
das
imul
xchg
inc
cmp
subl
and
push
shl
fdiv
mov
les
xchg
loop
and
mov
push
push
mov
out
mov
jb
es
jle
repnz
js,pn
daa
insb
es
and
in
insl
mov
xchg
lock
shll
cmp
fbstp
add
in
shr
jmp
das
mov
call
sbb
inc
add
xchg
cmp
cli
jge
pop
add
aam
lret
pop
pop
inc
sar
movsb
lock
es
scas
pop
add
sahf
xor
dec
shlb
out
push
push
fisttps
xor
mov
mov
push
std
push
out
or
jecxz
push
outsb
sbb
push
or
push
je
jbe
stc
movsl
cmpsb
adc
add
or
mov
rcl
popa
cwtl
or
xor
jg
sbbl
pop
movsb
or
mov
idiv
push
mov
adc
or
push
lds
daa
xchg
inc
adc
xchg
loop
dec
test
aad
mov
cmp
lods
inc
adc
and
sbb
fs
sbb
add
mov
inc
dec
add
notl
je
adc
jg
and
outsl
fsubrl
jbe
jg
loop
int
cmc
sbb
into
jge
pop
jmp
pop
fldz
adc
pusha
inc
or
add
aas
cmp
jmp
push
dec
pmulhuw
out
lahf
sbb
push
push
out
mov
mov
mov
cmp
mov
insb
out
sbb
mov
inc
sbb
fcompl
cli
cmc
sub
pop
testl
sti
lahf
sbb
sbb
push
popa
test
outsl
pusha
mov
pop
push
gs
test
cmp
pushf
aaa
out
push
cmpb
xor
sbbl
or
xor
sbb
push
jns
outsl
lock
loopne
push
imul
pop
dec
lods
mov
data16
aas
out
jl
cmp
cmp
add
testl
roll
mov
mov
add
sub
xor
jo
mov
jo
jb
pop
popf
and
lea
lea
in
jne
lret
mov
xchg
cmpsl
jno
inc
es
mov
test
insb
insb
arpl
sbb
ljmp
enter
fcom
jne
imull
mov
int3
out
adc
outsb
mov
adc
inc
mov
shll
scas
scas
scas
or
mov
mov
shrb
ret
mov
mov
jns
cmp
push
xor
int3
lds
sub
setae
addr16
in
notb
sbb
fcomp
jb
push
pop
cli
mov
push
test
ljmp
cmp
popf
aad
and
cmc
or
mov
imul
repz
xor
leave
pop
mov
or
lcall
pop
jno
jns
sub
pop
pop
push
mov
pop
jmp
ret
scas
pop
dec
shr
jg
jecxz
dec
fstpt
mov
sub
fdivrl
jge
shr
pop
fs
push
sbb
sbb
imul
sub
aas
and
test
je
xor
and
out
ficoms
xor
pop
inc
daa
mov
orb
sbb
test
xor
insb
mov
push
stos
stos
enter
pop
sbb
test
jle
mov
mov
mov
push
std
ret
adc
sub
xchg
and
and
push
ja
int3
lock
jmp
and
pop
and
sub
mov
fcom
addr16
adc
out
pop
inc
cs
sub
jbe
mov
roll
fisttpl
ljmp
inc
dec
loop
adc
push
popf
push
jns
push
push
mov
add
mov
xchg
adc
outsl
jle
cmpsl
repz
test
ret
jns
int3
loop
mov
push
cltd
xchg
divb
sahf
cmpl
dec
aaa
pop
sub
jnp
scas
mov
and
insl
cmp
dec
jge
test
and
mov
aad
and
jb
in
outsl
clc
pop
test
jp
push
push
sub
clc
mov
sbb
aam
xor
lret
mov
nop
dec
aad
call
divb
add
in
sub
jmp
adc
scas
dec
mov
pmullw
xor
int3
fstpt
mov
lds
xchg
cmpb
xchg
test
dec
faddp
les
dec
mov
jae
aas
aaa
add
fistps
cmp
sbb
pop
insb
pop
pop
leave
jb
pop
iret
ror
aaa
fdivp
sti
in
fs
add
or
xlat
cmp
dec
aam
stc
mov
loopne
fbstp
sbb
fs
mov
mov
push
mov
cs
fildl
dec
add
cmp
sahf
lea
xor
mov
gs
out
ljmp
fldt
clc
pusha
or
push
rcrl
enter
cmp
popa
outsb
fists
dec
frstor
int
and
fistl
pop
cmp
loopne,pn
or
pop
mov
mov
js
cltd
int
mov
xchg
inc
addb
loop
cmc
mov
xor
or
pop
push
sbb
cwtl
mov
in
int3
popf
mov
cmp
dec
dec
sub
add
scas
stc
lock
lods
add
or
rorl
pop
or
lahf
adc
pop
jae
xchg
mov
sub
fnstcw
cwtl
dec
pop
mov
fbld
dec
push
adc
std
xor
pop
jae
dec
sub
int
mov
cli
int
push
xchg
cmpsb
and
imul
dec
repz
test
jo
fnsave
dec
mov
orb
inc
out
lret
inc
movl
aam
sbb
jnp
pop
mov
stc
ficompl
outsl
lods
sbb
jmp
cs
out
aaa
xor
lret
in
lds
dec
lahf
or
or
xor
add
mov
sub
dec
xor
ljmp
lods
es
or
bound
sarb
xchg
adc
push
lcall
mov
sbb
inc
push
jmp
jb
js
decl
fcmovbe
pop
es
cmp
fistl
inc
fwait
lahf
scas
pop
mov
or
imulb
mov
pop
inc
sub
out
and
or
cld
sub
pop
and
arpl
sub
decl
jl
inc
in
mov
jne
mov
outsb
in
outsb
notl
lcall
adcb
lods
sbb
lret
into
jnp
push
jmp
lret
lods
incb
jnp
cmp
out
ret
mov
jb
push
mov
sbb
loopne
mov
aaa
mov
sub
dec
and
jg
xor
pop
fscale
ja
mov
loop
add
lahf
repz
inc
fwait
cs
mov
lret
out
or
cmp
mov
xor
je
and
mov
out
in
scas
sbb
aaa
xor
cld
pop
jmp
sub
cli
bound
ret
jecxz
push
in
dec
xchg
push
daa
arpl
xchg
cmp
adc
out
divb
ja
popa
push
insb
inc
xchg
roll
or
mov
inc
pop
fdiv
popa
jae
aas
jo
add
ds
push
xor
aas
adc
bound
imul
test
test
and
aam
int3
lret
int
clc
xchg
sub
leave
add
mov
iret
add
dec
out
fisttpll
or
stos
cmpsl
lods
push
xorl
outsb
es
lret
cmp
pop
fcompl
xchg
lret
or
dec
mov
mov
repnz
or
pop
sbb
insl
mov
call
xchg
or
inc
push
dec
adc
inc
dec
adc
fwait
pop
add
shrb
daa
mov
pop
inc
mov
fstpl
dec
jle
int3
data16
and
lahf
push
jecxz
jg
int3
lret
jo
sbb
adc
rolb
mov
nop
xchg
in
pop
insl
ret
int
dec
or
repz
sub
jmp
push
pop
sub
test
mov
jle
or
test
fisubs
cld
and
xchg
test
aam
mov
or
mov
jnp
mov
push
pop
xchg
push
add
neg
xchg
push
dec
imul
scas
adc
pop
inc
jg
repnz
mov
mov
mov
daa
xchg
icebp
cmp
popf
mov
int3
pusha
xchg
push
mov
mov
cwtl
inc
cs
cmp
sub
clc
adc
push
scas
fimuls
jle
jecxz
lock
ret
push
stos
stc
aam
repnz
icebp
cmc
loope
das
push
cmpsl
jmp
xchg
cmp
dec
lea
cmp
jns
into
add
hlt
cmp
jns
ja
inc
stc
adc
lods
xchg
std
mov
cmpsl
mov
jnp
jns
pop
lret
ljmp
mov
lods
sbb
sub
daa
cmpsl
mov
dec
xchg
push
push
icebp
push
mov
popf
fwait
sbb
dec
stos
sub
in
gs
and
iret
xor
mov
mov
xchg
mov
loop
or
add
jnp
mov
mov
in
fs
sarl
das
lret
pop
xor
mov
ds
xchg
sub
or
stc
xor
sbb
cli
arpl
dec
aad
xlat
mov
imul
pop
inc
mov
icebp
movsb
adc
sub
or
fdivrs
push
lcall
shrb
nop
xor
lea
je,pn
test
or
roll
mov
jnp
jg
push
or
or
pushf
mov
cmpsl
shlb
int
out
add
pop
sbb
hlt
pop
sbb
repz
mov
mov
jecxz
ss
mov
dec
js
mov
ret
jge
pop
inc
adc
fcmovb
mov
lods
jbe
mov
xor
popa
pop
xchg
push
sti
xor
je
or
mov
in
pusha
loope
in
dec
bound
xor
scas
pop
add
inc
fsubr
lock
divl
test
pop
xor
repz
xor
cmp
stc
xchg
push
popa
xchg
insl
cmpsl
sub
push
je
sbb
enter
mov
and
sub
stos
fsubr
int3
jns
hlt
sahf
ficoms
jns
aas
clc
mov
arpl
test
or
movsb
fisubrs
push
and
mov
push
sbb
imulb
dec
adc
loop
mov
jae
inc
lcall
dec
frstor
insb
push
pop
popa
cmp
push
insb
push
in
sbb
inc
out
clc
dec
xor
mov
gs
inc
or
jecxz
adc
jecxz
lea
sti
cmp
fildl
adc
and
lock
jae
in
lcall
fmul
arpl
shr
mov
outsb
in
mov
dec
jge
lock
xchg
or
cli
add
mov
mov
and
sub
push
stos
cmp
dec
sahf
push
pusha
imul
sti
cmc
mov
xchg
mov
iret
mov
ss
in
dec
iret
add
adc
mov
and
sbb
inc
loop
nop
hlt
jge
pop
mov
movsl
loop
test
lods
mov
and
aas
cmp
inc
mov
sti
xchg
or
aas
cmp
sbb
or
xor
pop
sub
cmpb
or
outsl
mov
test
mov
jo
xchg
jp
scas
repnz
ret
cli
faddl
add
sbbb
push
jl
inc
sti
jmp
xchg
stc
dec
cmp
mov
movsb
or
inc
call
lods
jecxz
shll
pop
arpl
shr
adc
mov
lcall
xchg
mov
add
mov
xchg
cmc
inc
decb
gs
sbb
fwait
stc
pop
aam
jp
ljmp
push
movsb
repz
push
pop
ds
inc
lret
push
mov
dec
test
inc
mov
push
adc
outsl
sbb
sbb
in
push
scas
fcoml
test
shlb
clc
imul
add
int
and
adcb
lods
xor
xor
or
fidivrl
movsb
adc
pop
mov
ficomps
insb
insl
cmp
outsl
insb
jp
in
xchg
mov
subb
xchg
xchg
cmp
movb
cmp
lods
popa
xchg
inc
jecxz
loop
or
xor
mov
call
into
iret
push
xchg
mov
std
dec
fldenv
adc
movsl
movsb
sbb
aam
dec
jae
inc
dec
jbe
lds
and
outsb
subl
outsl
mov
xlat
fidivs
out
push
pop
push
jge
lret
sbb
loop
mov
fs
lahf
or
sbb
xor
clc
clc
stos
out
adc
test
lret
ja
xchg
cld
inc
arpl
fistl
cmp
sbb
fsubl
ja
pop
in
stc
dec
or
cmp
mov
cmp
xor
insl
add
enter
cld
enter
xchg
jge
mov
xchg
nop
cmp
sub
jl
fwait
dec
aad
addr16
pop
mov
jns
lahf
xchg
lahf
shll
inc
adc
inc
js
inc
push
outsl
hlt
das
sub
jg
push
movsl
sbb
jnp
mov
inc
aam
sub
mov
jb
test
aas
repnz
mov
outsb
cmpsl
xchg
mov
addr16
mov
orb
xlat
adc
imul
add
cld
loope
gs
cmpsb
sbbb
pusha
dec
fs
pusha
xchg
xor
or
mov
mov
in
jge
int
jne
jmp
adc
mov
or
jae
je
xchg
nop
movq
cmpsl
cmp
andb
or
cli
xchg
shll
pop
cltd
stos
mov
push
ja,pn
push
or
mov
mov
push
popf
jns
xchg
fwait
xor
notl
je
and
xchg
mov
cld
xchg
lret
xchg
mov
iret
sub
mull
sbb
imul
jns
mov
cs
pop
lea
and
xor
shlb
push
pop
mov
xchg
imul
mov
push
mov
dec
xor
pushl
add
mov
jge
or
ret
mov
mov
cwtl
fdiv
sbb
cld
mov
repnz
incb
xchg
ja
dec
adc
mov
xlat
das
inc
sahf
and
leave
xchg
rcr
out
mov
je
push
mov
and
xor
outsb
inc
fisttpl
iret
mov
cmp
in
inc
push
adc
pop
cmp
xor
jno
cmc
or
scas
out
pop
idivb
xor
gs
movsl
aas
rorb
add
xchg
in
test
mov
mov
mov
fldcw
cs
dec
ljmp
jmp
mov
cltd
out
xor
pop
test
mov
ljmp
lods
xchg
repz
add
push
xor
xor
iret
jno
pop
in
mov
inc
test
fmull
mov
shrb
or
repnz
inc
rorb
mov
push
aad
vpshaw
jb
ds
pusha
in
push
cmp
or
sbb
sub
jae
lcall
lods
mov
push
pop
xor
call
cli
xchg
mov
jp
pop
pop
cwtl
cs
arpl
pop
sub
inc
imul
nop
xor
test
je
loop
nop
loope
push
fbstp
and
filds
call
mov
jno
ror
jle
xchg
xor
push
inc
push
es
test
xor
je
jb
xchg
fimuls
ss
sbb
ficomps
jecxz
jb
out
pusha
mov
mov
mov
inc
int
xchg
adc
out
mov
mov
push
movsb
int
sti
iret
lcall
sub
inc
add
insb
daa
jg
imul
fcoms
in
add
and
add
mov
inc
js
movsb
das
cmp
test
adc
mov
int
add
daa
adc
rcll
daa
xor
add
sahf
and
xchg
loope
mov
jl
movsl
push
and
inc
xor
pop
pop
jl
insb
mov
sahf
int3
repnz
rclb
xchg
test
xchg
insb
das
mov
mov
sti
inc
mov
addr16
add
jns
push
imul
call
push
push
xor
sti
sub
jmp
in
adc
rcr
dec
dec
push
ret
shll
or
jmp
lods
cmp
fmuls
sar
and
fwait
jns
ror
pop
or
xchg
pop
int3
ret
das
xchg
sbb
and
iret
arpl
mov
fistps
inc
xchg
inc
adc
pop
into
loope
mov
add
mov
pop
test
adc
lret
push
inc
inc
add
loop
mov
pop
sbb
shlb
sbb
iret
add
out
add
push
inc
pushf
fwait
test
cmpsb
xchg
loop
mov
mov
arpl
int
xor
subl
adc
fbld
inc
mov
icebp
sub
jo
adc
imul
std
xchg
xor
hlt
inc
inc
nop
mov
inc
mov
mov
fnstenv
xor
add
dec
mov
notl
js
rorl
sbb
cmp
mov
inc
cmpb
jle
push
adcb
rcl
cmp
mov
inc
aaa
call
ret
fisubl
aad
push
sbb
mov
out
mov
xor
xchg
add
push
sbb
dec
frstpm(287
lret
sbb
mov
test
jbe
jae
shl
push
jo
arpl
frndint
cmp
mov
jno
cmp
sub
sub
adc
xor
add
mov
xchg
push
adc
cmpsl
test
ds
fiadds
ret
outsl
ret
pop
rcll
mov
loop
pusha
cld
cs
adc
or
loope
xlat
mov
mov
cwtl
sub
adc
loop
adc
add
idivl
gs
int
sub
loope
mov
xor
movsl
and
xchg
hlt
jbe
dec
pop
out
mov
jo
push
jno
leave
lock
mov
mov
ret
lods
push
jo
and
push
push
mov
insb
xchg
movsl
rclb
or
cmp
push
add
xchg
test
sub
lods
leave
scas
shrd
aad
lods
inc
movsl
inc
xchg
loope
add
ds
arpl
or
mov
push
adc
mov
push
popa
jae
out
pop
and
dec
lods
mov
mov
cmp
push
cmp
mov
mov
xor
sbb
xchg
mov
das
nop
cwtl
pop
cmp
stos
push
pop
adc
push
jg
dec
inc
jge
xchg
mov
add
inc
pop
fadds
stos
bound
lods
or
xor
xchg
fdivrs
cmpl
fmul
push
arpl
ss
mov
dec
xchg
dec
xor
loop
daa
or
data16
push
fdivrl
mov
mov
xor
test
mov
inc
mov
mov
adc
and
hlt
push
arpl
aam
sbb
int3
stos
in
mov
lods
pop
out
and
pop
or
jae
jne
inc
mov
mov
cli
adc
lods
push
in
aad
dec
dec
or
or
sti
or
loopne
lret
out
shlb
fdivrp
icebp
js
sub
inc
fs
test
and
pop
adcb
adc
aaa
cli
fyl2x
sub
cmp
dec
xor
aam
cmp
test
fs
subl
cmp
or
movsl
push
adc
addr16
push
cmc
nop
sahf
pop
push
pusha
add
push
lods
imull
rorb
sbb
mov
xchg
cwtl
push
sub
and
sub
ret
fisttps
add
inc
mov
adc
inc
sub
insl
pop
pop
insb
addr16
test
add
icebp
mov
and
and
jns
mov
pop
inc
sbb
js
jp
xchg
cmc
lods
pushf
pop
cltd
pop
jle
call
sbb
es
pop
mov
or
dec
dec
adc
loopw
cmp
dec
xchg
loop
les
jp
int
mov
adc
mov
sar
iret
lods
jns
pop
xchg
je
test
shrb
mov
cmpsb
sarl
or
repz
adc
jg
cld
icebp
cli
scas
repz
mov
sub
int
fcompl
push
out
sub
aad
jbe
decb
jns
jg
cmpsb
push
inc
mov
sar
or
repz
into
and
lret
jo
mov
cmp
addr16
xchg
aaa
in
imul
stos
inc
je
gs
imul
jg
scas
push
into
rcll
xor
std
dec
push
mov
cmp
xchg
jmp
ret
inc
imul
sub
popf
fs
mov
bt
popf
aad
jge
mov
jmp
cmp
mov
dec
push
lret
shlb
ljmp
push
dec
movsl
jge
dec
repz
int3
jl
xchg
jbe
push
orl
sbb
sti
subl
mov
ret
xchg
pop
pop
dec
jbe
jmp
sub
mov
xchg
sbbl
aas
mov
mov
scas
mov
loopne
rorl
popa
outsl
jg
mov
mov
sbb
stos
xchg
das
cmpsb
fldl
sub
int3
movsl
fisttpll
ficomps
out
and
sub
scas
jns
sbb
lods
cld
sbb
in
loopne
inc
jge
cltd
leave
xor
imulb
fucomip
xchg
push
idivb
pop
mov
pop
pop
int3
xor
movl
into
add
xor
push
push
out
lahf
jp
jl
imul
mov
jmp
es
pop
loope
fsubs
mov
add
rcrl
mulb
mov
int3
push
mov
pop
dec
les
stos
in
or
jle
movsb
sti
daa
in
shr
jo
in
xchg
inc
hlt
inc
js
lret
sub
cmpsb
jb
orl
ss
jno
xlat
mov
fstp
push
jp
adc
lods
xchg
cmovl
xchg
cs
fistpll
xchg
sub
dec
mov
repz
push
mov
imul
shlb
cmp
insl
aam
clc
cmp
cld
aas
pusha
jmp
push
outsb
repnz
mov
mov
adcb
test
or
cmpsb
push
fsts
lret
enter
out
dec
jmp
jle
xor
fdivrl
insb
loope
cmpsl
pop
loop
test
xchg
lock
cld
repnz
jae
inc
fistps
inc
fwait
clc
xchg
sub
pop
sub
js
insl
icebp
push
test
mov
stos
inc
notb
aam
out
sahf
xor
out
aad
adcb
addr16
mull
stos
test
popf
in
mov
lea
je
jnp
lods
dec
mov
adc
mov
sbb
mov
jmp
mov
pop
les
jns
sbb
mov
sbb
ja
sbb
push
and
inc
out
push
jo
inc
mov
mov
fimuls
sbb
push
mov
dec
jae
cmp
call
sti
mov
mov
in
test
ret
jb
in
rorb
add
mov
test
scas
add
push
xor
test
or
mov
mov
jle
add
sbb
aaa
call
loop
push
lret
lea
pusha
and
stc
mov
out
xchg
pop
pushf
lea
sub
les
fs
cli
aaa
fdivrl
or
imul
add
and
push
mov
and
mov
push
ficomps
mov
or
add
dec
std
jno
jge
mov
loope
inc
jns
jmp
mov
jns
inc
inc
pop
add
mov
inc
fistl
and
repnz
pop
mov
ljmp
fisttps
or
hlt
bnd
stos
push
popf
add
ds
clc
pusha
movsl
mov
mov
xchg
arpl
jns
xor
xor
shll
hlt
call
mov
out
push
and
mulb
pop
fdivl
out
lds
pusha
mov
mov
cli
dec
mov
push
or
cmp
call
aad
gs
in
and
inc
rcll
ret
mov
and
mov
mov
scas
pop
mov
mov
lret
xor
fcomps
cs
sub
in
xchg
jg
and
lods
mov
bound
dec
dec
rcll
addr16
cltd
xor
mov
and
jne
ret
dec
adc
rolb
adc
or
jg
test
fwait
jl
outsl
pop
cmp
lock
std
push
jno
ds
sbb
icebp
loope
mov
or
movsl
mov
push
push
jmp
mov
inc
cmp
pop
lea
and
mov
mov
stos
lods
fstpl
clc
into
xchg
cmp
imul
xor
cld
pop
std
in
mov
movsb
xchg
incb
jae
dec
pop
fisubrs
insl
jne
adc
gs
pop
pop
vlddqu
in
mov
mov
add
pushf
sbb
sbb
jmp
repz
mov
sbb
push
and
jecxz
imul
or
push
mov
scas
jne
or
jbe
inc
scas
push
inc
dec
icebp
jmp
scas
jbe
mov
and
push
out
cltd
dec
mov
outsl
push
scas
in
repz
into
cld
push
jmp
mov
repz
pop
loop
mov
decl
mov
popa
sbbb
adc
imul
pop
nop
outsl
cmp
das
fcmovu
pusha
push
and
mov
aam
fisttps
sbb
add
ljmp
xor
out
pop
push
adc
cld
js
push
dec
repz
fadd
loope
ret
mov
std
shll
sbb
lock
cltd
rol
mov
adcb
and
xlat
add
inc
cmovb
fisubs
data16
int3
xchg
aam
stos
or
gs
and
sbb
lds
in
or
mov
xchg
test
lods
pop
aad
adc
dec
jmp
pop
out
mov
icebp
cmpsl
inc
jb
test
push
leave
mov
push
xchg
pop
cld
fisubl
leave
pop
dec
dec
lock
pop
shll
repnz
dec
sbb
rcrb
push
jp
inc
mov
mov
jp
push
sub
push
mov
or
mov
dec
hlt
hlt
inc
push
pushf
clc
cld
sbb
ja
jae
ja
ret
sub
jp
push
jnp
push
sub
inc
fisttps
inc
or
in
adc
test
dec
or
scas
popa
test
mov
cmpsl
mov
and
push
add
mov
or
cmpsb
fdivrl
sar
push
inc
rcr
mov
xlat
dec
add
mov
add
pop
push
push
jp
mov
jl
outsb
inc
add
cmpsl
outsb
mov
jo
jg
lods
push
mov
lahf
and
sbb
in
inc
cmp
fsubp
test
jae
ds
call
dec
test
out
xchg
dec
repnz
cmpsl
sarb
adc
enter
pushf
inc
stos
dec
addr16
stc
adc
pushf
pop
pop
movsl
xchg
icebp
je
loop
les
or
mov
push
sub
fisttps
fs
xchg
mov
clc
test
mov
int3
insb
inc
xchg
adc
iret
and
push
jne
inc
adc
jno
adc
xchg
ret
out
std
lock
nop
movl
pop
rcrl
dec
inc
fistps
mov
leave
mov
xor
enter
lods
ljmp
std
pop
aas
stc
sarw
outsb
jmp
jae
stc
push
frstor
cmp
and
xchg
test
cmpl
lret
cmpsl
inc
roll
pushl
movsl
imul
stos
sbb
jo
mov
xchg
dec
cs
mov
stc
fnsave
scas
inc
mov
dec
sub
mov
mov
sbb
and
mov
std
loopne
shll
mov
pop
fildl
inc
xchg
in
decb
dec
pop
push
dec
and
insb
sbb
loope
cmp
or
je
cs
je
cli
sub
mov
and
xchg
nop
sub
jno
push
ja
add
mov
jl
mov
enter
data16
adc
add
and
sbb
inc
sub
test
aaa
jl
pushf
rorl
mov
xor
je
ja
jmp
and
lock
dec
ret
mov
ret
sbb
testb
xchg
or
xchg
sbb
and
in
sbb
jecxz
mov
xor
mov
ljmp
xchg
in
mov
sub
mov
je
xor
mov
push
imul
test
out
imul
push
out
leave
ss
stc
and
mov
std
jp
add
inc
xor
test
scas
or
fwait
xchg
jae
cmp
lods
mov
cwtl
cmp
adc
xor
and
loop
push
jns
mov
repz
xchg
out
pop
mov
mov
adc
test
andb
divb
fsubs
mov
into
gs
sbb
adc
popf
dec
mov
inc
sarl
cmp
sub
ljmp
imul
sti
rcrl
mov
pop
jp
or
test
or
outsb
mov
cmp
addl
lret
das
inc
mov
lahf
cltd
mov
in
and
cltd
mov
inc
cld
imulb
pop
add
fwait
mov
jg
in
insb
loopne
add
inc
cmp
mov
add
sbb
push
lods
movsl
mov
lret
jnp
rcll
imul
cmc
jnp
xchg
outsb
mov
jmp
push
int3
adc
jp
lret
add
or
add
repnz
pop
iret
testb
clc
sbb
into
aas
sbb
in
sti
lds
test
inc
inc
sub
stc
adc
xor
fidivl
jle
shll
sbb
push
or
icebp
loop
lds
push
mov
mov
test
es
notl
xchg
inc
adc
jg
cltd
mov
fsubl
mov
rcrl
dec
jno
lock
mov
jbe
and
jl
aam
adc
fiaddl
mov
cmp
push
or
mov
lret
cmp
jl
lods
fwait
or
cmc
loope
dec
mov
mov
jnp
add
sub
sub
fcoml
inc
add
adc
cmp
idivb
andl
aad
mov
xchg
xor
xorl
sti
mov
cltd
and
inc
push
jne
push
pushf
pop
xor
sti
add
fcmovbe
and
adc
fsts
fisttps
jns
pop
test
cmp
or
or
push
jbe
movsl
sub
sub
ja
scas
cmpsl
push
fcom
adc
int
jae
out
enter
jbe
std
mov
xchg
dec
adc
popa
jnp
mov
mov
xchg
jbe
xor
je
clc
mov
ret
fwait
movsb
or
push
movsb
addr16
add
subb
data16
push
hlt
inc
insb
pop
dec
mov
rclb
or
nop
xor
mov
pop
sbb
sub
mov
adc
add
lret
stc
bound
lods
fsubrl
adc
lods
mov
bound
sti
xor
jp
pop
mov
sub
mov
add
fldln2
test
jbe
stos
mov
imul
and
loopne
cld
or
and
mov
call
imulb
out
push
les
je
adc
mov
push
sub
aad
add
jl
jne
call
imull
hlt
clc
popa
int3
fidivrs
ss
popf
xor
mov
aas
out
mov
adc
jae
lcall
je
mov
xchg
fs
jno
jmp
gs
sbb
mov
cmp
fs
loope
inc
fbstp
movsl
pop
fcmovb
mov
sbb
jp
cmpsb
mov
xchg
cs
or
jg
inc
pop
inc
icebp
add
jle
or
mov
adc
out
sti
cmp
fbstp
sub
mov
sbbl
sbb
repnz
jp
outsl
gs
call
inc
das
pcmpgtw
mov
loopne
fbstp
stos
mov
icebp
xchg
ljmp
jecxz
adc
sbb
cmp
cltd
mov
xor
movzbl
dec
push
fbld
repnz
push
fiadds
data16
mov
add
aad
or
push
lods
in
xchg
adc
xor
push
inc
add
leave
adc
mov
adc
and
and
add
sub
xchg
hlt
pusha
dec
sbb
inc
add
adc
insb
dec
rol
xor
dec
adc
push
sti
les
pop
lret
bound
inc
inc
xchg
adc
test
jnp
out
pop
dec
cmp
mov
fcomps
push
in
sbb
dec
in
lret
aaa
pop
pop
sub
jge
add
xchg
out
dec
jae
imul
lods
sbb
bound
and
rcrl
pop
lea
cwtl
cmp
in
call
sub
cmp
dec
int3
mov
inc
add
int
sbb
push
push
shr
add
mov
sub
stc
movsl
out
aam
gs
adc
test
addr16
mov
adc
push
aas
xlat
fwait
stos
les
addl
lea
push
aaa
cmp
out
gs
inc
pop
cli
lds
inc
ds
and
pop
test
int
mov
mov
push
sub
and
or
xchg
cmp
add
pop
mov
std
fisttpl
lcall
xchg
push
mov
pop
movsb
jb
cwtl
jb
pop
cmp
fstp
and
stos
lods
push
cmp
cld
pop
and
jae
cmp
mov
cs
pop
pop
mov
decl
cmp
xlat
lods
loop
add
jecxz
cmpl
sub
sarb
aad
in
mov
cmc
gs
addr16
sbb
xchg
lock
clc
mov
rolb
sbb
xchg
repz
sub
jb
lahf
cmpsb
les
popa
and
fidivrs
pop
cld
imul
fcoml
jecxz
xor
adc
add
ret
jmp
mov
cltd
push
repz
incb
add
pop
xchg
imul
fldcw
or
inc
out
int3
hlt
adc
fldenv
ret
aas
pop
pop
sub
mov
jbe
cmpsl
ret
hlt
je
sub
ljmp
xchg
sbb
jae
arpl
xor
in
jmp
sub
out
mov
mov
dec
subb
xor
jno
mov
mov
dec
pusha
stc
lret
movl
xor
pop
shlb
jb
mov
mov
jbe
sarl
adc
pop
sbb
mov
pop
icebp
aad
and
dec
lods
pop
and
push
mov
xchg
sbb
push
jns
cs
push
insl
js
int
sarl
divb
jg
test
lahf
std
mov
pop
movsl
push
jecxz
add
fldcw
loope
cmpsl
sbbl
xlat
std
fldcw
mov
jne
inc
jl
lea
mov
es
mov
xchg
ret
jecxz
sub
sub
adc
inc
scas
dec
sahf
inc
in
stos
mov
insl
ss
nop
call
orl
add
cli
and
push
pop
outsl
pop
sub
mov
sub
mov
jp
xchg
and
mov
sbb
aaa
mov
dec
inc
sbb
lea
lret
push
and
mov
lahf
rorl
push
in
outsl
cs
bound
out
nop
mov
cmp
or
je
mov
jb
hlt
jmp
js
xor
mov
ljmp
jne
shl
paddw
mov
mov
sbb
mov
xlat
xchg
push
push
jne
mov
jl
fwait
push
incb
mov
lret
cmp
pusha
cmc
add
jge,pn
cmp
je
mov
stos
mov
mov
lret
insl
loop
mov
add
pop
cmp
adc
jmp
pop
ret
in
adcb
mov
cmpsb
orps
aaa
jo
lods
cmpsl
jne
adc
cmpsb
mov
mov
movsb
ss
shlb
mov
push
push
sbb
cmp
push
mov
test
sahf
xor
addr16
jbe
popf
jmp
sub
shrb
jge
pop
lock
and
push
mov
bnd
ljmp
pop
jl
sbb
inc
xchg
pop
scas
leave
int
mov
dec
test
jp
mov
sbbb
test
bound
or
and
xchg
ficoml
mov
inc
movsl
inc
pop
xchg
jg
xchg
jmp
daa
inc
scas
js
int
inc
xchg
cwtl
pop
call
stc
and
xchg
or
imul
or
mov
imul
out
mov
repnz
ja
pop
fwait
push
leave
mov
xor
push
jle
sub
fisttps
iret
outsl
push
or
xchg
cli
data16
sub
sbb
dec
xchg
pop
cmp
sti
sbb
lods
pop
cli
pop
call
movsl
xor
or
push
or
test
cmpsb
ret
cmc
mov
scas
xchg
sbb
cmpsb
sbb
and
or
fsub
sbbb
adc
xchg
inc
test
ja
test
pop
jmp
gs
add
fmul
ja
dec
xchg
mov
outsl
push
in
in
movsl
push
mov
push
xchg
cmp
and
inc
cmc
popl
cli
inc
sarb
or
mov
int
dec
adc
mov
add
inc
cld
mov
movsb
mov
enter
pminub
jl
cmp
jbe
xchg
xor
fpatan
scas
add
je
ds
lahf
xchg
es
inc
movsb
xchg
xchg
fstpl
xchg
push
test
fld1
loope
or
rcrb
pusha
nop
out
sbb
js
add
sbb
data16
jnp
mov
push
int
aaa
imul
in
sub
clc
lock
and
xchg
aad
cmp
mov
pop
fwait
or
and
insb
xchg
push
repz
insl
cwtl
jmp
pop
stc
pop
mov
push
imul
xorl
sub
mov
ljmp
in
add
mov
cs
cmp
out
or
push
push
xor
pop
pop
push
bound
xsaveopt
lcall
jne
cmp
xor
adc
push
dec
arpl
add
loop
loop
lods
xchg
mov
push
rorl
sbb
repnz
ds
or
xchg
out
mov
sbb
adc
jns
pop
pop
test
and
add
aad
jns
call
pop
clc
mov
push
and
fprem
cmpsl
pop
sbb
mov
mov
mov
push
push
and
or
jecxz
xchg
imul
pusha
cmp
sti
fidivrl
pop
jno
inc
movsl
dec
cmp
cmc
xor
add
inc
jmp
pushf
xchg
push
pop
cmpsl
mov
xor
mov
cmp
nop
adc
adc
sbb
test
xchg
in
push
jp
icebp
fidivrl
mov
mov
pop
fmull
mov
dec
push
std
mov
sub
xchg
xchg
js
imul
in
push
sbb
and
mov
in
nop
lret
jne
adc
fidivrs
out
les
inc
mov
aam
pop
inc
pop
mov
and
ss
cmp
mov
push
cmpsb
into
cmp
xlat
xchg
nop
les
pop
mov
jae
cli
neg
fs
dec
xchg
jecxz
ds
int3
dec
dec
adc
sbb
imul
pop
adcl
incb
das
jg
dec
test
mov
dec
mov
aad
sub
mov
push
mov
xchg
add
dec
fidivl
stos
cmpsb
dec
popa
push
out
add
adc
and
js
adc
cmc
xor
cmp
pop
pop
push
and
cmp
mov
pusha
pop
pushf
push
jge
push
test
sbb
jmp
sbb
cmp
loopw
dec
cmp
lock
in
xor
add
inc
fwait
pop
or
push
and
xor
imul
dec
pushf
imul
mov
sub
scas
jno
mov
add
repnz
outsb
cmc
mov
sbb
push
jle
test
clc
lds
outsb
out
dec
mov
add
stos
popf
jmp
fwait
fs
scas
shl
stc
mov
adc
push
xor
cmpsl
add
loopne
loop
int
leave
xchg
adc
xchg
arpl
jno
cli
ljmp
mov
adc
inc
cmpsb
jle
jg
cmpsl
adc
pop
nop
jg
cltd
imul
cmp
mov
sbb
or
xchg
loop
xchg
cmp
test
cs
out
pmullw
jo
mov
jle
sbb
bound
xchg
arpl
or
das
adc
loope
out
push
jp
or
bnd
mov
cmp
es
add
sbb
ret
sbb
lods
sub
out
mov
xor
add
aaa
daa
push
xor
xchg
or
pop
idivl
out
sub
pop
xlat
dec
jle
sti
cmpsb
push
mov
shlb
or
sub
or
inc
pushf
push
xchg
xchg
stc
lahf
mov
ficomps
es
das
inc
clc
mov
js
ret
cmc
dec
jp
mov
gs
cmpsl
and
outsl
rcll
btr
enter
push
stos
sbb
stc
es
nop
xor
or
lcall
dec
push
jne
gs
inc
mov
jb
fbstp
mov
pop
inc
popf
int3
inc
cs
mov
mov
sbbl
mov
out
fcmovne
rcrl
jne
in
mov
outsl
subb
loop
add
mov
inc
mov
mov
push
jbe
inc
scas
sbb
adcl
pop
jns
pop
mov
out
mov
and
arpl
mov
xor
pop
bound
daa
pop
outsb
test
xor
mov
sbb
nop
loopne
mov
add
jle
lods
push
sbb
and
shl
out
fidivl
mov
jnp
xchg
imul
sub
mov
test
mov
xor
cmp
outsl
icebp
test
cmc
daa
adc
cmp
ljmp
imul
cwtl
sahf
inc
cwtl
sti
xchg
shlb
mov
hlt
repz
mov
push
arpl
int
pop
bound
shlb
lods
ja
decb
mov
dec
call
mov
imul
adc
inc
insb
sub
fisubrs
insl
add
test
pop
fisubl
mov
repz
subl
lcall
xchg
mov
popf
mov
daa
shll
mov
xchg
iret
push
das
and
ret
iret
ja
mov
adc
inc
cmp
sub
cmpsl
push
sbb
out
xchg
mov
lods
mov
mov
and
idivl
cmp
inc
inc
xor
sub
add
cmpb
cmp
test
adc
call
outsb
xchg
enter
out
testl
ljmp
cltd
adc
pop
jp
scas
outsb
fwait
jl
sahf
mov
push
sbb
repnz
pop
pop
rcrl
sbb
sbb
ficoml
ljmp
xor
lcall
jo
jae
cltd
xor
xchg
insb
add
mov
jmp
mov
test
lret
ds
sti
push
push
lods
add
xchg
fldcw
push
cltd
test
fwait
dec
cmp
push
cmpsl
xchg
mov
scas
pop
mov
sub
lahf
inc
cmc
cmp
aaa
rorb
stos
jno
lods
cmpsb
sub
js
inc
lods
xchg
pop
rcll
or
je
xchg
sarl
add
inc
mov
pushf
add
pop
push
fistpll
arpl
pop
and
lret
ret
outsl
out
inc
mov
jp
es
pop
mov
leave
daa
push
cwtl
pop
or
cmpsl
jmp
int3
xchg
xchg
adc
mov
stc
cmpsb
orps
push
rclb
jle
out
cmp
hlt
jo
test
pop
bound
pop
push
jno
pop
pusha
aad
jge
das
pop
lret
lret
push
dec
cmpsb
mov
or
or
mov
mov
dec
aas
dec
sub
sbb
xchg
jle
lret
ret
popa
xor
outsl
aas
sbbb
push
add
push
cmp
dec
mov
in
fwait
ja
es
cmp
inc
adc
pop
jns
mov
fmull
inc
push
fiadds
cmp
mov
dec
enter
or
in
cmp
push
push
int
cmc
mov
ss
add
sub
fidivrl
je
pop
add
mov
jge
rclb
or
pop
ret
cwtl
mov
dec
and
push
cwtl
outsl
pusha
test
mov
js
fnstsw
imull
push
test
cltd
mov
fcomps
fwait
test
lret
cmp
xchg
bound
push
adc
out
fdivl
loop
mov
jle
mov
lcall
mov
mov
jl
xchg
push
mov
lahf
mov
into
in
test
push
dec
and
inc
pusha
dec
dec
mov
sbb
xchg
les
mov
adc
push
and
or
mov
cmc
xchg
fwait
mov
mov
jmp
ds
ljmp
dec
rol
cmp
lods
scas
jbe
mov
out
movsl
dec
or
fst
in
addl
mov
insb
addr16
cmp
sub
sub
dec
std
call
ffree
int
incb
adc
sbb
xchg
cmc
sub
js
cmp
xchg
and
lods
adc
lret
inc
push
lahf
testb
or
bound
fs
lods
push
jns
pusha
inc
cli
mov
mov
fdivrs
xor
pushf
mov
aam
mov
sub
out
das
imul
das
mov
mov
fs
xchg
cld
dec
fimull
lods
mov
mov
aam
and
mov
add
int3
js
xchg
mov
inc
pop
out
sar
xchg
stc
lret
adc
fisubs
mov
dec
ret
mov
mov
lahf
data16
aam
cmpsb
scas
iret
imul
mov
ds
cltd
rcrb
cmpsb
test
fcoms
loope
xchg
in
ja
outsl
mov
inc
mov
xor
in
and
pop
idiv
cld
aam
gs
pusha
mov
movsl
bound
fistpll
iret
sbb
in
std
lds
mov
and
or
mov
jle
out
and
addr16
call
inc
rclb
mov
inc
sub
push
int3
ds
mov
mov
repz
int
movsl
sbb
arpl
add
mov
pop
imul
xor
cmp
rcl
or
mov
icebp
cs
pop
mov
jns
push
adc
mov
dec
lods
movsb
adc
nop
inc
or
das
idivl
pop
mov
out
pop
mov
mov
pop
popa
test
ss
sub
inc
repnz
not
test
inc
fidivs
stos
add
inc
dec
outsl
inc
dec
mov
mov
push
inc
adc
xor
jmp
adc
inc
mov
dec
or
outsl
jo
jge
in
jo
inc
icebp
ret
xchg
aas
and
jns
and
add
inc
je
adc
orl
fisubrs
or
popl
test
push
lods
test
pop
ret
fldl
es
leave
insb
int3
adc
sub
pop
dec
pop
loopne
jg
scas
je
stos
or
stos
pop
dec
sub
jp
inc
fdivrs
jb
jge
outsl
fdivr
push
fldl
loope
popa
ret
xor
cmpsb
mov
push
loope
push
hlt
inc
movsb
adc
push
xchg
ret
es
add
lock
sub
loope
push
mov
cmp
push
dec
stos
call
push
aaa
jne
sub
sti
adc
mov
mov
fbld
xlat
jecxz
loopne
lahf
fcoms
cld
fcoms
cwtl
movsb
shlb
iret
cmp
xor
mov
aam
sahf
push
lea
mov
jle
jmp
xor
jno
or
insb
fsubrs
mov
mov
or
insb
mov
jmp
stos
cmp
enter
jns
daa
add
imul
outsl
pop
and
inc
ret
fcmovu
xor
dec
js
push
jl
push
test
popf
mov
in
fiaddl
lret
lret
xchg
js
cli
repnz
andb
mov
outsb
dec
sbb
outsb
imul
mov
pop
mov
push
ds
movsl
test
daa
fwait
stos
dec
sahf
outsl
bound
inc
lcall
gs
jbe
mov
xchg
addr16
push
jecxz
push
rcrb
fimuls
rolb
and
sub
adc
mov
mov
int
mov
xchg
jno
shlb
jecxz
and
movsl
aam
add
jge
rclb
mov
lock
mov
jg
call
data16
sbb
pushl
or
sub
ss
jge
fnsave
pop
sub
rcrl
shll
adc
int3
cmp
mov
jne
adcb
mov
and
mov
xchg
dec
call
out
cmova
xlat
add
fcoms
mov
movsb
in
out
ret
mov
divb
jle
sub
mov
jmp
jg
push
and
stos
jl
push
sbb
sti
pop
in
and
adc
push
inc
cmc
stos
sub
jae
jae
or
mov
stc
or
leave
sbb
in
test
xchg
sbb
js
outsb
jno
adc
xor
mov
idivb
aaa
sub
shll
sub
and
imul
es
jecxz
insb
mov
outsl
lret
loopne
inc
adc
xchg
pushl
xchg
adc
shrb
popf
lahf
push
sbb
lcall
dec
cmp
add
sub
lret
jae
xlat
sbb
push
scas
out
sub
lcall
mov
jg
mov
xor
add
jg
inc
adc
adc
dec
cmpsl
in
and
loop
push
jl
push
test
sub
or
fisubs
movsl
xor
xchg
lea
xor
loopne
cmp
push
gs
notb
mov
data16
xor
cmp
in
popa
fmull
and
lcall
mov
mov
or
sbb
inc
movsl
or
inc
sub
and
out
popl
divl
in
jmp
lock
xchg
adc
cli
adc
push
aaa
shrl
lret
cs
bound
mov
fs
pop
mov
fsubrs
xchg
mov
dec
into
outsb
out
add
push
jno
mov
cltd
adc
pop
jbe
fistpl
stc
sahf
or
movsl
and
arpl
and
jecxz
fisttpll
pop
push
adc
push
dec
insl
xor
dec
lods
inc
imul
aam
jmp
int
or
divb
mov
nop
jbe
es
xchg
shlb
lret
daa
cmp
xchg
jne
std
sub
pop
and
daa
inc
jns
pop
ror
inc
fdivrp
jbe
mov
jb
sub
jmp
and
faddl
fwait
sti
sbb
stos
push
hlt
sarl
pop
outsl
pop
inc
add
adc
out
sub
hlt
lock
add
mov
jnp
and
push
inc
cmpsb
xchg
daa
es
iret
push
and
sarb
stos
shr
inc
lahf
dec
je
fiaddl
sbb
pop
inc
fildl
mov
dec
jg
scas
in
sub
rorb
inc
sbb
jg
jmp
jmp
or
jbe
fdivr
inc
int
cwtl
loope
test
fstpl
sub
notb
inc
inc
cwtl
cmp
cmp
sahf
dec
mov
lret
pop
cwtl
jne
push
jns
iret
ljmp
add
pop
out
fs
repz
cli
pusha
movsb
mov
daa
popf
fwait
xchg
jae
rcrw
xchg
rorb
call
scas
enter
into
pop
sbb
xor
jmp
xchg
and
sub
jmp
adc
mov
fildl
and
dec
mov
test
pop
out
movb
fnstsw
decl
adc
fcmovnb
and
daa
push
sub
lcall
mov
and
pushf
mov
and
mov
lock
mov
jmp
or
lods
sub
or
test
pop
sbb
and
rcl
sbb
add
cmp
lods
in
xchg
je
lahf
lods
insl
cmp
jmp
pop
xchg
xor
jge
jnp
rcrb
mov
shrl
imul
in
jnp
mov
inc
fwait
gs
out
xlat
iret
imul
outsl
xchg
xchg
dec
sbb
rcr
std
xor
inc
insl
mov
lock
inc
outsb
or
cmp
ja
pop
pop
pusha
cmp
sub
or
jae
scas
mov
fs
xchg
lock
and
cmpl
pop
ret
out
pop
cltd
notb
sbb
and
ds
mov
push
lea
adc
loope
bound
ja
mov
jns
divl
xchg
pop
sub
add
cmp
sub
js
mov
and
pop
xchg
bnd
out
and
ret
xchg
bnd
leave
mov
cli
push
mov
push
cmp
jl
pop
push
aam
stos
cmpsl
push
mov
and
fistps
adc
daa
xor
les
inc
into
or
cmpsl
cs
or
fwait
ror
nop
les
lret
mov
fdivrp
jns
test
lods
jge
or
sub
or
mov
mov
mov
jbe
inc
pop
lret
sub
sbb
aam
in
xor
inc
dec
adc
and
cs
push
lahf
inc
mov
sbbb
fwait
push
sbb
lret
push
int3
notl
mov
icebp
and
push
pop
mov
jecxz
push
fsts
mov
bound
gs
in
dec
jns
cli
clc
push
rcl
aaa
add
inc
fstpt
xchg
sbb
cmp
jl
sub
push
adc
xchg
es
ljmp
in
ret
and
mov
lods
mov
in
imul
aam
mov
js
nop
push
mov
or
jno
arpl
jae
dec
mov
in
push
jl
iret
mov
fiaddl
sbb
mov
orps
stos
in
dec
cld
ja
pop
pop
cld
jge
and
cmp
cmp
jg
stos
jb
jb
ret
inc
cs
dec
and
pushf
sbb
mov
jge
push
loop,pn
mov
xor
jne
mov
xor
pushf
ljmp
mov
arpl
lcall
mov
pop
ja
dec
inc
add
movl
mov
hlt
ret
mov
cmp
vmovaps
mov
sti
lahf
xorl
out
jecxz
mov
xor
xlat
add
jle
fmull
xchg
rclb
and
cs
cmp
push
fsubl
and
sbb
lret
in
aaa
rcrl
stc
and
inc
test
pop
xor
inc
rcrl
imul
mov
stc
xor
aad
daa
jmp
dec
stos
jo
mov
in
mov
xchg
test
js
cltd
imul
testb
fidivrl
cmc
ret
icebp
pusha
sub
imul
inc
lods
pop
inc
jge
orb
ds
mov
lea
xchg
mov
xor
sub
cmpsb
inc
mov
push
arpl
jg
outsb
jmp
cmp
lret
jne
mov
and
sahf
aad
xor
pop
fisttpl
stos
inc
and
insl
xor
shl
insl
popa
jmp
ret
pop
xchg
jae
test
in
pop
out
aas
repnz
mov
gs
jp
lcall
sahf
lods
and
cltd
aad
das
adc
imul
das
rcrb
push
dec
add
in
jl
insl
ret
cmpsl
cmp
sbb
roll
aam
nop
sbb
fwait
mov
push
adc
mov
outsl
fnstsw
in
sbb
cmc
aam
sahf
cmp
xor
outsb
flds
inc
or
out
sub
sub
add
mov
leave
sub
rorl
aam
das
rorl
inc
inc
clc
mov
jecxz
mov
rorl
push
mov
inc
shlb
test
xchg
bound
mov
into
mov
nop
dec
push
inc
repnz
and
mov
push
dec
dec
loope
inc
mov
mov
add
icebp
fwait
push
sub
adc
mov
aaa
jmp
cltd
add
into
scas
repnz
orl
xor
bound
sti
lahf
scas
xchg
mov
sub
mov
movsl
xor
stos
mov
or
rcrl
into
iret
rdmsr
decl
mov
mov
mov
in
pop
out
mov
jmp
lret
jb
push
dec
iret
shl
mov
cs
fstl
notb
icebp
data16
sbb
add
jo
adc
sub
push
inc
out
dec
aad
jmp
jmp
insb
rclb
inc
inc
jnp
cli
adc
xor
bound
mov
mov
mov
mov
push
sarl
pop
or
pushf
mov
cmp
testl
jecxz
and
mov
jns
ja
jns
gs
mov
sbb
sub
push
std
fdivl
cmp
bound
cmpsb
jecxz
loope
data16
ja
es
lahf
scas
shlb
add
dec
bound
mov
jmp
iret
dec
adc
mov
pop
mov
dec
in
mov
lods
popf
jo
xor
xor
lret
sub
lahf
xchg
sub
jg
jle
loop
push
loope
push
shll
push
lods
imul
sbb
bound
shl
fdivrs
mov
fwait
jmp
xchg
and
cmp
clc
in
jb
mov
add
mov
stos
and
out
push
sbb
push
ja
lods
mov
or
insb
pop
dec
jle
into
push
iret
push
in
and
add
push
cmpsl
loopne
jl
mov
dec
push
mov
xor
rolb
test
push
pop
add
data16
mov
inc
pushf
cwtl
into
mov
repnz
push
xor
jmp
les
int3
jo
or
scas
mov
sub
add
push
fadd
test
out
cld
movsb
testb
cmpsb
cltd
mov
pop
sub
pop
sub
call
and
and
aaa
daa
adc
les
mov
pop
gs
rep
inc
fmuls
mov
pop
mov
and
aaa
mov
dec
ss
sarl
push
imul
jp
cltd
pop
scas
sub
jb
ja
call
sub
subl
mov
ret
daa
xchg
inc
mov
and
fsubrp
pop
cs
inc
or
adc
lret
xchg
xor
rcrb
sti
call
lret
popa
sbb
jmp
bound
inc
add
stc
push
je
lahf
mov
pop
jb
sub
push
lods
mov
rcrb
or
xor
stos
in
repnz
inc
in
or
in
test
sub
test
out
jp
lods
push
hlt
mov
cmp
xor
sub
xchg
rorb
inc
lret
ret
add
mov
jbe
and
xlat
cmp
dec
mov
sub
sbb
lcall
popf
cli
jp
pop
sahf
add
js
sti
fidivs
mov
test
repz
aas
bound
jg
fmull
js
pop
stos
inc
dec
jg
inc
loopne
jmp
clc
push
push
push
cwtl
dec
outsl
adc
add
mov
fs
xor
movsb
cmp
or
jbe
mov
adc
popf
cmp
push
ret
icebp
les
aaa
cmp
pop
mov
cmp
test
nop
push
xchg
orb
gs
jne
xchg
mov
sub
fstp
test
js
lcall
cmovge
aas
clc
pop
cmp
ficompl
push
xor
loope
xchg
or
in
pop
in
mov
sbb
dec
arpl
test
lret
sbb
ret
mov
xor
daa
int3
push
in
dec
fisubl
inc
adc
jb
leave
mov
pop
mov
sbb
cwtl
idivb
repz
jne
scas
lock
and
fsubrl
push
jae
fstps
lods
jno
pushf
sub
xchg
pop
inc
add
cmp
in
cmp
jae
pushf
jmp
sbb
std
pop
push
jl
data16
xchg
push
mov
sub
dec
xchg
lods
filds
add
lea
out
xor
jns
jge
shlb
mov
stc
gs
and
es
aaa
outsl
dec
xorl
testb
nop
mov
and
xor
jne
add
cmp
lods
stc
nop
stos
push
xchg
cmp
es
jp
das
popa
mov
pop
cmp
faddl
push
inc
dec
pop
jns
int3
outsb
insb
lcall
xchg
jge
aad
jbe
mov
pop
cmp
out
jo
pop
jns
mov
jmp
fmull
xor
ja
stos
nop
cmpsb
cwtl
inc
xchg
ss
lahf
gs
lcall
lea
cmp
add
jne
jmp
idivl
addr16
icebp
adc
xor
loop
icebp
ja
inc
adc
aas
mov
xor
pop
and
scas
pop
outsl
enter
iret
lret
push
mov
mov
jno
pop
test
rol
sub
mov
adc
iret
xor
xchg
inc
fstp
mov
les
pop
popf
lds
jecxz
dec
sbb
in
or
jae
cmp
xor
fwait
push
jmp
out
sahf
jbe
jp
mov
xchg
ss
sbb
aam
fistpll
xor
sarb
xchg
sub
loope
dec
push
push
or
xchg
mov
scas
add
mov
out
pusha
push
mov
js
mov
ja
pop
and
les
std
sbb
call
out
push
lds
mov
mov
push
mov
adc
and
aam
mov
mov
xchg
lods
add
cs
mov
or
mov
lcall
arpl
insl
push
mov
mov
iret
testl
pop
dec
sub
jnp
int
psadbw
dec
xchg
fisubs
jmp
xlat
dec
cmpsb
out
shl
int
mov
inc
jg
js
stc
fisubrs
mov
pushf
or
cmpsl
into
shll
dec
add
pushl
mov
add
out
lods
mov
inc
cmp
xlat
nop
pop
dec
jmp
out
adc
es
sub
sbb
jne
andb
add
mov
notb
jmp
out
or
lret
in
add
jnp
sbb
cmp
sbb
cmc
into
fisubl
daa
inc
push
adc
das
xchg
inc
lock
sub
scas
lods
scas
dec
loop
dec
push
ret
je
aad
inc
insb
sbb
inc
ret
sub
sti
arpl
xchg
pop
sub
fstpl
mov
test
adc
xchg
inc
xchg
stos
or
lret
lcall
scas
inc
fsubrl
push
adc
inc
addr16
and
or
push
sbbb
fidivl
cs
out
negl
into
cltd
push
mov
cld
xor
mov
repz
cmp
fs
rcl
add
pop
jp
jmp
sbb
xchg
stos
pusha
pop
data16
lds
aad
mov
cmp
es
jno
test
in
aam
adc
rcll
sbb
jnp
lahf
pop
pop
dec
adc
or
lret
pop
out
inc
aam
mov
dec
cmp
sbb
popf
fmuls
adc
mov
cwtl
dec
mov
rorb
aad
mov
push
sbb
fwait
aam
push
stos
movb
jb
fidivrs
test
cmpsl
clc
sub
and
jp
inc
inc
inc
pop
pop
jge
xlat
or
mov
or
push
adc
cmp
sub
cmc
test
and
sub
adc
out
xchg
dec
in
fnstsw
dec
jle
push
pop
mov
sub
outsb
in
hlt
xchg
test
fisubs
aad
popf
pop
or
pop
xor
lret
sub
adc
ljmp
dec
push
sub
pop
xchg
leave
jne
cmp
enter
add
lahf
iret
lods
addr16
outsl
jne
lahf
aam
inc
jg
push
ljmp
xchg
je
std
inc
negb
aas
lret
and
push
movsb
mov
lcall
jg
cmp
adc
out
in
das
adc
lret
repnz
loope
lds
dec
pop
sbb
adc
mov
inc
pop
xchg
test
ja
faddl
mov
imulb
cld
jecxz,pn
jnp
cmp
adc
fcoms
outsb
or
or
mov
pop
pushf
or
aas
xor
add
test
imull
out
xchg
adc
call
mov
cmp
or
nop
cmpb
clc
adc
dec
push
sbb
int3
int
insb
sub
out
adc
pop
aad
dec
pop
mov
mov
dec
jle
stc
or
gs
nop
cld
loopne
or
jle
jecxz
jge
mov
cli
mov
inc
sub
in
aaa
mov
shlb
cli
test
mov
push
call
in
jnp
frstors
push
push
in
and
ret
leave
sub
rorl
ret
leave
repnz
mov
inc
shrl
in
mov
fwait
test
adc
dec
inc
push
and
or
push
add
xchg
stos
cmp
dec
adc
mov
push
adc
xor
das
std
xchg
inc
pop
xor
js
ficoml
lock
add
cmc
cmp
mov
punpckhbw
mov
fistl
je
out
mov
cmp
leave
clc
xchg
mov
xor
sbb
in
push
mov
sbb
xchg
jecxz
fistpll
repz
xchg
insl
sbbl
sbb
pushf
movsb
ret
inc
push
wbinvd
push
inc
loop
mov
xchg
push
pop
sbb
push
insl
cmp
dec
adc
sub
xchg
test
popl
mov
jecxz
pop
in
push
sarb
sbb
mov
and
aas
jns
xchg
dec
adc
cli
mov
jl
inc
or
test
mov
testl
push
icebp
and
mov
sbb
pop
out
sub
lret
in
aas
mov
mov
pop
js
push
aad
lock
mov
int3
rclb
fwait
dec
insb
xchg
iret
push
ljmp
mov
fbstp
or
aas
jp
hlt
orl
jge
loope
jnp
imul
sub
sub
adc
repnz
push
out
mov
hlt
es
int
hlt
mov
mov
adc
outsl
adc
jecxz
neg
test
loope
pop
add
and
fcomps
cs
sbb
xchg
lea
xchg
imul
aad
ljmp
sub
cmpsb
mov
jb
pusha
adc
out
decb
jmp
test
mov
mov
shll
adc
xchg
lret
test
into
pop
pavgw
and
cli
mov
in
shl
mov
dec
jl
add
push
sbb
loop
shll
mov
mov
out
inc
cmp
cltd
lret
inc
xchg
mov
repnz
mov
xchg
jns
mov
cmp
fbld
push
sbb
repnz
arpl
out
in
sbb
or
pop
bound
mov
scas
jp
cmp
jmp
das
arpl
aam
mov
dec
jnp
xor
ret
mov
cmp
std
sbbb
mov
push
sbb
mov
mov
outsb
xchg
jne
pop
ds
pop
cwtl
pop
ret
and
fcom
vpaddd
mov
out
dec
pop
mov
cmc
bound
test
daa
int
xorl
xor
jnp
inc
lahf
xor
jae
push
push
out
xor
mov
inc
jnp
fldt
dec
adc
fsub
in
push
roll
aad
lods
pop
inc
cmpsb
divb
in
lea
mov
in
ljmp
sub
pop
jb
sbb
mov
push
loop
push
outsb
stos
outsb
pop
xlat
orb
push
shll
inc
push
mov
or
mov
push
mov
or
jl
push
mov
pop
or
mov
insb
jne
es
shlb
dec
jne
aad
aaa
mov
mov
sbb
cmpsl
movsl
sub
loope
jo
loopne
adc
inc
xchg
jecxz
push
dec
xor
sub
or
cmpsl
cmc
jmp
in
push
or
pop
loopne
add
cmp
iret
es
test
mov
xor
push
jmp
int
dec
es
xchg
jl
mov
cmp
and
movsl
sbb
loop
negl
and
and
add
jae
fimull
lods
es
mov
jle
imul
movsb
add
ss
hlt
inc
inc
cwtl
insb
cmp
sbb
cltd
xor
mov
pushf
or
jne
jae
test
cs
daa
push
xor
outsl
add
add
cwtl
ds
ds
aas
out
mov
mov
outsl
das
call
push
flds
enter
adc
lods
mov
mov
push
xchg
in
xor
icebp
mov
inc
popa
sbb
mov
dec
jle
lock
and
pop
data16
out
push
iret
pop
imul
push
aad
data16
test
mov
add
xchg
les
mov
mov
sub
push
inc
mov
mov
xchg
sub
daa
fildll
jg
mov
iret
fldt
icebp
in
addr16
mov
lret
rolb
push
mov
push
cli
test
fldcw
jb
movsl
ds
aaa
icebp
pop
push
cli
call
cmpsb
dec
add
sbb
rcl
lods
mov
arpl
sbb
jmp
pop
data16
lret
imul
jle
or
pop
enter
mov
inc
inc
push
sub
pop
or
aaa
and
aas
mov
inc
shll
dec
stos
xor
mov
test
add
jmp
push
aaa
sbb
ror
mov
xchg
dec
jae
cmp
inc
lods
int
aam
mov
scas
push
and
sbb
stc
jnp
inc
cmp
test
jg
xchg
sbb
xchg
addr16
cmp
movsb
les
loopne
jg
dec
outsl
push
cmpsb
ljmp
mov
scas
and
inc
mov
inc
mov
adc
mulsd
lcall
jp
jp
mov
push
arpl
cmc
call
outsl
lahf
repnz
sahf
cmp
out
pushf
sbb
ficoml
in
faddl
xorb
jne
pop
sbb
or
faddl
les
dec
pop
js
fcomp
pop
or
fsubs
pusha
ret
shl
sbb
jmp
sbb
push
pop
and
xchg
test
out
push
imul
inc
scas
jne
cmp
push
cmp
jl
js
cmp
push
or
push
in
xchg
add
cli
stos
lret
sub
and
nop
ja
fwait
testb
or
xor
mov
pop
pop
mov
sub
or
arpl
sbb
lea
jecxz
das
cmp
ljmp
adc
jae
pop
sub
sbb
in
js
or
outsb
scas
clc
xor
cs
push
pop
xchg
ja
fiadds
lahf
orl
popa
jns
mov
add
mov
test
cmpsl
push
or
pop
neg
push
test
sub
ljmp
in
cmpsl
loopne
ret
dec
sub
inc
or
xchg
adc
xchg
sub
jle
dec
push
imul
pop
mov
xor
mull
subps
cmp
mov
jge
jnp
fwait
xor
dec
push
cwtl
adc
inc
mov
or
add
push
add
add
xchg
cmp
add
and
push
add
dec
test
mov
add
pop
and
stos
mov
sub
or
in
add
hlt
aam
push
inc
out
dec
mov
cmpb
push
dec
mov
xchg
dec
cmp
mov
aad
cld
sbb
lret
imul
add
adc
cmp
inc
popa
js
sub
xchg
aam
fucom
jo
mov
cld
repnz
rclb
fistpll
jae
aad
cmp
xlat
push
pop
mov
shrl
pop
int
pmaxsw
fbstp
pusha
sub
mov
ss
adc
sub
addr16
dec
hlt
push
sbb
or
ja
je
push
xor
push
mov
cmp
dec
repnz
sub
dec
xchg
and
or
test
mov
movsl
xchg
push
shlb
mov
push
cli
popa
and
test
gs
dec
sbb
xchg
xchg
gs
cmp
lods
lcall
fwait
sub
xor
mov
pop
cli
dec
cwtl
dec
cvttps2pi
cmp
sub
xchg
popa
jno
pop
adc
cmpl
dec
fistpl
or
pop
test
bound
les
scas
jno
mov
add
add
cmpsb
dec
cmp
subb
push
xor
push
adc
outsl
add
out
adc
push
mov
mov
fnstenv
cs
lds
xor
inc
test
int
or
test
inc
lds
and
negb
inc
popa
lock
fwait
stc
xchg
js
sub
jmp
pop
pop
aas
cld
xchg
cli
notb
jg
fwait
aam
hlt
sub
and
movsb
sbb
mov
outsl
and
jo
dec
lcall
adc
or
dec
pop
je
inc
adc
dec
lds
jbe
mov
insb
xchg
xlat
adc
mov
xlat
mov
fisubl
xchg
fimull
test
push
inc
xor
xor
dec
mov
test
xchg
test
mov
out
jno
stos
sub
mov
cmp
outsb
sub
cltd
clc
int
shrl
ret
and
adc
add
mov
push
jne
fisttps
xlat
sahf
clc
je
add
inc
pop
aad
out
gs
pushl
mov
inc
or
inc
repz
xor
stc
sbb
data16
outsl
aas
sahf
popa
sub
dec
sub
mov
loopne
sub
jle
imul
add
icebp
pop
nop
xchg
sbb
jge
popf
push
mov
mov
push
mov
ljmp
cs
sbb
lahf
cmp
push
in
fs
adc
std
sub
cmp
mov
mov
popf
mov
cmp
add
ret
roll
stc
cmpsl
pop
or
sub
cmp
rcrb
daa
daa
into
xchg
sbb
or
lock
push
cli
mov
inc
push
jnp
test
pushf
jno
inc
push
pop
cmp
sbbb
int3
movsl
in
aam
js
insl
xor
aad
adc
mov
add
lods
xchg
aas
cmpsl
pop
jecxz
imul
bound
xchg
roll
inc
cltd
mov
pop
out
popa
and
xor
in
stc
js
cld
cs
mov
and
push
dec
jno
enter
jge
and
sbb
in
dec
cmp
pop
jno
push
add
aas
or
add
jb
into
push
fwait
pop
popa
add
test
push
cmc
cmpsb
aaa
repnz
bound
outsb
push
pop
ss
movsl
jecxz
hlt
scas
sub
pop
movsl
jae
xor
mov
lahf
outsl
inc
dec
test
mov
movl
dec
call
sub
cwtl
repnz
push
aad
sbb
add
xchg
push
lea
mov
cmp
and
nop
movl
das
xlat
push
into
dec
mov
mov
adc
mov
xchg
adc
gs
ret
mov
add
xchg
inc
les
arpl
jno
add
adc
imul
loope
cwtl
add
or
cmp
insb
xlat
sbb
mov
jp
negl
sub
ljmp
mov
jo
in
data16
loop
ljmp
sbb
mov
loop
insl
xor
ds
jb
push
dec
lods
mov
repnz
pop
push
les
mov
jns
or
sti
dec
stos
mov
test
negl
or
jae
mov
jl
mov
ss
cli
dec
sub
in
cmpsl
test
outsb
ljmp
cmp
push
insl
and
stc
xlat
push
imull
dec
push
inc
xchg
loop,pt
cmp
mov
mov
sub
pop
mov
sahf
aas
inc
push
and
fidivl
xchg
in
lods
loop
out
js
femms
jns
mov
or
call
out
fxch
lahf
stc
jecxz
fisubl
mov
imul
jl
stos
sub
xchg
pop
out
lea
xor
stc
aas
clc
xchg
fcmovnb
push
icebp
or
push
lahf
xchg
and
lods
pop
test
dec
out
insb
adc
pop
nop
loopne
sub
xchg
push
mov
jl
daa
sbb
imul
imul
add
addr16
scas
xchg
jnp
test
iret
clc
jmp
loopne
mov
mov
cmp
insl
leave
inc
cmpsb
inc
dec
pop
push
enter
pop
adcb
dec
ljmp
imul
mov
call
aaa
mov
rcll
xorl
mov
push
aam
aas
cmp
cmpb
jne
push
gs
popa
std
xor
sub
cmp
pusha
dec
push
or
aam
mov
jbe
out
call
sub
pop
xor
jae
adc
jns
push
subb
jmp
xlat
test
add
push
sahf
addr16
ficompl
push
cmp
mov
testl
jg
xchg
lds
jl
and
sub
mov
mov
jnp
fsubrl
sbb
mov
iret
push
js
adc
xor
or
dec
xor
lds
in
pop
les
push
and
push
adc
cmp
ljmp
xchg
inc
sti
mov
xchg
add
jmp
adc
scas
cs
sbb
pop
js
lods
rcrb
sub
add
cmpsb
pop
lcall
iret
pusha
jg
outsb
jns
out
loopne
sub
pop
inc
or
xor
nop
mov
pop
loope
imul
sub
sti
std
int
fsubrs
or
lods
jns
pop
aas
push
pop
xlat
sub
hlt
shlb
arpl
pop
jecxz
cmp
cld
xor
stc
dec
cmpsl
push
fisubrl
repnz
adc
pop
add
dec
pop
jnp
out
ss
xor
inc
insl
sti
out
test
pop
add
daa
push
sbb
ficomps
mov
mov
mov
and
lret
jnp
pop
mov
int
mov
and
jle
orl
fisubs
cmc
cmp
js
mov
mov
jbe
fldpi
adc
xor
pop
mov
aaa
dec
leave
xor
dec
mov
insl
jp
push
xorl
clc
jmp
add
aam
xchg
flds
push
jge
mov
das
push
bound
test
jbe
jnp
and
scas
repz
xchg
gs
mov
pop
aas
lret
adc
mov
insl
ja
out
lock
fidivl
call
shlb
jl
push
rcr
mov
int3
jno
data16
imull
fs
push
pop
sbb
addr16
adc
jg
lds
jae
sbb
lds
jp
pop
dec
push
dec
add
inc
and
jnp
lods
shll
lahf
shll
insl
pop
scas
pop
test
lcall
cmpsl
sbb
addr16
mov
leave
test
xor
xor
pop
cwtl
scas
mov
jecxz
jnp
xchg
rcrb
hlt
ljmp
icebp
aam
imul
mov
jns
dec
mov
xor
lret
cli
clc
aam
sub
mov
leave
mov
cmp
sbb
inc
outsl
fs
and
imul
rep
cmc
lret
push
mov
sub
fidivs
cmp
push
and
int3
cmpsl
dec
sbb
mov
pop
and
jecxz
mov
int3
xor
jle
inc
repz
jae
jecxz
mov
xorps
push
sub
dec
mov
xchg
loope
xor
popa
leave
fcomps
vpminub
call
mov
lret
test
add
jne
cmpsl
sbbl
adc
mov
daa
dec
adc
inc
xchg
pop
pop
pop
lock
outsl
xchg
leavew
adcl
cmp
or
mov
push
mov
test
ror
inc
cmp
or
xchg
jae
ljmp
jg
xchg
or
push
push
dec
mov
pop
cmc
dec
jae
jmp
mov
iret
hlt
or
xor
mov
dec
sub
jns
jne
mov
std
lret
inc
mov
repnz
push
rcrb
loop
aaa
push
mov
testl
sti
pop
ss
std
mov
inc
pop
cmpsb
ffreep
jl
fstl
ret
mov
cli
mov
cs
filds
stos
mov
and
test
fwait
pop
ss
cmp
in
jbe
iret
repnz
jb
pop
xchg
out
loope
insb
cmp
aad
add
lahf
pop
in
pop
movsb
pop
lret
mov
lea
xchg
out
jmp
fdivl
dec
cwtl
daa
dec
lahf
jp
fadds
add
cmpsl
xor
xchg
mov
xchg
mov
sar
and
into
fdivr
lahf
loope
mov
lea
and
inc
inc
scas
or
test
lock
add
movsl
xor
push
aaa
stos
jnp
movsl
add
inc
push
or
dec
mov
lock
pop
setne
xor
add
sbb
mov
out
inc
pop
mov
xchg
mov
rorl
xchg
aad
jl
xor
daa
dec
adc
mov
jg
jecxz
mov
enter
or
punpcklwd
ret
ds
mov
cld
sub
mov
sbbb
insb
in
mov
sub
mov
ljmp
lods
or
in
pop
insb
arpl
push
xchg
add
mov
xor
shlb
ds
xchg
fs
out
dec
and
aam
nop
sub
movb
lods
push
enter
xchg
loope
mov
pop
pop
test
sub
inc
pop
dec
pop
dec
outsl
aas
clc
ss
adc
pop
inc
jne
cmp
mov
outsb
or
popf
in
mov
jbe
stos
jecxz
scas
jp
mov
mov
mov
cmp
inc
xchg
sti
jbe
dec
in
cmpsl
mov
add
ja
cs
or
decb
jb
gs
out
mov
mov
push
dec
dec
push
inc
dec
shll
leave
fdiv
lods
xchg
jle
mov
mov
inc
jbe,pt
test
test
pop
aam
stc
lods
lahf
or
call
shrb
jnp
or
out
es
add
ljmp
mov
mov
push
xor
int3
ret
ret
mov
push
sub
jno
pop
add
sbb
inc
cmp
lahf
es
pop
jns
je
and
lock
jge
add
mov
pop
test
or
jp
mov
and
dec
cld
xchg
cmp
pushf
mov
mov
sub
repz
in
jmp
push
dec
dec
dec
mov
bound
mov
adc
insb
xchg
push
fadds
mov
fwait
lret
pop
adc
mov
xchg
pop
int3
jmp
cmp
jb
ret
loope
gs
mov
cmpsb
scas
adcb
in
aam
cld
cmp
dec
inc
xchg
movsl
inc
adc
dec
in
pop
out
subb
pop
mov
jmp
in
jbe
pop
and
aas
stos
pop
das
adcb
push
ljmp
dec
dec
fisttpll
xor
cs
aaa
subl
sar
sahf
inc
sahf
les
mov
icebp
and
cs
add
xchg
cli
stc
mov
fmul
jnp
xchg
or
mov
cmc
push
stos
pushf
pop
push
mov
adc
xchg
xor
es
test
push
mov
adc
inc
imul
andb
in
stos
rclb
bound
push
stos
pop
push
sarb
xchg
sti
xor
cli
xchg
pop
lret
sub
and
sub
xadd
add
dec
push
or
pop
aaa
and
xchg
je
xlat
xor
sbb
imul
xor
aad
jg
inc
mov
xchg
dec
mov
lret
mov
push
paddw
dec
loope
dec
jns
mov
call
out
jmp
xchg
jnp
inc
orb
call
loopne
call
add
pusha
js
and
jae
fsubl
std
pop
enter
nop
sub
push
add
inc
and
inc
xlat
ficoml
std
and
dec
or
push
sub
pop
testl
rol
sbb
add
negb
mov
sbb
jge
xchg
aad
mov
dec
mov
adc
es
mov
int3
cwtl
adc
stos
aam
push
mov
dec
dec
inc
mov
xor
push
add
mov
scas
daa
ret
dec
mov
pop
push
arpl
adc
aad
lret
inc
xor
out
fs
in
fdivr
jnp
popa
sub
je
sub
aam
or
fcoml
mov
jle
add
cmp
sub
xchg
xlat
jne
call
inc
insl
sti
fsin
cli
pop
lretw
xchg
rolb
or
scas
popf
mov
cwtl
aad
in
dec
dec
mov
cmp
clc
sub
add
daa
mov
mov
pop
and
fwait
push
mov
jo
sub
adc
call
sbbl
mov
fidivrs
sbb
xchg
adc
js
xchg
jl
push
enter
xchg
pop
xlat
loop
cmp
call
mov
add
pop
movsl
push
jge
orb
push
lret
and
repnz
sbb
aad
ror
cmpsb
test
push
jl
pushf
incl
mov
ljmp
stos
rolb
in
ret
mov
movsl
pop
loope
pop
iret
test
cmp
xor
mov
mov
shlb
pop
and
scas
inc
add
xor
ret
stc
jo
cmp
add
loop
dec
cmp
in
loope
xor
dec
scas
sub
push
std
out
mov
xchg
in
xchg
push
shlb
inc
jae
stos
jno
and
lock
xchg
mov
ljmp
push
xchg
push
loop
add
jo
inc
mov
lcall
inc
ljmp
lahf
aad
js
mov
dec
mov
gs
xchg
lret
shrb
fldl
dec
adcb
lds
inc
stos
lds
data16
int3
cld
aas
dec
in
jb
push
andl
mov
in
or
scas
jge
sbb
push
or
xchg
imul
int
cmpsb
jge
or
mov
inc
lock
negb
repnz
mov
out
ret
jecxz
insb
jbe
fiadds
inc
jnp
push
rcl
push
and
mov
rcl
push
mov
mov
jmp
jecxz
pusha
cmpsb
pop
fidivl
hlt
mov
inc
jl
xchg
and
es
movsb
push
dec
inc
scas
xchg
push
outsb
push
packsswb
in
pop
dec
cmp
mov
rcl
cmp
mov
jns
enter
push
dec
clc
xchg
and
mov
adc
in
jne
mov
int3
or
pop
sub
pop
push
int
aaa
cli
test
xchg
dec
insb
xlat
sbb
xchg
int
sub
cmp
iret
fucomip
adc
cli
jo
xchg
pop
hlt
adc
add
out
xor
mov
insb
adc
fnstenv
push
mov
notl
jl
xor
bound
je
outsb
cmp
stc
aaa
dec
imul
inc
fists
pop
pop
xchg
pushf
xor
push
pop
jl
mov
add
adc
sub
sbb
lahf
test
test
dec
fidivrs
pop
jge
out
adc
inc
lret
sbb
jg
popa
les
adc
xor
invd
ficompl
insl
inc
arpl
shll
and
cmpsl
in
jge
inc
pop
xor
pop
lods
in
fldenv
fdivrs
ss
add
addb
repnz
int
xor
push
dec
inc
cmp
lahf
fwait
xchg
shlb
inc
sub
int
addr16
xor
std
enter
je
pop
shl
add
arpl
mov
sbb
imul
daa
hlt
iret
inc
add
movsl
cmp
pushf
inc
xor
lret
mov
sbb
mov
in
inc
pop
xor
shl
add
or
dec
add
cmp
xchg
shll
cld
repnz
iret
sub
lcall
pushf
enter
and
insl
cli
and
ret
pop
mov
inc
enter
cmc
in
loopne
add
mov
add
in
and
cmp
cld
mov
ds
scas
push
lret
repnz
inc
mov
xchg
push
lcall
mov
fsts
out
in
ds
inc
lds
pushf
sbb
jmp
add
int
loopne
inc
repz
pop
xor
pusha
add
andl
in
idivl
test
inc
ds
fidivs
or
push
enter
jecxz
dec
mov
cmp
and
jecxz
popa
adc
xor
out
insb
nop
pop
enter
sub
xchg
add
scas
stc
push
add
lcall
into
repnz
sub
stc
fstpl
ret
mov
push
pop
out
orb
and
test
in
incl
lret
fistpll
enter
mov
jnp
hlt
mov
cmp
aaa
in
outsb
insb
popa
push
push
lcall
pop
add
lcall
mov
fdiv
push
or
orb
xor
sub
subl
dec
push
adc
dec
test
popa
or
xor
fcompl
adcl
insb
xchg
out
packssdw
push
ror
das
cs
test
shrb
dec
daa
pop
loop
les
mov
stc
jns
mov
adc
rorb
nop
jmp
js
sub
mov
outsb
xchg
and
dec
cmpsb
mov
test
in
mov
sahf
xchg
xor
jbe
jno
repnz
into
in
ret
pop
sarl
mov
jne
cmp
fucom
sbb
pop
shrl
cmp
cmpsb
adc
xchg
mov
fstps
inc
lcall
lds
sarl
mov
lcall
xlat
insl
push
loopne
in
pcmpeqb
mov
sub
mov
in
daa
cmp
add
mov
daa
inc
inc
outsb
xor
es
mov
mov
dec
add
xor
jg
sub
cmpsl
hlt
sub
mov
loope
pop
xor
decl
dec
xor
inc
cmp
jb
mov
sub
push
push
xchg
pop
cmp
test
push
les
call
lcall
cmc
xor
outsl
cmp
popf
bound
rorl
mov
ficomps
clc
push
shll
sbb
pop
xor
push
fcoml
movsb
xlat
jbe
xchg
arpl
mov
je
jle
xchg
test
push
lret
mov
or
jae
cwtl
xlat
mov
test
push
xor
shl
test
or
out
and
or
pop
cltd
pushf
cltd
fisubs
stc
xchg
jg
leave
dec
cli
cmp
cmp
fs
mov
xlat
push
inc
inc
and
push
jns
add
sahf
inc
xchg
sub
inc
roll
mov
arpl
push
addb
cwtl
mov
addr16
cmp
outsl
and
push
cmpsl
adc
mov
adc
stc
lds
pop
adc
pop
stos
incb
inc
jnp
je
jno
stos
mov
sub
aaa
clc
loopne
xchg
ss
ret
and
dec
shlb
add
pop
mov
jo
mov
cvtps2pi
js
loopne
push
cmp
loop
stos
cmpsl
xor
push
xchg
adc
insb
iret
mov
stos
dec
xchg
adc
out
or
push
push
fcoml
cmp
mov
rcrb
test
fildl
xchg
jne
stos
dec
rol
test
dec
stc
loop
jb
cltd
inc
fstps
dec
adcl
pop
or
jge
fwait
roll
sbb
adcl
je
jnp
mov
push
movsb
sub
mov
push
je
and
shlb
jle
outsb
rorl
in
or
pop
push
into
hlt
jns
adc
aaa
sub
mov
dec
or
stc
out
scas
mov
push
daa
and
and
adc
cmp
pop
mov
mov
stc
std
jp
repnz
hlt
and
adc
pop
ret
push
negb
mov
cmpsl
mov
stos
mov
mov
mov
cmc
mov
and
loope
xchg
pop
into
ljmp
aaa
xor
jnp
stos
movsl
add
add
clc
jno
pop
jne
nop
popf
and
mov
jae
lods
sbb
adc
ds
nop
jg
pop
insb
cmp
adc
int3
sub
jno
movsl
sti
xor
lret
leave
outsl
cmp
clc
in
shlb
push
jge
pusha
sbb
mov
out
out
sbbb
cmp
pop
stc
push
lods
mov
movsb
jae
cmp
sub
xor
jecxz
imul
std
xchg
dec
cmpsb
dec
decl
int
insl
inc
mov
mov
inc
int3
fldenv
bound
push
or
in
aaa
in
out
stos
pop
sbb
popf
and
outsb
pop
jns,pn
andb
jb
push
sub
mov
rcrl
bound
add
call
inc
lds
add
sub
jmp
imulb
cltd
jl
pusha
nopl
insb
out
sahf
daa
fstl
pop
pop
fisubrl
fwait
cwtl
lahf
or
mov
push
into
or
push
xchg
sub
ljmp
mov
out
xchg
mov
dec
daa
cmp
pusha
enter
dec
pusha
mov
push
jae
rcll
adc
xchg
xchg
xchg
insl
inc
mov
push
xchg
imul
sbb
stos
pop
cmp
and
aaa
dec
stos
je
cmpb
aaa
jo
pop
jg
fisubrl
add
pop
add
mov
stos
xor
ror
insb
sub
mov
call
xor
mov
fsubl
or
fiaddl
aad
loopne
mov
jne
dec
push
jle
or
mov
push
cs
jbe
mov
cltd
push
sarl
sahf
or
xchg
sub
addl
adcl
out
andl
adc
and
mov
mov
stos
lret
cld
mov
cmp
inc
jae
or
call
jmp
push
cmp
cmp
in
lret
std
out
out
or
and
sbb
enter
push
lock
sub
dec
cmpsl
jne
outsl
mov
jg
mov
adc
dec
mov
xor
push
mov
subb
sarl
mov
data16
xor
push
imull
mov
sub
add
sub
cmp
incb
loop
addr16
push
test
adc
sbb
and
aam
jge
cld
shll
lds
sti
addr16
pop
mov
add
shlb
xchg
in
cltd
loope
call
cmp
jg
aam
push
aas
cltd
xchg
push
add
lods
paddusb
sti
call
nop
cmpsb
cmp
adc
mov
inc
fisubs
inc
or
jmp
ficoml
or
loop
not
xchg
or
pop
nop
add
push
mov
scas
jl
repnz
adc
jge
shlb
aas
xor
inc
je
enter
divb
in
and
xchg
jl
lods
mov
mov
and
lret
adc
jmp
je
aam
fdivr
shl
fdivs
cli
jge
adc
and
and
mov
xchg
cli
repz
repnz
or
ss
mov
int3
jge
mov
imull
xor
movsl
and
inc
lods
insl
subl
jge
mov
nop
addl
cld
icebp
and
dec
push
ret
adc
rcrb
lret
scas
sbb
push
insb
ja
jo
incb
mov
dec
gs
fdiv
mov
stos
mov
cmp
sbb
pop
pop
mov
mov
xchg
enter
aam
sub
mov
sbb
testl
pop
and
mov
out
aam
insb
bound
iret
cmpsb
and
pop
inc
shll
pop
stos
xor
adcb
dec
mov
ljmp
pop
sub
push
or
mov
xor
rcll
cltd
rclb
push
movnti
in
loopne
jbe
cmp
outsl
mov
test
pop
cmp
mov
fs
lds
mov
xor
lds
xchg
add
lahf
push
std
add
into
inc
mov
enter
rcrl
call
hlt
in
pop
int3
ret
ljmp
inc
push
int3
xchg
sbb
lock
add
insl
adc
bound
loope
xorl
cmpb
int3
cmc
ja
jbe
cwtl
rorb
fsubrs
xchg
dec
mov
adc
clc
pop
pop
sub
push
fmuls
test
pushf
sahf
lock
aaa
mov
cltd
adc
inc
xor
cmp
pop
icebp
push
fbld
fs
fcomip
in
mov
hlt
or
fwait
push
pop
ret
faddl
xchg
lods
dec
jg
add
bound
mov
dec
js
xchg
pop
lcall
je
test
movsb
xor
lret
insb
in
mov
xchg
daa
inc
daa
inc
or
test
xchg
mull
pop
fistps
in
cli
cmp
add
lods
cmp
mov
shll
lahf
xorb
jb
cmpsl
jp
icebp
test
xchg
jns
outsl
sbb
cmovs
outsb
xor
rolb
and
cmpsb
test
dec
popf
dec
je
inc
les
push
ds
aam
pop
and
add
adc
cmp
mov
iret
and
lods
in
mov
cmpsw
in
les
xchg
mov
lods
addb
jmp
pop
sub
cvttsd2si
pushf
aam
cltd
mov
inc
xor
out
subl
cmpsb
push
lds
xor
sbbl
add
pop
jg
gs
dec
adc
xlat
inc
ja
jb
add
aam
adc
cmp
dec
adc
xchg
fs
movsl
sub
movsl
test
inc
xor
lret
mov
sbb
dec
cmpsb
jp
nop
mov
lahf
aas
rorb
pop
not
jmp
fwait
icebp
aaa
sarl
sbb
sbb
loopne
ljmp
and
lahf
xor
pop
mov
and
and
inc
cmpsl
add
ja
push
je
push
loope
rcrb
int
xchg
sbb
mov
push
mov
out
lahf
ret
fwait
mov
xchg
adcl
leave
mov
fcmovnbe
in
cmc
dec
sarb
xchg
stc
dec
int3
dec
adc
dec
pop
or
cmp
sub
or
out
aam
dec
sbb
inc
xor
mov
adc
fisubs
inc
in
dec
pop
ret
test
mov
lods
add
inc
lods
test
out
jg
ja
inc
enter
out
loopne
andl
push
jge
xorb
hlt
stc
adc
push
adc
addr16
mov
jecxz
leave
cs
push
cmp
fsts
pop
fisubrl
insb
xchg
outsl
push
or
xor
adc
inc
aas
stc
or
inc
ljmp
daa
jecxz
sbb
mov
xor
loop
cmp
mov
test
rolb
daa
jle
nop
stos
cld
rcll
loope
push
in
add
out
xor
daa
jecxz
add
movsb
sub
xchg
jae
mov
ret
cmp
in
aam
std
fwait
and
enter
lods
xchg
mov
leave
cmpb
dec
rolb
lods
or
aad
xlat
fisubl
sub
xor
lret
bound
ud1
push
xchg
add
mov
mov
dec
daa
dec
int3
xchg
dec
movsl
push
out
jp
cmpb
push
loope
and
movsl
mov
movb
lods
add
sub
add
in
and
pusha
adc
xor
lret
cmpsl
xor
push
mov
xor
dec
and
push
andb
addr16
fisubrs
adc
mov
mov
cwtl
in
add
lret
xor
sarb
out
xor
popa
xchg
iret
in
push
aas
dec
sub
lods
cs
push
inc
inc
jnp
dec
mov
je
pop
shlb
sub
repz
lret
jge
in
lcall
push
mov
stos
xchg
lahf
mov
or
movsb
mov
pop
jae
lds
stc
rcll
lods
xchg
fsubrl
cld
mov
or
sbb
dec
hlt
mov
in
test
outsl
cltd
dec
sti
rep
cmc
not
and
cli
sub
lahf
scas
dec
into
out
add
ret
lret
xchg
push
dec
insl
loopne
push
call
inc
fisttps
add
imul
sbb
xchg
or
mov
orl
mov
imul
mov
adc
roll
mov
pushf
inc
loope
iret
jl
in
add
icebp
jg
inc
add
in
mov
inc
xorb
fsubl
scas
out
push
ja
xchg
xchg
inc
inc
leave
shl
sub
xchg
xchg
adc
in
xor
push
adc
pop
fwait
cmp
adc
fistl
ret
fimull
sahf
jnp
rcrl
xor
mov
fnstsw
pop
mov
in
push
aad
mov
fs
shll
xlat
lods
int
andl
addr16
shlb
jns
mov
cmpsl
inc
popf
mov
leave
subl
es
dec
dec
jge
jmp
mov
scas
repz
iret
mov
mov
rcll
adc
inc
mov
mov
test
sbb
roll
repz
aas
imul
loopne
ljmp
xchg
lods
push
in
in
mov
pop
adc
mov
fcomip
fcom
sbb
data16
in
pushf
stc
dec
jb
rolb
neg
out
out
push
or
enter
xlat
sahf
xor
enter
into
add
stos
cld
dec
imul
add
fsubl
mov
fldlg2
jg
xlat
add
sbb
push
popa
xor
mov
sbb
xchg
test
imul
xchg
lods
xor
movsl
pop
xchg
aad
adc
and
shrl
mov
ljmp
xor
test
push
out
xor
fldl
mov
aad
aam
xor
repnz
inc
imul
pusha
sahf
pop
cld
mov
jno
ja
dec
push
pop
add
xchg
in
sub
call
lds
loop
mov
adc
cmp
cmp
dec
inc
and
mov
inc
xlat
push
jp
sub
fimull
push
mov
mov
or
add
pop
pop
loop
clc
cli
sub
jae
add
test
dec
mov
les
int
xor
cmp
xor
sub
cmpsb
addb
push
sbb
inc
push
mov
pop
leave
lods
sub
push
or
push
sbb
cmp
xchg
sbb
and
repz
gs
iret
ja
pop
imul
cmp
in
adc
inc
xchg
push
cmpb
add
enter
mov
repz
mov
or
ret
xchg
dec
enter
push
mov
mov
out
add
mov
cmp
cmp
add
inc
mov
and
pop
loopne
into
mov
cltd
mov
jnp
push
jp
and
dec
dec
jns
push
test
cmpsb
fstpt
movsb
or
pop
fistps
add
icebp
rcrl
push
ljmp
pop
jbe
addr16
in
and
into
inc
add
jg
test
lock
imul
inc
outsl
mov
cld
cmp
mov
imul
inc
inc
pop
std
inc
pop
movsb
adc
ds
push
sti
jmp
xchg
outsl
js
roll
jl
mov
inc
testb
push
lret
add
push
add
loope
syscall
outsl
out
mov
loopne
into
int
push
into
jbe
inc
push
dec
inc
aas
cs
adc
sub
xlat
mov
adc
mov
mov
in
xchg
out
mov
lock
inc
std
pop
repz
cmp
mov
hlt
out
sub
dec
aas
sub
js
jge
dec
pop
ficoml
call
test
test
sbb
rcr
mov
mov
mov
pop
sub
mov
aaa
or
cmp
sti
lods
jle
xor
out
add
testl
lcall
inc
inc
dec
adc
and
repz
cmp
mov
sahf
dec
nop
shr
loop
ret
sub
test
xchg
leave
loope
pop
lret
loope
sub
hlt
pusha
inc
pop
xorl
aas
stos
sbbl
sub
in
int
pop
or
mulb
inc
repz
outsl
xor
cli
fs
add
sub
mov
xchg
cwtl
jmp
or
cmp
and
xor
xchg
aam
mov
fnstsw
inc
shrb
rcrb
or
and
pop
mov
imul
add
add
shl
adc
stos
out
pop
adc
lret
jbe
stos
pcmpgtb
and
in
xchg
push
cmp
mov
sub
push
arpl
ja
mov
xchg
and
jne
lods
push
cmp
sub
int3
xchg
xor
push
add
out
lods
scas
jbe
pushf
out
adc
cmp
jae
bound
jle
cwtl
vpsllw
pop
popf
call
push
push
rcrb
adcb
push
push
and
pop
cmp
mov
jge
xchg
sti
icebp
inc
in
push
fdivp
mov
or
popa
je
or
cmpsb
lcall
test
adcl
ljmp
xor
ret
popf
lock
and
and
inc
stos
mov
xor
imull
or
cmp
ret
cmpsl
dec
fidivs
mov
clc
je
cwtl
adc
pop
test
fptan
inc
clc
sub
int3
adc
sbb
adc
dec
cld
pusha
imul
pop
jo
aad
adc
pushf
adc
inc
mov
fwait
adc
into
mov
push
lahf
outsl
xchg
mov
mov
and
cld
arpl
mov
test
imul
mov
push
mov
pop
xlat
dec
fwait
cmp
insl
pop
push
jge
and
or
test
das
jmp
jns
pushf
push
and
push
repnz
and
insb
movsb
repnz
push
rcll
xlat
mov
and
xchg
sarb
inc
jnp
push
jno
jle
xchg
in
dec
push
mov
repnz
das
sbbl
mov
test
fildll
jl
push
out
add
orl
cltd
lcall
sti
subb
dec
dec
andl
mov
pusha
fmuls
sbb
sub
xor
in
mov
pop
add
ret
pop
movsl
int3
and
xchg
pop
mov
or
fmull
loopne
leave
pop
imul
int3
cmp
add
xor
aam
xchg
out
cmc
mov
mov
fistl
mov
push
and
sbb
lods
cltd
scas
push
or
fnstcw
jae
dec
push
not
test
mov
mov
aad
xchg
std
pop
out
mov
sahf
ja
sbb
push
ret
out
orb
xchg
enter
push
and
inc
cwtl
stos
cmp
loopne
shr
add
gs
mov
iret
pushf
dec
pop
xchg
jecxz
mov
pop
shrb
enter
mov
sub
pop
or
iret
mov
into
sbb
dec
arpl
dec
call
pusha
fwait
jae
sub
repz
mov
jecxz
jle
rorb
fcoms
mov
scas
cmp
jmp
pop
cmc
xchg
add
js
test
adc
xor
aam
rcrb
outsb
call
add
jle
sbb
mov
sub
dec
pop
sbb
mov
push
or
jg
pop
adc
call
jnp
push
mov
mov
aas
push
or
ljmp
jne
xor
sbbb
mov
mov
jg
push
jne
negb
adc
leave
inc
dec
add
and
xchg
push
xchg
and
push
insl
mov
loopne
mulb
nop
aam
repnz
mov
out
dec
lods
test
cmp
lods
xor
mov
or
push
cld
jno
in
lcall
stos
adc
cmp
xchg
dec
mov
movsb
adc
pop
cmp
inc
loopne
hlt
daa
lea
pop
cmp
push
and
sti
push
inc
cmpsl
pop
mov
fdivs
cmp
mov
jnp
outsb
insb
fs
dec
push
sahf
and
xor
ret
addb
jns
dec
jae
pushl
out
cmp
push
out
mov
dec
xor
cmpsb
insl
ja
aad
sub
mov
cmp
in
incb
push
dec
test
lea
add
imul
subb
ret
or
cmp
sbb
popf
in
es
fistl
jg
mov
int3
or
in
fwait
mov
fs
mov
into
dec
test
push
mov
cmp
aaa
mov
push
dec
and
mov
push
shrl
jb
push
xlat
mov
iret
mov
out
lea
or
fcmovnbe
cmp
sub
mov
add
movsl
sub
sub
add
shll
les
add
mov
add
mov
inc
push
shlb
xor
inc
adc
punpckhwd
push
push
mov
arpl
cmp
or
bound
inc
mov
pop
pop
pop
fistps
imul
scas
and
push
and
mov
lds
cmpsb
adc
popf
jl
and
xchg
inc
lds
mov
popf
mov
popa
out
sub
loopne
divl
inc
xchg
push
add
add
in
adc
lret
rclb
stos
add
imul
jge
sbb
sti
dec
xor
roll
orl
push
sub
jl
jmp
mov
test
cmp
mov
lahf
bound
outsb
mov
loopne
mov
lds
bound
clc
loopne
push
nop
adc
lahf
push
inc
outsl
fistpll
or
push
cmp
mov
mov
rcr
sub
pop
negb
pusha
jno
sahf
mov
jp
cmpsl
fdivl
mov
jg
outsl
scas
rcrb
xor
adc
sbb
push
cld
mov
mov
movsb
inc
inc
add
das
add
sbb
sbb
cmp
jmp
mov
inc
popf
pop
out
enter
mov
mov
mov
push
ret
in
or
sub
test
push
mov
push
adc
fsubs
cmp
add
bound
insl
arpl
or
xchg
aaa
stc
cmp
jnp
shll
jns
fsubrs
push
fmull
pop
mov
pop
cmp
scas
icebp
mov
hlt
pop
test
push
xchg
cltd
jge
les
pop
add
lods
adc
mov
dec
iret
inc
das
xchg
cmpsb
jle
mov
call
pop
xor
lahf
subl
mov
cmp
pop
hlt
lods
or
fisttpl
sub
push
ret
cltd
dec
push
lret
jno
dec
scas
inc
push
bound
js
cmp
lcall
mov
mov
mov
push
cmc
scas
push
rcll
insb
add
jmp
pop
pop
xor
jne
xchg
popl
mov
mov
push
pop
std
push
jne
pop
adc
jmp
pop
aas
hlt
dec
cmc
outsb
mov
or
xlat
stos
push
stos
lock
adc
xor
inc
rcr
es
mov
fucomi
dec
inc
mov
lahf
or
shll
xchg
push
stos
lds
notb
cmp
lret
or
inc
pushf
lret
pop
push
pop
cmpl
sub
jp
xorb
inc
dec
aaa
in
test
jecxz
jp
jge
fistps
aam
pop
es
nop
inc
lods
push
imul
dec
daa
int
mov
dec
sbb
lock
cmpsl
cld
push
jbe
cld
xchg
into
in
pop
stos
ret
test
add
sti
ret
sub
pop
fidivrl
mov
inc
push
test
add
pusha
inc
aad
out
jle
cltd
sbb
ja
inc
inc
in
inc
cli
mov
sbb
movsb
xchg
jl
adc
mov
push
pop
cmpsb
rorb
stc
fsubl
mov
inc
arpl
stos
int
adc
int3
mov
push
roll
fnstenv
loope
cltd
icebp
xlat
xlat
lcall
cld
xor
call
cmp
pop
out
mov
sub
jl
inc
sbb
xchg
pushf
stc
fdivs
imul
push
push
push
mov
cld
pop
lds
add
xor
fwait
push
mov
out
pop
jns
sarb
in
sbb
jecxz
jge
push
jnp
sti
mov
fidivs
repz
in
js
notb
repnz
mov
jge
movsl
loope
adc
pop
jae
mov
adc
add
outsl
lahf
les
mov
in
pop
not
popa
pop
out
ds
enter
add
clc
aad
xor
rclb
adc
mov
aam
adc
sbbb
pushl
dec
cmp
orl
mov
adc
mov
xchg
pop
and
sbb
inc
popa
jmp
divb
popa
jnp
arpl
adc
mov
stos
sub
pushw
jmp
dec
add
aam
arpl
cmc
mov
add
jl
sbb
sbb
loope
push
jae
cld
popa
je
sbb
test
xchg
int
enter
int
test
inc
sub
test
mov
and
xchg
jne
dec
subb
jnp
lret
leave
jl
adc
rolb
cli
mov
xor
arpl
jl
inc
ja
dec
sbb
mov
lcall
mov
insb
or
jno
rclb
inc
and
sbb
pmovmskb
inc
jne
pop
cmp
test
mov
and
lock
mov
add
mov
dec
repz
mov
push
xchg
in
mov
bound
adc
add
xor
or
loope
sbb
or
call
insl
nop
daa
xor
inc
mov
push
in
addr16
cmc
nop
popl
enter
mov
push
es
cs
mov
test
fistpll
cmc
lret
push
xchg
les
pop
xchg
jbe
test
scas
sub
sub
test
push
pop
movsl
fs
mov
sbbl
and
mov
mov
jmp
fistpll
sub
ja
jns
sub
out
imull
pop
jge
lods
inc
lea
push
lods
insl
mov
shr
in
lcall
mov
mov
lods
enter
lds
clc
in
xchg
inc
or
adc
inc
cmp
lds
in
loopne
rolb
mov
dec
int
mov
cmp
adc
filds
mov
xchg
push
arpl
inc
add
fdivl
mov
sbb
icebp
jns
loopne
or
scas
pop
dec
add
out
roll
rcrb
nop
pop
cmc
dec
enter
push
sub
int3
xchg
mov
aam
push
mov
mov
lahf
enter
push
inc
lcall
bnd
or
call
jb
test
and
push
in
in
push
dec
ds
cwtl
call
cmc
fidivs
xchg
int
sub
movsl
xchg
dec
lds
xor
cmp
daa
int
or
int3
jne
imul
sarb
inc
out
cwtl
jl
fisubrs
sbb
lahf
cwtl
dec
rclb
lret
jle
aam
repnz
aas
sbb
or
mov
popf
in
lcall
fimull
inc
xlat
xor
fwait
leave
aam
and
mov
jecxz
ljmp
xchg
leave
rorb
sbb
out
adc
or
int3
neg
sub
sarl
pushf
mov
cld
dec
push
int3
adc
push
sbb
xor
aaa
addr16
mov
sub
nop
pop
push
jge
dec
pop
nop
mov
jecxz
pop
mov
js
fnstcw
ja
and
dec
mov
popfw
cs
xchg
lret
cmp
push
xchg
adc
inc
add
cmovbe
cmp
jl
mov
aaa
sbb
jg
sub
mov
call
das
add
push
add
add
popf
pop
dec
int
lods
sub
clc
stos
dec
cmpsb
xor
loop
pop
mov
ret
test
pusha
dec
sar
arpl
push
add
and
cmp
mov
xor
repz
test
out
pop
seto
or
dec
xor
bound
shlb
dec
scas
mov
inc
fldcw
xor
fmull
adc
nop
mov
sub
push
cmp
cmp
push
jo
add
jle
push
in
aad
daa
xchg
xchg
adc
addr16
cmpsb
orl
inc
xor
ret
pop
std
adc
out
mov
ljmp
imull
lret
shlb
pop
mov
aas
add
push
sarl
shl
ret
add
add
push
scas
cmp
jle
or
dec
adc
iret
and
jbe
test
push
mov
push
mov
mov
pop
imull
aad
movsb
das
mov
outsb
dec
xor
cmp
jl
cwtl
pop
movsl
xor
daa
es
mov
daa
mov
in
daa
insl
nop
or
sub
pusha
aam
push
test
add
jne
pushf
mov
mov
add
and
enter
pop
pop
inc
repnz
ficoms
sub
scas
add
cli
jge
cmp
pop
mov
scas
fidivrl
jae
sbb
adc
pop
rol
push
ja
jne
sub
imul
rclb
pop
xchg
ds
sub
int3
pop
and
or
adc
mov
jmp
cmpsb
movsl
cwtl
xor
xor
mov
loope
cli
push
data16
xchg
mov
xchg
fwait
loop
test
xor
mov
xchg
dec
in
fnsave
push
sub
or
pop
repz
clc
mov
and
shrl
xor
sbb
mov
int
loop
cmc
adc
sbbl
fwait
jo
repz
cmpsb
out
mov
loope
in
pop
repz
sub
fcoms
movsl
lock
jbe
out
test
ja
mov
ja
mov
dec
les
pop
dec
fwait
jne
or
lret
fsubrs
in
stc
cmpsl
adc
xchg
mov
mov
or
pop
jb
jno
out
xchg
cmp
nop
popa
xchg
jle
dec
fs
fistpll
sbb
int3
add
aas
loope
in
pop
rolw
jne
ret
push
mov
adc
push
fcomps
jnp
scas
jle
imul
cli
pop
mov
mov
or
inc
lret
pusha
pop
adc
inc
fstps
dec
jb
enter
shr
aad
pop
push
outsl
negb
xor
fld
and
adc
dec
mov
xchg
es
leave
lock
loope
ja
xchg
leave
pop
mov
lahf
mov
mov
cmova
cs
push
mov
mov
jae
xchg
jae
mov
mov
mov
push
mov
adc
repz
or
jbe
test
subl
cli
cmp
mov
mov
mov
mulb
lahf
pop
stos
imulb
sahf
mov
and
fisubrs
dec
push
test
and
lock
fisubs
test
lods
add
in
inc
out
push
cmc
push
dec
das
or
arpl
gs
sbb
adc
mov
dec
adc
out
add
mov
adc
les
inc
popl
and
mov
ljmp
pop
and
jmp
adc
arpl
popf
sahf
stc
or
mov
cmp
ret
jle
inc
sbb
lods
inc
push
test
mov
cmp
adc
orb
or
jb
bound
mov
sbb
stc
call
incb
scas
fcmovnb
xchg
jns
cli
cli
cs
out
adc
mov
jle
push
pop
test
jecxz
mov
jne
repz
std
pop
pop
cltd
cmp
xor
cmpsb
push
inc
xchg
or
test
int
jp
shlb
pop
dec
xchg
push
aas
jp
mov
pop
push
xor
or
ficompl
jae
cld
movsb
out
iret
xchg
in
decl
add
dec
pop
mov
jmp
mov
test
push
clc
adc
mov
call
cli
aad
in
mov
mov
mov
add
sub
ja
js
mov
inc
inc
lret
test
je
stc
mov
or
sbb
push
loopne
pop
sub
ficomps
mov
push
ja
ljmp
imul
sub
shlb
jmp
call
and
loope,pt
add
cmp
pop
inc
cmpsl
dec
insb
dec
dec
scas
mov
mov
mov
dec
dec
jmp
sub
xchg
push
cli
out
popf
push
dec
push
and
hlt
mov
lods
mov
loope
and
fnstenv
shll
dec
mov
xor
loop
hlt
inc
movsb
ret
sub
xchg
je
mov
fsubrl
jo
mov
les
pop
fldcw
imul
int
arpl
push
repz
or
lock
and
adc
mov
popa
mov
movsl
mov
add
cmp
pop
mov
call
sub
aaa
xchg
hlt
pop
into
jae
ret
jle
dec
insb
addr16
iret
pop
test
push
decl
pop
in
push
emms
shlb
loop
and
cld
xchg
sarw
lahf
xchg
and
push
loope
jae
xor
dec
pop
sub
icebp
jmp
je
mov
fdivr
ret
mov
sbb
and
and
xchg
pop
jnp
inc
or
push
je
mov
and
jmp
jne
cmpl
in
sub
movsl
cltd
fidivl
xor
or
xchg
call
add
shll
adc
cli
fldcw
pop
dec
rolb
cltd
movsl
cmp
push
and
inc
loop
and
fsubrl
push
in
cmp
xor
addr16
mov
out
fs
inc
mov
xchg
rcrl
in
clc
adc
ljmp
subb
loope
popf
out
jl
push
cs
mov
lcall
cmp
jno
rcrb
fnstenv
std
mov
xchg
cmpsl
cwtl
jno
xchg
stc
push
iret
in
pop
xchg
xchg
cmp
mov
sarl
lods
test
push
dec
les
mov
pop
mov
xorl
cmpb
push
mov
mov
aaa
or
fistpl
pop
mov
xchg
out
fwait
xor
xchg
std
xor
mov
cmp
dec
and
aam
sbb
fstp
sti
dec
sbb
in
jnp
subb
gs
sub
pusha
jge
push
mov
out
ljmp
into
and
lahf
mov
nop
lcall
fdivrs
sub
testl
test
push
mov
mov
movsb
ret
add
adc
imul
rclb
mov
icebp
cmp
xor
out
add
sub
loopne
cmp
daa
xor
sahf
cli
in
cmp
jp
movsl
jp
cmc
inc
xchg
xchg
mov
inc
call
fwait
xor
loopne
and
shlb
pop
fimull
jl
imul
push
iret
xchg
movsb
push
sbb
daa
xchg
mov
sbb
adc
jecxz
adc
push
push
push
jbe
and
outsb
mov
jp
pop
std
test
mov
dec
addr16
push
add
mov
dec
dec
icebp
int
scas
pop
jp
dec
mov
xor
or
inc
ror
filds
jns
scas
js
gs
test
fcoms
dec
imul
dec
or
mov
inc
movsl
int
cltd
rclb
outsl
cmp
and
adc
sub
and
loopne
add
popf
stc
ja
inc
fisttpll
dec
movsl
mov
lock
cmpsb
cmp
xadd
ret
rorl
dec
ror
imul
push
lods
test
jb
jg
dec
push
adc
cmp
out
ljmp
and
enter
mov
insb
icebp
jns
xchg
popf
push
das
imul
xor
xor
push
mov
icebp
aas
inc
mov
xor
pop
jnp
sub
cmp
shll
push
mov
and
fadds
cmp
enter
ds
add
imul
data16
jmp
movsb
aad
and
jns
lea
outsb
test
mov
daa
xchg
repnz
add
xchg
dec
push
jecxz
ja
dec
push
stc
fistl
mov
and
dec
icebp
or
push
js
and
jno
push
pop
cmp
bound
mov
test
inc
aas
cltd
pop
push
jb
out
jns
pop
pop
fcom
mull
stc
mov
and
out
fxch
xor
and
jbe
lcall
popf
inc
push
cmpb
sbbl
outsl
leave
cmp
imul
in
loop
jp
out
popa
pop
loope
scas
int3
sub
ret
mov
hlt
jmp
fiadds
das
mov
lret
stc
js
cmp
jae
add
jns
mov
adc
push
jge
jl
cmp
ljmp
dec
cmp
cs
cmp
stc
sub
lret
add
lcall
xchg
adc
fs
ficomps
adc
mov
fnstcw
cli
push
xor
in
je
or
dec
ljmp
mov
xchg
push
hlt
xchg
leave
dec
inc
pop
orps
not
mov
adc
or
rolb
enter
sbb
repnz
inc
repz
testl
mov
inc
cmp
xorb
cmpsl
mov
mov
cmpsl
bound
adc
add
into
add
or
loopne
adc
cwtl
es
sbb
in
jns
push
shl
fiadds
sbb
arpl
outsb
dec
dec
imul
xchg
push
cmp
arpl
shl
insb
fcomps
ffreep
dec
mov
mov
test
cmp
and
or
int
ds
add
inc
mov
jbe
mov
xchg
shlb
sbb
sbb
cmp
adc
sahf
lret
mov
xchg
inc
loop
jecxz
cld
lret
std
int3
ror
fidivl
sub
jmp
dec
push
mov
lcall
and
lret
push
sar
push
cmpl
sahf
cmp
pop
cmpsb
fsts
mov
ja
mov
jnp
jno
cld
iret
mov
sub
in
sarb
inc
mov
ds
mov
inc
in
aad
cli
movsl
repnz
leave
sbb
or
xchg
xchg
mov
mov
sub
loopne
mov
adc
inc
outsb
mov
vmovhpd
or
xchg
mov
cwtl
cld
push
add
jmp
shlb
cs
jo
scas
repz
adc
aas
or
xor
mov
nop
out
in
ret
shlb
jmp
int3
cmpsl
sbb
cltd
mov
mov
mov
pop
or
dec
xchg
stos
xlat
dec
push
or
gs
call
iret
scas
mov
pop
in
mov
sub
push
cli
mov
imul
jecxz
push
mov
cs
push
hlt
ret
mov
dec
or
cld
jecxz
enter
pop
cmpsb
in
add
movsl
imul
xlat
xchg
gs
mov
filds
mov
add
das
daa
xor
dec
lcall
mov
push
jb
sbb
push
mov
jle
mov
fsts
sbb
sub
cmc
jb
scas
add
jae
xor
lods
movsl
sub
dec
clc
sub
cmp
loop
lret
imul
xchg
push
in
scas
mov
pop
cmp
adc
add
repz
lcall
lret
jg
pusha
fimull
in
dec
rcrb
xor
mov
mov
jecxz
sbb
xchg
mov
iret
lcall
and
pop
jbe
mov
sub
sub
lods
shr
add
adc
xor
leave
aas
mul
fisubl
or
and
movsb
int3
repz
push
jge
mov
dec
sub
out
pop
std
cmpsl
faddl
shrl
out
and
pop
cli
lods
testl
xor
loop
jae
jp
lea
add
mov
xor
jle
fsts
in
add
push
movsb
lcall
lahf
adc
jl
loope
fildl
icebp
idivl
sub
and
mov
int
ljmp
jp
add
leave
pop
or
mov
clc
test
xchg
xor
cmp
and
push
jno
cwtl
psrlw
add
lea
pop
push
mov
add
iret
loope
addr16
push
push
dec
xor
ret
movsl
into
scas
push
xchg
fs
in
scas
repnz
inc
or
cmpsb
and
jmp
jl
mov
adc
movsl
sub
jge
test
mov
pop
incb
mov
mov
insb
movsl
or
cmc
push
and
push
inc
mov
mov
inc
notl
fists
or
test
sbb
xchg
stos
adc
fiadds
sahf
pop
cmp
repz
mov
out
repz
jno
pushf
mov
jle
pop
mov
je
lods
notb
and
out
hlt
lahf
in
mov
push
xchg
cwtl
adcb
push
mov
and
mov
xor
out
pop
cmp
jae
dec
push
pusha
push
mov
fs
and
lret
push
jb
push
ret
dec
push
add
jne
sbb
add
jle
and
or
mov
add
adc
gs
mov
icebp
jl
jo
cmp
filds
adc
les
nop
mov
xor
enter
iret
mov
mov
sbb
push
fs
iret
inc
imul
fmul
xchg
jmp
add
jns
lock
insl
jae
ret
mov
jp
or
ss
pop
mov
xor
scas
leave
xchg
or
mov
popf
ret
fld
rorb
ja
lock
sub
dec
mov
lods
push
test
dec
fidivs
adc
lret
lods
add
and
inc
aaa
test
mulb
push
lods
xchg
dec
add
lret
enter
aaa
cli
xor
adc
mov
ror
dec
adc
sbb
mov
adc
sbb
in
int
rcrl
std
mov
sbb
xor
xchg
ss
ss
in
fimuls
mov
jo
jecxz
add
cmc
lock
xchg
out
xor
jns
aad
xchg
xchg
adc
dec
sbb
inc
xor
dec
popa
jae
incl
or
xlat
fisubrs
or
jnp
rolb
negl
popa
js
cwtl
jno
xchg
sub
fs
push
sub
arpl
xchg
pop
dec
roll
movlps
popf
rcl
cs
lock
adc
add
mov
xchg
mov
insb
sarb
push
in
mov
xchg
adc
lods
pusha
mov
mov
stos
incl
icebp
nop
stos
xchg
lret
pop
test
into
xchg
loope
cmc
xchg
pop
clc
out
push
daa
cmp
inc
or
insb
jnp
push
mov
pusha
push
dec
push
pop
in
das
ljmp
incb
bound
lock
ds
mov
adc
arpl
adc
sbb
mov
mov
and
mov
aam
adc
mov
dec
inc
ficoml
xchg
test
adc
in
fistps
ror
and
nop
addr16
aam
cmpl
stos
mov
sti
pusha
sub
testb
scas
and
ret
shl
rorb
xchg
sbb
popa
dec
mov
jle
fld
mov
fdivrl
pop
enter
jns
idiv
test
icebp
jmp
lock
negl
inc
push
sub
sub
xchg
popa
es
xchg
xchg
cmp
mov
pop
mov
in
and
push
and
repz
data16
jb
sarb
xor
out
push
es
lahf
mov
loope
sub
into
ljmp
gs
js
ret
loop
inc
imul
mov
mov
outsl
in
xchg
mov
mov
dec
pop
xor
arpl
mov
fcomps
cwtl
sbb
mov
ret
cmp
aas
xchg
push
imul
movsb
mov
ret
cmp
xchg
mov
mov
add
adc
inc
ret
push
ficomps
aam
mov
clc
data16
arpl
inc
call
xor
adc
das
xor
inc
dec
or
bnd
push
aaa
xchg
sahf
lods
mov
cmpsl
dec
mov
test
sti
adc
dec
sub
fdivrp
add
push
push
pop
jge
mov
push
pop
mov
ret
xchg
sub
jno
sti
or
mov
and
sarb
mov
mov
lahf
push
xchg
sub
push
out
cmp
fs
dec
nop
in
jl
dec
dec
subl
cmc
lods
xchg
xlat
jle
inc
out
and
add
jbe
inc
xchg
sbb
and
push
mov
xor
inc
pop
bound
das
pop
in
into
dec
inc
das
out
lret
mov
pushf
fs
or
popa
sbb
jl
cmp
lock
jae
xchg
loopne
fmull
jno
pop
and
je
pop
mov
call
jbe
mov
scas
and
int
cmp
pop
sub
cltd
add
in
pusha
or
into
cwtl
bound
adc
inc
imull
out
stos
je
jns
jnp
cwtl
iret
mov
int3
mov
jae
repz
outsb
insl
cmp
mov
mov
ss
aad
int
mov
mov
push
or
mov
or
loope
test
dec
scas
ja
int3
addl
ja
enter
call
push
xchg
jmp
mov
push
loopne
icebp
or
jp
notl
bound
push
inc
in
jo
mov
jg
push
add
add
fwait
nop
fcmovbe
inc
dec
sti
dec
dec
adc
fwait
dec
sub
das
mov
scas
mov
push
popa
stc
insb
mov
popa
push
cmpl
mov
aam
lret
mov
rolb
aam
fdivs
mov
dec
ljmp
je
cld
pop
scas
lahf
jnp
pop
ret
pop
cmp
cmpsb
bnd
out
sub
or
int
sub
cs
cmp
push
xchg
ljmp
mov
mov
mov
je
popf
pusha
in
adc
lret
adc
pop
cltd
daa
dec
or
movsl
sbb
xor
dec
or
rclb
and
add
rcll
pop
jno
dec
jmp
sbb
adc
cmp
imul
cli
fs
nop
push
cmc
orl
add
or
xor
arpl
inc
or
aas
ret
cmp
jmp
imul
out
inc
cmp
inc
pop
cmpsl
add
ror
aam
pushl
add
adc
mov
lahf
add
xor
outsl
xchg
mov
aas
pushf
sbb
mov
xchg
jp
xchg
pop
sbb
or
mov
mov
lahf
ljmp
insl
and
or
aam
jnp
inc
jnp
shrb
test
cmp
pop
js
sub
fs
mov
sub
shrb
out
cmp
xor
dec
sub
xchg
hlt
repz
fcompl
daa
add
mov
or
dec
fdivs
incb
movl
push
xabort
sti
fsubrs
out
adc
xchg
adc
inc
jl
cmpsl
lret
mov
pop
stos
ss
or
mov
pop
test
sub
pop
xchg
dec
gs
fists
icebp
ficoms
test
insl
push
add
dec
xchg
or
xchg
jbe
cmpsb
out
pushf
inc
repnz
stc
xchg
mov
data16
fisubs
movl
insl
adc
out
push
mov
fstpt
testb
push
arpl
in
popf
pop
out
xchg
adc
pop
mov
das
fldt
inc
add
ja
mov
sub
and
call
adc
mov
xor
gs
push
push
ret
add
dec
ret
insb
int3
ret
sub
mov
out
rcl
mov
sbb
mov
xor
inc
vpmuludq
pop
movsl
stc
insl
imul
test
cs
rorb
jb
je
add
or
cld
in
mov
ds
cmpsb
adc
pop
xor
call
imul
dec
adcl
mov
incb
hlt
dec
xchg
push
ret
inc
bswap
jae
lret
fisttpl
shr
lret
inc
aad
sub
in
mov
mov
stos
int
arpl
jge
xchg
push
push
out
scas
lods
jnp
popa
jnp
cmp
inc
and
push
add
add
sti
mov
shlb
rorb
xchg
or
fdivrs
jecxz
mov
inc
loop
cmp
data16
mov
cld
lcall
shrb
and
mov
xlat
adc
add
cwtl
sub
js
lock
mov
jb
lds
scas
inc
mov
ss
lock
les
or
xchg
nop
mov
ss
clc
jno
dec
mov
sahf
jge
sbb
xor
mov
xchg
cmp
stos
dec
addl
popa
into
fpatan
cmp
dec
xor
cmp
les
dec
leave
out
mov
filds
fwait
sbb
cmp
scas
lret
xor
dec
fldcw
jns
mov
fwait
and
push
dec
push
cmp
sbb
push
pop
sub
xchg
xchg
aas
inc
test
pop
push
cli
push
mov
lret
xor
fisubs
cmpb
mov
inc
popa
inc
clc
loope
ds
pushf
loop
aam
lods
int3
pushf
inc
add
into
int3
push
movd
movsl
dec
jnp
popf
mov
mov
mov
hlt
js
movsb
push
or
pop
in
fs
or
cmpl
insb
and
pop
test
in
pop
push
mov
mov
rcrb
sbb
jns
mov
inc
imul
subb
aam
mov
pop
or
in
aas
insb
icebp
sbb
mov
and
jo
fs
mov
jp
mov
pop
icebp
add
pop
outsl
subl
imul
ret
mov
adc
adc
loopne
push
sub
loopne
sbb
cwtl
xor
lds
movsb
mov
or
pop
sub
xorb
sbbb
popl
xchg
scas
push
push
jbe
jl
mov
pop
in
insb
out
dec
and
das
xchg
clc
inc
lds
dec
jnp
std
insl
xor
loope
add
cltd
lock
pushf
mov
push
sbb
leave
inc
call
jle
enter
insb
pop
mov
mov
hlt
arpl
or
mov
inc
or
pop
pop
push
inc
mov
push
dec
mov
push
xchg
out
jmp
stos
popaw
xchg
add
mov
pop
outsl
xor
sahf
or
nop
mov
lcall
idiv
sti
int3
mov
mov
sub
mov
inc
ljmp
xor
ds
pop
inc
enter
sub
lret
hlt
fistps
cltd
rcll
push
sbb
pop
mov
sbbl
stos
xchg
sarl
imul
adc
xlat
cld
movsl
dec
ss
sbb
mov
cltd
pushl
mov
mov
jbe
jecxz
imul
push
lods
ret
mov
jnp
push
shlb
mov
xor
jno
sbb
ret
and
in
andl
adc
cmc
icebp
mov
add
enter
cmp
pop
mov
sbb
mov
scas
mov
xlat
or
push
add
sub
add
mov
divb
jne
lods
jne
enter
xchg
pop
sub
inc
mov
jbe
pop
mov
and
mov
testl
pusha
push
test
add
rolb
fnsave
dec
mov
das
test
arpl
lahf
inc
test
out
fists
sbbl
sbbl
mov
pop
enter
mov
incl
aad
mov
dec
enterw
inc
testl
lret
and
ja
inc
repnz
push
mov
lret
sar
out
pop
dec
lock
sub
addb
mov
sub
fldenv
push
jnp
fs
loopne
and
ss
mov
mov
dec
mov
jbe
mov
pop
add
cs
test
dec
sbb
repnz
into
cli
mov
xchg
fstps
out
divb
sub
aad
mov
notb
mov
popf
jnp
mov
test
inc
std
ficomps
jb
mov
mov
iret
mov
roll
inc
in
xchg
add
int
mov
mov
pop
or
lds
mov
ficoml
push
mov
pop
stc
cmp
push
push
cmpsl
std
or
add
sbb
scas
addr16
lret
sbb
shlb
rorb
xor
or
adc
daa
adc
xor
add
in
xchg
loop
stc
or
repnz
jge
inc
mov
pop
rol
xchg
stos
dec
push
fsincos
mov
loope
pop
popf
nop
outsl
xlat
cmc
imul
iret
dec
cltd
mov
gs
add
std
outsl
movsb
dec
adc
test
mov
mov
call
outsl
aas
pop
sub
addr16
rcl
out
xchg
push
cltd
mov
les
mov
mov
push
repnz
adc
lea
pop
js
fsubs
sub
add
push
mov
cltd
push
sub
jmp
pop
std
fwait
xsha1
cmpsb
or
xor
pop
adc
mov
pop
adc
outsb
jb
fwait
pop
cwtl
cmpsb
or
fisttps
pop
js
ljmp
pop
js,pt
dec
dec
sub
loope
flds
sarl
lret
mov
add
or
loop
lret
mov
daa
push
mov
inc
xor
int3
in
add
jne
fld
rcll
dec
jne
leave
mov
enter
outsl
ds
idivb
or
mov
inc
dec
pop
cmp
test
pop
outsb
outsb
out
fdiv
push
or
adc
pop
mov
lahf
mov
inc
mov
or
call
imul
add
add
sub
push
lcall
repz
push
lcall
mov
mov
fcoms
lods
stos
sub
scas
cmpsb
imul
cmp
mov
out
adc
dec
or
movsb
push
stos
inc
lahf
or
hlt
cmp
pop
jne
loopne
cmpb
inc
jo
xchg
and
jo
mov
and
outsl
jg
push
fisubl
jo
jl
ret
stos
mov
loop
cli
sub
and
add
icebp
fsubrs
ljmp
pop
dec
fildl
xor
push
mov
cmc
and
fsubrl
outsl
or
pop
and
push
inc
rcrl
sub
cmpsb
out
adc
pop
xchg
mov
sub
fcomp
and
add
ja
in
and
gs
lock
sub
add
cmp
out
adc
push
mov
movsb
fistpll
movsl
add
mov
dec
mov
push
bound
inc
ja
lret
push
pop
push
fisttps
push
sub
cmp
popf
add
fistpl
sub
enter
pop
cli
and
div
fiadds
cltd
jo
pop
pop
aaa
cld
imul
inc
jmp
cmp
out
xor
mov
leave
in
pop
hlt
stos
jmp
mov
and
push
mov
and
mov
jno
outsl
xlat
aaa
dec
rorb
adc
mov
sub
es
push
adc
int3
adc
movsl
psubb
fs
imul
cmp
into
and
sti
or
fwait
cmp
fcoms
pusha
mov
std
push
inc
and
insl
lods
jne
jb
fidivrl
icebp
mov
xchg
push
and
and
mov
movsl
sbb
adc
idivl
mov
and
outsl
movl
iret
sbb
adc
insl
fwait
into
xor
popa
or
repnz
fs
test
push
adc
js
cli
loopne
sbb
imul
push
iret
push
mov
and
xchg
jae
xor
add
inc
push
jecxz
dec
mov
cmpsl
jg
cmp
je
adc
lods
jbe
outsl
jle
mov
fdivr
in
sub
xchg
or
dec
push
subl
dec
mov
imul
repz
inc
addr16
xorb
mov
mov
adc
dec
xchg
xchg
push
les
cld
idivl
stos
push
and
push
add
mov
outsl
sbb
push
rorb
fimuls
pop
stos
movsb
repnz
mov
sti
in
dec
fimull
jnp
xor
insb
add
popa
cmp
pushf
xchg
mov
jbe
and
icebp
das
xor
jbe
sub
push
loopne
out
out
xor
popa
cmc
xchg
dec
sub
mov
scas
and
xchg
jmp
shll
push
mov
add
mov
fldt
xchg
jg
shll
rorb
fidivs
ficompl
bound
into
daa
adc
xor
pop
xchg
mov
mov
pop
xlat
push
and
xor
jae
inc
repnz
sub
ds
push
lret
pop
xchg
dec
popa
sub
sbb
shll
fistl
ds
or
mov
data16
jge
mov
xchg
xchg
cs
push
mov
ds
notl
jo
int3
mov
inc
mov
mov
fldt
push
adc
pusha
inc
enter
out
xchg
push
or
jnp
cmc
fildl
pop
xchg
lock
xchg
sbb
pop
sti
es
dec
insb
xchg
inc
dec
push
das
pop
sbb
mov
jp
lods
data16
adc
pop
imul
jb
clc
dec
add
repz
repnz
sub
push
adc
into
popf
inc
cmp
or
dec
lea
rorb
push
jae,pn
int
cmp
ss
jge
xor
dec
push
fwait
add
and
data16
push
or
dec
dec
fnstenvs
stc
test
sbb
mulb
dec
jne
jns
xchg
mov
popa
add
insb
es
mov
jmp
adc
mov
pop
insl
xchg
sbbl
ret
sub
nop
sub
xchg
das
add
pop
or
fisubs
rcr
sti
test
push
loopne
push
in
arpl
mov
sub
iret
cli
out
xchg
sub
mov
ss
jmp
or
jb
xor
pop
cmp
sbb
in
dec
or
imul
test
jmp
scas
mov
adc
int
cs
push
or
xor
es
pop
jb
mov
push
ret
cmp
pop
push
out
imull
sbb
mov
cwtl
and
sub
arpl
dec
mov
xchg
sarb
arpl
ficoms
pop
dec
pushl
sub
in
push
mov
pop
and
ljmp
adc
popf
pop
xor
dec
orb
stos
or
and
xchg
imul
addl
movl
dec
jp
ret
cs
xchg
pop
mov
adc
dec
push
push
xor
adcl
in
lret
popf
addl
jg
pusha
pop
xor
cmp
popf
cmpsl
xor
hlt
gs
inc
jl
jbe
out
stos
int
imul
mov
xchg
fbstp
adc
popf
jl
mov
xor
adc
add
pop
data16
mov
push
popf
popa
push
shlb
jl
xchg
out
inc
cmpsl
fmul
inc
jae
cmp
push
pop
int3
ret
dec
call
dec
fcmovbe
sbb
push
rcrl
jl
xor
inc
xor
dec
mov
sub
in
inc
jl
fcmove
pushl
push
testl
lret
dec
push
sarb
dec
push
cmpb
xchg
mov
ss
pop
lcall
test
jne
test
lahf
or
lock
cld
stc
cmp
rolb
jmp
lcall
jbe
sti
sbb
leave
mov
sbb
jno
sbb
pop
xchg
cmpsb
loop
fisttps
and
cmp
movsb
fcoml
jecxz
sbb
jbe
frstor
pop
dec
xor
out
jo
add
and
mov
ret
mov
movntps
ljmp
jp
sti
sbb
popa
out
cmpsl
insb
add
push
outsl
lahf
ss
dec
out
push
hlt
fdivs
aas
ret
iret
ror
push
push
movsb
sbb
mov
repz
popf
mov
popf
js
or
inc
sbb
mov
int
or
push
test
push
dec
outsl
or
les
add
in
arpl
aam
stc
dec
lret
popa
das
fcoml
mov
mov
mov
je
and
adc
outsb
cmp
stos
scas
lcall
push
add
xor
mov
lods
add
cmp
in
mov
or
xchg
sbb
aam
cmp
mov
enter
push
cld
hlt
mov
xchg
inc
shr
adc
repz
lods
mov
xchg
mov
clc
adc
in
sub
xchg
dec
and
ret
movb
xchg
or
cld
push
mov
push
ja
sbb
mov
mov
push
cli
test
pushf
jae
leave
std
stos
jp
outsb
push
in
jb
push
iret
mov
ret
adc
dec
daa
lahf
push
iret
push
repnz
aam
lds
add
xor
pop
cmpsb
ss
into
sbb
and
push
mov
pop
pop
rolb
dec
add
jne
xor
aad
mov
jns,pn
mov
push
es
pop
mov
repz
cmc
das
adc
insl
das
insb
mov
inc
push
and
clc
cmpsl
mov
jae
fisttps
imul
add
mov
pop
jp
cmpsl
push
xorb
and
pop
scas
cmp
lods
je
ficoml
mov
inc
sbb
sbb
inc
gs
sbb
jp
movsb
jg
shrb
pop
and
fstpl
and
mov
movsl
xchg
mov
pop
mov
ja
lahf
sbb
stos
cmpsl
fs
xor
cmp
or
xchg
adc
lods
jecxz
xchg
int3
jb
lret
mov
mov
loope
mov
movsb
cmp
insl
sub
jge
sbb
push
mov
ds
ljmp
cltd
adc
lahf
clc
or
lods
cli
arpl
inc
gs
pop
xorb
inc
pop
adc
das
cli
jne
daa
fcoml
mov
mov
inc
fisubrs
sbb
cs
adc
call
icebp
push
jge
lret
popf
inc
cld
jecxz
push
or
in
sbb
inc
repnz
push
adc
or
add
addl
sbb
mov
stos
nop
pop
xor
dec
xchg
lods
xchg
inc
add
in
dec
xchg
loop
xor
or
mov
sarl
int
add
in
mov
popf
push
push
insl
mov
leave
xor
dec
loope
aas
adc
sub
xchg
or
add
js
mov
lds
ja
pop
mov
cmc
popf
push
dec
rorb
scas
adc
int3
and
inc
test
jle
cmpsl
lahf
aas
sbb
sub
leave
or
cmp
lea
test
rclb
out
repnz
jecxz
imul
inc
hlt
cmp
fistps
mov
gs
inc
inc
jb
sub
cmc
push
sti
push
or
xchg
jl
jmp
ljmp
dec
inc
imul
xchg
add
mov
cmp
fidivl
push
ret
lret
xchg
popa
daa
ret
pop
loopne
push
pop
cmp
test
cmp
shll
daa
out
inc
mov
pop
pop
pop
mov
nop
lcall
lcall
adc
icebp
popa
adc
cmp
in
xor
mov
lcall
mov
push
jo
push
mov
shll
aam
push
into
aam
cwtl
adc
cmp
out
mov
int3
push
add
or
dec
jecxz
stos
stos
inc
or
xor
ret
cmp
lret
inc
mov
pushf
jo
push
test
ret
adc
pusha
inc
cmpsb
loopne
jle
jmp
or
loope
test
mov
pushf
jg
loopne
sbb
sub
pop
fmuls
mov
cmp
adc
adc
jl
subl
adc
lret
ret
movsl
icebp
outsb
scas
sub
dec
cmpsl
mov
das
andb
dec
or
dec
into
pushw
cli
lock
pop
ja
mov
icebp
cmc
and
lahf
jo
ds
mov
push
add
adc
test
dec
ds
xchg
lretw
mov
inc
mov
mov
pop
mov
mov
push
inc
mov
stos
mov
mov
jle
fcomps
addb
nop
mov
ljmp
dec
scas
xchg
and
cltd
cmp
fwait
xchg
push
sub
cmpsl
xor
sub
adc
xchg
stos
std
js
pop
rcrb
sub
mov
cltd
xorl
xor
shll
and
test
or
shrl
dec
es
clc
xor
stos
loope
and
enter
push
fs
pushf
cmp
pop
jno
jnp
orl
mov
stos
mov
stos
xchg
pop
lods
adc
mov
sbb
mov
inc
mov
int3
jg
jno
call
aaa
loop
aam
push
jl
xor
movsb
shl
aaa
mov
imul
pop
adc
popa
push
je
ror
mov
scas
jg
jle
in
xchg
pop
add
pop
add
sti
int3
lods
mov
cmp
push
frstor
xorb
push
arpl
loop
xor
dec
in
dec
inc
sub
mov
push
lcall
jo
sahf
add
and
lmsw
fwait
aam
cmp
fstl
scas
into
les
dec
mov
xchg
sbb
repz
outsb
pop
sahf
stc
jne
ret
in
int3
jg
icebp
sub
loopne
inc
inc
lcall
das
adc
mov
js
outsl
cwtl
data16
inc
test
fsubp
sahf
roll
addr16
jge
sti
jae
lret
mov
lahf
inc
and
mov
pop
and
mul
push
cmp
movsb
xchg
jns
pop
js
test
dec
jnp
and
ud0
bound
rcrb
add
leave
adc
adc
cmp
icebp
mov
cmpl
jle
cmp
xlat
sub
aam
insb
fcoml
xor
sub
ror
or
lahf
sub
pop
mov
in
add
stos
test
fnstsw
movsb
lret
jbe
or
movsb
pop
loop
lods
fisubl
jmp
jo
push
out
xchg
mov
lret
jno
pop
push
dec
inc
jno
leave
mov
mov
mov
pushf
ds
xchg
pop
xchg
or
mov
pop
and
loope
xchg
pop
or
and
flds
in
and
add
mov
out
or
jl
cmp
jbe
and
sub
inc
repnz
aam
push
jge
sbb
sub
cmp
dec
cli
test
negb
fs
pop
pop
fsubrs
loopne
push
xchg
pop
lods
rcrl
in
test
add
cmpl
movsb
inc
inc
outsl
ljmp
inc
jle
push
push
ja
das
mov
repz
sahf
jl
orl
sbb
jbe
dec
jae
lret
mov
sbb
stos
lcall
add
sub
insl
mov
jo
xchg
jo
ja
pop
mov
inc
js
jae
xor
sti
add
scas
jle
or
rcll
cltd
sbb
dec
in
inc
in
es
fcoms
fs
add
sub
lcall
repnz
popa
inc
xchg
hlt
sbb
outsl
mov
mov
inc
jmp
andb
fwait
mov
aaa
mov
aam
jbe
xchg
xchg
lods
xchg
push
pushl
mov
cmpsl
cmp
adcl
orl
cmp
and
and
or
popf
cltd
lods
adc
add
je
inc
arpl
pop
push
jmp
dec
inc
cmpsl
popf
cli
cld
mov
ftst
jl
xlat
imul
xor
cmp
jle
aas
mulb
or
push
test
and
into
xchg
arpl
push
xchg
clc
sbb
xchg
push
cmp
sbb
icebp
mov
inc
outsb
ja
cmp
dec
pop
inc
mov
push
fs
fstps
inc
lock
mov
mov
inc
pushf
mov
outsl
stos
sub
mov
xchg
ja
nop
in
sbb
subl
and
lahf
popf
loopne
aad
stc
mov
pop
lock
into
cmpsb
imul
sub
inc
pop
sbb
jnp
in
hlt
xor
mov
or
testb
mov
mov
sub
scas
ffree
jg
cwtl
jg
movsb
sarb
je
push
imul
add
aas
pop
pop
add
mov
pop
xchg
rcrl
jne
mov
sbbl
adc
xchg
push
inc
xchg
and
outsl
push
in
and
xchg
icebp
insl
lods
pop
aas
mov
test
aam
fstpt
aad
push
ror
mov
scas
movsl
cmp
mov
or
testl
xor
dec
fidivl
loopne
cmp
inc
xor
push
pusha
push
xorl
cli
pop
cs
pop
fcompl
in
mov
es
mov
out
sbb
push
and
mov
ss
push
add
mov
je
sub
jg
cmp
sub
insb
outsl
or
ret
arpl
dec
jne
inc
xchg
xor
push
imul
jmp
ficomps
dec
cmp
mov
test
and
sub
rolb
xchg
fdivrl
mov
daa
mov
pop
lods
add
fistpll
aam
test
or
xchg
inc
stc
sbb
xor
movb
rcrb
dec
subl
dec
inc
xchg
je
cmp
jg
inc
xor
push
pop
xor
ficomps
cmpsl
pop
shrl
loope
mov
inc
ljmp
dec
outsb
dec
bnd
jno
shrl
xchg
dec
jmp
in
cmpsb
enter
shl
jge
cmp
les
mov
in
push
outsb
mov
cmpsb
xchg
test
testl
repz
stc
cld
in
sarl
adc
cmpsl
mov
mov
dec
add
and
insl
dec
xchg
orl
out
popa
push
mov
cmp
pop
mov
mov
sbb
leave
mov
cli
mov
mov
or
push
lock
pop
cmpsb
mov
sbb
mov
ljmp
mov
and
lahf
aas
outsl
andb
sbb
imul
jmp
cwtl
xchg
aam
sti
scas
out
dec
sbb
bound
push
jmp
mov
cmpsb
out
or
shrb
jae
and
mov
pop
sub
jnp
orb
stos
dec
repnz
dec
lods
aam
sbb
stc
jmp
mov
inc
lock
adc
insl
push
scas
fistpll
sub
xlat
add
xorb
aam
jns
push
daa
aaa
sbb
js
pusha
or
sub
add
imul
subb
cli
xor
lea
lea
jb
dec
clc
mov
movsb
sbb
inc
sub
xchg
movl
mov
dec
repz
les
sub
das
mov
cmp
aam
xchg
push
xor
sub
data16
jg
mov
add
xchg
sahf
push
mov
sbb
rorb
out
pop
sub
fs
cmpsl
xchg
mov
int
and
and
neg
inc
dec
pop
repz
xchg
jecxz
cmc
daa
inc
lods
and
sbb
nop
in
mov
pop
movaps
inc
mov
dec
dec
dec
cli
mov
aam
movsb
xor
inc
xchg
xor
fisubrl
pop
hlt
cmp
or
push
sbb
adc
lahf
test
sub
dec
lcall
insb
jae
xor
mov
sahf
sub
mov
call
push
out
add
fcmovnu
andl
xor
jo
sti
push
iret
dec
decl
dec
add
pop
inc
mov
imul
and
dec
fcmove
xchg
gs
fnstcw
add
push
adc
sub
or
add
repnz
loope
dec
or
and
popf
fcoml
pop
sbb
dec
test
jo
fcoms
sub
lds
pop
dec
push
cmp
mov
inc
and
add
ds
in
popf
jbe
push
mov
mov
jo
fiaddl
or
divb
xor
jmp
outsl
adc
xchg
adc
cmpsb
xlat
call
fwait
sbb
sahf
iret
sbb
fiadds
pop
or
test
icebp
mov
sub
push
fs
std
testl
hlt
xorb
popf
add
adc
in
mov
or
mov
and
into
push
cld
cmp
inc
adc
sbb
decb
xor
mov
mov
in
hlt
dec
imul
sbb
test
pop
test
mov
jae
mov
mov
push
aas
or
jae
ds
inc
je
pop
ss
xchg
mov
push
popf
icebp
pusha
aaa
xor
ret
xor
sbb
je
cmp
cmp
push
add
jbe
adc
fidivl
mov
or
sbb
mov
and
lcall
and
hlt
sbb
test
adc
pop
stos
pop
jnp
nop
or
and
cmp
xor
mov
sub
ret
bnd
and
and
int3
jns
jns
sub
scas
int3
not
cmpb
and
xor
add
xor
pop
aaa
lods
sbb
imul
das
ret
mov
dec
sbb
cmp
mov
jae
mov
es
xabort
or
pop
rcrb
lret
jle
pop
and
scas
addr16
loopne
cmp
sub
sti
dec
dec
mov
mov
push
hlt
push
jno
out
cmp
loop
fcoml
out
adc
add
cmp
sbb
imul
fiaddl
clc
dec
fadd
lock
loope
aam
iret
sub
sub
repz
push
mov
xor
push
mov
daa
aaa
dec
mov
lret
cmc
sub
inc
cmp
mov
jecxz
rclb
sub
add
fstl
or
shlb
adc
in
add
push
cmp
xchg
push
xchg
inc
add
mov
inc
push
mov
out
xor
inc
data16
adc
ret
mov
jecxz
dec
scas
xchg
mov
jno
push
sbb
jge
add
ficoml
jmp
in
fld
mov
cwtl
mov
mov
inc
push
xchg
test
mov
fisubrs
pop
mov
subb
cmpsl
push
cmpb
bound
movd
dec
adc
cmp
xor
fwait
imul
call
xor
sub
scas
addr16
sbb
jns
add
inc
popa
dec
adc
pushf
jae
insb
adc
lret
xor
add
lods
test
enter
lret
cs
fisubrl
add
and
push
fcoml
roll
rcrb
js
jmp
or
test
or
xor
jp
cli
adc
fstl
or
jle
xchg
jnp
xchg
sbb
push
divb
mov
mov
imul
int3
cmpsl
inc
jns
mov
mov
xchg
movhps
pop
lahf
ficoms
xchg
jnp
push
mov
pop
dec
lcall
push
jne,pt
jl
mov
jns
mov
clc
lock
mov
insb
rorl
ss
jb
lret
xorl
fcomip
mov
into
and
xor
ret
xchg
push
mov
mov
or
fs
add
loopnew
fidivrl
stc
dec
sbb
fwait
stos
mov
cmc
jp
mov
xchg
fdivrp
xor
movsb
cmp
and
inc
ds
add
dec
mov
mov
clc
sub
nop
jmp
jbe
cltd
adc
jb
in
xchg
inc
jo
out
pop
fnsave
xor
int3
int3
aas
repnz
pop
inc
pop
in
test
mov
push
mov
mov
push
mov
mov
push
mov
add
cmp
xchg
shlb
and
out
mov
dec
add
stc
imul
fstpt
flds
sub
roll
adc
imul
jae
lcall
inc
xchg
xchg
dec
push
pop
pop
fucomip
inc
jne
or
cmc
std
int
fdivrl
jecxz
mov
bound
movsb
mov
int
add
loop
iret
shlb
sub
xor
push
jo
loope
mov
loop
xchg
out
ret
xchg
mov
mov
pop
mov
add
xchg
scas
out
sub
push
out
inc
lods
arpl
iret
adc
notl
pop
addr16
xchg
out
sbb
inc
testb
and
cmpb
and
cmp
imul
inc
sub
nop
push
repz
movsl
loope
sbb
inc
push
adc
arpl
jg
mov
add
cmp
in
xor
jo
or
jl
popl
out
notb
jg
xor
bound
loopne
xor
int3
std
mov
fdivp
adc
mov
lods
push
push
pop
mov
in
xchg
jecxz
stos
out
mov
mov
rolb
jns
test
mov
rcll
sub
sti
mov
out
and
lahf
pop
cmp
dec
test
mov
adc
idivb
test
bound
aad
sbb
ret
mov
jb
js
pop
dec
pop
push
dec
arpl
stc
add
jg
repz
inc
push
stos
or
mov
shll
pop
loope
jae
sub
mov
in
jbe
shlb
xchg
mov
pop
inc
test
inc
movsb
jg
add
cmpsl
push
mov
pop
pop
xor
imul
xor
imul
sub
outsb
shrb
decb
and
scas
imul
cmp
mov
cmp
scas
loope
mov
shlb
sarl
dec
cmp
sti
imul
in
test
cmp
jge
rcr
out
jecxz
mov
dec
xor
sbb
adc
mov
and
test
add
inc
test
lret
add
and
jmp
push
jne
jno
dec
ds
jl
adc
push
inc
mov
rorl
push
push
test
sahf
lret
les
subb
adc
arpl
jnp
bound
add
add
pusha
dec
ljmp
ljmp
push
out
xchg
jae
fmuls
or
popa
fdivl
adc
add
mov
ficoms
loope
lahf
push
lcall
movsl
loopne
mov
inc
leave
and
inc
cmp
lret
in
daa
outsb
xchg
in
sarb
push
cltd
xor
jg
jg
sbb
push
leave
repnz
sub
negl
cli
arpl
mov
rcll
jnp
and
insb
cmpsb
or
pop
pop
xor
shll
movsb
dec
and
add
pop
mov
sub
pop
push
pop
adcl
in
sub
push
leave
sub
out
mov
pop
sbb
lcall
loope
push
and
stos
inc
in
mov
loop
jbe
popf
imul
inc
arpl
jns
into
data16
in
iret
lods
jg
dec
cmc
sbb
cli
rol
loope
insl
cmpsl
mov
xor
aaa
jmp
shlb
pop
adc
inc
movsl
mov
and
cli
push
movsb
imul
add
dec
lret
sub
fwait
add
cmc
orl
adc
xchg
xlat
dec
push
mov
cli
lret
dec
mov
mov
sbb
lcall
sbb
insl
icebp
test
push
cmp
lahf
mov
pop
cwtl
pop
inc
adc
adc
pop
imul
dec
push
xchg
sub
cmc
pop
addr16
mov
xchg
mov
push
js
xlat
mov
mov
sbb
push
dec
push
dec
outsb
inc
mov
std
xchg
imul
push
push
mov
adc
idiv
out
push
mov
xor
std
aaa
xchg
mov
push
pop
adc
fdiv
cli
jg
daa
or
and
xchg
add
iret
push
inc
add
push
pushf
xor
sub
test
popa
or
loopne
or
mov
into
in
imul
mov
mov
add
lds
bnd
testb
adc
sbb
cmp
lret
xchg
inc
into
dec
inc
test
in
sahf
xchg
xchg
cmpsl
push
pop
pop
push
push
pop
inc
ficompl
sahf
add
je
out
mov
in
add
lods
inc
push
cmp
inc
add
adc
mov
int
orl
pop
leave
cmp
cli
cmp
ljmp
mov
and
in
lods
loop
mov
lcall
or
jmp
jbe
xchg
push
mov
lret
pop
mov
fbld
or
jl
xor
fwait
icebp
ffree
and
add
loop
stc
in
in
out
enter
xchg
data16
or
ds
push
pop
mov
shrb
test
jno
xor
xchg
inc
mov
ss
test
imul
jnp
popa
lahf
add
sub
int3
gs
dec
xchg
adc
cli
jns
lahf
fcompl
jecxz
xchg
mov
loopne
shlb
jae
inc
pop
mov
mov
inc
mov
pop
mov
pusha
ds
jb
cmp
call
sub
movsl
shrl
cmc
xor
in
cwtl
mov
or
and
mov
js
push
pop
mov
out
inc
rcll
popa
daa
or
mov
cltd
mov
cmp
push
lea
data16
mov
xchg
repz
xor
lahf
or
cmp
fistpl
outsb
sub
and
mov
cmp
in
enter
dec
popf
mov
rcrl
xchg
and
mov
imul
mov
fisttpll
mov
mov
pop
jecxz
jae
xchg
push
inc
dec
and
cmp
andl
mov
mov
jp
adc
clc
addr16
das
dec
jg
jb
mov
push
mov
daa
cmpl
lcall
out
inc
mov
pop
mov
push
dec
mov
test
fsub
dec
push
pop
cmc
and
sbb
loopne
imul
xor
jge
jne
cmp
mov
js
pop
mov
mov
fcoml
push
fisttpll
adc
push
pop
cltd
cltd
fcmovne
xchg
push
and
outsl
adc
pop
sub
icebp
xchg
je
mov
int3
or
cmpsb
xchg
add
aam
push
and
fistl
pop
or
add
out
ja
iretw
cld
inc
insl
and
sahf
sub
lods
xchg
aaa
push
fiadds
cld
out
dec
jmp
and
inc
aad
clc
xchg
add
repz
dec
and
jmp
xchg
push
sti
cmp
rorl
xorl
xchg
movsb
jle
dec
outsb
mov
fists
inc
adc
dec
inc
mov
fcmove
out
imul
pusha
or
rep
xor
push
sub
mov
push
dec
sti
movsl
mov
and
mov
inc
je
call
xor
jg
outsl
in
or
add
addr16
rcll
repz
push
popf
dec
hlt
dec
pop
cld
jmp
mov
movsw
je
pusha
push
push
or
ror
jge
dec
add
pop
xchg
pop
cmpsb
push
inc
int
xchg
cmp
cld
je
pop
aas
pop
out
jb
aam
inc
add
ds
sub
repnz
insb
cli
js
adc
mov
push
mov
test
ret
mov
jnp
sub
notl
adc
add
pop
cltd
subl
mov
mov
mov
mov
dec
shl
inc
adc
inc
cs
xchg
mov
and
adc
cmp
lea
fs
fidivl
inc
insb
enter
fyl2xp1
add
inc
rcll
mov
cli
shl
dec
fstpt
aas
hlt
inc
in
into
movsb
pcmpeqd
movsl
add
mov
mov
aad
sbb
mov
mov
mov
ja
dec
pop
adc
mov
popa
inc
cmp
xchg
rcll
inc
cmpsb
jnp
into
std
or
push
inc
dec
cmpb
add
cmc
js
mov
cmpsl
pop
cwtl
pop
pop
rol
call
jp
cmp
mov
into
lods
and
mov
pop
xchg
lds
outsb
dec
loop
push
stc
xor
scas
add
notl
jo
jecxz
pop
shr
pop
mov
fs
or
das
push
pop
xlat
mov
adc
call
xchg
cs
push
and
stos
cmp
hlt
dec
push
popf
add
idivb
out
mov
inc
les
pop
xchg
push
in
lods
testb
cld
fstpt
mov
nop
xchg
or
jle
lds
jmp
movsb
loop
ret
sbb
mov
test
mov
dec
jno
and
inc
pop
and
pushf
fisubl
and
arpl
add
mov
dec
dec
hlt
cmp
pop
es
push
scas
sub
das
loop
arpl
scas
imul
pop
mov
jl
outsb
ret
and
cmc
xchg
pop
and
jb
aas
aas
jae
push
inc
add
xchg
pop
notb
jb
fcoms
mov
je
out
push
pop
push
pop
insb
ss
xor
sbb
fsubrl
sahf
cmp
adc
mov
lret
push
out
test
andl
inc
je
dec
cmp
mov
inc
xchg
pop
ficompl
xchg
cmp
xlat
stc
mov
xor
shl
and
insl
mov
pop
daa
and
jl
push
cmovs
jnp
xchg
mov
dec
or
out
sub
lret
dec
add
fisubs
push
mov
xchg
pushf
rep
inc
cmpsb
rcrb
insl
dec
sti
pop
imul
fsubl
aam
popf
daa
insb
out
push
add
lret
jg
daa
mov
xchg
js
ja
pusha
or
cli
pop
sbb
test
xor
stos
pusha
out
add
into
pop
mov
mov
add
push
mov
in
ret
push
in
outsb
inc
mov
sbb
jb
cmpsl
sub
gs
test
cmp
rcl
cmp
sub
fcoms
dec
cwtl
nop
push
hlt
xor
insb
cmp
pusha
cltd
add
xchg
daa
mov
dec
jae
mov
movd
int
sti
arpl
clc
stc
jg
push
xlat
je
xchg
movsb
xor
xchg
iret
lds
cs
mov
push
lea
mov
sbb
or
jmp
ja
rolb
rcrb
into
nop
push
sub
shll
or
fimull
push
loopne
sbb
push
push
and
rorb
std
es
or
ljmp
or
rcr
hlt
mov
sub
dec
and
testb
cmc
ljmp
clc
scas
js
in
fwait
xchg
lea
fldenv
sbb
lret
psrld
sbb
lods
inc
test
lods
fwait
cli
cli
pop
sub
rorl
ja
aad
pop
jae
pop
in
adc
push
scas
imul
mov
movsb
mov
and
test
dec
pushf
aaa
enter
out
adc
pop
and
inc
cmp
scas
test
mov
das
push
and
dec
hlt
mov
shrb
paddd
mov
add
push
sbb
or
jmp
inc
xchg
and
popa
call
orl
lods
or
push
cltd
add
lret
iret
push
push
jae
inc
jg
jl
pop
in
xchg
mov
mov
ret
dec
daa
mov
xchg
add
mov
adc
lahf
cs
adc
pop
pop
pop
or
xor
stc
dec
das
xchg
xchg
and
bound
lret
repz
xchg
leave
lcall
les
movsb
pop
daa
dec
push
fcmovne
xchg
sbb
xor
je
xor
pop
jae
xchg
mov
cltd
inc
fists
orl
lods
xchg
jno
loopne,pt
out
test
scas
jne
movsl
sub
sbb
negb
pop
mov
fsubrs
sahf
clc
push
inc
fwait
dec
inc
xor
push
es
ret
cmpsl
lods
imul
xlat
in
or
ss
cmp
and
dec
mov
xor
les
out
negl
popf
pop
mov
inc
cmp
inc
xchg
dec
add
jnp
add
push
mov
mov
cmp
repz
or
adc
aas
mov
xchg
test
test
inc
adc
pop
movb
jae
scas
xchg
jmp
add
adc
xor
les
and
lcall
pop
mov
sub
dec
sub
ljmp
pop
in
mov
je
cmp
mov
arpl
addr16
xchg
sub
int3
mov
movl
sub
hlt
add
adc
mov
dec
push
add
jecxz
sarb
sahf
outsb
jae
push
orl
movsl
cmp
or
xlat
outsb
outsb
add
mov
repnz
and
int3
dec
imul
out
clc
or
ja
mov
aad
enter
mov
mov
in
xchg
pushf
inc
pop
repnz
cs
inc
xor
das
xlat
int
scas
and
jb
les
adc
or
ja
fsubl
jae
shlb
jle
fstp
xchg
loopne
imul
pop
mov
fsubrl
push
test
pop
loop
jb
xchg
aad
jecxz
dec
inc
mov
mov
add
insl
imul
sbb
dec
push
push
dec
pop
js
in
shll
rcrb
shl
pop
gs
enter
adc
pop
jecxz
sub
sahf
pushf
test
mov
jecxz
icebp
pop
test
divl
or
div
iret
fisubrl
inc
nop
icebp
inc
enter
and
jge
jbe
mov
movsl
invd
xor
adc
mov
jl
mov
sub
push
pop
out
andl
inc
test
int3
mov
sbbl
cli
mulb
jb
jecxz
lretw
std
enter
add
push
lret
lcall
mov
push
xchg
mov
fs
ret
jmp
fmul
loop
popf
sbb
enter
jle
sti
xchg
adc
imul
push
push
push
movsl
add
sbb
iret
aas
xorb
mov
loopne
dec
cmpsb
pop
icebp
addl
pop
lods
and
pop
insl
sub
cmc
aaa
jle
dec
out
imul
fdivrs
cltd
dec
adc
and
dec
fmul
addr16
jp
into
roll
mov
mov
stc
fdivl
add
lcall
popf
das
insl
out
and
adcl
sbb
jg
jne
jns
in
sti
dec
mov
or
xchg
int3
sbb
adcl
mov
in
lods
xchg
sub
jmp
jp
pshufw
cmpsb
sti
xor
je
xchg
mov
out
cld
arpl
ss
outsl
bound
xor
ret
popf
orl
jecxz
and
jns
xchg
push
sbb
xchg
pusha
cs
fisubrl
inc
inc
mov
js
lods
cmpsb
rorb
mov
scas
xor
cmc
xchg
and
or
cmpsl
ja
sahf
pop
dec
je
xorb
test
inc
mov
push
aam
loopne
inc
int
mov
mov
faddl
pusha
testl
and
pop
lds
out
test
pusha
jecxz
jb
shll
cmpsl
xchg
dec
inc
mov
cmc
push
lahf
sub
mov
hlt
mov
xchg
sbb
mov
in
out
lods
add
inc
jns
leave
dec
stos
jnp
loope
jl
jns
lret
sbb
adc
pop
mov
lock
jnp
xor
mov
addl
out
jbe
mov
stos
adc
loopne
pop
sbb
call
sahf
std
aas
loop
out
adc
push
lret
cli
out
loop
fdivl
addl
mov
xchg
mov
cmp
jb
int3
andl
movl
or
pop
int3
mov
jl
adc
pop
mov
jnp
iret
mov
jne
push
mov
imul
sbb
outsl
xchg
adc
out
test
ffreep
sub
xor
inc
sub
cmc
cmpsb
sub
fstp
shlb
lret
inc
movsl
orl
int
testb
xor
ds
test
adc
pop
pop
mov
insl
dec
repz
xor
inc
jbe
push
mov
dec
xchg
js
xor
push
xor
lods
mov
mov
cmp
or
das
jne
movsb
lock
outsb
add
and
xchg
lcall
ljmp
mov
mov
dec
loop
adc
aas
xorl
fldt
icebp
pop
adcb
add
mov
inc
xchg
cmp
sbb
rolb
imul
sub
enter
insb
incl
ret
loopne
popf
jmp
fwait
ret
lods
hlt
inc
popf
orl
pop
push
lahf
mov
or
xchg
mov
mov
daa
dec
xchg
xor
adcb
insl
rcrl
dec
psllq
fnstsw
lcall
inc
dec
out
aam
pop
push
sahf
loop
movsb
dec
movsl
test
shlb
adc
int
shl
mov
mov
or
inc
int3
jae
stos
jb
iret
das
cmpb
push
xlat
or
add
test
inc
xchg
decl
dec
arpl
xor
sub
or
and
aam
pop
int3
pop
dec
nop
and
cmc
lret
xchg
popf
or
cmp
lds
or
inc
jg
movb
push
push
dec
lret
xor
add
adc
adc
icebp
mov
loopne
adc
pop
mul
push
bound
add
cwtl
aaa
iret
push
int
push
pop
sbb
fisttpll
xchg
xchg
ja
iret
or
adc
das
sub
sbb
test
jo
mov
insl
mov
fnstsw
sti
lret
push
fwait
imul
or
xchg
xchg
dec
cmp
xchg
bound
jb
sub
inc
sbbl
sbb
fldt
and
lea
mov
mov
loopne
dec
push
testb
push
jge
dec
aas
mov
or
sub
xchg
jne
xor
in
adc
jg
push
orb
mov
jmp
int3
fnstenv
cwtl
cli
mov
or
out
jmp
jmp
lret
ret
lods
mov
xchg
adc
aas
xor
lock
test
pop
fs
cmc
addr16
push
inc
ds
loope
jbe
es
xchg
inc
out
addl
xchg
push
lcall
push
push
pop
pop
mov
loop
lods
je
jbe
flds
jle
jmp
and
loope
and
roll
sbb
daa
push
pop
imul
and
cli
test
mov
lods
testb
jg
jo
xchg
outsb
add
ss
xor
xchg
rcr
divl
lods
stc
push
arpl
sub
add
in
sbb
sub
cmp
and
in
push
mov
jge
je
xor
mov
inc
imul
push
dec
dec
mov
into
pop
ljmp
mov
shlb
pop
std
daa
cmp
es
push
sarl
and
pop
sub
pushf
xor
mov
adc
sahf
ret
mov
mov
hlt
jns
jbe
pop
jno
faddl
popf
loopne
xchg
jbe
fdivr
cmovns
lods
addl
lods
loopne
stc
push
lcall
stc
pop
call
pop
cs
xchg
mov
xor
andl
fildll
pop
insl
call
and
insb
and
lock
nop
dec
jns
scas
enter
and
mov
fimull
xor
data16
xchg
fcoms
dec
mov
jne
aaa
jno
mov
mulb
clc
or
popf
insb
pop
mov
stos
sub
lock
xchg
scas
xchg
push
or
jp
push
and
jle
cmp
pop
repnz
inc
mov
dec
push
push
jge
sahf
lret
pop
sub
ret
mov
rcrb
sbb
sub
mov
insl
push
adc
add
stc
cmp
jb
cmp
pop
repnz
insb
hlt
in
dec
rorb
inc
push
push
xchg
fists
push
push
mov
mov
into
and
sbbl
pop
outsb
cltd
in
push
jp
and
mov
dec
pop
inc
push
and
imul
gs
sti
cmp
add
loopne
lds
jno
sbb
cmpsl
loopne
aas
push
push
push
ret
int
jl
rcll
cmp
jb
xor
push
pop
sbb
jl
scas
pushf
adc
xor
mov
hlt
xor
inc
and
pop
ds
inc
jl
rol
stos
adc
jg
cmp
fdivl
out
daa
shll
mov
xlat
lcall
je
lret
out
lret
adc
stos
mov
push
rol
cmpl
js
push
nop
xor
or
pop
repnz
pop
repnz
mov
movsb
inc
and
push
or
lcall
scas
or
ret
std
or
sub
test
xor
mov
jge
jge
jge
inc
push
and
inc
pop
mov
fisubrl
add
pop
cmpl
sbb
push
mov
mov
test
or
mov
movsb
pop
in
mov
shlb
rcl
pushf
xor
sub
and
jg
shll
dec
out
fstpt
cmp
cmpl
int3
xchg
add
lret
rol
push
jnp
fistl
arpl
xor
mov
ret
sbb
pop
std
add
jl
not
in
cmp
xchg
mov
sbb
push
pushf
mov
mov
paddsw
xchg
pop
daa
push
pop
movsb
mov
mov
sub
push
sbb
jno
arpl
ja
jp
daa
cmc
addr16
or
insl
sbb
add
or
mov
or
test
addl
jp
inc
adc
cmp
adc
test
mov
or
cwtl
mov
push
cwtl
mov
dec
add
cmp
push
repnz
cmpsb
sarl
ret
push
call
dec
andb
out
sbb
xchg
xor
adc
mov
or
les
cmp
ljmp
mov
cli
xchg
test
xor
jae
mov
mov
or
imull
xchg
or
in
add
clc
outsb
pop
pop
mov
or
enter
pop
sbb
sub
dec
push
mov
sub
push
test
pcmpeqw
sbb
gs
mov
xor
add
in
sbb
pop
lcall
fsts
cs
mull
scas
arpl
pop
cmpsw
pushf
inc
outsb
dec
or
jno
jmp
sbb
push
repnz
add
in
mov
and
ja
nop
pop
xchg
xor
xchg
rcr
jmp
bnd
inc
jl
stos
ljmp
xchg
inc
xchg
inc
pushf
cmp
add
das
inc
pop
push
push
or
lds
jo
mov
add
adc
add
shl
mov
out
dec
xorl
xchg
ljmp
cmc
lea
mov
mov
or
mov
jecxz
pushf
xor
adc
das
rcrl
mov
push
jnp
rcrb
pop
negl
push
in
pop
mov
dec
xchg
push
mov
xchg
mov
xor
mov
cmp
xchg
dec
add
ljmp
lods
js
adc
push
mov
dec
xor
jo
inc
fistpl
lcall
jne
fwait
mov
add
pushf
push
inc
xor
outsl
bound
rcrb
jp
cmp
sub
xor
adc
test
test
dec
xchg
and
ds
push
mov
pushf
cmp
loop
imul
addr16
pop
test
ja
xchg
dec
aad
rcrb
loopne
push
call
xchg
imul
aaa
and
or
mov
jle
iret
dec
lock
ret
int3
jle
lret
rcrl
push
mov
jns
xor
stos
out
cmp
out
bound
sbb
push
repz
divl
shl
mov
mov
sbb
adc
and
inc
push
sarl
or
fdivrl
fiaddl
ds
sti
dec
push
push
mov
cmp
inc
shr
inc
lea
ret
inc
pop
lea
xor
out
push
test
inc
jle
les
push
inc
pop
dec
mov
mov
xchg
xchg
shrl
jne
mov
and
adc
ds
adc
les
jnp
jns
inc
xchg
mov
in
andl
subl
jmp
mov
sub
xorl
add
mov
ret
fsubs
cmp
loopne
or
mov
and
pop
sub
insb
pop
cmp
cmp
add
daa
sbb
daa
roll
push
imul
fistpll
lahf
push
mov
icebp
jns
xchg
mov
pop
dec
and
adc
cli
das
or
das
push
enter
adc
mov
push
pop
jo
sti
leave
or
mov
inc
jae
loope
adc
test
xchg
mov
lcall
fdivr
xchg
test
sub
mov
pop
jb
and
shll
sbb
hlt
xor
jmp
bound
data16
iret
pusha
cmp
out
pop
neg
adc
cmp
cmp
int
xor
insb
fldenv
loope
push
repz
sub
pop
jecxz
icebp
lret
mov
push
jmp
cmp
out
xchg
add
pop
roll
jecxz
jns
cmp
out
mov
cmp
jno
xor
stos
mov
lret
into
fxch
xchg
push
xor
pop
fs
ljmp
sub
ficomps
cltd
out
cmp
push
push
jle
mov
sub
add
into
xor
insl
and
jmp
push
xor
ret
js
testl
iret
adc
pop
xchg
out
cmp
adc
adc
ja
icebp
shll
adc
or
movsl
cwtl
xchg
add
pop
outsb
call
ljmp
testl
pop
popa
insb
xchg
jno
and
fcompp
call
push
sbb
mov
mov
mov
add
pusha
or
arpl
mov
inc
out
ds
mov
int3
andl
cmovge
cmp
jns
pop
fnstenv
pop
adc
mov
pop
test
jb
rcr
sti
repz
jae
ret
cmpsb
cmp
cwtl
cmc
and
push
rep
mov
test
out
out
push
push
mov
inc
jnp
loope
popf
add
aaa
inc
mov
call
push
lret
loop
push
pusha
pop
xchg
sti
mov
pop
notb
flds
les
ficompl
mov
mov
enter
jb
push
push
loope
and
jns
fistpl
fistpl
int
out
xchg
mov
mov
jmp
loop
dec
sbb
pushf
xchg
add
test
xlat
jp
or
dec
inc
xchg
aam
pop
test
mov
pop
andl
and
mov
shl
orb
stos
cmp
hlt
in
inc
data16
movsl
les
decl
inc
in
sub
add
lahf
pop
cmp
jg
lods
mov
bound
and
das
cmp
push
addb
mov
mov
and
and
jnp
pop
cmp
adc
cmpsb
mov
adc
out
xor
or
mov
mov
push
dec
dec
icebp
cld
inc
leave
into
sbbl
and
xor
rcr
jmp
cwtl
push
and
inc
sub
xor
decl
gs
into
popf
stc
dec
sub
push
adc
cmove
cmp
pop
mov
add
jae
add
adc
mov
sbb
pushf
adc
arpl
dec
in
pop
mov
mov
add
pop
adc
sarl
or
not
das
sbbb
call
gs
int3
inc
lods
fsubrl
mov
add
push
mov
inc
in
mov
pusha
and
jg
in
ljmp
cmp
ret
sbbb
adc
add
adc
pop
pop
leave
fucomi
dec
sbb
or
or
scas
inc
fsubrs
ds
jnp
mov
stos
mov
xchg
fwait
mov
fistps
fisubrs
fisubl
add
add
out
add
push
orl
push
insb
jo
outsb
in
jns
repnz
jp
lods
jmp
push
ljmp
stc
idivb
sub
sbb
pop
mov
pop
dec
sub
xor
cs
and
pusha
jno
push
mov
fwait
push
mov
pop
popa
icebp
pop
andb
push
gs
xor
xor
aas
sbb
sbb
xchg
sbb
outsb
pop
mov
mov
jbe
xor
mov
fisubrl
xchg
loope
lret
mov
push
fwait
pushf
mov
xor
cmc
iret
jmp
jns
jo
mov
dec
js
rcrb
stos
inc
xchg
inc
mov
pusha
ret
mov
stc
ss
std
jl
lret
loope
adc
pop
xchg
pop
push
incl
jecxz
cmp
sbb
cvtps2pd
test
mov
sti
adc
push
push
das
popa
popa
push
pushf
xor
and
add
or
and
faddl
lcall
popa
xlat
pop
pop
adc
aad
jae
jl
pop
in
jg
outsl
incb
sbb
dec
mov
aam
push
dec
sbb
adc
xor
mov
frstor
sub
rorl
inc
out
jle
icebp
add
mov
stos
pop
lret
je
cmp
mov
nop
inc
js
or
add
or
xchg
sub
lret
xchg
test
mov
push
pushf
je
inc
mov
or
mov
jge
ret
xchg
out
lods
loop
data16
push
xchg
jbe
mov
sarl
inc
jnp
jo
cmp
dec
add
sbbb
jge
std
pop
arpl
inc
or
mov
aam
mov
lahf
sbb
pop
nop
pop
add
in
loopne
mulb
cmpsb
xlat
movsb
add
aas
repnz
xor
sti
inc
add
xchg
inc
mov
push
lahf
rcl
jmp
lods
jne
movsb
mov
repnz
stos
and
add
cmp
scas
adc
movsb
mov
dec
out
test
dec
push
std
arpl
repnz
inc
xchg
sub
cmpsl
pop
mov
xor
daa
lret
clc
push
push
and
testb
in
dec
mov
lds
or
stc
loop
push
jl
int
xchg
inc
and
inc
cmp
xchg
fmull
stos
mov
push
repz
iret
dec
aam
mov
mov
es
pop
mov
or
dec
leave
ja
xchg
es
adc
push
scas
jle
aam
pop
out
mov
pusha
les
push
adc
fsubrl
ja
inc
int3
mov
cld
lock
cmp
sbb
xchg
jge
ret
adc
ja
das
js
in
pop
add
xchg
sti
adc
adc
lahf
out
stc
ret
lret
test
mov
xchg
jle
std
xchg
insb
inc
popf
push
xchg
sub
insb
adc
out
mov
rorl
sbb
push
leave
test
rcr
jns
imul
leave
cmc
push
imul
scas
imul
sbb
inc
lret
js
inc
pop
hlt
and
jo
fsubs
sbb
push
cld
xor
jo
add
cmpsl
mov
gs
inc
cmp
lea
jb
and
insl
cmovs
pop
imulb
jbe
cmpsl
imul
inc
pusha
xchg
pop
mov
mov
nop
rolb
insb
dec
pushf
sbb
test
sbb
sub
pop
mov
cmpsb
push
push
sarb
outsl
icebp
add
and
or
outsl
adc
jl
xchg
jle
xchg
lahf
pop
xchg
push
pop
fisubrs
repz
and
push
mov
sub
mov
mov
add
dec
or
push
pushf
push
int3
loop
pop
push
cmp
cli
das
mov
repz
add
arpl
popf
adc
sbb
jbe
scas
cmpb
jbe
call
push
inc
sbb
outsl
out
push
add
sbb
out
or
pop
in
mov
lds
push
adc
fstpl
mov
rol
ret
jno
into
std
inc
mov
cmp
ficoms
xchg
mov
in
inc
iret
cli
arpl
andb
cmovle
push
jge
push
cmc
scas
or
cs
and
jno
mov
ficomps
mov
push
add
jl
push
notl
adc
mov
push
orb
jmp
sub
xchg
test
not
sub
push
push
into
jns
scas
dec
out
and
jne
iret
repz
and
push
test
pop
sub
add
pmaxub
fwait
jmp
and
mov
mov
cmp
add
daa
sbb
cmpl
xchg
test
jo
jns
add
aas
pop
les
xchg
pop
loope
pop
cmp
adc
mov
jmp
mov
jns
and
push
fisubs
aaa
mov
dec
mov
fcmovu
cmpsl
cmp
lods
mov
lock
push
jp
inc
movl
add
lret
xor
and
fcoms
ljmp
pop
stos
fcomip
insl
int3
insb
rolb
sbb
movsl
ret
mov
fmuls
ss
nop
pop
hlt
stc
test
subb
jo
xor
mov
fwait
xlat
cmp
sti
xchg
xchg
int
daa
mov
push
iret
mov
inc
cmp
lret
es
lods
sahf
mov
dec
dec
inc
in
sbb
add
into
out
sti
dec
out
insb
sti
fsubrp
rclb
fwait
sbb
mov
mov
or
adc
stc
push
lahf
lds
dec
mov
sub
jne
add
out
and
dec
mov
xorl
in
inc
ss
test
mov
cmc
orl
aaa
jne
out
xchg
adc
ss
cli
gs
test
jne
adc
sub
adc
jno
add
jmp
mov
lea
into
shr
adcl
jmp
loopne
cmp
cs
adc
fsubs
test
jl
push
mov
xchg
stos
aaa
or
xchg
inc
loopne
xchg
jmp
fnstenv
pusha
mov
mov
mov
lods
outsl
mov
inc
repz
lcall
mov
push
sub
sbb
into
adc
aad
mov
mov
je
and
stos
xchg
das
aad
inc
mov
add
test
imul
xor
stos
jne
stc
xchg
stc
bound
sub
pop
pop
loop
xchg
lea
test
pop
inc
jecxz
cmp
adc
cmp
mov
ret
cs
rolb
inc
dec
pop
sahf
cmp
test
fistpl
call
xor
sub
cmc
loopne
je
cmp
popa
addr16
jg
loopne,pn
test
mov
dec
aaa
mov
push
push
lss
rolb
mov
ss
shrl
cwtl
jno
int3
inc
or
jmp
sub
int
lds
idiv
mov
mov
or
xchg
aam
adc
adc
pop
push
cmpsb
mov
pop
stc
cmp
repnz
xchg
cmp
hlt
cmp
push
fcos
arpl
jle
cmc
xlat
sub
xchg
jl
adc
xorb
sub
jmp
sarb
leave
cmp
xchg
in
cltd
inc
loop,pt
cmp
das
adc
adc
pop
fimull
imul
mov
inc
dec
aas
mov
inc
inc
pop
mov
push
and
mov
mov
int3
dec
out
adc
mov
or
fnstcw
mov
jmp
sub
ja
test
sahf
insl
xor
mov
imul
hlt
or
out
push
cmp
movsl
or
loop
and
and
mov
das
push
movsb
sti
or
rcll
imul
inc
sahf
push
addb
sub
data16
repz
sbb
and
and
dec
and
ret
adc
mov
xor
adc
push
in
add
jecxz
pop
push
test
lret
and
add
inc
stos
cmp
daa
test
movsb
lods
les
popa
aaa
and
sub
icebp
and
xlat
jecxz
rcl
fwait
adc
sbb
test
sahf
out
push
outsb
push
cmpl
mov
enter
mov
ljmp
out
in
popa
mov
ljmp
cltd
mov
outsl
or
cmp
dec
sub
dec
mov
or
rcrl
ss
out
pop
push
dec
in
jb
enter
cmp
sbb
sbb
inc
daa
insb
les
pusha
lret
dec
xchg
iret
hlt
mov
ja
xchg
int
jmp
sbb
mov
xor
paddw
xchg
js
lods
in
mov
sub
loop
inc
data16
jns
xchg
movsb
sub
mov
mov
inc
pop
sub
pop
jbe
pusha
rol
mov
mov
sahf
frstor
les
orb
sbb
inc
repnz
add
push
mov
jp
mov
dec
fsts
cwtl
dec
sub
arpl
lds
inc
mov
lods
push
pop
and
sub
in
daa
mov
push
imul
int3
add
or
hlt
inc
inc
xchg
dec
or
xchg
stos
out
shlb
jo
jno
pop
jns
sbb
inc
cmp
imul
in
push
negl
mov
stos
sbb
inc
pop
push
icebp
test
mov
das
out
adc
lock
cmp
out
aad
push
imul
ds
bound
ljmp
in
loopne
fcomps
and
dec
daa
jge
ja
popa
or
movsb
inc
mov
out
movsl
ja
lods
aaa
fdiv
pop
pop
jge
lret
fidivrl
lahf
cmp
out
ret
add
dec
loopne
aaa
or
out
inc
push
sub
mov
out
mov
popf
jnp
lahf
and
outsl
dec
icebp
xor
push
and
xlat
xchg
mov
push
imul
mov
inc
cli
insl
push
or
dec
and
rcll
mov
mov
pop
jle
into
inc
inc
or
xor
or
push
xor
cmp
adcb
dec
pop
jae
xorb
pop
and
idiv
fdivr
inc
popf
shlb
cmpsl
cmp
popf
and
and
xor
xchg
jp
fwait
and
sub
add
pop
and
sbb
xor
mov
mov
cld
enter
loop
and
sub
stos
popf
insl
xor
imul
popf
test
pop
pop
push
inc
js
pop
xor
dec
cltd
adc
cmp
inc
xor
shll
loop
shll
loop
adc
pop
jns
ret
and
ret
stos
pop
mov
bound
jg
rorb
inc
hlt
xchg
imul
ret
pop
jge
test
js
inc
dec
addr16
or
dec
adc
pushf
push
mov
sti
dec
and
cs
imul
jmp
insb
xchg
bound
ror
movsl
pop
stos
fldcw
lods
sti
cmpl
mov
js
daa
movsb
push
movntps
popa
or
divb
clc
cld
mov
dec
ja
in
push
pop
sbb
stos
or
rcrb
fwait
shrb
sub
in
call
imul
adc
mov
push
fisttps
pop
adc
loopne
data16
outsb
das
push
pusha
arpl
mov
sub
fs
add
iret
push
push
sub
loop
xchg
and
imul
mov
movsb
pop
sbb
push
outsb
clc
hlt
mov
jo
sbb
xchg
xlat
xchg
pop
sub
cmp
inc
fs
fdivl
push
ret
popf
push
and
add
dec
mov
sub
aam
mov
push
shlb
inc
clc
rorb
jle
cmp
ret
push
mov
sarb
xor
cli
inc
iret
cmp
fmul
or
jmp
mov
lods
daa
in
fstl
cld
cs
jbe
xchg
dec
pop
xor
mov
xchg
cmp
or
dec
mov
jmp
inc
clc
push
mov
jnp
cmp
sbb
pop
lods
sbb
scas
dec
in
int
mov
lcall
cltd
adc
lock
das
pop
cli
loopne
mov
enter
popf
lock
xor
sub
adc
mov
push
mov
cmp
decl
test
int3
push
mov
arpl
pop
or
cltd
insb
lds
loope
sub
adc
popf
movsb
push
loopne
andb
push
xchg
or
lods
hlt
mov
ss
pop
fs
mov
jnp
inc
or
push
pusha
adc
mov
pop
cmc
fstpl
xchg
test
imul
or
xchg
imul
pop
xorb
scas
pushf
stc
hlt
mov
aas
mov
testl
add
mov
adc
or
xor
lods
insl
pop
inc
push
int
popa
mov
dec
push
push
sbb
fisubrs
and
sbbl
call
mov
mov
sarb
sahf
nop
push
dec
add
ljmp
mov
fwait
ja
and
inc
pop
xor
mov
ja
int3
das
push
add
or
jp
movsl
jnp
xchg
push
in
outsb
add
push
mov
xor
push
dec
cmc
jl
adc
mov
jo
inc
xor
movsl
popa
out
js
xchg
imul
xchg
hlt
inc
popf
sub
jle
test
incb
and
dec
xchg
jo
repz
jg
dec
ljmp
jecxz
xor
pop
flds
outsb
insl
out
imulb
pop
in
fnstcw
popf
mov
cmp
push
sbb
gs
cmpsb
mov
jecxz
xor
and
cmc
mov
mov
inc
mov
mov
mov
xchg
std
push
mov
cmp
and
fdivr
pop
sub
or
and
fs
sahf
out
cmp
call
mov
lock
int
mov
sti
imul
xchg
enter
sub
lods
movsb
call
jbe
out
inc
xchg
fmulp
jmp
or
pop
lcall
xchg
fildll
fimull
pop
adc
or
adcl
shrb
jl
cs
movsb
add
stc
sbb
jns
lcall
adc
fisubl
mov
popf
test
adc
cmp
mov
xchg
mov
clc
lret
or
lds
or
popa
push
or
arpl
imul
ja
push
lods
mov
into
in
jl
cmp
std
fnstsw
dec
mov
movsl
jns
les
mov
dec
stc
adc
cmp
xor
lea
mov
in
fisttpll
push
cmp
pop
iret
icebp
mov
in
xlat
adcb
pop
inc
cmp
lcall
cmp
push
shll
inc
shlb
lcall
inc
xchg
jl
push
sub
aas
lods
into
loop
add
fs
sbb
mov
testl
adc
mov
test
fidivrs
and
pop
fwait
rorb
mov
jae
cmp
lahf
mov
cwtl
push
scas
push
leave
aaa
dec
jnp
pop
enter
sarl
cmp
cmp
scas
pop
loope
iret
fwait
inc
xchg
adc
and
inc
jle
cs
ss
les
and
sbb
in
sub
cmpsl
pop
push
dec
inc
jg
sub
jb
adc
fcoml
xor
xor
add
movsb
ds
xchg
test
xorl
int
sbb
shl
xor
sub
testl
xlat
xor
jne
inc
cld
cmp
cmp
outsl
and
and
xchg
clc
in
movsb
xor
test
push
xchg
cli
orl
ja
jmp
ss
ss
mov
movsl
js
orb
xchg
mov
ja
js
pop
addb
pop
lcall
sysexit
fiaddl
and
mov
loop
add
adcl
cmc
sbb
adc
mov
loopne
push
sub
inc
lea
push
loopne
ror
popa
xchg
jnp
mov
pop
movsl
push
icebp
fistps
adc
cmp
jecxz
jmp
dec
pop
lea
pop
daa
je
adc
jmp
cld
call
out
push
mov
jg
jmp
out
sub
ret
ds
pop
dec
test
mov
push
push
sub
xlat
cli
push
int3
mov
inc
stos
lcall
or
and
stos
xor
cli
divl
or
pop
fcmovu
bound
xor
in
roll
dec
lods
jne
inc
xchg
divps
rolb
enter
mov
jo
pop
cmp
lds
xchg
sub
ja
lock
mov
or
fistl
cmp
inc
dec
or
sbb
enter
mov
sbb
inc
fwait
lret
cli
mov
xchg
shrl
and
cli
dec
xchg
mov
push
jp
jnp
pop
test
xor
lcall
lahf
and
dec
in
iret
sub
nop
dec
xor
bound
fwait
xchg
in
loope
mov
in
adc
push
lahf
sti
fsubp
xchg
mov
fidivrs
mov
inc
test
sahf
fisubrs
dec
adc
mov
out
into
xor
push
xor
adc
mov
insl
xchg
scas
mov
xchg
or
and
sub
leave
loope
mov
test
ljmp
push
cli
int
out
fsts
xchg
xor
and
xlat
shlb
adc
push
mov
push
xor
sub
jbe
mov
jns
add
bound
test
cmpsb
mov
out
shlb
sbb
sbb
nop
mov
or
xchg
leave
in
adcl
xchg
xchg
sbb
into
pop
hlt
add
cmove
lods
inc
into
mov
les
cld
xlat
iret
sahf
xor
jbe
mov
inc
pop
or
jl
test
je
icebp
pusha
jne
cwtl
pop
or
cmpsl
xlat
les
repz
cwtl
jp
cld
sub
xor
rcll
iret
iret
or
or
xor
or
push
dec
cmp
dec
mov
pop
je
dec
in
mov
aam
fcoml
xor
sbb
sub
pop
repz
shlb
xor
loope
sub
movaps
mov
sub
cmpsb
mov
pop
imul
int3
xor
sub
mov
mov
ds
js
adc
dec
jno
test
dec
fwait
hlt
xor
ljmp
mov
shlb
cmc
lock
adc
lods
inc
and
and
call
aaa
lods
pop
and
shlb
pop
and
xchg
mov
dec
cmp
sub
mov
xchg
insl
jns
or
fstl
dec
jbe
mov
jo
fcoms
fdivl
hlt
stc
fidivrs
cmp
and
push
mov
mov
adc
or
sbb
out
inc
sar
push
mov
and
push
adc
dec
mov
and
jo
push
cltd
xor
inc
xchg
pusha
enter
popa
cmp
dec
xor
and
aad
pop
jl
inc
xor
or
jns
jmp
mulb
andb
ss
cmc
jno
dec
dec
mov
cwtl
xor
jnp
stos
test
bound
mov
in
add
sub
push
sbb
fs
stos
pop
rcrl
gs
test
xchg
pop
lds
mov
pop
gs
stc
test
out
mov
pop
mov
movsb
pop
bound
pusha
inc
fimuls
sub
sbb
ret
jge
push
mov
test
je
or
jbe
addl
push
jge
pop
testl
and
add
int
xor
xor
test
repnz
outsl
sbb
inc
mov
push
add
mov
add
mov
mov
aam
loopne
or
xchg
out
adc
xor
int3
cmp
pop
stos
push
push
push
pop
sti
and
mov
push
jg
in
mov
push
movsb
outsb
xor
loope
insl
jns
icebp
neg
cwtl
cltd
aas
and
int3
fcomi
xchg
call
aas
addb
popa
das
cmpsb
cmp
and
js
sub
mov
push
std
lods
mov
out
mov
fwait
imul
xchg
iret
sub
push
loopne
lret
lcall
and
rorb
xchg
int
and
cmp
enter
cmp
mov
fs
mov
push
sub
cmp
arpl
pop
cltd
inc
out
jmp
adc
in
rorl
jno
jns
mov
mov
lods
push
negb
xor
adc
or
and
pop
out
xor
pop
cmpb
xchg
std
aam
xor
sub
je
pusha
mov
add
fcmovnb
sub
cmp
cwtl
jbe
insb
cmpsl
xor
out
dec
lcall
gs
loope
jbe
or
shrb
dec
cmp
and
or
in
les
popf
cmp
mov
je
lahf
dec
aam
jb
inc
iret
dec
jae
or
sbbb
add
test
push
mov
test
out
cmpb
loope
repnz
mov
xchg
sub
cmp
inc
jle
jbe
jle,pn
sbb
or
pop
ds
xchg
xchg
add
es
movsb
in
enter
cmp
mov
or
mov
das
inc
mov
jb
gs
jo
mov
mov
in
or
xor
or
addr16
add
xor
jge
out
push
pusha
mov
sub
daa
mov
inc
outsb
faddl
callw
mov
subl
xlat
push
idiv
cmpsb
and
es
push
pop
dec
fstl
loope
out
sub
mov
push
add
xchg
and
and
cmp
xor
sub
sub
test
leave
insb
pop
ret
mov
sbb
fcmovnb
repz
pop
cmp
sbb
dec
adc
pop
loop
pop
push
mov
insl
and
mov
pop
shl
xorb
or
sub
pop
shrb
mov
loopne
out
lret
jbe
dec
pop
ds
xor
call
add
xor
jg
shrl
rcll
in
imul
decl
movsl
rcrb
mov
cmpb
lods
push
mov
out
adc
jp
repnz
pop
mov
add
mov
test
xor
sarb
jmp
js
fisubrl
or
push
lea
jns
iret
ret
scas
sub
mov
sbb
movsl
mov
push
popf
aam
loope
mov
iret
cs
adc
js
test
mov
xchg
loope
push
in
and
das
stos
stos
sti
pop
xor
dec
scas
pop
xor
cmpsb
out
sbb
add
xor
mov
push
adc
mov
cmpsb
es
push
pusha
add
out
mov
add
pop
leave
imul
test
pop
cld
pusha
mov
inc
push
repnz
pop
loope
cmp
inc
test
cld
mov
mov
inc
ja
mov
es
add
rcll
pop
mov
iret
fdiv
lea
ds
daa
sbb
pop
shlb
repz
jbe
mov
sub
or
test
ja
and
loopne
jmp
adc
xchg
sub
pop
push
mov
inc
xor
push
xor
pop
iret
xchg
mov
in
mov
test
or
xor
and
mov
lods
fsubl
rcl
pusha
cmp
push
xor
int
sahf
push
adc
pushf
cmp
cli
jmp
ja
jne
mov
movsbl
and
ljmp
fisubl
pop
shlb
dec
push
lret
mov
and
lret
mov
adc
imul
fs
add
aas
cmp
xchg
call
out
jno
and
lock
repz
sub
aad
cmp
ja
clc
add
sbb
cli
mov
ror
movsb
das
out
cmp
sbb
dec
call
mov
mov
pusha
add
ret
ja
xchg
pop
dec
push
pop
cli
jmp
int3
mov
xchg
iret
fisttps
xor
iret
mov
stos
pop
inc
dec
pop
sub
in
clc
fs
call
xlat
stos
sahf
sub
andl
int3
sbb
loopne
push
ds
out
icebp
popa
inc
gs
and
and
add
loopne
js
bound
sub
data16
adc
sbb
cmp
movsb
mov
inc
cli
lods
adc
push
out
mov
jae
mov
mov
push
stc
fimull
sti
insb
inc
pop
js
and
push
cmpsb
lcall
lahf
mov
inc
into
or
jbe
int
push
sub
sbb
das
and
pushw
push
sbb
cmc
lret
push
dec
insb
jnp
push
lahf
popa
dec
repnz
inc
leave
ret
int3
adc
adc
dec
dec
mov
dec
insb
push
leave
mov
out
mov
jb
cmc
mov
cmp
scas
addr16
fwait
icebp
dec
out
mov
lea
iret
push
fisttpl
cmp
daa
mov
dec
dec
cmp
push
or
popf
loopne
into
and
pop
jae
call
imul
add
add
sbb
xor
mov
mov
adc
stos
movsb
push
test
jns
sti
mov
into
lock
mov
push
mov
out
jecxz
xor
popa
int
ja
test
leave
and
or
add
push
cmpsb
ret
xchg
xchg
in
jne
shrb
pop
enter
lods
in
dec
js
dec
clc
jae
dec
dec
jg
jns
and
inc
loop
ja
bound
in
and
add
mov
roll
xchg
pop
gs
xchg
pop
mov
mov
mov
fstpl
dec
ja
addr16
pop
mov
test
mov
subl
mov
mov
stc
pop
mov
push
les
and
pushf
sub
in
mov
sbb
xlat
and
xor
sbbl
push
push
lcall
nop
aas
and
mov
loope
leave
push
push
mov
jg
jbe
fldt
jge
icebp
fs
xlat
sbb
adc
push
hlt
sbb
div
movsl
clc
push
mov
fmuls
pop
and
cmp
xchg
lds
addr16
sub
xchg
cmp
hlt
push
jl
push
mov
push
in
clc
orb
inc
bound
shll
out
add
int
push
jmp
int3
gs
jno
outsb
enter
leave
aad
stc
pop
aaa
shl
fimuls
and
decb
in
add
sbb
lret
lods
jno
int
or
mov
jns
dec
add
fistpll
mov
popa
mov
push
imul
or
or
mov
pop
pushf
inc
cmpsl
sub
fs
push
adcb
cli
pop
xor
imul
cli
and
imul
jb
xchg
fbld
lock
cld
mov
cwtl
mov
xchg
lcall
xchg
pop
hlt
or
inc
lahf
sub
dec
mov
incb
jbe
or
push
popa
mov
xor
test
mov
les
mov
sbb
dec
mov
sub
aad
cmc
push
jns
in
inc
xor
dec
loopne
pop
cli
gs
sarl
rclb
jg
loopne
loopne
adc
dec
jg
xlat
outsb
stos
xchg
in
mov
and
push
int3
hlt
cmpsb
and
fwait
gs
bnd
add
and
insb
jo
ret
adc
rorl
mov
imul
add
sub
push
ja
sqrtps
push
push
cmpsl
aad
fs
push
das
jbe
mov
scas
rclb
and
popa
and
addr16
or
cmpsl
lret
insl
or
loope
mov
or
idivb
xchg
jae,pt
cli
popf
aas
cmp
imul
jge
iret
jne
pop
in
pop
dec
arpl
sub
pop
in
in
adc
je
in
fadds
push
mov
addr16
xor
dec
clc
into
jmp
lock
inc
arpl
xchg
fisttpll
shl
ret
cwtl
xor
fisubrl
jle
pop
or
testl
sbb
adc
pop
insb
repz
mov
cltd
mov
sbb
cmp
or
ret
loope
xlat
bound
mov
mov
mov
xor
push
lds
pushf
stos
or
stos
lea
int
mov
scas
repz
xchg
or
fisubrs
filds
jmp
stos
push
out
test
lcall
in
or
sub
inc
push
testb
push
push
sar
imul
add
cmpsl
ror
add
push
sub
test
lds
jle
inc
push
lret
stos
xor
cmpsb
stos
pop
cmp
jns
pushf
lcall
hlt
fst
test
ja
ss
xor
jne
ds
outsl
mov
xchg
xor
popf
movsl
test
movsl
mov
cmp
lock
pop
inc
orl
pushf
aaa
fdivs
clc
cmpsb
mov
lods
test
xor
adc
sub
mov
xchg
stc
or
stos
ret
and
jb
lcall
fisubs
xchg
xchg
in
stos
mov
stc
scas
das
cmc
xchg
xor
sub
dec
sbb
push
imul
cmp
dec
xor
sub
jnp
push
mov
idiv
jno
cmpsb
test
xchg
xchg
popa
fwait
adc
js
leave
iret
dec
add
mov
mov
mov
mov
pop
faddl
sbb
xor
fidivs
pop
jno
adc
out
int3
pop
adc
decl
das
dec
cs
and
xor
fcoms
fiadds
stos
cwtl
push
or
inc
sub
jns
sub
pop
and
sahf
jp
pushf
xchg
leave
out
cmp
movsb
add
clc
out
push
add
adc
jne
jl
popf
andl
cltd
pop
push
mov
xchg
in
in
xchg
vsqrtss
inc
xchg
scas
sub
in
xor
test
scas
xor
push
cld
and
hlt
sub
ret
test
data16
sub
es
aas
push
mov
test
fidivs
sahf
ret
cmp
jp
fldenv
out
adc
cmc
sahf
dec
mov
stos
adc
repnz
gs
rep
imul
int3
fsubrs
add
sbb
xchg
or
sbb
nop
sub
mov
push
aas
nop
jmp
incl
jbe
imul
pusha
jb
inc
rorl
mov
mov
sub
add
cmpsb
xchg
icebp
mov
dec
in
push
fisubrl
jbe
test
fimull
and
test
mov
pop
adc
inc
pop
test
sub
push
outsb
cmp
cmp
leave
mov
jg
sbb
pushf
push
jns
out
mov
or
ret
mov
test
jle
repz
xlat
outsb
into
mov
clc
push
mov
sbb
add
inc
sbb
inc
testb
xor
add
jo
push
sar
adc
fs
out
call
aas
testl
fs
int3
fistpl
scas
fildll
jmp
nop
sbb
mov
pop
or
mov
pop
lahf
adc
dec
shlb
sub
dec
aam
out
int
and
inc
and
and
std
push
jecxz
enter
out
pop
stc
lea
aas
nop
hlt
divl
stmxcsr
test
xor
cmp
paddb
push
add
roll
outsb
dec
push
mov
aam
aaa
add
jne
mov
dec
arpl
mov
mov
ljmp
mov
es
addl
xor
push
in
or
fcmovnu
das
mov
jg
mov
jmp
cld
mov
push
bnd
dec
test
xchg
decl
mov
cmc
cmpsb
fsubrl
mov
movsb
add
push
loope
inc
dec
jns
dec
lods
cmp
lods
pop
std
outsb
shrw
lds
insl
add
push
fisttps
sub
jns
jbe
mov
icebp
adc
loope
rol
dec
popa
mov
cmp
xor
jle
xchg
add
mov
xor
inc
sub
movb
mov
cld
add
adcl
and
out
dec
xor
or
fadds
pop
mov
clc
push
push
adc
sbb
repz
sbb
insl
decl
js,pn
nop
cwtl
test
sbb
aas
and
lea
stc
sbb
mov
xor
push
push
mov
into
or
sub
sbb
inc
mov
push
cmp
xchg
dec
mov
cli
ljmp
aaa
iret
adcb
lret
jnp
lds
jle
cs
xorl
repnz
mov
test
adc
jp
dec
iret
mov
add
and
push
xor
jmp
std
lea
mov
xchg
inc
jecxz
insl
jg
jbe
int
adc
and
loope
packsswb
int3
mulb
mov
outsl
push
dec
mov
pushf
andl
pop
fdivp
add
fwait
iret
adc
push
push
mov
inc
adc
sbb
rol
cmp
jae
clc
lret
mov
int
mov
xchg
add
inc
call
pop
int
fcompl
es
mov
xor
jle
push
fdivrs
fsubrp
out
adc
mov
cltd
sub
jge
adc
cmp
in
pop
pop
outsb
mov
popa
divb
rclb
cmove
jns
add
mov
inc
scas
repnz
shlb
je
jns
dec
lcall
repnz
cmp
aas
pop
pop
jb
call
subl
repz
dec
push
mov
adc
jp
icebp
or
hlt
inc
xlat
pusha
sub
adc
pop
int3
into
xor
lret
fildll
sub
movsb
xor
sub
outsl
lds
adc
mov
or
and
mov
and
aas
dec
sbb
cmp
mov
and
std
cld
lea
mov
cmp
mov
enter
insl
or
push
in
jbe
dec
pop
outsl
shrb
pop
aad
pop
shrl
or
andb
lret
mov
mov
divl
inc
jne
dec
jo
movsb
ljmp
mov
dec
stos
adc
dec
sbb
pushf
fs
push
shlb
dec
sti
xor
cmp
ret
mov
insb
mov
repz
add
pop
inc
mov
daa
pop
mov
fcomp
outsl
sub
iret
dec
into
int3
cmpsb
es
add
data16
pop
mov
test
shrb
adc
inc
pop
jg
scas
cmpsl
push
pusha
imul
jg
cs
inc
mov
push
es
cli
adc
and
adc
rclb
push
mov
xchg
sbb
inc
push
and
pop
push
iret
jbe
xor
cmc
mov
out
push
movsl
pop
repnz
push
mov
cltd
xchg
jg
adc
pop
fists
and
je
les
sete
outsl
fs
jg
leave
adc
jge
mov
push
dec
sbb
xchg
fistl
add
test
loopne
shlb
arpl
je
push
or
xor
fdivl
stos
iret
aaa
pop
and
and
cmp
ss
or
mov
fdivrl
loopne
or
dec
stos
mov
lret
sbb
into
ss
cmp
idivl
mov
mov
popf
cmp
cmp
sahf
push
lret
jmp
decl
mov
or
sub
sbb
adc
push
fbld
fmull
xchg
popa
xchg
mov
cmp
fbld
add
ds
ljmp
sbb
mov
mov
dec
repz
in
mov
pop
cmp
inc
icebp
jo
xchg
jge
loope
xor
mov
push
movsb
jno
and
test
dec
shlb
and
inc
iret
push
sub
mov
bnd
jbe
mov
xor
cmp
loopne
lahf
clc
mov
ds
out
add
aam
xchg
icebp
xchg
mov
push
adc
iret
or
pop
outsl
aam
test
clc
imul
aam
adc
addr16
popa
lret
or
mov
lea
push
and
cmp
adc
xchg
sub
mov
pop
call
jecxz
incl
push
movsb
inc
mov
or
mov
sbb
icebp
jle
sbbb
fwait
mov
push
xchg
enter
pop
push
aas
int3
sub
mov
call
add
in
or
dec
cmp
call
pusha
and
xchg
xchg
fiadds
xlat
xchg
sbb
in
mov
sbbl
xchg
mov
cmp
test
out
pushf
push
movsl
jne
loop
addr16
fdivs
mov
lret
jl
std
adc
lea
and
mov
dec
das
mov
clc
clc
jle
cmp
adcb
xchg
int
shll
adc
jg
std
shrl
lret
xchg
fbstp
xchg
push
movsl
push
adc
gs
mov
pop
push
or
jns
xchg
movsb
leave
outsb
test
aad
imul
xchg
mov
jbe
push
cs
sub
mov
mov
xchg
cli
add
cld
aad
das
mov
popf
into
fcoml
push
adc
sbb
out
lcall
rorl
sbb
sahf
sarb
pop
popf
repz
push
cli
ljmp
lcall
xchg
adc
dec
mov
xchg
js
fistpl
mov
mov
loopne
loop
inc
repnz
shll
add
outsb
mov
js
sub
mov
lret
dec
fstp
sbb
inc
and
pop
xchg
adc
es
mov
pop
fildl
jo
leave
outsb
cmp
hlt
fisubrs
pop
sbb
push
jns
subl
fadds
inc
stos
cli
ja
push
add
lock
ljmp
lods
pop
arpl
xor
sub
mov
sub
shrb
jg
lods
xor
fwait
add
loopne
or
sbb
rdtsc
push
jmp
aaa
pop
jp
jp
adc
sbb
arpl
and
cmpsl
bound
imul
inc
fbstp
out
inc
mov
insb
sub
cmpsb
mov
fistps
xlat
jb
mov
lds
xor
frstpm(287
sbb
jbe
pop
mov
jp
add
insl
outsl
mov
pop
rcrb
fadd
test
pop
hlt
mov
lcall
jno
jbe
add
jae
fstl
push
push
and
jne
iret
je
mov
pop
mov
jnp
mov
popl
repz
add
repz
push
rol
inc
push
and
cmp
cmp
ljmp
xor
xchg
data16
in
push
push
adc
cmp
cmp
xchg
or
cmp
mov
cli
push
cmc
add
add
and
jle
sbb
push
addl
loopne
xchg
aaa
insl
xor
jecxz
pop
mov
jl
das
outsl
mov
adc
call
xor
and
test
fwait
outsl
jg
int
dec
fcomp
ja
shlb
and
cs
lock
dec
daa
push
cmp
dec
push
add
icebp
or
mov
mov
stc
adc
scas
add
jb
pop
shll
movsb
ss
test
mov
cmc
repnz
inc
sub
imul
add
pop
pop
inc
clc
fidivrl
sbbl
or
lods
nop
jns
inc
add
inc
test
nop
mov
sti
lahf
cmp
cmp
pop
cmp
mov
cmp
adc
mov
adc
stc
cli
jg
in
xlat
cwtl
adc
mov
dec
nop
dec
and
adc
sarl
daa
xor
xor
stos
shlb
mov
jg
mov
roll
lods
dec
mov
lock
jbe
pop
int3
jmp
dec
push
andl
loop,pt
je
cli
mov
out
jne
add
loopne
in
push
cmp
aas
outsb
or
ljmp
test
cmp
lcall
scas
hlt
fwait
push
push
jno
jmp
das
arpl
mov
popa
cli
rolb
pop
in
sbb
sbb
lret
mov
mov
cmp
stos
inc
cmpsb
push
enter
daa
mov
adc
jne
arpl
adc
out
lods
xor
test
adc
andl
mov
jl
push
std
mov
or
xchg
lea
jns
cmp
out
mov
scas
add
inc
les
jmp
sbb
sbb
xorb
inc
jmp
sub
cwtl
jg
nop
popl
push
lea
into
rorl
mov
fs
jge
insb
dec
inc
and
es
addb
in
mov
loope
adc
gs
aaa
icebp
in
xchg
repnz
cs
cmc
in
leave
adc
inc
lcall
lret
ret
mov
shlb
jecxz
popf
arpl
imul
sti
test
cwtl
into
dec
pusha
push
in
add
hlt
sarl
cmc
and
xchg
inc
pop
popa
rclb
movsl
call
orl
pop
rcrb
mov
jg
jmp
and
cli
test
lds
imul
sahf
jne
mov
adc
nop
pop
imul
hlt
stos
jle
inc
dec
sub
push
pop
dec
pop
test
inc
mov
or
rcr
sbb
xchg
add
jecxz
shl
jbe
dec
lock
popa
test
jecxz
xor
ficoml
rclb
mov
push
sbb
pop
dec
xor
sub
repnz
in
pop
ret
pop
inc
sbb
stos
dec
pop
lea
push
fcomi
sbb
stos
jle
sbb
xchg
xchg
addr16
or
pop
cmp
xchg
adc
mov
sbb
mov
fcompl
out
mov
sub
pop
lock
mov
inc
rcrb
dec
js
ret
mov
inc
loopne
mov
pop
pop
and
mov
hlt
test
adc
les
dec
in
inc
pop
push
insb
mov
jg
mov
sbb
movsb
or
or
jb
inc
mov
arpl
icebp
cwtl
sub
cwtl
adc
nop
fs
mov
leave
or
pushf
lret
or
or
sub
inc
adc
aaa
pop
and
mov
cs
jae
pop
ret
cmp
outsb
andb
out
shl
and
outsl
and
insl
mov
ds
pop
xchg
pop
sbb
inc
gs
gs
sar
mov
pop
fnsave
push
add
mov
mov
fwait
xchg
adc
out
dec
movsb
add
idivb
dec
inc
outsl
lock
mov
loop
loop
mov
mov
sub
xchg
pushl
mov
test
mov
push
mov
cmpb
out
cltd
sub
int
dec
mov
je
mov
or
ljmp
push
addl
loope
stc
repz
mov
das
scas
rcl
dec
js
mov
frstor
pop
test
outsl
sbb
cld
push
int3
xchg
add
sbbl
mov
jne
cs
mov
xchg
xor
push
repnz
das
xchg
sub
mov
fcmovnu
cmpsb
sub
sbbl
xchg
pop
in
lcall
cwtl
cmp
stos
mov
pop
ss
fdivr
inc
aam
adc
xchg
xchg
mov
pop
fnsave
rclb
imul
sub
sahf
movsb
sbb
rclb
cltd
mov
lret
add
daa
ret
mov
cmp
fcomp
cwtl
mov
cltd
dec
gs
jb
or
dec
add
mov
fwait
repnz
jnp
jb
xchg
pop
xchg
stos
mov
xchg
test
mov
iret
imul
orl
test
pop
jl
aaa
rolb
loope
inc
push
dec
fnstenv
cli
sub
pop
sbb
inc
cmpsl
mov
sub
imul
xor
mov
pop
pop
aas
cld
fsubrp
shl
lcall
sub
sar
cmc
and
jno
movsl
lods
pop
lods
test
movsl
lret
fildll
and
add
hlt
nop
aas
or
mov
sub
dec
enter
jno
sub
jge
outsb
call
or
je
mov
add
lds
mov
xor
add
jg
dec
jmp
and
cmovge
rcr
mov
in
adc
mov
ret
popa
jo
mov
jae
dec
repz
clc
inc
bound
jmp
dec
rcll
pop
cmp
cmc
adc
subb
dec
jge
xchg
and
xor
lock
enter
push
inc
pop
mov
xchg
ret
sbb
pop
stc
add
push
testb
jecxz
sahf
inc
ljmp
sarl
push
push
into
mov
gs
ja
test
je
fdivrs
cltd
insl
divl
sub
or
out
insl
jp
and
mov
mov
pop
sbb
pop
lods
outsl
jb
add
ss
xchg
stc
mov
and
mov
sub
cwtl
xor
pop
imul
jnp
lcall
stc
movsb
or
add
xor
fcoml
aas
std
xorb
in
dec
dec
mov
mov
inc
iret
and
fsubl
fisubs
insl
adc
cmp
je
ss
lds
mov
jle
iret
mov
mov
shll
hlt
jbe
dec
aam
mov
mov
or
iret
add
jnp
jne
mov
jb
out
jl
rcr
arpl
inc
call
cwtl
inc
in
fsubrs
imul
add
imul
into
call
mov
je
jmp
mov
data16
pop
es
pop
mov
jge
push
out
jg,pn
cmpsb
bound
daa
xor
and
cli
jg
loope
in
xor
xor
xchg
xchg
dec
jb
and
repz
popf
lock
sub
mov
scas
pushw
lcall
ret
push
scas
sahf
cmp
mov
mov
mov
push
inc
pop
push
shlb
rcr
popa
popa
mov
in
sarl
push
lods
cli
add
clc
dec
mov
sbb
xchg
xchg
cmp
xchg
in
cwtl
push
repz
setb
movsl
aaa
mov
ja
mov
jb
dec
lahf
rep
and
sub
push
and
push
cmp
sbb
jp
jo
inc
sbb
inc
xchg
test
dec
fsubrl
pop
fstps
ret
inc
pop
inc
outsb
out
cwtl
cmp
sti
jl
sahf
pop
shlb
cwtl
jmp
cmp
or
pushf
stc
fiadds
es
pop
rclb
ja
pop
xchg
loop
adc
cmp
insb
cmc
pop
cmp
and
lret
xchg
push
push
ljmp
or
cmp
out
movsb
in
fsubrs
test
ja
js
lcall
lcall
test
lea
mov
lds
sbb
ret
outsl
mov
je
ss
popf
jb
mov
sbb
xchg
mov
cli
xchg
xor
stos
clts
mov
adc
jp
add
mov
mov
lcall
insb
pushf
lcall
icebp
jle
push
fdivrs
xorl
stos
adc
sub
dec
stos
push
xor
int3
xchg
daa
test
call
cmp
ja
inc
call
pop
popf
ja
pusha
out
mov
mulb
dec
repnz
mov
in
iret
jnp
dec
movl
xchg
cwtl
arpl
sahf
rclb
out
out
push
in
inc
sbb
inc
mov
popf
les
xchg
or
icebp
insb
loop
inc
mov
mov
cmc
sbb
test
stc
dec
dec
pop
scas
shrb
lds
es
ror
push
aam
jl
mov
ret
sarb
movsl
cld
xor
dec
roll
aad
lock
enter
ja
cltd
mov
cli
inc
inc
aaa
sub
out
sub
add
cmc
mov
jl
pop
mov
jl
idivb
jb
xor
jbe
mov
lahf
add
inc
iret
jo
in
in
sub
pop
imul
out
into
xchg
inc
out
and
inc
loope
aad
mov
mov
out
cmpsb
pop
fisubrs
stc
je
lea
cld
xchg
insl
jle
cwtl
leave
sbb
cwtl
adc
inc
cmp
test
jmp
jno
andl
and
jb
shrl
inc
xchg
pop
inc
mov
xchg
inc
bound
mov
test
in
leave
adc
ror
aam
push
push
dec
mov
mov
test
lret
sub
hlt
mov
xor
fisubrl
jo
sub
adc
jns
mov
das
std
imul
pop
xchg
xor
mov
fildll
pusha
iret
mov
cmp
iret
pushf
cmp
add
fsubrl
nop
mov
dec
push
mov
int
xlat
and
out
xchg
into
jo
pop
bound
into
lret
repz
mov
popf
mov
andl
fnsave
adc
adc
push
cmp
rcl
movsb
xchg
and
pop
testl
mov
out
and
mov
xchg
mov
dec
leave
inc
mov
or
inc
clc
and
dec
push
out
fsubrl
cmpb
inc
jmp
sbb
gs
test
adcb
and
mov
mov
cmpsb
andl
js
imul
js
dec
out
mov
mov
cmp
mov
fs
sbb
sbb
shlb
inc
mov
iret
mov
push
out
sbbb
aam
jno
mov
pop
mov
and
sbb
xor
gs
sbb
mov
sti
inc
jno
js
dec
es
xchg
mov
hlt
testb
jnp
jae
add
push
test
out
ret
mov
sbb
in
mov
push
cli
adc
jns
or
or
xchg
sub
mov
xor
mov
cmp
jle
add
sub
popf
das
fs
add
in
pop
ss
cli
test
inc
loope
testl
or
pop
loope
stos
aaa
pop
jg
je
and
sbb
lahf
sbb
sub
lcall
pop
sbb
or
outsb
push
xor
dec
mov
aaa
adc
add
fwait
sarl
sub
out
sub
add
jmp
ja
adc
xchg
pop
mov
mov
jp
orl
stos
ja
inc
scas
mov
mov
or
push
nop
add
dec
and
inc
and
mov
pop
adc
push
popf
hlt
neg
out
or
push
xchg
push
pop
jbe
outsb
xadd
add
pop
inc
jo
sub
dec
popf
movsb
loopne
cmp
pop
and
pop
mov
xchg
roll
mov
ljmp
in
mov
jnp
jp
cld
dec
lcall
adc
cmpsl
push
dec
out
cmpsl
adcb
imul
rcll
pop
push
clc
sahf
inc
sbb
fdivr
scas
inc
cmpsl
ds
xor
jno
push
lahf
mov
out
in
xchg
add
stc
mov
push
jo
test
adc
add
fsubrl
imul
sbb
es
in
jl
pop
sahf
sbb
jle
dec
lahf
add
fbld
das
enter
adc
in
pop
mov
roll
ficoml
or
repnz
cli
lret
aaa
add
sub
ret
sub
cmc
xor
popf
pop
mov
cs
add
sub
xchg
ror
in
clc
xorb
fsubrl
jmp
popf
lds
out
mov
or
ret
pop
jecxz
lahf
sbb
in
xchg
jnp
pop
sbb
xchg
out
inc
pop
outsb
das
into
shll
int3
or
icebp
adc
jg
push
jo
inc
sar
dec
dec
lods
or
stc
nop
add
loope
icebp
lret
push
adc
out
pushf
popa
jo
sub
xchg
adc
add
dec
jns
rcll
inc
lcall
mov
xlat
dec
xorb
sbb
mov
notb
push
add
mov
mov
xchg
or
stos
push
push
es
dec
push
lahf
sub
call
es
loope
mov
xchg
aad
mov
pop
xchg
sub
pop
punpckldq
dec
outsb
fcoml
ret
adc
dec
rorl
and
aaa
stos
sbb
pop
loop
test
mov
pop
filds
orl
in
cmp
jecxz
cmpsl
imul
outsb
rcl
xchg
jecxz
mov
xchg
daa
adcl
imul
inc
aam
daa
leave
ret
cmp
xorl
and
add
outsb
fbstp
and
mov
std
mov
test
or
sbb
xchg
xor
push
popf
xchg
push
mov
pop
fcmovu
lret
mov
stc
outsl
outsb
loopne
adc
mov
test
mov
loopne
lcall
loop
lods
dec
cmpb
jbe
xchg
clc
movsb
dec
cmp
jge
pop
jmp
imul
addr16
arpl
lea
fistpll
nop
and
push
mov
sahf
rorl
lret
add
fisttpll
pop
xor
movsl
adcb
ret
enter
imul
es
xchg
ss
outsl
xor
mov
sti
out
cli
push
pop
push
lock
sbb
das
mull
jo
sbb
push
jmp
icebp
cmpsl
dec
das
int
and
mov
mov
mov
roll
push
inc
mov
add
insl
popl
sbb
fwait
dec
daa
cmp
and
fsubl
fbstp
sub
sbb
lret
fstp
es
sbb
mov
movsl
mov
sub
jmp
cmp
dec
ljmp
daa
negl
xchg
in
lret
mov
add
repz
push
and
sub
nop
push
xchg
pop
pushf
pop
nop
imul
test
pop
hlt
adc
push
cmc
stos
xchg
jg
f2xm1
xchg
mov
xor
shlb
jl
jmp
mov
xlat
int3
or
lcall
es
xchg
outsb
push
es
pop
mov
jp
cmp
dec
lds
sahf
fidivrl
pop
ljmp
cmc
jle
mov
adc
shll
shrl
push
mov
les
dec
ljmp
jle
shr
or
lock
fs
sub
in
jb
jae
in
jle
jo
in
add
mov
mov
push
sbb
scas
pop
xchg
xchg
jl
dec
ret
and
xchg
insl
jns
loopne
adc
mov
imul
dec
dec
es
ss
nop
out
sbb
test
sbb
cmp
xor
adc
hlt
out
sub
cwtl
sbb
add
sbb
ss
fisubrs
outsl
loopne
pop
out
stc
icebp
xchg
fisttpll
mov
cwtl
jecxz
add
mov
mov
dec
or
inc
inc
pop
lahf
in
xchg
popf
cmp
dec
pop
lds
sub
xorb
out
sbb
lock
mov
xorb
inc
and
push
xchg
mov
rcrl
inc
test
push
xor
out
into
fidivs
test
pop
cmp
ja
ds
and
fcmovb
loopne
mov
mov
fcmovb
aaa
nop
js
iret
inc
mov
stos
xchg
enter
insl
daa
xchg
dec
xor
xor
int3
xchg
out
dec
dec
sub
adc
and
or
xor
es
pop
cmp
rcrl
and
cmp
enter
leave
sahf
inc
lahf
sub
sub
scas
pop
or
jecxz
clc
in
in
fsts
xor
lcall
cmp
adc
ja
cs
icebp
cwtl
dec
push
test
lret
loop
and
nop
daa
jns
into
aam
xchg
fidivl
stos
out
mov
leave
out
or
cmpsb
fidivrl
outsb
in
sub
mov
mov
xchg
sub
cmp
xchg
stos
in
jecxz
xor
stos
adc
ds
jne
mov
jmp
inc
in
shl
and
rcll
push
pop
ficoms
push
jne
pop
call
std
xlat
rolb
adc
hlt
cld
mov
cs
ror
push
sti
adc
leave
dec
cwtl
out
inc
ja
push
movsl
cld
into
jb
dec
push
in
shlb
sub
mov
sbb
push
mov
push
push
lret
movsl
imulb
mov
outsb
in
sub
addr16
aad
imul
imul
mov
xchg
arpl
insl
or
pop
fisttpll
imull
mov
jge,pt
xrelease
repz
shll
rclb
sub
mov
adc
push
insb
xchg
stc
jp
popf
jne
xchg
inc
add
dec
idivl
cs
xchg
add
mov
movsl
cli
or
fimull
call
cmpsl
xor
in
and
aaa
loope
xchg
in
ss
outsl
enter
and
sbb
lret
mov
pop
in
jno
loopne
sbb
add
inc
push
scas
stc
movsl
sbbb
decb
pop
aas
xor
sub
pop
cwtl
ds
cmpsb
mov
push
push
sbb
enter
fs
mov
cltd
mov
cs
and
aad
xchg
push
cli
addl
xchg
aaa
mov
jg
and
inc
jl
push
or
loopne
xor
jns
pop
pop
ds
cwtl
dec
les
cmc
sub
cli
ljmp
or
clc
rcrb
lds
data16
and
lock
pop
cmc
lea
in
stos
outsl
loop
push
fs
stos
mov
cltd
mov
roll
and
push
inc
shrb
jns
push
mov
fninit
jno
lret
shl
jge
scas
iret
xor
dec
jo
adc
push
mov
push
daa
mov
mov
jo
adc
arpl
pusha
into
cmp
pop
adc
inc
adc
or
insb
es
lds
lods
in
loope
push
xor
jo
or
sbb
mov
aas
jno
push
in
xchg
pusha
and
inc
jne
movsb
movsl
jp
dec
dec
cmp
das
pop
imul
add
call
addr16
das
mov
push
jmp
push
es
ror
scas
pop
xor
mov
push
icebp
mov
je
xor
lods
push
xchg
je
scas
mov
jge
adc
jg
add
sahf
lahf
sarl
loopne
js
jae
fsub
dec
cmpsb
aaa
int
pop
jge
je
jno
xchg
cld
sbb
jb
out
sub
sbb
les
add
and
fnstcw
or
lea
jne
jmp
mov
xlat
popf
jg
in
arpl
popf
sub
cmp
mov
xchg
aad
and
fsubrs
jg
mov
nop
test
jge
movsb
push
movsb
mov
imulb
lods
add
or
in
ss
pop
insl
push
out
push
in
fcmovb
rcrb
cmpb
scas
out
add
mov
lea
je
add
fsts
jle
ss
test
cld
pop
add
pop
int
push
out
cmp
add
pop
mov
mov
push
push
movsb
sbb
mov
ret
out
push
test
shrb
stc
pop
bound
mov
add
xchg
pop
stos
das
add
cli
decl
movsb
ja
lods
xor
das
addl
imul
outsb
cmc
inc
xchg
push
jmp
xor
or
dec
mov
clc
out
or
adcl
cmpsl
sub
pop
pop
and
clc
je
stc
pop
out
adc
insb
lret
pushaw
gs
sub
cmp
in
test
rcrb
add
lcall
sbb
mov
fadds
sbb
inc
or
fists
jno
lods
or
inc
pop
dec
jb
dec
inc
and
mov
addr16
call
and
dec
div
dec
aas
mov
testb
jnp
adc
stos
test
pop
mov
aas
call
push
push
ss
sub
nop
dec
jge
adc
jl
inc
push
sahf
je
cmc
ds
rol
insb
lret
clc
push
jno
sub
cmc
mov
out
fstps
cmp
push
mov
push
js
xchg
out
nop
lock
inc
std
mov
sub
cwtl
jno
imul
sbb
mov
pushf
call
lea
ss
xor
mov
test
xchg
push
mov
and
cmp
cmp
mov
dec
mov
int3
add
push
inc
mov
xchg
pop
pushl
xor
fdiv
or
cmp
cs
xor
mov
xlat
pushf
clc
in
jl
pop
push
aad
xchg
sbb
mov
add
mov
scas
add
mov
jb
orb
xor
dec
dec
in
pusha
adc
cli
jl
mov
jecxz
aas
jp
mov
jg
jbe
mov
add
jae
mov
fimuls
jb
jns
testl
dec
adc
fs
outsl
sub
inc
xor
rorl
leave
xor
mov
fcmovu
mov
out
xor
insl
es
add
hlt
jmp
pop
add
mov
andb
dec
cwtl
stos
pop
lret
insb
add
insl
inc
out
and
stc
movsl
repz
arpl
movsl
or
adc
cmp
add
xchg
mov
pop
pop
jp
push
lret
int3
jne
test
arpl
push
jecxz
scas
rcrl
xchg
lcall
jp
fisttpl
add
add
lahf
jbe
push
mov
mov
cmp
or
lea
out
inc
or
add
xor
arpl
sub
jbe
push
sti
cmp
xor
dec
movsb
cmp
pushf
arpl
mov
pop
sub
mov
xchg
aad
scas
mulb
int3
adc
xor
jne
adcb
cmp
add
jecxz
out
pop
outsb
mov
dec
test
pop
adc
rcll
imull
stos
popl
jae
mov
push
fdiv
push
addr16
mov
and
loope
xor
ljmp
jmp
or
mov
lcall
mov
jecxz
xor
mov
int3
and
mov
jmp
movsb
or
cs
mov
push
xorb
xor
insb
ret
jns
pop
jecxz
jle
sub
aam
out
xor
shll
pop
dec
outsl
jecxz
cmp
pop
pop
xlat
sub
jnp
jb
add
cmpl
mov
mov
push
fisttps
jmp
daa
push
and
enter
mov
jle
sub
cmc
mov
push
inc
push
pushf
call
sti
adc
lods
ja
and
mov
push
lds
sarl
lcall
mov
mov
pushl
push
and
or
add
jle
fldenv
out
imul
push
xor
mov
lahf
mov
shll
and
ljmp
repz
js
sarl
mov
test
dec
out
iret
lret
out
mov
jae
nop
ret
loopne
push
jle
in
adc
mov
fs
inc
ljmp
les
cs
inc
fwait
pop
mov
xchg
xchg
add
adc
call
cld
cmc
push
inc
bndstx
out
sti
inc
call
mov
jg
xlat
lahf
jbe
push
push
pop
xor
daa
clc
jns
adc
fisubl
dec
xchg
pop
push
out
or
sub
mov
jmp
je
jnp
frstor
mov
negb
mov
pop
cmpsb
xor
in
xor
out
lcall
shl
inc
or
pushf
sbb
enter
pop
mov
fcmovnbe
xchg
push
jbe
jle,pt
sub
movsl
imul
mov
ljmp
mov
cmpsb
mov
mov
jp
xor
push
sbb
sub
mov
mov
cmp
push
dec
inc
lret
scas
adc
in
test
test
out
mov
ret
mov
dec
lods
adc
fdivrl
in
outsb
or
push
pop
fstp
insb
add
pop
arpl
mov
jl
shrb
push
in
inc
cld
jae
dec
pop
movb
adc
aas
test
insl
ljmp
shll
pop
sub
loopne
cmpsl
xchg
aad
pop
xlat
xchg
adc
das
out
iret
sub
adc
fmul
jmp
roll
inc
mov
jmp
out
cmp
cld
or
dec
sub
mov
lret
xor
xor
mov
mov
cltd
sti
sbb
loope
jmp
into
mov
cmp
shll
js
jmp
pushf
xorl
ret
test
fcomi
push
insl
and
sbb
cltd
add
xor
lods
movsb
cmp
pop
jo
adc
lea
lods
mov
out
or
ds
xchg
push
lea
sub
jne
pop
sbb
mov
xchg
xchg
rcrl
fstl
push
mov
sub
cmp
pop
pop
xor
mov
xchg
jg
xor
nop
dec
dec
cmpl
and
out
insl
pop
into
pop
inc
rorl
xchg
icebp
or
add
push
bound
dec
push
data16
test
jb
orl
int3
lea
sahf
mov
int
and
out
adc
pop
sub
shrl
test
xchg
into
lahf
addr16
adc
lahf
mov
inc
fcoml
push
xor
mov
outsb
bound
mov
test
cmp
sahf
fldl
jbe
out
mov
loope
ja
popf
xchg
xchg
push
pop
and
jmp
mov
or
push
adc
cwtl
fwait
mov
in
andb
jle
scas
cmp
mov
aas
dec
repz
inc
fdivp
pop
mov
push
fdivr
fistps
xchg
das
daa
xchg
out
addl
sbb
cmp
add
lret
ficompl
xchg
push
stos
insl
mov
ret
nop
movsb
xlat
lahf
add
ja
insb
or
and
out
or
inc
insb
repnz
hlt
xor
push
mov
xlat
ret
cmpsl
sbb
dec
push
cmp
inc
dec
popf
add
push
cs
mov
bound
addb
mov
psubb
sub
repz
sub
inc
pop
add
xor
cmp
xchg
inc
sbb
cmpsl
sbb
or
xchg
test
dec
fwait
sub
mov
ret
mov
cld
jmp
movsl
scas
pop
mov
adcl
pop
movsl
sbb
loopne
xlat
lret
cmpsl
adc
sub
cld
in
push
pop
fwait
xchg
ret
pop
nop
mov
dec
mov
pop
sub
pop
inc
xchg
outsl
inc
sub
daa
pop
push
dec
popf
push
lahf
jbe
inc
je
fistl
sub
stos
adc
add
cltd
jbe
movsl
push
aaa
fstl
loopne
mov
sub
aam
sub
popf
movsl
sahf
and
push
mov
cltd
repz
and
push
nop
push
xlat
jne
loope
out
movsl
xchg
push
mov
dec
movsb
pop
lahf
imulb
dec
pop
mov
repz
imul
es
fmul
mov
loop
push
inc
add
sbb
scas
mov
xchg
cwtl
std
fs
dec
pusha
call
push
mov
repz
xor
int3
out
or
pop
pop
loope
scas
jecxz
repz
pop
ljmp
push
push
or
inc
inc
xor
sbb
pop
lods
movsl
fidivl
js
xor
sub
mov
int
mov
cmp
aaa
add
fnstsw
mov
js
or
frstor
xor
mov
imul
mov
xchg
jl
dec
sub
push
mov
or
in
lea
subl
mov
jge
je
mov
or
ret
cmpsb
movsb
mov
xchg
loope
mov
push
mov
scas
push
test
inc
mov
sbb
ss
sbb
cwtl
ja
lods
repnz
into
sbb
cmp
push
outsb
or
sbb
test
dec
repz
lock
stos
maxps
jl
daa
push
xor
insb
sti
in
setnp
lcall
mov
movl
sbb
mov
movsb
test
cmp
push
mov
xor
cmpsb
cld
inc
pop
or
mov
pop
xchg
fmull
jp
mov
call
pop
xchg
add
sbb
inc
in
orb
jmp
lret
pop
gs
pop
inc
mov
lahf
mov
int
mov
retw
xchg
rolb
add
xor
arpl
cli
and
in
jbe
ret
pop
lret
dec
out
rcll
pop
xor
call
jl
xchg
clc
mov
xor
mov
mov
cmp
dec
sahf
mov
push
push
aas
mov
or
inc
fbld
mov
aam
aas
push
shl
in
rcr
in
xchg
push
jp
mov
fwait
cmp
cmp
jb
scas
stos
dec
adc
mov
ret
and
xor
cmp
and
ja
mov
sub
push
fistl
dec
or
push
xchg
and
jbe
shll
mov
inc
gs
sbb
ret
test
cmp
incb
dec
or
cmp
filds
or
test
mov
cmpsb
push
push
dec
std
ret
and
ret
leave
mov
stos
adc
ret
push
enter
and
and
clc
adc
stc
filds
call
jg
ffree
sarl
sbb
in
jo
rcl
adc
jge
sbb
cmp
scas
mov
xor
imull
fistps
xchg
mov
leave
jno
fsubr
cltd
stos
pop
orl
and
cmp
push
cmp
idiv
inc
cmp
scas
insl
in
push
shll
rcrl
scas
xor
mov
ja
mov
rorl
xchg
arpl
add
rcll
pop
sti
mov
push
xorb
push
je
mov
inc
mov
aas
mov
sbb
add
test
dec
fldcw
mov
sti
inc
push
pusha
sbb
iret
cmp
adc
and
mov
jne
xchg
pop
je
mov
movsb
sarl
fisubrl
pusha
push
movsb
loope
ret
stos
dec
or
loop
sub
outsb
lods
mov
les
in
shrb
mov
popa
enter
and
lcall
jb
hlt
pop
movsb
sbb
and
or
test
pop
mov
pusha
sub
stos
jo
adc
ret
or
loop
cld
inc
lcall
sbb
xor
push
mov
nop
adc
adc
adc
in
insb
inc
sti
pop
dec
mov
ja
cmp
sarb
adc
xlat
sbb
push
fs
sub
push
inc
add
pushf
nop
sub
mov
js
popf
push
xchg
inc
dec
dec
or
enter
addr16
gs
scas
std
add
cmp
xor
xor
xchg
sub
pop
clc
xchg
pop
mov
xor
dec
idivl
comiss
mov
cli
inc
out
pop
pop
push
dec
es
add
fwait
inc
push
stos
std
jnp
and
add
sbb
in
stos
adc
cs
push
or
push
scas
add
xor
xlat
mov
and
int
dec
mov
fisubl
pop
sahf
mov
sub
pushf
into
outsb
pop
add
jmp
fwait
mov
cmpsl
push
aad
inc
pop
dec
lds
out
daa
scas
and
mov
imul
jo
dec
xchg
sub
jmp
lods
pop
and
loope
mov
fistps
sub
mov
push
test
lods
cltd
jl
into
mov
and
cmp
sahf
or
push
push
add
lock
adc
jl
mov
cmp
rclb
push
pop
test
jcxz
and
fidivl
jbe
repnz
dec
mov
mov
sub
fisttps
xchg
out
cmc
or
inc
lahf
test
pop
mov
sahf
andl
add
or
sub
mov
nop
aas
cwtd
inc
fwait
repz
and
dec
mov
sub
cmp
xchg
add
sbb
sub
cmp
xchg
call
inc
or
or
lock
das
enter
inc
pop
mov
fstl
out
ds
les
or
arpl
test
xchg
mov
ret
pop
cmpsl
sti
cmc
loopne
jl
adc
push
push
inc
insb
insb
rcll
enter
pop
push
icebp
mov
jnp
sub
pop
mov
arpl
inc
sbb
mov
add
lods
cld
cmp
push
mov
incl
add
sub
lds
fpatan
mov
js
cmp
xchg
ja
sahf
mov
insl
jns
pusha
inc
add
test
pop
test
fwait
call
out
test
loope
sbb
push
or
hlt
xlat
mov
push
pop
pop
hlt
aaa
push
fiaddl
jge
cmp
or
fists
mov
push
cwtl
push
adc
shl
dec
aam
stc
jbe
xor
pop
xchg
pop
xor
arpl
jmp
pop
sub
lock
aad
out
pop
rcl
add
push
add
push
push
in
mov
pop
aam
push
pop
inc
fbstp
lret
jo
and
xor
test
imulb
stc
jmp
gs
js
outsb
mov
fisttpll
sub
movsl
and
ficompl
pop
aad
cmpb
sub
jp
ljmp
dec
xor
mov
das
adc
inc
sarl
jnp
and
out
or
pop
and
ss
mov
cmp
data16
add
mov
add
jge
push
dec
or
loop
lods
or
std
pop
stos
mov
frstor
jne
ja
inc
mov
cmp
pushf
or
push
iret
cs
dec
inc
mulb
mov
into
out
int
cmpsl
jnp
into
cmp
out
ds
or
mov
or
cmp
pop
dec
push
mov
popf
fdivrs
inc
rorl
arpl
xor
or
out
in
loopne
dec
sbb
and
xlat
cmp
push
repz
or
scas
sbb
jmp
pop
mov
push
adc
movsl
pop
lock
fisubs
pushf
add
pop
lock
mov
adc
fidivrl
lods
mov
lahf
rorl
fadds
cltd
and
sbb
call
sbb
sbb
stc
test
inc
outsb
mov
rcll
fsubl
mov
mov
imul
push
ss
shll
outsl
mov
lds
ja
push
ja
pop
out
and
pop
sbb
sti
mov
lods
xchg
or
insb
ljmp
movsl
adc
mov
loopne
test
xor
aad
out
mov
test
inc
aad
notb
mov
cs
imul
jge
std
stc
dec
imul
jmp
sub
dec
bound
pusha
mov
insb
mov
lret
popf
addr16
or
cmpl
mov
outsb
popf
ljmp
push
mov
cld
pop
fsubp
pop
adc
pop
cmc
subl
add
insl
mov
sbb
inc
mov
mov
sub
scas
sbb
push
sub
pop
stos
adc
lock
or
lea
pop
test
xchg
pop
aaa
jmp
pushf
xlat
rclb
cli
jb
pop
scas
les
adc
push
hlt
dec
pushf
js
rorl
iret
fstl
mov
and
push
jnp
rcr
lods
lds
outsl
divl
clc
in
imul
loop
js
push
lods
mov
je
lods
das
outsb
cld
in
and
sub
adc
mov
sbb
mov
out
xchg
test
lock
arpl
popf
inc
lock
daa
jne
and
ret
getsec
xlat
push
aam
push
cmovne
call
gs
dec
out
jl
lahf
ja
dec
sbb
add
jle
adc
xor
mov
xchg
add
inc
das
push
int3
mov
popa
inc
addr16
xor
test
aam
test
inc
mov
clc
out
or
sahf
mov
mov
add
jecxz
inc
mov
pop
nop
push
or
outsl
shlb
or
add
aaa
jo
jge
cmp
mov
adc
cmc
cmpsb
xchg
add
dec
js
daa
cmpsb
cmp
sbb
xor
xor
outsl
xchg
pop
pop
mov
or
sarb
xchg
aaa
adc
dec
pop
sahf
nop
inc
xchg
pop
dec
mov
jb
fisttpl
jo,pt
dec
mov
xor
pop
xor
and
mov
clc
add
movsl
lock
rcrb
jo
adc
int
mov
sub
mov
mov
xchg
dec
jns
xchg
xchg
mov
add
mov
and
dec
mov
cmova
cmp
int
mov
fnstcw
and
dec
mov
pop
dec
fstps
push
and
fyl2x
aad
adc
jecxz
nop
mov
xor
test
sbbl
repz
cltd
mov
xor
lahf
mov
sbb
pushf
dec
jno
sarl
int3
mov
mov
test
fists
dec
daa
jge
xchg
aam
inc
or
insl
mov
mov
out
imul
xchg
je
jnp
pop
ret
mov
mov
es
popf
jnp
and
pop
ja
insb
pop
rorl
push
fisubrs
sti
dec
dec
ja
stos
mov
aas
repnz
iret
arpl
js
std
fcmovu
out
cmp
out
mov
pop
mov
lods
add
outsl
lods
adc
icebp
loopne
jae
lcall
cmc
or
stos
test
mov
mov
and
dec
cmp
sbbb
mov
iret
data16
cwtl
adc
xor
mov
mov
jecxz
sub
mov
sarb
fbstp
add
loop
jno
arpl
aam
sti
sahf
or
fnstcw
mov
dec
cmp
sub
stos
jp
ja
cmp
movsb
xor
jne
add
mov
test
jl
aam
cltd
lret
enter
pop
mov
xchg
ja
and
ficoms
lock
xchg
cwtl
add
push
pop
lahf
mov
repz
ret
ljmp
mov
stos
add
push
inc
leave
xchg
orl
push
xor
mov
jle
adc
push
inc
ret
maxps
pop
push
repz
push
mov
insl
mov
mov
or
inc
sbb
imul
popf
lahf
ret
push
and
add
push
cltd
or
cmp
dec
ja
pusha
xchg
dec
sbb
dec
test
push
enter
outsl
xchg
flds
sub
test
loopne
xchg
mov
jns
sbb
or
inc
fisttpll
inc
out
dec
xor
dec
push
decb
mov
xchg
and
icebp
nop
out
push
lcall
add
fs
jg
jae
dec
xchg
inc
xor
push
dec
cmp
sbb
and
inc
xorl
sbb
mov
js
push
loopw
sbb
push
jle
das
jae
fcoml
xor
pop
data16
icebp
dec
adc
jle
xor
frstor
jnp
mov
shl
ss
push
jbe
lea
jle
pop
mov
out
inc
stc
jae
ret
add
or
pop
mov
mov
xchg
fbstp
mov
out
ror
cmp
out
daa
clc
test
and
inc
in
flds
popf
sbb
into
mov
es
outsl
push
inc
xor
push
jae
mov
fsubrs
inc
popf
mov
jecxz
fs
xchg
in
movsl
fucomi
arpl
and
cmp
sub
mov
mov
xchg
insl
pop
nop
push
fsubrl
or
mov
push
jecxz
mov
mov
sub
insl
sti
mov
pop
dec
xchg
add
xchg
dec
fnsave
mov
pushf
jb
dec
adc
sub
in
cmpsl
aad
xchg
in
mov
loopne
jle
jae
outsl
je
or
hlt
pop
mov
js
std
cmp
mov
imulb
test
leave
and
mull
jns
ret
inc
loop
inc
je
push
jo
cmpsb
aad
xchg
iret
fsub
gs
xor
mov
xchg
int3
test
pop
outsb
inc
mov
lods
mov
out
xor
jne
out
daa
pop
ja
pop
xlat
jne
cs
push
lret
xchg
arpl
push
loop
push
adc
mov
inc
stos
les
mov
push
out
pop
les
rcl
mov
pushf
out
mov
es
pop
adc
dec
daa
in
xchg
out
jbe
pop
sbb
jge
push
push
mov
lret
xorb
or
daa
cmp
fists
push
pop
fcom
push
mov
pop
fmull
call
jp
mov
fwait
push
inc
movsb
shl
add
mov
insb
addr16
shl
inc
pop
in
sbb
pmulhw
sub
mov
and
sar
add
outsb
jecxz
dec
pop
icebp
gs
xor
jle
jae
dec
xchg
insb
jb
lods
call
pushf
cs
mov
ret
clc
pop
sbb
jae
cmp
inc
add
fsubrs
arpl
cmp
jmp
mov
mov
xchg
cmp
call
xor
test
pop
push
xchg
push
cmpl
cmpsl
shrl
icebp
adc
sub
inc
inc
std
push
pop
xor
and
pop
les
stos
jb
cmpsb
jmp
mov
push
sub
mov
dec
ss
aaa
cwtl
xchg
sbb
mov
scas
test
mov
cmp
andl
dec
dec
sbb
inc
lret
adc
lock
arpl
sbb
dec
mov
xchg
ljmp
push
dec
mov
aam
push
scas
jnp
jmp
ret
or
cmp
push
fsubrl
into
lret
xlat
fmull
out
pop
jg
dec
rclb
inc
out
pop
mov
mov
or
sub
push
fs
stc
jmp
fldenv
lret
jle
inc
and
int3
push
push
add
sub
cmp
mov
out
ret
push
imul
in
mov
call
cmpsb
and
sbb
pop
das
in
int3
popf
lock
std
mov
jle
lret
xchg
inc
popa
ja
inc
mov
pop
jnp
sub
jge
lcall
mov
xor
mov
fwait
mov
clc
stos
in
cs
mov
or
fidivl
push
mov
push
cmp
push
push
pop
adc
cld
push
or
test
xchg
push
add
mov
dec
aas
or
fstl
imull
pop
lcall
popf
loope
jno
imul
xchg
mov
icebp
add
in
mov
xchg
fs
frstor
adc
mov
cltd
cmpsb
out
mov
inc
sbb
pop
ret
mov
pop
insb
cmp
icebp
and
xor
ret
popa
xor
out
popa
and
repnz
xor
add
mov
and
fwait
lds
mov
xchg
sub
and
sbb
das
xchg
adc
or
cmpsl
jne
jns
dec
into
cli
jne
mov
xor
push
push
and
xor
out
xor
mov
sbb
shr
add
dec
mov
enter
or
fcmovnbe
repz
leave
push
adc
cmpsl
or
xor
dec
test
arpl
cs
lret
inc
cwtl
clc
ds
into
cmpsl
pushf
mov
leave
xchg
mov
rcll
idivl
das
jnp
int3
cmp
mov
fcomip
push
mov
nop
ljmp
lds
jl
pop
sbb
js
xchg
sub
scas
mov
push
js
inc
data16
adc
xor
mov
jmp
cmc
dec
mov
push
or
bound
ja
mov
jo
inc
stc
popf
xor
outsl
mov
dec
data16
inc
repz
decb
sub
pop
les
sarl
daa
sub
aam
js
push
mov
adc
adc
cld
cmpsl
in
js
pop
sahf
ficoms
sti
xor
ss
fwait
cmp
and
repz
adc
ficoml
ror
fdivrs
adc
pop
shll
dec
push
int3
xchg
aaa
inc
ja
fidivrs
idivl
imul
and
fistps
sahf
and
cmp
hlt
rorl
and
imul
push
mov
push
data16
mov
push
fsts
enter
sbb
xchg
lahf
rcl
push
mov
mov
hlt
cmp
push
insl
shrl
and
xchg
push
add
xor
dec
xchg
push
lods
adc
addr16
lock
jl
lret
imul
fildl
push
out
dec
gs
mov
mov
inc
mov
or
jmp
jns
fwait
jns
dec
xorl
sti
lret
lock
idivb
iret
sub
lods
xorl
mov
in
aaa
dec
call
ljmp
scas
pop
push
fldcw
pushf
mov
push
mov
lea
filds
mov
cld
jle
sahf
aas
sub
sub
sub
test
cli
mov
add
pop
xchg
lcall
pushf
xor
insb
sbb
mov
sbb
test
jne
adc
cld
mov
lds
pop
ffreep
dec
add
and
out
test
and
pop
fnstcw
xchg
std
push
out
mov
rclb
jno
jmp
int
shll
cli
mov
sbb
sbb
das
mov
dec
cltd
jp
sbb
xor
adc
pop
inc
out
fsubs
cmpsl
stc
adc
stos
mov
jno
cs
ss
fisubl
jl
jns
mov
jle
and
sub
jnp
adc
mov
jne
nop
xor
dec
xchg
jns
in
nop
cmc
sub
push
loopne
popf
sbb
shrb
pop
add
jb
aad
movsl
enter
ds
shrb
shrb
jno
sub
pushf
lcall
les
xchg
or
and
movl
les
aaa
daa
mov
cwtl
cmp
rclb
push
movsl
nop
or
xor
jp
xor
mov
imul
repz
xor
or
push
dec
cltd
pusha
ffreep
jle
and
in
pop
pop
hlt
push
sub
xchg
and
mov
mov
repnz
lock
pop
clc
xchg
inc
sub
movsl
std
ljmp
push
fdivr
or
sbbl
leave
cmp
mov
insl
adc
insl
data16
sub
sar
out
xchg
jle
pop
lahf
jle
daa
ljmp
dec
mov
inc
outsb
dec
jecxz
push
sub
xchg
mov
xchg
lock
pop
push
and
imul
movsb
cmp
test
dec
lret
inc
xchg
xor
xchg
xchg
and
pop
inc
pop
insl
mov
jb
adc
push
mov
out
mov
mov
lahf
ja
pop
inc
loop
push
aas
sub
cltd
mov
jg
and
push
movsl
pop
cmpsb
scas
push
mov
data16
add
mov
dec
cld
test
mov
into
pop
shr
rorb
daa
jp
push
add
inc
sub
xchg
outsl
rcll
int
out
mov
or
push
dec
cmp
repz
mov
nop
jnp
push
push
mov
jmp
sub
mov
sti
flds
jl
pop
mov
aad
jnp
mov
in
pop
imul
jne
add
cmpsl
ds
imul
cmc
adc
popf
call
xchg
jae
shrb
push
xchg
mov
xchg
lcall
pop
pop
xor
les
aad
inc
add
fiaddl
ds
or
pop
sbb
cmp
mov
pandn
movsl
int3
insl
sbb
mov
sub
pop
and
push
or
lds
fwait
dec
mov
aaa
stos
xlat
insl
mov
cmpl
fsubp
mov
movsl
test
mov
adc
lret
add
cmp
xor
adc
ljmp
stos
mov
and
adc
cld
mov
ljmp
push
into
pop
push
push
fcoms
aas
mov
xor
add
jb
dec
fistpll
cmpsb
and
add
orl
jnp
mov
xchg
jne
outsb
jg
int
fildl
jb
mov
and
sub
pop
shl
in
repz
sahf
insl
shrl
aad
fists
sub
int3
push
jmp
idivl
daa
cs
ja
mov
dec
scas
xchg
inc
mov
js
nop
insl
xchg
jae
push
inc
push
rolb
mov
repz
xor
repnz
andb
insl
mov
outsl
mov
aam
int
cmp
stos
movl
sbb
xchg
call
out
fistps
sub
insl
ja
testl
sahf
test
and
sub
push
shrb
out
lcall
nop
fwait
test
lods
sbb
das
mov
push
fwait
dec
jb
pop
test
adc
push
adc
subl
xchg
testl
movsb
loope
push
pop
cli
cmpl
and
imul
out
dec
fs
cmpsb
cmp
mov
mov
or
inc
cmp
rolb
fs
enter
adc
imul
orb
push
push
mov
jnp
pop
in
jge
xor
sbb
push
mov
or
adc
pop
xlat
xchg
into
jnp
in
cmpsb
icebp
mov
xor
mov
sarb
std
pop
ss
or
outsl
pop
pop
fsubrp
scas
mov
sbb
mov
in
or
arpl
or
jnp
xor
jae
loopne
jno
popa
ds
adcl
icebp
inc
pop
scas
repnz
ss
clc
fisttpl
dec
sbb
aam
and
mov
lahf
xchg
aad
scas
hlt
pop
mov
add
inc
stos
mov
scas
jns
out
mov
lcall
shl
push
adc
xchg
push
xor
js
stos
loop
xadd
add
ds
les
mov
xchg
dec
jecxz
mov
in
das
or
sub
mov
arpl
mov
outsl
clc
xor
lods
pop
mov
popl
fisubl
xchg
mov
push
loopne
adc
jl
mov
mov
jne
mov
add
push
jno
psubusw
bound
stos
sbb
mov
jae
jns
flds
mov
mov
loope
int
cmc
ret
sbb
jne
push
popf
pop
and
inc
loope
add
push
push
jns
ja
cmp
insb
jno
inc
sbb
jne
aaa
and
xor
adc
adc
mov
dec
pushf
jne
mov
fld
fiadds
adc
add
inc
cmc
pop
iret
jo
movl
enter
sbb
dec
orb
push
sub
add
mov
jns
stc
jge
and
xchg
popf
inc
xor
daa
dec
test
adc
popa
cltd
mov
addr16
into
sar
insl
jns
fimull
call
mov
jp
rcl
fstl
ljmp
imul
hlt
sbb
sbb
jno
sub
mov
dec
loopne
xlat
xchg
inc
jp
adc
cwtl
pop
and
jl
and
fadds
or
cli
mov
clc
xchg
or
sti
jmp
mov
inc
leave
enter
and
mov
adc
shll
icebp
loop
cld
stc
mov
std
xor
out
mov
inc
push
push
icebp
pusha
push
iret
bound
xchg
lds
xchg
lods
and
or
push
iret
xchg
push
cltd
cmp
dec
gs
dec
jns
not
mov
cmp
mov
xor
push
pop
pusha
add
dec
mov
dec
jmp
lods
sar
sbb
cwtl
sub
scas
test
sarl
and
add
dec
imul
pop
pop
dec
lahf
stos
fwait
test
xchg
insl
nop
pop
loope
orb
xchg
leave
jmp
mov
dec
aam
xlat
into
sbb
pop
loopne
aam
mov
int3
sti
pop
mov
shlb
out
outsl
sbb
jp
cmp
fldenv
lcall
push
push
stc
or
cmp
ljmp
dec
pop
outsl
mov
cmc
lods
jo
mov
lcall
sub
arpl
shl
fstpt
push
fiadds
stos
pop
mov
xchg
popf
ss
xor
filds
repnz
cmpsb
test
loop
repnz
mov
popa
fisubrl
xlat
out
out
mov
jae
dec
push
xor
mov
ficompl
sbb
sbb
in
xor
shlb
or
inc
push
and
push
mov
mov
inc
inc
sbb
inc
cmp
mov
sbb
and
cli
inc
xchg
jp
push
inc
push
push
mov
cwtl
bound
out
or
nop
add
and
jp
lea
repz
mov
xchg
xchg
xchg
adc
add
inc
decb
mov
or
push
rcll
mov
clc
dec
fstl
dec
or
and
pop
push
xor
popf
outsb
lock
sbb
stos
mov
jb
int3
push
js
cmp
dec
mov
enter
jmp
mov
int3
addl
jmp
mov
xor
jp
sub
mov
xchg
add
xor
push
movsb
jmp
mov
lock
std
popa
icebp
add
jbe
cwtl
push
popa
fdivp
rcll
movsb
cmp
int3
addr16
push
stos
pop
scas
fstpt
jno
xor
add
movl
dec
pop
sub
add
and
repz
push
popa
inc
outsb
push
jne
fdivrs
rcll
std
jmp
aam
fiaddl
loope
pusha
pop
jmp
mov
cli
inc
stos
xchg
dec
dec
outsb
sbbl
pop
rclb
lret
loop
arpl
pop
shlb
mov
mov
xchg
push
mov
sbb
cli
xchg
mov
lods
sbb
jo
fisubl
dec
fwait
mov
cmp
sti
pop
roll
aad
or
pop
mov
ja
inc
sub
mov
pop
gs
dec
cmp
xchg
imul
adc
cmpsb
dec
test
scas
push
lock
cmc
and
mov
arpl
cmp
cmp
push
ror
pop
ljmp
sub
std
jecxz
inc
jp
rcl
xchg
fisubrl
jns
mov
sbbl
repnz
xchg
add
mov
pop
scas
mov
push
mov
xchg
push
hlt
mov
popf
add
out
les
pop
repnz
movaps
jge
clc
and
pop
lds
xchg
ret
aaa
jmp
rcrb
test
dec
mov
add
repnz
xor
arpl
out
inc
test
pusha
mov
sbb
xlat
add
adc
pop
punpckhbw
and
push
lods
scas
in
jne
dec
jnp
mov
jns
sub
add
fldt
xor
sub
cmc
roll
xlat
and
test
fmuls
push
inc
sbb
dec
nop
movsl
push
or
jmp
adc
stos
je
mov
ja
movsb
push
jmp
pop
sbb
lahf
add
idiv
adc
and
sbb
cld
stos
rcll
or
xchg
cmp
sub
aas
gs
or
sub
imul
test
shrb
imul
cs
xor
pushf
fcomps
mov
lahf
imulb
jo
xchg
push
lods
and
cs
and
scas
dec
add
nop
cwtl
xor
adc
sbb
insb
outsb
push
leave
fstpt
hlt
mov
jns
ficomps
jae
lods
gs
cwtl
xchg
or
es
sbb
cmp
cmp
outsl
fmull
mov
sub
cwtl
sbb
add
in
mov
cld
push
fs
or
mov
dec
out
and
mov
aam
sti
xor
inc
fs
pop
mov
repz
test
fisubrs
adc
push
dec
jmp
mov
stos
repz
push
les
inc
testb
daa
dec
in
icebp
inc
mov
jmp
cmc
push
shrl
cltd
jns
repnz
inc
sbb
lret
cli
add
test
aad
push
pop
xchg
pop
pop
shll
fistpll
pop
jl
xor
push
bound
inc
cli
pop
bound
sahf
fsts
xlat
out
jne
jl
fndisi(8087
xchg
sub
add
xchg
or
sub
inc
xchg
sub
adc
ret
or
dec
in
imulb
sbb
push
ficoms
pusha
call
mov
test
cmc
adc
push
je
arpl
leave
jb
aad
icebp
mov
adcb
mov
sub
fwait
xchg
mov
aaa
or
pop
pop
mov
mov
inc
repnz
and
push
popa
xchg
and
jecxz
scas
int3
repz
leave
dec
sbb
jle
cmp
loope
popf
stos
xchg
inc
dec
lahf
fwait
jmp
cmp
shlb
jecxz
sub
push
fisubrs
inc
test
jb
loop
pop
ret
in
fcoms
pusha
push
jg
mov
loop
aam
fwait
jno
sub
mov
fnstsw
pusha
nop
mov
add
out
scas
xor
daa
xchg
fldenv
mov
fs
int3
cmc
daa
mov
xrelease
add
pop
shr
loope
pop
jbe
std
aaa
pushf
fcmovbe
mov
call
adc
push
cmpsl
inc
sub
push
dec
mov
std
mov
fbld
sub
xor
stc
xchg
jmp
push
ja
push
mov
add
pop
sti
psubsw
or
iret
dec
nop
dec
loopne
jle
xor
lret
test
pop
les
xlat
shlb
pop
scas
sub
bound
rcrb
sub
pop
out
cmpsl
enter
and
cmp
inc
movsl
loop
add
data16
inc
add
test
sbb
inc
imul
sbb
sbb
pop
mov
mov
mov
rorb
roll
cmp
cmp
add
pop
int
mov
push
ds
pop
lea
push
sub
mov
and
dec
cmp
stos
sahf
movzwl
lds
sbb
or
inc
movsb
cwtl
aas
loope
jmp
mov
repz
sub
lock
repnz
xchg
sub
out
cmp
jno
pushf
dec
and
int
push
xchg
inc
cmp
pop
gs
jae
or
fistl
outsb
roll
push
rcrl
pop
lret
xchg
lods
popaw
or
adc
dec
pop
xchg
mov
xchg
jmp
jle
shrb
test
cmp
lret
cmp
sahf
fwait
das
push
sub
or
xchg
cmpsl
ds
sub
jmp
punpckhdq
into
inc
xchg
rorb
in
in
jl
jbe
xchg
cmp
sahf
inc
mov
mov
aas
jno
in
out
fsts
rorb
jg
xorl
movsb
jmp
mov
sub
jle
pop
add
mov
mov
fs
push
imul
sti
loope
shll
cmp
mov
add
mov
std
mov
shll
lock
add
jns
mov
xor
jmp
and
dec
movsb
sub
fiadds
mov
stos
mov
in
ret
or
jae
adc
mov
int3
ljmp
cmp
add
aas
cs
mov
rorl
stc
data16
xchg
cli
mov
movsl
mov
xor
outsb
es
cs
mov
jo,pn
add
cmp
jmp
pop
aaa
cmp
jl
test
lret
leave
fcos
dec
inc
cmp
hlt
sar
cli
pop
mov
jno
std
sub
dec
enter
das
inc
add
or
sti
pop
sahf
fidivs
fcmovnb
daa
hlt
xlat
js
ret
mov
out
aam
adc
push
mov
aas
jae
cmp
or
ret
jle
sbb
push
stos
lcall
roll
and
mov
stos
xchg
xchg
aas
add
adc
pushf
inc
pop
rcll
sub
data16
clc
push
out
mov
movsb
dec
sbb
pop
out
icebp
lds
cmp
pop
rcl
test
fimull
sub
les
mov
push
ljmp
popf
cmpsb
mov
fisubrl
in
daa
es
js
fstpl
jge
mov
xor
or
cmp
or
sub
push
xor
cwtl
adc
push
lods
lods
add
jnp
sbb
jbe
jne
popf
xor
sub
popf
je
enter
adc
arpl
pop
dec
and
jg
popa
jbe
and
adc
ja
popa
jmp
mov
mov
jo
gs
shll
sub
and
lds
or
popw
fdivl
add
out
hlt
mov
xor
dec
cmp
repz
orl
mov
ljmp
pop
icebp
fisttpll
test
push
add
xchg
push
add
jp
push
repnz
inc
movsl
out
mov
xchg
pop
es
or
stc
loop
mov
movsb
loop
push
loop
pop
out
inc
sub
jmp
jg
test
inc
subb
rcrl
ljmp
testb
mov
xor
pop
aam
pushf
jl
in
sbb
xchg
push
jno
sbb
mov
mov
rcrb
outsb
out
sub
xchg
xor
ds
cmpxchg
ret
xchg
ret
inc
mov
jmp
loopne
push
xchg
lea
push
aam
test
push
adc
outsl
jg
fbld
repz
decl
mov
jg
out
test
push
das
xor
pushf
fmulp
dec
add
fimuls
fwait
xor
xlat
sti
sbb
adc
loopne
aam
or
rep
inc
mov
mov
je
mov
outsl
push
outsl
sbb
and
add
in
pop
push
or
mov
shl
jge
aad
jecxz
nop
bnd
mov
arpl
jns
xor
daa
pushf
cltd
push
sub
test
fmuls
cmpsb
stc
int
ss
in
cmp
xchg
mov
and
add
jge
xchg
aaa
sarb
mov
mov
xorl
fisubrl
mov
in
scas
test
movsb
xchg
enter
ret
outsl
inc
or
pusha
jnp
cmp
jnp
mov
stc
pop
fwait
and
push
push
sarl
cltd
or
lret
ss
outsl
cmp
das
pop
mov
jg
add
add
pop
jle
cli
in
inc
loop
das
fnsave
iret
orb
cwtl
sub
jge
xchg
rcl
lret
xor
out
aas
inc
aas
xor
jb
test
and
or
data16
mov
mov
leave
js
inc
dec
clc
gs
mov
adc
xchg
mov
jnp
sub
and
xor
mov
jne
inc
jmp
dec
adc
test
imul
lods
xchg
call
push
mov
pop
int3
xchg
jmp
in
ja
test
sbb
arpl
push
inc
pop
cmp
jg
int
cmc
jbe
or
test
push
mov
in
cmpsb
xchg
dec
ljmp
pushf
test
out
jecxz
jmp
sbb
lret
dec
cmp
movsl
jmp
cmp
movsl
xchg
je
addr16
addr16
pusha
sbb
clc
jge
or
jae
pop
push
pop
mov
lret
cmpsb
fdivl
cli
pushf
es
fsubs
sarb
cmp
les
push
divl
out
xchg
jo
xchg
outsl
xor
outsl
jl
or
test
or
stc
ja
f2xm1
pop
mov
add
push
mov
daa
pop
divl
aad
fisubs
popa
adc
shll
jge
cli
xor
push
inc
dec
fwait
aas
aas
mov
adcb
mov
jg
adc
ret
loope
scas
adc
dec
inc
pop
std
scas
mov
jno
ret
cli
inc
xchg
test
pop
mov
mov
js
rcrl
jns
pushfw
jae
push
daa
or
sub
insb
jp
jne
rorl
stos
fiadds
mov
stc
call
xchg
insb
aaa
ret
mov
push
aam
xor
repnz
int3
sti
pop
outsb
sbb
notl
xchg
js
int3
movsl
xsha256
cmpsb
adc
pop
into
rcrb
inc
jne
mov
or
xchg
cmp
popa
dec
push
lods
mov
scas
mov
fucom
add
adc
xchg
pusha
ds
jns
inc
lock
imul
cmc
test
cmp
jb
rcll
dec
lahf
mov
ja
dec
jae
xchg
rcll
addr16
sbb
rorl
sbb
addr16
je
mov
gs
dec
aam
jnp
add
pop
mov
scas
or
lds
cmp
scas
ss
lods
adc
popf
js
sbb
arpl
movsl
lock
add
inc
inc
repz
push
and
jl
push
arpl
sub
lea
mov
mov
inc
cmp
neg
xchg
and
enter
js
je
xchg
jecxz
lahf
jg
jg
inc
dec
sub
nop
inc
jecxz
and
pushf
icebp
and
dec
or
sbb
imul
mov
or
aaa
in
and
push
xchg
xchg
aad
pop
and
sub
test
js
cmpsb
or
lods
mov
rcll
stos
xchg
jle
push
jmp
les
mov
cs
and
loop
aas
pusha
out
sub
popw
sbb
sbb
int3
jg
int
mov
sub
jb
fcompl
ret
pop
js
mov
nop
ffreep
inc
sub
inc
mov
repnz
mov
inc
mov
add
sub
mov
pop
rolb
sub
insb
das
clc
xchg
int
call
cltd
dec
bound
repz
mov
dec
cmpsb
sbb
sub
mov
sti
add
adc
push
and
jnp
rolb
cld
iret
sbbb
or
push
push
and
cmc
or
sub
sub
cmp
in
sbb
pop
outsl
mov
clc
in
call
fists
push
adc
jmp
loope
sbb
jbe
bound
cmp
mov
ja
cmp
inc
jmp
out
add
sbb
xor
jle
cltd
cmpl
fwait
mov
insb
and
or
add
cmp
mov
push
mov
aad
fstpt
or
stos
jbe
pop
sub
xchg
adc
dec
and
addr16
call
xchg
push
cmp
in
sbb
std
shll
pop
iret
enter
cmp
pop
mov
mov
xlat
scas
addr16
fs
cmp
or
sti
push
push
loop
lret
mov
cmp
mov
movsb
lods
inc
add
dec
mov
bnd
xor
int3
andb
std
and
adc
cmp
pop
add
mov
push
test
aas
sub
faddl
mov
sbb
xor
or
adcb
es
lods
adc
fdivrl
push
cmpsb
mov
add
inc
out
add
sbb
addb
cltd
stc
push
mov
mov
mov
in
cmpsl
pusha
fmull
mov
ljmp
inc
cmc
ja
adc
loope
jecxz
repnz
add
das
fisubs
nop
mov
jae
and
mov
test
and
outsb
ror
mov
out
jnp
addr16
divb
xchg
movsl
and
push
mov
mov
mov
js
add
clc
insb
pop
jns
push
xchg
in
aam
cmp
xchg
add
jp
movsl
push
sbb
bound
pop
imul
xorl
rorb
jl
aad
call
sahf
jno
push
jmp
push
jge
lahf
xchg
jmp
and
sub
sbb
rcl
loope
dec
push
add
cmp
sbbb
lds
dec
or
aas
insb
pop
jae
mov
jmp
pop
out
mov
imul
xor
outsl
ds
dec
or
jnp
and
push
js
mov
cld
jb
xchg
cli
sbb
add
mov
cs
das
cmc
mov
int3
xor
or
jae
scas
loop
sbb
cmp
mov
sub
repnz
sub
xchg
xlat
in
cltd
leave
adc
movl
rcrl
fistpl
inc
dec
xor
add
pop
xor
imul
push
xor
add
aam
fsubp
dec
jns
pop
out
insl
push
add
pop
push
sbb
pop
xor
dec
iret
or
add
mov
aaa
lret
add
es
jns
pushf
in
push
adc
out
mov
std
lcall
inc
icebp
add
mov
mov
cs
mov
pop
into
out
lods
xor
or
cmp
gs
lahf
adc
mov
popa
scas
inc
jns
push
into
xchg
repz
idivb
sbb
imull
shl
in
inc
xchg
pop
pop
jp
xchg
cmpsl
fbstp
ljmp
push
mov
lcall
add
mov
pop
in
ret
push
rcl
pop
adc
sbb
add
mov
sub
pop
mov
mov
aaa
ljmp
shlb
aaa
in
pushf
and
rclb
mov
mov
adc
jge
jle
in
or
mov
popf
out
mov
add
enter
aaa
xchg
jecxz
jge
cmpsb
bound
lock
mov
jecxz
dec
loopne
in
lea
flds
add
shrl
or
addb
js
mov
aam
adcl
and
lds
scas
es
out
push
mov
pop
fmuls
lret
sub
push
in
lds
mov
pop
cmpsl
in
iret
mov
test
add
jns
or
fdivs
imul
dec
pop
mov
push
cmpsb
scas
mov
cmp
xchg
push
jns
orb
sbb
loop
into
jge
jb
inc
xor
scas
int
push
call
cmp
sbb
cmpsl
lret
push
das
mov
loop
xchg
jbe
outsb
outsl
mov
clc
pop
and
push
mov
mov
push
notl
test
lret
jns
orl
shrb
aaa
sti
pop
mov
and
cltd
fmul
pop
pop
roll
jmp
stos
lea
orl
xor
adc
sub
pop
xorb
lret
mov
and
pop
jle
in
sub
insl
jo
mov
adc
pop
mov
clc
mov
popf
add
insb
mov
pop
adc
pop
jb
adc
fisubrl
aas
imul
pop
pop
inc
sbb
fiadds
and
insl
ljmp
or
fwait
jle
add
lahf
pop
lcall
xchg
cmp
cs
imul
in
lods
dec
mov
popa
dec
mov
fstpt
test
test
adc
xchg
jnp
mov
jno
cmp
test
shrb
stc
test
pop
jl
cmp
in
data16
pop
mov
jbe
mov
aas
mov
and
pushl
jp
and
aas
lret
xchg
dec
sbb
mov
mov
cs
and
mov
insl
sub
push
dec
jne
dec
rcll
sub
int
xor
jg
push
xor
xchg
dec
pop
add
adc
ret
mov
scas
jae
cld
jns
add
inc
push
push
rorl
in
cmp
sub
fistps
xchg
dec
outsl
sbb
ficoms
pop
jl
mov
out
dec
add
test
das
fbld
xchg
jmp
adc
inc
pop
movsl
push
out
les
fwait
or
mov
mov
push
cmp
sbb
push
add
addl
pushf
mov
loope
cmp
pusha
and
cwtl
std
jnp
stc
rcrl
pop
in
loopne
pop
sbb
or
jbe
shlb
iret
adc
fsubl
pop
lret
pushf
prefetch
xchg
addr16
push
cltd
loopne
cmp
rcl
mov
fisttps
imul
mov
cmovnp
push
loope
pop
arpl
dec
ret
dec
leave
in
sbb
cli
mov
sbb
sarb
push
dec
mov
sub
dec
and
cmp
adc
mov
cmp
pminub
mov
sbb
sbb
das
ret
xchg
inc
das
daa
mov
dec
cmc
push
push
ljmp
pusha
mov
shrb
xchg
ja
jb
inc
imul
pop
sbb
mov
jle
imul
mov
ret
adc
jnp
ret
enter
push
inc
cmc
cs
and
sbb
movsb
lods
andl
les
test
jb
adc
repnz
imul
cs
std
jns
addb
adc
adc
and
call
lods
rcr
dec
pop
jge
xchg
dec
movsb
or
pushf
arpl
add
xchg
push
push
fcoml
rolb
lock
cwtl
mov
cmp
test
imul
xchg
jl
lcall
cmc
push
jle
aad
faddp
out
dec
mov
lods
mov
loope
push
push
mov
inc
popl
rcrl
sarl
pop
xchg
or
or
and
imul
inc
bound
out
test
test
jmp
ljmp
adc
aam
sbb
stos
pop
ds
imul
mov
push
fisubs
and
inc
cmp
or
push
scas
add
std
test
mov
jle
in
icebp
dec
xlat
enter
mov
orb
lcall
andb
movsb
div
sbb
movsl
ss
mov
or
jmp
mov
enter
test
dec
xor
cmp
shlb
cmpsb
test
dec
sub
loope
mov
outsb
in
jg
shll
push
and
popf
dec
addr16
mov
test
push
test
sbb
adc
add
mov
les
add
stos
jno
ret
in
fisttpll
mov
push
insb
add
xor
mov
cmp
shl
cmc
push
cmp
jo
cmc
pop
stos
xchg
cmpsl
push
cmp
repz
test
xchg
dec
ds
stc
and
dec
in
push
mov
dec
push
fldenv
out
adc
cmp
pop
sbb
shrb
push
xor
sub
jmp
ds
aad
sbb
pop
lret
sbb
mov
ret
sbb
fisubs
adc
inc
lahf
push
daa
imul
mov
daa
mov
orb
std
stos
jmp
lds
mov
cmpsb
mov
aaa
cmpsb
into
dec
movsl
xchg
and
enter
mov
mov
inc
xor
insb
xor
pop
sub
inc
lods
ficoml
jb
stos
jg
push
pop
out
or
xchg
pop
sbb
call
ljmp
fwait
inc
pop
arpl
push
sbbb
push
aaa
mov
adc
clc
push
scas
ss
xchg
adcl
fsub
es
mov
mov
or
cmc
sarl
add
xchg
mov
bound
jnp
cs
fsubl
iret
fistpl
lock
rorb
aaa
add
std
mov
cli
loop
orl
pushf
cmp
add
das
push
dec
shll
leave
arpl
lds
jb
or
daa
or
dec
pop
sub
push
or
and
jge
xor
mov
hlt
cwtl
stc
pop
cli
es
adc
leave
adcl
and
outsb
es
dec
ret
pop
mov
mov
or
push
cmp
out
jnp
xchg
test
test
out
dec
lcall
andb
sub
pop
testb
xchg
jno
or
cmpsl
mov
xchg
lods
fcoms
mov
ret
xchg
rcr
dec
push
push
mov
aaa
mov
mov
and
cmpb
inc
mov
jmp
mov
sub
out
repz
mov
in
push
xor
out
fcomp
lcall
inc
cmp
scas
ret
add
mov
sbb
mov
xchg
add
mov
in
cmp
mov
shl
or
fadd
jne
incb
enter
subb
push
add
ret
pop
addr16
jmp
rcrl
adc
inc
or
mov
mov
dec
jo
bound
add
cmp
mov
pop
xchg
push
xor
imulb
shlb
ss
jbe
je
push
das
mov
add
adcb
mul
call
sub
adc
inc
cmp
outsb
push
jg
stos
sahf
ss
test
sub
jl
data16
mov
outsl
imul
add
add
push
ret
js
sarl
push
test
mov
jge
inc
dec
push
inc
inc
loope
imul
dec
fimull
sbbl
incl
ret
mov
adc
aaa
cli
inc
xchg
xor
addr16
aaa
aas
mov
loope
cli
jmp
sbb
leave
inc
repz
outsb
push
sbb
aad
lret
cld
xor
pop
sbb
xlat
sbb
out
popa
out
fsubl
or
out
or
or
pop
out
lcall
and
dec
sub
or
and
aas
in
es
lcall
gs
xor
mov
arpl
imul
sub
fcomps
fadd
aaa
mov
mov
and
cmp
popf
cmp
mov
sub
cmp
xor
adc
test
ret
iret
sbbl
es
xchg
xchg
push
or
sti
dec
pop
out
lret
dec
jge
imul
imul
std
pop
pop
loope
rcr
lcall
push
ljmp
cmp
leave
xor
pop
cmp
lea
shl
inc
arpl
nop
ret
lods
xchg
sub
inc
in
gs
fwait
gs
loop
loop
adc
cli
loope
mov
mov
into
cwtl
sub
test
stos
ja
sub
cld
xor
cltd
cmp
shll
push
test
xor
push
insl
push
add
cld
push
sbb
xchg
das
add
dec
outsb
push
adc
call
mov
xchg
leave
sbbl
out
ja
aas
mov
cmp
out
xor
xchg
sbb
addl
lea
rcrl
add
add
scas
jae
les
adc
mov
lret
adc
fldenv
loope
or
dec
sbb
lods
cmpsl
push
mov
sbb
ja
mov
idiv
out
scas
std
ret
scas
shr
pop
mov
gs
xchg
lds
push
orl
sub
add
mov
push
iret
mov
or
or
std
loope
aaa
ljmp
pop
mov
sarb
mov
sub
jnp
sub
xchg
pop
cmp
mov
in
cmp
pop
dec
mov
je
pop
xlat
adc
xor
hlt
insb
pushf
lret
inc
jmp
jo
mov
fstpt
push
push
xor
push
fdivrs
inc
fsubs
sub
jns
mov
dec
adc
fisttpl
xor
and
mov
xor
jnp
jp
idivb
rclb
push
fldl
mov
fists
mov
out
inc
out
cltd
xchg
pop
ds
bound
dec
and
push
fstpl
pushf
xor
mov
in
fsubr
lods
mov
inc
pop
mov
jp
mov
test
mov
sbbb
dec
lods
and
int3
push
jno
sub
push
int3
adc
ds
xchg
popf
lret
jecxz
adc
fs
inc
xlat
inc
daa
fs
shr
outsl
mov
ja
mov
rclb
int3
xor
xor
push
mov
mov
test
nop
int
push
adc
adc
nop
adcl
push
add
rol
sti
shrb
sub
insb
jb
mov
or
xorb
leave
in
and
enter
lret
jb
push
mov
clc
ret
push
pop
push
mov
rclb
push
int3
and
or
in
pop
sbb
and
dec
or
mov
iret
cli
insl
mov
mov
sbb
inc
cltd
sub
mov
pop
mov
xorl
cmp
subb
inc
xchg
xchg
loope
shl
pop
loop
fidivrl
or
xor
pop
mov
add
pusha
ja
mov
add
push
les
pusha
fbld
xchg
jecxz
sahf
loop
stc
and
sbb
add
fists
mov
xor
insb
fldl
outsl
rcrb
push
movsb
pop
lret
mov
jle
lahf
mov
dec
dec
cmp
std
jl
xchg
mov
mov
jmp
dec
or
stos
mov
outsl
les
loopne
fisttpl
out
fisubrs
sub
loop
cmp
or
loope
mov
sub
jp
sti
cmp
xor
adc
fisubrl
stos
aad
orb
js
pushf
add
test
call
adc
xor
leave
xchg
push
flds
stc
sub
loopne
aaa
fadd
outsb
lahf
aaa
pop
ror
stc
or
test
jp
arpl
ficompl
push
stos
pop
mov
cld
lahf
js
xchg
push
test
pop
or
jg
je
cmp
push
shll
in
fwait
mov
jnp
std
out
pop
cmpsb
pusha
sub
xor
add
sbb
sub
push
push
adc
mov
dec
mov
jg
mov
stos
push
leave
scas
jmp
mov
loop
loopne
insl
cmp
pop
jmp
pop
jo
mov
mov
imul
test
xchg
std
dec
pop
ljmp
inc
fmul
mov
int
mov
lods
cwtl
mov
or
xchg
stc
cwtl
xlat
push
loop
or
arpl
mov
or
dec
fmul
aad
ljmp
fucom
or
repnz
mov
fildll
lock
pop
push
lods
arpl
mov
repnz
in
inc
xor
pop
lahf
mov
sub
loop
bound
add
iret
iret
cmp
mov
sub
rcl
xchg
mov
pop
pop
bound
xor
lods
sub
sub
out
push
adc
iret
daa
ss
adc
cld
lods
push
inc
sbb
push
jbe
xorb
adcl
in
mov
jbe
jmp
or
jnp
ja
bound
daa
cmp
out
addr16
push
pop
add
stos
and
sbb
fistpl
or
xchg
rcl
aad
mov
or
sar
xor
push
clc
adc
test
cmp
add
dec
and
iret
mov
outsl
loopne
mov
ret
xchg
push
push
mov
pop
push
gs
jno
inc
mov
fwait
mov
mov
test
jnp
mov
scas
mov
mov
add
inc
mov
in
add
jae
xchg
std
iret
xor
cwtl
or
ljmp
push
jae
pop
xor
pop
inc
pop
ds
adc
out
ret
push
mov
aaa
push
popf
and
mov
stos
call
test
xchg
iret
loop
pushf
or
push
push
mov
mov
mov
aaa
fldenv
call
mov
cmp
mov
jecxz
push
xchg
xor
movsl
inc
mov
in
outsl
jno
ljmp
cwtl
arpl
pop
xchg
stos
jbe
jg
nop
adc
in
mov
cwtl
and
frstor
pop
dec
mov
mov
adc
loopne
jns
jne
aam
add
rcrb
dec
out
fs
mov
cmp
pop
out
pop
cs
or
or
push
shll
movsl
dec
outsb
pop
mov
aad
inc
clc
out
inc
js
jo
sti
addr16
in
lock
fsts
and
jae
mov
and
sbb
aaa
idivb
cmp
xorb
lret
lock
sbb
pcmpgtw
jbe
inc
add
xor
mov
cmpsb
or
add
rclb
test
aas
cld
inc
es
and
pop
testb
cmp
push
dec
or
and
cmc
sbb
sub
xor
xor
add
pushf
inc
or
mov
adc
and
mov
aam
pop
mov
pop
cmp
dec
push
popf
imul
pop
int
stc
arpl
in
int3
mov
mov
out
adcb
cmp
inc
pop
sbb
insl
pop
mov
sti
jo
mov
mov
mov
int3
cmp
loop
mov
mov
or
mov
ljmp
inc
inc
fbstp
lds
addl
inc
cmp
cmp
hlt
out
add
xor
repz
lods
push
push
xchg
add
clc
ret
or
mov
sti
xor
ret
sbb
jnp
pop
shll
add
xchg
mov
xor
mov
or
scas
out
mov
and
push
push
cmp
int3
or
push
mov
adc
stos
popa
loopne
das
addb
fldt
pop
addr16
xor
pop
adc
dec
pusha
adc
pushf
mov
stos
sub
aam
jg
sarb
cs
nop
or
cmpsb
lret
or
sbb
push
aam
jne
rorl
dec
nop
cmpl
add
push
test
aam
mov
shl
inc
sbb
or
scas
clc
loope
jg
lock
stos
fwait
jnp
cmpsb
pusha
daa
inc
adc
mov
gs
clc
sbb
daa
loope
mov
push
jg
mov
dec
fdivp
pop
push
push
inc
xchg
pcmpeqw
jl
xlat
dec
gs
push
lahf
mov
and
pop
mov
pop
leave
pop
repnz
xlat
shrb
cs
jb
aaa
sbbl
fs
push
jae
sbb
mov
xlat
push
sub
cmpl
lock
pop
scas
stos
outsl
mov
nop
mov
sbb
pop
xchg
sahf
sbb
loopne
inc
nop
or
hlt
inc
jge
dec
mov
rcll
daa
lods
pop
mov
push
outsb
mov
cs
lea
jl
xchg
fcomi
mov
into
cmp
or
mov
add
jecxz
mov
lret
ret
lret
cld
in
adc
xchg
pop
pop
xchg
fwait
sbb
out
dec
jne
mov
test
pop
loopne
loopne
jnp
jns
pop
ds
jecxz
push
sbb
and
mov
mov
jno
mov
push
lret
add
mov
sub
jge
and
sub
hlt
stc
jp
sahf
push
pop
jns
cmpsb
int
shl
shlb
lret
mov
sub
sbb
jmp
ljmp
neg
lods
dec
std
adc
sbb
adc
dec
dec
cmpsl
hlt
push
xchg
push
cli
cwtl
push
sbb
inc
in
dec
and
imul
or
lea
aam
out
in
inc
push
cwtl
sub
ja
lds
dec
mov
lods
and
or
xchg
xchg
jae
inc
cmp
mov
dec
fs
inc
pop
mov
jnp
add
in
sahf
dec
xchg
push
pop
add
in
cmpsb
sahf
repnz
in
jns
leave
outsl
pop
das
fdivrp
shrb
std
test
xchg
cwtl
mov
in
movl
mov
in
shl
mov
ss
jp
sti
jnp
mov
or
mov
jo
test
mov
lcall
int
ds
push
and
cld
js
sar
out
ss
push
push
sub
xor
in
jne
xchg
cmp
repz
stc
and
fnstenv
xchg
clc
into
movsb
enter
je
cltd
inc
loop
test
xor
xchg
loop
cld
push
ljmp
inc
jbe
dec
mov
pop
jg
cmp
icebp
sbb
test
sub
loop
jb
jbe
shlb
mov
add
or
out
popf
mov
cwtl
les
xchg
xor
cmc
adc
lret
cltd
xchg
dec
adc
lock
adc
pop
ss
stos
es
xchg
adc
lahf
and
pop
aam
push
mov
orl
loope
sub
adc
stos
mov
mov
insl
fsubl
add
xchg
xchg
and
cmp
in
fmull
int
int3
push
or
scas
jmp
or
pop
loope
sbb
xor
rclb
xor
sahf
loop
mov
outsl
xchg
jb
pop
inc
dec
jge
fs
add
mov
icebp
jnp
push
inc
ja
fs
movsb
adc
sbb
jg
push
orl
xor
iret
mov
dec
dec
add
mov
jle
mov
daa
xor
pop
sahf
xor
leave
inc
rcr
shr
inc
add
sbb
mov
mov
mov
lods
sbb
pminub
cmp
sub
cltd
mov
cmp
lret
jne
jne
lahf
aad
cmp
ja
ret
arpl
mov
and
cmp
sbb
inc
jge
mov
jb
cld
or
jns
shlb
lret
mov
mov
push
stos
sbb
aas
pop
lea
fdivrl
sub
add
fcmove
or
xchg
out
sarb
cmp
lcall
adc
pop
lods
icebp
int3
push
add
add
stos
dec
push
fs
bound
jle
mov
mov
in
js,pn
lea
pop
xor
test
loope
xor
dec
lock
and
mov
cmpsl
into
cmc
cmp
push
jb
cli
pop
add
leave
test
cmp
lret
sub
call
out
iret
incb
dec
faddl
test
loopne
jne
adc
sarb
mov
or
outsb
xchg
xor
repz
jmp
lea
pop
sbb
insb
jnp
mov
mov
pop
xchg
mov
les
dec
call
lret
adc
hlt
push
mov
add
jb
popa
dec
repz
push
xchg
xchg
cmp
push
iret
ds
ret
out
mov
jmp
inc
mov
mov
int
mov
cmp
ret
in
data16
mov
loopne
xchg
insb
gs
mov
mov
push
clc
sbb
clc
outsl
imul
mov
mov
shrl
repnz
mov
ret
mov
ja
rcrl
lds
nop
xchg
xchg
jo
mov
cmp
jg
mov
jg
out
mov
pop
fwait
mov
mov
mov
divl
rcrl
xchg
dec
mov
leave
test
or
pop
insb
js
jle
lret
xchg
add
sbb
push
scas
stos
adc
outsb
gs
sti
jl
int3
iret
fbld
icebp
jnp
xchg
xchg
popa
pop
ja
add
leave
lods
xchg
jmp
aas
mov
mov
movl
out
mov
xor
mulb
cmp
mov
scas
cmp
jle
orb
adc
roll
int3
fnop
ds
fildl
clc
call
lcall
mov
jo
mov
sbb
je
cmp
cmpsb
push
xchg
cmc
adc
call
fstcw
adc
shrl
cmp
bound
lock
dec
out
jge
fadds
mov
cmp
clc
or
subl
out
popa
in
adc
xor
dec
filds
xchg
mov
push
fs
xchg
dec
roll
subl
jae
loope
xlat
lds
in
pop
lahf
in
mov
sbbb
movsb
in
fimuls
arpl
ljmp
sub
ljmp
adc
adc
jnp
push
pop
adc
das
xchg
push
gs
ficoms
addr16
jbe
mov
push
sub
xor
faddl
xchg
jo
cmp
popf
pushf
loope
push
xchg
sub
sbb
and
mov
adc
push
or
xchg
mov
jns
xchg
jge
loope
jecxz
adc
scas
imul
pop
dec
outsb
mov
cmc
sbb
scas
lock
lahf
int3
ss
or
ss
out
mov
mov
cmpb
insb
mov
inc
dec
ret
imul
ret
sub
cwtl
pushf
xor
cs
nop
xor
push
xchg
dec
les
jecxz
push
out
aad
jo
or
je
ljmp
jge
cli
clc
pop
dec
mov
xchg
adc
in
ret
cmp
sbb
sti
pop
push
lods
cmpsl
xor
frstor
xchg
sub
adc
addr16
mov
rolb
add
push
push
cltd
xor
xlat
push
sub
inc
xchg
int3
adc
or
idivb
pushf
cmpsb
cmp
pop
sti
cltd
mov
mov
inc
xor
fcompp
xchg
dec
pusha
or
inc
gs
sub
dec
jmp
rolb
lsl
inc
adc
sbb
pop
mov
jo
stos
cmp
mov
and
cmp
out
sub
add
sahf
cmp
mov
cmpb
sbb
mov
jecxz
leave
inc
sbb
add
pop
mov
push
mov
xchg
dec
inc
inc
add
sbb
jb
mov
stc
ljmp
adc
test
fwait
adc
dec
js
mov
add
fldenv
pop
push
sub
lds
fistpl
int
and
je
sbb
out
je
mov
stos
dec
jno
cltd
and
or
movsb
add
mov
outsl
js
movq
and
pop
aad
push
cld
dec
out
and
jo
push
imul
fcomi
inc
out
add
mov
fidivl
daa
push
xorl
movsl
sbb
push
sbb
jbe
sbb
test
jnp
sbb
test
or
inc
mov
and
movsl
neg
jne
xor
aas
xor
push
jbe
adc
test
and
out
sbb
clc
scas
jp
dec
mov
push
fisttpll
cmp
divb
dec
mov
icebp
bnd
or
repnz
and
mov
insb
out
stos
imul
mov
call
js
into
lahf
int3
rclb
insb
in
cld
cli
push
enter
ss
inc
inc
and
mov
mov
insl
mov
or
inc
push
js
sahf
shrb
xlat
fistpll
dec
inc
lret
jne
cmp
lock
faddp
lret
pop
fldt
pop
xchg
and
push
or
ret
cmpsl
ljmp
jl
test
jmp
jecxz
adc
sub
jae
mov
into
mov
mov
adc
jb
add
dec
sbb
std
loope
xor
loopne
stos
mov
movsl
or
daa
test
int
pusha
outsb
fistpl
sbb
gs
in
mov
bound
sub
sub
xchg
iret
push
ljmp
test
pop
and
adc
cmpsl
daa
aad
pop
jg
cmp
adcl
aas
pop
repz
jb
das
jno
lods
dec
xor
and
sbb
out
push
mov
jge
out
cmc
ret
notl
test
lock
sub
insl
bound
add
int3
fwait
and
cmp
mov
lret
shll
and
lds
leave
mov
jg
xlat
push
mov
fcoml
xor
cmp
popf
mov
push
aas
je
out
xlat
fidivrs
sbb
dec
jae
stc
mull
fldl
movsb
ja
xlat
scas
xlat
cld
xchg
inc
rcrl
into
jle
rcrl
or
mov
sbb
inc
cmpsb
cs
movsb
push
jno,pt
es
jbe
mov
cmp
or
jb
cld
flds
mov
sub
xor
pop
int3
pop
push
push
out
addl
pop
sub
inc
cmpsb
leave
add
das
sbb
scas
mov
gs
adc
popa
mov
test
push
mov
sbb
roll
out
cmpsl
lods
jle
enter
add
cmp
mov
jnp
out
jb
push
cmp
add
mov
pop
sbb
xor
cmpsb
repnz
inc
into
iret
not
fsub
clc
and
dec
pop
lea
push
js
data16
out
mov
xor
insb
stos
cmc
push
sti
mov
pushf
jne
inc
push
fs
pop
push
outsl
aam
lds
add
lcall
data16
push
arpl
xorb
scas
cmp
or
mov
pop
mov
mov
mov
out
ljmp
or
imul
cmpsl
inc
cld
aam
subl
cmp
pop
sarl
xlat
stos
arpl
cltd
xchg
test
leave
xchg
lea
jbe
inc
sarb
imul
xor
add
push
sub
inc
jecxz
jl
push
cli
ret
xchg
push
inc
xchg
push
and
sbb
push
sbb
jne
cmc
jmp
cmp
aaa
pop
fistl
fdivrl
enter
xor
xchg
push
xor
add
sarb
lock
daa
dec
push
push
jns
xchg
xchg
pop
int
xchg
mov
lret
aam
lret
sarb
xlat
or
inc
adc
xlat
ret
call
hlt
jp
outsl
shll
and
sub
bound
inc
pop
rol
enter
inc
jae
add
cmp
sbb
push
sub
cltd
add
aam
in
sar
loope
int3
repnz
mov
adc
cmpsl
xchg
iret
cld
mov
and
adc
gs
xlat
insl
sbbb
push
addr16
sbb
xchg
sub
stc
or
imul
or
call
fbstp
xchg
adc
or
out
fcom
mov
lods
test
ficomps
jmp
add
mov
adc
pop
test
or
cmp
je
in
lea
jb
jne
stos
dec
bound
dec
dec
adc
shl
mov
jno
scas
adc
roll
rcl
daa
pop
jno
push
cld
notb
in
cmp
xor
repz
jne
xor
mov
int
pop
int
dec
mov
lret
in
nop
dec
cmp
jo
stos
cmp
aad
push
mov
lods
adc
daa
inc
sbb
divb
leave
xor
fstl
test
push
mov
add
xchg
mov
mov
xchg
and
jecxz
fwait
pusha
loope
adc
sbb
iret
cmp
out
inc
arpl
mov
jge
repz
push
outsl
into
andl
push
push
fwait
out
mov
ret
scas
repz
imul
add
push
scas
dec
cld
sbbl
lock
cltd
mov
and
cld
inc
imul
int
and
sub
lods
stos
popf
and
hlt
mov
aam
enter
mov
enter
or
rcrb
or
mov
adc
xchg
jae
xor
sarb
cs
ret
lds
jno
or
clc
adc
popa
clc
out
pop
cmpsl
or
aaa
jb
or
mov
mov
jae
sbb
sub
pop
jl
dec
jecxz
dec
and
sbb
sub
stos
dec
jge
jl
sub
xchg
dec
jl
clc
inc
out
jno
inc
inc
inc
mov
or
or
mov
jmp
pop
xor
pop
ret
sub
and
dec
inc
ljmp
nop
inc
in
inc
ret
iret
cltd
xor
out
in
mov
jle
fldl
ret
rclb
push
rorl
lcall
xchg
js
jge
add
push
push
mov
loopne
loope
call
clc
aaa
out
leave
lea
pop
mov
int
and
pusha
daa
ljmp
pop
mov
sub
insl
xchg
repz
mov
jnp
mov
insl
or
cmp
fsubrl
ret
and
stc
dec
xchg
cwtl
xchg
dec
xor
fsubl
sbb
pop
mov
fbstp
mov
mov
dec
inc
fcoml
mov
xor
imul
imulb
sbb
les
fwait
pop
xlat
popf
and
pop
pop
stc
mov
mov
pusha
jae
cwtl
scas
in
push
cltd
cvtps2pd
shl
sub
and
jmp
mov
xor
pop
pop
cwtl
cmp
or
pop
cmpsl
sysret
into
loopne
lahf
sub
mov
or
fwait
lret
dec
jne
jno
and
xor
push
pop
push
push
adc
cmp
jg
mov
push
and
sbb
sbb
or
add
sub
sub
lock
and
lock
les
mov
mov
add
jae
inc
mov
sub
xchg
les
or
arpl
loop
xor
lahf
sbb
pop
sub
inc
subl
repz
adc
push
mov
pop
mov
jbe
repnz
adc
mov
push
loopne
lret
daa
insb
sub
or
ja
mov
push
js
sub
imul
adc
dec
sbb
and
call
ficoml
mov
mov
ljmp
cmc
lret
enter
pop
ja
cli
les
cwtl
xor
das
mov
das
jbe
andl
lahf
sbb
fdivrl
int
push
push
imul
pusha
call
es
stos
inc
dec
cltd
cmpl
lret
inc
push
ret
jmp
in
mov
pushf
rol
cld
les
rol
jl
aas
xchg
or
mov
clc
pop
into
mov
aad
out
insb
jns
dec
or
sti
and
inc
pop
xlat
daa
movsl
fisubrs
push
outsb
or
xor
in
xchg
ds
das
cmp
rclb
adcb
fidivs
xlat
shl
sub
jb
adc
xchg
dec
pop
lea
pop
outsb
cmc
mov
int
sti
mov
mov
icebp
vrcpps
outsl
mov
pop
stos
mov
jecxz
xlat
jae
enter
xor
mov
mov
sub
pop
mov
sbb
jge
cltd
pop
push
jge
mov
sti
cmp
sub
out
test
or
cli
dec
jb
aaa
sbb
js
fimuls
enter
mov
out
inc
adc
lods
fists
inc
mov
cmp
or
scas
cli
pop
jp
push
add
dec
xor
jns
rorl
xor
cs
jle
cmp
sub
cs
xor
lea
stos
sti
mov
mov
sbb
rcrl
int3
sbb
sbb
xlat
lock
dec
repz
pop
jle
jge
cmp
xchg
add
leave
dec
lock
push
mov
fdiv
push
jne
mov
sbb
gs
push
cs
pop
xchg
addl
hlt
daa
add
adc
jg
sbb
add
adcl
or
sbb
push
and
fcmove
aaa
cs
or
cmp
push
xchg
sub
bound
inc
cmpb
push
cwtl
lcall
sahf
in
push
cmpsl
sti
add
mov
rcll
hlt
pushf
push
daa
mov
xor
fistps
dec
inc
xor
xlat
rcll
xchg
inc
fsubs
pop
cli
xor
hlt
mov
adc
sub
push
imul
push
and
loop
adc
push
pop
aaa
addl
cltd
inc
mov
arpl
pop
fcos
sub
jg
push
mov
rol
sub
sbb
or
aam
cmp
xchg
pop
push
lcall
sbb
stos
jmp
fadds
and
push
popl
jl
dec
inc
cs
aad
mov
insb
or
cli
push
mov
test
loop
mov
xlat
leave
xchg
sub
sbb
dec
mov
leave
pop
fdiv
adcl
jne
sbb
out
pop
lahf
cmp
shlb
cmc
adc
cmpl
fldt
push
adc
xchg
lods
pop
shlb
adc
lret
mov
arpl
add
cwtl
fildll
xchg
jecxz
or
cs
loopne
lahf
lock
mov
iret
adc
ds
cmc
shll
repnz
adc
push
jbe
push
lds
fistl
push
xchg
or
je
mov
aas
test
jnp
mov
gs
xor
pop
xchg
cmpsl
or
outsl
ja
imul
mov
jmp
cmp
cmp
push
mov
int
into
in
inc
dec
rolb
shlb
pop
sub
repnz
xor
loop
and
mov
stc
loope
js
inc
lds
ds
push
pop
cmp
lcall
les
enter
enter
shr
shlw
pop
sbb
sbb
mov
and
mov
sar
or
dec
ds
jecxz
cmpsb
mov
push
pop
xor
jle
mov
repz
rcll
xor
mov
sub
mov
sbb
ret
daa
adc
xor
push
scas
cld
stos
in
inc
cmp
aas
jb
inc
fidivrs
imul
add
xchg
ljmp
je
xchg
out
mov
sub
or
add
fildll
mov
mov
lcall
sahf
inc
pusha
xchg
push
sbb
shlb
dec
std
dec
aad
adc
push
subb
das
mov
fcmove
jbe
xor
jns,pn
lds
arpl
enter
testl
fmuls
aam
std
dec
inc
in
mov
cmpsl
lea
ficompl
mov
xchg
push
mov
mov
xchg
adc
jns
je
xchg
jmp
jno
xchg
daa
stos
imul
sahf
cmp
adc
test
mov
mov
outsl
icebp
mov
mov
cli
stos
adc
pop
inc
rcrl
lea
test
data16
jecxz
and
andl
pop
jge
mov
das
push
jl
js
lea
mull
mov
fwait
lcall
mov
sarl
mov
ret
fimull
dec
mov
xchg
cmpsb
add
sub
adc
mov
dec
andl
and
aad
push
lods
jg,pt
mov
fisubs
xchg
or
rorl
lcall
imul
aad
stc
mov
adc
add
sub
pminub
push
mov
mov
pop
dec
cmovb
or
test
cmp
lea
add
mov
xchg
call
push
pop
xlat
mov
xor
inc
je
leave
xlat
dec
lcall
mov
mov
or
lret
pop
cmp
out
mov
push
xchg
cs
imul
push
rorl
enter
mov
bound
ds
xchg
xchg
hlt
cmpsl
mov
stos
movsl
cmp
inc
clc
jp
and
sti
push
dec
inc
scas
aas
xchg
mov
popf
sbb
rol
outsl
scas
inc
add
pop
push
adc
in
rol
push
dec
add
pushf
mov
imul
inc
pop
mov
mov
mov
rolb
jno
push
mov
sbb
leave
insl
or
mov
inc
pusha
mov
push
and
pop
imul
inc
stos
sbb
insb
sarb
push
cli
or
adc
jg
stc
daa
and
sub
sub
pop
stos
ficoms
cmp
or
xor
sbb
cmp
dec
pop
repnz
popf
sbb
jae
out
jns
daa
xor
jno
int
add
aad
and
cltd
imul
cmp
xor
dec
fimull
jmp
into
fwait
repnz
mov
int3
ljmp
movsl
loope
daa
movsb
sbb
inc
test
lret
bts
fstl
in
mulb
cmp
xchg
push
pop
addl
add
ret
inc
mov
imul
aam
inc
jge
inc
into
outsb
mov
and
jg
inc
sahf
insl
xor
cmp
imul
movsl
mov
inc
fbstp
mull
push
xor
xchg
daa
push
adc
scas
mov
leave
sub
ret
repz
imul
pop
pop
pop
imul
sub
cmpsb
sbb
pop
sbb
pop
dec
push
xor
adc
push
pop
pop
cmp
loop
inc
sahf
sbb
adc
jmp
in
adc
fmulp
push
cmpxchg
and
and
nop
jl
jns
xchg
add
xchg
and
fldcw
xchg
mov
adc
pop
mov
stos
gs
mov
stos
clc
inc
aam
and
cmp
cli
cs
xor
add
fcompl
cmp
mov
sarl
out
inc
out
shlb
cmpsl
sub
add
fsubrl
and
in
fwait
insl
mov
add
lcall
mov
adc
mov
pop
mov
cmp
dec
lcall
cmp
inc
stc
lahf
notb
aam
mov
dec
push
fmulp
into
dec
sub
adc
aad
cwtl
sbb
test
fs
and
shll
mov
inc
dec
cmp
xor
xor
mov
je
popa
pop
movsb
imulb
sbb
push
mov
push
std
fdiv
shlb
push
cmp
mov
adc
mov
lcall
inc
xor
mov
push
insw
lods
and
arpl
shl
orb
fistl
imull
fnstsw
push
inc
in
adcl
scas
dec
lahf
fbld
inc
xchg
aad
or
mov
dec
pop
cs
pop
mov
xor
insb
pop
pop
lods
dec
cmp
xchg
ret
test
mov
mov
sbb
loop
and
mov
aad
inc
pop
rcl
insb
loop
addr16
pop
icebp
pop
insl
incl
push
rcrl
mov
dec
int3
stos
call
ret
add
dec
shrl
cmpb
cli
add
sti
movsl
jae
shlb
popf
clc
ret
mov
mov
xor
pop
mov
cwtl
xlat
add
ljmp
add
repz
adc
xor
add
and
outsl
adc
pop
dec
sub
lcall
movsb
xor
das
lock
je
scas
movsb
xor
in
mov
or
push
xor
mov
mov
dec
dec
or
push
pop
in
mov
push
sbb
xor
add
sub
mulb
inc
stos
jg
mov
pop
cwtl
pop
xor
sbb
add
ja
and
cmp
adc
and
or
lods
inc
shl
xorb
xchg
lods
sbb
dec
push
cmpsl
push
cmp
cmc
repnz
das
andb
xchg
adc
ja
add
push
fisttps
adc
lock
pushf
push
push
adc
dec
outsl
xor
and
fsubs
lods
cs
cmpsl
hlt
inc
repnz
cld
es
xlat
xor
imul
sub
jp
gs
es
pop
ljmp
clc
adc
loope
xor
pop
mov
adc
out
jge
jne
aam
mov
mov
mov
in
push
or
mov
in
nop
test
aam
mov
inc
dec
js
ds
nop
mov
pop
mov
cmpsl
dec
add
jmp
cmp
in
fidivrs
pusha
sbb
push
mov
addr16
cmp
movsb
jmp
push
inc
pop
mov
mov
adc
std
movb
cmp
or
lods
call
leave
ret
stos
mov
dec
sbb
scas
std
roll
add
jg
push
fwait
nop
or
sub
mov
jl
pusha
adc
inc
push
jae
cs
and
mov
shlb
xorl
xchg
or
ret
outsl
divb
mov
andb
psllw
cmp
xlat
mov
enterw
testl
pop
lret
das
ja
int3
and
js
repz
lds
xchg
jle
lds
mov
idivl
shr
inc
jns
cmp
cmp
lods
mov
mov
or
stc
mov
xor
fsubp
pop
mov
hlt
inc
push
xchg
xchg
lds
or
lds
push
xlat
mov
in
leave
mov
inc
das
inc
add
leave
test
sbb
movsb
loop
inc
and
leave
xchg
fmull
jb
sub
xor
cmpsl
call
repnz
inc
add
ret
fdivs
dec
mov
add
hlt
adc
cltd
sbb
fimuls
inc
loope
clc
lea
lds
bound
sbb
sahf
xchg
fwait
adc
clc
cld
push
test
lds
in
push
jl
je,pt
xor
test
mov
fbld
jg
sbb
addb
mov
pop
pusha
add
nop
or
push
xchg
xor
hlt
in
inc
mov
jmp
pop
pop
pop
mov
out
pop
cli
sti
test
movsb
aaa
sahf
ret
mov
imul
leave
sbb
lods
pusha
lods
mov
sahf
lea
adc
outsb
loopne
sbb
stos
sub
ljmp
ret
push
jnp
add
stos
stc
sub
cwtl
push
roll
lahf
mov
das
scas
push
push
push
repz
popf
sbb
stc
pop
xchg
btc
jl
imul
mov
jne
shl
std
sbb
test
pop
dec
adc
xor
inc
cmpsb
add
sahf
test
add
stos
sbb
xor
cmp
push
shr
outsl
pushf
pop
lods
test
pop
out
popa
inc
cmp
xor
sub
and
pushf
mov
dec
negl
xchg
xchg
xor
es
jle
inc
or
cwtl
lret
adc
jns
push
mov
lcall
cs
repz
push
pop
lea
fsubrs
outsb
adc
add
addr16
mov
leave
andl
sub
mov
rcrb
test
lods
jg
aam
inc
movsl
cmpsl
std
sbb
push
dec
mov
mov
rorb
mov
and
push
call
out
cli
insb
and
mov
out
dec
icebp
jnp
xchg
adc
cmpsb
push
popa
and
iret
dec
xlat
inc
inc
mov
inc
enter
sbb
xlat
add
and
add
fists
sbb
stc
in
mov
cmp
out
inc
test
rcrb
insl
repz
fdivrl
je
js
in
mov
shrb
mov
lock
fcomip
fwait
mov
fcmovbe
das
xor
push
mov
xchg
out
and
mov
push
mov
fldenv
cmpsb
ficompl
nop
add
leave
repnz
nop
mov
sub
shll
shll
mov
xchg
inc
push
popa
xchg
or
in
dec
aas
sub
orb
mov
cmp
mov
adc
and
ror
sub
fimull
xchg
lret
fiaddl
fildll
jno
mov
mov
addr16
pop
cmp
mov
out
addr16
adc
add
sahf
adc
inc
cli
xor
stc
xor
sub
cs
aam
jge
push
mov
out
jne
push
pop
sub
push
mov
mov
cmp
inc
adc
aaa
hlt
sub
testl
lods
dec
mov
jns
or
popa
push
mov
push
xchg
mov
sbb
sbb
jle
jle
or
xor
pusha
adc
sub
inc
psllq
or
xor
mov
bound
addb
dec
fisttpll
int
mov
xchg
xor
sarl
add
pop
cli
fidivl
sbb
shlb
push
lret
arpl
icebp
dec
inc
into
pop
aas
lcall
jg
sbb
lea
and
test
enter
in
pop
adc
xchg
ficoml
lods
pop
xchg
mov
dec
adc
out
gs
xchg
mov
stos
xchg
ja
push
cmp
jge
scas
outsb
pop
mov
lret
das
or
hlt
std
cmp
dec
or
mov
jmp
mov
jb
fildll
mov
movsb
cmp
data16
mov
imul
movsb
cmp
ja
inc
out
loope
push
adc
add
inc
mov
jbe
jmp
dec
xchg
int
or
gs
shll
test
arpl
mov
inc
xchg
jae
fimull
push
sub
jo
fldcw
push
push
jne
outsl
or
ds
out
or
testb
dec
enter
inc
sbb
leave
std
mov
les
jle
xchg
dec
test
sbb
cmp
cltd
or
aam
out
cmc
inc
pop
pop
aas
sub
pop
sbb
inc
mov
lods
mov
repnz
adc
sub
jp
pop
movsl
mov
or
or
aad
push
push
mov
cld
neg
scas
cmc
lret
enter
cld
xorl
lods
aad
gs
sbb
ljmp
xor
lcall
jge
jne
popf
inc
dec
sbb
dec
bound
and
lret
addr16
pop
cmpsl
sti
in
cli
cmpsl
nop
into
es
mov
pop
enter
add
cmp
nop
xchg
imul
sub
mov
dec
fmul
mov
jmp
fcoml
mov
adc
mov
or
mov
sbb
jb
mov
hlt
push
cmp
inc
ret
popf
xchg
mov
sbbb
vpshrdw
adc
in
lret
cmpsl
stc
add
push
lods
push
mov
adc
inc
out
js
iret
test
ja
test
inc
fsubrs
add
jb
push
push
out
push
and
inc
xor
iret
mov
cmp
jp
push
push
adc
push
mov
xchg
rorb
fildl
and
dec
sbb
adc
stc
mov
rcr
sbb
sbb
cli
cltd
jmp
and
jb
stc
pop
mov
pop
mov
mov
pop
dec
out
jg
add
mov
and
mov
pop
inc
cwtl
imul
pop
mov
jmp
mov
push
mov
pop
stos
adc
iret
pop
fcmovb
popf
mov
sbb
addl
push
mov
js
mov
fisubrl
dec
push
push
cltd
sbb
adc
sbb
cmp
or
pop
testl
mov
scas
call
mov
cvtpi2ps
cmp
mov
xor
inc
cmpsl
gs
pop
ja
xor
ret
sarl
jge
jae
dec
shll
fnstenv
jg
adc
jae
sti
rolb
fadd
dec
lds
in
test
enter
push
jo
pop
fdivl
out
je
lds
sbb
loope
inc
xchg
pop
enter
adc
add
jle
or
cs
sub
les
pushf
xchg
test
adc
adc
adc
in
pop
lods
sub
dec
push
mov
fcomp
mov
sub
test
int
mov
int
ljmp
orl
aas
fld
jno
out
push
jb
loope
inc
insb
inc
jg
push
jnp
mov
lcall
mov
jl
add
das
inc
aad
cs
scas
pop
mov
cltd
call
int
daa
lret
mov
sub
fcoms
dec
xchg
ret
inc
add
clc
jbe
cs
fnsave
or
jp
adc
mov
cmp
mov
mov
pop
aaa
daa
stos
enter
mov
and
imul
sub
ret
scas
inc
test
pop
sti
in
sbb
mov
push
les
sub
and
into
mov
imul
movsb
cmp
sub
lret
mov
addr16
ja
sahf
andl
fadds
jbe
push
call
test
stos
fldt
xchg
cmpsl
add
mov
cli
mov
and
jno
cmp
imul
inc
dec
fnstenv
loopne
xchg
sub
cmc
dec
inc
mov
jmp
lret
imul
and
adc
aam
cmp
int3
and
inc
xorl
cli
adc
push
loope
fldcw
mov
or
bswap
movsb
inc
cld
cmpsb
sbb
popf
inc
jno
je
mov
mov
test
ret
xor
mov
mov
lcall
rcrb
xor
sahf
or
jecxz
dec
pop
cs
ret
rol
rclb
xor
in
mov
xchg
outsl
jecxz
push
stos
add
aas
stos
loop
push
xor
mov
outsl
xlat
loop
jle
sarl
pop
stc
push
clc
mov
and
and
xor
sub
push
xor
jmp
out
mov
push
adc
rcl
popf
outsb
xchg
mov
push
mov
sbb
jmp
dec
cmpsb
aad
add
add
lods
sbb
xlat
lcall
test
xor
push
push
jmp
xchg
imul
pop
fisubs
lret
imul
fwait
push
addr16
and
push
ds
lea
pop
push
shll
in
ficomps
xor
stos
cmc
pop
push
cmp
sti
xlat
inc
mov
inc
xchg
lods
out
fsubrs
inc
lret
dec
xchg
jae
sbb
mov
cmp
adcl
shlb
and
or
xlat
xor
adc
out
jl
add
in
sarb
addr16
cmp
enter
xlat
mov
cld
xor
mov
jge
ljmp
ljmp
fwait
and
popa
push
mov
push
jg
test
repz
stos
push
lahf
lods
dec
decb
icebp
sub
nop
pop
mov
xchg
mov
ja
jno
pop
loope
pop
xor
xchg
enter
iret
and
jmp
and
leave
xor
out
out
push
mov
addb
in
mov
addr16
push
in
jo
mov
mov
cmp
movsl
xchg
sub
gs
fs
dec
push
mov
pushl
pop
lods
xchg
aaa
iret
cld
loop
or
mov
cltd
push
push
pop
pop
sub
adc
push
jmp
bound
test
mov
lods
xor
std
cmp
inc
jmp
fiaddl
into
cmc
cmp
in
in
inc
mov
push
and
ss
cmp
mov
int
jg
insb
dec
iret
push
cld
xchg
fidivl
lods
aas
call
mov
addl
mov
xchg
mov
pushf
iret
push
xor
in
vphadduwd
test
sub
or
cmp
mov
or
ljmp
mov
cmpsl
sbb
xchg
repz
xor
add
and
cmp
or
push
sar
flds
lahf
inc
negl
adc
fcmovbe
mov
or
js
ds
mov
movsb
push
push
xchg
xchg
dec
das
jo
lret
pop
or
inc
int3
call
jno
jne
xchg
mov
adc
and
popf
add
loop
inc
xor
into
pop
lahf
jp
add
sub
push
adc
push
mov
mov
std
add
mov
or
scas
pushf
in
rolb
cld
movsb
adc
in
repnz
pop
movsl
inc
loope
outsb
ja
xchg
inc
out
xchg
xchg
xor
repz
das
dec
clc
jnp
scas
mov
fmul
cwtl
mov
ret
sbb
or
js
cmpsl
mov
ret
movsl
mov
ret
pop
jne
cli
mov
loopne
icebp
mov
or
out
cmpsl
sub
iret
jns
jl
jnp
xchg
add
push
out
dec
pop
push
dec
pop
xor
jp
mov
and
inc
jmp
fsubl
int3
nop
and
xchg
sbb
mov
xor
xchg
stc
loope
rcll
clc
arpl
and
loop
js
xor
jle
movl
fldl
inc
out
xchg
pop
push
lret
or
jno
add
xor
pop
pop
out
mov
outsl
les
push
les
lcall
pop
mov
cld
mov
imul
push
ret
aaa
sbbl
mov
cmp
dec
sbbl
outsl
mov
pop
jg
jl
insl
out
adc
clc
je
push
clc
sahf
nop
xchg
insl
notl
sbb
daa
mov
iret
xor
outsb
aas
pop
jp
das
mov
divb
lods
movsb
adc
clc
mov
mov
xorb
mov
push
inc
mov
adc
mov
push
mov
repnz
loopne
inc
xchg
imul
adc
push
adc
pushf
call
addps
or
dec
push
mov
sti
sbb
rcrl
out
int3
cmp
jne
fisttpll
cmp
sbb
aad
data16
jnp
fwait
push
sbb
jae
inc
bound
mov
push
insb
mov
mov
push
add
pushf
cld
out
sbb
add
aad
das
mov
cs
jne
lret
pop
fiadds
jns
xchg
test
xchg
dec
xchg
add
xchg
int
dec
arpl
pop
sahf
std
xchg
xlat
lds
sub
and
imul
xchg
lds
sti
movl
inc
mov
jae
testb
sahf
lock
adc
cmpsl
movsb
mov
add
fistps
xchg
sub
jnp
out
stos
push
and
aas
lea
loop
sub
jne
and
lock
aad
jl
xchg
loopne
out
jle
sbb
or
push
inc
lret
aam
lret
test
push
sbb
pop
mov
inc
repnz
mov
in
pop
scas
mov
lock
xor
into
add
js
leave
pop
add
test
or
cmp
mov
xor
mov
cltd
gs
adc
pop
add
dec
pusha
repnz
sbb
pop
dec
popa
push
or
movsb
add
and
popa
outsb
jb
and
sub
mov
sbbl
cs
jbe
xor
sbb
insl
inc
and
sysret
xchg
jle
sub
scas
mov
cld
sbb
rcrl
mov
or
or
mov
inc
dec
icebp
sbb
jge
or
lods
jge
ja
mov
xor
sbb
xchg
push
iret
out
mov
jp
out
shr
xchg
out
pusha
test
outsb
push
sti
lcall
cmpb
daa
dec
mov
es
bound
xchg
push
and
dec
mov
dec
fs
aaa
add
dec
and
pop
jle
test
adc
mov
xchg
mov
ja
xor
aad
add
aas
mov
out
adc
jnp
in
or
xorb
rcl
scas
insb
inc
hlt
daa
sbb
sub
das
push
cmpsb
movsl
sub
mov
out
push
in
shl
xchg
stos
test
imul
lock
pushf
cmc
in
cs
mov
dec
inc
adc
sarl
addb
adc
lock
cltd
xlat
mov
xchg
cli
xorb
xchg
movsl
arpl
call
adc
xchg
mov
pop
inc
out
das
dec
xor
aad
jmp
fidivs
xlat
xchg
dec
sbb
mov
shrb
or
push
in
push
inc
adc
out
sysret
add
into
cltd
sahf
inc
mov
jbe
dec
dec
leave
popf
aas
sub
xor
mov
mov
out
dec
xor
push
jb
stc
lods
es
sub
mov
ds
leave
pop
mov
add
lds
xor
cmc
loop
int
cmpsb
ljmp
xchg
cmp
mov
dec
mov
ffreep
cmp
or
mov
int3
cmp
sbb
inc
lods
fsts
ret
fwait
ja
movsl
outsb
ljmp
pop
fbstp
mov
ds
out
mov
repnz
inc
mov
pop
pop
cwtl
adc
pop
leave
mov
push
inc
jne
popf
cmp
out
pop
mov
xchg
jnp
adc
fisttps
cmpsl
sbb
repz
ret
popl
out
movntq
sbb
gs
cmovge
xor
jge
inc
cmp
das
sub
leave
stos
pop
js
push
addr16
aam
push
out
ret
push
mov
cmp
jns
jle
bound
dec
ja
push
xor
aad
mov
lahf
aam
fnstsw
or
jl
cmp
sbb
lahf
and
push
push
pushf
xor
push
int3
outsb
dec
mov
mov
in
inc
pop
and
aam
je
imul
push
xchg
jp
cs
pop
lcall
fcmovbe
sahf
int
aas
inc
fmul
dec
imul
ret
or
xchg
je
add
cli
fisttpll
repz
fcomp
mov
mov
add
xchg
lods
cmp
int
push
jl
push
stc
mov
pushf
ret
ljmp
orb
sbb
imul
std
ljmp
and
filds
and
gs
jno
sbb
jb
push
and
pop
dec
in
in
mov
push
loop
je
pop
aad
xchg
add
loopne
sarl
fdivl
mov
out
outsb
pop
test
js
mov
in
out
cs
inc
lret
aad
mov
adc
std
pop
ret
fucomi
jns
jecxz
lret
cmp
lahf
cli
test
in
mov
or
iret
push
outsl
int3
stc
addr16
sbb
add
popl
aaa
fcomps
jecxz
cwtl
repnz
xchg
mov
repz
movsb
sub
push
inc
mov
ljmp
xchg
push
mov
addb
sbb
int
shrl
outsb
inc
in
xor
jns
fnstcw
call
and
sub
test
mov
mov
push
xchg
out
push
xchg
fs
and
nop
loope
popa
rorb
imul
subb
shlb
adc
add
cmp
pusha
push
jno
and
xchg
xchg
jae
mov
leave
and
push
gs
daa
sar
mov
in
insl
aad
and
sbb
push
xor
daa
insl
loope
adc
andb
or
sahf
mov
and
jge
sarw
dec
or
pushf
xchg
push
arpl
cmp
rol
loopne
mov
sub
ds
lcall
test
push
inc
xor
mov
movsl
cli
aas
daa
push
out
andb
neg
add
ret
xchg
scas
fadd
pop
sub
mov
add
in
repnz
in
and
adc
imul
mov
add
std
push
sub
cmp
pop
jmp
out
imul
ret
cltd
adc
push
rcrl
xchg
addr16
imul
push
loop
add
mov
and
call
int
sub
sub
push
sbb
test
sub
adc
fisttpll
test
sbb
mov
nopl
xchg
push
jb
push
shl
in
movb
xchg
sarb
sbb
add
call
scas
in
mov
adc
or
test
daa
andb
fsts
aaa
aaa
lcall
mov
decl
imul
adc
pop
leave
shlb
sbb
dec
aam
push
mov
dec
add
fstl
popw
cmpsb
or
mov
std
jns
je
push
cli
sbb
bound
fwait
pop
sub
mov
or
insl
or
xchg
jge
int
mov
mov
subl
mov
outsl
mov
sub
inc
jne
insl
and
popa
sub
loope
or
push
jnp
xor
mov
dec
pop
push
jmp
rorl
in
scas
in
push
jnp
mov
sub
sbb
sti
jo
js
xchg
stos
rorl
xor
insl
fnstenv
inc
and
and
xchg
jns
pushf
dec
das
ds
push
int
loop
xorl
loope
aaa
in
lcall
xchg
and
int
popf
mov
add
cmp
outsl
or
aas
dec
pop
mov
push
rclb
xchg
or
mov
pavgw
add
jne
loope
cmp
dec
stc
and
stos
pushf
sub
pushf
and
lret
fildl
push
hlt
pop
out
bound
push
jo
lret
sub
xor
es
cmp
sub
adc
loop
jnp
pop
cmp
pop
xor
xlat
add
jg
add
pop
mov
aam
xorb
dec
pop
sbb
loop
int
xchg
repz
clc
outsl
xchg
sub
inc
push
mov
nop
data16
in
inc
jp
ret
mov
push
and
cmp
push
divb
dec
cltd
push
in
hlt
shll
push
xchg
ja
mov
jmp
jmp
mov
incl
sbb
mov
push
push
push
in
cmp
loop
dec
jp
pop
rolb
test
xchg
movb
lahf
jp
mov
dec
inc
fstpt
iret
push
movsb
addr16
adc
lret
jns
mov
xchg
clc
scas
xor
leave
sub
add
add
sub
cltd
dec
jbe
into
sbb
cld
mov
pop
mulb
loope
insb
xchg
in
scas
push
dec
dec
xorb
mov
mov
test
insl
xlat
aam
cld
test
push
jne
sub
bound
nop
jge
pop
es
pop
jge
faddl
ret
inc
rorb
inc
rclb
jp
movsb
popa
mov
into
mov
add
jl
mov
sbbl
shrb
scas
popf
std
movsb
and
jnp
add
imul
mov
push
sub
xchg
shlb
outsb
inc
jno
data16
cmp
inc
inc
push
push
subl
fwait
pop
add
adc
pushf
pusha
sbb
or
outsl
pop
clc
sbb
out
xor
push
adc
repz
sub
mov
sbbb
jns
ret
fistpll
repz
pop
loopne
enter
jmp
rolb
nop
jnp
and
lock
push
cmp
xorb
add
xchg
psllw
mov
jae
xchg
xor
dec
mov
mov
xchg
xchg
add
sbbb
inc
fsubl
in
movsl
mov
adc
cmp
negb
pop
push
xchg
sti
add
popf
mov
subl
adc
mov
jbe
and
inc
dec
mov
cmp
adc
mov
loop
mov
xchg
jle
test
push
mov
mov
lea
test
movsl
repz
or
mov
mov
sub
mov
sub
xchg
leave
rcl
movsl
test
dec
inc
inc
adc
sti
fs
jne
pop
std
mov
pop
adc
fucomip
jge
cli
add
iret
iret
mov
je
add
push
shl
push
cltd
xchg
xchg
mov
cmp
xchg
mov
sub
call
pop
mov
jmp
enter
in
lods
inc
mov
addr16
jle
push
xchg
and
mov
cmc
outsl
frstor
les
add
pop
sar
cmpl
test
push
mov
push
xchg
cld
or
movsl
push
xor
sbb
mov
hlt
mov
hlt
lcall
mov
les
stos
mov
push
sub
cmp
mov
mov
dec
in
inc
pop
stos
push
jb
dec
je
mov
cld
mov
popf
insl
pushf
insb
mov
cli
or
pushf
jp
loopne
in
mov
ret
fiadds
add
jmp
xchg
and
push
dec
sub
mov
call
push
sub
xchg
fs
ds
jb
mov
xchg
cmpb
jns
inc
adc
rolb
idivb
jecxz
mov
jle
das
or
enter
jle
jae
fs
dec
sar
subl
neg
rcpps
push
popa
jp
fwait
fs
and
jle
hlt
inc
cli
inc
pop
cmp
sub
les
dec
clc
and
or
xchg
gs
repz
imul
out
test
je
add
clc
sbb
inc
xor
xlat
or
mov
mov
mov
insb
aam
in
dec
outsl
xchg
pop
sub
pop
sub
stos
out
jp
cltd
popf
mov
add
adc
pushf
fbstp
fstpl
leave
imul
mov
imul
ljmp
sbb
daa
mov
insb
mov
xor
out
adc
scas
jo
mov
cmpsl
ret
popf
sub
mov
adc
cmp
in
lret
jl
mov
sbb
sub
repnz
iret
mov
xchg
imul
push
fcomi
std
fimuls
jno
notl
negb
cmpsl
jae
sub
cmp
bound
imul
mov
xchg
cli
push
lds
pop
jne
mov
ljmp
pop
push
ljmp
stos
cltd
push
inc
rclb
fmulp
out
in
popf
push
popa
mov
jecxz
insb
and
popf
jge
push
pushf
sbb
sbb
popf
push
and
xchg
repnz
sub
ds
insl
out
pop
popa
and
out
nop
pop
fsts
jecxz
jp
shll
pop
fsubrs
add
or
or
mov
and
or
sti
xchg
add
rcrl
jg
or
test
in
cmp
xor
mov
in
mov
xor
mov
lods
jb
faddl
mov
xor
adc
mov
mov
push
leave
adc
mov
int
mov
inc
adc
daa
fisttps
pop
lret
sub
dec
repnz
testl
pop
or
jbe
jge
inc
popf
xor
int
cwtl
add
les
push
fucomi
mov
pop
std
test
xchg
mov
pop
cmpsb
aad
rorb
xorl
jns
mov
sahf
rcl
lea
lock
les
cmpsl
ds
leave
cmp
scas
fs
hlt
stos
imul
aas
mov
mov
fisubs
mov
inc
or
xchg
push
dec
jne
pusha
mov
and
imul
and
jae
scas
shl
jp
inc
gs
xor
insb
loop
mov
test
push
and
icebp
into
push
jp
outsl
lock
rol
scas
pop
les
adc
cmp
in
jmp
cmp
cmpsb
cmp
int
and
jle
cwtl
pop
jp
or
fwait
inc
fmulp
leave
fidivrl
fadd
imul
loop
adc
mov
xchg
fs
ds
sbb
dec
add
ljmp
shlb
scas
cmp
mov
test
aaa
frndint
pop
testb
imul
or
insl
jnp
test
aad
aas
popa
imul
scas
cltd
arpl
adc
loope
mov
adc
mov
and
aas
xor
mov
sub
adc
clc
imul
mov
mov
nop
dec
lahf
mov
sbb
mov
stos
push
call
mov
mov
sbb
aad
pop
lahf
add
jne
ja
cli
idivb
loope
aad
insb
jl
jns
mov
cmp
fsubrl
cmc
sub
xchg
into
js
mov
aam
dec
es
lds
mov
mov
pmuludq
add
je
xchg
cmp
sbb
and
pop
lret
jl
cs
sbb
sbb
out
lret
inc
in
and
jb
push
aam
in
stc
xchg
stos
xchg
sub
jbe
aaa
jno
fwait
inc
dec
xchg
jmp
add
ss
mov
rorl
push
ljmp
mov
mov
mov
pushf
mov
xlat
pop
mov
or
xchg
mov
test
fcompl
and
adc
stc
xchg
mov
jl
jmp
movsl
mov
mov
cwtl
shrl
adc
add
divb
aaa
jae
xchg
or
stc
sub
pushf
sbb
lock
aad
pop
sahf
ror
add
xor
lcall
pop
ficoml
out
add
dec
loope
xchg
pusha
xchg
dec
mov
lock
lea
mov
jl
xchg
ror
ret
mov
aas
jo
aaa
pop
fidivs
ret
das
test
cmp
in
dec
shlb
aaa
cmp
sbb
mov
mov
leave
roll
faddl
dec
xchg
imul
mov
inc
loope
jg
dec
dec
or
movsb
dec
dec
mov
repnz
ficompl
and
inc
push
sarb
dec
jp
nop
cmc
iret
adc
shlb
and
or
xor
xor
lret
xlat
jl
cs
aas
mov
out
mov
icebp
je
push
add
pop
dec
adc
sub
int
idiv
shll
jnp
test
inc
dec
mov
sti
adc
mov
rcll
or
add
jl
or
or
lods
es
std
mov
es
popa
sbb
imul
mulb
xlat
roll
mov
xor
cmp
sbb
bound
and
movb
orl
xchg
cmc
and
push
fistl
mov
mov
add
arpl
mov
inc
cli
icebp
cmpsl
jne
inc
mov
lret
sub
mov
mov
cmc
loope
mov
iret
pusha
push
fldcw
in
decl
insl
xor
sbb
call
aam
jns
mov
cli
push
pop
mov
push
gs
inc
push
sbbb
andb
insl
or
call
orl
or
jmp
sbb
ja
imul
dec
add
inc
imul
sub
sbb
out
outsb
ss
lahf
clc
xchg
popa
xchg
mov
adc
pop
sahf
arpl
leave
lahf
and
fistl
cmp
gs
cmp
loopne
pop
cltd
jns
xchg
out
aas
mov
lds
loopne
xor
ffreep
and
pop
and
sahf
add
mov
adc
in
mov
rolb
les
push
xchg
std
popf
xchg
cltd
ficomps
xor
add
adc
xchg
mov
add
mov
jl
push
xchg
jp
xor
stos
call
outsl
add
int3
mov
jg,pn
in
or
rorl
pusha
int
loopne
pushl
icebp
in
lcall
ret
addr16
clc
popf
fsubs
sub
push
and
in
add
inc
enter
push
ds
push
sub
adcb
sub
cmp
sub
loop
push
pop
inc
sbb
and
sarb
xor
dec
test
push
mov
jb
push
insl
into
es
lds
leave
mov
dec
rcl
add
or
sub
mov
mov
mov
nop
out
pop
sub
pop
out
push
pop
lods
test
sahf
add
ja
pop
insl
shrl
mov
jecxz
and
popa
stos
push
push
xor
push
xchg
lret
sarb
ret
dec
fildl
pop
scas
mov
add
bnd
jnp
aas
je
lret
add
dec
push
lahf
scas
lret
push
insb
or
in
cmp
pop
sub
mov
add
data16
pop
sub
cmp
das
sub
fnstsw
in
xor
mov
out
jl
in
ljmp
fdivl
mov
xor
sub
mov
lods
in
notb
rcrl
jns
outsb
or
subb
je
inc
adc
and
adc
in
pusha
xor
rorb
push
or
ja
sbb
clc
cs
pop
lods
add
xchg
and
and
ss
int3
lock
xchg
arpl
jl
mov
subl
push
sbb
in
rorl
jp
lcall
mov
enter
rol
push
add
fisubs
iret
insl
fsubs
mov
aas
lods
sub
mov
in
sbb
ja
test
rcrl
dec
pusha
lds
mov
jecxz
sub
pop
test
in
test
pop
mov
xor
mov
jl
sbb
aad
lahf
xchg
out
leave
sbb
shll
daa
mov
dec
in
add
orl
sbb
repz
push
mov
inc
pop
cmp
inc
popf
gs
outsl
ret
es
scas
adc
mov
out
pop
sti
pop
jnp
arpl
and
hlt
cmp
pusha
outsl
in
out
nop
and
or
ficoms
notb
push
out
pop
fwait
lcall
arpl
add
fsub
fistpll
adc
add
mov
add
inc
mov
xchg
test
in
in
xchg
pop
es
fmull
addr16
xchg
add
push
inc
mov
lds
lret
pop
leave
mov
pushf
rolb
popf
xor
mov
xor
mov
cmp
divl
jg
add
ss
scas
sbb
out
dec
xor
xchg
xchg
outsl
ret
adc
lods
test
in
std
push
lahf
mov
adc
mov
pop
mov
ficoml
stos
fsubrl
inc
popf
cli
cmpsl
hlt
clc
inc
enter
and
pop
mov
lds
fs
adc
push
inc
orb
fbstp
add
sbb
stos
dec
and
cmp
xor
ret
jmp
pop
jg
stos
mov
in
jp
imul
pop
jbe
push
sbb
subb
cmp
inc
push
arpl
fwait
mov
dec
cmp
push
imul
in
outsb
inc
enter
call
data16
sar
jecxz
push
xchg
xchg
insb
jl
int
cmc
test
pop
xchg
pop
fwait
daa
in
push
cld
pop
mov
adc
pop
out
mov
jle
addr16
sub
hlt
movsl
imull
lret
sub
icebp
and
cmp
hlt
sub
shrb
icebp
xor
ss
and
dec
push
xchg
js
cltd
jae
mov
popa
pop
or
inc
stc
jmp
hlt
dec
es
dec
ja
loopne
dec
lahf
icebp
jecxz
mov
dec
imul
cmp
test
xchg
mov
dec
jne
pop
enter
cmp
inc
hlt
mov
in
push
xchg
fistpl
jo
mov
in
jo
int3
cmc
adc
xchg
mov
cmp
sbb
or
mov
cltd
jo
cwtl
inc
or
rcrb
setbe
orl
out
or
mov
in
shlb
jmp
dec
stc
outsb
push
shll
add
out
imul
sub
mov
or
xchg
outsl
sub
jecxz
pop
loopne
or
fwait
xchg
in
je
fdivrl
adc
and
push
jne
fucomp
and
fldt
mov
mov
pop
sarb
andl
cs
sub
mov
mov
mov
pop
add
shll
mov
sbb
mov
das
lcall
xor
push
cmpsl
inc
js
xchg
mov
jae
mov
jp
add
stos
lock
je
sarl
fisttps
mov
inc
popf
ret
fcomp
push
mov
push
pop
les
pop
into
mull
jo
jge
leave
jmp
hlt
cmpsl
lods
mov
sbb
out
add
pop
adc
pop
cld
insl
mov
cmp
sbb
ja
mov
addr16
scas
adc
ja
rcrb
pusha
psrlw
fstps
pusha
mov
pop
sub
or
adc
mov
jg
fsts
dec
test
lea
loop
mov
sbb
sub
cltd
pushf
addl
lods
or
mov
imul
popf
cmp
jns
xor
test
adc
arpl
outsl
cmp
cs
lcall
jo
xchg
mov
insl
cmp
and
jg
or
out
sub
fs
jne
mov
cmc
mov
cmpsb
dec
push
jae
aad
sbb
mov
push
inc
adc
inc
pop
imul
in
jns
movsb
ret
dec
push
mov
std
ss
mov
in
popa
dec
lods
in
ja
add
push
ljmp
pop
push
lahf
stc
jecxz
mov
jmp
sub
push
out
fstps
and
adc
add
pushf
sub
sbb
sbb
cmpsl
aas
mov
scas
sub
in
lahf
lods
cmp
cmpsb
pop
fnsave
loope
stos
mov
out
dec
push
loop
xchg
daa
sub
aad
pop
dec
nop
ror
js
push
inc
add
arpl
inc
cmp
repz
jmp
cli
mov
inc
mov
incb
sbbb
jbe
or
jns
add
stos
sahf
cmc
dec
dec
jmp
mov
sahf
dec
mov
mov
mov
inc
xchg
pop
or
adc
xor
adc
sub
sbb
icebp
mov
sbb
scas
adc
shll
mov
fsubs
and
mov
inc
imul
insl
fdivrs
jecxz
subl
mov
dec
leave
pop
mov
dec
push
xor
stos
ja
mov
cld
push
rcrl
das
add
lahf
aaa
ret
mov
js
rorb
mov
push
cltd
cmp
insb
mov
lock
imul
pop
ljmp
adc
adc
pop
cmp
fiaddl
xchg
int3
mov
mov
mov
popf
cmpsb
rcll
stos
inc
ss
jg
push
and
loopne
dec
repnz
push
fisttpl
rcll
mov
pop
xor
sbb
lds
cmpsl
and
lods
movsl
inc
inc
loopne
loop
push
idivb
pop
popf
enter
sub
adc
and
mov
adc
mov
js
inc
lods
sbb
mov
mov
add
int3
repz
mov
inc
pusha
sbb
inc
lea
fisttpl
cmpsb
inc
cmc
arpl
shrl
lock
xor
shrb
and
inc
leave
sbb
not
loope
push
mov
add
or
inc
add
sti
dec
lods
and
push
sub
ljmp
jnp
fisttpl
add
pop
data16
fstpl
sbb
xorb
ret
push
ja
loop
and
mov
adc
out
xor
fs
lahf
fcoms
js
sub
cmpb
or
xchg
pop
xchg
icebp
jne
or
or
add
add
sbb
or
mov
inc
mov
arpl
jl
stos
icebp
xchg
add
adc
pusha
cld
rcrb
mov
repnz
mov
jae
popf
and
stc
add
xor
jnp
loope
push
outsb
cmp
nop
inc
pop
cmc
push
pop
inc
mov
mov
push
push
cmpsb
cmpsl
fimuls
imulb
adc
xchg
xchg
push
lea
dec
das
pop
ljmp
mov
add
shll
leave
mov
pop
xor
inc
cwtl
push
jbe
pop
xchg
in
pop
dec
push
shll
inc
neg
sbb
push
pop
es
xchg
sub
pop
enter
outsb
sar
mov
stos
jb
decl
gs
mov
addr16
pop
inc
sub
inc
xchg
pop
push
xchg
movb
mov
popl
mov
cs
clc
push
je
and
adc
scas
or
aas
push
mov
enter
je
xor
call
es
pop
adc
xchg
scas
sub
xchg
lcall
das
mov
daa
push
mov
fstp
outsl
xchg
rorl
fsubr
dec
jg
les
lcall
js
push
jbe
sub
jae
scas
mov
sub
in
push
sbb
les
mov
pop
add
dec
add
and
jg
out
xchg
and
mov
rcr
add
imul
fildll
leave
inc
clc
fldcw
sub
mov
mov
lret
ljmp
sbb
sbb
fcoms
xor
and
jmp
mov
inc
jno
idivl
aaa
popaw
push
aaa
mov
mov
dec
dec
jb
cwtl
mov
push
popa
dec
jge
and
iret
adc
scas
push
xlat
xchg
inc
mov
adcb
call
mov
outsl
addl
mov
pop
sbbb
pop
btc
pop
xorl
pop
sub
or
mov
xchg
adc
push
stc
xor
cmpsb
xchg
sbb
addr16
inc
mov
push
and
rcrl
dec
dec
jns
arpl
xchg
imul
or
fcomps
xor
lcall
mov
push
lcall
xlat
lea
scas
pop
jle
mov
ficompl
sub
pop
mov
les
pop
lock
push
divl
or
sbb
mull
jmp
push
jne
inc
outsb
mov
jae
or
adc
sub
mov
adc
push
mov
orb
push
cmp
sbb
loopne
test
jnp
pop
pop
jb
test
imul
cmc
xor
xor
inc
dec
shrl
lcall
add
cmp
xchg
push
jne
xchg
pop
sbb
fadds
and
jle
sub
cmp
pop
push
xor
adc
push
add
adc
or
lret
pop
stos
sub
daa
sub
and
sbb
mov
push
cmp
jmp
mov
mov
pop
and
out
icebp
lods
dec
dec
adc
mov
ror
fisubrs
lods
lret
pushf
daa
jne
insl
inc
jp
push
mov
aaa
test
adc
mov
and
sub
inc
jno
cmp
or
sub
pop
and
testb
push
sahf
sbb
sbb
ret
push
lds
je
rcrb
xchg
push
jae
mov
pop
xlat
mov
add
jg
lods
movb
gs
mov
dec
aas
stos
iret
dec
adcl
pop
adc
cmc
lock
call
outsl
mov
mov
and
movsl
sbb
push
xchg
pop
or
cmc
sub
cwtl
ds
testl
out
sub
dec
outsb
icebp
lea
sbb
fwait
sbb
out
inc
std
sub
insb
add
inc
mov
dec
mov
aad
iret
in
mov
inc
shlb
aad
sub
out
pop
repnz
pop
inc
adc
mov
sbb
cmp
cmp
or
data16
mov
add
pusha
into
xchg
shlb
lret
call
sub
in
stos
dec
inc
xchg
cmp
push
mov
jp
and
sbb
add
fucomip
repnz
xor
sbb
pop
dec
test
repz
inc
outsb
repz
cmp
lcall
dec
fcompl
je
xchg
out
cld
xor
dec
flds
lea
ret
pop
test
and
sub
pop
fildll
fidivrs
cmc
int
add
pop
cmp
fisubl
out
mov
dec
test
mov
xor
je
andl
ret
push
in
int3
outsl
clc
fs
loopne
or
inc
mov
leave
dec
xlat
imul
jle
std
xor
jnp
stos
jge
cltd
mov
push
das
popf
icebp
jns
dec
or
mov
cmp
dec
pop
and
mov
lahf
int3
and
adc
lcall
adc
pop
aas
shll
inc
ds
hlt
and
lods
xor
xor
leave
cmp
mov
movsl
ljmp
loopne
adc
out
lea
mov
mov
stc
mov
cmpsb
push
loopne
sti
scas
mov
jge
mov
cli
xor
or
push
and
cmp
and
push
mov
sub
ret
mov
push
rorl
sahf
cmp
cmpsb
ss
ret
sub
mov
and
pop
mov
out
push
lret
jle
mov
jno
shlb
int
ret
xor
dec
into
xchg
loopw
jno
mov
mov
in
inc
or
add
mov
cmp
sub
fisttps
loop
mov
or
rorl
in
jp
xchg
test
cmp
pop
xchg
loope
orl
push
popa
lea
or
ss
gs
mov
inc
push
and
jl
xor
jp
xchg
sub
mov
fldenv
rcl
jle
pop
gs
iret
mov
repz
lods
sti
scas
mov
add
loopne
aaa
out
pop
sbb
mov
bound
cmp
rorb
test
imul
inc
das
and
clc
test
xor
xchg
outsl
jns
lahf
dec
cmp
lret
lods
call
aam
jmp
js
inc
push
and
pop
fmull
imul
dec
subb
outsb
or
pop
lods
add
jle
fstpl
arpl
ret
xchg
mov
inc
das
cwtl
out
js
cmp
repnz
cmp
mov
lods
pusha
cld
add
lock
pop
cmc
add
nop
lahf
jbe
cmpsl
out
and
aad
jmp
jb
add
pop
mov
shlb
xchg
repnz
mov
push
xor
and
xor
dec
or
scas
sbb
dec
inc
repnz
and
or
add
in
fsubl
outsl
shrl
add
push
xchg
repnz
jp
lds
mov
push
sti
movsb
adc
xchg
xchg
push
out
stc
out
xchg
loop
add
enter
insl
mov
cltd
xchg
dec
rcrb
insl
pop
push
add
out
pop
xchg
cmp
xor
mov
mov
sub
sti
xor
jecxz
adc
xlat
push
sbb
cmp
mov
xchg
call
mov
and
mov
dec
sub
mov
insl
jmp
pop
pop
sbb
fildl
cmp
inc
in
cmp
push
xchg
jg
test
jo
xchg
mov
sbbl
notl
mov
push
or
and
enter
or
pop
pop
jo
stos
cmp
popa
lea
mov
pushf
pop
stos
mov
and
and
sub
cmpsl
adc
jo
cltd
daa
aam
adcb
repnz
sub
movsl
push
add
adc
sub
inc
adc
inc
cmp
sub
dec
cmpsb
les
sti
out
add
push
dec
push
jge
jge
inc
cmp
jae
imul
sbb
std
pop
movsl
es
stc
cwtl
out
sub
push
rolb
inc
adc
xor
loope
lods
arpl
xchg
sbb
iret
ds
mul
ljmp
add
jmp
xchg
cmp
fidivl
push
cmp
fiadds
rcrl
push
aad
or
sub
xor
jl
adc
jg
arpl
sarl
ret
insb
adc
fdivp
mov
sbb
adc
and
aaa
out
mov
lods
pop
imul
jno
and
loopne
jp
push
adc
jge
in
andb
jo
cwtl
mov
fs
int
mov
adc
pop
fldenv
adc
and
cmc
shrl
inc
aam
mov
pop
xchg
jecxz
xor
cli
jl
dec
popa
mov
test
pop
ret
out
sbb
mov
pusha
dec
cmpsl
aaa
scas
inc
cmpsl
stc
rclb
lahf
lret
jns
adc
cld
scas
shr
or
mov
or
add
mov
sub
jp
bound
xchg
mov
mov
stos
mov
cli
mov
mov
lcall
js
inc
add
out
insl
sub
je
mov
sub
cld
mov
dec
mov
jmp
mov
add
jge
and
bound
iret
scas
pushf
sbb
es
movsl
mov
sbb
mov
insl
xor
mov
lea
jbe
or
inc
gs
jle
push
loopne
call
aaa
es
mov
les
or
or
mov
jl
imul
movsl
dec
sub
ja,pt
push
cli
mov
cmc
or
dec
sub
je
lret
fisubrs
xchg
ljmp
add
pusha
sub
xlat
mov
push
pop
and
ud0
aas
ja
xor
cmpl
pop
ja
xor
lret
sub
pop
cmc
gs
lahf
fnstcw
jmp
sbb
and
push
and
mov
cmp
xchg
outsb
dec
push
gs
xorl
fs
addb
sahf
adc
sub
test
loop
jmp
fs
daa
pop
outsb
jge
in
loop
xchg
cmp
data16
sets
sbb
rcrl
mov
je
pop
je
sbb
popa
jl
lods
in
push
fldt
cmpsl
sarb
mov
lcall
mov
lods
or
out
sub
xlat
jo
adc
inc
inc
push
add
mov
mov
push
xchg
mov
adc
sub
and
lods
filds
ret
setne
sub
xor
adc
shrl
addl
add
jne
adc
aas
cltd
adc
pop
cltd
mov
rcr
enter
test
jne
push
test
inc
adc
movsl
mov
xchg
jmp
nop
sub
pop
movl
out
jb
repz
sbb
js
test
mov
daa
xor
lret
popf
in
jb
test
inc
insl
popl
xor
or
or
scas
das
or
mov
pop
je
stc
movsl
mov
inc
sbb
leave
jg
ret
cltd
cld
sbb
notb
les
sti
in
cltd
dec
cltd
xchg
movsl
imulb
push
mov
fstps
test
sub
scas
mov
out
push
dec
sbb
xchg
lods
pop
push
pop
mov
insb
fwait
mov
cltd
fwait
stos
lcall
notl
pushf
inc
out
stos
cmp
jb
imulb
lahf
push
and
and
push
pop
lock
mov
ds
out
addr16
jno
push
jne
cwtl
mov
lret
rcl
push
adc
scas
icebp
das
je
negb
or
mov
imul
mov
rcrb
das
ficoml
lods
mov
nop
mov
xchg
std
push
xor
cmpsl
adc
push
jo
add
cmp
in
stos
clc
repz
mov
arpl
push
and
push
loopne
nop
dec
jecxz
lds
mov
add
cmp
mov
mov
js
or
cwtl
es
in
and
push
pop
jg
push
rorl
mov
jg
mov
ret
insb
push
mov
and
cmp
jecxz
push
or
sahf
mov
stos
cltd
sub
adc
sub
pop
je
andb
and
and
dec
int3
lds
fstpt
mov
adc
push
pop
and
push
in
lcall
scas
xchg
sbb
aad
push
jp
outsb
cmc
mov
aas
mov
daa
adcb
mov
js
xor
loope
push
mov
ljmp
push
xchg
adc
pop
out
ror
add
sbb
loope
jp
je
lea
aaa
add
jecxz
rcr
dec
int
lret
les
pop
outsb
aam
mov
or
mov
lods
mov
in
fmull
adc
push
or
cmp
adc
xchg
daa
or
sub
cmc
mov
adc
jmp
adc
js
stc
les
mov
adc
rorl
xchg
sbb
sub
testb
in
add
xor
mov
mov
out
je
shlb
xlat
inc
sub
cs
dec
stc
cmp
inc
lahf
push
aad
aaa
jp
mov
popf
iret
and
ret
sbb
sbb
dec
notl
jae
mov
out
sub
js
ror
pop
nop
add
in
mov
insl
fidivrl
mov
xchg
mov
popa
test
or
push
pop
jp
dec
push
cs
ljmp
jno
inc
push
lcall
ja
mov
call
int3
enter
std
cli
cmp
and
insb
cmp
cmpsb
subb
jp
dec
sub
enter
test
je
lods
pusha
mov
fsts
and
cli
daa
mov
stos
rolb
jg
das
cmpsb
scas
int3
push
test
and
mov
dec
mov
jg
xchg
pop
push
call
sti
xchg
and
jmp
pop
jnp
scas
sti
add
inc
fnsetpm(287
add
inc
or
fcmovbe
loope
cli
in
fs
jecxz
negb
jmp
mov
mov
insl
xlat
popa
mov
scas
fwait
jns
add
fstps
push
call
xchg
push
pop
jle
bound
jae
cmp
pop
inc
leave
stos
sahf
repz
or
jecxz
xchg
or
add
and
mov
shrl
mov
xchg
mov
ficoms
xorb
repnz
pop
inc
pop
inc
sbb
mov
jbe
sub
test
bound
mov
mov
cmp
lds
adc
push
pop
pop
sahf
or
lidtl
xchg
ret
shlb
ficoms
cmpsb
xchg
jmp
das
lea
push
jp
sar
xlat
mov
pushw
sub
xor
adc
push
xor
lds
mov
cmc
push
mov
xor
test
fbld
hlt
pushf
mov
mov
add
mov
add
shrb
call
rolb
repz
shrl
cld
inc
xor
pushf
mov
xchg
cli
mov
sub
jge
nop
roll
es
push
xchg
xor
pop
xor
push
subl
mov
add
pop
mov
cmp
test
push
inc
fidivl
test
test
jb
dec
ret
push
and
pop
daa
mov
repnz
cwtl
jno
cmp
adc
insl
mov
fildll
cmp
xchg
aam
cltd
push
imul
roll
add
jo
addr16
ljmp
cltd
lret
jmp
mov
xor
mov
repz
fistpll
xchg
pushf
shr
outsl
iret
push
dec
add
mov
push
idivb
cs
jp
and
mov
loopne
ja
sbb
push
lods
mov
xlat
or
loope
and
or
stc
pop
pop
pop
mov
mov
js
ljmp
lods
jecxz
out
sbb
cwtl
inc
inc
aad
and
mov
enter
outsb
push
dec
add
fcoms
pop
std
fdivrp
xchg
les
pop
mov
and
add
push
sub
fstl
xchg
or
ss
sbb
cmp
and
mov
cli
adc
jnp
sarb
jno
sbb
jecxz
lea
push
insl
faddl
cmp
mov
enter
std
dec
mov
sub
sbb
sub
mov
and
add
loopne
or
adc
repz
sbb
jae
enter
bound
aaa
or
push
push
popl
loope
lock
or
pop
add
inc
xchg
sub
push
and
cmp
push
mov
leave
cld
out
xchg
xor
sbb
repnz
les
push
div
inc
rorb
pop
mov
stc
aas
cwtl
aas
aad
pop
add
aam
repnz
jl
sar
test
sub
inc
adc
pushf
aas
pushf
sub
xor
push
nop
ret
push
cmp
inc
xorl
or
cli
or
in
icebp
pop
call
add
scas
stos
pop
pusha
cmpsl
into
call
in
loopne
xchg
jae
jbe
rcrb
push
jne
outsb
jle
dec
dec
pop
addr16
es
mov
imul
cmc
cmp
adc
sbb
xchg
enter
sub
js
mov
pop
mov
ret
xchg
mov
pop
pusha
outsl
and
setne
and
xor
loope
bound
sub
movsb
xchg
push
inc
xor
xchg
pop
cmpsl
dec
xor
je
decl
inc
pop
pushf
stc
stc
jne
movl
push
addr16
in
loope
jecxz
out
les
mov
idivb
add
adc
aam
xchg
roll
pushf
inc
mov
pop
cmpsl
sarb
cmp
int3
inc
mov
imul
adc
repz
add
je
bound
mov
and
add
inc
sbb
lock
inc
mov
inc
mov
rolb
ja
aas
sub
cs
imul
and
sarl
xchg
loope
out
sub
sbb
sub
jne
addb
ret
jns
rcll
lock
lret
sarb
int3
jp
pop
mov
and
imul
add
xor
or
cld
loop
add
sub
add
es
dec
adc
jmp
pop
das
popf
cmpsl
in
imul
es
mov
fs
xchg
and
pop
mov
enter
xchg
push
sub
popl
xor
pop
sti
xor
pop
or
pop
sti
ret
int
mov
daa
mov
mov
pop
dec
inc
mov
ret
lahf
add
repnz
addr16
pop
nop
dec
pop
out
dec
pop
push
pop
xchg
push
in
dec
xchg
adc
mov
inc
or
pusha
inc
idivb
adc
in
sbb
mov
jne
ja
dec
add
jb
fwait
xor
inc
sub
push
jae
mov
lods
aas
jmp
pop
pop
adc
jb
mov
fisubs
inc
or
aam
fldt
imul
sbb
adc
add
lahf
dec
sbb
mov
inc
xchg
push
cmp
adc
jecxz
popf
push
repz
pop
mov
inc
pop
or
add
fcoml
out
and
cli
outsl
or
xor
rcrl
mov
mov
adc
pop
inc
fiaddl
add
cs
pop
fstpt
into
daa
xchg
jmp
dec
and
or
dec
push
xor
dec
stos
add
mov
or
cmp
out
xchg
push
add
lret
scas
cmpsl
push
int3
sub
and
ror
out
test
lahf
sub
add
jb
ja
into
cmpsl
arpl
div
pop
ja
mov
int3
outsb
xor
pop
mov
mov
rorl
in
movl
mov
sarl
dec
mov
lahf
sbb
or
out
orb
popl
mov
fsts
arpl
int
mov
mov
in
sbb
out
xchg
int3
push
xchg
cmpsl
movsb
jg
mov
lahf
dec
jg
rclb
clc
pusha
negb
int3
cmp
cltd
adc
xor
xchg
inc
fildl
cmc
push
lods
jmp
mov
jbe
fsubs
push
pushf
sub
dec
nop
cmp
shll
jecxz
xor
pop
cmpsb
lret
lock
cmpsb
scas
cmp
sub
pusha
cmp
nop
sar
icebp
mov
dec
jae
test
push
xchg
in
adcb
or
data16
imul
ss
xchg
lods
dec
cmc
sbb
cmp
or
fdivs
dec
arpl
call
sub
notb
shrl
sbb
cmp
ds
fsubr
lret
nop
jno
jecxz
scas
ret
jns
out
sbb
pop
fs
or
bound
das
sbbb
dec
sbb
ret
scas
adc
and
and
aad
test
mov
add
lods
arpl
pop
call
subb
jle
call
insl
add
test
ret
cmc
imul
lods
mov
andl
clc
push
or
loopne,pt
lods
dec
cmp
jg
xchg
xchg
lahf
and
stos
leave
push
xor
pop
je
std
lcall
mov
jle
fbstp
insl
dec
cli
loop
cmpsl
repnz
test
fstl
aas
jl
cltd
bound
subb
rorb
test
aas
jb
les
and
aad
mov
fs
push
and
and
adc
xor
inc
mov
add
hlt
inc
aas
sub
mov
sub
andl
movb
lds
mov
mov
jmp
xchg
pusha
ja
shrb
add
or
outsl
std
test
in
xchg
sbb
xor
lcall
push
mov
cmp
xchg
leave
sbbb
sti
repnz
inc
jo
sub
addr16
pop
sbb
aad
xor
adc
jmp
fldl
dec
jmp
sbb
and
dec
fwait
xchg
ds
sar
add
mov
pop
xorb
cs
in
fwait
sub
or
dec
nop
mov
sbb
push
bound
xor
cmp
and
push
cld
loopne
xor
out
or
insb
mov
cld
or
aad
test
ljmp
test
mov
mov
in
and
shlb
pop
jecxz
dec
xchg
push
xor
adc
stos
jle
adc
scas
out
or
cmpsl
stc
mov
cmp
pop
rcll
jnp
mov
push
jbe
repz
push
js
sub
sub
adc
cmpsl
and
int
and
mov
adc
pop
lock
test
nop
xlat
arpl
xor
jnp
pushf
call
sub
insl
cmpsl
push
cmp
sbb
push
dec
mov
add
aaa
stos
mov
inc
jb
mov
lret
divl
push
mov
pusha
mov
pop
ss
xchg
fwait
cli
or
ds
xor
mov
aas
mov
inc
pop
cwtl
or
bound
cld
jae
sahf
insl
imul
add
push
jg
popf
cmpsb
in
xor
lds
adc
mov
pop
cmp
and
cmpsl
and
cwtl
sti
insb
loope
enter
frstor
add
int
push
fs
mov
fcompl
inc
inc
fnstsw
mov
out
adc
or
jg
or
cmp
lahf
les
add
push
int
arpl
mov
mov
stos
mov
ja
mov
ja
mov
add
add
pop
mov
sbb
push
lret
cmp
iret
xchg
sub
sahf
push
data16
pop
sbb
add
jae
or
dec
xchg
outsb
pushl
cltd
fidivl
imul
pop
xchg
arpl
in
jne
dec
sub
stos
stc
mov
jg
xchg
jecxz
lock
movsl
jbe
jb
dec
add
sbb
test
jo
cmp
filds
inc
stc
fcompl
ss
xchg
arpl
sahf
xor
xor
dec
jp
and
inc
push
lret
cmp
cwtl
jg
xor
mov
and
aas
fstp
sub
mov
sbb
adc
mov
sub
dec
imul
inc
inc
pop
adc
adc
inc
add
or
imul
add
mov
stc
jl
xchg
out
sbb
fists
sbbl
adc
mov
mov
mov
xor
lock
les
mov
js
iret
sbb
hlt
push
xchg
bound
cld
sub
shll
int3
push
andl
ss
pusha
movsl
cmp
rclb
sub
mov
adc
scas
movsb
ljmp
dec
daa
mov
ss
das
mov
dec
daa
bound
jmp
aaa
add
scas
repz
das
inc
push
or
mov
mov
data16
pop
mov
sbb
out
movsb
cwtl
bound
add
add
add
andb
scas
lret
add
push
pop
or
pop
add
inc
mov
and
jp
xchg
ficomps
push
je
in
adc
jo
jnp
push
cmp
invlpg
popf
jnp
cmp
mov
insb
jge
cwtl
movsb
inc
fs
and
mov
outsl
jg
nop
xchg
test
iret
cli
lods
pop
cmp
int3
out
bound
xorb
dec
daa
sub
inc
adc
or
enter
add
jg
sub
jle
fldcw
add
sub
cmp
roll
mov
popf
in
lods
jno
in
lods
push
adc
lds
xchg
push
testb
cmc
cld
repnz
nop
pop
mov
aaa
or
inc
lret
je
push
mov
push
fucomp
xor
xor
std
xchg
stos
jae
or
pusha
or
loope
cmpsb
or
fstp
push
mov
divl
rcrl
roll
notl
dec
mov
dec
add
push
xchg
aad
lret
mov
adc
roll
int3
leave
dec
sahf
jle
xchg
stos
adc
push
jp
insb
repnz
cs
xor
repz
pop
cmp
add
adc
popa
pop
imul
das
imul
mov
sub
addr16
sbb
fsts
fmul
xchg
scas
xchg
mov
sbb
add
mov
and
sti
das
adc
cmpsl
pop
cli
add
fcmovnbe
sbb
iret
into
jmp
arpl
in
sbb
xor
jmp
mov
call
and
das
add
cltd
dec
sub
sarb
xchg
inc
pop
or
adc
test
lods
or
lret
push
cmpsl
rol
in
dec
dec
or
mov
mov
stos
pop
in
add
push
cwtl
xchg
lods
add
fcoml
push
xchg
mov
rcrb
or
xor
and
jnp
imul
or
sub
sbbb
cmp
jae
mov
int
jbe
daa
push
push
aam
sub
loop
stos
mov
fwait
cmp
jo
xchg
fists
xchg
andb
pop
jmp
loopne
dec
imul
sub
and
push
adc
add
xchg
lock
scas
jle
call
out
shrb
sbb
push
shlb
fdiv
and
mov
cmp
stos
sub
pushf
stos
mov
loope
push
shr
mov
pop
add
add
or
pop
xor
cmp
or
dec
mov
pop
mov
push
in
push
shrl
je
es
pop
mov
inc
add
or
mov
imulb
shlb
lret
dec
pop
dec
fidivl
aam
cld
cmp
mov
mov
fstpt
insb
scas
sti
xor
lods
and
nop
pop
sub
xchg
cmp
std
jns
dec
pop
test
xlat
mov
loope
jl
outsl
pop
out
fisttpll
jnp
or
fisttps
mov
in
dec
incl
xor
jb
mov
ror
push
cmp
stc
xchg
rdpmc
pushf
sub
jecxz
mov
and
and
jne
jne
and
subl
jmp
in
push
sub
shll
rolb
push
xor
in
dec
insl
cmpsl
xor
xor
divb
dec
dec
dec
in
inc
lcall
fs
ror
mov
iret
testl
fsts
les
jp
je
push
ds
lcall
pop
enter
leave
and
testl
dec
mov
dec
cmpsb
mov
adc
loope
aaa
mov
std
inc
pop
xchg
push
repz
mov
pop
cmp
pop
sbb
stc
adc
test
cmp
cli
rolb
xor
sahf
sub
push
or
mov
lcall
pop
jl
loop
arpl
inc
into
inc
lods
shl
popf
mov
fsubl
insb
ror
jne
xchg
ss
sub
lret
je
js
lds
je
jmp
scas
mulb
sbb
sbb
outsb
fsubl
adc
sahf
pop
sub
test
or
sbb
fcmove
idivb
cmp
orl
pop
pop
outsb
ror
sub
ret
movb
sbb
pop
movsb
push
nop
mov
fadds
xchg
call
popa
lock
push
push
jnp
jb
push
outsl
dec
sbb
or
adcb
pop
test
adc
cwtl
sub
pusha
sbb
clc
fidivrl
insb
mov
cmp
push
fsubl
enter
mull
push
inc
imul
mov
aad
mov
mov
lret
int3
or
iret
cmp
retw
outsb
sub
lods
int3
push
mov
or
sbb
fstps
jl
lcall
repz
loope
bound
test
fdivp
mov
lret
push
test
mov
xchg
outsb
xchg
cld
out
btrl
jns
sbb
cmp
fimull
negl
xor
cli
and
imul
sti
into
sub
or
dec
cmpsb
rorb
and
dec
out
mov
adc
inc
or
sub
aaa
or
xlat
xchg
jbe
mov
mov
popa
adc
mov
mov
push
xchg
xor
lock
jg
xchg
imul
neg
inc
das
adc
cmp
mov
dec
and
sbb
aaa
or
mov
loop
push
out
dec
add
pop
cmpsl
mov
push
ljmp
cmpsl
pop
push
mov
and
adc
aas
imul
test
dec
lret
ret
shrl
pop
xchg
repz
push
in
or
mov
push
push
lea
dec
inc
sbb
repz
xchg
loopne
sarb
dec
sub
pop
xchg
dec
inc
inc
setl
int3
xchg
mov
push
cld
cmc
pusha
and
jp
pop
sbb
daa
subl
das
mov
jle
xor
ficoms
mov
mov
cmp
mov
xchg
adc
mov
ror
nop
lret
in
and
pop
lock
jne
fisubrl
ljmp
xchg
movsl
cmp
pop
cmp
sub
mov
aaa
and
imul
mov
sbb
jg
dec
jg
xchg
lods
xor
aas
mov
enter
dec
push
ja
sub
into
in
xchg
sub
jb
jl
inc
aad
cmpsl
ds
cmpsl
adc
jb
sbb
ljmp
out
pop
loop
lret
and
xor
mov
lret
das
aam
jp
cmp
add
jae
mov
aam
sahf
mov
incb
loop
ret
push
mov
movsb
pop
sahf
pop
inc
leave
cmp
icebp
imul
stc
sbb
movsl
imul
rclb
or
cmp
fsts
test
mov
add
push
dec
inc
mov
sahf
outsl
lods
lahf
push
push
sbb
adc
fcmovnbe
nop
jecxz
sub
ficoml
xchg
or
and
sbb
xor
repz
sbb
cmpsb
data16
or
add
int
test
scas
sub
mov
push
stc
jp
pop
sub
push
inc
cmp
push
cmp
icebp
jle
or
lea
mov
test
xchg
fs
cld
test
leave
xor
xlat
inc
lret
and
mov
scas
cli
imul
xchg
pop
scas
jg
push
pop
or
inc
jno
mov
mov
sbb
sub
mov
sbb
and
cmp
jle
fsub
mov
dec
idiv
sub
pop
dec
bound
jbe
aaa
out
popf
test
xchg
push
xchg
xchg
dec
cmpsl
test
xchg
inc
add
std
xlat
adc
repz
push
fldcw
out
out
das
filds
pop
xor
divb
fsubp
mov
aam
xorb
lods
jp
popf
mov
cwtl
jns
enter
push
fsubs
mov
xorb
adcl
and
pop
testl
test
pop
nopl
fwait
inc
mov
out
push
and
adc
stos
add
adc
xchg
dec
sbb
fisubrl
loop
test
pop
or
add
sarl
jns
out
dec
ret
addr16
in
dec
jp
mov
add
popa
cmc
int3
inc
adc
pop
loope
jnp
push
sti
sub
add
shrl
aam
test
sub
jnp
push
inc
fldt
aad
fucompp
mov
or
sub
sahf
inc
clc
jl
or
push
out
ret
cmp
test
sahf
ss
addr16
incl
cmp
mov
movsl
popf
xor
cmpsl
gs
aas
jne
in
enter
jl
pop
mov
cmp
sbb
xchg
jl,pn
cmp
lcall
pusha
jmp
xor
fcomi
stc
lds
lcall
adc
push
rol
dec
ljmp
cmp
pop
stc
pusha
loope
dec
iret
jl
xchg
stos
inc
add
shr
popl
mov
daa
ret
and
decb
sbb
inc
js
mov
pushf
xchg
inc
pop
inc
sahf
dec
push
or
clc
and
and
orb
icebp
mov
adc
add
scas
xchg
scas
and
es
cmp
mov
sahf
xor
jb
ret
fwait
std
popa
or
mov
int
int3
pop
adc
sahf
rcll
push
out
cvtps2pi
ljmp
repnz
fdivr
and
pop
loopne
shll
pop
shlb
dec
shl
push
jmp
mov
mov
jg
fmul
std
subb
xor
in
pushf
push
add
scas
mov
and
jo
jmp
push
adc
xchg
es
sub
mov
xchg
jbe
add
inc
xlat
dec
out
sub
dec
cwtl
push
and
movl
inc
mov
push
or
test
add
cmc
dec
fstpl
rorl
jae
push
test
aas
lret
movsb
imul
ljmp
ret
fstl
aas
in
jge
les
mov
fdivs
push
or
stos
xor
jbe
call
fistpll
rclb
pop
decb
or
in
pop
xchg
pushf
push
lock
int
lock
xor
add
xchg
aas
mulb
ljmp
outsb
sbb
lret
inc
int3
test
jmp
pushf
test
arpl
jp
xchg
inc
fwait
bound
mov
test
scas
nop
std
popa
pop
inc
arpl
arpl
mov
cli
cmp
sbb
sub
sbb
call
add
bound
cld
xlat
or
cmp
xor
xchg
stc
les
dec
xchg
push
mov
das
lcall
inc
lea
jbe
mov
push
call
and
mov
lret
xchg
outsl
cmp
out
imul
jbe
push
repz
or
shr
int3
dec
inc
pop
sub
cwtl
into
outsl
lock
xchg
cwtl
xor
jns
ljmp
sahf
mov
insl
rclb
ret
adc
repz
loopne
push
aaa
out
pop
lock
inc
inc
mov
dec
jg
adc
cwtl
imul
negl
adcb
aad
dec
movsl
and
lret
shl
outsb
push
adc
jg
or
insl
xor
mov
cs
pushl
insb
test
cwtl
cltd
adc
add
out
and
scas
push
mov
ljmp
fildll
sub
js
sbb
sbb
cmpsb
sahf
adc
sti
and
jo
xor
sbb
lea
adc
sbb
mov
mov
repz
sbb
xchg
ja
orb
xacquire
clc
xor
xchg
test
loopne
call
sub
mov
in
dec
and
cmp
mov
std
push
inc
icebp
mov
cmp
adc
pop
cmc
cld
das
fimull
mov
dec
or
aas
imul
push
jo
and
imulb
mov
cmpsl
dec
or
and
mov
mov
adc
bound
leave
push
scas
daa
pop
sbb
push
das
insb
je
mov
aad
and
popf
adc
pop
dec
pop
add
neg
bswap
and
or
cli
into
push
mov
xlat
xor
jns
mov
mov
andb
xlat
mov
push
xchg
iret
fs
or
add
and
pop
and
das
mov
mov
mov
add
lahf
xchg
scas
mov
mov
jo
cmp
shll
inc
aad
mov
and
mov
ja
push
add
addr16
fldt
mov
mov
sbb
mov
pop
pop
xchg
or
out
jmp
or
add
cmp
movswl
aas
mov
sub
mov
ss
xchg
cli
fwait
mov
popf
inc
stos
imul
push
xchg
jmp
cmc
cli
mov
jp
call
jl
mov
outsl
dec
sarb
imul
push
mov
jge
int
lods
sbb
call
pop
test
xchg
add
dec
in
rcrl
leave
fwait
or
sbb
or
sarl
jge
adc
inc
std
out
or
mov
loopne
mov
bound
pop
jp
mov
cmp
sub
adc
jmp
pop
mov
outsb
cld
ss
sub
add
lea
loope
mov
cs
out
jno
jae
cmpb
mov
mov
enter
imul
stc
inc
je
jmp
dec
inc
mov
addr16
jno
rcl
xor
stc
inc
and
icebp
fisubs
push
pusha
gs
mov
pop
imul
or
xlat
add
outsl
ss
pop
enter
or
jo
lcall
ljmp
cmp
mov
loope
lea
cmp
cld
push
pop
add
push
mov
xchg
sub
jle
cwtl
xor
and
jb
jb
xlat
and
push
pop
mov
jnp
sar
repnz
mov
sub
pop
sbb
lret
insl
or
das
in
test
push
andb
cs
jmp
pop
adcb
dec
pop
mov
movsb
cmp
and
enter
cwtl
adc
or
jg
loope
mov
jb
jecxz
push
sub
jmp
movb
mov
pop
ret
hlt
rcrl
pop
xor
sub
sahf
cltd
xor
fnstcw
jno
or
shl
inc
aam
jge
sbb
out
jmp
adc
addr16
mov
iret
push
sbb
dec
add
push
mov
jne
loopne
lret
in
lods
mov
mull
pop
or
iret
in
xor
push
sbb
xchg
in
jnp
jb
jnp
push
aaa
or
add
int
and
fadd
negb
arpl
push
fiadds
bound
xor
insb
icebp
aad
cmp
jbe
pushf
fsubrs
rcll
lcall
jns
mov
jmp
scas
sub
insb
rcr
push
adc
fists
movsb
xor
xchg
cli
pop
cmpsb
in
mov
sub
or
sbb
test
mov
mov
lock
jbe
jne
jae
mov
sbb
or
addr16
mov
mov
fistps
and
mov
cmp
int
pop
insl
sahf
xor
xchg
jg
lahf
jg
lock
rcll
jnp
hlt
roll
inc
jno
xlat
mov
jnp
iret
xchg
stos
push
popa
lds
sbb
pop
in
cmp
jg
sbb
pop
push
xor
jge
movsl
lcall
add
sbb
std
pusha
pop
mov
mov
push
test
stos
rcrl
mov
sarl
jae
test
xor
out
mov
stc
icebp
pop
aad
aam
cmp
arpl
lods
jecxz
loopne
pop
ss
or
and
mov
ss
xor
hlt
cltd
inc
jg
in
out
inc
mov
insl
mov
jmp
pushf
mov
and
jg
push
shlb
dec
lock
pusha
inc
add
sbb
sub
mov
lods
sbb
mov
arpl
jnp
mov
push
sbb
mov
push
mov
cmp
sbb
pop
sbb
js
bnd
or
mov
cmp
movsb
cld
out
int3
push
cwtl
inc
push
inc
es
jne
cmpsb
sbb
xchg
pop
xor
pop
out
in
pop
scas
sbb
outsb
jne
inc
pop
sbb
jbe
lods
fadds
test
popf
mov
outsb
sbb
xchg
mov
mov
enter
mov
movsl
popa
pop
inc
add
out
pop
jle
lret
xchg
mov
cmc
add
pop
adc
push
jno
inc
enter
add
and
fucomip
adc
and
sub
mov
cwtl
jecxz
repnz
pop
xor
cmp
insl
lcall
loop
sti
mov
lds
daa
or
es
test
data16
inc
stos
jae
xor
in
sbb
pop
fdivl
pop
movl
test
mov
aas
jns
and
jp
call
pop
pop
inc
nop
pop
stos
data16
jne
fldl
mov
or
aas
loope
jo
pop
out
mov
jmp
repnz
nop
mov
xchg
jns
mov
in
cli
mov
test
pop
imul
push
xchg
jne
dec
adc
adc
mov
mov
sub
mov
in
pop
push
divl
adc
or
push
dec
sbb
stos
jbe
mov
push
inc
rol
adc
jno
and
adc
lahf
inc
dec
cmp
pushf
sub
loopne
fs
or
sub
push
in
mov
push
add
pop
movsl
popa
rorl
mov
cmp
stos
imul
repz
mov
sti
cmp
and
addr16
pop
mov
mov
adc
in
loopne
pop
addb
pop
jno
xlat
fidivl
mov
out
sarl
mov
dec
jp
fbld
jl
cmp
jno
dec
mov
dec
push
mov
inc
cli
jbe
movsb
enter
fwait
mov
or
add
andl
mov
adc
jns
add
js
mov
ss
or
pop
addb
subl
movsl
std
mov
jo
ss
test
sbb
mov
test
lods
inc
js
mov
cwtl
push
scas
test
sbb
add
les
pop
mov
mov
andl
xchg
stos
sub
lds
xchg
inc
cwtl
sbb
in
iret
xchg
pop
popf
ljmp
xchg
jno
mov
loop
push
or
and
xchg
jne
imul
in
cmpl
adc
add
cmpsb
xchg
mov
out
ret
or
testb
jl
scas
pop
pop
sub
mov
xchg
ss
lods
adc
mov
and
test
insl
mov
lea
mov
xchg
sbb
push
jae
lods
andl
cmpsb
mov
cwtl
mov
in
ficomps
cmp
bound
repnz
sub
push
adc
sbb
xchg
nop
lods
sbb
cld
mov
pop
adcb
jecxz
mov
mov
sbb
jl
jnp
cmp
pop
sbb
sbb
jo
cld
pop
inc
sbb
mov
adc
push
test
xor
mov
sub
and
xchg
test
or
hlt
dec
pop
xchg
insl
mov
jp
mov
dec
and
int3
rorl
popa
stc
jmp
mov
xor
fldenv
xchg
sbb
xor
jmp
mov
sbb
ss
jb
popf
jmp
push
into
xor
pusha
insl
mov
pop
or
clc
es
push
sbb
rol
xchg
insl
or
sub
pop
clc
adc
mov
cmpsl
pop
push
test
dec
inc
dec
and
push
jae
xor
scas
sti
inc
and
or
ret
roll
nop
rorb
lret
jle
jl
xorl
nop
and
addb
mov
cld
sbb
sub
push
popf
dec
aam
adc
in
gs
loop
stc
outsb
popa
inc
sbb
and
push
adcb
jns
sti
ret
stos
cmp
mov
xchg
fsubrl
out
dec
pop
pop
hlt
mov
pusha
dec
je
dec
cltd
sub
scas
xor
inc
out
push
mov
sbb
or
in
pusha
scas
push
pushf
jnp
or
aaa
jae
ss
ljmp
stos
ljmp
icebp
stos
leave
inc
cmc
pusha
and
jg
lcall
lods
pop
inc
xor
mov
idivl
mov
loopne
aaa
lret
aam
sti
add
jae
add
fistl
mov
int
xor
xor
xor
sub
mov
sub
pusha
jp
out
or
pop
cvtps2pd
xor
sahf
test
xchg
and
outsb
jno
mov
mov
mov
adc
dec
rolb
mov
fwait
dec
stos
inc
xchg
mull
jne
call
in
divl
pop
scas
mov
ljmp
call
cmp
inc
pop
in
mov
test
xchg
dec
aaa
sub
ficoml
sbb
jns
jne
xlat
decl
pushf
sub
mov
push
fidivrs
push
into
sub
lds
sti
mov
push
dec
sub
rolb
dec
jb
dec
in
out
mov
fdivs
repz
gs
aad
neg
xchg
lret
push
insb
ret
sbb
in
in
icebp
jno
push
arpl
sti
push
adc
push
mov
xchg
adc
mov
and
lods
addl
pushf
and
js
inc
mov
lea
cltd
jo
inc
movsb
loope
push
jb
dec
test
xchg
pop
inc
xor
inc
mov
imul
test
add
mov
stc
lock
fwait
cmp
fmuls
sbb
stos
mov
pop
dec
xor
repnz
dec
mov
or
inc
mov
mov
sahf
inc
jne
cmp
mov
and
adc
mov
add
pop
jg
sbb
lds
lcall
scas
xor
sbb
movsl
movb
pop
adc
btr
shlb
mov
stos
out
mov
out
fwait
sahf
mov
fs
out
cltd
pusha
enter
mov
sub
inc
jecxz
xchg
lea
subb
aam
pop
adc
pop
std
mov
add
dec
mov
stos
nop
push
push
or
scas
ss
popa
jae
push
or
cld
js
lret
notl
pop
repnz
pop
and
cmpsb
movsb
or
xorb
dec
mov
pcmpgtw
lcall
inc
add
hlt
out
push
sbb
xor
jns
cmp
clc
mov
js
js
pop
mov
pop
and
ss
adc
lret
mov
repz
pop
test
xchg
and
inc
or
mov
pushf
mov
sbb
rcll
inc
push
sarl
push
jno
push
mov
or
loope
dec
adc
bound
add
shrl
lret
or
ljmp
dec
add
ret
mov
pop
and
mov
mov
or
cmp
cmp
inc
push
lea
mov
add
in
por
call
adc
and
shrl
in
mov
dec
cmp
addr16
or
or
jne
adc
fwait
add
lock
loopne
pop
sbb
xor
loopne
add
cmp
aam
imul
pop
jno
jle
call
push
cmpsb
sbb
imul
fistpll
aas
adc
lods
sub
adc
imul
das
adc
sub
mov
push
rep
dec
shl
inc
mov
fs
loop
push
mov
in
arpl
mov
sar
push
xchg
data16
cmp
xchg
inc
push
pop
mov
xchg
aas
pop
mov
test
sbb
jo
sahf
ja
sub
sbbl
jle
repnz
insl
je
lock
fidivrs
cli
push
loope
jns
jae
jbe
scas
or
dec
negb
xor
xchg
sbb
cmp
adc
sub
sub
mov
bound
xor
imul
fistpl
add
inc
push
mov
shl
bndldx
adc
ret
jns
push
xorl
jecxz
jne
pop
pop
test
mov
mov
out
push
adc
sub
jp
xchg
cld
dec
pop
mov
movsl
icebp
lret
push
mov
rorl
insl
pop
sbb
mov
lds
sarb
xchg
clc
xchg
lods
cmpsb
cs
dec
jno
mov
js
cmp
fsts
ds
test
xchg
jns
push
jle
movsb
mov
lret
leave
cmpsl
jl
sbb
fadd
push
or
push
cmp
and
icebp
mov
cmp
pop
or
aam
fildl
push
add
cli
push
out
push
jle
call
inc
and
push
add
push
jge
and
in
lock
mov
jno
push
std
lcall
xchg
mov
push
pop
xchg
xchg
shrb
jo
fidivrs
add
pusha
pop
fnstenv
icebp
mov
pop
ret
aaa
pushf
sti
jg
mov
pusha
or
dec
pushl
nop
xchg
sbb
rolw
lret
adc
jne
aam
xor
test
xor
outsl
jo
out
lods
jle
or
out
arpl
fwait
pop
cmp
dec
mov
test
test
sbb
pop
push
js
push
jge
jbe
inc
xor
dec
xchg
or
cli
xchg
push
add
sti
xorl
scas
xchg
int
out
test
push
sub
mov
notb
mov
subl
std
dec
push
add
int
or
jbe
xor
syscall
adc
int
jo
sub
aam
push
or
aas
orb
xor
xchg
mov
or
call
push
sti
mov
loop
xor
inc
xor
jae
int
push
aas
nop
mov
call
or
jnp
bound
jp
sarl
push
ficomps
js
mov
out
lea
into
mov
mov
mov
out
inc
stc
daa
pop
adc
fs
fstpt
add
leave
xchg
inc
and
add
cltd
icebp
pop
push
pop
jbe
mov
in
hlt
fistps
mulb
rorl
cli
int
lds
insl
inc
inc
sbb
cmc
push
aaa
ja
jb
sbb
lcall
fldln2
inc
les
in
repz
popf
sbb
rcrb
sti
jle
das
fidivrl
icebp
and
jb
mov
mov
and
arpl
cwtl
icebp
xchg
pusha
push
sarl
loope
or
mov
jecxz
jmp
mov
in
inc
push
xor
repnz
adc
iret
mov
movsl
cmc
je
xchg
sub
arpl
test
mov
std
imul
add
clc
js
pop
test
fadds
jae
and
cmpsb
scas
imulb
mov
rcrl
loope
mov
dec
xor
stc
popa
out
mov
mov
xchg
adc
in
dec
lret
adc
outsb
test
fadds
imul
imul
push
jecxz
fcomi
pop
xchg
dec
fmuls
ficomps
pop
inc
scas
lcall
adcl
ret
sbb
fadd
push
shll
add
in
mov
adc
sarb
sub
pop
enter
push
mov
or
dec
and
movl
dec
mov
adc
mov
imul
sub
xchg
jo
orl
push
lahf
mov
dec
or
xorb
movsb
mov
cmp
clc
fisubl
pop
sbbb
andb
push
pop
add
rclb
sbb
fmuls
mov
repz
insl
rclb
mov
mov
cs
imul
shrb
jg
adc
divl
and
mov
cmp
jg
fstpl
mov
lods
push
and
and
or
int3
push
add
jae
js
rcll
test
push
pop
jbe
dec
arpl
subb
int3
pushl
hlt
out
mov
sbb
and
test
lea
sub
mov
sahf
icebp
mov
mov
loope
or
jg
in
pop
icebp
inc
mov
inc
mov
popf
into
mov
test
iret
jg
out
cmpsl
hlt
int
xchg
cmp
mov
mov
rcrl
ret
loope
fwait
xchg
fldt
mov
mov
dec
iret
je
les
je
insl
test
fcmovu
dec
and
pop
mov
mov
push
repnz
mov
mov
iret
xchg
cmpsl
clc
pop
dec
and
inc
jno
divb
jnp
sbb
in
pop
imul
jl
pushf
rcrl
cmpsl
das
popa
sahf
sub
mov
xor
lods
inc
sbb
sbb
jecxz
pop
xor
pop
push
jbe
add
mov
int
sbbl
mov
add
push
into
mov
add
mov
stos
sbb
push
cltd
mov
sbb
lds
incb
insl
leave
mov
loop
jne
mov
cmp
mov
mov
pop
imul
push
xchg
loop
movsl
jecxz
inc
pop
lods
inc
mov
pop
int3
pop
pop
jno
dec
pop
xor
cli
daa
ljmp
fs
jg
andb
jnp
mov
jp
call
pushf
jne
pop
ret
pop
rorb
or
leave
rcrl
and
or
jo
mov
neg
aaa
les
mov
rcl
jecxz
adc
mov
hlt
insb
decl
mov
mov
test
icebp
mov
cmp
roll
jmp
icebp
aam
sbb
adc
pop
loop
dec
cmp
andb
ds
scas
adc
into
or
push
pop
cmp
insl
dec
ret
aam
in
and
mov
add
fcoms
push
adc
jno
lea
push
clc
xchg
mov
mov
scas
ret
sbb
pushf
rol
sbb
ds
pop
dec
gs
mov
jecxz
pop
xor
dec
adc
xorb
fbstp
insl
out
scas
mov
test
test
xchg
stos
mov
imul
hlt
cwtl
into
test
mov
clc
dec
xchg
fdivrl
and
pop
insb
push
stc
aam
mov
out
xchg
inc
pop
in
inc
push
dec
or
pop
int
cmp
add
and
inc
mov
test
hlt
jecxz
mov
and
in
sbb
jecxz
pop
sub
mov
rclb
adc
xchg
nop
mov
lret
in
adc
sbb
dec
mov
bnd
cmc
fimull
mov
mov
fsubl
mov
push
push
push
fnstenv
aaa
shll
sub
into
dec
hlt
sub
sub
push
fwait
jmp
les
nop
mov
mov
call
call
and
inc
inc
mov
jb
testb
lods
es
hlt
mov
out
sub
and
std
xor
cld
into
fadd
pusha
adc
push
mov
push
pop
ja
rcl
ja
mov
sub
enter
nop
and
jb
out
not
mov
pop
pusha
nop
sub
addr16
push
push
aaa
pop
inc
sti
mov
mov
aad
sub
xor
testb
cmp
inc
jecxz
rclb
adc
xchg
incb
inc
push
test
testl
pop
sbb
call
jge
movsb
dec
ficoms
subl
adc
push
insb
mov
cmpsl
mov
out
or
or
inc
inc
cld
ljmp
mov
ljmp
push
sti
fldl
enter
cld
iret
add
lock
pop
adc
and
xchg
xlat
lods
cmc
push
int
ss
and
les
sub
jg
fldt
arpl
scas
out
imul
sahf
or
mov
sbb
cltd
rcll
jnp
fcom
std
jns
in
pop
lret
push
cmpsl
in
xchg
xorl
popa
popf
jle
loop
loope
push
cld
xchg
mov
cmpsl
je
push
insl
xor
clc
inc
xchg
fsub
scas
mov
or
jp
repnz
lcall
in
test
jo
push
push
push
jg
sub
ret
test
and
inc
aaa
pushf
bound
icebp
dec
jno
dec
cmp
sub
jo
clc
adc
dec
xchg
jbe
pop
jns
push
lods
nop
sahf
into
ds
es
sahf
mov
loop
jae
sub
insl
sub
mov
cld
cmp
dec
or
leave
jmp
sub
movsl
dec
arpl
sahf
hlt
push
push
fwait
push
push
sbb
inc
in
inc
stc
pop
adc
pop
les
pop
lds
popa
and
adc
inc
mov
push
inc
push
push
push
sub
sub
and
imul
aad
sub
jae
daa
js
int3
aaa
loopne
loope
push
pop
xchg
rcrl
add
push
adc
lcall
pminub
aaa
cld
sar
jae
ljmp
lods
push
fwait
sbb
xchg
shlb
jae
loop,pn
jnp
jp
jo
add
pop
push
lret
sbb
mov
mov
dec
inc
xchg
adc
outsb
das
mov
add
imulb
xor
mov
iret
push
out
pop
lods
lea
sbb
adc
clc
cmp
in
dec
push
or
push
and
sahf
not
xlat
in
movsb
movsl
or
shll
dec
iret
push
js
mov
adc
repnz
enter
ja
mov
imul
push
pop
jp
jbe
inc
xor
gs
not
xchg
test
adc
adc
call
xchg
xlat
mov
sarb
xchg
dec
out
rclb
jg
mov
iret
je
xlat
je
and
cmc
mov
inc
sbb
outsl
sti
xor
rorl
sub
lods
mov
xor
shll
mov
push
lret
and
test
mov
inc
pop
add
dec
les
jmp
xchg
insl
add
inc
jnp
in
ret
xorb
adcb
popf
inc
adc
call
push
mov
pop
ss
aas
in
out
add
or
cmp
or
pop
mov
in
cmpsl
cmpsl
mov
sbb
movsl
jo
inc
inc
ljmp
sbb
pop
cmc
fisttps
mov
mov
lahf
push
sbb
sti
je
clc
clc
xor
insl
movsb
push
jns
stos
mov
enter
dec
xchg
inc
or
sub
push
addb
xchg
cltd
testl
mov
jmp
loop
call
enter
sub
add
sub
mov
or
aaa
push
add
rolb
adc
and
fwait
es
jecxz
add
stos
pop
negl
scas
mov
or
popa
adc
je
test
fcmovnb
icebp
xor
je
js
mov
dec
notl
std
dec
testl
adc
jge
pop
pop
movsb
push
xor
jp
jle
add
inc
inc
push
xchg
es
insb
decb
jb
inc
xor
cmp
xchg
fidivrs
xlat
test
or
push
dec
xchg
andl
push
xchg
and
adc
fwait
in
adc
icebp
dec
adc
push
sahf
inc
loope
pop
add
inc
lods
add
ja
pop
cld
pop
in
aas
outsl
cmp
mov
ds
aad
adc
fwait
add
xchg
gs
pop
je
dec
and
jge
xchg
dec
ss
shll
daa
pop
lcall
and
lods
xchg
xor
push
iret
push
test
add
inc
sub
shl
loopne
xchg
and
cmp
cli
repnz
lret
das
rolb
mov
mov
lock
adc
push
xchg
or
jno
jns
mov
jp
cmc
and
in
std
lcall
mov
mov
push
std
aad
sbb
mov
lods
imul
roll
pop
sar
xor
inc
jge
xor
insb
stc
xchg
cltd
jae
mov
mov
adc
pop
sub
mov
and
sbb
mov
js
sbb
sub
push
les
cmp
cmp
push
cli
xchg
sbb
inc
test
lds
call
ljmp
and
xchg
cmp
mov
jl
xchg
lea
xchg
fsubs
imul
jmp
negl
sti
mov
les
insl
cwtl
inc
or
mov
into
jo
rep
incb
call
loope
test
cmp
push
lret
sub
sbbl
mov
jnp
cmp
mov
adc
cmp
test
icebp
xchg
xor
movsb
insb
hlt
sub
cmp
add
cmp
jle
ja
test
loope
mov
movsb
nop
dec
test
fs
dec
adc
sarl
and
icebp
xchg
cmp
mov
lods
mov
lods
pop
xchg
xchg
cmpsb
jns
je
das
sti
fildl
jle
cmpsb
pop
in
ja
xchg
mov
in
stos
adc
fists
in
pop
cmp
inc
mov
push
pop
fidivl
test
push
mov
sbb
add
push
xchg
mov
fimuls
enter
inc
insl
pop
sub
test
jg
pop
mov
jmp
adc
mov
pop
push
adc
jbe
xchg
mov
pop
jns
mov
popa
lcall
or
rcr
rcrb
call
xchg
sbb
xor
cld
shll
sub
bound
loope
mov
inc
fbstp
scas
adc
push
es
xchg
sub
sbb
xor
pop
mov
enter
popa
pop
sahf
ds
jl
dec
push
jbe
xchg
push
aaa
shrl
inc
sbb
scas
nop
test
repnz
mov
bound
mov
push
jl
pop
notl
aam
and
test
sahf
sub
inc
cmp
movsl
aad
cmp
or
or
lret
fadds
cmp
hlt
ss
cmp
add
leave
and
mov
sub
repnz
inc
fisubl
push
pusha
inc
sbb
and
sub
dec
pop
mov
je
das
adc
cmc
push
sahf
or
stos
cmpsl
or
lods
setbe
jge
rclb
inc
push
cwtl
scas
pop
cmp
xor
push
mov
sub
and
xor
in
out
lods
shll
mov
push
xchg
pop
mov
hlt
jl
rcll
xlat
shll
pop
xor
or
pushf
xchg
push
mov
mov
test
sahf
xchg
lods
cwtl
jle
push
xor
aad
mov
jae
mov
leave
gs
cmp
pop
sbb
sahf
ficoml
dec
xchg
cmp
das
shrb
xor
mov
arpl
loop
lods
dec
sub
pop
aaa
mov
and
lcall
mov
imul
scas
inc
mov
dec
add
jmp
mov
mov
jecxz
scas
jno
leave
shl
and
mov
xor
in
cmp
je
cwtl
and
inc
je
in
jge
sbb
mov
cwtl
add
xor
adc
jle
adc
iret
dec
movsl
mov
push
jmp
jle
or
and
jg
mov
mov
leave
sub
addb
es
fstpl
xor
adcb
pop
sub
das
sbb
sar
loop
pop
sbb
mov
push
push
test
clc
lcall
movsb
add
inc
jae
xchg
jno
or
xchg
sbb
outsl
loope
lahf
fdiv
xor
push
sub
pop
or
cmc
mov
jl
push
add
mov
jle
push
push
push
jbe
push
mov
scas
aas
xchg
shll
jmp
add
or
std
fcoml
add
jle
and
xchg
pop
in
jge
filds
jge
in
push
lret
mov
lahf
enter
mov
xchg
in
test
cmp
xor
dec
xlat
mov
mov
movsb
int3
jmp
xchg
jae
mov
jle
cmp
out
adc
ret
das
pop
rorb
repnz
scas
xchg
and
jge
scas
push
sbb
imul
and
pop
into
aad
inc
add
out
inc
lods
xor
or
pop
inc
fbld
mov
pop
mov
mov
and
cmp
shl
mov
or
jno
mov
sub
in
in
aas
nop
sub
mov
mov
cmp
hlt
jg
add
addr16
xor
aad
jae
xchg
mov
out
xchg
add
pop
xchg
sub
adc
cmp
repz
fwait
jmp
mov
iret
mov
outsl
les
xchg
mov
aaa
popf
fwait
data16
hlt
inc
dec
into
adc
xchg
out
adc
enter
fcmovu
jns
arpl
xor
fistpll
mov
sub
push
mov
lcall
inc
add
leave
xor
xor
hlt
jno
stos
cmpsb
cmpb
sbb
bound
in
pop
add
mov
fsts
inc
iret
bound
dec
sar
mov
push
inc
iret
aam
adc
inc
inc
cwtl
and
fwait
orb
cmp
loope
or
jnp
dec
push
inc
rclb
or
xor
inc
outsb
out
xor
xor
mulb
adc
xorl
ljmp
lahf
pop
jns
insb
imul
aam
into
xlat
sub
mov
pushf
shll
repz
dec
clc
jp
lcall
push
inc
movsl
movsb
scas
into
mov
and
fisubrs
xchg
mov
mov
xchg
subb
das
in
sbb
sbb
xor
jnp
addb
movsl
cmc
add
ljmp
inc
out
loope
into
mov
jae
sub
cmp
sbb
mov
mov
jg
xor
js
xor
mov
mov
ret
push
add
pop
or
testb
std
inc
pop
mov
jge
dec
cwtl
data16
fbstp
icebp
ret
imul
call
fisubs
dec
or
inc
adcb
lahf
aam
into
cmp
jmp
cmp
or
pop
and
es
xchg
call
mov
and
xchg
mov
xchg
push
fcompl
pop
aad
pop
push
xchg
inc
shlb
stc
leave
pusha
cmp
jge
out
aad
adc
jbe
rcl
aad
mov
mov
xchg
sub
lock
inc
lcall
fistps
rorb
mov
mov
push
mov
into
mov
xchg
mov
cmp
std
es
loope
icebp
dec
mov
stos
dec
push
cmp
icebp
test
sub
jo
insb
mov
adc
int
cmp
mov
cmp
imul
aad
insl
mov
popf
ret
cmp
sbb
lret
test
repz
enter
nop
mov
or
stos
repz
push
push
fildll
sub
cmp
cmp
xor
rol
xchg
int3
ljmp
loope
ret
and
or
repnz
push
fisttpl
loope
into
in
idivb
sti
sub
pop
fs
mov
push
jns
inc
aas
add
pop
push
jl
adc
adc
xor
fs
scas
rep
jg
lds
fmull
addl
sbb
imul
ss
and
scas
scas
add
test
xchg
push
insb
fstps
aad
push
lods
add
insl
lret
inc
sbb
loope
jne
push
pop
pop
xor
lock
inc
mov
into
push
push
iret
mov
inc
jmp
pop
dec
pop
mov
mov
cwtl
iret
cmp
pop
jno
and
pop
sbb
jp
mov
insb
stos
pushl
inc
imul
fisubrs
test
int
imul
jnp
jno
mov
into
loop
sub
aad
or
fcmovnbe
jge
imul
ljmp
fs
cwtl
mov
sbb
xor
inc
push
pop
adc
dec
fildl
xchg
lods
adc
aaa
sti
scas
rolb
xchg
or
pop
sub
pop
lds
pop
push
cmpsl
test
cmpsb
imul
das
cs
js
add
pop
fmull
aaa
inc
pop
adc
add
sbb
lret
push
jbe
mov
inc
jmp
mov
xchg
cs
pop
clc
jmp
inc
cmp
gs
pop
lods
rcll
xadd
jg
pop
in
cltd
test
test
jp
mov
lds
or
push
or
sub
push
sub
enter
or
lock
dec
mov
sbb
cmpsb
daa
sbb
pop
repz
xor
mov
jb
pop
dec
pop
jp
int
add
inc
dec
adc
xchg
mov
lds
mov
negb
or
mov
sbb
sti
and
push
or
jae
jp
sti
test
int3
scas
inc
insl
push
mov
lcall
cs
push
iret
inc
icebp
mov
es
cwtl
movsl
or
aas
and
lods
je
mov
ss
and
testb
inc
inc
mov
adc
cld
jg
adc
sarl
orl
sbb
movsl
cmp
aas
idivl
pop
lea
sub
loopne
popf
mov
add
xor
sbb
pop
sub
sahf
dec
pop
arpl
push
mov
mov
out
xchg
add
jnp
and
adc
push
xor
pop
orb
inc
adc
inc
dec
mov
testl
fwait
pop
iret
sarl
and
push
cmp
in
adc
iret
adc
fs
fsubrl
imull
mov
pushf
movsl
sbb
cli
inc
adc
jae
cmp
clc
add
out
in
fidivs
adc
jbe
mov
adc
lcall
ret
loop
ja
xor
mov
xor
or
pop
xlat
push
ds
fsubs
lret
and
mov
aaa
popf
lods
movsb
mov
mov
xchg
test
stos
sub
xor
xor
outsb
sub
addr16
cmpsb
popf
outsl
jae
jo
cs
pop
mov
test
lahf
aam
scas
sub
std
mov
adc
in
add
inc
out
sbb
jmp
or
sub
repnz
and
cmc
mov
aaa
or
out
or
aam
out
inc
test
xchg
xor
and
int
pop
jp
fdiv
dec
bswap
sub
jne
jge
add
shrl
push
sub
cmpsb
inc
and
lods
mov
call
and
jno
movsb
call
adc
inc
push
dec
xchg
dec
sub
js
ficomps
out
adc
mov
mov
push
add
and
and
cwtl
enter
and
mov
ljmp
sahf
in
sub
pop
push
jg
fildl
mov
cmp
xchg
scas
lods
std
mov
clc
pop
pushf
lods
jmp
jmp
insl
sbb
rcrb
xchg
and
inc
pop
enter
mov
fistpll
cmp
addr16
ljmp
push
inc
mov
cmpsl
loopne
pop
inc
cmp
dec
dec
in
fwait
iret
jbe
mov
fistl
movsl
pusha
inc
pop
jbe
push
movsl
lea
mov
jp
push
fcomps
pushf
jo
ss
cwtl
pop
add
insl
hlt
and
cld
add
cld
shll
mov
popa
fsubl
aaa
adc
sahf
lea
mov
insb
xchg
push
adc
mov
out
bnd
mov
or
jb
inc
lds
pop
fnstenv
cwtl
hlt
adc
outsb
test
fsub
mov
and
les
outsl
lock
jge
ficomps
jb
es
lods
fs
or
rolb
ret
das
icebp
sbb
scas
xor
scas
enter
and
pop
sarb
js
xchg
pusha
pop
lret
aaa
sbb
pop
push
jno
lods
inc
cli
out
dec
das
lret
outsl
popf
adc
divb
dec
add
std
xchg
inc
mov
or
and
rclb
pushw
je
mov
cmp
mull
in
cltd
inc
sub
jae
adc
adc
pushf
rorb
shll
xchg
std
push
dec
fidivs
test
xor
mov
sbb
push
stos
es
cli
movsb
xchg
andb
clc
add
dec
cmc
and
pop
mov
push
mov
test
xor
mov
fwait
lds
in
lods
xor
fildl
insl
dec
ret
mov
loopne
enter
adcb
adc
lret
push
sub
je
test
add
sbb
lods
push
lret
pop
loope
lea
lahf
cld
xchg
in
sub
ror
aaa
cwtl
lahf
push
mov
jmp
and
mov
xchg
xor
fwait
mov
lret
cmp
shll
mov
cmpsl
les
leave
int
and
int
jne
inc
gs
in
gs
hlt
ret
sar
shr
daa
and
and
call
arpl
mov
cmp
dec
jno
xor
stos
fists
push
out
mov
jmp
rcll
fwait
test
jp
jecxz
mov
and
nop
loopne
xlat
loopne
xchg
jmp
lods
test
mov
into
or
lret
cmpl
and
jmp
test
gs
hlt
jg
movsb
mov
ds
rorl
test
cmp
cld
pop
mov
mov
push
repnz
cmp
bound
cmp
popf
inc
orb
jae
cwtl
popa
out
mov
xchg
das
out
movsb
inc
add
flds
push
sub
push
loop
icebp
or
jle
ljmp
sub
cmp
imul
lock
mov
jl
xchg
popa
jle
jecxz
pusha
push
mov
jg
xor
jns
jnp
dec
or
mov
insb
xor
pop
das
adc
cwtl
in
mov
xchg
sub
xchg
pop
loopne
xchg
xor
in
stos
aam
pop
mov
xchg
addb
and
sub
cmp
mov
stc
rolb
dec
mov
mov
nop
dec
cli
sarl
mov
data16
ss
imul
lea
dec
dec
cs
xlat
in
out
mov
lock
testl
xlat
test
pop
mov
fcompl
push
lea
pop
xchg
pop
pop
push
sbb
seto
mov
adc
test
sarl
loope
fs
adc
xchg
js
cmp
sub
mov
push
jl
cmpsl
inc
sbb
daa
jbe
dec
in
jae
mov
sbb
or
sbb
inc
mov
jb
adc
inc
pop
popf
imul
push
jne
aaa
enter
add
fsubs
adc
push
add
mov
sub
loope
pop
mov
xchg
in
mov
sti
imul
cmc
jae
ret
sbb
pop
sub
fsubs
insb
jae
dec
aas
stos
adc
or
lods
cmp
fisttpl
inc
ja
and
sub
push
out
push
dec
into
add
add
mov
lods
leave
bound
aam
pusha
in
stos
sub
mov
sbb
push
push
xor
loope
sbb
insb
es
pop
jo
xchg
jge
sahf
xchg
or
mov
jno
sub
cmp
add
cmp
sahf
ret
jl
push
add
lock
ds
shr
test
lahf
in
adc
fwait
add
cmpsl
int3
aad
sub
inc
cmp
sbb
flds
test
lods
in
jge
cmp
dec
xchg
ret
inc
sub
mov
sti
or
jnp
test
pop
mov
cmp
je
sub
rorl
dec
or
sbb
aam
mov
jae
ficompl
jnp
mov
add
loope
xlat
in
sbb
jbe
sub
or
pop
inc
out
xchg
mov
orb
outsb
aad
mov
movsb
inc
adc
jns
jns
mov
neg
add
mov
xor
add
sub
mov
add
popa
jge
movsl
mov
js
pop
push
sbb
fisttpll
push
popf
in
cmp
aas
pop
fs
loope
ja
aas
pop
xor
dec
out
jne
sti
call
dec
mov
in
popf
jae
adc
lds
test
rol
cwtl
jge
mov
inc
push
or
in
push
jge
and
add
inc
fldenv
hlt
push
mov
divl
nop
push
mov
in
sub
mov
cmp
inc
mov
mov
mov
mov
bound
test
sub
add
cmp
xor
jo
pop
dec
mov
mov
aad
push
mov
sbb
mov
ret
scas
sbb
cmp
cmpsl
repz
sti
leave
out
push
mov
test
inc
or
andb
pushf
add
insb
inc
sbb
ljmp
jecxz
mov
mov
dec
jnp
sbb
cmovg
add
jle
std
cwtl
out
xor
loop
insl
ja
cs
pop
enter
adc
fbld
sarb
scas
out
xchg
dec
ja
xor
dec
cmp
data16
pop
fidivrs
scas
push
xor
pushf
mov
int3
outsl
hlt
xchg
test
das
push
pop
mov
lods
cmp
add
and
mov
cld
jno
jl
aaa
mov
mov
xor
xchg
sub
cmp
xchg
ljmp
push
stos
xor
movsb
in
jns
or
and
inc
mov
jbe
outsl
mov
out
repnz
sub
push
sbb
cmc
mov
push
and
ljmp
and
or
push
hlt
xor
pop
jo
inc
add
jg
mov
push
cmc
fistps
jle
pop
pusha
jp,pt
clc
hlt
gs
and
fcoml
sarb
mov
sti
mov
call
call
rclb
lret
push
dec
jnp
push
dec
pop
mov
sarb
jmp
scas
sqrtps
aad
imul
pop
lahf
pop
sbb
shll
popa
pop
les
jbe
adc
in
sbb
imulb
test
fdivs
jno
fsubrp
pop
dec
cmp
sub
and
sarb
lds
rolb
mov
movl
inc
leave
pushl
jo
std
dec
or
pop
mov
in
sub
pop
ja
into
xchg
clc
adc
mov
rcll
roll
mov
out
pop
outsl
cs
or
cmpb
pop
out
cmp
into
jle
push
idivl
inc
sbb
or
xor
adc
mov
fsubs
and
out
jae
test
lock
or
mov
pop
mov
adc
stos
pop
insb
loop
adc
gs
cmp
test
sub
and
movsl
sub
push
hlt
mov
mov
mov
xlat
lods
mov
je
les
xchg
dec
test
dec
insb
ja
push
out
jae
test
in
sarl
sbb
inc
ret
push
out
adc
jbe
xchg
inc
xchg
and
jmp
and
dec
rolb
pop
dec
es
or
fucomi
shl
ljmp
dec
jp
xor
jno
adc
jae
f2xm1
inc
sahf
enter
jg
dec
push
mov
mov
dec
nop
jle
fldenv
push
jno
sbb
fmull
xor
sbb
and
push
mov
mov
jo
fwait
out
jge
stos
out
mov
imul
push
jnp
mov
lea
jecxz
rolb
fidivs
xor
and
mov
mov
lcall
jb
adc
jbe
rorl
arpl
js
adc
and
sub
cltd
dec
in
shl
mov
jo
dec
mov
mov
add
jbe
cwtl
xor
pop
adc
dec
xchg
mov
cs
or
sbb
jne
arpl
pop
mov
movsb
jge
insl
lcall
sbb
sbb
mov
inc
push
jmp
sarl
in
sbb
inc
enter
ret
xchg
pop
fwait
outsl
into
ds
push
cmc
icebp
sbb
add
jns
faddl
push
inc
mov
pop
insl
pusha
sbb
addr16
or
dec
pop
les
popa
insb
stc
push
jecxz
jbe
mov
in
addr16
inc
in
adc
divb
jo
ds
xchg
aam
out
insl
adc
enter
xchg
and
lods
mov
scas
incl
jno
adc
ret
pop
mov
ss
cwtl
and
mov
jae
fwait
push
jecxz
cmp
ss
ficoms
mov
mov
mov
jo
js,pt
test
xor
push
pop
repnz
and
cmpsl
sbb
jg
xorl
cli
sbb
push
xchg
in
cld
ret
sbb
or
sbb
or
sti
inc
dec
mov
mov
or
xchg
xor
xchg
int3
call
sub
scas
int
pop
dec
lea
mov
rclb
dec
lods
jne
dec
lahf
inc
shrl
test
clc
mov
xchg
cs
jb
pop
xchg
js
fs
dec
rcll
filds
pop
push
xor
lods
cli
xchg
cmp
cmp
sti
in
cmpsb
push
xor
test
mov
xchg
add
insl
pop
fiaddl
aam
push
sub
mov
xchg
push
lods
mov
fdivrs
xor
shll
imul
push
sqrtps
mov
cmc
mov
fimuls
xor
cld
call
mov
sub
outsl
pop
out
cltd
adc
stos
enter
or
cmc
lds
jbe
sti
xchg
add
addr16
and
dec
lcall
fs
out
mov
cmp
pop
cmc
push
stos
arpl
outsl
dec
nop
addr16
sbb
scas
mov
fcoms
rcrb
pop
daa
pop
sub
movsl
aaa
sbb
lock
sti
xchg
and
shll
add
out
pop
mov
icebp
sub
mov
fs
arpl
sub
cmp
gs
or
inc
push
test
shl
push
sbb
push
outsl
movsb
ror
lret
shll
mov
push
test
sub
outsl
shrl
lods
mov
jnp
push
xchg
inc
and
mov
pushf
sbb
clc
fcompl
xchg
fimull
out
dec
push
pop
jo
add
push
dec
std
mov
loop
dec
xchg
or
jbe
inc
xor
jo
push
push
mov
cli
lret
mov
jmp
test
gs
int3
loop
inc
mov
add
pushf
icebp
mov
repz
push
pop
jbe
mov
inc
pop
jl
lret
sub
cmp
lcall
loopne
ja
imul
out
aaa
hlt
int3
ss
popf
adc
sub
xchg
rcrl
fsubrl
rcrl
leave
rcrb
cmp
jb
xor
xor
lret
stc
add
pusha
jb
mov
stos
pop
fnstsw
adc
enter
push
xchg
sub
sbb
ret
push
mov
lods
mov
in
mov
push
jle
push
mov
pop
test
imul
cli
aam
rcrl
mov
push
add
das
mov
movsl
xor
movd
outsl
scas
sti
bound
insl
jg
cmpb
mov
inc
pop
movsb
xchg
addr16
xchg
pop
cmp
inc
mov
pop
fbstp
insl
ja
xchg
mov
aas
inc
jp
cmp
loope
call
adc
push
cmpsb
scas
jg
rorl
sub
aas
or
mov
pop
jnp
cmp
pop
mov
jmp
add
es
js
mov
in
lds
ret
sub
aad
int
sbb
and
xchg
cld
mov
cmpsb
dec
repz
lods
stos
push
xchg
vcvtdq2ps
sub
xor
inc
mov
scas
and
aam
add
jae
jmp
sub
sbb
imul
popf
movsb
mov
sahf
sbb
out
mov
cld
or
mov
cmpsl
jne
mov
outsb
out
mov
pop
int
into
loope
fildl
in
sub
xor
ljmp
repnz
dec
in
adc
mov
mov
sub
add
push
fwait
aad
jmp
rorl
push
inc
ja
in
dec
sar
add
push
pusha
jb
push
push
mov
mov
outsl
stc
rorl
aad
movsb
fwait
adc
lret
push
jno
or
jo
xchg
or
sub
xor
cmp
arpl
mov
and
inc
out
mov
popf
divb
xchg
inc
scas
add
test
xor
jle
int3
and
sahf
ss
sbb
jnp
fisubs
add
mov
fiaddl
push
rcl
lods
scas
shlb
lds
mov
lahf
or
out
push
sbb
subl
sbb
popf
shlb
in
inc
js
shlb
cmp
shrb
adc
dec
loopne
neg
clc
lahf
sub
jo
mov
add
push
dec
mov
icebp
lret
scas
addr16
movsb
mov
stos
aam
push
pop
cltd
xchg
jge
push
scas
inc
cmp
lahf
xor
dec
jp
jne
into
shlb
xchg
mov
push
mov
scas
je
mov
mov
mov
movsl
cmpsb
dec
jns
sahf
mov
mov
push
ret
jno
push
mov
push
mov
imulb
mov
imul
testb
add
or
stos
sub
jle
ss
flds
mov
movsb
cmpl
pop
pop
xchg
inc
and
stc
ljmp
hlt
test
mov
push
stos
jge
pop
mov
add
gs
xor
orb
adc
fistpl
and
mov
adc
inc
add
mov
mov
jo
mov
cltd
sbb
lret
adc
mov
imul
test
dec
add
pusha
in
shll
enter
push
std
or
sbb
inc
std
inc
icebp
mov
dec
in
rorl
mov
xor
sbb
ja
push
out
out
cmpsl
addr16
in
mov
and
out
daa
mov
add
mov
mov
mov
jno
push
jp
rclb
negb
jecxz
inc
cli
arpl
push
sar
mov
xor
test
enter
mov
inc
insb
inc
sbb
and
lcall
push
sub
add
or
pop
xor
push
push
add
stc
mov
pop
in
arpl
ds
mov
stc
sub
pop
add
dec
in
cmc
movsl
jmp
mov
xchg
arpl
cmp
xor
jle
push
adcb
sbbb
out
es
jne
and
xor
xor
jne
adcl
or
fsts
cwtl
jno
sbb
stos
stos
adc
jl
sub
jo
mov
pop
mov
sbb
rcrl
lds
mov
xor
js
sub
int
sbb
nop
and
sub
xchg
cmp
mov
je
loop
and
jno
sti
xor
add
push
jp
xlat
rolb
and
jl
fbstp
inc
xchg
ret
xchg
outsb
xchg
popf
fmull
push
outsb
std
push
push
pop
mov
xor
je
cmp
xor
aaa
dec
cmp
mov
inc
lret
xor
sub
orb
sub
xchg
cmc
cmp
and
es
inc
leave
or
clc
stc
push
cld
dec
jp
pop
inc
cmpsl
cli
fdivrl
add
arpl
sbb
outsl
aam
mov
test
push
mov
fadds
in
mov
mov
and
jg
scas
sarb
rcll
sub
inc
jg
fsubl
lock
inc
inc
pushl
jbe
xlat
pop
jg
notl
rol
scas
jne
and
ja
dec
repnz
es
paddd
push
xchg
insb
xchg
fdivrs
adc
fdivrs
gs
rcl
jno
adc
mov
inc
pop
pop
insb
fcomps
mov
mov
or
adc
mov
push
mov
or
dec
cwtl
lret
xchg
push
aad
xchg
jns
jnp
cmc
fisubrl
xchg
pushf
pop
jmp
sbb
stos
or
dec
jae
loope
pusha
rolb
ss
pusha
or
scas
cli
test
subw
xchg
push
repz
into
dec
inc
insb
icebp
fs
sub
into
aaa
dec
pop
cmc
fdivrp
and
sbb
adc
pop
imul
cmp
xor
push
jbe
xchg
xchg
dec
mov
fidivl
pushf
cmp
mov
jne
outsb
or
jno
pop
and
das
sbb
or
mov
andl
xorb
ds
movsb
lcall
insb
rclb
push
aaa
mov
xchg
lock
mov
out
cmpsb
cs
int3
popa
push
outsb
or
inc
jne
mov
pop
sets
subps
or
push
in
inc
mov
stos
fimuls
imul
jl
xor
adc
aam
cmp
loope
movsl
movlps
outsl
sahf
lds
ret
inc
inc
out
cld
fidivrl
icebp
xorl
mov
data16
popf
xor
les
sahf
or
les
or
stos
mov
fcomip
pop
push
popf
mov
sarb
mov
adc
arpl
mov
jo
mov
es
insl
and
push
mov
cmp
push
das
inc
cmp
sub
mov
xor
mov
lret
sti
pop
lea
or
das
into
fbstp
pop
dec
clc
mov
sbbb
inc
hlt
push
movsb
and
jno
cmpsb
xor
xchg
mov
inc
mov
adc
sti
xchg
outsl
push
bound
mov
or
loope
cmp
mov
sbb
popf
sbb
stos
lret
int
scas
xor
fwait
cmpsl
sahf
int3
xor
daa
xor
sbb
mov
rcl
push
fwait
mov
adc
mov
push
dec
xchg
faddl
mov
push
cmp
fcompl
cmpsl
clc
idiv
or
push
clc
movb
mov
lods
dec
daa
addr16
dec
out
push
push
mov
movsb
jmp
into
inc
jbe
ss
mov
adc
jmp
sub
pop
movsb
insl
aam
jmp
xchg
int3
out
ret
push
or
fs
dec
aam
sahf
icebp
mov
xor
ja
enter
add
adc
lods
dec
subb
sbbb
mov
lds
mov
cmp
mov
shll
movsb
xor
out
pop
mov
inc
push
inc
mov
mov
dec
jae
push
cmp
aad
push
shll
loope
push
jns
sti
rcrl
repz
outsb
sub
sub
push
ss
in
out
inc
lret
cmp
scas
or
adc
imul
pop
gs
test
shlb
test
addr16
js
lock
cmpsl
leave
jbe
push
bound
pop
test
in
sbb
in
jmp
fisubs
adc
mov
push
pop
push
add
mov
add
loope
negl
stc
outsb
lods
cmp
dec
cli
scas
inc
jb
lcall
sub
xor
out
cli
cld
popf
fbld
pop
out
into
add
jge
and
inc
sub
imul
or
and
xchg
cltd
mov
enter
jecxz
jns
add
xlat
jns
mov
es
test
ja
arpl
addr16
jnp
and
lock
fcomps
outsl
arpl
lds
gs
test
xor
pop
and
push
into
pop
test
lock
fbld
test
sahf
les
repz
imul
jb
or
dec
inc
pop
daa
popf
lods
hlt
jns
push
sahf
pushf
idivl
and
in
sub
pop
add
in
and
sbb
scas
lods
cmp
mov
and
push
xchg
mov
cmp
call
pop
pop
pushf
sub
jmp
sar
enter
inc
mov
xor
push
fsubrs
aas
cli
mov
add
leave
xchg
push
xchg
pmulhw
imul
shrb
sbb
movsb
inc
nop
scas
mov
dec
dec
jg
sbb
mov
pushf
inc
test
push
fsubs
pop
push
movsb
dec
lret
stos
shll
std
adc
pushf
adc
ret
mov
xchg
adc
or
lret
mov
adc
shl
xchg
push
fstps
lock
lcall
xorl
dec
fcompl
xor
fmulp
fcmovne
daa
fstpl
adc
dec
push
or
out
aas
lahf
js
add
jnp
fnstcw
mov
sbb
inc
sub
sub
xor
js
push
loop
dec
rcll
push
jnp,pn
mov
xor
push
rclb
imul
mov
inc
stos
adc
fnstcw
sub
out
imul
clc
cmc
daa
xor
mov
std
neg
mov
cmpb
test
adc
push
cmpsb
test
jl
xchg
mov
lds
jp
fstl
dec
push
sbb
sti
test
ret
icebp
jle
inc
xchg
adc
fsubrs
test
mov
xor
jnp
pop
push
pop
dec
and
test
test
xor
dec
mov
clc
adc
test
jmp
push
jae
xchg
movsl
add
jecxz
cmc
prefetch
shlb
cmp
and
out
in
add
jg
lcall
sub
or
jae
mov
ds
out
fnsave
or
inc
ja
pop
andl
dec
stc
shl
xor
fs
test
loope
pop
sub
popf
inc
dec
sub
mov
inc
sub
popf
movsb
sub
mov
push
lds
push
cmpsl
mov
cld
mov
mov
iret
lcall
xchg
fsubrl
push
mov
inc
or
sahf
adc
scas
nop
and
adc
loop
adc
pusha
mov
xchg
loop
adc
mov
push
jp
aaa
andb
loope
repnz
dec
stos
adc
divl
or
test
push
push
clc
pop
fdivrl
mov
mov
cmp
aaa
inc
adc
roll
pop
ret
rcrl
pop
dec
mov
xchg
push
jle
cmpl
cmpsb
notl
std
test
pushf
pop
insl
movsb
adc
cwtl
cmp
mov
add
jbe
pop
movsb
mov
mov
mov
mov
jae
dec
testl
dec
cmp
lods
aas
sbb
divl
add
scas
jmp
mov
cmp
movsb
sbb
es
jnp
push
and
fnstsw
or
push
fidivrs
cmp
adc
add
mov
or
jge
and
xor
fnclex
pushf
mov
mov
add
or
fcmovne
lcall
mov
cmp
fisubrl
xchg
mov
fmul
aam
movsb
sub
mov
xchg
adc
xchg
outsb
pop
fdiv
jp
adc
dec
test
and
mov
push
inc
xchg
fisttpll
cmp
stos
addr16
lret
dec
mov
les
lea
push
xchg
scas
sub
test
enter
test
pusha
add
test
clc
in
cmp
jae
outsl
and
sti
sbb
ret
push
mov
bswap
ds
cmp
mov
ds
dec
lret
popa
push
rclb
sub
pop
sbb
pusha
decb
adc
ja
pop
movsb
loopne
iret
ss
push
mov
mov
xchg
inc
loopne
adc
dec
dec
mov
in
pop
dec
ss
in
or
xchg
jmp
jns
pop
outsb
dec
push
cmpsl
les
lock
popf
mov
push
rcrb
aas
mov
cmp
loope
adc
jb
rcrb
xorl
dec
popa
mov
push
std
sti
out
ds
jp
fs
lods
pop
and
sahf
arpl
or
std
jp
xchg
stos
xlat
xchg
xchg
mul
shrl
cmp
lock
pop
pushf
sub
fnop
outsl
push
push
int
loope
iret
inc
add
sub
xor
mov
inc
aas
cs
jae
inc
shlb
xor
xchg
ss
insb
fwait
ret
or
lret
loope
jnp,pn
and
pop
jns
cmp
jl
fmull
xchg
aam
jnp
mov
ja
sub
arpl
mov
imul
mov
div
xchg
adc
adc
lds
insb
rorl
int
mov
or
dec
push
test
inc
pop
xor
out
ss
or
push
scas
sar
pop
sbb
into
xchg
jnp
cmp
repz
jne
ss
xor
sarl
sub
pusha
shrl
or
pop
inc
push
mov
xchg
mov
push
mov
loopne
mov
xlat
sub
in
jmp
xor
vpunpcklbw
addl
sub
mov
push
stc
jmp
mov
cmp
sti
adc
mov
jmp
cmpsb
lea
sub
xchg
out
repnz
mov
stc
mov
das
stc
mov
pop
fimuls
das
incl
mov
jb
mov
int3
insb
pushf
imul
push
adc
jns
and
jle
pop
lock
mov
push
xchg
ficomps
xchg
pop
sub
in
inc
pop
cmpsb
movsb
push
inc
leave
jne
push
jb
repnz
mov
and
ret
dec
jmp
and
or
mov
insb
cli
or
gs
mov
sub
push
testl
cmpsl
fimuls
jns
mov
sahf
and
inc
lahf
xchg
adc
std
insb
dec
divb
sbb
and
imul
sbb
sbb
or
outsb
cmp
scas
jecxz
mov
es
sti
enter
nop
clc
popa
xchg
cmp
or
sub
jae
xor
js
call
xor
jge
sub
fidivs
ret
jl
xchg
in
movsl
mov
inc
jno
mov
jbe
or
jmp
mov
push
test
test
mov
mov
fcompl
das
in
pop
cwtl
dec
mov
mov
loop
mov
fs
scas
xchg
lods
std
je
xchg
lret
lret
jb
adc
mov
push
lock
mov
dec
das
sub
push
jnp
movsl
es
fcoml
popa
enter
push
stos
xor
imul
jnp
pop
cmpsl
dec
lock
lods
sti
cmp
sbb
shrb
rcrl
mov
aas
mov
mov
sub
sub
ja
out
out
fsubs
dec
shlb
inc
dec
cmp
call
add
cld
inc
jbe
icebp
dec
sarb
sub
xchg
xlat
sub
sahf
sbb
fidivrs
mov
data16
cmc
out
xchg
xchg
mov
loope
dec
adc
cmp
mov
cmp
or
es
sahf
mov
movsb
push
sub
cltd
mov
stc
push
sbb
repz
jns
xchg
test
dec
fadds
mov
inc
lods
inc
cli
mov
inc
inc
xchg
pop
sub
or
out
pusha
fistl
or
pop
aam
pusha
pushf
dec
xchg
in
call
nop
push
ret
cmp
cmpsl
push
pop
scas
in
sub
insl
cwtl
mov
popa
xlat
xchg
lock
mov
out
and
dec
ljmp
adc
adc
inc
jne
lock
stos
cltd
xchg
pop
mov
mov
jmp
sub
push
mov
lds
fisttpl
mov
push
pop
push
inc
push
push
in
nop
test
fisubs
leave
adc
xor
jmp
push
push
cli
sbb
fisttps
clc
or
sahf
mov
in
ja
jnp
xchg
and
lret
inc
add
or
dec
pop
xchg
mov
mov
movb
sbb
bound
lea
inc
loop
adc
inc
jns
or
push
pop
das
pushf
and
mov
cmpsb
pop
sub
repnz
mov
push
sti
add
lret
icebp
jg
mov
mov
xorb
xlat
add
fldcw
ret
add
shr
push
or
mov
cld
icebp
mov
or
jb
jmp
dec
arpl
pop
imul
or
xchg
mov
repz
fistpll
insl
jne
mov
rcll
mov
add
jmp
sub
add
test
add
mov
dec
test
daa
jno
add
pushf
aad
xlat
rcl
adc
and
iret
test
cmp
cmpsb
fimuls
test
jge
ret
std
mov
jl
push
jnp
add
test
push
leave
ljmp
aas
pop
ja
xchg
mov
sub
or
outsl
sub
aas
mov
jg
jno
loop
lods
stos
dec
dec
shll
push
stc
scas
loopne
or
movsb
push
or
pusha
rcrb
pop
mov
jo
add
icebp
sbb
shrb
pop
dec
scas
mov
fistps
fdivrl
add
test
loopne
ss
xor
dec
sub
jle
dec
loop
fiaddl
add
push
out
push
jb
aas
cmc
cmp
addr16
xor
pop
mov
push
nop
add
loope
mov
sbb
xor
bound
adc
fwait
jns
or
stos
adc
xchg
or
jns
sub
movsb
push
rorb
sub
lahf
lods
lock
mov
jns
int3
repnz
cmpsb
ss
xor
sbb
push
jb
mov
pushf
dec
cmp
cmpsb
sbb
add
lea
xor
fdiv
push
xor
add
das
xlat
mov
mov
insb
xor
push
or
fistl
out
mov
imul
add
adc
mov
ja
and
cmpsb
inc
ljmp
push
test
mov
add
sub
inc
xchg
fs
sbb
bound
out
mov
addb
daa
sbb
das
incb
scas
xchg
inc
or
pop
mov
fmul
xchg
xor
inc
jns
fisttps
and
xchg
sbb
loope
pop
pop
repnz
sbb
lds
pop
int
cmp
push
icebp
pop
insl
lcall
cmp
mov
ficompl
cmp
fdivp
inc
pop
add
mov
inc
or
push
mov
das
pop
adc
into
js
cwtl
mov
mull
test
mov
and
cmp
pop
stos
jmp
mov
mov
jns
mov
test
ds
pusha
xchg
add
xchg
icebp
xchg
js
add
pop
xor
pop
rclb
scas
push
xor
nop
cmpsl
pop
xor
mov
mov
lret
test
in
add
ficoms
out
inc
data16
faddl
sbb
cmpsb
pop
and
add
xchg
mov
cmc
dec
aaa
xchg
pusha
add
adc
or
fildl
out
in
xchg
add
mov
popf
mov
pop
lods
push
insb
jnp
mov
pop
or
jns
sbbl
mov
daa
aad
pop
ficompl
push
scas
cmp
movsl
es
lock
lods
int3
lods
loopne
push
mov
lcall
cmp
es
jns
dec
push
add
dec
inc
lds
aam
dec
sti
cmp
pop
sub
loop
outsb
imul
xor
sarb
inc
test
mov
scas
xor
xchg
xchg
pushf
div
pop
push
data16
shl
aas
test
mov
pop
lret
inc
imul
pusha
sub
insb
pop
scas
add
mov
sub
adc
jge
add
aad
rcll
and
lret
push
adc
clc
ljmp
or
inc
shrl
dec
mov
sahf
jae
shlb
ss
fwait
cmpsb
cld
or
pop
es
pop
or
mov
add
sbb
cwtl
dec
fldcw
jmp
fistpl
sub
cmpsl
incb
push
int3
negl
sbb
xor
iret
in
inc
pop
push
push
push
lods
cmp
jae
mov
gs
lcall
sub
and
mov
test
sbb
or
bound
es
insb
and
cmp
fwait
pop
fldt
jns
icebp
dec
add
or
mov
imul
sti
data16
push
mov
mov
xchg
in
mov
fdivrl
mov
cli
and
jae
jg
ds
cmp
aaa
fnsave
mov
je
xchg
insl
sub
mov
stos
dec
xor
loop
outsl
sbb
mov
xlat
lret
shr
test
gs
mov
xchg
addr16
add
cmc
ja
je
sbb
cmp
leave
mov
add
mov
mov
cmp
leave
add
xchg
push
pop
ljmp
scas
sub
and
sahf
popf
mov
loope
pop
outsl
test
mov
loopne
inc
fdivr
dec
mov
cmp
jb
push
push
mov
popf
out
stos
add
lea
stos
incb
ss
cld
xchg
aas
rcrb
and
je
inc
cmp
sbb
pop
mov
outsl
lods
bound
mov
stos
cmp
push
mov
ja
cmpsb
jbe
imul
add
and
out
aam
repnz
mov
scas
jno
out
jle
or
xchg
repnz
pop
loop
pop
add
inc
orl
repz
ret
mov
and
in
fsub
sub
mov
sub
mov
loope
movsl
mov
or
jnp
iret
xor
jp
push
push
ficoml
sub
rcl
imul
adc
movb
pop
cwtl
push
sbb
std
or
dec
pushf
mov
jecxz
fs
lret
xchg
mov
jnp
inc
xor
outsb
jg
mov
mov
je
or
fmul
loop
or
sub
push
xchg
mov
repz
sbb
mov
decb
repnz
das
jg
or
popa
test
and
and
icebp
xor
mov
outsb
stos
dec
aaa
aaa
adcl
idivb
adc
in
or
lods
sub
mov
inc
icebp
je
mov
repnz
jge
aad
cmp
hlt
sub
push
cmp
stos
add
mul
dec
lock
je
jae
jmp
pusha
pop
test
ret
cltd
push
enterw
loope
pop
fcompl
mov
cmp
add
mov
pop
lret
stc
je
mov
xchg
sbb
dec
test
jecxz
popa
decl
mov
mov
mov
jnp
enter
inc
inc
es
push
hlt
movsb
and
cmc
loop
fistpll
hlt
xchg
int3
sub
test
in
mov
into
je
and
xchg
popf
mov
fnstcw
test
add
jnp
pop
inc
pushf
xchg
cltd
jo
inc
or
das
push
out
and
inc
lcall
pop
sahf
mov
scas
in
push
xchg
add
insb
sahf
loope
in
push
in
cmp
add
xchg
fldenv
jle
cmp
mov
sub
cmp
subb
jp
sarl
fwait
iret
fldcw
lods
jae
cmp
cmpsl
fistpl
xchg
sbb
scas
outsl
int3
adc
mov
mov
or
int
aad
inc
sub
mov
push
stos
pop
or
jg
in
xlat
cmp
loopne
xchg
in
mov
jmp
mov
xacquire
mov
mov
mov
test
ja
popa
xchg
sbb
or
loop
cmp
aad
mov
pop
xchg
arpl
lahf
adc
outsb
push
xchg
sahf
xchg
mov
loop
imul
xor
cltd
pop
sub
das
pop
inc
ss
sbb
das
xor
dec
shrl
and
call
shr
sbb
addr16
rcr
andl
jbe
mov
das
int3
inc
add
test
cmp
rcrl
test
adc
out
mov
inc
scas
dec
insb
enter
xchg
adc
mov
ja
dec
scas
add
mov
xchg
mov
mov
adcb
jbe
inc
pop
jge
or
cltd
pop
xor
pop
in
dec
aad
std
xor
jbe
lods
stos
lods
mov
pop
mov
lods
jno
jns,pn
and
ss
push
mov
mov
call
dec
imul
icebp
mov
mov
pop
loopne
lret
dec
sub
jnp
andl
movsl
sub
cmpsl
out
mov
nop
pop
enter
adc
adc
mov
fstpt
fcompl
addl
ljmp
mov
mov
dec
test
aad
sbbl
cltd
jns
into
add
add
xor
imul
adc
or
push
mov
adc
fdivl
aaa
in
iret
xor
in
cltd
test
dec
jno
je
cli
ljmp
jle
pop
push
sti
inc
xchg
imull
cli
sarl
fsubs
xor
and
pop
fdivs
mov
add
pop
scas
pop
shrl
jae
scas
xorb
sub
cmc
inc
mov
push
outsb
ret
mov
outsb
mov
sbb
xchg
adc
mov
fistl
adcb
test
aad
cltd
test
or
mov
jo
cmpsb
sub
cmp
imul
xor
pop
enter
stc
popf
idiv
fadds
hlt
xchg
in
mov
sub
fcoms
lahf
jmp
aad
xor
and
push
jmp
inc
mov
int
inc
arpl
cmp
adc
xchg
fidivrl
pop
push
aas
loop
jl
nop
xchg
es
mov
lea
lods
imul
pop
xchg
mov
add
sub
out
push
pop
test
sub
adc
vmovhps
xchg
dec
dec
insl
movsb
cmp
loop
gs
jle
xchg
jb
shll
shrl
fidivl
incl
repz
imul
lret
lcall
mov
push
iret
pop
subb
gs
jb
adc
jmp
add
sbb
mov
fadd
ret
jo
pop
cmc
bound
sarb
imul
jl
pop
inc
lret
mov
dec
mov
out
pop
out
in
mov
iret
out
jp
push
jp
jne
xchg
jp
test
jl
jecxz
cmp
or
pusha
sbbb
daa
and
je
ret
push
fsubrl
call
loop
ljmp
dec
repnz
or
fistpll
jl
jne
inc
jae
pop
sub
xchg
add
out
pop
jp
pop
repz
and
bound
xor
pop
movsl
pop
jp
dec
push
push
adc
sbb
lea
movsl
xlat
out
scas
dec
cmp
push
mov
dec
fbld
inc
xchg
jb
xchg
shlb
cltd
jmp
fiadds
orb
add
push
inc
fwait
ljmp
lret
jmp
push
pop
daa
inc
mov
dec
arpl
adc
ret
orb
fldt
lods
mov
mov
cmp
nop
es
push
mov
adc
lea
and
lret
data16
jo
loop
jge
mov
movsb
ljmp
pop
mov
or
mov
mov
outsb
or
dec
rcrl
aam
pop
lret
out
cmpl
mov
loop
fstpl
or
mov
cmp
mov
mov
jp
inc
fists
or
rorb
xchg
mov
push
hlt
ss
decb
scas
gs
imul
and
xor
add
andb
test
push
loop
sub
mov
shlb
roll
jo
or
xchg
movl
jbe
cmc
add
inc
jmp
aam
rorb
mov
xchg
jecxz
xor
sub
repz
dec
or
ror
push
push
xor
enter
es
rep
icebp
test
loop
lcall
decb
sbb
ret
xchg
and
adc
aas
ljmp
xor
fmuls
and
xchg
scas
xor
ds
mov
cwtl
cmpsl
enter
dec
jns
xor
scas
in
or
jmp
or
sub
ds
fs
add
adc
pop
and
pop
pop
mov
adc
jl
insl
scas
inc
test
subl
out
in
lea
or
xchg
sub
js
mov
push
imul
and
nop
fstl
cmp
cmp
sub
dec
out
jno
std
jle
push
push
jg
pop
adc
pusha
pop
dec
pop
int3
add
loopne
mov
in
gs
inc
cs
and
push
sti
or
and
rclb
movsb
xor
jge
repz
cs
mov
push
jne
mov
outsb
and
mov
addl
call
dec
das
into
insb
xchg
rcll
xchg
int
in
xchg
fsubs
cmp
adc
inc
xchg
test
push
test
pop
pop
sahf
add
mov
ljmp
stos
int
add
mov
xchg
mov
xchg
test
cmp
popf
sbbb
sbb
ret
lods
jbe
push
add
cmc
mov
jb
testb
test
gs
aam
xchg
idiv
pushf
mov
xchg
dec
iret
popa
jp
lock
es
sbb
rcll
movsb
outsb
das
push
out
popa
mov
mov
stc
ss
sets
outsb
jnp
xchg
adc
pop
aaa
xor
mov
lahf
push
or
adc
inc
dec
pop
mov
call
ljmp
xor
adc
xchg
jnp
jge
loope
ja
jae
call
xchg
rcll
dec
push
repz
sbb
fnsave
xor
add
stos
push
loopne
dec
mov
cmpsb
dec
cmp
inc
mov
lods
mov
lret
arpl
fucomi
pop
jbe
fs
daa
xor
in
xchg
std
icebp
or
jnp
icebp
mov
cwtl
test
and
test
sarb
and
jnp
sbb
pusha
imul
pop
sub
lahf
aam
pop
jmp
stos
repnz
lahf
and
loopne
and
cmp
out
xor
pushf
xchg
aas
cltd
xor
jmp
sub
jno
roll
imul
lods
pusha
push
mov
lret
mov
cwtl
xchg
add
movsl
xor
sub
arpl
fistps
mov
mov
push
mov
arpl
cwtl
lea
comiss
xchg
mov
mov
idiv
insb
push
cmp
sbb
xor
mov
jb
cwtl
xor
test
fimuls
cmp
loope
mov
fwait
fs
sbb
imul
sbb
push
leave
mov
dec
pmaxsw
push
out
pusha
push
or
lahf
adc
jle
jge
loopne
iret
clc
es
out
iret
cmp
mov
jecxz
lahf
mov
jnp
mov
jno
lcall
frstpm(287
inc
mov
sahf
mov
add
daa
nop
or
mov
push
std
adc
sbb
imul
frstor
nop
xchg
or
push
sub
pop
inc
or
push
ds
mov
xor
and
cmp
ret
sub
sub
or
xorl
xchg
and
push
add
cmp
ret
loope
lods
pop
sbb
movsl
std
cmp
mov
mov
je
pop
stos
clc
add
stos
les
pop
enter
pusha
jmp
enter
sbb
addb
or
in
rol
and
insb
add
xchg
pop
pop
es
arpl
ret
mov
icebp
fiaddl
cmp
xor
mov
data16
loopne
mov
dec
push
in
push
and
mov
xor
roll
clc
int3
cmp
data16
cmc
in
in
push
popa
pushf
call
imul
das
adc
cs
sbb
popa
inc
add
mov
mov
iret
add
cmpsb
dec
fs
ret
jg
xchg
outsl
mov
inc
inc
or
out
jp
mov
ficomps
sub
nop
pop
sbb
lret
pop
sub
sbbl
popl
fwait
test
add
aam
jge
lds
cltd
jns
aas
shl
into
pop
sub
xlat
adc
aas
push
ret
inc
xor
adc
adc
xchg
xor
dec
push
sti
xor
sbbb
jl
stc
mov
xchg
add
cmp
into
sub
fldenv
shr
xchg
cmpsl
lods
shlb
and
jecxz
adc
mov
mov
test
pop
adc
mov
inc
adc
data16
loope
shr
fimull
dec
daa
cmpsb
cs
nop
imul
jbe
test
push
iret
inc
inc
pop
dec
and
sarl
dec
testb
mov
xor
jo
add
int3
add
or
int
or
ficoms
mov
fcmovbe
and
push
sti
and
mov
xchg
or
inc
call
daa
cs
addr16
pop
std
pop
addb
movsl
fiadds
push
push
xor
pop
xchg
push
fwait
addl
pop
mov
daa
jno
or
xor
push
stos
dec
jl
aas
or
testb
dec
int
inc
bound
and
mov
shlb
xchg
dec
aas
negb
dec
lock
inc
adc
loope
sub
dec
inc
fdiv
push
mov
mov
repz
push
xor
adc
out
jo
sbb
push
jns
pop
lret
mov
pop
aam
bound
push
dec
int3
insl
movsl
adc
out
cmpsl
das
jp
sbb
repnz
cmpsl
imul
rorb
inc
imul
xchg
push
fbld
xchg
aad
mov
int
and
xchg
andb
push
adc
pop
arpl
pop
xchg
scas
jmp
pop
or
adc
push
out
std
inc
loope
pop
mov
ror
dec
int3
test
ret
xor
jno
and
adc
mov
popa
shll
xlat
push
cwtl
jecxz
mov
in
pop
jp
mov
pop
and
call
adc
cmp
leave
ret
imul
repz
loopne
fidivrl
mov
push
clc
aad
stos
xchg
sbb
popa
xchg
mov
mov
add
mov
sbbb
scas
jl
aad
js
ret
pop
jno
mov
pop
ljmp
add
xchg
sub
mov
out
sub
outsl
aas
push
mov
int
sbb
mov
mov
push
imul
div
rcrb
cmp
push
movsb
icebp
inc
ret
outsl
mov
std
push
cmp
pushf
imulb
test
push
sub
stos
mov
das
leave
and
outsl
or
push
repz
das
fnstsw
push
scas
push
pcmpeqb
pop
inc
negl
pop
lock
mov
fnstsw
jae
adc
fdivp
mov
movsb
dec
cmp
mov
add
and
pop
insl
pop
dec
and
adc
nop
pusha
and
xor
lea
fcmovbe
aaa
push
cmp
fsubrl
xor
adcb
or
das
xor
rolb
mov
jae
xor
xor
xchg
es
subb
push
lret
inc
jmp
or
loopne
es
arpl
cld
cmpsl
lret
test
ret
inc
push
mov
add
repz
push
jbe
and
jno
jno
add
movsl
jns
inc
bound
mov
stos
jecxz
mov
es
push
sub
xor
fistpl
std
sahf
int3
adc
cmp
xchg
xchg
push
es
mov
testb
imul
lock
nop
sbb
ret
mov
aaa
ret
jo
sub
icebp
rcrl
xor
adc
pusha
pop
jp
dec
mov
adc
add
loope
sahf
adc
rorb
dec
push
mov
sbb
sbb
lods
mov
data16
sbb
lcall
out
push
pop
dec
push
cwtl
or
sub
bound
insb
jmp
and
lret
xchg
leave
add
xchg
sahf
dec
les
shll
fimull
sarb
arpl
jns
sbb
ret
imul
dec
pusha
cmpsb
lret
mov
hlt
or
loopne
add
sub
xchg
xor
loope
sub
xchg
jge
jno
push
jo
jnp
movsb
into
sub
insb
xor
or
aam
imul
sub
icebp
pop
xlat
andl
neg
shrb
pop
jns
or
cmp
sub
aas
sbb
mov
scas
cmp
lods
fcoms
sub
and
test
ss
jo
scas
mov
jo
dec
dec
adc
sbb
in
cmpsl
insl
lret
push
mov
push
mov
cltd
mov
mov
push
mov
int
cmpsb
xor
mov
cmpsl
add
xchg
imul
jmp
rorl
mov
ficoms
stos
sub
inc
call
dec
jae
mov
stc
mov
mov
jo
inc
pop
inc
xor
mov
ror
int
push
shl
popa
mov
cmp
pop
add
popf
sbb
insl
mov
loop
aam
and
fidivrl
push
xor
movsl
and
addr16
rol
pop
push
pop
and
pop
jne
add
add
nop
lods
rcrl
xchg
xor
gs
data16
shlb
shll
sub
adc
pop
sbb
cltd
xchg
sub
repnz
sbbb
jp
iret
push
test
test
imul
mov
jb
imul
lock
and
fnstenv
or
fldl
imul
and
sbb
jmp
add
and
dec
jae
movsl
add
mov
sub
xor
inc
push
xlat
aaa
int
xchg
dec
push
ret
inc
cli
insl
loopne
insl
div
in
push
stos
inc
fcoml
popa
lods
test
fwait
enter
sti
jmp
in
xlat
sub
mov
movsl
ss
mov
sbb
and
out
add
rcrl
das
lret
add
into
add
lahf
addr16
adc
xchg
iret
aas
pop
lahf
jmp
int3
cltd
in
or
pop
xor
xor
mov
mov
pop
outsb
add
jp
aas
mov
mov
pop
dec
mov
enter
out
or
imul
push
clc
pop
rorb
mov
xchg
mov
add
int3
mov
mov
in
xor
cmp
mov
test
mov
test
ror
push
inc
xor
ljmp
rorl
cmp
lcall
mov
mov
xlat
jle
and
push
pop
mov
xlat
mov
dec
jecxz
mov
jp
xchg
jb
dec
cmp
out
dec
std
rorl
imul
sti
cmp
aas
mov
outsb
lods
clc
mov
loopne
stc
mov
loope
das
jo
push
xorb
hlt
jmp
jecxz
clc
sub
or
push
sub
dec
imul
pop
xlat
xor
mov
cs
aad
popf
sub
orb
and
push
cmp
mov
bnd
pop
mov
dec
inc
int3
mov
repnz
jmp
repz
pop
xchg
sub
ja
xor
jae
and
mov
and
adc
jne
sub
pusha
mov
sbb
xchg
std
je
mov
ret
mov
cmp
insl
cld
in
mov
pop
dec
iret
dec
inc
xchg
fisubrs
popa
test
dec
stc
ret
xchg
jge
inc
ret
test
xchg
push
sub
jl
test
je
cs
ds
iret
pop
sarl
das
les
push
jle
enter
fs
fs
lcall
test
outsl
sub
rcrb
push
add
mov
int3
mov
mov
stos
push
lods
adc
push
xor
aad
pop
lods
scas
movsl
lods
xchg
sbb
negl
es
cltd
mov
pusha
sub
jge
mov
xchg
movsb
jns
shl
stos
popa
or
mov
dec
lret
xchg
pop
xor
push
jmp
mov
jg
jmp
dec
or
int
sbb
loopne
jns
les
pop
cmp
pop
mov
sahf
neg
adc
insl
js
lahf
ja
xchg
push
jae
aad
add
adc
xor
mov
adc
push
push
add
jno
xor
sbb
fisubl
adc
push
mov
repnz
insl
je
rol
js
out
test
lods
fadds
dec
mov
mov
add
xchg
pop
xchg
sub
sub
or
or
es
adc
mov
shl
mov
xor
outsl
outsb
lods
lods
xchg
cmp
adc
mov
push
xorb
cmc
push
dec
cltd
pop
push
cli
or
pushf
add
and
fwait
dec
inc
bound
dec
repz
or
xchg
mov
lret
jbe
daa
aad
popa
int
mov
pop
movsl
jmp
xor
add
sbb
enter
mov
clc
data16
xor
mov
gs
push
outsl
stos
and
add
prefetcht1
xchg
pop
cli
loopne
and
jnp
mov
lret
hlt
in
das
sbb
jno
mov
in
stc
push
cmp
ja
inc
scas
fdivl
jbe
xchg
rolb
mov
test
lahf
adc
lret
cmc
sahf
fdiv
add
mov
outsl
mov
push
sub
push
and
andb
jecxz
mov
cmc
aas
sub
lahf
lock
sahf
aam
and
pop
lods
jmp
fcompl
push
dec
mov
gs
sub
cmpsb
mov
jmp
lock
hlt
mov
inc
jp
iret
or
arpl
cltd
setno
sub
xchg
jne
out
sti
mov
lret
sbb
pop
cmp
and
es
cmp
jp
je
sub
jle
nop
mov
inc
sbb
pop
xor
repnz
xchg
jge
adc
xchg
negl
pop
adc
lock
mov
jnp
xchg
shll
pop
add
and
mov
pop
rcrb
and
in
xchg
xchg
xchg
movsl
push
jge
inc
mov
pop
inc
sahf
jo
xchg
loope
repnz
mov
cld
leave
push
xor
jne
sbb
dec
push
imul
mov
out
push
add
test
mov
fnsave
shrl
cltd
inc
adc
cmp
add
adc
test
cs
loopne
test
add
shrb
mov
daa
leave
pop
ja
xor
std
int
stos
lcall
or
jnp
aam
push
sti
mov
jl
test
hlt
mov
out
das
inc
into
sbb
mov
or
les
push
cwtl
dec
and
cld
int3
mov
leave
loop
xchg
dec
insb
or
fistpl
mov
ret
inc
sbb
rorb
mov
mov
add
pushf
mov
inc
push
fwait
ja
cmc
and
ss
mov
jnp
pop
mov
clc
mov
cmp
dec
dec
andb
cmp
ja
cwtl
or
out
sbb
xchg
pop
and
stos
sbb
int
icebp
es
ja
jnp
mov
std
mov
cmp
push
cltd
mov
rorb
cltd
fs
in
out
jmp
mov
dec
mov
movsb
aaa
out
sub
sti
jmp
dec
ss
pop
inc
mov
dec
sub
lods
repnz
cmp
inc
or
pushf
stos
insb
pop
jle
xor
imul
nop
icebp
pushf
in
cmpl
xchg
cs
scas
jmp
sbb
rcll
xor
enter
mov
jmpw
dec
push
push
sub
mov
xchg
loope
dec
jb
or
lea
jecxz
ret
adc
xlat
int3
push
fidivs
sub
xchg
add
dec
clc
out
mov
inc
pop
pop
add
mov
sbb
out
adc
mov
or
and
xor
mov
pop
jg
cmc
pop
sub
nop
aam
inc
push
pop
in
cwtl
daa
mov
in
pop
jo
mov
bound
xor
or
lea
dec
adc
adc
movb
loop
cld
push
push
adc
test
add
test
sti
and
and
mov
adc
stos
sbb
and
cmpsb
sub
std
fildll
xchg
shll
rclb
mov
popl
mov
icebp
push
adc
rclb
pop
pusha
xchg
int3
cmp
jne
imul
mov
cmp
sbb
and
add
xor
push
or
dec
mov
lret
sbb
and
lretw
add
ljmp
fdivs
lret
cmp
sbb
jmp
mov
sub
insb
mov
dec
push
popa
nop
mov
push
inc
or
out
mov
sahf
ficomps
dec
lds
sub
mov
jns
adcb
outsl
or
out
xchg
mov
cmp
and
push
xor
int
mov
pop
cmpl
fstl
push
lcall
jno
mov
add
shrb
xchg
shl
push
inc
incl
xchg
lods
xor
mov
arpl
into
in
lcall
mov
push
and
sbb
into
fdivs
aam
leave
inc
mov
jp
test
cmp
icebp
and
pop
and
es
je
pop
sbb
fistl
sub
xor
rorl
dec
sub
cli
adcb
jg
fldt
add
push
cli
push
data16
lahf
leave
bsf
mov
and
adc
jns
sbb
xchg
cmc
push
ljmp
push
loope
stos
push
ret
aad
ret
inc
rolb
addl
daa
lea
cmpsb
mov
fucomi
xchg
xchg
inc
pop
lods
data16
nop
mov
mov
mov
aaa
call
lret
and
cmpsl
push
ss
mov
inc
addr16
rclb
addr16
fwait
inc
push
mov
std
mov
dec
int
sub
pop
inc
sbb
ret
xchg
jl
push
jl
hlt
jns
testl
rcll
inc
lret
mov
in
rol
test
addr16
add
test
sub
and
jp
dec
mov
lfs
pop
ffreep
fisubrl
sub
cmpsb
cltd
and
add
les
cmp
fucom
out
mov
jne
repz
cmp
mov
dec
insl
arpl
and
mov
daa
mov
jo
cmpsl
xchg
pop
jno
outsl
mov
ret
iret
sub
ds
adc
adc
sub
sbb
rol
arpl
pop
pop
pop
orl
ja
cmp
mov
arpl
and
outsl
mov
xchg
xchg
sub
push
outsl
popf
orl
and
sub
jbe
jmp
sub
pop
enter
daa
fcmove
cmc
imull
aam
inc
ret
push
add
sub
jmp
mov
dec
rep
faddl
xchg
jmp
imull
nop
fidivl
push
fisubs
mov
jo
subb
lock
dec
pop
push
pusha
mov
jg
or
cmp
xor
das
pop
fsubrp
leave
xchg
pop
mov
or
popf
add
jg
push
sarl
ja
push
or
hlt
push
cmp
push
loopne
xchg
iret
test
fcmovne
addl
es
ds
pop
dec
xor
stc
sbb
movsl
pop
xor
into
subl
mov
xor
inc
adc
xchg
pop
push
enter
rorb
push
out
inc
fstpl
mov
cmp
push
sti
mov
cmp
sar
lods
aaa
es
cltd
jbe
ret
xchg
adc
loopne
inc
add
les
xchg
clc
inc
or
push
xchg
das
test
daa
jecxz
xchg
add
xchg
scas
sti
cmp
fldenv
in
push
mov
xchg
dec
pop
or
cld
add
stc
gs
dec
sub
aaa
inc
jl
jae,pt
pusha
cmp
test
or
fcom
pop
or
sbb
repz
fisttpll
sub
mov
sbb
xchg
mov
fsubrs
int
push
or
outsl
lcall
enter
loop
lods
es
test
je
pushf
into
sbbl
pop
daa
pop
sub
mov
dec
or
mov
mov
std
dec
pop
in
mov
fmul
in
mov
dec
cs
loopne
shrb
cmp
cld
fdivrs
shll
and
pop
in
mov
jae
add
or
ja
jg
loope
xchg
adc
pop
jle
mov
rcll
stc
dec
xchg
xor
call
inc
shll
sbb
mov
xchg
ljmp
xorl
rcrb
shlb
sbb
cmp
shrb
loopne
pop
mov
cwtl
enter
dec
xchg
arpl
aad
fmul
xor
jg
iret
inc
pop
xchg
divb
push
loope
lret
mov
inc
lods
enter
pop
mov
xor
loopne
adc
cmp
inc
out
fisttps
jg
sub
mov
xchg
mov
scas
jmp
jmp
shlb
or
pusha
xor
xchg
pusha
ret
test
call
and
and
mov
mov
add
pop
xchg
mov
jne
lds
mov
les
mov
lods
hlt
insb
mov
outsb
jecxz
mov
or
out
cmp
mov
add
cltd
lahf
add
and
leave
jmp
inc
sub
lea
or
sub
subl
cmpsl
pop
jno
aaa
xor
arpl
cli
pop
loop
jp
xor
pop
xor
les
xchg
mov
je
adc
jecxz
jnp
mov
out
inc
and
addr16
lods
in
cmp
clc
sbb
dec
add
mov
addr16
in
lock
mov
push
mov
jo
and
xor
push
jnp
xchg
pop
cwtl
sbb
gs
in
cmpsl
lock
jbe
push
mov
mov
mov
xchg
ss
pop
stos
aaa
cmp
mov
fldenv
dec
sub
push
mov
enter
and
lret
inc
xor
dec
int
or
push
decb
xlat
pushf
adc
mov
test
test
mov
sahf
outsb
daa
cmp
cmp
test
ret
sbb
jmp
pop
lcall
cmc
push
push
sbb
pop
decb
int3
pusha
xchg
sub
call
cmp
add
insb
sti
scas
fsubr
push
and
inc
and
inc
mov
cmp
stc
fwait
pop
or
or
xchg
mov
lcall
mov
test
xchg
stos
mov
aad
pop
xchg
mov
mov
shrb
inc
lcall
int3
mov
mov
sarl
int3
lret
js
inc
jmp
dec
mov
pop
sti
pop
andl
push
jno
ja
adc
leave
dec
decb
repnz
xor
test
loopne
in
xor
insl
xchg
sbb
sbb
mov
pop
addl
cmp
sar
gs
sahf
xchg
adc
pushl
push
mov
fnsave
xchg
dec
orb
ja
fsubrs
int
leave
fisttps
fdiv
push
pop
adc
jge
adc
repnz
into
arpl
data16
or
shll
xchg
mov
fsubs
into
xchg
add
and
popa
mov
int3
sbb
jmp
inc
popf
je
or
daa
and
sti
ljmp
adc
fucomp
inc
pop
inc
ficoms
jge
stos
lods
mov
push
leave
fldl
pop
mov
pop
sbb
int3
mov
push
fwait
sub
lds
mov
cltd
cld
sbb
dec
sbb
or
cmp
pop
in
cwtl
je
popa
mov
pop
bound
add
loope
dec
test
stos
xchg
push
push
push
repz
negb
hlt
jmp
dec
iret
adc
jecxz
rorb
loope
in
movsb
cmp
ss
mov
ret
andl
or
test
adc
cmpsl
lods
dec
mov
xchg
or
addb
inc
iret
xor
cmp
inc
cli
inc
mov
aam
stos
mul
mov
movsb
data16
jg
pop
xor
mov
nop
push
aaa
out
pop
les
fsubrs
sti
sub
std
xchg
or
in
loope
push
pop
dec
cmp
imul
je
idivb
dec
out
jb
push
sbb
mov
popf
push
pop
sub
mov
jae
clc
push
js
pop
ss
xor
or
mov
into
mov
es
repz
data16
pop
rcrb
ret
inc
loopne
sub
mov
cli
jecxz
js
xor
xor
jl
jmp
test
xor
adc
mov
and
call
in
imul
pop
loope
jecxz
and
scas
aad
jl
ret
or
inc
add
pop
cmpsl
in
loop
mov
cmp
or
lret
in
jbe
aad
mov
xor
jo
mov
xchg
inc
jl
push
push
pop
lahf
dec
inc
cli
fdivl
mov
cmp
push
call
pop
xchg
mov
push
mov
adc
add
or
xchg
psrlw
fidivl
mov
adc
imul
cmpsb
jecxz
push
pusha
xor
dec
mov
push
or
mov
out
ljmp
rorb
cmp
jl
test
xor
lock
sub
dec
pop
das
mov
cmc
adc
cmp
clc
jecxz
dec
pop
xor
orl
push
add
xchg
out
imul
mov
mov
into
xor
sbbl
push
xchg
push
lret
adc
sub
mov
shrb
mov
in
sbb
mov
jo
dec
outsb
push
pop
btc
das
sarb
enter
mov
jl
sbb
outsl
xchg
mov
shlb
loope
adc
xchg
stc
pop
push
faddl
and
mov
cs
lret
hlt
negb
insb
data16
ret
fs
loope
jnp
mov
sar
mov
std
add
jne
jg
gs
mov
mov
mov
add
sbb
xor
mov
jo
and
ret
sub
gs
popf
fidivrs
loopne
mov
dec
aaa
dec
jbe
das
nop
xchg
sbb
inc
jecxz
frstor
inc
jb
push
fs
cmp
nop
push
sarl
push
cmp
adc
lcall
cli
xor
mov
sbbb
je
movsl
jb
and
ret
mov
xchg
aas
std
add
pop
xlat
mov
cli
das
push
adc
in
lea
pushf
xchg
pushf
movsb
sti
fwait
mov
xchg
xchg
pop
sub
xchg
inc
je
cld
mov
aam
xor
and
cmpsl
ja
hlt
mov
lods
clc
fstpl
movsl
adcb
sar
lock
push
stos
jecxz
sbb
out
jb
test
aam
leave
popa
cmp
rorb
inc
mov
push
adc
and
dec
xor
xor
insl
fcmovnb
cmp
fwait
adc
mov
stos
test
pop
pop
push
sbb
je
pushl
shrl
add
and
imul
les
lods
push
jne
xor
jb
jnp
ss
icebp
xchg
inc
push
mov
jae
icebp
pop
in
out
xor
lods
ja
pushf
xor
int
stos
push
or
out
repz
stos
pop
das
loop
push
xchg
in
inc
decl
cmp
out
pop
mov
pop
or
adc
jae
inc
lea
xlat
scas
push
adc
rcrb
xchg
jns
cmp
xchg
lds
push
pop
inc
sbb
inc
fcmovu
push
mov
or
jb
lods
adc
jnp
or
nop
cld
adc
aad
and
daa
add
gs
xor
popf
leave
xchg
cs
push
in
or
lret
mov
mov
dec
test
stos
mov
orb
scas
in
mov
sbb
jmp
out
sub
mov
pop
add
out
inc
fcoms
out
pushf
add
mov
sbb
repnz
call
and
neg
and
into
flds
push
test
sahf
jnp
adc
jl
ret
js
mov
pop
xor
pop
ljmp
adc
and
decb
fstl
pop
inc
adc
call
insb
fstpt
push
and
adc
mov
hlt
cmp
lret
xchg
imul
das
sub
push
sbb
lea
hlt
sub
jns
je
or
clc
test
clc
daa
xchg
cmc
pop
std
mov
enter
cmp
and
xlat
dec
out
mov
or
test
or
push
mov
rorl
or
mov
sbb
inc
inc
xor
pop
sbb
sbb
fnsave
mov
pushf
loope
ret
pop
cmp
lds
fisubs
jo
adc
dec
sbb
int
lds
push
mov
pop
add
sub
addl
out
jbe
mov
lds
push
pop
test
adc
sti
inc
loop
sub
nop
fadd
std
test
xchg
inc
cs
cmp
lods
test
arpl
ja
in
cmp
hlt
push
jmp
insb
insl
and
in
push
mov
and
ja
mov
mov
pop
inc
insb
scas
arpl
sub
and
mov
lods
adc
or
negb
insb
in
sarb
popl
dec
mov
mov
dec
insb
cmpsb
mov
fldt
lods
sahf
xlat
popa
mul
ljmp
call
daa
add
aas
xor
imul
into
aas
jp
jmp
mov
jae
sub
in
push
lahf
std
outsl
mov
dec
lock
outsl
enter
mov
xchg
xchg
mov
or
cmpsb
js
xchg
inc
std
xor
xchg
jae
xchg
push
aad
and
jl
sub
popa
arpl
mov
test
ret
into
jg
or
push
test
sub
popa
test
adc
xor
aam
jmp
cmp
testl
pop
pop
sub
rcr
jb
mov
jl
push
add
imull
popa
loopne
pop
lock
shlb
xor
enter
mov
sub
fldcw
mov
jno
pusha
mov
cmc
test
mov
ret
mov
xor
push
jmp
xor
adc
out
mov
dec
aaa
adc
pop
pusha
xor
aaa
rep
jo
adc
je
lods
sub
add
cmpsl
insl
inc
adc
xchg
xor
adc
js
les
xchg
fimull
jno
cmp
aad
sbbl
push
cmp
and
jecxz
call
and
jne
dec
inc
loop
dec
jae
and
and
movsl
xchg
dec
popl
pop
out
cmpsb
outsl
xchg
jge
inc
sub
out
inc
or
or
and
popf
dec
push
xchg
cltd
cltd
loope
fisubs
fsubrs
adc
loope
pop
sti
jno
mov
insb
dec
popa
add
adc
fsubr
fimuls
fstpl
out
dec
xor
pop
pop
push
mov
out
rclb
mov
xchg
insb
sbb
add
add
arpl
xor
les
sbb
push
icebp
fadds
pop
adc
movsb
cmpsl
push
arpl
dec
sbb
push
xchg
inc
adc
icebp
ret
push
out
test
scas
cmpsb
iret
fwait
push
dec
push
rcrl
cmp
arpl
arpl
xlat
pop
out
mov
jmp
jp
insb
call
xor
and
repnz
xor
push
cmpsb
xchg
mov
mov
push
scas
popf
mov
cltd
ret
lods
and
enter
mov
mov
stos
or
ret
pop
xor
mov
outsl
push
test
fstps
pushf
mov
mov
enter
or
dec
ljmp
fdiv
sbb
lcall
dec
outsb
pop
inc
icebp
jb
pop
sub
mov
push
pusha
push
xchg
rcrl
add
sub
in
pusha
or
dec
iret
jle
mov
movsb
ret
lahf
and
scas
hlt
lahf
pop
jp
adc
dec
or
negb
aaa
mov
inc
daa
jns
jns
into
sub
and
insb
push
cmp
in
nop
repz
mov
daa
mov
cmc
lea
outsb
sub
icebp
fsubl
and
dec
add
addr16
int
sbb
sub
daa
dec
pop
imul
aaa
sbb
fwait
out
popa
dec
jnp
jno
aas
adc
dec
inc
addr16
xlat
xorl
xchg
es
jns
shl
addb
mov
xor
adc
lcall
and
shl
imul
lret
dec
jp
jno
aad
daa
sub
push
loope
rcrl
dec
insb
jnp
dec
jae
lret
pop
push
movsl
nop
dec
push
out
mov
divl
int
inc
shll
ret
js
aaa
lret
and
ss
cmp
test
lcall
cmpsb
push
push
add
add
and
outsl
jmp
jno
cmp
mov
xchg
xor
iret
dec
nop
scas
sbb
mov
cld
notl
ss
jg
jecxz
cmp
and
xor
mov
jp
and
pop
adc
aam
loopne
ljmp
xor
dec
andl
lret
pusha
xchg
or
cmc
dec
jno
xchg
dec
push
lret
cmc
and
shlb
aam
cmpsb
scas
mov
adc
movsb
sbb
mov
mov
sbb
out
es
fs
scas
out
pop
push
ds
xchg
xchg
je
mov
mov
fs
push
or
sub
sti
mov
loope
pop
nop
jge
push
dec
jne
lock
jl
jmp
testb
orl
ja
pop
push
insl
das
push
xlat
int3
js
mov
pop
fwait
or
int3
pop
dec
and
data16
clc
sarb
mov
sbbl
jmp
jmp
pop
mov
pusha
pop
sbb
push
xchg
leave
fcmovbe
pop
inc
fxch
shrb
imul
leave
mov
jecxz
sahf
inc
cs
popf
fcomps
cwtl
sbb
mov
call
mov
xor
jmp
pop
inc
push
mul
sub
testb
jle
insl
ret
dec
sbb
imul
popf
dec
sbb
or
pop
fyl2x
daa
es
mov
dec
int3
movsb
dec
xchg
cwtl
int
cmp
cmp
mov
stc
or
fisubl
andb
iret
pop
loope
mov
jecxz
repz
mov
dec
inc
or
or
das
mov
sti
pop
or
mov
out
shr
adc
out
cmc
shl
jne
push
jb
push
xchg
sarl
je
addr16
insb
js
inc
daa
lcall
ret
in
or
popf
adc
push
or
ss
jg
js
stos
js
xor
arpl
shll
gs
daa
in
push
mov
ficoml
rcrl
cmc
adc
inc
jmp
xlat
mov
cmpl
aam
stos
mov
insb
aam
cmp
lods
mov
jmp
aaa
popf
push
arpl
lock
jge
sti
push
sarb
mov
imul
mov
insl
and
add
popa
and
xor
xchg
mov
mov
jecxz
sbb
mov
jmp
data16
out
xor
jp
fdivrl
jnp
push
aas
imul
arpl
jmp
orl
subl
test
xor
movsb
inc
sbb
add
decl
js
lahf
popf
cwtl
pop
jns
push
or
imul
mov
outsl
xor
sti
out
cmpsb
cltd
adc
pop
mov
pop
lret
and
sub
dec
int3
cmp
repz
mov
aas
push
icebp
rorl
daa
sub
sbb
mov
jg
lcall
xchg
and
fbld
mov
jnp
sub
scas
test
xchg
lret
pop
pop
int3
xor
icebp
das
test
movsb
push
je
cwtl
sub
shlb
mov
sarl
pop
lret
xchg
lock
jns
sbb
leave
push
icebp
pop
ljmp
pop
xchg
out
jp
lcall
pop
dec
dec
hlt
push
inc
adc
into
jnp
movsb
mov
or
push
data16
inc
pop
jo
pop
arpl
push
ss
xchg
inc
sbb
pop
and
in
fs
jg
inc
mov
or
mov
subl
sbb
xor
testl
or
mov
test
xchg
or
scas
cld
roll
jae
pop
fs
imul
xlat
jns
jmp
sbb
push
jle
or
insl
mov
jl
test
es
mov
movlhps
outsb
sbb
mov
icebp
and
push
fisubrl
xchg
fcmovnb
in
lods
jbe
pop
pop
add
push
int3
aam
ds
cmpsb
mov
jecxz
pop
iret
inc
lds
jns
les
mov
popf
xor
push
adc
or
xchg
pop
cmpsb
loop
jno
jg
sub
jmp
adc
dec
push
shlb
sub
pop
lret
or
xor
add
gs
add
testb
xor
and
in
mov
test
insb
or
cli
dec
xchg
push
xchg
cmp
lahf
es
ret
stos
xor
cli
icebp
xchg
xor
adc
cli
mov
jmp
pop
jmp
fcoms
cli
or
jg
daa
cld
push
scas
xacquire
cwtl
pushf
xchg
add
xor
mov
mov
ljmp
outsl
sbb
shlb
loopne
rcrb
mov
sbb
mov
sub
enter
pusha
sbb
dec
sub
add
cmp
imulb
xchg
mov
les
xchg
call
mov
in
and
lea
in
shll
sbb
and
lods
fsubl
negb
adc
and
aad
xchg
enter
cmpsl
inc
xchg
lea
fwait
jo
adc
gs
or
std
sub
pop
dec
mov
std
or
xchg
jo
jae
ret
ret
or
jle
aad
xchg
dec
or
loop
xchg
stos
mov
xor
sbb
sbb
pop
aas
xor
inc
fprem1
cmpsl
pop
imul
pop
pushf
mov
icebp
ljmp
fistpll
sbb
shlb
inc
pop
pushf
pop
testb
add
mov
sub
push
das
cmp
cltd
sahf
jle
ret
xorl
fdivrs
fidivl
outsl
mov
xchg
mov
xor
lret
xor
cmp
jmp
rcl
cmc
cwtl
loop
dec
mov
dec
and
pop
repz
pop
iret
mov
cld
fwait
andl
in
add
addl
hlt
sbb
push
xlat
cmp
dec
mov
call
cmp
mov
daa
inc
xchg
lea
popa
xchg
or
mov
sahf
subb
lea
fdivs
bound
int3
mov
inc
fisubl
inc
aaa
mov
sbb
jmp
inc
sbb
push
jl
push
ret
jmp
or
push
in
jbe
ljmp
jmp
fwait
cli
inc
mov
lahf
mov
xchg
jecxz
iret
xchg
lret
iret
cmp
mov
rcrb
sarb
mov
outsl
mov
xor
pop
fldenv
pop
jl
ljmp
clc
xchg
and
or
xor
sub
or
je
xor
ljmp
inc
sbb
add
rclb
iret
xchg
xchg
pop
add
mov
xor
mov
into
in
pop
mov
adc
vmwrite
call
add
data16
pop
sub
adc
sub
test
mov
rcrl
adc
mov
mov
shrb
mov
adc
push
fcmove
inc
iret
aas
or
and
push
mov
bound
jnp
mov
pslld
sub
cmp
insl
and
or
pop
sub
jge
sbb
sub
std
pusha
hlt
rorb
add
sbb
jle
mov
rol
adcl
jae
xchg
cs
mov
mov
mov
shll
pop
inc
xchg
in
and
call
insb
pusha
lods
jle
adc
nop
les
cmp
mov
sub
icebp
sbbb
movsb
adcl
outsb
pop
cmpsb
loope
cwtl
mov
test
dec
adc
int3
dec
adc
dec
push
jb
push
push
rclb
adc
push
testl
dec
inc
mov
divl
sub
fnstenv
or
test
xchg
mov
xor
cmp
sbb
jl
push
xlat
push
fbstp
dec
out
pop
xchg
jg
push
lock
je
fstpt
insl
mov
or
enter
out
jbe
push
cmp
mov
and
cmpsb
jl
mov
sbb
js
into
adc
shr
fstl
repnz
mov
sub
lahf
ja
push
jle
xchg
sbb
push
push
sbb
cmp
add
push
in
stc
movsl
popa
cmc
jle
push
jp
hlt
sbb
mov
xchg
ret
jmp
jb
pop
lcall
adc
stos
imul
aaa
pop
adc
push
jno
cmp
loopne
int
or
push
jg
jp
push
bnd
pop
cmpb
scas
mov
xchg
pop
sub
scas
pop
test
cmp
cmp
movl
cld
dec
lods
sub
xlat
jnp
jbe
leave
ja
movsl
mov
push
hlt
add
scas
xchg
xchg
cmp
ss
popf
dec
and
je
dec
das
jecxz
out
xchg
cmp
imul
fs
int
pop
inc
leave
lods
pop
mov
ss
scas
int
adc
sbb
mov
inc
sub
repnz
adc
aas
fucomp
mov
jns
es
rorb
daa
sbb
jp
xor
or
fs
push
xorl
insl
and
cmpsl
in
inc
ja
and
push
xlat
inc
and
mov
mov
mov
jge
imul
mov
jno
cwtl
cwtl
mov
fistps
icebp
inc
sahf
sub
xor
outsl
cmpsl
dec
in
mov
stos
or
shlb
push
adc
adc
sti
test
sbb
adc
cltd
push
stc
xor
insb
mov
insl
sbb
sar
or
sahf
push
clc
imul
int3
mov
fcmovb
js
stos
clc
sti
jge
pop
xor
push
movsb
ja
add
mov
pop
sub
inc
fmul
mov
or
xchg
aad
cmp
xchg
adc
push
lcall
lea
rcrl
xor
mov
popf
cmp
push
incl
notl
push
stc
sub
testb
int
scas
mov
push
mov
pop
cmpsb
lret
sbb
jl
push
jg
adc
ret
js
jns
jecxz
int3
aaa
rolb
sarl
or
sbb
bound
push
in
mov
and
xor
out
push
les
ja
jg
daa
add
daa
jge
lret
rcrl
dec
add
jle
inc
push
push
dec
lock
inc
adc
data16
xor
daa
sti
loope
xlat
fists
enter
or
or
xchg
push
sbb
dec
sbb
mov
movsb
sub
lcall
sahf
mov
dec
mov
mov
mov
xchg
ret
xorl
fistpll
adc
xlat
sbb
sub
push
pop
mov
cmp
push
push
int3
fwait
dec
mov
xchg
aas
sahf
jae
outsl
pop
cmp
or
push
cli
repz
aaa
mov
cmp
or
fldt
cmp
aaa
jmp
rclb
dec
mov
sbb
out
mull
imul
inc
in
fdivs
xchg
xchg
fsts
push
push
jle
std
mov
dec
push
nop
cmp
cld
cmpsb
sub
mov
xchg
jp
sub
jno
add
scas
and
lock
loope
lock
push
fistps
adc
stos
push
add
adcl
jge
cwtl
int3
xor
dec
and
pop
movsl
cmp
xor
inc
sbb
dec
fsubrs
sbb
add
add
cmp
xor
aas
bound
xchg
lret
inc
sub
mov
lret
test
or
ret
xor
mov
xchg
lahf
add
mov
mov
cmp
scas
lahf
mov
les
jns
cmp
add
movsl
pushf
add
ret
pop
jmp
data16
xchg
lahf
cld
ljmp
rcrl
stc
jecxz
hlt
jns
push
popa
ret
adc
inc
dec
xlat
sti
arpl
mov
nop
mov
divb
and
or
hlt
dec
aad
cmp
add
imul
fxch
lea
in
mov
mov
mov
mov
hlt
cld
aam
jae
inc
jp
dec
stc
lea
push
xchg
and
ss
jge
dec
stc
mov
pop
imul
add
add
mov
pop
jmp
outsl
mov
adc
dec
add
clc
sbb
ss
mov
adc
fs
inc
outsl
pushf
fwait
cld
nop
int3
push
sbb
mov
sahf
sti
dec
orl
insl
and
ret
aas
cmc
xor
scas
in
ds
pop
lds
add
shlb
mov
push
pop
sbbw
fldl
and
jl
lds
aam
insb
sbb
iret
and
je
cli
push
sbb
add
jmp
fwait
mov
test
enter
aam
adc
xchg
std
loop
xor
lret
mov
fistpll
lods
mov
outsl
pop
push
imul
mov
or
jno
sub
loop
scas
mov
cmpl
and
lret
xchg
push
push
clc
aam
adc
dec
pop
push
dec
je
out
rcrl
add
arpl
ficoms
dec
add
out
stos
xchg
lcall
shrb
lea
and
inc
mov
sub
sbb
xchg
clc
rol
dec
cmpb
stos
push
out
notl
fnstenv
cs
cmpsb
jbe
inc
pop
sub
mov
rcll
clc
movsl
lcall
in
negb
in
mov
int
lret
in
test
jmp
and
xor
mov
cmp
xor
push
das
mov
push
mov
jno
mov
xlat
popf
insl
fldln2
sub
jmp
jo
and
das
or
xchg
syscall
iret
mov
xchg
stc
je
inc
cmp
andb
aad
imul
in
ja
jae
jne
cmp
insl
out
cmp
lods
hlt
sub
sub
test
lods
xchg
or
xor
mov
fldcw
mov
or
xchg
or
aad
mov
pop
cmp
fistps
std
xor
xor
insl
addb
jnp
sub
orl
ret
arpl
cmp
jecxz
fadd
inc
fsubrl
stc
sub
stos
sbb
enter
push
cmpsb
sub
sub
xchg
ds
imul
insl
dec
inc
add
xchg
pop
aaa
adc
loope
sub
cmp
cwtl
cwtl
fsubl
lods
sahf
testl
movsl
mov
sub
cmp
les
faddp
mov
mov
fidivl
incb
pop
jecxz
out
cmc
fs
adc
push
repnz
xchg
pop
pushf
hlt
mov
addr16
pop
cli
push
pop
sarb
popf
je
stos
push
sbb
stos
mov
mov
sti
mov
sub
outsb
jae
cmp
outsb
aaa
push
cmpsl
adcb
jl
xchg
in
push
mov
pop
pop
xchg
data16
pop
sbb
xor
push
in
inc
add
jecxz
or
jle
sbb
mov
pop
pop
xor
aas
and
push
add
enter
xor
xchg
pop
dec
ret
xor
cwtl
jecxz
int
aad
jns
ret
xchg
inc
add
stos
pop
scas
pusha
or
outsb
imul
cwtl
addr16
sti
imul
cmp
add
cwtl
cwtl
mov
leave
roll
mov
fstp
test
cmp
mov
push
ret
cmpsl
jb
push
popf
mov
pusha
cld
lock
mov
adc
aas
jnp
sbb
pushf
fdivl
mov
mov
inc
mov
mov
pop
scas
xor
lods
aad
cli
jg
mov
in
cltd
pop
mov
sbb
xchg
int3
mov
mov
cmpsb
andb
push
or
add
lds
adc
bound
in
or
out
dec
mov
lahf
push
dec
pushf
add
aaa
xor
pop
push
pop
xlat
scas
sti
add
dec
pop
add
out
idivb
jmp
mov
btr
cmp
push
mov
inc
add
dec
add
mov
sub
in
push
fwait
cmc
jns
fmuls
mov
mov
in
mov
rclb
aaa
lock
pop
mov
mov
dec
fldl2t
xchg
push
jmp
sbb
repz
js
adc
adc
fimull
push
sbb
xor
aaa
mov
pop
jmp
add
cld
std
insl
test
xchg
stos
addr16
cmp
lods
fldcw
or
push
mov
jg
in
sub
dec
mov
sub
mov
pop
pop
imul
outsb
jp
xchg
addb
arpl
or
fisubl
aas
push
xor
add
mov
cmpsb
mov
movsl
pop
xchg
arpl
jmp
mull
fwait
jmp
leave
push
jnp
popa
cmp
inc
cwtl
add
cmp
push
clc
xor
int3
mov
mov
push
mov
push
push
mov
in
int
xchg
arpl
ret
test
jbe
test
xchg
rcll
imul
testb
mov
aam
mov
push
adc
into
xchg
xor
adc
idivl
pusha
ss
pop
addb
xor
add
xlat
cmpb
cmp
pop
add
out
sahf
cltd
icebp
mov
and
sub
in
mov
test
inc
jmp
loopne
outsl
mov
mov
out
loope
mov
and
ret
ja
xchg
les
dec
in
ljmp
aam
clc
icebp
out
lret
movsl
jns
bound
jnp
int
adc
jecxz
push
add
mov
call
pop
aas
rcrl
xor
popf
push
push
imul
mov
lods
outsb
add
data16
mov
jl
jo
cmpl
jge
pop
jmp
lahf
pop
mov
push
pop
dec
popfw
fxtract
mov
add
inc
push
xchg
ljmp
lock
in
mov
push
or
fwait
xchg
jecxz
iret
adc
mov
sub
or
or
adc
jae
add
das
stos
or
mov
stos
adc
add
push
out
adc
dec
jmp
push
orl
jp
mov
insl
hlt
push
sahf
daa
or
lret
int
int
push
rcll
or
popf
test
jmp
adc
cs
fwait
mov
mov
adcb
in
and
mov
and
and
ret
inc
sub
pop
je
or
ds
cmc
cmpsb
inc
mov
mov
add
lods
jecxz
mov
mov
cmpb
mov
dec
cmpsb
mov
sbb
data16
pop
xor
push
xchg
stos
lcall
movsl
xchg
hlt
adc
mov
clc
mov
insb
add
cmp
dec
xor
sahf
lret
push
pop
jecxz
add
jnp
mov
mov
pop
cmpsb
sti
arpl
hlt
xchg
or
ljmp
call
mov
or
sub
shrb
add
popf
pop
ja,pt
enter
js
jg
fidivs
mov
les
xchg
pop
jb
sbb
out
pop
in
sub
fst
int3
adc
shr
stos
xchg
jg
inc
pusha
xchg
loopne
mov
push
adc
std
push
cmpsb
repnz
shl
or
sub
pop
inc
rorb
adcl
fdivl
adc
or
pop
sub
xchg
pushf
lock
dec
xchg
pushf
lahf
cmp
push
fstl
fcoml
xlat
test
add
data16
rcrb
cmp
lret
jae
sbb
sahf
pop
xchg
mov
or
mov
in
sub
ret
imul
mov
imul
ret
movsb
xor
outsl
xchg
push
out
rclb
jno
fucomp
pop
cmp
ds
cmpsb
jg
shlb
inc
or
mov
mov
xorb
movsb
notb
outsl
jo
sub
jmp
andb
cltd
adc
push
push
pop
sbb
pushl
stos
pop
xchg
pop
add
shld
push
mov
push
rclb
xchg
xor
dec
xor
adc
test
into
fs
jp
and
adc
push
aas
out
or
subb
mov
sbb
adc
inc
mov
lock
push
repz
adc
das
push
xor
inc
push
and
movsb
inc
jle
js
or
insl
cwtl
out
fmull
inc
out
mov
xchg
mov
test
mov
and
test
sub
int
shl
add
mov
dec
dec
mov
mov
jecxz
and
hlt
or
lcall
mov
cli
fwait
jmp
xchg
xchg
in
add
lods
add
pop
dec
mov
in
ret
sbb
jo
in
pop
xchg
jo
xor
jp
lret
sti
jb
xor
or
out
lcall
pop
lea
sub
jp
icebp
add
lahf
movsb
js
insb
inc
adc
lret
sub
in
mov
xlat
push
in
jo
dec
mov
sub
adc
loope
stc
popf
jb
into
pop
lret
or
sub
jo
iret
cmp
out
or
mov
pop
inc
dec
iret
das
adc
insl
sbb
lods
push
mov
lret
popa
and
pop
sub
stc
push
popa
pop
ficoms
aas
jne
xor
dec
xor
into
pushf
inc
ja
xor
adc
push
jne
push
inc
adcl
orl
stos
lods
cmpsb
or
ss
movsl
jp
int3
jge
pop
lods
mov
sub
ja
cmp
sarb
mov
adc
popf
xchg
cmp
mov
ds
jle
ffree
jae
andl
test
sbb
iret
clc
mov
xchg
nop
test
fdivs
xor
mov
lahf
and
in
call
mov
mov
add
pushf
xchg
push
cmpsl
shll
cli
icebp
cmp
add
mov
mov
out
addr16
adc
jge
sbb
aas
inc
aaa
adc
std
fdivs
fists
fistpl
push
jle
xor
push
data16
inc
rorl
fldl
cmp
inc
mov
mov
adc
inc
or
or
mov
cmc
sub
adc
add
mov
pushl
into
adc
sub
rcrl
movsb
push
repnz
scas
cmp
cli
rorl
jbe
arpl
push
mov
int
bound
dec
jbe
or
daa
inc
dec
aaa
dec
or
fldt
adc
pop
mov
xchg
rclb
ss
dec
cmp
out
fmull
sub
imul
jge
inc
or
imul
stos
sbb
dec
mov
jge
xchg
xchg
xor
aad
and
iret
popf
ret
mov
stos
cmp
aad
sarl
or
xor
cmp
jb
ja
dec
cmp
arpl
add
pop
dec
jmp
or
shll
inc
cwtl
inc
xor
mov
add
shrl
sbb
fldenv
sahf
pushf
lds
sti
cli
push
or
call
push
pop
inc
sbbb
pushf
xchg
xor
aam
fisttps
bound
or
cmp
lret
pop
scas
add
outsl
inc
cmp
pushf
mov
movsl
add
out
sahf
dec
mov
add
divb
jae
or
dec
int3
or
add
dec
in
jb
sub
pop
fisubs
sbb
mov
fidivl
data16
aam
outsb
mov
lods
jnp
sub
fsubrl
push
icebp
jg
fwait
adcl
sbb
cs
mov
xor
icebp
jb
cld
mov
gs
in
sti
out
sub
stos
out
in
dec
sbb
stc
add
mov
std
sub
popa
pop
jp
push
je
jecxz
and
les
cld
mov
pop
mov
clc
test
pusha
sahf
popa
mov
in
mov
jmp
jae
mov
into
or
repz
pop
mov
je
mov
cltd
pop
xchg
cmpsb
inc
pop
stc
lods
sbb
mov
jno
rcrb
stc
pop
xchg
call
in
shlb
or
inc
ret
outsl
ss
dec
push
push
mov
cmc
into
xor
fnstenv
das
loope
mov
outsb
hlt
mov
adc
fwait
loopne
movsb
test
xchg
repnz
jg
mov
fldcw
pop
rcl
nop
push
pop
popa
fisttps
push
jno
lahf
or
xchg
mov
mov
push
scas
insl
lret
inc
and
ds
int
rcrl
mov
das
mov
les
movsb
pushf
pop
sub
push
cld
xchg
enter
xchg
inc
imul
cmp
cmp
cmp
xor
stc
test
pop
subl
inc
jmp
ret
xchg
push
lret
sbb
push
dec
mov
sahf
popa
ss
es
in
dec
xlat
in
rorb
push
fsubrl
inc
cmp
mov
mov
adc
sbb
and
push
sub
fwait
movsb
cmp
hlt
xor
sbb
idivl
inc
int3
or
dec
push
sub
mov
sub
sarb
sub
lret
dec
jle
mov
pop
loope
or
aam
pop
scas
test
rorl
loopne
xor
pop
cmp
in
and
push
xchg
pop
jle
push
pop
mov
std
rclb
loopne
orl
push
and
xor
jb
daa
jl
test
mov
cmp
js
repnz
loope
inc
pop
cmp
add
clc
xor
outsl
push
mov
enter
out
pop
pop
inc
jno
jmp
pop
ss
add
das
ss
loopne
in
inc
inc
or
xchg
rcrl
loope
adc
mov
in
pusha
push
outsl
sub
fs
xor
xchg
inc
dec
pushf
mov
sub
push
jno
add
les
faddp
push
ljmp
rorb
push
popf
sub
in
fcompl
pop
pop
pop
test
decb
lods
dec
loope
inc
or
add
cmpsl
popf
xchg
mov
xor
out
xchg
dec
dec
sub
mov
inc
iret
pusha
mov
xchg
jae
cmp
cmp
and
xchg
xchg
stos
enter
push
add
das
add
mov
mov
mov
mov
sahf
out
rorl
daa
pop
stc
paddusb
daa
fildl
pop
xchg
push
pop
xchg
push
jl
push
mov
xor
lcall
out
cwtl
fs
inc
and
js
mov
jmp
imul
cli
jb
dec
cld
mov
mov
fadd
cmp
jle
into
gs
in
stos
fidivs
leave
scas
xor
arpl
xor
sub
ret
dec
sahf
sub
adc
dec
int
cli
movsb
xor
mov
jp
out
rcr
icebp
test
jo
or
jle
dec
cld
cmp
mov
adc
xor
call
mov
test
out
push
outsb
iret
ret
in
sbb
xchg
fsubrs
imul
pusha
xor
mov
ljmp
pop
imul
arpl
xor
push
inc
mov
into
mov
fsubl
stos
aaa
ljmp
lret
cli
icebp
arpl
scas
ja
scas
lahf
and
push
es
test
or
adc
out
add
mov
movsl
inc
sti
popl
scas
pusha
cltd
sbb
mov
and
adc
and
sub
mov
inc
out
adc
ds
and
pop
movsb
push
inc
cmp
mov
inc
jle
xchg
jns
lea
mov
outsl
lods
mov
pusha
dec
xchg
and
out
pop
adc
inc
int3
repnz
fwait
cmp
mov
add
sub
sub
outsb
std
pusha
in
sub
divl
pop
xchg
jbe
sub
ss
sti
cmp
das
mov
adc
pusha
xchg
xchg
jl
xchg
push
push
mov
sbb
adc
arpl
push
push
fcompl
mov
repz
xchg
cmpsl
decb
jge
add
loop
outsb
fbstp
mov
jmp
push
sbb
mov
mov
mov
scas
es
xchg
xchg
sub
outsb
scas
xor
cmc
repz
sbb
or
inc
in
popf
or
in
dec
bound
out
and
ret
jp
in
stos
mov
mov
mov
dec
fiadds
lret
inc
xchg
jl
popa
outsl
pop
inc
or
jl
lea
stos
and
out
cmp
inc
and
jnp
or
aaa
mov
idivl
pop
xlat
mov
mov
xor
in
push
int
ja
sbb
xchg
loope
inc
or
aas
dec
out
jge
into
jno
sub
mov
pop
sarl
dec
pushf
stos
pop
or
scas
icebp
sahf
mov
mov
sub
arpl
fdivr
cmpsl
dec
adc
sarb
jg
fwait
pop
sbb
repnz
adc
movb
xchg
adc
in
xchg
repz
jecxz
es
adc
or
das
sub
dec
xchg
loope
mov
loopne
int
jns
int3
std
inc
loop
jg
lock
dec
push
xor
mov
cmp
cli
jge
imull
das
mov
dec
pushf
inc
push
adc
adc
mov
xchg
repz
mov
push
insb
ss
data16
ret
es
push
mov
fdivs
rorl
and
or
loopne
dec
mov
and
mov
and
test
mov
push
pop
shrb
jno
addr16
loop
sahf
push
adc
es
add
sub
inc
ja
cmp
fisubl
inc
clc
adc
rorl
mov
jg
js
iret
push
adc
pop
cmp
sbb
push
lock
inc
lcall
inc
and
je
not
pop
cmp
and
daa
aad
in
add
jbe
xchg
fcoml
pushf
in
mov
insl
mov
shrb
adc
imul
mov
pop
call
cwtl
or
push
xchg
les
flds
pop
sub
mov
mov
xchg
add
lods
jne
fwait
lret
and
sbb
sub
fstpl
ja
push
mov
mov
xor
cmpsl
xchg
sbb
shll
pop
dec
xchg
inc
sub
xor
fnstcw
int3
sub
mov
push
ret
shlb
xor
call
dec
int
shrl
sbb
mov
add
mov
mov
xor
pop
test
mov
scas
sub
jno
add
insb
mov
lods
lock
ret
negl
add
cld
dec
xchg
sbb
sub
cmc
scas
lods
icebp
adc
aad
fiaddl
cmp
les
pop
cmpsb
mov
and
mov
notl
cmp
inc
mov
fisttpll
loop
loope
lods
xchg
ja
repnz
and
jnp
lds
jecxz
rol
cmp
push
es
or
xchg
add
and
adc
lea
dec
je
mov
leave
ljmp
cwtl
mov
movsb
mov
int
cmpl
and
push
iret
sbb
pushf
jb
ret
push
jp
aaa
and
push
cmp
mov
js
aaa
test
sbb
hlt
jnp
in
jne
mov
add
mov
fistl
jecxz,pt
inc
sti
push
ret
ret
mov
mov
adc
aam
insb
jno
push
inc
mov
inc
cwtl
and
push
jle
lds
sti
cmc
js
mov
dec
sbb
adc
sbb
aas
inc
and
push
dec
inc
add
pusha
dec
cltd
int
mov
pop
test
add
xchg
mov
shll
fldt
push
fwait
arpl
cmpsb
out
imul
push
fcmovu
mov
in
sbb
jb
les
idiv
gs
enter
hlt
ds
ffree
xchg
aas
adc
mov
ret
ja
cmp
push
push
fcomi
shlb
xor
add
das
int
xor
jno
and
addr16
dec
cli
cs
in
fxch
clc
mov
mov
jge
jp
int
sti
mov
push
dec
rorb
push
lcall
fisubrs
out
add
jne
outsl
and
lcall
push
add
or
lahf
inc
dec
ret
leave
mov
cmp
cwtl
adc
inc
and
dec
xchg
xchg
inc
ret
sub
neg
cmp
xorps
xor
iret
push
je
aaa
or
sub
jle
push
push
sbb
push
pop
xchg
jp
in
test
adc
shrl
jg
je
cmp
xor
xchg
arpl
lahf
pop
mov
xchg
fwait
cmp
and
mov
cmp
mov
sub
cmc
xorl
or
notl
cmpsb
and
in
cltd
cs
je
rcrb
aas
mov
out
icebp
adc
imul
fdivl
js
cmp
in
stos
xchg
mov
push
xchg
cmp
mov
ljmp
jae
jg
pop
loope
sbb
fsubrs
mov
sub
and
ret
sbb
jg
out
jo
xor
mov
mov
xor
enter
lahf
rcrl
es
cmp
mov
sub
cmpb
lock
lret
mov
mov
data16
pop
jne
int
mov
xchg
insb
push
dec
inc
sbb
inc
xor
push
cmp
and
adc
insl
pop
ja
stc
mov
lret
scas
inc
pop
ss
cmp
aam
sub
xor
sahf
filds
stc
mov
addl
cmc
call
je
mov
enter
xlat
loop
sbb
and
andl
dec
sbb
pushf
out
adc
inc
fcmovnu
mov
cmp
pop
arpl
ss
call
mov
add
stc
pusha
jo
pop
inc
xchg
or
xchg
cmp
rcl
icebp
lcall
popa
repz
test
popf
outsb
ret
mov
arpl
xor
xor
jl
lret
call
or
xchg
fnstsw
add
xor
mov
fldt
push
leave
les
lret
adc
in
and
xchg
adc
dec
sbb
leave
xor
jmp
test
inc
push
mov
mov
mov
icebp
xor
fadds
xor
xchg
outsl
cld
adc
sub
arpl
push
pop
xor
pop
psrlq
mov
outsl
pop
test
add
int
movsl
movsb
xor
xchg
rorl
push
testl
add
jae
ljmp
mov
out
mov
lds
push
or
sub
mov
dec
out
jl
jb
sbb
inc
pop
pop
mov
inc
dec
pop
cltd
into
pushf
lcall
add
dec
sub
xchg
inc
ds
xor
leave
cld
or
sub
dec
ret
sbb
push
roll
push
std
pop
sahf
mov
cmpsb
aaa
xor
sbb
mov
adc
pop
or
orb
ljmp
push
push
pop
fs
xchg
pop
repz
inc
repz
ret
lods
jb
adc
bound
jne
inc
loope
insb
ds
pushf
and
sbbw
pop
in
cltd
pop
mov
std
pop
sti
xor
dec
push
mov
or
jno
shll
or
dec
imul
aaa
imul
dec
sub
xor
jge
scas
push
xchg
je
fucomi
lret
je
jp
ss
push
fdivl
xchg
fwait
xchg
leave
pop
pop
adc
fsubrl
adc
mov
pop
sahf
push
fisubl
jbe
and
xlat
jne
lock
cmp
test
shl
cmpsl
mov
ja
dec
sub
scas
es
fsubp
cmpsl
sbb
aaa
push
mov
fdivr
insb
ficompl
cli
decb
test
movsb
dec
aam
mov
mov
inc
movsl
dec
aaa
xor
adc
jmp
mov
stos
sub
je
out
addl
jecxz
out
stos
int3
mov
lods
jb
mov
loop
push
inc
dec
in
cmpsl
fnstsw
or
divb
mov
and
in
pusha
aas
jo
int
sub
inc
cwtl
push
and
cmp
pushf
or
push
sbb
dec
loopne
movsl
in
lahf
mov
mov
dec
stos
std
xor
mov
cld
xchg
sbbl
mov
mov
adc
adcb
ss
mov
pop
fadds
in
jb
pop
in
cmpl
and
mov
in
ljmp
sbb
push
js
push
jp
lods
mov
shrb
cmp
xchg
popa
add
rorb
into
aaa
fisubrl
jle
push
jae
sbb
push
pop
xor
ja
outsl
cmp
push
lcall
pushf
popa
push
arpl
sbb
mov
int
pop
hlt
cmpsb
leave
mov
int
scas
or
mov
pop
ljmp
jb
push
dec
sub
adc
je
imul
insl
lods
bound
adc
stos
mov
mov
divb
lahf
or
js
ljmp
test
fildll
push
and
jo
add
mov
jns
xchg
cmc
js
call
mov
int
pop
ss
scas
or
lcall
adc
sub
out
fs
pop
rclb
out
adc
push
shll
mov
pop
and
cmp
jo
loope
xor
dec
inc
xlat
add
stc
pop
scas
jnp
dec
cld
dec
or
mov
gs
cltd
inc
add
fiaddl
adc
movsb
sub
sub
pop
jl
push
add
popa
push
aad
aas
test
lret
nop
movsb
adc
jns
xchg
push
push
and
lcall
jb,pt
ror
xchg
pop
mov
cmp
sbb
js
push
mov
xchg
cmp
fdivrl
sub
ret
add
xlat
movsl
jno
das
lock
pusha
fnstcw
addr16
push
mov
xchg
jg
adc
cmp
lcall
mov
incl
dec
lods
out
aaa
or
dec
cmp
and
in
pop
insl
in
ret
add
cmp
push
lret
xchg
jp
stos
pop
cmp
call
mov
cmp
xor
js
insb
je
and
pop
push
push
or
je
add
push
sbb
sub
sbb
xor
arpl
jae
mov
mov
jno
dec
movsb
ja
or
mov
mov
push
jns
fcoms
stos
or
jge
pop
ljmp
nop
or
xchg
cmp
ss
pop
ds
addr16
insl
clc
inc
mov
incb
test
loope
jno
mov
fdivrl
add
loope
cs
push
mov
xchg
stos
mov
pop
jl
xchg
repz
mov
pop
addr16
lods
loopne
sub
arpl
push
cmpsl
mov
sub
aad
enter
out
push
mulb
or
jne
icebp
fnstsw
pop
daa
sub
scas
cwtl
cmp
mov
fsubrs
ja
insb
xor
test
fdivrs
sub
cltd
scas
push
fnstsw
or
push
cmp
push
test
xchg
jg
mov
lock
fsub
sbb
sub
mov
and
rcll
dec
or
sti
jnp
jge
mov
xor
push
cwtl
lods
xor
mov
ja
fldcw
pop
enter
inc
out
fwait
outsb
pop
lcall
fsubl
leave
sahf
add
and
mov
pop
sub
xor
sub
or
sub
movhps
xor
pop
pop
cltd
mov
imul
jo
xor
add
xchg
xor
or
repz
and
jno
push
and
sbb
pop
jae
mov
and
fstp
and
fldcw
or
aad
sbbl
adc
sub
les
nop
jmp
push
dec
jp
jb
fistpl
cmp
idivb
mov
push
std
sub
bound
xor
mov
adc
dec
rcr
iret
outsl
iret
pop
popf
nop
mov
out
lret
pop
sub
popf
icebp
lea
xchg
popf
leave
ljmp
stos
mov
add
jle
xlat
pop
xchg
xchg
add
fistps
jns
sub
push
ss
and
and
and
loope
or
dec
and
push
mov
dec
dec
popl
cmp
or
mov
out
mov
mov
sub
or
xchg
jnp
inc
xor
pusha
ret
cli
das
push
lds
add
call
mov
nop
mov
cmp
adc
jecxz
out
pop
sarl
xor
orps
mov
out
jnp
inc
xchg
out
mov
outsb
repnz
and
xor
lcall
stos
add
cmp
lods
fs
cmp
push
shrl
cwtl
in
add
data16
aas
dec
jo
sbb
sub
lahf
jno
jecxz
test
gs
lahf
cmp
sub
js
repnz
pop
push
je
push
pop
in
into
into
cmpl
imul
std
jmp
cld
pop
lods
cmp
push
out
xchg
adc
add
jge
ss
add
dec
jo
gs
repnz
push
clc
in
xor
add
je
or
out
es
ret
mov
add
cli
lcall
push
nop
mov
lock
inc
or
cli
add
lods
dec
dec
xchg
insb
jbe
in
fiadds
jno
repz
mov
movsl
sar
pop
and
ret
dec
mov
pop
xor
mov
adc
and
aas
enter
add
cmpsl
add
cltd
popa
add
add
fldcw
into
mov
push
xor
icebp
outsb
movsb
add
cwtl
cmp
jle
lods
adc
sti
dec
leave
mov
das
push
dec
out
mov
loope
push
testl
test
andb
fmull
mov
xor
push
icebp
push
push
push
pop
aad
aaa
sub
push
in
and
pop
jne
add
add
ret
stos
and
xor
mov
bound
dec
sub
pop
jae
push
mov
stc
les
inc
cmpsb
or
jmp
mov
add
mov
xchg
shl
dec
adc
sbb
test
mov
pmaxub
pop
pop
popf
mov
jno
adc
jne
jnp
call
ds
lods
flds
cmpsl
cmp
and
repnz
push
mov
arpl
out
mov
mov
in
xor
out
mov
movsb
push
call
test
mov
fstps
mulb
sbb
adc
fnstcw
mov
pop
push
inc
or
sbb
fsubrs
out
movsb
loopne
test
push
xchg
adc
jb
popa
stos
inc
fistpl
mov
rcr
cltd
jmp
sbb
scas
sub
jge
sarl
mov
or
sbb
mov
in
xchg
leave
cmp
or
and
mov
addb
dec
jmp
jb
dec
shll
or
imul
inc
dec
xchg
pop
cmc
scas
mov
jmp
push
fmulp
mov
xchg
jns
pop
mov
add
inc
dec
das
mov
push
pop
dec
xchg
mulb
jp
mov
jns
dec
cmova
mov
inc
mov
les
sub
xchg
shr
dec
mov
sbb
mov
or
pop
adc
jl
lea
nop
xchg
xor
mov
lods
push
push
leave
mov
fs
out
movsl
and
add
lock
ss
mov
inc
test
lret
test
add
adc
mov
pushf
mov
cmpsl
out
mov
sub
mov
push
pop
mov
cmp
mov
mov
icebp
in
pop
std
test
add
inc
imul
test
sarl
inc
lea
cmp
and
ja
fbld
or
orb
inc
movsl
add
jge
mov
jl
frstor
add
jge
fmuls
repnz
int3
hlt
test
out
pop
cltd
in
jns
and
repz
mov
adc
fisubrs
xor
cvttss2si
or
jg
mov
mov
pop
add
sbb
jecxz
jbe
jbe
xchg
mov
cmp
push
pop
inc
push
fisubrs
aam
adc
pushl
xorl
ds
mov
lret
pop
jno
and
mov
sbb
xchg
aad
sqrtps
ljmp
or
lock
jp
mov
stc
pop
fnsave
rcrl
mov
stos
mov
and
out
xchg
jge
mov
movsb
mov
inc
bound
outsl
fcmovnu
pop
fimuls
jnp,pn
out
jbe
pop
ss
adc
je
pop
fiadds
lahf
cmp
cmc
hlt
or
mov
cld
xor
cmp
movsl
aam
ret
push
ffreep
xchg
leave
and
pusha
nop
and
fbld
jge
jle
push
daa
sub
out
out
sbb
xor
add
ficomps
rcrb
xchg
repnz
daa
push
iret
sub
sbb
lods
xor
int3
add
out
aaa
pushf
shlb
jns
mulb
mov
cmp
mov
iret
stc
push
pop
icebp
pop
mov
stos
insb
mov
movsl
pushf
jb
or
jbe
push
test
mov
hlt
adc
mov
adc
mov
dec
pop
aaa
ret
icebp
jnp
mov
adc
test
rclb
aam
sub
hlt
fisubrl
mov
push
add
sub
fstp
popf
cli
push
fiadds
leave
inc
fld
jae
int3
pop
pop
jmp
fmull
int
popl
popa
sub
pop
adc
dec
dec
daa
adc
cli
and
fwait
adc
cmpsb
inc
out
nop
test
pop
cmp
push
leave
push
ss
jo
out
cli
lret
lea
jl
cmp
jg
popf
xor
out
dec
emms
lret
xor
mov
adc
pop
sbb
sbb
popa
cli
xchg
xor
stc
jns
pop
scas
mov
inc
shrl
jo
leave
pop
fidivl
jns
push
fwait
jg
imul
popf
icebp
cmp
pushf
mov
xchg
sahf
cmp
dec
ret
shr
xor
sbbb
inc
adc
inc
cwtl
in
hlt
mov
into
in
rclb
shlb
and
adcb
dec
rcl
bound
mul
inc
lock
xchg
dec
jp
or
ds
lock
inc
test
fstps
inc
rcrl
and
inc
sub
lea
call
roll
cmc
inc
xor
lret
pop
cltd
lock
addr16
out
outsb
sub
push
or
mov
imul
xor
xor
into
mov
lret
ret
mov
jg
cmp
loop
dec
jno
lcall
sub
push
or
pop
repz
and
cmp
adc
jl
outsb
in
mov
mov
mov
fld
push
xor
das
sbb
dec
repz
sub
cltd
push
adc
test
pop
add
cmp
pusha
lahf
pop
push
stc
bound
inc
out
enter
mov
xchg
or
sahf
sub
sbb
jb
sbb
test
xlat
mov
and
jno
fcmovb
pop
cmp
addr16
pop
ja
pop
cmpsb
add
pop
cmc
or
jge
adc
cmp
cmp
ja
sub
ss
repnz
iret
and
lods
fcoml
pop
push
mov
mov
lret
movsb
sub
push
mov
mov
inc
or
pop
cmpsl
loop
fistpll
aam
mov
fsqrt
mov
add
xor
dec
les
cltd
addb
mov
xchg
imul
jmp
daa
fidivs
fnstsw
pop
dec
and
insl
xchg
mov
xchg
dec
repz
xchg
test
ror
insl
xchg
das
movl
cmpsl
rclb
lret
fimuls
mov
inc
xchg
fistps
push
push
loop
je
lock
icebp
les
cltd
xchg
adc
push
dec
pushf
cmp
mov
xchg
pop
aaa
jbe
push
test
jg
rorb
mov
add
iret
int3
cmp
mov
dec
sbb
movsb
xor
pop
jl
out
loop
push
push
aad
mov
dec
movsb
push
jbe
sub
test
ret
cli
mov
dec
push
ljmp
notl
xor
movsb
inc
lock
mov
mov
mov
add
lcall
fisubrs
lahf
sub
cmp
jno
sbb
sub
faddl
pop
loopne
mov
lret
jp
pop
jmp
iret
jp
lods
sub
adc
or
or
adc
or
insb
and
bound
xor
jmp
lahf
sbb
inc
push
imul
jo
cltd
outsb
adc
imul
stc
pop
adc
jne
lods
addr16
adc
out
and
jns
push
lahf
mov
xchg
roll
out
mov
lahf
xchg
jne
add
out
jge
aas
leave
mov
pop
mov
pop
pop
divl
mov
fldenv
xchg
nop
jns
inc
and
inc
or
pop
outsb
sahf
orb
scas
sbb
dec
xor
out
imul
lret
xorl
bound
jae
push
dec
jmp
pop
xor
and
and
fists
pop
arpl
jno
lret
cmp
cmovne
or
cmp
loope
ror
jl
cmp
imul
fwait
dec
test
scas
sbb
xor
inc
jle
lds
mov
mov
add
cmc
jnp
lock
or
xor
cld
jns
push
add
push
insb
les
gs
xor
out
lock
addl
scas
inc
mov
pop
push
pusha
test
imulb
inc
fs
pop
rorl
lret
add
adc
mov
daa
pop
mov
cli
mov
ret
adc
xchg
jns
into
dec
dec
mov
cmp
xchg
xor
pop
nop
jle
pop
sub
sbb
test
mov
add
push
xor
fcmovbe
xchg
or
or
jbe
adc
xor
lcall
cmc
cmp
mov
jp
xchg
push
push
add
andl
cmp
jl
lods
dec
pop
pop
lock
sub
jne
push
test
add
lea
lods
dec
loop
lds
jae
or
and
push
mov
sub
push
xor
cwtl
or
jp
push
out
mov
pop
push
xor
xchg
xchg
ret
shll
lds
mov
xchg
sbb
add
mov
aam
jp
sti
sub
pop
mov
push
adc
test
ss
ret
cwtl
in
or
sbb
mov
lret
cmp
add
or
stos
sub
xchg
cmpl
shl
push
inc
test
pop
mov
mov
shlb
js
clc
xchg
add
loope
loopne
fldenv
sti
push
mov
sub
mov
rcll
adc
sub
lea
cs
pusha
inc
xchg
ffreep
xor
and
les
add
xlat
subl
lods
mov
insl
pop
lret
lock
cltd
rcrb
inc
popf
loope
xchg
push
and
jmp
jmp
loop
dec
sub
es
mull
dec
iret
bound
mov
test
dec
aad
clc
dec
idivb
cmp
cltd
mov
das
movsl
or
mov
or
out
or
leave
and
xchg
and
fbld
pushf
sub
imul
jne
add
sbb
sbb
aam
pop
push
out
stos
enter
adc
pop
aad
sarl
stc
dec
mov
out
out
xchg
jecxz
dec
mov
cmp
fcmovnu
add
setl
mov
int3
jg
jmp
test
fistpl
fiaddl
sbb
movsb
aam
rep
dec
sub
sub
outsb
out
fcomp
sbb
aaa
push
ja
push
push
xchg
xchg
aam
pop
jae
mov
shll
add
pop
cmpsl
inc
adc
repnz
pop
aaa
test
inc
xchg
fsubr
clc
pop
fs
out
push
aad
mov
inc
xchg
cwtl
jbe
aam
leave
lret
jb
cld
pushf
pop
mov
hlt
jo
testl
adc
xor
out
add
data16
out
in
xchg
add
fcompl
adc
jo
stos
rep
and
hlt
ds
lock
hlt
lahf
mov
dec
dec
push
mov
lret
dec
jno
loop
jbe
xor
in
les
dec
outsl
jp
pop
stos
les
scas
in
xorl
or
pushf
adc
mov
jle
and
fidivs
mov
cmp
add
mov
xor
add
add
pop
ja
xchg
imul
imul
jns
adc
jbe
addr16
jp
cmpb
inc
add
arpl
cmp
xchg
mov
pop
out
fcom
mov
mov
js
cmp
in
mov
jecxz
cld
lods
sub
cld
imul
jmp
xor
push
cld
es
pop
aad
int3
inc
sub
pop
jbe
xor
out
inc
sub
out
xchg
in
and
sbb
mov
rcrb
push
loope
repz
test
js
stc
cmpsl
sub
adc
pop
lods
xchg
addl
jbe
out
xchg
pop
and
and
inc
jl
enter
stos
mov
aam
mov
add
mov
push
or
mov
fldt
push
xchg
or
sbb
icebp
pop
cwtl
or
das
ss
add
add
ss
xchg
fildll
dec
gs
mov
or
pop
add
pop
bound
jb
rclb
incl
rcrl
out
rcrl
dec
hlt
lods
repnz
sub
cmp
adc
scas
pop
pop
jmp
push
and
cld
sub
cmpsl
add
inc
lods
mov
fs
and
mov
insb
shr
or
inc
jle
popf
inc
or
es
imul
mov
inc
cmp
ja
sbb
popf
sub
mov
add
xchg
shl
dec
insl
sti
sub
fs
js
xchg
stos
or
daa
daa
jg
mov
mov
sbbb
mov
mov
outsl
dec
test
aad
shll
pop
xor
shl
loop
in
jmp
adc
neg
gs
mov
rcll
cmpsb
fidivrs
into
jp
mov
icebp
add
or
inc
dec
xor
sbb
scas
pop
jns
sub
dec
testb
scas
insl
je
add
push
aaa
add
data16
gs
jo
ja
inc
and
sbb
ja
pop
int
mov
add
dec
lahf
icebp
pusha
out
or
xchg
xchg
test
in
mov
or
add
jno
sarl
sahf
xchg
push
loopne
pop
in
jecxz
icebp
push
push
lcall
add
jmp
push
mov
and
loop
iret
mov
adc
mov
xchg
dec
orl
ficomps
pop
adc
test
mul
dec
ss
in
pusha
es
test
xor
js
mov
idivl
push
adc
cmp
nop
cmpb
mov
fnstsw
in
or
jmp
cmp
xor
inc
pop
and
dec
imul
lret
cmpl
xchg
push
fnstenv
leave
cs
pop
dec
xchg
insb
enter
subb
bound
and
cmpl
cmp
or
stos
sarb
subb
int3
stc
xchg
ret
ja
imul
add
jns
sbb
push
pop
dec
jmp
pop
ljmp
xchg
aad
add
push
mov
pop
hlt
in
dec
sbb
shlb
sub
scas
pop
sub
int3
push
loope
lods
dec
inc
fdivs
cmp
dec
dec
mov
adc
jnp
add
xor
fucom
fsts
xor
mov
and
into
sbb
std
stos
int3
pop
xor
push
pop
and
mov
fdivrs
xchg
cmpsl
sbb
loopne
push
inc
insb
cwtl
ret
cmp
js
fs
add
push
scas
leave
and
ds
insb
mov
mov
dec
sbb
enter
rcrl
lcall
gs
insb
icebp
fcompl
leave
divl
and
sahf
loop
mov
pop
jp
arpl
mov
dec
jecxz
fcoms
les
jmp
inc
cmp
outsl
xchg
inc
ret
pop
int3
cli
into
bound
or
call
ds
call
xchg
pop
or
jl
lret
arpl
sti
mov
add
lock
sub
cli
ret
jle
jmp
cld
cmp
push
jp
mov
inc
mov
xchg
fsubr
inc
mov
inc
aaa
dec
jle
and
imul
add
mov
mov
dec
inc
xor
push
movsb
xlat
jmp
sti
mov
jb
jle
mov
inc
neg
adc
mov
fmull
jb
mov
and
rclb
mov
jo
bound
out
pop
mov
leave
outsl
rorb
inc
xor
andl
mov
and
fdivl
pop
inc
push
adc
sub
movsl
ret
shll
push
mov
fistpll
and
mull
xchg
mov
jne
mov
jnp
notl
fnstsw
push
mov
aas
pop
jb
adc
inc
inc
lcall
sub
or
pop
popa
aas
push
push
insb
add
enter
mov
push
inc
pop
cmp
mov
mov
xor
jno
testb
hlt
mov
lods
lods
push
mov
xor
add
in
pop
jo
cli
setge
mov
idivl
sahf
xchg
clc
cmp
mov
out
ret
nop
sbb
mov
push
mov
fistps
xchg
dec
add
adc
pusha
shl
fcompl
mov
add
iret
xor
mov
cs
cmpsl
push
cmpsl
fisubl
nop
test
sub
push
xor
inc
movsb
mov
push
xchg
mov
rorb
dec
mov
adc
inc
stc
repz
aas
xlat
lea
and
es
xchg
aad
mov
inc
push
std
jo
ret
roll
push
scas
das
inc
cltd
notl
dec
and
insl
cltd
iret
mov
or
pop
clc
add
mov
pop
sub
adc
mov
mov
pop
inc
sti
and
inc
and
sub
mov
mov
mov
repz
xlat
xor
icebp
dec
mov
mov
fstps
push
es
or
inc
xchg
movsl
std
mov
repnz
lcall
rorb
movb
inc
push
inc
fmuls
xlat
and
sub
sbb
outsb
mov
popa
and
jmp
mov
lahf
jns
jl
cmp
in
push
ds
inc
shll
cmp
movsb
pop
test
adc
ja
je
movsb
movsl
inc
hlt
push
pop
mov
arpl
push
pop
xchg
repnz
push
inc
leave
stos
xchg
push
inc
in
sub
xchg
fbld
data16
or
push
xor
or
mov
sti
add
loopne
and
fidivl
cmp
repnz
out
or
mov
cmp
pop
cmp
dec
adc
loop
scas
jo
ja
pop
pop
roll
dec
push
cmpsb
cmp
into
sbb
sub
fisubrs
cmc
push
inc
and
xor
jo
lret
xchg
cmpsb
mov
cli
pushf
int
push
xor
insl
inc
stos
mov
rcrl
lea
cmc
xor
xlat
jns
out
mov
js
test
cmp
and
pop
test
out
call
mov
rclb
fsubs
push
push
mov
in
test
mov
insb
je
adc
mov
rclb
and
pop
nop
mov
cwtl
in
xchg
hlt
xchg
ret
dec
popa
adc
dec
sbb
and
and
xchg
mov
push
sub
jns
mov
ds
shlb
xchg
mull
mov
out
sub
cmp
scas
xchg
push
cmp
pop
and
sub
cmpsb
bound
je
idiv
xor
xchg
or
shrb
rcrb
dec
loope
mov
imul
mov
mov
nop
aas
jl
fidivrl
add
sub
or
sbb
add
and
mov
push
jbe
int3
pop
in
jmp
xor
andb
push
mov
add
sub
pop
lcall
mov
push
rcll
adc
push
iret
xchg
loopne
xor
sahf
push
mov
fsubrs
xchg
stos
out
xor
mov
mov
mov
push
inc
in
ss
add
lcall
call
popa
dec
in
mov
lods
insl
test
loopne
xor
mov
pop
aam
xchg
xlat
and
call
add
dec
loop
mov
rolb
gs
sbb
inc
popa
int
ret
xorl
and
bound
push
bswap
orb
cmp
and
dec
addr16
mov
pop
xchg
mulb
negl
jbe
cmp
movsl
ds
jmp
add
bound
cmp
and
ffreep
jl
mov
xlat
jp
xchg
mov
inc
xor
inc
cmp
jmp
popa
loopne
jae
adc
orb
pop
aad
sub
dec
dec
ja
add
cmp
sbb
jnp
loop
dec
mov
xor
nop
pop
mov
pop
and
loope
jg
xchg
xor
in
adc
fwait
and
mov
dec
xchg
jns
dec
xchg
pop
lds
fstp
mov
cmc
aaa
mov
mov
shrl
dec
sbb
shl
sbb
test
sub
lret
adc
xor
lods
add
div
lea
mov
mov
mov
cmc
shl
idivb
inc
mov
loopne
scas
pop
fwait
sbb
jae
jecxz
inc
ret
sub
sbb
outsb
int
frstor
int
push
xor
push
xchg
jnp
inc
test
test
test
aam
xor
mov
call
dec
aad
loope
and
icebp
sub
lods
pop
add
addr16
icebp
jnp
jns
lock
jl
mov
push
push
lods
pop
in
andl
adc
test
push
into
inc
addr16
pushf
push
jbe
daa
sahf
dec
mov
fs
decl
xor
orb
push
flds
addr16
shll
xchg
mov
clc
push
or
mov
sub
cli
mov
lods
adc
xchg
jp
add
shll
xchg
cmc
test
fistps
mov
push
mov
inc
sbb
clc
out
xchg
add
sub
cmc
sub
into
sbb
cmpsl
sarb
adcl
cmp
sub
call
insb
imul
arpl
out
sahf
inc
adc
pusha
add
call
repz
bound
xchg
cli
sub
es
fst
clc
sub
sbb
inc
pop
push
inc
sbb
repz
add
push
dec
in
out
int
jecxz
fistps
pop
dec
mov
push
sete
or
mov
inc
int
inc
push
xchg
das
nop
sub
int
lret
les
inc
sub
fwait
pop
adcl
mov
hlt
test
call
ret
rorl
leave
or
mov
outsb
lock
int
popf
mov
cltd
loop
rorb
pusha
xlat
stc
mov
in
lcall
rclb
lret
int
test
fisubrs
lret
scas
inc
shl
push
cmp
lods
push
leave
in
adc
aas
clc
js
repz
jg
test
lods
add
cmpsl
xor
sub
cmp
xor
adc
leave
mov
rcrl
push
mov
push
jo
imul
sbb
xorl
jo
push
rolb
push
sub
bound
dec
shlb
xchg
movq
xor
cmp
sbb
out
or
push
dec
arpl
loopne
xchg
fstl
jg
xor
mov
ret
aad
loopne
sub
add
jp
popf
idivl
test
bound
jns
and
or
ss
subb
xchg
mov
push
sub
data16
cmc
mov
mov
mov
inc
push
xor
testl
push
lahf
std
push
mov
mov
int
test
pop
cmp
out
nop
push
sub
xchg
fwait
stos
aaa
push
inc
mov
pusha
ret
or
xchg
sub
jae
adc
cmp
mov
xor
adc
cmpsl
or
arpl
mov
mov
call
xchg
jb
or
pop
push
call
or
or
pop
cmp
sub
jnp
sbb
add
mov
push
sbb
out
xor
outsb
push
adc
call
insb
jg
adc
jns
std
das
dec
sahf
adc
mov
lea
es
fwait
adcb
loop
mov
test
lock
inc
int
fisttps
imulb
ds
inc
rolb
leave
sahf
sub
jo
loope
mov
pop
shll
adc
clc
in
out
lahf
jns
cmp
mov
add
jno
dec
push
add
ret
aam
pop
cmpsb
dec
cmc
clc
cmc
lds
cli
sbb
xchg
add
aam
push
dec
add
sbb
aad
mov
js
cmp
cmp
and
mov
jecxz
fwait
int3
mov
aaa
out
jge
fcmovnb
lret
jae
aam
pop
pop
pushf
fsub
int3
sbb
xchg
outsl
rorb
sbb
or
cmc
sbb
andl
nop
pop
mov
mov
out
mov
adc
or
and
rcl
insl
stc
and
loope
dec
in
mov
testl
jae
or
push
xor
push
mov
or
ret
pop
out
mov
sarl
aad
pop
jg
bound
orl
mov
push
add
in
test
pushf
mov
dec
sbbl
loopne
pop
xchg
imul
sbb
mov
inc
js
push
cmp
and
or
xor
pop
divl
jno
hlt
push
jno
add
nop
rcrl
cmp
xchg
dec
rcr
mov
je
test
mov
fistps
xchg
sbb
call
dec
jnp
xchg
or
loop
mov
out
dec
xor
ss
pop
or
testl
decb
and
sbb
dec
movsb
cmp
xor
lret
mov
jp
lcall
pop
fdivl
xchg
sbb
shrl
jns
push
aad
sbb
xchg
sub
pop
add
add
fwait
cmc
test
aad
inc
call
int
mov
xchg
cmp
sub
add
jae
pop
stc
mov
xchg
scas
ss
jnp
jne
push
adc
jne
dec
adc
sub
mov
pop
xor
je
cmpsb
addl
mov
xor
mov
mov
jno
arpl
call
xor
insb
iret
xchg
cmp
jmp
and
arpl
jno
push
out
cld
cbtw
movsb
lret
xchg
cwtl
mov
push
fucomip
or
mov
dec
pop
adc
pop
mov
out
push
imul
incb
fdivl
cmp
mov
mov
sti
mov
sbb
jp
mov
or
fldenv
stos
adc
rclb
or
sbb
out
fwait
pop
movsl
stc
bound
adc
pop
out
cmpsl
inc
push
clc
lret
int3
ss
out
lea
stos
add
aad
and
xor
lcall
sahf
call
inc
fists
jae
cmp
add
sbb
pop
ss
call
mov
mov
fsubl
pop
stos
outsb
and
fwait
nop
into
rcll
bound
cmp
jne
dec
pop
icebp
mov
shll
push
arpl
fld
inc
dec
cmc
lock
ficoml
or
cli
stos
push
push
inc
icebp
scas
int
mov
dec
aam
push
inc
jnp
shl
xor
lods
jno
mov
cwtl
mov
icebp
sbb
add
or
outsb
pop
push
mov
lds
sarb
mov
cmc
push
in
mov
push
ja,pt
pop
pushw
adc
aam
xlat
mov
lock
push
arpl
dec
mov
inc
enter
cmp
dec
movsl
jmp
orb
pop
orl
jo
cs
sub
jmp
paddusb
pandn
cwtl
mov
ljmp
xchg
push
mov
cltd
test
dec
add
div
icebp
push
adc
call
pop
mov
xchg
aad
pop
jne
add
shll
add
lock
mov
jnp
sub
add
xor
outsb
daa
repz
dec
test
fs
stos
push
push
jge
pop
mov
inc
enter
iret
arpl
pop
push
push
adc
sbb
mov
fidivs
dec
push
fsubrl
not
sub
inc
and
orb
sbb
inc
testl
mov
push
mov
inc
sub
add
pop
clc
into
pop
push
stc
pop
movsb
push
ret
push
xchg
xchg
sbb
xchg
and
or
shll
xchg
sub
inc
xchg
pop
pop
imul
cmpsb
in
xor
mov
adc
jbe
cli
popa
arpl
fdivs
scas
out
jns
pop
xor
scas
jecxz
mov
ss
ss
pop
add
sub
push
xchg
or
xchg
pop
dec
dec
add
imul
movlps
jnp
pop
rorb
aas
mov
cmpsl
pop
inc
or
stos
mov
mov
fwait
shl
xorl
pop
jnp
aad
int3
das
or
lods
or
jmp
xor
lret
test
in
test
mov
xchg
add
roll
int3
test
imul
shrl
ret
mov
aas
lods
das
jno
push
push
xor
movb
dec
mov
cmp
or
lret
mov
mov
enter
sbb
scas
xchg
cmpsl
inc
js
mov
ret
sub
cwtl
push
sub
push
das
fstps
in
fimull
add
negb
ret
in
push
add
jnp
je
nop
cmc
add
push
popf
jno
sbb
sbb
lea
cmp
and
add
stc
jecxz
and
movsl
add
inc
sub
cmpb
pop
sbb
lods
in
orl
lods
bnd
in
fs
insl
cmc
aaa
xchg
cmp
fimull
test
mov
mov
dec
lea
sbb
andl
sbb
adc
xchg
dec
dec
sub
lahf
in
shll
xor
jno
add
or
add
stc
or
call
outsl
mov
dec
mov
push
ljmp
lahf
cmpsl
or
jo
loopne
sub
ja
pop
pop
sbb
or
pop
push
sub
call
std
xor
adc
push
xchg
fmuls
cmp
insb
repnz
js
lret
pop
dec
cld
mov
push
sbb
jns
dec
out
scas
mov
inc
inc
icebp
push
and
jge
ret
ror
aaa
loop
xor
fdivr
gs
mov
clc
sbb
jg
call
xor
cmpl
push
iret
cmc
pop
xacquire
repnz
faddl
or
imul
xchg
ficomps
rolb
je
dec
mov
add
xchg
add
mov
dec
mov
in
mov
push
and
rclb
pop
pop
xchg
push
jno
sub
inc
mov
jae
xlat
push
ljmp
xor
and
mov
rorb
jae
nop
dec
jne
out
inc
push
in
out
sbb
push
int
clc
xor
add
outsl
fldl
xorb
mov
rcl
sub
jp
jg
scas
mov
jl
aad
inc
scas
sbb
clc
pusha
mov
and
jno
rclb
mov
cwtl
into
dec
adc
arpl
sbb
pop
sysenter
int
inc
or
cmpsl
aad
mov
add
adc
mov
pusha
into
pusha
mov
xor
push
enter
add
pop
pop
orb
push
in
lahf
lea
scas
xchg
jge
mov
scas
ss
sahf
dec
ficoml
pop
mov
int
lds
fimull
add
or
cmp
or
push
outsl
idivl
or
ljmp
xchg
xorb
dec
outsb
roll
and
push
das
cli
ja
ja
dec
and
xchg
mov
mov
push
std
mov
sahf
dec
int
lret
dec
insb
shr
dec
aam
lahf
shrl
clc
lea
mov
adc
nop
jecxz
cmp
mov
sbb
rorl
push
nop
add
inc
and
dec
rcr
movsl
push
cmpsb
iret
push
in
fdivrs
cmp
push
hlt
jmp
das
cmp
adc
mov
cli
inc
pop
jg
mov
sub
jns
and
dec
rol
pop
bound
jg
sbb
adc
mov
add
icebp
mov
dec
pop
or
je
sbb
call
cmpsl
leave
cmp
pop
sub
pop
mov
jmp
push
lcall
insl
jnp
and
fimull
xchg
fadds
pushf
cmp
fdivrl
pop
add
pop
out
stos
jne
cmp
mov
inc
xlat
add
fwait
xchg
clc
ljmp
outsl
adc
dec
fmuls
mov
mov
es
movb
bound
cwtl
fs
in
inc
lahf
fldenv
cli
scas
adc
adc
jmp
jbe
jge
xchg
inc
or
pushf
and
and
jne
push
imul
insl
fdivp
bound
loope
insl
xor
pop
cmp
sahf
lret
stos
lret
into
ret
adc
ljmp
xchg
mov
mov
dec
push
push
sbb
mov
mov
mov
negb
add
stos
jge
sub
adc
xor
xlat
loopne
or
mov
mov
ja
add
cmpsb
iret
pop
sahf
or
clc
lcall
add
ret
js
fcoml
mov
xlat
movsb
xchg
lret
adc
push
jae
mov
mov
repnz
insb
scas
ljmp
sub
es
dec
xlat
push
and
lock
mov
inc
leave
sahf
mov
push
jae
pushf
pop
pushl
mov
mov
jno
les
sub
enter
dec
negl
js
addr16
cwtl
pushf
sarl
out
mov
xchg
jg
mov
and
push
push
insb
pop
in
mov
push
cmp
sti
pusha
xor
push
lret
lahf
les
dec
lods
jno
push
jg
sub
xor
mov
push
out
test
pop
mov
push
in
mov
push
mov
cs
mov
push
flds
jg
sub
aad
mov
push
scas
fldcw
lahf
ja
fmull
or
xor
or
inc
ss
in
cmp
or
push
xor
pop
mov
nop
repz
scas
or
push
push
fucomi
xchg
scas
add
outsb
and
daa
fiadds
push
dec
cmp
sub
lods
pop
cltd
mov
out
xchg
pop
adc
orl
mov
adc
cmp
data16
or
and
std
pop
and
add
ret
repnz
xlat
ret
divl
cmpsl
ret
pslld
cmp
jae
sbb
rcrl
push
or
mul
mov
dec
in
jbe
pop
jecxz
mov
cmpsl
pop
out
jmp
pop
adc
insl
fmuls
push
pop
mov
jmp
in
mov
out
cld
cmp
xor
cmp
add
jno
iret
adc
jge
cmp
xchg
push
test
cmpsb
or
add
sub
test
and
subl
push
push
test
out
out
jbe
fdivrp
add
jno
adc
out
movsb
mov
std
fstp
sbb
xor
je
ljmp
mov
std
xchg
cltd
inc
pop
sub
fisubs
insl
insl
or
mov
sub
jbe
imul
stos
xor
movb
push
lret
fs
clc
js
clc
call
test
bound
or
inc
jb
lock
mov
pop
add
add
mov
lods
cmovne
sti
es
push
jg
pop
shll
stc
orl
push
pop
xor
lahf
je
shrb
sbb
mov
cwtl
js
call
dec
adc
std
or
mov
mov
mov
imulb
sarb
lock
stos
sub
sub
mov
sarb
ret
cmp
int3
push
repnz
mov
dec
xor
fistl
dec
xchg
ss
test
and
repnz
mov
mov
stos
push
pop
push
fwait
aam
repnz
ljmp
stos
jo
je
rorl
sub
mov
test
cld
mov
in
out
xchg
loop
sub
push
xor
adc
mov
mov
or
xor
cmpsl
ret
jg
inc
xchg
push
out
rclb
lahf
sub
inc
mov
mov
out
jbe
or
scas
pop
js
push
repz
add
dec
enter
inc
ret
pop
inc
dec
xor
arpl
or
sbb
or
add
dec
rolb
mov
lock
xor
es
cmp
incl
mov
enter
sub
mov
in
dec
pop
xor
mov
dec
fdiv
dec
fcom
jge
aad
pop
ret
hlt
jno
cmc
aam
push
aam
xor
jbe
mov
cltd
xchg
loop
push
or
popa
out
inc
pop
and
mov
lcall
or
xor
test
ljmp
add
adc
sub
ss
cmp
gs
cmpsl
popa
jmp
bound
or
mov
popa
pop
sti
cld
in
rolb
cmpsl
jmp
cmp
cmpsb
inc
pop
push
dec
pop
mov
int3
xchg
inc
fdiv
pop
ds
ret
and
in
mov
mov
cmovg
popa
push
dec
sar
xchg
test
testl
push
xchg
sarb
lcall
mov
and
and
xchg
or
int
pop
mov
xchg
cmp
xor
sub
imul
push
ret
push
aaa
jmp
jg
arpl
mov
mov
or
mov
adc
pop
mulb
test
sub
movb
test
and
ficoms
shll
sbb
repnz
ret
ljmp
cmc
ret
jle
mov
pop
js
pop
ret
inc
les
mov
mov
mov
loope
lock
subl
cltd
push
pop
out
push
pop
mov
jl
pop
sub
mov
std
les
xorl
dec
and
fdivp
flds
mov
cmp
and
pop
test
lea
sub
push
int3
in
cli
les
pop
adc
cmpl
lock
lock
sub
mov
jb
pop
mov
ret
xor
push
test
xchg
cmp
hlt
in
int3
xorb
pop
mov
xchg
mov
pop
fmulp
mov
adc
xor
icebp
push
pop
das
mov
fildl
sbb
pop
xor
jno
aas
jmp
xorl
cs
sub
cltd
aaa
mov
sub
notl
cmpsl
dec
dec
dec
mov
test
ss
push
vcvttsd2si
lahf
jecxz
lcall
xchg
pop
scas
loopne
rclb
jle
out
addr16
jae
push
jnp
popa
testl
sub
push
mov
fwait
sbb
aam
imul
adc
loopne
cld
inc
add
inc
mov
jns
dec
mov
push
or
pop
pop
mov
in
adc
std
cmc
andb
xchg
add
filds
adc
pop
lea
cmp
mov
into
push
fcmove
xchg
jne
pop
dec
int
test
subb
iret
push
or
stc
pop
imul
xor
cmp
adc
pop
std
iret
xchg
push
pushf
cltd
call
aad
or
push
mov
or
ffreep
and
pop
xor
jo
fsubs
cmp
out
push
lahf
sub
mov
push
dec
sbb
fwait
jle
sar
dec
ljmp
outsl
pushf
mov
call
jecxz
mov
dec
adc
xlat
push
fidivs
mov
lcall
inc
mov
jnp
int
pop
mov
loope
mov
je
jnp
jp
mov
stc
test
cmp
int
xor
subl
mov
inc
push
stos
jb
pop
psllw
ficoms
add
outsl
repnz
mov
add
inc
push
insb
add
mov
push
fsubrs
adc
loopne
arpl
jo
mov
mov
into
xlat
xor
int
pop
adcb
fidivs
movsb
add
xchg
loop
and
lock
cmc
xor
dec
sub
int
push
sbb
call
call
mov
sahf
jge
adc
mov
jl
pop
dec
jmp
aam
movsb
stos
xchg
jbe
sub
xor
cmp
mov
cmpsb
push
and
popf
test
dec
je
push
aaa
int
sbb
pop
fwait
xchg
fwait
adc
shlb
lcall
jae
rcr
push
data16
and
test
lds
mov
rol
test
dec
sbb
mov
pop
jl
xchg
and
mov
and
dec
inc
cli
popf
mov
dec
jo
adc
sahf
and
pop
push
pop
pop
pushf
pop
cwtl
mov
pop
sar
add
add
icebp
mov
fistl
adc
jmp
jne
pop
gs
add
sbb
lahf
scas
imul
jmp
inc
mov
mov
sti
call
push
aad
arpl
push
cld
and
test
enter
mov
aad
cmp
test
inc
subb
leave
inc
leave
bound
pop
cmp
je
loop
push
mov
sbb
ror
xor
inc
inc
inc
sub
push
dec
and
insl
insl
sub
rcr
xor
jno
popf
pop
push
jmp
sbb
pop
jb
sbbl
inc
xchg
jns
cltd
ds
stc
mov
rcrl
pop
cmpsl
sub
mov
push
imul
pusha
xchg
mov
jne
out
dec
pop
ret
cmpsb
pop
mov
mov
mov
push
add
jmp
imul
stc
mov
jmp
lret
adc
mov
les
cmp
push
enter
jl
cwtl
xchg
pusha
stos
les
lods
or
add
push
adc
adc
adc
xchg
inc
pop
flds
dec
jb
test
xchg
dec
lock
sbb
lock
mov
std
jnp
dec
push
cmpsb
je
mov
negb
pop
pop
fmull
mov
inc
test
xchg
cmp
mov
jl
rcrl
jmp
sub
sbb
psubusb
aaa
inc
and
bound
pop
nop
sbb
pop
scas
mov
jo
mov
outsb
aaa
loop
mov
jb
adc
pop
cmp
les
pop
adc
scas
xchg
cmp
dec
ret
jl
aaa
lret
rcrb
inc
push
shll
fmul
lea
add
cli
jl
in
and
jns
jo
rcrl
or
adc
jl
lods
xor
sbb
mov
fld
sbbb
ljmp
lea
int
pop
push
inc
scas
imul
es
ror
lret
xchg
xorl
aas
pop
fsubs
sub
pop
and
scas
mov
imul
in
mov
sbb
out
cmpsl
into
imul
ss
repnz
iret
jne
mov
daa
push
ret
push
cmp
sub
mov
xchg
scas
hlt
xor
rorb
fbld
test
adcl
add
jg
or
addl
cmp
out
fdivs
mov
cmp
jbe
in
lock
jmp
xor
jb
mov
or
inc
stos
mov
jbe
sbb
lahf
and
add
jmp
adc
imul
push
lcall
test
add
test
nop
and
sahf
cmp
stc
add
notb
shl
add
inc
push
xchg
iret
mov
hlt
loope,pn
xchg
das
mov
and
lds
mov
ja
cwtl
sbb
inc
jmp
nop
xchg
xacquire
mov
add
inc
dec
cmp
pop
arpl
andb
inc
add
mov
mov
inc
jns
mulb
cmpsl
orl
push
or
mov
lods
inc
mov
push
jge
icebp
push
xchg
add
xlat
jns
packssdw
je
mov
adc
xchg
push
fdivl
xor
test
fisttpll
mov
imul
push
mov
jbe
fwait
mov
jecxz
xor
jbe
dec
push
scas
cmc
push
ficomps
insb
nop
inc
xorb
lcall
clc
fisttpl
cwtl
pop
mull
sbb
xchg
push
sbb
subl
sbb
dec
inc
fwait
das
xchg
mov
push
xchg
hlt
add
push
call
pop
hlt
xor
sub
or
es
add
je
mov
test
and
dec
add
pop
mov
sti
xchg
leave
adc
test
lcall
les
clc
repz
xchg
shlb
out
xor
add
mov
xor
push
lods
sub
mov
jbe
push
or
leave
mov
or
stos
popw
ret
xor
and
out
jne
test
rep
in
mov
insl
mov
mov
fnsave
ja
cmp
sbb
or
ret
xor
dec
sub
cmpsb
mov
pop
or
add
lret
mov
fwait
xor
outsb
in
lahf
jb
ja
adc
or
mov
jae
shrl
leave
jne
or
pop
lret
pop
mov
pop
jmp
xchg
jl
and
int3
mov
cmpsb
int3
out
mov
cmp
adc
push
sbb
xor
push
sbb
inc
or
movsl
xor
lret
cmp
aaa
add
pushf
fbld
mov
sarb
mov
cltd
insl
outsl
ret
mov
mov
sub
cmp
or
push
xor
adc
and
sbb
scas
sub
shl
sub
test
inc
mov
push
inc
cli
in
push
add
lret
mov
add
adc
divl
loop
mov
or
inc
stos
imul
cmp
outsb
pop
fldl
sti
and
sub
adc
mov
and
pop
daa
mov
sub
sub
stc
loopne
gs
insb
inc
lods
insb
or
cmp
cmpsb
icebp
sub
sub
cmp
xchg
jnp
in
cli
xchg
mov
lods
nop
mov
push
sub
push
dec
jecxz
imul
inc
out
std
mov
fs
push
xchg
in
or
jl
arpl
mov
cmp
pop
sub
flds
sbb
dec
pop
mov
add
out
pop
inc
aad
add
cltd
jo
xchg
sub
fdivrl
push
sub
stos
xor
dec
xor
or
fstps
scas
or
iret
cld
and
sti
scas
inc
mov
jbe
rcl
lcall
ret
push
or
rcrl
pushf
idiv
data16
ret
lahf
loopne
bound
out
push
mov
movsl
jecxz
in
mov
call
rol
push
dec
lea
dec
out
cltd
xor
mov
das
jae
lret
lcall
je
adc
icebp
sbb
push
sbb
sti
jne
testl
inc
ljmp
in
sar
sarb
jbe
in
divl
add
adc
shll
pop
aaa
dec
imul
call
cli
xor
sbb
inc
fiaddl
fadds
fnstenv
lret
sbb
mov
add
in
inc
cmp
pop
sub
mov
pusha
push
inc
mov
dec
jns
lahf
pop
out
pop
xor
cmp
mov
out
in
mov
sbb
push
repnz
int
loope
sbb
dec
add
lret
test
mov
rolb
es
xor
push
inc
adc
scas
xor
incl
loopne
int3
adc
adc
xor
dec
repz
scas
cmc
clc
ja
ret
sbbb
add
je
xchg
cli
mov
and
out
and
dec
inc
aaa
neg
add
jle
and
adc
js
mov
flds
aaa
xchg
sub
mov
adc
cmp
aas
and
xchg
xchg
icebp
add
dec
iret
add
mov
sbb
lahf
shl
dec
pop
dec
lret
lret
inc
es
out
inc
adc
or
stos
gs
scas
sahf
jno
fsubrs
jo
push
and
cmp
lahf
mov
pop
out
jp
push
mov
cmc
in
xchg
out
and
sub
loop
cld
cmpsb
add
sub
mov
jno
push
sub
pop
inc
mov
inc
add
mov
ficoms
inc
push
xor
sbb
push
je
aad
inc
jno
subl
jae
add
xor
inc
dec
adc
add
rorb
lea
mov
add
sbb
pop
clc
pop
mov
aaa
and
xor
or
push
mov
out
push
enter
lret
xor
mov
mov
or
ret
jb
popa
pusha
sbb
adc
xlat
mov
inc
dec
inc
mov
push
jno
jne
push
fstl
xor
push
xchg
sbb
lods
rorl
sbb
mov
or
clc
mov
pop
mov
jmp
mov
cmpsb
in
jb
fsub
jmp
je
insb
test
mov
ret
movsb
pushaw
push
or
jge
cmpsb
mov
mov
aad
pop
in
jle
pushl
call
cmpb
mov
jo
sahf
sbb
ljmp
push
arpl
in
push
pop
add
mov
insb
and
mov
mov
pop
es
ljmp
xchg
test
movsb
and
jns
and
dec
pop
in
and
add
or
lock
ficompl
adc
mov
add
in
sub
pop
inc
push
in
out
add
jne
mov
movsb
lds
rolb
loop
test
test
xchg
xchg
sbb
mov
sub
xchg
roll
lcall
insl
pop
enter
mov
xor
jge
sahf
dec
pop
fbld
push
imul
pusha
imul
cltd
mov
insl
push
aam
pop
pop
aam
repnz
mov
pushf
or
arpl
mov
inc
fstpl
in
dec
cld
in
out
jno
cmp
xor
and
cs
outsb
mov
xor
rcrb
fs
sub
push
jne
jge
data16
mov
jae
out
mov
dec
push
mov
cmc
dec
loope
imul
jl
adc
ret
or
jmp
sub
mov
cmp
fs
cs
in
insl
dec
push
xchg
icebp
fsubp
xchg
adc
sbb
sub
inc
rcll
push
test
mov
pop
and
inc
add
mov
adc
loop
jne
nop
lret
mov
push
stos
icebp
gs
insb
jl
pop
leave
cli
adc
daa
sbb
ja
mov
adc
data16
or
xorl
cltd
test
jmp
pop
sub
test
sbb
or
push
xchg
ffreep
gs
cmpsl
loopne
or
sbb
or
sti
daa
xchg
adc
test
mov
imul
dec
popa
cld
cmp
loope
dec
mov
sub
in
sub
jmp
movsb
push
sahf
movsl
pop
arpl
popf
sbb
jecxz
adcl
out
sub
cmp
arpl
cs
lret
push
pop
sbb
ljmp
sub
pop
js
xchg
dec
mov
jae
stos
pop
test
adc
ja
inc
lea
push
scas
pop
push
xchg
or
in
pop
outsb
or
sbbb
xor
or
dec
pop
push
pushf
adc
jae
add
push
addb
popl
aad
mov
pop
cmp
mov
outsl
arpl
jle
fstl
jl
test
es
inc
inc
dec
cld
push
dec
cmp
mov
xchg
mov
ss
mov
loopne
adc
aam
cmp
fimull
adc
xchg
insb
jp
fadd
repnz
or
mov
addb
or
mov
push
dec
sbb
mov
lcall
into
inc
fdivl
push
add
ret
or
call
jp
pusha
pop
fstps
leave
add
lcall
fcompl
test
into
mov
mov
out
faddl
push
fcomps
inc
push
pop
jo
sub
sbb
mov
push
push
pop
dec
mov
popa
push
mov
rol
add
movsl
push
movsb
sti
xchg
fdivs
bound
cld
ja
xor
lret
lods
movsl
hlt
inc
outsl
jo
mov
stc
jnp
pop
sub
mov
ljmp
and
xchg
sbb
stos
mov
in
gs
out
cmc
insl
xchg
cmc
fildl
lds
stc
popw
pop
inc
shlb
mov
popf
adc
incl
ffreep
xchg
add
jae
sub
xchg
or
out
pop
jmp
imul
xchg
movq
loop
push
and
test
lds
fisubrs
repz
cltd
mov
lods
js
mov
ret
cli
mov
cmp
xor
dec
sbb
popw
in
inc
divl
jl
push
in
push
outsl
pop
les
ja
repnz
dec
cmp
sbb
pusha
inc
mov
xorb
das
dec
std
scas
inc
clc
movsl
adc
push
jne
push
push
ljmp
inc
fimuls
or
mov
ss
fdiv
add
adc
mov
push
mov
pop
mov
inc
dec
shll
imul
mov
mov
mov
sub
xor
and
stc
push
push
negb
jle
cmc
into
add
aam
jge
neg
jo
sti
insl
bound
push
sbb
xlat
mov
rclb
jp
stc
stos
or
push
shr
jge
jbe
aam
dec
cmc
mov
xorl
xchg
jecxz
xlat
ret
lock
mov
pop
and
jge
jle
shrl
lods
xchg
test
jbe
mov
push
jge
outsl
pop
add
ret
ror
lcall
xor
mov
pop
jmp
xchg
fs
mov
stc
daa
clc
or
dec
mov
mov
filds
lret
scas
aaa
lds
inc
mov
add
stos
jl
adc
sti
add
std
add
scas
int3
fsubs
cld
dec
repnz
mov
fs
mov
xchg
inc
pop
rol
in
loope
add
mov
negb
inc
loope
push
imull
push
imul
lods
sahf
fdivr
mov
pusha
or
andl
rcl
fsubr
dec
inc
jecxz
pop
push
add
cs
inc
rol
pop
and
mov
fsubl
mov
fcompl
lahf
mov
fldenv
push
mov
out
cld
insb
rcr
sub
bnd
sub
out
shll
cld
andl
ja
and
aad
mov
lods
pusha
jb
mov
jge
pop
adc
pushf
sti
xor
lea
push
rep
push
imul
mov
enter
movsb
mov
mov
or
subb
dec
jns
push
in
xchg
xor
mov
inc
sbb
inc
cmpxchg
shll
xchg
cmovp
add
scas
and
lahf
leave
fidivs
pop
ds
mov
sub
jae
adc
sar
jl
jle
sub
jg
fwait
mov
sbb
cld
pop
jae
mov
fmull
mov
aad
mov
jbe
scas
jl
loope
push
mov
ret
scas
push
lret
xor
bsr
mov
mov
push
fsubs
cmp
dec
mov
scas
shlb
ja
scas
jbe
nop
xor
icebp
cld
mov
dec
lret
fwait
jp
cmp
int
lahf
pop
mov
stos
movsb
cmpsl
popa
mov
and
adc
push
xorl
dec
dec
lea
fldcw
push
lret
mov
sub
pop
pop
inc
cmp
sub
insb
jecxz
adcl
dec
sub
cli
icebp
roll
ja
cmp
cld
scas
mov
inc
sbb
sti
popf
pop
cwtl
cltd
lahf
repz
jo
lea
js
mov
imul
pop
pop
lods
inc
es
xchg
loope
jp
dec
icebp
adc
jbe
jne
cmp
jg
mov
add
es
sbb
jbe
popa
repnz
jmp
imul
pop
icebp
jle
arpl
xchg
sbb
test
adc
daa
lcall
mov
fistpl
jmp
and
into
xchg
or
fstpt
adc
jne
inc
mov
cmpsl
mov
adc
jle
data16
xchg
je
sub
mov
cmp
mov
mov
xor
adcb
fcmovu
nop
jle
lcall
popa
lret
mov
das
cwtl
ret
jae
rorl
lock
popw
add
mov
stc
mov
ficompl
cmp
fwait
xor
xchg
ficoml
mov
pusha
leave
mov
fwait
fwait
pop
int3
das
stc
ja
leave
xor
push
add
jns
adc
mov
cmp
fmul
mov
pop
fwait
xchg
andl
sub
adc
push
stc
ret
xor
popf
inc
cmc
imul
jns
mov
dec
lahf
icebp
sbb
outsl
loope
fwait
jmp
xchg
xchg
je
adc
cmpsb
xor
jmp
xchg
adc
sub
in
movsb
xorb
mov
jae
add
xor
mov
sub
mov
insl
cmpsb
mov
push
bound
cmp
inc
push
or
std
mov
xchg
testb
insb
int
dec
mov
shll
fisubrl
mov
adc
cli
pop
dec
push
inc
test
inc
jo
test
inc
mov
into
insb
sub
jbe
pop
or
xor
cltd
or
mov
clc
in
adc
add
mov
repz
shrb
loopne
dec
pop
insl
or
mov
pop
push
addr16
nop
adc
push
adc
xchg
ja
pop
cmp
jo
inc
sbb
cld
shrl
mov
decb
lcall
arpl
dec
lods
andl
mov
sbb
xchg
pushf
out
roll
sbb
xor
pushf
sub
dec
mov
pop
scas
mov
jno
push
test
push
rorl
shrb
movsb
cmp
rorl
add
pop
adc
xor
leave
inc
jo
inc
push
jge
in
mov
adc
out
cmpsb
es
push
inc
shll
cld
pop
call
jae
mov
xor
pop
movsl
adcb
inc
mov
jecxz
xchg
stos
inc
fadds
and
dec
adc
enter
out
pop
mov
push
add
xor
sbb
scas
sub
daa
ds
out
adc
into
int3
insl
lahf
insb
test
dec
std
jp
jns
jge
lahf
jg
add
dec
or
mov
int3
xor
jbe
inc
push
jle
shlb
iret
imul
mov
aam
xchg
add
push
xorb
pop
bound
aad
sub
gs
shl
aad
ljmp
in
xchg
mov
add
mov
or
outsl
roll
xchg
std
loope
push
mov
insl
out
sub
inc
bound
test
pop
in
dec
push
fwait
int
fcomps
sub
xchg
sti
test
jnp
dec
push
repnz
jle
add
add
std
and
inc
pop
fnstsw
mov
cwtl
sbb
outsl
daa
xchg
movsl
xchg
loope
or
push
insl
out
ss
dec
hlt
out
push
iret
lret
leave
sbb
lds
add
adc
jb
pop
and
stos
ljmp
call
dec
mov
cmp
hlt
add
dec
ds
out
pop
push
std
mov
push
mov
outsb
aam
jne
cmp
mov
js
push
push
mov
cwtl
shr
add
mov
cld
add
mov
cmp
mov
xchg
add
test
xchg
or
cltd
mov
inc
push
fldl
in
lods
pop
inc
sbb
add
test
sahf
inc
xchg
push
xchg
adc
imul
xor
pop
or
push
jno
xchg
rorb
sub
mov
mov
add
das
jmp
mov
sbbb
pushf
repnz
sbb
mov
pop
add
popa
sub
pop
mov
in
xchg
xchg
js
ds
or
lds
and
repnz
ret
mov
inc
sub
or
cld
dec
jle
nopl
in
inc
incb
xor
movsl
in
shl
xor
jg
icebp
jmp
add
rorb
lods
jmp
lret
out
lcall
xor
popf
mov
and
in
jno
pop
scas
xor
mov
jp
sarl
mov
mov
movsb
hlt
les
in
je
stos
mov
push
xchg
jo
push
into
mov
pop
pause
jo
js
add
leave
inc
pop
mul
jb
add
lahf
inc
setns
test
push
clc
je
gs
out
mov
push
fbstp
mov
sbb
add
or
jae
lods
jg
insl
int3
bound
cmp
cmp
arpl
pop
sub
push
hlt
sub
xchg
mov
fisubl
gs
cmp
sbb
shrb
or
lock
addb
cltd
push
add
push
mov
cltd
int
ret
adc
pop
adc
mov
xchg
xor
and
in
jbe
mov
out
jecxz
pusha
ret
fnstsw
mov
nop
fsubrl
test
and
adc
dec
test
inc
lds
adc
mov
and
and
or
outsb
pop
add
shrl
sub
icebp
mov
cmp
mov
xor
xor
loope
mov
mov
inc
ds
adc
jbe
add
int
mov
and
fldl
and
stos
sbb
popa
sbb
scas
popf
out
jmp
aam
adc
mov
mov
xor
pushf
cld
psubw
xlat
cmpsl
icebp
adc
enter
mov
aam
popa
add
or
inc
int
stos
loope
sbb
and
pop
int
sbb
jns
mov
mov
mov
aam
xor
out
pop
jmp
inc
pop
ljmp
mov
or
mulb
loop
into
xor
fcmovnb
or
gs
jb
test
std
push
cmp
mov
push
sub
jbe
and
filds
xlat
pop
fdivrs
rcl
dec
insb
cli
fdivrs
bound
xchg
cmpsb
shlb
xchg
sbb
cmp
jno
stos
int
mov
cmp
inc
cmp
loopne
cmp
rorl
andl
add
sub
fdivs
adc
or
daa
mov
cmp
mov
cwtl
sub
mov
cli
lds
ret
or
sbb
pop
mov
outsb
notl
ret
cmpsb
mov
repnz
jno
outsb
xor
sbb
and
jle
xchg
call
jge
xchg
mov
test
or
inc
in
xchg
mov
imul
pmaxsw
iret
mov
mov
fists
adc
jecxz
stos
shll
xchg
add
sub
xchg
cmp
jo
je
out
or
lret
rolb
js
fwait
std
out
or
push
and
mov
aad
int
aas
lock
loopne
jb
lret
cmova
cli
scas
mov
or
cmp
fucomi
sub
mov
add
in
fs
mov
insb
sub
jle
xchg
loop
inc
jg
mov
cltd
lds
fsubrs
repz
out
mov
cs
mov
lahf
mov
leave
push
lcall
je
lea
xchg
inc
repnz
inc
filds
adc
popf
aaa
or
clc
sub
mov
fwait
mov
adc
inc
fcomps
lcall
lahf
outsl
or
clc
movsl
in
xchg
addb
mov
push
jp
sti
call
lods
in
pop
test
pop
loope
jp
sbb
std
test
mov
xor
or
mov
sbb
mov
push
loopne
pop
add
jle
pop
push
add
hlt
mov
shll
cs
roll
fs
pop
dec
add
sbb
fbld
cmp
mov
inc
or
inc
mov
xor
sub
mov
fisubrl
lods
fisubrl
int
sbb
repnz
jge
lods
shl
js
xorb
xchg
xchg
dec
loop
adc
insb
in
add
test
xlat
in
pop
cmc
mov
jo
popf
aad
jg
cmp
negb
and
imul
push
dec
mov
and
jg
and
cmpsl
push
xor
jno
adc
inc
jge
jecxz
les
jno
add
insb
rorb
idivb
je
pop
lds
fwait
and
push
sbb
mov
std
int
es
pushf
mov
fsub
xchg
or
push
sbb
andb
pop
shll
and
and
and
sub
cltd
jbe
xor
add
dec
dec
sbb
enter
pop
sti
cmp
sbb
inc
or
adc
fs
call
push
pop
bsf
xor
inc
pop
or
xchg
lock
test
xlat
pop
int
and
out
xor
pusha
pop
sub
outsb
leave
jge
out
js
mov
sub
js
daa
inc
or
gs
and
or
xor
mov
sbb
push
das
jnp
test
sbb
xchg
push
movsb
sbb
push
pushf
bound
daa
push
mov
cmpsb
xchg
ljmp
lcall
inc
notl
or
imul
or
enter
cli
fwait
mov
cmpsl
add
js
gs
orb
out
and
sbb
and
enter
das
nop
in
push
test
adc
bound
push
into
mov
fiaddl
push
pop
sub
push
push
sub
pop
cmp
sub
pop
jmp
jb
outsb
fistpll
push
sbb
pop
cmp
mov
dec
repz
mov
sub
fdivp
das
repz
js
push
push
mov
mov
xor
ja
mov
imul
pusha
repz
loopne
mov
outsl
sub
popf
popf
decl
jo
fldcw
sub
or
popa
fsts
jle
inc
enter
into
push
cltd
xchg
in
push
push
icebp
ficoms
pop
pop
pusha
push
roll
popa
out
adc
cmc
aad
cmpsb
addr16
dec
cltd
mov
and
sbb
xchg
idivl
hlt
and
push
mov
repz
aaa
idivl
imul
lret
cs
push
stos
les
adc
sub
ret
pop
sub
pop
mov
mov
mov
or
or
clc
in
cmp
xchg
ja
sbb
push
int
stos
jns
shll
pushw
mov
bound
pop
inc
and
jl
and
leave
pop
cmp
mov
adc
stos
dec
jbe
sub
pop
xchg
aaa
dec
fwait
cmp
sbb
adc
aam
jb
and
inc
and
sub
fwait
push
fistl
lods
out
xchg
scas
movsb
imul
xlat
cwtl
enter
sub
in
into
cmp
mov
mov
lock
and
outsl
xchg
loope
lea
outsb
add
je
inc
xor
fstpt
leave
jecxz
mov
mov
repz
dec
sbb
imull
pop
dec
sub
das
out
dec
and
cld
je
testl
dec
or
xor
mov
stc
push
popf
rcl
shll
sbb
adc
fisubs
mov
dec
das
xor
ret
xor
and
bound
xchg
adc
xor
inc
xor
push
or
cmp
int3
cs
in
pop
cmc
push
and
aas
nop
das
mov
lock
xor
dec
adc
inc
popf
stc
aas
fildll
sti
lods
dec
popf
sbb
pusha
in
push
mov
popa
jbe
pop
in
out
mov
adc
imul
lock
adc
lock
inc
loopne
lahf
sub
std
in
popf
out
push
aad
out
push
adc
jl
aas
test
xor
pop
mov
dec
lock
test
push
sbb
jne
fiaddl
hlt
stos
push
sub
fiaddl
ds
xchg
mov
jnp
cmp
lea
cmp
aam
adc
lods
pop
xor
popf
push
cmpsb
push
cwtl
xchg
and
lock
insb
mov
lds
pop
push
das
inc
xor
inc
mov
out
in
aaa
repz
rolb
push
arpl
xchg
cs
xor
cmp
pop
jecxz
push
shl
pushf
in
mov
add
into
fwait
call
scas
xor
pop
cwtl
out
add
pop
divl
addr16
popf
repz
fimull
pop
pusha
in
sub
inc
pop
in
mov
int
aas
out
mov
inc
je
ljmp
xchg
mov
or
mov
inc
mov
mov
add
sbb
negb
add
stos
jl
cmp
mov
cmp
mov
clc
mov
fnstsw
mov
mov
push
sbb
rcr
cmpl
xchg
mov
lods
movsl
xchg
aad
sbb
or
out
rclb
out
push
outsl
popa
repz
push
xchg
out
jne
outsl
xor
xchg
mov
cmp
jb
insb
jmp
add
aad
mov
inc
jmp
jno
jo
mov
jnp
cmp
dec
shlb
ficoms
jns
sbb
repz
or
fiadds
mov
ds
cmp
xchg
sub
mov
in
xchg
push
xlat
hlt
aas
xor
popa
xor
out
pop
aad
test
mov
repz
jge
lods
test
lds
rolb
dec
dec
mov
cmpsb
ret
popf
pop
aam
ljmp
inc
jecxz
push
movsb
inc
add
imul
xchg
lret
and
call
stc
outsb
fdivl
mov
pop
pop
pop
orl
mov
lock
or
cwtl
adc
ljmp
jb
je
jmp
push
int3
add
mov
push
adc
cmp
push
mov
out
dec
push
insb
cwtl
add
sub
testb
inc
aad
cld
data16
mov
cmp
scas
adc
js
daa
mov
mov
and
jp
add
dec
icebp
sub
xchg
mov
mov
cli
loop
jno
insl
adc
inc
sahf
mov
push
adc
jp
push
out
hlt
xor
repz
insl
movl
shl
cmp
orb
mov
or
cmpsb
inc
jae
pop
outsl
rcl
rcr
mov
mov
dec
mov
in
pop
mov
cwtl
fistpl
jmp
cmpsb
mov
data16
nop
push
or
and
fcmovnbe
jae
stos
js
dec
jg
push
mov
xchg
jle
sbb
loop
into
jge
xchg
mov
dec
mov
xchg
jl
push
and
mov
or
xchg
mov
stc
jae
cltd
jmp
mov
adc
cmp
mov
jl
mov
popl
sub
dec
stos
bound
sub
sbb
xorb
test
sub
andb
addr16
inc
outsb
cmp
stos
mov
inc
stos
xor
out
mov
cmc
pop
cmc
sbbb
mov
inc
negb
idivb
arpl
or
add
aaa
pop
dec
cld
pop
les
aaa
and
cs
imul
push
or
xchg
bound
cld
movsb
loope
cmp
or
lods
mov
xchg
xchg
or
jo
sbb
mov
adc
mov
ja
push
jl
nop
outsb
sub
push
jo
dec
mov
jbe
push
push
dec
mov
add
repnz
fimuls
aad
inc
adc
aas
fidivs
mov
xchg
imul
xor
fsubs
bound
add
cmp
xor
sub
lods
mov
or
cwtl
sub
out
inc
or
cmp
dec
aad
cmp
mov
xchg
xchg
aaa
inc
scas
aam
push
pop
sub
leave
int3
adc
mov
in
test
inc
fwait
xchg
push
test
or
xor
clts
ja
push
cmp
inc
xchg
mov
cmpsl
std
xor
adc
test
lret
push
add
lods
out
xor
mov
sahf
rorl
popf
lds
bound
test
lds
insb
lods
repz
add
dec
es
insb
pusha
movsl
sbb
jecxz
push
mov
pop
sahf
gs
pusha
jns
push
imul
xor
pop
inc
fcompl
leave
add
sub
cmp
adc
and
push
pop
lret
fwait
test
ret
out
fwait
popa
inc
jge
push
add
sbbl
push
cli
fadds
push
pushf
ljmp
test
daa
dec
pop
les
mov
scas
dec
sbb
pop
jbe
lcall
inc
je
cmpsl
xchg
mov
movsl
nop
cmp
test
xchg
sbb
fdivrl
in
jecxz
clc
fnstenv
cmp
push
mov
jae
cld
cs
mov
imul
je
pop
les
les
dec
repz
or
cmpsb
cmp
std
xchg
jmp
imulb
in
adc
in
push
mov
outsl
add
mov
movsb
lret
movsb
mov
decb
xor
jnp
or
test
fmul
cmp
push
in
mov
and
daa
xchg
mov
lea
add
ret
lods
addr16
rcr
loopne
jl
or
or
insb
popf
dec
cmp
mov
in
clc
mov
sbb
aad
fs
lock
jno
ljmp
enter
ficoml
mov
loopne
dec
dec
mov
je
stos
test
fistpl
xor
nop
mov
push
addr16
out
dec
xchg
rorb
jne
shrb
xchg
dec
fwait
lret
jp
incb
insw
test
xor
and
add
orb
pop
lcall
cmpsb
daa
mov
push
js
xchg
ror
shlb
pusha
fwait
ret
add
loope
scas
incb
sti
shll
rorb
mov
sbb
jo
outsb
jge
std
lods
sub
add
jp
xchg
stos
xor
in
mov
imul
je
enter
push
fdiv
mov
cs
loopne
lds
and
cmp
push
xlat
add
pusha
dec
loope
sbb
sub
inc
insl
ret
lock
out
imul
or
imul
add
inc
test
jp
imul
mov
scas
and
movsl
push
iret
dec
sti
nop
outsb
jnp
xor
cmp
ja
jnp
mov
add
mov
xchg
lods
xor
sbb
cli
jl
rcrl
lea
lods
bound
push
iret
filds
iret
xchg
sbb
test
add
sbb
inc
adc
les
xchg
loope
imul
mov
inc
push
cmpsb
dec
fmuls
fimuls
or
popa
int
dec
popf
fsubrp
fwait
out
mulb
stos
out
dec
es
cltd
or
test
mov
push
out
js
adc
mov
imul
mov
lods
lahf
ret
mov
ss
and
sbb
mov
cmp
cmp
outsb
adc
loopne
enter
sarb
mov
int
xor
jne
out
add
cwtl
ss
cmp
aam
fs
xorl
cmp
jo
mov
pop
xchg
ret
pop
xor
outsb
loope
clc
std
mov
sub
adc
inc
mov
xor
inc
sbb
mov
pushf
aaa
in
jne
ja
repz
test
out
dec
mov
push
mov
xchg
insb
popa
je
addr16
cmp
and
inc
inc
push
jb
jmp
sub
cmp
ja
mov
test
push
push
pop
mov
fsts
cmp
popf
scas
dec
fdivp
leave
test
add
imul
rcrb
mov
daa
ljmp
push
jo
mov
cmp
bound
dec
lock
xchg
fcoml
std
aam
sub
sub
ja
jmp
leave
inc
fldcw
leave
out
fdivl
stos
jbe
xor
xchg
dec
fisttpl
shrl
pop
xor
jle
push
das
leave
xor
lods
sub
ret
or
mov
dec
add
add
fldl
mov
push
inc
or
fwait
inc
test
jle
jp
push
outsl
xor
cltd
inc
sbb
pop
xchg
popa
inc
push
mov
lods
inc
mov
cmc
mulps
xchg
cmpsb
push
rol
xor
cmp
xor
mov
lds
and
push
mov
cltd
orps
mov
je
in
in
pop
fmuls
lods
lcall
jb
push
cmp
xchg
sub
adc
dec
mov
push
inc
ljmp
or
roll
and
in
rcrl
add
jmp
push
push
test
pop
stos
fisubrl
mov
les
pushf
xlat
xor
or
pop
je
enter
lahf
mov
inc
jnp
jnp
add
clc
push
lock
jecxz
xchg
sar
lahf
mov
cli
cwtl
jmp
xchg
push
popa
repnz
ljmp
xchg
jns
or
mov
sub
movq
leave
aas
push
rorb
into
mov
adc
xchg
or
xchg
int3
in
lock
mov
divl
pop
in
orb
shlb
and
cmp
sub
adc
adc
sub
mov
imul
inc
push
jbe
pop
dec
dec
jno
test
cmp
or
lock
enter
or
outsb
pusha
scas
insl
xor
push
xchg
dec
adc
pushf
movsl
or
jbe,pn
sbb
xlat
push
clc
mov
mov
lret
mov
push
and
scas
or
pop
out
test
and
sbb
in
ja
cmp
movsl
mov
pop
lret
add
lods
push
mov
lods
mov
push
pop
das
fcompl
arpl
inc
je
or
and
add
cmpsl
mov
cs
and
loop
sub
pusha
dec
xor
fdiv
lods
push
ss
jnp
out
and
cmp
push
call
ja
int3
dec
xchg
and
sbb
dec
push
call
test
outsl
mov
or
xorl
imul
mov
dec
in
not
cli
test
push
jb
hlt
add
leave
inc
push
sub
lods
stc
mov
das
std
dec
sub
push
mov
push
push
xor
dec
adc
sbb
sub
arpl
sbb
xchg
imul
fnsave
sbb
pop
mov
movl
lret
inc
jmp
call
icebp
pop
jecxz
mov
test
mov
xlat
push
in
je
push
insl
clc
dec
sub
daa
xchg
loope
push
push
aas
test
mov
jae
iret
test
gs
insb
mov
jae
sbb
xor
and
dec
sbb
sbbb
mov
jno
mov
cmp
into
fldl
out
and
lret
xchg
xchg
inc
jge
cmp
aad
daa
mov
sti
popf
fmull
push
or
dec
jne
mov
call
push
push
sbb
cmp
int3
jg
ret
pop
scas
fdivs
adc
push
jecxz
dec
fs
jle
cwtl
lock
aam
xchg
ljmp
test
or
lea
sub
std
fidivs
in
pop
mov
ror
xor
rorl
jo
daa
dec
stos
call
and
or
mov
fists
fwait
jo
push
pusha
pop
or
outsl
pop
cli
xor
es
pushf
mov
sub
test
jmp
xlat
inc
mov
cmp
je
decb
adc
es
mov
and
test
cwtl
stos
ja
mov
rorl
mov
in
imul
rcrl
mov
nop
adc
scas
mov
inc
cli
adc
mov
arpl
sbb
mov
das
adc
and
inc
nop
mov
fists
add
jle
pushf
add
jg
das
fldcw
lds
or
xlat
push
push
rorl
cmpsb
rcrl
dec
jne
scas
pop
sub
mov
fisubs
mov
mov
inc
stos
sub
int
stc
lods
jmp
mov
add
xchg
out
jno
popf
and
test
push
adc
sbb
dec
lcall
pop
lea
inc
push
push
mov
xchg
popf
movsl
adc
lret
sbb
push
and
push
add
js
cmp
sub
sub
mov
lahf
xchg
imul
cwtl
data16
sbb
loopne
clc
xor
ljmp
insl
add
pop
sbb
test
add
mov
inc
sbb
inc
subl
xor
jo
movups
mov
out
cmpsl
adc
push
sub
mov
and
mov
bound
cmp
jmp
fcompl
xchg
or
js
pop
inc
pushf
mov
jg
mov
testb
or
push
adc
dec
cld
dec
fs
cltd
or
inc
adc
rorb
loop
cmp
roll
mov
xor
loope
pop
push
test
aas
mov
mov
lret
cmpsb
pop
imul
stos
ret
add
in
push
test
inc
mov
ds
dec
lds
add
xchg
pop
sub
push
mov
push
jno
fcomps
orl
fstps
fnstsw
inc
jne
jmp
sbb
mov
sbb
mov
or
addr16
and
daa
fsubp
jns
pop
loope
dec
push
mov
mov
daa
lcall
push
dec
mov
sbb
mov
popa
inc
pop
sbb
stos
adcl
xor
loope
sub
adc
mov
mov
movsb
xlat
pusha
int3
or
adc
mov
lret
out
outsl
imul
and
lcall
ljmp
movsl
push
mov
into
pop
aam
xchg
clc
mov
mov
test
jecxz
and
mov
or
inc
xchg
je
mov
inc
mov
in
mov
loopne
sti
add
jns
insl
test
fs
mov
popa
xchg
pop
jle
jmp
insb
in
cmp
loope
inc
inc
add
cld
arpl
adc
pop
rcll
pusha
pop
pop
inc
jae
jns
cmp
sub
test
adc
fdivrl
lock
shufps
rol
cmp
push
hlt
inc
inc
imull
fcomi
jbe
or
push
cmpsb
vpblendmw
outsb
xchg
or
out
dec
mov
js
mov
daa
test
mov
add
sub
jae
dec
mov
dec
idivb
popa
xchg
fstps
adc
cmp
cltd
test
push
jp
shrl
mov
stos
test
add
imul
mov
push
cmpb
or
xor
adc
mov
cmp
lods
push
test
add
lea
xchg
out
dec
cltd
xor
ljmp
add
mov
aas
xchg
pop
daa
sbb
mov
jl
push
mov
jnp
mov
enter
cmc
push
leave
add
mov
xlat
xchg
lock
sbb
sub
mov
dec
icebp
push
jne
jae
or
push
pop
or
jo
ret
pop
pop
std
adc
test
xchg
push
pop
mov
rol
xchg
adc
sti
addr16
fidivs
jo
jne
and
adc
loopne
dec
idivb
mov
es
or
push
cmc
je
iret
cmp
fsts
inc
and
addr16
jne
pop
push
pop
loop
mov
mov
sahf
imul
push
push
aas
cwtl
outsl
dec
mov
loop
fiaddl
leave
out
filds
lret
insb
or
inc
pop
jmp
je
orl
outsl
mov
pop
insb
shlb
andb
sub
pop
add
xlat
sbb
and
loope
shlb
sbbb
aaa
sbb
push
repz
lcall
add
call
in
adc
lahf
xchg
popa
lods
ds
repz
lret
cwtl
pop
mov
or
and
cltd
inc
adc
inc
xchg
pop
rolb
pop
mov
xor
cmp
insl
push
or
sub
lcall
cmp
pop
in
iret
cmp
movsb
cs
push
or
inc
sbb
cmp
roll
sub
bound
mov
sti
js
sub
fbstp
xor
push
xor
outsb
inc
and
push
pop
cmp
push
mov
and
xchg
dec
push
lds
lret
lret
inc
jge
out
stos
insl
and
push
das
push
ljmp
sub
jge
clc
sti
test
cli
jns
or
aas
xchg
rolb
sub
out
nop
fwait
mov
add
adc
and
or
jl
pop
cmp
lahf
lret
cmp
cmp
pop
cwtl
and
shrb
xchg
outsl
sub
mov
inc
jo
xchg
jo
pop
dec
jmp
push
je
sub
sub
inc
pop
cmp
and
ljmp
test
je,pt
lret
pop
pop
sti
lahf
and
cli
xchg
adc
rclb
mov
dec
sub
popf
fldl
jge
xchg
bound
add
mov
das
dec
imul
add
lock
stos
sub
xorl
lcall
jns
out
dec
xor
mov
call
pop
jp
inc
sti
stc
test
lods
imul
adc
popa
dec
sarb
clc
into
in
leave
sub
inc
mov
jmp
inc
fimull
xchg
dec
in
cmp
xchg
rorl
sti
push
push
iret
fisubrs
stos
mov
dec
in
shll
jge
data16
push
xchg
mov
les
push
sbb
mov
cmc
call
sbb
cmp
jmp
jno,pn
mov
fsubrp
scas
cld
or
popa
mov
aas
xchg
das
mov
mov
icebp
xchg
jne
faddl
addr16
out
jl
jno
movsl
testl
test
rolb
adc
and
xor
repz
lret
add
and
data16
lock
shlb
fs
gs
lods
aaa
fidivrl
jecxz
cmpsb
push
cmp
push
cmp
push
pushf
jo
xor
jnp
fsubl
std
rcr
add
ror
inc
cmp
push
mov
sub
pop
push
mulb
jl
loopne
test
adc
std
xor
xchg
rclb
xchg
mov
in
push
mov
adc
adc
xor
sub
xchg
arpl
les
orb
das
loopne
inc
fxch
mov
dec
mov
add
mov
aam
fldcw
or
add
inc
fwait
arpl
dec
pop
ljmp
aas
popa
stos
orb
or
insl
mov
dec
push
adc
sbb
jns
test
push
movsl
ret
sbb
cs
add
adc
out
ljmp
rorb
out
jmp
jge
xchg
clc
ljmp
clc
inc
fwait
int
adc
xchg
aaa
loop
sar
cmp
cwtl
ffree
dec
dec
insl
es
out
add
lret
in
sub
cmp
arpl
sahf
adc
pop
dec
ss
dec
ret
xor
arpl
push
icebp
cmp
arpl
xchg
fwait
out
int
repz
pop
mov
in
inc
push
jbe
push
adc
leave
dec
test
cli
pop
in
jmp
shrb
inc
mov
je
mov
pop
addb
insl
cmp
mov
push
and
inc
call
or
jp
mov
cmc
mov
cmp
add
cmpsb
ficompl
outsl
add
ss
lock
inc
or
lret
sbb
cmp
enter
adc
imul
inc
pop
lcall
enter
push
je
scas
jp
pop
pop
sub
popf
rcrb
stos
or
lock
adc
enter
aad
cltd
jo
mov
mov
xor
sub
or
lahf
aas
pop
xchg
add
push
mov
addr16
out
enter
sub
jnp
cmp
or
frstor
inc
call
outsl
mov
or
lahf
cwtl
or
fstpl
outsb
and
add
pop
test
inc
loope
cld
rorl
gs
or
xor
push
cmp
stos
js
cmpsb
xchg
mov
cwtl
push
or
pop
mov
addr16
cli
mov
scas
out
jmp
or
pop
sub
add
sbb
iret
fdivrs
lret
push
ror
inc
pop
lcall
int
data16
sub
push
inc
push
pushf
jno
lds
push
jecxz
fsubrs
xor
aaa
in
mov
std
aas
imul
andb
adc
mov
int
push
pushf
lcall
fdiv
and
scas
sub
filds
mov
movsl
out
and
xchg
std
xchg
lea
sub
or
mov
les
imul
adc
mov
outsl
inc
pop
push
js
pop
jge
jecxz
shl
cmp
mov
aad
jmp
loop
push
loopne
cs
xor
ss
movsb
outsl
lahf
inc
lahf
fsubs
shll
cmp
decl
inc
fisttps
lock
daa
push
sub
or
jbe
jbe
pop
sub
mov
lahf
int3
aas
ja
icebp
dec
aaa
mov
orl
fmulp
jne
ret
subl
jno
xor
popa
jecxz
sbb
push
stos
push
in
mov
testl
adc
lahf
mov
fcomps
mov
push
mov
mov
xchg
jo
sbb
dec
mov
fucom
push
orl
mov
mov
mov
cmp
inc
push
mov
mov
pop
xchg
outsb
xchg
mov
movsb
movl
cs
pop
cmc
and
adc
and
mov
jg
fdivrl
repz
jo
in
adc
aas
out
add
mov
jmp
inc
xchg
jl
aaa
xor
arpl
inc
ret
jge
int3
fwait
dec
shll
fidivl
add
repnz
scas
and
cwtl
mov
mov
mov
jno
inc
stos
pop
mov
aad
repz
jae
or
dec
loope
aad
lret
pop
dec
int
loope
mov
jno
movsb
jmp
push
scas
add
testb
sti
add
sbb
push
lcall
std
out
mov
cli
into
push
add
or
xchg
mov
ret
test
leave
fistpl
daa
lret
bound
jo
mov
outsl
loopne
call
daa
aad
outsb
xchg
pop
sub
fs
jb
sub
dec
cltd
mov
lock
mov
rclb
adc
push
jmp
fs
sbbb
mov
jo
lcall
popl
divb
gs
test
push
dec
dec
adcb
std
scas
into
pop
es
repnz
and
mov
and
mov
mov
incl
xchg
cmp
xchg
flds
fneni(8087
mov
into
std
sbb
cltd
push
ljmp
jns
dec
xlat
and
daa
xchg
mov
mov
sbb
mov
int
paddusb
aad
mov
enter
shrl
mov
mov
pop
fnstcw
xchg
repz
jmp
adc
add
cmp
movsb
xorl
mov
sub
jmp
incl
pop
dec
scas
inc
adc
mov
lds
das
packssdw
rcrb
mov
test
and
out
jle
xorb
aam
fistps
push
orb
test
movsl
mov
add
mov
mov
lods
xor
ror
lcall
je
lods
mov
or
pop
ja
sbb
inc
rcrl
jne
cmp
push
in
xchg
fidivrl
jae
xor
out
ds
pusha
aam
sbb
outsl
sbb
jae
jns
push
test
and
cwtl
jo
subb
cmp
push
scas
xor
and
movsb
push
xchg
rcll
rcrb
add
addr16
inc
adc
or
mov
mov
fldt
movsl
popa
daa
inc
arpl
or
xor
cld
mov
dec
xor
adc
mov
pusha
sbb
ja
jb
rcl
push
int
jne
hlt
stc
jp
push
je
push
mov
sub
into
arpl
cmpsl
test
sti
mov
xor
outsb
ret
pop
dec
push
mov
jmp
aas
je
dec
sub
dec
jle
mov
add
test
push
xor
push
pop
or
testl
ljmp
ss
xor
adc
mov
jge
dec
dec
fdivl
or
adc
push
out
jb
mov
dec
jnp
pushf
fnstenv
push
pop
xchg
pop
mov
pop
dec
sbb
loope
mov
xor
mov
add
sbb
and
mov
nop
cmpl
fnstsw
inc
scas
lahf
loop
hlt
mov
lds
push
into
fmul
dec
stos
out
pop
dec
inc
or
lahf
roll
jbe
cmp
mov
aad
ja
fsub
mov
sbb
fisubs
push
rcl
imul
pop
xlat
andl
sarl
add
icebp
xor
int3
push
inc
stos
and
jle
mov
push
das
mov
lea
lret
push
xchg
lcall
sub
jp
sbb
or
or
dec
xor
inc
sbb
mov
shll
cli
push
test
aas
dec
shl
xchg
fs
pop
sbb
data16
mov
rcrb
sub
sbb
cmp
jp
dec
dec
push
test
xchg
ja
lcall
loop
jge
xchg
dec
sbb
sub
fdivrs
xor
and
pop
fwait
inc
sub
mov
pusha
or
sub
pop
fildll
mov
inc
test
push
int3
add
stos
or
and
arpl
add
inc
jne
pop
aam
mov
jnp
sub
push
cmp
and
xchg
adc
fwait
aam
jge
leave
push
lods
push
cmp
jae
sbb
jns
imul
mov
mov
inc
add
cmpsb
repz
es
neg
xchg
int3
jne
add
fwait
and
mov
sub
clc
outsl
das
or
addr16
xlat
aam
enter
std
sbb
iret
sub
je
aam
das
scas
ret
lret
cmp
adc
orb
fnstcw
xor
pop
es
dec
sub
test
cmp
ret
inc
adc
dec
dec
shlb
jp
addb
and
mov
subl
imulb
repnz
mov
xchg
xchg
mov
sub
cwtl
jbe
jg
pop
mov
mov
arpl
das
adc
inc
cmpb
ss
int3
mov
pop
mov
pop
mov
mov
jb
stos
stos
daa
mov
ret
aaa
lcall
xchg
adc
lock
mov
add
push
lahf
xchg
xor
test
jo
movb
icebp
js
push
lret
test
inc
popf
pop
cld
fcmovne
xor
cmp
sub
mov
loope
fsubrl
lea
lock
mov
dec
cltd
xlat
push
sub
inc
cld
pop
in
cmp
jae
fstp
mov
cmp
jge
cltd
movsl
xchg
sbb
pop
push
dec
pop
push
ret
xchg
push
in
cmpsb
sarl
aas
rcll
cli
and
inc
xor
fldcw
push
sbb
lock
inc
sbb
sbb
mov
pop
cmp
incb
loop
and
arpl
lods
pusha
arpl
xchg
js
out
xor
shl
inc
bound
and
sti
sub
adc
mov
clc
xor
push
fisubs
sub
movsb
xor
mov
roll
aad
rcrb
mov
jg
sub
mov
rcrb
movsb
scas
push
shlb
jmp
dec
lods
aas
cs
cmp
out
add
pop
cmc
and
icebp
adc
cmp
repz
cmp
imul
lea
int
ljmp
adc
ret
arpl
flds
pop
dec
jae
pop
jne
inc
loop
mov
dec
cli
cmpsb
sub
enter
fcomps
xor
daa
or
mov
inc
in
les
bound
repnz
popa
sbb
jle
mov
arpl
cs
aaa
fstps
sbbl
sbb
cli
adc
ret
or
push
fs
jo
cmp
push
xorl
jle
pop
pop
or
pop
mov
popa
mov
cmc
push
mov
std
jmp
mov
repnz
dec
pop
jg
push
or
sub
stos
jle
xlat
icebp
leave
rcl
in
sbbl
mov
fsubrs
xchg
xlat
jbe
test
dec
loopne
stc
add
pop
scas
mov
jno
cltd
xlat
add
or
icebp
jnp
jecxz
push
das
mov
xor
push
sub
rcr
lcall
call
fsubr
cmp
sbbb
pop
lret
rorb
ret
pop
push
test
cltd
pop
pop
cld
bound
mov
lret
inc
repz
mov
cmp
sbb
out
and
in
mov
pop
lods
mov
cs
xchg
push
sbb
lahf
dec
into
sub
mov
push
mov
lcall
sub
enter
lea
loop
inc
xchg
jnp
cltd
cli
bound
xchg
adc
enter
xchg
cmpsl
decb
mov
in
stos
aam
in
sarl
adc
dec
cmp
mov
pop
addr16
cli
mov
mov
sbb
sub
dec
into
ret
cli
mov
dec
addb
xchg
out
inc
mov
add
lret
imul
push
fmuls
pop
mov
pop
repnz
je
add
pop
rcl
addr16
add
xchg
cmp
adc
xchg
push
or
push
inc
lahf
sti
adc
das
xor
pop
dec
loope
sub
pop
fcoms
cmp
pop
jmp
cmpsl
adc
test
push
cltd
xchg
std
in
nop
enter
or
xchg
pop
add
ss
fisubs
lcall
pusha
jge
and
jae
hlt
ss
add
inc
mov
mov
xor
dec
push
add
sub
pop
gs
jge
or
mov
imul
js
pop
xchg
jecxz
add
mov
dec
mov
xchg
pop
jae
mov
imul
sub
pop
mov
ficoml
lea
jecxz
sub
xchg
jo
sahf
nop
mov
pop
je
push
xchg
pop
loope
mov
xchg
aas
jo
je
and
aam
outsb
push
es
dec
inc
add
cmp
mov
xchg
and
out
imul
xchg
ret
shll
lds
test
aam
daa
fdivs
rcll
add
imul
xchg
sub
mov
dec
push
add
idivb
loopne
xor
sbb
cltd
xchg
mov
fs
xchg
cltd
cmp
leave
repz
xchg
es
mov
jl
out
dec
cmp
xchg
bound
test
jb
dec
stos
xchg
mov
sbb
notb
or
push
jae
sti
imulb
test
xor
pop
xlat
test
rsm
loope
jae
cmpsb
mov
push
sbb
fnstsw
cmpsb
psubd
inc
push
loope
cmp
dec
pop
pop
and
and
scas
mov
in
js
xchg
aam
insl
jmp
lcall
xor
sti
dec
bound
lea
inc
xchg
mov
and
mov
dec
sbb
mov
add
xchg
xchg
leavew
fwait
in
test
and
inc
insl
and
or
xor
andl
mov
xchg
loope
lds
rclb
cmpsb
cmc
ret
cwtl
jne
adc
mov
js
jae
sbb
stos
aad
mov
sti
pop
inc
sbb
es
jmp
icebp
popf
and
pop
mov
and
cs
adc
adc
outsl
std
xchg
and
sahf
add
int
add
clc
loope
clc
lock
xchg
and
cltd
xchg
xchg
mov
jmp
lcall
jb
jp
in
adc
dec
mov
cld
mov
push
mov
gs
mov
inc
dec
imul
es
lea
nop
adc
mov
mov
lea
bound
jmp
pop
repnz
gs
insb
mov
add
sbb
adc
mov
push
popa
cmp
fmull
int
mov
pop
cmp
and
stc
sbb
sbb
jbe
or
sarl
insb
lea
cmp
push
sbb
fs
cmpsl
movsb
clc
push
push
add
leave
push
out
cmp
inc
mov
sbb
sub
icebp
les
not
inc
jo
iret
aad
xchg
movsl
or
add
jnp
add
inc
cli
cmp
mov
ss
icebp
fimull
lods
push
fmuls
xchg
pop
pop
imul
inc
jbe
jo
aad
lock
mov
sub
lea
call
test
sbbb
in
mov
xchg
das
ret
jl
fisttpl
fsts
fs
imul
pop
jmp
cmp
cmpsl
mov
cmpsl
stos
fnsave
pop
cmp
or
and
mov
and
mov
in
fs
cltd
dec
sbb
xor
popa
repnz
scas
or
das
sub
fcoml
fs
push
cmpsb
fidivrs
pusha
cmp
or
xor
sbb
jb
pop
pop
ja
dec
popa
xor
and
stos
sub
mov
mov
insl
cmp
sub
pushf
decb
scas
inc
mov
cmp
dec
aam
rcll
pop
mov
push
mov
push
call
xor
or
aam
mov
cmp
stos
out
out
data16
or
xor
popf
xchg
inc
push
popf
icebp
inc
lret
jae
sub
stos
repz
insb
add
iret
ja
xchg
int
into
out
dec
jecxz
dec
push
adc
aam
int3
stc
xor
mov
jbe
scas
xchg
call
or
js
int
pop
mov
sub
cld
mov
idivb
cs
aaa
nop
stc
ljmp
add
imul
sbb
rcrl
or
cmp
mov
dec
data16
cmp
stos
rorl
hlt
icebp
adc
pop
fbstp
inc
xchg
fstl
pop
xor
adc
and
jp
js
mov
jns
lahf
enter
paddsb
out
pop
xor
xlat
insl
fsubrp
shl
in
push
mov
mov
inc
sbb
jns
nop
div
sub
push
sub
push
js
or
push
dec
pop
sbb
rolb
mulb
adc
or
dec
jo
in
sbbb
push
sahf
jp
sbb
jo
cld
jecxz
ds
lods
testb
in
xchg
cmpsb
enter
in
pop
xchg
cs
mov
or
xchg
ficomps
mov
jge
cmc
lods
in
sub
pop
xor
and
fldt
add
popa
es
insb
xchg
das
bound
mov
fstpl
dec
sbb
pop
inc
stos
ds
sub
das
sub
mov
hlt
rorl
faddl
xor
cmp
dec
jae
mov
push
inc
movsl
repz
inc
shll
inc
fiadds
call
add
loope
aad
inc
mov
xor
out
lret
xor
movsl
daa
xchg
stc
loope
and
mov
mov
dec
mov
xor
in
lds
cmp
in
ret
inc
les
orb
lcall
mov
mov
sub
out
dec
stos
leave
mov
mov
push
mov
iret
jne
xor
roll
inc
sbb
repz
insl
shll
sub
mov
pop
cld
in
inc
mov
das
add
insb
pop
lods
and
push
int
insb
sub
pop
inc
jbe
cmp
movsl
push
repnz
push
out
dec
into
xlat
test
js
cmpsl
mov
in
fidivs
test
jg
and
jge
mov
testb
test
stc
sub
dec
cli
mov
sahf
mov
rclb
jno
add
cmp
dec
inc
aad
add
pusha
sub
mov
adcb
pop
adc
dec
imul
aas
imul
add
jo
daa
and
jecxz
sub
add
sbb
mov
sahf
sub
mov
psubw
mov
adc
push
mov
loop
hlt
shlb
mov
xchg
xchg
call
jbe
inc
cmpsb
jae
in
cmovle
cwtl
add
ret
mov
inc
bound
incb
inc
addr16
push
icebp
rcl
push
jo
sahf
iret
movsb
imul
stos
aam
lea
push
fidivrl
jmp
xchg
stos
xchg
cmpsb
insl
add
int3
and
ljmp
inc
cld
ret
stos
sub
xlat
add
push
and
pop
arpl
sbb
pushf
and
aaa
sti
repnz
or
dec
arpl
cmc
sub
rcll
pop
inc
pop
sub
pop
aad
inc
add
out
call
pop
mov
adc
xchg
mov
pop
mov
mov
stc
orl
xor
push
in
adc
imul
stos
sub
sti
pop
insb
jg
and
sub
cmp
sub
xor
add
xchg
mov
push
les
lret
pop
sub
hlt
pop
arpl
xor
mov
sub
into
pop
add
xchg
aaa
ja
dec
adc
push
movsb
mov
aaa
cld
and
or
cmc
nop
ret
out
lcall
jbe
in
xor
jb
imul
lahf
push
xchg
add
xchg
and
inc
mov
lcall
push
sti
and
push
xlat
fucomp
sbb
fcomi
icebp
jge
push
push
xchg
out
jl
push
aad
dec
add
and
andb
lods
xchg
pop
outsb
imul
sub
cwtl
jns
adc
pop
es
jns
sub
xor
insb
out
push
scas
xchg
dec
lock
repnz
sarb
mov
aaa
sbb
fidivrl
movsl
lock
mov
fcomi
sbb
sbb
lret
call
adc
jne
imul
test
clc
xchg
scas
sub
xchg
cmp
xlat
mov
add
and
in
cmpsl
xchg
xor
sbb
ss
lods
rcll
jg
cmp
pop
popa
or
arpl
mov
sub
jecxz
loop
call
es
inc
xchg
adc
cwtl
mov
mov
adc
and
add
fcomi
sbb
ja
dec
mov
jae
mov
jecxz
dec
jb
xchg
outsb
in
fdivrs
test
sbb
adcb
push
adc
mov
cltd
xor
test
gs
dec
loope
movsb
jle
ret
push
cmp
add
insb
out
sub
aaa
shlb
repz
mov
fldcw
stos
call
out
sub
mov
mov
or
mov
xchg
push
sbb
jne
push
jae
ret
popa
add
stos
mov
or
das
cli
pop
inc
lret
inc
cltd
cmp
jmp
xchg
js
pushf
mov
push
jno,pt
and
aam
add
stc
in
mov
xor
stos
andl
add
mov
xchg
aam
lods
jae
and
fstpt
aad
aas
cltd
popa
and
adc
mov
pop
pop
add
add
ljmp
loop
out
dec
push
repz
div
xorl
pop
mov
jns
dec
cmp
mov
shr
push
orb
lods
jecxz
xor
sub
in
pop
popf
test
jg
mov
shrl
das
sahf
ffree
pop
stos
dec
faddl
mov
sar
jns
push
or
in
cmp
pop
sub
mov
jge
icebp
pop
dec
xchg
and
mov
adc
cmp
push
push
sub
xchg
shrb
cmp
sbb
sbb
out
xchg
mov
push
sbb
jge
dec
inc
ffree
jo
cwtl
or
sahf
add
cmc
mov
call
xchg
fwait
xorb
adc
insl
mov
shll
lods
pop
xchg
add
stos
lahf
out
cmp
xor
icebp
mov
push
out
mov
lret
out
mov
push
push
lock
xlat
cmpsl
pop
xor
inc
xor
int3
popf
aas
jl
add
inc
mov
js
ret
and
add
and
mov
lds
push
inc
mov
cmp
into
push
mov
ds
pop
push
adc
push
xor
inc
fwait
pop
mov
call
pop
mov
lock
iret
mov
fiaddl
xchg
xor
xchg
pop
bound
movsl
lea
ficompl
loop
pop
pop
ljmp
fsts
pop
movsl
mov
push
daa
xchg
int3
mov
pop
les
into
lods
aad
mov
adc
int3
sub
push
roll
or
jo
imul
mov
and
repnz
insb
inc
cli
or
pop
orl
and
cmp
pop
sub
lock
nop
jae
inc
xor
cs
cmp
and
xchg
jnp
mov
into
scas
mov
add
push
and
je
rorb
xchg
and
push
test
sti
pop
xor
mov
cmp
stos
test
test
add
cmpsl
out
cli
add
je
lods
cmp
cmp
mov
jbe
lahf
mov
gs
rcll
ja
or
mov
sbb
orl
ja
outsl
sbb
femms
ret
add
cmp
jle
data16
xchg
cs
dec
insb
std
mov
stos
mov
aam
adc
jo
dec
or
mov
stos
mov
div
out
xor
mov
inc
into
and
and
cwtl
cmp
jg
mov
pusha
dec
sub
adc
cmpsl
adc
xlat
out
mov
clc
xor
cmc
mov
pop
dec
lret
or
xchg
lea
dec
push
xchg
sti
pop
cmc
xor
dec
icebp
pop
pop
and
aas
cmp
dec
loop
add
add
jno
pop
call
loope
and
push
mov
and
in
clc
pop
pusha
sub
sbb
call
pop
cld
nop
into
enter
cmc
jb
mov
xchg
and
or
and
sahf
rolb
adc
pop
cli
int
ret
pop
into
dec
sbb
ljmp
ljmp
incb
in
fmull
jbe
cmp
pop
outsl
jmp
sub
inc
test
cmc
lods
es
mov
sbb
icebp
and
mov
fiadds
and
pop
push
ljmp
dec
push
cmp
mov
mov
rol
js
fwait
scas
pushf
dec
push
push
xlat
jns
mov
sbb
sbb
popf
mov
and
adc
enter
mov
je
jo
sbb
adc
cwtl
jbe
lods
mov
pop
sub
fnstenv
scas
ss
stos
fisttps
je
add
int
adc
rcl
je
mov
xchg
mov
xor
add
or
popa
push
sahf
scas
push
nop
dec
cltd
and
mov
fsubs
cwtl
mov
insl
dec
push
jb
movsl
push
testb
mov
nop
fnstcw
cmpsb
enter
sarb
lods
ret
mov
imul
lcall
mov
mov
andl
sbb
pop
push
adc
jmp
add
jnp
cmpsl
jnp
shl
iret
adc
xchg
fdivrp
aas
pop
mov
xor
jmp
jo
inc
cmp
cmp
push
inc
inc
jecxz
mov
pushf
push
sti
xor
mov
xor
mov
pop
cmp
cmc
jp
stos
pop
xchg
movsl
push
loop
pop
push
in
adc
dec
xor
dec
push
cmp
adc
fiadds
cmp
push
dec
cmc
mov
imul
mov
mov
pushf
and
es
pusha
inc
jns
pop
adc
ljmp
scas
insb
pop
mov
or
lock
in
stos
jmp
out
mov
xchg
lcall
arpl
sbb
insb
xor
nop
add
jge
enter
mov
inc
in
xchg
fsubrl
lahf
mov
or
dec
push
jae
lret
or
out
add
dec
roll
sbb
lds
test
je
insb
inc
aas
xchg
fbld
pop
lods
cli
or
dec
xor
xchg
inc
dec
sbb
and
stc
mov
in
test
dec
fwait
pop
sub
in
pop
add
int
daa
jnp
adc
sub
into
mov
xor
lahf
push
sub
and
loopne
cmp
xor
fcoms
mov
lods
testb
test
mov
jno
push
dec
lock
sub
ja
hlt
test
subl
scas
dec
in
enter
subl
aam
cmp
aad
add
stc
xchg
mov
cli
loopne
clc
mov
movsl
idiv
rclb
mov
aas
fst
inc
jo
mov
jle
push
aas
cli
jo
and
aam
jno
add
data16
test
lods
jno
jmp
outsb
pop
arpl
xchg
mov
dec
test
cmp
lods
inc
addr16
push
ds
ret
xchg
dec
inc
popf
pop
dec
pushaw
mov
sub
push
cmp
ret
lret
inc
test
mov
imul
int
bound
ljmp
mov
push
mov
mov
lcall
nop
hlt
sub
loopne
push
inc
pop
subl
es
ret
push
cmp
sub
nop
push
pop
xlat
push
cmp
int
test
js
sbb
ret
loope
hlt
cmp
or
std
add
adc
test
mov
aam
scas
ficoml
xchg
imul
outsl
sbb
jno
movl
cmp
gs
sbb
jns
mov
push
adcb
daa
push
xchg
scas
es
mov
loope
cmp
xchg
gs
mov
inc
jp
inc
insl
shl
sarl
or
out
push
xorb
fildl
call
adc
xor
jbe
xchg
jns
pop
inc
sbb
shlb
xchg
out
mov
mov
pop
inc
push
mov
lret
aas
test
dec
daa
mov
dec
int3
mov
outsl
aam
in
ret
fldenv
push
push
xchg
js
sbb
shlb
pop
fidivl
je
leave
mov
jp
pushf
pop
mov
daa
jp
test
or
ja
test
pop
or
aaa
dec
mov
enter
lods
jle
xor
xor
sbb
popa
xchg
sbb
fadds
lahf
clc
fldl
inc
loop
mov
and
sub
testl
mov
jmp
test
rorb
push
jl
push
inc
jl
mov
xor
arpl
pop
lcall
pop
ljmp
mov
insb
fstpl
fstps
xor
inc
push
sub
jge
mov
fcoml
jle
in
outsb
xchg
push
arpl
dec
in
stos
mov
stc
push
mov
push
scas
or
add
lea
insl
push
cmp
orb
xchg
sti
aad
pop
repnz
aas
xchg
mov
pushf
lret
or
add
loopne
lods
xchg
daa
sub
rorl
fwait
iret
pusha
scas
mov
stos
add
stos
aas
rorl
sub
js
jae
movsl
mov
adc
inc
or
insl
fucomi
fmull
adc
inc
int3
jns
and
jmp
sbb
push
cmpsl
sbb
push
sub
loope
jge
or
adc
push
arpl
jp
daa
inc
dec
add
lods
cmpsl
addr16
stos
sarb
sub
ds
push
add
xor
mov
xor
mov
cwtl
cmp
pop
aad
sahf
fmul
jns
and
inc
sub
xor
mov
and
repz
xor
push
jecxz
shlb
and
push
shlb
enter
hlt
adc
out
mov
pop
mov
adc
adc
adcb
or
xchg
je
sub
xchg
inc
sub
jae
test
clc
or
lcall
dec
es
mov
dec
xlat
xchg
sbbl
mov
scas
cmp
icebp
sub
imul
cmpsl
sub
mov
jmp
mov
pop
mov
ret
and
out
adc
jge
imul
mov
push
pop
jp
jmp
shll
arpl
das
out
inc
not
or
aaa
pop
push
dec
sbb
stos
jge
pop
cltd
daa
inc
and
cmp
inc
inc
add
mov
dec
scas
movl
imul
or
sub
jnp
cld
adc
inc
mov
testl
sbb
outsl
mov
inc
das
mov
cwtl
mov
outsb
fxch
fwait
std
mov
push
movsl
das
mov
shr
dec
shll
pop
pushf
outsb
pop
mov
push
rcrl
mov
decb
push
sbbb
push
or
in
jne
jo
fs
sub
lods
test
pushf
loopne
push
aam
xor
push
cld
add
popf
insl
mov
xor
nop
lcall
pop
mov
mov
adc
push
xchg
sbb
mov
cmc
mov
sti
adc
into
imul
and
mov
fwait
sbb
fmul
cmp
pop
aaa
sahf
push
pop
aam
testl
rolb
sub
push
xchg
adc
pop
stos
test
fistpll
cmp
aad
xchg
add
fisubl
xlat
mov
xor
in
movsb
xchg
and
cmp
cli
pushf
mov
jbe
and
int
dec
inc
cs
outsl
push
xor
cmc
stc
call
add
pop
in
or
inc
adc
shr
push
outsl
xchg
lds
testb
fadds
fadds
jg
fsubrs
bnd
sub
mov
cmp
and
push
dec
jb
in
leave
adc
cmc
out
mov
inc
add
mov
xor
dec
leave
pop
dec
outsl
sub
in
stc
out
mov
fwait
mov
cmp
popf
xchg
sbb
pop
ds
jg
pop
push
jl
and
xchg
and
iret
int3
daa
pop
bound
scas
jl
and
jno
jne
cmc
rolb
dec
out
insb
adc
lret
add
in
aas
lods
jge
lret
or
dec
push
ds
das
test
pop
pop
loopne
call
inc
add
sbbb
jle
xchg
xor
sahf
xor
test
pop
sub
stos
loope
aam
ss
lcall
int
dec
or
insl
mov
add
jecxz
xorb
inc
scas
adc
mov
jecxz
mov
stos
daa
daa
pop
pop
add
mov
mov
decb
xchg
out
mov
shrb
out
push
les
inc
lea
test
lock
dec
gs
dec
lret
test
mov
xor
xchg
xor
sub
ret
dec
outsb
add
dec
ja
mov
out
sbb
add
fstpl
neg
xor
shrb
enter
enter
ja
push
lret
sbb
adc
dec
fisubl
int
mov
xchg
cltd
jg
add
xor
push
stos
cli
aas
or
out
fisubrl
call
ja
push
dec
mov
cmp
xchg
push
fcmovu
stos
push
orl
int3
fbld
or
dec
adc
pop
clc
test
out
mov
pop
push
push
and
cmp
cmovl
inc
addl
ficompl
je
sub
leave
sbb
sti
mov
xchg
scas
adc
xor
test
lock
xchg
xchg
push
jmp
repnz
cwtl
lods
in
mov
xchg
xchg
iret
mov
jecxz
and
mov
push
add
push
fistpll
aas
adcb
aad
and
jne
xchg
hlt
std
les
cmp
sub
xlat
add
push
call
rcr
xchg
adc
xor
movsb
in
insb
and
shll
mov
add
pop
inc
pushf
test
sub
loop
je
aaa
push
outsl
les
rorl
ja
loop
or
add
pop
push
and
push
fwait
test
jp
fmuls
xor
test
sbb
lods
nop
fldl2e
xor
mov
lea
pop
popf
inc
scas
sbb
pop
rclb
dec
sti
popa
out
sbb
mov
rcrb
cmc
inc
jmp
pop
bound
xor
jmp
fs
and
rcll
mov
scas
mov
clc
insb
out
shrl
stc
fcomip
cld
loopne
pop
push
xchg
adc
inc
loopne
nop
clc
adc
jg
adc
mov
lcall
aad
mov
fistps
fldlg2
loope
lret
and
mov
xor
cwtl
js
vmovdqa
fwait
jns
jge
mov
jne
inc
inc
inc
xor
or
js
kmovd
nop
repz
adc
xchg
push
pushf
rcll
mov
mov
sti
push
and
adc
fldenv
cmpl
ds
stos
jb
repnz
cmc
push
insl
repnz
xchg
inc
cld
ljmp
test
sub
in
sar
popa
pop
sub
insb
dec
imull
pop
dec
adc
hlt
stc
jo
aas
andb
jl
dec
int
pop
dec
sbb
sub
mov
std
dec
les
pop
rolb
pop
lret
orb
inc
jb
sub
leave
lahf
dec
adc
jmp
sahf
mov
in
push
scas
shll
sub
add
mov
filds
sbb
inc
pop
cmp
pop
addr16
imul
loope
and
dec
adc
inc
inc
add
popf
mov
xchg
sub
dec
ljmp
xchg
and
inc
hlt
pop
jae
cmp
ss
push
xor
adc
std
adc
push
addr16
xchg
mov
inc
insl
push
cmp
push
lds
pop
lahf
loopne
imul
pusha
xchg
xchg
lret
lods
out
pop
inc
mov
jmp
aas
repnz
lds
shlb
out
push
xchg
mov
xor
int3
xchg
das
or
cmpsb
aas
into
sti
stos
mov
pop
or
lods
into
pushl
add
xchg
sbb
cmc
sarl
lds
cmc
sub
mov
fisubrl
pop
push
push
inc
push
shrb
andl
mov
jbe
rcrb
inc
xor
inc
dec
push
pop
xor
mov
pusha
inc
pop
mov
push
test
xor
xor
insl
lods
sub
out
sbb
or
das
pop
and
imul
cli
mov
lahf
icebp
jecxz
adc
jg
add
pushl
pop
out
out
jl
or
dec
les
bound
cmp
inc
pop
sub
loopne
leave
pop
ficoms
or
and
movsb
loope
mov
shl
mov
sahf
int3
add
xchg
roll
xchg
pop
in
fisubs
gs
cmpl
pop
mov
cmp
mulps
out
cmpsl
in
push
pop
mov
das
or
jae
pusha
fistpll
pop
inc
arpl
xor
jo
arpl
les
popf
repz
add
fwait
sbb
mov
or
add
out
and
iret
xor
mov
call
pop
sbb
cli
dec
pop
or
push
xchg
mov
out
rorb
pop
outsl
or
mov
std
xor
movsb
jne
nop
and
mov
es
dec
add
js
adc
fisubl
shll
mov
mov
fdivp
push
mov
and
push
repz
add
lcall
test
pop
insb
jne
jo
mov
or
sbb
or
sub
xchg
add
ds
aam
pop
sbb
mov
shlb
adc
xchg
jge
std
sub
jl
shlb
lahf
std
scas
test
adc
aad
pop
cmpl
ljmp
into
jb
sub
inc
ja
mov
mov
xchg
cmc
aas
call
adc
mov
fadd
xchg
sbbl
push
mov
lret
push
lahf
inc
addb
shl
in
mov
mov
adc
stc
xchg
or
lock
and
or
cmp
icebp
dec
in
mov
pop
inc
outsl
mov
repnz
cltd
loop
cltd
inc
cltd
addl
add
ret
loop
mov
pop
add
push
jmp
and
and
push
pop
mov
mov
aas
nop
jbe
mov
xchg
gs
cmc
pop
lcall
inc
dec
sub
test
sbbb
out
dec
mov
add
fstl
daa
dec
mov
rorb
divl
push
imul
ficoml
arpl
add
mov
fldt
mov
shlb
push
mov
fwait
and
xor
int
or
insb
repz
pusha
iret
hlt
xor
and
mov
jno
jl
das
test
out
sub
push
popa
push
push
sti
lcall
fsubrl
pop
jecxz
adc
mov
pop
mov
fcoml
jno
js
push
mov
imul
dec
dec
xlat
ds
mov
mov
sti
jbe
lcall
adc
mov
add
cmp
inc
cltd
xor
jecxz
mov
std
xorl
scas
sahf
push
pusha
jl
or
and
jle
cltd
xchg
jge
push
out
sub
js
fadds
push
out
sti
or
push
mov
sub
sbb
sub
imull
decl
push
lret
add
push
adc
dec
pushf
gs
in
xorb
shrl
imul
xchg
movl
mov
mov
inc
sbb
mov
push
pop
int3
and
or
data16
cld
test
std
fistps
imul
push
sahf
xchg
push
aas
lret
jmp
lret
stos
push
sub
pop
and
sti
fldcw
lcall
pop
leave
lods
add
fwait
inc
dec
pop
scas
and
int
leave
imul
mov
or
jb
push
add
mov
sbb
jns
xor
out
fadds
add
clc
xor
cli
dec
mov
inc
mov
push
movsb
adc
shll
fnsave
es
mov
mov
int3
leave
dec
push
fiadds
jae
mov
cmp
mov
out
out
std
lahf
call
lods
add
insl
xchg
mov
pop
push
scas
xchg
xor
fsubs
inc
mov
adcb
sbb
and
aam
pop
lock
mov
aad
and
adc
pop
mov
adc
add
out
mov
aad
cwtl
mov
shrl
mov
cltd
bound
cltd
arpl
push
xchg
imul
add
inc
hlt
sbb
movlps
loopne
add
dec
loop
mov
inc
aaa
pop
addr16
orb
aaa
fwait
dec
xor
lret
fsubrl
fmull
insl
jnp
adc
fstpt
push
out
fcoml
mov
xchg
js
xchg
and
imul
inc
popf
cmp
and
inc
lods
insl
sub
sub
mov
sbbb
ret
lret
scas
shrb
fcmove
mov
mov
fdivs
inc
sub
sbbb
lds
stc
inc
xchg
aad
out
out
mov
decl
gs
xor
lahf
call
test
out
scas
cmpsb
enter
cwtl
add
mov
fdivrl
lret
popa
mov
andl
les
add
xor
jns
mov
das
jg
or
adc
lret
sbbb
add
jns
test
aas
mov
sub
push
arpl
cmp
lods
outsl
xchg
inc
mov
ret
fldcw
jle
inc
rcrb
push
fsts
fimuls
add
cmp
scas
mov
hlt
xchg
mov
pop
mov
sbb
insb
xchg
mov
or
int3
push
pop
inc
xchg
mov
gs
arpl
dec
xor
ret
jle
jns
xchg
pop
test
jp
and
dec
cmpsb
leave
xor
rol
push
fildll
inc
stos
pusha
dec
jae
dec
bound
mov
jmp
out
es
movsl
lods
adc
dec
test
scas
addr16
in
xor
sub
ja
mov
jno
testl
pop
nop
data16
mov
add
push
mov
add
push
push
leave
pop
or
jge
cs
int3
or
adcb
nop
xchg
push
push
into
sbb
xor
xor
mov
xchg
repz
mov
int3
lahf
mov
inc
inc
cwtl
lea
dec
dec
inc
mov
popa
sub
adc
dec
mov
gs
xlat
js
stos
andb
icebp
mov
adc
sub
divl
addr16
sbb
jns
icebp
shll
sti
fldcw
mov
cmpsl
outsb
stc
ja
pushf
inc
pop
arpl
xchg
inc
add
fucomip
sbb
test
mov
inc
xchg
addr16
pushf
je
data16
repz
push
mov
xchg
repz
es
aad
mov
int3
imul
mov
stos
lahf
sbbl
mov
xor
gs
cltd
pop
pop
sti
fwait
cmp
incl
push
sbb
js
inc
cmpsb
data16
aas
jl
cmp
clc
data16
sti
xchg
cltd
jbe
mov
lahf
cmpl
lea
mov
es
add
mov
mov
sbb
cmp
mov
fsubrs
mov
xchg
repnz
and
pop
scas
add
dec
and
ljmp
jmp
div
inc
lods
adc
shl
xchg
fnstcw
stos
bound
pushf
clc
jb
mov
or
and
out
mov
repz
shlb
mov
dec
in
loopne
or
pop
int3
int3
sahf
popf
cmc
jbe
jbe
sub
and
je
ss
arpl
repnz
inc
mov
inc
shll
adc
aad
push
mov
push
fsubs
dec
or
sbbb
push
xchg
les
xor
push
jae
leave
mov
inc
add
fwait
cmp
jg
sbb
mov
pop
adc
aad
rorl
aad
bnd
fwait
xchg
testb
mov
int
push
pop
mov
shlb
pop
sub
inc
sbb
out
insl
add
jae
sbb
mov
mov
mov
and
sub
cli
inc
ret
push
mov
inc
fimuls
or
inc
jae
cld
mov
pop
sbb
push
mov
fs
mov
dec
sbb
dec
mov
out
inc
cwtl
push
fsubl
add
xor
lds
aas
sub
push
arpl
bound
out
sub
fstpl
pop
jnp
add
push
test
call
inc
jl
sbb
pop
mov
repz
jle
dec
cwtl
inc
pop
xor
sub
les
fiadds
add
or
add
imul
xor
push
les
jmp
leave
dec
ljmp
loope
lret
push
test
jo
incb
dec
popl
subl
ret
xchg
and
sub
push
pop
pop
je
imul
mov
es
jmp
aas
push
and
lret
imul
sarb
dec
xor
popf
clc
out
test
cld
xchg
gs
pushf
insb
or
jne
and
jle
js
push
pop
insb
in
call
sbb
sahf
mov
iret
xchg
add
push
and
push
es
mov
out
cli
sub
mov
adcb
add
mov
lea
fsub
push
inc
insb
pop
sbb
lahf
sbb
push
sbb
fists
in
sub
outsl
les
adc
pop
dec
lret
xchg
jo
scas
push
je
ds
testb
cld
sub
sbb
push
or
arpl
add
cwtl
scas
xor
mov
pop
and
xchg
out
jp
bnd
cld
pop
test
jmp
js
and
sahf
mov
push
clc
cmpsb
es
add
and
inc
lods
ret
jmp
fdivl
mov
or
cmp
pusha
mov
int
jns
and
pop
sbb
push
mov
hlt
sub
sbb
mov
push
jns
cmp
dec
add
mov
outsb
dec
push
or
out
daa
and
js
mov
repz
fcomip
mov
add
sbb
icebp
fists
xchg
and
xor
mov
lods
or
dec
xor
pop
inc
lods
inc
mov
neg
aam
shrb
mulb
lds
xor
sbb
test
pop
xor
adc
rclb
dec
push
inc
mov
mov
xor
xchg
inc
xchg
data16
add
xchg
xorb
dec
and
aad
cmp
mov
xchg
int3
adc
mov
aas
arpl
mov
in
fstp
pop
and
in
inc
cmpsl
push
aad
insb
dec
fstpt
push
fsts
push
push
sub
xor
in
stc
aaa
jbe
in
sbb
es
or
push
adc
cmp
in
insl
add
test
call
xchg
cmpl
pop
loopne
pop
jb
movsl
pop
mov
comiss
cmc
xchg
xor
daa
fimull
inc
inc
insb
mov
out
imul
popa
test
add
or
out
lcall
fld1
pop
lea
mov
mov
jne
fbld
or
movsb
jae
imul
mov
cmp
xor
mov
adc
push
fsts
add
test
jg
sub
loop
int3
inc
pusha
jge
mov
inc
mov
out
lret
lret
xor
imul
testl
mov
rolb
jl
ljmp
dec
pop
loope
jl
cmpsb
stc
inc
pop
adc
outsl
pop
inc
pop
aam
cmpsl
mov
sub
pusha
add
push
enter
movsl
pusha
je
out
testl
loope
add
sahf
sub
js
push
test
rep
mov
enter
xchg
xor
dec
xchg
cmp
add
popf
sub
mov
inc
arpl
xor
jno
arpl
adc
aas
and
cli
dec
jnp
fstl
out
out
push
mov
dec
or
lret
cmp
jecxz
cmpsb
fdivrs
lcall
aam
mov
int
out
add
mov
imul
jo
mov
nop
push
xchg
ja
mov
xor
mov
outsl
lea
je
adc
add
adc
push
mov
jmp
or
aaa
mov
test
dec
push
sub
loopne
xchg
mov
imul
mov
lds
sub
ljmp
inc
lea
test
loop
lret
xor
and
adc
insb
pop
fldenv
cmpsl
jg
popl
pop
fidivrl
add
adc
idiv
lret
das
pop
jmp
pop
pop
daa
adcb
add
gs
sub
in
fistpl
fistpll
lcall
pop
sahf
push
mov
mov
sub
dec
cld
add
mov
mov
or
loop
daa
lea
xorl
ret
xchg
mov
and
addl
jp
jae
jo
andb
sbb
popa
sbb
lahf
lcall
insb
push
mov
push
adc
add
jns
int
add
add
stos
add
test
inc
dec
sahf
add
popa
jae
xlat
xchg
xchg
lea
add
pop
jno
rorl
pop
into
pop
sahf
or
loope
addr16
jge
sahf
test
pop
outsb
cli
scas
sub
adc
jle
jmp
call
fcmovb
imul
mov
adc
sub
ds
rclb
pop
pushf
cmc
adc
lret
adcl
test
icebp
outsb
insl
pop
enter
pop
and
stc
repnz
popf
push
in
mov
ret
into
fistl
cmp
mov
sti
imul
adc
out
dec
ss
or
repz
pop
and
adc
cli
lock
sub
or
addl
mov
cmp
test
aas
aas
sti
xor
sub
lock
fnstenv
cmp
xor
cmp
xor
lock
or
test
test
lods
mulb
add
cs
or
cmp
sbb
xchg
in
clc
pop
hlt
and
mov
adc
dec
out
pushf
or
push
xchg
repz
bound
inc
jnp
orb
mov
add
fisubs
nop
loop
xor
jo
adc
pop
mov
mov
push
or
dec
sub
shrb
lcall
fsubl
add
sarl
ret
jb
pop
pop
cmp
pop
jne
fwait
mov
or
adc
les
pop
stos
jp
and
sbbl
and
aaa
addl
xor
adcl
bound
movsb
adc
imul
into
pop
sub
jle
fdiv
dec
addr16
add
dec
loope
int
and
mov
xor
ss
mov
xchg
enter
jns
sbb
cli
lahf
out
das
je
xchg
inc
movl
inc
dec
aaa
pop
imul
dec
shr
sbb
inc
popf
push
fdivs
out
lret
xor
call
xor
xor
push
mov
ja
adcb
cmc
in
clc
loopne
iretw
ret
je
ljmp
dec
mov
or
lahf
jle
inc
push
lods
sbb
cld
cmp
pop
mov
xchg
jns
std
jnp
push
jp
sarb
imul
fisubrs
xor
push
mov
out
imul
fsubrl
xchg
jo
sbb
xchg
leave
insl
cmp
jb
xchg
fstps
inc
lret
rorb
loopne,pt
pop
cmpsl
sbb
mov
or
sbb
clc
mov
sti
jl
sbb
dec
xchg
xor
cmp
push
xor
dec
cmp
ja
dec
pop
movsb
insb
dec
dec
inc
scas
repz
mov
push
sub
out
in
insb
hlt
gs
test
aas
sbb
js
stc
mov
adc
xchg
push
out
jecxz
subb
imul
in
pop
aad
jp
mov
pop
outsl
repz
or
fnstenv
cmp
popa
sti
pop
cs
je
test
and
imul
movsl
popa
js
adc
cmpsb
or
mov
cmpsl
sub
lea
sbb
mov
inc
outsl
into
and
iret
movsl
inc
inc
mov
shll
sbb
mov
push
inc
fisubl
lods
or
push
or
hlt
frstor
push
xor
out
push
jmp
push
cmpsb
in
cmpsb
fcmovbe
add
xchg
insl
in
enter
or
ljmp
aad
mov
mov
out
sahf
push
outsb
fildll
push
ds
inc
inc
in
xchg
inc
push
js
cmpb
mov
sahf
jbe
je
xchg
adc
nop
mov
sub
cmp
mov
outsl
mov
jp
js
inc
arpl
push
aad
inc
cmp
xchg
into
push
es
xchg
xchg
icebp
sub
xor
dec
jp
add
fdiv
jle
inc
fmull
push
xchg
and
cmpsb
mov
cs
and
into
jge
dec
mov
pop
aas
ss
or
sub
or
mov
lods
or
adc
xlat
xor
or
iret
fldenv
gs
imul
sub
and
test
jno
fmuls
xchg
add
out
or
xchg
pop
lret
fisubs
pop
scas
sbb
cmp
mov
push
int3
cmp
jne
ret
cmpsb
push
dec
or
inc
mov
sub
ds
xchg
mov
loopne
movsl
test
xchg
je
insb
push
ja
push
cwtl
xchg
sub
fmul
pop
fwait
in
xchg
sbbl
dec
dec
xchg
jo
call
pop
daa
adc
mov
mov
sarl
or
icebp
adc
adc
or
les
daa
xor
xor
andb
int3
mov
lret
add
test
rcl
cmp
mov
js
dec
roll
jle
cmp
xor
mov
gs
enter
add
in
xchg
pop
jecxz
inc
jp
pop
fnstcw
and
clc
cmp
in
pop
test
movsl
mov
loop,pt
sbb
mov
bound
jnp
enter
insl
xchg
dec
jl
es
in
xor
xchg
insl
or
adcl
sub
xchg
push
adc
mov
add
test
xchg
mov
stos
mov
imul
fucomip
jbe
dec
das
mov
shll
lods
adc
popa
pop
int3
outsb
jno
loope
or
out
adc
es
inc
cmpsb
sub
sbb
popa
cltd
lcall
sub
enter
add
insl
rol
std
outsl
inc
push
scas
xchg
dec
xchg
shll
xchg
xchg
lds
mov
mov
push
test
movq
clc
mov
mov
inc
mov
cld
adc
xchg
add
pop
and
adcb
movsb
shll
cmpsl
popa
adc
out
mov
push
incb
mov
fcmovu
cli
and
jo
in
movsb
inc
popa
jns
cmp
arpl
lock
jmp
pop
out
loope
push
add
or
andb
dec
divps
cltd
push
mov
push
das
dec
ss
adcl
sub
fisttpll
pop
shl
push
mov
push
jge
std
in
and
shrb
and
dec
inc
in
shlb
insl
cmc
cltd
cmpsb
jp
adc
call
xor
lods
xor
bound
add
adc
sub
push
pop
ret
lods
daa
mov
sarl
rcll
les
sti
push
adc
lds
inc
ss
xor
rcll
dec
roll
mov
dec
sbb
pop
out
sub
dec
push
loop
enter
negb
mov
adc
xchg
sbb
mov
push
and
movsl
cmp
sbb
adcl
imul
les
pop
test
popa
push
rolb
jo
mov
popf
jbe
mov
clc
push
inc
das
enter
pop
pop
adc
xchg
sub
out
xchg
xchg
or
sbb
and
aad
mov
add
repz
in
push
or
sub
sbb
or
stos
xchg
mov
adc
shlb
fdivrs
mov
loope
xchg
jb
pop
dec
jmp
pop
lods
dec
xor
inc
adc
or
jecxz
mov
test
xchg
sub
mov
nop
jg
mov
lret
ret
les
scas
push
push
leave
sub
adc
xor
pop
test
std
rcrb
adcl
clc
sbb
dec
mov
cs
fisttpl
pop
test
adc
fs
push
xchg
add
stc
add
stos
std
loop
pop
loope
jbe
shlb
dec
mov
add
add
arpl
cmp
imul
dec
loopne
xchg
call
inc
xorb
loope
ljmp
dec
dec
jl
lret
fmul
xor
inc
hlt
rep
sub
xchg
shlb
adc
cmp
out
sti
test
push
jg
sbb
mov
imul
icebp
inc
sbb
and
ljmp
test
ror
aas
push
xlat
aas
icebp
lret
fs
mull
sbb
xorb
xchg
dec
jp
dec
xorb
mov
jmp
mov
arpl
jp
mov
mov
bound
adcb
shl
testb
cmp
out
inc
mov
sub
jp
mov
mov
inc
sbb
lret
adc
sub
inc
aas
inc
inc
out
out
insl
idivl
pop
xchg
mov
sbb
push
mov
adcb
add
mov
aam
sarl
xchg
xchg
scas
push
dec
into
sub
cmc
mov
mov
jl
mov
adc
int
imul
pop
test
push
mov
dec
loope
outsb
shlb
int
mov
ret
lock
bound
icebp
imul
cmp
mov
mov
fisubrs
jp
int3
test
fs
sub
leave
mov
fstps
shrl
inc
lds
fisubl
mov
push
jbe
jle
cmp
imul
jp
adc
mov
xchg
out
popf
ret
pop
mov
xchg
hlt
outsb
popa
das
mov
mov
pop
xchg
popf
push
inc
inc
dec
adc
rcrb
fidivrs
pushf
jp
inc
sub
lock
daa
inc
cld
out
lcall
mov
cmp
mov
and
fimuls
ds
sub
insl
jo
mov
cld
popa
add
push
xlat
xchg
cmp
mov
imul
je
lret
mov
mov
or
stos
cwtl
in
es
leave
xchg
or
jnp
push
js
fisubs
outsb
lock
xor
add
shll
insl
stos
xchg
in
pop
fidivl
cmp
xchg
fcmovne
fstl
adc
mov
adc
pop
out
xchg
mov
pop
fisttpll
dec
inc
enter
fwait
xchg
ds
imul
push
leave
sub
push
inc
jno
push
push
cmpsl
mov
popa
shrl
sub
mov
addb
mov
sbb
xor
idivl
test
ja
out
sub
push
dec
in
fsub
xor
inc
xor
mov
add
ljmp
out
jb
mov
dec
bound
leave
out
test
xchg
imul
ss
call
iret
fs
mov
dec
aam
mov
inc
cwtl
aad
cmp
andb
cmpsb
xacquire
jecxz
mov
popf
push
push
out
cltd
xor
fdivp
sbb
xor
or
fs
lea
mov
pop
push
or
mov
ss
addb
sbb
clc
cli
dec
fstpt
or
insl
add
add
in
add
pop
or
push
ret
repz
call
dec
movb
sub
xchg
int3
repz
lcall
mov
and
xchg
cli
aaa
or
shll
cmpsb
fnstenv
jecxz
xor
repz
mov
xor
mov
and
pop
arpl
lretw
out
enter
adc
insb
test
fiadds
nop
hlt
es
jae
out
pop
xchg
jmp
sub
pop
addb
cld
in
xchg
push
shrl
xchg
jp
mov
pop
mov
ret
rorb
aad
fisttps
insb
mov
aam
lahf
push
push
and
sbb
xchg
repnz
leave
lock
sbb
and
fs
mov
mov
dec
mov
adc
lods
pop
mov
cmp
pushf
js
loope
mov
sbb
sub
into
scas
test
mov
test
in
dec
ljmp
js
fdivrs
and
xlat
sbb
cmp
add
stc
adc
xor
xchg
and
cmp
stos
mov
aad
jg
push
and
adc
jle
out
adc
mov
gs
cld
bound
cmp
out
fnstcw
push
sar
hlt
xchg
jne
cmpsb
xlat
pop
jmp
xchg
call
mov
enter
xchg
and
hlt
scas
add
cmp
push
cld
loop
pop
scas
jmp
xor
sub
imul
jp
mov
mov
fildll
scas
ss
or
adc
lock
fcoml
mov
mov
xor
mov
jb
push
push
arpl
jecxz
cli
push
push
xchg
sbb
in
les
aas
cli
sub
loopne
clc
idivb
mov
loop
jbe
xchg
ss
aaa
out
stos
mov
or
in
mov
cmp
movsb
sub
sub
push
jns
inc
xchg
inc
adc
outsb
mov
push
rclb
add
add
es
or
inc
sub
dec
mov
xchg
and
sub
leave
dec
jnp
arpl
popf
incb
sub
sbb
in
adc
dec
in
jge
or
add
sbb
jns
aaa
test
push
mov
mov
mov
sbb
daa
ret
mov
ret
call
add
cld
rcl
ret
repz
sbb
das
xor
push
pop
sub
repz
cmp
sub
xor
aam
sahf
pop
adc
in
out
out
jp
fs
jge
cmpl
das
out
jp
shrb
push
pushf
je
stos
fiadds
jnp
mov
rcrl
xchg
push
add
sub
lret
iret
mov
loop
or
add
cmp
loopne
xchg
int3
xchg
sub
ja
jne
out
fldenv
stc
inc
jnp
push
xchg
scas
sub
mov
inc
mov
lcall
pusha
push
adc
std
fs
les
ret
push
xchg
movsl
xchg
cmpsl
mov
lret
xchg
push
or
nop
pop
jae
mov
push
and
ret
out
inc
loopne
pop
das
dec
sub
dec
das
push
pop
add
jp
outsb
or
addr16
repnz
out
sbb
cli
enter
xor
jle
mov
mov
add
cmp
and
sub
xor
loop
pop
cmc
dec
lret
addb
cltd
xchg
les
mov
add
push
out
adc
mov
gs
loop
and
xor
fs
cmp
or
loop
and
inc
mov
and
pop
push
jmp
es
push
lret
xchg
hlt
mov
sub
movsl
rcrl
fildll
xchg
scas
fistpll
sahf
push
push
mov
or
movsl
adc
add
push
ds
stos
sub
enter
push
xchg
insb
inc
arpl
lds
xor
imul
movsl
push
sbb
fdiv
xlat
fistl
mulb
sub
mov
mov
mulb
outsb
lcall
loopne
cs
clc
stos
ret
and
pushf
leave
in
bound
rorb
inc
cmp
add
scas
cmpl
test
out
outsl
or
mov
mov
xor
lretw
xchg
enter
and
jecxz
xor
loop
xchg
mov
enter
test
repz
daa
nop
jno
add
add
cmp
ret
icebp
sub
lcall
or
mov
pop
push
gs
mov
cltd
xor
mov
daa
xor
cmp
push
shrb
pop
add
sbbl
inc
lret
fmuls
lock
idivb
mov
std
add
iret
pop
push
test
rorl
lcall
pop
je
leave
fcomps
xchg
cmp
adc
adc
dec
repnz
out
add
xor
loop
mov
aam
inc
add
loop
aad
mov
pop
sti
lret
call
sub
adc
inc
test
cli
adc
mov
enter
jg
loope
ficompl
pop
adc
imul
cmp
shll
rorl
loop
add
jp
mov
rclb
int3
or
xorl
or
sub
pop
js
std
int
mov
mov
hlt
aas
fbld
out
jae
mov
and
xor
push
add
or
test
mov
cld
cli
rclb
cmove
jmp
dec
and
int
mov
iret
dec
icebp
adc
outsb
pop
dec
or
sti
mov
hlt
mov
push
loope
pop
stc
test
push
fimuls
popl
mov
adc
lahf
add
dec
pop
addl
imulb
add
insb
jg
pop
ret
ds
mov
xchg
sub
and
ds
call
movsl
push
pop
pop
movsb
mov
dec
inc
jle
dec
push
pusha
and
stc
xor
mov
shll
adc
stc
fdivs
sub
push
xchg
and
ret
cmpsl
outsl
mov
jae,pt
daa
jmp
add
push
jp
gs
push
sbb
sbb
scas
xchg
inc
arpl
sub
stos
jg,pn
push
bound
sbb
aas
fsubrp
movd
pop
and
dec
loopne
cwtl
gs
repnz
dec
adc
daa
dec
scas
xor
inc
roll
call
mov
mov
mov
sbb
dec
pop
loopne
insl
cmp
in
adc
hlt
nop
push
aas
call
mov
loope
movsl
xchg
dec
sub
scas
repz
lds
scas
adc
mov
out
push
dec
mov
fnsave
sbb
mov
sar
dec
adc
leave
jl
mov
outsb
mov
in
mov
mov
or
punpcklwd
and
xor
sub
je
out
jnp
jbe
mov
insl
test
push
mov
addl
cmpsl
inc
dec
mov
inc
adc
add
movsl
movsb
sbb
pop
or
das
int3
mov
mov
pusha
je
xchg
xor
dec
and
iret
sub
mov
lods
push
test
lea
dec
mov
fcompl
mov
mov
in
pop
adc
pop
mov
dec
notb
sahf
inc
sub
aas
pop
push
inc
sbb
push
cmpsl
andb
jnp
pop
sbb
test
pop
fcompl
mov
jnp
xchg
add
movsl
inc
add
aad
push
cmp
lret
cmp
ret
pop
mov
mov
push
and
scas
test
push
pushf
ljmp
mov
jl
cmc
int3
je
insb
outsl
add
ffree
clc
rorb
push
push
push
es
pop
add
mov
jb
jg
std
stos
inc
xor
push
dec
in
jmp
xor
mov
das
pop
dec
and
sub
add
sbb
mov
dec
pop
ja
jb
fucomp
cmp
jns
and
aaa
inc
adc
and
int
mov
jnp
rcll
shrb
das
hlt
sub
cmc
push
sub
loope
inc
xchg
cmpsb
pusha
dec
shll
shl
add
cmc
inc
mov
cs
repnz
jb
inc
repnz
iret
push
inc
test
and
lds
in
in
push
push
or
daa
inc
test
popf
sti
xor
cli
dec
dec
sarl
mov
push
stos
loopne
pop
and
xchg
jbe
subb
imul
fildll
jl
pop
dec
cmc
lods
testl
arpl
addb
xor
pop
lods
and
adc
bound
pop
xchg
sbb
bound
lret
and
imul
inc
add
dec
dec
xchg
andb
and
fiadds
imul
gs
dec
js
jge
lea
mov
and
xlat
loope
mov
daa
sbb
test
movsl
pop
mov
dec
and
xchg
adc
dec
xor
cli
movsl
iret
enter
repnz
jnp
das
dec
pop
std
push
or
sbb
std
movsb
ljmp
call
lahf
arpl
shlb
push
jle
je
lock
push
insl
adc
mov
and
fnstenv
pop
cwtl
xchg
subl
bound
jb
jmp
pop
fmuls
mov
daa
mov
nop
push
movsl
and
sbb
jp
fiaddl
fisttps
ror
and
lea
nop
faddl
mov
jl
pusha
leave
insb
cwtl
adc
out
and
lret
pop
lea
test
adc
mov
sbb
in
fxch
xchg
pushf
add
mov
push
bound
sbb
nopl
sti
push
pop
push
scas
push
dec
or
sub
pop
mov
insb
sbb
add
inc
adc
dec
mov
lret
cli
mov
jbe
data16
ficoms
dec
data16
sarb
in
pushl
nop
cmp
add
loop
xchg
movl
sub
fildll
scas
aas
ret
mov
push
rcr
mov
lret
int
insl
push
mov
xchg
outsb
mov
mov
loop
inc
xor
inc
push
add
adc
call
and
pop
mov
repz
sub
pop
cwtl
cmp
pop
pusha
xor
movsb
add
or
pop
mov
std
mov
out
or
icebp
bound
pop
out
lods
xchg
jmp
jb
jo
scas
out
push
jmp
xchg
in
jmp
mov
in
std
adc
pop
cmp
repnz
jge
push
into
mov
mov
cmpsl
cmp
inc
push
mov
popa
mov
mov
jo
adc
iret
popa
xchg
mov
scas
xchg
fists
int
jle
add
lcall
xchg
std
cs
xchg
jge
xchg
jb
push
mov
popa
loope
adc
aad
mov
push
dec
dec
cmp
pop
out
xchg
icebp
pop
imul
mov
andb
arpl
loop
je
and
add
leave
stos
xor
stos
push
push
pop
lods
and
xchg
dec
push
loop
cmp
cli
mov
lahf
sbb
gs
aam
adc
dec
jae
jl
jge
ss
pop
adc
xchg
repz
xchg
pmaxub
mov
and
pop
push
adc
jns
ret
xchg
xor
outsb
lods
ds
and
jb
cli
sub
test
cmc
jl
cmp
jae
scas
je
xchg
pop
imul
pop
pop
outsl
inc
ds
mov
dec
fisttps
lods
push
lock
xor
fistpl
std
loop
push
xor
or
jg
inc
adc
or
inc
mov
xor
je
add
dec
and
xchg
pop
pop
xacquire
bound
sbbl
loope
mov
push
cmp
enter
daa
dec
mov
xor
ficompl
cmpsl
dec
imul
fcoms
daa
push
mov
insb
ja
xor
js
cmp
sahf
popa
xchg
mov
xor
clc
outsb
mov
sbb
add
movsl
icebp
lret
imul
mull
sbb
or
inc
cmc
lret
add
enter
push
lcall
and
pop
xor
dec
push
cmp
cmc
jmp
mov
cmpsl
adc
repz
popa
daa
clc
lcall
xchg
lret
rorl
es
dec
popl
and
jnp
push
mov
imul
sahf
xor
scas
mov
inc
jo
sbb
aaa
cmpsl
jns
xlat
scas
pop
cmp
dec
inc
mov
out
jg
push
mov
xor
and
cli
jl
das
les
dec
stc
sub
rolb
in
adc
and
push
mov
mov
pop
mov
aad
in
call
pushf
hlt
rcr
sar
cld
loope
pusha
clc
test
pop
cli
popf
xchg
jecxz
cmpsb
scas
xor
out
rcr
daa
test
daa
mov
mov
push
scas
sbb
dec
ret
mov
push
xorb
andb
add
xchg
push
pusha
cs
jl
popf
arpl
xchg
add
adc
fdiv
loop
insb
inc
fldenv
in
mov
add
inc
mov
mov
and
jnp
pop
adc
xchg
mov
xor
outsb
ja
je
cmp
jae
jne
sub
mov
fstpl
sub
add
dec
mov
cmc
push
insb
cs
xorl
fldt
iret
inc
push
sub
lret
jnp
sub
pusha
xor
sub
mov
or
jl
enter
mov
cmp
jbe
dec
lret
dec
into
lods
imul
jno
cltd
pop
jp
cmp
mov
xorb
cli
xchg
in
hlt
xor
imul
out
jmp
adc
sub
daa
push
push
aam
jmp
ret
ret
mov
xchg
and
pusha
dec
fdivr
adc
add
dec
push
mov
cwtl
adc
cmp
dec
xlat
dec
sub
stc
jmp
mov
insl
push
mov
int
test
mov
orl
mov
sub
fdivs
pusha
push
test
adc
test
push
inc
data16
or
fiadds
aam
ret
jo
cmp
dec
and
in
or
pop
fwait
inc
fwait
popa
inc
pop
or
cmpsl
repz
push
lcall
cmp
js
enter
mov
push
dec
mov
daa
popf
adc
idivb
and
aam
jp
push
sbb
xor
adc
dec
jnp
cmpl
shll
sbb
cmp
pop
sub
adc
jg
call
xor
addr16
arpl
cmpsb
jae
or
adc
adc
mov
push
adc
jmp
js
icebp
outsl
insl
and
mov
push
push
in
shlb
rcl
into
push
or
xor
test
jge
and
inc
pop
in
jns
cltd
stos
adc
out
push
add
call
lods
inc
lahf
mov
test
cmp
in
sub
inc
mov
fadds
adc
cmp
loop
dec
imul
inc
xlat
enter
inc
sub
iret
std
jge
pusha
sub
rcr
cmp
xor
stc
jns
adc
inc
xor
mov
jo
dec
popa
popa
mulb
lods
cltd
movsl
test
pop
push
push
jns
add
fisubl
jmp
sbb
cmp
and
shll
mov
mov
sti
cwtl
rol
jae
push
popf
xchg
rclb
rcr
clc
mov
xchg
insl
cld
mov
inc
imul
fcmovnu
rcll
arpl
jae
aad
fwait
dec
scas
cmp
pop
or
fstpl
jne
jecxz
outsl
lcall
push
dec
pop
test
adc
and
in
add
xor
pop
dec
cli
xchg
xchg
lret
push
js
in
into
jp
add
insb
enter
jno
aas
jne
sub
mov
jp
sub
sbb
cmp
jne
int3
push
xchg
jbe
pop
pop
hlt
mov
ja
pop
add
add
jle
dec
xchg
dec
rcrb
xchg
jmp
pop
movsb
mov
movsb
scas
inc
mov
stc
and
xchg
add
cmpsb
es
enter
adcl
push
adc
adc
cmc
lea
daa
jle
xchg
push
mov
sbb
les
lods
mov
mov
xchg
xor
adc
cmc
inc
icebp
cmp
aaa
pop
ffree
pop
js
inc
cmp
idivb
mov
cmp
pop
sahf
mov
out
cmc
shrl
xchg
stc
mov
imul
pop
test
mov
aaa
cmpsb
adc
test
fwait
inc
int3
stos
ja
jo
call
jge
pop
adc
or
ret
inc
bound
fsubrl
mov
push
push
pushf
in
lea
jmp
mov
negl
les
jae
cs
inc
adc
es
xor
mov
jmp
jns
jge
xchg
sbb
mov
iret
out
out
adc
bound
fsubl
pop
mov
adc
pop
mov
xchg
mov
clc
dec
xor
lds
jb
inc
pushf
inc
inc
mov
pop
ds
aas
fs
and
mov
dec
push
in
jle
shlb
mov
xchg
inc
push
mov
ds
movsl
inc
inc
push
call
test
and
jge
mov
pop
lods
subl
loopne
divl
pop
lcall
repnz
inc
je,pn
xchg
inc
mov
jo
jo
aas
fucomi
push
mov
or
push
movsl
and
ss
in
mov
int3
cmc
ret
push
xchg
push
jle
xchg
mov
sbb
insl
aaa
hlt
add
sarl
hlt
inc
sub
cmp
mov
bound
jp
les
jbe
clc
lods
mov
call
dec
jno
aas
icebp
nop
xchg
pop
into
add
jecxz
dec
push
jmp
inc
jg
gs
je
add
insl
pop
cmp
cmc
dec
push
gs
in
adc
pop
add
nop
cmc
pop
xor
ja
jg
mov
int
dec
pop
fidivl
add
mov
repnz
stos
sbb
pushf
insb
or
cld
cwtl
enter
daa
sbb
scas
vmovupd
push
lds
mov
notb
test
ror
mov
aaa
mov
xchg
cmp
xorl
mov
cwtl
sbb
lea
pop
push
jns
outsb
adc
mov
cmp
fisubl
adc
scas
xchg
movsb
inc
je
add
test
loop
inc
in
pop
xchg
clc
dec
fisttps
mov
repnz
icebp
les
xchg
cld
repz
dec
rolb
and
faddl
dec
mov
cld
rcr
lret
push
add
repz
test
push
test
cmp
push
pop
cmp
jns
and
xchg
add
test
loopne
cwtl
push
ljmp
insl
lds
out
lret
cli
inc
xchg
insl
cmp
xchg
xlat
push
orb
jecxz
push
lods
lcall
pop
xor
mov
mov
cwtl
leave
mov
mov
aas
mov
leave
jl
jp
fs
rcrl
jne
lock
icebp
orb
cwtl
mov
mov
lock
xchg
sub
in
das
xor
cwtl
mov
nop
or
nop
lret
push
and
xlat
sti
inc
loop
loop
or
bound
in
mov
mov
outsb
inc
xor
mov
lods
cmp
repnz
mov
jmp
addl
imul
cwtl
je
mov
adc
out
sbb
cwtl
sbb
push
movsl
add
push
cmpsb
jmp
jo
outsb
roll
movsb
xchg
lods
and
mov
rorl
pop
inc
pop
push
fnsave
mov
xor
sub
mov
push
out
fisttps
mov
stc
leave
in
iret
inc
fldcw
aaa
add
jp
ljmp
sbb
addr16
imul
dec
fisttpl
inc
sahf
mov
loope
xor
push
out
pop
mov
rclb
popa
sub
pop
xchg
cs
mov
shr
mov
subb
sbb
daa
je
stos
test
adc
mov
nop
mov
pop
sub
incb
sbbl
pop
xchg
fs
mov
lahf
fstp
xchg
fdivp
add
jle
mov
jmp
aam
ja
xchg
fdivrl
jge
jae
scas
lret
fmull
sbb
adc
lret
insl
cli
push
jp
je
js
out
stc
jp
push
int3
aad
ret
pop
mov
pop
call
cmp
jns
push
jno
jae
push
xor
popa
push
sub
gs
mov
clc
sub
shr
adc
imul
rol
arpl
mov
insb
push
dec
out
pop
addr16
ret
cli
inc
cs
jbe
call
icebp
rclb
sti
inc
mov
xor
cmp
hlt
jbe
in
cmpb
aas
in
out
cltd
lea
sbb
or
popa
vmread
adc
push
dec
adc
fmul
dec
cli
sbb
jecxz
mov
mov
cmpsl
enter
cli
cmp
lea
aaa
mov
fcoms
lods
aad
popa
mov
pop
pop
mov
lods
cli
xchg
jne
mov
dec
dec
xchg
sbb
lock
dec
xor
std
push
call
sub
cmpsl
stos
loopew,pn
repz
lahf
daa
hlt
test
mov
cmp
loopne
pop
push
sub
sbb
dec
dec
aam
test
xchg
fldcw
inc
in
cmp
mov
mov
ljmp
cld
xchg
mov
xchg
pop
roll
mov
rorl
in
cld
mov
jae
cs
dec
aaa
mov
sub
loopne
or
fsubp
imul
das
sbb
pop
loope
xor
shrl
cmp
sbbl
cltd
pusha
inc
dec
test
call
xor
outsl
mov
mov
push
jns
insl
xor
stc
andb
leave
sub
in
lret
adc
pushf
lahf
adc
inc
mov
aam
movsl
fsts
pop
cli
and
xlat
ret
pushf
lret
ficompl
mov
int
cmp
jbe
fidivrs
and
and
test
lods
fisubrs
cmc
std
mov
mov
js
repz
bound
iret
icebp
lock
pushf
fsubl
outsl
inc
sub
jp
mov
mov
sbb
je
loop
mov
cmpsb
push
shrb
stc
out
push
popa
pop
adc
push
bnd
je
cmpsl
outsb
cmp
in
jg
xchg
xor
ret
mov
cmp
mov
stos
push
loop
xor
xchg
or
pop
lods
sub
pushf
fld
push
std
mov
dec
and
sub
in
lock
fucomip
xor
mov
xor
mov
xchg
mov
lods
rcll
xchg
mov
inc
das
adc
ljmp
insb
mov
mov
imul
xor
mov
popf
aad
dec
out
popa
js
xchg
add
out
add
imul
cld
jns
aam
push
addl
and
pop
cmp
out
lea
cmp
shlb
cmp
push
add
lret
outsb
js
jns
jge
and
mov
sbb
jmp
test
xor
mulb
and
cmp
push
sbb
clc
sbb
pop
sahf
shll
sbb
xor
pop
jmp
jge
push
in
xlat
mov
xorb
sbb
sbb
repz
xor
mov
sbb
sbb
scas
fs
test
jno
push
das
lret
stos
shll
cmp
fdivs
aaa
mov
pop
push
ss
adc
push
into
std
inc
xor
push
divl
cmc
jnp
sbb
pushf
stos
bnd
aad
popf
or
mov
call
push
imull
sbb
sub
rorb
jae
pop
lcall
outsb
jecxz
or
call
jne
push
test
andb
fidivrl
jne
insl
adcl
mov
add
es
ja
dec
je
lods
ret
and
sub
or
cli
jmp
xor
mov
push
dec
data16
pop
lods
pop
push
jecxz
adc
sbb
lea
incl
adc
xchg
repnz
les
fmull
inc
imul
mov
jl
mov
jmp
adc
add
popa
add
dec
sbb
je
sub
bound
cmpsl
sbb
xchg
adcl
cld
jbe
loop
ficomps
insl
and
adc
adc
je
stos
jp
sub
mov
push
pop
jno
push
scas
xchg
in
mov
lret
aaa
mov
int
shlb
add
in
clc
dec
popf
mov
sti
sub
pushw
enter
ss
push
dec
sbb
mov
pop
add
pop
rorb
ds
and
add
pusha
cmp
and
lea
lahf
iret
sarl
add
movsb
jns
pusha
and
push
adc
inc
cmp
xchg
movsb
repnz
in
or
mov
push
jns
pop
ffreep
add
addb
or
lods
outsb
repnz
adc
xchg
ret
mov
jg
lahf
in
imul
cmp
shrl
fwait
cltd
xchg
xor
cmp
orl
xchg
and
or
pop
xchg
sbb
ret
push
aaa
xchg
stos
push
fdivp
mov
mov
out
xchg
sub
push
out
and
pop
xchg
in
mov
out
cwtl
imul
mov
and
popf
std
jecxz
ds
jne
mov
pusha
lods
add
inc
push
lahf
scas
je
rcrl
cmpsb
lods
push
icebp
xchg
mov
dec
repnz
aas
cmp
push
loop
xchg
add
fwait
jbe
cli
arpl
xor
cmp
movsl
adc
inc
scas
sbb
jle
push
jle
mov
inc
rcrb
iret
pop
sbb
xchg
scas
fwait
add
add
sub
cmc
insl
loop
lods
jl
dec
pop
outsb
pop
jb
mull
xchg
push
loope
and
add
out
mov
test
enter
and
icebp
or
enter
aad
mov
jne
das
call
enter
or
and
jl
test
cwtl
icebp
dec
mov
in
adc
jnp
aaa
sbb
mov
mov
enter
cmp
push
dec
mov
push
imul
push
jae
mov
mov
xor
ds
nop
lds
rorb
int
mov
leave
xchg
inc
leave
into
cmpl
cli
mov
bound
and
imul
add
push
or
push
sti
sbb
and
pop
leave
mov
hlt
scas
fdivrp
movsl
xchg
cmp
mov
int
out
testl
sbb
out
fidivrs
out
shlb
mov
add
adc
and
cmp
push
inc
mov
xchg
sbb
sarb
nop
adc
test
fdivl
subb
jge
mov
push
mov
inc
sbb
sbb
sbb
test
pop
push
jno
xor
es
cmp
xchg
xor
es
mov
sbb
loopne
sub
les
dec
xchg
push
adc
push
mov
mov
and
and
hlt
ret
sub
js
nop
clc
xor
sub
shlb
movsl
and
jp
fstpt
sbb
mov
into
insb
insb
pop
ljmp
into
sbb
and
inc
sub
jbe
or
fldl
mov
inc
pop
sahf
in
or
in
push
sub
mov
out
lcall
lods
mov
cwtl
add
push
sub
cmp
repz
add
dec
idiv
scas
int3
mov
mov
cmp
pop
mov
mov
sub
imul
jns
push
pop
rcll
inc
sar
popf
xchg
arpl
push
xor
lcall
jge
les
xor
shr
xchg
in
jle
in
ss
ror
mov
addr16
test
push
dec
jle
xchg
pop
enter
mov
cmp
jp
mov
les
fstl
insl
inc
hlt
test
ret
aas
aad
dec
sbb
mov
pop
jge
movsl
pop
cmc
and
loop,pt
idivb
dec
fcoms
inc
into
jnp
jg
sub
in
or
out
add
jmp
inc
ds
mov
aam
or
sbbb
movsl
jnp,pt
cmp
xlat
jp
mov
cmp
dec
popf
pop
sbb
dec
repz
jnp
rolb
push
fidivrs
add
mov
xor
inc
je
dec
push
lea
iret
ret
aas
lret
dec
mov
xchg
jp
pop
pop
mov
lret
inc
lock
stos
loopne
out
mov
imul
sbb
leave
sub
outsb
out
les
iret
cmc
dec
lea
ret
enter
jmp
lock
das
push
js
sbb
subl
xor
add
ljmp
fxch
ficompl
jae
or
mov
data16
mov
data16
sbb
mov
jo
pop
jne
xor
sbbl
pop
rcll
push
rol
into
cld
add
icebp
mov
cmp
filds
rep
out
adc
out
mov
pop
aaa
test
fwait
sahf
adc
inc
negb
std
in
shlb
lds
xchg
dec
clc
inc
lds
clc
cs
inc
dec
cmp
and
xor
shll
je
std
fimuls
jnp
iret
inc
inc
pop
lret
mov
outsb
add
or
int3
dec
cwtl
and
inc
push
sub
or
sti
call
cmp
bound
xchg
js
pop
bound
xchg
fwait
lds
enter
cmc
mov
dec
mov
sub
mov
mov
add
dec
sub
out
jno
out
adc
xlat
inc
fisubrs
lods
push
xchg
mov
xor
mov
cwtl
in
rolb
and
mov
jne
jp
jnp
ljmp
aad
xchg
xor
inc
aaa
mov
rep
fwait
xchg
imul
lret
mov
sub
repnz
int
mov
cmpb
or
add
adc
jge
mov
sbb
or
xchg
mov
stc
mov
pop
jecxz
xor
cld
push
push
mov
int
cmp
pop
inc
mov
mov
cmp
mov
mov
popf
roll
cwtl
test
and
jns
in
mov
cmpl
test
mov
out
dec
dec
dec
adcb
popa
mov
std
subl
inc
rorb
xor
mov
inc
nop
jne
xchg
xchg
ds
sub
scas
loopne
js
ret
iret
jp
dec
stos
divb
or
dec
push
push
fmull
movsb
lcall
mov
addr16
aam
scas
pop
or
mov
sub
stos
subl
or
mov
aad
test
lds
scas
movsb
daa
call
xchg
pop
mov
imul
mov
push
push
sbb
aas
arpl
test
aad
test
pop
in
out
clc
hlt
call
add
xor
fidivs
pop
test
out
mov
inc
cmp
test
mov
sbb
loopne
int3
add
pop
cmp
dec
and
dec
loope
dec
iret
insl
mov
arpl
xchg
push
lock
mov
cmp
push
mov
pop
inc
aaa
mov
xchg
loope
mov
ret
mov
xor
rcll
in
adc
cli
inc
inc
outsb
xchg
pop
xor
xchg
add
jle
xchg
mov
loopne
loope
jle
hlt
inc
std
cmp
add
sub
xchg
dec
xchg
addl
clc
xlat
sub
fsubrs
xor
lcall
or
push
xchg
pop
ljmp
rcl
int
push
pop
arpl
or
xor
dec
push
mov
aaa
push
ds
jbe
inc
mov
sbb
xchg
les
sub
fiadds
push
dec
cmp
dec
aam
mov
out
cmpsl
insb
adc
xor
sub
dec
push
add
or
mov
cmp
mov
xor
xchg
pop
push
lahf
sbb
xor
inc
mov
mov
add
loop
sbb
test
negb
mov
popa
loop
inc
push
out
inc
cld
ret
cmp
cmc
and
and
xor
jmp
shll
inc
xchg
push
cmpsb
pushf
or
in
adc
incl
fcompl
xor
adc
sbb
pop
pop
aaa
rorl
jp
daa
cmpsl
iret
or
aaa
shlb
je
sub
jnp
std
dec
xchg
inc
xor
ja
test
leave
sbb
or
cltd
pop
int3
dec
lock
ja
mov
cli
pop
inc
insb
sub
cmpsb
xor
sti
lret
and
cmp
nop
imul
test
mov
lahf
shrb
cmp
repnz
shrb
xlat
in
loope
cmpsl
fmull
adc
and
jg
xor
jo
push
pop
add
or
cmp
push
mov
and
pop
xor
std
or
cmp
scas
cli
xor
adc
mov
lcall
dec
xchg
hlt
sbb
imul
scas
cmpsb
mov
and
aas
outsb
ret
adc
jecxz
inc
add
push
mov
into
mov
lcall
cmp
inc
mov
in
jmp
mov
jmp
or
dec
pop
je
lds
in
mov
adc
mov
cmp
movsl
or
lock
and
cmp
dec
mov
paddw
push
push
and
push
clc
fs
test
and
or
cmp
ret
sbb
or
add
outsl
lock
sahf
fsub
shrb
fisubs
xor
sti
adc
aam
or
enter
pop
pop
jge
inc
loopne
orb
mov
mov
loopne
mov
xor
jg
xchg
mov
shl
arpl
call
cmp
inc
mov
adc
and
pop
subl
rorb
push
dec
nop
dec
xor
js
add
fsubl
aad
pop
mov
popf
mov
loopne
xor
sbb
push
faddl
hlt
lcall
push
cmpsl
daa
out
out
mov
push
jge
repz
das
add
mov
xchg
in
xchg
out
jecxz
mov
pop
pop
push
push
loopne
daa
mov
xchg
pop
fnstcw
push
jnp
decl
xor
aas
mov
jae
pop
movsb
stos
xor
xor
mov
or
and
and
addr16
and
xchg
add
lods
fildl
mov
sub
lret
cmpsl
daa
ror
cmc
xor
bound
xchg
fwait
js
dec
imul
je
popf
test
pusha
inc
std
lahf
clc
insl
adc
sbb
lds
stos
adc
aad
gs
int3
pop
in
mov
inc
ds
out
out
lods
or
pop
add
mov
stc
orl
ficompl
adc
add
push
clc
nop
ljmp
pop
jp
rolb
sbb
mov
shl
hlt
leave
xor
cmp
int3
mov
inc
xchg
rclb
shl
pop
cmp
xor
andnps
fstpt
mov
les
vrcpps
pop
mov
int3
xchg
inc
dec
jb
dec
cld
dec
xchg
mov
mov
jno
pop
mov
roll
inc
ret
xor
decb
repnz
xor
lret
mov
push
lods
xor
inc
xchg
enter
inc
scas
scas
cwtl
popa
lret
mov
cmp
dec
rcl
dec
out
das
faddl
aaa
ss
mov
and
repnz
xor
adc
push
sahf
jb
jl
add
push
sbb
ja
fsubrs
movsb
mov
inc
leave
ret
pop
arpl
jnp
into
jns
fdivl
aas
mov
add
out
adc
fsubs
pusha
shlb
xchg
aas
fcomi
enter
xchg
sub
pop
stc
test
push
aas
pop
xor
adc
and
xchg
jecxz
icebp
fdivrp
cli
or
dec
and
data16
out
lahf
fisttpll
sub
and
push
subl
aas
aaa
xchg
adc
dec
popa
sbb
mov
mov
popa
dec
add
inc
aad
dec
shll
lds
jns
jg
mov
jne
xor
mov
pop
adc
cld
xchg
inc
in
adc
cmp
mov
jp
cld
test
push
lret
out
push
dec
xor
inc
mov
jp
jge
jbe
add
sub
xor
cli
ret
ja
jnp
daa
inc
dec
icebp
mov
repnz
outsl
cltd
or
iret
adc
in
daa
mov
aam
sub
inc
mov
dec
in
pushf
cmp
adc
add
fwait
xchg
and
mov
jns
dec
jmp
lahf
xor
loope
bound
pushf
jae
ds
insb
imul
push
lret
lock
inc
cmp
sub
xchg
cmp
idiv
rcrb
pusha
xchg
or
mov
subb
dec
ss
data16
adc
sub
xchg
xor
jno
xchg
loop
xor
les
shrl
rorb
les
shr
arpl
or
jmp
repz
ret
pop
mov
out
imulb
mov
mov
lret
out
std
pop
inc
dec
mov
push
fiaddl
mov
aaa
pop
push
mov
push
jl
pop
cmp
sbb
and
incl
xor
push
dec
pushf
adc
dec
push
mov
ja
icebp
adcb
and
stos
sub
out
push
xchg
scas
jne
mov
popf
pop
lods
packsswb
pop
shll
xorb
sbb
jg
xchg
pusha
pop
pop
inc
movsb
mov
cmpsb
cld
xlat
jp
cmp
push
insb
cmc
xor
adc
int
and
pusha
dec
in
ret
call
fsubrl
lret
mov
ds
or
loop
pushl
cmc
pop
and
loope
out
pop
pop
inc
movsl
aam
push
jb
out
cmp
pop
dec
stos
push
cli
in
loope
and
adc
fucomp
in
addr16
add
add
dec
xor
fimuls
inc
es
into
shl
ljmp
mov
push
js
scas
mov
movsb
sub
cmp
fbld
dec
pop
fbld
mov
cld
je
call
or
adc
dec
dec
mov
mov
fistpl
inc
cli
aas
test
and
les
stos
scas
and
xchg
push
pop
inc
imul
cmp
pushf
xchg
lods
call
clc
lock
dec
mov
sarb
jl
outsl
xchg
pop
notb
inc
icebp
and
mov
pushf
mov
jbe
inc
mov
sub
jns
jns
pop
cmpsb
inc
div
cld
test
pushf
jmp
add
shl
testl
in
lcall
call
jmp
fwait
add
lods
push
cmp
mov
popa
add
jecxz
adc
rorl
jl
mov
add
sub
rcll
ret
imul
scas
xor
inc
pop
dec
ret
mov
jne
les
test
and
mov
push
and
aas
mov
lcall
dec
or
in
aad
jl
add
stos
xchg
stos
ljmp
fcomip
scas
mov
mov
adc
xchg
faddl
out
add
aas
sbb
ja
push
test
test
mov
add
sub
jle
cmc
push
dec
mov
and
cmp
icebp
aas
add
popf
pop
mov
cmp
xlat
ds
cmp
ret
or
jp
and
lods
and
mov
outsl
and
shr
in
dec
pusha
push
cmpsb
adc
out
mov
aam
mov
les
insl
cmp
adc
enter
mov
push
cs
lcall
fdiv
es
lret
adc
cmp
pop
adc
cmpsb
xor
scas
outsl
pop
jg
push
idivb
stc
bound
sub
mov
cli
testl
out
int
xchg
push
fldt
lahf
lret
ljmp
fmuls
cmovge
mov
sbb
cltd
jbe
test
mov
sub
fs
pushf
pop
test
push
dec
dec
xchg
xchg
push
and
dec
inc
mov
mov
add
push
and
outsb
outsl
movsl
insb
pop
out
pop
pusha
mov
and
adc
dec
pop
and
xor
jp
pop
mov
mov
enter
push
xlat
jge
jne
test
dec
jmp
lods
shrb
add
mov
xlat
repz
fdivrl
and
fistpll
jo
je
mov
faddp
cmp
xchg
cmc
movsb
push
adc
mov
and
stos
in
in
sahf
mov
ds
les
pop
sbb
repnz
jl
shll
xchg
cmp
xor
fs
in
inc
sub
mov
test
mov
dec
inc
push
out
inc
jb
leave
insb
and
mov
mov
inc
ret
imul
filds
ret
xor
mov
xlat
push
cmpsl
sub
or
or
cmp
stos
and
add
mov
pop
decb
mov
lods
in
mov
sub
sahf
out
add
sub
ss
ja
lret
push
and
addr16
pusha
int3
pmuludq
pop
dec
mov
dec
fs
vxorps
sub
cmpsl
popa
sbbb
add
mov
cmpsb
cs
pop
in
pop
sti
push
sbb
enter
sub
lods
mov
pop
sbb
loop
je
pop
cmp
add
cli
movsl
scas
sbb
cs
into
sbb
test
inc
lods
push
inc
sub
scas
inc
push
fcmovbe
mov
push
or
es
jbe
std
cmp
xor
packssdw
rsm
dec
pop
mov
mov
sub
aam
jl
lret
inc
jbe
popa
aas
push
leave
sbb
pop
mov
jnp
mov
dec
add
dec
mov
imul
jo
inc
xor
leave
jle
cmp
test
adc
mov
clc
std
dec
addr16
scas
in
mov
ret
push
fdivs
repz
xchg
cmp
and
icebp
xor
cmp
and
sub
insb
fs
in
movsl
push
lods
inc
lock
outsb
xchg
lcall
lds
pop
jo
sbb
cld
shlb
jle
inc
daa
shrl
lret
out
enter
dec
gs
push
bnd
nop
stos
mov
jne
push
jmp
adc
sti
popa
lock
fs
pop
lret
cmp
cmp
mov
cli
cmpsl
cmp
cmpsb
dec
stos
cmp
or
fnstcw
pop
mov
sarl
sub
xor
lods
jmp
pop
addr16
lds
sbb
stos
das
cwtl
in
lret
ret
mov
ret
iret
cld
ds
mov
cmpsb
bnd
xchg
jecxz
sbb
loop
push
sub
popf
mov
js
and
pop
or
orb
inc
cmp
jae
add
sbb
or
rol
pop
cmp
mov
mov
ss
std
sub
adc
fcmovnbe
ljmp
insl
ds
outsb
jmp
fisttps
inc
pop
aad
mov
jo
sub
call
sarl
inc
pop
push
repz
inc
shl
rcrl
stos
out
fistpl
es
out
push
sub
or
mov
mov
cmpsl
sub
pop
jns
pushf
push
fldcw
mov
push
and
dec
scas
and
cli
push
adc
xchg
pop
es
insb
mov
xchg
ljmp
ficompl
mov
xchg
test
cmc
aaa
imul
jl
mov
repnz
in
mov
mov
cmp
cmp
out
mov
out
mov
jb
xchg
xchg
dec
bound
adc
or
dec
jnp,pn
in
dec
adc
cmpb
sbb
ss
insb
push
stos
and
mov
sbb
outsb
sti
sbbl
test
mov
hlt
loop
insb
dec
pop
stos
mov
aaa
pop
push
fs
mov
int
xor
inc
ret
fildl
jl
fdivs
cmpb
fwait
data16
scas
jae
push
out
jmp
mov
push
orl
ljmp
sub
jg
push
insl
xchg
movsb
jnp
mov
pop
popa
pop
xchg
push
out
xor
cmpsb
inc
xor
or
pop
outsb
mov
or
sbb
pop
sub
pusha
loopne
xchg
fdivs
out
and
cmp
push
pop
add
ja
aam
test
dec
mov
in
inc
xor
fs
push
xchg
xchg
dec
push
cli
pop
xchg
out
sti
push
push
ja
popf
ja
xor
fs
imul
push
sub
lahf
ret
jno
js
mov
fwait
pop
test
pop
cmpsb
sbb
js
cmc
cld
inc
loope
lret
sbb
mov
sub
ds
enter
cmp
push
jl
repz
leave
icebp
inc
adc
pop
mov
cmp
ret
xchg
leave
cmp
jbe
add
mov
imul
dec
imul
sub
clc
and
push
mov
daa
loopne
mov
mov
inc
push
cmpsl
arpl
jnp
sub
jnp
jg
pop
mov
xchg
aam
push
outsl
add
insl
lahf
mov
ret
cmpsb
dec
cmc
cmp
dec
lahf
fwait
push
mov
lods
push
pop
movsl
outsl
lret
pop
aad
aas
pop
xor
push
ss
outsb
ficoms
lcall
pop
ret
pop
pop
sub
or
bound
in
mov
cs
cmpsl
loopne
sub
ljmp
mov
loopne
jp
iretw
mull
scas
icebp
sti
jo
adc
int
dec
dec
js
xchg
jge
xchg
repnz
cmc
xor
push
cltd
cmpsl
out
cmp
lea
repz
mov
add
cld
hlt
shlb
negb
cmp
aad
lea
add
js
orl
inc
inc
hlt
mov
or
xor
scas
adc
out
call
sbbb
sub
xchg
adc
mov
lret
scas
sub
das
lods
mov
outsl
sub
rcrl
inc
jb
mov
fwait
outsl
mov
jmp
mov
mov
arpl
leave
lret
mov
sub
mov
xadd
insl
push
jno
leave
push
xor
mov
fildl
inc
bound
sbb
sbb
movsb
int3
and
add
cltd
daa
jl
into
fwait
adc
outsb
stos
xor
stos
xor
sbb
jge
push
insl
pop
mov
adc
fdiv
xchg
jecxz
cmpsl
iret
pop
in
std
jns
mov
and
test
mov
mov
inc
dec
mov
pop
push
mov
fcmovnb
fisttps
inc
notl
push
enter
sbb
loope
xor
xor
sub
mov
jnp
cwtl
fldt
cmpsl
push
dec
dec
lret
add
ret
or
dec
sbb
pop
mov
sbb
aam
pop
stc
sahf
sbb
les
mov
adc
and
jo
jnp
adc
fldcw
je
dec
pop
xor
loopne
push
aaa
push
xlat
iret
mov
rolb
imul
scas
lret
imul
mov
das
pushf
sbb
mov
dec
ret
xchg
push
clc
jnp
pop
dec
adc
inc
pushf
xchg
cmp
mov
pop
or
sub
lock
xor
jbe
jne
popf
scas
and
ss
mov
bound
lock
roll
xor
pop
xor
mov
loopne
daa
dec
in
fs
mov
aaa
push
inc
ret
dec
mov
lea
or
out
jno
xchg
xchg
ss
push
cmpsl
movsl
push
jnp
mov
pop
pop
decb
jg
adc
adc
mov
out
inc
lods
add
movsl
add
sbb
loopne
je
cwtl
rcll
and
pusha
pop
push
psubusw
pop
stos
aam
jg
mov
xor
add
stos
cmc
sbb
push
jae
jns
out
fsubrs
aam
add
push
dec
pusha
jge
jae
inc
pop
ret
mov
cmpl
jmp
xchg
xor
xorb
shl
das
fwait
add
xchg
hlt
fs
xchg
push
out
jecxz
adc
enter
xor
daa
mov
and
ljmp
imul
imul
std
lret
lods
out
addr16
loopne
add
call
cmp
aam
pop
cli
mov
mov
shlb
scas
inc
and
dec
test
push
sub
add
fwait
lock
add
or
jns
sti
push
test
add
xor
jg
outsb
push
cmp
mov
jl
pop
push
lcall
cmpsl
shll
mov
mov
cmp
dec
pop
hlt
lret
mov
and
dec
sti
int3
int3
xchg
jmp
mov
jl
xor
cmpsb
add
pop
pop
mov
cmp
bnd
push
jno
inc
subb
adc
into
shlb
ror
xchg
push
xorb
mov
bound
sahf
sbb
lret
orl
mov
sbb
cmpsl
or
sub
push
add
popf
sbb
pop
push
cmpsb
shll
divl
add
ss
clc
repnz
mov
lret
and
inc
jge
stos
sbb
inc
loopne
mov
fs
mov
fsubl
out
mov
mov
in
jg
pop
in
lods
out
js
mov
add
xor
fidivs
ljmp
pusha
or
lcall
add
ja
in
jl
jecxz
jo
lret
es
and
into
mov
jmp
add
jns
pop
dec
xor
mov
lods
or
mov
mov
loop
mov
sub
loop
and
pop
add
add
sub
movsl
ljmp
mov
xchg
stos
fmuls
idivl
xchg
add
xor
sbb
andb
fwait
jae
ljmp
jo
lcall
xor
loop
into
outsl
jbe
pop
out
mov
fwait
xchg
cmc
and
mov
push
sub
or
stc
cmp
mov
mov
sbbl
paddq
and
and
cld
sbb
jg
mov
cmp
add
or
add
subb
jbe
test
shll
repnz
push
jnp
push
shrb
js
pop
mov
sub
mov
stos
imul
arpl
jnp
fsubrl
mov
push
dec
dec
mov
es
rclb
mov
sbb
jge
sub
mov
xor
cs
repz
cmp
push
sbb
push
movd
clc
ds
ja
in
stos
sbb
sub
mov
push
cmc
leave
enter
ja
pop
jl
cmp
js
lock
mov
out
sbb
dec
push
test
rorb
imul
lock
aas
jecxz
cmp
inc
jge
xor
aad
and
aad
popf
xor
cltd
sbb
sub
pop
fsubp
subl
cmp
and
repnz
fsubs
and
mov
sbb
jl
cmp
xor
mov
stos
int3
orl
add
aam
jo
push
es
sub
das
stos
aaa
or
cltd
movntq
idivb
cmp
fnsave
jmp
cmp
sarl
xor
adc
loop
out
movsl
add
pusha
idiv
inc
mov
stos
cmpsb
pop
add
pop
imul
pop
dec
jl
mov
mov
pop
outsl
inc
push
out
in
pop
sahf
inc
aas
orl
jo
or
cmp
push
xor
movsl
fsubrl
adc
jge
xchg
ret
scas
imul
inc
sbb
mov
popf
cmp
push
cltd
mov
repnz
orb
xchg
lahf
hlt
ss
mov
jns
lods
xor
es
push
out
xchg
jne
outsb
adc
mov
sbb
test
aad
mov
inc
xchg
shr
in
mov
or
aas
out
xor
mov
leave
into
rcr
dec
cmpsl
rcrb
or
lods
int3
jno
sbb
in
mov
sub
xor
pusha
or
imul
lock
mov
jmp
inc
aaa
sbb
fidivl
enter
mov
mov
add
add
mov
int
int
movb
jne
lahf
push
test
loop
dec
xor
pop
test
add
data16
std
sub
std
ds
imul
pop
cmp
js
push
adc
mov
jge
jg
lcall
add
or
xor
pop
jae
test
jbe
xchg
inc
insl
scas
movsb
xchg
ficompl
test
sbb
push
ret
mov
mov
iret
ficomps
mov
sub
bswap
add
mov
testl
mov
mov
lret
fsubrl
pop
cli
xchg
cmp
push
adc
mov
adcb
mov
inc
jb
enter
mov
jae
iret
mov
xor
push
flds
lods
xor
ja
mov
inc
mov
jae
dec
or
jb
mov
bound
popf
cmp
mov
subl
xor
bound
nop
sub
cli
rclb
or
fnstenv
pop
adc
or
pusha
sti
pop
jmp
adc
or
add
and
es
add
jno
dec
and
mov
scas
mov
add
sarb
loope
iret
pop
jnp
jbe
mov
mov
int3
adc
sbb
mov
or
clc
daa
mov
pop
notb
in
cmp
int
aam
or
sbb
clc
cmpsl
ret
iret
test
ficomps
jbe
out
sbb
mov
jg
jp
icebp
lods
sub
push
mov
lea
subl
cld
cli
call
cmc
or
adc
test
icebp
mov
cmpsl
dec
out
notl
mov
or
sub
sub
mov
mov
daa
dec
sub
fimuls
push
jmp
jge
and
js
testl
call
push
adc
push
jg
cwtl
add
ret
in
and
int
sub
pop
mov
push
xlat
sub
jle
sub
sbb
aad
fsub
jmp
mov
leave
sub
adc
or
pop
cmp
cmc
stos
sub
mov
sbb
sub
mov
jne
push
insb
cmpsl
cmp
sahf
sub
mov
std
int
sub
inc
inc
dec
rclb
sbb
call
scas
xchg
jne
mov
or
xchg
xchg
cwtl
xchg
repnz
mov
ja
nop
mov
mov
mov
push
aad
std
sahf
sub
pop
push
xor
sbb
mov
jmp
mov
mov
add
push
in
mov
cmp
xlat
and
out
aas
xor
xchg
add
add
mov
lret
lock
cld
mov
push
js
pusha
push
movsb
mov
lret
jl
packssdw
jmp
rolb
int3
xchg
xorl
or
call
out
lods
sbb
shl
int
xchg
outsl
adc
inc
pop
adcb
xchg
inc
and
outsl
sub
add
fwait
mov
pop
aaa
mov
int
idivl
lahf
xor
int
add
add
enter
push
lcall
pop
rcr
arpl
lea
jb
repz
pop
lea
adc
jecxz
js
or
inc
fs
inc
negb
pop
jmp
loopne
aaa
cmp
into
aam
inc
mov
in
js
jl
stos
out
lods
out
das
test
int3
enter
cli
push
in
inc
in
repnz
jb
or
mov
sub
xchg
out
and
fcmovbe
push
add
cmp
dec
xor
scas
aas
inc
insb
insl
outsl
mov
xor
fs
std
sarb
nopl
pop
sbb
inc
adc
in
add
fstps
pop
ret
or
cli
shrl
movsb
mov
les
int
xchg
insb
push
mov
std
or
mov
sbb
loop
mov
sbb
leave
out
push
mov
sbb
test
lret
and
inc
inc
adc
dec
mov
fdivrl
and
ljmp
jle
mov
int3
ss
rorb
jbe
rcl
xor
mov
cvttps2pi
pop
dec
mov
je
cmp
jae
ja
push
shlb
xchg
pop
and
mov
sbb
outsl
popf
dec
outsl
dec
xchg
add
pop
lods
pop
push
outsl
into
push
lret
js
cmp
cmp
mov
push
sbb
lods
inc
sub
or
xorb
pop
out
rcrb
jge
loope
cld
nop
mul
das
fsubr
inc
daa
aas
xchg
sti
inc
inc
popl
nop
je
insl
ret
jle
ret
jns
das
icebp
ss
fisttpll
push
mov
adc
mov
out
fs
jo
push
mov
les
jns
pop
jge
shll
dec
ret
or
and
mov
add
ret
mov
hlt
mov
fsubrs
fstl
adc
imul
ljmp
std
jo
lods
sbb
fnstenv
mov
adc
adc
les
loop
aad
pop
mov
ja
or
pop
loope
push
cmpsl
or
sbb
fs
insl
stos
dec
wbinvd
pop
xchg
and
sarb
sub
movsw
mov
fldenv
hlt
mov
insl
outsl
cli
loop
idivb
and
fmuls
xor
pop
push
movsb
ljmp
pop
jge
adcb
ficompl
xchg
add
xorl
cmp
pop
adc
shll
pop
fbld
cmp
int3
inc
add
jmp
push
push
dec
movsl
adc
orb
xchg
sbb
arpl
arpl
in
test
aad
cmp
sub
jg
add
inc
add
insb
int3
jns
std
dec
inc
add
mov
cltd
jb
or
aad
addr16
jbe
stos
shrb
mov
xor
int3
pushf
and
imul
insl
push
push
leave
out
std
imulb
sbb
enter
movsb
mov
sub
sti
jp
sub
stos
mov
mov
cwtl
sbbl
addr16
mov
lods
mov
or
in
outsl
mov
adc
sub
ds
mov
inc
in
jae
sbb
xchg
jl
mov
cmc
xchg
cmpsb
inc
mov
inc
mov
pop
test
pop
out
les
or
clc
jb
mov
push
xchg
ficoml
xchg
xchg
sbb
push
and
sub
xorb
push
cmp
mov
push
or
cmp
adc
or
shlb
cmp
cmpsb
aas
inc
mov
jp
cmp
stos
ljmp
xor
mov
int3
mov
dec
xchg
cli
dec
mov
cli
mov
aaa
jmp
hlt
push
mov
pop
and
into
mov
test
icebp
loope
jecxz
jle
xchg
adcb
fld
hlt
mov
inc
bound
xor
xchg
or
cmp
xchg
xchg
xchg
es
ss
ret
shlb
rcr
gs
xchg
out
sub
sarl
stc
mov
fdiv
lahf
sbb
and
aaa
push
stc
push
xchg
cwtl
mov
divl
push
fwait
test
enter
jmp
data16
mov
jp
jmp
add
jbe
pop
mov
fidivs
sbb
cmp
dec
mov
mov
imul
sbb
lock
dec
je
testb
fwait
enter
out
inc
mov
cld
jp
cmp
popl
jecxz
jbe
in
sbb
jb
sbb
inc
xchg
fnsave
push
xchg
pop
sub
shr
insl
les
jb
dec
divl
scas
pushf
scas
sub
mov
mov
jecxz
xor
push
sub
inc
into
sbb
popa
mov
in
mov
cmp
sub
dec
push
fstpt
fsubs
pop
xor
push
mov
add
outsb
sbb
inc
ja
int3
jle
dec
jne
pop
dec
xchg
insb
and
ja
aad
adc
pop
adc
stos
adc
stc
enter
sarb
iret
xor
pop
ljmp
and
lcall
bound
shll
mov
xchg
inc
xchg
mov
es
leave
leave
int3
push
mov
cld
pop
popa
sbb
xor
mov
shlb
jmp
and
mov
and
xchg
stos
lcall
lock
cmp
aad
xchg
adc
or
adc
je
or
and
loop
lret
dec
jne
out
xchg
xchg
sbb
ret
fwait
mov
dec
rclb
and
movsl
inc
in
lds
je
mov
xor
pop
jl
mov
adc
aas
xor
mov
mov
xchg
sbb
cmp
sbb
inc
fldl
fs
mov
pop
ja
ror
sub
sbb
pushf
xchg
push
sub
xchg
jo
xorl
mov
jno
jge
rcrl
test
cmp
clc
sub
orb
repz
std
ja
test
cwtl
xor
aaa
mov
adc
add
pop
xchg
mull
cmp
imul
pop
arpl
lods
inc
cmp
pop
orl
dec
jb
in
outsl
and
mov
ret
push
test
adc
dec
mov
jmp
pop
and
jg
cli
sbb
daa
dec
push
in
or
enter
push
push
and
les
xorl
mov
fwait
test
sub
xor
push
mov
stc
xor
mov
cmpsb
fs
movsb
push
mov
aas
mov
pop
jg
es
sti
lret
fstpt
in
aam
pop
rolb
aad
in
in
push
push
push
iret
shlb
fdivl
xchg
in
test
fistps
mov
popa
jle
repnz
repz
xor
or
das
pop
idivb
mov
dec
mov
jp
fwait
pop
lcall
inc
movsb
mov
mov
sub
daa
dec
addr16
js
outsb
rcrb
cld
test
mov
lods
mul
sbb
in
psadbw
notb
xchg
push
or
xorb
subb
lcall
pop
sub
pop
aam
lods
mov
icebp
xchg
inc
stos
rcr
test
and
cmpsb
repnz
xchg
pop
rclb
pop
inc
lret
sbb
lea
test
mov
mov
ss
lahf
cmp
stos
arpl
bound
xor
inc
insb
xchg
stos
insb
inc
xor
add
hlt
mov
adc
scas
daa
mov
mov
adc
dec
rcll
xchg
inc
sub
or
lret
stos
cwtl
xchg
fadds
test
mov
inc
les
xchg
jp
dec
push
xor
orl
inc
ficompl
cmp
mov
push
out
inc
es
or
or
repz
divl
mov
mov
and
ret
insl
lcall
stc
inc
sti
sub
xor
push
clc
notl
jo
les
add
fdivrp
adc
jbe
enter
mov
test
nop
subb
adc
popa
pop
jg
loop
inc
scas
xchg
ret
cltd
out
sub
stos
lahf
push
or
cmp
or
jecxz
fnsave
test
inc
jecxz
xchg
out
add
dec
in
mov
or
xor
xor
aad
xor
imulb
js
in
scas
xor
lret
mov
xor
or
ja
or
xor
repz
subl
dec
pop
and
xor
mov
push
scas
or
in
fdiv
cmp
mov
mov
and
lcall
xchg
push
or
cmpsb
shll
int
xor
cmp
sar
inc
cmp
rcll
cmp
in
fstps
mov
push
mov
mov
sbb
sub
loope
push
xchg
das
push
push
mov
or
cmp
adc
or
mov
adc
outsl
clc
or
out
aas
pop
pop
fisttpl
mov
jge
leave
cmp
rolb
cmp
add
mov
sub
adc
pop
sub
bound
aad
mov
push
inc
xor
mov
enter
fsubs
out
inc
sub
dec
push
rdmsr
je
rclb
movb
or
xchg
xchg
fbld
push
stc
adc
pop
test
lahf
add
add
xor
je
cmp
sarb
or
xchg
in
jbe
xorb
cmpsb
aad
add
fildl
ret
add
rcrl
xor
out
cmpsb
rorl
out
dec
push
adcb
xchg
in
test
adc
sbb
and
pop
jno
fwait
inc
loop
add
dec
stc
xchg
fstps
sbb
outsl
pop
mov
push
out
js
mov
aad
inc
lret
lcall
adc
popf
lods
das
imul
jecxz
movb
push
pop
sbb
lret
sbb
mov
cld
pop
aad
imul
daa
scas
mov
push
adc
out
cmpsl
icebp
fwait
mov
icebp
insl
test
pushf
popa
push
jb
loopne
scas
mov
mov
fcmovb
shrl
mov
and
mov
pop
cmp
std
cld
ljmp
inc
gs
jl
push
mov
mov
xor
and
aad
xchg
shr
clc
cmp
mov
data16
outsl
xchg
out
jmp
jns
fnsave
xchg
outsl
mov
xor
push
mov
dec
ljmp
sub
pusha
cmpsb
mov
lret
adc
cmpsl
addr16
addr16
je
dec
push
popf
mov
das
pop
xor
mov
sub
push
or
lret
loope
adc
out
and
lret
outsb
icebp
loop
movsb
adc
cs
popf
add
and
jl
clc
push
cli
test
inc
out
mov
xor
addr16
test
je
sub
aas
sub
mov
xchg
mov
mov
dec
outsb
jne
mov
std
ds
hlt
pop
lock
mov
fdivl
sub
mov
adc
notb
or
mov
xchg
imul
or
aaa
xchg
push
sbb
out
aam
adc
dec
mov
mov
popl
scas
aas
data16
jb
or
sub
cld
pop
cmp
fdiv
pop
out
addl
ja
xchg
jl
add
call
pop
stos
out
xor
out
testb
mov
or
xor
lea
pop
pop
test
sahf
jl
test
aad
jae
sti
jge
push
clc
clc
adc
dec
inc
add
aas
pop
data16
jl
add
test
decl
pop
out
scas
jle
loop
mov
and
or
call
les
icebp
pop
bound
arpl
cmp
outsb
jae
push
adc
inc
fidivrs
and
cmpsb
loopne
dec
repnz
je
inc
ficompl
jmp
cld
xor
xor
and
stos
sbb
scas
scas
cli
cmc
pop
bound
xor
jge
xor
or
repnz
ffree
out
push
subl
lods
cmpsl
jmp
sub
sub
inc
inc
out
loopne
mov
push
call
jecxz
enter
jbe
cmp
pushf
adc
xchg
les
jae
push
test
bound
clc
mov
jnp
scas
mov
push
pop
push
imul
mov
lds
fwait
and
inc
loopne
ds
jge
inc
cs
jae
subb
mov
popf
push
je
faddl
js
or
sbb
add
pushf
adc
iret
adc
push
ficompl
addr16
sbb
pop
je
inc
add
pop
gs
mov
iret
lahf
inc
lock
loopne
leave
fnsave
shl
jno
scas
aas
movsl
scas
das
adc
ror
fwait
fs
dec
adc
and
stc
cs
js
xchg
dec
xchg
push
insb
xchg
nop
pop
fiaddl
hlt
dec
pop
aaa
sti
mov
cld
mov
sbb
mov
xchg
test
lds
cmp
aam
fdivrl
cmp
push
mov
es
mov
pop
xor
mov
icebp
stos
mov
xor
sub
inc
lcall
sub
sub
addr16
mov
sbb
and
repz
lahf
lock
inc
inc
xchg
xchg
or
push
arpl
pop
mov
mov
dec
and
fwait
shrl
pop
popf
sbb
cmp
lods
icebp
pop
mov
lret
mov
mov
mov
ficomps
pop
xor
mov
std
sbb
push
outsb
pop
mov
enter
cmp
imulb
or
or
pop
cmp
push
andl
push
xchg
int3
andl
mov
and
pushf
sub
imul
lret
es
insl
push
mov
or
mov
shlb
or
sbbb
mov
mov
leave
cli
or
lea
xor
mov
xor
pop
mov
xlat
push
pop
aad
cmpsb
nop
repz
mov
aas
nop
mov
sub
mov
out
mov
insl
jno
fnop
mov
pop
or
sbb
and
xor
xchg
das
inc
lahf
into
xchg
das
dec
and
jge
push
xchg
enter
iret
repnz
dec
mov
out
cmpsl
xchg
das
mov
fiadds
mov
mov
sub
push
sub
xor
dec
pop
inc
dec
loopne
dec
imul
jo
cmc
and
xor
or
mov
cwtl
mov
lods
mov
das
mov
mov
std
push
inc
movsl
sbb
add
imul
cld
fs
mov
ret
or
rep
or
mov
std
jl
cmp
mov
in
and
jecxz
nop
xorb
pop
bound
mov
jg
jb
sub
sub
imul
lods
lret
je
stos
fldt
push
jnp
stos
adc
pop
add
add
mov
mov
xor
jo
sbb
inc
sbb
cltd
add
dec
insb
sbb
out
adcl
sub
movsb
cli
hlt
cltd
fmull
xlat
push
ret
sub
jnp
xchg
mov
jmp
jns
dec
xchg
fwait
jb
cmpsb
ja
or
pop
das
in
clc
jae
pop
mov
mov
imul
push
fildll
jp
push
bound
pop
and
dec
mov
loop
jo
mov
sbb
jg
in
sti
mov
icebp
push
push
std
xchg
or
insb
adc
mov
loopne
push
dec
push
popf
mov
xlat
xor
xchg
dec
pop
sbb
pop
mov
rolb
add
in
sub
movsl
leave
insl
or
dec
add
fwait
or
inc
mov
xchg
push
and
sub
mov
inc
loop
jno
xor
in
lods
in
mov
imul
scas
sbb
add
out
loop
ja
shl
cmp
les
sahf
lcall
shlb
orl
mov
adc
std
inc
pop
jno
xchg
cmp
out
sub
adc
sub
xchg
addr16
jbe
das
mov
mov
or
movsb
adc
mov
mov
mov
push
sbb
repz
lret
xor
mov
jae
xor
xchg
testl
fiaddl
mov
ljmp
push
push
popa
mov
repnz
fdivl
adc
ljmp
decb
movsb
fnsave
lods
lods
mov
pop
cmpsb
paddusb
mov
outsb
adc
aaa
sub
movsb
lock
int3
pop
push
adc
jno
movsl
movsl
test
stos
cli
cmp
arpl
in
add
push
data16
xchg
addr16
test
testl
adc
and
lea
jg
out
add
and
cmc
aam
jg
dec
shlb
xor
insl
mov
cmp
xchg
mov
adc
sbb
dec
add
test
push
fmul
mov
and
pop
in
jp
mov
jle
jmp
sbb
push
xchg
nop
insl
xor
shrd
aaa
dec
sbb
or
fs
mov
lock
pop
adc
dec
jle
add
dec
mov
xchg
jns
dec
shlb
xchg
cltd
inc
aas
sbb
cmp
pop
mov
ret
ss
add
ds
and
fistpll
mov
flds
or
call
sbb
cwtl
jmp
paddsb
inc
xlat
xchg
push
jb
xor
mov
lods
addr16
lret
jle
cltd
repz
or
sti
arpl
mov
xchg
and
push
mov
enter
fnstsw
mov
cmp
pop
ret
les
push
frstor
sub
xchg
mov
jns
push
stos
scas
pop
and
jge
enter
add
xor
cmp
shlb
in
cmp
mov
js
jge
adc
data16
fistl
mov
aas
test
repz
and
ret
out
sarb
pop
pop
ljmp
cmp
addr16
in
out
add
not
outsl
stos
or
inc
push
inc
cmc
pop
jnp
fiadds
jl
testb
cmpl
push
cmp
xor
enter
dec
ror
sbb
mov
or
mov
jnp
push
jns
cmp
jno
outsb
mov
sti
inc
xlat
jecxz
xor
imul
mov
jmp
and
mov
stc
sbb
sarl
jmp
pushf
cmp
rcr
sahf
es
push
xchg
lods
pop
and
mov
jmp
jnp
mull
mov
pop
pop
jmp
or
aaa
sub
icebp
nop
push
push
push
jbe,pt
jmp
hlt
mov
fsub
mov
mov
ds
mov
jne
add
in
cli
out
push
pop
jle
sbb
aad
inc
dec
xor
out
adc
push
fwait
rclb
inc
popl
rep
jecxz
xor
int3
xchg
mov
xor
das
daa
jge
int
flds
mov
subb
rcl
push
xchg
rcll
test
out
cld
ss
mov
pop
mov
int3
mov
push
push
pop
dec
jge
mov
inc
xlat
icebp
sbb
jl
das
iret
and
in
addl
push
push
movsb
call
lock
lods
pop
insl
mov
insl
les
sbb
dec
test
movsb
rcl
mov
sbb
ljmp
pop
ljmp
dec
xor
xor
sarb
lea
and
ljmp
out
ljmp
fstpt
or
mov
or
pop
icebp
movsb
repnz
aas
mov
jl
popl
jb
xor
dec
jae
lock
mov
push
push
inc
push
loope
pop
rol
push
fs
adcb
inc
cmc
xchg
icebp
dec
push
sbb
xor
jecxz
jp
sar
add
lods
fists
test
xchg
add
mov
leave
push
cmc
cld
int3
hlt
popf
or
lret
cli
lret
sub
lods
pop
iret
add
or
add
sbb
pop
add
add
push
cmp
cmp
pop
sub
cmpsb
out
lods
jno
pop
pop
arpl
incl
add
cli
js
adc
pop
xor
or
push
out
jae
das
stos
cwtl
lods
fstpt
ljmp
or
lods
and
leave
dec
repz
xchg
cmp
movsl
jecxz
movsb
push
xor
lock
and
xor
sbb
das
or
ss
fdivs
aas
lcall
inc
repz
fdivrp
repz
jns
and
int3
cmp
cli
es
add
movsb
ret
out
mov
adc
inc
mov
lods
cwtl
push
jo
ss
mov
push
cmp
stos
test
sti
mov
ss
ficomps
movsb
mov
sbb
cltd
jg
pop
xor
shrl
cmp
mov
rcll
aas
ret
inc
repz
jmp
sbbl
xchg
dec
pop
rorl
cmp
cmc
mov
fsubs
xchg
sarb
pusha
xor
cmpsb
imul
je
xor
mov
movsb
jle
in
out
outsl
icebp
loope
push
jnp
pop
lea
cmpsb
dec
cmpsb
adc
stos
cli
nop
cmp
jmp
xlat
aas
mov
mov
or
fwait
xor
divb
push
xchg
pop
adc
es
pop
jle
cmp
jl
sarb
outsl
adc
loope
mov
hlt
adc
and
xchg
lahf
xchg
insb
push
mov
sub
fistps
push
pop
cmc
stos
xor
scas
mov
pop
scas
cmp
sti
xor
xchg
decl
dec
stc
and
pop
dec
push
mov
hlt
jge
jl
idiv
mov
fs
sahf
and
icebp
js
inc
mov
add
scas
push
lods
pop
sub
jmp
orl
test
fsts
into
lret
je
dec
lock
add
mulb
in
ret
ret
imul
sbb
jb
sbb
ds
dec
push
pop
ja
popf
or
cmp
nop
or
or
or
mov
dec
push
lea
dec
sub
mov
int
outsb
loope
mov
jne
lea
rorb
mov
out
push
stc
or
xchg
inc
push
push
adc
dec
outsb
loopne
jecxz
repz
les
mov
lret
push
cli
adc
pop
int3
movsb
aaa
mov
repnz
or
cmp
cwtl
je
adc
push
out
aad
sub
into
insb
pop
sti
jle
and
mov
js
leave
adc
enter
movsb
dec
and
jle
mov
xchg
xchg
inc
stos
push
lods
lock
rcrl
push
jmp
jne
fcompl
jl
ret
xor
cli
add
mov
pop
xor
cmp
xchg
ret
lret
andb
add
enter
adc
sbb
cmp
fdivrl
pop
mov
iret
mov
jno
jno
into
into
cmpsb
loope
aaa
jns
xchg
sub
mov
adc
xor
loope
sbb
cwtl
icebp
jge
jge
cmc
aam
sub
shrl
mov
int3
mov
in
mov
and
es
mov
ds
insl
ret
sbb
ss
pop
adc
push
mov
mov
daa
repnz
jne
push
mov
fidivrs
lcall
xchg
mov
loope
sub
hlt
std
mov
xor
into
sub
lret
cmc
shlb
sbb
mov
xchg
fdivl
lock
scas
lahf
mov
mov
hlt
pop
enter
lods
outsl
mov
lds
sbb
push
fcompl
arpl
add
fwait
xor
gs
outsb
stc
mov
xchg
stc
cmp
xchg
push
ljmp
mov
xchg
out
and
insb
push
inc
mov
pop
pusha
daa
ret
mov
mov
dec
add
sti
stc
scas
sub
and
lcall
jns
add
xchg
in
mov
push
leave
or
add
xchg
cld
sbb
pop
jae
out
or
or
repnz
cwtl
loopne
iret
xchg
test
mov
js
into
stos
xchg
mov
into
push
sbb
xor
arpl
xchg
jb
mov
fdivr
jne
aas
xchg
movsl
push
adc
cmp
adc
xor
lret
pop
pop
inc
sbb
add
or
jns
fdivrs
push
jbe
add
push
cwtl
aas
sub
shll
pop
cmp
mov
push
sti
daa
mov
adc
mov
in
insb
rcr
pop
nop
jno
and
sbb
cltd
xchg
mov
xor
dec
push
lds
jl
mov
shlb
out
cmp
test
andl
daa
out
jbe
sub
dec
jo
mov
pop
pop
dec
cltd
xchg
hlt
mov
push
arpl
push
pop
inc
repnz
or
bound
jne
sarl
xchg
popl
mov
xlat
jo
xchg
mov
pop
lret
pminub
mov
mov
add
xlat
in
jl
or
inc
les
mov
enter
xchg
push
imul
dec
dec
xchg
jb
out
fisubrl
out
sub
mov
imul
adc
pushf
jmp
js,pn
sbb
push
and
out
enter
dec
cmp
daa
mov
jecxz
cli
xchg
pop
pop
js
divl
les
dec
push
bound
pop
mov
int3
mov
inc
sub
sub
lret
lods
pop
sub
in
push
mov
into
adc
lea
add
inc
jno
popf
push
addr16
jp
mov
call
add
xchg
mov
ret
fwait
cmpsb
push
jg
ret
shll
mov
in
push
mov
xor
mov
dec
xchg
movsl
jmp
push
dec
jo
popa
lods
hlt
push
xchg
cwtl
arpl
sbb
js
cmpsb
pop
add
mov
mov
out
lods
cmp
repz
mov
sub
jecxz
pop
popf
sub
jmp
cmp
xor
ret
mov
rolb
sahf
test
sti
pop
jl
rdmsr
xchg
hlt
or
js
fwait
lahf
add
sbbb
loop
test
mov
nop
clc
cld
mov
add
test
fwait
out
scas
stc
or
sbb
test
jg
pop
in
rorl
pop
mov
cmpl
movsl
mov
adc
lods
filds
inc
or
fsubs
scas
sub
rolb
insl
aaa
enter
stc
add
adc
and
stos
pop
xor
cmpb
fisubl
scas
xchg
fldt
ror
adc
lock
sub
mov
sub
sti
pop
dec
push
add
inc
pop
xlat
iret
dec
in
push
nop
daa
imul
fisttpll
add
or
inc
push
mov
inc
dec
mov
mov
ljmp
lahf
test
ficoml
lret
gs
mov
xor
fistps
mov
movsb
push
movsl
jb
loopne
stos
lods
aad
in
add
cmpsl
outsb
in
lock
jmp
pushf
mov
mov
icebp
movsl
cmp
sub
in
rcrl
ret
mov
inc
xlat
shl
pop
aad
or
sbb
lea
jge
mov
push
mov
divl
addr16
rorl
or
cmpsl
pushf
add
and
mov
inc
popl
in
cmpsb
pop
mov
push
scas
int
out
mov
sbb
jecxz
mov
repz
xor
pop
into
dec
xor
mov
out
inc
dec
out
mov
push
dec
lahf
in
ljmp
push
int3
cmp
stos
fwait
mov
adc
ret
push
mov
shlb
mov
jnp
push
les
mov
sbb
sahf
dec
mov
fwait
mov
cmp
adc
daa
mov
adc
lret
jecxz
cli
int3
insb
cs
push
gs
adc
in
fimuls
dec
xchg
pop
pop
enter
rorl
lret
xor
sub
cmpsl
sub
push
push
mov
mov
xchg
lods
inc
enter
ljmp
xchg
mov
shr
ds
pop
fldenv
jns
sbb
daa
mov
ret
and
mov
xchg
lock
or
sbb
cs
push
nop
bound
shl
out
clc
popl
fsts
insl
popf
daa
scas
inc
jb
sbb
mov
jb
loope
mov
mov
inc
cltd
test
mov
and
lds
mov
sbb
sbb
adcl
mov
pushf
push
mov
lret
mov
jmp
inc
movsb
movb
adc
dec
lds
and
jge
inc
jge
lret
mov
enter
pop
iret
iret
dec
ljmp
push
jb
rcrl
pop
sub
dec
stc
ja
imul
cmp
and
xchg
int
bound
push
sub
push
push
push
jl
fwait
ret
test
or
sbb
inc
mov
sbb
mov
stos
dec
mov
hlt
scas
push
sub
insl
movsl
imul
sbb
mov
jae
dec
mov
je
xor
xor
adc
test
add
ss
es
and
xlat
add
add
sub
cld
js
ficomps
pop
insb
dec
sarl
je
xchg
lahf
sarl
push
xor
aaa
xor
les
mov
cmp
mov
cmc
sub
adcl
add
insb
dec
cmp
xchg
pop
mov
cmp
mov
ljmp
cmp
and
fisubs
mov
in
push
stc
in
push
loop
popa
popl
or
and
adc
mov
js
frstor
stos
lods
add
adc
test
and
loope
or
and
outsl
push
lahf
leave
int
fistps
dec
mov
add
cmp
xor
test
into
push
xchg
jp
and
loop
push
add
jnp
fs
sub
in
sbbb
test
mov
pop
movsb
jae
inc
mov
push
pop
arpl
pop
xchg
or
lahf
fidivs
insb
int
test
scas
test
mov
hlt
iret
fucom
les
outsl
dec
dec
cmpsl
gs
mov
add
test
enter
movhps
popf
jl
cld
cwtl
jo
push
clts
xchg
inc
hlt
xchg
mov
sbb
cmpsl
sbb
js
movsb
rclb
add
int
pop
shlb
outsl
push
hlt
or
cwtl
test
push
cld
movsl
push
dec
jl
out
sub
push
sbb
mov
ret
sti
outsb
xor
jo
add
mov
lea
lcall
pop
jnp
push
push
dec
adc
mov
pop
xorl
push
mov
push
add
mov
add
cmc
daa
in
outsb
jnp
push
scas
shl
cld
pop
jmp
jl
pop
loop
inc
pop
push
daa
mov
shll
xlat
fadds
das
mov
dec
call
lea
or
xor
xlat
mov
pop
mov
in
mov
sbb
push
or
cmp
jnp
loope
jp
cmc
mov
mov
stos
mov
xchg
in
iret
stos
dec
mov
sub
outsl
xchg
ret
clc
jmp
outsl
adc
dec
push
pop
daa
loope
adc
mov
fisubl
fists
outsb
es
mov
cmc
hlt
pusha
adc
lret
imul
xchg
mov
arpl
cmpsb
popa
push
out
adc
xchg
inc
jle
jl
mulb
mov
nop
ja
push
imul
pushf
push
adc
mov
lret
pop
rcll
dec
dec
lods
push
adc
cltd
add
add
rclb
mov
push
shrl
xchg
sub
popf
sbb
fcomi
sti
sub
jae
jge
mov
dec
scas
mov
sbb
popa
jno
xchg
inc
push
roll
sahf
dec
addr16
aad
ljmpw
push
fisubrs
in
stos
pop
bound
jle
sub
push
mov
sbb
fnstsw
sub
xchg
rcl
xchg
or
cmc
negl
arpl
sbb
xor
scas
dec
leave
popf
mov
popa
xchg
sub
std
addb
dec
repnz
cmp
add
adc
xor
outsb
insb
push
imul
cmpl
out
sbb
mov
loopne
sti
pop
fwait
out
aas
fs
jnp
push
xlat
pop
enter
rorl
cmp
scas
leave
sbb
in
inc
mull
mov
mov
lret
sub
mov
enter
jne
in
loope
sti
mov
loop
dec
mov
dec
into
mov
addl
ret
stos
lcall
xchg
mov
xchg
out
jl
mov
lret
and
mov
mov
gs
in
das
lock
filds
push
sbb
inc
mov
aad
icebp
ret
fs
jg
sub
bound
and
jp
loop
sarb
adc
add
sbb
aad
sub
mov
xchg
push
popa
lock
inc
dec
mov
mov
jae
jl
mov
dec
lahf
jbe
jecxz
arpl
jne
jge
or
push
xor
sarb
insl
jns
adc
xchg
add
cmc
jno
add
mov
mov
xchg
cmp
in
leave
nop
pop
aad
lods
pop
pop
mov
mov
dec
leave
jg
sub
ret
and
inc
fistps
out
mov
in
push
dec
sbb
lods
lret
out
push
stos
xchg
mov
lods
divb
sbb
outsl
mov
cmp
xor
jo
cld
inc
and
arpl
out
lret
in
outsb
mov
inc
out
pop
pop
or
mov
popf
cmp
out
inc
dec
cmpsb
divb
push
add
loope
adc
adc
cltd
ret
leave
mov
mov
lock
jp
xor
push
test
mov
add
cwtl
sub
xchg
xrelease
jae
test
mov
mov
loopne
jp
imul
dec
and
es
test
pushf
insb
pop
push
pop
js
out
add
dec
xlat
jp
sub
lea
adc
dec
movsb
mov
out
push
push
or
push
mov
leave
dec
ds
xor
test
aas
jae
ret
inc
jmp
add
in
icebp
mov
mov
inc
dec
call
stos
xchg
xorl
mov
lods
push
rclb
cmp
leave
std
stc
jg
sti
loope
mov
jbe
ficoms
es
and
dec
test
or
gs
inc
repz
cmp
repnz
jb
lret
call
addb
call
cwtl
mov
jp
mov
or
sti
adc
loopne
aas
cmpsl
add
sbbb
rcll
sti
lret
and
fisubl
mov
jecxz
clc
outsb
insb
gs
ja
out
cmp
and
in
jge
movsl
es
imul
popa
sub
and
cli
cmp
push
xchg
fmul
jns
jno
in
lahf
std
xor
or
cmc
and
pop
and
mov
push
dec
jge
xor
inc
sbbb
cmc
ja
xchg
pop
sub
jl
pop
sbb
aaa
push
icebp
add
ss
insl
sahf
sub
test
push
cltd
sub
cld
loopne
inc
or
imul
sbb
add
sub
icebp
lock
dec
insl
inc
enter
dec
inc
fcompl
jno
clc
jmp
mov
int3
add
xchg
push
je
dec
loop
bound
gs
mov
adc
pop
repnz
movsb
adc
xor
lock
jmp
lea
daa
adc
mov
dec
and
pop
xchg
jecxz
mov
loopne
adc
jae
ror
xchg
and
adc
sbb
test
jno
lock
in
subl
xor
sbb
fwait
test
adc
push
push
pop
cmc
stos
fnstsw
and
andb
daa
es
mov
pop
mov
fs
push
movsb
mov
clc
sub
mov
xchg
mov
shrl
jmp
mov
mov
mov
test
or
jl
push
sub
push
aad
fcmove
fsub
insb
xlat
into
sbb
or
nop
ret
sbb
aaa
adc
scas
sti
push
repz
push
push
add
js
js
push
and
or
mov
jmp
mov
loopne
enter
sbb
sub
jp
cmc
push
rclb
pop
in
insl
or
sub
out
das
daa
fisubl
xchg
stos
mov
and
xor
jg
stos
sbb
push
pop
testl
mulb
pusha
sbb
dec
cmc
fs
mov
shll
push
adc
cmp
dec
push
ds
test
add
add
cli
mov
mov
jg
pushf
aam
xchg
or
pusha
fbld
xor
inc
add
lea
outsl
scas
mov
jne
pop
loop
adcb
push
jnp
adc
add
fs
cmpsb
xorl
outsl
sti
push
out
pop
xchg
into
rcll
mov
mov
jg
mov
mov
push
or
leave
es
pusha
insb
jge
jge
pop
xchg
mov
dec
xor
push
xorb
add
pop
inc
dec
dec
repnz
ret
cmp
mov
sahf
aas
cmp
or
lods
xlat
pop
aad
fildll
push
add
das
push
gs
fisubl
lods
fsubr
mov
ss
jns
enter
dec
jl
movsl
cwtl
loope
xchg
push
in
inc
dec
ljmp
jg
or
cltd
cwtl
aaa
mov
jo
mov
cmp
jns
adc
in
mov
inc
cwtl
xchg
test
sbb
xor
mov
mov
push
cltd
insb
movsl
add
std
xor
mov
mov
mov
cmp
cltd
cmpsl
add
mov
daa
test
fnsave
push
outsl
jns
sub
sub
pop
shll
mov
aas
mov
bound
mov
jl
sti
xchg
cmp
add
movsb
outsl
and
sub
push
sbb
test
loopne
insb
les
popa
cmc
or
out
mov
test
mov
imul
pop
sti
mov
js
dec
cs
lret
out
xorb
pop
push
lock
pop
xchg
push
dec
xchg
cmp
or
dec
add
adc
outsb
mov
adc
push
mov
or
sub
mov
mov
mov
dec
ret
jle
int3
lret
nop
cmc
leave
call
jp
loope
push
pop
adc
jno
push
mov
clc
fidivl
pop
inc
lods
idivb
stc
pop
test
lds
ret
mov
daa
jmp
xor
mov
icebp
outsb
add
pushw
mov
cmp
mov
push
push
jbe
nop
clc
jle
cmp
mov
xchg
call
cmpsb
ljmp
push
cmp
dec
mov
das
and
aad
mov
movsb
pusha
outsl
mov
jb
dec
in
int3
fidivrs
xchg
lret
fildll
fidivl
pop
or
fwait
cli
cmp
sti
jns
inc
mov
and
xchg
sarb
push
sub
mov
jmp
or
jp
in
push
popf
arpl
pushf
in
mov
scas
mov
adc
push
insl
lcall
dec
mov
inc
in
dec
dec
fcompl
clc
pushf
arpl
notb
jmp
add
add
decb
push
pusha
push
movsb
or
js
add
jl
mov
gs
sub
jge,pt
jbe
mov
sbb
xchg
pop
lea
push
sbb
fmuls
jnp
sahf
sub
pop
fisttpll
ljmp
test
mov
testb
call
bound
movsl
inc
icebp
sbb
add
jmp
mov
addl
pop
fadds
push
fwait
jne
mov
pop
push
xor
xor
mov
dec
lret
add
cmp
popa
xor
mov
inc
jle
xchg
jb
sub
add
les
pop
sub
mov
mov
aam
lea
addb
fwait
mov
xlat
xchg
xchg
adc
mov
xorb
fwait
or
cld
mov
adc
movsb
adc
inc
mov
pop
and
fistpl
rol
adc
pop
sub
leave
imul
adc
xchg
aaa
cmp
lds
hlt
ror
mov
cmp
nop
test
hlt
pop
mov
test
pop
push
cmp
pop
or
out
std
xchg
mov
and
aad
jo
loop
cltd
pop
clc
enter
mov
adcl
lods
stc
dec
adc
cmp
jmp
fadds
or
and
popa
jno
adc
mov
add
iret
cmp
jb
jmp
out
inc
dec
add
mov
mov
push
jl
sbb
lcall
stos
pop
rorl
or
shlb
dec
iret
jecxz
xchg
hlt
xchg
insl
mov
gs
push
arpl
adc
mov
or
int3
xchg
aaa
dec
ds
adc
pop
xchg
pop
mov
imul
sarb
xchg
loope
insb
imul
dec
adcb
loope
pop
or
push
outsb
jl
in
js
popa
xor
push
push
test
jns
xor
in
aaa
ljmp
in
in
add
call
push
dec
movsl
hlt
xchg
ja
xchg
and
sub
out
aam
and
imul
pop
dec
add
xor
sbb
push
test
mov
iret
xor
movsl
in
pusha
rol
mov
mov
push
mov
sbb
push
jp
aaa
inc
jbe
or
lea
les
adc
jge
loop
addr16
movsl
inc
jne
mov
lock
aad
jns
xor
hlt
xchg
dec
sub
dec
out
dec
pop
in
pop
rclb
fldl
pusha
pop
call
fwait
or
or
adc
enter
rolb
xor
test
mov
cmc
lcall
xor
mov
push
hlt
sub
dec
or
sbb
insb
mov
pop
pop
in
mov
inc
hlt
lret
lea
or
in
pusha
test
sbb
xchg
lret
xchg
bound
jmp
fidivrs
xchg
or
popa
push
jecxz
sbb
sub
negb
in
out
fsubrl
add
mov
pop
out
pop
sub
or
faddl
stc
or
enter
mov
sub
cs
push
cwtl
and
cmp
xchg
daa
and
or
xor
mov
adc
jle
int
fcmovbe
mov
cld
push
jge
dec
push
pop
negb
sub
add
ja
faddl
ja
rclb
out
daa
push
rol
pop
pop
int
inc
into
shlb
into
call
sti
aaa
movsw
pop
loope
stc
and
jnp
mov
ficompl
push
enter
add
xor
or
push
loop
and
pop
cwtl
or
popa
xchg
aam
data16
movsb
push
xor
cmp
push
lods
mov
lret
mov
gs
jns
in
icebp
sub
and
cmp
ficomps
faddl
rorl
or
aam
push
xchg
push
movb
popf
gs
fcoml
jle
dec
loop
mov
daa
shll
xchg
sub
xorl
sub
push
mov
adc
dec
scas
orl
popf
cmp
xorb
push
jl
xchg
fmull
mov
inc
mov
push
lret
sti
mov
lods
jl
stos
jle
mov
pushf
daa
outsl
xlat
push
stc
pop
mov
mov
sub
pop
push
stos
ret
lds
loopne
insb
jb
adc
scas
jecxz
push
jecxz
mov
rolb
jle
clc
dec
mov
hlt
lcall
jmp
lahf
enter
out
jle
js
xor
jg
adc
sub
sbb
and
sub
xchg
mov
clc
or
dec
or
lock
sub
or
jp
test
daa
xchg
sbbb
daa
xor
imul
cmpsl
clc
call
mov
mov
dec
dec
adc
jle
into
adc
fs
ljmp
sbb
cmpsb
outsb
rcrb
ja
jmp
cld
xchg
jbe
push
adc
adc
out
ds
in
mov
mov
sub
test
dec
aad
dec
iret
out
or
dec
push
jnp
les
lret
push
das
push
in
inc
lret
rcrb
ret
cmp
inc
xchg
mov
cmpsl
add
out
and
or
inc
sbb
adc
das
and
loop
ficoml
and
shlb
add
or
xor
pop
pop
dec
adc
cmp
mov
hlt
fsubrl
add
call
sub
add
lods
push
arpl
fwait
rolb
mov
pop
icebp
in
pop
mov
pushw
jnp
pop
jmp
xchg
scas
xchg
sbb
and
test
cwtl
xchg
mov
and
in
mov
in
adc
lcall
xchg
xchg
fcmovbe
sub
aam
adc
call
dec
and
repz
filds
adc
jp
mov
xchg
outsb
mov
jb
jbe
bound
sub
sbb
subl
mulb
out
out
sbb
pushl
and
out
es
xor
sub
mov
push
mov
inc
jb
test
stc
adc
xor
xchg
clc
mov
in
push
lods
pop
xor
loop
mov
mov
adc
sbb
out
xlat
movntps
sub
std
out
and
adcb
push
jae
sub
adc
mov
sbb
adc
xor
and
pop
mov
cltd
jl
call
aaa
add
jge
add
jecxz
lods
cli
cwtl
jmp
push
mov
frstor
sub
mov
add
loope
xor
shlb
push
and
leave
or
and
mov
cmpsb
push
jnp
push
jae
adc
rcr
adc
sbb
outsl
xchg
js
test
and
fbld
imul
popa
test
mov
bound
mov
xlat
call
subb
rcr
sbb
xchg
iret
adc
mov
cmpsl
sbb
or
cltd
xor
xchg
mov
or
inc
mov
pushf
jae
mov
les
stc
bound
cmp
stc
rcrl
add
pop
outsb
xchg
scas
inc
pop
adc
mov
push
inc
xchg
dec
jae
or
mov
mov
mov
insl
or
dec
outsb
add
arpl
cltd
insb
stc
sub
or
xor
and
test
outsl
in
pop
push
cld
push
stos
dec
jne
adc
push
dec
push
adc
mov
addb
shrb
scas
inc
lea
push
inc
rcr
jmp
or
xchg
lret
mov
push
daa
das
cmp
push
mov
mov
mov
inc
mov
roll
push
clc
pop
mov
xlat
enter
repnz
out
clc
xchg
clc
add
cli
mov
imul
dec
xchg
jl
gs
adc
insl
jle
dec
imul
rclb
adc
cmp
cmp
mov
andb
popf
enter
lds
sbb
xchg
mov
arpl
xor
cmp
stos
repnz
aad
aas
mov
in
pushf
push
loopne
shl
xchg
inc
pop
sbb
decb
mov
aaa
stos
cli
dec
dec
inc
dec
mov
popf
out
enter
mov
jecxz
jb
ret
aas
jl
stos
imulb
jbe
or
fiaddl
mov
mov
dec
pop
das
iret
pop
in
daa
jmp
xor
std
jl
xchg
or
sbb
inc
in
lea
lods
cmp
ljmp
stos
mov
pop
add
push
stc
adc
fs
mov
in
js
inc
inc
dec
jmp
inc
and
or
js
and
dec
das
jl
fiadds
mov
imul
pop
push
mov
ret
call
aaa
mov
mov
not
push
hlt
dec
mov
xchg
cltd
lahf
dec
push
mov
cmpb
fmuls
outsb
rorb
adc
cmp
out
dec
adc
int3
inc
mov
xor
cli
jnp
xchg
mov
mov
paddsb
clc
aam
sbb
stos
sub
fdivrl
sbb
not
add
out
xchg
nop
mov
inc
xor
dec
stc
out
jecxz
gs
dec
pop
outsl
xchg
mov
shll
adc
sbbl
xor
or
or
out
dec
fbld
nop
fpatan
hlt
ret
xlat
sbb
xchg
aas
int3
lahf
cli
lahf
mov
outsl
sahf
nop
je
adc
out
and
lods
jne
divl
jae
or
cmc
leave
addr16
mov
jle
mov
xor
mov
cmp
or
sub
cmp
sarl
adc
push
divb
in
insl
enter
push
sub
xor
leave
fsub
pop
jnp
cltd
add
les
adc
cmpsl
mov
add
lcall
jne
cmp
cwtl
ret
cld
cmp
and
push
or
add
pop
sbb
sbb
fldcw
filds
mov
add
lcall
jl
xchg
out
sub
lret
jg
or
jb
sahf
and
push
fidivl
mov
xor
das
xchg
fidivs
pop
cmp
call
inc
in
jbe
lcall
inc
lret
pop
xlat
xlat
inc
xchg
jg
orb
sbb
lds
daa
and
mov
jge
sbb
xor
out
ret
popa
fwait
dec
imul
loope
mov
js
and
dec
stc
mov
pop
andb
fnstsw
mov
leave
mov
cmovb
arpl
sub
xor
adc
mov
and
push
inc
fbstp
out
ja
fidivs
xor
push
rcrb
test
push
popa
sbb
cmc
mov
into
add
sub
dec
inc
xor
andb
rcll
dec
xchg
pop
adc
mov
pop
ret
inc
mov
pop
call
inc
add
dec
loopne
in
pop
mov
stos
test
mov
push
mov
inc
or
cmp
test
stos
rcr
cmc
ja,pn
jno
mov
in
jp
or
jbe
aam
inc
xchg
add
shlb
mov
movsl
cmp
sub
rol
inc
cwtl
mov
mov
add
lods
pop
cmc
fs
mov
adc
idivl
test
adc
pop
mov
mov
nop
iret
test
or
dec
rcr
xchg
pop
mov
mov
arpl
cmpsl
lcall
push
js
or
pop
jae
das
jne
xor
in
cld
mov
and
cltd
inc
mov
shll
inc
dec
loop
adc
inc
out
repz
jmp
mov
out
mov
dec
sub
push
divl
xor
mov
sahf
jbe
je
pop
push
xchg
test
sbb
push
jae
jecxz
cmp
repz
mov
add
jne
loop
pop
push
or
ret
xor
data16
mov
test
and
in
add
sbb
mov
mov
inc
fcompl
xor
cli
mov
sub
sarl
movsb
out
adc
lar
testb
fsubs
inc
fistpl
sbb
pusha
add
pop
or
dec
pop
out
and
mov
fsubl
fs
cld
cld
push
in
pushf
daa
fbld
pop
in
xor
jnp
shll
aas
repnz
fcompl
and
xchg
test
fwait
push
xchg
xor
lahf
je
push
push
inc
pop
in
adc
stos
hlt
out
aas
inc
xchg
cli
movups
mov
xor
add
iret
stos
lea
out
les
insl
stc
push
fs
jnp
std
cmp
or
adc
or
loopne
fimull
pop
sbb
call
and
sub
push
out
and
xor
gs
mov
js
push
fwait
insb
add
test
inc
mov
aaa
orl
push
push
out
mov
jae
pop
ja
test
sub
std
mov
fwait
add
sub
int
std
add
sub
or
cmc
dec
in
rolb
add
sub
fmulp
dec
repz
je
sbb
jmp
mov
cmpsb
mov
and
mov
add
xlat
or
fidivrs
imul
push
adc
and
ss
cmp
ss
or
or
ret
in
push
pop
xchg
nop
inc
xchg
mov
pop
cmp
sbb
sbb
adc
std
xorb
mov
pusha
mov
test
pop
xlat
stos
mov
cmp
mov
dec
hlt
enter
mov
push
fcomi
inc
pop
mov
push
shrl
imul
and
out
sub
fsubp
xchg
mov
incb
shrl
imul
mov
pop
and
fxch
pop
xor
pop
orb
sub
xor
jge
sub
mov
jmp
fcompl
lret
cmp
inc
cmp
jg
pop
lret
jo
mov
jge
or
xchg
inc
inc
xchg
popf
push
add
or
sbb
sub
sbb
test
pop
dec
out
mul
xchg
and
stos
mov
rcr
dec
mov
ss
leave
mulb
lret
mov
xchg
ret
xor
insb
cmpsl
mov
sar
int3
pop
aad
das
loop
mov
push
sub
arpl
jo
rol
xchg
leave
mov
xor
out
dec
mov
mul
inc
push
lea
loop
push
cli
xchg
or
cli
ret
ja
fs
jbe
jmp
lea
mov
movsb
fwait
scas
push
rorl
xchg
dec
cld
mov
in
aad
out
mov
imul
or
aaa
sahf
test
cmp
jmp
pop
std
mov
fimull
push
pusha
mov
mov
dec
pop
outsb
das
cmp
roll
add
popa
sbb
in
ficoml
fs
xor
outsl
rolb
xchg
arpl
das
cmp
outsl
dec
jns
pushf
icebp
sub
mov
lahf
rolb
mov
int3
push
mov
out
push
clc
xchg
les
inc
jno
adc
loop
mov
inc
cmp
mov
outsb
or
dec
pop
cs
sbb
leave
or
popa
test
lock
test
in
lret
xchg
pop
or
pop
jle
mov
popl
xor
mov
mov
or
push
push
adc
add
cmp
xor
dec
test
std
sbb
lcall
bswap
scas
arpl
cmpsl
mov
test
fst
addr16
xchg
lods
jecxz
lods
rcll
add
shl
and
rol
aad
movsl
int
movsl
xorb
xor
sbb
or
jle
cmc
cmp
inc
and
push
mov
sub
sub
push
adc
xchg
les
or
or
lods
repnz
cs
bound
lret
out
jno
aad
inc
gs
lods
xor
mov
aaa
sbb
stos
in
sbb
xchg
imul
xor
ja
xor
and
xor
dec
push
cmp
jno
jp
outsb
nop
lods
and
mov
aam
sub
pop
inc
loopne
imul
scas
daa
repnz
adc
dec
add
int
dec
or
and
ret
lods
sbb
fxch
push
js
mov
dec
mov
mov
into
data16
mov
push
add
out
cmp
sub
jns
and
dec
mov
xchg
adc
add
in
jo
pusha
dec
aaa
add
insb
leave
sbb
mov
mov
push
mov
fcmovne
fcomps
ljmp
adc
lds
nop
pop
outsl
loopne
je
fistl
dec
dec
mov
aad
rcrb
out
pop
sbb
outsb
shrl
pop
xor
mulb
sbb
iret
pusha
mov
dec
mov
hlt
or
clc
iret
insb
inc
jecxz
clc
js
addl
pop
push
dec
daa
lret
outsl
fadds
sbb
fcmovb
xor
insl
mov
sub
ljmp
pop
faddp
lahf
out
aad
jmp
cmp
fcompl
lret
fcmovne
adc
dec
scas
jne
clc
cwtl
push
sbb
imul
mov
xor
arpl
jle
inc
mov
sbb
pop
stc
mov
iret
dec
flds
mov
jne
push
mov
sti
dec
insl
inc
add
out
sub
cmp
ljmp
call
pushf
inc
pop
mov
mov
jbe
sbb
adc
in
lock
mov
into
aas
dec
pop
xchg
jnp
and
sub
pop
pop
idivl
imul
xorl
repz
cwtl
adc
stos
adc
out
arpl
iret
push
cmovl
inc
test
adc
imul
jo
xchg
das
pusha
xchg
adc
sub
adcb
scas
pop
icebp
fs
sub
xor
mov
cmpsl
pop
stos
icebp
mov
pusha
cld
xchg
jle
mov
shlb
xchg
or
fdivrs
xchg
mov
popf
out
loopne
lods
fwait
inc
jns
xchg
addb
addb
lods
sub
call
xchg
aaa
mov
dec
enter
faddp
out
stos
mov
imul
pop
test
push
lock
cmc
xchg
test
mov
scas
ljmp
inc
or
pop
into
imul
sbb
scas
fnop
sbb
repz
daa
cmp
les
jno
fbstp
gs
push
inc
ret
sub
mov
ret
test
gs
gs
dec
push
xchg
and
idivl
mov
fimuls
cmp
cmpsb
ljmp
dec
mov
in
fs
lcall
add
adc
stos
dec
fistpll
mov
daa
outsb
inc
and
push
push
cmc
add
mov
mov
in
stos
fistl
push
and
xlat
xchg
adc
rcl
cmp
inc
and
mov
or
pop
ljmp
lods
jnp
mov
mov
sbb
sbb
lret
sub
loope
xor
xor
pop
hlt
ds
or
mov
adc
jle
cmp
mov
jl
inc
sahf
sbb
mov
jl
rcr
decb
mov
stc
stos
xor
dec
push
add
popf
cwtl
inc
dec
cmc
mov
rclb
cmp
icebp
push
out
dec
in
adc
sub
pop
jo
pop
fwait
push
or
js
idivl
or
and
xor
add
test
sub
pop
subl
pop
fmul
out
mov
lods
jbe,pn
rcl
test
jg
cmp
push
ffreep
mov
fwait
sub
xbegin
pop
pusha
dec
push
xor
dec
mull
push
sahf
sub
insb
rcrb
iret
sbb
fdivl
arpl
cmp
lea
in
inc
mov
pop
stos
pop
out
and
ss
pop
fsubr
ss
in
adc
pop
les
out
or
lea
pusha
leave
mov
shl
in
add
sbb
push
mov
arpl
xor
jno
push
sarb
icebp
fsubs
jne
into
enter
aad
jecxz
sti
cmp
ljmp
push
mov
inc
pop
adc
imul
jbe
sub
outsl
mov
lock
push
pop
cld
das
icebp
ret
jmp
mov
cmp
dec
sahf
jae
ss
add
mov
mov
inc
push
lret
xor
jl
add
insl
xor
and
out
jle
hlt
mov
adc
adc
mov
aas
cld
rol
aaa
in
inc
add
inc
cmc
and
js
pop
fucom
in
add
icebp
sbb
jnp
adc
loope
xchg
mov
mov
shl
lea
daa
addr16
mov
sbb
mov
sub
cmp
lods
xchg
mov
mov
and
loopne
nop
jno
outsl
sub
ficoms
jnp
dec
daa
insb
fiadds
insb
fisttpl
cmpb
sub
popf
jae
add
shlb
or
add
xchg
and
sbb
roll
addl
cmp
inc
stos
test
cli
jecxz
push
aam
adc
mov
pop
jne
inc
nop
shlb
pop
rorl
push
repz
mov
ret
ja
adc
xor
lds
jnp
add
lods
jmp
xor
enter
das
inc
push
shrd
push
loopne
inc
mov
or
pop
out
sub
or
add
mov
mov
or
rorb
stc
stos
mov
jb
ljmp
sar
in
push
ljmp
popf
ljmp
lret
test
fstps
push
pop
add
inc
dec
mov
sub
aaa
aam
ret
movsb
cmp
xor
mov
fcoml
add
xchg
push
inc
cmp
in
mov
adc
pop
addr16
sbb
enter
jae
je
push
adc
push
push
push
arpl
outsl
pop
jnp
stos
ret
cli
cwtl
sub
mov
adc
aaa
imul
daa
xlat
inc
cmp
mov
xchg
lahf
mov
xchg
iret
sbb
lret
mov
adc
cs
sub
inc
jle
pop
xchg
out
daa
push
inc
fwait
in
insl
int3
adc
add
lds
xor
cwtl
sbbl
out
jl
into
pushf
or
xlat
xchg
sahf
repnz
daa
mov
and
sub
jb
loopne
pop
jb
negb
imul
rorl
sub
icebp
mov
popf
cltd
adc
xchg
rol
add
out
jno
inc
scas
fldl
xchg
cmp
bound
test
pop
jmp
pop
aad
sbb
in
lret
je
fadds
and
cltd
pop
add
test
out
mov
jmp
in
aaa
stc
pop
push
cmp
icebp
mov
mov
mov
rcr
repnz
cmp
and
inc
repz
mov
in
add
sub
scas
neg
ja
movsl
xor
mov
dec
rcr
nop
push
imul
repnz
in
dec
pop
and
es
jnp
jge
mov
aam
aas
mov
test
mov
inc
jle
cmp
pop
repnz
cs
subl
in
xor
sbb
jbe
lahf
les
pop
cwtl
push
hlt
cs
out
dec
call
loopne
mov
jg
in
cltd
lret
out
adc
sub
sbb
inc
cwtl
dec
into
ret
dec
jae
push
inc
stos
std
cltd
mov
data16
test
push
cmp
cmp
clc
adc
jae
mov
mov
data16
add
mov
jecxz
in
and
addb
mov
sbb
aaa
xchg
mov
popa
jns
fimull
mov
mov
sbb
test
fs
rolb
add
dec
movsb
jle
mov
mov
aam
mov
push
mov
mov
push
pop
xchg
loope
pop
pop
test
sti
adc
arpl
cmp
cmp
cld
into
cmpsb
xor
push
out
and
leave
fscale
add
adc
jmp
out
test
inc
scas
movsl
out
pop
lret
mov
mov
notl
cld
mov
pushf
lret
xchg
repnz
dec
mov
mov
pop
and
mov
out
or
or
popf
bound
mov
cld
lcall
loopne
or
fwait
jmp
outsb
sbb
jl
add
insb
into
mov
xor
and
dec
ljmp
jl
insl
jge
pop
push
jbe
adcl
iret
fs
dec
je
mov
repnz
arpl
out
sub
sub
xchg
adc
adc
xchg
mov
jle
call
repnz
sbb
mov
cmp
mov
jae
sbb
int3
ljmp
arpl
cltd
jnp
shl
ret
popa
and
shll
xor
add
mov
test
push
idivl
es
adc
cmp
mov
mov
push
ja
dec
rclw
test
mov
mov
push
daa
je
dec
pushf
and
sub
lock
jnp
enter
call
adc
orb
cmp
data16
or
sbb
aas
stc
fstl
pop
mov
loopne
lahf
xchg
shlb
add
or
jmp
testl
xor
lahf
cmp
lods
cmp
pop
test
cwtl
sbb
lret
daa
movsl
and
mov
sbb
dec
mov
hlt
out
nop
mov
jg
ljmp
and
and
rcrl
dec
ret
loop
aad
sub
add
pushl
jl
mov
ljmp
mov
fwait
jl
lea
or
inc
jbe
popf
stc
pop
es
iret
popl
push
out
mov
sbb
pop
arpl
adc
sbb
stc
lock
add
add
mov
fdivr
lret
js
test
push
leave
pop
mov
jge
movl
sub
xchg
mov
xor
rcr
sub
jl
sub
dec
add
lret
das
push
jp
subl
stos
add
stc
sbb
cmpsl
fldl
fdivs
and
or
jnp
and
popf
repz
lods
cmp
pop
inc
cmp
in
fs
add
pusha
xlat
xor
mov
idivb
mov
int
cmpb
repnz
push
les
test
mov
dec
cwtl
or
outsb
pop
mov
push
jmp
jp
sbb
adc
xlat
push
lahf
or
lods
cmp
ret
mov
and
sbb
in
aam
imul
sarl
adc
cltd
xor
add
adc
mov
mov
data16
ljmp
stc
inc
cli
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
push
or
in
jge
pop
hlt
lds
jno
mov
jb
fidivl
xchg
push
pop
inc
lret
mov
cs
jmp
adc
les
das
sar
cld
jnp
mov
test
popa
iret
cs
aam
pop
xchg
fcmovb
push
pusha
sbb
aaa
in
mov
shrl
pop
inc
pop
je
cmpsl
out
push
cmp
jecxz
or
sub
lock
xlat
imul
subb
or
add
mov
test
pop
pop
clc
pop
sub
aaa
out
lret
cwtl
xor
cmp
aam
stos
jmp
into
mov
fnstenv
pop
mov
add
daa
stos
test
int3
fbld
enter
sub
xchg
mov
daa
add
inc
cltd
movsb
xchg
rol
sti
pmulhw
mov
push
leave
mov
jp
lea
cmp
bound
sub
sbb
mov
mov
dec
cmovp
sub
loopne
test
xor
xchg
or
shlb
cwtl
lods
add
aaa
out
popa
jl
clc
js
cmp
sbb
push
mov
cltd
cmp
adc
dec
adc
jp
xchg
jecxz
mov
mov
xor
das
jp
pushf
ss
into
orl
and
fcomps
cmp
in
sbb
fisttpll
aaa
loopne
adcb
sub
data16
xorb
xchg
in
loope
in
xlat
leave
loopne
xchg
mov
xchg
stos
lock
dec
fwait
ja
adc
mov
pushf
adc
out
scas
dec
adc
sbb
mov
outsl
stos
jb
mov
lcall
fs
sahf
mov
xchg
xor
imul
mov
enter
inc
loop
push
sub
add
cmp
push
pop
push
inc
outsb
repnz
inc
insb
dec
xchg
mov
or
or
lcall
aad
imulb
test
dec
jb,pn
jl
xchg
ljmp
aam
fldl
add
in
out
adc
jns
cwtl
push
mov
aas
int3
sbb
push
mov
popf
pop
lcall
outsl
cmp
mov
and
ljmp
dec
jnp
push
js
cmp
xchg
xlat
pusha
add
sbb
enter
lret
fwait
je
pop
jnp
jo
jg
addr16
popf
scas
dec
popa
cli
cmp
js
ds
xchg
dec
jno
out
jnp
push
test
push
fnstenv
dec
scas
sti
sub
aad
mov
jp
rol
and
out
push
mov
pop
inc
push
inc
push
sbb
rol
popa
sbb
je
test
out
in
out
rolb
fstpl
cmp
or
mov
cmp
jmp
addr16
inc
jb
mov
push
ret
fistpll
aad
push
xchg
das
sbb
or
xchg
ljmp
cs
ret
dec
ffree
dec
jnp
sub
mov
data16
and
out
add
sub
xchg
arpl
orl
and
add
sbb
pop
and
in
daa
loop
mov
sbb
pusha
jns
or
sbb
sub
outsb
or
fstpl
mov
int
ss
adc
cli
cmc
nop
jo
fcmovu
jno
mov
popa
and
lahf
dec
dec
aaa
les
loopne
pop
pushf
mov
pop
push
int
arpl
or
inc
xor
stc
mov
lods
sbb
test
nop
ljmp
mov
sub
icebp
or
mov
sub
jno
push
mov
imul
pushf
repz
lods
xor
push
outsb
dec
jmp
pop
jp
push
push
fs
mov
test
test
lods
das
inc
add
test
js
jg
pusha
pop
mov
inc
adc
mov
and
jns
ret
andb
sahf
popa
jg
sbb
adc
out
jge
stc
pop
pop
fimuls
out
mov
out
and
jno
mov
mov
push
dec
xchg
lods
adc
mov
sub
jmp
sbb
adc
das
rclb
sbb
imul
scas
incb
inc
xchg
lods
cmpsb
inc
scas
mov
sbb
and
std
jo
mov
imul
frstor
or
outsl
fcmovne
cmp
es
dec
pushf
dec
int
repz
lea
hlt
mov
jb
xchg
mov
mov
orb
mov
dec
mov
hlt
push
clc
or
pop
push
loope
dec
fidivs
mov
sub
mov
sub
arpl
lea
rorb
xchg
loop
mov
sub
cmpsl
jecxz
in
push
nop
das
xor
mov
imul
cmc
outsb
push
jbe
xor
insl
jo
or
cltd
dec
dec
mov
cs
xlat
mov
lret
xor
mov
stos
push
sub
dec
inc
test
cmpsl
int3
lods
and
cld
add
lret
ror
je
adcl
popf
add
add
pop
cmp
cmp
inc
inc
les
rcrb
add
clc
notl
mov
popa
fcoml
push
scas
imul
inc
sbb
out
cmpsb
lds
mov
pop
test
icebp
push
and
xchg
jnp
test
movsl
pop
call
mov
stos
xchg
cli
out
adc
pop
cmpsb
out
xchg
test
fcoms
mov
push
push
daa
sbb
xchg
mov
jg
pop
addr16
es
cmp
push
jmp
or
xor
and
fimull
std
inc
adc
out
pop
jne
imul
data16
data16
stos
sub
adcl
sti
xlat
cld
orl
rol
cli
sub
out
xor
pop
dec
loop
push
jl
and
or
icebp
cmp
push
xchg
mov
add
cs
aaa
pushf
idiv
mov
jo
push
add
les
cli
fistl
and
out
dec
rcrl
cmp
scas
test
adc
dec
add
fs
stos
mov
ss
jns
add
sub
push
mov
cmpsb
ret
jmp
ljmp
cltd
rorb
cmp
cwtl
sub
aas
cmc
inc
imul
outsb
and
dec
ja
xchg
or
pushf
mov
pop
idiv
data16
ret
test
in
and
ret
leave
scas
xor
pop
repnz
push
xchg
sahf
push
xchg
icebp
or
push
jecxz
mov
dec
push
xorb
xchg
jecxz
sahf
adc
sub
test
pop
sub
testl
out
lods
mov
mov
repz
test
repz
popa
xchg
les
iret
sahf
cwtl
out
std
lods
cmp
cmp
dec
cli
push
mov
add
pop
aas
rcrl
in
mov
or
fiaddl
pop
add
dec
jbe
fnsave
inc
push
popl
lahf
je
insb
dec
enterw
dec
push
xchg
xorb
les
mov
or
movsl
mov
ud0
jmp
ss
mov
repz
shr
mov
dec
frstor
mov
inc
imul
xor
and
push
jae
fistl
mov
add
dec
mov
insb
mov
loope
push
xor
cmp
or
cli
popf
jbe
lods
or
mov
into
or
or
and
cmp
dec
out
add
xchg
rolb
sbb
ficomps
popa
xor
mov
enter
or
or
clc
pop
adc
sti
aas
enter
mov
dec
ficompl
and
rclb
adc
xchg
jae
movsl
ljmp
in
bound
and
sti
ret
xchg
lock
stc
sub
adc
hlt
xchg
cmp
ds
ds
mov
addl
dec
add
cli
roll
xchg
shrl
xchg
roll
mov
jne
les
lds
xlat
fmuls
and
mov
or
lods
fiadds
mov
inc
fdivs
sub
jg
pop
add
lea
mov
and
rcrb
jge
addr16
jo
scas
cld
adc
adcl
jp
clc
fcomps
sbb
inc
jecxz
xor
sub
stos
add
sahf
lock
mov
pop
scas
addl
into
imul
inc
test
cmovnp
sub
xchg
mov
gs
cs
xor
xor
aas
and
jl
adc
test
pop
or
sub
push
out
in
das
mov
mov
xor
or
test
sub
lds
dec
test
shl
jg
gs
addr16
out
fimull
bound
dec
mov
or
jle
sub
fdivrl
sti
sub
out
dec
fwait
aaa
std
js
push
loopne
pop
pop
xchg
jp
mov
in
inc
jne
inc
ja
test
xchg
mov
jmp
fcompl
xor
dec
pop
push
add
shll
or
roll
inc
pop
ss
push
push
and
or
fnstenv
cwtl
add
out
outsl
push
fnstenv
xor
fistl
mov
inc
jge
in
inc
scas
jecxz
mov
jns
push
aam
pop
jg
xor
loope
push
xchg
jne
xor
mov
loopne
jo
adc
xchg
outsb
add
aam
push
test
cmp
mov
gs
fmull
das
roll
daa
and
dec
stc
mov
iret
cmpsb
push
or
lahf
lahf
adc
aaa
jge
pop
cld
addr16
or
sbb
xor
and
push
out
out
and
xor
push
inc
mov
mov
sarl
maskmovq
testl
lods
or
xchg
xor
in
sub
sar
ds
jecxz
xchg
inc
movsl
int
push
or
fld
sbb
loop
cwtl
pop
fadds
fldcw
shl
or
in
mov
stos
pop
push
xchg
mov
inc
int
pop
dec
out
inc
xchg
mov
xchg
mov
lret
mov
int3
mov
cmpsb
scas
jl
xchg
jno
shll
and
pop
popf
push
dec
jae
xlat
inc
pusha
add
mov
cmp
ljmp
in
pop
mov
sub
aam
or
push
sub
jno
addl
je
fcoml
adc
outsl
add
or
in
lock
pop
adc
dec
sbb
mov
inc
mov
stos
sub
jb
js
sub
mov
adc
lods
sbb
adc
cs
lahf
jmp
adc
shll
popf
cwtl
xchg
mov
mov
push
hlt
leave
sbbl
out
mov
jns
stos
cmp
je
adc
in
int
imul
xor
mov
idiv
adc
jg
mov
push
pop
pushf
sahf
loope
ret
sbb
xchg
inc
pop
fs
mov
mov
xchg
nop
andb
loope
pop
cltd
test
adc
insl
aas
jl
pop
vpsrlw
or
add
out
lret
or
loop
add
cltd
insb
adc
rorb
xorb
repz
stos
call
mov
sub
jno
into
pop
pop
xor
adc
rolb
cmp
mov
popf
jb
jl
stos
test
fcoml
inc
in
push
inc
call
cmpsl
push
inc
jne
shrb
add
sub
jb
pop
or
fnstsw
adc
mov
inc
add
popa
inc
mov
ret
push
push
jne
add
sahf
jecxz
ret
aas
je
lahf
lock
aad
adc
adc
xchg
das
pop
notb
ret
shrb
fsubp
mov
mov
out
decb
ljmp
push
jbe
pop
notl
lret
stos
mov
pop
sti
sub
je
sahf
movsb
fidivrl
test
movsl
xchg
push
aas
stos
and
out
or
xor
adc
push
or
push
fsubrs
daa
add
xor
lods
add
lret
fs
lret
int3
push
cmp
lock
add
je
mov
pop
enter
pop
into
mov
into
sub
ret
mov
mov
aaa
loop
js
xchg
cltd
pop
xor
xchg
sbb
mov
jnp
out
jb
mov
dec
mov
scas
out
mov
call
lods
lahf
lds
xchg
jo
or
mov
xor
test
movl
add
mov
mov
xchg
adc
popa
jae
pop
fwait
mov
and
hlt
or
aas
jnp
add
lock
lret
push
scas
loopne
mov
out
ja
sub
add
dec
mov
and
and
fcoms
movsb
insb
loopne
or
and
sbb
adc
lret
adc
xor
int3
testb
pop
or
xor
xor
mov
cwtl
xor
cmpsl
jb
xor
in
xor
mov
test
sbb
addb
sbb
dec
mov
loope
mov
cltd
jge
lods
fbstp
leave
adc
rolb
mov
adc
mov
xor
and
insl
jne
scas
hlt
mov
xchg
inc
jmp
lahf
dec
pop
adc
stos
or
mov
lea
push
inc
imul
add
mov
mov
lds
or
cltd
mov
mov
lods
test
test
fs
les
mov
mov
aam
ss
push
addr16
pop
repz
enter
xor
ljmp
cmp
ja
mov
jge
jbe
hlt
lret
leave
dec
push
sub
jle
push
out
ret
push
sarb
imul
dec
outsb
lods
pop
pop
arpl
hlt
fiadds
mov
add
subl
ret
out
test
cltd
inc
lds
bnd
hlt
xchg
cmp
sti
mov
int3
lods
orl
js
xchg
outsl
insl
pop
add
push
lret
cs
pop
add
sub
mov
ss
inc
int3
int
ljmp
mov
sub
pop
jle
xchg
cmp
into
ja
xchg
or
shr
or
cwtl
push
stc
jmp
mov
cs
stos
pushl
cwtl
xor
xor
lea
mov
sub
mov
lcall
push
xchg
lahf
lret
mov
push
xlat
push
push
bound
dec
fdiv
in
push
push
mov
pushf
aad
test
in
jbe
cmp
nop
jle
xlat
mov
pop
fisubs
xchg
and
mov
repz
mov
and
mov
leave
out
mov
mov
and
test
repnz
cltd
jb
lcall
push
dec
inc
xchg
arpl
sbb
rclb
leave
les
mov
add
fildl
xchg
pop
clc
std
or
inc
scas
jae
std
insb
orb
add
pop
sub
cmp
sub
push
and
jo
inc
addb
pop
xor
dec
pop
sub
xchg
nop
adcb
lret
data16
push
aaa
adc
rolb
add
fstps
adc
push
sub
int3
jmp
dec
sub
fs
outsl
out
iret
and
in
sbb
cli
xor
aas
sbb
xor
fcoms
xlat
adc
lcall
cmpsb
cli
rclb
hlt
pop
lret
dec
outsb
xor
je
repz
jnp
in
mov
sahf
lods
mov
push
addr16
mulb
in
xchg
rcr
sbb
in
inc
push
andl
imul
aad
subl
cwtl
enter
mov
ret
in
pushf
nop
jge
rolb
mov
int3
and
xchg
pop
dec
xor
hlt
testb
cmp
push
outsb
push
fstl
dec
inc
sbb
ret
mov
xor
pop
add
stc
jge
shl
ret
and
fidivl
mov
or
iret
test
scas
xlat
inc
push
stc
fs
inc
sbb
inc
punpckldq
pop
test
icebp
sbb
dec
jno
xor
stos
mov
dec
in
jmp
sub
movsb
or
fs
pushf
dec
inc
jbe
hlt
loopne
ret
jne
sahf
dec
sbb
jb
push
xlat
sbb
xlat
mov
aad
rclb
mov
mov
adc
lock
ret
hlt
mov
mov
pop
rorb
addb
leave
fiadds
push
int
jbe
fcompl
mov
cli
push
aam
sbb
shrl
sbb
jmp
adc
jp
dec
inc
sub
or
mov
push
loope
jp
in
cs
fwait
int3
mov
xor
in
jb
lock
or
fst
adc
mov
idivl
mov
pop
cmp
cld
jecxz
rorl
test
push
int
insl
mov
loopne
sub
xlat
testl
test
pop
ficoms
mov
movl
cs
sbb
inc
movsl
scas
mov
sbb
rol
push
sbbb
add
fs
jne
xor
jo
cmp
arpl
lock
je
cld
fidivrl
test
sbbl
aaa
js
in
mov
mov
pop
insl
stos
test
inc
js
sbb
out
and
xor
in
dec
push
fidivrl
or
stc
lock
idivl
pop
enter
push
jae
lock
outsl
out
lcall
sbb
jmp
add
mov
jbe
test
fstl
sbb
std
in
aad
xchg
push
and
das
in
roll
xchg
fisttps
pop
enter
mov
inc
out
jae
rcll
sub
shrb
jg
push
fisubl
bts
cmc
imul
popl
cltd
xchg
test
aad
add
lahf
test
mov
xor
cmp
stos
fwait
jne
xchg
test
mov
lret
js
push
loop
and
jae
pop
add
sbb
xchg
mov
pop
xchg
jbe
mov
mov
call
int
jg
movsb
fldz
push
data16
and
adc
fdiv
in
or
inc
sbb
into
scas
movq
fidivrs
jbe
lret
push
arpl
test
dec
jne
or
test
test
jnp
fs
dec
movsl
popa
popl
mov
bound
pop
cmp
dec
inc
int
mov
pop
rclb
add
idivb
movsb
pusha
push
dec
pop
int3
mov
adc
dec
aas
sti
dec
push
insb
sbb
dec
or
sub
fwait
mov
repnz
xor
cmpsb
in
fadds
pop
flds
ljmp
adc
or
addb
cmovl
movsl
pop
mov
pop
inc
sub
movsl
jno
fs
sbb
std
shl
jle
shlb
pop
idivl
cld
or
jl
sbb
or
pop
ficompl
sub
add
lods
popa
shrb
sbb
jae
cmp
inc
pop
adc
imul
decb
cmpsb
mov
xorl
mov
jecxz
gs
lds
sbb
push
push
cmp
call
scas
or
arpl
xchg
cmpsb
in
adc
mov
fdiv
xor
fists
rcr
cmp
cmc
mov
pop
push
imul
and
mov
outsl
push
xchg
mov
dec
rorl
pop
nop
js
pushf
pop
mov
scas
sub
es
rcll
xchg
cltd
inc
scas
pop
xor
pop
bound
test
push
jp
xor
jecxz
mov
popa
add
imulb
add
or
enter
in
enter
mov
sub
hlt
ss
mov
xchg
out
in
into
sub
xor
lock
bound
mov
into
test
cmp
sti
repnz
enter
dec
scas
mov
loope
leave
sub
xchg
pop
pop
lret
sbb
mov
cs
stc
pop
pop
call
cmp
daa
push
pop
imul
inc
int3
in
mov
mov
sbb
in
xor
sbb
sbb
pop
and
mov
scas
sub
cmp
lods
mov
sub
mov
sbb
shr
hlt
movsb
rcl
pop
idivl
enter
jge
add
test
into
movsb
je
mov
and
push
mov
jne
call
mov
in
cs
loopne
stc
popf
add
dec
imul
jnp
repz
iret
movsl
mov
stc
test
icebp
xor
outsl
roll
xor
add
inc
push
fdivl
ret
loope
sahf
es
jp
lods
jnp
in
push
adc
int3
lock
out
loope
cmp
cmp
orb
lds
mov
cmp
shlb
mov
sub
out
icebp
pop
icebp
xor
mov
into
cld
out
fwait
mov
push
push
cmp
fcomps
push
loope
es
imul
je
adc
and
push
push
fnsave
xchg
fwait
adc
dec
adc
sbb
test
je
sarb
sub
xchg
and
scas
jb
mov
fildll
and
xchg
movsl
push
mov
popa
imulb
sub
stos
jb
mov
sub
cmp
ret
jnp
mov
pusha
sub
adc
mov
addb
mov
ja
inc
mov
ficomps
xor
mov
pusha
jl
loop
shlb
lcall
les
mov
cmp
add
xlat
jle
lret
setl
dec
mov
bound
mov
stos
add
jg
add
inc
lea
sbb
sbb
xlat
mov
mov
push
jecxz
adc
mov
cli
jb
xchg
xor
sbb
pop
mov
adc
shll
add
cltd
stos
jg
sti
outsb
sahf
repnz
outsl
mov
and
stos
mov
inc
into
xor
ret
in
push
adc
sub
roll
std
bound
shrl
fcomps
cmc
inc
ret
in
loop
not
sbb
into
fs
inc
mov
sbb
rcl
pop
push
test
pop
stos
dec
das
cli
mov
aaa
sbb
ljmp
jo
movsb
jmp
xor
pop
loope
sub
popa
jp
jl
mov
movsb
pop
andb
cmp
add
and
lret
mov
lret
aad
lock
lock
pop
in
bound
movl
stc
pop
xchg
fisubs
cmpsl
out
or
mov
inc
loop
inc
mov
or
mov
shlb
call
add
adcl
bound
fnstenv
aam
jno
pop
dec
rol
jmp
cltd
pop
push
or
sbb
cmp
dec
rorb
sub
test
push
repnz
mov
xor
push
xchg
xlat
sbb
cmp
jl
cmp
rolb
test
xor
pop
push
xchg
pop
mov
andb
push
imul
add
outsl
jnp
imul
divl
fiadds
sub
hlt
xor
xchg
jg
lret
fnsave
dec
push
jmp
cmc
lock
xor
call
mov
out
mov
mov
aad
or
addr16
daa
xchg
cltd
jne
fidivs
popa
mov
aam
adc
jne
stc
jge
je
mov
adc
xchg
sub
aam
out
fwait
dec
pushf
pusha
inc
xchg
dec
inc
andl
mov
outsb
mov
dec
or
sahf
cli
aad
jne
lods
jp
cmpsb
adc
push
sahf
lods
mov
jp
sub
mov
sbb
dec
and
xorb
insb
xlat
sub
pop
lock
mov
xchg
cmp
ja
adc
aad
or
mov
and
mov
dec
or
scas
xchg
and
ljmp
sub
shrb
adc
inc
lea
fwait
or
ljmp
mov
xchg
loope
cmpsl
inc
movsl
xchg
cmpsb
mov
rorb
push
outsl
dec
mov
pop
cld
or
push
out
fstp
cwtl
popf
pop
testl
jmp
pusha
out
dec
ljmp
jno
jle
sti
in
mov
aas
adc
cmc
sbb
or
mov
je
mov
ficoml
push
outsl
pusha
fnstsw
lcall
pop
cmp
lock
add
imul
test
push
mov
std
pop
cmp
mov
lods
jle
cwtl
mov
pop
ljmp
sub
std
out
add
push
ret
push
jl
lret
jno
rorb
jmp
repz
jnp
rorb
scas
je
dec
icebp
aam
cmpl
sbb
pop
subl
fwait
pop
cs
sbb
shll
repz
cli
fwait
sbb
loop
push
xchg
inc
mov
adc
int
mov
and
loope
sbb
pop
out
sub
add
aad
shr
mov
cmpb
fsts
xchg
jns
mov
sbb
adc
loopne
mov
push
add
pop
bnd
sub
gs
icebp
int3
xchg
lahf
jnp
sti
or
mov
mov
adc
push
add
enter
cmp
mov
cmp
cltd
jne
and
mov
int3
fcomps
sub
lods
notl
push
in
mov
cltd
andb
jmp
in
clc
cwtl
fwait
push
jecxz
jl
mov
sbb
inc
jb
in
push
mov
pop
popa
mov
mov
sahf
inc
test
nop
lahf
addr16
leave
sbb
push
add
pop
test
in
aas
jae
add
push
pop
dec
mov
lret
and
mov
jb
pop
pop
push
sbb
add
xlat
lock
sahf
cld
sbb
iret
into
cmpl
add
aas
sbb
push
iret
fdiv
mov
out
cmp
or
std
cmc
mov
xorb
test
sbb
push
lea
fldenv
add
jp
jmp
jge
stc
jb
cld
or
jo
dec
mov
adcl
mov
jnp
mov
adc
jp
movsl
int3
mov
inc
lea
xor
sbb
sub
int3
mov
lahf
subb
loope
pop
jb
stos
mov
imul
add
sbb
mov
sarl
sbb
add
andb
inc
add
sub
mov
jns
jno
or
sti
jmp
inc
idivl
sahf
movsb
fstpl
sbb
lret
adc
wrmsr
mov
cmc
jnp
rorl
loop
mov
pop
bound
mov
popf
nop
push
popa
aad
adc
xchg
rolb
cli
and
jb
mov
inc
xchg
out
and
les
adc
adc
adc
out
sub
add
jb
rorb
sbb
fs
push
hlt
add
stc
movsb
and
sub
negl
pushf
inc
mov
loopne
fisttpll
cmpsb
lods
icebp
pop
or
stos
repnz
rcrl
leave
dec
stos
jp
repz
cmpsl
jecxz
adc
jo
inc
dec
into
lret
ret
mov
push
popf
sbb
das
or
outsb
fsubrp
add
lret
mov
aad
aaa
jo
das
mov
pop
mov
pop
sti
inc
xchg
repnz
or
jnp
sub
pop
sub
lret
cmp
and
es
aas
popa
in
test
jnp
push
push
aad
lret
xchg
test
lahf
movsb
jg
in
aad
addl
or
fldt
or
shrl
data16
shl
pop
pop
stc
scas
jg
add
push
xchg
cwtl
cmpsb
ss
pop
mov
push
out
pop
stc
stos
dec
mov
bound
lods
hlt
push
orl
shl
add
xor
pop
movsb
mov
inc
addr16
pop
in
pop
cmp
shll
mov
mov
aam
sub
cwtl
jle
sbb
nop
push
loope
sarl
out
nop
xchg
incb
jae
push
mov
in
push
cli
in
adc
dec
dec
push
pop
dec
xor
xchg
sti
jb
je
daa
cmp
in
inc
fisubs
out
dec
addr16
mov
mov
jnp
add
lcall
cld
push
test
test
jno
or
idiv
or
sbb
fcom
cli
aad
mov
add
push
xchg
sbb
sbb
fists
pop
or
subl
dec
and
shlb
inc
loop
icebp
arpl
pop
xchg
jle
inc
jle
outsb
dec
pop
push
mov
aam
sbb
mov
xchg
mov
sbbl
jl
xchg
sbb
fstpl
lods
add
sbb
add
inc
xor
mov
xor
addr16
or
mov
mov
adc
sahf
pop
movsb
stos
xlat
test
xchg
lods
dec
cmc
cli
into
lret
pop
fcomi
addr16
ret
jge
sbb
ds
outsb
outsl
ss
mov
push
dec
cmp
mov
jl
rol
lret
push
loopne
imul
push
leave
inc
sbb
int
and
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cmp
outsl
add
outsl
add
outsb
