jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
mov
add
or
mov
mov
ret
push
add
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
aas
les
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
int3
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
mov
add
cmp
xchg
inc
add
cmp
mov
add
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
aad
inc
add
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
es
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
lea
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
jbe
inc
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
scas
mov
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
push
call
mov
stos
add
popf
mov
add
pusha
add
add
outsl
leave
xchg
mov
sub
add
add
push
add
add
add
test
add
push
add
add
add
stos
jns
loopne
add
stos
rolb
add
add
mov
add
add
xchg
mov
call
add
add
in
mov
out
lret
mov
push
lea
add
add
add
add
je
xchg
jae
jb
filds
add
stc
add
add
add
add
lods
jge
jae
fiadds
add
push
icebp
add
call
add
jno
add
fadds
sahf
lds
in
in
add
ljmp
add
jecxz
mov
add
jns
mov
add
push
push
push
push
lea
push
push
push
push
push
call
nop
test
jl
add
in
add
clc
aam
mov
hlt
jne
jmp
popf
lods
add
mov
data16
add
mov
add
mov
pop
add
int
imul
idiv
add
jge
push
cli
add
add
add
xchg
add
rolb
add
add
add
add
add
add
mov
lea
pop
movl
popl
push
push
push
push
push
push
push
call
add
stos
add
movb
add
add
les
mov
sarb
mov
roll
add
add
fldenv
in
mov
fwait
sbbb
jae
test
pop
add
jno
pushf
mov
mov
fstps
subl
add
mov
add
add
bound
movl
add
mov
lea
pop
push
push
push
call
add
cld
add
pop
ret
test
pop
add
add
add
int
rolb
mov
mov
mov
hlt
hlt
jge
sti
add
add
push
call
add
add
push
imul
add
jecxz
add
add
cmpsb
mov
enter
mov
lea
pop
push
push
push
lea
push
push
call
add
add
pop
popf
flds
add
arpl
add
xchg
mov
jmp
jbe
add
in
add
mov
mov
add
push
lods
repnz
popf
imul
jo
mov
mov
jne
add
add
nop
add
mov
roll
enter
aam
bound
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
sarb
add
xchg
mov
testl
add
mov
mov
add
add
iret
add
in
pop
ljmp
mov
mov
add
scas
add
add
test
mov
stos
push
add
xchg
outsl
mov
ret
imul
mov
test
bnd
popf
cltd
add
mov
lea
pop
call
push
lea
push
lea
push
push
push
lea
push
push
call
pop
add
add
add
loopne
in
add
imul
add
out
add
stos
mov
add
fiadds
loop
add
xchg
incb
push
add
xchg
shrb
add
pop
jae
add
add
add
cld
pop
jnp
xchg
add
mov
call
mov
mov
mov
lea
pop
call
push
lea
push
push
call
add
push
add
lret
jnp
test
lea
ljmp
in
add
leave
xlat
nop
imul
lock
cmpsb
add
mov
fldpi
loopne
movsb
ret
add
movl
cmpsb
mov
out
icebp
add
push
push
jnp
add
mov
fldl
add
pop
mov
add
add
add
mov
xchg
add
sahf
push
jmp
or
push
push
push
push
push
push
lea
push
push
push
push
call
arpl
outsl
out
nop
push
popf
push
add
mov
add
cltd
lock
scas
add
jl
add
add
loop
jecxz
jmp
lret
push
loop
add
roll
sarl
lea
add
scas
test
les
add
push
stos
fcoml
lea
scas
add
xchg
pop
scas
mov
lea
pop
call
jmp
push
push
lea
push
push
push
push
push
push
lea
push
push
call
roll
pop
ret
mov
add
pusha
neg
add
pop
add
mov
push
stc
add
test
add
lock
stos
popl
cmpsb
jge
jno
xchg
add
ja
ljmp
add
imul
add
add
je
add
add
sti
filds
int3
add
add
js
add
add
mov
lea
pop
ret
mov
push
push
call
add
add
add
mov
cwtl
shrb
add
fcmovb
push
add
scas
fiadds
in
add
jne
sarb
add
add
popl
mov
jge
add
outsl
add
add
add
xchg
jp
add
push
insb
push
add
add
out
xchg
add
add
add
pop
add
rolb
xchg
mov
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
call
add
push
scas
add
cld
add
sahf
enter
add
push
add
mov
xlat
imul
add
add
add
add
xchg
pusha
leave
add
add
add
add
mov
int3
in
add
jmp
mov
xchg
add
add
add
add
mov
add
add
add
lea
imul
add
push
push
add
push
add
fisttpll
sbb
pop
in
ret
add
add
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
stos
faddp
add
add
add
mov
add
mov
cltd
xlat
popf
jns
int3
jecxz
push
shlb
add
loop
push
add
iret
addl
test
imul
std
add
add
movsb
xchg
jbe
jbe
add
lods
add
add
add
mov
pop
lods
add
xchg
add
add
movsb
add
roll
loop
mov
popa
sub
add
sti
push
push
push
push
push
push
push
lea
push
push
push
call
cltd
pop
lods
movl
jne
leave
add
loop
xchg
jle
pop
data16
push
add
mov
lea
xchg
add
add
cmc
cld
mov
mov
fildl
add
add
jb
jge
mov
pop
int3
add
add
cli
roll
fiaddl
into
add
xchg
in
add
iret
add
jecxz
add
jo
testb
adcb
stos
mov
add
test
pop
add
cmpsl
add
pop
fldl
mov
lea
pop
add
call
mov
xor
push
push
lea
shl
push
and
add
rol
sub
rol
shl
xor
pop
sub
shl
pop
push
push
push
lea
push
push
lea
push
push
call
pop
add
add
add
add
out
mov
add
add
xlat
add
xchg
xchg
mov
add
roll
jae
add
fbstp
xchg
add
xlat
add
add
bound
add
mov
cli
mov
lahf
add
add
add
push
add
add
add
mov
add
jbe
add
xorb
pop
pushl
push
push
push
push
push
push
call
add
gs
add
add
add
repnz
lods
add
int
add
add
test
add
push
add
push
add
nop
pop
add
push
in
add
mov
add
push
test
bound
add
fs
add
addr16
iret
mov
lea
pop
call
push
push
call
cmpb
test
mov
xchg
add
stos
add
add
add
jmp
add
pop
add
add
xchg
add
pop
jo
push
fadds
imul
in
cmc
ror
mov
push
shl
lret
add
add
mov
add
mov
mov
mov
ror
add
mov
mov
lea
pop
mov
movl
push
push
push
lea
push
call
mov
imul
add
jbe
mov
je
jns
mov
jecxz
stos
add
fwait
push
divl
cld
call
xchg
add
xchg
add
add
jb
loope
in
stc
xchg
pop
mov
test
std
jl
add
add
test
add
shrl
add
xchg
add
add
add
add
add
mov
lea
pop
lea
push
push
push
push
lea
push
call
add
in
add
bound
pop
add
add
add
add
mov
mov
add
fildl
into
cld
xchg
add
popl
add
add
add
add
jnp
push
add
cwtl
lods
xchg
add
pop
add
fwait
add
out
jmp
je
add
mov
insb
movsb
add
xchg
mov
add
push
add
nop
add
add
add
add
lea
pop
push
pushl
pushl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
in
add
add
xchg
ljmp
pop
lock
scas
mov
mov
cmc
add
sahf
add
roll
mov
push
mov
push
fiadds
sahf
jecxz
js
mov
popa
bnd
add
add
fcompl
divl
mov
jno
add
jbe
stos
test
add
je
mov
add
fcmovne
add
fiaddl
xchg
int3
sti
mov
add
mov
and
call
pushl
push
push
lea
push
push
lea
push
push
push
push
push
push
call
jl
push
add
shrb
add
imul
loopne
int3
add
push
add
mov
add
jp
lds
push
sar
pop
in
add
fincstp
xchg
add
mov
jp
add
add
add
test
add
lcall
popf
add
jle
add
add
push
outsl
add
add
add
jnp
add
push
imul
jnp
add
add
pop
pushl
push
lea
push
push
push
push
push
push
lea
push
push
push
call
bound
add
mov
add
out
jp
imul
movsb
cmpsb
mov
fwait
pop
movl
out
fwait
mov
in
add
fs
xchg
ja
ljmp
push
add
add
sahf
add
add
movsl
mov
add
add
mov
insb
scas
xchg
add
clc
add
mov
xchg
iret
addr16
leave
loop
testb
mov
lea
pop
call
push
push
add
not
push
xor
add
shl
add
dec
sub
ror
shl
rol
lea
pop
add
pop
push
push
push
push
push
push
push
push
push
call
add
adcb
add
mov
add
lret
xchg
fs
add
add
mov
mov
jnp
add
in
nop
out
add
out
addr16
in
add
out
jle
add
add
addr16
mulb
add
add
ljmp
add
xchg
add
push
data16
fldenv
mov
mov
lea
pop
pushl
push
push
lea
push
lea
push
call
add
add
add
add
add
add
add
add
add
sbbb
fisubrs
add
jmp
in
lds
pop
add
xchg
add
add
push
outsl
add
cmpsl
addr16
add
jne
jmp
gs
mov
jecxz
pop
movl
enter
add
add
data16
mov
inc
push
push
sub
push
push
pop
add
add
sub
shl
pop
add
add
pop
push
push
call
push
add
add
sahf
add
loopne
add
outsl
add
in
movsl
movb
int
add
popa
add
add
pop
fcmovu
mov
add
add
clc
jle
add
cltd
into
fiaddl
movl
out
scas
imul
addb
hlt
mov
imul
add
add
fsubl
scas
lods
pusha
int3
add
pop
push
push
push
lea
push
lea
push
lea
push
push
call
popf
push
popf
mov
add
add
fsubr
popf
add
bound
mov
pop
add
ficoml
add
add
xor
jb
mov
js
jl
gs
fiaddl
fbld
rolb
enter
add
add
add
rclb
add
fiadds
xchg
push
addl
xchg
idivl
hlt
lea
pop
call
push
push
push
call
in
fiadds
call
add
testb
js
xchg
je
push
int
adcb
add
decb
add
enter
cmc
in
sahf
mov
add
add
and
add
pop
add
lods
repnz
pusha
mov
iret
add
push
xchg
add
arpl
push
add
add
add
iret
cmpsl
add
mov
lea
pop
mov
push
push
push
lea
push
call
aad
mov
fadds
add
add
add
loopne
add
arpl
fstpl
lahf
add
clc
add
add
add
add
lods
pop
jmp
ret
roll
mov
add
imul
mov
add
add
xchg
ret
push
add
sarb
data16
add
pop
push
push
push
push
push
push
call
add
pop
cmc
jmp
scas
add
arpl
add
pushf
andb
xchg
add
xchg
out
mov
add
add
pusha
mov
push
fcomps
add
stos
fxtract
nop
mov
mov
in
pop
push
mov
add
enter
aad
vcvtdq2ps
int
lds
add
pop
add
popf
fs
leave
pusha
int3
mov
lea
pop
mov
push
push
lea
push
lea
push
push
call
movb
rcrb
fdivs
jb
xchg
in
add
loopne
flds
xchg
add
aad
add
std
add
add
pop
pop
pop
xchg
add
jb
mov
hlt
add
push
add
lahf
imul
add
ljmp
add
add
add
add
add
lock
test
add
adcb
int
mov
lea
pop
add
add
add
push
lea
push
push
push
push
push
push
push
push
push
call
je
lea
mov
add
data16
add
add
ja
mov
add
mov
jne
enter
jecxz
je
lds
add
scas
add
add
push
add
pop
add
cmpsl
jle
add
fnsave
add
add
add
pop
pop
add
pop
sahf
xorb
jp
mov
add
pop
mov
push
push
push
call
ljmp
add
add
add
repnz
mov
loopne
pusha
add
leave
add
add
xchg
push
jmpw
mov
xchg
xchg
pop
imul
aad
add
jl
pusha
lea
pop
add
stos
imul
add
add
pop
xchg
shlb
add
pop
mov
ja
mov
shlb
pushf
xorb
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
push
call
imul
test
lea
data16
loopne
mov
mov
fstl
mov
add
fbld
jp
add
jo
rcll
fdivrs
push
les
add
pop
mov
push
add
data16
in
fimull
xchg
mov
mov
aam
bound
pop
add
add
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
test
std
lcall
add
jecxz
xchg
add
push
add
mov
add
mov
add
out
out
and
ret
jmp
in
mov
pop
neg
rol
js
lods
out
xchg
add
test
add
add
fadd
add
mov
lea
pop
push
mov
push
push
push
lea
push
push
call
addb
add
clc
add
cwtl
add
push
cmpsb
add
lock
stos
sarl
imul
pop
add
mov
add
add
jne
fcmovbe
xlat
push
add
movsb
mov
pop
add
pop
loopne
vpsubd
mov
lret
jnp
add
mov
lods
out
add
movsb
in
add
add
mov
xchg
mov
add
add
mov
lea
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
jecxz
add
add
add
imul
enter
lret
add
add
cwtl
arpl
add
outsl
fs
mov
add
add
scas
out
lods
lods
les
add
stos
lahf
add
mov
fwait
cmpsb
xorl
pop
cltd
add
movb
mov
addb
imul
mov
pop
je
sahf
frstor
cltd
add
push
add
mov
lea
pop
add
push
push
push
call
clc
add
loop
sarl
shlb
add
test
iret
popa
ljmp
add
add
add
mov
lds
ror
test
mov
lahf
mov
in
popl
cmc
mov
cltd
add
lcall
xchg
add
imul
loope
popf
mov
xchg
mov
add
jo
add
add
std
loopne
add
cmpsl
data16
pop
add
push
lea
push
push
call
pusha
lret
add
jp
add
add
filds
jl
fiadds
in
divb
add
add
add
add
scas
push
xlat
scas
jne
add
clc
add
aad
add
jb
add
jp
scas
imul
add
add
int
push
pusha
int3
add
add
mov
in
imul
lahf
sahf
add
out
add
add
lea
pop
pop
push
push
push
push
lea
push
push
push
push
call
pop
jns
add
jge
jecxz
add
idivb
out
add
fcomip
add
enter
imul
fstpt
fs
push
sti
mov
add
mov
iret
add
add
xchg
push
add
add
iret
add
ja
add
xchg
add
add
add
lret
ficomps
add
pop
pop
popl
add
add
add
add
mov
lea
pop
mov
xor
push
push
push
call
out
mov
jge
add
cld
add
fadds
fcomps
cwtl
add
les
sub
mov
nop
nop
xchg
add
add
xchg
jl
mov
stos
mov
push
mul
movsb
xchg
add
into
add
add
add
test
pop
jns
pushf
add
add
xchg
add
scas
add
les
add
lea
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
lea
push
call
bound
add
aad
add
add
mov
jmp
stos
add
add
add
lret
add
push
add
pop
add
test
rorb
add
cltd
scas
pusha
mov
mov
add
fsubrp
rorb
pop
add
pop
rol
add
add
iret
add
mov
jnp
add
add
lods
add
clc
mov
lea
pop
sub
push
lea
push
lea
push
push
push
push
push
push
push
call
add
sarl
add
add
add
mov
mov
add
mov
add
jne
mov
idivb
loopne
mov
stc
add
movsl
push
enter
add
add
pushf
add
lods
add
mov
add
fldl
addb
cltd
add
add
mov
aam
add
mov
lea
pop
pop
rep
push
push
call
mov
testl
add
cmpsl
add
in
jp
stos
mov
bound
add
add
jp
jnp
mov
add
add
pop
mov
push
add
add
loopne
xchg
add
enter
int
add
rcrl
in
pop
add
jecxz
add
popl
add
mov
lea
pop
pop
push
lea
push
push
lea
push
push
call
roll
mov
mov
add
mov
add
lea
push
mov
leave
add
rcl
repnz
xlat
add
add
add
mov
add
roll
jae
mov
aam
add
add
mov
popf
shl
jne
add
mov
mov
add
jle
add
js
add
fmull
pop
in
push
push
push
push
push
push
call
ljmp
jp
repnz
enter
rol
out
sti
addb
out
add
add
mov
mov
rolb
movsb
add
add
lods
add
add
add
mov
add
out
add
leave
add
insb
add
data16
add
add
jb
loope
jl
add
lahf
testb
mov
add
add
add
xchg
mov
lea
pop
add
add
add
push
lea
pop
mov
push
push
push
lea
push
lea
push
call
call
add
push
add
lret
imul
jmp
add
add
pop
fstps
rolb
popa
add
cwtl
std
stos
add
js
aad
jno
fsubrs
add
imul
mov
push
int3
fs
add
aad
faddl
add
les
add
jge
mov
adcb
add
jb
popf
movb
cltd
into
filds
mov
lea
pop
xor
push
push
lea
push
push
call
out
cmc
add
out
data16
add
add
add
ficoms
jae
add
mov
enter
add
xchg
mov
add
mov
cld
jge
mov
mov
add
add
out
add
mov
pop
add
pop
mov
in
sar
mov
les
insb
mov
roll
add
add
add
xchg
add
push
popf
add
fsubrp
add
shlb
int3
lea
pop
add
push
not
xor
pop
mov
xor
push
sub
dec
sub
lea
pop
mov
xor
push
sub
pop
add
push
push
push
push
lea
push
call
add
add
js
cmpsb
jge
scas
loope
arpl
add
add
add
mov
cwtl
test
lock
add
mov
jbe
add
add
mov
addl
int
add
lods
in
lahf
add
enter
loop
fiadds
aad
pop
fistl
add
add
sti
add
mov
cmpl
add
push
sti
arpl
pop
add
mov
push
push
dec
push
sub
add
ror
sub
add
add
dec
pop
shr
pop
push
add
inc
pop
pushl
call
push
sub
pop
push
push
push
push
xor
add
shl
rol
sub
dec
sub
dec
pop
inc
add
sub
pop
push
push
lea
push
push
call
xchg
xchg
scas
stos
stos
cmpsb
out
mov
icebp
ljmp
add
mov
add
add
fcomp
scas
push
pop
test
add
add
add
add
add
add
cmpsl
lds
gs
aam
xchg
add
add
leave
add
pop
add
pop
addb
push
stos
add
add
add
cmc
xlat
leave
aam
mov
lea
pop
push
push
push
rol
inc
pop
call
mov
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
addr16
add
add
add
sbbb
add
pop
add
mov
add
add
xchg
jne
addb
rcrb
add
cli
cmpsl
add
in
test
add
adcl
ljmp
add
ljmp
out
pushf
jbe
pop
leave
lret
add
mov
xchg
mov
movl
xchg
mov
add
icebp
fcmovbe
aad
add
mov
lea
pop
push
push
sub
xor
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
std
add
add
fwait
cmpsb
xchg
jge
add
jcxz
add
push
add
add
add
mov
loopne
add
add
lods
add
add
add
icebp
out
xchg
out
add
add
roll
add
add
add
add
jge
add
aam
ret
lea
pop
add
push
push
push
lea
push
call
mov
add
sti
add
mov
mov
mov
add
add
add
add
jp
cltd
clc
jle
add
pop
add
add
add
add
or
mov
aad
add
add
add
xchg
scas
movsb
add
push
add
iret
jmp
sarl
icebp
pop
add
leave
push
push
popa
adc
ret
add
add
add
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
js
fnstsw
out
pop
xchg
loope
pop
mov
fbld
mov
mov
add
sarb
add
mov
fwait
cld
fildl
mov
add
lret
add
xlat
cltd
call
add
mov
xchg
add
ret
testl
pop
add
add
mov
push
jae
mov
mov
lea
pop
xor
push
push
push
lea
push
push
lea
push
lea
push
call
jecxz
int3
lret
pop
jne
add
add
mov
pop
scas
add
pushf
add
popl
add
mov
add
je
mov
add
imul
mov
data16
add
out
mov
addl
add
mov
test
lcall
jp
sahf
add
pop
add
xchg
lods
add
test
jl
stos
leave
outsl
add
lea
pop
add
push
add
add
ror
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
push
mov
add
add
add
push
add
shl
add
into
fdivrl
loope
push
nop
add
mov
add
add
xchg
lods
pop
add
add
fwait
mov
add
mov
add
add
add
mov
add
add
int3
hlt
leave
add
jno
add
test
add
lods
xchg
add
pop
mov
xor
push
rol
shr
pop
add
pop
push
inc
rol
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
ja
add
add
cmp
push
add
in
lds
testb
add
mov
fs
add
add
add
add
add
add
cltd
lods
push
xchg
add
add
push
leave
testb
add
add
hlt
add
add
add
mov
pop
add
arpl
add
mov
add
cltd
mov
mov
lea
pop
xor
push
push
push
call
int
add
arpl
add
movl
add
add
add
add
add
add
rolb
jne
add
movsb
lea
xchg
add
push
add
jge
rolb
jecxz
add
repnz
hlt
add
sti
add
out
mov
pop
mov
lea
pop
add
rep
push
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
sti
mov
add
movsb
aad
test
add
mov
add
add
add
add
lds
add
mov
mov
add
rcrb
add
outsl
lea
add
add
mov
enter
iret
mov
popf
add
add
ret
mov
test
mov
mov
add
and
xor
push
lea
push
push
lea
push
push
push
call
sahf
movl
add
data16
je
mov
lretw
pop
jo
add
out
idivw
add
add
xchg
add
xlat
bound
mov
enter
add
shlb
add
test
jmp
add
add
lret
scas
add
add
mov
add
mov
xchg
add
push
mov
lea
pop
add
or
je
push
ror
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jle
xchg
add
add
jmp
add
add
add
jmp
add
pop
xchg
jnp
add
loopne
add
add
add
arpl
cmpsl
add
rcr
push
add
add
xchg
fiaddl
mov
fiadds
add
hlt
fs
hlt
xchg
faddp
push
add
add
add
mov
pop
add
add
push
sub
add
test
mov
lea
pop
xor
push
push
push
push
push
push
push
push
call
into
add
add
add
stos
add
ficoml
add
movl
add
add
data16
fbld
add
xchg
jecxz
hlt
mov
je
add
ja
xchg
mov
rcrb
add
add
mov
popf
in
rolb
popf
add
add
divb
mov
add
outsl
add
movsb
mov
add
pop
add
push
sub
pop
mov
xor
push
push
lea
push
push
lea
push
call
add
je
xlat
push
std
add
rcrb
fwait
les
add
add
add
add
stos
ljmp
push
lock
mov
jno
add
add
add
sti
sar
add
jecxz
add
add
lcall
js
ja
pop
jmp
lods
flds
pop
lds
pop
add
add
push
push
lea
push
push
lea
push
push
call
int3
rolb
jge
add
push
mov
add
add
shr
int3
test
add
add
movb
add
jo
leave
add
scas
pop
add
pop
add
add
loope
add
lcall
not
push
xchg
outsl
out
pop
mov
fldcw
push
add
test
ljmp
add
int
add
stos
mov
lea
pop
mov
xor
push
lea
pop
add
pop
rep
push
push
push
lea
push
push
push
push
push
push
lea
push
call
decb
jl
repnz
push
aam
pop
stc
push
outsl
pop
add
fwait
ror
xchg
test
add
pop
lds
out
pop
lods
in
add
popf
lret
add
add
vxorps
cmc
add
add
add
pushf
into
add
scas
add
addr16
mov
les
dec
inc
xor
push
push
lea
push
lea
push
push
call
in
movl
les
sahf
mov
addr16
loope
fidivrs
pop
add
add
add
lret
loop
push
mov
add
sarl
into
pop
add
lods
add
add
lcall
in
rolb
ficomps
fmul
push
cli
add
in
add
jp
add
jp
mov
lea
pop
or
je
mov
add
push
inc
ror
lea
pop
add
rep
push
push
push
push
push
lea
push
call
leave
rcll
out
int3
add
push
pop
add
add
add
loop
lret
add
sbbb
cmc
add
push
add
jl
add
add
add
add
fdivs
pop
pop
fildl
int
mov
popf
out
repnz
xor
cwtl
fwait
test
add
add
mov
add
add
add
hlt
add
lcall
add
into
nop
jbe
add
pop
pop
push
push
inc
push
xor
add
sub
not
shr
sub
rol
pop
sub
pop
push
sub
shl
add
pop
pop
push
lea
dec
pop
mov
mov
push
shl
inc
sub
xor
pop
mov
push
not
pop
jmp
push
rol
inc
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
aad
insb
cmpsb
jnp
push
js
in
xchg
xchg
xchg
add
add
jmp
aad
addl
rolb
add
nop
add
add
add
push
in
cmc
arpl
add
test
int
add
add
nop
xchg
jnp
mov
pop
cltd
add
add
popf
iret
fsubr
jecxz
out
fmull
in
add
push
push
pop
push
push
lea
push
push
push
push
push
call
add
add
add
loopne
jno
add
scas
mov
fisubl
sti
in
add
movsl
jp
add
add
mov
add
add
pusha
imul
add
cld
cmpb
add
xchg
pushf
pop
test
xchg
mov
add
mov
jecxz
add
incb
push
movsl
xchg
add
loopne
mov
lea
pop
push
push
push
add
pop
mov
pop
push
sub
add
pop
pop
pop
push
sub
shr
pop
pop
push
add
xor
pop
leave
ret
push
inc
pop
push
mov
push
sub
add
shl
pop
add
push
rol
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
std
add
cmc
add
cmc
jp
out
clc
imul
fwait
add
clc
int
rolb
add
add
cmpsb
add
stc
out
add
add
rol
mov
pusha
cli
loop
hlt
cwtl
add
add
pop
rolb
add
ja
in
add
add
stos
mov
iret
fsubl
mov
push
mov
fistpll
shlb
addl
popl
add
pop
push
push
push
push
push
push
push
push
push
call
mov
arpl
mov
loop
mov
ret
roll
add
mov
scas
add
push
add
add
stc
add
add
scas
imul
add
add
fisubs
pop
popf
sarb
lods
jl
cli
jb
scas
out
leave
popf
clc
add
je
xorl
fsubl
mov
and
inc
cld
add
add
addl
test
je
push
push
push
push
push
lea
push
push
push
push
call
add
pop
add
jo
add
add
shrl
mov
jp
add
mov
lcall
add
fcmovu
add
add
lret
mov
out
push
jns
out
push
lahf
imul
push
add
add
sti
stc
clc
add
add
les
add
fadds
ret
iret
mov
lea
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
call
cmpsl
add
sti
add
loope
imul
mov
mov
add
and
call
imul
jmp
add
popa
xlat
mov
scas
add
call
scas
icebp
jnp
in
add
out
add
lret
add
add
add
jge
sar
addl
sahf
add
imul
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
xchg
out
add
add
lret
add
fidivl
addr16
add
mov
add
add
push
push
add
rclb
outsl
testl
add
push
add
add
lcall
jne
aam
stos
ret
mov
mov
lea
pop
pop
pop
leave
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
roll
add
add
add
add
xchg
test
push
add
lret
outsl
mov
push
xchg
xchg
les
add
fldl
push
add
add
mov
andb
pop
ja
loopne
mov
imul
mov
cld
mov
jns
push
shl
repnz
cld
lea
pop
ret
push
push
lea
push
push
push
lea
push
call
lret
add
call
add
iret
add
roll
jae
addb
mov
mov
ja
clc
add
faddl
lahf
cltd
mov
test
mov
add
add
scas
xchg
lea
mov
add
add
les
add
mov
add
mov
rcrb
add
add
add
out
add
aad
aad
jo
les
mov
add
push
sub
xor
sub
sub
pop
push
push
xor
shl
pop
push
push
push
add
pop
push
testl
push
add
pop
addl
push
call
push
dec
add
pop
mov
push
push
push
call
sbbl
add
add
add
into
je
js
jae
jae
xlat
add
add
mov
cld
scas
fcompl
jmp
pop
add
add
xchg
add
add
xchg
add
add
mov
add
add
stos
in
scas
imul
pop
xchg
lahf
int3
jl
aam
bound
pushl
push
inc
sub
add
pop
push
push
push
call
add
add
icebp
add
add
movb
fbstp
lahf
sti
fs
lret
aad
les
add
mov
ja
add
mov
cwtl
in
mov
add
mov
mov
mov
mov
push
add
push
add
add
popa
add
add
mov
mov
add
add
or
add
adc
push
call
lret
mov
aam
add
add
mov
add
mov
add
add
mov
add
loope
test
int
call
add
add
add
xchg
bound
loope
call
pop
add
add
add
add
add
add
add
fiaddl
xchg
imul
xchg
lds
add
pop
cmpl
jne
pop
push
lea
pop
pop
pop
push
push
push
push
push
lea
push
call
add
jmp
add
add
add
push
push
mov
add
jbe
jnp
lret
add
cmc
lods
add
out
add
pop
lret
jp
enter
add
cltd
xchg
lock
add
add
add
add
add
add
add
mov
pop
bound
add
mov
add
aam
add
fiadds
add
arpl
lret
lock
add
pop
pop
leave
push
inc
xor
lea
sub
pop
ret
push
mov
push
push
call
pushf
pop
add
icebp
mov
add
add
les
add
in
add
loop
jns
outsl
addl
mov
add
jp
add
stos
add
add
add
add
nop
add
movl
push
imul
add
out
mov
add
add
mov
xchg
add
mov
jmp
hlt
lea
pop
add
push
push
not
sub
pop
push
push
lea
push
push
push
push
call
mov
add
jmp
xchg
fdivs
loop
jo
mov
add
mov
xchg
mov
mov
push
loope
add
add
lea
out
pusha
frstor
gs
push
add
add
je
add
loop
add
add
push
add
add
add
enter
popf
add
in
lret
lahf
lods
add
mov
mov
add
add
adc
push
push
movl
push
dec
xor
add
xor
pop
push
push
pop
call
push
call
push
push
lea
push
push
push
call
fmul
in
add
repnz
add
add
add
add
fiaddl
mov
imul
add
nop
fiaddl
jnp
mov
push
jmp
cwtl
add
add
push
add
js
aad
rolb
add
shr
mov
xchg
roll
mov
add
addb
int3
lods
jns
in
xchg
add
loopne
sahf
mov
xchg
pop
subl
push
push
call
je
repnz
add
lock
loope
call
add
std
xchg
xchg
jns
lods
add
add
loope
rolb
add
fldl
add
ljmp
xchg
je
push
add
jae
add
subb
add
loop
pop
add
add
push
pop
pop
hlt
fistpll
add
add
cli
arpl
fiaddl
push
push
add
fdivl
ret
fbstp
or
jge
add
test
call
rcrl
pop
push
ror
pop
pop
push
push
lea
push
call
add
in
add
jge
in
bnd
xchg
add
fildl
mov
fimuls
jl
jae
add
add
add
arpl
add
xchg
sbbb
add
ja
fidivs
push
add
int
add
int
xlat
lahf
lds
add
int
cltd
add
add
pop
loope
pop
add
mov
int3
lea
pop
pop
push
sub
add
not
xor
pop
leave
ret
push
shr
xor
lea
pop
push
mov
add
push
push
call
add
lds
push
lods
sahf
add
add
add
shll
add
movl
xchg
fstpl
in
pop
pusha
jnp
sahf
popa
add
mov
popf
add
add
cmpsl
add
add
cltd
mov
add
xchg
mov
add
in
cmpsl
cltd
iret
add
add
stc
lahf
test
add
jo
int3
mov
lea
pop
push
push
rol
pop
push
push
lea
sub
sub
ror
pop
push
push
push
lea
push
lea
push
push
call
imul
add
jp
andb
fwait
jp
add
add
add
idiv
mov
xchg
add
xlat
add
popf
add
fldl
fwait
add
std
js
rorb
xchg
add
sahf
ja
add
lahf
add
test
xchg
test
mov
pop
ret
test
pop
orl
mov
lea
sub
push
push
lea
push
call
pop
ljmp
push
loope
add
testl
add
int
lret
outsl
hlt
push
hlt
add
add
lods
push
xchg
add
cmpb
scas
mov
mov
add
mov
add
in
sahf
mov
sahf
hlt
add
lea
add
stc
jo
rcl
scas
test
pop
mov
shr
add
push
lea
add
pop
mov
mov
push
lea
push
push
lea
push
call
add
xchg
mov
cltd
add
xchg
lahf
les
les
loop
mov
cld
roll
pop
add
pusha
add
pop
add
jecxz
xchg
mov
push
loopne
icebp
mov
push
add
add
stos
ljmp
hlt
jnp
add
pop
push
xchg
je
add
mov
add
mov
fs
pop
push
lea
add
add
mov
add
add
aam
bound
pop
add
push
xor
shr
add
shr
pop
add
push
inc
dec
lea
pop
mov
push
sub
rol
lea
shl
pop
mov
cmp
jne
push
push
push
lea
push
push
call
jle
push
movsb
out
push
mov
movsl
xchg
fiadds
data16
add
imul
filds
xchg
add
mov
xchg
mov
add
pop
test
bound
loopne
test
add
stc
rclb
mov
add
add
push
fiadds
push
loop
add
add
add
lock
fadds
add
add
mov
lea
pop
cmp
jne
push
add
ror
add
add
pop
mov
push
dec
sub
shl
pop
movl
jmp
mov
push
dec
pop
mov
push
lea
push
push
call
add
testb
add
enter
popa
pop
out
mov
movsb
add
cmpsb
pop
xlat
add
xorl
mov
add
jge
add
incb
mov
out
hlt
push
add
push
xchg
scas
add
out
sahf
icebp
sar
rcrb
sti
test
cwtl
add
adcl
shlb
add
int3
jae
push
add
add
sahf
jp
xchg
mov
lea
pop
sub
jne
push
lea
push
push
push
push
push
call
call
add
adcl
add
add
push
bound
push
icebp
jae
add
add
push
scas
test
sahf
xlat
add
add
faddl
add
mov
jge
pop
lods
mov
add
addl
add
jmp
add
jp
add
cmc
mull
add
bound
int3
mov
lea
pop
mov
push
add
add
add
pop
movl
jmp
mov
push
lea
push
push
push
push
push
push
push
push
push
call
xor
out
iret
stos
enter
movsb
fisubs
fiadds
sahf
add
add
jo
les
in
add
jl
je
pop
add
popa
add
mov
add
push
add
les
icebp
add
jns
shrb
push
shlb
fwait
add
add
jp
mov
xchg
outsl
cmpsl
add
cli
add
add
lahf
add
out
fbld
hlt
lea
pop
mov
cmp
jne
push
push
push
push
call
fwait
clc
add
aad
add
out
add
cmpsb
loope
mov
loop
add
add
add
in
roll
xchg
xchg
push
cmpsb
nop
leave
jnp
mov
add
cltd
add
add
jns
add
lods
add
add
xchg
add
add
in
fadds
mov
int3
mov
xchg
fsts
add
xchg
mov
pop
mov
push
add
ror
rol
pop
movl
push
sub
not
sub
pop
jmp
mov
cmpw
jne
push
inc
pop
mov
push
inc
pop
movl
jmp
push
push
push
lea
push
push
push
call
lods
add
push
jp
rolb
push
add
shlb
hlt
add
add
add
mov
cmc
add
lcall
jmp
fwait
loopne
mov
xchg
mov
push
hlt
add
jns
mov
shrb
jecxz
add
add
imul
add
add
push
ror
add
in
nop
pop
fisttps
pop
pushl
pop
mov
push
sub
pop
mov
push
dec
not
shl
pop
mov
push
push
xor
xor
dec
push
or
not
add
ror
shl
sub
lea
sub
add
inc
pop
shr
ror
not
xor
pop
push
xor
pop
push
call
cmpl
je
push
push
add
sub
push
and
add
add
dec
dec
sub
shr
not
shr
pop
sub
pop
push
rol
rol
add
pop
push
push
add
shr
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
push
call
into
xchg
add
out
add
int
add
mov
aam
leave
idiv
add
ljmp
lods
mov
jo
xchg
add
mov
ja
mov
les
insb
add
subb
add
test
add
iret
call
fists
jne
add
popa
sub
js
int3
fldz
ret
jae
add
push
push
ror
add
ror
push
or
not
add
lea
sub
shr
pop
add
pop
push
push
push
push
push
push
push
push
call
mov
mov
add
stc
bound
jno
xlat
pushf
test
call
add
insb
add
ljmp
cmpsl
mov
add
mov
add
add
add
pushf
add
add
mov
add
aam
add
add
out
lahf
jne
add
icebp
imul
pusha
add
icebp
add
add
add
add
pop
push
push
shr
xor
pop
call
push
ror
lea
pop
cmpl
je
push
push
shr
add
shl
push
or
inc
add
lea
sub
rol
pop
inc
shr
pop
push
push
call
clc
rcrb
lea
cwtl
mov
roll
test
mov
pop
mov
pop
stos
add
add
stos
imul
jne
out
add
add
add
call
push
add
push
fwait
cld
pusha
outsl
mov
add
pop
add
test
add
test
icebp
fadds
add
mov
mov
add
cmpsl
add
mov
roll
mov
lea
pop
push
push
push
push
push
push
call
in
in
arpl
sarb
add
cltd
push
addb
jno
cmpsb
rolb
jmp
in
xchg
add
push
cmc
add
add
add
in
ret
add
scas
loopne
mov
lret
add
test
add
mov
mov
push
add
add
jb
cmpsl
add
mov
add
pop
add
add
push
mov
std
cld
in
mov
in
add
add
push
jecxz
mov
lea
pop
call
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
pop
lods
add
add
stc
mov
add
scas
push
add
cmpsb
jno
add
mov
repnz
call
test
aam
jl
out
sti
fimuls
je
pushf
add
lock
gs
mov
mov
add
add
nop
xchg
add
add
add
pop
add
icebp
movl
mov
lea
pop
cmpl
je
push
push
ror
xor
push
or
inc
add
shr
dec
lea
sub
rol
pop
dec
add
pop
push
push
push
push
push
push
push
call
mov
popa
std
adcb
add
movsl
add
add
xchg
roll
add
xchg
xchg
stos
popf
rcrl
rol
xchg
fcmovnbe
add
add
les
pusha
mov
add
out
fbld
add
add
mov
movsb
add
add
add
jle
add
sbbb
lret
cwtl
rcl
mov
fldl
fmull
lea
pop
call
push
add
rol
dec
pop
cmpl
je
push
push
ror
push
push
pop
add
ror
inc
lea
sub
inc
add
not
pop
dec
pop
push
shl
pop
push
push
not
pop
call
cmpl
je
push
push
dec
push
or
inc
add
sub
shr
add
sub
rol
rol
xor
pop
xor
not
ror
pop
push
ror
xor
shl
pop
push
push
add
pop
call
cmpl
je
push
push
sub
push
or
not
add
add
sub
pop
not
lea
pop
push
push
lea
push
call
imul
add
add
add
add
data16
scas
mov
add
lods
cmpsl
gs
add
add
add
test
pop
add
add
add
jne
data16
in
add
cmpsb
xchg
cmpl
add
mov
add
jmp
jb
jbe
add
add
xchg
fildll
jl
sbbb
test
jnp
add
lods
popl
cmpl
data16
push
push
shl
pop
call
cmpl
je
push
push
add
shl
dec
ror
push
sub
add
add
shr
sub
sub
add
dec
sub
pop
lea
pop
push
shr
add
lea
pop
push
call
cmpl
je
push
push
not
push
sub
add
add
sub
add
lea
shr
ror
pop
sub
dec
ror
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
sahf
scas
add
add
lds
shr
data16
add
lret
add
add
lock
add
out
add
int
jge
mov
jmp
addr16
arpl
add
xchg
ja
lahf
cld
add
add
add
pop
jecxz
sbbl
out
les
mov
fwait
jl
mov
add
xchg
mov
test
add
mov
add
add
add
addl
lock
lea
pop
push
push
add
pop
call
cmpl
je
push
push
shr
dec
not
sub
push
and
add
shr
shr
add
sub
ror
pop
shr
sub
shr
pop
push
shl
xor
shl
pop
push
push
not
sub
pop
call
push
sub
pop
cmpl
je
push
push
ror
not
push
or
not
add
dec
sub
sub
shr
add
xor
xor
pop
shr
ror
add
pop
push
pop
push
call
push
push
push
push
push
push
push
call
add
ret
jo
lret
pushf
jmp
pushf
jmp
testl
test
jbe
test
fwait
mov
add
add
add
add
call
push
fs
in
add
insb
add
bound
mov
add
add
add
rolb
jns
add
jmp
mov
roll
bound
insb
push
mov
lea
pop
cmpl
je
push
push
add
xor
sub
add
push
or
inc
add
shr
shr
sub
sub
sub
sub
sub
pop
shr
lea
pop
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
loope
push
mov
add
add
xlat
bound
add
push
gs
test
out
loop
push
cmc
sti
add
add
add
andb
mov
cmpsl
jns
add
add
jge
fcoml
add
test
mov
add
add
lock
add
les
call
cmpl
jne
push
pop
mov
push
add
xor
pop
movl
jmp
xor
push
ror
add
pop
pop
push
sub
sub
pop
pop
push
add
lea
rol
dec
pop
pop
pop
leave
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
loope
add
bound
add
jno
mov
imul
jb
mov
add
add
lock
jns
mov
fnsave
lret
std
loop
aam
mov
cwtl
cld
add
fisttpl
call
cmpsl
mov
lea
pop
ret
push
lea
push
lea
push
push
call
add
pop
iret
add
fs
jae
sahf
xlat
pop
scas
add
add
add
add
jge
jno
out
sahf
jecxz
add
sti
add
mov
pop
sar
cmc
test
cltd
mov
jo
add
xlat
loope
add
fadds
add
out
sti
cmpsb
jp
mov
subl
add
add
testl
arpl
pop
push
mov
add
push
push
push
push
push
call
add
push
test
fidivrs
sti
in
add
add
shlb
add
pop
jb
add
jge
test
stos
popl
pop
add
aam
add
add
add
loope
lcall
frstor
enter
add
in
stos
push
mov
scas
add
add
pop
cmpl
jne
push
push
sub
push
or
inc
add
inc
ror
shl
xor
sub
dec
pop
xor
pop
pushl
push
rol
shl
rol
rol
pop
call
push
push
call
clc
add
mov
add
sahf
add
add
std
leave
cltd
loopne
add
stos
mov
test
add
add
incb
mov
xchg
add
add
xchg
push
add
ret
push
push
mov
add
aam
xchg
xchg
out
add
flds
cwtl
add
mov
scas
lea
push
shll
shll
add
or
call
push
flds
add
add
add
call
testb
add
add
loopne
shlb
add
push
scas
add
aam
lods
add
std
push
pop
add
add
add
outsl
out
mov
add
lcall
add
imull
fmull
jge
add
add
mov
mov
faddl
movsb
add
push
xchg
jns
xchg
mov
jne
hlt
lea
pop
call
jmp
cmpl
je
push
push
push
call
xchg
add
adcb
mov
add
add
add
add
mov
add
add
add
add
cld
faddl
test
fs
xchg
add
scas
add
mov
lea
loope
fldl
add
outsl
lds
push
mov
test
add
mov
mov
add
push
scas
loopne
add
pop
cmpl
jne
leave
push
sub
sub
sub
pop
add
push
lea
push
lea
push
push
call
pop
outsl
rolb
pushf
ja
add
add
shlb
add
movsb
clc
imul
movb
mulb
mov
stc
jae
cmpsl
add
lret
arpl
pop
cwtl
add
xchg
add
pop
popl
xchg
lret
mov
jge
add
out
scas
stc
add
add
add
push
je
jb
lret
add
add
mov
jae
int3
lea
pop
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
call
pop
pop
mov
push
add
mov
sti
mov
std
add
add
loope
xchg
add
add
pop
loope
add
xchg
mov
add
add
pop
cmc
mov
push
add
mov
add
add
add
add
imul
add
mov
jnp
test
fmull
leave
push
push
push
push
push
push
push
push
push
lea
push
call
fstps
mov
add
add
mov
push
add
add
movsb
add
adcl
push
jmp
cmpb
movsb
add
add
fldln2
fldl
add
add
sarl
xchg
add
add
add
popl
add
add
movb
pop
hlt
add
jbe
js
faddl
stos
add
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
push
call
roll
cld
out
int
add
add
pop
push
mov
mov
sahf
add
add
mov
xlat
add
adc
fiaddl
scas
mov
mov
mov
add
add
add
add
in
add
add
push
add
add
add
lea
popf
mov
lea
pop
ret
jmp
push
add
shl
add
pop
cmpl
jne
push
push
shr
not
lea
push
xor
add
sub
sub
ror
sub
ror
pop
not
dec
not
pop
push
push
push
push
call
xchg
bound
fdivs
add
add
add
add
test
add
lahf
add
jle
fs
add
xchg
int3
or
add
hlt
mov
mov
add
jmp
add
push
jo
in
outsl
insb
add
add
add
fcompl
mov
add
repnz
cld
in
test
jecxz
in
imulb
add
add
pop
pushl
push
lea
xor
pop
call
push
xor
sub
inc
sub
pop
push
push
ror
shr
lea
pop
call
jmp
cmpl
jne
push
xor
shl
not
inc
pop
mov
mov
jmp
push
not
add
pop
push
push
shl
shl
dec
pop
pop
dec
jne
call
push
push
push
push
push
lea
push
push
call
incb
xchg
lds
add
add
ljmp
add
nop
add
add
stos
add
sarl
add
mov
lret
add
mov
jmp
lea
int
add
pop
add
mov
add
jno
add
add
jmp
jmp
je
pop
mov
add
pop
stos
add
clc
add
lea
pop
jmp
push
lea
push
push
lea
push
push
call
loopne
sahf
jle
add
jae
in
sahf
leave
add
add
mov
clc
out
add
pop
add
jecxz
push
add
add
add
imul
cmc
xchg
jae
add
add
scas
ja
add
add
ret
scas
pushf
in
add
jge
push
push
arpl
mov
add
addl
add
add
mov
jmp
add
flds
roll
enter
data16
call
push
push
sub
rol
inc
sub
push
or
not
add
shr
shr
shl
sub
sub
pop
sub
not
pop
push
dec
pop
pushl
push
push
push
push
push
push
call
add
mov
rolb
sahf
add
jmp
mov
add
fwait
add
add
cmpsb
testb
pop
in
add
cwtl
jecxz
mov
add
lret
add
addr16
nop
clc
add
add
xchg
add
aad
add
fldl2e
add
xchg
mov
add
add
lds
addb
pop
mov
xchg
gs
hlt
lea
pop
call
push
push
push
push
call
cmpsb
data16
add
insb
add
outsl
arpl
loop
mov
addr16
test
add
enter
add
cmc
test
mov
stc
popa
mov
add
jp
xlat
fcmovbe
xlat
cmpsl
test
arpl
add
mov
mov
add
cmpsb
push
insb
in
mov
mov
add
arpl
mov
mov
lea
pop
push
call
push
pop
mov
lea
push
push
not
ror
push
or
not
add
ror
sub
shl
shr
sub
shl
shl
pop
ror
pop
push
sub
add
add
sub
pop
pushl
call
push
push
add
lea
pop
call
push
push
sub
add
not
push
and
add
shr
inc
ror
sub
rol
pop
shl
xor
pop
push
shl
add
pop
pushl
push
push
push
lea
push
push
call
push
add
add
pop
xchg
mov
mov
add
out
roll
mov
add
cmpsl
addl
imul
add
jecxz
sahf
in
les
add
add
in
iret
add
int
add
add
sahf
add
add
push
add
add
addl
int3
lea
pop
call
push
lea
push
push
call
add
cmc
xchg
add
mov
push
jl
scas
fiaddl
add
out
cwtl
stos
xchg
call
xchg
addl
add
sbbl
js
add
movsb
jecxz
pop
nop
cmpsb
stc
add
jmp
hlt
add
add
add
mov
loop
roll
add
repnz
mov
add
add
outsl
adcb
std
mov
lea
pop
call
mov
lea
push
push
shl
xor
push
or
not
add
sub
inc
rol
sub
ror
sub
ror
pop
dec
dec
sub
rol
pop
push
sub
pop
pushl
call
push
sub
lea
lea
pop
lea
push
ror
add
pop
push
push
push
push
add
add
xor
ror
pop
pushl
push
push
sub
push
or
inc
add
shl
sub
lea
sub
sub
pop
add
sub
rol
pop
push
push
shl
lea
pop
call
push
push
inc
push
xor
add
add
not
sub
add
lea
sub
pop
sub
pop
push
add
pop
pushl
call
push
add
add
shr
ror
pop
push
call
push
push
add
push
or
inc
add
sub
dec
sub
add
pop
shl
pop
push
add
add
shr
pop
pushl
push
push
push
push
push
push
push
call
popf
lret
ja
add
add
lea
test
test
in
add
add
loop
add
stc
mov
add
addr16
push
jp
push
ja
gs
mov
xchg
in
add
mov
jbe
sub
push
add
pop
add
add
pop
add
ljmp
iret
add
add
xchg
adc
mov
lea
pop
call
call
jmp
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
jge
push
add
push
sub
je
loopnew
stos
int3
push
xchg
push
shlb
movsb
cli
jnp
push
mov
in
add
add
add
push
add
pop
add
fisubrl
add
xchg
add
mov
fiaddl
add
add
test
add
pop
pushl
push
ror
pop
mov
push
lea
push
call
add
test
add
add
add
negl
pop
lock
add
add
lcall
add
push
jb
sti
sti
mov
add
add
std
jecxz
mov
add
mov
lret
add
cmpsb
stos
add
add
insb
rolb
mov
xchg
pop
add
imul
clc
add
mov
sbbl
jo
add
mov
lea
pop
jmp
push
push
not
push
and
add
ror
ror
ror
sub
lea
rol
rol
pop
pop
pushl
push
lea
push
push
lea
push
push
call
add
mov
add
push
mov
add
add
dec
add
add
arpl
lret
shl
lcall
shrb
add
add
mov
add
jle
add
int
push
aad
jnp
add
add
add
cwtl
pop
add
jbe
add
jae
xchg
mov
push
mov
adc
call
push
push
push
push
call
add
add
loop
push
mov
add
jb
adc
movsb
add
out
jmp
jge
add
add
add
add
mov
add
jne
roll
test
jns
movsl
movsl
lret
add
mov
add
lahf
add
mov
add
push
stos
push
mov
in
add
addl
add
add
popa
add
int
add
add
adc
add
shrb
orb
push
shl
ror
push
or
not
add
add
dec
sub
pop
shl
add
add
pop
push
push
push
call
icebp
popf
test
scas
add
mov
add
add
hlt
add
add
std
add
add
cltd
add
xchg
add
hlt
add
add
lods
jb
add
fbstp
jmp
movsb
insb
add
add
add
pop
jmp
nop
push
add
add
add
lret
test
mov
xchg
add
pop
fdivrl
mov
lea
pop
pushl
push
sub
shl
rol
shl
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
lock
add
add
add
out
data16
add
jo
add
ret
ljmp
mov
add
je
roll
popf
flds
add
jle
stos
add
js
add
je
stos
add
xchg
mov
bound
popa
out
add
mov
add
stc
test
hlt
add
mov
lea
pop
push
call
leave
push
push
push
push
push
call
push
add
add
add
jb
push
add
loope
jnp
jge
add
add
cmp
xchg
jns
xchg
int
mov
add
add
lcall
stos
jno
mov
mov
add
test
xlat
lahf
gs
cltd
add
mov
or
call
jno
add
pop
add
pop
push
push
lea
push
push
call
mov
sti
jle
sub
mov
movsb
add
add
mov
add
loop
into
add
mov
add
add
add
xchg
lcall
sbbl
add
out
mov
add
add
xor
add
add
jmp
add
add
int3
lea
pop
pop
push
add
sub
lea
pop
pop
pop
push
push
push
push
push
push
lea
push
call
ja
repnz
mov
mov
add
test
cwtl
out
fidivrs
xchg
fadds
shlb
push
mov
mov
out
add
jo
mov
cwtl
jmp
mov
push
add
add
int
jp
add
jbe
pop
add
flds
add
fcomip
add
test
mov
cli
arpl
lds
add
add
ja
les
add
push
lea
push
push
call
jl
mov
add
add
in
add
scas
mov
mov
xchg
cmpb
add
loopne
mov
add
clc
mov
lahf
mov
pop
lcall
add
mov
out
push
add
add
push
sahf
add
lods
mov
ljmp
mov
add
add
add
repnz
jecxz
add
add
mov
mov
mov
lea
pop
ret
leave
ret
push
push
lea
push
push
lea
push
push
lea
push
call
add
mov
popa
fstl
lret
call
addb
add
add
add
jns
add
filds
add
add
add
les
add
mov
add
mov
jnp
int
fsubrs
push
bound
jl
aam
push
in
jl
add
enter
cwtl
xchg
stc
push
add
add
mov
xor
sti
add
jne
test
imulb
sbb
push
push
xor
dec
pop
mov
push
push
push
push
push
call
add
add
cltd
jae
test
add
add
add
test
mulb
add
mov
add
popa
mov
add
add
cmpsb
pop
lret
add
add
mov
incb
mov
push
stos
jmp
add
add
fadd
les
add
mov
js
imul
les
xchg
mov
add
int3
lea
pop
cmpl
jne
push
shr
not
pop
mov
push
push
call
mov
add
lds
add
sti
clc
aad
fisubs
roll
out
mov
add
fstl
push
add
add
lods
jo
add
in
sahf
arpl
faddl
sarb
add
fiadds
aad
add
faddl
in
in
xlat
imul
add
mov
add
add
iret
test
add
test
stos
fiadds
lret
jle
xchg
xchg
fmull
add
add
mov
and
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
rolb
add
icebp
jne
cli
aad
test
add
jge
int3
add
movsb
add
mov
xchg
add
pop
into
add
jo
add
ficoms
pop
add
add
add
xchg
loopne
push
lret
xchg
out
jecxz
push
add
add
add
pop
jns
test
add
mov
add
cmpsl
push
int3
jns
add
add
popl
mov
add
in
push
rolb
add
les
pop
xor
push
not
dec
shr
shl
pop
xor
push
not
pop
add
xor
push
dec
sub
not
pop
dec
push
lea
not
inc
inc
pop
sub
push
dec
add
lea
pop
jmp
push
rol
sub
pop
sub
pushl
push
lea
push
push
push
push
call
int3
movb
add
push
xchg
scas
add
fwait
mov
add
fdivrp
lret
jns
pop
add
push
add
ficoms
mov
jns
add
mov
aad
xchg
mov
bound
push
mov
scas
fiadds
add
xchg
mov
push
cmc
add
xchg
mov
lea
pop
pop
push
lea
pop
sub
push
ror
ror
dec
inc
pop
cmp
jne
mov
lea
push
rol
shl
rol
pop
sub
mov
push
xor
xor
sub
pop
shr
add
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
jnp
add
add
add
push
add
cltd
add
fiaddl
add
fidivl
add
fsubrl
add
add
add
push
add
pop
add
aam
add
add
iret
add
lds
cwtl
addb
jno
lret
in
add
arpl
add
add
aam
bound
pop
sub
push
push
push
lea
push
call
add
mov
add
add
add
pop
sti
add
shrb
loopne
add
fwait
cmpsl
add
sti
add
mov
lret
add
into
cmpsb
add
jl
xchg
add
cmpsb
out
popa
nop
arpl
mov
cmpsl
add
add
in
popa
mov
jno
in
mov
mov
lea
pop
pushl
pop
shr
push
push
push
call
add
insb
xchg
add
fcomps
mov
out
cli
enter
cli
mov
pop
jo
imul
test
push
in
add
jnp
add
stos
add
add
jno
lods
jge
ja
xchg
add
bound
fdiv
mov
jnp
nop
fs
mov
loopne
cld
lea
pop
and
sub
cmp
jne
push
push
lea
push
push
push
push
push
call
movsl
sti
add
hlt
add
add
pop
add
mov
popa
ret
testb
les
mov
add
mov
les
std
lret
add
add
sti
repnz
les
insb
add
stos
add
addr16
fwait
stos
roll
ficomps
rclb
mov
add
in
aam
les
stos
shlb
pop
leave
ret
push
push
push
push
push
push
call
add
add
mov
jno
js
add
xchg
add
mov
add
fsubrl
add
add
jmp
add
cmpsb
add
mov
pop
pop
push
add
pop
pop
mov
fsubrs
pop
test
add
pop
int3
sti
mov
sahf
add
iret
add
cmpb
jl
stc
movsb
cwtl
std
mov
orl
mov
push
not
add
shr
not
pop
add
push
push
push
push
push
push
call
add
jae
jle
add
mov
test
js
sti
mov
add
add
mov
add
xchg
pop
mov
add
push
add
in
cwtl
add
add
push
jl
lods
popf
in
add
out
add
jmp
add
fldl
add
mov
mov
add
add
push
stos
add
add
loope
push
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
push
mov
jae
add
add
addb
add
imul
lcall
mov
add
in
add
add
mov
add
add
add
sarl
push
cli
insb
add
clc
pop
mov
insb
add
mov
add
sti
add
add
add
xchg
xchg
add
xchg
mov
into
je
jo
incb
xchg
pop
push
push
push
push
push
call
add
ret
add
lock
push
add
add
cwtl
add
add
jmp
add
pop
add
jns
add
jnp
xchg
jns
test
into
add
nop
add
fwait
add
push
cmc
add
loope
in
add
add
add
jo
leave
mov
add
incb
sbbb
add
loopne
mov
add
add
mov
rolb
cld
lea
pop
push
push
push
push
call
lcall
jb
movsb
fildl
add
add
push
add
add
out
mov
mov
add
add
mov
add
leave
add
add
add
add
pop
cmpsb
sahf
add
fcompl
push
add
cmpsl
cmc
fbld
add
add
call
stos
push
add
add
add
add
add
lahf
mov
lea
pop
push
push
push
push
push
push
push
push
call
xchg
xchg
leave
cli
mov
lods
add
cmpsb
lods
lahf
lcall
mov
add
push
jmp
add
pop
bound
add
add
add
scas
lahf
add
je
aam
negl
xchg
add
fiadds
in
xchg
test
push
add
push
call
sbb
mov
push
not
dec
rol
pop
lea
push
push
lea
push
push
push
push
push
push
push
call
add
aad
imul
loop
add
add
jge
pushf
pushw
bound
test
in
test
add
push
mov
shll
loope
addl
add
clc
add
cld
add
mov
add
pop
add
mov
pop
rolb
add
add
add
mov
pop
in
mov
add
xchg
add
mov
add
hlt
lea
pop
sub
push
push
push
push
lea
push
push
call
xchg
jnp
rolb
test
jecxz
add
pusha
add
add
add
mov
jno
mov
xchg
xchg
fiaddl
fst
mov
call
js
add
jb
jge
add
push
jmp
xchg
shll
ror
into
fadds
in
jmp
repnz
xchg
call
mov
shll
add
mov
stc
jmp
aam
bound
pop
mov
shr
push
push
push
lea
push
call
add
push
pushf
lret
add
add
je
rcrb
icebp
add
add
pop
add
add
add
add
add
add
pop
add
jmp
add
fmull
int
add
lret
add
pop
pop
mov
add
call
jb
mov
stos
leave
mov
adcl
int3
lea
pop
add
mov
push
push
push
call
jnp
std
mov
mov
add
push
mov
out
lods
add
mov
shrl
rcrb
imul
out
lods
scas
loop
jns
outsl
add
add
movsl
mov
push
add
iret
mov
add
enter
add
cwtl
add
testb
add
add
frstor
popa
add
pop
add
jmp
out
add
add
add
add
pop
add
mov
add
push
push
lea
push
lea
push
push
push
push
push
push
call
imul
lahf
pop
mov
add
sahf
add
movsl
mov
pop
stos
jno
jmp
add
add
add
subb
add
add
les
test
add
add
lods
ror
adcl
add
imul
ret
test
cli
ja
add
add
add
add
shll
testl
mov
test
scas
add
out
fmull
notb
push
nop
shr
add
pop
mov
and
push
add
ror
pop
call
push
push
lea
push
push
call
aad
rcll
les
jecxz
cltd
adcl
addb
pop
add
js
lods
add
add
add
add
jmp
add
rolb
fucomp
std
loopne
roll
in
aam
pop
add
mov
add
add
add
xchg
ljmp
add
add
add
add
add
jle
std
xchg
in
add
add
mov
roll
int3
add
mov
lea
pop
add
cmp
je
add
push
add
pop
cmpl
jne
xor
push
pop
pop
pop
pop
push
xor
pop
pop
pop
leave
push
add
not
pop
ret
push
inc
lea
not
ror
pop
mov
push
ror
inc
pop
add
push
sub
inc
pop
push
push
push
shl
pop
pop
pop
mov
push
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
iret
mov
add
add
mov
je
nop
mov
add
add
mov
mov
add
cmpsb
add
rol
pop
jecxz
scas
shrl
add
popa
testl
mov
push
out
testb
imul
mov
add
add
add
fmull
mov
push
push
push
push
push
lea
push
push
push
call
add
jp
fists
push
jecxz
add
add
cli
add
fdivp
mov
addl
insb
rolb
push
scas
add
les
fwait
mov
add
add
cmpsl
lahf
xlat
imul
add
mov
aam
add
mov
mov
add
imul
stos
xlat
pop
add
add
pop
add
xchg
repnz
pop
xor
push
lea
push
push
push
call
test
fisubrs
add
add
xchg
stos
ljmp
add
add
add
movl
push
mov
pop
int
mov
stc
add
mov
add
lea
jmp
add
mov
add
add
add
add
test
xchg
add
push
pop
mov
mov
lea
pop
pop
pop
pop
push
dec
add
pop
pop
pop
push
add
pop
leave
push
add
pop
ret
push
mov
push
lea
push
push
push
lea
push
lea
push
push
call
jb
nop
jle
addb
stos
add
add
mov
mov
add
out
add
add
mov
jle
in
test
add
lret
xchg
pushf
xchg
cmpl
pop
imul
add
mov
test
popf
add
fildl
loop
jecxz
sti
bound
add
ljmp
orl
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
pop
add
add
add
mov
cmc
add
add
add
movsb
mov
jbe
fadds
add
mov
ja
jne
xchg
lds
mov
add
stos
ret
push
xchg
add
shl
leave
out
test
add
lods
add
add
push
int
xchg
pusha
jnp
outsl
mov
in
imul
jae
addl
add
add
add
pop
push
push
push
add
sub
xor
pop
mov
push
pop
push
push
lea
push
lea
push
push
push
push
call
xchg
lahf
int3
insb
mov
add
cmc
loop
jp
icebp
jge
add
lret
out
jmp
add
je
xchg
push
cwtl
push
shrb
add
push
mov
add
icebp
shl
add
add
shl
add
mov
push
jle
mov
scas
pusha
clc
roll
jmp
xchg
add
add
mov
add
push
sbb
lea
sub
mov
push
add
pop
shr
add
mov
push
xor
rol
rol
pop
add
push
lea
dec
pop
pushl
push
push
push
call
add
xchg
pop
add
arpl
aam
push
mov
in
movsb
mov
xor
add
shrl
pop
xchg
xlat
lret
pushf
add
test
add
lretw
mov
in
mov
add
mov
add
lcall
test
lea
negl
shlb
add
pop
mov
lea
pop
popl
mov
push
push
push
call
movsb
add
fildll
filds
lahf
add
lret
mov
les
add
out
add
add
add
add
out
out
add
stos
add
jns
add
add
hlt
leave
jo
jo
add
imul
test
scas
add
add
in
loopne
pop
add
add
xchg
hlt
add
loopne
popa
sahf
add
jno
aam
bound
add
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
cmc
add
add
scas
add
add
movl
hlt
add
arpl
jl
aam
pop
add
add
mov
mov
pop
std
add
jecxz
roll
jle
rcr
fildl
fldl
fwait
mov
pushf
mov
add
add
stc
add
add
imul
sub
notb
cltd
push
push
push
lea
push
push
call
lret
add
add
imul
add
fistpll
mov
outsl
test
add
add
shl
jno
loope
add
pop
in
add
add
stos
jno
xlat
add
add
add
add
jl
add
fmul
je
mov
mov
sahf
addb
add
xor
cli
mov
mov
lea
pop
lea
push
pop
mov
add
xor
push
ror
pop
call
add
nop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
jno
add
mov
stos
cwtl
out
popf
fs
lds
data16
ja
mov
add
xchg
jge
xchg
pop
add
in
add
jl
pushf
add
insb
cmpsb
mov
jae
popa
mov
pop
add
test
loopne
mov
add
add
add
add
add
add
add
add
jge
lcall
pop
nop
cmp
je
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
stc
imul
jne
add
ljmp
add
pushf
mov
jl
add
push
fadds
add
mov
add
add
arpl
jecxz
mov
arpl
mov
pop
mov
add
push
iret
add
aad
lea
jb
stos
add
insb
fstps
jb
les
push
push
push
push
push
push
push
push
lea
push
push
call
jecxz
mov
add
mov
cmpsl
push
outsl
mov
testb
add
mov
insb
test
add
addb
add
add
nop
add
push
xchg
add
push
stc
lret
add
add
sarl
cmc
jnp
add
adc
add
out
ljmp
int3
pop
mov
xchg
push
lea
pop
nop
inc
nop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
pop
add
mov
add
add
popf
cmc
add
xchg
lret
add
add
add
add
cld
add
xlat
loope
add
add
add
add
test
iret
add
add
pop
test
repnz
mov
add
loopne
add
pop
xchg
lcall
jecxz
add
jnp
mov
jb
in
fdivp
add
mov
lea
pop
nop
cmp
jb
push
ror
add
pop
xor
jmp
push
inc
not
shr
pop
mov
add
movzwl
push
lea
inc
pop
mov
add
mov
push
push
push
push
push
call
add
movsl
mov
aad
mov
popf
xlat
stc
insb
add
add
mov
jge
jle
cli
addb
popa
leave
add
add
push
outsl
sarb
push
add
add
mov
add
add
mov
cmp
push
add
push
jge
jp
add
jp
jecxz
into
lea
add
jle
cmc
jae
lret
lahf
mov
lea
pop
xor
xor
push
push
push
push
push
push
call
out
mov
sarl
roll
add
std
je
add
je
js
add
add
leave
rcrl
mov
mov
fadds
jge
stc
pop
add
fstp
xchg
xorb
add
pop
add
add
jo
mov
mov
scas
add
add
add
stos
add
shlb
stc
fsub
rol
lret
int
add
pop
shl
push
lea
push
push
push
push
push
call
add
in
push
call
cli
stos
xlat
mov
sahf
lock
hlt
in
add
jmp
add
xlat
in
fisubs
add
jne
pop
add
mov
jns
jns
add
add
lds
add
push
add
add
jge
add
xchg
in
add
inc
lahf
in
jmp
add
mov
fnsave
cmc
sahf
mov
lea
pop
xor
shl
push
push
call
imul
add
add
add
insb
push
loope
xchg
push
add
movsb
fiadds
mov
fsubl
insb
add
add
add
add
add
ja
mov
add
add
add
add
mov
add
add
outsl
add
scas
add
add
add
mov
data16
dec
nop
add
ror
pop
shl
push
push
lea
push
push
push
push
push
call
add
pop
pop
stc
arpl
std
les
push
filds
add
stos
add
xlat
add
pop
add
jecxz
add
roll
repnz
movl
jb
scas
mov
mov
cli
add
add
add
int3
add
xchg
aam
test
aam
add
add
jo
add
fildl
aam
fcmovnbe
add
cltd
add
add
add
add
add
pop
xor
push
not
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
roll
add
pop
add
ror
stc
add
push
add
jle
fwait
xlat
testb
fstpl
add
loop
mov
add
cwtl
jns
ljmp
add
popf
add
mov
jnp
cmpb
fwait
jp
mov
mov
popa
imul
push
les
push
mov
mov
push
les
add
mov
mov
lea
pop
add
push
push
lea
push
push
lea
push
call
push
jo
mov
add
std
add
add
movsl
outsl
mov
add
add
imul
add
mov
add
sahf
aad
addb
jnp
repnz
add
mov
rolb
aad
roll
cli
add
mov
add
testb
roll
mov
add
pop
pop
pop
pop
push
add
add
shl
pop
pop
push
not
shr
shr
dec
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
mov
roll
add
iret
mov
add
mov
push
cwtl
lahf
jmp
int
jb
mov
add
jno
pushf
fs
repnz
push
add
faddl
pop
out
add
xchg
movl
add
push
add
xchg
xchg
filds
xchg
mov
mov
loop
add
pop
jmp
mov
cld
lea
pop
push
push
sub
pop
mov
push
pop
push
push
dec
pop
push
push
add
inc
pop
push
push
push
push
push
push
push
push
push
call
xchg
jns
mov
mov
lcall
add
out
add
faddl
add
xchg
pop
in
add
add
shl
leave
pop
roll
add
add
push
imul
mov
lods
xchg
add
add
loope
gs
add
nop
call
mov
add
add
cltd
popf
add
cmc
mov
fisubrl
andl
pop
mov
mov
mov
push
push
push
push
push
push
push
call
sarb
clc
sti
add
add
fiadds
add
mulb
rolb
loopne
add
out
leave
mov
test
add
pop
repnz
pop
leave
add
add
mov
add
xor
test
je
add
test
add
pop
cld
sbb
add
push
jne
push
jge
in
add
push
sti
out
lock
fiadds
mov
lea
pop
test
je
mov
test
je
push
ror
pop
mov
mov
push
xor
rol
sub
pop
mov
inc
push
xor
rol
pop
cmp
je
test
je
mov
push
push
lea
push
push
push
push
call
out
lods
add
add
test
scas
addb
arpl
lahf
add
mov
addr16
add
out
add
lahf
add
add
add
add
add
add
xchg
testb
les
add
add
mov
add
add
scas
in
add
out
add
lea
pop
inc
cmp
je
test
jne
push
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
push
jnp
ffreep
add
add
add
mov
add
mov
add
mov
add
add
mov
pop
lock
add
data16
add
add
mov
popf
mov
jne
in
mov
xlat
pusha
popf
popf
add
rcll
arpl
add
fstl
loopne
loop
xchg
mov
mov
lea
pop
xor
pop
pop
push
push
push
push
push
push
call
add
outsl
jnp
add
mov
incb
mov
push
add
addb
in
xlat
add
add
add
cmpsl
outsl
add
add
mov
clc
mov
loope
add
mov
add
out
add
lret
jge
push
lahf
mov
popl
add
add
lcall
call
test
mov
cltd
addl
sbb
pop
push
shr
not
pop
leave
push
lea
push
push
push
push
lea
push
call
popl
lret
imul
add
mov
mov
add
cltd
aam
fimull
in
bound
add
mov
movsl
add
scas
add
popl
xchg
cmc
movsb
jns
rolb
call
jnp
add
incb
into
jecxz
add
lods
js
fstp
pop
add
add
add
add
add
mov
jmp
mov
lea
pop
ret
push
lea
push
push
push
push
push
call
imul
pushf
loope
add
hlt
add
mov
add
sub
mov
add
add
insb
add
mov
pop
add
add
xlat
add
add
add
pop
fildl
loop
pop
jle
arpl
mov
fcomps
push
add
in
in
push
add
pop
add
jecxz
push
mov
aam
fadds
movl
cmpsb
jge
popf
jne
stc
imul
jp
add
pop
mov
push
sub
sub
pop
inc
cmp
jne
push
not
pop
lea
push
push
push
push
lea
push
push
call
push
add
xchg
add
movsb
int3
icebp
popf
add
push
xlat
pop
pop
roll
sti
push
cld
push
add
mov
outsl
jnp
stos
out
add
jbe
fwait
mov
add
movsb
test
add
scas
cwtl
add
jno
add
xchg
lahf
rolb
mull
add
movb
add
add
clc
mov
fidivs
add
mov
outsl
add
add
mov
lea
pop
mov
test
je
mov
push
not
inc
dec
pop
add
cmp
jne
mov
push
push
lea
push
push
push
call
hlt
loopne
pop
ja
jecxz
jmp
repnz
mov
add
jnp
addb
push
in
pop
fwait
add
xchg
movsl
add
mov
push
movsl
popf
add
add
pop
xchg
je
repnz
mov
js
jecxz
add
add
mov
mov
add
lahf
add
add
xchg
add
pop
test
je
mov
add
push
shl
pop
cmp
je
push
inc
pop
jmp
xor
push
inc
pop
pop
push
sub
ror
lea
sub
pop
pop
push
ror
pop
pop
pop
leave
push
push
push
call
add
pop
push
add
push
outsl
rol
cwtl
icebp
jecxz
xchg
cmpsl
shll
sti
stc
add
add
add
add
enter
push
add
mov
gs
add
hlt
pop
add
std
add
push
fidivrs
les
add
add
cmpsl
fwait
add
roll
add
add
mov
lea
pop
ret
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
sarl
add
add
lahf
add
cltd
add
jle
stc
jmp
mov
jns
jl
jl
fwait
add
add
push
add
push
add
movsb
scas
xchg
add
cmpsb
add
add
cmpsl
mov
add
mov
add
push
call
mov
lea
pop
lea
push
push
lea
push
lea
push
call
push
add
add
add
push
mov
jno
aad
fucomi
add
add
out
add
mov
xchg
pushf
sti
lahf
iret
add
subb
lods
add
testb
test
ljmp
add
add
lret
xchg
xchg
shll
mov
add
movsb
xchg
call
add
ja
push
test
test
add
push
push
in
mov
add
add
xchg
add
lcall
adc
push
push
push
push
push
push
push
lea
push
call
add
not
add
add
shll
mov
out
incb
addb
mov
add
fdivrs
add
lret
nop
filds
pusha
je
insb
fcmovbe
add
add
lock
std
add
fmulp
add
into
add
add
std
lret
scas
add
jae
popa
into
sar
scas
rcrb
pop
push
shr
shl
pop
pop
push
not
pop
pop
leave
ret
push
push
push
push
push
call
jae
mov
mov
test
call
test
push
roll
xlat
lahf
in
lock
xchg
add
add
nop
cmpsb
add
push
js
push
add
add
xchg
loope
add
cltd
cli
ret
lock
popa
lret
add
mov
shrb
push
in
mov
clc
fisubrs
add
fdivp
add
mov
jbe
mov
ret
add
xchg
push
mov
addb
xchg
pop
mov
pop
pop
push
pop
pop
pop
leave
push
lea
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
lcall
addb
pop
pusha
add
fwait
pop
fadd
xchg
xchg
jmp
out
std
clc
add
add
int3
add
pop
add
xchg
push
cli
add
sahf
add
aad
fcmovnb
add
shrb
add
add
jmp
mov
ficompl
add
lret
add
mov
add
fmull
or
push
sub
add
pop
rol
push
ror
shr
pop
rol
xor
inc
push
push
lea
push
lea
push
call
add
add
mov
add
add
pop
mov
std
jecxz
lock
cld
fwait
lahf
pusha
repnz
pop
movsb
add
mov
add
leave
add
jge
aad
mov
mov
rcrl
clc
xchg
add
add
int3
mov
add
testl
push
addr16
add
cli
xchg
fadds
popa
add
imul
mov
lea
pop
cmpb
jne
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
inc
mov
sti
ficoml
mov
sti
mov
stos
mov
sti
movsb
sub
sti
adc
mov
add
mov
js
loop
or
in
cmp
push
pop
aad
movsb
fdivrs
lcall
xchg
mov
sti
and
jbe
push
xchg
iret
or
call
inc
lock
sbbl
cli
pop
jne
xor
xchg
jl
or
imul
cs
add
outsb
insl
or
iret
jb
mov
dec
sub
or
fmull
je
sub
add
push
xor
and
sub
int3
cmp
lret
add
adc
lock
inc
nop
sbbl
call
lcall
sbb
les
fmuls
fistpl
dec
cs
xor
mov
js
stos
test
je
clc
loopne
dec
xchg
xchg
movsl
addb
mov
or
sbb
leave
loopne
shll
cmp
add
sbb
add
inc
movsb
jbe
xchg
cmpsl
xor
mov
or
arpl
jecxz
mov
andb
pop
lock
lods
jns
subl
mov
and
mov
das
mov
push
and
lock
ss
mov
popf
sbb
cmp
rol
addr16
shrl
jmp
lock
lcall
sbb
es
and
mov
rcll
push
mov
fstps
pop
push
xchg
cmc
mov
jmp
add
xchg
cmpsl
mov
mov
pop
xlat
jb
cmp
lahf
inc
in
test
out
or
pop
add
stos
imul
fiaddl
stos
fs
je
in
inc
and
mov
cmc
iret
test
xchg
cltd
jbe
sub
mov
pusha
add
inc
cwtl
std
imul
mov
roll
mov
add
mov
adc
xchg
arpl
push
jnp
dec
fsts
inc
outsb
sub
inc
push
in
add
push
out
adc
cld
rclb
in
mov
ficompl
mov
push
dec
jle
push
jnp
dec
push
mov
pop
jle
sbb
negb
lea
push
jge
add
mov
pop
movsb
mov
sub
stos
test
xor
arpl
fistps
pop
pavgb
mov
repnz
ss
aaa
push
data16
push
test
adc
js
ljmp
mov
test
add
sti
pop
gs
scas
test
xor
mov
dec
nop
adc
adc
fcmovnb
std
pop
push
cld
dec
inc
push
mov
fists
outsb
xor
inc
mov
jle
inc
xlat
jnp
xchg
sub
out
into
push
push
add
adc
pop
push
sbb
or
fistpll
stc
and
test
dec
cmpsb
out
scas
cwtl
out
xchg
inc
xchg
popf
add
cmp
sub
pop
and
mov
pop
or
scas
iret
in
sub
pushf
mov
add
sub
adc
popa
xor
lcall
add
lcall
lods
sub
cltd
add
mov
adc
inc
fldl
jge
jne
sub
xor
jmp
cld
xorb
in
outsl
aas
adc
dec
and
out
bnd
xchg
fs
rclb
cmp
dec
jmp
push
ljmp
fwait
jbe
sarl
shl
push
cli
loopne
es
sub
add
in
cli
push
clc
push
iret
das
add
sarl
jne
inc
stos
cmp
in
sub
nop
int3
cmp
xor
xchg
mov
or
test
inc
add
outsl
cmp
into
scas
push
cmp
adc
pusha
mov
cltd
jmp
inc
mov
into
movsl
popf
loopne
loopne
pusha
lds
adc
push
mov
cmp
das
xchg
xor
sbb
sub
pop
pop
popl
mov
pop
fnstsw
roll
mov
scas
fdivrl
int3
lea
xchg
or
sub
push
mov
lea
fbstp
mov
cld
xchg
jne
dec
lods
and
repnz
inc
jo
push
fwait
lods
pop
data16
inc
fwait
dec
bnd
mov
bound
push
imul
mov
sub
std
ljmp
push
jbe
out
push
sbb
in
xchg
cmpsl
add
mov
dec
adc
and
leave
imul
mov
and
and
xchg
movsl
jg
adc
dec
testb
pop
cmp
aaa
aad
in
sahf
les
mov
pop
push
cmp
adc
sub
adc
xor
ret
adc
imul
pop
in
div
push
das
add
cmp
std
test
shr
fwait
sub
sbb
xor
and
lret
push
dec
sub
lret
roll
fs
mov
dec
cmp
inc
mov
or
imul
xchg
jle
call
add
inc
pop
lods
cmp
push
jne
mov
stos
pop
xor
cmc
sub
lods
sbb
ja
jns
scas
add
lods
mov
stos
fwait
jmp
xor
dec
ja
push
imul
xchg
inc
xlat
fnsave
pop
mov
sbb
fcoml
push
push
stc
je
add
xchg
outsl
cli
iret
dec
adc
shrl
push
add
adc
push
or
leave
dec
inc
xchg
inc
call
push
mov
mov
push
xchg
mov
enter
cli
das
outsb
repnz
addr16
pop
push
xchg
gs
into
push
mov
mov
xor
movsl
pop
sub
movl
rorl
adc
mov
sub
imul
add
mov
cld
mov
imull
out
pop
fbstp
sub
adc
and
xorb
inc
rcr
mov
mov
jbe
cmp
mov
adc
mov
dec
stos
hlt
mov
cmp
push
sahf
cmp
test
dec
rcr
mov
enter
mov
subl
push
cmp
mov
adc
inc
and
pop
into
cmp
imul
lret
cltd
pop
jno
daa
je
adc
add
stc
xchg
imul
cmpl
jo
rorb
or
sub
or
xchg
in
jnp
test
inc
repnz
pushf
daa
js
cltd
push
addr16
pop
out
jl
mov
idiv
test
mov
sar
scas
dec
adc
or
push
or
jle
clc
cli
mov
sub
cltd
stos
ficomps
icebp
scas
xor
imul
rclb
ds
nop
xchg
movsl
in
dec
and
push
inc
popf
sbb
and
jge
sub
addl
pop
mov
aam
loopne
jae
or
pop
mov
dec
lcall
rcr
divl
mov
repz
ret
sbb
mov
jnp,pn
mov
scas
fldcw
or
sub
call
or
shll
pop
pusha
adc
sbb
mov
mov
push
inc
cmpsb
in
mov
icebp
pop
ljmp
sarb
scas
insl
sub
int
enter
imul
leave
add
lea
jecxz
xchg
mov
xchg
sub
daa
shrb
cwtl
adc
or
jb
jnp
sbb
test
pop
cwtl
emms
add
xchg
cmp
sub
mov
cmp
mov
fdiv
int
mov
dec
iret
mov
scas
mov
lods
repnz
stos
insl
inc
push
repnz
repnz
xor
or
test
icebp
add
loopne
lret
icebp
xor
mov
mov
pop
lods
fdivrl
inc
cltd
enter
mov
lret
lods
push
mov
test
or
gs
jne
dec
mov
jbe
sub
aas
rorb
cltd
je
inc
std
dec
adc
and
sub
mov
gs
mov
and
push
jge
xchg
xchg
xchg
test
and
add
stos
dec
loop
test
adc
fists
iret
jp
fsubrp
rorb
push
popa
gs
jmp
cmp
fxsave
sub
out
xlat
ror
push
ret
or
lock
dec
scas
sti
mov
pop
dec
lds
pop
push
out
push
xor
sub
jecxz
jb
adc
sahf
inc
adc
pop
or
push
aad
push
imul
call
push
sub
addr16
xchg
imul
pop
test
sar
inc
scas
test
clc
cmpsl
lret
pop
pushf
sbb
jmp
or
repz
andl
mov
pop
jg
out
xchg
mov
xchg
rorb
push
fildll
imul
mov
or
ja
pop
jo
xor
xchg
pop
cwtl
add
pop
adc
mov
jmp
push
push
pop
cmp
popl
sub
mov
jnp
and
push
and
xchg
inc
shll
inc
dec
dec
sbb
cmp
xor
popa
punpcklbw
pop
std
xchg
lret
fbstp
push
daa
pandn
adc
testl
push
pop
and
jle
pop
jno
ret
lret
mov
adc
adc
stos
sbb
int
sti
xchg
lahf
xchg
fnstenv
pop
mov
sbb
sub
ret
mov
ja
call
out
add
orb
mov
lret
xlat
xchg
pop
in
dec
aad
mov
mov
les
sbb
push
lea
jmp
inc
pop
mov
lods
pop
mov
rol
jmp
inc
xchg
out
sbb
stos
fstp
sti
lods
cmp
or
stos
add
pop
fs
xor
push
pop
pop
daa
push
stc
out
movsl
lret
arpl
push
and
jne
ret
or
lret
cmp
sti
add
pop
mov
addl
lret
imul
mov
rcr
jge
stc
in
ss
pusha
addr16
mov
leave
dec
fsubl
jo
mov
in
shll
inc
sub
and
jnp
test
fiadds
pop
pop
fsubs
dec
cmp
mov
lods
lods
pop
or
icebp
push
mov
mov
call
inc
aas
aad
leave
cmp
ret
lods
mov
rcll
pop
jmp
cmpsb
pop
fisttpl
sub
jae
dec
aaa
push
xor
lret
mov
or
lds
xor
pop
rorl
mov
push
popf
sub
mov
xor
inc
mov
cmp
or
sbb
jl
pushf
pop
adc
adc
test
jo
inc
in
adc
lock
fsts
mov
dec
ds
or
inc
ret
cmc
jns
push
mov
aam
mov
xlat
mov
xor
jb
cmp
enter
outsl
push
test
adc
cmp
je
add
cmp
mov
jmp
add
leave
ret
dec
mov
or
fisubs
pop
sbbl
sub
insb
pop
jns
andb
in
or
jle
mov
add
sahf
and
dec
and
add
lds
fbld
jbe
clc
add
out
sub
stos
mov
xchg
out
and
insb
xchg
mov
inc
out
jb
lods
repnz
rcl
sub
daa
sti
movsb
pop
dec
and
cwtl
mov
dec
lret
inc
test
mov
mov
mov
and
jbe
sti
mov
adc
test
jl
adc
push
or
xchg
test
in
mov
pushf
jp
pop
and
jg
sbbl
std
push
sub
mov
fbstp
jb
inc
jmp
push
mov
xchg
movsb
sbb
dec
mov
xchg
rclb
mov
mov
pop
mov
push
lcall
nop
in
mov
or
xor
stos
insb
add
cmp
adc
icebp
sub
enter
dec
outsb
xchg
adc
addr16
jnp
jmp
aas
sbb
mov
jnp
lret
lcall
xchg
rcl
fistl
out
sbb
iret
stos
jl
fs
dec
bound
add
sub
into
test
adc
cs
jmp
or
je
int
xor
clc
pop
mov
xchg
xor
lret
stos
or
bound
inc
test
stc
inc
orl
lds
out
xchg
inc
pusha
loope
mov
cmp
push
xlat
std
cmp
or
mov
adc
cwtl
repnz
push
xchg
movsl
fldt
leave
loop
pop
xchg
cmpsl
sbb
add
decl
jns
jl
stc
push
sbb
cmc
mov
roll
stos
mov
or
xor
xor
jno
mov
and
jmp
sub
leave
mov
dec
xorl
cmp
mov
mov
xchg
test
jo
scas
sar
mov
mov
adc
or
mov
mov
inc
inc
cs
sti
scas
pop
lods
hlt
jp
push
pop
inc
mov
jecxz
jo
mov
es
rolb
out
push
movsl
stos
lea
out
jl
cmp
jae
andb
and
movsl
imul
xchg
addr16
loopne
xor
outsl
fistpl
lock
add
dec
dec
sbb
or
dec
outsb
out
iret
loopne
mov
rorb
insb
xchg
add
test
shlb
xchg
roll
xchg
cmp
adc
sbb
push
popf
test
xchg
lods
cmp
jle
in
imul
mov
gs
hlt
fwait
clc
std
cld
jbe
adc
mov
mov
faddp
subb
jp
fsubrs
push
test
jp
popa
insl
mov
push
int3
cmp
loope
movsb
shlb
or
stc
dec
je
dec
rcrl
imull
test
and
or
adc
fstpl
es
out
mov
jo
rclb
cltd
orl
test
lcall
mov
pop
dec
aad
rorb
jmp
pop
and
and
adc
cmovbe
iret
dec
hlt
sbb
push
repz
pop
jns
lods
jge
inc
xor
pusha
repnz
lock
shlb
stos
icebp
xchg
mov
psubb
mov
sub
daa
sbb
mov
sub
xchg
outsl
hlt
js
lcall
push
fimull
enter
sbb
faddl
stos
dec
push
mov
push
xor
insl
inc
enter
std
fldenvs
divb
mov
xchg
rorl
sub
push
lock
sbb
mov
push
mov
mov
mov
inc
push
mov
mov
arpl
pushf
dec
and
dec
inc
mov
dec
repz
pop
push
int3
popa
rolb
lahf
popf
movsb
xor
jo
sti
add
ret
sti
and
fcompl
mov
in
loopne
ret
jne
cmpsb
push
rcrl
cmc
rorb
js
mov
ds
mulb
test
jnp
fs
fisttps
fidivrs
add
outsb
push
and
pop
adc
add
inc
cs
lea
aas
pop
pop
or
jbe
sbb
imull
and
sub
xlat
mov
loop
lret
jbe
sbb
ds
les
call
aam
in
enter
adc
or
xor
loopne
bound
jns
xchg
sbb
inc
fs
pop
xorl
or
xchg
sbb
sub
add
frstor
fistpll
insb
xor
sub
sbb
and
push
mov
or
pop
adc
dec
adc
add
pop
test
mov
loope
ret
sbb
add
add
sarb
push
xchg
out
sub
imul
neg
mov
inc
adcl
fisubrl
xchg
iret
inc
stos
test
adc
adc
insl
int3
xor
xor
push
fnstcw
xchg
jg
ds
sahf
jbe
hlt
inc
shll
maxps
pop
cmc
pop
or
pop
push
push
cmp
arpl
jmp
pop
in
addr16
lret
scas
call
pusha
mov
sub
shlb
pop
scas
lods
mov
lret
sbb
fs
mov
cli
arpl
lods
cld
xchg
repz
das
leave
xchg
jmp
mov
sbb
sub
xchg
shll
idivl
mov
xchg
push
inc
or
in
decb
xor
xlat
testb
lods
add
repz
cmp
pop
sub
sbb
movsb
int3
push
pusha
iret
loop
test
sub
dec
sub
stos
mov
rol
sub
out
and
lock
ret
cmp
and
cmp
dec
add
xacquire
ds
nop
in
jb
shlb
das
sub
fildll
mov
arpl
jnp
ss
ffreep
sub
loop
adc
movl
fs
ss
nop
popf
outsl
xchg
mov
sub
add
push
loopne
mov
adc
push
iret
pop
stos
iret
into
fldenv
dec
pop
mov
inc
and
mov
mov
test
add
cmpsl
jae
inc
jmp
xchg
or
fcomps
outsl
rcrb
xor
in
xchg
inc
mov
test
cmp
sahf
xchg
dec
push
inc
data16
lret
aaa
fidivrl
cmpsb
xchg
sbb
mov
shr
divb
add
mov
jne
cmp
sbbl
rorl
cmc
popa
jp
aad
fistpll
daa
les
bound
inc
popf
scas
sub
test
push
cmc
iret
xchg
sbb
push
insb
push
rcll
mov
inc
loop
sbb
or
faddl
mov
and
mov
fdivl
inc
filds
js
frstor
push
lret
mov
pop
sbb
int
xlat
bound
mov
adc
mov
add
sbb
into
mov
dec
jae
pop
mov
jb
sub
and
and
fistps
adc
cmp
xchg
sbb
mov
add
sub
shlb
add
std
je
push
cli
insb
inc
push
lock
pop
mov
sbb
pusha
outsl
outsb
jmp
mov
xchg
xor
xchg
fnsave
adc
add
movsb
jmp
adc
popf
or
sbb
das
pop
fiaddl
add
rol
and
mov
inc
jns
xor
lret
fsts
aaa
sbb
jg
fs
mov
jl
mov
pop
aad
je
sub
dec
test
or
jmp
xchg
add
call
mov
cmpsb
mov
addb
cmp
leave
sub
adc
cltd
hlt
jns
and
decl
jno
mov
inc
test
jbe
addb
insb
jmp
and
pmaxsw
xchg
in
jle
or
insb
jns
adc
mov
cmpl
lods
xchg
push
mov
imul
cmc
jne
jne
pop
cs
in
daa
aam
adc
fimull
jmp
adc
mov
mov
aad
pop
popa
jno
mov
out
and
es
sbb
sbb
jnp
scas
insl
sbb
mulb
fidivl
mov
stos
xor
loopne
and
sub
fisubrl
hlt
xchg
mov
out
xor
add
add
xchg
inc
xchg
stos
imul
cmpsl
lcall
pop
pop
imul
xchg
mov
incl
cmp
push
push
cltd
pop
push
pop
inc
xchg
mov
push
pop
int
dec
loop,pn
rcl
punpckldq
pushf
fisttpl
mov
faddl
inc
mov
std
jb
inc
lock
or
mov
stos
sub
pushf
cmp
nop
cs
pop
cwtl
mov
pop
mov
inc
xor
lods
in
mov
add
cld
xor
scas
pop
or
add
push
das
push
or
pop
mov
and
mov
cli
mov
jnp
stc
cmova
pop
add
sub
lea
cmp
dec
dec
fcomi
das
mov
imul
add
or
push
dec
test
jg
dec
mov
mov
mov
xchg
icebp
cltd
ja
outsl
inc
aad
mov
inc
stc
xchg
lock
cwtl
dec
popa
sub
sub
cmp
mov
stos
test
mov
mov
jne
sbb
adc
inc
sbb
mov
scas
pop
loope
jnp
call
popf
incl
dec
cltd
push
div
ss
cmpsl
and
xchg
int3
shr
jb
cwtl
or
ret
fnstenv
outsl
mov
clc
push
push
adc
aam
call
jecxz
loopne
dec
mov
xor
fimull
rcrl
jbe
push
xchg
ds
inc
or
jb
add
ficompl
and
aad
sbb
mov
cmp
outsl
andb
xchg
and
fs
xor
loopne
jp
inc
pushf
js
cmp
das
in
jmp
sbb
lods
mov
push
es
mov
ss
icebp
sub
ljmp
mov
and
out
xchg
gs
gs
mov
nop
call
notb
mov
pusha
jle
mov
and
test
push
push
into
sbbl
fmull
notl
dec
xor
xor
outsb
xor
dec
lock
add
dec
lds
xchg
inc
dec
jge
and
adc
sbb
inc
push
iret
sub
inc
icebp
mov
sbb
mov
ds
lods
xor
aad
pop
in
es
jle
loopne
movsl
pop
fwait
jbe
pop
lods
inc
xor
jns
pusha
mov
cwtl
mov
cmc
rcr
ds
mov
jae
jp
pushf
lock
ret
dec
loope
mov
cmp
insl
mov
dec
test
int3
and
jp
mov
adc
jnp
lea
push
insb
lods
lods
sbb
jnp
or
pusha
sahf
xor
inc
mov
sub
and
test
jmp
or
mov
pop
and
xchg
test
sbb
cwtl
xor
jbe
les
xor
jo
add
sahf
xchg
pop
imul
ss
lret
mov
push
daa
pop
jns
cmp
sbb
adc
jnp
out
dec
dec
xor
mov
cmp
jne
stos
subl
push
cmp
cltd
mov
cli
mov
mov
addl
sub
inc
cs
jb
dec
bound
mov
xor
stos
mov
push
out
or
mov
mov
cmc
push
in
and
leave
add
lods
jg
and
jno
xchg
xlat
or
test
ret
fisubrl
lock
xchg
call
pusha
cmp
sti
cmp
in
pushf
or
jl
inc
sarb
mov
fsts
paddb
mov
inc
pop
mov
sub
jecxz
in
decb
pop
xchg
mov
enter
std
idivl
xchg
loopne
fwait
dec
inc
mov
popa
cmp
jmp
dec
pop
inc
push
fwait
adcb
pop
xorl
repz
loop
mov
and
push
lret
sbb
and
push
pop
addb
scas
mov
popa
in
loopne
sti
jmp
ljmp
or
inc
or
add
int
cmc
scas
add
sub
stos
mov
loope
stc
jbe
jns
mov
out
adcb
pusha
or
xor
adc
sbb
push
dec
enter
sub
addr16
std
insl
mov
aad
jecxz
fwait
int
inc
pop
push
and
int
or
incb
out
fcmove
int3
sbbb
sbb
push
push
mov
mov
add
bound
shl
pop
mov
aas
mov
cmpsb
adc
gs
imul
sub
mov
insl
ss
mov
aaa
jno
add
in
into
aaa
cmp
subl
xchg
cmp
add
mov
call
addl
out
inc
jo
pop
cmp
inc
pop
mov
inc
pushf
les
xchg
ret
mov
daa
or
or
fistps
xlat
call
push
stos
inc
popa
outsb
mov
fnsave
ss
mov
or
push
movb
sahf
and
add
mov
jmp
push
sbb
test
cltd
jns
fimull
in
int3
lods
push
dec
fcompl
out
inc
mov
in
aaa
cwtl
ljmp
dec
mov
push
lahf
mov
dec
pop
out
shrb
cld
pop
rcl
das
fcompl
test
insb
inc
out
andb
mov
in
repz
js
mov
les
lret
ret
mov
and
cmpsb
cli
push
push
in
leave
lahf
cmp
push
mov
push
jno
push
test
dec
push
push
add
fadds
mov
cs
push
jmp
and
lret
cmp
in
pop
mov
and
or
mov
jo
cltd
add
movsl
push
dec
dec
cli
cmc
xchg
inc
mov
mov
imul
or
pushf
mov
pushf
insb
sti
loope
jo
xchg
cltd
mov
out
addr16
jne
xchg
aas
adc
lret
sahf
popa
mov
addr16
ss
lcall
jb
fsubrs
popl
inc
mov
pop
xlat
rolb
bound
fimull
dec
cmp
lods
aad
sbb
mov
mov
shl
div
cmp
stos
sbb
lods
cltd
push
sub
pop
adc
dec
mov
jnp
pop
and
into
adc
adc
lock
std
lret
pop
ds
aas
sbb
xchg
jbe
mov
imul
mov
or
mov
jmp
mov
lea
push
pop
andl
outsl
ret
arpl
scas
xchg
push
xor
enter
imul
mov
dec
sbb
push
push
jp
adcl
mov
jnp
ja
pop
loopne
jb
into
inc
xchg
xor
mov
in
fdivrl
call
lods
gs
pusha
jae
sub
or
xchg
cmp
mov
xchg
lcall
loopne
jnp
cli
sbb
push
je
xor
mov
aad
repnz
and
xchg
int3
repnz
xchg
pop
aam
jge
fistl
rcll
pop
movsl
jbe
sub
xchg
std
xchg
add
addl
inc
and
and
jns
daa
dec
sti
insb
mov
out
dec
ja
mov
xchg
mov
fisubl
dec
inc
mov
push
adc
rcrl
call
popa
daa
test
lcall
mov
loop
adc
jecxz
xor
jae
aaa
sbb
les
jno
push
xlat
icebp
out
xchg
stos
mov
adc
andl
lds
mov
mov
pop
xchg
inc
pushf
xlat
pop
test
out
and
jmp
and
dec
dec
jge
or
nop
ss
push
jmp
loop
int3
movsb
aad
mov
sub
mov
mov
movsl
jns
test
popf
mov
push
lret
scas
cmp
cmc
insb
lcall
xor
add
xchg
cmp
lahf
shrl
adc
push
mov
and
and
xor
enter
test
ljmp
xchg
ja
pop
icebp
ds
popf
scas
pushf
or
lods
adc
hlt
mov
shrl
cmp
out
cmc
idiv
mov
les
sbb
in
and
std
pop
mov
and
stos
out
sub
loopne
repz
enter
and
int3
fs
test
in
mov
je
mov
scas
add
cltd
stc
adc
scas
fcoml
pop
pop
dec
push
les
inc
cmp
clc
test
cmpsl
arpl
push
enter
into
out
jne
loopne
lea
push
jge
mov
adc
mov
in
dec
and
insl
mov
mov
int
rcrl
dec
add
popa
push
enter
mov
lods
jae
xorl
cmp
push
mov
add
adc
cmpsb
imul
xlat
push
dec
mov
push
dec
stc
cmc
cmp
sub
cmp
test
push
xlat
pop
mull
push
shl
push
adc
js
aad
mov
sti
sub
xlat
je
pop
sub
repz
dec
clc
das
mov
xor
sbb
nopl
aam
scas
xchg
test
loop
daa
push
pop
adc
jg
mov
mov
fmuls
sbb
insb
addr16
mov
and
push
mov
sti
mov
push
rorb
loopne
adc
inc
loop
sbb
dec
cmp
mov
lods
sarl
mov
loope
fsubrs
mov
outsl
lcall
out
in
pop
and
ret
int3
mov
or
stos
stos
mov
lds
jp
punpckldq
pop
js
fildll
xchg
inc
pop
sub
xchg
lea
jecxz
cli
cmp
nop
fadd
gs
inc
mov
mov
or
sbb
inc
stc
pop
inc
mov
enter
data16
dec
mov
and
repz
mov
xor
cli
rolb
orb
xchg
lahf
push
rcl
pop
icebp
cmp
fcmovnbe
sbb
rorb
sub
in
push
xor
lret
mov
dec
pusha
testb
mov
cmp
dec
dec
or
push
les
inc
sarl
lahf
mov
aaa
sub
sahf
sbb
inc
repnz
iret
jp
in
bound
xor
rcll
icebp
out
cmp
fadds
insl
add
mov
dec
cmc
int
push
pusha
addl
adc
icebp
scas
in
mov
repz
testl
jae
cli
fwait
clc
push
gs
fisubrl
xchg
pusha
icebp
sub
imull
test
jae
fstpl
cmc
ja
in
cmp
xchg
jo
repnz
imul
jmp
std
sti
inc
lret
aam
mov
add
mov
dec
dec
pop
out
xor
adc
clc
and
sbb
mov
rorl
mov
sub
fs
fdivrl
stc
mov
mov
sti
or
movsb
and
pop
dec
fadd
cmp
mov
loop
cmp
inc
pop
int
gs
int
lahf
shll
xchg
adc
je
imul
inc
mov
dec
xor
stos
cmp
add
jae
fwait
subb
mov
push
jno
sbb
xchg
adc
sub
aad
ljmp
add
dec
jle
cmp
or
or
out
popf
inc
and
enter
arpl
sbb
sub
push
lret
in
xor
mov
neg
in
mov
mov
imul
aas
mov
fstpt
sbb
jae
cmpsb
aas
cmc
xchg
mov
aad
jns
test
add
sti
movsb
stc
fucomip
mov
pop
pushf
addr16
fimuls
lds
jbe
enter
ljmp
push
push
outsb
mov
bound
xchg
or
fstpl
aas
test
or
xchg
loope
xchg
pop
jbe
daa
aad
jnp
push
enter
adc
daa
nop
and
mov
mov
inc
mov
mov
loope
or
and
jnp
mov
std
lcall
outsb
cs
inc
js
cli
sti
gs
fiaddl
mov
or
fdiv
cmp
adc
mov
add
dec
fneni(8087
xchg
lret
js
dec
push
and
mov
jne
int
push
jle
or
jns
cmp
sbb
jle
gs
out
dec
add
xchg
out
pushl
leave
jge
leavew
pop
cmp
or
xchg
les
inc
sti
xorl
push
lds
into
cli
pop
scas
movsb
dec
outsl
fwait
sub
mov
cmp
into
push
pop
stc
ljmp
fimull
repnz
jg
and
pop
add
into
lods
push
int
xchg
sub
sbb
and
sub
xchg
cmp
aas
sbbb
jge
mov
xor
ret
aam
sub
lds
int3
ja
mov
sbb
ss
dec
lahf
ss
inc
faddl
out
dec
imul
in
adc
out
mov
popf
jbe
push
cwtl
or
xchg
mov
js
in
loop
js
jmp
fmuls
push
cmpb
sahf
or
imul
sub
in
xchg
mov
rolb
and
add
push
xor
stos
and
xchg
mov
jnp
lret
pop
in
dec
push
add
in
fldenv
dec
xchg
shrl
loope
in
sub
sbb
jg
mov
popl
and
inc
and
dec
idiv
call
jne
xchg
mov
push
add
popf
sub
and
aad
pop
into
dec
adc
test
pop
aam
dec
test
movsb
arpl
lsl
or
add
icebp
dec
lahf
fsubrs
shl
pop
lods
mov
scas
pop
pop
inc
lock
jle
ret
and
xchg
mov
push
push
jg
fistps
aaa
in
test
sbbb
scas
dec
add
jb
es
imul
test
cmp
inc
repz
lods
pop
mov
or
pop
xchg
lods
xchg
ds
aaa
add
fistps
outsl
ret
add
je,pn
loope
test
lret
test
clc
ret
mov
clc
icebp
sub
insb
dec
pushf
stc
mov
insl
mov
stos
or
dec
jmp
xchg
pop
jbe
push
xchg
testl
test
in
data16
mov
movsb
mov
lret
lock
xor
and
repnz
cmp
or
bound
popf
sahf
xchg
mov
sti
out
int3
cli
add
arpl
and
fisubl
popa
mov
loopne
or
push
dec
pop
lock
nop
add
dec
loope
cmp
rolb
adc
mov
mul
mov
addr16
pop
and
and
out
test
and
out
outsl
mov
mov
aaa
push
cmp
stos
and
loope
in
mov
xchg
push
dec
xchg
and
loopne
cmc
aad
mov
subl
pop
jl
hlt
andl
lds
and
sbb
jg
dec
hlt
shrw
lcall
ficoml
mov
mov
fmull
scas
sbb
jmp
int
adc
pop
adc
pop
out
leave
mov
mov
xor
subb
push
xchg
inc
xchg
push
adcl
xchg
push
jge
daa
repnz
push
cmp
lods
mov
daa
xchg
sbb
mov
inc
cmp
or
cmp
inc
cmp
lret
stos
pop
xchg
ja
xlat
xchg
xor
add
fucomip
mov
jb
mov
aad
divb
data16
lahf
test
jl
inc
adc
mov
popa
shrl
xor
in
outsb
mov
push
inc
rcll
inc
fistl
cmc
in
imul
dec
xor
lea
pop
test
std
pusha
lock
jecxz
push
loope
mov
sub
imull
push
pop
pop
shll
mov
mov
xlat
ljmp
jge
cmpsb
xchg
push
inc
orb
push
ror
jno
pushl
fucom
push
ret
sbb
fcom
mov
jl
adc
mov
dec
inc
daa
lcall
mov
fsubrs
ficoms
dec
movsl
adc
subl
data16
in
icebp
fs
aas
lock
mov
test
mov
and
xchg
sbb
fcmovb
pop
cs
or
pop
push
ds
sub
sub
or
pop
call
ss
aam
fdivs
dec
jmp
mov
cs
test
sub
mov
sarb
je
imul
into
iret
jne
jno
lods
insb
or
and
test
jle
hlt
lods
xor
push
sub
lret
cmp
fiadds
adc
dec
lock
pop
xchg
lahf
add
inc
adc
mov
xor
cli
inc
and
jl
fnsave
call
pushf
adcb
lds
dec
clc
push
mov
lea
icebp
mov
inc
cmp
in
sti
push
mov
jp
dec
cmp
jnp
dec
mov
adc
mov
mov
out
dec
jbe
adc
imul
sbb
call
pushf
or
fwait
jmp
push
in
lods
test
xor
outsl
or
mov
dec
mov
push
insl
outsb
lea
iret
mov
mov
jmp
lods
fs
jnp
cmp
adc
int3
aaa
das
jne
imul
inc
in
movsl
jge
in
cmp
push
aaa
movsb
push
shrb
push
les
adc
sar
negl
cmpsb
daa
fdiv
cs
push
js
lds
jmp
push
mov
je
leave
xchg
cltd
sub
xchg
jne
clc
adc
das
sahf
dec
inc
insb
jb
jno
jne
mov
stos
loopne
push
xor
cwtl
or
inc
data16
into
add
out
or
xlat
or
push
adc
out
sbb
sbb
popa
xor
enter
ljmp
inc
inc
imul
mov
daa
mov
pop
push
inc
or
pushf
dec
sub
sub
shl
leave
ret
sbb
aad
inc
sahf
subl
mov
push
rcll
cmp
dec
daa
ss
mov
or
mull
icebp
mov
jno
xor
mov
jge
add
test
cmpsl
test
repnz
sbb
push
addl
ss
mov
repnz
call
push
mov
or
jo
dec
mov
lods
xor
insl
fwait
adc
int3
leave
add
std
lea
jne
xorb
push
xor
jns
loop
adc
psubsb
call
xor
std
leave
ljmp
dec
int3
cmp
and
xchg
addr16
dec
cmp
cmp
shl
pop
inc
repnz
jno
sub
out
gs
cmpsb
mov
nop
jmp
stos
roll
mov
loope
mov
cli
jno
lret
jne
add
pop
or
jecxz
mov
je
sbb
call
lahf
xchg
mov
out
adc
ja
sub
dec
addl
mov
nop
adc
das
popf
sbb
pop
mov
add
adc
scas
fdivs
cs
mov
inc
cmp
dec
mov
xor
stc
and
rorl
orl
js
sbb
sti
scas
pop
mov
xor
flds
inc
fisubl
fwait
ds
les
pusha
dec
clc
ljmp
test
pop
sub
jno
pusha
sahf
pop
data16
add
aas
imul
lea
shll
ja
popa
rcr
nop
test
movsl
mov
mov
inc
js
jecxz
insl
fimull
test
cwtl
jp
mov
fsubs
int3
pop
das
in
cwtl
movsb
inc
add
insb
into
sbb
in
xor
lods
rcrl
inc
push
adc
mov
scas
or
xchg
or
xor
aaa
bound
mov
cli
jmp
ret
mov
aas
add
shrl
cmp
int3
add
shl
and
or
or
adc
jl
sbb
aam
cmp
dec
mov
adc
test
dec
xor
add
mov
repz
or
mov
repnz
jl
scas
xchg
icebp
lcall
pop
movsl
sahf
mov
and
sub
cld
popf
lods
push
mov
add
call
xor
adc
mov
inc
arpl
aad
sub
or
fimull
orb
outsb
xlat
jp
xchg
mov
adc
hlt
daa
scas
fdivp
inc
mov
push
jge
cmp
in
loopne
inc
fsubrs
cmp
inc
movsb
mov
or
mov
repnz
lods
pop
scas
lahf
outsl
push
ds
call
inc
or
fs
and
xchg
xchg
gs
repnz
pop
imul
ja
inc
mov
push
xlat
fwait
pushf
jmp
mov
ret
adc
pop
mov
pop
ret
and
clc
jle
xchg
mov
leave
jle
int3
mov
cwtl
mov
aaa
addb
scas
cld
loopne
pop
je
sub
xchg
flds
push
nop
push
sub
daa
mov
fwait
addl
pop
xlat
ja
pop
nop
xor
mov
mov
sbb
or
std
adc
outsl
mov
mov
mov
cltd
xor
push
out
push
or
or
xor
mov
leave
jle
je
adc
xor
pop
pop
mov
fdivrp
stc
sahf
ja
and
dec
fsubs
mov
bound
repnz
dec
fistpl
stc
js
dec
dec
dec
lods
add
rcll
xchg
cmp
int
mov
pop
dec
adc
or
outsb
mov
mov
movsb
in
arpl
sar
rcrb
mov
repz
mov
imul
fidivrl
adc
call
aad
ds
mov
nop
mov
cmp
lcall
packsswb
aam
fiadds
and
and
jp
insl
push
add
and
jmp
cmpsb
mov
cmp
call
test
mov
pop
pop
js
jns
leave
dec
pop
cld
loopne
and
fsubr
sbb
jle
rcll
cs
push
pminsw
pop
sbb
lods
aas
lods
cwtl
adc
push
popf
testb
inc
stc
pop
icebp
nop
jnp
xor
fistpl
ljmp
popa
or
xorb
repnz
int3
and
pop
push
ja
rcl
call
cwtl
add
iret
add
jnp
test
popf
rcl
sub
and
mov
adc
imul
pop
mov
test
jle
sbb
mov
sub
or
inc
adc
cmp
xor
out
mov
insl
xor
fistl
pushf
dec
pop
mov
jo
and
not
pop
lods
mov
lds
mov
test
insl
lret
in
dec
enter
push
lea
or
cmp
roll
xchg
addr16
xchg
mov
jmp
leave
push
outsl
add
cmpsb
sbb
jecxz
sbb
pop
inc
dec
or
ss
mov
xor
xor
add
fs
mov
cmp
fdiv
lret
clc
pop
mov
or
dec
call
adc
pop
out
xchg
les
xor
sahf
xor
cmc
and
daa
mov
push
cli
pop
jae
shufps
stos
pop
mov
mov
popa
ficompl
inc
xor
xchg
testl
leave
dec
aam
cli
mov
mov
out
fstps
je
and
cmpsb
pop
lahf
mov
gs
fcmovb
call
inc
cli
test
les
dec
pop
push
mov
lahf
mulb
xor
inc
mov
mov
lock
dec
stos
ds
dec
out
pop
out
jns
gs
jo
adc
mov
ss
push
scas
mov
mov
fimull
sbbb
sahf
imul
jg
hlt
sub
sahf
push
inc
pop
adcl
xor
xlat
aam
fxch
mov
xchg
lcall
adc
and
int3
ret
or
stos
push
xor
test
movsb
adc
fdivs
imul
enter
mov
cmpsb
dec
or
pop
dec
and
push
fbstp
cmp
and
notb
fiaddl
insb
push
arpl
sahf
xlat
mov
and
movsb
idiv
push
int
rorb
inc
push
sub
orl
es
mov
cmc
frstor
shlb
mov
ja
jnp
adc
pop
lcall
pop
mov
ret
sub
inc
nop
cmp
loopne
int
sahf
fsubrs
stc
data16
ret
outsl
sbb
dec
mov
lods
fcmovne
ss
jecxz
push
popf
jge
aaa
pop
cmpsl
out
mov
pop
mov
mov
test
xchg
mul
cmp
mov
rolb
push
and
adc
xchg
pop
outsb
in
sti
or
adc
cs
push
fimuls
into
ret
aas
cmp
add
loopne
testb
xchg
cli
mov
pop
mov
cmovge
idivb
xorb
aaa
gs
mull
into
mov
rol
push
jg
jae
lahf
adc
dec
arpl
adc
mov
roll
mov
arpl
pop
mov
jns
repnz
dec
stos
inc
stos
xchg
ficoms
inc
jge
or
push
loopne
sub
add
adc
lods
and
mov
and
dec
push
add
and
sub
cwtl
into
stc
aaa
inc
dec
rorl
inc
nop
in
pop
aad
cmp
dec
gs
lret
es
clc
xor
fdivrs
dec
adc
imul
dec
or
push
adc
es
adc
lret
xchg
pop
std
je
jb
mov
stc
sub
or
lret
call
add
fwait
xchg
insb
push
leave
mov
negb
push
jne
pop
loopne
xchg
add
jnp
lcall
cli
aaa
jp
add
push
or
xchg
lcall
in
lcall
jecxz
xor
clc
mov
jae,pn
test
lret
cmpsb
adc
xchg
in
push
int
pop
push
add
cmp
xlat
je
out
sti
mov
mov
les
pop
pop
lods
or
int3
pop
mov
add
call
pusha
call
mov
add
sbb
mov
insb
add
push
sub
pop
test
ss
fildl
inc
out
test
dec
es
les
repnz
stos
subb
out
cld
lea
add
cmp
or
sar
pop
stos
adc
cwtl
cwtl
daa
test
and
or
dec
mov
lret
out
and
mov
push
cmp
sbb
rcrb
mov
movsl
lahf
cmc
inc
inc
and
lret
je
dec
mov
adcl
lahf
xorl
lahf
cmp
xor
add
xor
leave
xor
jne
scas
mov
sbb
xchg
aaa
add
dec
jle
loope
jmp
js
aam
shll
cltd
mov
mov
adc
ret
cmp
and
lcall
ret
lods
scas
adcl
lods
clc
and
out
mov
lahf
mov
iret
xchg
hlt
lock
in
out
xor
scas
cmp
arpl
ljmp
aas
ret
outsb
int
pop
fildl
ret
incl
sbb
rcr
add
adc
xchg
sbb
dec
pop
push
jnp
cwtl
inc
lods
lods
jns
jo
daa
xlat
xchg
pop
add
mov
call
push
scas
in
ljmp
pop
insl
pop
mov
pop
xchg
push
push
mov
outsl
cmp
or
rclb
add
out
mov
rcrb
fldenv
mov
hlt
gs
in
mov
cld
addl
jmp
xor
stos
mov
loope
cmp
cmpsb
push
push
rcll
daa
mulb
test
cmp
push
test
inc
inc
out
cs
fidivs
adc
sbb
mov
enter
jnp
jnp
add
cmp
add
cld
sbb
or
js
insl
aam
jecxz
dec
dec
loopne
sub
test
and
mov
xor
sar
test
jp
popa
sti
and
jne
inc
mov
pop
bound
dec
push
sub
orl
aas
neg
ljmp
lcall
inc
ss
xchg
adc
stos
insb
mov
popf
or
push
dec
mov
lods
rclb
stos
xorb
mov
inc
jge
sbb
in
xlat
add
mov
add
push
mov
add
mov
fsubl
ja
dec
push
aad
dec
dec
cmp
push
ror
cmp
lret
sub
mov
stc
dec
xor
jns
sbb
push
iret
fsubs
insl
mov
insl
or
aas
adc
xchg
repnz
mov
stos
ret
mov
pop
adc
xor
adc
sub
and
mov
jo
stos
outsb
or
sbb
cmp
and
xor
add
cltd
fdivr
and
aas
ja
cmp
mov
mov
inc
jb
iret
pop
pop
sub
std
cmp
inc
mov
aam
mov
xchg
push
dec
lret
jecxz
shlb
outsb
or
jo
and
iret
inc
or
inc
sub
rorl
cmpsl
pop
sub
push
aaa
js
pop
test
or
inc
clc
mull
test
cmp
add
cmp
inc
int3
xchg
jle
xchg
lock
cwtl
stos
in
jo
pop
lcall
mov
mov
lds
ret
lcall
rcr
ds
jl
mov
popa
jne
stos
iret
sub
sbb
in
jae
cltd
push
dec
and
jmp
loope
and
idivl
mov
inc
in
cs
dec
xchg
outsl
pusha
add
fldl
xchg
jp
lea
and
lea
pop
mov
addl
cltd
jae
pop
xlat
out
outsl
and
jle
jo
les
shrl
jg
std
repz
push
pop
inc
xorb
pop
xor
push
into
jmp
pop
mov
or
shrb
cltd
into
inc
push
push
aad
mulb
xor
mov
jecxz
fisttpll
popf
fnsave
sub
mov
out
add
jbe
inc
arpl
je
push
cltd
xchg
push
cwtl
sub
xchg
xor
rcrl
lea
arpl
fucomi
loopne
outsb
adc
shl
mov
inc
in
pop
and
dec
outsl
jns
sbb
push
fcmovnu
jle
or
pushf
sub
test
movsl
sbb
stos
inc
cmpl
add
out
sarl
arpl
mov
jns
add
cmc
sbb
pop
lret
push
xchg
popf
pop
pusha
sti
xlat
clc
inc
and
mov
sbb
data16
add
push
popl
xor
mov
mov
in
pushl
shll
push
xlat
scas
ljmp
push
mov
imul
stc
xor
mov
inc
dec
xchg
hlt
dec
add
mov
bound
dec
test
mov
sub
test
add
dec
fisubrl
xor
lcall
pop
push
push
stos
mov
sbb
jecxz
ljmp
hlt
orl
jg
adc
addb
aam
addb
inc
mov
adc
mov
jne
jnp
jo
or
dec
adc
add
fldt
dec
idiv
andb
or
test
iret
xor
ficomps
mov
jbe
mov
jne
xor
adc
lea
add
mov
sbb
xbegin
mov
pop
inc
dec
mov
xchg
mov
pcmpgtw
pop
sub
push
mov
push
int3
shrb
xchg
cmp
jmp
test
into
sbb
push
xorl
adc
mov
xchg
lret
ljmp
xor
push
imul
imul
mov
je
cwtl
cmpsl
mov
scas
and
scas
dec
fisttpll
xchg
sbb
cwtl
dec
lret
sub
xchg
imull
push
xor
leave
inc
mov
sub
push
insb
xchg
and
test
fisubl
arpl
aaa
mov
out
std
mov
mov
adc
jb
push
lds
mov
sub
push
test
arpl
inc
push
mov
push
push
shrb
in
pop
ds
and
xchg
sti
cs
mov
jb
out
xchg
or
sbb
gs
dec
mov
xlat
mov
mov
je
sbb
les
mov
decb
xchg
outsl
cld
mov
sub
jno
data16
jg
in
mov
lea
nop
fildll
cmp
push
lret
dec
push
popf
rol
mov
or
or
or
rcrl
xchg
mov
cld
adc
sub
pop
push
jecxz
lret
clc
xor
pop
sti
ret
pop
fsubl
mov
movb
das
fadds
sbbb
and
pushf
adc
push
popf
scas
sub
push
add
ret
and
add
dec
or
xchg
shll
roll
jecxz
fcoms
lods
lods
dec
cmp
cmpsb
loopne
insl
mov
sarb
push
pop
pop
adc
mov
cltd
int3
sub
xchg
icebp
inc
push
sub
push
popf
inc
lret
outsb
xor
pop
cwtl
cmc
jle
push
insl
ret
js
xchg
js
and
cmp
aad
push
movsl
inc
fwait
mov
xor
ljmp
pop
xchg
mov
add
cmp
add
hlt
or
lea
fildl
push
pop
jl
sub
push
pop
cmp
inc
pop
lods
js
xor
into
orl
jl
sub
push
aas
idivl
icebp
mov
lods
ret
xchg
mov
and
ljmp
or
or
pop
in
pop
icebp
stc
out
in
into
or
popl
movhps
lock
cmovne
js
push
sar
movsb
jns
inc
mov
movsb
mov
push
aam
pop
rcrb
in
pusha
xchg
inc
cld
dec
insb
jns
sub
jb
jmp
loope
xor
sahf
out
gs
icebp
ja
popa
and
lock
movsb
mov
push
jae
mov
sbb
fptan
into
cld
mov
mov
fisttpll
into
xor
loop
out
xchg
xor
clc
jns
incb
push
xchg
outsb
xchg
mov
sub
ja
insb
js
mov
divb
stos
mov
movsb
adc
jle
shlb
and
outsl
sub
movsb
jnp
sub
addr16
das
in
pop
clc
ja
fildl
sub
jnp
lret
sbb
ret
movsb
imulb
inc
int
movsl
push
sahf
or
xchg
adc
fwait
inc
testb
jb
sbb
jg
test
or
mov
pop
aam
cmp
xchg
or
out
or
aas
add
xor
icebp
add
pop
nop
add
push
push
ret
mov
pop
push
lret
and
call
iret
pop
hlt
out
xor
xor
outsl
bound
and
pusha
xchg
xchg
xchg
xor
xchg
cmc
call
inc
iret
filds
jp
xchg
out
das
addl
sub
fisubl
or
scas
or
sbbl
ret
pop
push
mov
push
mov
cmc
dec
dec
pop
adc
add
sub
icebp
mov
mov
divl
mov
mov
lods
popl
xor
popf
inc
xchg
ret
push
push
and
mov
mov
inc
inc
loope
xor
sbb
inc
test
mov
ja
clc
sbb
test
or
scas
or
push
sub
inc
sub
call
test
jb
sub
enter
mov
out
divb
popa
stos
out
outsl
cmpsb
push
adc
xor
js
fs
cmp
mov
outsw
jnp
sahf
adc
repz
and
add
fs
mov
sahf
or
inc
pop
push
push
jno
pop
sub
jle
mov
and
cmc
inc
or
push
pop
adc
ljmp
xchg
jno
fstpt
rcrl
mov
movsl
lds
int
in
inc
pop
fwait
cmp
mov
out
enter
insb
sub
jmp
push
or
inc
jne
dec
cmp
sti
cmp
push
add
xlat
lea
lock
int
out
jmp
add
sbb
scas
ror
fmull
out
imul
inc
mov
mov
je
mov
add
ljmp
ljmp
call
fucomip
sbb
fistl
cld
test
pop
and
jg
inc
push
mov
inc
sahf
lcall
ja
xchg
sbb
xor
js
push
mov
cmpsb
iret
xchg
mov
mov
cmp
jbe
mov
repz
dec
out
xor
mov
andb
mov
aaa
xlat
cmp
sub
adc
cmp
sbb
cmp
xor
lcall
mov
ds
xor
xor
sub
push
into
sub
js
pop
aam
adc
jge
inc
arpl
fbld
pop
push
out
int3
mov
stos
pushf
and
aas
jp
push
cmp
daa
push
data16
inc
mov
repnz
dec
cmpsb
imul
push
test
or
shll
js
jne
loope
mov
sub
jp
cwtl
or
iret
insb
in
push
inc
movsb
out
jmp
shll
push
mov
mov
jg
fsubl
iret
xchg
into
jbe
das
pop
add
pop
push
inc
jge
int3
inc
fsub
inc
ss
mov
cli
jno
fdivrs
aas
out
mov
test
jne
outsl
cmp
xor
decb
push
push
addb
xchg
lods
xchg
repz
pop
stc
js
stos
mov
mov
ja
xor
sbb
scas
movsb
lods
shll
mov
js
pop
push
dec
lods
mov
mov
fisttps
cmp
in
sub
mov
or
mov
mov
adc
je
xchg
cwtl
xchg
addl
push
adc
inc
sub
aas
dec
push
cwtl
sbb
inc
inc
mov
jbe
je
push
cld
shl
mov
push
mov
xchg
sub
sti
mov
mov
xchg
sub
xchg
pop
arpl
shl
xor
push
mov
sub
int
dec
mov
pop
or
sbb
lea
sbb
call
jb
cmc
int
cmpl
hlt
in
aas
mov
shll
movsl
push
jmp
sbb
imul
data16
fwait
negb
std
popf
imul
cmp
and
sti
out
pushf
fimull
mov
jg
and
scas
outsl
daa
jns
inc
mov
mov
sti
fiadds
mov
icebp
lcall
cmpxchg
jae
popa
pop
mov
dec
cmp
out
adc
popa
cmp
jns
and
pop
dec
pop
rcrl
aam
out
repnz
xchg
out
fdivrs
inc
fdivl
sub
adc
cltd
loopne
js
dec
out
xor
xor
push
or
dec
gs
and
push
sbb
rcll
fistpl
inc
push
das
mov
mov
dec
cmp
in
sahf
sub
mov
and
iret
out
pop
fistl
iret
lret
fwait
add
or
repz
sub
lods
mov
mov
repz
in
jb
add
jl
aas
outsb
int
and
jmp
mov
sbb
fstl
dec
movsl
lahf
jmp
cmp
ret
test
cltd
in
mov
jl
xor
and
push
mov
aaa
pusha
inc
lret
fcomps
cld
jb
and
mov
adc
in
ret
pop
jecxz
inc
push
outsl
add
mov
jne
fistps
jecxz
leave
lea
lods
and
in
jp
cwtl
in
arpl
stc
loopne
jb
cmp
dec
fs
mov
or
xchg
cmp
xor
jmp
or
inc
ss
dec
imul
in
add
sbbb
xor
ljmp
sub
into
lcall
and
clc
hlt
test
orl
shr
sbb
xchg
mov
outsl
aaa
and
adc
inc
inc
mov
aam
mov
test
inc
sbb
test
inc
mov
mov
lret
lcall
ds
push
dec
stc
daa
mov
dec
pusha
test
adc
scas
ficoms
out
xlat
jl
jl
adc
lcall
les
lahf
cli
loop
xor
jae
bound
imul
int3
sub
mov
stos
movb
gs
fidivrs
rorl
sbb
ret
addr16
pop
loop
mov
inc
cmp
mov
pop
mov
pop
xor
sbb
inc
jbe
outsb
and
imul
iret
stc
push
cli
daa
inc
push
push
push
ss
call
mov
ja
call
xchg
out
fwait
mov
out
addb
xchg
push
sti
insb
fnstenv
pop
popf
inc
rcrb
movsb
xchg
es
and
mov
dec
je
test
push
addl
insb
pop
xorb
push
xor
out
popa
sbbb
add
mov
add
sar
les
fs
mov
xchg
add
dec
sbb
fs
arpl
mov
pop
sbb
shl
hlt
push
push
xchg
stos
pop
decl
test
test
icebp
inc
or
mov
daa
sbb
aaa
mov
sbb
int3
and
push
xor
sub
and
fmuls
xlat
repz
mov
sub
aam
ja
push
inc
addr16
mov
mov
xchg
popf
mov
jl
or
cmpsb
lds
shlb
fcmovnb
enter
lret
mov
push
xor
loop
js
sbb
jo
int3
test
dec
sub
push
subl
rolb
adc
cltd
mov
jmp
aam
xchg
or
gs
lret
xchg
gs
mov
imul
xchg
and
syscall
sti
xor
adc
pop
in
add
aas
fildll
cmc
push
mov
adc
xchg
iret
rorl
jnp
mov
aad
xor
mov
adc
rcl
adc
lods
add
lahf
xchg
and
es
inc
inc
lahf
sub
fucomi
test
cmp
dec
scas
dec
ds
pop
mov
in
addr16
ljmp
inc
or
scas
lods
andb
leave
push
les
in
imul
jle
hlt
xchg
in
and
sub
test
dec
std
test
shll
xlat
out
inc
clc
push
jns
sbb
andl
sbb
in
pop
clc
mov
in
cmpsb
fadds
leave
inc
movl
xchg
sub
pop
mov
cmp
mov
pusha
sbb
jmp
xchg
in
outsb
pop
jge
push
dec
inc
loope
leave
mov
arpl
into
mov
inc
out
mov
in
inc
and
sti
push
js
orl
xchg
mov
movsl
add
mov
mov
mov
adc
daa
inc
lock
pop
or
sub
jne
mov
ffree
lret
adc
add
aas
scas
fistpll
and
dec
js
in
cltd
insb
jle
in
cmpl
pop
imul
jns
mov
inc
dec
lods
or
jbe
add
pop
hlt
jnp
aam
jg
imul
xor
jle
sbb
rolb
sbb
pop
add
inc
dec
imul
push
testl
adc
mov
in
into
aam
add
icebp
push
mull
mov
arpl
dec
les
sbb
inc
add
xor
andb
pushf
shrb
inc
pop
imulb
cmp
cmpb
fwait
pop
inc
push
pop
stc
mov
mov
imul
add
ss
std
xchg
jecxz
push
rcll
mov
ret
mov
push
sub
sub
repnz
lcall
pop
shlb
dec
mov
inc
loop
sub
sbb
adc
push
imul
jns
lcall
hlt
mov
fstpt
push
mov
inc
mov
sbb
popf
push
in
mov
fcomp
cmpsb
dec
shrl
xchg
dec
pop
fildll
xor
aas
sbb
inc
inc
add
repnz
insl
jb
rorb
ret
hlt
mov
loope
pushf
cmp
rcl
test
xor
pop
daa
int3
xchg
imul
push
sub
adc
imul
push
cmp
cmp
jne
mov
decl
adc
jmp
jae
out
mov
dec
test
dec
addr16
cwtl
pop
clc
push
dec
cmpsb
adc
jb
imul
bound
and
mov
or
stos
mov
xchg
sbb
jmp
in
push
test
lods
nop
int
sbb
enter
xchg
jge
pop
fcoms
sbb
mov
popa
sbb
fists
inc
dec
mov
and
lcall
arpl
shlb
inc
mov
pop
cmp
jg
stc
lret
adc
imul
lcall
dec
and
sbb
aam
or
pop
fwait
loopne
fptan
and
lret
movsb
cmpsl
cli
jae
popa
mov
jo
xchg
stc
mov
mov
negl
into
ja
test
mov
mul
inc
cmp
cmp
xor
push
nop
jno
call
out
push
sub
dec
pop
push
and
out
sarl
mov
mov
cmp
jb
sbb
cmp
xchg
mov
jbe
cs
and
jge
xor
mov
jg
mov
adc
es
dec
jg
ljmp
mov
cmpsl
mov
ror
loop
test
mov
inc
cmp
imul
sub
mov
test
mov
neg
jne
aaa
jg
sub
pusha
std
aad
test
adc
mov
jo
test
mov
mov
cs
mov
push
adc
gs
sbb
push
cli
shrl
lock
mov
push
ja
test
in
pop
je
mov
es
xor
ljmp
ds
mov
adc
or
lcall
pushf
js
jnp
mov
push
int3
rcrb
jl
sub
mov
mov
mov
and
xchg
out
pop
outsl
pusha
popf
fsubr
movl
bound
sbb
ljmp
test
and
adc
or
cltd
sbb
mov
adc
xchg
fisubrl
imull
fprem
cmp
enter
pop
lea
int
mov
pop
ret
scas
push
insb
out
sub
push
inc
jb
lret
insl
int
or
testl
push
out
mov
mov
mov
mull
mov
icebp
sub
add
xchg
mov
fwait
push
in
mov
jmp
mov
adc
divl
jbe
in
jns
cmpsb
xchg
mov
push
stc
adc
loop
dec
pop
popf
xor
scas
mov
pushf
dec
cmpsl
sub
jl
aaa
addl
scas
inc
mull
cmc
dec
outsl
jb
xchg
jbe
ss
in
mov
sbb
xchg
cld
push
ds
mov
fwait
xor
cmp
fwait
in
jnp
repz
xorl
inc
lods
add
cmp
add
or
xor
jb
mov
mov
test
inc
rcrb
orl
movsb
aam
pop
push
popa
xchg
test
lock
lods
jo
and
push
je
mov
jge
pop
jne
pop
push
fdivr
rorl
jmp
pop
call
sbb
lods
jns
and
insb
js
aam
out
repnz
sub
add
mov
pop
xor
je
outsl
bound
rcll
xchg
or
cmpsl
lahf
push
stos
cltd
test
sbb
sbb
pop
xchg
mov
out
aas
sbb
pushf
xchg
mov
push
in
sub
mov
outsb
test
in
add
mov
aad
sbb
lods
pop
div
fsubrl
rorb
mov
repnz
jge
jg
les
int3
or
scas
cmp
es
lods
mov
or
mov
sub
pop
rcll
notb
test
mov
shrb
pop
icebp
and
xlat
leave
pop
arpl
dec
subl
mov
adcl
inc
and
dec
das
rcr
or
jbe
xor
jmp
dec
push
cmpsl
fistpll
ret
sub
insb
push
mov
pop
out
cwtl
int
in
dec
cmp
scas
repz
jne
inc
fcoml
movsl
push
in
sbb
mov
gs
sub
rcrb
sub
das
shlb
int3
jbe
js
xchg
data16
mov
into
shl
xor
loop
add
inc
fidivrl
pop
aas
ror
clc
mov
mov
sub
ja
fstps
pop
xor
imul
outsb
or
arpl
push
into
push
fldenv
aam
mov
aam
ret
aas
sbb
jno
sbb
daa
push
rorl
cmp
lods
movsl
mov
imul
jno
ljmp
pop
sub
jnp
mov
test
js
test
out
mov
bound
sti
mov
inc
aam
arpl
sbb
fwait
in
idivb
sbb
out
mov
fsts
test
lock
shll
das
pop
inc
ror
xchg
adc
xchg
push
sbb
dec
mov
fsubl
insb
js
mov
xor
notb
clc
push
movsl
xor
cld
rcl
or
jle
push
add
leave
lods
imul
adc
dec
dec
jecxz
push
pop
pop
push
outsb
push
dec
repz
fisubs
sarb
int3
dec
sub
and
loop
int3
call
dec
call
das
mov
int
enter
jg
lcall
addl
fstpt
dec
testb
push
outsb
lods
and
jl
pop
fstpl
in
dec
std
mov
addr16
rcl
in
push
cwtl
push
push
dec
in
jp
mov
sbb
jle
call
mov
xchg
sti
pusha
pop
ds
push
rolb
sti
movsb
aam
inc
cmp
sub
pop
mov
stc
jl
pop
inc
mov
inc
add
je
shlb
ljmp
mov
pop
lods
mov
in
dec
add
xorl
andb
push
inc
push
div
pop
lahf
mov
frstor
in
cmp
sbbb
mov
mov
sub
push
push
sahf
or
and
jge
repnz
fstpt
mov
rcr
mov
cld
popf
adc
nop
mov
xor
leave
sbb
jle
add
xlat
xchg
mov
push
shrl
xchg
and
rolb
jmp
idiv
fldenv
cltd
sub
ss
pop
adc
mov
ret
dec
cmp
imul
cs
test
mov
int
shll
or
ret
subw
inc
xchg
test
test
repnz
je
ror
and
push
or
out
lea
cmp
jne
imul
push
sbb
inc
rorl
lret
mov
mov
sbb
insb
das
hlt
sbb
push
pop
xor
mov
sub
or
repnz
adc
jb
shlb
xor
in
repz
fisttpl
and
push
lds
cmp
jg
jne
mov
andl
cmp
insb
addl
fisubl
inc
mov
xor
mov
cmp
scas
mov
mov
mov
scas
pop
push
cmp
cmp
jp
pop
in
lds
mov
notl
jae
pop
ljmp
popa
dec
xor
int
int
xlat
jne
xlat
sbb
out
push
sub
xchg
pop
movsl
data16
pop
out
cwtl
dec
inc
iret
add
push
movsl
sbb
test
xorb
dec
jae
xchg
lcall
jmp
pushf
mov
leave
pop
jmp
push
push
adc
or
rcll
out
inc
xor
sbb
mov
enter
lahf
and
sbbl
pusha
ret
arpl
jmp
add
js
adc
fisubrs
stos
mov
or
dec
icebp
mov
push
sbb
mov
dec
sbb
or
push
subl
xlat
pop
repz
and
sbb
xor
fdivs
mov
sahf
xchg
jl
xchg
pop
outsb
or
sbbl
iret
neg
nop
shll
fcmovne
stos
mov
stos
push
push
daa
call
outsb
xchg
or
and
fnstcw
out
out
jle
jae
ljmp
das
pop
sbb
mov
insl
int3
pop
sub
ss
jmp
in
pop
ss
arpl
les
outsb
test
cmp
push
xor
fs
push
or
xchg
call
in
faddl
xchg
inc
mov
mov
mov
push
mov
inc
jo
cwtl
int
mov
jne
fsubrs
sahf
push
pusha
loope
jmp
mov
cmp
loopne
mov
inc
outsb
rcrb
fmull
push
push
sbbl
cld
loopne
arpl
jb
xor
aaa
fstpt
repnz
mov
popa
rcll
cmc
pop
adc
mov
inc
in
add
sub
xor
shlw
inc
cmpsb
arpl
or
inc
in
pusha
dec
inc
cmp
cmp
adc
xchg
mov
xor
scas
shll
add
in
dec
outsl
mov
sub
pop
pop
adc
das
test
mov
cwtl
aas
mov
sbb
pop
subb
sub
push
mov
leave
outsl
inc
adc
mov
rclb
sub
fmull
icebp
stc
mov
fsubrs
mov
cmc
push
loopne
sti
cmp
jge
cltd
add
adcb
ret
push
outsb
cld
sbb
in
jo
adc
cld
dec
and
jno
test
iret
inc
cmp
pop
das
add
loopne
in
loopne
cmc
stc
out
jecxz
inc
icebp
or
cmc
jb
hlt
daa
jle
inc
scas
push
cmp
cmp
in
in
fst
xor
sti
test
and
cmp
pop
xchg
and
fldt
jns
jle
cltd
aam
lds
loop
push
sub
mov
xchg
pop
loope
pop
mov
popw
mov
jecxz
sahf
add
test
push
pop
pop
call
or
add
push
adc
test
cmp
adc
dec
pop
incl
inc
mov
shr
cwtl
js
cwtl
or
icebp
or
sbb
add
daa
dec
xlat
xor
jecxz
adc
imul
fsubrs
out
adc
in
cmpsl
xchg
hlt
xchg
shrl
jmp
dec
in
mov
mov
mov
and
pop
popf
add
sbb
aas
fmul
fs
les
mov
fdivs
mov
add
aad
push
ret
stc
fcmovu
xchg
push
cmp
adc
mov
fildll
mov
call
cs
push
imul
ret
aad
xchg
hlt
and
push
ljmp
xlat
jge
and
pop
dec
in
stos
sub
das
jno
rorb
fisubrs
push
mov
jno
sbbb
mov
jnp
pop
jbe
and
mov
imul
xor
cmovb
sbb
pop
aaa
mov
sar
and
sub
jo
sbb
cli
dec
jns
jp
jle
clc
or
lods
xlat
and
dec
test
push
dec
iret
sbb
int
push
scas
mov
sti
dec
popa
and
bound
dec
lret
jno
or
pop
hlt
fcoms
ds
push
das
mov
pop
cmc
ds
stos
pop
fsubp
ja
add
psubw
rcr
rcrb
xchg
xchg
and
sub
sub
or
xor
loopne
push
push
roll
or
lea
dec
inc
daa
cmp
cmc
or
ret
jmp
adc
lds
les
cmp
in
aas
jb
mov
mov
cmp
leave
pushf
ja
shl
mov
jnp
lods
jp
and
dec
cmpl
push
outsb
xor
scas
mov
outsb
scas
fwait
mov
push
fwait
loop
daa
push
and
mov
fists
add
fmuls
mov
jae
lods
insb
jno
mov
and
stc
jno
int
out
push
push
cmc
movsb
movsl
aam
cmp
sub
cmp
clc
sarb
loope
sub
fsubrl
sub
xor
mov
movsb
push
dec
push
adcl
xor
jecxz
inc
cmp
out
xor
adc
push
or
fsubrp
jbe
pop
dec
inc
pushf
cmp
iret
and
xlat
pusha
or
add
lret
fsub
jb
xor
mov
mov
and
int
sbb
sub
out
mov
mov
xor
jp
cmpsl
das
fwait
xor
enter
mov
or
mov
dec
jo
cmp
cmpsl
test
add
fld1
mov
xchg
movsb
xor
xchg
xchg
lods
sbbl
das
pushw
inc
sbb
adc
outsb
lcall
xchg
aad
stc
sub
or
or
jle
xchg
and
lahf
xor
testl
mov
dec
lea
push
add
cmp
movsl
in
enter
push
mov
fwait
mov
test
mov
inc
es
pop
mov
jno
and
lds
jle
pop
push
xor
mov
out
stos
inc
pop
lods
inc
pop
jnp
add
mov
fndisi(8087
jmp
repnz
gs
popa
call
lahf
pop
test
cmp
and
mov
lods
sahf
sbb
xlat
and
sub
push
sbbb
imul
mov
repz
insl
cwtl
jp
repz
push
and
into
and
in
xchg
and
xlat
mov
out
mov
xor
loopne
xor
xorb
pop
jecxz
cmp
sub
es
push
or
es
sub
je
addr16
arpl
inc
xor
push
fbstp
xor
pop
mov
imul
movsb
icebp
scas
push
cmc
orb
into
popf
imul
cmc
sbb
cltd
or
loop
es
jle
or
js
mov
mov
push
jne
xchg
adc
aam
rclb
cmpsl
mov
jne
mov
shrl
cltd
jmp
sbb
stc
lcall
and
subb
mov
cmpl
xor
repnz
push
dec
jnp
dec
ror
sub
dec
sbb
jns
loopne
fs
outsb
pop
cltd
icebp
mov
pop
adc
push
mov
inc
sub
stos
data16
mov
cmp
and
ja
or
push
aaa
aam
mov
imul
nop
sub
addr16
fidivs
movsb
push
inc
fs
mov
jl
inc
jae
gs
push
xor
xchg
add
hlt
out
xchg
push
xchg
pop
imul
call
xor
lea
out
iret
adcb
scas
test
clc
in
movsl
push
mov
xchg
and
popf
fisubrs
test
inc
xchg
out
data16
mov
inc
jnp
jne
jmp
fwait
inc
loopne
dec
sub
sub
iret
outsl
xor
pushf
jae
jg
shrl
outsb
push
in
cmp
test
ret
push
xchg
mov
outsl
xor
jne
lcall
dec
jmp
jae
sbb
mov
xor
push
loopne
lds
loopne
pop
push
call
adc
pop
aam
shr
fbstp
shlb
mov
stc
pop
fstpt
je
pop
fmuls
xchg
mov
lods
je
xchg
mov
mov
xchg
sbb
or
mov
test
outsb
lods
mov
or
sub
stc
sbb
icebp
push
sbb
fwait
dec
out
iret
insb
fidivs
sub
in
inc
repz
dec
pop
and
fucom
testb
idivl
test
mov
sub
in
xor
shll
in
cmp
aas
mov
arpl
pushf
cmp
mov
lds
data16
leave
cmp
jg
mov
popa
orl
push
dec
xchg
xchg
cmpsb
xor
cmc
pop
push
jno
cmp
mov
sub
jns
mov
xchg
xor
int3
cwtl
lock
add
popa
push
cmpsl
and
movsb
mov
int3
fdivs
sub
cmp
test
nop
add
xor
cli
push
clc
outsb
loopne
cmp
xchg
sbb
enter
in
push
cld
movl
or
std
lea
xor
movsb
pop
in
fistps
mov
lods
call
push
testb
lahf
loope
xchg
and
mull
int3
dec
mov
and
pop
mov
fs
les
cmp
or
pushw
imul
outsb
lods
clc
cli
aad
mov
jnp
jp
sub
fisttps
ss
ja
lret
mov
das
push
push
push
push
aam
add
xor
aam
xor
fs
jne
stos
mov
jl
test
add
repnz
mov
jmp
jo
stos
xchg
popfw
jg
lcall
leave
aaa
and
adc
mov
leave
popf
mov
ja
adc
dec
daa
fisttpll
jbe
or
nop
cs
cmp
mov
mov
jmp
mov
lock
fldenv
popa
loopne
test
sbb
dec
add
mov
dec
adc
out
mov
imul
sub
jle
gs
mov
int
xchg
mov
gs
jmp
mov
jge
inc
inc
sbb
aam
in
pusha
orl
hlt
les
ret
cli
inc
or
cmp
push
add
les
cmc
push
pop
test
dec
enter
and
out
lock
push
push
es
sti
rdtsc
push
mov
outsb
jne
outsl
sub
popa
fdivrl
leave
aaa
or
push
std
inc
jg
adc
es
add
mov
iret
lea
push
and
in
or
shll
and
inc
dec
mov
cmpsb
xchg
add
mov
orl
cmp
dec
sbb
loope
hlt
aad
mov
sub
xor
lret
test
into
scas
test
aaa
fiadds
lcall
stos
bnd
imul
les
xchg
out
mov
mov
cmpb
popa
or
and
dec
mov
and
cltd
sub
lods
mov
mov
dec
iret
jecxz
jnp
xchg
dec
pop
push
mov
mov
sbb
in
push
repnz
jb
dec
lods
rcr
and
mov
in
inc
loope
pushf
dec
jns
sub
jb
mov
cwtl
cmp
scas
lret
xor
cli
cld
mov
cltd
mov
mov
fistpll
add
mov
inc
loopew
dec
add
xor
jbe
mov
daa
mov
sub
mov
fnstcw
push
lea
push
jno
sarb
dec
pusha
jle
adc
fs
cmpsl
sub
mov
mov
cli
insl
nop
add
mov
jmp
out
cmp
cmp
into
loope
inc
jb
inc
movsl
scas
mov
pop
or
sub
mov
movsb
mov
clc
dec
push
cmp
mov
rorl
sub
stos
cltd
cli
js
in
mov
js
xchg
enter
loope
mov
pop
jb
add
rcll
cmp
fwait
mov
daa
mov
enter
jp
rorl
add
mov
sbb
andl
pop
shrb
cmp
repz
rcrb
mov
jo
xor
pop
pop
repnz
push
jns
cmp
shl
mov
xchg
test
push
mov
xchg
or
cmp
les
jle
inc
fincstp
pop
ljmp
int
ffree
xchg
mov
scas
sub
outsl
add
inc
popa
hlt
ja
push
inc
sub
cmp
jg
jb
adc
lahf
addr16
xchg
mov
sete
cmp
xchg
in
xor
js
sub
cmp
lock
inc
addr16
icebp
and
and
aam
fwait
or
or
icebp
jecxz
fisttpll
adc
lret
dec
out
stos
jl
mov
lret
inc
cmc
es
out
imul
aam
or
cmp
enter
add
out
sahf
add
addr16
pop
movsb
outsl
dec
mov
imul
sbb
iret
mov
or
sbb
dec
popl
insl
jbe
dec
rorl
cmpsb
or
adc
mov
mov
jbe
dec
cwtl
adc
dec
push
cmp
mov
pop
sub
xlat
xchg
pop
cltd
out
out
es
scas
bound
int3
xor
push
mov
rcll
in
and
cwtl
das
pusha
sahf
and
xchg
or
rcl
dec
movsb
sti
cmp
sbb
aam
sub
mov
cld
push
cltd
in
dec
sub
rcr
leave
mov
dec
push
loope
rcr
mov
aas
pop
movsl
aaa
pop
push
cmp
xchg
adc
ficoms
daa
in
outsl
lea
jle
add
pop
fs
push
adc
push
pop
or
xchg
adc
test
push
sbb
cmp
aam
xor
mov
pop
push
inc
lds
push
addr16
sub
bound
sbb
cwtl
cmpsl
jbe
inc
and
push
adc
xor
int
cmp
sbb
fisubl
inc
jb
fisubl
or
add
sub
cmpsb
inc
mov
popa
xchg
inc
aam
xor
lret
inc
aam
or
test
movsl
sahf
or
fstpl
sbb
cwtl
pop
jl
test
pop
movsl
mov
xchg
dec
pop
mov
ja
lahf
add
mov
or
pop
es
lcall
xor
pop
test
je
aad
push
sub
push
cld
lea
mov
cmpsl
pop
dec
popf
pop
pop
xchg
mov
lcall
add
add
inc
xorl
jae
jae
jmp
sarl
shrb
cmp
bound
mov
cld
gs
lods
mov
xor
shlb
adc
ja
es
fstl
cmc
addr16
adc
mov
adc
or
add
ret
test
mov
and
push
pusha
clc
mov
mov
sbb
adc
pushf
cld
into
push
pop
in
mov
outsb
push
fnstenv
adc
dec
jne
mov
enter
aas
mov
xchg
inc
addr16
in
fnstcw
aam
lea
push
inc
int
scas
aas
mov
push
lods
or
decb
xchg
sub
sbb
mov
aad
pop
les
dec
sbb
gs
pop
mov
or
push
icebp
xchg
inc
mov
adc
cltd
xchg
addr16
xchg
movsb
shll
jecxz
cs
int3
insl
add
test
mov
fcmovnb
scas
mov
hlt
or
movsl
rcrb
cld
cmp
mov
push
imul
imul
pop
push
inc
pusha
mov
outsb
ffree
stos
pop
inc
xchg
mov
mov
mov
repz
in
mov
les
fstl
imul
jle
cmpsl
cmp
lea
aad
inc
addb
sub
dec
pop
enter
ss
rcr
ficoms
rcrb
or
imulb
mulb
cmpsl
jbe
movsl
jge
out
ret
into
and
dec
and
test
adc
shl
cmp
ret
fists
insl
fwait
loop
les
sbb
cmpb
and
sub
adc
pop
jg
sbb
xchg
xchg
data16
hlt
xchg
hlt
mov
mov
sahf
jns
popa
mov
pop
jl
cmc
aas
and
jno
imul
sbb
outsl
mov
sahf
sbbl
or
in
mov
and
sub
movsl
or
adc
aaa
fwait
icebp
stc
in
nop
xor
sbb
das
cwtl
je
pop
sub
dec
and
arpl
ljmp
loop
jno
aam
stos
lcall
xchg
mov
inc
mov
finit
inc
dec
cmpb
push
int3
cmp
jns
mov
mov
sbb
mov
dec
movsb
addr16
into
outsb
int3
pop
cmp
inc
or
mov
cwtl
repnz
cmp
mov
outsb
xchg
mov
jecxz
or
adc
push
dec
sub
sbb
jbe
xchg
pushf
out
jno
jns
lcall
xor
ret
mov
xchg
fists
pop
sub
pop
sub
mov
xor
sbb
dec
jnp
adc
add
cmp
sub
sahf
loope
jl
imul
sahf
leave
xor
jge
in
xor
loopne
rcrb
cmp
cmc
scas
fsubl
xlat
push
mov
jno
mov
push
lods
cmp
shll
mov
pop
adc
ret
jecxz
enter
cmc
pop
jp
shrl
mov
xchg
mov
lahf
dec
mov
arpl
push
or
sub
in
cwtl
sub
es
pop
xor
jns
jae
cld
in
cmpsl
in
daa
jecxz
hlt
gs
insb
adc
mov
jbe
call
or
inc
cli
or
fs
por
loop
imul
loope
std
aas
rcrb
je,pn
xchg
pop
sahf
mov
sti
mov
xor
pop
loopne
lods
push
in
int
add
mov
imul
mov
loope
cmp
or
loope
jae
mov
sub
xor
idivb
je
cltd
xchg
mov
and
stos
mov
mov
jbe
jb
sub
arpl
mov
jp
pop
test
add
fs
jb
shll
sub
dec
fidivrl
outsb
icebp
jbe
sbbl
pop
add
mov
ss
lods
push
push
cmp
and
adc
cmpb
xchg
fidivrs
clc
push
ret
pop
ret
pop
scas
jmp
fdivp
mov
mov
sahf
leave
icebp
imul
inc
cmpsb
leave
pop
inc
sbb
lods
or
xor
push
test
out
sti
hlt
js
sbb
mov
jo
leave
add
fwait
ds
out
scas
jg
out
imul
lods
mov
jbe
mov
push
insl
into
or
inc
jae
fdivrs
inc
push
shlb
imul
sbb
adc
jae
mov
imul
xchg
push
xchg
int
jmp
pop
addr16
mov
jnp
pop
mov
lret
or
lret
or
add
decl
stos
push
shrb
daa
inc
lret
sbb
xchg
jbe
cmp
mov
xor
stos
and
aas
inc
nop
adc
arpl
stos
xor
jle
xchg
push
stc
lock
clc
clc
les
xchg
das
and
out
ror
add
xchg
aad
aam
arpl
shlb
mov
jbe
lds
data16
fwait
jge
and
mov
fisubrs
shlb
loop
pop
mov
mov
shlb
inc
loop
aad
ja
sub
repz
mov
xlat
pop
das
loop
push
add
in
or
or
data16
fists
or
jge
dec
iret
jns
adc
je
dec
pop
loope
inc
mov
inc
test
push
mov
in
outsl
fdivl
add
add
divl
filds
jl
inc
shlb
mov
jmp
mov
stc
sbb
mov
add
jbe
sti
je
adc
mov
insl
icebp
adc
arpl
push
sub
cli
in
xor
mov
scas
sub
out
sub
push
and
sbb
pop
inc
fldenv
jno
cmp
or
fsub
mov
outsl
icebp
lahf
popf
lods
or
aaa
cmp
xchg
xchg
and
sbb
sahf
sahf
adc
pop
pop
cmp
scas
fidivrs
mov
jne
inc
mov
jl
mov
in
pop
in
jno,pn
out
xor
or
idivb
push
adc
xor
iret
jo
pop
shl
cwtl
sbb
fs
cmpsl
inc
insb
gs
add
pop
insb
push
cmp
sub
mov
dec
jge
cmp
or
mov
and
cmc
push
and
sbb
inc
cmp
mov
loopne
das
xor
inc
inc
popa
dec
enter
cmp
rolb
mov
cmp
fimuls
into
pop
xchg
push
push
mulb
fldcw
sbb
lods
add
sub
cmp
rcrb
ja
test
cli
int3
in
iret
sub
mov
or
dec
jnp
dec
jecxz
pop
pusha
fistl
sbb
push
xchg
pop
shlb
push
leave
bswap
fwait
jno
jns
inc
ss
jge
and
or
sub
sbb
popa
btr
sbb
inc
lods
mov
jns
testl
rcll
aam
lret
xor
lods
sahf
hlt
aad
cmp
and
in
or
pop
sbb
test
push
stos
shll
fcmovnbe
icebp
mov
jnp
insb
pop
test
mov
xlat
and
outsl
in
sbb
sbb
mov
out
sbb
push
inc
jae
ret
imul
pop
or
jnp
or
movsl
mov
rcl
pop
in
pop
test
pop
pop
jne
enter
hlt
scas
sub
or
outsl
sbb
popa
orb
jbe,pn
jp
enter
movsl
insb
out
cmc
mov
addl
mov
popa
cmp
cmp
xchg
sub
mov
sbb
xchg
pop
in
out
and
mov
add
call
cltd
outsl
mov
lret
jne
mov
dec
scas
dec
ja
xor
je
out
xor
ret
push
jecxz
push
push
push
pop
testb
ret
inc
stos
int3
imul
inc
sub
insl
dec
mov
mov
push
fstl
push
int
sbb
jno
push
test
in
xchg
es
lods
xchg
ret
lods
and
iret
fsubrl
mov
pop
xchg
sbb
xor
pop
adc
arpl
lahf
stos
hlt
add
fdivs
inc
sbbb
cmp
mov
sbb
cmp
cmc
add
pop
es
dec
pop
popf
sti
dec
outsb
push
enter
push
sbb
or
aaa
fnstsw
out
loopne
dec
push
loopne
int3
std
mov
ret
inc
cs
mov
mov
shrb
xchg
fiaddl
subb
mov
add
add
ljmp
sarl
cs
clc
or
into
mov
jmp
decb
inc
jmp
lahf
dec
and
xor
dec
je
jle
mov
out
jg
push
sub
or
sbb
or
or
loop
es
push
jecxz
cmpsb
in
lock
cli
cld
cmpsl
and
adc
jle
inc
dec
loopne
sbb
rcll
movq
stc
orl
dec
scas
push
jo
cmp
mov
push
pushf
jecxz
adcb
adc
adc
lret
adc
movsb
out
lods
xchg
repnz
and
mov
mov
icebp
icebp
js
mov
adc
shl
clc
or
inc
movsl
mov
push
loop
stc
pop
dec
xor
aad
ja
insl
sub
lcall
shr
cmp
and
pop
dec
pushf
pop
push
aad
ret
sub
mov
shll
sub
scas
dec
lahf
gs
add
mov
and
pop
xchg
cmp
hlt
dec
xor
jae
lods
test
imul
stos
adc
sti
lock
fs
and
lret
pusha
enter
dec
loop
out
mov
sbb
pop
ret
mov
fcom
ljmp
mov
sub
add
lds
xor
aam
sbb
push
imulb
sub
jmp
add
mov
sti
dec
sbb
out
inc
inc
icebp
cmp
sarl
fcoms
imul
add
xchg
fidivrl
icebp
xchg
lods
ficoms
lds
adc
mov
push
mov
jmp
jo
subl
aad
pushf
cmpsl
in
mov
push
jns
test
int
int3
push
fldt
jp
movsl
push
popf
inc
push
xor
hlt
jnp
shrb
jns
fists
jae
mov
stos
lock
insb
call
jbe
adc
ret
shlb
sub
mov
mov
push
scas
sbb
das
inc
aas
or
inc
scas
mov
pop
call
xchg
aam
cwtl
jb
stos
movsb
imul
sahf
sub
and
popf
lcall
mov
push
pop
adc
call
mov
jne
repnz
jae
ja
call
jge
mov
test
add
stos
fsubs
xchg
mov
popa
mov
loop
push
pop
in
jb
cmpsl
jno
jge
jnp
pop
lods
sbb
pushl
add
dec
fmull
fadd
adc
jbe
cli
xor
xlat
mov
jl
cmp
int3
and
pop
mov
sbb
xchg
jl
dec
cmp
sub
aam
cwtl
test
jbe
clc
xor
jle
adc
in
out
cmpsb
jle
push
or
sub
adc
mov
call
lods
out
xchg
pop
mov
insb
movsl
jnp
mov
aad
mov
mov
pop
push
daa
lods
cli
out
push
shrb
cmpsl
jg
mov
or
dec
cld
cmp
mov
mov
push
or
cmp
movsb
and
pop
push
sub
mov
and
mov
fucom
mov
add
lahf
xchg
cld
movsb
mov
xchg
sub
std
inc
xor
cmpsl
popa
pop
scas
jg
daa
lahf
popf
and
inc
out
and
ljmp
sbb
mov
xor
lock
cmpsb
std
xor
mov
divl
pusha
xchg
mov
fisubrl
jle
je
imul
adc
mov
jmp
in
cmpsl
lods
test
adc
cwtl
out
call
notb
jae
adc
cmpsb
cltd
mov
xlat
sbb
insl
movsl
lret
mov
cmp
int3
hlt
repnz
cmpsb
pusha
fisttpl
mov
not
dec
push
repz
imul
das
int
dec
pop
aas
add
jle
mull
push
les
pusha
adc
pusha
push
pop
jge
or
jno
insb
and
popf
cltd
icebp
lret
and
leave
mov
test
movsb
repz
or
xlat
pop
add
xchg
fdivrp
xchg
addr16
lcall
nop
inc
and
cmp
pop
outsb
mov
jmp
icebp
jns,pt
das
add
inc
mov
into
fcoms
repnz
js
pop
into
dec
stos
cs
stc
incb
stos
aad
xchg
popa
rclb
lret
mov
adc
mov
xchg
push
bound
in
frstor
iret
add
jbe
mov
inc
jnp
xor
mov
aam
and
sbb
push
inc
loopne
pushf
mov
std
ds
das
int3
and
pop
test
aad
stos
test
cmp
xchg
mov
iret
popf
mov
insb
fildl
je
cmc
mov
pop
stos
lret
lods
or
std
scas
xor
fimuls
push
int3
mov
add
scas
pop
out
push
push
jmp
mov
mov
je
in
mov
popa
stos
out
sbb
and
cmp
fists
fwait
jns
dec
fcomp
sub
sti
jae
push
cmp
inc
mov
lea
insw
jmp
mov
fistpl
dec
xchg
mov
test
repnz
shll
xor
mov
inc
push
decb
addr16
sbb
xchg
daa
dec
cmp
repz
xor
outsl
sub
ficompl
shlb
dec
aam
mov
pushf
and
cmp
fsubs
in
xchg
rorb
jno
xor
xchg
jae
lods
cmp
out
repz
xorl
cmpsb
xchg
mov
push
mov
ret
mov
jo
mov
push
pop
dec
or
sbb
fnstcw
mov
push
dec
hlt
gs
mov
jae
or
xor
or
mov
js
dec
pop
or
rcrl
insl
in
pop
pop
jo
lea
daa
in
loope
push
pop
dec
imulb
pusha
les
xlat
rcrl
jecxz
push
mov
dec
sub
outsl
fucom
mov
or
fs
jle
mov
mov
pop
loopne
inc
dec
add
pusha
mov
xor
aam
inc
mov
das
gs
loopne
mov
xor
cmp
xor
mov
and
clc
in
add
jns
adc
push
push
in
cmp
test
lea
cli
adc
jnp
cmp
sub
and
dec
xor
jmp
adc
push
jl
xor
mov
lret
dec
bnd
test
xor
leave
outsb
add
or
pusha
ret
pushf
mov
icebp
insl
sbb
adcb
inc
or
lods
data16
arpl
pop
pop
mov
pop
out
mov
adc
cmp
xchg
es
jmp
sbb
push
leave
arpl
test
arpl
dec
sahf
insb
cmp
js
ss
in
push
mov
daa
je
arpl
notb
sub
xor
pop
mov
ljmp
mov
call
inc
aaa
lds
rclb
jg
stos
call
cmp
adc
test
or
inc
push
mov
push
and
mov
cmp
mov
aas
int3
iret
pop
sti
jnp
xchg
lods
test
mov
cli
sub
adc
fdivrl
pop
xchg
mov
jne
clc
lcall
cmpsb
mov
or
mov
cmpsb
cli
dec
add
cmpsb
lea
test
subb
enter
cmp
ret
test
xor
xor
cmpsb
push
shlb
pushf
jge
dec
sarl
je
pop
xor
and
aas
push
mov
and
dec
and
mov
mov
add
xchg
call
mov
fdivl
dec
pop
cmpsl
mov
sub
jmp
cmp
std
xchg
cmp
mov
ja
cmp
adc
lock
test
add
testl
sbb
cmp
int3
mov
add
mov
xchg
push
ja
mov
loope
xchg
pop
mov
push
jno
movsb
cmp
mov
scas
clc
add
jmp
lods
xchg
orl
stc
out
ret
out
repz
xchg
mov
cmpsb
inc
adc
add
mov
outsl
popf
sti
cld
xchg
xor
ret
mov
mov
addr16
push
jp
in
inc
aad
pop
cmpsb
sub
xor
jmp
lea
sbb
out
cmp
cmp
loope
je
test
fcoml
lret
mov
add
cwtl
ds
pop
rclb
jl
cmp
leave
mov
and
popa
mov
pop
call
lcall
fwait
nop
dec
repz
cmp
outsl
stc
add
mov
xor
inc
movsl
xchg
ss
scas
inc
adc
aam
dec
shll
addr16
push
jle
rcr
mov
inc
ret
stos
fsubrl
inc
inc
stos
insl
inc
mov
loope
pusha
movsb
sub
addr16
dec
fwait
popa
lods
mov
aaa
icebp
mov
iret
popf
xchg
fdivl
dec
cmc
mov
lds
mov
in
rcrb
pop
adc
imul
cmp
scas
mov
push
test
mov
pusha
xchg
cli
or
nop
push
gs
add
xchg
xchg
testb
rcrb
jnp
jl
push
cmp
aad
jmp
xchg
jb
dec
mov
int3
xchg
cs
add
stos
addr16
push
inc
pop
in
stc
and
xor
jle
pop
sbb
inc
xor
inc
jo
fdivp
test
in
mov
stos
test
cmp
in
adc
loop
mov
or
pop
int3
pop
inc
sahf
mov
mov
inc
jg
fcoml
xlat
pop
xlat
jno
mov
mov
loopne
out
scas
lods
or
or
dec
jl
pop
ret
and
fidivl
add
sub
rep
int
addb
shll
in
notb
divl
aaa
ss
mov
cmpsl
inc
mov
lock
jnp
cmpsb
stc
push
jnp
push
nop
add
repz
loope
dec
lock
bound
and
out
mov
out
adc
scas
mov
scas
jp
mov
xor
in
xchg
push
pop
pop
out
mov
aaa
inc
sub
mov
inc
mov
or
arpl
jae
push
fldcw
pop
and
mov
add
fwait
xchg
cmp
fidivl
pop
adc
xchg
icebp
scas
xchg
leave
mov
cmp
repz
shrl
adc
outsl
sarl
add
pop
jno
lods
dec
adc
cs
insl
xchg
sarl
mov
adc
jge
cld
cld
testl
rclb
add
sti
out
mov
mulb
push
jb
push
notb
push
divl
out
inc
add
sti
adc
mov
pop
popf
hlt
push
lods
mov
cmp
dec
inc
in
mov
out
cmpl
add
roll
scas
sub
leave
shlb
sub
cmp
hlt
outsb
xchg
rclb
push
jmp
arpl
mov
imul
mov
mov
lcall
mov
or
xchg
mov
test
push
aad
sub
fnclex
inc
mov
cmp
sub
int3
and
mov
ja
or
or
inc
mov
pop
fstl
inc
mov
jmp
cmc
mov
add
mov
xor
and
insl
pop
hlt
add
xor
addb
leave
add
or
jnp
add
add
xchg
jno
jge
out
popa
cmp
dec
jno
push
ss
mov
rcll
test
inc
scas
fwait
pop
xor
lret
xor
fldlg2
lock
insl
mov
in
push
clc
repz
int3
fcomp
mov
pop
arpl
in
and
mov
imul
mov
pop
imul
lahf
pop
pop
mov
jge
fcompl
jmp
and
xchg
sub
aaa
jg
push
enter
rorl
cmp
push
sarl
jne
adc
daa
sbb
sbbb
pushf
fstps
sti
ficoms
data16
outsl
sub
mov
leave
mov
push
push
pushf
leave
je
dec
test
adc
push
dec
jl
cmp
xor
popf
outsb
push
fs
fcoms
xor
lock
std
rcrb
sbb
andl
lret
cmc
pusha
mov
hlt
mov
push
jge
adc
in
mov
shll
jg
lods
mov
pop
dec
movsl
movl
xor
or
popa
pusha
rolb
push
loope
hlt
stc
cmp
movl
push
insl
mov
adc
out
dec
mov
ss
in
pop
call
add
lock
lods
fidivl
pop
sub
data16
xchg
movsb
test
push
sti
lods
loope
scas
inc
into
inc
test
pop
fsubrl
cli
sbb
push
mov
sbb
out
loop
cmpsl
add
pushf
push
and
test
cmpsb
test
loope
fcmovnbe
push
aas
scas
push
or
cmc
mov
pop
cwtl
mov
sub
push
cwtl
cltd
ret
pop
push
xchg
stos
sub
inc
int
sub
je
pop
lods
les
sub
adc
mov
push
or
std
or
imul
xor
jbe
jl
mov
ds
test
orb
mov
into
sbb
xchg
inc
test
cmp
pop
push
ret
cs
popa
sub
pop
mov
sub
sbb
cmp
and
lret
imul
cmp
jecxz
jns
jns
in
adc
outsb
sub
jbe
push
jp
or
adc
mov
pop
and
cmp
jo
mov
adc
jbe
push
jae
jp
pop
sub
insl
mov
cmpsl
mov
cltd
jne
sbb
aad
adc
xchg
clc
xlat
lods
dec
aaa
stc
or
outsb
or
scas
hlt
xchg
pop
inc
cmc
lock
or
add
xlat
iret
mov
mov
aaa
xchg
xchg
and
roll
inc
cld
lret
or
std
cmpl
aad
xor
in
inc
shrb
jmp
nop
add
xchg
sub
rcl
sarl
std
push
scas
jb
push
sub
dec
xchg
jne
fdivs
xchg
jle
sahf
notl
lock
mov
stos
lods
cltd
in
pop
sub
ljmp
inc
arpl
ffree
out
jno
pushf
mov
xchg
rcrl
mov
fsubrs
int
daa
data16
cli
test
ret
ds
or
inc
or
out
aaa
outsb
pop
cmpsb
hlt
pop
outsl
mov
addr16
pop
outsb
flds
ret
xchg
sub
pop
int3
pop
ret
jecxz
flds
test
push
sub
mov
jle
iret
inc
jns
in
test
mov
cmpsb
mov
xlat
cltd
imul
add
push
xchg
inc
lcall
inc
adc
std
sbb
adc
mov
imul
jne
insl
dec
rorb
sub
lea
je
sub
dec
push
pop
mov
cmc
scas
int3
push
frstor
inc
lods
sbb
dec
adcl
add
mov
mov
inc
jmp
sub
cmp
push
js
repz
fldl
mov
jae
push
and
xchg
push
jge
xchg
and
popf
imul
xor
test
scas
xor
lods
daa
pop
xchg
fwait
sbb
cmp
mov
lds
cld
push
ds
xchg
mull
mov
xor
dec
popf
mov
mov
out
into
call
mov
xor
imul
sub
inc
push
stos
cltd
push
int3
aaa
insb
or
mov
push
pop
dec
xor
adc
popf
in
test
lock
pop
mov
lock
gs
icebp
sub
mov
imul
xchg
xchg
dec
or
or
xchg
and
xor
and
ret
jge
fisttpl
mov
call
imul
in
out
push
cli
mov
pop
sub
stos
xchg
cmpb
nop
stos
je
aad
dec
orb
fwait
imul
das
push
mov
jg
scas
inc
int
push
pop
aas
inc
inc
subb
call
gs
sub
dec
and
pop
cltd
dec
aaa
popf
outsl
das
fcmovnbe
push
pop
jnp
insb
pop
adc
dec
add
xchg
int3
add
lods
repz
adc
insl
mov
jge
add
adc
aad
xor
subb
outsb
orb
stc
ret
enter
mov
xor
sub
nop
mov
sahf
jo
and
ffreep
and
ljmp
add
movsl
cltd
test
sbb
jmp
and
sbb
dec
test
mov
int
xchg
add
outsl
lods
dec
paddq
mov
outsl
sbb
and
nop
xchg
lock
je
adc
dec
inc
icebp
pop
mov
scas
add
imul
lretw
push
mov
lcall
sarl
mov
xor
mov
insb
pusha
repnz
gs
cwtl
xchg
fldt
jl
push
ja
sbb
enter
jne
out
pop
arpl
jmp
cmc
xchg
pop
sahf
xchg
push
sarl
cmp
pop
lods
adc
dec
xchg
jns
enter
sub
enter
arpl
mov
ret
mov
call
mov
ret
xchg
mov
inc
mov
mov
mov
stc
dec
repz
scas
sarl
mov
inc
fstpl
cmp
stos
sbb
add
lds
xchg
and
movsb
rorb
inc
sarb
jecxz
mov
cmp
push
add
std
das
scas
pop
aaa
loope
int
sub
lret
and
pop
inc
jae
out
sahf
inc
mov
ds
pop
mov
in
sub
pop
mov
ret
and
lahf
and
mov
jbe
mov
and
aad
movsl
pop
daa
cmp
xlat
ss
sub
and
daa
xchg
push
pushf
add
cmp
mov
repz
movsb
jge
sub
and
cli
loope
icebp
inc
popf
imul
sub
jae
ja
loope
push
int3
fisubrl
mov
push
sarl
push
push
je
clc
xor
stc
bound
shlb
call
enter
into
call
je
cmc
sub
sbb
push
loop
test
mov
mov
cltd
repnz
push
mov
and
cmp
mov
sbb
dec
adc
outsl
test
movb
ret
pusha
add
mov
je
daa
and
sbb
and
sub
and
sti
decb
test
mov
or
shlb
movb
icebp
scas
and
cltd
int3
sub
mov
add
psllq
add
mov
mov
fcompl
push
xor
negl
clc
pop
inc
nop
mov
cmp
jb
or
lods
sahf
call
andb
sbb
add
imul
inc
and
xchg
pop
addb
outsl
push
outsb
xchg
mov
icebp
call
cmp
lock
push
mov
inc
or
lret
sub
sub
fimull
xlat
popf
and
les
push
sub
mov
repz
jecxz
jb
insl
jl
filds
mov
adc
jns
jno
fidivrl
xorb
push
push
add
mov
andb
decb
sub
cmp
xchg
inc
add
lods
mov
out
lret
sub
test
push
clc
sar
jp
xor
lret
enter
movsb
int
in
and
fistps
jne
lahf
popa
sti
xchg
xchg
sbb
hlt
clc
xor
sbb
cmpsl
out
cmp
loope
dec
fwait
adc
loop
insl
orb
div
xchg
subb
xor
dec
sbb
mov
dec
jae
inc
loopne
push
inc
lods
in
insl
mov
pop
out
cmp
sub
imul
mov
out
daa
xlat
rorb
xor
insl
cmc
dec
adc
gs
jmp
push
outsb
int
push
imulb
inc
push
jnp
and
xchg
pop
mov
dec
in
push
add
add
push
inc
cmc
adc
fldcw
mov
pop
xchg
insb
inc
xor
jl
insl
push
lea
jge
cmp
mov
jp
mov
xchg
stos
xor
fldenv
xlat
loopne
or
loopne
into
cwtl
call
mov
lret
pop
lods
call
insb
dec
xor
xchg
xor
adc
fbld
cwtl
jle
cmp
in
lds
test
jecxz
lcall
adc
mov
pop
cmp
call
inc
push
outsb
aad
cmpsb
scas
add
addl
popa
xor
test
imul
pop
lds
loop
lret
jmp
test
int3
pop
jns
xchg
jl
fidivrl
jb
stos
adc
mov
jne
cmp
cld
sub
lcall
mov
push
inc
lods
dec
repz
int3
mov
scas
pusha
cmpsb
fisttpll
loopne
pop
jns
jbe
push
dec
loop
mov
mov
adc
mov
pop
imul
mov
pop
test
pusha
dec
cmp
subb
adc
repnz
das
push
scas
push
in
mov
cmp
test
insl
and
inc
ds
repnz
in
es
dec
and
clc
shll
jae
jb
inc
sahf
adc
pop
cld
inc
and
loope
repnz
pop
pop
repnz
or
in
sub
mov
xorb
std
cwtl
jae
test
xor
iret
gs
push
push
jle
rcl
scas
mov
cli
stos
arpl
cmpsb
push
add
lock
subl
push
jl
std
ds
in
daa
lret
pop
repnz
test
pop
hlt
dec
jne
inc
xor
and
push
notl
aam
or
mov
fcoml
dec
mov
mov
notb
and
int
ds
ss
test
lret
dec
arpl
es
and
lods
sub
push
test
xchg
cmpl
jecxz
push
xor
aaa
enter
or
push
in
xor
outsl
mov
int3
xor
shll
jl
mov
sub
add
test
jae
fimuls
sub
push
mov
add
aam
inc
dec
int
pop
pushf
fsubl
lds
push
pop
mov
daa
mov
cmp
out
dec
inc
push
mov
dec
aad
arpl
divb
rcll
xor
mov
fsubs
sub
adc
iret
jp
mov
cmpsl
adc
pop
xor
ret
lds
pop
adc
cmp
dec
loopne
cmpsl
cmp
iret
insl
inc
fisubl
notl
inc
xchg
adc
jbe
dec
jge
cmp
xor
jno
mov
mull
dec
jb
cmp
jns
adc
xor
jge
in
push
inc
fucomp
inc
add
or
cs
je
adc
sbb
cmpsl
or
pusha
adc
out
orl
lods
cmp
fstpt
shrb
pop
fnstenv
push
in
xchg
test
jle
call
stos
push
mov
mov
jge
mov
and
ficompl
repz
cmp
and
movsl
shll
dec
xlat
or
mov
mov
lods
aad
incl
sbb
xor
sub
fwait
or
imul
imul
xchg
aam
lcall
mov
sti
sub
jno
dec
add
jl
cmp
gs
stos
insb
clc
lock
mov
repnz
ljmp
xchg
mov
insb
sbb
lods
jge
cltd
mov
jle
mov
mov
bndstx
or
pop
stos
pushf
movsb
jae
loop
adc
scas
dec
or
xchg
mov
mov
jmp
pushf
add
or
stc
push
xchg
ret
xor
pop
xor
sub
mov
adc
pop
call
xchg
arpl
lahf
ficoms
add
rcl
lods
xchg
sbb
lods
shll
pop
adc
rolb
cmp
dec
adc
out
sbb
sbb
add
xchg
push
scas
lahf
int3
mov
and
sub
leave
sarb
fstpt
mov
je
xor
mov
sub
xchg
out
dec
cmpsb
lcall
and
lods
leave
jle
loopne
jno
cs
inc
mov
pop
or
xchg
xchg
cmp
stos
jmp
test
or
in
imul
lahf
pusha
popa
xchg
adc
inc
inc
std
jg
add
std
ja
xchg
cmp
mov
les
sub
push
xchg
movsl
jne
mov
add
adc
lcall
loopne
sti
sub
lods
cmp
and
arpl
mov
sarb
insl
xchg
test
ja
call
scas
loopne
mov
daa
xchg
pop
mov
mov
mov
ficompl
mov
test
push
ror
orl
add
repz
adc
mov
jo
pusha
aam
lods
sbb
dec
jnp
shrb
or
or
jb
or
adc
push
gs
dec
stos
popf
mov
fists
aam
xor
add
xor
cmp
out
out
mov
scas
mov
sbb
push
bound
nop
popf
repz
jne
inc
movsl
lret
cld
inc
jnp
xchg
cmpsl
mov
add
push
xor
in
stos
sarb
sahf
cmp
icebp
or
mov
and
enter
int3
stos
push
jns
jmp
xor
pop
fmuls
xorb
cmp
lret
daa
pop
cmp
std
lods
loop
stc
ret
pusha
and
add
xchg
shrl
mov
aam
add
xlat
dec
xor
in
test
dec
cmp
mov
cmpsb
dec
and
jo
mov
out
insb
loopne
lods
rcl
sbb
pop
cs
stc
lock
test
test
flds
sbb
add
dec
jle
mov
dec
in
lcall
mov
imul
or
pop
dec
icebp
fnstenv
mov
adc
cwtl
loope
cmp
mov
or
push
or
or
lds
sub
mov
cmp
out
push
repz
jmp
or
mov
xor
cld
enter
dec
jbe
nop
mov
cmp
pop
sbb
fs
cmc
jecxz
cwtl
stos
test
mov
sbb
xchg
daa
inc
lcall
pushf
pop
push
mov
sub
or
sbb
out
inc
sub
aam
and
insl
call
ret
jge
push
mov
cmpl
xchg
lret
imul
sbb
inc
das
inc
lock
rorb
mov
inc
mov
in
insl
sti
mov
outsb
pop
xor
mov
stos
in
les
cltd
int
aas
loope
fs
dec
enter
push
cmpsb
jecxz
sub
rcrl
cwtl
bound
push
push
mov
mov
test
aas
lahf
sti
cld
int3
fucomp
test
es
mov
sti
adc
pushf
jbe
sub
out
cmp
inc
cld
aaa
xchg
not
mov
push
add
dec
iret
lcall
xor
mov
sbb
mov
xlat
es
push
jle
or
enter
push
cmp
cmc
cltd
pop
stos
pop
push
mov
les
in
jg
rcrl
jne
jo
test
movsl
in
mov
fistpl
aam
adc
rcrb
je
out
fsts
add
lret
xor
sub
mov
cmp
ret
nop
andb
mov
cs
or
imul
add
fdivr
push
in
xchg
js
mov
and
lods
dec
cli
rcrl
outsl
or
jge
fisubrs
das
out
movb
xchg
jp
xor
add
cmp
arpl
nop
sbb
shrl
adc
insb
add
cs
test
adc
add
lahf
dec
pop
inc
add
outsb
sub
sbb
mov
inc
and
jnp
push
and
popa
mov
ret
mov
jne
cwtl
sarb
in
aaa
mov
int
hlt
lods
pop
shr
and
int3
nop
push
out
xchg
push
rcll
pop
std
jecxz
cmp
nop
add
std
dec
testl
ds
iret
aaa
jne
push
jno
sbb
adc
loope
insb
xlat
ljmp
into
inc
and
push
push
sbb
sbb
sub
push
dec
pop
gs
arpl
ret
mov
inc
cmpsb
push
rclb
stos
int3
jl
iret
push
pop
into
and
xchg
iret
inc
das
dec
stos
outsb
jno
jnp
jmp
and
fistl
fsts
sahf
xorb
test
lea
xchg
lock
mov
cmp
add
or
cwtl
sahf
pop
inc
cmp
scas
push
add
jl
push
cmp
outsl
pop
xchg
out
push
push
int
jmp
xchg
push
pop
push
bound
ja
jmp
fists
inc
mov
fcmovbe
sub
adc
mov
fs
pushf
daa
test
lods
mov
loop
daa
xor
aaa
sub
mov
dec
adc
repnz
outsl
ja
data16
stos
loop
jle
aad
adc
xchg
xor
scas
js
adc
mov
dec
jno
pusha
fidivrs
jecxz
xor
addl
mov
rcrb
adc
test
fwait
and
push
cld
mov
cmp
jno
imul
sti
pop
xchg
data16
and
push
stc
in
mov
add
lds
insl
test
fdivl
lock
mov
lods
xor
mov
in
cmp
mov
insl
popf
sbb
cwtl
mov
jl
jmp
xchg
cld
push
leave
adc
mov
xchg
stos
dec
lea
popa
or
int3
hlt
mov
mov
cmp
push
push
or
lcall
or
adc
daa
inc
sub
mov
or
dec
and
cltd
ficomps
int
xor
fcmovbe
pop
adc
out
jns
xor
jge
mov
mov
push
mov
and
ret
xlat
orb
cli
jp
sub
or
int3
loop
cmp
xchg
outsl
xchg
sub
int3
out
leave
ljmp
xor
clc
lock
push
call
lock
test
mov
jge
xlat
cmp
repnz
pop
cmp
icebp
mov
sti
push
je
fwait
inc
mov
add
and
fldcw
dec
in
xchg
push
xchg
jae
fildll
insb
popf
shrb
gs
push
sbb
or
aam
dec
inc
mov
jbe
pop
mov
cmp
sbb
jg
mov
je
or
fcoml
push
adc
loope
leave
xor
add
sub
cmp
popf
dec
mov
mov
adc
shrb
and
nop
adcl
out
imul
cli
fiaddl
sub
mov
aas
mov
and
clc
xor
in
cmp
outsl
or
lods
sub
pop
or
cltd
dec
pop
xor
lahf
icebp
mov
sub
ds
lahf
fsts
repnz
mov
int
mov
aam
iret
jae
inc
fcmovnu
pop
adc
shrl
mov
aas
leave
pop
test
insl
mov
insb
stc
xchg
jecxz
inc
scas
xchg
and
stos
inc
loop
mov
sar
xor
xchg
add
arpl
fnstcw
repnz
dec
movsl
inc
or
js
mov
out
xchg
cmpsl
lds
cmp
push
sbb
pushf
mov
movsb
pushf
xchg
sbb
and
push
sub
xchg
jmp
movsl
sbb
push
idivl
sub
stos
out
mov
imul
sahf
test
adc
js
dec
popa
test
dec
outsb
dec
aas
mov
aad
aad
adc
jmp
lods
jle
and
mov
ret
jns
mov
dec
test
dec
add
jns
inc
jmp
mov
aaa
ficoms
lcall
and
cmp
mov
stos
mov
sbb
cmpb
adc
cwtl
dec
xorb
lock
cltd
js
imul
testb
addr16
sbb
ds
jg
xchg
sahf
inc
and
jg
les
out
push
fimuls
mov
loop
cltd
sbb
dec
popa
sahf
ljmp
and
jb
outsl
gs
bound
inc
or
push
gs
int
xor
mov
lret
insb
xchg
das
and
in
scas
pop
jp
dec
pusha
dec
adc
sahf
dec
call
cmpsl
jl
push
mov
pop
outsb
ret
in
mov
adc
cwtl
scas
js
mov
jg
addr16
enter
out
andb
sub
test
les
adc
or
pop
push
stos
mov
cmp
push
push
pop
cmp
lods
sub
sub
sbb
popa
jno
pop
inc
fsubrl
lock
scas
xor
imulb
sbb
lods
cmpsb
fsubs
mov
andl
out
xchg
sbb
mov
push
mov
decl
stos
push
dec
imul
mov
mov
adcl
adc
fbstp
xlat
sub
outsl
xchg
sti
lds
fwait
push
sub
push
sbb
repz
push
test
outsb
mov
data16
mov
jg
and
xchg
mov
adc
cmp
xchg
sbb
stos
jne
adc
stos
mov
jp
sub
sub
inc
ds
jnp
flds
lods
stc
pop
dec
outsl
mov
imulb
std
sbbl
faddl
loopne
pop
loopne
insb
movsb
dec
cmpsb
imul
pusha
xchg
ret
pusha
popf
out
mov
pop
xchg
sub
ret
xor
movsb
and
push
add
and
jmp
xchg
gs
iret
dec
out
lods
sbbl
jnp
mov
hlt
pop
adc
mov
mov
movsl
xor
xchg
push
push
fwait
pusha
xor
jg
clc
fsubs
mov
add
adc
push
mov
pop
ficoms
add
or
sahf
and
xor
fsubrl
repnz
sbb
pop
loopne
add
xor
xchg
jae
cmp
jns
dec
in
jmp
fistpll
outsb
jb
add
xchg
pop
pmaxub
cld
into
or
dec
inc
aaa
int
jno
mov
sbb
or
or
and
or
inc
mov
jns
stc
add
mov
mov
das
push
scas
pop
enter
addl
inc
cld
in
aad
out
stc
mov
fidivs
clc
insb
push
cmp
out
inc
ret
ja
jb
cwtl
hlt
aad
stc
jl
dec
leave
adcl
repnz
rcll
adc
lea
push
imul
lods
mov
xchg
shll
subb
gs
stc
or
mov
movsb
jnp
push
int
mov
adc
insb
push
mov
pop
add
in
sub
leave
imul
pop
xor
push
aaa
daa
or
add
pmulhuw
cli
xor
push
or
out
jle
popa
hlt
and
int
pop
xor
mov
lret
stos
mov
jnp
xlat
pop
imul
cmpb
fcoms
jbe
data16
aam
lcall
mov
test
cmp
jmp
bound
mov
cmp
cs
xor
sbb
clc
cli
insl
xor
loopne
sbb
dec
mov
aaa
cmp
xor
filds
aam
push
loop
pop
pushf
test
push
fiaddl
out
sbb
ret
and
iret
arpl
aam
icebp
mov
dec
inc
lock
add
lret
dec
inc
popf
push
dec
sbb
lock
and
adc
jne
sbb
jl
mov
pop
stc
frstor
mov
pusha
repz
xor
and
loope
dec
cltd
jnp
and
lret
leave
cmp
dec
aam
sbbl
cmp
rcrl
inc
leave
cmp
and
mov
aas
lea
clc
adc
fnstcw
adc
js
adc
mov
lea
cmc
xor
divb
enter
int
xchg
in
mov
pop
push
push
mov
andl
cmp
jmp
sub
in
mov
sbb
aad
adc
sarl
loopne
ret
rcr
push
fistpl
outsb
mov
dec
push
adc
mov
icebp
push
lds
dec
sbb
lock
leave
dec
daa
in
popf
fdivrs
nop
jb
in
in
das
mov
enter
jo
jnp
popa
mov
mov
sahf
sbb
add
daa
xlat
lds
daa
cmc
xchg
mov
cmp
cmc
ljmp
scas
sbb
leave
and
loopne
je
fistps
std
fwait
sub
adcl
jo
mov
xchg
fistl
loopne
sbb
ret
inc
jmp
aaa
das
call
adc
fiadds
stos
mov
and
sub
xchg
fsubrl
lock
jp
inc
adc
sarl
iret
mov
sub
jge
adc
test
pop
push
pusha
punpckhbw
scas
leave
int3
mov
lea
lods
sarl
mov
arpl
jnp
mov
adc
nop
xchg
xchg
push
xchg
frstor
dec
mov
sti
out
insb
daa
jne
shrb
leave
sub
xor
cmp
push
jo
outsl
aas
xlat
les
or
inc
es
test
add
cld
mov
mov
sbb
mov
scas
mov
sti
xchg
popf
mov
aas
insb
mov
cmp
sub
call
lods
adc
shlb
cmp
mov
scas
push
ja
jl
mov
push
in
pop
leave
xchg
and
insb
ljmp
outsl
add
pop
dec
fistpll
repz
lret
daa
mov
push
and
push
push
hlt
sub
cld
cmp
xor
inc
lcall
stc
inc
push
xchg
aam
popa
aas
add
lahf
mov
add
xchg
je
push
sbb
sub
ret
sbb
and
dec
rolb
sbb
fstpl
popf
es
xchg
or
sub
test
popf
mov
les
pop
mov
jno
sbb
push
dec
dec
mov
mov
push
imul
jns
cmp
lahf
xchg
gs
out
xchg
orb
outsb
pop
xor
repnz
add
stos
lret
add
cltd
pop
inc
inc
stc
and
cli
loopne
sub
sub
or
test
loop
in
and
pushf
adc
sbb
and
xchg
mov
mov
pop
mov
or
xor
pop
or
xor
mov
lea
or
dec
adc
and
cmp
mov
xchg
xor
jbe
and
push
pusha
dec
scas
les
pop
cmpsb
ret
push
jmp
repz
xchg
mov
js
idiv
out
add
inc
xlat
roll
mov
int
enter
adc
insb
jns
jge
pop
push
test
inc
fisttpl
cmpsb
fistl
filds
ret
xchg
fimull
sub
shl
loop
ss
jbe
xchg
inc
or
pop
push
jns
imul
mov
imul
into
add
jg
mov
cltd
loope
mov
xor
push
fistpl
ret
ljmp
shl
fwait
aam
stos
dec
or
or
dec
insb
shll
inc
out
inc
push
and
fwait
xchg
xchg
jp
fnstenv
and
sub
push
dec
shlb
fiaddl
mov
pop
test
mov
mov
xor
sub
repnz
pop
sub
sub
jno
nop
mov
mov
pop
mov
cwtl
ret
sub
std
mov
mov
lock
icebp
pop
iret
dec
sbb
pop
xchg
fldcw
enter
inc
pop
sahf
mov
inc
data16
icebp
and
jmp
js
push
fldcw
inc
jno
sub
fwait
mov
push
sub
add
jbe
into
lahf
fbld
inc
cwtl
das
shrl
ja
inc
popf
xchg
push
lods
mov
cmp
dec
bound
out
sbb
aad
xchg
sub
neg
aaa
adc
das
sarb
aaa
lahf
pusha
xor
fwait
orl
lahf
dec
push
jge
lahf
out
mov
inc
lock
sub
pop
push
jns
jo
mov
mov
sub
out
pop
stos
inc
out
mov
shll
push
cmp
fs
dec
rorl
jns
ds
iret
inc
sbb
cmp
idivl
pop
inc
sbb
into
mov
stos
lds
pusha
aaa
pusha
out
out
js
pop
insl
hlt
inc
jno
sbb
jmp
jge
lock
pusha
addr16
or
jae
ret
xchg
out
add
mov
fs
xchg
ret
fsubr
outsb
push
arpl
les
cld
pop
mov
arpl
inc
push
fsubrp
push
xorb
aas
mov
push
adc
xchg
fdivrl
lods
imul
out
jg
ret
mov
ds
jge
rol
jbe
jl
jmp
hlt
pop
popf
movsb
insb
cwtl
mov
push
pusha
inc
jo
mov
dec
dec
hlt
mov
xor
and
dec
mov
iret
jmp
push
inc
and
addr16
into
fiaddl
sbb
xchg
xor
dec
inc
cmp
mov
std
jno
mov
jp
and
das
repnz
int
dec
xchg
inc
cmp
jbe
mov
xorb
cmc
xchg
push
cld
icebp
ret
rolb
movsb
les
nop
imul
test
mov
jae
or
mov
xor
cmp
mov
add
test
xor
sub
add
pop
ja
arpl
in
and
push
mov
cwtl
sub
imul
inc
or
sbb
sbb
inc
adc
mov
fwait
cli
xchg
cli
adcl
jmp
nop
adc
mov
int
loope
into
inc
and
insb
out
jne
sbb
lock
mov
xchg
pop
pop
scas
aaa
sub
and
cmp
pop
arpl
push
das
xchg
mov
lret
out
jle
cld
xor
out
aam
fs
out
jno
inc
sets
xor
stc
xor
in
add
cs
popa
or
adc
sbb
std
into
add
inc
loope
nop
pop
adcl
mov
movsl
lret
aaa
xchg
in
sbb
daa
mov
bound
adc
xor
in
mov
testb
jno
cmp
fnstsw
pop
bnd
out
mov
orl
adc
shlb
insb
mov
mov
pop
jecxz
lcall
mov
push
xchg
in
test
adc
frndint
mov
xchg
adcb
jecxz
popa
adc
add
in
insl
or
and
sub
aas
pop
test
aad
icebp
mov
mov
jmp
mov
sub
mov
mov
ds
movsl
push
pusha
mov
add
es
rolb
fucomp
cmpsl
push
fldcw
subb
jo
stos
jb
xchg
xor
in
xor
jg
sbbl
stos
pop
popf
xchg
ja
mov
sub
rcll
addr16
xor
sahf
push
cmp
jb
or
xchg
adc
mov
push
test
inc
sbb
mov
lods
push
test
push
aaa
imul
pop
sub
mov
and
pop
sahf
movsb
pop
dec
rorl
jecxz
or
bound
xor
mov
gs
and
xchg
orl
loope
test
aas
or
icebp
imul
inc
jb
jecxz
leave
mov
pushf
mov
adc
movsb
rorb
sbb
xchg
dec
dec
icebp
das
lahf
adc
xchg
add
out
sbb
mov
loopne
and
lahf
out
mov
push
dec
push
mov
jmp
sti
mov
in
and
shrl
das
jno
sbb
dec
inc
daa
dec
aam
jle
fs
add
icebp
cli
loop
divl
push
pop
stos
push
cld
cmp
xor
mov
push
test
fildll
addr16
insl
lcall
sbb
out
movsl
xchg
in
or
loope
fwait
xchg
call
insb
cmpsl
mov
pop
test
gs
push
inc
or
push
cltd
lods
sbb
sub
in
adc
jmp
xchg
dec
mov
shrb
dec
gs
sub
in
cld
mov
clc
cld
insb
sbb
test
in
hlt
cmp
mov
mov
ror
fdiv
in
pop
mov
sbb
mov
sub
mov
inc
push
clc
sub
popa
flds
jae
push
mov
in
lods
sti
out
mov
mov
in
mov
fs
dec
adc
adcb
add
xchg
insl
xlat
pop
int
sbb
or
xchg
rclb
test
xor
mov
lock
xchg
jo
and
ss
cmp
fucomp
xchg
mov
testb
aam
sub
test
inc
fiaddl
lcall
ss
adc
inc
xchg
fisubrl
fdivrl
in
cli
fdivl
jo
iret
aas
dec
int
sub
dec
jbe
lcall
jae
mov
divl
insb
mov
cmp
es
dec
xor
add
mov
out
pop
mov
pop
outsb
sbb
sbb
add
insb
adc
add
sub
push
push
test
test
mov
sbb
fcomps
push
dec
cli
push
shll
push
xor
inc
mov
cmp
rorl
hlt
sbb
xchg
stos
push
out
dec
inc
mov
ficomps
in
cmp
pop
cmpsl
mov
iret
cmp
and
pop
cmp
inc
bound
mov
xor
mov
mov
mov
jp
sub
mov
shlb
cmp
lcall
call
add
out
ss
mov
mov
mov
cmp
jle
cld
sbb
pushw
jge
mov
loope
imul
pop
daa
mov
movsb
mov
fcmovu
rorb
sub
lcall
mov
test
push
sbb
shll
arpl
fstl
lahf
faddl
and
push
iret
fsubl
imul
and
jle
adc
test
rcrl
xchg
inc
sub
lock
push
lds
call
mov
loope
sbbb
fisubs
pop
mov
out
in
push
aad
xor
mov
lret
inc
adc
xchg
dec
ds
out
fstl
dec
mov
scas
and
out
push
jae
and
inc
cli
mov
loope
jno
cmpsl
cli
or
xchg
sub
lods
bound
xchg
cmp
gs
insl
mov
dec
cld
and
int
leave
jo
out
insl
idiv
cmp
lods
dec
sub
jecxz
popf
push
or
jle
mov
adc
sbbl
into
and
jp
pop
in
outsb
sbb
or
fidivl
adc
ret
leave
aam
test
enter
xchg
push
xchg
xor
js
mov
dec
in
mov
lea
cmp
fisttps
or
xor
pop
mov
lea
jge
sub
mov
pop
sbb
push
roll
hlt
push
inc
add
test
add
pop
pushf
sti
mov
js
test
xchg
jp
xchg
notb
or
lds
loope
imul
int
dec
cmp
dec
mov
mov
outsl
xor
out
add
add
xchg
pop
mov
in
popf
mov
pop
sbbb
arpl
fidivrs
mov
outsb
add
inc
jmp
pop
mov
jmp
pushf
mov
cltd
leave
add
sbb
daa
in
pop
out
xchg
popf
lds
rdmsr
das
sub
shl
insb
jno
and
and
and
addb
ja
dec
lock
adc
add
lods
or
in
shll
mov
stos
leave
xchg
movsl
subb
sbb
or
lret
inc
ret
repnz
push
test
mov
mov
test
adc
xor
or
and
aas
dec
outsl
mov
lcall
sub
mov
fisubs
in
sub
fwait
shrl
cmp
and
bound
lods
mov
jns
flds
or
inc
and
outsb
imul
mov
clc
adc
rorl
jle
jle
jl
and
aam
sahf
fdivp
cmp
mov
test
fists
inc
mov
pop
adc
stc
xor
mov
out
lahf
and
sub
inc
mov
push
mov
ja
stos
mov
jae
ss
sbb
pop
cmp
out
out
insb
dec
adc
sbb
and
mov
jecxz
addr16
loope
mov
mov
push
loope
sarl
fiaddl
lret
mov
mov
jno
arpl
lock
fldenv
adc
jecxz
ljmp
and
imul
inc
shrl
inc
das
sbb
jmp
pop
pop
sub
scas
mov
sub
sbb
stos
fs
data16
loopne
rorb
push
loop
cmpsb
dec
das
stos
addr16
pusha
into
lds
test
and
dec
add
lea
push
movsb
rorl
aas
add
push
in
cld
jnp
call
pop
mov
pop
lods
cmp
push
mov
clc
imulb
add
pushf
loope
jo
jecxz
sbb
fwait
inc
jns
push
mov
decb
mov
lock
adcb
xor
in
pop
mov
cmp
add
inc
xchg
xchg
adc
mov
inc
outsl
lods
das
pop
xchg
pop
mov
or
jp
stc
adc
pushf
and
cmp
int
cmp
std
daa
push
pop
lcall
mov
idivl
add
mov
jmp
insb
mov
and
push
xchg
repz
sbb
mov
cmpsb
sbb
and
sbb
imul
cs
xchg
xor
jl
addr16
push
scas
sbb
adc
jae
xchg
shl
adc
mov
adc
dec
or
popl
addr16
pop
out
xchg
xor
out
cmp
mov
pusha
push
std
adc
sbb
divb
divl
cmc
sbb
aam
icebp
push
push
rorb
mov
add
data16
test
data16
into
mov
or
sbb
xlat
out
add
std
xor
in
jns
aaa
cmp
cmp
data16
bound
stc
sub
mov
std
mov
ret
es
ljmp
addr16
aam
push
inc
pushf
inc
pop
push
sub
fisubrl
in
dec
in
mov
cmp
std
in
push
stos
push
cmp
or
cmp
push
pop
hlt
das
into
cltd
ljmp
and
stos
in
lock
xor
and
mov
nop
cmpb
jmp
inc
cmp
xor
push
or
mov
ljmp
dec
xor
push
mov
test
outsb
mov
lret
xor
filds
popa
mov
clc
pushf
pop
in
push
mov
xchg
test
mov
in
mov
pop
push
popa
es
xor
xlat
lods
push
jp
mov
fs
adc
xchg
int3
dec
fldcw
sub
inc
inc
daa
jmp
cld
jnp
push
dec
stos
cs
pop
mov
sbb
add
out
lcall
andl
dec
ficoms
xchg
mov
push
ret
mov
dec
imul
dec
rorl
cwtl
movsl
xor
js
mov
and
pop
or
pop
jle
push
lea
int3
lods
inc
movl
ds
cmp
pusha
and
mov
lahf
xchg
popa
repnz
pop
add
mov
mov
mov
and
xchg
mov
sub
inc
gs
inc
dec
aad
es
inc
sbb
mov
and
mov
inc
or
std
sbb
scas
pop
gs
jno
add
xlat
pusha
or
rcr
int
loope
push
ret
shr
sub
push
xchg
addl
lret
loope
cltd
mov
xor
adc
les
add
push
push
loopne
push
xchg
mov
mov
pop
xchg
mov
adc
push
inc
pop
or
jge
dec
xchg
add
xlat
test
mov
sbb
insb
pop
or
movsl
inc
add
xchg
out
jno
dec
push
add
rcrb
negb
adc
dec
mov
sub
test
cmp
test
adc
mov
scas
shl
out
nop
and
ficomps
icebp
cs
lea
mov
aam
fcomps
cmc
out
std
dec
mov
pop
nop
dec
cmp
or
cmp
leave
test
rcr
iret
pop
adcl
out
out
stos
inc
sti
sub
outsl
push
ss
sub
movsl
test
idivb
dec
rcrl
or
add
fstps
sbb
push
incb
xchg
icebp
mov
cmp
paddd
pop
hlt
or
fiaddl
mov
out
pushf
hlt
mov
or
pop
gs
mov
pop
mov
add
into
add
adc
out
std
stos
lahf
cltd
adcl
mov
cmp
repnz
jp
mov
fwait
jmp
test
lea
pop
and
add
sub
clc
push
loop
add
into
les
aam
das
mov
outsb
pop
ljmp
dec
sbb
mov
imul
aaa
mov
out
imul
lahf
dec
pop
aam
enter
dec
xlat
and
sub
sbb
dec
lea
dec
sub
xchg
ds
jecxz
add
rcl
imul
or
jge
sbb
lahf
loope
mov
scas
lea
add
and
add
and
inc
or
lret
add
jo
in
dec
rorl
mov
mov
cmp
int3
adc
dec
mov
ret
fs
lret
daa
ficoml
loope
jge
inc
shl
jg
shl
out
mov
push
das
iret
insl
loop
aam
inc
xchg
mov
and
pusha
call
cmp
imul
sub
lea
arpl
test
xor
push
dec
xchg
adc
stos
add
and
lds
mov
inc
sub
jl
dec
mov
inc
cld
movsb
lods
xchg
sarl
mov
aaa
add
subl
lret
xchg
mov
xorb
xor
sahf
test
dec
cmc
xchg
ds
jae
out
jbe
fs
push
repz
addr16
fidivl
or
data16
es
jmp
fwait
es
add
loope
ret
loope
in
movsb
sarb
and
pop
pop
fstp
dec
negb
mov
dec
mov
sti
iret
movsb
mov
jmp
mov
rclb
mov
add
das
jnp
movsb
ss
movsl
add
cmpsl
push
rcl
jns
xor
ss
pusha
xor
ljmp
mov
or
dec
subb
sahf
mov
ss
sub
fwait
inc
rcrb
mov
cmp
test
imulb
adc
fnstenv
and
stc
andl
and
orl
loop
lahf
arpl
mov
mov
jge
xchg
push
test
or
cld
or
pop
xor
out
test
xchg
imul
ljmp
je
lock
movl
push
jno
sub
mov
pop
xchg
and
dec
fistl
scas
imul
mov
mov
mov
push
shlb
stos
int
lahf
cmp
sbb
fwait
mov
push
dec
jo
push
ret
xchg
leave
mov
daa
lods
mov
jno
int
outsb
ror
mov
and
jae
imulb
sub
je
inc
adc
mov
xchg
push
inc
add
xchg
xor
cld
stc
popa
insl
orl
mov
pop
rcrl
push
pop
push
pop
dec
mov
sbb
outsw
jb
adc
sbb
mov
ficomps
arpl
cmpsl
mov
jno
or
popf
or
mov
xchg
ret
loopne
adc
push
pop
mov
xor
inc
and
mov
mov
and
lret
filds
cli
stos
inc
inc
add
mov
mov
mov
icebp
sub
cmp
aad
jge
gs
xor
out
outsl
mov
lret
lret
pop
mov
lea
mov
xor
lcall
adc
mov
das
inc
mov
inc
in
pusha
push
jb
mov
inc
and
test
fstl
lcall
int3
out
xchg
std
clc
push
and
outsb
cmc
or
bound
sbb
inc
fdivs
sahf
jne
mov
fisttpll
aaa
stc
pop
or
mov
mov
push
xchg
xor
int
pop
dec
sub
inc
inc
cmpsl
sub
pusha
adc
or
aad
jecxz
pop
jmp
mov
out
aam
adc
add
es
gs
gs
add
mov
rorl
cmpsb
insb
lahf
outsl
and
jbe
inc
and
push
imul
push
mov
cld
addr16
mov
mov
ss
xchg
subb
cmpsl
sahf
mov
ror
in
scas
dec
push
dec
pop
jne
jge
cmp
or
lds
and
popa
pusha
inc
mov
ljmp
cwtl
insb
add
cs
pop
rorl
fs
pop
popf
jns
pop
pop
lret
xor
mov
xchg
jnp
or
ljmp
xor
push
mov
cmp
sahf
lret
inc
or
lea
test
loop
mov
adc
pop
mov
xchg
and
decb
adc
cmp
mov
mov
mov
xor
cmpsb
hlt
sub
inc
sub
xchg
fldl
outsl
into
pop
sahf
jl
inc
sti
mov
cmp
inc
out
add
test
outsl
pop
daa
gs
push
adc
test
xor
dec
lahf
jp
inc
pusha
add
pop
jbe
aaa
fcoms
push
rcrb
out
sti
dec
add
in
dec
xor
outsb
bound
repnz
aas
inc
addr16
addr16
loope
xchg
add
and
das
mov
and
es
sub
adc
mov
add
jo
push
push
cmpsl
adc
fdivs
dec
in
daa
mulb
enter
das
cs
imul
clc
mov
rorl
xchg
daa
jp
sub
repz
ss
push
mov
movsb
popa
jmp
outsl
push
stc
ja
jne
cltd
mov
xlat
aam
ljmp
cmp
loopne
lret
sbb
dec
cmc
outsb
mov
scas
lock
js
mov
js
pushf
pop
xchg
xchg
shrl
cmp
sbb
or
dec
stc
icebp
adc
dec
dec
addl
sbb
push
idivb
sbb
sti
cs
push
mov
lcall
fistpll
pop
ss
sub
or
test
inc
cmpb
mov
and
mov
jle
mov
add
rcrb
into
mov
adc
xchg
scas
mov
imul
xor
les
mov
mov
push
mov
dec
ljmp
sbb
call
xchg
sbb
jmp
xchg
mov
xor
push
cwtl
cs
test
int
sbb
sub
xor
xchg
push
push
inc
add
xchg
push
cmc
jne
outsl
and
out
jle
sbb
stos
fnstcw
xchg
adcl
stos
mov
or
cwtl
out
jmp
loopne
push
shl
shlb
test
adc
loop
pusha
xchg
ret
fstps
or
adc
jnp
test
jmp
jns
lahf
test
repz
test
imul
call
stc
jle
push
out
cwtl
add
jg
dec
inc
cmp
and
xchg
mov
xor
xorb
push
lea
jno
ss
xor
andb
loope
cs
cmc
add
movsl
inc
mov
rcl
sbb
notl
xlat
cmovae
in
dec
sbb
sub
bswap
fs
addr16
jb
xchg
ret
or
lds
push
dec
out
xlat
ss
push
lret
hlt
insl
push
mov
xchg
daa
xchg
scas
inc
fnstsw
into
mov
jg
stos
push
xchg
sub
int3
xor
cmp
add
or
nop
movsl
adc
pop
fcompl
int3
and
jbe
imul
cmp
pusha
xor
outsb
mov
pop
fadds
push
out
xchg
ret
repz
add
sbb
shlb
inc
adc
xor
popa
imul
data16
aam
aam
repnz
js
inc
stos
in
xor
pusha
ljmp
dec
fdivrl
ret
mov
addb
lds
fnsave
or
test
mov
ja
cs
bound
sbb
mov
pop
orl
stc
sbb
cmp
xchg
dec
dec
push
aaa
cmpsl
xchg
lods
aas
dec
dec
add
pop
call
adc
jle
enter
sbb
stos
dec
xchg
push
and
cmp
fdivr
mov
cld
rcrl
int
pop
jnp
adc
in
adc
xor
xor
aam
xchg
xor
push
mov
popf
repnz
les
ljmp
cmpsl
adc
cmp
jmp
mov
jge
xlat
aaa
xchg
jne
jl
lock
fdivl
cmp
pop
fiaddl
fcmovne
cmp
push
movsl
dec
daa
push
cmp
test
movsb
mov
out
push
mov
subl
mov
fmuls
loop
jg
repz
hlt
mov
jg
sub
jl
mov
ds
mov
ja
imul
and
imul
cwtl
cli
popa
sbb
xlat
pop
in
or
inc
dec
dec
lcall
push
inc
xlat
mov
ljmp
mul
xchg
mov
jge
fisttps
insl
push
push
push
repz
push
into
and
sub
push
add
ds
cltd
sbb
fidivl
jbe
adc
jmp
or
push
jmp
dec
sub
inc
cs
test
insl
and
xorb
shrl
int
or
mov
pop
sub
jae
cmpsb
mov
pop
adc
out
mov
xor
mov
popa
pushf
cltd
cmp
clc
adc
sub
lret
add
nop
jae
push
shrb
je
fmull
gs
push
mov
out
adc
call
daa
xchg
push
fnstcw
lds
xchg
cmpsl
cmp
pusha
dec
mov
inc
or
lret
jb
fiadds
mov
shlb
cwtl
add
fisubs
mov
int3
xchg
fst
or
adc
mov
mov
pop
xor
ret
popa
cmp
pop
cltd
lods
sahf
je
gs
cmp
mov
push
iret
testb
mov
jecxz
mov
push
rorl
xchg
fdecstp
and
push
test
scas
imul
inc
push
push
in
out
or
add
and
xor
lds
jecxz
adc
jne
roll
inc
mov
push
cmp
fstpl
outsl
mov
and
adc
or
xor
loopne
fcompl
xchg
pop
push
rcll
fs
and
adc
lods
add
cmp
jb
pop
shrb
imul
nop
bnd
jmp
pop
test
out
movsl
insl
fmuls
or
test
xchg
push
push
aas
add
fisubrs
fsts
addb
and
aad
int
xor
xchg
test
and
fimull
pop
hlt
sti
and
pop
push
jge
jno
outsb
pusha
inc
pop
pop
fs
mov
dec
sbb
dec
mov
add
mov
fstl
test
sub
lods
push
lret
mov
popf
mov
cld
jb
mov
dec
scas
bound
xor
dec
in
repnz
icebp
push
inc
jne
adc
rorb
mov
imul
jns
push
cmp
aaa
and
mov
sbb
stos
mov
stos
int3
xchg
cltd
xchg
add
in
push
cmp
xchg
out
in
notl
push
xchg
xor
sub
add
mov
adc
cmp
ds
cmp
cs
hlt
add
sub
addl
sbb
pop
shl
loope
mov
call
xor
pusha
testl
mov
fldenv
shll
rcll
movsl
sahf
cld
loop
lods
mov
ss
hlt
mov
xchg
loope
ficompl
movsb
stc
mov
mov
push
int
bound
ret
sarb
cld
outsl
adc
std
lcall
fisttpll
mov
mov
scas
cmp
ror
and
or
ljmp
push
aaa
imul
mov
sbb
bound
or
fidivs
mov
jne
mov
jns
push
hlt
into
outsb
mov
aas
fmull
insl
mov
fcompl
xlat
cmpsb
mov
adc
xchg
inc
sub
lods
sub
jp
mov
ret
jb
lahf
out
add
sbb
xchg
mov
movsb
mov
add
addr16
fnstsw
dec
mov
ret
sub
cmp
mov
xchg
jecxz
and
pop
lcall
js
sbb
mov
out
sbb
fdivrl
pop
mov
lret
push
jae
nop
sub
xchg
iret
cld
push
ljmp
aas
sahf
mov
std
dec
xor
inc
sub
pop
mov
sahf
mov
jae
imul
inc
not
sti
mov
out
hlt
test
add
ret
xchg
scas
xchg
mov
scas
push
xor
das
lods
icebp
and
xchg
mov
push
inc
xchg
and
orl
push
push
movsl
sub
adc
jno
lods
aaa
bound
loop
mov
dec
xlat
cmp
aad
mov
jb
mov
clc
fmuls
mov
movsb
adc
or
push
jl
les
xchg
cmp
jbe
fs
dec
stos
lods
mov
enter
ficompl
xchg
mov
xchg
test
jo
and
fwait
pop
jae
loopne
in
mov
mov
cli
int3
xchg
cmp
fstp
xor
mov
xor
adc
bound
cmc
sub
cmp
lea
inc
mov
jl
and
rcrb
jbe
std
gs
adcb
mov
and
fmuls
dec
cmp
jnp
pop
shrb
pushf
inc
cmpb
mov
gs
dec
mov
jb
xlat
and
push
dec
les
mov
lea
add
cmp
push
xor
movsb
push
ficompl
stc
cli
js
mov
dec
add
pop
lret
cmp
jecxz
push
mov
push
sti
and
or
xchg
dec
je
dec
test
xchg
add
pushl
xchg
imul
ficomps
jnp
mov
push
sahf
ret
mov
lahf
lret
mov
sub
cmp
sti
dec
push
mov
dec
cli
inc
lcall
cltd
aas
and
iret
pop
jno
inc
pop
inc
mov
dec
mov
repnz
imul
fidivrl
jno
fwait
add
int3
adc
popa
xor
stos
jnp
cltd
dec
test
adc
mov
js
fimuls
xor
iret
xorb
xchg
dec
call
sub
cmpsb
add
ficoms
jbe
loope
sub
jo
sbb
ljmp
mov
push
xor
xlat
inc
push
std
fnstsw
aad
aad
sub
das
int
fistl
sbb
jl
out
les
pop
mov
mov
idivb
push
cmp
xchg
xchg
int
mov
andb
imul
inc
sbb
popa
and
sub
sub
dec
and
scas
push
in
cld
dec
movsl
enter
inc
ret
loop
jmp
or
cmc
scas
sbb
add
jl
das
out
daa
cmp
sub
addr16
inc
in
sub
or
mov
and
cmc
mull
and
push
mov
rorb
in
sub
loop
jp
push
pop
or
and
in
arpl
test
stos
pusha
ss
aaa
xchg
shll
pop
les
in
stos
clc
mov
jbe
inc
arpl
bound
or
mov
or
sub
movsb
lcall
repz
test
pop
dec
lret
push
call
mov
ja
push
xchg
mov
les
dec
jge
pop
test
ljmp
sub
cmp
lahf
orl
call
xchg
pop
popf
ljmp
lret
dec
stos
shrl
pop
pushl
xlat
cmpsl
negb
and
xor
and
xor
outsl
lods
xlat
xchg
mov
cmc
loop
sub
cmp
adc
inc
push
mov
xchg
jecxz
mov
or
lock
popa
add
dec
rcrb
divl
xchg
outsb
mov
mov
jns
pop
stos
and
cltd
sahf
pop
outsb
dec
fiaddl
xchg
push
cmpb
mov
aad
inc
std
xchg
out
insb
insl
popa
or
xor
js
gs
gs
sti
jne
nop
out
mov
popa
loope
and
cmp
or
mov
in
sub
pop
add
stos
sub
stc
movsl
insl
jnp
push
xchg
jb
pop
inc
adc
push
ljmp
jge
jmp
into
jmp
movsb
jmp
movsl
call
push
dec
shrb
fcmovnu
scas
enter
cwtl
jp
std
mov
out
push
mov
add
xchg
push
dec
adc
push
int3
pop
and
push
cwtl
pop
sbb
nop
pop
adc
fstl
xchg
pop
in
into
and
and
mov
scas
je
ret
call
lcall
cld
lods
into
sbb
aad
xchg
pop
arpl
into
leave
jne
cmp
xchg
cmp
pop
int
jb,pn
jp
in
jmp
adc
movsl
pop
cmp
sbb
pop
lahf
or
std
sarl
xchg
push
aam
sbb
subl
inc
lret
push
fcoms
push
jb
aad
xchg
mov
ret
bound
cmp
fcmovnbe
imul
xor
mov
pop
xchg
jmp
mov
add
in
movsb
jnp
push
imul
cmp
aaa
loop
aad
iret
xchg
cli
xchg
cmc
fsubrl
fistpl
and
lret
subb
hlt
addr16
push
cmp
sbb
dec
ret
fs
rolb
cmp
arpl
data16
xor
popf
gs
into
cld
mov
sbb
scas
adc
orl
cmp
aaa
lods
adc
es
cwtl
es
movlps
mov
aaa
pop
cmp
stc
das
xorl
push
jp
pushf
lahf
xchg
xchg
lcall
mov
inc
nop
push
into
stos
cwtl
loopne
xchg
test
push
push
xor
cltd
and
jg
mov
cmp
lods
out
inc
or
das
mov
jp
lcall
clc
sub
call
push
push
sahf
sub
mov
ss
push
push
stc
xchg
and
xor
aas
int
adc
dec
js
push
push
pop
or
or
rcrb
mov
dec
jge
js
xchg
ljmp
icebp
imul
push
push
scas
xor
or
rorl
sub
xchg
ljmp
scas
jmp
add
popf
and
shlb
mov
sub
mov
popf
xchg
sub
aas
rsm
fwait
ret
adc
xor
rcrl
notb
jg
notl
orb
mov
mov
pop
or
loope
in
popf
jne
add
mov
or
pop
imul
mov
leave
pop
jge
xor
dec
shll
fimuls
fildll
imul
into
rcrl
mov
sbb
stc
inc
test
and
and
pop
cmp
jmp
sub
pop
pop
mov
push
cmpsl
dec
jb
js
pop
cmpsb
xor
mov
sarl
sbb
daa
sahf
jmp
or
insb
add
in
insb
push
cmc
enter
cmp
push
into
mov
dec
fxch
imul
insb
pop
or
nop
in
int3
xchg
jno
scas
adc
dec
xlat
test
push
test
mov
inc
add
pop
xchg
mov
je
jecxz
pushf
rclb
dec
push
pop
hlt
xchg
adc
aas
ja
inc
in
cmpsb
xchg
in
pop
xchg
aam
xchg
inc
les
imul
xor
sbb
mov
adc
sub
jmp
xor
rorl
sub
mov
dec
mov
dec
mov
or
mov
fisttpll
dec
aas
jne
xlat
fistps
cltd
daa
imul
push
paddusw
xor
test
lods
shl
mov
outsl
frstor
push
add
in
sbb
pop
pop
fsqrt
aaa
sub
jb
fistps
pop
negl
loop,pt
stc
cmp
adc
push
mov
mov
mov
sbbl
push
mov
leave
cmc
inc
mov
jnp
iret
jne
pusha
scas
cld
push
into
mov
aaa
inc
cmp
movsl
sbb
in
jne
notl
cltd
test
jp
ret
add
mov
mov
xchg
in
test
in
mov
scas
in
mov
cmp
mov
filds
xchg
lret
mov
add
xchg
aaa
test
xchg
inc
dec
inc
mov
outsl
ret
call
psubsb
xchg
lret
mov
or
popa
fdivrp
std
mov
lret
and
cmpsl
in
xor
pop
mov
mov
loop
mov
jmp
xor
pop
cmp
xlat
pop
loop
sub
fucomi
stos
das
hlt
dec
add
inc
xor
pop
mov
dec
push
pop
pop
test
push
fisubrl
xor
pop
dec
adc
xor
cmpsb
xchg
xor
test
test
mov
loop
stos
mov
sub
xor
scas
inc
sub
pop
push
cli
xchg
stos
hlt
cld
pop
inc
lahf
mov
xchg
jge
dec
cli
in
stc
std
int3
lods
cld
jae
adc
jmp
cltd
mov
pop
ja
stos
add
mov
mov
sbb
sbb
cmp
jae
lods
push
cld
cld
jbe
daa
sbb
movsl
and
and
shlb
adc
js
mov
or
movsb
push
cmp
test
test
mov
cwtl
or
in
inc
and
in
fsts
pop
cld
repnz
mov
and
mov
inc
xor
aaa
repnz
mov
pop
lret
xor
pop
adc
mov
mov
js
enter
dec
push
add
ret
mov
in
fcmove
mov
in
movsb
pop
test
int
arpl
nop
ror
lahf
cmp
popf
test
sub
fsubrs
push
dec
pop
and
push
push
mov
jbe
add
cwtl
cli
mov
jle
dec
sbb
push
in
es
in
cmpsl
enter
daa
outsb
std
hlt
sub
mov
xchg
imul
xchg
cld
dec
imul
push
push
cmp
jp
or
enter
jle
sahf
repz
dec
lret
push
aaa
or
test
push
inc
fwait
js
push
jnp
and
mov
pop
dec
ja
mov
mov
mov
jae
push
push
fbld
push
js
add
loopne
cld
dec
cltd
sbb
inc
stos
mov
pop
aaa
mov
inc
xchg
sub
sub
jae
cmp
push
xchg
and
inc
int
push
mov
xor
adcl
jp
rorl
movsb
shlb
gs
dec
icebp
dec
cltd
push
aad
jecxz
lods
sahf
add
bound
arpl
xchg
test
pop
iret
into
aad
out
loop
fdivl
push
jno
dec
enter
sbb
fadds
sub
inc
insb
pop
aam
pop
fisubs
adc
xchg
rorb
sbb
push
aam
or
pop
mov
mov
ja
push
mov
sub
push
movsl
imul
ljmp
loop
cmp
adc
push
sbb
iret
xchg
xlat
dec
clc
fucom
pop
loope
inc
cs
lcall
movsl
call
aas
sub
jno
ljmp
sahf
call
and
mov
iret
mov
pusha
mov
or
neg
mov
insb
mov
mov
xor
sub
sub
icebp
fs
jbe
insb
gs
stc
mov
hlt
jl
or
mov
jl
pop
xor
adc
pusha
ret
inc
xchg
insl
icebp
jg
sub
pop
or
sub
mov
ljmp
inc
sbb
loop
push
in
decb
dec
mov
dec
jge
ja
mov
lret
mov
or
jp
js
popa
mov
daa
dec
call
call
fstp
sub
sub
or
pushf
pop
sbb
mov
push
mov
jp
cmc
jge
lret
push
sbb
out
adc
mov
pop
pusha
mov
hlt
add
adc
sbb
adc
pushf
in
mov
add
push
inc
es
stos
mov
das
push
scas
mov
inc
sbb
sub
aaa
xchg
xchg
add
xchg
sbb
sbb
inc
jmp
cmpsl
inc
mov
sti
cli
pop
pusha
outsb
fisttpl
inc
xlat
sub
fcmove
out
jge
sub
rorl
int3
cmp
xchg
ror
dec
fnstenv
insl
sub
andl
xchg
movsl
leave
test
mov
pop
mov
fmull
adc
repz
sbb
out
mov
adc
cld
add
mov
mov
loope
hlt
dec
inc
jge
mov
in
rcrl
outsb
dec
inc
xor
sub
mov
mov
loop
lea
cmpsl
xor
leave
aas
testb
push
test
adc
adc
push
xchg
pop
pushf
add
dec
scas
mov
out
cli
or
das
cmp
icebp
shll
je
cmp
adc
arpl
xchg
lds
or
sarb
lods
nop
pop
xchg
sbb
in
ficomps
daa
push
cmpsb
dec
push
and
cwtl
lods
mov
lods
inc
cmc
sbb
jl
jo
ret
cmc
mov
rcl
int3
stc
out
dec
pop
cs
roll
push
sarl
sti
sbb
repnz
or
jae
sub
outsl
jmp
mov
and
jne
cmp
pop
xor
nop
xchg
xor
sbb
fisubrl
mov
lahf
in
movsl
dec
or
fwait
in
stos
push
jo
outsb
loope
xchg
sbb
mov
mov
sti
add
mov
lret
ret
cwtl
push
inc
inc
dec
pop
xchg
mov
mov
out
imul
push
lret
pop
mov
push
jecxz
or
lea
inc
or
dec
push
sbb
insb
push
call
jo
aad
jecxz
rolb
rclb
inc
xchg
filds
jo
push
das
sub
fcoml
mov
outsb
push
ja
movsl
xchg
or
insb
xchg
add
fbld
inc
add
hlt
sbb
call
ljmp
dec
xchg
out
mov
jecxz
mov
add
add
popf
mov
pop
jecxz
inc
ret
ficoms
jecxz
lahf
xorb
push
aas
stos
xchg
xchg
mov
shrb
pop
mov
popf
pop
movsb
pop
movsl
mov
cwtl
dec
fdivl
xchg
mov
lods
push
cmpl
add
es
lcall
std
jne
dec
arpl
mov
sbb
push
nop
or
sbb
dec
test
push
divb
data16
jb
push
in
mov
hlt
xchg
rcrb
adc
ljmp
cmp
test
fstps
jge
enter
pop
add
pop
lcall
into
mov
fidivs
adc
or
lahf
and
adc
das
add
fwait
dec
dec
jb
pusha
cld
jl
mov
insl
fadd
xor
cmp
xchg
xor
mov
sbb
xchg
inc
dec
out
lods
stc
xchg
sub
cmc
mov
outsb
std
cmpsl
sub
mov
repz
mov
int
pop
es
andl
call
sub
adcb
insb
icebp
xor
dec
jl
insb
jne
loopne
test
dec
mov
lds
sub
daa
mov
mov
loope
fprem
fmul
fstpl
test
mov
mov
mov
imul
cs
mov
data16
inc
rol
xor
pop
lret
add
jb
test
icebp
add
in
stos
insl
jb
arpl
dec
pop
ss
popf
sbb
out
mov
pop
inc
je
imul
stc
xor
and
iret
or
pushl
std
mov
popf
inc
scas
fcmovbe
xor
lds
xor
pushf
out
push
in
ret
adc
jns
pop
popf
dec
out
repz
int
call
loope
cmp
mov
adc
je
dec
imul
push
cmp
jg
jge
push
hlt
enter
or
dec
mov
adc
mov
dec
cmpsb
shll
or
jle
orl
push
inc
xchg
sbb
lea
cmp
add
sbb
mov
or
sub
mov
xor
xor
add
daa
dec
add
dec
shll
enter
stos
add
sbb
add
add
imul
push
sti
xchg
and
push
in
cmp
and
sti
adc
popa
cmp
clc
push
or
cmpb
lret
push
out
lret
bound
jmp
jns
xchg
stos
cmp
in
inc
mov
shlb
jne
mov
add
sbb
fsubl
mull
xchg
pusha
mov
mov
mov
push
fldcw
sbb
aaa
stos
call
adc
sub
xchg
cs
sti
sub
mov
jo
add
push
sub
orl
xchg
jns
ret
shl
es
lods
loope
imul
xor
push
test
push
loope
icebp
jge
ljmp
mov
adc
mov
pop
adc
and
dec
lea
xor
push
xor
iret
lcall
mov
in
outsb
enter
xor
push
test
inc
add
sbb
mov
xchg
mov
hlt
cmp
xchg
jecxz
jbe
jecxz
dec
jbe
dec
pop
sbb
and
cld
push
insl
in
ja
aaa
out
in
das
lods
and
adc
pop
sbbl
lahf
sti
xor
stc
enter
imulb
aad
fidivrs
cs
mov
test
xor
ss
mov
jae
fs
push
xchg
mov
xchg
fwait
adc
cmpb
aas
imul
inc
rorb
cmp
xchg
fldt
sub
jae
dec
jp
pop
mov
pushl
lock
mov
cltd
aam
into
pop
and
push
pavgw
sbb
fmulp
inc
or
loop
je
repnz
bound
mov
pop
lea
icebp
mov
push
ja
xor
cld
cs
or
pop
xchg
and
push
push
fstpl
sarl
cmp
in
arpl
xor
dec
xchg
leave
lds
sub
lahf
cmp
out
shrb
push
imul
rolb
xchg
pop
andl
mov
pop
pop
sbb
add
orl
clc
sbb
xchg
sbb
inc
adc
pop
pusha
xor
popa
push
jmp
mov
xchg
mov
lcall
popa
cmovne
movsl
fidivs
mov
inc
sub
es
cmp
test
dec
sbb
lcall
mov
pop
xchg
loop
mov
add
xor
jg
out
stos
negb
dec
mov
pusha
mov
add
insb
ss
cmp
arpl
push
pusha
adc
lds
addr16
outsl
dec
je
push
jmp
add
dec
aam
dec
adc
iret
mov
xorl
mov
insl
adc
ljmp
or
sbb
fmull
pop
add
cmp
sbb
cltd
push
insb
push
jmp
xchg
cmp
inc
int3
pop
daa
adc
sub
cmp
mov
int3
jge
dec
jg
push
into
imul
add
cmp
sbbb
enter
xchg
push
and
mov
xor
test
sub
add
daa
pop
int3
pop
adc
or
movd
nop
dec
int
into
mov
or
lret
mov
push
sbb
pop
mov
jb
pushf
xchg
sbb
cmpl
cmpsl
mov
adc
inc
jl
jmp
out
js
pusha
gs
in
pminsw
loop
mov
scas
call
fstl
sub
xor
mov
les
and
xchg
loope
in
jae
repz
loopne
adc
mov
lods
fsts
rcll
into
fildl
mov
scas
pop
sub
mov
pop
xor
and
scas
mov
xchg
inc
fwait
inc
xchg
movsb
test
mov
push
xor
repnz
pusha
lcall
int3
ljmp
call
shll
arpl
mov
mov
pop
pop
inc
jbe
inc
ret
cmpsb
lret
fisubrs
arpl
mov
loope
shlb
inc
movb
lods
ljmp
mov
pop
jg
mov
loop
and
shll
aas
jns
shrb
or
or
mov
jg
inc
xchg
cmp
cltd
xor
stos
fimull
sbb
outsb
imul
adc
popa
xor
lock
and
into
pop
adc
cmc
inc
jne
add
mov
lock
test
push
std
jl
push
pushf
mov
pop
xlat
je
lods
clc
adc
bound
stc
mov
jle
mov
sbb
add
or
bnd
lcall
test
push
mov
pop
ret
scas
add
test
mov
test
fstpl
or
mov
addr16
dec
xchg
js
ds
fidivs
leave
sti
cli
or
jns
xlat
dec
xor
iret
sbb
pop
insl
sbb
sbb
mov
shll
sub
mov
mov
xchg
ficompl
arpl
mov
add
mov
pop
call
ljmp
dec
jo
sbb
adc
push
jb
mov
or
xor
dec
ja
push
push
rcll
dec
xchg
sbb
pop
loop
mov
pop
dec
pop
xchg
cmpsb
inc
pop
cmp
xorb
out
mov
push
ja
into
mov
mov
push
outsl
aad
dec
and
in
fisttpll
mov
push
lods
mov
out
cmp
in
add
pop
cmc
push
stos
cmp
paddusw
jo
sub
ja
cwtl
cli
jne
mov
xlat
stos
pop
icebp
leave
and
xor
or
pop
int
add
in
jno
int3
scas
jae
or
jecxz
rorl
or
mov
lcall
insl
stos
pop
push
dec
xor
enter
adc
add
imull
loopne
xor
and
fs
out
or
jp
xor
jg
repnz
and
ljmp
add
dec
mov
xor
pusha
inc
mov
push
fadd
mov
ret
int
or
dec
ljmp
fwait
and
or
ss
mov
ror
int
adc
ficompl
jmp
outsb
add
stos
sahf
xor
cs
outsb
das
mov
je
and
sub
sbb
push
inc
mov
adc
mov
sub
es
push
pop
fs
pushf
jle
inc
cwtl
push
sbb
stc
fwait
xchg
jmp
jmp
adc
int3
dec
adc
push
fwait
add
jl
cmp
or
int
inc
or
pop
pop
or
pop
fdivrl
sbb
dec
arpl
mov
mov
out
ret
jge
push
push
adc
les
gs
fs
stos
inc
test
mov
cmp
js
push
xor
data16
and
das
push
sbb
xchg
jle
dec
lea
imul
mull
fadds
inc
mov
scas
outsl
sub
fs
inc
addr16
mov
push
loop
xor
into
xor
jo
out
xchg
mulb
mov
out
outsl
pop
mov
je
push
pop
pop
jo
cmp
rcll
and
inc
xor
ret
mov
push
subb
xchg
out
add
and
rcl
sub
sbb
push
and
sarb
aas
fidivrs
and
pop
lods
fnstcw
nop
pop
mov
inc
jns
sub
in
adc
mov
mov
sbb
je
xor
imul
cld
loope
mov
mov
insl
xchg
cld
aam
mov
xor
stos
popa
pusha
ja
push
dec
mov
mov
adc
or
mov
mov
pushf
mov
sbb
inc
jb
or
push
fldt
pop
sub
mov
push
add
adc
gs
loopne
jo
xchg
negl
in
push
jp
cmpb
xchg
pop
loope
imul
test
rcll
fildll
mov
hlt
xlat
outsb
test
sub
imul
sub
sbb
xchg
mov
imul
out
inc
sbbl
fsubl
movsl
or
cltd
popl
xorb
xor
and
stos
jb
xor
sub
sub
int
add
sbbl
cltd
mov
imul
nop
test
add
std
into
shl
mov
out
add
or
cltd
push
xor
enter
add
lret
add
gs
push
pushl
push
add
add
js
cli
or
fucom
add
push
or
push
lds
sub
bound
jo
in
popf
sti
lret
pop
sarl
out
pop
clc
sarb
les
lcall
xor
inc
mov
xor
lahf
add
loopne
xchg
arpl
sbb
movsb
xor
pop
push
ret
testl
push
clc
pop
popf
xor
inc
inc
out
loop
push
arpl
fcmovbe
adc
mov
sbb
test
aam
inc
fmul
out
mov
jo
dec
inc
outsb
jl
inc
popa
jp
je
ja
pop
mov
pop
push
popf
stc
cmp
mov
xor
push
dec
rcrl
xchg
or
ret
xor
ret
inc
data16
pop
add
mov
sbbl
ret
or
popa
sbb
ds
xchg
in
mov
int3
loopne
imul
jno
sub
scas
dec
in
mov
sar
xchg
or
shll
pop
iret
mov
jae
push
out
or
add
pop
call
jl
adc
pop
sbb
cmp
or
push
inc
push
mov
push
push
mov
push
imul
ds
pusha
adc
ss
int3
mov
mov
jnp
dec
sub
ret
pop
and
cmp
aas
popf
popa
loope
test
xor
cmp
adc
adc
hlt
pop
ljmp
ss
pop
cmp
outsb
push
mov
and
push
sbb
fldl2t
ret
loope
js
loopne
int3
out
push
out
cmp
xor
pop
jl
push
dec
adc
push
sbb
jp
push
sub
mov
lock
sub
lret
jge
cltd
sub
shrl
sub
mov
aam
ficomps
sub
mov
mov
or
je
lods
jne
mov
lcall
dec
fnstsw
xor
loop
adc
and
loope
add
inc
insl
lret
ljmp
scas
sub
sub
shlb
loop
test
jecxz
mov
mov
adc
push
add
xor
dec
mov
into
lret
clc
dec
mov
lcall
and
adc
addr16
or
mov
lret
pop
dec
mov
mov
out
jno
inc
scas
cmp
insb
lods
aaa
sbb
mov
mov
in
test
ss
loope
ds
in
imul
and
mov
mov
shlb
jo
lea
cmp
lock
gs
nop
adc
dec
jge
inc
mov
sub
in
add
loope
dec
jbe
inc
test
jp
je
inc
fistl
adc
or
lcall
mov
pop
pop
outsb
or
xor
push
testb
cmpsb
and
mov
lods
xorl
mov
sub
scas
rol
jb
popf
add
mov
sub
ffree
repnz
cmp
xchg
cs
notl
in
inc
int
inc
in
sarb
shlb
ret
nop
aad
push
stos
push
mov
cmp
sbb
xor
or
cmp
hlt
shl
rclb
insb
shrb
mov
add
or
leave
loope
fidivrs
cmp
pop
pop
mov
ss
adc
mov
sub
repz
xchg
iret
xchg
mov
fisubs
aas
push
aad
inc
jae
mov
jecxz
jge
mov
adcb
or
jns
int
das
ja
pushf
test
xchg
out
push
mov
cwtl
xchg
jecxz
test
sub
or
mov
inc
das
cltd
ds
std
lods
and
aaa
inc
nop
push
loop
orl
jno
ret
stos
jno
popa
or
pop
push
arpl
xlat
dec
lret
into
pop
pop
mov
mov
sub
shrb
mov
xor
call
xchg
push
stc
cltd
mull
ret
inc
sahf
push
adc
fiadds
loopne
dec
xor
sahf
jae
cli
and
jae
ja
js
or
xor
xor
repz
lret
fisttps
shll
cmpsb
mov
repnz
dec
mov
pusha
pop
out
cmp
test
sub
outsb
sub
cwtl
daa
mov
iret
or
or
arpl
fidivl
mov
ljmp
push
mov
popf
in
jge
call
mov
adc
cltd
and
dec
in
xchg
push
inc
fisubl
push
pop
fistpl
repz
rolb
cltd
scas
outsl
dec
out
and
jae
enter
lea
sbbb
jbe
jne
push
cmp
xor
mov
fcompl
out
mov
xchg
fs
sbb
arpl
std
xchg
pop
cmp
mov
fcmovnb
mov
xor
cltd
repnz
bound
ss
mov
mov
fcoms
aam
sub
sahf
push
sbb
movsl
jne
incb
mov
push
sub
jnp
or
mov
ja
push
hlt
js
push
cmpl
int
dec
cmp
popf
lock
pop
dec
fistl
scas
mov
sar
inc
int
adc
xor
xchg
dec
fdivs
sahf
addr16
repz
mov
sbb
not
mov
mov
cmpsb
and
lcall
jmp
jl
mov
call
jbe
xchg
xchg
fwait
mov
sub
xchg
and
jge
loope
fprem
out
xor
mov
cld
addr16
push
push
gs
fucom
std
mov
push
mov
shll
iret
fs
inc
add
push
hlt
jnp
bound
jae
mov
mov
ret
inc
jne
push
xchg
dec
pop
mov
sbb
sbb
jns
adc
aad
vmaxsd
jo
xchg
jp
push
inc
inc
mov
dec
inc
scas
cwtl
in
xchg
imul
mov
sbb
xchg
push
cmp
inc
sub
push
lock
push
loop
jge
lret
and
loop
popa
dec
insb
mov
jl
xchg
mov
sti
mov
push
mov
inc
inc
in
out
inc
out
adc
scas
xchg
fs
jnp
jg
sub
dec
adc
lock
and
int3
inc
xor
or
mov
mov
enter
push
mull
or
push
clc
pop
and
stos
cmc
outsl
mov
stos
scas
sub
mov
inc
push
sub
lock
repnz
sub
shlb
lock
rcrl
imul
adc
push
or
cs
mov
xlat
lea
jae
dec
lds
aaa
mov
aam
xchg
pop
dec
insb
jecxz
pop
xchg
adc
sub
jmp
add
out
mov
fstl
cli
mov
add
leave
adcb
mov
insl
add
lret
mov
cmp
mov
repz
xchg
cmpsl
imul
aad
incl
jno
push
jne
inc
push
jns
lcall
add
dec
scas
sub
mov
sbb
add
mov
xchg
adc
int3
imul
adc
xor
push
dec
sbbl
outsb
in
inc
mov
push
leave
pop
and
stc
test
inc
es
and
cld
cmp
jnp
enter
push
add
clc
popf
push
lahf
rcrb
dec
in
imul
cmp
push
aaa
subb
add
ret
jge
int3
xchg
aaa
in
and
add
insb
gs
xchg
jnp
push
cmp
popf
f2xm1
rclb
xlat
test
loopne
popf
inc
or
rol
sub
xor
push
sbb
pop
adcl
dec
inc
fisttpl
pop
mov
imul
imul
test
sub
into
stos
inc
cmp
xchg
movsb
jae
int3
mov
fcompl
fcoml
push
jmp
pop
add
mov
dec
call
lock
aam
push
and
add
xlat
loope
cs
xor
push
aaa
jge
and
cmp
cltd
jl
mov
dec
cmp
cld
sbb
fsubrl
mov
test
dec
arpl
push
xor
ss
sub
and
cmp
ret
mov
icebp
fcmove
lahf
rcrl
out
mov
mov
in
mov
inc
cli
mov
ja
lcall
imul
aas
mov
hlt
dec
add
in
loopne
std
pop
mov
fnstsw
rcr
add
dec
and
xchg
in
sub
sub
fwait
jle
pushf
cmpsl
mov
data16
ss
dec
mov
add
adc
adc
jg,pt
addr16
ss
addl
sbb
test
adc
out
cld
maskmovq
idivl
add
das
sahf
stos
cld
dec
or
popf
sbb
and
push
or
jns
test
cs
dec
cmpsb
cmpsl
xchg
decb
mov
mov
inc
mov
arpl
popa
mov
mov
dec
les
subl
xor
stc
inc
lcall
fisubs
clc
and
cmpsb
and
rolb
mov
sbb
je
xor
sahf
test
jge
cmpsb
add
add
fwait
and
arpl
sti
inc
pop
cmp
arpl
jns
sub
fcoms
lret
std
pop
iret
sbb
jle
sti
pop
repnz
pop
cmp
xchg
neg
clts
cmp
sub
push
inc
icebp
call
adc
ret
fisubs
bound
je
daa
adc
xor
sbb
jmp
scas
nop
xchg
popa
addl
jbe
pusha
jmp
mov
rcl
mov
add
push
mov
stc
jbe
mov
je
faddl
cmp
adc
pop
cmp
and
pushf
jl
mov
xor
jl
mov
sub
cltd
aad
imul
int
mov
sub
cld
push
jg
inc
cmp
jnp
ret
adc
test
les
fldl
push
push
test
repz
xchg
cli
or
clc
mov
push
shrb
jnp
stos
pop
xchg
sar
or
addr16
daa
outsl
adc
stos
xchg
sub
jge
mov
xchg
aaa
jnp
push
xcrypt-ofb
cmpsl
imul
mov
sub
or
xchg
mov
in
jecxz
leave
in
mulb
mov
push
popa
push
aam
mov
stos
cmc
inc
jns
jnp
mov
in
jmp
mov
lcall
add
cmp
ret
and
xlat
xchg
fmul
lahf
loope
mov
inc
insl
add
cld
das
fmull
or
pop
inc
mov
adc
arpl
inc
or
inc
dec
lea
jg
mov
imul
int
add
dec
xor
push
sahf
sbb
movsl
test
jmp
movsb
jecxz
push
idivb
push
sub
and
sub
imul
cs
in
jb
and
ja
sub
mov
sahf
outsl
hlt
jb
push
jg
in
mov
rcrb
lahf
or
inc
popa
push
cmpsl
imul
jg
adc
iret
lret
ss
sahf
fidivrl
jg
lock
rolb
mov
xor
xor
pop
cmpsl
mov
inc
data16
xor
cltd
nop
ficompl
jbe
popa
pop
xchg
add
sbb
cmp
daa
orb
and
outsb
shlb
sbb
cmp
push
adc
push
cltd
movsl
mov
bnd
cltd
ficompl
mov
loope
xchg
cmpsl
scas
adc
outsb
jb
pop
test
pop
movsb
and
cmpsb
cmpsl
mov
arpl
testl
fsubl
jg
ja
fldt
mov
sbb
dec
pop
out
in
je
xchg
push
in
xchg
imulb
iret
fiadds
in
test
leave
jo
inc
push
xchg
out
xor
cmc
bound
jae
and
jmp
fldl
pusha
int
jle
and
pop
xor
and
scas
inc
in
inc
pop
data16
dec
in
addw
sbb
mov
push
loopne
mov
ret
fs
inc
aas
cli
xor
inc
mov
inc
or
iret
cmpsb
and
ja
es
xchg
jo
mov
aaa
sbb
mov
ret
fsubrs
sbb
sbb
icebp
mov
imul
movsb
int3
jnp
dec
fdivrl
inc
mov
cli
jno
or
out
sbb
mov
stos
cmpsb
jle
xor
mov
jae
xor
adc
pop
add
lahf
ds
dec
push
pop
out
jg
push
int
sbb
sbbl
sbb
ss
std
mov
ret
jmp
sub
in
int
into
pop
std
gs
and
les
mov
add
xor
xchg
adc
mov
insl
imul
gs
dec
jb
lock
popl
call
jp
jmp
cld
test
and
mov
pop
cmp
data16
jno
push
mov
xchg
sbbl
cmc
aad
je
sub
nop
push
or
mov
dec
dec
repz
inc
push
push
mov
dec
dec
das
fidivrl
jp
and
out
lock
cltd
adc
dec
or
xchg
fwait
xchg
mov
sub
outsb
outsb
xchg
loope
test
mov
cmp
testb
push
push
ret
jns,pt
call
lahf
in
xchg
inc
hlt
cmp
fwait
xor
loope
test
add
mov
push
and
orl
div
arpl
imulb
xchg
mov
dec
imul
addr16
jne
imul
setb
mov
fcomp
addr16
subb
and
adc
sbb
cli
ret
inc
pop
loopne
xchg
ja
xchg
aaa
dec
dec
psubsw
repz
not
scas
mov
xchg
dec
sbb
mov
repz
or
dec
or
jae,pn
mov
adc
out
dec
lods
rcl
fucomp
dec
test
cmp
cmc
add
and
jnp
or
or
ficoml
outsb
cmc
mov
fnstcw
ret
inc
popa
xchg
ret
enter
push
cli
xchg
cli
or
adc
pop
sbb
orl
popf
sbb
cs
repz
xchg
and
sub
dec
mov
mov
cmp
sub
push
push
push
xor
jl
pcmpeqd
pusha
fbld
xor
mov
mov
call
inc
stos
adc
add
les
pop
and
ja
stos
hlt
adc
es
add
fisttpl
fldenv
and
push
lods
scas
push
pop
icebp
das
mov
lock
mov
mov
and
enter
or
pop
jle
mulb
cwtl
inc
inc
imul
cmp
gs
ja
popa
xchg
imul
add
aaa
lea
call
xchg
sub
adcl
xor
pop
push
ja
shrl
stos
push
mov
mov
lahf
aad
mov
dec
pop
or
and
push
add
adc
popa
mov
cs
fdivs
in
orl
gs
mov
sti
xchg
jb
pop
les
mov
clc
sbb
mov
testl
xchg
out
icebp
sbb
jge
or
sbb
fisttpl
adcb
outsb
cld
sarb
enter
rolb
xchg
addr16
lods
and
imul
pop
push
pop
or
sbb
push
ds
cld
icebp
cmpsb
out
test
insb
repnz
iret
mov
mov
sbb
adc
pop
add
mov
cmpsb
mov
movsb
mov
push
scas
fmul
lods
and
add
into
nop
daa
mov
sub
sbb
adc
mov
xchg
adc
jb
es
pushl
pusha
mov
daa
test
inc
popa
push
jns
xor
idiv
addb
adc
jecxz
or
test
pop
push
cwtl
pop
insb
mov
leave
iret
push
adc
jno
xchg
cmc
adc
sarl
shll
lret
pusha
mov
jl
jbe
faddp
adc
addl
dec
into
adc
aas
push
stc
les
mov
pop
outsb
mov
lret
mov
imul
cmc
mov
mov
loop
nop
das
daa
jns
inc
inc
push
lret
shlb
sub
jnp
shrb
jecxz
ja
popa
pop
mov
pushw
adc
lods
push
mov
orl
mov
movsl
data16
cwtl
jge
movsl
enter
and
shr
mov
push
push
inc
mov
mov
es
lahf
je
ja
cmp
push
enter
dec
sbb
lret
or
dec
push
leave
sub
pop
pop
rclb
in
into
vpshlw
push
out
in
pop
in
test
out
xchg
jp
je
xchg
je
mov
aam
and
xchg
inc
mov
inc
push
adcl
mov
hlt
fsubl
into
mov
cmp
repnz
int3
sti
mov
mov
dec
lcall
xor
or
aam
repnz
sub
outsb
bound
push
add
rclb
or
mov
or
fxch
scas
jmp
inc
fdivl
in
cli
jl
ret
mov
pop
mov
or
les
dec
out
int3
movsb
and
fcomps
dec
div
mov
mov
loopne
gs
sbb
inc
cmp
dec
xchg
addr16
xchg
adc
repz
nop
jns
cwtl
int
repnz
add
out
or
daa
aam
push
or
ds
xor
popf
sti
sbb
int3
push
fcoms
adc
xor
jp
cmc
sbb
lea
aas
add
clc
jmp
mov
or
adc
push
fsts
and
xchg
push
repnz
inc
aaa
subl
aas
xchg
test
sbb
scas
push
outsb
xchg
call
xor
mov
push
xor
shlb
repnz
push
fbstp
sbb
pop
lret
cmp
jmp
push
mov
std
jg
mov
jno
jg
or
inc
and
cmpsb
push
or
ret
loope
jne
adc
xchg
pop
fdivrl
inc
dec
loopne
push
mov
cmp
push
cmp
orl
dec
mov
pushl
pop
out
pusha
lods
repnz
xchg
lds
rcrl
add
mov
push
mov
rcrb
adc
mov
cmp
jnp
in
mov
push
xchg
jp
inc
dec
xchg
cmpsl
cld
cld
cltd
hlt
sub
xor
insb
jge
movsb
jo
es
xchg
jb
movl
xchg
mov
xchg
adc
cmp
push
add
ror
push
dec
or
addr16
mov
pop
jle
arpl
pop
icebp
adc
and
xchg
mov
hlt
gs
ljmp
xchg
or
xchg
cwtl
ljmp
std
call
mov
pop
test
cmp
out
pushfw
nop
dec
and
cmp
fcomip
lods
icebp
lret
data16
or
push
int3
pop
outsb
in
std
inc
mov
jno
push
and
jb
js
loop
mov
xor
rolb
add
mov
sahf
fildl
andl
ja
xor
cmpsb
fnsave
or
cmc
sub
es
jge
std
aam
push
and
dec
xchg
dec
cltd
arpl
cmp
jge
push
add
rcr
mov
je
fadd
xchg
fstl
mov
mov
outsl
mov
jg
fcompl
push
stos
gs
movsb
lods
xchg
sahf
shll
test
repz
int
push
fs
outsb
and
into
cmpsl
das
adc
xor
sbb
jg
dec
dec
rcl
add
cmp
iret
ja
push
setge
jbe
mov
and
sub
fists
cmp
mov
repz
cld
das
pop
in
mov
out
jmp
jnp
push
mov
imul
movsl
xor
loope
xchg
outsb
and
repz
pop
sub
divb
cmp
add
and
adcl
mov
or
jne
xchg
fildl
cmpsl
sti
xor
outsb
les
and
lret
enter
mov
xor
mov
jl
andb
js
mov
xorb
gs
lds
mov
push
and
jbe
mov
pop
add
insb
lcall
or
sarl
stc
out
adc
lea
xor
cmpsb
cmc
lcall
push
aaa
ret
jl
loopne
bound
outsl
add
repz
push
cmp
dec
rcrl
fisubl
ss
out
xor
imul
dec
add
iret
push
shll
push
cmp
movsl
sub
push
bound
sbb
push
inc
jns
xor
cltd
mov
out
bound
call
xor
push
cmp
sub
add
sub
dec
mov
mov
dec
inc
jb
adc
jp
cmp
jg
jno
push
jbe
sbb
loopne
jge
ss
pop
adc
out
in
sbb
fdecstp
sti
pusha
sub
aaa
lret
aam
xor
xor
mov
push
adc
loope
in
int3
jns
and
cld
clc
pushf
or
push
inc
dec
fistps
test
addr16
add
shlb
into
push
adc
aad
xlat
mov
rorl
aad
dec
and
out
adcb
insb
pop
cmp
out
roll
push
out
dec
push
adc
pop
mov
push
xchg
int
pop
dec
ss
push
subb
xor
in
sub
stc
das
loopne
jno
stos
jbe
cmp
mov
mov
fbld
push
ficoml
mov
fidivl
mov
cli
adc
out
or
dec
popa
lods
mov
fnsave
ljmp
inc
cmc
popf
push
lods
mov
inc
xchg
in
rorb
pop
xchg
std
push
pop
pop
and
sbb
jmp
mov
dec
lahf
clc
add
xlat
fnstsw
sarb
fstpl
xor
ficompl
pop
dec
sbb
test
mov
into
lods
lods
ljmp
and
lea
rclb
or
cld
adc
loopne
mov
xor
mov
and
sub
mov
mov
mov
jbe
test
ja
hlt
rcr
rorb
or
sub
jmp
push
shrb
nop
add
cmp
cli
cld
push
arpl
gs
imul
pop
je
ffree
lcall
sub
lds
les
negl
rorl
xchg
imul
inc
or
xor
jnp
jle
sbb
lret
mov
adc
scas
and
push
scas
decl
jle
pop
dec
jnp
sarb
pop
mov
xchg
mov
mov
inc
movd
and
repnz
and
andb
enter
pop
xor
inc
xchg
into
scas
and
mov
loopne
dec
lock
out
ds
rcll
push
jle
sub
mov
andb
cmpsl
push
xchg
stos
cmp
int3
mov
call
lcall
sub
repnz
jo
in
add
or
cmp
xchg
push
adc
and
jns
mov
sub
cmp
sbbl
movsl
cld
jmp
aam
and
lds
outsb
adc
inc
mov
inc
mov
xchg
mov
cltd
cmpsl
dec
inc
mov
insb
xor
ljmp
test
xlat
inc
lds
sbb
jmp
movsb
lret
dec
mov
aad
jp
push
adc
aas
je
adc
sub
add
jmp
pop
lret
sbb
leave
lods
add
mov
movsl
or
int3
add
and
add
frstor
jg
loopne
mov
call
jecxz
xorb
xor
jmp
js
pop
cmpsl
cwtl
mov
cmc
cs
inc
and
xor
sti
and
and
push
int
in
mov
or
aam
dec
outsb
fldt
jae
popa
cli
cmp
cld
sahf
push
lahf
scas
mov
call
mov
ret
das
fdivp
mov
jecxz
or
lods
jb
rcll
jge
movsb
xor
arpl
jecxz
pop
std
aas
iret
mov
test
int
jp
jle
push
data16
pushl
test
data16
mov
je
in
test
loope
xchg
movl
mov
sbb
out
rol
stos
mov
mov
sbb
and
xchg
mov
insb
loop
pop
pop
ret
in
orl
loop
test
lock
dec
mov
or
mov
das
adc
imul
nop
dec
insl
inc
call
notl
adc
adc
fnsave
xor
data16
and
push
fcoml
or
pop
in
test
mov
cmp
xlat
daa
or
jnp
ljmp
repz
and
sbb
or
sub
movsb
cwtl
out
pop
call
push
push
adc
sti
adc
sub
add
jle
pop
cltd
mov
jmp
push
dec
jge
ja
ret
inc
push
andb
lret
cmp
sti
into
rolb
out
enter
and
gs
mov
mov
push
pop
movsb
or
sahf
loopne
fs
xor
stos
adc
jne
push
hlt
xlat
mov
adc
psubw
mov
cmp
cmc
xor
xchg
aas
mov
insl
mov
scas
movsb
out
outsb
into
faddp
pop
les
std
jno
daa
outsb
sub
jg
lahf
int3
loop
stc
cld
enter
loop
cmp
dec
fdivrs
mov
xor
mov
shl
lods
scas
add
add
cmpl
add
cmpsl
lahf
dec
sub
mov
pop
enter
adc
push
mov
sub
std
cwtl
test
outsl
push
pusha
pop
or
jg
xchg
in
inc
enter
mov
test
roll
sarb
loop
hlt
cmp
xorb
and
scas
imul
fdivrs
or
or
sub
mov
lcall
sbbb
and
icebp
int
into
mov
pop
pop
push
rorb
xchg
jecxz
outsb
pop
sbbl
xor
test
xchg
mov
xor
movsb
mov
mov
rcrb
inc
and
mov
call
push
mov
mov
sub
cmp
enter
sbb
neg
inc
pop
lcall
inc
adc
push
add
out
sbb
loop
add
repnz
fsubrs
xchg
inc
mov
or
mov
inc
push
into
jle
xlat
negb
shlb
cmp
dec
fwait
jno
fwait
pop
sub
cmp
cli
push
incb
imul
lcall
inc
sti
xor
arpl
pop
cmp
pop
xchg
push
mov
decb
mov
mov
adc
test
pop
mov
lds
popf
dec
sbb
jg
test
pushl
or
pop
mov
popa
inc
iret
cmp
outsb
outsl
cld
popa
arpl
or
or
or
jmp
repnz
sbb
dec
jecxz
fsubr
bound
add
dec
and
lcall
and
das
inc
cli
stos
dec
int3
movsl
add
pop
jg
int3
ja
ss
xor
xor
adc
pop
cmpxchg
lock
lea
xchg
test
or
cmp
fstl
lds
lret
mov
adc
push
dec
mov
test
xor
shrb
shll
call
cmp
xchg
add
mov
cli
sub
das
leave
cs
lds
sub
sub
cs
imul
mov
orb
push
rcll
roll
cmp
jbe
xchg
hlt
pop
out
cmp
pop
jnp
cli
bound
pop
in
inc
std
shlb
adc
ret
or
add
stos
lds
icebp
enter
xchg
pop
xchg
mov
lret
sub
test
pop
cmp
mov
jge
sbb
mov
sub
test
mov
sub
insb
filds
imul
lahf
sti
aaa
push
jo
imul
or
ret
xchg
iret
push
stos
mov
mov
push
adc
cltd
fldcw
loope
xor
add
fldcw
ja
jle
bound
sbb
popa
push
ja
sti
xor
jne
adc
pop
add
jb
les
lretw
jge
gs
mov
mov
add
mov
xlat
sub
pop
add
dec
out
jnp
fists
pop
pop
in
fsubrl
sbb
ret
andl
adc
popf
cld
bound
mov
or
rcl
mov
lea
inc
pop
pop
add
ret
xchg
popf
sbb
das
out
and
xchg
adc
imul
inc
mov
enter
notl
push
pop
je
loopne
xor
addr16
call
mov
or
outsl
sti
cmp
out
dec
xchg
shll
sbb
sbb
xor
mov
xlat
idivl
ss
xchg
jecxz
sbb
cwtl
int
xchg
xchg
pop
fstl
inc
mov
daa
dec
out
out
arpl
jge
dec
inc
mov
sub
jp
sbb
sbb
ds
fdivs
out
pushf
or
push
sub
imul
dec
adc
inc
ror
sbb
orb
pop
pop
sbb
out
mov
push
je
sub
dec
xor
idivl
xorl
cmp
xor
sub
push
repz
sbb
test
mov
and
xchg
lea
jle
lock
push
sub
xchg
xchg
mov
add
mov
repnz
lret
jb
pop
imul
jp
jmp
ds
push
aas
into
rol
popf
push
stos
and
call
xor
sti
sti
dec
mov
cld
push
ja
add
mov
std
insb
xor
shlb
xchg
push
xor
gs
lds
sub
cwtl
jbe
xchg
aas
fstpl
or
or
arpl
xor
adc
aad
cwtl
cmp
or
into
xor
inc
pop
xor
add
je
ret
push
sbb
icebp
insl
out
popf
ss
or
lahf
pushf
add
inc
pop
jmp
stc
dec
fcomp
pop
dec
sbb
roll
stos
stos
and
bound
into
ss
ja
cmp
cli
push
sbb
fisubs
sbb
jnp
hlt
jg
xchg
je
and
push
ljmp
sbb
cmp
jge
scas
into
push
sub
pop
sub
das
jno
imul
mov
mov
push
xor
jae
xchg
in
push
add
popa
data16
and
jmp
lahf
cmc
out
add
xor
mov
js
dec
rcrb
into
stos
xchg
ja
lods
cltd
fnstenv
xor
ljmp
cwtl
cmp
dec
cli
jle
repz
int
and
insl
mov
mov
push
out
dec
icebp
xor
scas
flds
xchg
mov
sub
decb
jns
imul
xchg
outsl
dec
jmp
and
out
xchg
dec
ljmp
mov
clc
data16
xchg
fdivs
rclb
sbb
adc
andl
inc
xor
std
test
pop
lahf
sbb
pop
scas
enter
and
sarl
and
loop
dec
mov
ficoml
adc
xchg
loopne
gs
sahf
xchg
xchg
ret
out
lcall
push
cs
daa
jl
loope
sti
jg
sbb
xlat
add
cmp
push
cwtl
in
add
pop
jp
psrld
rcl
stos
inc
mov
sbb
scas
adc
xor
xchg
adc
nop
das
xchg
leave
movsl
or
xchg
ljmp
mov
cmc
cltd
lock
das
or
add
xor
jb
push
aam
or
sub
jns
mov
mov
jno
cmc
and
add
push
pop
nop
roll
je
jp
mov
in
mov
fdivp
fldenv
cmp
lea
mov
xor
jecxz
loopne
test
pop
add
jl
inc
dec
outsl
pop
sub
fadds
jae
add
dec
incl
add
rcll
sbb
fsubl
outsl
inc
imul
divb
adc
mov
push
fldcw
push
xchg
push
ret
xchg
je
sahf
xor
insl
decl
push
loop
push
push
xchg
and
xchg
cwtl
mov
cld
loope
xchg
sbb
sahf
dec
inc
imul
adc
jns
fcomps
aaa
xor
inc
adc
ficoms
jmp
adc
inc
mov
and
fcompl
pushf
sbb
lea
shll
push
test
add
sbb
rorb
test
test
sbb
sahf
adc
mov
add
mov
test
fistl
fimull
inc
and
push
or
inc
lods
cmovle
hlt
xor
xchg
mov
insb
pop
scas
jbe
add
mov
mov
dec
je
fdiv
std
push
roll
jnp
es
xor
xchg
in
mov
or
jb
mov
sub
sahf
faddp
stos
filds
xor
popa
out
lret
insl
sub
and
dec
adc
test
test
lea
pop
dec
fstp
and
pop
lods
lods
icebp
push
out
rcl
cmp
xchg
rcll
adc
mov
pop
sbb
nop
jg
mov
or
incl
dec
addr16
call
sub
mov
out
sti
push
inc
hlt
mov
mov
inc
pop
jge
push
xor
in
jne
mov
stos
jno
pop
pop
leave
and
xor
mov
sbb
ljmp
inc
cmpsl
xchg
fsubrp
pop
dec
dec
dec
arpl
or
cltd
adc
cmc
sbb
mov
mov
push
cltd
shlb
mov
lret
test
adc
sbb
idiv
icebp
push
ret
mov
sbbb
add
leave
call
jne
xchg
in
mov
adc
inc
mov
ds
cwtl
xchg
and
xor
mov
jmp
xor
and
lret
aaa
xor
push
mov
in
and
sbb
sbb
xor
push
aaa
add
mov
xor
sbb
jp
adc
ss
ret
xchg
test
call
shrb
xor
pop
push
cmpsb
mov
outsb
ja
push
dec
pop
mov
outsb
cmp
insl
lock
clc
cld
xchg
es
xchg
cmc
sbb
mov
pop
push
push
in
xor
add
shll
dec
sbb
jl
mov
xchg
inc
cmc
test
or
dec
lret
lock
jbe
adcb
xor
insb
mov
dec
xor
rclb
je
xchg
lock
popa
push
sbb
add
mov
out
sub
ja
xchg
cmp
je
jnp
pushl
xchg
stos
ret
xchg
push
mov
dec
xchg
push
and
fstl
mov
or
repnz
fnstcw
inc
pusha
hlt
enter
mov
pop
out
orl
and
sub
push
enter
push
pop
lods
sub
sbb
rcrb
cmp
xor
inc
lret
xchg
adcb
pop
test
xchg
stos
ret
jmp
test
jl
ja
mov
push
mov
addl
adc
imulb
xor
add
icebp
pop
out
dec
call
inc
xchg
adc
adc
or
in
mov
add
and
jg
or
mov
and
mov
mulb
xchg
push
cmp
jbe
pushf
sahf
pushf
mov
out
adc
add
mov
jbe
pusha
fnsaves
stos
stos
jg
push
scas
imul
pop
inc
inc
shrl
sub
adc
aas
pushf
mov
pop
lods
out
out
flds
jo
mov
sub
jecxz
xchg
push
pop
mov
loop
inc
mov
mov
add
add
addb
inc
cwtl
loopne
shll
pop
push
std
mov
rorb
mov
pushf
sub
and
rcrb
push
jmp
xchg
cwtl
sahf
cmp
stos
aad
jmp
xchg
and
stos
pop
pop
mov
stc
push
mov
or
xlat
xchg
out
dec
cmpsl
jns
xchg
ret
test
les
xor
dec
popa
dec
lock
xchg
add
pop
cmpb
mov
pop
fwait
inc
dec
and
fistl
jns
mov
sub
out
xor
jecxz
xchg
lret
xchg
push
mov
cltd
jae
mov
cwtl
inc
int
hlt
push
ss
shlb
and
push
fildl
mov
cld
sbb
adc
sbb
fstpt
lret
lea
inc
leave
in
pusha
fadd
pushf
dec
es
outsl
pushf
test
shlb
or
mov
insl
mov
mov
movsl
pop
jno
es
in
jmp
out
sbb
cmp
mov
cld
mov
adc
rcl
and
pop
cli
pop
jle
pop
sub
sbb
cld
mov
test
shlb
jne
xchg
popa
pop
sbb
aad
into
nop
in
aas
xchg
mov
lods
das
negl
fistpll
ds
insl
fmull
loop
pop
xorb
push
lock
mov
lock
cmpsb
inc
cmpb
xlat
mov
push
inc
out
lods
adc
mov
push
dec
lea
mov
rorb
xchg
cmp
addr16
mov
addl
dec
sbb
jge
inc
pop
mov
add
cmp
sarl
adc
in
inc
pop
test
inc
mov
add
dec
and
mov
mov
push
and
push
lea
sub
fistpll
push
ror
aas
jns
int3
mov
dec
fcmovu
movsl
shl
faddl
or
cwtl
loopne
pop
xor
adc
sub
imul
hlt
inc
pop
jg
xchg
inc
imul
sbb
stos
outsb
jnp
dec
mov
daa
push
pushf
adc
lods
push
or
or
arpl
cmp
faddl
adc
jns
xchg
imul
insb
mov
sbb
xor
push
push
movsl
icebp
xor
mov
iret
jmp
mov
in
lret
arpl
or
popf
mov
mov
push
stc
cld
jl
sub
or
test
bound
bound
or
outsl
shrl
push
out
dec
adcb
adc
xor
test
fsubrs
pop
mov
jnp,pt
ja
sub
lret
cli
or
add
shr
das
sarb
int
int3
out
fs
push
popa
addr16
dec
mov
sbb
in
push
lret
mov
cmp
in
andb
arpl
add
inc
jmp
push
sarb
in
sub
aaa
mov
mov
test
aas
fnstsw
inc
push
push
mov
lcall
jge
cmp
mov
xor
sarb
loop
xor
fwait
pusha
xchg
out
lods
or
xor
push
sbb
popa
add
add
cli
cld
mov
dec
rcrw
dec
stc
add
loopne
dec
repz
fistps
add
loopne
repz
es
aaa
jae
mov
jmp
add
cltd
xor
inc
les
add
and
int3
pop
adc
sub
push
sti
aas
fsts
xchg
icebp
xchg
fstp
mov
adc
pop
rcll
lret
mov
or
sbb
fnstcw
ficoml
mov
loope
mov
inc
and
dec
sti
push
scas
pop
or
mov
lea
xchg
cltd
cmp
rclb
mov
leave
in
xor
inc
leave
sbb
popf
fdivs
das
mov
pop
cmpsb
and
test
mov
jne
repz
in
sahf
test
or
xlat
ja
in
dec
loope
jle
addr16
add
adc
dec
sbb
dec
imul
mov
push
js
mov
int
jns
adc
mov
xor
inc
and
mov
dec
aas
adc
imul
xor
jecxz
and
or
jne
jb
stc
loopne
sub
icebp
data16
fmull
ss
mov
mov
pop
sbb
jle
int3
xchg
fwait
or
xor
lods
inc
xlat
ret
pop
sbb
dec
lret
adc
test
dec
fiaddl
pusha
push
sub
aas
or
and
ret
in
xor
mov
mov
cmp
gs
imul
sub
inc
mov
cs
pusha
cld
cli
sbb
xor
imul
mov
sbbb
push
xchg
popa
data16
xor
lock
loop
out
arpl
sub
inc
xor
push
lahf
sbb
mov
pop
aaa
int
out
xchg
and
dec
dec
xchg
daa
lret
mov
std
push
xchg
mov
into
popl
insl
rcrb
out
bnd
repz
and
mov
dec
adc
and
mov
or
xor
mov
sub
enter
mov
inc
jo
aaa
or
sub
in
stos
out
movsb
push
mov
cmc
jb
jae
fs
sarl
or
mov
and
vshufps
jae
sbb
fidivrl
cmc
mov
in
insl
aam
or
inc
mov
mov
cmpsb
lods
jl
push
ret
addb
cld
repnz
or
ss
loop
xor
loop
jmp
or
dec
and
leave
jg
mov
mov
jns
xor
xor
dec
clc
mov
jae
adc
push
or
pusha
xchg
sub
push
sti
repz
fwait
pop
lods
or
and
cld
scas
push
das
aas
dec
outsl
mul
sbb
mov
pop
mov
adc
pandn
jmp
loopne
out
adc
pop
or
push
pop
xchg
or
cmpsl
and
js
push
dec
jne
mov
cmp
inc
hlt
dec
insb
pop
mov
mov
sarb
call
pop
mov
jle
cmpsb
adc
popa
lret
shrb
sbb
js
jp
je,pt
dec
loope
cmp
mov
inc
test
mov
sub
push
pop
mov
sub
ss
mov
cs
jns
insb
and
inc
imulb
out
daa
adc
jp
push
inc
mov
push
cmp
sub
dec
mov
lahf
sysenter
cmp
inc
push
mov
adc
jae
iret
xor
lret
ret
push
sahf
dec
outsb
xchg
call
or
mov
mov
and
add
sarb
fisubrs
movsl
and
jg
push
cmp
out
dec
mov
fadds
test
mov
push
or
fnstenv
shll
pop
xchg
jg
in
add
js
dec
lret
sub
mov
xor
into
mov
xchg
cmp
xor
pop
movb
cmpsb
push
push
push
xor
adc
ja
mov
push
ds
pop
test
negb
pop
lret
stc
jnp
fsubrl
out
push
jns
cmpsl
fldenv
mov
inc
fdivs
push
jp
int
push
int3
add
lock
adc
jb
lcall
dec
mov
inc
add
dec
mov
int3
xor
jle
cmpsl
ret
inc
cmp
popf
lds
into
call
iret
jae
sbb
std
inc
ds
or
sbb
sub
jns
jle
mov
test
jnp
push
aas
enter
sub
lods
mov
adc
mov
add
and
aad
jg
imulb
in
mov
and
pop
xlat
inc
outsb
js
pop
adc
call
push
leave
push
adc
jg
stos
scas
push
and
pop
inc
ljmp
rorb
gs
or
test
and
jmp
hlt
add
insb
insl
je
xor
mov
sbb
cmp
or
bswap
sbb
dec
mov
push
pop
xor
ficomps
sbb
les
dec
mov
jp
cs
cmp
insb
fwait
mov
scas
jbe
and
xor
add
and
and
sahf
pop
stos
cmp
insb
inc
push
in
inc
pop
push
je
xchg
clc
nop
out
call
or
into
pop
mov
repnz
pop
pop
in
jbe
pop
insb
dec
insb
ret
stc
hlt
adc
inc
pop
pop
repnz
xor
stos
xchg
insl
jl
push
jge
out
sub
inc
imul
lret
test
shll
mov
dec
lea
in
das
imul
loopne
sub
pushf
xchg
scas
mov
fdivrs
imulb
movsb
aas
push
addr16
jecxz
outsb
mov
inc
push
pop
sub
ret
fldcw
push
mov
lods
cmp
je
mov
add
xchg
in
outsb
add
pop
lret
arpl
inc
ret
adc
or
xchg
mov
cmp
es
adc
out
mov
dec
ljmp
jo
mov
fiadds
sbb
inc
jle
jmp
mov
roll
shl
ljmp
xor
icebp
pop
in
push
dec
push
cmpb
cmc
lret
and
ja
addl
les
nop
dec
fs
mov
loop
pop
jne
out
mov
sbb
sbb
jb
iret
cmp
cmpsb
adc
das
mov
xchg
mov
mov
inc
adc
lock
rcrb
jno
mov
je
mov
aad
insl
dec
es
cmp
mov
in
xor
mov
popa
das
shrb
fsub
repz
int3
fs
xor
fmuls
cltd
add
fdivrl
mov
fbstp
add
popf
jg
mov
in
fwait
out
test
and
mov
repz
stos
lea
ret
stos
xchg
or
cmp
les
ljmp
cli
cltd
mov
adcb
dec
stos
popf
dec
pop
add
fbstp
or
adc
les
mov
jo
insl
dec
ljmp
mov
xlat
jge
std
loopne
repz
push
push
mov
repnz
adc
jo
sub
xor
jmp
jno
push
out
or
std
and
fdivrp
add
call
mov
adc
in
or
insb
pop
ficompl
cmp
pop
and
movsl
mov
cmp
sbbl
add
xchg
push
js
dec
imul
mov
ja
addr16
in
pop
push
mov
sbb
mov
cmp
andl
movsb
push
stc
adc
mov
les
jl
push
mov
maxps
push
cmp
movsb
jg
imul
rcrl
sbb
lret
adc
repnz
mov
mov
jb
push
adc
jmp
into
fildl
xor
inc
push
adc
cmpsl
jno
es
ljmp
es
cmp
push
jne
sbb
popa
stc
fiaddl
lahf
iret
gs
cmp
pushf
mov
sub
imul
sahf
jge
lahf
xor
mov
inc
je
jns
sub
bound
or
loopne
pusha
jp
cmp
imul
lret
aad
xchg
out
stc
push
divl
add
popa
mov
push
dec
lock
jae
rclb
cmpsb
jb
fsubrp
lret
imul
push
pop
lds
cmpsl
cmp
dec
or
cli
testb
and
in
push
push
push
sub
xor
add
xor
or
sbb
test
lcall
jecxz
rorb
sti
cmp
dec
dec
enter
xchg
sbb
movsl
fisubrs
xor
clc
cmp
or
clc
insb
pop
sub
loope
cli
add
inc
mov
cmp
out
xor
cld
andb
movsb
nop
mov
cmpsl
add
in
mov
out
jmp
pop
add
cmpsb
jmp
lahf
xlat
push
ds
sub
pop
xorl
in
xor
mov
repnz
or
push
imul
add
cmp
mov
shlb
push
sbb
pop
sahf
mov
cmp
mov
rolb
sbb
xor
add
and
mov
rcr
jle
fistpl
xor
inc
into
lret
inc
push
mov
adc
movsl
mov
mov
aas
xchg
loop
mov
jno
adc
cwtl
jo
or
mov
fs
and
pop
push
outsl
mov
add
movsl
lret
jle
int
cmpsb
dec
adc
push
daa
rcl
inc
or
gs
pop
xor
enter
and
stc
sub
mov
xchg
nop
lods
cmp
sub
mov
aas
inc
lods
lret
cmp
jge
and
lcall
gs
cwtl
and
in
xlat
daa
clc
mov
ret
aam
add
fisubrs
jmp
daa
aaa
int
gs
adc
loopne
movsl
mov
sub
les
imull
stc
pop
inc
shl
stos
jae
xchg
rcl
sbb
xor
in
jmp
adc
insb
adc
jmp
sbb
in
sbbl
outsl
cmc
fcmovbe
push
dec
push
data16
pop
std
mov
cmp
sbb
cltd
repnz
insb
add
or
xchg
lock
jae
push
test
ret
cmp
xchg
movsb
or
mov
dec
inc
in
pop
insb
push
sarl
sub
jae
xor
test
lock
pop
xchg
sub
mov
mov
sarl
insb
cli
shll
sub
mov
inc
push
mov
in
mov
dec
jns
ljmp
leave
sahf
aad
ljmp
std
test
int3
or
mov
iret
test
sub
xor
pop
sbb
cmp
jmp
mov
test
dec
mov
add
std
rolb
jne
add
stos
jb
leave
cmp
inc
mov
mov
fstpl
pop
adc
jnp
sbb
jnp
xchg
je
inc
mov
dec
xor
add
sbb
sbb
loope
int3
stos
xor
nop
test
cld
insl
sub
xor
mov
cltd
xchg
js
jge
add
push
fisubs
ljmp
inc
xchg
push
mov
inc
fidivs
push
ss
arpl
jae
test
scas
and
or
imul
stc
sti
je
ss
and
xchg
lret
aas
push
cmpsb
push
loopne
dec
adcl
decl
out
jp
test
test
popa
addb
stc
cmp
pushf
mov
mov
push
sbb
add
mov
cs
and
mov
push
ficoms
adc
lcall
imul
jnp
bound
stos
inc
ja
in
mov
jle
jnp
cmp
daa
enter
test
jg
js
lods
ret
push
sub
mov
mov
dec
push
xor
inc
testl
jo
dec
xchg
cmc
outsb
dec
lret
cs
out
sub
pop
dec
push
in
loope
sub
jmp
loop
imull
in
repz
cmpsl
xlat
pop
pop
frstor
lds
push
push
std
mov
inc
sub
pop
data16
ror
ds
pop
push
jne
fistl
aam
xor
rcll
mov
mov
and
pop
in
sahf
pop
xchg
out
mov
mov
mov
pop
repnz
adc
iret
fs
lahf
mov
dec
fwait
xor
xor
data16
scas
sahf
out
jnp
mov
add
roll
imul
jbe
cmp
pushf
xor
cmpsb
lret
cmc
sub
pop
sbb
imul
loop
std
cmp
add
jnp
add
xor
inc
cmp
cs
inc
fdivs
mov
adc
xor
xor
xor
add
xor
and
sahf
and
and
outsl
ja
loopne
loopne
inc
push
out
repz
leave
cli
int3
test
mov
loop
xor
jns
idivl
push
fwait
mov
jbe
cmpl
push
out
and
xchg
fsubrl
lcall
pusha
cmp
pop
aaa
int3
xor
cmp
push
mov
stc
and
xor
scas
pop
add
fwait
movsl
and
dec
inc
fwait
jmp
les
out
out
pop
test
add
mov
mov
mov
add
sti
pop
enter
xor
arpl
fdiv
dec
ja
pop
xor
int
inc
in
inc
pop
adc
fisubrs
shrb
ret
cmp
das
jmp
adc
maskmovq
divl
sub
call
call
lahf
sub
jge
insl
shl
add
cld
shrb
dec
scas
inc
hlt
outsl
sahf
mov
jl
ss
lds
pop
and
xor
cmp
fbld
dec
lock
adcb
pop
adc
sub
lods
jo
mov
fsubs
test
dec
xor
pop
inc
scas
jb
mov
and
add
in
daa
cmc
mov
fwait
pop
pop
lret
out
adc
ret
mov
popa
lea
fsubs
pop
push
adc
outsl
mov
jno
xchg
dec
jb
stc
xor
jae
les
mov
arpl
lret
and
add
jg
ss
repnz
cmp
jg
pop
mov
jmp
mov
insb
out
mov
and
je
jmp
das
sarl
pop
push
jp
out
test
nop
fsubl
inc
repnz
dec
add
xchg
mov
sahf
fisubs
test
mov
inc
inc
fsubrl
dec
sti
jo
xlat
sub
loop
das
push
repz
cmpsb
push
mov
hlt
xchg
add
ret
inc
cmpsb
sbb
mov
enter
xor
lcall
faddp
arpl
sarb
or
sbb
fucomip
in
fsubrl
ret
stos
pop
inc
jns
sub
or
int
mov
daa
shlb
lock
out
test
push
insl
stos
mov
mov
xchg
push
into
in
adc
and
inc
roll
and
dec
les
jge
cmp
lahf
xchg
dec
rorl
and
fistpll
pop
fwait
adc
inc
je
loope
cs
push
andl
lcall
arpl
sub
adc
xchg
fdivl
inc
adc
and
jmp
movsb
xor
adc
mov
pop
icebp
aas
pusha
xor
mov
mov
addr16
in
xlat
mov
or
iret
sbb
stc
mov
push
outsl
outsb
hlt
ljmp
cmp
jo
cs
sbbb
dec
inc
lahf
push
sbb
jl
sbb
dec
std
jl
cs
mov
cmpl
xor
push
dec
or
push
and
addr16
and
insb
das
dec
iret
jle
movsb
pop
in
fsubrl
daa
sub
lods
pop
lcall
outsl
pop
cmpsl
and
push
shll
pop
pop
cmp
push
std
int3
loop
cld
mov
cli
ss
mov
mov
sbb
pop
add
shll
push
jo
fwait
and
jne
out
loope
push
test
mov
cmp
frstor
pop
adc
xor
or
lahf
lds
out
dec
scas
int
daa
mov
aaa
lds
repz
sbb
push
test
loope,pt
jno
popa
and
mov
and
js
pop
pop
sahf
idivl
stc
add
add
cmp
lods
movsl
sbb
sub
mov
fidivrl
xchg
mov
sbb
pop
ror
or
cmpsb
je
xor
xor
iret
jnp
or
mov
scas
xor
sbb
push
mov
cmp
add
sahf
dec
das
rorl
pushf
jns
or
adc
outsl
xor
scas
inc
dec
repnz
popa
popa
addl
push
insb
repnz
lock
bound
xor
lcall
stc
push
adc
sbb
pop
out
xor
loop
xchg
in
je
fucom
fiaddl
jno
gs
xchg
out
stc
pop
cmpsb
xor
data16
cli
xlat
adc
fists
mov
enter
adc
xchg
shl
xor
scas
cmp
fmul
iret
pop
mov
subl
sub
mov
xchg
je
ret
imul
repz
std
mov
jae
adc
hlt
mov
fildll
xchg
enter
mov
pop
enter
cmp
xchg
int
daa
xchg
lea
jmp
dec
mov
aad
xchg
lea
dec
mov
mov
inc
ljmp
jecxz
mov
arpl
clc
sbb
or
lret
xchg
ret
cmp
pusha
enter
rcrb
into
dec
bound
jmp
push
and
and
sub
aas
pusha
ljmp
ret
xor
mov
cmc
pop
outsl
scas
shrb
nop
cwtl
xor
pop
gs
ror
push
sbb
adc
lods
insl
sarb
cld
sti
mov
aaa
aam
dec
inc
push
mov
jmp
pop
fwait
out
sub
push
repz
in
pop
inc
xor
cmp
sbbl
cld
xchg
sub
js
mov
jns
push
shll
mov
andb
ror
imul
push
push
iret
js
mov
or
mov
cs
xor
mov
pop
push
ret
push
inc
sahf
jge
pop
xor
jno
inc
adc
stos
ret
lds
dec
int
fwait
std
mov
add
stos
pop
lahf
xor
out
das
cmc
inc
xor
jbe
pop
and
mov
push
sbb
lret
and
fildll
outsb
or
mov
lock
out
sub
or
filds
jns
sub
inc
add
xor
in
rorl
js
outsl
pop
test
and
jg
imul
js
test
xchg
mov
in
mov
dec
movsl
sbb
mov
lock
jle
mov
ret
rcrl
pop
jge
xor
xchg
pop
xlat
jle
sub
sub
mov
cmp
shrb
in
std
testb
sub
xor
fadds
js
out
push
outsb
dec
jae
stc
nop
test
aad
pop
das
jbe
adc
inc
mov
movsl
out
clc
movsl
mov
shlb
jns
push
testb
mov
lods
not
sub
inc
xor
mov
sbb
mov
int3
mov
in
inc
ja
mov
loope
xlat
sbb
xchg
out
fdiv
mov
mov
mov
ljmp
aam
mov
inc
sub
mov
subl
loope
jecxz
mov
jbe
std
cmp
pop
test
mov
mov
pop
daa
push
outsl
xchg
popf
pop
mov
movsb
outsb
add
aam
sbb
nop
xor
mov
pop
dec
mov
pusha
sahf
xor
jns
or
and
cmp
lcall
ss
sub
push
insb
push
sarb
pop
mov
int3
int
sub
jg
test
pop
test
xor
loopne
jne
out
outsl
jle
sbb
inc
std
and
add
dec
xor
mov
pop
xor
xchg
mov
mov
xor
jno
stos
xlat
cs
nop
sub
push
inc
mov
insb
adc
lahf
or
mov
fcomp
loop,pt
scas
adc
xchg
and
pop
test
jmp
loop
dec
cld
shrb
in
mov
mov
cmc
xchg
pop
in
and
push
xor
pop
cld
inc
mov
enter
sub
fcompl
dec
movsl
lahf
push
in
mov
xchg
loopne
add
ds
jp
or
idiv
mov
mov
sub
repz
sbb
ljmp
cli
cmp
xor
add
movl
pop
dec
scas
std
cltd
jns
arpl
pop
pop
out
popa
mov
xchg
lds
cmp
dec
dec
mov
std
push
stos
lea
ret
jge
push
mov
cwtl
mov
stos
adc
incb
aas
jle
lahf
lea
stos
xchg
mov
popf
test
ljmp
popa
sbb
test
push
fs
mov
mov
pop
repnz
cwtl
arpl
lock
lods
es
mov
ds
and
addr16
into
daa
or
pop
jmp
dec
dec
jmp
call
out
sahf
sarb
xor
xchg
jecxz
ror
and
or
or
stos
sbb
jno
fdivrs
or
enter
lods
or
pop
or
add
rolb
sahf
push
and
rcr
mov
dec
lods
inc
scas
mov
inc
mov
icebp
add
push
inc
xchg
dec
aam
mov
imul
div
cli
rorb
lret
jno
daa
cmp
and
mov
and
cli
ljmp
push
out
notb
repz
dec
pop
pop
adc
stos
gs
out
jae
mov
int
jno
ds
stos
shlb
inc
lods
sub
jle
test
push
mov
nop
out
xchg
push
sbb
add
lea
pop
mov
hlt
jnp
test
pop
inc
aas
xor
lods
sbb
das
ljmp
lret
xor
dec
mov
xchg
lret
push
cli
sbb
lret
insl
dec
ret
pop
sbb
loope,pn
mov
rorl
push
rolb
andl
adc
arpl
rclb
or
xor
cmp
pop
cmc
loop
adc
cmpsb
push
bound
and
jge
or
ss
sub
jl
shlb
lret
leave
hlt
sbb
sub
mov
mov
insb
or
mov
in
shlb
mov
negl
mov
rcll
outsl
push
das
sub
push
arpl
xrelease
mov
movsl
push
pop
push
movsl
sbb
pop
jns
lods
push
sti
xchg
icebp
adc
mov
es
sar
mov
dec
sub
xchg
adc
mov
jge
jecxz
scas
jo
dec
sbb
pop
sub
sub
jp
out
ja
mov
insl
jg
jae
or
dec
dec
xchg
cwtl
cld
or
sbb
jp
lret
pop
mov
xchg
add
cli
lahf
nop
dec
lret
iret
movsl
jl
mov
out
sbb
mov
or
xor
loopne
mov
jbe
outsb
std
pop
pop
and
test
mov
jge
xor
mov
divl
insl
inc
sbb
jecxz
rclb
sub
lods
cmp
int
or
mov
adc
adc
stos
sub
addr16
fstpl
xchg
mov
cmp
fadd
mov
mov
xor
arpl
aaa
lahf
xchg
cmpb
lcall
push
mov
push
push
outsl
sbb
iret
ja
jmp
dec
mov
dec
pushf
cmpsl
cmc
test
les
xchg
dec
pop
xorb
and
jmp
imul
mov
frstor
popf
dec
lods
add
int
push
jge
lret
mov
and
add
jge
dec
movsb
pop
sarl
addr16
jle
sub
mov
dec
sub
cmp
mov
fnstenv
out
jge
mov
imulb
xor
ror
sbb
xchg
outsl
dec
dec
cmp
repz
and
dec
xchg
mov
xor
inc
and
icebp
mov
adc
mov
and
lahf
adc
or
arpl
sbb
mov
sahf
sbb
inc
test
shll
xor
fmull
js
dec
sbbb
mov
and
clc
ja
ljmp
xor
popa
mov
fnsave
push
jmp
mov
cmp
or
xor
add
xchg
inc
rorb
sbb
mov
stos
fs
xlat
lahf
data16
das
or
sbb
push
dec
lds
ljmp
push
lcall
pusha
add
mov
push
jb
push
dec
jecxz
and
mov
ret
cmp
ja
arpl
sbb
or
das
pop
loope
js
push
pop
jmp
push
les
aaa
push
lea
xchg
jb
daa
scas
push
or
testl
imul
fnstsw
sub
and
push
or
xchg
jae
sbb
jae
lods
mov
repz
test
push
in
test
stc
sbb
xchg
outsb
xchg
push
fdivl
mov
enter
jle
iret
jecxz
lret
js
add
mov
iret
ss
sub
dec
dec
and
sbb
add
pusha
adc
out
cs
mov
pop
aad
movsl
or
jp
out
push
mov
jg
fs
lahf
push
fimuls
dec
cmp
insl
cmovb
and
subb
dec
mov
cltd
dec
xor
cmp
ds
mov
shl
daa
jae
push
xor
push
psubq
fnstsw
addr16
rcrl
lods
fldl2e
repnz
in
stos
out
aam
les
lea
ficompl
pusha
orl
mov
push
pusha
hlt
add
bnd
test
mov
cmp
mov
js
fs
test
inc
xor
adc
call
stos
rolb
inc
or
jnp
mov
lret
lock
outsl
aas
mov
mov
ljmp
xchg
dec
jnp
xor
or
movsl
add
push
sarb
sahf
mov
call
push
xchg
mov
xor
dec
pop
cwtl
sbb
and
pop
mov
leave
xor
sub
testl
in
push
mov
sub
mov
leave
insb
push
pop
arpl
push
pop
mov
out
aas
and
cmpsb
pop
hlt
xchg
in
jmp
mov
inc
pop
push
adc
outsl
push
sbb
pop
dec
adc
setg
add
pushw
cmpl
and
rolb
lock
fwait
push
xor
inc
jbe
jne
rclb
call
xlat
mov
rcr
je
inc
imul
dec
lds
dec
leave
ss
fisubs
sub
sbb
mov
add
xor
out
aad
fwait
push
adc
xor
repz
ljmp
pop
adc
push
mov
or
push
outsb
lock
lea
and
loop
add
pop
fld1
scas
dec
pop
xchg
push
cmp
adc
and
insb
outsl
shlb
or
push
idivb
push
jecxz
push
rorb
mov
push
inc
leave
add
js
enter
mov
mov
into
jle
jb
jge
out
pusha
mov
fwait
push
fadds
cltd
mov
js
mov
lret
call
cltd
jle
scas
xor
call
lahf
dec
adc
cmpsb
cmp
inc
into
or
es
jne
ret
mov
rcrb
xchg
call
loope
push
cwtl
mov
lods
orl
lock
popa
xchg
stc
fstpl
pushf
idivl
inc
into
imulb
adc
adc
xor
pop
mov
pop
lods
fbstp
or
lcall
xor
sti
movsl
push
into
jb
sti
add
jl
movsl
outsb
xchg
roll
mov
pop
test
adc
fidivrl
ret
add
sub
sbb
mov
xorl
sub
push
and
mov
lods
mov
pop
xlat
es
ret
popf
test
nop
sub
cmpsb
push
jne
push
lret
js
cmp
sub
test
mov
das
lret
mov
pop
std
mov
test
adc
cwtl
add
lods
inc
inc
mov
mov
xchg
inc
cmpsb
mov
mov
das
xchg
mov
popf
mov
xchg
jb
sub
and
lods
mov
js
in
push
push
mov
mov
fcoms
inc
cld
sbb
or
push
out
adc
pop
and
jp
xor
sub
pusha
lods
imul
loope
sub
mov
inc
filds
rcll
and
std
pop
or
cltd
mov
lock
sub
cli
ret
push
iret
iret
leave
mov
dec
iret
push
shll
xor
pop
rorb
enter
shr
and
gs
sub
mov
in
jne
outsb
test
movsb
sti
adc
mov
xchg
push
dec
pop
loop
pop
xchg
je
test
inc
or
dec
in
pop
test
inc
shl
fcomps
stos
adc
add
sub
fcoms
insl
stos
test
stos
dec
dec
and
lahf
xor
arpl
mov
jge,pn
in
sbb
dec
push
cmp
jmp
cmp
xchg
and
cmpsb
xor
aas
in
inc
xor
mulb
pop
add
mov
cmp
push
mov
movsl
add
mov
aas
sub
mov
jno
jno
xor
xchg
xor
inc
inc
mov
push
test
mov
jb
and
push
xor
insb
sbb
fwait
xchg
rorb
push
rclb
fstps
data16
hlt
into
inc
sub
xchg
push
add
aad
ds
adc
xchg
mov
mov
push
or
mov
in
push
fcoms
outsb
xor
in
cmp
int3
pushf
dec
decl
cmp
and
push
scas
fisubl
add
sbb
push
xor
movsl
cli
jne
fucomip
cmpsb
js
xchg
dec
and
jp
push
jnp
xchg
dec
cmp
fistps
loope
xchg
call
dec
mov
mov
pop
fcmovnu
push
mov
xor
pop
fs
loope
jmp
jl
sbb
fildll
xchg
sub
jb
sbb
lret
pop
jecxz
push
lcall
stc
call
js
int
jns
enter
adc
mov
arpl
decb
aam
clc
cmp
incl
push
mov
xor
adc
xor
neg
popa
addr16
adc
fsubp
stc
pop
jp
call
sub
aam
outsb
lock
jnp
sub
cltd
xchg
sahf
pop
nop
and
inc
xor
iret
mov
mov
data16
int3
xor
bound
jecxz
jae
call
jecxz
mov
hlt
jge
sbbb
mov
push
xchg
xor
mov
addr16
push
push
test
cmp
inc
pop
cmp
xlat
das
aas
jl
xchg
sub
data16
test
pusha
push
dec
xchg
and
inc
call
popa
inc
arpl
jg
add
aas
xchg
lea
push
loope
lahf
mov
shlb
xchg
adc
jg
out
lret
shll
jmp
fldenv
in
mov
fcmovnu
cltd
add
and
out
pop
ret
jmp
bound
push
inc
mov
in
mov
std
mov
cmp
fistps
sub
mov
inc
mov
inc
outsl
imull
push
bsf
mov
mov
cmp
int3
cmp
mov
jae
push
popa
push
mov
xor
cmpl
scas
arpl
sub
mov
cltd
push
clc
hlt
xor
inc
or
adc
xlat
mov
mov
leave
call
hlt
sbb
mov
xor
xor
out
mov
jecxz
pop
hlt
cld
stc
sub
imul
pop
cmpb
xchg
popw
jmp
jno
nop
lahf
mov
dec
test
popf
pop
and
sub
xchg
or
xchg
ret
mov
mov
sti
xchg
cmpsl
mov
ss
out
pop
repz
in
fisubs
push
sub
xchg
mov
cmp
ret
jne
add
out
imul
cmpsb
rcll
xor
rolb
in
inc
add
fldcw
idivl
test
scas
dec
fstpl
ljmp
mov
daa
outsl
test
nop
or
rcrb
dec
or
icebp
and
js
outsl
lcall
push
mov
jae
push
test
cmp
incb
xchg
sub
pop
and
jmp
pop
or
dec
mov
adc
jmp
sbb
loope
out
inc
lods
ljmp
xlat
jbe
mov
mov
cmp
mov
push
jns
fistl
pop
lods
and
sub
rol
fidivl
adc
sub
jne
pop
out
inc
bound
mov
mov
std
movsl
sbb
nop
std
push
ja
push
and
and
pop
adc
add
mov
inc
loope
mov
jle
test
in
lods
stc
out
or
jbe
sahf
pop
pop
out
xchg
imul
test
shl
and
sub
xchg
xchg
out
jmp
scas
rcrb
add
push
clc
dec
sub
push
and
jno
fs
inc
mov
xchg
inc
shll
shrl
add
aas
loope
dec
je
test
pop
cmp
and
clc
jae
stos
cmp
xor
daa
jb
pop
cmpsb
xor
or
mov
inc
out
and
inc
mov
js
add
ret
cmpsl
rolb
xchg
lds
mov
dec
fnsave
and
lds
insb
and
jg
jnp
in
ficomps
call
fdivrs
or
xor
xchg
fbld
aad
dec
mov
out
scas
jmp
int
repnz
nop
mov
mov
ret
add
movsl
mov
lret
sub
dec
xchg
test
lcall
xchg
fwait
pop
pushl
sub
dec
dec
sbb
pusha
add
dec
imull
mov
into
or
es
imul
sti
ss
xor
popa
popa
rclb
aam
pop
in
pop
xchg
lea
cmp
mov
insl
pop
xchg
inc
pop
cmp
cmp
xchg
jb
jb
push
push
push
dec
filds
fnsave
pop
and
inc
add
cmp
push
sub
insb
mov
mov
xor
pop
inc
or
push
into
adc
in
es
jo
jmp
sahf
pushf
sub
popf
pop
outsl
dec
sti
imul
jmp
iret
push
inc
in
mov
inc
dec
cmp
mov
aaa
push
mov
test
adc
push
dec
mov
test
or
xchg
pop
pop
sahf
ds
ret
repz
dec
je
sbb
sahf
xor
out
adc
mov
xor
hlt
orl
movsb
out
dec
mov
mov
scas
mov
imul
dec
mov
pop
jge
lcall
dec
loopne
fdivs
push
lds
repz
push
scas
les
dec
xor
inc
arpl
mov
mov
test
xchg
pop
mov
loope
dec
pop
inc
pop
scas
xor
push
cwtl
enter
fwait
rorb
add
or
push
in
ffree
jge
decb
int3
fidivl
idivl
mov
push
divl
loop
outsb
shll
or
and
mov
cwtl
je
pop
push
pop
dec
lcall
or
scas
insb
dec
and
jmp
push
repz
out
xor
fcomps
out
cmp
cmpsb
int3
and
push
mov
xor
cmc
sbb
jbe
and
outsb
filds
iret
adc
daa
loope
mov
sbb
push
aas
sub
shll
or
and
sahf
sbb
lock
mov
lret
test
lret
jno
rorb
xchg
inc
repnz
ds
dec
mov
inc
sbb
pusha
xchg
add
mov
aam
xchg
inc
xchg
or
mov
mov
xor
call
xor
cmp
test
cmp
faddl
fbld
jmp
stc
add
sub
mov
test
push
scas
das
aad
adc
std
lahf
cwtl
ja
xor
call
stos
dec
stos
and
jp
lods
cmp
pop
stos
xchg
outsl
mov
enter
mov
lods
mov
ljmp
dec
testl
pop
fcoms
jmp
adc
xor
test
neg
inc
push
dec
jecxz
adc
push
int3
fwait
lock
hlt
or
lahf
outsl
jmp
mov
adc
mov
jecxz
loopne
sbb
jns
add
push
xor
xchg
lods
xor
cld
or
jne
lret
in
movsl
out
push
sti
dec
sarb
or
icebp
mov
in
sbb
outsl
pop
insb
inc
xchg
ja
xlat
fld
or
and
xor
inc
out
sub
sbb
cmp
xor
mov
sub
gs
sbb
or
push
adc
and
psubsw
std
jbe
jmp
cmp
insl
lcall
repnz
in
xor
inc
push
jne
sarl
je
data16
test
mov
or
andl
cs
mov
jnp
xchg
or
inc
cld
lea
push
pop
mov
jns
cs
or
enter
inc
mov
daa
out
je
cmpsl
pop
sub
hlt
mov
jle
cmpsb
in
pop
xor
fwait
jl
jge
dec
cmpsl
orl
scas
adc
mov
sub
push
add
sbb
adcl
mov
pusha
mov
ret
or
cwtl
imulb
movsl
mov
cmp
cmp
roll
fisubl
int3
iret
inc
push
enter
ror
iret
jecxz
and
xor
pop
dec
jl
stc
aas
ret
push
pushf
pop
fnstcw
inc
fisubs
add
mov
xor
mov
add
test
xchg
mov
sub
add
aad
lock
in
imul
out
enter
jb
sbb
aad
ds
xor
sbb
out
mov
xlat
lahf
jae
inc
out
movsb
in
lods
inc
lock
xchg
lods
roll
fsubr
pop
insl
nop
and
xor
loope
xor
lret
jno
sahf
mov
cmpb
push
jno
cmpsb
dec
mov
dec
out
adcl
or
nop
out
adc
dec
xchg
dec
sahf
and
ds
add
outsb
pop
lods
mov
cmp
dec
or
jp
mov
push
mov
pop
int3
dec
mov
vcvtpd2dqx
insb
lahf
xor
js
fisubrl
fists
dec
cmpsl
scas
lfs
repnz
fcomi
push
mov
sub
sub
dec
or
loopne
ja
inc
mov
fisttpll
pop
dec
lds
lods
xchg
orl
dec
orl
mov
mull
xchg
repz
mov
stc
int3
out
jl
xchg
rclb
mov
mov
xor
xor
popf
jle,pt
xchg
add
loopne
lods
or
cld
mov
cld
push
or
scas
xorb
aad
mov
push
push
adc
mov
pop
jl
push
inc
cli
pushf
or
call
scas
sahf
and
jmp
movsb
sti
dec
aas
mov
cwtl
xchg
lds
cmp
testb
inc
pop
fisubl
jae
pop
out
mov
in
pop
mov
bound
insb
sub
or
cmp
inc
hlt
sti
push
jp
cmp
dec
outsb
sbb
outsl
fsubr
jne
or
mov
jg
sub
inc
int
mov
aas
into
daa
mov
cli
lret
imul
shlb
inc
aad
push
lea
add
mov
movsl
scas
add
mov
loopne
push
xchg
dec
inc
into
addr16
sbb
jb
pushl
sbb
jecxz
bound
add
pop
stos
fnstcw
orb
stos
and
mov
mov
pop
dec
imul
insl
ljmp
test
lret
xor
stos
dec
push
aad
clc
push
or
cwtl
add
dec
fcoms
lods
xor
pop
pushl
pop
mov
add
int
sbb
or
jge
pop
lret
cmpsl
fdivl
sub
scas
adcb
pushf
inc
in
int
lret
call
mov
jnp
adc
loope
jae
into
and
mov
add
ja
mov
adc
mov
inc
js
adc
adcl
push
adc
lock
roll
bound
inc
lret
sub
inc
fidivrl
add
or
push
dec
cltd
dec
add
testl
insb
adc
scas
mov
dec
ds
int
sti
add
ja
mov
inc
iret
dec
popf
cld
and
push
pop
mov
adc
mov
sub
push
int3
xlat
sub
sbb
dec
shr
jge
or
mov
and
pmaxub
mov
mov
daa
sbb
xor
and
les
scas
push
or
fsubl
jge
jl
mov
or
mov
fbld
cmp
aam
pop
fwait
jp
sbb
mov
push
scas
mov
lods
mov
in
arpl
xor
and
jb
pusha
imul
jnp
sbb
dec
popa
sub
mov
push
mov
xchg
addr16
insb
ffree
cld
scas
pusha
mov
out
fwait
mov
iret
in
push
xor
nop
arpl
data16
pushl
iret
add
notl
sbb
push
cmc
lcall
inc
sub
sbb
into
popf
lock
cmp
test
push
mov
aam
mov
iret
in
sub
mov
xchg
out
jns
test
xorb
js
in
mov
add
mov
jge
int3
pop
mov
push
mov
addr16
xchg
jle
int
scas
mov
movsb
es
jecxz
or
mov
mov
and
mov
jne
push
in
add
sub
in
lds
ja
pop
nop
sahf
vpsrlw
cmp
fwait
outsb
add
sti
push
adc
comiss
jp
jbe
sbb
pop
push
ljmp
jb
in
cmp
div
out
addr16
pop
push
mov
hlt
movsb
xor
pushf
mov
lahf
hlt
cmp
xchg
or
aaa
push
cld
pop
mov
int3
xor
ret
ss
mov
lahf
dec
adc
imul
lret
movsl
fstpt
subl
xchg
hlt
push
dec
inc
cmp
gs
jae
mov
mov
pop
adc
xchg
push
push
push
out
mov
repz
sub
stos
cmp
xor
movl
push
push
adc
insb
push
xchg
add
test
notl
pop
dec
and
sahf
gs
faddl
push
push
popf
je
and
roll
lcall
lods
dec
pop
into
xor
mov
sbb
mov
cmp
mov
arpl
mov
rcl
das
fucomip
jb
les
mov
or
pop
pop
xor
dec
xchg
cmp
lret
mov
mov
and
fildl
inc
repnz
push
xor
stc
sbb
mov
aad
cmp
lods
or
nop
pusha
fwait
jo
jge
and
xchg
or
mov
aaa
push
lods
add
lds
mov
sbb
add
jecxz
dec
sbb
imul
movsl
cltd
push
fcos
repz
add
loopnew
fidivl
popl
pop
cs
outsl
jmp
push
sahf
mov
jl
jae
dec
mov
add
insb
xor
mov
mov
mov
fildll
loope
mov
cmp
sbb
mov
xchg
cmp
jae
lahf
sub
push
xchg
or
movsl
out
push
and
fs
subl
ficomps
ja
icebp
repz
cmp
shrb
xchg
xlat
xchg
out
adc
fisubrs
xor
sub
push
pop
jl
dec
xchg
mov
gs
ds
add
mov
inc
sbbl
pop
fildll
or
aam
mov
shr
ret
jno
mov
pop
cmp
jp
push
cmpsb
or
stos
xchg
leave
xor
xlat
shll
push
sahf
iret
shlb
cs
jecxz
mov
movsb
pop
pop
popa
in
outsl
xchg
std
mov
jcxz
cltd
dec
dec
mov
jl
push
inc
mov
inc
subl
enter
repnz
pop
mov
sarb
int
lea
xchg
pushf
leave
push
dec
mov
inc
and
jecxz
inc
test
shr
loope
push
fwait
dec
in
mov
dec
ret
xchg
popa
call
cs
jg
dec
add
mov
cmp
push
mov
add
out
test
jno
and
aaa
out
or
cmp
sbb
cmpsl
push
sahf
cmc
bound
dec
lret
rcrb
and
ljmp
int
repnz
mov
dec
call
imul
inc
aad
insb
aas
jle
pmulhuw
shl
icebp
into
jns
pop
scas
scas
xor
sarl
shl
xchg
clc
fidivrl
push
dec
pop
test
es
les
mov
and
or
mov
mov
inc
xchg
sub
je
adc
sub
shlb
add
and
mov
inc
adc
or
stc
cmpsb
lret
int
mov
xchg
mov
mov
insb
mov
jno
es
lods
inc
out
jp
pop
and
fs
cs
dec
add
cmp
inc
cmp
and
popa
scas
dec
sub
repnz
sub
mov
pushf
leave
mov
iret
imul
std
in
jb
in
mov
out
testb
push
push
cwtl
ja
inc
in
and
pop
sbb
mov
std
dec
xor
mov
sbb
and
inc
add
sub
scas
out
sbb
rcrl
enter
mov
fldl
movsl
popf
push
dec
das
mov
lock
pop
imull
stos
adc
fstpl
xor
mov
mov
cs
pop
mov
xchg
loop
sbb
inc
inc
jg
fs
es
xchg
rcrb
js
mov
and
dec
or
fcom
adc
test
mov
xchg
xchg
adc
pop
in
jle
insb
leave
dec
data16
or
movb
push
cmp
cs
dec
icebp
cmpsb
and
pop
push
aaa
mov
test
push
jecxz
inc
mov
js
inc
stc
rol
ret
out
push
xor
dec
add
lods
mov
cmp
test
or
mov
out
mov
daa
mov
xchg
mov
mov
scas
push
pop
and
mov
dec
mov
mulb
in
sub
sub
jae
movsl
jecxz
repnz
and
push
cs
out
cmp
mov
hlt
fs
int3
dec
mov
dec
xchg
xchg
sub
js
bound
jmp
cmc
aam
push
rol
enter
mov
mov
mov
enter
mov
stos
xchg
fsubs
call
pusha
in
movsl
mov
push
push
mov
mov
sub
sahf
daa
std
das
ret
cld
pushl
xor
ret
mov
inc
sub
mov
les
sbb
int3
into
les
add
inc
hlt
ret
xchg
clc
mov
rorb
xor
jbe
data16
xchg
in
push
inc
sub
pop
pop
add
adc
cmpl
jb
cmp
cld
in
std
ficoms
mov
outsl
xor
lods
repz
jecxz
stos
dec
pop
movsl
adc
sbb
xlat
pop
bound
clc
out
pop
inc
imul
dec
cmp
sbb
pslld
cwtl
nop
and
cmp
lods
xchg
push
push
sarl
jbe
mov
xor
rcl
sbb
inc
ret
mov
dec
sbbb
sub
push
jge
hlt
test
mov
fildl
cmp
xchg
mov
in
sbb
loop
jg
add
sahf
adc
push
cmpsl
add
clc
int
or
cli
xchg
jl
mov
adc
es
mov
subb
sub
shlb
xor
mov
jl
or
les
mov
fisttpl
outsl
sub
xchg
mov
scas
scas
jp
and
bound
add
dec
fsubs
nop
and
pop
xlat
sahf
pusha
scas
aaa
jge
aam
inc
xchg
clc
das
push
xchg
iret
insb
sarl
jnp
or
inc
ljmp
sbb
cmp
lea
shl
pop
lret
js
sahf
mov
out
sbb
lret
pop
jb
jbe
pushf
jns
pop
sbb
rorl
xor
pop
into
dec
sahf
add
sub
or
enter
outsb
dec
push
push
pop
lret
cmpsl
sbb
mov
test
int
dec
push
pop
in
movsl
xor
bound
pop
ret
sbb
shlb
xor
cmc
cmpsb
xchg
push
aas
in
adc
push
fs
rorl
cli
xor
mov
gs
xchg
jecxz
lods
dec
and
rcrb
les
int
jo
mov
popa
test
mov
push
cmp
and
xlat
adc
lods
xchg
ss
sub
cmp
lahf
cmp
stos
cmp
ret
mov
mov
xchg
aas
sbb
ss
clc
dec
outsl
push
pop
outsl
sbb
mov
xchg
push
lcall
xchg
mov
in
or
cli
andl
call
mov
vpunpckhbw
or
sub
cmp
lods
mov
notl
lcall
idivl
das
in
loope
aad
mov
add
sub
int
imul
xor
out
or
sub
mov
jne
in
xchg
mov
stc
sti
dec
and
js
and
xlat
and
jo
cld
lret
popa
das
inc
pusha
push
rcll
scas
cs
cwtl
daa
mov
cmpsb
add
push
fdivp
lret
mov
add
xchg
xor
add
and
pushf
jmp
imul
ret
out
or
adc
mov
stos
lock
clc
xor
push
cmc
fiadds
and
cmp
and
es
and
loope
jmp
mov
aaa
cmp
lret
jge
mov
dec
imul
stos
mov
push
mov
jl
add
pop
jb
addr16
add
test
jl
push
sarl
dec
xor
insl
pop
add
repz
pop
add
dec
call
cmp
adc
adc
jp
mov
xor
pop
push
out
jo
jne
neg
cli
push
insb
mov
push
stos
mov
out
shr
fcomip
mov
dec
in
xor
data16
adc
adc
mov
jl
aas
mov
out
pop
jne
in
lea
lcall
es
sbb
mov
out
movsb
out
arpl
stc
mov
pop
pop
push
enter
loopne
js
mov
in
loopw
jecxz
inc
mov
and
or
nop
inc
bound
out
fs
mov
fidivl
inc
test
lret
clc
out
mov
mov
mov
jno
rclb
int3
mov
xchg
aaa
jg
test
out
cwtl
dec
popf
and
jecxz
enter
stc
stos
mov
arpl
enter
and
add
ja
cwtl
fsincos
ljmp
cs
out
adc
pop
xchg
lds
sbb
fsubr
testb
add
roll
out
in
adc
or
sarb
lahf
mov
dec
jno
inc
ret
nop
outsl
sbb
inc
hlt
mov
lods
out
jl
xor
jbe
lcall
sub
mov
sti
fwait
repnz
out
push
scas
xchg
pusha
int3
es
popa
int
mov
leave
aam
das
jg
cmp
xchg
adc
xchg
sub
dec
idivl
pop
and
fs
xchg
adc
inc
imul
mov
cmp
sbb
inc
xor
inc
push
pushf
imul
jne
out
jb
fcompp
dec
enter
xor
repz
lock
call
idivb
cltd
out
mov
xor
sub
add
adc
fmull
data16
lahf
sti
sbb
insb
mov
ficomps
popf
fistps
scas
cmp
xchg
arpl
push
cmpsl
pop
xchg
and
fucompp
loope
sti
int3
scas
fisttpll
dec
subb
insb
bound
pop
imul
ja
mov
xlat
pop
mov
inc
stc
or
adc
leave
imul
test
xor
lahf
aam
sbb
add
js
and
dec
pop
mov
pop
loopne
jb
repnz
repz
jb
sti
mov
cmp
jl
xor
mov
les
push
push
repnz
or
movl
fldcw
mov
movsb
out
lret
sbb
fbstp
incb
mov
negb
fsubp
pop
mov
pop
fwait
xchg
push
add
repz
adc
push
sahf
mov
cmp
add
cmp
cltd
les
dec
fdivs
cwtl
pop
jne
mov
push
mov
cld
test
faddl
scas
xchg
testl
or
jns
fwait
test
subb
fistpll
stos
mov
jb
pop
dec
and
stos
dec
add
sub
shl
and
mov
repz
int
xor
cmp
pop
sti
fwait
andl
dec
out
ds
mov
mov
sub
inc
jo
subl
xchg
or
in
aam
mov
iret
movsl
xchg
popa
add
dec
notl
jnp
in
mov
cmpsb
mov
js
cld
adc
cmpsl
push
xchg
jmp
jle
inc
inc
in
neg
aas
std
or
xchg
dec
scas
pop
sbb
out
adc
jb
iret
andl
push
mov
mov
push
dec
mov
es
cmp
mov
jle
pusha
pop
lahf
icebp
mov
sbb
or
mov
test
jg
leave
xor
dec
add
mov
sbb
cs
ficoml
sbb
push
sahf
mov
push
cmp
mov
pop
js
pop
in
loop
enter
aad
push
push
movsl
aad
pop
mov
shll
lcall
hlt
xor
adc
mov
cwtl
mov
mov
mov
addb
inc
xchg
xor
dec
data16
or
bound
inc
inc
xchg
stos
test
subb
in
xor
mov
sub
xchg
mov
not
sarl
mov
rcrb
add
out
inc
popa
repz
mov
sub
test
push
inc
fildll
movsb
mov
or
pop
call
scas
cmpsl
jnp
inc
cld
fsts
mov
ljmp
leave
push
jmp
pop
movsb
sbb
in
dec
jbe
fwait
imul
in
dec
ja
dec
jno
out
or
dec
xorb
not
cmp
icebp
mov
fs
pusha
out
test
dec
pop
testl
adc
mov
outsb
sti
xchg
sbb
lock
das
lea
push
mov
inc
xor
fstps
bound
sbb
cvtdq2ps
xchg
or
daa
lea
andl
jo
sbb
arpl
cltd
pop
push
scas
scas
std
mov
jmp
sahf
xor
mov
inc
inc
in
pop
sbb
fstpt
add
push
cli
inc
or
mov
xchg
test
lret
addb
add
mov
xor
inc
xchg
jns
leave
test
sub
sahf
sub
mov
mull
out
inc
cwtl
rcrb
push
fisttpl
adc
sbb
pushf
in
mov
int
fwait
jg
in
jo
sbb
mov
sub
out
mov
add
hlt
pop
cmp
push
xchg
dec
clc
jnp
ja
iret
xchg
inc
add
pop
inc
outsb
inc
aaa
pop
xor
aam
lret
cwtl
push
cmp
mov
sbb
xchg
sub
lret
ficompl
xchg
and
mov
cmpsb
add
inc
std
mov
aad
movsb
in
mov
push
inc
cwtl
and
std
xor
xchg
cmp
inc
sarb
or
sbb
fdivl
or
lret
sub
mov
add
xchg
add
inc
mov
mov
push
fidivs
negl
jle
in
or
roll
test
lock
stos
popf
pop
cli
shrl
fsubs
stc
sbb
sub
xor
jb
xchg
and
or
pop
repnz
mov
fistpl
mov
xor
sub
pushw
inc
adc
dec
test
jbe
mov
adc
sub
popf
push
dec
inc
mov
outsl
jge
sub
daa
sbb
rcrb
ret
xchg
pusha
into
fnstsw
cmp
jmp
pop
js
lcall
inc
jecxz
in
pop
xchg
arpl
loop
xchg
cmp
add
sbb
lods
sub
xchg
int3
mov
jmp
divb
lds
insb
std
incb
xor
push
inc
dec
xchg
inc
adc
cmpsl
lea
aam
ficomps
daa
jmp
loopne
mov
jbe
lcall
inc
out
adc
pushf
push
dec
dec
loop
pop
jno
cmp
cmpl
insl
cmp
jo
lret
xchg
daa
ljmp
jg
add
sbb
adc
mov
imul
insb
mov
pop
test
clc
stos
icebp
popf
arpl
adc
mov
notl
ficoms
gs
jp
pop
cltd
pop
imul
scas
dec
bound
repz
or
outsb
ds
lret
int3
adc
cmpl
addr16
xchg
ja
sbb
orl
add
sbb
cs
addr16
repnz
iret
lcall
int
push
sbb
xchg
inc
test
lcall
xchg
ficoml
mov
sub
lcall
test
jo
js
rcrb
jp
shlb
xor
inc
mov
lds
stos
xchg
xor
int3
incb
dec
pusha
lcall
arpl
ficomps
xchg
repz
mov
xchg
pop
push
dec
mov
fimuls
jne
stc
mov
aam
or
inc
dec
mov
fmull
test
pop
or
jnp
xchg
or
jnp
and
rcll
mov
sub
js
int3
push
jl
push
pop
ds
jle
in
pop
sub
lret
call
or
mov
cmp
call
push
and
nop
xor
dec
push
daa
jl
push
sbb
dec
pop
inc
je
push
cmp
xchg
sti
orl
cwtl
mov
mov
addb
mov
ds
loope
js
outsl
int3
sub
lret
mov
sub
imul
sub
aam
aas
popa
mov
xchg
push
push
dec
sbb
ljmp
jnp
mov
lahf
inc
ret
movsb
dec
mov
cmp
enter
popf
or
shll
cmp
pop
cli
add
push
sahf
pusha
xchg
cmpsb
out
repnz
orb
fstpt
test
mov
mov
stos
ss
icebp
imul
test
jnp
sbb
cmp
add
cmc
push
push
rorl
jbe
pop
roll
ja
in
sub
out
outsl
jle
cmp
roll
je
lock
xor
cmp
mov
add
in
jecxz
scas
test
sub
mov
push
in
lods
xor
popf
jbe
xor
lret
fnstsw
pop
jmp
mov
js
pop
pop
adc
fiadds
and
pop
rcr
dec
mov
fdivs
das
leave
dec
mov
incb
mov
jmp
test
cmpsw
dec
push
stos
jge
xchg
fcompl
decb
movsl
mov
add
out
imul
jecxz
ja
test
iret
jno
out
leave
fbld
and
out
jecxz
je
sbb
divb
flds
sahf
ljmp
imul
stos
mov
fwait
imul
orb
jg
imul
cmpsb
xchg
iret
inc
sub
mov
aaa
icebp
xchg
cmp
push
pushf
add
cmp
das
dec
dec
push
xor
in
test
mov
into
iret
rorb
test
enter
dec
pop
mov
push
enter
popf
push
pop
inc
mov
jne
inc
pushf
mov
mov
and
dec
push
fnsave
cmp
dec
dec
cmpsb
lods
enter
sub
mov
imul
notl
mov
mov
int3
loopne
jle
out
push
adc
mov
mov
sbb
scas
loopne
mov
ret
fdivs
test
push
adc
pop
shrl
lret
in
insb
xchg
jmp
out
cli
inc
dec
out
je
mov
inc
pop
adcb
scas
mov
sbb
jbe
fsts
enter
xlat
stc
or
rolb
mov
jb
push
add
mov
dec
mov
cmc
push
aaa
inc
pop
xor
outsl
pusha
js
dec
jo
or
mov
fsub
xor
sbb
fscale
in
cmp
insl
fldl
jmp
icebp
cltd
shlb
cwtl
leave
and
ljmp
xchg
and
insb
fiadds
add
push
es
lcall
inc
in
insb
cmpsb
inc
inc
aaa
and
or
pop
cmp
insl
fwait
gs
add
out
xor
and
movsl
mov
jg
pop
insb
mov
pop
rclb
arpl
inc
xchg
jbe
sbb
or
mov
inc
orl
pushf
lcall
cltd
sub
dec
in
xlat
dec
lret
outsl
sahf
cmc
test
pop
testl
xchg
int3
mov
ror
xchg
out
pusha
insb
stos
mov
mov
js
insl
fwait
and
push
mov
inc
iret
xchg
cmpsl
xorl
jnp
test
add
add
stos
sbb
mov
fstpt
xchg
adc
cmpsl
and
jno
push
inc
and
mov
das
testb
mov
lret
mov
mov
pop
jb
leave
bound
mov
outsb
sti
into
sarb
ror
xchg
cmp
xchg
daa
jmp
arpl
inc
frstor
shrb
rcrb
ja
popf
test
xor
jne
bswap
xchg
xchg
adc
imul
cli
xchg
adc
push
mov
add
lods
and
outsl
sub
push
adc
add
xchg
push
pop
sbb
pop
mov
test
xor
xchg
xlat
daa
add
daa
and
testb
inc
repnz
mov
icebp
sbb
mov
in
inc
ret
scas
or
mov
fldl
cmp
ds
stos
jl
or
aas
xchg
adc
push
les
lds
xor
iret
inc
pop
clc
xchg
rcrl
ss
mov
loope
leave
push
ljmp
push
fistpll
aas
mov
dec
iret
imul
gs
and
sbb
jge
je
push
dec
cmp
ret
mov
and
cmp
pusha
out
xchg
imul
jb
jge
repnz
repnz
mov
hlt
in
call
in
movsb
sub
and
fimuls
data16
std
subb
ljmp
mov
es
and
test
xchg
pop
lcall
dec
addr16
sahf
inc
scas
addr16
addr16
addr16
xor
dec
fldcw
cmovb
das
jo
sti
dec
fwait
inc
sar
add
call
mov
es
popf
pop
xchg
lock
sbbb
mov
sub
mov
repz
jmp
int3
pop
mov
mov
add
and
or
and
leave
and
jp
and
jl
push
in
sub
or
imul
mov
lods
out
adc
in
push
jg
cmp
jns
pop
js
adc
cmp
faddl
ja
pop
xchg
out
arpl
fwait
addb
mov
jbe
xchg
cmp
lods
mov
ss
enter
mov
out
movsl
std
cmpsb
xchg
or
subb
add
fcmove
movsb
into
lea
imul
dec
daa
sbb
push
pop
push
jp
nop
sub
scas
popf
in
jle
pop
mov
decl
cmp
movsb
push
mov
adc
loop
sbb
adc
out
test
push
rcr
or
and
out
jmp
push
xor
fimuls
movsl
jns
imul
lds
rol
lods
pop
clc
jb
inc
fcomp
sub
dec
mov
add
imulb
inc
push
jno
xor
xor
leave
pop
jae
pop
sub
mov
vcmpnle_uqps
bound
fldcw
mov
fimuls
sarl
sbb
sbb
push
sbb
daa
push
mov
mov
xor
dec
jge
call
jno
stc
cwtl
sub
dec
int
and
cmovne
data16
cmpsl
mov
jbe
in
out
arpl
in
dec
pop
nop
scas
xor
xlat
add
adc
ret
out
addl
sbb
out
xor
cltd
add
aad
nop
daa
out
sti
into
jbe
clc
js
movsl
adc
addb
mov
add
mov
insb
and
mov
xor
xorl
iret
xor
push
cmp
xor
and
or
dec
mov
dec
ss
hlt
push
jno
rclb
pushf
out
cmpl
scas
jl
rorl
jns
lcall
or
cvtdq2ps
pop
jmp
imul
pop
jae
mov
cs
dec
jp
lods
jl
and
ficompl
mov
xchg
inc
addr16
and
jb
aam
ret
add
jmp
push
xchg
stos
shl
ret
aam
jae
cwtl
sbb
jno
mov
loopne
ret
test
lret
jb
add
ljmp
jnp
lds
arpl
mov
pop
sti
cmp
sub
sbb
outsl
sub
push
test
mov
adc
jae
out
dec
xchg
aaa
adc
xor
in
jg
shrl
push
cmp
stos
push
jb
mov
xchg
mov
dec
mov
jno
or
pushf
jp
aaa
xor
shlb
in
outsb
and
mov
iret
mov
inc
fs
dec
aam
mov
ror
pop
shlb
add
mov
fcomps
and
ficompl
scas
addr16
jne
mov
dec
gs
add
mov
test
mov
fincstp
jg
scas
adc
dec
andb
je
gs
push
test
es
xor
mov
std
in
push
add
shr
mov
pop
push
mov
cmp
xor
adc
mov
add
push
cmpsl
fcmovbe
pop
mov
sbb
or
pop
jecxz
sub
js
loop
ret
adc
rcll
imul
loopne
push
push
jecxz
ret
xor
lret
into
add
mov
xor
mov
mov
mov
push
fistpll
jge
xchg
fisttpl
imul
bound
pusha
xchg
dec
or
xchg
cmpsl
inc
lods
call
loopne
fs
and
cli
or
popf
lock
cmp
fmuls
int3
ficoml
adc
lock
fisubrl
cld
sub
stos
push
mov
inc
mov
xor
dec
push
sbb
dec
es
int
lods
inc
sbb
xor
fwait
test
mov
loope
out
movsb
jno
repnz
dec
pop
lret
cmc
inc
cmp
inc
mov
fwait
xchg
xchg
stos
ss
mov
push
loopne
fbld
imul
or
inc
aam
jo
into
sbb
pop
mov
dec
cmpsb
xor
pushf
loop
sub
and
xchg
cmpl
mov
shlb
sub
ret
mov
mov
fbstp
jg
xchg
xchg
mov
xchg
fisubs
out
mov
jp
xchg
jae
jno
push
loop
adc
rorb
stos
add
sub
pop
dec
sbb
jg
xchg
cwtl
rcrb
push
push
add
lahf
bound
pop
int
push
scas
mov
loopne
mov
jae
lock
mov
xor
adc
fstp
icebp
orl
cmp
out
sub
in
repz
cltd
lock
int
cmp
jbe
imul
sahf
mov
dec
xor
fisubrl
pop
mov
and
sbb
pop
push
testb
sahf
jb
int
lahf
inc
das
push
mov
insb
ret
cmpsl
dec
xor
dec
sub
and
insl
dec
sub
icebp
cltd
sar
or
lock
adc
imul
scas
fs
out
pop
mov
jne
mov
fbstp
test
add
sbb
rorl
mov
cmp
pop
and
insl
inc
cmpsl
mov
stos
pop
pop
fdivrl
outsb
xchg
stos
inc
mov
lods
cld
data16
orb
arpl
hlt
in
push
movsb
add
sbb
clc
adc
jnp
mov
add
cmp
cmp
adc
cli
inc
sbbl
push
stc
inc
xchg
lds
mov
pop
push
pop
xchg
xor
sti
push
vmwrite
add
mov
cmp
pop
sub
shll
add
sbb
rorb
icebp
arpl
testb
inc
sbb
sub
mov
loop
out
sub
gs
in
dec
xor
bound
fildl
repnz
cmp
addb
iret
xchg
insl
mov
fwait
aad
loop
sahf
pop
pop
in
adc
xlat
xchg
cmp
dec
jg
add
and
std
xchg
mov
sub
fildll
stos
or
mov
movsl
daa
cmc
or
push
pop
pop
xchg
and
push
pop
adc
pop
mov
arpl
lcall
pop
pop
fmul
mov
cmp
out
fucomp
cli
push
inc
lods
in
andl
fisttpl
cs
mov
loope
mov
xor
outsb
stos
dec
push
test
jge
xchg
enter
adc
adc
std
call
inc
popa
hlt
dec
jnp
adc
sub
fcoml
paddsb
scas
dec
sbb
movsl
sbb
sub
ret
in
mov
sbb
push
scas
cmp
mov
and
ficoml
lock
adc
inc
ja
rcr
lret
mov
insb
addr16
test
cs
pop
es
data16
cmp
jbe
jne
sub
mov
sub
inc
mov
jbe
dec
ret
mov
push
divl
shrb
ret
mov
addr16
ret
jns
shlb
push
or
popa
dec
lds
lret
xlat
cltd
rorl
incb
in
dec
ja
jmp
test
fcmove
call
mov
sahf
jmp
xor
aaa
mov
into
aaa
fstps
test
arpl
sbb
imul
or
sub
cmpsb
sbb
insl
or
pushf
ss
fsts
test
sbb
adc
xchg
mov
xchg
outsb
outsb
cli
adc
sbb
in
mov
or
das
fdivl
lahf
rcl
sbb
negb
aam
fidivl
jno
and
push
cmpsb
push
test
pop
xchg
mov
pop
sub
push
dec
push
movsl
sbb
inc
jae
add
cltd
add
je
dec
addr16
lock
inc
in
and
pop
mov
je
add
jne
jl
xchg
xchg
xchg
cmp
mov
outsl
mov
lea
xchg
push
jae
mov
outsb
sub
hlt
pusha
sahf
push
mov
inc
in
das
pop
mov
jmp
lret
dec
imul
mov
push
mov
mov
mov
lods
xor
popa
jmp
fcmovb
cmc
sbb
inc
rcll
mov
std
push
sbb
pop
pop
cmpsb
scas
add
clc
and
repz
loope
ljmp
mov
gs
fabs
jge
jecxz
push
cmp
jecxz
data16
iret
arpl
sbbl
fildl
mov
add
jmp
ja
or
sbbb
aam
idivl
movsl
sbb
push
outsb
popa
stos
lods
mov
sub
inc
lret
mov
sbb
or
mov
push
loopne
mov
sub
in
in
adc
and
push
test
imul
lea
mov
add
and
mov
std
mov
jl
xor
cltd
fisttpl
aaa
sub
pop
fnstenv
in
in
sbb
inc
je
ret
pop
ljmp
xchg
lahf
inc
mov
dec
mov
lock
mov
mov
push
mov
in
ss
scas
xlat
pop
pop
cwtl
or
daa
rol
mov
les
aam
aam
sbb
imul
sbb
out
cmpsb
jmp
mov
lds
sbb
or
test
mov
outsb
std
push
les
inc
clc
sub
jb
incb
in
and
push
fsub
ret
sarl
sub
ret
clc
scas
outsb
clc
ret
mov
dec
sub
into
inc
and
add
shll
mov
stos
jnp
stos
cmp
add
mov
xlat
push
scas
push
sbb
stos
cld
push
shlb
mov
mov
sar
sbb
shlb
sub
sbb
push
sbb
mov
lcall
push
hlt
cmpsb
test
sarb
sub
and
lds
or
push
fwait
adc
mov
mov
jo
shrl
fst
push
inc
jns
mov
sub
psubb
dec
mov
dec
aas
xchg
or
cmpsl
out
lods
insb
or
repnz
lds
xor
iret
sbb
xchg
adc
dec
jl
out
inc
mov
pushf
stos
cmp
inc
push
push
lods
mov
into
iret
outsl
fildl
add
cmpl
sti
ds
xor
enter
fbstp
test
push
stos
mov
sbb
push
sub
mov
stos
shlb
add
xor
js
roll
out
dec
movhps
or
dec
insb
jnp
inc
pushf
or
mov
repz
and
mov
push
pop
and
ljmp
push
dec
dec
mov
data16
insl
add
out
inc
lods
or
jns
in
jl
stos
ret
mov
add
cmp
or
out
loope
pop
outsb
adc
aad
mov
xor
jl
pop
sbbb
mov
sub
xor
push
movsb
test
in
movsb
xchg
aaa
scas
data16
xchg
imul
rep
iret
or
cmp
adc
push
mov
dec
nop
xor
ret
mov
in
jg
mov
push
xor
shrl
inc
pop
lret
aas
xchg
xchg
pusha
js
fisttps
jb
mov
mov
xchg
loop
jb
add
jmp
and
and
nop
xor
mov
imul
cli
sbb
push
lods
pop
and
mov
and
mov
mov
pop
or
cmp
adc
lret
cmpsb
pop
mov
aas
imul
xor
push
cmp
jl
xchg
lea
sub
shlb
jb
dec
iret
js
pushf
lock
imul
jge
push
mov
push
insb
clc
or
insb
sub
jge
dec
sbbb
inc
mov
or
sbb
sub
loopne
or
imul
jl
jae,pt
pop
test
pop
pop
imull
adc
xchg
sub
mov
jmp
stc
int3
jns
push
xor
sbb
das
push
in
sahf
mov
inc
aam
lods
daa
mov
stc
pop
adc
mov
inc
sbb
in
jne
test
js
in
mov
cmp
add
adc
cli
mov
jo
xor
inc
lahf
insl
push
fwait
mov
repz
xlat
xor
xchg
testb
mov
jecxz
sub
fdivrl
push
inc
outsb
sub
fisubs
aas
in
sbb
or
dec
mov
cmc
clc
in
lret
push
in
jg
adc
xchg
orb
jne
push
cld
addb
test
cmpsl
clc
inc
sbb
jmp
mov
mov
jl
fsub
icebp
imul
lock
lds
adc
popf
test
xor
push
xor
jae
xor
add
mov
lcall
or
pop
roll
sbb
fnstsw
mov
mov
insb
jmp
push
or
outsl
pushf
popl
cs
daa
add
cwtl
xchg
stos
pop
aas
lock
xor
loop
adc
arpl
cmp
pop
sbb
xchg
push
add
xchg
fpatan
hlt
rclb
jecxz
mov
loope
mov
jo
cmp
adc
inc
mov
or
test
mov
int
cmpl
sbb
arpl
xor
cltd
std
iret
adc
mov
int3
into
or
adc
pop
mov
pop
push
out
fdivrl
pusha
jl
xlat
pop
mov
les
xlat
out
rcl
stos
lret
mov
adc
mov
mov
or
outsl
jnp
test
adcl
and
pop
xchg
xor
mov
mov
cmp
mov
pop
push
outsl
cmpsl
pop
sbb
pop
dec
push
mov
jne
cmpsl
mov
mov
xchg
xchg
mov
scas
in
adc
das
imul
pusha
in
jns
std
jb
jne
cmp
dec
mov
in
jl
inc
add
stos
test
or
mov
jge
dec
jp
shlb
int3
push
sbb
mov
out
loope
xor
jecxz
mov
sub
lods
pop
nop
inc
lds
and
imul
jbe
xchg
mov
ret
lret
rcl
ss
lahf
xor
dec
lea
ljmp
add
xchg
pop
push
or
cmp
xchg
sub
push
mov
cmp
xchg
xor
shrb
shl
fs
xchg
rorb
aam
jb
outsb
push
dec
mov
mov
je
xor
xor
mov
ljmp
out
stc
and
shl
jne
jo
cltd
and
lcall
and
xchg
cmp
loopne
mov
dec
mov
insl
imul
outsl
xor
sub
enter
std
pop
jnp
jo
inc
inc
add
xchg
cmp
mov
out
clc
sub
mov
je
iret
adcl
mov
xor
pop
sbb
add
xor
mov
ret
andl
ss
inc
jno
xchg
mov
jbe
pop
mov
int
jnp
xchg
cld
call
cltd
loope
icebp
cmp
pop
pop
sbb
push
jl
movsb
fdivs
pop
jmp
in
pushf
inc
pop
push
xchg
pop
cmpb
aam
sub
jns
and
cmp
jl
aam
sub
sbb
add
push
lahf
sar
adc
iret
movsl
cltd
in
mov
iret
sub
fisubs
pop
loopne
or
jmp
push
lea
outsl
push
int
or
jne
in
cltd
mov
es
jns
mov
in
and
sub
add
and
adc
cmp
or
and
dec
pop
sub
push
loope
xor
inc
jecxz
jecxz
mov
xchg
mov
jno
je
lods
adc
jl
xchg
xchg
or
rcll
xor
mov
sbbl
fsts
icebp
add
test
scas
fists
rorl
shrb
cld
addr16
leave
add
cmpsl
push
cmp
mov
sub
out
ficoms
jns
lret
inc
dec
sarb
add
cmpsb
pop
sbb
nop
repz
lret
out
mov
and
jnp
add
mov
pop
mov
mov
out
adc
in
or
shll
cmp
inc
dec
subb
imul
jbe
sarl
ja
xchg
outsb
repz
xchg
cmpsb
jae
mov
xor
xchg
sbb
add
dec
push
xor
or
mov
into
mov
loopne
mov
and
sbb
sub
loope
add
xor
scas
mov
sbb
mov
jp
les
test
fwait
pop
pop
or
sti
cmpb
pop
mov
pop
mov
mov
fs
xchg
nop
imul
jg
gs
mov
adc
jne
dec
push
lret
pushw
adc
in
insl
fwait
mov
jecxz
stos
or
and
mov
aaa
lods
add
hlt
orl
adc
add
in
push
bswap
xor
pusha
ret
mov
clc
es
or
fcmove
mov
movsl
push
call
push
mov
xor
mov
lret
call
shl
xor
adc
fdivs
mov
bound
in
push
out
pop
fnstcw
jl
inc
outsb
adc
test
add
add
mov
addl
lods
add
rcl
lods
mov
dec
mov
enter
outsb
jbe
ss
lret
idivb
popf
xchg
nop
pushf
and
push
add
or
mov
cmpsb
xor
mov
arpl
mov
dec
pop
xchg
sub
aam
push
jp
push
movb
or
lret
cltd
xchg
push
mov
xor
or
movsl
rcll
mov
mov
pop
push
push
test
loopne
addr16
enter
dec
dec
add
lods
xor
pop
jo
insb
in
mov
sti
xchg
fiadds
mov
push
adc
ficompl
inc
imul
in
cld
lret
push
adc
add
cmp
sbb
and
sub
mov
aaa
xor
div
arpl
imul
xchg
sti
xor
daa
inc
fldcw
jo
jne
flds
jmp
enter
mov
xchg
and
ljmp
xchg
cmovne
aaa
sub
pop
pop
cld
dec
cmp
addr16
int3
arpl
in
jmp
cmpsb
mov
leave
popa
mov
call
add
xchg
stc
push
cs
out
mov
adc
add
dec
clc
jnp
xchg
repnz
aad
cmp
adcl
icebp
nop
ja
aam
jb
cwtl
scas
pushf
sbb
jg
sub
sub
push
ds
rcrb
mov
popf
adc
bnd
cld
push
adc
fcom
pop
or
inc
movsb
cmpsb
pop
cli
mov
iret
fs
and
push
in
mov
and
push
rcll
scas
sbb
xor
mov
add
cmp
sub
sub
add
xchg
mov
inc
xchg
lret
fsubs
xor
ucomiss
mov
push
test
sysret
xor
add
clc
mov
hlt
sarl
add
enter
scas
jl
cli
addr16
mov
adc
ret
sahf
rcrb
stos
mov
cmc
fsub
rolb
sbb
mov
lahf
jmp
jle
popa
clc
imul
scas
popa
movaps
out
jge
scas
sahf
push
stc
sbb
stos
in
insl
loop
jno
cli
stos
cltd
inc
ds
sbbb
dec
inc
fnstenv
sbb
jne
fst
add
or
jnp
and
inc
mov
and
orl
movsl
imul
lock
inc
mov
dec
mov
sti
cmc
shll
or
nop
xchg
sbb
adcl
xlat
call
push
sbb
arpl
repz
les
movsl
lock
pushf
or
mov
jmp
arpl
repnz
hlt
mov
dec
mov
push
in
fbld
push
shlb
clc
notb
jp
enter
sarb
add
mov
add
dec
cmp
mov
icebp
adc
mov
add
pusha
imul
sbb
lock
and
dec
pop
cmp
push
cmp
push
hlt
maxps
loop
outsl
out
nop
mov
dec
cmp
data16
jge
mov
fisubrs
adc
aas
nop
mov
rcrb
xor
mov
scas
cmp
pop
repz
xchg
and
add
cltd
mull
adc
insl
lcall
pusha
int3
inc
mov
sti
addr16
xchg
lret
mov
test
cwtl
xchg
lds
lea
xor
mov
adc
dec
pop
xchg
mov
inc
fisubrs
out
pop
jp
push
jl
dec
icebp
xchg
in
hlt
jle
sub
outsb
insl
cmp
std
shlb
sub
int3
and
flds
stc
xor
adc
cmp
pop
add
mov
inc
pop
sub
xchg
scas
cs
cli
or
dec
nop
aaa
sbbl
outsb
and
fidivrs
lea
xor
int3
fs
int
andb
and
imul
loop
fs
lds
cmpsb
cmc
add
or
divl
cmpsl
imulb
push
dec
add
inc
add
out
jns
dec
jp
out
ss
ljmp
inc
je
push
scas
outsl
incb
out
out
push
mov
dec
xchg
mov
pushf
jns
fisttps
cwtl
mov
xchg
inc
std
add
roll
add
ss
sbb
pop
xor
jmp
mov
int
dec
popf
gs
and
xlat
add
or
pop
fsubl
loope
ret
nop
cld
iret
sahf
insl
int
ret
or
pop
test
inc
cwtl
fnstcw
shl
roll
pop
adc
loop
jnp
ds
fisttpll
leave
cmc
divb
and
ret
imul
jae
es
push
mov
lods
loop
leave
in
movsb
stos
out
test
aas
xorb
sti
adc
mov
aad
rol
aam
int3
shrl
or
iret
push
xor
arpl
add
cmp
cmp
mov
pop
jle
add
cmp
xchg
mov
cwtl
add
daa
lods
ljmp
sarb
mov
jge
flds
mov
dec
inc
pop
sbb
cmpsb
xor
out
mov
pusha
mov
mov
enter
leave
rcrl
std
out
push
adc
js
push
popa
inc
xchg
add
add
jns
fisttpl
add
je
out
repnz
mov
aaa
pop
mov
sbb
cmp
stos
inc
fldcw
fcomps
xor
inc
icebp
mov
and
cmc
mov
push
or
adc
add
test
jbe
adc
push
xchg
out
add
shrb
mov
stos
adc
fwait
mov
push
jbe
or
lcall
sub
sub
orl
push
xchg
add
or
in
jecxz
push
rol
loope
rolb
ljmp
iret
shl
jns
stos
add
leave
mov
mov
leave
movl
notl
xor
push
dec
mov
xor
mov
dec
mov
popa
mov
inc
or
sbb
mov
xchg
cmp
loope
out
push
rclb
sarl
sbb
rcll
and
mov
jp
fldt
into
into
dec
add
lret
mov
or
rcrb
movl
xchg
sub
xchg
sub
fdivr
xchg
lret
out
scas
ds
xor
pop
loope
xchg
mov
mov
arpl
add
incl
in
mov
mov
sti
push
lods
imul
scas
je
xor
cmp
rorl
mov
aad
push
and
adc
mov
push
movsl
dec
std
dec
int3
aam
push
push
jmp
cli
pushf
dec
fucomip
pop
in
xorl
icebp
testl
cmp
mov
add
add
addr16
addb
int3
or
and
xchg
je
repnz
inc
dec
je
loop
mov
adc
mov
rorb
scas
pop
leave
mov
mov
mov
push
or
push
out
mov
add
pop
bound
sti
pop
stos
addr16
lds
push
cld
or
popf
negb
dec
mov
xlat
pop
jmp
push
fisubs
into
adcl
loope
cmp
pushf
push
rorb
xchg
ficoms
xor
dec
push
std
ss
pop
aad
adc
and
mov
subl
jae
cmp
cmp
adc
insb
jbe
andl
mov
not
fsubrl
fildll
outsl
scas
int
in
int3
mov
leave
push
xor
pop
push
aam
and
xchg
push
dec
aaa
bound
aad
cmp
jge
add
jmp
ffree
push
adc
testl
aam
xor
sub
xor
or
inc
or
jl
lahf
pop
xor
in
mov
mov
pop
jbe
mov
and
add
xorl
in
and
pop
sahf
xor
cmpl
pop
ljmp
out
or
test
jge
ja
inc
bnd
push
add
inc
mov
cwtl
pop
imul
cmp
or
mov
mov
mov
mov
sbb
lret
psubq
shr
into
jp
inc
loop
mov
mov
and
lcall
sub
cmp
outsb
mov
js
loope
test
sbb
dec
inc
mov
cld
in
rcl
ret
jbe
popa
negl
add
shlb
xchg
mov
adc
mov
pusha
popf
sbb
pop
out
jnp
mov
jmp
lahf
scas
mov
jno
rcr
jno
jne
orl
sub
ja
popf
mov
xchg
std
popa
lods
je
jo
loop
mov
dec
into
clc
cmp
xor
dec
mov
xorb
lcall
addr16
mov
pop
jecxz
movq
in
push
addr16
test
sbb
pop
mov
leave
or
pop
fimull
pop
add
cmc
cs
push
and
sub
add
xor
aas
mov
add
xor
cmp
loop
mul
push
test
cmp
mov
xchg
insl
gs
dec
pusha
or
ret
mull
mov
ret
jne
idivb
mov
push
jp
jb
popf
mov
mov
xchg
shr
mov
bnd
jno
push
cmpsb
enter
jg
or
mulb
call
inc
lods
lret
fdivr
dec
sbb
sbb
pop
adc
mov
pop
fidivl
shll
gs
shr
push
mov
ja
sub
push
sbb
xchg
daa
and
xchg
loop
inc
inc
jns
mov
xlat
ret
idivl
cmc
mov
pop
test
pop
xchg
into
pushf
iret
and
add
xor
mov
xor
rolb
outsl
mov
xchg
cmp
sub
gs
jmp
push
insb
scas
and
mov
rorb
sbb
mov
movups
jo
dec
outsl
in
xchg
dec
rcrb
es
or
or
jecxz
popf
xchg
cmpsl
push
push
daa
dec
sub
jae
aaa
ljmp
cld
xorl
adc
aas
pop
imul
sub
adc
dec
idiv
mov
add
or
sbb
out
loope
mov
mov
ja
out
mov
push
xchg
jge
sub
jl
cmp
push
stos
fwait
adc
jns
mov
xchg
loopne
popf
imull
add
mov
orl
mov
dec
in
jae
in
fildl
test
pop
push
mov
or
pop
inc
mov
jmp
js
add
pop
stos
lret
push
add
sub
lahf
mov
out
adc
and
jno
in
mov
adc
and
sub
xchg
fsubrs
rcrb
scas
pushf
and
and
push
data16
cmc
add
out
and
jbe
fdivrl
std
sahf
or
or
mov
pop
sub
xchg
sarb
mov
jl
repnz
mov
or
insl
out
jne
inc
push
stc
sti
or
test
subl
mov
xor
push
in
add
xchg
mov
cwtl
sbb
int
xor
xchg
mov
inc
sbb
jecxz
jge
or
int
test
sbb
dec
xchg
dec
loopne
fwait
push
adc
test
sbb
sub
outsb
sbb
addr16
xchg
subl
sahf
cmp
adc
test
pop
jl
pop
mov
movsb
iret
add
pop
cltd
xor
mov
loope
sahf
jae
xchg
or
les
arpl
cmp
push
loope
push
cmp
lret
mov
lods
adc
adc
mov
inc
ljmp
push
add
pushf
push
jae
icebp
mov
and
mov
inc
imul
mov
cli
jnp
jns
into
imul
pop
pop
push
mov
test
sahf
mov
xor
mov
pop
xchg
xlat
cmp
mov
xchg
jge
pop
dec
jns
ljmp
or
ja
fcomip
or
je
xor
into
hlt
jmp
je
ret
or
in
fstl
in
div
mov
adc
jno
js
loop
les
or
or
sbb
test
pop
xchg
clc
push
mov
pushf
mov
jmp
jecxz
insl
xor
inc
test
in
ja
das
sub
lret
cmpsb
lahf
popf
inc
jle
call
mov
xchg
sbb
dec
inc
in
leave
movsl
jle
jl
aas
cli
mov
sar
push
inc
rclb
inc
stos
fs
or
popa
and
adc
fwait
inc
out
or
test
jns
pop
ss
fsubs
cmp
cs
bswap
dec
popf
test
imul
or
xchg
das
mov
push
push
sub
mov
pop
es
mov
shlb
call
cld
aad
icebp
inc
cmp
fdivrs
mov
test
icebp
xchg
push
sub
xchg
add
push
add
outsl
lcall
mov
xchg
mov
test
sti
and
or
pushf
mov
dec
cmp
roll
andl
daa
popf
cmp
mov
lods
mov
rcrl
test
jmp
aad
jne
int3
fcomip
add
jo
cmp
and
or
icebp
push
jg
xchg
push
cwtl
xorl
cmp
sbb
imul
lds
in
test
or
inc
ret
lahf
mov
aas
pop
xor
imul
mov
push
je
hlt
or
ds
ja
stc
fst
dec
or
and
pop
inc
mov
bound
ds
push
and
jmp
mov
pop
and
pop
push
fnstsw
or
pop
int
sahf
shl
xor
test
sub
mov
mov
adc
sbbb
dec
dec
iret
sbb
in
in
stos
dec
test
adc
inc
subl
mov
jge
sub
loop
add
inc
jle
mov
push
dec
aad
movhps
test
hlt
sub
cmpb
xchg
add
adc
jle
pop
ret
ss
repz
mov
cmp
out
add
fists
mov
dec
pop
pop
test
cmpsl
mov
cwtl
sarb
stc
inc
out
jnp
push
inc
faddp
xchg
jp
mov
mov
neg
xchg
jbe
adc
or
lea
aaa
or
xor
jb
mov
insb
sbb
in
adc
popf
dec
dec
enter
mov
test
dec
lret
dec
mov
shl
pop
lret
push
push
les
cmc
xchg
pavgb
pushf
cwtl
fadds
add
scas
aas
mov
loop
pop
jb
push
and
xchg
cmpsb
outsl
jo
add
mov
mov
lea
mov
insb
ret
or
adc
into
sub
or
jbe
stc
push
lea
inc
fs
stos
pop
cmp
xor
inc
sbb
test
cmc
jle
les
mov
jl
sbb
int3
and
outsb
jl
mov
and
test
lods
in
fnstcw
and
js
and
pop
cmp
push
popf
je
sbb
repz
inc
loopne
hlt
clc
xchg
inc
push
bound
mov
push
pop
arpl
and
pusha
flds
mov
pusha
icebp
adc
aas
pop
xchg
int3
test
imul
dec
sub
pop
xchg
jbe
mov
cmpsl
and
mov
mov
and
cmp
clc
int
in
scas
test
or
xchg
dec
sub
loope
gs
dec
test
fiadds
mov
inc
ss
call
shrl
shlb
ficoml
fs
xchg
mov
ss
mov
xor
lds
inc
jb
sub
jle
add
xchg
fxch
dec
and
push
ljmp
dec
cld
adc
mov
sub
sub
adc
jnp
xor
jle,pn
push
ret
push
add
adc
sbb
mov
sub
out
leave
sub
or
sbbb
addr16
xchg
mov
dec
jnp
jecxz
xchg
das
cmp
push
push
and
je
mov
loope
int
or
push
xchg
or
mov
pop
bswap
mov
mov
ss
ja
dec
pop
lods
adc
push
pop
sbb
lea
sub
bound
lock
pop
jmp
sbb
cmpsb
std
addl
cwtl
dec
sti
aam
test
leave
adc
shlb
stc
xchg
and
adc
cmp
cmpsl
addr16
cmpsb
dec
orl
dec
xchg
scas
rcrb
add
jbe
adc
lock
xchg
lcall
jo
arpl
inc
fstl
jp
add
mov
push
lahf
dec
repnz
push
or
dec
lods
addb
cmp
jbe
jmp
insl
xchg
xor
outsb
mov
pusha
mov
enter
es
sbb
adcb
adc
xchg
and
fidivrs
push
cmpsb
aaa
add
hlt
dec
in
js
add
pusha
xchg
mov
or
or
and
xor
xchg
dec
mov
pusha
loopne
pop
mov
aaa
lret
mov
inc
sbbl
daa
shll
inc
inc
lret
add
or
jge
andb
jno
or
lods
xchg
pop
xchg
loop
aas
mov
xor
ss
inc
loope
cmp
mov
jae
insb
inc
sub
cmc
out
das
mov
int
jle
sarl
jbe
sarb
cmp
sub
lret
addr16
dec
sbb
imul
loopne
fldl
jae
inc
sbb
sub
pop
adc
ss
cmp
push
add
xor
fiaddl
loop
sub
or
or
dec
pushf
xchg
xchg
cmp
mov
jb
or
jl
movsb
xor
jle
xor
pop
in
sub
dec
jle
mov
mov
cli
jl
adc
pop
inc
test
ljmp
sub
sub
outsb
pushf
loopne
arpl
push
push
fisubl
jg
shll
enter
xchg
jnp
xchg
stos
les
xchg
and
test
mov
jecxz
add
lock
inc
ljmp
sub
stos
das
in
cmp
test
das
loop
or
xchg
mov
loop
jle
and
sub
sub
rcrb
jo
leave
or
pop
mov
jmp
or
adc
les
sti
inc
fistpll
sbb
adc
inc
cmp
shlb
sbb
pop
shlb
dec
cld
dec
push
cmp
sbb
ljmp
imul
mov
xchg
roll
jno
shl
dec
push
lock
shlb
loope
aad
mov
pusha
inc
enter
mov
rolb
call
sahf
es
cmpsb
xor
or
cld
bound
cli
outsb
jp
dec
push
mov
cmp
push
daa
das
addr16
insb
lcall
loope
loopne
shlb
data16
pop
sti
dec
cmpb
mov
ja
in
mov
jle
pop
lcall
rsqrtps
sub
push
xor
pop
xchg
gs
mov
mov
jg
add
jg
push
inc
cld
push
pop
mov
jle
fsts
adc
pop
call
jl
adc
stos
repnz
sub
cld
mov
movsl
jnp
ret
lock
cmp
and
mov
push
inc
pop
sti
dec
or
fdivp
cmp
pop
bound
mov
jne
sub
sbb
jbe
sbb
jp
cmc
and
and
cmp
dec
out
push
inc
fld
sbb
push
in
les
xchg
fisttpl
icebp
inc
dec
xchg
lahf
adc
icebp
mov
or
icebp
mov
xlat
pop
in
xlat
cmp
pop
cmovne
iret
push
inc
sbb
lock
jbe
push
xchg
xorb
cmc
dec
js
inc
cltd
out
adc
push
out
movsb
pop
and
cmpl
mov
nop
les
sub
push
inc
inc
push
pop
dec
ret
or
jle
cmpsb
add
mov
shl
ljmp
stos
adc
lods
pop
xlat
lcall
test
pop
sub
ficompl
aam
add
inc
lock
icebp
jecxz
dec
inc
stos
popa
fisubrs
cmpsb
shll
and
arpl
aas
aam
pop
jbe
cld
and
lds
shrl
xchg
add
inc
shlb
sbb
inc
xchg
xor
fdivl
sub
jae
shlb
insl
sub
xchg
jmp
adc
add
jl
data16
test
and
ljmp
xor
rclb
mov
dec
lock
jno
jmp
xor
xor
nop
fwait
add
jb
inc
out
sti
in
cmpl
adc
les
insb
rorl
mov
rcr
repz
repz
rclb
sub
fmull
repnz
inc
mov
aam
adc
jp
das
lock
popa
pop
popl
cmp
mov
add
push
dec
xchg
nop
mov
lods
out
mov
adcl
sub
shrl
mov
xor
jmp
or
shll
icebp
loop
nop
cmp
mov
sbb
jno
adc
mov
mov
mov
cmp
rclb
xchg
add
stc
sub
hlt
scas
popa
add
mov
pop
adc
dec
int3
push
js
mov
mov
mov
xchg
jo
movsl
pop
call
fcmovnb
or
popf
jne
dec
or
push
mov
add
and
std
xchg
or
out
call
inc
jne
ds
or
sub
or
daa
add
mov
or
ret
xchg
pop
ret
mov
ret
pop
xchg
lret
lock
sub
ret
mov
dec
sbb
inc
fimull
movsl
jae
or
push
mov
loop
ljmp
pop
jmp
sbb
ret
push
mov
fidivrs
aad
out
in
enter
scas
inc
xchg
and
adc
cmp
and
xchg
sbb
stos
push
jne
outsb
adc
push
aaa
xor
test
or
adc
push
mov
sahf
mov
jno
repnz
add
test
loope
sub
sbb
cld
ret
lds
lea
out
test
jge
mov
out
cmp
mov
sbb
push
or
mov
stc
movsb
bound
mov
clc
ja
shll
ret
push
jns
iret
xor
adc
mov
push
fadds
icebp
push
xor
push
xchg
test
adc
pushfw
or
pop
into
out
ret
imul
push
stos
add
fiadds
pusha
lret
cmpsl
pop
push
pop
adc
mov
lret
pusha
jg
icebp
or
scas
stc
enter
dec
sub
cmp
inc
cmpsb
cld
xor
std
pushf
push
add
mov
ljmp
fnsave
shlb
outsl
mov
orl
sbb
jo
push
imul
jp
push
cs
inc
cmp
cmp
mov
ret
aaa
adc
xchg
shrl
and
loopne
sub
push
push
roll
mov
lahf
shl
pop
ret
sbb
nop
out
outsb
mov
jg
test
daa
and
out
stc
xchg
xor
cmp
adc
ja
mov
ss
push
pop
jge
xor
lret
insb
and
adc
mov
shlb
into
dec
or
pop
cld
sub
dec
jnp
mov
je
ljmp
push
dec
dec
out
push
ret
jne
sub
test
xor
int3
stc
js
mov
sarb
jp
mov
int3
cmp
mov
in
aaa
sbb
stos
inc
pop
mov
popf
pusha
loop
imul
lds
fwait
jo
or
dec
mov
hlt
rorb
ficoml
and
rol
and
aad
out
jnp
dec
sub
rclb
mov
push
cli
insl
and
fnstsw
imul
inc
test
cmpsb
jle
fiaddl
notb
add
cmpb
cli
icebp
xchg
in
sahf
cltd
sbb
or
add
ror
jge
adc
ljmp
sti
push
cli
mov
lret
mov
cmpsb
xchg
cmp
sub
xchg
outsl
xor
push
test
pop
jp
mov
dec
xchg
outsb
inc
shrl
sbb
in
dec
adc
and
les
mov
loop
sbb
data16
dec
out
jns
inc
shr
push
jns
fldenv
imul
test
xlat
cmpsl
imul
fcmovnbe
and
jmp
cld
xor
lcall
fdivs
adc
aam
outsb
or
leave
pop
mov
dec
sarl
push
pop
aad
call
lods
push
popa
es
cmc
mov
lahf
ret
iret
and
gs
nop
or
insl
mov
cmp
roll
stc
mov
lahf
and
in
mov
lcall
jle
mov
push
mov
les
iret
sbb
sub
pop
pusha
push
jbe
mov
push
lcall
lds
mov
cld
std
push
addr16
push
sti
lcall
lock
sbb
or
idivl
jbe
dec
in
xorb
jns
adc
test
aam
xor
mov
jl
lahf
lret
ja
aas
mov
sti
or
xchg
in
or
xchg
aas
clc
pop
imul
in
sub
test
or
aad
xchg
pop
sbb
lret
xor
in
inc
call
cwtl
jnp
mov
lcall
shll
add
xor
mov
test
es
les
ret
jns
incl
inc
lret
repz
sbb
mov
cli
mov
in
nop
jbe
out
mov
in
ss
test
cmc
dec
loopne
pop
jle
call
loope
cmp
mov
repnz
or
addl
xchg
roll
lret
cmpsl
pop
mov
setnp
xor
xor
dec
or
test
sbb
mov
xchg
adc
pop
bound
sub
lods
jl
pop
cmpsb
enter
mov
push
push
dec
adc
or
sbb
aaa
xchg
negb
mov
call
arpl
adc
sbb
xchg
cmp
jbe
outsb
movsb
dec
icebp
xchg
cmp
xor
add
push
loopne
lret
test
push
movsl
nop
lcall
into
cmpl
dec
adc
push
xchg
shl
jmp
lret
mov
lret
je
sub
pop
aas
pop
lahf
xchg
or
xchg
jo
pop
sub
in
pop
rcrl
stc
mov
inc
jae
inc
cli
mov
insl
lea
add
nopl
out
or
pop
subb
lds
xor
add
std
push
scas
sbb
aam
sbb
cltd
adc
pop
xor
jecxz
into
cmp
cmp
jmp
jb
or
adc
popf
cs
insl
or
push
sub
sbb
rorl
addr16
rorb
mov
pop
mov
jbe
testl
clc
sub
lods
mov
in
adc
cmc
pop
leave
icebp
mov
adc
pushf
sti
ja
sub
adc
aas
lea
xchg
das
push
addb
jl
pusha
fwait
out
and
xor
repnz
pop
and
xlat
pop
int
mov
fmulp
push
pop
add
sbb
je
inc
dec
clc
mov
adc
add
cwtl
daa
add
jg
mov
cmp
jb
push
dec
sub
or
stos
mov
jp
lock
out
mov
cltd
xor
test
test
dec
add
fnsave
pop
pop
fwait
pop
push
fdiv
xchg
pop
dec
pop
push
or
inc
dec
or
pop
push
dec
addps
mov
pushl
mov
pusha
outsb
inc
lods
adc
gs
xchg
les
pop
movsb
mov
jl
lock
repz
push
jae
fimuls
mov
cmp
jno
push
push
jecxz
and
mov
fsubl
inc
out
pop
or
xchg
mov
rorl
repnz
jnp
xchg
subb
push
aaa
cs
sub
jp
sub
push
mov
nop
pop
mov
iret
lea
or
jge
xor
mov
sub
jg
push
add
mov
iret
imul
mov
nop
push
adc
stos
fnclex
push
mov
jns
mov
push
call
mov
bswap
aaa
xchg
out
jnp
sub
imul
ret
sub
adc
push
in
ficomps
mov
mov
mov
inc
push
sbb
test
or
repz
xor
adc
push
std
xor
jnp
jb
scas
loope
jecxz
imul
in
and
mov
jb
data16
lahf
icebp
fidivrl
xchg
data16
ss
lds
shrb
ds
mov
push
mov
jp
inc
popf
fisubrl
in
std
mov
loope
jp
mov
insb
xchg
std
int
cmp
push
call
jge
pop
push
inc
mov
fsubrl
mov
lret
