leave
ret
call
test
jns
jmp
push
mov
sub
push
push
mov
mov
mov
mov
xor
push
mov
lea
mov
call
cmp
je
push
pushl
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
pushl
push
call
cmp
pop
je
lea
push
xor
inc
add
push
pushl
mov
mov
mov
movl
mov
push
call
pushl
pushl
call
pop
pop
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpb
jne
lea
movb
call
mov
call
xor
pop
ret
push
mov
push
mov
test
je
push
mov
push
lea
call
pushl
mov
pushl
pushl
push
call
pop
pop
pop
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
mov
mov
add
call
xor
ret
push
push
mov
mov
imul
push
lea
lea
cmp
je
mov
mov
call
test
jne
add
jmp
or
pop
pop
pop
ret
mov
sub
sub
cltd
push
pop
idiv
jmp
push
mov
push
mov
cmpl
je
mov
push
lea
push
lea
mov
call
pushl
mov
pushl
mov
pushl
lea
mov
push
push
push
call
cmp
je
mov
xor
call
xor
mov
call
push
mov
call
pop
pop
xor
pop
pop
ret
mov
mov
ret
push
mov
xor
push
mov
mov
mov
cmp
je
mov
push
push
call
mov
sub
pop
add
pop
ret
push
mov
sub
andl
andl
push
lea
push
lea
lea
movl
movl
mov
call
mov
test
jne
pushl
mov
pushl
mov
push
call
test
mov
jne
mov
mov
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
test
jl
mov
test
je
mov
and
cmp
jae
mov
mov
mov
mov
mov
cmp
jl
jg
mov
inc
mov
xor
inc
pop
ret
test
jne
xor
mov
sub
inc
call
test
jne
xor
jmp
xor
jmp
mov
jmp
push
mov
sub
cmpb
jne
push
lea
cmp
push
je
push
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
je
lea
cmp
jne
mov
test
jne
mov
push
mov
call
movl
movl
jmp
mov
test
je
pop
pop
pop
leave
ret
mov
test
jne
mov
push
mov
call
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
test
jne
jmp
mov
test
jne
mov
push
mov
call
movl
add
inc
add
add
imul
push
mov
call
movl
movl
jmp
mov
test
jne
mov
push
mov
call
movl
movl
jmp
mov
test
jne
mov
push
mov
call
movl
movl
push
lea
push
movl
mov
push
call
lea
mov
call
test
js
mov
test
jne
jmp
mov
test
jne
mov
push
mov
call
movl
movl
jmp
mov
push
mov
call
movl
movl
jmp
push
mov
push
mov
add
push
mov
mov
push
lea
mov
mov
cmp
ja
test
jne
call
test
js
lea
push
call
test
je
mov
mov
and
shl
or
mov
xor
pop
pop
leave
ret
push
mov
call
mov
pop
ret
mov
call
pushl
mov
push
call
ret
int3
int3
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
mov
neg
sbb
and
test
jne
mov
mov
mov
pop
pop
ret
mov
push
call
xor
jmp
mov
test
je
lea
jmp
mov
jmp
mov
mov
mov
xor
jmp
mov
movl
jmp
xor
jmp
push
push
mov
mov
xor
cmp
jne
push
call
mov
mov
mov
mov
push
pushl
push
call
lea
cmp
je
mov
mov
call
cmp
je
lea
cmp
pop
je
mov
pushl
mov
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
mov
push
lea
push
movb
call
test
je
andl
cmpl
je
lea
mov
mov
mov
call
test
je
lea
push
call
test
je
mov
mov
pushl
xor
pushl
pushl
push
call
xor
pop
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
push
call
xor
cmp
pop
je
movl
mov
mov
mov
mov
cmp
je
mov
push
push
call
lea
lea
mov
push
push
call
cmp
jbe
xor
mov
mov
movl
mov
mov
cmp
jae
mov
add
mov
cmp
je
lea
cmp
je
mov
lea
push
push
call
cmp
jne
mov
addl
inc
cmp
mov
jb
mov
lea
push
lea
call
pop
mov
test
mov
jne
mov
mov
push
call
mov
pop
mov
pop
xor
pop
call
add
leave
ret
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
cmp
je
lea
push
mov
add
call
testb
je
mov
add
push
call
test
pop
jne
jmp
testb
je
jmp
pushl
call
cmpb
je
jmp
mov
test
je
mov
andl
cmpb
jne
mov
push
push
call
ret
movzbl
mov
xor
jmp
push
mov
sub
push
mov
andb
call
test
js
mov
test
je
push
push
xor
push
mov
lea
mov
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
mov
lea
push
push
mov
call
test
jne
cmpl
jne
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
pushl
mov
lea
mov
call
mov
cmp
jne
mov
push
lea
call
mov
lea
push
push
call
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
fld1
movl
sub
push
xor
mov
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
fstps
orl
orl
orl
xor
mov
call
fld1
lea
fstps
push
push
mov
mov
mov
mov
call
mov
pop
add
ret
mov
shl
mov
xor
test
je
push
push
mov
mov
push
lea
cmp
jae
mov
mov
cmp
je
add
cmp
jb
or
cmp
jg
mov
test
je
cmp
jne
pop
pop
pop
ret
sub
sar
jmp
xor
inc
jmp
push
mov
sub
mov
push
push
xor
cmp
push
mov
mov
je
pushl
lea
push
mov
add
call
pushl
lea
call
mov
neg
sbb
and
add
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
call
cmp
jne
mov
mov
lea
push
pushl
push
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
pushl
mov
inc
add
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
call
cmp
jne
mov
mov
lea
push
pushl
push
call
cmp
jne
lea
call
lea
call
incl
mov
cmp
jb
lea
call
jmp
lea
call
lea
call
jmp
push
mov
push
mov
mov
test
push
je
mov
test
je
andl
push
lea
push
mov
mov
dec
sub
test
je
mov
cmp
jae
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
mov
pop
pop
pop
leave
ret
xor
jmp
xor
jmp
roll
xor
jmp
push
mov
sub
andl
push
push
mov
push
pushl
mov
lea
push
call
test
jne
pushl
lea
push
call
test
jne
mov
lea
call
cmpl
jne
andl
cmpl
jne
mov
lea
push
mov
mov
call
mov
test
jbe
andl
mov
mov
cmp
je
incl
add
cmp
jb
mov
lea
push
mov
call
mov
test
ja
mov
lea
push
mov
call
mov
test
ja
mov
mov
call
cmp
je
mov
mov
call
cmp
je
mov
lea
push
mov
call
cmpl
ja
mov
lea
push
mov
call
cmpl
ja
mov
lea
push
mov
call
mov
test
ja
mov
lea
push
mov
call
mov
test
ja
mov
lea
push
mov
call
mov
test
jbe
andl
mov
mov
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
mov
lea
push
mov
call
cmpl
ja
pushl
mov
pushl
push
pushl
call
mov
jmp
mov
imul
add
push
pushl
call
test
mov
jne
testl
jne
mov
cmpl
jne
pushl
call
test
je
mov
xor
inc
lea
call
pop
mov
pop
pop
leave
ret
mov
imul
add
push
pushl
call
test
mov
je
jmp
push
mov
sub
push
xor
cmp
jne
call
cmp
mov
je
push
push
push
push
pop
push
pop
mov
mov
call
test
pop
je
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
test
aam
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
call
test
je
inc
mov
mov
test
jne
xor
pop
pop
pop
leave
ret
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
sub
lea
mov
mov
xor
mov
movl
movl
mov
mov
mov
mov
add
sar
mov
lea
push
push
mov
call
pop
pop
mov
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
push
mov
xor
cmp
mov
mov
je
push
xor
mov
mov
inc
test
mov
jne
test
mov
mov
jne
lea
push
push
push
mov
call
add
cmp
je
pushl
lea
push
mov
call
mov
mov
lea
push
push
push
call
test
js
push
push
push
push
push
pushl
pushl
pushl
pushl
call
add
mov
movb
testb
jne
testb
jne
cmp
mov
mov
mov
je
cmp
je
mov
mov
mov
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
add
push
call
xor
pop
pop
ret
push
mov
mov
push
mov
and
or
jne
mov
mov
call
test
jne
pop
mov
pop
ret
andl
push
movl
movl
call
mov
ret
push
mov
pushl
add
call
xor
pop
ret
push
mov
mov
push
mov
push
pushl
pushl
push
call
test
mov
je
push
mov
add
call
movl
mov
mov
pop
mov
pop
pop
pop
ret
mov
call
mov
mov
mov
mov
lea
push
pushl
call
andl
movl
ret
mov
mov
add
mov
xor
ret
push
mov
push
mov
push
mov
lea
push
push
call
mov
push
lea
call
test
pop
je
mov
mov
mov
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
lea
cmpw
je
xor
test
jne
add
add
jmp
mov
jmp
lea
push
call
add
test
je
push
lea
push
mov
lea
push
push
call
movl
add
movl
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
pop
pop
xor
pop
ret
push
mov
mov
test
je
push
mov
test
je
push
mov
test
je
mov
push
xor
push
add
call
cmp
je
mov
cmp
je
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
jmp
movzbl
cmp
jne
mov
mov
mov
push
call
xor
pop
pop
pop
pop
ret
xor
jmp
push
mov
cmpl
je
push
mov
test
je
mov
mov
push
add
call
cmpl
jne
push
pushl
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
jmp
push
mov
sub
mov
mov
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
pushl
mov
pushl
pushl
pushl
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
mov
andl
push
push
pop
mov
test
je
mov
cmp
jge
mov
mov
test
mov
je
mov
push
call
mov
pushl
movzbl
pushl
mov
push
pushl
pushl
push
call
lea
call
incl
add
jmp
pushl
mov
call
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
lea
mov
call
pushl
mov
push
call
mov
pop
pop
leave
ret
mov
test
je
call
andl
mov
test
je
call
andl
mov
test
je
call
andl
ret
push
mov
call
mov
pop
ret
push
xor
cmp
jbe
mov
lea
cmpl
jne
cmpl
je
pushl
push
call
inc
cmp
jb
mov
call
mov
push
push
call
pop
ret
push
push
xor
mov
push
mov
call
test
je
mov
mov
push
mov
call
test
je
mov
mov
call
test
jbe
xor
inc
pop
pop
ret
inc
jmp
mov
push
pushl
mov
mov
call
pop
ret
push
mov
sub
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
call
lea
call
leave
ret
push
mov
sub
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
call
lea
call
leave
ret
push
lea
sub
mov
xor
mov
push
xor
cmp
jne
push
pushl
mov
lea
mov
push
call
test
jne
movb
pop
mov
xor
pop
call
add
leave
ret
push
mov
sub
mov
andl
andl
push
lea
lea
movl
mov
call
mov
andl
lea
mov
call
add
leave
ret
push
push
mov
incb
mov
push
call
push
mov
call
pushl
decb
mov
call
pop
pop
ret
push
mov
pushl
mov
call
andl
xor
inc
movl
mov
andl
mov
test
lea
je
lea
orl
push
push
mov
lea
mov
movl
call
movl
movl
movl
lea
movl
movl
movl
movl
andl
mov
mov
call
test
je
lea
push
lea
call
pop
mov
pop
pop
ret
mov
push
pushl
mov
movb
push
add
push
call
xor
pop
ret
mov
cmpl
je
cmpl
je
xor
ret
call
jmp
push
mov
and
sub
mov
xor
mov
push
push
mov
push
mov
testb
je
xor
inc
xor
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
and
cmp
je
cmp
jl
lea
xor
call
mov
cmp
jne
andl
cmp
jne
mov
cmp
jg
testb
jne
testb
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
push
mov
call
xor
cmp
pop
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
pop
pop
ret
push
mov
sub
cmpl
push
mov
push
mov
jne
cmp
je
cmp
mov
je
pushl
mov
call
test
pop
jne
pushl
mov
pushl
push
pushl
call
jmp
mov
lea
call
mov
cmpl
mov
jne
push
call
test
je
mov
testb
jne
testb
jne
xor
inc
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
jne
cmpl
je
mov
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
mov
push
pushl
mov
mov
rolb
add
add
pushl
mov
mov
int
add
add
push
push
pop
cmp
jge
mov
mov
mov
push
movw
mov
call
push
movl
call
pop
pop
push
mov
call
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
mov
push
lea
mov
push
push
movl
call
mov
push
lea
call
mov
mov
push
call
test
je
testb
je
push
call
pop
mov
pop
pop
leave
ret
push
mov
mov
sub
cmpl
push
mov
jge
mov
call
test
je
mov
pushl
andw
mov
lea
mov
call
test
push
js
mov
push
call
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
cmpl
push
push
push
mov
jge
inc
add
call
test
je
inc
add
jne
inc
add
call
test
call
test
mov
call
test
js
inc
add
sbb
incl
lea
push
pushl
add
inc
mov
call
mov
pop
pop
mov
lea
push
push
call
mov
test
jle
mov
lea
push
pushl
add
add
xlat
pop
pop
mov
test
jne
inc
add
adc
push
call
test
mov
js
inc
add
mov
call
mov
add
add
mov
mov
call
mov
pop
push
pop
cmp
jge
inc
add
mov
push
mov
movl
call
mov
cmp
jge
inc
add
adc
pop
push
lea
push
pushl
add
add
test
je
inc
add
sbb
decl
test
fxch
inc
add
push
add
decl
xor
pop
call
leave
ret
orw
movl
fiaddl
nop
or
add
or
add
or
add
pop
or
sbb
pop
and
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
adc
sbb
mov
pop
or
dec
push
mov
mov
mov
mov
mov
mov
mov
cmpl
pop
jge
mov
mov
push
call
orw
orw
mov
ret
push
mov
sub
push
xor
cmp
je
cmp
push
mov
jne
mov
mov
lea
push
mov
call
mov
test
jne
andl
mov
cmpl
jge
mov
xor
xor
cmp
setne
add
cmp
mov
jne
lea
call
mov
pop
pop
leave
ret
push
mov
mov
cmpb
push
push
je
cmpl
ja
push
call
test
pop
je
mov
call
mov
test
je
mov
push
call
pushl
pushl
pushl
pushl
pushl
call
test
js
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
mov
push
push
call
test
je
push
mov
call
pop
test
je
mov
andl
mov
mov
or
ret
xor
jmp
push
mov
push
movl
movl
andl
push
pushl
mov
lea
andl
xor
mov
inc
push
mov
mov
call
mov
andl
test
mov
mov
mov
je
mov
push
call
mov
test
mov
mov
je
mov
push
call
mov
and
shl
xor
mov
mov
cmp
mov
mov
mov
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
andl
mov
mov
mov
mov
push
call
pop
mov
pop
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
push
lea
sub
mov
xor
mov
push
push
mov
andw
movzwl
xor
test
push
jne
lea
push
call
cmp
pop
jne
testb
jne
mov
call
test
je
andw
mov
pop
pop
xor
pop
call
add
leave
ret
lea
lea
mov
mov
lea
xorb
movl
movl
mov
call
push
push
lea
mov
call
pushl
pushl
call
pop
pop
jmp
lea
lea
pop
leave
inc
add
xchg
clc
add
add
push
pushl
mov
call
push
push
mov
call
jmp
mov
movl
xor
ret
xor
ret
mov
ret
mov
test
push
push
je
mov
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
mov
push
call
cmpl
jne
xor
ret
mov
ret
push
mov
push
mov
test
mov
je
mov
push
call
cmpl
je
add
andl
lea
mov
call
add
leave
ret
push
mov
sub
push
push
push
mov
add
cmpl
mov
je
mov
andl
mov
lea
push
push
call
test
jne
mov
test
je
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
mov
mov
movl
movl
add
add
inc
or
or
xchg
test
add
test
mov
je
mov
push
call
cmpl
je
lea
call
mov
mov
push
mov
mov
mov
call
mov
push
push
pushl
pushl
pushl
call
pop
pop
push
pushl
pushl
call
test
lea
jne
call
lea
call
jmp
mov
push
pushl
mov
mov
call
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
int3
int3
int3
test
jbe
lea
cmp
jae
test
jle
add
push
mov
lea
mov
sub
add
cmp
pop
jb
cmp
ja
cmp
je
sub
cmp
jbe
or
ret
sub
sar
ret
mov
jmp
push
push
call
mov
test
pop
je
movzbl
push
movzbl
push
movzbl
push
movzbl
push
movzbl
push
movzbl
push
movzbl
push
movzbl
push
movzwl
push
movzwl
push
pushl
push
push
push
call
add
mov
pop
ret
push
mov
test
je
push
mov
cmpl
jne
push
lea
call
test
mov
pop
je
pushl
call
mov
neg
sbb
pop
and
add
pop
pop
ret
push
mov
sub
push
push
pushl
call
mov
lea
cmp
pop
ja
push
call
mov
test
pop
je
push
pushl
push
call
add
movb
pop
mov
pop
leave
ret
push
push
mov
push
mov
push
xor
xor
xor
pop
inc
mov
mul
seto
mov
mov
mov
mov
mov
neg
or
push
call
mov
or
mul
seto
movl
neg
or
push
call
mov
mov
pop
pop
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
movl
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
filds
popf
adc
and
mov
mov
pop
mov
pop
mov
mov
pop
ret
push
mov
push
mov
push
push
mov
mov
cmpl
jge
mov
andl
testb
je
xor
mov
add
mov
cmpl
ja
test
jne
movzwl
test
je
movzwl
movzwl
lea
movzwl
cmp
jge
pushl
pushl
push
call
test
jne
push
call
test
pop
je
mov
call
mov
test
je
lea
mov
push
call
movzwl
push
mov
mov
call
test
js
mov
mov
pop
pop
pop
pop
ret
mov
call
test
mov
je
cmpl
jge
mov
push
add
xor
push
inc
call
decw
movzwl
test
jne
mov
call
test
jne
jmp
push
mov
sub
mov
xor
mov
andl
push
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
xor
mov
xor
pop
call
leave
ret
push
lea
lea
call
mov
lea
push
push
call
push
push
pop
lea
call
pushl
mov
pushl
call
pop
pop
mov
jmp
mov
push
pushl
mov
mov
call
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
test
push
mov
je
andl
push
mov
push
lea
call
mov
lea
push
push
call
test
mov
js
mov
mov
mov
add
mov
mov
mov
mov
shr
push
push
lea
mov
call
pop
pop
push
pushl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
mov
add
mov
mov
shr
and
push
push
lea
call
pop
pop
push
pushl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
xor
cmp
je
mov
mov
lea
push
push
call
test
jne
cmp
jne
mov
mov
lea
mov
push
lea
push
lea
mov
call
mov
mov
push
push
push
call
test
mov
lea
jne
call
mov
call
cmp
movzbw
movzwl
sete
dec
and
add
movswl
push
movsbl
push
and
push
lea
push
push
call
mov
mov
mov
add
add
lea
lea
mov
call
push
pushl
mov
call
pushl
jmp
mov
mov
jne
test
pop
pop
jne
mov
test
mov
mov
je
mov
push
call
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
test
je
push
mov
test
je
mov
mov
mov
mov
cmp
je
movsbl
movsbl
sub
cmp
je
andl
xor
pop
pop
ret
push
push
call
pop
pop
neg
sbb
inc
mov
jmp
push
mov
decl
mov
jne
movl
call
push
call
pop
xor
pop
ret
push
mov
cmpl
je
push
lea
mov
call
test
js
pop
xor
pop
ret
push
lea
sub
mov
xor
mov
andl
push
push
lea
mov
mov
mov
push
push
push
call
test
js
cmpl
jne
xor
mov
pop
xor
pop
call
add
leave
ret
push
mov
sub
mov
push
push
xor
push
mov
call
inc
add
jne
mov
mov
lea
push
push
call
test
jne
mov
cmp
mov
lea
jge
mov
push
lea
mov
call
pushl
lea
pushl
push
call
add
test
jne
mov
mov
mov
mov
push
pushl
push
call
mov
mov
mov
lea
push
push
mov
call
mov
test
jne
cmpl
je
pushl
mov
pushl
pushl
push
pushl
push
call
test
jne
mov
add
xor
jmp
cmp
je
mov
push
push
pushl
push
call
lea
call
mov
pop
pop
pop
leave
ret
lea
jmp
xor
jmp
mov
jmp
push
mov
sub
push
mov
push
mov
test
push
je
mov
mov
cmp
jne
test
je
push
pop
mov
test
je
mov
test
jne
cmpl
je
cmpl
jne
cmpl
jge
movl
mov
mov
mov
lea
push
pushl
mov
mov
lea
push
mov
mov
mov
push
lea
push
mov
call
test
js
mov
mov
call
test
jne
cmp
jne
mov
cmpl
fadds
inc
sbb
testb
mov
je
mov
push
call
mov
push
push
push
mov
call
andl
mov
mov
pop
pop
pop
leave
ret
andl
jmp
push
mov
push
push
push
push
mov
mov
call
mov
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
jne
mov
cmp
jne
push
call
mov
cmp
movb
je
mov
push
push
call
mov
cmp
je
mov
cmp
jne
mov
call
movb
mov
cmp
movb
pop
je
mov
push
call
pop
pop
leave
ret
push
mov
sub
push
mov
test
je
push
mov
andl
mov
push
mov
call
lea
mov
mov
call
cmpl
je
mov
test
je
mov
mov
mov
mov
test
je
mov
mov
push
mov
mov
mov
call
cmp
mov
jne
test
jne
mov
cmp
je
mov
mov
call
test
jbe
pushl
mov
mov
call
test
je
cmpl
jne
push
mov
call
lea
mov
mov
call
mov
test
je
pushl
pushl
pushl
push
pushl
call
add
test
je
mov
mov
push
mov
call
test
mov
jne
mov
mov
call
test
jbe
mov
test
je
mov
dec
push
mov
call
test
je
cmpl
je
push
mov
call
lea
mov
mov
call
pushl
mov
pushl
pushl
pushl
pushl
call
add
test
je
cmpl
je
cmpl
je
mov
lea
mov
call
mov
xor
test
sete
test
mov
je
push
call
xor
pop
pop
pop
leave
ret
lea
mov
mov
call
jmp
mov
lea
mov
call
jmp
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
fldl
push
mov
push
mov
mov
mov
cmp
push
mov
mov
mov
mov
mov
je
add
mov
lea
push
pushl
push
push
call
mov
test
je
mov
pop
pop
xor
pop
call
add
leave
ret
push
lea
sub
mov
xor
mov
daa
movl
dec
pusha
push
push
mov
call
test
je
push
push
mov
mov
mov
push
call
pushl
mov
pushl
lea
push
push
movl
movl
movl
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
lea
push
push
call
test
jne
cmpl
mov
push
loopne
add
add
dec
adc
lea
push
mov
movl
movl
mov
movb
mov
push
call
test
jne
mov
lea
push
push
push
call
test
jne
cmpl
je
push
call
test
pop
je
mov
lds
pushl
lea
pushl
pushl
push
mov
dec
mov
pop
mov
test
je
mov
add
push
push
push
call
add
jne
mov
mov
add
fadds
call
add
jne
mov
mov
push
call
pushl
pushl
call
pop
pop
xor
lea
call
mov
pop
pop
mov
cmpsb
int
add
add
or
push
mov
mov
test
mov
jne
test
jne
mov
call
testb
je
push
call
pop
mov
pop
ret
cmpl
jne
push
push
push
pop
mov
mov
call
test
pop
pop
je
xor
inc
ret
jmp
mov
add
push
pushl
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
lea
xor
push
movl
mov
movl
call
push
lea
mov
lea
mov
pop
mov
lea
mov
mov
mov
mov
js
decl
decl
call
test
call
inc
mov
add
lea
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
add
test
js
cmp
mov
je
mov
lea
call
mov
cmp
je
lea
push
push
push
push
push
call
test
jne
mov
mov
lea
push
push
call
mov
test
mov
jne
pushl
mov
pushl
mov
call
pushl
pushl
mov
pushl
pushl
call
pushl
pushl
call
add
mov
pop
mov
pop
xor
pop
call
add
leave
ret
push
mov
sub
push
mov
push
mov
mov
andl
or
call
test
je
mov
push
push
call
test
pop
pop
je
mov
push
mov
add
push
push
call
test
pop
pop
je
push
push
mov
movb
call
test
pop
pop
mov
je
mov
movl
movb
cmp
je
push
push
call
test
pop
pop
mov
jne
cmp
je
cmp
je
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
mov
sub
cmp
jbe
inc
cmp
jne
mov
test
jne
mov
movb
mov
cmpl
je
mov
movb
or
mov
call
pushl
mov
mov
call
mov
mov
pop
or
call
pushl
mov
call
mov
pop
mov
push
inc
mov
call
xor
pop
pop
pop
leave
ret
push
mov
and
push
mov
mov
mov
test
push
je
mov
test
je
mov
push
pushl
push
call
test
jne
mov
mov
push
mov
call
test
je
mov
mov
test
je
test
jne
jmp
pop
pop
mov
pop
ret
mov
jmp
push
pushl
lea
movl
xor
mov
push
movl
mov
movl
call
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
test
push
movl
roll
call
pop
mov
lea
mov
push
call
pop
mov
pop
pop
jmp
push
mov
push
push
mov
push
mov
mov
cmp
push
je
cmp
je
cmp
je
mov
mov
lea
push
pushl
mov
push
push
call
add
adc
cmp
je
pop
pop
pop
pop
pop
ret
push
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
push
push
push
push
mov
mov
push
pushl
mov
mov
push
lea
mov
mov
call
cmp
je
add
push
pushl
pushl
pushl
push
push
call
add
test
je
lea
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
push
mov
push
push
mov
cmpl
push
mov
push
jge
mov
mov
push
call
xor
cmp
pop
jne
mov
lea
call
mov
push
mov
call
mov
pop
call
cmp
jne
cmpl
je
xor
pop
pop
leave
ret
orw
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
xor
cmp
je
cmp
jne
mov
mov
push
call
mov
and
cmp
mov
mov
mov
jne
pushl
push
call
test
jne
mov
cmp
jne
mov
mov
push
push
push
lea
push
push
call
test
mov
jne
mov
pop
pop
pop
pop
ret
mov
cmpl
push
jge
mov
push
call
mov
push
pushl
push
call
mov
test
js
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
push
push
mov
mov
mov
add
rcrb
test
add
add
fadds
push
call
test
pop
pop
jne
movl
xor
push
mov
lea
mov
call
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
movb
mov
push
call
test
js
lea
push
pushl
lea
pushl
add
mov
push
mov
movl
mov
movl
mov
call
mov
push
pushl
mov
call
test
jne
push
lea
mov
call
lea
push
call
test
pop
jne
mov
mov
mov
and
neg
lea
push
sbb
not
and
push
push
call
test
jne
mov
pushl
lea
movsl
movsl
movsl
movsl
call
pop
push
pop
cmp
je
mov
push
pushl
call
test
je
cmpl
jne
mov
mov
lea
lea
movsl
movsl
movsl
push
pushl
add
movsl
call
neg
sbb
inc
mov
pop
pop
lea
call
pushl
pushl
call
pushl
pushl
call
add
xor
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
andl
andl
lea
push
pushl
mov
lea
mov
mov
mov
push
mov
push
mov
call
mov
push
pushl
mov
call
test
jne
add
xor
push
pushl
call
cmp
je
cmp
jne
push
mov
call
cmp
pop
je
mov
mov
movl
mov
mov
movl
mov
lea
movsl
movsl
movsl
movsl
mov
lea
add
push
call
mov
andl
pop
pushl
pushl
call
jmp
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
movl
jmp
lea
call
jmp
push
mov
sub
push
xor
cmp
push
je
lea
movl
mov
movl
call
lea
push
lea
push
pushl
call
mov
test
js
push
mov
lea
push
push
call
fldl
mov
fstps
mov
shr
mov
mov
shr
and
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
fildl
push
fmuls
fstps
flds
fstps
call
flds
pop
push
fstps
mov
push
push
lea
push
mov
mov
call
lea
call
mov
cmp
je
mov
push
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
pop
leave
ret
push
call
pop
mov
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
mov
jne
push
pushl
pushl
push
call
cmp
mov
jne
push
mov
call
cmp
ja
xor
pop
pop
pop
leave
ret
pushl
push
push
call
jmp
mov
mov
mov
pushl
mov
mov
call
push
pushl
pushl
pushl
push
call
add
cmp
jne
incl
mov
cmp
jae
jmp
test
je
mov
cmp
je
dec
mov
inc
cmp
jne
push
mov
call
mov
cmpl
pop
je
decl
andl
pushl
call
mov
test
pop
jne
push
call
pop
ret
mov
xor
cmpl
je
decl
mov
mov
cmpl
je
decl
mov
mov
cmpl
jne
pushl
call
pushl
call
pushl
call
push
call
add
ret
push
mov
push
push
push
mov
cmp
push
je
lea
mov
test
jne
mov
movl
test
jne
push
lea
call
push
push
push
lea
push
mov
mov
call
cmpl
pop
pop
jne
leave
ret
push
mov
mov
test
push
push
push
je
lea
mov
push
push
lea
call
push
mov
xor
push
push
call
mov
cmp
jbe
movl
mov
call
test
jne
mov
mov
pushl
mov
push
call
mov
addl
inc
cmp
jb
pop
pop
xor
pop
pop
ret
xor
jmp
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
push
call
test
je
movl
mov
mov
lea
cmp
je
jmp
lea
mov
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
movzwl
cmp
movzwl
je
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jne
cmp
je
mov
sub
sar
cmp
mov
mov
movl
je
mov
jmp
lea
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmpw
jne
add
cmp
je
jmp
lea
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movzwl
cmp
jne
add
cmp
je
mov
lea
cmp
je
add
cmp
jne
jmp
cmp
je
mov
mov
mov
mov
lea
lea
movl
call
test
jne
add
cmp
jne
pop
pop
pop
xor
pop
add
ret
call
test
je
cmp
je
mov
mov
lea
movzwl
cmp
je
cmp
je
add
cmp
jne
mov
mov
sub
sar
push
push
push
push
xor
call
mov
push
push
call
add
pop
pop
pop
mov
pop
add
ret
push
mov
sub
mov
xor
mov
mov
push
lea
mov
mov
lea
mov
call
cmp
jne
xor
test
jne
xor
mov
xor
pop
call
leave
ret
push
push
mov
mov
push
cltd
push
pop
idiv
mov
and
imul
mov
dec
jns
mov
pop
pop
pop
ret
mov
shl
add
mov
shl
add
cmp
je
dec
sub
test
jl
jmp
mov
mov
shl
add
movsl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
sub
push
xor
cmp
je
mov
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
pop
lea
mov
mov
mov
call
cmp
jne
lea
push
pushl
lea
call
test
jns
xor
pop
pop
pop
leave
ret
lea
push
lea
call
cmp
je
mov
add
push
mov
call
push
mov
sub
push
push
push
push
push
push
call
icebp
push
add
add
push
roll
cmp
add
add
add
fiaddl
insb
mov
push
add
out
stc
cmpsb
pop
shl
enter
in
lcall
inc
in
push
lea
push
push
push
push
push
call
push
fadds
add
add
test
add
pop
add
add
cli
add
add
add
sub
pop
push
push
push
push
call
push
mov
flds
push
ja
xchg
jmp
add
pop
stos
jo
fildl
xlat
fnsave
arpl
add
add
add
pop
add
add
jp
mov
add
in
hlt
pop
push
push
lea
push
push
lea
push
call
add
push
into
pop
shll
pop
mov
loop
add
in
arpl
sahf
add
cmpsl
fstps
add
cld
out
adcb
fwait
popl
add
pop
cld
in
lods
fiadds
add
incb
add
jle
xchg
gs
add
into
fildl
add
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
loopne
add
pop
jae
add
mov
add
repnz
jle
mov
add
mov
add
push
stc
add
add
xlat
push
add
mov
add
add
popa
hlt
popf
add
add
roll
jecxz
data16
in
in
lcall
mov
add
push
push
push
push
push
push
push
lea
push
call
xchg
lock
add
iret
add
add
arpl
add
call
push
add
add
pop
pushf
push
lods
mov
mov
mov
ja
jno
add
xchg
lret
fdivrs
add
test
add
push
in
loopne
lcall
add
xchg
add
aas
mul
jbe
sub
add
in
push
jl
add
leave
jo
aad
xchg
jbe
data16
push
lret
add
add
mov
add
add
sub
pop
jmp
ret
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
cld
add
add
iret
stc
push
ret
pop
add
add
add
add
jns
xchg
fwait
out
jo
lret
xchg
movsb
push
add
add
lcall
inc
hlt
push
push
push
push
push
push
lea
push
push
call
add
add
popf
fcomps
js
add
lock
jp
add
arpl
sahf
ja
test
add
aam
in
aad
xchg
push
in
loopne
lcall
pop
hlt
push
push
push
lea
push
call
add
jns
test
mov
add
push
faddl
add
scas
add
add
add
hlt
aam
pop
add
add
add
stc
loop
mov
hlt
add
add
int3
push
push
add
mov
lcall
in
lock
lcall
pop
in
push
lea
push
push
push
push
push
call
add
add
pop
add
popa
add
add
add
add
fnsave
xchg
add
jnp
aam
lea
pop
rolb
add
jp
repnz
repnz
mov
push
mov
push
add
add
int3
add
add
add
lcall
ret
add
add
push
push
push
lea
push
push
push
push
lea
push
push
call
int
cmpsb
leave
add
pop
repnz
scas
add
test
push
mov
jmp
push
addl
lods
mov
arpl
in
incb
push
lods
add
mov
pushf
pop
jge
icebp
icebp
movb
push
aad
mov
lcall
ret
out
add
push
push
push
push
push
push
push
call
sarb
mov
addr16
xchg
loope
add
add
lds
add
lea
pop
add
add
mov
mov
enter
add
sub
pop
mov
push
push
lea
push
push
push
push
call
add
jl
iret
repnz
add
out
jb
orl
test
add
mov
add
sarb
mov
mov
in
popa
stos
xchg
add
fbstp
add
pop
popl
mov
add
pop
fildl
sub
les
sbb
push
push
push
push
push
push
call
xchg
mov
add
out
cli
cmpsl
mov
fsubrs
jle
je
push
cmpsb
add
mov
add
scas
popf
movb
addr16
xchg
fildl
mov
mov
ror
mov
add
addr16
mov
cmpsl
push
mov
add
add
movsl
sub
pop
add
push
push
sub
not
push
sub
add
rol
sub
rol
rol
lea
pop
add
pop
push
push
push
call
jle
add
insb
lods
lds
add
cmc
test
jle
mov
test
pushf
add
arpl
repnz
rolb
shl
add
pop
fld
ljmp
rcr
add
sti
jp
js
add
add
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
mov
imulb
jecxz
jle
add
add
push
add
add
fists
nop
aam
add
add
add
ja
mov
subb
xchg
stc
in
loop
add
xchg
add
nop
fildll
add
push
add
call
push
lea
push
push
push
push
push
call
leave
imul
add
stos
add
lahf
add
decb
add
add
jno
add
mov
sub
enter
add
add
jp
imul
mov
in
out
cmpsb
gs
add
add
movb
add
popa
mov
add
add
sub
pop
mov
movl
push
push
push
push
push
call
add
push
add
add
jl
push
pop
add
add
mov
pop
scas
add
adc
add
mov
fstps
add
mov
in
in
lcall
inc
call
cltd
xlat
ljmp
jmp
pushf
jo
mov
cli
push
push
lea
push
call
mov
push
stos
add
imul
imul
add
mov
add
rcll
loope
push
add
jns
int3
add
rolb
add
mov
bound
test
jl
stos
add
fdiv
in
add
out
in
rcrl
stos
add
mov
add
loope
add
pop
push
pushl
push
push
push
call
push
cli
scas
arpl
pop
lods
add
add
add
in
mov
fwait
pusha
fiadds
icebp
loopne
add
add
or
jge
add
not
add
cli
push
cmc
push
data16
add
add
mov
loope
int
pusha
add
jp
add
add
lcall
jne
push
push
push
push
push
call
data16
add
add
mov
jmp
add
clc
mov
loop
fstpl
int
add
cmpsb
add
add
jge
in
pop
call
push
push
push
push
push
lea
push
call
mov
add
add
add
add
ret
mov
add
data16
jl
jl
add
pop
add
mov
pushf
sub
pop
pushl
push
push
call
add
jb
leave
add
jnp
add
add
data16
mov
iret
add
add
subb
xchg
add
add
pusha
pop
loop
xchg
pop
add
popl
mov
add
nop
jl
mov
add
shrb
pusha
scas
add
add
add
lcall
jne
push
push
push
push
push
push
push
push
call
mov
loopne
push
jp
fwait
add
add
xlat
add
cli
subb
xchg
test
iret
push
push
lret
add
add
add
movsl
pop
mov
sub
pop
call
push
push
push
xor
add
lea
xor
sub
sub
sub
pop
sub
shr
xor
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
fidivrl
fadds
enter
xchg
lock
mov
add
mov
xchg
add
lea
aam
fs
add
lret
outsl
int
add
add
add
push
xchg
add
leave
add
add
loopne
add
gs
loop
sub
pop
pushl
call
push
lea
push
push
call
xchg
jo
out
call
cmpl
mov
add
add
mov
add
add
add
cmc
call
hlt
lcall
inc
push
push
xor
rol
shr
push
xor
add
inc
xor
sub
shr
pop
shl
pop
push
push
call
rcll
add
push
xchg
add
xchg
rolb
test
addb
in
roll
add
ret
test
jns
ret
add
fwait
add
jp
imul
pop
andl
sahf
subl
add
add
sub
pop
push
push
push
push
lea
push
call
shll
incb
mov
adcb
add
jns
add
cltd
pop
lock
pop
add
leave
mov
mov
add
add
add
fdiv
cli
shll
in
lock
lcall
add
push
push
call
rolb
add
stos
add
add
shlb
push
add
mov
enter
sbb
movsl
xchg
add
add
add
add
int
add
sahf
out
mov
add
push
add
lock
mov
push
cltd
lock
add
lret
out
in
hlt
lcall
rclb
jno
add
add
lds
add
push
int
push
lea
add
jp
sahf
imul
add
cmpsb
jecxz
jl
push
test
pop
pop
bound
add
clc
add
add
in
clc
lcall
clc
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
push
stc
add
add
add
jge
scas
add
ja
into
pop
mov
xchg
divl
cli
js
add
ret
mov
rcrb
pusha
mov
jne
add
add
add
add
enter
js
mov
xchg
stos
sub
pop
push
mov
push
push
push
push
call
movsl
enter
add
pop
addb
add
xchg
add
xchg
mov
mov
add
xchg
push
xchg
xchg
add
mov
add
push
xchg
popa
jne
fwait
in
stc
mov
aad
add
mov
lcall
pop
in
push
lea
push
lea
push
push
push
lea
push
call
push
cld
roll
add
out
movsb
add
add
add
xchg
add
shrb
mov
add
out
ja
sub
pop
add
add
push
lea
push
push
push
push
lea
push
push
call
std
flds
les
pop
add
mov
add
in
add
pusha
mov
add
fnsave
std
cltd
loopne
push
std
add
add
lret
add
xlat
add
ret
add
scas
shrl
insb
repnz
add
movb
add
out
mov
add
sub
pop
mov
push
push
push
push
call
add
add
add
add
xchg
fucomip
int
push
pusha
xchg
in
fildll
add
lods
jb
mov
add
std
icebp
adcl
clc
sub
pop
xor
push
push
lea
push
push
push
push
push
call
lock
ret
mov
add
pop
push
lods
enter
add
rorl
call
popa
mov
mov
mov
mov
add
leave
sub
pop
add
push
push
push
push
call
roll
mov
fists
fcmove
push
lock
push
add
jecxz
push
add
add
add
mov
add
mov
leave
mov
add
add
cwtl
sub
pop
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
push
pop
pop
add
cld
add
push
fcmovne
mov
add
sarb
add
pop
mov
xchg
jnp
icebp
cmpsl
add
mov
filds
mov
mov
pushfw
rolb
rcll
push
aam
test
in
add
jmp
divb
bound
add
add
pop
add
add
mov
xor
push
push
push
push
push
lea
push
call
imul
add
popa
mov
mov
popa
movb
js
push
add
xchg
add
out
cmc
add
sti
test
pop
add
add
lret
add
stc
add
pop
push
insb
stos
into
in
add
pop
rclb
clc
xchg
lcall
add
push
negl
lcall
lock
push
lea
push
push
push
lea
push
push
call
lods
lcall
addb
add
add
mov
pop
xchg
imul
add
push
mov
pop
jle
add
addl
push
add
int3
out
xchg
out
scas
movsl
add
add
mov
xchg
adcl
fiaddl
sub
pop
mov
xor
push
push
push
push
push
push
call
add
pop
lock
add
lcall
mov
push
loopne
add
int
mov
shl
add
add
jns
add
add
pop
add
repnz
data16
jmp
stc
sub
pop
push
push
push
push
push
push
push
push
push
call
fisubl
ret
std
xchg
add
push
mov
add
pop
negl
push
xchg
jno
jne
add
mov
mov
add
add
jmp
add
sbbb
loopne
lcall
inc
or
int3
iret
iret
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
hlt
add
fwait
rolb
add
mov
xchg
add
add
sarb
int
add
add
push
fildl
add
add
lcall
add
push
push
lea
push
push
push
call
jl
add
fwait
mov
fs
add
xlat
data16
lret
add
add
loopne
ret
mov
mov
gs
jo
in
push
mov
add
add
add
lcall
les
push
push
push
lea
push
push
push
push
push
push
call
std
xchg
add
jle
push
aad
in
add
add
add
aad
mov
mov
mov
add
movsl
add
mov
mov
add
testl
add
mov
add
mov
in
fdivr
lcall
enter
cmp
push
push
push
lea
push
push
push
call
out
pusha
push
roll
add
xchg
add
add
lea
cmc
pop
lods
mov
mov
int3
nop
xchg
mov
pushf
pop
push
add
lret
jo
add
pop
push
ficoms
add
xchg
add
add
add
cld
loop
mov
add
xchg
xchg
add
xchg
mov
sub
pop
pop
rep
push
push
push
push
push
push
lea
push
call
jge
add
roll
jbe
add
add
jge
icebp
cld
add
add
mov
popl
add
arpl
xchg
icebp
notb
xchg
add
rcll
aam
xchg
add
hlt
rolb
add
int
push
stos
arpl
testb
push
jecxz
jae
cmpsb
lret
add
jne
iret
add
add
fiaddl
lcall
push
push
push
call
add
mov
outsl
add
add
add
push
sahf
jle
lods
mov
fstpl
adcb
in
jns
jmp
pop
in
lods
jno
add
lahf
add
stc
add
add
fs
fdiv
lods
mov
lcall
pop
hlt
push
push
push
push
lea
push
lea
push
push
call
in
add
xor
std
aad
leave
add
cmpsl
data16
imul
add
mov
addl
sti
jmp
roll
in
in
add
push
push
push
push
push
push
call
xchg
iret
add
jb
outsl
add
add
add
jns
incb
add
mov
lock
add
popa
adcl
mov
call
adc
add
add
push
push
call
fdiv
push
lods
jno
jmp
add
add
add
stos
outsl
add
add
data16
lret
loop
add
add
mov
repnz
add
add
leave
bound
lcall
inc
and
int3
iret
iret
push
push
push
push
lea
push
push
push
call
jge
jo
add
std
mov
loop
pop
add
add
add
cmc
mov
add
stos
add
mov
out
std
fs
jae
cltd
out
add
cmc
leave
rol
shlb
add
add
in
add
in
imul
add
add
icebp
push
in
lcall
add
push
push
push
push
push
call
add
divl
jbe
int3
add
push
sahf
mov
divb
ljmp
pop
push
xchg
add
pop
outsl
add
cmpsl
cmpsl
jb
add
add
icebp
bound
add
add
jo
lea
sub
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
testl
out
lret
push
jns
iret
add
jo
add
je
add
mov
add
popf
xchg
mov
add
arpl
in
leave
add
add
add
sub
pop
mov
xor
push
push
push
push
call
push
mov
jp
movb
std
add
xchg
add
xchg
lods
aad
mov
mov
add
jae
add
mov
add
xchg
add
jmp
xchg
flds
add
xchg
dec
sub
iret
push
push
lea
push
call
ror
add
pop
add
add
ret
add
push
add
add
add
add
add
push
movsb
cwtl
mov
mov
pusha
jnp
add
in
add
xorb
add
ret
fists
fsubrp
add
fsubrs
cmp
add
ret
in
jecxz
lea
push
lea
push
push
push
push
call
in
add
add
add
push
ret
cmc
lock
push
fnsave
call
lods
mov
in
add
add
jnp
fadds
add
add
add
roll
add
add
add
mov
int
add
cwtl
push
mov
lcall
rcll
inc
call
pushf
shlb
mov
in
add
add
add
mov
add
xlat
add
pop
mov
push
push
rol
sub
push
push
pop
add
sub
sub
sub
shr
pop
inc
sub
xor
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
je
add
in
add
out
enter
mov
jno
hlt
add
add
mov
in
fcompl
jne
push
push
push
push
lea
push
call
fsubr
add
add
iret
movsb
add
add
xchg
add
add
je
fsubr
add
cli
push
xchg
mov
stos
movl
add
lea
js
roll
add
pusha
lock
jmp
rolb
popf
stos
mov
fildl
aad
out
stc
std
enter
in
pop
call
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
fs
add
add
mov
add
enter
jo
add
add
mov
add
test
xorl
add
push
jno
add
add
push
add
xchg
push
fadds
add
out
lods
add
add
loopne
lcall
add
xor
rol
lret
push
pop
add
dec
shr
add
sub
sub
dec
sub
pop
sub
shr
xor
pop
push
push
push
push
lea
push
call
xchg
add
mov
add
add
add
call
add
insb
xor
add
add
cld
hlt
fldl
movsl
mov
add
add
add
imul
mov
mov
in
in
pop
push
push
lea
push
push
call
test
mov
nop
addl
add
mov
add
in
mov
add
add
pusha
add
lcall
add
adc
or
push
lea
push
push
push
call
add
add
add
pop
add
cld
mov
mov
repnz
ljmp
add
in
fdivr
lcall
rorb
pushf
fldcw
mov
mov
xchg
mov
aaa
push
push
push
push
call
mov
xchg
filds
les
addl
fwait
add
add
enter
add
test
mov
movsl
push
add
xchg
lret
add
loope
loope
xlat
data16
in
xchg
leave
add
in
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
add
out
mov
add
insb
add
add
mov
add
add
js
add
mov
add
roll
xchg
add
add
addl
add
jae
add
xlat
add
add
add
in
fcompl
pop
hlt
push
push
call
pop
xchg
xchg
add
add
add
add
add
pop
hlt
mov
fldt
add
lods
mov
xchg
ja
add
out
add
add
add
add
add
add
pop
push
popa
add
xchg
add
add
lods
add
push
push
faddl
add
add
fiadds
sub
pop
add
push
push
lea
push
push
call
add
movsl
addb
pop
xchg
imul
cmpsl
add
push
mov
out
add
mov
aad
testl
test
add
add
ret
add
add
push
lea
push
lea
push
lea
push
push
call
add
cmpsl
add
filds
lahf
loop
jl
pop
add
fsts
add
xchg
cmc
add
jb
add
add
fiaddl
sar
add
add
sarb
add
add
add
add
cli
push
push
in
in
lcall
ret
out
add
mov
xor
push
push
push
lea
push
call
fwait
add
cld
lods
add
push
jo
icebp
add
test
ja
add
add
shlb
mov
mov
add
mov
shll
xchg
add
stos
hlt
mov
out
add
add
mov
out
fiadds
mov
addb
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
mov
incb
jge
jge
stos
in
mov
xchg
add
xchg
lock
mov
fcompl
add
add
push
push
lea
push
push
push
call
add
enter
mov
add
mov
lret
fucomp
jecxz
pop
iret
mov
mov
ret
int
jecxz
xchg
add
xchg
popl
enter
xchg
mov
add
test
add
aad
out
add
call
bound
js
push
jmp
in
in
in
pop
mov
push
push
push
lea
push
lea
push
push
call
add
add
mov
add
into
mov
roll
add
push
fs
pop
add
insb
movb
push
std
add
jae
jp
mov
ret
add
add
aad
mov
sub
pop
xor
push
push
call
xchg
mov
movsl
push
add
ja
into
outsl
leave
imul
outsl
add
add
sti
add
add
lcall
sub
pop
add
push
lea
ror
not
pop
add
push
push
push
push
push
push
push
push
push
call
fildll
jge
stc
lods
rolb
push
mov
add
cmpsl
lea
in
lds
lret
xchg
sti
fchs
add
add
popl
scas
add
add
lcall
mov
push
push
push
lea
push
lea
push
push
call
add
jo
jo
arpl
sub
mov
pop
lock
mov
mov
add
xchg
testl
push
mov
enter
mov
dec
add
scas
push
add
repnz
add
add
add
push
cmpsl
je
add
mov
add
test
imul
add
rolb
lcall
or
push
push
push
push
push
push
call
xchg
add
add
loopne
aam
int
lcall
add
add
test
lea
add
incb
add
jle
lods
add
stos
mov
mov
add
mov
add
mov
jae
mov
cmpsl
push
add
add
stc
add
add
sub
pop
add
push
push
lea
push
push
lea
push
push
push
call
pusha
add
in
int3
mov
jns
add
enter
add
faddl
lahf
add
pop
fbstp
add
add
add
fstps
mov
rep
push
shr
pop
mov
xor
push
inc
pop
or
je
push
push
push
push
push
call
lea
ljmp
sti
add
mov
add
roll
loop
add
add
add
test
in
add
fmulp
fldl
push
int
add
in
add
stos
push
aam
add
sarl
in
fdivrs
lods
add
gs
adcl
xor
int3
iret
iret
push
push
call
fnsave
cli
mov
pop
add
gs
mov
mov
xchg
mov
add
cld
movsl
add
cmpb
icebp
add
add
add
add
add
xchg
mov
mov
add
jne
pop
add
scas
fadds
fsubs
movsl
jl
test
mov
lcall
xor
push
lea
push
push
push
lea
push
push
call
out
loopne
fmul
adcb
add
mov
movb
add
rcll
add
xchg
fs
add
add
add
add
mov
add
int
sahf
push
fdivs
call
push
lea
push
push
lea
push
lea
push
call
push
lods
add
lds
call
mov
add
add
movl
push
fadds
add
add
loopne
add
push
add
add
add
rcrb
jb
add
xchg
xchg
add
in
in
lcall
push
sbb
iret
push
dec
rol
pop
add
push
lea
push
push
push
push
push
push
push
call
mov
add
mov
push
add
fnstcw
add
mov
shll
add
cmpl
fisttps
push
add
aad
add
add
jmp
insb
push
test
sahf
imul
arpl
push
push
outsl
add
mov
pop
add
push
dec
shl
pop
push
push
push
call
add
icebp
add
out
cmpsl
xchg
scas
out
mov
pop
ja
testl
add
add
cltd
xchg
in
sbbb
out
imul
add
sub
pop
mov
push
push
push
call
test
lods
aam
into
add
add
add
add
add
push
scas
mov
filds
pop
add
add
mov
jp
add
test
push
push
ljmp
clc
lcall
add
push
lea
push
push
push
call
flds
xchg
add
in
add
fbld
add
fcmove
add
add
movsb
pop
add
add
mov
popf
jle
add
jp
mov
addr16
jbe
add
in
jnp
stos
push
stos
add
jno
add
add
cld
xchg
add
add
movsb
mov
data16
lcall
les
push
push
push
push
push
push
call
add
xchg
add
add
pop
mov
jl
test
pop
add
mov
pushf
jmp
cmpsl
movb
jl
add
scas
hlt
insb
arpl
add
add
push
xchg
mov
rolb
add
pop
pop
add
shrb
mov
add
xchg
add
sub
pop
add
push
push
push
push
call
pop
faddl
mov
lods
popa
add
aam
divb
mov
xchg
push
into
add
mov
ljmp
add
test
mov
ljmp
add
push
push
imul
add
add
add
addr16
clc
add
lock
pop
push
sub
ror
inc
pop
rep
mov
xor
push
lea
push
push
push
call
xlat
add
incb
ljmp
imul
popf
add
add
in
push
add
iret
mov
lds
roll
in
cmpsb
add
bound
add
mov
rcl
loopne
add
stc
sub
pop
or
je
push
shl
pop
mov
add
push
shl
shl
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
jo
add
mov
add
mov
mov
je
nop
std
add
rcr
add
add
add
add
fcoms
push
xchg
sub
pop
rep
push
pop
pop
push
push
xor
not
push
sub
add
add
sub
pop
dec
pop
push
lea
push
push
lea
push
call
roll
frstor
pop
aad
rcrl
add
pop
test
iret
mov
cltd
js
loope
add
pop
pop
add
add
imul
add
in
add
add
sub
pop
pop
mov
push
not
pop
mov
push
push
push
lea
push
push
push
call
add
roll
ret
add
loope
add
iret
jle
add
add
jb
add
fcomps
lret
jno
sub
pop
mov
push
lea
dec
pop
jmp
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
gs
add
mov
add
add
movsb
cmpsb
shrl
mov
cli
mov
add
xchg
enter
pop
jno
pop
add
rolb
pop
mov
cwtl
fcmovnu
jno
mov
add
xorl
push
push
lea
not
not
pop
mov
add
push
sub
shl
pop
push
push
lea
push
call
jae
lods
pop
in
popa
mov
scas
shll
jmp
lods
stc
cli
add
mov
add
hlt
scas
loopne
add
lods
add
mov
add
sti
test
add
sar
add
push
jae
sub
pop
push
push
push
xor
add
pop
push
push
lea
sub
sub
pop
mov
pop
push
pop
pop
push
push
call
mov
push
fwait
aam
add
movsb
loopne
add
add
xchg
add
pop
ja
lock
data16
addr16
xchg
add
jge
int
mov
test
add
jnp
xchg
xchg
pop
mov
into
js
add
add
push
out
addl
ret
xchg
fwait
jmp
add
jge
jo
imul
xchg
jae
xlat
cltd
out
add
testb
add
pop
pop
leave
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
out
mov
test
in
out
xchg
mov
lcall
add
hlt
mov
sahf
mov
addl
add
jle
mov
in
clc
pop
push
enter
in
fcomps
or
push
pop
push
push
push
push
push
push
push
push
push
call
mov
pop
add
test
add
fwait
xchg
lods
add
add
push
add
lds
push
clc
add
mov
add
add
add
add
out
add
imul
sti
cli
jne
shll
loopne
mov
add
loopne
lcall
in
push
not
add
shr
pop
add
push
push
push
push
call
fildl
pop
in
scas
ja
fs
je
add
add
jp
cmpl
add
mov
stos
mov
stc
mov
push
add
lahf
cmpsb
andb
add
add
add
add
mov
lock
lcall
push
shr
pop
push
push
lea
push
call
in
jge
add
loope
std
cmpsb
add
jl
mov
push
cwtl
out
add
add
mov
in
push
lds
add
add
push
push
push
push
push
push
call
roll
data16
mov
hlt
add
aam
add
in
iret
add
jp
int
lods
add
add
add
add
add
add
rorb
jns
push
pop
in
add
data16
add
leave
add
add
add
jb
pushf
popa
fucom
sub
pop
push
push
not
lea
pop
movl
addl
push
shl
not
pop
test
je
push
push
push
lea
push
push
push
call
rolb
add
fwait
les
xchg
add
mov
xchg
test
addl
out
cltd
out
xchg
push
pop
enter
lcall
inc
or
enter
pop
push
lea
push
push
call
int
incb
fwait
xchg
add
mov
addl
jno
imul
mov
loop
add
mov
xchg
push
out
add
add
add
in
mov
pushf
add
mov
scas
incb
sub
pop
pop
push
add
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
jae
add
add
shll
pushf
add
insb
scas
not
cwtl
add
pop
add
test
add
add
faddl
cwtl
pop
mov
cli
pusha
popl
push
push
call
add
mov
add
lahf
js
add
mov
add
loopne
add
clc
mov
mov
mov
pop
push
add
add
imul
add
icebp
add
mov
jb
mov
fimuls
stos
mov
roll
pop
ret
push
push
lea
push
push
lea
push
push
call
je
add
rolb
pop
mov
xchg
hlt
xchg
xchg
add
xor
sti
add
xchg
jno
testl
add
add
fwait
nop
jnp
movsl
roll
hlt
mov
lods
add
ret
pop
push
fiaddl
push
lea
mov
add
test
pop
add
xchg
lcall
enter
in
call
push
push
push
push
push
push
lea
push
push
push
lea
push
call
fst
mov
out
jnp
pop
add
out
add
mov
add
loope
add
out
stos
add
add
testl
add
call
pop
add
lret
mov
pushf
movsb
add
lcall
in
add
push
push
push
lea
push
call
movsb
add
cltd
lock
pop
loop
icebp
jbe
add
add
add
lods
jmp
ljmp
lcall
push
sub
pop
push
push
push
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
fiadds
lcall
add
add
ret
lcall
add
js
add
xchg
add
xchg
pop
jo
add
add
add
hlt
aad
pop
in
add
je
add
lds
add
cli
add
add
lds
lcall
inc
cld
add
add
addl
push
add
rol
shl
pop
push
push
shl
sub
pop
call
push
shl
sub
pop
mov
push
pop
pushl
push
ror
sub
pop
push
push
push
dec
pop
call
push
push
push
push
lea
push
call
insb
xchg
add
mov
xchg
add
add
add
add
add
rorl
jns
add
outsl
mov
add
mov
add
add
jge
add
test
call
ret
rolb
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
popa
test
push
push
aad
add
test
fcomps
movsb
jp
add
push
flds
cli
data16
popf
add
repnz
int
lds
add
add
add
add
jb
mov
jp
xchg
jns
mov
lcallw
popa
stc
je
mov
add
cmpsb
add
sub
pop
pop
push
not
sub
rol
add
pop
pop
push
rol
pop
leave
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
add
aad
mov
add
out
mov
add
add
loope
movsl
hlt
hlt
add
ljmp
add
fwait
mov
sub
pop
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
push
out
movl
add
mov
add
mov
mov
lods
add
jmp
add
push
mov
jbe
add
sti
lock
in
add
push
lea
shl
pop
push
push
sub
add
ror
rol
pop
push
push
add
inc
shr
xor
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
xchg
out
add
insb
mov
jmp
movb
call
jmp
add
xchg
mov
pop
push
push
push
push
push
push
lea
push
push
call
add
popa
rcl
add
add
add
cltd
mov
add
mov
push
hlt
addl
mov
add
add
add
jecxz
mov
add
fcom
add
jo
jnp
xchg
add
push
mov
lcall
inc
cld
or
add
push
not
dec
rol
dec
pop
push
push
push
push
push
push
lea
push
lea
push
call
push
pop
xchg
jecxz
push
add
fbld
fmuls
ljmp
cli
add
ror
addr16
add
add
stos
cltd
movb
iret
jmp
mov
add
add
in
add
in
call
push
push
push
push
push
push
push
call
cmp
add
leave
scas
mov
in
bound
add
pop
add
cwtl
call
imul
cwtl
add
add
add
mov
add
add
add
faddl
add
fadds
cli
loopne
in
add
hlt
sub
pop
call
push
push
call
jp
mov
pop
add
bound
movsl
mov
mov
sahf
mov
add
enter
jp
test
add
add
xchg
add
in
clc
pop
subl
cmpl
jne
push
inc
inc
ror
inc
pop
pop
push
push
push
call
push
mov
sti
add
add
repnz
loopne
xchg
pop
push
mov
add
imul
bound
hlt
mov
pop
call
jno
pop
lods
add
jo
sub
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
call
xchg
add
add
xchg
fstps
add
xchg
jae
leave
cmpsl
add
lea
add
add
cli
ja
les
mov
icebp
fmul
stos
imul
mov
xchg
arpl
xorb
in
pop
push
not
lea
xor
pop
leave
push
sub
shr
lea
pop
ret
push
shl
rol
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
loopne
jno
push
cmpl
add
add
lods
aam
pushf
add
mov
mov
add
test
sahf
std
stos
rcrl
adcl
xchg
out
jmp
add
add
add
test
popa
pusha
aad
add
rolb
add
add
add
jb
ret
stc
add
sub
pop
mov
push
sub
pop
add
push
push
call
add
add
out
add
add
add
add
add
add
icebp
jle
add
add
test
add
add
add
out
leave
add
jge
add
mov
lahf
add
add
mov
rolb
mov
movsl
mov
shlb
push
push
call
add
add
pushf
add
push
add
add
test
pop
imul
add
add
add
aam
add
mov
add
add
test
enter
push
mov
gs
cmpsb
mov
jno
lds
add
add
shl
test
into
add
mov
stos
jno
in
clc
pop
push
push
push
push
push
call
mov
stc
movsb
add
movb
out
cwtl
xlat
add
add
pop
add
add
icebp
xchg
cld
add
lret
pop
push
add
add
jno
jnp
clc
jecxz
in
hlt
pop
push
push
push
shr
add
sub
push
xor
add
ror
sub
sub
shr
sub
not
inc
not
pop
add
lea
pop
push
lea
push
push
call
add
stos
cmpsl
mov
mov
add
scas
in
xchg
add
add
add
lods
je
pop
mov
mov
loope
in
movsb
test
fiaddl
jne
push
push
push
push
lea
push
lea
push
push
call
jae
add
fwait
roll
out
add
push
push
add
push
xchg
out
fnstsw
add
add
xchg
push
mov
stos
cmp
add
pop
call
push
push
inc
xor
shr
ror
push
xor
add
sub
rol
dec
add
sub
not
shr
xor
pop
sub
pop
push
shr
lea
add
pop
pushl
push
shr
xor
add
pop
call
call
push
push
inc
push
sub
add
ror
dec
add
sub
not
pop
add
pop
push
add
inc
pop
pushl
call
push
push
push
push
push
call
add
mov
xchg
fldl
mov
int3
test
add
add
add
add
add
idivl
jno
in
in
lcall
rclb
lret
add
lret
push
pop
mov
lea
push
shl
rol
add
pop
sub
push
add
pop
mov
push
push
push
call
out
pop
imul
xchg
push
sbb
lahf
repnz
filds
call
arpl
add
sub
pop
shr
push
push
push
call
shr
pop
add
mov
add
add
add
enter
test
jne
pop
add
xchg
cld
cmc
lret
add
jmp
xchg
add
mov
xchg
add
sbbb
icebp
add
pop
stos
push
add
add
mov
sub
pop
add
push
push
lea
push
call
mov
mov
clc
jp
jp
add
push
roll
sti
out
add
cli
mov
test
add
adc
imul
add
mov
into
add
add
lcall
inc
cld
mov
push
lea
push
call
add
out
add
pop
push
lcall
mov
jp
test
add
add
add
rcl
add
lea
imul
add
fbstp
add
sub
pop
add
push
lea
push
push
push
push
call
add
add
mov
call
xchg
fiaddl
arpl
mov
pushf
ficompl
xchg
leave
cmpsl
cmpsw
stos
roll
in
data16
lcall
shlb
inc
add
add
int3
pop
mov
push
dec
lea
pop
cmp
jne
cmp
jne
push
push
push
push
push
push
push
push
call
mov
pop
and
stos
add
repnz
mov
pusha
aam
fld
fcom
add
add
cwtl
add
popf
push
lds
lcall
inc
adc
rol
sub
pop
movl
push
add
add
ror
pop
jmp
mov
push
lea
push
call
cld
sub
add
push
shr
mov
lods
ja
iret
mov
imul
add
lcall
addl
add
lcall
in
clc
pop
mov
push
lea
push
push
push
call
in
nop
loopne
add
testl
add
ja
gs
aad
add
add
push
lock
lahf
jbe
push
jo
loopne
ret
add
fstps
in
lock
sub
jne
push
lea
push
push
lea
push
call
stc
add
pop
mov
mov
out
sarl
add
pop
mov
xchg
out
add
xchg
in
add
add
popf
add
test
add
out
in
cmc
jbe
add
out
add
test
in
lock
lcall
inc
adc
add
add
push
sub
rol
pop
jmp
push
push
push
lea
push
lea
push
push
push
push
call
cli
out
aad
testl
mov
mov
add
xchg
imul
les
pop
add
add
add
xchg
jge
add
into
add
sti
add
stos
add
lcall
inc
cld
push
sub
pop
mov
push
dec
pop
cmp
jne
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
int
clc
add
mov
test
aad
add
add
add
sub
ret
mov
in
fcomps
add
add
add
pop
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
mov
xchg
mov
mov
in
fcomip
lret
add
aad
fs
mov
arpl
xchg
popf
push
mov
cmpsb
hlt
lods
mov
push
shr
push
xchg
out
lock
add
mov
sub
pop
jmp
push
push
push
push
push
call
add
fwait
loop
jle
lea
fwait
add
mov
je
push
add
add
nop
testb
fwait
mov
push
lcall
add
mov
roll
add
mov
add
lcall
inc
cld
push
dec
not
pop
cmpw
jne
mov
push
sub
pop
movl
push
add
dec
pop
jmp
pushl
push
not
ror
shr
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
add
loopne
shlb
add
mov
scas
add
movsb
add
add
xchg
add
fs
add
add
lea
inc
or
xor
ror
pop
mov
mov
push
push
not
sub
push
or
inc
add
rol
lea
sub
sub
not
inc
xor
pop
rol
ror
add
pop
push
add
shl
not
pop
push
push
add
add
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
call
fbstp
jl
testl
fsubs
add
add
cltd
lods
add
gs
movl
pop
add
fildl
mov
scas
sahf
sub
pop
cmpl
je
push
push
push
or
inc
add
add
rol
sub
sub
add
rol
sub
pop
add
pop
push
sub
inc
pop
push
call
push
lea
push
call
loop
popl
cmpsb
add
stos
add
stos
jnp
jp
mov
add
add
insb
add
sbbl
sbb
xchg
addl
add
add
add
xchg
add
add
add
jecxz
in
clc
lcall
cmp
or
int3
je
push
push
dec
push
sub
add
not
sub
lea
pop
add
not
pop
push
not
lea
pop
push
push
push
push
call
in
add
fcoms
add
mov
out
add
add
add
clc
mov
call
mov
add
loop
xchg
add
add
add
add
add
sub
pop
call
cmpl
je
push
push
sub
add
xor
push
push
pop
add
sub
dec
sub
sub
not
sub
pop
ror
add
dec
shr
pop
push
sub
pop
push
call
push
push
lea
push
push
push
push
push
push
push
call
jae
xchg
aam
fdivs
mov
ror
lret
lds
fs
arpl
popl
loope
push
js
add
notl
add
add
mov
add
mov
cmpl
je
push
push
lea
ror
shr
push
sub
add
not
shl
shr
sub
sub
pop
shr
add
pop
push
lea
push
lea
push
push
push
push
push
call
xchg
pop
jmp
mov
add
imul
rcll
jge
mov
enter
repnz
add
jmp
mov
add
add
repnz
add
pop
xchg
testb
push
add
in
add
mov
test
movsb
sub
pop
push
push
rol
pop
call
push
push
push
push
call
add
add
jge
xchg
iret
test
add
leave
jge
add
add
mov
loope
lods
movsb
mov
add
add
push
add
add
mov
add
add
xlat
fcmovu
add
aam
jbe
add
mov
add
mov
fiaddl
push
pop
sub
pop
cmpl
je
push
push
dec
shl
push
push
pop
add
sub
ror
add
sub
pop
dec
dec
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
push
sti
add
add
push
add
aad
xchg
push
lea
add
add
add
shll
mov
add
cltd
fistps
lcall
add
fiaddl
push
ljmp
add
addb
mov
add
push
add
stos
add
loopne
add
cmc
add
lahf
fadds
lcall
push
push
lea
push
push
call
add
mov
jl
add
add
add
jmp
add
mov
mov
xchg
gs
add
add
cmpb
add
add
jmp
cmc
add
sti
add
jmp
lret
test
lock
ret
sub
pop
call
push
push
push
lea
push
push
push
push
call
roll
add
aad
insb
add
jne
test
mov
push
outsl
std
mov
pop
pusha
add
pop
test
mov
out
push
aam
loopne
add
pop
sub
pop
cmpl
je
push
push
not
sub
dec
ror
push
push
pop
add
dec
inc
sub
add
sub
add
lea
pop
xor
not
pop
push
shl
dec
xor
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
mov
stc
mov
idivl
add
add
in
leave
add
mov
add
enter
faddl
xchg
jle
popf
filds
stos
mov
int3
push
cltd
mov
fiadds
add
xchg
test
mov
add
fdivrs
jne
lds
add
stc
in
add
sub
pop
call
push
sub
pop
cmpl
je
push
push
xor
dec
inc
push
sub
add
shr
shl
sub
dec
add
shr
pop
shl
pop
push
dec
pop
push
call
push
shr
dec
pop
cmpl
je
push
push
dec
not
dec
push
or
not
add
dec
shr
add
sub
sub
pop
lea
rol
lea
not
pop
push
push
push
push
lea
push
lea
push
push
push
call
ljmp
add
add
add
mov
mov
add
add
add
fadds
loop
jge
mov
mov
jmp
filds
mov
push
roll
gs
in
loopne
lcall
push
lea
push
push
push
push
push
push
push
call
add
add
xlat
add
add
add
add
mov
test
js
iret
add
add
pop
add
add
into
rolb
int
iret
outsl
add
add
jb
jle
add
sub
pop
call
push
push
lea
push
push
push
call
addb
fists
mov
sahf
push
lret
jl
push
iret
jge
xchg
enter
out
out
cmpsb
mov
add
in
mov
sahf
cwtl
mov
jle
add
stos
add
js
xor
pop
ret
movsb
add
add
not
shr
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
je
xchg
lahf
push
ficoml
roll
outsl
add
in
add
add
pop
add
out
add
mov
jmp
ror
out
add
xchg
add
xchg
mov
rcrl
add
addb
pusha
mov
add
add
add
add
jb
add
push
dec
xor
xor
pop
xor
push
lea
push
push
push
push
push
call
mov
bound
lods
add
addb
clc
icebp
add
add
add
jge
push
add
movl
fs
addb
iret
jbe
add
mov
add
mov
lea
jmp
xchg
std
push
insb
push
imul
sub
pop
pop
pop
push
not
rol
sub
pop
pop
pop
push
push
push
push
lea
push
push
call
sar
lcall
add
fldl
add
add
add
pop
add
test
not
add
scas
push
jecxz
jp
lcall
add
out
sub
pop
leave
ret
push
sub
ror
not
lea
pop
push
mov
push
sub
xor
pop
add
cmpl
jne
push
push
dec
xor
add
ror
push
and
add
not
sub
rol
sub
pop
sub
not
not
sub
pop
push
xor
add
pop
pushl
push
inc
not
pop
call
push
push
lea
push
call
cld
gs
lcall
mov
js
out
jge
pushf
js
add
insb
add
lahf
loopne
pop
icebp
add
add
roll
add
mov
add
ret
add
in
stos
nop
add
add
movb
mov
int
push
popl
add
add
movsb
sub
pop
push
call
push
push
call
add
add
fistpll
lds
add
add
add
leave
gs
add
mov
add
add
popa
add
xchg
repnz
sub
pop
jmp
push
push
lea
push
lea
push
call
jns
add
pushf
shr
add
add
add
loop
xlat
fcoms
je
test
jge
add
test
add
push
sub
pop
mov
call
push
lea
push
push
call
fiadds
add
addb
pop
add
arpl
add
mov
movsl
add
add
add
in
add
add
add
loop
add
outsl
pop
call
movsl
add
add
add
add
imul
hlt
lcall
push
push
push
push
lea
push
push
push
push
call
add
add
imul
push
fsub
add
add
flds
loop
add
test
add
shrl
lcall
add
jbe
movsl
add
add
add
add
enter
mov
into
xchg
add
mov
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
loop
jo
nop
add
pusha
push
mov
test
add
mov
in
rolb
andb
mov
add
loop
add
mov
mov
add
fildl
add
push
mov
jno
cwtl
add
add
add
add
add
lcall
jge
add
test
add
add
scas
xlat
push
sub
not
add
xor
push
push
pop
add
add
dec
shr
sub
shl
add
pop
pop
push
push
push
push
push
call
add
add
out
jp
add
fisubl
enter
jae
add
add
add
add
jb
add
clc
add
add
add
pop
add
xchg
add
aad
push
add
clc
push
jne
xchg
lret
add
mov
jne
call
push
dec
xor
not
pop
push
push
push
push
push
push
push
call
fwait
jecxz
mov
mov
data16
add
lods
scas
movsl
add
scas
mul
lret
mov
idiv
pop
adcb
lcall
int
mov
add
mov
imul
pop
call
push
sub
not
shr
pop
jmp
cmpl
je
push
lea
push
push
push
push
push
call
add
movsb
jns
add
call
mov
sti
jno
pushf
fwait
test
add
lock
xchg
add
add
jmp
cld
xchg
add
add
xchg
add
les
add
jns
push
add
xchg
rolb
add
push
call
add
add
mov
push
rol
sub
dec
pop
mov
push
push
push
push
push
lea
push
call
jne
push
add
out
add
lock
xchg
add
mov
add
icebp
std
ja
bound
pop
into
mov
ljmp
push
xlat
mov
add
out
popl
je
add
test
add
push
mov
add
push
out
sub
pop
push
jmp
push
push
push
xor
add
add
lea
sub
shr
rol
sub
pop
sub
not
shl
sub
pop
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
lahf
xchg
add
add
addl
add
xchg
xorb
add
cmpsb
add
push
call
add
add
add
call
test
push
add
movsb
bound
add
jne
push
add
add
shl
ror
pop
call
push
add
add
pop
call
push
push
dec
add
ror
shl
push
sub
add
dec
not
sub
inc
lea
pop
inc
sub
dec
pop
push
lea
push
push
push
call
stos
pop
add
ret
pop
bound
call
add
loopne
out
add
ljmp
add
ret
jo
add
add
and
add
movsl
movl
push
push
lea
push
push
push
lea
push
push
push
call
add
cwtl
add
add
add
add
add
add
popa
mov
add
xchg
in
add
push
pop
in
add
jmp
fs
mov
pop
shl
xchg
add
sub
pop
call
push
sub
inc
shl
shr
pop
call
push
push
push
and
add
rol
sub
sub
sub
pop
shl
add
shr
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
cmpsb
fs
push
add
fildll
add
add
mov
pop
add
jle
jge
cmc
insb
jbe
out
jo
mov
mov
mov
push
lea
jb
mov
imul
lock
data16
xchg
lods
cltd
loope
jns
int
mov
fdivr
lcall
jne
push
shr
not
sub
pop
call
push
lea
push
lea
push
push
push
call
add
add
add
mov
test
add
subl
xchg
add
add
into
pusha
add
jb
in
mov
loope
movsb
add
jle
add
push
pushf
add
add
pop
add
bound
add
sar
add
add
sub
pop
call
push
push
push
or
not
add
ror
lea
add
sub
xor
pop
lea
ror
add
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
shlb
out
add
in
pop
add
xchg
hlt
fldl
add
mov
add
add
add
add
add
subb
iret
mov
add
add
data16
add
nop
mov
xchg
cwtl
pop
cld
bound
add
push
add
movsl
addr16
add
mov
loop
fldl
sub
pop
pushl
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
movl
into
add
mov
add
pusha
out
popa
sti
add
test
enter
mov
xchg
add
shrb
in
cwtl
push
dec
push
push
pop
add
sub
add
sub
sub
pop
pop
push
add
shr
lea
pop
pushl
push
push
push
push
call
add
add
xchg
push
cmpsb
add
lret
add
add
add
cmc
leave
add
pop
add
jl
push
roll
lahf
insb
sti
mov
add
les
push
jnp
clc
cltd
lret
fiadds
jno
stc
add
test
add
lcall
push
and
add
push
push
push
push
lea
push
lea
push
push
push
call
add
jp
lahf
mov
repnz
add
sahf
pop
mov
add
js
push
lret
add
insb
add
mov
add
out
add
fs
add
mov
add
pushf
push
add
popa
add
xchg
add
shrb
iret
mov
ret
push
push
pop
add
ror
sub
add
pop
add
lea
shr
pop
push
push
call
add
xchg
stc
add
add
add
xchg
cld
add
lds
jle
pop
add
add
jbe
movb
add
cmc
loop
mov
lcall
mov
outsl
sub
pop
pushl
push
dec
xor
xor
rol
pop
call
push
inc
shl
pop
call
push
push
shl
xor
push
sub
add
rol
sub
xor
add
pop
add
add
pop
push
lea
push
push
push
lea
push
push
push
push
call
add
pushf
cmpsl
lods
call
nop
add
add
xchg
ja
cmc
add
ret
jno
xchg
add
mov
loopne
roll
add
add
arpl
add
mov
stc
movsl
test
mov
add
shll
add
add
pushl
push
pop
call
push
push
push
call
add
jno
bound
add
addr16
imul
add
add
mov
fadd
out
xchg
jo
jno
bound
sub
pop
call
push
push
rol
push
push
pop
add
sub
rol
pop
rol
pop
push
dec
rol
add
sub
pop
pushl
push
lea
push
push
call
icebp
stos
add
jne
ja
xlat
jge
mov
push
test
nop
add
clc
mov
in
add
loopne
test
xchg
xchg
mov
add
add
push
add
add
lret
mov
add
mov
add
mov
add
jae
jle
sahf
sub
pop
call
push
add
not
pop
call
push
push
ror
lea
shl
xor
push
sub
add
dec
ror
dec
sub
pop
sub
pop
push
shr
xor
rol
inc
pop
pushl
call
push
lea
push
push
push
call
add
sahf
rcrl
incb
fst
pop
pusha
les
add
push
les
mov
add
lret
imull
add
enter
add
mov
mov
repnz
arpl
arpl
sarl
sub
pop
call
push
push
add
push
sub
add
dec
sub
add
inc
pop
add
shl
pop
push
push
call
push
std
add
add
rorb
call
add
leave
stos
mov
add
xchg
mov
scas
add
add
push
xchg
add
repnz
je
insb
in
in
clc
lcall
jne
push
add
shr
pop
call
push
rol
rol
sub
pop
lea
push
lea
push
push
push
push
push
call
push
jl
pop
push
roll
mov
lcall
fdivl
fstps
in
fcomip
test
xchg
add
shl
xchg
fadd
add
xchg
iret
mov
push
cli
mov
sub
pop
push
push
sub
lea
shr
pop
call
push
push
ror
push
or
inc
add
add
shl
inc
sub
dec
shl
xor
inc
pop
sub
pop
push
lea
push
push
lea
push
push
lea
push
push
call
add
out
les
add
fldenv
jp
enter
add
mov
jmp
push
add
add
add
add
add
add
xchg
add
scas
lret
cli
add
add
mov
add
pusha
pop
sti
mov
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
pop
add
add
add
arpl
mov
mov
jno
fstl
in
lret
add
add
shrl
add
popa
lcall
add
add
test
ja
pop
push
popf
add
call
push
push
push
push
call
xchg
fnsave
jns
lods
fsubl
add
fs
stc
faddl
shll
mov
imul
jo
push
shr
int3
mov
add
xchg
in
mov
add
add
scas
pop
std
ret
add
add
add
sahf
jnp
add
jb
insb
stos
mov
arpl
lock
call
push
push
push
push
pop
add
not
sub
sub
dec
sub
xor
pop
add
pop
push
push
lea
push
lea
push
call
mov
mov
jl
add
fs
push
add
add
add
aad
les
push
add
push
add
add
add
pop
mov
cmpsb
add
enter
rolb
add
add
cld
mov
lcall
lcall
jne
push
push
lea
push
push
call
mov
add
add
xchg
insb
imul
mov
out
add
stos
add
add
add
add
add
jns
add
scas
sbb
add
xlat
push
push
push
push
call
add
mov
mov
out
add
xchg
add
push
stos
call
xchg
mov
fcmovnb
int
fldenv
stos
cmpsl
add
cmpsl
roll
add
xlat
jnp
add
les
push
xor
mov
scas
push
add
add
sti
add
add
enter
pop
call
push
push
shr
lea
push
sub
add
sub
dec
pop
shl
inc
pop
push
lea
push
push
push
push
push
call
jno
push
incb
mov
shr
add
add
mov
add
xchg
add
call
xlat
jae
scas
data16
add
hlt
imul
call
pushl
push
shl
pop
call
push
shl
pop
call
push
push
lea
add
lea
push
or
not
add
shr
inc
shl
sub
add
pop
sub
rol
pop
push
lea
push
call
les
mov
xchg
std
add
fisttps
add
add
fsts
lds
add
mov
jge
mov
pusha
add
addl
mov
xchg
add
mov
add
lret
arpl
add
bound
sub
pop
pushl
call
push
push
shl
rol
shl
push
sub
add
sub
dec
shr
add
sub
xor
inc
pop
shl
add
sub
pop
push
push
lea
push
or
inc
add
dec
shr
lea
not
sub
sub
dec
pop
shl
pop
push
sub
sub
shl
dec
pop
call
pop
push
ror
shl
xor
pop
dec
jne
push
shl
inc
dec
pop
call
mov
push
inc
sub
pop
int
lea
push
push
shr
add
push
and
add
rol
ror
sub
add
shr
pop
shr
pop
push
push
push
push
push
push
push
lea
push
push
push
call
cmc
add
add
add
add
nop
jae
add
xchg
pop
mov
out
add
mov
mov
add
add
mov
add
mov
add
add
add
pop
clc
pop
out
add
leave
test
popl
add
lcall
jne
push
sub
lea
rol
pop
call
push
push
ror
pop
call
push
push
dec
inc
push
or
not
add
sub
lea
inc
sub
add
rol
rol
sub
pop
ror
pop
push
sub
pop
pushl
push
lea
xor
inc
pop
call
push
lea
sub
dec
rol
pop
call
push
ror
add
pop
mov
push
rol
add
pop
lea
push
push
sub
sub
ror
push
or
not
add
inc
sub
xor
shl
xor
pop
add
shr
add
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lcall
add
add
mov
lea
aad
add
std
pop
add
add
lods
into
jp
jns
rolb
fildll
fstpl
mov
cmpsl
mov
lcall
jne
call
push
push
push
push
push
call
scas
pop
bound
add
push
add
add
shr
add
add
cmc
add
add
jmp
cmc
mov
add
mov
sahf
add
in
fcomps
in
add
mov
xorb
in
lcall
add
push
push
push
push
push
push
push
lea
push
push
call
sti
in
add
cwtl
notb
fwait
add
cld
mov
stc
add
idivl
add
add
add
scas
add
add
jo
xchg
movsb
jo
rcr
std
add
add
dec
inc
pop
push
lea
pop
push
pushl
push
push
inc
push
and
add
xor
sub
add
sub
shr
not
sub
pop
sub
pop
push
inc
pop
push
push
push
push
push
lea
push
push
push
push
call
testl
mulb
add
add
testl
fiadds
test
add
clc
add
add
call
add
add
add
addb
jae
test
add
add
mov
scas
add
lods
push
cmpsb
addr16
pop
call
push
push
inc
not
push
xor
add
sub
add
inc
sub
sub
dec
pop
ror
pop
push
lea
push
call
add
cwtl
ljmp
add
les
add
loopne
enter
enter
push
stos
add
loop
add
sarb
lea
add
pop
pushl
push
push
push
push
push
push
push
call
scas
push
flds
add
push
call
in
pop
mov
add
fiadds
add
jp
sahf
add
add
scas
test
lea
ja
mov
add
add
add
pop
adc
push
daa
not
pop
push
push
ror
xor
pop
call
push
push
shl
sub
push
or
inc
add
not
ror
sub
rol
sub
add
inc
pop
pop
push
lea
push
push
push
push
push
call
add
jb
add
les
incb
add
rcrl
add
add
mov
fildl
movsl
fwait
call
lods
jbe
jecxz
jl
xchg
enter
mov
cmpsb
repnz
xchg
add
lret
pop
add
lods
mov
lcall
jne
push
add
pop
call
push
ror
rol
pop
call
push
lea
push
push
push
push
lea
push
push
push
push
call
test
add
test
cmc
mov
add
add
add
fadds
mov
add
add
jp
jb
add
add
out
out
popl
xlat
sbbl
fcompl
pushl
push
push
lea
push
push
push
call
jle
jecxz
push
add
add
add
add
add
push
add
jge
lock
xchg
push
mov
jmp
add
leave
rolb
lcall
mov
push
push
push
push
call
push
lock
mov
mov
leave
cwtl
add
xchg
add
lds
mov
jb
add
insb
loope
fadds
imul
add
ret
add
fisubs
pop
add
mov
add
aad
addr16
add
add
lcall
in
stc
ljmp
add
shl
push
sub
add
rol
lea
sub
xor
pop
shr
pop
push
push
call
hlt
add
cmc
pop
jno
add
mov
out
add
out
mov
jae
add
add
sahf
pop
add
add
les
in
ficomps
call
testb
pop
add
jne
lea
xchg
mov
lds
mov
add
mov
in
clc
pop
pushl
push
lea
push
push
push
call
add
addl
add
add
push
shlb
mov
scas
mov
add
jp
push
add
xchg
add
jno
mov
sub
pop
call
push
inc
inc
pop
push
call
push
push
dec
sub
push
sub
add
not
sub
shr
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
test
je
add
std
add
add
scas
add
push
mov
add
mov
pop
add
stos
add
add
add
add
push
add
mov
add
jp
out
cmpsl
add
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
xchg
pop
add
add
add
add
jbe
add
mov
add
fidivl
stos
add
mov
cmpsb
sub
pop
call
push
push
sub
ror
sub
pop
call
leave
push
push
push
lea
push
push
push
push
lea
push
call
mov
mov
popa
add
add
stos
repnz
rclb
add
add
js
add
add
mov
mov
mov
add
stos
mov
cwtl
data16
scas
aam
mov
in
loopne
add
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
into
fwait
add
add
add
test
mov
add
pop
int3
testb
jae
mov
std
movl
add
outsl
add
add
jmp
add
shrl
stc
imul
add
add
add
rolb
sub
pop
pop
push
pop
pop
push
shr
pop
pop
push
ror
lea
not
pop
xor
push
shr
pop
inc
push
push
push
lea
push
lea
push
push
lea
push
call
lret
mov
xchg
mov
int
xchg
test
add
xlat
call
add
add
les
lcall
or
push
push
push
push
push
call
push
xchg
add
leave
add
lods
add
cmc
sti
test
test
imul
idivb
add
imul
push
add
add
lock
add
mov
add
add
add
jo
sub
pop
leave
push
add
pop
ret
push
push
push
push
lea
push
push
push
call
add
mov
jbe
ret
xlat
je
cwtl
loope
add
mov
add
jnp
stos
data16
add
add
cmpsb
mov
add
add
rol
repnz
push
add
xchg
add
scas
cmpsl
pop
add
mov
add
addb
in
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
mov
fidivl
mov
int
mov
mov
mov
add
ljmp
jmp
nop
mov
enter
cld
add
fwait
mov
jecxz
icebp
add
mov
les
mov
add
addb
mov
sub
pop
cmpl
jne
mov
push
push
lea
push
call
iret
add
jae
stos
lods
bound
out
add
jecxz
repnz
les
add
push
jae
add
add
xlat
call
rolb
add
jne
add
popf
pop
add
orl
add
push
das
push
push
call
push
fwait
stos
loopne
pop
rolb
add
stos
add
add
add
add
add
add
add
mov
push
add
in
mov
shll
iret
int3
add
rcrb
add
add
add
and
push
inc
pop
xor
xor
push
inc
not
pop
add
push
push
call
xchg
add
lods
neg
add
add
add
add
add
add
icebp
add
push
mov
mov
sarb
fiaddl
dec
call
fcompl
push
push
push
push
push
push
push
push
lea
push
call
mov
jmp
fsubrp
xchg
clc
jp
add
enter
fiaddl
roll
sahf
xchg
test
into
rolb
add
flds
arpl
sahf
jo
out
xchg
mov
cmpsl
jbe
pop
mov
scas
aam
stc
add
jmp
cmpsl
test
xlat
loop
in
fdivr
lcall
jmp
push
push
push
call
je
cltd
add
mov
xchg
add
xlat
jge
add
out
mov
fs
add
clc
leave
add
fcmovne
addl
push
loope
in
hlt
pop
jmp
push
inc
dec
pop
sub
push
push
push
push
call
add
add
add
xchg
icebp
jle
mov
add
add
add
add
xchg
add
add
sub
pop
pushl
pop
push
sub
pop
sub
push
ror
pop
cmp
jne
push
push
lea
push
push
push
call
nop
lahf
popf
mov
ret
jle
xchg
ret
shrl
jbe
add
hlt
pop
mov
loopnew
int
add
push
add
pop
stos
add
sub
pop
mov
push
add
add
sub
pop
lea
sub
push
ror
not
pop
mov
shr
push
lea
push
push
push
call
add
jnp
fwait
cmpsb
lret
add
fidivs
lock
add
xchg
add
leave
xchg
mov
pop
add
mov
push
add
xchg
add
pop
add
add
add
add
add
mov
add
sub
pop
add
push
sub
rol
pop
sub
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
lcall
fdivrs
add
movsl
stc
add
xchg
mov
mov
jne
loope
mov
int
xchg
lahf
push
add
clc
mul
pop
out
add
in
xchg
add
add
add
pusha
add
in
fcomps
xor
test
je
mov
fimull
cmpsl
xor
add
add
mov
add
in
xorb
add
mov
add
push
sahf
fadds
cld
pushf
mov
in
add
mov
ljmp
les
lcall
shr
push
pop
and
push
inc
pop
sub
push
lea
push
push
push
call
cmc
jns
add
xchg
iret
add
add
add
add
xchg
mov
mov
stos
push
xchg
mov
cmc
mov
pusha
movsb
add
add
out
lahf
add
scas
shrl
add
mov
jmp
cmc
jmp
in
jns
add
add
add
add
lcall
stc
sbb
test
call
mov
lea
push
push
push
push
call
scas
add
into
add
add
add
popa
call
pop
test
add
add
jle
mov
sahf
add
nop
xchg
cltd
test
jbe
iret
add
filds
add
add
aad
test
leave
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
xchg
roll
mov
add
nop
add
add
jmp
fcom
cmc
mov
jl
add
add
add
add
add
add
add
in
loopne
ret
push
push
xor
pop
mov
add
push
shr
inc
inc
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
popf
add
pusha
fwait
add
lcall
jne
push
lods
add
lahf
add
mov
nop
push
test
fwait
xchg
add
add
out
stos
stos
mul
data16
add
jbe
rolb
movb
push
pop
into
add
popl
int3
add
sahf
add
popl
push
push
lea
push
call
add
mov
pop
add
mov
xchg
add
xchg
add
add
out
pusha
mov
add
gs
mov
mov
testb
add
in
hlt
lcall
push
not
inc
add
shl
pop
push
push
push
lea
sub
pop
mov
push
lea
ror
sub
sub
pop
lea
push
xor
xor
pop
sub
push
push
push
push
push
push
call
add
add
imul
in
add
push
add
ret
xlat
into
pop
or
movsb
les
jne
add
incb
add
into
add
jno
mov
jb
jns
mov
add
adc
ljmp
add
call
out
add
in
mov
jbe
add
std
loope
mov
shlb
aad
add
add
call
jne
push
fsub
add
mov
sub
pop
add
mov
push
ror
dec
inc
lea
pop
add
push
push
lea
push
call
add
repnz
lods
add
iret
iret
aam
addr16
fiadds
int
lods
outsl
cld
arpl
push
stos
add
js
push
jp
add
add
addr16
add
in
hlt
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
nop
mov
pop
add
pop
add
add
rolb
xchg
add
pop
xchg
push
mov
icebp
add
pushf
iret
push
icebp
add
add
outsl
mov
shrb
mov
add
add
pop
jnp
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
add
mov
movsb
add
mov
imul
mov
pop
cmpsl
mov
pop
into
fdivrl
add
mov
popf
sahf
add
xor
push
push
push
push
push
push
push
call
push
push
add
lods
lret
add
jecxz
add
add
faddl
mov
add
pop
jl
fstl
xchg
lds
int
add
add
lret
lods
roll
add
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
loopne
jbe
andb
mov
mov
pop
add
push
add
loopne
mov
scas
xchg
roll
add
sbbb
add
stos
test
add
add
fcomps
loopne
push
push
push
push
lea
push
push
push
call
movsl
add
pop
mov
nop
add
add
push
add
add
add
ret
roll
push
add
add
ja
add
popa
out
mov
add
add
add
cld
xchg
testl
in
in
rol
push
lea
push
push
push
push
call
call
mov
stc
add
mov
lock
mov
mov
lret
fcmovu
fwait
push
add
add
shlb
into
jp
rolb
pop
lahf
iret
add
in
in
pop
rol
push
lea
push
call
mov
cmpsl
add
sti
jecxz
pop
enter
add
add
sti
xchg
mov
add
mov
add
mov
enter
xchg
clc
jno
jecxz
add
add
add
add
xchg
xchg
add
add
cmpl
jae
fidivl
add
sub
pop
xor
push
rol
lea
sub
pop
inc
push
lea
push
push
push
push
call
xchg
mov
mov
xchg
add
add
mov
out
jo
in
hlt
add
loope
les
xchg
mov
loop
arpl
pusha
add
jae
arpl
repnz
jne
popa
push
ja
popf
ret
add
push
add
movl
jns
add
fs
add
loope
in
in
pop
cmpb
jne
add
push
push
push
push
push
push
call
add
mov
add
gs
add
mov
add
push
add
data16
mov
jne
pop
add
xchg
push
fsts
add
push
into
add
add
repnz
fildl
inc
or
test
add
lea
push
push
push
call
xchg
add
add
fidivl
mov
push
mov
fwait
add
imul
imul
add
fsubrl
add
nop
add
add
add
out
sub
pop
add
cmpl
jne
push
push
push
push
push
push
lea
push
push
call
int3
int3
add
enter
cwtl
loopne
mov
test
xchg
xchg
add
fs
mov
add
add
scas
add
add
push
pop
add
add
push
add
data16
add
add
sub
pop
xor
push
push
push
push
push
push
push
push
push
push
call
add
testb
movsb
push
add
iret
add
nop
pushf
add
lret
andb
fs
add
lds
in
popa
arpl
icebp
add
in
test
cwtl
add
js
add
add
icebp
xchg
sub
pop
pop
push
sub
rol
pop
pop
push
add
sub
pop
pop
push
lea
xor
inc
pop
pop
push
push
push
push
push
push
push
push
call
add
fiaddl
loop
in
add
test
add
rcl
mov
add
mov
add
add
add
iret
mov
add
aam
out
mov
mov
imul
add
add
add
jnp
add
add
lods
sub
pop
pop
leave
push
lea
dec
inc
pop
ret
push
push
push
push
push
push
push
push
push
push
call
cltd
into
add
jmp
mov
shll
pop
add
xchg
lret
pop
mov
add
add
cmpsb
xchg
fcompl
rcr
add
scas
mov
mov
fwait
jle
add
test
add
add
jo
addr16
xlat
mov
add
in
add
lods
add
enter
add
add
push
adc
push
or
iret
ss
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
call
out
mov
add
add
add
add
add
test
push
add
leave
mov
fldl
les
enter
mov
add
pop
add
imul
jmp
add
add
loop
pusha
into
xchg
push
sahf
push
loope
add
in
lcall
mov
push
adc
add
pop
push
call
push
lea
push
push
call
movsl
movsb
add
add
mov
xchg
in
add
roll
gs
xchg
jmp
stos
mov
mov
rolb
fldl
add
jge
add
in
add
add
je
aam
fadds
lds
testb
mov
incb
mov
cli
add
add
push
lea
rolb
mov
sub
pop
xor
pop
push
add
pop
pop
pop
push
ror
pop
pop
pop
push
xor
dec
shl
pop
leave
push
rol
pop
ret
push
push
push
push
push
call
js
add
xchg
fildll
add
add
push
je
cld
add
xchg
add
xchg
pop
jbe
popa
jbe
je
pop
enter
mov
lods
add
fnsave
xchg
stc
mov
add
enter
add
add
jo
data16
add
fsubs
push
mov
push
push
push
push
call
mov
ljmp
jmp
rclb
pop
add
fsubl
add
bound
test
addl
mov
sarb
stos
add
add
push
add
out
add
nop
add
arpl
lods
add
sub
pop
add
push
lea
push
call
mov
mov
in
add
test
cmpsb
enter
faddl
fwait
jnp
add
add
scas
cli
popf
call
pop
add
test
add
fcomip
add
add
cld
add
sub
pop
push
push
add
pop
push
push
dec
inc
pop
push
push
push
push
push
call
loopne
add
in
push
ja
enter
jno
icebp
mov
ja
xchg
out
add
pop
lock
push
add
add
call
rolb
flds
add
fldl
add
lcall
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
shrl
lds
cmc
add
mov
rolb
fwait
sarl
jbe
add
loope
add
mov
add
push
add
call
test
add
pushf
mov
fcomps
pop
or
das
push
lea
push
push
push
call
mov
add
out
pop
test
add
add
xchg
add
pushf
iret
add
push
jmp
std
in
mov
in
call
lea
push
push
lea
push
call
add
add
add
xlat
add
mov
lret
add
jmp
enter
add
out
xchg
pop
mov
add
lds
add
cmpsl
add
add
add
add
bound
cwtl
jo
roll
lcall
push
cmp
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
iret
bound
lret
cmc
sar
add
insb
js
add
add
popa
pusha
cltd
cwtl
jnp
mov
gs
add
bound
xchg
add
mov
jnp
add
mov
cld
jne
stos
mov
add
lcall
ljmp
jne
shl
sub
pop
shr
add
push
push
lea
push
push
push
lea
push
push
push
call
add
push
out
mov
add
fcom
out
add
jno
addb
jae
add
add
add
jl
add
push
nop
add
add
mov
stos
xchg
push
push
add
std
jbe
pop
mov
mov
mov
add
push
xor
inc
add
lea
pop
pushl
push
pop
popl
push
push
call
fcmovne
xlat
jecxz
mov
add
add
add
xchg
jmp
ljmp
push
add
test
add
add
fiadds
add
add
hlt
int
add
add
add
sub
pop
mov
push
shr
ror
sub
pop
add
xor
push
shl
pop
lea
push
xor
not
add
pop
mov
add
push
ror
not
pop
xor
rol
push
pop
nop
push
lea
push
push
push
call
in
add
push
add
iret
push
add
scas
fsubrs
mov
add
pop
divb
add
add
fstl
iret
stc
add
add
in
fldlg2
add
roll
lock
lcall
xor
push
push
push
push
lea
push
lea
push
push
call
fadds
stos
pop
mov
mov
test
stos
lods
stos
lahf
add
add
pop
pusha
add
pop
lret
call
lcall
push
add
xor
shl
ror
pop
nop
push
pop
inc
nop
push
lea
sub
sub
pop
nop
push
push
call
add
movb
into
add
push
cli
pop
in
lahf
push
mov
mov
lcall
add
add
add
rol
lcall
pop
cmpb
jne
push
not
add
sub
pop
add
push
push
push
push
push
call
hlt
xchg
mov
ret
add
pop
add
mov
add
jns
push
mov
mov
add
gs
add
add
cmpsb
add
jecxz
jne
out
add
mov
add
add
add
addl
mov
arpl
add
add
add
sti
xchg
sub
pop
nop
push
push
push
push
push
call
add
add
test
add
add
add
out
mov
roll
gs
add
add
pop
lret
add
int
icebp
add
fadds
xlat
out
add
jmp
loopne
out
pop
add
int
pop
add
add
leave
outsl
add
mov
add
in
in
lcall
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
jl
add
fiaddl
add
add
xlat
lahf
clc
add
sbbl
add
fldpi
loope
xchg
xlat
add
jno
in
add
int
add
fs
add
add
mov
add
rcll
add
fdivr
lcall
inc
or
test
add
nop
push
add
pop
nop
inc
push
push
push
push
lea
push
push
call
add
jle
fnstcw
cltd
sti
out
roll
add
fiaddl
push
scas
int3
add
push
arpl
lods
sbbb
add
fldl
shl
add
mov
add
add
ljmp
mov
outsl
call
add
add
add
filds
add
faddl
cli
add
push
xchg
sub
pop
nop
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
add
jl
add
fs
rolb
add
sahf
xchg
leave
push
mulb
cmpb
pop
gs
add
mov
ja
xchg
call
int3
iret
add
jl
je
data16
loop
add
add
jb
add
jb
add
mov
in
fdivr
lcall
push
not
add
shl
rol
pop
cmp
jb
xor
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
test
jmp
fiadds
add
add
ja
lret
add
jecxz
lea
lret
add
add
addr16
ljmp
lcall
cmpsl
add
add
mov
nop
sub
pop
add
push
shr
xor
pop
movzwl
mov
push
shr
sub
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
push
add
faddl
lock
call
add
add
gs
rcrb
leave
add
add
lcall
dec
hlt
xor
push
sub
sub
pop
xor
shl
push
ror
sub
shr
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
add
gs
add
add
add
std
jge
test
add
mov
ljmp
add
out
add
into
std
addr16
xchg
call
test
mov
add
cwtl
add
mov
jp
add
lods
rcr
push
push
push
add
mov
in
fdivr
lcall
loope
xor
push
rol
pop
shl
push
add
sub
pop
xor
push
lea
dec
pop
mov
push
push
push
push
push
call
sarl
add
mov
out
lcall
filds
cmpsl
fucomip
cmpsb
jae
add
push
movsl
push
lea
add
insb
add
sarb
scas
fsubrl
int
int3
add
pop
enter
test
in
in
pop
add
pop
push
ror
pop
pop
push
dec
lea
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
in
cltd
stc
xchg
test
int
add
jns
add
pop
add
jbe
add
ljmp
pop
add
jp
out
push
add
incb
add
sub
pop
pop
push
push
push
lea
push
push
push
push
call
repnz
cli
mov
add
cmpsb
std
les
jmp
addl
xchg
leave
fwait
test
xchg
add
mov
add
les
add
stos
add
add
push
out
mov
cld
addr16
pop
leave
push
lea
push
push
push
push
push
call
in
add
add
clc
outsl
sarb
nop
mov
mov
push
shrl
pushf
addl
add
add
popf
jbe
mov
xlat
out
add
fildl
xorb
add
pop
stos
add
add
pushf
add
hlt
fnstcw
call
push
push
push
push
push
push
lea
push
push
push
call
add
mov
mov
je
loopne
add
lods
fsubrs
fucomp
add
add
mov
add
add
add
fstp
add
fcmovnu
out
in
mov
add
add
pusha
xchg
add
jl
std
cmpsl
int3
int
xchg
add
add
add
push
sub
pop
push
push
push
push
call
jmp
add
push
add
into
stc
testl
aam
jno
leave
add
cmc
pop
add
add
arpl
add
hlt
jae
addb
add
add
add
stos
add
lods
mov
add
aad
in
hlt
pop
mov
push
shr
rol
xor
ror
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
nop
add
xchg
jnp
add
add
cltd
sahf
pushf
add
mov
add
add
add
add
mov
add
pop
cld
bound
jle
mov
mov
add
lods
add
popf
xchg
insb
xchg
add
aam
mov
jmp
pop
push
push
push
push
push
push
push
call
aad
popa
data16
divl
addb
lcall
fadds
xchg
add
mov
pusha
add
testl
enter
lcall
add
ljmp
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
loope
add
add
xchg
mov
add
lret
clc
addl
add
add
test
cmc
popf
mov
lahf
rolb
insb
cmpsl
hlt
add
popl
lods
add
add
jmp
add
fcompl
stos
add
sub
pop
push
push
sub
not
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
add
jp
jmp
add
xchg
call
mov
mov
sahf
clc
cmpsb
mov
jnp
cld
jbe
fisubrl
imul
std
hlt
mov
push
xchg
std
lret
into
leave
jmp
lods
add
add
bound
scas
test
push
stos
mov
add
sub
pop
mov
push
pop
mov
push
push
push
push
call
ljmp
iret
test
add
out
pop
push
aam
cld
out
icebp
xchg
add
mov
cmc
add
rolb
add
add
roll
in
mov
std
andl
movb
int
in
lock
lcall
rorb
test
add
push
sub
shr
pop
mov
test
je
push
lea
push
push
push
push
lea
push
push
push
push
call
icebp
add
mov
call
ljmp
imulb
iret
mov
push
stos
add
data16
add
add
add
std
test
cmc
add
xchg
test
add
imul
add
mov
add
add
mov
add
mov
js
add
add
in
fcompl
notl
shl
pop
mov
push
push
lea
push
push
push
push
push
push
call
xchg
add
add
leave
mov
xlat
add
imul
add
jne
stos
mov
add
add
add
in
loopne
lcall
pop
push
ror
add
ror
pop
inc
cmp
je
push
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
add
fwait
jle
add
sub
mov
cld
les
add
std
movsb
in
jbe
jle
cmpsb
add
push
mov
add
js
add
orb
jp
mov
sub
pop
test
je
mov
push
lea
push
push
call
flds
xchg
pusha
movsl
push
xchg
add
imul
mov
xchg
bound
mov
add
jecxz
loop
xchg
add
add
cli
add
push
lea
add
testb
fadds
insb
mov
movsl
add
add
add
aad
mov
stos
sub
pop
inc
cmp
je
push
push
lea
push
push
push
push
push
lea
push
call
addl
add
add
push
xchg
aam
fiadds
movsl
push
mov
outsl
add
scas
outsl
sarl
int3
mov
scas
fdivrl
add
cmpsl
lret
add
push
sub
pop
test
jne
push
add
sub
rol
inc
pop
xor
pop
push
lea
rol
pop
pop
push
shr
xor
xor
inc
pop
pop
push
shl
sub
inc
pop
pop
leave
push
dec
rol
inc
pop
ret
push
sub
not
lea
add
pop
mov
push
pop
inc
push
ror
pop
cmp
jne
lea
push
shl
shr
pop
mov
test
je
push
add
add
pop
mov
push
lea
push
push
call
add
ljmp
add
repnz
add
mov
add
jae
add
pushf
add
insb
js
lret
lcall
pop
add
cmp
jne
push
ror
dec
pop
mov
push
push
push
push
lea
push
call
add
jl
repnz
add
clc
add
add
add
scas
add
add
je
add
mov
add
add
add
add
scas
sub
pop
test
je
push
shr
inc
xor
pop
mov
add
push
shl
sub
pop
cmp
je
jmp
push
push
push
push
push
push
push
push
push
push
call
jle
aad
add
cld
je
scas
fadds
add
bound
xchg
add
fadds
in
mov
pop
add
add
add
jo
addb
push
les
add
test
out
leave
ret
popl
add
push
add
add
xchg
xchg
mov
add
add
add
add
add
pop
xor
push
push
call
add
add
mov
rclb
aam
add
filds
add
xchg
mov
add
add
push
add
add
add
add
add
add
js
add
stc
push
sub
pop
pop
pop
push
shr
pop
pop
push
push
push
push
call
sti
pop
jp
add
add
scas
out
add
pop
int3
xchg
push
mov
mov
ficompl
push
add
cld
test
fs
mov
add
mov
addr16
shll
add
cwtl
add
add
add
pop
leave
push
sub
sub
pop
ret
lea
push
not
rol
pop
pop
push
push
push
push
push
push
call
mov
mov
cltd
lret
add
arpl
iret
add
mov
in
out
add
push
add
add
aam
mov
sub
pop
pop
push
push
lea
push
call
mov
add
add
test
pop
aam
add
add
test
add
fildll
jecxz
add
jns
add
stos
add
add
add
push
jbe
into
in
stos
jmp
add
test
in
hlt
pop
pop
push
inc
shl
not
pop
pop
push
push
call
add
pop
add
mov
add
test
addl
mov
call
fiadds
add
imul
add
add
loope
add
lret
sub
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
push
call
rclb
incb
lea
add
add
ret
add
in
ja
jne
add
push
add
sub
pop
ret
push
ror
add
pop
mov
push
lea
push
push
push
push
call
addr16
mov
in
ficompl
cld
popf
add
mov
push
add
imull
add
leave
mov
fldl
add
push
add
jb
mov
add
add
movsb
add
add
add
lcall
pop
push
add
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
push
jne
bnd
test
add
imul
popf
mov
add
push
cmc
shll
add
add
xchg
divb
add
add
jbe
add
cwtl
sahf
add
jbe
add
negl
add
push
mov
pop
pop
push
inc
ror
pop
leave
ret
out
jl
iret
out
jl
iret
imul
iret
out
lods
lret
iret
out
pushf
iret
iret
or
iret
iret
dec
mov
iret
iret
out
fmul
iret
out
iret
iret
iret
incb
int
in
in
aaa
sub
cld
sbb
dec
or
cs
lds
sub
mov
mov
fwait
cmpsb
xor
mov
pop
push
jno
inc
add
dec
xchg
rcrb
inc
mov
pop
adc
adc
sub
xor
xchg
in
xchg
lahf
mov
ret
rcrl
adc
xor
repnz
mov
lods
movsb
mov
sbb
cli
cmc
lret
pop
mov
fisubs
movl
and
sar
jmp
daa
push
xchg
mov
outsb
push
fsubl
imul
shl
xchg
cmp
aaa
loopne
mov
pop
mov
icebp
ret
lret
pop
mov
cmc
repnz
sub
push
jns
cmp
mov
roll
push
pop
in
add
sub
shlb
xor
insl
dec
push
dec
leave
lcall
ljmp
test
pop
pop
xchg
mov
stos
add
jae
out
clc
inc
out
fnstcw
or
sub
xor
jl
aam
adc
loopne
shrb
mov
inc
je
mov
lcall
scas
dec
push
xor
adc
pusha
shll
pop
je
xor
pusha
push
push
test
xchg
push
lds
mov
push
and
or
imul
push
jb
aaa
rcl
adcb
mov
cmp
push
and
test
iret
lea
xchg
sbb
mov
adc
or
add
mov
pop
pop
ljmp
inc
and
push
push
ret
pop
cs
cmp
in
cli
and
mov
dec
cmp
sub
push
movsl
cwtl
orb
in
and
inc
test
and
aas
push
xchg
fs
out
ds
scas
sub
out
movl
lcall
mov
pusha
fstpl
jo
cltd
cmp
test
out
fdivl
pop
movsl
xchg
ljmp
jmp
push
iret
mov
add
push
fisubrs
cmp
aam
test
xchg
jae
cmc
inc
adc
ret
cmp
mov
repnz
je
imul
pop
mov
mov
pop
fwait
jnp
add
jg
push
mov
incl
sti
mov
stc
mov
dec
pop
jno
jg
addl
pop
xchg
mov
and
inc
and
lods
lods
int3
sbb
or
sbb
jle
aam
xchg
push
stos
addb
or
inc
push
xchg
rcrl
ret
arpl
lds
imul
xlat
xor
out
lea
dec
test
pop
jno
jecxz
xchg
cltd
and
mov
cmpsl
testb
dec
test
ja
xchg
ja
dec
jle
dec
jg
jae
and
pop
inc
daa
rcrb
xchg
outsl
cmp
and
jl
pop
scas
xchg
loopne
bound
mov
daa
and
cltd
mov
stos
loopne
stc
add
je
xlat
idivl
cld
mov
pop
cltd
push
mov
push
dec
loopne
cmp
sbb
addr16
and
insb
filds
adc
nop
test
rcrl
sbb
mov
rol
jnp
push
mov
mov
stos
gs
popf
mov
jns
jp
mov
cmpsb
add
pop
stc
sti
mov
inc
adc
push
imul
xorb
test
push
pop
inc
fcoms
icebp
sbb
stc
nop
pop
int3
cmp
insb
fstps
das
call
test
sti
retw
ret
add
or
insl
sub
repnz
mov
jle
sbb
dec
shl
subb
mov
dec
mov
mov
sbb
mov
jbe,pt
add
leave
or
idiv
imul
adc
xchg
add
out
jmp
iret
add
dec
adc
enter
mov
add
rclb
orl
leave
pusha
sub
and
mov
and
push
pop
sub
scas
ret
xor
fcmovne
out
add
dec
loope
loop
pop
aam
insb
mov
in
cmp
sbb
fiaddl
lods
sub
xchg
mov
lods
push
pusha
fucomp
lea
fdivrl
ror
sub
push
icebp
stc
xchg
and
arpl
push
jb
cmp
adc
popa
push
out
xor
pop
push
and
adc
mov
fldenv
fdivl
add
nop
in
lock
xchg
push
cmc
xor
out
push
pop
pop
scas
jns
or
cmp
adc
or
pop
jnp
inc
testb
push
mov
mov
cmp
adcl
sub
loope
add
mov
int3
sbb
jns
in
aad
jnp
shll
cli
call
sbb
push
ljmp
and
hlt
cmp
sbb
flds
in
lea
lock
and
aas
insb
or
insl
push
inc
gs
dec
lods
cmp
push
clc
cmp
aam
mov
add
mov
mov
jmp
adc
xchg
inc
ret
fsub
shl
icebp
stos
daa
stc
out
jne
ret
pop
pop
mov
jge
rolb
subl
mov
std
popa
cmpsl
fsubs
sub
inc
into
mov
cmpsb
loope
arpl
loopne
mov
and
lret
les
mov
gs
fldcw
loopne
dec
dec
cmp
mov
dec
xchg
dec
enter
in
jge
pushf
fwait
out
jp
adc
pop
push
or
pop
sub
clc
add
sbb
aad
out
loope
arpl
repz
jno
out
or
es
popa
cs
sub
jb
les
push
cmpsl
mov
mov
mov
icebp
xchg
mov
sbb
fptan
rcrl
leave
daa
fstps
push
outsl
jecxz
arpl
cmp
fwait
xor
sub
cmp
hlt
dec
fcoml
jae
les
inc
movl
pop
push
cmp
cmpsb
or
dec
in
jg
lock
imul
jge
adc
or
jmp
je
scas
rorl
sub
or
push
loopne
pop
sub
mov
sub
mov
sbb
aas
cmp
test
xchg
popf
lds
divl
cld
vcvtdq2pd
sbb
cmp
aaa
setbe
add
int
mov
inc
test
int
adc
fsubl
stos
cmp
imul
dec
jne
or
adc
loop
aaa
aam
cmp
push
out
repnz
loop
sahf
or
imul
adc
mov
ja
bound
or
lock
sub
or
mov
jle
pop
out
stc
pusha
mov
int
in
pop
adc
xor
mov
xchg
mov
out
xchg
lahf
les
hlt
cmp
jno,pn
movsl
in
rcrl
call
xlat
push
xor
xor
std
stos
arpl
or
xorl
enter
cmc
push
outsl
jns
loope
dec
inc
call
fwait
divl
into
aaa
pop
add
sbb
popf
inc
sbb
dec
push
xor
lret
xchg
push
ss
pop
inc
add
push
jle
lahf
js
hlt
pop
mov
add
push
jne
adc
mov
out
jp
loop
push
loop
inc
das
and
or
xchg
cltd
mov
aad
jg
lahf
jp
sbb
push
or
mov
divb
xchg
sbb
neg
cmp
pop
dec
push
xlat
stos
lea
rclb
movb
adc
notb
pop
pop
adc
pop
sbb
pop
or
arpl
arpl
sub
push
jp
inc
mov
stc
les
add
jne
into
jne
iret
movsb
sbb
adc
push
stos
push
clc
loop
or
xchg
ret
pusha
out
enter
cmpsl
fwait
adc
outsl
loope
call
cmp
cmpsl
mov
mov
test
sub
mov
add
fmull
std
mov
lcall
jno
jno
xor
mov
icebp
nop
test
jge
loop
sub
mov
xlat
arpl
and
push
fidivrl
fnstcw
adc
xchg
jecxz
repnz
subb
in
mov
aad
mov
mov
mov
xor
inc
xchg
inc
fidivrl
lea
sbb
mov
int3
push
jo
and
cmc
and
dec
cltd
xor
out
add
push
and
lcall
xchg
jae
pop
mov
or
mov
mov
sbb
gs
call
imul
insl
pop
stos
and
les
leave
imul
cmp
inc
cmp
add
cwtl
push
icebp
ret
scas
cwtl
xor
es
imulb
cld
iret
inc
sub
das
pop
scas
xchg
cli
jne
inc
xchg
and
jae
scas
xchg
jno
repnz
je
rol
mov
mov
or
addr16
aam
adc
sub
inc
and
subl
mov
leave
loop
xlat
out
sbb
and
sbb
xlat
add
fcompl
idivb
mov
bnd
adc
jns
lods
jl
shrl
data16
movsl
mov
mov
gs
sub
push
mov
and
aad
sub
mov
loopne
pop
loope
shl
jl
inc
ret
shl
lods
inc
aaa
ret
loop
jl
and
adc
push
or
test
and
nop
sbb
nop
stc
push
daa
xlat
ljmp
jle
bound
add
adc
arpl
mov
test
push
pop
jle
pop
inc
ljmp
add
in
dec
adc
inc
ficomps
testb
leave
xchg
pop
pushf
pop
aaa
adc
test
out
push
dec
scas
shlb
aas
sub
and
pop
pop
or
jle
dec
and
in
inc
jecxz
inc
rclb
add
mov
mov
add
xor
jbe
pop
ljmp
test
pop
mov
jnp
jo
xchg
cmp
jg
repz
mov
and
mov
loop
movsb
scas
sbb
mov
inc
add
mov
xor
lahf
mov
enter
push
lods
movsb
bound
loop
dec
pop
js
mov
mov
lret
mov
cmp
in
arpl
push
mov
inc
enter
pop
cmp
cli
sub
xchg
lret
cld
pop
mov
mov
pmullw
imul
xchg
cmc
cltd
xchg
sbb
dec
lret
std
fbld
jae
es
mov
jne
adc
movsb
out
push
ds
std
sbb
mov
arpl
lcall
and
in
xchg
sbbl
cmp
mov
adc
lcall
cmpsb
lret
stos
test
mov
sub
incb
or
cli
sti
sub
in
mov
testb
cmp
repz
stos
sub
int
add
pop
inc
or
pusha
in
push
arpl
ret
jmp
sbb
in
inc
jne
lock
xor
in
rcrl
fwait
add
push
cmp
inc
mov
testl
movl
sbb
xor
adc
add
lret
xor
xchg
leave
scas
jl
fs
aam
into
push
popf
mov
or
repz
inc
movsl
loope
pop
cmp
dec
orl
shlb
bound
push
mov
fsubp
mov
jg
pushl
sahf
imul
add
push
mov
ficompl
adc
rcrl
push
lret
dec
test
mov
jnp
mov
dec
inc
jle
mov
jmp
rcrb
popf
int3
and
dec
adc
lds
xchg
adc
jae
das
adc
inc
sub
clc
out
pop
cmp
or
inc
test
mov
pop
das
jnp
lods
addr16
jo
fiaddl
xchg
xchg
mov
fstl
dec
stos
pop
in
xchg
xchg
pusha
fisubrl
xchg
mov
push
add
sub
cld
lea
mov
xor
sbb
imul
and
cli
jo
fwait
rcl
stos
and
fildll
addr16
rcrb
clc
ret
jl
add
push
bound
lret
push
loop
inc
mov
jae
lock
xchg
mov
push
inc
aas
popf
sbb
sub
adc
add
cmp
nop
outsl
inc
insl
mov
dec
rorl
mov
sahf
xchg
decl
jge
jge
popf
push
fimuls
xchg
and
jo
stc
lods
fiaddl
pop
sub
jl
xor
xchg
sub
add
sbb
mov
imull
or
pop
jno
leave
in
das
add
shll
xor
jl
leave
mov
outsb
pop
cs
std
push
aad
jns
and
mov
adc
dec
sbb
pop
mov
inc
and
lods
push
or
incb
rol
sahf
int3
iret
lahf
jg
jl
adc
dec
mov
into
mov
lock
push
mov
xchg
outsb
xchg
and
mov
mov
xchg
cmc
cltd
push
jo
int
bound
mov
inc
imul
push
ljmp
insb
adc
popl
loope
shl
test
insl
leave
aam
xor
mov
into
cmpsl
cmp
outsb
mov
test
loop
stc
fists
push
push
shl
lret
imull
fwait
sub
pop
add
adc
dec
mov
mov
xchg
mov
sbb
les
adc
cmp
inc
insl
xchg
mov
int
in
pop
push
dec
scas
adc
dec
mov
cwtl
cli
sbb
popa
or
cmpsb
mov
mov
pusha
pop
jle
sub
jecxz
leave
xor
or
adc
mov
aam
fwait
cwtl
js
and
or
cmp
jmp
mov
daa
pushf
cs
sbb
sbb
popa
fnstcw
fnsave
inc
or
ljmp
les
push
sbb
aad
cmp
in
int
cmp
push
fbld
ja
fcoml
add
pop
lods
fwait
pop
push
pop
stos
add
flds
add
xor
lahf
or
push
mov
arpl
push
cmc
lcall
pusha
pop
fcmovne
push
mov
inc
dec
scas
mov
or
push
xchg
sbb
repnz
jmp
subl
jmp
fwait
daa
jp
adc
dec
ljmp
add
cld
sub
jns
pop
loope
sahf
dec
stc
push
imul
mov
fs
daa
pushf
mov
pop
imul
or
lret
cmc
idiv
xchg
cmp
jae
xor
hlt
or
repz
aam
fstpt
outsb
push
sub
stos
sub
add
sub
nop
or
daa
jmp
push
test
adc
lods
cltd
mov
cmpsl
and
sbb
pop
lret
ss
dec
sub
mov
out
pmuludq
sti
hlt
aas
cwtl
inc
mov
mov
daa
test
push
outsb
aaa
scas
addr16
mov
fstpl
mov
imul
sbb
mov
xor
movsl
mov
sub
testl
pop
cltd
pop
adc
popf
jp
mov
xchg
sahf
fsubp
push
scas
cmp
mov
xchg
enter
push
scas
insl
mov
ss
mov
inc
jg
shll
std
mov
hlt
imul
in
and
repz
rclb
lock
xor
or
sbb
aam
data16
pop
adc
adc
mov
adc
push
jb
ret
push
add
lods
push
pushl
push
popa
push
pop
hlt
adc
shrb
jnp
mov
popa
or
rcr
fsubrs
jb
in
addr16
mov
sub
rdmsr
test
dec
sbb
pop
test
dec
aaa
xchg
lcall
imul
inc
xor
sbb
lock
roll
outsb
mov
sbb
pop
jns
inc
jg
xchg
and
push
xchg
push
jae
cmp
cmp
xchg
jo
dec
dec
and
in
push
xor
dec
jmp
xchg
xor
mov
rclb
dec
loop
add
ja
push
fcoms
sub
mov
in
jmp
lea
fcoml
or
mov
cmc
lret
loopne
xchg
addr16
aam
addb
into
adc
push
rcrl
loopne
inc
adc
push
jge
leave
int3
mov
fs
daa
mov
push
jecxz
idivb
test
icebp
jno
aam
lahf
xor
jns
testb
fisubrl
pop
or
int
sbb
jns
lods
and
jne
test
xor
pop
xchg
repnz
fcom
sahf
in
test
jl
push
ss
dec
imul
sub
test
xchg
mov
xchg
je
outsl
mov
call
lret
xor
cwtl
cmp
inc
xchg
rcrb
aas
push
inc
imul
call
pusha
imul
or
frstor
mov
lock
lahf
push
pop
sub
int
jo
adc
inc
adc
fbstp
pop
sub
pop
insl
out
rol
push
pop
mov
inc
jp
xor
xlat
xchg
push
icebp
mov
mov
rcll
frstor
stos
inc
shrl
loope
mov
out
cmp
inc
push
xor
loopne
es
fnstsw
dec
in
iret
out
push
mov
xlat
mov
es
fs
dec
ret
ss
fstpt
xlat
sbb
into
mov
sbb
js
mov
pop
jge
xchg
icebp
sub
jmp
jbe
imul
jno
mov
mov
xchg
mov
gs
push
stos
roll
imul
xlat
xchg
sbb
or
sti
das
xchg
or
adc
mov
mov
jne
cmp
cmp
mov
and
les
sbb
sahf
addr16
jl
outsb
pop
mov
jns
nop
xor
sub
negl
jl
es
in
mov
fsubrs
push
mov
xor
loope
jb
sbb
lcall
int
fsub
ss
jne
je
nop
adc
and
or
testl
icebp
test
lea
scas
mov
ret
sbb
fsubrp
sti
sub
cli
xor
test
in
push
arpl
cld
pop
leave
popa
pop
lret
push
pop
mov
stc
adc
jmp
mov
pop
cmpsb
sbb
insb
and
add
fcomps
xor
popf
xor
stos
mov
push
les
cwtl
rcl
inc
pop
ret
cmp
fs
dec
push
sbb
pop
outsb
shll
aad
cmp
nop
test
inc
sti
dec
push
arpl
lea
ljmp
out
loopne
out
push
inc
adc
lock
cmp
sub
lock
imull
cmp
pushf
sti
out
jne
mov
mov
pusha
adc
adcb
push
mov
xor
push
loope
xor
cmc
sub
lock
cld
popf
shl
outsl
xchg
roll
jg
out
xor
inc
sbb
mov
push
xor
lret
push
sahf
push
jecxz
mov
add
popf
into
call
mov
mov
xchg
xor
dec
enter
jae
xchg
jb
iret
js
mov
mov
mov
mov
or
inc
imulb
dec
js
test
cmp
ljmp
imul
dec
test
and
stos
and
mov
jno
mov
sbb
iret
das
jnp
dec
imul
xchg
pop
lcall
movsb
add
into
movsl
ret
add
cmp
pop
shll
imul
imul
lret
fdivp
jle
xor
xor
mov
mov
mov
das
out
pushf
scas
push
subb
sub
sbb
sahf
clc
jl
mov
outsb
paddusb
iret
and
push
sub
mov
dec
decl
rolb
lahf
cmpsb
cmpsb
leave
and
add
fistl
push
daa
mov
cmp
clc
lahf
add
rol
jl
sub
cmc
xchg
mov
mov
push
rolb
xchg
sub
xchg
lock
push
pop
mov
cmpsb
mov
or
test
mov
test
loope
test
add
xchg
or
xorb
mov
jns
int3
sbb
je
push
ja
xlat
and
inc
lret
orb
jmp
cmpsl
push
mov
jbe
inc
das
adc
inc
ficoml
repz
cli
je
xor
jp
or
mov
lods
and
test
in
test
sarl
das
sub
out
fwait
cld
sub
and
dec
mov
mov
pop
fldl
pop
jae
std
mov
cli
and
mov
pop
mov
pop
and
lods
cld
test
adc
xor
nop
lretw
fcomps
in
xor
loopne
sub
pop
mov
jne
mov
jae
xchg
aad
gs
cmpl
scas
test
pop
clc
popf
push
adc
push
gs
push
adc
mov
mov
push
push
xchg
or
icebp
movsl
enter
into
and
pop
push
lds
subl
int3
sbb
sbb
jp
scas
outsb
push
or
sar
cmp
in
pop
mov
push
sbb
xor
dec
sbb
push
movsb
js
jecxz
nop
and
cmp
and
pop
testb
mov
mov
xchg
add
lcall
inc
sbb
sbb
ljmp
xlat
mov
repz
inc
mov
dec
mov
mov
gs
movsb
ret
cmp
mov
pop
dec
movb
cmp
stc
mov
pop
cld
imull
int3
push
sbb
cmp
lods
jl
insb
popf
add
xchg
push
jle
mov
cmpsb
mov
jl
pop
sbb
loopne
mov
in
push
xchg
cmp
inc
lds
pop
or
in
or
in
out
dec
imul
popl
mov
add
es
gs
jmp
cmp
push
jb
mov
mov
call
inc
lret
and
insb
fsubr
jae
lock
inc
decb
jg
out
popa
lock
jecxz
lret
sbbl
jmp
clc
sub
jns
ret
pop
cltd
push
pop
test
or
push
pop
xchg
jge
add
stos
push
sbb
push
stc
adc
xchg
sub
rcrb
outsl
pop
mov
les
add
inc
pop
and
pop
mov
insb
sub
das
pop
aam
outsb
loopne
pop
sbb
mov
jg
inc
popa
shl
hlt
adc
scas
jp
and
roll
jmp
in
data16
fisubl
push
xorb
mov
repz
and
ljmp
xchg
ja
fwait
dec
sub
notl
or
xchg
mov
test
xor
mov
push
rcr
test
movsb
in
sub
mov
sbb
add
je
repz
push
mov
cmp
mov
jg
notl
out
jg
mov
repnz
insb
fnstcw
cmpsb
out
push
stc
call
and
dec
notl
push
popf
sbb
cmp
adc
in
xchg
aad
lods
jne
mov
sar
add
push
cwtl
jl
rclb
jne
bound
push
outsl
mov
cmp
seta
cmp
lea
adc
mov
pusha
out
and
push
repnz
cltd
imul
fst
mov
mov
xor
ljmp
int3
fadd
inc
add
inc
pop
push
push
ja
adc
dec
xor
cmp
or
mov
adc
pop
mov
std
cltd
add
dec
rcrb
jbe
loope
ja
popa
add
sahf
aad
mov
mov
adc
xchg
repz
test
sbb
orb
ret
pop
pop
cmpsl
fists
and
incb
jp
je
stos
cwtl
out
mov
pushf
lds
adc
rol
mov
jmp
test
sti
mov
data16
jbe
sbb
popf
xchg
sub
mov
int
rorl
add
ljmp
subl
cld
xchg
dec
jbe
aam
xchg
mov
mov
repz
test
jmp
aad
out
xchg
sbb
int
mov
into
pop
push
in
das
inc
pop
scas
in
inc
into
packssdw
adc
lds
mov
cmp
jl
test
push
pop
pop
push
fs
mov
pop
mov
mov
or
stc
fwait
push
sbb
test
repnz
insb
mov
je
mov
mov
insb
cmp
sbb
movsl
dec
ss
repnz
cli
int
aam
and
ret
xor
loop
loope
in
les
mov
insl
jae
sub
sarl
arpl
mov
mov
add
inc
rcll
nop
fidivrs
out
in
imul
xchg
mov
inc
adc
xor
xor
data16
out
pop
cmp
daa
movsb
sub
gs
ret
push
out
xchg
out
pop
pop
mov
cltd
add
cmpsl
out
aam
and
xchg
clc
cs
push
gs
clc
in
xor
sbb
and
orb
sbb
aad
std
insb
lret
adc
sub
mov
sti
fisubrs
ret
pop
xchg
jp
push
imul
sbb
pop
mov
cmc
outsb
mov
insl
inc
jno
test
xchg
dec
xor
xor
insb
in
jo
or
icebp
inc
ljmp
js
popf
pop
jg
lock
shr
movsl
mov
clc
xor
xlat
and
loopne
pop
in
ljmp
imul
fwait
sbb
data16
dec
popa
cld
test
xchg
out
xor
repnz
push
cmp
adc
fsubl
rol
orb
jnp
and
adcl
mov
sahf
ja
dec
jno
out
and
mov
push
test
xor
idivl
add
fstl
stos
leave
lods
cmp
sbb
adc
push
inc
ljmp
pop
push
insl
xchg
dec
out
sti
pop
pop
mov
and
lcall
jecxz
lahf
stos
xchg
dec
mov
stc
pop
adc
lods
inc
mov
pop
mov
mov
and
mov
leave
mov
gs
push
imul
mov
or
dec
sarb
mov
mov
test
ss
and
movsb
stos
add
test
shlb
lahf
cmpsb
lods
outsl
lds
mov
shrb
mov
cmc
dec
aas
mov
jns
adc
mov
push
fwait
out
and
das
dec
dec
out
push
jae
hlt
dec
icebp
scas
imul
xor
repnz
sub
sbb
sub
out
out
test
cmpsb
sbb
push
nop
les
add
add
or
aad
cmpsl
scas
rorb
jbe
fmull
mov
mov
mov
rcl
idivb
popa
dec
or
jo
add
sub
or
das
outsb
ret
scas
js
jmp
jle
fwait
int3
stos
shrb
ljmp
fimull
sub
ja
mov
sub
movsl
sub
dec
mov
out
mov
mov
push
inc
or
jmp
jp
cmc
pop
fwait
or
xchg
gs
mov
xchg
jnp
ja
jo
jp
adc
mov
fists
inc
fs
scas
adc
inc
std
stc
mov
jecxz
sbb
repnz
gs
fnstenv
pop
leave
inc
cmc
clc
jo
sub
adc
aaa
scas
test
and
sahf
push
push
pop
test
xlat
movsb
out
int3
scas
push
inc
add
mov
add
loop
test
outsb
arpl
sbb
adc
outsl
add
out
fwait
mov
adc
inc
xchg
ret
test
ror
dec
mov
dec
icebp
bnd
pop
int3
mov
push
leave
call
mov
jle
push
push
insl
imul
and
rclb
and
les
pop
push
cmp
in
cwtl
fcom
jb
add
mov
js
cmpsb
in
addb
ret
in
scas
xchg
pop
fsubr
and
jno
mov
mov
addr16
repz
xchg
mov
xchg
cmp
fwait
cli
test
rorl
lods
mov
ja
clc
add
ja
cmp
in
shrl
mov
fildl
int
jae
mov
jno
js
xor
cmp
jge
aaa
push
lahf
mov
outsl
aam
xchg
push
mov
xchg
xchg
xor
movsb
daa
adc
ds
out
sub
rolb
or
or
fimull
stc
adc
jae
mov
sbb
inc
or
jle
mov
mov
loopne
fistl
sbb
icebp
mov
adc
jl
adc
xor
pop
xchg
sti
pop
test
test
call
insl
imul
mov
les
loop
sub
pop
cmc
jno
divb
mov
mov
jmp
adc
cmpb
lret
or
dec
int3
pushf
fwait
mov
cs
cmpsl
clc
imul
lods
or
adc
pop
jecxz
push
jnp
xchg
mov
mov
ret
sub
lds
dec
mov
inc
mov
je
inc
fstpt
xchg
mov
xor
push
mov
outsl
ss
dec
cmpsb
jmp
cmp
out
lock
clc
jbe
sub
rol
push
inc
sar
push
push
nop
xchg
mov
loop
in
inc
inc
xchg
in
subb
js
scas
sbb
cmc
ret
lods
iret
int3
bndstx
pop
frstor
mov
cld
icebp
add
sbb
cld
in
mov
cmpsl
cli
sbb
aam
adc
pop
ds
jle
clc
fimuls
mov
int3
mov
addb
shlb
add
xchg
sbb
in
mov
imul
cmc
lea
rclb
pop
pop
daa
lds
xor
mov
je
je
adc
int3
rcrl
fnstsw
pop
xor
mov
sbb
pop
lret
mov
nop
imul
test
outsb
mov
in
xlat
scas
xchg
cmp
jle
pop
xchg
lock
push
sahf
jge
mov
jecxz
outsl
sub
iret
push
xchg
shlb
cs
je
jno
das
pop
in
xor
outsl
mov
or
dec
mov
mov
add
push
xor
es
test
sti
ja
dec
in
adc
inc
subl
jno
sub
push
inc
cmpsb
sbb
fstl
mov
loope
inc
sbb
sbb
push
mov
pop
cmp
fldenv
mov
sub
outsb
cltd
fnstsw
jge
jmp
outsb
fwait
pop
aam
cmpsb
ljmp
repnz
inc
or
xchg
jl
mov
outsl
push
add
mov
leave
xchg
cmp
cmc
xchg
sub
outsl
xchg
imul
pop
sbb
pusha
pop
je
cmp
push
out
fstpt
mov
mov
ret
sbb
mov
ror
ss
sub
dec
push
repnz
cltd
test
das
jmp
rcl
in
or
pushf
cmpsl
push
lea
jne
push
int3
mov
lock
sub
lahf
ss
and
prefetchnta
mov
movsl
or
inc
add
stos
outsl
inc
pop
cmp
jle
idiv
push
sbb
xchg
mov
leave
push
sbb
jecxz
and
lea
and
es
mov
push
xchg
lods
aas
xorl
popa
mov
cmpsl
and
dec
movsl
mov
cli
out
insl
jno
out
sti
push
sbb
repz
dec
push
jp
jg
sbb
test
sub
addb
xor
les
fimull
cmp
enter
arpl
inc
iret
leave
xor
incb
int
lods
fmull
adc
popf
push
mov
dec
dec
clc
jb
xchg
mov
inc
mov
mov
jp
aas
or
add
sub
pop
mov
inc
in
out
clc
xchg
daa
mov
push
je
mov
sub
fsubs
mov
cwtl
adc
xor
xchg
cmp
mov
xor
adc
pop
mov
mov
mov
push
cmp
and
jp
xchg
outsb
mov
lret
out
mov
lahf
ficompl
loop
loope
out
mov
dec
ret
in
lods
or
fcomi
shll
dec
push
or
cmp
or
pop
ljmp
out
in
cmpsb
xchg
and
cli
bound
and
sbb
and
loop
loope
and
cmp
xor
outsl
adcb
je
xor
negl
jae
xor
imul
in
or
std
clc
insl
dec
dec
xchg
jl
and
mov
out
stos
adcb
pop
andb
jmp
lret
and
and
mov
lds
jns
pushf
push
push
jge
dec
push
jecxz
jnp
mov
loopne
dec
cmp
clc
adc
dec
loop
psllq
sbb
xlat
stos
push
popf
fsts
shrl
in
pop
mov
dec
xchg
fdivrl
sbb
aad
add
mov
xchg
sbb
push
lcall
dec
mov
lahf
lods
fimull
into
adc
xchg
and
cmpsl
cmp
push
mov
jnp
in
lcall
or
dec
xor
xchg
cmc
sar
lahf
or
mov
xchg
sbb
and
pop
inc
mov
lds
cmpsl
adc
ljmp
push
sub
dec
divb
xor
je
cli
das
jnp
icebp
mov
dec
jnp
vxorpd
fidivrl
int3
add
andb
lods
push
ss
scas
bnd
push
cmp
lea
decb
enter
movsb
or
xlat
cli
aad
mov
mov
xchg
es
jns
mov
gs
sub
fadd
je
sub
aam
fisubrl
insl
inc
mov
cmp
out
cmpsl
adc
jecxz
into
xor
or
lahf
mov
gs
xchg
inc
or
sbb
enter
leave
sbb
jecxz
and
pop
mov
je
dec
ret
not
mov
jg
insl
fst
imul
cmp
jge
pop
or
sar
mov
cmpsb
bound
ljmp
popa
mov
inc
pusha
push
inc
ss
dec
cmp
imul
jg
cmp
mov
lret
mov
and
lcall
into
xchg
jge
fnstenv
insl
outsl
jle
push
movsl
or
outsl
push
push
or
cmp
loop
imul
mov
mov
cmpb
sub
jbe
dec
jge
test
jo
or
mov
push
mov
inc
stc
dec
cmp
push
aaa
int3
dec
les
and
and
pop
outsl
repnz
adc
stos
fadd
push
bound
into
add
fdivl
stos
push
push
mov
je
sub
arpl
adc
jns
dec
mov
push
subb
push
ficoml
inc
std
push
cmp
rclb
xchg
les
adc
pop
and
jnp
dec
js
in
mov
jmp
outsl
sub
xor
lods
rolb
in
fdivrs
push
or
pop
mov
popa
lock
mov
push
mov
jbe
jecxz
lods
loope
pop
sbb
fnsave
push
and
or
andb
aad
mov
mov
lds
test
jo
xor
or
pop
fidivrs
xchg
xchg
sahf
pop
adc
test
jae
testb
clc
gs
and
insb
adc
into
popa
xchg
xchg
push
insl
mov
and
and
cs
sub
xor
lea
mov
cltd
aam
sub
outsb
mov
add
jecxz
inc
aas
mov
and
xchg
call
cmp
jmp
aad
stos
add
repnz
jg
inc
mov
inc
dec
rolb
aad
mov
mov
ret
daa
scas
adcl
imul
jle
popf
sbb
fistl
mov
xchg
test
in
clc
add
cwtl
out
add
ret
cmp
dec
push
jns
inc
mov
cs
pop
sahf
add
cli
repz
fnstcw
add
dec
cwtl
mov
or
xchg
mov
or
xchg
dec
cmp
repz
outsl
nop
and
fwait
leave
mov
test
sub
mov
ret
push
push
jmp
mov
inc
jmp
add
mov
in
sbb
loop
push
std
jge
adc
iret
jp
mov
mov
je
push
mov
movsb
mov
xor
insb
and
jmp
xchg
addr16
push
shrl
lahf
sbb
stos
dec
loopne
mov
jl
mov
shll
enter
xor
int
in
pop
inc
mov
cld
pushf
fs
pusha
in
in
mov
pop
imul
xor
xor
int3
add
test
ds
mov
outsb
add
xchg
stos
sub
test
xchg
and
iret
cmc
jecxz
jae
jp
lods
inc
movsl
into
adc
sub
addr16
insb
add
push
pop
addr16
sub
daa
mov
pop
pop
scas
int
dec
in
in
gs
xor
cmp
xchg
or
jmp
fimull
mov
movsb
aaa
pusha
pop
pop
pusha
dec
sub
cwtl
pop
pop
loope
dec
dec
jnp
lret
loope
insl
stos
dec
mov
lahf
imul
call
push
jecxz
add
aad
lock
sub
and
mov
lret
mov
aam
push
jb
test
and
jbe
inc
push
pop
mov
mov
mov
mov
loop
test
pop
add
and
add
pushf
pop
call
fxch
lods
mov
and
or
mov
jp
push
mov
push
out
dec
cmp
inc
loope
dec
inc
mov
js
or
pop
clc
jns
loopne
inc
add
mov
dec
andl
std
push
hlt
aaa
mov
push
insb
mov
mov
dec
repz
addr16
lods
jmp
pusha
inc
sub
jp
mov
jno
adc
lock
inc
cmp
fdivp
mov
adc
mov
mov
out
push
rorl
ds
lret
sub
lock
imul
cli
out
leave
mov
mov
loope
ror
or
bswap
pusha
dec
jns
sbb
inc
xchg
aas
out
in
dec
mov
jns
and
inc
std
bound
mov
out
in
cmpsb
sbb
mov
aas
cmc
or
std
xchg
sub
rol
shrb
aas
mov
or
ret
int
imulb
test
push
sbb
loop
bound
adc
dec
movb
imulb
subb
mov
dec
cmp
and
adc
jnp
mov
jmp
popa
mov
popa
js
adc
inc
inc
pop
les
fcoml
inc
push
push
xchg
mulb
sub
mov
mov
jg
jle
into
fwait
push
imul
out
pop
pop
fsubr
push
cmp
inc
dec
mov
data16
cltd
inc
xchg
das
pusha
shl
inc
sub
mov
shlb
mov
or
jmp
insl
mov
fiadds
mov
mov
mov
je
lock
pop
popf
cmpsl
dec
enter
fildl
xor
sub
xor
stos
sbb
sub
cmpsb
add
jg
repnz
out
aad
outsl
xchg
jg
stos
lods
jp
inc
test
gs
out
mov
push
insl
adc
xor
or
pushf
and
inc
dec
lea
mov
push
add
cli
xlat
rcrb
cmpsb
stos
lods
loope
inc
pop
xor
push
or
pop
dec
sub
cmp
or
mov
bound
jnp
pusha
popa
repnz
ljmp
push
xchg
ret
pop
les
das
mov
dec
and
fbld
xchg
out
sbb
test
ss
in
xchg
pop
call
shl
cli
adc
cmpsb
and
mov
out
jns
adc
xchg
sbb
xchg
and
sbb
pop
cmpsl
add
andb
mov
xor
scas
push
daa
imul
imul
cmp
orl
daa
test
out
cmpsl
mov
out
push
add
xchg
push
xor
inc
and
push
in
adc
and
icebp
fiadds
aad
xlat
add
push
movsb
sahf
mov
cmp
scas
call
aaa
xor
adc
in
iret
fistpl
decl
dec
loop
addr16
shlb
sbb
cmp
das
pop
pop
hlt
scas
push
pop
xchg
cld
out
xchg
jnp
aad
push
mov
mov
pop
mov
lock
and
nop
ja
test
dec
push
dec
out
xchg
adc
xor
das
repz
in
iret
jmp
and
mov
push
and
in
outsb
sbb
in
outsl
popa
out
movsb
adc
adc
sbb
mov
mov
stc
dec
mov
test
cmpsb
mov
cmp
add
cmp
sti
aam
mov
insb
jns
cmc
inc
sub
mov
outsb
cmpsl
leave
dec
add
xor
call
mov
sub
sbb
cs
xor
lcall
pushf
or
push
mov
push
pushf
fldcw
popa
mov
ret
mov
push
movsl
fsincos
fldcw
cld
mov
sbb
sti
cmp
repnz
sbb
jecxz
cs
mov
out
ret
pop
mov
xchg
add
loope
sub
jo
fsubrp
aam
sub
push
cmp
mov
sbbl
mov
jae
adc
cld
scas
lods
jmp
fnstenv
mov
lret
mov
daa
ret
fistpll
push
daa
pusha
std
mov
inc
imul
mov
fucomi
cs
xor
loopne
xcrypt-cbc
cmpsl
adc
imul
movsl
mov
pop
aad
outsb
in
jmp
inc
xchg
add
aam
addr16
xor
pop
enter
mov
jmp
cmpl
jo
adc
fldenv
push
push
and
mov
aam
push
call
push
pop
jae
lahf
jp
dec
out
push
add
add
sbbl
aas
or
shl
out
imul
lret
and
stos
iret
adc
or
lods
shl
shlb
hlt
or
mov
cmovno
jb
mov
fadds
rolb
pop
pop
in
insl
aad
mov
aaa
cs
mov
cmp
cmp
ljmp
xchg
dec
ljmp
and
add
fidivl
into
insb
dec
and
jg
xor
xchg
pop
sbb
fucom
or
jbe
mov
cli
dec
mov
fadd
lods
cwtl
lcall
call
aaa
test
hlt
pusha
cld
mov
sub
cmpsb
into
push
adc
cs
adc
je
stc
mov
addr16
hlt
orb
outsb
jge
cmp
in
lods
cwtl
mov
scas
cmp
lods
fmulp
aas
shrb
jecxz
cmp
incb
dec
fadds
loop
jg
ljmp
adc
jo
call
mov
cs
xlat
push
inc
jns
lods
dec
add
and
push
pop
push
fcomps
in
cmp
leave
and
xchg
mov
adc
xor
outsb
and
ja
mov
stos
pop
and
movsb
test
and
aaa
pop
fimull
inc
orl
lods
add
int3
fcmovnb
das
pop
adc
test
sbb
sbb
xchg
rcr
mov
pop
mov
adc
mov
add
lods
dec
xchg
arpl
lods
jae
jns
icebp
sbb
mov
inc
xor
rcr
sbb
or
lahf
lcall
xchg
and
xchg
test
rol
inc
pop
xchg
dec
push
cmp
adcl
bound
adc
or
xor
insl
in
cs
fildl
and
cmpsl
xor
sbb
push
push
pop
fimuls
or
mov
mov
mov
cltd
dec
roll
jmp
inc
mov
hlt
pop
sahf
pop
fmull
adc
and
insb
dec
mov
sbb
pop
inc
ds
dec
pusha
jmp
lods
outsb
sarb
pop
mov
xchg
negb
sbb
inc
pop
in
and
cmp
aam
jno
and
jb
pop
ja
cwtl
mov
imull
aas
sti
out
lods
bound
jno
popf
sbb
ret
pop
dec
out
sub
sbb
mov
popf
lahf
icebp
pminub
xor
xchg
sbb
dec
clc
xlat
push
idivl
jno
jnp
in
jg
popf
shrb
mov
popa
in
adc
imull
loop
lret
add
ds
out
in
pop
sbb
nop
mov
in
cmp
dec
mov
and
mov
and
push
push
mov
xchg
aas
notb
leave
sbb
inc
sub
in
repz
pop
jp
mov
xchg
xchg
aas
lods
and
std
mov
enter
jmp
scas
std
out
cmc
pop
aaa
loope
fistpll
sbb
cmp
add
ja
in
adc
cmc
mov
cmp
dec
xor
fildll
mov
ret
bound
sub
mov
repnz
jle
cmp
add
orl
fsubrl
xchg
loopne
mov
jb
dec
jmp
adc
xchg
adc
jg
inc
jbe
xchg
lcall
adc
arpl
adc
int3
dec
inc
pop
sahf
mov
stos
inc
popw
mov
adc
xlat
sub
stos
leave
int3
mov
xchg
enter
or
stc
push
inc
dec
cmp
jno
shr
aam
inc
sub
jbe
lods
jb
jl
xor
pop
ljmp
ljmp
incl
mov
xlat
mov
add
iret
jns
xchg
dec
sbbl
das
mov
pop
cmc
rorb
pop
test
testl
movsb
push
aam
aad
popa
mov
mov
adc
es
ds
out
pop
xor
lcall
or
shr
sbb
jo
push
adc
adc
dec
movsb
je
mov
mov
and
inc
sub
not
cmp
mov
push
fcomps
mov
inc
dec
in
sbb
or
fisubl
and
cs
lea
flds
or
push
inc
cmp
mov
sub
mov
mov
cmp
dec
imul
repz
cmp
in
pop
addr16
das
bswap
push
lods
or
dec
xlat
mov
mov
pop
sub
rcrl
nop
cli
adc
rol
leave
dec
jb
lahf
and
aam
outsb
jnp
mov
and
inc
ljmp
ljmp
cmpb
and
sub
inc
push
shl
xchg
iret
pop
loope
inc
cwtl
aas
or
aas
xchg
dec
sub
and
mov
addr16
add
mov
mov
leave
inc
cmp
imul
sti
jl
inc
out
mov
cmp
adc
pop
pop
mov
scas
pusha
in
cmp
movsb
movsl
inc
mov
outsl
inc
or
dec
cmp
and
jle
add
loope
jecxz
mov
cmp
nop
mov
js
ret
mov
mov
rcr
negl
arpl
fwait
mov
pop
lds
rcrb
ret
mov
sbb
mov
xchg
push
test
inc
hlt
push
or
iret
ds
and
outsb
loope
push
xchg
dec
jg
jge
movsl
cwtl
or
js
repnz
shl
leave
divb
ret
dec
dec
inc
mov
jo
iret
out
mov
jae
jo
aas
mov
prefetch
sbb
shlb
test
test
je
pop
aas
lret
cli
loop
sbb
inc
jge
les
cs
out
xor
xchg
loope
aaa
mov
sub
push
loope
sbb
xor
pusha
loop
out
mov
xchg
xchg
out
notb
in
mov
add
into
cwtl
stos
adc
cmpsl
push
mov
movsl
or
jb
jecxz
movsl
imul
mov
daa
fnsave
and
jmp
stos
sub
scas
bound
test
rorb
outsb
sbb
test
xchg
ret
jge
roll
insl
inc
stc
cmpsl
out
jo
out
add
xor
push
mov
cmp
scas
and
repnz
stos
jbe
mov
push
cs
jb
fldenv
push
jae
mov
mov
movsb
sub
inc
lods
das
xchg
jns
cltd
jl
jl
mov
movsl
aas
or
das
cmp
mov
push
or
jecxz,pn
push
insb
adc
mov
and
or
cpuid
enter
xchg
into
jp
pop
push
repz
pushf
js
movsl
mov
xchg
cwtl
xor
pop
pop
pop
inc
or
test
push
add
sbb
adc
sbb
into
adc
mov
loope
pop
and
rolb
xchg
cmpsl
pop
sbb
inc
outsl
jge
lret
in
lods
cmpl
xlat
sub
es
push
adc
sub
mov
jmp
popf
mov
stos
mov
push
out
lds
pop
jmp
lds
add
xchg
fisttps
test
repz
mov
std
mov
jle
xor
mov
loope
inc
lahf
and
mov
and
push
insb
movsl
cld
cmc
xlat
xchg
es
repz
mov
fistps
inc
adc
lahf
ret
push
test
imul
push
jno
out
inc
out
jge
push
add
mov
push
jno
mov
push
mov
stc
insl
add
ja
add
lds
xor
imul
imul
scas
in
dec
push
fwait
sarb
insl
mov
jo
cmp
sbb
pop
xor
arpl
jo
cs
mov
out
or
shr
mov
data16
push
pop
mov
into
cwtl
xor
stos
lret
sahf
dec
push
stos
or
adc
je
mov
push
adc
lret
push
nop
or
and
lret
pop
subl
mov
sub
add
inc
xor
lret
sub
test
sub
add
rorl
shl
xor
push
repz
sti
xor
out
iret
adc
mov
and
and
dec
inc
cld
xchg
loopne
sahf
call
mov
mov
jge
not
sub
or
outsb
jnp,pt
xbegin
jns
pusha
push
or
in
mov
andb
push
mov
xchg
mov
adcb
mov
shl
xchg
jle
dec
jns
mov
cwtl
ret
xchg
rorb
sub
test
jge
xchg
xor
dec
jb
out
inc
outsb
pop
into
mov
int
icebp
mov
ret
dec
xchg
sbb
popf
int
add
iret
cmp
jmp
jecxz
mov
cltd
inc
cmp
adc
mov
loope
jecxz
inc
mov
imul
xor
out
push
or
arpl
or
dec
sbbl
fsubs
lods
cltd
or
mov
mov
cmp
cwtl
pop
shrb
adc
mov
xchg
jecxz
push
inc
mov
jecxz
cmp
fistl
jnp
inc
dec
mov
test
test
dec
fldl
adc
sbb
add
sbb
xchg
sbb
or
push
popf
daa
xchg
ss
cmp
ja
mov
out
divb
addr16
es
loope
ljmp
test
xrelease
stos
jnp
or
pop
ror
inc
mov
pop
sbb
mov
sub
xlat
cmp
pop
push
icebp
inc
mov
rcr
imul
xchg
es
xor
int
inc
cmp
push
ljmp
dec
leave
jp
xchg
test
jne
arpl
imul
nop
scas
in
and
cmp
fnstsw
scas
pop
mov
mov
iret
lcall
jecxz
and
jno
aad
out
fldl
mov
ficomps
stc
or
ss
push
add
cmpsb
fs
outsl
pop
jg
or
pop
sub
cli
adc
sbb
xchg
div
or
ss
sub
icebp
mov
sbb
jmp
jo
adc
cmp
jns
pop
out
ss
ljmp
daa
rclb
dec
sub
adc
sarl
push
lret
add
push
cmp
addr16
dec
mov
lods
aaa
jno
fsubs
shlb
xlat
push
lea
fcomp
lret
sub
in
add
dec
jae
pop
std
fldcw
xor
outsl
cmpsb
xlat
mov
repz
xor
and
into
jg
dec
mov
fnstsw
xor
into
pusha
mov
jb
ror
mov
pop
test
inc
add
mov
or
fdivr
fwait
add
outsb
test
ret
xor
adc
lods
push
repnz
das
cltd
ret
xchg
xchg
ljmp
dec
fdivs
mov
sub
js
enter
jae
inc
add
fisubl
scas
int3
mov
sti
sbb
addr16
mov
loope
cld
roll
jmp
aam
into
dec
pushf
scas
push
leave
outsb
push
cmp
mov
sub
fldenv
sbbl
ds
and
add
xchg
dec
cmpsb
adc
pop
outsl
xchg
dec
aam
xchg
jb
mov
pop
fstpt
aad
jb
cmp
jecxz
jecxz
fwait
mov
fwait
jg
jl
inc
ret
push
mov
inc
and
test
mov
fscale
scas
lahf
fcompl
push
rol
mov
mov
push
push
ds
or
mov
std
inc
pop
stos
sbb
aas
fwait
dec
jnp
clc
ret
insl
sub
adc
popa
or
arpl
cmp
testb
jnp
push
dec
cmp
inc
fwait
jge
jle
mov
out
adc
xlat
cmp
add
insl
push
jecxz
pop
push
nop
mov
test
leave
daa
cmpsb
and
loope
xlat
jecxz
xor
dec
imul
add
and
push
insl
jbe
ja
adc
inc
pushw
jb
je
pushf
js
jle
xlat
xchg
stos
jp,pn
int
movsb
mov
dec
lcall
out
mov
out
mov
jb
test
repz
push
sub
scas
test
lmsw
fisttpl
ds
sarb
ds
adc
push
add
jne
jge
inc
add
ds
ds
mov
mov
mov
lahf
push
mov
pop
push
sbb
push
gs
in
xchg
pop
pop
inc
sbb
stos
jne
stc
cmp
jp
ja
shll
and
jecxz
leave
or
insl
pop
fcmovne
xchg
or
push
repnz
insb
out
sldt
sub
add
inc
insl
push
mov
xchg
jae
push
inc
fs
and
sub
aaa
scas
lods
insb
negl
imul
pop
mov
sub
sub
lret
int3
lods
out
ds
mov
imul
or
divb
mov
dec
inc
dec
pushl
or
jge
fisubs
test
fsubl
out
inc
mul
and
and
int3
call
add
cmc
inc
xor
lahf
dec
mov
jne
adc
inc
dec
rolb
pop
sahf
pop
jmp
xchg
das
into
fidivl
dec
repnz
inc
mov
fmuls
xor
mov
cmpsb
enter
jp
dec
leave
mov
add
cmp
or
and
sbb
nop
sti
xor
inc
lret
xor
cmp
push
mov
sti
cmc
fildl
sbb
xchg
mov
xchg
and
cld
pop
inc
push
je
jo
into
cmp
and
push
insl
push
aaa
je
cld
push
lahf
pop
rcll
cmp
xor
rcll
adc
mov
sbb
outsb
dec
lcall
iret
push
push
xchg
fldcw
es
aad
push
push
jns
in
aas
in
adc
push
inc
stc
jle
ret
idivl
xor
cld
lods
cmpsl
pop
jae
loope
and
xchg
lock
push
xlat
jo
mov
push
clc
cmp
std
pop
lcall
test
pop
mov
inc
cmp
xor
test
cmp
xor
ficoms
inc
cmp
stos
cmp
fldt
push
xor
add
mov
icebp
inc
lods
addr16
sbb
dec
pop
lcall
int
add
out
rclb
cmp
cwtl
xchg
cld
loopne
lcall
repnz
mov
pop
or
fisttps
das
arpl
sbb
dec
inc
push
sarb
pop
scas
dec
cmpb
movsb
xor
sub
and
xchg
jp
xor
cmp
push
ds
int
cmp
bound
mov
enter
lods
mov
xchg
in
popl
jge
inc
adc
mov
mov
inc
scas
sbb
pop
adc
cwtl
pop
jmp
lea
test
jmp
outsb
xchg
ss
cmc
pop
xchg
out
jmp
scas
pop
jo
shlb
sti
in
mov
add
in
ret
cli
sbb
mov
test
pop
push
dec
cmp
xchg
cmp
dec
imul
int3
xor
ja
sbb
les
arpl
pushf
pop
mov
out
cwtd
lret
fildll
leave
clc
dec
mov
mov
test
sar
sub
test
outsb
or
sti
or
dec
push
and
scas
or
sub
push
subl
in
stc
or
xchg
push
or
loopne
je
dec
cwtl
mov
mov
pop
fwait
popf
dec
mov
pop
dec
xchg
and
push
daa
movsl
adc
popl
xor
xchg
daa
lret
ret
xor
and
dec
loop
clc
dec
sarl
call
push
test
mov
repz
cwtl
sar
cmp
loope
es
sub
jge
push
sub
adc
xchg
mov
pop
test
xor
pop
in
dec
fnstcw
je
jns
pop
inc
stos
mov
and
js
adc
daa
stc
sub
sbb
lock
clc
inc
pop
aad
mov
xchg
xor
cmp
push
div
call
movsl
insl
fists
fidivl
les
sgdtl
cmp
add
pushf
lret
loopne
cmp
push
decl
jg
push
or
inc
jl
xor
xchg
shrb
xchg
mov
cmc
movd
inc
sarb
jne
lcall
das
pop
rorl
sarb
push
test
dec
cmpsb
sahf
jl
and
sub
pop
dec
inc
mov
shrb
pop
mov
subb
mov
int3
daa
cmpsb
ret
addl
inc
jnp
in
push
pop
push
stos
stc
repz
clc
out
sbb
cltd
out
int
jns
dec
and
outsl
xor
imul
roll
pop
lahf
fmull
mov
xor
inc
adc
and
mov
test
leave
mov
pusha
sub
lret
xchg
sbb
push
aam
jb
and
in
mov
fsubrl
push
push
mov
or
or
sub
int3
add
call
nop
jo
scas
fnstcw
sub
jmp
or
push
and
or
cld
fs
fnsave
in
lds
jno
ret
iret
xor
fs
jo
imul
sub
xchg
negl
mov
stos
les
testl
andl
sub
lods
in
adc
cmp
daa
push
push
les
jle
movups
add
fs
out
ficompl
push
cmp
and
mov
test
push
je
mov
shll
jno
push
jbe
or
inc
jae
cld
aam
shll
in
cld
add
in
mov
push
pusha
dec
xchg
fld
pop
xchg
or
jmp
add
jl
mov
out
mov
pop
inc
aam
pop
add
xchg
add
inc
enter
loopne
sbb
pop
in
sbb
mov
mov
pop
xor
mov
je
lret
pop
jg
jle
and
inc
ljmp
fwait
ja
cmc
lods
xchg
add
sub
data16
idivl
xchg
scas
fstl
out
adcb
mov
adc
in
dec
js
sbb
mov
mul
push
add
fmull
lock
inc
sub
pop
xor
jo
and
idiv
outsl
push
outsb
push
das
jno
lcall
mov
dec
jbe,pt
into
sub
sti
push
xchg
out
aas
jb
ja
sub
xchg
call
cmpsb
and
xchg
xchg
arpl
jo
repnz
imul
aad
jle
in
cmpl
mov
pop
js
scas
repnz
mov
jne
jno
or
pushf
data16
fadds
inc
popa
stos
jg
mov
cmpsl
insb
sub
incl
fwait
mov
cli
sbb
pushf
sub
jecxz
mov
adc
pop
jge
popa
lcall
mov
in
hlt
cmpsl
sbb
jo
addb
into
lahf
sbb
test
aad
mov
sub
lahf
or
fidivrl
inc
xchg
fldenv
pop
add
dec
and
mov
add
and
xor
push
sub
int3
mov
push
fs
cmp
mov
fisttps
rorl
xor
arpl
mov
xor
xor
imul
xor
jmp
iretw
cmpsb
inc
movsl
pop
xchg
addr16
sbb
xchg
add
mov
lret
xchg
dec
andl
inc
pop
jmp
mov
sbb
lret
push
sbb
test
cmpsl
adc
mov
cmp
addr16
js
rcrb
imul
xor
rorl
mov
xor
push
into
or
out
fiadds
xchg
icebp
pop
loopne
lcall
pop
fsubrs
mov
sub
cmc
iret
mov
mov
sbb
xchg
shrb
repz
mov
mov
daa
sub
and
inc
or
mov
stc
dec
pop
mov
scas
in
lds
call
push
nop
cmp
mov
loopne
mov
js
ds
cmp
sbb
xor
repnz
cmp
gs
pop
jg
mov
xlat
or
inc
push
outsl
mov
loopne
in
adc
mov
rcrl
fs
jg
xchg
xor
xlat
inc
fdiv
jno
jge
out
fnstcw
movsb
xor
nop
jno
add
pusha
cmp
pop
fcomp
xchg
adc
mov
cmp
mov
and
add
out
call
or
in
in
push
dec
sub
pop
leave
fstl
es
mov
dec
test
iret
mov
jae
mov
imul
dec
insb
add
pop
loopne
shr
push
sbb
fwait
xor
adc
adc
xor
shr
xchg
xor
lock
out
in
leave
cmp
fisubrl
data16
push
aad
lea
sub
in
mov
pop
lahf
inc
in
sub
fsubrs
es
push
pushf
shrb
std
in
shrl
sub
adc
ret
ss
lods
sbb
je
repnz
inc
mov
int3
inc
lds
or
adc
mov
les
sbb
cmpsb
push
jae
cld
fstps
xchg
pop
lea
lea
loop
lods
xor
lods
push
stc
ret
jo
cli
nop
jle
mov
in
sub
ja
fildl
adc
mov
popf
add
xchg
jo
mov
daa
ljmp
mov
lahf
push
test
push
icebp
push
mov
aad
xchg
test
mov
mov
mov
cmp
into
clc
and
pushf
xchg
ffree
pop
arpl
mov
stos
and
scas
add
dec
loopne
daa
or
subl
mov
ret
cmp
cmc
mov
dec
sbb
mov
jne
mov
mul
jb
mov
inc
inc
cltd
or
xor
xor
inc
mov
nop
out
loop
aam
ljmp
pop
pop
lds
cmpsb
sahf
sbb
and
mov
test
push
test
loopne
pop
pop
sbb
jo
mov
icebp
ret
scas
stos
adc
pop
inc
sbb
ret
fs
mov
inc
loope
dec
adc
inc
add
pop
mov
int
in
rolb
sbb
cltd
je
pop
rcrl
fadds
xor
push
inc
dec
ss
adc
popa
and
rcrb
sbb
dec
jnp
jnp
lods
cmp
mov
lret
stos
mov
ficoml
inc
push
xor
mov
mov
aaa
mov
pop
movsb
pop
and
andb
jg
arpl
add
cs
adc
shll
iret
sub
jo
or
pop
outsl
or
mov
jnp
outsl
cli
dec
sub
and
sti
int3
cmp
lods
daa
mov
rolb
cmp
mov
mov
and
fcmovbe
inc
scas
popa
mov
add
pop
mov
and
add
xor
in
or
jbe
mov
xchg
cs
scas
add
xor
rorl
aaa
int
mov
mov
mov
pop
ja
mov
cmp
ror
fdivp
mov
add
jo
xor
fildll
arpl
mov
and
jmp
pop
mov
cld
imul
dec
lahf
jnp
rcrl
xchg
push
lret
pop
push
iret
push
arpl
dec
stos
fldlg2
jnp
xor
aaa
test
lock
push
cld
push
rol
test
ss
cltd
ret
sbb
sahf
out
dec
sbb
fists
inc
fwait
fiadds
fstl
push
adc
pop
push
outsb
cmp
xchg
pushf
xchg
fidivs
cmpsl
add
scas
mov
push
imul
inc
popa
push
xchg
mov
dec
xchg
lcall
dec
cltd
add
sub
sub
mov
cmp
inc
push
cwtl
mov
add
test
or
or
aam
fcoml
jle
inc
div
seta
xor
cli
xor
cltd
add
outsl
sahf
or
inc
out
stos
mov
mov
roll
jne
cmc
lsl
cwtl
push
push
dec
pusha
loopne
mov
outsb
push
pop
jae
fdivrs
scas
prefetcht0
inc
jb
pop
dec
movsb
scas
mov
loope
and
outsl
filds
imul
cmc
arpl
cmp
lds
dec
dec
and
mov
push
lcall
popf
in
fadds
repnz
cli
jg
and
orl
fwait
lcall
mov
iret
cltd
cmc
mov
jp
mov
notl
sbb
lea
cwtl
out
sarb
neg
lret
icebp
call
cwtl
iret
adc
das
in
pop
cmp
insl
mov
cli
push
cld
or
dec
or
pop
test
cmp
cmp
in
cmpsb
mov
jecxz
fs
pop
pop
pusha
jnp
int
mov
sbb
ret
icebp
outsb
fimuls
push
inc
lcall
adc
inc
mov
xchg
sub
les
and
and
push
or
pop
xchg
cmp
add
subb
mov
mov
loope
enter
dec
or
cltd
pop
not
stos
aam
fwait
xchg
fldt
lds
popf
and
push
sarl
push
ret
mov
outsb
aas
outsl
pop
movl
cmp
test
sub
incl
inc
testb
mov
pop
mov
aas
aaa
das
sub
mov
outsb
insl
inc
xchg
js
insl
mov
in
ret
daa
add
sti
addl
cmc
add
xor
cmc
mov
orb
lds
sahf
arpl
sub
mov
mov
mov
xchg
call
push
dec
out
out
imul
lcall
out
cmp
shr
adc
sti
or
outsb
movb
or
sub
mov
xchg
stc
rolb
adc
inc
inc
ljmp
dec
ret
sub
movsl
adc
leave
push
movsl
arpl
inc
imul
or
popa
mov
cld
xchg
invd
cwtl
adc
shrl
xchg
inc
into
or
xchg
mov
push
push
pop
mov
fists
push
lgs
dec
lods
jle
out
push
sub
pop
in
jg
imul
arpl
fcomi
cmp
arpl
call
mov
push
lahf
and
aam
das
rcrl
daa
test
add
xchg
mov
daa
sub
jns
scas
rorb
adc
push
imul
cmpsb
rcll
adc
add
cltd
and
cmp
ljmp
testl
pcmpgtw
movl
inc
fdivs
jnp
inc
fidivrs
mov
push
repz
bnd
dec
mov
jb
inc
orb
jle
popa
loopne
or
xchg
pop
xor
mov
sbb
sbb
nop
shrl
push
push
pop
ret
adc
repz
xchg
sti
jo
mov
inc
fisttpll
push
dec
pop
pop
and
or
sub
sub
dec
sub
out
jge
mov
es
jp
int
pop
movsl
clts
add
push
mov
movsl
mov
mov
arpl
out
push
lock
in
loop
insl
fistps
pop
fisubl
outsb
xor
mov
sub
stc
pushf
jge
jl
int3
cmpsb
in
subb
push
jno
out
pop
test
sbb
push
cmp
mov
ds
dec
xchg
nop
mov
test
mov
es
push
xchg
lods
sti
or
add
lcall
scas
dec
aam
and
cmpsb
in
ljmp
dec
aam
mov
jnp
xchg
mulb
clc
fiaddl
inc
das
jge
popa
test
bound
rorl
push
iret
mov
xchg
daa
jp
mov
sarb
daa
dec
push
cmp
andb
lock
out
mov
jae
rcll
adc
sbb
adc
dec
xor
and
sbb
aas
insl
sub
cltd
js
call
mov
clc
push
adc
xorl
outsb
int3
dec
mov
sub
mov
lods
jo
in
mov
pushf
imul
inc
daa
outsl
ds
int
add
pop
das
xor
loope
popa
in
sub
sbb
mov
add
in
mov
mov
popa
pop
femms
fnstcw
out
add
mov
xchg
fucom
xchg
ss
test
outsb
mov
and
jecxz
fidivrl
sahf
fxch
jbe
or
mov
or
fldz
dec
and
push
sbb
dec
dec
aad
das
or
adc
xchg
les
push
std
addr16
inc
push
xchg
repnz
jae
testb
dec
pop
ss
fnstsw
sbbl
ficompl
mov
repz
sub
mov
cmc
push
add
adcl
fdivrl
lods
pop
lcall
stos
repnz
mov
or
test
jp
or
sbb
sbb
add
pop
mov
lahf
jmp
sbb
jbe
lcall
mov
stos
inc
fdivrs
jae
pusha
dec
push
dec
pushf
cmpsl
inc
and
lret
lods
dec
sbbl
jg
gs
and
iret
roll
fnstenv
leave
sti
xor
mov
pop
cmp
rcll
sub
incl
push
sbb
hlt
fdivs
aam
lods
inc
pushf
adc
push
sub
mov
ret
jle
cmc
mov
push
and
jecxz
in
pop
mov
add
imul
xor
rorb
xor
mov
push
pop
sbb
sbb
scas
inc
add
out
out
dec
pop
sbb
insb
xchg
jmp
inc
pusha
dec
push
ret
cmp
inc
mov
mov
cli
cmp
sub
test
inc
and
mov
xor
and
xchg
aad
or
jns
out
into
scas
sbb
sbb
inc
xchg
inc
pusha
add
data16
xchg
mov
add
jp
lock
jl,pt
cltd
outsl
outsl
jmp
mov
idivb
mov
mov
push
adc
inc
out
push
mov
mov
inc
jecxz
shl
pop
push
repnz
outsl
loope
inc
dec
stc
adc
loop
push
int3
jnp
jl
cmp
xchg
clc
sbb
push
aad
jbe
mov
imul
in
cwtl
lcall
jnp
cmovo
gs
cmc
icebp
das
cmpb
inc
xchg
aaa
cmp
xor
rorb
add
nop
outsl
adc
push
xor
nop
fwait
dec
add
mov
hlt
mov
scas
mov
cmp
fsubrs
cs
push
add
jns
punpckhbw
xlat
pop
int3
push
fnsave
dec
xchg
jecxz
inc
jae
mov
sbb
sbb
icebp
shlb
arpl
pop
dec
sbb
mov
fsubs
arpl
pop
clc
mov
lock
mov
mov
mov
inc
xor
jns
and
or
jmp
fdivr
xchg
adc
sbb
cmp
adc
les
in
ret
push
cs
cmp
jl
ret
sub
mov
sbb
sahf
add
cli
mov
mov
les
xor
adc
adc
mov
mov
push
addb
xchg
pop
std
jno
call
mov
call
xor
adc
mov
ds
sbb
fcoms
mov
enter
into
subb
in
add
dec
mov
dec
loope
mov
mov
push
int3
dec
cld
daa
dec
mov
sti
sub
xor
push
dec
fs
sub
scas
mov
in
lret
mov
mov
cmc
mov
push
negb
and
mov
mov
lock
jecxz
ret
sahf
pop
dec
jbe
sti
shll
mov
mov
scas
xor
inc
inc
out
cld
push
imul
mov
sarb
xchg
jg
and
out
fcoms
in
std
int3
mov
lcall
cmp
or
xorl
mov
bound
mov
loopne
or
enter
pop
xchg
push
pushf
fisubrl
das
arpl
leave
push
leave
xor
aad
push
cmpsb
xlat
mov
popf
push
mov
movsl
bound
or
jb,pt
arpl
xor
xlat
iret
jo
push
flds
dec
dec
sarb
cmp
jp
xor
das
out
cmpsb
add
dec
jnp
clc
clc
out
jg
and
sarb
sub
ss
ds
lret
ficoms
dec
mov
push
imul
or
sbb
jns
divps
sub
scas
mov
ljmp
or
fldenv
cld
repz
xorl
hlt
movsl
inc
mov
scas
mov
mov
cmp
add
xor
mov
insl
sub
and
mov
stos
jle
mov
int3
cmp
inc
xchg
jno
add
lret
mov
stc
jno
ds
dec
lods
sbb
andb
push
jmp
push
bsf
pop
stos
popa
mov
popa
add
cwtl
dec
fstl
cmp
imul
inc
xchg
data16
pop
and
test
test
cmc
mov
in
repz
sbb
aad
xor
shlb
pop
sub
mov
jmp
jle
ss
jns
xchg
and
ret
daa
sub
inc
test
add
mov
outsb
mov
mov
adc
cmpsl
hlt
jecxz
mov
ss
loope
mov
repnz
testl
pop
std
pop
loop
cmp
mov
adcl
cmp
movsl
or
movsb
push
scas
pop
cmp
scas
dec
clc
bound
mov
jg
adc
inc
mov
lret
sbb
stc
jae
inc
ja
mov
int
adc
xchg
jg
xchg
loope
adc
mov
sub
outsl
push
stos
or
adc
sbb
xor
nop
pop
ds
ljmp
sub
inc
jns
andl
xchg
inc
dec
ret
xchg
cld
loope
or
ss
mov
pushl
loop
jp
subb
nop
sti
shrl
mov
icebp
sub
ljmp
mov
jecxz
addr16
nop
cmp
rorl
inc
fwait
adc
xor
sbb
and
call
stc
orl
mov
push
arpl
mov
dec
cmpsl
insl
mov
stc
adc
or
cwtl
flds
cltd
in
mov
mov
sub
xor
mov
lock
mov
mov
mov
ja
push
movl
lds
icebp
ljmp
in
mov
cmpb
repnz
jl
decl
mov
hlt
xlat
fnstsw
icebp
inc
enter
adc
aaa
test
jbe
sbb
gs
int
ret
jp
push
das
and
or
fsubrl
cmp
mov
sbb
dec
rorb
ja
jne
fucomip
or
gs
lret
movsl
imul
scas
cwtl
movsb
leave
xchg
sub
clc
shr
push
pop
sub
xchg
cmp
test
sub
push
pop
or
call
mov
mov
pop
xchg
addr16
mov
sbb
rcl
punpcklbw
scas
push
cmp
popa
xchg
dec
ret
popa
loopne
loop
das
mov
adc
fs
cmp
repnz
xchg
mov
jb
pop
jge
and
pop
aaa
fwait
sbb
mov
mov
mov
repz
lods
imul
push
and
mov
jbe
mov
ret
adc
in
and
push
inc
scas
repz
push
lods
scas
xchg
mov
lret
sub
cltd
mov
add
jb
inc
scas
pop
jmp
dec
in
pusha
mov
imul
pop
and
or
shl
icebp
hlt
shrb
icebp
push
arpl
ret
jmp
sti
jnp
adc
or
stc
pop
xchg
push
ljmp
jle
in
push
jmp
sbbb
add
pop
push
mov
push
lock
insl
into
pushl
outsb
inc
ss
cld
or
aam
jno
cmp
xchg
int
cltd
clc
pop
lret
inc
push
mov
outsb
adc
into
mov
xchg
xchg
mov
jg
mov
mov
lods
bound
mov
cmp
add
mov
test
mov
cmp
sbb
gs
push
les
and
aaa
add
icebp
lahf
inc
pop
push
add
ret
shll
orb
adc
sub
push
int
inc
mov
test
mov
test
fchs
push
sub
lock
ja
sub
lds
xchg
sub
pop
pop
and
add
mov
pmulhuw
push
lahf
jae
jmp
pop
xchg
mov
insb
mov
adc
cmpsb
pop
mov
int
mov
jo
scas
mov
test
push
bound
shr
insb
lods
shrl
lea
js
stos
xor
mov
scas
in
out
out
scas
nop
jne
sahf
adc
fucomp
xchg
fdiv
xchg
loop
es
mov
fwait
cmp
cmp
popf
mov
daa
fmuls
push
sbb
hlt
ja
out
push
sbb
pop
jecxz
divb
loop
pop
in
xor
jno
mov
loope
or
popf
cs
scas
jecxz
js
fidivrl
or
and
xor
mov
or
in
bound
mov
add
mov
bound
lcall
mov
jge
sub
mov
sti
sbb
jne
stos
fadds
je
movsb
jmp
cld
addl
add
or
cmp
test
xchg
out
clc
orl
fs
mov
pop
jmp
in
orb
sbb
lds
stc
mov
inc
mov
mov
add
or
add
out
mov
nop
call
loop
subb
xor
cmpsl
dec
dec
out
addb
cs
cltd
or
jle
sarl
dec
dec
pop
pop
or
mov
xchg
outsl
mov
cld
je
xchg
or
movsl
pop
aas
inc
test
sbbl
aas
adc
divl
in
dec
arpl
lcall
mov
jmp
dec
pop
jmp
aam
adc
fdiv
inc
pop
dec
push
aas
add
lret
jmp
into
lcall
sbb
and
enter
setle
jecxz
orb
cmc
clc
pop
out
sbb
jg
add
ss
add
jl
in
out
cltd
clc
pop
jmp
mov
cmp
add
push
cmpsb
fcmovnu
lea
mov
cltd
and
cmp
or
mov
and
or
inc
cwtl
mov
jge
adc
mov
es
mov
add
push
repz
xor
fsubs
les
dec
das
out
mov
jne
mov
stc
dec
mov
sbb
test
adc
aam
dec
adc
inc
adc
fs
ret
fcmovnu
or
inc
movsb
cli
out
mov
popa
dec
jge
cmpsl
dec
arpl
stc
mov
shll
push
fstps
mov
pop
mov
cmp
mov
mov
lahf
aad
les
push
adc
imul
hlt
adc
or
mov
cmp
pusha
aad
add
mov
xor
testb
xchg
jl
and
mov
xchg
mov
daa
and
mov
rcr
xor
push
adc
ret
stc
mov
or
pop
sub
in
les
pop
loope
xchg
gs
add
popf
jg
mov
xor
adc
add
pop
mov
xlat
lods
push
jnp
sub
mov
jecxz
imul
orps
mov
ja
loope
insb
scas
xor
jae
cmp
push
or
mov
fldt
ficoml
pop
adc
loope
pop
in
push
sub
nop
dec
or
imul
jg
cmpsl
cmp
adc
lock
push
out
incb
cmp
add
sub
imul
lds
gs
cwtl
fbstp
jbe
shrb
clc
mov
in
fiadds
repnz
loopne
stos
jbe
call
mov
icebp
add
data16
bound
jp
call
jbe
pop
imul
lret
sbb
xchg
xlat
pop
cmc
pop
dec
xchg
cmp
add
pop
out
mov
jg
and
adc
mov
sbb
or
fwait
push
or
shll
jmp
mov
repnz
push
sub
iret
fstpt
xor
fs
nop
jge
inc
cmpb
out
cmp
mov
cmp
das
cmp
inc
cli
repz
lds
fisttpll
xchg
dec
jb
jno
out
addr16
push
test
or
mov
sub
mov
inc
rorb
dec
sti
adc
out
gs
popa
ja
add
lods
xchg
mov
xor
divb
jg
out
xchg
cwtl
xchg
lods
jl
cmpsb
xor
sbb
in
inc
mov
ds
lods
push
mov
fcmovnb
popa
jne
mov
pop
pop
dec
inc
and
dec
add
or
sub
lcall
xchg
and
inc
std
ds
mov
shll
adc
neg
mov
rcrl
in
lea
cld
or
scas
fwait
xor
push
cmc
mov
repnz
push
mov
jne
and
mov
andl
sbb
add
es
adc
testb
inc
pop
out
or
xor
mov
adc
sbb
das
in
cld
scas
leave
iret
fwait
jno
add
xlat
xchg
fldcw
iret
cmp
ljmp
pop
cs
pop
mov
ret
jo
cli
packssdw
xor
pop
into
fmull
int3
dec
jne
xchg
adc
sti
imul
sub
fistps
or
inc
cmp
mov
arpl
test
cli
enter
cmp
inc
pop
or
or
loope
ds
mov
lret
pop
iret
lret
dec
cmp
lea
dec
mov
sbb
cmpsb
push
sub
lea
out
fistpl
sbb
subb
loop
mov
jno
stc
int
xchg
xlat
orb
pop
popa
sti
or
or
mov
jge
sbb
adc
in
xor
loop
stos
incb
push
xor
jbe
lahf
xor
xor
pop
in
pushf
xchg
sarl
cwtl
lahf
pop
pop
lods
in
push
xchg
mov
subl
jmp
leave
shlb
icebp
cmp
mov
mov
add
push
xchg
mov
cli
and
mov
stos
pop
rcrb
sub
adc
fsubs
ret
and
cmp
repz
mov
mov
cli
mov
mov
dec
add
add
mov
mov
lods
inc
aaa
outsb
addl
idivl
push
fs
push
lods
jbe
cmpsb
outsb
shrl
cmp
or
add
pop
ret
and
stos
xor
outsb
lods
sub
dec
fisttpl
out
xchg
adc
test
push
xor
mov
add
or
cmpl
ret
mov
fimull
jmp
int3
out
xor
and
sub
inc
hlt
jp
fisubrl
push
test
sub
test
xor
sbb
xchg
dec
shrb
sub
insl
sahf
hlt
daa
nop
stos
pop
xchg
fistps
dec
mov
in
pop
fsubrp
xchg
mov
jmp
jo
int3
fs
mov
test
call
jle
inc
outsb
jecxz
and
or
adc
inc
mov
popa
aam
xor
or
push
ss
adc
into
int
inc
divb
ljmp
dec
out
jle
push
push
mov
add
sbb
lds
mov
repnz
mov
xchg
mov
inc
adc
stc
sub
dec
add
pop
pop
cwtl
bound
ficompl
rclb
test
fcomip
inc
div
or
je
inc
sub
testb
ret
pop
add
jle
pop
movsl
push
insb
bnd
dec
fwait
sbb
pop
pop
jae
xchg
inc
sbb
in
aas
scas
cltd
dec
add
aad
push
fistpll
stos
xor
push
mov
cld
leave
lea
jge
xorl
shrb
mov
ret
jecxz
inc
shll
rol
mov
cwtl
sub
xchg
repz
sti
dec
dec
mov
push
push
int
pop
cmp
mov
scas
xchg
ret
lahf
fimuls
int
jne
addr16
jno
sarb
sub
pop
or
shrb
movl
lods
pushf
arpl
lret
sub
sub
imul
cmp
or
fs
cltd
repnz
sti
and
and
loopne
xor
or
out
lods
xchg
sub
jl
repnz
dec
testb
ss
cmpsb
js
push
mov
inc
fstpl
aam
inc
flds
xchg
push
dec
mov
movsl
inc
cmp
pop
into
inc
mov
xor
mov
int
or
rcrl
icebp
fwait
outsb
nop
clc
cwtl
out
jmp
jno
mov
push
dec
lock
out
ret
cmp
xor
mov
sbb
popf
xchg
clc
jmp
mov
dec
sbb
pop
and
outsb
mov
xor
mov
mov
in
ljmp
cli
pop
jo
in
gs
or
sahf
mov
ret
pop
mov
xchg
jbe
or
jae
pop
mov
gs
add
or
cmp
cs
jne
cmpsb
xor
jne
dec
ljmp
adc
aad
fs
in
jno
xor
or
in
mov
adc
lods
sbb
mov
mov
orb
mov
pop
out
repnz
fwait
imul
jne
icebp
loopne
mov
lcall
xchg
lcall
in
aas
dec
or
add
mov
jae
adc
sub
arpl
leave
xor
xchg
dec
mov
cmp
js
into
pusha
jnp
inc
pop
cmp
movsl
sub
inc
pop
cmp
das
cmp
adc
sarb
xchg
iret
xlat
pop
pusha
push
movsl
dec
fwait
mov
and
push
and
and
rcrl
or
xchg
push
ret
test
imul
push
push
push
gs
stc
flds
fs
xor
scas
pop
rolb
cmc
leave
pop
mov
xchg
fiaddl
movsl
push
fcompl
aad
dec
ss
lods
mov
push
movsb
cmp
mov
loope
xchg
mov
cmp
pop
push
mov
push
push
negb
pusha
add
pusha
cmp
mov
mov
sarb
push
popa
cmp
or
imul
pop
test
sti
xchg
out
mov
cltd
flds
xchg
movsl
jmp
or
xor
pop
inc
in
rcrb
mov
in
mov
movsb
cwtl
das
daa
and
sub
nop
inc
roll
fptan
popf
ja
add
push
insl
ja
jmp
sti
push
cmp
inc
jbe
lods
lea
fsts
mov
outsl
popf
fldl
lea
add
push
das
ficomps
ljmp
imul
xchg
mov
arpl
push
add
sbb
ljmp
mov
or
sub
into
dec
add
push
adc
dec
loop
in
xor
xor
jbe
sbb
xor
ds
push
mov
dec
cld
fcomip
cmp
clc
bound
dec
ret
rorl
xor
push
xor
stc
mov
shlb
inc
out
push
lea
mov
push
arpl
addr16
cli
sub
fimull
mov
cmpsl
pop
repnz
cmp
mov
test
xor
scas
pop
aad
sbb
wbinvd
push
addr16
adc
repz
xchg
out
sbb
insl
icebp
xchg
movsl
sub
imul
xor
sbbl
inc
lods
and
bound
mov
dec
ret
aam
push
icebp
out
lret
xor
xor
je
adc
inc
pop
int
pop
fs
pop
sub
ret
sub
xorl
xlat
repz
nop
aad
adc
es
sbb
mov
out
dec
pop
dec
out
inc
test
jne
mov
jo
stc
divb
mov
mov
fstl
out
cli
push
fcoms
sbb
out
psubb
scas
sahf
jg
mov
jg
jg
into
pop
jmp
adc
pop
mov
ljmp
inc
mov
cmp
bound
sarb
imul
mov
jbe
xchg
stc
cmp
dec
lret
lea
sbb
cmp
dec
push
mov
or
sahf
cmp
jge
decb
aas
xchg
sub
dec
insl
cmp
aad
or
mov
lgs
scas
xchg
sub
or
lret
mov
xchg
and
dec
loop
adc
xor
add
adc
jno,pt
popf
cmpsl
push
mov
or
fistpll
push
jnp
mov
mov
je
dec
xor
xchg
add
xor
jnp
jo
aad
mov
ja
sub
es
scas
cmpsb
test
lcall
arpl
stos
xor
out
lea
popa
call
inc
adc
sbb
cmp
lahf
jb
sub
push
imulb
cli
fnstcw
addb
and
icebp
inc
ret
and
jle
shlb
add
xchg
inc
inc
in
jle
xchg
int
aam
aas
dec
fstpt
sarl
or
xor
aad
rcrb
fsubrs
cmpsb
jno
and
insb
ficomps
mov
ret
add
sarb
imul
and
int
xor
popf
rolb
push
imul
shl
xchg
sbb
ds
cmp
xchg
mov
or
insb
pop
dec
test
cmp
out
das
enter
in
or
mov
cld
cmp
dec
lea
cli
dec
lret
insl
sti
add
dec
fistps
bswap
sbb
jnp
inc
fucomip
aas
repz
jecxz
add
push
cs
inc
pop
roll
push
hlt
ljmp
and
pop
lahf
sub
jns
stc
arpl
mov
fucomip
push
pop
inc
adc
jp
inc
das
sahf
dec
sti
ja
lret
or
das
jmp
dec
jnp
aas
xchg
gs
mov
mov
roll
sbb
inc
push
leave
subl
aaa
xchg
and
cltd
and
enter
add
sarl
leave
adc
cwtl
jae
fdivrl
sbb
ss
aas
cmp
inc
or
dec
mov
pop
xchg
mov
sub
mov
inc
mov
and
or
test
out
jg
jl
scas
std
lcall
xor
movb
stos
adc
hlt
push
push
push
jle
dec
orl
mov
ljmp
jo
pop
push
mov
fistl
xor
rorb
in
and
sub
dec
mov
and
mov
and
stos
dec
jmp
lock
cmp
cltd
jl
dec
dec
mov
xchg
shrl
xlat
inc
or
das
mov
push
stos
fucom
jns
insb
dec
stc
mov
push
sub
enter
cmp
mov
sbb
leave
xchg
repnz
xchg
cmc
insl
into
adc
es
jo
mov
nop
gs
mov
arpl
lret
xlat
iret
pop
lret
ficoml
aad
lcall
imul
push
inc
sti
push
dec
mov
mov
sub
cmp
jge
jae
mov
aas
sub
mov
push
jns
sbb
rorl
sub
imul
fnstcw
push
inc
and
aas
aaa
hlt
imul
dec
push
xchg
inc
and
adc
cwtl
mov
mov
or
negb
mov
ret
daa
xor
pop
push
adc
outsb
dec
sbb
insb
adc
mov
mov
inc
fmuls
or
mov
push
mov
je
in
sub
jmp
addl
xor
push
mov
inc
cmp
mov
aas
xchg
jae
mov
das
lock
pop
cmp
addr16
sub
mov
jmp
or
dec
mov
sub
and
pop
rsqrtps
lret
push
inc
cmc
inc
sub
outsb
dec
out
push
outsb
push
pop
adc
fmuls
xor
scas
mov
daa
sbb
jg
nop
mov
push
add
mov
rcrl
push
add
cltd
rclb
pushl
cmc
or
cmc
mov
push
mov
add
inc
pop
inc
xor
sub
test
fisubrl
hlt
and
ss
cmpl
imul
mov
sbb
cmpsl
shlb
sbb
push
pusha
btc
subb
lahf
ja
sub
jb
ds
out
push
dec
pop
fldl
arpl
jbe
xlat
rorb
and
fs
push
call
ja
popa
dec
fldcw
push
psrlq
ret
shll
lcall
xor
dec
mov
dec
es
stc
cmp
js
jns
test
clc
inc
push
push
adc
in
xchg
xchg
inc
push
in
out
xor
or
jmp
mov
cmp
jo
icebp
jmp
movsb
scas
sarl
pop
and
in
in
pop
jo
test
pop
push
pop
fisttpll
cmp
movsb
rsm
mov
jge
repnz
ficoms
push
cmpsl
fisubs
stos
pop
leave
xchg
out
jl
aas
pop
mov
jo
testb
mov
cwtl
jecxz
xor
cld
arpl
lock
add
push
in
or
into
mov
in
push
pop
das
int3
in
jmp
xchg
hlt
mov
mov
dec
std
lods
dec
int
push
test
jmp
int
adc
ficoms
adc
add
mov
adc
sar
roll
sbb
stc
jne
and
sahf
jnp
mov
cld
mov
fidivl
sti
in
icebp
cli
jmp
push
lret
xchg
mov
scas
ja
les
shl
jmp
popa
gs
xchg
pop
mov
add
jbe
pextrw
push
push
popf
adc
sarb
in
pop
pusha
loopne
imul
movsl
out
subb
jge
sbb
insb
repz
mov
scas
jge
arpl
mov
nop
and
shrb
pusha
clc
cs
js
add
out
jne
loopne
xor
arpl
dec
push
sbb
xor
jno
push
adc
dec
ljmp
xchg
push
xchg
fucompp
push
pushf
xorb
fldenv
adc
push
mov
loopne
imul
xchg
xchg
mov
and
mov
repnz
pop
sub
xor
in
test
dec
mov
push
dec
in
pop
orb
mov
aaa
jmp
jo
ror
stos
mov
jge
or
lea
push
push
mov
mov
stos
movsl
fwait
loope
mov
jo
call
aam
jmp
lret
jne
sub
sbb
dec
movsl
pop
and
and
lods
fs
push
cmp
int
insl
pop
inc
xchg
dec
xchg
test
xchg
xchg
lcall
cwtl
pop
test
lods
push
leave
in
xchg
ljmp
shlb
pop
stos
jnp
dec
inc
dec
mulb
jb
and
sub
push
xchg
jno
cld
aas
lods
push
sbb
and
and
je
and
or
movsl
clc
fs
or
sub
shrb
addr16
sbb
dec
jae
add
jbe
jle
push
in
adc
sub
mov
push
lahf
lahf
ds
icebp
pop
jge
ss
mov
mov
cmc
lods
bound
iret
mov
ljmp
andps
xor
pusha
cmp
lea
arpl
mov
sub
or
test
mov
and
stos
pop
mov
notl
jecxz
mov
iret
sub
loop
jecxz
and
jo
and
mov
xor
les
out
andb
sbb
inc
fs
cmp
insl
mov
es
xchg
in
sahf
and
pop
rolb
mov
test
pop
mov
mov
aad
lret
xchg
pop
pop
mov
cwtl
lret
mov
aad
cs
jl
or
scas
ja
adc
imul
popf
jno
jecxz
repnz
sbb
imul
pusha
sub
arpl
jle
fsts
call
dec
dec
xchg
scas
inc
jecxz
pop
stos
shrb
iret
fprem
adc
loop
cs
pop
inc
xor
pusha
fwait
pusha
enter
jo
dec
mov
and
sub
lret
mov
aas
ss
movsl
movnti
jns
inc
mov
xchg
sbb
mov
call
cmp
pushf
or
jne
cmp
lcall
sti
and
jg
iret
hlt
sub
ljmp
cmp
fwait
es
roll
outsb
mov
cmpsb
int3
ret
shlb
test
imul
icebp
aam
jb
xchg
bound
mov
rclb
dec
cld
xorb
mov
pop
mov
pop
fcmove
xchg
cwtl
pop
lret
inc
and
sar
bound
fidivl
pop
push
cmp
mov
cld
das
add
add
mov
inc
or
mov
ja
inc
sahf
pop
mov
imul
sbb
sub
repz
fidivrl
or
mov
jl
sub
jno
cld
ffree
cmp
push
clc
fsubs
pop
vpinsrw
and
pxor
dec
mov
jle
stos
push
xlat
lods
scas
mov
lock
int3
cs
jle
jl
mov
testb
hlt
mov
push
insl
movd
nop
jno
out
insb
in
rcrl
mov
arpl
xchg
cmp
mov
jae
jmp
push
xchg
push
or
mov
addr16
or
push
push
or
mov
icebp
or
pop
rcr
fs
lock
cld
dec
jo
xchg
inc
add
lcall
or
jle
add
push
lret
test
ja
push
cld
mov
push
and
mov
dec
std
mov
sbb
xlat
fisubl
fs
xchg
inc
loope
je
fmull
pusha
jge
stc
push
int
dec
shlb
pop
push
dec
call
das
sti
dec
pop
mov
stos
imulb
inc
scas
mov
mov
sub
sub
aam
daa
loope
bound
or
mov
xor
inc
mov
or
aaa
or
scas
in
fsts
imul
in
fimuls
outsb
add
icebp
cmp
je
aaa
mov
cs
push
mov
outsl
cld
lahf
in
test
sub
call
sti
or
dec
in
mov
cmc
lock
je
into
stos
xchg
push
sar
pop
xchg
scas
adc
ret
or
lret
sbb
push
call
dec
xchg
mov
fmul
call
xor
inc
lret
xor
negb
sar
xchg
xchg
repz
cmp
xchg
pusha
dec
pop
add
cltd
lods
rclb
push
adc
lds
test
sbb
aaa
adc
jae
add
lock
bound
inc
movsb
ljmp
ss
fdiv
sbb
cmc
in
mov
lret
xchg
xchg
fildl
mov
mov
ljmp
jge
fildl
pop
push
cmp
pop
pop
mov
inc
cmpl
imul
adc
jo
xor
mov
fisttpll
ret
aad
popf
push
jmp
in
mov
daa
repz
enter
xchg
fcomip
dec
and
aaa
dec
ror
ficomps
clc
inc
mov
jno
push
mov
pop
dec
icebp
xchg
fstpt
add
or
push
mov
xchg
mov
sub
xor
test
inc
inc
or
lods
and
lods
mov
leave
pop
jo
out
cmp
cwtl
push
jmp
mov
inc
add
ret
in
xor
or
test
les
mov
xchg
push
movq
lds
ja
movsl
add
sub
mov
sbb
jmp
and
sbb
fidivrl
jp
rcrb
loop
or
xor
adc
das
mov
mov
mov
fsubrl
mov
pop
shrb
scas
fdiv
popl
std
jo
xor
cmp
inc
mov
test
shlb
jmp
cs
imul
pop
aam
std
sar
out
sbb
ficompl
mov
in
fld
rcrb
fldt
inc
shrl
ljmp
push
mov
mov
jo
sbb
pusha
enter
inc
jo
nop
or
xor
mov
jle
dec
fsubl
call
dec
dec
fisubs
pop
jmp
inc
mov
dec
pop
cmp
ja
daa
mov
sbb
sarb
mov
clc
into
lds
fwait
inc
stos
fdivs
inc
mov
call
and
inc
jo
mov
adc
test
lret
into
insl
fwait
cmpl
jo
cmp
push
xor
jno
cmp
adc
push
pop
pop
sbb
jp
add
movsl
xchg
inc
mov
jg
ja
ja
shrb
xchg
cmp
pop
or
pushf
cmp
stos
fucom
out
xor
popf
shl
filds
loopne
or
aaa
adc
cmpsb
and
inc
cmp
dec
xor
inc
lea
xlat
rcrb
lods
xor
push
sub
pop
repnz
sbb
cli
and
inc
dec
shrb
pop
insw
mov
repnz
loope
inc
adc
dec
je
dec
mov
mov
addb
aaa
add
sbb
mov
push
sbb
pop
enter
sti
sub
lret
shll
lret
or
push
fldcw
lcall
out
addr16
cld
jne
inc
fdivr
push
pop
mov
test
cmc
dec
in
adc
daa
repnz
jnp
push
lods
mov
dec
mov
mov
fbld
clc
dec
xchg
les
ret
sbb
push
push
in
mov
lret
sbb
cmp
loopne
adc
adc
mov
sub
inc
jle
std
push
mov
mov
in
add
sbb
testl
test
fs
ss
sbb
push
cmp
rcll
or
repz
pop
sbb
cltd
in
lea
sbb
in
push
not
pushl
jmp
lret
into
pop
sub
clc
add
xlat
loope
cmp
inc
jecxz
or
push
jge
les
stos
daa
push
sarl
sbb
jl
mov
test
jge
xlat
inc
mov
out
orl
xchg
sbb
add
rorl
cmpb
adc
clc
push
rcrb
data16
rorl
sbb
jge
iret
sub
push
pop
adc
inc
push
xlat
adc
in
xor
fiadds
cmp
cmp
js
fdivrs
inc
jnp
insb
aam
jge
inc
in
nop
shlb
cmove
stos
test
dec
fldpi
cwtl
cmp
sbb
mov
ss
aas
dec
imul
mov
lock
xchg
push
inc
or
add
jle
cmp
mov
adc
sbb
or
fildl
dec
xchg
popf
mov
repz
mov
mov
cli
out
inc
fnstcw
mov
lea
dec
add
das
dec
pop
xchg
pushf
sub
js
subb
sub
arpl
mov
jge
pop
jno
xchg
xchg
sbb
sbb
incl
push
daa
xchg
stos
lahf
sub
mov
aad
push
jge
movsl
mov
dec
push
fldenv
or
test
loop
add
fwait
es
add
adc
mov
pop
sbb
pusha
movl
leave
jns
cmp
add
push
pop
pop
adc
shr
sbb
jg,pn
add
ds
xor
xchg
in
push
xchg
mov
pop
push
ret
xchg
ss
xchg
adc
push
mov
mov
test
aas
push
jmp
xorb
nop
cld
mov
mov
mov
cli
pop
cmp
xor
ljmp
push
fldcw
adc
popa
adc
jno
stc
fnsave
es
xorl
imul
iret
sbb
jge
mov
add
and
decb
das
sbb
in
pop
in
adc
sub
lds
push
data16
mov
mov
pop
jmp
fidivrl
pop
aas
in
jb
out
in
pop
ja
cmc
or
out
test
lods
add
jp
cmp
bound
pop
jb
jbe
mov
gs
loope
or
and
cmpsb
push
xchg
adc
lahf
adc
jecxz
and
pop
scas
xor
sahf
mov
lret
cmc
inc
push
and
cmp
push
js
mov
jge
push
ds
clc
ljmp
aas
xchg
jg
adcl
in
push
es
lods
out
mov
inc
loop
inc
stc
mov
addr16
cmpsl
in
jo
out
ficoml
xor
hlt
out
aas
jge
pop
int3
mov
and
pop
push
aad
test
je
vmread
pop
fcoms
test
repnz
je
loop
xchg
dec
or
sub
rolb
jg
mov
ljmp
enter
fld
rcrb
mov
pushf
jmp
add
cmp
jl
and
ret
jg
push
stos
xorl
jbe
jmp
jb
dec
xchg
adc
adc
mov
rcr
push
inc
add
icebp
push
cmp
xlat
sbb
ljmp
and
sub
pop
stc
jl
out
je
addr16
pop
test
cli
push
loopne
dec
cld
or
addr16
test
sahf
aam
sbbl
xchg
xchg
jne
negl
sarl
or
push
cmp
and
pop
add
sub
out
push
dec
lret
add
or
xlat
push
dec
add
mov
std
inc
push
ret
mov
movsl
orl
push
jne
cmp
insl
popf
dec
stos
mov
rolb
lods
or
inc
mov
popf
jmp
xor
xchg
cmp
out
sbb
insl
scas
outsb
jae
shl
das
push
fsubrs
les
pop
rorb
and
add
dec
cmpsb
adc
lods
xchg
cmp
pop
bound
push
sub
and
aad
adc
xchg
adc
jae
push
lds
lock
or
test
cmp
jg
push
sbb
cmpsb
imul
adc
push
ja
sub
std
dec
leave
push
adc
fnstsw
cmp
xchg
inc
cmp
pop
std
mov
fstps
sar
fldt
jle
jle
and
addb
pusha
sti
push
fdivrs
invd
sahf
mov
xor
add
dec
mov
jnp
add
xor
loope
jae
shlb
or
aas
pop
ja
fidivrs
in
cmp
scas
jne
arpl
fwait
dec
adc
cmp
scas
sbb
insl
pop
sub
js
jns
outsb
pop
stc
das
inc
pusha
in
jb
dec
gs
and
sub
lahf
aaa
dec
pop
fdivs
scas
xlat
mov
push
jg
and
jno
add
sbb
insb
mov
mov
push
fisubrl
pop
push
fcoml
stos
adc
mov
xor
and
or
dec
push
jge
into
bswap
mov
and
ss
pop
int
test
addr16
dec
push
insl
or
jns
sahf
ja
scas
stos
ret
and
or
enter
cmp
mov
cwtl
add
sub
jg
dec
push
cltd
push
fcompl
dec
jo
lock
mov
jns
jae
aad
in
addb
or
loop
adc
mov
or
sbb
push
add
out
lahf
insl
inc
or
cmp
fprem
xchg
push
lods
outsb
dec
aas
lret
insb
pop
das
xor
out
int
add
in
push
xchg
mov
jmp
xor
mov
cmpsl
or
hlt
push
mov
sbbb
cmp
nop
pusha
das
adc
repz
cld
decl
fidivl
repz
into
sub
sbb
sbb
cmc
lcall
or
mov
mov
pop
jae
or
arpl
mov
outsb
pop
inc
in
dec
lret
imul
lret
sub
inc
ffree
es
cltd
stos
sti
mov
rcrb
mov
add
dec
stc
rcr
adc
xchg
inc
stc
jno
cmp
dec
jge
pusha
xor
jbe
icebp
xlat
and
leave
cwtl
sub
mov
jbe
addr16
mov
js
mov
push
cwtl
jbe
mov
loope
in
addl
out
cmp
aas
insl
push
faddl
rorl
rcrl
stos
push
outsl
inc
pop
inc
enter
in
jle
lea
movsl
sarl
lret
cmpsl
cmp
test
mov
in
imul
daa
aad
sbb
adcl
clc
or
pop
pop
repz
pop
lahf
mov
fwait
cmpb
out
and
adc
pushf
out
insl
fcmove
and
out
cmp
movsl
mov
adc
movsl
pop
sub
rorl
jle
sahf
inc
jge
push
lods
movsl
xor
bound
mov
jnp
lret
sti
inc
jle
loope
sub
jp
popf
push
fs
pop
es
orb
add
aam
mov
xchg
xor
nop
insl
inc
test
xchg
jne
loope
cmpsl
popa
addb
cmp
in
insb
repnz
int3
insb
ret
call
std
jbe
cwtl
xchg
push
lods
lret
fsubrp
jbe
vmovupd
test
ror
xchg
stc
fistpl
int
mov
fidivrs
jae
pop
jns
mov
scas
scas
push
dec
inc
inc
sarl
clc
cmp
icebp
and
lods
aad
push
pcmpgtw
dec
movsl
fdiv
inc
dec
into
mov
pop
jmp
insl
inc
leave
jmp
xlat
pop
cld
pop
dec
push
icebp
push
sbb
mov
xor
xchg
test
jp
clc
mov
sub
push
lods
je
clc
fisubrl
mov
xchg
lcall
aam
negl
dec
sub
sub
jae
movsl
xlat
pop
sbb
xchg
stos
pop
xchg
pop
mov
mov
repnz
lcall
jmp
stos
or
jb
mov
mov
popa
ret
aad
in
pop
aas
sahf
sti
sbb
or
cmc
fnstcw
insl
lcall
cltd
xor
pop
pop
jge
sbb
dec
or
das
dec
mov
lock
add
rorb
or
push
pop
xchg
sti
fdivr
dec
dec
mov
cwtl
lcall
push
and
xchg
xchg
mov
push
push
aaa
or
or
fsubrp
enter
nop
add
lahf
cmp
mov
sub
cmc
cmp
xor
ds
sahf
inc
out
in
xchg
or
out
mov
jnp
mov
ds
lahf
xchg
jge
xchg
inc
adc
adc
aaa
icebp
sahf
mov
int
xchg
ret
mov
cs
xchg
imul
push
out
or
test
jbe
cmp
pop
xchg
sbb
sub
dec
fisttpll
dec
jg
xchg
push
inc
dec
insl
je
push
dec
sti
cmp
movntq
inc
nop
addr16
icebp
or
and
cmpsl
mov
jno
ftst
cmp
dec
mov
sbb
insl
xchg
adc
mov
pop
pop
es
lret
cli
and
and
ret
sub
add
inc
ds
es
jg
aam
fst
imul
lcall
cs
cmpsl
in
push
mov
xchg
jne
xchg
cmpsb
or
push
fldt
ja
dec
mov
add
add
dec
es
js
push
loope
bound
jge
and
sbb
push
hlt
insl
mov
outsb
push
in
push
add
shll
mov
sbb
mov
movsl
inc
fmull
jns
int
popa
outsl
add
js
xchg
sbbb
fsts
pushf
xlat
pop
adc
inc
dec
cwtl
cwtl
movsb
push
inc
or
bswap
outsb
push
sub
mov
add
pop
out
addr16
stos
mov
mov
arpl
push
jle
mov
std
inc
icebp
fadd
pop
mov
inc
cmp
cli
xchg
add
xor
fwait
and
mov
jns
mov
sbb
adc
aaa
inc
mov
icebp
pop
int3
frndint
push
inc
cmp
xchg
cwtl
popa
mov
and
nop
jns
rcrb
mov
test
int3
cmp
sub
bound
xchg
data16
movsb
mov
mov
adc
aaa
pop
or
xchg
int
adc
aam
push
pop
lods
or
fsubrl
xchg
pop
rorl
fiadds
cld
jp
xlat
add
lods
shrb
sahf
fisubrs
mov
mov
push
std
xor
clc
lds
pop
mov
shrl
sarb
movsl
fidivl
andb
push
std
bound
push
or
lds
nop
lds
xor
mov
push
in
jae
ds
fisubrl
mov
sbb
jno
test
or
mov
xlat
pop
jns
inc
cmpsl
and
fs
loopne
arpl
stc
fwait
xchg
out
cli
imul
mov
and
xchg
mov
ds
pop
fcoms
mov
push
push
popa
into
stos
pop
in
adc
jae
pop
cmp
mov
push
inc
or
sbb
jnp
mov
mov
mov
mov
jb
or
inc
fldl
sbb
shll
adc
xchg
lods
mov
cltd
aas
cwtl
fcmovu
pushf
push
fcmovb
rclb
stos
push
shll
sub
imul
inc
in
movlps
xor
popa
test
ret
test
cmpsl
cmp
jle
xor
pop
adc
mov
out
or
dec
xor
imul
std
testl
rcrb
out
mov
push
jo
ret
pop
mov
mov
push
jge
rcr
in
jo
mov
call
xor
scas
out
hlt
addr16
xor
subl
mov
loopne
aam
ja
mov
fcoml
fdivrl
xorb
shl
fimull
insb
mov
jno
pushf
push
add
mov
out
jb
mov
test
add
xchg
stos
mov
fstl
pop
hlt
bound
stos
xchg
sar
out
shrb
add
mov
loop
repz
or
dec
dec
pop
mov
testl
jae
fmuls
sub
fucomip
out
stos
xor
iret
arpl
mov
ret
mov
sbb
jbe
pop
bnd
aas
sbb
adc
xlat
fldt
js
js
insb
jle
fsubrs
arpl
jmp
push
into
and
pusha
lret
fcmovu
pop
mov
xchg
loope
sti
out
dec
xlat
vpconflictq
push
pop
shl
ret
jmp
jle
cli
aad
in
scas
mov
popa
dec
pop
cli
push
cmpsb
cmpsb
fildll
push
stc
push
jmp
inc
pop
pop
jb
pusha
xchg
jne
fldl
pop
out
add
dec
nop
aad
xorb
out
hlt
jae
inc
sub
cltd
sahf
pop
pop
dec
lret
scas
dec
popf
test
dec
xor
fwait
ja
cltd
std
push
js
cmp
inc
jmp
das
jle
lods
xor
lret
shll
ja
sbb
and
inc
adc
mov
xor
outsl
jnp
and
int
stc
insl
or
addr16
push
or
popa
xor
inc
lods
mov
jecxz
pusha
fisttpl
dec
in
push
sub
shr
push
jno
mov
cltd
iret
sbb
push
push
in
dec
pop
inc
stc
lods
cmp
jne
addb
dec
imull
and
inc
aad
sbb
mov
jb
add
pop
xchg
clc
arpl
in
pop
add
xlat
enter
jns
jb
adc
in
stos
sub
push
in
and
jmp
pop
mov
pop
ss
cli
mov
add
jmp
dec
mov
pop
sbb
xor
out
xor
and
fidivl
sbbb
mov
stos
xor
or
nop
mov
jae
xorl
xor
add
cmp
test
sbb
add
xchg
sbb
xor
pop
sarl
mov
mov
pop
sbb
jmp
movsb
dec
sub
and
mov
push
pop
call
int3
add
fcompl
sbb
cmp
and
scas
gs
add
into
or
xchg
and
xchg
adc
jmp
loopne
or
xchg
sbbl
out
insb
test
jbe
pop
add
pop
inc
ret
pop
mov
mov
inc
hlt
or
mov
bound
sub
movsl
out
movsb
xchg
sbb
ss
sub
push
dec
mov
jns
shl
xchg
ljmp
int
minps
push
and
andl
push
aaa
fsubr
add
in
cmp
leave
xor
mov
jmp
push
sbb
sahf
lods
dec
mov
pusha
orl
popa
and
repnz
adc
mov
jge
addb
test
and
sub
out
scas
push
loop
push
cmpsb
xchg
pop
push
dec
imul
mov
aam
mov
jle
xorl
and
int
lahf
ret
aaa
dec
and
pop
add
int
cs
arpl
push
inc
je
gs
ds
inc
stos
sbb
pop
shll
mov
rcll
inc
aam
fstpl
insb
mov
out
out
lcall
push
dec
in
aam
sti
cmc
je
push
outsl
cwtl
mov
test
lods
aad
cmp
jmp
mov
jge
int3
scas
test
jbe
dec
out
jecxz
ja
sbb
pop
push
fcompl
in
sub
in
jnp
loope
rcr
and
xchg
lds
mov
into
lds
or
sub
test
push
fdiv
push
jg
sbb
in
cmp
add
scas
clc
xor
pusha
stos
hlt
cltd
mov
jns
mov
mov
cmpsb
pop
pop
lods
in
mov
or
jo
jae
sbb
mov
jp
enter
insl
sub
insl
lods
jo
inc
mov
es
test
xchg
out
lret
cld
out
mov
fidivrs
test
ljmp
mulb
or
xor
jge
xchg
push
fs
imul
add
mov
mov
movsb
or
lcall
pop
gs
je,pn
push
and
sbb
mov
jp
adc
mov
xchg
stos
adc
mov
pushf
cwtl
adc
addl
sbbl
jecxz
mov
adc
movsb
lea
js
addr16
adc
scas
mov
mov
sbb
dec
mov
mov
xchg
adc
push
pop
adc
shll
test
pop
cmp
cmpsb
inc
rolb
and
sub
push
lods
orb
mul
push
cmpsb
push
sbb
jp
in
mov
aad
adc
out
xchg
push
cld
ret
sbb
push
and
fdivp
ja
and
loop
add
hlt
push
and
push
mov
iret
icebp
incl
fwait
jnp
pop
es
and
lret
push
add
cli
or
into
jecxz
cli
mov
aam
mov
cltd
ds
into
jae
lahf
and
and
inc
inc
sbb
andl
inc
push
jecxz
jle
fstl
cs
jmp
jp
add
icebp
pop
add
push
xchg
push
cmp
inc
mov
or
cmc
xor
pusha
popf
ficompl
stos
outsb
repz
jno
push
inc
orb
add
fsub
pop
inc
icebp
pop
ss
mov
dec
jl
outsl
jmp
and
cmpsl
and
xchg
stos
fisubrs
and
xor
aas
inc
cmp
add
shrl
ret
icebp
and
and
es
outsl
and
fwait
repnz
lcall
mov
popa
xchg
test
dec
ljmp
lds
pop
mov
hlt
push
stc
ss
lods
outsb
xchg
push
repz
sbb
movsl
pop
sbb
push
fwait
scas
repz
stos
lahf
stos
pop
dec
mov
xor
xchg
mov
mov
and
mov
out
pop
popa
sub
xchg
clc
xor
in
mov
loopne
dec
cs
gs
ficoml
sahf
mov
mov
invd
sbb
dec
popf
xchg
mov
loop
stos
shll
or
xchg
inc
shl
xchg
imul
psubsb
out
mov
push
xchg
incb
or
xor
jnp
dec
mov
cmpb
xor
push
sub
daa
inc
dec
out
das
test
repz
loopne
cltd
mov
mov
insl
lds
cmpsl
pushf
xor
repnz
or
sub
orl
cmpsl
in
pop
imull
push
bound
das
push
mov
idivb
mov
aam
cld
adc
jl
pop
andl
leave
pop
jno
pop
cmpsl
cmc
ja
and
fldcw
ret
sub
adc
test
and
push
out
insb
addl
dec
sub
mov
jbe
addr16
test
mov
repz
repz
lock
lock
stc
jb
add
xchg
les
dec
jbe
inc
arpl
push
push
mov
xor
jecxz
sbbb
orb
ud1
mov
enter
popf
sbb
xchg
adc
push
stc
xlat
xchg
pop
popf
inc
mov
dec
insb
aam
jecxz
inc
test
mov
clc
xchg
inc
push
pusha
fcmovu
lcall
les
sub
rclb
xchg
inc
daa
arpl
das
or
pop
insb
dec
jae
bound
dec
imul
xlat
mov
dec
cmpsb
mov
fldl
push
xor
pop
lds
sbb
ja
mov
jo
sub
push
pop
xchg
mov
int3
cmp
fdivl
in
fidivrs
aaa
mov
add
cld
imul
aaa
mov
lods
stc
std
jns
jl
pop
lock
xor
in
cmpb
pop
mov
fs
dec
mov
movsb
lock
nop
out
jb
cmp
inc
pushl
lret
enter
mov
pop
lds
mov
mov
aad
or
gs
and
ljmp
minps
mov
pusha
fwait
pop
push
mov
push
fiadds
movntps
sub
or
sahf
push
mov
test
orb
adc
inc
imul
lahf
pop
sbb
jno
insb
sbb
mov
aam
es
xor
mov
push
stos
fs
cmp
and
inc
mov
mov
int
jne
adcl
and
xchg
inc
pop
dec
push
scas
lcall
jge
jo
dec
jp
fmulp
pop
sbb
test
sahf
push
ret
inc
ja
inc
push
cmp
push
repnz
mov
pop
push
jg
and
repnz
mov
pop
scas
pop
adc
je
mov
jnp
scas
sbbb
pushl
mov
push
pop
ljmp
pop
mov
inc
shll
push
mov
mov
mov
sbb
jbe
lcall
std
mov
mov
pop
fs
cmpsb
inc
ret
cmp
fsubl
cmpsl
clc
popa
xor
das
mov
adc
fldcw
mov
inc
adc
js
push
out
rcll
in
inc
xchg
std
fisttpll
gs
mov
shll
inc
jp
push
mov
inc
dec
jle
ficomps
aas
and
jp
iret
and
out
mov
leave
mov
jne
mov
sti
std
addl
sub
add
pop
xchg
push
mov
push
sar
mov
xchg
ja
cmp
jo
into
inc
inc
cwtl
dec
sub
sub
inc
ret
mov
fsubl
in
and
js
imul
and
jbe
sbb
fwait
push
xchg
or
es
sti
data16
aaa
aam
or
sub
mov
dec
push
scas
push
cmp
inc
xchg
cmp
lcall
gs
jp
test
sub
adc
fucomp
push
rcrb
or
jmp
je,pn
aam
dec
add
lock
and
jno
sbb
ljmp
ret
and
mov
push
out
pop
fstl
jb
nop
repnz
out
push
pop
pop
fs
ljmp
sbb
xchg
test
pushf
popa
sbb
lods
cmp
nop
loopne
add
xor
and
gs
mov
notl
fdivrp
mov
cmpsb
mov
inc
and
loopne
dec
cmpsb
xchg
sub
and
pop
clc
addl
iret
cmp
push
add
notb
cwtl
xchg
mov
lds
out
and
adc
sbb
lock
mov
loope
add
jp
mov
push
icebp
mov
repnz
cmp
jno
inc
sub
xchg
pop
into
loopne
loope
daa
and
popf
dec
popa
inc
xor
sub
imul
std
mov
push
sub
sbb
in
sub
fwait
sub
cmp
dec
cld
pop
push
jnp
or
aam
sub
push
iret
stos
mov
aam
enter
mov
mov
shl
fwait
cmp
jne
ljmp
mov
sbb
add
xor
idivl
mov
int3
fsts
mov
sub
fisubs
mov
notl
aaa
out
stos
xor
cli
dec
imul
jns
xlat
xbegin
inc
mov
stos
mov
and
sub
mov
push
adc
xchg
mov
daa
xchg
and
sub
mov
jp
inc
dec
cmp
sub
sbb
lahf
sbb
lahf
adc
fnstenv
hlt
repnz
push
and
jo
dec
adc
mov
push
add
jle
pop
adc
and
jo
and
mov
lods
lea
mov
push
inc
fimull
mov
push
inc
jp
out
hlt
dec
scas
pop
out
xchg
pop
pop
lahf
leave
sbb
jle
lock
testl
jg
inc
faddl
loopne
mov
mov
stos
imulb
test
cs
add
subl
cmp
andl
mov
bound
aad
jo
pop
and
mov
jae
xor
test
add
imul
arpl
icebp
mov
cwtl
jo
dec
xchg
xchg
pop
fldl
jnp
adc
dec
or
push
aaa
loope
mov
sbb
inc
xchg
push
popa
leave
xchg
repnz
scas
mov
push
jg
lahf
push
lods
mov
xchg
add
sti
xchg
sbb
scas
repnz
in
aaa
sub
inc
ds
inc
shlb
jno
pop
push
cmpsb
xorl
add
push
or
fiaddl
stos
pop
scas
push
add
iret
jo
rcrb
in
out
add
test
in
push
fistpl
cmc
and
fcmovbe
les
ljmp
push
push
mov
and
push
xlat
and
lds
ret
fsubrs
jae
jle
push
mov
mov
xchg
sbb
ret
xor
jmp
imul
jl
jns
shlb
and
div
into
sahf
cmpsb
lods
xchg
push
cmp
xchg
mov
aas
adc
mov
jne
push
lea
cmc
sub
dec
mov
ficoms
insl
aam
jne
mov
cmp
lcall
loope
xlat
xor
dec
sbb
and
mov
and
and
sub
and
test
sar
loopne
mov
and
xchg
jmp
jmp
clc
push
and
mov
sbb
gs
stos
movsl
mov
mov
jnp
test
lods
inc
sub
pop
push
cmp
test
movsl
inc
scas
sbb
xchg
es
icebp
mov
dec
xchg
mov
mov
imul
sbb
lret
sub
ss
imul
add
cmp
mov
mulb
jge
xchg
fwait
jnp
push
add
and
and
popa
pop
cmpsb
insl
loopne
les
adc
ret
stos
lcall
push
repz
mov
insl
lahf
sub
jmp
adc
pusha
das
addl
popa
add
or
xchg
jne
clc
jle
clc
sbb
scas
push
push
inc
mov
adc
jno
sarl
inc
adc
cmp
add
add
dec
push
mov
and
fsubp
ret
inc
and
mov
cli
cld
fwait
mov
xchg
shl
in
aam
imul
fidivrs
add
nop
in
aam
pop
je
call
insb
jmp
sbb
pop
mov
push
idivb
inc
call
rcll
lods
out
fsqrt
orb
arpl
andl
push
sub
mov
push
data16
sarb
imul
jmp
push
imul
xchg
lahf
adc
imul
jp
pop
lds
xor
xchg
jg
cmp
fistpll
jg
mov
or
into
ja
and
lret
negl
mov
mov
pop
and
and
data16
gs
leave
jb
test
call
daa
lcall
adc
subb
xchg
jle
test
pop
test
sbb
and
lret
pusha
js
subb
xchg
icebp
sbb
sbb
movsb
mov
jb
xchg
jmp
add
jmp
add
scas
jns
xlat
sar
es
mov
cmpl
and
pop
add
lahf
pop
ljmp
mov
out
xchg
js
jmp
jae
repnz
inc
dec
das
xchg
inc
andl
mov
pop
fisttpll
stos
test
xchg
stos
pop
jbe
nop
aam
mov
jns
push
push
out
sub
push
lods
hlt
xchg
and
sub
sbb
jl
jmp
sub
mov
ja
jns
frstor
sahf
sub
mov
ds
jge
push
decb
sbb
sub
insl
cmp
popa
lods
xchg
rorb
test
lret
mov
inc
je
dec
imull
cmc
enter
enter
mov
push
nop
dec
mov
sbb
or
sub
mov
xor
and
adc
pop
aam
pop
mov
jae
sbb
sub
pop
inc
push
ja
add
outsb
mov
xchg
pop
jp
outsl
cltd
push
call
rorl
mov
jbe
ja
ret
sbb
aam
inc
lea
lods
or
loope
sub
inc
loopne
prefetch
or
imul
lods
cmp
mov
jg
pop
nop
add
mov
add
inc
inc
mov
jae
into
aam
push
push
cli
and
mov
mov
icebp
andb
add
or
popf
jg
cmp
xchg
mov
out
xor
pop
shlb
xor
gs
lcall
mov
pop
and
imul
sub
jge
sbb
inc
stos
mull
jl
nop
and
iret
test
aas
lret
lea
mov
jnp
mov
jp
fmull
xchg
test
mov
rcl
arpl
sbb
ljmp
filds
repz
mov
into
sbb
aam
imul
or
adc
add
cmpsb
shld
faddl
pop
popa
pop
enter
scas
and
shll
xchg
jbe
pop
hlt
pop
xchg
fxtract
pop
popf
mov
jmp
clc
scas
in
or
inc
fwait
cmpb
push
test
loopne
mov
sub
cltd
addr16
mov
lahf
scas
mov
or
inc
mov
push
pushf
ret
nop
dec
enter
fsubrl
jp
dec
fsts
dec
insl
pusha
pop
rorb
jbe
xchg
mov
out
out
adc
mov
ret
mov
mov
sti
add
iret
and
or
pusha
or
push
addr16
cmc
dec
jg
out
jns
push
mov
or
mov
adc
adc
mov
push
jo
jbe
sbb
lcall
fstpt
inc
fdivrl
adc
mov
ljmp
repnz
shrb
mov
and
cmp
hlt
ret
cmp
lcall
lea
pop
sbb
dec
lcall
popa
push
pop
jmp
pop
lret
mov
int3
std
dec
movsl
lea
dec
cmp
and
push
push
ror
popa
add
cmc
cli
rclb
sbb
rorl
cmp
sar
lea
inc
inc
cmp
adc
dec
cmp
inc
int3
pop
push
fidivrl
xchg
arpl
xor
sbb
xchg
rcll
pop
push
pushaw
pop
add
push
rorl
mov
loope
inc
xor
je
test
sbb
fists
sub
call
push
mov
jg
fildll
mov
rorb
je
inc
jb
push
scas
cmc
adc
stos
int3
and
mov
mov
ret
enter
out
js
pop
in
popa
xchg
xor
mov
xchg
fistps
fwait
jae
dec
into
and
lcall
jge
dec
add
outsb
cmp
movsb
xchg
jns
jp
cmp
lods
mov
aas
scas
imul
outsl
push
or
lret
bt
jnp
insl
dec
pop
sub
sbb
mov
cmp
and
sbb
in
dec
or
xchg
sbb
mov
xor
test
das
push
aam
int
push
mov
ret
pop
pushf
mov
pop
add
adc
push
daa
and
dec
gs
pop
jl
mov
jmp
xor
stos
in
adc
popf
sub
push
ds
push
push
lea
loop
jge
repnz
mov
xchg
lahf
and
adc
aad
xchg
pop
push
ss
pop
jne
mov
add
mov
add
aad
push
inc
imul
pusha
std
pop
movsb
dec
add
sbb
icebp
arpl
je
gs
insl
fstps
repz
xchg
in
lcall
mov
insb
or
xchg
in
add
iret
jae
adc
das
pusha
addr16
ror
pop
repz
adc
and
shrl
xchg
shll
sub
mov
data16
pop
icebp
cmp
cmpsb
popf
gs
and
divl
add
std
dec
mov
out
ljmp
rorl
sbb
in
inc
pop
pop
dec
dec
sub
jbe
sub
out
mov
mov
push
xchg
inc
add
jl
and
test
adc
mov
shll
or
cmc
es
adc
imul
out
ds
addl
add
xchg
popf
inc
adc
stc
testb
dec
lods
xchg
xlat
jecxz
xlat
inc
push
or
mov
test
mov
adc
push
fucom
in
pop
fistps
push
jne
clc
push
add
je
in
scas
dec
enter
sbb
je
mov
lods
adc
out
icebp
adcl
jmp
loop
les
push
clc
pop
jg
jl
mov
dec
ret
aad
lock
pop
inc
mov
jno
popa
or
pop
std
lods
or
pop
add
lcall
loopw
repnz
insb
lods
repnz
dec
aas
cmc
inc
pop
pop
imul
sbb
shld
push
test
and
xchg
xor
loop
enter
jmp
inc
enter
mov
xor
jmp
and
outsl
or
hlt
iret
push
jb
std
and
fdivs
pop
dec
mov
add
push
dec
mov
in
repnz
xor
in
sub
dec
out
iret
lock
popf
rorb
testb
shr
push
lds
cli
cmc
daa
mov
cmp
pop
cmc
xor
les
pop
jg
mov
xchg
or
jb
add
jmp
add
xor
xchg
mov
push
fsubrl
xor
unpckhps
and
jp
das
lods
cltd
insl
out
jns
cs
aas
dec
fnstenv
xchg
pushf
and
jb
inc
arpl
push
testb
mov
cli
sbb
pop
stc
or
sbb
xor
pop
int3
inc
mov
mov
ret
mov
fwait
pop
bound
push
push
jg
mov
cld
xchg
pop
shll
dec
dec
popa
cltd
mov
lcall
xlat
es
xchg
outsb
es
lret
shrb
xor
push
adc
push
adc
jge
push
les
loope
jbe
cmp
pop
cmp
inc
insl
adc
dec
jmp
call
into
cmpb
iret
sbb
sbb
or
pop
jge
scas
mov
or
in
cld
jmp
jp
dec
dec
outsl
fstpl
mov
pop
es
in
cwtl
mov
mov
sbb
pop
sub
add
adc
loopne
inc
aas
test
jno
xor
cmpsb
mov
mov
cli
jmp
pushf
sbb
ret
sub
test
test
xor
scas
sbb
fmull
pop
nop
adc
insb
in
jle
ljmp
lret
cwtl
push
inc
repnz
jbe
adc
fsts
mov
and
pop
add
out
clc
test
andb
or
in
jecxz
imul
popf
xchg
mov
xlat
mov
mov
lock
mov
pop
push
outsl
mov
ret
and
add
cmp
rol
pushf
push
push
push
arpl
pop
mov
adc
xchg
sti
addl
clc
lock
push
insb
jmp
push
fstpt
pop
in
xchg
pop
mov
rclb
mov
push
xchg
inc
in
sbb
jnp
xchg
push
push
adc
ror
ja
shll
arpl
int
in
cwtl
fdivs
rclb
das
cmp
sti
lahf
in
mov
push
and
pop
arpl
add
push
xchg
lret
lcall
pop
mov
imul
sub
adc
loope
push
outsb
adc
test
adc
add
aaa
mov
sbb
lcall
test
add
fadd
pop
add
mov
pop
ret
xchg
in
jmp
adc
and
in
andb
xchg
aas
mov
add
cli
ja
sbb
bound
test
cs
mov
stos
or
inc
pop
fwait
add
movsb
hlt
push
mov
jae
dec
jg
cld
gs
add
cmc
jo
lods
pop
jecxz
repz
mov
adc
jmp
mov
push
mov
clc
add
mov
fisubs
and
stos
nop
mov
mov
jo
icebp
ret
jmp
stos
cld
jae
dec
jbe
sbb
or
and
sahf
or
repz
and
adc
hlt
pop
adc
cmp
cli
repz
mov
sti
push
cmp
shll
fistpl
mov
movsb
and
mov
xor
bound
ljmp
idivb
push
xor
fildl
fistpl
mov
pusha
xchg
lahf
jg
int
xor
and
jmp
fwait
out
aas
sub
cmc
push
or
test
sahf
outsl
cmp
mov
mov
pop
out
scas
dec
into
movsl
clc
dec
leave
out
gs
cmp
setp
cmpsb
mov
gs
xor
bound
and
repz
dec
sbb
dec
sbb
repz
inc
dec
int3
pop
fwait
cmp
mov
push
mov
bound
jb
xchg
xor
bound
dec
stos
mov
fucomp
jne
aas
jns
inc
out
fisttps
ss
mov
enter
sti
shlb
out
enter
mov
mov
or
jecxz,pt
cmp
ljmp
in
fs
jmp
rcrb
mov
js
pop
fiaddl
mov
jecxz
movsl
fidivl
jmp
mov
ss
int
test
cmp
das
jp
xlat
xchg
jmp
sbb
inc
jp
pop
cmpsl
ret
push
or
arpl
add
test
icebp
das
cmp
cmpsb
icebp
ds
loopne
mov
stos
jp
sbb
inc
sbb
add
in
lods
test
mov
leave
movntps
pop
dec
lock
gs
or
cmp
insb
push
inc
cmp
repz
scas
imul
push
adc
scas
xor
je
fisubrs
popf
cltd
mov
shrb
adc
icebp
into
pop
mov
movsb
dec
sbb
imul
pop
mov
nop
movsl
adc
cmp
insl
divb
sarl
lcall
adc
cmp
fisttps
sub
cmp
and
mov
out
ja
mov
loope
call
stos
ja
out
ja
in
js
cmpsl
add
shlb
aam
inc
mov
dec
lahf
adc
test
fisubl
lea
insl
add
pop
jnp
jnp
pop
repnz
in
adc
fsts
push
fisubrl
mov
or
jmp
sahf
or
xchg
inc
insb
or
in
cmpsb
xchg
push
jb
pusha
sbb
mov
or
adc
lea
in
enter
xor
jl
cld
aam
in
jge
fisttps
lcall
outsb
mov
fwait
inc
test
xor
adc
imul
pop
je
in
sbb
in
popf
mov
jg
and
pop
pushf
jle
aaa
arpl
enter
dec
loopne
aaa
push
and
test
sbb
pop
mov
adc
mov
cmp
mov
out
xchg
mov
push
xor
add
xchg
sub
fst
mov
in
cmp
test
sub
pop
cmp
dec
jle
inc
add
ret
rorb
loop,pn
iret
and
icebp
insb
cmp
mov
dec
stc
cmp
sub
jo
push
in
mov
push
sbb
mov
jne
xchg
push
insl
xor
loope
adc
mov
or
sarb
lods
push
dec
jae
xchg
pop
mov
sub
ss
int3
adc
inc
subl
out
push
lods
xchg
sub
and
sbb
push
es
or
aas
popa
mov
and
cli
mov
out
test
jg
adc
roll
rcll
lahf
addr16
inc
lods
dec
jmp
mov
nop
cmp
cmp
fst
dec
mov
pop
mov
fstpt
pusha
pop
jne
and
aas
pop
mov
mov
or
or
cwtl
mov
xor
add
add
fdivrs
mov
jae
leave
mov
or
enter
negb
subl
in
mov
cwtl
into
insb
jg
jns
mov
pusha
pop
in
mov
fildl
rolb
test
data16
ret
pop
aaa
cmpsl
inc
xchg
push
fstps
repnz
arpl
jl
or
inc
dec
ret
outsl
sub
pusha
mov
push
sub
cmp
cwtl
xor
test
nop
aad
adc
ds
and
ss
testb
insb
imul
push
fcomip
inc
push
mov
pop
out
sahf
out
adc
or
divb
jno
sbb
and
jbe
repz
dec
adc
gs
lea
push
aaa
cs
push
sti
sbb
inc
in
iret
lods
scas
push
aaa
dec
loope
movsl
and
pop
and
insb
fdivrl
idivb
fsubrs
lret
cmpl
and
mov
dec
push
add
stos
cmpsb
mov
push
add
je
xchg
js
inc
sbb
rclb
push
add
stc
sbb
jmp
loopne
outsl
pop
add
mov
stos
dec
scas
add
jno
frstor
test
lods
mov
sbb
int
dec
cltd
es
and
and
xor
jnp
dec
push
icebp
push
je
jmp
in
aas
mov
mov
cmp
xor
dec
adc
fs
gs
hlt
or
jae
push
and
sbb
adc
repz
mov
mov
iret
jp
mov
dec
push
loopne
push
sbb
mov
outsb
jmp
mov
cwtl
mov
jecxz
add
adc
lds
adc
add
mov
xor
jp
rcrb
cwtl
outsb
cmpsb
int
ret
cmp
loope
enter
sub
mov
mov
push
cmp
aam
and
xor
out
mov
popf
sbb
cmp
mov
jg
test
jecxz
cmp
mov
popf
mull
lcall
mov
repz
loop
iret
arpl
jno
mov
mov
sbb
adc
push
pushf
shll
dec
mov
leave
in
shll
stc
jne
jle
add
mov
push
sub
inc
xor
lret
add
test
inc
fucomi
loope
sbb
leave
lcall
jns
xor
mov
or
xchg
addl
inc
cwtl
lods
lods
arpl
sub
xor
shll
push
cltd
lea
in
dec
popl
rcll
cwtl
in
push
pop
cli
ret
test
adc
pop
mov
sbb
inc
or
insl
inc
push
fcomps
loope
xor
dec
cmp
dec
dec
mov
mov
xlat
lock
add
xchg
push
jae
lret
mov
test
cmp
mov
fnstcw
or
int
mov
sub
mov
data16
mov
lods
xchg
pop
in
sub
add
std
mov
shll
std
adc
pop
push
insb
mov
or
lds
movsb
ret
fists
outsl
lret
xor
cmp
xchg
cmp
and
sahf
or
bound
cmp
xchg
mov
das
int3
cli
pop
push
xchg
ljmp
cli
mov
loopne
mov
lods
lret
sbb
scas
add
sbb
mov
xorb
jg
sbb
mov
es
pop
or
jno
pop
pop
add
rol
outsl
sub
xorb
int
jle
push
outsl
pop
mov
sahf
adc
cmp
shr
inc
xor
out
test
lods
or
jmp
test
arpl
adc
es
leave
fistpl
adc
mov
add
mov
aas
mov
cmp
sti
shlb
gs
arpl
addl
pop
cli
out
and
addr16
mov
js
pop
test
test
stc
mov
mov
lock
ficompl
sahf
lret
xor
dec
dec
add
arpl
ret
cmp
inc
cmp
sbb
fisubrs
cmp
cmp
cmp
lret
adc
and
push
cmp
sbb
jg
add
sbb
sub
add
jp
inc
pmuludq
mul
insb
pop
ret
enter
add
fs
jmp
data16
cmp
mov
out
add
xor
movsb
xchg
adc
pop
mov
add
fdivs
sub
adc
dec
stos
adc
pop
and
dec
inc
loope
push
popf
in
ljmp
rcr
lahf
rorb
cwtl
pop
pop
insb
clc
add
in
stos
repz
mov
sbb
cmp
lret
gs
adc
insl
loope
and
cmp
and
clc
int
dec
xlat
sbb
cmp
cmp
hlt
insl
mov
repnz
and
or
xchg
out
sbb
dec
in
out
push
jge
lcall
into
bound
jge
sub
cmc
mov
cltd
xchg
ror
out
mov
out
leave
popf
lret
bound
aad
sarb
test
lea
dec
inc
movl
push
icebp
pushf
mov
out
mov
xchg
inc
xchg
cs
fists
mov
test
out
add
adc
lahf
mov
jp
cmp
add
jo
fcompl
les
lea
push
addr16
jg
mov
idivl
mov
sbb
mov
test
mov
push
sub
cmp
leave
cmp
or
mov
sbb
scas
ret
pop
out
in
or
imul
adc
fiaddl
bound
movsb
pop
sub
add
xchg
test
xacquire
push
stos
adc
inc
and
inc
arpl
stc
adc
and
cmp
push
mov
js
std
addr16
ret
popf
sbb
gs
add
xor
xchg
das
fimuls
mov
lcall
mov
fstl
pop
sub
dec
sbb
jge
scas
sbb
xchg
xor
dec
into
and
inc
inc
jge,pn
push
test
cld
mov
aaa
add
xor
mov
les
mov
mov
test
testl
aas
fisubs
xchg
lret
test
jecxz
push
xchg
dec
sub
or
iret
mov
movsl
mov
jmp
lea
es
lock
bnd
repz
add
push
or
adc
scas
mov
int3
xchg
dec
add
mov
decb
mov
jmp
fwait
jp
das
adc
dec
pop
loope
sbb
dec
popa
or
xchg
into
push
dec
add
scas
sbb
bound
push
mov
aas
add
and
repz
bound
fdivl
mov
movsl
push
jecxz
xor
xor
repz
popf
cmpsl
push
mov
out
iret
mov
inc
adc
mov
shlb
push
lea
outsl
sub
pandn
xchg
lahf
sub
or
call
fstpl
and
inc
push
out
andl
pop
movsl
ljmp
filds
mov
leave
mov
cmp
filds
sub
xor
aas
and
lcall
jnp
bound
push
sbb
in
adc
inc
testb
xchg
sbb
movsb
mov
mov
inc
sbb
and
lea
insl
addr16
lods
push
push
test
outsl
jl
jne
mov
cmp
dec
mov
jge
mov
mov
push
loope
pop
pop
sub
cli
cmp
add
clc
push
mov
and
pop
inc
ret
inc
push
adc
or
daa
test
and
mul
adc
lock
jle
or
mov
and
fadds
test
lods
cwtl
pop
pop
popa
mov
xchg
add
and
nop
or
jl
into
or
mov
and
mov
pusha
out
arpl
cmp
cmp
sbb
arpl
insb
pop
scas
bound
outsb
sbb
iret
jge
vcvttsd2si
arpl
jecxz
xchg
adc
xchg
mov
pop
sub
or
cmp
sti
or
cld
jb
ds
pop
inc
adc
fistl
pusha
mov
es
std
jb
cmp
inc
pop
lret
arpl
dec
add
es
in
mov
mov
daa
push
aas
jmp
aaa
pop
aam
negl
cs
movsb
cwtl
adc
cmpsb
push
sub
mov
pop
sbb
mov
mov
cmp
subb
test
jb
mov
into
cmp
cld
and
mov
add
cmpsb
into
je
ret
cmp
orb
es
adc
shlb
jl
dec
mov
mov
ljmp
inc
idivb
cltd
jecxz
stc
fdivrl
out
dec
mov
sti
out
js
iret
lods
sub
pop
in
imul
hlt
push
mov
stc
and
shr
ret
mov
movsb
push
popl
jge
loop
sbb
lods
sbbl
lcall
icebp
cwtl
movsl
dec
lret
call
aam
aaa
leave
lret
cld
mov
jl
psrad
or
es
and
adc
mov
clc
cmp
js
enter
sub
imul
sub
mov
fisubl
and
push
filds
xlat
sub
insl
int3
sub
push
sub
push
filds
inc
ffree
xchg
js
sub
push
jge
adc
inc
xchg
push
outsl
in
or
fstpl
pop
into
add
jae
push
xor
or
xchg
fdivl
fisttps
cli
cmp
pop
rcl
fimuls
sub
nop
out
jbe
cmp
mov
shrl
fwait
or
sarl
sub
xor
mov
xchg
shlb
inc
icebp
test
out
imul
mov
inc
negl
mov
mov
lahf
adc
adc
mov
cmp
mov
cmp
pop
sbb
add
lcall
push
testb
push
cli
fiaddl
mov
cmpsl
enter
cwtl
sahf
lds
xor
and
and
aas
mov
pop
js
scas
pop
loope
push
lock
inc
jno
sbb
cmp
inc
push
nop
or
pop
pop
and
xchg
sahf
lods
cmc
shlb
dec
fists
mov
out
sbb
repz
and
gs
mov
les
ficomps
push
xchg
push
or
and
out
pushf
cs
xor
xor
call
push
mov
adc
mov
mov
test
cmc
jne
insl
fwait
rcrl
pop
rclb
rcl
out
sub
outsb
lret
push
icebp
dec
mov
mov
sub
pop
rclb
bound
push
mov
mov
inc
xchg
lock
add
mov
mov
push
ret
mov
nop
or
or
mov
arpl
icebp
mov
jae
dec
pop
mov
and
pop
xchg
in
dec
sahf
adc
push
cmpsb
lods
add
adc
jmp
out
hlt
mov
pusha
xchg
shlb
popa
ja
pop
inc
mov
in
mov
test
adc
in
inc
mulb
dec
sarb
inc
cmp
test
sbb
or
and
add
stc
in
call
cmovns
push
cld
pushf
es
std
aaa
cs
movsb
scas
pop
call
lahf
pop
lcall
ss
mov
xchg
out
lahf
sti
or
rcrl
sbb
dec
les
adc
movsb
xor
sub
xor
rorb
repnz
out
dec
outsb
scas
insb
jno
test
cmp
jle
mov
xor
shlb
jmp
sbb
sub
and
jle
dec
xor
mov
stos
arpl
mov
mov
xchg
or
sti
adc
cmp
popf
ret
cltd
daa
fs
fs
xor
or
sbb
adc
test
xchg
sub
mov
sub
jne
fldt
push
jbe
fcomi
or
scas
mov
jnp
lods
pop
sbb
daa
mov
ja
dec
and
push
test
cmp
mov
hlt
les
repnz
pop
dec
sbb
lock
outsb
nop
dec
push
mov
ds
cmp
xchg
test
adc
jle
lods
or
fldt
pushf
test
roll
fxtract
push
or
das
push
fidivl
mov
sub
negl
and
cmp
imul
push
adc
jbe
and
mov
adc
lods
dec
orb
inc
loop
inc
outsl
aam
and
fsubs
mov
push
xchg
ret
mov
dec
mov
outsl
insb
push
pop
push
das
push
aam
xor
inc
movsb
add
jmp
mov
xor
dec
sbb
shl
fstpt
adc
incl
test
mov
pop
inc
inc
jbe
loopne
push
jg
add
imulb
call
bound
rcrl
loope
sti
inc
shll
pushf
or
leave
cmp
xchg
sahf
addr16
push
cmp
test
push
jbe
outsl
imul
jmp
out
adc
lret
ljmp
insl
xchg
lcall
add
cmp
das
pop
cmp
sbb
or
fidivs
or
iret
lret
call
lcall
mov
cmp
lea
and
daa
cmp
lahf
test
sub
jl
movl
aad
or
jl
and
push
inc
out
xchg
fs
shr
lcall
mov
cmp
cmp
ds
xchg
or
cmp
in
jb
scas
push
fimull
mov
test
int
lods
xor
loop
stc
mov
test
cmp
or
add
mov
inc
movsb
data16
mov
add
mov
sahf
mov
add
mov
mov
dec
sbb
int3
fisttpll
sbb
fidivrl
jmp
mov
iret
push
dec
mov
jge
adc
sub
mov
loop
repz
lock
jb
adc
dec
sbb
test
movsl
push
mov
mov
sbb
adc
scas
pop
into
or
mov
xchg
hlt
nop
js
clc
pop
repnz
lods
mov
mov
jno
in
rcrl
push
es
and
cmpsl
popf
push
and
jae
push
xchg
xchg
das
js
repnz
leave
sar
out
pop
cwtl
adc
add
push
cmp
inc
sub
out
inc
and
inc
cli
lods
cmc
xor
in
jae
xor
iret
lahf
dec
pop
adc
rcrl
and
xlat
aas
sbb
icebp
mov
mov
add
xor
mov
push
xor
shrb
nop
mov
xchg
aam
push
shlb
mov
mov
mov
aad
xorl
jmp
add
repz
frstor
fstpt
shlb
xor
xchg
pop
push
adc
aad
shl
mov
ljmp
fcompl
into
mov
out
test
push
pop
insb
add
lock
xor
xor
lret
push
push
xor
fstpl
rcrl
je
testl
xor
stos
mov
fwait
ret
xchg
xchg
mov
ja
sahf
push
xchg
arpl
adc
rorb
test
xchg
and
jbe
mulb
arpl
outsb
jl
aad
mov
fisubs
lods
xchg
mov
pop
xchg
stc
fcoms
push
in
cmp
fcoms
sbb
sbb
cmp
jecxz
mov
loopne
stc
cli
or
inc
inc
jb
mov
out
ss
adc
xor
inc
std
cmp
jno
stc
adc
cmp
mov
mov
hlt
pop
xchg
pop
dec
mov
mov
cmc
mov
nop
fisubs
xor
in
lock
loope
dec
aas
es
fimuls
mov
mov
pushf
sbb
cmp
sbb
movsb
ret
and
mov
xchg
arpl
pop
adc
fistps
xchg
loop
and
fidivrs
lret
push
sbbl
testb
mov
or
jo
mov
sub
das
mov
jl
daa
hlt
xchg
mov
imul
dec
xchg
dec
addr16
scas
pop
cltd
out
cmpsb
xor
add
or
mov
rclb
mov
lds
mov
jl
std
lods
sbbl
cmp
in
xor
pop
adc
in
les
push
in
scas
jp
sbb
or
pop
enter
lret
xchg
call
sarl
imul
mov
adc
leave
addb
in
and
imul
sbb
or
mov
cltd
cmp
cmpsb
inc
cmp
mov
dec
pushf
clc
fcompp
add
ret
push
xorl
xchg
jae
and
lods
popf
xchg
popa
cs
mov
insl
xchg
dec
fnsave
imul
xlat
dec
push
mov
sahf
cmp
in
mov
rorl
or
gs
push
pop
mov
jbe
and
mov
loopne
das
xchg
push
sbb
es
pushf
xchg
int
lcall
stos
jno
sbb
mov
test
test
addr16
movsl
leave
test
lock
mov
inc
jne
lds
push
push
in
loope
ficoms
clc
in
push
cmp
lods
aad
add
fsub
jns
jne
loopne
pop
mov
mov
push
cld
jmp
cmpsl
pop
pushf
push
ja
stc
pop
xchg
cmpsl
cmpsb
mov
jg
cmpb
mov
sbb
shrb
sbb
push
sub
jmp
sub
icebp
cmp
mov
mov
xor
dec
in
fmuls
aas
xchg
mov
out
into
lcall
popa
or
das
jno
adc
arpl
adc
pop
mov
lods
fdivs
ljmp
nop
mov
out
dec
push
mov
enter
mov
xchg
adc
add
sbb
mov
ljmp
mov
mov
iret
sbb
jne
fistpll
add
mov
cmpsl
lds
fwait
adc
filds
dec
fs
xchg
into
stos
dec
jns
inc
xor
cwtl
loop
mov
adc
pop
adc
xchg
pop
add
lock
cltd
jg
loopne
lods
mov
add
xchg
imul
and
sar
mov
lcall
sahf
push
mov
xor
dec
lcall
pop
add
std
movsb
sub
icebp
repz
hlt
and
xchg
dec
ret
insb
aad
loope
dec
sysexit
and
negb
or
dec
loopne
or
pushf
mov
pop
stos
pop
daa
ds
cmp
pop
rolb
inc
loopne
es
and
test
popa
adc
pop
dec
std
pop
pop
push
mov
int3
mov
sbb
sbb
out
add
push
ss
out
je
outsl
movsb
push
and
pop
mov
mov
dec
mov
loopne
test
xor
repnz
fsts
icebp
cwtd
dec
push
pushf
sahf
inc
std
repz
pop
add
sbb
adc
and
cltd
repnz
pop
orb
mov
fsubr
mov
mov
into
push
jae,pt
dec
data16
ja
clc
add
fcomip
jnp
inc
jl
dec
pop
sub
je
scas
mov
ljmp
sahf
dec
xchg
in
xchg
in
jns
idivb
aad
aad
dec
in
adcl
xchg
popf
add
je
adc
push
cmp
and
sub
adc
popa
pushf
in
sub
xlat
add
sbb
sbb
push
lods
out
ja
jle
addb
aad
movsl
mov
rcll
call
xor
sub
jl
fwait
arpl
add
adc
jmp
or
mov
or
fs
sub
ds
aaa
inc
adc
xchg
cmp
ret
dec
sbb
sub
ds
inc
or
cmp
inc
adc
and
dec
mov
addr16
or
jbe
xchg
cmp
in
lds
into
mov
sub
inc
push
or
xorl
aam
arpl
jg
xor
loope
sbb
or
int
jp
loopne
push
mov
shll
xor
cmpsl
add
std
xchg
pop
mov
mov
cmp
les
lret
dec
je
gs
in
cli
fldenv
cmc
bound
daa
adc
out
in
sbb
int3
mov
or
shr
cmp
sbb
rcl
movsl
fimuls
mov
jmp
pusha
xor
mov
xchg
push
mov
mov
and
loope
mov
test
ret
mov
add
sbb
jp
ljmp
pop
les
shrl
in
pop
addl
sbb
hlt
mov
cmp
gs
je
xor
xor
lods
or
mov
adc
xchg
sbb
pop
push
push
sub
lds
or
add
shrb
sub
daa
scas
das
pusha
cmp
ds
push
roll
lahf
mov
insl
inc
jbe
imul
mov
sbb
outsb
jecxz
hlt
loop
dec
xor
add
scas
bound
mov
adc
inc
push
push
loopne
push
sbb
xchg
fsubp
jnp
adc
sub
xchg
push
std
in
mov
pop
adc
kxorb
mov
inc
push
sub
inc
imul
dec
lods
mov
or
out
adc
inc
insl
fwait
lods
int3
and
pop
cwtl
push
jl
push
and
push
jp
inc
jl
xchg
insl
insb
pop
fsubrs
dec
outsb
adc
mov
xchg
ljmp
int
lods
jnp
pop
dec
push
jl
popl
inc
jnp
in
lret
push
add
push
loop
repz
cwtl
and
les
cwtl
shl
fcmovb
inc
pop
jmp
add
adc
sub
int
fimuls
mov
add
dec
xlat
sbb
roll
push
imul
cli
mov
and
jge
mov
ss
xchg
jo
adc
mov
pushf
pop
pop
std
outsb
outsl
pusha
out
dec
adc
data16
ret
lret
cmp
hlt
sbb
mov
jle
xchg
pop
or
inc
das
cmp
jecxz
push
pushf
mov
jns
mov
rcrb
sub
stos
fs
outsl
cs
movsb
add
xorb
mov
sbb
les
shl
or
gs
out
mov
mov
les
fisttpll
pop
daa
outsl
mov
stc
fwait
mov
in
sub
nop
mov
out
enter
xchg
es
outsb
insl
mov
pop
jae
dec
lods
pop
out
jno
fdivr
push
pop
repnz
int3
loope
les
and
lods
jecxz
xchg
lret
and
in
or
add
scas
jle
push
or
pusha
out
fstps
bnd
lret
stos
and
pushf
mov
mov
lea
das
test
and
out
movsl
mov
scas
cmc
popf
and
add
xor
icebp
push
fmuls
test
pushf
dec
push
loop
lock
mov
xor
dec
mov
cmp
inc
mov
pushf
add
in
lret
gs
dec
int3
cmpl
jp
ss
mov
cmp
push
scas
into
int3
or
mov
and
outsb
mov
jg
es
stos
clc
push
mov
popf
jp
or
add
ljmp
cs
inc
sub
ret
in
and
jmp
xor
lds
cmp
sbb
aaa
pop
adc
dec
push
addr16
cmp
je
inc
out
xor
lcall
cmpsl
dec
icebp
lods
outsl
insb
push
mov
sarb
jmp
into
and
add
xlat
and
decl
addb
in
mov
bound
or
negb
sahf
sbb
xchg
pop
pusha
push
jecxz
jno
adc
out
mov
int3
pop
popf
push
bound
int3
mov
and
add
arpl
add
jmp
add
lods
hlt
mov
hlt
mov
mov
add
fildll
fisttps
loop
push
daa
aam
stos
int3
mov
push
xchg
mov
cmpsl
fistpl
inc
cmc
pop
mov
and
in
push
popa
and
mov
xchg
movsl
movb
jp
ljmp
push
rcrl
pop
call
xchg
mov
add
cmpsb
push
pop
jp
stos
cmp
cmpsl
push
or
fistpl
je
xchg
std
fwait
loop
pop
enter
jbe
pop
shlb
add
pushf
repnz
push
sbb
mov
or
dec
or
dec
ljmp
mov
and
sub
cmp
out
or
sbb
pop
inc
pop
and
adc
mov
outsl
pushf
and
in
and
shrb
aas
adc
or
out
in
cltd
and
call
rolb
mov
je
or
adc
ss
push
push
mov
cmp
jmp
nop
mov
push
pop
lret
push
sbb
imul
and
leave
pop
test
lret
or
imul
pop
aaa
jne
xchg
sbb
and
inc
pop
cmp
pop
and
mov
jle
mov
jmp
js
xor
divl
popa
push
dec
pop
rolb
xchg
aad
inc
sbb
mov
in
enter
xchg
ds
push
xchg
aam
xor
sbb
mov
sub
das
mov
into
rolb
push
cld
lock
in
addr16
jp
mov
jae
aaa
ret
adc
fstps
jo
test
jmp
aas
rorb
lret
lret
test
mov
push
jp
pop
lret
and
leave
nop
or
cltd
xchg
dec
ret
aam
push
sbb
in
push
xchg
xchg
jmp
int3
insb
out
loopne
mov
xor
out
inc
cmpsb
in
mov
push
mov
cmp
pop
and
inc
out
popa
movl
addr16
nop
call
jle
xor
std
jl
cmp
bound
xchg
pop
mov
sub
mov
dec
into
leave
jne
push
xorl
push
lret
in
sub
and
pop
push
mov
push
sbb
rolb
stos
xchg
shlb
cwtl
and
test
out
mov
orl
stc
dec
fnsave
aad
icebp
sbb
sbb
mov
mov
jno
repnz
jl
out
inc
add
fistpll
mov
sbb
xor
push
sbb
lods
add
cmp
das
insb
push
shl
cltd
aas
mov
xor
lods
cld
jecxz
scas
and
imul
mov
xchg
lea
jge
in
cmc
lret
lock
xchg
jns
mov
pop
dec
jmp
jmp
jge
imul
cld
inc
mov
es
hlt
scas
popa
dec
xchg
fisubl
test
cli
mov
push
out
sbb
push
pushf
stc
adc
sub
imul
or
enter
and
adc
test
jle
cld
xchg
xchg
rclb
es
pop
dec
pop
mov
mov
test
jns
aam
test
push
insl
repnz
or
ljmp
enter
or
xor
lock
imul
mov
je
xor
cmp
mov
data16
pop
sbb
fcoms
or
icebp
lds
shlb
sbb
xchg
mov
jnp
fsubrl
mov
dec
lea
idivb
jp
sbb
sub
jmp
je
pop
adc
inc
jmp
gs
cmp
mov
and
sub
sbb
cmp
jno
outsl
sub
in
push
scas
test
mov
push
in
mov
push
nop
imul
fildll
jnp
cwtl
push
stos
test
jae
daa
frstor
data16
rcll
inc
inc
pop
dec
add
and
jmp
shr
inc
stos
adc
leave
scas
jno
add
mov
pop
push
addr16
or
test
pop
aas
mov
addr16
fidivl
dec
and
into
add
jp
adc
mov
fwait
out
mov
add
jnp,pn
ret
dec
fisubrl
dec
adc
pop
lock
shr
sub
and
notb
dec
jns
fsub
xor
insb
lret
lock
push
dec
or
cltd
ret
cmpsl
sub
iret
xorl
dec
in
jbe
mov
mov
shlb
push
loope
jb
push
sbb
adc
jmp
dec
jp
or
push
or
mov
pop
jbe
pop
add
nop
adc
sbb
jl
icebp
cmpsl
scas
mov
in
fadd
and
call
mov
lret
clc
ret
pop
aaa
das
dec
bnd
jmp
xor
shl
mov
sahf
mov
sti
daa
popl
outsb
xor
and
ljmp
xorb
xchg
imull
xor
movsb
cmp
adc
xchg
test
js
push
sar
ret
jns
adc
dec
cmp
aaa
mov
fs
aam
mov
stos
adc
cltd
sarl
cltd
pushf
push
subl
jmp
mov
repnz
pop
int
ret
imul
test
sbb
mov
lret
push
jecxz
xchg
ret
jl
out
fsts
lds
cwtl
inc
cmc
xchg
fisubrl
call
mov
pop
and
dec
and
push
jne
fmull
pusha
int3
shll
pop
cmp
add
xchg
xchg
insl
repz
inc
dec
jp
repz
pop
and
jb
dec
push
pusha
mov
daa
out
insb
cmp
int
rolb
mov
push
xchg
dec
out
sbb
es
xor
push
stc
rclb
jae
sub
mov
adc
int3
xlat
push
pushf
xchg
pop
jge
add
push
jnp
out
cli
sub
jmp
mov
gs
add
int3
pop
cmp
mov
mov
loopne
push
mov
test
adc
sti
and
lods
pushf
cmpsb
scas
mov
xchg
mov
and
pop
fprem
and
cwtl
fidivl
adc
inc
cmp
in
lret
repz
clc
loopne
test
loopne
inc
clc
inc
xor
pop
jb
in
sti
jne
pusha
hlt
aas
push
xor
add
lret
jae
jb
mov
cmpsl
xacquire
fildl
sub
fbstp
mov
imul
jmp
aad
daa
xchg
das
cli
jb
xchg
sbb
pushf
test
test
ss
lret
fbld
pop
add
test
jae
push
into
std
or
cmp
ss
pop
aam
into
das
iret
mov
pop
popf
or
inc
shrb
incl
mov
mov
inc
mov
xchg
dec
ljmp
mov
mov
cmp
into
inc
sbb
or
mov
xor
dec
inc
popf
repnz
push
push
mov
pusha
pop
mov
icebp
inc
dec
je
stos
inc
insl
dec
data16
enter
jne
int
adc
add
mov
or
or
cwtl
lret
pop
mov
xchg
sub
adcl
cltd
jae
imul
sbb
andb
cs
push
popa
xor
sbb
push
das
popa
push
int
lcall
xor
out
jl
rsqrtps
lea
inc
pop
push
or
push
lds
mov
sti
lcall
arpl
mov
ja
int
cmp
or
stos
pop
test
fisubrl
and
mov
dec
xor
mov
xchg
dec
mov
mov
or
addr16
imul
loopne
mov
jbe
mov
outsl
andl
icebp
pop
cmp
cmp
push
or
lock
push
mov
andb
outsb
ds
pop
ljmp
dec
sub
jmp
mov
test
decl
jecxz
dec
and
mov
cmp
aam
roll
and
and
loope
int
xchg
int3
adc
xchg
jb
jge
divb
in
mov
es
ljmp
into
ljmp
cmp
aam
mov
sbb
xlat
movsl
inc
sub
test
mov
dec
ss
pop
pop
lret
adc
add
cltd
cli
jecxz
mov
dec
inc
sub
adc
and
lret
jnp
arpl
cs
jno
into
fbstp
and
xor
cmp
xor
sub
inc
das
sbb
inc
inc
push
insl
jge
scas
decl
fdivp
inc
mov
sub
push
push
push
pusha
shl
xchg
jecxz
test
inc
dec
push
pop
mov
adc
cwtl
fsubs
icebp
mov
pop
fldt
testb
lret
cmp
pop
inc
fnstenv
cmp
adc
out
sub
out
insl
xor
sti
pushf
jmp
lea
mov
sbb
lea
aas
gs
scas
and
sbb
push
mov
cld
pop
lret
pop
adc
stc
pop
mov
and
in
enter
sbb
inc
ficoms
pushf
and
cld
mov
sbb
adc
xor
aaa
mov
loope
jecxz
fcomps
cmc
mov
ss
fmuls
loop
das
push
push
rcl
push
jl
push
inc
jge
pop
pushf
dec
push
xor
out
fists
jnp
aas
cltd
inc
sub
jno
cs
dec
sub
mov
jb
mov
add
adc
and
xchg
mov
add
adcl
mov
inc
imul
inc
sub
add
arpl
mov
ret
repz
insb
hlt
imul
rcrb
jge
fistpl
pushf
frstpm(287
sbb
mov
stos
mov
ret
pop
add
fimuls
pop
addb
push
in
sub
movsb
add
cmc
mov
push
mov
je
les
rclb
lock
add
int
pop
cmpsl
scas
ja
mov
inc
and
jne
jle
mov
repnz
cs
stc
adcl
dec
xor
cmpsb
mov
adc
or
rorb
mov
inc
jecxz
in
aam
inc
sbbl
push
inc
add
rclb
or
jnp
adc
cmpl
les
xchg
sub
std
jbe
loopne
mov
mov
cmpsl
xchg
lods
shrl
lock
mov
sub
add
cmp
lock
clc
ds
test
js
ret
loop
test
mov
iret
leave
adc
sbbb
mov
mov
les
xchg
mov
loopne
int
dec
mov
jo
mov
mov
out
cltd
pop
push
test
sbb
imul
loop
inc
or
in
push
repz
insb
mov
shrl
push
clc
pop
dec
and
mov
sahf
dec
mov
popa
jae
dec
movsb
inc
adc
ds
mov
pop
push
inc
cmp
xchg
sub
popa
jb
fidivl
fldl
testl
ret
mov
push
jp
mov
mov
mov
dec
movsl
xor
cmp
fs
cmp
mov
dec
test
mov
dec
sbb
add
jns
std
jae
adc
pop
or
clc
stos
scas
push
dec
cmp
imul
adc
adc
fs
dec
cmp
mov
push
mov
adc
out
call
push
shll
shr
dec
mov
xchg
sub
sbb
in
aaa
outsl
xchg
cmc
scas
dec
jmp
mov
pop
add
pop
insl
and
inc
or
movsl
add
pop
mov
ljmp
or
movsl
push
jo
push
adc
sub
enter
push
movsl
dec
and
jno
inc
xchg
loope
lods
fs
test
dec
add
stc
aaa
mov
push
mov
xchg
les
insw
mov
add
pop
das
cmpsl
rcl
mov
in
xor
or
daa
lea
ret
fsubr
aaa
testb
aad
sahf
and
sub
adc
jle
mov
mov
dec
mov
push
xchg
mov
and
filds
cmc
lret
xchg
jle
mov
mov
add
rorl
rcrb
xor
xorb
sbb
jo
inc
inc
xlat
mov
rclb
and
cwtl
pop
pop
dec
and
call
scas
call
sub
mov
cmp
hlt
jp
lret
xchg
jnp
lcall
sbb
adc
sub
and
pop
aad
int
pushf
test
rol
dec
inc
pusha
mov
in
jl
push
stc
pop
into
cmpsl
adc
mov
ja
das
and
push
ss
xor
leave
inc
test
call
add
xchg
cltd
jmp
mov
je
add
shll
mov
test
mov
pop
xchg
cwtl
xchg
adc
sbb
mov
pop
jle
loope
dec
test
mov
push
les
inc
insb
sbb
mov
adcb
push
pop
orb
movsl
ja
enter
xor
test
dec
push
das
cmc
mov
push
or
jnp
mov
mov
enter
shll
scas
mov
push
jl
ss
xchg
loop
ret
and
lock
ret
or
std
add
je
or
mov
ljmp
scas
insl
fsubrl
pop
or
xor
out
or
mov
ret
ret
sub
rcrl
and
xchg
dec
cld
cmpsl
cld
mov
out
cs
ret
mov
pop
sub
fs
stos
cmp
xchg
mov
adcb
inc
pop
lock
popl
repz
stos
xor
cmp
mov
lret
xchg
dec
mov
and
sbb
sbb
cmpl
mov
lcall
pop
arpl
stc
lock
mov
inc
inc
aad
adc
sbb
jle
push
adc
mov
in
push
jb
inc
fdivrs
inc
test
inc
ret
and
test
sahf
lcall
insl
sbb
loop
les
dec
push
aas
mov
push
loopne
pusha
mov
pop
das
mov
cmp
inc
push
cmp
daa
std
dec
adc
push
adc
xchg
sbb
xor
inc
call
add
sub
mov
inc
repz
insw
dec
xchg
loope
add
icebp
popa
or
psrld
mov
cwtl
cli
dec
adc
push
jg
pop
inc
fdiv
loopne
cmp
je
cmova
pop
jmp
or
arpl
pop
adc
dec
mov
inc
ficoml
mov
xor
fdivs
daa
xchg
push
xor
insl
outsl
sbb
mov
mov
sub
imull
adcb
jecxz
push
push
dec
mov
mov
out
movsl
xchg
fmull
nop
pop
ret
cli
divb
xorl
push
les
aam
sub
in
rorl
xor
jg
push
lret
loop
push
es
inc
pop
sub
xchg
pop
arpl
lds
or
jp
inc
xchg
pushf
push
scas
lds
pop
daa
mov
and
mov
xor
mov
and
icebp
inc
cs
repnz
dec
out
nop
popa
xchg
in
mov
movsl
cmpsb
push
inc
xor
sbb
insl
and
out
popa
push
in
aas
xor
fadds
stc
cmpsl
add
jne
fwait
mov
mov
repnz
pop
pop
movl
out
adc
push
aam
popf
jle
push
repz
lds
fcmovb
push
pusha
stos
push
jo
and
bound
push
push
mov
popf
push
hlt
stos
mov
inc
inc
and
dec
outsl
adc
or
jns
testl
adc
pop
cmp
and
fbstp
mov
cwtl
push
and
lcall
sub
mov
shll
sti
adc
jno
and
js
or
mov
fwait
stos
push
rcr
adc
popa
fbld
ds
push
push
popa
xchg
in
cmp
dec
adc
adc
stc
mov
cmpb
pop
dec
pushf
fistl
lcall
sub
xor
sahf
mul
pop
adc
sbb
call
lret
movsb
push
sub
iret
dec
sub
mov
popf
mov
iret
cltd
dec
mov
call
dec
fwait
jmp
sbbb
imul
or
cltd
mov
insb
inc
aaa
or
les
cmp
inc
mov
inc
test
and
lcall
jge
pop
rorl
pop
jecxz
rorb
jmp
cs
fisubs
outsl
repnz
and
push
pushf
sti
scas
cmpsb
js
xchg
call
cwtl
mov
lret
adc
sub
adc
mov
inc
in
sarb
cli
add
jg
sbb
cltd
sti
idivl
out
loopne
decb
xor
in
dec
fwait
mov
insl
repnz
dec
mov
in
insl
adc
enter
inc
xor
sbb
addb
cmc
imul
bound
les
insb
lock
into
cmp
loopne
cmp
xchg
insb
pop
adc
imul
in
or
cmp
xchg
scas
test
jno
test
mov
std
pop
sub
sbb
dec
xchg
cs
ljmp
push
fcoml
nop
cltd
xchg
pop
pop
test
lret
cmp
ret
mov
inc
inc
mov
lea
push
mov
adcb
jp
xor
pop
add
xchg
add
dec
xor
ficomps
data16
sbb
sbb
pop
scas
adc
cs
mov
aaa
and
cmpb
adc
mov
sbb
or
jmp
sbb
inc
and
inc
or
push
push
dec
add
movsl
out
popa
pop
negb
cmp
inc
and
xchg
mov
adc
bnd
in
xchg
insl
jo
movsl
movsb
into
or
xchg
push
push
jle
and
or
xor
pop
xor
cli
mov
stos
sbb
enter
popa
pop
jo
test
in
cmp
adc
mov
shrl
mov
mov
fstpl
mov
ds
fwait
in
pop
add
xchg
outsl
mov
pop
mov
xlat
jno
faddl
mov
in
push
pop
jns
dec
adc
mov
push
imulb
scas
or
inc
push
sbb
in
dec
pop
iret
data16
das
lret
add
and
stos
push
fldcw
xor
cmovg
dec
aam
mov
ds
bound
scas
fwait
mov
or
lods
push
in
push
lock
dec
cmp
jmp
dec
sti
add
pusha
add
jno
nop
cmpsb
sbb
jmp
inc
cmp
subl
sbb
aam
mov
test
pop
jo
inc
mov
hlt
push
das
cmpsb
ficomps
jno
lahf
push
outsb
out
call
or
dec
mov
pop
cli
orb
mov
xorl
mov
pusha
mov
mov
xlat
sub
sarl
jnp
push
iret
jg
lods
push
shlb
fwait
pop
cmpsl
or
xchg
dec
inc
jle
cli
pop
xchg
pop
je
out
jp
pop
pop
jb
dec
or
sub
sub
out
and
mov
inc
cld
je
fcoml
mov
jo
mov
mov
pop
inc
cltd
ret
mov
mov
add
loopne
adc
mov
rorl
pushf
pop
test
pop
cmp
or
dec
pop
repnz
cmp
fdivl
ficompl
mov
psubb
push
xor
sti
out
aaa
sbb
add
lds
daa
jg
sub
or
xorb
cmp
or
daa
stos
or
cmpsb
in
test
mov
or
pop
jns
and
das
mov
dec
stos
inc
and
jbe
jbe
lea
add
pop
mov
inc
lcall
add
push
mov
pop
icebp
frstor
movsl
xchg
das
cmp
repz
dec
sub
mov
test
mov
lret
lods
mov
push
jbe
push
ret
push
adc
clc
push
lret
leave
int
lock
mov
out
fs
stos
xchg
repz
mov
adc
cltd
pop
cmp
sbb
jle
pop
in
clc
xlat
mov
inc
cmp
ret
mov
incb
lcall
in
push
dec
mov
div
push
iret
movsb
push
pop
call
adc
mov
iret
mov
repz
xor
fisubs
fbstp
cltd
aam
lcall
in
jmp
mov
mov
adc
push
cmpsb
test
loope
aad
jne
mov
movsb
cltd
ret
popf
cmp
mov
mov
jae
ss
movsb
xor
lods
adc
loope
pop
dec
mull
cmp
cmp
gs
pop
repz
dec
mov
lds
mov
sbb
jns
std
inc
gs
push
shlb
lds
xor
hlt
arpl
mov
pop
mov
inc
les
popa
pop
cltd
ljmp
xorl
jp
xchg
out
sub
xor
adc
xchg
add
add
pop
add
push
stc
ljmp
and
lock
jle
and
or
jp
xlat
xchg
dec
inc
jp
lods
lcall
mov
push
test
mov
jno
testl
mov
out
jbe
lods
test
push
mov
in
xchg
addr16
std
inc
inc
cltd
jnp
jp
popa
pop
xchg
xchg
nop
dec
js
mov
or
int3
push
cltd
push
push
clc
cld
pusha
test
add
add
push
cwtl
imul
aam
jae
repz
pop
add
pop
dec
cmp
sub
or
push
test
iret
mov
ljmp
int
pop
lds
inc
dec
inc
in
rorl
testl
jmp
movsl
data16
mov
and
iret
fiaddl
fisttps
fcmovnu
sti
adc
cli
xor
jns
jmpw
sbb
mov
ja
rorl
cmp
pop
mov
or
fscale
aas
fisttpll
pop
mov
inc
sbb
push
mov
mov
pop
adc
jb
xor
stc
dec
cmp
jns
inc
test
jae
cwtl
pop
push
or
aaa
movb
cmp
jecxz
imul
push
inc
lods
aas
jmp
lret
cmp
sbb
fwait
jg
and
jnp
les
mov
cmpl
data16
mov
sub
lret
inc
lods
fstpl
cmp
into
jns
xor
dec
es
jge
or
shlb
jecxz
outsb
shlb
xchg
out
aad
push
movsl
dec
or
mov
xchg
push
xor
push
adc
push
stc
mov
and
push
into
xor
sbb
fs
aaa
adc
mov
push
inc
push
sarl
lods
sbb
dec
xchg
push
popa
filds
mov
xchg
idivl
shlb
insl
or
fwait
xchg
sub
jg
fcoms
aas
and
insl
es
int3
push
fsubrl
cmp
fldl
inc
call
pop
arpl
imul
fstl
jbe
mov
add
in
negl
or
js
pop
mov
test
jb
lret
mov
xor
push
jmp
push
jg
or
dec
cltd
lret
adc
jecxz
imul
inc
add
dec
rorl
movl
xlat
insl
pop
mov
arpl
jg
add
rcrl
jmp
jae
lods
adc
sahf
push
out
out
lock
test
inc
xlat
xchg
leave
movsb
mov
rol
ret
loope
dec
mov
dec
xor
or
andb
sub
rol
ljmp
or
aas
stos
scas
mov
xchg
pop
push
fdivrp
or
stos
std
pop
fildll
cmp
mov
push
testb
and
xchg
mov
scas
test
add
fildll
out
mov
insl
aam
mov
inc
pop
cmp
lods
push
repz
popa
inc
in
mov
dec
cmpsl
lock
pop
push
frstor
pop
repnz
xlat
nop
xor
or
aaa
es
mov
outsl
imul
loopne
sub
and
jb
xchg
xchg
xchg
mov
out
imul
sbb
mov
int3
ret
mov
in
and
mov
cwtl
add
dec
shll
lret
movsl
add
add
push
mov
pop
cmp
movsl
sub
fwait
xchg
push
inc
mov
js
inc
enter
or
adc
xor
xorb
int
mov
clc
xchg
fcmovne
rcr
jg
mov
fildll
inc
push
xchg
sbb
data16
jne
jnp
xor
mov
add
push
fstpt
dec
mov
bound
push
dec
sbb
jb
xchg
sub
mov
ja
jno
cs
mov
in
in
mov
das
inc
mov
xor
lds
aad
mov
pop
fsubrs
mov
push
test
repz
lret
std
ret
mov
leave
imul
movsb
jg
leave
mov
pop
dec
lea
push
or
or
fstpl
mov
jo
jbe
xor
mov
jno
xlat
add
mov
xlat
testb
mov
xorps
sti
enter
pop
stos
popf
mov
sub
jno
incl
imul
rorb
or
nop
xor
lret
jae
int
dec
inc
repz
mov
adc
popf
cmp
sub
xchg
imul
push
push
cmp
adc
push
mov
pop
imul
iret
inc
in
cmc
stos
jnp
mov
nop
into
test
cltd
movsl
std
aam
sub
sti
jmp
lcall
movl
pop
pop
adc
jl
adc
dec
xor
mov
add
or
add
test
inc
les
pop
insl
push
mov
pop
adc
filds
lods
mov
ss
sahf
pop
js
sub
jge
inc
test
sbb
or
jb
xchg
movl
lret
add
leave
ja
loopne
into
pop
dec
data16
xlat
mov
cmpsb
adc
jmp
mov
pop
adc
xchg
decl
jnp
pusha
jle
outsb
rcrl
and
std
push
mov
add
lret
scas
push
cli
aam
ja
and
xchg
sub
rcr
pop
inc
xor
std
jp
adc
jno
pop
pop
fsubp
fadds
add
int3
shll
inc
rcrb
bound
cmp
inc
sub
push
mov
push
inc
sub
fsubs
hlt
rcl
dec
or
mov
out
mov
sub
mov
mov
popf
aas
icebp
jecxz
andb
arpl
shr
repz
lods
xor
sub
cmp
data16
xchg
shlb
rorl
fstps
mov
in
imul
jb
rolb
xor
add
fisubl
outsb
fidivrs
pushf
pop
mov
xchg
mov
xchg
ss
jl
in
sarl
jnp
lret
jb
je
popf
sub
cwtl
ret
test
xchg
add
sub
sbb
in
jae
dec
in
and
mov
jmp
inc
mov
inc
cmp
mov
or
das
adc
and
xchg
leave
jae
cmpl
sbb
xchg
mov
cmp
push
clc
ja
cmp
jae
xor
sti
and
or
nop
push
or
jmp
add
repnz
dec
add
cmpsl
cltd
mov
mov
outsl
loope
mov
xor
fisubrs
iret
add
fdivl
pop
mov
daa
jp
sbb
dec
aaa
aad
in
mov
pop
and
inc
cmp
mov
das
pop
add
jbe
pop
test
jnp
cld
cmpl
add
int3
jns
mov
push
mov
data16
shlb
fstpl
std
xor
dec
cld
imul
xlat
jle
cmpsb
push
xchg
adc
push
popf
push
pusha
xchg
adc
pop
and
cmp
rorb
jge
pusha
sub
inc
sub
sub
jecxz
sahf
xchg
cmp
imul
push
imul
mov
adc
sub
inc
call
and
xchg
fimuls
adc
test
pop
mov
and
jnp
xor
or
shlb
enter
sbb
jnp
or
iret
cwtl
inc
or
mov
and
outsl
repnz
sub
ss
lahf
dec
in
mov
cmc
loope
or
iret
or
mov
mov
jo
jnp
sub
xor
pusha
push
ja
scas
add
push
mov
arpl
int3
mov
lea
rclb
sarb
jno
ficomps
pop
sub
stc
add
add
rolb
xchg
or
sub
xor
outsb
lret
inc
push
mov
test
mov
push
xchg
mov
cmp
push
pop
movsb
jae
xchg
xchg
mov
mov
push
pop
jl
es
mov
push
sbb
ret
lea
cmpsb
sar
xchg
lods
adc
jg
xchg
jno
and
jno
clc
mov
jo
aam
out
add
adc
and
xor
push
pmovmskb
pop
mov
filds
inc
jo
or
inc
out
mov
xchg
add
sti
add
inc
xchg
mov
push
ljmp
iret
xor
xor
xchg
xchg
nop
push
add
stos
inc
fsubp
hlt
cmp
sub
lcall
inc
inc
cld
xor
pop
pop
cmp
jp
lods
lock
jae
or
xor
xchg
add
jb
jge
into
push
lahf
out
mov
and
cmpl
dec
test
push
jae
mov
fs
mov
sbb
daa
push
jbe
lds
push
xor
rolb
push
adc
push
xchg
decl
lahf
test
lcall
cmc
ret
mov
pop
inc
mov
outsl
aad
pop
gs
pop
std
mov
ljmp
mov
shll
rcrb
add
jae
mov
mov
dec
and
addr16
cmp
lcall
stc
dec
lods
and
imul
and
jae
jno
lea
fbstp
shlb
aaa
jne
cld
cmpsb
mov
jmp
pop
in
xchg
sub
or
cs
adc
enter
dec
imul
cltd
xchg
jo
push
xchg
inc
fmulp
cmp
aas
aaa
push
test
push
pop
pop
push
test
popa
shrb
outsl
xor
adc
mov
xchg
mov
in
imul
scas
xlat
jb
jmp
push
test
add
aaa
out
mov
jno
or
pop
jg
xchg
and
subps
rorb
adc
mov
sub
popa
dec
leave
cld
sar
lea
shrl
inc
leave
xor
ret
adcb
insl
push
inc
cmp
repnz
pop
jnp
inc
sbb
orb
jbe
call
scas
inc
pop
sub
mov
fmul
loopne
mov
fidivrs
cwtl
cltd
cmp
mov
scas
pop
insb
sbb
mov
bound
xchg
test
adc
call
push
or
push
int
cmp
mov
out
mov
in
push
inc
std
nop
cmp
and
icebp
push
arpl
fmuls
and
inc
call
cmp
stos
jnp
repnz
mov
movsl
mov
cmp
les
mov
es
xchg
sti
mov
sti
or
xor
sub
jecxz
pop
push
add
in
inc
mov
jecxz
add
cltd
dec
dec
insl
loope
imul
and
dec
imul
into
jnp
lret
add
add
data16
ret
ret
lea
add
inc
das
js
mov
lds
mov
mov
xchg
es
mov
std
scas
popa
sbb
push
xchg
jae
cmp
mov
or
icebp
adc
mov
dec
and
insl
mov
inc
test
in
shl
subb
ret
scas
push
sbb
xchg
sbb
cmc
push
inc
pushf
xchg
lret
sbb
out
dec
rclb
mulb
add
inc
scas
lods
xchg
nop
or
mov
jb
and
jae
or
rclb
mov
inc
inc
stc
push
repz
or
adc
js
int3
mov
jns
shl
lcall
std
pushf
leave
dec
leave
xor
inc
cmp
push
in
es
jg
cmp
or
cmpsl
push
lock
jecxz
bt
pop
sub
out
arpl
mov
jg
sub
loope
mov
xchg
ss
out
clc
add
inc
inc
mov
scas
ja
das
cmp
cmp
add
sarb
movsb
jb
idivl
pop
push
push
cltd
push
in
mov
dec
xchg
stc
lea
mull
cli
aaa
push
xor
sti
mov
sub
adc
xchg
fadd
leave
sbb
hlt
mov
pusha
mov
xor
test
mov
test
jae
arpl
fisttpll
and
fimull
pop
ds
pop
aaa
mov
mov
sarb
flds
test
call
sub
psubb
mov
cmp
loope
hlt
iret
cvtps2pi
fdivp
pop
dec
iret
in
sbb
sbb
insl
inc
jno
xchg
mov
jbe,pn
test
jp
jns
xlat
call
xchg
mov
add
or
roll
push
xor
ljmp
cltd
pop
xchg
mov
mov
out
dec
inc
mov
sahf
lods
dec
sub
cld
mov
jl
int
jbe
dec
mov
call
pop
cmpl
inc
faddl
les
cmpsl
sub
mov
jne
jne
bound
sahf
repnz
aaa
sti
push
leave
call
insb
fbld
js
dec
push
pop
pop
lahf
lret
movsl
incb
sub
fisubs
xchg
inc
add
loop
test
leave
mov
xor
xlat
push
dec
mov
xor
fdivr
or
sub
sbb
adc
in
jl
popa
cmc
mov
stos
imul
mov
hlt
jl
push
pop
in
cmpsb
cltd
cmp
in
ret
lock
lahf
xchg
sbb
int3
xchg
scas
add
xchg
dec
push
push
stos
inc
and
stc
andl
mov
call
jl
lods
insb
in
scas
sub
icebp
or
or
cmpsl
cmc
int
mov
sbb
pop
ss
dec
and
mov
rol
fdivrs
roll
mov
mov
xlat
pop
fxam
mov
imul
sbb
addr16
daa
sub
lret
adc
aas
rcr
pop
data16
stos
int3
call
loop
xchg
push
dec
pop
fnstsw
int3
add
sbb
and
push
rclb
ret
mov
xchg
pushf
cltd
stos
les
aas
test
addr16
push
jo
or
bound
add
daa
inc
xor
in
xlat
rep
loop
imul
push
push
and
push
bound
nop
add
jg
adc
divb
je
stc
icebp
loop
push
pop
lret
xchg
pop
lea
ret
push
jecxz
out
arpl
nop
std
inc
jmp
push
push
cmp
pop
jle
out
test
mov
inc
and
das
lods
mov
push
scas
mov
lcall
lea
pop
cmpl
sti
push
mov
xchg
sbb
js
mov
fst
lcall
subl
subl
test
inc
mov
pop
xor
and
loop
repnz
push
aaa
into
lret
jns
enter
jo
fildll
xor
iret
into
mov
mov
imul
sub
inc
cmovno
lock
xor
mov
xchg
stos
and
xor
sub
repz
mov
xchg
daa
out
push
push
push
mov
std
push
cmpsb
jge
daa
int3
inc
pop
push
or
ficoms
repz
repz
jecxz
daa
in
mov
aam
add
jle
jp
lds
pop
out
shll
aas
xor
dec
arpl
mov
cwtl
mov
adc
cmpsl
pop
out
gs
sub
dec
cmpsb
pop
xor
into
lods
mov
mov
cs
xor
data16
sbb
notl
jg
push
movb
jl
xchg
shrb
ret
fiaddl
popf
lock
xor
mov
mov
xchg
ret
cmc
rorb
dec
lret
mov
aad
mov
js
inc
out
push
hlt
inc
dec
aam
test
inc
fwait
xchg
mov
jge
ja
cmp
cwtl
dec
add
imul
dec
out
cld
mov
mov
mov
movsl
pop
jno
cld
and
or
jno
into
leave
lea
cmp
repnz
lcallw
sbb
nop
sbb
mov
out
and
lret
clts
xchg
jecxz
jns
lret
aam
mov
push
jmp
or
cmp
fnstsw
dec
out
imul
scas
cmovge
xchg
or
clc
pop
xchg
mov
add
mov
imul
xchg
inc
xor
rolb
test
pop
sub
push
cld
shr
js
pushf
lcall
jne
js
dec
xchg
jl
xchg
jae
jne
and
and
xlat
sbb
aas
clc
loope
fstl
add
sbb
stos
insl
mov
and
jge
mov
push
sub
dec
push
add
cmp
xlat
in
fsubrs
mov
xor
mov
aam
push
add
mov
push
mov
cmp
sub
dec
in
cmp
pop
xchg
jno
arpl
xchg
pushf
fadds
cs
sbb
cmp
pop
movsl
shr
int3
incb
inc
mov
pop
push
sbb
fucom
xor
movsb
pop
pop
mov
test
jmp
pop
push
fiaddl
out
rol
or
es
add
mov
jecxz
mov
add
dec
mov
add
lds
lods
insb
lock
or
setns
repz
inc
iret
or
rcrb
popa
sub
cltd
dec
std
cmc
mov
jg
out
mov
pop
mov
aad
cmpsl
mov
mull
sub
ja
scas
push
and
cmpsl
js
inc
cmp
or
cli
int3
lds
fisttpl
inc
mov
ja
xor
dec
in
hlt
xchg
sbb
or
xchg
lea
jmp
jb
insb
daa
test
xchg
in
aad
pop
xchg
fsts
adc
mov
leave
fstpt
jmp
sub
aas
mov
lods
lods
add
xchg
jns
push
mov
or
push
idivl
mov
aam
xlat
add
ret
and
cmpsl
mov
mov
loope
sub
adc
in
mov
cld
pop
scas
outsb
ret
in
lret
and
gs
lcall
mov
push
or
mov
jnp
pop
pusha
or
jg
out
lods
xor
push
sub
dec
jg
sbb
mov
push
xchg
fsubrl
int
pushf
lea
and
fs
dec
cmp
push
sub
int3
and
cmpsl
and
xlat
push
dec
mov
in
push
inc
repz
sub
mov
in
xlat
mov
lods
scas
in
cmp
mov
sti
aad
cli
pop
loop
fistps
lcall
std
xchg
jnp
hlt
test
stos
aad
movsl
ljmp
add
adc
pop
adc
cmp
jp
mov
enter
dec
outsl
je
inc
mov
pop
es
push
outsl
jno
xchg
imul
mov
xor
or
sbb
dec
stc
dec
adc
mov
and
xchg
addb
push
icebp
cld
cmp
xchg
push
lock
push
pop
in
xor
test
jnp
aam
sbb
out
scas
add
add
push
push
les
movsl
xchg
lods
divl
jae
mov
sub
in
fsts
pop
mov
pop
popf
das
sbbl
jae
pop
dec
js
sub
sti
movsb
dec
fisttpll
jmp
lret
mov
add
insb
repnz
popf
pop
dec
ret
push
std
adc
sbb
stc
inc
jb,pn
mov
faddl
ret
inc
xor
dec
adc
aam
shl
subb
cmp
ret
nop
lea
push
call
fwait
sbb
mov
cmpxchg
jecxz
ret
inc
jl
shl
sbbl
dec
add
mov
call
sbb
inc
jbe
ror
outsb
jmp
cmp
fdivr
lahf
dec
je,pt
pop
je
jp
aaa
add
dec
outsl
pop
pop
mov
scas
scas
gs
xor
aaa
xchg
mov
add
and
sub
pushf
xor
sbb
mov
mov
adc
fildll
jnp
dec
mov
shl
test
and
mov
adc
es
aam
add
mov
mov
cmp
popa
gs
jo
imull
int3
ss
inc
cmpsl
into
push
sbb
mov
mov
jns
in
ljmp
xor
inc
pushf
lahf
mov
fldt
shrb
les
xchg
cmp
cbtw
mov
fldt
cmp
rclb
nopl
stos
jge
mov
sub
mov
add
out
sub
loop
movhps
into
and
fcoml
loope
xor
clc
ror
ret
cmp
inc
push
sbb
push
orl
adc
xor
and
icebp
adc
cltd
mov
fcompp
shr
stc
dec
pop
rcll
sbb
push
js
divl
push
cld
or
outsb
stos
mov
in
adc
push
cmc
fistpll
dec
test
mov
xor
sbb
mov
notb
pop
testl
ja
in
and
mov
inc
shl
fyl2xp1
das
inc
bound
cmc
mov
inc
sahf
dec
dec
mov
sahf
cwtl
loope
lods
inc
roll
fs
pop
std
and
lds
out
or
or
mov
mov
les
aas
add
gs
sarl
rcrb
lea
mov
jnp
mov
mov
stos
daa
inc
add
xchg
lods
testb
in
jnp
push
fcoml
inc
sbb
int3
mov
stos
and
push
aam
pop
jae
aad
je
lret
and
or
adcb
mov
std
loope
enter
insb
arpl
shrb
xor
sahf
dec
fwait
push
cmp
mov
loopne
iret
pop
aaa
bound
mov
and
fidivrs
adc
insl
insb
out
movsb
ljmp
loop
imul
lcall
mov
mov
mov
lahf
and
rorb
push
mov
sub
insb
popa
movsl
incb
dec
rcrb
aas
adc
jmp
or
add
sub
leave
pop
pop
mov
ss
or
int
ja
stos
sbb
jg
loope
inc
ljmp
int3
inc
loopne
aas
push
sbb
mov
in
sbb
push
dec
add
jp
pop
push
std
lods
lods
or
daa
jle
push
mov
jmp
sub
jbe
dec
sub
arpl
stos
lahf
ljmp
jg
int
push
inc
out
repnz
and
nop
xorb
je
out
jmp
push
lock
mov
and
std
xchg
xchg
repnz
dec
inc
ljmp
roll
arpl
pop
in
inc
test
nop
movhps
popa
adcl
sbb
sub
inc
adc
add
rcrb
cltd
xor
imul
mov
xchg
test
xchg
outsb
les
nop
xchg
lret
push
stos
sub
andl
stc
pusha
stos
std
pop
fmuls
movsb
adc
jne
jnp
sbb
and
push
dec
je
jbe
icebp
mov
mov
add
adc
jecxz
inc
ljmp
xchg
sbb
mov
outsl
mov
sbb
fldl
addl
jnp
or
jno
xchg
pop
int3
mov
int
mov
xchg
mov
push
dec
mov
xchg
xchg
mov
clc
call
pop
hlt
sbb
scas
inc
mov
fildl
add
add
js
cld
add
cwtl
lods
inc
lods
adc
add
push
test
scas
cli
ret
stos
aas
and
xchg
filds
inc
add
and
insl
lea
mov
sarl
ret
in
movsb
push
mov
int3
js
outsl
xchg
mov
sahf
psrad
sbb
jbe
xchg
inc
or
jns
jb
pop
int
add
ret
inc
sbb
inc
pop
sub
xor
daa
repnz
mov
cwtl
xor
or
push
pushf
adc
inc
mov
fdivrl
test
cs
dec
mov
push
mov
data16
adcl
sbb
fwait
divl
fnstenv
or
les
adc
addb
jno
push
stos
mov
add
insl
dec
cmp
cmp
jb
dec
enter
mov
lahf
xchg
push
xor
cld
in
sbb
xchg
mov
push
lcall
into
sahf
sub
push
sbb
je
aam
pop
pop
xchg
lret
rcll
push
jmp
dec
cld
inc
and
stos
stc
mov
dec
dec
movsl
mov
ja
bound
push
jl
cmpsl
or
fildl
pop
push
inc
xor
pop
movsb
ficomps
xchg
inc
sub
fidivrs
or
pushf
loop
cmp
mov
sbb
sbb
ljmp
mov
push
ret
pop
enter
pop
in
cmp
jge
mov
lret
and
push
lret
push
pop
add
xor
fstpt
sbb
stos
or
insl
xchg
das
xchg
inc
sub
pop
sub
dec
add
lahf
imul
lods
loope
call
cmc
dec
roll
jp
loope,pn
das
imul
iret
fs
jmp
and
rcr
add
xchg
mov
dec
cli
or
icebp
fidivl
jo
jmp
scas
cmc
lcall
sub
shll
inc
mov
jbe
iret
jbe
mov
dec
lea
xor
pop
sub
and
push
jae
out
or
mov
push
dec
adc
int
popa
stos
mov
cmp
jnp
jne
hlt
mov
add
nop
imul
pop
outsb
ss
call
jmp
lods
cmp
dec
out
and
mov
jp
dec
roll
add
adc
pop
cwtl
and
cltd
fstps
mov
push
adc
adc
pushf
aaa
inc
mov
addr16
sub
mov
loopne
fisubs
gs
pcmpgtd
pop
orb
jae
scas
push
sbb
cld
cmp
rorl
jb
dec
sbb
xor
sbb
dec
push
lds
or
sbb
mov
into
jl
hlt
fninit
movsl
sub
lcall
bound
enter
fistps
imul
inc
movsl
xor
sbb
sub
popa
sahf
adc
fdivrl
xchg
mov
push
mov
out
cmp
push
inc
and
jmp
sbb
icebp
ds
mov
ficomps
andnps
lods
cld
mov
jmp
sub
jge
sbb
adc
cli
js
dec
and
sbb
data16
push
mov
add
mov
enter
incb
je
push
in
mov
cmc
out
lahf
lods
mov
xor
clc
pop
loope
mov
pop
sbb
lret
mov
sub
into
rcr
idiv
dec
subl
mov
ret
dec
xor
jns
xchg
stos
jl
jnp
out
adc
jns
shld
push
int
rclb
pop
push
hlt
add
fdivrl
jb
mov
xchg
mov
and
jge
and
mov
cmc
rorw
add
sbbb
sti
xchg
out
js
mov
jbe
jns
add
rclb
shrb
fstpt
xor
insb
js
lcall
into
cltd
stos
mov
sub
lock
inc
loop
push
mov
ja
divl
cld
ja
jne
push
mov
imul
movsl
popa
add
js
add
popa
xchg
lret
out
sbb
sub
mov
and
xor
xor
lret
push
mov
scas
cmc
add
mov
xor
into
into
insb
mov
cmp
or
test
int3
imul
aad
add
push
in
or
sbb
jge
mov
cmp
popf
pop
lret
push
jae
int3
cmpsb
mov
adc
aaa
pop
ds
mov
jle
sti
jmp
dec
xor
stos
sti
imul
jmp
cmc
and
push
jae
arpl
js
xchg
xor
cmp
cmp
cmpsb
cmp
arpl
in
aad
adcl
popf
mov
mov
hlt
pop
push
jl
push
shl
pop
and
or
shl
pusha
sub
ljmp
stos
mov
pop
cmpsl
or
stos
fimuls
loope
stc
dec
ficoms
cmp
mov
fmull
mov
mov
sub
adc
sbb
sub
add
out
pop
mov
cmp
mov
mov
push
lds
sar
into
adc
jb
mov
ljmp
inc
jp
in
pop
pushf
adc
xor
andl
pop
xchg
mov
jecxz
push
inc
push
xor
dec
cmp
int3
arpl
addl
mov
or
dec
sub
lret
jmp
in
and
mov
rcl
mov
mov
out
lret
jl
push
in
xchg
dec
mov
lret
fldt
pop
out
orl
out
sarb
and
in
jl
sub
xor
sar
mov
or
jle
dec
aas
jge
test
dec
jp
outsb
loope
rol
push
pop
aas
bound
sbb
mov
sbb
xchg
mov
dec
clc
in
sub
faddl
out
inc
lcall
or
scas
pop
inc
sbb
add
pop
mov
scas
sub
push
mov
xlat
jmp
movsl
pop
cmp
ret
stos
add
sub
test
mov
mov
lods
mov
cmp
lahf
out
cld
movsl
les
cmpsl
clc
or
movsl
int
ficompl
push
and
dec
nop
sti
fistpl
jg
sub
shrl
pop
adc
dec
xchg
cmp
call
mov
pop
mov
pop
and
repnz
ret
test
xchg
adc
pusha
add
and
jecxz
and
ds
mov
jne
cmp
and
pushf
add
pop
cmp
daa
xor
push
sbb
scas
dec
push
jnp
mov
xor
jae
call
int
inc
adc
insb
push
std
test
aas
mov
in
adc
aaa
stc
xchg
xor
nop
sbb
and
inc
push
or
push
out
loop
inc
pusha
ss
mov
subb
fimull
jne
mov
dec
test
push
rcll
or
mov
and
and
outsb
nop
shll
ds
push
ret
mov
aaa
xor
callw
sbb
jns
push
shrl
mov
or
xchg
rorb
scas
jmp
sbb
xor
pop
incb
cvtps2pd
xor
test
xlat
xchg
mov
mov
in
jl
inc
push
mov
shl
aad
pop
aam
sbb
mov
filds
jp
sbb
xchg
scas
dec
insl
cmp
xor
mov
ds
push
rcr
pop
cmp
sbb
fwait
or
repz
xchg
fs
aam
scas
xchg
dec
aas
xor
mov
in
mov
and
test
mov
rol
std
sub
sub
pop
addr16
fmull
mov
int3
push
and
flds
outsb
movsl
pop
mov
push
push
dec
mov
adc
add
sti
repnz
sub
or
xor
mov
or
sub
addr16
shrb
movsl
lods
mov
fwait
add
mov
inc
in
add
es
jecxz
xchg
push
int
out
mov
add
pop
es
into
ljmp
shrb
mov
adc
mov
daa
aaa
pop
leave
cmc
pop
ljmp
xchg
xlat
inc
mov
cmp
das
sbb
cmp
shl
sub
xchg
adc
cmp
scas
jnp
int3
ret
push
adc
cwtl
jae
rclb
inc
imul
mov
mov
es
roll
incb
rcrb
sub
pop
sbb
ficoml
inc
into
xbegin
sbb
mov
mov
mov
outsb
add
js
arpl
mov
mov
mov
dec
nop
iret
mov
test
push
cmp
ret
fistps
pushf
test
movsl
push
jg
adc
push
dec
popa
jl
add
mov
push
add
sub
subl
push
mov
mov
mov
into
loop
out
push
add
adc
sti
xor
and
dec
fwait
pop
stc
jnp
inc
gs
mov
jns
fs
cmp
or
mov
lahf
pop
icebp
push
cmp
push
or
sbbl
push
mov
aas
add
out
cltd
sbb
loop
lods
aaa
inc
hlt
pushf
xchg
outsl
pop
lds
aaa
sub
jle
int3
push
fdivl
jge
lret
lahf
ficompl
lcall
mov
add
mov
jns
gs
mov
push
sti
inc
ret
shlb
jnp
test
insl
mov
es
jmp
cmp
mov
daa
dec
nop
ljmp
leave
popa
pop
xor
test
xorb
sbb
gs
xor
mov
outsl
cmp
lcall
push
adc
cwtl
lret
shrl
sarl
lret
outsb
sti
add
and
cmpsl
cmp
out
jle
cmp
cmp
xchg
out
dec
inc
and
call
aaa
xor
mov
add
stc
inc
call
sbb
fs
xor
aaa
outsb
sbb
pop
nop
jmp
lret
pop
jbe
lock
sbb
test
cmpb
ficoms
or
jne
sbb
ficomps
sar
mov
mov
pop
sub
icebp
iret
stos
jmp
dec
outsl
and
jne
lret
ret
xchg
push
pop
xor
ret
lahf
idivb
and
lret
pop
sbb
mov
pop
aad
mov
cld
lods
lods
imull
jnp
or
jbe
in
shll
push
mov
int3
enter
mov
lahf
insl
sub
pop
stc
ja
sbb
negl
jle
fwait
rcll
dec
sub
call
imull
loop
stc
mov
cmp
js
loopne
jb
rolb
mov
fldl
add
mov
stc
pushf
inc
fidivrl
adc
sahf
sub
int3
pusha
push
rolb
mov
insl
push
add
cmpl
inc
shl
pop
sahf
arpl
push
fistpll
pop
cmpsl
fstpl
mov
xlat
sbb
jne
loope
sub
jae
xor
mov
in
shl
aad
or
stc
push
cmp
lahf
sbb
cs
xchg
nop
mov
xlat
aad
stos
ret
sub
push
xor
fbstp
and
jmp
lods
mov
inc
ficomps
inc
pop
mov
add
dec
dec
test
out
pushf
dec
sub
js
xor
adc
lret
lods
enter
lods
hlt
jg
push
xchg
xchg
mov
loop
dec
scas
and
mov
inc
push
cmp
mov
stos
test
xchg
dec
pop
inc
pop
jge
dec
xchg
jg
test
fs
movd
inc
shrb
lods
cmp
jbe
or
pushf
pusha
cmp
les
scas
xchg
enter
mov
dec
mov
mov
cmpsb
jns
xor
mov
fstpt
scas
ficompl
adc
mov
cmpl
scas
loop
test
xor
test
push
push
sbb
loopne
mov
inc
mov
push
insb
stc
dec
dec
inc
cwtl
push
sbbl
xchg
frstor
ficoml
lds
or
mov
mov
orb
fldcw
and
cmp
popa
adc
push
mov
add
mov
test
aad
loop
fcompl
test
pop
inc
jno
adc
mov
dec
mov
or
inc
lahf
das
stos
inc
jge
jmp
mov
or
stos
or
mov
test
and
jne
adc
pop
ljmp
xchg
je
hlt
hlt
fs
movsb
fcmovnbe
imul
pop
repnz
aam
jae
inc
inc
inc
mov
fldenv
orl
mov
aam
mov
or
daa
sub
test
test
out
test
adc
sub
movsl
sub
dec
inc
ret
xor
fildll
cmp
daa
sbbl
and
or
stos
inc
sub
or
dec
ret
mov
push
lds
cltd
idivl
shll
rcll
lods
mov
push
mov
push
push
popf
push
mov
adc
loop
cmpsl
lret
cmp
out
xchg
std
es
cmp
nop
or
push
fwait
int3
add
ret
lcall
sub
fisubs
jno
in
bound
rcrb
pushf
int3
cmpsb
mov
dec
daa
insl
les
jecxz
sub
cli
out
aaa
add
xor
fisubl
or
xchg
aam
and
nop
and
fwait
xchg
stos
int3
hlt
sub
pop
adc
jmp
or
sub
mov
loopne
mov
in
dec
inc
push
lret
pop
xlat
pop
mov
aam
xchg
arpl
mov
in
pop
pop
aam
cmp
fcomps
popf
mov
xchg
test
xor
movsb
mov
sub
pop
xchg
into
or
leave
lea
stos
jecxz
pop
popf
mov
ljmp
add
push
add
inc
mov
cmpsl
jmp
cmp
mov
dec
int
sub
popa
pushf
lahf
out
xchg
mov
xor
in
js
out
xchg
add
fs
mov
mov
imul
xor
mov
je
dec
je
xor
jl
lods
push
out
mov
loope
ja
mov
inc
inc
out
inc
inc
pop
sbb
rclb
loope
les
arpl
mov
mov
pop
js
aam
shll
icebp
ja
stos
ret
insb
pop
cmpsl
ret
dec
imul
sarl
popa
push
icebp
xchg
jno
scas
imul
imul
test
inc
mov
mov
outsl
mov
bound
fs
mov
mov
sbb
lock
cmp
cmpsw
add
pop
push
sti
xor
and
cmc
inc
and
fisubl
jno
dec
inc
les
jg
aaa
popf
add
or
icebp
push
lcall
sub
and
aad
push
sbb
fiaddl
mov
out
insl
xchg
loope
inc
lea
jl
add
add
or
addr16
pop
inc
adc
pop
paddb
and
and
aad
xchg
pop
sbb
clc
gs
dec
in
arpl
test
xchg
hlt
mov
je
mov
jae
ds
pusha
fcom
mov
and
fwait
and
testb
int3
sub
enter
test
sbb
push
mov
xorl
push
xor
pop
pushf
icebp
sub
mov
lds
pop
adc
scas
popf
gs
mov
aam
mov
iret
or
mov
ja
out
test
sbb
fcoml
dec
hlt
scas
xor
rclb
or
dec
stos
stc
adc
gs
lock
push
not
mov
enter
push
xor
jg
add
mov
loopne
jns
cmp
addr16
loope
pop
clc
sahf
in
fs
mov
pop
call
cmp
fldl
fidivs
or
adc
fwait
test
mov
xchg
pop
jl
movsb
int3
xor
sbb
fidivs
cli
loopne
js
loopne
xchg
mov
xchg
in
push
scas
call
xchg
cld
lds
orl
mov
inc
sub
inc
aaa
mov
mov
add
mov
pop
jo
out
pop
stos
lods
dec
mov
jb
push
push
pop
in
movsl
jge
std
adc
imul
mov
mov
in
imul
cmpsb
push
xchg
mov
loope
sbb
cltd
pop
dec
adc
icebp
std
pop
dec
xor
pop
test
stc
cmc
divb
sub
cmpsl
jno
mov
xchg
cmp
mov
cli
mov
outsl
out
push
popf
sub
mov
pop
inc
push
enter
test
subb
mov
sub
xor
jae
pop
jmp
es
fdivs
mov
jge
ret
in
and
shr
aam
cmc
dec
mov
shl
inc
or
sbb
fildl
jmp
scas
cmpsl
scas
push
and
fistl
imul
mov
mov
sub
mov
lret
sub
push
aam
loop
mov
testb
xorl
filds
xchg
dec
cwtl
aad
out
test
or
push
ret
hlt
clc
rorl
cmp
nop
mov
inc
mov
sbb
add
xchg
or
dec
or
test
cltd
inc
xchg
mov
adc
mov
sub
daa
sbb
push
pop
dec
inc
outsl
cmpl
sbb
je
inc
cltd
std
sub
test
scas
push
lods
and
pusha
mov
inc
outsb
mov
aad
lahf
insl
test
xor
js
lahf
cmp
jno
jp
aam
mov
in
xor
mov
aam
push
adc
scas
push
push
mov
cld
jo
mov
mov
mov
cltd
xchg
stos
jnp
test
push
sub
sti
sti
or
je
js
test
ss
mov
std
cld
or
daa
fmuls
jge
cmc
loop
fcomp
testl
push
fldcw
out
jecxz
dec
jae
mov
mov
or
mov
push
ja
inc
push
lods
aad
mov
out
cmc
sbb
fistpll
xor
mov
jnp
roll
iret
int3
ds
xchg
loope
adc
adc
push
test
insl
mov
xchg
inc
popf
ja
fsts
mov
add
dec
loop
xchg
push
adc
xor
test
test
imul
ljmp
fimull
lcall
jg
adc
dec
jne
aas
jp
pusha
adc
es
ret
rcrl
les
cwtl
clc
push
xchg
and
mov
call
mov
out
jmp
mov
aas
popa
push
stos
add
es
fdivrs
push
sbb
and
shrb
dec
stos
clc
lret
add
push
aas
ret
pop
adc
iret
inc
orb
sbb
and
test
mov
push
popa
xor
mov
dec
mov
mov
je
fistps
repnz
jmp
or
daa
xchg
notb
xlat
xchg
mov
adc
xchg
or
push
repz
mov
cmp
sbb
sti
ret
mov
sub
inc
inc
xchg
mov
scas
xchg
in
sti
jmp
mov
push
test
rolb
mov
jecxz
sub
stos
pop
cmp
out
jge
inc
xor
js
neg
cmp
inc
arpl
out
cmp
cmp
ljmp
mov
jecxz
jmp
mov
xchg
pop
iret
lds
xchg
cs
int3
dec
stos
add
dec
shlb
enter
repz
aam
cmpsl
adc
jmp
push
rclb
push
icebp
into
movsb
out
rcr
adc
push
adc
mov
incl
jge
sti
xchg
dec
mov
cmp
pop
popf
cmp
aam
inc
mov
sub
push
pop
mov
or
mov
nop
or
test
mov
or
mov
leave
aad
in
adc
in
xchg
xor
or
imul
rcrb
aas
leave
jg
daa
add
sub
xchg
cmp
stos
sub
insl
jb
push
mov
pop
mov
dec
inc
jno
incb
fidivl
jne
inc
xor
imul
sbb
pop
xor
lret
repnz
mov
add
fistpll
push
pop
jecxz
idivl
dec
jecxz
stos
inc
incl
push
xchg
out
lods
cmc
fisubs
mov
jae
adc
dec
fstp
dec
xor
mov
add
andl
or
nop
inc
test
movsb
and
add
mov
test
jg
pop
mov
rolb
movb
jns
pop
imul
mov
inc
mov
scas
fldt
xchg
fs
mov
stc
sub
enter
imul
sub
xchg
dec
test
stc
movsb
nop
or
adc
mov
iret
xor
mov
mov
cli
cmp
mov
pop
out
shll
cwtl
fistl
xlat
or
movsb
inc
jmp
adc
pusha
mov
mov
movsb
movb
push
sub
mov
arpl
int
pop
ficomps
rcll
mov
sbb
jo
xor
decl
movsl
mull
cmp
pop
jp
in
rorl
repz
cmp
ljmp
ret
icebp
jmp
bound
jle
or
mov
in
dec
lret
lods
out
fs
jbe
and
arpl
mov
sbb
mov
rolb
mov
or
out
sbb
cwtl
and
mov
stos
mov
lret
dec
pusha
ljmp
js
adcb
or
pop
lret
icebp
push
and
and
loop
push
sub
mov
xorb
pop
sub
arpl
aaa
std
mov
sub
xchg
pop
clc
jp
push
fbstp
hlt
push
push
cli
xchg
ret
lds
pop
xchg
push
fnstcw
push
mov
shlb
out
adc
mov
rcr
pop
jb
or
inc
inc
test
std
mov
scas
adc
pop
rol
ljmp
jl
das
push
adc
loop
popa
popf
mov
repz
jne
push
fistl
mov
test
sbb
mov
insl
push
sti
and
cwtl
fadds
movsb
iret
add
mov
lods
fldcw
inc
inc
jl
mov
mov
scas
cld
mov
mov
jo
rcll
jnp
ret
dec
cwtl
clc
or
arpl
dec
dec
lds
xlat
fwait
inc
aad
das
push
add
aad
ficomps
jmp
and
mov
mov
pop
push
mov
sarl
call
mov
pop
or
movsl
mov
push
jp
adc
push
out
push
jp
add
xchg
xlat
fucomp
dec
jg
adc
mov
sbb
iret
movsb
push
fbld
pop
pop
mov
ds
mov
rcr
mov
dec
mov
or
mov
adc
push
pushl
lahf
cmp
mov
cli
cli
mov
pop
hlt
sub
xorb
roll
push
aaa
in
dec
jbe
cmpsl
int
lahf
xor
sbb
loopne
lock
mov
inc
dec
test
or
mov
add
andb
xor
inc
cmp
dec
sbb
int
push
setno
push
movsl
ret
stos
sub
ljmp
lret
adc
push
ljmp
adc
pop
jae
jbe
pushw
xor
or
push
pushf
cltd
rcrb
xor
xor
es
ds
mov
inc
test
push
cmp
fcoms
pop
mov
je
xor
scas
jbe
ja
cltd
fnstsw
pop
cmp
stc
adc
sbb
jp
lret
ss
loope
in
shll
pop
jl
mov
and
int3
mov
push
xchg
mov
pop
outsl
call
shrl
mov
pop
jb
movsb
push
inc
cs
fbstp
cmc
shll
repnz
mov
lahf
jno
divl
je
and
into
dec
sbb
xor
sbb
dec
cmpl
pop
sub
inc
adc
push
dec
sub
pop
jg
clc
cld
test
lods
xorl
mov
dec
cmp
cltd
mov
mov
pop
mov
mov
adcl
mov
test
mov
mov
mov
sbb
xchg
movl
push
arpl
xchg
jle
popw
mov
xor
mov
jmp
xchg
in
repz
sub
es
dec
add
cmpb
je
test
or
inc
call
ds
sbb
and
and
dec
jmp
xchg
dec
mov
mov
xchg
outsl
xchg
add
fisubrl
and
xchg
mov
adc
hlt
fdivl
clc
hlt
xchg
inc
dec
jns
pop
fsts
mov
bswap
int
iret
and
enter
add
or
jecxz
pop
push
xor
ret
mov
clc
aad
in
xor
and
or
aad
push
test
mov
pop
pushf
jmp
mov
adc
mov
mov
push
and
jecxz
push
xchg
jp
cld
call
ljmp
pop
add
mov
cwtl
repnz
clc
mov
jns
or
push
adc
adc
out
idivb
aas
jmp
inc
sbb
lods
les
sbb
dec
dec
pop
mov
popf
jb
adc
movsb
dec
mov
rcrl
mov
adc
inc
dec
xchg
das
inc
mov
inc
imul
test
inc
mov
test
movsb
or
xchg
dec
push
fcmovnbe
mov
dec
pop
sahf
mov
stos
popf
test
jne
leave
xor
cmp
dec
xchg
lret
out
pop
inc
sbb
mov
and
fisubl
les
adc
shlb
push
das
aas
mov
jnp
sub
inc
mov
js
inc
andb
cs
adc
cmc
sahf
shll
insl
rcr
add
fcmovnbe
sub
cmpl
cmp
cmp
scas
pop
in
iret
imul
xor
xchg
data16
mov
pop
mov
push
ljmp
push
fdivl
dec
cmp
jb
es
mov
dec
into
into
sti
roll
mov
mov
mov
filds
mov
sub
mov
test
sbb
add
rcrl
imull
sarb
jnp
test
and
xchg
mov
sbb
fists
int3
jle
dec
mov
aad
ret
out
mov
test
js
sub
xor
sti
scas
les
jbe
ret
mov
sub
mov
fwait
out
cmp
adcb
leave
rcr
add
loopne
imul
push
jne
mov
dec
sbb
cli
xchg
ret
jb
pop
jo
xchg
movsl
pop
and
sub
popf
add
add
ret
pop
clc
cmpsb
imulb
dec
adc
out
xchg
xchg
dec
out
inc
xor
xchg
pop
fnstcw
pusha
out
repz
xor
mov
insb
mov
lcall
lock
sub
les
push
ss
adc
push
sbb
cld
int
iret
inc
mov
inc
mov
rclb
in
repz
pop
mov
mov
lret
dec
rorl
and
sub
sti
jne
push
inc
pop
or
add
xchg
mov
pop
push
loop
insb
and
jle
test
xchg
cmc
movsl
sarb
push
xchg
negb
dec
push
and
pop
add
iret
leave
stos
and
lea
cmp
insl
fs
imul
dec
cmp
xlat
push
sub
imul
test
idiv
insb
lea
shlb
pop
out
adc
ss
push
sub
inc
push
xchg
xchg
jl
xchg
push
mov
fs
sub
lock
lds
ds
fldl
push
push
sbb
sub
sbb
pushf
xchg
sbb
cmp
xchg
je
pop
pop
inc
adc
fstl
sub
add
gs
loope
mov
dec
cmpsl
rorb
adcl
arpl
shll
ljmp
rcl
mov
stos
flds
push
mov
jns
xor
adc
pushf
sub
mov
jno
imul
popa
adc
jle
sbb
loopne
add
sbb
daa
aam
inc
mov
arpl
cmp
mov
mov
aam
imul
push
xor
lret
mov
xchg
xlat
jmp
popa
int3
pop
fwait
mov
push
fisubs
ja
push
xchg
sbb
icebp
in
push
sub
mov
das
add
pop
pusha
add
dec
test
lock
int
or
sbb
push
inc
dec
adc
jp
sub
xor
xor
std
mov
aaa
aaa
das
in
aaa
dec
mov
lret
pop
loopne
mov
adc
in
pop
push
sub
movsb
mov
mov
dec
std
js
xchg
inc
je
sbb
loope
popa
leave
cmp
mov
push
stc
mov
pop
push
aas
fcomps
xor
pop
in
sub
movsb
movsb
data16
xlat
xchg
test
es
pushf
xchg
cmp
or
pop
jle
gs
inc
daa
adc
das
sbb
in
push
in
pop
adc
inc
sub
mov
and
and
xor
jbe
sub
fwait
cmpsb
xor
fnclex
sahf
cmp
js
fsubs
ret
jo
pop
add
shlb
popa
add
test
push
scas
add
pusha
loop
repnz
mov
sbb
cmp
ja
fwait
cmpsl
xlat
push
jne
xchg
bound
pop
xor
arpl
repnz
mov
sub
jle
fisttps
lar
cmp
mov
fadds
arpl
daa
gs
mov
or
movb
frstor
ds
lahf
mov
repnz
and
arpl
jp
sti
inc
pop
xlat
out
xor
popa
testb
cmp
inc
in
daa
jge
pop
adc
mov
sbb
pop
sub
rcrb
rcl
insl
aaa
cwtl
mov
icebp
pop
pop
out
out
jmp
das
push
movl
add
lods
jnp
test
dec
push
roll
mov
adc
test
jb
adc
bound
sub
and
hlt
ljmp
icebp
cwtl
mov
xor
dec
lret
mov
mov
cmp
cmp
pop
mov
int3
inc
mov
or
ds
lahf
xchg
jb
jne
add
sub
imul
inc
jae
clc
out
inc
xchg
push
popa
es
ss
xlat
pop
cmc
daa
aaa
call
pop
inc
ret
push
inc
push
ss
popa
adc
inc
pop
pop
stos
add
dec
push
repnz
ficoms
adc
sub
jb
dec
push
cmp
add
mov
shrl
lret
inc
out
enter
cmpsb
add
mov
rclb
iret
mov
xlat
add
jae
jbe
icebp
inc
sub
iret
test
cmp
or
and
push
les
insb
movsl
addps
jne
sahf
sbb
lret
loope
arpl
jno
addr16
jge
xchg
enter
xchg
cs
mov
mov
cmpsl
outsb
iret
jl
adc
jg
movsl
mov
inc
aam
fists
jmp
add
xor
cltd
cli
pop
fnstsw
mov
sbb
arpl
and
adc
push
mulb
lods
aad
or
jnp,pn
loopne
call
lret
inc
cmpsb
mov
pop
adc
dec
push
in
mov
mov
pop
push
call
jecxz
xor
add
fsubrl
cmpb
cmp
imul
lods
pop
in
insb
xor
jae
popa
push
or
bt
jnp
movsb
cmp
push
xor
fstpt
jecxz
push
inc
jns
push
mov
mov
fs
xchg
jae
leave
test
mov
test
sar
pop
not
sahf
subl
inc
and
sub
mov
lods
mov
in
mov
mov
hlt
out
mov
and
sub
sbbl
pop
ss
inc
inc
mov
push
cmc
add
iret
je
ret
dec
mov
pop
and
pop
cltd
out
movsl
mov
sti
and
xchg
shll
loopne
ret
gs
dec
cmp
call
cmpsb
mov
iret
rcl
scas
fsubrs
stos
loope
xor
mov
adc
xor
shl
dec
xlat
pop
hlt
mov
rcll
jne
pop
dec
sub
adc
in
enter
outsl
cltd
sub
push
lahf
mov
or
lret
and
push
in
cmpsb
add
in
lahf
ret
loop
repnz
je
lret
ja
mov
outsb
fmuls
lahf
pushf
fcmovnbe
xchg
das
xor
aaa
test
call
mov
or
mov
or
xor
pop
push
lret
or
leave
xchg
mov
mov
inc
popa
pop
cld
jbe
mov
ja
rorl
outsb
or
cwtl
pusha
jp
jg
xchg
loop
or
pop
push
push
addr16
imul
cmpsl
dec
add
sbb
push
sti
sub
arpl
push
andb
pop
mov
add
bound
xchg
mov
jle
movsl
mov
xorb
mov
cmp
test
fildll
sub
cs
xor
cmpsl
cwtl
fmulp
mov
fcomip
bound
add
adc
subb
push
pop
mov
ret
cmpsb
sub
or
push
push
cmp
rcll
and
and
call
pop
mov
int
ds
mov
loop
sbb
push
shl
adcb
xchg
in
lret
stos
push
xor
scas
repnz
push
das
mov
xor
push
dec
mov
les
sbb
inc
pushl
push
dec
sub
dec
jae
mov
sub
jne
pop
shrb
out
jl
testl
das
rcrl
pop
mov
fisubs
out
out
pop
push
sbb
sti
or
call
int
lock
mov
mov
xor
cmp
loope
fldcw
jbe
lret
pusha
cmp
dec
mov
jns
out
fisttpll
or
jmp
push
data16
outsb
test
imul
adc
pop
lahf
lods
mov
mov
sub
call
mov
mov
push
fisubl
xor
xchg
dec
dec
test
loopne
out
cmpsb
dec
xor
mov
mov
lods
out
mov
cmp
ljmp
lahf
loope
mov
xchg
pop
xor
lods
jno
or
push
cltd
xor
addl
pop
jnp
cmp
in
inc
inc
jp
aam
sub
jns
or
cmpsb
in
iret
mov
icebp
nop
aaa
pop
shl
incl
mov
or
cmpsl
ds
jmp
or
mov
cmp
jg
popf
jmp
into
cmp
dec
test
pop
jbe
idiv
pop
or
xchg
addr16
rclb
sbb
pop
and
aas
fldcw
adc
and
pop
cmp
roll
mov
cld
add
xchg
jb
cmp
and
into
cwtl
aas
movsb
xchg
jl
int3
repnz
jp
pop
cmp
sub
dec
scas
pop
push
insl
pop
pop
out
pop
mov
mov
push
fisttpl
inc
test
cmpsb
jae
jl
mov
and
mov
adc
mov
mov
dec
and
and
movsl
loope
jl
test
fnstsw
push
xchg
mov
insl
jno
pop
dec
mov
ds
cwtl
andb
jge
push
ret
es
scas
clc
test
mov
sub
ja
loop
arpl
jns
xor
jno
xlat
mov
repnz
and
push
jp
sbb
aad
or
mov
mov
mov
jmp
cmp
mov
enter
cltd
inc
jp
cmp
nop
cwtl
ret
push
pop
repnz
sub
and
jp
insb
popa
pop
or
dec
xchg
ret
sti
insb
inc
push
xor
movsb
dec
imul
fidivrl
mov
sahf
push
sar
les
adc
enter
repnz
adc
int
in
xchg
std
movsb
jp
add
cmp
out
pop
jb
les
lahf
adc
test
inc
sbb
mov
cmp
sub
xchg
inc
jmp
sahf
adc
daa
in
inc
inc
lret
aad
leave
adc
shlb
sahf
aad
dec
inc
inc
pop
jl
mov
loope
fldenv
lret
daa
dec
push
pusha
xlat
cltd
and
cmc
xor
mov
jp
sti
cmpsl
push
and
inc
pop
lds
push
fiadds
add
mov
jae
leave
lret
and
aam
in
and
adc
sub
arpl
mov
cmc
jge
pop
sub
mov
dec
scas
inc
jmp
in
sbb
pusha
cmpsl
dec
cmp
loopne
mov
cld
outsb
inc
enter
lods
inc
push
ret
lods
mov
mov
andl
cmp
imul
pop
mov
fstpl
dec
test
sbb
mov
inc
andb
adcl
outsb
hlt
inc
lods
decb
pusha
mov
jbe
mov
daa
adc
addr16
and
jb
jmp
jp
xchg
sbb
into
out
pop
and
stc
xor
pop
movl
jmp
lods
pop
test
imul
add
mov
pop
and
in
ret
xor
outsb
pop
mov
iret
testl
mov
lret
inc
mov
out
jns
pop
imulb
jnp
out
in
jg
push
movsb
adc
pop
mov
outsl
sti
shll
xchg
cmp
imul
lods
cmp
pushl
popa
rolb
sub
mov
sbb
data16
lods
or
jecxz
mov
push
jle
shll
das
outsb
cmp
aad
and
or
outsl
jno
dec
adc
imul
or
std
dec
mov
stc
xor
int
push
push
lods
lods
jnp
xlat
mov
cmp
arpl
addl
hlt
xchg
push
out
pop
or
mov
xchg
outsl
xchg
ret
sbb
jbe,pt
insb
and
sti
aas
sbb
in
cld
mov
das
leave
mov
cmpb
in
pop
adc
mov
les
mov
xchg
outsb
repz
jb
les
decb
jae
pop
push
push
fdivs
iret
rorb
mov
jmp
lea
cmp
push
inc
in
mov
jnp
mov
je
inc
or
xchg
pop
jg
push
gs
sbb
cmp
out
mov
jecxz
int
sbb
mov
aaa
sbb
adc
sbb
push
sbb
jae
xor
mov
test
and
testl
mov
inc
jp
adc
iret
cwtl
lods
xor
imul
dec
mov
ret
test
fcompl
inc
stos
xchg
subl
or
cs
mov
int
pop
stc
jl
mov
je
pop
xchg
aaa
rcr
xchg
shrb
mov
mov
mov
pop
xchg
divl
xor
mov
and
push
cs
outsl
outsb
idivb
adc
or
cmpsb
out
lds
pop
jb
imull
int
call
xor
push
test
aam
dec
sub
imul
jg
scas
scas
cmp
xor
jle
mov
mulb
jne
sti
cmc
mov
sahf
pop
or
jne
movb
push
in
mov
xchg
or
mov
nop
jg
test
add
lea
push
cmp
push
mov
xor
pushf
xlat
ljmp
mov
dec
cmp
jl
iret
mov
or
lds
pop
in
cmpsl
shlb
out
dec
push
push
addr16
movsl
sub
dec
nop
jge,pt
xchg
inc
pop
xchg
mov
imul
jo
jno
push
mov
and
lds
dec
sbb
jmp
inc
push
out
iret
mov
sub
pop
movsl
push
mov
pop
adc
xchg
pop
mov
mov
outsb
cld
push
and
loope
imul
mov
pop
xchg
xchg
inc
andb
mov
mov
mov
pop
daa
dec
mov
or
jb
mov
or
repnz
fnstsw
popf
fisttpl
mov
lret
orb
pop
mov
and
aad
aas
mov
pop
adcb
inc
sub
sbb
idivb
dec
pop
cmp
fmuls
dec
mov
mov
scas
into
daa
cmp
fbstp
cmpsl
lret
jo
mov
jl
sbb
mov
loope
ja
mov
in
fwait
add
mul
fstpt
sub
movsb
minps
xor
sbbl
mov
idiv
fildl
sub
shll
xorb
sbb
js
stos
add
xor
sbb
stos
les
lods
call
jle
mov
xlat
jmp
pop
cmp
sbb
rolb
insb
sbb
and
adc
test
pop
jmp
inc
insb
icebp
adc
test
cmp
pop
add
xor
inc
jge
or
add
in
push
sub
push
sub
int3
xchg
adc
pusha
sub
pusha
icebp
cwtl
pop
push
daa
mov
test
xchg
repz
xlat
xor
in
sbb
fwait
jecxz
fcom
mov
xor
pop
ret
xor
xor
repz
fwait
sbb
jno
cmc
sub
movsl
cmp
pushf
decl
mov
sbbb
xor
in
lea
mov
outsl
mov
jo
pop
mov
psrlw
cltd
push
mov
cmpl
pop
mov
loopne
push
mov
sbb
leave
sbb
rol
rcrb
repz
data16
push
or
aam
fildll
pop
dec
lock
mov
pop
and
mov
mov
cs
jo
loope
rclb
fbstp
mov
mov
std
push
sti
stc
js
cmp
sub
imul
loop
sub
cltd
scas
jo
maxps
pop
inc
mov
nop
jne
inc
lds
hlt
addr16
cld
push
jecxz
xor
iret
fstpl
inc
lret
xor
lahf
ret
add
cld
loopne,pn
inc
cs
mov
mov
or
and
sub
inc
das
out
fsts
xchg
mov
incb
jl
cld
ljmp
imul
or
push
je
jns
clc
dec
add
aam
and
aam
lcall
inc
xorb
lock
negl
repnz
mov
inc
in
mov
adc
movsb
and
psubb
jmp
test
inc
mov
gs
mov
cltd
adc
test
mov
ss
sub
xchg
and
xor
les
mov
repnz
enter
repz
push
clc
inc
shll
xlat
push
int3
mov
adc
push
cmp
iret
and
pop
cmp
mov
adc
sub
push
into
mov
lret
dec
loope
push
inc
mov
outsb
rclb
ret
pusha
inc
push
pop
add
daa
push
sub
cli
cmpsb
sarb
adc
sahf
arpl
inc
inc
insb
jae
push
cmpsl
adc
pop
mov
aad
add
rcrl
jae
sahf
loop
add
stos
add
push
jnp
xchg
shlb
les
dec
int
scas
stos
add
test
in
fistpl
in
orl
dec
xchg
jb
popf
push
lods
hlt
mov
shrl
mov
subb
mov
xchg
cltd
es
out
test
bound
add
movsl
jno
inc
mov
mov
push
jle
push
cli
out
mov
bound
nop
inc
aaa
in
dec
ja
lret
xor
repz
mov
es
jecxz
push
or
add
shll
xchg
mov
mov
hlt
and
clc
cli
xorl
shrl
ficoml
sbb
mov
out
sbb
mov
fwait
mov
gs
xchg
inc
aas
or
xor
loopne
and
dec
int3
xchg
mov
out
ljmp
jne,pn
push
ja
xchg
xchg
add
arpl
xor
pop
lods
xchg
dec
enter
cmp
adc
xlat
in
fsubs
mov
fsubrs
cli
sub
xor
test
divl
dec
cmp
jmp
jge
dec
cmc
push
out
sbb
imul
sbb
rcll
inc
mov
push
push
jp
dec
mov
repnz
mov
jno
pop
loope
pop
popa
dec
inc
scas
pop
bound
cmpsb
lea
or
popf
mov
test
jbe
cmpsb
add
test
jb
stc
mov
inc
cmp
insb
xor
or
rcrl
outsb
dec
lcall
imul
xor
lods
push
sti
arpl
inc
aas
and
push
loop
movb
loope
and
dec
fsts
bound
xor
xor
sbb
js
popf
jp
out
inc
dec
add
pusha
shlb
pushl
pushf
cs
or
push
test
inc
dec
pop
ja
pop
out
fistl
inc
cmp
jle
xchg
lods
mov
push
int
out
clc
mov
push
push
ljmp
sbb
cli
bnd
es
mov
fcom
fcomps
add
int
scas
jno
fsubp
xchg
repnz
int3
test
lahf
pcmpeqd
in
popf
and
mov
jb
inc
and
popf
xchg
sbb
sbb
mov
xchg
inc
leave
xor
sub
xchg
cltd
adc
pusha
pusha
sbbl
and
mov
adc
mov
cmc
inc
lock
loopne
fisttpl
js
dec
ja
xor
repnz
stos
fs
cld
into
xor
and
sbb
sbb
cmp
jl
jb
mov
in
adcb
pop
mov
aam
jbe
jnp
dec
cmp
jmp
repnz
or
aas
mov
push
cli
es
fisttpll
test
or
dec
dec
mov
dec
lock
aaa
mov
cld
push
mov
xor
fcoml
mov
xor
lods
push
mov
adc
aas
push
add
ss
aad
sbb
shlb
ret
fmuls
xchg
pop
out
mov
jmp
sti
sbb
dec
lahf
leave
in
mov
xchg
xor
push
mov
test
push
sbb
insl
push
jo
out
mov
pop
idivb
fcmovnbe
sar
bound
mov
ficompl
jb
int3
ds
xchg
cmp
xchg
xor
cmp
sub
rcrb
xchg
fmul
movsl
dec
xlat
xchg
lret
mov
and
rolb
fsubrl
fsubl
xor
clc
mov
cmp
xor
sbb
sbb
push
pop
cli
sub
cmp
push
fcomip
fadd
lret
in
jmp
std
xor
mov
xchg
inc
daa
ljmp
mov
nop
addr16
aas
add
mov
pushf
push
test
mov
popa
sbb
mov
or
or
adc
add
jmp
bound
or
les
sub
movsb
sahf
stos
push
lret
out
mov
pop
or
aad
imul
pop
idivb
jb
add
cli
cmpsl
xchg
jmp
in
or
push
xorl
loope
sub
or
incl
mov
add
stc
jnp
adc
dec
push
scas
or
nop
call
shrb
mov
jmp
hlt
xchg
mov
add
daa
rcrl
aam
mov
ss
inc
stos
mov
int
pop
or
lcall
shlb
jle
mov
mov
rcrl
popf
sub
or
subl
repnz
mov
mov
add
shlb
dec
fcomps
push
mov
inc
mov
inc
dec
mov
push
jo
stos
gs
decb
mov
ret
push
fsub
adc
inc
in
outsb
sbb
and
and
insl
xchg
gs
ljmp
xchg
xchg
or
jl
aas
loope
insl
lock
dec
push
std
push
mov
add
stos
mov
scas
aad
sbb
test
lahf
cmp
ss
dec
dec
xchg
xchg
pop
mov
in
sbb
dec
sbb
xor
inc
and
les
pusha
push
data16
jns
scas
jns
cmp
push
in
xor
bswap
and
out
sub
mov
ficoms
and
and
or
loope
adcl
gs
sbbb
mov
test
mov
jb
dec
stos
rcrl
sbb
inc
jmp
shlb
lock
loop
ss
push
xor
das
add
sub
testb
mov
sbb
xor
cmp
mov
xchg
mov
aad
ret
pop
cs
cmp
jmp
add
sbb
pop
lea
xchg
cmp
or
cld
xchg
sbb
pop
jnp
dec
cs
cmp
in
xor
jecxz
hlt
popf
push
add
jmp
loopne
jae
popa
fnstenv
fcomps
aaa
xor
add
sub
insb
loopne
pop
jae
sbb
test
xor
std
jg
or
pop
adc
cmp
jbe
ss
loopne
push
ljmp
xor
jmp
clc
out
popa
push
adc
inc
jb
and
mov
repz
insb
xlat
dec
cmpsb
fbld
int
push
add
dec
out
repz
popf
pop
mov
add
data16
push
les
mov
dec
int3
inc
das
test
lea
lret
add
mov
mov
push
rcrl
pusha
ja
and
mov
in
sahf
dec
sbbb
test
ret
and
fnsave
xchg
mov
jnp
cli
cmpsb
mov
xchg
push
out
lds
xor
cld
push
push
jno
mov
sbb
cmpsw
daa
rolb
mov
repnz
cmp
xchg
mov
incl
mov
jns
xchg
imul
add
mov
pop
test
or
scas
jnp
sub
lcall
jb
js
jb
popf
inc
mov
xchg
loop
mov
jge
push
std
call
pop
add
scas
fdivrl
iret
mov
sub
cwtl
and
xor
lods
mov
inc
adc
xlat
test
sarb
xor
jg
and
outsl
xor
ja
adcb
mov
jo
enter
call
pop
mov
cmc
mov
ss
or
loop
cmp
xor
cld
sbb
cmp
mov
sbbl
jl
jle
fwait
lods
rolb
stos
sbb
movsb
sbb
push
adc
dec
push
push
or
roll
mov
outsb
imull
inc
push
lret
adc
lea
and
popf
or
inc
shll
dec
and
push
fmuls
pop
jmp
pop
inc
aaa
loopne
pop
neg
jl
push
adc
imul
adc
xchg
dec
or
icebp
aad
les
in
add
int
ljmp
xchg
or
leave
jle
outsl
push
or
nop
popa
push
push
jle
push
jne
jge
dec
insb
nop
aaa
outsl
test
out
add
push
pop
mov
fdivl
dec
test
mov
ja
mov
push
adc
xchg
fsubrp
insl
sbb
xlat
not
fs
nop
sbb
jge
les
dec
popa
sub
cmp
inc
test
mov
fimull
arpl
js
pop
dec
scas
xlat
mov
inc
out
popf
sub
inc
pop
inc
sbb
or
push
and
sub
mov
mov
or
jbe
subl
mov
mov
es
adc
stc
push
test
mov
mov
dec
cwtl
xor
fsubrl
ret
jno
fdivr
sahf
stos
push
inc
out
jne
js
repnz
xchg
in
add
cli
out
in
icebp
mov
add
mov
jmp
pushf
jnp
add
push
into
add
mov
xor
lock
lods
sahf
mov
sub
pop
adc
jle
sbb
sahf
out
sbb
mov
xor
out
adc
out
cld
out
xor
inc
data16
mov
mov
sbb
push
aad
sbb
fisttpl
and
push
sub
jp
sbb
fiadds
xchg
js
mov
lea
xchg
faddl
inc
push
jnp
mov
xchg
call
ljmp
xchg
pop
mov
js
jmp
enter
icebp
push
mul
sbb
pop
pop
cmp
add
stc
lret
stos
fdivrl
ret
ja
sub
stos
out
inc
aad
xlat
clc
jp
mov
fsts
movl
out
sub
in
jnp
jl
mov
add
mov
lahf
sbb
filds
push
pop
imul
bound
jl
cli
push
pop
jmp
push
mov
movsl
ds
jo
mov
out
jae
xchg
cmp
cmpsb
xchg
nop
ljmp
leave
jmp
leave
mov
inc
and
mov
xor
lret
clc
ret
dec
mov
dec
xchg
iret
sbb
int
rcl
inc
sub
fmuls
push
scas
sahf
pop
sbb
xor
xchg
cli
mov
gs
jne
mov
addb
scas
ds
push
sbb
rcll
rorb
aaa
xor
outsl
dec
into
movsb
loopne
dec
daa
jno
jecxz
mov
push
add
mov
push
lcall
jecxz
and
and
dec
push
test
sbb
inc
jo
jp
push
scas
pop
mov
repz
in
xor
jo
das
pop
adc
repnz
fwait
dec
push
and
out
out
push
pop
xchg
mov
jb
test
cmp
inc
lods
test
mov
pop
in
dec
mov
push
gs
and
lret
sub
inc
sub
push
sub
pop
xlat
imul
pop
push
daa
negb
and
sub
xor
inc
arpl
inc
icebp
add
mov
pushf
rclb
lods
xor
xlat
sbb
pop
fidivs
inc
std
push
dec
cld
imulb
bound
xchg
call
cld
inc
js
and
dec
adc
or
movb
xchg
gs
icebp
cmc
push
andb
pushf
xor
push
adc
jnp
push
push
mov
mov
stc
movsl
out
lahf
fwait
xlat
pop
scas
mov
or
xor
mov
pop
inc
int
movsb
or
fdivrl
inc
xor
dec
sbb
aad
call
mov
inc
rorl
idivb
and
aam
fistpl
dec
jl
dec
into
punpckhdq
cmpsl
mov
iret
xorb
inc
lcall
pop
out
jg
sub
mov
incl
iret
cmovnp
mov
in
inc
xchg
lods
call
fbstp
sahf
mov
xor
or
or
fadd
pop
dec
or
dec
loope
xchg
popa
mov
loop
xor
decb
stos
outsl
xchg
out
or
and
dec
push
push
push
and
mov
sbb
mov
in
test
incb
sti
mov
or
test
push
dec
adc
movsl
scas
or
mov
mov
jns
es
inc
pop
jb
jp
xchg
enter
mov
push
add
sbb
inc
dec
je
jbe
stos
data16
xchg
add
loope
stos
push
rolb
mov
push
xchg
mov
jl
dec
inc
xor
fldt
dec
and
dec
cli
test
mov
jno
push
sub
cmp
push
mov
ja
push
jle
mov
ret
xor
pop
in
adc
ficompl
fucomi
mov
push
ret
fnsave
xchg
cmpsb
scas
data16
push
sti
fcmovbe
dec
mov
pop
jl
out
mov
jecxz
and
add
fwait
push
add
push
clc
adc
pop
push
ljmp
and
sbb
call
jmp
dec
jmp
mov
ret
popf
jecxz,pn
loop
pop
mov
sub
or
cmp
and
xchg
jmp
movsl
jle
ja
lods
ss
mov
jnp
scas
mov
xor
mov
arpl
std
pop
imul
pop
and
mov
in
hlt
mov
inc
pop
movsb
subb
data16
lea
xchg
xorb
pusha
jae
cli
sub
mov
testb
outsl
jle
gs
test
hlt
ud2
xchg
test
inc
jns
push
push
cmpb
inc
mov
xor
add
lods
js
dec
adc
adc
mov
lds
add
cmp
js
insb
jns
and
imul
data16
test
cld
mov
loope
test
push
lret
std
mull
jmp
rcrl
stc
ret
clc
movsb
dec
adc
and
fst
mov
outsb
xor
mov
mov
stc
addl
cmp
aas
push
mull
div
in
das
clc
jno
push
adc
imul
pop
and
lds
test
imul
push
lds
dec
rcrb
inc
mov
pop
add
sub
stos
push
bound
mov
dec
mov
cmp
and
ret
mov
test
and
mov
data16
cmpl
mov
dec
not
jmp
or
pop
and
pop
cmp
in
lret
xor
or
adc
frstor
mov
adc
outsl
leave
cmp
xor
add
inc
push
dec
xor
push
fimull
cmp
xchg
push
nop
mov
xchg
and
ds
xor
cmpsl
mov
jmp
add
add
mov
rcrl
ljmp
mov
ret
bound
enter
imul
js
je
xchg
push
jb
stc
mov
and
and
sub
ds
push
loop
cwtl
jae
adc
aas
xor
enter
mov
fcomi
ret
enter
and
loop
shrb
cmp
dec
add
jne
adc
jl
sbb
cmp
xor
push
pushf
jne
repnz
pop
enter
mov
push
inc
fstps
aas
xorb
out
or
mov
jb
shll
daa
pop
push
xlat
lcall
pushf
xchg
es
rcrb
sub
adc
push
or
cmp
cmpsl
add
jne
outsb
sar
ja
test
mov
insb
inc
out
mov
lea
jge
in
addr16
sbb
push
fisttpll
and
jecxz
dec
mov
outsb
jnp
push
cli
in
into
pop
int3
es
jmp
add
push
jnp
pop
xor
ret
lahf
push
cmpsl
popa
sub
or
mov
cmp
push
pop
or
in
or
xchg
inc
iret
mov
cli
sub
jl
mov
arpl
mov
fidivs
out
or
sbb
dec
fs
repnz
add
testb
mov
das
nop
std
imul
movsb
adc
test
mov
push
cwtl
mov
xchg
push
add
ds
mov
cmpsb
cmp
lahf
leave
push
dec
sbb
xor
push
ljmp
cmp
pop
enter
clc
or
in
and
ja
xor
nop
jnp
test
out
xchg
or
and
popf
and
sbb
sub
loope
cmp
out
ja
subl
loope
ret
into
sar
sbb
xchg
cld
and
sbb
pop
push
rcrl
cmp
cwtl
inc
jb
add
das
aad
xor
xchg
sub
pop
inc
and
and
in
push
mov
enter
pop
dec
inc
out
push
jmp
mov
dec
cwtl
mov
and
inc
mov
icebp
call
into
sti
cmp
cmpsl
push
fadds
mov
orl
ss
dec
xlat
xlat
mov
out
icebp
ja
les
push
pop
mov
fcoml
cmpsb
aam
stos
fnstcw
nop
inc
imul
fs
inc
arpl
int3
xor
mov
fldenv
pmaddwd
xor
shl
and
sti
insb
cltd
mov
cmp
rcr
aam
mov
dec
test
ret
daa
and
sbb
adc
xchg
orl
into
stos
and
imul
sbb
mov
int3
dec
cs
scas
ret
mov
sub
and
mov
pop
jle
lcall
lds
aam
and
cmpl
repnz
jbe
and
xchg
cmpsb
test
cmc
in
mov
cmp
push
std
push
ljmp
cwtl
adc
pop
and
jns
lahf
xchg
out
fcompl
test
les
in
mov
nop
jns
and
je,pn
mov
cmp
push
push
inc
lea
dec
or
sbb
xchg
xchg
dec
xorl
sub
push
lods
movsl
xlat
xchg
dec
imulb
mov
mov
xor
cmc
sbb
push
sbb
jl
lahf
mov
sub
jp
js
aaa
cmc
dec
mov
dec
lahf
push
pop
sbb
ret
pop
dec
test
pop
mov
aas
test
nop
sbb
jo
push
sbb
xor
outsl
rcl
notb
sub
push
ds
ficoml
add
push
xchg
sarb
lods
popf
mov
push
dec
adc
cmp
lea
dec
pop
cwtl
and
dec
add
decb
loopne
cmp
adc
cmpsb
cmp
sub
sbb
adc
add
nop
sbb
stos
ljmp
mov
ljmp
push
xor
std
cmp
xchg
filds
movsl
and
jno
add
mov
lods
pop
xchg
leave
bound
aaa
dec
mov
push
shlb
push
testb
xchg
jns
add
jle
sub
mov
mov
aas
cwtl
sub
push
jle
push
rorb
pop
mov
inc
mov
iret
test
aas
adc
pop
xor
mov
xchg
cli
xchg
dec
adc
dec
cmp
lcall
mov
and
adc
cmpb
xchg
xor
mov
ss
lods
pop
les
push
pop
dec
ss
pop
roll
les
sub
es
movq
push
sti
cmc
rcl
push
lock
cmpsb
mov
lret
inc
fidivl
outsl
test
sahf
cmp
mov
test
cld
mov
adc
das
or
mov
xchg
adc
movsl
fidivrl
sub
dec
inc
in
test
orb
in
xor
dec
into
xchg
lods
xchg
dec
xor
fistl
push
cmp
ja
out
pop
int3
mov
imul
scas
daa
arpl
fwait
fwait
les
ret
sub
lahf
popf
inc
push
mov
adc
mov
out
mov
lods
mov
pop
int3
push
jp
sbb
clc
inc
repnz
fcompl
andl
aaa
dec
testl
sub
sbb
push
jno
insl
sub
in
xor
cltd
cs
repz
testl
lret
xchg
dec
mov
or
xchg
push
fnstcw
mov
loopne
repnz
test
movsl
cld
popa
popf
pop
inc
pushf
in
pop
cmp
xchg
add
jns
lret
inc
mov
xchg
and
xchg
mov
test
xor
imul
adc
les
fmull
dec
lock
aam
in
jecxz
stos
xchg
stc
arpl
jbe
cmp
inc
int
test
int
ss
pop
or
push
loopne
jmp
mov
fcompl
dec
pop
add
rcll
pop
fnstenv
in
sbb
scas
out
and
std
pushf
fwait
insl
data16
push
sub
insb
jmp
jo
hlt
mov
dec
sub
sub
in
mov
outsb
inc
stos
outsb
fwait
sarl
sbb
push
ds
cli
jae
fimull
cs
xchg
lahf
movsl
cmp
lock
cmp
insb
dec
mov
lods
movsl
dec
dec
out
mov
arpl
pop
xlat
pop
stc
or
test
and
dec
push
push
and
cmpsb
adcl
lods
jo
mov
adc
repnz
xor
enter
mov
adc
sbb
popf
xchg
inc
ds
test
fildl
ljmp
sarl
sbb
out
das
add
mov
dec
add
jmp
add
in
sub
outsl
mov
adc
dec
mov
ret
jmp
cmovp
aad
push
adc
fyl2xp1
dec
loope
repnz
icebp
inc
inc
fdivrl
xchg
adc
xchg
jge
push
push
cmp
cmp
mov
into
ljmp
mov
sub
stc
shll
push
stos
pop
es
outsl
dec
sahf
roll
arpl
jmp
aaa
push
lods
leave
fcoms
push
rcrl
pop
leave
jg
push
xchg
in
lretw
or
jbe
mov
xchg
jp
adc
popa
mov
xor
jg
mov
xor
lods
mov
lcall
clc
mov
push
jbe
jmp
lret
adcl
pop
inc
cmpsl
test
or
in
jno
cmp
out
aas
cmp
mov
add
mov
dec
sub
stos
sbb
jnp
or
test
cwtl
dec
push
add
mov
jmp
leave
jne
out
xor
adc
cmp
sbb
lcall
sub
cmp
mov
je
sbb
insl
and
pop
mov
insb
jle
lret
and
cmp
das
jle
sbb
icebp
jl
rorb
and
sbb
jbe
scas
push
dec
add
pop
out
inc
jb
pop
inc
lods
add
out
mov
add
int
xchg
iret
inc
notl
shll
inc
inc
iret
pushf
cwtl
and
sbb
push
xor
add
lret
sub
dec
xchg
cmp
scas
lahf
dec
mov
mov
dec
hlt
lock
ja
jns
jp
imul
mov
lock
repnz
xor
icebp
orl
jno
scas
mov
int
mov
adc
aam
popa
inc
push
icebp
push
icebp
cmpsb
pop
int
pop
imul
xchg
xor
popa
stc
mov
cmp
cmp
int
nop
std
sbb
mov
mov
push
jno
dec
icebp
movb
pop
add
jle
std
std
sub
in
inc
mov
inc
or
adc
jo
inc
fists
mov
leave
push
iret
in
stos
or
pop
mov
pop
fwait
dec
std
ja
push
aaa
cmpsb
or
int3
and
aad
jmp
pop
push
imul
or
loop
imul
inc
xor
sarl
dec
lea
or
xchg
xlat
mov
shlb
cli
or
cmp
enter
xor
mov
jp
and
dec
inc
pop
adc
repnz
jle
mov
push
daa
clc
popf
jo
lcall
bt
out
sbb
test
xor
jecxz
mov
sahf
sub
scas
push
inc
movsb
xor
mov
adc
testl
mov
and
jmp
add
xor
xchg
adc
push
dec
cmp
jbe
mov
fstpl
push
cs
les
mov
les
iret
xor
aas
mov
xchg
fldcw
sti
fsubl
cmp
insl
lock
mov
xorb
shll
je
cltd
gs
arpl
das
xchg
and
gs
push
dec
inc
inc
add
out
jge
sbb
incl
inc
enter
xor
fs
xchg
push
out
xchg
out
mov
jae
add
push
push
cmp
in
ljmp
push
sbb
push
and
dec
outsl
sub
sbb
push
rol
and
into
ljmp
mov
je
mov
addr16
or
fimuls
out
jno
push
push
loop
adc
sbb
pusha
mov
pop
scas
xchg
cmp
iret
aas
inc
jp
sub
mov
push
popf
arpl
fst
shlb
xchg
mov
stos
test
mov
cmpsl
xchg
xchg
push
lret
jo
sbb
or
xchg
xchg
loop
push
and
stos
inc
outsb
push
xor
clc
daa
xchg
std
adc
push
pop
push
adc
es
push
je
loope
adc
pop
rclb
push
or
test
pop
aaa
icebp
je
jbe
out
pop
and
dec
arpl
jl
pop
adc
cmc
cmpsb
jecxz
inc
out
dec
cmp
sbb
mov
sbb
push
sub
cmp
int
adc
jmp
cs
in
repz
cs
scas
mov
lods
add
xchg
dec
mov
jle
sub
arpl
test
daa
cmp
jp
jg
sub
push
pop
inc
call
mull
jo
xlat
and
sti
pop
pop
mov
aam
xacquire
movsl
jns
pop
adc
push
inc
xchg
adc
out
mov
lret
cld
incb
out
lcall
jecxz
xchg
cld
fidivrs
out
mov
mov
lret
outsb
xchg
jmp
popa
mov
ret
xor
sbb
jl
add
and
sti
push
xor
sbb
scas
fcom
movsl
inc
popa
aas
cmp
sub
xchg
xchg
repnz
pop
jb
popf
sub
sbb
push
jbe
mov
dec
xchg
imul
lret
les
sub
sbb
hlt
add
or
push
in
mov
mov
lcall
pop
mov
sbb
add
or
pop
push
mov
cmp
mov
mov
shll
sahf
sbb
sbb
xor
push
push
push
cmpsl
fs
jae
cmp
jbe
jecxz
push
shlb
pop
out
add
lods
xchg
and
push
inc
dec
inc
mov
jle
mov
jnp
ja
or
push
push
movsb
mov
and
rorb
mov
pop
mov
xchg
xchg
dec
mov
jne
mov
cld
mov
insb
add
cli
mov
shr
xchg
ret
mov
popf
ljmp
gs
pop
dec
mov
pop
mov
inc
mov
clc
pop
rcrb
add
jecxz
je
or
cmp
push
fst
push
inc
or
js
adc
stos
lods
xlat
sbb
jns
and
cmpsl
dec
lods
mov
inc
clc
mov
dec
dec
insb
and
adc
sbb
vpcmpeqb
mov
mov
insl
cmp
pop
loope
pop
or
mov
inc
ficoml
movsb
add
mov
fists
cld
call
dec
into
mov
dec
lret
jne
cmc
cmpsw
pop
roll
je
stos
test
inc
mov
divb
mov
inc
pop
orl
outsb
jo
and
mov
stc
pusha
out
arpl
jo
cltd
repz
test
ds
out
pop
push
xor
push
sub
xchg
jnp
int3
xchg
jle
sbb
lret
sub
icebp
pop
cwtl
inc
push
outsl
scas
adc
pop
jo
cmp
push
mov
andb
jecxz
movsl
jle
mov
aam
flds
add
stc
sub
orl
mov
clc
sti
fildl
add
mov
cmp
into
xchg
inc
jecxz
mov
jns
push
lret
test
enter
lret
int3
inc
xor
test
inc
add
push
push
push
xor
in
mov
jnp
fucomi
jp
jecxz
clc
negb
repnz
mov
fwait
lds
movsb
mov
ret
jne
mov
mov
aad
mov
inc
iret
cltd
test
mov
xchg
sbb
fldl
mov
lret
roll
call
sub
das
lods
mov
leave
xchg
cmp
cmc
pop
nop
add
push
jne
jno
rol
push
xlat
repz
mov
adc
adc
sbb
les
lods
push
into
in
adc
dec
adc
xchg
cs
jno
stos
push
outsb
shll
stc
scas
adc
inc
sbb
pushf
das
xor
jecxz
jp
jmp
cmp
xchg
insb
push
dec
in
fcmove
mov
lods
mov
das
addr16
je
cmc
js
cmp
mov
mov
pop
push
sub
jb
iret
push
pop
pop
ss
cmpsb
jae
mov
daa
lds
fs
dec
mov
xchg
rcr
pop
sahf
repnz
xor
push
cmc
sub
cmpsl
pop
jecxz
dec
test
or
lea
inc
mov
mov
fs
ret
adc
test
popa
xchg
es
and
adc
pushf
push
flds
rorb
std
loopne
mov
add
mov
inc
ret
es
in
xchg
sbb
push
stos
mov
mov
shlb
jnp
in
xchg
xchg
ss
pusha
je
sub
arpl
sarl
sub
xorb
cmpsl
gs
popf
xchg
mov
inc
pushf
jp
push
mul
orb
aam
pop
jl
icebp
and
rorb
es
dec
xor
iret
jbe
lock
insl
mov
sub
add
repnz
mov
xchg
mov
ljmp
rol
xchg
adc
jmp
loopne
je
inc
outsb
pop
dec
ret
adc
dec
cli
test
addr16
cs
enter
nop
out
cwtl
mov
fs
inc
arpl
enter
jne
jno
gs
movsb
ret
xchg
cltd
jle
dec
iret
jbe
test
mov
insl
mov
icebp
push
and
cmp
stos
shlb
rcr
sti
aas
inc
push
loopne
sahf
jb
jl
dec
fnstcw
imulb
js
push
je
sbb
rolb
push
sub
mov
sbb
fbstp
lock
lea
xchg
pop
pop
in
sbb
xor
pop
lret
add
xchg
fnstsw
jecxz
or
dec
cwtl
jbe
sbb
xor
and
pop
push
aaa
xor
mov
stc
xlat
push
fnstsw
mov
divb
scas
mov
pop
jbe
cmpsl
push
test
in
xor
sarb
push
cmpsl
addl
xor
fadds
aam
push
movsl
sub
in
add
jmp
cld
scas
int
xchg
adc
shlb
dec
out
pop
or
xchg
sbb
out
push
test
cwtl
cmp
mov
ljmp
je
xor
xor
fcompl
loope
stc
mov
cmp
dec
imul
scas
lret
insl
orl
daa
filds
push
mov
sub
lcall
lods
sub
mov
xor
push
mov
lret
xchg
inc
pop
pop
sbb
fsubrs
mov
dec
inc
add
mov
imul
fcompl
add
dec
mov
push
push
and
daa
testl
inc
adc
ss
cmp
sbb
fbstp
pop
xchg
xchg
lods
out
insb
notl
pop
inc
rolb
lret
sbb
mov
je
sahf
lods
mov
aad
nop
pop
xor
push
or
inc
mov
pop
lds
repnz
jb
and
lret
jmp
iret
pop
and
xchg
xlat
rcl
aaa
add
jae
mov
push
out
stc
xchg
inc
popf
fbld
add
scas
mov
shr
cli
add
jmp
jp
out
das
push
dec
mov
xchg
mov
pop
add
mov
int3
gs
rcll
push
jge
cli
jecxz
xchg
cmpsb
cmpsb
jmp
loop
adc
popf
cli
ret
adc
sub
stos
xor
inc
lret
das
sbb
xchg
ds
shrl
dec
xor
mov
pop
mov
icebp
out
popf
jmp
inc
ja
push
push
cmp
and
out
mov
std
mov
cmp
lret
movsl
fildl
mov
scas
fidivl
in
dec
jae,pt
popf
and
push
and
fsubl
aaa
sub
rclb
fldt
movsl
aad
sbb
and
out
jl
and
outsb
jbe
and
fcoml
sbb
imul
subl
pop
cld
adc
jmp
dec
sbb
in
mov
outsl
mov
fwait
pop
js
xor
adc
inc
jmp
mov
and
dec
pop
or
and
add
add
jp
adc
je
jle
icebp
lock
and
mov
je,pt
in
jl
ffree
paddb
adc
mov
cmp
xchg
push
out
mov
inc
cmp
pop
mov
sub
jae
xchg
push
cmpsl
mov
mov
lret
ljmp
and
jecxz
or
call
shlb
dec
sbb
lahf
es
mov
xor
movb
js
push
sbb
or
js
test
pop
dec
popa
pop
les
mov
fisubrs
pop
jne
scas
imul
loopne
jno
add
xchg
and
in
das
cmp
lret
push
pop
inc
xor
xor
fildl
push
cmp
in
mov
jo
fdivl
mov
sub
mov
mov
push
push
dec
in
xchg
inc
aaa
jl
pop
call
mov
jne
xchg
sub
pop
sub
mov
sub
fstps
xchg
pop
jne
leave
add
test
bound
dec
add
out
add
fcmovnu
mov
enter
data16
or
cmp
test
cmc
je
jg
sbb
test
out
sbb
push
imul
mov
test
push
je
jnp,pt
lea
push
int3
test
arpl
das
or
cmp
movsl
andb
push
imul
jnp
pusha
xchg
add
mov
mov
cmpsb
sub
je
cwtl
mov
xchg
push
push
push
pop
sbb
add
xlat
dec
pushf
aas
lea
repz
mov
xor
dec
xor
mov
mov
imul
mov
pop
mov
pop
clc
push
fsubl
xor
js
jmp
or
movsb
jle
repz
and
jle
mov
mov
mov
or
icebp
mov
imul
iret
pushf
xchg
repnz
xchg
imull
lret
push
js
insb
nop
xchg
cmpsl
adc
xorb
push
into
imul
add
std
bound
ss
lods
jmp
lcall
das
leave
sub
lahf
je
inc
in
xchg
adc
adc
outsl
push
push
jl
out
test
adc
roll
jo
xor
dec
outsl
sub
jp
jge
add
cmp
clc
jo
clc
xchg
aas
cmp
push
mov
cmp
adc
sub
lock
mov
xor
pop
jno
inc
imul
insb
mov
fildl
sahf
sbb
lock
sub
frstor
jae
inc
cmpsl
xchg
call
iret
sub
dec
lea
test
fs
fwait
or
popf
lds
mov
dec
adc
imul
push
push
in
test
add
insl
or
cltd
mov
xor
dec
push
pop
push
aas
loopne
pop
sub
add
std
adc
dec
lcall
scas
sahf
sbbl
mov
add
pop
stos
sahf
outsl
xchg
xor
mov
ljmp
pop
mov
pop
mov
ret
leave
adc
or
imul
divb
add
lret
mov
subb
push
movsb
mov
mov
mov
test
bound
sub
cmp
jl
repnz
sahf
mov
bound
push
cmp
nop
mov
push
or
pop
pop
push
mov
icebp
int
popa
fistps
pop
push
mov
fcomp
jp
jne
pop
push
sbb
sub
clc
icebp
or
pushf
es
mov
adc
bound
pusha
pushf
iret
xor
cmp
jo
pop
xor
cmp
mov
add
lods
mov
inc
sub
fsubrp
push
mov
jns
xchg
and
xchg
pop
dec
mov
adc
mov
mov
mov
bound
jbe
dec
cmp
mov
je
pop
clc
fistps
or
dec
cmc
or
add
push
fs
testb
cmpsb
sti
sub
push
and
sub
aam
jmp
rorb
dec
pop
add
sub
ja
cmp
xor
cmp
imul
int3
or
xor
fwait
push
mov
movsb
fdiv
mov
xchg
test
xor
mov
dec
ja
inc
xchg
fadds
jl
push
repz
in
aad
jmp
enter
cmpsb
mov
cmp
mov
aam
jecxz
xor
mov
dec
outsb
mov
and
mov
push
cmp
aad
popf
mov
fcoms
mov
icebp
jbe
in
ljmp
mov
sbb
push
xchg
jnp
pop
and
fsubrs
jbe
sbb
pop
mov
xchg
cli
std
jae
outsl
adc
ja
cmp
fldcw
xor
scas
cmp
loop
arpl
stos
push
sarl
rorb
xchg
aam
mov
mov
jb
adc
in
cmp
jne
repz
cmp
pop
add
mov
pop
inc
sub
sbb
jl
or
rorl
jns
cmpl
mov
or
mov
repz
xchg
cli
mov
xchg
xor
pop
xchg
mov
in
xchg
std
pop
addr16
leave
fdivs
and
int
and
nop
jmp
mov
jnp
imul
jecxz
push
mov
setns
iret
xchg
or
mov
jle
add
leave
add
mov
fnstcw
or
and
leave
xchg
outsl
jecxz
dec
fnsave
cmp
cmp
outsb
inc
or
or
pop
pop
lea
shll
cmp
stc
faddl
add
and
sub
fmul
lret
or
xlat
addr16
dec
and
cmp
xchg
daa
and
je
and
pop
or
in
jbe
data16
cmpl
lahf
cmpsb
sbb
cmp
in
popf
lret
int
lcall
stc
popf
stc
inc
inc
or
xlat
mov
lea
mov
jne
sub
push
mov
jns
add
and
stos
hlt
je
dec
add
jle
adc
add
inc
loopne
test
ror
inc
insl
ljmp
mov
ret
mov
mov
aaa
packuswb
fwait
pop
lcall
inc
inc
roll
dec
dec
imul
loope
xor
mov
push
lods
push
cmp
cmp
out
cwtl
and
cmpsl
and
mov
mov
int3
cmp
xchg
aas
or
cmp
int
adc
mov
sbb
add
push
or
mov
int3
fiadds
out
xor
dec
and
ret
cmp
xchg
mov
movsl
jl
inc
push
call
xor
mov
cmp
sbb
scas
ss
clc
cmp
mov
push
cmp
pop
or
aaa
mov
mov
mov
xchg
sbb
jmp
into
sub
insl
push
pop
repnz
mov
and
dec
mov
or
jb
stos
aad
inc
jns
enter
or
fdiv
shll
ja
xor
mov
mov
cmp
lock
xor
or
sub
das
mov
pushf
cmp
imul
fidivrl
and
sub
dec
add
fsubl
cmp
pop
stos
popf
in
push
xchg
push
dec
lret
sbb
mov
test
repz
rcrw
dec
into
stc
cmp
daa
test
test
jnp
pop
mov
adc
mov
mov
mov
mov
dec
int3
push
jecxz
sub
cmp
mov
mov
add
dec
bound
mov
loop
fcmove
jbe
orb
jecxz
push
daa
push
adc
stos
popf
cld
adc
test
mov
push
cmp
mov
int3
subl
xor
int
adc
lock
and
pop
xor
int
sbbl
sti
mov
or
and
mov
jge
pop
cmp
sbb
cwtl
mov
jbe
lods
xlat
out
push
mov
cmp
inc
pop
jo
and
mov
or
out
cmp
std
dec
mov
hlt
scas
je
test
scas
push
sbb
fistpll
cwtl
pop
push
mov
loop
nop
ret
popa
stos
lods
adc
ss
push
or
jecxz
in
and
sub
dec
loop
je
xor
scas
repnz
cmp
rep
int3
test
lea
lods
or
pop
ds
mov
push
sub
push
sub
loopne
mov
cmpsl
xor
sub
inc
push
add
jae
sbb
repz
lret
jns
push
lahf
jbe
dec
mov
je
nop
dec
inc
call
mov
cmp
ror
xchg
dec
ja
or
out
call
fsubs
xchg
test
fs
push
or
sbb
xchg
mov
js
inc
jne
insb
fpatan
or
add
cld
ljmp
jb
cs
test
movsb
jecxz
cmp
insb
push
iret
inc
insl
lea
push
aam
cmp
shl
sti
xor
shrb
inc
andb
sub
adc
or
lret
jbe
push
xchg
stos
ret
in
test
lcall
xchg
mov
xor
mov
leave
sbb
das
cmp
lret
enter
enter
and
ret
in
cmc
out
sub
sti
loopne
scas
pop
mov
push
sbb
out
adc
push
jbe
imul
fstps
test
les
daa
in
mov
enter
or
test
scas
cmpsl
jmpw
bound
mov
loop
cmp
aas
aad
xchg
inc
addr16
add
mov
faddl
mov
jae
mov
shl
add
fstps
in
xchg
scas
lods
mov
dec
adc
int
sti
hlt
adcl
dec
orb
xchg
xchg
cmp
xchg
call
and
mov
and
fs
bound
and
or
inc
adc
out
dec
cmp
je
mov
add
sbb
inc
mov
push
ret
xor
lods
ss
xchg
ss
dec
enter
pushl
lds
xchg
xor
xchg
imull
dec
das
add
int
push
mov
ret
cmp
les
or
mov
sarb
pop
pop
jge
mov
push
or
mov
mov
jecxz
repnz
or
push
les
inc
adc
test
pop
push
xorb
jmp
xor
cld
sub
jno
mov
loopne
mov
mov
dec
sub
push
or
cmp
stos
dec
dec
divl
andnps
f2xm1
daa
jmp
out
iret
xchg
push
notb
jmp
popf
test
adc
loopne
leave
jne
mov
adc
sbb
out
lods
ja
fisttpl
push
lods
dec
and
and
and
shrl
pop
cs
mov
fistps
cmp
adc
insb
scas
mov
repz
push
add
push
out
adc
mov
insl
cmp
sub
mov
jge
push
sub
movsl
out
cmp
das
jb
pop
in
jo
mulb
pop
fwait
push
dec
test
out
loope
lret
dec
pop
mov
adc
rcr
jne
fisttps
pop
lock
sub
dec
movsb
scas
push
mov
xor
int
mov
inc
ss
lock
dec
sahf
xchg
std
pop
jmp
jp
mov
xchg
fwait
mov
ss
ret
xor
or
stos
sub
xlat
icebp
leave
imul
rolb
xchg
cmpsb
clc
inc
ja
movsl
in
jb
imul
inc
or
lcall
rcll
mov
leave
cld
pop
loope
push
pop
jno
adc
call
pop
sbb
mov
push
sbb
pop
cwtl
loopne
mov
and
push
testb
sbb
call
lret
cmp
push
push
ljmp
movd
mov
jecxz
pop
cwtl
jp
jo
mov
mov
mov
pop
addb
inc
daa
es
pop
repnz
xor
push
test
cmp
sub
sub
clc
lcall
fs
test
adc
jnp
ficoms
ja
and
rcrb
add
sahf
dec
xlat
lods
xor
fstl
aas
xor
cmp
minps
jmp
or
add
fucom
stc
inc
movl
popl
dec
mov
js
ret
int3
cmp
mov
dec
cmp
push
pop
push
icebp
call
dec
push
or
push
stc
out
jo
and
jmp
lods
push
push
sahf
jl
inc
out
add
stc
xor
jge
push
pop
mov
mov
lret
mov
xorb
in
int3
shr
daa
orl
sub
mov
lea
and
dec
cmc
pop
mov
lret
xlat
pmulhw
xchg
arpl
test
sub
jae
test
negl
inc
std
inc
push
cmc
mov
stc
cmp
pop
cld
mov
xor
pop
aad
add
sub
inc
cld
fstpl
and
xchg
fldenv
sbb
test
jmp
mov
sub
loopne
xchg
jecxz
mov
adcl
mov
mov
arpl
lcall
xchg
add
xor
das
lods
pop
fisubrs
and
imul
gs
sub
aam
rcrl
shrb
ret
daa
decl
push
mov
outsb
mov
stos
adc
scas
or
push
out
je
mov
xor
adc
or
xor
mov
int
icebp
enter
fstpt
cmp
int3
rcll
add
jp
fisubs
mov
lods
pop
mov
jbe
jmp
jg
dec
or
stc
xchg
mov
insl
in
jb
in
aad
pop
out
push
mov
shlb
js
push
jnp
push
mov
xchg
pushf
fiaddl
cli
andb
cmp
int3
std
xchg
sbb
pushf
push
pushf
adc
movsl
ds
push
test
mov
pop
inc
ret
push
orl
in
loopne
lods
xchg
cmc
popa
inc
shl
push
mov
loopne
cltd
stos
lret
mov
daa
std
repz
push
lods
popf
dec
insb
mov
enter
addl
or
dec
xor
sbb
inc
cmp
mov
inc
mov
xchg
pop
and
std
icebp
pop
and
dec
push
stc
dec
push
dec
subl
adc
addps
addr16
in
testb
call
pop
imull
mov
mov
sub
mov
mov
add
into
int
and
xchg
adc
mov
mov
cmp
xchg
mov
xchg
lea
push
cmp
mov
lock
orb
jbe
cld
aas
and
dec
test
xor
adc
jns
pop
xor
push
fnsave
and
flds
vsqrtpd
jmp
pop
jmp
ljmp
mov
dec
cmp
xor
stc
out
outsl
xchg
push
ffree
sti
push
push
cld
mov
call
mov
xchg
pop
sbb
mov
sbb
add
sub
mov
and
stos
sbb
lods
mov
aas
sub
outsl
sbb
cmc
scas
into
pusha
lahf
shlb
pop
xsaves
xchg
imul
in
cmp
cltd
shlb
lcall
fisttps
inc
xchg
cwtl
imul
sbb
cmpsl
jecxz
int
loopne
fmuls
ljmp
mov
jmp
or
ds
sahf
pusha
jmp
inc
xor
cltd
movsl
and
in
push
je
cmp
call
vpunpckhbw
mov
enter
inc
sahf
insl
cli
fistpll
pop
imul
cmc
jecxz
out
add
push
scas
mov
sbb
sub
xor
in
insb
shrb
ficompl
add
aas
lret
cmp
cmp
mov
gs
cmp
data16
xor
jmp
lahf
inc
jp
js
sub
leave
adc
dec
and
adc
lods
arpl
mov
in
dec
dec
repz
out
inc
jno
loope
adc
and
and
xchg
dec
shll
scas
int
aaa
mov
xor
addr16
push
lods
mov
pop
cmpsl
ret
jne
aam
lcall
fisubrs
hlt
jno
add
scas
sbb
std
xchg
in
test
push
push
push
mov
inc
xchg
cmpb
pushf
adc
push
mov
and
imul
jle
in
adc
add
push
cmpsb
jmp
ret
xchg
sbb
arpl
sub
or
notl
loope
fs
imul
pusha
in
mov
add
cmpsl
scas
mov
lret
cmpsb
sub
mov
aam
repnz
mov
lds
setl
call
jo
popf
push
shll
xchg
pushf
enter
sbb
adc
out
push
movsb
jl
xor
sahf
jl
dec
push
fdivrl
testl
sub
adc
test
xchg
loopne
das
push
fcomi
call
rolb
push
test
das
mov
sbb
inc
inc
pop
xor
sbb
sub
dec
jae
mov
sbb
int3
xor
dec
inc
call
into
aaa
leave
cmp
and
gs
sub
cmp
ss
xor
in
sbb
xor
and
inc
enter
inc
jne
rcll
jno
dec
push
xor
pop
and
pop
jns
cmp
stc
mov
cli
scas
xor
jl
sbb
mov
loop
mov
adc
jbe
movsb
ja
pop
push
sub
mov
loopne
jbe
ss
lret
mov
mov
out
push
fmulp
and
mov
push
daa
fmull
rcll
dec
lea
bound
xchg
xor
or
mov
out
loope
or
loope
cltd
les
mov
lret
ljmp
inc
ja
xchg
data16
mov
pop
aam
fucomp
adc
icebp
mov
mov
sbb
pusha
xchg
mov
dec
mov
out
lock
or
xor
in
xor
jno
ja
out
pop
sbb
xchg
xend
mov
jbe
jmp
dec
loopne
es
xchg
pop
xlat
lret
xlat
dec
add
loopne
dec
fbld
bound
lcall
jecxz
jmp
adc
add
out
and
mov
imulb
push
cwtl
lahf
stc
inc
fistps
iret
inc
sti
push
leave
fistpll
pop
mov
rorl
cmpsb
hlt
or
or
mov
add
lahf
or
adc
mov
cmpsb
sub
ljmp
jecxz
jno
xchg
sbb
cmp
inc
js
sbb
ja
inc
repnz
clc
adc
addb
dec
dec
insl
fdivl
push
xorl
ja
or
push
ds
enter
mov
inc
xlat
xor
jbe
lret
add
data16
dec
scas
outsb
loope
sbb
cs
cmpl
sti
cltd
in
pop
cwtl
xor
orl
jp
das
or
mov
mov
cmp
das
cli
sbb
mov
negb
or
pop
cmp
mov
scas
lock
ljmp
xchg
mov
fwait
std
mov
dec
inc
popf
pushf
movsl
outsb
jle
ret
xchg
lods
popa
cmp
cmp
test
rorl
inc
adc
ret
sarl
cmp
mov
frstor
mov
sub
into
ror
mov
xor
xchg
jp
cs
lea
and
aas
jge
arpl
out
fisubl
decb
mov
xor
rclb
pop
add
xchg
loope
push
lods
sub
pop
stos
mov
in
jl
add
cs
pop
mov
loopne
test
icebp
fildl
or
cvtpi2ps
flds
out
push
or
int3
loopne
push
cmp
lret
test
dec
pusha
or
or
push
inc
inc
cmp
sbb
push
lcall
or
or
sbb
mov
push
inc
lods
dec
ljmp
jno
lret
mov
pop
xchg
mov
xchg
pop
test
bound
fs
pop
rcrb
mov
outsl
jmp
pop
mov
data16
dec
pusha
pop
jmp
lret
or
xchg
sub
jae
pop
stc
dec
icebp
je
addr16
shrb
pop
movsl
push
ret
inc
insl
pop
into
mov
jmp
pop
dec
ds
insb
shrl
sahf
jg
ds
xchg
cmp
shll
adc
in
push
dec
mov
mov
shlb
and
push
sbb
cs
xchg
push
sahf
ss
add
inc
lods
in
pop
jae
cli
and
dec
testb
lea
mov
fisubl
clc
mov
aad
out
and
js
push
xor
movsb
shll
data16
movsb
dec
xorb
pop
xchg
cmp
xlat
mov
cmp
imul
sbb
subb
add
fcompl
pop
xlat
xchg
into
frstor
andl
lods
jnp
test
bound
pop
sahf
jge
pop
mov
jecxz
adcl
push
repnz
xchg
shlb
shll
pop
lods
add
lret
lea
sbb
adc
iret
outsl
mov
mov
cmpsl
mov
dec
cmpb
rcll
es
pop
ss
push
cmp
call
data16
std
lods
inc
repnz
sbb
dec
je
fs
dec
aas
inc
pop
sbb
insl
loopne
pop
fisubrl
inc
idivb
pusha
push
int
test
or
ljmp
inc
clc
sub
mov
ss
or
fsub
inc
mov
or
xor
movb
std
aas
lcall
les
mov
xchg
test
push
or
stos
enter
xor
cmp
mov
and
pushf
inc
mov
mov
lcall
test
mov
and
ja
push
xchg
mov
js
add
lods
mov
xchg
cmp
fwait
inc
mov
add
add
push
jg
sbb
bound
inc
xor
das
cmpsb
xlat
pop
cmc
dec
lea
mov
mov
mov
or
push
fisttpll
das
imul
cmpb
gs
mov
imul
out
cmc
es
sbb
pop
in
mov
hlt
popf
mov
pop
fucomi
repz
push
icebp
xchg
sub
mov
test
xor
out
inc
rorb
adc
add
inc
xlat
mov
pop
xchg
xchg
in
mov
jecxz
outsl
mov
sub
out
fldl
repnz
push
stos
jge
out
mov
fstpl
pop
stc
int
mov
pop
xchg
sbb
sbb
xchg
mov
inc
negb
test
xchg
add
lahf
dec
inc
cli
subb
xchg
mov
dec
int3
xchg
nop
add
or
or
dec
mov
jnp
or
cld
add
push
mov
repnz
or
cmp
sbb
pop
add
ds
sub
daa
xor
cltd
xchg
sarb
pop
ds
cs
xchg
pusha
or
mov
mov
lods
mov
into
aaa
lods
cwtl
jno
dec
movsb
xchg
fsts
sahf
pop
inc
fimull
mov
jns
jmp
mov
xchg
adc
push
test
subl
mov
repnz
lods
pop
add
push
sarb
mov
daa
repnz
mov
ret
scas
adc
mov
fcompl
xchg
mov
push
repz
dec
cli
insl
xchg
call
xor
pop
adc
inc
sbb
in
mov
pop
adc
inc
outsb
pop
push
cmp
cmp
inc
incl
dec
lods
stos
stos
push
jmp
push
cmpb
sub
xchg
lret
cmp
sbb
cmp
push
xchg
mov
fcmovu
addr16
mov
push
hlt
je
adc
pop
dec
dec
add
in
aaa
rorl
testb
repnz
loopne
fldt
shr
rcll
xor
xchg
mov
add
cli
inc
xor
jns
xor
cs
cmp
dec
dec
popa
xchg
ds
jo
arpl
fdivrs
push
lock
loope
idivb
pop
loop
dec
bound
and
loopne
jge
cmp
rcrl
push
loope
jmp
and
into
popf
iret
adc
stos
rol
addr16
mov
dec
pop
cld
pop
test
xchg
and
cwtl
adc
loope
and
and
adc
adc
xchg
movsb
lods
cmp
add
out
orb
dec
shr
in
xchg
mov
mov
fistps
repnz
mov
jnp
inc
loopne,pt
iret
scas
pop
into
xor
ret
movsb
scas
ret
mov
pop
mov
nop
or
iret
jmp
dec
imul
jb
daa
icebp
into
roll
jae
and
xor
sbb
and
push
inc
je
mov
mov
into
iret
std
mov
movsb
mov
or
ror
je
xor
cmp
lea
inc
jge
jl
out
cmp
cmp
fbstp
repz
loop
fisubl
pop
mov
jno
cmpsb
mov
mov
test
aam
or
dec
or
and
pop
cmc
sbb
jg
add
lods
scas
cld
iret
cwtl
sbbb
push
rolb
xor
rcrb
pop
sub
stc
lds
stos
icebp
ljmp
mov
sub
push
xor
dec
fistps
jns
xor
lds
pop
lahf
lret
and
aas
mov
fs
es
dec
arpl
lea
sub
xchg
je
xor
add
jl
inc
iret
push
enter
push
jp
sbb
leave
cmp
dec
out
addr16
sub
aad
add
adc
xchg
je
repz
js
dec
aaa
lds
addr16
inc
dec
fmuls
cld
xchg
sub
or
cmc
pushf
jo
xchg
in
dec
mov
jbe
test
and
pop
mov
inc
mov
scas
mov
inc
adc
jl
outsl
push
xchg
mov
ficomps
xchg
mov
jno
aad
xchg
subl
add
adc
pop
movsl
fdivl
dec
inc
jnp
sub
out
cld
mov
dec
imul
cmpsl
lret
or
jp
push
add
daa
in
push
fwait
add
xchg
xor
lods
adc
jmp
sbb
or
add
int3
inc
into
mov
sub
testl
pop
sbb
insl
stc
pop
xchg
lahf
lock
push
dec
arpl
adc
rclb
test
fwait
in
int3
in
je
imul
loopne
xor
out
movsl
je
shl
xchg
int
xchg
sub
lds
aad
out
popf
and
mov
dec
les
xor
insl
shlb
aas
lods
out
fcoml
mov
jb,pn
jle
dec
into
pop
or
push
pop
jae
push
xchg
adc
test
sahf
sub
pushf
xchg
inc
or
add
xor
stc
out
fdivrl
jmp
enter
and
int3
add
mov
pop
aas
lds
ret
push
jle
mov
mov
mov
insb
push
dec
mov
mov
pop
out
xor
popa
mov
or
lods
pop
adcb
cmp
add
scas
sub
pop
xor
mov
out
sbb
call
adc
mov
push
sub
movsl
mov
inc
addr16
cmpsl
mov
std
xor
mov
jg
outsl
or
mov
add
jg
push
flds
jae
hlt
fs
aaa
xchg
xor
aam
sbbl
or
xchg
add
dec
ret
pop
sbb
int
push
call
adc
or
loopne
inc
xchg
ret
mov
xor
mov
xchg
inc
sbb
into
out
inc
xchg
adcl
ret
repnz
int3
pop
or
fcomi
out
inc
jae
insl
lock
inc
mov
lahf
and
sub
push
stc
mov
mov
imul
and
lods
mov
inc
and
sti
pushf
push
fdivl
jno
cmp
mov
mov
jmp
push
sbb
lret
pop
gs
loope
bound
push
inc
test
xor
into
xor
and
idivl
addb
dec
jge
cmp
mov
mov
jne
pop
jbe
sahf
in
aas
push
mov
adc
sbb
cwtl
or
gs
lods
leave
xor
and
addb
lods
icebp
fidivs
push
push
mov
xchg
mov
inc
jo
mov
jnp
pop
test
iret
and
ret
mov
jl
movsl
js
pop
mov
push
add
lods
add
fistps
jl
stos
xor
jp
sub
xchg
adc
outsb
dec
xchg
sub
mov
mov
pop
mov
leave
ljmp
inc
in
xor
in
push
std
xchg
sub
imul
data16
xchg
sbb
push
inc
inc
sbb
sub
inc
iret
roll
rorl
cmc
sub
repnz
ret
inc
cmp
out
jecxz
sbb
fsubrp
jle
int3
jp
sbb
xchg
scas
cmp
subl
repnz
repnz
push
in
repnz
daa
pop
test
sub
cmp
daa
and
gs
scas
add
add
sub
lret
add
iret
cmp
pop
add
cmp
cs
mov
stc
testl
push
cltd
xor
clc
sbb
nop
xor
cmpsb
pop
inc
lahf
negl
fnstsw
popf
lret
iret
popl
adc
into
movsl
pop
ror
cmp
int
push
popf
push
imul
clc
inc
jge
testb
xchg
or
sub
loop
xor
dec
sub
cmpsl
push
fcmove
ss
je
inc
xor
dec
cmpsb
cltd
or
add
fimull
leave
popw
cmpsb
std
or
dec
xor
mulb
je
aas
mov
mov
clc
push
mov
sarb
stc
fsubl
inc
pop
add
push
mov
sub
jo
jae
xor
jo
dec
mov
mov
sub
orb
pop
push
loope
orl
xchg
xchg
scas
mov
push
ja
cli
or
mov
repnz
out
unpcklps
stc
sub
rorb
sar
inc
stc
shll
leave
cs
jg
jb
js
push
popf
hlt
bound
clc
or
cmp
xchg
pop
pop
std
adc
jle
popf
sub
fnstsw
int
inc
ja
sbb
lock
dec
push
nop
add
aas
lret
imul
jb
sub
inc
repnz
sub
enter
sbbb
stos
inc
sub
mov
add
popf
dec
xor
add
fsubrs
mov
mov
inc
fbld
in
jne
add
or
lahf
pop
sbb
rorb
pop
inc
xchg
xchg
sbb
pop
in
xchg
dec
js
or
jnp
out
mov
jne
into
xchg
inc
repz
lods
inc
cld
fimull
ljmp
mov
fs
mov
ret
sbb
hlt
or
cld
rorl
push
adc
mov
out
pop
lret
jae
fbstp
or
mov
sbb
mov
fwait
sbb
int3
push
xor
shrl
enter
xchg
push
xchg
das
cmp
pushw
dec
cmp
mov
fcmovu
xor
outsb
fwait
push
in
lods
std
pop
dec
stc
cltd
lahf
xor
fwait
test
icebp
add
hlt
jbe
cmpsl
loop
pop
push
aas
movsb
mov
xchg
inc
add
and
fs
repz
lock
sub
push
adc
je
mov
xchg
and
aaa
stc
push
adc
pop
inc
or
test
das
int
dec
mov
or
jge
ljmp
sbb
sbb
out
mov
pop
xchg
sbbl
hlt
jb
fsubs
and
add
and
pop
fs
sbb
popa
mov
lods
add
lcall
xlat
hlt
sarb
lahf
push
jo
mov
sub
out
dec
icebp
lret
sub
xlat
push
mov
mov
scas
pop
in
stos
fistps
jae
lret
scas
xor
xor
ds
sahf
sbb
pop
mov
into
jp
xor
incb
or
dec
mov
or
sub
mov
jmp
mov
push
or
sbb
outsb
or
mov
das
sub
rcrl
leave
push
fsubrl
scas
push
and
imul
cmp
mov
fidivrs
xchg
mov
and
fbstp
xchg
testb
xchg
or
movsb
sub
jle
sub
data16
das
or
xchg
rcll
movsl
dec
fsubrl
push
xlat
loop
xlat
in
xor
ret
pop
inc
pop
inc
arpl
add
test
mov
dec
adc
es
dec
or
mov
insb
mov
dec
fdivr
mov
sub
jmp
add
mov
and
jne
movsl
mov
into
jl
mov
and
mov
enter
sbb
jae
gs
sub
stc
ficomps
jne
lcall
inc
rcll
repz
lods
mov
adc
sarb
out
stos
pop
out
cmp
adc
jo
aam
and
and
inc
out
push
test
stos
int
or
popf
jmp
jp
inc
into
iret
mov
sbb
sub
mov
jbe
mov
roll
cwtl
mov
jnp
jo
jbe
mov
inc
in
mov
push
cmpsb
imul
aad
aas
data16
lods
xchg
xchg
cmp
jmp
fisubs
and
pop
xor
cld
in
test
push
loopne
ds
push
add
mov
popf
push
and
push
adc
pop
xlat
sahf
leave
jbe
xchg
dec
outsl
cli
test
aad
pop
push
das
add
cwtl
mov
testb
and
fsubrl
push
popf
push
loope
in
into
xchg
pushf
xor
in
dec
mov
pop
adcl
sub
cmp
stos
cmp
mov
mov
jno
mov
sbb
cmp
in
mov
adc
shll
aaa
fadds
aas
aas
mov
push
outsl
push
pop
mul
iret
sbb
dec
push
dec
sub
ja
cmp
loopne
inc
inc
push
add
mov
pushf
lahf
cmpsb
xchg
sbb
fidivl
and
xor
scas
and
lcall
fistpll
popf
fldcw
dec
jl
and
fisttpll
xchg
repz
push
add
jle
xchg
repz
inc
gs
subl
dec
sub
out
lahf
lahf
icebp
pop
sbb
popa
dec
cmp
fs
cmpsl
xlat
xchg
insb
or
dec
out
icebp
andl
xor
mov
fldenv
add
ret
fwait
ljmp
lea
imul
or
iret
icebp
mov
test
insb
sbb
insl
mov
dec
xchg
aaa
fwait
pusha
sbb
xchg
insl
xchg
fiaddl
addr16
add
flds
dec
adc
push
call
and
sub
xchg
push
loopne
cwtl
movsb
mov
ja
mov
sub
pop
movsl
xor
ret
test
daa
ja
fistpll
mov
xchg
clc
fstps
sub
ret
cmp
add
mov
pop
xor
cmp
movsb
sub
dec
sbb
jae
and
in
addb
lods
cmp
mov
out
jg
leave
aad
mov
sbb
incl
sti
inc
cmc
dec
enter
out
imul
fidivs
jae
sbb
loop
test
and
ret
pop
fcomps
sbb
ss
mov
pushf
std
lea
mov
mov
jmp
aas
add
sub
lods
lret
jne
es
adc
push
add
mov
gs
rclb
mov
dec
daa
dec
jmp
dec
sbb
hlt
add
jecxz
mov
repz
dec
mov
mov
shlb
adc
cmpl
subb
int3
in
in
or
and
push
les
lahf
and
push
mov
jp
lods
pushf
adc
inc
push
jae
mov
into
ret
dec
cwtl
stos
xor
mov
cld
mov
pop
mov
hlt
imul
in
inc
mov
js
xorl
mov
mov
lock
icebp
adcl
cmpsl
cmp
imul
sub
jl
mov
mov
xchg
mov
clc
pop
jb
cmp
call
pop
sub
icebp
inc
mov
jo
push
and
gs
push
push
out
xchg
xor
clc
fmul
xchg
mov
maxps
jo
adc
enter
lock
pop
mov
notl
cmpsb
filds
and
hlt
lods
lret
bound
lret
out
jbe
xlat
jo
inc
or
repz
lock
sbb
mul
popa
jnp
jecxz
popf
mov
xchg
push
or
or
pop
and
data16
xchg
cmp
pop
pusha
fwait
pop
scas
lret
xor
xor
jg
push
aam
xlat
xchg
loopne
or
sub
push
outsl
lock
xorl
dec
and
pusha
inc
jle
jg
outsb
loop
dec
or
inc
push
outsl
adc
addb
aas
inc
popf
out
pop
dec
test
ss
std
jl
adc
sub
inc
scas
and
imul
jae
test
sub
push
imul
in
sbb
inc
stc
cmpsb
in
and
lock
sub
aam
popf
call
sub
pop
sbb
dec
fistpl
push
lahf
add
sub
sahf
sub
into
push
dec
imul
insl
jns
repnz
mov
mov
pop
icebp
push
or
add
inc
mov
mov
fcompl
inc
insb
mov
cmp
hlt
ljmp
aas
lret
imul
cmp
fisubrs
pop
xor
push
in
push
add
adcb
nop
outsb
arpl
and
leave
int3
fisubrl
cmc
int3
outsb
jmp
dec
mul
or
push
mov
or
mov
sub
sub
and
and
lods
cmp
fnsave
jns
mov
cltd
repnz
mov
orb
shr
hlt
sub
idiv
aam
je
push
aaa
jp
xorl
decl
adc
xchg
movsb
push
loope
loope
jns
xchg
call
push
or
insl
jno
jmp
mov
popa
lods
xchg
dec
insb
mov
add
shlb
dec
cmp
add
stos
pop
movsl
lds
push
lret
pop
add
mov
movsb
lock
clc
jbe
fs
popa
jg
dec
dec
jle
cld
faddl
jns
icebp
and
dec
into
push
and
into
mov
jecxz
popf
push
dec
dec
daa
movsb
aaa
mov
inc
fldenv
fwait
xor
xchg
pop
pushf
cli
stos
jb
mov
xchg
jns
pop
or
mov
outsl
or
stc
sahf
mov
in
cld
outsl
inc
mov
and
fldenv
sbb
mov
cmpsb
mov
xor
mov
shl
and
mov
jmp
repnz
dec
clc
pop
loopne
out
dec
in
shll
add
fwait
int3
addb
lock
mov
inc
inc
ljmp
mov
ret
jae
jno
lcall
mov
lret
enter
and
jmp
lds
idiv
rorb
and
fistps
inc
xchg
fidivrl
mov
das
adc
xor
lcall
cmp
push
roll
mov
jne
push
jg
ljmp
jno
stc
call
xor
inc
jbe
fcom
sub
sahf
scas
bound
inc
mov
mov
dec
and
loop
sub
mov
cmp
popa
mov
insl
das
mov
ret
dec
cmp
sbb
rclb
and
xor
inc
dec
xchg
imull
xor
pop
ds
pop
jnp
aam
int
adc
sub
mov
mov
pop
fadds
leave
and
fst
or
push
cmpsl
sbb
fnstenv
push
mov
int3
outsb
pop
mov
stos
lea
push
cmc
mov
dec
cwtl
ss
ret
dec
test
pop
iret
pusha
jl
gs
mov
sahf
movsl
das
lods
mov
testb
cld
jge
jno
dec
jl
ret
cmp
push
and
imul
xchg
fists
adc
push
jp
jbe
gs
jns
rcr
jno
addr16
and
and
aas
pushf
sbb
les
sub
out
inc
pushf
loope
and
xor
dec
cmp
arpl
test
sub
out
dec
xor
jle
push
movsl
push
daa
ja
xchg
ret
icebp
js
into
dec
mov
sti
adc
push
lea
pop
enter
jmp
nop
aam
cmp
ds
xchg
or
inc
dec
xchg
movsb
ret
and
mov
mov
pop
js
js
outsb
mov
adc
and
cmp
adc
sbb
dec
push
cmpsb
repnz
push
cwtl
mov
cltd
test
and
je
dec
push
add
mov
dec
aaa
fsubs
aad
push
mov
xchg
outsl
fnstsw
inc
adc
xchg
shll
divb
icebp
jmp
jo
fldenv
push
pop
nop
mov
in
lock
xor
pop
sub
pop
or
das
cwtl
mov
mov
js
jnp
out
lahf
xchg
cmp
testb
fsts
lcall
dec
inc
inc
add
add
out
int
test
and
js,pt
push
in
imul
sbb
ss
gs
fimuls
pop
bound
es
dec
popl
xchg
inc
aas
mov
mov
popw
gs
lcall
mov
es
shlb
fldenv
sbb
imul
mov
mov
pop
cmpsl
sub
addl
mov
in
fbstp
and
lods
out
mov
xor
mov
std
enter
mov
pop
dec
aad
and
xchg
ret
pop
pop
clc
imul
cmp
repz
mov
and
jmp
sti
cmc
add
loopne
adc
and
negl
adc
push
dec
inc
movsb
pop
sub
and
sbb
rorl
and
xor
jb
push
jns
push
sub
out
cmp
subb
mov
xchg
xchg
imul
repz
push
jecxz
cmp
shr
les
loop
cmpsw
inc
pop
imul
addr16
or
push
adc
sub
rcrl
push
cwtl
cmp
shrl
les
fsubrs
ds
repnz
xor
push
mov
outsl
or
inc
adc
pop
pop
scas
lock
push
outsb
clc
aam
lret
push
push
dec
in
imul
iret
out
dec
daa
retw
xchg
xchg
cmp
test
leave
outsl
cld
lahf
mov
mov
mov
xchg
or
or
sub
jge
mov
and
sub
push
xchg
mov
jmp
nop
sbb
cli
fcomi
popf
scas
jno
mov
shlb
cmp
push
adc
cmp
iret
or
jne
sub
lea
test
sarb
jp
aad
test
inc
call
sub
pop
sbb
sub
nop
andl
stc
and
dec
cmpsb
add
sbb
mov
cmp
jnp
iret
add
dec
xchg
sub
xchg
movl
or
add
mov
outsb
shlb
mov
ret
jmp
std
pop
or
hlt
mov
test
jg
adc
lods
and
imul
dec
lret
cmpsb
fsubl
insl
mov
xchg
cli
les
or
jl
dec
add
inc
test
push
stos
xchg
cmp
sub
aaa
stos
lods
push
shll
test
mov
pop
or
push
jb
jmp
sub
nop
fldt
daa
aaa
mov
mov
sub
outsb
sbb
inc
lret
cmp
out
and
data16
mov
or
sbb
hlt
and
pop
ljmp
rolb
cmpsb
pop
mov
lds
push
ss
fcoms
ds
sarl
jae
into
dec
insl
push
mov
pusha
imul
pop
cmp
push
and
scas
pop
pop
arpl
adc
test
dec
sbb
aas
movsb
inc
aaa
pop
dec
inc
in
xor
outsb
cs
dec
jnp
and
inc
pop
test
cmp
or
push
jmp
add
mov
aad
imulb
test
mov
sub
sbb
imul
cmpsl
fstl
or
repz
js
mov
leave
inc
jp
ja
out
sti
jl
lahf
sbb
inc
xor
cmpsl
mov
cltd
cmpsb
int
mov
pop
mov
xchg
mov
dec
mov
jne
call
adc
icebp
xchg
mov
lret
idiv
sbb
mov
imul
cmp
or
movb
adc
inc
lret
xchg
enter
lahf
push
ss
iret
loope
fimuls
stos
pusha
in
xchg
and
data16
lock
into
mov
sbb
sub
inc
mov
xlat
mov
push
mov
pop
aam
jp
inc
fwait
mov
int3
inc
add
roll
push
inc
inc
ret
mov
add
pop
jns
jl
incb
cmp
add
xchg
ud0
fwait
jbe
data16
ret
fstpl
mov
sbb
mov
insb
or
lds
or
inc
bswap
sub
stc
loop
cmpsb
or
adc
cmp
pop
jp
lds
or
add
and
xor
jle
scas
test
push
dec
push
sbb
into
popa
outsl
adc
add
cmpsb
jo
in
dec
jp
bound
xchg
in
dec
daa
push
out
xchg
scas
xor
mov
push
sbb
dec
xchg
add
pop
mov
pop
sub
sbbl
or
sub
mov
call
shl
xor
pop
div
push
push
mov
hlt
cmp
adc
mov
inc
sbb
xor
ss
cmpsb
pop
aam
std
inc
add
jns
mov
out
lods
das
pop
movzbl
int3
cmpl
adc
xor
xchg
mov
jns
test
xchg
cmpsl
xchg
inc
inc
cmc
std
inc
push
adc
lods
popf
fadd
into
mov
xchg
hlt
sbb
loop
dec
mov
mov
sbb
and
push
cmc
js
add
pushf
inc
mov
push
jno
leave
or
call
push
js
cmp
fisubrl
insl
xchg
pop
or
fstpt
call
xchg
ficoms
xor
scas
mov
lret
fnstsw
lock
mov
mov
pop
push
and
cmp
sbb
sub
jl
inc
mov
xor
gs
cmp
sbb
mov
movl
dec
inc
sbb
into
cli
shl
pop
xchg
gs
aas
in
je
frstor
inc
pop
sbb
jns
mov
pop
mov
jmp
push
mov
push
pop
iret
nop
enter
cli
jo
sbb
mov
push
push
jno
rcll
xor
lock
test
mov
js
push
fcmovb
xchg
sarb
pop
or
jb
and
daa
jmp
ja
sbb
inc
ficoms
push
add
jp
push
andb
lret
lock
outsb
add
mov
out
je
dec
fucompp
sbb
arpl
add
or
ficoml
insl
scas
sti
adc
jns
sub
mov
rol
mov
fwait
pusha
adcb
adc
bswap
pop
sbb
xchg
or
mov
xor
lock
into
lock
inc
iret
fimuls
inc
or
xchg
fdivp
enter
mov
out
xchg
xchg
fstpt
sub
dec
inc
xchg
bound
xor
das
mov
in
xor
mov
adc
outsl
out
iret
pop
pushf
rcll
lods
push
inc
jbe
mov
test
mov
jo
pop
sub
bound
xchg
loopne
leave
push
sbb
lods
es
or
dec
mov
gs
mov
out
lret
leave
sub
push
sub
jmp
jbe
xor
pop
pop
sbb
call
test
in
int
or
add
loop
movsb
daa
mov
and
cli
dec
pop
jbe
jns
dec
fnsave
in
mov
sub
call
and
or
iret
jmp
pusha
orl
lahf
adc
and
ds
loop
in
test
sti
fsubrl
inc
test
popf
mov
cltd
xchg
leave
mov
mov
xchg
repnz
repz
rcrb
mov
mov
add
and
les
jb
mov
sub
xlat
int
push
loopne
test
fidivrl
leave
aas
jp
mov
mov
xchg
xor
mov
lods
push
and
shlb
xor
xchg
mov
nop
jo
jmp
imul
enter
jnp
sbb
push
dec
adc
into
ror
push
cwtl
insb
xor
sub
lcall
ret
mov
push
or
lds
pop
popa
sbb
popf
or
add
loopne
ret
jns
fisttpl
addr16
nop
bound
pop
jb
cmp
add
pop
into
aas
sbb
adc
adc
pop
xchg
iret
movsl
test
movsl
pop
loopne
mov
pusha
mov
dec
pop
sahf
inc
sbb
aas
mov
les
jae
cmp
inc
jge
in
push
cmp
jo
pop
jge
xorl
lret
fwait
jno
icebp
lock
ss
ljmp
or
mov
sbb
cmpl
pop
or
xchg
cwtl
adc
popf
push
daa
pushf
xor
ret
mov
pop
jo
insb
mov
xor
xchg
std
shll
jmp
dec
pop
push
and
or
ret
cltd
mov
push
and
inc
xor
aad
sbb
cmp
xor
xchg
inc
fs
inc
loope
ds
nop
outsb
call
icebp
pop
cli
cs
fstl
mov
rcrb
or
fistpl
ds
gs
push
movsl
push
jp
push
outsb
cmp
fildll
xchg
mov
cmp
movsl
insb
mov
fidivl
pop
mov
in
mov
repz
out
push
call
sahf
arpl
fidivs
pinsrw
sti
lods
test
add
ficompl
xchg
mov
sub
out
jmp
insl
xchg
xor
mov
aas
into
imul
add
nop
addr16
test
cmpsl
aas
push
outsl
enter
jnp
push
gs
test
push
add
add
inc
nop
pop
xor
int3
sub
add
test
cmpsl
sbb
mov
inc
add
daa
xchg
mov
stos
mov
add
imul
push
pop
jmp
cmc
adc
jne
call
mov
lods
pop
arpl
inc
fxtract
imul
aam
and
jbe
adc
ficoms
cmp
cmp
cmpsb
cwtl
inc
repnz
cmp
sub
pop
jl
in
pop
jb
jnp
pop
mov
sbb
sub
jnp
loop
inc
hlt
in
mov
adc
jbe
jg
adc
daa
lret
imul
loope
fwait
pop
stos
leave
sbb
sbb
xlat
subl
outsb
mov
xor
pop
and
imul
sbb
mov
pop
push
mov
dec
mov
movsl
data16
movsl
movsl
add
cld
pushl
loopne
jne
loopne
pop
fadd
popa
hlt
adc
cmp
insl
mov
in
lret
sub
ja
scas
aam
mov
mov
or
lods
cmp
xlat
sbb
fsub
cmp
leave
imul
sbb
xchg
adcl
not
insl
out
xchg
xchg
in
les
add
or
xlat
bound
out
pushf
jp
cmc
filds
mov
popf
add
imulb
movsb
stc
or
push
xchg
inc
xchg
mov
xchg
aad
ljmp
fsubrp
decl
testb
bound
ss
out
movsl
and
and
inc
and
xorl
jb
mov
insl
sub
lds
repnz
out
sahf
test
cmc
sarb
mov
mov
fxch
lds
arpl
pusha
pop
fstl
data16
aad
sbb
mov
pushl
dec
cmp
pop
jae
inc
add
mov
jnp
adc
jmp
mov
push
or
dec
adc
pop
loope
lds
cmp
enter
mov
out
mov
and
mov
dec
mov
mov
mov
and
cltd
movl
mov
mov
push
xor
cmp
loop
mov
inc
mov
hlt
sbb
fstpt
xchg
incl
in
icebp
lcall
pop
aaa
sub
cmpsl
icebp
or
ljmp
js
or
sbb
or
cmpl
xchg
lret
stos
push
jl
andl
aam
iret
ja
jnp
mov
lret
inc
dec
or
lret
bound
pop
cmp
roll
pop
loope
call
cmp
ret
or
pop
push
mov
xchg
ja
mov
cmc
movb
add
lret
jecxz
or
xchg
sti
add
xchg
jno
popa
cld
inc
cmp
loop
jbe
lahf
int
mov
mov
scas
fisubl
in
inc
and
les
test
sbbl
push
sbb
xchg
mov
js
cmc
and
mov
pop
or
add
int3
lds
adc
xchg
mov
movsb
cmp
push
inc
lock
pop
xchg
in
jnp
addl
in
and
popa
js
lcall
mov
adc
xchg
fsubs
lods
pop
mov
loopne
sub
mov
pop
enter
push
cmp
mov
mov
sub
cmp
mov
and
test
add
and
or
mov
mov
mov
pop
iret
lock
xchg
ret
cltd
shrl
pushf
cli
add
mov
fmul
movsl
push
cmpsb
cmp
mov
or
sub
out
add
sbb
add
inc
mov
pop
mov
jnp
or
inc
cmp
sbb
popf
jbe
test
sbb
data16
adcb
jnp
and
push
fsub
adc
mov
mov
es
jg
lea
out
sub
mov
jae
xor
aaa
sbbl
lret
push
ret
mov
mov
sbb
cltd
adc
dec
inc
popa
imul
mov
loopne
cs
fisubrl
mov
pop
jns
cld
mov
jnp
outsb
cmp
mov
popf
add
fwait
in
out
xor
mov
xor
xor
inc
push
popa
cmc
mov
cmc
pop
or
xlat
js
dec
inc
lock
adc
lahf
scas
adc
mov
hlt
mov
movsb
push
inc
and
daa
mov
dec
sub
add
push
push
lds
shll
mov
xor
mov
inc
pop
in
push
dec
addr16
push
dec
xor
idivl
push
push
das
lods
xchg
and
gs
sbb
sbb
testl
fldt
inc
pop
inc
data16
pushf
push
inc
push
mov
mov
adc
mov
xchg
fwait
sbbl
fistps
aaa
xor
push
xchg
sahf
sub
sarl
xchg
xor
loop
clc
xor
repnz
test
mov
mov
cli
ret
popf
mov
mov
cld
das
dec
fisubrl
mov
test
lahf
decb
hlt
orl
mov
push
mov
sbb
hlt
mul
and
xchg
cld
mov
es
orl
pop
or
jno
addr16
inc
or
fldl
das
or
jmp
cmp
movsb
out
inc
data16
fs
scas
insl
out
nop
mov
mov
xchg
mov
rcrb
aas
jne
pop
out
xor
ljmp
call
xchg
test
inc
inc
iret
pop
or
imul
addr16
cmp
dec
and
fs
movsb
idivl
repz
outsb
jge
and
call
mull
cmp
ret
sbb
insb
mov
push
xchg
push
mov
aaa
inc
lds
push
mov
lret
push
xchg
fnsave
dec
or
pusha
and
dec
dec
xor
imul
push
adc
outsl
sarl
dec
xor
xchg
dec
push
adc
sbb
adc
gs
xchg
push
rsqrtps
stc
addb
test
pop
inc
jo
inc
push
pop
and
into
and
mov
cmp
pusha
addl
push
xor
cmp
sbb
sbb
fcmovnb
sub
sub
adc
pushf
inc
stos
lret
sbb
xchg
mov
cmpsb
es
fcmovbe
addr16
movsl
pop
movsl
push
out
mov
into
lret
pop
adc
or
cltd
add
pop
inc
xchg
push
push
mov
repnz
rclb
rcrb
adc
loopne
jne
jae
fdivr
movsl
push
and
enter
jle
jp
jp
dec
pop
js
arpl
shlb
dec
push
and
std
dec
out
pop
mov
adc
mov
rol
or
movsl
jns
adc
sbb
pop
dec
roll
test
xor
fwait
push
cli
insl
in
adc
push
mov
sub
jno
nop
cld
jle
or
and
cmp
icebp
jo
fisttpl
flds
aas
jae
call
xchg
in
jecxz
aam
inc
push
add
push
movsl
cld
ja
mov
pop
pop
mov
out
dec
es
pusha
out
mov
int3
pop
xor
out
sbb
dec
lcall
push
mov
add
int
mov
repz
fmuls
movsl
or
lahf
out
mov
in
mov
movsl
fidivrl
test
lret
mov
inc
scas
lds
xorb
xchg
push
fs
add
stos
sar
aam
sti
adc
push
repnz
movsb
je
fbstp
testl
push
sub
and
dec
int
fsub
arpl
mov
pop
sub
int3
or
jae
mov
pop
lds
popf
pusha
push
sahf
xor
xchg
cmc
jnp
xorb
mov
add
in
in
mov
mov
add
mov
stos
inc
loop
pushf
pushf
and
cmp
sti
mov
pop
pop
mov
push
mov
icebp
mov
cs
mov
lds
cmpsl
mov
ja
iret
and
loopne
pop
out
xchg
cmp
adcl
jno
repz
mov
mov
jmp
mov
mov
add
push
pop
cwtl
add
push
test
stos
daa
jp
cwtl
add
movsb
imul
rcrl
movsl
sbb
test
and
movsl
jle
aas
cs
dec
cmp
cmp
sbb
jge
pop
pop
fdivrl
dec
pop
bound
and
xchg
xchg
and
sahf
push
fnsave
ds
push
lahf
fs
and
push
movsb
adc
inc
js
ret
xor
xor
outsb
mov
push
mov
push
mov
xor
dec
insl
sub
in
inc
xchg
sbb
pop
push
and
jae
fisubl
mov
push
push
inc
cwtl
xor
not
aas
cltd
and
mov
adc
fmul
push
mov
ss
pop
icebp
mov
and
out
dec
subl
pop
and
and
add
jmp
cmp
out
aam
pusha
adc
mov
jge
add
add
pop
jae
rcr
cmp
rcrb
and
inc
xchg
or
inc
ja
or
xchg
fwait
and
inc
fcoms
test
sbb
mov
repnz
jge
pop
xchg
daa
cmp
xchg
sahf
mov
cmp
popf
mov
das
subl
movsb
aam
push
cmp
lret
fwait
and
ret
movsl
sahf
inc
sbb
pop
inc
lds
and
inc
daa
ljmp
data16
cmpsb
mov
mov
dec
mov
scas
pop
movsb
xor
add
and
imul
fs
negb
leave
icebp
push
cmp
clc
bnd
add
jbe
lahf
adc
sub
xchg
fbstp
jg
and
dec
hlt
adc
cmp
lret
mov
js
mov
fs
fcoms
into
dec
scas
jo
pop
sub
sbb
fld
test
inc
shrl
and
sub
lds
loope
sbb
rorl
call
jge
mov
cli
add
adc
inc
sub
sub
out
xor
sbb
sub
sub
xor
div
not
fildl
push
dec
push
and
push
mov
push
push
scas
loop,pt
add
ret
out
les
je
add
xor
adc
cmpsb
push
and
inc
or
add
fwait
punpcklwd
lahf
jmp
sbb
xorl
testb
jb
dec
adc
xchg
sahf
add
std
ss
sahf
shrb
pop
jbe
push
or
push
jmp
xor
imul
sbb
ja
xor
sub
addr16
lret
and
imul
mov
lds
int
in
stc
rcr
sub
lahf
dec
lds
flds
fcoms
mov
icebp
cmovl
gs
inc
loop
pop
lret
in
dec
mov
ss
js
xor
stc
bound
adc
push
lcall
mov
lds
lret
pop
jb
mov
and
inc
push
ret
cltd
imul
xlat
sahf
subl
std
repz
lea
cmpsl
or
loopne
add
loope
mov
daa
in
jge
cmpsl
cltd
andb
sub
jmp
fiaddl
mov
ljmp
pop
out
fistpll
sbb
xchg
orl
cmpsb
loope
das
pop
mov
insb
les
fdivrs
fidivrs
pop
in
adc
adc
lods
sub
xchg
mov
int
iret
ficomps
in
adc
in
ficoms
add
mov
pop
sub
sub
sbb
rcl
mov
inc
ret
fsubrl
mov
inc
aad
sbb
xchg
mov
xchg
xlat
pop
jmp
dec
push
cli
cmp
cmpsb
mov
push
push
mov
jnp
test
lret
stos
arpl
pop
lods
inc
inc
movsl
stos
cmp
mov
mov
xchg
std
or
in
adc
test
mov
adc
mov
cmpsb
imul
and
mov
sbb
aas
pop
iret
xor
psrlq
xor
mov
dec
clc
inc
aam
mov
test
test
pop
in
popf
inc
sbbb
movsl
vpand
fcmovnbe
pop
and
je
xchg
or
sbb
cmpsl
cmp
xor
cmpl
popa
mov
or
pop
idivb
fcoms
cmp
push
xor
pop
loopne
out
cltd
xor
xor
cltd
mov
inc
pop
ljmp
mov
out
aas
pop
fwait
push
lcall
lods
adc
icebp
jg
pop
mov
dec
rolb
fcmovnu
out
xchg
inc
pop
adc
jo
jmp
addr16
mov
mov
outsl
pop
pop
scas
push
adc
shlb
lcall
nop
cmpl
jge
adc
gs
ret
popa
fsubrp
arpl
and
and
push
hlt
imul
inc
lods
repz
cmp
int3
lods
test
icebp
stc
int
lock
int3
lcall
subl
inc
fiadds
push
js
sarl
scas
add
fnsave
dec
xlat
adc
call
mov
mov
adc
orb
mov
add
mov
popa
dec
sarl
les
insb
sbb
ds
sbb
mov
test
out
cmp
inc
push
stos
cmp
fsub
dec
push
cmp
sbb
sub
fisubrs
lds
in
cli
adc
adc
mov
push
mov
popf
xor
fs
fldcw
insl
cltd
sti
je
mov
xchg
shll
scas
xchg
ljmp
loop
mov
pop
rcr
add
in
mov
rolb
jg
push
mov
xor
cmpsb
inc
scas
arpl
jns
mov
jl
fistpll
pop
cmc
inc
out
dec
sbb
mov
addr16
je
pop
add
inc
jne
mov
jle
sbb
stos
or
jae
jmp
mov
enter
aad
push
push
jno
pop
data16
cmp
mov
pusha
fs
inc
pop
or
loopne
outsl
dec
scas
enter
xchg
stos
pusha
les
inc
and
movsb
out
decl
sub
push
fisttps
adc
lock
mov
out
lea
gs
out
sti
dec
jbe
jecxz
jne
out
daa
xor
int3
xlat
fsubrs
pop
cli
xchg
inc
jmp
dec
sbb
push
mov
out
jle
notl
pop
ds
js
dec
rorl
test
sbb
icebp
inc
fldenv
jg
sysret
jo
imul
popa
pop
and
mov
adc
daa
cli
or
jmp
and
dec
push
in
lods
pushf
imul
cmp
xorl
mov
xorb
mov
jb
jo
cmpsl
loop
jl
adc
jmp
and
pusha
hlt
rorb
xchg
sbb
inc
cli
xor
popa
push
or
aam
jae
clc
xchg
add
ffreep
mov
shlb
clc
mov
inc
ffree
dec
repz
cmpsb
dec
aam
lcall
test
sbb
pop
fdivrl
imul
cmpsb
dec
jb
sbb
lock
mov
popf
sub
push
jb
cmc
or
inc
pop
es
scas
mov
jno
mov
inc
testl
test
push
dec
cltd
mov
iret
into
push
popf
idivl
subl
cmpsl
insb
inc
leave
inc
pop
xor
ja
shl
jbe
rcr
mov
iret
xchg
xor
push
pop
mov
scas
insb
sbb
sbb
jmp
aaa
mov
and
and
adc
leave
outsl
jae
mov
mov
inc
pushf
push
xchg
and
cmpsw
push
inc
inc
aad
popf
push
lods
ja
stc
inc
and
movsb
cmp
out
fdivs
cmp
jns
fcmovb
aas
inc
loope
ror
repz
pusha
push
filds
scas
orb
shld
das
push
daa
ljmp
in
stc
mov
shr
xchg
rcrl
fidivrl
mov
loop
data16
inc
ss
push
dec
repnz
out
stos
out
sbb
fwait
test
je
push
inc
sbb
fwait
arpl
test
std
xor
adc
in
jae
dec
inc
sub
push
sbb
out
or
or
repz
stos
mov
push
out
in
sbb
jge
sub
insl
add
and
imul
lods
mov
xor
mov
pop
js
arpl
lock
movsb
jbe
mov
mov
mov
or
pop
aaa
es
and
fnstsw
dec
rolb
lea
add
push
or
cmp
push
xor
ret
sbb
xlat
xchg
jno
mov
and
xchg
fadds
in
xor
sarb
or
or
xchg
add
cmp
rclb
jg
and
sub
sbb
xor
nop
adc
dec
repz
cmpsb
movsb
inc
mov
fimuls
cmp
push
inc
xor
jg
xor
sub
out
data16
cmp
loop
adc
lcall
loope
int3
and
ss
data16
hlt
cmpsl
and
push
cmpb
mov
pusha
lcall
pop
and
mov
movsl
pop
xchg
bound
aad
jo
add
dec
call
adc
es
call
sbb
xor
push
icebp
dec
lods
aaa
jle
sub
mov
mov
xor
bound
xchg
rol
das
ret
icebp
jmp
faddl
jmp
cmp
push
sar
inc
packuswb
cmc
rcr
push
sub
dec
fldl
dec
sarb
jg
sbb
nop
repnz
lods
aas
shrl
cmovb
jnp
adc
in
add
cmpsb
mov
je
and
hlt
test
inc
les
mov
xchg
pop
or
jge
cmc
mov
add
inc
push
xchg
jnp
inc
mov
mov
mov
sbb
inc
cmpsb
nop
add
rclb
fisttpll
xchg
cmp
or
scas
popa
push
lcall
fmulp
std
sbb
or
xor
jl
enter
lods
mov
xor
dec
inc
jns
push
ret
test
jle
imul
ljmp
out
repz
pop
adc
aaa
insb
inc
into
clc
aad
xor
mov
lods
orl
push
jns
mov
icebp
clc
cmpsl
add
and
inc
add
sub
iret
loop
xor
pusha
mov
xchg
lea
aam
insb
xchg
in
jns
dec
daa
inc
movb
js
xchg
fildll
das
sub
adc
addr16
pcmpeqd
xor
orb
mov
sub
jecxz
out
pop
cld
xchg
lcall
roll
fidivrl
xorb
mov
jp
push
sbb
adc
xchg
shrl
mov
dec
xchg
lock
xchg
push
dec
aas
scas
aaa
lcall
sbb
xchg
push
outsl
out
lods
popf
out
xchg
inc
into
mov
mov
arpl
ja
bound
pop
loope
iret
push
cmp
out
xchg
dec
mov
push
test
daa
xor
mov
add
ret
test
sub
stos
loopne
sbb
xor
into
fisttpl
insl
jo
xchg
cld
sub
mov
push
pop
das
mov
pop
popa
loop
jb
imul
test
bound
inc
insb
test
loop
sub
je
fs
out
mov
arpl
scas
and
pop
mov
xchg
fcmovnb
add
cld
repnz
into
fcomps
imul
inc
pop
mov
addl
loop
int
xchg
pop
pop
jae
pop
sti
jecxz
rolb
fcompl
loope
lcall
xchg
aas
loopne
cli
aaa
mov
hlt
jo
std
fidivl
add
mov
addr16
pusha
aaa
subb
or
cmp
in
sub
inc
jl
cmp
and
sub
repnz
inc
incl
mov
leave
mov
and
cmp
jae
pusha
mov
push
jmp
inc
dec
ja
sub
pop
sbb
mov
mov
cmp
add
xlat
mov
cmp
push
lret
lock
ret
push
in
lret
pop
pop
cmp
ficoms
sahf
jbe
out
mov
lcall
test
xor
addr16
fwait
pushf
outsl
jbe
cltd
lods
jecxz
add
push
sub
jp
loop
xor
lea
mov
lret
test
cld
push
test
mov
shll
in
ret
lcall
movsl
inc
sarl
in
adc
movsl
xchg
adc
mov
mov
dec
inc
inc
xorl
loopne
lahf
jne
iret
ret
repz
paddusb
jb
ret
add
sbbl
and
popf
add
sbb
adc
xor
lret
sbb
nop
xchg
cli
outsl
jae
adcb
es
ss
pop
xor
mov
cwtl
bound
jae
sub
pop
stos
jo
rcr
lcall
das
insb
les
daa
inc
add
popa
decl
mov
inc
pop
sub
scas
shlb
loope
cs
sar
pop
call
mov
mov
bound
jae
mov
inc
mov
outsb
push
insb
fwait
ret
fdivrp
imul
xchg
outsb
mov
push
pop
ficomps
dec
pop
and
and
outsb
sahf
es
je
push
loope
inc
xchg
mov
pop
xor
inc
stos
sti
adc
add
imul
ljmp
or
sub
mov
xor
popa
shlb
sub
test
shlb
lahf
and
mov
imul
jle
mov
scas
cmpsb
sub
adc
inc
push
in
stos
inc
cmpsb
cli
lea
in
inc
cmc
dec
xchg
outsb
sar
out
xor
popf
mov
lcall
add
outsl
cmpsb
cltd
sti
mov
and
jp
jecxz
push
jno
push
inc
fs
cmp
pop
or
mov
lahf
gs
and
das
rcrb
jg
divb
cmp
mov
add
cs
add
sub
push
adc
mov
xor
sbb
dec
std
xchg
mov
xchg
or
icebp
push
cs
in
test
out
cmpb
dec
adc
adc
cmp
pop
lahf
adc
test
mov
cmp
fwait
cmp
mov
loopne
rcll
dec
mov
jbe
and
sub
inc
daa
jns
out
sarl
inc
pusha
fcoms
pop
xor
dec
jne
or
out
push
stc
mov
and
out
mov
cmp
movl
xlat
push
or
mov
mov
jne
clc
in
sub
lcall
adcb
add
mov
push
xchg
fwait
push
mov
enter
fld1
orb
fistpl
ror
aas
push
cmp
or
mov
jmp
mov
adcb
stos
fnstenv
mov
sub
lcall
adc
push
dec
loop
lcall
dec
in
subb
lahf
jl
cmp
inc
or
mov
mov
xor
xlat
jns
mov
push
das
dec
clc
or
push
ljmp
add
jge
shlb
lea
add
pop
arpl
sbbb
mov
sbb
mov
cmp
inc
icebp
jecxz
push
mov
fucom
jnp
adc
xchg
int
cmp
jg
mov
or
mov
out
push
lret
jns,pt
test
ret
insb
dec
sub
cli
mov
popa
lret
dec
out
fnstenv
pop
adc
xchg
out
rorl
push
mov
mov
push
aas
or
xchg
push
inc
in
add
sahf
push
or
xor
ficoms
xor
mov
jae
xchg
in
mov
xchg
jne
mov
shrb
or
sub
data16
rcl
in
push
not
dec
push
mov
in
mov
leave
jo
fisubs
jmp
mov
lahf
loope
xchg
into
shl
mov
inc
add
jae
test
sub
arpl
in
xor
lea
push
or
mov
mov
mov
icebp
dec
notl
cmpsb
add
dec
mov
jo
out
call
dec
pop
push
pop
jns
xor
shrb
xchg
push
add
call
test
xor
xchg
mov
adc
adc
mov
push
xchg
jb
insb
xorb
pop
xchg
lahf
dec
imul
mov
dec
xchg
leave
mov
xchg
inc
decl
scas
inc
js
int3
xor
and
jp
mov
repnz
lahf
in
adc
jg
cltd
xor
ret
cmp
int3
lret
js
cwtl
xchg
sti
enter
jne
sti
stc
mov
sahf
dec
adc
dec
mov
mov
sub
adc
sar
mov
pusha
add
mov
mov
rorl
push
testb
insb
dec
pop
mov
inc
dec
je
mov
push
and
mov
ljmp
mov
push
mov
xor
cmc
and
mov
cmpsb
and
mov
movsl
stc
inc
sub
xor
sub
sub
nop
daa
fsubrs
sbb
and
push
or
icebp
add
jmp
movsl
push
jnp
pop
and
into
loopne
cmp
rclb
or
xor
in
xor
test
lea
jno
call
and
aam
sbb
dec
lahf
mov
imul
jno
sahf
ret
lahf
dec
and
pop
loopne
inc
fldcw
mov
ds
sbb
mov
inc
mov
or
xchg
mov
fisubrs
out
or
jmp
xchg
stos
cmp
repz
sub
cmp
cmp
jo
sub
push
movsb
inc
lret
cmp
clc
movsl
adc
dec
in
mov
and
in
popa
std
fiadds
inc
ljmp
push
adc
jno
and
mov
cmpsl
push
push
insl
call
scas
rclb
xor
xchg
push
sub
mov
mov
adc
cli
mov
dec
icebp
or
lahf
or
ja
and
pop
and
sbbl
and
es
sbb
mov
fsubp
fwait
add
pop
cmp
mov
inc
iret
mov
mov
mov
das
mov
xlat
adc
dec
in
adc
add
xchg
pop
js
fs
xor
imul
fcompl
xchg
jne
idiv
mov
add
sub
js
adc
xchg
lret
sub
add
xor
movsb
push
adc
cmc
and
xchg
in
cltd
jge
gs
rclb
iret
xchg
jnp
int3
in
enter
fisubl
sub
imul
cmp
jbe
pop
or
ret
and
xor
imul
dec
and
pop
sbb
dec
push
xor
xchg
pop
fldcw
fwait
sbb
jmp
push
xor
sbb
and
es
dec
insl
fists
rorl
in
fnstenv
sbb
jo
adc
aad
std
sbb
xchg
jp
ss
sub
int3
lods
mov
push
insb
test
cmpsl
pop
pusha
sti
xchg
test
cmp
cmpsl
mov
call
imul
rclb
adcb
sbb
ret
jl
inc
push
pop
lea
xor
sbb
aaa
cmp
subb
orb
mov
shrb
cmp
and
hlt
xchg
aas
and
jmp
and
idivb
jp
inc
push
lahf
lods
stc
inc
add
mov
push
adc
cmp
lcall
imul
aaa
popf
lahf
scas
lcall
xchg
sub
lret
add
mov
xor
xchg
pop
lcall
push
push
mov
mov
jl
inc
lds
ja
and
xorl
cltd
pop
mov
or
icebp
and
mov
aad
cli
out
xor
js
shll
jge
cmpl
jle
stos
inc
push
aad
adc
or
repz
sub
cmpsb
test
ret
xchg
mov
jmp
xorl
mov
dec
and
inc
int3
jnp
movsb
loopne
add
ret
sti
dec
je
cltd
xchg
adc
and
cli
cmp
add
pop
mov
iret
jl
lcall
rol
nop
xlat
mov
aad
mov
xchg
mov
mov
inc
mov
cmpsl
mov
shrb
mov
pop
inc
push
lock
lret
adcl
ss
loope
cli
jmp
loop
pop
cmp
sub
adc
mov
jb
sbb
sti
sbb
lods
sahf
fcoml
mov
aas
cmp
lahf
das
xchg
ljmp
lret
andl
cltd
xchg
aas
lods
sbb
inc
add
mov
push
dec
data16
outsl
adc
ret
or
mov
cwtl
push
push
add
loop
add
adc
pop
daa
pop
es
das
or
mov
xchg
cltd
ds
lods
sbb
cli
out
mov
sar
or
dec
ds
icebp
mov
lahf
and
mul
cli
cltd
jnp
xor
mov
fs
mov
adc
in
cmp
out
sbb
adc
shrb
ljmp
jecxz
mov
sub
mov
or
aam
mov
add
mov
iret
mov
arpl
cmp
call
ret
fnsave
pushf
imull
into
rcrl
xchg
mov
push
movsl
repnz
movl
into
and
mulb
enter
jl
jne,pn
std
mov
mov
das
call
out
and
or
mov
add
test
pop
rorb
cwtl
in
dec
icebp
inc
jno
test
movsb
pop
leave
repnz
dec
aaa
xor
mov
inc
sbb
fmuls
xor
cltd
adc
mov
dec
mov
inc
push
insb
and
sbb
iret
sahf
loop
ljmp
clc
jnp
pushf
rcll
leave
xor
inc
lea
sub
movups
popa
orb
inc
jae
sbb
sub
ret
and
sbb
mov
mov
popf
nop
call
sarl
adc
out
pop
adc
sub
aaa
push
idiv
mov
add
jne
stos
jecxz
ljmp
dec
shl
mov
xchg
jle
inc
cltd
loope
rcrb
mov
sar
repnz
rorl
leave
jmp
out
ja
mov
pop
pop
mov
dec
pop
xchg
jmp
mov
cmpsb
jo
cmp
pop
adc
sub
sti
xchg
loopne
pop
mov
pop
mov
insb
xchg
inc
call
jae
sbb
cvtpi2ps
dec
pop
push
ret
push
cmp
xor
js
xor
push
test
pop
icebp
out
in
xor
and
icebp
loop
jmp
inc
scas
in
out
lea
gs
cmc
mov
lret
jnp
xor
ret
dec
cmp
xchg
mov
mov
pop
fmul
fstps
push
dec
das
sahf
pop
adc
xchg
or
fiadds
mov
mov
pop
sub
add
es
bt
psubd
nop
mov
lcall
or
jae
dec
mov
sbb
jge
mov
adc
sub
sub
push
push
add
and
xchg
pop
bound
sub
jge
inc
sub
pop
xchg
fiaddl
xlat
sbb
in
pop
test
sbb
sbb
and
enter
fldenv
out
xchg
aaa
mov
cli
iret
mov
adc
mov
mov
lahf
xchg
and
add
loopne
cld
xchg
mov
pushf
adc
dec
jb
es
mov
jmp
lret
mov
filds
roll
xor
xchg
test
push
and
imul
inc
fldl
jle
call
adc
iret
fistpl
sbb
and
cltd
mov
mov
add
cmp
fwait
std
jle
push
mov
add
inc
lret
mov
loope
sbb
xchg
cltd
in
jnp
mov
stos
xchg
aas
or
xchg
cwtl
inc
call
push
lds
adc
xor
fwait
gs
in
push
mov
push
xor
adc
sbb
mov
adc
stc
xchg
or
lods
inc
push
mov
int3
sbb
jbe
cmp
cwtl
fsts
sbb
insl
mov
testl
lahf
mov
out
int
lods
ret
dec
scas
aaa
inc
cltd
dec
adc
daa
fnstenv
dec
xor
jns
clc
ret
sub
and
cltd
mov
pop
outsb
je
cmp
xchg
dec
fdivl
fimuls
aad
mov
dec
push
xchg
mov
addr16
push
aaa
mov
push
movsb
in
cmp
add
call
push
sbb
ljmp
xor
jne
gs
xchg
movsl
mov
or
movsl
ss
fscale
jmp
push
arpl
xchg
dec
xor
in
push
xor
lcall
adc
outsl
add
sub
cwtl
std
push
pop
lods
jns
adc
dec
and
movsb
mov
inc
or
jo
fcmovbe
jns
mov
xorb
mov
add
fwait
ret
scas
adc
ja
jle
jns
clc
jae
shrb
mov
inc
movsl
xor
icebp
pop
orl
add
ds
add
ljmp
fists
xchg
jnp
sbb
mov
dec
cmc
cmp
push
pop
aas
jo
dec
out
dec
lock
call
mov
sahf
mov
shufps
adc
test
dec
std
jle
das
dec
call
iret
dec
imul
jl
push
mov
rcrl
add
fadds
rcrb
movsb
add
ljmp
add
jmp
jb
cs
imul
xchg
add
cmp
jae
mov
sbb
mov
mov
sub
inc
dec
in
adc
cmc
je
inc
push
fcompl
lahf
fimuls
std
mov
and
or
je
cmp
scas
jp
push
fwait
stc
fistpl
xor
jne
mull
pushf
out
shll
in
scas
mov
movsb
mov
xor
xor
sub
xor
sbb
cwtl
jge
or
ss
cmp
sbb
jae
mov
and
das
pop
into
xor
int3
and
inc
sub
and
mov
test
lods
mov
int
mov
push
push
in
cmp
push
xchg
jle
into
repz
jnp
inc
lret
ljmp
fistps
sbbb
ret
xor
pop
mov
jmp
fbstp
jmp
sub
mov
aad
icebp
jb
and
add
or
cmp
lods
inc
xchg
xchg
jge
and
mov
stos
lahf
add
loopne
sub
inc
gs
not
push
jne
rcrl
in
push
jae
or
movsl
lods
test
test
push
push
xchg
or
cwtl
in
iret
push
mov
ljmp
movsl
outsl
mov
stos
pop
ljmp
insl
jns
std
scas
dec
add
mov
addr16
outsl
dec
bound
or
aas
scas
jb
ljmp
lret
shll
xor
or
or
out
jbe
int3
imul
sub
out
ja
cmc
imul
adc
stos
xor
dec
lds
and
lds
cmpsl
add
mov
ljmp
xor
nop
cmp
add
mov
hlt
iret
jb
cwtl
das
ljmp
add
out
dec
imul
enter
and
in
lcall
mov
mov
movsb
cmovg
imul
fwait
cmp
pop
mov
roll
cwtl
mov
or
push
fcomps
sub
sbb
bound
xchg
repz
insl
push
or
pop
mov
scas
int3
jge
pop
jne
adc
mov
add
test
dec
in
add
dec
lea
cld
or
push
xchg
xor
insl
aaa
aad
repnz
cmpsb
aaa
popf
outsb
in
andl
jmp
mov
push
int
inc
xor
stos
mov
push
push
loopne
dec
lock
sub
jp
shlb
cvtdq2ps
stos
lret
pop
fwait
xlat
fdivrs
rcrb
pushf
in
mov
push
test
ret
xor
cmp
outsb
pop
mov
and
pop
ficomps
push
rcrb
mov
mov
push
cmpsl
mov
push
inc
xorb
add
bnd
clc
and
or
hlt
push
stos
xchg
mov
inc
add
jmp
inc
mov
sar
hlt
fisubrl
jp
inc
icebp
loope
mov
and
lret
or
hlt
xor
js
insl
mov
push
xchg
idivl
fidivrs
mov
fdivrs
lahf
dec
mov
push
push
add
scas
std
xchg
stos
lds
fdivrs
or
dec
lods
data16
out
xorb
adc
aad
outsb
and
cmp
mov
inc
xchg
dec
out
stos
jbe
add
adc
mov
lcall
sub
sub
stos
cs
fiadds
imul
mov
sbb
mov
lods
movsb
lcall
pop
int
scas
jbe
or
mov
add
sbb
mov
push
adc
mov
sbb
xchg
popa
scas
in
or
mov
stos
shrl
lds
popa
test
dec
or
and
push
sub
sbb
pop
sahf
out
cmpsl
std
out
out
add
lds
popf
mov
push
cmpsb
repz
inc
mov
int
arpl
addr16
stos
or
adc
test
cmp
clc
lcall
sahf
pop
dec
sub
push
dec
mov
pop
push
sarb
jbe
hlt
fistpl
por
pop
xchg
mov
cli
jmp
aaa
mov
jnp
sbb
pusha
icebp
and
inc
push
shll
inc
int3
inc
mov
cmpsb
pop
shlb
push
loopne
mov
fwait
les
pop
cli
adc
ja
adc
faddl
cmc
roll
ret
call
aad
incb
mov
jp
ss
int
mov
cli
addr16
addr16
xchg
push
ret
push
sbb
xor
add
jg
jne
jl
xchg
xchg
adcb
inc
mov
jp
or
sub
stos
jp
mov
jae
aam
arpl
dec
dec
and
call
xor
or
pushf
cmp
fnsave
jge
repz
inc
xor
hlt
aas
sub
adc
dec
mov
leave
dec
divb
fdiv
es
divb
inc
in
fs
mov
mov
lret
sub
clc
loop
xchg
pop
pop
mov
sysexit
repnz
das
push
clc
shl
int
cwtl
sahf
cli
cltd
mov
testb
cmp
pop
pop
xchg
mov
and
mov
cmp
pushf
js
iret
jbe
inc
sub
cltd
call
in
insl
adc
jmp
test
fldcw
outsl
adc
repnz
mov
sub
out
xchg
ror
pusha
jg
ret
jns
fwait
pushf
push
cmp
jne
fdivrl
pop
pop
or
mov
cmp
mov
and
insl
dec
xor
lock
ret
ror
mov
or
ret
jg
std
xor
nop
mov
ret
je
cmc
push
imul
add
aaa
sahf
dec
push
lcall
xchg
push
adc
sahf
scas
les
stos
addr16
sbb
lea
lods
ret
js
in
data16
mov
cmp
mov
sarl
cmpsb
test
repnz
fisubs
push
xor
roll
fldcw
cli
jae
ficoms
or
xchg
flds
fidivl
jg
adc
lods
cmp
add
xchg
insl
subl
or
mov
jg
popf
stc
mov
sub
nop
mov
inc
das
sbb
call
xchg
ret
mov
mov
or
mov
dec
xchg
leave
sbb
xlat
or
ficomps
adcl
clc
pusha
in
loop
pop
les
cmp
shrb
xchg
cltd
sub
icebp
pop
xor
sbb
mov
jl
mov
adc
jns
add
jge
or
rclb
rclb
or
aaa
insl
and
adc
stos
pop
push
xor
js
lret
push
mov
daa
and
rorb
xchg
lcall
scas
out
loope
gs
cmp
cwtl
mov
inc
jle
sub
je
xchg
xchg
sbb
cmpsl
popa
shrb
or
and
lret
inc
pop
add
jl
ret
cmp
mov
out
cmp
aad
jb
inc
shll
add
xlat
sub
add
and
xchg
push
std
fisubrl
sbb
xor
loop
dec
daa
and
cld
and
mov
mov
stos
sbb
shr
sub
or
mov
rcll
rcrl
sub
sbb
gs
into
push
mov
cmc
push
mov
jecxz
inc
addl
adc
push
inc
inc
mov
push
ret
nop
push
lock
mov
shlb
mov
ficompl
in
dec
cli
aas
cmpsl
nop
loopne
adc
xor
lds
insl
sahf
mov
ret
jg
pop
test
lret
gs
ds
pop
and
cltd
jbe
popa
icebp
xchg
cmp
push
mov
sub
arpl
mov
or
mul
xchg
jle
pop
rcrb
gs
mov
mov
sub
movsb
test
sub
and
ds
stos
ds
xchg
pop
mov
pop
dec
mov
ficomps
or
push
mov
sub
aad
xchg
fidivrs
aam
mov
sub
or
cmp
add
cmpsl
aaa
mov
inc
ss
xchg
pop
ds
adc
movsl
mov
andl
scas
dec
xor
jbe
pushf
push
and
ljmp
subl
and
sbb
or
push
push
lods
call
mov
add
xor
jecxz
neg
inc
in
and
xor
ja
push
and
push
cwtl
jecxz
popa
sub
and
cmpsl
ret
out
inc
clc
sub
cmc
popa
aad
in
mov
enter
mov
popa
xchg
dec
clc
push
out
stc
xchg
add
enter
arpl
outsb
and
jbe
orb
and
xor
and
testl
in
add
and
adc
lcall
fcompl
xchg
test
pop
popa
ljmp
fisttpl
cmpsl
adc
out
sahf
jle
mov
push
daa
imul
xor
push
cmp
cmp
mov
mov
jne
dec
xor
cmp
mov
insl
push
aaa
mov
sbb
cmp
and
mov
cwtl
dec
or
enter
or
add
adc
insb
mov
cmp
sub
mov
push
adc
ret
xchg
fld
jmp
pop
repnz
int3
mov
call
pop
je
dec
scas
jecxz
movb
mov
or
jno
mov
movsb
and
pusha
testl
call
insl
xor
jl
push
ja
push
adc
sub
jmp
sub
hlt
ja
add
and
int
in
jae
popf
push
pushl
stos
push
xchg
les
or
ja
lds
lahf
movsb
pop
pop
dec
cmpsl
ss
test
insl
mov
mov
cmpsl
test
mov
xchg
pop
test
cmp
push
xchg
cmp
je
ljmp
imul
cli
cmp
mov
dec
cld
pop
push
inc
xor
ficoms
cmp
mov
mov
fcmovu
dec
fcmovnb
mov
inc
push
inc
in
shr
inc
xchg
mov
adcl
cmpl
out
push
hlt
push
or
add
xor
int3
scas
push
fwait
icebp
idiv
xlat
out
mov
jmp
gs
ss
shrb
mov
add
jge
mov
mov
xchg
pop
xor
push
test
sti
xchg
mov
adc
and
xor
jbe
cmpsl
jae
push
in
sbb
push
xor
mov
sub
pop
ds
add
dec
dec
lods
fcoms
inc
xor
dec
adc
inc
jge
sub
rcrl
frstor
test
aam
dec
jns
stos
arpl
mov
aad
and
add
aad
xchg
xchg
push
das
insl
jae
dec
out
out
lret
js
mov
sbb
mov
inc
mov
sbb
cmp
lea
pop
inc
ret
sub
mov
xchg
dec
push
bnd
jge
into
or
push
into
rcrb
stc
ret
mov
xchg
pop
mov
out
cs
dec
wrmsr
aas
mov
inc
enter
cld
test
mov
or
jb
and
imul
mov
lcall
in
sahf
roll
enter
add
mov
mov
fisttpll
outsl
sub
aas
mov
loop
xchg
pop
cmp
dec
clc
add
pop
or
adc
neg
mov
cmp
xchg
pop
test
mov
and
add
sbb
stc
push
xor
sar
cwtl
inc
insb
sub
sub
pop
push
jo
je
xchg
jp
xchg
mov
fstps
add
dec
rcl
cmpsl
push
mov
out
iret
cwtl
mov
clc
adc
or
mov
lock
mov
fnstcw
inc
scas
fs
insl
jmp
loope
add
in
fld
nop
add
jo
xchg
push
xchg
xchg
xor
xor
pop
adc
in
fcmove
or
outsb
push
sub
push
shll
jge
orl
sbb
sti
jle
add
repnz
and
out
push
lds
in
mov
and
sbb
sub
push
je
aad
scas
rcll
movb
cltd
pop
adc
dec
push
jo
jno
cmp
les
cmp
inc
dec
lods
push
mov
stc
adc
mov
call
arpl
xor
mov
cmp
cs
jo
and
mov
mov
add
in
or
pop
loopne
and
mov
and
inc
pusha
mulb
cmp
int3
cmpsl
mov
and
test
or
mov
loope
lahf
mov
adc
cld
adc
xchg
loope
jl
stc
jmp
fcoms
stos
add
and
jecxz
enter
dec
jle
and
mov
in
popf
add
rolb
jne
out
dec
adc
addr16
enter
into
pop
sub
push
lds
inc
mov
stos
cmp
adc
out
mov
inc
inc
jge
dec
xor
jns
mov
jp
push
out
or
and
pop
sbbb
xchg
jbe
std
roll
cmpsl
ja
or
pop
xchg
mov
inc
sbb
adc
push
fs
push
cmp
mov
inc
jmp
fiaddl
or
xor
aam
ljmp
mov
xchg
push
push
out
xchg
cltd
and
imul
add
pop
leave
cmpl
repnz
mov
dec
mov
sbb
outsb
iret
cwtl
mulb
mov
jb
inc
in
int
fistl
pop
xor
inc
sub
xor
orb
in
push
push
jbe
daa
xor
jg
fwait
push
aaa
pusha
int
js
jp
xor
decb
xlat
dec
jbe
xor
sbb
jge
add
adc
nop
adcl
shl
xor
out
cmpsl
and
add
push
loop
jg
clc
lcall
push
pushf
push
movsl
xchg
adc
inc
jb
pop
mov
jae
add
dec
insb
push
dec
xor
andb
movsb
sahf
dec
mov
pusha
outsb
xchg
out
jb
xorb
dec
imul
gs
pop
jecxz
jg
orb
mov
pop
das
out
dec
stos
inc
in
mov
inc
iret
jne
aaa
sub
mov
and
nop
out
ss
enter
shl
mov
pop
or
add
movsb
pop
daa
mov
into
push
insl
or
and
lcall
jne
lea
in
imul
test
xor
inc
and
loope
sbb
test
jg
add
inc
imul
imull
dec
inc
fadds
dec
fildll
fisttps
jg,pn
sahf
adc
test
push
div
cmp
lret
ljmp
cmp
call
in
and
fisubrl
fmull
pop
lret
sub
push
dec
int
pop
xchg
aaa
xor
push
mov
dec
shl
cmc
data16
cmpsb
mov
cmc
add
inc
mov
sub
dec
fcompl
dec
lret
lea
sarb
adc
sub
xchg
and
xchg
loop
into
lahf
mov
sbb
cli
ja
adc
leave
xchg
lret
mov
into
push
js
loop
and
int
mov
in
sbb
cmpsl
xchg
loope
mov
lahf
in
es
dec
in
scas
adc
sbbl
mov
fsubrs
mov
gs
mov
push
cmp
inc
loopne
pop
pusha
sub
outsb
cmp
mov
push
pop
mov
std
jmp
jge
adc
sub
adcb
mov
push
test
ljmp
movsb
addr16
adc
push
shlb
add
push
jns
and
hlt
in
icebp
xchg
stos
push
neg
hlt
add
dec
mov
mov
repnz
sub
mov
fwait
in
or
sub
roll
xchg
test
roll
movsl
mov
pusha
test
pop
adc
adc
das
inc
lock
sti
ss
xor
cmp
jbe
xlat
stos
fnstcw
mov
in
xchg
nop
push
inc
or
insb
add
sub
mov
or
loope
stc
jmp
jecxz
jge
push
lods
daa
or
outsl
sub
push
push
jp
js
sub
in
mov
push
mov
adc
push
lahf
aam
sbb
and
lahf
cmpl
mov
and
xchg
sub
push
cmp
pushf
test
and
mov
dec
stc
mov
pop
imul
pop
xchg
popa
loop
cmpsl
bound
not
scas
adc
mov
popa
gs
inc
sbbb
xchg
cmp
fldcw
test
push
or
lods
pop
data16
pop
push
in
movsl
xchg
adc
loopne
push
cmpsb
mov
jmp
repz
lods
hlt
or
lahf
adcb
mov
pop
sbb
cmp
jle
sbb
push
sti
negb
rcr
fcomps
data16
mov
lret
arpl
push
insb
mov
jo
or
in
cltd
aad
push
imul
mov
xchg
iret
xlat
fxch
jle
jg
push
lods
mov
xlat
sbb
mov
lock
dec
dec
dec
push
inc
outsl
pop
inc
inc
dec
sub
push
push
dec
ljmp
int3
outsb
mov
out
pop
lea
or
aad
xor
sarb
js
push
repnz
xchg
xchg
addr16
jne
mov
mov
mov
jg
sub
repnz
mov
adc
mov
push
insl
push
push
xor
push
jmp
mov
add
xchg
mov
lds
adc
adc
in
sbb
jecxz
inc
or
data16
xlat
jb
popa
mov
inc
push
add
sbb
das
mov
addr16
insl
push
push
jp
out
mov
lret
jp
mov
js
adc
push
push
dec
dec
mov
mov
adc
stos
push
lds
cmp
das
cli
jp
push
fidivs
jns
or
fldcw
dec
add
xchg
scas
pop
inc
fs
ds
adc
outsl
sub
pop
sub
shll
dec
jnp
and
and
lods
leave
mov
push
dec
in
jne
clc
sahf
sbb
jl
shr
mov
icebp
dec
ret
dec
nop
mov
xchg
push
dec
out
add
je
jge
cld
adc
test
and
rcr
jae
mov
jo
shl
pop
add
aad
jns
mov
out
leave
adc
mov
adc
stos
adc
sub
jl
sbbl
ds
mov
sarb
sbbl
jge
pop
test
jnp
cmp
xor
sub
cmp
or
dec
cmc
adcl
inc
out
jle
fwait
subl
mov
dec
and
in
in
xor
pop
shrb
mov
inc
mov
inc
cmp
cmp
xor
cld
std
pop
daa
out
pop
adc
push
xchg
cmp
inc
test
stos
and
xchg
dec
rcrl
ja
sbb
push
lods
mov
les
pop
popf
in
stos
insb
fsubp
lahf
dec
xchg
icebp
in
in
hlt
lock
mov
push
or
adc
xor
jp
fistpl
les
mov
or
cmp
mov
push
jae
das
adc
or
outsl
or
sub
add
sbb
cmp
fistps
es
xor
push
icebp
pop
sbb
push
or
mov
inc
and
call
inc
dec
mov
pop
add
xchg
cmp
lret
add
daa
pop
jns
jo
cmp
dec
sub
fcom
mov
xor
mov
das
push
das
repz
mov
clc
mov
in
or
les
or
lock
mov
fistpl
inc
dec
js
push
and
ljmp
jnp
ficompl
mov
not
rcll
in
cli
cltd
popa
mov
out
jecxz
push
fcoml
inc
lods
sar
jbe
ret
inc
repz
scas
jecxz
and
adc
push
adc
mov
add
arpl
pop
bound
dec
pushfw
and
xor
inc
das
shll
sub
xor
wrmsr
mov
add
test
pop
mov
jae
sbb
int
adc
sbb
fcmovnb
dec
xchg
xchg
jge
xchg
outsb
adc
xor
cmp
mov
es
and
lcall
pushf
shrb
or
jle
pop
sub
cmpsl
int3
stos
sbb
mov
lds
out
ds
or
mov
mov
fldcw
int
leave
stos
ret
or
xor
jns
es
cmp
add
cmpsl
jecxz
inc
jns
pop
popf
mov
icebp
push
ret
xchg
arpl
je
mov
lret
aaa
inc
mov
pop
mov
std
jp
popa
push
push
xor
dec
mov
xor
add
xor
rol
jne
out
jecxz
cmpb
xchg
ja
sbb
dec
lock
inc
cmpsl
scas
fstpt
adc
jnp
mov
dec
xor
sub
xor
mov
push
mov
out
iret
or
mov
jmp
rcll
sbb
or
mov
xor
jb
cmp
loop
add
dec
imul
dec
popa
dec
stc
sub
cli
sub
mov
mov
mov
out
stos
pushf
pop
pop
jnp
std
mov
cmpsl
std
mov
popf
dec
imul
aam
xor
xor
out
negb
pop
test
sub
sub
push
shl
into
test
xchg
pop
cmp
incl
mov
cwtl
out
mov
sbb
or
inc
cmp
inc
movsl
pushf
mov
test
pmulhw
repz
add
push
ja
push
push
out
fdivr
mov
arpl
sti
fdivl
jl
add
sub
into
pop
cli
sar
jno
or
sub
mov
xchg
addr16
mov
sbb
mov
mov
push
mov
ja
push
mov
insl
add
shr
jne
adc
stos
adc
addr16
dec
and
push
mov
cmc
dec
and
lcall
inc
idivb
sub
and
test
xchg
mov
mov
sub
nop
sbbb
jnp
cmpsl
sub
sub
jb
dec
lret
lcall
sti
cs
sbb
aaa
sbb
or
jnp
ss
insl
push
es
ja
bound
xchg
inc
or
sub
test
adc
or
cli
jecxz
das
dec
mov
inc
mov
xor
or
add
mov
mov
les
mov
iret
repz
and
mov
mov
mov
movsb
mov
addr16
adc
xchg
int
xor
sahf
sbb
icebp
mov
ds
inc
outsb
mov
inc
les
mov
dec
cltd
mov
adcl
mov
cmpsb
cmp
push
jno
xchg
lcall
mov
ret
arpl
shll
inc
xchg
pop
lods
dec
ss
sti
mov
xchg
sub
xchg
fimull
lahf
arpl
dec
lret
ljmp
sbb
repz
pop
call
pop
and
getsec
call
or
xchg
mov
jno
mov
dec
or
bound
into
sarl
lea
adcl
sub
loope
lds
xor
hlt
cmp
iret
loopne
loope
jp
in
push
lahf
loopne
pop
mov
test
ret
sti
loop
mov
add
adcb
and
fldenv
adc
adc
adc
and
jne
pop
insl
push
and
xor
dec
or
add
pop
add
pop
xchg
inc
mov
jle
repz
rcrl
mov
fwait
cmp
pop
add
mov
repz
outsb
test
pop
push
sbb
arpl
mov
cwtl
ja
mov
push
push
xchg
mov
movsl
cmp
test
rcll
mov
pop
flds
push
cmp
adcb
mov
scas
cmp
cmp
bnd
xchg
adc
mov
cmp
sub
inc
xchg
inc
xor
enter
gs
incl
loop
js
or
pop
dec
mov
push
push
mov
lea
ja
ss
stos
xchg
push
pop
and
mov
enter
push
cmp
fiadds
xchg
pop
add
fimuls
cmp
add
push
fwait
jl
ficoml
jo
dec
cmp
gs
inc
mov
cmp
cmp
jae
lret
adc
movb
ret
inc
pushf
sub
xlat
cmpl
jo,pn
call
outsb
rolb
movsb
pusha
sahf
adc
push
adc
negb
mov
and
stos
lret
addps
stos
dec
imul
pop
sub
adc
out
cmp
pop
in
cs
push
rorb
insl
xchg
imul
mov
dec
adc
repz
sub
pop
ds
sub
out
lds
clc
xor
lret
dec
push
cmp
pop
sbb
inc
pop
lea
push
es
insb
lock
repz
mov
imul
ficoms
insl
push
rcpps
cltd
and
imul
mov
addl
inc
add
fnsave
clc
outsb
and
adc
enter
adc
dec
jae
movsl
test
mov
push
mov
jne
mov
shlb
addr16
mov
icebp
pushf
mov
int3
pop
push
mov
and
mov
cmp
cmp
xchg
ret
cmp
ja
pop
enter
sub
aad
hlt
xchg
add
fnsave
jecxz
inc
jge
ret
jp
div
addr16
push
sbb
xchg
test
imul
bound
mov
enter
dec
dec
and
and
fcmovbe
movsl
sub
imul
mov
push
fldcw
or
mov
stos
gs
adc
mov
pop
push
push
xor
push
inc
push
or
inc
mov
sbb
sti
ja
mov
loopne
leave
mov
mov
imul
add
jb
push
jmp
in
xchg
jecxz
mov
clc
and
dec
fcoml
dec
test
dec
add
inc
inc
and
call
cmp
jo
xor
outsb
out
mov
cmp
insl
or
lock
adc
mov
call
cmp
iret
jns
dec
loop
in
icebp
mov
sbb
xchg
mov
imul
out
xor
scas
test
insl
push
pop
or
call
push
jle
test
sub
out
decl
sbb
dec
loope
data16
push
in
lahf
mov
jb
cmp
mov
shll
fwait
sub
lret
stc
add
cmpsb
cmp
sub
or
dec
push
dec
repnz
rorl
cmp
aam
or
sub
jecxz
cs
int3
test
loope
cld
sub
hlt
inc
leave
add
aaa
test
out
cmpsl
cmp
jns
and
aas
mov
outsl
inc
inc
sbb
negb
push
aaa
cwtl
and
bound
jno
repnz
das
adc
xchg
inc
and
clc
mov
adc
gs
push
jle
aaa
mov
mov
cmp
cwtl
fstpl
aad
fisubs
rcrb
scas
sarl
xchg
adc
insb
xor
add
loop
aam
outsb
xchg
movsl
ja
xor
test
jmp
lock
enter
mov
scas
lea
xchg
sbb
adc
ljmp
sbb
add
sbb
jmp
or
dec
out
sub
xchg
add
xchg
movl
jae
jnp
jmp
mov
or
push
jmp
add
jle
xchg
out
out
xchg
cwtl
fwait
push
cmpsb
stc
ja
cli
pop
cmp
adc
push
xor
jae
ret
int
xchg
xchg
repz
push
sub
lods
push
xor
mov
add
arpl
mov
mov
push
dec
or
push
std
pop
mov
xor
sub
mov
push
add
mov
cmpl
adc
shll
test
cltd
dec
daa
loop
movsl
cwtl
icebp
jge
in
inc
jmp
orb
jne
js
xchg
js
cmp
mov
jo
icebp
fcompl
mov
push
xor
and
rcll
add
or
rcl
or
test
out
addl
xor
sub
dec
mov
inc
pop
mov
enter
push
sbb
pop
jns
ret
cli
fisttpll
scas
adc
add
xor
sbb
cmpsb
cmp
test
sub
scas
add
ror
mov
xor
cltd
pushf
adc
inc
xor
leave
inc
std
sub
leave
jge
notb
pop
mov
inc
sbb
xchg
in
sub
pop
ds
sarl
ret
mov
mov
lcall
push
sbb
adc
cmp
lret
push
andl
stos
dec
cli
mov
xbeginw
or
call
out
shll
loop
cmc
and
pushf
scas
nop
jne
xchg
mov
nop
aas
imul
inc
push
cmp
and
wrmsr
sub
cmp
xor
int3
cmpsb
dec
xchg
dec
push
lcall
arpl
xor
xor
and
ljmp
frstor
int3
or
movsl
lahf
popf
arpl
fldt
movntps
inc
fs
cmpsl
mov
pop
pop
pop
xchg
sub
imul
push
push
sbb
push
add
testl
ss
push
insb
or
jo
leave
dec
jo
push
jg
inc
jnp
popf
fs
outsl
enter
sub
adc
mov
xlat
xor
ljmp
icebp
inc
mov
scas
push
shr
std
inc
mov
js
dec
pop
cmc
test
insb
push
testb
jno
pop
push
mov
loop
adc
frstor
xor
mov
inc
jnp
and
xchg
cwtl
jge
add
sar
pop
cld
sub
or
lods
cmp
push
movsb
xor
dec
lods
add
ffree
nop
inc
aaa
pop
popa
mov
inc
ds
adc
dec
add
data16
add
stc
dec
dec
aaa
test
fwait
jecxz
std
fsubrs
or
roll
inc
cmp
lock
mov
xor
fdivl
lds
and
sbb
or
out
mov
push
jle
aam
stos
adcl
fs
sub
jne
or
aas
mov
lcall
cmpsb
out
shl
rol
in
cmpsb
call
mov
jg
xor
mov
inc
adc
jb
or
inc
mov
lcall
gs
in
jle
adc
xor
inc
cs
or
mov
mov
sbb
mov
cmpsl
xchg
or
cwtl
out
adc
ret
lahf
arpl
push
jae
dec
clc
sbb
xor
cmp
hlt
ret
ret
mov
inc
repnz
pop
in
in
jo
mov
stos
push
fildl
lret
pop
jge
in
sbb
mov
rcrb
push
adc
cs
or
dec
jmp
lods
inc
mov
adc
testl
mov
jnp
xchg
rcrl
xchg
and
stos
sbb
rolb
jl
xchg
xchg
nop
loopne
xor
adc
cltd
mov
xchg
ljmp
std
es
cmp
and
sti
rcrb
dec
lahf
xchg
daa
mov
ja
repnz
dec
addr16
sbb
cmc
cmp
fcoms
in
push
sti
lock
xlat
pop
out
jecxz
push
dec
rcrl
adc
add
inc
jae
pop
mov
data16
and
scas
scas
fucomi
cmpsb
mov
jns
aad
cmp
popa
les
pop
fsubp
mov
aas
stos
xor
in
push
xchg
sub
push
cmc
imul
jge
cmp
test
scas
shl
arpl
int
mov
imul
movsl
insl
or
jle
dec
pop
mov
test
jle
cmp
mov
popa
pop
out
lock
sahf
push
sarl
std
jecxz
mov
hlt
subb
clc
iret
mov
outsb
xor
clc
push
movsb
test
mov
fmulp
or
or
inc
sub
fildll
mov
hlt
or
mov
xor
popa
or
xchg
xchg
sub
jmp
out
mov
cmp
mov
and
cmpsb
push
adc
inc
and
cltd
das
pushf
and
xchg
xchg
mov
mov
outsb
fmuls
sbb
imul
jae
and
loop
fldl
loop
lea
pop
lea
std
push
in
pop
out
icebp
repz
fdivrl
or
pop
mov
in
int
es
sbb
out
push
jae
fstl
or
dec
insl
ret
dec
jge
xor
pop
nop
out
shrb
mov
mov
sbb
cli
std
add
and
leave
add
pop
lods
or
in
test
mov
adc
inc
xor
out
cmpsb
pop
inc
lret
pop
xchg
inc
jnp
mov
les
rep
jmp
gs
lea
loope
push
in
daa
nop
jp
mov
mov
fcomip
adc
mov
or
sub
dec
test
mov
movsl
in
inc
push
and
jg
xchg
lret
enter
mov
jp
cmp
lret
dec
pushf
jns
pop
lahf
sbb
daa
nop
adc
mov
pop
jl
fs
imul
add
push
add
mov
xchg
mov
or
inc
clc
rol
ret
out
fs
xor
subb
xchg
fcomps
cmp
test
cmp
mov
sahf
pop
sub
add
into
push
in
test
xor
stos
push
in
inc
mov
insb
std
imul
pop
repz
inc
fcmovb
std
repz
lret
mov
cmp
adc
xorb
mov
fistps
mov
loope
test
mov
in
out
test
in
xor
mov
cmpsb
pusha
jae
pop
dec
orl
sbb
jmp
jecxz
pop
pop
xor
xor
rolb
jle
fsubrl
push
and
shll
push
jp
mov
fstps
ss
jle
xchg
mov
jo
addr16
sbb
jle
jne
jnp
mov
stos
mov
xchg
or
aaa
mov
dec
loope
or
cmp
iret
mov
mov
add
aam
imul
in
test
mov
xchg
adc
pop
shrb
shll
xor
add
shrl
mov
mov
push
cmpsl
jp
pop
inc
incl
popa
inc
cs
cld
xlat
xchg
sub
xor
pop
xchg
into
xor
cmp
lods
add
jbe
fistpl
inc
adc
sbb
sub
xchg
sub
out
sbb
mov
call
or
aad
dec
iret
setnp
jge
push
in
enter
fisttpll
loop
pusha
ss
push
pop
loop
dec
add
cmpsb
cmp
mov
lcall
and
mov
push
xchg
out
es
nop
xchg
xlat
pop
adc
push
mov
sub
fwait
sub
leave
subl
mov
dec
cmc
jbe
mov
or
cwtl
pushf
xor
test
ss
sub
aad
jge
std
mul
sub
sub
cmove
daa
xor
xchg
jae
bound
movl
mov
jl
xor
orl
jo
jo
push
mov
jno
cmp
mov
adc
inc
or
lcall
add
inc
adc
cwtl
or
cmp
xchg
push
orl
mov
outsl
push
push
mov
push
push
dec
cmp
push
and
ja
or
lds
mov
sbb
adc
xchg
or
out
addr16
enter
aam
popf
pusha
or
fadd
adc
aas
dec
into
pop
shlb
loope
inc
sbb
lahf
outsl
faddl
ljmp
jl
es
and
mov
adc
xorb
mov
scas
in
mov
sbb
and
shll
je
pop
cmp
mov
xor
dec
aad
mov
lcall
jecxz
xchg
out
test
jb
fwait
xchg
inc
cs
mov
insb
pop
pop
in
push
xchg
shl
out
ds
outsb
xor
aaa
js
pop
adc
lods
pop
sub
dec
mov
dec
hlt
mov
cli
enter
pop
scas
fldcw
sahf
mov
push
rorl
sub
jo
sbb
mov
dec
mov
neg
jb
inc
pop
mov
inc
int
fwait
pop
adc
mov
or
cvtps2pi
pop
int
lods
mov
loopne
pop
add
loopne
sahf
push
nop
andl
repz
or
gs
aas
fwait
jnp
push
leave
mov
imul
xchg
sbb
ds
sbb
negl
iret
xlat
mov
and
scas
aad
xchg
jg
cmpsb
xlat
leave
loopne
repz
xor
test
mov
test
mov
xchg
or
frstor
or
push
sbb
add
lea
dec
push
lds
out
xor
mov
dec
adc
dec
mov
pop
push
fnstenv
dec
popf
pop
ret
addw
das
jmp
mov
inc
mov
mov
mov
insl
dec
sub
aas
addr16
jmp
test
scas
cmp
xchg
loopne
add
jle
xor
mov
pop
xchg
fisubrl
scas
ljmp
out
sti
mov
scas
xorl
cmp
cmp
pop
shlb
ja
dec
in
arpl
neg
mov
cmp
aam
inc
pop
test
push
sub
loopne
je
lea
sbb
adc
cmp
xchg
cmc
xor
ffree
jno
ljmp
ja
scas
retw
ret
lcall
and
fsubrs
push
sub
push
ds
and
xchg
lret
add
xchg
xchg
jge
mov
mov
jnp
cs
adc
or
pushl
push
orb
xchg
dec
insl
xor
pop
inc
push
dec
and
cltd
jo
int3
es
arpl
decl
mov
into
sahf
jp
mov
fsub
fcmovnb
les
clc
jge
xor
and
mov
test
mov
out
push
inc
and
lret
sbb
negl
mov
jb
mov
xor
jne
test
fwait
sti
call
outsl
lods
add
decl
mov
lret
es
cmpsl
xchg
cmp
push
cmp
es
daa
je
xchg
mov
add
out
std
push
stos
mov
pusha
test
ret
and
mov
push
sbbb
test
movsl
imul
mov
inc
xchg
adc
xchg
lret
mov
adcl
test
cli
pop
test
popa
cmp
enter
sarl
or
insl
xor
push
imul
mov
mov
ret
sub
lret
push
add
out
jmp
mov
sbb
adc
or
sub
push
cmp
sbb
cmp
adc
and
rcrl
sub
fs
pushf
popl
pop
push
leave
dec
and
sahf
pop
xor
fdiv
repnz
push
mov
and
aam
daa
lcall
jge
stc
mov
fwait
add
pop
outsl
lods
lret
push
imul
xchg
xlat
iret
rcl
add
and
int3
jmp
push
xchg
int
enter
jnp
xor
pop
test
addr16
jg
fmuls
mov
push
dec
and
xor
mov
movsl
rcrl
imul
mov
cmp
xchg
mov
jp
subb
adc
out
push
cmp
jg
and
xchg
orl
mov
pushf
test
mov
and
outsl
shlb
inc
adcl
jl
loop
push
xchg
mov
inc
fs
inc
imul
subb
daa
cmp
mov
fsubrl
leave
xchg
push
imul
or
fdiv
sub
inc
inc
or
ret
ds
stos
arpl
sbb
cmpsl
mov
mov
stos
adc
add
cli
mov
outsb
fs
dec
jle
lods
pop
sbb
or
push
mov
pcmpgtd
subl
nop
repnz
jae
cmp
push
inc
int3
push
mov
out
jecxz
pop
jns
test
dec
lret
insb
movsb
clc
adc
mov
and
scas
stos
mov
sub
adc
jmp
xchg
inc
pusha
mov
jg
and
add
push
xchg
cli
cmp
dec
rclb
stos
popf
stos
and
repz
fsubrp
and
dec
pop
es
mov
mov
and
sbbl
xlat
inc
pusha
sbb
adc
push
jp
adc
pop
cmc
test
test
xor
or
test
aas
bound
adc
mov
adc
push
jo
sbb
mov
imul
lea
roll
orl
adcb
xchg
shll
inc
add
test
jno
push
cmp
mov
pop
andb
mov
rcrl
push
xchg
push
clc
jno
repz
int3
es
scas
stos
cmpl
in
xchg
jp
xchg
orl
fcoml
loopne
fisttpll
mov
mov
inc
xor
push
imul
cmp
inc
fisubrs
inc
mov
cli
mov
int
ja
mov
and
popf
fidivrl
push
cs
jle
imul
mov
jmp
push
add
cmpl
lock
dec
mulb
xchg
adc
xchg
test
add
popa
es
push
pop
add
and
ret
and
ljmp
stc
out
fiaddl
fildll
sbb
mov
outsl
sbb
bound
adc
nop
sbb
and
scas
cmp
pop
mov
sbb
mov
add
insl
mov
inc
out
stos
mov
dec
je
pop
loop
movsb
in
mov
cmpsl
add
mov
cs
jge
mov
movsb
mov
jne
xor
add
adc
mov
adc
lret
dec
mov
imul
out
imul
xor
jb
add
adc
xor
inc
mov
sub
mov
aad
jge
aam
nop
or
leave
popf
xchg
and
and
insl
popf
add
push
cmc
aaa
mov
mov
jo
adc
sbb
jecxz
bound
cmovae
xor
jne
inc
dec
mov
inc
mov
lahf
mov
or
mov
mov
dec
in
jo
xchg
and
pop
movsb
jg
add
pop
fwait
mov
inc
inc
lods
stos
fisttpll
jg
and
sub
push
push
int3
loopne
lock
test
out
mov
jns
in
xchg
test
or
push
incl
pop
lds
or
cltd
out
cli
test
jo
dec
and
rclb
arpl
sub
or
dec
aad
sbb
pushf
cmp
pop
ss
ss
or
scas
ds
xor
repnz
cmp
lock
and
nop
push
cmpxchg
lock
inc
idiv
mov
mov
xor
inc
mov
imul
loopne
jb
mov
lea
dec
adc
inc
and
push
ja
scas
mov
das
stos
adc
movsb
movsl
jns
dec
lds
out
sarb
jg
addl
inc
dec
jo
sbb
mov
test
movsb
cmp
add
jl
jecxz
and
orl
mov
and
mov
mov
add
fs
xchg
pop
push
add
mov
push
mov
add
icebp
pop
ficompl
xor
ret
aam
outsb
in
fbstp
xchg
out
sbb
fs
mov
mov
mov
test
mov
jecxz
data16
sub
push
dec
pop
pop
in
sub
jo
insb
cmp
xchg
iret
jno
aad
xor
xchg
imul
out
pop
mov
sbb
fwait
mov
cmovnp
cwtl
addr16
popl
jno
dec
xchg
sub
sub
mov
sti
dec
hlt
out
add
pop
xor
in
imul
bound
mov
jbe
cs
inc
jle
aaa
std
icebp
jecxz
lods
add
aam
pop
mov
les
dec
test
pop
aam
jb
inc
jl
cltd
pop
popa
in
sti
popf
add
and
adc
xlat
repnz
cwtl
push
push
test
mov
sub
and
xlat
scas
movsb
xchg
int
scas
test
pop
pop
nop
nop
jecxz
and
sbb
mov
xor
jbe
iret
jo
push
bound
ljmp
out
or
std
stc
mov
mov
and
inc
jnp
gs
mov
stos
ss
mov
xor
call
mov
in
negl
shlb
mov
adc
out
ret
nop
mov
inc
jle
cmp
cs
cmp
cli
call
cwtl
mov
cmp
mov
xor
cmc
sub
push
inc
sbb
adc
mov
xor
shlb
xor
cmpsl
adc
adc
jge
stos
nop
jb
or
or
jmp
sub
outsl
es
in
fcompl
icebp
in
inc
mov
mov
hlt
inc
adc
add
orl
adc
rclb
xor
cmp
or
cld
mov
in
cmpsb
xor
jg
cmp
fldt
pusha
insl
cmp
mov
add
sbb
xlat
decl
inc
mov
adc
jb
sarb
ds
cmp
and
and
aaa
mov
je
mov
adc
movsl
adcl
sahf
scas
jge
push
adc
pop
in
mov
cld
jbe
bound
dec
add
insb
pusha
fmull
test
xor
dec
lahf
inc
mov
ret
mov
push
or
aaa
dec
and
test
push
cmc
insb
jne
scas
sub
addr16
pushf
ja
mov
mov
cli
in
xchg
jle
xor
out
and
xor
lds
in
dec
imul
jmp
sub
andb
xor
inc
jno
lret
inc
cmc
xchg
mov
xor
insl
addl
std
xchg
inc
ficompl
jp
addb
push
pop
push
rcrl
jbe
xor
push
in
xchg
std
jle
ss
inc
icebp
or
lods
lods
rolb
mov
sbb
jecxz
fldcw
ret
lods
sbb
rcrl
flds
shrl
icebp
aaa
shll
lcall
out
dec
push
xchg
in
loopne
mov
and
test
xchg
repnz
mov
movsb
int3
icebp
jne
sbb
inc
adc
push
pop
les
out
pop
adc
sbb
cld
adc
aas
ret
sub
lea
testb
inc
or
jecxz
sbb
or
bound
in
pop
rolb
mov
xor
sahf
add
ljmp
jmp
into
sbb
addb
sbb
xchg
jecxz
pop
scas
push
mov
mov
pop
ret
or
push
lea
scas
xor
sbb
inc
test
xchg
cmp
jg
or
ljmp
push
bound
pop
xor
add
cmpsb
neg
xchg
push
pusha
outsb
dec
loop
sub
pop
imul
lahf
sub
in
xlat
fsubl
cmp
push
inc
pop
mov
imul
dec
flds
es
lahf
xor
jecxz
jle
pop
mov
dec
in
aam
or
xor
push
les
xchg
je
subl
aad
sar
dec
pop
sub
push
jnp
xchg
outsb
mov
xchg
sub
jno
sbb
lahf
push
adc
and
je
adc
pushf
mov
cmc
out
add
jl
push
in
ret
lcall
xlat
test
test
mov
xor
cmp
jp
inc
xchg
add
icebp
lea
cmp
xor
add
les
mov
mov
adc
adc
movsl
lods
pop
xchg
gs
add
jl
outsl
fs
ss
pop
mov
shlb
out
dec
aam
mov
ficomps
sahf
sub
lahf
mov
loope
mov
andb
add
pop
in
jmp
dec
sub
gs
je
enter
lock
pop
jae
and
lea
inc
adc
sbb
dec
xchg
shll
daa
idivb
repnz
push
xchg
xchg
jle
pushl
xchg
or
or
fdivl
or
mov
bound
bound
imul
jno
xchg
cmpsb
and
sub
add
into
jg
and
dec
iret
cs
je
sbbb
sub
lcall
sahf
fidivrs
lock
mov
shll
xchg
sbb
andl
mov
dec
mov
loop
pop
aad
and
lods
adc
adc
mov
jecxz
scas
lahf
push
loop
lea
mov
cmp
lock
int3
mulb
adc
xchg
push
pop
daa
pop
das
or
imul
xorl
sub
aam
clc
cmc
test
fimuls
mov
fstpt
adc
pop
enter
cmp
adcl
daa
in
out
pop
lods
lret
lcall
scas
les
popf
negl
cmc
jns
add
scas
lret
cmc
jno
xchg
mov
int3
call
jnp
fmull
or
xchg
jle
xchg
shl
jno
mov
data16
xor
cmp
jb
sub
push
mov
adc
lods
rorl
xchg
inc
out
mov
test
out
adc
cmp
cmp
jle
out
push
mov
int3
jl
out
out
fisubrl
loopne
jmp
je
add
aam
jb
xor
adc
incb
negl
rolb
out
mov
fidivrl
mulb
mov
inc
lret
sarb
cmpsb
test
add
dec
lahf
fstl
ud1
dec
scas
movsl
out
xor
push
mov
mov
aam
cmpsb
sti
aad
fdivr
jecxz
ljmp
enter
lock
xchg
cmp
xchg
mov
inc
cmp
xor
shll
or
and
mov
movsb
push
pusha
out
pcmpeqb
into
pop
xor
xor
pop
inc
lock
shl
mov
ja
in
jb
cwtl
mov
arpl
cltd
inc
cmp
into
push
mov
fsub
push
add
pop
orb
cmc
adc
and
xchg
sahf
cmp
fcmovne
addb
lahf
sahf
pop
jno
imul
push
stc
lods
dec
jecxz
mov
mov
lcall
lahf
fcmovnb
or
jno
js
aas
rol
ret
jl
notl
and
mov
roll
js
xchg
sbb
sub
push
testb
jg
jmp
iret
je
push
cli
and
repnz
scas
mov
mov
add
mov
inc
sarl
jbe
pop
cwtl
aad
pusha
sub
pusha
test
sub
stos
and
xlat
sbb
add
adc
dec
cli
dec
push
ret
mov
in
xor
insl
aas
xlat
cmp
in
push
and
cmpsl
jmp
inc
pop
mov
mov
push
mov
insl
inc
fwait
ljmp
xor
adc
pushf
lret
jl
insl
or
mov
insl
mov
stos
jecxz
xor
insb
clc
outsb
rclb
sbb
lds
jns
insl
jmp
lret
sbb
xor
ss
aaa
iretw
push
pop
out
daa
rorl
popf
loope
and
dec
mov
in
ljmp
icebp
mov
xchg
scas
ret
test
lret
mov
add
mov
fucomip
mov
fld
movb
mov
insl
cmp
mov
push
lahf
xor
stos
xchg
inc
pushf
icebp
les
pop
addr16
and
jle
xor
les
sbbb
push
xchg
stos
out
sbb
xchg
insb
loope
push
jb,pt
push
sbbb
xchg
rclb
je
pop
fistpll
mov
sar
in
js
add
rolb
ja
sti
cwtl
and
pop
fldcw
loope
aad
cmpl
mov
int3
ja
sub
xchg
fmull
cmp
mov
push
xchg
xchg
inc
xchg
or
pusha
roll
push
add
aaa
sub
loope
push
cmc
or
and
outsb
cli
rorb
stc
lea
pop
iret
aad
adc
cld
xchg
dec
mov
std
mov
loop
fs
into
mov
stc
sbb
rcrb
pop
or
fcomi
js
xchg
jnp
je
push
stc
lcall
sbb
test
push
lds
movsl
divb
mov
int3
adc
adc
mov
dec
sub
lock
int
jb
repz
out
pop
cs
and
or
addr16
imul
or
ss
pop
xchg
inc
cmpsl
sub
lret
sub
in
xor
pop
and
orl
mov
sub
mov
cwtl
dec
and
pop
cmp
dec
xchg
int
cmp
inc
aad
ja
ja
out
ja
or
lock
dec
adc
div
adc
xchg
dec
std
mov
imul
gs
add
fcmovnu
mov
xor
movsl
in
lock
and
xchg
pop
xor
stos
insb
cltd
je
mov
fsubrs
imul
loope
std
dec
lea
lret
cmp
stc
and
mov
cmp
inc
mov
cwtl
icebp
mov
xchg
stc
cmp
pushf
mov
sub
jecxz
mov
stos
xchg
test
pop
ja
mov
repnz
outsb
push
lahf
fcompl
inc
lods
dec
mov
mov
mov
mov
fildll
jbe
fadd
jp
les
mov
call
adc
xor
push
out
jg
sub
and
loop
sti
cltd
insb
clc
or
jnp
bound
fistpl
scas
mov
int
aam
push
sbb
sbb
xchg
daa
adc
popa
jo
dec
xor
lds
mov
xorl
fsts
test
les
sub
test
adc
xor
add
psubsb
test
ds
add
hlt
inc
fcmovnbe
test
jae
imul
jo
dec
shlb
cmp
push
xor
or
cld
stos
add
enter
divb
jmp
sbb
and
xchg
stos
and
movb
fisttpll
incb
xlat
inc
fisubl
jge
mov
call
mov
lret
sub
add
dec
xchg
addr16
addr16
adcl
xor
push
push
ret
insb
mov
addl
cli
ret
dec
pushf
inc
lret
and
mov
out
rorb
pop
movsb
xor
xchg
jl
adc
stc
dec
sub
jnp
push
push
sbb
xchg
int
test
imul
lret
push
sbb
rcrb
jne
arpl
lret
not
lret
pop
cltd
rcrb
mov
test
rcrl
stos
cmpsl
fldcw
test
jbe
push
mov
stos
cmpsb
sbb
sub
mov
mov
pop
insb
and
or
call
rolb
inc
pop
xchg
jnp
bound
sbb
push
push
ja
sbb
push
leave
bnd
aas
outsl
xchg
les
out
leave
cmp
in
or
inc
mov
jecxz
inc
scas
popf
pop
pop
nop
jns
push
mov
repz
ss
pop
in
xchg
rcr
jo
aad
dec
add
mov
jbe
fs
add
insl
jl
jne
jns
test
push
ja
into
dec
xorb
ds
dec
dec
mov
test
iret
decb
jp
fisttpll
or
inc
add
inc
mov
pop
push
int3
xchg
iret
ret
jno
push
cmp
neg
adc
int3
jl
sbb
pushf
sahf
dec
pop
inc
lods
mov
sub
leave
rorl
adc
and
dec
in
mov
cmp
into
lods
insl
fs
mov
sub
inc
or
aaa
mov
pop
ljmp
bound
and
movsl
pop
push
xor
mov
in
rcrb
popf
je
mov
and
fisubl
xchg
xor
setl
inc
mov
sub
mov
movsl
rcrb
in
xor
shr
call
cmp
adc
mov
sub
add
leave
aam
jmp
add
movsb
sbb
sub
xchg
cmp
or
shrb
lods
jecxz
cmp
push
das
outsb
dec
jnp
rcl
nop
iret
lcall
xchg
or
popl
jnp
incb
jbe
pushf
dec
sbb
mov
push
mov
scas
xor
xor
adc
daa
nop
int
mov
repnz
mov
mov
loope
xlat
mov
das
ja
mov
aaa
loopne
js
jle
push
dec
and
push
lods
mov
test
and
movsl
or
add
stos
repnz
test
adc
sub
test
fcmovb
and
fxch
data16
adc
aas
in
repnz
ds
jb
mov
int3
test
lods
pop
or
lods
dec
or
js
push
in
imul
out
cmp
fcomp
scas
jp
mov
xchg
cli
pop
and
inc
push
mov
and
inc
fcompl
or
cld
or
les
mov
pop
test
sub
or
dec
ds
inc
add
ret
mov
sbb
inc
jns
inc
rcrb
aas
mov
push
mov
mov
mov
xchg
cmp
popf
pop
sbb
mov
je
inc
sbb
and
push
xor
lahf
dec
xchg
test
or
andb
in
sbb
shlb
sbbl
sub
nop
adc
mov
jne
out
fldenv
xor
clc
sbb
dec
js
jle
lcall
xor
inc
adc
xchg
into
jae
or
pop
pop
xchg
popf
test
inc
repnz
cmpsl
sub
add
jmp
ret
mov
mov
inc
gs
roll
or
sub
addr16
push
lods
sub
xchg
or
shlb
mov
adc
xchg
mov
mov
test
push
push
iret
int3
pop
aam
stos
dec
jg
dec
lea
dec
xchg
or
int
lds
insb
pop
sbb
push
shrb
daa
pop
mov
push
adc
fnstenv
push
adc
movsb
and
lahf
out
or
push
push
and
ja
cltd
mov
sub
pop
in
adc
mov
pop
pop
aas
xchg
ja
mov
push
mov
dec
insl
jo
hlt
in
and
enter
mov
inc
shll
in
inc
inc
cmp
mov
dec
jmp
and
xchg
js
push
and
mov
mov
mov
js
aad
sbb
push
imul
and
xorb
inc
dec
adc
mov
lods
mov
je
push
dec
adc
xor
push
jb
lods
je
cmp
orb
lock
out
aad
xchg
out
sub
jbe
mov
outsl
popf
sbb
and
and
out
nop
or
fcmovnu
dec
lea
jp
lret
adc
add
xchg
mov
jl
mov
fsubs
sub
pop
mov
mov
mov
lahf
ljmp
cld
sub
adc
add
ja
jge
lods
arpl
add
or
mov
subb
cmp
adc
loop
pop
stos
lahf
clc
mov
pop
sub
shrb
xchg
jp
movsl
adc
int3
jg
imul
bound
dec
scas
cld
mov
lret
sbb
and
inc
decl
cltd
cmp
lock
jo
filds
xor
jb
xorb
cltd
cmp
lods
cmc
inc
fwait
pop
add
stc
mov
xor
mov
out
jp
sbb
aas
leave
in
lret
test
mov
pop
push
flds
insb
sub
inc
incl
ret
scas
inc
stos
clc
popa
push
lock
inc
cmp
push
fiaddl
push
sbb
nop
cmp
in
lret
xchg
popf
inc
adc
mov
js
data16
xchg
lods
sub
mov
sbb
dec
cmp
call
pop
addl
clc
add
test
pop
mov
out
sbb
cli
orl
in
xchg
cli
push
pop
clc
pop
push
jl
adc
mov
cli
and
dec
jb
mov
fists
in
jle
cwtl
enter
or
int
sub
roll
shr
sub
xchg
mov
cmp
ret
push
rclb
pop
sbb
das
popf
lods
adc
movsb
mov
xchg
dec
cltd
lods
imul
in
mov
rolb
pushf
dec
daa
cmc
outsb
pushf
or
pop
inc
inc
cmp
test
mov
addl
jg
ss
jecxz
xor
stos
cld
repz
imul
xchg
mov
shll
jecxz
stos
mov
fwait
mov
out
js
or
cmpsl
fistl
enter
into
jo
or
or
lock
or
stos
push
pop
sbb
test
add
hlt
scas
imul
inc
or
xchg
les
test
adc
pop
sahf
aaa
in
cmpl
cmp
or
push
fnstenv
push
das
pop
push
mov
outsl
cwtl
and
stos
sbb
cmpsb
into
out
xchg
cmp
fbstp
mov
out
cltd
sbb
rclb
adc
lock
pop
pop
jo
pop
movd
aam
jae
gs
pop
ljmp
lea
mov
or
adc
jns
cli
data16
lods
mov
sub
jp
and
sbb
cmp
aad
inc
out
xchg
in
in
adcb
scas
cltd
in
push
sbb
pop
fwait
and
scas
call
sub
rorl
lahf
mov
out
iret
test
adc
sti
int
sarb
dec
test
adc
int
test
daa
std
fdivrs
jg
push
stos
push
mov
xor
in
push
push
fs
sti
or
mov
int3
das
mov
stos
mov
in
adcl
sbb
stos
addr16
aad
aam
sahf
dec
cmp
mov
pop
int3
das
out
sbb
and
pushf
aas
jg
sub
test
adc
in
push
push
out
mov
or
pop
push
lcall
fiaddl
sbb
jae
push
mov
decl
add
inc
test
pop
arpl
mov
insl
pop
push
imul
adc
xlat
mov
mov
sbb
jle
aas
mov
mov
xchg
sub
dec
xchg
cmp
jb
push
outsl
mov
cmp
mov
test
pop
stos
scas
xchg
cmp
inc
pop
fbstp
lods
scas
push
xor
out
xchg
dec
testb
cmpsl
pop
jl
std
and
pusha
and
inc
dec
int
lret
scas
add
repz
xor
and
lock
lcall
fdivs
stc
mov
roll
dec
sti
jne
inc
push
ret
xor
pop
add
sub
inc
and
das
stc
call
in
sub
cmp
lock
jno
pop
pop
and
mov
jg
enter
shll
nop
clc
in
call
dec
frstor
cmc
int
inc
addb
addr16
jbe
sbb
sub
mov
sahf
sbb
dec
cltd
or
jp
inc
pop
xchg
jecxz
fs
xchg
xlat
cmp
and
lret
aas
xchg
xchg
ret
leave
sub
lret
mov
jp
mov
mov
add
shll
mov
push
or
out
dec
push
lret
js
movsl
push
add
iret
dec
leave
stc
mov
jno
je
mov
pop
repnz
mov
movsb
rcr
jecxz
mov
add
jne
fisubrl
push
adc
push
mov
xchg
shlb
cwtl
sti
sub
test
mov
or
cmpsb
jae
fwait
movq
or
cmpsb
into
out
stos
adc
mov
push
data16
in
and
scas
adcb
or
dec
out
pop
mov
xchg
push
pop
vpshaw
xchg
jae
ds
dec
and
or
in
outsb
cmp
push
sub
fisttpl
add
fisttpl
xchg
inc
pop
not
and
call
sbb
inc
inc
dec
jecxz
scas
mov
inc
repz
enter
scas
pushf
mov
cmc
or
sub
inc
outsb
xor
aaa
and
or
adc
pop
xorl
not
repz
cmp
repz
push
inc
imulb
adc
into
pop
dec
dec
mov
xchg
fimuls
cmpb
or
jae
leave
popa
dec
lret
in
out
push
fs
inc
and
je
mov
xlat
mov
mov
dec
sub
add
mov
sbb
pop
clc
movb
es
repz
xor
xchg
mov
fistpll
and
push
xchg
fadds
push
add
lcall
jo
xlat
dec
mov
imul
dec
andb
sub
mov
jb
shlb
cmpsl
sbb
mov
in
push
dec
loopne
popa
out
or
nop
push
add
xchg
movl
cmc
xchg
xor
lret
rcrl
pop
cmp
rcrl
xchg
xor
and
mov
ss
call
jmp
xchg
fldcw
pop
mov
add
sbb
mov
mov
push
in
jle
push
or
adc
inc
leave
aam
push
test
ror
push
mov
xor
or
cmp
ja
adc
jo
ja
jmp
pushf
jnp
jbe
test
mov
mov
mov
or
or
les
mov
pop
xchg
test
xchg
and
add
jb
ja
xchg
push
data16
inc
inc
call
cltd
fimuls
aad
pop
je
adcl
pop
stc
ret
mov
data16
movsb
lcall
sbb
jecxz
hlt
xor
adc
mov
loope
clc
and
jno
clc
pushf
or
pop
rcl
mov
ret
stos
mov
dec
outsl
or
push
nop
or
inc
mov
mov
iret
stos
jmp
xor
cs
enter
std
xlat
cld
and
push
pop
shll
ss
cmp
pop
cltd
int3
fsubr
or
cwtl
rcl
push
cmc
add
push
or
jmp
mov
and
mov
outsl
and
dec
cmp
and
and
mov
ltr
out
jg
mov
and
pop
or
dec
cmp
scas
les
lods
pop
cmp
push
bound
dec
adcb
pop
xchg
out
out
jae
inc
mov
jno
xchg
push
jnp,pn
xchg
and
adc
out
jl
sub
inc
popa
ljmp
or
call
sub
mov
js
sub
adc
xor
mov
mov
mov
cmc
ljmp
dec
negb
dec
jecxz
xor
cmp
xor
das
mov
movsb
fistps
adc
iret
cltd
xor
xor
mov
inc
btr
sub
push
mov
pop
jg
inc
inc
pop
div
add
cmc
pusha
in
mov
fwait
test
pushf
xorl
xor
repnz
xor
movsb
xor
lret
es
sbb
sub
or
xchg
and
cltd
aaa
xchg
mov
sbb
dec
fidivrs
insl
mov
ja
std
dec
bswap
xor
xchg
mov
jae
popf
sbb
out
in
xor
mov
fistpll
mov
dec
lods
aas
cmp
dec
pusha
push
aad
or
xor
stc
pushl
int
pop
add
dec
sub
mov
fwait
push
lds
jnp
mov
sar
xor
fldenv
mov
cmp
jo
imul
push
lret
daa
add
pop
pop
rcrl
mov
ss
and
xchg
adc
mov
sbbb
pop
mov
iret
xchg
arpl
pushf
test
test
mov
mov
lret
outsb
les
mov
outsb
mov
enter
in
jle
div
call
mov
lds
cmpsl
ds
into
dec
in
stos
sbb
scas
fwait
or
inc
fcompl
sub
xor
iret
jle
gs
fwait
sbb
push
sti
add
jge
aad
sar
rorl
dec
mov
mov
comiss
push
out
sub
xor
and
push
or
fistps
adc
data16
sbb
mov
repz
mov
xor
call
push
jns
notl
dec
scas
aam
push
enter
repz
mov
pop
dec
push
xchg
scas
stos
xor
push
push
pop
push
mov
sti
icebp
or
sub
in
pop
xor
mov
sub
aaa
scas
std
pop
xchg
add
in
jg
mov
xor
jmp
adc
mov
or
out
dec
imul
inc
jno
push
sub
push
pop
sti
push
add
fucomp
ss
jbe
out
mov
push
or
pop
cmp
cmpsb
enter
and
xchg
mov
cmp
test
sub
outsb
lds
add
scas
sub
mov
aad
cmpsb
insb
add
sub
dec
stos
leave
lods
mov
push
out
cmp
sbb
xor
sbb
push
mov
notb
jnp
outsl
testl
sbb
inc
gs
aas
add
jnp
sbb
clc
lods
clc
xor
js
arpl
push
repz
add
ficoml
int
add
test
clc
pusha
test
loopne
cmp
mov
lcall
mov
out
xor
shll
popa
outsl
lahf
or
aas
mov
inc
dec
mov
xlat
mov
outsb
mov
inc
shl
mov
jecxz
fs
mov
gs
ret
into
call
outsl
inc
fcom
mov
mov
cltd
push
pop
xchg
sbb
data16
filds
arpl
push
mov
cmpsl
mov
add
xchg
insl
lods
clc
and
loop
lds
aas
repz
jns
mov
xor
sbb
loopne
daa
push
scas
mov
jmp
jae
sbb
mov
fs
mov
push
aaa
mov
adc
cmpsb
xor
repnz
pop
out
orb
in
aaa
mov
push
fwait
mov
xor
bound
movsb
mov
xchg
mov
leave
xchg
or
sub
dec
lods
aam
jg
xor
push
sub
nop
adc
jbe,pn
pop
out
shlb
idivb
mov
out
and
fbld
or
repz
xchg
sub
pop
popf
test
js
imul
add
cmpsl
jne
call
jnp
fisttpll
call
sub
shrb
sbb
shlb
mov
pop
pop
push
pop
test
push
cs
out
hlt
sub
xor
fidivrl
fwait
pop
pop
hlt
or
rcr
push
xchg
or
xchg
fcomps
cmpsb
lcall
mov
sub
adc
xor
mov
sbb
add
out
hlt
mov
loop
outsl
sbb
mov
push
sub
mov
ljmp
loope
cmpb
inc
cmp
sbb
lcall
sbb
xchg
insb
stos
push
loope
call
sbb
shrb
sti
or
pop
xor
jno
push
imull
data16
test
ja
sub
sbb
or
jbe
add
sbb
test
rcrb
addr16
stos
sub
jg
ja
push
subb
xor
jne
or
or
call
mov
in
cmp
add
imul
cmpsl
dec
or
push
cmp
sbb
repz
call
xchg
pop
or
inc
fimuls
add
movsl
hlt
mov
inc
loop
dec
arpl
pop
inc
arpl
sbb
mov
daa
pop
push
mov
and
pushw
arpl
stos
jnp
out
mov
inc
in
pop
lods
mov
in
or
mov
add
and
mov
push
aam
fsubs
pop
or
jl
fldcw
inc
fmull
sti
mov
xchg
lea
lret
enter
test
xor
subb
xor
gs
out
pop
lea
bound
push
sahf
sub
stos
inc
pop
xchg
test
out
stos
cwtl
pop
push
or
push
mov
out
ficoms
adc
push
ja
mov
stc
mov
jbe
fwait
jmp
sbb
adc
lods
adc
mov
fs
hlt
ss
push
mov
imull
out
cmp
sub
ja
inc
jecxz
push
pop
xor
dec
push
mov
ljmp
pop
loopne
cwtl
add
mov
cmp
xor
outsb
sub
xor
or
gs
in
jbe
push
ds
daa
xor
mov
mov
rcll
xadd
push
mov
add
inc
mov
xor
or
mov
mov
in
cmp
cmovle
call
xchg
loop
push
inc
pushf
test
xchg
jp
out
or
in
adc
popa
dec
sahf
aas
insl
pop
mov
sub
add
pop
push
inc
iret
ret
out
push
mov
mov
xchg
pusha
jg
cltd
test
pop
xor
mov
pop
mov
fisubrs
cmp
jbe
nop
mov
xchg
pop
fs
daa
xor
mov
mov
pushl
fmuls
imul
sbbl
lods
jnp
leave
inc
ljmp
jl
jb
adc
sarl
mov
out
data16
cli
mov
arpl
fsubs
loop
sub
cli
xchg
fdivl
inc
and
mov
sbb
notb
cmp
in
sbb
sti
outsb
sub
xchg
data16
push
lock
push
andl
mov
fldcw
popf
jl
outsl
mov
add
xor
adc
sub
inc
mov
push
push
sub
test
icebp
sarb
fldl
arpl
and
pop
inc
rorl
mov
xchg
into
xchg
sub
xlat
cmpl
mov
push
stc
dec
sub
call
push
andl
popf
outsl
cmp
int3
fs
in
jmp
add
jnp
fadds
and
and
mov
push
push
fs
test
or
add
nop
cmpsb
or
mov
mov
cmp
pop
jmp
adc
or
and
out
cld
clc
jns
cld
inc
mov
loope
jne
aam
adcb
xchg
jle
mov
ret
xor
int3
mov
arpl
push
in
inc
cmp
rclb
adc
and
adc
jg
rolb
inc
push
mov
and
stc
jns
and
mov
cmpsb
ja
stos
shlb
jae
jo
jo
push
and
test
sahf
push
and
leave
pop
scas
iret
mov
mov
in
loope
sti
out
adcb
mov
mov
mov
xchg
insb
adc
les
push
xchg
cli
pushf
mov
scas
push
mov
out
inc
xor
push
cmp
cmp
jbe
jnp
fwait
in
jp
push
or
daa
data16
neg
je
xchg
ror
imul
mov
andb
cmp
out
sarb
mov
loop
jmp
dec
fsts
mov
aas
xor
fidivs
gs
cmp
jo
clc
loope
cmpb
fdivl
inc
js
mov
inc
stc
mov
mov
dec
push
xchg
push
mov
data16
popf
out
xchg
mov
xchg
fs
and
add
loope
test
fistps
and
add
sub
sub
insl
cld
or
mov
or
stos
pop
nop
imul
fstpt
imul
cmpsl
mov
jp
sub
jns
mov
or
adc
xchg
mov
hlt
mov
rcr
in
jmp
pop
cmp
sbb
lret
fwait
cld
xchg
push
repnz
xchg
mov
jp
pop
dec
lock
inc
pop
test
dec
xor
adc
lods
pop
cmc
cmp
pusha
scas
jp
push
xchg
lea
mov
sub
cld
cli
iret
xchg
inc
movsb
mov
sahf
mov
mov
fmuls
fwait
popa
mov
pop
jmp
push
int3
mov
cs
push
sub
mov
xchg
add
lahf
shlb
mov
mov
inc
shlb
sub
mov
int3
cmp
and
push
ret
cmpsb
idiv
push
popf
hlt
cmpl
inc
rcrl
stc
mov
mov
loopne
jae
ret
test
dec
jne
add
adc
sub
daa
push
fiadds
push
push
clc
lods
lock
das
fwait
cmpsl
cld
cmp
adc
sbb
inc
or
or
outsb
jbe
das
insl
push
pop
rolb
mov
dec
cmpsl
xor
andps
mov
xchg
cmp
jo
loop
adcb
sbb
cltd
pop
jbe
sbb
pushf
push
inc
inc
jb
mov
mov
xchg
push
or
repnz
push
enter
pop
sub
or
sub
or
xorl
xor
or
jmp
loop
cmp
leave
ds
pop
adc
and
sahf
inc
pop
popa
xchg
inc
cmp
and
pop
push
repnz
mov
cmp
xor
mov
ds
mov
xchg
xor
dec
mov
hlt
clc
test
fcompl
dec
subb
iret
xchg
idiv
jge
loop
dec
iret
dec
mov
push
ret
mov
dec
ss
inc
inc
adc
inc
test
mov
push
jg
test
std
lret
fistpl
cmp
imul
iret
mov
mov
sbb
cltd
movsl
mov
pop
push
in
push
pushf
clc
sbbb
mov
fidivrl
bound
and
jge
cmp
jb
fidivl
leave
out
mov
inc
sbb
stos
das
pop
cs
data16
push
lock
je
aad
sbb
ljmp
adc
mov
ja
lret
inc
std
push
jns
xor
in
mov
mov
lods
pop
dec
enter
sarl
popf
sbb
xlat
pop
mov
jbe
mov
popl
xchg
mov
lret
subl
jo
sbb
jae
stos
hlt
mov
inc
mov
adc
iret
aaa
fstps
std
adc
xor
orb
into
aam
sbb
adc
cmp
lods
mov
lds
ret
fwait
mov
repnz
lea
adc
pop
sbb
and
cmp
pop
fisttpl
gs
into
push
xlat
into
arpl
jne
pop
inc
fists
dec
movsl
or
fcomp
mov
pop
in
fcmovnb
mov
pop
inc
out
lret
fcoml
cmc
and
into
inc
mov
das
mov
mov
scas
fisubs
aas
push
adc
cwtl
add
xor
jmp
mov
push
push
dec
xor
mov
aad
mov
shll
fildll
xor
rolb
fsubrl
pop
int
and
dec
adc
fwait
sbb
inc
popf
je
stc
lret
sub
int3
pop
push
xor
loope
shll
rcll
dec
adc
scas
daa
inc
sbb
les
inc
xchg
movsl
mov
js
sub
ds
shll
in
jno
rcrl
dec
xchg
bound
xchg
mov
push
jge
bound
xchg
jns
push
repnz
loop
add
xchg
mov
js
sbb
out
pop
adc
bound
xchg
pop
mov
nop
pop
rolb
cmc
test
jmp
sbb
das
es
cmp
mov
cld
push
push
add
aam
adc
jnp
repnz
out
pop
sub
stos
inc
dec
pop
pop
mov
and
push
mov
inc
loope
pop
icebp
movsl
bound
mov
fwait
cli
popa
cmp
loop
add
movsl
mov
push
sarb
jp
cs
sub
sbb
out
arpl
mov
fcomi
stc
mov
lcall
ljmp
pop
inc
xchg
stc
dec
xchg
aas
sbb
push
jae
outsl
mov
fistpll
cmpsb
into
rolb
rorl
aaa
xor
jnp
scas
jae
fsts
mov
xor
mov
push
icebp
fs
inc
movsl
lock
mov
ds
cs
mov
out
cmpsl
scas
aas
mov
dec
mov
xor
out
pusha
xchg
popf
inc
adc
addr16
or
int3
insb
movsl
mov
inc
mov
mov
xchg
cmp
pop
mov
push
mov
mov
mov
inc
mov
or
cld
jnp
sub
push
mov
mov
stos
add
push
add
ret
mull
cmp
sub
and
sbb
cld
sbbb
stos
xchg
add
and
cmp
and
xchg
add
ds
les
stos
cmp
fdivs
rcrl
imul
lcall
mov
sub
add
ret
mov
xchg
leave
push
or
std
scas
cld
adc
enter
aaa
stos
stc
xchg
adc
xchg
pop
sbb
mov
loopne
loop
mov
xor
mov
pop
rcpps
jmp
ljmp
dec
mov
cmp
je
or
pusha
push
cmp
add
loop
xchg
jne
and
in
cmp
in
test
mov
jle
fidivrl
push
mov
add
lcall
inc
imul
scas
mov
inc
movsb
in
insb
xor
pop
lock
or
push
aaa
push
cmp
mov
xlat
ret
xlat
pusha
int3
sbb
sub
jns
pop
or
or
mov
adc
inc
repnz
push
dec
loop
lock
into
pop
xchg
cwtl
mov
test
xor
outsb
aaa
lods
pop
sti
clc
add
xor
sub
data16
idivl
stc
dec
jmp
adc
addr16
adc
aas
outsl
aad
mov
and
cmp
xor
adc
scas
aas
shll
lock
dec
cwtl
mov
fidivrs
cmp
sarb
insl
pop
mov
lea
dec
add
jno
inc
mov
jmp
fistpll
mov
xchg
shlb
push
loop
icebp
sar
add
jb
lea
mov
sbb
rorl
pop
fcompp
scas
mov
aam
pop
push
scas
mov
or
or
mov
outsl
jb
lea
pop
inc
mov
arpl
test
cmp
or
jl
repz
lea
lret
mov
lock
lret
out
sbb
mov
mov
insl
adc
inc
mov
daa
jp
adc
jl
repz
leave
inc
aad
pop
xlat
lds
jl
inc
pop
push
enter
lret
mov
or
xlat
xchg
dec
jle
cltd
sbb
or
fld
lcall
add
jmp
sub
aam
jecxz
mov
add
sub
sti
mov
mov
xor
fstl
push
xor
ljmp
add
test
leave
jnp
pop
push
dec
scas
outsb
inc
jb
js
mov
icebp
push
mov
and
sbb
dec
es
mov
push
lea
xor
xor
sbb
cmc
lods
out
or
push
ja
out
jo
loope
arpl
pop
fcmovne
addr16
scas
sub
or
dec
pop
push
fldenv
outsl
ret
sub
push
addr16
insl
jo
fcoml
jmp
test
sub
xchg
dec
in
test
xchg
pop
pop
mov
pop
push
push
jbe
adc
push
fsubs
mov
jmp
push
fsubl
mov
outsb
mov
jle
cs
cli
test
fimull
jno
push
xchg
mov
cmp
push
lret
hlt
cmp
jo
mov
hlt
shl
scas
pop
xchg
mov
xchg
int3
shl
lcall
jns
and
and
dec
mov
cwtl
mov
xchg
mov
dec
js,pn
les
nop
pusha
jmp
mov
mov
dec
loope
repnz
mov
int
add
adc
mov
pop
and
loop
inc
mov
ss
sbb
and
push
dec
fbstp
ljmp
add
xor
pmulhw
push
jmp
xchg
pusha
push
mov
in
outsb
fs
jmp
push
xor
out
in
ficoml
cwtl
pop
std
cmp
push
loop
ljmp
dec
sub
push
mov
jl
fdivrs
out
sbb
insb
pop
cld
sbb
lods
daa
scas
adc
dec
pop
jmp
pusha
add
jnp
or
sbb
test
bnd
xchg
mov
or
cltd
jg
aad
or
aaa
push
mov
cmpsl
and
popf
loop
push
or
adc
outsb
xor
adc
adc
ljmp
cmpsl
mov
ljmp
ljmp
or
mov
das
xchg
adc
add
push
xor
sar
sbb
test
push
rcrb
punpcklbw
inc
cs
xchg
mov
push
ret
sub
sbb
mov
xor
insb
rcrb
rcrl
sbb
mov
mov
xor
es
mov
xchg
adc
inc
push
inc
dec
insl
mov
rorb
sub
in
icebp
ret
lea
cmpsl
imul
adc
rcr
xchg
cmp
mov
inc
int3
push
and
mov
and
insl
add
pop
dec
inc
mov
jle
jmp
cmp
adc
xchg
mov
jne
cmp
fstl
popa
int
outsb
icebp
rcrl
add
mov
sub
cmp
add
sbb
jg
push
incb
out
nop
mov
daa
dec
sbb
xchg
xchg
cmc
adc
es
imul
mov
adc
and
mov
push
clc
jno
push
sbb
sbb
xor
popa
cmp
mov
test
pop
imul
xorl
loope
negb
pop
ljmp
inc
jo
pushf
pop
dec
fists
pop
ret
iret
dec
ja
add
adc
cld
inc
mov
xor
fs
iret
fsubl
fwait
push
mov
ljmp
roll
ret
jbe
idivb
mov
push
lahf
test
xlat
dec
lret
inc
sub
aas
sub
adc
mov
mov
cmc
inc
mov
clc
cld
int
sub
cmpsb
cmp
push
fwait
sub
jb
add
push
sub
mov
mov
rorb
dec
pop
lock
dec
aas
sub
repnz
or
mov
mov
shrb
pop
xlat
ss
push
jno
ret
mov
or
cli
mov
mov
neg
jp
adc
rolb
les
out
push
bound
push
loop
ds
outsl
cltd
movsb
mov
lret
add
xor
jmp
mov
je
mov
cmpsb
cs
and
xchg
push
cmp
sub
sbb
bswap
pusha
xorb
jl
mov
xchg
lods
aam
stc
xor
jmp
jbe
inc
repnz
xchg
inc
pop
cwtl
xchg
mov
test
fwait
test
lds
shlb
nop
test
popa
or
mov
es
andb
adc
cmc
popf
xor
push
imull
mov
dec
sahf
mov
jae
hlt
movsb
ja
dec
inc
mov
add
sbb
and
add
fwait
sbb
inc
mov
arpl
push
mov
addb
fstp
cmp
or
das
add
inc
mov
ret
xchg
xchg
mov
rolb
shlb
dec
aad
jecxz
mov
adc
mov
in
mov
dec
dec
push
enter
or
and
inc
test
outsl
out
test
cmp
hlt
mov
sub
repz
pop
movhps
sti
inc
cmp
dec
in
dec
pushl
arpl
add
popf
scas
ds
mov
mov
movsl
sub
or
dec
lock
add
cmc
insl
mov
call
xchg
gs
mov
mov
ret
sbb
cmp
mov
lret
inc
fldenv
mov
xor
sub
mov
mov
aad
stc
cltd
pushf
mov
mov
push
push
xchg
add
jno
add
movsl
or
cmpsb
push
pop
jae
into
daa
stos
les
cwtl
or
inc
and
aaa
sub
dec
leave
mov
fidivs
scas
xor
int3
mov
mov
mov
jo
push
outsl
insb
enter
add
arpl
imul
shlb
jnp
addr16
int
mov
pop
inc
ret
outsl
pop
loopne
inc
xchg
mov
or
shr
enter
jecxz
or
fs
and
cmpsb
shl
mov
pop
push
mov
clc
mov
pusha
sbb
push
jmp
inc
scas
xorl
fidivs
mov
cmp
dec
aaa
inc
scas
push
inc
leave
mov
cmpsl
sub
sbb
lea
loopne
mov
dec
aam
sub
sarl
xor
repz
shll
pop
sbb
dec
lods
mov
mov
es
int3
jge
not
rolb
sbb
or
mulb
jmp
cmpsb
aad
adc
sub
neg
movsl
sbb
cmc
roll
jle
clc
inc
bound
aaa
ret
ljmp
adc
cmpb
mov
push
fdivl
loopew
sub
pop
add
dec
cld
inc
jnp
dec
inc
adc
mov
cmp
mov
ljmp
xchg
jae
fdivr
imul
loope
or
xrelease
sbb
mov
test
add
cmpsb
add
xor
or
inc
mov
push
loope
test
pop
cmp
cwtl
fistl
je
daa
mov
ds
and
pop
cmp
jge
test
cwtl
addb
enter
jp
sbb
inc
jne
ja
test
sti
jmp
movsl
pop
push
pop
push
jo
pop
mov
cli
adc
gs
das
call
nop
ret
rolb
fdiv
lret
les
and
loopne
add
imulb
rorl
jle
inc
mov
mov
inc
fidivs
mov
outsl
mov
mov
mov
push
in
lret
jne
mov
adc
roll
adc
insl
scas
movsb
std
loope
mov
push
dec
rcll
adc
test
xlat
dec
negb
sbb
dec
in
mov
inc
out
ficomps
addl
loope
fwait
mov
pop
inc
es
inc
out
cltd
fidivl
xlat
aad
sti
cmovb
push
fistpl
insl
fists
leave
mov
aam
sbb
sub
mov
pop
sbb
and
adcb
ljmp
xor
out
arpl
nop
sahf
test
pop
sbb
int3
popf
add
ds
xchg
mov
aad
test
int
push
jmp
sub
fcoml
pop
inc
mov
shll
ss
movsb
movsl
push
pop
xchg
mov
or
pop
testb
incb
pop
in
nopl
dec
mov
cmp
out
cli
test
aaa
jmp
outsb
shlb
cmp
push
add
or
adc
sbb
add
cmc
mov
xor
inc
push
jne
ds
test
mov
aas
or
fcmovbe
xchg
add
es
cmp
rcl
and
icebp
mov
sbb
scas
mov
mov
pushl
xchg
fcoml
repz
bound
mov
pop
insl
movsl
adcb
sub
mov
add
adc
mov
xchg
or
into
or
and
fists
xchg
inc
mov
sti
in
imul
xchg
sbb
dec
loop
nop
mov
and
xor
adc
test
shlb
jle
cwtl
in
jle
mov
outsb
in
sub
rcll
mov
push
test
hlt
jne
cmp
movsb
insb
jns
xchg
ds
mov
loope
jecxz
mov
mov
push
mov
mov
iret
sub
cmp
es
mov
ss
cmpsl
jmp
arpl
ss
imulb
jo
jl
addr16
call
test
inc
scas
sbb
add
cmp
lds
call
cmc
or
pop
and
pop
and
pop
jle
pusha
stc
sbb
push
xor
mov
sbb
xchg
loopne
fisubrs
xchg
sbb
dec
popa
cmp
cmc
cmpsl
jge
das
xor
int
lahf
lret
mov
sarb
xor
loop
bound
out
sbb
push
push
jae
mov
imul
sub
sbb
fcomip
ficomps
rol
lods
es
sarl
aam
and
mov
pop
xchg
stos
into
jno
pushf
cmp
mov
lods
push
mov
int
xchg
mov
jmp
and
jmp
cmp
lods
mov
mov
outsb
lret
std
mov
leave
dec
and
in
rcrb
jl
push
sti
shlb
neg
sub
rcrl
pop
or
mov
add
dec
out
test
cwtl
inc
mov
jecxz
sbb
mov
arpl
cmp
pop
fcomps
popf
roll
pop
pop
into
or
movsl
aas
mov
mov
adc
sbb
xor
push
sbb
pop
ss
push
cwtl
xor
dec
jge
inc
sub
cmc
mov
xchg
or
addr16
cmp
or
das
in
xlat
lret
popa
mov
xor
xor
mov
popa
jbe
xor
test
mov
imul
mov
push
arpl
hlt
jmp
mov
jp
push
andl
ljmp
mov
cwtl
cltd
pop
xor
sub
fldcw
divb
lods
test
xchg
mov
push
addb
mov
in
cmp
cmp
outsl
sti
sti
sti
and
mov
addr16
or
sub
in
outsl
ss
ds
mov
fs
push
adc
stos
cs
pop
lret
push
lea
test
ret
scas
in
cmp
loop,pt
xchg
mov
fs
stc
fwait
out
pop
roll
sub
jge
push
push
adc
ret
adcl
fistpll
push
clc
mov
xor
hlt
adc
sbb
outsl
xor
xchg
and
aad
aad
ret
je
sub
push
jl
mov
clc
incl
arpl
or
data16
mov
xor
dec
sbb
sahf
loop
cli
mov
and
push
push
divb
movsl
mov
sub
in
mov
push
mov
out
or
pop
pop
test
sbb
push
mov
pop
cs
fidivl
out
adc
data16
fwait
cli
xor
adc
and
ss
xor
cli
jno
dec
lret
lahf
and
and
lret
lods
xchg
loop
add
or
arpl
insb
inc
cmpb
orb
in
scas
xchg
lahf
fnstsw
inc
xor
adc
pushf
insl
in
js
jnp
cmp
fbstp
sub
int
xchg
xchg
in
lret
cmovno
nop
sahf
outsl
leave
add
aas
jp
or
pop
out
or
or
add
pushl
mov
lock
mov
and
in
outsb
test
mov
dec
mov
jge
in
js
pop
out
lea
insb
sub
xchg
mov
or
sbb
in
sahf
adc
push
adc
dec
popa
ljmp
xchg
add
mov
test
scas
add
lea
je
push
pushf
xor
aad
mov
sub
shrb
les
jmp
xchg
push
aas
sarl
mov
lret
adc
dec
cmp
pop
addr16
push
or
pop
repz
xor
inc
push
clc
dec
cmp
lods
icebp
cmp
jge
popf
and
xchg
inc
mov
push
cmpl
loopne
dec
and
gs
push
pop
cmc
jge
lcall
and
push
and
into
test
fstpl
xlat
pop
daa
fisubrs
pandn
mov
addr16
iret
cld
movsb
sbb
add
repnz
pop
adc
repz
imul
les
jp
fistpl
or
cmp
inc
mov
dec
pop
xchg
lea
test
outsl
stc
outsl
fcoml
adc
or
inc
lcall
push
sub
adc
aas
lods
aam
filds
and
in
stos
dec
rcll
shl
sbb
xor
call
or
inc
jmp
jae
xchg
xchg
xlat
insb
xchg
xchg
sti
mov
imul
out
lret
mov
out
js
adc
gs
sbb
pop
aas
out
xchg
xor
das
mov
icebp
or
mov
popa
add
out
aam
and
jmp
mov
push
and
xchg
lods
cmpsb
lcall
mov
xor
push
nop
ljmp
es
fwait
push
push
outsb
lahf
pop
jno
xchg
aam
daa
sahf
shll
stos
addr16
lock
fs
ret
stc
leave
lds
outsb
insl
jl
dec
push
movsl
push
aam
inc
jmp
push
jecxz
mov
rorl
push
out
jp
jge
mov
clc
call
test
xor
and
adc
xchg
lds
sub
and
jnp
mov
and
xor
lods
sbb
pushf
ret
push
cld
movsb
mov
nop
adc
push
mov
scas
cmp
push
and
testl
out
ret
mov
hlt
inc
adc
mov
pop
and
not
mov
push
adc
xlat
fidivrs
loopnew
jb
and
dec
jmp
xchg
in
or
fldenv
and
add
cmpsb
ss
adc
loope
push
ljmp
dec
push
sbb
add
cmp
and
mov
popa
movsb
nop
je
int
ret
or
cmp
cmp
mov
repnz
mov
dec
dec
aaa
pop
ror
inc
lcall
adc
jmp
push
xchg
xorl
daa
pop
in
gs
mov
test
sbb
inc
mov
lret
out
mov
lcall
dec
xor
pop
mov
test
mov
loope
sub
dec
xchg
lods
fisttpll
fldcw
mov
xchg
push
dec
pushf
repz
leave
idivl
int
std
jg
mov
lods
xchg
inc
or
and
in
faddl
dec
std
out
enter
pop
sbb
or
cmpsb
sub
dec
mov
cmp
sbb
and
push
push
sub
push
push
push
sarb
adc
ljmp
mov
fwait
scas
testb
or
xor
dec
dec
dec
and
decb
adc
hlt
imul
data16
rcr
lahf
dec
xchg
sbb
das
pop
and
scas
dec
test
inc
inc
cs
and
lock
fidivrs
jns
mov
lahf
in
int
shll
ljmp
adc
push
in
and
popf
lds
mov
jp
test
inc
test
dec
mov
shr
cmp
inc
in
dec
fldt
pop
fldenv
loop
movsl
mov
xchg
push
mov
ja
das
imull
les
dec
movsl
xor
sarb
out
xchg
push
or
cwtl
sub
dec
pushf
out
push
xchg
or
scas
rclb
mov
frstor
insl
ljmp
mov
fistl
test
imul
inc
test
ret
daa
ret
je
add
xor
or
mov
jns
cld
sub
sbb
jp
mov
xor
out
fs
lds
test
jle
xchg
cmpb
mov
shlb
call
test
inc
add
pushf
hlt
sti
and
lahf
imul
inc
stos
js
xchg
inc
das
add
loop
in
into
jae
add
bnd
and
in
pop
cmp
ret
cltd
jnp
and
sub
push
pop
jmp
push
scas
xchg
add
or
les
inc
or
mull
fbld
xchg
shll
or
addr16
or
push
movsl
lea
add
sub
dec
lret
lds
sbb
lret
pop
into
nop
xor
push
adc
dec
dec
dec
mov
insl
mov
jecxz
add
add
add
loope
imul
loope
mov
fisttps
push
cs
xor
mov
pop
xchg
push
mov
inc
mov
mov
lret
mov
push
push
inc
adc
std
ljmp
outsl
sub
mulb
jp,pn
or
daa
out
outsl
push
dec
add
cmp
lds
repz
mov
or
pop
or
and
mov
dec
sbb
lahf
in
ficoml
sub
ret
int
outsl
push
cmp
xbegin
and
mov
cs
dec
jne
mul
and
xlat
xlat
pop
cmp
push
push
xor
mov
call
inc
data16
pop
addl
dec
ja
cmpb
or
lea
fsubrs
xchg
pop
mov
push
sbb
pop
pop
and
mov
ja
ds
mov
cmpsb
mov
push
das
adc
xor
jbe
or
mov
pop
mov
enter
push
sbb
sti
cltd
xchg
out
pop
push
and
daa
jb
call
jp
into
cmpl
mov
pusha
dec
inc
jg
sub
imul
fnsave
je
sar
cmp
inc
outsl
sti
out
dec
inc
imul
scas
test
out
test
test
dec
repnz
cmovl
movsb
imul
add
and
sub
decb
nop
rclb
cltd
jecxz
lods
in
cmp
adc
mov
sbb
sbb
scas
push
inc
xchg
sub
fistpl
stc
pushf
pcmpgtb
jb
fdivrl
sub
push
lods
sbbl
mov
xor
fists
and
pop
jl
lea
dec
mov
mov
xchg
clc
xchg
mov
mov
mov
sbb
sbbl
inc
cltd
xor
push
or
out
mov
or
fcom
popf
mov
inc
repnz
rcll
mov
call
push
mov
and
ffreep
mov
imul
stos
jne
xchg
imul
nop
pop
add
mov
push
shrl
outsl
in
mov
sbb
add
enter
or
cltd
add
sbb
lds
rcr
add
lea
les
popf
sti
dec
pop
addr16
and
lgs
mov
sbb
call
mov
or
orb
lds
aaa
fidivl
clc
push
stos
cs
inc
clc
mov
ds
xor
pushf
popf
pop
cmp
adc
mov
movsl
fnsave
fwait
sahf
je
cmc
int
sbb
insl
fsubr
jo
push
pop
xor
pushf
lret
scas
mov
push
fwait
dec
mul
add
iret
ja
adc
jmp
aas
or
into
scas
enter
jno
daa
in
lcall
aaa
lcall
leave
xor
mov
adc
or
jo
push
lock
xchg
int
push
scas
fmuls
les
sub
sub
jnp
cmp
andl
mov
push
sub
mov
cmp
jmp
push
mov
sub
jl
pop
xor
lds
cmp
jge
jg
cs
ret
dec
mov
inc
pop
and
sub
loopne
test
or
mov
cmp
das
dec
add
cli
cmp
push
sub
imul
pop
aaa
dec
push
sbb
xchg
mov
cmp
xor
mov
pop
xchg
xlat
xchg
mov
mov
mov
loope
jle
add
dec
enter
mov
rcrb
jne
jle
icebp
scas
inc
fwait
inc
adc
in
inc
das
test
fcompl
cltd
sti
xor
cmp
repz
scas
adc
sbb
inc
ret
xor
out
daa
call
cwtl
aam
mov
ljmp
loop
out
mov
mov
flds
out
push
je
jp
fs
xchg
jmp
pop
adc
and
sbb
jle
div
mov
clc
push
xor
jnp
xchg
cld
jne
jecxz
mov
aas
jmp
js
fnstenv
sub
dec
sbbb
mov
movsb
cs
pushf
cmp
jl
aad
mov
or
repnz
inc
push
ret
jne
sti
pop
aaa
jle
fisubrs
clc
push
cmp
pop
cmp
fisubs
cmc
imul
test
adc
jle
or
mov
arpl
ja
push
pop
les
mov
sub
enter
clc
out
test
outsl
mov
add
leave
dec
pop
sbb
pop
enter
mov
nop
adc
nop
mov
xor
jmp
lea
dec
out
mov
fwait
sub
arpl
adc
aaa
fdivrp
cs
cmpsl
stos
push
das
shlb
hlt
pop
leave
inc
andb
lods
push
out
push
shll
mov
ret
bound
adc
sub
mov
pop
cltd
sar
mov
dec
mov
xor
imul
movsl
in
xchg
pop
xchg
and
es
adc
icebp
shlb
cmpsb
sub
out
xchg
mov
push
lret
out
cmp
aas
and
jecxz
push
xor
jle
xchg
test
popf
mov
mov
inc
cmpsl
fcomps
xchg
cmpsl
decl
mov
mov
and
mov
jmp
dec
in
hlt
xchg
jno
jne
out
mov
add
mov
addb
jo
dec
cmp
mov
sti
jae
pop
stos
lea
jecxz
enter
scas
jne
pop
mov
daa
nop
lret
jl
mov
js
push
dec
pop
inc
out
xor
fsubl
sahf
fistpl
ljmp
jp
test
mov
jge
mov
pop
adc
xchg
mov
lods
std
stos
mov
pop
movsl
movl
cmp
mov
pushf
mov
movl
imul
jge
mov
int
out
sbb
or
mov
jmp
pop
mov
movsb
pushf
xchg
orps
jns
pop
lret
adc
loopne
sbb
sbb
mov
daa
or
fwait
xchg
loop
jg
sahf
jno
addl
sub
sbb
aaa
popa
mov
xchg
mov
lods
ficomps
push
pop
iret
mov
mov
dec
xor
push
testl
lret
mov
in
mov
push
add
cmpsl
push
sbb
movsb
addr16
leave
jae
call
mov
rcr
and
cmpsb
dec
xchg
add
lock
std
pop
loopne
push
mov
and
mov
je
dec
cwtl
jp
pop
or
test
rcrl
push
inc
inc
out
cmp
jmp
lcall
add
pushf
out
inc
inc
sbb
inc
pop
cmc
inc
sbb
or
shr
pop
cs
aaa
cltd
push
shl
xchg
xchg
adc
int3
roll
ds
leave
pop
xchg
cmpsl
mov
xchg
sub
dec
adc
mov
or
jmp
enter
sbb
jg
fsubrs
dec
cld
mov
shrb
ljmp
andb
xlat
mov
sub
jl
repnz
add
inc
ret
inc
jns
pushf
movsb
mov
jmp
insb
inc
and
in
inc
adc
jo
int
imul
cmpsl
loope
push
add
add
add
fwait
pusha
cmp
xor
jno
jmp
add
and
mov
insl
mov
idiv
jg
sbb
lret
cltd
pop
je
mov
push
adc
dec
mov
inc
jnp
adc
and
imulb
leave
repnz
outsl
push
lods
mov
jno
lods
xchg
and
and
cmpsl
mulps
push
jbe
mov
arpl
push
push
in
pop
push
mov
cltd
dec
adc
sbb
lds
mul
cltd
add
pop
iret
push
ficomps
subb
les
and
pop
lret
repnz
test
mov
shrb
sub
mov
xlat
push
sbb
jmp
test
xchg
xchg
fdivs
cmc
cmp
pop
cs
sub
in
jo
push
pop
out
loopne
xor
repnz
sub
orb
fistl
mov
dec
dec
lods
in
loopne
ds
outsl
popa
in
popa
push
cmp
into
pop
mov
aad
mov
fwait
roll
mov
ss
loop
pusha
mov
push
loope
xchg
mov
out
int
add
orb
sub
jge
outsl
cmp
push
xor
cmp
mull
mov
jmp
incl
push
mov
cmpsl
jo
dec
pop
popa
imul
outsl
push
inc
lods
bound
dec
push
scas
test
dec
in
jns
fwait
movsl
jb
sub
sub
mov
cmp
cmp
and
pop
mov
mov
mov
adc
sub
enter
jae
jge
repnz
jbe
and
mov
ret
in
xchg
addr16
repnz
outsb
test
cmp
loope
stc
sbb
dec
mov
fisubl
cmpsb
sbb
xor
adc
lcall
add
mov
fcmovbe
pop
sbb
std
push
popf
ret
dec
jl
push
mov
add
fbstp
add
or
and
leave
sahf
dec
and
rcrb
aas
jae
pop
aaa
add
outsl
pushf
sbb
adc
in
sub
mov
sbb
dec
rorb
inc
mov
lea
push
push
cmp
and
jmp
mov
xor
xor
in
sbb
scas
cmpsb
and
mov
and
adcl
jmp
test
or
and
jle
mov
cmp
xchg
sbb
rorb
testb
mov
cmp
jo
add
into
ror
dec
push
aam
repnz
lods
inc
jp
idivl
rolb
xor
jnp
inc
lret
mov
mov
insl
cmpsb
jp
addl
inc
insl
leave
inc
insb
popf
inc
sub
mov
add
xchg
sub
jno
sub
push
cwtl
lods
lcall
nop
rcrl
js
cmp
mov
ret
push
in
cmp
jle
mov
cmpsb
test
sbb
sub
mov
dec
push
call
aaa
xor
repz
movsb
mov
repnz
mov
xor
add
sbb
js
loopne
bound
mov
mov
stc
shrb
loopne
loopne
sub
push
test
leave
stos
add
cmpsb
aaa
test
and
sahf
mov
mov
ljmp
sahf
xlat
fmul
fldl
jl
xchg
or
lret
push
mov
pop
rolb
cmpsb
test
test
sbb
mov
pop
rorb
sbb
movsb
jne
inc
in
sub
in
inc
into
into
jecxz
pusha
and
fisttps
xchg
mov
repnz
in
mov
repz
aaa
cmp
inc
int
dec
insl
fwait
ret
dec
xor
movsb
enter
push
xchg
xchg
push
into
push
mov
xchg
inc
inc
sahf
loope
jmp
sbb
pop
fdivrl
fimuls
sahf
ret
jmp
stc
mov
inc
and
adc
test
push
jbe
fmull
ljmp
fcomps
mov
sub
add
cmpsb
and
out
bnd
inc
sub
cmp
sub
and
and
and
aam
iret
shrb
inc
dec
and
test
fidivl
adc
int3
mov
inc
xor
push
notl
pop
stos
cmp
adc
sub
cli
pop
xchg
scas
dec
push
xchg
pop
das
outsb
xchg
inc
clc
iret
pop
imul
pop
xor
jnp
std
cwtl
fwait
addr16
and
iret
adc
push
dec
push
jnp
scas
or
lret
mov
addr16
jl
mov
xchg
xor
jg
cmp
movl
pop
jecxz
pop
xchg
inc
sub
or
mov
push
popa
jae
ret
mov
mov
ja
std
xchg
xchg
out
mov
rolb
jnp
das
sbb
push
int3
cmp
mov
mov
jl
cmp
cmp
pop
cwtl
cmpsl
aad
test
xchg
mov
sti
leave
rol
mov
inc
jns
dec
adc
cwtl
adc
shr
jle
dec
push
in
mov
int
in
cmp
adc
xchg
lea
outsb
sbb
pop
mov
gs
adc
les
push
mov
adc
enter
popf
adc
aam
testb
daa
ja
xchg
int
mov
shl
mov
mov
add
mov
fisttpl
add
jo
xor
cmp
sbb
xchg
je
mov
xor
adc
jg
push
insl
fsubp
inc
jo
adc
decb
enter
xchg
adc
iret
insb
xlat
test
xchg
fstpl
push
fistpl
out
test
and
cmp
pop
jp
add
sbb
push
daa
out
test
rcrl
and
cmp
and
aaa
dec
arpl
fsub
inc
clc
lret
pop
dec
lcall
add
xor
jmp
scas
sbb
cs
cmpsl
in
and
cmpsl
arpl
cmpsb
repz
negl
test
or
pop
sbb
call
and
mov
adc
pop
mov
mov
xchg
dec
scas
jge
outsl
cwtl
push
int3
inc
movsl
jmp
imul
popa
mov
mov
icebp
push
fcoms
add
mov
pop
jne
mov
jge
and
cltd
push
jo
popf
pop
in
jge
test
cmp
sbbb
xor
xchg
lock
push
adc
mov
imul
rcrl
fcomi
add
sub
shlb
pushf
xchg
ret
sub
and
filds
xchg
pop
cmpsb
imul
lret
leave
pop
jle
in
mov
sbb
shlb
or
sbb
inc
adc
pop
push
out
or
or
hlt
sbb
cmp
and
jp
pushw
sbb
sbb
and
ret
jecxz
xchg
jmp
jmp
jb
lods
pushf
push
mov
ja
cmp
test
mov
pop
jp
cltd
insb
nop
lcall
imul
inc
sub
movsb
push
rclb
lods
mov
sub
sbb
or
pop
pop
inc
cs
mov
pushl
dec
xor
pop
scas
ret
ret
je
mov
std
stos
pop
fmuls
sub
sti
sbb
dec
add
test
mov
inc
ror
sbb
hlt
cmpsl
push
das
xchg
or
call
adc
dec
pop
enter
dec
ret
xchg
cltd
and
adc
jne
inc
les
inc
clc
pusha
enter
mov
adc
cmp
or
sub
inc
cmpsb
cmp
pop
bound
cmp
ret
fstps
mov
mov
rolb
push
xlat
lods
insb
push
mov
cmc
mov
subl
jbe
or
in
in
pusha
inc
adc
and
mov
test
xchg
addr16
add
test
xchg
xchg
sti
inc
cmp
mov
or
popa
in
xchg
sbb
add
loope
and
sti
cltd
roll
adc
push
xchg
fcmovnbe
jne
inc
rcrb
jge
test
bound
pop
adc
dec
sahf
fistpll
nop
loopne
pusha
xchg
or
xor
pushf
add
cli
push
into
jle
adc
mov
pop
les
xor
icebp
repz
pop
rcrb
or
movsb
sbb
push
cltd
pop
ljmp
pushf
and
popf
pop
outsl
dec
sbb
pop
movsb
loope
or
xchg
sub
dec
mov
mov
adc
test
lret
xor
pop
sbb
shufps
cld
pop
fstl
xor
idiv
mov
sbb
in
repnz
and
insl
test
loop
fwait
inc
or
and
sbb
and
mov
rcr
jo
cwtl
and
lea
xchg
or
xchg
test
and
insl
lock
out
adc
adc
or
lods
fisubs
cwtl
and
jge
jecxz
or
mov
jno
loope
sub
push
insl
mov
push
mov
out
in
cld
cs
mov
and
cmp
mov
xor
xlat
jg
push
or
sbb
jp
mov
inc
xchg
outsb
adc
ret
test
sar
dec
mov
and
push
cmp
cltd
pop
scas
int3
fistps
cmpsb
fildl
jno
call
popa
movsb
jp
sahf
out
mov
rorl
rcll
push
and
decb
sbb
imulb
or
data16
sti
dec
cmc
pop
mov
or
sub
call
xchg
aaa
test
aam
jecxz
mov
addr16
push
fdivrs
or
das
pop
sti
lret
fisubrs
cmp
push
push
xorl
push
mov
fidivrs
aaa
inc
jne
fwait
ss
inc
dec
test
daa
jp
ss
lea
mov
pushf
pop
ds
stos
mov
sbb
cmp
xor
mov
in
fsts
push
push
mov
in
fisttps
push
shlb
jbe
cwtl
shlb
pushf
mov
xchg
aas
test
mov
xor
dec
xor
loope
daa
push
daa
jne
jp
xor
arpl
imul
or
jle
xor
xchg
inc
lods
das
lea
adcb
outsb
loope
pusha
pop
aaa
pop
nop
iret
or
push
push
imul
sahf
cmpsb
lcall
icebp
cmp
adc
jbe,pn
mov
fadds
call
xchg
sub
inc
jo
and
cmp
ds
push
jno
test
fldl
clc
ror
lret
cld
cmpsb
pop
xor
out
pushf
jb
push
cmp
clc
mov
out
pop
pop
scas
lds
ss
int3
adc
xchg
cmp
push
inc
mov
mov
repnz
adc
cwtl
sub
pop
lret
jecxz
xchg
add
nopl
xchg
pop
push
inc
frstor
icebp
dec
unpcklps
xchg
int3
sbb
rorl
test
cmp
adc
out
adc
test
lock
pusha
inc
in
inc
sub
rep
mov
inc
sub
cli
insb
adc
iret
adc
pop
and
daa
xchg
bound
mov
insb
xchg
ret
push
inc
mov
dec
decb
in
lock
adc
in
cmovl
out
jl
rorb
fistl
ret
mov
aaa
in
mov
and
lret
lods
mov
loopne
sbb
dec
xor
test
lock
sbb
test
jle
xchg
je
inc
decl
stos
inc
cmp
in
xor
lods
and
xchg
and
jp
fimull
dec
test
ja
sahf
lock
jne
movsl
insb
insl
out
push
outsl
add
cmp
adc
mov
rorb
xchg
xchg
clc
adc
xchg
or
loopne
add
popa
lea
dec
inc
adc
inc
in
push
xchg
movsb
mov
xchg
cmp
es
movsb
out
cmp
mov
in
fs
or
stos
mov
out
add
cmpl
orl
paddsb
ja
fldt
in
fistpl
xor
mov
inc
cmp
xor
push
stos
sti
push
pushf
pop
mov
sbb
sahf
jne
push
lcall
shlb
push
mov
jp
or
push
sbb
jbe
push
fcmovu
rorb
in
or
ss
adc
add
int
stos
shlb
rcrl
pop
mov
xor
test
push
packssdw
sub
xchg
stc
mov
mov
dec
fmulp
cmp
insl
lods
xchg
std
jno
pop
dec
sbb
push
cli
inc
sub
js
push
ljmp
lods
mov
inc
xchg
stc
cmp
adc
jno
sbb
sarb
fmull
rol
in
test
jecxz
dec
aas
mov
aad
clc
jb
cwtl
mov
inc
fistps
subl
xchg
cwtl
mov
mov
push
out
adc
add
mov
cmp
repz
mov
std
jp
cmp
inc
add
push
mov
and
push
jle
jge
stc
mov
adc
xchg
rcrb
mov
jns
jo
in
mov
and
pop
jp
leave
mov
inc
pop
and
sbbb
pop
sarb
jmp
lds
xchg
and
icebp
insl
loopne
xor
lods
cld
jne
divl
mov
dec
loop
add
pop
or
outsl
test
inc
dec
das
xchg
push
adc
sub
stos
sbb
lcall
das
cmpsb
xchg
cmpb
ret
adc
push
sub
jmp
gs
fidivl
int3
sahf
dec
pop
and
scas
mov
neg
cs
or
sbbb
outsl
lret
fistpll
adc
mov
andl
sarb
mov
pop
jp
stos
movsl
aas
xchg
aad
sbb
mov
xor
jmp
pop
repz
mov
sub
push
in
mov
call
cs
cmp
or
sbb
inc
cwtl
pop
in
pop
daa
sar
cli
mov
mov
xor
test
lcall
dec
and
in
jp
xor
inc
sub
push
aad
pushw
pop
out
lret
dec
in
push
xor
mov
mov
add
movsb
inc
mov
sbb
inc
adc
mov
or
test
mov
incl
sub
push
xchg
or
push
js
mov
jle
mov
adc
aaa
xlat
adc
in
fsub
mov
xor
push
sub
in
jns
and
movsb
test
xchg
sbb
enter
in
dec
mov
mov
push
not
aad
std
mov
in
push
scas
inc
and
mov
inc
test
mov
xchg
repnz
popf
jg
rcr
lods
in
imul
mov
jns
cmp
pop
xor
mov
out
int3
in
jnp
lea
orb
aaa
inc
mov
insb
and
popa
repnz
cwtl
push
dec
enter
mov
sbb
adc
cmp
xchg
xor
rcrl
mov
aaa
xor
sbb
ja
dec
xor
push
cmpsl
jg
sarb
popa
mov
inc
sbb
sbb
mov
rcrb
pop
clc
ret
sbb
test
add
call
mov
ss
lods
mov
xchg
xor
mov
out
shrb
xchg
lret
mov
das
pusha
xchg
daa
xchg
xorb
pop
into
and
fwait
xorb
adc
jb
pushf
into
fsubl
cs
inc
and
cmp
lock
ss
sub
aam
cmp
mov
hlt
addr16
mov
add
das
cmc
fnsave
jmp
adc
add
repz
mov
into
push
xchg
jo
addb
add
test
stos
jg
dec
fwait
mov
pop
or
or
scas
mov
icebp
sbbb
dec
push
scas
nop
frstor
sti
and
push
dec
add
xor
lods
cmp
and
mov
outsb
adc
ret
and
scas
and
jns
les
mov
hlt
jp
push
sbb
lock
jbe
movsl
mov
ja
cmpsb
test
mov
mov
cmpl
add
mov
sahf
mov
mov
mov
lcall
push
pusha
sbb
dec
pushf
fs
movsl
or
mov
xchg
ds
mov
inc
jl
pop
mov
insb
movl
call
adc
rorl
dec
mov
shrb
or
jl
mov
cmovs
js
in
imul
mov
lods
mov
add
mov
dec
xchg
rcrb
ss
cld
sub
mov
int3
mov
ja
mov
add
sub
leave
in
push
sbb
popl
aam
rcrl
add
mov
faddp
sub
sub
cmp
mov
mov
fildl
fdivl
ret
scas
xchg
fnsave
jb
aaa
and
adc
out
and
bound
addr16
adc
insb
fstpt
adc
push
aam
outsl
scas
int
xchg
sub
movb
insb
mov
lea
push
xchg
popa
xlat
test
jge
push
mov
lock
out
call
push
xor
lods
inc
mov
daa
lea
mov
rolb
imul
out
pop
scas
push
mov
xchg
sub
pushf
in
or
mov
and
lock
testl
aaa
and
testl
stc
mov
mov
inc
fdivrs
insb
pop
or
add
test
cmp
mov
cmp
cmpsl
aad
lods
call
int
inc
adc
fptan
and
lea
jle
mov
or
inc
xor
iret
mov
mov
lock
push
repz
sarb
daa
jo
and
push
adc
cmp
fimull
inc
push
adc
daa
push
cmp
jle
aad
cmc
insb
push
xor
je
test
xlat
test
adc
sbb
push
stc
jno
add
push
add
inc
or
and
fstp
iret
adc
loope
sbb
lock
in
mov
mov
mov
in
cs
mov
inc
jns
leave
lret
dec
inc
stc
fnstenv
push
shl
test
scas
test
mov
pop
popf
add
dec
ret
insl
rcr
pop
decl
outsb
loopne
inc
in
je
xor
push
pop
mov
mov
pop
xor
adc
lods
mov
add
fnstcw
inc
add
mov
jge
or
add
mov
jp
les
repnz
aam
xchg
in
popa
hlt
cmc
js
iret
sbb
imul
mov
mov
sbb
loope
nop
clc
daa
in
ljmp
mov
mov
cmp
inc
daa
mov
xchg
lods
inc
xor
mov
and
test
push
jno
outsb
je
inc
orl
mov
int3
pop
jmp
ljmp
loopne
xor
dec
inc
adc
mov
lahf
jno
dec
pushf
mov
nop
pop
xor
add
push
or
scas
xchg
adc
and
sbb
daa
mov
out
addr16
or
dec
mov
and
cmp
push
jle
sbb
popf
test
push
outsl
or
push
adc
or
sbb
xchg
movsl
pop
rorb
mov
jns
test
imul
rcrl
mov
out
or
test
enter
lods
insb
jb
mov
jo
in
mov
out
xchg
cwtl
into
roll
push
daa
push
repz
and
dec
pop
add
test
fmul
sbb
push
push
repz
mov
stc
push
imul
add
pop
mov
inc
scas
nop
dec
cmpsb
repnz
or
fwait
mov
xor
movsl
mov
test
repz
pop
js
pop
cmp
ds
gs
jns
cld
daa
jle
sbb
subl
jecxz
pusha
jp
test
insl
adc
add
adc
out
cmovge
into
sub
into
aam
mov
out
cld
xor
hlt
in
mov
jns
mov
mov
add
inc
pop
mov
es
xchg
xchg
push
or
jae
pusha
lret
pop
cmp
out
jle
addl
ror
jns
pop
mov
lods
lock
int3
xchg
jp
mov
jno
out
int3
gs
insl
out
loop
jp
add
bound
nop
mov
add
or
ret
out
je
push
es
hlt
sub
inc
or
cmp
int3
pop
mov
lods
fstps
outsl
xchg
mov
cld
call
mov
fidivl
xchg
jo
test
sbb
push
adc
into
sbb
or
or
mov
das
jmp
cmp
mov
sti
adc
inc
dec
sub
jle
movsb
enter
mov
pop
enter
hlt
xor
and
sub
in
sub
jl
inc
inc
cmpb
push
xorl
add
loop
xlat
test
pop
or
repnz
test
or
cld
ja
lcall
lods
scas
mov
jmp
sbb
lods
jo
mov
jg
pop
xchg
cli
jecxz
jp
ds
loope
push
nop
jbe
rcl
dec
jg
cmpsl
jbe
insl
popf
inc
xor
mov
ja
in
mov
lods
pushf
mov
or
arpl
push
flds
test
ja
xchg
mov
dec
cmpsb
jnp
or
fsubl
xor
xor
xchg
and
repz
mov
fstpt
stos
cmp
jae
lret
jno
jl
sbb
sbb
push
orl
pusha
jecxz
push
adcl
jns
aad
sbb
scas
out
mov
inc
mov
mov
lods
stos
push
call
fisttpl
dec
dec
mov
dec
pop
cmpsl
loop
int3
fimull
cmp
mov
imul
popf
popa
ss
daa
dec
out
imul
sbb
addb
icebp
cmp
sbb
sti
sub
inc
outsb
sbb
btc
ljmp
dec
and
cmp
outsl
mov
mov
sti
out
gs
jl
adc
lahf
dec
push
mov
lock
xor
mull
sbb
sqrtps
sbb
icebp
subl
cltd
pop
mov
test
cmc
cld
and
movsb
inc
sub
ja
aaa
xchg
sahf
bound
shll
mov
or
jno
je
fmull
jl
add
jbe
cmp
fneni(8087
imul
push
lret
xchg
hlt
sub
insl
xor
pop
mov
and
cmp
fisttps
mov
sbb
call
std
and
mov
xor
xchg
or
les
adcb
pop
outsb
nop
inc
inc
adc
mull
mov
xor
cmpsl
dec
push
cmp
aas
rcr
sub
sub
insl
ljmp
cli
loop
inc
add
xor
jno
or
pop
insl
loope
pslld
inc
aam
pop
int3
addr16
outsb
rorl
shrl
inc
xchg
mov
in
shll
sbb
pop
into
mov
xchg
lea
pusha
pop
arpl
xchg
jge
and
mov
and
push
lea
sub
das
push
cmpsl
addl
push
inc
imul
push
mov
pop
mov
xlat
loop
and
fs
sbb
fsubrl
fwait
pushf
aaa
mov
or
nop
jl
jge
imul
das
mov
xchg
int3
inc
jo
or
pop
fdivr
jp
xor
jnp
mov
jl
adc
in
iret
loopne
test
jno
push
aas
mov
popf
mov
lahf
pop
adc
imul
mov
cmp
adc
mov
fucompp
inc
xchg
xor
mov
mov
pusha
cli
mov
pop
cmp
adc
std
pop
jbe
sub
shll
sti
jnp
imul
and
iret
inc
prefetch
dec
and
adc
cmp
stos
aaa
pop
push
jmp
lods
jle
test
in
add
or
fwait
imul
adc
scas
shl
jg
hlt
jecxz
je
inc
adc
test
mov
lds
fsubs
inc
icebp
inc
cmp
out
or
push
bound
nop
xlat
stc
cmp
xchg
mov
add
mov
scas
and
lea
jp
idivb
aad
push
negb
cmpsl
jns
imul
lret
sbb
pop
mov
nop
outsb
xor
push
cmpsb
lods
jp
dec
in
push
int3
out
add
fst
neg
cwtl
and
adc
dec
push
bound
adc
add
lcall
cmc
xlat
cmpsl
outsb
out
popf
les
jl
mov
push
xor
xor
adc
xor
int
jge
shl
sbb
sbb
rolb
inc
cmc
cs
dec
fbld
push
pop
cvttps2pi
sahf
xor
out
fcmovb
push
int
sub
movsl
inc
cmp
mov
loope
xchg
loope
and
aam
call
lcall
stc
xchg
add
pop
aas
or
movsl
fwait
loopne
js
js
out
dec
psrlq
or
jns
add
push
jno
sub
sub
jae
push
mov
ss
dec
or
int
daa
cwtl
mov
enter
imul
sbb
sbb
mov
jmp
adc
mov
mov
cmp
out
imul
jo
pop
fistpll
inc
adc
inc
jle
or
shlb
xchg
pop
mov
movsl
cli
sub
repnz
mov
add
or
or
adc
or
mov
pusha
repz
and
fcmove
dec
movsb
sub
out
pop
es
push
xchg
pop
insl
lret
xchg
sbb
and
inc
fsubs
out
mov
mov
xchg
test
mulb
icebp
mov
or
jle
je
push
sub
jp
xor
lcall
insl
jecxz
bound
ss
mov
sbb
aas
repz
in
sahf
and
jmp
out
push
in
add
rorl
push
dec
imul
jnp
mov
ret
lret
aaa
adc
sbbl
inc
in
mov
ds
call
cmp
xchg
jmp
das
movsl
fcomps
stos
addl
xlat
loop
adc
fwait
cmp
mov
sbb
ss
xchg
cld
outsl
out
inc
lret
mov
fsubp
cmc
ljmp
xor
daa
cmc
inc
mov
loope
insl
sub
out
ljmp
repz
das
sbb
testl
sub
ds
add
push
rcrl
inc
in
enter
hlt
jle
push
es
int
dec
pop
ljmp
repz
pop
adc
lock
mov
inc
mov
iret
mov
push
cmp
jl
fstpt
fistpl
add
addr16
aam
or
xor
testl
mov
cmpsb
pop
add
mov
jno
out
test
and
imul
sbb
andb
imul
dec
and
or
add
inc
add
das
jae
fcmovne
loopne
push
lcall
pop
lea
lods
ret
jne
jp
lock
unpckhps
dec
je
cltd
shll
inc
cmp
lcall
xor
adc
fdivs
push
mov
inc
mov
jecxz
movsb
iret
jge
bound
pop
cmc
fstpt
or
aaa
movsl
push
aaa
or
aam
sub
and
sbb
aam
mov
adc
aam
pop
mov
sub
dec
dec
push
movsb
fst
mov
mov
inc
and
lods
fiaddl
adc
xor
cmp
xor
cmove
cs
pop
les
mov
mov
pop
in
sbb
adc
jmp
scas
cmpsl
add
lret
movsb
pop
pop
mov
jbe
sub
fnstenv
push
in
int3
lret
sub
xchg
arpl
fnstcw
mov
pop
orl
insl
daa
jge
andb
mov
and
mov
push
lret
adc
fldenv
sbb
fstl
ds
adc
cmp
popa
stc
mov
jae
pop
pop
mov
or
or
pop
pop
xor
add
pop
xor
pop
lret
sub
push
fimuls
decl
mov
ss
enter
aam
adcl
or
es
leave
pop
pop
xor
or
into
dec
getsec
lret
sbb
pushf
jae
lea
cmp
cwtl
pop
dec
push
lret
xor
adc
jecxz
loop
rclb
rorl
xchg
cmpsl
ror
mov
les
adc
cmp
lods
jbe
xlat
hlt
adcb
cltd
adc
ja
cwtl
pop
mov
clc
aam
inc
adc
filds
xorb
and
or
xchg
cmpsl
out
cmp
jge
mov
mov
cmpsb
xlat
cmpsb
mov
jp
or
ja
xor
lahf
push
stos
testl
dec
xor
mov
push
adc
jp
ljmp
repz
xchg
lret
cmp
mov
pop
out
push
notb
jne
je
or
data16
fwait
out
jmp
add
pusha
dec
int3
xchg
xchg
fucom
adcl
push
sub
add
ret
jbe
sbb
inc
or
and
xlat
je
xchg
fcoms
lret
mov
cmp
mov
notl
mov
push
pop
es
ja
fistps
push
lods
nop
inc
repz
xchg
or
xchg
hlt
mov
cmp
lock
lock
loop
cs
push
rclb
xchg
add
inc
out
add
xor
mov
fcom
push
inc
test
add
imul
lret
cmp
jb
lods
fwait
sub
or
cmc
inc
in
es
inc
popa
call
lret
aad
sbb
cli
mov
mov
jbe
fwait
test
xor
cltd
mov
mov
dec
mov
aad
add
mov
jle
dec
sbb
or
ret
rcll
mov
mov
and
aam
filds
test
mov
subb
not
and
lcall
movsb
ss
int3
in
jecxz
mov
cltd
xor
push
mov
sti
push
insb
scas
imul
mov
xchg
xor
adc
sub
call
jg
cs
pop
outsb
and
push
sahf
pop
mov
pop
test
cmp
repz
jo
jg
mov
jns
sbb
xor
punpcklbw
mov
cmp
jle
pop
dec
ljmp
push
adc
cmp
push
loopne
dec
xchg
in
push
and
mov
rcrb
sbb
cmp
loop
jmp
test
jmp
mov
jns
pop
mov
dec
call
stos
mov
mov
lahf
inc
xchg
out
stos
rcr
divl
jecxz
cmp
lret
loop
ficoms
fldl
imul
xchg
cmp
mov
mov
inc
dec
pop
and
mov
adc
stos
push
sar
inc
xchg
popf
mov
fisubl
shl
hlt
je
add
mov
int3
mov
subl
mov
enter
ret
jne
mov
nop
repnz
sub
pushf
iret
data16
push
hlt
dec
roll
out
int3
dec
jg
int
add
sbb
idiv
daa
roll
jnp
mov
mov
lret
shlb
fwait
mov
jno
adc
cmpsb
out
jno
jg
pop
in
aam
rcrl
xor
push
sbb
inc
xchg
fs
dec
mov
ficomps
sub
aaa
ficoml
jbe
sbb
mov
add
dec
jo
jmp
pop
daa
adc
pmaxub
sbb
or
in
stos
sbb
mov
push
mov
sub
in
jmp
ja
movsl
or
pop
sbb
out
push
daa
bound
or
mov
push
lock
xchg
lds
sbb
or
cwtl
push
loop
push
adc
sub
and
loop
test
mov
mov
pop
cwtl
mov
adc
mov
nop
ds
ja
mov
dec
dec
mov
sti
push
push
mov
cmp
jnp
stos
or
mov
xor
push
adc
xchg
pop
inc
xchg
adc
addr16
and
push
jae
ficoms
inc
mov
fsubrl
pop
push
aas
inc
insl
pop
xchg
add
xchg
jge
insb
xchg
outsl
cmp
pop
mov
dec
lods
test
adc
jno
add
pushf
xor
stc
or
push
and
inc
mov
sub
add
andb
idivl
sub
hlt
out
add
and
mov
adc
adc
js
mov
dec
jmp
jecxz
fnsave
lahf
out
cmpsb
scas
sti
call
pop
push
lahf
jecxz
repnz
std
and
ret
test
cmpsl
testb
mov
cmp
arpl
test
sub
pop
mov
rorl
pop
fld
sub
insb
and
push
nop
cmp
pop
fsub
nop
mov
popa
ja
inc
mov
jmp
pop
dec
sub
inc
push
in
loope
movsl
sbb
jnp
dec
jmp
sub
lock
imull
int
mov
setbe
cmc
pop
icebp
aaa
xor
insl
mov
lock
outsb
loop
xchg
loope
inc
sahf
fidivrl
push
das
sbb
xchg
bound
mov
inc
test
pop
inc
pop
pop
mov
movsl
jns
pop
adc
repz
push
outsb
repnz
mov
test
push
inc
mov
xchg
mov
adc
mov
mov
mov
pop
fbld
scas
call
pop
sbb
jbe
leave
cltd
add
mov
leave
mov
cmpsl
test
andb
dec
push
test
orl
loop
mov
hlt
sbb
gs
ret
popa
jmp
inc
andb
lods
mov
jl
out
dec
adc
mov
and
sub
and
popf
in
jno
cmp
sbb
cmpsb
fs
out
mov
jbe
mov
mov
or
sbb
cltd
jne
cmc
xor
out
scas
movl
fcompl
repnz
push
jae
inc
jo
sahf
lcall
add
cli
xchg
push
dec
loope
sbb
fwait
loop
and
stos
shl
inc
add
imul
hlt
add
or
fsub
popf
fucomip
rcrl
popf
hlt
add
repnz
mov
loope
mov
adc
dec
sbb
xchg
das
xchg
call
mov
scas
pop
data16
mov
xchg
cmpl
and
sbb
pop
cmpsb
dec
xchg
test
push
leave
popf
or
cmp
jle
orb
xor
mov
ficompl
jp
icebp
xor
cmp
xor
xlat
dec
xor
jge
jnp
les
cmpl
xchg
inc
clc
lods
out
push
lcall
cmpsb
nop
cmp
repz
call
pop
repnz
pop
cmc
sti
inc
mov
lods
je
xchg
cmc
imul
gs
adc
xchg
xor
jns
sub
lret
jle
popf
loopne
sub
shl
incl
lds
adc
adc
adc
ret
incl
idivl
lods
pusha
pop
mov
ds
imul
addb
rorl
es
cmpsl
jp
jle
cmp
push
rcrb
push
lret
pop
mov
push
or
iret
inc
bound
sbb
sahf
sub
and
add
mov
das
sbbl
repnz
mov
lods
push
mov
imul
push
inc
jbe
inc
and
add
lret
cld
jmp
xor
push
mov
mov
jnp
jns
insb
or
inc
xor
add
popa
rcrb
loope
pushl
inc
push
lret
sbb
jbe
pop
and
mov
shr
fwait
lahf
sbb
mov
roll
adcb
dec
imul
xchg
xor
xchg
or
shll
je
insb
jge
inc
or
sub
jg
cmc
cwtl
lock
cmpsb
mov
out
push
out
xchg
aad
iret
cmp
mov
lods
push
sbb
lcall
scas
sbb
dec
xchg
ljmp
mov
pop
sub
cmp
sbbl
mov
pop
shll
push
outsl
xchg
mov
dec
iret
sbb
mov
mov
push
daa
addr16
scas
fbstp
push
xlat
and
and
jnp
lret
dec
lahf
lds
shl
push
push
cmpsl
call
fcomps
or
mov
add
mov
dec
mov
xlat
or
sub
loop
adc
ret
or
mov
jne
dec
cmc
pop
lret
dec
jp
je
mov
arpl
push
cs
mov
insb
cwtl
mov
stos
fistl
xchg
aam
addr16
cmpsl
mov
jmp
bswap
shll
jp
push
iret
lea
adc
fwait
pop
lods
addb
clc
adc
dec
adc
dec
outsl
loope
andb
lods
jb
fnsave
and
inc
lret
and
leave
adc
sbb
add
mov
sub
mov
int
loopne
dec
push
mov
or
mov
test
mov
adc
push
cmpsb
or
pop
jg
test
mov
test
fistpl
jb
icebp
jno
std
lret
mov
das
dec
inc
mov
cmpsb
add
sahf
in
jb
mov
pop
shrb
leave
push
sbb
sub
mov
lcall
gs
nop
or
sub
add
sbbb
xchg
xchg
ljmp
loope
push
in
ljmp
xchg
sarl
push
inc
lds
xchg
sub
adc
add
lock
fcoms
push
sub
push
lret
les
std
out
mul
cmp
mov
ret
repnz
mov
xchg
loop
sbb
shr
sahf
or
ss
gs
lods
jl
jns
sbb
and
mov
mov
inc
xorl
shll
out
push
shll
jmp
push
sub
lcall
ds
mov
mov
insb
lret
jae
inc
ds
and
push
jns
mov
lock
cwtl
scas
test
stos
push
pop
mov
cmp
cltd
ja
or
jae
lock
test
pop
pop
or
lds
clc
xor
sbb
xchg
leave
add
cltd
fiaddl
add
movsl
dec
mov
jle
shl
mov
insl
imulb
jnp
fwait
lock
push
rcr
mov
xor
sbb
in
xchg
cmp
repz
repz
push
stos
fcomps
sbb
in
ljmp
lahf
jne
lahf
rclb
into
jge
jmp
negw
cld
pop
sbb
inc
movsb
pop
inc
mov
mov
sub
pop
mov
jb
and
cmpsl
aas
rcrl
aam
dec
sbb
xchg
ja
dec
jnp
push
adc
in
imul
fmul
sbb
cmp
ffreep
lds
sbb
stos
hlt
xchg
loopne
jp
test
adc
test
enter
call
and
cmpsb
fidivrl
loop
lea
leave
aas
aad
lods
cmc
ljmp
fldt
pop
ljmp
push
cmc
arpl
arpl
adc
movsl
into
push
mov
imul
sub
je
or
add
cwtl
jne
cmpsl
cmp
or
scas
xor
adc
or
movaps
lahf
mov
mov
jmp
ja
cmpb
mov
jmp
popf
mov
testl
fs
or
testb
mov
sub
inc
inc
addl
cwtl
cltd
stc
lret
cmp
push
jno
in
addr16
and
push
inc
shrl
pop
popf
sub
and
div
test
sub
lahf
sbb
fcoms
popf
in
in
sbb
int
mov
int
mov
mov
adc
or
adc
sub
loope
push
inc
hlt
cmc
hlt
sbb
outsl
movsb
lods
aas
lods
imul
fimull
jp
jmp
mov
mov
push
clc
lods
cmp
jmp
dec
xor
add
cwtl
inc
sti
incl
and
lahf
cmp
std
cmpsb
sbb
mov
jge
scas
cltd
jmp
in
mov
and
jl
cmp
int3
ja
outsl
and
pop
divb
loopne
sub
incb
lcall
in
out
inc
jecxz
add
xchg
int3
xor
rol
enter
je
adc
push
cmp
cltd
xlat
into
fisubl
pcmpeqw
mov
pop
xor
in
mov
lds
push
and
sti
add
lods
loope
insb
xchg
in
daa
push
jmp
out
jge
cmp
adc
lock
inc
cwtl
jmp
arpl
adc
pop
add
fs
inc
xor
aad
mov
call
sub
mov
scas
dec
jecxz
or
adc
lock
mov
hlt
mov
stos
in
push
popf
shll
sub
sbb
mov
jne
push
repnz
push
mov
inc
mov
fwait
dec
hlt
divb
iret
ja
bound
fnstcw
jg
mov
adc
jecxz
pusha
jne
mov
daa
cmp
mov
xor
cmp
bound
ljmp
inc
mov
mov
outsl
sbb
lods
js
cmp
cmpl
and
enter
imul
pop
dec
push
adc
jb
outsl
push
scas
cli
mov
ret
pop
int3
lods
sti
xchg
fdivr
dec
mov
cmp
xlat
das
xor
lret
inc
push
dec
jae
push
dec
adc
mov
jns
mov
mov
lock
sub
ja
shll
and
jp
xor
in
iret
repz
shrb
push
sarl
inc
int
scas
clc
in
xor
or
daa
fists
xchg
push
adc
mov
inc
adc
sahf
push
inc
sub
xor
pop
xor
inc
and
mov
add
insl
mov
daa
xor
das
jle
pusha
mov
sbb
push
shll
inc
out
jecxz
add
cmp
inc
inc
out
dec
dec
rcrl
inc
dec
cs
aaa
lods
push
sti
push
sahf
imul
testb
xchg
dec
clc
aad
data16
xchg
aaa
adc
xor
repnz
inc
mov
lcall
mov
dec
leave
pop
mulb
inc
test
inc
daa
icebp
fcompl
push
lods
mov
mov
mov
daa
jecxz
sar
lahf
inc
outsb
call
pop
sub
mov
pop
inc
sbbb
jg
mov
dec
test
std
out
cmp
pop
sarb
int3
mov
xor
data16
xchg
setns
movsb
clc
cmc
lcall
jne
and
xor
jg
jns
cmp
shlb
mov
ret
int3
sahf
mov
insb
cld
mov
popf
mov
dec
inc
jle
pop
mov
outsl
loop
xor
push
inc
out
aaa
xor
lds
and
test
mov
pop
sbb
movsb
jno
nop
sub
mov
icebp
roll
mov
push
mov
cmp
mov
ret
and
mov
rorl
jle
jo
sub
aad
adc
inc
mull
in
push
outsb
dec
jb
data16
add
cltd
aad
mov
and
ljmp
outsb
stos
pop
loopne
movsl
xor
aad
fs
addb
adc
lfs
pop
xor
mov
pop
fisttpll
imul
arpl
jb
sbb
cmp
jb
mov
js
pop
out
pop
sbb
je
dec
xchg
fsubr
outsb
call
cmp
fwait
loopne
int
mov
mov
mov
sub
mov
push
dec
xor
pop
icebp
cmp
clc
mov
aam
ficoms
inc
bound
mov
sti
inc
lret
fs
and
add
ja
pop
mov
add
lret
in
push
cmp
shlb
lds
into
mov
lret
jmp
inc
xchg
lods
sbb
test
insb
loope
jo
cs
sbb
mov
test
xor
adc
jo
xor
fmuls
mov
ljmp
cmpsb
outsb
xchg
sub
fsubrs
fucom
add
daa
pop
lea
inc
stc
push
xlat
popf
jge
sahf
mov
push
leave
jnp
loopne
sub
jnp
outsl
xor
push
and
nop
aas
mov
xor
stos
sbb
in
fidivl
push
enter
aaa
out
sahf
addb
add
int3
inc
aad
in
sub
adc
sbb
sbb
stc
mov
sbb
adc
jmp
xchg
cmpsb
mov
mov
mov
mov
fldl
clc
jl
push
pop
adc
adc
ret
sahf
or
dec
xchg
fs
pushf
roll
add
scas
xchg
adc
loopne
lods
lret
dec
sti
outsb
xor
push
lcall
push
dec
push
les
sbb
fldcw
xor
in
in
cld
sti
inc
sub
push
xchg
sbb
enter
jg
or
xlat
loop
sub
xor
pushf
js
insl
and
in
movq
frstor
cmc
mov
insb
out
push
imul
sub
mov
and
sti
aad
lock
lea
or
xchg
cltd
insl
fs
es
mov
jmp
movsb
mov
addl
filds
icebp
inc
lret
call
repz
fdivrl
dec
jg
xchg
push
mov
frstor
dec
adcb
fcomp
push
adc
lock
cmp
pushf
push
mov
mov
push
test
fcomi
in
and
iret
pushf
push
popa
dec
insl
icebp
rcrl
push
or
mul
cmp
inc
xchg
jmp
push
pop
arpl
ljmp
sbb
pop
int3
cmp
or
cmp
je
adc
fwait
fwait
mov
pusha
or
xchg
lretw
movsb
add
push
test
cmp
mov
jmp
cwtl
or
popf
mov
cmpb
jns
or
xchg
jl
mov
or
dec
push
xor
xor
sbb
sbb
repz
adc
cli
mov
cmpsb
mov
mov
es
xchg
lods
xor
insl
push
imulb
cmp
addr16
rol
jp
enter
cmpsb
xorb
pushf
stos
jl
inc
push
push
sbb
dec
or
aas
in
mov
push
mov
dec
in
inc
popf
jge
lahf
xor
stos
cmp
ljmp
and
inc
and
sbb
and
mov
in
and
filds
lret
pop
xchg
inc
and
mov
lock
lods
pop
dec
inc
adc
push
repz
int
cmp
ret
sub
mov
adc
leave
pop
shrd
and
lds
daa
mov
xchg
cmp
push
lea
or
loopne
gs
jge
js
mov
pop
pop
pusha
xchg
xchg
mov
lea
or
mov
fdivrp
js
or
jno,pt
cmpsl
jmp
enter
repnz
out
dec
int3
jle
jge
aad
loop
mov
push
sub
and
inc
shll
mov
jle
jns
or
pop
add
jbe
loopne
mov
adc
jnp,pn
lds
push
and
and
jnp
jb
cmp
js
mov
inc
shlb
push
sahf
out
inc
push
lods
fcomi
inc
push
xchg
xor
dec
and
inc
les
and
or
das
inc
mov
lret
cmp
imul
mov
sub
int
dec
in
cmp
cmpsl
loop
or
daa
in
pop
cli
add
xor
inc
test
enter
in
fs
cmp
fdivrl
xor
nop
mov
fdivr
add
adc
icebp
inc
out
dec
mov
xchg
rcrb
push
scas
ljmp
daa
or
add
dec
inc
mov
xor
ja
push
dec
adcb
sbb
sahf
faddp
jg
leave
and
insl
shll
xchg
jle
xor
mov
shlb
in
cld
xchg
mov
dec
push
andl
sub
adc
add
jge
mulb
mov
or
nop
push
or
mov
xor
inc
movsl
xchg
mov
xor
fmulp
mov
es
jnp
sub
pusha
loopne
xor
loopne
bound
jge
inc
mov
sub
push
pop
push
icebp
xchg
imul
lahf
mov
xor
cmpsl
or
dec
add
insb
push
pop
mov
insb
gs
ds
sti
into
mov
cmp
test
fimuls
xchg
ds
dec
push
popf
cmp
pop
adc
push
sbb
inc
rolb
xor
cmp
mov
mov
divl
sub
lea
pusha
add
in
shll
adc
inc
imul
call
aam
jno
or
mov
mov
popa
hlt
dec
aas
push
and
pusha
mov
mov
push
dec
mov
inc
lock
mov
inc
xchg
test
jp
aam
je
sbb
sub
push
mov
fisubl
js
mov
cli
rcrl
inc
cs
push
jnp
xchg
mov
fistps
push
add
je
lds
dec
imul
insl
das
push
lea
outsl
cs
sbb
mov
ret
adc
mov
cli
cmpsl
ss
mov
pop
or
jge
adc
stc
cld
mov
mov
les
jle
pop
or
mov
xchg
add
mov
movsb
xchg
fs
push
adc
hlt
scas
mov
ljmp
inc
jno
sahf
test
rclb
and
pop
popf
aam
xchg
hlt
sub
cmpl
fldl
nop
inc
add
and
adc
lret
jo
js
push
mov
in
inc
or
push
int3
or
cwtl
sub
leave
xchg
pop
ret
js
lds
mov
mov
das
fnsave
jle
idiv
imul
inc
cld
imul
stos
xor
add
sbb
test
adcl
mov
mov
mov
adc
ret
loopne
mov
andl
call
mov
rcrb
sbb
mov
dec
out
and
push
push
and
imul
sbb
adc
inc
daa
call
and
sbb
outsl
jo
test
mov
mov
inc
test
je
push
dec
push
pop
out
sbb
xchg
lock
sti
cmp
push
nop
mov
in
or
fdivrl
push
in
pop
or
adc
xor
sbbb
sub
mov
jb
sub
adcb
xchg
outsb
nop
push
gs
sbb
aad
rorl
xor
pop
int
sarl
jo
loope
loope
xor
aad
push
ret
fsubs
xor
inc
sbb
sbb
adc
sub
fnstcw
sbbb
mov
adc
fbld
jge
icebp
sub
mov
sub
stos
lock
and
push
mov
les
shlb
mov
cli
insl
ficompl
pop
mov
loopne
cld
cmpl
push
mov
jecxz
mov
dec
lahf
jno
jo
and
test
jl
sub
dec
mov
mov
in
rclb
jne
jmp
sbb
inc
ss
loop
popf
int3
mov
fwait
clc
sbb
loopne
lea
jns
pop
mov
std
mov
or
dec
add
dec
xchg
aad
mov
fwait
aas
mov
nop
or
repnz
lock
push
push
push
outsb
mov
ds
ss
jb
rclb
add
repnz
mov
retw
outsl
mov
add
out
adc
mov
cld
push
lret
js
mov
dec
shll
adcl
dec
add
xchg
insb
dec
sub
call
jb
es
inc
inc
rol
add
push
pop
sbb
gs
adc
push
pop
pusha
sub
mov
je
into
mov
scas
inc
sbb
sbb
push
rcl
das
push
mov
push
clc
ds
add
mov
cmpsb
mov
pop
sub
cmp
and
stos
pop
sti
fs
das
pusha
aam
loop
xorl
mov
test
sbb
pop
popa
jmp
sbb
inc
mov
pop
call
mov
mov
loop
outsl
and
add
pop
stos
pop
jmp
jecxz
xchg
cmp
gs
xlat
mov
sub
andb
sbb
lds
inc
jl
and
aas
dec
aaa
xchg
lds
js
mov
sub
cs
orb
and
jb
stc
sub
out
jns
ljmp
xor
inc
sub
sbb
aas
adc
imul
pop
cmp
cmp
adc
push
cmp
xor
imul
jg
sub
jbe
fisttpll
and
arpl
rcr
adc
aad
sbb
in
push
sbb
add
pushf
dec
subl
out
lock
loope
roll
or
daa
dec
mov
sbb
rcll
push
pop
mov
out
push
cmc
shll
test
dec
ret
notb
add
jne
incl
push
rorw
pop
pop
cwtl
sarb
mov
xchg
xor
pushf
ljmp
jnp
xchg
xchg
js
sub
or
pop
loop
imul
inc
jnp
int
pop
lods
adc
mov
inc
mov
xchg
and
enter
loopne
sub
sub
sbbl
loopne
mov
sbb
sbb
jecxz
loope
test
mulb
in
int3
rcll
loopne
decb
adc
jmp
scas
cmpl
add
ret
jmp
into
bound
aam
mov
das
sub
push
or
xchg
cli
data16
shl
mov
pop
mov
mov
cmp
dec
lds
push
cmpsl
dec
push
cmp
ja
mov
test
ret
pop
dec
test
add
cmp
mov
fucom
and
jne
les
push
pop
aas
daa
sbb
push
xchg
sysenter
mov
cwtl
mov
adc
bound
sub
jne
xchg
dec
mov
fs
sbb
stos
push
outsb
inc
stos
cmp
arpl
mov
lea
in
aad
jae
push
push
fiadds
cwtl
push
push
outsb
push
scas
call
ret
inc
xchg
push
sub
test
ljmp
lret
rcr
fsts
insb
sbb
adcl
sub
pop
mov
xchg
stos
les
imul
fnsave
jno
dec
addl
fnstcw
jle
cmp
pop
loopne
mov
in
pushf
stos
pop
lcall
sub
int
xor
lret
sbb
sbb
dec
xor
fstpl
cmp
clc
enter
pop
in
dec
mov
in
push
adc
jb
in
fdivl
dec
ret
push
lret
pop
cmpsl
pop
stc
leave
out
outsl
push
dec
fcoms
xchg
xchg
lahf
pop
jnp
sub
xlat
into
cmpsb
negl
or
xchg
xor
push
pop
and
cltd
test
inc
rcrl
add
loope
pop
jp
dec
xor
xor
pop
idivb
int3
aaa
stc
xlat
add
mov
pop
daa
push
add
lahf
cmpb
not
fbstp
js,pn
xchg
xchg
out
cld
push
inc
orl
sbb
pop
ret
subl
in
sub
push
xor
jbe
dec
sbb
es
push
test
sbb
int3
add
push
cwtl
cld
lret
sbb
xchg
jmp
fwait
push
push
xor
push
xor
inc
jge
imul
sbb
dec
inc
sub
lcall
mov
sbb
sti
mov
adc
lret
and
inc
inc
lods
mov
inc
sub
xor
sub
into
popa
cmp
rcr
xor
push
inc
push
lret
cmp
addr16
rol
cli
sbb
and
idivl
popf
pop
in
mov
fs
inc
push
push
adc
cmp
in
xor
sub
jmp
addr16
js
xor
hlt
jb
cmc
bound
or
mov
aam
jecxz
sbb
push
add
cmp
cmp
xor
cs
and
sbbl
xlat
mov
and
scas
or
mov
pop
jbe
scas
cmp
js
repz
mov
iret
fmuls
push
test
or
dec
in
out
inc
lds
pop
pop
inc
mov
lea
jl
push
lea
std
sbb
xor
pushf
imul
outsb
mov
bound
mov
scas
pop
sub
mov
daa
jns
adc
mov
or
fcmovne
dec
rorb
call
rorb
cmp
es
into
inc
cmp
stos
paddq
scas
mov
ds
loop
cmp
push
sub
into
dec
jbe
or
loop
push
sub
dec
pop
cmp
test
cltd
in
mov
or
jae
jns
sbb
mov
das
adc
adc
fadd
xor
jb
or
int3
jl
aad
xchg
leave
lods
test
aam
loop
lret
loopne
push
mov
sbb
dec
scas
subb
xchg
dec
test
jb
push
inc
int3
je
pop
fdivrp
mov
sbb
xchg
into
push
sbb
popf
scas
popw
call
xorl
dec
push
mov
outsl
inc
clc
mov
orb
push
xchg
lret
xchg
xlat
push
loope
fucomp
out
pop
xor
push
xor
pop
std
jmp
inc
mov
push
xchg
lahf
sbb
sbb
sbb
scas
mov
inc
inc
sub
push
imul
dec
data16
fsubrl
push
or
fwait
adc
xchg
clc
push
adc
bound
jp
scas
clc
repnz
jae
push
adc
jmp
out
mov
or
sub
jo
push
popf
xchg
leave
jp
mov
ja
dec
and
push
testb
push
loope
or
xchg
xor
mov
push
and
xchg
fcompl
xor
loop
mov
mov
cmc
lea
addr16
out
xchg
test
sahf
mov
das
jnp
inc
pop
in
lods
adc
cmpsl
leave
mov
jmp
adcl
and
cmpb
and
mov
mov
js
das
cltd
and
popl
cs
pop
aaa
push
push
pop
cltd
pop
jo
jb
or
movl
dec
xor
pop
mov
ficoml
add
or
rcl
adc
stc
mov
mov
pop
fists
in
shlb
and
inc
push
push
test
iret
ret
lods
mov
je
outsb
jl
cmovns
aaa
or
stos
stc
or
das
in
push
fbstp
fstpt
aam
clc
test
icebp
inc
sub
inc
mov
and
mov
xchg
inc
mov
ljmp
lods
gs
cmp
mov
subl
mov
iret
mov
addb
fwait
push
lret
popf
add
es
insb
lahf
cmp
cmp
jge
mov
cmc
fwait
out
movsb
and
gs
mov
lock
pop
mov
subb
mov
or
pop
pop
push
add
xchg
test
js
ja
imul
jecxz
push
cmc
pusha
and
mov
fmul
int
aad
inc
mov
pop
mov
loopne
shl
cmp
mov
in
push
cli
inc
lret
or
cmp
popf
nop
aad
test
dec
xchg
jl
push
xor
ficompl
psubq
insl
shrd
dec
push
mov
push
xor
lret
push
lea
icebp
out
cmp
dec
push
jb
movb
sub
out
nop
lcall
push
data16
aaa
cmp
ds
xor
inc
sub
cmp
test
aam
mov
ds
pop
enter
cmpl
shrl
pop
mov
xchg
adc
les
push
or
lods
jecxz
pop
and
xor
dec
or
fdivrp
gs
inc
ret
scas
into
stos
fidivs
call
add
std
into
push
and
xor
jge
pop
inc
mov
push
fdivrl
push
add
pusha
sub
push
stos
call
in
data16
fistps
push
mov
sub
insl
int
push
and
mov
mov
lret
push
adc
pop
arpl
ss
jo
dec
mov
cmp
test
push
sahf
mov
dec
sub
jo
mov
jno
test
cwtl
roll
mov
xchg
dec
arpl
sub
adc
jne
push
jbe
mov
cmp
jp
retw
xor
push
fdivs
mov
int
pop
inc
repz
xor
jns
and
add
mov
subb
ds
rcrl
je
mov
out
sahf
iret
pop
rcrl
xor
add
pop
cmp
in
xchg
adc
mov
rcrb
popf
pop
enter
inc
lret
push
pop
sub
mov
sub
xlat
push
mov
add
inc
into
cld
xchg
lret
or
pop
add
xor
adc
dec
add
mov
in
fcomps
dec
adc
in
nop
out
inc
rcr
mov
xchg
out
ret
movsl
xchg
aad
push
cs
fcoml
fiadds
inc
inc
dec
mov
loop
sbb
cmp
das
adc
scas
cld
mov
js
lahf
pop
mov
pop
cs
xor
test
mov
icebp
sbb
jo
inc
cmpl
insb
mov
in
das
inc
loop
mov
sbb
pmovmskb
xchg
cmc
xor
cmc
pop
ljmp
xor
orb
bound
sbb
stos
sub
das
adc
mov
sub
jle
xor
lcall
cmp
lods
adc
shll
jnp
aas
pop
ss
std
fidivrl
insl
sub
or
dec
jnp
adc
inc
mull
sbb
pop
lock
adc
sub
lods
lret
popa
ror
jecxz
aam
mov
adc
pop
aam
cmp
jne
ret
clc
jl
cli
scas
fst
shl
inc
add
fimuls
push
pop
xchg
loope
or
or
xor
push
sti
sbb
aas
push
jne
in
mov
popf
jg
fbstp
pop
lds
inc
pop
add
add
fwait
jno
nop
pop
imul
mov
je
push
ds
add
addr16
xor
push
cwtl
ss
int3
loope
decb
jae
movntps
push
cld
adc
fistpl
jg
mov
test
xor
lahf
mov
jae
clc
dec
jle
add
fs
push
bound
sbb
addr16
loopne
aaa
nop
sahf
push
jns
movl
shlb
fld
mov
xor
sub
and
ror
jle
pop
or
out
dec
mov
mov
lods
in
arpl
insl
sbb
cs
adc
lcall
pushf
mov
clc
subb
xlat
ret
fisubl
lds
mov
xor
orb
sbb
fistpll
cmc
jp
mov
leave
sub
aad
je
das
add
pop
xchg
or
xchg
es
xchg
and
in
rol
lret
and
sub
andl
push
shll
jae
mov
dec
adc
dec
or
mov
cs
sub
inc
mov
and
js
in
lret
jg
in
mov
mov
dec
icebp
and
mov
in
inc
fstl
test
adc
loopne
jo
fnstsw
inc
test
mov
inc
add
mov
cli
jb
cmp
call
iret
jno
dec
arpl
inc
insb
push
mov
fadd
mov
inc
sbb
ret
inc
sbb
gs
insb
out
lret
xlat
loope
and
xor
jb
mov
fnstsw
xor
jp
nop
pop
es
add
xlat
jbe
mov
jns
test
jns
adc
mov
or
dec
shrb
repz
lods
stos
push
jne
andl
jb
add
mov
lea
adc
dec
pop
jge
bound
inc
sti
jl
add
mulb
sahf
je
mov
push
shlb
mov
xchg
shr
xchg
xchg
imul
into
jmp
mov
and
mov
xchg
ss
ss
popa
movsl
push
push
inc
inc
enter
lods
pop
xchg
inc
inc
ret
sbb
lahf
jne
dec
arpl
daa
jp
jno
push
xor
inc
xor
cli
mov
lock
pop
or
adc
xchg
jle
xchg
rolb
push
fwait
movsl
jb
popa
daa
jbe
xor
and
les
mov
fbstp
add
pop
or
push
xchg
or
sahf
jmp
mov
and
cmc
xor
dec
mov
push
scas
cmp
and
or
inc
inc
stos
mov
adc
rorl
outsl
mov
or
mov
xchg
insb
mov
mov
clc
and
lahf
jecxz
cmp
adc
insl
dec
ds
mov
cltd
xor
fs
sbb
fstpl
sbb
sti
adc
mov
fnop
mov
xchg
gs
shlb
sub
push
lea
xchg
das
cmpsl
jge
imul
inc
sbb
sbb
pop
iret
dec
shll
fisttpl
popf
lcall
call
mov
aas
adcl
sbb
cld
cmp
or
test
xlat
fbld
lods
inc
lahf
sbb
mov
in
cmc
adc
xchg
xchg
pop
test
enter
fnstenv
xor
jp
push
pop
bswap
push
inc
insb
push
mov
jge
adc
xor
mov
js
imul
xchg
dec
mov
xlat
shll
adc
in
ficompl
rorb
pop
cld
add
bound
fwait
jg
push
mov
out
adc
popf
lods
push
aaa
adc
cmp
adc
xor
mov
add
das
and
xchg
fld
jecxz
dec
fwait
insb
jmp
add
sub
out
adc
roll
jp
ss
mov
ficoms
push
jb
pop
push
mov
icebp
mov
adc
xchg
mov
shlb
dec
fiaddl
mov
xor
enter
xor
pushf
data16
jne
clc
or
jnp
fwait
lcall
hlt
pop
sbb
sbb
andl
adc
fstpt
fwait
or
stc
pushf
xchg
int3
lods
mov
mov
pop
mov
jle
dec
dec
in
push
lahf
xor
adc
add
mov
mov
xchg
cmp
and
dec
mov
mov
int
push
lds
dec
mov
xchg
push
cmp
xor
fcompl
or
dec
shrb
lahf
aas
ret
mov
inc
fsubrs
and
je
cmpsb
jnp
lcall
imul
mov
push
pop
fiadds
enter
push
outsb
cld
inc
or
iret
cs
push
sub
dec
adc
add
fisubs
call
cli
insl
enter
arpl
and
pop
inc
adc
fnstcw
outsl
xchg
sbb
ror
jmp
and
in
mov
push
sahf
repz
fidivrl
daa
ret
adc
push
add
mov
out
xchg
call
gs
jmp
xor
pop
fsubrs
dec
mov
aaa
idivb
aas
jo
push
fsub
shll
mov
cmpsl
and
xor
out
push
push
jnp
sub
sarl
xor
lcall
xchg
arpl
inc
int
sub
ret
out
in
jecxz
rcl
cmpsb
cvtps2pd
or
fxam
sub
cwtl
xchg
lcall
fiaddl
pop
stos
xchg
pop
pop
jb
divb
mov
cwtl
iret
adc
fnstenv
data16
push
andl
les
pop
jbe
push
es
aad
xor
ljmp
subb
in
cmc
cwtl
xor
pop
in
in
sub
mov
add
adc
sbb
lock
add
dec
add
es
cmp
cmpb
push
nop
or
dec
lods
pop
call
stos
xor
mov
stos
lds
sub
jmp
add
insl
lods
pop
push
jne
stos
jp,pn
mov
mov
lds
or
cmp
sbb
out
xlat
inc
mov
inc
addr16
inc
je
es
cmp
cmp
mov
inc
or
xchg
cld
or
idivb
add
fnstsw
inc
xchg
xchg
imul
fsubrl
cmp
scas
and
loop
das
fs
xchg
xchg
sub
jecxz
cmpsl
xchg
fisttpll
cmpsl
push
inc
lcall
pushf
or
lds
lret
imul
sub
lods
rcr
lret
fcoml
pop
adcb
jg
add
lock
rorl
popf
lods
pop
sub
pop
cli
pop
out
jecxz
pop
std
into
jno
and
ljmp
addr16
xchg
das
jmp
and
dec
enter
pop
mov
sub
jp
je
loopne
addr16
into
inc
or
fs
subl
movups
mov
xchg
pop
test
add
xchg
jns
stos
imul
xchg
loope
adc
add
in
fnsave
dec
stc
out
add
arpl
lock
aad
sub
xchg
jmp
mov
add
stos
adc
sub
repz
je
or
dec
outsb
scas
mov
jns
fisttpll
test
pop
xor
cmp
sbbl
cmc
das
cmpsb
out
push
testb
push
movsb
pusha
push
mov
jns
jle
jo
fldt
jl
push
inc
xchg
std
xchg
ret
and
sbb
jo
dec
mov
mov
inc
pop
scas
jbe
pop
push
sub
inc
xor
insb
lds
mov
ret
cmp
and
xor
mov
in
hlt
sahf
sarl
push
jnp
ljmp
sbb
mov
mov
inc
inc
lcall
dec
cmpsl
lahf
mov
mov
enter
xchg
inc
xchg
mov
cmp
insl
in
int
push
call
and
cmp
scas
in
out
pop
pop
cld
fisttpll
cmpsb
loope
jle
pop
ret
call
scas
leave
cmp
dec
sub
test
arpl
sub
inc
mov
les
adc
insl
xlat
lahf
push
cs
dec
mov
mov
lahf
jg
xchg
mov
test
cltd
sbb
fisttpl
or
mov
dec
mov
sbb
fbstp
sbb
ds
push
shlb
cmp
jbe
xor
push
mov
pop
adc
xchg
pop
cmpl
pop
add
sub
inc
cmp
pop
repz
jmp
ds
jle
pusha
dec
cmp
sub
imull
mov
inc
iret
sbb
push
aad
fnstenv
mov
ret
push
xor
push
mov
pop
cmp
sahf
xor
sub
clc
mov
sbb
sub
mov
out
faddl
sbb
push
aam
insb
fsubl
add
fcoml
push
mov
add
mov
cmc
fidivs
mov
dec
popf
mov
xchg
adc
dec
mov
ss
aam
and
call
cli
aad
push
sbb
addr16
std
ficoms
adc
dec
dec
enter
insb
stos
mov
push
jno
popf
jecxz
enter
loop
nop
cld
xlat
push
push
int3
inc
inc
hlt
mov
mov
or
xor
add
sbb
pop
adc
cmpsb
cmp
inc
paddq
and
add
ds
cmp
lds
or
pop
mov
push
jle
and
test
inc
pop
xor
jbe
pop
aas
mov
add
les
adc
xchg
lods
movsl
sbb
je
dec
mov
insb
sbb
lret
testb
inc
or
inc
add
movsl
cmp
leave
fists
imul
repz
push
les
mov
mov
jbe
sbb
decb
lret
scas
jp
push
lret
jecxz
test
mov
fwait
sbb
addl
sub
repnz
xor
fisubrl
lret
nop
or
rcll
mov
decl
cmpsl
mov
sub
cmpsl
mov
inc
push
mov
push
pop
sub
or
cmp
pop
sub
out
out
push
xlat
mov
cmpsb
xchg
inc
stc
xor
cmpl
lret
in
sub
and
inc
and
xchg
lock
mov
xor
add
inc
mov
sti
rorl
push
test
dec
cvtpi2ps
popa
pop
mov
pop
rclb
cmpsl
lock
sbb
push
es
and
mov
jge
sbb
loope
sbb
enter
mov
movsl
mov
leave
add
cltd
aad
test
jne
lea
icebp
cmp
push
lea
add
es
cli
mov
mov
aad
cld
mov
fs
inc
sbb
dec
jns
inc
fwait
addl
mov
jne
cltd
cmp
dec
mov
mov
dec
and
push
dec
mov
lds
pop
mov
mov
sbb
and
pop
mov
mov
test
add
push
jl
mov
scas
cmp
aam
dec
idivb
sbb
pop
adc
aad
lret
xchg
in
xchg
aas
ret
push
jae
mov
les
jmp
mov
inc
mov
cmp
sti
scas
out
jp
mov
jb
cwtl
jmp
sbbb
inc
outsl
sbb
in
sbb
ss
add
andb
add
fwait
shrb
popa
xor
sbb
xlat
or
std
jp
pop
sbb
dec
xchg
fcompl
ret
push
aas
cmp
loopne
out
fistl
cltd
fidivl
pop
ljmp
inc
out
xor
repz
inc
and
cltd
movsb
push
jmp
push
xor
sti
or
adc
mov
adc
pop
aam
addb
sbb
or
sub
pop
mov
into
lret
mov
das
xor
loope
mov
fcompl
lea
test
jns
pop
or
jae
leave
scas
mov
jb
pop
ret
insl
sub
xorb
sub
mov
mul
mov
push
js
aaa
jecxz
push
lods
mov
sbb
outsl
mov
jg
add
rcl
dec
adc
cmp
xor
aas
mov
sbbb
jne
adc
pop
gs
inc
xbegin
jb
call
in
adc
pop
imulb
xchg
adc
std
rcrl
jae
bound
int3
mov
sub
push
cmp
or
jg
aad
pop
xchg
jg
lcall
push
adc
cmpsb
xor
xlat
mov
cltd
out
dec
and
std
ret
mov
call
decl
pop
out
jnp
mov
andl
mov
mov
and
pop
sbb
adc
cmpl
loope
fbld
add
jecxz
jl
lcall
and
xchg
and
les
imul
movsb
sub
aad
sarb
add
ret
ds
int
test
pop
xchg
sbb
lret
push
out
fstps
lods
cmp
xor
fwait
xchg
jae
repz
dec
clc
les
pop
sbbb
fdiv
into
inc
faddl
mov
lret
or
sarb
cmpsl
push
cmpsl
imul
push
adc
nop
xchg
ss
aas
scas
sub
lea
in
mov
lret
jmp
sbb
mov
shrl
xchg
outsb
push
daa
int3
dec
loopne
pop
xchg
lock
mov
or
cmp
and
mov
into
insl
test
sub
in
dec
push
push
dec
xchg
clc
add
pop
subl
xor
div
out
repz
and
outsl
mov
jno
jne
pop
test
or
sbb
out
idivb
add
gs
sub
jne,pt
jnp
sub
mov
test
out
mov
outsb
jp
pop
push
test
mov
push
push
ljmp
mov
cmpsb
pop
adc
mov
xchg
dec
scas
sbb
sub
jb
xor
xchg
iret
outsl
adcl
ror
xor
aam
jno
fwait
mov
jo
add
sti
cwtl
sbb
xor
xor
stc
std
xor
xchg
popf
mov
int3
movsb
dec
mov
inc
lods
call
test
and
data16
jo
pop
cltd
lds
add
mov
xchg
clc
mov
movsl
cmp
negb
pop
dec
inc
push
sbb
jb
stc
in
mov
jno
sarb
inc
mov
popa
movsl
mov
or
xor
std
js
mov
mov
adc
icebp
pop
mov
jecxz
rcr
sbb
es
shl
mov
jl
and
or
xchg
adc
jmp
nop
sahf
mov
sbb
cmp
ffree
lods
xchg
jge
jle
add
scas
or
mov
sti
jl
dec
push
xchg
or
jno
and
imul
xlat
insb
movsl
adc
repnz
mov
cmpsl
daa
aas
mov
popf
clc
pop
dec
sbb
das
scas
outsl
lds
push
outsb
pop
repz
fs
bound
xchg
adc
pop
notl
sbb
mov
push
jecxz
jl
nop
fldcw
fs
xchg
jge
xor
jae
lcall
dec
or
inc
lahf
fisttpll
or
sub
push
push
sbb
iret
pop
jge
mov
push
push
enter
inc
fstpl
loopne
or
imul
mov
imulb
cmp
imul
mov
leave
jnp
push
lock
jo
mov
add
lods
cs
in
dec
push
inc
ror
cmpsb
shrb
push
jbe
inc
sarl
cwtl
shl
xchg
push
inc
cmp
mov
mov
into
pop
jg
lock
repz
rcrb
xchg
or
nop
and
inc
jmp
dec
daa
fcoms
adc
les
lods
xor
mov
aas
push
andb
cmp
outsl
loope
fdivrs
sahf
cs
repnz
dec
fiadds
popa
cli
lea
xlat
jg
clc
mov
je
or
ror
xor
adc
sub
cmc
pop
and
icebp
mov
mov
pop
es
jmp
int3
out
xchg
adc
inc
in
cmp
mov
and
test
ret
loope
push
jle
mov
aam
pop
xor
fbstp
push
fisubrl
dec
mov
xor
pop
mov
mov
pop
jae
jecxz
inc
jg
or
add
xor
sbb
inc
and
lods
loope
mov
mov
les
fwait
mov
and
sbb
lret
inc
loope
xchg
in
push
push
and
stos
mov
add
cmpsl
and
pop
leave
cmp
dec
mov
clc
sub
pop
jl
cld
pop
in
out
dec
lods
push
aaa
sub
sub
jbe
daa
adc
pop
outsl
fwait
mov
inc
dec
mov
imul
adc
cmp
cmpsb
and
add
hlt
and
xchg
int3
lret
decb
cld
mov
push
push
dec
push
add
sbb
mov
test
dec
popa
loopne
push
cmp
sub
lds
cmp
sbb
je
hlt
call
inc
cmpsb
std
loop
cld
jecxz
ja
je
gs
pusha
aad
test
sbb
lcall
out
fwait
mov
lret
stos
fcompl
rcll
cld
pop
nop
into
insb
pop
popf
pushf
into
sbb
test
fucomip
xor
nop
xor
in
xchg
push
cmp
mov
lds
cmp
stc
outsl
test
cmpb
add
rcr
dec
shrl
cmp
pop
add
in
jne
lret
sti
dec
mov
xor
mov
stc
or
adc
cmp
push
xchg
lods
push
inc
add
imul
fmulp
xor
test
xchg
dec
or
sbb
and
inc
xor
pop
fs
cmpsl
sub
mov
and
fs
dec
and
sbb
call
pop
dec
enter
lods
mov
scas
clc
out
sbb
addr16
pop
mov
inc
jmp
jb
pop
mov
or
or
sbb
test
aas
jle
sbb
inc
xor
xchg
mov
xchg
ljmp
push
mov
das
cmp
iret
aam
lahf
sbb
out
fnstcw
jns
inc
cltd
dec
or
xchg
adc
sbb
sbb
jmp
aaa
cmp
sub
sti
push
mov
push
adc
push
cmp
jno
inc
popl
mov
repnz
lock
js
hlt
adc
lret
inc
adc
test
mov
inc
cmp
mov
dec
loope
jb
pop
mov
hlt
in
loop
mov
pop
cs
lret
push
add
fisubl
les
xchg
sub
imull
loop
hlt
pop
cmp
mov
push
imul
pop
outsb
aaa
jmp
inc
aad
jmp
popa
rcll
or
jle
and
inc
inc
outsl
addl
movsb
insb
jge
sub
loop
push
jp
xor
dec
or
add
sahf
pop
add
ret
sahf
lret
xor
adc
ret
les
repz
test
push
mov
or
jne
outsb
sbb
inc
mov
or
push
jbe
pop
in
or
sbb
fsubp
push
sub
loope
and
sub
xchg
inc
pop
aam
jns
add
lcall
in
push
jecxz
add
js
es
push
push
jle
pop
mov
dec
addb
jnp
dec
push
and
adc
add
stos
sub
pop
xor
xchg
push
cmp
aad
push
sub
aam
ret
faddl
dec
ror
mov
pop
xchg
or
arpl
mov
inc
mov
lock
lods
xchg
sbb
add
add
jecxz
add
aaa
mov
cmc
fwait
add
add
fstpt
add
sbb
or
jnp
fdiv
mov
pop
test
mov
mov
lods
fldt
mov
push
add
pop
mov
and
sbbl
lret
fcmove
dec
stos
and
xchg
inc
xor
out
scas
mov
and
push
adc
pushf
mov
push
popf
test
dec
rcrl
in
fcmovnu
nop
jbe
or
pop
dec
adc
fnstcw
xchg
sub
push
and
icebp
mov
pop
inc
and
shrb
pop
xor
cmpsb
fcmovbe
inc
aad
arpl
arpl
and
cmpl
mov
in
pop
inc
pop
inc
xchg
xor
lret
fsubrl
or
lcall
or
xor
add
shl
idivl
das
mov
inc
mov
out
pusha
mov
xchg
or
or
aas
jno
or
divb
push
add
and
jns
aas
lock
cli
fisubs
or
jle
mov
jne
fxam
jb
rorb
gs
movsl
xorl
or
stos
and
fstpt
movaps
mov
mov
in
call
push
sbb
lahf
jge
shl
fbstp
in
and
jo
sbbb
jae
sub
xchg
stc
xor
loope
cmp
xor
cltd
adc
xor
mov
dec
sub
push
mov
push
jp
mov
jp
push
sub
sahf
loop
je
dec
or
sar
xchg
add
loop
and
xchg
or
cmpsl
andl
loop
lock
sti
mull
and
imul
out
and
mov
cmp
mov
gs
xor
nop
xor
mov
jmp
gs
sbb
bound
idivb
jmp
testl
or
clc
mov
cmpsl
jns
sub
movsb
mov
push
popa
cmp
pop
sti
dec
mov
testl
push
pop
nop
inc
divb
mov
mov
mov
pop
call
call
sar
xchg
cli
push
mov
sbb
or
in
adc
daa
mov
xlat
aas
cmpsl
pop
div
xor
cmp
and
jo
jecxz
sub
adc
or
popf
adc
arpl
loopne
sub
outsl
imul
jno
pop
add
mov
adc
adc
jmp
push
lock
cmpsb
mov
fimuls
aad
push
or
shlb
push
bnd
fildl
out
sub
out
pusha
xchg
clc
jge
cmp
nop
adc
gs
shrd
out
mov
pop
add
in
sub
pop
sbb
test
leave
sbb
mov
pop
mov
inc
jns
shl
or
dec
repz
out
sbb
add
pushl
pop
sbb
mov
scas
xor
pop
fwait
ljmp
popf
sbb
mov
je
imul
adc
sahf
mov
pop
inc
cmp
outsl
lahf
sti
scas
hlt
push
fdivrl
push
mov
nop
dec
jbe
pop
push
push
cmp
out
add
push
mov
pop
cmp
add
inc
inc
add
repz
or
ret
subl
imull
stos
inc
aas
rcrb
adc
dec
mov
push
cmc
adc
mov
jmp
out
frstor
enter
aad
jp
push
adc
add
mov
xchg
jg
frstor
pop
push
jle
inc
repz
xchg
cs
enter
jg
gs
or
mov
and
push
cmp
rolb
stos
pop
jno
push
and
push
sub
movsbl
faddl
es
lock
sbb
test
das
clc
int3
mov
xchg
push
jle
leave
xor
mov
faddl
ret
scas
push
push
add
nop
popf
insb
pop
mov
inc
nop
sbb
rcl
lcall
mov
mov
push
mov
test
mov
into
and
dec
xchg
insb
rclb
dec
adc
pop
scas
shlb
mov
add
inc
mov
clc
push
int3
cld
adc
lcall
dec
imul
xchg
add
incl
enter
fsubrl
mov
sub
scas
int
test
mov
or
and
xchg
out
adc
ret
pusha
jno
jnp,pn
icebp
cmp
pop
jge
stc
mov
and
inc
or
jge
pop
mov
dec
pop
imul
ret
int3
cmpsl
cwtl
arpl
mov
rolb
fistpll
jmp
xchg
fmull
stc
push
xchg
imulb
lods
xchg
stos
rolb
jno
mov
and
dec
mov
lds
shll
xlat
mov
push
xchg
flds
push
push
arpl
cmpsb
sub
in
push
loope
shlb
push
sub
xor
push
add
imul
sub
aaa
test
out
fistps
mov
je
sbb
push
sub
adc
ret
test
mov
cmpsb
or
dec
and
xchg
inc
sbb
ficomps
outsl
shr
pop
mov
dec
scas
cmp
cmc
jg
in
pushf
xchg
nop
push
adc
fwait
call
jbe
into
insl
loop
lock
icebp
xchg
cmpsl
fcomip
mov
icebp
hlt
ja
dec
scas
aas
outsb
mov
jbe
dec
jmp
jbe
scas
xchg
jle
mov
scas
cmc
lock
repnz
jbe
in
incl
shrl
jmp
jo
mov
aad
paddb
ja
mov
pop
insl
dec
addr16
into
loop
insl
adc
xlat
mov
test
push
inc
loope
mov
pop
movsb
imul
clc
dec
aaa
lret
dec
lea
push
arpl
push
sbb
mov
out
mov
notb
mov
pop
ss
or
jne
ret
jnp
dec
jle
popa
cs
lret
test
mov
fwait
stc
leave
or
loop
jle
xchg
sti
dec
loope
sub
cmpsl
rorl
ds
int
and
aaa
mov
mov
adcl
or
pop
mov
adc
imul
pushf
push
sub
je
jbe
or
add
pop
xchg
cmp
mov
sahf
mov
pusha
ss
cmc
aad
jmp
cmp
sbb
jecxz
adc
fwait
cltd
cltd
and
loope
push
arpl
jno
mov
xchg
add
dec
push
fsts
repz
movsl
pop
fisubl
cs
dec
jnp
outsb
mov
lods
adc
dec
fimuls
push
popa
jb
and
inc
aad
mov
sbb
std
imul
mov
xlat
sub
cmp
push
add
loop
cmp
or
dec
call
aaa
mov
int
sbb
ret
inc
aam
int3
cmp
test
sub
out
pop
in
pop
in
out
js
pop
xlat
inc
push
loop
or
and
push
enter
in
lods
xor
mul
mov
cmp
or
int
xor
testl
mov
mov
push
out
aaa
add
mov
dec
ret
cmpsl
fisubs
out
cmp
mov
mov
icebp
mov
mov
cwtl
mov
out
mov
pop
add
aam
push
jae
scas
rcrb
push
subps
lcall
inc
fsub
push
push
bound
fucomip
testb
arpl
or
repz
shrb
cmpl
pop
sbb
sahf
cmp
mov
cmpsl
xchg
adc
dec
popa
pusha
add
movsl
adc
pop
lret
xchg
mov
dec
push
push
jb
mov
inc
sub
shll
pop
lock
and
sbb
out
pop
adc
pop
adc
cltd
fsubs
mov
test
jp
dec
loopne
bound
jle
shlb
pavgb
cmc
push
fisttps
ja
fs
jle
ja
popa
arpl
and
sbb
jecxz
xor
mov
adc
movsb
mov
mov
jl
jae
inc
jg
cmpsb
das
pop
mov
sbb
idiv
jno
fiaddl
fisttpl
pop
aas
pop
ss
scas
cwtl
in
jp
xor
push
add
add
dec
adc
js
push
unpckhps
test
dec
jnp
test
inc
call
and
add
pop
outsl
out
lret
xchg
movsl
iret
dec
jne
or
idiv
pop
fsubrl
and
loopne
dec
jb
mov
cmp
add
sub
lds
and
faddl
sbb
jbe
lods
adc
ja
insl
adc
fsubl
jne
mov
or
xchg
mov
shrb
incl
lds
rcll
lods
hlt
out
loopne
dec
add
mov
mov
or
mov
into
mov
icebp
add
lods
and
jae
mov
xorl
push
int
dec
inc
nop
push
stos
xorl
jmp
mov
and
mov
jne
leave
iret
push
sub
and
jge
flds
arpl
xor
sub
cmpl
iret
dec
inc
pop
xchg
test
int3
ret
test
add
mov
scas
scas
in
xlat
int
ret
mov
xor
and
jmp
and
jno
movsl
pop
inc
xchg
pop
push
fstpt
mov
out
iret
es
fsubrl
loop
popf
nop
inc
dec
shll
aam
xchg
fdiv
out
cs
and
add
fucom
rcr
dec
ds
mov
or
jnp
iret
out
insl
pop
push
xchg
xor
jmp
clc
mov
xor
or
sub
sub
or
push
je
in
cltd
fs
dec
test
aas
pop
add
test
inc
push
data16
pop
cmp
jg
sub
jle
aas
js
jg
jmp
pop
push
jae
pop
movsl
inc
aas
push
out
add
sbb
inc
lods
ds
mov
int3
jnp
mov
cmp
cmp
pop
iret
repz
das
xchg
cmc
loopne
xor
cmp
in
jmp
out
outsl
sti
jns
cmp
fistpl
pop
push
cmp
pop
outsl
in
xchg
sbb
xor
lods
pop
insb
push
pop
mov
test
arpl
add
sarb
mov
ss
jne
mov
adc
and
sbb
xor
mov
dec
scas
movsb
push
or
cmpsb
dec
fincstp
push
ficoml
fwait
test
mov
jge
inc
sub
xorl
xor
mov
xchg
js
jb
mov
push
adc
ds
dec
cmp
das
pop
cmc
fldl
subl
mov
xor
rep
js
mov
and
bound
lock
add
mov
outsl
or
push
std
sub
push
arpl
sbb
push
cmp
push
xchg
pop
sbb
cltd
cmpsl
sub
and
mov
xchg
and
mov
fcom
jo
std
lea
pop
std
lock
jge
jns
out
icebp
movsb
arpl
cmp
mov
leave
mov
xor
adc
inc
sub
mov
cli
mov
mov
call
loope
sub
cmp
out
add
ret
imull
cmp
or
xchg
lret
loopne
orb
xchg
xchg
dec
sub
xchg
movsl
iret
pusha
dec
dec
shlb
pushl
push
fwait
cltd
stos
push
and
dec
mov
in
mov
sub
sbbb
daa
adc
js
mov
cs
mov
out
insb
insl
sub
sbb
addb
sub
xor
push
fmulp
lods
out
into
hlt
or
push
les
mov
and
mov
sbb
dec
cs
add
arpl
xchg
mov
dec
nop
and
push
out
add
into
jl
ljmp
outsb
sub
jbe
dec
pop
mov
mov
leave
mov
stos
dec
add
lock
push
lods
movsl
divl
or
clc
lds
cmp
mov
jb
mov
stos
ss
iret
lea
iret
mov
in
das
xchg
shlb
ds
loope
cmp
lea
jo
pop
jne
jmp
mov
jno
shll
insb
jmp
pop
outsb
push
mov
aaa
inc
lret
sub
xchg
add
push
xchg
sbb
cmc
and
cli
sub
mov
xchg
call
pop
pop
sti
aaa
inc
lret
mov
call
les
aad
mov
jo
xor
mov
lret
mov
out
mov
pop
mov
push
inc
add
dec
pop
add
data16
nop
mov
imul
ds
sbb
or
inc
xchg
stos
pop
sti
or
std
and
pusha
mov
into
in
xor
mov
cld
leave
jno
hlt
push
mov
outsb
sar
out
jnp
shl
test
adc
loopne
push
pop
bound
cmpsl
mov
add
ljmp
inc
pop
adc
cld
sbbl
out
lods
lcall
mov
adc
in
dec
jmp
jo
lea
fsubr
sbb
stos
out
mov
test
ljmp
cmp
xchg
push
jae
shrb
pop
stc
dec
inc
pop
test
or
mov
stos
cmp
dec
sbb
outsl
fistps
mov
cltd
mov
mov
sahf
scas
xchg
fidivrs
insl
hlt
bound
test
dec
loopne
incl
out
mov
and
pop
ds
adcl
fldcw
jl
nop
outsb
inc
push
scas
cmpl
int3
lret
xchg
dec
das
pop
iret
mov
push
and
xor
mov
je
push
mov
test
je
cltd
cmp
es
loop
sahf
testl
sbb
xchg
sbb
pop
cli
sub
aaa
hlt
movsl
jbe
les
add
lret
js
test
jo
in
fdivl
lret
mov
mov
aam
jb
in
sbb
mov
xchg
insl
cwtl
push
in
jle
add
push
sub
inc
es
icebp
pop
add
push
arpl
xchg
xchg
push
jbe
dec
xlat
gs
inc
inc
insl
adc
mov
inc
inc
mov
cwtl
cmpsb
pop
loop
push
stos
pop
pop
nop
mov
xchg
xchg
dec
adc
aaa
stos
mov
xchg
push
cltd
int3
lods
fbld
cmp
cmpsb
push
lods
es
fsubp
mov
lods
ljmp
mov
pop
mov
mov
push
mov
lahf
push
mov
jb
ss
pop
add
addr16
sub
movsl
lods
ss
in
out
add
add
ss
xlat
inc
nop
sahf
mov
je
xchg
pop
adc
inc
xchg
inc
loopne
jns
jbe
data16
clc
nop
inc
or
jae
mov
es
cs
mov
aaa
jns
xor
dec
add
es
fcoms
jo
test
xchg
ljmp
rorl
les
adc
mov
leave
pop
stos
mov
leave
std
mov
pop
cmp
jp
xor
jmp
outsb
xor
or
lods
daa
push
xor
out
cs
and
cmpsl
cltd
rolb
sbb
pusha
mov
push
out
ja
push
jnp
push
mov
daa
mov
jge
stos
pop
aas
sub
and
lock
pop
xlat
xchg
popa
add
xchg
emms
mov
insb
sbb
lahf
mov
mov
dec
addr16
loope
filds
jmp
add
mov
orl
int
mov
aas
repz
inc
adc
mov
push
test
outsb
lret
pop
and
clc
and
arpl
sbb
stos
sbb
mov
xchg
dec
jb
xchg
lods
fldpi
dec
jnp
mov
mov
addr16
push
pusha
jns
sbb
in
xor
out
dec
and
scas
or
mov
lahf
testl
mov
jno
mov
adcl
cwtl
into
jnp
sub
jne
in
cli
popf
sahf
pop
mov
add
sbb
jl
inc
iret
mov
cmp
jmp
cltd
into
xchg
int
cmp
xchg
bound
popa
or
xor
xor
daa
xchg
xor
jns
pop
in
jmp
dec
enter
fcomip
xlat
lahf
mov
or
xchg
and
ja
jns
inc
and
pop
lock
fnstenv
in
rcrb
add
push
test
mov
dec
mov
andb
sub
aaa
mov
mov
xor
or
sub
outsl
mov
mov
push
xor
icebp
notb
mov
or
cmp
clc
xchg
cmp
push
jnp
mov
adc
add
xchg
push
cmp
mov
push
cmp
jb
sub
dec
inc
inc
xor
jmp
mov
rcll
fisttpl
das
add
data16
daa
in
out
lds
les
loopne
mov
xchg
adcl
fistpl
jo
fdiv
das
out
sub
dec
jmp
loop
or
leave
jg
lods
pop
and
clc
fwait
or
dec
jae
mov
movsl
leave
scas
mov
or
jp
xchg
ja
or
xchg
clc
adc
xchg
mov
mov
mov
out
adc
cmp
jg
lods
and
push
stc
rorl
bound
mov
outsl
mov
loopne
loope
push
mov
sti
mov
in
leave
xchg
mov
cmc
jg
mov
insl
lods
call
dec
cmp
pop
lret
or
jno
mov
out
mov
cli
out
popf
addr16
jp
xlat
arpl
mov
push
cmp
jg
xlat
pop
push
and
ret
imul
dec
sbb
adc
pop
jno
addr16
in
pop
cltd
icebp
in
or
adc
out
jns
nop
sub
jmp
enter
xchg
ret
cmp
out
mov
xchg
push
jp
push
lret
mov
jl
pop
mov
push
out
sbb
das
repnz
pop
insl
mov
xchg
ret
adc
and
repnz
loopne
mov
jnp
jne
xchg
xlat
adc
ficoml
mov
addb
adc
xor
push
hlt
jb
insb
mov
add
test
movsb
shll
ja
sarb
mov
xor
dec
jg
fldcw
loopne
loop
lock
lahf
test
jmp
cwtl
out
pop
loop
pop
sub
sbb
fcomip
jmp
dec
lahf
dec
mov
xchg
xchg
xchg
aad
mov
int
cmp
cld
mov
loop
mov
jne
shl
xor
cs
mov
jo
rorl
scas
pop
mov
sub
xchg
push
pushf
pop
fnstcw
push
outsl
sub
test
push
out
cmp
xor
test
sub
jge
mov
fs
sbb
lret
xchg
movsb
ds
sti
mov
mov
sbb
adc
pop
add
add
push
aaa
jle
pop
inc
sub
test
cltd
mov
test
hlt
mov
stos
cmp
or
stc
sbb
mov
xchg
xchg
adc
jne
fsubrl
in
and
jnp
and
mov
mov
loopne
enter
cmp
lods
jb
mov
stos
mov
cwtl
into
imul
fists
hlt
mov
scas
fidivl
les
sub
pop
pop
rcll
outsl
push
push
inc
push
popa
repnz
xlat
out
mov
stos
dec
or
fcmove
test
cmpsb
sahf
jecxz
in
cmp
repz
jb
mov
ss
cli
jae
sub
ror
mov
or
adc
es
sub
xchg
xchg
sub
or
sbb
xor
outsl
and
sub
sub
sbb
cmp
aaa
xchg
jo
test
cmp
pop
mov
dec
sbb
pop
dec
cmp
subb
push
or
xchg
lock
nop
ss
bswap
and
adc
cld
jle
cmp
push
lea
and
add
repnz
xchg
in
pusha
addr16
cli
rorl
into
cld
sub
addb
fwait
lret
insl
xor
stos
xchg
cmpsb
sbb
stos
add
nop
insb
mov
mov
cli
or
push
push
les
adc
mul
add
mov
out
sbb
je
inc
negl
sub
pop
mov
and
clc
ret
xlat
lods
clc
lret
addl
mov
mov
scas
and
xchg
call
stc
xchg
imul
das
fbld
cmpl
loopne
adc
sub
lods
jne
sub
mov
cmp
outsl
inc
jmp
mov
or
xor
clzero
les
pop
mov
mov
es
pop
dec
push
adc
jnp
mov
setae
or
xor
push
add
or
pop
ret
xchg
sbb
vpextrd
mov
push
ret
pushf
add
pop
pop
cmpl
pop
sbb
or
daa
adc
stc
scas
mov
es
stos
dec
subl
lods
imul
or
adc
shlb
fiaddl
ljmp
pop
adc
pop
push
cmc
push
pop
fldpi
imul
inc
mov
mov
bound
lods
fs
pop
mov
scas
or
ds
sbb
imul
arpl
orb
stos
stos
inc
push
inc
aaa
push
test
scas
std
ficoml
cmp
iret
jecxz
testb
push
or
ret
jp
inc
xchg
sarl
fists
xchg
test
jl
adc
negl
lods
cmpsl
pushf
insl
add
xor
cs
data16
pop
mov
push
dec
pushf
lea
scas
insl
mov
xchg
loope
mov
xchg
xchg
fwait
mov
cmp
push
adc
xchg
scas
sbb
adc
pop
jmp
jnp
int3
outsl
mov
imul
push
out
push
push
cltd
pop
jo
adc
sub
inc
pusha
pop
mov
jns
push
mov
sbb
lahf
aad
ret
outsb
mov
adc
icebp
push
mov
sahf
jg
push
jecxz
or
rolb
mov
pop
data16
dec
mov
les
fwait
rcl
out
cltd
xchg
orl
ss
inc
push
lods
fucomip
imulb
ja
sbb
rcrl
enter
lret
mov
adc
cli
pop
aad
jg
ljmp
outsb
xor
call
inc
pop
pop
and
test
or
jbe
add
mov
pop
rclb
pop
inc
fstl
cmp
mov
xorb
adc
jge
or
mov
insl
mov
jge
adc
and
and
mov
les
jle
xchg
xchg
and
fcoms
jg
in
fs
mov
std
notb
lret
movsl
ret
mov
add
std
mov
test
jmp
shlb
add
add
push
adc
or
imul
sbb
mov
and
adc
test
sti
stos
push
pop
imul
bound
fbstp
ss
in
in
mov
mov
sbb
movsb
or
sub
sbb
adc
xchg
cli
inc
lea
outsl
arpl
adc
out
rcrl
lcall
xor
push
xor
dec
xor
push
mov
push
loop
add
adc
cmp
xchg
test
test
stos
dec
nop
call
je
mov
fdivrl
leave
sub
inc
loopne
sbb
adc
dec
dec
xchg
data16
xchg
divb
in
mov
lds
or
xchg
or
xchg
and
sbb
inc
push
mov
mov
pop
xchg
es
dec
je
push
jb
and
ret
inc
xor
test
pushf
jne
out
test
in
adc
push
sbb
mov
adc
xchg
mov
movsl
push
data16
dec
xchg
pop
int
add
mov
sbbb
data16
sbb
out
mov
icebp
add
or
cld
outsl
mov
push
mov
jl
test
out
xchg
cmpsl
xor
or
pop
clc
in
dec
pop
mov
sarl
sub
cmp
mov
jb
ljmp
jne
hlt
xchg
nop
or
xchg
xchg
adc
imul
stc
xor
jbe
cmp
jno
jo
hlt
cmp
cli
jge
lods
in
jbe
push
shlb
jge
mov
sahf
xor
stos
push
jb
je
push
jg
pop
mov
lret
mov
fs
pcmpeqb
mov
sti
sub
mov
andb
jae
cmpb
inc
cmp
jno
hlt
aam
adc
call
jp
or
adc
dec
aas
stc
mov
hlt
test
push
jp
stos
inc
inc
push
push
push
mov
mov
xchg
jle
push
push
fldl
mulb
add
sbb
pop
lahf
mov
sbbl
bound
mov
loopne
xor
scas
rcll
dec
add
inc
jge
jp
outsl
bound
loopne
stos
cmp
mov
inc
fsubl
or
cmp
jae
loope
negl
not
lds
mov
push
push
mov
jg
ljmp
mov
or
xor
push
rclb
dec
arpl
and
testl
push
mov
adc
xchg
or
pop
jp
mov
hlt
repnz
sbb
inc
add
dec
sbb
pop
subb
mov
addr16
inc
movsb
mov
inc
cli
mov
pusha
push
mov
scas
scas
es
and
scas
jbe
mov
daa
sbb
push
cmp
or
cmp
test
mov
push
je
sbb
leave
fs
mov
jno
cmp
push
in
cwtl
xchg
adc
inc
test
imul
xor
repnz
scas
xor
sahf
bound
push
mov
outsb
xchg
mov
xor
ret
jecxz
cmp
ds
jo
xchg
jb
fwait
sub
into
add
xor
inc
jecxz
int3
jg
xchg
les
cmpsb
int3
les
push
adc
sbb
sub
jle
lock
xor
in
push
ret
push
mov
cs
das
in
inc
xor
mov
loop
loop
pop
cmpsl
cmp
jb
add
jne
adc
shlb
dec
lods
imul
into
jns
and
cmc
sub
ret
stc
cmp
mov
pop
fldl
xor
je
ljmp
jmp
pop
dec
xor
out
jmp
jmp
push
xchg
add
aad
xchg
xchg
cmpb
shll
sbb
imul
mov
cmp
jecxz
shll
jae
xlat
dec
pop
mov
leave
xchg
or
data16
push
insl
imul
movsl
fstps
mov
es
outsb
lahf
insl
jmp
popa
jge
rcl
add
stos
clc
popa
cmp
pop
mov
ret
enter
cmp
inc
xor
shrl
popf
or
pop
xlat
scas
into
pop
mov
cs
sbb
fwait
jb
jge
xchg
fucomi
je
jecxz
push
fwait
sbb
mov
push
mov
outsb
push
lret
adc
push
out
or
dec
test
test
cmc
outsb
inc
dec
test
xchg
call
mov
mov
jmp
fidivrl
popf
inc
ror
fwait
push
or
mov
xchg
cs
cltd
aad
mov
sbb
cmp
dec
push
xlat
iret
insl
pop
inc
out
imul
repz
dec
icebp
xchg
push
mulb
xor
mov
mov
pop
pop
or
push
daa
mov
mov
push
arpl
jl
or
outsl
ljmp
mov
mov
and
inc
mov
adc
divl
mov
push
ja
mov
xor
lods
cmc
add
xchg
adc
fs
into
cli
test
pop
xor
daa
sbb
push
push
add
sub
insl
jb
xchg
sbb
mov
dec
and
imul
insb
sub
addr16
test
insb
popf
add
pop
imul
cmp
pop
out
dec
xor
xchg
mov
andl
movsb
testb
xchg
pop
jo
cmp
xchg
popf
sbb
push
pop
pop
and
mov
dec
movsl
adc
cmpsb
xchg
jo
and
mov
mov
push
inc
push
dec
adc
lcall
adc
ja
ficomps
notl
cmp
mov
push
cmp
sub
push
mov
jg
fdivrl
jns
iret
ret
lea
lods
subl
mov
jno
hlt
seto
mov
sti
addr16
aam
cmpsl
ja
adc
ss
jle
inc
xchg
sub
mov
leave
pop
ret
cmp
mov
mov
stos
inc
aaa
cmpl
xchg
out
aad
je
adcb
add
push
fcmovnbe
cltd
ds
jb
and
or
push
fwait
dec
inc
dec
adc
cs
push
mov
inc
adc
mov
aas
pop
cmp
stc
test
push
stos
dec
xchg
cmp
sbb
stos
nop
inc
loopne
sub
ja
aaa
mov
mov
pop
sub
xchg
cmc
aad
addr16
lods
das
push
and
mov
pop
cmp
pop
xchg
mulb
push
add
sbb
rcrb
cmpsb
fidivs
cltd
stos
dec
clc
pop
pop
scas
dec
data16
mov
xor
arpl
jns
xchg
scas
divl
pop
or
or
push
fwait
jmp
mov
xchg
add
lahf
sub
xor
out
jge
push
sbb
shrb
mov
aaa
stc
push
cmp
ret
cli
or
jl
in
lcall
nop
xchg
lret
popa
lods
js
pushf
imul
shrl
xchg
clc
xchg
mov
pushf
xchg
cwtl
clc
pop
fimuls
dec
aas
in
pushf
nop
push
fdiv
and
dec
sti
mov
push
push
jmp
ljmp
ljmp
pusha
arpl
data16
xor
jmp
xchg
test
adc
jne
fisubrs
jne
push
test
push
test
push
and
jge
lds
push
js
mov
adc
jne
sbb
xchg
test
fdiv
gs
sbbl
test
mov
sbb
es
iret
xor
xor
jo
mov
femms
xchg
push
fstps
inc
mov
out
mov
mov
or
pop
pop
sarl
push
add
push
mov
mov
sub
leave
jmp
cwtl
addb
stc
sbb
and
in
xor
repz
adcb
stos
add
pop
stos
xor
stos
sub
cmp
clc
lods
lea
mov
cli
out
inc
lcall
inc
xchg
jbe
or
notb
adc
push
out
adc
mov
mov
leave
movsb
pop
iret
cmp
enter
cmp
mov
xor
into
test
or
mov
in
xor
dec
lods
dec
std
jmp
rcrb
andb
pop
xlat
imull
mov
lret
out
push
inc
jmp
out
jae
add
jp
mov
xlat
xorb
repnz
je
mov
mov
dec
movsb
icebp
xor
js
repz
and
inc
pop
jecxz
mov
dec
loope
xor
cmc
ds
in
xchg
dec
push
lahf
addr16
mov
stc
lods
inc
stos
xchg
sbb
mov
push
imul
faddl
int
jns
sbb
or
push
push
gs
loop
ret
popa
shl
jns
inc
mov
xor
data16
mov
inc
insb
cli
dec
pop
and
into
out
outsb
adc
xchg
cld
sarl
inc
push
cli
xchg
iret
lahf
mov
orb
mov
push
test
mov
jp
xchg
aad
cli
les
mov
cmpsl
add
hlt
inc
nop
je
cmpsb
cmp
call
sbb
imul
lods
aaa
stos
mov
jecxz
push
fs
push
cmp
push
dec
xchg
daa
testb
pop
inc
insb
dec
mov
inc
mov
inc
xchg
pop
mov
fcompl
sub
aas
sub
xor
xor
lock
test
outsl
push
lret
rclb
fwait
adc
and
xorl
fsubr
mov
les
imul
ljmp
mov
xor
add
jo
sbb
xor
cmp
daa
sub
clc
add
or
lahf
mov
mov
xchg
stos
out
jecxz
mov
push
je
gs
ljmp
or
mov
mov
loope
dec
mov
test
add
ret
andb
sbb
aaa
push
test
xchg
xchg
cmp
sub
adcl
cmpsb
pusha
lcall
iret
lds
sbb
stos
loopne
scas
inc
push
jo
jnp
scas
pop
inc
xchg
jae
cmpsl
aam
pop
stos
or
out
fs
sti
mov
fwait
push
add
xorl
nop
mov
adc
divb
xchg
push
or
fs
pop
sbb
jecxz
popa
clc
fdiv
sbb
fcmovnb
xchg
or
mov
cmp
mov
js
mov
xor
inc
pop
out
imul
xchg
xchg
movsl
nop
ds
inc
scas
pop
sbb
pop
out
mov
jg
pushf
out
lods
scas
shll
xchg
or
jle
jo
in
int
incl
rcrb
dec
push
aaa
xlat
popf
cltd
fbld
iret
arpl
loope
sar
lods
hlt
and
fisubl
add
fwait
pop
xchg
sbb
jmp
dec
push
mov
addr16
xlat
xchg
aaa
repz
pop
push
mov
jp
shrl
add
mov
ljmp
xchg
ds
les
sbb
add
lds
push
mov
inc
mov
and
push
jo
jmp
js
xlat
sbb
push
mov
dec
mov
mov
add
mov
xchg
outsl
lods
cmpl
mov
lods
mov
xor
arpl
lods
mov
mov
pop
adc
add
pushf
idivb
ret
loop
and
push
pop
adc
xor
or
cmp
jge
inc
imul
aad
mov
pusha
lock
test
ljmp
jne
test
scas
test
jne
adc
xchg
aas
and
in
add
icebp
lea
push
sub
popf
arpl
outsb
shll
pop
das
add
adc
aaa
daa
loope
imul
ja
sub
add
loope
movsb
push
jmp
loopne
mov
jbe
insl
mov
mov
lea
xor
inc
inc
lret
adc
dec
add
js
fimull
add
nop
adc
cmp
shlb
push
mov
cmpsb
lock
push
addr16
sbb
out
dec
pop
lds
fs
iret
xor
enter
push
and
add
test
mov
cmpsb
adc
sub
into
inc
and
push
jp
sbb
scas
jo
mov
rorb
insb
and
cmp
jp
loop
jne
mov
inc
lea
repz
sbb
nop
rcl
jle
xor
xor
iret
cs
shll
sbb
cmp
movsl
loop
out
sbb
jle
jge
mov
push
leave
xlat
inc
pop
mov
push
mov
out
sub
inc
pop
stc
and
xchg
enter
notb
sub
xchg
mov
and
xchg
mov
mov
xor
sbb
dec
test
cld
pop
sbb
mov
flds
out
xchg
das
rcl
shrl
pop
push
psraw
test
inc
fs
aad
pop
pop
jae
mov
xchg
xlat
ficomps
jmp
mov
gs
scas
sbb
ja
in
pop
xchg
stos
movsb
and
cmp
xchg
mull
xchg
out
jns
sbb
or
data16
fwait
and
adc
mov
cmp
fstpl
loopw
roll
loope
lock
jmp
insl
sbb
movsb
mov
jne
add
xor
daa
aaa
js
mov
cmpsl
pop
xchg
dec
and
jge
ljmp
xchg
cmpsb
int
mov
out
addr16
mov
dec
imul
je
and
add
xchg
icebp
push
and
divb
sbb
xchg
mov
shll
clc
jo
mov
adc
mov
shlb
popf
adc
shll
enter
mov
pop
out
jge
das
dec
fiadds
mov
and
or
dec
or
cli
dec
mov
jge
push
dec
aas
inc
in
mov
xor
sub
sahf
dec
iret
mov
cmpsb
dec
mov
mov
add
add
inc
cmp
lock
dec
ror
push
inc
rorl
xor
or
aas
scas
scas
sub
jmp
movsl
sub
js
sbb
mov
jns
sbb
dec
mov
ret
aaa
or
faddl
daa
movsb
aam
lock
lods
push
mov
decl
loope
cltd
xor
outsl
cmp
mov
outsb
out
repnz
add
jle
movb
xchg
orb
sbb
mov
add
fadds
ja
stos
ss
imul
cltd
inc
mov
out
ja
ss
fisttpll
sub
add
out
gs
jb
out
sub
or
subl
push
ficompl
mov
popa
stos
push
cmp
mov
or
xorb
shl
sti
push
rcrb
pop
pop
dec
cltd
adc
add
mov
rorl
adc
aad
stc
aaa
dec
mov
lods
ja
push
dec
jne
mov
dec
mov
enter
mov
dec
js
jecxz
stc
jle
jle
call
gs
inc
xchg
cmp
or
or
aaa
cwtl
addr16
dec
pop
call
data16
shl
xchg
adc
xchg
or
mov
out
mov
sbb
mov
sbb
stc
xchg
ljmp
fnstcw
xorb
push
popf
lret
mov
dec
stos
add
pop
dec
lret
lcall
push
jg
adc
popf
nop
sub
lret
sete
jmp
arpl
aad
mul
inc
cmp
mov
mov
mov
icebp
es
loopne
enter
nop
repz
mov
xor
je
fldt
pop
cmp
cmp
rorb
sub
fwait
iret
daa
mov
rolb
mov
ss
addr16
mov
pop
ret
scas
aad
frstor
fists
jl
sbb
pop
cmp
sbb
jo
ret
in
xchg
icebp
xor
push
lret
jmp
insb
push
insb
lods
cmpsl
test
insl
aas
repz
lds
mov
pop
mov
sbb
mov
jb
add
sbb
sbb
adc
fwait
dec
jno
pop
xor
rcr
push
cmpsb
ss
daa
mov
mov
add
bound
mov
or
jmp
add
inc
sub
mov
popf
fst
jmp
mov
add
outsl
icebp
insl
cmp
rcrl
mov
push
int
xchg
test
mov
lret
fcos
arpl
movsb
dec
jge
xadd
sub
mov
sub
hlt
mov
cltd
adc
cs
xor
and
out
cmpsl
pop
imul
pop
mov
xor
outsl
inc
or
std
jle
daa
xor
sahf
sub
popa
mov
and
test
imul
mov
je
pop
js
stc
pop
loopne
mov
scas
in
fistps
cmp
jmp
xor
int
repnz
cmp
sbb
or
pop
cwtl
xchg
cwtl
cwtl
popl
sub
test
push
xlat
ljmp
movsl
icebp
sub
sbbb
cld
sub
aas
std
mov
sbbl
test
jmp
mov
or
fwait
mov
notl
mov
xor
ljmp
mov
in
loop
jo
enter
notl
dec
das
inc
or
push
outsl
or
jl
pusha
orl
sub
or
sub
ret
push
std
mov
aad
out
je
les
sbb
je
enter
fdivl
ret
cmp
movsb
arpl
pusha
pop
jae
push
fcoms
push
jge
xor
inc
into
cli
sti
dec
fcmovne
popf
adc
mov
imul
add
adc
add
xor
loopne
sahf
add
lock
hlt
jmp
sub
dec
mov
push
jnp
mov
sub
cmpl
cmp
mov
imul
cld
mov
repnz
das
or
jg
repnz
mov
aaa
mov
aas
inc
inc
push
mov
and
movsl
shll
pop
push
mov
pusha
iret
and
xchg
rolb
xchg
aam
arpl
lock
xor
cmpsb
add
aad
jae
test
sub
sbb
mov
out
cwtl
aaa
mov
in
movsl
repz
inc
mov
mov
sbb
gs
cmpsb
lods
out
sub
mov
dec
cmpsb
bound
xchg
insl
mov
call
and
adc
push
cwtl
cmp
enter
in
in
insl
cmp
scas
dec
or
in
push
out
push
mov
das
stc
jmp
adc
xor
xchg
aad
push
xchg
pop
cli
ror
xchg
pop
cltd
inc
fisttpl
test
jnp
or
xchg
jmp
pop
lahf
test
cmp
or
mov
xchg
xchg
xor
cmp
cmp
dec
les
repz
ret
std
dec
in
std
jle
push
inc
xlat
inc
stos
push
addr16
mov
mov
push
stos
pushf
pop
scas
aam
test
xor
mov
hlt
pop
sbb
add
pop
into
push
pop
rclb
mov
xchg
stos
data16
outsl
sbb
push
lcall
mov
sbbl
fimuls
es
or
negb
push
and
jmp
mov
in
mov
or
cmpsl
fxch
xchg
shlb
xchg
out
jmp
insb
jb
cmpsb
sub
dec
sub
and
loopne
les
sub
lods
es
inc
loop
arpl
out
dec
jge
das
int3
adc
lock
mov
push
mov
inc
and
adc
lret
cmp
sub
subb
xor
pop
fwait
dec
jl
or
adc
adc
fwait
pop
imul
push
fdivrs
dec
xchg
or
fdivs
sbb
icebp
fdivs
xchg
fstps
das
jne
in
xchg
sarb
sarl
addr16
mov
or
jg
jne
dec
idivb
sub
std
test
das
ret
cwtl
adc
ret
ret
fistps
inc
dec
xchg
test
pop
push
es
stc
add
cli
insl
into
cmp
xor
cltd
sub
arpl
je
pusha
lret
cmp
frstor
jmp
fadds
in
movsb
lds
ja
mov
aaa
loopne
push
out
in
rorl
leave
mov
add
out
push
pushf
jp
xor
dec
push
test
repz
data16
inc
xchg
dec
test
or
push
and
notb
lock
add
adc
ljmp
pop
aas
and
dec
int3
aad
jle
shlb
out
xchg
pop
xchg
shrl
cmp
cwtl
adc
cli
pop
and
mov
in
ja
repz
push
aas
test
adc
shlb
movsb
push
leave
fmulp
in
inc
sbb
ljmp
fs
jne
imul
xchg
mov
xor
in
cmp
loop
pop
or
cmpsb
nop
mov
out
scas
fiaddl
ja
sarb
jmp
jge
ja
lret
cs
sahf
and
adc
pop
push
scas
jne
loope
fs
mov
mulb
jl
pop
dec
stos
test
enter
or
xchg
dec
push
js
js
ja
or
dec
inc
ss
pushl
pop
imul
into
and
movsl
insb
aas
fildl
pop
pop
or
das
xor
xor
mov
std
pop
pusha
adc
add
mov
cmpb
cmc
xchg
xor
push
clc
std
lea
leave
icebp
xlat
cmpsb
scas
dec
rol
sbbb
insl
mov
sub
sub
pusha
push
xor
or
and
gs
int3
scas
dec
je
push
jb
xchg
push
imul
mov
push
aad
sub
inc
sahf
mov
push
imul
adc
lds
inc
in
pop
add
add
ljmp
mull
cmp
jle
lds
mov
loopne
mov
inc
sbb
pop
cmp
push
mov
in
outsl
xchg
sbb
dec
shl
or
inc
das
ljmp
dec
jae
fwait
inc
cmpsb
sbb
add
cmp
nop
nop
jg
decw
pop
test
lret
xchg
push
adc
test
stos
sti
xchg
cmp
cmp
inc
in
stc
outsb
cmp
mov
sbb
add
dec
int3
inc
xchg
sub
aas
rep
jp
test
insb
notl
nop
cld
int3
inc
stos
je
addr16
mov
push
mov
mov
jb
xor
sahf
push
mov
jmp
xor
mov
mov
mov
rolb
jo
add
mov
in
jne
loope
or
sub
fs
inc
cmp
add
inc
es
lret
les
mov
mov
dec
cltd
imul
shl
sub
out
jle
xor
xlat
in
shr
cmp
inc
pop
psrad
jne
pop
sub
sar
xor
sbb
sub
outsl
push
inc
imulb
arpl
sbb
lret
pop
mov
xor
mov
loope
mov
mov
mov
adc
cmp
iret
cmpsl
ds
xor
fwait
sub
sub
cs
push
cmp
outsb
add
inc
imul
xor
xchg
add
mov
mov
push
pop
std
xor
mov
stos
fwait
mov
jl
bnd
loopne
je
xor
fisttps
fadd
xor
xor
push
das
clc
adc
jae
daa
lret
pop
push
flds
adc
pop
dec
mov
fwait
push
rorb
push
sbb
int
sub
or
push
ffreep
mov
dec
cmp
in
dec
popf
inc
pop
dec
imul
int3
ret
movsb
jb
mov
mov
pop
xor
daa
popf
movsl
jnp
jne
xchg
out
add
mov
outsb
cmp
jg
rclb
push
out
hlt
jb
add
aad
stos
add
shlb
shlb
xlat
outsl
sub
and
add
enter
lea
push
sbb
nop
je
sahf
xchg
lcall
xor
inc
loop
int3
out
cmp
push
adc
dec
jbe
ljmp
inc
mov
push
and
sbb
jns
xchg
dec
ret
add
sbb
insl
mov
rorb
add
and
cmp
popa
aam
out
arpl
cld
lds
lds
mov
sbb
data16
aam
add
add
negl
popa
loope
sbb
inc
push
arpl
and
leave
or
and
mov
int
pop
push
jbe
sbb
insb
iret
addl
divb
cld
repz
sub
mov
insb
push
jmp
rcr
or
pop
jo
jecxz
mov
mov
repnz
mov
scas
xchg
lods
mov
pop
ljmp
jne
and
sarb
enter
insb
mov
gs
and
cmpsl
addb
jp
add
cmp
sbb
xor
ss
jmp
xor
cmp
pusha
mov
cmc
mov
gs
add
shlb
sbb
mov
mov
push
pusha
and
lret
aad
or
fwait
iret
fstl
call
clc
out
hlt
sti
setl
xchg
shl
jp
pop
in
mov
cmpl
ret
dec
lahf
cwtl
xchg
push
pusha
cli
adc
push
mov
fsubrs
dec
arpl
in
push
stc
lcall
arpl
dec
cld
xlat
and
out
sub
jle
lahf
xchg
jle
jbe
insl
in
imul
or
push
stos
std
xor
or
lret
icebp
jge
ss
mov
jp
add
mov
ja
mov
mov
stc
sub
fidivs
popf
and
andb
pop
arpl
mov
inc
sub
mov
and
push
lcall
mov
sti
sbb
inc
repz
pop
std
inc
mov
mov
dec
bound
add
mov
jno
sti
mov
hlt
add
mov
stos
fdivl
and
mov
in
outsb
push
lret
cmpsl
jo
daa
adc
fsubp
sbb
out
add
mov
insb
xor
aaa
jecxz
dec
lods
mov
ljmp
mov
mov
subb
push
pop
pop
insl
jnp
add
loope
popf
pop
ret
rcrb
fsubrl
call
sbb
rorl
insb
xor
mov
out
adc
ljmp
and
jo
ret
push
dec
sub
xor
je
leave
test
outsb
mov
xor
push
int3
or
or
inc
sbb
cli
test
cltd
mov
jle
iret
lea
mov
sbb
pop
push
mov
add
repz
fcmovb
or
push
mov
in
or
dec
or
cmp
sbb
ljmp
into
iret
js
aas
imul
xchg
fisubs
and
negl
repnz
sub
in
incb
dec
repz
xor
add
andl
rcrl
push
in
scas
pop
dec
sti
clc
inc
into
scas
mov
mov
and
test
mov
lods
inc
cltd
mov
pusha
adcl
sbb
idiv
pop
in
adc
icebp
ds
fsubp
sbb
fbstp
mov
test
jns
decl
cmpsb
push
dec
test
jnp
aad
or
add
test
fdivrl
mov
arpl
inc
adc
lahf
pop
jg
inc
xlat
mov
in
ds
push
clc
cmp
test
mov
fs
inc
sbb
dec
dec
and
stc
in
sbb
or
inc
nop
or
or
fistpl
mov
fsubl
adc
cmc
int
cmp
jo
insb
fsubs
cmc
addl
js
add
movsb
scas
mov
aam
psubsb
mov
daa
insb
in
scas
lea
aaa
daa
jg
pop
xchg
insb
loopne
cmp
bound
std
aam
or
dec
jae
xor
insb
shrb
in
xchg
popa
sub
xchg
rolb
jno
push
mov
gs
sbb
imul
pusha
mov
sbb
xchg
scas
rcrl
pop
jecxz
dec
push
outsb
in
aas
mov
arpl
mov
out
sbb
das
dec
sub
les
push
test
imul
inc
adc
hlt
imul
aas
nopl
mov
ljmp
ror
lods
xlat
inc
sub
xchg
add
repnz
pop
loope
popl
sub
sub
adc
push
out
ret
rcll
sahf
out
mov
out
adc
aam
xchg
icebp
lods
into
lods
mov
dec
inc
das
pop
mov
mov
pop
cld
in
adc
dec
mov
pop
ljmp
pop
and
fistpll
add
gs
dec
pop
cmp
hlt
mov
push
aam
movsb
and
jae
leave
mov
and
xor
cmp
cmp
add
gs
xlat
js
and
cltd
sub
xor
jmp
in
lret
add
insl
adc
xchg
or
sar
dec
shrl
cmpsl
dec
cmc
push
outsl
add
jl
insb
mov
orl
sub
fs
jns
jnp
cmp
daa
daa
push
call
shrb
fwait
sahf
rclb
pop
xor
pushl
push
dec
push
push
jns
cmpsb
orl
push
jno
stos
push
mov
das
pop
data16
stc
mov
jp
es
lcall
scas
cmp
xchg
mov
pop
pop
jne
fcom
loop
mov
in
xchg
inc
lcall
xchg
outsl
pop
jne
ret
mov
and
out
cmpsb
mov
fadds
aaa
cmc
adc
pop
inc
aam
cmp
rorb
fisubs
dec
mov
enter
das
ljmp
cld
repz
test
test
pop
inc
add
sub
lea
pop
mov
lock
fcmovu
in
aas
imul
ss
cmp
xchg
mov
in
mov
sbb
into
sbb
cmp
mov
or
mov
jbe
or
cmp
and
imul
psubusw
push
xor
adc
hlt
out
std
stos
je
test
inc
das
jnp
icebp
lret
into
aaa
jmp
scas
xorl
or
test
adc
push
fdivp
xor
mov
rol
fstl
mov
fdivl
fs
outsb
push
testb
mov
push
dec
fbstp
es
mov
add
pop
movsl
das
sti
movsl
ljmp
or
xchg
sub
lret
aas
cltd
mov
push
test
mov
fsubl
je
imul
sbb
ljmp
pop
nop
adc
xchg
cmp
or
sbb
adc
lds
mov
xchg
push
arpl
mov
icebp
and
pmulhuw
nop
ja
mov
ret
das
loop
fidivl
mov
push
addb
aad
dec
mov
in
sbb
movsb
fs
bound
iret
pop
out
inc
imul
jne
stos
jle
fisubl
popf
imul
jl
xchg
rorl
add
mov
xorb
test
popf
fsubrl
popa
out
push
mov
push
in
jecxz
loopne
lcall
aad
xchg
fsubs
data16
or
add
addl
repz
repnz
mov
dec
sub
stos
jle
iret
movsl
jle
nopl
lret
lods
mov
icebp
lods
aaa
adc
lret
lock
data16
fldcw
dec
sbb
mov
