push
mov
add
push
push
push
nop
push
nop
ret
nop
rdtsc
push
nop
pop
cmp
jb
nop
call
push
mov
mov
mov
addl
sub
ret
nop
je
nop
nop
nop
push
call
nop
nop
nop
movl
movl
nop
nop
nop
lea
push
push
pushl
pushl
call
nop
nop
nop
shrl
mov
mov
xor
push
mov
popl
add
mov
decl
jne
nop
nop
pop
pop
pop
leave
call
call
nop
call
call
mov
or
out
jb,pn
xchg
mov
push
jne
shll
xor
clc
mov
stos
ds
fstl
dec
ljmp
insb
icebp
fwait
xchg
popa
adc
lea
xchg
lock
mov
cmpsb
sub
out
int3
lock
adc
fs
and
out
jb
insl
jbe
push
add
push
inc
pop
imul
flds
xchg
lret
and
adc
fwait
orl
adc
ja
into
ret
sbb
sbb
in
cwtl
orl
inc
xchg
fisubl
pop
mov
xchg
repz
xchg
and
dec
out
bound
mov
pusha
or
cmpsl
lods
add
jmp
and
leave
and
xchg
pushf
lcall
jcxz
out
enter
fisttps
insb
push
pushf
aaa
xchg
sbb
jno
test
jo
nop
stos
jae
cmpsl
test
mov
insl
mov
push
out
mov
mov
fwait
jmp
aaa
ret
es
mov
ss
inc
and
fisubrs
jp
in
lret
subb
fwait
out
and
dec
add
and
sub
sbb
and
fnstcw
jae
and
sbb
filds
push
push
and
lods
imul
mov
in
gs
insl
sbb
push
inc
add
out
stos
dec
stc
and
addb
jnp
cs
stos
jne
jl
out
insb
cmpsb
fs
mov
stos
movsb
imul
insb
cmpsb
fs
loope
and
ret
add
mov
dec
loope
clc
clc
adc
pop
in
sbb
stos
clc
fnstcw
jae
shrb
insl
sbb
clc
stos
pushf
loope
in
daa
faddl
stos
sbb
inc
stc
and
cli
mov
inc
add
or
sbb
lea
push
arpl
arpl
clc
pop
arpl
loop
arpl
pop
arpl
mov
and
aam
sbb
outsl
sub
sub
xor
push
out
adc
mov
int3
sbb
adc
sti
jg
stos
and
in
daa
aaa
sarb
stos
rol
pop
ss
and
cmpsl
imull
pop
arpl
inc
or
call
cwtl
mov
pop
arpl
cmc
add
icebp
cmp
outsb
adc
pop
out
sub
push
hlt
bound
popa
enter
int3
pop
inc
mov
sub
popa
mov
mov
jg
insl
push
lods
dec
and
jnp
push
loopne
sub
cwtl
mov
lret
int
pop
cwtl
mov
pusha
rolb
jg
mov
ficoml
into
pop
arpl
xor
push
jmp
mov
into
adc
jno
in
xor
sbb
or
repz
pop
es
pop
pusha
rolb
inc
imul
call
sti
lock
addr16
dec
sbb
or
aam
pop
inc
and
jl
push
enter
sti
mov
test
arpl
into
sub
and
mov
adc
pop
adc
jge
and
into
pop
jno
mov
mov
sti
sbbl
in
push
add
sbb
dec
mov
fstl
mov
aas
into
pop
arpl
into
and
mov
sub
nop
and
push
negb
inc
test
jecxz
sti
cmp
lretw
aad
push
fmull
mov
xor
test
xor
pop
aaa
out
pop
aaa
sarb
stos
rol
pop
ss
and
cmpsl
out
aam
sbb
pop
xchg
in
xor
loop
addl
lcall
arpl
mov
stos
imul
int
add
mov
pop
ss
arpl
lahf
xor
lods
sbb
stos
popf
in
xor
es
inc
in
xor
mov
outsb
xor
cs
orb
sti
out
nop
pop
inc
and
xor
and
xor
add
mov
sti
sbb
faddl
xchg
hlt
pop
arpl
xor
or
mov
push
cmpsb
outsb
pop
scas
mov
in
xor
mov
adc
aam
inc
cltd
mov
in
xor
and
rcr
adc
pop
xor
sahf
in
xor
xlat
pop
arpl
stos
bound
into
aam
sbb
pusha
inc
repnz
sub
test
and
inc
adc
adc
setl
aaa
dec
jl
dec
mov
mov
imul
adc
xchg
nop
mov
add
xchg
arpl
pop
insb
movsb
mov
inc
xor
adc
aam
sub
jl
shlb
pop
push
sarl
aam
pop
inc
sub
mov
lods
dec
nop
fsubl
data16
decb
xor
arpl
into
mov
arpl
into
pop
sbb
outsl
sbb
sub
jnp
cmp
mov
xor
lds
or
arpl
call
sbb
sub
cmp
int
imul
in
or
pop
pusha
push
pop
and
or
stos
sti
mov
pushf
in
xchg
hlt
mov
dec
pushf
ja
insl
aam
sbb
imul
arpl
cli
sub
jne
in
add
jne
arpl
into
pop
pop
sub
sub
jge
arpl
into
aam
adc
fmull
xor
repnz
and
pop
arpl
fisubl
std
inc
sbb
dec
jmp
into
pop
loopne
into
pop
arpl
ds
arpl
into
mov
arpl
into
pop
push
sbb
addr16
fsubl
jnp
sub
insb
es
lahf
in
xor
sub
jmp
pop
ja
jae
adc
aam
sbb
pop
arpl
into
pop
call
adc
pop
pusha
data16
aam
pop
lds
mov
sbb
mov
add
and
pop
arpl
ret
or
imul
inc
pop
adc
pop
pop
pop
sub
dec
cmp
inc
add
pop
insb
mov
adc
mov
out
xor
pop
adc
pop
pushf
pmaxub
sbbb
orl
push
rclb
rcrb
add
push
jl
xchg
inc
outsb
jbe
das
sbb
aaa
jnp
sub
xor
ds
aam
sub
xor
mov
cmp
std
insl
outsb
pinsrw
iret
or
inc
mov
pop
iret
push
bound
nop
sbb
sbbl
sub
inc
mov
dec
and
inc
inc
jge
ret
pop
cli
mov
jbe
fs
roll
lds
cli
push
inc
xchg
mov
jb
in
or
mov
mov
push
sbbl
int
mov
mov
scas
sbb
lcall
and
ja
int3
push
sbb
push
sbb
mov
add
jbe
cs
dec
jp
cmp
addr16
xchg
push
xor
and
xor
push
ret
pop
jg,pt
rcrl
inc
adc
jne
jne
rdpmc
sbb
sub
fidivrs
stc
push
or
dec
sub
lret
mov
cwtl
fdivs
outsb
shrd
mov
iret
hlt
ja
fdivrp
popa
sbb
or
popa
shufps
inc
push
push
fidivrs
sahf
iret
xchg
and
std
cltd
and
cmp
sbb
fildl
in
mov
pop
aaa
pop
lods
xor
pop
jp
push
out
out
fnstsw
push
inc
push
jle
mov
adc
inc
lahf
jae
inc
sbb
xor
ret
fistl
sti
popa
pop
repz
and
in
fcomi
xlat
push
fisttps
mov
xor
push
cmpsb
jl
subb
aaa
sub
adc
pop
sbb
fcomip
pop
jg
inc
sbb
fcomi
aas
xor
xchg
fidivs
sti
mov
sbb
iret
sub
call
mov
mov
imul
stc
imul
sub
inc
not
sub
jnp
mov
lock
daa
adc
push
test
fisttpl
push
pop
lret
insb
mov
testl
aam
adc
lahf
out
push
cvtdq2ps
adc
stos
sub
push
repz
and
cmp
pop
gs
mov
in
push
call
sbb
test
cmp
mov
adc
outsl
setle
imul
mov
repnz
lock
ret
fdivp
inc
fwait
push
call
stc
es
mov
pop
sbbl
popf
push
pusha
faddp
mov
jo
es
fnstcw
dec
push
bound
mov
adc
push
pop
xor
imul
pop
clc
mov
lcall
lret
pop
xchg
add
mov
and
rcr
pop
xor
inc
xchg
popa
mov
xor
sti
scas
xor
fidivrs
inc
xlat
stos
clc
pop
pop
push
lods
jbe
nop
mov
pusha
data16
sub
mov
dec
jle
adc
stc
dec
xchg
xor
in
sub
dec
nop
push
jb
int
out
je
mov
pushf
je
cmp
nop
mov
push
mov
inc
push
sbb
movsb
scas
xchg
rolb
iret
sbbb
jno
dec
mov
fnsave
or
xchg
lret
adc
lahf
fwait
out
inc
imul
sub
pop
imul
mov
and
sub
mov
adc
pusha
inc
es
mov
ja
or
lret
mov
lea
jb
test
inc
jp
imul
inc
fildll
inc
repnz
dec
cmp
nop
cmc
fimull
cmp
jne
addr16
out
cmpb
sub
mov
sarl
cmp
pushf
push
aaa
loope
inc
pusha
cmp
lahf
push
nop
pusha
out
lret
lea
mov
inc
sbb
mov
xchg
inc
push
out
push
sub
cwtl
mov
out
add
imul
pushf
pop
lret
pop
mov
out
cwtl
dec
repz
jne
pop
mov
pop
arpl
push
loopne
in
divl
inc
enter
iret
iret
xor
xchg
out
popa
push
inc
mov
int
jns
or
insb
xor
pop
outsb
das
jecxz
subl
fs
je
test
outsl
adc
mov
and
inc
push
inc
adc
inc
inc
dec
out
dec
sbb
les
xor
call
mov
pop
clc
dec
insb
test
ret
add
lods
and
cli
std
clc
int
leave
inc
lods
xchg
and
in
insb
push
dec
std
pop
add
jo
imul
dec
pop
pop
mov
int3
iret
loop
push
xor
jp
or
das
pop
sbb
xchg
or
mov
std
fs
out
loop
dec
xor
daa
dec
es
sbbl
add
sub
sti
push
cld
into
sbb
xchg
out
xchg
out
add
fmuls
test
aas
mov
in
outsl
add
mov
je
les
fisubs
cmp
icebp
sbb
mov
lret
sti
mov
push
cltd
inc
sbb
leave
xor
inc
adc
cmpsl
dec
pushf
repz
test
sbb
outsl
xchg
std
push
pop
xchg
out
add
mov
rclb
es
out
mov
iret
fstps
decl
daa
push
dec
xor
adc
leave
xor
stos
test
stos
push
sub
push
jmp
push
mov
mov
addr16
cmp
test
push
pushf
dec
jae
push
movsl
dec
adc
sti
movsb
mov
add
or
inc
divsd
cmpsb
sub
sub
sub
in
cs
mov
test
call
pop
jbe
notl
mov
fidivl
mov
cmp
mov
dec
ljmp
push
xchg
cmp
lods
inc
das
inc
clc
jmp
fs
inc
shl
sbb
ljmp
inc
aaa
adc
in
cld
xchg
ljmp
cmpsb
jecxz
repz
sbb
jge
mov
fists
loope
les
add
jae
pushf
adc
mov
jb
cs
pop
push
loope
pusha
xorb
sbb
dec
push
xchg
push
repz
ret
loope
mov
pop
sbb
in
lock
rorb
inc
movsl
push
or
bound
add
jae
mov
hlt
outsl
dec
lock
sti
xor
mov
xor
pop
push
jge
sbb
xchg
mov
sbb
jns
in
push
pop
jne
aaa
incl
outsl
into
loopne
imul
sub
or
cmp
das
sbb
jne
mov
jle
jmp
and
inc
mov
aas
addr16
push
pop
fistl
insl
sbb
leave
inc
jns,pt
daa
xor
fisttps
enter
inc
cmc
pop
inc
push
mov
dec
push
sbb
xchg
inc
dec
out
mov
pusha
nop
ja
int3
mov
adc
pop
adc
jnp
or
mov
push
xchg
cmp
push
cmpsb
test
mov
and
add
xor
dec
data16
test
pop
nop
daa
pop
jle
rcrb
jmp
int
and
mov
test
js
outsb
push
dec
pop
mov
and
inc
push
stos
sbb
pushf
push
jp
gs
push
fmull
mov
jecxz
lods
inc
pop
arpl
pop
add
dec
cmp
out
xor
sub
dec
pop
pusha
rorl
popf
aas
sbb
ja
mov
inc
pushl
sbb
aaa
xchg
stos
je
mov
or
mov
out
ret
cmp
inc
out
sbb
mov
adc
dec
or
aad
adc
out
ss
stos
adc
lret
std
sahf
adc
loope
lds
dec
popa
cmpsl
lret
ljmp
loopne
cmp
jbe
sbb
fcomp
inc
ljmp
push
sub
leave
dec
lret
ja
les
dec
push
cmp
push
mov
rorb
in
sahf
and
aad
lcall
pop
pop
xor
or
ljmp
or
xor
push
ljmp
xor
jge
enter
or
sahf
push
imul
ja
aam
mov
not
inc
in
int3
mov
pop
xchg
adc
int3
inc
sub
inc
int
dec
nop
adc
call
push
mov
or
cltd
lret
push
addl
inc
lcall
js
hlt
adc
mov
loop
pop
adc
mov
add
ja
or
adc
push
jno
inc
fstl
and
inc
lods
les
je
push
fcmovu
stos
and
outsb
inc
pop
mov
adc
outsb
out
xor
movsb
adc
lahf
iret
ret
icebp
mov
xchg
mov
lahf
sti
outsb
sbb
cmpsb
fmull
fwait
adcl
ret
pop
leave
fs
cmp
jg
sbb
adc
mov
std
cmp
dec
repz
ss
cmc
cli
mov
fnstsw
iret
mov
out
negb
test
loop
sbb
sbb
fwait
enter
outsl
clc
int3
cmp
inc
mov
inc
das
or
in
jns
jae
aad
pushf
in
mov
ss
pop
mov
mov
popl
sbb
imul
mov
xchg
mov
ljmp
ljmp
in
pop
dec
call
insl
mov
sub
sti
outsb
in
dec
dec
mov
out
jl
mov
dec
stos
push
insb
sub
push
data16
pop
cli
inc
shl
jg
cmp
loopne
out
outsb
pushf
push
lcall
inc
cmp
nop
std
add
push
les
repz
cwtl
jo
xor
adc
int
pop
lcall
lahf
call
int3
fs
jp
dec
adc
inc
std
xchg
sub
sub
out
fwait
mov
push
sbb
and
daa
or
xchg
add
outsb
insb
add
jg
adc
fs
mov
test
hlt
add
insb
pushf
xchg
int3
inc
not
cmp
sbb
and
xchg
jne
push
jmp
or
and
loopne
cs
sbb
push
int
or
mov
sbb
xchg
sbb
fucomip
sub
jecxz
jge
xchg
ljmp
cmp
push
pusha
or
fiadds
rcrb
inc
mov
push
sahf
mov
dec
mov
out
ds
rcrl
cwtl
hlt
jmp
pop
pop
int
sahf
xchg
stc
cltd
repz
xor
jle
in
repz
or
cmpsl
mov
ret
cli
fisttpll
adc
aaa
mov
les
sbb
mov
dec
xlat
pop
sbb
cmp
jns
inc
lds
push
inc
int3
xchg
mov
mov
mov
sub
push
jb
scas
pop
dec
shl
and
adc
cmpsl
dec
sbb
pop
xor
pop
xor
iret
xchg
dec
insl
lret
mov
adc
adc
ret
inc
stos
orb
add
popf
popa
addb
xor
adc
inc
push
and
fs
vpor
adc
bnd
mov
push
adc
repnz
pop
ret
stc
out
je
inc
and
ret
add
ret
pushf
xchg
jmp
cmc
int3
mov
mov
and
in
xchg
loop
lcall
dec
cmpsb
loop
daa
les
bound
add
mov
sbb
je
neg
push
add
push
out
pop
outsl
xor
ror
dec
int
test
and
inc
mov
inc
lcall
ljmp
jns
int
ds
fbld
ljmp
movsb
mov
inc
and
std
sub
aam
dec
out
test
jl
inc
add
js
cmpsl
dec
xchg
xlat
or
dec
pusha
dec
sti
jnp
sbb
ja
ss
js
jecxz
push
inc
aaa
std
cmpsb
into
es
sbbb
lret
jg
inc
nop
or
leave
cmp
push
sub
push
rolb
jmp
sti
adc
mov
sti
rorl
test
ret
sub
sbb
outsl
hlt
and
aaa
sub
out
inc
and
push
lret
fisubrl
mov
xchg
cltd
clc
cwtl
inc
les
dec
lods
testl
and
push
repnz
push
push
ss
jnp
pop
test
out
mov
out
and
rcrb
loop
pop
lods
mov
scas
push
adc
xchg
aaa
arpl
into
mov
cmp
insb
cld
xchg
mov
mov
adc
xor
int
mov
das
sahf
cli
sub
dec
push
and
es
or
pop
push
addr16
test
dec
and
sub
xchg
out
jg
xchg
fisubrl
adc
pminsw
in
and
pop
mov
add
push
jns
mov
fwait
cmp
pop
mov
cmp
hlt
inc
iret
mov
stos
insb
pop
nop
and
add
inc
mov
decl
leave
sbb
cmpsb
push
cmp
inc
repz
inc
call
sbb
cmpb
sbb
lods
push
dec
fsubs
aaa
xor
testl
imul
and
xchg
mov
mov
push
mov
psubq
mov
sbb
movsb
jnp
pop
xchg
jmp
ret
dec
push
add
repnz
mov
nop
and
out
sahf
push
xor
aas
cli
ja
jnp
aaa
xchg
sub
ret
lcall
sub
mov
mov
mov
dec
stc
adc
cmc
sarb
push
movsl
ret
mov
outsl
dec
les
cmp
arpl
mov
pop
mov
jmp
rcrl
mov
mov
test
call
lahf
sti
inc
pop
fs
popf
ret
dec
scas
adc
mov
rcrl
test
ja
pop
mov
iret
xchg
dec
sub
pop
sbb
cmp
mov
daa
jmp
divl
or
push
sub
pushl
mov
popa
pop
pop
xor
jge
sub
pop
loopne
int3
mov
and
aam
call
jle
pop
jno
insl
pop
int3
dec
mov
fisttpl
sti
jbe
sbb
xchg
sbb
ffreep
es
syscall
adcb
lahf
cs
fstps
lret
xchg
cmc
pushf
adc
fisubrl
push
fdivs
scas
iret
sbbb
and
dec
ss
out
or
cs
jmp
arpl
dec
test
data16
pop
shrb
jg
das
movb
stos
cmpsb
fcoml
rcrb
jge
lahf
xor
jbe
mov
jne
mov
pop
sub
ret
mov
loop
scas
sub
jno
loop
out
dec
mov
int3
mov
add
jp
call
bound
jbe
pop
or
push
std
add
and
mov
in
add
aad
dec
int
lods
cs
out
pop
dec
shrl
jnp
cli
xchg
leave
cwtl
and
jne
daa
mov
ret
cmp
sahf
add
mov
fmuls
fiaddl
adc
popw
outsl
mov
xchg
pop
push
ja
cvtps2pd
lock
sbb
dec
cmpsl
push
pop
enter
in
pop
push
add
outsl
mov
xchg
sbb
xor
and
lea
stc
mov
imul
nop
push
jae
mov
clc
and
xchg
movb
xchg
es
xchg
push
fsubrl
push
ja
push
cmpsl
adc
jb
in
pushw
jg
adc
gs
sub
pop
sub
imul
adc
ret
add
out
insl
aaa
jne
and
xchg
jle
mov
pop
aad
xor
loopne
in
push
lahf
dec
push
xchg
fdivs
pop
repnz
loop
lret
jmp
pushf
mov
mov
xchg
sub
mov
push
jne
enter
mov
xchg
imul
jg
add
in
sbb
and
pop
adc
sub
xchg
jb
out
rcrb
jns
cmp
cmp
adc
jle
out
pop
push
gs
jb
fcmovb
or
int
jnp
inc
clc
dec
mov
movsb
aas
xor
xchg
test
aas
inc
cmp
mov
out
das
add
cld
xchg
imul
loope
add
adc
sahf
inc
scas
cltd
or
movsl
inc
jne
test
clc
and
outsb
sti
mov
lock
insb
pop
mov
insb
stos
test
xchg
push
out
nop
inc
push
addr16
movb
lods
and
mov
es
jne
lods
push
push
or
xchg
dec
and
outsb
add
pop
mov
xor
test
lret
mov
ds
aam
bound
js
std
test
repz
mov
pop
mov
inc
push
jne
mov
cmp
xchg
fmull
inc
mov
push
out
or
dec
arpl
or
xor
dec
or
jbe
ss
ja
sub
shrl
mov
pop
inc
aad
xchg
ljmp
stos
lds
mov
clc
out
add
lods
out
loopne
xor
mov
fs
jecxz
aad
mov
xor
fisttpl
inc
mov
lds
push
mov
or
aam
xchg
ret
fisttpl
mov
jno
pop
mov
daa
cmc
cmp
xchg
outsb
stos
in
dec
push
jmp
js
data16
and
iret
cmpl
frstors
mov
cwtl
mov
fs
pop
aad
mov
cmp
mull
pop
lods
mov
pop
cmc
lds
push
shrl
adc
imul
fcompl
loopne
je
dec
jbe
mov
out
in
push
add
jecxz
ds
and
pmaxsw
scas
out
roll
ret
in
andl
int
pop
xchg
jecxz
and
jg
std
push
fadds
testb
pop
push
push
sbb
push
xchg
pop
jno
and
fidivrl
ljmp
pusha
loopne
jg
lds
mov
loope
adc
sar
es
mov
pop
push
jmp
xchg
lods
stos
jge
sub
repz
xchg
mov
and
pop
ljmp
lds
mov
push
xchg
icebp
mov
push
or
inc
popa
cmpsb
cli
sbb
and
xor
pop
test
fisttps
pop
outsl
cltd
rcrb
jecxz
xor
xchg
lea
and
cmp
ljmp
ret
fwait
jnp
mov
xchg
inc
clc
test
adcl
sub
mull
movsb
adc
jns
inc
push
imul
xor
push
inc
and
test
insl
int
sbb
jbe
jecxz
mov
ljmp
sub
and
sub
fistps
fs
stos
mov
xchg
mov
push
out
adc
and
push
shlb
xor
mov
dec
pop
out
fists
push
aaa
outsl
fildll
out
notl
clc
add
mov
mov
repnz
cld
sbb
cmp
mov
jae
orb
xchg
es
daa
ja
int
les
popa
mov
adc
push
dec
ret
mov
jno
movhps
lret
clc
adc
adc
fmul
js
pop
pop
cmpsl
repz
mov
shll
pop
lods
lcall
popa
add
into
jns
repz
mov
out
loopne
jae
xchg
insb
pushf
xchg
imul
jle
xchg
mov
pop
adc
lock
cs
inc
xchg
std
add
xor
cmp
pop
stc
iret
dec
fwait
in
pop
outsl
inc
jo
pop
cmp
jp
or
loopne
jmp
mov
mov
push
out
mov
jp
out
bound
sahf
insb
fsubr
rorl
sbb
mov
and
out
pop
inc
mov
insb
std
ret
xor
ds
in
jle
int3
inc
mov
sbb
jmp
ljmp
jg
leave
cmpsb
mov
pop
or
inc
cltd
ja
dec
fistps
outsb
jl
push
inc
xchg
inc
xor
in
std
push
sbb
sahf
pushf
insb
repnz
mov
fiadds
jo
jnp
fbstp
xchg
add
jns
fnstenv
dec
movb
mov
shl
mov
jecxz
jg
cmpsb
jecxz
ret
and
inc
lock
pop
lods
pop
inc
in
daa
dec
pop
cmpsb
cmp
loope
adc
cli
fidivs
movsb
cltd
lock
mov
mov
jecxz
mov
aam
sbb
or
xchg
xchg
inc
les
add
mov
fst
popf
mov
addb
fcmovu
add
cmp
mov
cli
jp
mov
or
sarl
inc
xchg
lods
imul
ficomps
dec
into
mov
fs
outsl
and
add
add
cmc
xor
fisubs
xchg
mov
lahf
jbe
rcl
in
lret
mov
sbb
lods
in
aad
jl
js
rolb
pop
cmpsb
add
mov
stos
push
je
lret
out
pop
je
mov
ret
dec
arpl
or
test
cs
pop
arpl
cltd
sub
mov
ret
mov
xor
rorl
inc
lahf
xor
mov
scas
out
aas
sbb
push
jmp
dec
leave
jmp
dec
adc
fwait
cltd
adc
jmp
cmp
and
add
lock
adc
icebp
ret
or
mov
push
xchg
dec
adc
imull
pop
sub
out
mov
repz
xchg
stc
xchg
mov
lahf
aaa
mov
rcll
pop
jge
jmp
ljmp
js
mov
out
mov
test
aad
inc
scas
fwait
inc
sbb
scas
cmp
push
cmp
jl
or
inc
cmpsb
and
pop
loopne
leave
popa
push
pop
push
icebp
xlat
jp
ljmp
or
sbb
clc
mov
pop
mov
aam
out
int3
inc
cmpsl
out
jl
or
mov
mov
mov
iret
mov
repz
imul
pop
outsl
xor
sbb
mov
push
or
ss
je
aad
out
insl
jne
out
pushf
mov
and
ret
cmp
pop
inc
ss
dec
sub
sbb
jbe
inc
push
inc
sbb
or
push
lcall
push
mov
cmp
arpl
adc
sahf
or
sbb
dec
xor
jbe
test
sub
mov
loop
nop
jae
sbb
call
nop
mov
or
xchg
dec
test
stc
mov
es
mov
je
jo
mov
aam
mov
mov
push
out
push
pop
push
xchg
fisttpll
shll
icebp
push
jno
lahf
mov
mov
into
adc
and
push
mov
loopne
push
stos
jp
sub
fldt
lds
push
lods
pop
lahf
or
inc
jle
inc
push
loopne
shrb
add
inc
gs
mov
ljmp
sub
sub
movsl
or
mov
mov
ss
sti
lret
test
mov
mov
mov
aaa
bound
dec
imul
sub
pusha
xchg
pop
jle
repnz
pop
fistl
ficompl
xchg
lret
aam
cli
mov
or
jbe
inc
lcall
lahf
mov
clc
fiaddl
dec
xor
cmp
cmp
adc
jg
dec
decl
std
int3
dec
pusha
jmp
popa
xor
or
hlt
je
popw
and
add
or
pop
lock
jl
adc
dec
lahf
jp
loop
or
xor
out
ja
jns
rorl
ret
dec
insl
pop
and
loope
imul
push
xchg
ret
xchg
sti
sbb
sub
inc
sbb
cmp
sti
lock
xchg
xchg
out
mov
pop
mov
aaa
test
sub
jo
iret
xor
test
out
xchg
xlat
cmp
pop
sub
rclb
scas
pop
push
xor
sub
adcl
data16
xchg
pop
jbe
push
xchg
testl
test
imul
dec
cmpsb
scas
add
mov
sti
pop
push
lock
jle
xchg
pop
nop
adc
mov
xor
popa
inc
outsl
int
insl
out
test
sub
pop
pop
cwtl
aam
jp
cmpsl
push
movsb
push
aad
push
inc
mov
imul
lret
incl
insl
dec
out
pop
pop
sbb
sahf
sti
add
cmpsb
pushw
popa
fisttps
jae
pushf
cmpsl
cli
cmpsl
xchg
testl
cmc
pop
inc
sahf
dec
mov
xchg
pop
xchg
xchg
repz
push
rcrb
movsb
dec
push
mov
movsl
mov
shlb
cmovns
divb
mov
xchg
xchg
decb
inc
mov
cmp
lods
pop
mov
xchg
bound
les
inc
push
fst
xor
cmp
mov
add
shrl
inc
dec
das
dec
adc
jmp
add
leave
enter
dec
jge
out
mov
test
fs
sub
addr16
mov
xor
pop
ja
mov
stos
push
push
cmpsl
dec
add
jno
mov
hlt
inc
enter
add
notl
pop
and
test
inc
mov
dec
loope
push
xor
leave
rol
jbe
pop
scas
fdivrl
xor
and
fld
mov
test
gs
add
popf
jmp
repz
mov
scas
ret
sub
add
xor
inc
jo
adc
aaa
inc
arpl
jbe
or
ja
adc
sbb
ljmp
pop
cmp
or
clc
pop
xchg
or
dec
push
jne
mov
in
outsw
scas
rcrb
mov
pop
push
and
mov
in
jecxz
dec
push
loop
mov
pop
outsl
in
addr16
sub
mov
pop
fsincos
mov
aaa
ret
jo
pop
mov
ret
ja
pop
jecxz
lcall
push
leave
cmpsb
fucomi
xor
jmp
das
rorb
outsl
add
jbe
pop
pop
outsb
mov
popf
pop
sbb
cmc
push
ret
jae
mov
xchg
sbb
clc
mov
adc
xchg
pop
fwait
mov
fimull
outsb
aas
faddp
add
dec
push
xchg
stos
addr16
inc
stos
inc
push
addr16
and
inc
sbb
sbb
imul
popf
outsl
xchg
jmp
imul
jae
dec
pop
shrl
jge
ds
jb
into
dec
loopne
or
and
leave
pop
nop
es
adc
out
cmc
cmp
dec
cmp
ljmp
cmp
divps
push
dec
mov
pop
inc
fildll
add
aam
mov
fdivrs
icebp
mov
mov
outsl
enter
mov
push
mov
aam
inc
ret
inc
rcll
xlat
add
stos
sub
inc
push
push
clc
pop
pop
fnsave
pop
bound
xorl
xchg
inc
repnz
mov
pop
pop
adc
or
ret
lea
push
push
movsb
cmpsl
jmp
clc
mov
movsl
out
push
mov
inc
mov
cmc
dec
ja
jbe
lret
xor
push
and
pop
pop
fisubs
insb
pop
cmp
fcompl
xchg
sbb
inc
mov
mov
jnp
cld
xchg
loop
push
inc
mov
push
stos
rcl
sub
sbb
xchg
xchg
lcall
sbb
lcall
stos
pop
xor
andl
push
mov
int3
cmp
fisttpll
fidivrs
fisubs
mov
test
and
lds
ret
ljmp
pop
daa
pop
lret
repz
mov
push
dec
sub
jae
outsl
pop
iret
lahf
mov
cmp
dec
push
sbb
ljmp
push
insb
inc
daa
sub
mov
jae
cli
cwtl
push
sahf
jle
add
mov
stos
faddp
inc
pop
sbb
test
ljmp
lods
push
add
mov
push
cmpsl
cltd
sub
push
mov
cwtl
repnz
out
addr16
pop
pop
shl
ja
lcall
rcll
cltd
imul
sub
ret
out
pusha
jecxz
and
ja
adc
and
mov
jg
adc
mov
mov
imul
inc
sahf
jmp
in
add
push
push
mov
movq
aas
push
mov
iret
add
arpl
lcall
stc
sub
data16
test
outsl
xlat
push
and
dec
pushf
fs
push
nop
mov
xchg
shlb
push
addr16
xor
cmp
mov
repz
pop
dec
inc
ja
daa
ja
push
sub
mov
outsb
call
cmpsb
in
rep
std
and
xor
mov
ret
inc
popa
adc
fsubrs
inc
add
adc
mov
jbe
pop
or
rolb
negl
and
scas
fnstenv
lods
out
popf
fcompl
jecxz
out
adc
mov
lock
cs
jno
jl
cld
dec
stc
addr16
loop
mov
icebp
push
dec
cld
xlat
imul
movsb
inc
jmp
shlb
dec
adc
sbb
push
lock
mov
cmp
aaa
mov
lcall
call
lahf
and
pusha
sti
and
ret
sahf
jl
fnstcw
jns
cmpsl
outsl
sbb
mov
inc
cwtl
mov
call
mov
sbb
xor
mov
imul
decb
add
std
mov
pop
mov
xchg
in
outsb
push
fimull
shlb
pop
es
fwait
lahf
pop
cmp
xchg
mov
jb
or
int
inc
sbb
jmp
or
mov
aaa
mov
sbb
aam
ds
dec
cs
mov
xchg
cmc
test
clc
lret
jge
ficompl
pop
mov
frstor
aad
cmp
sbb
mov
mov
out
pop
cmp
in
add
ja
lahf
sbb
xor
sub
ja
in
in
dec
pop
imul
xchg
sub
dec
aaa
mov
mov
insl
hlt
xor
push
cmc
mov
xor
gs
fs
xlat
adc
push
or
push
xchg
xchg
fwait
fwait
mov
out
jnp
mov
sbb
pop
add
mov
jp
ja
and
pop
mov
push
je
dec
mov
repnz
pop
fcomi
cwtl
fdivr
mov
xor
jae
nop
mov
stc
lods
mov
std
lret
jle
popf
push
adc
into
jl
fsubs
add
cwtl
cmpl
repz
push
xor
pushf
gs
push
lahf
lods
sbb
mov
add
scas
mov
push
minps
ret
scas
cli
add
popf
ja
outsl
gs
cmp
mov
lea
jle
outsb
adc
stos
mov
cmp
mov
aad
insb
mov
loope
pop
adc
scas
mov
lcall
cmp
ud1
daa
ss
scas
pop
inc
icebp
xor
outsl
adc
lahf
int
adc
dec
xchg
insb
sbb
roll
sbb
add
xchg
inc
mov
inc
and
jo
ljmp
xchg
jg
xchg
mov
and
jl
add
jecxz
mov
repz
cmc
mov
inc
xchg
data16
add
fsubr
int
and
xchg
aad
je
inc
adc
mov
pusha
inc
sarb
insb
xor
or
push
xchg
mov
sbb
push
cld
mov
jg
data16
cli
adc
fldcw
outsl
sub
shl
cs
lahf
pop
and
cmp
adc
jg
fdivrl
mov
mov
mov
mov
sub
das
inc
mov
mov
xor
cltd
call
pop
cmp
dec
sbb
or
lahf
test
mov
daa
pop
addr16
repz
inc
xchg
xchg
rolb
cmp
xor
xchg
sbb
roll
push
and
sarl
inc
jp
out
mov
pop
into
and
adc
jl
sbb
mov
dec
outsl
movsl
cmpsl
mov
sub
lcall
cwtl
add
pop
nop
xor
or
inc
rcl
sub
ljmp
adc
mov
mov
aaa
popa
aaa
jns
cmp
arpl
sbb
cmpsl
dec
ret
and
pop
adc
push
ljmp
nop
mov
fsubrs
mov
push
xor
xor
push
push
cmp
sub
movsl
imul
mov
inc
std
iret
aas
cld
lea
loop
inc
in
es
push
push
xor
and
and
out
mov
dec
inc
test
daa
xchg
out
sbb
inc
das
dec
loope
xor
jmp
add
in
sub
gs
es
movsb
jl
addr16
cld
sub
sahf
jno
ss
cmp
pop
pop
arpl
adc
stos
test
loopne
xor
scas
jg
popf
ja
out
and
int3
sub
jge
in
das
dec
dec
mov
fs
xchg
movsb
cmpsl
insl
mulb
ss
jne
pop
inc
je
repnz
and
pop
xchg
outsl
cli
lcall
popa
cli
in
xlat
out
cmp
fdivrs
jae
outsl
pop
cmp
int
insl
cli
test
mov
fmull
icebp
sub
or
je
mov
mov
fcompl
mov
adc
shrb
test
inc
icebp
dec
mov
push
sub
jle
ror
lea
dec
adc
mov
ss
movsl
cmp
cmp
pop
sbb
in
ljmp
stc
mov
hlt
jne
mov
jmp
out
mov
mov
mov
movsb
pop
xchg
jecxz
popf
aad
pop
iret
out
mov
dec
loopne
mov
gs
mov
shll
mov
aad
hlt
cld
dec
repz
aad
xor
xlat
push
inc
jns
clc
iret
jnp
das
in
inc
push
lds
or
ret
inc
push
or
inc
cs
fs
dec
jnp
int3
and
roll
push
stc
or
mov
pop
sub
push
outsl
fucomi
dec
pusha
cld
and
aam
xor
int
mov
repz
lahf
fdivr
scas
into
hlt
cltd
ds
fisubl
or
popf
push
addr16
xchg
js
inc
imul
dec
mov
mov
addr16
mov
push
add
mov
int
fcompl
inc
imul
sub
mov
inc
xchg
inc
dec
mov
xchg
sbb
es
mov
scas
outsb
xor
ret
push
sahf
shr
push
xor
sbb
cmp
cmp
sbb
cmp
mov
push
rcrb
mov
xchg
gs
rolb
das
fbld
adc
test
ds
push
fs
push
sarl
ret
push
sbb
and
pop
and
inc
and
xchg
xor
jmp
push
addr16
sahf
sbb
jecxz
lcall
dec
leave
sbb
ljmp
pop
mov
les
inc
fisubrl
arpl
push
mov
jno
mov
sub
mov
fwait
sbb
sti
mov
jne
cmp
ja
mov
out
xor
