mov
add
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
test
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
cmp
test
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
movl
movl
lea
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
mov
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
sub
js
push
lea
mov
test
je
cmp
jae
mov
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
mov
mov
mov
call
test
je
push
call
add
test
jne
mov
mov
mov
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
test
je
mov
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
cmp
jne
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
mov
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
mov
mov
add
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
push
mov
push
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
call
mov
add
mov
movsl
in
imul
add
data16
add
enter
sahf
add
icebp
add
in
jo
in
lods
xchg
add
scas
cmpsb
add
jbe
arpl
xlat
xchg
sub
push
mov
add
push
push
push
lea
push
push
push
push
push
call
add
out
lret
add
cli
add
add
add
mov
test
add
in
cmc
add
imul
add
mulb
bound
push
add
mov
sub
pop
popl
push
push
push
push
call
push
jno
mov
mov
add
push
int3
mov
bound
jae
test
std
jle
cltd
jecxz
add
les
add
movsl
out
fmull
add
add
add
add
add
movsl
in
jnp
add
jecxz
jno
add
aad
lock
sub
pop
push
push
push
push
call
mov
pop
add
jle
loope
mulb
mov
mov
imul
add
je
aam
addb
add
lods
add
lcall
push
push
push
lea
push
push
push
call
mov
and
add
add
jb
add
xchg
std
add
cmc
mov
fldenv
add
repnz
xlat
mul
les
push
push
call
pop
andl
scas
jle
cld
add
add
bound
adc
mov
loope
mov
addl
xchg
xchg
sub
pop
push
push
push
lea
push
call
add
sub
movsl
add
in
add
lea
aad
add
add
mov
add
or
lahf
mov
fs
jne
add
add
int
loope
mov
lds
ljmp
add
rcrl
add
add
push
push
push
call
in
xchg
test
test
add
in
fiaddl
mov
stos
std
add
stos
shrb
fwait
mov
lods
cltd
add
js
mov
mov
mov
add
sub
pop
call
jmp
push
lea
push
push
call
add
mov
add
popa
add
add
bnd
sti
addr16
jns
push
add
sti
filds
add
jae
add
add
mov
add
fildl
lcall
mov
push
push
call
pushf
rol
nop
add
lret
add
ret
mov
fistps
pusha
out
call
addl
std
jb
lcall
mov
arpl
mov
xchg
add
test
lcall
pop
hlt
add
push
push
push
push
push
push
call
jbe
scas
mov
outsl
loope
fsubl
add
pop
jl
lahf
out
add
movsb
add
add
cmpsl
add
add
cmpl
loopne
push
int3
std
add
add
mov
add
in
mov
rcr
js
pop
mov
shl
jbe
add
add
movl
add
lea
cmp
push
inc
nop
push
lea
push
push
lea
push
call
add
ret
pusha
push
in
mov
mov
sti
add
fiadds
stos
add
test
repnz
add
sahf
jae
int
movsl
lret
leave
jb
sub
pop
add
mov
xor
push
push
shr
not
push
or
not
add
shr
sub
xor
pop
add
pop
push
push
push
push
lea
push
push
push
call
add
jae
incb
add
add
add
pusha
incb
add
push
add
add
std
lds
add
fdivrs
push
jmp
add
mov
add
loopne
jb
test
sar
cwtl
add
add
push
jno
in
in
pushl
call
push
push
lea
push
lea
push
push
push
call
sti
fadds
mov
popa
pop
js
add
add
mov
add
add
int3
add
mov
add
add
data16
add
add
out
add
add
add
push
mov
add
jbe
sub
pop
mov
push
push
push
push
call
add
push
mov
mov
test
std
sahf
add
mov
jmp
jbe
jl
mov
add
add
mov
fwait
push
add
pusha
ja
add
add
add
sub
pop
movl
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
out
add
jns
add
out
addl
pop
mov
cmpsb
add
jmp
add
pop
movl
cltd
add
add
in
lods
shlb
add
add
mov
add
add
loope
jnp
add
in
fdivr
lcall
push
push
push
push
push
lea
push
push
push
push
call
pop
add
add
add
add
add
out
push
xchg
imul
add
out
out
push
je
addr16
add
nop
mov
lcall
jne
push
push
push
push
push
call
add
sbbb
add
testl
mov
les
mov
add
mov
shlb
lahf
jmp
add
pusha
mov
fnstenv
add
repnz
cmpb
pop
sub
pop
pushl
push
push
call
pop
push
jns
push
outsl
mov
add
enter
pop
add
jno
outsl
add
andb
mov
leave
add
mov
add
pushf
add
in
sub
pop
call
push
push
lea
push
push
push
push
call
xchg
jnp
movsb
add
add
xchg
add
add
add
imul
lahf
loopne
mov
add
lcall
jne
push
push
lea
push
call
mov
xchg
jge
push
arpl
push
andl
mov
addl
loop
lock
sti
mov
add
out
pop
mov
pop
add
pop
add
add
ja
icebp
add
sub
pop
pushl
call
push
push
sub
shl
xor
push
or
inc
add
xor
sub
xor
sub
sub
pop
ror
shr
shr
add
pop
push
push
push
push
push
push
push
push
call
popa
popf
add
add
add
repnz
add
fadds
std
jmp
add
std
imull
add
mov
add
test
xchg
subb
pushl
push
push
push
lea
push
push
push
push
push
push
lea
push
call
icebp
add
pusha
add
xchg
jmp
xchg
imul
mov
fsubrp
aad
fildl
add
in
jecxz
addr16
fsub
test
lret
shl
jno
out
jl
xchg
fistl
add
cld
add
mov
sub
pop
call
push
push
lea
push
push
push
push
call
pop
add
add
loope
sti
add
ljmp
add
fldl
add
push
xchg
add
add
shr
push
mov
xchg
pop
push
enter
push
add
cmc
in
add
add
add
popf
xchg
fwait
bnd
imul
popa
mov
lret
pop
jne
in
call
pop
push
add
push
ror
push
sub
add
dec
sub
inc
shr
pop
shr
pop
push
push
push
lea
push
push
lea
push
lea
push
call
stos
imul
out
pop
in
addb
add
pushf
jmp
mov
add
add
stc
add
into
add
mov
cli
popa
push
pop
mov
ret
pop
jbe
imul
enter
cmpsb
add
out
add
add
add
in
lcall
push
lea
push
push
push
call
lahf
add
add
add
lea
jo
add
mov
aad
mov
add
add
add
pop
add
int3
cmpb
pop
push
call
push
push
lea
push
call
xchg
add
pushf
fmulp
add
arpl
insb
jb
out
stos
add
add
jae
add
mov
add
ja
imul
add
scas
mov
jbe
lahf
add
lds
stos
clc
add
lahf
rolb
add
add
add
pop
add
movsl
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
stos
fldcw
add
test
add
jle
add
add
scas
pop
add
ja
rclb
mov
aam
gs
insb
add
add
add
movsb
add
add
fdivr
lcall
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
out
add
add
add
pop
andb
add
scas
add
lock
xchg
mov
add
add
xchg
add
add
ljmp
orb
jp
add
add
in
fcompl
pop
hlt
push
push
call
lahf
loopne
add
add
negb
pop
mov
mov
add
jae
mov
movsb
cld
jo
add
jge
mov
add
add
out
lock
fs
add
pop
add
sub
pop
add
push
push
push
push
call
add
std
nop
cmpsb
mov
out
lahf
out
cwtl
mov
popf
fldl
add
add
fdivr
rcl
lock
outsl
mov
mov
jnp
add
imul
add
push
ret
addb
add
add
add
lock
add
push
lea
push
push
push
call
mov
fsub
add
lea
add
jmp
xchg
mov
add
scas
xchg
sti
cwtl
mov
add
test
fsubp
bound
lock
add
mov
push
push
lea
push
push
push
push
call
mov
xchg
jl
add
mov
mov
add
xchg
movsb
mov
push
out
add
add
call
enter
cltd
fnsave
add
add
xchg
add
test
add
add
xchg
negb
add
aam
mov
add
jo
add
lcall
xor
push
lea
push
push
lea
push
lea
push
call
mov
pushf
add
add
leave
add
add
add
aam
popa
js
roll
leave
add
inc
xchg
push
lcall
push
lods
stc
jne
push
pusha
add
cmpsb
add
pop
jne
add
add
jno
jp
xlat
add
add
je
mov
push
add
fwait
mov
in
in
lcall
les
push
call
add
mov
lds
hlt
iret
rcr
popa
add
add
jge
add
loop
lahf
push
add
mov
add
mov
ret
add
xchg
add
mov
add
lret
leave
add
xor
lcall
icebp
add
add
add
sub
pop
add
push
push
push
push
push
push
push
call
mov
fs
incb
add
add
add
add
jecxz
add
add
mov
rol
add
nop
add
add
mov
adc
add
ljmp
add
add
mov
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
pop
add
nop
push
mov
add
js
fiadds
add
push
cmpsb
lock
xchg
push
add
nop
icebp
add
inc
or
or
xor
add
lds
push
pop
add
add
add
xchg
movsl
cltd
pop
test
lea
gs
mov
jb
mov
push
add
lcall
add
push
push
push
call
into
shlb
movb
test
test
add
test
add
roll
mov
mov
add
data16
add
les
push
push
push
lea
push
lea
push
call
add
mov
mov
jecxz
cld
cli
test
add
add
add
outsl
add
add
out
add
sub
pop
add
pop
push
push
call
push
pop
xorb
push
add
popa
add
enter
add
add
add
not
pop
mov
fdivs
lahf
push
add
lods
add
push
movsl
add
add
add
jp
add
popf
lock
add
clc
pop
mov
xor
push
push
call
ja
add
xchg
mov
jl
add
pop
xchg
iret
cmpsb
add
stc
add
add
push
push
fstps
pusha
add
clc
push
xchg
aad
add
out
jle
add
add
ljmp
enter
add
pushf
in
in
clc
lcall
push
push
push
call
add
xchg
add
mov
pop
mov
pop
mov
mov
stos
add
add
rolb
add
into
out
add
jne
movsb
enter
add
lcall
inc
or
or
cmpsl
aad
rclb
add
add
add
add
pop
fwait
aad
lahf
ljmp
push
mov
add
mov
add
mov
add
add
in
clc
lcall
add
push
lea
push
push
lea
push
call
pop
fdivrl
add
mov
add
add
mov
add
jb
leave
add
add
lahf
mov
add
mov
xchg
enter
add
in
add
out
add
add
test
addb
add
mov
lods
add
add
mov
sub
pop
add
push
push
push
lea
push
call
xorb
stos
add
push
jl
pop
stc
jmp
iret
insb
mov
xchg
pop
mov
add
push
mov
stos
shr
imul
test
add
mov
lods
add
pop
jmp
mov
push
jl
cmpsb
add
int3
roll
add
jl
add
pop
sub
pop
push
push
push
push
push
push
lea
push
push
call
add
add
jp
add
jno
add
mov
pusha
lret
jmp
add
add
mov
lods
jbe
mov
aad
mov
add
fildl
bound
add
add
add
xchg
mov
in
loopne
lcall
movsb
pop
push
push
push
lea
push
lea
push
call
add
scas
call
ret
add
scas
add
icebp
out
push
add
add
xchg
in
cli
add
add
push
repnz
mov
out
jno
mov
loop
add
add
mov
in
in
lcall
pop
hlt
push
push
push
push
push
push
call
add
scas
ljmp
add
add
add
lcall
add
add
pusha
add
mull
add
scas
insb
xchg
mov
je
imul
add
xchg
add
jno
add
add
jge
add
xchg
add
data16
mov
loop
fiadds
pop
in
push
push
call
movsb
fwait
mov
add
pop
call
lds
stos
not
jns
xchg
add
xchg
add
add
add
mov
add
add
pop
scas
add
mov
xchg
add
lcall
lcall
ret
add
add
add
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
addb
aam
fildl
jnp
jmp
add
std
les
pop
popf
add
movsb
mov
add
icebp
jmp
lret
in
leave
scas
xchg
cmpsb
pop
fucomip
add
add
roll
xchg
popl
lcall
inc
and
or
adc
sahf
lea
push
push
lea
push
push
call
testl
pop
add
arpl
mov
add
jp
add
out
int3
add
add
add
hlt
add
loopne
add
mov
out
mov
add
sbb
rcrl
test
in
add
addl
into
data16
sub
pop
xor
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
jnp
data16
mov
jnp
add
pop
pop
add
pusha
add
test
test
ret
push
loope
outsl
add
leave
movb
add
add
ljmp
add
add
add
ret
add
loop
scas
mov
pop
andl
in
fdivr
lcall
les
push
lea
push
lea
push
lea
push
push
call
rolb
mov
jno
mov
add
jne
mov
add
call
movsl
xchg
push
add
nop
add
mov
add
ret
add
add
scas
add
lea
add
push
fsubrs
ret
out
pusha
nop
add
add
add
push
and
cmp
push
lea
push
push
push
push
push
push
push
call
mov
insb
mov
imul
add
add
pushf
test
jbe
in
int3
add
add
add
out
jne
add
add
add
xchg
les
fcomps
adc
push
push
lea
push
push
push
push
push
lea
push
call
mov
lret
lock
add
test
add
pushf
add
cmpsl
addb
js
movsl
je
add
add
int3
add
mov
ja
add
jnp
aam
enter
data16
add
roll
gs
aam
mov
outsl
pusha
mov
add
add
jge
out
fistpl
pop
add
push
push
push
push
push
call
call
add
add
in
jne
add
mov
add
add
in
cltd
add
mov
add
loopne
divl
in
cmc
bound
nop
mov
add
ljmp
pop
pop
pop
sahf
add
imul
xchg
sti
add
lcall
dec
sub
or
enter
push
call
enter
add
add
mov
std
add
xchg
aad
add
mov
fildl
cmpsb
data16
ja
add
lea
xchg
push
add
xchg
enter
mov
bound
add
rolb
add
or
push
lea
push
push
push
lea
push
call
add
lret
add
lock
addr16
movl
add
add
addl
add
mov
xchg
jp
pop
mov
jp
mov
sti
push
std
jno
jp
addr16
int3
addl
mov
mov
pop
add
lcall
les
add
push
push
push
push
push
push
push
push
call
xchg
lds
push
int
mov
mov
les
les
imul
ljmp
add
push
rcr
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
adcb
mov
rolb
call
add
cli
sti
testb
add
rcl
outsl
ljmp
pop
sbb
pop
add
std
add
add
add
sub
pop
add
mov
push
push
shr
push
push
pop
add
xor
lea
rol
inc
sub
add
dec
sub
dec
pop
sub
pop
push
push
push
push
push
call
popa
mov
add
test
mov
je
out
push
add
data16
add
add
addl
add
pop
add
add
add
add
stc
iret
jbe
add
pop
pushl
call
push
push
push
push
push
push
push
call
cmc
add
add
add
jo
hlt
mov
add
in
lds
push
pop
add
mov
scas
add
pop
out
add
push
push
jmp
mov
add
cmc
lods
add
ret
add
sub
pop
push
push
push
ror
push
sub
add
dec
inc
sub
shr
sub
pop
xor
rol
rol
pop
push
ror
shl
sub
pop
push
push
push
sub
inc
pop
call
push
shl
inc
pop
mov
push
add
not
ror
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
push
push
call
incb
sahf
iret
enter
xlat
add
xlat
add
nop
add
mov
fs
add
scas
add
add
add
cli
add
roll
xchg
xchg
add
add
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
lods
add
push
int3
add
loop
in
push
xchg
test
outsl
add
ljmp
add
pop
flds
push
add
divb
push
add
in
fdivr
lcall
pop
in
push
push
call
push
add
add
jbe
fistps
mov
test
cli
add
push
jmp
imul
mov
icebp
xchg
jp
call
mov
fiaddl
add
add
add
mov
push
add
jge
test
mulb
out
stos
scas
cmpsl
cmpsl
clc
outsl
sub
pop
add
push
add
pop
add
mov
push
push
lea
push
push
push
lea
push
call
movl
mov
add
add
mov
add
add
and
js
mov
add
mov
add
add
add
add
test
cltd
add
jmp
xchg
lea
ffreep
aam
add
ret
add
popa
sbbb
lcall
xor
push
push
push
push
push
push
call
add
enter
mov
mov
add
add
add
add
call
cmc
cmpb
add
add
ja
int
movl
lret
add
fwait
shl
mov
roll
leave
addl
sub
pop
add
push
pop
add
push
push
lea
shr
add
sub
pop
mov
xor
push
inc
shl
add
pop
add
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
js
add
add
push
pop
add
enter
arpl
jecxz
in
jp
add
push
loop
pop
add
fadd
add
sub
pop
mov
xor
push
push
call
add
add
pushf
mov
ljmp
push
add
stos
pop
add
pop
test
add
add
add
in
add
rolb
outsl
scas
add
add
pop
orb
pop
out
add
add
repnz
arpl
add
call
add
flds
movsb
push
push
push
push
push
push
push
push
call
add
add
add
lcall
xchg
lretw
xchg
add
jmp
add
add
int
mov
imull
add
stc
pop
add
shlb
cmpsb
lea
jo
fiadds
add
addl
add
loop
in
loopne
mov
xor
push
sub
pop
or
je
mov
xor
push
push
push
push
lea
push
call
gs
aad
insb
pop
out
outsl
xchg
add
add
je
jge
add
add
test
hlt
insb
add
pop
in
mov
cmc
add
push
clc
add
stos
fidivl
std
jns
imul
jp
popl
add
test
aad
enterw
in
pop
mov
push
push
push
call
lock
jge
pop
loop
push
add
add
add
push
mov
add
add
add
je
add
add
sbbb
add
lds
push
xchg
stos
lahf
add
push
xlat
sub
pop
xor
push
lea
push
push
push
push
push
push
call
rcr
arpl
xchg
add
jne
pop
movsb
add
pop
int3
insb
add
add
mov
pop
ja
lock
add
add
imul
jo
push
cli
add
movl
xchg
xchg
add
xchg
mov
push
enter
add
push
mov
add
les
ror
lea
shl
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
scas
ret
jbe
mov
add
add
add
add
add
iret
add
lock
add
mov
lret
add
add
js
add
std
jns
lret
push
addl
mov
mov
add
sub
pop
add
push
rol
add
lea
pop
push
push
inc
pop
mov
push
push
push
push
push
push
call
add
xchg
mov
rcll
stos
jp
loope
call
add
sahf
add
cmc
adcl
add
fdivl
add
add
xchg
sub
pop
xor
push
push
push
push
lea
push
lea
push
call
ror
add
addr16
into
fldl
add
xchg
add
clc
jo
pop
add
lock
add
imul
jge
add
add
mov
mov
xchg
xchg
add
add
add
stos
mov
add
add
add
add
jnp
lret
rcrl
imul
call
add
add
lea
push
push
call
add
fiaddl
fs
imul
rcrl
add
std
add
push
je
pop
pop
add
addl
testb
mov
sahf
add
in
lock
add
push
lea
push
push
push
call
add
int
cwtl
jmp
push
add
jmp
add
add
add
xchg
fsubrl
jo
add
cltd
fadds
lcall
push
sub
pop
rep
push
push
push
push
lea
push
call
xchg
mov
lret
call
js
out
repnz
jp
add
lds
pop
add
pop
lret
add
rcl
add
fs
add
mov
mov
repnz
xchg
add
pop
sub
pop
mov
push
push
push
call
xchg
add
mov
iret
mov
add
mov
jno
mov
add
mov
fisttpll
lds
int
mov
fwait
lcall
in
fwait
add
add
int3
lock
add
mov
mov
loope
mov
rolb
add
pop
xor
push
push
push
lea
push
push
push
push
call
add
add
add
jp
add
add
aam
jns
add
mov
cli
add
add
add
fcmovbe
jecxz
add
add
add
imul
jns
jnp
adcb
add
push
add
add
sub
pop
add
push
sub
add
pop
or
je
mov
push
push
lea
push
push
push
push
call
movsb
data16
xlat
ja
scas
add
add
add
add
outsl
mov
nop
test
add
add
add
mov
in
mov
jbe
mov
add
fwait
add
pop
out
movsl
add
fadds
add
mov
add
out
lea
in
call
add
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
jo
add
add
popf
jns
cwtl
push
cld
mov
add
imul
ret
add
xchg
add
movb
add
rep
push
shr
pop
pop
push
push
shr
sub
sub
push
push
pop
add
shr
shr
sub
shl
pop
dec
not
pop
push
push
call
mov
movsl
mov
xchg
add
push
loop
add
add
movb
loop
pop
jecxz
call
aam
add
pushf
test
stc
push
add
pusha
add
xchg
add
add
out
add
add
test
lods
add
imul
lcall
mov
push
lea
push
lea
push
push
push
call
jnp
add
pop
fs
lock
fiadds
add
xchg
mov
mov
add
call
cwtl
in
mov
fwait
add
in
jo
cli
add
add
add
mov
add
loopnew
jge
stos
add
fisubrs
mov
add
sub
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jl
icebp
xchg
add
add
add
add
add
je
add
add
scas
add
nop
add
add
sub
jbe
mov
jns
imul
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
rcr
add
pop
jnp
lret
add
xchg
loop
jle
add
xchg
add
ret
add
add
imulb
lcall
mov
pop
push
add
stos
push
rolb
push
jb
add
mov
cmpsb
add
jmp
popa
scas
test
add
fdivr
lcall
loopne
push
push
push
push
push
push
push
call
pushf
rolb
popfw
addb
jbe
push
add
push
data16
jecxz
add
les
cmc
roll
add
fisttpll
bound
in
add
add
add
faddl
mov
popa
out
add
cmpsl
push
xchg
int3
pop
mov
sub
pop
mov
add
push
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
push
add
add
xchg
jle
xchg
mov
aad
add
add
add
fsubrl
add
mov
mov
addb
add
add
jmp
add
jmp
add
add
add
adcl
add
add
xchg
jmp
add
rolb
push
sub
pop
push
push
shr
dec
sub
add
pop
push
push
push
call
jno
lret
xchg
addl
popa
add
xchg
mov
xchg
lahf
in
sti
clc
add
add
add
add
repnz
mov
jbe
add
popa
ffree
add
mov
pop
add
add
add
mov
add
pop
add
add
add
clc
testb
sub
pop
push
mov
push
lea
push
push
push
lea
push
push
push
lea
push
call
cli
enter
in
add
shrl
arpl
lcall
cmc
stos
cld
lahf
cld
add
in
arpl
add
leave
add
mov
add
roll
jecxz
add
in
in
pop
add
arpl
sub
pop
pop
push
xor
lea
shr
pop
pop
pop
push
push
push
lea
push
push
push
push
push
call
pop
add
add
add
mov
mov
mov
add
loopne
pop
push
lea
push
lea
push
push
call
add
add
add
outsl
add
add
mov
add
call
add
imul
into
add
xchg
add
add
add
cmc
mov
mov
pop
add
add
mov
sub
pop
leave
push
push
call
jae
scas
mov
int3
mov
add
jl
adcb
sti
stc
add
add
add
add
add
mov
xorb
enter
cld
push
cmpsl
add
test
leave
jb
add
add
sub
pop
ret
push
push
inc
not
add
pop
mov
push
lea
shr
sub
pop
add
push
push
push
push
push
call
add
add
xchg
out
add
mov
add
aad
mov
cli
addb
add
mov
leave
pop
shl
out
rolb
mov
mov
lock
mov
add
rolb
leave
stos
mov
aad
add
call
pusha
out
xchg
sub
pop
push
push
push
push
push
push
lea
push
push
call
js
out
add
add
add
mov
push
jb
add
add
add
add
mov
mov
sub
pop
push
push
not
shl
pop
push
movl
push
push
lea
push
call
fwait
je
fsubrp
in
int3
add
loopne
add
add
in
jp
mov
add
mov
fistpl
add
xchg
sub
pop
addl
push
lea
push
push
push
push
push
push
call
add
add
push
add
popa
std
mov
lcall
mov
loopne
add
add
ret
lock
fnsave
add
push
add
push
fldl
add
mov
pop
lret
test
add
fwait
pop
add
add
add
mov
repnz
mov
lcall
rorb
jbe
add
push
shl
pop
mov
push
push
push
push
call
add
add
add
add
cmpb
xlat
test
mov
cli
jecxz
mov
lret
xlat
in
add
add
test
add
lahf
cld
mov
jnp
add
add
lock
les
add
add
add
rcrb
testb
lret
in
lock
lcall
pop
push
dec
pop
pop
push
not
sub
pop
pop
push
push
lea
push
call
jns
mov
fnstenv
add
mov
test
jbe
add
mov
stc
jae
pop
fiadds
jge
add
xchg
lea
lcall
ret
push
push
push
push
push
lea
push
push
push
call
add
add
loopne
pop
add
jle
int3
out
aad
fistpl
jge
add
xchg
lods
fprem
add
lret
sahf
stc
add
mov
ljmp
loopne
push
push
ror
shr
inc
pop
mov
add
push
shl
pop
push
push
push
dec
not
pop
push
push
push
call
les
add
pop
add
add
loopne
mov
and
fucom
add
add
jecxz
jae
lcall
add
add
add
jne
fidivl
mov
jae
int3
clc
add
mov
in
mov
add
ret
add
mov
xchg
mov
add
clc
pop
push
push
lea
pop
testl
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
add
add
cld
jecxz
lret
jnp
add
ja
nop
add
pop
loope
shll
pop
add
pop
outsl
hlt
mov
add
popa
into
push
push
test
xchg
add
aad
add
mov
add
pop
push
stc
add
pop
addl
push
push
push
call
add
add
add
std
pop
pop
push
add
add
jmp
pop
fcmovu
int
movb
add
in
xlat
ja
sub
pop
push
call
push
push
push
push
push
lea
push
push
call
test
cmc
jbe
idivl
sahf
add
push
ja
mov
add
push
not
mov
sti
add
add
mov
lahf
in
fcom
add
add
lods
fstps
scas
add
add
add
add
add
cltd
mov
jnp
add
icebp
fldl
in
sub
pop
mov
pushl
push
dec
rol
inc
pop
push
push
push
call
add
add
add
add
jl
add
mov
pop
add
cli
add
add
add
jge
call
add
add
add
out
mov
imul
icebp
xchg
xchg
sub
pop
push
call
push
add
lea
pop
cmpl
jne
push
push
push
push
push
push
call
push
add
add
lds
jns
add
push
imul
filds
mov
scas
add
pop
mov
popl
add
push
fnsave
add
add
in
pop
pop
filds
xchg
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
sbbb
xlat
xchg
add
clc
jns
hlt
xlat
xchg
lods
add
add
cld
xchg
jae
mov
add
mov
add
push
fstpt
mov
fisubrl
xlat
fnsave
mov
stos
add
add
sub
pop
pop
pop
push
push
push
lea
push
call
jp
mov
lds
pop
add
insb
jne
add
fiaddl
cmp
add
add
sahf
add
add
add
mov
mov
jmp
stos
sahf
xchg
scas
xchg
add
mov
sub
pop
pop
leave
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
sti
out
adcl
pop
add
add
add
add
arpl
fdiv
call
add
bound
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
push
call
testl
pop
iret
add
xchg
out
add
add
add
fwait
xchg
add
mov
push
add
loope
add
stos
pop
sarl
add
sub
pop
mov
push
sub
rol
pop
add
push
push
lea
push
lea
push
push
lea
push
call
subb
add
loop
add
xchg
add
pop
jecxz
add
xchg
icebp
lcall
repnz
in
in
pop
push
push
not
pop
push
push
pop
push
push
push
push
push
call
add
cmpsb
add
iret
add
add
out
into
sahf
fs
movsb
add
aad
add
loopne
aam
scas
sahf
repnz
add
add
ficoms
filds
add
jbe
add
test
add
scas
add
lcall
add
movl
push
push
push
push
push
push
lea
push
call
add
add
add
jne
add
popf
aam
jge
add
xchg
lret
scas
flds
mov
mov
add
stos
push
mov
jnp
xchg
imul
pop
add
add
mov
in
in
push
push
push
push
push
lea
push
call
add
jl
add
add
addr16
in
add
test
add
ja
add
push
add
add
add
fldt
add
jmp
addb
add
xchg
add
add
imul
out
add
fs
add
xchg
add
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
push
call
sbbb
fwait
idivl
test
pop
jmp
enter
xchg
add
cmc
add
push
addr16
cltd
add
movl
add
sahf
bound
lret
add
add
add
add
jbe
mov
fdivl
lcall
sahf
stc
call
pop
subl
push
push
push
push
push
push
push
lea
push
push
push
call
arpl
jbe
insb
fadds
xchg
nop
add
insb
mul
stos
add
mov
mov
sahf
add
ljmp
jb
add
push
test
add
mov
push
jmp
push
add
mov
mov
fists
add
add
incb
add
mov
xchg
mov
mov
fcomps
jge
add
test
call
sbb
inc
sbb
pop
mov
push
push
lea
push
push
lea
push
call
add
push
add
add
add
add
add
roll
mov
test
sti
push
pop
gs
leave
arpl
mov
pushf
mov
pop
add
pop
xlat
rorb
add
add
mov
iret
mov
jl
mov
lcall
push
push
lea
push
push
push
call
out
add
shll
push
add
add
add
add
add
push
bnd
fadds
cmp
add
mov
outsl
roll
add
sub
jmp
add
test
roll
mov
addl
aad
xor
fs
aad
pop
mov
roll
pop
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
fs
ja
add
jbe
add
pusha
xchg
jno
add
pop
int
mov
pop
add
jae
add
add
cld
add
add
pop
mov
add
std
je
xchg
clc
add
push
jge
sub
pop
pop
push
lea
push
push
push
call
xchg
add
add
ror
add
or
add
add
xchg
shll
add
mov
popf
fucomip
in
ljmp
pop
leave
push
not
rol
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
call
shl
add
fisttpl
add
jb
jo
test
lret
add
push
add
add
jno
cmpsb
add
and
add
add
add
lcall
in
add
push
inc
rol
inc
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
aam
movl
mov
add
push
add
add
fwait
pop
add
icebp
mov
fstl
rolb
push
hlt
lret
jge
addb
pusha
add
leave
add
addl
stos
lods
add
lahf
fcoms
pop
push
push
dec
rol
shl
pop
push
push
sub
sub
not
pop
mov
push
push
push
call
out
test
mov
cltd
in
ret
jns
lret
nop
test
fxch
pusha
cmpsb
add
add
insb
jno
lods
pop
fstpl
mov
add
ljmp
shlb
add
xlat
add
add
lahf
fldcw
sub
pop
lea
push
pop
sub
mov
push
lea
sub
sub
pop
shr
add
push
push
push
push
push
lea
push
push
push
push
call
jle
std
add
add
jnp
add
mov
loope
out
jb
loope
xchg
in
lods
add
add
pop
xchg
loope
pop
xchg
add
add
add
pop
add
add
ljmp
mov
sub
pop
mov
push
xor
pop
mov
push
not
pop
add
push
push
lea
push
push
call
fwait
std
movl
xchg
add
add
xchg
cld
popf
addr16
add
add
pushf
scas
mov
cwtl
std
out
gs
in
lock
lcall
shlb
sub
sub
pop
mov
mov
push
push
lea
push
call
jmp
xlat
test
rolb
add
add
add
imul
mov
filds
roll
ja
mov
mov
add
xchg
add
icebp
add
add
int3
fldl
jb
outsl
addb
in
lahf
add
add
add
lcall
pop
outsl
jne
push
push
lea
push
push
call
add
add
add
addr16
mov
xchg
add
addr16
loop
arpl
imul
mov
addl
push
add
addb
jae
sub
pop
cmp
jne
push
lea
pop
mov
movl
push
lea
rol
add
pop
jmp
push
push
call
mov
add
stos
jmp
add
add
test
clc
popa
xchg
add
xorb
push
sti
add
fdivp
shlb
cli
jge
out
add
add
add
push
add
stos
add
add
add
add
add
push
add
add
sub
pop
mov
push
ror
dec
rol
pop
mov
push
push
call
add
jae
add
push
out
mov
ror
mov
add
add
js
add
ljmp
loope
mov
std
pop
addl
add
imul
add
test
leave
cwtl
add
mov
clc
pop
sub
jne
mov
push
push
push
lea
push
lea
push
lea
push
call
add
pop
add
xlat
add
bound
ljmp
add
fwait
addb
add
idiv
push
jb
fsubs
mov
add
test
ja
add
add
add
fadds
movl
push
push
push
call
add
insb
jge
popl
xlat
mov
lds
add
aam
shl
jle
ja
cmpsb
mov
hlt
rol
les
jo
mov
add
roll
add
add
add
cld
in
lahf
mov
subb
hlt
lcall
aad
add
push
push
push
call
add
add
push
add
shrb
jbe
add
add
xchg
int3
add
add
in
jns
add
add
loop
add
add
mov
add
pusha
add
roll
add
push
jle
add
add
mov
sub
pop
mov
mov
push
dec
pop
cmp
jne
push
push
lea
push
push
push
lea
push
push
push
call
lds
push
xlat
out
cmpsb
cmpsb
mov
cwtl
add
mov
testb
push
push
add
add
add
add
add
cmpsb
mul
add
into
aam
add
add
loopne
lcall
inc
adc
in
lret
push
call
lcall
pushf
add
in
jne
in
add
add
add
fisubs
mov
fwait
push
in
add
jno
add
add
lods
push
xchg
cmpsl
addr16
pop
movl
push
push
push
push
push
push
push
call
add
fwait
xchg
jl
enter
add
stc
mov
lret
mov
add
dec
jbe
imul
lret
add
lcall
data16
add
sub
push
push
push
push
push
push
lea
push
call
add
add
scas
add
loopne
add
imul
push
mov
mov
lock
cmpw
jne
mov
push
lea
add
pop
movl
jmp
push
sub
pop
pushl
push
inc
dec
xor
pop
pop
mov
push
shr
lea
pop
mov
mov
push
push
add
sub
push
or
not
add
ror
shr
xor
sub
ror
not
shr
pop
xor
add
pop
push
lea
push
lea
push
push
push
lea
push
call
cli
in
mov
cli
add
add
add
popf
jo
sahf
mulb
loope
ffreep
add
mov
imul
jl
add
roll
mov
ljmp
mov
js
add
add
pop
mov
add
mov
mov
sub
pop
push
push
pop
call
cmpl
je
push
push
add
push
or
not
add
ror
add
sub
xor
sub
pop
lea
pop
push
push
push
push
push
push
call
cmc
mov
mov
jo
add
movsl
add
xchg
xlat
shrb
add
scas
mov
add
add
mov
and
imul
pop
push
push
inc
sub
pop
call
push
rol
xor
dec
pop
cmpl
je
push
push
rol
add
push
push
pop
add
shr
dec
lea
sub
shl
pop
shr
dec
add
pop
push
lea
push
push
push
push
call
leave
in
lahf
add
out
outsl
add
add
add
popl
imul
add
push
add
scas
xchg
lods
test
add
add
mov
add
add
ffree
lods
xchg
add
add
mov
add
mov
add
loop
loope
in
in
pop
push
push
push
push
push
push
call
push
add
fistl
mov
mov
add
mov
add
mov
xchg
add
data16
add
push
add
push
jl
insb
out
add
leave
fcmovb
aad
pop
cmc
stos
xchg
add
add
mov
add
add
mov
jge
in
in
pop
call
push
not
pop
cmpl
je
push
push
add
push
or
not
add
shr
shl
sub
ror
xor
pop
sub
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
ja
add
add
mov
jle
test
add
loopne
push
add
mov
outsl
andl
pop
pop
cmpsb
xlat
mov
add
add
add
cltd
add
mov
add
add
cmpsb
mov
add
push
push
push
push
push
push
push
push
call
int3
xlat
jl
fstps
fadds
add
test
mulb
add
ljmp
pop
call
push
inc
inc
sub
sub
pop
cmpl
je
push
push
xor
shr
push
or
not
add
sub
rol
pop
inc
pop
push
inc
dec
sub
pop
push
push
xor
pop
call
cmpl
je
push
push
push
push
pop
add
add
sub
xor
xor
pop
lea
pop
push
push
push
lea
push
call
add
loopne
add
shll
outsl
add
addr16
add
add
jno
add
jae
add
jnp
jb
test
movsl
jecxz
leave
movsl
aam
int
add
add
fucomi
xchg
cmpsl
push
jne
cmpsl
add
stc
ficomps
mov
cmpsw
sub
pop
push
call
push
ror
shr
add
pop
cmpl
je
push
push
dec
sub
push
push
pop
add
sub
add
rol
pop
not
sub
pop
push
shr
pop
push
push
lea
push
push
push
push
push
push
call
xchg
pop
add
fadds
addr16
loop
add
push
aam
push
imul
lds
add
fwait
add
stc
add
sub
pop
call
cmpl
je
push
push
add
push
or
inc
add
add
sub
xor
sub
xor
pop
not
dec
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
scas
out
leave
push
incb
roll
jnp
push
add
add
leave
add
add
add
xchg
add
add
fs
cmpsb
ficoms
push
push
push
push
push
lea
push
lea
push
push
push
call
xchg
add
fstps
out
incb
rolb
lret
add
fcmovbe
andb
ljmp
jl
push
ret
add
std
jae
jmp
lods
add
add
lock
xchg
mov
xchg
mov
mov
add
add
add
pop
add
add
idiv
lods
add
add
loopne
call
cmpl
je
push
push
ror
shr
dec
sub
push
and
add
rol
add
shr
sub
shr
xor
pop
add
xor
ror
pop
push
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
call
add
ljmp
cld
add
mov
add
stos
in
test
imul
int3
outsl
loopne
loope
add
pushf
sub
pop
call
push
push
call
add
scas
add
pusha
add
sahf
xchg
xchg
push
ljmp
add
scas
int
fcmovu
enter
add
sti
jmp
add
add
repnz
add
add
add
test
stc
lcall
bound
lcall
cmp
rol
je
push
push
rol
add
not
rol
push
sub
add
shl
lea
sub
add
pop
rol
add
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
xchg
add
mov
add
lock
add
add
add
outsl
add
add
loope
push
add
pop
fwait
add
xchg
pop
xlat
add
add
add
add
add
add
mov
pop
push
push
push
lea
push
call
sar
cwtl
xlat
outsl
fsub
outsl
add
mov
add
jl
insb
shlb
add
add
add
add
push
out
add
mov
fcom
mov
add
xchg
sub
pop
call
push
push
push
push
push
call
sahf
add
jp
roll
add
subb
xchg
fiadds
push
les
fcoms
add
out
in
in
lcall
cmp
test
pop
jl
mov
inc
rol
inc
push
push
pop
add
shl
add
add
sub
add
inc
pop
xor
dec
shr
shr
pop
push
push
lea
push
push
push
push
push
call
popa
add
mov
pop
filds
add
out
popf
add
add
lods
add
mov
mov
fildl
scas
add
in
in
push
call
push
push
push
call
pop
mov
add
addl
out
into
push
mov
cmpsb
xchg
outsl
cwtl
add
hlt
push
add
sahf
rcll
add
mov
mov
loop
rorl
xchg
stos
fiaddl
mov
add
push
jnp
add
add
xchg
ret
hlt
lcall
js
xor
ret
test
bnd
ror
add
push
and
add
not
sub
add
shr
add
pop
inc
inc
pop
push
push
call
jns
add
add
add
add
add
outsl
clc
add
fmuls
cmpl
in
gs
jge
add
mov
add
add
add
add
mov
add
jne
jne
push
cltd
add
lock
add
add
mov
roll
pop
push
push
shl
xor
pop
call
cmpl
je
push
push
not
lea
rol
push
xor
add
ror
sub
rol
pop
not
ror
not
add
pop
push
not
ror
dec
pop
push
push
lea
push
push
push
push
call
add
push
push
add
mov
mov
add
add
mov
add
add
stc
add
in
add
lea
cld
jne
rol
add
add
imul
add
add
add
mov
out
add
test
add
lods
add
in
in
lcall
cmpsl
sub
add
iret
inc
pop
cmpl
jne
push
push
push
push
call
add
add
sarb
add
cld
fiaddl
cwtl
lret
popl
imul
cmc
add
add
add
imul
lcall
inc
adc
add
add
add
pop
push
push
push
push
push
push
push
call
add
lret
xchg
add
add
push
add
jle
lcall
add
rol
add
int
out
add
add
add
add
call
add
aam
icebp
mov
out
mov
in
xchg
add
in
mov
lds
add
mov
mov
push
fistpll
in
loopne
lcall
bound
add
push
push
push
push
push
push
push
lea
push
push
push
call
cmc
xchg
push
shrb
loopne
movsb
movsl
test
sahf
add
addb
add
add
call
lods
push
add
lcall
rcrb
pop
pop
push
rol
add
sub
pop
pop
pop
push
push
push
lea
push
lea
push
push
call
leave
xchg
faddl
int
cmpsb
hlt
shl
add
mov
push
add
orb
in
mov
mov
in
call
leave
push
add
pop
ret
push
lea
push
push
push
push
push
push
call
popa
shl
add
roll
addl
pop
add
add
push
rcrb
fnstenv
leave
add
jmp
clc
mov
add
add
add
cltd
scas
int
mov
jp
mov
add
add
icebp
mov
mov
push
inc
rol
sub
pop
add
push
sub
pop
cmpl
jne
push
push
add
shl
rol
push
and
add
inc
inc
add
sub
rol
shr
lea
pop
not
sub
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
add
out
mov
cld
ja
add
stos
cltd
add
add
add
push
xlat
std
test
pop
add
sahf
test
lods
sub
pop
pushl
call
push
inc
add
pop
push
call
push
push
lea
push
push
push
push
lea
push
push
push
call
leave
scas
add
lds
nop
add
add
mov
add
add
arpl
clc
cmpsl
add
add
test
mov
pop
add
add
add
sub
pop
jmp
push
push
push
lea
push
push
push
lea
push
call
add
xlat
jle
enter
pusha
lret
fadds
mov
add
data16
add
add
add
cmc
add
repnz
gs
xlat
jnp
add
in
xchg
mov
fmul
add
add
jmp
add
ret
jo
in
jnp
push
movsl
add
add
int
lods
add
lcall
jge
add
test
add
add
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
add
test
cmp
jp
add
xlat
shl
add
jp
add
mov
mov
jle
add
jnp
xchg
sub
pop
mov
push
push
push
push
push
push
call
add
push
lcall
jo
ror
jp
mov
add
add
outsl
pusha
add
add
add
add
push
mov
add
repnz
jmp
add
add
add
int3
mov
add
std
movsl
add
add
lahf
add
add
sub
pop
call
ret
push
xor
pop
jmp
push
push
push
call
add
outsl
pop
mov
add
iret
test
loopne
add
ror
pop
jbe
add
add
add
faddl
mov
add
fs
enter
pop
cmpl
jne
push
push
inc
inc
push
and
add
sub
not
dec
sub
sub
sub
shl
add
pop
lea
inc
pop
push
push
call
pop
add
add
roll
fiadds
mov
xchg
cmp
add
mov
pop
pushl
call
push
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
mov
fcoms
add
add
add
lea
je
add
add
flds
mov
add
jbe
add
pop
stos
sub
pop
call
push
push
lea
push
push
push
call
add
mov
outsl
add
in
add
add
lods
addl
add
sahf
add
mov
mov
mov
outsl
popa
sub
pop
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
filds
add
mov
scas
add
add
mov
add
jl
aam
push
pusha
js
gs
add
xchg
pop
test
in
add
scas
lcall
add
jmp
in
jbe
jo
jge
add
insb
mov
icebp
add
jo
push
sub
pop
cmpl
je
push
shl
rol
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
call
add
push
add
lcall
add
data16
lcall
jo
xchg
add
stos
add
xchg
fcmovnbe
xlat
add
add
mov
shl
fiaddl
add
out
add
add
arpl
lret
pop
push
add
lcall
add
add
push
push
push
lea
push
push
push
push
push
call
lahf
xchg
add
add
add
mov
scas
hlt
xchg
push
xlat
add
add
add
add
jns
add
mov
lods
add
fiadds
xchg
enter
filds
hlt
pop
pop
faddl
mov
add
or
add
push
push
lea
ror
pop
call
mov
aas
dec
inc
call
data16
int3
add
add
add
pop
xchg
add
mov
imul
je
add
popl
lcall
pop
call
push
push
shl
lea
sub
push
sub
add
inc
sub
rol
add
sub
pop
ror
shl
pop
push
ror
pop
pushl
push
push
call
add
popa
out
push
orb
add
out
add
add
add
popl
add
push
mov
add
xchg
pushf
movsb
mov
add
js
std
push
int3
jo
add
add
push
pop
jno
push
into
negl
out
icebp
testl
sub
pop
call
push
lea
push
lea
push
lea
push
push
push
push
call
push
mov
in
pusha
mov
mov
add
andl
push
in
pop
add
add
clc
mov
add
add
add
add
add
shrb
out
int
push
shr
push
or
not
add
xor
rol
ror
sub
lea
pop
add
inc
pop
push
pop
pushl
push
sub
shr
pop
call
push
sub
lea
dec
pop
call
push
push
lea
ror
add
push
or
inc
add
xor
ror
rol
sub
lea
lea
pop
add
sub
dec
shl
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
add
add
push
pushf
add
in
imulb
fsubrs
lret
add
roll
add
lcall
push
int3
add
popl
in
lret
aam
pop
add
popa
cltd
imul
add
lods
sub
pop
pushl
push
shr
inc
add
pop
call
push
sub
xor
pop
call
push
push
shr
push
or
inc
add
add
sub
pop
sub
sub
pop
push
dec
inc
shl
ror
pop
pushl
push
sub
pop
call
push
push
push
call
cli
mov
add
add
popa
mov
add
add
add
add
add
test
clc
cltd
jo
jle
add
add
add
xchg
lcall
shrb
imul
push
dec
push
push
pop
add
dec
shl
not
not
sub
ror
pop
shr
pop
push
push
lea
push
push
push
push
push
call
add
iret
mov
jo
add
call
mov
add
mov
jb
add
outsl
add
add
nop
lods
lds
add
iret
nop
add
fadds
push
jmp
sub
pop
pushl
call
push
not
pop
call
push
push
sub
push
and
add
not
sub
xor
sub
sub
dec
pop
sub
rol
pop
push
push
lea
push
push
push
push
push
call
cmpsl
in
mov
add
add
push
pop
add
add
pop
data16
add
jne
int3
add
cwtl
int3
std
mov
add
fcomi
out
xchg
rolb
add
add
add
in
xchg
pop
sub
pop
pushl
call
push
lea
pop
call
push
push
push
sub
add
add
sub
shl
xor
sub
lea
sub
pop
add
rol
sub
pop
push
push
call
fistpl
mov
mov
iret
lods
jbe
movb
add
mov
add
add
cmpsb
fwait
pushf
popf
add
add
add
mov
sti
sub
add
int
add
jne
push
shl
sub
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
lods
add
fiadds
add
cwtl
out
push
add
push
add
xchg
xchg
add
pop
stos
push
loopne
push
nop
mov
add
mov
fwait
repnz
fcomps
shrb
in
jl
push
sub
push
xor
add
rol
lea
sub
rol
shl
pop
xor
pop
push
sub
sub
shr
pop
pushl
call
push
push
push
call
add
lods
cmc
add
jmp
cmpb
add
add
fildll
mov
cltd
mov
arpl
popf
add
add
lcall
shrb
test
or
mov
push
xor
add
rol
shl
sub
sub
shr
pop
ror
add
pop
push
pop
pushl
push
push
push
call
add
lret
lods
jo
test
add
mov
scas
mov
mov
add
pop
data16
jo
add
add
addb
faddl
add
add
xchg
vxorpd
int3
out
loope
lods
addr16
fwait
mov
add
lret
test
fdivp
add
mov
add
jbe
sub
pop
call
push
ror
add
pop
call
push
push
xor
push
xor
add
inc
sub
not
pop
ror
pop
push
not
sub
xor
pop
pushl
push
ror
xor
sub
pop
call
lea
push
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
nop
fiadds
add
mov
push
mov
xchg
js
sbbb
mov
mov
push
test
inc
xchg
add
add
std
add
jne
push
jbe
pop
jbe
add
roll
imul
call
fsubr
shlb
lret
add
lcall
push
push
push
lea
push
push
call
push
mov
add
roll
push
mov
add
cmc
clc
lock
mov
lds
pop
jae
popa
cmpsl
add
add
rorb
sub
pop
call
push
push
shl
push
push
pop
add
ror
sub
xor
shl
shr
pop
xor
add
pop
push
push
push
call
cmpsb
movsl
push
les
mov
lahf
cltd
jp
xchg
xchg
mov
jno
add
mov
not
popf
popa
add
loopne
add
fnsave
pop
add
sub
pop
pushl
call
push
lea
inc
pop
call
push
push
xor
push
or
not
add
add
sub
add
pop
add
shl
lea
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
sti
mov
add
jae
add
test
xchg
jmp
ret
jae
add
add
push
lret
push
mov
arpl
testl
addr16
cli
add
add
push
add
in
cmpsb
add
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
data16
add
mov
add
add
cmc
add
add
add
push
add
jge
push
mov
lret
cmpsl
jl
sti
add
ficomps
ljmp
add
mov
push
sbb
add
shrb
push
arpl
iret
push
xlat
add
sub
sub
rol
shl
xor
xor
pop
add
pop
push
ror
pop
pushl
call
push
rol
add
shr
add
pop
call
push
push
sub
push
push
pop
add
lea
add
sub
sub
shl
pop
sub
not
pop
push
push
push
push
push
push
push
call
add
add
jecxz
cld
pusha
cmc
add
out
mov
loope
xchg
push
add
xchg
add
mov
pushf
shll
jecxz
push
add
add
jae
ja
add
jp
mov
loop
add
in
in
lcall
jne
call
push
push
shl
push
sub
add
rol
shl
sub
xor
add
sub
pop
ror
ror
rol
pop
push
push
shr
push
and
add
shr
add
sub
sub
pop
rol
inc
pop
push
dec
xor
inc
pop
call
push
push
call
mov
mov
add
jbe
pop
loopne
add
push
enter
cld
jle
rolb
loope
loopne
add
cmp
cld
jns
sahf
rcll
add
pop
push
mov
add
popa
xchg
mov
push
cli
mov
loopne
add
fiaddl
roll
mov
lahf
movl
lcall
dec
jne
push
push
push
push
push
push
push
call
cld
add
add
cld
mov
add
add
add
mov
add
out
push
mov
cli
add
fs
push
mov
add
repnz
shlb
add
mov
cmc
add
add
test
jge
add
sub
pop
call
mov
push
push
call
add
aad
xchg
jae
add
add
sti
push
push
cmpsb
mov
add
icebp
nop
add
test
leave
jne
add
sahf
fwait
add
stos
xchg
add
add
scas
add
mov
add
mov
fwait
mov
mov
add
add
in
clc
pop
int
lea
push
push
sub
not
push
xor
add
sub
ror
pop
inc
pop
push
ror
shl
sub
rol
pop
pushl
call
push
lea
rol
not
pop
push
push
xor
pop
call
push
push
not
sub
add
push
push
pop
add
lea
sub
add
lea
pop
lea
pop
push
push
lea
push
call
add
add
xchg
push
add
jns
jl
add
add
add
int3
add
add
fadd
add
mov
aam
pop
sahf
add
std
add
sti
add
hlt
add
add
cwtl
scas
jne
add
sub
pop
pushl
push
push
call
add
mov
jmp
push
int
jno
add
insb
add
add
mov
rclb
lods
add
mov
push
add
std
fxch
add
mov
cmc
out
add
popf
imul
mov
fiadds
sub
pop
call
push
inc
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
add
cltd
add
add
call
lods
std
add
mov
add
pop
add
cmc
add
pop
add
add
ja
add
push
aad
in
loopne
mov
push
push
push
call
lock
add
loopne
add
add
fs
jae
mov
add
add
add
scas
push
lock
scas
arpl
popa
add
add
jns
add
clc
lret
in
hlt
pop
lea
push
push
lea
push
or
not
add
not
sub
sub
xor
pop
inc
shr
xor
sub
pop
push
lea
push
push
push
call
fiadds
add
mov
std
scas
mov
add
roll
add
mov
scas
jmp
popa
std
push
mov
out
aam
in
lock
lcall
jne
call
push
shr
add
dec
pop
lea
push
push
push
push
push
push
push
push
push
lea
push
call
pop
add
roll
mov
add
repnz
mov
imul
aam
pop
add
scas
xchg
add
out
add
popa
add
subl
add
gs
jmp
out
in
imul
test
add
add
out
sub
pop
push
push
push
push
push
push
push
push
call
cwtl
push
enter
add
add
add
add
push
movsb
add
rolb
xchg
add
test
mov
add
add
add
add
add
add
add
les
sub
pop
pushl
push
push
shl
lea
not
ror
push
push
pop
add
xor
rol
rol
sub
xor
add
pop
not
ror
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
int
out
add
mov
ret
fld
add
ficoms
movb
clc
lock
add
int3
lahf
add
add
ret
mov
test
push
pop
add
lret
mov
add
add
movsl
les
repnz
add
add
push
lea
pop
call
push
push
shl
add
add
push
or
inc
add
dec
shl
ror
inc
sub
sub
shl
xor
shl
pop
add
sub
dec
sub
pop
push
push
push
push
lea
push
push
call
add
mov
inc
add
mov
fcoml
lods
add
out
cmpsb
add
ficomps
nop
mov
add
lcall
lret
add
mov
push
add
mov
loopne
addr16
add
pop
mov
add
mov
add
cli
add
add
int3
add
mov
pushl
push
add
shl
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
lahf
add
add
rolb
jne
enter
add
add
add
test
push
pop
in
jo
add
mov
jl
leave
jmp
call
loope
add
pusha
stos
add
insb
jmp
add
rcl
add
add
nop
jno
push
add
add
add
int
add
push
push
ror
pop
call
push
push
shr
shl
push
and
add
sub
sub
pop
ror
pop
push
push
push
push
lea
push
push
push
call
add
data16
add
lods
add
mov
push
lods
add
mov
jns
mov
pushf
sti
mov
add
bound
popa
mov
add
xchg
mov
add
movb
je
add
jb
cmc
add
outsl
add
je
call
in
in
lcall
jne
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
mov
jle
add
add
icebp
mov
push
add
jmp
add
loope
add
lods
imul
pop
add
sub
add
fcmovbe
bound
cmpsl
jecxz
in
add
nop
jecxz
add
push
add
in
fdivr
lcall
arpl
add
call
push
shl
not
pop
pushl
mov
push
ror
pop
jmp
push
push
not
inc
push
sub
add
inc
shr
sub
sub
xor
sub
shr
xor
pop
not
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
stc
add
add
mov
pop
add
loopne
hlt
add
add
add
stos
loope
xchg
pop
mov
outsl
add
add
fadd
mov
add
add
je
gs
add
cmpsb
incb
testb
cmpsb
add
fcompl
jne
call
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
push
cmpsb
nop
into
push
add
add
add
int3
add
lods
add
add
jmp
pop
out
shll
mov
out
addb
add
enter
add
add
lcall
add
shrb
mov
jb
not
sub
push
xor
add
dec
add
sub
inc
pop
ror
rol
add
add
pop
push
not
rol
pop
pushl
push
push
push
lea
push
call
mov
stc
add
bound
add
add
add
hlt
xchg
add
push
clc
int3
add
jbe
lret
jp
loop
add
jbe
add
sarb
lock
add
cli
mov
sub
pop
call
push
shr
shl
pop
push
push
add
xor
ror
pop
call
leave
push
dec
pop
add
pop
push
push
push
push
push
push
push
call
fs
iret
add
lods
test
aam
add
add
cmpsb
add
add
mov
fcmove
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
call
add
outsl
ret
add
xchg
fidivl
add
add
scas
push
add
into
lret
add
add
add
xlat
ja
pop
add
mov
lock
add
roll
ret
cltd
add
ljmp
int3
cmpsb
lret
add
xchg
lcall
push
lea
push
call
push
push
out
pop
add
pop
jns
add
mov
pushf
leave
addr16
pusha
call
add
mov
jmp
add
add
mov
fwait
insb
fcoml
add
gs
incb
sub
pop
xor
push
pop
inc
ret
push
push
push
push
push
push
call
xchg
in
in
add
add
add
mov
bound
iret
add
push
jbe
add
add
testl
add
mov
add
push
add
push
ror
pop
ret
push
lea
pop
push
push
push
push
push
push
lea
push
call
jle
enter
les
add
hlt
add
pop
mov
push
push
add
jmp
add
rol
pushf
cmpsl
add
stos
stos
cli
push
lods
add
mov
cmpsb
jns
gs
add
push
add
js
mov
add
lcall
in
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
xchg
add
xchg
add
mov
add
aam
popf
add
add
jle
jecxz
add
jl
push
js
incb
int
add
add
arpl
push
add
add
jge
add
test
add
add
dec
pop
mov
push
shr
pop
jmp
push
push
push
push
push
push
push
push
push
call
mov
add
add
int
mov
loop
lret
add
add
fistl
fistpll
xchg
ret
add
add
insb
add
add
lret
addb
xchg
scas
mov
add
add
add
lret
add
int3
addr16
stos
insb
add
xchg
jmp
roll
jnp
sub
pop
mov
and
push
push
lea
push
push
push
call
add
mov
jecxz
add
les
pop
lret
icebp
add
jp
add
mov
insb
call
mov
xchg
scas
add
add
jns
add
fisubrs
clc
jnp
add
sarb
push
add
arpl
jno
in
in
lcall
leave
push
lea
push
push
push
lea
push
lea
push
call
popa
data16
jnp
add
push
add
add
add
jmp
int3
loop
add
lea
nop
into
out
ljmp
add
fcmovb
add
in
call
xor
push
push
push
push
lea
push
push
call
iret
add
xchg
mov
add
stos
test
movsl
add
add
push
mov
test
add
xor
push
shr
rol
pop
dec
push
shr
xor
inc
pop
sub
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
scas
fsts
shr
pop
xor
imul
divl
add
flds
popa
jo
imul
add
mov
mov
fmull
add
xchg
cld
sti
add
data16
pop
jno
add
lcall
hlt
add
add
mov
and
imul
sub
lret
push
lea
push
push
call
add
add
add
jo
cmpsb
iret
out
mov
mov
add
add
add
push
add
jmp
add
add
add
cmpsl
aam
imul
sub
pop
sub
push
shl
pop
pushl
pop
push
add
lea
pop
sub
push
lea
push
push
push
push
push
push
push
push
call
add
mov
loop
shl
cld
gs
sahf
jns
xchg
jp
add
add
test
shl
mov
mov
pop
stc
add
add
add
xchg
in
add
push
add
add
add
add
sub
pop
cmp
jne
mov
push
add
pop
lea
push
push
push
push
push
push
push
call
xchg
lds
popl
mov
add
fadds
xchg
fdivrp
add
mov
jl
jne
stc
out
mov
aad
lods
mov
rcll
outsl
cmpsl
lods
jb
jae
add
xor
add
imul
sub
mov
push
lea
add
pop
shr
push
push
push
push
lea
push
push
push
lea
push
call
test
add
fimuls
lcall
std
add
add
aad
add
mov
lret
add
add
add
aad
add
aad
add
lock
popa
push
shr
mov
add
lcall
enter
lea
push
push
lea
push
call
add
out
movsb
out
add
movsb
fs
mov
faddl
pushf
sbbb
mov
jle
repnz
add
pop
shrl
add
shll
imul
pop
in
rolb
mov
pop
fiadds
jbe
data16
jecxz
cwtl
sub
pop
sub
pushl
push
dec
pop
pop
push
push
push
push
push
push
call
add
out
add
add
xchg
test
push
jecxz
add
add
add
nop
ja
mov
mov
add
add
add
ja
loopne
push
add
add
mov
add
sub
pop
shr
and
push
push
call
fs
mov
scas
add
add
jne
enter
loopne
pop
add
add
add
add
add
mov
hlt
jne
jb
popf
fucomp
add
add
out
out
ficomps
cmpsl
sahf
push
add
sub
pop
sub
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
popa
push
add
arpl
hlt
add
push
clc
add
addb
add
roll
jge
jmp
add
add
push
movb
imulb
lret
loope
add
in
fdivr
lcall
stc
sbb
test
call
shrl
leave
push
lea
push
push
push
push
push
call
cmpb
add
add
add
lea
add
test
mov
jecxz
pop
sahf
lret
add
add
add
xchg
add
add
in
call
ret
push
push
inc
lea
pop
mov
push
ror
xor
shr
pop
add
push
lea
push
push
lea
push
push
push
push
call
add
mov
jno
pop
add
add
pop
xchg
pop
mov
mov
add
jl
pop
shr
add
aad
loopne
pop
sti
popf
add
pop
add
jp
sti
pop
cmc
cmpsb
fst
fstpt
out
add
movsb
xchg
mov
add
lahf
int3
out
movsl
add
mov
mov
lcall
push
lea
ror
sub
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
ret
mov
roll
iret
test
mov
add
add
add
add
add
mov
sahf
fistl
add
fs
jle
add
stos
ljmp
add
add
lcall
push
push
lea
shl
shl
pop
push
mov
push
xor
shr
xor
pop
lea
sub
push
ror
inc
pop
mov
shr
push
not
pop
add
mov
push
push
lea
push
push
lea
push
push
push
push
call
arpl
add
mov
pop
out
pop
cld
pop
mov
lock
add
mov
add
add
aam
pop
testb
testb
push
add
test
xchg
cmpsl
add
pop
add
test
add
add
add
add
enter
fldl
add
int
sub
pop
add
push
push
push
push
push
call
mov
sahf
aam
ja
add
add
jl
iret
addb
add
add
stos
pop
mov
enter
add
outsl
add
xchg
sti
pop
mov
cli
push
add
int
add
in
add
pop
add
add
mov
add
hlt
add
add
add
add
add
lcall
jnp
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
mov
mov
jp
add
hlt
in
add
jo
scas
add
add
add
add
stos
nop
lahf
mov
jmp
mov
test
lcall
jge
push
not
inc
xor
pop
xor
push
shr
pop
mov
push
push
push
lea
push
push
push
call
xchg
std
add
mov
data16
ret
add
add
loop
roll
add
stos
mov
add
cmpsb
int
add
add
arpl
mov
mov
je
out
add
add
add
jae
popl
mov
fistpll
sub
pop
and
push
push
push
push
call
jb
add
add
add
xchg
in
test
pop
add
pushf
nop
fdivrs
add
pop
add
add
add
add
add
int
pop
add
add
pop
xchg
sub
pop
rol
push
pop
rol
push
xor
dec
pop
xor
inc
push
rol
pop
cmpb
jne
add
push
push
push
push
push
push
lea
push
call
add
sahf
std
sahf
lock
nop
mov
test
fnstenv
add
jge
mov
test
jae
mov
gs
add
add
add
add
add
jl
xchg
pop
mov
add
bound
add
sub
pop
cmp
je
add
push
inc
rol
rol
dec
pop
cmpl
jne
push
push
push
call
mov
aam
shl
xchg
lods
jp
roll
fldl
fldenv
add
pop
ffree
lods
add
mov
int
movb
popl
jecxz
adcb
js
push
add
add
mov
fimuls
lcall
rclb
push
push
push
lea
push
lea
push
push
call
mov
stc
cmc
aad
ljmp
test
js
add
sti
scas
add
mov
test
add
add
fcmovu
add
cwtl
add
add
add
add
add
lret
mov
mul
jge
repnz
sub
pop
pop
push
push
push
push
push
call
cltd
add
add
add
ljmp
add
add
loope
mov
mov
add
aad
add
add
add
test
add
in
xchg
movsl
add
push
push
add
add
xchg
add
lods
jno
movsl
mull
loop
xchg
arpl
add
lcall
pop
push
rol
pop
pop
pop
push
push
call
stc
mov
xchg
add
xchg
insb
cld
mov
jl
jae
push
hlt
pop
add
add
add
jnp
in
clc
pop
leave
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
add
mov
add
call
add
adcl
push
mov
cwtl
jnp
add
pusha
mov
add
add
add
add
add
add
clc
scas
mov
add
lcall
or
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
cmpb
aad
testb
add
fbld
add
push
mov
mov
pushf
pop
test
mov
mov
add
add
fildl
push
or
push
push
push
push
call
add
stos
add
les
add
mov
add
add
xchg
mov
mov
xlat
add
mov
add
add
add
fidivrl
xchg
add
jb
add
sahf
lock
pusha
flds
push
in
call
push
push
pop
mull
push
shr
pop
pop
push
lea
shr
pop
call
push
push
push
lea
push
push
push
call
lock
sahf
mov
add
scas
add
add
fadds
add
add
add
roll
les
add
xchg
add
jbe
fs
subl
add
into
out
add
clc
push
in
shrl
call
mov
sbb
sub
dec
rolb
pop
arpl
add
add
loope
in
int
loopne
add
mov
js
fwait
out
jbe
fildl
fs
js
add
add
add
push
add
stos
xchg
push
out
mov
outsl
add
add
add
add
jb
in
loopne
call
xor
push
shl
sub
not
pop
pop
push
lea
push
call
jae
icebp
in
popf
mov
add
jge
jnp
in
add
jb
insb
jae
ljmp
add
xchg
add
jo
add
add
add
add
add
push
mov
add
jnp
cld
add
sub
pop
pop
push
shl
rol
pop
pop
push
add
pop
pop
pop
push
add
not
pop
leave
ret
push
push
push
push
push
push
call
add
nop
pop
mov
lods
add
add
mov
add
add
add
mov
add
mov
xchg
idivb
jmp
push
popa
add
mov
add
mov
stc
add
add
lods
mov
in
call
push
push
push
push
call
lds
add
add
add
add
fucomi
add
movsb
mov
outsl
pop
insb
add
jbe
jge
add
add
stos
fdivp
in
loopne
add
fldenv
xlat
add
add
filds
add
add
add
enter
xchg
shll
call
lcall
in
push
push
call
leave
pop
hlt
mov
push
add
jmp
xchg
lods
add
stos
add
jge
add
jbe
mov
clc
pop
add
push
lea
push
push
push
lea
push
lea
push
push
call
stc
add
add
add
add
add
add
add
scas
add
mov
iret
add
add
sub
pop
push
push
sub
pop
push
push
xor
add
pop
push
push
push
lea
push
push
push
lea
push
push
call
push
jl
mov
add
xchg
push
push
mov
add
add
add
add
stc
add
add
add
mov
sub
pop
mov
push
add
sub
pop
push
push
xor
shl
rol
pop
pop
push
add
shl
xor
dec
pop
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
test
lea
decb
flds
add
add
addb
fs
jge
mov
push
repnz
mov
ja
add
lcall
ljmp
and
sbb
add
mov
add
jb
mov
lods
add
mov
stc
popa
add
mov
loopne
add
add
lret
cmpsb
add
add
jbe
aam
repnz
outsl
cltd
mov
add
add
jle
leave
sub
pop
mov
push
push
lea
push
call
add
cmpsl
lea
sti
roll
jle
clc
mov
test
add
ljmp
add
mov
add
add
cli
pop
mov
add
lcall
adc
loop
add
icebp
add
iret
add
mov
pop
shr
push
lea
push
lea
push
push
push
call
ror
add
push
add
add
mov
add
enter
fdivr
jecxz
add
stos
jne
scas
add
add
jo
in
in
pop
add
mov
push
shr
pop
add
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
ja
sahf
add
add
jbe
jo
lcall
jp
addr16
fldl
lahf
testb
jle
mov
jne
cltd
add
jp
add
add
lahf
test
mov
lcall
jae
popl
push
lea
xor
dec
pop
mov
push
dec
pop
add
xor
push
dec
pop
lea
mov
push
shr
add
pop
add
push
pop
xor
push
dec
xor
lea
rol
pop
rol
push
push
lea
push
lea
push
call
loope
add
add
xchg
stos
aam
add
jmp
push
add
rolb
pop
add
add
push
xchg
jne
loopne
jbe
rcll
std
xchg
add
addr16
in
lock
nop
push
push
push
push
push
push
call
add
push
in
aam
add
fcmove
add
add
nop
jge
fstpt
mov
mov
push
add
or
add
add
lret
je
add
stos
iret
add
xchg
add
shl
clc
add
cwtl
add
sub
pop
nop
xor
push
rol
pop
nop
push
inc
inc
not
rol
pop
nop
push
sub
pop
inc
nop
push
inc
lea
sub
ror
pop
nop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
test
xchg
add
fadds
mov
test
jmp
jge
shll
add
add
fptan
stc
add
fdivr
lcall
cmp
jne
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
xchg
clc
std
add
out
add
jo
add
pop
add
lods
add
add
xchg
mov
sbb
mov
mov
pushf
mov
nop
add
add
or
jecxz
pop
mov
lcall
inc
pop
ss
push
push
lea
push
call
mov
add
jns
pop
into
mov
add
add
push
mov
cld
out
mov
nop
add
filds
add
xchg
test
add
test
mov
add
in
hlt
lcall
nop
push
lea
push
lea
push
push
push
call
add
insb
test
add
nop
cmpsb
mov
xchg
add
shl
popf
add
je
add
add
mov
add
add
add
test
add
add
push
pop
popa
in
fistl
mov
mov
leave
cmc
mov
add
mov
cmp
je
push
lea
xor
pop
nop
push
lea
ror
pop
nop
push
inc
inc
ror
pop
inc
nop
push
sub
pop
nop
push
push
push
lea
push
push
push
push
call
int3
mov
add
add
popa
scas
add
add
add
jo
movsb
mov
jmp
pop
add
add
lcall
jne
jb
xor
push
push
push
call
int3
call
add
add
mov
jno
add
add
insb
add
add
pushw
fiadds
les
add
shrl
test
out
ja
add
popl
add
je
add
add
popa
add
add
add
pop
mov
add
push
lea
ror
pop
movzwl
push
pop
mov
push
push
push
push
push
push
push
lea
push
call
add
fcomp
jp
fwait
mov
stc
int
nop
push
mov
push
push
shlb
pop
add
shll
add
add
mov
hlt
fistl
add
push
add
cmpsl
movsl
int
add
add
cmpl
roll
mov
mov
add
mov
mov
pop
add
mov
push
pop
xor
xor
push
push
lea
push
push
lea
push
lea
push
call
mov
std
fiadds
out
jns
aad
test
add
mov
add
iret
add
add
cmc
mov
xchg
jp
into
add
pop
cld
cli
add
add
add
add
mov
lods
mov
addl
jnp
cld
lds
outsl
add
mov
cld
sub
pop
shl
push
add
rol
sub
shr
pop
xor
push
lea
push
lea
push
push
push
push
call
jae
arpl
add
shrl
pushf
arpl
fimull
add
mov
in
fiaddl
sti
add
test
stos
outsl
jge
cmpsl
cltd
push
add
add
add
mov
jb
stc
int
negl
sub
pop
shl
push
not
shl
pop
xor
push
not
shr
lea
pop
shl
xor
push
push
push
push
call
mov
inc
mov
mov
push
lods
rolb
out
lret
add
add
add
lods
add
ret
addl
add
je
push
add
mov
fstl
mov
nop
add
sub
pop
mov
add
push
push
push
push
push
push
push
push
call
ljmp
add
fcmovb
ja
push
out
clc
imul
out
add
add
add
movsb
add
lret
into
add
lcall
pop
push
add
not
pop
pop
push
push
push
call
jb
insb
pushf
add
jae
add
lods
add
mov
mov
add
add
pop
mov
mov
shlb
push
mov
pop
mov
popl
test
push
cmpsl
jle
bound
cwtl
idivl
in
enter
jne
in
hlt
lcall
leave
push
lea
inc
not
dec
pop
ret
push
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
jae
testb
add
add
jnp
add
mov
add
add
add
fstps
jno
jae
imul
add
jl
xlat
add
movsl
lods
add
fsubp
add
xchg
out
push
add
lret
nop
add
add
fadds
add
sub
pop
mov
push
lea
push
push
lea
push
push
call
lret
add
add
add
enter
push
add
jmp
xlat
add
out
lea
add
add
xchg
mov
pop
call
loope
sahf
roll
push
ret
mov
insb
add
lcall
push
inc
sub
inc
pop
push
push
lea
push
push
push
push
push
call
mov
pushf
fs
mov
add
pop
pop
jl
pop
xchg
add
push
add
add
add
add
call
add
imul
cmpsb
mov
add
rolb
into
add
add
push
push
push
push
push
lea
push
push
push
push
call
nop
mov
jae
xchg
flds
test
mov
cwtl
add
xchg
add
add
cmc
leave
push
add
addr16
loopne
lcall
dec
or
ror
pop
mov
push
push
lea
push
push
push
push
push
lea
push
call
jnp
outsl
imul
ja
int
add
addb
add
loopne
add
mov
add
add
arpl
rolb
add
test
add
aam
test
sub
pop
mov
test
je
push
ror
add
sub
pop
mov
push
push
call
lret
xchg
jl
add
jecxz
gs
stos
add
imul
cwtl
mov
shlb
iret
xchg
call
shlb
loope
imul
lcall
cltd
add
add
loop
fmul
add
sub
pop
test
je
push
ror
ror
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
sahf
add
jae
mov
add
popa
jl
add
add
add
enter
add
push
notb
sti
in
add
sub
mov
aad
negl
add
imul
pop
add
pop
xchg
add
fcomps
dec
or
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
add
jne
shrb
add
add
imul
lahf
in
mov
scas
clc
cld
out
add
cwtl
sahf
int3
lock
push
enter
add
mov
add
lcall
mov
lcall
pop
push
not
pop
inc
cmp
je
push
sub
xor
dec
pop
test
je
push
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
je
jmp
jp
add
bound
pop
add
sahf
aam
fldl
mov
enter
add
mov
add
xchg
js
add
mov
lcall
cmp
je
push
push
push
lea
push
push
lea
push
push
push
push
call
stos
push
addl
add
popa
shl
shlb
pop
jge
test
add
add
int
add
fadds
lcall
rorb
cmp
call
incl
pop
xor
pop
push
sub
sub
pop
pop
push
lea
not
sub
pop
pop
push
lea
push
call
rcl
cmpsl
xchg
mov
add
movsl
pop
add
in
add
add
add
add
mov
mov
xchg
lret
add
add
pop
les
aad
add
add
add
add
add
mov
add
popf
pop
loope
stos
add
add
add
add
jns
pop
add
ja
out
in
clc
lcall
push
sub
pop
leave
ret
push
push
lea
push
lea
push
push
push
call
add
pop
out
nop
jae
add
loope
scas
add
add
sarb
add
add
xchg
mov
sar
jmp
scas
roll
in
scas
pop
pushf
xchg
test
add
lret
fsubrl
sub
pop
mov
inc
push
lea
lea
pop
cmp
jne
push
lea
push
push
lea
push
lea
push
push
push
call
add
fdivp
add
mov
jp
mov
add
mov
popa
jl
add
andb
add
sahf
jnp
mov
pop
js
jbe
test
mov
ret
test
jo
rcl
stos
add
fistps
lock
in
in
lea
mov
push
push
lea
push
push
push
push
push
push
push
push
call
ret
mov
sahf
pushf
xchg
add
xchg
lods
jle
add
cli
lcall
xchg
add
out
jle
mov
push
pushf
mov
xchg
add
mov
cld
popl
lcall
in
test
add
add
push
push
push
push
lea
push
push
call
add
loope
add
cmpsl
add
out
jno
add
hlt
add
out
mov
add
add
add
cmpsb
add
outsl
add
add
add
lret
add
add
jl
mov
test
add
add
add
xchg
xorl
sub
pop
add
push
push
push
call
movl
add
test
xchg
mov
aam
cmpsl
in
jbe
cmpsb
mov
scas
push
add
add
add
xchg
jmp
add
aam
add
enter
jmp
pop
cmp
jne
mov
push
push
push
push
call
xchg
scas
add
add
add
in
add
data16
aam
add
add
jp
mov
fcmove
add
aad
add
mov
add
stc
stos
add
rolb
test
jno
jno
jno
mov
movsl
add
addr16
pop
test
je
push
shr
pop
mov
push
sub
pop
add
push
pop
cmp
je
push
add
ror
pop
jmp
xor
push
add
ror
lea
pop
pop
push
xor
add
lea
pop
pop
push
shl
add
sub
ror
pop
pop
pop
push
push
push
push
push
call
add
cwtl
lock
add
movsl
add
fisubs
cwtl
jbe
mov
add
mov
add
cwtl
pop
lods
add
in
pop
leave
push
shr
add
not
pop
ret
push
add
add
add
sub
pop
lea
push
lea
push
push
call
push
add
jmp
add
idivb
xchg
xchg
add
mov
jae
mov
into
pushf
add
mov
add
jno
call
push
add
lcall
pop
push
dec
pop
pop
push
dec
xor
ror
pop
pop
push
dec
not
shl
pop
leave
push
rol
pop
ret
push
push
push
push
push
push
call
add
add
add
jae
add
repnz
rolb
hlt
add
in
xchg
flds
xchg
pop
rolb
add
popf
mov
scas
iret
add
mov
sub
pop
mov
push
xor
pop
pop
push
pop
pop
push
push
call
gs
add
add
add
scas
add
js
in
loopne
push
add
sahf
out
add
in
rol
jbe
popa
movl
add
mov
fwait
shll
cmpsb
rolb
sub
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
aam
pop
jl
add
les
mov
ror
aam
add
pusha
fsubrp
jae
js
test
push
add
add
add
hlt
mov
add
add
jno
add
xchg
jnp
mov
scas
push
test
xlat
add
add
pushf
add
test
in
fcompl
push
pop
leave
push
push
lea
push
lea
push
push
push
push
push
push
call
ret
jno
lods
popf
jnp
add
clc
add
addl
mov
fwait
jle
add
nop
aam
aam
fnsave
fxch
loop
add
test
int3
cli
lret
mov
div
data16
add
ljmp
aad
ja
add
jecxz
jl
imul
ret
cmp
mov
and
mov
mov
mov
icebp
into
mov
loope
mov
xchg
in
mov
add
mov
xchg
lret
or
pop
push
enter
add
je
jg
cmp
arpl
int
inc
adc
inc
lea
fnstenv
mov
nop
xchg
mov
mov
pop
push
lret
dec
jbe
cmp
cs
mov
and
add
xor
sbb
insb
mov
xchg
mov
pop
not
pop
and
mov
mov
rcrb
sub
mov
clc
ret
pop
adc
sbb
out
imul
aad
dec
and
movsb
mov
jmp
mov
pop
jo
mov
mov
lret
mov
mov
les
mov
pushf
pop
arpl
inc
add
mov
adc
mov
cmp
xchg
pop
aaa
scas
pop
and
or
jmp
lods
inc
jp
movsb
sbb
lahf
fisttps
popf
jns
cmp
das
cld
in
clc
ljmp
icebp
jp
cmpsb
inc
iret
pop
or
sub
jecxz
fdivrl
mov
ret
and
movsl
cld
sbb
test
cmpb
cld
adc
cmp
mov
repnz
adc
aad
enter
or
pop
adc
bound
pop
mov
push
mov
xchg
rclb
cmp
pop
cmp
sub
or
lods
push
in
rcll
into
imul
movsl
je
fsub
cltd
out
and
mov
out
lret
ja
fnstsw
mov
pop
sti
mov
das
push
fxtract
mov
or
mov
cmp
roll
mov
sbb
push
mov
jb
add
inc
or
jne
mov
jl
je
jecxz
data16
xlat
cmc
clc
adc
push
push
arpl
stos
aaa
xchg
outsb
and
and
das
sbb
out
push
adc
jp
daa
or
in
jp
cmc
lcall
cwtl
dec
cli
mov
filds
mov
and
lcall
lcall
xchg
add
pop
pop
inc
add
mov
and
aad
incb
ljmp
jmp
push
shrb
jae
adc
jmp
stc
jle
sbb
pushf
xchg
scas
sbb
stc
pop
or
pop
inc
pop
fldcw
dec
add
ficoms
cmpsb
sub
dec
lods
sub
insb
mov
mov
pop
pop
lahf
xchg
cmp
mov
insl
xor
xchg
sbb
cli
push
fistl
inc
adc
rolb
mov
in
mov
arpl
push
cld
mov
push
test
and
fmul
popa
xor
inc
dec
cs
pop
stc
repnz
push
mov
push
aas
and
inc
int3
sbb
dec
ljmp
ret
js
out
or
int
jmp
lret
mov
push
mov
mov
fsubrs
jp
sub
imul
mov
mov
jo
test
xchg
adc
jo
fldenv
push
nop
mov
mov
mov
xor
jbe
jns
dec
xchg
aam
es
lds
js
fbstp
or
cmp
push
lret
stc
fdivs
sub
imul
push
dec
cld
insb
jbe
test
pop
sbb
or
call
or
ret
loop
insb
or
xchg
jge
bound
jl
lods
lock
mov
lahf
mov
sbb
scas
xchg
aas
fidivrl
cmp
rcrb
adc
and
jle
enter
cmp
mov
add
mov
jns
pop
or
push
cmc
insb
inc
dec
push
in
adc
int3
loop
rolb
popl
adc
gs
cmc
aaa
jnp
outsb
in
dec
cmp
xchg
add
cmp
mov
fwait
add
nop
movsl
dec
xor
inc
jae
movsl
push
dec
sbb
pop
jo
sbb
popa
daa
repz
insb
or
mov
fidivrl
pusha
xchg
bound
ss
iret
xor
jne
pop
jp
or
mov
dec
lock
orb
ss
xchg
scas
and
lret
cltd
pop
or
pop
pop
push
in
push
xchg
es
or
pop
jge
arpl
adc
sbb
sbb
dec
gs
jno
test
lcall
cwtl
cmp
xchg
sbb
imul
add
fisttpl
xor
mov
adc
sbb
pusha
ret
dec
adc
arpl
mov
idiv
jg
mov
outsb
cmc
pop
pop
jp
inc
inc
iret
in
cmc
jl
adc
pop
xorl
mov
sbb
push
pop
mov
jne
hlt
fistpl
xchg
pop
out
dec
std
into
outsb
insl
std
cltd
loope
stos
or
mov
cmpb
inc
pop
inc
jp
adc
aad
mov
js
sbb
jb
push
mov
shr
jo
cmpsl
fstps
sbb
jecxz
test
jae
in
push
xchg
loopne
dec
lcall
jne
mov
pop
push
ja
add
test
and
xor
adc
insl
jmp
cmp
in
loop
cmp
push
out
int3
xlat
or
mov
sbb
add
int
mov
and
mov
fmuls
pop
outsb
mov
inc
lds
cmp
and
or
nop
jb
testl
popf
dec
sbb
jns
fisubs
mov
sbb
ret
shlb
mov
ret
int
loopne
icebp
das
pushl
popa
push
adc
cli
mov
xchg
push
outsl
shl
enter
hlt
daa
pop
fists
sarb
outsb
sbb
sbb
test
adc
sti
js
xchg
cld
jp
ret
mov
sub
setle
outsl
int
pushf
dec
insb
loop
andl
leave
mov
aam
repnz
sbb
jl
cmp
mov
dec
mov
sti
mov
mov
divb
sbb
jecxz
push
push
lds
xchg
out
inc
stc
sub
mov
pop
mov
inc
pop
nop
dec
mov
push
xor
push
adcb
cmp
mov
xchg
pop
jmp
dec
inc
hlt
jge
mov
stos
cwtl
pop
jns
addr16
js
mov
adc
mov
mov
out
pushf
dec
in
adc
jmp
fistpl
add
fimull
mov
jle
mov
pop
sbb
jg
pop
sbb
adc
fldl
or
adc
jns
mov
pop
push
sbb
sbb
xchg
xor
mov
xorl
cmp
jno
popa
add
adc
fcoml
inc
sub
ret
insb
jne
mov
ljmp
xor
test
mov
stos
ret
push
call
jbe
mov
jp
cli
scas
pop
inc
popf
inc
xchg
pop
mov
in
insb
xor
mov
push
lret
aam
aad
div
xor
mov
lcall
dec
sbb
jle
and
ljmp
xor
insb
idivb
iret
mov
push
or
stc
mov
loop
sub
dec
sub
int3
loop
lock
xor
adc
adc
mov
mov
or
mov
cmp
mov
xor
iret
mov
xchg
imul
jae
push
fldenv
sbb
jg
mov
negl
xchg
push
jae
push
cs
aad
sub
stos
dec
out
dec
stos
pusha
sub
jecxz
inc
adc
popa
mov
in
sub
fwait
repz
xchg
mov
add
icebp
cwtl
xlat
imul
cli
popf
jecxz
push
scas
dec
add
sbb
lret
test
ret
xor
stos
call
loop
sub
cmp
das
fidivrl
sub
int3
jl
int
add
popf
nop
lods
and
cli
adc
xor
cmp
dec
cmc
rol
cmp
push
js
je
mov
out
call
bound
aam
mov
cltd
das
mov
and
mov
mov
dec
call
xor
xor
push
sub
lods
clc
push
arpl
dec
and
es
dec
cld
dec
out
mov
jae
lret
popa
shl
lock
loope
stos
jnp
popf
scas
fnstcw
mov
mov
or
sub
jns
and
sub
es
lcall
rolb
cmpsl
cli
imulb
push
pop
inc
test
cmpsl
shlb
or
jge
lret
in
in
cltd
mov
aad
mov
loopne
js
in
pop
imul
fsubrs
push
xorl
loopne
xchg
fnstcw
in
stc
ds
push
insl
pop
cs
sbb
je
ds
cmpl
inc
fsts
push
dec
add
xchg
iret
or
movsb
repnz
shlb
cmpb
scas
ficoml
insb
ficoml
mov
and
mov
ficomps
mov
and
mov
sub
ljmp
mov
das
cmpsl
sti
add
mov
mov
add
mov
jns
and
ljmp
arpl
aam
xchg
mov
sub
loopne
lods
dec
shl
mov
mov
mov
dec
andb
xor
cmp
xor
push
js
lret
push
mov
icebp
xor
xor
mov
pop
sarl
std
mov
movsl
cmp
or
filds
lret
movsb
sub
aam
pop
out
pop
push
fcoms
jl
add
scas
aas
or
leave
call
outsb
xorb
fdivrp
sub
push
clc
jno
fwait
int
add
icebp
addl
repnz
sbb
or
cmc
mov
insl
mov
jg
sub
sub
nop
mov
inc
mov
mov
inc
js
dec
pop
ret
adc
pop
sarb
sbb
ljmp
dec
sub
jns
pop
fmul
pop
clc
dec
adc
icebp
cmp
test
mov
popa
std
xor
int
mov
xchg
cmp
adc
fwait
inc
lock
sub
mov
push
cmp
jl
pop
sbb
xor
mov
rcrb
push
pusha
test
mov
jg
sbb
iret
enter
ret
xorb
cmp
inc
mov
xchg
add
movsb
outsl
mov
jmp
xchg
stos
adc
cli
cltd
int3
inc
cmp
inc
pop
mov
enter
loopne
jnp
sbb
aad
rcl
and
push
test
into
jmp
ret
dec
sub
add
repnz
pushf
push
lcall
sub
inc
test
inc
dec
lock
xchg
or
xlat
xchg
xorl
jnp
shrl
jge
daa
sbb
xor
hlt
aas
outsb
add
aam
jge
push
pop
mov
mov
shll
bound
jnp
mov
imul
pop
inc
sbb
xchg
push
fcomip
scas
lret
jle
dec
adc
and
in
fistl
orl
jp
add
loopne
pop
pop
push
xor
mov
js
mov
gs
mov
jl
std
xchg
xor
test
jecxz
mov
out
hlt
int3
jp
push
lret
mov
mov
cltd
mov
leave
movsl
mov
sbb
and
xor
and
dec
mov
inc
movsb
daa
sub
adc
xchg
repz
aaa
test
mov
sbb
adc
aad
adc
insb
or
addr16
mov
lret
aad
pushf
das
arpl
jno
fisttps
pop
test
loope
xor
push
jmp
add
inc
ljmp
fistpl
add
cmp
and
stos
sbb
jo
addr16
fnstcw
mov
rcrl
mov
test
scas
push
lret
or
fstpt
fwait
dec
arpl
jne
imul
jl
jb
push
lods
sbb
pop
pop
fwait
or
inc
leavew
hlt
aam
push
adc
insl
ret
inc
or
inc
int
sub
cmp
cmp
cwtl
push
mov
testl
aas
push
xlat
xor
ss
mov
cmc
das
mov
or
xor
repz
mov
lock
lock
movsb
dec
mov
mov
mov
adc
dec
mov
bound
cltd
ret
bound
adc
jae
mov
mov
or
push
mov
enter
jo
xchg
addl
lcall
ja
sbb
orb
nop
test
pop
mov
stc
mov
int
andl
scas
cwtl
or
mov
in
sbb
mov
mov
into
dec
sbb
mov
je
popf
adc
popa
xchg
sbbl
dec
mov
hlt
mov
xor
hlt
xchg
pusha
sbb
jnp
and
cwtl
lcall
mov
fisubs
push
aas
xchg
inc
imul
add
or
and
add
pushf
cmpsb
enter
and
popa
lret
mov
lea
adc
cltd
cmp
sub
add
adc
or
aas
mov
iret
jo
lret
lea
cwtl
push
sub
outsl
popa
sbb
pop
inc
cmp
lock
mov
lods
ss
loope
enter
cs
dec
mov
aam
lds
es
xchg
ja
enter
xorl
out
adc
icebp
mov
ja
insw
repnz
movb
push
add
fsub
lock
aad
dec
jl
ss
sub
leave
cmpsl
test
mov
xchg
test
and
jns
dec
ret
fwait
xor
add
cli
xorb
dec
out
repnz
sbb
mov
sub
mov
pop
pop
int3
xchg
bound
mov
test
je
xorb
out
push
cmpsb
ja
popf
jg
cmc
loop
push
sbb
lcall
adc
cmp
jl
and
movl
jnp
cmp
pop
push
outsl
jmp
loope
jae
cmp
aam
xlat
cmp
push
mov
sub
lret
add
dec
dec
cwtl
mov
test
or
arpl
loop
nop
mov
mov
ret
std
call
movsl
push
hlt
cmpsl
or
or
sti
sub
adc
mov
or
dec
and
jno
sbb
lods
ficoml
jno
xchg
aam
mov
sub
lock
xor
or
sbb
push
dec
jnp
cltd
jmp
sti
mov
loopne
call
mov
jmp
jns
push
xlat
push
ja
xlat
test
sub
rorb
cld
inc
sub
cli
js
es
and
mov
add
mov
adc
ja
mov
mov
aaa
jp
pop
jnp
into
mov
cltd
in
cmpsb
mov
out
rorb
ret
sub
cmp
shll
lret
enter
xchg
divl
xor
add
adc
sti
fistpl
lock
fstl
sbb
dec
scas
jecxz
sub
sub
lret
cmp
fildll
idiv
sub
ret
xchg
mov
sbb
sub
arpl
push
popa
fcoms
mov
inc
sub
out
divl
scas
leave
or
lahf
inc
ds
shll
ljmp
inc
pop
xchg
lret
stos
and
jecxz
push
test
movsl
imul
mov
mov
push
jp
mov
scas
hlt
mov
iret
cwtl
test
aam
insl
in
fs
push
out
xor
in
inc
sbb
mov
push
inc
test
stos
pop
jae
call
and
or
sub
rcrl
das
sbb
xor
pop
mov
lods
and
sbb
inc
addb
daa
add
push
pop
dec
push
leave
cmp
ds
idivl
filds
and
push
aam
rclb
xchg
popa
cmp
clc
xchg
mov
sbb
add
es
outsl
xor
call
jnp
adc
xchg
pop
into
mov
iret
icebp
mov
dec
xor
lods
movsl
inc
cld
xlat
dec
repnz
pop
adc
mov
ja
dec
pop
popf
or
call
mov
call
jae
dec
test
jbe
mov
mov
inc
mov
xchg
cmc
insb
pop
jnp
sub
rcll
popa
fsub
adc
cmpl
in
add
aaa
pop
pop
sbb
test
xchg
jae
pop
add
out
test
push
ss
frstor
adc
lea
adc
int
pop
xor
out
dec
mov
jne
inc
add
sub
jnp
add
ds
add
or
ss
ds
stos
pop
xchg
mov
mov
or
outsl
adc
cmpsl
pop
stos
sbb
lods
dec
lods
test
rol
fcompl
fnstcw
xchg
aam
inc
xor
stc
dec
loope
pushf
mov
loop
lcall
push
push
mov
pop
ja
sbbl
pop
dec
cmp
test
adc
mov
push
data16
std
or
sbb
mov
and
cmp
mov
push
pop
stc
or
dec
enter
pop
mov
and
cmp
push
lock
idivl
loopne
ficompl
mov
clc
sahf
inc
xor
cmp
jne
ret
les
jb
repnz
xor
sub
jbe
xchg
ds
inc
add
dec
inc
jg
push
jne
outsl
lock
or
add
iret
cmp
js
lods
pop
fidivrs
out
add
pop
call
push
jg
xor
mov
and
loope
js
mov
pop
inc
mov
mov
jecxz
mov
pop
push
movups
fwait
out
mov
cli
sarb
jae
imul
mov
push
imul
scas
stos
adc
xchg
sub
cmp
xchg
cwtl
adc
pop
xchg
icebp
dec
cmc
movsb
cmp
ljmp
cltd
cli
xchg
insl
repnz
cmp
mov
push
bound
imul
addr16
jns
and
clc
jmp
mov
push
imul
pop
inc
test
cwtl
or
in
in
jmp
rcr
mov
notl
fldt
mov
out
adc
jecxz
loopne
pop
mov
inc
xchg
jbe
lock
adc
xchg
lahf
jg
sysexit
add
fstpl
xor
out
imul
sub
and
inc
or
mov
sub
shrb
lcall
lock
mov
rol
iret
or
and
into
cmp
outsb
ret
je
testb
das
stc
cli
outsl
jmp
jmp
pop
push
mov
lcall
test
or
icebp
orl
push
out
push
mov
mov
icebp
sbb
push
stos
mov
cltd
cmp
mov
push
mov
or
lds
movsl
or
es
jo
std
mov
dec
in
pop
xchg
mov
out
mov
dec
out
inc
inc
cld
popf
mov
adc
push
pop
cmp
adc
out
fsubs
pop
aad
or
push
inc
jns
or
xchg
jb
out
fsubl
sub
cmp
ljmp
mov
xlat
pop
dec
mov
rorl
clc
xchg
mov
ror
sbb
xor
mov
sub
push
fsubs
inc
pop
popf
xchg
scas
in
cwtl
roll
cmpsl
push
nop
sub
lods
push
or
jg
in
fimull
js
pusha
jne
bnd
sbbl
mov
int
fstpt
call
pop
mov
pop
mov
or
jecxz
std
loop
adc
mov
pop
and
jmp
mov
push
inc
cmpsl
shl
xor
jg
jns
sbb
pop
sbb
shl
jg
and
sub
mov
int3
lods
pop
jnp
pop
cs
ret
imul
and
sahf
int3
adc
leave
cmp
pusha
sub
mov
notb
and
jno
pop
jecxz
cmpsl
sub
in
add
push
inc
pop
xlat
test
push
push
lods
sbb
daa
xorl
inc
mov
cmp
fdiv
mov
dec
dec
imul
sbb
mov
js
adc
jae
push
sbb
enter
mov
and
fs
pop
xor
sub
push
jns
add
dec
repz
pop
mov
ja
adc
and
xor
negb
jnp
jmp
xor
mov
imul
and
jmp
inc
ljmp
mov
pop
xor
cmovno
in
adc
sub
dec
nop
pop
jmp
sbb
andb
cmp
push
adc
notrack
push
iret
data16
in
das
arpl
xchg
leave
mov
pop
mov
fs
pop
inc
pop
add
repz
iret
cmp
ja
pop
sbb
cmp
add
xor
lods
jmp
mov
std
mov
popa
xchg
imul
push
lods
dec
popl
push
rcrb
mov
mov
and
scas
das
cmpsl
lahf
mov
filds
sbb
sub
hlt
mov
test
sub
nop
add
cmp
jne
sbb
or
xchg
loop
mov
jmp
sbb
outsl
jge
mov
mov
in
inc
mov
fcmovu
inc
ret
mov
jmp
jnp
inc
andl
lods
inc
out
dec
dec
cltd
cmp
sbb
xchg
icebp
std
mov
out
icebp
aaa
mov
in
mov
cmovo
cltd
stos
inc
mov
daa
rolb
xchg
dec
push
repz
pop
dec
inc
add
shlb
lret
mov
mov
out
cmp
popf
mov
repz
ret
pop
cmp
push
cmp
or
mov
shrl
addr16
out
inc
mov
xlat
push
or
fs
ficomps
mov
xor
push
push
or
popa
cmpsl
imul
xor
push
in
mov
frstpm(287
push
dec
sbb
or
call
jmp
mov
push
add
mov
sbb
das
jo
in
mov
push
xadd
or
cmp
cmp
add
or
stos
sub
mov
out
inc
xor
mov
lods
mov
jp
jae
pop
in
or
sbb
mov
xor
or
cmp
data16
pop
mov
add
rorb
push
sbb
and
iret
nop
in
addb
mov
adc
mov
fstl
pop
loop
enter
hlt
fs
add
dec
popa
xchg
mov
insl
repz
jl
sar
cld
movsb
push
sbb
popa
push
stos
imul
fidivrs
mov
cmp
lods
sbb
sbb
lock
jmp
divb
into
jno
or
andb
pusha
cmp
jns
inc
sub
mov
jnp
lea
rcll
and
fisubl
js
mov
xchg
jle
cmp
ja
cs
loopne
imul
push
add
xchg
scas
add
fidivrl
lds
mov
loopne
pop
fucom
dec
dec
leave
inc
outsb
mov
inc
sbb
sbb
stos
cmpsl
xchg
xor
dec
into
dec
jle
cmp
push
sub
movsl
lcall
insb
mov
inc
or
rcll
mov
and
lods
xchg
aam
and
icebp
mov
pop
or
imul
addr16
inc
mov
popf
mov
popw
inc
push
incl
add
adc
mov
iret
jg
addb
xchg
push
and
inc
cwtl
jae
xchg
cltd
push
mov
dec
out
mov
jae
shll
sahf
and
sub
in
aaa
lret
fadd
js
movl
leave
and
sub
jge
mov
sti
cmpsl
adc
pop
inc
mov
repnz
pop
mov
lcall
jb
pop
inc
loope
xor
sbb
fdiv
sbb
or
or
imul
jmp
jle
lds
pop
xlat
inc
push
adc
jbe
aaa
push
ror
aas
js
jge
sub
into
dec
pop
inc
push
ret
lods
mov
call
lcall
ss
mov
cmp
mov
out
mov
iret
cli
add
lcall
sti
mov
lahf
adc
or
cs
aas
stc
out
dec
sbb
xchg
fstps
ljmp
or
cmpsl
out
push
cmc
and
sbb
mov
mov
push
call
inc
stos
fldt
push
add
fdivl
test
lock
sarb
push
add
popa
test
pop
sub
shrb
aam
jns
mov
insl
inc
out
mulb
inc
stos
inc
loop
rol
mov
insb
dec
inc
push
insl
repz
inc
ja
and
push
mov
sub
or
xchg
cmp
popa
sarb
xorb
daa
adc
pop
cld
aaa
cmpsl
jno
or
push
out
inc
mov
cli
inc
loope
or
mov
imul
in
call
xchg
rcrl
pop
dec
pop
iret
dec
repnz
mov
test
xor
ret
mov
in
xor
cwtl
and
popa
popa
lahf
dec
stos
addr16
or
jo
or
dec
adc
xor
es
sub
and
jmp
and
jmp
stc
inc
aad
adc
les
in
es
lock
mov
ja
filds
aad
fwait
adc
sub
jge
insb
imull
xor
pop
mov
imul
push
es
inc
scas
mov
or
pop
xchg
adc
leave
and
mull
jnp
hlt
sbb
adc
sar
mov
mov
mov
cmp
outsl
xor
pop
xchg
jle
ret
sbb
insl
jb
sbb
push
stos
mov
mov
or
je
cmp
adc
test
push
dec
mov
push
push
inc
repnz
adc
pop
pop
outsl
pop
cld
pop
inc
pop
jecxz
inc
mov
xchg
pop
test
xchg
adc
sbb
dec
mov
sub
bound
mov
ljmp
sbb
jp
xor
jl
nop
mov
mov
inc
sahf
ja
dec
xor
jne
mov
mov
dec
mov
mov
add
pop
inc
insb
sub
sahf
push
jp
sbb
insl
xchg
pop
test
iret
in
decl
sub
push
adc
mov
pop
cmp
mov
fldenv
pop
dec
cwtl
or
mov
push
pop
aaa
sub
push
shr
cmp
or
sti
xorl
push
mov
cmp
fldlg2
test
int
jbe
jnp
aas
mov
pushf
aam
cmp
or
inc
xchg
jbe
and
mov
rorb
mov
xor
sub
xchg
cs
xor
fwait
orb
negl
fsts
imull
mov
inc
mov
mov
lcall
dec
inc
push
lret
fidivl
in
popf
out
cs
sbb
sub
mov
aam
enter
hlt
fcomp
xlat
lret
test
dec
pop
sahf
jae
pop
imul
add
mov
pop
add
fistps
cmp
sahf
aas
mov
mov
idivl
faddl
sub
cmp
add
fisttpll
adc
dec
push
mov
aad
lret
in
dec
outsl
mov
cmpsb
int
push
es
in
adc
xor
cld
andb
insl
pop
xchg
inc
cmpsl
and
outsl
cmp
add
rcl
loope
xchg
insb
sbb
xchg
add
xor
adc
jge,pt
jns
or
iret
mov
mov
jne
mov
nop
cmp
insl
mov
pushl
jae
sub
cmpsl
adc
lcall
cmp
mov
aam
inc
or
push
and
gs
jnp
mov
testl
test
call
out
jo
fwait
mov
mov
mov
or
xchg
sbb
fwait
sub
push
fisttpll
fst
push
pop
xor
pop
add
push
out
xor
shrb
mov
cmpl
orl
aaa
pop
nop
pop
data16
mov
dec
fisubrl
or
shlb
dec
mov
pop
icebp
repnz
and
les
cwtl
lods
mov
into
cli
sub
icebp
repz
cli
xchg
clc
cmp
fbstp
dec
sbb
loope
es
push
int3
xchg
sarl
pop
out
loop
jle
fistl
arpl
dec
and
inc
xchg
je
jecxz
xchg
jge
arpl
pop
lea
mov
dec
incb
shrb
push
ss
js
les
addr16
icebp
adc
jbe
sbb
dec
push
cld
mov
mov
ffree
addr16
and
mov
or
jb
mov
loope
push
inc
cmp
lds
out
xor
imul
jnp
and
mov
xlat
add
icebp
cmp
lods
movsb
xchg
jno
xchg
mov
xor
push
cmp
pop
cmp
cmp
lods
iret
daa
cmp
int3
es
aas
insb
jb
in
push
adc
inc
mov
ret
addr16
cmp
call
in
iret
adc
mov
out
dec
xchg
das
pop
mov
pop
pop
sbb
push
cmp
mov
add
or
mov
mov
jmp
xor
inc
js
lcall
inc
movsb
xor
jecxz
imul
shr
or
mov
aad
test
push
adc
sbb
pop
test
jb
jmp
jb
gs
jno
and
stos
sbb
leave
jp
xchg
aas
ds
jecxz
popa
popa
cmp
cmp
or
out
fbstp
mov
mov
add
xchg
jmp
xchg
loopne
add
mov
add
insl
jl
lret
jmp
pop
xchg
or
dec
int
rorl
test
push
ret
mov
pop
stc
adc
xor
mov
lea
rorb
adcb
sub
int3
jns
jnp
ret
roll
out
addb
int
add
push
mov
icebp
movsb
mov
and
movsl
cmp
or
push
cmp
cmpsl
jecxz
loope
in
in
jmp
fidivl
inc
dec
jne
xchg
jbe
and
add
popa
in
jno
dec
sub
mov
adc
jmp
into
sub
mov
xor
mov
add
inc
push
dec
shlb
pushf
inc
ljmp
xchg
pop
ror
aad
push
aam
fwait
or
pop
sbbl
inc
gs
ds
test
dec
or
je
dec
sub
das
insb
insb
xchg
addl
sub
inc
nop
adc
cmp
inc
popa
daa
sbb
data16
cld
ret
push
inc
sbb
push
repz
xchg
xorb
pop
push
and
icebp
or
stc
sub
mov
leave
lods
enter
out
popa
ret
push
or
xchg
fcompl
dec
lahf
jg
daa
pop
jbe
roll
xor
xchg
adc
mov
fidivrl
xchg
pop
push
jg
ja
call
mov
cmp
int
cmpsl
cmp
loope
lock
stos
mov
inc
pop
sahf
mov
icebp
pop
sbb
repnz
jg
sbb
ret
dec
push
xchg
cmp
mov
repnz
arpl
repnz
jmp
je
add
in
push
jae
mov
and
xchg
xor
mov
in
test
gs
xchg
loopne
ret
jae
leave
rcrb
popf
cmc
mov
popa
mov
int
fidivl
das
sbb
adc
rorb
mov
xchg
mov
test
int3
scas
mov
pop
push
cmp
loope
jb,pt
push
jno
popa
outsl
xor
jo
mov
cmpsl
pop
ds
mov
sub
shrl
int3
dec
fadds
xor
cs
sub
dec
outsl
into
das
gs
rorb
sti
inc
fstl
add
adc
nop
pop
lods
sarl
sti
push
mov
add
dec
pusha
mov
inc
dec
jb
xor
lahf
adc
fildll
into
and
xlat
or
stc
inc
mov
test
das
mov
pop
pop
mov
sub
rorl
fcoml
aaa
ja
rolb
mov
test
mov
pop
push
loope
data16
xchg
dec
cld
mov
call
mov
sti
dec
push
data16
fucompp
mov
icebp
in
iret
out
dec
sbb
and
adc
push
int3
das
cmp
cmp
mov
or
mov
adc
aaa
push
js
test
xchg
in
push
xchg
sbb
mul
std
dec
add
rcrb
clc
adc
aad
sbb
lahf
adc
insl
xor
daa
dec
icebp
mov
mov
stc
jg
hlt
or
xchg
lock
in
push
inc
pushf
cmpsb
adc
and
cmp
inc
sbb
sbb
xchg
pushf
imul
pusha
adc
sbb
or
mov
jge
lret
xchg
pusha
jo
out
fildl
sub
adc
push
loope
and
mov
sbb
inc
decb
loop
daa
inc
pop
jno
pop
xor
fwait
daa
and
mov
xorb
inc
aaa
sub
inc
and
iret
cmp
movsl
call
iret
repnz
aam
loopne
lock
or
xor
mov
xlat
dec
xchg
cmc
into
mov
cs
out
loop
adc
jmp
sub
out
les
loopne
push
or
cmp
test
sbb
xlat
test
sub
lods
inc
lock
leave
cwtl
mov
testb
test
mov
jmp
sti
pop
adc
lea
sbb
push
mov
adc
mov
add
jl
sub
mov
ret
out
inc
movsb
add
push
sub
sbb
cmpsl
popa
mov
repz
jge
add
mov
mov
jge
das
sbb
lret
add
movl
nop
jp
fsubr
xchg
inc
jmp
into
mov
adc
aad
mov
lahf
in
xlat
jle
mov
leave
repz
out
movsl
stos
pop
lods
jg
les
jge
addr16
ljmp
mov
loop
add
mov
out
hlt
adc
xor
je
xchg
icebp
call
dec
add
cmp
cmc
mov
ja
cmp
inc
dec
ljmp
cmc
addr16
outsl
frstor
fsubs
sub
jno
cmp
push
add
pushf
lock
pusha
inc
scas
hlt
ljmp
sbb
cli
sbb
in
imul
cmc
inc
movsb
dec
movsb
xchg
sbb
cld
shrb
lret
clc
cmpl
sub
jno
cmp
mov
push
fldt
call
and
repnz
sbb
cmp
test
movsl
push
fmul
or
cld
dec
inc
mov
mov
es
lods
mov
push
aam
xchg
mov
pop
cli
pop
adc
call
leave
mov
jno
out
imul
mov
mov
xor
out
or
xchg
push
icebp
stos
test
cmp
adc
andb
je
inc
idivl
movsb
rcrl
mov
sub
fnstenv
mov
mov
das
or
dec
cld
in
fdiv
xchg
jbe
push
mov
loope
or
cmpsl
addb
es
xor
cmp
mov
fstpl
in
repnz
pop
adc
sbb
xor
movsl
or
fnstcw
cs
inc
lods
add
gs
jmp
incb
mov
xchg
cmc
popa
lds
jmp
add
mov
aad
cmp
jne
imul
in
xor
xchg
push
imull
push
add
leave
cmp
adc
std
jmp
push
and
loope
add
dec
ret
jno
roll
sub
ret
nop
mov
ret
scas
adc
jmp
jecxz
jne
sbb
mov
rol
test
enter
jns
xor
iret
add
ret
sbb
jle
push
dec
dec
negb
and
push
mov
popf
or
xor
xchg
push
ret
ret
xchg
sub
fisubl
subl
cmpsl
ss
scas
negb
mov
test
fsubrp
push
cmp
add
mov
and
rclb
xor
inc
jns
sbb
add
ror
lods
notb
stos
fidivs
je
loopne
lahf
mov
cltd
xor
js
mov
movd
aaa
cld
dec
mov
pop
adc
mov
adc
scas
inc
insl
cwtl
mov
insl
add
stc
and
fimuls
fiadds
xor
shr
xchg
mov
cmc
shrb
and
test
sahf
pop
test
mov
imul
pusha
cli
lahf
ja
movsb
cwtl
test
mov
xor
lcall
pop
pushf
out
movsl
rclb
pusha
xor
popa
pop
in
mov
mov
dec
dec
jnp
pop
xchg
xorl
stos
or
jae,pn
outsb
sub
out
and
stc
pusha
xchg
loopne
mov
lret
std
sbb
cmpsl
push
sub
inc
vpmaxub
fs
sahf
jo
dec
in
pop
and
sub
leave
dec
sahf
sbb
push
cmovge
enter
js
test
cli
jmp
js
push
fs
sbb
nop
test
xlat
sub
sbb
jb
dec
test
sub
xchg
push
inc
jmp
mov
inc
xchg
jecxz
mov
lea
mov
and
jmp
xchg
nop
sahf
fnstsw
arpl
test
and
je
add
push
sub
lods
out
xchg
mov
jb
rcrl
sub
or
aad
pop
sbb
imul
test
pop
mov
sub
or
sti
jecxz
clc
movaps
mov
and
scas
rolb
mov
sub
jnp
push
and
das
aam
js
arpl
xchg
and
jge
dec
dec
aas
into
je
adc
rol
sub
sbb
jg
out
imul
push
inc
jae
out
bound
mov
fwait
mov
rclb
ja
sbb
adc
adc
sub
add
jne
sub
decb
mov
push
arpl
fs
mov
cld
frstor
frstor
xchg
xor
sub
mov
push
dec
pop
push
or
fldenv
xchg
sbb
in
aaa
adc
or
sbb
rcl
mov
rclb
and
or
push
dec
lret
js
sbb
cmp
dec
mov
fimull
pop
jge
call
and
push
andb
jnp
inc
aam
mov
rcr
fcompl
push
lcall
jge
mov
pop
or
cmp
fs
dec
push
insb
sbb
scas
sub
cmp
mov
ljmp
jbe
dec
mov
mov
ljmp
lods
sub
jbe
add
jns
dec
rcr
loop,pt
cmpsb
or
inc
xor
int3
sub
pushf
push
cmp
push
enter
aaa
int3
and
sti
mov
push
andb
sub
mov
movsb
xchg
fs
sbb
mov
or
clc
ret
and
out
lea
sets
insb
sbb
and
xorb
xor
adc
rolb
mov
inc
cmc
sahf
addr16
fsubrs
repnz
sarl
jb
incb
imul
adc
pusha
sbb
or
jge
shll
je
xchg
int
pop
push
cmp
ljmp
stc
add
loop
js
cmp
idivl
stc
enter
xchg
and
push
enter
lods
rcll
add
pop
jecxz
or
xchg
arpl
cmp
in
leave
movsl
mov
test
adc
cmp
xchg
add
push
adc
inc
popf
push
xchg
xchg
adc
sub
outsb
gs
sbb
add
sahf
call
clc
xchg
jbe
ljmp
lahf
rorl
aam
insb
add
push
sbb
outsl
ret
xchg
daa
pop
outsb
pop
and
shrl
mov
dec
sub
pop
push
push
jbe
adc
movsl
inc
adc
ret
inc
add
leave
cmp
adc
repz
loope
lods
add
pop
mov
sub
aam
call
ss
mov
add
in
inc
sbb
add
sahf
cmc
sbbl
mov
call
xlat
cmp
xchg
jae
xor
test
inc
imul
icebp
test
pop
sub
push
jnp
push
outsl
clc
pop
jp
loopne
jl
enter
in
test
sbb
dec
sub
mov
pop
in
shll
push
rorl
imul
push
sub
pop
dec
movsb
out
sub
jno
lahf
imul
dec
leave
call
xor
shl
mov
mov
push
movsl
and
mov
mov
cmp
push
repnz
push
popa
outsb
in
loope
call
int
xor
loop
ss
lods
ja
lea
dec
ret
lret
repnz
leave
aas
addl
or
loope
mov
enter
rolb
dec
jae
mov
sub
xchg
xor
add
cmp
add
inc
add
or
push
rol
out
fstpt
aaa
test
ret
inc
rclb
adc
add
cld
mov
inc
daa
gs
hlt
jle
xor
inc
cmpsb
xor
sbb
push
mov
daa
je
loop
aas
mov
sahf
push
or
adc
xor
std
inc
loopne
insb
pop
out
pop
jno
cmc
xor
mov
gs
pop
ret
imul
xor
imul
notb
add
negb
sbb
imul
push
push
rorl
push
je
gs
aad
out
mov
test
sub
add
shlb
mov
add
aad
jle
inc
shll
das
dec
jl
pop
pusha
imul
sbb
inc
jp
imul
ja
jno
mov
gs
cwtl
shl
fdivs
sarl
mov
repnz
movsl
test
rcr
cmp
mov
fs
sub
or
fistl
ds
lahf
push
mov
inc
in
mov
movsl
test
pusha
icebp
flds
add
inc
jae
divl
inc
jo
mov
add
gs
insl
pop
sahf
jmp
jo
mov
lahf
adc
leave
cltd
or
push
sub
push
pushf
push
xchg
out
xchg
push
sahf
lea
xlat
loope
enter
jne
mov
inc
jl
push
pop
cmc
test
arpl
outsb
clc
xchg
push
mov
imulb
addr16
push
aas
in
or
cmp
push
addr16
sub
pop
xlat
sahf
into
popa
mov
adc
adc
addb
jns
mov
fscale
jo
jmp
jmp
in
rclb
pop
insb
jp
dec
push
nop
adc
pop
or
fs
jae
outsl
out
cmp
scas
and
cmc
into
mov
fwait
push
divb
imulb
je
jns
das
pushf
lea
xchg
adc
repnz
popa
mov
xchg
outsb
sahf
jne
aam
push
pusha
dec
mov
testb
xchg
pop
out
pop
xor
in
insb
das
dec
and
add
lds
enter
out
and
cmp
andl
addr16
push
or
movsl
pop
push
divl
jecxz
adc
pop
push
inc
loope
mov
nop
jns
into
mov
and
pop
push
jb
ja
mov
divl
outsl
ds
ret
mov
sbb
dec
or
cwtl
pushf
js
xor
and
dec
jle
fdivs
dec
rclb
push
mov
cmp
addb
jle
sbb
add
pop
repnz
pop
jle
or
inc
arpl
daa
pop
xor
xchg
into
inc
pop
sub
shlb
push
sarb
sub
pop
sbb
xor
sbb
imul
pushf
xchg
daa
scas
xchg
leave
ss
push
dec
and
xchg
outsb
rorl
xchg
pop
mov
cmpsl
push
add
data16
in
mov
imul
shll
lcall
mov
iret
mov
and
inc
sub
xchg
pop
dec
in
lods
or
orb
pop
fsubs
sarl
sbb
adcb
aam
sbb
out
fsubrs
outsb
rcl
rorb
cmp
sub
movsb
xor
and
pop
lea
xor
clc
gs
leave
lea
pop
cmpb
test
in
shlb
and
jo
mov
fnsave
fwait
jecxz
int
mov
in
dec
sub
sbb
int
push
inc
pop
or
popl
arpl
mov
pushf
pop
out
dec
xor
or
jno
incb
mov
push
push
in
jb
clc
sbb
and
jns
push
arpl
xchg
roll
or
stc
mov
test
add
sbb
arpl
stc
push
add
popa
jle
sbb
xchg
push
pop
mov
push
add
mov
mov
test
rcr
call
sbb
mov
xor
popa
imul
out
sub
scas
inc
fmull
movb
sahf
pusha
std
rorb
popf
sub
push
cmpsb
fimuls
inc
cmp
lea
nop
adc
mov
out
js
ljmp
mov
lock
mov
leave
nop
idivl
cmp
push
cs
sbb
dec
or
xchg
sub
inc
jle
and
and
rorl
mov
sti
and
mov
mov
add
and
dec
inc
push
seta
mov
jne
push
xchg
jmp
ret
loopne
sahf
sub
add
pop
dec
fwait
or
pop
xlat
jl
push
push
ja
push
loop
and
scas
clc
test
movsl
or
jge
loope
inc
sbb
xor
xchg
xor
ret
rcrl
lret
insb
push
xchg
and
inc
push
mov
mov
mov
pop
adc
xor
shrb
bound
jo
lcall
add
popf
dec
push
or
aas
cmpsb
rcl
mov
add
inc
pop
loopne
cld
out
pop
addb
push
jo
ss
inc
mov
hlt
inc
jle
add
in
xor
lods
adc
dec
out
test
in
sbb
andl
pop
stc
arpl
mov
mov
pusha
subb
fmull
insl
stos
gs
cmp
mov
xchg
inc
or
es
jns
xlat
mov
sub
push
push
imul
jle
sub
stos
mov
pushl
adc
dec
push
es
testb
push
test
mov
fistps
leave
insl
and
loopne
jns
int
lods
sahf
mov
and
sbb
cmc
push
jb
dec
pop
insb
sbb
lret
bound
int
push
and
repnz
aam
fcmovbe
in
mov
mov
and
add
cmp
outsb
inc
mov
add
mov
sti
into
fxam
jl
cmc
jecxz
xor
sahf
fstpt
idivb
cmp
inc
push
sbb
loope
aas
lods
int3
sar
ja
jecxz
sub
fldt
push
cmp
mov
pop
mov
xchg
dec
xor
jo
int
fld
push
in
sbb
movsl
push
mov
xchg
mov
mov
imul
xchg
rorl
stos
mov
rorb
pop
add
inc
clc
jno
ds
stos
pop
jmp
ja
repnz
fs
cmpsl
dec
xor
pop
mov
mov
scas
jmp
nop
popa
sub
lods
sbb
fisubrl
mov
adc
rorl
jp
aaa
or
mov
lahf
cmc
xchg
jo
mov
lret
fsts
rorb
shrb
out
push
imul
movsb
fldt
out
xor
add
add
pushf
lret
out
nop
sti
jmp
adc
mov
ret
notl
loope
shr
dec
adc
cmpsb
scas
not
insl
or
sti
cmp
xchg
inc
sub
out
cmp
jo
movsb
and
test
jns
in
fldenv
inc
mov
popa
xchg
loope
xchg
xor
test
int3
mov
push
ljmp
sbb
push
test
push
lret
rorl
xchg
es
xlat
aad
mov
lcall
out
adc
xor
int
mov
mov
cmp
dec
je
inc
dec
sbb
add
pop
inc
jecxz
lea
pop
pop
add
lods
icebp
pushf
add
mov
mov
mov
adc
imul
or
movsb
xor
inc
sbb
add
or
mov
in
xor
inc
fcmovnb
lret
fldt
popf
push
push
mov
aad
test
dec
ja
arpl
xor
mov
mov
movsb
ljmp
push
stos
decl
adcl
xchg
sbb
xor
push
or
test
or
bound
push
push
jo
idivb
or
test
sub
loopne
daa
mov
push
sub
xor
sub
out
rclb
mov
mov
pop
aas
movsb
lret
sahf
sub
or
sbb
xor
inc
dec
test
ds
loope
jne
outsb
cltd
mov
or
lods
outsl
push
ret
xor
insl
cmp
xchg
push
dec
rcrb
lea
rolb
pusha
jle
sbb
ret
lock
js
inc
stos
popa
ret
es
mov
jns
lods
cmp
andl
rolb
test
sti
sbb
in
je
das
lds
mov
push
jecxz
mov
out
mov
scas
push
mov
mov
inc
mov
sub
lock
ss
jns
mov
int3
les
add
sub
mov
rol
inc
mov
dec
andb
xor
push
enter
or
pop
in
add
dec
es
mov
or
in
mov
aad
je
jge
push
sbb
scas
xor
jmp
fbld
push
sbb
cs
rorl
test
mov
mov
pop
mov
sub
jecxz
aaa
xchg
ja
xor
imul
inc
sahf
das
loope
sbb
mov
and
data16
jmp
ficoml
std
or
push
mov
adc
pop
sti
lret
xor
and
mov
divb
leave
aaa
pop
push
fldt
mov
loop
je
mov
mov
int3
clc
push
fucomi
xchg
sbb
sbb
test
dec
mov
int3
pop
and
jo
sub
iret
xor
add
les
movsb
fistps
push
fxch
out
sbb
mull
xor
das
orl
imul
lcall
xor
xor
into
pop
dec
add
add
xchg
sahf
cmp
push
mov
aas
mulb
je
es
ja
out
dec
test
outsb
xchg
push
in
test
in
mov
and
idivl
or
icebp
dec
mov
in
stos
cltd
call
sub
dec
mov
cwtl
add
push
clc
popf
ficomps
mov
popa
loop
pop
test
mov
dec
repnz
and
inc
das
sbb
add
sub
cmp
testb
in
jge
or
jns
ds
repz
xor
out
pop
adc
pusha
adc
xchg
mov
fstpl
je
fwait
push
arpl
xchg
fmull
cli
mov
jmp
daa
add
addr16
xor
add
cmpsl
rcll
mov
cmc
cld
ret
pop
xor
aas
aas
hlt
sub
imul
lock
adc
adc
fsubrl
add
subps
jo
das
push
push
inc
call
filds
repz
imul
pop
adc
cmp
cmp
aad
sbb
adc
mov
out
imul
cld
pop
dec
bound
pusha
add
int3
scas
xchg
push
in
push
stc
rorl
ret
mov
inc
faddl
mov
and
fnstsw
clc
mov
adc
lret
cwtl
jmp
int
add
jns
out
jmp
pop
jg
rorb
cmpb
jmp
xor
movsb
sub
ficompl
fisttpll
mov
inc
fistps
sub
mov
add
aas
nop
pusha
inc
jb
scas
and
and
testb
imul
pop
jg
ljmp
or
pop
xchg
mull
mov
jnp
movb
mov
push
push
repnz
mov
fs
cmp
and
out
pop
jbe
jg
loope
cmp
inc
and
push
pop
sbb
daa
mov
test
mov
push
add
pusha
or
xorb
jae
call
adc
sti
sti
inc
scas
dec
dec
sbb
jle
or
cmp
hlt
cmp
xchg
jne
test
in
outsl
in
out
add
xchg
inc
xchg
notb
popf
stc
lret
fistps
cmpsl
in
js
lret
and
icebp
mov
jno
ret
jge
and
lret
fidivs
gs
scas
and
cmpsb
xor
push
pop
js
sub
xchg
rorb
int3
mov
or
add
retw
test
or
dec
ja
imul
pop
lods
adc
repz
sub
sti
jmp
add
inc
lahf
add
fbld
pushf
jp
std
jne
int3
and
arpl
sub
xor
test
ret
sti
jecxz
fisubrl
imul
push
stos
jl
movsb
fdecstp
aaa
xor
push
xchg
das
and
fwait
mov
js
lods
les
in
out
es
ja
inc
je
ds
or
push
xchg
jecxz
mov
out
sbb
lods
sub
jnp
call
inc
cmc
and
ret
gs
out
mov
repz
test
sbb
xchg
nop
pop
ss
cli
fcmovne
into
pusha
imul
outsb
inc
test
and
pop
sub
jno
dec
test
push
mov
or
push
pop
rolb
pop
test
dec
adc
mov
pop
sbb
cmpb
mov
mov
cmpsl
adc
push
adc
xor
push
lock
or
xorl
adc
sub
rcl
pop
aam
mov
mov
mov
sbb
sbb
or
pop
ljmp
popf
bound
inc
mov
test
mov
out
push
adc
lods
scas
mov
pop
jne
data16
or
leave
test
in
cmp
mov
cwtl
inc
push
hlt
mov
sub
outsb
mov
mov
add
lret
data16
aam
ds
add
pop
cmp
mov
int3
mov
jo
dec
rolb
add
test
pop
hlt
jb
stos
das
lds
add
data16
or
notl
roll
lock
les
sub
lahf
xchg
cmp
jne
into
mov
out
je
aaa
and
mov
push
out
push
adc
adc
cmp
inc
mov
movsl
xchg
xchg
xchg
mov
mov
sbb
iret
roll
je
je
mov
lcall
xchg
push
aaa
or
pop
ret
xor
sub
add
push
sti
adc
cmp
jbe
xchg
mov
movsl
xchg
mov
mov
push
lock
cmc
or
sbb
scas
iret
pop
or
fsubr
pop
mov
pop
jns
jle
or
repnz
sbb
mov
mov
inc
loopne
dec
push
lcall
pop
popa
push
dec
xchg
mov
push
out
push
inc
mov
cmp
ds
ss
lds
out
jnp
fistpll
xchg
aam
or
cmp
or
jnp
shll
adc
lcall
repz
and
cltd
push
int3
jp
aaa
int3
sub
insl
stos
adc
mov
in
push
mov
xchg
dec
pmaddwd
mov
sahf
pop
ficoms
mov
loopne
daa
inc
push
aad
neg
xchg
in
pop
es
mov
mov
xor
sbb
cmpsb
xor
adc
mov
lock
and
mov
cmp
mov
pop
lods
jle
xor
fiadds
pop
mov
add
push
add
pop
cmp
cmpl
cltd
loop
aam
mov
scas
adc
lsl
lea
dec
sarb
xor
les
dec
int
sub
sar
sub
push
enter
cmp
jbe
cmp
or
bound
add
sub
ss
push
imul
xor
xchg
imul
test
divb
mov
pop
inc
push
mov
fs
jmp
and
sti
out
popa
pop
repnz
mov
xor
push
mov
and
daa
cmp
outsl
dec
movsl
insb
push
adc
cmpsb
clc
out
cltd
cmc
xchg
pop
out
add
into
pop
jne
mov
pushf
iret
testb
aaa
lods
in
stc
sub
test
lcall
iret
and
nop
mov
jne
call
ffree
push
mov
loop
inc
dec
shlb
sbb
arpl
scas
xor
rcrl
dec
test
pop
lods
shll
xor
subl
adc
lea
in
aad
arpl
xor
cli
and
aad
push
adc
sbb
jno
xchg
test
gs
add
or
mov
insb
mov
pop
fldenv
inc
mov
push
cmp
xor
jge
jmp
pop
in
ret
pop
cmp
jne
xor
test
cmpsb
bswap
or
ret
mov
jo
mov
cltd
cli
mov
and
iret
xor
test
repnz
out
enter
xchg
xor
insl
xorl
insb
xchg
movmskps
xor
jge
push
enter
shll
dec
imul
sbbl
pop
mov
xlat
and
dec
ret
jae
xchg
fisubrl
mov
mov
insb
fstpl
push
fcompl
push
out
xchg
test
clc
test
xor
test
mov
dec
push
mov
add
inc
out
call
inc
lcall
pop
int3
push
ret
cmc
js
mov
lret
xlat
push
call
std
and
sub
gs
stos
adc
clc
inc
popf
jl
imul
iret
or
test
cmp
or
xchg
shl
inc
cmp
cltd
sbb
xorl
mov
in
jae
or
imul
adc
pop
xchg
inc
mov
ljmp
test
decb
mov
mov
mov
sub
movsl
dec
and
push
lods
adc
xchg
xor
dec
divl
mov
ret
movsb
jae
push
cmp
and
ret
adc
add
xor
mov
stc
mov
pop
das
in
push
mov
int
pop
cmp
mov
xorl
inc
fdiv
inc
fwait
mov
call
mov
stc
fdivrs
ss
cmpsb
xchg
sbb
loop
and
jno
adc
xlat
pop
mov
and
loopne
dec
lea
aad
icebp
lret
sub
pop
push
in
movsb
push
push
push
test
idivb
jns
daa
pop
faddl
ret
lahf
pop
test
jmp
pop
adc
cmp
pop
hlt
push
xor
jp
xchg
push
hlt
jge
fmulp
scas
test
out
fwait
jecxz
cmc
loop
dec
jecxz
fbld
inc
xor
mov
jo
in
ljmp
jne
xchg
mov
cld
add
xor
cmp
lahf
sub
cmpsb
fxch
sub
dec
push
mov
jg
and
jmp
jne
cli
iret
mov
in
inc
orb
sahf
mov
xor
test
dec
adc
pop
pusha
les
inc
mov
mov
xchg
pop
jno
push
test
xchg
pop
cmc
sahf
test
scas
mov
jnp
xchg
icebp
lret
mov
sahf
hlt
dec
into
push
popf
adc
push
mov
sti
add
lods
pop
data16
les
and
or
scas
stos
add
hlt
xor
orb
jmp
hlt
push
sub
test
je
outsb
ljmp
andl
das
jnp
push
fstps
mov
ficomps
testb
movsb
adc
mov
loope
movsb
and
jno
sbb
cmp
cmp
test
push
outsb
shrl
aaa
rcll
cmp
mov
fdivl
rclb
scas
int
loopne
div
mov
test
lret
xor
pusha
or
dec
jno
inc
adc
aad
push
int3
nop
icebp
cltd
into
nop
xchg
out
pop
cmp
bound
insl
push
mov
dec
cmp
adc
cmc
jo
addr16
in
jo
xor
out
jle
add
mov
sahf
and
inc
jae
jo
shrl
cwtl
cmpsb
shrb
insl
pushf
xor
fwait
push
xchg
sub
dec
sub
sarl
sahf
jbe
mov
inc
adc
loope
scas
test
out
pop
lahf
push
sub
push
sahf
imul
ret
inc
xchg
xchg
in
ret
mov
sub
add
loop
jnp
or
into
inc
imul
in
lods
or
pushf
mov
pop
iret
mov
pop
add
and
movsl
imul
es
stc
mov
int3
sub
insl
nop
pop
add
push
inc
ret
jnp
pusha
mov
jb
iret
push
jbe
cmp
inc
sbb
push
mov
cmp
fiaddl
jmp
mov
mov
inc
out
fwait
pusha
test
add
fnsave
xchg
popa
push
pop
push
rol
arpl
sub
cs
mov
inc
cmp
pop
pop
fsubl
mov
adc
adc
jb
sub
jl
xor
add
ror
jne
imul
fisubrl
push
and
fs
push
xchg
stos
jg
and
pop
into
mov
add
adc
or
dec
mov
out
sarl
xchg
ret
insb
cmp
loope
jl
ret
dec
xor
je
and
lret
pop
out
cmpsl
in
add
cmp
insl
in
or
add
sbb
fiadds
les
and
loop
sub
rorb
clc
int
pop
xchg
bound
sbb
dec
fwait
dec
mov
push
cmp
out
mov
inc
in
inc
lods
cmp
xchg
insb
and
pop
js
mov
test
in
and
pop
mov
push
push
pushf
hlt
mov
add
jmp
lahf
shl
jp
cwtl
pop
lods
loopne
into
add
jb
mov
repnz
push
sub
cmp
outsb
movsb
insb
mov
in
jo
add
lret
sbb
in
shrb
ss
xchg
push
cmp
jge
into
sbb
cli
or
inc
push
nop
jo
jbe
dec
popa
aad
xchg
xor
stc
jo
pushf
fsubl
xor
jmp
aam
jecxz
cltd
dec
in
cmp
imul
rclb
cmp
push
out
daa
adcl
jp
mov
sub
jmp
inc
enter
mov
pusha
jbe
cmc
rcll
popf
dec
ja,pn
jmp
xchg
test
push
mov
inc
negl
and
sbb
adc
daa
outsb
dec
ret
push
cmp
pusha
jl
add
lods
icebp
or
adc
mov
or
push
lods
xchg
mov
imul
xchg
pusha
jle
cmpsl
bound
adc
jge
mov
clc
or
pop
lods
push
or
jnp
cld
cmp
out
dec
adc
cmp
test
pop
imul
loop
mov
jae
xor
sbb
sub
sub
pop
lods
icebp
push
mov
ds
cmpl
dec
repnz
js
std
sbb
rcrb
pop
daa
gs
mov
jne
insl
push
scas
loop
mov
dec
pop
sahf
jmp
mov
pusha
mov
push
mov
adc
ljmp
pop
inc
pop
or
out
and
fcompl
mov
cmp
pushf
aad
adc
cmp
in
cmpsl
pop
es
pop
sub
in
mov
in
or
cli
mov
out
jno
push
and
addr16
push
test
js
test
dec
lods
int
xchg
push
popl
jmp
or
push
dec
add
jno
and
lock
push
pop
and
sahf
fbld
cwtl
out
mov
dec
cmpb
pop
mov
outsb
testl
mov
adcb
sub
mull
jecxz
iret
jmp
cmp
or
iret
fisttpll
pcmpeqb
and
sbb
mov
sbb
stos
sbb
fisttps
xor
xor
push
add
mov
or
mov
stc
jmp
xor
jle
mov
jp
lods
lds
cwtl
mov
ret
inc
cmp
shlb
aaa
inc
loop
das
push
test
jecxz
push
pmulhw
js
out
dec
mov
js,pt
cld
cmp
and
mov
xor
arpl
notl
aas
ja
sub
dec
sub
sahf
daa
push
daa
dec
dec
fnstsw
shlb
adc
sub
dec
pop
andl
xchg
sbb
cmp
xor
test
stc
xchg
jae
mov
jl
call
test
mov
gs
cltd
push
xor
xor
mov
fisttpl
and
inc
jle
adc
push
idivl
sti
xchg
jo
lds
test
xchg
or
mov
lods
mov
add
popa
mov
sub
jp
ficomps
lock
mov
mov
push
aaa
aaa
into
cmp
fnstsw
decl
sar
inc
pop
std
sub
pop
jmp
sbb
inc
lea
mov
push
dec
xor
pop
in
xchg
jno
cmp
jmp
dec
notl
mov
lcall
cmp
stos
dec
adc
ret
push
and
pminub
shll
lock
inc
jne
push
and
repz
test
inc
add
fstl
jecxz
dec
stos
fxch
sarb
pop
mov
mov
xchg
mov
pop
inc
cmp
into
pushf
and
pop
shrl
test
fucomp
ss
and
movsl
lds
hlt
push
xchg
outsl
xchg
adc
into
pop
push
roll
xchg
aaa
push
cltd
jns
jnp
pop
or
mov
popf
and
dec
pop
lock
pop
aaa
mov
stos
shrl
into
movsb
call
adc
xor
fnstsw
xor
lea
adc
aas
xor
xchg
inc
adc
push
aad
jle
in
ja
lret
dec
cmpsb
sarb
imul
ret
lret
leave
leave
pop
scas
jle
std
or
rorl
pop
sub
xor
jb
push
movsl
insb
adc
outsl
xor
pop
mov
subl
popf
jmp
mov
test
mov
adc
mov
add
inc
fimull
sbb
lods
xor
pop
xchg
outsl
sbb
pop
call
ret
popf
enter
pop
sahf
mov
cwtl
push
movsb
test
adc
push
sbb
outsl
inc
in
filds
ljmp
pop
or
cmp
ja
cmpsl
mov
xor
idivl
xor
mov
test
mov
ss
xchg
jl
sub
xchg
and
add
fcoml
and
idivl
icebp
lds
pushf
cmp
add
sub
mov
dec
pop
mov
rolb
lods
xor
mov
addb
xlat
shr
sbb
into
xor
inc
in
sub
adc
neg
pop
xor
testl
mov
or
sub
fstps
jno
xor
outsl
testl
insl
jge
aad
call
cwtl
mov
ljmp
std
adc
in
in
mov
and
je
aam
ljmp
lods
mov
sbb
mov
ds
das
xchg
jb
mov
aad
ret
jle
daa
push
cmp
cmp
repz
pop
into
xchg
lret
xchg
push
lods
adc
addr16
push
cmpsl
in
outsl
jbe
ss
inc
leave
inc
cmc
pop
scas
dec
mov
cld
push
call
out
mov
ja
lahf
xor
lds
ljmp
lea
dec
repnz
shlb
pop
bound
jl
das
dec
adc
sbb
pop
orb
mov
xlat
xor
mov
dec
add
faddl
dec
aam
dec
push
add
or
xchg
and
fwait
in
lahf
fwait
aas
iret
data16
push
sub
mov
imul
clc
and
test
adc
inc
cltd
xor
adc
cmp
xlat
je
mov
inc
aas
xor
mov
push
mov
inc
repz
lock
jl
test
and
push
je
insb
add
icebp
hlt
mov
pop
sbb
dec
scas
xchg
dec
jle
enter
push
jge
xchg
inc
fisttpl
clc
adc
mov
mov
inc
js
into
mov
movsl
pusha
iret
xchg
or
xchg
insb
insl
aam
xchg
xor
addb
test
sub
rcl
and
pop
mov
ds
outsb
mov
inc
jns
or
in
outsl
jne
and
scas
mov
data16
lods
xor
push
mov
loop
dec
push
mov
and
ror
test
popa
fwait
or
sub
xchg
out
pop
imul
aam
lret
or
xchg
fiadds
dec
sbb
jmp
cmp
sub
add
test
and
mov
lahf
loopne
pop
stc
out
push
jo
loope
sbb
jnp
dec
xor
scas
lea
fdivl
mov
mov
dec
roll
xchg
add
push
and
sub
js
mov
test
inc
mov
orl
mov
insb
dec
mov
sub
adc
jge
cmp
es
loopne
or
dec
mov
pop
jle
xchg
repz
testb
xchg
cs
sub
jp
ret
xchg
cs
cmp
inc
inc
add
leave
and
cmp
rorl
or
and
pop
push
jge
inc
aam
dec
in
mov
movsb
mov
movsl
and
jg
cmp
or
push
mov
loope
cmp
jns
insl
xchg
mov
mov
iret
or
aas
xor
outsl
mov
xor
shl
jbe
and
aam
mov
fmull
mov
lock
push
idiv
xchg
sbb
mov
push
js
test
inc
in
or
push
rclb
sub
dec
test
add
ret
out
lret
xchg
inc
std
jae
pop
inc
inc
jmp
fs
jmp
int3
xchg
jg
sbb
mov
jmp
dec
ds
gs
mov
aam
popf
mov
into
sbb
mov
in
mov
xchg
lock
cmc
addr16
xchg
daa
std
out
cmp
vandnps
xchg
and
rcrb
fwait
push
sahf
pop
pop
sbb
shlb
aam
cltd
pop
imul
jg
nopl
inc
adc
out
int
pop
rclb
cmp
sbb
stos
into
jmp
adcb
insl
push
cmpsb
or
das
mov
pop
movsl
loop
xor
pop
and
cli
sbb
adc
jl
push
or
lret
jne
ja
cmp
pop
sahf
sub
retw
pop
aam
sub
lds
scas
and
xchg
rcll
mov
pop
push
jge
mov
nop
sbb
ret
hlt
cmpsl
xor
mov
add
xor
insl
test
sub
lock
mov
inc
mov
test
sbbb
push
sbb
daa
push
adc
in
mov
jle
hlt
cmpsl
rclb
and
nop
xchg
fbstp
push
adc
pop
xlat
dec
sbb
add
pop
or
push
push
mov
sub
fistps
dec
and
add
scas
jne
andl
outsb
mov
in
sahf
fwait
adc
sub
pop
data16
xlat
mov
add
les
aam
cmc
sub
or
jecxz
ja
repnz
sarl
pop
inc
repz
std
add
nop
les
mov
and
push
rcrl
push
mov
adc
std
sub
fdivs
mov
dec
in
and
push
enter
daa
jae
xchg
cmp
sti
xorb
pop
mov
xlat
ljmp
mov
mov
push
test
ljmp
hlt
nop
pop
data16
xchg
adcl
aam
test
and
lods
xor
cmp
cmpsl
dec
and
loopne
inc
push
cmp
psadbw
fsubrp
sub
cmp
push
add
mov
jbe
mov
jbe
or
xchg
and
lret
mov
fst
call
sub
scas
lret
and
lret
add
sub
adc
jae
jp
push
test
bound
jmp
fistpll
stc
cmpb
lcall
cmp
fdivrl
mov
or
cmc
sub
cmp
pop
jecxz
sbb
testl
shr
cmpsb
ror
outsb
insl
and
jbe
fiadds
outsl
mov
gs
mov
das
jle
jbe
pop
pop
inc
and
sahf
jne
fwait
mov
mov
loopne
daa
sub
and
outsl
mov
nop
pop
xchg
mov
leave
rcl
xor
imul
orl
jmp
xchg
subl
inc
inc
loop
and
andl
leave
jp
pushf
clc
jb
mov
lock
xchg
rcll
adc
loopne
pop
in
push
ficompl
arpl
push
fwait
clc
imul
pop
jo
push
or
push
mov
adc
paddusw
das
pop
ficoml
sahf
std
out
push
leave
mov
adc
stc
je
adc
pop
xchg
int3
xor
jbe
push
ret
cmp
leave
loopne
sbb
dec
or
jo
cld
xor
fcoms
test
cmpsl
out
dec
repz
test
and
sbb
inc
sub
leave
pop
sub
lret
adc
sbb
sar
ret
sbb
xchg
mov
ss
lock
in
sarb
sub
ja
hlt
inc
adc
loop
push
ficoml
mov
notl
dec
xor
adc
mov
enter
jbe
pop
cs
mov
and
ss
xchg
sti
inc
stos
aas
and
dec
imul
es
or
sub
ret
out
mov
and
adc
adc
scas
les
mov
dec
sarl
shl
jp
push
cmc
in
hlt
jbe
icebp
lret
ljmp
jae
sbb
inc
lret
pop
stos
icebp
or
lret
pop
sbb
xchg
int3
arpl
jecxz
cli
jecxz
cmp
outsl
pop
mov
adc
mov
not
es
jnp
sub
pop
sub
imul
push
in
inc
sbb
or
add
jle
jl
mov
add
push
or
or
inc
stc
push
push
and
aad
outsl
iret
mov
jbe
push
clc
jo
adc
loope
bound
arpl
je
ret
je
stos
scas
cld
outsb
shrl
dec
repz
pop
stos
subb
mov
pusha
repnz
outsb
xor
push
mov
loope
push
js
push
and
les
movsl
dec
dec
fisttps
push
dec
imul
inc
rolb
jecxz
and
pusha
jne
inc
inc
and
dec
rcrl
add
inc
cli
lret
mov
adc
dec
sahf
add
push
stos
mov
jno
testb
xorb
xchg
xchg
je
and
popf
push
mov
xchg
sub
aaa
pop
jl
mov
int3
xchg
loop
popf
xchg
scas
xchg
pop
mov
or
add
xor
arpl
jne
jns
arpl
jnp
dec
and
fbstp
adc
and
dec
stc
stos
je
mov
call
lcall
lock
andl
stos
ja
mov
inc
cmp
mov
out
shll
addr16
sub
push
out
push
xchg
lds
inc
nop
cmp
push
sarb
int
fs
aaa
mov
fs
cmp
or
ss
shlb
add
pop
push
rorb
sub
ss
mov
stos
and
cwtl
out
push
jne
push
je
pop
jae
and
out
jns
test
test
mov
js
cmp
xchg
add
add
mov
stc
mov
pop
cli
mov
add
pop
call
daa
adc
mov
scas
xor
dec
shrb
dec
mov
mov
sub
push
outsl
sti
push
jp
dec
add
popw
sub
jl
fadds
and
mov
pusha
divb
negl
insl
pushf
fiadds
xchg
pop
mov
xor
int3
ds
adc
push
dec
pop
lds
lods
xor
addb
jae
mov
xor
xchg
icebp
push
add
and
dec
icebp
mov
fs
jb
sahf
div
or
add
unpcklps
loop
out
lds
mov
clc
in
pop
mov
mov
or
sarl
es
mov
sub
bound
or
xor
mov
js
or
xor
push
push
lcall
aaa
sbb
pop
sarl
jl
rcrb
dec
push
push
fistpl
lds
adc
dec
hlt
ficoms
cmp
mov
inc
jne
rcl
add
adc
dec
imul
pop
test
cmp
inc
daa
hlt
xor
cld
push
cmp
mov
mov
aas
or
inc
leave
ljmp
out
inc
sbb
xchg
adc
out
dec
aam
shl
std
cmp
xchg
xchg
int
or
lock
lds
mov
adc
xor
scas
mov
gs
and
call
jnp
inc
or
fcmovbe
clc
pushf
jae
fadd
test
adc
frstor
and
int
out
lods
mov
les
std
test
mov
pop
mov
cmp
pop
loopne
jecxz
pop
out
jbe
fcoms
fcoml
push
adc
mov
xor
jl
mov
mov
xchg
notb
addr16
outsl
shr
cltd
cld
insb
push
pop
ror
leave
xchg
jns
cmp
popf
mov
pop
notb
jle
or
push
jb
out
daa
loop
or
das
fsubs
cmp
dec
pop
cmpsb
imulb
add
les
cwtl
jg
test
stos
and
adc
rcll
pop
mov
test
xchg
mov
notb
int3
sbb
xchg
add
repz
lds
jg
and
scas
imull
xchg
sub
rcl
jecxz
es
pop
ficomps
xchg
or
loope,pn
jnp
js
insl
xlat
push
push
xchg
mov
bound
mov
hlt
or
lret
mov
jns
xor
test
inc
jecxz
daa
lcall
jnp
fwait
gs
in
bound
add
ljmp
inc
out
scas
aad
push
loopne
loop
imull
imul
sbb
jnp
xchg
mov
dec
es
mov
jg
aad
lea
icebp
or
in
repz
cli
les
insb
aam
mov
fs
pop
shll
push
sub
lock
xlat
stos
fldt
in
negb
xchg
or
std
adc
jno
lret
aaa
xchg
fsts
xorl
inc
repnz
sub
sti
nop
ret
jnp
mov
stc
jmp
jb
cmc
push
arpl
mov
fnsave
lret
pop
test
sbb
push
lods
in
sbb
lea
push
cwtl
lods
repz
dec
divb
push
sub
mov
mov
cltd
outsl
scas
mov
cmc
mov
popf
mov
popa
nop
cmpsb
xor
jmp
xchg
push
das
push
adc
jbe
daa
jb
std
pop
ss
mov
sub
adc
add
test
inc
data16
add
outsb
xor
aaa
jbe
cmp
push
mov
popa
call
mov
and
popa
scas
mov
sbbl
aas
adc
int
jmp
or
sub
cmc
cli
jae
ret
repz
outsl
push
and
cmp
adc
cmc
xchg
adc
imul
repz
data16
mov
adc
add
dec
fidivrl
enter
sarb
lahf
or
add
mov
in
sbb
jmp
sbb
rolb
xchg
mov
mov
xchg
push
shll
sahf
test
sbb
mov
add
aas
sarb
push
lods
mov
mov
xchg
int
addb
fisubrs
and
dec
imul
inc
mov
mov
xor
lods
xchg
jb
push
lret
jns
test
and
int
push
sbb
cmpsb
gs
cmc
les
shl
scas
ret
jo
cmc
inc
mov
inc
paddusb
hlt
mov
nop
es
insb
sbb
icebp
mov
dec
out
jecxz
push
xor
cmp
xchg
cwtl
ja
xchg
add
xchg
add
adcb
push
aam
mov
jmp
adcl
inc
fwait
cltd
xlat
and
dec
sbb
repz
insl
jo
xchg
inc
aaa
pushf
cmp
cwtl
inc
imul
mov
cld
outsl
mov
inc
add
sub
xchg
inc
sarl
ret
mov
sar
pop
cli
mov
insb
neg
dec
fldt
xchg
lahf
iret
fucomp
sub
aam
shlb
ss
negb
inc
adc
fs
jb
test
in
push
jmp
jp
ds
int3
push
sub
icebp
or
rep
sbb
cmpsl
xchg
cmpsb
and
cmc
mov
out
inc
inc
add
push
sahf
xor
outsl
fmuls
adc
xchg
mov
pop
nop
outsb
in
cltd
xor
mov
ds
inc
dec
mov
add
loope
icebp
or
out
push
subb
pushf
dec
andb
mov
dec
adc
fists
mov
mov
ret
inc
imul
jno
cmpsb
pop
ja
add
mov
add
filds
stc
ficomps
cmpsl
fidivl
sbb
test
sarl
sub
xor
jge
xor
cmp
out
fs
pop
in
cltd
dec
inc
inc
cmpsb
dec
push
adc
cwtl
pop
sbb
dec
add
scas
cmp
cltd
jge
or
jg
andl
fstl
push
mov
je
xchg
popa
add
rcrl
and
icebp
call
fdivrs
imul
popf
jno
mov
shr
mov
xchg
jno
mov
sub
jae
out
lods
push
adc
gs
out
pop
push
sub
pop
insl
int
mov
or
xchg
mov
xchg
cltd
and
mov
rcrb
int3
outsl
pop
push
aas
adc
sub
push
aaa
out
lahf
jmp
lock
leave
es
ret
insb
cmp
mov
pop
pop
lods
jg
stos
mov
adc
pop
inc
mov
and
or
xor
cs
push
jmp
lcall
aam
or
rolb
sahf
inc
add
jg
xchg
lcall
cltd
rorb
lock
xchg
and
icebp
and
xchg
push
jb
fsubrs
cmp
xchg
dec
lahf
xchg
outsl
cltd
push
sbb
scas
aas
test
js
daa
sahf
push
lock
dec
cmpsb
and
xchg
jp
outsb
pop
and
repnz
pushl
lret
rorl
adc
std
mov
dec
in
sub
call
push
mov
psubusw
mov
adc
into
inc
aas
test
loopne
repz
into
pop
bnd
or
mov
les
push
lret
cli
add
cmpsb
and
mov
loopne
inc
addr16
mov
rcr
pop
inc
lret
leave
fdivl
xor
pushf
sbb
shll
and
sub
lcall
xchg
xchg
adc
aad
or
jne
mov
inc
scas
mov
fwait
or
lcall
pop
shl
mov
mov
adc
xor
aas
lret
stc
adc
call
arpl
mov
in
aam
jnp
sub
or
orl
cld
arpl
cwtl
jge
jg
out
addl
fcomi
sub
jp
pop
adc
enter
fxch
leave
or
mov
das
adc
mov
cmp
insb
divb
enter
sbb
out
xor
scas
dec
cmc
movsl
sub
mov
sbb
pop
scas
xchg
int3
jp
loope
sar
movsl
jns
inc
jcxz
pop
mov
jmp
sub
test
fcmovu
mov
ficoml
add
push
ja
jns
fwait
sbb
pop
sub
and
add
add
mov
cmpsb
mov
jmp
ror
mov
lea
lret
ds
iret
in
jecxz
popa
mov
push
mov
cmp
mov
lock
add
mov
sub
push
cmp
push
fcmovbe
push
mov
fstpl
nop
std
jb
es
lock
mov
jle
in
sbb
stos
mov
ljmp
xor
popa
jg
mov
addr16
xchg
xchg
cs
jg
rol
add
scas
push
sub
fstpt
push
push
addr16
lock
adc
xor
sbb
xchg
sti
in
test
add
cmp
or
je
or
popa
sbb
cmpsb
lods
test
das
dec
imul
mov
stos
vorps
dec
ja
lock
movsl
push
jp
inc
ja
pop
fcmovnbe
adc
sub
scas
test
lods
pop
cmpsb
jns
ror
pop
jl
mov
in
lods
call
out
jl
int
imul
cmp
aaa
mov
xchg
outsl
cmpsb
xor
sbb
leave
or
xor
std
scas
mov
jmp
ljmp
movsl
or
pop
jl
xor
fwait
pop
nop
mov
xchg
insl
leave
adc
sub
cmp
call
or
cmp
ja
out
ja
insl
mov
sti
xor
mov
icebp
ret
cmc
inc
adc
movsb
push
cmpsl
imul
in
cmp
inc
cmpb
stos
mov
mov
aaa
lods
cmp
fwait
shlw
fs
inc
mov
in
jmp
add
arpl
imul
nop
xor
pop
adc
sahf
sub
and
and
sbb
ret
lahf
mov
mov
nopl
mov
clc
cmp
fisttps
push
das
lods
sub
adc
hlt
inc
jae
hlt
mov
mov
jle
add
mov
aam
pop
int3
js
push
jle
cltd
js
mov
dec
push
adc
loopne
mov
inc
dec
mov
leave
pop
xchg
jg
mull
in
sub
pop
mov
inc
adc
pushf
push
mov
repnz
pop
nop
lea
jle
lahf
pop
push
mov
jno
movsb
sbb
lods
mov
lahf
xchg
mov
xchg
divb
xchg
icebp
add
imul
imul
lahf
mov
sbb
mov
mov
mov
mov
push
push
push
ja
insl
xchg
pop
jns
cmp
and
into
jns
fs
push
xlat
push
adc
mov
out
or
cmp
xchg
push
pusha
push
loop
pop
lcall
dec
cmp
lahf
jge
movsl
in
clc
inc
push
mov
sarb
cmp
stos
cli
mov
rep
clc
and
push
fsts
inc
dec
into
fidivl
test
shl
push
fndisi(8087
or
enter
or
xchg
or
jb
stos
jmp
ss
loop
addr16
out
popa
imul
cmp
pop
fiaddl
int
test
mov
int3
scas
dec
lock
cld
push
cmp
mov
xor
in
xor
leave
out
ss
xchg
jno
stos
call
adc
mov
out
push
clc
or
jge
mov
jp
shll
push
and
cmp
sbb
ds
shr
rolb
pop
push
mov
jns
push
in
sbb
and
add
and
sbbb
dec
adc
inc
sbb
ja
jae
cld
mov
add
enter
js
sbb
xor
sbb
push
xchg
lods
xor
push
not
push
add
jg
sub
fildll
jb
mov
data16
into
or
outsb
xor
roll
sbb
arpl
popf
mov
pop
adc
adc
iret
inc
mov
sbb
ffreep
fcompl
fwait
xchg
filds
scas
fs
pop
aam
inc
pop
dec
adc
pavgb
stc
sbb
sub
xchg
push
cmc
pusha
push
dec
push
jne
aam
mov
inc
push
es
ret
adc
jge
or
in
test
clc
movsl
pop
loop
xchg
mov
js
adc
sarb
mov
cmp
pop
push
jle
fdivp
jnp
out
mov
cmp
sbb
js
add
aas
ds
inc
mov
ss
daa
imul
push
imul
pop
repz
scas
mov
mov
cld
adc
aas
rcr
mov
inc
ljmp
pop
cwtl
jl
cltd
sub
ret
imul
sub
outsb
cmpsl
and
or
and
push
and
mov
test
mov
scas
call
fcmovu
sahf
sbb
repz
arpl
pop
ds
fdivs
or
loopne
add
add
insl
pop
stc
and
xchg
lea
cmpsl
mov
insl
jno
cmpsb
fwait
les
insl
call
pop
ror
mov
sub
pusha
stos
jge
lahf
sbb
leave
mov
pop
adc
cwtl
adc
fnsave
jns
jns
cld
rorl
nop
outsl
cld
sbb
fwait
cmp
ret
mov
invd
out
arpl
dec
in
push
sahf
push
push
fnstenv
repz
xor
aad
jne
pop
jnp
mov
add
dec
pop
stos
icebp
sub
mov
ss
jmp
mov
sbb
imul
adc
pushl
pop
sub
rolb
inc
stos
push
dec
sub
cmp
in
and
sarl
fstl
cmp
sbb
pop
cmp
push
repz
ja
sbb
mov
stos
cltd
dec
cmpsb
leave
rorb
insb
dec
cmp
or
gs
shrb
xchg
cmc
push
pop
or
and
jo
push
push
pop
pop
adcl
scas
jle
in
int3
in
iret
pop
in
dec
imul
lods
pop
mov
cmp
ret
fmull
inc
mov
movsb
dec
loope
out
outsb
xchg
dec
insl
inc
and
sbbb
add
lods
mov
in
mov
sbb
std
outsl
inc
adc
movsb
sub
hlt
jb
fnstenv
stos
scas
sbb
pop
jno
mov
jg
sbb
mov
int3
jae
cmovg
sub
lods
loope
adc
in
adc
jnp
jp
insb
or
mov
popf
mov
sti
mov
lahf
pop
adc
mov
pop
jge
push
sub
stos
dec
negl
imul
aam
jo
inc
flds
mov
lcall
adc
ja
push
ret
xchg
inc
pushf
mov
aad
xchg
bound
sub
sub
xchg
xor
jge
in
jne
mov
mov
and
dec
pop
pop
or
lds
cltd
das
xchg
fnstsw
leave
or
dec
cmpsl
mov
scas
mov
xchg
mov
mov
lret
xchg
sub
es
mov
call
aad
mov
jp
cld
fisttpll
adc
lahf
cmpsl
movsl
data16
mov
or
dec
jae
in
sub
cltd
xchg
pusha
xchg
jnp
enter
daa
add
add
pop
test
push
and
pop
loope
sub
stc
xor
repz
shlb
stos
jmp
jb
xchg
es
pop
xor
mov
fstps
sahf
xchg
subl
addb
dec
inc
inc
int3
pop
fdivr
hlt
cli
cwtl
fwait
aad
sbb
adc
push
lcall
into
add
cs
test
lods
leave
dec
hlt
out
sub
push
ja
jno
push
xor
stc
fistpl
mov
or
inc
adc
clc
mov
lods
mov
push
mov
popa
inc
mov
xor
jmp
out
dec
lea
add
adc
lds
cltd
test
clc
adc
fs
rorl
sbb
sub
and
rcr
arpl
xchg
in
fnstenv
cmpsl
popa
xor
popa
or
test
and
xchg
shr
inc
sahf
jl
adc
sbb
sub
pop
jne
ret
push
pop
ss
stos
lock
ret
adc
jmp
test
in
mov
fisttpl
xor
adc
and
jmp
xorl
push
lret
pusha
clc
scas
dec
jne,pn
dec
les
inc
add
scas
fs
addr16
inc
cmc
cli
pop
cltd
outsl
add
testb
or
xchg
sub
mov
and
je
add
inc
inc
xor
sbb
clc
test
ret
pushf
dec
pop
sub
cltd
fs
xor
mov
mov
lahf
xchg
xchg
xchg
pop
sbb
xchg
imul
out
xchg
cmpsb
out
rorb
pushf
adc
dec
cld
inc
pop
mov
pop
sbb
mov
ret
ja
pop
movsb
cmp
les
sbb
fwait
adc
mov
xchg
sub
aaa
cmp
dec
lret
xlat
scas
sbb
pop
movl
out
pop
dec
stos
cmpsb
lcall
sub
push
imul
sbb
cmpsl
pop
cmp
mov
mov
ljmp
negl
or
dec
xor
jo
pushl
sub
jns
xchg
idivl
iret
cmc
cmp
jbe
xchg
mov
testl
xor
sbb
icebp
pop
mov
outsb
mov
adc
iret
push
mov
roll
jne
mov
das
mov
push
test
inc
in
lds
mov
adc
pop
fisubs
mov
je
cwtl
les
jl
cmpl
inc
adc
mov
cltd
or
xchg
mov
mov
pop
adcl
inc
xchg
sbb
loop
and
mov
repz
inc
and
jle
stos
sahf
or
and
jns
dec
scas
jbe
jge
imul
pop
add
fisubs
or
adc
or
rclb
mov
addr16
mov
in
clc
push
adc
pop
lret
in
dec
jge
std
mov
into
dec
xchg
iret
out
movsb
bound
mov
inc
stc
push
inc
pop
inc
call
sub
sbb
fwait
std
addr16
cmp
mov
mov
in
push
lret
jb
jl
lods
mov
push
inc
mov
imul
push
mov
int
push
dec
dec
sub
push
dec
out
cli
ja
mov
add
pop
test
and
cld
jecxz
lds
push
sahf
stos
outsl
sub
les
lahf
lcall
jb
mov
pop
cmp
or
je
scas
and
cmpsb
dec
addl
in
fwait
or
cmp
sbbl
das
mov
add
pushf
push
sub
loope
mov
and
mov
nop
lds
sub
xchg
or
and
mov
adc
inc
inc
or
cltd
mov
mov
mov
pop
lds
inc
xchg
loop
mov
or
sbb
data16
lock
add
pop
push
inc
inc
lock
out
xchg
sub
jmp
inc
movsb
xchg
dec
and
jbe
out
jno,pn
mov
mov
fldcw
mov
imul
xlat
sbb
sbb
cmp
and
inc
jo,pn
cs
jno
divb
pop
cli
pop
fildll
and
jne
xchg
push
iret
inc
jecxz
push
jmp
cli
sbb
imul
add
adc
popa
outsb
pop
sub
orb
push
divps
add
mov
pop
fisttpl
inc
repz
push
push
mov
push
rclb
fildl
mov
xchg
sbb
mov
iret
daa
loop
nop
adc
and
shrl
sbb
jecxz
jp
push
mov
leave
dec
cli
inc
lea
adcl
or
cltd
pusha
and
pop
cmp
mov
incl
incb
cmp
movsl
add
push
lds
out
mov
bswap
and
push
fs
jge
or
subl
mov
js
mov
outsb
test
fists
mov
mov
cld
jne
push
fiadds
inc
pop
out
pop
cmp
ss
inc
in
jge
pop
cmp
adc
shl
sarb
jo
aas
pop
or
movsl
aaa
add
pop
pop
stos
mov
mov
jmp
sbb
loopne
jno
ss
addr16
shll
lock
xor
and
fstl
stos
xor
daa
in
movsb
jns
sub
insb
aas
cmp
mov
popa
xlat
repnz
cmp
fists
dec
push
int3
xchg
cli
and
int3
or
jl
add
mov
pop
mov
xlat
dec
fs
fs
cmp
add
xor
lret
mov
sbb
inc
or
lea
jmp
jnp
sahf
xchg
sti
xchg
lret
out
fidivl
scas
fucomp
jl
out
ja
or
jp
ss
and
fnstsw
testl
and
test
test
add
subb
adc
and
dec
adcb
pop
scas
add
inc
jl
pushf
xchg
sbb
mov
inc
mov
push
jo
data16
cmp
sbb
cwtl
pusha
pop
mov
and
test
push
outsl
jmp
sub
call
push
jne
jne
rolb
sub
mov
xchg
inc
inc
not
mov
inc
and
mov
or
rol
fs
mov
lods
pop
or
repnz
mov
popa
inc
mov
mov
sbb
mov
int
push
fmul
int3
push
mov
pop
pop
sbb
dec
aas
test
mov
jge
add
cmp
rclb
loope
mov
sbb
call
cmpsl
pop
shl
sub
mov
and
inc
shll
mov
cmp
loopne
negb
lods
push
add
imul
lret
jo
es
xlat
dec
add
or
push
popf
dec
and
out
outsb
add
out
mov
jo
xchg
mov
ljmp
dec
dec
inc
roll
jmp
ss
add
push
xchg
push
das
mov
cmp
adc
inc
sbb
addb
out
inc
aas
jmp
into
mov
clc
call
cmpsl
leave
repz
jne
jmp
push
fndisi(8087
xor
xor
jo
mov
dec
lahf
pop
daa
jmp
inc
cmp
push
adc
inc
cmp
pop
daa
jmp
mov
jp
push
cmpl
or
insb
bound
ljmp
cmp
fcmovnbe
rorl
movaps
jne
pop
add
push
iret
mov
pop
movsl
and
sarb
mov
out
mov
mov
cmp
cli
cli
outsl
nop
mov
cs
les
mov
enter
and
mov
inc
orl
in
sbb
push
leave
adc
bound
jge
pop
sub
jg
fidivrl
loop
push
push
push
ficoms
pop
jne
fsubrs
loop
sarb
inc
dec
cld
out
insb
pop
add
add
cmc
aad
sbb
and
xor
jg
or
stos
fdivrl
in
mov
out
icebp
jp
movsl
sbb
push
icebp
scas
jo
xor
xchg
mov
in
push
scas
std
xchg
movsl
fnsave
mov
add
ss
dec
fadds
pop
push
aaa
faddp
push
adc
xor
mov
out
or
sub
jge
fwait
adc
xchg
jno
jb
pop
in
adc
inc
push
pop
hlt
andb
or
loope
ljmp
push
ljmp
cs
push
insb
xor
fsubs
mov
sub
lds
xlat
cmp
jb
mov
and
cmpsb
pop
push
test
out
xor
sti
xlat
xchg
in
loopew,pt
lret
sub
enter
popf
out
daa
or
mov
or
into
fwait
xor
push
icebp
lods
mov
xlat
in
push
push
xor
cli
sar
andb
roll
mov
hlt
shl
mov
out
xchg
and
rorb
scas
stc
or
sahf
stos
dec
outsb
jecxz
fistps
inc
int3
and
add
adc
jl
in
dec
xchg
jo
addr16
push
mov
loop
pusha
test
adc
mov
jle
and
pop
ja
ficompl
int
insb
pop
pop
ret
pushf
mov
dec
dec
push
inc
mov
or
dec
add
test
adcl
sub
test
ds
inc
add
sbb
push
mov
dec
add
xor
pop
push
xor
std
sbb
push
push
lods
add
push
pop
jns
lea
cmpsl
jmp
pop
mov
jb
outsl
jnp
loop
push
dec
loopne
cmp
shll
call
outsb
jecxz
push
test
outsb
mov
mov
scas
dec
xlat
xchg
das
pop
repz
test
push
cmp
lahf
mov
inc
mov
lds
inc
mov
sbbl
or
push
sub
cmp
adc
andb
push
xchg
orb
adc
lcall
pop
das
int
es
es
popa
push
mov
mov
sub
imul
inc
daa
ljmp
add
ja
pop
test
push
pop
mov
xchg
jo
jb
pop
xchg
out
cmp
insb
dec
std
push
or
xchg
xor
cmp
faddp
rolb
out
jnp
jne
inc
arpl
mov
mov
lea
jnp
adc
sbb
daa
popa
mov
mov
adc
inc
scas
jge
pop
sarw
lret
in
push
out
xor
je
add
daa
inc
sub
ds
push
idivl
loop
cld
push
popf
and
mov
repnz
lcall
pop
sub
cs
jno
jns
push
xor
xor
add
imul
cltd
mov
repz
fsubs
insl
inc
loope
fs
cli
sub
scas
mov
xor
scas
insb
jecxz
and
fisubrs
sbb
mov
in
pop
xor
scas
sahf
or
fadd
mov
in
jns
jmp
mov
cmc
xchg
adc
call
xor
test
pop
mov
push
dec
and
adc
cmp
and
jb
jp
pop
cwtl
mov
jo
imul
mov
cmp
hlt
xor
xchg
xor
mov
push
push
pop
jmp
xor
mov
jbe
push
inc
sahf
adc
aas
imul
pop
ss
decl
jg
pusha
stos
insb
leave
insl
and
aam
jnp
mov
mov
cmp
jle
int3
mov
mov
or
mov
xchg
sbb
dec
mov
push
movsl
int
xor
or
jle
inc
sub
in
pop
stc
sub
daa
push
test
push
xchg
xor
int3
sub
xor
xor
xchg
mov
dec
scas
jnp
inc
vpsubd
daa
push
hlt
stos
pop
xchg
mov
jb
dec
mov
dec
and
rolb
stos
inc
movsl
movsl
loop
jmp
pop
mov
testb
xchg
mov
clc
out
jns
mov
inc
mov
nop
xor
jb
sub
mov
loope
ljmp
jecxz
xorb
ret
xchg
push
cmp
scas
popf
lds
and
movsl
dec
bound
mov
stos
mov
ret
jne
aad
hlt
and
adcl
xchg
jp
mov
mov
orl
repnz
mov
lret
ficompl
add
hlt
repnz
js
push
scas
imul
xor
mov
popf
imul
inc
and
scas
adc
push
hlt
iret
inc
adc
sbb
test
mov
mov
adc
dec
xchg
in
lea
add
mov
in
push
mov
in
mov
aaa
cmp
or
aaa
aam
xchg
iret
fbld
dec
dec
jmp
inc
dec
pop
xchg
loope
pop
xchg
out
jecxz
pop
push
pop
inc
clc
add
push
adc
out
pushf
xor
dec
adc
gs
fwait
aad
or
sub
ret
enter
in
push
ret
inc
or
cmp
pushf
pop
dec
gs
xchg
xlat
jp
cmp
and
inc
cli
sbb
rcll
and
push
inc
jecxz
lods
and
adc
add
pop
xor
cmpsl
mov
cltd
or
inc
ret
cmp
mov
sahf
leave
js
dec
scas
dec
icebp
push
and
mov
xchg
xchg
mov
jle,pt
inc
jmp
inc
hlt
enter
test
hlt
mov
call
mov
ss
jmp
loope
pop
xchg
inc
sbb
sbb
mov
es
add
cmpsb
mov
es
div
call
sub
out
out
adc
icebp
shlb
rcrb
pushf
je
cmpsl
ret
cld
call
adc
pop
insb
or
push
adc
inc
leave
js
jle
sub
jl
lret
test
mov
mov
out
js
push
push
rcrl
adc
xchg
arpl
lods
push
cld
js
pop
fidivl
mov
into
imulb
out
mov
mov
lods
inc
in
xchg
inc
loop
outsb
jno
pop
xlat
mov
and
mov
fidivrs
cs
pushl
into
sbb
jns
clc
mov
fildl
sbb
aas
ficoms
jnp
cmp
mov
cld
andl
adc
adc
dec
push
mov
add
lds
jne
xchg
outsb
stc
cmc
and
lret
and
sahf
int3
jbe
roll
repnz
insl
andl
add
mov
sub
lods
ljmp
negl
movsb
fucomp
aas
jae
xchg
xorl
jl
iret
lcall
mov
bound
lret
fadd
sbb
sub
lcall
mov
scas
mov
xor
lds
mov
push
leave
push
mov
sbb
int3
or
sti
scas
out
repnz
sti
cmc
inc
lods
ret
sbb
std
lret
pop
ljmp
js
pop
jns
jp
jmp
inc
push
popa
rcl
std
in
outsb
hlt
pop
flds
jecxz
shll
rclb
mov
xchg
fldl
jmp
jne
test
adc
jge
test
inc
rorb
adc
in
orl
sub
iret
mov
jp
js
lods
push
sub
cmp
xchg
repnz
dec
push
adc
mov
pop
xor
aas
or
push
dec
aaa
jl
subb
int3
imul
ja
ficompl
push
xchg
mov
stos
push
cltd
out
xchg
xchg
xor
popa
in
test
mov
cmp
mulb
imul
cmp
jns
sahf
sub
imul
std
ss
mov
icebp
xor
lcall
lds
in
ja
xchg
outsb
jl
mov
pop
mov
mov
int
lock
xor
fwait
cmc
mov
push
dec
xchg
mov
cmp
pop
test
pop
push
push
cmc
pop
js
mov
mov
mov
imul
cmp
sub
in
loop
xchg
mov
and
xor
stc
sbb
and
rorl
bound
leave
inc
lock
fwait
mov
adc
out
and
pop
mov
push
or
arpl
sbbb
push
jno
in
enter
mov
xchg
cld
ljmp
arpl
or
std
fdivr
ret
inc
bound
lahf
jmp
ss
and
loopne
aas
dec
cwtl
xchg
inc
js
es
inc
nop
popf
leave
icebp
stos
push
data16
sub
or
mov
inc
dec
loope
mov
and
and
sub
mov
loope
vpsubq
std
inc
mov
out
aam
bound
sbb
push
lds
dec
cmpsl
fildll
fiadds
mov
add
pop
addr16
pusha
shll
sub
int
add
rcll
push
mov
das
pop
mov
push
fimull
and
ss
daa
cmpb
and
jmp
call
xor
out
xor
fwait
mov
daa
cltd
push
xor
popf
or
sbb
lret
int
adc
in
sub
xor
pop
sub
stos
dec
dec
bound
int
lahf
jmp
loopne
pop
xor
subl
stos
adc
int
notl
cmp
iret
dec
pop
mov
xor
fwait
xchg
clc
fs
jo
ss
sti
stos
std
loopne
inc
mov
test
clc
clts
imul
lea
push
arpl
jne
mov
inc
adcl
stos
or
xlat
cld
xchg
cltd
shlb
mov
pop
shll
ja
or
test
das
popf
add
fstl
ja
ljmp
and
jl
mov
jp,pt
repnz
xlat
or
adc
jae
je
insl
pop
orb
dec
inc
sbb
and
dec
mov
push
xchg
adc
and
aas
push
push
mov
sahf
stc
mov
data16
adc
and
jg
or
adc
mov
xor
fcoms
cli
and
xor
sahf
in
shr
mov
jns,pt
sbb
std
out
xor
iret
xchg
cmpsl
iret
mov
call
sub
add
add
pop
mov
xorb
sub
sub
sub
imul
fcomps
mov
cmp
sub
loop
or
and
fisubl
pop
loope
mov
out
jg
ja
mov
fildll
or
jo
xchg
mov
sbb
rorb
sbb
push
mov
xchg
testb
xor
cmp
call
add
pop
in
jbe
dec
adc
cmp
ror
lods
adc
pop
jb
cltd
add
mov
and
mov
dec
pop
jmp
xor
mov
jl
test
aad
lods
cs
jecxz
ret
cs
jmp
js
aam
and
adc
ja
lods
ret
lret
inc
dec
into
jge
into
and
aad
mov
cmp
jmp
mov
test
adc
cmp
mov
dec
mov
scas
dec
sbb
scas
cld
inc
xchg
pop
mov
fmull
sbb
push
push
jmp
ja
mov
sahf
mov
mov
push
pop
dec
sbb
sar
nop
and
mov
test
cmpsb
iret
icebp
stc
xor
je
mov
in
cmp
and
mov
arpl
xor
lahf
dec
fldt
pop
int3
rcrb
lahf
xchg
cmpsb
pop
fbstp
ja
in
lods
insb
and
pop
adc
insb
lcall
ljmp
and
cld
jge
scas
mov
outsb
or
mov
mov
sbb
je
jo
dec
xchg
shlb
js
fwait
jge
jle
mov
add
les
jne
aad
sbb
imul
int
xlat
faddl
addl
out
mov
and
int
or
aaa
add
mov
in
js
adc
sbbb
ja
divb
dec
adc
sbb
out
addr16
out
mov
shll
ss
pop
and
mov
mov
pop
sbb
and
pop
sbb
lea
fiadds
push
sub
xlat
inc
pop
push
push
mov
iret
mov
pop
push
mov
sbb
jb
sbb
cmp
cmp
mov
test
or
mov
pop
loopne
mov
lods
and
jp
je
fwait
mov
sub
inc
xchg
xchg
aam
jecxz
xchg
outsl
jns
addb
mov
icebp
jmp
jle
lea
repz
push
xor
xor
xchg
out
cld
idiv
jns
iret
test
js
mov
movsb
sar
fwait
push
push
stc
or
popf
push
cmp
pop
cs
xchg
inc
shlb
or
aam
lea
test
mov
inc
jb
adc
ret
mov
jg
adc
and
mov
mov
addl
pusha
adc
movsb
or
add
fucomp
testl
mov
adc
pop
sbb
mov
mov
push
scas
jbe
and
ds
out
mov
mov
imul
stc
popf
test
adcl
and
sbb
pop
sub
xorb
dec
call
dec
push
adc
enter
inc
rorl
pop
insl
jae
xchg
mov
stc
popa
pop
jbe
mov
mov
and
mov
imul
xor
dec
fcomps
aam
mov
lock
push
add
adc
lock
scas
pop
iret
dec
mov
push
push
and
sbb
fiadds
enter
bound
rcll
fildl
mov
dec
cmp
inc
popf
inc
push
dec
and
cmp
xor
stc
int
shl
mov
out
xor
pop
or
enter
cmp
fwait
aad
xchg
mov
adc
jecxz
repz
xor
mov
scas
jge
pusha
jge
popf
out
mov
fiaddl
shlb
sbb
lret
or
in
sub
loop
std
xor
dec
and
jp
ffree
cmp
rol
cmp
stos
add
mov
mov
adc
insb
and
cltd
xchg
sbb
xor
mov
jp
insl
les
cmpb
xchg
addr16
push
hlt
dec
mov
int3
dec
jnp
das
pop
out
mov
and
adc
movsb
mov
cmc
push
pusha
data16
nop
mov
fnsave
jb
cmp
jae
ljmp
cmc
insb
xchg
call
inc
adc
cmp
push
dec
mov
jae
inc
cli
ja
dec
out
pop
mov
jmp
es
xchg
pop
cmp
sbb
jne
sub
xor
repnz
jmp
mulb
mov
sahf
clc
or
ss
push
sbb
scas
sub
imulb
push
pushf
cmp
insl
jge
mov
jno
loope
jbe
mov
pop
inc
jl
jno
inc
movb
xchg
lret
ret
mov
das
adc
push
push
push
loopne
push
mov
stc
pop
out
fs
iret
ds
lods
jnp
ficomps
mov
test
add
cmp
push
mov
icebp
mov
pop
pop
out
jno
dec
mov
sub
sarb
loop
xor
adc
aaa
outsl
test
lods
stos
push
adc
test
test
push
sti
movsb
mov
js
and
jns
ret
lcall
arpl
sub
std
dec
cmp
adc
std
jne
cld
mov
adc
mov
adc
push
in
pusha
mov
cmp
inc
mov
cmp
inc
ljmp
mov
fnstsw
aaa
bound
js
sahf
lods
sbb
adc
xchg
sub
ljmp
cld
xchg
loop,pn
jb
out
adc
rolb
mov
pop
xor
js
or
ja
push
inc
push
and
adc
test
in
adc
loope
push
dec
jne
push
mov
or
mov
jb
sub
jg
test
mov
pop
push
xchg
pop
and
cmp
xor
testb
mov
inc
flds
shlb
jmp
mov
leave
shll
pop
jecxz
and
cli
imul
xlat
shlb
dec
and
scas
pop
mov
mov
lcall
dec
mov
insb
jns
mov
addl
fsubl
mov
jge
and
das
arpl
mov
mov
enter
dec
dec
mov
addr16
adc
fdiv
dec
insl
ret
fdivl
or
xchg
mov
mov
jne
cmp
aam
js
sbb
lock
sti
pop
into
scas
orb
jne
xchg
das
add
sbb
das
loop
loope
aas
shll
pop
xchg
push
hlt
and
cld
push
mov
pop
dec
ret
xor
scas
sbb
cmp
xchg
or
hlt
into
test
stc
lea
sti
cltd
jae
lcall
add
ret
iret
fisubs
in
sarl
and
je
movsl
cmp
je
lds
in
add
sarl
ret
pop
lods
addr16
push
stos
xor
inc
repz
sub
inc
jle
or
mov
sbb
out
inc
pop
imul
mov
jno
push
shl
rcll
test
adc
mov
mov
ljmp
and
lret
sbb
xchg
cmpsl
psubusb
pop
jge,pn
shlb
dec
sub
pop
ror
lahf
fisttpl
fdivl
sbb
jb
push
dec
xor
bound
bound
jle
call
mov
inc
es
repnz
pop
adc
push
pop
call
add
jo
fwait
sub
js
xchg
push
mov
mov
pop
bound
mov
inc
ljmp
xchg
nop
jecxz
and
or
rcrl
pop
lahf
pop
stc
stc
sbb
push
xchg
bswap
daa
rcrb
outsb
andb
repnz
test
dec
popl
jae
outsl
sti
cmpsl
in
rol
jl
pop
movsl
cld
or
mov
jne
inc
cmp
pushf
mov
sub
xor
insl
and
orb
sub
ds
or
mov
jno
dec
mov
movsl
add
mov
clc
sub
or
ret
push
xchg
filds
sub
xor
pop
addr16
es
adc
gs
nop
xor
xchg
inc
stc
xor
or
jnp
push
fucomip
xchg
push
xor
push
fldt
mov
pop
inc
push
add
adc
sbb
push
pop
and
pop
cmp
pop
sub
int3
dec
icebp
sbb
aad
out
lea
push
mov
pusha
add
or
mov
inc
lds
dec
stos
addr16
jbe
mov
cwtl
popa
sbb
inc
enter
test
mov
add
test
and
mov
and
sbb
addl
test
fs
xchg
andl
pop
and
add
imul
xchg
arpl
lret
mov
aam
mov
mov
out
pop
inc
or
mov
test
cmp
sbb
push
out
push
sub
pop
jmp
adc
cmc
xchg
sub
adc
js
sbb
and
and
loop
or
insb
pop
lods
in
lock
cmpsb
mov
sub
or
sbb
mov
dec
aas
pmovmskb
sub
pop
pop
pusha
and
xor
sbb
xor
lret
pusha
pop
xchg
cli
inc
xchg
iret
inc
dec
out
pop
dec
das
lock
das
outsl
roll
cmp
sbbb
inc
divl
xchg
pop
push
dec
add
sub
adc
cltd
subl
inc
xchg
popf
xchg
xlat
inc
and
lds
bound
in
dec
inc
pop
or
cmp
pop
dec
and
mov
dec
cli
push
xor
mov
lods
push
adc
add
mov
stc
scas
fstp
pop
add
dec
or
into
sbb
loopne
inc
gs
sti
sbb
or
mov
mov
cmp
jae
in
xlat
fldenv
cmpsl
pop
clc
daa
call
movsl
out
mov
adc
lahf
pop
rcrl
inc
sub
jp
js
dec
xchg
lret
and
std
imul
adc
insb
jg
sub
push
and
gs
std
xor
out
pop
rcrb
mov
or
out
movsl
jge
mov
int3
outsb
push
pushf
pop
gs
out
mov
adc
fstl
ret
or
jl
daa
mov
or
movsb
or
insb
test
xor
mov
popf
popf
fnstsw
dec
dec
lods
popa
mov
out
mov
in
pop
shrl
cmp
into
aaa
mov
jno
ja
popf
jae
cmp
push
lcall
add
sahf
pop
jg
popf
mov
push
jg
in
cli
mov
jp
adc
and
or
outsb
sbb
arpl
xchg
add
daa
sub
pop
aas
in
mull
andl
test
ret
inc
mov
cwtl
sbb
sub
add
sbb
cmp
fwait
aad
pop
jne
icebp
out
gs
pop
inc
es
inc
cld
add
sub
inc
in
pop
int3
jo
adc
inc
push
mov
mov
insb
loope
sub
xor
outsb
push
push
sbb
mov
int3
xchg
lods
lret
lods
pop
sbb
add
pop
pushf
test
in
xchg
lods
mov
out
mov
inc
dec
aam
cli
daa
enter
arpl
and
sub
jge
push
mov
fwait
adc
addr16
jno
stos
movb
insb
fisubs
jne
jno
repnz
inc
lods
stos
sbb
enter
pop
sub
cmpsb
mov
loop
repz
xor
rclb
cld
fcoms
cmp
mov
out
pop
cmp
sub
out
ja
mov
insl
ja
cmp
lea
aaa
mov
divb
adc
fprem1
inc
sbb
ja
lods
mov
sbb
pop
pop
rol
ret
aaa
fisubs
mov
or
movsb
mov
shr
rol
and
pop
mov
rcr
xchg
dec
or
lods
mov
cld
in
daa
movsb
fidivs
sbb
push
adc
push
popa
mov
dec
lahf
jge
fsubl
push
mov
mov
loop
xchg
lret
and
mov
dec
and
pop
jmp
jbe
cmpsl
rol
sbb
test
sub
arpl
lock
outsb
adc
orl
mov
pop
mov
lock
gs
addl
lods
cmp
jnp
add
cmpsb
push
fsubp
incl
push
into
in
mov
lret
scas
mov
mov
inc
in
lods
stos
ficoml
pop
in
mov
xlat
sbb
dec
push
mov
push
sub
aad
rorb
testl
jle
gs
pop
lods
les
jmp
rorb
cmp
cmc
pop
fmuls
lret
mov
push
adc
movsb
fwait
loopne
dec
js
mov
xchg
jecxz
in
in
arpl
or
add
pop
iret
add
and
popf
add
add
leave
and
xchg
nop
sbb
addr16
test
mov
lods
stos
push
fimull
cmp
jne
mov
scas
add
hlt
cmp
mov
mov
rolb
hlt
pop
push
push
jne
ret
inc
gs
mov
jl
cmp
mov
ret
sti
jge
das
lcall
iret
add
xchg
mov
leave
popa
push
repz
mov
aaa
aam
das
stos
mov
rcrl
cltd
mov
test
push
mull
sbb
lods
movsb
lcall
xlat
sbb
hlt
fcoml
dec
or
jns
sbb
movzwl
mov
sbb
xor
cwtl
mov
aam
in
incl
pop
rcll
sbb
xchg
push
dec
push
repnz
gs
pop
cmp
icebp
stc
push
ds
pop
xor
fs
inc
shlb
cltd
ret
xor
mov
popf
mov
pop
add
test
and
fwait
and
bound
out
dec
dec
std
or
push
mov
cs
mov
add
stos
xchg
xchg
lds
jl
mov
sbb
xor
movsb
or
clc
gs
add
jno
sti
enter
outsl
xchg
or
and
xchg
out
shlw
iret
adc
fs
dec
enter
movsb
jno
cmp
fcompl
lret
add
adc
out
fwait
std
hlt
mov
mov
data16
mov
push
or
mov
sti
nop
daa
xchg
mov
xchg
or
outsb
bound
push
fs
and
mov
adc
jmp
pusha
bound
pop
repnz
jge
nop
in
movb
inc
push
int3
adc
sbb
sub
push
or
in
sbb
call
cmp
xor
imul
mov
aad
jle
loop
iret
or
jae
aaa
mov
inc
pop
lds
xchg
addr16
aas
call
pop
lcall
add
faddl
pop
filds
and
pushf
push
dec
adc
sbb
dec
mov
pop
rol
aaa
push
mov
fwait
sub
lahf
xor
sub
inc
and
pushf
sti
push
lods
sub
add
test
mov
cmp
call
aas
push
mov
cltd
lret
mov
fdivs
adcl
aas
mov
js
inc
and
xchg
loop
pop
popa
inc
inc
and
or
inc
test
pop
jns
inc
int3
jbe
es
add
push
lds
stos
push
das
adc
push
mov
lret
mov
jmp
roll
and
dec
neg
dec
in
xchg
xchg
xchg
xchg
cmp
mov
add
xchg
rolb
jns
xor
inc
movsb
and
jmp
push
and
out
inc
mov
xlat
orl
or
mov
lret
xchg
cs
pop
pop
mov
jle
fisubl
mov
or
push
inc
sbb
xor
ja
xchg
pop
cwtl
cld
pop
dec
mov
adc
js
ljmp
jns
and
sbb
out
cmpl
jmp
fstps
cmc
push
cmpsl
xor
insb
add
outsl
push
inc
rorb
mov
rol
lock
mov
push
mov
push
mov
pop
jbe
and
insb
pushf
add
pop
je
es
dec
push
pop
xlat
push
and
out
or
gs
pop
jmp
add
cltd
jg
lock
cli
loop
cmc
aad
cmpsb
ficompl
cld
lock
sub
ficoml
jg
push
mov
add
or
jnp
int
mov
inc
push
mov
sahf
inc
mov
pop
xor
test
add
adc
std
mov
fldt
mov
sub
mov
and
cwtl
enter
push
loope
cmp
adc
aaa
sub
mov
mov
mov
pop
rorb
sbb
out
fldcw
sub
lds
jne
mov
cmc
in
decl
outsl
mov
xchg
xor
popa
adc
mov
pushf
adc
loop
xchg
pushl
sbb
lock
sbb
cmpsb
push
jbe
dec
nop
popa
ja
std
xchg
dec
notl
fisttpll
jno
loope
icebp
push
pop
cmp
ret
je
nop
jmp
ljmp
out
add
xchg
xchg
pop
adcb
loope
sti
faddl
rorl
pusha
mov
loopne
cmp
push
xchg
sbb
in
adc
ja
aas
dec
or
adc
int
push
stos
jle
dec
std
add
sarl
pop
shll
dec
jmp
mull
rolb
adc
fs
pop
sbb
or
jns
out
jg
mov
daa
xchg
bound
shll
int3
fisttps
jnp
aas
adc
push
ficompl
loope
into
sub
int3
mov
adc
adc
lahf
mov
mov
lock
mov
adc
mov
repnz
aam
cmp
fbstp
or
mov
pop
out
push
fistl
push
inc
lods
mov
outsb
pop
sbb
stos
sbb
outsb
scas
rcrl
int
aas
push
push
orb
ss
sub
cmp
xchg
repnz
sahf
adc
cmp
movsb
in
int
aad
testb
test
sub
out
adc
push
xor
popa
inc
in
jg
jmp
test
and
xchg
sti
inc
jo
adc
popf
repz
push
loop
loop
and
mov
xchg
mov
sarl
inc
adc
xchg
or
lods
jl
jns
jnp
jno
test
inc
in
adc
push
jb
jge
xlat
fildl
div
insb
repnz
jno
adc
push
jno
push
cs
or
or
and
jl
cli
mov
xchg
dec
leave
daa
data16
and
inc
outsl
add
shlb
mov
mov
lea
in
daa
cmpsl
jg
xor
mov
insl
repnz
jp
scas
aas
mov
jle
call
xor
xchg
add
clc
push
cmp
leave
scas
sbb
xor
sarl
cmp
xchg
andl
inc
mov
adc
mov
rcrl
cld
sub
cmp
les
fwait
inc
lock
aas
outsb
iret
insl
aas
pushf
inc
mov
fiaddl
xchg
dec
mov
dec
out
das
lock
push
ja
cmp
and
lret
push
gs
jnp
bound
and
sahf
or
pop
mov
cld
sbb
cs
jo
stos
enter
adc
inc
add
ljmp
sub
out
mov
test
mov
dec
pop
fcmovb
lret
cli
dec
out
push
imul
stos
pop
out
xchg
cmp
dec
nop
inc
mov
sbbl
jb
pop
xor
int
es
stos
inc
ss
out
leave
in
stc
mov
pop
js
movb
cltd
aad
add
pop
mov
pop
pop
jmp
pop
add
xchg
das
int
out
push
mov
mov
jbe
xor
adc
cmp
mov
in
leave
mov
xchg
wbinvd
adc
mov
xchg
jmp
ja
or
cld
int
jl
mov
dec
xchg
jns
gs
loopne
movsl
sub
fstl
mov
mov
popa
jmp
cmp
mov
inc
cmp
inc
push
mov
xchg
lods
mov
and
push
aam
mov
xchg
push
out
mov
in
mov
fiaddl
fs
xor
in
cwtl
scas
int3
sti
cmpsl
jo
pop
inc
cmpsl
pop
xor
xor
sub
inc
cld
insb
test
scas
pusha
mov
mov
cmpb
mov
mov
push
jg
cwtl
cmpsl
test
addr16
lea
push
dec
push
push
inc
sbb
adc
and
jg
pop
out
icebp
dec
pushf
cmp
cmp
out
outsl
dec
xchg
cli
gs
push
or
jae
mov
andb
rorb
sub
jmp
lods
cli
lods
subb
jno
fists
aad
ror
sub
repnz
xor
aas
jl
sbb
in
mov
adc
sti
xor
sahf
and
into
xor
add
fdivs
mov
or
adc
mov
test
add
inc
shlb
outsb
and
dec
cmp
jp
xor
sub
push
cmp
ret
inc
pop
push
adc
xor
hlt
add
fistps
mov
orb
pushl
hlt
pop
je
stc
lret
xchg
and
sti
push
push
xchg
inc
imul
pop
cmp
fnstenv
rclb
xchg
addb
mov
adc
add
cwtl
stos
dec
mov
shrb
sarl
ja
add
stos
mov
add
jmp
out
mov
jg
cmp
pop
rcr
cmp
mov
inc
add
push
or
jb
jmp
ds
outsb
adc
subb
mov
cld
jo
push
or
xchg
cltd
shlb
add
or
pop
out
test
sarl
and
sub
into
roll
xchg
or
repnz
insb
and
shll
lock
sbb
sub
gs
xchg
adc
fimull
add
jae
mov
outsb
rcr
add
push
mov
add
cs
stc
xor
jmp
xor
imul
sar
out
mov
or
pop
call
imul
aaa
stos
rorl
faddl
jae
popf
dec
jmp
popa
pop
std
push
xchg
data16
xor
in
insb
lds
jnp
iret
cmp
popf
jge
and
xor
lcall
or
cld
lret
enter
imul
or
addr16
mov
loop
sub
pop
pop
test
mov
xchg
and
imul
jns
pop
push
sub
cmp
pop
adcb
xor
push
push
test
cli
push
mov
rcll
jae
insb
jmp
out
test
pop
call
push
fcomps
sbb
lret
mov
je
fcomip
mov
mov
fisttpl
jmp
stc
movsl
sub
sub
jp
outsb
dec
sahf
sbb
sub
push
repz
rcrb
inc
sarl
push
add
mov
cmc
dec
jmp
in
pop
popa
repnz
mov
inc
fs
pop
fwait
pusha
xor
mov
jge
ljmp
pop
ds
aas
icebp
mov
inc
mov
hlt
sbb
dec
popf
stos
jmp
sub
or
sbb
adc
andb
mov
mov
push
push
xor
jno
iret
adc
test
cmp
cmp
mov
or
mov
sub
int
mov
jno
cmp
xchg
and
stos
arpl
lcall
int3
imul
ds
arpl
shll
lods
mov
add
adc
sub
push
adc
test
xchg
das
mov
ss
sbb
lock
xor
jae
mov
jl
out
pop
aad
subl
cmc
jbe
scas
int
or
push
mov
sbb
dec
dec
mov
cld
arpl
fcoml
test
jmp
mov
cmp
xchg
jecxz
bnd
mov
xor
dec
cmp
xchg
scas
fidivl
mov
inc
mov
or
sbb
scas
nop
mov
and
push
roll
cmp
jae
dec
jmp
add
insb
jb
std
jp
pop
cmp
ja
jo
jp
stos
mov
dec
push
adc
cmpsl
imul
xchg
cmp
call
xor
xlat
jg
lock
in
adc
xchg
add
push
int
inc
xor
lea
es
test
sbb
cltd
jae
inc
dec
sbb
fstp
mov
jbe
xchg
ljmp
dec
fdivrs
cmp
xorl
xchg
fistps
mov
call
aam
pop
or
repnz
test
add
jbe
push
outsb
imul
add
sar
in
loope
and
loop
xor
fwait
mov
hlt
mov
mov
hlt
mov
xchg
inc
jne
and
xor
mov
pusha
test
inc
xchg
or
mov
rorl
xchg
or
pop
jo
popf
push
inc
pusha
pop
add
push
mov
in
mov
push
push
sbb
dec
mov
inc
pop
stos
insl
inc
mov
mov
and
filds
ficoms
les
jbe
js
mov
xor
enter
jnp
fistps
xchg
fstpt
repz
mov
cmpsb
cld
pushf
in
xchg
or
adc
fwait
ja
out
sub
clc
adc
mov
mov
jg
inc
rclb
sbb
cmpsb
push
out
sub
lods
lock
insb
sbb
aam
xor
lods
ja
push
lahf
sub
loop
sub
cmp
or
dec
sbb
push
inc
mov
test
pop
sbb
cmp
sub
leave
mov
in
insb
cmp
scas
pop
mov
cs
mov
xor
inc
push
mov
roll
mov
std
in
in
push
imul
adc
and
pop
aas
jp
xor
rcll
jo
insb
cld
mov
arpl
jmp
push
sbb
in
pop
lret
fdivrl
fldt
cmp
push
mov
or
xor
mov
popf
into
orb
xchg
js
out
mov
dec
xor
cmpsb
lret
and
daa
shl
addr16
pop
adc
cmovae
pushf
jnp
push
mov
mov
inc
sub
sub
sub
dec
pop
shll
jmp
sub
xchg
imul
jne
and
fsubrs
push
arpl
nop
out
test
lea
stos
xor
dec
inc
or
mov
nop
lret
xlat
jmp
in
mov
mov
mov
ss
xchg
add
int
hlt
xchg
push
cli
inc
add
sbb
jae
or
stc
cmp
push
dec
add
xlat
stc
mov
add
push
ja
sbb
jl
shr
roll
pop
xchg
xchg
jbe
sbb
je
xchg
jbe
fsubl
imul
stc
push
mov
mov
ljmp
clc
in
sub
lcall
in
xor
int3
mov
push
and
mov
inc
pop
pop
pop
fcmove
pop
pop
pusha
aam
mov
das
mov
pop
in
stos
fs
sbbb
ss
fildl
push
sti
cld
and
bnd
int
cmp
stc
out
jp
adc
shl
aad
cwtl
sbb
dec
mov
mov
mov
jle
mov
icebp
cwtl
inc
jge
mulb
xchg
mov
inc
xor
mov
imul
pusha
hlt
mov
test
call
pop
iret
and
rolb
push
icebp
fistl
stc
dec
xlat
enter
ja
and
inc
pop
data16
mov
shll
push
xchg
mov
repnz
test
pop
mov
stos
jmp
lcall
sahf
jle
int
lcall
sahf
push
xor
movsl
lods
imul
and
add
sahf
mov
mov
push
mov
cmp
pop
jno
mov
cltd
sahf
jo
pop
mov
mov
orb
adc
or
arpl
jmp
or
movswl
push
fwait
jno
scas
mov
inc
popa
call
inc
push
cmc
xor
popf
pop
pop
sahf
repnz
aas
in
pop
sbb
dec
fstl
pop
push
out
cmp
push
test
imul
adc
push
stos
push
pop
lock
push
xchg
les
push
ret
decl
sbb
jns
cld
sub
adc
mov
mov
fiaddl
lcall
dec
lret
shlb
and
cmc
ss
fs
pop
xor
dec
je
mov
mov
jo
dec
shlb
into
mov
dec
rcr
cmp
psubusw
insb
aam
jb
es
roll
add
data16
mov
ss
mov
dec
cs
out
push
les
push
push
adc
xor
lea
in
call
xchg
xlat
in
pop
and
jb
push
fdivrl
in
or
adc
pxor
lret
adc
lea
fwait
adc
ds
adc
push
sub
add
xorb
mov
pop
hlt
lea
sub
mov
pop
cli
test
clc
jo
roll
sbb
mov
in
pop
mov
add
push
leave
pop
jp
push
cmp
mov
jnp
and
ss
xor
lret
sub
imul
pop
sbb
add
outsl
sub
out
in
and
pop
lds
push
jb
jg
add
lock
cltd
xor
enter
int
jns
roll
jo
mov
jl
or
cmp
clc
pop
or
movsb
into
mov
xchg
xor
mov
cmpsl
dec
add
adc
es
xchg
std
inc
scas
shrl
dec
out
fildll
idiv
inc
out
push
stos
dec
arpl
cmpsl
mov
inc
pop
arpl
xlat
lea
cld
push
ficoml
push
shrb
sbb
mov
bound
loop
mov
repz
rclb
and
sub
push
mov
lret
jg
rclb
xchg
pop
or
filds
jmp
clc
pop
push
gs
scas
sbb
adc
ret
dec
loope
xchg
push
cs
pushf
rorl
filds
cli
mov
xchg
scas
sbb
aad
xchg
pushl
mov
cmp
xlat
repz
add
imul
and
push
test
iret
sbb
pop
mov
mov
mov
mov
cmp
adc
mov
test
inc
sub
std
out
nop
mov
icebp
std
mov
push
aam
cltd
mov
sar
mov
cmp
in
sbb
push
pop
aaa
outsb
test
push
push
xor
jecxz
inc
test
rolb
xchg
mov
cmpsb
fwait
jg
fnstenv
pop
mov
test
mov
sahf
jge
cmp
lea
js
cmp
fwait
shl
inc
xor
clc
outsb
xchg
inc
jno
decl
inc
push
int3
mov
jae
sbb
pop
lds
fdiv
pop
cmp
cmp
rolb
xor
sub
push
repnz
push
or
or
iret
js
mov
mov
pop
lds
adcl
je
insl
xchg
cmp
in
test
xchg
fnstenv
cld
xchg
clc
push
daa
xchg
incb
iret
mov
aaa
lret
add
fsubs
jge
sbb
test
pop
cld
xor
lret
push
test
add
lock
cmp
scas
mov
jmp
jl
mov
stos
sarb
xchg
in
ljmp
inc
xchg
inc
cmp
stc
xchg
cld
xchg
in
pop
shll
out
cwtl
pcmpeqb
cmc
dec
popa
in
lods
iret
jg
mov
aam
xor
enter
cmp
loopne
adc
scas
out
inc
mov
cmpsl
clc
pop
xor
mov
and
je
adc
ljmp
or
mov
addb
adc
inc
jle
sarl
push
xor
inc
and
mov
sar
and
pop
jns
iret
pop
fsub
or
das
push
jge
push
outsl
aas
push
rcll
cmc
push
sbbl
sbb
adc
adc
or
mov
xchg
ficompl
inc
sbbb
add
xchg
std
test
sub
dec
cs
mov
cwtl
sub
mov
mov
mov
test
gs
sub
mov
imul
ds
xchg
jecxz
rol
into
sahf
cmpsl
sbb
cmpsl
lret
or
ret
adc
xor
jge
mov
mov
shlb
out
jle
addr16
popa
sub
data16
mov
xlat
sub
sti
mov
sbb
mov
outsb
jg
into
push
inc
clc
cmc
das
add
mov
repnz
iret
jbe
pusha
mov
dec
je
jg
int
and
fldcw
pop
fiaddl
pop
and
dec
ret
mov
or
jae
loopne
pop
xor
or
hlt
pop
sub
ror
std
mov
pop
xlat
sbbb
adc
ljmp
sub
stos
sub
bound
test
mov
test
pop
add
lods
pushf
cltd
test
lods
mov
inc
icebp
inc
inc
fmuls
in
inc
ret
inc
es
decl
dec
aad
mov
dec
in
lahf
andb
daa
sbb
and
fwait
mov
jo
les
and
mov
flds
pop
push
test
leave
imul
fs
push
xor
mov
inc
or
enter
in
notl
out
addr16
sub
adc
jmp
or
add
or
cwtl
add
test
mov
imul
aas
push
aam
andb
push
sub
test
xchg
movsl
mov
xchg
fs
pop
inc
jecxz
test
xchg
in
stos
out
mov
data16
dec
or
loope
shrb
cmpsl
push
cmp
jl
and
dec
pop
addl
sahf
mov
mov
ror
jle
iret
push
daa
ss
mov
push
xchg
sub
push
jmp
xchg
int3
dec
js
push
add
ja
sub
mov
xchg
cmpsb
mov
sti
sbb
mov
loopne
dec
inc
cmovnp
loopne
sbb
push
cli
dec
divb
push
pusha
stos
imul
mov
in
add
imul
mov
jg
cld
mov
dec
mov
adc
cmpsl
mov
cmp
mov
cmp
push
dec
lods
jbe
cld
add
sbb
xor
add
sbb
shll
ficomps
imul
mov
mov
jae
push
cmp
dec
lock
lock
xor
insb
cwtl
imul
lea
xor
mov
xlat
mov
test
enter
jmp
in
fcoms
ja
das
nop
imul
cmc
push
push
rcrl
pop
pop
pop
sahf
js
andl
jg
pop
fsubrs
leave
fldz
arpl
daa
in
mov
add
push
lea
insl
fnstenv
sbb
out
mul
iret
xor
ljmp
inc
push
push
nop
pop
adc
shrl
notl
fdivrs
in
mov
mov
insb
mov
xchg
loop
lods
jno
sbb
in
repz
xor
hlt
ljmp
sbb
hlt
aad
lea
in
and
cmpsb
std
xor
jl
inc
and
inc
pop
mov
fstps
push
ds
fstpt
fdivrl
mov
mov
mov
aam
mov
shlb
add
loop
push
mov
jnp
mov
movsb
mov
or
dec
adc
fmuls
out
mov
or
dec
sbb
daa
sti
sbb
dec
or
mov
mov
xchg
mov
imul
int
scas
jb
loop
mov
out
aaa
sarl
mov
mov
aaa
jecxz
push
loop
pusha
inc
fimull
sub
mov
jg
add
mov
mov
stos
xchg
addr16
pop
out
icebp
dec
shrl
push
dec
sti
fbstp
cmc
inc
push
mov
imul
xor
lock
faddl
jbe
sti
lds
and
push
pop
sbb
lret
dec
inc
addr16
imulb
in
add
leave
pop
mov
pop
pop
xor
cmp
cmp
fldt
adcb
jle
jp
out
cltd
pop
test
or
loope,pn
mov
sahf
adc
mov
and
cmp
mov
rcrl
das
jne
xchg
int
xchg
into
jecxz
sbb
aas
sub
and
enter
lcall
or
push
leave
fcomps
pop
fidivl
mov
sbb
fsubrs
nop
in
into
rclb
sub
lahf
sub
pusha
or
lds
fmuls
pop
xlat
in
add
mov
sbb
fisubrl
lahf
out
repnz
mov
cltd
xorb
fbld
hlt
sbb
mov
pop
and
push
incb
push
sbb
xchg
pop
cwtl
arpl
fucomi
data16
mov
sahf
push
dec
cmp
mov
or
in
repnz
leave
cwtl
int3
dec
aas
movsb
adc
mov
repz
insb
xchg
mov
sbb
in
lods
scas
push
sbb
pop
mov
sub
andl
push
sbb
pusha
flds
sbb
lock
arpl
adc
xchg
fcmovbe
xorl
pop
xor
jp
movsl
lods
les
ror
mov
sti
outsl
aaa
nop
add
push
add
cld
mov
pushf
leave
fdivl
sbbb
out
inc
xor
mov
mov
mov
out
sub
push
js
out
mov
test
out
fsubs
jno
imul
cmp
xchg
cmp
sbbb
or
ss
mov
cmc
mov
outsl
mov
into
mov
roll
dec
shll
out
sub
daa
sub
leave
and
mov
add
jb
aaa
insb
ljmp
xor
mov
pop
cmp
mov
in
xchg
sbb
add
sub
insb
dec
cmp
cmpsb
out
or
stc
testl
cmc
jne
fwait
sub
repz
cmpsl
push
push
or
and
pop
cmp
sub
dec
pop
cmp
inc
dec
in
push
jg
push
lret
sbb
repz
cmp
jne
xchg
mov
dec
and
inc
leave
inc
cmpb
push
cld
cmp
pop
aad
xor
lods
cmp
pop
jbe
aaa
out
mov
push
and
or
jbe
sub
xor
cmp
mov
js
jp
int
mov
xchg
fdivrs
cltd
sti
dec
lods
sub
adc
push
or
push
adcl
pop
fmuls
imul
jmp
or
and
push
lods
stos
jmp
rcrl
or
in
cmpsb
js
loopne
fcompl
minps
incl
xlat
cmp
jle
ret
mov
xor
sub
cmpsl
jge
movsl
popa
in
cld
or
push
loopne
jecxz
xor
loop
lret
adc
and
jecxz
testl
jb
lea
loopne
iret
mov
inc
push
ljmp
call
mov
insl
daa
inc
jae
cmp
or
out
fwait
in
dec
pop
aaa
repz
and
out
jmp
jne
popa
mov
push
cmp
jno
adc
sub
insl
add
jo
cmp
test
mov
imul
aad
xor
rcll
test
dec
ja
sbb
pop
mov
pop
movsb
and
cmp
ret
add
dec
and
add
je
outsb
sahf
cmpsb
cld
fs
insl
jno
jno
test
icebp
lods
xchg
inc
fcmovnu
xor
add
aam
sahf
test
mov
mov
popa
popa
mov
test
shll
aad
or
je
pop
mov
dec
bound
sahf
arpl
imul
in
mov
jns
mov
cmpsb
push
outsb
xor
fldcw
scas
xlat
mov
stos
aam
adcl
add
inc
cmp
stc
into
in
cmpsb
pop
add
jbe
inc
in
mov
sub
sub
out
inc
lods
push
scas
jge
je
xchg
jno
lock
jae
out
pop
adc
mov
jecxz
cmp
jne
movsb
jbe
les
scas
cld
push
xchg
adc
aad
mov
cltd
add
add
mov
push
xchg
out
mov
loope
ljmp
xchg
push
jge
sbb
dec
add
out
imul
and
int
test
shrl
pushf
jl
ret
jne
cmp
mov
enter
xchg
jbe
hlt
mov
insl
outsl
add
jle
mov
jnp
pop
jo
imul
das
mov
sbb
mov
popa
xchg
pop
cltd
clc
in
imul
sub
leave
sub
sub
push
cs
fsts
repnz
iret
rclb
stos
pop
inc
aam
cmp
pop
pop
adc
pop
movl
std
std
mov
in
xchg
leave
je
or
pop
pop
jns
shll
out
pusha
std
orb
mov
pop
sub
pop
sbb
push
mov
xor
outsb
stc
mov
cmpsl
repnz
jecxz
adc
push
dec
adc
cmpsb
cmp
push
out
mov
jae
ds
add
pop
dec
out
cli
testl
lahf
clc
push
cmp
mov
in
pushf
rolb
cli
xor
jno
imul
sbb
lods
and
mov
push
or
lods
sub
out
rcrl
icebp
fdivr
sub
inc
shl
lret
push
aas
jno
mov
mov
and
rcl
add
mov
ja
stos
xor
and
scas
dec
scas
push
lret
scas
test
inc
sub
stos
mov
jg
sub
je
pop
and
dec
pop
mov
jns
fldcw
mov
ret
push
addr16
jnp
outsl
add
mov
shlb
pop
push
andl
fcoms
pushf
pop
xor
push
push
in
sahf
sub
imul
mov
ss
sbb
icebp
js
pop
cmp
inc
scas
or
inc
inc
cmp
insb
in
and
mov
push
xchg
subb
xlat
cmp
cmp
insl
lock
mov
mov
mov
mov
push
test
dec
enter
fwait
mov
jp
popf
lahf
and
adc
inc
inc
adc
sbb
mov
ds
test
adcl
into
pop
mov
push
xor
sahf
sbb
scas
jnp
test
inc
inc
pushl
fcmovnu
xor
pop
cmp
and
out
cmp
dec
xchg
inc
jno
leave
icebp
popa
jmp
cmp
mov
lcall
or
pop
test
and
jb
rclb
and
pop
jb
xchg
inc
les
andl
dec
xor
mov
shrl
mov
add
inc
outsb
mov
pop
jmp
movsl
jnp
mov
push
imul
shlb
ret
jle
inc
mov
xor
nop
pop
push
xchg
cld
aas
pslld
xor
mov
addb
pop
lahf
and
pop
lds
sahf
out
inc
fisubrs
push
gs
jl
push
mov
jbe
ret
test
je
shll
mov
and
cld
insb
cmp
adc
cmp
aad
ret
stos
std
mov
mov
cwtl
mov
pop
mov
repnz
into
ficomps
pop
aas
jbe,pt
mov
and
xchg
dec
xor
push
push
bound
fstpt
xchg
sbb
xchg
cmp
or
movl
xor
popf
stos
mov
repz
inc
hlt
in
or
aas
fwait
mov
mov
in
push
push
popa
adc
test
pop
xchg
mov
insl
add
js
inc
pop
daa
int
cmp
add
adc
insb
or
pop
sub
pop
xchg
cld
mov
ret
jmp
cmpsl
push
inc
lock
push
mov
ljmp
repnz
popf
pop
jle
fucomi
jnp
mov
lret
jge
addb
jo,pt
push
and
adc
or
mov
push
imul
clc
stc
mov
mov
loopne
jb
xchg
jno
dec
movsb
sbb
adc
xchg
jns
push
gs
pop
data16
ror
dec
or
cltd
jl
in
xor
push
iret
cs
xor
hlt
pop
xor
fabs
add
adc
out
lahf
fldenv
sbb
scas
in
lds
mov
repz
cli
xor
push
inc
push
mov
data16
andb
sub
pop
sub
cmpb
cmp
out
cmp
insl
sub
fmull
nop
je
jl
pop
adc
and
popa
jnp
mov
bound
inc
lret
sti
sbb
shrb
iret
popf
das
outsl
nop
inc
je
sub
arpl
lods
shrl
mov
mov
insl
mov
jmp
inc
cmp
pop
stos
in
pop
and
rorl
sbb
jecxz
or
pop
pop
repz
add
imul
jb
fwait
jl
pop
sub
daa
push
xchg
cmp
pop
dec
insl
adc
mov
inc
dec
jns
push
std
xchg
xchg
movsb
jg
test
add
out
adcb
std
sbb
inc
es
inc
rolb
outsl
push
data16
incl
mov
fcmovnb
jge
mov
es
cmp
loopne
mov
aas
or
xchg
rol
aas
xlat
mov
int
in
adc
sbb
sbb
out
pop
dec
scas
repz
pop
inc
iret
mov
cmpl
adc
or
pop
or
aas
push
mov
add
mov
out
bound
or
or
insb
ret
mov
sub
jge
sti
or
mov
sarl
and
mov
adc
mov
sbb
int
dec
or
adc
adc
cmp
xor
daa
xchg
int
leave
push
inc
sbb
mov
or
mov
or
fxch
cmp
add
jecxz
inc
mov
cmp
fnstenv
ret
sbb
fdivr
xchg
jnp
loope
mov
incb
jg
arpl
cmp
mov
mov
imul
imul
loop
sbb
arpl
shll
push
fadds
cmp
test
daa
jl
ret
stos
add
and
cs
xorl
mov
inc
xchg
pop
lahf
jmp
pushf
filds
ret
push
cli
popa
xchg
lret
fiadds
ret
test
mov
scas
fs
ss
mov
sub
mov
mov
xchg
jecxz
hlt
fsubl
movsb
push
pusha
ret
les
les
sub
addl
sbb
add
les
sbb
sbb
int3
lea
push
xchg
test
es
ret
or
iret
fstl
jnp
push
stos
xor
push
xchg
cmp
mov
movsb
inc
cmp
cli
lahf
out
repnz
jns
ss
ret
xor
fwait
incb
sahf
add
or
lock
pop
mov
ljmp
xlat
lods
ret
dec
adc
and
jle
stc
adc
je
push
loop
cmp
subb
rcrb
adc
movups
out
mov
insl
addps
jo
jns
dec
aad
and
push
cmpsl
mov
aas
std
jbe
sub
popa
cmp
sahf
cs
jg
or
push
push
aam
push
loope
mov
or
jle
xor
outsl
sub
jle
adcb
jle
mov
and
test
dec
dec
mull
aas
mov
inc
mov
dec
mov
sub
rcrl
popa
xchg
push
in
mov
mov
pop
jae
es
call
stos
imul
sahf
movsl
into
rcrb
cmp
out
pop
and
push
jle
jmp
push
out
fdivr
and
mov
mov
stos
adc
dec
sub
cmp
xchg
and
cmc
xor
adcb
mov
scas
jbe
cmp
orb
in
mov
fsubl
clc
arpl
add
push
jle
pop
ficoms
jno
inc
stos
sbb
inc
pop
jecxz
repz
fwait
push
jb
roll
mov
mov
lock
pop
mov
ljmp
add
adc
push
mov
sub
shrl
outsl
cmp
fst
lea
dec
cmp
out
add
sub
ds
aaa
jmp
push
pop
pusha
mov
jbe
sub
fldenv
std
outsl
mov
mov
mov
adc
mov
add
orb
xchg
int3
dec
test
push
fidivrs
into
fadds
push
jbe
xchg
add
inc
jno
mov
mov
mov
sub
js
sahf
cmp
popl
lds
dec
sbb
fistps
test
mov
movl
or
sbb
add
mov
pop
sbb
dec
js
movsb
int3
jb
lods
xor
std
jge
push
inc
mov
push
or
xor
ret
push
out
mov
ror
and
add
flds
jp
dec
pop
lcall
ret
idivl
cwtl
aas
es
add
dec
sbb
loop
xchg
imul
xor
sbb
and
ljmp
dec
mov
loop
push
in
lret
in
fidivrs
sti
xorl
cmp
in
je
stos
inc
das
popa
lods
xchg
or
or
sub
add
adc
xor
pop
insl
mov
cmp
xor
adc
jmp
or
stos
popf
loopne
clc
je
adc
push
sbb
xor
pusha
cltd
sbb
jecxz
mov
lods
jno
imul
push
inc
sbbb
out
fildll
aam
fs
and
push
scas
fcmovne
jge
jne
mov
int3
lds
in
mov
popf
sbb
stos
stos
adc
inc
mov
call
mov
xchg
xchg
add
sub
mov
cmpb
das
xor
jae
and
sar
insb
push
mov
and
cs
or
inc
mov
add
scas
int3
mov
in
loop
xor
add
mov
jl
fidivrl
aas
fcomi
cmp
and
xor
inc
xchg
lret
pop
sti
pop
in
mov
ljmp
jns
stos
dec
cmpsb
out
pop
bound
dec
prefetch
and
and
cli
xchg
cmpsb
divb
push
cs
leave
andb
ja
pusha
fisubrs
adc
mov
jecxz,pt
push
xchg
outsb
mov
shlb
es
push
out
lds
mov
icebp
into
scas
or
imul
push
sbb
iret
mov
and
das
cwtl
test
aaa
sbb
sub
insl
cltd
pop
lds
add
out
mov
or
nop
aas
mov
sbbl
jmp
and
aad
mov
popf
jge
mov
ds
scas
push
in
add
fisttpl
arpl
adc
ja
cmp
pop
stos
adc
insl
push
pop
ret
or
bound
push
adc
sub
sbb
arpl
inc
add
sbb
lea
mov
push
popf
sbb
popf
testb
aaa
daa
xchg
insb
sbb
ret
out
cmpsl
loopne
pop
or
test
andl
ret
data16
andl
stos
or
and
lds
ficoms
xchg
dec
dec
pop
cmp
push
cmpsb
mov
call
mov
clc
or
xchg
pop
testb
movsb
mov
sub
inc
mov
aam
jmp
xchg
inc
pop
sub
lock
out
sbbb
mov
test
and
in
xor
sub
imul
arpl
adc
ds
sub
icebp
cmp
jne
cld
push
movsb
fisttpl
lods
adc
inc
mov
xor
cmp
ljmp
fimull
xor
repnz
inc
mov
iret
and
add
movsb
rorb
das
adcb
cmp
jnp
add
cmp
dec
xchg
sbb
std
out
fidivl
push
fstps
and
out
xor
adc
lea
mov
adc
lea
or
pop
pusha
lcall
jae
incb
bound
sbb
or
fistl
mov
sarl
loope
fildl
ret
xchg
rorl
cmpsb
pop
adc
cli
clc
mov
pop
cmp
and
xlat
dec
add
out
pushf
dec
fs
sbb
mov
and
lods
pop
jmp
xor
rcl
pop
cli
mov
addr16
xor
fdivrp
cmc
add
das
add
jge
xor
push
andl
adc
sub
test
cli
sbb
aaa
inc
jmp
sub
sub
addl
mov
xor
xchg
daa
call
dec
and
movsl
movsl
xor
and
xorl
add
mov
leave
inc
dec
xor
popf
mul
iret
push
int3
out
jae
loopne
jb
and
xor
adc
les
mov
xchg
stc
cmc
sbb
sti
inc
call
pop
dec
mov
popf
jno
in
jno
and
add
mov
mov
das
fnstenv
lea
or
popf
push
jg
or
shll
jle
ja
sub
dec
shrb
jbe
aam
shrb
mov
push
lahf
mov
add
add
pop
scas
lea
ja
mov
push
jne
fsubrl
dec
pop
push
hlt
adc
ds
fmuls
ss
mov
lcall
and
xor
mov
aad
sub
jmp
dec
sbb
xchg
push
clc
xor
inc
test
ret
xchg
sub
sbb
fcompl
cld
pop
stos
fmul
pop
sbb
xor
sub
pop
mov
pop
jle
mov
sbb
cltd
and
das
jae
scas
pop
pop
movsl
gs
fsubrs
loope
std
jae
xchg
or
adc
pop
movsb
push
notb
leave
cmpsl
and
xchg
inc
stos
xlat
leave
or
mov
jecxz
dec
adc
sbbw
fistpl
pop
arpl
hlt
adc
jge
pop
fisttps
leave
jg
sbb
cli
mov
cltd
and
shrb
jmp
in
push
or
rorb
es
repnz
loope
sbb
jl
pop
call
rcll
in
mov
push
mov
cmp
push
cmc
fbstp
lret
int3
inc
cmp
or
fs
push
aad
xchg
test
inc
push
jge
pop
mov
adc
nop
cld
lret
mov
fnstenv
ret
ret
or
xor
add
insl
ret
dec
mov
fcomi
add
inc
mov
xor
inc
pushf
stc
pop
ret
in
test
mov
je
mov
lds
ss
jne
rcrl
int3
iret
sub
or
mov
xorb
inc
test
jo
add
mov
xor
int
aam
inc
cltd
popf
dec
xor
cmovge
xor
shl
mov
jmp
push
mov
cmpsb
stos
addr16
ds
in
fdivrl
lea
or
lds
movsb
aam
popa
pop
xor
jmp
lahf
xchg
pop
push
sub
jnp
and
mov
and
loopne
out
dec
and
and
sub
inc
mov
sub
inc
fadd
mov
fisubrs
dec
xlat
nop
loop
dec
mov
sbb
jne
ds
push
push
add
in
add
aas
or
pop
jmp
test
mov
or
mov
leave
jb
repz
jnp
shrl
shl
jl
pop
mov
xchg
addr16
aas
sarb
pop
jno
and
mov
mov
rcrb
ficoml
xchg
add
sbb
stos
andl
in
enter
loop
xchg
xor
sub
adc
call
cmpsl
fcom
xlat
outsb
push
mov
test
xor
in
jl
lret
mov
scas
scas
xchg
sbb
addr16
cmp
dec
int
dec
mov
inc
lods
test
sbb
dec
cltd
jnp
xor
cmp
dec
pop
test
xor
add
pop
into
xor
dec
scas
cmpsl
cmp
leave
push
inc
mov
stc
fcmovnbe
xchg
sub
jl
pop
je
js
xor
or
pop
mov
xor
jg
and
cmc
jg
out
out
dec
pop
lods
xchg
push
mov
lods
nop
and
push
mov
jnp
xchg
sbb
je
inc
fs
mov
cmp
pop
jecxz
cld
rclb
loope
sahf
lock
fnstcw
in
daa
decl
inc
sbb
inc
in
stc
lock
jb
ret
dec
sbb
mov
imul
or
mov
inc
arpl
in
fsubr
ljmp
xchg
push
add
repnz
pop
fadd
outsb
ret
cmp
mov
mov
pop
fwait
ss
jge
jmp
hlt
sbb
js
add
in
mov
pop
out
or
out
pop
and
loop
cmpsb
js
and
shrl
lahf
mov
ss
hlt
movsb
and
jg
push
mov
and
inc
push
lret
jge
lahf
mov
xchg
ja
mov
fcomi
hlt
in
bnd
insb
sub
in
push
pop
mov
jb
xor
cmp
lock
xchg
mov
leave
ss
shll
jg
scas
cwtl
xor
mov
push
das
in
cld
ret
ds
lock
add
xchg
inc
adc
testb
lods
aad
mov
icebp
lods
nop
mov
iret
fimuls
adc
out
xchg
jnp
push
jmp
sub
and
inc
das
sahf
sahf
dec
scas
jg
sbb
lcall
les
pushf
push
jne
xchg
test
sub
dec
nop
xchg
out
in
test
sahf
fadd
subl
shll
psrlq
lea
outsl
lods
push
mov
rcl
inc
outsb
sbb
bound
fcompl
cld
add
jbe
fcompl
pop
sahf
cli
popf
mov
sub
je
and
jb
adc
in
stos
pusha
bound
pop
jg
ror
sub
adc
in
pusha
sarl
mov
cli
addl
repnz
push
imul
out
fcomps
inc
jo
stc
sub
fcompl
lock
es
inc
fdivl
or
not
push
arpl
cmp
aaa
sbb
sub
sbb
hlt
pop
push
repz
xor
mov
push
sbb
test
jmp
imul
jecxz
imul
xor
int3
leave
sbb
js
jns
cmp
sbb
ret
movsl
out
cs
popa
mov
daa
das
test
mov
fmull
lahf
dec
dec
jne
fcmovnu
mov
dec
dec
sub
ret
jo
pop
jecxz
mov
movsb
rolb
fbstp
divb
pop
add
jle
push
inc
inc
jle
es
jge
lock
adc
xor
inc
negb
in
dec
cmp
movsl
xchg
cli
dec
popf
mov
ljmp
fisubl
bound
mov
iret
gs
add
cmp
insl
inc
sahf
hlt
mov
or
pop
inc
cs
sbb
inc
not
jmp
mov
adc
add
or
divb
mov
inc
rorl
push
movsl
fwait
pop
mov
push
lea
push
sbb
cmpsb
mov
inc
pop
lock
mov
ss
mov
mov
push
testl
add
jne
jo
xor
jecxz
sub
fcompl
sbb
lahf
rclb
adc
fisttpll
fs
or
xor
cmc
add
lock
fcmovu
mov
ja
inc
jo
xchg
jbe
mov
and
loope
xchg
in
ss
ficoml
cmp
mov
lds
sub
hlt
icebp
ja
sbb
aaa
enter
aaa
jmp
ja
cmc
xlat
popa
jae
bound
and
sbb
icebp
ds
cmpsb
cmp
push
dec
repz
aas
pop
xlat
xchg
cltd
fildll
js
sub
pop
leave
jns
sub
xor
add
rcrl
pop
jnp
sub
scas
cmpsb
clc
sub
mov
jno
mov
daa
mov
cmp
fldt
inc
xchg
mov
pop
std
pop
cli
add
or
pop
sub
mov
shr
or
jle
jmp
xor
pop
movsl
ljmp
fs
push
in
xchg
in
pop
push
sub
sahf
scas
insl
out
fwait
or
sub
clc
sub
push
icebp
xchg
mov
lret
mov
fnstenv
or
xchg
xchg
hlt
xchg
je
mov
sti
adc
fistps
std
ficomps
test
sbb
or
jne
test
push
pop
notl
sahf
cli
ds
fldt
fbld
pop
jne
in
dec
mov
and
iret
fcoms
scas
or
xor
pop
pushl
sbb
pop
push
lods
xchg
frstor
icebp
inc
sbb
sti
mov
out
xor
cmc
push
or
fwait
in
mov
fwait
sti
ss
or
mov
jge
or
lret
ret
cmp
stc
or
mov
into
ss
arpl
insb
loopne
hlt
aad
jl
subb
mov
xor
fsubrl
sti
dec
outsl
pushw
dec
mov
rol
push
adc
or
loop
mov
cmp
scas
pushf
sub
add
mov
icebp
mov
mov
leave
xchg
jle
sbb
stc
push
inc
insl
insl
mov
cld
popf
inc
testl
outsb
mov
pop
jecxz
js
push
in
inc
mov
iret
popa
out
lods
mov
push
pop
and
xchg
adc
pop
iret
hlt
fistl
or
ret
and
xchg
loope
and
jns
ret
ror
rcrb
dec
sbb
xor
popf
jmp
or
mov
mov
fsts
or
out
cmpsl
pop
xchg
push
stc
jecxz
and
loop
pop
aad
pop
movsl
cld
mov
and
jne
sbb
lcall
cmpsl
mov
std
loop
dec
xchg
jg
cmp
fistpll
roll
cmp
mov
mov
shrl
lret
jnp
mov
xchg
xchg
cmp
divb
arpl
mov
jle
xor
gs
pop
add
dec
xchg
or
dec
aam
lods
push
je
out
dec
add
movsb
nop
mov
dec
sub
je
cmp
push
pop
cmp
push
jns
pop
fcmovu
push
jb
inc
insb
cmc
pop
dec
cwtl
push
icebp
addb
and
mov
sbb
xorl
scas
test
jle
pop
push
dec
jae
dec
sub
loop
lahf
xor
fbstp
jae
push
sub
aad
adc
movsl
sbb
add
jbe
clc
and
jno
add
mov
sbb
enter
sub
pusha
add
dec
lahf
and
jp
icebp
push
inc
dec
ljmp
mov
sub
mov
popa
sub
cli
xor
int
xchg
adc
mov
imul
das
loop
ret
ss
std
mov
subb
das
lods
je
push
lock
fcomip
lds
loop
mov
inc
mov
lds
pop
fisubs
fiaddl
scas
scas
out
and
mov
fcomps
inc
inc
jl
insb
sbb
lods
xor
mov
cwtl
or
adc
xor
mov
xchg
xchg
jbe
sbb
mov
or
push
icebp
gs
inc
add
enter
sub
jo
leave
push
imul
or
pop
outsl
sbb
cmp
outsb
lock
adc
fiaddl
and
push
mov
dec
push
out
sbb
out
flds
dec
xchg
stos
mov
in
les
out
inc
sub
rolb
leave
mov
push
pop
xor
roll
xchg
lods
addr16
lahf
fwait
jge
xor
mov
arpl
gs
mov
xchg
jg
hlt
bound
scas
add
pusha
jae
push
mov
jb
sub
iret
iret
xor
dec
out
sub
ret
stc
loopne
xchg
xchg
lds
ret
mov
dec
xchg
mov
mov
and
leave
hlt
inc
into
jns
push
dec
cmp
enter
mov
mov
and
out
dec
lcall
sbb
mov
aad
sbb
push
fdivrl
cmp
mov
xor
inc
es
stc
mov
jp
mov
mov
xchg
jnp
clc
mov
xor
sbb
or
in
gs
add
dec
cmp
out
cwtl
in
mov
and
push
out
mov
int
or
jle
xchg
cmp
fbstp
jb
fwait
dec
cmpsl
sahf
dec
sti
jp
mov
lret
lock
add
ljmp
pushf
and
mov
arpl
insb
cmp
out
pmaxub
push
push
lcall
pushf
sbb
xorl
stc
mov
and
pop
xlat
pusha
test
lret
scas
push
incb
loopne
push
mov
fstpt
rclb
inc
cmp
loop
rorl
mov
sahf
mov
jecxz
xchg
jb
andl
push
insl
cmp
movsl
test
sbb
cld
aas
adcb
xor
cli
xchg
ret
iret
lahf
gs
aas
or
shrl
in
int
lahf
jg
sub
subl
and
dec
sarl
xchg
or
push
mov
mov
out
push
fs
fsts
cmp
mov
pop
jo
pop
jg
xchg
dec
pushl
sbb
xchg
sahf
mov
int
or
push
fildll
enter
ds
lret
sbb
mov
jbe
xor
add
push
pop
push
rorb
dec
out
icebp
ljmp
or
sub
or
dec
popf
mov
mov
add
movsl
mov
mov
push
lret
jbe
inc
out
mov
add
mov
jl
sbb
xlat
inc
jne
arpl
popa
sub
std
aam
cltd
mov
leave
icebp
je
lret
outsl
mov
int3
adc
adc
pop
add
or
in
shrb
pop
jae,pn
and
sbb
out
int3
into
mov
push
shll
loop
jle
mov
pusha
xor
in
imul
lret
xor
mov
lret
data16
enter
and
andl
jae
mov
mov
jecxz
fiaddl
out
sbb
push
outsl
call
std
icebp
fsub
xchg
jo
insl
xor
hlt
out
xchg
inc
loop
sarl
mov
rorb
jle
fldt
stos
xchg
jg
outsl
or
mov
xchg
sti
ja
mov
adc
push
mov
dec
or
or
xlat
mov
cmp
hlt
push
mov
test
lock
xchg
repnz
arpl
push
inc
cmp
sub
les
mov
leave
nop
es
enter
dec
xor
int3
and
sbb
repz
iret
mov
push
mov
mov
jmp
lret
insl
add
and
fs
mov
sbb
fs
iret
scas
mov
shll
mov
cwtl
ficompl
movsb
outsb
loop
jo
ds
sub
or
inc
push
jmp
divb
clc
xchg
in
xor
daa
ljmp
push
xchg
out
sub
orl
add
std
out
repz
sbb
loope
adc
adc
mov
xor
add
pop
jne
xchg
rclb
adc
fldl
jb
lds
xchg
pop
add
mov
pop
gs
add
loopne
pop
test
sbb
aad
ljmp
shl
pop
lcall
stos
xor
cmpl
test
xchg
cld
les
out
cli
and
lret
rclb
lds
xchg
pop
insl
jo
mov
mov
add
out
popa
dec
les
out
bound
popa
xchg
imul
lods
push
adc
jns
mov
mov
jbe
jae
mov
xchg
js
ljmp
js
adc
mov
imul
mov
or
sub
imul
push
pop
xlat
jb
push
jae
cmp
jns
jl
or
adc
clc
xor
fstps
scas
add
jno
mov
mov
lea
cmc
lret
loopne
ret
or
and
popa
imul
lods
sbb
outsl
sahf
scas
cmp
mov
cld
gs
cltd
movzbl
cli
adc
cmp
xchg
or
stos
mov
ds
dec
test
lcall
sbb
jg
jbe
fldt
rcrb
insb
xor
adc
sbb
imul
scas
push
addr16
push
loope
pushf
leave
jae,pn
fwait
sub
ficomps
jnp
fs
loop
arpl
es
stos
pop
jns
pop
dec
test
scas
xchg
xchg
push
push
imul
shrl
sbb
mov
in
orl
mov
ja
je
ljmp
pop
popa
lods
icebp
sbb
dec
or
lock
inc
push
std
test
leave
cmp
addr16
cmc
ljmp
icebp
insb
dec
les
sbb
pop
or
push
lcall
mov
or
or
lahf
jnp
fcoml
adc
lahf
in
mov
lcall
pop
sub
std
or
pop
in
mov
jbe
sub
dec
int
out
jg
cwtl
roll
std
lds
mulb
pop
out
push
mov
jb
or
jmp
enter
ret
jmp
mov
and
ss
lods
mov
loopne
or
push
and
neg
int3
imul
movsb
cltd
mov
out
mov
les
and
xor
dec
sub
hlt
and
jnp
in
mov
cmc
pop
movsl
aad
out
xor
cmc
out
lods
les
jp
cmp
cmp
scas
call
jo
mov
js
lds
sbb
jbe
jne
inc
jge
xchg
lcall
imul
sti
mov
mov
dec
test
inc
in
jno
mov
ljmp
lods
adc
ror
cmp
fs
into
fisubrl
test
dec
xchg
or
mov
aaa
jecxz
pop
or
dec
cli
adc
test
xor
xor
cmp
iret
push
inc
pop
int3
aaa
stos
mov
mov
push
mov
xchg
in
fdivp
pop
je
inc
cmpsb
jnp
sbb
aas
incb
inc
or
imul
xor
xchg
subb
mov
or
or
adc
inc
adc
mov
push
fistpl
imul
mov
aaa
xor
xchg
dec
popa
push
in
push
inc
data16
dec
iret
inc
or
mov
or
addb
lock
dec
sub
cwtl
movsb
std
lret
shl
sbb
xchg
icebp
cmpsl
pop
fnstcw
inc
pop
push
xchg
out
pop
sbb
and
roll
xchg
sbbb
xchg
xorl
mov
or
mov
adc
out
cmp
dec
repnz
add
and
xlat
call
push
jno
xchg
jecxz
test
push
jg
sub
jb
mov
pmulhuw
je
xor
cmp
pop
mov
add
mov
in
push
mov
dec
jnp
mov
ds
aam
fnstenv
jbe
lret
mov
pop
cmpsb
push
mov
adc
and
stos
out
loopne
mov
pop
mov
mov
mov
mov
dec
loop
mov
arpl
pop
jo
mov
outsl
fs
sbb
faddp
mov
fcoml
inc
dec
xor
push
xor
repz
aas
mov
xor
pop
inc
lahf
lods
xchg
jo
cltd
add
jp
nop
sarl
and
packssdw
add
pop
xchg
push
dec
mov
xchg
ljmp
jbe
shlb
pop
cmpl
test
add
test
mov
mov
es
ss
xchg
aam
fsubrs
nop
testb
scas
loop
or
or
mov
cmpsl
push
or
or
jg
push
jne
sti
inc
jmp
jbe
ret
call
enter
ss
shrl
mov
imul
pop
dec
push
push
std
push
lcall
jecxz
faddl
aam
xlat
sbb
sub
dec
divl
jb
xor
or
inc
cmp
pop
scas
push
call
pop
filds
aad
xchg
jnp
sub
mov
into
pop
rol
push
les
ret
and
imul
roll
mov
sarl
cmpsb
outsl
in
out
ret
push
jl
enter
icebp
mov
popa
call
push
mov
pop
cmp
cmp
mov
scas
repz
mov
sbb
dec
jb
jnp
das
lods
jp
call
mov
adc
insl
je
cmp
das
int3
ljmp
pop
jmp
dec
out
jne
pop
shl
mov
push
xchg
inc
fs
adc
and
cmp
stos
dec
sbb
stos
mov
nop
push
mov
mov
xchg
push
call
stc
sub
lock
call
sub
ds
arpl
out
jae
popf
mov
push
ret
out
adc
cmp
push
cmovns
mov
adc
jle
jno
sbb
je
cmpsl
movl
inc
in
scas
sub
inc
lahf
ja
mov
rol
cmpsl
pusha
stos
sbb
mov
popa
push
lret
jbe
pop
cli
xchg
js
lea
mov
push
sahf
pushl
xchg
pop
add
xchg
inc
stos
aad
test
ja
dec
inc
sbb
push
or
fistpl
aaa
sub
push
scas
and
xchg
shrb
popf
movsl
dec
inc
pop
fwait
push
push
mov
je
cmpsl
shlb
jbe
inc
sbb
push
jg
add
xor
and
clc
insl
mov
mov
das
movsb
xchg
cmpsb
cmp
cmp
cmpb
fidivs
jle
flds
ds
inc
loopne
ds
xchg
stos
xchg
ja
sahf
fcompl
scas
sub
lea
test
ret
mov
imul
sbb
jne
outsl
add
pusha
lret
popa
mov
jae
stc
fbld
rcl
data16
xlat
and
movsb
cwtl
sub
inc
cmp
pop
add
jne
ja,pn
inc
aam
adc
js
mov
and
xor
jnp
jbe
ret
test
adc
add
lods
cli
jmp
adc
push
xor
cmpsl
andl
dec
xchg
cli
inc
fisubl
pop
mov
mov
movsl
xor
cld
icebp
in
xor
jb
mov
popa
clc
push
mov
fmull
icebp
xchg
sbb
xlat
out
mov
data16
push
lods
and
pushf
and
movsl
mov
ret
mov
jl
fistpll
fcom
mov
inc
jo
je
rorb
push
sbbl
loopne
pop
dec
adc
mov
mov
testb
ljmp
mov
dec
cs
push
aam
out
xor
add
out
adc
pushf
xlat
int
add
in
mov
adc
sub
test
mov
cmp
in
xchg
jg
push
aam
mov
out
mov
dec
and
in
int3
jle
clc
aaa
sbb
out
inc
cmpsl
outsb
insl
es
sub
jno
roll
ja
pusha
sarb
scas
push
lods
inc
lds
mull
pop
stos
pop
pop
push
pop
sbb
jno
popf
jecxz
aas
jg
je
test
mov
mov
popa
rcl
mov
divl
inc
push
test
mov
adc
sbb
inc
inc
test
in
pop
pop
push
lahf
out
xchg
cmpsl
jge
xorb
fidivl
test
aad
pop
push
xor
dec
pop
jb
out
or
jnp
mov
sub
xor
jns
cmp
movsl
and
xchg
fwait
lods
aam
jmp
out
pop
das
dec
dec
sbb
out
mov
dec
xorl
xchg
mul
cmpsb
cmpb
sarl
jns
lods
inc
or
or
out
aaa
and
negb
fstps
push
mov
cltd
pop
dec
daa
mov
jmp
rcr
and
cmc
popf
fcmovbe
xor
hlt
addr16
out
jmp
adc
push
mov
xchg
inc
daa
jbe
aam
cmp
push
stos
mov
mov
mov
cmp
mov
sub
fidivrl
cmc
pusha
loopne
xchg
popf
sbb
and
and
jbe
cltd
xchg
or
pop
lds
jle
cmpsl
into
and
add
testb
adc
push
outsb
xchg
push
pop
xchg
xor
pusha
adc
test
mov
push
ret
xchg
or
cmp
mov
or
add
and
adc
cld
rorb
sbb
aam
and
fstl
popa
out
fisubrl
mov
and
push
add
push
cmp
or
shll
cld
cmpb
lock
adc
mov
notb
mov
std
xchg
in
add
cltd
and
add
mov
mov
jns
pop
lods
push
sub
pop
lcall
in
ds
mov
outsl
or
test
es
fdivl
test
int3
or
out
je
xchg
push
rclb
pop
arpl
pushw
mov
pusha
in
in
orl
xlat
aad
sarl
mov
inc
iret
call
iret
gs
test
mov
jg
mov
push
repnz
mov
adc
and
fildl
mov
mov
sbb
mov
loope
aad
xor
add
outsl
mov
cmp
out
xchg
inc
bound
add
enter
dec
addb
dec
and
adcb
imul
loope
adcl
or
das
dec
fists
in
push
push
adc
jl
xchg
lea
jp
cmp
ss
divb
jnp
stc
cmpsb
scas
sub
inc
ljmp
mov
dec
mov
inc
cmp
or
mov
cwtl
xor
cli
in
mov
fimull
sbb
xor
test
push
push
push
mov
arpl
mov
or
call
cmp
push
fildl
test
jp
loope
mov
popfw
mov
mov
adc
repnz
out
sahf
cmp
xchg
shl
push
divb
cmc
mov
dec
mov
in
fxch
lea
lahf
xor
aas
sbb
aam
jle
sbb
dec
addb
insl
jns
mov
dec
cwtl
aaa
add
xor
mov
test
xchg
mov
in
nop
loope
dec
jns
and
push
ret
jle
pop
add
movsb
popa
insl
pop
jge
pop
imul
dec
jge
movsl
pop
cld
add
cmp
lcall
ret
jecxz
pop
out
sbb
cltd
and
in
fildll
sbb
xchg
sub
or
dec
and
ret
mov
sub
cli
loop
or
out
popl
mov
jmp
call
outsl
inc
jb
jmp
ret
lret
dec
mov
adc
aas
lcall
out
or
call
movsl
add
mov
push
out
push
mov
mov
dec
int3
sub
popf
add
hlt
into
jp
aad
out
pop
adc
je
mov
lock
xchg
sub
sub
add
sbb
bound
and
mov
aas
and
mov
xchg
push
test
daa
inc
cwtl
in
mov
mov
push
call
lcall
pop
inc
adc
xor
mov
lea
je
lds
hlt
sbb
pop
int
jle
lret
inc
pushf
inc
cmpb
xor
mov
push
aam
out
sbb
gs
mov
data16
inc
adc
xlat
inc
jg
mov
cld
xor
pushf
fcmovnb
jecxz
pop
xchg
and
push
int3
add
les
std
add
insl
bound
cmp
adc
mov
nop
outsb
test
sbb
cmp
ss
sti
cmpsb
push
jno
sbb
movsl
and
xor
rcll
ss
pop
mov
adc
pop
adc
xlat
dec
out
mov
mov
inc
xor
stos
daa
sbb
test
add
or
xor
out
aas
js
mov
jl
ficompl
shll
ds
leave
mov
cwtl
stos
sti
jno
push
pause
jmp
jmp
icebp
cltd
daa
cltd
jo
pop
cmp
sub
mov
mov
lret
and
sub
sub
lock
cmc
sub
inc
les
fdivrl
adc
push
adc
jp
dec
std
loop
sbbl
xor
and
jp
mov
push
adc
mov
out
mov
mov
push
out
inc
lock
pop
loope
inc
cmpsl
jno
icebp
aad
xchg
mov
imul
out
in
jb
xchg
in
adc
jbe
ret
lret
jo
cld
ret
fdivs
cmp
lock
repnz
mov
dec
fs
das
in
addb
push
cmpsb
cwtl
es
pop
inc
out
out
and
sbb
add
and
ret
orl
shlb
pop
xchg
xchg
mov
ljmp
dec
daa
jl
not
outsb
push
out
mov
sbb
stc
xor
shlb
out
and
sub
cltd
add
sbb
test
stos
out
lock
les
clc
inc
fwait
xchg
mov
mov
lock
movsl
aam
shr
inc
mov
mov
in
loope
mov
psubusw
into
push
cmpb
xchg
mov
ds
dec
out
fsub
pop
or
inc
adc
jge
or
iret
sbb
adcb
cmp
cld
or
pop
xchg
ss
cli
clc
pusha
pop
mov
lret
adc
push
pop
sti
pop
mov
stc
pop
push
xchg
and
push
test
lds
dec
pop
movsl
sub
ss
mov
ret
loopne
and
movsl
cmpl
cltd
ljmp
cmc
loope
jmp
dec
out
lock
cmp
mov
sub
mov
outsl
ds
fmuls
cmp
xchg
pop
pop
push
push
adc
sub
je
sub
outsb
or
mov
or
shll
aas
and
rorl
arpl
sub
inc
mov
iret
outsl
js
add
inc
xchg
out
sub
jmp
test
mov
jecxz
mov
enter
stc
stos
cli
mov
xor
cmp
int3
cmpsb
das
imul
ret
inc
sahf
and
pop
xlat
or
clc
jno
js
mov
cltd
and
sub
inc
cmpsl
loop
mov
mov
stos
sub
lret
mov
stos
cmp
and
adc
cld
mov
mov
xchg
std
rcl
cwtl
sarb
std
or
mov
in
movsb
mov
aaa
jae
aaa
or
mov
sarb
int3
and
or
icebp
lods
pop
call
decb
mov
mov
je
push
pop
aaa
in
inc
mov
mov
sub
or
jne
divl
das
push
je
jne
das
and
mov
or
dec
rclb
push
pusha
stos
dec
popa
adc
xchg
jecxz
pushf
sbb
sub
jae
mov
fwait
sbb
inc
adc
cmpsl
cmp
push
pop
inc
sbb
cpuid
or
sbb
fs
rcr
mov
out
pusha
insl
insl
out
inc
cmp
dec
sub
insb
inc
or
push
sbb
inc
rcll
push
or
add
jno
or
idivl
add
out
mov
cltd
imul
repz
cs
mov
add
dec
mov
fisubl
push
xchg
imul
mov
jmp
adc
pop
pop
dec
xor
add
out
pop
dec
mov
xor
les
adc
addl
nop
mov
repnz
xchg
pop
mov
sbbl
pushf
and
sahf
loopne
out
dec
mov
and
sar
out
cmp
into
iret
mov
lods
shrb
cli
xchg
xor
cmc
xchg
lea
add
push
fwait
in
sub
into
int3
fs
vpslldq
pop
xchg
inc
mov
in
pop
and
repz
sahf
test
jle
or
fnsave
sti
adc
aad
andb
inc
add
inc
sbb
movsl
movsb
xchg
call
dec
inc
mov
pop
or
lret
inc
jb
aaa
fbstp
scas
lock
mov
xor
mov
fwait
sarl
rcrl
shl
dec
roll
ret
dec
incb
dec
jmp
divl
ret
scas
push
add
pop
lock
mov
inc
inc
xor
push
xchg
mov
or
jo
inc
popl
mov
sbb
xor
cmovno
pop
ss
gs
jo
cmp
aam
sbb
fistpl
gs
xchg
aam
jae
adc
fdivrl
lret
jno
vmovups
or
ds
xor
stos
and
cmc
mov
push
mov
scas
popa
mov
mov
add
sub
fildll
xchg
jge
dec
xchg
lret
setb
and
ficoms
lock
and
in
test
sub
inc
mov
jnp
sub
inc
in
into
mov
adc
or
cmp
cltd
pop
lea
sbb
push
push
mov
or
and
sti
push
movsb
pop
addr16
int
iret
scas
mov
mov
ficompl
sarb
into
pop
ja
dec
test
mov
ret
jp
jno
testb
aas
adc
pop
push
jno
jmp
and
and
and
in
add
push
mov
stos
fiaddl
test
shl
push
xor
push
push
jp
pop
cmp
scas
mov
dec
ss
ss
add
jo
push
inc
cmp
add
xchg
fbstp
push
aad
pop
sbbb
icebp
push
sbb
mov
icebp
pop
gs
aam
testb
adc
and
and
add
idivb
addr16
jno
faddl
into
dec
loope
leave
mov
ljmp
mov
hlt
push
adc
add
xchg
stos
xor
ja
sbb
jno
lods
pushf
dec
jge
push
bswap
push
popf
sahf
push
inc
pop
mov
add
mov
scas
cmp
aaa
cmp
gs
jo
adcl
sbb
mov
xor
lds
out
sbb
lock
mov
mov
pop
and
add
addr16
jbe
repz
lock
and
fwait
decb
loopne
dec
mov
sbb
test
cmc
clc
pop
sbb
pop
add
sub
or
je
push
daa
leave
imul
pop
mov
sub
mov
push
in
fisubl
ljmp
mov
cld
jle
stos
mov
pop
push
mov
int
addl
fistl
fcmovnb
lret
out
push
pop
pop
fsts
iret
js
or
dec
xchg
pop
aas
cltd
mov
je
rcll
add
add
lret
sbbl
cmpsb
fcoml
mov
mov
mov
add
cmp
mov
ror
jecxz
sub
idivl
es
or
pop
mov
fwait
insb
mov
mov
popa
sub
jl
popa
pop
stc
push
fstpl
xchg
xchg
jbe
mov
fstp
je
sahf
push
pushf
es
mov
fsub
lea
mov
adc
imul
shlb
jp
mov
jmp
mov
adc
clc
dec
fwait
bound
mov
stc
dec
xlat
aas
shlb
and
popa
push
out
jae
mov
add
pushf
mov
mov
dec
in
daa
mov
mov
jmp
adc
das
hlt
in
inc
pop
mull
pop
inc
dec
mov
loopne
adc
xor
add
push
out
cmpsb
adc
jle
xchg
in
jne
xchg
test
jne
jg
jno
dec
fdivrs
push
jae
xor
sbb
add
dec
sub
push
enter
out
lret
sub
fwait
add
hlt
popa
lahf
aad
out
jae
mov
jge
dec
jb
test
push
dec
cmpsb
xchg
js
xor
sbb
cmp
in
xor
and
int
pop
enter
push
pushf
sbb
aam
mov
push
mov
pusha
test
sub
mov
xchg
roll
mov
pop
cli
dec
aam
insb
dec
jo
cmpsl
xchg
jae
ds
les
dec
mov
xor
cmp
adc
xchg
mov
mov
in
mov
pushf
sbb
sub
push
nop
or
push
xchg
add
cld
popa
inc
ljmp
popf
push
cmp
push
subl
movsl
popf
hlt
sub
scas
xchg
cmp
flds
mov
jnp
add
call
rolb
insb
das
add
loop
ja
xor
pop
lret
gs
cmp
push
or
and
jmp
mov
sbb
test
and
das
hlt
in
and
and
adc
mov
ja
jp
dec
inc
iret
mov
sub
sub
and
sbbb
mov
sub
popa
dec
push
push
mov
pop
adc
pop
xor
push
outsl
cwtl
xchg
cmp
inc
fnstsw
sbbb
pop
cld
push
mov
push
or
dec
mov
imul
mov
xchg
mov
sub
iret
push
lods
fincstp
popf
jo
test
pop
xchg
rcrl
jg
jno
sbb
and
in
out
iret
pop
test
adc
je
addr16
bsf
cmp
and
mov
shl
sti
xor
sar
push
sub
cmpsb
fsubrs
sub
xchg
adc
lahf
movsl
jmp
insl
aad
scas
or
lret
xlat
push
lods
gs
es
xlat
popf
xchg
pop
xchg
fdivrl
les
ficoms
inc
sarb
jle
roll
movsb
push
jne
pop
sub
rorb
movsb
and
xchg
push
dec
jns
mov
sub
mov
inc
int3
adcl
jge
cmp
movsb
lahf
dec
dec
icebp
shlb
push
xchg
loop
out
fimuls
aad
dec
sbb
inc
fisttps
out
inc
popf
sbb
pop
subl
lods
data16
xchg
imul
or
jmp
xchg
mov
ja
and
push
xor
dec
push
dec
mov
jle
jle
mov
pop
and
mov
hlt
xor
in
pop
ljmp
jne
mov
mov
dec
out
inc
push
loop
test
cmp
push
or
mov
imul
inc
add
jp
fwait
sub
stos
lret
mov
push
out
xchg
xlat
loope
lock
xor
out
leave
adc
dec
push
loopne
adc
std
das
mov
or
push
cmp
popl
in
cmpsb
hlt
pop
in
aaa
ret
loope
fcmovnbe
or
jno
cld
imul
sub
dec
dec
stc
xor
cmpsb
or
aam
pop
inc
xchg
xchg
jb
sbb
push
and
std
jg
scas
or
inc
stos
mov
sbb
sbb
push
sbb
in
adcb
inc
data16
clc
xchg
les
cld
push
sbb
and
mov
test
dec
jnp
xchg
ret
fs
int3
or
icebp
scas
push
cmpsl
or
push
xor
lods
clc
in
cli
pop
and
out
nop
cmp
jbe
subl
jg
daa
push
jge
or
xchg
xchg
mov
add
sbbl
mov
into
dec
pop
pop
adc
out
push
inc
dec
cmpsb
orb
sbb
scas
out
push
sub
jecxz
lock
jae
inc
cli
adc
cld
ret
aam
shl
in
add
jns
aaa
in
cli
xor
cmp
lds
inc
adc
ljmp
dec
sbb
setge
and
inc
je
push
leave
sysenter
lcall
mov
inc
mov
mov
jl
adc
inc
nop
xchg
jne
xchg
cmovns
dec
in
xor
push
inc
iret
popf
jmp
sbb
popa
lods
inc
imul
mov
mov
or
cmp
dec
into
xchg
and
xor
outsl
daa
pop
bound
lods
lock
mov
in
add
push
adc
dec
sbb
movsb
xor
lea
inc
rol
lahf
inc
xor
jl
adc
push
mov
jle
or
jl
and
pop
stc
xor
mov
out
xlat
dec
cmp
dec
or
jo
lds
pop
das
jbe
fcompl
dec
flds
pop
incb
test
lahf
loope
and
pop
cmp
clc
pop
fmul
or
pop
xchg
sub
add
xchg
pop
loopne
adc
jae
or
test
add
nop
imull
fistps
or
pop
adc
lret
mov
incb
cmp
inc
fiaddl
ds
stos
jo
or
inc
lds
stos
lahf
xor
sti
movsl
pop
sub
in
inc
pop
pop
insb
imulb
jp
in
cltd
addb
dec
popa
fildl
inc
mov
fsubl
pop
add
dec
xor
cmpsl
cli
push
sahf
pop
mov
fstl
jmp
pop
dec
push
jnp
xchg
cld
add
jno
push
push
dec
add
jecxz
mov
loopne
bound
das
sbb
push
adc
mov
push
adc
sub
xchg
pop
sbb
xor
mulb
jo
mov
mov
cmp
insl
aad
sbb
mov
xchg
fs
mov
mov
loop
mov
cltd
ljmp
rcrb
addb
movsb
sbb
pop
pop
cmp
dec
pushf
xchg
dec
dec
mov
loopne
mov
out
test
push
imul
inc
jle
int3
test
outsl
cmc
jae
mov
fisubs
or
push
ds
cmp
inc
push
cwtl
icebp
clc
mov
fisubrl
push
imull
mov
pop
cmp
pop
lahf
mov
ret
fildll
push
sti
loopne
lahf
andb
or
push
imul
aam
mov
lea
movsl
enter
adc
push
popf
shlb
mov
mov
pop
pop
inc
inc
outsb
jmp
packuswb
xor
add
fisubrl
imul
or
mov
add
adc
xchg
mov
bound
aad
shrl
stos
fimuls
dec
jmp
jp
sub
or
sub
mov
mov
in
nop
dec
negb
clc
test
ficompl
shlb
popf
jne
lahf
pop
insl
push
jnp
ficoms
sbb
icebp
sahf
out
push
rol
sub
xadd
push
jns
rorb
push
outsl
ss
sbb
add
fucomp
test
add
jg
orl
cmp
clc
imul
mov
pop
adc
stos
enter
or
test
pop
das
test
jecxz
or
jb
pop
flds
mov
adc
sbb
leave
scas
cmc
mov
fsub
cltd
mov
hlt
mov
dec
cmp
sub
dec
loope
mov
jb
arpl
jge
sbb
push
int3
jge
test
stos
movsl
cmpsb
xor
ja
inc
mov
dec
icebp
loope
or
ficomps
mov
imul
nop
loope
or
xor
pop
xor
pop
repz
lret
jbe
pushf
or
test
sub
popa
jge
fcmovnb
inc
xchg
cmp
pop
or
or
inc
push
dec
xor
cmpsl
sbb
cmp
ds
out
les
andl
cmp
jmp
clc
nop
imul
push
js
stc
sub
jecxz
mov
lods
out
sub
push
cmp
lahf
inc
out
mov
scas
dec
sbb
mov
rolb
jle
add
or
sarl
xor
fstpl
bound
adc
add
jns
out
enter
loop
sub
jae
jmp
xchg
jae
adc
es
sub
bound
jle
xor
mov
cmp
lcall
mov
push
cmpsb
loope
sar
ds
dec
push
mov
jnp
mov
test
xor
rol
add
push
mov
lfs
fcmovnb
sbb
mov
push
adc
push
adc
cmpsb
das
inc
leave
sbb
sub
cli
popf
cmp
xor
sar
pcmpgtb
in
lods
xor
aad
sbb
push
sbb
cmp
dec
inc
mov
fucomp
xorb
shll
pop
lods
fcmovbe
repz
adc
lods
lock
rcll
imul
sbb
and
dec
cmpsl
or
out
push
aam
das
lret
lret
cmp
mov
pop
dec
sti
dec
scas
jp
into
outsl
movsb
ljmp
mov
push
jne
loopne
inc
sti
xchg
test
sub
fistpl
or
int3
xor
cmp
notb
testl
incl
and
mov
scas
in
cmc
fisttpll
packsswb
inc
mov
iret
mov
mov
xchg
mov
fs
sbb
clc
es
stc
out
sti
cli
in
adc
addr16
adc
mov
roll
pop
into
adc
sbb
jle
lahf
push
stos
stc
es
into
dec
sbb
jecxz
mov
xor
fdivs
sbb
out
cmp
xchg
loope
mov
outsl
jg
jo
jne
dec
lret
les
lcall
mov
in
pop
gs
mov
shlb
stos
fildl
add
jp
add
or
fmul
clc
xor
into
dec
imul
andl
inc
cmpsb
popf
adc
lahf
fsubrs
aas
decb
lods
sbbl
insl
and
dec
shll
sub
sub
mov
or
pop
test
popa
inc
add
jno
mov
cmc
outsl
outsl
push
jmp
out
xchg
inc
aaa
or
and
inc
and
ds
sbb
scas
adc
shrb
add
fsubrl
add
adc
stos
mov
push
xlat
sarl
jne
mov
push
lds
aam
pop
aad
lahf
sbb
jb
ret
aas
outsb
dec
xchg
adc
xor
and
dec
ljmp
icebp
cmpsl
fidivrl
fbstp
sbb
lock
out
pop
scas
adc
pusha
decb
iret
sub
es
mov
rorl
call
xchg
int
pop
jl
ret
sub
inc
cmc
mov
mov
iret
sub
mov
mov
push
in
mov
das
mov
ret
sti
pop
or
fwait
push
inc
lcall
adc
mov
inc
mov
lods
test
jbe,pn
sub
xchg
jno
fcmovnu
iret
sti
mul
mov
push
pop
mov
imulb
cmpsb
jnp
add
es
sbb
arpl
xchg
sub
daa
lods
adc
mov
xchg
mov
sub
sarb
popa
and
jb
into
insb
sarb
iret
cmp
das
test
cmpsb
mov
out
cmp
sti
mov
imul
xor
sti
stc
test
int3
repnz
lods
ficomps
xchg
imul
adc
cmp
jge
scas
and
ret
fs
icebp
lods
fidivl
movsl
xchg
sub
adc
repnz
test
repnz
push
sbb
fisubs
and
mov
mov
inc
add
adc
out
jae
mov
cmpsl
jb
cmp
arpl
push
out
in
dec
cwtl
cmp
dec
ljmp
loopne
mov
mov
je
sti
mov
pop
mov
inc
popa
jge
lock
call
adcb
es
inc
les
mov
dec
mov
les
imul
or
int
add
xchg
inc
push
js
out
stc
inc
shlb
mov
outsb
jmp
sarl
mov
ds
cmp
lcall
movsb
inc
mov
imul
sbb
and
imul
cmp
inc
inc
int
inc
mov
pop
adc
inc
push
rorb
jp
scas
inc
xor
pop
lahf
repnz
lods
mov
ljmp
adc
push
sub
or
jg
inc
rol
adc
fcoms
cmc
inc
push
pop
or
xchg
shl
stos
push
push
pushf
sbb
popa
lock
mov
add
iret
pop
pop
frstpm(287
lea
or
push
ja
jecxz
movsl
cmp
imul
pop
jns
scas
pop
cmp
push
pusha
add
adc
mov
insb
dec
dec
mov
sbb
sahf
sbb
scas
jae
mov
jne
inc
dec
je
sbb
add
or
ds
mov
rorb
divb
stos
pop
loop
shll
pop
mov
inc
lds
push
test
jnp
dec
sahf
add
orl
shll
fwait
cmp
push
call
sub
outsl
adc
mov
lret
mov
push
jmp
fcoml
popa
fscale
add
and
pop
jl
jne
iret
inc
test
cmp
sub
jbe
in
push
test
daa
imul
addl
sub
mov
stos
mov
pop
aas
add
out
test
mov
rcr
mov
ja
enter
pop
jo
or
fcoml
dec
push
mov
jle
or
mov
shlb
or
js
mov
jg
jbe
pop
inc
jecxz
add
pusha
neg
cwtl
add
mov
fisubs
xor
sbb
test
or
data16
in
mov
push
shrl
mov
aam
xchg
adc
call
test
out
pop
insl
iret
xchg
or
inc
jecxz
sub
pop
fbld
arpl
sahf
adc
daa
mov
or
and
or
out
mov
pusha
sub
shrl
cmpsb
pop
mov
popf
subl
xchg
sub
aas
cmpsl
jne
and
bound
rcr
push
in
adc
pop
pushf
shll
pop
push
xchg
xchg
repnz
pop
jmp
cmc
enter
andl
add
jmp
and
push
in
xchg
jnp
out
push
enter
xchg
push
mov
adc
fstpl
pop
or
adc
scas
push
rorl
sub
cmpsl
push
std
aaa
adc
test
cli
jno
aam
test
fcompl
aad
and
xor
orb
push
clc
test
dec
sub
xor
jle
mov
popf
push
movsl
push
sbb
cmp
cmp
cmpb
add
cmp
fbstp
rcrl
into
cs
in
out
in
stos
and
xor
lods
repz
cmp
inc
jge
out
pop
mov
shl
xchg
cmp
int
test
adc
jg
mov
popa
or
jg
cmpsl
std
enter
loopne
cmp
xchg
push
jns
push
stos
jbe
jae
in
clc
fwait
xor
sbb
pushf
push
sti
aaa
insb
out
push
loopne
mov
mov
mov
out
test
inc
jp
outsb
jno
sub
xlat
jne,pn
pop
push
xor
mov
lcall
pushf
out
lea
and
add
cld
scas
jge
fst
leave
cwtl
insl
fnsave
mov
pop
adc
fisubl
xchg
mov
inc
add
pop
push
add
inc
dec
bound
test
daa
aad
lcall
and
inc
or
mov
xchg
sub
cmpsl
cmp
scas
andb
cltd
mov
mov
aam
lods
or
adc
jg
mov
fldenv
lcall
mov
sub
std
imul
mov
mov
jecxz
jbe
jnp
and
adc
or
mov
or
addr16
arpl
inc
fndisi(8087
or
test
out
xchg
dec
sub
sahf
js
mov
dec
sbb
insb
inc
jb
xor
idiv
dec
sbb
push
les
push
adc
cld
fnstcw
mov
adc
mov
lret
popf
pushf
cwtl
xor
ss
test
daa
out
sub
push
sub
lcall
mov
aam
loope
in
inc
inc
push
push
or
mov
and
arpl
xchg
cmp
movsb
push
popa
je
or
in
iret
mov
push
lods
xor
and
icebp
daa
rolb
adc
adc
shlb
sub
repz
lds
leave
push
bound
mov
jge
hlt
fwait
notl
fs
cli
inc
mov
movsl
mov
rsm
test
shrl
fisubs
dec
add
mov
and
test
push
shlb
mov
sub
imull
pushf
adc
fidivl
es
sbb
xchg
sub
cmpsl
popf
psubq
pop
jecxz
into
ud1
adc
add
push
fstps
mov
rclb
inc
xlat
xchg
mov
lea
push
xchg
jo
iret
xchg
sbb
data16
mov
es
int
pop
mov
push
and
jmp
fiadds
lock
fcmovb
mov
sbb
push
std
push
fwait
pop
cwtl
insl
popf
add
sbb
dec
ljmp
es
mov
mov
je
and
add
loopne
inc
fsubp
outsb
rorb
sub
in
add
pop
xchg
dec
sub
hlt
jmp
out
je
cld
incl
xchg
scas
sbb
push
add
mov
xlat
or
loope
xchg
leave
jl
shrb
loope
add
test
pop
jge
add
imul
lods
inc
mov
sub
mov
shll
mov
out
adc
cmp
out
das
in
dec
enter
decl
sbb
xor
pop
dec
mov
outsl
insl
lock
int3
movsb
and
pop
push
sub
cmpsl
inc
push
sub
cld
add
scas
add
mov
idivl
out
mov
fdivrs
fnstsw
pop
xor
pop
xlat
push
adc
inc
xchg
push
mov
das
aas
cwtl
cmp
push
cmp
in
mov
fstl
cwtl
sbb
std
mov
icebp
or
std
sub
enter
mov
mov
jb
sub
or
mov
into
in
dec
cmp
movsb
adcl
jbe
scas
in
mov
mov
and
pop
inc
sbb
cs
stc
xor
mov
pop
iret
stos
hlt
aaa
mov
mov
scas
das
iret
out
sbb
add
mov
cltd
rclb
sbb
cmpl
pop
pop
cmp
xor
sbb
mov
iret
mov
addr16
je
lcall
nop
adc
fldenv
pop
or
push
imul
sbb
cmp
in
xor
sub
push
mov
imul
sarl
jae
mov
push
orb
mov
pushf
decl
cmp
outsb
pcmpeqd
icebp
ss
or
mov
shlb
jne
test
add
cli
push
mov
call
pop
adc
shrb
std
ret
into
je
mov
mov
sahf
mov
and
cs
xor
faddl
dec
out
enter
xchg
or
cmpl
imul
das
cs
xchg
mov
add
sbb
aad
xchg
int
cmpsl
cmpb
xchg
dec
xchg
ds
pop
mov
fwait
add
jno
pop
pop
scas
test
stos
icebp
mov
stc
std
outsb
push
sarb
std
out
repz
dec
jnp
adc
lock
jl
icebp
add
addr16
cltd
sbb
test
pop
push
mov
mov
es
xlat
jl
mov
mov
in
pop
xchg
mov
and
or
test
push
adc
jmp
jae
lods
inc
pop
outsb
and
int
aam
loope
mov
mov
sbb
and
enter
sbb
adc
nop
data16
mov
xchg
jp
out
dec
call
mov
les
or
xchg
mov
in
push
push
inc
push
scas
aad
lods
xor
scas
mov
sbb
pusha
lahf
hlt
roll
cs
std
outsb
add
loope
jle
xchg
sub
mov
stos
in
add
lahf
jb
flds
test
xchg
or
mov
movsl
and
jl
dec
jp
pop
lahf
mov
movsl
cmp
add
jmp
and
mov
mov
xchg
sub
lret
adc
cmp
mov
adc
jne
push
insb
and
adc
xchg
jae
fdivrp
inc
xchg
pop
jns
fistpl
push
or
push
testl
sti
adc
inc
lods
inc
jnp
adc
mov
mulps
rorb
xchg
mov
dec
sub
sub
mov
jae
lret
int3
dec
fidivs
imul
adc
je
mov
je
pop
les
call
push
pop
repz
sbb
xchg
and
add
cmp
pop
jae
iret
or
es
es
repz
add
shlb
out
addb
and
filds
jnp
push
and
lods
push
dec
shlb
test
out
jns
in
popa
dec
jp
cwtl
xchg
add
jl
push
dec
int3
pop
push
repz
out
addb
repz
cmp
dec
rcrl
jge
push
imulb
dec
mov
adc
jno
out
cs
push
test
xchg
addr16
andb
and
loopne
aaa
jns
add
je
nop
dec
dec
addr16
jb
xchg
xchg
xchg
out
dec
mov
scas
jo
xchg
call
ds
lea
mov
clc
add
scas
repz
inc
jbe
mov
loop
outsb
mov
xchg
out
and
inc
ljmp
enter
decw
shrl
inc
leave
daa
lret
sub
fwait
fs
xchg
cmp
aaa
andl
dec
mov
sti
loope
ljmp
inc
cmp
or
call
popa
jne
shrl
mov
je
iret
add
addr16
ds
inc
sbb
push
repnz
pusha
inc
mov
dec
test
xchg
mov
insb
mov
cld
mov
popf
loopne
jmp
mov
pop
xchg
out
cltd
sbb
cmpsl
scas
push
or
add
int3
xor
stc
popa
in
test
lret
fstps
and
testb
fnstsw
mov
sbb
jne
adcb
aas
pop
xlat
push
xchg
jp
xchg
add
mov
sub
test
or
dec
pop
mov
pop
out
pop
test
mov
push
rorl
mov
mov
out
or
stos
mov
sub
fwait
loopne
push
xchg
fstps
jno
xchg
sti
mov
je
mov
shrb
cli
sbb
push
pop
das
xlat
sbb
bound
xchg
jg
rorb
stos
aam
add
sbb
call
movsl
cmp
bound
push
int
sbb
or
fucomi
int3
icebp
out
rorl
pushf
int
stos
fbld
add
dec
lods
sub
xor
out
incl
inc
inc
add
test
scas
arpl
or
push
insl
imul
pop
rcll
addr16
aad
cs
daa
cmpb
lods
mov
mov
mov
adc
pop
mov
imul
es
jg
out
dec
scas
mov
outsb
mov
icebp
pop
pushf
mov
jecxz
dec
lds
cli
adc
bound
in
mov
cmpb
hlt
or
into
mov
dec
adc
add
and
jmp
jo
or
adc
dec
ret
sbb
hlt
in
add
cltd
popf
fistps
xlat
sbb
enter
ficompl
lock
dec
ljmp
adc
xchg
sti
mov
int
mov
sbb
mov
pop
cwtl
add
call
mov
out
xor
mov
icebp
fcmovb
cwtl
push
test
cwtl
jp
sub
sub
mov
and
fisubrs
rol
mov
jl
add
jne
sbb
popf
stos
cmpsl
mov
insl
lret
cmp
pop
jo
daa
add
dec
rcll
cmpsb
cmp
add
sub
test
mov
mov
call
int3
dec
cltd
cmp
and
in
mov
out
xchg
add
cmp
addr16
mov
divl
stos
es
and
jp
inc
mov
or
sub
rol
xor
mulb
imul
or
dec
in
dec
pop
out
std
insl
hlt
cmc
in
xchg
inc
outsb
repnz
inc
xor
test
stos
inc
dec
lock
jns
sti
fs
add
fcmovb
jb
or
insl
add
sbb
lret
out
mov
ss
xchg
mov
push
test
loop,pn
push
in
pop
and
test
sub
fst
lahf
int3
je
xor
pushf
xchg
mov
loop
pusha
cmp
hlt
sub
insl
icebp
mov
popa
or
push
leave
iret
test
or
pop
sub
cwtl
jnp
inc
mov
imul
and
das
xor
cmp
sbb
jbe
inc
stos
cwtl
in
lret
mov
pop
lahf
mov
mov
mov
inc
push
das
sarl
neg
lea
xchg
movsl
outsl
out
pop
push
pop
xchg
shll
testl
add
push
iret
push
aas
cmp
mov
out
cmp
sbb
repnz
pop
std
mov
fnstsw
mov
pop
ret
insl
xchg
jp
sub
rorl
sbb
in
aad
jg
rolb
push
or
adc
dec
sbb
or
popa
sahf
push
sti
out
repz
gs
dec
xor
int
cmp
movsb
sbb
fistl
hlt
in
dec
ret
lahf
call
jp
mov
in
fwait
movsb
mov
ljmp
or
stos
fadd
cld
sub
cmp
pop
cmp
dec
in
pop
out
or
or
jae
or
mov
shll
pop
jmp
in
hlt
fs
cmpsb
cmp
call
jno
pusha
ss
cmp
sbb
mov
pop
pop
mov
push
inc
jb
and
xor
add
or
sbb
push
cmp
imul
in
pushf
add
fwait
mov
faddl
sarl
push
jle
pushf
push
jo
sub
lods
pop
adc
mov
sbb
cmp
adc
in
mov
and
test
or
jg
or
bound
or
cmc
cld
cmc
mov
in
xor
add
jl
setb
lret
xor
pop
aas
pop
sub
jns
inc
movsb
mov
push
or
fnstenv
ds
xor
cmp
movsb
sub
addr16
filds
movsb
add
jp
cmp
inc
sahf
and
icebp
outsb
cmpsl
add
cmp
repnz
out
into
popa
addr16
movsl
push
inc
div
ljmp
push
andl
out
cmpneqps
add
push
xchg
nop
dec
xlat
push
and
mov
xchg
test
pop
shlb
xor
bound
push
in
adc
mov
xor
xchg
jae
cmp
aas
and
sbb
mov
insb
lods
sbb
jbe
in
jmp
repnz
in
xchg
lods
fisubrs
fistpl
loop
out
pop
shrb
pop
or
push
cmp
out
arpl
jl
pop
mov
jnp
push
inc
jns
adc
dec
sbb
imul
jb
mov
cmp
ds
inc
cli
int3
addr16
mov
jb
mov
push
lock
fs
dec
in
movsl
lock
cmp
dec
leave
xor
dec
sub
mov
sub
sbb
addb
mov
inc
mov
mov
cwtl
jno
and
fstps
or
sub
and
inc
mov
xchg
push
cmc
push
out
mov
push
ficompl
or
popf
push
out
pushf
jo
jg
rorb
and
push
data16
mov
push
arpl
ds
mov
add
mov
cmp
into
lods
mov
add
push
jle
pop
stos
adc
sarb
dec
sti
lea
cmp
pop
push
testb
dec
xchg
xchg
push
cs
xchg
mov
mov
cmp
push
aaa
mov
mov
fisubrl
mov
jg
in
lahf
inc
mov
or
push
cmp
scas
sbb
shll
lcall
je
pop
lea
mov
fnstsw
sahf
push
ret
pop
loope
sarl
inc
push
aam
push
sbb
adc
lahf
jns
pop
push
pop
jo
test
xchg
sti
xchg
or
push
push
int3
xchg
mov
pop
mov
and
int
fcmovnbe
sub
insl
dec
loop
add
sbb
sahf
aas
sub
enter
stos
inc
lea
rclb
hlt
adc
addr16
ret
push
jecxz
outsb
push
push
out
loopne
mov
insl
clc
pop
and
movsl
add
push
leave
or
mov
shrb
in
enter
stos
jbe
fisubrl
shlb
push
test
add
mov
inc
data16
lds
jne
xchg
mov
push
jle
je
insl
rcll
add
mov
jbe
cld
sub
push
inc
push
and
add
sub
imul
xor
adc
pop
or
pop
sub
mov
dec
push
fdivr
sbb
jl
or
and
dec
sbb
aad
inc
mov
xchg
cmp
add
inc
fcoml
adc
jo
orl
and
mov
jnp
inc
adc
clc
insl
into
push
cmpsb
fdivr
faddp
mov
sbb
cmpl
loop
sbb
add
mov
pushf
pop
aam
je
xor
insb
ror
std
sub
cli
ja
cltd
push
sub
notb
xor
adc
xchg
mov
add
jle
mov
sub
aaa
and
pop
xor
shlb
xor
imul
pop
sbb
jb
pop
gs
adc
pop
in
bound
clc
dec
cs
mov
push
addr16
sub
pushf
cmp
jo
push
cmp
sti
fstpl
shll
push
test
nop
or
push
imull
xor
push
push
push
leave
in
shr
inc
mov
and
push
mov
imul
jbe
cli
xor
or
in
inc
dec
mov
dec
ss
loop
xchg
sbb
imul
mov
dec
js
pop
cmp
mov
mov
jp
pop
test
mov
xor
sub
ja
aam
adc
pop
xabort
mov
sbb
adc
add
cli
xorl
mov
pusha
sbb
xor
mull
fcmovne
xor
push
hlt
stos
pop
pop
push
pop
jl
test
xchg
jns
jg
addr16
rorb
aaa
mov
in
sbb
pop
and
popa
mov
push
unpckhps
push
jg
scas
inc
ljmp
jmp
mov
bound
add
sub
out
daa
jge
in
dec
icebp
mov
das
mov
or
fs
jge
inc
je
push
test
cltd
clc
iret
mov
cmp
sbb
in
in
sub
inc
testl
cmp
adc
inc
jg
ret
sbb
xchg
adc
or
cmp
into
sub
pop
mov
jne
mov
dec
push
inc
mov
add
jmp
nop
mov
mov
jecxz
xor
dec
jecxz
and
jg
pushf
sbb
xchg
hlt
insl
xchg
fildll
xchg
into
push
out
jl
sub
or
stos
and
adc
mov
jno
or
sub
add
aas
adc
cltd
mov
cwtl
and
adc
cld
ret
jnp
adc
repz
and
pop
bound
and
mov
add
stc
int3
and
das
imul
cwtl
cmp
stos
cld
pop
or
adc
out
xchg
iret
add
sbbb
mov
test
xchg
in
lcall
dec
add
arpl
xcrypt-ecb
cmpsl
leave
pop
or
andb
cmpb
je
push
out
das
mov
xlat
mov
mov
inc
insl
xorb
push
mov
cmpsb
mov
jns
sbb
jl
lods
or
pop
mov
xchg
inc
jp
xor
sbb
lds
dec
fwait
push
es
outsl
inc
leave
out
aam
jl
loopne
ret
mov
hlt
add
stos
mov
std
adc
into
or
insb
xchg
es
pop
repz
sti
inc
cmp
scas
xchg
mov
cmp
ja
cmp
inc
sbb
jae
and
daa
subb
int3
in
or
js
gs
stos
aad
adc
xchg
outsl
fldcw
mov
or
repnz
arpl
nop
push
add
hlt
inc
sysexit
sub
add
mov
popa
sbb
gs
pusha
orl
pushf
push
gs
pop
mov
dec
jmp
ljmp
ljmp
std
cs
mov
cmpsl
inc
adc
push
lcall
outsl
bound
daa
ljmp
loope
push
nop
enter
jg
not
shl
outsl
push
pop
xchg
insl
ja
loopne
xor
push
arpl
jae
or
inc
notl
insb
popa
cltd
shr
sti
mov
sub
xor
mov
pop
in
xchg
cmp
push
rcr
add
inc
imul
mov
mov
mov
dec
stc
call
dec
negb
xchg
sahf
das
or
loopne
add
ljmp
xchg
cmp
call
push
sti
cmp
or
cmp
adc
data16
loope
mov
sub
test
push
xor
and
rcl
cmp
dec
shll
loop
or
ds
or
mov
or
popa
ljmp
and
fisubs
fldenv
pop
mov
or
push
pop
sarb
adc
mov
mov
loope
orl
nop
enter
mov
inc
jne
dec
out
mov
cmp
out
mov
xor
pop
inc
clc
ret
push
push
jbe
or
pop
fwait
adc
jge
cmp
loop
aam
pop
in
adcb
dec
lret
sub
ss
fldenv
jmp
xor
inc
sbb
dec
or
mov
lahf
das
mov
ret
movsl
jle
cltd
enter
and
popf
dec
imul
cmpsb
jecxz
lods
cmpsb
xor
cmc
inc
adc
clc
or
lods
and
pop
xorb
arpl
movsl
out
xchg
imul
rclb
scas
mov
sbb
dec
imul
test
jbe
sbb
xchg
iret
push
xor
sbb
and
pop
in
mov
or
loop
in
push
pop
or
stos
add
out
pop
jg
dec
pop
mov
jmp
into
lods
jl
outsl
out
or
push
orb
call
imul
xor
test
jg
shrl
xchg
pop
mov
in
mov
inc
jle
in
mov
mov
std
sbb
popf
ljmp
ds
in
ret
sub
arpl
push
sub
lock
out
pop
lret
jp
loope
lods
and
sbb
pop
fcoms
sub
or
out
mov
or
ja
and
std
enter
test
ds
mov
xor
pop
shll
sbb
or
push
inc
repz
inc
scas
dec
pop
ret
adc
dec
cld
addl
xor
mov
aam
clc
mov
ljmp
dec
cmp
cmp
dec
xor
fnstenv
movsl
hlt
dec
in
cs
adc
push
mov
and
cmp
addr16
sub
pop
cmp
jmp
or
jl
xchg
scas
pop
inc
not
aaa
xchg
out
mov
dec
ja
mov
inc
repnz
xchg
push
das
scas
push
push
ret
pop
push
mov
jmp
mov
jmp
push
cmp
es
mov
and
lahf
js
inc
push
adc
add
sub
ret
sahf
in
mov
sub
insl
adc
inc
lret
sbb
pop
sub
push
into
pop
lahf
mov
mov
fmuls
jb
out
cltd
sbb
shl
sbb
loopne
jecxz
dec
inc
sahf
inc
add
pop
fmull
aas
es
push
std
xchg
iret
stos
insb
lea
imul
sub
xchg
mov
std
test
mov
imul
add
mov
adc
xchg
adc
and
cwtl
es
inc
incb
push
jae
push
rorl
or
and
dec
push
fcomps
arpl
jb
and
dec
push
sbb
fcoms
imul
mov
mov
xlat
int3
push
lret
xchg
gs
jo
add
ja
in
test
insl
dec
scas
out
jge
adc
int3
mov
and
cs
sahf
jno
mov
scas
and
roll
jmp
inc
push
pminub
aam
stos
scas
mov
repnz
ret
outsl
sar
cs
lret
test
mov
shlb
aad
les
sbb
fdivrl
loope
je
mov
xor
loop
inc
repz
lea
imul
jno
cltd
push
push
and
sbb
std
jne
sub
mov
adc
hlt
fidivrs
aam
adc
dec
and
mov
adc
fwait
movsl
mov
inc
in
stos
xlat
mov
les
fisubl
mov
in
gs
lods
int
mov
pop
lcall
push
mov
lods
and
pop
js
push
xchg
out
in
push
jb
lock
pop
ror
fimull
sub
mov
and
imul
dec
mov
pop
push
push
enter
lock
lcallw
int3
mov
int
sub
mov
xchg
pop
dec
jmp
ds
cmp
lea
fldl
add
mov
xchg
popf
outsl
dec
leave
jmp
cs
mov
xor
test
mov
mov
clc
push
mov
lods
fsubl
or
cltd
dec
push
sub
mov
inc
out
inc
adc
and
mov
addl
mov
fsts
mov
pop
adc
movsl
adc
add
imul
movsl
adc
xchg
pop
stos
xlat
pop
leave
adc
int3
adcb
pop
push
push
cld
sbb
ret
sub
jno
sbb
ffree
je
scas
aas
mov
cmp
imul
push
cmpl
inc
pushf
movsb
mov
jb
xchg
movsb
jo
dec
jge
xchg
jae
mov
cmpsl
xor
imul
sbb
mov
mov
pushf
je
inc
mov
int
add
lds
daa
enter
push
dec
repnz
insb
and
cmpl
and
test
lret
cmp
cmp
inc
pusha
aam
or
cld
in
mov
jmp
insb
jbe
pop
mov
outsl
out
jmp
mov
cmpb
mov
std
or
data16
out
mov
flds
and
scas
scas
fldcw
mov
pop
push
xor
add
sbb
mov
sub
icebp
fisubrl
and
das
mov
fs
xor
inc
out
sub
repnz
cmp
push
jae
mov
leave
imul
pop
dec
pop
jp
xor
ja
adc
mov
cs
sub
jbe
addl
sub
stos
push
sub
fisttpll
pop
out
xor
repnz
idivl
mov
add
gs
cmc
push
sub
enter
mov
stos
or
pop
inc
inc
out
loop
xchg
daa
in
xchg
cmp
pop
cmp
js
dec
add
jae
popf
sbb
xor
jb
outsb
loopne
es
and
cmp
mov
aas
icebp
xchg
sbbb
aaa
xor
push
scas
cli
stc
mov
and
add
sahf
xor
mov
xor
loopne
sti
jp
shll
ljmp
lds
pop
dec
sbb
cmp
in
xor
loopne
leave
sub
xor
jecxz
mov
dec
mov
cmp
subb
xchg
lds
icebp
dec
lret
fdivrl
scas
int
lea
loop
jmp
push
call
inc
addr16
and
mov
cmpsl
dec
aad
dec
rcrb
ret
jo
shll
and
push
xchg
xor
jb
xor
es
out
mov
les
outsl
mov
push
lods
mov
std
loopne
push
mov
in
das
test
jge
or
outsb
les
inc
xchg
mov
push
xchg
aas
mov
push
sbb
xor
pop
cmp
movsb
cli
adc
xchg
sbb
dec
dec
js
sub
out
fcoml
sbb
xchg
xchg
xchg
daa
inc
arpl
into
mov
mov
andb
inc
mov
mov
push
fcmovnu
jmp
xorb
and
or
int3
mov
cmpsl
push
add
lea
mov
or
lret
ds
andb
shld
xchg
xchg
lcall
xchg
int
inc
adc
lret
and
roll
sbbl
insl
jp
mov
xor
fildl
mov
jbe
inc
mov
scas
addr16
ljmp
jo
and
popa
jmp
nop
push
sub
or
push
dec
cwtl
lods
idivb
bound
push
fs
andl
ljmp
pop
mov
xchg
mov
push
fcoml
jge
fldenv
pop
inc
adc
mov
lcall
popf
xchg
xchg
xor
inc
dec
xchg
xchg
or
add
pop
or
repnz
into
inc
xor
inc
mov
lods
js
aas
mov
dec
xchg
push
xchg
lock
imul
mov
cli
int3
je
out
xor
test
inc
xor
jns
insb
sysret
leave
adc
or
mov
scas
push
sbb
dec
lods
push
stos
mov
pop
shr
mov
movsl
cmp
leave
stos
add
cld
hlt
jae
xor
iret
and
arpl
cmc
pop
xor
mov
je
popf
enter
es
cmp
mov
xlat
hlt
xor
popa
cli
pusha
mov
mov
xlat
imul
jb
arpl
in
pop
cltd
xor
fbld
sub
test
in
jg
dec
pop
decb
ret
stos
out
sti
loopne
adc
cmp
mov
mov
repnz
imull
decb
popa
dec
adc
or
mov
lea
arpl
lret
xchg
push
mov
das
jmp
out
push
fsub
jnp
mov
std
push
cmp
add
test
ljmp
sahf
fists
jns
aas
lods
js
iret
xchg
cmp
repnz
pop
inc
ds
mov
adc
iret
add
fidivl
sub
je
push
pushf
push
adc
das
pop
xor
adc
xchg
and
aaa
les
rcr
cld
ret
mov
adc
xorl
mov
xor
jge
inc
jmp
iret
das
inc
add
fildll
add
jl
mov
xor
imul
inc
mov
mov
sub
xor
add
mov
jecxz
push
gs
sub
test
gs
addr16
inc
out
cmovae
add
sbb
scas
mov
fimuls
ss
aad
sahf
fsubrs
scas
jp
lcall
fidivrl
xchg
mov
test
xchg
inc
loope
arpl
ret
sub
outsl
ljmp
add
mov
sbbl
fisttps
shrl
dec
sub
lahf
mov
mov
sub
fnstenv
xchg
mov
xadd
dec
jg
dec
mov
jns
mov
inc
inc
rcl
add
xlat
int
mov
das
dec
lods
js
in
lock
scas
pop
mov
je
sbb
notl
xchg
jmp
jo,pt
std
adc
pop
add
test
cwtl
push
outsb
jmp
test
cmp
ret
fildll
dec
ss
or
fwait
mov
movsl
int3
cmp
mov
or
add
std
push
je
leave
pusha
inc
dec
insb
cmp
loope
xor
pushf
pop
icebp
fldl
pop
shll
loop
and
call
fcmovbe
xor
pusha
lods
fdivs
out
int
or
insl
jb
loopne
mov
icebp
lret
test
mov
sub
in
imul
xchg
sbb
imul
insb
insl
dec
mov
lea
dec
insb
inc
lret
jmp
lea
mov
or
das
fimull
pop
mov
mov
pusha
xor
repnz
in
cltd
movb
mov
fwait
xchg
ds
sbbb
xor
imul
push
cmp
lahf
cmp
and
call
sub
inc
leave
sub
iret
test
push
js
mov
mov
daa
inc
or
mov
dec
dec
das
insb
push
and
jnp
sbb
loop
jp
jns
jl
pushf
mov
pavgw
cmpsl
mov
pop
and
mov
popf
sahf
adc
push
pop
sbb
sbb
aaa
repnz
clc
idivl
and
adc
adc
insb
cwtl
jecxz
sub
incb
lcall
xchg
test
push
mov
repz
inc
sbb
mov
mov
inc
insl
jg
sbb
dec
inc
sar
cmpsb
popa
mov
mov
mov
mov
mov
add
pop
fwait
mov
ret
sbb
xchg
iret
ror
or
jae
add
sbb
mov
adc
cli
lea
cltd
test
ficomps
add
ja
cmp
rol
jno
clc
fidivrl
mov
cmpsb
gs
fwait
inc
out
pop
shll
inc
adc
lods
out
mov
cmp
or
dec
pop
shll
mov
ret
arpl
sbb
lods
adc
movsb
mov
enter
out
jecxz
in
stos
jbe
mov
loope
mov
popf
scas
cmp
jo
or
mov
push
xlat
cld
insb
inc
xchg
add
shrl
or
sbb
mov
andb
movsb
lret
inc
in
mov
xor
subb
rcrb
ja
or
push
or
jl
cmp
and
and
add
jp
js
xlat
out
inc
lahf
pusha
mov
mov
mov
xchg
lea
sub
sbb
jg
cwtl
mov
or
xchg
mov
pop
fiaddl
xchg
pop
ljmp
pop
scas
xor
fwait
jae
mov
or
dec
cmp
mov
add
jle
outsb
xchg
jmp
mov
das
movsl
shrb
or
dec
subb
cltd
mov
sahf
in
mov
xchg
sbb
inc
add
jmp
jle
out
jb
in
test
xor
push
out
mov
ficoml
lret
dec
jmp
mov
mov
cmp
pop
or
and
mov
lret
jmp
out
cmp
inc
sarl
dec
outsl
enter
into
mov
enter
fldl
pop
lahf
push
sbb
or
adc
xor
lret
dec
jns
ljmp
push
or
jecxz
jnp
sahf
jg
ja
ret
pop
add
js
push
mov
cwtl
cmp
inc
int3
hlt
jge
scas
jp
pop
mov
inc
fcom
add
pop
jnp
sub
fstpt
test
cli
sbb
dec
ficoml
jno
imul
jg
mov
sub
and
scas
cli
jb
popf
mov
push
mov
pop
jno
imulb
push
jmp
jp
inc
add
jo
pop
cmp
iret
scas
mov
pop
xchg
sub
and
dec
cli
jnp
cmp
lcall
sbb
mov
std
jo
dec
cs
dec
xchg
pabsb
addb
repnz
stc
adc
popl
jl
mov
push
xchg
jb
insl
push
sbb
fbstp
add
cmc
aaa
popa
outsl
inc
inc
loop
xchg
sti
sub
daa
add
and
add
xchg
loop
call
push
daa
sbbb
sbb
std
bound
lea
scas
rcll
shrl
or
das
add
xchg
mov
cli
sub
push
xor
or
popf
push
sub
sbb
stos
mov
pushf
xchg
pop
pop
outsb
sub
add
loop
repz
xor
pop
aam
push
fwait
xor
jle
insb
sub
gs
dec
es
cmp
xor
insb
xchg
icebp
or
ss
or
and
pop
push
or
rorl
addl
int
cmp
ret
mov
repnz
clc
ss
pop
mov
mov
jmp
sbb
xor
inc
arpl
mov
xchg
arpl
mov
jb
mov
mov
lods
dec
jl
sub
xchg
jnp
jb
add
xlat
lods
shrl
cli
adc
jns
ljmp
adc
incb
lock
insl
pop
jecxz
adc
sarl
scas
sbbb
pop
dec
mov
cli
inc
es
pop
mov
cli
or
sub
xchg
mov
aas
pop
pop
mov
add
cmp
inc
std
jo
clc
cmc
roll
mov
dec
pop
loope
fucomp
xor
fdiv
jnp
jge
pop
add
and
les
psubq
loopne
test
mov
ss
pushf
xor
pop
lahf
scas
push
sbb
add
jmp
mov
dec
std
mov
add
rcr
movsb
push
xchg
mov
aam
and
mov
in
jecxz
aam
xchg
scas
push
loope
repnz
xlat
inc
pop
jmp
jnp,pt
mov
mov
push
aad
dec
mov
fidivs
out
shll
inc
xor
cld
lahf
pop
cmc
push
nop
daa
and
or
in
aaa
aaa
mov
mov
add
je
nop
jns
jmp
cmpsb
cmpsl
ja
cmpps
arpl
sub
jge
xchg
movsl
movsl
xchg
imul
push
cmp
in
jp
in
das
mov
add
shrl
in
lret
mov
mov
movsl
or
cwtl
outsl
add
inc
bswap
xchg
sub
mov
or
sub
mov
xor
pop
leave
mov
rol
xorl
mov
sub
mov
xchg
jmp
adc
mov
push
fwait
jns
adc
sub
mov
cmp
inc
jl
jle
jne
lret
js
adc
and
push
lea
js
xor
imulb
out
dec
lret
mov
xor
mov
pusha
lahf
shlb
inc
or
jns
push
or
mov
lahf
call
pop
xchg
dec
gs
pop
fldenv
cltd
int3
jg
fmuls
ja
add
lds
sub
add
in
push
out
shll
dec
adc
xchg
push
pop
xchg
jnp
or
loopne
adc
lahf
in
push
mov
scas
dec
popf
test
inc
out
test
pop
cmp
xlat
repnz
or
lcall
jp
cs
push
sbb
sbb
cmp
cld
lret
lret
jmp
stc
and
arpl
jmp
push
adc
inc
sbb
rep
cmp
add
ds
pushf
add
or
mov
inc
xor
jp
mov
or
jl
fs
xchg
imul
and
scas
repz
cli
push
pop
or
jg
adc
mov
ficomps
bound
push
icebp
popa
imul
popa
jo
lea
mov
push
mov
push
pop
pusha
jae
cmp
push
adc
leave
fisttps
dec
inc
pop
sub
pushf
fs
and
pop
jp
pop
sbb
ljmp
popa
rol
orb
add
mov
push
movsl
dec
repnz
daa
mov
in
cld
jge
and
push
mov
inc
imull
test
push
rol
inc
mov
in
pop
fwait
xchg
xor
fcomps
sti
cli
or
mov
in
pop
xchg
mov
and
cs
sub
imulb
cmp
out
cld
cli
stos
movsl
jno
popa
mov
jo
push
fs
jnp
mov
xchg
mov
mov
pop
xorl
in
into
ds
negl
dec
push
sahf
adc
push
cmp
xor
xchg
sub
mov
data16
inc
stos
iret
dec
ret
cmp
pop
ss
test
mov
or
adc
add
fucomi
push
or
fwait
sbb
jnp
out
roll
test
xchg
data16
enter
mov
testl
cmp
shl
imul
pop
ja
mov
cmp
cmc
jnp
jge
cmp
xchg
xchg
jp
and
stos
pop
xchg
pop
int
rclb
jecxz
es
add
inc
xlat
mov
and
push
sbb
pop
sbb
lcall
dec
mov
jl
jl
mov
call
pop
xchg
ja
pop
push
jbe
aaa
das
pop
loopne
cli
adc
inc
bound
mov
fildl
xchg
push
int3
and
mov
pop
nop
jle
lock
sti
cmp
push
mov
call
push
cmp
sarl
int
jg
or
add
jns
dec
mov
sti
pop
xchg
cld
jecxz
aaa
sbb
lcall
ja
je
and
add
fimuls
mov
test
mov
mov
js
fisubrl
or
loop
in
cmp
sbb
aaa
arpl
sub
cmp
xor
arpl
or
nop
add
jmp
mov
push
ljmp
fmull
mov
pop
jns
and
dec
je
cmpsl
sub
out
or
xor
jp
shl
mov
fwait
loop
lret
pop
inc
xchg
iret
xchg
enter
or
jbe
unpcklps
je
lea
mov
das
adc
xor
shll
shlb
imul
not
pop
aaa
lret
in
lds
sbbb
xor
add
frstor
and
xchg
incl
ja
push
pop
orb
insb
sti
xlat
fidivrl
sahf
shrl
call
lods
out
arpl
fisttpl
mul
jnp
insl
ret
adc
cld
fcoms
xchg
mov
mov
test
sbb
into
and
sbb
js
push
ljmp
sbb
xchg
dec
push
stc
and
pop
sarl
out
cmp
jae
mov
aas
jnp
and
sub
divb
test
pop
data16
test
std
shrl
out
fs
cli
adc
push
xor
inc
cld
repnz
jge
scas
repnz
pop
or
pop
jb
js
xchg
jb
out
adc
cmp
or
loopne
arpl
adc
out
scas
xchg
rol
icebp
inc
push
daa
test
enter
sbb
jae
cmp
inc
push
mov
pop
sub
leave
add
pusha
int3
or
cmpsb
xor
push
adc
xchg
dec
xor
movsl
mov
out
filds
push
lock
negb
sti
data16
inc
dec
dec
inc
mov
daa
imul
adc
mov
sub
sti
sbb
xchg
dec
dec
sbb
lods
hlt
sbb
sbb
sbb
leave
pop
mov
pop
sub
inc
out
in
nop
adc
xor
insl
and
cs
popl
mov
xchg
or
xchg
sarb
cmpsb
in
push
mov
movsl
adc
cmp
adc
cmpsb
and
and
lahf
xchg
xchg
push
insb
push
sar
push
test
fstpl
in
mov
sbb
outsb
or
dec
ss
shrb
bound
xor
pop
inc
aam
push
xchg
inc
bound
or
leave
mov
cmp
add
and
dec
insb
cmp
int3
fdivrl
fistpll
jge
andb
sti
and
mov
and
jl
data16
inc
dec
sub
fmull
mov
pop
adc
clc
iret
pushf
adc
inc
popf
push
push
lods
mov
sti
addr16
pop
int3
repz
inc
movl
mov
cs
sar
cltd
adc
lret
fucom
cmp
sub
adc
test
push
loopne
mov
push
push
sbbb
xor
ret
mov
std
pop
out
dec
mov
in
popa
lods
mov
jns
insl
push
sbb
les
jl
pop
iret
xchg
pop
dec
into
pop
xchg
insl
and
es
sub
xor
inc
cmp
xor
in
mov
push
jns
jnp
jmp
cs
aas
inc
loope
cld
xor
ret
mov
inc
push
mov
leave
cld
cltd
insl
arpl
xor
xsaveopt
popf
inc
leave
inc
arpl
or
lcall
pop
ds
push
cmc
push
cmp
sub
out
insl
push
jp
dec
push
outsl
pop
pop
jne
add
imull
add
lahf
jecxz
shll
icebp
test
mov
cmp
fcompl
adc
xchg
add
sub
push
xor
pop
or
lods
push
lret
dec
dec
loop
mov
sbb
imul
stc
mov
fcoms
into
or
add
je
xlat
mov
adc
xchg
call
mov
sbb
sbb
xchg
mov
cs
inc
adcb
imulb
lret
cmp
xor
jo
int
cmp
in
and
mov
fiadds
xor
xor
in
out
pop
stos
dec
ja
sbb
sbb
je
mov
call
push
adc
or
push
cmp
cmc
out
mov
mov
adc
adc
lret
mov
in
add
lcall
roll
cld
adc
add
in
adc
fdivrs
into
add
rorl
xchg
push
movsb
or
shrb
adc
arpl
cmc
push
dec
outsl
cmp
lds
adc
mov
call
mov
rcl
push
or
iret
mov
pop
xlat
icebp
arpl
inc
push
pushf
cmpsb
fs
aam
sbb
or
ret
or
lea
or
pop
sub
mov
xor
imul
movsb
jne
add
jno
rolb
inc
out
pop
xor
and
lods
inc
jne
fucomip
jge
xchg
cmp
ret
bound
sbbb
fwait
mov
jle
mov
pop
inc
mul
dec
cmp
daa
and
pop
sbb
mov
or
nop
cmp
push
mov
sub
push
sub
cli
gs
sahf
ds
inc
pop
aam
fldcw
push
rorb
and
int
cmp
sbb
adc
push
in
jbe
mov
dec
cmc
xchg
jns
icebp
cltd
xchg
mov
push
leave
add
das
in
test
addr16
sub
outsl
int
or
inc
mov
push
mov
test
push
cwtl
dec
inc
rcl
and
or
out
std
shrb
in
std
push
xlat
jnp
xchg
xor
add
pop
lods
mov
mov
test
scas
imul
test
ss
inc
stos
sbb
in
movsb
push
popf
les
sub
lahf
daa
adc
push
ljmpw
ljmp
cmp
iret
mov
adc
jno
jns
push
mov
mov
jge
push
xchg
mov
mov
push
lods
insl
insb
subb
xor
mov
xor
jg
sti
int
push
insl
mov
mov
inc
pop
popf
inc
add
xchg
sub
lret
clc
mov
pop
lock
cld
bound
cli
sbb
add
xor
or
cli
je
aaa
insb
addr16
fcompl
es
out
mov
mov
add
mov
push
adc
iret
pop
pushf
sbb
cmp
xor
and
sarl
xchg
pop
leave
lahf
cmp
fbstp
jg
inc
popa
in
push
push
cld
or
movsb
divl
pop
xchg
mov
jb
cmovns
xor
inc
pusha
in
pop
stc
addr16
xlat
adc
mov
mov
jge
cmp
push
packuswb
lahf
in
ss
sub
xor
adc
xor
rcll
scas
aas
adc
mov
js
adc
daa
shlb
mov
add
inc
dec
mov
cli
popa
cmc
jmp
jg
sbb
pop
add
xor
mov
add
dec
xor
cltd
arpl
lods
addl
xor
imul
andb
int3
cmpsl
dec
je
out
xchg
arpl
outsl
push
pop
into
xchg
lret
xchg
jmp
pusha
call
sub
ret
fwait
inc
add
pop
loope
mov
push
xor
jl
push
out
jae
jp
bound
push
sbb
sub
sbb
ficoms
scas
enter
aas
lcall
or
sarl
jo
insl
rcrb
cmp
add
mov
js
out
inc
gs
popa
fldt
pop
pushf
loope
push
out
mov
cmp
xchg
in
pop
in
out
or
loop
fnstenv
jg
pop
mov
mov
and
mov
mov
xchg
enter
mov
divb
in
mov
pop
cmpsb
mov
orl
mov
mov
shrl
rorl
into
dec
lret
into
push
loopne
data16
cmp
sbb
bnd
iret
stos
aam
js
dec
ljmp
out
xchg
mov
adc
repnz
subl
lods
movsl
xorb
loop
pop
push
pop
fdivl
in
out
pop
cmp
cli
mov
js
add
adc
inc
sub
pop
lret
sarb
pop
sbb
in
adc
popf
sbb
push
xchg
mov
push
xchg
test
add
cli
pop
xchg
cmp
test
pop
ja
cmpsl
mov
adc
test
xchg
xchg
pop
stc
ljmp
cmpsb
ljmp
outsb
fdivrl
std
or
inc
jns
int
push
icebp
pusha
xor
inc
stos
mov
jnp
in
stos
add
or
cmp
stos
pop
mov
cmc
repnz
mov
andl
ds
imul
ss
and
ret
dec
cmp
hlt
fnstcw
mov
push
test
dec
jg
pop
mov
clc
shrb
lahf
or
aas
es
ss
addr16
cmpsb
sbb
cmp
mov
push
mov
loope
imul
jno
sbb
fsubl
push
mov
pop
lods
jo
inc
add
mov
insb
mov
rcll
loop
jns
sbb
les
and
roll
mov
subl
fcomps
test
into
fucom
iret
pop
add
ljmp
notb
enter
imull
dec
cmpsl
push
inc
imul
cmp
xlat
dec
data16
jg
fcmovnbe
loop
popa
lods
push
movsb
push
scas
mov
insl
js
icebp
pop
cmc
loope
pop
jle
push
lods
iret
adc
rorb
cs
sbb
push
stc
xor
frstor
pop
or
cmp
xor
jecxz
dec
int3
cmp
nop
js
jmp
outsl
dec
rolb
fbld
in
mov
xor
popa
popf
fiadds
repz
jmp
imul
in
jnp
scas
pusha
nop
xlat
sbb
jl
outsb
loopne
adc
jnp
cmc
mov
test
cmp
cltd
movsb
jecxz
pop
sub
cwtl
cmp
jne
adc
arpl
sbb
js
pop
inc
stc
ss
in
mov
mov
adc
mov
push
dec
dec
mov
imul
xor
cmpsl
lcall
icebp
cmpsl
pushl
pop
js
add
test
sbb
pop
and
jl
jnp
stos
cli
xor
and
mov
and
lret
lods
lcall
mov
and
sbb
add
push
test
loop
ret
and
mov
mov
fcomip
into
lods
lock
lds
inc
movsb
push
dec
sbb
dec
jne
xchg
pop
push
aam
decl
pop
and
mov
mov
in
jecxz
mov
iret
stos
pop
push
jp
mov
fcmovnu
sti
push
imul
pop
add
mov
loopne
bound
stos
mov
data16
outsb
push
jns
int
out
loop
addr16
sbb
sub
sub
notl
or
cld
xor
jns
ja
cmp
jnp
pop
mov
inc
aam
xchg
stc
jg
punpckhwd
shlb
pop
orb
mov
jnp
dec
aad
pusha
xchg
aaa
add
test
cmpsl
lds
inc
jne
pop
push
roll
filds
int
cmc
iret
mov
inc
rcrl
mov
inc
add
outsb
inc
sbb
push
and
ss
add
enter
mov
lret
gs
sahf
push
lods
enter
cmc
cmp
cmp
jae
dec
jns
push
test
fdivrl
in
int
xchg
dec
fldenv
inc
push
enter
test
mov
adc
aam
lahf
int3
inc
inc
sbb
cltd
add
push
in
inc
sub
jmp
aaa
enter
inc
pop
cld
leave
lods
dec
mov
sbb
pop
xchg
jg
xchg
int
lods
imul
push
add
sbb
insb
jg
adc
sub
add
aad
aad
addr16
addr16
xchg
add
sbbb
rorl
loope
das
mov
repz
frstor
ret
sub
stc
testl
out
je
pop
push
lret
sbb
mov
dec
add
roll
and
sbb
mov
jg
jp
mov
je
adc
pop
push
add
add
pop
jo
pop
push
push
mov
mov
gs
or
outsl
sarb
lret
bound
jge
mov
mov
into
jle
pop
nop
pop
aam
push
outsb
jne
sbb
add
in
sub
dec
sahf
xor
subl
dec
pop
rcll
dec
imul
cmpsb
xchg
das
test
ds
lcall
dec
scas
daa
repnz
jge
mov
xchg
sbb
jmp
test
push
mov
push
rorb
add
popa
jmp
das
pop
add
cli
stos
sbb
gs
sbb
dec
sub
xchg
mov
icebp
and
dec
sbb
push
xor
orl
cmc
ja
imulb
lea
inc
add
sub
push
addr16
xor
dec
pop
imul
testb
mov
call
int3
js
repnz
or
cmp
adcb
jl
jmp
jnp
icebp
xlat
mov
lods
mov
cld
int3
and
popa
mov
adc
sbb
fs
xchg
ficoms
push
es
aas
test
cmp
and
adc
xchg
mov
les
jnp
xchg
mov
and
push
mov
xchg
repnz
sbb
pop
stos
test
mov
mov
inc
in
jnp
jl
mov
push
push
call
sti
cmc
jb
test
jg
dec
call
lds
fmuls
loop
pop
lcall
lret
lods
dec
hlt
mov
jmp
out
rorl
mov
push
or
clc
or
lea
jae
mov
jg
xor
pop
xlat
cmp
testl
enter
sbb
jne
lock
movsb
je
inc
inc
add
jne
xor
or
add
mov
cli
sahf
mov
fsubrp
xchg
push
je
icebp
mov
loop
add
repnz
xchg
add
outsl
mov
loopne
fsubl
pop
gs
jle
cltd
and
pop
and
adc
mov
sub
add
out
add
mov
pop
mov
in
push
hlt
in
in
mov
dec
push
fnstcw
shlb
sub
in
push
shl
sub
add
outsl
xor
add
sub
sbb
icebp
dec
cmc
mov
ljmp
fmuls
pushf
xchg
rcrb
dec
fwait
loope
dec
pop
dec
les
out
push
fiadds
in
ss
add
sub
lods
adc
mov
jle
push
rcr
in
popa
xor
push
push
jno
mov
lret
inc
testb
inc
icebp
daa
movsb
inc
rolb
addr16
jecxz
dec
pop
dec
xor
mov
xlat
or
or
pop
xor
sbb
adc
movsl
or
cmp
pop
sbb
inc
dec
inc
jle
lret
push
repnz
pop
lock
fldcw
dec
es
mov
pop
cs
pop
inc
push
xor
jl
fsub
sbb
fucomp
and
or
adc
sbb
xchg
mov
and
xchg
daa
sbb
push
cwtl
je
inc
movsl
sbb
mov
jne
inc
inc
mov
mov
dec
dec
and
sbb
sbb
fs
or
sub
push
push
std
add
test
inc
lahf
in
mov
negb
lcall
inc
dec
mov
dec
std
pop
testb
mov
xchg
stc
mov
sub
sbb
mov
mov
sbb
and
inc
push
push
popf
fimuls
imul
sub
sub
nop
xchg
test
test
add
mov
mov
cmp
cld
outsb
cmp
jb
sub
loop
lock
xor
outsb
cltd
mov
pop
out
mov
sbb
push
sbbb
pop
jg
pop
sar
stos
call
xor
pop
mov
aad
push
sub
inc
and
jle
mov
adc
sbb
pop
imul
rcr
sarb
mov
jge
push
insl
scas
enter
rcr
add
inc
adc
cmc
mov
inc
fcmovnbe
rcrl
and
push
fdiv
adc
mov
mov
mov
and
fsubs
or
or
add
xchg
cmp
rclb
add
jle
arpl
les
popf
mov
sbb
hlt
sti
xor
or
sbb
push
inc
imul
pop
icebp
mov
push
cld
movsl
sahf
cmp
jae
mov
daa
cmpsl
lcall
subb
push
mov
mov
jne
xchg
dec
popf
pop
dec
mov
push
stc
ds
xchg
out
mov
and
and
je
or
pushf
mov
jns
cmp
xchg
mov
xchg
test
fwait
dec
sbb
lds
push
add
add
out
ret
fisubs
insb
rcrb
jle
scas
clc
pop
push
dec
fs
imul
cmp
popa
adcl
sub
pop
ret
clc
push
repnz
lahf
adc
push
aad
lcall
ret
test
push
mov
push
orb
sti
ljmp
pop
push
movl
xchg
push
or
mov
into
mov
push
or
jl
cmp
mov
xchg
lods
and
out
leave
jmp
mov
cld
pxor
int3
movsl
ja
mov
xor
imul
pop
lock
cmc
mov
mov
pop
sbb
pop
inc
sbb
inc
mov
stos
pop
jmp
cmp
add
cmc
mov
std
outsl
jbe
test
ficompl
push
fwait
sub
jne
das
into
jp
lcall
les
mov
adc
jle
scas
out
xor
or
shl
sub
push
popf
or
inc
mov
add
cmpsl
out
clc
divb
dec
lahf
jbe
mov
push
pop
shrb
and
sub
loope
test
cmpsl
gs
or
popa
fcmove
dec
cmp
lea
cwtl
add
arpl
xchg
imul
sub
test
pop
sbb
outsb
js
lods
jecxz
pushf
insb
in
sub
fwait
decl
pop
mov
sub
insl
daa
jecxz
inc
jge
lcall
and
push
es
data16
shlb
sti
shrl
adc
jb
divl
fildl
push
push
das
stos
sub
pusha
insb
mov
adc
lods
mov
shlb
mov
mov
mov
sahf
js
cltd
je
push
jle
mov
jae
push
jecxz
push
lea
cmp
cs
cli
out
jno
leave
dec
xor
loope
inc
and
subb
sbb
push
or
cli
pop
js
and
mov
push
test
sbb
addr16
sub
xchg
push
arpl
inc
xchg
and
cmc
adc
mov
cmp
cld
pop
sbb
sub
insl
adc
lds
jecxz
mov
cltd
cmp
fsub
ja
daa
jmp
sbb
mov
js
in
mov
daa
jg
and
ret
fmul
lret
fistpl
pushf
inc
and
les
add
and
push
mov
mov
fldenv
mov
ss
dec
test
push
pop
pushf
lcall
sub
cmpl
fiaddl
lret
pop
fimuls
fst
fmull
mov
fisubrl
or
push
lods
push
lods
aam
pop
ret
mov
in
pop
xchg
mov
add
push
inc
nop
int
and
jg
xlat
push
daa
cmp
push
mov
bound
leave
outsl
push
mov
or
lea
clc
loopne
or
add
jae
data16
nop
shll
daa
jns
pop
mov
icebp
xor
mov
push
mov
imull
popf
sub
pushf
loop
mov
inc
mov
pop
imul
or
push
add
lahf
aad
arpl
cmpb
ret
addr16
out
nop
xor
jmp
mov
jp
inc
cmp
inc
and
jae
aaa
mov
jns
lcall
push
mov
pop
in
loop,pt
out
scas
data16
or
mov
xlat
cmp
jmp
pop
mov
fstpt
pusha
jg
pop
push
dec
sub
aad
add
mov
jg
in
cmp
imul
fadd
add
push
cmp
mov
cli
sbb
bound
andb
rolb
popf
inc
mov
sbb
sbbb
into
mov
mov
in
push
pop
xchg
sub
sbbb
cmpsb
in
xor
mov
test
cs
xchg
js
popa
and
cld
lret
lret
les
iret
add
xchg
mov
mov
xchg
xchg
mov
mov
sub
flds
xor
rol
ret
xchg
push
mov
mov
dec
sarl
stos
mov
add
ret
jae
add
sbb
call
and
imul
das
aaa
lret
mov
mov
or
or
fstp
xor
fistl
push
les
test
cld
sub
lods
into
int3
dec
adc
sarl
cmpsb
loop
jno
mov
or
adc
dec
sti
stos
in
add
imul
inc
js
xchg
ret
mov
sbb
sub
dec
mov
dec
mov
arpl
sbb
cmpsb
loop
push
pop
bound
and
sar
pusha
inc
jo
movl
mov
mov
or
shrl
orl
call
add
jnp
pop
je
cmp
clc
in
mov
jp
fdivrs
popf
gs
stc
push
cmp
sbb
ss
sbb
jae
pop
add
mov
or
inc
fcomps
pop
shrl
mov
insl
cmc
pop
pop
insb
scas
sub
mov
in
cmp
sti
in
adc
xor
loopne
or
call
sub
jp
add
and
push
cmp
sub
pop
jb
je
test
das
xchg
pushf
ret
pop
mov
mov
cmp
push
lock
or
cli
cli
dec
cmp
cltd
inc
incb
testb
xchg
push
cmpsl
imul
sub
cli
add
jbe
push
mov
pop
pop
sar
icebp
jne
dec
xor
pop
ret
sbb
push
pop
cmp
jmp
or
cmpsl
inc
sahf
adc
dec
lock
xor
int
enter
mov
mov
cmpsl
pop
adc
adc
mov
push
xor
fs
lods
push
cmp
cmpsl
es
ljmp
add
shl
or
sbb
cwtl
sahf
mov
aad
test
push
les
pop
orl
jmp
push
flds
movsl
call
xor
mov
xchg
clc
pop
sti
push
mov
data16
lret
les
insl
test
add
or
and
jbe
into
mov
scas
push
jno
pusha
mov
dec
xchg
leave
sti
mov
jmp
mov
cltd
cmp
mov
leave
sbb
push
dec
or
push
jle
callw
std
das
xor
push
arpl
aas
pop
cmpsb
mov
or
adc
inc
mov
pusha
dec
test
cmp
test
rclb
cmp
dec
xor
push
loopne,pt
lods
jmp
cs
mov
xchg
es
mov
fwait
outsl
out
incl
out
inc
gs
shl
mov
push
test
mov
jne
jecxz
inc
mov
lea
mov
in
mov
scas
popa
push
pop
push
xor
stos
pushf
ret
nop
push
out
aad
jns
adc
mov
clc
leave
mov
cld
imul
clc
pop
out
adcl
mov
andl
ss
dec
mov
and
xchg
cmp
mov
lods
test
dec
dec
mov
popa
ss
out
jecxz
inc
add
pushf
mov
sub
jns
mov
shrl
ja
mov
xor
jl
addl
sub
and
insb
pop
into
jg
pop
cmp
inc
mov
add
and
aaa
xchg
push
test
dec
sarl
sti
cmp
scas
mov
mov
xchg
cmp
test
sub
adc
dec
jg
rcll
xchg
jle
shlb
ficompl
or
push
ja
jl
shll
push
mov
mov
lock
call
pop
daa
cmc
add
test
sub
xchg
xchg
iret
or
and
jl
cmp
imul
jae
ljmp
pop
xchg
mov
orb
fcmove
hlt
sub
adcl
clc
shll
add
inc
aad
jbe
enter
cmc
ret
pusha
mov
dec
lret
lret
mov
add
in
pop
mov
aaa
mov
cs
aaa
iret
stc
xchg
jo
lahf
or
movsb
repnz
sbb
imul
fldcw
jecxz
pushf
lret
mov
faddl
jnp
jb
mov
push
lahf
js
cld
pop
inc
inc
cmp
cltd
or
insb
decl
cli
jbe
xchg
dec
sbb
ja
dec
xlat
xlat
lock
rol
stos
adc
js
push
in
jmp
jl
int3
lcall
dec
pop
jg
in
fidivs
jmp
lahf
xlat
jl
inc
out
lods
roll
push
stos
bsf
fldl2t
and
and
xchg
xorb
test
xchg
or
inc
enter
gs
xchg
adc
leave
pop
xchg
frstor
add
out
push
in
push
adc
sbb
pop
test
in
mov
fsts
jg
jge
scas
push
test
test
jg
adc
cmc
push
mov
and
push
rep
jg
jno
jmp
push
jg
mov
shrl
cmc
std
dec
fbld
push
cmp
adc
sbb
xor
mov
cmpsb
repz
mov
cs
sbb
sahf
outsl
jae
push
out
adc
js
mov
aad
test
fcmovne
outsb
fwait
rorb
adc
cmp
mov
mov
aas
movsb
in
pop
out
mov
lds
jnp
xor
cmp
int
shlb
inc
jg
or
out
dec
out
imul
add
decl
nop
or
or
dec
jmp
adc
scas
xchg
or
hlt
jge
iret
xlat
mov
push
loop
adc
xchg
adc
pop
enter
pop
cwtl
push
mov
pop
arpl
add
outsl
pop
das
out
pop
add
jnp
or
sub
int3
mov
lock
jo
mov
ljmp
icebp
mov
add
clc
in
sbb
inc
in
popa
dec
jbe
bound
std
xor
or
jl
es
xchg
mov
add
mov
lret
mov
mov
mov
add
mov
ja
adc
sub
pop
subb
test
mov
cmp
outsb
jl
pop
inc
xlat
sub
push
dec
xchg
mov
pop
pop
lods
popa
shll
js
mov
hlt
pop
add
pop
xchg
leave
ret
int
xchg
stc
hlt
test
mov
shl
fistpll
mov
dec
lds
pop
fdivrs
and
or
jae
sbb
adc
insb
pushf
movsl
mov
clc
push
add
pop
dec
int
mov
add
xor
cltd
mov
xchg
fadd
jmp
jo
fcmovnu
mov
xchg
lahf
adc
cmpsb
push
loopne
aam
push
in
divl
pushf
stc
ljmp
notl
sub
je
andl
mov
sbb
jmp
bound
inc
dec
sub
cmp
rcll
mov
push
lods
lahf
cld
lcall
sbb
jmp
cmpsl
mov
test
jbe
sbb
fcmovne
dec
cmp
push
shlb
pop
sbb
out
negl
pop
in
pushf
popa
jl
mov
repz
mov
or
shrb
pop
int3
mov
and
imul
mov
orb
std
inc
in
and
xlat
or
shlb
push
and
xchg
mov
imul
sub
mov
lea
std
pop
jo
and
sbb
xrelease
iret
loope
mov
std
mov
jp
fisubs
icebp
pop
mov
outsb
add
jl
pop
pop
xchg
sar
jns
subb
mov
les
jno
push
pop
in
mov
adc
jle
adc
outsb
mov
xsaveopt
pop
shll
jmp
fisubs
loope
pop
adc
push
xor
flds
mov
repnz
lock
inc
aas
stos
jl
pop
inc
or
dec
dec
mov
lret
out
jge
icebp
flds
push
xor
pop
and
pop
rcr
cmp
out
cs
mov
shlb
inc
pop
ja
ss
lret
pop
insl
or
sbbl
fchs
pop
je
call
or
pop
in
xlat
push
shrb
ret
push
fildll
sub
adc
xor
xchg
mov
outsl
jmp
dec
add
adc
ud2
and
mov
adcb
nop
lds
dec
sbb
and
pop
rcr
fnsetpm(287
push
lods
leave
repz
cli
sub
sub
pop
sbbb
jnp,pn
out
sub
cmpsb
jns
mov
pop
ficompl
mov
outsl
mov
jbe
loope
or
push
scas
xchg
push
into
mov
pop
xchg
outsb
xor
mov
cwtl
das
adc
pop
rcrl
std
das
add
mov
fistl
repz
divb
sti
out
or
sub
imulb
cmpsb
int
xchg
repnz
leave
mov
inc
std
pop
push
and
testl
aad
mov
sbb
pop
aam
ja
mov
add
in
jno
and
bnd
jl
xchg
mov
sbb
sub
jnp
xor
cli
rclb
dec
jbe
adc
push
pop
cli
jmp
jle
or
mov
popa
push
ss
inc
std
xor
pop
aaa
in
jno
mov
icebp
out
out
pop
or
sahf
jno
cmp
fadds
dec
bound
inc
xor
dec
adc
and
dec
mov
test
addr16
xchg
mov
mov
out
adc
jbe
leave
bound
jmp
sahf
mov
sbb
jns
shl
das
push
push
mov
fidivl
ja
sub
xchg
push
push
inc
icebp
jmp
adc
rorb
pop
sub
and
xor
imulb
ffreep
sarl
xchg
leave
and
popa
sti
xor
test
movsl
cli
xchg
push
xchg
mov
sbbb
push
lret
orl
cmp
bound
sbb
sti
dec
scas
movsl
out
lods
mov
fiadds
push
fistps
mov
push
cmp
or
cs
mov
test
mov
nop
sarb
popa
shll
mov
popf
ss
hlt
dec
inc
pop
cmpsl
mov
jnp
inc
adc
push
in
lea
xchg
sbb
mov
sbb
loope
jecxz
inc
mov
xlat
dec
int
das
dec
mov
cwtl
fcompl
dec
or
test
fistpl
cwtl
loope
pop
sbb
stos
cmp
jb
push
scas
xchg
dec
mov
aam
repz
push
mov
xchg
mov
and
jb
cmp
je
pop
iret
xor
jo
cmpb
mov
dec
das
cs
incb
dec
and
imul
xor
pop
sbb
and
and
popa
daa
mov
dec
pushf
xchg
mov
mov
pop
test
mov
adc
dec
les
call
mov
sub
jns
jmp
stos
cmpsb
cltd
pop
fsts
fildll
ficomps
pop
movsb
adc
inc
in
mov
mov
mov
push
das
pop
mov
stc
leave
mov
xor
jo
pop
in
stc
xor
cmp
aam
push
mov
mov
add
xchg
lods
cmp
jle
daa
test
push
test
sbb
aaa
neg
jnp
test
add
frstor
adc
daa
xchg
test
scas
loop
and
inc
adc
pop
fnstsw
push
mov
dec
dec
cmc
iret
dec
dec
cs
pushf
aas
lds
outsb
lcall
lods
cmp
fisttpl
mov
rcll
es
push
test
iret
or
test
mov
jno
cmp
in
lds
sbb
movsb
call
xlat
jp
shl
daa
sub
or
sbb
ffreep
pusha
loop
insl
in
pop
mov
push
mov
mov
sub
cmpsb
test
gs
mov
cmpsb
aas
imul
mov
ljmp
push
mov
repz
jbe
fs
pop
jmp
dec
lea
int3
pop
ret
or
orb
repz
mov
push
pop
je
in
stos
fidivrs
push
sbb
jmp
and
stc
cmc
iret
outsl
jbe
and
repnz
and
xchg
push
icebp
jg
je
mov
mov
push
add
fidivl
sbb
jg
sub
lret
or
sbb
pushf
sbb
js
lock
cld
mov
xor
js
mov
adcb
and
insb
push
scas
je
push
in
and
or
inc
xor
cmp
lods
lock
dec
sti
adc
lret
xchg
mov
pop
push
jp
pusha
adc
jnp
test
ret
clc
inc
scas
jl
mov
mov
mov
mov
pop
pop
fisttps
ret
mov
and
fs
jp
fldenv
adcl
shlb
fbstp
sub
mov
push
cmpsl
or
push
xor
int3
xor
cmp
dec
cmpsb
cmp
test
xchg
add
jp
and
dec
sub
fmuls
jle
addr16
out
pop
sub
adc
inc
lods
js
test
xchg
jl
inc
movsb
jl
jecxz
xor
cmp
shlb
push
jb
add
loop
dec
and
sti
adc
ds
stos
mov
or
scas
cli
dec
jp,pt
faddp
outsb
aam
xchg
add
pop
sbb
dec
jmp
mov
lret
or
test
dec
push
push
cmpsb
inc
adc
inc
inc
inc
cmp
jnp
ljmp
adcl
lock
push
int3
add
cmp
inc
enter
cmp
jp
lds
ret
jl
sub
pop
mov
add
loop
mov
and
or
imull
adc
jno
jmp
cmpsb
push
mov
adc
sahf
in
inc
negl
loope
gs
jno
mov
jne
std
loope
mov
cmp
fdivrl
stc
int3
lods
cwtl
sbb
test
cwtl
push
jns
sbb
or
push
in
shl
pop
adc
xchg
sub
dec
dec
xor
pop
roll
dec
ret
repnz
loopne
push
lea
jae
fsubl
xchg
daa
jp
bound
das
out
ret
mov
add
push
pop
in
js
mov
outsl
sub
jle
push
inc
xchg
ds
and
xchg
mov
insl
js
sti
outsb
xor
aaa
out
adc
stos
and
mov
faddl
push
subl
sarb
or
jecxz
mov
inc
or
mov
jae
rorb
iret
les
inc
stos
jle
popa
xlat
dec
lock
int3
xchg
aaa
inc
aas
xchg
jb
out
inc
mov
cmpsb
jno
mov
test
xchg
nop
fwait
pop
mov
int3
jp
jge
out
repnz
popf
cmp
faddl
jmp
pop
cmpsl
repnz
sub
mov
pop
or
movsb
in
push
dec
or
push
out
push
jl
mov
add
cld
jl
mov
hlt
popf
pop
add
fnstenv
pop
dec
and
outsl
push
dec
stc
nop
sbb
cwtl
dec
mov
mov
movsb
cmp
shll
aaa
std
jns
addr16
cmp
insb
sub
add
dec
mov
and
xor
fwait
call
jae
scas
mov
fmul
sub
jle
testl
pop
popf
cltd
push
stos
xchg
mov
mov
sbb
pop
ds
or
stos
cmp
divl
out
sub
jb
shrb
popf
and
scas
xchg
popl
cwtl
lea
mov
pop
cs
add
mov
mov
mov
outsb
cmc
vandnpd
add
int
or
mov
pop
jl
cmp
pop
cmpsb
jmp
cmc
repz
sub
fsts
or
popf
fabs
push
enter
adc
cs
fs
in
and
outsb
stos
add
js
xor
push
fs
repnz
mov
sbb
lret
repnz
cmp
lock
ret
pop
mov
pop
nop
cld
sti
lods
jns
in
call
arpl
pop
loope
insl
dec
mov
shll
mov
add
xchg
pop
ljmp
fidivl
mov
jne
in
shrb
xchg
dec
mov
xlat
aad
daa
insb
out
add
inc
sub
arpl
out
shl
xor
test
cmp
ffree
jbe
mov
lahf
dec
aaa
sbb
or
mov
sbb
push
or
ret
xor
xlat
mov
push
and
pushf
lea
lahf
scas
xchg
leave
push
fs
fsubr
ljmp
push
xor
sub
scas
in
sub
loope
shl
xor
nop
test
adcb
jne
repz
inc
adc
xor
mov
aam
xchg
xor
enter
stos
and
sbb
sub
icebp
aaa
bound
sub
test
fs
xor
cmp
inc
imull
mov
push
out
fs
sbb
arpl
mov
cli
sahf
popa
int
pushf
lcall
sub
xchg
add
call
xor
in
out
push
mov
mov
aad
adc
xorb
jmp
dec
jbe
xchg
mov
add
lock
outsl
rolb
pop
dec
stos
and
outsb
mov
adc
in
and
outsb
cwtl
pop
movsb
subl
pop
xor
aad
enter
push
jb
arpl
ljmp
sbb
mov
out
dec
mov
sub
loopne
cmp
sbb
jbe
sub
jmp
stos
mov
mov
iret
pusha
xor
pop
pop
and
clc
sbb
adc
mov
sub
dec
pop
pop
pusha
xchg
mov
push
es
pop
xchg
aaa
call
dec
je
dec
jb
push
adc
add
or
outsb
pop
fldt
lcall
popa
icebp
xchg
and
stos
xor
in
out
pop
idivb
test
test
dec
test
adc
push
dec
rolb
xchg
push
out
fnstenv
subl
insl
pusha
add
sahf
mov
or
lock
xor
adc
pop
xchg
std
dec
into
inc
or
xor
adc
xor
hlt
icebp
mov
dec
out
xor
test
push
xchg
mov
xor
jmp
adc
not
call
or
mov
int3
imul
ja
jns
jo
je
fstpt
push
push
aaa
daa
adcl
push
mov
mov
and
sbb
dec
inc
inc
dec
arpl
dec
adc
sub
frstor
pusha
or
and
pop
cmp
ficoml
loope
push
cld
gs
je
mov
inc
lods
scas
pop
rcrl
pop
xchg
mov
dec
ret
mov
stos
mov
sub
fistpl
cwtl
lea
cmp
dec
mov
jp
push
jo
pop
fucomp
mov
enter
mov
lcall
imul
ljmp
movsb
inc
je
pop
ja
sbbl
xchg
nop
jne
aam
addl
mov
cmp
sub
add
pop
fnsave
les
fbld
or
and
push
cmpsb
enter
call
lahf
xor
int3
fs
sbb
in
inc
repz
fisttps
sub
out
jle
and
mov
jl
in
xor
outsb
mov
adc
mov
mov
mulps
sub
ret
xchg
popf
jae
dec
sub
dec
or
out
idivb
cmpsb
cmp
add
negl
lods
test
jle
or
jnp
push
and
pop
cmp
insl
lea
imul
repnz
leave
push
popa
xor
mov
outsb
push
ds
adc
inc
push
clc
jg
div
xchg
aas
pop
stos
ret
repz
or
aas
rorl
mov
adc
and
adc
jnp
inc
imul
jne
cmpsb
or
mov
sarl
hlt
fisttpll
adc
ds
push
or
movsl
lea
sete
add
sub
bswap
fs
cltd
popa
fs
es
cmpsl
xorl
jg
loope
aas
jae
dec
cs
jmp
inc
lock
pop
in
pop
pop
clc
ljmp
outsb
sarb
xorl
or
sub
dec
or
jg
sbb
cld
push
fstp
jge
jo
outsl
sub
fistpll
dec
push
jno
xor
jl
inc
mov
mov
jmp
or
stos
shlb
push
lods
rcll
inc
mov
into
test
mov
jbe
popa
ja
lods
pop
mov
mov
xchg
pop
fisttpl
mov
xor
std
jb
lcall
sub
rcrl
mov
scas
mov
dec
addr16
hlt
inc
cs
mov
stos
mov
aad
das
pushf
lods
inc
mov
bound
dec
ds
loopne
mov
cmp
stc
jg
outsb
inc
xchg
jnp
mov
xorl
mov
mov
jae
add
sarb
imul
push
mov
loope
mov
mov
xchg
pop
and
sbb
data16
rcrb
mov
sahf
mov
xor
pushl
sbb
adc
cltd
addr16
fsubrp
aam
inc
nop
imul
xchg
popf
movsl
fidivrs
cmpsb
or
addr16
xchg
in
or
dec
sub
mov
cmp
adc
jae
cltd
gs
outsb
sahf
mov
adc
sub
fbld
sub
call
sti
test
adc
cmpsb
iret
inc
lock
cmpsl
stos
ss
test
fdivp
enter
insb
popa
rorl
xchg
popf
dec
ret
and
jbe
jl
push
xchg
mov
dec
lock
adc
ljmp
clc
or
pop
mov
push
test
testb
pop
les
push
push
enter
cmp
and
dec
in
push
lds
adc
scas
daa
in
pop
and
inc
test
movsl
and
xor
aam
clc
add
aad
mov
or
test
xor
jae
sarb
out
andb
inc
mov
xchg
mov
sub
mov
sbbb
arpl
out
movsl
xor
push
pop
push
mov
sbb
xchg
push
imul
push
aad
ret
adc
sti
push
popa
mov
mov
daa
loope
inc
jle
sahf
in
fldcw
mov
hlt
sub
into
lods
cld
mov
mov
daa
pop
xlat
nop
and
add
fyl2xp1
psubusb
or
mov
push
xchg
ljmp
mov
sbb
repnz
call
xor
jmp
xchg
aaa
pusha
pop
movsl
arpl
lret
lret
jae
mov
scas
push
jmp
dec
xchg
xor
insb
out
movl
stos
or
out
xchg
cli
jnp
sbb
fnstenv
insb
sub
push
test
mov
cwtl
mov
repz
push
adc
mov
inc
dec
push
jle
jle
popa
mov
imul
loopne
movsb
xchg
bnd
test
inc
cmp
mov
inc
fldenv
mov
pop
mov
lods
dec
lahf
cmp
dec
xchg
ja
nop
xor
test
cmpl
ss
sub
sbb
shlb
cmp
sub
mov
dec
aaa
jo
cmpsl
mov
je
loop
data16
data16
insb
fstpt
xchg
cmp
inc
stos
mov
mov
xchg
and
ret
adc
leave
mov
outsb
adc
inc
mov
inc
sub
jb
sub
mov
mov
mov
or
mov
ror
lock
mov
sar
dec
mov
jo
add
push
loopne
cmpsl
aad
je
jns
ja
dec
movsl
and
arpl
mov
and
mov
pop
jnp
add
dec
xor
sbb
add
inc
loopne
fwait
push
aad
hlt
addl
mov
inc
or
pop
call
xchg
ja
fisttps
mov
push
pop
mov
out
fsubl
mov
into
jg
xchg
test
adc
enter
mov
mov
rcr
mov
outsb
ja
mov
pop
shrb
and
jecxz
out
add
aad
push
cmp
dec
pop
arpl
add
or
jno
push
jbe
or
and
das
fcoms
sti
push
scas
or
pop
add
pop
or
or
movups
xlat
pop
cs
xor
or
test
scas
lcall
fisubrl
cmp
and
loop
xor
push
mov
lcall
pop
aaa
andb
push
outsb
or
int
mov
jne
test
fisttps
outsb
mov
mov
mov
cltd
lds
daa
stos
jo
xor
std
pop
popf
mov
mov
mov
aaa
xor
sub
sub
aaa
jmp
imul
test
add
cs
cmp
pop
test
dec
mov
gs
into
in
and
pop
arpl
fcoml
les
sbb
hlt
das
or
ficoml
xor
add
hlt
xchg
jne
dec
popf
hlt
les
pop
pop
shll
imulb
psubb
adc
fcmovbe
divb
dec
xchg
add
cmp
mov
and
dec
enter
mov
ret
shr
aas
cmpsb
xchg
mov
sbb
or
ss
scas
jecxz
aaa
cmp
xlat
jne
popf
mov
stc
pop
pop
pop
dec
xor
lock
jns
sbb
push
fdivs
andl
pop
and
sub
mov
aaa
out
inc
dec
xor
or
inc
loopne
pop
add
repnz
cmp
cmp
std
add
sub
fdivl
mov
xchg
add
lods
push
clc
pop
push
outsb
xchg
xchg
mov
mov
imul
inc
xchg
xchg
mov
xchg
and
mov
xlat
icebp
push
mov
sbb
loopne
shr
pushf
imul
mov
inc
sbb
xchg
std
sti
push
bound
mov
icebp
xchg
pop
xor
cs
scas
or
popf
cwtl
out
nop
imul
into
into
and
arpl
roll
cwtl
cli
sub
insl
adc
mov
out
ja
imul
fs
xchg
cmp
aas
push
mov
dec
arpl
data16
fisttpl
adc
and
arpl
jne
cld
push
sbb
loopne
fldt
mov
mov
lock
or
pop
mov
jle
hlt
shll
imul
mov
or
push
mov
repnz
and
fistpll
inc
arpl
push
mov
cmp
sub
imulb
lahf
jge
sbb
xchg
push
xor
pop
xchg
das
push
add
mov
and
fistps
insl
fwait
lcall
data16
sbb
ror
xor
pop
fcompl
add
push
mov
mov
arpl
daa
fidivl
les
in
mov
loope
loope
lcall
or
xor
xchg
shufps
movsb
aam
push
pusha
bound
dec
clc
lds
jmp
dec
aaa
cli
addr16
or
arpl
orl
fs
lock
leave
popf
pshufw
adc
pop
loope
push
inc
icebp
inc
mulb
daa
ljmp
fs
xchg
pop
mov
test
pop
sbb
mov
imul
fwait
rorl
dec
mov
outsb
enter
push
call
pop
mov
mov
fs
pusha
jl
mov
xor
xor
push
pop
push
mov
mov
pop
adc
jmp
push
mov
sbb
jnp
out
xchg
and
jl
adc
pop
jbe
jle
hlt
rcr
sub
pop
hlt
and
gs
xor
xchg
scas
push
aas
negl
push
mov
in
jns
test
aam
or
jmp
xchg
jo
xor
jle
jecxz
addr16
adc
xorb
rcl
sub
shrb
mov
addb
pop
mov
push
imul
rclb
repnz
test
daa
testl
jle
sbb
mov
mov
inc
divl
lods
je
pop
les
rolb
add
out
sub
cmp
punpckhbw
push
and
xor
mov
rol
dec
sub
sbb
mov
outsb
mov
xor
mov
xchg
sahf
xchg
clc
aas
repz
jmp
or
inc
pop
mov
jp
orb
call
dec
cmp
mov
pop
scas
nop
mov
jnp
jae
pop
xchg
inc
imul
cmp
mov
aam
popa
je
mov
mov
xor
popa
fwait
mov
iret
out
clc
enter
inc
xchg
test
sub
cld
repnz
dec
add
xor
mov
aaa
scas
xor
mov
cmp
xor
push
add
xor
jne
push
stc
repnz
push
push
sbb
pop
pop
inc
dec
rolb
cmp
adc
aam
bound
or
aas
icebp
mov
dec
lahf
sub
sub
sahf
mov
xor
ret
stc
imul
mov
mov
mov
adc
push
pop
pusha
dec
in
and
inc
mov
js
add
enter
cmc
subl
std
enter
add
flds
lret
push
jno
movsl
bound
mov
iret
jae
out
dec
sbb
xchg
xchg
ds
inc
stos
ss
pop
daa
pop
ja
mov
inc
inc
stos
pop
inc
push
bound
outsb
xchg
cmp
pusha
push
dec
in
sbb
mov
cld
aas
pop
push
and
cmp
stos
fs
mov
subps
pop
aas
mov
mov
jne,pt
mov
outsl
mov
sbb
jno
mov
adc
adc
out
imul
xor
lea
ljmp
push
mov
lcall
repnz
nop
mov
xchg
sbb
cmp
fucomip
int
mov
or
lahf
out
in
lods
scas
jle
add
lret
cld
sbb
adc
scas
sbb
pushf
rorb
sbb
mov
pop
addr16
bound
xlat
call
xchg
in
decl
mov
inc
andb
movsl
lcall
mov
loop
iret
test
mov
cmc
negl
pop
fisttps
aaa
fdivr
aas
jg
jne
dec
xchg
dec
icebp
pop
repz
xor
and
rorl
test
pusha
sub
outsb
cwtl
pop
loopne
adc
xorb
xor
dec
dec
xchg
mov
mov
jge
push
shll
lds
jle
and
imulb
cmpsb
pop
and
inc
jle
pop
fs
mulb
and
jecxz
mov
push
mov
adc
cs
mov
pop
test
gs
js
pushf
sub
lahf
sub
inc
xchg
loope
es
add
cli
stos
cmp
ret
adc
lods
pushf
jae
mov
jg
mov
inc
mov
shll
jo
or
lret
addr16
xchg
mov
mov
and
setg
mov
add
loope
inc
mov
mov
mov
pop
push
pop
imul
pop
outsb
xor
negb
xchg
cwtl
cmp
loopne
lea
push
jp
or
mov
mov
mul
and
fsubrs
or
push
lea
je
xor
repz
mov
and
adc
push
mov
inc
ret
xor
mov
cltd
lret
cmp
cli
add
adc
sub
xchg
pop
stc
xchg
cmp
std
jb
scas
sub
testl
ja
ds
aad
jmp
movsb
ret
mov
cltd
or
push
xor
insl
xor
add
repnz
cmp
mov
rorl
cltd
pop
insb
andl
pop
push
jecxz
jl
sbb
jae
into
movsb
cltd
and
push
mov
gs
mov
dec
jmp
fsubl
ljmp
push
xchg
mov
imul
add
js
push
sbb
pop
mov
push
pop
test
daa
or
imul
stos
pop
cmp
sbb
movsb
leave
insb
cs
loopne
adc
cmp
or
cmp
dec
arpl
mov
stos
test
outsb
loope
in
dec
cmp
loop
xchg
das
mov
and
sti
daa
mull
mov
out
cmpsl
lcall
mov
xchg
mov
cmpsl
movsl
jmp
sub
shrb
pop
call
dec
sub
fnsave
jl
shl
sub
fidivs
mov
lret
int3
mov
aas
dec
rolb
pusha
mov
ret
fnstsw
adc
std
sbb
cmp
cmp
cmp
bound
mov
cmp
ret
lret
mov
and
adc
pop
adc
mov
mov
push
lds
cmp
adc
mov
insl
lret
jo
jl
jg
sbb
xchg
out
xchg
les
jo
dec
movsl
ljmp
shlb
pop
inc
jbe
dec
fidivl
cmp
push
cmp
adc
cmc
pop
jnp
cmpsb
lods
push
test
fcoml
add
cmpsl
fidivrs
cmp
xchg
inc
lcall
push
xchg
mov
cltd
or
cmp
adc
dec
or
aas
jmp
andb
cmp
ficoml
mov
ret
lods
xchg
push
jo
call
add
stc
mov
jno
shrl
add
dec
arpl
mov
sub
inc
test
cmpsl
cmp
out
add
xchg
sub
scas
add
pop
inc
inc
adc
xor
icebp
xchg
test
jo
jae
std
movsl
sub
mov
mov
sbb
cmp
cli
fldenv
sti
dec
push
jns
ss
push
iret
dec
pop
cmc
daa
push
lock
dec
add
arpl
inc
inc
lea
arpl
mov
enter
and
fwait
imul
enter
aas
sub
into
les
adc
int
xchg
adc
js
std
jo
imul
sub
aad
inc
movsl
sub
ja
fsts
in
adc
sub
mov
cltd
andl
gs
movsb
mov
shr
add
sub
fcomps
rolb
jp
mov
aam
repnz
aas
rolb
movsb
popa
std
stos
jp
lock
sbb
pop
lcall
popf
test
inc
mov
aas
jge
mov
pop
jae
daa
push
pop
push
inc
sar
or
sub
push
sub
arpl
push
cmp
jbe
jl
xchg
dec
mov
xchg
dec
pushf
js
cli
mov
cmp
sub
dec
rclb
pop
aas
ret
and
xlat
movsb
ljmp
mov
lea
ret
xor
or
test
xchg
pop
jns
jecxz
and
jbe
sub
and
sahf
sub
cmp
dec
dec
loopne
add
clc
xchg
popa
out
subb
jg
dec
and
jge
imul
xor
push
ss
int
out
fnstcw
mov
push
or
cmp
mov
psllq
mov
add
mov
mov
stc
lock
std
popa
mul
sbb
aaa
xor
adc
test
pop
sbb
cwtl
ffreep
bound
adcl
std
or
mov
insl
scas
in
inc
xchg
and
add
push
ds
push
stos
ljmp
inc
pop
adc
stos
stos
leave
pusha
mov
sbb
test
call
xchg
scas
jg
sub
add
mov
mov
adc
icebp
xor
xchg
sbb
lret
dec
lods
mov
adc
lods
stc
mov
push
imul
sub
aam
scas
stc
stos
lock
test
jnp
and
flds
xor
mov
addb
nop
inc
push
inc
xor
and
out
push
xchg
push
idivb
cmc
adc
or
push
dec
rol
xchg
mov
jne
dec
cmp
pop
sbb
jmp
fneni(8087
mov
inc
dec
sub
sub
data16
mov
cmpsb
js
dec
and
loope
add
daa
mov
outsb
js
jecxz
nop
jecxz
push
xchg
pop
fists
pusha
push
mov
es
hlt
cmp
xchg
movsl
push
hlt
not
jl
mov
cmc
popl
ja
shlb
fdivs
jno
adc
push
icebp
loope
loop
mov
lods
fsubrs
scas
ja
int
out
cmpb
out
shl
stos
adc
sbb
loopne
repz
scas
jmp
inc
pop
sub
push
mov
push
fisttpl
es
outsb
lret
inc
mov
arpl
insb
lods
push
mov
in
mov
testl
repnz
incb
aas
js
arpl
aam
lods
mov
push
fdivs
cld
stos
lea
or
sarl
push
adc
int3
lret
ljmp
movsl
dec
and
mov
in
mov
jb
jnp
adcb
out
jae
and
sti
popf
or
lahf
pusha
mov
or
out
mov
nop
push
testb
xor
sbb
mov
ficoms
les
or
negl
out
mov
adc
mov
nop
dec
ret
insl
fimull
inc
cmp
lret
movsl
cwtl
lea
cmp
js
imul
cmp
test
std
push
js
jae
ljmp
xor
adc
mov
insb
icebp
cmc
in
iret
repnz
arpl
icebp
xorl
pushf
rolb
arpl
push
in
pop
movsl
imul
adc
jle
add
xchg
and
rcll
pop
mov
inc
jl
jb
shlb
lds
sbb
iret
xchg
or
das
jb
dec
mov
mov
roll
xchg
inc
js
leave
imul
or
mov
sbb
or
inc
ss
repz
sub
sbb
mul
mov
imulb
mov
lock
add
stc
and
fnsave
add
shll
daa
cltd
jmp
sub
push
je
clc
test
xchg
pop
loop
iret
roll
es
les
cli
dec
popf
aaa
outsb
or
cmp
sbb
inc
hlt
lahf
inc
rclb
add
arpl
jecxz
leave
rcll
js
sub
cmpsl
jne
or
and
cmp
cmc
add
out
int3
xor
pop
push
pushf
cmpl
sbb
fistpll
jg
add
gs
xchg
test
fucomi
enter
xchg
push
cmp
lds
cmpsb
in
xchg
ds
frstor
lcall
jb
pop
loop
aaa
fstl
sbb
xchg
hlt
movsl
mov
repz
mov
adc
addr16
shrb
mov
nop
orb
mov
and
in
xchg
in
xchg
testb
pop
xor
and
mov
sti
and
sub
aad
lds
rorb
leave
and
ja
mov
cmp
sbb
and
xchg
add
shll
outsl
das
adc
test
test
xlat
movsl
xchg
xchg
rcll
pop
and
push
in
and
les
aam
out
jo
sbb
jg
scas
fbld
stos
xchg
sbb
xchg
es
add
mov
add
pop
inc
jnp
push
nop
pop
xchg
outsb
mov
inc
xchg
std
mov
xchg
insb
je
add
jg
sarb
cmc
test
adcb
in
lcall
cld
xlat
xchg
xor
dec
cmp
hlt
std
lods
xor
insl
lret
inc
das
jno
fisubrs
adc
jbe
cmp
mov
mov
xchg
jbe
jae
ret
xchg
pop
lods
dec
cmp
add
fimull
jo
cmpsl
or
and
aam
inc
pop
aad
inc
cmp
jecxz
lea
lcall
push
inc
es
rorl
imul
push
and
dec
pop
imul
pop
xlat
add
lock
int
mov
jae
lret
scas
push
pop
mov
repz
ja
xchg
das
inc
aas
mov
and
adc
cli
fisttps
dec
mov
jnp
aaa
jne
shll
adc
iret
dec
test
xchg
lret
jg
lcall
stc
jb
push
cmpsb
adc
ljmp
rorb
fiadds
push
popf
lret
push
jmp
aam
insb
sub
push
lods
inc
mov
xchg
shrb
ficoml
je
pop
mov
lods
outsb
cmp
xor
dec
jbe
insb
cli
bound
or
loopne
out
sbb
popa
cmc
mov
into
pop
xchg
jle
lock
dec
mov
xchg
jno
call
push
incl
pop
and
dec
ljmp
mov
mov
pop
push
ret
out
mov
movsl
fwait
int
jmp
dec
jbe
mov
push
addr16
lock
into
movsb
mov
xor
and
add
adc
js
dec
cmc
sarl
jne
jo
insb
data16
xor
fbld
sbb
mov
setbe
jo
movsb
lods
out
cld
movmskps
or
mov
lock
lods
jns
leave
xor
and
cld
sub
add
out
add
or
aam
push
cmpsb
pop
neg
sahf
repz
js
insl
mov
inc
out
inc
imul
stc
int
push
inc
add
pop
sub
jmp
push
fldz
jmp
jmp
es
addl
addr16
cmp
stc
pushf
mov
js
daa
out
cli
jp
inc
push
dec
push
mov
pop
sub
mov
and
faddl
scas
push
in
and
arpl
push
mov
inc
dec
ja
jmp
pop
pop
xchg
test
xor
pop
and
pop
daa
lret
add
inc
mov
pushf
movsb
xchg
loope
inc
movsl
xlat
push
leave
int3
je
or
push
or
push
pop
loopne
out
ret
pop
fmuls
rcl
and
aam
repz
idivl
lcall
leave
leave
in
int
fstpt
in
test
neg
pop
mov
jg
sbb
jge
pop
out
and
xchg
iret
jns
cs
aad
sbb
mov
sub
or
mov
jno
repnz
es
pop
mov
out
xlat
add
out
mov
cld
inc
fdivl
sub
adc
loopne
cmpsl
repnz
cmp
jmp
into
loopne
cmp
addr16
mov
cmp
popf
xor
xlat
mov
in
mov
inc
pushf
aas
xor
xlat
cmp
sub
pop
or
xor
lock
cs
sub
add
out
push
adc
sbb
pop
or
fs
inc
sbb
loopne
or
insb
inc
clc
dec
cwtl
or
stos
and
test
je
jle
mov
inc
pop
mov
shrb
or
cmp
jle
jecxz,pn
scas
pusha
leave
into
lods
mov
sub
test
stos
insb
outsl
daa
ljmp
clc
test
inc
fidivl
lds
icebp
in
les
call
hlt
pop
push
lods
xor
jnp
mov
loope
xor
inc
mov
cmpsb
repz
mov
jns
add
push
mov
xchg
int
lahf
rcl
rorl
int
aaa
cmp
nop
adc
test
movb
pop
nop
sub
addr16
inc
rorb
jle
lods
dec
sbb
push
xchg
pop
scas
jl
dec
xchg
mov
int
pop
fisubs
or
lods
push
mov
cli
jmp
int
dec
out
xchg
inc
scas
leave
sbb
loopne
movsl
movsb
mov
push
ljmp
shlb
sbb
mov
sbb
lds
cmp
xor
pusha
test
mov
pushf
fstpl
pop
pslld
shlb
repz
sarl
js
lods
fidivrs
stos
dec
lea
bound
dec
js
enter
push
adc
push
sar
mov
jae
sub
mov
sub
xchg
fldl
std
scas
push
repnz
dec
sub
clc
mov
or
ljmp
mov
mov
fs
and
pop
pop
cmp
insl
sub
mov
jno
add
and
iret
inc
jecxz
cmpsb
loope
sbb
outsl
cmpsl
jecxz
mov
sub
insl
lcall
incl
mov
sub
cwtl
mov
loop
dec
stos
leave
xor
mov
inc
and
jge
or
sbb
cmpsl
inc
add
dec
lods
test
sub
mov
outsb
push
push
sti
lret
mov
dec
cwtl
and
pop
fildll
inc
adc
lock
cmpl
xor
sub
in
ss
add
fistl
lret
leave
sbbl
fnstcw
addl
sub
repnz
mov
adc
lcall
rcrl
cmp
add
dec
ret
cmpsb
and
or
fdivs
fwait
repz
inc
push
lret
pusha
mov
ds
scas
dec
sarl
mov
mov
add
pop
xchg
jb
add
aad
ror
movsl
les
ljmp
das
push
fiaddl
push
sub
xchg
shlb
cmp
repnz
mov
cs
xor
mov
repnz
add
mov
xor
fldcw
je
xchg
mov
pop
xchg
xchg
loop
sub
push
dec
jmp
mov
sub
lcall
sub
outsl
mov
sub
cmp
fwait
test
or
jno
mov
jno
add
cmp
mov
rolb
sbb
jmp
cmp
jmp
es
xor
jae
xchg
in
mov
xchg
lret
js
xor
mov
xchg
mov
shr
stos
scas
subb
scas
je
jg
mov
rcrl
xchg
or
dec
ret
push
fidivrs
sbb
pop
sbb
pop
les
notb
xor
fstl
adc
sbb
add
loopnew
jne
addb
pop
mov
rcrb
loopne
jae
add
test
mov
sbb
jl
in
in
fsubrs
push
sub
out
aaa
or
xor
rcll
cmpsb
cmp
out
sub
data16
xchg
jecxz
and
lods
pop
ss
imul
nop
jmp
and
pushl
mov
stos
leave
sub
sti
arpl
add
jno
jb
pop
cmp
das
stos
xor
leave
addr16
xchg
outsl
imul
movsb
lcall
scas
push
mov
cwtl
pop
inc
stc
jo
dec
and
mov
and
pop
push
pop
lcall
mov
mov
xor
sti
pop
lods
adc
stos
stos
jge
lock
dec
dec
jns
sbb
out
sbb
xchg
xchg
incl
pop
jne
xchg
mov
mov
add
test
xchg
xor
push
jmp
stos
push
fbld
scas
dec
out
je
out
mov
push
jnp
dec
lods
loope
push
sub
in
push
xchg
cmp
test
sbb
cbtw
jo
add
and
jmp
mov
mov
jo
movsb
xor
pop
es
sbb
xor
push
testl
in
mov
xor
and
adc
mov
pop
outsl
xchg
les
cld
push
xor
push
xchg
xchg
cmp
xor
hlt
mov
jne
mov
in
pushw
and
dec
cmpsb
or
mov
cmovnp
mov
ror
repnz
cmp
inc
xchg
mov
pop
mov
out
push
scas
sub
sub
pop
add
xchg
sti
stos
test
add
jle
arpl
dec
jne
xchg
and
add
lods
cs
pop
sbb
jnp
leave
test
in
or
div
out
push
dec
mov
dec
xlat
mov
sti
pop
xor
pop
dec
cmpsl
outsl
pop
sub
jno
mov
xchg
cmp
es
adc
dec
out
sub
mov
add
mov
rcrb
stc
xor
jmp
lahf
sahf
mov
in
mov
or
jge
outsl
mov
movsl
mov
mov
subl
mov
dec
test
es
outsb
ja
dec
adc
or
mov
and
xor
incb
cltd
je
adc
lods
push
out
mov
adc
aad
fld
mov
lcall
mov
notb
jp
jo
lods
stos
imul
pop
lods
iret
into
or
xchg
push
or
enter
xchg
adc
lods
int3
int
scas
stos
mov
icebp
testl
xor
or
mov
call
mov
aaa
cmp
jle
mov
cmp
xor
inc
leave
pop
cltd
mov
xor
pushf
xor
stos
lock
or
push
cltd
negb
scas
sub
mov
faddl
lret
mov
imul
sub
add
in
mov
aad
lods
sub
add
cmpsb
cmp
mov
divl
push
sbb
sub
cs
adc
std
out
sbb
mov
cld
push
xor
cld
pushl
mov
or
xor
mov
mov
fs
sbb
inc
rcll
xchg
sub
adc
outsl
loope
pop
jmp
imul
int3
pusha
lahf
xor
popa
iret
ret
adc
push
dec
dec
shll
out
popa
adc
gs
mov
imul
leave
xchg
lods
rcrl
scas
pop
push
out
gs
clc
push
cmovbe
pop
inc
sub
shl
out
gs
in
test
and
mov
mov
std
rcrb
ret
sar
xchg
aad
inc
enter
inc
stos
add
inc
das
adc
in
xor
iret
ret
sbb
jbe
or
xor
push
xor
xor
mov
dec
movntps
test
add
or
adc
bound
push
xor
lods
or
cmpsb
test
push
test
add
jge
xor
inc
push
insl
pop
in
inc
inc
iret
inc
adc
push
dec
jecxz
push
imul
dec
int3
arpl
in
sbbb
mov
add
aam
sbb
sbbb
sbb
es
jle
cmp
mov
xor
rolb
jb
fsubl
xchg
add
push
sti
pop
jle
loope
shlb
lods
mov
loopne
xchg
mov
enter
cmp
mov
out
jae
enter
mov
scas
push
rcrl
mov
divl
xchg
rcrb
stc
jmp
call
pushl
in
scas
imul
adc
lds
or
iret
mov
jecxz
sub
pop
or
nop
lods
je
xor
mov
testb
inc
pop
mov
push
xor
xor
mov
mov
movsb
enter
pop
mov
mov
pop
push
mov
sub
cmp
sahf
pop
test
and
inc
js
sub
in
or
lea
cltd
es
ljmp
and
and
in
push
lock
sbb
fsubs
mov
jnp
cwtl
jbe
outsl
daa
sbb
mov
mov
inc
inc
nop
pushf
add
in
mov
fstp
rcrb
bound
psllw
das
pop
xchg
mov
xchg
cmp
out
xor
pop
enter
push
arpl
fdivrp
add
hlt
dec
mov
xor
sub
sbbb
imul
or
sahf
sub
jne
xchg
add
movsl
sti
mov
push
cmp
ja
push
xchg
scas
das
aas
dec
dec
jbe
gs
pop
sbb
cmp
mov
jecxz
push
in
mov
push
push
xor
decl
pop
sub
push
mov
ror
and
fucompp
rcll
cli
ret
ja
inc
int
fdivr
mov
incb
aas
nopl
dec
and
or
lahf
jmp
mov
push
scas
jecxz
iret
mov
decb
ds
in
pusha
lcall
inc
inc
xor
repnz
adc
sub
sbb
sub
mov
pop
gs
jns
pop
jl
shll
mov
jl
push
mov
mov
imul
adc
push
mov
les
arpl
push
iret
mov
imul
dec
mov
push
out
ja
cmpl
pop
jns
push
cs
ljmp
sub
mov
hlt
leave
xchg
sub
mov
cmp
cwtl
inc
xchg
adc
test
mov
cltd
sbb
jb
cmp
arpl
fildll
sub
subb
aaa
jae
push
jb
leave
stos
iret
aas
xorb
mov
popa
out
mov
loopne
cld
xlat
shll
in
in
mov
add
pushf
xor
fidivs
das
cmpsb
ss
daa
and
stc
mov
loope
xchg
mov
lcall
sbb
popa
mov
fadd
add
mov
jae
insb
add
sarb
mov
cli
dec
stos
sbb
lds
sbb
xor
mov
or
shlb
icebp
cmp
mov
roll
and
push
pop
and
dec
mov
lret
dec
sub
xchg
sub
lds
or
adc
ds
nop
pop
pop
mov
lahf
jle
lahf
in
nop
jg
fcoms
jp
movsl
adc
xchg
xchg
cmpsl
pop
cmpl
push
out
add
je
stc
xchg
cmp
mov
xchg
xchg
mov
cli
stos
mov
cmp
sbb
push
pop
js
stos
add
ss
dec
icebp
out
insb
sbb
push
xor
aas
adc
ds
cmc
sahf
or
jb
jge
lods
and
inc
loopne
adc
pop
loop
push
xchg
popa
dec
ljmp
fidivrs
pop
cmp
jmp
fs
sti
and
jnp
mov
dec
fsubs
test
push
aam
jp
sbb
fstp
jae
fiadds
in
xchg
movsb
ss
cs
jae
mov
cmp
ret
hlt
mov
or
subl
nop
jo
sbb
mov
dec
sbb
push
pop
cmp
pop
pushf
addb
or
push
rolb
jno
xchg
pop
mov
fs
out
or
xchg
shl
adc
or
mov
out
leave
mov
sbb
lea
mov
sbb
andb
cmp
pusha
cmp
loop
sbb
inc
inc
sbb
ja
fwait
dec
decl
push
sahf
call
das
pop
sub
ds
pop
outsl
jno
pop
int3
dec
popa
inc
jle
fcomp
mov
mov
test
imul
sti
xor
pushw
cmc
jno
cld
leave
and
mov
repz
icebp
fstpt
pop
sahf
mov
lahf
repz
inc
jae
dec
push
push
cli
pop
imul
sarb
stos
clc
and
loop
cli
inc
ja
incl
pop
aad
popf
push
jmp
rorb
std
or
into
fbld
lret
imul
xchg
lods
dec
mov
ds
int
mov
jp
xor
and
mov
jne
ret
mov
test
loop
or
xchg
ret
subb
or
sahf
mov
aaa
outsb
gs
movsl
lea
mov
outsl
idivl
test
jno
add
adcl
or
lret
cli
mov
dec
lea
mov
ret
push
test
and
iret
insb
push
pop
outsb
aas
push
aaa
push
aaa
mov
stos
mov
mov
push
and
pop
data16
push
je
ftst
mov
popa
push
sub
jg
mov
mov
sbb
jl
or
pop
mov
push
sbb
mov
jnp
dec
and
aaa
push
push
jno,pt
lock
sbb
push
jmp
inc
xchg
jns
iret
dec
add
and
xor
stc
cltd
jg
jmp
push
ret
and
and
push
cld
jl
dec
sbb
sbb
add
add
xor
sub
mov
or
aaa
or
ja
pop
dec
adc
xor
add
or
icebp
test
sbb
loopne
movsb
mov
ds
loopne
lods
andb
or
outsl
sbb
mov
mov
mov
imul
stos
fisubrl
pop
mov
insb
and
and
or
aad
inc
out
mov
outsl
mov
jge
mov
les
das
aas
inc
nop
push
dec
inc
push
jg
mov
pop
add
fs
aaa
adc
dec
xchg
pop
cltd
cvtps2pd
sahf
das
mov
pop
xor
xor
cmp
inc
sbb
popa
in
test
dec
pop
dec
data16
aaa
jl
fmuls
lds
adc
rcl
sbb
push
xchg
inc
mov
stc
push
jno
push
stos
push
sbb
aam
lret
mov
add
cmp
xlat
cmc
fnstsw
clc
call
ret
out
sti
jmp
fnstcw
stos
xchg
clc
xor
dec
ss
repz
shll
ja
sbb
loopne
cmpsl
jge
ja
cld
xchg
in
loop
rcrb
popa
mov
pop
popf
adc
adc
adc
subb
out
pop
and
js
sarb
xchg
stos
dec
out
outsb
or
pop
cmp
inc
mov
subl
ret
jae
daa
aas
in
jle
fistl
xor
imul
fchs
jno
push
mov
ja
daa
sub
movsl
gs
sub
dec
lods
add
ret
push
sar
dec
mov
mov
inc
mov
add
and
and
mov
cltd
fistl
sub
repz
jnp
add
lods
cmpsb
out
lcall
dec
adc
imul
test
sbb
sbb
or
jae
pushf
mov
iret
mov
dec
jmp
sub
mov
cmp
mov
dec
sbb
incb
mov
aaa
or
subb
icebp
in
push
lods
jae
cmpsl
adc
jae
pop
and
mov
test
pop
dec
sbbl
scas
ss
lods
xor
es
shll
mov
jle
mov
lret
or
dec
cmpsb
dec
data16
rcl
loop
testb
xor
lds
rcl
stc
insl
sub
mov
mov
in
in
inc
mov
push
jge
xchg
push
or
cmp
call
pop
ds
xor
cwtl
aas
pop
pop
push
jne
push
push
mov
dec
lods
out
dec
subb
pop
sahf
daa
mov
lret
test
sbb
xchg
or
jo
cmp
xor
adc
jle
imull
loope
xchg
mov
jnp
xlat
dec
push
jle
xor
mov
inc
sub
xchg
outsl
sbb
in
sbb
sbb
rol
popf
push
fwait
rclb
jge
adc
jnp
pop
daa
ljmp
jno
nop
xchg
nop
and
lds
mov
fstl
mov
imul
ret
inc
push
push
sbb
sti
jne
pop
imul
shlb
and
inc
inc
mov
mov
mov
xorl
inc
add
mov
xor
mov
xchg
leave
mov
add
xor
fstpl
movsb
les
jnp
push
sbbb
xchg
gs
dec
or
mov
sub
or
arpl
inc
call
mov
test
pop
loop
lret
stos
hlt
int3
leave
outsb
loope
test
inc
sahf
pushf
lahf
adc
mov
mov
cmp
out
add
stos
push
iret
test
pop
push
imul
xor
lea
fildll
sub
jne
jge
push
cmpb
or
adc
mov
ret
xor
daa
adc
and
fildll
add
xor
in
push
jmp
mov
adc
inc
dec
jbe
imul
add
cli
xchg
cmpsl
jns
icebp
jg
in
or
xchg
dec
lcall
cmp
gs
leave
or
push
fwait
stos
rcrl
sub
inc
mov
dec
push
dec
rep
js
jne
stos
inc
leave
in
inc
inc
es
jne
das
pushf
push
ret
sti
sbb
sbb
test
loope
push
out
adcb
in
sub
xor
pop
cld
sbb
jne
jl
ds
adc
pop
bound
pop
mov
pop
xchg
and
pop
add
push
iret
dec
pop
cs
cs
pop
test
jne
mov
sahf
push
icebp
cmp
movsb
insl
repnz
dec
sub
stos
xor
xor
mov
mov
xchg
or
subb
stos
or
jb,pt
orb
test
mov
jbe,pt
mov
inc
fs
or
jnp
rcrl
adc
mov
or
add
dec
jae
inc
test
inc
cmpsb
stc
push
rcrl
stc
les
add
mov
ret
xchg
out
mov
jne
ja
jmp
idivl
sub
enter
scas
add
insb
aam
mov
es
mov
das
push
aas
clc
fdivrp
in
ds
adc
sub
xor
push
movsb
es
sbb
xchg
idiv
jmp
ljmp
test
jb
push
das
es
xlat
addb
aaa
mov
imul
rorl
or
fisttpl
and
inc
mov
loope
out
pop
jle
jb
pop
add
bound
cmpsl
inc
sbb
in
push
cmp
int3
dec
mov
inc
fs
mov
or
inc
popa
aaa
jb
xchg
mov
sbb
sbb
mov
scas
js
cmp
ja
jp
add
add
and
inc
mov
mov
test
fiaddl
rol
push
lret
movsl
jg
in
cmc
into
subb
lds
sub
push
mov
mov
daa
mov
sti
clc
ja
pusha
mov
lock
mov
mov
hlt
push
dec
into
das
fcomps
mov
xor
aas
cli
cmp
bound
lret
stc
int3
xchg
or
mov
cmpsl
mov
sbb
xchg
dec
aam
movsl
movsl
add
cmpsl
xchg
bound
into
sbb
adc
inc
xchg
je
test
xor
pushf
pop
inc
inc
inc
mov
add
lock
xor
aas
add
js
les
cld
cmp
cs
push
jp
lods
outsl
push
sub
iret
popa
loope
mov
fildll
mov
push
les
int
outsl
inc
mov
sbb
xchg
scas
xchg
movsl
dec
cli
negb
sub
lock
popa
dec
ljmp
sbb
dec
scas
push
aam
ljmp
sti
xchg
push
add
call
push
sbb
cltd
jge
js
push
mov
or
add
add
ss
loope
repz
jns
stos
ss
fucomip
enter
sub
and
xor
mov
push
pop
pop
aam
sub
dec
aaa
or
sub
cmp
mov
mov
jno
mov
sbb
xlat
filds
or
dec
sub
xor
sub
in
int3
add
sub
sbb
in
movsb
mov
loope
inc
or
loope
pop
dec
or
idiv
sub
cmp
repnz
add
mov
sbb
dec
ficoms
fdivs
and
nop
or
ret
mov
xor
push
inc
add
pop
push
push
xchg
hlt
mov
out
cs
push
fiadds
mov
push
mov
push
inc
in
insb
int
out
lods
dec
pop
mov
mov
cld
jl
xchg
sbb
add
jnp
jg
pop
xchg
dec
gs
pop
lods
jb
adc
jns
outsb
jecxz
in
jbe
push
sbb
adc
cltd
out
cmp
or
cmp
out
mov
jmp
mov
mov
add
test
sbb
jp
nop
shrl
xorb
sti
sub
test
stos
xor
dec
cwtl
lret
or
js
add
push
sub
sub
jbe
pop
movsb
pop
movsl
repnz
sub
jge
and
mov
sbb
inc
insl
mov
into
sub
sbb
inc
adc
add
inc
arpl
ret
lods
loop
jle
mov
adc
cmp
rclb
pop
cmpsb
int3
sub
add
scas
push
addr16
out
xchg
stos
les
inc
sbb
add
ljmp
cmp
jo
int
mov
mov
movsb
test
pop
xchg
cmp
jb
into
dec
loope
outsb
mov
mov
stos
test
test
or
addr16
xor
loopne
mov
es
loopne
cmp
shrb
scas
nop
add
xor
push
data16
cltd
and
pop
popa
cmp
dec
push
adc
push
int
sub
mov
inc
add
icebp
fsubl
mov
push
xchg
sti
movsb
test
jne
in
js
out
imul
cmpxchg
dec
fldenv
imul
or
imul
shlb
jl
push
dec
pop
neg
sub
rolb
pushf
and
cltd
nop
hlt
and
xchg
xchg
jmp
jmp
adc
jmp
nop
jbe
cld
mov
push
push
cmc
adc
fs
add
pop
out
mov
cwtl
test
push
push
adc
pusha
sarl
ficomps
push
pop
jo
mov
pushf
sbb
mov
in
sbb
or
fwait
inc
mov
xchg
adc
in
cmp
push
xchg
repz
fsincos
xor
lahf
jbe
inc
mov
push
sbb
and
or
js
add
popa
mov
iret
pop
repz
fcompl
cmp
inc
imul
jle
adc
daa
push
aaa
inc
filds
ret
xchg
jnp
cs
sub
xchg
rorb
xchg
xchg
sbb
add
push
out
push
lods
mov
out
popa
and
adcb
xor
adc
cmp
loope
mov
or
xchg
adc
pop
mov
mov
stos
sub
hlt
mov
dec
iret
imul
mov
mov
repnz
lret
imul
xchg
jge
inc
jno
inc
mov
xor
mov
ficoml
push
out
sbb
mov
cmp
xlat
jmp
jb
outsl
jp
pop
xchg
add
mov
dec
pop
pop
mov
sub
xchg
js
aad
nop
inc
int
outsb
mov
lods
out
sub
mov
lret
daa
scas
mov
fprem
push
imul
test
repz
xor
int3
pop
lcall
xor
fnstcw
xor
push
push
mov
push
xchg
movsb
sbb
lock
test
jo
lcall
mov
icebp
and
insl
gs
push
mov
hlt
xor
mov
push
addr16
mov
jo
out
mov
cmpsb
cltd
inc
test
push
mov
dec
cmpsl
shl
sti
cmp
in
outsl
jmp
inc
mov
cmp
daa
leave
out
xchg
repz
fs
cwtl
rcl
xchg
jbe
in
jp
addr16
dec
movsb
mov
jns
pusha
mov
inc
xchg
cmc
mov
cli
aaa
and
mov
xchg
int3
insb
or
inc
popa
pop
push
cmp
push
jno
aam
mov
cltd
out
stos
pusha
ja
and
xchg
addr16
sarl
lret
and
in
mov
add
in
sub
fwait
mov
dec
add
xor
js
sahf
pop
gs
sbb
das
and
mov
inc
icebp
push
sub
sbb
add
test
out
sub
lret
xadd
fistpll
ss
cmp
and
in
shl
lock
mov
je
ja
enter
cmpsb
aam
fidivs
lret
adc
test
mov
jmp
shrl
push
rclb
xor
scas
orb
mov
jno
test
mov
lea
dec
pusha
sub
push
inc
insb
lock
and
sbb
sbb
mov
stc
jecxz
mov
sub
and
dec
frstor
mov
cs
gs
rcrb
and
mov
in
ficoml
and
xchg
leave
in
xlat
pop
cld
and
lock
adc
hlt
jp
out
sahf
int3
in
push
sub
movsb
in
cltd
mov
stc
jmp
ja
fsubrl
lahf
and
mov
sbb
or
xchg
sbb
or
int
xor
movsl
jecxz
addr16
lods
mov
ret
mov
clc
mov
inc
or
daa
jecxz
jnp
inc
loop
sarb
or
dec
lret
push
mov
imul
xchg
out
adc
adc
jb
sarl
jecxz
xorl
aas
mov
cli
scas
xchg
inc
stos
das
xlat
gs
iret
das
loopne
je
mov
mov
scas
dec
jmp
xchg
mov
out
ror
push
inc
sahf
xor
in
subl
addr16
out
dec
inc
cmpl
ljmp
pop
cli
insl
xchg
sti
mulb
mov
cmp
sarb
or
dec
hlt
inc
push
inc
popa
testl
bnd
and
aas
bound
and
shl
xlat
cwtl
lea
jmp
popa
jnp
xchg
ret
or
loope
daa
ficompl
or
or
fcoms
inc
imul
pop
sub
inc
movsb
daa
xchg
pop
push
mov
adc
mov
ds
scas
pop
pop
fcompl
popa
popa
inc
and
in
sbb
sbb
dec
out
push
add
mov
mov
ja
jle
sub
fsubs
sbb
aad
sbb
xchg
fs
jnp
loope
or
imul
sub
mov
pop
xchg
orb
jmp
pushf
test
int
std
xchg
in
inc
pop
sub
xchg
adc
cs
call
or
icebp
out
sbb
data16
les
sahf
hlt
lahf
jg
xor
and
sahf
aam
sub
jne
xchg
cmpsb
dec
fmulp
js
xor
daa
cmp
out
rcll
divl
pop
idivl
push
push
test
jae
cld
mov
loopne
aam
cs
test
sub
into
loope
push
fstl
mov
dec
movsl
test
mov
push
mov
cwtl
pop
call
fwait
mov
pop
into
mov
out
or
loopne
dec
pushf
pop
loopne
xchg
xor
dec
mov
sbb
ljmp
or
inc
add
push
hlt
outsl
push
fsubl
jl
ret
jl
mov
jmp
bound
xor
stc
push
inc
out
imul
sub
lcall
cmp
inc
pushf
jo
mov
pop
xchg
in
cmp
movsl
repz
or
std
sbb
xchg
mov
or
movsb
cwtl
dec
mov
add
mov
sub
rclb
lahf
xchg
adc
test
outsb
std
mov
xchg
mov
dec
pop
dec
xchg
lea
popf
or
mov
add
jbe
js
das
imul
arpl
data16
jmp
outsl
int
sub
andl
scas
sbb
loop
mov
jg
xchg
lret
int
add
inc
push
lss
xchg
insb
dec
mov
cltd
mov
loopne
cmp
scas
pop
lods
test
mov
mov
cltd
movsb
add
xlat
paddb
mov
jmp
loope
sarl
cli
sub
mov
or
rorl
int3
jl
mov
inc
fwait
mov
jae
jge
das
sub
cmp
or
ficoms
jp
pop
mov
in
sti
mov
cmp
cmp
mov
push
mov
jge
popf
iret
xchg
xchg
jbe
sti
mov
mov
xor
mov
cltd
push
clc
aas
inc
nop
mov
sub
xor
cmp
ret
cmp
pushf
testb
push
xchg
test
dec
jge
in
cwtl
enter
cmp
inc
rorl
sub
push
mov
das
call
into
mov
fdivrs
mov
adc
les
cmp
sub
mov
dec
fcoml
adc
push
cs
jp
das
clc
in
pop
punpckhdq
mov
pop
xchg
ds
idivl
das
adc
loopne
cmp
cmp
fisubl
fwait
jmp
cltd
xlat
mov
out
jae
nop
or
pusha
cmp
ljmp
mov
jl
xlat
ds
and
adc
lahf
dec
and
sub
xlat
mov
test
in
test
sahf
jmp
ja
jne
test
and
sub
lret
icebp
xor
movsl
outsl
arpl
mov
ss
sbb
mov
mov
in
or
addl
pop
scas
or
jae
mov
repnz
out
and
dec
xchg
outsb
stc
add
dec
shrl
loope
decb
sar
add
mov
or
mov
xor
or
pusha
jecxz
mov
scas
lea
adc
lock
mov
dec
out
fnstcw
cmpsl
sbb
sbb
sub
mov
push
mov
and
sub
pop
mov
pop
jecxz
mov
cmpl
lret
icebp
mov
adc
jns
loopne
push
xchg
jp
lcall
ret
mov
movsl
push
enter
mov
sub
test
repnz
add
pop
shrb
out
movsl
jmp
lret
aam
sbb
jne
rorl
aam
push
into
aam
nop
sub
ficompl
loopne
and
dec
sbb
test
ja
mov
adc
test
in
aas
cmp
pcmpgtb
inc
and
insl
lds
ds
mov
dec
mov
test
ljmp
cmpsb
faddl
roll
dec
jmp
shll
mov
jnp
es
adc
sub
push
clc
jnp
xlat
xchg
je
insb
shrb
gs
push
sbb
mov
mov
dec
ja
or
call
mov
lret
dec
sub
imul
jecxz
push
movsw
push
jmp
cmp
out
aam
cli
shll
and
pop
xor
mov
push
or
outsw
shrl
cs
scas
xlat
inc
inc
jmp
pop
iret
adc
sub
mov
enter
ljmp
mov
rolb
inc
aaa
js
cmpl
enter
fldenv
push
arpl
out
pop
sub
xchg
mov
push
les
pop
loopne
mov
adc
inc
jl
jg
stc
lods
in
add
dec
stos
fdivl
sbb
shrl
orb
ficoml
add
jne
out
push
pusha
mov
jge
hlt
in
sub
in
in
inc
xor
loopne
cmp
dec
insb
push
xchg
xchg
jb
xlat
sete
jge
jae
nop
cmc
sbbb
lods
outsb
push
ljmp
xor
push
fisubl
mov
cmp
lret
movsl
outsl
std
xchg
arpl
sub
mov
jecxz
or
sub
or
xor
pop
lret
iret
stc
lds
jne
mov
insb
mov
sub
shr
stc
lret
cmp
sub
push
fmuls
pop
cld
cli
loopne
sub
push
cld
sbb
leave
imul
push
cmp
push
and
gs
pop
mov
mov
mov
push
aad
loopne
xor
shrl
xchg
fdivl
dec
sbb
sbb
or
js
inc
sub
adc
cmpsl
popa
cld
xor
les
adc
aad
push
jns
fldt
pop
stc
or
test
icebp
add
ss
enter
xor
ja
clc
mov
push
icebp
adc
inc
inc
cmp
jb
sub
or
je
or
or
movsl
dec
loopne
je
imul
call
push
inc
fcmovne
call
jmp
mov
push
mov
cmp
pop
adc
sub
rorl
xchg
pop
cmc
js
clc
pop
popl
subb
pop
inc
dec
negl
inc
sbb
movsb
lcall
add
sti
xor
jmp
addl
mov
int3
xchg
or
or
notb
jns
xchg
mov
mov
jb
ficoms
inc
sbb
jno
sahf
stos
inc
and
jecxz
mov
mov
rcr
push
inc
jmp
sbb
lcall
or
lock
cmp
pop
adc
cli
mov
loopne
dec
orb
push
pop
cmp
out
cmp
adc
pop
pusha
shll
adc
mov
push
adc
cmpsb
pop
test
xor
mov
pop
je
in
into
xchg
movsl
fadds
stos
aas
leave
push
cld
pop
aad
dec
inc
mov
xchg
mov
inc
popf
aad
iret
arpl
inc
out
adc
lret
imul
outsb
les
enter
outsl
sub
and
push
xorl
mov
jnp
adc
mov
pop
inc
mov
mov
push
adc
xor
imul
ficomps
cmpsl
xor
sub
cld
mov
les
cmp
ret
push
out
bound
stos
xchg
pop
xchg
lods
leave
clc
negb
pop
mulb
push
jle
inc
jp
xor
cltd
adc
out
out
loope
hlt
sarl
ljmp
xchg
adc
xor
jbe
fdivrs
daa
bound
addb
ret
fdivs
pop
mulb
mov
lock
mov
xchg
lea
or
xlat
jno
xor
mov
mov
dec
cld
not
lds
push
xor
adc
dec
and
adc
pop
outsl
popf
stos
stc
dec
or
jle
xor
pop
cmp
loopne
xor
int3
mov
dec
lcall
pop
lods
push
je
mov
mov
shrb
sub
mov
push
push
add
mov
aaa
xchg
pop
push
adc
push
rcrl
insl
hlt
enter
or
adc
pop
in
xchg
lods
fs
xchg
imul
inc
xchg
lods
popf
mov
push
dec
pop
into
mov
cltd
fldenv
or
test
mov
pushl
mov
lods
insl
and
mov
jl
test
fisttpll
add
fmuls
dec
testl
in
lcall
into
inc
add
xchg
dec
mov
mov
sbb
sbb
daa
imul
in
movsb
fistpll
sbb
loopne
arpl
je
lcall
xchg
pop
movsl
adc
mov
or
mov
lods
sub
inc
push
loop
fidivrl
testl
inc
les
mov
mov
lods
push
xor
pop
into
mov
mov
add
jl
xor
mov
jne
mov
pop
adc
arpl
bound
mov
mov
or
dec
add
lret
enter
jle
or
lahf
jae
push
and
icebp
mov
mov
ds
rcll
out
leave
lcall
enter
jle
outsl
lcall
inc
xor
cs
jmp
sbb
repnz
loope
jle
push
sbb
ret
ds
mov
add
pop
fcoml
cmpl
scas
test
not
xlat
push
add
pop
sahf
sbbb
sarl
sbb
lods
jge
mov
pushf
mov
cltd
or
push
stc
test
jg
xor
mov
ja
cmp
jmp
stc
loopne
test
clc
ret
mov
push
inc
cmp
icebp
pop
inc
int
test
out
jne
lcall
enter
add
ret
push
clc
into
xor
xor
popa
sbb
pop
cmp
xchg
pop
jmp
mov
push
pop
outsl
fs
in
jmp
jecxz
rcl
lahf
daa
and
or
add
mov
mov
outsb
je
adc
lcall
dec
and
mov
stos
xlat
inc
aaa
scas
jns
movsb
or
int3
lret
add
ja
aad
push
push
add
aad
adcb
enter
inc
sahf
dec
lret
shrl
movsb
mov
mov
inc
in
push
outsl
aas
adc
jnp
add
jge
pop
dec
lds
inc
jge
sub
addr16
repz
loopne
sub
sbb
stos
ds
pop
movsb
mov
cltd
inc
add
push
inc
mov
jecxz
sbb
testb
xchg
mov
lds
test
jle
ds
insl
jae
pop
fwait
mov
xchg
jo
loopne
pop
aad
les
xchg
sbb
or
xor
push
aaa
fdivs
shr
xor
mov
pop
push
jbe
mov
mov
sub
mov
and
pop
out
cmp
or
test
mov
sub
mov
aas
inc
insb
scas
pop
out
imull
dec
mov
dec
ljmp
add
lcall
mov
jle
dec
fxch
xchg
loope
pop
outsl
inc
adc
lea
xchg
cmp
pop
lret
pushl
leave
push
jbe
enter
test
repz
fisttpl
mov
loope
adc
loope
cmp
cmp
fwait
jne
cwtl
cmp
pop
push
jmp
stos
adc
repnz
xlat
pusha
xor
sbb
xor
int
jle
in
or
or
adc
mov
shlb
call
mov
adc
dec
pop
xchg
jg
add
dec
scas
xchg
mov
int
push
jge
cli
bound
mov
ret
adc
cmpsl
out
xchg
pop
jne
aad
dec
andl
pop
std
repnz
mov
mov
push
rolb
xchg
mov
std
sbb
jns
jge
mov
inc
xchg
pop
testl
pop
test
ds
hlt
movsb
shll
or
movsb
rcrb
xchg
into
push
pop
pop
sbb
push
lods
mov
push
cld
test
outsl
in
mov
fsubs
out
xchg
nop
rolb
mov
cmc
ftst
out
test
dec
cli
or
rcrb
lcall
inc
push
lcall
push
cmp
xchg
or
loopne
xchg
jge
fdivrp
stc
mov
sub
sahf
outsl
adc
mov
inc
xchg
daa
sub
pop
jp
roll
sti
xor
hlt
inc
outsl
imul
inc
or
adc
in
fldenv
add
clc
ret
adc
add
mov
dec
jno
push
xor
add
mov
jg
and
cmp
clc
loope
in
leave
clc
lds
jp
xchg
xor
rorb
cwtl
arpl
movsl
pop
popa
lods
test
rcrb
pop
scas
dec
push
loope
data16
mov
push
les
lods
loopne
cmp
add
out
xlat
fnstenv
pop
enter
loopne
mov
add
out
push
sbb
stos
cltd
pop
mov
pop
push
mov
cld
push
dec
xchg
in
sbb
loop
or
enter
pop
rolb
scas
pop
sub
into
dec
aaa
iret
jg
jl
rol
jne
enter
jb
arpl
jecxz
adc
jmp
or
arpl
enter
repz
adc
jle
fdivs
test
mov
push
mov
inc
fwait
out
dec
inc
dec
mov
pop
pop
cmpl
cmp
adcl
jo
xlat
insb
mul
jb
pop
add
xor
aas
xor
or
lret
paddq
mov
push
cmpsl
xor
fldenv
cmp
out
loop
movsb
xchg
insb
lea
mov
mov
mov
mov
and
push
mov
push
sar
int3
ret
lret
cwtl
insb
lret
push
shll
xchg
xor
out
add
out
inc
push
into
adc
adc
popf
addr16
pop
aam
add
clc
pop
fisttps
push
lods
dec
and
and
mov
das
test
es
js
test
push
push
adc
in
pop
fiaddl
push
adc
cmp
fldl2e
aam
push
rclb
xchg
mov
leave
mov
fdivr
decl
out
adc
orl
loopne
xorb
sbb
daa
aas
jbe
enter
push
inc
or
fwait
lods
ror
sbb
pusha
xchg
arpl
add
inc
mov
lods
movsb
popa
cli
lcall
add
jnp
cli
leave
xchg
cmove
mov
mov
cmpb
jg
bound
fsubs
adc
inc
movsl
lods
add
jnp
add
stos
adc
xor
mov
mov
pop
lds
xor
out
loop
mov
leave
inc
sub
mov
ficomps
sarl
adc
cs
add
mov
nop
sbb
outsl
adc
lahf
fs
or
push
popa
pop
and
xor
xor
insb
lds
mov
pop
es
or
out
arpl
lret
roll
mov
cmpsb
push
popf
dec
jp
sub
fwait
lcall
mov
dec
aad
xor
push
lahf
and
fisubl
sti
inc
imul
ja
xor
into
pop
in
dec
push
add
add
push
fwait
xchg
data16
adc
aam
add
and
pop
neg
fwait
je
outsb
lcall
dec
je
cltd
add
sub
xchg
or
add
mov
outsl
in
outsb
imul
jne
clc
imul
mov
roll
inc
adc
push
dec
xor
dec
in
cwtl
jp
fsubrp
scas
aas
xorl
jno
cmp
jecxz
pusha
in
lods
in
sub
sbb
fyl2xp1
addr16
mov
and
stos
push
xor
iret
aam
pop
scas
push
xor
or
std
daa
adc
jl
stos
cmp
ds
decb
cwtl
pop
sbb
xchg
or
add
lock
and
aaa
push
repz
and
lret
aas
aad
fimull
popf
sub
imul
mov
xchg
push
xor
cmp
adc
aas
add
cmp
push
push
es
jp
jnp
arpl
inc
and
enter
and
jne
xor
pop
test
jp
push
jo
lea
xchg
adc
bound
mov
stos
cmp
xor
hlt
andb
or
or
cli
filds
lea
mov
in
push
jl
sbb
pop
pop
inc
fdivl
pop
inc
fistpll
and
push
cmp
push
xchg
push
or
rclb
dec
dec
cmp
cld
int3
push
lahf
js
scas
add
push
bound
add
clc
and
movsl
adc
xor
xchg
popl
addl
jo
mov
js
movsb
sbb
fs
xchg
out
rcll
into
mov
xchg
frstor
popf
shrb
cmp
push
xor
sub
aam
lea
sarb
scas
sbb
outsl
jne
jbe
mov
sub
in
inc
ds
lret
push
dec
dec
sub
add
leave
bound
imul
rolb
inc
js
xchg
xor
ja
or
jmp
es
fidivs
out
and
outsl
insb
or
test
fs
scas
sub
or
je
jb
in
fs
jg
dec
lcall
cmp
cmp
pop
into
xchg
ss
or
mov
jne
push
stos
hlt
imul
cmp
push
aad
push
rorl
adc
outsl
xchg
outsb
sbb
cmpsl
push
mov
adc
into
outsl
cmpsb
add
mov
lret
repnz
cli
test
stc
lea
mov
push
sti
or
int3
cld
sbb
pusha
xchg
xchg
sbb
fildl
mov
aaa
xlat
lock
jg
jge
jno
sub
push
xchg
cltd
stos
stc
ja
jbe
dec
cli
mov
or
adc
test
sub
je
adc
loopne
add
stos
pop
test
and
mov
fdivrp
cmp
and
sarb
cmp
sub
lds
out
dec
imul
lods
jg
add
xor
hlt
push
repnz
adc
xchg
sbb
adc
mov
in
outsb
clc
sbb
mov
je
popf
sbb
pusha
test
sub
push
and
lcall
enter
add
scas
xchg
loop
ljmp
mov
push
clc
jge
fisubs
out
or
pop
jb
jnp
add
icebp
fisttpll
or
mov
sbb
push
cmc
fdivs
or
jne
jae
daa
mov
pop
clc
cmp
lods
xchg
jne
jp
cwtl
push
imul
xor
stos
movb
imul
outsb
push
push
xchg
aaa
arpl
icebp
fisttps
adc
cli
lahf
fldl2e
mov
ficomps
fs
in
fs
pop
stos
in
adc
sti
sti
dec
xor
xlat
mov
stos
xchg
inc
inc
dec
cmp
push
cmp
and
lahf
or
js
and
out
xchg
aaa
in
pop
aaa
inc
jnp
xchg
lahf
lds
fcoml
xor
pop
aaa
xchg
scas
push
fsubr
mov
lds
daa
insl
das
sub
add
outsl
or
mov
jecxz
xchg
sbb
lock
push
stos
mov
data16
xchg
xchg
xlat
ret
das
pop
xchg
xchg
ret
add
pop
jno
aaa
xchg
xchg
icebp
mov
pop
aam
imul
rcll
in
mov
inc
lret
lock
sub
adcb
mov
sbb
fmull
mov
iret
mov
out
mov
sbb
cltd
mov
xor
call
repz
jae
pop
arpl
add
sbb
fcoml
loop
andl
mov
inc
sbb
out
imul
data16
xchg
sbb
dec
xorl
push
int3
sbb
inc
fsts
or
inc
inc
shr
pop
dec
or
mov
scas
out
jmp
call
lcall
pop
fists
dec
and
push
ds
push
mov
jge
jno
ja
mov
pusha
repz
notl
dec
jo
xor
cld
pop
enter
xchg
ljmp
mov
mov
mov
mov
out
xchg
ficoml
outsb
nop
ret
and
xor
jnp
dec
cwtl
mov
addb
fs
xchg
les
xchg
rcrl
out
dec
and
in
push
and
aas
ds
xor
popf
call
repnz
and
lock
dec
mov
fstpl
repnz
xlat
sub
pop
fcomps
push
daa
fldenv
mov
mov
or
adc
mov
mov
jmp
jbe
inc
sbb
push
push
lock
mov
jb
gs
stos
ds
sti
jmp
scas
sbb
fsubr
pop
dec
cs
jbe
add
sub
fstpt
subb
mov
jns
out
and
movb
mov
cmp
mov
lods
cld
and
mov
movsb
pop
add
call
adcl
dec
and
pop
cld
xchg
xor
pop
and
popf
sub
jg
cltd
inc
gs
inc
xor
pop
pushl
ds
pop
movsl
mov
mov
add
js
dec
dec
sahf
daa
aas
mov
clc
addl
sbb
xor
or
pop
out
mov
jae
insb
dec
test
sub
mov
jl
test
mov
scas
jns
dec
mov
ds
lret
dec
sub
roll
push
loop
pusha
pop
lret
jo,pn
les
cmp
stos
cwtl
arpl
inc
out
dec
bound
lea
pop
test
jb
sbb
mov
adc
push
push
inc
mov
add
aaa
dec
mov
mov
dec
lret
sarl
sub
xor
imul
adc
inc
movsl
mov
cli
in
add
cs
jbe
clc
mov
sub
cmp
sbb
and
stc
cld
inc
push
push
cmpsl
pusha
xor
jg
sahf
fs
mulb
cs
pusha
into
jnp
sub
sti
sarb
xchg
add
xor
pop
adc
sbb
ds
into
mov
fwait
js
sub
xor
lret
xchg
jae
sbb
mov
and
das
mov
and
fs
lock
and
fcompl
das
ja
add
mov
enter
pop
into
sub
push
mov
inc
lds
jnp
pop
cmp
stc
call
sbb
call
pop
inc
jmp
pop
mov
je
pop
cmp
sahf
out
pop
add
sarl
push
mov
dec
rorb
mov
nop
test
pop
dec
jnp
cmp
sub
ja
xor
xor
std
xor
lock
add
and
lret
xchg
cltd
pop
in
hlt
xchg
or
xlat
icebp
repz
jae
pushf
push
xchg
lods
cli
aas
jbe
fbstp
sub
je
dec
add
xchg
jp
ret
mov
aam
mov
inc
mov
repz
jo
adc
cwtl
cmp
clc
or
cmp
call
pop
sub
push
inc
xchg
scas
movsb
or
test
test
mov
adc
enter
fdivs
xor
test
xor
push
ret
leave
mov
pop
cmp
and
es
mov
nop
xor
lahf
rclb
imul
icebp
movsb
inc
cli
cli
sar
shlb
cmp
shrl
stos
xchg
shlb
mov
and
daa
stos
or
sbb
hlt
call
mov
rcll
stos
neg
mov
lahf
out
mov
insb
loope
adc
push
loopne
mov
loopne
sbb
je
out
std
lea
repnz
cmpsb
mov
js
xchg
pop
popa
add
push
fcomp
mov
xchg
pop
mov
sub
xchg
sarb
mov
js
loop
add
sarl
jmp
xchg
cmp
and
and
sarl
hlt
cltd
cs
and
cld
add
inc
xchg
sub
or
icebp
pop
out
mov
jmp
mov
scas
ret
xchg
xchg
adc
pop
lods
fcoml
jbe
enter
test
cmpl
add
out
xchg
dec
push
outsl
add
cltd
xchg
pop
ret
mov
jp
or
cmp
dec
aad
mov
fldenv
and
mov
and
or
into
fidivs
jne
mov
push
mov
into
inc
and
scas
inc
addl
push
mov
mov
and
xchg
insb
mov
add
cmp
jb
imul
test
mov
sub
mov
pop
and
cmp
mov
testl
push
shlb
inc
sbb
mov
sbb
ja
dec
insb
add
sub
dec
and
sbb
movsl
add
inc
add
es
pop
scas
pop
add
inc
test
repnz
fldl
cmp
stos
push
and
sbb
cmp
add
outsl
insl
xchg
sbb
sbb
cmp
mov
icebp
inc
fwait
outsl
adc
mov
mov
aas
adc
dec
dec
pop
bound
pop
ja
popf
frstor
fdivl
mov
sub
pop
rcr
xchg
dec
and
loopne
out
dec
add
std
and
mov
call
inc
lods
cmp
lahf
cltd
mov
shl
in
lcall
jns
mov
outsl
fwait
int3
push
push
mov
xchg
in
mov
xor
cmpb
sbb
xchg
inc
and
mov
mov
jecxz
sub
ja
ljmp
fnstsw
andl
ljmp
mov
rorl
sbb
push
int
mov
sbb
adc
lods
sbb
in
sub
test
bswap
dec
mov
add
adc
mov
pop
sbb
add
jno
push
sarl
mov
nop
jmp
push
sar
sub
xchg
sahf
test
push
stos
in
sbb
daa
dec
scas
outsl
data16
shrb
xor
sbb
cmp
addb
js
mov
jbe
xchg
shr
int3
ds
mov
mov
push
mov
jmp
loopne
fwait
cld
cmp
push
aam
sti
sub
aaa
into
cs
fwait
dec
or
shlb
xorb
or
sbb
inc
pushf
lds
stos
mov
mov
mov
xchg
jb
movsbl
fdivl
or
or
ljmp
xchg
jae
jl
pop
dec
imul
fcmovb
fadd
je
icebp
adc
xchg
into
rcl
shrl
mov
cli
insb
adc
outsl
pop
mov
pop
jmp
stos
rorb
mov
mov
jns
roll
dec
push
pop
sbb
xlat
push
mov
leave
sbb
retw
sbb
cwtl
fxch
cmpsl
mov
mov
rol
and
and
push
fstl
popa
test
xchg
out
movhlps
stos
xchg
inc
mov
loop
adc
cmp
cmp
pop
adc
sub
scas
mov
mov
pop
lods
pop
es
mov
inc
cld
and
orl
add
test
lahf
popa
loopne
add
sbb
ds
fisttpl
xchg
or
cmp
addr16
xor
mov
push
in
xor
test
out
push
mov
test
lret
je
int3
xchg
insb
sahf
sub
cmp
cmp
jg
lock
in
sub
rolb
les
popf
adc
inc
leave
push
and
jl
daa
popa
lcall
cld
sub
sub
idivb
andb
lret
xchg
pop
add
fsub
or
sbb
jbe
mov
mov
push
pop
or
lods
mov
rorl
test
imul
stos
aam
hlt
jp
adc
push
cmpsl
daa
and
aad
int
std
pop
inc
shl
adc
add
clc
out
testb
cmp
setb
xchg
xchg
pop
mov
js
sbb
sub
popa
bound
dec
ja
mov
add
lock
lock
clts
mov
jae
xor
jae
pop
jp
add
sarb
inc
cld
loope
out
enter
test
inc
incl
repnz
arpl
and
cs
mov
fsubs
jecxz
hlt
lods
cmpsb
lahf
dec
or
xchg
push
call
cmp
inc
shlb
stos
loop
sbb
push
pop
pop
rcrl
sahf
and
pushl
shll
inc
faddl
repz
add
push
xchg
jnp
jmp
pop
rcrl
mov
sbb
push
inc
push
xor
adc
sub
in
jl
xor
jp
sub
aam
jb
xchg
push
push
sub
pop
mov
mov
xor
mov
lret
les
pop
lcall
clc
inc
adc
aas
aas
jns
mov
lret
xchg
test
rolb
into
call
dec
jnp
xchg
dec
aam
rolb
stc
or
cltd
imul
pop
notb
mov
dec
outsl
cmp
fiadds
add
push
sub
add
mov
testb
push
shrb
add
cmp
adc
in
sbb
popfw
sti
jae
sbb
rcrb
mov
dec
daa
andb
lds
pop
jb
jb
inc
cmpsl
dec
mov
shr
scas
addl
jge
adc
jae
cltd
daa
jns
jmp
mov
xchg
inc
popf
or
cmp
jbe
push
add
ss
pop
mov
int3
jno
mov
and
lds
cmp
ret
cmc
add
mov
sub
bound
and
movsb
and
xor
add
jb
adc
sbb
and
icebp
sub
cmp
loopne
add
ret
adc
push
add
sub
cmp
lods
or
cmp
xor
outsb
data16
cli
xorb
les
push
pop
add
jecxz
test
lds
mov
xchg
cltd
push
cmp
jo
lret
insb
xchg
or
and
inc
xor
xor
icebp
lods
xchg
xlat
cs
xchg
shll
aas
push
mov
sahf
pop
sarl
call
test
cmc
jae
push
dec
mov
or
mov
mov
push
pop
mov
and
fwait
or
loop
and
js
test
clc
clc
aas
notl
jb
int3
outsb
and
pusha
jb
lods
shr
cs
mov
arpl
lcall
jmp
mov
or
mov
or
push
xor
sbb
xchg
cmp
mov
fdivs
adc
pop
mov
sub
mov
sub
es
inc
inc
pop
daa
xchg
iret
add
movsb
pop
pop
cmp
test
sub
mov
lret
cmpsl
stos
lods
mov
dec
pop
mov
sar
mov
addr16
and
xchg
mov
xlat
rcrb
shl
mov
jp
xchg
adc
pop
dec
clc
imul
fisttpll
sub
movsl
ds
adc
pop
mov
pop
pushf
push
jg
cwtl
xchg
adc
mov
leave
popf
outsb
fwait
mov
adc
mulb
hlt
mov
mov
or
cmpsb
pop
repnz
or
arpl
scas
shlb
inc
xchg
test
rorb
das
pop
or
xor
push
xchg
sbb
lods
or
inc
out
pop
test
mov
sub
jae
xchg
push
xchg
adc
daa
inc
dec
mov
jmp
xchg
outsl
test
inc
in
push
push
adc
sub
ja
mov
cmpsb
push
mov
xor
push
shlb
in
xchg
aaa
inc
into
sbb
add
stos
sbb
sbb
lock
fisubrl
cmpsb
sbb
fs
fnstsw
mov
push
or
mov
pop
outsl
jae
lods
mov
leave
popf
cltd
mov
enter
icebp
mov
ficomps
cmp
jg
push
out
lcall
xorb
mov
pop
xchg
xchg
lods
inc
push
cmpsb
std
push
sti
and
decb
adc
ja
je
mov
fs
gs
mov
enter
dec
arpl
aad
xchg
fcmovnu
aam
icebp
xor
mov
xchg
mov
cmp
aad
xchg
cmpsl
sbb
xchg
fidivl
negb
in
cld
xor
mov
add
sub
jo
jb
lods
mov
xchg
mov
xchg
out
out
aas
jo
fwait
scas
mov
sbb
push
pop
cmpsb
sbb
pop
pop
mov
mov
xchg
cltd
mov
es
mov
cmc
fmuls
pop
inc
pop
adc
mov
inc
jns
mov
neg
or
cmpsl
jmp
leave
enter
dec
idivl
insb
inc
sbb
out
cld
pop
lret
and
loopne
fisubl
inc
movsb
xor
sub
push
popw
mov
add
icebp
xchg
mov
ljmp
imul
ror
scas
jne
jmp
mov
or
cmp
inc
and
jns
pop
add
iret
push
push
push
mov
fists
jne
ficoms
aam
mov
push
adc
xor
gs
mov
push
and
ret
movsb
in
je
mov
dec
adc
cmp
adc
shrl
mov
pusha
mov
cmp
je
push
inc
daa
outsb
test
fmuls
adc
addl
cmp
fcoms
cmp
mov
pushf
sub
int3
jl
insl
es
pop
lret
fidivrl
repnz
test
jae
adc
popa
fimull
popf
stos
adc
imul
call
in
rcrb
sbb
pop
movsl
mov
jp
cmp
push
lcall
test
xchg
mov
push
adc
dec
testl
fs
xchg
push
lret
jae
nop
imul
pop
push
test
push
ret
enter
jg
aam
test
repnz
xchg
imul
arpl
test
add
ljmp
addr16
ja
push
xchg
popa
push
mov
in
pop
icebp
adc
mov
leave
cltd
or
jl
addr16
shl
sub
jle
test
jbe
gs
je
or
gs
inc
cltd
add
and
inc
les
out
sub
ret
jno
pop
movsl
into
xchg
add
cmp
in
xchg
insl
dec
add
incl
roll
push
fwait
outsb
or
cwtl
mov
rcrl
add
xchg
mov
aad
das
sbb
je
mov
dec
add
sti
fildl
lods
fxam
hlt
fisttps
call
or
xor
je
adc
cmp
stc
mov
stc
std
fs
out
imul
cmp
pusha
add
inc
movsb
dec
imul
movsl
pop
xchg
mov
xor
dec
lock
mov
clc
jbe
out
mov
push
out
and
stos
sub
xchg
into
xchg
lea
jne
bound
into
ficomps
xchg
sub
xor
or
push
sbbl
das
addb
xchg
pop
mov
adc
jne
xor
cmpsb
fsub
add
fcmovb
aaa
out
nopl
push
js
push
add
push
jo
sbb
sub
and
jge
lds
lods
cs
outsb
stos
int3
inc
pop
sbb
mov
lret
pop
mov
pusha
pop
jle
add
or
pusha
jg
cmp
in
dec
lret
cld
repz
mov
cmp
jle
jle
pop
dec
inc
push
out
or
fs
das
mov
xchg
xchg
push
or
xchg
aas
mov
cmp
daa
lret
cld
loopne
mov
dec
jno
mov
arpl
stc
sbb
lods
push
mov
and
fdivl
ss
inc
ljmp
test
pop
filds
insl
cmp
jno
popa
mov
push
inc
jb
sbb
lret
movsl
cmp
jbe
movsb
jo
aam
call
inc
mov
push
out
mov
mov
movsb
cmp
jg
or
fyl2x
sub
dec
aam
pusha
pop
dec
or
addb
or
stos
repz
adc
das
divl
rcrl
std
stc
std
shl
inc
pop
and
sbb
cmpsb
sti
jmp
orb
push
dec
xchg
jl
xor
mov
daa
mov
sbb
roll
es
or
cmp
out
sub
inc
fisttpll
int3
adc
mov
mov
dec
call
push
divps
mov
lock
sub
imul
ret
loopne
insl
adc
gs
shrb
scas
icebp
push
fimull
mov
ret
add
jno
sti
cli
or
pop
xor
out
je
rcl
fistps
mov
mov
scas
fwait
or
sbb
movsl
push
mov
push
push
push
sar
sub
mov
ret
loopne
pop
mov
movsl
adcb
push
into
add
lret
xchg
push
loop
cli
lock
or
shl
add
out
mov
pop
das
lods
mov
jo
push
dec
mov
cmpl
jo
mov
or
xor
jns
mov
add
daa
mov
add
int
ja
xchg
fstl
adc
in
mov
pop
movsb
adc
sbb
adcb
sbb
jecxz
lret
in
je
cwtl
enter
ret
cmp
xchg
imul
and
xchg
ja
sub
nop
inc
fsub
and
mov
sbb
adc
js
pop
pushf
inc
lds
or
scas
dec
mov
xchg
mov
sbb
scas
pushl
cmp
mov
sub
inc
lret
out
jbe
mov
or
xchg
int
int3
subb
outsb
mov
daa
cmpsb
into
lret
dec
les
push
imul
and
cmpsl
xchg
xchg
imul
mov
jnp
jnp
ret
stc
jo
in
mov
and
add
or
sti
imul
sbb
popa
int3
adc
pop
jo
or
adc
int3
fcomps
adc
loope
mov
loop
jnp
pop
adc
sub
xchg
mov
imul
test
jp
xchg
xor
leave
data16
mov
dec
mov
jns
or
test
les
sbb
cmpsb
cwtl
jle
push
arpl
jl
push
mov
pop
dec
cmp
push
cbtw
das
lcall
sub
popf
or
push
fsubrs
push
add
xchg
inc
jmp
push
add
pmuludq
and
adc
loope
jl
or
cmp
out
adc
or
in
ljmp
mov
xchg
leave
mov
dec
pop
mov
fldlg2
cltd
sub
clc
icebp
jmp
rcrb
mov
xchg
mov
pop
mov
hlt
fisubrl
sti
mov
fcompl
cmpsb
pop
les
ret
push
jmp
cmc
popw
mov
jbe
sub
faddl
in
bound
leave
xchg
movsw
outsl
pop
and
jmp
push
mov
mov
mov
mov
or
call
mov
jne
mov
xchg
mov
lods
dec
sbb
adc
in
xor
xor
jle
mov
mov
inc
inc
das
andl
js
fidivrl
fwait
insb
xchg
es
into
lock
cmp
fwait
jmp
cli
test
adc
pop
mov
lret
push
push
imul
jb
cltd
push
inc
les
cwtl
pop
push
in
pop
mov
outsb
mov
push
mov
cli
push
nop
inc
sub
incb
xchg
add
psrlq
mov
dec
mov
mov
push
sbb
fcmovne
dec
sarl
and
sub
mov
nop
popa
sbb
inc
fs
push
jg
pushf
pop
or
jno
cmp
xor
subl
pop
lahf
test
sub
icebp
int3
mov
inc
dec
and
inc
dec
cmp
stos
sub
mov
dec
and
xchg
out
fldenv
fs
das
sub
mov
jl
mov
adc
pop
jb
icebp
movsl
push
inc
sti
jmp
jno
sahf
inc
rcrl
sub
imul
xchg
mov
adc
ret
mov
and
cmpsl
jae
mov
daa
lock
fldl2t
lods
cli
addr16
fdivs
push
mov
dec
xchg
pop
dec
cmp
jle
ss
cmp
and
jo
sbb
aaa
loope
jnp
fadds
mov
enter
out
add
in
push
sti
cmp
mov
sbb
push
or
leave
cmc
cmc
movsl
xor
pop
pop
mov
adc
mov
iret
call
fwait
pop
ret
ja
xchg
loopne
xchg
jge
pop
pusha
xlat
inc
sub
out
add
push
es
xor
adc
jle
push
push
iret
push
lcall
pop
jnp
mov
push
pop
ficoms
mov
pop
aad
cwtl
mov
dec
adc
cmpsb
cs
push
out
cmc
loope
mov
mov
test
les
push
push
aaa
test
cltd
out
cmp
les
rolb
jp
mov
int
xor
push
cmp
mov
jmp
mov
push
and
cmp
mov
test
pusha
push
sahf
pop
pop
fsubrs
inc
add
iret
mov
cmp
aas
mov
xchg
adc
mov
or
pop
sahf
and
stc
push
or
and
jl
loop
loope
popa
pop
push
pop
xchg
dec
dec
and
lock
cmpsb
clc
jge
lods
cli
loopne
insb
es
mov
leave
add
jnp
add
test
in
xchg
shrb
mov
mov
das
jbe
shlb
out
or
fmull
into
lds
adcb
cmp
inc
and
fldt
xlat
dec
icebp
add
clc
and
jge
xor
pop
mov
xor
addl
fistl
fstpl
mov
inc
or
jne
out
add
mov
push
mov
ds
jnp
rcr
data16
inc
insb
mov
mov
data16
or
sbb
std
push
inc
and
mov
stc
mov
mov
test
fmull
lock
or
std
fs
clc
lcall
aam
mov
sub
test
cmp
add
imul
outsb
jp
adc
mov
inc
sbb
adc
push
jmp
or
int
sub
sub
call
cmp
lahf
repnz
rol
in
pusha
mov
mov
sub
sub
or
mov
in
repnz
and
repz
mov
out
popa
add
idivb
sub
les
nop
cmp
cmp
outsb
in
bnd
movb
inc
cmp
daa
stos
rcrb
out
jno
rorl
or
sub
mov
pop
adc
jbe
mov
addb
adc
lcall
cmp
pop
push
pop
cld
test
pop
cmpsb
xor
jle
push
addr16
xchg
hlt
js
cmp
movsl
insl
icebp
and
jmp
xor
cmp
sarl
fsub
jb
icebp
mov
jno
leave
adc
cmp
aaa
imul
aaa
and
and
js
int
jle
cmp
adc
mov
mov
lret
insb
imul
sub
xchg
leave
or
jmp
jnp
and
cs
xchg
jg
xor
fisubl
add
cs
dec
fbstp
aas
jnp
in
pop
xchg
mov
jecxz
nop
mov
mov
stc
scas
sbb
jl
xchg
jne
incb
add
and
jno
sbb
xchg
push
add
rorl
xchg
jge
and
push
mov
sbb
add
stc
mov
sub
mov
xchg
ljmp
mov
sbb
and
ljmp
imul
frstor
mov
in
push
rcr
pop
sub
push
lods
inc
out
mov
cmpsb
popf
fadds
fnstenv
pusha
sub
and
push
dec
in
xor
cmc
loopne
nop
fidivrl
fbstp
lcall
push
or
fistl
inc
fisubrl
stos
jnp,pn
jp
pop
add
sub
or
gs
cwtl
xor
pop
push
jle
push
lock
mov
mov
sbb
inc
arpl
mov
daa
mov
test
insl
push
and
pop
test
popl
jg
mov
mov
fbld
add
and
cmp
add
push
js
in
rcrl
mov
dec
rcl
xor
sete
xchg
inc
mov
cmp
mov
icebp
sub
sub
mov
daa
xchg
pop
mov
pop
cmp
or
mov
mov
cmp
in
push
or
or
and
cmpsl
scas
push
mov
mov
cwtl
adc
int
xlat
cmp
sbb
xor
mov
mov
cmp
pusha
ret
inc
sub
je
dec
pop
test
and
jge
mov
ja
incb
insb
dec
outsl
pop
mov
movsb
mov
adc
xorps
cld
aam
jge
jp
mov
xchg
push
in
inc
mov
add
jns
xchg
cmp
flds
xor
pop
divl
arpl
and
sti
loop
push
movsl
or
je
scas
xor
aas
inc
jae
cmp
adc
xchg
sub
imul
cmp
mov
or
lcall
insl
pop
shlb
in
or
enter
imul
ss
cmpl
aas
cmp
mov
pop
xor
and
adc
call
or
sub
aaa
inc
icebp
push
mov
and
leave
not
and
and
dec
push
mov
subb
gs
cmp
push
ror
sahf
bound
pop
xchg
sub
mov
mov
dec
data16
into
das
fists
movsl
cmpsl
lcall
adc
scas
out
in
arpl
dec
lea
dec
nop
repnz
dec
int
sbb
mov
mov
xchg
mov
jno
daa
inc
fnsave
mov
xchg
jbe
ljmp
fs
cwtl
cltd
xor
sbbb
jns
into
sahf
fimuls
mov
mov
mov
mov
in
push
clc
js
inc
add
or
sub
subb
testb
mov
cltd
rcrl
scas
jb
popf
sub
fwait
jp
push
fs
sub
push
popa
scas
mov
xchg
push
std
and
push
out
ds
test
mov
mov
pop
xor
mov
sub
repz
ror
and
iret
enter
shll
push
cs
push
dec
in
enter
sbb
out
pusha
adc
lahf
fs
iret
lahf
adc
dec
pop
in
xchg
sarb
movsb
jle
in
mov
out
sub
scas
cld
adc
xorb
push
pusha
addl
jb
jbe
mov
in
dec
nop
sbb
popa
popf
xchg
mov
dec
jp
or
mov
es
mov
fildll
jno
data16
orl
arpl
ja
push
xchg
jb
mov
mov
pop
add
scas
pushl
nop
mov
insl
jo
mov
mov
push
into
lcall
test
jge
lcall
push
mov
hlt
sbb
adc
pop
cld
xor
mov
sub
pushfw
dec
stos
cmpsb
adc
push
outsb
sub
adc
out
pop
add
repz
mov
inc
loopne
arpl
insb
jmp
inc
push
cmp
xor
cmp
mov
sub
fildl
mov
lds
cmp
in
stos
jne
pop
sti
pop
or
test
fcoml
inc
dec
pusha
mov
dec
pop
mov
and
out
jl
leave
sti
xor
mov
or
repz
or
mov
dec
pop
test
repnz
dec
sti
fisttpll
mov
inc
jg
sbbb
cmp
adc
aam
movsb
scas
mov
mov
mov
out
aas
dec
and
xlat
inc
xorl
xchg
rorl
mov
mov
mov
cmp
lret
in
jo
dec
leave
cmp
sbb
add
or
in
mov
mov
inc
imul
and
icebp
push
sahf
pop
clc
pusha
test
mov
and
push
les
shll
stos
mov
mov
aaa
inc
and
mov
int3
hlt
or
test
fcomps
adc
popa
or
push
aad
jp
cld
movsb
cld
mov
push
jl
in
xchg
nop
out
fs
addl
mov
loopne
mov
ljmp
jae
pop
xchg
lahf
mov
bswap
out
data16
shlb
movsb
xor
pop
push
jae
icebp
mul
jecxz
mov
out
mov
fdivp
xchg
dec
fstpt
inc
andb
cmp
jae
subb
ds
lock
fldenv
outsl
negl
stos
mov
mov
add
mov
inc
jecxz
pop
jb
bound
xor
mov
dec
pop
xor
es
mov
test
mov
cltd
cmpsl
lahf
fwait
jno
je
push
cmp
dec
ja
pop
xchg
cs
inc
fucomip
aam
xor
xor
jbe
add
outsl
enter
dec
in
push
fsts
lods
or
les
and
dec
inc
inc
mov
cltd
fnsave
mov
ret
pusha
arpl
sub
xchg
adc
test
mov
xor
inc
pop
pop
mov
or
lods
adc
lahf
or
addr16
das
lcall
out
mov
mov
aas
cmpsl
inc
xchg
sub
in
cli
mov
iret
imul
push
pop
push
add
push
icebp
pusha
stc
sbb
fcmove
dec
inc
push
inc
aas
mov
mov
push
stos
xchg
mov
popf
xchg
push
sbb
or
push
repz
sbb
ret
subb
sahf
push
inc
add
cmpsl
pop
lds
xor
mov
push
hlt
dec
mov
or
mov
enter
cld
popf
pop
pop
jmp
mov
mov
cmp
xor
push
lock
inc
fadds
or
int
cmc
dec
jecxz
xlat
lret
xchg
adcb
in
popf
mov
or
push
dec
mov
dec
fsubr
ljmp
andl
insl
xchg
cmpsb
mov
inc
cli
les
jge
pop
je
cmp
jnp
xchg
add
jg
int
cmp
push
pop
add
xchg
sub
leave
ja
pop
cmpsl
stos
cmp
push
xchg
mov
mov
scas
pop
fisttpll
jno
mov
cmpsl
pop
xor
fsubl
fnstenv
mov
dec
nop
mov
mov
mov
pop
and
hlt
xchg
hlt
cmpsb
stos
xor
sbb
ret
inc
mov
out
push
rcll
inc
xor
jns
fsubl
xchg
jnp
btc
js
add
scas
or
aam
push
es
sbb
sub
hlt
lods
lret
js
push
in
mov
sbb
out
mov
cmp
sub
mov
cs
psubusw
inc
loopne
xchg
test
fstpt
icebp
mov
je
cli
in
shl
adc
cmc
mov
jbe
enter
scas
sbb
dec
dec
dec
add
adc
pushf
push
xor
in
jb
xchg
xor
jnp
pop
jae
pop
addr16
cmp
jns
or
decb
mov
pushf
ljmp
lods
dec
ja
add
js
out
enter
out
push
dec
cli
std
adc
and
xchg
push
xchg
add
add
sub
pop
mov
scas
jnp
fwait
notb
lcall
repnz
jae
sub
pop
arpl
pushf
sbb
jbe
add
or
popf
sbb
and
pop
insb
mov
cmp
mov
dec
adc
ljmp
sub
dec
int3
add
xor
popf
scas
movsb
and
lods
fnstcw
rorb
aaa
rolb
movsl
sbb
cmp
lods
mov
cmpb
repnz
les
pop
lcall
add
add
or
cltd
push
arpl
les
cwtl
sti
pmulhuw
mov
sarl
sbb
cli
enter
pop
daa
jo
xor
lcall
js
loope
int
or
divl
adc
repnz
test
rcrb
mov
and
lret
arpl
cmp
mov
ss
adc
scas
push
es
mov
fstl
cmp
movsl
cmpsb
mov
jle
cli
aaa
adc
dec
xorl
xor
mov
and
pushf
fsubrl
cwtl
mov
cwtl
or
insl
xor
push
inc
sbb
test
call
xchg
sub
stos
pusha
aam
mov
enter
lds
addl
and
mov
fdivrl
push
sub
sub
sbb
repz
testl
mov
pop
cmp
xor
adc
cs
xor
inc
popa
jae
fimull
lods
aaa
rcl
cmpsl
mov
push
mov
ja
in
sarl
xchg
lcall
frstor
ret
push
out
sbb
sbb
popa
js
andb
je
pusha
movsl
dec
mov
and
cmp
lahf
push
adc
movsl
mov
inc
push
jae
loopne
push
aas
and
cs
ja
je
addr16
mov
or
mov
sub
pop
fisubl
dec
les
jg
push
syscall
test
test
mov
mov
sub
mov
mov
inc
fcoml
or
xor
and
adc
les
cmp
hlt
and
loope
dec
imul
xchg
cmp
sbb
enter
push
push
add
es
jmp
sahf
push
jp
sbb
pop
fdivrl
xchg
sbb
push
lock
repz
jo
jmp
push
ret
aaa
rcll
int
inc
xchg
test
cmc
xor
cmp
push
and
fmull
out
xchg
push
jns
cs
sub
fidivrl
mov
ss
les
mov
aam
sbb
jo
lock
jo
mov
in
lret
dec
adc
pop
cmp
mov
inc
mov
loopne
divb
cmp
and
push
mov
push
push
orb
imul
stos
xor
push
ds
pusha
jg
ret
loopne
loopne
cmpsl
out
fs
push
xor
sub
pop
ss
out
std
cmpl
mov
loopne
int
cld
negb
pop
aam
jmp
into
sbb
rcll
test
mulb
dec
sub
into
jp,pt
sub
pop
outsb
push
and
scas
movsb
xorb
cmp
pop
test
pop
mov
das
push
imul
sub
fcoms
cmp
cs
out
in
jnp
ret
add
dec
insb
sti
push
cmp
mov
xchg
push
test
mov
fwait
adc
filds
jl
cmpsl
outsl
push
push
sbb
mov
lods
mov
int
pop
in
inc
ja
pop
cmp
sbb
mov
or
add
les
pop
je
and
leave
sarw
cmp
imul
adc
gs
addr16
jo
pop
mov
xor
stos
shl
xchg
sub
mov
loop
mov
ljmp
enter
jp
roll
por
out
and
push
xchg
test
or
adc
outsl
xchg
dec
adc
cmp
loopne
int3
and
cmp
inc
lods
mov
inc
je
cli
push
or
sbb
mov
mov
xor
insb
jb
pop
sub
inc
bnd
mov
jge
mov
nop
imul
test
xchg
adc
stc
mov
cwtl
add
xchg
ja
jbe
and
mov
add
dec
popf
sub
jge
out
lods
scas
push
cmp
in
xchg
jp
jecxz
and
xchg
icebp
jl
cltd
xchg
jp
sbb
xchg
xchg
pop
call
cmp
mov
outsb
insl
push
dec
push
sbb
enter
cmpsl
and
sti
and
daa
fs
mov
fidivs
pop
pop
into
mov
pop
mov
stc
daa
push
scas
inc
daa
push
mov
cli
repnz
sbb
adc
cs
subl
icebp
pop
lods
insb
jbe
sub
fidivs
xchg
lahf
js
sub
cmp
fnstcw
out
pop
mov
testb
xor
daa
test
push
cmp
pop
lret
adc
cmp
inc
push
jae
addr16
std
sub
or
mov
in
inc
insl
scas
pop
scas
fildl
shl
negl
pop
dec
jecxz
sub
mov
pushf
mov
or
test
xor
xor
mov
sub
jle
inc
out
enter
loop
adc
jp
mov
adc
pop
push
pop
and
xor
cmp
push
lret
and
mov
mov
leave
popf
inc
add
cmp
jg
out
cli
and
ja
add
loope
lret
int
insb
bt
fwait
dec
insb
mov
inc
lcall
scas
fisttps
hlt
mov
cmpxchg
inc
xor
xor
lock
loopne
in
sarl
mov
pop
xor
inc
es
push
std
popf
repnz
mov
into
jns
in
add
add
fs
cs
fs
lcall
lods
xchg
xor
insb
jg
fwait
sub
adc
mov
and
push
push
inc
std
negb
cmp
sbb
sbb
adc
arpl
xchg
leave
int
popf
and
pusha
mov
test
fs
jns
mov
push
hlt
push
cmpsb
push
out
cmp
loopne
mov
pop
mov
leave
and
pop
cs
aam
in
out
test
clc
stos
jle
lea
in
and
cld
pop
and
jno
popf
fsubrl
je
inc
add
addr16
iret
stc
cltd
mov
fmul
lea
mov
test
xchg
sbb
push
or
dec
outsb
in
rcrl
mov
repz
dec
aad
jno
inc
push
mov
sub
mov
xor
mov
pop
inc
adc
inc
cmp
pop
jno
mov
jae
jle
cs
vpmuludq
nop
jg
pop
jmp
bnd
aam
rcl
push
cmc
push
lods
pop
xchg
loop
xchg
jne
and
inc
mov
mov
inc
cmpsl
or
and
int3
inc
dec
in
push
mov
hlt
mov
inc
pop
scas
mov
push
dec
sbb
mov
xchg
mov
stos
jb
push
add
stos
cmpsl
iret
add
pop
nop
sbb
popf
adc
std
cli
je
sar
in
lea
leave
adc
lods
imul
jmp
subl
sbb
test
xor
push
stos
scas
mov
add
std
aad
mov
sub
mov
cltd
mov
add
mov
push
adc
roll
je
sbb
loop
ret
xchg
popf
cmp
mov
or
mov
popf
cltd
sub
cmpsb
cmc
inc
mov
jge
dec
add
repz
push
mov
xor
dec
mov
jp
data16
cmp
loop
out
scas
cmp
lods
and
xor
scas
and
loopne
sbbl
insl
es
addr16
mov
push
imul
rcrb
xchg
xchg
iret
ljmp
mov
mov
pop
ds
adc
test
cmp
fs
push
adc
out
mov
lcall
stos
ret
lea
push
jno
fwait
and
fcmovb
jns
mov
jg
test
sbb
insl
pop
pop
sub
cmp
push
lds
sbb
jmp
dec
loop
mov
jbe
adc
adc
jnp
cmp
fsubr
cmpb
xor
outsb
sarb
pop
sub
lds
inc
in
push
lcall
push
mov
nop
insl
pop
sbb
jne
mov
outsb
jns
imul
aas
fdivs
test
dec
sub
xchg
insb
cli
clc
fnstcw
aam
rep
mov
cmp
jne
addr16
jae
inc
std
cmp
cld
xor
sti
sahf
add
add
add
push
push
lods
std
push
repz
cmp
sub
lahf
add
mov
mov
pop
adc
inc
aam
add
add
stc
es
das
clc
mov
pop
push
jo
loopne
jg
cmp
ds
aam
mov
cmp
and
adc
js
bsr
in
test
repz
cmc
jbe
dec
ljmp
xor
push
outsl
sub
xor
and
and
lods
xchg
adc
adc
movsb
or
int
mov
mov
xchg
das
dec
xor
add
pop
jb
fcompl
bound
js
testb
push
xor
mov
enter
jne
add
or
sub
loope
pop
push
cmc
arpl
jp
scas
push
or
rorb
jns
insb
scas
out
adc
mov
ret
push
sbb
scas
pop
loop
mov
adc
fnstenv
icebp
mov
test
pop
or
mov
dec
stc
lods
cmpb
lods
push
mov
lods
or
dec
push
pop
ud0
pop
bound
aam
or
fbstp
push
xchg
subb
jae
pusha
or
sbb
jns
mov
insb
scas
inc
mov
imul
sar
test
lcall
add
js
fcmovu
jnp
mov
popf
call
insb
mov
or
leave
lcall
sbb
lret
xchg
inc
popf
mov
mov
cmc
fidivs
push
xlat
fidivrl
xor
sbb
icebp
fstp
fwait
sbb
add
mov
stos
push
add
adc
push
lock
jnp
sbb
xor
pusha
lcall
adc
in
cmp
push
aam
push
in
adc
adc
leave
pop
lock
cmp
pop
in
push
sbb
sub
mov
inc
outsb
xchg
pushf
orb
mov
shll
mov
xchg
mov
cmp
das
mov
pop
out
jno
jp
movsl
jg
test
addr16
mov
stos
push
call
ret
mov
push
je
push
cli
push
push
jmp
sarl
dec
call
push
or
es
mov
add
push
popa
lods
rclb
adc
push
jbe
inc
push
test
fs
in
xchg
movsl
pop
push
jge
rcll
push
or
repz
add
sub
mov
cltd
pop
jbe
mov
cmp
cs
dec
pop
mov
push
aam
call
arpl
outsb
xchg
lcall
push
mov
mov
das
jmp
mov
dec
ja
mov
int3
pushf
repz
leave
lahf
push
repnz
ret
sub
pop
sbb
jno
sub
sar
mov
xchg
rclb
jno
xchg
in
xchg
sbb
fsub
out
movsb
div
lcall
and
ror
lsl
vminpd
dec
in
call
js
popf
or
jns
xchg
add
jno
push
stos
add
hlt
ljmp
xchg
shr
frstpm(287
pop
push
mov
pop
inc
imul
jp
orb
push
rcl
lahf
jns
mov
jmp
out
std
int
in
adc
ss
pop
shlb
jl
fs
add
jge
inc
xor
mov
mov
inc
das
stos
cmp
addb
cmp
jns
xor
ja
and
into
dec
xchg
scas
popa
leave
fidivrs
jge
fsubrp
js
lods
movsl
arpl
daa
mov
push
xor
ret
push
movl
das
je
test
adc
lods
or
xorl
call
loop
mov
stc
push
out
cmpsb
repz
into
jns
popl
push
cmp
add
pop
dec
cmp
loopne
adcl
and
or
out
in
vsubpd
sub
mov
es
sub
adc
ljmp
aas
cli
fiaddl
xor
jne
mov
push
and
jno
aad
scas
popa
cmpl
inc
mov
jl
push
add
or
add
rclb
cmp
pop
sbb
inc
cmp
rorb
pop
sbb
scas
jb
jg
mov
jg
mov
loop
push
fisttpll
jge
mov
cmpsl
or
inc
sbb
daa
loope
inc
leave
mov
push
divb
fbld
popf
and
pop
je
xchg
cwtl
mov
dec
push
imul
inc
and
aad
fdivl
pop
sub
jne
bound
call
and
inc
fmuls
lods
jp
cmpsb
adcl
xor
fistl
mov
mov
mov
lock
das
lea
fs
xor
adc
cmp
push
out
sbb
mov
out
jle
in
inc
add
xor
enter
dec
leave
inc
int
ljmp
mov
or
cmp
jmp
scas
js
push
and
pop
pop
out
jl
stos
enter
out
sbb
cmc
mov
pop
aad
or
jo
and
mov
sbbl
sub
test
movsl
add
iret
cmpb
cwtl
insb
loop
test
or
test
icebp
lea
pushf
or
sbb
or
inc
out
nop
fidivrs
outsl
sbbb
mov
rcrl
mov
insl
popl
ret
sar
aas
shlb
aad
push
imul
or
in
push
popf
or
jmp
pusha
pushf
aam
xor
mov
sub
inc
lahf
jo
xchg
aam
lret
sub
nop
mov
ljmp
out
fnstsw
push
jle
scas
mov
xchg
cli
mov
je
imull
xor
and
fstps
cmp
jns
and
rolb
sub
cmpb
mov
cltd
movsb
mov
pop
lods
add
xor
loopne
repz
daa
lods
stc
inc
add
xchg
lods
dec
stos
pop
loop
shlb
not
adc
push
jle
imul
xchg
bnd
imul
rcl
push
scas
cmp
lret
push
je
aas
dec
popa
mov
mov
mov
scas
hlt
push
sahf
xor
xlat
jmp
rcrb
imul
insl
ret
in
add
rorb
rclb
xchg
mov
adc
lea
icebp
out
inc
insl
and
sub
stos
aas
pop
mov
imul
push
mov
mov
dec
sub
sbb
fs
sahf
lcall
es
pop
jo
push
rcrl
std
or
xor
pop
sub
pop
out
mov
inc
push
mov
cwtl
push
and
push
inc
push
jo
mov
out
sbbl
popl
inc
orb
and
loop
or
dec
cli
lret
fwait
dec
cmc
ljmp
sub
mov
mov
loope
push
and
mov
jae
test
addr16
divl
les
pop
push
push
repz
add
test
or
pop
xchg
cmp
mov
jp
pop
cmp
adc
lods
mov
pop
or
add
xor
movsb
and
pop
in
inc
stos
mov
popa
or
movsb
mov
pop
xchg
xor
fwait
ljmp
push
shrb
and
movsl
test
sbb
dec
aaa
test
out
cmpsl
addr16
shrb
fs
adc
js
lds
jge
in
push
add
iret
adc
and
mov
push
sub
cmp
dec
cmp
jnp
dec
push
cmp
dec
push
mov
in
pop
faddl
mov
push
sub
mov
adc
outsb
rorb
out
das
mov
pop
jns
xor
sbb
xchg
pop
je
dec
mov
inc
jne
fcoml
or
call
andl
xchg
mov
jg
push
outsl
sub
push
call
nopl
or
shr
mov
daa
cmova
xchg
jo
stos
cs
mov
fs
aad
lods
divl
filds
add
jp
xchg
push
repnz
testb
sub
in
cld
or
jle
fisubrl
xor
inc
jo
ss
pop
mov
sub
mov
mov
leave
ret
or
imul
pop
popf
push
mov
mov
test
mov
dec
hlt
aaa
movsl
aaa
xchg
into
mov
dec
xchg
idivb
sub
adc
jbe
int
or
fwait
stc
stos
xor
adc
cmpsb
pushf
xchg
aad
xchg
xor
mov
mov
lods
roll
mov
adc
enter
aam
push
mov
push
mov
dec
incl
icebp
cmpsb
mov
daa
outsb
pop
sahf
aam
scas
std
insl
mov
push
popf
mov
pop
das
pop
xchg
cmp
int
mov
xor
jle
fidivs
mov
cmp
insb
mov
call
mov
test
int3
pop
call
cmp
mov
ds
in
fwait
popf
pop
sbb
fs
repz
or
and
push
sbb
sbb
mov
adc
in
or
xchg
pushf
pop
imul
sbb
repz
add
rorl
jg
mov
push
std
test
sbb
xchg
rep
pop
xlat
dec
adc
mov
ss
in
xchg
ficoml
push
xadd
cmp
fldenv
test
imul
insb
enter
xlat
jp
mov
repnz
and
pop
lods
adc
fcoml
sbb
sub
xor
out
in
mov
aad
dec
inc
int3
fnstenv
addr16
loopne
sub
repz
call
shrl
mov
out
sbb
jno
lds
lods
es
rclb
xor
cmp
add
lods
lret
lret
inc
add
sbb
mov
cwtl
mov
mov
aam
out
ss
stos
push
lock
pop
dec
push
adc
lcall
aad
xor
fwait
cmpsl
fistl
jb
pushf
mov
mov
cli
aad
push
aaa
rcr
mov
bnd
aas
inc
pushf
inc
call
out
sub
add
push
daa
inc
ja
pop
jae
cmp
dec
xchg
mov
test
xchg
out
mov
insl
decb
movsb
leave
sub
xor
shll
repz
push
xchg
mov
pop
test
dec
popl
sub
push
out
out
pop
rorb
nop/reserved
movsl
xchg
rsqrtps
mov
in
in
int
mov
sbb
mov
scas
test
les
jecxz
xchg
add
pushf
xchg
ret
stos
dec
mov
xorl
iret
sahf
std
sub
fsubrl
pop
mov
dec
xor
lock
add
jmp
stc
lods
out
bound
jb
add
xchg
rol
push
imul
aad
fs
fnsave
out
pop
sub
in
jp
jo
or
cmp
sbb
ja
dec
ret
scas
je
mov
add
clc
and
pusha
repnz
mov
add
repnz
jne
fnstsw
ds
ret
ljmp
cmp
push
out
int3
xor
pop
arpl
and
lret
std
pop
push
ds
aas
adc
add
repz
push
and
mov
push
clc
aas
push
test
lock
add
call
jbe
or
inc
pop
push
in
pushf
stos
dec
sub
imul
popa
inc
pop
dec
cld
and
pop
push
mov
in
dec
mov
into
dec
sarl
push
out
jb
cld
pop
loope
test
or
fwait
or
pop
sahf
jnp
mov
andb
mov
fnstsw
mov
dec
push
mov
pop
add
mov
cmp
cmp
push
pop
ret
jmp
out
fisttpl
outsb
fldenv
pusha
stc
pop
xorb
jno
stc
mov
add
pop
mov
push
pop
test
scas
stc
imul
dec
jle
jae
dec
sub
jecxz
mov
movsl
xor
adc
aam
adc
xlat
rorb
lahf
dec
in
or
cmp
fiadds
mov
cmpsb
test
push
fstpl
cmc
test
stc
in
push
loop
enter
rcl
ss
adc
pop
es
jae
cltd
mov
push
sbb
and
std
addl
sub
pop
mov
mov
sysenter
pop
pop
out
lods
mov
xchg
orl
mulb
inc
mov
mov
sbb
int
ljmp
mov
or
lods
stos
dec
sahf
mov
dec
inc
jne
hlt
insb
cmp
mov
aad
hlt
scas
fstps
jecxz
lret
out
jmp
dec
mov
pop
dec
sub
xor
cmp
das
int3
cmpsb
cld
mov
and
add
orb
leave
dec
rolb
loope
xchg
stc
adc
gs
cmovg
xchg
push
fldenv
fisubl
sti
dec
mov
leave
ja
adc
lods
cmp
lcall
and
mov
pop
daa
push
add
jae
movsb
and
push
and
rorb
flds
pop
mov
es
mov
add
push
call
out
inc
jle
xor
and
repnz
dec
nop
ljmp
xor
fcompl
dec
pop
mov
call
scas
mov
inc
pusha
add
ret
mov
sbb
scas
mov
and
dec
mov
lods
cltd
cli
jnp
add
imull
and
cmc
clc
insb
icebp
inc
jl
xor
push
push
out
inc
shll
jo
push
or
and
xor
out
sar
fisubrl
jnp
jnp
pop
mov
das
aaa
mov
sub
xchg
push
lds
adc
or
xlat
aad
icebp
and
sahf
pop
lea
pop
sarb
or
mov
movsl
jns
orl
out
xchg
movsl
sub
inc
sbb
lea
negb
insl
mov
iret
fldcw
movsl
cmp
aam
inc
add
push
insl
pop
stos
pop
leave
aas
fldenv
cltd
xchg
scas
test
adc
xor
cmp
push
cmpsb
cmp
and
test
addl
aam
sub
test
es
push
xchg
jne
sbb
xchg
mov
sbb
xor
mov
or
or
mov
leave
sub
jno
fildll
adc
lret
mov
jl
pop
aas
lock
nop
fdiv
repnz
out
stc
nop
adcl
jno
rcl
or
push
jno
sub
xchg
mov
or
dec
and
and
pop
hlt
cmpb
mov
dec
cmp
testl
bound
es
pusha
dec
leave
adc
data16
cld
js
mov
std
jnp
add
ja
outsb
and
jecxz
mov
jmp
mov
bound
pop
push
and
mov
imul
pop
sbb
push
push
inc
movsl
inc
jge
mov
or
cmp
add
push
sbb
push
jl
cwtl
push
outsb
ljmp
and
mov
pop
pop
test
mov
lahf
gs
sub
scas
inc
and
movl
cmp
add
jge
addr16
push
bound
add
sub
and
push
lcall
xchg
mov
shll
push
mov
pop
addb
insb
mov
adc
lret
sub
loopne
call
out
pop
pop
mov
push
cmp
sub
cmp
jbe
gs
lahf
fcmovnbe
clc
sbb
or
pop
lock
outsb
mov
scas
cmp
sbbb
or
adc
pop
jge
sbb
int3
add
and
sbb
sahf
gs
inc
outsl
lret
and
jns
xchg
adc
mov
xorl
arpl
cltd
push
scas
mov
dec
divl
punpckhwd
hlt
aaa
mov
mov
pop
ret
xchg
cltd
mov
sarb
xor
or
mov
pop
xor
or
xor
pop
sbb
sbbl
rolb
cmc
adc
cmp
xchg
fistpl
lret
mov
cli
sub
nop
xor
push
adc
shll
gs
lahf
pop
cmp
outsb
loop
daa
mov
cmpb
int3
test
hlt
and
dec
shll
sysenter
data16
adc
mov
inc
movsl
jns
push
lahf
lahf
push
mov
xor
sub
repnz
inc
imul
fadd
push
adc
inc
xlat
repnz
push
pop
add
add
pop
jg
mov
cli
fwait
mov
jnp
cmp
fcoml
xchg
xchg
mov
and
mov
mov
loopne
fisttpl
and
inc
iret
das
loope
mov
pushl
cli
and
lock
rclb
mov
bnd
orb
js
mov
arpl
mov
push
jl
movsb
rorb
xor
mov
femms
or
or
mov
sahf
sbb
dec
pusha
dec
iret
push
cli
mov
push
mov
push
idivl
add
push
jl
xor
mov
adc
push
fdivs
int3
inc
test
movsb
sbb
or
out
js
orb
mov
jno
or
fs
xchg
push
adc
rorl
adc
xor
mov
dec
sti
insl
mov
scas
rorl
loop
iret
scas
lods
rorl
jbe
jo
mov
jl
fdivs
mov
jmp
iret
jno
xchg
enter
pop
xor
or
add
lcall
shrl
jl
jmp
stc
sbb
add
das
dec
xor
fldt
ret
sbb
mov
stos
out
xor
dec
dec
aas
xchg
and
pop
sbb
mov
and
in
mov
xchg
pop
adc
rcl
cltd
out
fsubrs
mov
add
xchg
lret
cwtl
pop
cmp
add
cmp
push
mov
push
mov
cmpsl
or
xor
xor
adc
andl
add
mov
stos
xor
xor
adc
sub
inc
mov
movsb
ss
cmpsl
mov
xchg
in
or
in
loop
lds
pop
and
inc
mov
and
ret
notl
xchg
sbb
jno
jnp
mov
mov
pusha
testb
out
fwait
movsb
sub
adc
adc
or
sbb
mov
pop
cmpsb
rclb
mov
jmp
into
daa
mov
mov
jge
int3
xchg
fsubs
dec
xchg
push
loop
pop
sbb
mov
inc
stos
idivb
gs
or
xorb
pop
mov
outsb
mov
shr
out
sub
mov
cmp
xor
cmp
pushf
aad
mov
loop
pop
push
outsb
sbb
add
xchg
push
cmc
out
inc
push
xor
or
out
repz
jb
or
sub
in
dec
gs
aad
inc
add
rorb
lds
inc
push
and
xchg
dec
pop
dec
mov
mov
pop
shll
test
mov
mov
test
cmpsl
mov
fcomps
sahf
mov
cmc
aad
pop
enter
or
ljmp
in
xchg
ja
imul
and
loop
mov
loopne
mov
fcmovne
movsl
sub
test
stos
pop
and
sub
in
pop
add
jne
mov
les
fs
mov
es
cltd
inc
xor
push
cmpsl
or
jbe
or
mov
jmp
pop
rcl
loop
jl
pop
ret
fists
adc
call
adc
int3
fs
and
mov
cltd
cmpsb
sbbb
loop
icebp
subl
jg
cmp
push
jle
not
xor
in
mov
xor
lods
jmp
pop
cmpsb
pop
and
ss
pop
cmpsb
shlb
insb
into
and
movl
out
pop
mov
fildll
pop
pop
jmp
and
jne
jne
xchg
mov
inc
int3
loopne
sbb
xlat
adc
xor
adc
je
std
aas
jle
aaa
jae
orl
xlat
jle
and
js
out
jbe
dec
nop
jecxz
or
in
in
jbe
jg
inc
jnp
les
mov
xchg
mov
cmp
stos
flds
das
aad
cli
push
outsl
jo
jg
ja
mov
dec
dec
xchg
mov
cmp
xchg
jae
dec
add
int
mov
jl
push
ffree
cmp
inc
cltd
mov
adc
push
push
dec
hlt
daa
push
lret
ljmp
and
sbb
xor
mov
lock
or
in
xchg
mov
mov
or
jmp
xor
mov
mov
add
mov
push
in
enter
rorb
push
std
stos
mov
mov
sbb
mov
mov
int3
jge
sub
test
push
lret
and
pop
fildll
push
mov
inc
xor
sub
scas
xor
and
lcall
xor
std
stc
into
inc
xchg
cwtl
mov
lret
scas
inc
addr16
inc
xor
in
jg
out
cmp
scas
jg
hlt
push
cmp
fisubrs
shlb
mov
into
push
xor
shll
aad
mov
xlat
sbb
call
sbbl
sbb
jnp
lds
aad
scas
aas
fisttps
scas
and
xchg
mov
movsb
mov
test
mov
inc
mov
dec
xchg
inc
je
mov
cli
into
sbb
mov
out
push
hlt
leave
into
cmpsb
xchg
lds
das
scas
arpl
xor
mov
lahf
dec
je
repz
pushf
push
shll
in
push
pop
jge
outsl
mov
mov
les
push
out
iret
test
insb
pop
jno
lea
ret
fmull
or
push
pop
out
dec
and
mov
or
call
popf
xchg
mov
loopne
xor
inc
lcall
dec
push
ja,pt
and
out
inc
test
aas
leave
sbb
or
sbb
pop
outsl
sbb
pop
sarl
sbb
xchg
mov
push
and
or
pcmpgtd
inc
or
cmpsw
stos
fisttps
push
pop
or
icebp
movsb
push
dec
lahf
insb
stos
inc
jmp
sub
jb
icebp
and
scas
xchg
push
push
lcall
addr16
cld
imul
rcll
mov
xchg
xchg
inc
pop
les
push
push
pop
sbb
jge
aas
inc
jmp
in
mov
inc
cmp
add
mov
jae
vmptrld
sti
into
jo
popf
xchg
sbb
sbb
arpl
notb
adc
fldl
mov
pop
aam
jge
or
sti
shrl
pusha
sbb
cmovb
mov
push
shrb
push
mov
push
jo
sti
xor
jnp
mov
add
leave
push
je
mov
out
outsl
inc
lea
or
jne,pt
jns
pop
stc
out
and
inc
push
scas
cltd
adc
fbstp
rcrb
mov
lock
outsl
fcompl
mov
sbb
mov
cwtl
inc
mov
mov
xor
fwait
pop
jbe
or
inc
or
xchg
dec
add
int3
jg
and
ds
push
add
pop
xor
dec
mov
dec
movsb
out
dec
outsl
scas
cmp
in
adc
mov
mov
scas
cmp
sbb
es
mov
test
sub
iret
mov
cmpsl
into
dec
push
ficomps
fidivl
mov
fsubr
gs
lods
xchg
in
add
push
out
rclb
inc
fst
fstl
lea
mov
aad
push
ss
sub
or
mov
int
sub
iret
push
std
and
daa
cltd
and
rcr
push
mov
ret
daa
cmp
sub
incl
dec
sub
and
leave
cli
push
cmc
sbb
add
ret
mov
rcrl
gs
test
icebp
popa
pop
mov
arpl
and
dec
shrl
in
scas
iret
arpl
inc
imul
shll
fisubs
jbe
pop
pop
cmp
jns
pop
xor
pop
mov
daa
dec
lsl
add
jnp
inc
dec
lea
mov
push
sti
mov
test
cmp
movsl
out
pop
adc
in
lret
sub
mov
adc
mov
fldenv
rclb
adc
cmp
pop
push
cmc
adc
cli
clc
inc
insb
lcall
jne
lock
clc
add
popl
imul
cld
sbb
aad
pop
mov
in
jp
test
xchg
xor
jecxz
inc
xor
xchg
adc
std
ss
fs
loopne
mov
cmpsl
jge
dec
idiv
inc
inc
xor
jl
xchg
pop
push
push
cs
repnz
cmp
or
xchg
add
rcrl
xor
scas
xchg
outsl
jecxz
add
fadd
xchg
aam
xchg
jle
out
mov
scas
ror
mov
testl
mov
fsubs
xchg
arpl
adc
dec
sub
pusha
enter
in
das
mov
lret
add
and
in
insl
fwait
adc
and
mov
sti
outsb
cmovl
loopne
loope
faddl
daa
aaa
sub
int
jnp
orl
mov
cmpsl
cmp
jecxz
test
sub
xor
xchg
pop
jb
ficoml
lahf
repz
std
stos
adc
adc
mov
xor
iret
cmp
ret
push
inc
insb
mov
into
sub
ficoml
call
mov
mov
cs
lret
test
pop
adcb
cli
out
popa
lods
outsl
or
push
xchg
cld
pop
sub
in
test
fists
and
jnp
sub
dec
stos
cmc
inc
and
lahf
inc
add
sbb
adc
cmp
out
xor
jge
xchg
jg
ret
ljmp
xor
cmp
sub
ret
outsb
mull
movsl
mov
pop
pop
jmp
popa
call
daa
sub
sbb
popf
adc
and
pop
mov
dec
mov
daa
fstpl
cli
push
rolb
pop
dec
fildl
cmpb
aas
stc
in
leave
popa
shr
xor
mov
inc
lods
lahf
out
inc
or
mov
mov
jmp
sub
lea
pop
incb
push
jo
pop
popa
stc
into
stos
cltd
fisubl
addr16
cltd
pop
xchg
mov
iret
nop
mov
popa
hlt
insl
daa
dec
jnp
adc
outsb
jp,pt
push
and
test
xchg
insb
xor
mov
dec
stos
les
and
jmp
push
pop
mov
inc
dec
out
ret
fnstenv
xor
in
jl
cmp
inc
lcall
sub
pusha
sub
cmc
int3
das
adc
xchg
jns
mov
inc
lods
int
mov
lea
mov
test
xchg
push
arpl
sub
aam
fstps
inc
fs
jmp
pop
adc
inc
and
ds
jge
pop
push
in
mov
or
mov
cmc
out
add
nop
insb
mov
stos
hlt
fisubrs
xor
je
push
mov
push
das
push
repz
jnp
ds
mov
lea
cmpsb
dec
inc
xchg
xor
dec
rol
add
mov
jae
pop
cmpsb
push
mov
add
dec
lods
mov
frstor
xchg
jno
js
popf
sub
bound
adc
sub
lcall
mov
mov
jmp
lret
xchg
vmptrld
inc
enter
sub
push
ficomps
outsb
insl
sbb
scas
cwtl
mov
mov
imul
sahf
fisttps
and
xlat
mov
jge
pop
mov
stc
cmp
sub
fldcw
inc
shlb
aad
imul
test
aaa
adcl
jno
jno
cs
and
xor
in
jle
cli
aad
mov
les
and
adc
dec
mov
pushf
leave
cs
lret
cmp
daa
mov
push
dec
lock
fwait
inc
mov
sub
arpl
mov
adc
sahf
in
sub
cmc
sub
call
movsl
or
mov
cwtl
shr
shll
sti
sbb
lock
inc
movsb
xchg
adc
lock
xchg
sub
fmuls
movsb
rolb
mov
out
and
fs
pop
mov
xchg
jne
scas
insb
outsb
fildl
movsb
stos
cmpsb
or
frstor
xchg
inc
jecxz
mov
ja
sbb
mov
add
sbb
jl
adc
pop
movsb
repnz
jl
pop
sbb
mov
xor
es
add
jns
mov
iret
orl
or
add
mov
fsub
and
cmp
sbb
mov
in
pop
mov
rorb
or
jbe
xorl
sarb
jle
ret
cwtl
fwait
out
dec
push
sub
mov
sbb
jmp
movsl
repz
not
push
test
xchg
cmp
repnz
inc
scas
xor
and
and
ja
bound
adc
gs
push
fs
mov
sub
cwtl
test
test
mov
inc
fadd
mov
js
sbb
xchg
pop
jns
arpl
jmp
fs
mov
das
xchg
pusha
mov
test
dec
sbb
add
enter
mov
dec
ret
cmp
inc
jmp
aam
cmpsb
testb
push
sub
and
pop
les
cmp
mov
dec
pop
arpl
fwait
sar
cltd
call
inc
or
xor
sti
ds
sbb
out
xlat
fildll
sahf
lret
out
addr16
dec
jle
mov
popa
pop
fisubrl
pop
notl
repnz
pop
aas
int3
push
out
shrl
pop
mov
dec
jp
push
push
insb
lods
inc
add
in
xchg
push
jmp
fildll
or
and
xor
fisttpl
cmp
fcomps
jmp
push
into
jle
jo
repz
jne
std
push
cmp
sbb
jne
ja
inc
xchg
mov
cld
jmp
add
shlb
leave
sub
and
in
stos
mov
xor
mov
cmp
sub
test
cmp
push
add
fwait
xchg
aaa
orl
test
sti
or
sub
cmpsb
mov
xchg
inc
push
pop
sar
stc
aas
je
jmp
fsubs
dec
andl
aaa
mov
sbb
orb
xlat
push
lret
adc
das
mov
or
loop
or
arpl
mov
pop
mov
movsb
or
xlat
nop
sub
gs
push
mov
stos
je
sbb
pop
out
push
jno
xor
adc
sub
jae
jmp
jmp
or
cmp
cmpsl
movl
push
mov
movsb
cmp
cmpsl
enter
push
dec
inc
lods
in
cmpsl
pop
ja
in
mov
or
cli
iret
shrb
sbb
add
jecxz
mov
rcl
in
dec
dec
stc
adc
push
mov
sti
xchg
ss
sub
pop
inc
mov
daa
sbb
push
int
adc
push
adc
stos
mov
mov
call
push
pop
adc
fldenv
out
mov
ja
int
xchg
sbb
stos
dec
adcl
sbb
inc
std
push
jnp
or
cli
jne
out
adc
sub
push
imul
mov
arpl
adc
pushf
into
jge
sti
jge
popf
aas
cmp
sahf
jl
cmpsl
hlt
add
inc
xchg
lret
test
mov
andb
sbb
xchg
dec
std
addb
pop
pushf
repz
insl
mov
insb
outsl
adc
or
cltd
xlat
sbb
int
mov
addr16
imul
lcall
test
insb
int3
pop
test
popf
mov
stc
sub
cmc
adc
mov
pop
dec
data16
icebp
xchg
jl
mov
cmp
lock
lock
divb
xor
rcrl
arpl
js
stos
repnz
in
mov
jmp
bound
cli
orl
popf
mov
cli
test
out
sub
sub
mov
inc
push
loop
out
lahf
lea
jl
add
xlat
mov
repz
inc
rcrl
std
adc
idivb
cmp
lods
mov
sub
sub
ja
mov
xor
mov
and
inc
mov
clc
lds
bound
fisubl
push
cmp
and
sub
cmp
push
mov
jno
filds
ds
cmpb
ja
xchg
and
lret
and
test
mov
outsl
and
cmp
push
xlat
popa
or
les
dec
adc
sub
mov
fldcw
dec
sub
mov
fcompl
xchg
scas
aaa
shrl
push
push
cld
hlt
scas
mov
stos
cld
pop
adc
xorb
mov
pop
mov
insl
shrb
xlat
sbb
test
push
mov
pop
jbe
push
mov
rcl
push
sbb
pop
dec
repz
pop
push
andl
jl
push
jne
dec
lock
mov
fs
fldcw
pusha
loop
clc
outsl
ds
out
lret
cmp
jecxz
mov
mov
jp
mov
dec
je
iret
xor
gs
mov
divl
sbb
mov
sbb
sub
std
fnsave
stos
pushf
dec
fnsave
push
pop
pop
xor
int3
es
fisubrl
fimuls
mov
add
pop
jp
lret
fcom
cmpb
push
and
xchg
iret
icebp
rcll
mov
fistps
shll
xchg
add
cs
dec
cltd
push
hlt
cmpsl
or
mov
ss
jb
aas
clc
mov
or
mov
stos
dec
pop
pop
and
adc
xchg
lret
sbb
insb
xchg
lret
fcomps
sub
pop
data16
insl
sbb
sahf
int3
mov
add
cmp
repnz
bound
or
jae
inc
inc
les
jnp
jnp
sbb
out
je
mov
dec
mov
jns
lcall
inc
aas
stos
lcall
out
or
fmuls
ret
xor
dec
cmc
mov
mov
in
fs
jle
adc
mov
shlb
not
push
xor
iret
cwtl
or
out
rcr
or
mov
add
movsl
and
popa
mov
and
dec
xor
mov
subb
add
stos
stc
jmp
repz
push
je
add
xor
test
xchg
movsl
xor
fldt
cmp
or
push
push
cmp
sbb
negl
adc
out
push
sbb
out
icebp
rclb
rcll
sbb
loope
jl
mov
iret
pop
insl
ljmp
cmp
mov
sub
arpl
shufps
and
call
cmp
push
in
jmp
jg
add
insl
addr16
jmp
cwtl
push
outsl
jmp
imul
push
loopne
loop
xchg
jbe
clc
shl
cmp
lods
adc
mov
rcr
dec
dec
xor
or
fists
mov
rcrb
jmp
cmp
mov
sub
xor
push
das
lea
or
mov
cmp
hlt
cld
and
mov
stos
inc
push
lret
and
sbb
rcl
push
fsts
sub
les
xchg
jl
add
pusha
out
stos
jo
imul
or
add
lock
fwait
dec
xor
movsb
leave
mov
sarb
jl
xlat
sub
push
movsl
iret
push
out
popf
mov
fistpll
sbb
nop
cltd
sbb
int3
xchg
jle
and
inc
repnz
add
cmc
push
jns
fsubrl
scas
mov
fdivp
adc
hlt
xchg
int
iret
lock
add
add
lret
xor
jae
bound
jl
jno
enter
lcall
es
pop
add
cmp
adc
mulb
sub
pop
lret
push
mov
sbb
das
and
mov
insb
rcll
cmc
add
pop
cmpsl
cmpsb
rol
imul
stos
imul
jmp
imul
sbb
out
leave
test
xor
xchg
xchg
ret
mov
dec
ret
sub
jle
mov
cmp
push
jp
add
iret
rorl
lret
add
mov
orb
mov
sub
add
mov
jns
loopne
iret
in
push
push
add
test
out
cmpsb
lret
jno
dec
aam
sbb
cs
cmpl
push
iret
dec
inc
jge
add
pop
dec
leave
adc
lock
call
xchg
scas
inc
mov
jle
inc
lods
mov
lods
loop
mov
inc
int3
pop
sub
and
mov
mov
and
mov
and
jg
mov
imul
clc
movsb
mov
push
ret
test
xor
das
xor
sahf
dec
xor
shrb
ss
or
mov
dec
in
aad
arpl
xor
lret
push
xchg
xor
rcrb
int3
ret
cmp
cmpsb
jae
popf
cmp
sub
pop
or
pop
xchg
push
loope
and
fsubp
and
sbb
sub
and
xchg
push
jmp
outsb
pop
mov
mov
mov
pop
sub
jp
lock
cmp
movsb
mov
in
dec
jnp
dec
mov
push
cmp
out
loopne
into
sbb
dec
pop
xchg
adc
fistps
ret
push
adc
es
inc
es
xchg
push
sub
test
cmp
push
jecxz
les
fwait
mov
cmp
xor
ret
leave
into
xchg
loope
cmpsb
movsl
lods
sarl
fimull
daa
xchg
clc
int
test
adc
inc
pop
mov
jns
in
jle
fldl
int3
jl
int
sub
icebp
xchg
cmp
stos
sub
cmp
inc
testl
jbe
ret
push
loop
scas
sub
cmp
mov
mov
jg
or
test
sbb
xor
arpl
cmp
mov
xchg
out
mov
hlt
and
stos
lret
xchg
mov
add
stos
cmpsb
gs
sub
xchg
xchg
and
adc
mov
mov
jae
cmp
cwtl
push
mov
sbb
jge,pt
in
sbbl
cmp
mov
rorb
mov
sub
adc
cmc
in
pusha
mov
cs
or
add
and
jge
stos
cwtl
and
popa
sub
pop
cmpsb
dec
data16
rcl
fwait
mov
pushl
inc
mov
mov
mov
aas
add
aaa
imul
jb
and
mov
repnz
stos
pushf
popa
fadds
leave
outsb
repz
repnz
inc
lret
push
pushf
pop
jmp
push
pop
cmp
cmp
pushf
xlat
sbb
hlt
xchg
das
ret
repz
jmp
adc
pop
out
test
out
pop
repnz
mov
dec
dec
loopne
cmpsb
out
sbb
jecxz
cmp
mov
notl
cmpsb
fs
out
inc
pop
pop
in
ds
mov
xchg
push
aas
mov
cld
mov
out
jne
pop
push
not
jne
cltd
cmp
xchg
adc
test
ljmp
mov
inc
push
sbbb
sbb
mov
addr16
mov
jae
movsb
xor
shrb
sub
clc
pushf
iret
dec
push
mov
and
enter
mov
jne
in
stc
pushf
cwtl
out
jns
dec
loop
add
push
mov
scas
repnz
add
dec
xchg
cs
adc
or
pop
mov
and
push
movsb
shrb
lock
mov
add
jmp
push
pop
adc
mov
adc
sbb
sbb
jae
dec
aaa
xchg
and
roll
test
push
cmpsl
adc
dec
mov
pop
pop
icebp
ret
mov
aaa
mov
mov
dec
push
notb
inc
jne
sub
fs
push
inc
rolb
call
sti
xchg
pushf
jge
nop
shl
inc
xor
popf
inc
adcb
mov
push
stos
shll
scas
or
pop
enter
jge
sub
ja
aas
sbb
div
sub
adc
dec
add
jbe
scas
lock
dec
xchg
xchg
mov
xchg
je
fcompl
mov
push
sbbb
xchg
in
and
and
mov
outsl
xor
mov
lods
lcall
mov
push
xor
jecxz
lahf
mov
dec
aad
arpl
add
mov
das
pop
cld
mov
xchg
xchg
std
xor
aaa
cmp
xor
add
scas
lea
cmp
adc
ret
xor
nop
and
fistpl
or
jle
pusha
and
ljmp
mov
and
dec
mov
xor
cmp
xchg
movsl
jo
pop
mov
imul
pop
sbb
arpl
stos
lcall
and
xchg
xchg
jg
mov
test
add
mov
mov
xor
sub
pop
jle
sbb
mov
mov
js
lcall
movsb
xor
or
mov
das
test
pop
imul
lods
imul
jno
dec
mov
adc
xlat
and
push
addr16
adc
lret
popa
aam
mov
ficoml
mov
arpl
push
fwait
arpl
mov
or
xchg
push
pushf
pushf
jb
dec
sub
xchg
sti
pop
ds
xor
popf
std
pop
cmpsb
push
ret
adc
sbb
or
push
pushf
fs
xchg
jge
shlb
mov
mov
ret
call
es
insl
jp
movb
jl
and
cwtl
add
iret
shll
push
lcall
and
dec
pushf
int3
xor
adc
push
push
aas
mov
pop
pusha
es
mov
inc
arpl
push
and
or
pop
or
jnp
push
or
dec
jge
test
addb
pop
int
pop
fmuls
pop
std
nop
mov
subb
faddl
test
mov
pop
test
ficomps
ds
xchg
out
repz
ret
or
and
xor
pop
mov
jno
mov
adc
mov
out
fisttps
scas
xchg
mov
leave
iret
pusha
cs
bound
shl
add
sub
roll
adc
fisubl
lods
mov
fdivrs
rcr
xor
jmp
mov
push
cltd
pushf
inc
bound
jae
cmp
dec
push
push
mov
lds
jnp
or
dec
lahf
imul
ja
adc
xor
mov
test
or
mov
mov
jge
cmpsl
sbb
push
nop
in
imul
scas
cld
out
mov
pop
add
mov
xorb
inc
fsts
outsb
add
mov
pusha
mov
mov
ljmp
sbb
inc
aaa
movsl
repnz
adc
jmp
xorl
jne
ljmp
lret
or
xchg
cmpsb
xor
push
dec
sti
int
mov
aaa
es
mov
roll
ret
cmc
jp
in
xorb
dec
ss
and
shll
shlb
push
insl
mov
int
push
out
repz
cmp
sbb
lods
cmp
ja
pop
pop
iret
fidivrs
mov
aas
aam
cwtl
xchg
jb
or
push
dec
pop
loop
mov
outsl
cmc
inc
dec
inc
sbb
test
jae
cmp
pusha
mov
push
sti
daa
shl
fnsave
and
aas
pushf
xchg
jmp
fbstp
xchg
mov
add
add
jp,pn
arpl
popa
repnz
xor
dec
and
add
out
into
sub
push
int3
cld
outsl
dec
pop
jns
pop
fmul
xor
in
pop
sub
andl
xor
repz
xor
or
fadd
pop
jnp
inc
into
inc
mov
fistl
push
insb
cltd
ja
inc
shll
je
jo
lret
push
or
sbb
clc
add
adc
or
mov
int
gs
pop
mov
push
and
stos
mull
jp
hlt
inc
rclb
push
add
in
sahf
mov
push
into
cwtl
shl
xchg
call
sub
call
dec
mov
pop
xchg
movsl
imul
jmp
sub
lcall
repnz
or
ficompl
jns
jne
arpl
jle
out
jg
in
cs
xchg
cmp
pop
mov
sub
sub
sbb
and
mov
xor
fwait
call
xchg
roll
mov
dec
rcll
push
lods
ror
adc
outsl
lea
lods
inc
or
cmpsl
fistps
inc
mov
inc
or
push
add
xor
je
push
xchg
adc
inc
or
xor
add
dec
jnp
in
push
jne
aad
mov
rolb
dec
arpl
jbe
pop
in
inc
sub
cmpsl
pop
sbb
imul
pop
pop
loope
lcall
imul
repz
jne
adc
outsb
mov
sub
dec
dec
js
dec
pop
jp
sbb
pop
outsl
ss
in
sub
test
stc
sahf
pop
hlt
sbbb
jle
cmc
lods
shlb
aas
mov
adc
out
pop
inc
cmpsl
fstp
lret
mov
xor
jmp
xor
pop
imul
push
mov
jb
and
dec
int3
push
or
data16
fisubrs
jbe
xor
ds
adc
ret
pop
add
ds
mov
ret
pop
mov
dec
test
dec
sbb
test
jae
jne
adc
loope
pop
and
ljmp
repnz
xor
add
incl
and
sub
inc
add
addb
mov
adc
in
sbb
xchg
adc
mov
dec
in
insb
bound
pop
cmp
mov
sbb
pop
mov
rorb
sbb
and
or
insl
es
fbstp
mov
mov
icebp
xchg
sbb
sahf
scas
dec
test
sahf
xchg
add
pop
jecxz
jmp
aam
addr16
leave
xor
jmp
push
pop
push
xor
out
and
jns
in
fs
loopne
pop
cld
or
cmp
xchg
xchg
and
cltd
fisubrl
sbb
mov
push
sub
xor
shll
test
test
pop
jecxz
sbb
stos
sub
leave
insb
cld
stos
mov
call
sub
inc
jo
mov
xor
mov
adc
in
mov
fsubrl
cmpsl
jns
xor
iret
int3
insl
lahf
pop
mov
scas
sub
sub
mov
jmp
out
cs
ja
adc
dec
push
stos
ja
push
lret
push
xchg
imul
xchg
jl
jl
shll
mov
push
and
jbe
add
mov
int
xchg
into
out
sub
add
xchg
and
sbb
dec
inc
outsl
pop
cs
ret
es
inc
mov
adc
movl
mov
xlat
movsb
scas
je
lods
lret
sbb
fcos
in
xor
jle
repnz
add
push
mov
dec
imul
xor
xor
pop
and
imul
mov
hlt
repz
xchg
call
jno
and
in
mov
jbe
mov
arpl
cwtl
scas
movsl
and
mov
fstl
cmp
insl
ficoms
out
adc
rcrb
dec
inc
mov
cmp
dec
jp
loopne
fs
paddb
in
aas
fucomi
add
into
jecxz
xorl
dec
stc
rolb
xor
fcoml
or
lcall
push
popa
jne
ja
push
jne
pop
shl
aaa
arpl
daa
lods
jo
mov
fcompl
sub
pop
sub
inc
gs
add
orl
jmp
lds
push
jo
insl
fsubrs
sahf
movsl
mov
and
negl
in
es
xor
orb
mov
addl
and
mov
pop
sub
mov
cmpsb
rcrb
test
or
notb
mov
mov
sub
jmp
loope
insb
xchg
xor
lods
jmp
rorl
lock
jle
push
xor
jno
xchg
gs
imul
push
imul
lret
sahf
pop
fs
pop
lds
xchg
sbb
xchg
mov
or
sub
fsubl
test
pop
dec
int3
mov
std
enter
mov
ffreep
lock
and
sahf
cmp
data16
sub
jge
adc
mov
xlat
pushf
cwtl
fwait
mov
inc
dec
es
push
xchg
stos
fadds
cmp
push
insb
push
jns
test
add
cmp
pop
push
out
jle
cmpl
or
gs
sub
hlt
dec
test
or
out
pushf
sub
adc
fiadds
and
add
aaa
sbb
mull
pop
push
sbbb
inc
xchg
mov
xor
dec
pop
rorb
stos
mov
aaa
mov
mov
rcl
add
or
adc
das
rcll
sahf
jo
mov
popa
dec
mov
scas
inc
test
jmp
pop
imul
mov
xor
sbbb
mov
sub
lds
es
fdivrp
xchg
lods
dec
mov
xor
shlb
test
cltd
cmp
cmpl
ss
inc
rcrb
or
sbb
mov
xor
sti
mov
add
rcrb
andl
push
roll
and
test
in
sbb
imul
xchg
out
add
push
imul
aam
pushf
repz
xor
insl
cmpsb
loop
xor
outsl
lods
lods
mov
jmp
or
sbb
inc
stos
xchg
mov
xchg
mov
aad
lds
in
mov
sbb
pusha
mov
int3
adc
jl
sub
pop
fisubrl
mov
stc
fsubrp
or
lahf
add
add
dec
pop
sub
jl
imul
popa
ret
sub
mov
sub
pop
neg
test
cmpsl
inc
clc
dec
mov
push
push
dec
sahf
lcall
push
aaa
xchg
aas
dec
xor
pop
mov
add
pop
inc
cmp
cs
jp
pop
ret
std
inc
cmp
pop
imul
jns
je
jmp
imul
or
sti
push
mov
insb
out
xchg
jge
dec
mov
lret
rorb
sbb
pusha
xor
es
daa
cli
push
call
add
cmp
or
xchg
mov
push
xchg
scas
mov
sbb
stos
ficoml
rorb
test
test
push
iret
add
test
fwait
adc
mov
cmp
push
add
addr16
xchg
pop
add
jbe
push
fwait
xchg
lret
dec
aam
adc
out
in
sbb
sahf
iret
add
inc
hlt
ds
aam
scas
lods
in
pop
dec
xor
xchg
out
out
jae
sbbl
sub
icebp
or
add
aam
mov
inc
mov
orb
cmp
adcl
and
push
cmp
rcll
test
loope
or
xchg
fwait
mov
fdivl
js
and
lds
or
mov
mov
xor
jae
and
leave
int3
mov
enter
cmp
lds
dec
mov
xchg
add
sbb
cs
enter
jg
mov
inc
fwait
mov
xlat
dec
nop
or
mov
pop
ss
scas
outsb
fistl
jnp
dec
or
push
mov
iret
add
inc
mov
and
call
aas
push
out
jns
inc
pop
scas
mov
mov
arpl
jecxz,pn
test
mov
sub
mov
xor
adc
stc
push
daa
dec
addr16
loop
or
mov
ljmp
arpl
cld
subb
mov
cltd
push
jg
add
int3
adcb
sub
leave
mov
pop
and
sub
xor
pminub
pop
mov
outsb
sti
pop
adc
adc
pusha
sub
jno
xor
fisubs
pop
pop
inc
jp
sti
loopne
adc
loop
or
push
xchg
test
testl
add
lods
push
rcl
mov
mov
pop
repz
pusha
adc
and
push
scas
mov
int3
ja
mov
sbb
cld
push
push
insl
push
in
repz
rcll
movsb
or
cwtl
pusha
inc
adc
out
ret
or
pushf
push
adc
jl
lret
sete
bound
xchg
push
lcall
dec
push
xlat
pushf
addl
test
xchg
jg
sub
js
bound
repnz
sbb
negl
cs
xchg
sub
outsl
sbb
mov
mov
repnz
notl
mov
fwait
aaa
iret
push
cmp
rorb
xchg
imul
insl
jmp
fbstp
sahf
push
dec
mov
mov
push
stc
push
cmp
lret
hlt
int
jmp
sbb
cwtl
lds
push
add
mov
scas
xor
cmp
pushw
cli
adc
aas
insb
movsb
fidivrs
sbb
out
push
sub
pop
xchg
pop
mov
sub
mov
aam
call
inc
push
test
xchg
imul
mov
cmc
add
cmp
sbb
ss
bound
pop
in
dec
cmp
iret
aaa
xchg
ss
pusha
or
mov
or
add
or
dec
xchg
ffreep
js
adc
enter
push
lds
jle
repnz
test
jbe
mov
dec
in
ss
inc
out
inc
stos
jmp
aas
test
and
mov
es
pop
shll
je
clc
popf
xor
ljmp
enter
jmp
or
jmp
mov
dec
out
pop
xorl
cmp
aaa
mov
test
data16
sbb
pop
fsubs
repnz
cmp
aas
insb
adc
cli
rorb
lea
mov
adc
cwtl
push
push
jge
add
nop
and
or
shll
test
sti
test
cwtl
popa
xchg
and
push
pushl
lods
cltd
xlat
jmp
push
xlat
scas
cmpsl
and
stos
jo
js
xchg
cmp
xchg
mov
pop
cmp
in
push
cmp
sub
dec
cmp
lcall
and
dec
sbb
add
fwait
pop
jne
es
add
out
cwtl
testb
mov
mov
icebp
daa
jns
pop
xchg
jae
bound
cmc
mov
adc
xor
int3
arpl
add
lods
loope
icebp
pop
pushf
sub
xor
jl
lods
fidivrl
xor
xor
icebp
cmpsb
adc
xchg
add
fisubl
sub
mov
insl
enter
loope
push
mov
pushf
mov
cmpsb
jmp
mov
lds
and
dec
mov
cmpsl
int3
add
sti
xor
in
iret
or
push
pop
push
xchg
jecxz
cwtl
ljmp
ret
not
iret
mov
popa
pop
lea
ljmp
enter
es
cmc
xchg
push
cld
and
adc
stc
test
jmp
mov
pop
loopne,pt
mov
mov
andl
jb
jl
adc
pop
mov
testl
jno
xor
in
cli
sbb
push
or
icebp
mov
rorb
lret
lret
sbb
repnz
inc
mov
push
lahf
xchg
sub
and
pop
adc
jg
jecxz
gs
cltd
jae
int3
xchg
push
sub
fincstp
and
test
xchg
inc
roll
xchg
lret
mov
ret
repnz
popa
mov
inc
add
insb
jl
mov
in
pop
jp
dec
dec
into
jecxz
push
jae
cmpsb
popa
jbe
mov
push
cmc
sbb
bnd
pop
mov
mov
sub
out
bound
jg
cmpsl
or
mov
jmp
xchg
or
xchg
pop
mov
addr16
test
pusha
or
xor
push
ljmp
pop
jge
shl
mov
sbb
mov
aaa
test
daa
das
adc
out
hlt
pop
std
dec
add
xchg
nop
lods
xchg
or
lahf
sahf
sub
and
mov
jp
mov
adc
mov
sbb
aas
repnz
mov
rorl
imul
sub
leave
jle
int
mov
jle
jg
inc
mov
jno
xor
incb
rorl
inc
popa
std
das
stos
dec
sahf
xchg
adc
sub
stc
mov
clc
popa
clc
xor
mov
push
js
lds
repnz
adc
mov
dec
push
xchg
cmpl
sbb
jne
mov
aam
inc
xchg
push
adc
test
ja
inc
push
cwtl
repnz
sub
loop
fdivs
das
cli
lock
and
mov
jp
mov
mov
jb
push
adc
jg
std
imul
test
gs
shlb
xchg
les
xor
cmpsb
xor
mov
inc
sarb
xor
add
xchg
mull
lock
repnz
out
dec
out
cmpsb
data16
and
mov
mov
iret
pop
repnz
in
in
sbb
loopne
and
in
ss
jno
shr
fs
and
fwait
imul
pusha
cmp
outsb
and
leave
dec
inc
out
jmp
psubb
loop
cmp
sbb
ss
les
enter
mov
aaa
adc
nop
dec
bound
mov
out
jg
flds
push
xchg
ret
jnp
insb
ja
mov
jge
adc
test
andb
jecxz
pop
xchg
imul
dec
jns
notl
mov
add
dec
pop
push
jmp
test
xor
cmp
pusha
sbb
testb
lahf
les
movsl
lea
into
hlt
add
jle
xchg
insl
dec
xor
pop
or
shl
call
push
dec
cli
arpl
adc
das
cmp
pop
push
jnp
imul
mov
mov
mov
cmpb
cmp
imulb
test
cmp
test
sbb
mov
xchg
mov
ja
stos
xor
sqrtps
sahf
leave
shll
push
mov
cmpl
fisttpl
inc
xor
ds
or
sbbb
sahf
mov
adc
mov
push
cs
mov
sbb
and
sbb
mov
inc
jmp
pop
cmp
pop
fsubrs
ffreep
fucom
mov
cmp
push
add
es
outsb
dec
lret
jmp
test
mov
and
test
cmp
and
adc
push
adc
dec
outsl
lock
adc
outsb
xor
stos
inc
adc
cmp
xor
push
mov
jmp
mov
test
fisttpll
pop
aam
jp
in
inc
insb
or
and
mov
mov
push
ds
sub
jbe
ret
popf
or
add
aas
mov
adc
mov
fs
cltd
loopne
add
dec
inc
sub
dec
es
lods
xchg
leave
xchg
data16
sti
inc
mov
inc
leave
mov
loop
test
push
int3
aam
call
mov
pop
fs
popf
repz
add
sbb
scas
repnz
imul
rcr
iret
xchg
test
push
jae
js
subb
mov
push
push
ds
add
mov
sbb
xchg
sub
dec
xor
pop
aam
and
rorb
and
adc
fidivs
scas
xchg
int3
xor
mov
inc
fldl
in
aad
jmp
mov
test
cmp
cs
fldt
push
lahf
jg
nop
ds
mov
mov
and
loope
pop
stos
mov
stos
mov
pop
into
mov
xor
out
je
add
dec
lret
lcall
shr
mov
out
dec
cltd
int3
int3
icebp
mov
xchg
push
inc
cs
push
mov
xchg
into
pop
incl
push
dec
imul
out
insl
pop
es
cmp
sbb
push
push
fwait
xchg
xchg
mov
add
repz
mov
dec
popa
inc
inc
incb
and
and
mov
jecxz
xchg
shl
jl
lahf
dec
loope
add
jmp
scas
loope
std
mov
idivb
or
jne
xor
and
push
insb
fldt
lods
lock
das
popf
push
cmp
cltd
add
jge
sbb
pop
xchg
dec
sbb
repnz
mov
rclb
push
pop
inc
xlat
mov
xor
add
or
sub
add
adc
push
jno
dec
pop
orb
sbb
pop
jmp
mov
mov
dec
incb
js
loope
sti
xchg
std
mov
cwtl
mov
xchg
loope
push
cwtl
or
inc
sti
rcrl
movsb
or
das
jns
inc
daa
adc
pushf
inc
adc
and
push
or
jno
or
aam
out
repz
and
aas
inc
and
jae
or
rolb
or
test
int3
pop
mov
mov
loopne
data16
sbb
sbb
pop
rep
pop
rcr
sub
inc
xchg
mov
pop
int
imul
aas
ret
cmpsb
popa
push
xchg
inc
push
pop
ret
mov
fs
cltd
pop
cmpl
dec
jp
cli
ficoms
pop
orb
jge
cmc
xchg
push
outsb
lret
pop
imul
pop
sbb
mov
data16
dec
sub
push
xor
push
popa
jmp
jo
lods
push
add
push
outsb
lock
and
push
out
mulb
into
cmp
aam
mov
sahf
es
ss
lret
xchg
mov
mov
mov
pop
jbe
inc
xchg
push
bound
inc
cld
out
push
mov
push
xchg
in
out
aaa
sub
out
and
push
inc
lods
fdivl
addl
aad
cli
sub
fisttps
mov
gs
pop
mov
lret
xlat
and
and
pop
jecxz
mov
dec
jg
ret
pop
dec
jb
sbb
sbb
lds
jns
mov
cmp
rclb
repnz
pop
mov
enter
into
mov
mov
mov
push
cmp
xchg
les
and
in
push
das
mov
inc
sub
insl
sub
xchg
insl
inc
cmp
and
sbb
inc
jnp
or
sbb
sub
mulb
sbb
add
iret
sahf
bound
mov
cltd
cmc
pushl
ficoml
push
push
addr16
push
movsl
add
rol
das
push
out
stos
dec
xor
std
add
inc
pop
sbb
push
nop
cmp
test
mov
dec
mov
shr
dec
or
xchg
xor
into
cmpsb
lahf
mov
sbb
jbe
in
push
psrld
pusha
add
fs
test
das
lcall
je
inc
push
push
and
mov
std
or
and
pop
cmp
test
adc
jb
repnz
loopne
aam
hlt
adc
int
mov
popa
bound
mov
mov
push
or
test
mov
test
mov
mov
mov
adc
test
roll
pop
sbbl
test
subb
cmp
iret
add
adc
jo
jg
mov
sbb
dec
sub
and
enter
cmp
mov
lret
xchg
xor
mov
enter
ljmp
pop
sub
cmc
add
pop
daa
stc
mov
ljmp
test
in
lcall
mov
shrl
xor
mov
cltd
add
push
xlat
rcr
or
or
mov
jmp
icebp
mov
mov
xlat
pop
je
popa
sahf
les
jle
les
leave
push
call
xchg
movsl
lcall
cld
mov
adc
test
cmpsl
xchg
xor
add
mov
test
push
add
aad
lret
in
and
jbe
ss
xor
adc
add
xchg
je
xor
leave
push
ret
jbe
xor
mov
add
mov
out
pop
mov
or
mov
push
xchg
adc
and
and
mov
clc
out
push
xor
insb
push
iret
cwtl
add
xor
mov
icebp
lahf
mov
inc
jno
pop
inc
xchg
imul
data16
insl
xor
and
pop
jge
into
mov
shrl
ss
add
pop
ljmp
andnps
cmp
movsb
xchg
or
mov
push
das
sub
dec
ds
movsl
movsl
xchg
push
sub
test
sti
sbb
hlt
sub
bound
arpl
add
lock
in
adc
loopne
add
cwtl
shll
sbb
in
sbb
xchg
cmp
mov
out
mov
or
sbb
rol
xchg
jecxz
jge
and
sbb
out
xor
sahf
in
dec
fld
mov
mov
test
cmp
adc
add
les
jecxz
aas
mov
fsub
jle
xchg
cmpsb
pop
push
and
pusha
fwait
popf
popa
cmp
clc
or
fldcw
shll
cwtl
es
cmpsl
std
jb
pusha
and
push
ret
ror
inc
stc
mov
ss
xor
mov
repz
jg
sbb
dec
nop
dec
insb
inc
cltd
popa
lahf
cmpsl
jns
fdivrp
sbb
dec
in
iret
and
jmp
pop
mov
psubusb
das
jecxz
in
pop
pop
push
repz
sbb
fidivs
lret
es
pop
push
jb
adc
pushf
daa
mov
out
imul
dec
mov
xchg
lret
in
ds
arpl
scas
roll
fcoms
les
push
and
pop
mov
pop
rorl
push
add
pop
js
mov
ss
xor
sbb
fadds
jno
rol
push
cmp
idiv
xlat
mov
add
outsb
cmp
pop
mov
in
xor
mov
add
sub
cwtl
js
lret
mov
icebp
std
lret
cmp
jae
push
inc
ss
stos
or
push
push
test
pop
xor
xchg
mov
jmp
aaa
fcomps
mov
mov
xchg
push
and
xorl
add
jae
mov
inc
insb
addr16
imul
fcoms
ds
fs
or
cmpsl
adc
dec
stos
and
mov
pop
test
aaa
adc
push
ja
fadd
xchg
fcoms
xchg
movsb
gs
mov
int3
mov
inc
bound
xchg
pusha
fisttpll
scas
aas
xor
enter
sahf
ljmp
ret
jge
jg
es
lock
pop
fninit
sbb
stc
ror
inc
pop
xor
sub
dec
jo
xchg
dec
fisttps
xor
sahf
outsb
lahf
dec
dec
lcall
jns
pop
test
stc
and
call
xor
lret
jl
push
loop
inc
sbbb
xor
or
dec
std
imulb
cld
mov
xchg
fs
andl
sbb
jle
inc
test
sub
or
lods
or
pop
cltd
hlt
dec
test
dec
pop
scas
repz
xchg
mov
jmp
sbb
xor
xchg
mov
pusha
ljmp
inc
out
mov
mov
mov
jg
insl
jnp
loope
test
add
das
test
xlat
fdivrl
xchg
shl
mov
cli
es
enter
push
inc
dec
fcmovbe
push
in
jnp
mov
inc
js
mov
stos
test
adc
jmp
dec
push
mov
imul
sbb
movsb
push
cmp
stos
das
push
cmc
shrl
ror
mov
mull
jmp
cmp
xlat
jbe
dec
add
mov
xor
cmpsb
pop
mov
cltd
xor
pop
mov
shrl
call
je
cmp
cwtl
in
inc
imul
pusha
jmp
push
xorl
bound
mov
dec
test
dec
in
push
xchg
stos
lods
mov
adc
or
outsl
sbb
cld
jb
pop
jb
sub
or
out
idiv
jmp
clc
pop
cmp
inc
add
and
sub
fdivr
sbb
and
push
cmpsl
jo
mov
cld
adc
into
outsb
adc
jb
cmc
jo
iret
mov
jb
fs
adc
mov
hlt
in
and
jl
nop
lods
lahf
cli
cwtl
insb
mov
pop
orb
hlt
push
xor
sbb
in
shlb
into
push
rorb
orl
test
aam
jg
push
cmp
mov
insb
xlat
cmpsl
in
jmp
cmc
hlt
cwtl
cwtl
sub
pop
out
fdivs
mov
sub
out
dec
sbb
pushf
into
movsb
sbb
and
scas
loope
mov
mov
fimuls
adc
jle
sub
adc
fwait
sub
orb
cmp
gs
dec
xchg
jae
rolb
clc
ret
xchg
sbb
mov
mov
out
shr
and
popw
data16
ss
stos
add
jmp
add
fwait
ror
ljmp
adc
inc
push
dec
stos
push
movsb
xor
dec
in
mov
repnz
sbb
sti
lahf
mov
mov
fs
movsb
mov
mov
cmc
sbb
ss
sub
cmp
mov
push
adc
xchg
std
lds
jge
mov
dec
fstps
mov
sbb
mov
int3
mov
jg
or
xchg
mov
sahf
out
or
je
cmp
scas
icebp
push
jo
inc
mov
je
pop
lcall
psubq
adc
or
mov
bound
xchg
out
jle
mov
cmp
int
mov
cld
and
mov
cwtl
lahf
nop
and
jne
pop
add
rol
sarb
add
addb
cs
loopne
into
xlat
out
fadds
add
add
jbe
ds
into
cltd
ja
lods
cltd
add
sti
arpl
pop
jae
sbb
xor
pop
adc
mov
sti
jmp
shrl
mov
jmp
imul
jecxz
or
icebp
ss
push
cmp
mov
ret
sbb
jae
lock
mov
jae
pop
push
jno
inc
push
je
lahf
imul
mov
dec
xchg
adcb
cld
or
mov
add
add
stc
push
fdiv
and
inc
xchg
adc
mov
movsl
jle
sbb
jb
mov
es
jo
mov
mov
ret
pop
sbb
jno
xchg
xchg
arpl
mov
loope
cld
fdivrs
jl
push
lock
push
in
lahf
adcb
out
cli
mov
cmpsl
jmp
jns
sbb
std
xchg
jae
xor
insl
cs
dec
popa
xchg
xorb
icebp
sub
out
addr16
fstpt
test
jns
out
mov
loop
movsl
inc
xchg
enter
iret
inc
add
imul
add
adc
gs
inc
or
out
lds
or
inc
add
out
xchg
mov
lods
negb
int
ret
sahf
stos
adc
sbb
dec
xor
mov
sbb
insb
mov
dec
pushf
inc
push
imul
scas
aas
test
fisttpl
int
icebp
fs
sbb
loop
out
in
mov
mov
cmc
inc
mov
xor
pop
int
pop
and
and
pop
and
insl
lea
fwait
sarw
sarb
mov
adc
xchg
add
sbb
repnz
cld
cmc
pop
adc
sub
mov
xor
pop
pusha
inc
mov
lock
lds
rolb
push
repnz
push
push
inc
add
mov
xchg
lret
add
call
pop
into
jbe
cmpsb
cmc
cmp
rcr
push
mov
adc
pop
xor
jg
std
sub
ja
adc
pop
test
mov
das
pop
mov
lret
cmp
loopne
cmp
push
call
inc
push
fstl
lret
pop
out
js
adc
xor
jns
mov
pop
pop
xchg
add
inc
xor
sub
push
insb
jmp
push
sub
daa
mov
or
or
sbbl
and
les
dec
xchg
mov
fdivl
in
cli
insl
push
and
xor
mov
outsl
loope
jns
and
adc
cmp
nop
je
jnp
inc
xor
mov
nop
scas
jge
mov
fsubl
add
and
sbb
jae
mov
imul
and
dec
and
or
xchg
repz
cmp
pcmpeqw
dec
fdivrs
pop
cwtl
jle
ds
jbe
mov
mov
jg
ds
ljmp
cmpsb
rcr
or
xor
jl
adc
add
mov
and
in
and
cmp
add
popf
mov
push
movlps
test
ljmp
lret
mov
push
aaa
daa
repnz
jnp
imul
mov
or
jno
push
push
bound
inc
lods
inc
ret
lock
cwtl
jge
fcompl
jo
sti
popf
int
mov
or
in
or
and
sub
loope
hlt
push
fiaddl
pop
inc
lods
push
xchg
pop
insl
mov
xchg
push
test
add
jae
xchg
sub
jl
jge
jp
fwait
ss
sbb
xchg
jae
inc
pop
inc
push
sbb
jne
lock
inc
js
push
lret
mov
int
stos
addr16
out
push
dec
mov
dec
mov
inc
pushf
mov
inc
ljmp
fcomps
les
aam
std
pop
lds
movsb
cmpsl
mov
inc
cwtl
das
sub
int3
sbb
clc
mov
jl
cmp
das
out
imul
aam
insb
jno
push
test
rolb
pop
aam
pop
mov
insl
cmp
lahf
int3
shlb
sub
add
jnp
and
repz
fnstcw
std
mov
andl
mov
pop
mov
icebp
sbb
mov
int3
mov
fidivrl
dec
push
jmp
cmp
adc
mov
jno
pop
dec
mov
sub
mov
dec
pop
sbb
cwtl
sbb
cmp
mov
pop
xchg
and
mov
mov
jae
push
loop
pusha
ret
or
mov
push
xor
add
pop
mov
jge
mov
out
roll
std
mov
push
pop
and
or
fldl
adc
xchg
jbe
in
cmc
push
sar
cmp
and
jp
insb
vcvtsi2sdl
dec
int
dec
icebp
cmpsb
arpl
pop
mov
cmp
inc
in
push
shlb
enter
decl
mov
insl
scas
shl
cli
cwtl
test
pop
adc
adcb
les
in
imul
cmpsl
xchg
pop
pop
or
jo
scas
lret
cmpl
test
cmpsl
jns
into
push
mov
xlat
push
pusha
outsb
dec
ret
test
mov
push
in
out
xchg
test
mov
arpl
pop
push
jle
or
cmp
and
imul
adc
mov
jmp
stc
aad
mov
jp
stos
into
gs
fmull
jns
iret
in
movd
dec
daa
dec
sbb
jge
sbb
jp
insb
mov
mov
mov
add
lret
lock
add
int3
out
xor
es
dec
repz
xchg
sub
cltd
cmp
mov
and
add
jmp
push
dec
mov
xchg
mov
inc
ret
sbb
xchg
and
mov
sbb
stos
jno
into
sbb
imul
das
rsm
cli
mov
jbe
dec
mov
mov
lea
and
popa
or
inc
fistpl
jle
adc
outsb
orpd
test
int
pop
int3
mov
pop
outsb
repnz
adc
lahf
mov
mov
jmp
push
pop
out
and
dec
in
into
and
adc
popa
jo
cltd
cwtl
lock
es
rorb
lcall
aad
xor
jno
clc
mov
pop
aas
xchg
push
push
mov
cmp
aam
fcmovnu
lods
cli
shrl
dec
out
ficompl
and
popf
aam
sub
dec
insl
add
pop
insl
cld
mov
inc
jecxz
loopne
das
rcr
push
xchg
jne
test
jns
cwtl
int
add
out
jb
xchg
call
into
movl
jle
inc
scas
cmpsb
subl
je
cmp
push
pop
lret
sahf
in
and
or
jmp
mov
les
ljmp
movl
sbb
xchg
ja
inc
cwtl
imul
mov
scas
pop
adc
je
clc
cwtl
incb
push
pop
pop
pop
shlb
test
icebp
nop
mov
mov
imull
out
lcall
mov
and
fwait
inc
cmpsl
push
dec
scas
movsl
out
push
jp
je
dec
leave
daa
inc
mov
xorb
cltd
dec
aad
movsb
sar
push
stc
pusha
pop
adc
ds
jnp
idivb
xor
in
cmpb
sbb
rolb
in
arpl
repz
sbb
loop
xor
inc
daa
xchg
lock
pop
repnz
pusha
xor
ss
nop
mov
rcrl
lahf
xchg
mov
addb
int
aaa
pop
insl
stc
daa
cmp
xchg
jp
insb
in
das
icebp
in
pop
mov
sbb
inc
jp
jmp
xchg
sbb
icebp
push
popa
cmpb
cld
push
fnsave
cmp
mov
loop
test
aad
out
out
sahf
adc
lea
mov
cmp
add
jl
mov
in
outsb
mov
mov
mov
in
stos
rcll
mov
out
mov
jne
dec
loopne
jno
mov
adc
pop
jo
cmp
ret
rorl
les
sbb
lret
int3
dec
lods
xor
insl
pmuludq
cwtl
mov
mov
loope
notb
jle
mov
addl
fdivl
stos
mov
int3
insb
dec
push
pop
mov
ret
addb
jl
adc
add
adcl
add
sahf
inc
minps
pop
leave
xor
mov
mov
jp
mov
pop
cmp
loope
aas
sub
mov
out
and
cltd
ret
sbb
ss
cmp
mov
jp
cld
sbb
mov
loope
sub
daa
dec
outsb
mov
sbb
xchg
dec
iret
imul
jno
pop
pop
sub
movsb
into
inc
cltd
sahf
jp
jmp
inc
daa
inc
cli
mov
cmc
cmc
or
in
lock
cld
in
arpl
rclb
pop
insb
in
shl
mov
es
cmp
pop
lods
ret
aad
jecxz
rcl
subl
and
xchg
push
mov
aam
or
arpl
jmp
cmc
cmp
and
and
scas
call
lds
push
push
aas
lret
push
jg
mov
add
sub
mov
jle
xor
pop
or
scas
or
dec
pop
mov
negl
xrelease
popa
dec
mov
dec
mov
xor
pop
dec
xchg
add
in
jle
decb
xchg
stos
jge
fwait
mov
out
sub
adc
jbe
imul
popa
push
pop
mov
scas
lea
xor
cmp
sti
scas
dec
push
hlt
lods
xor
pop
lcall
pop
popf
jb
xchg
xor
adc
cltd
adc
push
aaa
addl
enter
xchg
xchg
sbb
stos
push
inc
cbtw
mov
jge
aam
mov
movsb
pop
mov
lock
xlat
lret
fists
pop
and
jnp
push
ljmp
jno
repnz
jo
movsl
push
mov
fisubrl
push
push
mov
out
mov
mov
dec
rol
loope
lds
loop
mov
jo
mov
in
lock
ficomps
adc
pop
cmpsl
gs
inc
jb
and
xor
adc
lods
inc
shlb
or
out
jo
lahf
cmpsl
dec
je
mov
inc
inc
or
addr16
call
mov
or
mov
ds
movsl
mov
xchg
jne
sti
xor
xchg
repnz
fcoml
push
in
adcl
test
loope
inc
fisubrs
cmp
pop
mov
ret
lods
ljmp
js
insb
sub
mov
lods
inc
jp
xor
ret
outsb
or
les
shl
mov
add
push
jg
cmpsb
test
xor
cmpsl
cmp
lahf
cmp
es
stos
int3
sbb
dec
mov
push
das
fldl
cmc
bound
cltd
mov
sub
xor
mov
ret
jb
mov
push
push
sbb
and
sub
test
cmp
sbb
sbb
mov
add
xchg
inc
jecxz
mov
faddl
loopne
loop
jo
dec
cmpsb
addb
push
fwait
and
mov
ja
dec
mov
scas
or
cmp
jb
lods
pop
mov
scas
jp
push
in
dec
mov
push
movsl
xchg
cmp
mov
iret
rorb
iret
mov
clc
aam
push
jp
mov
push
push
dec
jecxz
nop
xchg
sub
pop
lahf
into
in
cld
mov
sub
daa
jecxz
daa
sub
fistl
lds
in
sub
mov
jnp
popf
adc
mov
daa
inc
xchg
push
ds
test
inc
mov
jns
sahf
std
or
sub
push
call
cmc
mov
mov
popa
pop
add
push
mov
std
lods
fldl
ret
rclb
shll
cld
sub
das
lds
xchg
stc
jg
mov
dec
pusha
lret
sub
call
sbb
jl
jnp
cli
pop
cmp
pop
dec
xchg
ret
call
adc
sub
mov
jo
xchg
and
test
jae
andl
sbb
inc
mov
insl
or
inc
sahf
mov
mov
sbb
or
hlt
bts
hlt
xchg
addr16
test
test
int
dec
js
je
arpl
leave
add
dec
jno
clc
fisttpll
mov
push
push
add
int
aam
lods
add
jmp
std
outsl
test
pop
sahf
adc
cmp
jo
in
cmp
mov
mov
mov
in
aam
testl
mov
xor
push
jo
fstl
out
das
std
and
test
lock
ja
jnp
cs
or
divb
sbb
int3
dec
bound
lods
jbe
or
cltd
mov
rolb
sub
push
ja
shl
jl
fistps
int3
lea
fpatan
jns
mov
imull
cmp
mov
inc
fildl
in
sub
leave
mov
sub
add
or
cld
outsb
mov
sbb
jo
xlat
pop
mov
ret
cmp
nop
stc
mov
sub
inc
fsubrl
push
cli
push
mov
ret
lds
scas
push
dec
gs
es
cwtl
ljmp
sbbl
and
mov
mov
sbb
and
in
mov
movsb
push
mov
jmp
rcr
daa
adc
inc
cmp
popf
fsts
sub
sbb
pop
pop
push
dec
mov
jnp
frstors
mov
pop
pop
adc
test
pop
push
sub
out
and
inc
mov
or
xchg
or
cmp
adc
les
ret
adc
pop
movsl
out
push
aam
xchg
dec
inc
cmp
jno
incb
aad
push
arpl
jns
fnsetpm(287
xlat
dec
cs
cld
scas
push
sbb
dec
cmpsb
nop
or
cld
test
pop
adc
outsl
outsb
mov
and
lret
jns
rorl
pop
jle
xchg
shlb
inc
lea
and
push
adc
pop
mov
lods
and
jns
pop
pop
or
loope
cmp
mov
push
sahf
fwait
stos
fdivp
stc
mov
pusha
in
mov
push
cwtl
test
ss
fisubrs
xlat
faddp
mov
gs
sub
int3
and
addl
sti
or
push
loop
rcrb
les
adc
clc
cmp
inc
jns
sub
lahf
sbb
push
pop
cmc
jb
push
dec
sahf
mov
pop
push
mov
push
adc
scas
imul
jmp
loopne
sub
push
sub
and
iret
mov
bound
movsb
mov
lods
fildl
js
int
jecxz
mov
sahf
sub
cltd
cwtl
cmp
xor
add
gs
inc
add
jns
jb
pop
xchg
sub
cwtl
cwtl
jg
leave
stc
je
mov
cmp
pop
jp
hlt
sub
scas
cld
cld
scas
mov
inc
sub
adc
push
shlb
mov
dec
add
stos
pusha
add
inc
xlat
inc
mov
mov
push
stc
cmp
jle
jp
xlat
push
sbb
cmp
popf
mov
inc
imul
pop
and
adc
dec
fwait
add
inc
dec
insb
aam
test
adc
out
mov
jae
or
fbld
jb
mov
push
cmp
mov
sbb
sbb
and
add
mov
aad
insl
sbbl
ret
pop
js
push
cwtl
lcall
popf
inc
inc
je
mov
dec
push
fs
fdivrl
mov
cmc
mov
dec
sar
mov
and
ds
sbb
pop
xor
xlat
push
out
dec
push
cmp
mov
mov
sub
mov
push
sahf
js
pop
jge
and
sub
cmp
xor
mov
add
or
nop
insl
mov
pop
adc
jae
pop
data16
inc
dec
cltd
xchg
fimuls
lcall
loopne
rorb
imul
cmp
dec
inc
stc
fiaddl
sbb
outsl
jg
push
out
stc
loopne
stos
adc
repnz
flds
inc
pavgb
ja
outsb
mov
stos
call
ret
mov
mov
mov
and
cmp
stos
fwait
call
pop
jmp
push
rcr
add
sub
aad
lds
bound
enter
call
cmp
pop
xorl
nop
dec
adc
in
adc
je
adc
gs
punpckhwd
in
cmc
pop
dec
mov
es
fildl
xchg
je
mov
add
xchg
icebp
lds
dec
in
inc
call
xor
xchg
int
mov
xor
cmpsb
cld
xchg
into
jb
and
pop
xchg
pop
stc
sub
xchg
or
adc
xchg
scas
jmp
and
jmp
mov
push
dec
pusha
cmp
and
aad
xchg
and
fcmovnu
stos
jg
xor
lea
ror
or
cli
push
mov
scas
js
in
pop
lahf
sbb
push
push
add
in
add
push
arpl
jns
push
hlt
xchg
push
xchg
and
adc
pushf
inc
mov
faddp
addr16
in
out
pusha
mov
adc
cs
mov
mov
pop
aad
and
mov
rclb
out
aas
mov
ret
add
shrl
xchg
jnp
shrl
xlat
shlb
pop
inc
add
mov
imul
cld
aam
push
add
mov
push
jnp
ret
enter
mov
popa
ljmp
mov
xchg
scas
lea
out
adc
call
fdiv
insb
mov
sbb
add
test
out
pop
inc
inc
fimuls
xor
xlat
lahf
xchg
stc
mov
pop
mov
mov
push
mov
add
jne
je
fidivs
jae
std
popa
ds
xor
lret
mov
data16
jecxz
mov
daa
mov
inc
or
and
jmp
rolb
in
or
pushf
hlt
nop
in
mov
add
std
jae
stos
sub
icebp
lahf
or
mov
push
mov
pop
push
jmp
dec
dec
leave
jg
rcrl
mov
insl
jp
sbb
cmp
mov
lcall
in
or
imul
xor
arpl
mov
test
into
movsb
push
xor
pop
inc
fbld
and
and
push
adc
mov
repnz
push
pop
sub
mov
sti
push
mov
push
cmp
jno
mov
adc
xor
or
and
cmpl
pop
jmp
and
and
loop
inc
jl
repz
jmp
loope
or
pop
mov
sub
lret
mov
sub
push
adc
movl
cmpsl
xchg
popf
adc
ret
adc
adc
mov
imul
jnp
imull
shrl
jg
add
pop
fisttps
nop
movsl
sbbl
sub
lea
fwait
xor
sbb
scas
cwtl
movsl
or
jmp
ss
in
sti
out
xchg
loop
pop
imul
clc
xor
pop
inc
test
push
xor
pop
fstp
add
jo
xorl
rol
ret
ret
hlt
into
mov
pop
out
mov
sub
cmp
adc
fbld
mov
bound
cmpb
push
daa
inc
push
cwtl
lock
inc
mov
push
dec
sub
pushf
shrb
dec
sub
and
xchg
dec
pop
pop
mov
adc
adc
pop
lret
pop
pop
mov
in
iret
mov
push
pop
fstl
xor
aam
mov
imul
jge
add
in
inc
mov
negb
bound
sub
push
lsl
jmp
mov
out
loop
jge
icebp
push
ss
data16
or
inc
ret
insb
lret
xchg
pop
dec
test
scas
xor
jo
jbe
dec
xchg
scas
add
lock
out
cmp
addb
mov
adcb
icebp
push
mov
mov
xor
xor
mov
mov
cmpsb
in
aad
sbbl
mov
ljmp
ficoms
and
sbb
enter
sarl
xor
xor
inc
cmpsl
lret
jno
push
in
sub
xor
push
jecxz
test
pop
sar
lock
jp
pop
test
les
arpl
adc
test
push
pop
mov
lock
arpl
popa
add
lods
das
addr16
mov
adc
push
cmp
out
fldl
outsl
mov
fsub
jle
pop
xor
xchg
movsl
inc
cmp
aas
jmp
out
push
cmp
dec
fwait
incb
stc
dec
idiv
ss
sub
mov
enter
jno
orb
push
mov
lds
int3
push
inc
sarl
push
fs
mov
adc
mov
mov
mov
roll
push
xchg
xchg
cmp
daa
icebp
xchg
scas
sti
fninit
aas
in
push
icebp
lea
fstl
mov
adc
mov
or
push
add
dec
ja
int
vpperm
insb
pop
in
fists
pop
lret
jo
cli
cmp
mov
inc
add
scas
and
js
cmp
out
bound
sarl
jl
out
sti
fs
adc
data16
push
push
sbb
and
mov
adc
push
sbb
push
inc
movsb
test
xor
mov
xchg
and
and
scas
in
jle
addr16
aaa
push
add
movsb
pmulhuw
dec
jp
pop
sar
mov
scas
cmp
mov
cmc
int3
pop
jns
push
adc
mov
in
push
imul
push
xor
sbb
ljmp
jl
jbe
push
and
or
les
push
or
push
aas
pop
add
int3
xchg
lcall
icebp
or
pop
xchg
xchg
out
repz
push
pop
leave
cmp
or
ror
scas
xor
ja
lock
imul
xchg
out
cmp
and
lea
in
fs
cmp
fidivs
cltd
sbb
pop
push
cmc
lds
mov
lods
int
stos
xor
adc
push
movsb
dec
inc
adc
jle
add
je
movsl
adc
sbb
mov
mov
stos
outsl
dec
ja
data16
push
jno
addr16
adc
fdivl
or
xchg
sbb
sub
ja
push
add
fucomi
mov
jbe
mov
lahf
adc
fwait
aad
push
xlat
xchg
pushf
sbb
roll
sub
cld
dec
sbb
mov
mov
test
jmp
outsl
leave
push
and
xlat
xchg
aaa
in
fsts
cmp
push
jmp
xor
movsb
xchg
dec
movsl
and
push
sbb
clc
sub
push
fyl2x
cmp
dec
mov
inc
jns
cld
jmp
in
nop
or
jns
ss
fistpl
mov
les
or
sub
insb
ss
push
jnp
imul
xor
or
jo
repnz
shr
lret
xor
int
std
adc
xor
push
enter
call
sub
cli
inc
leave
stos
in
mov
lret
ds
mov
rclb
ss
cmpsb
xchg
xchg
dec
std
push
xchg
xchg
sub
std
movsl
fcoml
fwait
jno
shr
fisubrl
cmpsl
and
mov
jmp
scas
rcll
gs
sub
push
and
mov
xchg
sbb
push
push
loope
mov
rclb
es
das
push
cs
xor
xchg
cmc
xlat
adc
frndint
mov
mov
jae
sub
or
test
pop
sti
push
es
out
mov
push
mov
test
pop
lods
push
pop
sub
inc
ss
xor
pop
jmp
lds
pop
xor
sbbl
mov
jg
fstps
xchg
fwait
xorb
lock
mov
aaa
fldcw
push
lret
push
adc
dec
imul
sbb
mov
jne
ret
push
mov
jl
pop
xor
jg
mov
loopne
push
mov
pop
and
mov
sbb
movl
dec
lods
mov
rcrb
dec
ds
xor
in
addl
aas
add
ffree
aas
int
rol
cmp
imul
xchg
mov
jb
xchg
mov
sub
jnp
ss
mov
fstps
push
mov
cmp
jle
imul
and
fsubr
fildll
lcall
das
loopne,pn
adc
stc
pop
mov
dec
or
inc
and
repnz
cmp
xchg
and
loope
mov
xor
jb
xor
mov
sub
mov
dec
mov
outsl
xor
jecxz
push
fwait
cltd
sub
sahf
xor
mov
xlat
mov
sbb
dec
pop
or
xor
mov
mov
push
outsb
dec
sbb
dec
sahf
ret
mov
jnp
pop
dec
out
xor
or
or
lret
mov
push
dec
cs
ljmp
mov
jbe
mov
add
pop
jo
xchg
xchg
adc
cmp
push
sbb
daa
in
push
push
push
das
lret
push
fistl
ret
pop
bound
cmpsl
movsl
mov
call
cmpsl
mov
jmp
inc
popa
jge
or
mov
pop
outsb
xchg
leave
sbb
ret
imul
es
dec
outsb
cwtl
cltd
popf
mov
jae
mov
in
outsl
sub
adc
aaa
push
dec
adc
xor
xchg
sbb
aad
xor
adc
push
jnp
cltd
mov
shrb
ror
pop
cld
insl
push
xor
xchg
cmp
adc
add
xchg
cmpsl
insb
xchg
es
cmp
loop
pusha
dec
pop
repz
or
arpl
bound
jae
or
mov
stos
push
mov
sub
xor
dec
jg
notl
and
jp
adc
shll
popa
xchg
imul
adc
add
inc
cld
in
push
or
test
and
xor
sub
aaa
cmp
pushf
cmpsl
fwait
aam
arpl
leave
pop
fsubl
outsl
out
enter
and
mulb
and
aam
ljmp
into
xchg
jbe
mov
movsb
mov
inc
fnstcw
inc
mov
ja
jle
test
clc
repz
cmp
aam
mov
fistl
and
lcall
jmp
int3
cmc
xchg
pop
addr16
lea
lods
adc
mov
enter
push
ret
sbb
push
add
pop
cmp
pushf
sub
sbb
ret
sbb
jmp
mov
cmp
push
jns
push
xorb
and
adc
jl
pop
sub
mov
sub
neg
xorl
lahf
mov
data16
jg
inc
sub
mov
test
sbb
testl
subl
aam
pop
cmpsb
mov
xorps
js
test
fadds
xchg
xor
lret
cltd
insl
loopne
sbb
cmp
out
xchg
push
out
adc
adc
adc
ret
mov
xchg
pop
mov
or
adc
dec
gs
mov
leave
jbe
ret
or
ror
mov
jl
lds
jle
jp
je
test
inc
mov
aam
or
mov
inc
sti
loope
dec
dec
dec
jge
push
adc
outsb
sbb
hlt
in
sub
movsl
xchg
xor
jle
sbb
add
sbb
jge
cld
mov
xor
add
add
push
mov
aas
jbe
jb
cwtl
jns
and
xor
xchg
jmp
repz
aam
notb
mov
imul
stc
xlat
loope
cmp
enter
lret
push
pop
dec
jg
pushl
xchg
add
mov
test
mov
xlat
fs
xchg
push
mov
mov
cmp
xchg
jle
std
push
ss
push
add
je
pop
add
nop
xor
mov
test
scas
and
xor
cmp
pop
lret
mov
jl
cmp
cs
popa
aas
pop
pop
xor
sbb
adc
jg
lcall
jno
pop
sbb
or
aad
add
in
push
fs
jbe
pop
in
outsb
sbb
jns
stos
test
out
and
mov
cmp
xchg
jb
xchg
fnstsw
xor
out
setp
lods
inc
or
jo
mov
push
mov
add
adc
outsl
nop
mov
add
aas
gs
add
push
pushl
ret
xor
shrl
inc
sub
add
sub
mov
mov
popa
add
pushf
scas
pop
ss
or
scas
cmp
xor
cmp
push
cmpsb
sbb
or
and
popf
dec
xor
jne
add
cli
int
mov
andb
cltd
mov
xchg
push
sti
mov
popf
lock
rcrl
jae
xor
pop
rclb
int
mov
ret
pop
loop
and
aad
pop
dec
mov
push
cltd
mov
rorb
sbb
xor
arpl
nop
cmc
mov
xchg
jno
cmc
pop
push
and
and
inc
pop
xchg
and
mov
mov
ret
xlat
xchg
aaa
cmp
ret
jge
cmp
jecxz
test
cli
and
aas
inc
loopne
rorb
fwait
push
movsb
xor
es
cmp
mov
cld
mov
movsb
rcrl
adc
inc
popa
pop
jp
or
test
lock
ljmp
js
and
das
ljmp
bound
outsl
mov
jmp
sldt
mov
add
ljmp
and
or
fistl
mov
sub
jge
cwtl
aaa
lea
scas
jno
push
pushl
jl
xor
sbb
add
dec
iret
mov
shld
fadd
cmp
fcoms
mov
out
mov
xchg
ljmp
in
cmpb
popl
out
scas
mov
cmp
in
loope
add
mov
cmpsl
push
movsl
xchg
cwtl
mov
and
scas
sbb
mov
lock
mov
insb
dec
gs
sbb
lret
jl
fdivrs
mov
mov
inc
mov
and
rclb
lds
cs
and
iret
imul
in
test
cli
sub
test
out
movsl
in
add
test
jge
leave
loope
stc
int3
dec
out
push
and
dec
sub
insb
jg
xchg
repnz
or
js
fiadds
lcall
jo
mov
xor
bound
push
mov
aad
ja
mov
dec
mov
cmp
dec
xchg
mov
jmp
and
sub
fisubrs
leave
xchg
das
pop
test
adc
int3
lret
mov
pop
mov
sahf
scas
mov
jne
sub
push
sbb
xchg
push
dec
shrb
aaa
fdivrl
insb
outsb
verw
dec
ljmp
cmpsb
pop
xor
popa
rorb
mov
int
ds
cmp
int3
sub
xchg
mov
pop
mov
jb
pop
lcall
push
rorb
ss
xchg
jecxz
mov
dec
mov
aas
add
adc
inc
stos
ja
xor
in
jge
adc
push
push
jp
sub
std
push
les
daa
and
lea
loop
pop
sub
xor
jmp
andl
fbld
dec
cmp
push
loope
mov
push
stos
dec
dec
aas
dec
cltd
ret
sub
sbb
fwait
popf
push
mov
sbb
pop
insb
inc
shrl
repnz
dec
fwait
stos
outsb
loopne
xor
dec
mov
push
mov
fwait
add
test
jmp
jmp
push
loope
push
sahf
add
mov
jne
mov
pop
pusha
aam
sbb
sbb
jbe
clc
inc
fildll
int
xchg
divb
or
cmpsb
add
mov
jno
fisubrs
imul
xchg
and
inc
and
fld
ret
movl
xchg
ret
aam
test
je
xchg
jne
xorb
iret
in
mov
mov
cmp
xchg
push
push
inc
add
lret
dec
aam
pop
fwait
scas
daa
mov
or
sarl
mov
push
sub
and
push
push
xchg
cli
lds
xchg
mov
sub
mov
mov
sub
jecxz
cli
push
jp
fidivs
add
or
test
dec
addr16
sub
dec
lret
pop
in
mov
daa
lock
adc
call
sub
xor
cltd
mov
loopne
lret
sub
sub
dec
repnz
sbb
bound
push
test
fwait
push
push
cmc
pop
jl
mov
ljmp
jns
test
cld
fwait
push
dec
mov
inc
cld
jbe
jle
and
clc
test
dec
jmp
mov
pinsrw
lock
movsl
jmp
hlt
repnz
imul
das
mov
add
sbb
xchg
ficompl
sbb
and
aad
icebp
mov
fwait
push
testl
divb
sahf
xor
jns
scas
test
in
mov
into
nop
inc
stos
push
and
jmp
sub
orl
das
sbb
mov
fdivrl
dec
aaa
or
arpl
mov
jmp
adc
and
lret
mov
sub
bound
imull
aaa
out
mov
jae
cld
mov
stc
enter
mulb
adcl
dec
gs
jl
sbb
sub
push
lods
mov
lods
fwait
mov
push
out
pcmpeqw
inc
pop
mov
insl
lsl
fistpll
dec
cmpsb
movsb
aam
xor
pop
stos
xchg
jp
add
and
or
nop
dec
aas
cmp
cld
out
mov
repnz
mov
xchg
push
push
jle
insl
icebp
dec
cmp
outsl
mov
jmp
xchg
cmp
pushf
push
pop
sti
sub
cmp
insb
mov
dec
stos
lods
mov
jge
ja
stos
mov
les
mov
stos
cmpsl
and
shll
cwtl
jecxz
mov
aaa
jno
push
test
dec
jo
adc
movsl
dec
jae
mov
mov
lock
stos
jno
insb
addr16
test
inc
rcll
push
outsb
push
roll
stos
add
mov
lcall
mov
cmpsb
mov
jg
jo
out
jbe
or
inc
nop
insb
cmpsb
adc
push
repnz
cld
int
icebp
sub
xchg
cmp
jae
into
xor
pop
dec
lock
pushf
fdivl
inc
data16
inc
fstl
add
push
pop
add
push
int3
mov
fcompl
mov
popf
fists
add
xchg
imul
out
mov
and
sub
push
in
js
xchg
int3
cs
push
stos
push
push
cs
jns
scas
stc
pusha
pop
decb
mov
es
sub
dec
xor
insb
sub
xchg
lods
or
rclb
ret
pushf
int
popa
cld
in
shll
es
cltd
jge
add
push
test
scas
imul
sbb
mov
mov
ljmp
shll
pop
in
mov
mov
push
enter
rcrb
clc
and
aaa
add
mov
lds
mov
sti
push
hlt
in
pop
stos
adc
pushl
fiadds
and
fsubs
out
pop
gs
cmp
cmp
jge
cld
sbb
into
pop
lret
addl
lock
sub
fwait
cmp
ja
mov
jmp
mov
aaa
jae
lahf
outsl
ret
aas
mov
es
cmpsl
pop
lret
fidivrs
inc
push
sbb
push
hlt
mov
adc
and
inc
aam
push
int
lret
dec
cld
daa
outsb
and
pop
or
repz
push
lahf
mov
or
inc
add
mov
jb
dec
stos
ljmp
fisttpll
aaa
int3
jns
in
add
lods
xlat
xor
movb
sarb
add
xor
cmp
push
insb
lret
lods
mov
movsb
out
xchg
scas
repnz
mov
cwtl
test
scas
jp
cltd
call
or
push
iret
loope
clc
or
mov
mov
in
xchg
add
fsubs
dec
jbe
mov
mov
fisubrl
popa
sahf
movsb
movsl
call
mov
fcomip
or
cmp
cmc
sbb
push
jl
loopne
xor
jo
gs
or
out
rorl
repz
xchg
rclb
push
jno
das
div
cmp
push
clc
dec
test
cmp
jno
ss
cmp
out
addr16
jle
orl
xchg
cs
xchg
lock
es
xchg
hlt
ret
outsl
push
inc
cwtl
insl
xchg
push
mov
cmp
jbe
sub
sbb
std
cltd
push
mov
push
jle
adc
inc
mov
push
rclb
out
push
push
mov
pushf
fwait
das
or
mov
sti
cltd
cmp
sbb
add
or
es
fyl2xp1
into
daa
pop
dec
ret
inc
inc
jno
push
fwait
push
out
hlt
mov
mov
dec
call
out
sbb
dec
sbb
imul
leave
mov
mov
stos
movsl
stc
gs
idivb
aaa
insb
dec
mov
cld
fs
rcl
mov
icebp
push
sbb
xchg
push
stos
mov
mov
pop
and
enter
push
sbb
sub
push
mov
dec
add
or
push
out
inc
out
or
cmpsl
jb
mov
xor
shl
ret
fimuls
cmpsl
xlat
rclb
pop
mov
push
sbb
popa
mov
int
push
imul
sbb
test
js
test
cld
sbb
inc
adc
gs
sti
pop
faddl
fs
leave
mov
mov
dec
cltd
sub
mov
add
lcall
ror
adc
or
call
add
xchg
loopne
bound
jp
bound
imul
xor
xor
ror
cmc
push
js
inc
jbe
xchg
xchg
fstpt
out
lea
inc
cmp
jp
or
daa
push
addr16
sbb
test
jnp
in
sub
pop
lods
adc
loop
aad
cmp
or
hlt
adc
hlt
jnp
jg
sbb
pop
pop
xchg
jbe
sbb
pushf
jbe
addr16
dec
sub
fbld
adc
popf
mov
stc
inc
lods
mov
jge
fnstsw
dec
xor
push
cmp
lret
inc
and
dec
mov
pop
stc
jb
mov
cmp
push
mov
xor
daa
adc
stos
pop
cs
add
in
sahf
fstpt
or
insb
jecxz
cmpsl
pop
pop
and
repz
mov
cmp
adc
lea
jle
dec
mov
mov
mov
repnz
jg
and
add
xchg
mov
lea
jbe
sar
pop
aad
stc
fiadds
popf
lcall
adc
xor
pusha
cmpsl
fadd
adc
mov
popa
lcall
jnp
fld
xchg
push
or
cmp
fisubs
jne
pop
cld
inc
enter
in
idivl
repnz
mov
adc
enter
push
and
push
lret
sahf
inc
xchg
cmp
pop
xor
pusha
faddl
nop
mov
xchg
test
sbb
ja
push
add
jle
sbb
outsb
pop
popa
add
xor
in
ror
inc
xor
lods
mov
jbe
sbb
pop
andl
in
movsb
gs
pop
mov
jge
int3
ret
jae
bound
outsl
sub
pusha
xor
inc
cltd
mov
mov
mov
and
pushf
inc
jb
push
imul
xchg
fisubrs
mov
sahf
repz
push
xchg
mov
lods
int3
add
add
xor
in
dec
xchg
push
push
lea
outsb
pop
xor
mov
inc
add
imul
jnp
dec
jp
xor
jge
arpl
dec
adc
sub
leave
sbb
pop
test
mov
pop
inc
fdivs
add
pop
sbb
jl
and
js
xchg
dec
cs
cltd
pop
mov
imul
add
movsb
lret
mov
dec
cmp
dec
in
sahf
sub
push
xor
xor
push
pop
int
js
dec
stos
scas
das
mov
bound
xor
push
jnp
movsl
adc
pop
fucomi
pushf
jae
jno
lret
push
jmp
inc
xlat
roll
loopne
dec
mov
jo
repnz
divb
add
inc
inc
dec
in
subl
pop
ja
xchg
sbb
dec
cmp
xor
js
ret
lcall
pop
je
mov
icebp
nop
mov
popa
or
ja
xor
sbb
or
out
inc
scas
dec
nop
push
fidivrs
or
sub
pushf
aas
fbld
or
lret
adc
pop
inc
adc
or
inc
xchg
xor
cmp
out
inc
or
inc
mov
and
pop
sbb
jmp
pop
insb
into
and
cmp
movsl
shr
adcb
adc
out
jg
xchg
faddl
rorl
cmc
aas
rorl
scas
idivb
inc
and
mov
gs
shlb
sbb
hlt
adc
xor
xchg
adc
shrl
add
pop
cmpsl
pushf
rcll
std
adc
dec
xor
jns
push
dec
in
call
jbe
mov
fiadds
into
push
insb
and
scas
jmp
cmc
stos
scas
dec
pushf
lret
add
ret
add
push
sbbb
andb
sub
std
push
xchg
dec
jmp
mov
call
or
cmp
addl
lds
jno
lods
lods
and
push
cltd
sbb
or
adc
test
jecxz
or
adc
mov
xchg
xor
call
mov
xchg
les
add
mov
xchg
push
popa
xor
lea
dec
push
dec
sub
flds
mov
outsl
cmp
imul
pop
mov
xor
ss
add
aas
xor
or
push
movsb
inc
dec
sub
pop
inc
xor
push
jmp
repz
jmp
mov
jl
scas
cmp
icebp
call
hlt
pushf
loopne
jns
sbb
adc
mov
in
movsl
or
lahf
outsb
out
cs
pop
mov
mov
jecxz
bound
dec
xor
and
xorb
leave
rorb
mov
rcr
add
sarb
popa
xchg
add
dec
add
ljmp
test
test
push
xchg
sbb
inc
push
or
push
mov
xchg
mov
sub
mov
pop
loopne
cmc
xchg
hlt
data16
push
enter
mov
push
sarb
and
in
xchg
inc
inc
aas
stos
in
pop
dec
xor
sbb
mov
mov
jb
xchg
daa
adc
xchg
mov
sub
ljmp
pusha
lea
and
ljmp
jns
mov
add
imul
repnz
jb
fwait
and
and
fsubl
scas
in
add
les
sbb
in
add
and
cltd
pushf
inc
add
push
lock
je
jne
mov
loopne
mov
in
mov
pop
inc
loop
in
lahf
imul
mov
xor
jo
pop
pop
jge
xchg
adc
or
fldenv
mov
pusha
mov
jae
mov
fistps
mov
out
push
mov
movsl
dec
jle
sahf
jb
jbe
pop
dec
jbe
mov
pop
hlt
sbb
imulb
inc
sbb
loopne
ds
sbb
inc
lcall
push
sbb
insb
out
repz
xlat
out
ret
std
dec
shl
ds
fsubrp
rorb
fstl
hlt
mov
jle
lea
cmp
ret
dec
mov
sub
jp
xlat
jmp
mov
mov
imul
pop
fcoms
mov
loopne
xchg
mov
sub
js
loop
das
push
into
push
out
mov
mov
mov
and
sahf
les
repnz
imulb
jmp
push
jo
shl
jg
push
aam
jbe
pop
insl
or
pop
addr16
inc
pushf
mov
xchg
mov
loope
add
popa
push
aad
enter
mov
dec
rolb
add
mov
mov
jb
push
out
add
xchg
mov
call
ss
ljmp
sub
lock
mov
xchg
push
pop
cmp
jle
pusha
stc
add
mov
jg
pop
xor
stc
xor
xchg
mov
adc
hlt
nop
test
int
fistpll
push
mov
or
out
cmp
insl
add
cwtl
dec
fsts
lock
es
push
inc
cmp
jp
or
sub
jns
sbb
les
aad
jb
lret
ffreep
cmp
pusha
sarl
jmp
out
jns
jp
icebp
add
and
repz
repz
inc
sti
sti
pop
cmpsl
hlt
cmp
ret
or
pop
push
lds
inc
xlat
and
shll
je
adcl
cmp
dec
imul
je
jnp
and
sub
adc
stos
mov
imull
inc
in
push
out
fisttpll
mov
push
add
push
popa
fidivs
cmp
mov
cmp
add
jae
aaa
fistpl
sbb
ror
inc
mov
loope
mov
test
adc
movsl
test
out
mov
icebp
shl
push
scas
push
xor
sahf
or
adc
scas
imul
push
lcall
xor
int3
insl
lods
adc
pop
mov
loopne
pop
sbb
imul
mov
and
lret
inc
fiadds
and
xlat
sub
adc
pop
and
mov
pop
mov
lcall
jno
shrb
std
pushf
mov
mov
lea
or
xor
out
stc
cmp
cmp
mov
adc
lret
testl
xchg
scas
popf
jnp
out
into
call
inc
mov
and
jns
sarl
repnz
jbe
aaa
pop
and
xor
pop
and
insl
mov
pop
add
aad
sub
in
lods
ja
or
mov
pop
lcall
icebp
enter
or
sbb
mov
icebp
mov
dec
in
push
dec
out
push
xlat
imul
fidivs
pop
add
je
mov
stos
xor
mov
mov
xchg
sar
lret
xor
leave
das
jg
xor
inc
in
xchg
outsb
fsubrl
imul
and
shlb
insl
repnz
imul
arpl
jg
aas
addl
jp
setne
into
aam
sahf
jge
test
lret
push
mov
mov
inc
nop
jbe
or
or
ss
cmc
cmpsl
clc
xchg
pusha
xchg
jmp
repnz
add
mov
pusha
add
jo
cmpsb
fwait
push
adc
arpl
mov
mov
mov
movsl
in
sahf
mov
xchg
mov
rorl
clc
sub
pushf
push
sbb
outsb
sub
adc
jno
movsl
mov
adc
rcll
jmp
arpl
dec
mov
inc
push
jne
rcl
pop
shrb
lods
mov
mov
ss
unpckhps
jl
push
stos
pop
in
add
pushf
movsl
stc
fwait
scas
push
fadds
daa
jnp
out
xchg
les
fistl
jno
sbb
mov
shl
and
xor
xor
dec
nop
mov
xorb
sbb
mov
or
imul
jg
lock
int3
sbb
ret
xchg
repz
js
sti
add
int
mov
and
dec
dec
adc
inc
xor
aas
pop
xchg
adc
iret
mov
std
addl
add
bound
sub
call
or
add
in
mov
dec
and
inc
adc
and
xlat
fsubl
inc
ret
icebp
out
or
xchg
imulb
or
lret
xchg
iret
sub
jae
mov
jns
pop
cmpb
jmp
movsb
cltd
mov
xor
imul
ret
inc
xchg
add
pop
pop
and
jo
add
add
jmp
pop
jno
mov
push
ljmp
mov
xor
cmpsl
jg
rcl
jle
push
xor
inc
sbb
lds
jl
fdivs
mov
add
and
fstl
nop
ret
sbb
jae
and
push
in
push
call
push
cwtl
sbb
les
jns
out
leave
add
out
adc
jo
clc
or
out
sub
sarl
insl
xchg
pop
sub
jl
mov
fdivr
mov
lds
in
push
ret
jl
mov
shlb
push
jb
dec
popa
stc
test
xor
fisubrs
xor
lahf
jnp
mov
clc
jno
add
outsb
cmp
out
dec
jbe
insb
xchg
xor
inc
shl
aas
imul
outsb
jns
rclb
pop
fnstenv
dec
adc
cmpsl
les
cmpsb
dec
jae
xchg
inc
pop
xchg
mov
mov
push
mov
adc
pusha
arpl
ret
movsl
dec
push
mov
jge
lock
into
adc
xor
cmp
push
repnz
xchg
sub
dec
arpl
push
clc
outsl
cmp
in
pop
mov
pop
outsl
adcb
fldenv
jg
mov
xchg
fists
jge
dec
stos
mov
xlat
xor
ret
mov
fcoms
inc
push
jo
dec
outsb
dec
imul
lods
les
or
scas
adc
mov
pop
out
cmc
xor
mov
in
loop
fnstsw
xor
das
sub
call
sub
jge
das
inc
xor
xorb
mov
sbb
fwait
popa
cmp
idiv
adc
and
xor
cmp
gs
loopne
adc
mov
sbb
xlat
das
sub
xor
shlb
scas
test
jns
lahf
xchg
dec
ret
lock
mov
movsl
mov
mov
pop
push
std
push
fdiv
loopne
out
xchg
pushf
out
adc
push
push
addb
fists
mov
flds
pusha
jge
ret
pop
or
jp
js
inc
in
inc
adc
hlt
lods
outsb
sar
cld
dec
jecxz
fwait
push
xchg
icebp
push
imul
int3
insb
mov
xor
outsb
inc
adc
add
in
je
mov
jo
push
dec
jo
mov
call
xor
or
dec
xchg
cli
in
push
mov
fld
pop
out
lcall
ror
bnd
inc
daa
and
jo
mov
or
inc
add
dec
loopne
mov
and
ds
pusha
mov
push
roll
sbb
pop
je
xlat
mov
pusha
mov
push
lds
lcall
mov
mov
mov
add
push
hlt
lock
or
testb
lret
jo
push
imul
inc
push
mulb
push
add
ret
sub
dec
movsb
inc
inc
repz
jnp
test
or
outsl
in
jl
mov
and
std
mul
mov
mov
cmp
mov
repnz
cmpsl
pop
lcall
cmp
mov
xor
sbb
out
fdivr
mov
hlt
aaa
jecxz
ja
mov
xchg
rcr
movsb
or
dec
dec
jge
jo
inc
insl
dec
ret
inc
repnz
fnstcw
in
mov
xchg
insl
fisubs
mov
xchg
mov
shrb
daa
xor
fwait
push
ret
jno
xor
daa
xchg
bswap
push
stc
lret
int3
sbb
pop
add
lahf
mov
and
xchg
inc
idivl
outsb
cwtl
inc
push
test
adc
xor
pop
popa
insl
nop
data16
lds
jb
incb
mov
cmp
nop
ja
and
arpl
sbb
fldt
pop
push
mov
int3
pop
clc
scas
stc
ret
cli
out
lds
jne
push
into
das
or
inc
pop
into
add
dec
loope
in
or
das
movsb
mov
mov
cmp
mov
inc
xor
mov
mov
mov
mov
add
cmpsb
in
imul
outsb
into
stos
idivl
aad
xor
jno
jl
fstpl
pop
enter
subl
sti
inc
push
daa
push
inc
imul
data16
fs
insb
lock
das
scas
int3
jnp
call
imul
pop
push
xchg
movsb
in
jmp
cmpsb
jns
call
cmpsl
std
fcmovb
or
sahf
cmp
mov
inc
in
sbb
sti
pop
sahf
mov
cmpsb
fcmovnb
mov
daa
into
jmp
out
adc
and
jmp
fwait
push
out
inc
sub
dec
mov
mov
lds
in
cmpb
je
sbb
jns
xchg
xlat
sub
lahf
outsl
lock
sti
sbb
insb
imulb
cmp
xchg
in
sub
imul
icebp
mov
leave
rorl
div
fildl
mov
jg
lahf
rcrb
lret
imull
loop
fldt
enter
jmp
leave
sub
popf
scas
loopne
add
je
lods
push
std
and
js
sbb
hlt
mov
sub
xor
rorl
gs
into
push
push
mov
insl
aaa
test
or
inc
add
push
jge
xchg
add
xchg
bnd
and
movsb
sub
pop
fldcw
mov
push
push
sbb
cmc
fisubl
push
test
push
lret
outsb
ja
and
flds
mov
notb
je
mov
push
add
add
inc
or
es
insl
repz
xor
sahf
and
fsubrs
xchg
sbb
mov
jmp
roll
pop
int
cmp
adc
dec
arpl
nop
js
idivb
lahf
cmp
add
cld
into
or
andl
mov
pusha
mov
cli
mov
xchg
and
scas
jns
jno
pop
mov
pop
xchg
jle
lret
hlt
shll
cmp
pushf
out
mov
out
push
out
orl
and
jne
mov
jnp
in
test
into
mov
in
sub
dec
dec
ficoms
xchg
lock
jmp
push
mov
xlat
test
loopne
xor
js
push
xchg
neg
mov
int3
scas
test
popf
cltd
xchg
fwait
jle
andb
xchg
mov
gs
push
push
mov
stos
adc
lods
hlt
xlat
inc
jbe
jp
pop
mov
adc
lcall
movsb
xchg
pop
cmp
cmp
mov
cmp
repz
cmpsb
mov
inc
mov
stos
and
subl
stos
lods
repz
mov
loop
or
sbb
inc
arpl
jg
stos
push
sbb
fistpll
push
add
push
lock
aam
push
inc
lods
cli
sahf
dec
cltd
loop
pop
dec
lock
add
pop
in
out
inc
adc
int
inc
or
pop
or
call
mov
xchg
dec
idivb
pop
pop
imul
push
into
jl
dec
dec
aam
lds
mov
and
or
cmp
xor
and
mov
xchg
lret
or
pop
icebp
pop
shll
test
jns
or
or
movsl
sub
idivb
test
ret
addr16
lret
adc
data16
push
or
test
and
push
imul
dec
fiadds
or
adc
pusha
ret
mov
sub
pushf
push
sub
cmp
mov
or
mov
leave
sub
mov
scas
sub
xor
xchg
icebp
or
repnz
bound
lods
test
mov
or
or
cmp
mov
xor
dec
mov
lahf
outsb
inc
iret
add
sbb
out
std
mov
inc
std
mov
push
add
jno
jg
jns
sub
jecxz
rolb
xor
jo
jb
add
aas
je
jl
or
xor
aaa
add
dec
mov
adc
ret
jle
jmp
test
cmp
sub
mov
test
sbb
enter
mov
pop
dec
stos
jg
add
cmp
jmp
mov
mov
sahf
jl
pop
aad
aaa
outsb
mov
mov
cmp
mov
cmp
ret
push
shlb
dec
mov
in
ds
ja
sbb
movsl
sub
cmp
ret
xor
dec
test
icebp
push
xchg
xor
fmuls
sub
leave
mov
mov
andl
hlt
and
pop
sbb
sub
out
movsb
or
mov
dec
mov
or
fnstenv
out
lods
cmpsb
add
int3
in
ret
imull
or
and
pop
inc
lret
xchg
mov
sub
mov
inc
cmp
xchg
push
mov
inc
pop
xor
jecxz
out
cli
dec
jae
loope
adc
cmc
in
add
arpl
push
inc
xor
mov
xor
fcomp
fwait
adc
int
imul
ja
fucomi
push
adc
loope
push
push
and
rolb
shr
dec
push
test
cli
lcall
jb
dec
mov
lret
sbb
shr
pop
dec
fs
xlat
sub
nop
test
aaa
aad
and
orl
lret
aam
popf
fildll
and
cmc
ljmp
jno
aaa
addr16
out
clc
mov
sub
cmc
imul
xor
mov
movsl
mov
cltd
in
push
cmc
mov
sbb
stos
pop
push
repz
aaa
fstl
cltd
int
pop
or
dec
lahf
mov
stos
clc
dec
insl
mov
shrb
ret
sbb
pop
xor
add
dec
and
mov
andl
lock
mov
dec
or
bound
cmp
sub
ret
xchg
outsl
sbb
cltd
sahf
movsb
into
out
ja
sbb
cmc
ret
mov
cli
scas
loope
data16
cmp
jb
adc
fistpl
jecxz
stos
imul
sub
aad
imul
sti
jle
inc
das
popa
imul
les
push
aaa
xchg
mov
xlat
pushf
pushf
xchg
fcoml
sahf
adc
movsb
push
mov
mov
or
scas
dec
sbb
pop
ret
sbb
arpl
insb
stos
xor
pop
push
lds
mov
push
cwtl
sbb
shll
loop
cmp
aad
leave
pushf
sub
clc
sub
or
push
sahf
ja
and
add
movsb
aaa
or
or
push
sbb
sbb
adcb
mov
stos
dec
add
and
std
xchg
sub
cmp
orl
and
sbb
mov
test
roll
into
test
push
xor
movl
dec
jle
dec
sarl
roll
and
jmp
lahf
push
aas
leave
adc
subl
or
sbb
and
outsl
fstpt
xor
add
mov
pop
xor
push
push
add
lret
sarb
inc
cs
push
adc
sbb
sti
mov
test
push
xchg
xchg
xchg
jecxz
inc
stos
aam
leave
cmpsb
popf
jne
jmp
fstps
and
lret
push
lcall
push
mov
in
pusha
mov
repz
jecxz
or
cmp
into
jbe
mov
jmp
mulb
sbb
fwait
add
in
mov
lretw
enter
dec
dec
xchg
pushf
push
sub
icebp
fs
xchg
push
add
adc
xor
adc
xor
sbb
jae
js
jmp
insb
inc
cmp
push
sbb
andb
jmp
push
lret
sbb
int3
xor
mov
sub
jp
sahf
fstps
add
or
or
gs
ja
sbb
inc
jl
in
mov
jecxz
rcrl
jl
cmp
mov
leave
fadd
inc
lcall
cmpsl
jnp
lahf
dec
sbb
xchg
xor
jmp
movsb
cmpb
xorb
mov
mov
hlt
jmp
rorl
xor
les
push
pop
loop
cmp
sub
or
xlat
cli
ss
bound
gs
mov
fstp
sti
cli
cltd
movsb
jnp
stos
cs
jne
mov
xchg
fistl
sbb
xor
mov
iret
ljmp
subl
jecxz
cs
mov
sbb
fistps
shrb
dec
iret
fstpl
cmp
icebp
cltd
hlt
sahf
mov
mov
in
jbe
repnz
rcrl
cmc
adc
cmc
cmpsb
shll
jnp
mov
fadd
xor
and
dec
sbb
mov
and
sub
mull
lds
dec
cli
popf
popa
mov
mov
movsb
xchg
pushf
scas
xchg
jmp
into
sar
sbb
xchg
dec
mov
popa
cmc
cmc
inc
out
pop
or
ret
mov
jle
jl
push
xchg
push
stos
mov
xchg
sahf
sbb
arpl
sub
add
push
push
andl
jle
pop
mov
dec
push
movsb
stc
mov
jge
xorb
clc
pop
mov
imul
and
out
mov
jns
dec
sub
gs
cltd
pop
jne
lea
lods
xchg
test
push
pop
hlt
pop
movsb
push
int3
push
push
popf
mov
add
add
add
je
or
fadd
jno
push
mov
daa
test
sbb
push
mov
sub
add
inc
les
loop
sahf
cmp
nop
xchg
and
push
sbb
mov
insb
arpl
jl
imul
sbb
fwait
repz
bound
movsl
clc
jl
mov
push
dec
xchg
jle
scas
stos
in
mov
xchg
xor
xchg
aad
fisubrl
or
das
aaa
mov
ljmp
les
mov
pop
and
aaa
push
mov
adc
push
cmp
or
nop
dec
into
sbb
sub
inc
lds
ss
add
pop
shrb
sbb
fldenv
es
mov
cmp
test
mov
mov
es
and
mov
dec
pop
mov
and
ljmp
jmp
in
adc
jns
jns
dec
sti
push
pop
push
std
sub
mov
xor
push
aaa
mov
push
mov
jns
mov
repz
cmp
fnstcw
aam
cmp
and
sub
push
loop
cmp
pop
mov
dec
imul
mov
shr
jbe
xor
inc
push
mov
bound
inc
jg
or
aad
leave
mov
mov
rorb
xchg
mov
test
sbb
fmull
testb
jne
dec
popa
mov
outsb
sub
adc
jns
lea
jnp
je
insl
dec
jb
pushl
hlt
sbb
mov
jge
xchg
or
cli
inc
sbb
cwtl
ljmp
cmpsl
hlt
and
adc
in
sti
dec
xor
sub
aaa
sbbb
test
aam
in
cmpsl
add
jo
inc
add
mov
gs
adc
adc
data16
aaa
sbb
and
shll
dec
sbb
add
addb
leave
fcompl
test
xchg
in
js
mul
sub
lods
fstl
jp
push
fnstenv
lds
insl
mov
std
pop
push
push
lods
mov
sub
pushf
mov
dec
and
cmp
inc
push
xchg
in
xchg
push
iret
or
xorl
loopne
dec
daa
push
and
std
inc
push
cltd
cwtl
xor
movsl
and
pop
inc
push
adcb
push
js
push
hlt
shlb
jnp
xchg
ss
inc
xchg
xchg
push
jecxz
adc
test
pop
and
sub
shll
sbbl
push
adc
or
and
jle
dec
mov
mov
adc
cmp
inc
pop
out
inc
daa
in
lcall
lret
in
xor
push
mov
lock
push
jbe
and
mov
lods
mov
into
fdivp
jecxz
jg
outsl
jbe
xchg
push
lret
movsl
fmuls
fdivs
pop
lods
lods
ss
jge
jnp
sbb
pop
sar
pop
es
aad
data16
cltd
aas
jp
in
mov
push
int3
rcl
xor
mov
les
aaa
shrb
pushf
dec
inc
or
mov
sahf
push
int3
dec
dec
sub
and
push
lcall
mov
vmulsd
adc
test
sub
cmp
cltd
dec
fnstsw
sbb
xchg
mov
call
leave
loop
stc
or
xor
dec
lds
cmp
pop
fwait
cs
cs
imul
loope
stos
xchg
fs
cmc
inc
cmp
mov
or
shll
or
gs
imul
sub
adc
test
movsb
push
ja
and
and
mov
les
inc
cmp
imulb
test
adc
sbb
loop
cmpsb
repnz
xchg
popf
shlb
mov
and
pop
mov
inc
arpl
push
push
push
leave
inc
or
out
pop
jno
mov
test
shll
mov
pop
insb
sbb
sarl
std
sbb
xchg
mov
repnz
test
out
cwtl
enter
mov
das
rol
dec
jb
push
add
aaa
stc
xor
test
cli
pop
orb
sub
xor
rolb
call
jno
outsb
xor
cmovno
adc
pop
dec
sbb
xor
iret
inc
inc
das
inc
mov
mov
or
popa
sbb
popf
bound
jl
xchg
popf
sub
xchg
loope
ss
out
mov
fldenv
popf
mov
xor
fcmovu
xchg
ss
fistpll
push
jp
jno
pop
out
mov
negl
cmp
aam
dec
cmpsb
enter
mov
push
in
mov
push
dec
mov
sbb
in
jmp
mov
cmp
movsl
and
jbe
mov
add
or
jns
js
jmp
insl
icebp
stc
mov
fwait
inc
ljmp
or
es
jp
adc
pop
xor
imul
and
mov
sub
scas
jmp
xor
and
scas
lods
fldl
mov
stos
mov
dec
aaa
dec
nop
ret
sbb
addr16
enter
clc
mov
mov
xorl
sbb
fildl
arpl
negl
jecxz
nop
xchg
fbld
pop
mov
jb
adc
stos
hlt
sub
mov
cld
mov
xchg
mov
push
and
jbe
jl
adc
mov
outsb
jne
push
pop
push
faddl
mov
sub
add
imul
mov
leave
loope
add
imul
andl
xchg
int3
loopne
not
lea
ds
dec
clc
je
adc
jns
pop
scas
xor
sub
adc
pop
leave
popf
bound
into
cmp
loop
inc
pop
jecxz
jle
mov
fisubrl
test
jge
stos
repnz
nop
mov
mov
fcmovbe
pop
test
jmp
push
orl
push
cmp
and
lods
punpckhbw
pop
fstl
pop
cmp
cmp
push
pop
inc
mov
inc
xchg
push
cmp
aas
xor
jns
and
add
repz
daa
aad
add
adc
add
sub
sbb
jle
xor
insb
daa
xorl
and
xchg
enter
outsl
or
mov
jbe
popa
inc
adc
shl
enter
xor
and
fidivl
fwait
and
inc
sti
pop
mov
dec
pop
mov
xchg
cmpsl
mov
inc
scas
insb
and
adc
ljmp
mov
lock
jg
stos
mov
inc
push
jp,pt
popa
and
ret
push
mov
push
mov
dec
repnz
push
or
xchg
adc
xchg
movsl
jmp
jecxz,pn
cmp
lods
xlat
loop
or
mov
test
nop
vucomiss
push
xchg
xchg
pop
cmc
scas
lock
xchg
dec
and
sbb
cmpsb
jno
mov
jo
add
adc
lret
pop
pop
adc
push
out
mov
shll
mov
or
fcomi
rolb
sub
mov
fwait
or
bound
mov
call
pop
push
add
loope
dec
adc
fcoms
mov
enter
and
and
imul
stos
jmp
cmp
or
setb
inc
repnz
stc
dec
stc
pop
das
fwait
adc
or
and
lret
or
cld
pop
cmp
dec
fistpll
add
xchg
movb
je
loope
xor
out
and
xlat
adc
bound
aas
xor
test
aas
cwtl
fwait
loope
pop
mov
sbb
push
pop
fwait
cmp
ja
out
pop
in
pushl
jle
push
push
lock
mov
add
cs
inc
add
mov
iret
icebp
jo
cmpsl
cwtl
sub
cli
ffreep
ret
sbb
cli
sti
mov
dec
stos
notl
jb
jge
sbbl
sarl
jnp
mov
xor
idivb
aad
jnp
les
mov
mov
xor
cwtl
push
je
lds
adc
aam
inc
scas
mov
mov
ret
dec
andb
dec
aaa
fidivrl
popf
mov
in
in
sbb
cmpsb
xchg
mov
dec
mov
es
mov
jae
movsb
out
call
mov
sub
clc
lahf
jo
pop
loop
push
sbb
jno
cs
imul
sub
jl
push
lock
sbbb
cmc
push
sti
pusha
xchg
sub
ja
cli
mov
mov
test
cmpsb
or
cmpb
rcll
popf
fimull
xor
bound
roll
inc
xchg
cli
mov
pop
scas
out
les
or
and
les
insl
or
negl
lret
std
movsb
aad
lret
loope
sbb
mov
cmp
sahf
or
xchg
push
or
xchg
cmpsl
out
cmp
in
xor
rcll
cmp
or
andb
lret
stc
call
push
mov
cmpsb
sbb
leave
mov
popl
pop
std
shll
mov
mov
adc
mov
sub
add
out
jne
pop
roll
push
popf
movsb
clc
testl
data16
pop
rcrl
jecxz
jbe
or
aad
or
mov
out
xor
inc
sarb
popa
cmp
scas
iret
sub
xor
aam
mull
fmul
jo
jno
les
mov
mov
push
arpl
xor
repnz
fsubrl
xor
cltd
jb
test
or
xor
xchg
into
aas
jb
xor
cmp
pop
cld
xor
dec
mov
fstpl
dec
imul
jp
fidivl
test
jnp
push
jp
outsb
dec
fwait
insb
mov
in
imul
add
mov
and
xlat
xchg
in
hlt
fisttpll
mov
scas
loopew
add
in
fs
jg
add
add
mov
in
repz
clc
sahf
std
or
lcall
cltd
aad
pop
pushf
pop
push
bound
cltd
sar
insl
pushw
lret
loop
xchg
adc
fcoms
cmpsb
mov
test
das
mov
fwait
icebp
jmp
addr16
inc
jge
xchg
push
jb
or
inc
sub
aad
or
pop
cmp
jo
mov
mov
mov
pop
or
sub
subb
add
pop
mov
xchg
nop
iret
sbb
lea
popf
and
pushf
sub
outsb
adc
ret
xchg
fs
jp
pop
add
and
dec
and
jp
lds
lods
cmp
test
xor
push
push
movsl
add
or
push
dec
loop
rol
xchg
mov
fdivp
sub
and
dec
fdivs
inc
daa
data16
jne
test
inc
je
cld
outsb
popf
fs
imul
mov
sti
adc
sbb
sbb
pop
test
adc
pop
mov
add
std
lcall
add
rclb
out
loop
mov
push
mov
push
lods
loope
stos
in
inc
inc
in
inc
lods
das
cmp
mov
testl
mov
in
mov
xor
or
mov
dec
mov
das
add
add
into
int
int3
enter
jae
lock
arpl
push
orl
dec
sbb
adcb
mov
cld
aad
imul
movsl
mov
push
push
cmp
xchg
movsl
add
xchg
cmp
int
loope
inc
push
arpl
adc
into
lds
sbb
iret
in
xchg
into
cmp
sbb
pop
nop
ficompl
pop
je
jb
imul
bsf
ret
xchg
mov
inc
cmp
mov
lods
cmpsb
xchg
xor
and
shlb
add
cs
adc
sahf
jp
test
cmp
andb
pop
popf
or
fcompl
sti
and
data16
ja
scas
add
mov
arpl
dec
push
add
mov
add
addr16
sub
xor
jno
lret
push
mov
cmp
lret
dec
in
xchg
fmull
roll
jb
push
je
out
icebp
popa
pop
jbe
ds
inc
mov
inc
jbe
in
sub
loop
jns
pusha
addr16
gs
dec
jle
inc
cwtl
movsb
test
xor
sbb
dec
imul
sub
mull
lock
dec
and
shll
push
pop
outsb
arpl
mulb
push
repz
inc
sub
cmc
and
mov
mov
jns
fmulp
inc
lret
pop
mov
inc
hlt
lea
mov
addr16
mov
fnclex
mov
push
outsl
mov
pop
xchg
push
xchg
or
push
add
movsl
cmpsb
and
test
in
push
insb
mov
xchg
add
mov
mov
xorb
push
adc
cmc
aaa
xchg
jno
dec
jge
add
jp
in
jle
aad
in
out
test
scas
dec
mov
xchg
mov
jae
adc
dec
aad
loopne
push
dec
xchg
pop
rolb
in
xchg
sbb
pushf
fnsave
sbb
inc
mov
mov
rclb
pop
lret
dec
leave
sahf
and
push
cld
movsl
test
jno
ja
mov
lods
xlat
sti
mov
lea
mov
pop
push
pop
jge
pop
and
stos
dec
adc
xchg
mov
imul
fs
push
shlb
nop
mov
loope
aas
pusha
mov
icebp
add
jb
enter
adc
lock
sti
notb
ss
mov
dec
lret
test
pop
cmp
in
decl
hlt
js
gs
shl
int3
xor
leave
push
sahf
mov
add
dec
mov
mov
test
cmpsb
dec
loope
leave
adc
stos
xor
ret
mov
cld
lods
mov
xchg
xchg
mov
pop
push
imul
stos
jmp
add
imul
outsb
jo
jno
cli
inc
jne
pusha
add
imul
imul
mov
xchg
mov
cmova
outsl
mov
adc
aad
js
xchg
loop
add
lea
dec
scas
lock
jbe
mov
inc
mov
aad
aad
aas
sbb
jl
dec
cmp
cmp
mov
fiadds
pop
cmp
leave
xchg
call
sarb
xor
lahf
sub
test
add
dec
mov
mov
pop
add
xor
mov
sbb
mov
pusha
cli
je
dec
jl
sahf
divl
cmp
repnz
jecxz
jmp
push
mov
jne
cltd
mov
les
repnz
test
aas
push
hlt
push
or
cld
mov
outsb
jecxz
cli
push
pop
dec
sti
fwait
jb
inc
pop
fdivrp
inc
cmp
add
jl
lret
movsl
jl
cmp
xchg
sbbb
call
jnp
inc
and
lret
pop
xor
sub
inc
cltd
inc
aad
or
repz
push
gs
pop
jp
loop
push
adc
jnp
aad
jp
jl
and
popf
fwait
aam
sbb
fisttpll
ljmp
lea
sarl
ss
or
sub
shlb
add
or
mov
jnp
jae
mov
rcrb
iret
stos
pop
pop
aam
pop
cmp
ss
inc
hlt
nop
rorl
mov
xor
stc
or
push
push
mov
dec
repnz
aam
jge
movsl
jb
mov
xor
ret
stc
insl
xchg
fs
adc
push
out
movsb
aas
in
aam
ja
das
jb
xchg
popa
xchg
jge
insl
stos
push
inc
stos
cmp
lock
mov
shll
in
lds
outsl
arpl
lods
call
pusha
lock
andb
pop
fcomp
sub
leave
inc
push
sub
inc
cmp
add
mov
jo
gs
jl
push
jecxz
movsb
addb
pop
mov
loop
jge
loope
into
int
test
fstps
fcmovbe
xor
cmp
xchg
ret
stos
push
push
leave
imul
les
xchg
cmpsl
mov
mov
fimuls
dec
mov
pop
add
jae
sub
in
sub
stos
push
xor
pop
fs
xor
cmp
xchg
out
inc
inc
fists
les
std
je
cmp
std
xchg
or
adc
push
lahf
imul
xchg
mov
push
lods
push
jecxz
xor
inc
adc
rcrl
std
fildl
cmp
push
dec
ds
xlat
inc
xchg
add
mov
rorl
out
and
out
iret
popa
mov
daa
in
icebp
addr16
and
pop
cltd
stos
or
es
mov
clc
out
or
not
jno
lds
pop
data16
adc
arpl
subb
in
pusha
add
repz
push
out
dec
xchg
jns
out
imul
mov
mov
cwtl
mov
xor
jnp
mov
jp
mov
in
mov
insl
jne
adc
dec
inc
adc
insb
rorb
xchg
jl
clc
ljmp
notl
gs
ja
in
lret
mov
mov
sub
lret
shlb
pop
enter
shlb
sbb
cmpsb
lahf
lret
xchg
imul
clc
xchg
and
negb
xchg
and
push
xchg
addr16
and
lds
negl
int3
push
xchg
int3
or
pop
aam
stos
sti
bound
insl
jl
in
dec
jno
sbb
inc
dec
adc
call
imul
cmp
std
jle
dec
stos
sub
xchg
aam
xor
xlat
cmp
jle
sbbb
and
mov
fsts
ret
sub
xor
mov
std
hlt
jp
mov
jmp
mov
push
sub
cmp
adc
mov
ja
stos
les
mov
mov
jbe
sbb
mov
xchg
bound
stos
jno
and
pop
push
fisubl
sub
push
inc
aam
dec
sub
adc
xchg
inc
mov
and
xor
data16
mov
adc
cmpsb
out
dec
pop
outsb
inc
lods
add
inc
jle
sub
push
fidivs
lahf
pop
mov
ror
imul
inc
leave
out
negl
lcall
xchg
fidivrs
movsb
mov
jbe
xchg
in
loope
push
sub
bound
outsl
outsl
inc
aas
mov
pop
pop
in
push
fucomip
xor
jns
clc
mov
sbb
jnp
jmp
push
or
jmp
test
scas
adc
xor
inc
sbb
shlb
sbb
cld
shl
or
shlb
push
xchg
xor
xor
ss
outsl
bound
xchg
adc
jl
xor
push
pop
mov
hlt
pushf
sub
vpminsw
enter
inc
push
lahf
outsl
xor
mov
lock
loopne
stc
mov
xchg
jno
imul
sbb
lea
mov
rcll
ss
scas
push
sbb
mov
jg
cmp
stc
popf
mov
xlat
mov
or
mov
popa
leave
pop
mov
enter
add
mov
push
mov
repnz
loop
aaa
inc
and
ds
push
mov
sbb
test
pop
sub
xor
inc
sub
cmp
movsl
fwait
xor
shl
lcall
lret
aaa
cmpsb
loopne
arpl
mov
mov
or
sub
sub
push
sbb
add
inc
lds
cmpsb
push
cmp
jmp
mov
lcall
ror
sub
cmp
rorl
jo
jo
in
mov
sub
in
mov
insb
dec
sub
push
jae
lret
push
push
loope
addr16
jp
sbb
lahf
insl
mov
adc
in
aam
sti
mov
cwtl
subb
insl
in
inc
sub
and
lods
popf
pop
dec
add
loope
or
xchg
movsl
cmpsl
cld
xor
push
add
xor
push
mov
cltd
cmc
data16
jo
pop
in
mov
push
cwtl
ret
push
sbb
mov
test
or
es
adcb
xchg
xorl
and
das
jns
dec
jb
push
rorl
mov
dec
push
or
das
call
out
addr16
daa
loope
xchg
or
cmc
cmc
jecxz
adc
pop
imul
and
jne
mov
sbb
mov
xor
mov
repz
imul
fs
cmp
dec
in
pop
decb
inc
jle
dec
loop
jns
pusha
mov
loopne
addb
je
popa
mull
inc
in
movsl
or
in
mov
imul
cmc
gs
pop
add
in
rorb
mov
aaa
es
push
sbb
out
addb
mov
jno
mov
in
test
pop
push
aad
adc
mov
xor
dec
std
mov
addb
and
pop
add
imul
daa
or
int3
fnsave
sbb
mov
inc
and
cmpsl
mov
dec
mov
dec
push
ffree
sub
pop
sbbb
jb
in
stos
decl
push
insl
xor
cmp
cmp
mov
fwait
adc
push
adcb
mov
sbb
call
adc
mov
lods
iret
fisttpll
cli
inc
pop
cmc
mov
imul
lea
ja
lret
mov
mov
jg
jp
xchg
and
mov
xchg
pop
adc
add
jo
mov
rcrb
bound
mov
push
pop
lcall
pop
int
test
ret
mov
leave
das
mov
scas
fnsave
fs
push
add
mov
lds
das
insb
pop
or
test
test
jl
pushf
xor
inc
sub
dec
sbb
dec
inc
mov
enter
das
xlat
dec
test
fcomps
mov
loop
sub
push
stos
popf
dec
lret
add
adc
stc
push
daa
push
dec
mov
imul
int3
xor
adc
lods
pmulhuw
lods
pop
lea
mov
mov
fsubl
lock
ret
test
jmp
pop
cmp
push
xchg
outsb
push
mov
test
add
sbb
lret
hlt
outsl
je
rcl
jnp
repnz
out
sahf
mov
shlb
mov
dec
and
in
lea
pushf
push
xor
scas
fstpt
int3
les
cmp
das
xor
xor
and
lds
mov
repz
sub
int3
in
pop
repnz
movsl
pushl
jne
out
cmpsl
out
int
pop
cmp
mov
xlat
jle
cmpsl
into
mov
cld
enter
add
jmp
rorl
fstl
scas
xchg
push
scas
or
pop
cltd
mov
stc
sbb
xor
add
enter
sbb
cwtl
jle
mov
fldenv
cmp
add
adc
data16
cmp
bound
ja
xor
adc
mov
icebp
inc
pop
add
mov
cli
das
rcll
sbb
mov
shrb
push
movsb
jae
mov
rorl
jno
cmp
mov
leave
lea
jbe
xor
pop
xchg
cmp
push
dec
xchg
mov
push
mov
adc
lea
mov
pusha
jo
ficoms
insb
jl
mov
pop
notl
ja
loop
cmpsl
rclb
lea
sti
imul
cltd
mov
push
xchg
xchg
outsb
mov
dec
rsm
sarb
cmpsb
xor
les
xlat
enter
pushf
or
inc
jge
mov
cs
push
xor
add
pop
aam
jp
sub
fwait
clc
sub
dec
loop
popa
pop
inc
push
jb
sbb
sbb
push
push
shr
xchg
and
xor
repnz
xlat
out
mov
test
inc
sbb
pushf
fbld
xor
rcrb
and
enter
jmp
icebp
repz
fidivrs
popf
jle
test
xlat
call
hlt
shl
icebp
mov
jne
sti
out
inc
jns
and
das
adc
or
ficompl
int
fs
mov
and
mov
mov
cltd
push
jne
xchg
fs
mov
mov
lods
xor
clc
fcmovnu
push
ljmp
cmp
dec
out
pop
rorl
loopne
fidivs
leave
out
pop
in
shl
and
or
aam
loope
lahf
test
xchg
out
pop
ficoml
xchg
cmpsl
push
cmp
inc
add
pop
mov
insl
adc
call
popa
aad
xchg
cmp
xor
pop
and
xor
push
push
mov
mov
pushl
popa
adcl
fnstsw
mov
jb
js
push
sbb
movsb
cmp
xchg
mov
add
mov
lods
mov
inc
fst
inc
sub
jmp
cltd
xchg
sbb
sub
andb
dec
testl
addl
pop
xor
inc
ret
adc
aas
paddw
jbe
sbb
jb
dec
stc
jne
and
add
mov
pusha
cmp
mov
mov
pop
pop
out
jbe
inc
or
pop
add
outsb
and
or
daa
cmp
scas
out
lea
add
cs
sbb
xchg
addr16
test
xchg
das
icebp
or
std
inc
cmc
inc
jb
push
push
mov
adcl
jo
nop
mov
pop
or
mov
insb
lret
or
inc
sbb
adc
sub
fisttpll
inc
dec
pop
scas
rorl
les
lcall
out
mov
lahf
xchg
int3
cmpsl
ret
in
lods
int
push
bound
notb
and
sub
lcall
and
lahf
ret
idivl
sub
push
pop
shll
mov
pop
loope
inc
dec
lock
sub
sub
test
fcmovbe
push
adc
ds
dec
enter
sbb
or
and
jle
ret
xor
adc
int
negl
shlb
ljmp
pop
mov
mov
xlat
inc
lahf
das
jno
xor
pop
aas
je
std
out
jmp
andb
mov
aad
hlt
mov
ds
sbb
lret
adc
ja
mov
data16
adc
outsb
dec
mov
loopne
adc
and
imul
adc
sbb
push
mov
popa
loopne
ja
out
je
mov
mov
js
ja
sbb
test
jge
icebp
push
push
jbe
mov
lods
xor
lcall
aad
pop
addl
sti
sub
mov
and
add
in
pop
pop
sti
pop
adc
pop
fucomip
int3
shll
adc
aam
inc
xchg
push
dec
repnz
jno
stos
dec
mov
arpl
fsts
sbb
dec
pop
ret
sub
dec
imul
jle
rolb
daa
mov
cmp
lret
xchg
cmp
push
in
enter
icebp
scas
ljmp
inc
andb
aaa
jnp
inc
gs
dec
pop
rorl
xor
sub
cmp
cmc
movsl
gs
or
jb
add
xchg
pop
call
sahf
repz
push
and
aam
inc
xor
std
adc
fdivp
das
jle
lret
cmc
xor
pop
mov
leave
fidivrl
and
adc
outsb
push
push
lods
push
and
shlb
das
pop
call
push
inc
aad
jb
ret
sbb
adc
jnp
xchg
dec
xor
jne
push
sbb
mov
lret
sub
cmp
push
cmc
adc
pop
lea
inc
lcall
push
lods
dec
xor
mov
sarb
xlat
dec
dec
mov
mov
add
sbb
mov
dec
andb
mov
jbe
shrb
or
addb
std
mov
or
popa
xorl
cli
in
push
cs
lret
and
xchg
clc
js
int3
and
rorl
push
and
inc
mov
out
divb
cmp
out
jns
pusha
jg
shrb
fs
pop
rcll
insl
repnz
adc
cmp
mov
dec
sub
test
push
xor
insl
sub
mov
cmc
pop
loopne
rol
xchg
stc
pushf
mov
lahf
xchg
mov
lods
test
out
es
sub
xchg
hlt
mov
dec
xchg
cmc
jnp
sahf
xacquire
cli
arpl
add
mov
das
andb
nop
sbbl
repnz
add
rorl
sahf
and
pop
and
test
fildl
inc
jl
jno
stos
jl
fistps
ds
lds
mov
or
mov
les
push
inc
into
sub
xchg
cmp
das
add
test
cmpsb
xor
push
sbb
cmp
xor
inc
or
inc
push
xor
std
add
or
dec
push
push
lea
pop
call
push
mov
sbb
andb
hlt
sar
test
stos
clc
js
or
sbb
pop
pop
add
popf
xor
mov
push
push
xlat
jg
jae
push
jb
inc
lds
xor
push
rcll
hlt
mov
push
cmp
add
out
inc
xlat
jecxz
int3
int
adc
inc
stos
inc
add
pop
jge
pop
ss
sub
push
mov
pusha
sub
xchg
popf
or
sub
shrb
das
push
insb
push
mov
and
outsb
mov
mov
cwtl
xor
pop
cmpsl
add
xchg
outsb
sub
jecxz
xchg
daa
sbb
lods
dec
push
pop
in
push
inc
cmp
mov
lahf
or
int
sbb
das
pop
das
jmp
or
mov
pop
dec
and
shl
mov
and
xchg
add
pop
mov
pushf
ss
adcl
push
sbb
cmp
ds
fisubs
xor
xchg
inc
xor
jb
and
sub
fwait
repnz
xor
dec
xor
ja
or
enter
fsubrs
adc
sub
push
bound
enter
mov
inc
adc
jnp
or
test
lock
popa
cli
call
xchg
popaw
daa
push
jge
pop
mov
int3
xorl
and
xlat
sub
jo
xchg
add
or
repnz
cmc
gs
or
ss
cmpsb
push
jp
pop
jle
outsl
jmp
mov
mov
scas
repnz
ljmp
rol
sbb
das
call
adc
inc
fnsave
adc
cwtl
loopne
jo
mov
xchg
and
insl
les
popa
iret
adc
sbb
test
out
xchg
mov
or
jns
cmp
sbb
inc
adc
fistl
mov
lock
mov
repz
pop
scas
push
pop
jnp
inc
pmulhw
out
mov
xchg
jbe
add
adc
mov
movsl
call
xor
mov
cmp
sbb
ja
test
dec
sbb
push
xchg
shrl
adc
dec
sub
inc
in
insl
lahf
add
pop
rol
pop
mov
adc
inc
cmp
cwtl
pop
call
push
lods
int3
loop
add
pop
int3
mov
pop
jb
mov
inc
ja
and
and
inc
or
dec
jecxz
inc
iret
xchg
cmovb
or
jmp
push
daa
dec
inc
mov
pop
mov
test
and
push
shrb
pop
cmpsl
dec
dec
jbe
mov
cmp
divb
ret
fstps
or
jg
nop
lahf
in
inc
adc
pop
cli
push
push
push
dec
fsubs
std
jl
xor
mov
cmp
cli
fmuls
lods
add
mov
in
inc
cmp
mov
adc
sub
mov
mov
mov
fsubl
sub
mov
adc
sbb
and
aaa
or
add
xchg
dec
incl
arpl
fs
insl
dec
fcomps
push
fucomip
sarl
sti
lcall
push
out
jmp
mov
mov
ss
pusha
and
add
pop
jne
shrb
add
loope
popf
dec
loop
imul
ds
or
jae
cwtl
test
sbb
mov
mov
ljmp
in
cmpsl
ret
xor
sbb
test
lret
std
test
testl
dec
pushf
nop
out
loop
lret
test
pop
stos
push
xchg
outsb
out
and
movb
mov
xchg
push
mov
pop
cmp
stc
cld
addl
push
dec
insb
jmp
sub
push
add
xor
stos
addb
das
adc
sti
push
inc
mov
jbe
test
cmp
js
jg
outsb
inc
jle
push
scas
push
inc
xchg
sub
dec
dec
jle
dec
test
cli
and
sbb
push
mov
lock
cmp
or
push
cmp
popf
std
sar
push
lret
call
jno
popa
std
jo
lock
push
push
sbb
or
add
add
std
out
dec
mov
rorl
dec
sbb
or
sbb
inc
push
add
pushf
jp
mov
dec
mov
xor
out
pushf
lods
inc
popf
jmp
out
dec
push
or
jmp
sub
jno
inc
hlt
out
pop
lcall
ja
inc
dec
popf
out
push
xchg
pop
aaa
sbb
hlt
in
out
int3
adc
outsb
leave
jne
stos
aam
jle
loope
pop
sbb
push
std
and
adcb
mov
pop
jg
in
jg
pop
push
jp
mov
shlb
dec
mov
cmc
fstpl
rcrb
std
fwait
std
lock
movsl
pushl
jno
mov
inc
outsl
mov
adc
lds
pop
bound
std
in
les
mov
or
ja
clc
adc
dec
jmp
xor
scas
push
push
add
push
and
insb
scas
adc
push
ja
mov
mov
sarb
mov
fidivrs
cmp
movsb
notb
and
push
jge
mov
add
ss
sub
in
mov
rorl
ljmp
pop
mov
cmp
xor
and
inc
sbb
sbb
push
mov
lea
sbb
adc
stos
dec
gs
inc
out
int
add
push
out
pop
out
stc
xchg
mov
insl
pusha
cmpsb
lds
pop
jmp
popl
mov
and
jbe
xchg
mov
jns
ds
adcl
add
add
scas
clc
or
jns
sbb
ficoms
inc
inc
mov
cmp
mov
sbb
jne
sbb
das
sahf
mov
addr16
mov
rorb
imul
adc
mov
xchg
xlat
pushf
into
push
int
rclb
push
ss
push
sahf
aad
repnz
xor
loopne
mov
jle
cmp
ljmp
imul
lds
stc
sbb
pusha
repnz
and
cmp
adc
aaa
adcb
testb
pop
add
inc
cwtl
aaa
inc
mov
jno
push
in
imul
stos
gs
fildl
or
nop
xchg
icebp
xor
hlt
shlb
out
dec
jno
mov
nop
push
sbb
xlat
lea
mov
jecxz
stos
inc
dec
xchg
lea
add
pop
pop
es
mov
lahf
out
adc
leave
push
add
es
das
aad
loopne
filds
iret
rcrl
mov
mov
pop
sahf
pop
fsubrp
ljmp
insb
cmc
xchg
jno
sub
jno
fwait
popa
add
cmp
sub
lahf
cltd
and
mov
daa
jne
mov
test
xor
mov
aam
aad
imul
fmuls
push
cltd
repnz
andl
mov
addl
gs
and
in
loop
and
ret
sbb
sar
xchg
icebp
aas
dec
adcl
pop
addr16
cmp
aad
dec
add
mov
mov
dec
mov
inc
shl
repz
shr
jnp
pop
mov
aaa
mov
enter
push
adc
ret
xchg
mov
xor
push
pop
pop
add
lret
imul
lods
mov
ljmp
mov
mov
adc
test
les
hlt
jg
jp
mov
aas
jle
mov
jnp
ret
jne
sbb
xchg
pop
fdivrl
out
cld
in
les
lea
adc
fs
es
lea
push
mull
pop
jne
stos
imul
addb
pop
or
xchg
je
dec
out
xchg
je
into
rcll
out
add
iret
scas
fnstcw
lea
dec
add
jo
inc
iret
or
ds
mov
sub
clc
pop
mov
xchg
push
dec
icebp
shll
bound
lret
loopne
pop
dec
cmp
pop
lret
ss
pop
imul
jnp
es
bound
mov
pop
nop
pop
sbb
out
scas
inc
or
imul
dec
pop
aas
mov
or
lcall
andb
roll
mov
mov
cmp
loopne
pop
add
xchg
faddl
pop
jp
out
lret
or
stc
jae
insl
sbb
add
add
sbb
push
popa
add
fadds
fstpl
cwtl
pop
sub
imul
or
pop
cmp
js
push
ficoms
jo
jmp
cs
test
jle
adc
inc
mov
pop
into
movsb
aad
adc
xorb
jle
jmp
add
js
or
dec
subb
scas
mov
sbb
lcall
fwait
decl
shlb
sbb
fucomi
add
stos
stc
and
shl
cmp
add
mov
cwtl
add
lahf
xor
popl
popa
push
adc
pusha
aaa
sti
xchg
mov
stos
gs
inc
into
inc
in
mov
stos
or
mov
and
pusha
push
inc
mov
sub
push
cs
sbb
icebp
and
ljmp
xchg
clc
mov
cmpsl
mov
test
mov
or
cld
jp
aad
jne
outsb
movsl
xchg
adc
push
lock
jno
cltd
stc
dec
scas
gs
pushf
sub
out
stc
imul
in
mov
aam
mov
out
nop
adcl
insl
cmp
adcb
push
sub
enter
dec
stos
sbb
lods
loop
mov
fs
repz
inc
xor
je
dec
mov
mov
nop
dec
xchg
dec
inc
scas
outsb
mov
pop
mov
jae
push
shlb
push
pop
lret
lret
stc
sub
cmp
dec
out
inc
add
lcall
push
mov
cmp
js,pt
lret
jmp
jbe
jmp
jecxz
xorps
cmp
adc
sub
shll
filds
ja
aad
mov
push
sub
or
sbb
add
test
adc
imul
inc
inc
xchg
push
out
ds
pop
mov
adc
fcmovb
out
mov
notb
mov
pop
adc
call
in
stos
rcll
iret
xchg
pusha
add
shll
sub
cmp
xchg
das
add
test
pop
adc
pop
or
xchg
inc
sub
push
adc
xchg
inc
mov
pop
mov
xchg
cmp
pop
cld
mov
cwtl
filds
and
jno
adc
iret
cmp
mov
dec
movl
jo
divb
popf
push
out
cmp
cmp
jle
mov
push
or
mov
out
ja
mov
sbb
inc
mov
sub
fcomps
jns
lret
add
int3
push
mov
ja
es
dec
dec
pop
iret
std
out
jo
xchg
stc
addr16
cmp
cli
jbe
in
and
out
jnp
pop
pop
jg
cmp
jg
insb
jp
int
pushf
pop
and
stos
pop
roll
cmp
and
hlt
cmpsl
popf
in
inc
ret
push
fadd
imul
mov
mov
sbb
jae
push
in
aas
mov
repz
mov
loope
dec
mov
repz
add
cmp
js,pn
mov
mov
jo
aad
cmc
ja
scas
sbb
cli
mov
push
sbb
ljmp
pop
ja
mov
cli
lcall
xchg
mov
dec
mov
lcall
cmc
test
stc
hlt
std
ret
inc
lret
xchg
dec
rorl
repnz
imul
sbb
mov
les
icebp
vunpcklps
nop
imul
int
out
lahf
dec
pop
pop
xchg
mov
mov
sub
pop
cwtl
insb
cltd
gs
sbbb
push
mov
das
shll
aaa
mov
fdivs
fdiv
mov
jbe
mov
das
stc
sub
cwtl
adc
imul
xchg
mov
and
sbb
mov
jnp
stc
xchg
cltd
test
cmpsb
push
xchg
sbb
icebp
into
mov
loop
icebp
iret
repnz
test
into
inc
pushf
adc
jl
mov
aam
lret
cmp
pop
jg
xchg
std
mov
mov
ret
mov
mov
push
fcmovbe
xchg
jbe
out
push
and
xchg
and
mov
jle
and
add
insb
add
ja
cmpsb
dec
test
jae
cltd
mov
jp,pt
insl
sbb
inc
pop
stos
dec
imul
jp
lahf
push
nop
in
fstpt
fbld
test
dec
icebp
bound
jo
mov
jl
test
jecxz
imul
lret
test
xorb
dec
into
insb
push
aad
xchg
gs
add
sbb
shrl
sbb
pop
adc
push
push
and
jmp
lret
sahf
out
repnz
fcmovu
cmpsb
fildl
pop
jmp
cmp
mov
stc
std
push
sub
data16
ja
cmc
cli
xchg
fists
lock
push
xor
mov
mov
pop
mov
sbb
pushl
dec
jbe
mov
cmp
push
dec
pop
jl
lret
mov
jle
les
mov
pop
ljmp
mov
push
test
rcr
insb
in
fmuls
aas
and
push
add
sub
mov
call
xchg
sti
lea
push
scas
pop
cltd
add
pop
psrlw
xchg
or
and
sbb
mov
scas
test
inc
add
dec
jno
cmpsl
cwtl
push
pop
shlb
popa
sub
int
into
iret
loop
nop
clc
and
mov
out
notl
sarb
out
lahf
xadd
imul
data16
pop
sarb
pop
in
mov
int
pop
ret
ficoml
les
push
std
mov
cmp
inc
adc
jne
mov
jge
push
in
test
dec
cmpsb
mov
mov
or
push
mov
and
cld
mov
jno
sub
inc
cltd
add
jmp
mov
cmp
cmp
dec
aaa
cmp
fwait
clc
lret
inc
and
and
sub
loopne
cwtl
loop
pop
push
call
imul
sub
insl
data16
pop
arpl
mov
scas
shlb
pop
xchg
jne
mov
adc
arpl
and
stc
lret
xor
scas
xchg
mov
call
loopne
inc
nop
repz
cmpl
add
jnp
enter
in
repnz
push
inc
jno
mov
pop
scas
out
or
mov
xchg
dec
cwtl
jmp
sbb
lret
lahf
cmc
aaa
push
mov
cld
repz
cmp
push
das
mov
push
or
adc
push
lods
mov
push
mov
sub
das
idiv
mov
or
imul
push
mov
loop
jmp
lret
cmp
subb
mov
mov
dec
and
loopne
xchg
fistl
stos
adc
pop
popf
xor
loop
or
scas
xor
in
xor
arpl
pusha
mov
shlb
dec
sti
dec
aad
or
pop
inc
pop
jnp
pop
add
or
mov
sbb
icebp
lahf
push
or
adc
jge
addr16
int
popf
sbbl
icebp
mov
neg
xor
es
mov
in
nop
push
push
xchg
adc
sbb
mov
and
cmp
test
testl
lahf
mov
popa
cmc
push
outsb
outsb
lock
cmpsb
xor
sti
cld
sarb
test
aam
inc
mov
xor
and
mov
and
cmp
lahf
adc
lret
loop
into
test
adc
mov
jne
push
mov
push
push
lds
or
aaa
cmp
jg
mov
mov
sub
std
mov
cmpb
imul
cld
pop
das
sahf
out
ficompl
inc
mov
cmc
and
jmp
test
cmp
adc
pop
and
dec
mov
ret
filds
sub
mov
cmp
enter
les
in
out
lret
add
out
mov
mov
lahf
aas
or
jmp
add
sbb
push
dec
repz
js
sbb
and
xor
jmp
push
and
xchg
add
push
pop
push
mov
shlb
movl
scas
or
adc
sti
fcomi
push
cmc
mov
daa
or
lock
outsl
or
xor
jnp
jno
push
push
cmp
mov
inc
stc
adc
sbb
sbb
out
sti
mov
fidivrs
fisttps
test
and
sahf
mov
inc
jecxz
inc
inc
push
loope
dec
mov
jb
sbb
sbb
aad
inc
add
mov
ljmp
iret
mov
insl
xchg
mov
mov
out
dec
jl
int3
sahf
cmp
addr16
dec
dec
test
jge
adc
add
mov
sbb
into
add
aam
sub
cmp
cmp
mov
ljmp
das
stos
xchg
push
insl
xor
sbb
pop
div
mov
mov
mov
cmpsl
call
es
mov
adc
lds
sbb
sar
fildll
adc
stc
cmpb
cmp
js
push
sbb
xor
pop
int3
xchg
and
inc
add
addr16
mov
aaa
ja
sub
addb
push
inc
cmp
sbb
bound
cmp
sbb
std
ljmp
mov
cmp
popa
pop
cmp
popf
sbb
mov
pusha
xor
sti
add
and
pop
inc
cmc
loope
mov
aad
and
ret
ljmp
add
mov
mov
lods
xchg
mov
sub
mov
jbe
ret
jo
pop
ret
sti
jl
push
add
push
loopne
scas
inc
cmp
push
loop
dec
and
ja
mov
jnp
dec
mov
dec
push
enter
mov
je
icebp
fwait
sub
rcll
fiaddl
loope
lret
repz
xchg
sub
mov
dec
imul
daa
das
ds
push
cmp
sbb
or
movsb
inc
sti
and
and
test
out
jmp
mov
pop
arpl
in
pop
cltd
inc
push
jns
sub
aam
sub
iret
cltd
enter
mov
addr16
xchg
add
repz
xchg
into
adc
pop
lret
xor
xor
xchg
pmaxsw
inc
cmp
cmpl
add
stc
mov
pop
adc
iret
push
pop
jecxz
clc
push
lock
fcmove
sbb
xchg
xor
sub
lret
xor
mov
pop
loop
jns
sub
or
mov
into
pop
pusha
push
add
xor
movsl
roll
hlt
cmp
mov
push
cmp
inc
xchg
xlat
loopne
and
push
mov
out
sbb
sbb
cld
lahf
enter
std
cmp
andb
push
jno
or
jmp
mov
xor
adc
mov
outsl
ret
pop
add
loope
dec
and
xor
pop
dec
and
cmp
cmp
scas
adcl
push
sub
test
fsubl
cli
cmc
adc
dec
mov
sub
loop
jecxz
sbb
div
insl
sbb
add
popa
addr16
or
cmp
pop
push
sbb
dec
out
mov
mov
lods
lahf
les
mov
imul
cmp
lods
call
cli
stos
clc
dec
fcoms
mov
mov
add
cwtl
pop
negb
das
mov
stos
test
shrl
addr16
add
sbb
lds
loope
xchg
movsl
and
sub
sub
or
fwait
aam
iret
repz
fsubs
lods
mov
scas
adc
xor
push
leave
rcrl
pop
arpl
pop
and
pop
fimuls
stc
mov
xchg
add
push
sbb
pop
push
sbb
xlat
cld
lcall
fnsave
ljmp
sub
or
fwait
aas
jbe
sbb
sbb
movsb
xchg
sbb
add
out
movsb
and
out
mov
cli
sub
pop
pop
jle
inc
jmp
aas
ret
inc
daa
xor
add
ret
les
test
or
stos
push
add
into
in
jne
call
dec
aad
mov
fwait
scas
nop
push
out
mov
out
xchg
adc
rclb
iret
fldl
mov
hlt
jmp
int
ret
xchg
shll
sub
dec
std
repnz
pop
jg
push
sub
or
inc
fmul
mov
mov
scas
jae
and
arpl
gs
cwtl
out
dec
lret
imul
ljmp
movsl
sahf
leave
std
pop
mov
push
pop
sbbl
mov
mov
xchg
into
lods
stos
mov
ja
int
ret
sti
rcll
mov
in
out
lods
push
loop
inc
lret
or
mov
mov
test
cmp
mov
inc
xchg
inc
pushf
and
mov
ds
inc
adc
es
xor
xchg
sarb
and
addb
xchg
ds
int
lods
mov
gs
fs
xchg
pop
enter
or
push
jnp
shlb
push
out
pop
movsb
cltd
or
ror
mov
and
stos
cli
test
neg
push
xchg
xor
mov
dec
mov
jbe
iret
mov
dec
push
jmp
mov
outsl
push
pop
dec
outsb
lcall
cmp
cmp
sarl
cmpsl
adc
mov
add
js
test
outsb
xchg
outsb
dec
mov
daa
xchg
or
out
jo
jle
icebp
hlt
xchg
add
adcl
orl
andl
dec
and
xchg
cmc
ret
sbb
dec
ljmp
in
stos
stc
ror
imul
sti
imul
in
push
mov
cld
test
movsb
adc
arpl
sbb
adc
push
adc
sbb
mov
and
push
sub
sbb
xlat
aas
lret
lahf
aam
adc
push
push
mov
fisubs
aam
lds
out
sub
ret
xchg
lret
imul
push
mov
mov
mov
imul
std
inc
das
xchg
inc
cmc
and
jge
pop
insl
sub
fwait
dec
jb
in
repnz
cmp
mov
inc
cltd
fcomps
pusha
stos
dec
ret
cmp
pop
cmp
enter
inc
aad
pop
lods
fsubrp
adc
sub
aad
rorl
repnz
mov
in
dec
test
mov
insl
je
lahf
cmp
adc
xlat
cmp
sarl
or
pop
loope
fiaddl
add
push
ds
sbb
lock
loop
les
xor
xchg
nop
lods
cs
lcall
sub
push
cmc
fistpl
push
push
mov
movsb
mov
inc
int
ja
sbb
je
into
push
lcall
adc
cmp
pop
jae
aas
ss
mov
fcoms
cmp
cmp
lea
xchg
push
jb
into
imul
jo
push
testl
arpl
loope
jmp
push
enter
add
shrl
mov
jae
popf
and
mov
int
lea
cmc
jbe
fwait
outsl
ss
sti
dec
sub
out
xor
push
and
sbb
ret
and
fs
jmp
into
rcrb
pop
insl
inc
pop
sbb
sbb
sahf
les
mov
repz
dec
pop
cmp
out
and
dec
out
in
repz
jle
fisttps
enter
fwait
js
and
shlb
out
stc
rcrb
sub
push
es
xchg
int3
fsubl
addb
pop
cmp
or
adc
lcall
mov
adc
inc
inc
movl
pop
and
inc
aas
fld
mov
sub
int3
dec
testl
add
aas
gs
test
test
pop
mov
fs
pusha
jp
dec
xchg
outsb
xorps
imul
cmp
push
inc
mov
mov
icebp
xchg
inc
je
push
mov
fcmovnbe
or
jnp
push
dec
cltd
ret
data16
dec
loope
mov
push
push
lods
dec
dec
sbb
jge,pn
je
adc
data16
xchg
mull
nop
jae
test
or
jecxz
stos
inc
and
sub
aaa
xor
sbb
mov
pop
push
addr16
sub
loope
jae
xchg
fstpl
inc
inc
enter
cmp
cmp
mov
push
jmp
daa
or
les
test
cmp
mov
loop
dec
je
mov
push
mov
cmp
xor
xor
das
sahf
movsw
fcomps
sub
cmpsb
rolb
pop
ja
xor
out
sbb
pop
insb
or
pop
or
sahf
cmp
leave
mov
imul
ret
daa
push
push
ret
lahf
leave
cmp
popf
rclb
pop
mov
sub
or
pop
push
fs
sub
cmp
and
daa
mov
or
dec
cltd
or
mov
aad
push
lods
test
lock
imul
sub
and
aam
dec
mov
jp
add
sub
sahf
sbb
or
call
imul
andb
lods
xchg
mov
mov
xor
out
test
sbb
shlb
jnp
aam
idivb
aam
lret
fwait
mov
xchg
mov
adc
ret
cmc
add
aad
int3
imul
sub
xchg
xor
mov
punpckhwd
popl
pop
ret
int3
and
jno
xchg
loop
dec
mov
arpl
dec
cmpsl
push
sub
dec
jecxz
pop
lock
mov
xor
pop
cs
xchg
sbb
movsl
jb
pushf
mov
and
pop
sahf
jmp
repnz
pop
out
out
cmc
mov
popf
mov
or
scas
imul
cwtl
cltd
repnz
loope
and
add
dec
cmp
mov
dec
aaa
inc
in
mov
lahf
icebp
loop
lret
gs
popa
or
sbb
jns
addr16
loope
sub
mov
div
fimuls
testl
add
movsl
std
push
push
xchg
jnp
adc
std
mov
jb
fwait
add
cmp
mov
ror
sbb
mov
pop
int
mov
push
sub
cmp
aad
das
cmp
jb
je
mov
aad
test
dec
mov
inc
xchg
js
out
or
push
aad
pop
sub
add
les
jb
aad
insl
pop
jp
or
cmp
lea
lods
pop
lahf
jnp
idiv
out
imul
out
lods
out
stos
push
sub
negl
adc
mov
test
insb
loope
cltd
sti
mov
loopne
pop
repz
in
jge
dec
lock
adc
jge
mov
mov
dec
add
dec
inc
mov
fwait
dec
mov
ss
inc
xchg
adc
lret
jmp
mov
fisttpll
gs
cvtpi2ps
cwtl
out
jo
pop
and
outsb
cwtl
cmp
ja
sbb
sub
je
pop
mov
mov
cmp
repnz
lea
repz
or
inc
idiv
bound
repz
int3
scas
mov
adc
jecxz
or
and
shlb
call
or
mov
sbb
sbb
pushf
shl
insb
insb
add
lret
test
pop
jae
xchg
aam
loop
adc
jecxz
sub
pop
or
fs
xchg
push
xor
sti
mov
movsb
daa
mov
sbb
push
rcrb
in
movsl
sbb
test
and
xor
pop
cmp
aam
out
dec
fildll
mov
sti
cmp
jecxz
dec
fdivl
cmp
sub
mov
add
jge
mov
loope
mov
test
out
or
shl
scas
dec
incl
xchg
std
cmc
push
lods
and
jp
stos
lods
mov
je
mov
inc
leave
enter
ret
imul
outsb
jbe
std
sbb
rcr
jle
andl
pop
mulb
push
in
xor
jae
in
testl
mov
mov
cmp
fstl
cs
xorl
dec
imul
arpl
adc
or
test
sti
loope
inc
test
xor
add
sarl
loope
push
mov
test
cmp
jmp
sbb
add
jmp
mov
mov
repz
mov
fbld
fistpl
xchg
je
shrl
sti
sbb
adcl
cmp
mov
jg
jle
or
sbb
mov
stos
adc
leave
xchg
fsubr
and
jbe
adc
adc
mov
aaa
ja
cmpsb
mov
xchg
in
xchg
push
jae
aaa
jp
test
mov
mul
add
add
fisubrs
push
xchg
and
lock
cmpl
insl
jl
nop
push
outsb
sbb
or
cwtl
sub
mov
xor
imul
push
pop
lea
rorl
ljmp
pop
mov
add
push
xor
notb
test
sub
sub
pop
std
push
jg
and
repz
loope
lock
cmp
mov
pop
cmpl
push
xchg
cmovle
gs
call
pop
cmpsl
push
in
cwtl
add
push
sbb
jnp
lds
mov
pop
lcall
fsubp
jecxz
jg
dec
or
and
mov
jge
cmpsl
xchg
orb
jbe
adc
mov
xchg
xorw
xchg
push
fs
loop
pop
inc
push
cmpb
icebp
mov
mov
mov
sbb
fadds
fs
fwait
cmovbe
pop
xchg
mov
or
push
sbb
adc
lret
in
mov
mov
dec
xchg
stos
out
mov
dec
pusha
pop
imul
mov
adc
push
je
or
lret
fldenv
adc
bsr
decl
lods
and
jge
mov
cmp
lock
shl
lock
xor
mov
dec
test
ret
lret
xor
mov
lods
fsubrl
les
ja
daa
loopne
mov
push
sub
adc
cmc
adc
mov
dec
mov
cli
adc
dec
fs
mov
mov
push
jo
mov
imul
inc
pop
push
mov
sahf
idivb
mov
cltd
inc
or
movsl
xor
add
adc
xor
xchg
jbe
push
sub
cmpsl
mov
xchg
aas
sub
xchg
jae
fbld
stos
pop
pop
in
popa
call
mov
inc
dec
jmp
iret
test
mov
or
adc
subb
jg
xchg
cmpsl
cmp
mov
movsb
dec
aaa
hlt
jp
jae
insl
mov
push
insl
in
test
sbb
lock
mov
mov
dec
dec
shlb
and
stc
adcl
and
test
cmpsl
cs
inc
jbe
fmuls
daa
add
repz
jo
sbb
and
xor
fs
push
cmc
push
push
scas
out
aas
mov
loop
ffreep
or
jl
fs
xor
cmp
loopne
jmp
stos
stos
stc
es
leave
xor
mov
fnstcw
test
movsl
idivl
jno
test
mov
lods
xor
jo
ficomps
movsl
or
icebp
jno
jne
push
pusha
dec
call
sahf
icebp
xchg
cmp
sub
fisttpl
fstl
sub
insl
xor
mov
out
test
lods
lea
adc
fistps
xor
lcall
sbb
xlat
loop
sti
adc
mov
pop
mov
cltd
ret
mov
pop
jne
and
stos
leave
xlat
mov
repnz
mov
xchg
dec
shrl
sarl
inc
mov
push
das
mov
cli
adc
imul
insb
dec
aas
jg
push
pcmpgtd
dec
mov
fwait
or
or
push
ss
and
pop
stos
dec
jmp
pop
jge
and
into
xor
fdivr
out
outsl
mov
adc
mov
mov
mov
xchg
lods
insl
fstp
xchg
mov
adc
icebp
sub
dec
mov
sub
hlt
jmp
push
imulb
enter
int
repnz
inc
xchg
sub
enter
pushf
jp
and
loope
add
subb
lahf
dec
js
xchg
repnz
sbb
adc
int
pop
xchg
xchg
insb
data16
lea
pop
ds
call
leave
sub
fnstsw
push
xor
out
add
aas
insl
imul
dec
jae
sub
arpl
loopne
stos
xorb
or
jns
mov
dec
ljmp
testb
jle
icebp
cld
mov
out
es
ret
insl
sbb
xlat
xor
mov
add
xor
sbb
loope
add
jle
into
lcall
add
or
and
rcl
dec
test
jb
mov
jno
jmp
push
inc
rcrb
mov
jne
repnz
or
lods
and
in
stos
femms
xchg
pop
fs
jne
ljmp
mov
sbb
mov
or
aaa
push
nop
cmp
test
and
cld
sub
ret
pop
or
les
mov
cs
push
popf
push
mov
in
bound
jmp
mov
jne
mov
call
nop
jb
cld
adc
scas
mov
orb
jp
xor
pusha
sarb
dec
pop
sbb
sbb
mov
mov
out
sub
mov
mov
inc
jbe
fldcw
add
popf
movsb
pushw
sub
mov
mov
cmp
push
push
and
mov
push
pop
out
lods
inc
mov
mov
add
inc
cmpsb
push
xor
push
push
xor
in
loopne
loopne
out
out
nop
leave
sbb
mov
mov
and
xchg
insb
and
xchg
fwait
push
adc
or
lods
pushl
test
pop
mov
or
jecxz
inc
xchg
mov
dec
test
in
and
daa
mov
adc
test
lock
pushf
cmp
js
fbld
mov
and
out
enter
shl
lea
mov
gs
mov
adc
cltd
dec
xchg
mov
mov
iret
mov
out
sub
mov
nop
enter
scas
add
xchg
inc
inc
jbe
cmc
adc
dec
jne
inc
idivb
clc
mov
das
or
stc
adc
mov
fcmovnu
cmc
mov
fcoms
aas
fldt
dec
lcall
dec
dec
lea
movsl
xchg
inc
cmp
inc
push
mov
sbb
mov
paddq
lret
roll
lock
mov
fmull
mov
jmp
lock
pop
les
call
cmp
shl
add
sbb
xchg
subl
popa
movsl
push
lods
and
cld
incb
std
push
add
leave
cmpsb
in
call
push
adc
cmp
int3
lock
cmp
sahf
fcmovnb
out
and
lcall
mov
mov
dec
dec
js
mov
xchg
sbb
add
push
inc
sahf
cmpsb
mov
outsb
scas
cli
mov
xor
inc
push
pop
and
jle
mov
add
fscale
fildll
ja
jne
cmp
jmp
mov
rcrb
xlat
cs
cmp
mov
lret
push
pop
sbb
movsb
sub
pop
push
fildll
jo
mov
xor
popa
fiadds
adc
movsl
cli
in
pop
testl
leave
icebp
inc
lret
jbe
hlt
inc
mov
arpl
outsl
jl
jae
stos
pop
or
sub
sub
pop
test
add
sub
fstps
mov
jb
pop
stc
pop
sbb
fwait
xchg
xchg
inc
pop
cli
clc
push
adc
cmpsl
fwait
popw
adc
hlt
add
pop
pop
test
pop
cli
jae
jecxz
push
test
push
push
rclb
shlb
jp
or
fildl
test
dec
sbb
cmp
int
loop
int3
inc
bound
xor
jb
add
int3
into
jno
xchg
xchg
lea
pop
jbe
outsl
xchg
pop
pop
scas
mov
pop
in
fsubrp
gs
loopne
mov
or
shlb
xor
mov
push
bound
pop
xlat
jbe
test
je
je
xchg
call
pushf
lock
pop
cwtl
test
stos
xchg
dec
scas
test
pop
loope
lock
arpl
cmp
inc
stos
cs
test
loope
cmp
sbb
aam
dec
inc
mov
cs
xor
mov
add
popa
mov
cmp
mov
pop
push
sahf
mov
fstps
fs
js
fmull
pop
scas
fwait
jns
hlt
outsb
and
adc
lock
mov
pop
movsb
pop
cld
mov
push
xor
pushf
lret
push
bnd
test
inc
in
push
inc
int3
adc
sbb
cmp
je
inc
movsb
mov
xchg
lods
dec
adc
or
int
inc
in
fsubl
or
jno
mov
pop
cltd
fbstp
jnp
inc
fadds
dec
pop
or
push
lock
add
loopne
pop
ret
loope
pop
addr16
inc
mov
shll
pusha
lods
sti
mov
mov
push
gs
sub
in
lods
mov
adc
xor
xlat
and
gs
aas
jecxz
inc
imul
mov
xchg
popf
rcl
sub
mov
sub
cmp
movsb
imul
sahf
push
stc
dec
add
fiaddl
sub
mov
and
or
sbbl
test
add
or
rorb
arpl
mov
jp
jl
icebp
scas
les
push
out
mov
mov
fisttps
and
jo
test
repz
inc
dec
and
inc
data16
int3
mov
popf
adc
mov
inc
movsb
insb
les
add
xchg
jae
xchg
xchg
daa
rolb
adc
or
fbstp
push
mov
in
rolb
dec
sub
mov
mov
mov
cmp
dec
mov
inc
outsb
fwait
inc
icebp
and
and
pop
xchg
insb
sbb
dec
pop
push
jno
xchg
scas
xchg
mul
cmp
mov
mov
or
imul
in
push
in
and
in
scas
lret
push
aas
clc
scas
dec
popa
je
inc
xchg
dec
jb
dec
iret
dec
or
mov
imul
rolb
movsl
mov
cs
adc
mov
xchg
cmp
mov
in
jl
pop
out
arpl
fs
lahf
shll
int3
pop
or
cs
in
dec
pop
jb
leave
lahf
std
push
sbb
mov
lcall
and
test
inc
out
into
pop
mov
fs
pop
es
jg
jg
pop
nop
mov
fdivrs
shlb
cmpsb
jp
mov
inc
mov
pushf
xor
out
int
push
and
and
adc
adc
test
mov
lahf
into
push
push
fcompl
dec
or
push
push
test
lock
stos
out
stos
jno
addb
rcrb
das
inc
add
xlat
or
sbb
xor
fs
add
call
adc
push
stos
in
fisubs
cmp
cmp
aad
or
add
inc
inc
pop
loopne
fdivl
mov
adc
push
in
or
dec
cmp
inc
retw
in
xor
pop
inc
out
lret
gs
out
jnp
mov
fmuls
pop
push
dec
loop
dec
cmp
ret
sub
mov
test
outsl
mov
dec
xor
lret
jne
out
shlb
push
stos
sub
jo
out
sub
jl
push
loop
test
aaa
pop
lds
adc
xchg
push
test
xchg
pop
mov
cmp
mov
dec
sahf
mov
repnz
fwait
call
cmp
jne
or
jb
jl
jne
jno
push
sti
pop
mov
aas
mov
dec
mov
aaa
movsl
xchg
sbb
push
pop
les
lock
int3
test
sub
sbbl
add
les
mov
sbb
xchg
jno
adc
mov
mov
dec
inc
cmpb
push
lods
mov
cltd
out
xor
dec
divb
ret
inc
cmpsl
fucom
lcall
lcall
mov
std
mov
adc
ficompl
popf
cmpb
ss
ds
add
mov
inc
mov
int3
int
fwait
pop
push
lds
jle,pn
es
push
xchg
and
push
iret
xchg
cmp
ror
inc
cmpsl
mov
cwtl
cmp
mov
sub
jge
cmpb
jns
scas
outsb
pop
or
push
test
sub
ljmp
cmp
add
aam
push
aaa
lods
jecxz
scas
jno
f2xm1
popl
lock
push
jae
sub
aas
mov
out
cmp
shrb
cmp
fdiv
pushf
jecxz
clc
mov
xchg
or
sub
push
int3
stc
test
or
inc
cmp
call
stc
mov
mov
jbe
dec
pop
das
in
pop
jle
jmp
jmp
push
fmull
and
cld
icebp
pop
in
pop
ffree
loope
imul
clc
jne
pop
xchg
test
int3
xchg
dec
push
mov
int3
aam
xchg
imul
add
pop
repz
xlat
xchg
add
pop
mov
mul
mov
fnsave
and
push
xor
mov
shlb
fisttpl
push
dec
mov
xor
mov
sti
sub
outsl
icebp
lret
push
ds
inc
notl
jle
cmp
nop
jmp
and
movsb
daa
mov
mov
test
aad
repz
pop
jne
lods
and
push
jmp
inc
rorl
add
inc
outsl
in
clc
call
mov
clc
jl
mov
push
aas
or
adc
fmull
push
out
popf
dec
loop
xchg
adcb
rep
je
add
cmp
cli
dec
mov
xor
xchg
hlt
mov
lods
in
xchg
filds
jle
scas
ret
dec
jge
psllw
fildll
adc
movsb
add
sti
mov
mov
adc
cmp
clc
aad
xchg
xchg
dec
sub
adc
sbb
inc
push
lcall
mul
xchg
add
lods
jp
cmp
adc
rol
mov
sbb
jb
adc
xor
pop
dec
or
mov
cwtl
mov
clc
mov
ds
jp
cmpb
and
scas
sbb
leave
in
pop
sbb
xchg
inc
inc
je
cmp
pop
xchg
fadds
dec
mov
sbb
adc
xchg
add
pop
jbe
pop
xchg
mov
loopne
ret
mov
adc
fbstp
cli
jno
pusha
add
dec
add
bound
push
push
lcall
fwait
push
mov
mov
jb
add
mov
sub
insb
sub
rcr
pop
xor
stos
aas
mov
or
fisubrs
out
mov
hlt
xchg
lss
shll
push
sarb
andl
cwtl
popf
aas
and
xchg
pop
pop
sbb
mov
std
lret
movsl
mov
cmp
push
sub
movsl
inc
add
pop
push
mov
popf
inc
add
testl
movsb
add
loopne
mov
in
sub
test
fs
clc
mov
cmpsl
loopne
or
and
pop
clc
inc
cs
in
clc
pop
cmpsl
pop
arpl
cmp
outsl
jns
bound
cwtl
or
dec
dec
out
cmp
xor
xchg
mov
jae
lods
sti
xor
je
dec
mov
mov
mov
in
int3
arpl
push
jmp
push
mov
fistpll
pushf
sbb
mov
push
xchg
cltd
les
scas
sbb
inc
adc
fists
dec
jno
adc
in
cmp
scas
repnz
push
mov
enter
fsubrs
scas
data16
in
add
call
fs
outsb
outsb
rclb
push
or
mov
inc
out
adc
jmp
dec
fildll
pop
add
mov
xchg
cmp
add
in
sub
jb
shrl
hlt
out
ss
push
sbb
adc
mov
xchg
test
ficoml
xor
jp
fnstcw
xor
pop
push
rcl
mov
sbb
aam
push
aam
add
mov
jae
stc
scas
push
aaa
gs
testb
xor
push
xor
xchg
cmp
sti
mov
mov
lcall
mov
fwait
int3
xchg
fs
xchg
add
mov
sub
rol
lock
cmpsb
into
ljmp
push
and
std
xor
lret
pop
mov
sub
add
mov
xor
ficoml
dec
loope
js
jge
leave
inc
popa
outsl
jo
xchg
scas
xchg
mov
out
dec
pop
in
pusha
lods
add
out
pop
imul
flds
push
test
push
dec
jnp
lds
mov
test
pop
or
jmp
sub
rorl
dec
mov
data16
into
lret
jnp
mov
fadd
xor
popa
mov
dec
cld
dec
mov
mov
fdivrl
mov
and
xchg
push
cmp
call
es
cmp
inc
lret
jb
popa
aad
out
imul
call
mov
jno
push
push
add
mov
mov
loop
xor
push
cmp
mov
sbb
pop
push
bound
inc
xchg
mov
and
cli
jno
fists
mov
es
inc
add
fwait
pop
lahf
loope
testl
and
mov
sub
fiaddl
push
mov
dec
rclb
xor
mov
shll
lods
adc
inc
das
pushw
fcmovnbe
inc
adc
lds
ret
jg
adc
mov
mov
mov
or
arpl
dec
jp
fldt
push
xchg
sbb
ja
or
cwtl
mov
lret
adc
mov
xchg
push
mov
rcr
lahf
nopl
inc
movsl
mov
mov
xchg
jns
pop
mov
push
jle
lahf
lods
adc
mov
inc
hlt
stc
push
add
mov
add
adc
adc
mov
mov
arpl
cmp
mov
and
sub
int3
fldt
in
ds
pop
out
daa
jmp
movsl
rcr
rolb
mov
insl
sar
in
mov
mov
xor
mov
out
inc
xor
xchg
mov
sbb
cmp
sti
mov
or
cmpsl
or
push
mov
xchg
dec
in
cmp
or
and
mov
movsl
jecxz
addr16
fsubrs
imul
into
push
test
scas
dec
pop
ds
jmp
sahf
scas
ljmp
push
repnz
sbb
mov
fldt
xor
mov
inc
sbb
push
mov
lods
cmp
add
ss
and
push
mov
cmp
popf
dec
test
jg
sub
negb
int
daa
dec
dec
jno
mov
inc
push
sbb
sbb
mov
mov
shll
pop
dec
push
movsl
sti
push
adc
pop
inc
dec
fistpll
xchg
adc
pop
jo
or
adc
or
test
mov
test
add
pushf
sbb
adc
ds
xchg
imul
jmp
xchg
xchg
fwait
into
xor
mov
inc
enter
push
mov
adc
filds
bound
xor
jecxz
fwait
sub
es
mov
xchg
mov
push
sub
into
dec
jp
mov
je
gs
fildll
adc
imul
into
cmpsb
sub
cmp
dec
sbb
lret
mov
fsubs
add
cmc
ljmp
mov
pop
inc
pop
jge
jmp
jge
pop
in
pop
repz
cmp
pop
shll
jecxz
xchg
pushf
cmc
mov
sub
mov
push
fs
add
adc
xor
aas
nop
fs
outsl
cmp
xchg
or
mov
mov
and
add
jecxz
or
or
push
imul
add
xchg
int
dec
mov
jne
and
jle
imul
adc
xorb
daa
aaa
bound
dec
insl
adc
js
xor
gs
or
mov
loop
mov
shlb
push
imul
pop
lret
fstl
out
test
outsl
adc
push
aam
xchg
inc
enter
int
cmpsb
push
sbb
jge
adc
xchg
sbb
fsubrs
xor
xchg
inc
push
out
js
sub
inc
ror
mov
xor
mov
or
cmp
xchg
es
loopne
mov
jns
mov
mov
mov
sbb
jno
mov
fldt
mov
adc
sub
xor
out
push
imull
xchg
fsubs
cmpsb
stos
ltr
pop
jne
outsl
xor
jbe
pusha
xor
adc
cmpb
sbb
xchg
scas
mov
lods
cmp
out
test
or
cmpsb
imul
push
mov
les
and
lret
imul
cmp
mov
repz
sbb
jns
mov
inc
xor
jb
mov
cltd
dec
mov
cmp
lods
in
sahf
call
add
or
pushf
mov
xor
enter
adc
sub
jo
cmp
loop
fbstp
xchg
xchg
add
pop
jnp
sub
mov
jns
in
mov
cmpsb
je
pop
jge
xor
sahf
pmullw
hlt
cld
loope
loope
sub
mov
add
mov
adc
loop
out
pop
xchg
mov
cmp
sti
std
jl
mov
mov
int3
pop
dec
orb
mulb
push
mov
int
imul
pop
add
orw
dec
sbb
les
imul
push
cmc
int
out
pop
adc
sti
jle
icebp
jne
xchg
stc
arpl
out
fs
dec
sub
mov
scas
fs
dec
mov
or
xchg
jne
jns
or
cmp
insl
pushf
sbb
xor
fcoml
out
stc
aas
pop
jmp
ret
xchg
fidivs
sarl
pop
push
xchg
cli
and
mov
into
test
or
sbb
or
and
notl
adc
mov
subl
dec
leave
dec
or
mov
add
movsl
mov
stos
inc
out
fsubrs
add
cmc
pop
leave
outsb
scas
pop
dec
insb
cmp
adc
mov
dec
in
add
adc
adc
test
and
daa
xchg
mov
sbb
loopne
cmp
pop
pop
cmp
mov
lcall
dec
xchg
xchg
dec
loope
inc
mov
testl
inc
and
mov
cmpsl
fldt
dec
fsubl
jb
lods
xor
test
out
xorb
mov
xchg
les
clc
xorl
push
ds
pop
lods
mov
xor
fcoml
sbb
sbbb
sub
jbe
je
lahf
test
or
dec
and
sbb
xchg
jle
sahf
lods
scas
lahf
je
ret
inc
outsb
xchg
xchg
pop
imul
cwtl
push
mov
xchg
aaa
fwait
in
repz
inc
inc
lea
ja
cmp
jecxz
add
test
push
push
outsl
jp
push
jbe
and
sbb
mov
mov
inc
or
jns
mov
mov
sarb
and
jmp
test
in
cmpsb
je
add
or
or
and
cmp
out
push
push
mov
test
in
scas
mov
xor
mov
push
mov
xchg
mov
roll
xchg
scas
jecxz
mov
push
inc
les
and
out
mov
mov
or
lcall
repnz
add
loopne
push
dec
cmp
ja
daa
addr16
vaddsd
pop
mov
mov
cmp
ret
add
cmp
shrl
jge
lock
out
lahf
in
das
cli
mov
sahf
mov
pop
jbe
ljmp
push
mov
mov
aas
aam
outsl
scas
adc
rcrb
mov
test
dec
hlt
xchg
inc
mov
inc
mov
xchg
mov
lret
cmp
fldcw
in
scas
mov
xor
popa
xchg
lods
inc
lret
xor
pop
sub
xor
mov
cmp
inc
loope
xor
mov
cmp
aad
je
xor
sub
xchg
daa
jno
lahf
out
aam
sbb
push
clc
les
mov
sub
pop
adc
add
cmp
ret
in
xlat
ds
inc
js
or
mov
cmpsb
inc
or
push
test
xor
cmc
sbb
adc
xchg
or
push
fisttpl
push
pop
mov
xchg
sti
cmpsl
es
gs
xchg
jne
adc
mov
aaa
aad
jne
dec
ret
fstl
dec
cli
adc
int3
xchg
mov
push
sar
push
sbb
push
push
pop
insl
mov
clc
push
pushf
cwtl
data16
cmc
push
pop
mov
mov
dec
or
sti
stc
inc
jmp
iret
xlat
aaa
scas
cmpl
stos
adc
call
xor
cmc
push
jae
cmp
or
lods
icebp
lret
fnsave
fsts
in
rolb
mov
xor
lods
test
jl
pusha
add
movsl
sbb
lahf
ret
pop
cmp
pop
xchg
popf
xor
lcall
cmp
rclb
push
clc
dec
test
xlat
mov
mov
mov
cmp
fnstenv
mov
jbe
mov
dec
mov
scas
in
mov
sub
insl
mov
movb
test
insb
cmc
out
xchg
sub
add
sub
push
inc
push
push
pop
mov
pop
cs
rcrb
scas
inc
test
das
idivb
mov
push
xor
shrb
add
out
pop
dec
cmp
sahf
jnp
mov
pop
jecxz
loope
add
fmul
clc
inc
pop
in
in
psadbw
into
dec
stos
sarb
ja
out
sbb
ret
adc
stos
mov
push
mov
jmp
mov
pop
xchg
mov
pop
into
stos
fdiv
xchg
cwtl
jge
jbe
sub
test
out
es
push
adc
pop
mov
inc
mov
daa
mov
xor
adc
outsl
sbb
mov
cmpsl
sub
fwait
inc
jnp
cld
xchg
adc
jno
mov
adc
ss
adcl
pop
in
adc
mov
add
fwait
or
jmp
cmpsl
test
jne
jne
mov
and
xchg
push
call
test
sub
jge
add
loop
aam
bound
cmpsb
es
adc
rorl
inc
adc
sub
ja
and
loopne
mov
lret
ret
jp
push
mov
sbb
pushf
iret
stos
insl
xor
js
ffreep
jno
test
movsl
mov
inc
add
nop
or
add
ret
mov
sub
jne
pop
outsl
mov
mov
fisttpll
sub
xor
addr16
and
push
mov
daa
out
movsl
test
mov
push
cmpsl
pop
mov
fwait
test
shll
mov
sub
repz
cltd
push
aad
movsl
in
aas
pop
ret
insl
xor
mov
cld
xor
orl
out
insl
lret
fs
push
je
inc
stos
js
jb
mov
mov
cmp
push
into
jg
mov
sbb
test
jno
lret
dec
repnz
inc
outsb
jmp
lds
gs
mov
xor
