push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
jmp
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
loope
inc
add
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
ja
loopne
cwtl
sbb
and
sbb
and
sbb
and
push
loopne
sub
loopne
jae
loopne
sbbb
and
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
push
push
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
jne
inc
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
push
add
add
call
mov
push
or
add
adc
shll
insb
and
mov
fldl
push
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
lea
call
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
inc
aad
add
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
xchg
xlat
inc
add
pop
add
jb
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
jp
loopne
jp
loopne
cmpsb
xor
and
loopne
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pushf
xor
loopne
mov
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
pop
roll
je
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
xlat
inc
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
add
inc
add
pop
add
test
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
addr16
inc
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
clc
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
push
call
mov
mov
add
add
push
jmp
fldl
pop
add
jbe
push
add
add
lock
ret
xchg
loope
add
sti
add
add
ja
add
mov
cli
add
add
jb
add
add
fisubl
mov
add
push
push
lea
push
call
xchg
imul
add
out
mov
add
add
push
add
mov
aam
add
add
fsubr
add
loop
addr16
mov
testb
movsl
subl
add
add
add
add
push
xlat
add
sub
pop
popl
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
lahf
add
add
imul
add
js
pop
fidivs
test
jne
mov
add
add
lcall
mov
add
fmul
mov
add
xchg
add
out
icebp
add
sub
pop
push
push
push
push
lea
push
call
cmpsl
add
add
mov
add
jmp
nop
pop
jl
mov
sbbb
add
mov
xchg
pop
add
jne
incb
std
add
push
std
xchg
add
mov
jno
imul
lock
lcall
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
fdivp
rcrl
test
add
add
adc
add
add
mov
add
pop
push
push
lea
push
push
push
push
lea
push
call
ja
cmpsl
js
shll
jle
mov
add
jno
mov
add
jne
fiaddl
cwtl
les
add
lret
in
call
push
call
push
push
push
push
call
addl
jne
xchg
add
add
add
stos
call
add
add
data16
add
in
int
push
sbbb
orl
mov
in
lock
lcall
inc
add
add
jne
cmp
push
push
lea
push
call
add
xchg
add
fisttpl
add
add
int
addl
add
add
movsl
cmc
fldcw
aad
xchg
rolb
stc
add
add
movsb
add
add
sbb
push
push
push
push
lea
push
push
lea
push
call
add
add
add
add
xlat
add
add
jnp
mov
call
mov
mov
xchg
add
add
popa
mov
mov
addb
xchg
fmulp
add
mov
mov
aad
repnz
pushf
add
lea
add
lcall
and
jmp
push
push
call
xchg
lds
add
add
add
ljmp
testb
nop
pusha
movsl
add
ljmp
popa
mov
add
mov
in
rcrl
addl
test
push
add
insb
add
add
in
pop
add
jp
jo
add
jo
mov
jae
sub
pop
ret
mov
push
push
push
lea
push
push
push
call
int
add
add
popa
scas
lahf
add
push
add
add
jle
addr16
add
xchg
andb
scas
mov
ret
add
cld
lcall
add
js
addl
add
pop
test
add
lock
xchg
ja
jecxz
in
call
mov
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jge
add
add
out
add
mov
add
jnp
add
add
pop
jb
add
cli
int
ret
push
add
add
add
add
pusha
hlt
add
push
cld
mov
int3
add
add
pop
mov
jns
fiaddl
jae
add
push
add
sub
pop
add
push
push
lea
push
push
push
lea
push
call
pop
cmpsb
fdivrs
add
push
repnz
ljmp
add
fs
push
push
add
rorb
shl
out
add
gs
add
in
fisubrs
add
add
xchg
addb
in
call
add
add
push
push
call
shl
test
add
mov
mov
xchg
add
add
jo
lea
cltd
add
xchg
shl
add
roll
add
add
add
mov
clc
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
ffree
cld
aam
pop
imul
fsubrs
add
cmc
add
add
lods
add
mov
pop
add
add
nop
add
rcl
rorl
add
loopne
xor
push
push
push
push
push
call
add
movl
shl
pop
push
ror
add
add
arpl
add
mov
add
pop
jae
pop
pop
push
add
jne
loop
add
hlt
add
les
in
lcall
les
add
push
push
rol
push
push
pop
add
rol
sub
sub
dec
not
pop
rol
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
out
add
mov
add
add
ja
lea
add
add
push
movsl
add
popa
jae
mov
cwtl
add
std
jmp
scas
push
xchg
lds
add
pop
xchg
loop
add
mov
mov
mov
sti
addl
add
mov
in
fdivr
lcall
jne
push
push
push
push
call
xlat
std
add
add
hlt
add
fwait
add
xlat
add
sahf
js
xchg
add
mov
mov
in
icebp
test
add
add
add
add
add
insb
mov
add
add
js
add
call
push
lea
push
push
call
push
mov
add
subl
clc
iret
leave
scas
add
mov
add
add
flds
mov
shr
mov
jno
out
sub
pop
mov
push
push
push
lea
push
push
call
out
add
add
add
add
add
repnz
sarb
test
mov
out
add
pop
lds
push
add
in
add
jno
cmpsb
mov
test
xlat
xchg
cwtl
jge
test
add
add
lods
pushf
xchg
lahf
mov
jne
mov
inc
call
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
outsl
add
add
add
push
popf
add
out
pop
jo
stc
add
stos
mov
leave
pop
mov
lahf
add
roll
mov
mov
add
jne
mov
fldl
push
mov
aad
mov
mov
addb
add
add
add
lcall
inc
call
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
push
add
pop
jne
mov
cli
arpl
lods
jbe
add
pop
popa
lods
add
add
fadd
add
xchg
andl
divl
jecxz
add
add
lret
add
jne
pushl
push
lea
push
call
popf
sahf
int3
pop
mov
add
sarb
lds
push
xchg
shrb
add
arpl
add
fwait
jmp
mov
xchg
out
push
add
jo
push
les
mov
jae
add
rcll
push
add
mov
add
add
aam
pop
add
mov
add
lcall
jnp
add
pushl
push
push
lea
push
push
call
push
jge
pop
cltd
mov
in
mov
xchg
leave
mov
je
add
add
lret
mov
add
push
gs
add
test
cmpsl
jo
add
roll
add
mov
lock
mov
lds
push
popf
add
push
je
add
sub
pop
pushl
call
push
push
sub
push
and
add
rol
sub
sub
rol
pop
sub
sub
not
not
pop
push
push
push
call
pop
add
out
cmpsb
outsl
in
jae
cmp
push
pop
add
popf
mov
add
mov
sahf
add
mov
add
popa
add
cmpsb
pop
add
mov
add
test
add
loope
add
lret
add
pop
add
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
add
ficompl
add
mov
cld
movsl
pop
push
push
add
add
pop
out
add
filds
cmc
rolb
cld
push
add
fwait
push
sti
jo
add
add
subl
mov
jle
push
push
les
int3
add
leave
cmpsl
add
mov
mov
lods
pop
add
xchg
add
jmp
mov
in
enter
pop
call
push
push
call
hlt
add
mov
add
add
movb
out
fsubrl
scas
add
int3
mov
add
add
into
hlt
add
in
clc
pop
push
push
push
inc
ror
push
or
not
add
xor
not
sub
xor
shl
ror
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
jecxz
add
add
fldl
int3
jo
xchg
push
add
and
loop
pop
jl
add
add
fadd
add
ficoms
pop
faddl
add
mov
mov
add
add
xchg
add
jnp
jne
add
add
lock
pop
fchs
add
push
push
push
call
scas
je
push
fwait
add
in
fnstenv
outsl
ljmp
cmpsl
add
cmc
add
imul
add
ret
add
jge
add
mov
mov
pop
int3
aam
test
clc
pop
push
call
push
push
push
push
lea
push
push
push
call
enter
jp
add
add
call
jo
mov
add
pop
add
xchg
add
cmpsb
add
add
outsl
in
add
add
scas
add
mov
in
mov
push
push
push
call
add
shlb
fsts
scas
add
add
add
in
add
mov
add
xchg
add
xchg
mov
clc
mov
lcall
add
add
add
into
lea
add
in
hlt
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
pusha
lahf
imul
jmp
xchg
mov
add
mov
lods
add
add
sahf
out
add
add
fs
in
xchg
popa
add
add
fdivr
lcall
pop
hlt
push
push
lea
push
push
push
push
push
push
lea
push
call
add
fildl
movsb
pop
add
add
movb
add
add
leave
mov
add
imul
xchg
mov
lret
clc
add
add
add
out
add
add
mov
pop
add
add
push
push
push
push
push
push
push
push
call
cmpsl
add
cld
add
fdivrl
add
ret
jo
jne
add
out
push
lret
fwait
add
jecxz
mov
popf
add
xchg
add
jl
std
addr16
add
lcall
ret
rorb
push
push
push
push
push
push
lea
push
push
call
add
data16
mov
lds
lock
in
pushf
in
add
addb
mov
ffreep
add
xchg
add
add
lods
js
add
in
loopne
mov
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
jb
inc
ljmp
std
add
add
add
xchg
repnz
mov
xchg
add
rolb
push
push
add
scas
xchg
mov
lcall
xor
push
push
push
push
push
push
call
in
filds
mov
add
add
add
add
add
imul
xchg
push
hlt
add
call
mov
pop
cmc
addl
mov
add
mov
add
add
add
xchg
jle
lahf
pusha
add
enter
add
fiaddl
add
add
sub
pop
add
push
push
push
lea
push
push
push
call
lds
scas
cmpl
jo
mov
add
push
cmpsl
add
add
sarl
popf
ficoms
js
mov
xlat
xchg
shl
push
add
add
mov
push
add
add
xchg
xchg
fwait
lret
in
call
push
lea
push
push
push
push
call
scas
mov
add
add
add
jp
add
add
mov
mov
jmp
mov
fisubs
out
push
out
jecxz
arpl
jb
mov
scas
into
add
add
mov
mov
add
jnp
mov
std
mov
jae
into
fidivs
in
in
pop
push
push
push
push
push
push
push
push
lea
push
call
out
add
add
cltd
lret
add
add
js
jo
jmp
mov
ljmp
je
sbb
add
add
add
in
add
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
call
add
movsb
xchg
mov
mov
call
add
test
in
out
rolb
add
push
add
fdiv
add
mov
fs
hlt
std
push
add
jne
movl
add
add
add
popa
mov
add
mov
mov
clc
mov
add
mov
lcall
lock
push
lea
push
push
push
call
movl
mov
mov
lods
add
xchg
cmpsl
add
add
test
hlt
pop
xorl
lcall
push
push
push
call
fadd
add
add
cltd
add
jl
stc
add
arpl
jge
mov
lret
add
pusha
iret
pop
add
add
push
xchg
arpl
shlb
fisubrl
lret
add
pop
add
lret
cld
add
in
add
iret
shll
mov
add
add
out
add
add
hlt
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
call
sti
xchg
jle
scas
add
add
les
add
jmp
pop
std
mov
or
addb
cltd
scas
insb
add
mov
lcall
or
push
lea
push
push
push
call
add
jp
test
cmp
jmp
add
popa
add
add
lea
push
notl
add
lcall
push
jbe
jo
in
lock
lcall
les
push
push
call
add
shll
stos
mov
add
pusha
add
mov
testl
cmpsl
add
out
add
icebp
add
add
mov
addb
enter
in
mov
popa
add
add
push
add
jle
insb
add
add
cmpsl
add
call
add
push
out
add
lcall
push
push
call
clc
xchg
add
xchg
add
add
add
add
data16
lret
add
imul
add
add
lods
mov
hlt
lahf
into
stos
jb
sbbb
test
mov
pop
add
pop
add
add
inc
or
adc
push
push
push
push
call
jp
je
imul
mov
iret
fs
sahf
add
arpl
add
add
mov
out
sti
xorl
mov
mov
cmpsb
push
add
andb
stos
outsl
sub
pop
sub
push
lea
push
lea
push
push
lea
push
call
mov
mov
sar
add
push
jle
add
fndisi(8087
xlat
push
loopne
out
mov
shlb
add
imul
fiaddl
add
mov
jecxz
outsl
mov
add
push
leave
rorb
add
add
pop
pop
push
push
lea
push
call
addr16
rolb
mov
push
popa
add
mov
jp
add
scas
add
add
add
mov
add
shll
push
lods
sub
pop
rep
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
in
mov
lret
add
push
popa
imul
add
fidivl
jnp
push
add
scas
enter
cmc
movsl
sub
pop
pop
push
push
push
lea
push
call
icebp
leave
stos
add
add
loop
jmp
add
out
stc
add
xchg
insb
add
mov
add
fcomi
scas
gs
test
add
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
repnz
loopne
faddl
add
add
add
add
insb
enter
xchg
fstpt
add
pop
mov
imul
pop
add
push
not
xor
pop
add
push
not
shr
pop
add
push
shr
sub
shl
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
push
call
sahf
mov
out
enter
cmc
out
xchg
lret
add
add
add
fistl
test
add
mov
fdivrs
repnz
add
orb
pop
xlat
add
lods
out
add
add
in
nop
fs
jns
add
add
sti
add
add
push
push
push
lea
push
lea
push
push
push
push
call
movsl
jne
add
add
pop
xchg
scas
neg
cwtl
add
add
add
add
mov
popa
add
lahf
int
cmpsb
leave
add
push
add
lahf
nop
xchg
add
xlat
cmpsl
add
xor
popa
jge
insb
mov
imul
out
in
push
add
scas
hlt
mov
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
mov
rolb
fwait
addr16
cltd
add
fs
insb
movl
stc
add
fstps
add
add
mov
add
mov
sub
pop
mov
push
push
push
call
mov
add
imul
mov
jmp
test
imul
clc
xlat
mov
add
add
add
xchg
sub
pop
xor
push
push
push
push
push
push
lea
push
push
call
add
lea
out
add
incb
scas
add
sahf
add
sti
add
lods
add
stc
cmpsl
add
add
cmpsl
push
sti
xor
movb
in
or
add
add
subl
add
idivb
cwtl
test
mov
sub
pop
add
push
push
push
push
lea
push
lea
push
lea
push
push
call
lock
les
add
hlt
stc
pop
add
into
ret
fiaddl
out
pop
js
add
clc
add
add
mov
push
testb
add
pop
mov
lcall
lcall
sahf
add
stos
pop
sub
pop
mov
xor
push
push
push
lea
push
push
lea
push
push
push
call
test
xchg
fildl
out
leave
add
add
mov
add
popa
test
add
pop
data16
lret
add
fldt
xchg
data16
add
in
add
rcr
add
mov
rolb
ljmp
sub
pop
add
push
push
lea
push
call
xchg
pop
add
ljmp
fiaddl
mov
pusha
cmc
fs
mov
add
testl
add
outsl
addr16
pusha
cmpl
jo
roll
icebp
add
add
add
stos
mov
jmp
in
hlt
lcall
rorl
stos
push
rol
rol
push
and
add
sub
rol
ror
sub
pop
add
shr
pop
push
xor
lea
shr
pop
pushl
push
lea
push
call
push
aam
add
add
clc
add
lods
fisubrs
add
loopne
xchg
add
mov
jge
mov
add
jp
xchg
add
test
add
jae
movsb
xchg
iret
lods
add
rolb
mov
add
lcall
in
pop
add
push
sub
rol
inc
pop
push
push
push
inc
dec
dec
add
push
or
inc
add
add
sub
sub
lea
pop
pop
push
shr
dec
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
scas
add
add
jne
xchg
aad
pop
mov
add
imul
mov
bound
add
flds
mov
not
add
jecxz
fiadds
lcall
add
rclb
dec
push
lea
push
push
lea
push
push
push
push
call
push
pop
ljmp
add
push
add
add
xchg
add
cmpl
mov
add
les
add
jbe
add
add
cmpsl
andb
add
add
test
stos
testl
push
sub
ror
pop
push
push
push
push
push
push
call
jl
stc
jo
xchg
add
add
add
add
lret
call
bound
add
add
lds
sarl
add
test
ret
add
in
in
lcall
push
push
push
push
push
lea
push
push
push
push
push
call
lcall
jnp
call
lret
add
add
incb
add
add
add
mov
add
jns
mov
icebp
xchg
jae
jno
xchg
add
mov
mov
faddl
ja
jne
add
add
push
shl
add
add
add
sub
pop
mov
push
shl
shl
pop
add
push
push
call
add
add
fldt
add
insb
jo
add
push
jmp
mov
mov
addr16
lds
lret
add
add
add
icebp
mov
fadds
push
add
test
scas
mov
outsl
lock
aad
in
clc
pop
add
push
xor
shl
pop
add
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jns
stc
xchg
rcl
jle
add
pop
add
add
add
xchg
int
add
popf
imul
in
in
xor
push
lea
push
push
push
call
addr16
iret
add
mov
test
out
int
ret
add
mov
stos
lretw
add
enter
add
add
lcall
les
dec
add
ror
pop
add
push
shr
add
sub
pop
push
mov
push
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
roll
add
mov
lods
addb
aam
pop
mov
lret
out
pushf
add
imul
rolb
mov
add
fiadds
fiaddl
add
jns
add
icebp
call
add
addl
jb
cld
jge
scas
test
add
sub
pop
xor
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
in
add
jnp
add
lods
popf
push
filds
hlt
lret
jge
add
jno
movsl
cld
cli
push
push
add
add
addb
pushf
add
push
push
ret
lods
sub
pop
add
push
lea
xor
pop
add
push
xor
inc
pop
pop
push
add
not
pop
mov
push
push
push
push
push
push
push
call
add
add
add
hlt
add
pop
mov
stos
add
add
add
mov
add
movl
add
iret
add
push
jae
add
clc
jb
fwait
add
add
lock
pop
xchg
add
fwait
mov
sahf
movsl
movsb
shlb
not
jbe
mov
mov
lahf
sub
pop
xor
push
lea
push
push
push
call
add
sahf
popa
jo
outsl
fdivrl
fcompl
mov
addl
mov
sahf
add
add
add
add
add
add
cli
jae
add
roll
aad
enter
addb
jnp
stos
test
fs
pop
add
push
dec
xor
pop
rep
push
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
pop
mov
jo
stos
lahf
add
jmp
add
add
rolb
insb
mov
add
sbbl
fiadds
jae
add
push
pop
add
jnp
add
data16
xchg
jl
nop
add
addb
test
jmp
sub
pop
or
je
push
xor
pop
mov
xor
push
dec
pop
mov
xor
push
push
push
push
call
jp
rcl
push
add
test
mov
jne
add
mov
pop
mov
add
add
mov
lahf
jecxz
add
add
cltd
add
icebp
addl
push
not
sub
add
inc
pop
add
push
shl
pop
push
push
lea
dec
pop
mov
xor
push
dec
xor
xor
pop
add
push
push
push
push
push
push
call
add
call
add
add
xchg
add
fcomps
std
jle
add
fstps
stos
mov
add
hlt
sti
testb
imul
filds
aam
lret
in
call
pop
rep
push
push
push
push
lea
push
push
push
push
push
call
add
imul
add
add
jecxz
add
lock
jb
add
lds
add
fwait
add
in
add
scas
add
add
add
lcall
dec
sub
jno
adc
je
mov
add
clc
add
add
lea
mov
mov
jno
shll
add
test
add
out
mov
mov
add
fldz
int
add
fstps
jmp
js
ret
sub
pop
xor
push
push
call
cmpsb
add
shrb
aad
ja
andb
pushf
shlb
mov
idiv
add
mov
sahf
add
aad
jo
flds
sub
pop
add
push
shl
not
inc
pop
or
je
mov
push
add
pop
add
push
shl
add
not
pop
add
push
add
pop
rep
push
push
lea
push
push
push
call
add
arpl
test
test
andl
add
lret
push
jo
imul
xchg
push
ficoms
jmp
lock
add
fucomp
fiadds
pop
add
fdiv
add
add
hlt
repnz
in
in
lcall
push
push
inc
push
and
add
add
inc
sub
inc
pop
dec
xor
add
pop
push
inc
inc
lea
add
pop
pop
mov
push
push
call
add
leave
addl
push
add
add
jmp
outsl
mov
jno
add
lcall
cmpsl
add
add
add
in
cmpsl
add
jae
lods
mov
cwtl
jae
leave
add
add
ljmp
in
clc
lcall
insl
hlt
push
push
lea
push
push
call
add
add
nop
nop
add
jle
add
add
jno
add
jge
mov
add
popf
popf
out
add
add
add
add
lcall
inc
and
push
not
xor
pop
jmp
push
push
push
push
call
jge
imulb
add
add
add
shll
adcb
add
push
iret
jp
mov
add
loope
add
filds
push
add
add
aam
xlat
add
add
test
roll
add
add
jne
pop
add
xchg
cli
lds
rolb
add
jb
push
add
push
push
xor
sub
add
pop
mov
add
push
push
push
push
push
lea
push
push
push
call
jb
add
rolb
pop
mov
jmp
movsl
add
jmp
add
add
call
fsubrs
filds
add
add
add
in
loopne
push
push
push
xor
pop
push
push
not
xor
add
pop
push
push
dec
xor
pop
mov
push
push
call
add
mov
add
push
std
pushf
mov
add
add
push
jae
cmpsb
add
popa
jle
xchg
xchg
lret
mov
movsl
rcr
add
imul
mov
add
add
push
lea
push
push
push
lea
push
push
call
fldenv
add
iret
imul
add
mov
jecxz
jp
mov
mov
mov
add
pop
fs
icebp
xchg
mov
add
add
roll
add
push
mov
add
add
hlt
je
stos
jle
int
notl
add
clc
mov
addr16
pushf
push
mov
call
pop
push
shr
pop
pop
push
sub
shl
pop
pop
leave
push
dec
dec
pop
ret
push
lea
push
call
add
in
add
pusha
mov
fsubs
nop
add
add
mov
push
aad
jp
mov
mov
mov
add
add
addl
lcall
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
ljmp
push
add
mov
add
jnp
xchg
imul
lret
add
lea
mov
in
add
pop
add
add
add
mov
add
lock
add
test
int
lock
roll
lcall
in
push
xor
inc
inc
pop
add
push
lea
push
lea
push
call
out
cltd
orb
loop
add
in
roll
xchg
pusha
jmp
int3
add
add
add
add
add
addr16
in
int
rcll
fadds
cwtl
popl
mov
mov
add
add
add
mov
fwait
add
pop
add
je
mov
add
add
push
push
not
pop
push
push
lea
sub
add
pop
push
push
push
push
push
push
lea
push
call
idiv
push
add
add
jp
add
clc
fwait
add
add
jecxz
les
ljmp
push
xchg
add
lea
leave
pushf
push
add
add
add
add
add
add
outsl
sarw
cmpsl
mov
xlat
xchg
add
add
pop
movl
addl
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
lods
add
popf
pop
jb
mov
add
push
add
pop
push
add
add
jl
jae
jo
xchg
add
add
out
jp
add
call
push
xchg
je
mov
add
add
mov
add
lahf
add
add
lahf
add
in
loopne
lcall
rorb
imul
add
push
inc
push
push
lea
push
push
push
push
push
call
jl
fstps
jp
add
mov
pusha
add
xchg
bound
add
add
pushf
mov
add
divl
add
cmc
add
in
loopne
lcall
inc
or
ret
fstpt
rcrb
push
ror
lea
pop
pop
pop
push
xor
shr
sub
pop
pop
push
push
push
call
in
add
add
test
mov
out
add
jo
mov
data16
push
push
lret
push
add
add
lods
mov
add
lret
add
add
push
add
jecxz
add
jnp
add
stos
fiadds
jp
xchg
mulb
pop
add
mov
pushf
add
push
add
pop
ret
push
lea
push
push
push
push
push
push
push
call
add
add
rcrb
addl
out
roll
add
jb
jno
add
lock
add
nop
add
in
mov
leave
roll
add
add
movsb
add
add
out
add
add
out
add
add
int
imul
pushf
hlt
add
outsl
roll
ror
add
shl
pop
mov
push
push
lea
push
lea
push
push
call
push
add
les
xchg
add
xchg
add
add
pop
mov
add
mov
pop
add
add
add
jb
add
add
add
out
xchg
sahf
fwait
hlt
mov
mov
lcall
cld
push
lea
push
push
push
push
push
push
push
call
add
add
out
add
add
add
mov
push
xchg
shl
jl
std
add
loope
in
loopne
lcall
push
rol
pop
push
push
push
push
push
call
loop
fadds
add
lahf
add
xchg
mov
std
add
add
call
in
js
add
ret
jge
fs
add
add
mov
out
je
add
mov
in
shr
lcall
lea
sub
pop
push
testl
push
inc
pop
addl
push
xor
xor
pop
push
push
xor
sub
pop
call
mov
push
sub
pop
pushl
push
dec
lea
inc
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
int3
add
in
add
add
mov
add
add
pop
add
jmp
add
bound
lcall
pop
push
push
add
pop
call
push
ror
pop
cmpl
jne
push
push
push
push
call
addl
sarl
mov
add
add
pop
in
mov
add
add
fldl
popl
lcall
jns
loope
mov
add
jecxz
mov
xchg
sti
fadds
rcll
test
sti
xchg
mov
aam
add
sub
pop
pop
push
shl
add
pop
pop
push
push
push
push
push
call
ljmp
les
mov
aad
add
jbe
mov
add
xlat
ja
lret
shrb
rolb
mov
add
movsb
cli
add
add
add
add
fidivs
add
pop
ret
add
pop
push
rol
pop
leave
ret
push
push
push
push
push
push
call
add
jbe
mov
mov
shr
movsb
repnz
sti
imul
add
pop
mov
cmpl
xchg
add
add
add
add
fs
jae
fiaddl
mov
push
push
push
push
push
push
call
les
filds
out
add
out
push
mov
add
add
mov
add
add
add
add
fistpl
pusha
push
shll
xorb
ret
add
push
add
bound
add
xchg
add
pushf
add
pop
sahf
mov
in
call
add
push
push
call
push
loopne
movl
cwtl
add
cli
pushf
add
fsubs
mov
clc
add
add
add
push
mov
add
push
mov
add
aad
add
add
ja
cli
std
add
lahf
lret
in
out
scas
cmpsb
sahf
add
add
test
push
push
push
push
push
push
push
push
call
add
popf
add
mov
test
xchg
add
add
xchg
fadds
fidivrs
mov
outsl
mov
add
test
sub
pop
push
push
push
push
push
lea
push
push
call
jnp
push
fsubrp
cmc
add
mov
xchg
pusha
loop
add
add
xchg
push
push
rclb
gs
into
lock
stos
stc
add
ret
pop
nop
add
lods
add
xlat
iret
jne
sub
pop
push
push
xor
dec
pop
movl
push
push
pop
call
push
push
shr
sub
xor
pop
call
push
sub
xor
pop
subl
push
add
pop
cmpl
jne
pop
push
lea
push
call
out
add
add
add
push
add
roll
add
add
push
mov
add
in
push
mov
add
mov
add
add
mov
lea
mov
mov
add
clc
lcall
push
push
push
push
push
push
lea
push
lea
push
push
push
call
test
fs
icebp
xchg
movsb
add
lods
clc
jecxz
add
jl
add
add
add
add
enter
test
add
arpl
add
pusha
aam
cltd
add
jle
add
in
fcomps
push
add
pop
pop
push
not
pop
leave
push
lea
push
push
push
push
push
call
not
fldl
or
add
scas
add
insb
clc
add
bound
ret
pop
orb
add
mov
mov
add
add
push
add
add
jns
add
add
shr
xchg
test
add
add
in
call
sub
sub
pop
mov
add
push
add
shl
pop
push
push
push
add
pop
push
push
push
dec
rol
dec
pop
mov
lea
push
lea
push
push
call
popa
add
jp
add
mov
add
les
add
subb
add
cmpsb
mov
add
add
scas
loope
xchg
add
mov
mov
out
add
push
sub
pop
sub
push
push
push
push
push
push
call
outsl
lds
test
add
mov
add
add
mov
push
add
stos
jmp
stos
mov
jmp
ljmp
mov
repnz
mov
add
add
cmpsl
scas
add
push
lcall
add
mov
cli
mov
xchg
sub
pop
mov
push
inc
pop
shr
add
push
push
call
add
add
outsl
add
push
outsl
cmpsl
add
popf
fs
pusha
add
add
add
leave
movsb
jnp
add
add
lods
movb
cmpsb
mov
mov
hlt
add
js
add
adcb
ja
add
sub
pop
mov
mov
push
push
call
add
mov
add
add
lea
icebp
in
cmpsb
add
cld
jo
fwait
xchg
stos
ficoml
push
testl
mov
clc
shll
add
pushf
xchg
cmpsb
add
push
add
jp
aam
xchg
add
in
add
cld
add
add
add
lahf
add
lcall
inc
or
rol
dec
sub
inc
pop
add
mov
push
push
lea
push
push
push
lea
push
call
add
rolb
add
loop
add
add
add
add
aam
orb
add
xchg
add
add
add
fisubrl
imul
add
js
add
int3
fistps
mov
add
arpl
scas
ret
movsb
mov
js
add
lcall
nop
nop
nop
nop
push
lea
push
push
push
call
mov
mov
in
bound
add
mov
add
lods
out
loop
add
lahf
mov
roll
shlb
addr16
int
sahf
add
loopne
add
popa
roll
outsl
add
mov
mov
xchg
faddl
add
out
add
jecxz
insb
lds
sub
pop
cmp
jne
cmp
jne
push
push
push
push
push
call
add
mov
jl
add
add
stc
add
jmp
lcall
stc
inc
add
add
add
add
add
add
add
add
mov
push
add
mov
loop
int3
into
add
fdivrp
test
rolb
add
mulb
add
pop
mov
movl
push
push
push
call
lret
add
pop
rorb
rcr
push
mov
add
lds
sub
pop
jmp
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
je
pop
fs
ljmp
mov
mov
mov
ret
cltd
add
add
stos
add
add
add
xchg
int3
add
add
popf
lods
add
in
in
lcall
inc
cld
push
shl
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
jmp
add
mov
test
enter
add
mov
test
add
movsb
data16
jmp
mov
rclb
sub
pop
sub
jne
push
push
lea
push
push
push
push
call
add
add
add
insb
add
out
int3
loop
fadds
add
call
jl
test
add
add
add
test
mov
sbb
lods
xchg
add
jne
testl
add
jmp
iret
jne
mov
jne
push
pop
sub
pop
mov
push
push
push
push
push
push
call
enter
mov
push
add
mov
add
add
xchg
cwtl
mov
add
sahf
rolb
add
add
add
add
add
xchg
add
lret
push
add
divb
call
add
add
cld
cld
out
lea
push
lea
push
push
push
push
push
push
call
jmp
iret
add
mov
add
aam
movsl
add
out
mov
add
fcom
fscale
add
add
leave
notb
jp
into
add
push
mov
add
push
pop
add
add
pop
jmp
mov
add
repnz
pop
jmp
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
movb
jl
pop
cmpsl
add
lds
filds
push
je
cltd
stos
add
mov
mov
add
stos
mov
add
add
add
xchg
sarb
enter
fdiv
in
sub
pop
mov
push
not
rol
lea
pop
cmp
jne
mov
push
rol
pop
movl
push
push
lea
push
push
call
add
push
add
add
mov
imul
add
jp
mov
add
push
add
repnz
pop
add
pop
stos
jb
pop
mov
mov
add
push
add
mov
mov
in
enter
add
clc
add
lcall
into
or
add
iret
in
pop
cmpw
jne
mov
push
lea
rol
pop
movl
jmp
push
add
inc
sub
shl
pop
pushl
push
push
push
push
push
lea
push
push
push
call
add
fwait
xchg
mov
andb
add
add
shlb
jmp
adc
out
jge
add
add
pop
je
int
hlt
popf
sub
pop
pop
push
add
xor
pop
mov
push
add
shl
pop
mov
push
pop
mov
push
push
sub
shl
not
push
push
pop
add
shl
sub
rol
xor
pop
sub
add
pop
push
push
push
lea
push
call
jmp
xchg
xchg
orl
mov
add
mov
add
pop
jnp
mov
popf
lock
cmpsb
in
int3
lds
xchg
fimull
add
aad
nop
add
mov
outsl
mov
add
add
addb
imul
repnz
add
in
out
add
push
sub
pop
push
call
push
sub
lea
pop
cmpl
je
push
push
sub
not
push
or
inc
add
inc
sub
add
sub
xor
add
shl
add
pop
lea
shl
rol
pop
push
push
lea
push
call
flds
jp
add
add
mov
add
loopne
add
roll
mov
jbe
leave
pop
andl
rclb
add
push
add
add
hlt
pop
push
push
push
push
push
call
mov
add
add
mov
popa
push
add
movl
add
add
add
add
faddl
sti
pop
test
mov
in
lock
call
cmpl
je
push
push
shl
dec
push
and
add
dec
add
rol
sub
ror
pop
lea
xor
add
pop
push
lea
shr
pop
push
push
dec
not
lea
pop
call
push
not
pop
cmpl
je
push
push
shr
shl
push
and
add
not
sub
xor
pop
add
inc
dec
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
add
gs
fistps
add
shll
rolb
pop
enter
mov
push
sub
pop
call
push
add
dec
sub
pop
cmpl
je
push
push
xor
push
or
not
add
ror
sub
inc
shl
pop
add
pop
push
sub
pop
push
push
lea
add
shr
pop
call
push
push
push
call
movb
add
add
add
xchg
xchg
mov
call
push
filds
add
js
add
jge
stos
pushf
popl
mov
lcall
addb
add
mov
add
pop
add
cmp
rol
je
push
push
not
inc
push
or
not
add
rol
lea
ror
sub
xor
sub
inc
sub
pop
inc
pop
push
add
pop
push
push
lea
ror
pop
call
push
push
push
push
push
push
push
call
outsl
mov
add
xchg
call
jmp
imul
add
jnp
add
stos
add
add
std
fwait
add
out
les
out
add
out
in
push
into
mov
add
fildl
add
add
add
sub
pop
cmpl
je
push
push
xor
push
and
add
ror
ror
sub
not
sub
inc
pop
ror
dec
not
rol
pop
push
push
push
push
push
push
call
flds
mov
pop
loope
add
add
sti
lds
add
push
add
add
jb
gs
lcall
push
push
call
imul
add
add
add
bound
fwait
mov
std
add
stos
leave
fwait
xchg
scas
xchg
add
nop
js
les
shll
lcall
push
cmp
add
int3
je
push
push
ror
lea
push
or
not
add
shr
xor
sub
add
lea
shr
pop
shl
pop
push
push
push
push
push
push
push
lea
push
call
mov
xchg
cwtl
add
add
ljmp
jno
pushf
add
add
add
pop
fstpl
add
jmp
loope
add
add
jae
push
add
lcall
push
lea
push
call
add
push
imul
fldt
mov
add
ret
add
xorl
cmc
add
jmp
arpl
add
add
jae
add
push
shl
ror
lea
pop
cmpl
je
push
push
rol
rol
push
push
pop
add
rol
add
shl
sub
shr
sub
lea
add
pop
add
add
add
pop
push
push
push
push
push
lea
push
lea
push
push
call
jmp
int3
add
addl
mov
mov
jns
jbe
add
pop
loope
aad
add
icebp
mov
hlt
push
add
add
add
in
add
mov
add
add
xchg
sub
pop
push
push
lea
push
push
lea
push
push
push
call
add
xor
add
jmp
add
arpl
fs
mov
vandpd
std
fldl
add
add
add
mov
popa
add
add
add
jae
shr
call
add
shl
faddl
lahf
iret
movsb
add
add
lods
add
movl
call
add
push
lea
push
call
fmul
lock
mov
add
add
add
hlt
mov
lret
in
lret
add
add
add
xchg
mov
jno
roll
add
jnp
add
jmp
fcomip
add
add
add
add
add
add
lcall
cmp
rol
je
push
push
shl
add
push
or
not
add
add
sub
dec
pop
rol
shr
pop
push
pop
push
push
push
call
add
add
rclb
mov
add
in
add
xchg
xor
lock
add
mov
lds
roll
add
ret
in
jecxz
mov
clc
pop
call
push
lea
push
lea
push
push
call
add
add
add
cmpsb
mov
add
fcoms
mov
repnz
push
jmp
xchg
xchg
jne
push
hlt
add
cmp
test
add
movsl
sub
ds
push
pop
add
lea
shl
sub
shr
shr
pop
ror
xor
sub
inc
pop
push
push
push
push
push
push
lea
push
push
push
call
cli
add
add
not
add
les
add
popf
addl
add
imul
add
add
data16
stos
flds
mov
popf
push
cmpsl
imul
jecxz
mul
imul
push
push
push
push
push
lea
push
lea
push
push
call
xchg
add
mov
lods
pop
add
add
mov
add
jnp
add
add
mov
push
in
mov
add
add
mov
sbbb
mov
int
in
in
call
cmpl
je
push
push
push
push
pop
add
sub
add
sub
pop
xor
shl
shl
pop
push
dec
shr
xor
rol
pop
push
call
push
not
pop
cmpl
je
push
push
dec
rol
push
or
inc
add
shr
shl
add
sub
rol
add
not
sub
pop
pop
push
push
push
push
push
lea
push
call
add
jae
test
add
xchg
add
lea
ret
popl
icebp
div
add
jecxz
pusha
add
push
js
add
insb
cltd
popa
add
rcll
ficoml
add
movb
add
mov
add
add
mov
sub
pop
push
push
xor
pop
call
cmpl
jne
push
push
lea
push
push
push
call
push
test
clc
pop
add
mov
in
add
add
pop
je
insb
popf
movsb
add
iret
shll
mov
pushf
add
add
add
xchg
push
pop
add
negb
add
lcall
inc
adc
lea
push
push
push
push
push
call
add
mov
add
jns
mov
into
stos
add
add
pop
add
mov
cmc
sahf
sbbl
add
lcall
ja
iret
jl
stc
add
jecxz
add
filds
add
add
movb
cltd
xchg
jmp
movl
push
dec
pop
jmp
push
ror
add
sub
pop
xor
pop
push
inc
add
not
pop
pop
push
lea
push
push
lea
push
push
push
push
call
mov
add
mov
jbe
lock
data16
push
mov
add
jnp
mov
add
outsl
jmp
add
arpl
cmpsb
movsb
add
out
in
mov
add
add
add
add
add
add
add
pop
movl
int3
arpl
jge
sub
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
add
mov
add
mov
mov
push
xchg
lock
imul
add
pop
add
add
add
pop
mov
les
add
in
fcompl
push
push
lea
push
push
push
push
call
add
add
lret
arpl
clc
add
add
add
jb
addr16
add
add
add
aam
cmpsb
je
add
in
call
leave
ret
push
push
push
lea
push
push
lea
push
push
push
push
call
cwtl
add
add
pop
les
lods
xchg
pop
lods
add
add
std
add
add
push
lea
jmp
stos
add
xchg
add
add
cwtl
add
add
add
add
add
std
add
add
add
fiadds
test
add
add
cli
mov
fcompl
push
ror
not
lea
pop
mov
push
pop
add
cmpl
jne
push
push
rol
lea
rol
rol
push
or
inc
add
shr
sub
shr
shl
pop
rol
pop
push
sub
rol
pop
pushl
call
push
push
lea
push
push
push
push
push
call
jbe
mov
shlb
add
pusha
add
js
jbe
add
xchg
add
add
mov
add
add
add
add
nop
popf
js
ljmp
add
xchg
add
cmpsl
mov
in
in
lcall
call
call
push
ror
sub
add
sub
pop
jmp
push
push
push
push
push
push
push
push
push
call
add
add
push
cld
xchg
add
add
xchg
lea
ret
add
fldl
jo
movsl
jle
add
add
int
add
loop
in
add
add
jmp
add
sub
pop
cmpl
je
push
push
push
call
add
add
in
stos
add
roll
add
cmpsb
add
add
leave
xchg
push
add
lret
xchg
jle
add
add
xchg
add
popa
loope
add
add
add
shl
add
stc
faddl
add
je
add
in
int
add
data16
shrl
sub
pop
cmpl
jne
push
xor
pop
leave
add
push
push
push
lea
push
push
push
push
push
push
call
ror
add
add
cmpsb
roll
jge
mov
add
add
jle
mov
add
fcoms
jl
rol
add
clc
add
add
jo
int
incb
mov
sub
pop
pop
pop
push
shl
pop
pop
push
inc
sub
add
pop
pop
push
not
ror
shl
pop
leave
push
push
lea
push
push
push
call
xchg
add
xchg
xlat
fldl
add
push
add
jle
add
arpl
add
hlt
add
push
in
js
in
add
add
movsb
xchg
add
addr16
sti
push
add
repnz
jbe
add
lret
add
jno
pop
add
mov
add
add
in
lcall
mov
in
add
popf
push
add
lcall
les
push
lea
push
lea
push
call
mov
pop
add
test
jle
add
add
jbe
xchg
add
add
add
into
cwtl
fcoml
fstp
xlat
xlat
iret
jmp
mov
clc
mov
out
fst
ljmp
in
lods
jle
movsb
iret
test
hlt
lcall
cltd
and
add
test
add
add
pop
lret
xlat
push
ror
add
rol
push
sub
add
dec
sub
dec
inc
not
pop
sub
not
dec
pop
push
dec
add
add
pop
pushl
call
push
push
lea
push
lea
push
call
roll
add
mov
add
add
push
rclb
jle
mov
test
mov
add
jns
xlat
add
lret
add
pop
bound
add
enter
addl
add
mov
add
add
add
shrb
pop
add
fdivrs
clc
add
out
sub
pop
push
push
not
sub
shl
pop
call
push
inc
pop
jmp
push
dec
dec
pop
cmpl
jne
push
not
pop
mov
push
push
call
add
mov
add
jecxz
add
imul
pushf
pop
add
mov
mov
lret
in
stc
mov
roll
mov
fwait
cli
add
clc
pop
mov
push
xor
not
xor
pop
push
push
push
dec
lea
add
push
push
pop
add
xor
add
sub
sub
xor
xor
shl
pop
xor
pop
push
lea
shl
pop
pushl
call
push
xor
not
shr
pop
call
push
push
sub
not
lea
not
push
or
not
add
sub
sub
sub
pop
shr
add
pop
push
sub
pop
pushl
push
push
push
call
pushf
jge
add
fsts
add
add
fwait
insb
add
jo
jl
add
add
add
add
add
jb
add
mov
lret
aam
mov
mov
add
int
add
add
xchg
fwait
add
mov
lock
mov
add
jmp
jl
in
hlt
lcall
leave
add
push
push
push
push
push
lea
push
push
call
ja
movsb
add
add
add
addr16
xchg
add
clc
stc
mov
std
outsl
test
xacquire
add
movsl
out
add
ljmp
add
shrb
jbe
push
push
ror
push
and
add
shl
add
shl
sub
not
dec
inc
pop
rol
lea
add
pop
push
push
lea
push
push
lea
push
call
lock
jmp
outsl
push
xchg
add
add
add
add
xchg
test
lods
sti
add
mov
push
testl
in
mov
out
mov
mov
test
push
jbe
lahf
add
add
cmpsb
int
movsb
xchg
ja
fsubrl
sarb
jb
push
add
popf
loopne
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
call
not
out
xchg
ja
fs
jl
xchg
add
test
repnz
jno
rolb
enterw
add
add
add
pop
add
add
mov
leave
push
add
add
add
add
add
add
out
add
add
pop
jmp
add
xchg
imul
add
add
enter
popl
bnd
mov
int3
lcall
pop
call
push
add
pop
call
push
push
lea
sub
lea
push
xor
add
not
xor
sub
sub
dec
add
pop
shr
dec
inc
pop
push
lea
push
push
call
mov
mov
add
add
xchg
stos
rolb
add
push
mov
add
cli
lret
add
jnp
add
hlt
push
add
jmp
sar
xchg
add
fiadds
in
add
add
sub
pop
pushl
push
push
push
call
add
mov
xchg
mov
add
stos
add
mov
fwait
mov
enter
add
add
out
xchg
iret
add
add
repnz
lcall
push
sub
add
mov
daa
add
add
add
xchg
push
pop
into
add
jb
stc
add
xchg
add
add
mov
insb
outsl
mov
add
add
in
clc
lcall
shrb
mov
cwtl
push
dec
lea
push
xor
add
add
sub
shl
shr
not
rol
pop
not
pop
push
push
lea
push
push
push
push
lea
push
call
in
shl
lcall
jb
add
pop
add
pop
mov
add
popa
add
test
imul
scas
je
cmc
mov
scas
add
mov
add
add
test
add
add
add
scas
fildl
sbb
rolb
idiv
rcll
add
pop
add
jne
call
push
rol
not
pop
call
push
push
shr
push
and
add
ror
sub
sub
sub
not
sub
pop
shr
xor
pop
push
push
lea
push
call
add
in
mov
add
movsl
add
mov
lahf
add
clc
add
jl
pop
mov
add
add
mov
add
flds
bound
pop
cmc
loopne
in
cli
movsl
mov
jmp
pop
mov
out
xchg
add
add
jb
mov
in
hlt
pop
pushl
push
push
push
lea
push
push
lea
push
call
icebp
add
icebp
mov
lret
pop
jnp
testl
jl
jb
lea
add
shll
hlt
je
add
rcl
jae
jbe
cwtl
mov
jp
pop
cmpsl
push
pop
aam
popl
out
call
add
mov
mov
fiaddl
fbstp
push
loope
push
pop
loop
add
filds
dec
sub
add
shrb
jle
pop
push
inc
push
xor
add
add
sub
not
lea
pop
rol
shr
pop
push
lea
push
call
add
add
mov
lret
cmpsl
mov
jnp
add
lahf
xchg
test
add
mov
pop
pushl
push
shr
rol
inc
pop
call
push
ror
lea
pop
call
push
push
shl
sub
push
push
pop
add
shr
inc
inc
sub
shl
rol
pop
shl
not
pop
push
ror
not
pop
pushl
push
dec
sub
pop
call
push
push
lea
push
lea
push
push
call
add
add
clc
jo
mov
fdivrp
pop
in
mov
add
add
add
mov
addl
stos
jp
icebp
xchg
add
add
sub
pop
call
push
push
not
sub
sub
push
or
not
add
add
add
sub
inc
sub
add
shl
pop
add
shl
pop
push
push
lea
push
call
add
loopne
jb
iret
mov
lods
add
add
xchg
add
aad
add
out
jp
add
add
repnz
add
add
add
push
add
fidivrl
in
hlt
lcall
jne
push
push
push
push
push
push
push
push
push
call
aad
add
add
in
nop
loop
mov
je
add
add
mov
lods
jle
jle
mov
add
in
lea
mov
mov
lcall
aas
sub
add
shrb
mov
rorl
xor
add
xor
sub
sub
pop
sub
add
pop
push
ror
pop
pushl
push
push
push
push
push
push
call
fnsave
lcall
fsub
pop
add
pop
repnz
ja
mov
add
add
add
shll
add
push
sub
sub
pop
lea
push
pop
push
push
ror
add
rol
pop
call
push
push
ror
xor
push
push
pop
add
dec
sub
pop
dec
pop
push
lea
push
push
push
push
call
add
into
hlt
add
into
pop
les
gs
add
add
imul
add
add
lods
push
popf
mov
ficomps
add
add
mov
aad
add
mov
add
lcall
jne
push
push
push
push
call
loopne
fsubrl
incb
mov
clc
stc
mov
add
ja
add
add
xchg
fadds
mov
add
out
add
push
push
push
push
push
push
lea
push
push
push
push
call
filds
fnstsw
jno
add
add
pop
add
add
iret
ja
ffreep
test
stos
push
jge
jo
testb
add
add
clc
test
test
add
icebp
add
in
mov
jmp
add
add
add
shrb
xor
out
add
lea
rol
push
or
inc
add
shr
shr
sub
sub
not
sub
pop
not
sub
pop
push
add
sub
add
pop
pushl
push
sub
lea
shl
pop
call
push
pop
call
push
push
add
xor
push
push
pop
add
rol
sub
dec
pop
lea
xor
shr
pop
push
shr
lea
pop
pushl
push
push
lea
push
call
mov
int
scas
push
add
add
add
rolb
bound
shl
add
add
fstps
pop
cmpsl
aam
leave
add
xchg
add
add
add
jp
in
hlt
lcall
mov
rclb
jl
xchg
push
push
push
push
push
push
call
lret
push
mov
std
add
add
add
mov
add
mov
add
mov
add
jmp
add
add
add
add
add
iret
add
xchg
add
sub
pop
lea
push
push
lea
push
sub
add
shr
not
ror
sub
sub
lea
sub
pop
rol
inc
sub
pop
push
ror
pop
pushl
push
add
shl
not
pop
call
push
push
lea
push
push
push
push
push
call
test
add
clc
in
out
testl
aad
in
testl
in
push
add
rcl
sbbl
add
popf
leave
add
roll
mov
in
push
popf
add
fldl
xor
add
scas
jae
add
int3
jmp
out
in
in
lcall
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
icebp
add
loope
mov
mov
add
out
push
ret
mov
imul
add
add
insb
popa
add
pusha
iret
add
add
add
xlat
pop
je
add
add
add
mov
aad
mov
bound
int
xlat
lret
jp
add
sub
pop
call
push
push
shr
lea
push
or
not
add
sub
shl
add
dec
rol
pop
lea
pop
push
lea
push
call
pop
sti
xchg
add
add
popf
add
addr16
jno
add
push
out
scas
jp
add
add
add
faddp
add
mov
add
add
mov
jbe
add
enter
add
mov
jns
add
aam
mov
clc
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
bound
add
gs
add
xorl
dec
add
add
stos
ret
add
jne
jmp
popl
add
add
push
jecxz
add
push
add
scas
add
add
add
popa
movsl
xlat
xorb
add
in
fdivr
lcall
rclb
pop
push
push
lea
push
push
lea
push
push
push
push
call
flds
xchg
fstpt
lock
add
xchg
push
add
add
sarb
fs
add
add
add
roll
add
out
jae
movsb
mov
ficomps
add
add
out
add
mov
mov
in
fcomps
inc
cld
push
push
add
sub
add
push
and
add
rol
inc
sub
not
rol
sub
shl
pop
add
sub
sub
pop
push
rol
sub
pop
pushl
push
sub
sub
dec
shr
pop
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
loope
imul
add
add
popa
mov
xchg
add
add
add
mov
add
lds
in
add
test
fcomps
andb
out
jns
add
call
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
mov
add
cmpsb
mov
add
clc
dec
cltd
mov
xchg
add
fldl
add
add
enter
jne
jns
add
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
push
call
lret
pop
add
in
add
in
sub
add
add
add
add
ljmp
jmp
mov
push
mov
add
fcoms
lahf
testl
jl
push
xor
xor
push
or
inc
add
not
sub
shl
lea
add
pop
pop
push
pop
pushl
push
push
push
call
jle
add
add
xor
mov
add
add
hlt
pop
add
insb
gs
add
adcb
mov
scas
add
mov
add
xchg
mov
xchg
add
add
sub
pop
call
push
push
inc
xor
shr
push
sub
add
ror
inc
sub
add
pop
add
add
sub
pop
push
push
lea
shl
push
or
inc
add
shr
ror
sub
ror
inc
pop
pop
push
push
call
add
add
cmpl
jo
add
leave
add
add
int3
cwtl
push
add
movsb
icebp
add
add
mov
add
add
call
js
fsubs
add
pop
add
add
add
add
add
pop
pop
rolb
shrb
jno
push
sub
shl
not
push
and
add
sub
sub
ror
not
sub
pop
shl
pop
push
push
lea
push
push
push
push
push
call
mov
add
add
mov
jecxz
add
js
jo
repnz
lret
jae
test
jae
cmc
add
idivb
add
into
add
add
add
sub
pop
pushl
call
push
push
lea
push
call
add
outsl
add
mov
stc
add
add
mov
aad
scas
mov
add
test
xchg
int3
movsb
enter
add
scas
xlat
mov
lret
jbe
add
add
add
mov
add
mov
ja
push
shlb
xchg
sub
pop
mov
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
mov
int
add
add
mov
add
add
stos
add
addl
mov
xchg
ljmp
mov
add
mov
gs
sbb
push
enter
pop
enter
cld
push
mov
popl
add
jle
loop
add
test
call
push
dec
pop
leave
push
push
push
call
xchg
mov
jmp
add
test
add
loope
add
or
jp
add
ret
jae
xchg
mov
add
xchg
add
loop
in
in
lcall
push
push
push
lea
push
lea
push
push
push
call
loopne
addl
push
xchg
xchg
lods
xchg
add
add
mov
add
iret
vpand
out
add
add
xlat
out
enter
mov
add
jns
xor
movl
add
cltd
in
clc
add
out
insb
add
clc
mov
add
call
call
push
push
inc
shr
add
sub
pop
push
push
push
rol
shl
lea
pop
push
push
push
add
sub
lea
pop
push
push
lea
push
lea
push
push
call
in
lahf
push
mov
add
test
add
add
add
pop
add
scas
arpl
add
add
nop
mov
test
out
ljmp
testl
pop
push
adcl
jne
add
add
add
jp
aad
mov
jge
mov
push
sub
pop
pushl
push
pop
push
push
xor
add
lea
pop
call
push
push
shr
push
or
not
add
rol
add
rol
sub
dec
shr
pop
lea
xor
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
push
aam
xchg
add
add
loopne
add
jmp
add
mov
stc
shll
add
movb
loopne
add
ja
push
lcall
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
call
ret
push
add
fs
faddl
mov
repnz
add
iret
out
popa
in
xlat
cwtl
rol
mov
lds
in
loopne
lcall
jp
add
push
push
push
call
loop
add
arpl
stos
jbe
add
jmp
add
fidivs
out
in
nop
mov
pop
add
add
cmpsb
fs
add
add
fcmovnu
shll
add
jnp
hlt
add
add
fadds
push
add
add
xchg
cld
loop
icebp
pop
jle
xchg
sahf
add
add
add
lcall
rclb
popf
push
call
out
jmp
mov
fidivl
addb
push
insb
add
stc
add
int3
add
pop
fxch
mov
add
add
inc
clc
push
push
push
push
call
add
add
leave
add
lcall
lods
push
pusha
iret
add
add
xorb
test
js
jecxz
sarb
mov
movb
add
pop
xchg
jp
fadds
add
xlat
add
add
sub
pop
pop
push
xor
pop
dec
jne
jmp
push
lea
push
push
push
push
lea
push
push
push
push
call
icebp
nop
jne
sbbl
movsb
add
jnp
add
add
add
add
add
add
jle
add
lahf
add
testb
stos
add
lcall
lea
add
push
push
not
push
xor
add
ror
not
sub
inc
sub
inc
pop
shr
inc
xor
shl
pop
push
push
push
lea
push
push
push
call
mov
push
mov
add
mov
mov
lret
add
add
gs
add
mov
lcall
jne
push
pop
call
push
dec
inc
ror
pop
push
push
inc
pop
call
push
push
push
push
push
lea
push
call
add
add
push
add
fiaddl
add
addl
add
add
mov
scas
add
stos
pop
test
mov
pop
sahf
mov
nop
call
imul
fwait
add
lea
add
lcall
add
add
push
add
shl
xor
xor
pop
lea
push
push
dec
push
and
add
rol
lea
sub
xor
sub
shr
pop
sub
not
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
loop
add
out
cltd
add
std
leave
pusha
push
popf
insb
pusha
in
sub
cmpsb
jno
mov
arpl
add
fwait
call
mov
aad
in
fdivr
lcall
jne
push
add
add
pop
call
push
lea
push
push
push
lea
push
push
push
push
call
xchg
stos
roll
add
add
in
add
jne
add
imul
xchg
add
mov
mov
scas
add
pop
push
call
push
push
inc
add
push
xor
add
dec
sub
inc
lea
not
pop
add
ror
pop
push
lea
lea
pop
pushl
push
inc
add
pop
call
push
push
push
lea
push
call
leave
loope
xchg
add
add
mov
add
mov
add
add
hlt
add
addb
add
add
xchg
mov
mov
add
pop
call
push
push
lea
push
push
push
call
movb
loope
add
add
add
aam
add
mov
add
add
add
push
add
pushf
movsl
add
add
add
add
add
add
icebp
shl
mov
add
jb
leave
imul
icebp
add
imul
mov
push
push
push
push
lea
push
call
add
loopne
add
add
js
add
add
popf
movsl
add
in
push
cli
add
add
popf
mov
cld
add
lcall
mov
popf
nop
jmp
add
jmp
test
imull
in
in
pop
lea
push
push
add
shl
lea
rol
push
sub
add
inc
ror
inc
sub
not
pop
not
pop
push
xor
rol
pop
pushl
call
push
push
call
movsl
aad
add
std
add
int3
test
cmpsl
movsl
lea
repnz
ret
pusha
lods
add
out
faddl
add
insb
loope
add
add
add
add
nop
xchg
add
imul
add
stos
cltd
imul
add
fadds
fiaddl
add
push
push
dec
pop
push
push
push
push
call
loopne
add
xchg
lret
add
enter
add
stc
out
jb
add
add
call
in
lcall
jno
rolb
sub
pop
push
pushl
push
push
shl
inc
push
sub
add
rol
add
sub
not
sub
pop
dec
pop
push
push
lea
push
lea
push
lea
push
call
les
add
add
add
fistpl
les
add
lds
fisubs
add
lcall
push
lea
pop
call
push
push
shr
sub
xor
push
xor
add
xor
sub
inc
pop
inc
ror
add
shr
pop
push
add
shr
rol
pop
pushl
call
push
push
push
push
push
push
call
mov
add
add
call
add
add
add
int3
add
in
rolb
add
xchg
leave
add
lods
mov
mov
je
fildl
add
lret
outsl
add
stos
pushf
add
stos
add
add
popa
add
add
in
call
push
call
push
push
dec
not
lea
push
xor
add
lea
sub
add
add
shl
not
pop
ror
inc
shl
inc
pop
push
ror
pop
pushl
push
push
lea
push
push
lea
push
lea
push
call
add
popl
testb
mov
stos
jnp
ja
mov
fs
pop
out
imul
jp
xchg
sub
pop
call
push
sub
dec
add
shr
pop
call
jmp
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
fadds
cmpsb
pop
mov
mov
add
add
mull
mov
add
pushf
add
xchg
add
mov
add
add
add
mov
add
add
add
lcall
pushl
mov
push
shr
sub
ror
pop
jmp
push
push
add
sub
push
push
pop
add
shl
add
sub
lea
inc
rol
inc
pop
inc
add
pop
push
shr
rol
lea
pop
pushl
call
push
add
pop
push
call
push
push
add
sub
push
xor
add
ror
sub
sub
inc
pop
sub
add
sub
pop
push
push
call
testb
iret
popf
mov
into
incb
out
mov
pop
add
add
int
add
push
add
mov
add
std
movsb
aad
sar
add
add
add
mov
xchg
shlb
jp
test
out
add
add
add
stc
sarb
int
add
sub
pop
pushl
push
push
push
lea
push
call
add
lcall
mov
xlat
cmpsl
loopne
out
add
out
lock
mov
xchg
pop
add
rolb
test
add
int3
pop
add
jns
add
outsl
sub
pop
call
push
add
pop
push
push
lea
push
push
push
lea
push
push
call
mov
xchg
imul
add
add
lret
arpl
push
add
fcmovnb
mov
lods
xchg
add
mov
add
in
add
add
sbb
sti
sub
pop
call
push
shl
pop
leave
push
not
not
sub
pop
add
pop
push
push
call
jns
repnz
mov
add
addl
add
fists
imul
fiadds
add
add
int
add
mull
je
add
mov
mov
fiadds
out
mov
insb
scas
fnstenv
into
add
lcall
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
xlat
add
jmp
add
mov
add
enter
add
test
add
add
cmpsb
insb
add
mov
cli
movl
sub
pop
pop
push
ror
ror
not
sub
pop
pop
push
not
pop
leave
push
not
not
pop
add
push
push
lea
push
push
push
push
call
lods
push
in
push
mov
jb
mov
leave
aam
ja
mov
jmp
fists
pop
add
add
in
add
std
add
mov
mov
mov
push
mov
mov
mov
add
push
lea
add
mov
ret
leave
push
ror
xor
rol
sub
pop
ret
push
rol
pop
push
mov
push
dec
lea
add
pop
cmpl
jne
mov
push
add
dec
pop
jmp
push
lea
not
rol
pop
mov
and
push
add
pop
xor
push
push
lea
push
push
call
xchg
in
add
add
mov
mov
mov
js
jp
add
add
xchg
mov
mov
add
push
fs
jns
add
jmp
add
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
cli
rolb
add
lret
cltd
mov
push
jae
mov
add
cwtl
movsb
rcll
test
mov
add
mov
int3
add
std
add
add
mov
add
cli
fwait
aam
aad
stos
add
rolb
lea
push
call
add
add
mov
add
add
add
lret
push
add
add
fsubrs
lahf
add
arpl
sahf
sahf
add
add
jae
in
clc
pop
xor
dec
push
push
push
call
jb
add
xchg
mov
lds
mov
add
test
cld
add
icebp
add
add
mov
lcall
arpl
add
xchg
cmpsb
lea
jecxz
arpl
add
out
mov
call
add
out
xchg
add
cmp
add
sub
pop
sub
push
not
pop
jmp
sub
push
shl
ror
shl
pop
pushl
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
stc
add
add
inc
add
add
mov
pop
out
testb
add
jbe
add
repnz
mov
ja
push
add
pop
jl
cwtl
movl
stos
loop
mov
add
fdivr
lcall
jmp
push
inc
pop
cmp
jne
mov
push
add
lea
pop
lea
push
not
sub
inc
pop
sub
push
push
lea
push
push
call
xchg
add
mov
add
mov
fadds
jb
stos
mov
mov
loop
add
add
call
test
lods
lret
add
mov
lret
shr
in
add
mov
out
mov
sub
pop
mov
shr
push
push
push
push
lea
push
push
call
add
cmc
jb
mov
add
mov
aad
add
mov
out
sarl
mov
loopne
std
aad
push
xchg
test
add
xchg
movsl
add
mov
add
out
pop
xchg
movl
in
add
icebp
lods
sub
pop
add
push
add
not
pop
sub
push
ror
add
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
lock
push
add
add
add
in
mov
add
aad
mov
jmp
add
fs
aad
push
sti
add
in
add
nop
stos
sub
pop
pop
shr
push
push
push
push
push
push
push
lea
push
lea
push
call
add
xchg
add
add
ja
mov
add
movsl
test
jl
add
fstpt
test
jb
jnp
add
mov
lock
xchg
add
stos
add
add
lcall
loope
incl
add
loopne
pop
sub
cmp
jne
push
lea
push
lea
push
push
push
lea
push
push
push
call
cmpsb
jno
loopne
pop
mov
add
add
fwait
add
filds
push
add
sti
add
add
gs
mov
add
cli
push
pop
add
add
add
in
loopne
lcall
ret
push
push
call
fdivl
add
add
jnp
add
xchg
popf
outsl
cli
outsl
pusha
out
xchg
add
add
test
jle
jnp
arpl
xchg
lahf
pop
stc
aam
xlat
xchg
scas
insb
add
loope
ljmp
sub
pop
push
mov
push
sub
shl
sub
lea
pop
add
push
push
add
pop
push
push
push
push
push
push
call
mov
add
mov
cltd
fistpl
add
mov
add
sti
add
mov
pop
movsb
xchg
add
imul
pop
lahf
sti
mov
add
icebp
test
xchg
in
add
add
data16
enter
pop
out
xchg
add
add
incb
mov
in
lcall
push
sub
shr
shr
not
pop
push
push
push
push
lea
push
push
push
call
add
xlat
add
mov
scas
stos
jmp
add
add
add
addb
mov
jno
add
add
fidivrl
hlt
pop
jp
lahf
jns
xchg
xchg
add
mov
add
add
data16
add
mov
jmp
imul
mov
add
int3
add
mov
add
lcall
push
add
sub
add
add
pop
mov
push
push
push
lea
push
call
test
add
cli
stc
add
clc
into
mov
xchg
mov
push
aam
add
add
in
mov
add
add
mov
jno
add
add
stos
test
roll
add
roll
int
add
fcomps
in
lock
lea
sub
push
sub
pop
mov
shr
push
add
add
pop
add
push
push
lea
push
push
push
push
push
call
addb
jno
test
add
hlt
add
rcll
rolb
scas
stc
lock
push
add
xchg
add
jge
jae
add
add
popa
les
add
add
loop
add
add
jp
cmpsl
mov
add
enter
add
sub
pop
mov
push
rol
pop
add
push
lea
push
push
push
push
push
push
call
in
add
subl
jp
pop
add
stos
incb
gs
sarl
imul
in
add
in
in
add
add
loope
mov
xchg
add
lcall
jnp
push
push
push
push
call
xchg
add
fstpt
add
jbe
push
add
jge
add
scas
pushf
filds
add
scas
add
add
mov
out
out
push
jo
add
jbe
std
add
fbstp
push
add
les
bound
sub
pop
add
push
push
push
push
push
push
lea
push
call
mov
outsl
add
icebp
popa
imul
xchg
add
arpl
mov
mov
stc
mov
add
jno
ja
je
add
add
add
icebp
sbb
add
add
xchg
add
sub
pop
xor
push
push
push
lea
push
push
call
pop
orl
add
fdivr
push
add
andl
push
cmpsb
xchg
mov
jne
imul
test
lea
mov
xchg
jbe
lods
add
add
add
mov
add
out
popf
jae
lahf
testb
xlat
push
push
push
lea
push
push
push
lea
push
push
call
imul
add
sarl
scas
into
mov
mov
add
add
sarl
add
add
push
add
add
lret
xlat
popa
add
lock
jbe
add
sub
pop
and
push
pop
rol
push
lea
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
js
add
push
aam
insb
add
pusha
add
ja
add
add
add
rolb
test
clc
in
pusha
jo
xchg
pop
fdivs
add
add
pusha
fcmovnbe
add
addb
in
fcomps
rolb
add
loop
push
push
push
push
push
push
lea
push
call
add
pop
test
clc
add
xchg
add
add
sarb
repnz
add
fcoml
add
jnp
call
xchg
add
jae
mov
jp
out
add
incb
add
sub
pop
inc
cmpb
jne
push
push
push
push
push
push
push
push
push
push
call
add
lods
lods
add
call
fiadds
jne
lret
mov
add
icebp
add
outsl
add
mov
add
pop
push
add
sahf
add
lahf
ljmp
add
jbe
add
mov
mov
clc
pop
arpl
add
sub
pop
add
push
sub
ror
sub
dec
pop
cmp
je
add
push
lea
push
push
lea
push
push
push
call
add
add
int3
call
mov
mov
ljmp
cltd
push
push
repnz
push
add
jecxz
rclb
cwtl
push
mov
fdivs
mov
pusha
add
pop
add
add
add
sub
pop
cmpl
jne
push
ror
rol
xor
add
pop
xor
push
add
shr
pop
pop
push
push
push
call
add
movsl
add
ljmp
mov
xchg
pop
add
add
iret
add
imul
add
test
add
pop
xchg
lret
mov
mov
rol
out
lahf
ja
add
lahf
add
hlt
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
out
add
rolb
fadds
xchg
test
add
nop
add
in
cltd
stos
movl
int3
stos
mov
add
aam
add
addb
pop
add
add
mov
lods
add
aad
fcoml
mov
fs
addr16
xchg
add
out
xchg
add
pop
pop
push
lea
add
pop
pop
leave
push
dec
pop
ret
push
shr
add
pop
mov
push
sub
not
rol
pop
add
push
push
xor
shr
lea
dec
pop
push
add
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
pushf
pop
add
jge
pop
push
lods
add
xchg
add
push
js
add
add
pop
mov
roll
aam
xchg
jmp
addb
add
push
mov
sub
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
filds
mov
in
mov
nop
rcrb
mov
add
lods
push
stos
ljmp
add
add
sub
pop
testw
push
shr
not
pop
pop
push
push
push
push
call
mov
shrb
nop
mov
call
add
stos
push
jmp
push
add
subb
add
add
les
fiadds
push
pop
int3
mov
jo
in
lock
pop
push
lea
push
push
push
call
add
cld
add
shr
lahf
sub
imul
mov
add
add
ret
add
movsb
roll
add
xchg
add
mov
cli
jge
icebp
out
fwait
incb
lcall
in
jge
mov
in
xchg
stc
ficomps
add
add
mov
jno
faddl
add
mov
int3
sub
push
nop
push
push
push
call
add
insb
push
test
out
testl
pop
lock
mov
mov
xchg
lea
add
add
jp
fidivrs
arpl
lcall
push
xor
ror
pop
call
push
lea
push
push
push
call
push
add
add
rol
mov
scas
push
add
mov
arpl
je
pop
add
cmpsb
add
sbbb
int
add
fmul
ja
add
out
pop
jle
lret
fldl
scas
mov
enter
in
lock
lcall
xor
pop
push
push
call
add
fistl
xchg
roll
mov
add
gs
fs
add
nop
xchg
in
add
pop
add
add
rolb
xchg
addl
jne
in
lret
add
out
xchg
add
movsb
int
add
sub
pop
pop
push
add
lea
pop
pop
push
add
rol
lea
pop
pop
push
lea
xor
not
pop
pop
leave
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
std
mov
lea
mov
jge
add
add
add
iret
ja
pop
pop
imul
add
add
sub
pop
ret
push
push
push
push
call
addr16
mov
sahf
mov
add
mov
xchg
jno
ret
in
add
jecxz
mov
int3
add
add
mov
mov
add
add
ja
add
add
out
jae
jns
jb
add
add
jns
sub
pop
push
push
lea
push
call
add
hlt
mov
fildl
imul
mov
add
clc
add
add
out
pop
mov
add
add
in
clc
lcall
in
push
add
sub
xor
pop
add
push
add
lea
pop
push
push
push
push
push
push
push
lea
push
call
xchg
add
xchg
add
jbe
pushf
cltd
add
pushf
add
push
aad
neg
mov
lds
add
int3
cwtl
fildl
add
xlat
jno
add
cmc
add
hlt
enter
pop
lods
add
add
ror
imul
faddl
hlt
push
lcall
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
mov
mov
arpl
out
add
mov
rcrl
add
add
mov
add
xchg
movsl
movsb
aam
jnp
pop
add
mov
add
fdivrs
shrl
push
gs
ficomps
leave
add
add
add
hlt
add
lcall
push
xor
add
pop
push
push
push
push
push
push
lea
push
call
add
mov
add
shll
add
pushf
lret
add
add
add
cmpsl
testb
leave
test
add
mov
add
in
lods
cmc
cwtl
rcrl
in
pop
lods
add
add
add
push
jnp
arpl
lahf
add
lcall
pop
or
shrb
rol
cld
pop
push
pop
push
push
push
push
push
push
push
push
push
call
jns
imul
arpl
jnp
push
xchg
push
outsl
imul
lods
add
pop
insb
add
add
pop
add
add
hlt
lea
pop
mov
push
cltd
add
add
mov
int3
js
mov
add
clc
addr16
add
mov
mov
shr
lahf
jmp
mov
lea
push
pop
sub
mov
push
push
lea
push
push
call
pop
rolb
add
lods
hlt
jp
xchg
add
mov
stc
imul
mov
add
sub
pop
shr
add
push
inc
add
pop
mov
push
shl
pop
add
pushl
push
add
pop
popl
push
ror
add
lea
pop
mov
add
push
add
pop
xor
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
xchg
add
out
push
mov
test
push
bound
subb
xchg
sti
add
rorb
ret
mov
xchg
add
lods
add
ja
add
mov
add
in
loopne
lcall
adc
rcll
push
mov
lea
push
push
call
lds
pop
jnp
add
mov
pop
add
scas
add
scas
add
jl
add
std
add
jb
add
pusha
add
xchg
mov
out
add
add
enter
add
add
mov
add
add
test
add
jno
add
movsb
sub
pop
xor
push
push
push
push
push
push
lea
push
call
push
rcr
add
xchg
add
push
addl
add
add
fwait
add
test
jl
int3
add
hlt
add
movsb
popf
add
xchg
mov
add
xchg
hlt
mov
add
mov
add
add
add
add
clc
stc
repnz
mov
add
add
mov
lcall
rolb
push
lea
shr
pop
nop
xor
push
shl
shr
shr
add
pop
nop
push
push
push
push
push
push
push
push
call
sti
fsub
rcrb
jp
add
add
shl
xchg
cltd
add
addr16
mov
into
add
out
add
ja
add
xchg
lcall
add
add
push
add
add
mov
mov
add
add
add
clc
pop
add
addb
sub
pop
nop
push
lea
push
push
push
push
push
call
add
add
hlt
cmpsb
add
add
xlat
rcrb
std
addl
mov
sahf
pop
imul
test
out
shlb
jb
mov
aam
sub
pop
inc
nop
push
inc
lea
sub
pop
nop
push
xor
pop
cmpb
jne
add
push
push
push
push
push
call
loopne
mov
fistl
add
imul
stos
clc
scas
imull
add
add
mov
add
add
ret
cwtl
mov
ljmp
push
divb
add
sub
pop
nop
push
push
push
push
call
mov
test
add
mov
add
cltd
mov
sti
fwait
jo
mov
add
add
pop
fstps
xchg
outsl
add
mov
push
icebp
add
repnz
mov
push
sub
pop
nop
push
push
push
call
ja
add
xchg
pop
out
rcl
cwtl
mov
pusha
shl
cwtl
pop
fisubrl
fcomp
add
jmp
add
jno
add
mov
add
inc
or
test
push
push
push
push
push
lea
push
call
add
outsl
scas
in
into
add
rolb
add
ret
pop
enter
subb
add
push
add
nop
push
sub
pop
inc
push
not
xor
pop
nop
push
sub
rol
pop
nop
push
add
add
pop
cmp
jb
push
not
add
pop
xor
jmp
push
push
push
push
call
add
movsb
add
aam
add
add
mov
jnp
ja
cltd
mov
add
add
mov
add
nop
add
push
and
rcll
popf
push
call
xchg
cltd
orb
add
add
js
mov
in
add
add
mov
arpl
lea
add
sti
test
mov
mov
add
stos
add
int
push
sub
pop
movzwl
mov
push
push
push
call
add
je
icebp
push
add
add
sti
add
cmpsl
shll
add
add
xchg
add
add
mov
xchg
mov
pushf
rcl
add
add
add
jbe
jnp
add
add
loop
fsubl
add
add
fs
mov
xchg
xchg
add
in
hlt
pop
add
push
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
add
outsl
pop
add
clc
test
fistl
add
add
mov
pop
loopne
mov
test
add
add
roll
jecxz
pusha
add
add
in
fcompl
dec
nop
add
loope
push
push
call
std
out
push
add
jnp
js
xchg
add
jo
in
jecxz
add
cld
push
add
xchg
rcl
iret
add
add
mov
xchg
xchg
add
pop
add
add
call
xchg
int
out
add
fldl
sub
pop
xor
push
add
pop
shl
push
push
call
sbbb
cmpsl
add
add
xchg
add
jae
aad
add
add
jno
mov
jmp
sahf
loope
mov
into
xchg
add
add
mov
add
je
pop
loope
add
fadds
insb
sub
lcall
dec
nop
add
ror
add
pop
shl
push
add
pop
xor
push
add
add
pop
mov
push
push
push
push
push
push
push
call
jae
pushf
mov
mov
add
push
add
mov
add
cmpsb
mov
jnp
add
add
jb
loopne
scas
mov
add
sar
xchg
leave
add
mov
ret
add
divl
xchg
outsl
add
out
jnp
bound
sub
pop
add
push
push
call
push
pop
rclb
add
add
xchg
add
add
add
add
add
mov
nop
pop
add
fldenv
data16
jmp
add
push
faddl
add
add
jae
imul
fs
in
clc
pop
pop
push
push
lea
push
call
mov
add
jb
add
add
add
mov
push
ja
add
test
je
mov
test
js
lcall
incb
add
lods
popl
mov
add
addb
pop
pop
push
push
push
push
call
add
lock
incb
add
add
insb
add
add
add
xorb
out
mov
filds
jb
jb
add
add
mov
add
add
jo
add
add
hlt
sarl
aad
pop
xchg
in
lock
pop
push
shr
pop
pop
leave
push
sub
not
sub
pop
ret
push
lea
push
push
push
push
push
push
push
push
call
push
rolb
push
xchg
add
add
add
add
add
xchg
push
xchg
mov
add
add
add
shl
jae
add
int
add
roll
xchg
add
add
add
mov
add
lcall
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
movsb
les
mov
ljmp
rolb
mov
add
add
lret
add
add
add
movsb
add
add
ret
imul
pop
int
filds
add
lahf
mov
add
std
movb
in
stos
add
test
add
jmp
add
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
rcrb
push
mov
add
jb
add
lret
lret
test
jp
int
lea
add
int
add
push
insb
add
jmp
in
add
shll
add
popa
std
mov
add
jno
sahf
add
incb
stc
add
loope
in
fcompl
push
ror
pop
push
push
sub
pop
mov
mov
push
ror
ror
pop
mov
test
je
push
pop
mov
push
not
not
sub
shr
pop
test
je
push
push
push
push
call
test
imul
fmul
xchg
mov
cltd
add
jns
pop
xlat
xchg
fadds
add
mov
push
lret
add
add
rcll
mov
sub
pop
mov
push
ror
ror
pop
mov
push
lea
push
push
push
lea
push
lea
push
call
cmc
addb
in
add
lea
add
aam
test
add
add
xchg
add
enter
add
rorl
add
outsl
movsb
add
test
roll
pop
cmc
lret
xchg
cli
mov
sub
pop
mov
inc
push
lea
shl
sub
pop
cmp
je
push
shr
not
dec
add
pop
test
je
push
push
push
push
lea
push
call
cwtl
xchg
add
add
lahf
popa
add
cmc
pop
add
add
mov
in
out
mov
fsubrl
pop
push
add
add
add
add
int
popa
clc
mov
leave
aam
add
add
insb
add
rolb
xlat
add
add
lcall
push
push
push
push
push
lea
push
push
push
push
push
call
fs
mov
add
std
enter
mov
clc
loope
pop
add
mov
jecxz
icebp
mov
mov
push
add
jns
popa
add
add
add
xorl
add
aam
jb
lock
add
mov
mov
sub
pop
inc
cmp
je
push
lea
push
call
aam
mov
mov
add
mov
int3
movsl
add
push
ljmp
add
add
add
lret
imul
pop
loope
add
lcall
rorb
xor
call
push
push
push
push
call
mov
mov
lea
add
and
scas
ja
loope
xchg
jp
xchg
jo
loop
add
add
lcall
rclb
arpl
push
push
push
push
call
xchg
sar
add
out
leave
xchg
push
add
add
incb
cld
test
mov
mov
popl
pop
add
cmpsl
add
add
xchg
cld
mov
pop
loope
testb
add
movsb
rcrl
lcall
push
in
lods
add
imul
add
stc
sub
pop
pop
push
lea
push
call
add
nop
jnp
add
sti
add
mov
mov
add
add
xchg
arpl
in
shll
ficoml
add
pop
pop
add
cwtl
test
add
add
lods
add
add
int
sub
pop
pop
push
lea
push
lea
push
push
call
std
jecxz
add
mov
mov
add
add
xchg
add
add
add
add
pop
fistps
xchg
add
mov
lret
pusha
xchg
add
clc
out
out
data16
add
add
push
jbe
jge
lea
in
lock
lcall
ret
push
pop
mov
push
add
shl
sub
rol
pop
inc
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
loopne
jbe
add
add
pop
jecxz
shlb
push
data16
cmpsl
arpl
imul
add
sar
add
add
add
addl
add
cmpsb
sahf
push
add
xchg
xchg
add
add
add
push
insb
add
add
lcall
lock
push
sub
add
add
pop
lea
push
push
push
push
push
push
push
call
lods
add
stc
xlat
rolb
jle
iret
mov
fdivr
xchg
add
data16
cmpsl
leave
scas
add
add
filds
sti
mov
add
push
out
cmc
andb
add
jb
add
jp
mov
add
mov
xlat
cmp
in
in
lcall
popa
add
shll
sub
pop
test
je
push
push
lea
push
lea
push
lea
push
call
add
stc
add
cli
shr
ja
add
imul
add
mov
xchg
mov
sub
pop
mov
add
push
xor
pop
cmp
jne
push
xor
add
pop
mov
push
lea
push
push
lea
push
push
push
call
xchg
mov
add
add
add
test
add
push
add
mov
into
add
scas
add
add
add
aam
sub
pop
test
je
mov
push
lea
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
loopne
add
add
loopne
add
add
mov
add
xchg
int
hlt
xchg
fwait
add
fucomi
add
test
hlt
mov
addl
sub
pop
cmp
je
push
xor
xor
pop
jmp
push
not
ror
inc
pop
xor
push
ror
pop
pop
pop
push
lea
push
push
call
pop
in
add
mov
cltd
outsl
mov
sahf
add
cmc
add
les
jl
add
add
pop
add
xchg
add
add
add
add
push
push
push
push
push
push
push
call
popf
add
pop
arpl
push
sahf
add
cli
add
jno
cld
icebp
cmpsl
mov
out
jle
jge
in
jmp
jo
icebp
rolb
movsb
add
push
jle
mov
nop
add
add
sub
pop
pop
push
add
pop
leave
push
push
push
push
call
add
add
jp
mov
cmpsl
add
add
add
jmp
mov
add
add
add
std
shl
pop
add
or
push
push
push
push
push
call
outsl
add
mov
add
stos
push
add
add
cwtl
jns
roll
xchg
add
push
add
icebp
push
jl
je
add
add
add
pop
dec
ja
add
mov
add
add
cmpsb
add
lcall
inc
lcall
lea
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
movsb
xchg
int3
lea
pop
jmp
add
add
in
jbe
in
icebp
add
add
mov
push
insb
nop
mov
xchg
test
call
pop
push
push
push
lea
push
push
push
lea
push
call
xlat
cmpsb
jle
xchg
mov
add
add
sarl
add
add
add
jae
movsb
add
cltd
add
xchg
out
add
add
add
nop
roll
push
outsl
ljmp
nop
add
addr16
add
jae
mov
sbbb
in
leave
push
rol
not
pop
ret
push
shr
shr
lea
sub
pop
mov
push
xor
sub
inc
pop
pop
push
sub
sub
pop
pop
push
shl
xor
pop
pop
pop
push
sub
pop
leave
ret
xor
cmp
sbb
cmp
xor
adc
adc
adc
xor
adc
sbb
adc
popa
cmp
xor
adc
mov
add
mov
xor
mov
popa
in
fiadds
cwtl
mov
dec
cmpsb
push
in
adc
pop
lret
sub
hlt
xchg
inc
inc
adc
enter
fmuls
cmp
xor
adcl
dec
popf
addl
push
inc
loope
xchg
out
fwait
sub
or
mov
dec
daa
jo
push
jo
fimuls
fbstp
movsb
insl
fldt
sti
xlat
in
inc
sbbl
loop
leave
push
std
pop
xchg
sub
cmpsl
repz
ljmp
cmp
push
test
imul
mov
xchg
xchg
popa
pop
fs
xchg
test
cli
sbb
leave
std
mov
push
sbb
and
dec
mov
pop
jmp
movsl
sbb
sub
push
jp
stc
int
xchg
in
sbb
sbb
scas
cmp
mov
ja
mov
inc
push
and
std
cltd
mov
ja
push
sub
add
je
std
pop
push
pop
xor
fdivrs
inc
cmc
push
jg
push
mov
and
sub
mov
pusha
inc
scas
adc
aad
clc
out
aas
dec
xchg
cmp
out
shll
mov
dec
dec
jo
xor
jns
mov
mov
js
stc
ficompl
add
add
mov
mov
iret
andb
dec
adc
dec
jecxz
lcall
add
outsb
rolb
dec
out
push
jbe
jno
sub
and
fmuls
aas
push
stos
ss
cmpsl
lds
lahf
in
or
push
push
pop
dec
addr16
xorb
adc
push
aad
adc
js
sbb
sbb
mov
inc
and
dec
mov
or
pop
into
add
stc
jmp
sbbl
fistpl
clc
ds
dec
mov
or
lods
xchg
mov
dec
arpl
mov
lock
test
addb
sub
and
cmp
push
push
call
pop
in
mov
fidivl
xchg
pop
pop
or
mov
push
mov
pop
push
push
pop
inc
enter
and
xchg
nop
daa
das
aam
call
divb
stos
jno
subl
pop
js
std
call
add
pop
xchg
stc
bnd
push
test
mov
rcll
mov
jns
xchg
ljmp
pop
and
jecxz
push
lahf
popa
jle
loopne
mov
lahf
mov
adc
jp
pusha
outsl
scas
push
xor
pop
jmp
fwait
dec
imul
mov
mov
xchg
add
mov
rorl
insb
xchg
cmpsl
or
jl
in
je
xor
mov
xor
push
mov
cmpsl
mov
ret
dec
xor
repz
lret
outsb
popf
inc
and
push
add
cltd
sbb
jl
cmp
movsb
cmp
mov
sub
dec
xor
addb
jb
sbb
popa
or
mov
sub
fistpll
fmuls
and
test
jmp
in
pop
add
stos
mov
lret
jl
jle
jo
movsb
add
gs
pushf
fsubl
cld
cmp
jecxz
adc
mov
sub
pop
cmpb
aas
outsl
notl
sbb
sbb
int
cmp
lea
adc
cmp
int3
stos
jl
cwtl
lock
sbb
mov
cmp
movsl
xchg
into
inc
sub
jmp
jnp
jmp
xchg
mov
jmp
jne
xchg
ds
sti
jmp
imul
lahf
lret
lock
dec
shrl
inc
mov
jo
subl
nop
push
bound
pop
xor
insl
rcll
dec
mov
daa
scas
dec
scas
cwtl
xor
jg
pop
add
ret
movsb
adc
adc
lock
dec
pop
pop
lret
mov
xchg
pop
xchg
and
js
adc
inc
lahf
jl
sbb
dec
xchg
cmc
sbb
xor
cmpsb
aam
push
orb
pop
pop
inc
cld
mov
dec
sti
xor
xchg
or
mov
insl
push
fwait
sub
movsl
jb
fs
cs
loope
faddl
stc
push
jb
xor
and
shlb
adc
xor
add
sti
clc
lret
or
dec
and
dec
dec
pop
sbb
xchg
xor
dec
lods
test
pop
test
mov
int3
popa
sbb
jo
ficoms
dec
sub
lahf
out
outsb
push
fwait
mov
imul
mov
mov
cmp
shll
outsb
sti
bound
sbbl
insl
dec
lock
add
dec
loope
pop
xchg
pop
mov
mov
inc
xor
xchg
push
or
aam
scas
adc
jae
cmp
add
das
dec
aaa
add
pop
cmp
push
aad
pop
mov
cld
iret
shll
lret
mov
push
in
addb
xorl
icebp
lcall
rclb
arpl
popa
call
inc
or
aas
mov
dec
or
pushf
cmp
mov
or
adc
or
subb
in
mov
push
lret
push
and
in
lods
dec
fstpl
pop
or
test
scas
sub
mov
xchg
cmpsb
fistpll
stos
push
jg
loop
vmovapd
xchg
push
or
sub
stos
rolb
cs
push
mov
xchg
sbb
mov
pop
mov
push
std
or
out
mov
in
inc
leave
mov
and
iret
pusha
inc
or
int3
sub
aaa
aas
lret
into
jo
repz
xchg
in
add
sarl
push
fstl
test
fsub
ja
cmp
push
cmp
movsl
mov
adc
test
pop
push
popa
fidivrl
xlat
add
xlat
jg
incl
ss
pop
dec
pop
adc
rorl
pop
adc
xor
sahf
daa
mov
lret
or
adc
testl
outsl
mov
inc
sub
xchg
adc
mov
mov
fcomi
ret
mov
testb
fwait
cmpb
sbb
adc
in
push
popf
add
mov
ret
fldt
loopne
inc
xlat
fwait
inc
jne
sbb
sbb
cld
ljmp
out
xchg
push
test
xchg
mov
sahf
call
cmp
dec
lret
lods
jg
cs
pusha
pop
jge
mov
nop
cmp
mov
js
fldcw
mov
mov
sub
and
dec
mov
lcall
pop
and
data16
rcl
nop
or
xor
aam
xchg
scas
dec
pop
fwait
mov
insb
aad
leave
adc
sub
push
repnz
jbe
pop
push
movsb
cmpsl
push
stc
aaa
sub
pusha
sbb
ret
out
in
aam
gs
out
idivl
lcall
mov
test
leave
mov
xchg
adc
dec
in
mov
mov
pop
or
popa
int3
xor
jo
or
pop
stos
mov
cmp
or
and
imul
fmull
lds
aaa
sbb
cmc
mov
ljmp
dec
addr16
adcb
ffree
and
and
sti
jl
pop
inc
jne
mov
dec
pusha
jmp
sub
ret
mov
fwait
imul
repz
cmp
popa
push
lea
fildl
fsubl
and
mov
lods
pop
out
shll
pop
sarl
rol
xor
push
push
gs
movsb
faddl
aas
movsb
push
cmp
fisttpll
lock
mov
repz
int
iret
inc
xor
cmc
scas
xor
fmull
mov
rcll
rorl
mov
insl
add
inc
mov
popf
fisttpll
inc
add
xchg
ss
or
cwtl
inc
test
cmp
dec
jns
push
xor
cld
in
cmpsb
outsl
clc
cmp
addr16
ret
sbb
jg
and
stc
in
xchg
dec
in
and
and
rorl
or
xchg
dec
stos
mov
es
popf
adc
dec
and
stos
arpl
scas
in
movsb
sbb
icebp
xchg
mov
push
mov
mov
pop
add
leave
xor
mov
movsl
or
addb
mov
je
inc
jmp
push
jp
sbb
and
sub
dec
outsl
adc
push
test
xchg
cmp
mov
push
stc
imul
stos
clc
mov
or
shll
movl
cltd
push
enter
in
shlb
in
push
dec
mov
add
imul
movsb
jae
push
jecxz
push
out
or
jmp
test
push
lea
push
push
pushf
cld
sbb
ror
aaa
fcomps
ja
cmp
scas
mov
test
sub
fs
cmp
dec
pop
inc
cld
mov
xor
xchg
cmp
jae
subl
or
imul
push
ljmp
cltd
and
es
daa
inc
lea
das
add
pop
popf
push
lods
das
mov
sbb
xchg
adc
js
enter
xchg
sub
lea
pop
jno
jno
int
test
xchg
dec
mov
adc
orl
pop
aaa
adc
sbb
dec
mov
adc
and
ja
popf
sub
mov
cmp
cmp
bound
mov
bound
push
jl
shr
mov
popa
sub
mov
pop
mov
test
aas
sub
xchg
push
jmp
inc
popf
fimuls
and
stc
enter
nop
out
enter
fcomps
lock
popf
add
repnz
popf
call
adc
dec
pop
pop
lods
es
mov
adcl
pop
xor
data16
xchg
imul
sbbb
out
rcrb
cmp
aad
sub
inc
jmp
xlat
data16
movsb
aam
repz
sbb
sbb
xchg
ja
test
in
jbe
out
pop
sub
mov
pop
bound
in
mov
mov
pop
pop
xchg
adc
push
jno
mov
add
aam
mov
ja
aaa
out
cltd
add
lcall
fs
mov
cld
mov
mov
int3
fs
jmp
aaa
inc
xor
jno,pt
push
add
popf
jns
push
jmp
into
xor
jno,pn
sbb
bound
sahf
ret
cmp
fwait
std
mov
push
insb
cmp
adc
cmpsb
push
push
xchg
mov
mov
ret
fcmovbe
sub
xchg
fadds
out
syscall
jns
mov
cmc
adc
add
cs
sub
inc
push
fcom
lds
and
arpl
xchg
stc
mov
shll
ds
or
xchg
ja
pop
mov
pusha
xor
sub
daa
ret
es
dec
icebp
fistpl
and
movsb
xchg
jp
add
fstpl
pusha
dec
mov
movl
xchg
leave
mov
or
scas
scas
les
mov
push
sti
stc
data16
sbb
and
jns
stc
jg
and
insl
inc
dec
pop
sti
out
test
or
push
lods
push
rclb
popa
mov
sti
call
sub
push
fs
inc
into
pusha
cmc
mov
in
cmp
rclb
pop
pushf
push
ss
mov
bound
dec
cmp
dec
or
jb
dec
in
call
cmp
stos
sub
mov
jne
ss
pop
fdivrs
inc
jb
sbb
cmp
int3
pop
cmpl
in
and
cmp
xlat
mov
xor
andb
rdmsr
xlat
insb
fisttps
mov
or
daa
sbb
daa
xor
xchg
lock
lea
sub
inc
scas
imul
xor
aad
dec
sti
mov
outsl
popf
rorb
pop
xchg
mov
inc
mov
insb
jmp
das
hlt
push
mov
repz
push
jnp
xchg
inc
pop
lahf
cmpsb
dec
mov
adc
push
mov
in
dec
cmp
gs
inc
in
dec
dec
mov
add
mov
movsb
pusha
mov
mov
shrb
mov
mov
push
cwtl
repnz
adc
orl
and
xor
push
dec
shlb
dec
js
dec
jo
xchg
pop
sub
mov
clc
test
popf
jbe
push
shr
add
add
push
cwtl
cmc
repz
enter
pop
sbb
xchg
mov
daa
sub
pop
cmp
jg
sbb
mov
lods
inc
xchg
mov
mov
ss
lret
mov
push
nop
xchg
call
ljmp
enter
or
and
xlat
in
mov
in
in
test
test
dec
je
add
hlt
aad
aaa
mov
add
nop
xchg
jb
jle
fiaddl
xorl
dec
outsb
and
mov
inc
pop
negb
jle
inc
mov
sbb
lahf
es
iret
loop
sbb
inc
jns
cmpb
scas
pop
inc
lahf
dec
xchg
cwtl
loop
cltd
movsb
jns
mov
mov
loop
xchg
sub
mov
rcll
jnp
mov
jae
scas
rorb
mov
mov
outsl
imull
and
sbb
pop
xlat
pop
out
dec
mov
nop
aas
test
inc
cmc
divl
pop
repz
or
scas
pop
sbb
jb
ljmp
xchg
jne
push
imul
out
int3
mov
test
pop
cmp
mov
ds
and
pop
push
das
negb
or
sub
loop
jge
xchg
inc
mov
rorl
ja
ret
out
fwait
lret
dec
cs
js
fistpll
fcompl
decb
faddl
movsb
shll
jg
jno
cmp
push
aam
cmpb
das
fs
mov
fmul
int
cmp
mov
into
and
movsl
movsb
mov
mov
push
imul
adc
pop
dec
dec
test
pop
insb
loop
adc
sbb
mov
aaa
ret
in
xor
push
jne
int3
pop
pop
sbb
int
clc
cs
lds
or
cmpsb
ud2
icebp
loop
aam
mov
xchg
int
rcrl
arpl
inc
out
push
cmc
mov
xchg
add
cltd
test
or
out
pop
inc
enter
cli
push
imul
xor
insb
mov
ljmp
mov
jp
dec
jae
and
bound
add
xchg
dec
mov
imul
inc
dec
loop
mov
arpl
ljmp
fs
push
mov
mov
jge
out
fsts
xchg
scas
bound
sub
sub
fs
dec
jnp
pop
flds
add
movsl
sbb
inc
faddl
pop
divb
adc
pop
adcl
and
xor
scas
inc
int
or
xlat
fs
pushl
adc
sbb
pusha
push
ss
jecxz
push
dec
lds
cs
fdivrs
mov
sbb
jg
mov
insl
and
ljmp
pop
ss
xchg
inc
jp
sar
es
xchg
arpl
and
xchg
inc
or
or
nop
xor
sub
inc
sahf
adc
in
notl
insl
outsl
sub
stos
movsb
mov
orl
jne
pop
add
sahf
leave
insb
ret
mov
mov
inc
jo
sbb
adc
clc
adc
lds
cmp
stos
popa
xor
push
push
dec
and
and
xchg
mov
aas
inc
push
out
fsts
pop
cmpsb
xor
add
insl
lock
pop
push
pop
or
pop
clc
xchg
mov
jnp
bound
cmpsb
push
xor
rcll
jb
shlb
out
mov
xchg
adc
sbb
cmpsl
adc
cmpsl
and
mov
inc
adc
pop
in
pop
sbb
inc
sub
xor
cmp
sbb
xchg
lods
add
add
and
inc
fsubrs
mov
imul
mov
fisttpl
nop
mov
adc
mov
xchg
xchg
pop
test
xchg
insb
jecxz
hlt
adc
jmp
repz
out
sbb
stc
insb
repz
inc
hlt
push
shlb
xor
jg
sbb
add
adc
gs
sub
adc
int
cwtl
cmp
fimuls
pop
psubd
sahf
pop
stc
or
fcmovnbe
or
jae
test
inc
fmul
int3
xor
sub
jle
and
push
in
cs
jb
outsl
adc
in
jge
cmp
out
fsubp
push
jp
jb
jbe
std
pop
add
xor
sti
testb
mov
add
fcompl
sub
bound
shrb
fdivrl
pop
jns
dec
jne
cmp
into
outsl
aas
ljmp
outsl
movsl
sub
sub
dec
xchg
pusha
test
call
pop
leave
sahf
mov
add
test
adc
push
cmp
cmc
xchg
and
jne
out
jl
and
push
leave
nop
stos
stos
hlt
jg
cli
insb
and
mov
pushf
fidivrs
test
push
push
aaa
mov
lock
sbb
rorl
pop
pop
sub
mov
xchg
sbb
push
mov
lret
mov
cmp
cmpl
pop
jle
cwtl
jns
jne
fstpl
lea
mov
xchg
push
lods
lds
icebp
filds
sbb
in
imul
mov
loop
int
lret
xchg
jmp
mov
lods
test
and
jne
idivb
lods
sbb
outsb
pop
outsb
lock
jmp
in
out
in
mov
int
and
fwait
xor
adc
lods
int3
add
sub
mov
mov
or
xor
pop
or
sbb
fsubs
inc
cmpsb
cld
xor
imul
out
adc
adc
cmp
loope
cmp
push
shrl
cs
nop
movsl
or
inc
rcr
sbb
cli
xchg
and
and
js
sti
push
data16
out
jne
or
push
cmpsl
decl
movsl
cmp
insl
in
aas
mov
xor
mov
push
push
jg
js
outsl
sbb
or
fadds
dec
xchg
in
cli
xor
and
xor
bound
add
and
dec
lret
mov
mov
in
dec
or
sahf
sbb
mov
test
mov
jmp
jge
les
xor
ret
fnsave
sub
push
fstl
popf
mov
ret
xchg
mov
out
lcall
mov
mov
dec
push
inc
cmp
adc
das
mov
test
movsl
lock
ds
push
fists
cmp
xchg
or
gs
mov
sub
pop
mov
daa
xchg
int3
js
mov
adc
inc
push
add
into
adc
dec
sbb
ss
hlt
xchg
sbb
jnp
les
fistpll
push
lds
dec
jns
scas
push
stc
out
sbb
out
lret
sahf
and
add
xor
les
cld
out
adc
jno
mov
lret
js
movl
cmc
out
xchg
loopne
lods
pop
loop
dec
in
cmp
in
in
jecxz
adc
or
out
xchg
insl
jns
int
sub
mov
fidivrl
jmp
mov
pop
jle
sub
bound
mov
sub
push
cmc
inc
push
jl
lcall
icebp
icebp
in
mov
jb
bound
arpl
movsb
jae
fisubrs
sbb
sub
dec
and
add
out
xlat
lahf
jge
push
jp
mov
aaa
lret
aaa
incw
iret
xorb
pop
pop
xor
lret
loope
mov
adc
mov
jge
cmpl
pop
mov
pop
out
leave
push
les
scas
lret
xor
sbb
popf
into
repnz
in
in
pop
bound
lods
aaa
movsb
or
and
dec
mov
adc
cmp
lret
or
mov
jne
or
je
int
lret
hlt
insb
sarl
lcall
and
pop
jae
adc
push
ret
push
mov
mov
std
loopne
shlb
cmp
arpl
mov
pop
rcr
lret
jno
jmp
int
lds
push
cmp
cmp
movsb
subl
jo
dec
xchg
sub
cmp
imul
int3
out
xchg
out
roll
pop
mov
pushf
cs
dec
aas
stos
sbb
or
repz
sub
sti
pop
lea
inc
imul
shlb
sahf
cmpsl
push
loope
mov
lods
rcll
and
mov
pop
mov
dec
out
stos
xchg
dec
jmp
lock
ret
push
or
dec
testl
inc
cmp
fcomps
stos
mov
in
cmpsb
lret
adc
or
sub
push
push
stos
jne
imul
out
xor
xor
icebp
cmpsl
bound
add
jle
jns
outsb
stos
gs
and
lcall
icebp
aad
jne
mov
out
and
jae
mov
pop
filds
mov
mov
lods
ja
xor
jge
xlat
nop
mov
test
cld
inc
push
add
movsb
dec
pop
arpl
imulb
es
push
outsl
jp
clc
mov
cmp
mov
mov
jae
mov
fsubl
call
shll
into
mov
fxch
or
and
inc
in
mov
popa
es
inc
mov
xchg
fdivrl
mov
nop
sti
inc
and
ss
call
cwtl
or
repz
ja
or
sbb
cltd
xor
lods
dec
scas
cmp
jbe
adc
mov
rclb
jle
or
xchg
sub
pop
or
xchg
xor
dec
pslld
mov
jnp
ret
jmp
sub
mov
add
jbe
stc
outsl
xchg
mov
mov
sbb
neg
daa
jg
ljmp
or
xor
cmp
fdivrs
lods
dec
clc
je
movsl
test
repnz
gs
icebp
cmpb
lret
jbe
pop
xor
je
repnz
daa
cmp
popf
mov
addr16
outsb
or
das
daa
lock
stos
mov
in
std
adc
shll
xchg
out
or
cld
lods
sbb
xchg
cmp
ljmp
into
xchg
jb
add
inc
cwtl
addr16
imul
adc
inc
mov
pop
fisubs
push
fs
dec
sub
cmpsl
test
mov
and
add
repnz
jecxz
or
fnstcw
lret
mov
hlt
xor
icebp
xorb
adc
mov
pop
fiaddl
jp
inc
mov
das
rcl
adc
frstor
movsl
ja
mov
push
mov
dec
xchg
jmp
imul
push
test
pop
ljmp
iret
repz
mov
add
inc
jne
pop
sti
add
or
mov
xor
fimuls
adc
aaa
mov
lods
aas
or
cmpsl
iret
lret
out
mov
inc
ja
insl
rolb
roll
testl
sti
push
lock
sub
mov
aaa
push
inc
mov
push
add
jae
xchg
mov
xchg
lret
pop
xchg
cmp
iret
aaa
jg
in
mov
dec
mov
sbb
aad
adc
test
jnp
inc
es
dec
movsb
das
lahf
mov
xor
lahf
in
in
in
jge
out
jo
aaa
xchg
xchg
push
adc
mov
add
jp
daa
negl
iret
and
and
push
lods
or
daa
out
sbb
dec
dec
dec
jp
outsb
outsl
sub
ret
loopne
push
and
pop
orl
mov
jmp
gs
shrd
out
xor
mov
negl
stos
cltd
jl
ret
repz
mov
insl
jne
fadds
push
insl
mov
sbb
mov
cmp
pop
sub
call
fs
xchg
push
inc
out
test
jg
mov
andb
pop
mov
das
leave
mov
pusha
add
dec
jo
icebp
dec
test
adc
fnstenv
fcmovbe
inc
test
pop
pop
loope
sbb
stc
mov
inc
xchg
stos
popa
sbb
mov
andl
loop
mov
and
and
inc
sub
ja
xchg
sbb
int
mov
jb
out
xor
loop
outsl
pop
inc
es
sarl
test
add
cmp
mov
xor
stos
lea
cmpl
add
xchg
mov
sbb
sub
out
or
dec
cld
lret
mov
into
push
aam
or
imul
sub
or
mov
scas
fcoms
js
jg
cmp
rolb
ret
add
mov
xor
xor
fstpl
enter
xchg
cmp
adc
push
dec
pop
inc
lds
xor
jle
sub
repnz
cmp
movl
stos
fadd
xchg
into
les
daa
movsl
imul
jecxz
lret
xchg
push
cmp
xor
ljmp
dec
inc
add
lahf
in
cmp
mov
push
and
enter
and
jg
in
jae
add
mov
xor
dec
push
stc
es
cmpsb
pop
mov
imulb
sub
lret
ss
test
xlat
xorl
test
mov
pop
out
fs
sub
rcrb
push
dec
cmp
in
mov
push
or
push
jo
pop
xchg
mov
jno
fwait
mov
cli
cmp
jle
adc
mov
sub
daa
mov
and
sti
rclb
sarl
iret
and
nop
cwtl
xor
or
pusha
xchg
cmpl
push
fs
ljmp
out
out
ficompl
sub
mov
push
daa
mov
add
push
inc
cmp
lcall
xor
lea
mov
in
mov
sbb
jmp
in
mov
call
sub
mov
cmp
and
out
mov
out
jbe
aas
faddl
jg
or
pop
jmp
popa
aas
sub
dec
inc
xlat
mov
dec
cli
sbb
aaa
inc
in
cmp
movsl
mov
ret
test
and
nop
mov
dec
in
jg
outsl
repnz
sahf
and
or
scas
sbbl
push
inc
xchg
sahf
pop
pop
cmpl
outsb
aam
mov
mov
sub
leave
pop
xchg
pop
cmp
test
mov
and
out
loopne
push
aaa
out
imul
int
xchg
cld
sahf
and
cs
or
rorl
xchg
inc
xor
dec
into
leave
jnp
cmp
or
mov
sbb
or
jnp
mov
aam
mov
int
stc
xor
sbb
inc
shr
mov
jp
imul
mov
mov
mov
iret
aaa
test
push
sub
fstp
pcmpeqb
xchg
out
adc
ja
ljmp
movsb
daa
mov
jmp
mov
xchg
push
cld
adcb
fwait
push
stc
xor
bound
es
pop
rclb
es
clc
mov
test
lret
xor
test
jmp
mov
xor
mov
dec
mov
dec
dec
lods
jb
cwtl
sbb
daa
lods
icebp
outsb
or
leave
jo
movsl
xchg
jns
xor
mov
fsubr
aas
es
push
mov
scas
andl
popf
pop
jo
mov
sbb
cmpb
or
rep
mov
mov
xlat
push
mov
icebp
fcom
loop
repnz
inc
popf
dec
inc
test
pop
repz
jl
cltd
ret
mov
stos
push
ds
cmp
xchg
inc
lea
mov
inc
mov
movsl
jecxz
add
addr16
pushf
mov
shll
sub
test
popa
leave
mov
out
addl
in
inc
mov
stos
pusha
dec
in
mov
sub
or
notl
mov
inc
pushl
cmpsb
jo
fldenv
dec
sti
imul
mov
mov
nop
pop
sbb
ljmp
sarb
mov
pop
cmp
loop
testb
adc
pop
xor
js
inc
push
push
out
lea
mov
in
leave
push
jae
adc
loop
testl
xor
imul
iret
mov
mov
loope
dec
fistpl
jge
adc
add
rolb
stos
out
imul
push
jge
arpl
sub
and
cmp
inc
push
xchg
and
xor
mov
jmp
inc
fwait
movl
mov
inc
mov
in
adc
and
cmp
xchg
sbb
dec
insl
leave
fldenv
insb
xchg
sti
dec
sbb
ljmp
rorb
movsb
mov
add
xor
faddl
inc
xor
ds
push
cli
sbb
stos
mov
aad
fs
sub
xchg
xchg
jle
imul
jno
xchg
and
pop
inc
bound
loope
add
in
mov
aad
leave
clc
inc
inc
je
jmp
sub
pusha
add
out
lea
call
jg
jbe
xchg
push
lods
dec
jnp
xchg
or
mov
mov
rcll
or
ss
bound
mov
adc
mov
sub
ficompl
mov
cmc
or
bound
imul
iret
cmpsl
in
rclb
adc
cmp
dec
clc
sti
xor
rclb
mov
lods
mov
push
sahf
push
pop
xor
addr16
sub
jnp
dec
ds
sbb
fidivrl
sbb
add
xchg
mov
mov
push
fs
pushf
int
hlt
adc
iret
lock
push
jp
sbb
fdivl
mov
sub
jne
push
lahf
outsb
cld
mov
inc
int
aam
rcrl
mov
jns
out
in
fisubs
adc
addr16
test
adc
rcrb
test
cmp
pop
xor
sub
dec
pop
leave
lcall
dec
sub
sub
xor
int
js
mov
add
out
adc
mov
test
xchg
pop
cmp
test
test
jg
lods
mov
loopne
stc
addr16
js
adc
sub
insl
mov
mov
sub
in
dec
jbe
add
in
dec
push
sahf
inc
ss
pop
out
lcall
add
cld
adc
ja
jno
imul
je
rcrb
push
cmp
outsb
repz
test
jb
imul
mov
mov
nop
inc
sbb
dec
cwtl
mov
bound
movhps
loope
adc
int3
test
adc
push
and
out
pop
push
xchg
ja
orb
sub
fsincos
aaa
cmp
popf
dec
mov
ret
jecxz
jle
sub
mov
pop
push
push
add
mov
push
scas
lret
mov
mov
mov
sbb
add
dec
mov
dec
jl
outsl
test
dec
aad
mov
sbbl
jle
jb
push
mov
mov
arpl
sub
mov
int3
mov
out
mov
xchg
js
push
call
push
fwait
insb
rorl
push
les
and
rclb
out
adc
mov
mov
fwait
cmp
mov
sub
pop
add
dec
lea
mov
add
sbb
xor
mov
mov
aam
js
lahf
xor
mov
mov
cmp
jo
cld
mov
std
out
xor
push
pop
dec
mov
std
mov
fmuls
and
dec
mov
sub
shrb
sbb
testb
push
iret
dec
jb
negl
push
and
repz
daa
out
rcl
add
cmp
lahf
push
test
push
in
daa
add
ret
sbb
pop
test
push
movsb
inc
fisttps
xlat
sarb
push
mov
fbstp
sti
mov
loopne
jecxz
mulb
in
out
popf
jg
jl
mov
dec
stc
inc
out
or
insl
pop
mov
and
and
jnp
pop
cmpsb
arpl
push
das
pop
cwtl
sbb
mov
andb
adc
outsb
out
xlat
pop
and
je
hlt
test
rcr
or
mov
loopne
push
sub
or
adcb
je
xchg
xchg
mov
jecxz
mov
pop
mov
mov
mov
xchg
outsl
sbb
out
mov
pop
hlt
imul
out
or
es
pop
xor
inc
mov
mov
xchg
lods
call
mov
mov
mov
ret
cld
lods
cmp
adc
xor
xor
daa
jno
aam
lock
cwtl
mov
xor
clc
lods
sub
dec
pop
cmc
fadd
aad
inc
mov
icebp
jae
hlt
enter
adc
sti
and
mov
mov
movsl
daa
test
fdivr
lret
adc
jbe
fldt
inc
leave
adc
xor
xchg
rclb
cwtl
mov
arpl
fnsave
popf
cmp
sub
out
pop
xchg
sahf
dec
push
iret
jg
scas
ja
and
pop
insb
sub
ret
repnz
inc
cmp
les
xlat
cltd
filds
sub
inc
shrl
xor
add
lahf
sahf
jge
int
fcmove
leave
addr16
sbb
jecxz
push
xchg
out
mov
orps
int3
mov
jp
sub
inc
ret
scas
push
jmp
loopne
test
dec
insl
push
cs
orl
incb
aam
push
and
xchg
pop
xor
fsubs
mov
scas
jecxz
repz
cltd
nop
xchg
test
cmp
push
int3
push
lret
push
sbb
push
adc
jo
sub
sarb
int
xchg
stos
add
int3
fcmovnbe
gs
mov
or
jno
jl
mov
dec
add
lret
cmpsb
jnp
sbb
add
push
ja
sub
pop
jle
dec
fcmovb
into
xchg
scas
pop
jmp
xchg
jbe
mov
ret
mov
icebp
lods
mov
fidivs
loop
push
movups
lods
mov
xchg
movsl
mov
in
shr
jno
pop
rorb
into
adc
mov
clc
dec
push
lret
movsb
cli
repz
arpl
sub
js
jge
int3
movsb
sbb
movsl
mov
mov
test
outsl
lret
mov
scas
clc
adc
xor
in
ds
out
jae
cmp
mov
cmc
out
jbe
ret
call
stos
adc
mov
xlat
jns
jno
out
mov
cmp
or
mov
lds
in
lds
sbb
movsb
mov
add
lcall
xor
stos
xor
rcll
adc
pop
cmp
pushf
and
cltd
stos
mov
pop
mov
lock
dec
lds
mov
push
add
enter
mov
push
xchg
add
imul
fdivrs
lods
dec
ss
popa
xor
or
pop
add
push
mov
clc
mov
icebp
repnz
jns
pop
xor
mov
add
aam
pop
sti
dec
mov
insb
aas
jae
push
or
push
out
push
dec
sub
subl
xchg
jmp
insb
xor
and
pop
insl
xor
incl
mov
cwtl
lcall
push
js
or
ljmp
das
ljmp
mov
faddp
jae
test
cmpsl
jno
or
xchg
xor
xchg
scas
imul
jbe
xor
sbb
lcall
les
xor
xchg
inc
jae
movsl
outsb
xchg
xor
lock
ficompl
sub
sub
mov
in
aaa
scas
xchg
ja,pn
jno
mov
shl
fstpt
test
and
stc
xchg
cli
pop
push
movsl
daa
xchg
rsm
dec
shll
lret
mov
and
and
xlat
push
and
je
sbb
mov
dec
stos
iret
insb
push
inc
xchg
or
iret
pop
stos
dec
or
mov
cmp
les
dec
std
lcall
inc
testl
cs
dec
pop
xchg
lock
cmp
sbb
test
push
cli
stos
mov
jbe
and
int3
and
out
xchg
adc
rep
mov
and
fcompl
mov
lods
jbe
int
lock
lcall
mov
xor
sbbb
dec
inc
push
xor
stos
push
adc
xchg
pop
mov
push
adc
pop
add
cmp
pop
xchg
dec
or
ficompl
push
inc
mov
lahf
sub
cmpsl
jl
cmpsb
or
in
aad
fisttpll
fs
ss
ficoml
cmpsb
test
js
clc
scas
xchg
test
aad
mov
push
popf
data16
ja
xchg
test
sbb
mov
jecxz
inc
leave
rol
or
jo
sbb
movsb
fcmovbe
lahf
sbb
pop
mov
xor
mov
adc
jle
in
and
out
mov
roll
dec
jae
in
pop
out
lock
std
adc
mov
cmp
pop
ss
adc
popa
lret
js
jne
push
scas
into
ljmp
test
icebp
addr16
inc
and
inc
cmpsb
imul
add
cmp
sahf
pop
into
je
and
mov
or
or
loopne
aas
push
sbb
cltd
dec
fisttpl
loope
pop
push
fimuls
cmp
push
imul
add
mov
push
jp
jg
dec
cmp
push
ret
push
adc
cmp
adc
cmc
or
mov
or
mov
inc
cmp
or
hlt
cli
out
mov
jne
cwtl
aam
in
lods
sub
sysexit
inc
push
push
xlat
insb
mov
iret
and
lds
push
lods
xchg
cmp
inc
bound
stos
cmpsl
adc
insw
out
lret
scas
xor
jne
int
mov
inc
lcall
push
aaa
outsb
sub
pop
push
cwtl
loopne
in
xor
lcall
xor
pop
rolb
push
adc
and
mov
mov
repz
inc
int3
pop
repnz
cwtl
icebp
dec
push
sub
andb
popf
sti
andl
jg
mov
cmp
in
xor
inc
ljmp
in
loopne
xchg
cli
push
movsl
sbb
or
push
mov
sbb
jb
and
jecxz
dec
loope
stos
inc
pop
jp
cmp
cs
enter
jno
mov
xor
push
adcb
pop
pop
leave
cmp
imul
pop
popf
sti
mov
mov
in
jl
shlb
out
pop
sub
cwtl
inc
ds
inc
faddl
cmc
or
mov
ret
imul
inc
movsb
xchg
mov
mov
ret
cmpsb
outsl
add
das
or
lds
and
or
aaa
fadds
into
sbb
dec
or
push
xchg
or
rcrb
sub
push
pop
fs
dec
mov
cmp
pop
mov
addr16
mov
jno
cmp
fs
mov
adc
iret
mov
xchg
icebp
mov
adc
shrl
ja
mov
inc
xchg
ret
pop
jp
icebp
cmp
dec
mov
iret
stc
ret
jl
jp
aam
fst
xor
lods
mov
hlt
iret
inc
mov
ss
adc
or
xchg
cs
pop
loopne
jns
insl
dec
add
pop
jne
inc
lret
dec
lahf
dec
daa
sub
leave
negb
dec
int3
scas
lds
xorb
pop
repnz
lcall
stos
loope
or
cmpsl
mov
addb
into
leave
xlat
call
js
loope
fistl
or
cmc
es
add
iret
outsl
stc
pop
into
add
fucomip
mov
lret
fstl
outsl
fcomps
or
pop
inc
cmp
sub
pop
sub
push
test
xchg
scas
dec
dec
jg
sub
dec
stos
add
shrl
mov
das
outsb
xchg
or
mov
and
loope
addr16
out
dec
je
scas
inc
subl
frstor
push
lods
or
lods
cli
aas
jmp
pop
imul
int
cwtl
jbe
and
mov
push
mov
fptan
outsb
inc
jge
scas
movsl
ret
adc
fs
cmpsb
cmp
mov
jge
xchg
sub
sbb
lea
inc
xchg
mov
push
out
pop
ds
pop
fwait
cli
cld
and
xor
arpl
imull
int
test
aad
cmp
hlt
mov
jl
test
sahf
add
aaa
std
cli
ja
popf
addr16
sbb
popl
xor
sub
sbb
adc
or
push
mov
sub
mov
cwtl
add
into
mov
xchg
pop
inc
jns
js
movsl
xor
push
xchg
mov
cmp
jmp
andl
adc
push
pop
cmp
pop
mov
test
pop
dec
pop
mov
xchg
popa
jns
out
or
jmp
add
addr16
nop
data16
inc
xchg
mov
xorb
frstor
das
popa
cmc
xor
bound
mov
push
ljmp
sub
jae
into
jmp
ret
xchg
mov
mov
frstor
fiaddl
arpl
inc
push
out
xchg
andb
lret
xor
mov
stc
xchg
sahf
pop
push
or
pop
sbb
add
sahf
idivb
dec
add
das
jge
lret
jp
adc
fsubr
mov
fcomp
and
mov
popl
adc
push
sbb
ffreep
bound
jne
mov
aaa
loopne
and
out
adc
movsl
mov
cld
xor
inc
xor
xor
inc
repnz
cmp
mov
out
sbb
ds
cmp
outsl
cmp
or
push
andl
cmc
in
sbb
lcall
lahf
nop
test
mov
loope
movsl
mov
repz
xor
repz
mov
jbe
divl
push
mov
lcall
push
xchg
cli
xchg
fstps
fsubrp
pop
mov
sbb
adc
divb
in
pop
je
lods
or
incl
mov
jne
push
decb
into
xchg
cmp
adc
call
inc
xor
cmpsl
mov
popa
fisttpll
out
outsb
sarl
xchg
in
inc
test
sbb
push
xor
loopne
aas
pop
cld
cwtl
pushf
rolb
out
add
mov
xor
push
xor
cmp
sti
jle
in
mov
into
xor
mov
roll
pop
and
push
fcoms
bound
mov
in
sbb
int
sub
sbb
rcrb
xor
push
test
and
sub
movsb
insb
dec
cmp
aaa
pop
pop
aam
pop
inc
popf
xchg
inc
fdivl
loop
sbb
repnz
pushf
sbb
xchg
jl
popa
add
dec
addr16
xchg
cmp
lahf
fnstcw
lret
mov
jle
les
mov
pop
jmp
and
out
ss
lahf
decb
push
inc
or
test
and
jle
sbb
fs
neg
rcrl
ja
jmp
repz
dec
pop
je
idivl
pop
scas
lods
sbb
out
fiaddl
adc
out
test
xor
dec
pop
lahf
idivl
inc
popa
lret
int
jae
inc
pop
jnp
jmp
push
jno,pt
outsb
mov
mov
out
out
mov
pop
insb
leave
movsl
mov
sahf
ja
and
mov
int3
xor
push
aad
xchg
es
stc
or
mov
mov
mov
mov
sub
mov
gs
cmpsb
jl
adc
sbb
add
in
pop
inc
aaa
inc
mov
jns
push
int
into
shl
mov
outsl
cmp
inc
mov
dec
push
push
pusha
ja
out
call
push
push
test
add
insb
inc
adc
out
lock
data16
out
dec
adc
xchg
or
in
enter
popa
sbb
xor
cli
cmp
int
sbbb
ss
in
fists
inc
lock
insb
jns
fildl
pop
inc
repnz
mulb
sbb
add
add
dec
pop
cli
xor
mov
jecxz
outsl
js
sub
lods
out
sti
popa
scas
xor
xchg
testl
ljmp
pop
repz
pop
popf
pop
stos
mov
imul
icebp
ss
mov
xchg
dec
outsb
inc
lret
add
or
mov
push
or
out
popf
outsb
sub
daa
push
add
xchg
insl
xchg
add
ljmp
jp
xchg
and
mov
jg
mov
mov
imul
insb
sub
in
xchg
pop
mov
jecxz
xchg
pop
or
lahf
mov
daa
sbb
pop
pop
shrb
xchg
aas
push
mov
sbb
dec
push
mov
out
xor
jno
scas
rolb
push
bound
rorl
mov
or
cmp
xor
cmp
inc
cmp
imul
aad
push
fnstcw
mov
pop
xor
xor
push
mov
int3
push
cmp
or
loopne
cmpsl
lea
sub
mov
xchg
scas
mov
jnp
outsl
lret
clc
and
hlt
out
mov
adc
cmc
sbb
mov
test
jle
popl
dec
jecxz
jl
loope
lahf
xor
jle
test
xchg
sarl
sub
jnp
icebp
mov
mov
sbb
repnz
popl
adc
shrb
dec
cmpsb
imul
add
add
stos
xchg
cli
loopne
mov
add
incb
pop
mov
out
lds
xchg
jecxz
aaa
adc
movl
std
icebp
and
in
sahf
hlt
xor
mov
sbb
pushf
mov
push
xchg
scas
and
out
pop
jns
inc
out
neg
dec
or
add
or
dec
jbe
add
dec
push
sti
outsl
sbb
cmc
mov
loopne
popa
lret
popf
jns
popa
mov
movsl
pop
popa
push
xor
pop
add
inc
push
ret
and
mov
mov
or
and
dec
stos
lods
xchg
dec
mov
add
mov
cmp
jmp
loope
mov
mov
adc
sahf
testb
pop
and
pop
sti
pusha
cmp
hlt
mov
int
jp
shlb
les
repnz
mov
and
cmp
jmp
xor
sub
mov
lret
push
push
enter
popa
sbb
fcmove
pop
mov
mov
mov
testb
adc
xchg
mov
scas
pop
lahf
lock
lods
lcall
gs
icebp
mov
cmp
fiaddl
daa
cmpsb
mov
mov
lret
mov
mov
mov
rcrl
inc
ret
or
pop
popa
push
cmp
cld
fucomip
popf
sti
loopne
imul
insl
push
push
fcoms
imull
adc
mov
rorb
aad
mov
sahf
inc
jecxz
mov
sbb
sbb
sbb
jb
std
lods
mov
mov
out
xchg
jnp
and
sub
outsl
inc
daa
add
or
imul
rcrb
inc
fidivs
xlat
popa
das
xor
dec
outsl
inc
popa
pop
out
fbld
clc
sbb
mov
fisttps
fwait
mov
lret
sbb
xlat
jne
into
sbb
sub
or
sbb
mov
pop
mov
push
mov
xchg
mov
push
push
pusha
jb
add
lret
cmp
xchg
rcl
sbb
in
int3
xchg
inc
sar
push
outsl
mov
pop
dec
js
fcomps
arpl
imul
ja
rcl
std
jg
test
fs
mov
mov
fdivl
fdivl
test
call
loop
xchg
inc
orl
call
push
daa
xor
shr
adc
fwait
cmpsl
aam
xchg
fadds
add
js,pt
idivl
or
and
xchg
mov
xchg
inc
cld
jp
pop
jb
movsb
dec
addb
dec
mov
pop
dec
test
push
push
add
jnp
adc
xor
mov
xor
shlb
mov
push
sbb
call
dec
lock
pop
insb
divl
ja
pop
push
bswap
ds
mov
mov
pop
insl
bound
fstps
popf
andb
lcall
sbb
lock
mov
les
jo
dec
push
jb
js
aad
and
pop
das
add
fnsave
mov
adc
std
or
movsb
outsb
and
adc
jge
faddl
iret
fsts
js
mov
jle
dec
daa
ret
lods
sub
mov
cli
cltd
pusha
push
add
dec
cmpsb
push
pushf
push
pop
movsb
add
ljmp
or
rcr
mov
rolb
jo
js
ds
and
or
add
std
ficompl
push
fcom
rclb
mov
out
sar
add
daa
jae
clc
fneni(8087
scas
mov
xor
cmpsl
sub
jbe
mov
cmp
add
daa
push
les
jno
inc
add
lret
stc
pop
mov
mov
stos
add
ljmp
bound
pop
mov
in
rorb
jne
inc
push
mov
das
inc
adc
mov
jns
mov
sbb
add
movsl
mov
cmp
jmp
inc
int3
outsl
cs
movsl
fiadds
mov
mov
jns
fdivrl
out
push
out
push
inc
cmc
clc
fisubrs
cmp
lret
test
and
arpl
push
mov
jnp
loopne
pop
inc
cli
and
gs
inc
xor
cmp
inc
push
shrb
mov
xlat
mov
or
and
out
add
dec
xchg
in
repnz
stos
addr16
jo
icebp
push
and
inc
out
xchg
inc
mov
out
adcl
mov
cmp
add
push
imul
adc
cmc
fidivrs
mov
andb
mov
mov
push
dec
adc
add
jmp
xchg
dec
js
popa
inc
mov
pop
mov
ret
rorb
fadds
dec
and
inc
or
test
adc
dec
jl
test
push
imul
ret
repz
inc
ret
ds
cmp
pop
repnz
icebp
add
sbb
push
mov
inc
xchg
dec
xchg
xchg
sti
sbb
enter
out
sbb
insb
in
or
addr16
orb
xlat
and
fldt
lods
shll
jle
lret
xor
xor
stos
out
pop
dec
pop
ret
mov
rorl
mov
cmp
push
mov
mov
in
hlt
mov
sub
sbb
aad
in
pop
pop
push
ret
orl
mov
pop
repnz
fldl
mov
xchg
ret
add
sbbl
pop
mov
mov
nop
movsl
sbb
test
fwait
rcrb
mov
jbe
mov
xchg
mov
std
cmpsl
hlt
out
dec
add
dec
clc
add
add
test
aad
sub
fimuls
pushf
mov
lcall
js
dec
sbb
mov
jno
into
aam
mov
pop
mov
shll
mov
xchg
inc
andl
insb
mov
jg
sbb
out
outsb
out
pushf
jle
cltd
sub
xor
sub
and
jns
lods
or
dec
mull
fnsave
or
cmpsb
push
cmp
xor
dec
xchg
movsb
pop
ret
es
or
xchg
dec
mov
subl
lahf
pop
push
jmp
push
pop
or
das
adc
js
test
xlat
jl
push
scas
mov
mov
frstor
sub
pop
jo
popa
jne
push
fisubs
jmp
cmpsb
cmc
xchg
mov
sbb
out
fcmovu
inc
hlt
xchg
pop
hlt
daa
scas
cli
or
dec
in
lahf
pushl
add
mov
sbb
mov
pop
or
push
or
push
xchg
adc
push
mov
out
mov
pop
imul
int
jg
test
inc
and
and
stos
in
scas
mov
push
jne
ljmp
inc
jecxz
mov
push
std
bound
mov
popa
sbb
subb
pop
xchg
mov
test
pushf
ljmp
ds
stos
sub
mov
dec
stos
push
mov
inc
in
int3
nop
inc
leave
mov
dec
push
dec
icebp
adc
push
mov
or
lds
iret
jmp
in
nop
adc
out
pop
pop
repz
jbe
in
lret
mov
cmp
hlt
lcall
pop
dec
shlb
scas
pop
aaa
jp
push
ret
pop
inc
mov
cmp
pop
dec
aaa
push
lcall
repnz
aad
xchg
sub
rorb
add
xor
decb
sbb
insl
jns
xchg
cmp
aas
out
jnp
aam
sub
jmp
pop
popa
popa
ja
hlt
mov
popa
hlt
cmp
pop
xchg
and
jecxz
mov
repnz
adc
clc
dec
aas
cld
mov
and
aad
sbb
xchg
xchg
or
outsb
in
out
ficomps
mov
mov
jp
pop
ret
clc
adc
stos
and
pop
rcll
repnz
inc
pusha
in
dec
and
int3
push
loope
hlt
mov
in
shll
or
adc
fiadds
pop
bound
sbb
push
stos
jmp
out
xor
sub
int3
pop
jl
sbb
push
in
jp
ja
mov
inc
add
mov
xor
insb
add
stc
xor
push
mov
pop
stc
sub
and
xchg
insl
inc
dec
adc
andb
pushf
dec
arpl
and
mov
push
stos
sub
popf
and
xchg
imul
shrl
sbb
or
repnz
das
int3
jno
pusha
lea
inc
mov
and
dec
dec
and
ljmp
ljmp
or
and
dec
pop
cmp
imul
xchg
adc
xchg
pushf
add
jnp
das
in
sub
push
mov
jno
out
or
and
xor
and
adc
nopl
or
sbb
fisubs
adc
rclb
addl
adc
pop
add
inc
adc
cli
js
hlt
ror
imul
stc
aam
sbb
shl
and
mov
xor
push
das
cli
stos
mov
lret
stos
pushaw
out
lds
or
pop
mov
lods
pusha
sbb
lds
lds
dec
push
andb
mov
ret
xchg
movsb
loopne
es
ret
fildll
mov
insl
pop
jle
cmpsl
aaa
fs
ret
jno
rcrl
xchg
cltd
mov
fwait
lds
mov
jg
mov
data16
outsb
sbb
daa
std
dec
daa
inc
scas
iret
dec
dec
push
cmp
xor
dec
and
pop
inc
in
lock
sbbb
divb
push
add
subb
jns
jne
lods
push
mov
mov
push
loope
sub
insl
mov
inc
dec
cmpsb
jae
mov
jecxz
cltd
pop
clc
cmp
bound
mov
mov
in
add
mov
and
mov
negl
push
insl
pop
mov
push
xor
mov
popf
mov
jp
fidivrl
pop
hlt
out
sbb
mov
mov
repz
mov
adc
data16
mov
cmp
test
xor
filds
jo
mov
iret
and
aaa
mov
int
shrb
xor
xor
fiadds
dec
fistl
das
mov
cmc
fnstcw
mov
cmc
or
test
mov
mov
push
stc
jbe
ds
jae
jae
mov
cmp
and
pop
lcall
std
jo
jmp
pop
lret
xchg
ret
sti
popa
jne
mov
bound
sbb
xchg
dec
into
and
inc
xor
je
shr
sti
inc
jp
std
imul
mov
xchg
xor
lret
xor
cld
js
aas
pop
or
xor
xchg
push
fs
adc
popa
movsb
jne
aam
pushf
add
xchg
cmp
add
das
jmp
js
dec
jbe
mov
mov
sahf
push
cld
adc
cld
pushf
in
clc
popf
dec
xor
cltd
xchg
mov
in
xchg
clc
popf
push
in
xchg
and
push
xchg
outsl
sub
sarb
mov
xorl
pop
les
js
movsb
sbb
scas
cmp
js
enter
push
mov
cmp
fstpt
push
jbe
pop
and
dec
jnp
imul
js
pop
jg
sbb
subb
jl
std
pop
xchg
pusha
push
loopne
sbb
mull
xor
xchg
out
in
inc
cmp
mov
gs
lds
int
inc
dec
jge
loopne
pop
dec
add
into
adc
fmull
sahf
add
fcomi
shr
mov
push
jae,pt
xor
inc
loop
sti
test
lods
sub
punpckhdq
push
jb
into
out
frstor
rcl
pusha
xor
dec
ret
sbb
aam
and
cwtl
call
nop
in
pop
ret
lcall
in
shlb
fs
imul
js
leave
ss
mov
es
sbb
mov
xchg
fiaddl
jmp
mov
xchg
rcrl
jne
jmp
mov
scas
outsb
nop
in
adc
sub
xchg
bound
sub
pop
xchg
fsubrl
jnp
push
xchg
sahf
out
xchg
stc
inc
cltd
std
or
enter
mov
push
mov
test
inc
cli
jne
fldt
jg
shrl
sbb
ljmp
sub
xchg
adc
aam
mov
cmp
cltd
jae
add
popa
jp
and
cwtl
push
fsubrp
mov
jo
add
orb
adc
cmp
movsl
pushf
andl
jne
stos
mov
cs
push
sbb
or
test
push
lds
es
andb
dec
fcompl
mov
es
jae
mov
jns
sub
lret
sub
mov
xchg
aam
lcall
push
inc
xor
jo
add
cmp
inc
adc
outsb
and
std
cmp
insb
out
loopne
and
xchg
jl
push
insb
cmpsb
into
mov
and
ret
inc
js
add
ja
sub
in
adc
mov
pop
enter
orl
sub
imull
sub
pop
push
gs
cld
out
pop
rcrb
jg
mov
stos
inc
or
cmp
adcl
mov
mov
in
inc
mov
ja
mov
push
sbb
mov
jno
sti
dec
mov
sahf
out
jo
pop
push
add
push
pop
outsl
mov
stos
outsl
xor
pop
lcall
insl
out
shrb
cli
mov
cmp
xor
incb
insb
mov
jg
sbb
xor
xchg
jp
mov
jge
insl
sbb
in
mov
add
jns
pop
push
rorl
push
push
jns
mov
add
repz
out
xchg
in
lcall
adc
mov
mov
ret
sbb
mov
push
popf
jge
loopne
lcall
mov
adc
ret
mov
aad
xchg
sub
mov
bound
dec
xchg
mov
pusha
insl
xor
stc
push
mov
pop
aad
ljmp
in
stc
cmp
inc
sti
in
or
jl
sbb
int3
cmp
sahf
pop
dec
scas
mov
shlb
cwtl
mov
bound
xchg
pop
xchg
mov
mov
js
movsl
addr16
pop
push
adc
adcb
fimuls
dec
push
jae,pn
fs
inc
inc
rcrb
pop
insl
aaa
in
fisubl
pop
dec
ss
xor
mov
outsl
mov
pop
push
cmp
es
jae
lods
sub
movl
aas
sahf
loope
mov
mov
repz
inc
jns
fmull
shrb
mov
in
sbb
cltd
xchg
popf
mov
xor
popf
rorb
test
sbb
pop
out
sub
movsb
ljmp
cmpsl
call
out
jbe
push
aas
in
mov
sahf
add
xchg
loope
jbe
cmc
push
fs
daa
stos
popl
sbb
cmpsl
sbbl
push
pop
sbbl
mov
scas
cmp
sub
mov
mov
xor
mov
fstpl
call
dec
cmp
pop
cltd
mov
fildl
into
sbbb
aad
jecxz
push
ja
sbb
jno
or
xchg
push
jb
xlat
mov
xchg
push
stos
dec
js
jb
in
sbb
or
sub
xchg
idivl
inc
data16
outsl
mov
data16
daa
aas
pushf
out
in
cmpsb
push
pop
arpl
loopne
leave
push
dec
pop
pop
mov
push
and
cmp
jmp
sbb
sub
dec
push
cwtl
nop
pop
xor
add
dec
loop
bswap
mov
adc
imul
lahf
out
mov
pop
imul
pop
push
adc
or
fcompl
int
cwtl
lods
popa
xor
loop
fstps
pop
mov
ret
cmpb
pop
aad
pop
lock
aas
in
or
neg
jmp
inc
stos
scas
shr
repz
pop
xor
mov
pushf
sahf
popf
pop
std
std
out
pop
sub
out
popa
mov
shlb
ret
lret
xor
clc
fcompl
test
sub
push
roll
push
fucomi
sub
jp
fstps
lret
mov
test
loopne
scas
lcall
subb
mov
xchg
mov
cmc
inc
cmpsl
inc
jl
nop
mov
sub
mov
dec
loop
and
arpl
sub
cld
add
mov
in
aam
lds
pop
pslld
push
jnp
adc
dec
mov
add
outsl
adc
and
jo
ret
daa
add
cmpl
in
mov
mov
call
mov
xchg
dec
cmp
dec
dec
test
or
jns
cmp
in
dec
int3
pop
or
das
mov
dec
pop
adc
xchg
outsl
lret
nop
stos
pop
jmp
subb
inc
push
call
dec
ret
loopne
cmpsb
cmpxchg8b
inc
jp
jbe
jecxz
mov
add
xchg
sub
push
insl
out
rcll
repnz
pushf
jle
xor
icebp
lgs
dec
mov
daa
into
aam
push
daa
lods
jp
lea
jge
jbe
cwtl
or
jmp
or
jbe
mov
mov
xorb
fildll
sahf
xchg
push
sbb
aaa
xchg
popa
cmp
in
jmp
xchg
sbb
lods
cmp
pop
sub
ljmp
push
and
xchg
mov
jae
pusha
mov
xorb
iret
int
mov
pop
xor
jle
scas
cmpsl
lahf
nop
sahf
repz
inc
adc
fs
ret
fcmovb
pop
mov
or
push
movsb
cmp
and
pushl
stos
and
les
mov
movsl
jno
imul
outsb
fwait
outsl
repz
insl
rcll
adc
addl
dec
and
add
rcrl
in
mov
jo
xchg
or
xchg
mov
adc
sbb
add
rcr
add
sbb
inc
aas
ret
mov
lret
adc
xchg
mov
pop
in
xchg
jle
cld
mov
pusha
insl
out
mov
les
xor
lfs
or
xor
inc
call
in
inc
sti
mov
cmp
out
cmp
daa
mov
jo
mov
fldcw
cwtl
mov
or
aam
cwtl
pop
xchg
and
incb
test
imul
pop
lock
shrb
cmp
sbb
out
sbb
test
enter
and
lods
add
aad
cmp
loopne
ficoms
lret
mov
imul
into
scas
je
addb
jge
xchg
je
fiadds
pushf
pushf
jb
pop
out
int
dec
mov
adc
cli
dec
push
push
cs
fbld
mov
movsb
lods
jae
das
pop
and
mov
push
fs
lock
bound
cmp
sahf
xsave
sti
lahf
fstpl
test
cmp
lock
sub
jo
inc
pop
or
dec
sub
rcll
mov
hlt
mov
jae
and
cmc
sub
adc
dec
out
mov
pop
fidivrs
ja
jnp
dec
push
xlat
mov
lret
dec
fldenv
dec
aaa
mov
pop
pushf
and
lds
push
call
mov
clc
dec
lret
test
movsl
push
lds
fdivr
xchg
ss
daa
ret
loope
pushf
iret
lret
mov
outsl
mov
mov
mov
mov
les
sbb
lea
mov
nop
cmp
outsl
push
cmp
sbb
loopne
mov
pop
ja
xor
sahf
fmull
add
sub
cmp
leave
cmpsl
mov
and
mov
adc
or
cmp
and
xchg
xchg
pop
out
repnz
pushf
sbb
and
jne
and
ja
mov
or
int3
pop
andb
xor
sub
in
test
fldl
mov
leave
aas
movsb
imul
sub
xorl
in
es
inc
cwtl
or
fwait
push
shrl
xchg
xlat
sub
jbe
rcll
fimull
enter
jle
add
xchg
shrb
mov
cs
aad
jmp
or
ret
aad
adc
xchg
movl
adc
lea
outsb
aaa
insb
lea
fldenv
lods
sbb
or
sub
jno
jecxz
cwtl
and
lret
cltd
lret
stos
mov
jmp
ja
cmp
stos
push
mov
jo
inc
mov
sub
out
xchg
leave
sbb
xor
lods
push
shrb
pushf
outsb
lock
mov
sbb
repz
inc
inc
and
xor
pop
sbb
out
inc
sti
inc
mov
imul
lea
fst
mov
pop
mov
sbb
cmp
ret
xchg
adc
je
adc
jmp
fstpt
xor
vsubss
insl
in
sub
xlat
pop
jo
es
xchg
mov
movsl
popf
xchg
sub
and
mov
or
sarl
jne
repnz
cmp
pop
scas
loope
fistl
out
adc
adc
orb
lods
sahf
mov
fsubs
ja
movsl
into
mov
jns
mov
cmpsb
pop
dec
cmpsl
pop
dec
add
pop
out
mov
test
mov
mov
fst
sbb
mov
lret
xchg
sbb
or
xchg
inc
sti
xchg
stos
and
out
rcll
adc
popa
hlt
mov
negb
jbe
fucomp
mov
inc
call
inc
xor
sarb
jmp
xchg
mov
inc
mov
mov
rorb
add
and
push
lods
mov
lods
add
jnp,pt
lret
add
jle
add
mov
lds
hlt
add
add
mov
movsb
mov
mov
push
mov
mov
and
add
int
or
and
fcmove
push
orl
mull
leave
inc
adc
mov
push
outsl
fsts
out
and
mov
cs
lods
popf
mov
mov
xchg
adc
add
adc
nop
xchg
jmp
lret
or
mov
sub
insl
jg
arpl
cmp
es
pop
dec
outsb
test
xchg
test
shlb
movsb
add
testb
fcmove
dec
sbb
cmp
loop
ret
jae
cli
jl
fs
pusha
sbb
pushf
add
out
gs
outsb
adc
xchg
add
mov
inc
adc
mov
mov
sti
int3
in
sub
outsl
jle
fmul
in
pop
shl
imul
popa
dec
int
dec
sbb
add
mov
int3
addr16
inc
mov
pop
aas
ds
or
es
or
xor
add
leave
loopne
dec
in
sahf
mov
mov
xchg
jno
in
mov
inc
xor
out
adc
add
mov
ds
mov
adc
dec
push
dec
pop
or
mov
hlt
xor
cmpsl
clc
scas
icebp
punpckhdq
nop
lods
cmpsl
insb
or
mov
imul
pop
ficoms
adc
pop
adc
add
lahf
mov
imul
icebp
pop
imul
xchg
cmp
jbe
fnstsw
fstpt
data16
lret
jp
imul
inc
popa
push
shlb
ljmp
lds
xchg
or
push
lods
mov
mov
fists
jle
and
xorb
clc
andb
int3
sbb
jmp
xor
in
sbb
into
jecxz
data16
fcom
or
sbb
ds
ret
dec
aaa
sbb
dec
jle
lret
imul
mov
adc
push
and
lcall
pop
pop
test
and
orl
adc
add
in
add
add
sub
in
aad
dec
xor
xchg
rcl
adc
adc
test
mov
pop
and
add
lcall
out
leave
jmp
addr16
scas
aad
sbbb
ds
mov
in
addr16
pop
mov
mov
dec
cmc
in
popa
sub
test
fisubs
dec
in
jns
adc
xchg
add
inc
loop
sub
jl
jle
out
out
sbb
sti
xlat
mov
movsl
shlb
jo
cmp
adc
push
data16
leave
add
mov
mov
sub
pop
adc
in
xor
cmc
cmp
xchg
iret
ficoms
inc
mov
jns
repnz
cltd
jl
fucomp
jmp
jge
popf
dec
leave
rcrb
jmp
jle
and
push
repz
cmp
adc
push
xchg
sub
data16
out
out
jg
add
rcrb
je
dec
mov
lods
jb
imul
mov
into
sub
pusha
cmp
testl
mov
sbb
push
sub
push
cld
or
jmp
sahf
fistpll
jae
cs
pop
sbb
cld
hlt
xchg
sub
out
je
aaa
imul
cli
mov
stos
sbb
mov
mov
loop
lret
stos
jne
test
jg
sbb
outsl
int
iret
pop
out
outsb
xchg
scas
inc
sub
lret
cmpsl
xchg
lahf
adc
mov
xchg
mov
incb
mov
or
stos
pop
xchg
rcll
sub
movsl
fs
or
push
into
sti
jge
sub
imul
clc
sti
dec
cmp
aaa
and
stc
xchg
in
xorb
add
and
std
push
fstpt
and
pop
lcall
jae
pop
ret
cld
aas
arpl
mov
je
rcr
cld
mov
lds
stos
imul
pop
js
fnstenv
mov
cmp
aas
jne
mov
xchg
add
and
sbb
inc
add
test
aas
mov
jle
ljmp
lock
jge
sub
and
scas
jp
int
adc
outsl
cmp
js
rcl
cmp
sub
add
stos
call
pop
js
and
loopne
push
cmp
add
sbb
arpl
outsl
in
ret
adc
push
xchg
shll
cld
clc
test
cmp
ljmp
icebp
adc
mov
xor
sub
push
sti
dec
mov
cmp
push
in
movsl
in
push
fisubrl
dec
pop
sbbl
adc
jle
mov
les
xor
or
and
loope
mov
xor
hlt
loope
mov
xchg
loope
sarl
arpl
and
jecxz
mov
add
dec
inc
fstpt
push
es
mov
or
addb
pop
mov
adc
movsl
and
cltd
js
cmp
les
mov
push
cld
mov
jmp
jl
cmp
in
gs
ret
test
fdivl
sbb
std
clc
jecxz
lahf
test
mov
jl
jo
sub
outsl
cmp
dec
dec
jno
sarl
dec
enter
movsb
fimull
cmp
inc
lea
jp
fcomps
pcmpgtw
hlt
imul
cmc
xchg
mov
aas
mov
ja
int
adc
and
lcall
movsl
es
push
repz
cwtl
loop
and
mov
stos
add
lret
enter
push
sbb
dec
addr16
lods
popf
xchg
decb
shrl
scas
test
pop
mov
nop
push
fisttpll
mov
sub
outsl
je
lfence
cwtl
test
xor
outsl
dec
xchg
bound
jecxz
pop
xlat
push
fisubs
and
xchg
dec
ds
lods
xor
jl
cmp
jle
lret
shrb
sub
mov
push
add
inc
mov
add
jmp
pop
shl
xor
test
out
ret
adc
fldl
jo
jae
mov
repz
movl
loopne
mov
mov
add
xor
divl
inc
aad
dec
cltd
das
mov
cwtl
adcb
mov
mov
in
mov
fwait
adcb
cmpsl
nop
test
repz
pop
addr16
push
in
lock
jnp
stos
int
lahf
cld
nop
stos
mov
imul
es
loop
cltd
sbb
pop
gs
cmp
push
mov
inc
and
cmpsl
and
and
pop
lea
in
mov
push
hlt
sub
jno,pt
mov
lds
cmp
out
pop
push
push
data16
jbe
mov
std
into
jecxz
jno
jae
hlt
lahf
sti
pop
mov
sub
imull
hlt
clc
add
cs
lods
sti
in
mov
lock
je
outsb
outsl
cmp
pop
dec
cmp
mov
fstpt
jae
add
rcr
int
jg
fisubs
push
push
enter
int
inc
and
sbb
mov
xchg
cld
cwtl
push
mov
push
iret
out
push
sbb
and
mov
test
inc
xchg
lods
dec
inc
push
inc
rorb
lahf
test
pusha
mov
add
push
repz
dec
in
rorb
pop
dec
fwait
cmp
int
xlat
fs
cmp
fs
fildl
add
fcmovbe
pop
xchg
test
add
fstpl
loope
add
hlt
mov
or
mov
fwait
xchg
mov
pop
test
into
sub
inc
shr
xor
pop
adc
mov
out
arpl
ja
fmull
jno
sti
jnp
scas
mov
loope
and
inc
or
fsubrs
out
lds
sbb
add
inc
add
int3
ret
and
mov
je
pop
adc
stos
inc
jno
add
mov
popf
lea
adc
mov
jae
xor
and
push
aas
rcl
iret
adc
je
add
insl
dec
ret
adc
lds
popa
ss
hlt
sbb
sub
das
add
movsl
int
cmp
pop
adc
out
std
aam
ror
add
adc
pop
ja
es
dec
lahf
sub
pop
mov
test
inc
adc
sar
fcompl
outsl
in
movsl
mov
adc
dec
gs
cmpsb
adc
ret
bound
out
push
mov
sti
lahf
js
lcall
ja
push
aad
in
outsb
clc
push
sbb
adc
das
test
je
shr
adcl
cmp
mov
xor
or
into
add
mov
mov
out
popa
push
pushl
cli
push
add
mov
adc
cmp
lret
dec
cmp
adc
or
je
lds
mov
out
in
repz
nop
mov
sbb
jb
in
sahf
cmp
testl
xor
mov
rcrl
mov
inc
cmp
insb
and
xor
sbb
push
jnp
pop
decl
pushf
lock
rcll
dec
test
or
xchg
shr
sbb
pop
jge
ss
stos
push
mov
fsubrs
addb
inc
fcoms
shr
jae
jmp
sub
pop
inc
rclb
xchg
cmp
push
aas
insb
fnstsw
aaa
imul
xorb
sub
sarb
sub
loope
mov
push
jbe
cltd
pop
pop
lods
or
pop
mov
mov
movsb
fstps
pop
push
ljmp
shll
fiadds
popa
in
lods
test
call
rorb
inc
cltd
loope
inc
nop
bound
adc
sub
add
sbb
mov
rcrb
stos
pop
dec
add
adc
enter
dec
shrl
and
aad
in
jecxz
das
cmp
push
inc
xlat
jg
sti
loope
cmpsb
mov
loopne
jo
pusha
xchg
arpl
test
lds
fidivrl
lcall
mov
cmp
push
pop
aas
jge
in
or
fisubl
adc
mov
lret
movsl
les
adc
imul
movsb
mov
test
jns
xor
push
out
push
insl
in
mov
dec
xor
jg
inc
add
dec
xchg
push
xchg
outsl
and
adc
mov
inc
cmp
cwtl
cltd
or
and
inc
adc
andb
pusha
mov
lds
iret
test
lock
fnstcw
push
xchg
cwtl
lcall
not
repnz
fdivrs
sahf
inc
inc
into
addl
iret
nop
xor
arpl
sub
xchg
sub
fwait
loopne
mov
clc
dec
mov
or
mov
mov
aaa
add
lret
and
ss
addr16
sahf
push
mov
pushl
pop
jge
imul
fisttpll
sub
scas
dec
shl
xor
or
push
fldenv
fwait
into
icebp
les
xor
push
fisttps
mov
push
and
scas
mov
xlat
in
mov
cmpsl
out
roll
pop
jae
mov
cmpsb
aaa
jbe
sbb
dec
cli
dec
push
jo
insb
insl
add
sbb
in
inc
popa
push
je
xor
inc
dec
vaddps
jp
dec
cmp
cs
xchg
add
mov
sarl
add
cld
roll
and
data16
adc
lock
push
dec
in
xchg
mov
fdivrs
xor
out
lret
lret
push
lahf
sub
mov
or
add
mov
insb
xor
add
ret
mov
lods
adc
es
dec
aas
jg
bound
lahf
jmp
pop
les
pop
mov
mov
jecxz
std
mov
rol
popf
fisubs
push
mov
mov
ds
lock
sbb
sub
jbe
add
fwait
dec
mov
mov
shll
lods
mov
xor
jg
dec
mov
out
sub
push
jmp
jecxz
pop
into
mull
and
push
fnsave
jmp
jae,pt
cmp
push
pop
cwtl
or
mov
repz
loope
sbb
imul
in
push
rorl
mov
std
in
stos
andb
repnz
test
cmpsl
into
add
mov
xorl
or
push
outsl
xchg
jmp
out
xor
xchg
das
cwtl
adc
push
mov
cmpsl
pop
xchg
adc
jae
push
lea
adc
push
pushf
cli
movsb
iret
inc
jmp
mov
enter
or
je
ja
cmp
mov
cwtl
and
mov
or
test
cmp
addl
xchg
xor
mov
hlt
arpl
add
cli
xor
mov
pop
insb
push
lret
xor
mov
aaa
shlb
pop
adc
loopne
in
lods
sub
cmpsl
aam
cmp
and
mov
mov
pop
retw
cld
adc
insl
mov
jge
jbe,pn
aaa
movsl
and
adc
test
adc
jl
int
cwtl
dec
xor
xor
shlb
pop
outsb
scas
lea
or
inc
jp
cmpsb
aad
xor
flds
iret
pushf
cmp
or
out
cmp
stc
jp
dec
jge
adc
xchg
or
icebp
jne
xchg
mov
out
mov
outsb
orl
push
les
lret
dec
aad
xchg
cmpl
or
mov
pop
cmp
das
lret
mov
or
mov
dec
and
jb
jmp
das
sbb
inc
sub
out
push
xchg
xor
stos
out
movsb
fnstenv
cmc
aad
mov
xor
jg
add
addr16
cld
ficoms
xchg
aas
insl
adc
xchg
mov
xchg
std
jne
mov
inc
and
or
xorb
int
ljmp
or
mov
aas
orb
jb
ljmp
xchg
add
shrl
scas
addr16
loope
mov
fldz
sbb
jnp
mov
add
and
and
jns
xor
stc
push
popl
inc
or
insb
sub
mov
inc
dec
or
sub
cmp
icebp
adc
push
sub
lcall
fdivs
inc
lock
mov
xor
mov
cmpsb
jnp
jl
js
test
sbb
pop
cwtl
int
jbe
scas
insb
pop
fsub
mov
mov
arpl
mov
ds
stos
loop
jle
sub
adc
mov
jne
xchg
inc
sbb
lret
sub
pop
jp
dec
push
xchg
add
movsb
jecxz
add
loopne
and
mov
cmp
dec
mov
lret
pop
or
add
pop
int
push
jg
and
shll
stos
inc
jp
adc
xlat
jl
dec
arpl
xor
mov
xlat
inc
es
loope
xor
jnp
insl
push
cltd
cmp
sbb
es
sbb
and
adc
testl
pop
data16
xchg
rol
add
fnstcw
loope
jle
xchg
inc
cs
mov
xlat
test
fwait
movsl
lret
dec
mov
mov
jecxz
clc
or
outsb
pop
sbb
lock
imul
das
cltd
ljmp
scas
lret
adc
jo
pop
call
cmp
out
jle
popf
dec
gs
sub
jg
jo
out
inc
pop
cltd
iret
subb
xor
pop
jp
adc
rol
mov
test
lds
and
aam
fdivrs
push
lahf
imul
jns
fists
lret
ret
jo
mov
icebp
lock
je
imul
inc
daa
inc
inc
addl
jnp
loopne
mov
ja
ret
mov
push
fdiv
jno
push
cmpsb
outsl
movsl
pop
adc
insb
frstor
sbb
inc
imulb
stos
fwait
adc
mov
rol
iret
cs
in
mov
loopne
jle
testl
or
aas
les
and
mov
mov
ja
or
mov
out
xchg
ret
lods
cmpsl
cmp
shll
mov
popf
push
xor
add
dec
push
ret
pop
test
call
fsts
pop
mov
js
fistpll
imul
rcll
pop
sub
sbb
inc
jge
nop
cmp
out
out
push
xor
movsl
jecxz
xchg
subb
fiaddl
hlt
mov
fldt
and
mov
mov
dec
mov
inc
inc
stos
out
ljmp
ds
into
adc
cmp
sarb
mov
ficompl
mov
cmp
mov
cwtl
sarl
sub
cld
jo
jbe
jbe
shlb
mov
or
pop
cwtl
jp
adc
dec
push
pop
dec
add
in
outsl
fidivs
mov
push
add
dec
lcall
cld
ret
int
outsl
sti
sub
dec
mov
add
inc
daa
int3
adc
cld
fwait
aad
adc
loopne
cmp
cmp
inc
lret
cmp
loopne
aas
daa
mov
in
and
aam
cs
pop
and
sbb
pop
out
rclb
adc
add
push
loop
mov
pop
adcb
ret
inc
adc
in
xchg
aaa
dec
aam
cli
imulb
push
lods
jmp
fidivs
mov
jb
add
dec
jecxz
and
icebp
jns
and
and
fiadds
jne
lret
push
cli
sbb
fistpll
imulb
or
je
cmp
cmc
mov
mov
es
int
mov
xor
popa
dec
mov
test
outsl
sub
repnz
xor
jl
sahf
or
xchg
lods
pop
pop
cmp
movsb
scas
cmpsb
test
popf
xlat
out
lret
nop
pop
sarb
cmc
and
aad
imul
pop
pop
icebp
sbb
stc
xchg
xor
jg
mov
push
mov
lea
fcmovbe
or
jmp
mov
aaa
and
xchg
cmp
sahf
xchg
xorl
inc
aaa
sahf
stos
or
mov
mov
mov
mov
sti
add
scas
int
in
add
jl
in
loopne
fdivrs
sbb
jo
cmp
jle
bound
lret
push
js
push
sahf
sbb
and
mov
and
insl
inc
sarl
lds
sbb
cld
repz
mov
scas
adc
sbb
cmpsb
push
mov
adc
vpaddsw
stc
cmp
mov
out
xchg
leave
xchg
push
out
call
inc
out
in
add
ret
outsb
pop
xchg
dec
js
push
mov
push
or
mov
or
push
push
jne
xchg
out
dec
xor
into
clc
mov
test
xchg
fwait
push
insl
sahf
push
lcall
xchg
ds
sbb
out
shrb
or
fdivrl
fstpt
mov
lods
jo
cmc
ja
aad
push
cmc
lahf
jg
cmp
js
adc
xchg
mov
sub
ds
fucompp
fldenv
std
xchg
lcall
ret
pushf
ficoms
js
lods
stc
mov
lods
sub
popl
xor
adc
mov
subb
jg
lea
fnstenv
std
push
cmp
mov
rcrb
rorb
mov
push
cltd
push
push
mov
fidivl
mov
adc
bnd
xor
in
iret
mov
jno
std
and
ss
insb
into
dec
pop
xchg
clc
out
xchg
in
stc
cmp
inc
popf
enter
sbb
vmovaps
fstpl
ljmp
bnd
pop
adc
daa
push
cmp
in
jne
sbb
adc
pop
sub
push
popa
mov
xor
lock
cmp
inc
cmp
cmpsb
or
movsl
dec
mov
sti
jge
mov
mov
push
adc
push
xlat
add
xor
mov
sbb
mov
cmp
ss
in
dec
inc
mov
rcrl
fidivs
mov
test
test
dec
popa
jp
int3
or
outsl
add
ficomps
cmp
ja
mov
std
jnp
pushf
int3
ret
push
lds
ja
or
cmp
or
xchg
jo
out
and
fists
sbb
push
fadd
cld
xor
lods
faddl
inc
mov
mov
outsl
or
andl
cmp
frstor
and
es
xor
jmp
dec
or
ss
lret
test
jmp
inc
mov
or
or
shrb
es
mov
push
lods
xchg
shrb
push
lods
xor
stos
mov
mov
rol
shll
out
fstps
adc
add
dec
xor
xlat
rcrb
or
and
or
push
jp
int3
outsb
adc
push
jns
add
xchg
pop
push
adc
push
lds
das
mov
xor
xlat
rorb
xchg
clc
loope
je
cli
xchg
stc
xchg
ficompl
push
xor
dec
mov
mov
adc
mov
dec
sbb
dec
cmp
jnp
add
mov
sbb
xor
ja
add
push
aam
mov
mov
sarl
lea
sbb
sub
popf
movsb
dec
movb
movsb
sbb
insl
mov
xchg
nop
hlt
inc
out
into
pop
inc
fs
sub
push
sbb
out
ret
cmp
movsb
xlat
mov
xor
shll
insb
int3
pop
jmp
mov
adc
test
xchg
lret
or
add
aam
sub
leave
mov
cmp
xlat
pop
inc
in
jmp
and
sub
jbe
push
lods
jge
aas
pop
add
sub
sbb
icebp
pop
push
push
mov
adc
and
push
sbb
scas
ljmp
sarl
push
cmp
add
sarb
out
adc
scas
ret
xchg
fsubl
push
adc
mov
push
jp
and
dec
cmp
xchg
dec
push
int
mov
adc
pusha
loop
push
hlt
addr16
adc
rol
or
leave
adc
repnz
mov
in
mov
fcompl
jmp
imul
loopne
lahf
xchg
push
mov
fildl
les
fildl
fistpl
inc
xor
pop
xchg
sub
scas
scas
push
ss
loope
add
add
pop
cli
aam
in
out
push
cltd
cwtl
rclb
loope
or
scas
frstor
rep
or
and
add
outsb
lret
popa
pop
pop
sbbl
pop
sbb
rcr
test
push
push
sub
loopne
adc
shlb
cmp
int3
mov
cmc
sahf
xchg
add
mov
sub
push
es
fsubrs
icebp
jno
in
out
push
push
cmpsb
enter
jmp
inc
bound
mov
popa
pusha
push
sub
repnz
loop
inc
shlb
je
insl
adc
lods
outsl
mov
adc
nop
sbb
fisubrl
pop
dec
out
mov
insb
insl
jp
adc
sub
ja
repnz
mov
movsl
mov
and
pop
in
sbb
xchg
scas
addr16
daa
add
movsb
in
xchg
cmpsb
pop
aas
mov
flds
fldl
aam
push
addr16
xchg
jl
mov
sbb
insb
daa
sub
jl
lret
ret
sbb
pop
lods
clc
std
and
aad
lods
jno
lret
sahf
jo
jecxz
mov
and
inc
rclb
xor
mov
pop
in
xor
js,pt
adc
cld
xor
in
xchg
push
push
jo
psubsb
or
and
sub
cmp
fiadds
cmpl
inc
fdivrs
sub
gs
scas
mov
and
mov
xor
fnstcw
adc
mov
mov
gs
xchg
inc
pop
cmp
push
sub
stc
jmp
enter
inc
jnp
stos
inc
mov
inc
loop
jecxz
add
add
cld
jne
lret
loopne
mov
adc
out
jo
lahf
jecxz
sub
popf
pop
ds
jnp
rclb
lahf
call
adc
jecxz
pop
std
adc
pop
xlat
xchg
sahf
cmp
push
shrl
add
or
les
hlt
push
lods
fucom
dec
icebp
fadds
shrb
xor
sub
and
mov
mov
aam
icebp
das
pop
test
jl
fdiv
or
scas
and
shl
data16
lods
inc
insb
dec
mov
inc
aam
and
sbb
inc
mov
xchg
jbe
xor
jecxz
sbb
cmp
in
xchg
test
push
push
nop
pop
inc
mov
dec
sbb
pop
mov
pop
dec
mov
fwait
mov
enter
mov
cmp
aam
adc
jmp
sahf
pop
sub
jecxz
cmc
and
or
dec
pusha
mov
inc
call
lahf
mov
pop
movsl
pop
and
jg
scas
imul
jg
mov
xor
shlb
jne
fwait
xchg
inc
jl
sarb
pop
fisubrs
add
repnz
pop
ljmp
sti
xchg
out
xchg
in
scas
jmp
cmp
aaa
dec
push
movsl
add
jle
cmp
mov
insb
lahf
add
lret
lds
ror
inc
adc
repnz
add
cwtl
mov
shrl
xlat
lcall
push
js
push
sbb
sub
cmp
not
ss
cwtl
bound
fbstp
jg
jecxz
stos
cmp
inc
mov
in
pop
pop
outsl
dec
pusha
insl
ss
jo
mov
in
popf
fwait
shll
sub
pop
cmp
fidivrl
aad
or
aad
push
push
pop
mov
pop
mov
movsl
nop
fwait
or
je
xor
push
popa
or
std
add
dec
sahf
clc
lea
or
mov
mov
cmp
repz
xchg
jge
lods
lahf
dec
fsts
stc
inc
stos
mov
add
push
xor
xchg
jle
dec
popa
in
mov
mov
mov
lock
cmp
outsl
mov
iret
pop
and
adc
mov
add
out
xorb
push
sub
pop
add
jb
out
insl
popf
lret
sar
pop
fnstsw
in
stc
mov
mov
test
ljmp
jp
jmp
out
mov
ss
sub
push
cmpsl
adc
cmpsb
ret
pop
stos
pop
lods
mov
lahf
iret
jo
push
pusha
push
lret
ds
add
das
fcmove
mov
aam
dec
add
adcl
jmp
inc
loopne
lds
nop
mov
out
das
mov
pop
scas
das
xchg
jns
test
pop
and
std
cs
mov
hlt
xorl
lahf
or
fisttps
cld
mov
mov
movsl
inc
jns
rcr
fnstcw
sub
and
mov
mov
mov
insb
mov
pop
pop
xor
cmpsl
scas
clc
jae
nop
jg
loope
add
add
stc
mov
into
sti
cmp
into
inc
iret
inc
or
inc
inc
stos
mov
add
stos
data16
cmc
call
dec
jl
sahf
aam
repz
push
ss
popf
repnz
cmp
add
ffreep
mov
lds
push
and
push
mov
aaa
ds
mov
adcl
mov
xor
jnp
add
fidivrl
cmp
insl
push
jno
scas
cltd
fwait
test
adc
xchg
adc
pop
push
dec
out
or
jne
sub
or
das
xchg
lock
insb
mov
jecxz
mov
jl
mov
rclb
xor
repnz
int3
cmovp
adc
aas
pop
stos
sub
out
xor
xor
les
test
pop
mov
cmpsl
loope
mov
movsb
sbb
pop
int3
loopne
in
mov
inc
push
sahf
mov
push
outsb
push
test
cmpsb
outsl
sarl
cmpl
and
mov
mov
adc
adc
shll
stos
pop
sbb
sub
das
aam
scas
push
mov
xchg
fsubs
mov
in
data16
rcr
sbb
lret
adc
sbb
aam
add
int3
mov
jle
push
mov
xchg
mov
nop
ficoml
out
xchg
andb
xchg
and
dec
pop
mov
or
pop
adc
rol
jb
dec
int
jo
push
imul
icebp
movsb
jmp
into
je
and
mov
orb
push
lds
aad
cmp
xchg
mov
into
mov
imul
adc
test
fdivrs
aam
shll
pop
enter
roll
push
sub
xchg
call
sub
mov
pop
inc
mov
cmpsb
aaa
scas
arpl
pop
cmpsl
lds
inc
aaa
je
adc
jle
xchg
dec
insl
scas
fistl
fistl
mov
imul
out
nop
mov
adc
xchg
aas
cld
xchg
mov
pusha
dec
sbb
sub
ficompl
mov
mov
xor
sbb
outsl
addl
fidivl
jb
sub
popf
cmc
xchg
inc
ss
jbe
sti
lcall
daa
fidivl
and
cmpsl
lcall
das
mov
imul
xchg
dec
clc
cmp
adc
push
fidivrl
notl
dec
iret
xor
add
cmpsb
lock
sub
jg
sub
insl
fldenv
insb
mov
in
cltd
sbb
xchg
pop
mov
ss
dec
cmp
sub
lahf
cmpsl
sub
cwtl
ja
rol
mov
ljmp
sahf
mov
sbb
lret
mov
add
push
aad
xor
push
mov
addr16
or
cmc
das
lahf
mov
movsl
sub
fs
add
pop
pop
add
mov
out
lods
dec
data16
adc
mov
mov
testl
mov
repz
adc
and
lock
xor
or
cld
pop
push
ret
inc
cmp
out
cmp
in
jge
iret
lods
imul
pushl
cmp
mov
repnz
jg
jge
stc
imul
or
dec
xchg
lahf
pop
lock
sub
ret
fisubs
lea
sbb
jno
add
mov
adc
addl
mov
xor
jge
mov
fdivrs
mov
or
xchg
cltd
pop
roll
sub
scas
inc
jle
insl
lcall
btr
aad
xchg
inc
adc
jb
adc
das
mov
incb
icebp
add
std
or
mov
push
cmp
add
xor
repz
mov
call
adc
cmp
dec
cmp
iret
mov
ljmp
leave
insl
jmp
divb
aad
cmp
cmp
es
push
pop
pop
push
push
imul
insl
mov
lods
push
testb
push
jmp
out
cmpsb
inc
sub
push
pop
sbb
daa
sub
test
push
mov
pop
pop
adc
sub
test
adc
cld
incb
js
out
cmp
sbb
bndldx
and
xchg
dec
fwait
lods
test
mov
shl
sub
push
nop
out
dec
jae
jl
pop
in
pop
js
xlat
test
out
js
cmovle
pop
mov
adcb
lock
das
shrb
mov
movsb
jb
into
push
enter
loope
push
fstpt
pop
cmp
lcall
movsb
test
in
inc
adc
rcrl
jecxz
jp
mov
mov
jge
adc
out
addb
sub
enter
ds
push
sbb
xchg
xchg
pop
xor
iret
sarl
jb
roll
add
popf
cmp
into
jle
lods
sti
lahf
hlt
mov
out
int3
cmp
lret
sbb
shll
add
pop
add
sbb
mov
sbb
mov
push
insl
cmp
push
sub
lods
push
xchg
xor
outsl
into
push
mov
imul
movsb
adc
add
mov
sbb
aad
rcrl
add
push
enter
test
daa
inc
in
aam
jl
enter
mov
shl
ficoml
cwtl
jbe
fs
loope
cmpsl
add
enter
mov
js
shl
int3
cld
lock
insb
adc
pop
cld
leave
stc
dec
lock
jg
pop
test
aaa
adc
xabort
pop
inc
pop
test
fsubrp
fiadds
sub
std
jo
adc
in
add
test
movsb
mov
push
adc
push
adc
mov
je
mov
push
mov
xor
lea
loop
dec
sub
xorl
cmc
pop
scas
push
es
je
les
cs
pop
out
nop
dec
ret
dec
mov
insl
jno
aam
insl
dec
lret
dec
jbe
xor
jb
out
popl
mov
push
outsb
and
in
lods
popa
mov
jo
loopne
push
lcall
and
imul
subl
into
popf
sub
test
jns
inc
shlb
std
inc
enter
mov
cli
insl
je
mov
ljmp
mov
in
mov
xchg
clc
std
push
jns
sbb
xchg
xor
jo
addr16
lea
xchg
stos
pop
or
lock
sub
jl
adc
pop
push
iret
daa
xor
mov
and
push
xor
jo
sub
xlat
out
aam
mov
mov
jo
xor
dec
dec
je
jp
notb
cmp
inc
mov
pop
sub
outsb
les
sub
or
fstl
pop
sub
cmp
and
xor
push
inc
les
cmc
fistpl
das
call
pop
inc
je
push
sub
adc
pop
movsl
xor
push
ds
aas
rorl
or
or
scas
cmp
xchg
dec
fnsave
push
pop
ficomps
loopne
cli
into
mov
mov
or
lods
jno
push
jmp
mov
cltd
lcall
loopne
pushf
not
xlat
daa
and
xchg
fildl
jge
and
sub
fsub
divb
mov
xor
and
pop
jae
push
int3
dec
xchg
lahf
mov
or
xlat
mov
and
imul
push
insb
loop
xor
in
lock
js
mov
jbe
pop
ss
js
inc
inc
cmpsb
cmp
movsb
jmp
std
lret
into
mov
push
mov
adc
arpl
jno
and
test
aaa
sub
mov
in
adc
pop
xchg
sub
pop
push
adc
adc
aas
xor
mov
mov
shll
jnp
mov
loope
inc
cs
imul
out
dec
and
dec
dec
pop
in
jno
fdivl
mov
fwait
add
shlb
or
cmp
lea
adc
add
cmp
fcos
ljmp
cmp
mov
mov
cmpsl
fstl
xchg
mov
cltd
fisttpll
cmp
jmp
push
cmp
add
in
mov
dec
jbe
je
inc
cmp
imul
push
xchg
adc
or
lods
ret
pop
jbe
lods
sahf
repz
jne
dec
mov
fcomi
adc
xor
in
out
in
popf
cmpps
mov
cmp
xor
je
sbb
pusha
lods
adc
repnz
jo
pop
lods
dec
inc
mov
xchg
push
js
fsub
mov
mov
jae
dec
testb
mov
out
mov
mov
hlt
xchg
ds
shll
dec
loope
sub
pop
mov
and
xor
or
mov
in
sub
xchg
pop
hlt
pushf
hlt
or
or
add
popa
inc
dec
out
pop
mov
les
or
pop
xchg
mov
ja
loope
into
push
lods
ret
scas
xchg
pop
add
scas
inc
push
jb
jns
inc
pop
cli
fldcw
cld
loope
ss
mov
xchg
test
out
lea
pushf
fadds
js
xor
lods
pop
loopne
xor
bound
sahf
pop
jl
inc
xchg
int
sub
xor
insb
cs
xor
mov
cmpsl
negb
and
push
call
cld
or
in
test
lock
idiv
dec
jmp
adc
or
xchg
mov
iret
in
push
rclb
popa
pop
out
in
lcall
cs
jae
imul
ja
add
jns
rolb
test
or
pop
push
aam
push
lods
inc
mov
or
popa
sub
jg
sbb
xchg
push
inc
in
aas
jmp
repnz
add
jcxz
insb
repnz
sub
xchg
scas
test
imul
dec
mov
cmc
mov
xchg
jge
loope
daa
or
sub
pop
jb
pop
inc
rorl
xor
and
out
dec
orb
cmpsb
stos
das
jbe
icebp
pop
add
jo
xor
push
popf
mov
and
rolb
dec
jno
dec
sbb
mov
jns
adc
mov
pop
leave
push
jmp
push
bound
adcl
mov
jo
mov
daa
dec
inc
fs
movsl
pop
adc
fcmovnbe
pushf
mov
pop
sbb
scas
cmp
mov
rcrb
and
out
xchg
stc
push
push
andb
js
es
mov
stc
mov
jp
pop
sti
dec
pushl
and
adc
sbb
pop
stos
pop
push
pop
cli
sahf
sbb
cltd
jecxz
xor
mov
leave
in
fwait
sub
inc
push
xchg
jo
test
add
and
pop
mov
je
xchg
jb
or
shll
xor
xchg
mov
xchg
pop
pop
lock
mov
xlat
adc
movsl
inc
stos
ss
mov
inc
mov
and
pop
mov
ret
sbb
and
daa
lods
gs
les
out
ret
fisubl
in
fstps
xchg
mov
in
jo
fcmovbe
fbld
inc
cmp
outsl
in
sub
cmp
push
xor
push
pop
mov
inc
ja
je
push
cmpsb
cmp
xor
outsl
xchg
adc
mov
lds
rcr
subb
cmp
xor
iret
stos
je
in
shll
enter
inc
outsb
or
loopne
dec
mov
fwait
mov
jle
xchg
sbb
movsb
fwait
push
push
jecxz
hlt
loop
push
jo
cmp
mov
ss
orb
jo
mov
xchg
movsl
lock
cmp
roll
cwtl
dec
pop
cmpsb
movsl
gs
out
call
lea
push
hlt
cltd
sahf
or
cmp
push
mov
dec
out
das
repnz
and
sar
cwtl
jno,pt
inc
mov
push
in
fdivrl
push
inc
adc
pop
in
mov
xorb
fistl
xor
call
jge
xchg
sub
push
jns
pop
cmp
in
jecxz
mov
or
icebp
cmp
mov
mov
test
in
lret
fmulp
push
mulb
sub
push
test
sub
out
scas
out
dec
or
fistpll
jnp
pop
add
mov
ret
int3
adc
mulb
div
mov
sahf
jmp
or
cmp
addr16
sub
pop
into
adc
or
fstpl
aam
addr16
std
cmp
jp
adc
and
cmc
fwait
shr
icebp
inc
lcall
xor
sub
pusha
and
sar
cmp
pop
push
pop
cwtl
jecxz
lds
ljmp
loop
mov
mov
clc
icebp
int3
in
adc
mov
pop
inc
cltd
pop
mov
negb
sub
addr16
pop
ja
pop
lock
fdivrl
mov
inc
scas
fisubl
fabs
mov
sbbl
mov
cmp
mov
scas
int
in
pusha
mov
push
and
fldcw
add
sarb
xor
cmc
jg
jae
loopne
daa
xor
xchg
lods
pushf
or
movsl
jge
gs
sbb
test
arpl
mov
lret
cmp
sbb
mov
ret
mov
pop
mov
in
dec
dec
scas
adc
int3
imul
pop
sub
icebp
nop
cwtl
out
mov
out
ds
repz
jge
or
jg
in
or
jbe
mov
cmp
and
sub
dec
shlb
ja
dec
mov
lods
fiaddl
clc
sub
and
call
lret
or
cmp
repz
into
aaa
fnstcw
add
xlat
jbe
jmp
mov
xlat
imul
enter
fwait
sbb
outsl
mov
cmp
and
push
ja
mov
jl
test
push
dec
sarl
loope
pop
jge
dec
push
mov
scas
push
mov
outsl
lret
movsb
push
mov
test
mov
sbb
movsb
and
mov
rcrl
ffree
jle
icebp
ret
mov
sub
mov
push
push
pop
sbb
mov
xchg
dec
dec
jl
gs
in
sub
and
pop
dec
pcmpgtb
mov
sbb
add
js
xor
jecxz
in
inc
push
orl
mov
sbb
xchg
test
mov
stc
rcrl
mov
pop
dec
out
int3
cld
inc
cltd
cmp
test
sub
sbb
sbb
push
and
aad
xchg
mov
int3
ja
jae
mov
call
fildl
ror
imull
jbe
sbb
movsb
mov
xchg
or
sub
iret
cld
mov
jb
sub
push
pop
out
mov
mov
in
cmp
sbb
aaa
push
rcrl
js
enter
jb
je
push
jmp
xor
les
xor
popf
push
out
inc
push
out
and
cmpsb
cmc
je
jno
dec
cltd
ljmp
cs
cld
dec
sbb
jnp
xchg
pop
jbe
jns
mov
sbb
and
pop
jno
in
inc
inc
jo
xor
out
jle
stc
sub
jnp
ss
test
lret
push
loopne
xor
xchg
std
dec
pop
sub
int
fsts
cmp
add
mov
pop
cmp
lock
xor
cs
jmp
arpl
jmp
cmp
cld
outsb
pop
or
out
push
or
xchg
stc
xchg
xor
xchg
in
inc
hlt
pop
adc
gs
xor
or
cmp
bound
repnz
ds
jb
fsubrp
sub
pushl
mov
sbb
push
xor
add
test
in
mov
es
mov
sub
or
mov
ljmp
fucomip
mov
into
mov
add
xchg
int3
mov
daa
hlt
fldcw
add
inc
je
aas
cmc
in
fcoms
sub
inc
sbb
push
aad
in
and
clc
lods
int3
pop
mov
mov
repz
in
add
test
push
add
and
movsb
xor
stos
cmp
js
jns
rorb
jecxz
cwtl
cmp
popf
add
pusha
ja
jnp
mov
fisubrl
jl
jnp
xchg
fs
add
lock
fs
inc
gs
pop
sub
lret
fsubrs
sub
mov
hlt
pop
or
jae
lods
push
inc
adc
movsl
pop
andb
push
push
push
cli
push
out
and
cwtl
cmpsb
xchg
testb
int
mov
xchg
push
mov
cli
icebp
pop
arpl
outsb
sbb
and
jbe
jae
loope
je
sbb
shl
mov
out
outsl
cmp
cld
mov
jge
mov
or
das
mov
cmp
dec
inc
sub
loop
les
divl
jno
push
push
sub
inc
and
es
sahf
sbb
dec
or
xchg
lret
push
fmul
jg
inc
shl
jnp
mov
sahf
and
push
jp
inc
outsl
ds
dec
xchg
clc
jne
stos
es
scas
xor
push
aad
or
mov
lock
pop
and
lods
pop
mov
push
and
jecxz
sub
dec
push
mov
ret
mov
loope
push
fldt
mov
mov
inc
push
adcb
pop
mov
nop
stc
loopne
jmp
mov
mov
sbb
ficoms
cli
dec
inc
mov
test
dec
jmp
ret
mov
sbb
icebp
cmp
repnz
adc
ds
mov
mov
cmp
mov
ficomps
cmp
jl
dec
cmc
fnstenv
sbb
lods
mov
push
fstps
arpl
adc
push
and
sub
sub
fimull
movsb
pushf
dec
es
imul
jae
test
adc
push
pop
cmp
jl
rclb
or
jl
insb
sbb
jecxz
fildll
outsl
fidivrs
jb
xchg
xchg
imul
scas
xchg
adc
mov
ljmp
repz
fnstcw
gs
push
and
orl
sbb
into
dec
adc
shlb
pushl
cmpl
dec
daa
loop
push
leave
ficoms
cmp
cs
add
loopne
mov
imul
xor
dec
testb
pop
xchg
shr
pusha
dec
push
std
sbb
jg
mulb
outsl
fstl
shlb
mov
adc
test
aaa
cld
sub
inc
call
out
test
mov
mov
pusha
jp
vunpcklps
push
push
sbb
negb
pusha
mov
inc
cmp
out
loopne
stc
fstpl
add
aam
out
and
xor
stos
add
push
xchg
adc
rcrl
decl
aam
mov
sarl
xchg
in
fldcw
add
pop
push
sbb
pop
mov
push
test
push
stos
movsl
jge
mov
loop
jae
sbb
adc
mov
adc
rolb
or
fnsetpm(287
and
push
xchg
push
push
test
pop
adc
jle
fistpll
cmp
xchg
push
mov
addr16
movsb
orb
cmp
jge
fadd
and
dec
and
xor
xchg
sub
fnstcw
and
aas
xor
lods
and
lahf
cli
mov
dec
sub
scas
add
push
pop
or
int3
or
jne
push
mov
jl
ret
mov
jnp
cmpl
jae
shrb
mov
adc
jle
xor
cli
hlt
cmp
cwtl
js
jle
mov
notl
mov
fistpl
pop
fwait
mov
dec
fisttps
popa
mov
push
sbb
insb
adc
push
bound
js
sti
mov
js
ja
cs
enter
clc
and
jb
mov
lcall
hlt
out
das
fstl
jae
push
lcall
imul
xchg
addr16
adc
push
pop
stos
xchg
pop
fadds
xchg
icebp
in
andl
push
ficoml
imul
cltd
inc
shl
das
xor
pop
arpl
inc
lahf
dec
push
xor
in
jns
mov
lret
je
xchg
stos
jmp
ja
sub
sub
mull
sbb
popf
lock
jae
sub
push
scas
xor
push
ja
sub
mov
sbb
je
cmp
addb
inc
jns
stos
gs
jbe,pt
mov
push
daa
adc
jp
pop
stos
adc
dec
das
sbb
dec
jnp
sarl
jle
and
testl
xchg
sbb
enter
hlt
pop
arpl
lods
loop
mov
push
dec
cmc
xchg
ss
sub
mov
mov
aaa
hlt
sbb
jge
push
sub
popf
test
sub
or
cmp
sahf
sub
push
out
push
mov
add
push
sub
shlb
mov
xchg
pop
jae
pushf
pusha
adc
push
adc
sbb
or
pop
inc
sbb
push
dec
sub
pop
movsl
jno
js
aaa
lahf
pop
xor
adc
or
daa
add
jo
out
pusha
stos
xchg
push
enter
push
imul
mov
fldl
cmp
push
shll
fmuls
mov
hlt
loop
adc
xlat
outsb
fcmovnbe
pop
lds
cmp
mulb
xchg
repz
ret
sbb
add
lock
imul
arpl
loopne
scas
rorb
jecxz
push
adc
in
jnp
ficomps
xchg
orb
es
pop
nop
mov
and
pusha
jmp
adc
xchg
mov
ror
arpl
icebp
repz
mov
mov
or
addr16
xor
movsl
push
in
add
mov
pop
repnz
ljmp
jl
mov
je
cs
mov
cli
sbb
icebp
ds
jbe
jle
bts
movd
sbb
adc
fildl
fisttpll
leave
dec
sbb
add
inc
sub
insl
scas
sub
out
or
scas
sub
sbb
cmc
into
and
add
iret
out
cmpsb
test
pop
mov
mov
and
jns
add
das
fisubs
bound
xchg
cmpsl
movsl
and
int3
je
or
jge
scas
cmpl
ss
add
sarb
into
pushf
jg
sub
cmp
mov
inc
call
imul
pop
jo
mov
out
fs
loop
xlat
stos
xor
inc
add
jno
into
outsb
inc
cltd
push
inc
into
xchg
mov
imul
lds
pop
xor
ljmp
cmp
push
neg
aas
pop
sub
mov
sub
jge
sbb
nop
insl
pop
mov
xchg
outsl
jo
add
ss
cs
fsubl
leave
jmp
dec
repz
jae
inc
mov
fs
inc
jg
sub
lods
or
js
js
das
mov
sbb
mov
cld
mov
ret
test
in
iret
pop
lret
jg
test
inc
dec
jae
shll
adc
fs
sub
mov
sbb
push
pusha
das
and
iret
cmp
sub
out
jge
mov
pop
cmp
or
mov
mov
push
movsb
in
jecxz
pop
aad
aaa
mov
or
jecxz
push
in
jge
in
in
dec
xor
xchg
cmp
mov
fimull
inc
lcall
mov
adc
aaa
daa
jecxz
xchg
std
aas
pop
and
mov
mov
mov
pop
xchg
in
loope
clc
sub
dec
mov
shrl
jge
fidivrl
push
adc
sbb
cmp
jb
jbe
ss
imul
pop
loope
dec
xchg
mov
cmpsl
adc
add
std
jecxz,pt
ret
clc
fistps
pop
or
xchg
insl
test
lock
outsl
mov
insb
xor
into
adc
push
sub
sbb
cltd
subb
nop
push
mov
ror
jnp
mov
push
fldenv
outsl
fisttpll
add
push
out
cmp
gs
pop
inc
add
sub
dec
dec
mov
testl
mov
fcoml
add
loope
shll
movsl
repz
outsl
nop
xor
lods
xchg
leave
call
imul
and
lcall
pop
shlb
aaa
push
mov
call
or
je
inc
clc
inc
orl
push
cmp
push
and
push
xchg
pop
push
jecxz
fmull
loopne
adc
jmp
lds
jg
test
jge
adc
lock
popa
sarb
dec
mov
jne
jl
roll
xchg
push
mov
pop
sub
pop
dec
xchg
mov
sahf
cmp
pushf
aad
rcll
outsl
jp
xchg
adc
xor
cmp
xor
mov
test
push
inc
arpl
sub
mov
cs
adc
cmp
push
mov
in
daa
fld
xchg
sbb
jae
mov
inc
js
pop
jne
ret
sub
insl
test
lret
jnp
xchg
lcall
mov
pusha
in
cmp
pop
mov
test
pop
add
adc
and
cwtl
inc
pop
jg
push
push
pop
dec
xor
daa
cmpsb
push
dec
xor
xchg
cmp
cmp
jbe
xchg
mov
sub
xchg
xchg
std
or
jae
ds
and
std
jecxz
cs
out
inc
cmp
cmp
sarb
in
and
lret
xorb
mov
mov
inc
mov
rcll
cltd
fidivs
fcomip
cwtl
ret
mov
push
mov
and
in
scas
cmp
cmp
xchg
sub
ljmp
fsubr
sub
jne
icebp
pop
lods
inc
out
push
subb
cmp
ret
add
sbb
jp
mov
or
sub
insb
mov
lods
dec
dec
mov
push
xchg
xor
enter
test
addl
push
out
movsl
out
dec
push
jp
dec
pop
lods
xor
cmp
dec
jno
mov
sub
lods
cwtl
pop
and
or
in
jo
inc
jle
mov
lea
jnp
dec
notl
movsl
pop
push
cs
jb
and
jo
adc
mov
inc
or
add
push
or
lea
stos
mov
loopne
xor
fistps
shr
out
mov
dec
stc
mov
jge
add
xor
push
aam
xor
sub
pop
xchg
xor
jns
dec
decb
sub
shrl
xor
std
gs
jbe
cmpl
dec
in
out
loopne
pop
sahf
lret
in
iret
into
or
subb
xchg
mov
lods
in
cmpsb
pop
sub
stc
pop
jmp
ret
pop
inc
in
mov
ja
mov
insb
add
inc
or
adc
xchg
sub
call
mov
vmulss
lds
xchg
sarl
xor
pusha
enter
fistl
inc
adc
sub
adc
and
mov
pushl
rolb
push
jp
or
or
lods
mov
cmp
dec
push
lods
jecxz
jne
arpl
cltd
out
add
xlat
pop
data16
leave
cmpb
div
sbb
cmp
mov
mov
inc
xchg
pushf
push
lock
femms
or
push
fldenv
mov
inc
int
jo
jge
iret
sbb
pop
ljmp
int3
idivb
and
fcomip
icebp
les
push
adc
cltd
dec
cmp
mov
add
stc
mov
sub
js
sub
adc
mov
add
imul
aaa
das
sub
mov
scas
loopne
xor
andl
fists
cmp
pushf
jne
stos
and
loop
and
arpl
mov
mov
mov
xacquire
iret
fld
scas
dec
sahf
adc
cmp
test
out
cmp
xor
cmpsb
stos
loope
or
mov
jmp
xor
dec
lods
out
or
jp
out
cld
fwait
push
inc
gs
icebp
or
mov
or
dec
xor
mov
in
je
mov
repnz
dec
sbb
sub
fcoml
cmp
and
xchg
in
mov
sti
cld
fwait
xlat
lods
into
sub
mov
ljmp
leave
shrl
mov
cmpsl
aas
sbb
pop
ds
add
sbb
ficomps
decl
cwtl
inc
adc
rolb
inc
or
and
inc
inc
cmp
inc
dec
stc
add
cltd
adcb
or
sarl
mov
rolb
leave
mov
mov
pop
cmc
shll
fsubrl
and
inc
push
xchg
clc
pop
add
jne
push
dec
std
ja
pop
jp
jecxz
pop
sbb
imul
insb
cmp
cltd
and
jecxz
in
in
mov
mov
add
push
pop
mov
mov
loop
add
pop
scas
fcmovbe
add
inc
mov
insl
sub
cmp
sub
push
sbb
xchg
push
sub
jbe
push
mov
mov
dec
and
xchg
icebp
lods
sbb
pop
add
sub
push
jno
pop
jo
mov
pushf
ss
into
push
je
push
clc
mov
add
out
pop
jo
jnp
sub
stc
idiv
mov
outsb
int
adc
loope
xor
fimuls
test
fistpl
jne
iret
or
icebp
stc
jg
mov
sar
cli
xlat
mov
out
xlat
jae
jno
repnz
sti
push
add
push
int
or
mov
inc
push
add
cmpl
movsl
and
orl
pusha
pusha
rolb
stos
jl
adc
lods
jecxz
cmp
notb
sub
cmp
test
dec
push
inc
sbb
stc
xor
jmp
leave
cmovl
dec
mov
sub
xorl
test
leave
outsl
jmp
jmp
insb
mov
xchg
pop
testb
inc
sbb
xor
shll
loope
push
stos
pusha
lods
sbb
sarl
ds
in
lea
or
bswap
repnz
adc
adc
jae
dec
arpl
push
mov
pop
gs
fidivl
jbe
pushw
xor
mov
cmp
loopne
pushf
loopne
je
inc
enter
sub
fs
sub
or
push
mov
rep
or
repnz
cmp
dec
imul
push
dec
lds
jl
jge
daa
popf
gs
cmp
lods
cwtl
pop
and
jbe
int3
lret
popl
push
sbb
adc
mov
add
mov
xchg
movsl
ljmp
test
dec
dec
xor
inc
cmpsl
or
sbb
daa
insb
or
es
orb
cmpsl
je
jno
adc
in
pop
mov
mov
and
dec
pop
aas
pop
aaa
inc
iret
sahf
scas
sti
jge
adc
sub
xchg
out
hlt
dec
out
pop
lcall
imul
iret
pop
cli
cs
int
mov
lret
mov
mov
pop
loop
loope
lods
dec
jecxz
pop
shll
stos
out
pushf
in
dec
int
hlt
dec
push
clc
popf
dec
std
fwait
or
and
jmp
movb
mov
mov
mov
sbb
inc
repnz
lock
notl
inc
mov
mov
push
lds
sub
aas
dec
insl
ds
data16
in
xor
fistpl
dec
lds
andl
xor
mov
shl
insb
sahf
mov
mov
mov
es
fs
pop
dec
loope
inc
cmp
push
xor
and
or
xchg
fisttps
push
pop
iret
pop
xchg
stc
lods
add
scas
imul
dec
pop
jno
sbb
les
pop
inc
jns
or
rcr
mov
xor
inc
inc
and
call
out
xchg
lea
mov
sub
icebp
xor
and
push
and
daa
repnz
imul
mov
dec
loop
inc
and
sub
test
jge
std
mov
popf
mov
jmp
jae
test
inc
dec
inc
mov
push
call
iret
mov
adcl
mov
sbb
sbbb
xchg
mov
and
fcoms
xchg
mov
loopne
sbb
pop
pop
mov
push
lret
cmpsl
dec
lods
dec
fldl
mov
into
sbb
mov
xor
int
cltd
nop
jmp
xor
pop
sbb
out
lea
xchg
cltd
pop
xchg
sub
sbb
jae
in
dec
enter
lds
and
pop
ficoml
push
mov
mov
mov
xor
jae
les
divb
imul
push
push
jno
lods
add
movsl
add
mov
icebp
or
aad
jge
sbb
pusha
sub
mov
in
test
ljmp
jle
mov
shrb
lret
clc
call
fistps
out
shll
lds
cld
and
ret
in
pop
add
and
les
cmpsl
lea
sbb
xchg
mov
je
jbe
cwtl
pop
mov
call
and
cmp
in
mov
das
push
call
das
push
lods
cmp
stos
jnp
nop
or
nop
leave
xor
dec
in
add
loope
lret
movsl
rcrl
add
shl
push
test
movsl
inc
test
cli
push
pusha
push
sarl
ja
xor
sbb
imul
in
add
and
sub
xchg
mov
rcrb
dec
and
fwait
xor
ret
pop
je
mov
mov
jecxz
mov
jg
ret
in
jb
ret
add
js
mov
sub
mov
mov
and
leave
mov
jnp
cmp
in
pop
or
cmp
aas
stos
popa
cmp
xor
pop
mov
aas
repz
dec
jp
jmp
xchg
add
mov
pusha
jne
mov
out
push
in
add
es
pop
adc
stos
xchg
mov
mov
cwtl
aam
rorl
adc
xor
aaa
mov
into
jg
jb
rcll
and
hlt
stc
mov
sbb
mov
adc
sub
sbb
cmp
loopne
pop
fidivl
mov
dec
mov
data16
fiadds
mov
push
dec
test
xlat
fistpll
call
fwait
loop
scas
mul
xor
adc
aas
xchg
dec
add
dec
scas
inc
cwtl
ds
inc
push
add
and
or
cli
lea
iret
pop
fildl
outsb
jo
bound
lds
push
cmp
push
lret
xchg
andl
subl
cmp
push
sbb
push
add
jns
xchg
adc
lock
cli
mov
push
cmp
jnp
imul
in
int
mov
cmp
mov
mov
jns
sbbb
ja
pop
sbb
std
lahf
lods
lock
xchg
jge
xchg
adc
lods
in
sbb
out
lds
out
out
push
das
jmp
dec
aas
jecxz
pop
imul
daa
add
adc
xor
mov
adc
pop
sbb
std
pop
movsl
arpl
pop
push
scas
dec
jne
pop
add
dec
cld
jle
adc
cmp
push
das
mov
jg
jo
in
mov
dec
inc
sbb
lret
xchg
fmuls
mov
inc
sarl
or
dec
stc
mov
addr16
fwait
jl
aaa
push
enter
cwtl
das
pusha
cmpl
rol
mov
mov
sub
int
jp
outsb
ds
lds
mov
movsl
jbe
and
lds
movsb
insl
pop
and
cld
lock
pop
shl
rol
fisttpll
fucom
dec
ficompl
std
mov
adc
arpl
xchg
sub
outsl
icebp
adc
xchg
repnz
shl
add
hlt
je
out
mov
negb
pop
loopne
je
adc
inc
dec
scas
cmc
stos
jp
int3
push
pop
sub
cli
in
inc
clc
fs
stos
out
rcr
aam
lcall
ja
hlt
imul
sub
xchg
pop
test
adc
out
push
aas
lcall
xor
xor
xchg
lods
mov
test
jo
aad
push
adc
xchg
jmp
test
push
or
cmp
fs
adc
paddusb
rorb
cmp
lret
sbb
dec
lret
daa
push
sbb
xchg
mov
sub
adc
sti
stc
movd
stc
push
add
lods
fwait
aas
dec
cmp
mov
pushf
int
and
cli
mov
pushf
sub
inc
mov
mov
inc
loopne
psubw
or
push
pop
xchg
sub
mov
cmp
mov
roll
enter
push
ret
lods
fbstp
fdivrs
je
sbb
ret
outsb
adc
push
mov
not
in
addr16
movsb
dec
push
andb
test
stc
cmp
add
outsl
fnstenv
ja
lret
jb
jne
call
into
add
xchg
js
mov
rclb
aaa
mov
mov
push
mov
sbb
aam
jno
fisttps
cmpsb
addb
mov
sub
dec
in
out
inc
out
adc
xor
lahf
idivb
loop
scas
outsb
mov
jecxz
mov
inc
outsl
pusha
les
or
inc
cltd
push
add
jae
jo
inc
addb
loopne
pushw
sub
sbb
cwtl
mov
orb
or
sahf
outsl
jns
stos
out
dec
cmp
push
ds
in
lea
fisubl
push
icebp
mov
rorb
jnp
in
mull
cmp
and
cmovns
push
pop
idivl
in
out
repnz
adc
xor
and
test
loope
es
arpl
jle
test
and
pusha
sbb
es
shrl
adc
iret
dec
cltd
repz
nop
cmp
or
push
popaw
pop
shrb
cmp
loopne
aam
push
cmp
dec
inc
inc
dec
lea
or
popf
mov
inc
aas
mov
daa
jae
jb
int
jns
sbb
mov
mov
lahf
or
jne
popf
loop
in
sbbl
cmc
xor
shll
dec
cmp
fs
or
out
fnsave
jno
mov
jo
inc
adc
and
loop
ja
jne
jg
sti
into
test
xchg
pop
pop
outsl
pop
ss
jns
jae
mov
inc
lahf
mov
and
stos
sub
jmp
imul
cwtl
adc
shll
les
mov
or
jle
outsb
in
mov
inc
into
ds
sti
push
pop
rcrb
xchg
jle
addr16
sbb
cmpsl
inc
repnz
mov
mov
js
lods
sub
cmp
jbe
jnp
fcoml
aas
xchg
mov
xlat
push
pop
and
mov
ret
mov
pop
lcall
adc
cmc
js
and
mov
aam
daa
jmp
push
pop
dec
xchg
mov
pop
pop
adc
adc
les
push
mov
ja
test
dec
scas
cmp
imul
push
push
sahf
mov
sarl
jl
push
fidivl
cmp
and
push
adcb
je
mov
fildl
cmpsb
insb
jp
mov
jg
fsub
aas
ds
repnz
ja
cmpsb
int
sbb
lret
aaa
icebp
popf
pop
test
test
jg
mov
popa
mov
in
mov
aad
out
pop
and
lods
out
mov
push
rcl
sbb
aas
jae
repnz
pushf
gs
daa
xor
add
and
addr16
cmp
out
mov
inc
sbb
jp
cld
xor
push
movb
sub
or
aam
imul
in
nop
icebp
fsubrs
popa
mov
pop
or
repz
stos
add
dec
cltd
sahf
pop
push
js
pop
push
inc
lods
add
sub
aaa
xchg
push
add
stos
imul
jecxz
mov
cmp
fsubrl
mov
pop
ret
xchg
xchg
dec
adc
cmp
jmp
xor
xor
rcrb
stos
pop
push
xor
aad
pushl
xchg
or
imul
out
inc
rclb
dec
cmp
add
fdivs
imulb
outsl
sbb
xchg
out
daa
sti
add
lods
dec
aas
shll
jnp
sahf
fdivl
fisubs
into
lock
add
push
lret
shlb
xchg
addb
mov
pusha
cs
inc
push
in
lods
out
mov
ja
push
popf
stos
out
popa
shl
add
das
dec
xchg
xor
bswap
sahf
clc
xlat
loopne
pop
call
fadds
jae
inc
stos
inc
add
xor
mov
pop
mov
out
inc
stos
popf
pushf
jae
scas
lahf
mulb
mov
lret
cmpsl
pop
push
aaa
cmp
inc
xor
inc
fcmovb
dec
repz
lahf
sahf
fdivrl
arpl
sahf
dec
fmuls
test
cmp
cmp
mov
pop
addb
jp
aaa
push
dec
jo
out
add
sbb
xorl
xchg
jno
mov
or
or
xor
in
push
jae
pop
loope
mov
movsb
pusha
stc
aaa
sti
popf
and
xor
cmpsl
repz
aaa
pop
in
sub
or
lock
xchg
popf
sub
sbb
sbb
repz
lods
pop
dec
xor
bound
pushf
cltd
cmp
xchg
xchg
icebp
xor
dec
adcl
mov
xor
dec
pop
xchg
pop
pop
out
inc
dec
xor
loope
inc
cwtl
or
pusha
iret
out
stc
fisubrs
and
je
jnp
insl
lea
fsubl
push
adc
scas
and
test
in
icebp
outsl
rolb
jmp
es
idivb
int3
push
mov
loop
lret
xchg
icebp
roll
mov
test
fldl
mov
push
scas
sti
push
jl
add
inc
add
inc
lods
outsl
cld
mov
je
jnp
sbb
shrl
adc
in
mov
cmpsb
sbb
out
ret
ficomps
jle
mov
jnp
push
hlt
xor
adc
push
mov
mov
inc
mov
mov
adc
push
cmpsb
cltd
push
pop
cs
dec
gs
addl
shl
and
aam
or
fs
sbb
xor
pushf
mov
add
or
bound
sub
xor
mov
xor
insb
ss
pop
lcall
push
pop
and
jbe
add
add
cwtl
mov
mov
rol
cmp
or
pushf
push
sbbl
sub
jmp
sub
xchg
xchg
add
ja
imul
jne
inc
jns
dec
shrb
mov
xchg
jl
push
ds
fisubrl
inc
cmp
in
inc
adc
ret
pop
xchg
ds
lret
jp
icebp
repnz
icebp
adc
movsl
fstpl
inc
mov
or
ds
push
lock
and
nop
inc
add
jae
xor
out
out
jb
pop
cmp
cli
mov
or
mov
mov
jb
mov
dec
pop
daa
nop
pusha
ja
adc
int
push
in
inc
test
push
mov
fnstcw
pop
fiadds
mov
inc
push
ds
out
jle
lcall
inc
frstor
loopne
lcall
out
mov
lods
or
push
popf
mov
jno
ds
je
aaa
push
push
or
insl
push
pop
push
pop
or
jne
xor
fldl
sbb
cltd
imul
mov
jecxz
mov
loopne
pop
push
push
ficoms
imul
pop
sbb
push
cmp
adc
push
leave
jo
mov
mov
movsl
iret
mov
popf
lods
or
mov
lods
jne
mov
cld
inc
pop
xor
insb
push
loop
lock
pushl
inc
dec
mov
xchg
cmp
and
push
mov
pop
subb
push
ret
std
jg
and
lcall
mov
arpl
popf
pop
pop
sbbl
dec
insl
xor
jmp
sbb
cmp
les
jl
les
jmp
mov
stc
xchg
fiaddl
dec
xchg
sbb
aam
mov
push
or
sahf
inc
dec
add
aas
arpl
mov
push
ror
jb
je
and
xchg
push
lds
scas
jno
xor
adc
mov
es
ret
bound
mov
out
cli
or
inc
xchg
sahf
inc
mov
je
inc
cmp
pop
movsb
xchg
pushf
xor
mov
sub
push
std
add
jb
xchg
fucom
stos
shrb
mov
in
sbb
inc
adc
xor
repnz
mov
es
sbb
fwait
test
xchg
or
push
mov
pushf
sub
dec
loop
aad
mov
mov
push
push
xchg
adc
push
lret
dec
mov
mov
rcrb
cmpb
into
dec
repz
movsb
lahf
mov
sbb
add
mov
imul
sub
dec
adc
cmc
cmpl
mov
jl
mov
cmp
dec
sbb
mov
dec
lret
call
pop
fmul
mov
clc
sbb
inc
pushl
jg
dec
gs
xchg
data16
in
rcll
testl
pop
lahf
repnz
notb
and
add
dec
dec
test
aas
jnp
call
xchg
and
je
xchg
test
xchg
pop
les
jb
loop
jno
cltd
adc
icebp
dec
adc
mov
xor
rclb
popa
lcall
fbld
jecxz
ljmp
dec
test
dec
pusha
inc
out
or
cmpsb
shrl
pop
fnstenv
aam
mov
inc
addb
aas
push
orb
test
jmp
jb
loopne
pushf
mov
sbb
cwtl
addl
jo
outsb
test
insl
loopne
push
out
adc
jo
mov
adc
mov
push
jg
push
icebp
movsl
shl
mov
sub
mov
lcall
repnz
lea
cmp
sbb
sub
out
insl
lods
xchg
mov
mov
add
iret
lea
add
sti
cltd
test
mov
imul
call
imul
add
jl
mov
rcll
or
dec
dec
pop
xor
imul
push
in
xor
xchg
push
loop
aaa
enter
push
push
jg
std
aaa
sbb
push
xchg
cmpsb
pop
sbb
mov
rcll
mov
push
pop
and
dec
cmp
mov
stos
sarb
call
dec
cs
cwtl
sbb
mov
fsubrs
lahf
adc
pop
sbb
cs
das
mull
insl
hlt
dec
movsb
repnz
xor
inc
xchg
xor
cmpsl
mov
repz
div
test
adc
cli
jmp
pop
lahf
in
mov
das
dec
iret
dec
adc
pusha
test
lods
in
icebp
push
stos
dec
int3
sub
insl
cwtl
pop
fdivrs
outsl
sbb
faddl
cmpsl
popf
cmp
ss
dec
inc
mov
enter
sub
ljmp
xchg
pop
icebp
xor
lahf
jmp
push
outsb
pop
cmp
test
add
call
in
push
xor
lods
jb
inc
pop
or
sub
jl
or
in
jp
jb
in
and
movsb
std
sti
mov
mov
mov
mov
scas
das
popf
mov
out
dec
scas
scas
push
sbb
inc
inc
aad
gs
aas
xchg
aam
out
xchg
mov
loope
push
insl
or
sub
repz
into
mov
jp
push
arpl
or
xchg
jl
mov
fs
sbb
adc
popa
inc
fldt
loopne
clc
sub
in
pushf
and
cltd
xor
lds
xlat
inc
push
pop
mov
and
in
mov
cmp
stos
xlat
es
add
test
mov
mov
or
fwait
bound
subb
jp
sub
vmaxpd
movsl
mov
rorb
scas
pop
mov
in
sbb
les
arpl
add
xchg
jmp
icebp
pop
adc
jg
cmp
dec
adc
mov
inc
mov
xor
sbb
mov
imul
cmp
or
push
lcall
or
cs
incb
mov
xchg
lds
out
fs
lret
arpl
shl
ja
jns
mov
daa
mov
xor
xor
push
push
dec
cmpsb
inc
ret
jl
mov
sbbl
pop
jge
inc
xchg
jb
adc
mov
mov
ja
xor
nop
push
je,pt
lcall
dec
push
fnsave
lods
lret
test
into
jb
shrb
lcall
aad
ja
mov
cmp
ret
or
mov
ss
aam
mov
sarl
jae
jecxz
pushf
mov
xor
xchg
xor
in
dec
xchg
xchg
enter
mov
and
lret
hlt
test
int3
pusha
push
adc
add
cmpsl
mov
test
fs
and
pop
jbe
mov
shll
lcall
mov
sub
out
in
fisubl
add
mov
mov
mov
and
jl
sbb
jle
and
push
aaa
pop
pop
pusha
js
jb
and
ljmp
push
leave
stos
sti
push
jle
cmp
fcomps
pop
sub
add
sbb
adc
rorb
aaa
and
or
pushf
sbb
mov
cld
inc
mov
sbb
xchg
pop
nop
negb
mov
xor
push
negb
xchg
outsl
xlat
mov
sub
sbb
fbstp
pusha
ret
adc
mov
xor
cmp
xorb
sbb
dec
cmc
lret
pop
rorl
das
or
and
mov
loopne
add
hlt
scas
push
and
sarl
iret
bound
mov
dec
jl
jmp
les
mov
scas
and
je
mov
cmp
adc
sbb
sti
cltd
in
popl
add
jae
cmp
adc
xchg
je
or
imul
shrl
lret
insb
push
xchg
mov
cmpsb
ret
pop
into
cmp
cwtl
push
xchg
ror
pushf
mov
adc
jnp
lock
mov
mov
fwait
or
test
icebp
adc
sahf
sahf
fistpll
adc
pop
or
ret
cmp
addl
inc
imul
or
pop
push
clc
jne
mov
cwtl
cmp
mov
sbb
shlb
inc
lcall
popf
add
loope
xor
sti
or
aaa
int3
pushf
je
xor
inc
mov
sub
clc
jbe
pop
jmp
lods
mov
int
repz
or
push
aad
and
mov
and
xchg
dec
push
add
nop
imul
mov
inc
insl
pop
and
outsb
aad
test
xor
imul
mov
neg
enter
jmp
insl
in
cli
mov
sarb
orb
out
jns
push
sbb
pop
addr16
aaa
popf
lret
outsb
pushf
push
insb
mov
fldt
call
mov
lret
dec
movsl
mov
pop
push
add
inc
jl
mov
cmp
mov
sbb
mov
mov
push
adc
pop
jmp
jp
xlat
out
out
out
shrl
std
ds
jg
das
pop
ds
out
mov
cld
dec
jecxz
sub
neg
in
lea
pusha
test
cmc
inc
push
stc
mov
add
inc
dec
or
mov
pop
mov
fwait
push
popa
xor
fiadds
in
cmp
mov
in
push
xchg
ljmp
fstl
lods
lods
add
stc
lret
lea
sbb
aam
ret
lds
clc
andb
adc
push
push
pop
mov
andl
in
sahf
ds
movsl
dec
stc
push
fldl
stos
call
and
aas
add
push
insl
and
inc
pop
jae
fcoms
bnd
gs
cltd
and
mov
outsb
cmpsl
xchg
jmp
inc
nop
lea
imul
pop
rcrl
xchg
dec
adc
roll
push
push
sbbl
xor
xchg
cmpsb
cs
jmp
inc
cmpsl
mov
jge
mov
lahf
dec
xor
std
cs
imul
mov
cwtl
shlb
adc
nop
xchg
ret
repz
mov
movsl
jge
mov
push
subl
cwtl
push
negl
inc
sub
jle
cmpsl
leave
mov
lret
fs
enter
rorb
mov
xchg
adc
sub
xlat
inc
mov
push
sbb
xchg
bound
cmpsl
add
mov
je
shr
inc
jns
xchg
lea
out
mov
mov
adcl
push
sbb
inc
lahf
sbb
sahf
fiadds
testb
adc
mov
int
push
sub
xchg
inc
ret
cmp
mov
repz
aam
push
jle
ds
mov
enter
scas
in
inc
pop
ss
les
cmp
mov
xchg
jo
loop
jmp
test
cmp
filds
out
jmp
sti
add
fwait
push
and
pop
add
mov
js
cli
add
push
je
jge
cmp
cmpsl
out
mov
cmpsb
push
dec
ret
loopne
sub
test
xchg
in
sahf
inc
hlt
into
inc
adc
add
add
rclb
pshufw
cmp
mov
pop
jns
test
add
in
std
pop
xor
xchg
push
adc
out
std
mov
adc
xor
sbb
in
xor
mov
rorl
popf
imul
cmpsl
and
test
insl
stc
push
jg
pop
movb
mov
sbb
jne
push
inc
gs
in
fistps
sub
lea
pop
out
xor
std
movsb
push
daa
lret
arpl
push
add
sub
pop
inc
outsb
in
or
in
test
add
xor
lock
lret
jo
stos
aas
in
in
inc
mov
xor
or
pop
sbb
dec
pop
aas
test
fcomp
and
pop
push
lea
addr16
cmc
sarl
and
es
sub
cli
dec
stos
or
arpl
xor
fidivs
mov
dec
xchg
sbb
movl
repnz
leave
push
pop
cmp
xchg
mov
bound
dec
inc
mov
mov
dec
fimull
test
stos
je
and
cmp
cmp
pop
mov
cmpsl
enter
pop
jb
in
test
subl
lcall
or
ss
cmp
or
loope
add
ret
pop
divps
add
xor
lcall
cmp
xchg
mov
ja
sbbl
jo
mov
cmp
dec
daa
sbb
cmc
xchg
push
pop
ss
das
gs
cmp
leave
mov
adc
shrl
xor
add
lock
repnz
push
shlb
mov
jne
mov
movsb
inc
inc
movsb
push
dec
clc
push
inc
pop
sub
in
mov
jae
dec
push
mov
adc
pop
out
xor
in
fistpl
ljmp
push
jb
mov
pusha
sub
push
mov
xor
mov
repnz
jbe
mov
mov
lds
or
scas
and
mov
loopne
out
inc
add
sub
mov
jne
gs
ja
test
sbb
or
stos
int
mov
mov
adc
fwait
ljmp
ss
repz
nop
dec
adcl
cld
popf
push
push
push
xchg
in
imull
les
jne
pop
ret
shrl
xor
dec
and
dec
scas
push
sub
fistpll
call
cld
add
pop
aam
push
sbb
xchg
xor
inc
pop
jae
adc
lods
mov
in
jo
mov
cmp
xchg
arpl
ss
and
ss
mov
xchg
clc
add
ja
xchg
or
insb
mov
xor
pusha
stc
inc
shlb
add
loope
cltd
out
xchg
push
stc
pusha
aad
aaa
repnz
nop
mov
push
stos
outsl
pop
mov
pop
loope
fldl
cwtl
in
xchg
mov
mov
push
clc
loopne
mov
jbe
jne
cmpb
cmc
sbb
adc
scas
rcl
xchg
pushf
pushf
jmp
pop
xchg
nop
lahf
and
and
inc
add
cmp
fcomi
aam
mov
sbb
in
push
arpl
sub
adc
and
push
jecxz
xor
push
push
lahf
xlat
repz
xor
inc
cmp
and
ret
out
dec
inc
mov
lahf
pop
loope
jecxz
in
in
aaa
inc
mov
jnp
ja
cmpsl
aaa
cwtl
mov
sbb
imul
jbe
movsl
int
aaa
push
xchg
xlat
out
insb
push
sub
pusha
rcrb
xchg
insl
test
jne
leave
in
fcmovnu
mov
sub
popa
sub
loope
dec
arpl
pop
pop
stos
stos
shl
shll
inc
or
in
jo
mov
shlb
gs
aam
sub
repz
pop
pop
dec
or
push
cltd
mov
or
and
and
add
push
inc
js
nop
jp
xor
enter
movnti
insb
lds
fldenv
ret
cli
jle
and
and
sbb
mov
and
pop
jno
mov
je
fs
leave
and
shll
fldcw
test
adc
ja
or
repnz
xchg
cmpl
lret
xor
and
movsl
lea
cld
sbb
out
mov
out
les
push
or
jae
lods
or
dec
rorl
add
mov
sbb
stos
cmc
mov
xor
inc
out
scas
xor
inc
jge
or
or
lret
sub
ja
subb
loope
mov
mov
dec
mov
test
cmp
and
fdivp
push
icebp
lock
sbb
repnz
or
adc
aas
aad
das
sub
sbb
mov
push
popf
add
jmp
dec
pop
rol
pop
push
pop
push
cmp
mov
aam
in
in
jns
pop
call
ljmp
add
ljmp
dec
imul
dec
test
in
pop
stc
fs
stc
int
cltd
mov
outsl
ds
cmovno
sbb
lods
and
adc
out
xchg
dec
jp
mov
jle
data16
jp
ret
jp
inc
aas
pop
add
sbb
add
mov
jns
cmpsb
shll
filds
call
out
repnz
jle
inc
ljmp
mov
inc
xchg
push
dec
fldt
sbb
les
int
lret
scas
loop
xorl
xchg
dec
xchg
xchg
xor
inc
popf
sahf
out
mov
adc
inc
sbb
push
inc
mov
mov
adc
insb
in
inc
cld
dec
pop
or
sbb
int3
jp
mov
hlt
cwtl
bound
andl
jmp
popf
pop
push
jmp
incb
sbb
scas
push
sbb
out
jl
xchg
test
pop
push
in
ss
cmp
das
adc
lods
add
mov
pop
and
ds
shll
data16
jae
jae
or
fwait
divb
dec
faddl
loopne
sbb
nop
shrb
and
call
xchg
aas
push
aam
mov
sbb
inc
subb
aas
mov
adc
mov
lea
nop
add
pop
flds
and
pop
mov
mov
mov
cmpb
jp
dec
xchg
mov
inc
lods
mov
lret
mov
jnp
cmc
nop
pop
pop
mov
xchg
jo
imul
sarb
jno
test
jp
lods
cmpsl
in
mov
mov
push
xor
push
aaa
and
mov
inc
sti
jb
lods
jo
sub
int3
std
sti
pushf
fsubrl
divl
loop
int
jns
add
mov
push
inc
movsb
cmp
mov
mov
mov
out
mov
movsb
ja
leave
xchg
stos
arpl
push
push
pushl
orl
pop
ret
and
aad
jo
cmp
popa
jae
popf
fsubr
aas
push
push
pop
ds
inc
mov
out
fs
mov
xchg
imul
adc
mov
push
pop
movsl
fistps
fwait
xor
sbbl
std
xor
scas
out
jns
push
mov
add
fisttpl
sub
repz
lahf
cmp
lcall
pusha
add
mov
sahf
cmp
clc
or
imul
and
and
ds
mov
nop
jno
xlat
xchg
fs
mov
repnz
test
mov
test
fs
inc
enter
into
test
dec
sbb
cmp
cld
push
bound
das
inc
aas
jl
lahf
xchg
out
ja
stos
enter
add
addb
aaa
insl
aaa
mov
push
daa
aas
loop
push
push
cmp
push
mov
dec
call
in
dec
xchg
lock
mov
sub
mov
sbb
cmp
inc
sub
fistps
mov
sbb
adc
outsl
cmpsl
int3
adc
sbb
mulb
repnz
inc
nop
std
push
lahf
addl
es
sub
cmpsb
test
cmpsb
jg
dec
cmpsl
test
xor
out
sahf
fnstsw
push
xlat
mov
push
mov
pop
pop
ss
and
daa
dec
sub
jns
and
adc
mov
push
xchg
pop
pop
or
mov
in
mov
sbb
add
lods
lods
out
cmp
adc
pop
inc
inc
mov
insl
sub
pop
xchg
adc
dec
imul
aam
lock
and
sbb
sar
int
or
and
sbb
fnstsw
inc
sub
add
dec
cmp
incl
cmp
xchg
arpl
adc
and
pop
push
jmp
iret
sbb
inc
aad
pop
test
aas
shrb
lock
push
cmp
scas
mov
aad
mov
xorb
out
mov
test
imul
gs
das
in
sub
out
mov
push
cltd
sub
lods
cmpsb
push
into
loop
push
aam
add
loopne
mov
xor
dec
mov
push
test
out
push
add
and
mov
mov
push
push
mov
sub
and
or
xlat
xchg
add
stos
xor
push
xor
shrl
adc
adc
push
mov
cmc
xchg
cld
dec
mov
and
jmp
mov
pusha
sbb
in
fidivs
into
test
gs
mov
jb
mov
inc
or
xor
js
jmp
push
adc
push
fwait
mov
popf
push
push
mov
insb
sbb
and
ja
cmp
int3
jg
add
imul
cwtl
dec
leave
or
sbb
or
xor
ds
xchg
in
fdivl
sub
mull
pop
addr16
sub
rcll
xor
inc
sub
popa
push
pushf
lahf
fwait
xchg
rorl
inc
xchg
test
mov
call
rol
sub
arpl
int
xor
hlt
stos
dec
xlat
sarl
pushf
mov
das
sub
mov
outsb
fidivrl
inc
push
orb
sub
mov
dec
push
inc
jmp
push
test
ja
imul
inc
mov
cs
xor
hlt
cmp
push
lock
ja
mov
lcall
mov
pop
push
xchg
pop
mov
jp
aaa
cmp
xchg
jle
idivb
sub
cld
jb
shl
mov
pop
stc
sar
jbe
roll
fisttpl
push
sti
es
push
mov
push
mov
xor
les
pop
inc
arpl
adc
xor
leave
outsl
xor
in
sbb
fidivs
push
push
add
bnd
mov
xchg
addb
mov
jg
add
call
push
addr16
ja
cmpsl
cmc
jp
scas
dec
and
lods
sub
or
stos
or
inc
inc
mov
cmp
or
sub
inc
paddsb
in
popf
or
ljmp
or
movsb
push
push
je
bound
sbb
ja
pop
sub
repnz
mov
aas
fidivs
adc
or
sub
mov
decl
jnp
jbe
lods
push
mul
adc
pop
imul
scas
adc
shll
fildll
aad
test
je
push
mov
loope,pt
jb
js
sub
mov
push
bound
mov
xor
push
mov
mov
xchg
dec
in
dec
mov
or
fs
andl
aad
ret
les
lret
xchg
and
mov
das
mov
and
jno
movsl
popf
mov
xchg
xchg
test
outsl
cmp
mov
sub
add
push
xchg
int3
lret
cltd
test
pop
push
dec
and
pop
daa
addl
cmp
je
out
scas
cmp
fwait
sub
lods
cmp
fdiv
aaa
ja
lret
inc
xor
dec
push
sub
sbb
out
cmp
addr16
les
xlat
fisubl
pop
test
test
mov
cmp
jg
stc
push
aam
popf
loope
lcall
jae
dec
and
aad
push
shrb
adc
mov
push
sti
sub
cmp
mov
fldt
lock
cmpsb
jge
add
shr
out
mov
mov
jne
mov
adc
ljmp
rcll
mov
lahf
jmp
icebp
pop
xlat
shrb
jns
push
add
add
pop
insb
push
jno
ss
notl
imul
add
sub
out
pop
lret
inc
out
jecxz
add
jnp
jb
je
int
jl
aaa
mov
aas
pop
dec
pop
or
inc
sub
cmp
hlt
inc
mov
cwtl
push
sbb
dec
fwait
mov
out
push
mov
add
jg
and
add
and
stc
or
jno
adc
cmc
sti
mov
jne
pop
rcrl
repnz
and
pop
and
inc
mov
xchg
sbb
jmp
cs
and
push
push
cmp
dec
adc
repnz
ja
fimull
push
fmulp
mov
push
or
add
xchg
stos
ja
enter
add
add
cmpsl
sbb
outsb
dec
push
jb
jge
xchg
aas
in
or
in
or
test
xchg
int
pop
push
sahf
and
ret
pop
or
inc
xchg
gs
or
fldenv
test
sbb
push
pusha
test
lods
mov
push
or
test
pop
out
test
int
mov
imul
out
cwtl
mov
add
sbb
rolb
out
aad
test
pop
cs
dec
out
icebp
outsb
inc
pop
add
cwtl
cmpsb
adc
pop
imul
or
jns
out
js
scas
xorl
lds
add
arpl
xor
add
xor
loope
ds
aam
sbb
stos
pop
jmp
aam
test
incb
jp
inc
sti
inc
pop
fstps
gs
pop
add
sbb
xchg
jns
movsb
add
jno
jmp
hlt
je
jg
jo
or
push
push
xchg
stos
xor
xchg
inc
sti
cld
minps
mov
push
or
cli
jp
lods
iret
xor
imul
sub
xor
icebp
jae
outsl
mov
mov
adc
cmc
mov
xlat
ja
scas
fcomps
enter
cmp
fcmovnb
call
mov
mov
lods
cmpsl
aas
test
loope
adc
lds
push
pop
dec
cmp
lods
adc
cmp
repnz
jbe
aam
cli
adc
mov
and
fcomps
outsl
leave
int3
cmc
inc
mov
jle
mov
cwtl
sbb
dec
cld
and
inc
sbb
out
pop
iret
push
lret
fs
out
push
mov
repnz
hlt
es
adcb
rcrl
xchg
pause
jae
jle
dec
pushl
xor
xchg
dec
mov
push
and
dec
ret
cmp
jp
stc
repz
cmp
cs
lea
clc
pop
stos
mov
movsb
mov
or
pop
lods
sahf
in
sti
jns
mov
pop
mov
out
jnp
bound
dec
lods
je
or
loopne
es
cs
sti
mov
test
sahf
lea
sbb
sub
test
jo
in
mov
pop
pop
ja
mov
cmp
pushf
in
scas
adcb
jle
pusha
xor
push
ds
xor
decl
test
or
scas
jmp
movsb
xor
xor
dec
test
xor
add
icebp
fmul
into
ds
jle
dec
sub
or
sbb
movsl
push
inc
adc
shl
cmp
mov
fisubl
adc
fcomi
cmpsb
sbb
outsb
lret
xchg
and
movsl
sti
pushf
test
xchg
outsl
int
jmp
adc
out
imul
cmpsb
in
popa
cmp
fwait
mov
adc
in
xchg
out
aaa
out
aam
and
jmp
or
cmp
and
mov
out
hlt
pop
mov
pop
cmp
test
sbb
adc
stos
and
into
jl
mov
cmp
mov
into
add
cltd
xchg
shl
pop
cmp
cmp
pop
xlat
mov
or
sub
sbb
mov
xchg
pop
cwtl
mov
mov
add
std
mov
lcall
jns
rolb
xor
fimull
adc
call
add
stos
xor
ret
repz
push
test
sub
sub
push
daa
jg
fdiv
push
out
pusha
or
cmpsb
in
mov
add
xchg
and
mov
outsb
xchg
pop
and
mov
sub
inc
jo
jb
scas
sbb
jl
add
xlat
pop
lea
xor
and
imul
mov
sub
add
testl
fcompl
xchg
jl
cltd
xor
xchg
cli
iret
mov
mov
mov
clc
and
xor
xor
gs
jge
xchg
add
cmp
xchg
pop
out
push
daa
jp
push
test
in
push
mov
fsubrs
xchg
cmp
jns
dec
mov
pushf
jge
cmp
sub
jb
out
pop
out
stc
fisubrs
bound
xchg
jnp
add
pop
inc
adc
es
roll
pop
push
pusha
mov
xor
sub
mov
mov
xor
das
adc
and
repnz
mov
fs
fmull
xchg
sbb
pusha
hlt
cld
push
imul
lds
loope
pop
std
pushl
jbe
jmp
cmp
cmp
pop
pop
add
arpl
adc
adc
sub
and
push
shr
jnp
or
js
push
imul
loop
loopne
push
xchg
nop
mov
mov
pop
leave
shrb
roll
and
stos
cmp
pop
jmp
mov
mov
or
addr16
xchg
fidivl
push
inc
sbb
push
sub
jo
outsb
inc
nop
jl
cmp
fwait
stos
adc
cmp
out
mov
fsubrl
pop
dec
lret
jge
aam
and
jns
inc
jo
movsb
movsb
and
jne
fs
es
inc
je
jbe
lret
fbstp
lods
into
inc
push
mov
daa
aaa
fs
ffree
test
add
jo
push
sub
paddusw
adc
inc
lcall
sub
add
mov
aas
xchg
in
add
and
jo
add
pop
cwtl
push
fiadds
adc
xchg
hlt
pop
push
icebp
add
xchg
jl
in
stos
and
js
mov
inc
loopne
loopne
in
jnp
mov
pusha
sti
lahf
leave
imul
gs
inc
xchg
outsb
sub
inc
mov
sub
flds
int
xor
push
pop
daa
mov
xchg
flds
add
dec
sub
xlat
fimuls
xchg
push
ja
mov
lret
outsl
les
dec
shlb
insl
aam
adc
push
fisttpll
xchg
jns
and
xor
dec
out
rcll
pop
nop
fisubs
mov
fcmovbe
push
out
dec
inc
ja
imul
dec
push
add
inc
add
mov
mov
adc
adc
jmp
dec
popl
adc
sti
mov
test
repnz
dec
hlt
test
imulb
xchg
xor
add
nop
mov
inc
xor
sbb
cli
inc
in
ds
mov
test
xchg
daa
cmp
mov
aas
push
sbb
add
test
pop
mov
mov
rolb
push
cmp
and
sbb
gs
jno
outsb
xchg
mov
push
sbb
xor
cwtl
adc
dec
lahf
push
ret
pushf
inc
aas
loopne
mov
insl
mov
fcoml
cltd
int
inc
scas
icebp
push
xorb
jbe
sbb
jns
lea
jae
std
add
adc
test
movsb
shlb
insb
mov
cmpsl
cli
lods
push
push
pop
mov
push
ja
pusha
push
es
inc
dec
out
mov
sbb
cmp
dec
or
jecxz
test
or
mov
inc
jns
jl
scas
adc
xchg
int3
xor
test
sbb
ret
scas
sub
dec
xor
and
sbb
jnp
arpl
jg
aad
je
xchg
mov
xchg
mov
jne
cmpsb
ret
dec
not
bound
fistl
flds
out
lds
int3
dec
jb
frstor
dec
adc
pop
cmp
outsb
cmpl
dec
push
push
aas
lock
loop
sub
jg
cmp
das
add
sub
addr16
mov
xor
and
or
sub
ss
xchg
sub
lods
mov
movsb
dec
shll
sti
inc
or
mov
clc
push
mov
sub
imul
or
lret
and
out
pop
scas
xor
xchg
js
push
or
sbb
stos
std
sahf
lock
lods
mov
stos
sbb
loop
test
mov
loopne
mov
sti
mov
fldcw
adc
stc
add
hlt
mov
rorb
mov
ja
xchg
mov
test
pop
sub
outsl
push
mov
fdivs
inc
pushf
sbb
inc
addr16
out
shll
inc
sbb
push
mov
pop
mov
adc
sbb
imul
jno
jl
dec
jne
add
push
push
sub
ja
addr16
mov
jo
test
movsb
inc
pop
mov
push
sub
ficompl
imul
jo
aas
call
icebp
add
cmp
xor
and
lock
inc
push
sub
and
mov
mov
xchg
inc
js
loopne
push
lds
aaa
adc
mov
adc
push
insl
ds
or
pushf
xchg
jb
mov
sbb
arpl
mov
lea
aaa
dec
fs
mov
sub
jo
cmp
and
andl
sub
rorl
lea
pop
insl
mov
xchg
fcmovnb
fs
mov
scas
shr
jl
jns
push
pop
xor
shll
cmc
mov
div
jo
pop
sbb
jmp
pop
out
movsb
cmp
cmp
cmp
adc
add
shl
pop
test
push
ret
scas
je
xor
dec
adc
push
jno
lcall
ja
es
imul
dec
jae
js
into
jb
jmp
cltd
js
ret
mov
sub
push
sbb
lcall
jle
div
insl
imul
add
loopne
xor
mov
jae
sbb
inc
ret
ret
stos
loop
dec
xchg
dec
mov
in
adc
mov
add
cmp
fs
mov
jbe
xchg
pusha
add
imul
es
pop
xchg
push
lea
mov
fs
dec
push
jmp
xor
mov
les
sti
xchg
mov
sub
inc
jmp
or
std
pop
jne
mov
xor
ret
push
jmp
in
jl
outsb
insb
add
into
ret
sar
into
mov
imul
xchg
and
nop
loope
push
and
fs
out
push
mov
ss
rcrb
fidivs
mov
pop
adc
ljmp
scas
lds
mov
mov
mov
into
movlps
in
xor
lret
arpl
cmp
test
mov
out
inc
mov
cltd
imulb
or
inc
into
push
ret
sub
mov
dec
divb
sarb
repz
sub
push
int
sbb
test
in
pop
push
pop
das
push
push
jnp
rol
xorb
jae
mov
fnstcw
inc
push
xchg
xchg
dec
popf
or
mov
aam
pop
cmp
mov
imul
dec
mov
addr16
and
adcb
scas
mov
scas
pop
iret
cmp
fildl
movsl
cmpsb
or
lods
jo
ljmp
sub
lret
lret
xchg
xchg
sub
enter
xlat
cmpsl
aad
lock
rorb
mov
xchg
xor
mov
xlat
inc
les
mov
and
int
dec
mov
imul
dec
js
sti
in
adc
sub
push
pusha
int3
call
dec
pop
push
lahf
loop
ss
mov
fs
call
sub
mov
bound
push
adc
mov
dec
sub
ss
mov
das
xor
jo
arpl
popa
cltd
pop
pop
mov
push
xchg
scas
sbb
and
sub
mov
mov
cmp
xor
mov
pop
adc
dec
je
push
punpckhwd
jae
inc
jbe
dec
dec
sub
or
and
out
cmp
cmpb
cmpsb
and
dec
mov
sub
lea
cs
das
sarl
sub
xor
addr16
inc
mov
rcll
or
in
cli
dec
shrl
xchg
cmc
ficoms
mov
xchg
mov
push
ficompl
xchg
cli
cmp
mov
negl
insb
pop
bnd
lahf
aam
inc
mov
popl
or
jmp
and
sbb
pop
xchg
xor
hlt
out
cli
in
lahf
mov
lods
and
dec
outsb
les
rcrb
mov
adc
cmc
pop
into
adc
mov
pop
js
icebp
pop
add
mov
fwait
outsl
add
aas
jg
add
or
mov
negb
fs
mov
popa
dec
pop
setl
shll
aaa
es
addl
out
mov
sub
pop
out
push
cmp
xor
jno
xchg
loope
inc
mov
xorl
ss
dec
mov
dec
cld
out
mov
test
leave
fs
cmp
dec
cmp
or
leave
loope
shrl
adc
inc
outsl
cmp
mov
inc
mov
jbe
inc
stos
icebp
scas
fwait
xor
jae
sbb
gs
jge
cmpsb
dec
sbb
lcall
sbb
psllw
fistps
sub
or
inc
cmovno
mov
pop
xor
cltd
sbb
popa
insl
mov
dec
inc
and
jno
inc
out
cmp
pop
fisubl
mov
cs
and
int
cli
mov
shrl
mov
add
jl
xchg
mov
fistps
imul
aam
rcrl
sahf
or
add
jne
jnp
jmp
in
movsb
ror
jo
dec
lea
mov
in
inc
or
das
adcl
sub
or
js
xor
loop
and
sbb
jns
push
jle
mov
into
lcall
int
std
cmovbe
mov
jae
or
into
mov
mov
or
nop
sbb
or
in
out
mov
adcb
cmp
adc
lret
gs
fistl
fldenv
in
jecxz
aas
aad
in
and
les
lods
iret
nop
pop
jb
add
lods
add
adc
imul
and
ja
int3
mov
adc
push
inc
inc
addr16
ret
mov
repz
cmpsb
mov
imul
xor
aaa
and
loop
out
scas
gs
bnd
int3
xchg
or
pop
xchg
fcmovu
mov
cmp
scas
push
cli
pop
cmp
lahf
jbe
sbb
insb
and
aam
movsl
cmp
bnd
call
lret
jle
scas
iret
lret
mov
push
lcall
or
mull
sarl
cltd
scas
loopne
loopne
push
orl
mov
scas
mov
inc
mov
cmc
push
cmpl
mov
fistps
cmp
or
in
add
sub
cli
or
ret
and
loope
fimull
std
fistl
cltd
add
out
rcrb
sahf
call
movsl
lret
pushf
pusha
cmp
inc
xor
pop
xor
and
jl
cld
jecxz
rcrl
or
bound
shlb
and
testl
jnp
pushf
mov
adc
mov
pop
xchg
repz
pusha
xchg
loopne
into
mov
outsl
lods
leave
add
imul
and
xchg
bound
xor
pop
mov
popa
or
ljmp
mov
bound
divb
adc
pusha
pop
rcrb
mov
ljmp
xor
add
pop
dec
in
push
test
scas
pop
mov
cli
sub
jp
jl
scas
std
popa
pop
sbb
push
xor
xchg
shll
jl
ficomps
inc
xchg
gs
and
into
xchg
xchg
scas
inc
push
int3
cmpsl
jno
push
sub
sbb
jbe
push
mov
fwait
sbb
dec
add
movsb
inc
adcl
push
data16
fcomps
jne
xchg
fdivr
in
in
mov
add
push
push
mov
call
push
cld
nop
push
dec
adc
sbb
mov
insl
cmp
xor
testb
repz
and
leave
pop
test
ror
cwtl
fdivrs
sub
or
xchg
sub
push
push
pop
jmp
aas
imul
cltd
sbb
ror
pop
or
or
push
add
sub
fimuls
movsl
add
and
bound
shll
lcall
cli
pop
and
int3
bswap
dec
adc
mov
sbb
jg
mov
dec
cmp
lret
adc
inc
dec
cmpsl
gs
push
imul
aaa
mov
mov
daa
mov
pop
cmc
dec
inc
fs
sub
loop
or
add
les
sbb
jl
fldt
cmp
aas
or
adc
mov
inc
and
sub
incb
and
cs
lret
mov
test
stos
mov
aad
sbb
sub
dec
dec
divl
test
stc
inc
mov
xchg
notb
xchg
mov
or
les
into
lret
mov
lret
mov
push
cltd
subl
xchg
shl
mov
shl
jne
lret
aas
inc
or
dec
test
and
gs
or
push
test
lret
in
in
mov
lock
push
fistpl
sahf
sbb
aaa
subb
mov
pop
adc
sbb
fwait
add
add
jnp
xor
mov
adc
invd
stos
es
into
mov
mov
rolb
movsb
fistpll
std
mov
push
add
adc
loope
fsts
cmpsl
es
ret
xchg
xchg
mov
pop
sub
ljmp
and
jge
mov
and
inc
pop
gs
adc
dec
sub
testl
dec
inc
dec
xchg
and
aam
sti
in
sahf
mov
inc
cmp
xchg
das
pop
pop
add
lods
and
add
jl
scas
pop
daa
xlat
cmp
pop
mov
cld
scas
pop
inc
push
cltd
mov
lret
je
inc
nop
xchg
mov
add
sbb
add
mov
mov
shr
scas
in
and
pusha
in
lcall
dec
arpl
pop
dec
fs
cmp
dec
loopne
mov
insb
outsl
cmp
cmpsl
lcall
pop
xchg
jge
sbbb
test
mov
adc
jp
fiaddl
and
ds
sbb
and
and
icebp
fs
fs
xchg
int3
adc
sarb
iret
lss
negb
lock
es
shrb
push
cmp
inc
aaa
lea
xor
daa
mov
aas
cmp
js
cmp
pop
and
ss
clc
add
jecxz
cltd
test
push
add
adc
push
mov
xor
push
imul
cmp
andb
outsb
xor
mov
loopne
jns
and
stos
add
mov
cmp
lods
xor
dec
cmp
jae
xchg
cmpl
cmpsb
aam
jnp
mov
cmpl
shlb
xorb
inc
ss
cmpsb
in
insb
add
fisubrs
repnz
mov
aas
inc
push
xor
jle
jne
in
jg
ficomps
inc
jp
sbb
lods
loopne
imul
mov
xlat
je
ror
push
push
scas
div
cmpsb
sub
push
mov
xchg
mov
cmp
fs
pop
inc
jl
adc
neg
sbb
imul
lock
data16
jle
pop
jb
enter
dec
call
mov
jp
pop
xchg
movsb
add
test
ljmp
sbb
mov
inc
loopne
enter
add
xor
adc
es
cmp
add
cmc
add
dec
xor
jl
push
shlb
cmp
adc
fwait
mov
pop
fldl
adc
add
mov
into
pop
int
inc
movb
out
loope
je
sbb
imul
rclb
mov
scas
fldt
pop
cmpsb
jg
sti
test
mov
sbb
adc
test
pusha
adc
loop
or
repnz
add
shll
out
jecxz
xor
adc
push
shll
loope
aaa
adc
in
mov
push
dec
ljmp
lcall
negl
push
dec
and
stos
sub
into
insl
dec
adc
adc
fsubr
leave
add
outsb
sub
sbb
pusha
mov
arpl
inc
pop
adc
scas
loop
lods
xor
cli
push
pop
daa
repz
arpl
push
cmp
gs
sbb
mov
inc
pop
movsl
adc
push
sbb
mov
xlat
adc
xor
arpl
inc
in
add
adcb
inc
pop
bound
mov
jge
pushf
out
int3
mov
popf
adc
cmp
vdivsd
fwait
lret
dec
mov
and
xor
mov
jae
aas
pop
pop
mov
mov
fistpl
shll
dec
jecxz
adc
fs
sbb
fcoms
movsb
mov
dec
scas
movsb
cli
cmp
push
push
in
fwait
jne
inc
mov
daa
icebp
imul
lcall
sub
dec
fs
sbb
xor
gs
push
insb
jecxz
insb
es
push
sub
aaa
cwtl
mov
xorb
aas
test
outsl
xor
cld
xchg
xchg
xchg
jne
push
call
pop
fcomip
xchg
popa
mov
sub
adc
es
test
ja
mov
rcr
aam
lods
dec
rcrb
xchg
mov
or
outsb
push
out
mov
cmpsl
movsl
xlat
out
mov
push
adc
and
lahf
insl
adc
inc
sti
enter
popa
adc
jns
adc
jne
andb
outsl
sub
aaa
std
int
pop
jmp
adc
add
push
imul
imul
out
js
hlt
mov
xor
jbe
xchg
xchg
aam
fmull
fisttpl
inc
mov
sahf
xchg
pop
adc
fdivr
mov
ret
cs
fwait
test
add
aad
mov
aaa
add
push
shlb
adc
das
add
jno
jno
in
jae
inc
leave
inc
sarl
mov
adc
test
or
into
ret
fisubl
movsl
jae
sub
fcomps
sub
xchg
dec
add
jmp
mov
testb
cmp
test
pop
imul
sbb
imul
push
mov
popf
stos
cwtl
mov
mov
faddl
sarl
pop
je
fwait
or
test
lods
out
or
out
add
sub
pop
lcall
mulb
inc
and
mov
pusha
hlt
mov
mov
add
xchg
add
repnz
loopne
mov
adc
xchg
sahf
rclb
push
xchg
filds
dec
mov
nop
adc
in
inc
jg
insl
mov
inc
jle
xchg
and
arpl
shlb
call
and
push
test
push
stos
or
push
mov
loopne
pop
ret
gs
sub
mov
jnp
clc
fsts
call
xor
xchg
mov
and
cltd
jge
sbb
movl
call
or
cwtl
loopne
inc
dec
mov
cmp
lds
pop
loopne
shll
push
cmp
lret
inc
cwtl
and
stos
and
into
aas
push
rol
imul
js
ja
loopne
dec
pop
inc
cli
cmp
inc
test
fnsave
ja
pop
mov
pop
jns
xor
in
xchg
add
add
mov
mov
loop
lods
adc
mov
fidivrs
ljmp
jmp
divb
dec
inc
mov
in
push
add
sbb
addr16
clc
sbb
sub
inc
sti
push
jl
inc
jne
xchg
fcomps
or
jp
adc
mov
popl
stos
xor
rcrb
mov
xor
add
cmp
lahf
sbb
mov
jecxz
sub
repz
adc
add
scas
loope
ss
mov
add
xchg
dec
dec
nop
push
rorl
sbb
lret
loop
cmpsl
cld
add
mov
pop
outsl
clc
mov
sub
or
push
push
daa
inc
stc
in
pop
rcl
or
enter
or
or
nop
test
mov
aas
ss
jecxz
aad
push
mov
mov
mov
and
addr16
adc
mov
sbbb
mov
dec
push
dec
mov
dec
pop
test
das
adcl
push
movsl
adc
test
in
or
adc
jg
push
out
push
push
std
nop
into
faddl
sbb
fildl
shlb
outsb
cwtl
pop
imul
inc
out
xor
daa
jno
cmpsb
mov
jle
outsl
out
cwtl
cmpb
lcall
orl
jle
pop
xchg
inc
in
outsl
mov
and
pop
dec
enter
daa
push
mov
icebp
jg
inc
in
mov
adc
jo
xor
cli
push
push
call
lcall
aad
test
lahf
xor
ds
mov
jnp
lret
dec
aas
test
addr16
pusha
pop
add
push
or
outsl
add
sub
fs
shrl
sbb
pusha
aam
inc
movsl
mov
aas
sbb
mov
testl
aaa
mov
push
sub
mov
and
xchg
lods
mov
xchg
mov
std
jmp
roll
sub
outsb
fbstp
pop
mov
bound
in
fldl
repnz
iret
rcrl
lret
test
out
mov
inc
or
fidivrs
jb
mov
ljmp
xor
addr16
daa
dec
jns
mov
test
enter
in
mov
sub
not
sbb
sbb
dec
or
das
roll
xchg
cmpsb
mov
icebp
std
or
addr16
sbb
cmpb
mov
and
test
dec
loop
pop
gs
mov
ja
cmp
stos
add
sub
adc
into
ljmp
ret
mov
push
aas
pop
inc
cltd
and
cmp
cld
lock
jg
rcr
sbbl
popa
add
sti
or
movsl
dec
dec
xchg
push
nop
add
push
lds
mov
inc
inc
add
mov
or
popf
std
in
cmp
or
cwtl
mov
ficoms
jecxz
out
and
and
scas
push
adc
pop
in
shlb
dec
test
out
cli
mov
out
popa
pop
xor
adc
pop
dec
loope
in
ljmp
push
repz
jmp
sbb
es
dec
sub
jle
leave
std
xchg
ss
push
fs
mov
loop
dec
fcomps
push
xor
mov
sub
jne
stos
outsb
cmp
aam
pushf
pop
push
dec
mov
pop
das
jns
into
and
std
lcall
out
cld
cmpsb
jb
ret
negl
cs
add
movlps
fwait
pop
fsubrl
add
negl
cmpsl
std
and
push
push
pusha
jecxz
ret
vmwrite
pop
mov
fs
mov
mov
inc
xor
fidivrl
sbb
sti
pop
cmp
mov
addr16
jge
adc
gs
sbb
je
dec
xchg
xrelease
lds
or
add
xchg
xlat
pop
lds
lock
je
repnz
popl
fisttpll
or
icebp
xor
sub
fldcw
mov
fdivrs
xchg
pop
movsl
jb
cmpsb
outsl
mov
stos
mov
in
popa
jp
fs
repnz
sbb
xchg
adc
out
fisubl
xchg
mov
loopne
inc
scas
jb
mov
cmp
pushf
sti
ret
rol
fcmovbe
jb
cmp
sub
and
jns
push
sub
mov
into
pusha
xor
aam
out
sarl
push
rcrl
stos
and
int
outsl
add
inc
jns
jmp
pop
fnstcw
pop
xchg
push
fdivl
and
sbb
and
or
xchg
lret
shrb
jbe
jle
das
jbe
popf
xchg
xchg
xor
xchg
ret
pop
repz
or
stos
pop
mov
add
inc
dec
sbb
pusha
stos
adc
cmp
cltd
cli
mov
xlat
arpl
out
jp
cwtl
cmp
xchg
aam
pusha
xlat
inc
pop
repnz
xchg
jge
sub
movsb
mov
popf
cli
cld
and
mov
sbb
imul
ss
test
cmpsb
sub
xor
add
cmpsb
inc
add
xor
push
loope
inc
inc
xlat
cmp
cmp
xlat
ffree
mov
repnz
inc
mov
test
outsb
cs
inc
mov
lods
jle
mov
add
insl
cli
push
imul
push
cmp
or
xchg
fsubs
dec
mov
pushf
cmp
cmpsl
lds
jle
push
dec
add
movb
xorl
adc
dec
test
daa
cmp
dec
jecxz
icebp
jae
das
fisttpll
or
sub
stc
fimuls
inc
adc
ret
cmp
loopne
inc
jns
ja,pn
test
subl
bound
aaa
push
sbb
mov
mov
or
sti
xchg
push
pushf
clc
and
push
add
clc
xor
jecxz
aas
lahf
popf
dec
add
add
jge
cmp
adcb
mov
nop
lods
mov
push
pop
xchg
fildl
int
or
lret
outsl
mov
lret
lods
add
pop
pop
jl
sbb
push
mov
in
sbb
outsb
call
cld
ja
aas
in
dec
sahf
push
scas
fiadds
cmp
pop
dec
xor
xchg
push
dec
mov
inc
jle
in
test
ss
xor
test
push
imul
mov
fmull
lea
xchg
xchg
mov
out
flds
push
fnstcw
shll
pop
mov
adc
pusha
lret
ss
sbb
out
ds
xchg
mov
push
sbb
inc
add
cwtl
cmp
lods
inc
cmc
push
lahf
xchg
fcomip
inc
psraw
mov
mov
test
out
mov
test
dec
lea
movsl
es
push
insb
mov
insl
repnz
lods
in
dec
jno
lret
adcb
cmp
mov
stc
mov
or
push
adc
jae
adc
xorb
mov
sbb
pop
mov
jl
adc
mov
adc
mulb
movl
mov
cmp
dec
xchg
addr16
mov
xor
cli
mov
and
mov
fsub
repz
test
inc
and
add
mov
mov
sub
sqrtps
xchg
aad
clc
add
mov
dec
jae
mov
into
stos
pushf
dec
daa
or
add
xor
add
into
push
cli
mov
mov
loop
cmp
ja
ljmp
push
push
add
sub
cltd
mov
add
sub
das
sub
and
stos
adc
aaa
jl
sbb
cwtl
pop
push
lods
incb
mov
out
inc
mov
cmc
add
inc
jecxz
addr16
hlt
enter
cmpsb
mov
test
adc
xor
in
popf
aam
shrl
lcall
in
xor
dec
icebp
xchg
dec
fidivrl
xchg
jnp
outsl
ja
push
decb
or
and
xor
jg
mov
daa
mov
addb
pushf
clc
xchg
ret
mov
into
or
movsb
iret
add
push
shll
xchg
mov
sub
out
pop
mov
cmpb
pushf
jnp
cmp
adc
dec
lea
mov
cs
and
pop
dec
dec
cmp
xor
imul
bound
fists
mov
int
inc
ds
sarl
in
imull
dec
sbbl
iret
jns
loope
repz
insl
inc
dec
mov
xlat
repnz
mov
clc
pop
out
mov
out
movsl
xchg
jo
mov
dec
dec
mov
aas
cwtl
jne
fxch
dec
push
or
sub
jp
mov
call
nop
sbb
mov
cmp
pop
xchg
pop
mov
cmp
mov
test
cmp
data16
sarl
xchg
push
arpl
xor
dec
enter
insb
jecxz
or
inc
fbld
enter
mov
addr16
or
or
xchg
add
adc
dec
lahf
xor
or
aas
push
scas
ficoml
popa
addr16
pop
jg
or
fsubl
arpl
dec
hlt
mov
out
ret
fisttps
lods
lds
ret
push
xchg
lahf
xor
xor
pop
imul
test
push
data16
pop
xor
cmp
xor
iret
sahf
cmp
mov
mov
mov
jnp
cmp
call
jo
ja
xchg
movsl
add
cs
xlat
add
aad
pop
push
jnp
jge
mov
mov
lret
and
hlt
or
pop
icebp
enter
push
out
pop
pop
rcrl
push
xchg
fldenv
ljmp
adc
xchg
add
sarb
and
sub
fisttpl
mov
aas
and
ja
fcompl
sbb
movsb
stos
mov
sti
jecxz
mov
lods
sbb
jmp
rorl
repz
imul
and
xlat
adc
mov
jnp
sbb
push
stos
lcall
and
pop
mov
sbb
push
imul
cmpsl
mov
scas
xor
leave
outsl
pop
add
into
mov
ja
xor
or
xchg
add
dec
fiaddl
push
sbb
push
xlat
stos
fidivrl
xor
fwait
push
adc
push
ret
out
shl
add
mov
sbb
das
inc
inc
rcrl
cmp
push
pop
mov
pushf
xchg
mov
sbb
addb
test
push
out
out
fnstsw
cmpsb
sub
lcall
in
add
mov
sbb
pushf
add
push
shll
mov
fst
fsub
insb
inc
sub
test
mov
hlt
pop
adc
jecxz
xor
adc
movsl
sarb
rcl
or
fcoms
dec
dec
mov
movsb
in
repnz
mov
mov
xor
sub
jae
repz
inc
jnp
cmpl
pop
data16
rorb
push
mov
or
jno
xchg
outsl
mov
scas
push
fisttpl
lcall
ds
dec
dec
adc
je
scas
mov
fisubs
jmp
lret
jb
mov
aam
call
jp
xchg
jl
add
pop
rcl
test
loop
leave
push
xchg
sbb
jg
mov
sub
or
push
gs
jg
cli
jg
je
es
push
in
mov
dec
xor
add
jne
dec
cmp
mov
cmpl
jae
scas
pop
rclb
dec
out
pop
mov
nop
or
adc
aas
jge
cmp
mov
mov
xchg
jg
das
mov
mov
clc
sub
pop
dec
lcall
fstps
pushf
xchg
jne
outsl
fmul
and
xlat
xchg
iret
icebp
popf
cmp
lock
xchg
jbe
cwtl
and
push
jb
jecxz
push
mov
fwait
xor
lahf
out
sub
mov
mov
fcomip
lods
testb
cmp
mov
push
pop
lahf
lret
push
cmp
sarb
and
pop
jl
mov
sti
rcr
adc
push
xchg
scas
icebp
xchg
test
lcall
xchg
lahf
pop
mov
stos
hlt
sbb
test
push
add
pushf
movsl
cmp
and
push
inc
pusha
stc
loopne
into
and
cmpsl
push
sub
mov
imul
inc
fmuls
popa
iret
popa
addr16
jmp
out
loop
mov
and
sbb
fwait
pop
push
bound
ljmp
repnz
mov
je
lcall
je
lret
ds
jmp
shl
movsl
lea
push
popf
shr
jbe
sub
test
jnp
sahf
inc
mov
inc
mov
inc
mov
or
enter
fs
ret
dec
and
add
xchg
mov
and
daa
and
paddusb
rol
clc
pop
inc
cs
fnstenv
pop
mov
xor
je
cltd
lret
or
sub
jns
pusha
add
and
cmp
fadds
stc
loopne
bound
dec
or
add
mov
rclb
outsl
push
dec
or
and
test
fidivl
aam
dec
xor
xor
in
and
aaa
mov
addr16
arpl
jp
or
inc
fsubr
sti
sub
push
mov
inc
cltd
push
mov
xchg
push
je
shll
pop
int3
test
popa
xchg
out
fsubrs
sub
loop
sub
enter
dec
in
inc
aad
addb
xlat
cmp
xlat
sub
fnstenv
sbb
mov
jg
imul
inc
xor
cwtl
add
pusha
sbb
imul
enter
adc
mov
mov
stos
push
adc
ds
lret
inc
jg
adc
outsb
fcmove
fs
add
mov
inc
mov
cmp
js
pop
nop
jge
dec
clc
cltd
ret
dec
or
xor
add
adc
test
jns
lret
adc
push
sbb
and
mov
es
inc
dec
fldl
add
mov
or
add
fstpl
lods
icebp
clc
or
pop
lret
jmp
or
cmp
ficoml
stos
int
pop
sub
or
cs
in
sbb
insb
jle
mov
pop
out
mov
imulb
out
push
mov
xor
inc
sbb
shrl
gs
xacquire
xchg
stc
filds
or
and
shlb
adc
ljmp
les
out
dec
test
fucompp
pop
xor
push
sbb
popa
inc
xor
stos
insl
subl
mov
mov
push
mov
cmp
imul
popf
mov
jb
jmp
cmpsb
mov
push
mov
cmp
mov
fs
cmp
dec
xor
rcr
sub
or
imul
cmp
popf
stos
add
xchg
jp
addl
push
mov
mov
xor
lods
pushf
addr16
mov
shl
jnp
movsl
sbb
or
mov
push
sahf
int
sub
sbb
mov
sbb
in
mov
dec
imul
les
jo
int
mov
dec
mov
jae
out
sbb
fbstp
test
or
scas
or
mov
xor
test
dec
pop
sub
in
mov
mov
mov
iret
pop
int3
int3
pop
fsubr
fnstcw
or
cmp
pop
jp
jecxz
jecxz
roll
dec
addr16
mov
inc
pop
push
lcall
aad
fisttps
pop
jbe
dec
inc
sub
and
pop
adc
das
clc
mov
repnz
cmc
adc
test
inc
add
fs
leave
repnz
pop
adc
aad
xchg
inc
sbb
pop
adc
leave
inc
xchg
jecxz
iret
je
and
push
pop
cmp
sbb
mov
dec
xor
dec
push
aas
lahf
jns
xchg
leave
sub
xchg
hlt
mov
push
or
mov
int
xor
fimull
subl
sbb
jno
dec
fwait
xor
aaa
ljmp
or
inc
cmp
out
ret
imul
cmp
xchg
pushf
jbe
in
jecxz
xchg
rorl
mov
xor
cs
dec
jns
push
pop
out
add
les
sbb
push
loope
leave
dec
ret
pop
push
shrl
mov
test
push
call
and
sahf
sub
mov
ret
jnp
xor
jp
push
btr
arpl
push
or
das
imul
sahf
xor
mov
pop
adc
dec
ret
sub
leave
xchg
add
ret
stc
pop
xchg
xchg
into
popa
mov
inc
test
xor
scas
mov
or
jb
lret
mov
xchg
gs
adc
mov
leave
inc
dec
adc
cmp
mov
sub
dec
imul
loop
sub
jge
out
lcall
sub
push
sarl
leave
or
icebp
jns
shrl
cmp
and
js
mov
andb
dec
jb
leave
mov
xchg
fnstsw
loope
lahf
sbb
or
mov
jnp
cli
xor
push
dec
iret
add
inc
in
mov
ljmp
dec
inc
das
enter
idivl
xchg
fildll
xchg
jnp
xchg
push
add
cltd
rcr
xchg
enter
sub
add
call
pop
lods
jns
xchg
cmp
adc
mov
or
mov
xchg
and
add
push
js
loopne
mov
mov
fld
fstp
lcall
fwait
xor
das
push
pop
or
pop
loop
shl
movsb
mov
repz
pop
repnz
jbe
cwtl
rolb
pop
hlt
fwait
movsl
iret
andl
fldt
jae
fdivs
daa
jl
sbb
int3
lret
cli
jo
push
sub
cmpsb
inc
add
mov
in
popa
ss
ss
leave
into
mov
leave
sub
jp
and
or
sub
aad
and
adc
jl
ss
stos
fists
inc
pop
xchg
xchg
lea
xchg
mov
push
push
sbb
lods
fldcw
dec
ss
cmpsb
push
mov
xor
xchg
pusha
adc
sahf
add
mov
adc
imul
outsl
or
ficoms
pushf
arpl
pushf
push
pop
sub
mov
pusha
pop
xor
ret
mov
and
lds
orl
xor
mov
mov
mov
jmp
mov
cmp
out
bound
shrl
inc
cmp
sbb
fiaddl
mov
push
cmp
jnp
jnp
sub
das
lea
lret
jge
mov
stos
insl
adc
mov
bound
mov
fstpl
daa
mov
sub
sbb
adc
pop
test
xor
imulb
movsl
mov
outsb
imul
sti
inc
ja
inc
movsl
sub
fsubrl
lea
sti
jp
xchg
jno
outsl
js
enter
fsubr
dec
ja
and
push
inc
xor
xor
mov
sbb
jp
imul
pop
xor
mov
or
push
push
rcrl
sub
dec
lds
ss
out
fsubrs
xorb
xchg
fucom
fwait
jb
sti
popf
add
or
inc
es
push
cmp
cld
adc
pop
cmpsl
andl
mov
or
xor
cli
cmp
xchg
hlt
cmpsl
cmp
xor
int3
jnp
ss
repnz
decb
or
dec
mov
mov
in
push
pushf
cmpsb
ljmp
test
mov
dec
and
or
mov
push
lock
ret
push
push
stos
popa
xor
outsl
and
sbb
std
cmc
scas
push
cmp
loopne
scas
sti
fs
adc
dec
push
xchg
pop
rol
stc
jl
nop
repz
mov
imul
shlb
pushf
pop
cmp
push
scas
xor
inc
loopne
and
imul
sub
mov
sbb
mov
nop
sbb
xor
pop
mov
mov
add
mov
xchg
shlb
andl
xor
loope
cmp
jne
dec
xor
dec
lds
cmp
inc
jno
leave
repz
mov
sub
and
or
push
cltd
mov
or
bnd
mov
lods
scas
dec
test
push
dec
hlt
loope
jbe
sahf
lret
cld
cmp
addl
popa
ficoms
sbb
mov
mov
dec
pop
test
and
xchg
sbb
fbstp
xor
inc
lods
sbb
xor
cli
push
into
push
jnp
jge
cli
je
and
or
lret
pop
lcall
jb
jle
bound
movsl
sub
cs
movsl
andl
sbb
dec
jg
icebp
pop
fsubs
ds
int
pop
xchg
out
call
ret
gs
xor
xor
ret
fildll
outsb
ja
rcr
std
in
mov
gs
xchg
mov
adc
dec
cmp
lods
jae
push
mov
mov
cltd
fstpl
arpl
xchg
xor
inc
pop
daa
cwtl
lahf
pop
cmc
jmp
cmc
orb
dec
jnp
loop
mov
shll
std
sub
in
decb
mov
fnstenv
pop
cli
shlb
int3
pop
add
icebp
cli
push
adc
xor
sub
in
mov
iret
mov
cmp
shlb
dec
adc
bound
mov
popf
shrb
dec
dec
xchg
divb
test
stos
test
mov
mov
addr16
loop
fisubrs
repz
je
ret
andb
bswap
gs
push
or
and
sarb
mov
mov
ja
pop
loop
je
outsb
jne
inc
xor
xor
mov
in
stc
stos
or
rcr
dec
xchg
test
inc
pop
pop
jae
shl
ret
repz
or
dec
push
or
mov
movsl
add
loopne
adc
fs
inc
jp
mov
jge
shrb
iret
jg
and
jge
xlat
jecxz
adc
int3
xchg
mov
aad
sahf
mov
dec
push
cmp
fsubr
adc
adc
jmp
mov
test
repnz
and
jae
lds
std
mov
pop
adc
mov
jg
test
xchg
mov
sub
jbe
test
xchg
ljmp
add
sub
fistpll
xchg
mov
pop
cmp
shlb
push
movsl
lret
jb
lcall
or
add
clc
sahf
lahf
das
aaa
fwait
rep
xor
jle
dec
mov
out
and
adc
add
adc
inc
ds
orb
hlt
loop
in
xchg
pop
pop
sbb
repnz
loopne
stos
push
fstps
ljmp
push
mov
lods
shll
lret
mov
out
loopne
sub
xchg
stos
jno
hlt
bound
pop
sbb
sbb
pop
cmp
and
push
push
pop
cmp
mov
pop
shl
pop
movb
inc
sub
dec
ret
push
js
nop
sbb
mov
ret
pop
mov
scas
jbe
mov
out
add
inc
inc
xchg
out
lds
sti
push
dec
xor
jmp
dec
pop
pop
pop
f2xm1
flds
mov
movb
roll
imul
cmp
jecxz
mov
and
fsubrs
fnsave
mov
mov
mov
into
jae
xchg
hlt
sub
xchg
stos
fwait
mov
xlat
pushf
jg
xchg
out
sbb
adc
and
mull
inc
adc
xorb
push
adc
jge
adc
ret
pop
repnz
mov
pushf
sub
xor
cmp
mov
mov
mov
rep
shlb
aaa
mov
jl
mov
push
mov
addr16
cmp
nop
mov
push
movsl
xchg
or
pop
xchg
push
xchg
sbb
mov
cmp
dec
mov
adc
and
imul
add
and
add
xchg
insl
pop
pop
or
jmp
adcl
test
sti
insb
sub
int3
inc
pop
ljmp
cmp
mul
pop
push
mov
xchg
cmp
dec
pushf
outsb
lods
and
xlat
push
movsb
push
cltd
ficomps
jge
ret
hlt
fstpt
mov
mov
iret
xor
popf
dec
popa
jge
push
out
jae
aam
push
cmp
push
mov
push
push
sbb
inc
mov
inc
sahf
dec
push
aaa
lcall
test
gs
outsb
or
push
ret
and
fimull
push
mov
out
arpl
pop
inc
pop
push
or
jns
faddl
jb
aaa
xor
push
icebp
in
sub
dec
pushf
sbb
insb
inc
sub
stos
icebp
addr16
push
loopne
fbld
cld
mov
nop
clc
out
stos
nop
dec
std
xchg
sbb
sub
cmp
lcall
pusha
dec
pop
sub
ss
pop
lgdtl
mov
or
in
mov
loop
add
repz
nop
lret
movsb
adc
mov
adc
lock
stc
adc
xlat
repnz
xlat
sub
mov
jmp
stos
or
xorl
insb
pop
dec
mov
mov
jo
bound
imulb
test
addr16
and
pop
cmc
mov
or
rep
cs
ja
inc
or
stos
and
pop
or
ret
xlat
shrb
std
test
nop
addb
repz
push
push
sarl
cmpl
cmp
xor
jns
stos
sub
andl
rorb
push
enter
cmp
loope
pop
fiadds
movsb
frstor
cmp
fdivrl
push
iret
rorl
mov
jcxz
cmp
test
fisubs
loope
push
mov
loop
or
js
sub
ret
data16
hlt
mov
fnsave
scas
fidivrl
scas
inc
stos
lea
xchg
xchg
dec
jmp
cmpsl
mov
or
mov
lea
pop
sub
or
pushf
nop
shl
dec
movsb
xchg
push
sbb
jb
lahf
xchg
mov
arpl
leave
je
std
negl
mov
sub
cwtl
ljmp
in
jmp
lods
mov
subl
jg
lock
or
jecxz
enter
sub
imul
ljmp
cmpsl
rolb
xchg
xor
outsl
xchg
mov
dec
or
das
lcall
cli
popf
popf
push
rol
aas
or
add
add
and
icebp
xchg
pop
jns
fistpll
cwtl
cli
loope
jp
xchg
adc
daa
repnz
pop
pop
leave
push
sbb
mov
decl
dec
mov
aad
inc
and
jg
sbb
or
movsb
xor
aas
lods
ss
cmp
loope
mov
sbb
push
mov
stos
sti
jns
xor
cmp
cwtl
bound
stc
mov
xchg
push
mov
pop
jle
repz
loope
dec
cmp
jmp
cld
inc
cmp
push
addr16
shl
mov
loop
mov
adc
cltd
cmp
push
aam
xchg
in
icebp
dec
movsl
imul
cmpsl
loope
loope,pn
mov
fsubl
in
cmp
mov
dec
js
or
xorb
adc
mov
testb
and
das
pop
or
cmp
jmp
gs
inc
fidivl
pushf
cmc
rcrb
mov
xchg
push
pop
adcl
inc
scas
xor
jmp
lret
pop
cmc
fisttpll
xchg
push
pop
arpl
mov
popa
mov
push
xchg
jl
cs
xchg
stos
subl
mov
mov
xchg
les
pop
jnp
jns
sbb
inc
out
adc
fwait
xchg
data16
cs
mov
iret
sub
pop
sub
adc
shlb
sub
nop
jae
gs
or
jle
mov
pcmpeqd
sub
lds
ret
dec
jae
out
outsb
test
mov
in
jbe
pop
dec
aaa
movsb
and
sbb
dec
popf
xchg
popa
mov
sub
ja
clc
mov
jnp
pushf
push
jb
cmp
out
insb
test
sti
inc
repz
dec
test
test
or
xor
adc
xchg
ret
inc
pop
arpl
jg
pusha
mov
xor
sub
scas
inc
std
test
in
aaa
test
sar
mov
jns
mov
lahf
cmpsl
jp
ljmp
add
pop
sub
jb
add
jp
jb
outsl
fists
lods
xlat
lret
stc
xchg
lods
jno
push
popf
es
incl
popf
cli
mov
ds
mov
and
jg
pusha
mov
fistpll
arpl
repz
lahf
adc
je
sbb
lcall
arpl
aaa
mov
ud0
gs
sbbb
push
leave
insb
pop
cmp
lods
cld
mov
fidivs
mov
mov
test
sbb
sub
pop
mov
jno
mov
ror
ret
add
out
mov
xor
lahf
mov
aas
jb
in
cmpsl
push
dec
cli
adc
jne
outsb
subl
xlat
sbb
and
xchg
or
mov
pop
mov
aaa
add
xor
jbe
pop
push
das
dec
ret
mov
testl
jae
or
out
xchg
test
es
int3
add
cmpsl
aad
push
aaa
push
in
movsl
mov
and
out
rclb
or
subl
loopne
mov
popf
push
pop
mov
orl
lock
cmc
outsb
mov
mov
lock
cmp
xchg
enter
inc
lcall
jo
xchg
cmpsl
imul
sub
xchg
xchg
insb
iret
pop
inc
scas
daa
lea
test
inc
js
daa
dec
mov
dec
xor
jge
push
xlat
outsb
jo
pop
imul
or
fdiv
lods
clc
inc
cmp
repz
pop
xchg
rcrb
icebp
add
stc
push
pop
aas
sti
popa
in
jne
inc
out
add
jb
and
and
repnz
out
mov
sub
sbb
inc
and
inc
leave
nop
fadd
jecxz
lods
sarb
cmp
mov
mov
sub
sub
cmc
jne
jns
bswap
daa
nop
jnp
add
dec
repnz
xor
lret
jge
jb
jecxz
out
jnp
mov
and
push
je
cmpsl
pop
xchg
cld
dec
pop
into
addr16
outsb
rcrl
sarb
and
and
shlb
add
add
popa
scas
arpl
jo
sub
cmp
mov
mov
xchg
push
insl
inc
xor
cmp
pushf
push
xchg
adc
out
rcl
xchg
clc
into
lea
or
subb
in
es
pop
add
call
into
push
jmp
xchg
xchg
pop
add
xorps
in
vmovhps
call
loop
pop
aas
mov
fwait
mov
aaa
jecxz
cltd
inc
sub
pop
xchg
hlt
jbe
bnd
pop
xchg
xor
xchg
enter
pop
aaa
je
das
sub
xchg
sbb
lods
pop
xor
sti
out
add
stos
mov
cmpsl
lock
adc
push
xchg
movsb
cmp
fbstp
scas
adc
pop
movl
mov
divl
fisubrl
xchg
xor
cwtl
or
pushf
dec
jno
pop
xchg
movsl
sti
loopne
push
jl
adc
imul
xchg
les
adc
out
lods
and
push
imul
les
pop
out
pop
call
ljmp
out
mov
add
bound
jo
ljmp
mov
in
dec
dec
or
clc
pushf
cs
pop
popl
mov
addr16
outsb
jb
mov
fldt
mov
fisubs
and
or
clc
ja
cmp
clc
loope
or
xor
inc
inc
cmpsl
lods
lret
lahf
cmp
fiaddl
clc
jge
rolb
test
pusha
mov
leave
addr16
je
sub
push
push
push
xchg
les
outsb
jl
inc
addl
sub
out
scas
pop
test
push
jns
and
push
xor
stos
sub
ret
jno
fcomi
clc
loop
outsb
sahf
cli
pushf
fwait
jnp
mov
push
mov
or
pop
arpl
enter
sbb
lods
sahf
xchg
hlt
mov
push
das
add
aam
data16
inc
dec
mov
mov
add
repz
shll
arpl
stos
xor
and
xchg
jbe
mov
or
or
popa
push
pop
jge
popa
out
inc
jb
cli
imul
pop
sub
cmp
mov
into
mov
jp
ja
icebp
iret
jae
dec
jmp
clc
test
jne
xor
rol
pop
jns
pop
mov
push
dec
sahf
dec
jbe
pop
push
popa
leavew
adc
out
pop
add
xchg
push
add
dec
cmp
mov
and
mov
mov
lea
pushw
fs
pop
sbb
inc
fsubrl
daa
outsb
cli
or
ret
xchg
ljmp
push
cmp
aam
push
cltd
les
xor
xorb
adc
shll
lret
xchg
inc
pop
xchg
hlt
out
cmc
neg
ss
test
pop
mov
scas
scas
mov
mov
out
sub
cli
in
movsl
lea
fsubr
or
mov
das
sbb
pop
or
or
add
dec
dec
in
sub
or
adc
lcall
dec
or
jbe
sbb
mov
pushf
pushf
testl
je
ret
jbe
imul
lods
dec
mov
dec
addb
mov
pop
dec
inc
cmpsb
or
mov
pusha
sahf
in
mov
jnp
stos
sbb
das
les
out
push
mov
les
cs
es
jnp
dec
lds
dec
push
out
dec
cwtl
sub
movsl
filds
iret
push
lret
nop
jp
mov
jle
pop
jmp
ja
push
pop
into
movl
dec
fcompl
stos
add
cmpsl
test
test
xchg
test
test
mov
lea
fsubrs
add
sbb
pop
dec
add
in
mov
cld
jecxz
mov
push
push
enter
scas
mov
imul
push
mov
jecxz
enter
cltd
dec
dec
in
mov
in
outsl
and
mov
popa
insb
cmp
ljmp
cltd
adc
adc
xchg
dec
popf
jge
lcall
mov
fstpl
bnd
cmp
sti
fists
out
dec
pop
inc
push
repz
sub
cwtl
push
mull
popa
dec
or
clc
cmp
adc
fstpt
sub
stos
inc
imul
or
lock
jge
cmp
pop
mov
lea
scas
lahf
aam
nop
movsl
icebp
mov
push
in
cmp
fbld
icebp
in
xor
adc
inc
jo
sub
jb
jnp
fsubrs
add
fidivrl
mov
psraw
cli
inc
push
adc
and
jle
mov
stc
pop
cmp
bound
fiaddl
int3
enter
insb
leave
in
pop
lret
xor
jnp
rorl
in
in
jl
cmpsl
in
inc
nop
fiaddl
cld
jmp
shl
adc
lahf
into
mov
sub
sbb
mov
mov
enter
mov
jge
dec
orb
pop
out
lahf
nop
scas
xchg
push
sub
sti
push
push
jl
push
imul
loope
ds
stos
mov
xchg
mov
pop
and
insl
mov
push
enter
push
pop
or
push
add
jne
outsl
jne
into
enter
fsubp
lret
sbb
sub
sub
mov
es
adc
cmp
lret
xchg
pop
cmpsl
adc
xchg
out
ljmp
inc
ds
push
lods
push
mov
repnz
dec
and
adc
push
xor
repz
or
xchg
sbb
jbe
pop
xchg
mov
jecxz
pushf
mul
cmp
test
push
je
pusha
cwtl
ljmp
es
movsl
aas
lahf
lcall
or
scas
fdivl
sbb
ja
or
or
adc
sbb
icebp
andl
jge
and
jbe
xor
dec
sti
pusha
insb
xor
mov
inc
daa
push
imul
enter
jae
inc
inc
jo
sbb
dec
mov
or
lret
mov
sub
testl
out
fdiv
hlt
test
push
add
lea
add
sub
cltd
xchg
scas
push
test
inc
or
jno
jle
ret
js
cmp
out
imul
stos
dec
inc
cmpl
xor
jno
pop
push
je
pop
mov
mov
mov
mov
iret
jle
mov
ret
lock
inc
das
enter
xor
or
push
mov
add
mov
out
or
mov
or
cld
aas
fst
fdivs
xor
ret
pushf
push
and
dec
flds
es
mov
insl
dec
mov
icebp
inc
popf
inc
xor
and
mov
sar
cltd
les
or
sbb
push
pop
push
mov
xor
xor
test
mov
rolb
mov
cltd
insl
jae
repnz
mov
ror
xchg
scas
lahf
insb
push
lock
in
xchg
dec
add
mov
sub
insl
bound
test
mov
aad
lret
aaa
movsl
fidivs
push
push
fs
sbb
out
rolb
inc
push
mov
pop
and
sbb
push
inc
enter
testl
push
push
sbb
in
or
mov
les
pusha
pop
test
adc
adc
and
rolb
dec
lods
adc
data16
mov
adc
pop
add
pushf
lea
incb
lahf
add
pop
into
lods
or
xchg
mov
stc
adc
xor
or
pop
xchg
inc
or
push
mov
xchg
jmp
jne
add
cmp
andb
das
adc
xchg
iret
xor
cs
push
scas
nop
mov
push
stos
mov
pop
data16
sub
mov
mov
dec
adc
repz
and
jge
scas
test
mov
ss
or
test
insl
repz
sub
gs
dec
xor
enter
mov
push
lock
lret
cmpsl
and
pop
mov
or
repnz
xor
add
outsl
adc
jp
fbld
nop
dec
xchg
adc
pop
out
imul
jecxz
sub
adc
cltd
pop
push
mov
shr
inc
xlat
xchg
movsb
dec
cmc
push
or
jp
cmp
sub
jmp
in
sub
adc
mov
pop
mov
or
sarl
and
sub
push
pop
sub
jb
gs
fmull
sub
lds
jnp
int3
pop
mov
jno
sub
mov
mov
outsb
or
sub
test
stos
in
imul
js
pop
inc
jae
cltd
fbstp
sarb
pop
into
mov
rcrb
push
adc
lds
pusha
lock
test
popf
jbe
movsb
xlat
xchg
insl
nop
sbb
xchg
out
inc
fcomi
cmp
or
xchg
fsin
das
and
popf
inc
in
mov
ds
jmp
jecxz
xor
mov
mov
jb
inc
xchg
sub
mov
add
and
gs
inc
cmc
scas
iret
popa
mov
or
add
cli
inc
in
dec
sub
mov
in
idivb
jmp
inc
sarl
sbb
test
push
test
xchg
or
inc
xor
cmpsl
xor
in
stc
xor
adc
sub
movsl
jae
lock
adc
xchg
or
adc
mov
xchg
into
insl
hlt
or
or
in
inc
xchg
addr16
dec
mov
mov
lcall
or
push
cmp
pop
aam
scas
sub
xor
in
push
sbb
push
or
mov
xchg
adc
out
nop
inc
rcrb
push
or
fildll
pop
dec
mov
sub
cmp
mov
or
mov
push
or
pushf
jns
lods
or
and
sub
mov
out
dec
adc
and
jb
push
fmul
lods
cmp
and
imul
sub
insb
lahf
lods
or
insl
push
int3
outsl
mov
xchg
pushf
icebp
sar
xchg
lock
rcll
jno
pop
sub
clc
ret
hlt
and
push
mov
mov
fldpi
push
push
cmc
test
sbb
jno
xor
jae
insb
inc
sub
inc
and
pop
adc
dec
test
lcall
test
jno
jne
hlt
lret
sbb
loop
and
dec
out
shrb
ja
or
imul
adc
and
fwait
pop
cli
out
mov
pushf
lret
mov
paddb
inc
cltd
addr16
cmpsb
push
fiaddl
cmp
sub
add
cltd
adc
dec
jnp
inc
test
inc
pushl
xchg
adc
or
movsl
aad
data16
xchg
mov
xchg
je
bound
add
mov
jne
mov
data16
dec
repz
popf
pop
negb
cs
push
rorb
push
pop
pusha
mov
daa
roll
ss
jb
adc
aas
xor
adc
ret
adc
mov
icebp
in
xor
cmpb
cmpsl
adcb
sbb
les
jecxz
pop
ficoms
sahf
mov
dec
lods
jne
test
xor
movsl
push
roll
sahf
dec
mov
pop
aas
imul
in
inc
popf
nop
ss
and
push
mov
or
bound
jns
fdivl
in
mov
test
add
push
in
lods
push
sbb
ljmp
jbe
iret
xchg
hlt
movsb
inc
nop
jnp
mov
dec
add
and
push
paddw
cmp
push
mov
clc
mov
xchg
mov
xor
stos
lret
ss
adc
stos
add
mov
xchg
fistps
outsb
add
out
loopne
push
mov
dec
movb
cli
subb
push
lods
fnstenv
push
adc
xchg
out
sbb
inc
mov
add
jmp
fdivrs
push
arpl
dec
adc
mov
lahf
lods
mov
vprotd
xchg
add
mov
xchg
loop
jle
sti
out
and
jae
movb
orb
test
ljmp
mov
mov
in
rcll
es
int
outsl
adcl
sub
mov
inc
inc
xchg
insl
aaa
orb
cmc
xor
testl
es
insl
fsubl
add
or
or
dec
pop
out
mov
int
iret
jno
mov
adc
jne
jmp
outsl
add
add
mov
fs
out
adc
roll
inc
sub
int
fadds
mov
ficompl
fcoml
popa
or
push
sbb
add
lret
jmp
xor
jle
enter
add
push
xchg
jle
lret
push
adc
adc
sbb
jno
les
jg
pop
cli
jns
jmp
mov
pop
fmuls
ficoml
daa
cmp
pop
out
cmpsb
daa
jge
jmp
xchg
sbb
sbb
mov
add
and
or
jnp
xor
outsb
aad
fldlg2
jns
pop
add
push
xor
inc
jae
adc
xchg
mov
out
and
and
aas
hlt
sbb
lods
outsl
cmp
jmp
loopne
xchg
lock
xchg
xor
shrb
pop
xlat
int3
add
mov
lea
pusha
pusha
aas
and
daa
cmpl
push
xorb
jle
jecxz
addl
imul
out
ds
push
and
in
dec
mov
rcrb
out
fneni(8087
mov
mov
movsb
inc
cmp
adc
cwtl
ss
es
mov
scas
mov
push
fptan
stos
sub
pusha
test
sub
dec
sti
pop
out
lcall
stos
fimuls
jecxz
test
cmp
mov
andl
xchg
xorl
and
and
mov
xchg
pusha
test
xchg
idivb
cmpsl
dec
es
mov
cmp
lret
fcompl
cmc
cmpsb
gs
push
xor
mov
dec
fsubs
les
sub
and
fidivl
jecxz
cmp
cmp
jmp
push
jbe
loop
push
mov
xor
dec
pop
shrb
out
dec
jle
scas
cs
es
xchg
dec
inc
sub
jecxz
int3
add
cltd
mov
inc
jno
fimuls
push
add
and
mov
dec
incl
outsb
inc
push
imul
push
leave
mov
mov
test
mov
jg
ss
jmp
aas
xlat
roll
lods
mov
fisubrl
xchg
xchg
push
fisubrs
adc
dec
pop
lods
jmp
push
aad
jo
push
xor
shl
in
aaa
ss
out
lret
out
mov
rcl
out
inc
mov
dec
lea
insl
push
jle
faddl
jge
mov
ja
popa
mov
sbb
push
fwait
xor
or
insb
fucom
gs
in
mov
inc
push
adc
xor
inc
mov
rorb
push
inc
daa
lahf
xor
xchg
inc
xor
sti
mov
stos
mov
iret
rorl
cmpb
notl
dec
jge
cmpsl
add
mov
adc
jl
test
fdivl
add
outsb
out
xor
arpl
or
sbb
std
add
outsl
or
jnp
mov
stos
movsb
ret
mov
repz
mov
mov
bound
inc
sub
push
add
fistpl
ds
scas
sbb
and
add
adc
insb
xchg
ficompl
repnz
push
lods
inc
popa
inc
sbbb
xchg
jg
xlat
xchg
jg
in
push
daa
out
mov
and
aas
mov
inc
cmp
mov
insl
js
sbb
sbb
jb
insb
repnz
mov
pushf
pop
loope
pushf
mov
jmp
push
cli
cltd
pop
popa
out
shrl
and
xlat
xlat
add
or
sti
ds
jno
mov
jne
mov
push
clc
std
mov
addr16
and
dec
xor
push
xor
xchg
cmp
test
inc
call
data16
jecxz
sub
test
pop
sub
enter
nop
shr
addb
adc
jbe
xchg
fdivr
xor
sbb
movsb
cmp
nop
inc
jno
add
movsb
cmc
dec
cld
loop
or
lock
mov
lcall
fldl
lret
pushf
xchg
call
pop
pop
lret
idiv
push
lret
push
dec
and
xor
les
add
pop
cmp
fwait
sub
inc
sub
adc
scas
mov
loopne
ficoml
cld
or
fnstcw
in
mov
push
jne
dec
sub
cmp
sub
mov
mov
push
lds
fistpll
js
idivb
clc
sbb
call
ret
mov
icebp
insl
sbb
mov
or
sub
aad
jae
push
or
mov
jbe
repz
int3
aas
cmp
xchg
sub
jl
mov
jns
dec
xchg
loop
cld
push
adc
data16
stos
and
inc
push
or
mov
inc
xchg
cmp
xchg
fnstsw
ss
xor
xchg
sti
or
ds
pop
popf
cvtps2pi
sahf
mov
adc
push
dec
sub
push
cmove
adc
dec
jnp
loop
mov
sub
rolb
aaa
pop
shrl
call
test
hlt
out
pop
pushf
lahf
enter
or
inc
inc
pop
insl
adc
jge
bound
je
clc
jmp
fs
push
bswap
out
aas
push
jge
iret
mov
loope
fcoml
add
and
dec
jecxz
aam
mov
popf
jmp
adc
xor
js
in
loopne
mov
pop
mov
mov
cmp
fs
shrb
fstps
in
or
jno
or
jns
stos
xchg
add
or
push
push
aaa
dec
cmp
cmpb
cld
pop
imul
fwait
push
push
data16
mov
incb
or
xchg
add
jb
mov
cs
sarl
add
adc
adc
xchg
jmp
jmp
mov
inc
sub
ror
loop
push
xchg
loope
mov
add
into
les
pop
in
mov
dec
repnz
mov
punpckhdq
sub
sub
fidivrs
scas
mov
mov
and
cmp
leave
cmpsl
jp
mov
lahf
adc
pop
add
mov
cmp
add
outsb
iret
mov
fisubl
imul
mov
je
pop
add
jae
aas
ret
pushf
sbb
pop
lret
lods
mov
stos
jo
imul
lods
push
inc
add
dec
or
xchg
in
inc
push
sahf
mov
outsb
sti
out
pusha
push
push
xchg
hlt
push
xchg
dec
add
jns
sbbb
stc
sar
stos
lds
test
sub
mov
sub
fwait
shll
and
pop
mov
or
and
fistps
add
and
mov
cltd
sbb
rcll
adc
out
inc
sarb
jp
repnz
inc
jmp
aaa
pop
mov
jae
mov
jle
int
sbb
outsb
add
mov
pop
lret
cmp
sbb
fwait
pop
mov
add
mov
bound
lret
loope
repz
out
fadds
and
js
jns
push
sub
mov
je
outsb
sbb
cld
data16
and
mov
xchg
fucomi
leave
add
int
scas
inc
test
pop
jns
je
pop
cmp
mov
sbb
sbb
stos
fwait
or
mov
pop
jle
ss
sbb
sti
gs
cmpsl
pop
fdiv
cld
pop
fwait
sbb
nop
stos
xor
pop
push
inc
xor
gs
rcrb
add
mov
mov
shlb
xlat
insb
ljmp
mov
test
test
mov
mov
lahf
rcll
mov
jbe
sub
dec
jecxz
stos
imul
cmpsl
or
mov
fdivr
aam
out
fs
loopne
je
pop
iret
and
or
pop
adcl
xchg
aaa
cmc
push
push
xchg
arpl
jle
repz
mov
sarb
cmp
lods
js
sbb
rol
sub
xor
jl
jne
sub
push
jb
push
arpl
jnp
adc
das
cmp
mov
repz
push
rcll
add
imul
loope
push
les
outsb
and
imul
stc
ret
xor
sub
pop
mov
push
pop
mov
aas
cmp
in
test
pop
aas
xchg
or
pop
push
lea
cmp
shrl
jle
xchg
dec
adc
xchg
pop
adc
push
or
xchg
icebp
sarb
mov
rcll
rol
fistps
lahf
jp
jp
fcomp
mov
xchg
ja
sarb
sti
mov
xchg
faddl
stc
mulb
or
out
arpl
es
cli
and
or
stc
int3
lcall
xlat
dec
shr
mov
rcrl
pusha
fs
xchg
in
mov
fmuls
lret
sbb
mov
inc
mov
adc
mov
mov
cmp
fmul
ss
dec
xchg
jl
or
cwtl
xchg
enter
or
imul
data16
pop
xchg
mov
jnp
pop
xchg
leave
in
in
push
js
loop
cmpsb
int3
push
emms
sbb
cmpsl
sti
cmp
inc
pusha
sahf
mov
adc
das
or
nop
mov
jne
divl
inc
in
xor
jmp
repz
cmc
std
pop
add
jl
or
orb
imulb
add
bnd
xor
mov
test
sbb
cmc
pop
ficoml
sbb
jo
lea
in
mov
sub
push
enter
insl
mov
scas
or
es
fldt
add
das
pushf
xchg
mov
add
divl
adc
pop
rcll
cmc
lea
inc
in
push
pop
xchg
jne
stos
jbe
inc
sahf
jnp
inc
out
insb
aam
mov
adc
cs
pop
pop
xchg
mov
sti
out
stos
adc
jnp
inc
xchg
bound
ja
stos
inc
mov
hlt
inc
sahf
mov
aad
inc
adc
jmp
sarl
push
mov
dec
jg
cmpsl
sub
sahf
cwtl
dec
mov
repnz
sti
dec
adc
test
test
or
imul
mov
daa
push
push
jmp
mov
leave
sbb
negb
sbb
push
inc
leave
or
pop
cmp
jl
insl
repz
mulb
aas
jne
pop
test
nop
add
sub
lods
and
adc
std
pop
in
push
sbb
jl
fdivs
cmp
aaa
outsb
inc
mov
pushf
xchg
jmp
arpl
ret
push
cmpsl
push
fwait
jg
inc
ds
lret
and
aas
pop
daa
push
movsb
cwtl
add
inc
std
xlat
aad
test
clc
or
mov
pop
push
lods
filds
jl
push
inc
inc
push
gs
std
adc
ja
add
leave
in
jmp
add
scas
aas
pop
mov
pop
pushf
jecxz
jnp
mov
lods
inc
test
arpl
mov
mov
or
ret
or
popf
test
and
test
or
pop
mov
out
dec
push
stos
jl
nop
call
or
shll
jnp
inc
fcompl
rolb
or
push
push
xor
jo
lock
push
daa
sub
adc
xchg
in
imul
xchg
push
fwait
imul
pop
out
sub
stc
mov
lsl
lahf
dec
out
ljmp
int
cmpsb
sub
sub
fdiv
in
or
fnstsw
push
fcoms
push
mov
test
jp
dec
xlat
push
test
inc
popa
cmp
std
add
hlt
xor
sarl
mov
movsl
orl
or
inc
std
push
fcompp
iret
cmp
dec
xor
vpsubsb
ret
mov
fistpll
xchg
sti
hlt
push
ret
leave
cmpsl
or
mov
ret
push
pop
lahf
into
cmp
and
cmp
push
xor
sbb
push
inc
daa
pop
add
jnp
jle
rorb
imul
mov
imul
das
sbb
add
cli
pop
sbb
dec
sub
cmc
jp
lret
lret
adc
sarl
sti
scas
jl
ffree
daa
mov
cli
and
and
sbb
jl
pop
insb
cmp
xchg
jae
test
and
dec
cmp
dec
adc
int
mov
gs
push
sbb
inc
cmpl
rorb
mov
dec
cld
loopne
out
gs
notl
out
lods
xchg
push
xchg
pop
popw
or
into
faddl
adc
mov
mov
sahf
xor
daa
mov
and
out
push
insl
inc
mov
dec
fs
push
xchg
in
mov
lret
es
dec
add
in
xchg
pop
inc
jbe
pop
enter
sbb
bound
or
pop
ret
xchg
div
loope
insl
sti
sbb
in
jbe
jp
lret
mov
in
jo
ja
sub
data16
sbb
lret
mul
fiadds
mov
sub
je
aam
les
add
xlat
mov
and
mov
bound
adc
inc
pop
mov
push
xchg
adc
cmp
push
jmp
pop
mov
xor
xor
cmpsb
sbb
mov
inc
pop
dec
clc
xor
daa
hlt
aaa
into
outsl
cmp
and
jg
fwait
nop
lcall
lea
xchg
push
add
hlt
push
mov
loop
sub
into
scas
inc
hlt
sti
inc
jae
sub
adc
inc
mov
jo
mov
pushf
jecxz
sbb
pop
dec
roll
outsb
ja
outsb
es
pushf
cltd
add
pop
clc
add
mov
add
push
adc
add
imul
jo
jmp
daa
cmp
adc
rorb
push
loopne
push
enter
dec
sti
xchg
or
sahf
fbstp
mov
leave
mov
jecxz
inc
loop
push
fstl
cmp
pusha
aas
cmp
bound
lret
pop
pop
lock
cmp
pop
jmp
scas
cmpsl
push
test
inc
jg
inc
test
jno
and
fiadds
xchg
push
adc
inc
cwtl
adc
fwait
js
fcoml
xor
dec
mov
mov
cmp
jl
adc
movsb
push
sbb
push
sbb
jne
es
lret
nop
push
ret
sub
stos
push
aad
or
aam
push
addr16
gs
inc
xchg
mov
dec
fisubrs
pushl
bound
outsb
sbb
push
xchg
pop
imul
mov
scas
sub
mov
scas
shrl
or
push
mov
sub
mov
test
inc
pop
push
inc
insl
mov
mov
xor
cmp
jmp
adc
outsb
inc
pop
jb
lea
pop
jle
mov
insb
test
bound
das
std
sub
sub
push
add
push
outsb
lock
jae
pop
pop
imul
hlt
sub
push
sbb
pop
push
and
ret
mov
sti
call
js
data16
add
cmp
sbb
insl
mov
enter
stc
dec
stos
sbb
pushf
mov
jnp
pop
push
rclb
mov
xchg
int
stos
add
out
ret
pop
daa
pushf
cmp
mov
in
jl
leavew
ljmp
add
sub
std
lahf
std
in
mov
jae
cmp
mov
movsb
insl
int
div
pop
mov
or
xchg
jno
jge
lods
call
inc
xor
jmp
insb
dec
lret
rorl
pushf
cmpsl
cld
icebp
xchg
sbb
popf
lds
and
out
mov
movsl
fimuls
mov
stos
jno
xor
insl
add
cmp
stos
in
push
jp
rorb
and
pop
dec
jb
push
mov
imul
cld
push
test
and
ja
dec
gs
fwait
or
stos
sub
test
add
mov
mov
sub
inc
rclb
ret
sti
imul
pop
push
imul
inc
pop
or
push
lahf
cwtl
sti
mov
mov
ret
aad
int
sub
and
or
negb
or
aas
cmp
jp
mov
aas
enter
pushl
fs
std
in
push
xor
mov
jns
xchg
outsl
icebp
mov
and
inc
pop
pop
fstl
ja
ss
xchg
fnsave
ftst
jmp
push
hlt
and
loop
insl
in
mov
nop
cmp
sbbl
pop
insb
rclb
adc
xlat
stos
jmp
sub
ret
fcmove
mov
rcl
repnz
das
rcl
push
filds
push
int3
mov
mov
push
loop
sbb
cli
inc
lods
dec
hlt
mov
outsl
add
xor
xchg
lock
push
xlat
xchg
pop
xchg
jno
fdivrs
dec
inc
ljmp
sub
fists
dec
mov
movsl
fwait
push
jno
aas
pop
pop
inc
popf
push
adc
ds
pop
jl
cmp
cwtl
add
jo
jno
mov
mov
stos
mov
leave
arpl
imul
subb
sub
push
test
mov
jle
push
mov
es
and
pop
into
shl
stos
cmpsb
into
icebp
ja
or
pusha
jae
sbb
inc
adc
cmp
jne
cmpsl
mov
jb
daa
mov
mov
push
push
inc
clc
mov
pop
stos
xor
pop
jb
jno
lret
outsl
sti
sbb
sub
call
sub
add
sub
mov
jb
cli
cmp
lods
mov
imul
bound
push
mov
pop
pop
pop
jge
sub
and
nop
push
rclb
push
lds
cmpsl
mov
mov
mov
and
sub
pop
xor
cmp
fisubl
mov
fidivrs
and
lods
sarb
test
xor
adc
fisttpl
push
pop
add
mov
push
fisttpl
push
test
shll
pop
sub
sub
cmpsb
in
lahf
push
shrb
adc
ss
pop
lret
into
int
push
xorb
cmpsl
ret
pop
mov
inc
insl
into
mov
mov
ja
xor
jne
pushf
in
js
inc
pop
int
lds
pop
out
fs
rcll
outsb
shlb
out
sbb
ds
push
fstp
lret
cmp
sub
iret
xlat
daa
popa
sbb
imul
in
sbb
cmp
sbb
mov
rorl
nop
and
xchg
xchg
loopne
aas
xor
iret
into
jbe
pusha
sub
bound
or
inc
sahf
jle
and
push
gs
mov
fimuls
pop
shl
ja
sbb
mov
repz
cld
test
mov
mov
jb
add
dec
pop
dec
out
add
pop
ror
jo
sti
or
dec
adc
pop
dec
mov
sub
lret
shr
test
sarb
lcall
ret
pop
js
fisttpll
jge
pop
movsl
test
pushf
out
mov
cmpsl
and
fisubl
imul
jo
mov
in
xchg
xor
mov
loopne
mov
repnz
rol
scas
movsl
fs
adcl
xchg
add
cmc
pop
aas
and
mov
pushf
aaa
out
pusha
sub
add
imul
sub
inc
and
in
mov
scas
lea
mulb
fs
jae
inc
aas
dec
call
pop
bound
loop
or
pop
push
int3
push
sub
xchg
pop
xor
lcall
ja
jle
dec
jno
add
inc
add
fwait
xchg
xchg
mov
sahf
sahf
les
movntps
xor
jg
gs
loopne
out
lcall
push
jp
lods
cmpsb
rcl
es
daa
mov
mov
in
jg
or
lgs
jne
jns
push
inc
jg
pusha
sub
mov
sub
nop
adc
mov
faddl
insb
js
mov
add
xchg
insb
bound
mov
mov
jno
add
sahf
and
mov
jo
test
push
scas
cmp
or
inc
hlt
push
in
push
pop
iret
gs
sbb
cmp
cmpsb
jl
cltd
cmp
inc
in
rorb
sub
test
jae
cltd
mov
add
icebp
inc
fisttpll
cwtl
cmpsb
cmp
jmp
mov
push
lret
js
loop
mov
sub
out
out
mov
aam
fdivs
jmp
sbb
fwait
adc
daa
adc
or
lock
dec
in
push
xchg
sbb
sahf
loop
push
jp
jne
repnz
fiadds
cwtl
dec
xor
das
add
inc
jnp
das
or
mov
xor
cmp
fstpl
pop
inc
out
jmp
cmc
dec
add
cli
or
shlb
cmp
int
cld
jle
adc
xchg
inc
rolb
fwait
dec
and
jecxz
inc
pusha
jg
xchg
pop
iret
dec
adc
repnz
dec
sub
and
sub
xchg
lcall
fimuls
outsb
mov
imul
mov
hlt
jp
adc
xchg
pop
mov
mov
xor
fcmovnb
rcl
dec
adc
adc
pop
jle
mov
lcall
and
pop
subl
loope
fsubrs
cltd
pop
lock
shll
cmc
adc
pslld
ficoms
inc
js
and
jb
fwait
rcr
arpl
pop
std
pop
aam
add
push
les
pop
cmp
jecxz
sbb
push
push
loopne
fists
mov
pop
push
sbb
mov
movsb
pop
push
outsl
xchg
test
xchg
cmp
dec
aad
sbb
loop
arpl
dec
in
outsb
inc
add
dec
mov
xor
sbb
push
sub
jl
xchg
xchg
add
stc
xor
sbb
jmp
adcl
push
and
mov
scas
out
jmp
mov
jne
pop
scas
stos
xchg
adc
lret
adc
daa
aas
pop
incl
inc
dec
insb
clc
lods
movsb
popf
cld
xchg
push
push
jge
imul
inc
divl
lods
sbb
pop
cwtl
mov
mov
and
js
pop
adc
mov
addr16
fists
mov
or
paddusw
imul
cmp
mov
xor
cli
enter
mov
ror
inc
xor
cwtl
je
adc
sub
xor
mov
push
mov
mov
and
das
jns
mov
shlb
cwtl
fdivs
aaa
xchg
sub
stos
inc
pop
or
mov
and
int3
out
xchg
fdivrl
pop
add
inc
imul
aad
stos
loop
ret
push
push
inc
push
push
jns
mov
push
movsb
mov
xchg
gs
mov
cmc
lods
push
mov
sbb
or
sbb
inc
test
lea
mov
and
and
subb
add
push
aas
sub
mov
add
lods
cmp
andb
xchg
sahf
sub
inc
aad
jg
sbb
test
loopne
popa
lahf
adc
ret
pop
iret
cmpl
das
roll
aas
xchg
push
outsl
add
fwait
arpl
jne
cmp
arpl
in
add
inc
and
cmpsb
or
movsw
mov
mov
rclb
mov
lahf
cmp
fldenv
jge
gs
pusha
and
xor
pop
int3
sarl
ljmp
js
mov
dec
mov
es
sub
sub
hlt
fcoms
or
cmp
cmc
sub
stos
mov
and
aas
outsb
rol
dec
pop
insl
mov
mov
hlt
xchg
dec
push
sbb
cmp
lds
rclb
mov
jne
add
adc
lock
in
mov
mov
and
into
lahf
dec
aam
aas
xor
out
mov
lock
cld
xchg
ss
push
dec
xchg
sti
imul
lods
hlt
ret
xabort
add
or
dec
xchg
inc
test
xor
imulb
jmp
mov
jnp
enter
sbb
or
cmp
or
push
sbb
popa
dec
mov
adc
or
jno
and
push
inc
les
imul
adcl
push
pop
pop
sbb
stc
fistps
add
lea
adc
pop
and
sub
sbb
cwtl
add
andb
push
loope
jecxz
movsl
loope
mov
cmp
pop
dec
inc
pop
leave
addb
imul
mov
push
iret
mov
aas
jmp
mov
xorb
push
int3
mov
and
mov
arpl
mov
cli
xor
loope
aam
push
out
pop
or
push
sbb
jmp
mov
push
scas
xorl
repz
mov
sbb
dec
mov
aam
jmp
mov
icebp
xlat
push
test
push
adc
fidivrl
rcrl
lcall
xor
mov
mov
mov
lea
xor
icebp
daa
lret
push
data16
dec
inc
fs
xor
sbb
xchg
lds
loopne
jae
mov
sub
inc
cmpsb
mov
rol
add
stos
aas
in
stos
cld
imul
push
push
inc
in
lea
mov
ss
xchg
stc
mov
push
push
mov
sbb
dec
lgs
scas
pop
cmp
js
sbb
imul
mov
sarl
aad
dec
lock
loopne
aad
scas
insb
xchg
push
adc
xchg
iret
or
dec
sar
aas
add
mov
fdivr
das
ret
cmp
or
sub
pop
ljmp
sub
data16
pop
pushf
pop
pop
xchg
adc
jae
lds
lret
or
out
into
push
out
mov
mov
mov
arpl
jo
mov
inc
out
cmp
xchg
inc
pop
add
out
js
gs
sbb
mull
pop
mov
xchg
sub
cs
pop
fwait
movsb
xchg
test
inc
dec
ds
in
dec
or
jno
add
push
movsb
fists
adc
lods
sub
cld
movsl
sub
mov
loope
jne
and
popf
shr
push
fs
je
mov
add
mov
push
mov
pusha
adc
or
cmp
leave
jbe
mov
lods
dec
mov
mov
jnp
je
cs
push
xchg
into
lret
mov
push
sub
cmp
inc
xchg
testl
jl
dec
in
adc
popf
and
inc
arpl
pop
push
or
push
xor
enter
repnz
ja
test
lods
mov
and
sbb
aaa
loop
and
test
sti
scas
mov
mov
mov
xchg
repnz
les
enter
mov
lahf
in
jns
add
aam
mov
sbb
in
cwtl
mov
sahf
js
jae
call
or
push
imul
out
dec
cmp
bound
cmp
or
mov
xor
outsb
pop
fidivrs
dec
add
iret
lock
int
dec
mov
sti
cwtl
push
fimuls
fildl
icebp
sub
in
xor
movsb
dec
add
xor
test
or
fsubrs
pop
data16
push
rorb
popf
scas
nop
scas
sbbb
xchg
cmpsl
pusha
sub
sbb
xchg
mov
or
leave
cmp
aam
jp
push
loopne
pop
ret
sarb
mov
push
arpl
cli
in
rolb
fisttpll
addr16
fldt
xchg
aam
xchg
aaa
push
jno
pop
xchg
out
loopne
rcl
ja
shll
daa
mov
cmpsl
mov
sbbb
xchg
in
subb
dec
loope
add
mov
std
outsl
dec
dec
push
dec
xchg
js
sahf
leave
lret
jle
flds
stos
cmp
lret
sub
sbb
movsl
repnz
jp
sub
add
insb
push
mov
cld
fdivl
mov
jo
adc
mov
std
lret
add
addr16
mov
inc
add
dec
gs
adc
mov
icebp
jmp
add
lds
jbe
ja
mov
insl
shrb
jo
adc
je
sbb
outsl
mov
and
shlb
jne
cmp
push
mov
flds
fimuls
es
out
addl
es
xor
cmp
es
popf
inc
in
fst
pop
enter
add
pop
xchg
add
fistl
out
mov
or
rep
xor
sub
inc
xor
fsts
enter
push
shlb
jl
jbe
or
std
fstpl
mov
mov
sbb
sahf
popa
jecxz
scas
jle
sbb
ljmp
jns
sarl
es
repz
test
jae
in
sub
add
mov
jne
mov
xchg
ret
pop
cmp
mov
adc
cld
jb
inc
add
jne
lods
das
pop
and
lret
add
dec
insl
mov
test
lcall
fsubrl
pusha
mov
cwtl
jle
testl
and
sbb
aad
fiadds
fidivrl
sar
data16
xchg
mov
loop
jnp
mov
jnp
push
clc
jae
sbb
frstor
out
sbb
popf
adc
xchg
lret
lea
sbb
xor
aad
add
lahf
ds
call
mov
and
jmp
push
rorb
inc
icebp
lods
mov
push
inc
scas
mov
inc
sbb
push
and
clc
inc
push
sbb
add
test
fadds
ffree
jae
push
sub
adc
aaa
jge
ja
xchg
ds
jb
mov
aam
push
scas
aas
add
mov
pop
fbld
leave
xlat
in
xor
stc
or
les
out
lods
or
lahf
js
stc
in
pop
es
adc
push
dec
jnp
adc
enter
dec
out
iret
mov
fisubl
movsl
push
into
sbb
sbb
mov
subl
add
cmp
xchg
test
inc
fmuls
stos
clc
insb
mov
dec
shlb
icebp
aaa
imul
lock
sub
inc
pop
jnp
push
repnz
xchg
loopne
pusha
jae
add
and
sub
lods
jb
sti
xchg
std
push
in
sub
xchg
rorl
data16
mov
xor
sbb
push
mov
shll
mov
and
ror
nop
mov
mov
lock
stos
mov
daa
out
jl
call
cmp
xchg
shl
push
lods
pop
pushf
int3
into
push
call
mov
and
fdivrl
nop
aad
jg
cld
fldt
mull
arpl
add
push
cmp
jae
pop
incb
inc
jns
mov
mov
test
jnp
scas
mov
test
lock
add
xor
add
aaa
inc
xchg
bound
sbb
sbb
outsb
push
push
mov
imul
xor
sahf
fwait
adc
inc
or
dec
push
jge
mov
and
add
shll
pop
mov
mov
rcrb
mov
add
sub
dec
ljmp
shl
adc
xchg
and
out
cltd
aad
sbb
movsb
pop
imul
aas
cli
or
pusha
popa
testl
hlt
inc
into
subl
mov
ret
loop
and
or
bound
popa
pop
pop
sub
lret
mov
jno
xor
and
xlat
jle
out
cmp
push
fwait
and
jae
popf
and
add
fsts
dec
lahf
push
rcll
mov
xlat
mov
xor
js
jmp
sbb
jg
push
in
andb
inc
orb
adc
mov
std
push
in
out
push
icebp
movb
push
jns
movsl
out
movsb
movsl
insb
sub
out
and
andl
loope
add
mov
aas
testb
pop
pop
mov
dec
sub
fildl
test
aas
mov
int
xor
and
scas
push
mov
mov
call
or
and
xchg
push
pop
pop
xchg
aam
pop
ljmp
xchg
orb
xor
sub
inc
scas
jmp
repnz
mov
and
rol
and
cmpsb
icebp
mov
lahf
mov
add
and
and
test
cmp
scas
and
xchg
ljmp
imul
int
add
xor
test
lds
arpl
push
push
pop
repnz
cmp
pushl
clc
stos
sub
bound
out
imul
add
nop
xor
and
cmp
cmc
jns
xchg
movsb
add
sub
mov
not
sub
rorb
in
mov
add
leave
and
pop
xor
jo
lods
les
sub
popa
repnz
aam
ds
xchg
xchg
ret
ret
push
cmp
cmp
loope
jg
insb
std
xchg
inc
test
xor
lds
pop
outsl
std
cmp
fstpl
mov
sar
inc
int
pushw
xchg
fistpll
sub
pushf
std
lds
sbb
xorl
mov
jg
lods
loopne
call
mov
addr16
into
inc
sbb
xor
in
mov
mov
add
lods
sub
in
aam
pop
roll
jb
mov
cmpsb
mov
out
ss
adc
xchg
je
sub
rorl
test
mov
outsl
lods
insb
mov
adc
or
cmpsb
fcmovnu
sbbl
js
cmpsl
mov
adcl
jmp
loop
stc
fcmovb
dec
in
mov
mov
mov
jno
inc
push
sub
sbb
push
xchg
das
ret
loopne
ljmp
movsl
daa
in
push
cmpl
xchg
xlat
enter
adc
repz
cmp
in
pop
jg
sub
outsb
fistl
out
push
push
xor
and
xorb
pop
dec
movsb
clc
aaa
idivb
lds
enter
lret
imul
addl
or
xchg
dec
and
push
je
sub
ds
dec
imul
inc
cmp
push
imul
addr16
cmpsb
adc
mov
jns
rorl
movsl
xchg
adc
push
fcmovbe
cs
sub
push
fistpl
loop
ror
push
xor
fbld
add
inc
jnp
ss
jnp
jae
cmp
cmp
sub
sbb
cld
add
iret
cli
jp
or
xchg
mov
in
pusha
dec
imul
fstl
cli
jb
cli
adc
jge
fidivs
out
jnp
sahf
into
sub
xchg
cmp
dec
mov
dec
sti
ja
paddb
hlt
adc
ret
test
cwtl
lods
pop
add
pop
xchg
xchg
mov
iret
mov
cmp
dec
inc
cmp
add
jnp
popf
stos
sub
in
lahf
or
push
aas
cs
jns
xor
pop
mov
mov
inc
xor
push
and
xor
shll
or
adc
ret
orl
adc
cmp
scas
je
pushf
mov
xlat
fidivrs
imul
cmc
adc
cmpsl
add
push
psubd
add
push
loop
mov
shrb
cld
jb
fs
dec
dec
push
stos
sti
and
mov
test
and
cmp
adc
mov
mov
lret
xor
fcmovb
sub
daa
inc
add
mov
or
pop
dec
ja
xor
scas
test
dec
mov
call
ret
test
sbb
test
mov
popa
mov
mov
les
xchg
mull
xor
jo
and
mov
cwtl
pop
sahf
pop
jg
bound
and
stos
and
inc
scas
inc
adc
mov
aam
and
gs
add
stos
push
scas
adc
cmp
sub
and
cld
inc
xchg
push
and
push
aaa
in
cmp
data16
gs
cmp
inc
mov
cmp
add
out
jge
jmp
jmp
inc
out
outsl
add
mov
pop
push
sub
inc
push
pushf
and
int3
test
push
cmp
and
aas
sub
fdivrl
jns
inc
mov
sub
cs
cltd
and
repnz
fdiv
sti
std
pextrw
xor
xchg
pop
jl
call
and
aas
sub
jno
ljmp
popf
in
xor
divl
jmp
push
in
inc
inc
cmp
test
jle
sub
imul
or
nop
loopne
stos
cmc
imul
dec
es
jmp
lods
mulb
lods
insb
not
mov
sub
adc
rolb
xor
mov
cmp
dec
fidivrs
jl
jmp
push
cmp
lods
mov
mov
lds
out
in
fnstenv
outsb
orl
lods
gs
in
aaa
inc
jnp,pn
inc
arpl
push
vpaddb
jbe
pop
jno
test
stc
aaa
roll
push
aam
jbe
dec
sub
loope
xchg
or
loope
lret
jae
xor
push
pop
in
mov
jne
and
out
mov
and
jb
hlt
repz
xchg
loope
movsb
mov
int3
add
jne
insl
mov
sub
leave
adc
xchg
in
test
in
imul
jnp
push
adc
gs
movsb
les
sbb
sti
hlt
pop
loopne
sbb
push
xor
ret
xchg
mov
mov
subb
inc
ds
xor
fs
pushf
insb
push
lahf
fst
inc
aas
jae
add
test
cmc
stos
mov
test
jnp
inc
cltd
lea
int3
and
std
pop
out
mov
or
imul
xor
lcall
xchg
adc
xlat
fistpll
inc
sahf
mov
jl
mov
mov
fistpl
push
enter
jbe
loope
stos
into
js
add
fprem1
imul
or
test
ljmp
pop
push
jae
iret
movsb
push
pusha
sub
cld
out
jmp
pop
pusha
pop
fistl
jnp
notl
push
inc
inc
dec
jl
loope
mov
iret
sahf
xor
cmp
test
repz
nop
jmp
or
push
bound
in
mov
int
push
push
movb
xlat
js
test
aam
xchg
pusha
and
sbb
cltd
or
insl
inc
mov
and
xor
add
je
jl
sub
mov
test
loope
loopne
mov
ficoms
adc
adc
dec
sbb
repnz
arpl
mov
mov
lret
decl
pop
or
or
jl
add
xor
xchg
xorl
mov
in
or
fincstp
cmp
and
mov
nop
and
push
or
arpl
and
pop
or
test
cmp
or
xor
cmp
jp
sbb
enter
movsl
std
addr16
ret
test
add
lret
pop
sub
daa
mov
loop
xchg
and
mov
mov
xchg
inc
popf
jae
int3
add
mov
or
mov
jle
pop
test
and
and
bound
arpl
mov
ds
push
add
dec
xor
pop
lods
test
das
je
outsb
pusha
loope
lods
or
mov
mov
loop
dec
int3
xor
sarb
adc
push
adc
movsb
jge
aad
dec
sbb
dec
imul
adc
jbe
sbb
pop
int3
push
leave
xlat
xchg
xor
mov
dec
xor
mov
pop
xor
popf
cmp
arpl
insb
or
cmpsl
push
in
rorb
sub
and
loop
jno
jns
push
dec
jno
cmpsb
fdiv
cmpsb
dec
leave
outsl
or
in
jo
jmp
pop
stos
sbb
fldl
aas
and
cltd
xchg
lods
mov
repnz
stc
fisubl
mov
push
inc
jno,pt
push
loopne
jle
mov
add
into
mov
sub
and
jnp
add
cmp
cmpsb
push
hlt
inc
and
mov
jp
imul
lods
adc
cmpsl
xchg
int
je
sti
adc
mov
data16
aad
adc
mov
js
mov
sub
pusha
jo
cmp
negb
add
push
pop
ds
outsb
iret
lcall
aas
inc
mov
xchg
pop
out
roll
or
pop
lret
cmp
cmp
adc
push
jno
dec
adc
shl
vpsllq
mov
stc
out
imul
pop
inc
inc
bnd
inc
aas
arpl
dec
push
adc
cmpsl
int
xor
inc
fisttps
dec
iret
inc
sub
xchg
clc
lahf
sbb
mov
push
cmpxchg
push
inc
jp
jmp
pop
leave
clc
jnp
dec
es
push
inc
popa
push
dec
dec
aam
cwtl
stos
fnstsw
dec
in
mov
cmpsb
std
jns
inc
adc
jg
popf
shll
movsl
iret
sub
sub
inc
popf
hlt
cmp
mov
inc
jnp
mov
sti
inc
cmp
push
dec
call
int3
loopne
mov
dec
stos
shll
xor
int
pushf
shlb
mov
dec
add
sbb
xor
mov
shlb
lods
cmpsb
dec
lods
orw
mov
insl
movsb
sbb
xchg
out
mov
imul
mov
push
shll
cmp
xchg
cmp
cmp
movsb
ret
inc
xchg
adc
fcoms
and
lock
cmc
mov
fiadds
sbb
or
push
push
es
pushf
ret
sbb
loope
fxch
rorb
mov
inc
jae
mov
cmp
inc
cmp
dec
push
jbe
jo
repnz
mov
test
dec
pop
push
vcmpps
inc
pop
shl
add
mov
and
and
add
mov
cmp
sub
dec
cmp
lea
and
aam
lods
and
bound
mov
mov
adc
push
xchg
or
or
or
lahf
outsb
mov
test
addr16
jmp
xchg
sahf
aas
add
movsl
daa
sbb
xchg
pushf
fidivrl
add
adc
jle
xchg
cs
es
jb
jecxz
inc
push
test
imull
mov
sbb
cmp
scas
imul
jmp
lahf
int
rclb
push
sbb
aas
cltd
push
mov
sbb
jae
inc
adc
call
cwtl
jge
add
cmpb
dec
test
das
int3
mov
pop
pushf
lods
and
insb
cmp
mov
or
mov
xchg
pop
jp
imul
inc
fxch
pop
sbb
int
fidivs
test
push
mov
aam
or
push
stc
fstpt
dec
xchg
xchg
test
and
fucomi
mov
fnstenv
and
fcoml
push
push
fisubl
fldenv
jl
testl
mov
xor
and
cli
or
mov
cmp
inc
cmp
mov
scas
and
pushf
xchg
mov
add
cltd
sub
lds
fwait
mov
inc
out
imul
adc
mov
add
icebp
movsl
adc
scas
bt
inc
fs
imul
mov
pop
daa
mov
mov
mov
adc
dec
xchg
lods
mov
rorl
jg
iret
mov
popa
sbb
sub
dec
and
cmp
int
adcb
scas
dec
movsb
mov
jae
fistl
pop
nop
mov
loop
or
test
and
icebp
sub
outsb
lods
jmp
les
xor
xchg
ror
aaa
cmp
lods
sbb
nop
lahf
xor
mov
shl
xchg
imul
outsb
mov
mov
incb
xchg
cmp
clc
dec
inc
shl
pop
in
fisubrs
mov
cli
sbb
repz
xchg
ds
mov
push
xor
pushf
dec
adc
jno
and
mov
rcr
mov
call
jbe
jb
pop
aad
jo
testb
or
mov
jle
and
lahf
cld
pop
mov
xlat
roll
mov
mov
mov
push
clc
sbb
cltd
pop
add
shrb
or
xor
adc
cli
cmpsl
pop
sub
jae
rdmsr
mov
mov
xor
cmpsb
lea
jge
inc
int3
jbe
jmp
jbe
push
jb
sbb
es
fwait
xchg
out
lcall
data16
push
test
test
inc
cmp
dec
jo
in
push
mov
xchg
push
add
fs
push
test
dec
cmp
push
dec
popa
es
push
iret
add
push
adc
push
jl
inc
into
les
pusha
mov
mov
push
daa
sub
scas
cmp
jmp
jo
insl
sbb
mov
int
out
inc
jae
jne
sbb
loop
push
jg
dec
sbb
jp
xlat
xor
daa
stos
xchg
mov
mov
and
mov
in
fsubr
mov
xchg
in
sbb
dec
xor
push
push
shl
or
out
hlt
das
test
in
sub
jle
ljmp
cmp
sbb
push
sbb
ljmp
cltd
fwait
jo
mov
xor
scas
mov
imul
fwait
push
loopne
dec
popa
pop
outsb
out
mov
mov
xor
loope
sbb
out
ja
repz
imul
js
cmpsl
xlat
sbb
flds
sbb
xor
xchg
insl
mov
add
xchg
inc
out
mov
in
ljmp
stos
lds
sub
mov
jle
sarb
shl
rorb
xchg
dec
in
lods
adc
push
cmpl
nop
icebp
lcall
mov
xor
jne
sbbb
sbbb
jl
pop
int3
scas
popf
rcrb
dec
or
cmc
lahf
mov
loopne
lret
imul
fisttpll
das
mov
je
xchg
push
mov
mov
sub
jno
inc
xchg
js
stos
cmp
inc
push
insb
sub
cmp
and
mov
je,pt
pop
pop
xor
inc
mov
push
in
das
lds
inc
ret
xchg
lods
fnstenv
sarl
and
loopne
jge
es
push
add
push
mov
or
xor
mov
mov
cmpsb
in
out
sub
jg
push
ss
addr16
cmp
sub
push
mov
movl
adc
popa
mov
scas
test
mov
mov
adc
xor
jae
and
jne
and
and
pop
dec
outsl
imul
loop
inc
test
incb
add
cwtl
shlb
lds
adcl
push
cltd
xor
push
push
popa
lock
mov
int3
xchg
mov
mov
icebp
daa
pop
in
lret
in
in
testl
adc
dec
fiadds
and
lret
mov
insb
fldcw
stc
inc
push
xchg
std
jbe
gs
or
ret
pop
inc
pop
xor
mov
iret
cmp
jg
sbb
mov
data16
adc
push
call
xchg
inc
pop
arpl
insb
fcom
inc
add
push
fs
xchg
repz
sbb
push
cmp
xchg
dec
shll
mov
repnz
cmpsl
dec
or
push
jno
or
aaa
testl
inc
mov
int3
adc
loope
cld
adc
xchg
dec
out
or
mov
scas
xchg
inc
sti
pusha
enter
mov
js
clc
daa
test
cltd
aam
mov
addr16
xor
shll
lods
jle
xor
sbb
aaa
mov
jno
out
in
sbb
adc
mov
mov
out
mov
cltd
fsubl
or
mov
or
gs
rclb
add
fsts
roll
repnz
and
or
fwait
push
add
or
or
repnz
scas
sti
loop
cmc
pusha
mov
arpl
mov
sub
scas
mov
inc
shrb
push
sbb
pop
xor
and
jecxz
dec
addr16
hlt
insb
dec
sti
repnz
or
adc
dec
pop
xor
jmp
sarb
mov
xchg
push
push
movsl
xchg
pushf
cmp
jp
jae
sbb
pushf
cmp
fildll
pusha
inc
or
popf
push
pop
xor
sbb
sub
push
sub
scas
divb
push
fidivrs
inc
lock
xchg
xor
lods
adc
icebp
sub
pop
jae
push
dec
fs
mov
pop
stos
call
stos
ficomps
movsl
lds
inc
lods
mov
cmpsl
outsb
add
jns
add
sbb
sub
aam
push
mov
and
shlb
xor
outsb
mov
pop
mov
nop
mov
add
cmp
mov
pop
mov
mov
cmc
pop
arpl
mov
dec
push
shll
inc
imul
ficoms
loopne
lret
xchg
nop
push
jecxz
fcmovnu
fwait
fs
lods
loope
out
push
dec
mov
sti
pushf
cmp
push
sti
rcrb
cmp
shl
movsb
xchg
cwtl
js
mov
je
loope
shll
xor
lret
fidivrs
dec
lret
add
test
addr16
lahf
xor
repnz
sub
or
imull
lock
or
dec
push
int
mov
roll
daa
jae
nop
out
cmp
sbb
xchg
mov
cltd
xlat
out
fnstenv
popa
pop
cmp
mov
aas
xorb
scas
mov
outsl
mov
rcll
cmpsl
adc
lcall
icebp
xor
inc
xchg
sbb
cs
rorl
je
jbe
xor
xchg
xor
fisubrl
sbb
jle
xor
pop
xor
xchg
cwtl
fcmovu
clc
add
mov
data16
outsb
repnz
jne
pop
fistpl
dec
insb
fs
inc
cmp
flds
out
push
outsl
jg
inc
or
sbb
dec
mov
push
out
subl
add
stos
fisubrl
mov
adc
xchg
fs
cwtl
push
mov
sub
sbb
jne
add
jb
fsubrs
mov
stos
mov
or
xchg
push
sbb
pop
movsl
movsl
dec
pop
sbb
out
add
lock
iret
or
or
lds
stos
icebp
faddl
shll
mov
mov
sti
in
call
repz
push
xor
insl
inc
push
inc
push
test
loop
sbb
adc
jnp
gs
sbb
aam
jg
dec
xchg
lods
jl
push
xchg
cmp
fucomip
or
xchg
in
test
push
arpl
add
subl
scas
cld
mov
xchg
gs
fildl
repnz
xchg
sahf
jge
xchg
pop
sub
xchg
pop
sbb
mov
das
pop
mov
pop
cld
and
out
adc
cmp
or
fwait
sbb
shrl
pusha
pop
jno
xchg
push
jne
in
jle
cmpsl
inc
in
outsl
lds
fwait
test
aas
jne
pushf
add
out
push
mov
push
mov
jecxz
push
add
xchg
outsb
add
int3
lret
add
inc
and
movsl
imul
add
jb
or
arpl
or
adc
or
mov
add
adc
enter
insl
pop
fs
mov
xor
shrl
and
call
stos
mov
jbe
loope
rorb
stc
aaa
pmuludq
cli
or
in
jns
cwtl
mov
push
lock
mov
dec
push
popf
pop
out
cld
cmp
rclb
into
jno
lea
push
jmp
adc
arpl
mov
push
xchg
adc
adc
adc
mov
mov
dec
and
scas
jae
push
out
cmpsb
pop
mov
test
or
lock
add
icebp
adc
mov
cmp
inc
and
xchg
and
xchg
insl
jl
mov
xchg
daa
lahf
daa
mov
addb
pop
sub
push
push
cwtl
jle
sbb
and
xchg
lds
dec
jle
xor
or
in
jle
pop
jns
repz
sbb
stos
push
xchg
jl
xchg
push
push
pop
cmp
lahf
sbb
dec
cmc
pushf
lahf
sti
jp
ret
fimull
add
mov
push
ret
mov
dec
dec
fadds
imul
mov
cmpsb
cmp
sbb
xchg
jp
mov
mov
mov
xor
mov
jae
aam
mov
fisubrl
ss
inc
movsl
mov
add
and
xor
mov
and
inc
pop
lds
mov
or
mov
and
testl
inc
push
imul
pop
cmp
loopne
popl
bound
pop
ret
mov
jns
dec
mov
insb
std
jl
je
cmp
xchg
adc
xchg
nop
ja
add
cmpl
or
clc
push
push
pop
cmp
in
adcb
sub
shl
mov
mov
pop
inc
dec
mov
or
push
out
jno
lds
mov
xlat
mov
andl
push
sbb
cli
ret
mov
or
bound
std
cli
cwtl
add
es
stc
xor
cmpxchg
sahf
fdivrl
inc
adc
xchg
mov
cmpsl
sub
std
or
sahf
fisttps
nop
pop
stos
fisttpll
rcll
or
stos
xchg
pushf
and
inc
jne
pop
pushf
mov
imul
dec
cli
das
call
dec
out
es
adc
mov
bnd
test
nop
clc
xor
xchg
sbbb
sub
cmp
es
add
js
icebp
in
push
lret
mov
push
sar
mov
push
shrl
add
xor
es
adc
ret
out
loop
cmp
ljmp
and
fs
xchg
int
push
mov
dec
ret
fwait
imul
xchg
iret
and
push
xchg
cmpl
movsb
lahf
movsl
lods
xor
movsb
jnp
out
mov
inc
test
std
xor
xchg
scas
push
xlat
stc
jle
test
insb
shr
or
lods
cmp
mov
subb
cmpsl
imul
sub
mov
test
andl
cmp
into
ja
test
pop
ffreep
icebp
fldenv
dec
call
outsl
pop
cwtl
jno
and
inc
ja
loopne
cmp
inc
outsb
mov
jmp
call
and
test
xchg
push
movsl
push
insl
push
cld
lret
test
test
test
cli
pop
mov
int
movsl
cld
pop
adc
pop
pop
fcmovnu
adc
inc
ljmp
outsb
out
dec
pop
xchg
loop
fs
push
cs
hlt
cmpsb
xor
lods
mov
mov
sahf
lret
int
mov
iret
incb
insb
adc
jb
xchg
pop
cmp
fisubrl
shll
in
sub
xorl
hlt
inc
dec
sub
lret
jge
mov
push
jns
pusha
iret
sbb
pop
cmpl
mov
adc
cmp
sbb
int3
or
out
xchg
cmp
fsincos
jecxz
loope
stos
fistl
out
fcompl
pop
sbb
aam
xchg
jecxz
aaa
mov
pop
inc
fimuls
jp
cmc
add
xor
std
push
jp
push
inc
fdivrs
scas
stos
jbe
mov
scas
jnp
mov
popa
mov
pop
rcll
je
dec
cli
mov
push
loop
inc
inc
das
in
xor
imulb
pop
test
and
es
rorl
push
fnstsw
out
mov
fsubs
or
or
xor
js
pop
xchg
inc
add
mov
cmp
stc
or
cmp
lds
mov
out
inc
sahf
enter
popf
out
sub
test
std
cwtl
call
cmpsb
push
shl
push
adc
mov
in
test
pusha
fmul
dec
leave
mov
in
bnd
into
push
in
inc
imul
push
clc
push
xchg
sub
rclb
mov
mov
outsb
ficomps
adc
cmp
jge
loop
adc
fcmovne
and
xchg
adc
jmp
outsl
inc
push
in
stos
sub
loope
pusha
arpl
mov
xor
mov
xchg
mov
dec
icebp
lock
incb
dec
sahf
inc
jg
push
pushf
cli
hlt
mov
out
mov
mov
fcmovb
sub
inc
imul
dec
gs
call
cs
mov
pop
xor
xor
add
xlat
loope
and
adc
and
insb
movsb
lcall
es
leave
dec
rorl
xchg
mov
popf
pop
push
lcall
sbb
fs
je
rclb
adc
xor
xchg
das
subb
mov
lods
arpl
pushf
fcmovnbe
fists
notl
add
arpl
or
sahf
lret
daa
jae
pop
cwtl
inc
xchg
mov
adc
hlt
test
mov
xor
aad
xchg
mov
pushf
pop
lock
push
dec
rcr
insb
in
mov
popa
jo
push
cld
rcrl
fwait
cwtl
ss
and
notb
psubusb
aam
sbb
loopne
or
cmp
test
outsb
insl
sbb
gs
cmp
clc
sbb
ret
mov
dec
pop
fstpl
int
and
mov
into
cmp
dec
scas
cmp
jne
xchg
rcrb
fs
pop
push
enter
les
jp
xor
pcmpgtb
aas
sub
sahf
pusha
xchg
or
enter
pop
cld
cmp
mov
std
pop
icebp
cmpsb
xor
sbb
pusha
in
outsl
mov
lods
data16
in
push
and
ljmp
std
cltd
movsl
dec
mov
out
sarl
xchg
jl
dec
push
test
pop
inc
out
or
fnsave
inc
cmp
mov
jae
arpl
inc
subb
popf
sti
fmul
mov
adc
cld
int3
stc
cmpsl
mov
sub
lods
push
call
mov
jo
ror
clc
adc
das
stos
bound
xchg
cmp
aas
pop
divl
sbb
jp
mov
stc
mov
pop
in
or
jle
addr16
push
out
jp
sub
mov
std
enter
out
cmp
stos
outsl
mov
stos
imul
xor
inc
popf
dec
shlb
inc
int
cmp
push
or
daa
leave
cmp
arpl
push
aad
or
jl
mov
push
in
push
mov
std
ret
insl
in
and
mov
cld
mov
jnp
sbb
sub
repz
int
cltd
les
lea
inc
pushf
shrb
rolb
inc
daa
setp
sti
dec
mov
inc
xor
push
rcll
jne
lods
sub
inc
ljmp
mov
dec
iret
in
les
insl
mov
jnp
jno
xchg
ljmp
subb
add
jp
gs
stos
outsl
in
jno
pushf
dec
push
movsl
int3
je
jmp
sub
out
lods
int
repz
lds
mov
push
repnz
ljmp
inc
mov
or
loop
pop
mov
cs
mov
push
jg
imulb
dec
rolb
jno
adc
stc
mov
add
jg
cmp
mov
in
hlt
test
fdivrl
pop
adc
dec
mov
inc
ljmp
fldl
pop
mov
shll
out
jmp
inc
add
shrl
xchg
jmp
mov
fsubs
das
adc
scas
das
cltd
and
fiadds
mov
out
test
adcl
popf
js
fnstsw
push
sbb
xchg
repnz
idiv
inc
xchg
mov
int3
pusha
repnz
es
ror
rcrl
aas
dec
xchg
sub
mov
cmp
adc
sahf
leave
repnz
adc
rolb
bound
in
movsb
jo
fcmovbe
pushf
aaa
repz
pop
mov
jle
push
mov
xor
add
sti
xorl
shl
inc
adc
xor
cmpsb
inc
lods
out
xor
jns
addr16
mov
cmc
stos
cld
dec
jno
pop
and
outsb
xorb
mov
rcrb
cld
subl
out
pusha
jne
jo
testl
and
or
std
cmp
inc
xchg
pop
lods
xor
push
pop
push
xchg
mov
loopne
xchg
sub
out
mov
je
rorb
pop
mov
pop
sbb
sub
sub
mov
push
movsl
add
mov
dec
sti
or
push
pop
imulb
inc
adc
iret
mov
sub
xor
add
adcb
je
jne
mov
jo
sahf
mov
arpl
cmp
mulb
add
ror
push
es
lds
loop
pop
sbb
ffree
dec
and
imul
sbb
into
scas
jae
out
xchg
lret
push
lahf
aas
icebp
movsl
push
ljmp
lods
mov
push
xchg
jno
or
cwtl
jnp
scas
insl
fldcw
pop
shrb
push
popf
jle
icebp
adc
jmp
imul
mov
sub
popa
cmp
inc
add
xor
xchg
inc
sub
shl
mov
loop
dec
sti
in
adc
mov
lods
xor
jle
scas
sarl
ljmp
jmp
pop
ror
rolb
hlt
in
ss
in
shll
inc
out
rorl
jl
adc
xor
cld
and
mov
neg
lods
scas
ficoms
scas
add
fdivr
fidivrs
inc
xor
scas
sub
xchg
sbb
mov
dec
mov
aas
jae
mov
mov
pop
mov
mov
fmuls
or
dec
xor
repnz
dec
sbb
fnstenv
fmul
jo
ss
adc
push
cmc
insb
iret
negb
leave
xchg
mov
movsb
cli
fsubrp
out
cltd
popf
js
add
mov
xchg
inc
mov
enter
pop
dec
js
sti
pushf
lea
jo
adc
jb
mov
rol
mov
push
shll
cmp
cmp
das
push
repz
jg
popa
jbe
jp
mov
std
mov
sahf
mov
call
jo
repnz
test
icebp
ja
inc
cmp
inc
mov
sbb
pop
add
push
mov
xchg
clc
mov
mov
pop
ss
cmp
stos
mov
cmpsl
shrl
jbe
mov
xor
pop
pop
das
pop
ficomps
shl
lret
add
xor
lret
and
daa
mull
cld
mov
bound
push
or
dec
iret
int3
clc
addb
or
or
pop
rclb
add
pop
mov
icebp
imul
pop
icebp
push
mov
inc
ret
jne
in
aad
pop
and
je
jg
xlat
xor
in
jo
mov
shrb
jg
sbb
clc
gs
out
jnp
sti
iret
mov
sub
mov
jnp
inc
fbld
xchg
rorl
sub
lea
cli
inc
mov
mov
push
jb
adc
adc
repnz
sub
and
push
pop
adc
icebp
cltd
mov
lret
xchg
sub
mov
mov
gs
shll
push
push
fabs
add
cs
mov
outsb
xlat
mov
outsb
xor
sbb
cmp
mov
mov
loop
lods
cmpsl
jp
out
ja
movsb
jo
sahf
push
popf
enter
mov
sub
ljmp
mov
lahf
dec
leave
or
jne
xor
fnstenv
add
int
mov
add
in
loopne
mov
mov
enter
into
pop
scas
push
or
pop
addr16
push
pop
fistpl
enter
jns
gs
dec
fistpll
fs
sub
and
rorb
xchg
dec
ret
in
jl
dec
and
testb
adc
std
leave
mov
fists
xchg
das
add
cld
mov
pop
pop
push
shlb
adc
add
lds
jmp
dec
outsb
test
push
jbe
js
push
jne
cmp
xchg
sub
and
shll
ljmp
xor
xchg
insb
stc
mov
les
xchg
cld
addr16
adc
sti
inc
pop
add
roll
nop
scas
cmp
popf
fwait
inc
sub
das
scas
push
ja
mov
xchg
adc
in
loopw
iret
mov
ret
push
add
test
aam
xor
jae
jne
push
mov
adc
xlat
cld
fcmovb
jne
push
jne
mov
xchg
sbb
loopne
dec
scas
ficomps
arpl
push
repnz
adc
scas
push
dec
xchg
add
xchg
push
imul
mov
je
adcb
sarl
scas
add
lahf
adc
sub
add
ror
shr
outsb
arpl
cmp
and
jb
fimuls
dec
idiv
mov
ds
jecxz
or
les
mov
mov
pop
cmp
and
pop
xchg
push
loope
nop
mov
and
stc
popa
pop
mov
mov
or
jge
cmp
mov
lcall
xlat
cmp
mov
jae
not
popa
mov
adc
lds
jbe
push
or
mov
xchg
mov
jp
ja
sub
push
ds
xchg
inc
add
and
test
shlb
xor
xchg
cmpsl
jecxz
mov
in
ret
repz
scas
fnstenv
cmp
loop
xor
adc
add
jmp
je
sti
orb
std
out
dec
push
clc
stc
clc
cmp
int3
cmc
enter
not
push
enter
ret
sub
cmp
mov
iret
adc
fadd
das
fadds
adc
mov
sub
mov
stc
addb
rcrl
jmp
and
inc
arpl
repz
arpl
cmc
mov
subl
sbb
js
mov
cmp
fidivl
or
jge
add
test
mov
loopne
inc
adc
ja
nop
mov
repnz
ret
mov
ficompl
cli
cmp
dec
mov
aas
into
dec
and
fisubrl
jl
jb
sbb
repz
or
fldlg2
cs
repz
faddp
cs
mov
outsl
push
fbld
jp
cwtl
icebp
sbb
dec
xchg
fcmovb
and
and
sub
sub
pusha
stos
std
push
jg
fmull
subl
fs
mov
push
test
icebp
xchg
sub
cmpsb
in
loop
repz
inc
pop
cmpsb
pop
jo
ret
loope
mov
mov
jbe
leave
or
xchg
inc
fisttpl
data16
mov
addl
call
adc
push
int3
xchg
popf
mov
loopne
fisubrs
push
lret
int3
push
or
dec
jo
xor
xor
ljmp
cmp
sub
and
rolb
popa
push
pop
mov
jne
jmp
bound
or
fld
and
fs
arpl
xchg
sti
ret
push
cs
inc
pusha
out
xchg
daa
rcr
sbb
push
xor
mov
or
shll
mov
push
jnp
xchg
ret
push
sbb
sbb
push
lret
dec
dec
pop
es
sub
outsb
push
dec
jne
outsl
pushf
pop
or
cltd
mov
push
push
stc
mov
sub
inc
and
pop
cld
repz
xchg
incb
xchg
and
jg
add
sti
mov
pop
sahf
fiaddl
aam
sbb
shrb
sub
inc
jno
insb
sub
adc
mov
add
dec
addr16
inc
ljmp
sbb
ljmp
mov
ss
rcr
xchg
xchg
dec
mov
inc
into
inc
pop
pop
stos
xor
add
dec
and
repnz
mov
out
outsb
addr16
mov
fdivl
xchg
pusha
shrl
fcoms
add
and
xor
and
pop
dec
aas
popf
incb
xchg
and
jns
leave
sbb
sbb
adc
cmp
ja
pop
and
inc
jo
mov
cmp
push
into
mov
out
or
jb
inc
ja
nop
test
in
inc
push
es
les
je
sub
xchg
imul
mov
push
or
push
pop
negb
cmp
mov
ror
add
call
ret
pop
adcb
mov
call
or
and
add
outsb
push
fildl
int
dec
nop
mov
addl
mov
out
mov
das
xchg
icebp
cli
in
and
dec
cmp
mov
xchg
repnz
xchg
js
pop
mov
and
imul
jno
mov
dec
sub
repz
dec
mov
fwait
cltd
cli
jp
fistl
mov
pop
jnp
ds
int
shr
jne
sub
pop
fstl
cs
xor
jae
jno
leave
push
mov
lahf
jns
mov
rolb
pop
mov
in
fsubr
sub
push
jl
lods
lahf
test
cli
add
lahf
push
add
pop
movsl
test
mov
and
dec
push
add
push
lret
mov
outsl
fcompl
xchg
inc
jge
jl
pop
jbe
fdivp
lahf
enter
cmp
mov
mov
stc
rolb
pusha
es
cmpsl
out
adc
xchg
neg
out
and
cmp
dec
add
fcomps
sub
jne
imul
inc
addl
dec
repz
mov
mov
pop
pushf
ret
data16
arpl
andb
pop
pop
repnz
aam
mov
xor
mov
daa
icebp
sbb
mov
dec
shl
daa
popa
sbb
xchg
inc
inc
mov
push
cli
popf
outsb
enter
ss
cmp
cmp
arpl
push
mov
mov
dec
xchg
lcall
pop
inc
out
shlb
in
popa
xchg
mov
inc
pop
cmp
dec
jns
shlb
fwait
sbb
addb
int
movsl
fstpl
movsl
repz
ljmp
jle
dec
lea
movsl
scas
push
mov
ljmp
es
test
add
cmp
mov
shrl
iret
test
sbb
fstpt
cmp
insl
mov
clc
arpl
push
stc
out
mov
pop
gs
fisubrs
loope
aad
test
sti
stc
push
fwait
scas
mov
iret
int3
sbb
pop
je
je
incl
enter
daa
fnstcw
pop
mov
push
decl
mov
add
out
lret
lcall
js
stc
push
lods
adc
rclb
mov
cwtl
mov
add
pop
cmp
test
fucomp
ja
inc
and
scas
mov
rclb
xor
aam
and
repnz
mov
int3
js
push
mulb
cmp
xor
jl
test
lahf
cmc
in
mov
inc
sbb
sarl
sti
fdivs
mov
xor
cmp
aaa
in
push
ds
add
adc
xor
lcall
inc
cltd
es
aaa
arpl
sti
jb
lock
data16
dec
add
pop
adc
jnp
test
pop
ja
push
popfw
inc
cmp
inc
fisubrs
loope
cmp
adc
xchg
cli
push
imul
aam
xor
addr16
sub
mov
mov
mov
jecxz
outsl
pop
movsl
shlb
popa
sbb
sbbb
stos
dec
mov
gs
orl
sti
fisubrs
xchg
mov
pop
sub
data16
mov
cmp
aas
rorb
jp
mov
pop
cmp
jb,pn
mov
shl
lahf
mov
loopne
aam
pop
jmp
push
aam
sbb
inc
scas
fisttpll
loop
cld
cmpsl
aam
xchg
pop
jle
push
xchg
pop
xchg
cmpb
rcrb
jecxz
in
adc
aas
js
lretw
test
cmp
das
jns
push
xlat
cld
sub
adc
movsb
or
and
xchg
hlt
inc
xor
fs
inc
push
mov
pusha
pop
mov
jl
ss
adc
fs
mov
addr16
pop
mov
pop
mov
fwait
push
push
rolb
push
cs
cmpsb
in
jo
cld
cwtl
push
mov
mov
into
xor
ds
sub
inc
inc
js
add
mov
xor
in
movsb
xlat
loope
call
inc
sub
inc
mov
iret
xchg
mov
or
push
xchg
mov
mov
mov
and
inc
andb
loopne
mov
faddl
or
stos
pop
and
xchg
mov
loope
and
loope
pop
jl
cmp
jo
sbb
das
xchg
mov
sbb
jecxz
push
adc
or
out
arpl
mov
cmc
inc
lret
jb
pop
fbstp
add
lods
ja
incl
xchg
push
sub
sub
pop
xchg
test
lret
std
test
rorb
add
addr16
idiv
in
sub
pop
cli
aaa
push
jbe
adc
jo
jnp
cmp
sbb
pop
or
mov
out
cmpsb
xchg
mov
push
movsl
sbb
inc
shlb
dec
mov
repz
movsb
cmp
add
pop
enter
jecxz
cmp
out
push
sub
mov
es
mov
add
mov
loop
and
fwait
add
jg
repnz
push
imul
dec
sbb
in
je
sbb
cs
or
sbb
xor
mov
jnp
pop
popf
popf
mov
jecxz
dec
test
inc
jp
xchg
jno,pt
jmp
shrl
popf
addb
icebp
aaa
add
pushf
ret
rorl
mov
cli
push
jmp
push
cmpxchg
adc
and
rorb
xchg
xchg
fisttpll
jmp
arpl
and
mov
idivl
mov
aad
int3
adc
and
pushf
cltd
pop
adc
xor
sbb
lods
adc
pop
push
mov
push
test
cmp
pop
shlb
lods
in
out
pop
xor
push
xlat
xlat
lcall
and
dec
and
sbb
jl
xchg
cli
adcb
test
add
loopne
lods
mov
ficoms
xchg
test
mov
mov
fld
data16
in
jge
inc
inc
ds
call
sbb
out
mov
and
pusha
fisttps
icebp
mov
fistpl
daa
das
mov
adc
test
leave
sbb
mov
sbb
iret
jmp
jl
or
faddp
cwtl
push
dec
cmp
inc
push
xchg
rcll
jge
sub
orb
inc
push
jns
xor
pop
cltd
jmp
mov
and
mov
and
jns
scas
fcompl
xor
sbb
cmp
aam
mov
scas
or
lahf
jmp
out
mov
test
push
pop
dec
cmp
xchg
loop
inc
push
mov
inc
push
xor
test
jne
mov
pop
xlat
push
mov
sbb
mov
jno
sti
jmp
jecxz
arpl
xor
xor
adc
push
sbbb
inc
xor
cmc
test
mov
sbb
mov
shl
add
jmp
ljmp
cmp
out
dec
enter
jns
test
addl
adc
repnz
inc
add
sbb
pop
mov
loope
jp
push
push
push
push
scas
andb
pushl
xchg
je
xchg
and
adc
hlt
pushf
or
loop
or
mov
cmp
jnp
or
dec
dec
call
mov
push
sbb
ds
aad
mov
sub
addl
push
mov
scas
dec
pop
and
out
jo
adc
xor
stc
mov
jl
jmp
in
adc
mov
jnp
imul
xchg
jle
inc
mov
repnz
outsl
pop
dec
xchg
fcomps
lahf
pop
sbb
mov
xchg
ds
cmp
cmp
jo
xor
jmp
dec
pop
sub
jne
pop
xchg
das
mov
and
cmc
jns
inc
test
or
lret
loopne
stos
call
bound
sub
xor
loope
push
pushf
arpl
ret
ret
push
sbb
bound
fwait
inc
int
hlt
dec
jno
popf
out
dec
xor
ds
pop
in
mov
mov
and
cmpsl
mov
rorl
lret
push
popf
lahf
pop
jae
xor
pop
in
pop
dec
jecxz
xor
aaa
rcrl
lods
and
mov
negl
fs
adc
int3
jg
sub
outsl
andl
pop
flds
movsl
lods
aaa
xchg
adc
repz
fistpl
and
repz
lea
loopne
addr16
arpl
dec
dec
sub
aam
ss
xchg
and
inc
mov
mov
push
lret
cwtl
loope
push
insl
push
jmp
mov
mov
clc
hlt
sub
mov
orb
adc
movsb
push
add
xor
xor
cwtl
sbb
leave
sub
lds
mov
pop
ds
out
mov
adc
push
push
cs
out
mov
sbb
cmc
fsts
xchg
mov
mov
pop
lret
fs
inc
xor
movsb
fs
and
pop
dec
rclb
sub
sbb
daa
jb
fwait
movb
xor
sahf
fdivp
xor
adc
or
xchg
add
add
jns
and
icebp
sub
jb
adc
inc
dec
in
imul
cmp
mov
inc
mov
out
mov
jns
fidivrl
pop
loope
cmp
sbb
outsl
or
push
mov
clc
lock
call
add
into
imul
inc
xchg
or
mov
mov
inc
mov
adc
pop
adc
and
mov
ficompl
cmp
fistps
cmpb
push
inc
test
xor
pop
leave
icebp
ds
pop
je
js
cmc
int
fdivs
add
pop
jmp
jge
jo
stos
mov
mov
fbld
lods
mov
lea
or
xchg
mov
push
push
cld
rcrb
and
je
fsts
xchg
clc
dec
decl
lods
inc
xor
stos
jae
clc
push
push
jns
addl
and
fdivs
data16
cmp
xchg
aam
imul
nop
mov
fnstsw
mov
icebp
jbe
cltd
dec
dec
xlat
cli
mov
test
xorl
jle
cmc
sbb
push
mov
out
jge
outsb
inc
adc
dec
inc
out
cwtl
push
cld
mov
dec
in
pop
jo
loop
or
xor
cwtl
xchg
sub
jno
popf
sahf
xor
jne
cmp
push
gs
test
pusha
fwait
and
lock
imul
sbb
lret
mov
adc
out
push
mov
pop
pushf
xor
int3
jb
scas
adc
cmp
lcall
lcall
cmp
xlat
sahf
xorb
outsl
dec
mov
inc
lcall
jae
js
push
xor
push
sbb
mov
das
mov
outsl
lret
jo
sub
xchg
cmpl
lods
or
shr
loopne
rorb
movsb
xorl
push
lods
cs
sub
xchg
push
cmp
cmp
jl
imul
xchg
jbe
add
xchg
ret
icebp
mov
pusha
mov
mov
cmp
sbb
fcomi
pop
mov
push
aad
aas
lahf
test
adc
sahf
popf
popa
adc
mov
jle
and
in
sub
lods
sub
fucomp
dec
out
lds
in
pusha
push
stos
or
out
mov
sub
hlt
inc
mov
mov
jae
push
push
adc
dec
adc
fwait
mov
xorl
adc
fs
ds
sub
jns
lds
push
xchg
pop
mov
rclb
mov
push
xchg
cmp
dec
and
das
aas
icebp
mov
sub
mov
aaa
jle
movsl
pop
inc
mov
add
cmp
aad
and
pop
mov
add
in
rcrb
mov
daa
imul
pop
out
xor
sbb
jg
xor
pop
xchg
scas
jb
pop
in
add
les
scas
adc
pop
rcll
adc
sahf
cli
sbb
dec
int
lea
and
cwtl
arpl
insb
jmp
cmpl
movsb
sbb
inc
inc
pop
add
stc
ja
push
aaa
arpl
cmp
sbb
ficompl
lret
add
sbb
add
mov
jo
dec
in
fdivrs
movb
sub
das
lret
sbb
movsb
mov
mov
shl
add
push
push
lock
scas
cmp
pop
test
je
jmp
stc
sbb
mov
jmp
sarl
mov
adc
xchg
incl
hlt
cmp
push
stos
push
loop
stos
cltd
push
cltd
sub
add
xor
loop
imul
dec
add
shr
imul
mov
cmp
xor
xchg
stos
mov
les
sub
adc
mov
ret
jle
popf
mov
in
or
clc
ss
das
rolb
mov
sub
push
cld
sub
loope
jnp
add
sbb
or
fiadds
push
sub
xor
xchg
push
in
and
jo
pop
test
xor
iret
jmp
push
xchg
pop
in
mov
push
mov
into
std
insl
test
test
ljmp
sahf
lock
cli
or
sbb
xor
nop
insl
test
xchg
xchg
adc
jae
dec
divb
js
frstor
jbe
mov
das
fsubs
pop
pop
gs
pop
jmp
loope
mov
popa
sbb
out
outsl
add
dec
pop
pop
mov
pusha
pop
out
add
dec
pop
lods
dec
adc
sahf
notl
and
mov
jo
subb
fdivrl
dec
mov
inc
cli
mov
push
xchg
jno
jecxz
int3
sbbb
mov
inc
adc
addr16
xor
and
ss
or
imul
stos
loope
dec
pop
fcomip
inc
in
test
mov
mov
dec
sub
jge
add
xor
sbb
cmp
aas
push
sarb
into
fs
fisubl
jne
mov
mov
call
lcall
sbb
inc
xor
push
mov
xchg
jmp
int3
pop
push
mov
rcll
insb
xor
std
pop
sbb
jns
cmpsl
mov
and
jae
int
push
daa
icebp
adc
xor
es
mov
pushf
test
arpl
dec
mov
pop
sub
sbbl
adc
adc
mov
outsl
add
inc
imul
and
inc
xchg
jmp
in
sbb
ljmp
fsubrs
pop
add
cmpsb
aad
je
lods
call
nop
cmp
out
mov
notl
inc
inc
scas
add
loop
jne
mov
push
adc
inc
cld
sbb
imul
mov
xor
movsb
mov
jle
add
add
loopne
or
aas
mov
incl
xor
testb
jmp
dec
mov
pop
movsl
inc
cmp
test
rorl
inc
jns
add
inc
pop
ss
xchg
mov
jae
xor
pop
arpl
cmpb
outsl
dec
in
lds
test
push
dec
call
imul
push
mov
clc
xor
xor
scas
and
push
jge
adc
inc
lods
jne
mov
mov
test
orb
mov
fwait
lret
or
cmp
movsl
jbe
and
shld
mov
sub
fldcw
sub
test
jmp
push
push
pop
adc
sbb
mov
xchg
pop
jge
pop
shll
sti
roll
xor
mov
fsubrl
cwtl
mov
cmc
mov
idivb
xchg
movsl
inc
xor
ss
call
jbe
sbb
stos
sub
idiv
xchg
jmp
leave
call
lods
mov
push
stos
ja
push
push
cmpsl
add
mov
outsb
mov
mov
jl
mov
ret
sub
add
ja
mov
arpl
add
adc
mov
push
sub
int3
jbe
inc
call
xlat
mov
sbb
iret
jmp
out
push
int
pop
fsub
sub
repz
fcoml
sahf
cwtl
repnz
repz
add
out
xchg
outsb
xor
add
xchg
mov
push
mov
dec
fsincos
mov
push
arpl
mov
fdivr
mov
mov
ss
cwtl
add
addr16
xchg
pop
xchg
push
je
jecxz
rorl
and
sbb
popa
or
push
dec
xor
push
mov
outsl
lret
fdivr
add
push
xchg
outsl
inc
popf
clc
aam
stos
sbb
in
in
add
loopne
fwait
outsl
in
jmp
iret
pop
dec
aaa
popf
pop
add
and
xchg
sahf
scas
test
in
jg
cld
insb
testb
pop
pop
mov
arpl
or
imul
inc
repnz
cwtl
sbb
fidivs
or
and
stos
push
push
int3
cmp
sbb
leave
sub
push
fwait
test
iret
mov
cmpsb
or
mov
int
adc
xor
jp
test
cmp
in
mov
mov
add
jmp
inc
xchg
pop
sti
dec
sbb
cmp
inc
mov
test
in
mov
or
es
add
fwait
into
xchg
es
daa
aad
pop
data16
stos
jae
inc
lock
faddl
xchg
push
xor
ja
cli
pop
lret
pusha
adc
mov
leave
mov
mov
cmp
push
lock
inc
add
mov
jmp
pop
sete
inc
and
ljmp
mov
xlat
mov
icebp
and
mov
pushf
mov
shl
les
push
call
imul
aam
js
mov
pop
jnp
adc
or
out
adc
sbb
mov
fcomps
jecxz
shl
inc
jmp
in
pop
imul
jae
sub
lea
push
jno
hlt
and
cmpsl
cmc
loope
in
in
inc
jae
lods
push
jl
ficoml
push
push
ret
addl
ss
scas
add
int
xchg
push
jno
aaa
loopnew
dec
pop
adc
sub
inc
cmp
daa
dec
cmp
stos
pop
or
inc
and
add
mov
cld
jg
xchg
es
or
aad
bound
stos
cmc
jno
stc
sbb
dec
ja
pop
push
mov
cmc
jno
mov
pop
lock
test
cwtl
lcall
mov
sub
cli
xchg
inc
cmp
push
cltd
mov
out
jge
sbb
or
in
jg
jae
loope
dec
ljmp
jmp
clc
jge
pusha
mov
movsb
test
cwtl
movl
jnp
enter
movl
sub
mov
push
call
fiaddl
mov
and
sub
fldcw
pop
lods
push
dec
and
or
inc
lahf
jp
ds
in
in
out
es
dec
inc
mov
in
arpl
ja
mov
fwait
into
test
push
dec
daa
xchg
dec
xor
cmp
stos
mov
je
repz
out
lods
xchg
js
test
jb
fidivs
jo
test
loopne
add
iret
sub
mov
jle
push
aaa
pop
insl
mov
jne
sbb
add
psubsw
das
je
mov
icebp
pop
mov
mov
pusha
int
ja
repz
mov
outsl
test
sbb
call
jne
fwait
pop
rcr
sbbb
adc
mov
cwtl
clc
push
test
gs
lcall
mov
push
xor
ret
jl
push
lock
lods
xor
jae
cld
fimull
test
cmp
adc
movsb
push
movsb
jne
rorb
push
pop
das
ljmp
jecxz
mov
iret
jae
pop
outsb
lret
cmp
inc
or
fmull
mov
daa
icebp
bound
in
xor
cli
bound
mov
and
stos
inc
inc
icebp
jle
sub
ficompl
xlat
dec
jbe
mov
or
or
insl
xor
test
and
adc
jp
mov
sub
or
outsl
repz
rcll
loope
mov
or
sbb
rcl
and
pop
das
jne
mov
out
jnp
iret
fmulp
add
push
insl
ret
fisubs
pop
enter
jnp
or
mov
addr16
rcrl
ret
jge
adc
push
andl
fwait
mov
mov
inc
mov
out
repnz
addr16
es
mov
sbb
inc
inc
imul
jge
xchg
in
test
mov
jno
loop
fimull
mov
push
cwtl
mov
arpl
mov
mov
adc
aam
int
test
vmread
add
sbbb
mov
push
pop
data16
insb
dec
ljmp
movsl
repnz
divl
testb
dec
js
jae
fsubs
mov
dec
lret
notb
and
jo
cmp
test
xchg
in
pop
clc
loopne
dec
xor
push
mov
jge
sar
ss
out
adc
mov
jge
pusha
inc
rol
adc
mov
cmp
icebp
dec
rclb
fcoml
adc
and
leave
jl
xchg
xor
and
call
xchg
mov
or
pop
push
scas
outsb
inc
mov
aaa
xor
mov
aam
call
ret
xchg
xlat
notb
pop
add
insb
or
pop
mulb
hlt
hlt
jl
jno
shll
push
jnp
push
adc
or
popa
test
sbb
out
dec
es
dec
add
xchg
xor
roll
cmc
push
std
insb
dec
sub
xchg
andb
jae
addr16
xchg
push
add
jnp
in
or
leave
and
and
mov
loop
push
imulb
mov
mov
ret
repnz
lods
mov
jbe
push
add
adc
insb
fs
outsb
enter
xchg
leave
xchg
mov
xchg
and
xchg
jmp
xchg
push
cmp
sub
xchg
add
leave
int3
xchg
cmp
inc
xchg
addr16
or
scas
jmp
jge
scas
or
mov
call
and
mov
outsl
xchg
mov
cmp
icebp
jge
mov
movsb
xchg
push
sub
mov
xor
dec
leave
jo
cmp
sbbb
sbb
les
mov
cltd
lcall
add
xchg
mov
insl
xchg
addr16
and
xchg
add
stc
aad
mov
push
push
mov
into
fwait
in
frstor
fcompl
scas
sbb
xor
add
scas
inc
mov
push
rclb
cmp
push
mov
jbe
mov
pop
loope
inc
mov
jbe
push
xchg
imul
fistl
mov
mov
insb
clc
xchg
push
cmpsb
fadds
mov
push
stc
out
test
push
int3
mov
cmpsb
div
dec
pop
sbb
push
push
dec
dec
rcr
xchg
je
inc
pushf
out
mov
aas
and
pop
sub
call
inc
sbb
sub
push
sbbl
pop
loopne
icebp
movsl
fs
lods
mov
mov
inc
inc
cmp
mov
fwait
and
sbb
xchg
out
test
pop
inc
mov
push
cwtl
jg
enter
sahf
inc
out
jmp
sub
cmc
xchg
xchg
push
sub
and
test
sbb
or
adcl
push
mov
fcomi
and
fs
ret
xchg
out
shll
arpl
stos
xor
out
or
test
lods
inc
fadd
fstpt
xor
hlt
addl
xchg
sti
out
test
rcl
sub
fcmovnb
push
data16
or
fisttpll
inc
sub
or
sahf
test
xor
cmpsl
insb
mov
cmpsl
test
orb
orb
sbb
mov
pop
jecxz
mov
sub
jmp
cmp
and
push
and
sbb
pop
xor
xor
repz
jo
mov
or
test
jmp
dec
rcll
push
xchg
and
rcr
rclb
aad
mov
pop
fmuls
into
and
mov
xchg
dec
arpl
into
outsl
or
inc
jp
sub
mov
cmc
stos
dec
cmpsb
fdiv
int
test
imul
fs
fcoml
push
out
xor
inc
xchg
mov
fwait
sbb
jl
imul
aaa
testl
out
push
pop
cld
or
lahf
xor
sbb
cmpsb
fnstsw
adc
jle
popf
clc
xor
fstpt
jl
iret
mov
pop
mov
pop
fsubrs
jo
imul
push
movsb
push
es
push
movsl
sti
mov
movsb
lea
in
in
xchg
fildl
xchg
sbb
push
pop
or
or
mov
sbb
mov
sub
jne
mov
js
icebp
adc
add
cmp
rcrl
push
test
inc
lret
mov
cli
mov
cltd
shrb
jp
cwtl
lds
cmc
add
aad
aam
or
rcr
push
jecxz
inc
dec
push
pop
test
cwtl
pop
xchg
add
add
imul
ja
pop
push
mov
leave
mov
stc
les
xor
testl
xchg
stos
mov
fldcw
mov
xor
or
push
sti
push
push
push
jae
in
sarl
add
jne
lods
gs
cmp
ret
lahf
ret
iret
sarb
das
jmp
xor
ss
lret
xchg
adc
xor
std
add
xor
push
cmpsb
fchs
int
push
nop
jbe
push
cld
sub
mov
inc
pop
bnd
popf
rorl
add
mov
sbb
ja
cmp
stc
loopne
cld
mov
jmp
mov
cmpb
cmp
and
pop
cltd
dec
in
jmp
mov
push
es
inc
lahf
sub
ret
mov
add
inc
sbb
arpl
jle
push
ret
inc
mov
arpl
lret
les
mov
cltd
sub
inc
gs
fst
bound
sti
xchg
push
xor
lds
test
lods
ja
fistpll
lcall
and
push
subl
nop
ja
lods
xchg
push
xor
scas
ss
jecxz
hlt
sti
xchg
sbb
mov
or
xorb
mov
push
mov
cmp
or
pop
std
cmpsl
or
call
xor
repnz
mov
push
testl
xchg
minps
pop
fdivrp
xor
sahf
adc
lahf
adc
or
pushf
push
mov
cmp
mov
loopne
adc
sbb
lret
inc
pushf
adc
aas
popf
lret
inc
push
push
jmp
imul
scas
mov
stc
cwtl
pusha
insl
scas
imul
or
scas
push
std
push
adc
xor
sub
inc
aas
js
repnz
pop
pop
out
mov
pop
push
jecxz
out
fcomps
pusha
sti
loopne
or
cmp
ret
jge
jbe
in
pop
iret
push
mov
ds
and
lahf
mov
and
mov
jnp
out
xor
mov
fisttpll
xchg
shll
pop
loop
cs
test
ror
cwtl
fldpi
rsm
fnsetpm(287
adc
jne
test
add
rcl
push
mov
and
inc
cmc
enter
into
out
sub
aas
xchg
loope
movsl
int3
xchg
and
xchg
jns
popf
adc
mov
rcrl
inc
sbb
addr16
sarl
popf
test
xor
addr16
out
adc
repz
fisttpll
xchg
dec
or
sbb
push
in
lahf
mov
sbb
mov
and
xchg
in
mov
push
push
pushf
dec
pop
mov
cmp
loope
sub
sbb
call
mov
sahf
fstl
inc
outsb
pushf
xchg
lea
sbb
lods
sub
jge
mov
inc
rcl
icebp
xor
ljmp
ret
add
jge
imul
add
mov
repnz
or
test
test
cmpsl
push
aad
or
jns
cmpsb
movsb
and
dec
mov
mov
jecxz
negl
and
notl
ja
xor
jl
int3
nop
inc
rolb
push
dec
inc
jae
fsubr
xlat
cmp
xor
push
clc
push
imul
fsub
iret
mov
mov
imulb
dec
scas
and
fsubrl
fcoml
cs
pushf
mov
add
dec
aad
call
sub
sbb
jl
test
scas
xchg
ss
in
inc
movsb
mov
popa
jge
xlat
ficompl
mov
or
call
adc
jnp
int3
add
inc
mov
test
into
insl
sub
adc
sti
arpl
cwtl
cmp
outsb
cmpsb
gs
xor
jnp
insl
pop
jg
sti
rorl
cmp
fisubs
mov
shrb
testl
imul
mov
out
push
gs
enter
sub
loope
pop
jge
sar
xor
mov
leave
xchg
adc
adc
dec
sbb
loopne
outsl
mov
xlat
je
test
and
sbb
jg
call
xchg
adc
out
lret
sbb
in
jle
rorb
jnp
xchg
icebp
mov
mov
lods
jns
les
mov
dec
push
jns
stos
jne
jmp
sbb
push
ret
in
sbb
and
inc
cmp
shlb
push
push
mov
mov
push
cltd
sub
insl
shlb
jns
subb
or
or
je
add
and
mov
ja
repz
pushf
cld
pop
in
push
cmp
shlb
inc
push
loop
cs
fisubrs
push
jge
lds
cltd
enter
cltd
dec
cmpsb
leave
jae
and
outsb
dec
inc
sbb
data16
in
jnp
test
rcl
lds
movsl
inc
into
push
stos
fsubs
mov
jp
loop
ficoml
test
mov
loopne
pop
movzwl
imul
xlat
xor
inc
lods
scas
or
shll
in
jg
cmc
cmpsl
scas
push
add
rcl
sub
outsl
or
adc
rcrb
mov
mov
leave
loope
jne
sub
or
xor
in
cmp
adc
lods
gs
xorl
mov
ffree
incl
lock
leave
insb
push
jmp
movsb
fbld
testb
cmp
sbb
stc
sbb
inc
push
mov
ror
lret
sbb
into
or
cmc
sub
and
xor
aas
aaa
inc
mov
sub
mov
lret
or
xchg
test
mov
test
xorb
imulb
es
dec
popf
xchg
mov
mov
dec
jp
mov
pop
dec
ret
out
decl
xchg
xchg
ja
xlat
mov
out
pop
lods
shrl
add
cmp
aaa
popf
push
jo
add
shl
pop
in
xor
pop
aas
scas
sub
mov
jmp
repnz
xchg
cmp
cmp
mov
outsb
jmp
pop
rcll
icebp
jbe
fnsave
and
popf
xchg
fs
inc
push
int
sub
scas
scas
int
movsb
xchg
scas
sbb
push
pop
fadds
push
ret
jb
iret
fs
fwait
in
daa
sbb
iret
mov
jl
mov
adc
jo
arpl
dec
sbb
in
adc
cmpsb
das
imul
rorb
cmp
daa
aas
or
mov
mov
mov
sub
or
adc
in
loopne
into
dec
mov
jl
sahf
lahf
add
iret
bound
jg
test
outsl
rcll
cmp
or
pop
out
cli
mov
mov
jmp
adc
jmp
xor
mov
sub
test
ljmp
pop
jge
xor
xor
ja
out
inc
aas
push
test
jecxz
imulb
xor
push
ja
push
shlb
pop
fldenv
mov
fistpll
dec
xchg
mov
adc
and
dec
sbb
jle
mov
loop
mov
in
push
repnz
or
sub
cmp
leave
push
dec
ret
lea
imul
or
lods
sub
lret
sub
loope
out
rorb
scas
xchg
subl
mov
cmpsb
les
imul
jmp
ret
inc
adc
mov
adc
jp
mov
mov
das
and
mov
mov
mov
sbb
stos
jne
stos
lret
inc
loopne
int3
sbb
popa
sahf
pusha
jmp
dec
gs
adc
mov
aam
mov
or
and
arpl
int
arpl
adc
jb
cld
out
scas
adc
ja
or
dec
loope
jnp
imul
sbb
int
daa
hlt
xchg
pop
js
jae
jb
xlat
xchg
sub
in
pop
bnd
insb
in
mov
xorps
mov
or
cmp
lret
test
jne
push
dec
dec
aam
in
and
stos
popa
mov
enter
insl
sbb
mov
dec
out
jl
add
call
cmc
pusha
inc
stos
pop
pop
outsl
mov
or
outsl
xor
dec
jae
testb
lcall
or
sbb
into
aaa
mov
loopne
loop
or
imul
fiaddl
xor
and
test
pop
sbb
test
loopne
and
xchg
pusha
scas
xchg
sti
mov
xchg
fs
fldl
pop
in
fdivrs
aas
add
iret
adc
sub
out
push
cmp
hlt
cmpsl
or
das
cld
adc
lods
mov
and
in
or
ja
cs
into
mov
add
sti
ljmp
jae
sbb
push
lret
fdivrs
cltd
prefetch
adc
ffreep
repnz
mov
push
jb
sbb
scas
jg
push
jecxz
add
adc
sahf
cli
sbb
jecxz
mov
jns
and
fistpll
jbe
in
xor
sub
mov
data16
mov
push
cmp
aaa
fcomps
or
aam
push
sahf
ds
mov
outsb
add
jb
jno
sub
cli
in
mov
sub
lcall
adc
push
mov
xor
leave
mov
scas
pushf
ja
int3
jmp
add
loop
push
pop
adc
hlt
pop
in
sbb
xchg
push
or
out
out
int3
test
push
in
or
clc
push
inc
incb
mov
add
sbb
sub
int3
push
jns
add
scas
iret
decb
mov
in
pop
lret
xor
out
aas
inc
movl
sub
mov
cmpsl
pop
push
test
loope
sahf
cmp
mov
jnp
mov
jg
arpl
loop
stos
test
mov
mull
xchg
nop
sahf
mov
mov
dec
iret
lods
and
mov
sub
out
xor
pop
pop
mov
test
loop
push
aaa
enter
mov
sbb
push
in
push
mov
and
pusha
fldl
and
pop
stos
add
imulb
mov
push
cmp
sahf
testb
adc
inc
xor
in
fwait
mov
das
xchg
bound
adc
stc
gs
adc
ljmp
test
insl
dec
jns
test
cld
out
push
or
xor
ja
adc
dec
xchg
mov
jnp
fwait
int3
mov
faddl
mov
popa
inc
add
sti
xchg
jmp
iret
int
push
mov
mov
xchg
cmp
mov
mov
adc
je
jecxz
push
repz
cld
push
nop
nop
or
xor
pop
dec
inc
xchg
insb
jnp
pop
lcall
xor
jl
sbb
std
jb
mov
fldt
and
xchg
mov
dec
outsl
xchg
xor
jmp
data16
dec
xchg
pusha
testb
or
inc
es
jle
cmp
outsl
jbe
ds
and
sub
jecxz
pop
and
or
add
add
lahf
and
int3
cwtl
ret
test
mov
xchg
cmp
aad
jno
mov
and
cmp
sub
adc
jne
cmpsb
daa
pop
jmp
dec
xor
mov
add
fildll
or
pop
push
stos
add
adc
mov
addr16
xor
loope
scas
in
and
aad
push
mov
mov
dec
out
jbe
es
and
push
lret
bound
sbb
mov
ljmp
mov
cmc
and
sub
callw
inc
mov
push
pop
rorl
call
sbb
ret
out
sbb
jecxz
xor
mov
adc
lret
lea
int
or
mov
mov
imul
pushf
stos
pop
xchg
data16
mov
fisttpll
loope
mov
adc
sbbb
push
stos
and
es
call
xchg
add
sbb
jle
lea
push
lea
add
mov
imul
push
mov
and
mov
dec
xchg
jl
xor
sbb
or
in
adc
dec
fcmovnbe
sahf
jecxz
xchg
in
and
jae
inc
stos
les
inc
xchg
inc
cmpsl
fisttpl
lret
test
out
scas
in
adc
push
pop
ret
out
mov
mov
loop
sub
jo
cmp
adc
vmwrite
cmp
sub
lods
mov
push
sub
dec
pop
fstps
pop
push
add
lods
out
or
pop
nop/reserved
jne
pusha
xchg
and
fidivrl
in
movsl
mov
mov
clc
mov
dec
subb
or
mov
imul
cmp
pop
dec
add
aas
test
sub
cs
mov
mov
clc
pop
clc
mov
nop
inc
out
ficomps
mov
aad
jmp
or
add
jge
rorb
inc
leave
mov
add
mov
popa
aaa
xor
mov
sbb
adc
push
fists
xchg
inc
add
mov
sar
cltd
mov
pop
ljmp
or
sub
jae
mov
jnp
sti
add
inc
xlat
shlb
push
add
cld
jmp
out
les
ret
push
test
inc
pop
roll
jp
aam
inc
outsb
push
inc
push
jns
testb
sub
and
mov
jg
imul
sbb
cmpsb
pop
stc
aaa
imul
mov
adc
out
xorb
xchg
mov
adc
inc
cwtl
jne
add
cltd
sbb
or
cmc
or
data16
inc
cmp
lock
fldenv
push
mov
lods
insl
scas
push
or
xchg
jecxz
adc
data16
xor
sbbb
xchg
popa
lcall
and
xor
or
and
imul
fwait
cmp
enter
fisubrl
faddl
mov
cmp
mov
adc
inc
sub
inc
push
loope
sub
js
sub
mov
movsl
cld
negb
sbb
mov
push
cmpsb
imul
push
mov
insl
jb
test
les
dec
pop
cmp
pushf
xlat
dec
lret
add
jmp
pop
mov
mov
jge
loopne
out
sbbb
jmp
jo
xchg
test
leave
ret
testl
and
js,pt
pusha
js
outsl
aaa
fs
movl
xor
jle
sub
shl
jo
or
jg
add
test
sbb
jg
mov
je
and
push
or
or
popf
xchg
pop
andl
das
jmp
cld
into
add
sub
pop
lcall
aas
mov
push
stos
sbb
popl
sbb
or
and
test
and
dec
enter
jle
jo
loope
lods
cmp
out
jb
jno
or
xlat
sar
xchg
mov
sbb
hlt
call
cli
out
fcomps
icebp
roll
clc
fxch
call
in
test
xlat
or
les
xchg
out
cmc
push
mov
pop
inc
nop
cmp
push
jmp
arpl
or
out
lahf
popa
movsb
or
xchg
bound
in
jnp
dec
js
mov
push
iret
dec
hlt
or
imul
dec
nop
adc
cmp
xchg
loopne
xchg
test
cmp
xor
or
and
add
push
data16
xchg
cmp
test
sbb
int3
fsts
les
jno
cmp
cmpsl
ja
sbb
imulb
lea
pop
inc
mov
mov
fucomip
xor
mov
js
pop
roll
pop
inc
cmp
negb
and
out
mov
push
or
stos
sub
shlb
das
in
jmp
sub
xchg
and
aam
ja
jg
sub
mov
or
mov
stos
jnp
jns
push
data16
and
push
pop
mov
cltd
and
movsl
pop
cs
insl
adc
xchg
cmpb
fs
xlat
fcomip
ret
test
mov
lret
adc
fsubrl
aaa
or
mov
test
dec
push
adc
out
push
and
adc
loop
or
xchg
sub
push
adc
bound
xchg
jecxz
adc
std
push
rcl
sbb
xchg
or
pusha
popa
scas
int
out
jge
pop
pop
and
test
roll
fnstcw
add
add
leave
push
testl
repnz
cmpsb
dec
int
rcl
fadds
jnp
cltd
fucomi
iret
sti
lahf
cli
push
jno
sbb
jge
xchg
mov
std
adc
addr16
push
mov
xor
lret
dec
outsl
xchg
std
mov
dec
mov
sbb
sar
mov
les
scas
ret
daa
aas
or
mov
fsubs
push
xorl
xchg
addl
inc
cmp
inc
cmpl
arpl
inc
add
mov
idivb
mov
fsubrl
lcall
dec
and
cmp
push
push
insl
test
inc
cld
pop
in
lret
aas
pop
mov
push
sbb
add
rcl
aam
jmp
jbe
insb
imul
addb
rcll
jo
cmp
pop
add
roll
mov
in
and
inc
popa
and
xchg
mov
push
push
or
loop
push
cltd
sub
or
push
ja
jmp
sub
add
pop
push
dec
stos
push
cmpsl
pop
pushf
sbb
and
adc
lods
fwait
add
rorb
pop
jp
int3
mov
xchg
je
call
sub
sbb
scas
rol
pop
shl
cmp
outsb
xchg
inc
sbb
jecxz
add
scas
xchg
loopne
sub
icebp
xchg
cwtl
mov
shr
or
imul
arpl
add
xor
in
push
lods
pop
xchg
pop
test
pop
fcomp
push
cmc
xchg
xchg
mov
mov
mov
je
test
in
or
sbb
add
and
inc
xor
jo
adc
mov
stos
pop
lcall
loopne
xchg
shld
stc
and
adcb
add
pop
arpl
jecxz
jbe
and
cmpsl
inc
mov
pop
xchg
test
xchg
xor
rcrb
sub
and
cwtl
jno
pop
xchg
divl
scas
ds
or
daa
adc
test
stc
sbb
popa
inc
push
pop
test
jg
and
push
cld
pop
lahf
sbb
push
or
mov
rclb
clc
dec
add
add
add
and
mov
rorb
xor
adc
outsw
adc
jmp
insb
ficoms
lret
stos
fistpl
in
insb
jge
inc
std
adc
stc
ja
jo
sub
cld
sbb
xor
push
jo
enter
daa
out
push
cmp
pop
mov
mov
lods
xchg
out
jnp
dec
int
cmp
sub
inc
fs
add
xchg
sti
stos
insl
mov
jb
sahf
jbe
push
mov
jmp
mov
add
sub
jnp
mov
adcl
aam
cmpsl
cmp
bound
adc
cmp
daa
inc
dec
les
mov
rcl
lcall
cmpsb
test
ret
push
xchg
inc
insb
push
mull
mov
or
push
mov
je
jmp
jo
pop
fstpl
jb
jge
mov
cmp
lret
lds
mov
sbb
pop
mov
stos
xor
loopne
data16
or
mov
jecxz
fsts
mov
outsl
pop
callw
adc
movsl
fwait
inc
sbb
ficoms
dec
sbbb
xchg
mov
daa
inc
mov
in
mov
test
mov
cmp
sub
ret
or
test
icebp
clc
lock
jle
sub
adc
mov
jne
inc
stos
loop
add
push
jae
or
test
mov
sti
ficoml
sbb
sbb
xchg
fiadds
scas
pop
push
or
sbb
lahf
movsl
scas
xor
jp
mov
out
add
negb
jae
fdivl
sub
or
cs
jecxz
pop
adc
sahf
stos
xlat
arpl
cmpsl
push
xchg
mov
jp
incl
pop
sahf
xchg
jno
dec
xchg
dec
lahf
pop
add
ja
stc
insb
je
mov
rorl
push
and
mov
push
shll
aad
repnz
xchg
mov
fdivl
out
add
dec
iret
imul
jmp
adc
jle
mov
test
mov
int
iret
xlat
movsb
inc
xlat
sbb
ljmp
out
cmp
in
jmp
add
inc
push
fiadds
iret
int
out
adc
into
mov
inc
dec
jg
movsb
mov
jns
xchg
scas
test
shrb
jno
ds
mov
pushf
jnp
sarl
xlat
cmpsb
jnp
mov
mov
push
movsb
mov
sub
or
push
mov
pop
adc
xchg
push
je
xor
rorl
xchg
lock
lock
inc
mov
xchg
jmp
xchg
add
int
rorb
loop
fwait
hlt
cmp
mov
ljmp
push
iret
into
xchg
mov
mov
or
inc
fldt
pushf
enter
enter
pop
lahf
jmp
push
sub
fwait
addr16
push
insl
push
xchg
pop
lods
outsb
fistps
dec
sbb
cmp
movsl
inc
add
fbstp
loop
mov
add
popf
push
or
lret
rcrl
or
loop
call
and
mov
loopne
test
lret
sarl
hlt
popf
clc
sbb
xchg
xchg
outsl
push
dec
adc
mov
or
adc
rolb
push
into
xor
out
push
insb
inc
mov
ret
jne
out
xor
les
xchg
les
add
xchg
in
mov
jge
sub
push
push
notb
dec
xchg
dec
int
inc
pop
jg
inc
cwtl
pop
lods
jmp
mov
xor
fwait
call
lock
inc
icebp
fisubrs
clc
adc
push
lods
lahf
ljmp
lcall
mov
int
mov
stos
sbbl
or
lret
out
lea
addr16
mov
fs
jge
std
sbb
mov
adc
cltd
cmp
or
mov
pop
dec
imul
std
dec
push
adcl
rol
add
cmp
push
adc
pushf
dec
mov
jl
jb
add
addb
mov
jle
push
or
and
cmp
push
and
idivl
pop
xchg
jnp
pop
xchg
into
or
fistpl
sbb
jbe
mull
cmpsl
mov
test
sbb
call
adc
fs
icebp
nop
and
push
mov
popf
xor
or
push
or
scas
repz
inc
sub
sbb
pushf
inc
cltd
xlat
adc
rorb
sub
or
out
sbb
test
jnp
pusha
and
sub
jg
xor
mov
aam
cmp
imul
xchg
add
popl
xchg
jg
aad
icebp
sbb
ret
push
mov
and
fldenv
aaa
std
push
shll
jl
mov
popf
pop
xor
repnz
loope
or
cmp
stos
movl
out
sbb
pop
ja
aaa
inc
mov
pop
sub
orl
das
in
adc
das
pop
mov
int
fwait
pop
scas
stos
sub
les
xor
in
mov
or
mov
xchg
mov
gs
js,pt
mov
pop
jns
ds
aas
fs
outsl
ret
insb
arpl
cmp
aas
inc
in
or
jns
cmp
xchg
mov
leave
sub
daa
sbb
mov
xorb
in
ret
fwait
test
enter
pop
cmpsb
fnstsw
inc
pusha
cmpl
das
lds
outsl
scas
test
or
and
decb
sbbl
loopne
jb
xor
jno
or
je
icebp
mov
mov
out
lahf
sbb
mov
pop
mov
cmp
mov
je
adc
and
scas
push
inc
push
testb
xlat
lcall
mov
push
push
testb
shlb
ret
adc
outsb
jns
fcomp
insl
jmp
lds
mov
xor
mov
mov
push
fisttps
xchg
pushf
jle
push
stos
mov
es
lret
rcll
cltd
fcoms
mov
mov
int3
push
aaa
mov
sbb
push
mov
jne
repz
cmp
hlt
loope
sarl
xchg
mov
sub
xchg
xchg
cmpsl
mov
adc
lods
xchg
push
push
sub
aaa
test
arpl
inc
xor
iret
scas
jnp
in
ud2
push
mov
fxch
xchg
icebp
push
sahf
sub
dec
jno
jnp
pop
aam
leave
mov
mov
lds
push
mov
and
dec
dec
mov
pop
shr
fcmovbe
outsl
fs
add
and
iret
push
xchg
iret
inc
jg
std
mov
pop
insb
or
xor
sub
dec
xchg
xor
add
loope
in
mov
jo
pop
nop
bnd
xor
lock
mov
pop
push
aad
es
lds
adc
leave
xchg
push
xor
icebp
or
jbe
aaa
mov
loopne
mov
ret
mov
xor
jl
je
inc
repz
xchg
icebp
or
pusha
dec
or
ret
ror
lret
hlt
pop
out
shlb
pop
cmovg
mov
mov
sbb
mov
leave
sbb
xchg
adc
xor
aam
sub
fwait
sarb
xor
push
sbb
fstl
fidivrs
push
neg
add
mov
jae
xchg
lods
push
mov
mov
xorl
add
loopne
insb
popa
arpl
dec
ret
sbb
loope
jbe
or
ret
cmp
jmp
fwait
and
pop
add
aad
adc
cwtl
or
adc
push
icebp
lcall
pop
xor
sub
pusha
fcompl
add
sub
jle
imul
in
dec
jb
cwtl
mov
decl
add
cmp
sbb
xchg
in
scas
bsr
and
icebp
testl
fcmovb
repz
pop
mov
cmp
lahf
jl
push
rol
xlat
jo
ljmp
test
fidivs
cwtl
push
jnp
lret
call
sub
pop
push
lock
adc
sbb
mov
add
or
mov
jle
out
mul
jae
jbe
cmpsb
mov
sbb
mov
orb
repnz
sbb
psrlq
adc
and
mov
out
sub
enter
pushf
aaa
jno
inc
add
jns
mov
rcl
jecxz
mov
pop
data16
push
movsl
fcompl
fsin
insb
out
mov
adcb
push
lds
repz
add
inc
jns
sub
shll
inc
push
xor
xor
adc
fsubl
push
or
or
sub
mov
jne
pop
sbb
test
jae
dec
cmpsb
int3
pop
data16
loopne
mov
lcall
sarw
sbb
sub
movl
pop
xchg
shll
mov
cmpsl
repnz
push
bound
push
mov
out
addr16
sti
mov
arpl
dec
cmpsb
std
and
shll
fnstsw
inc
popf
out
js
shlb
sahf
mov
mov
inc
xchg
mov
lcall
xchg
lods
test
insb
xor
sbb
fucomi
int
aaa
pop
es
lret
push
stc
mov
in
cs
mov
insb
sub
in
sub
dec
adc
outsl
mov
sahf
in
xchg
test
mov
dec
pop
push
and
rcl
add
out
mov
mov
xchg
loope
xchg
mov
aas
push
scas
enter
nop
inc
fcomi
fisubrs
into
mov
inc
sbb
testl
push
and
sbb
mov
ja
xor
adc
dec
or
mov
dec
mov
and
maskmovq
divl
xchg
out
xchg
cmp
fists
test
or
ds
sbb
xor
xchg
sub
pop
mov
nop
in
add
adc
adc
out
fwait
sub
stos
pcmpeqb
fisttpl
push
data16
mov
xor
jl
ja
jb
mov
imul
push
test
mov
push
mov
adc
xchg
and
jmp
rolb
jbe
pop
cmpsb
xorl
jp
mov
les
push
add
clc
lcall
adc
push
lea
adc
mov
movsl
sbb
dec
and
flds
dec
repnz
lods
in
aaa
rclb
lahf
xchg
test
cli
inc
push
pop
lods
in
push
adc
aam
mov
xchg
out
mov
dec
jecxz
fldl
std
mov
aam
scas
inc
sbb
test
ja
ficoms
xchg
outsl
test
cmpsl
out
fisubrl
push
mov
sti
aam
in
mov
shll
into
pop
jecxz
test
add
fbld
imul
push
insb
push
and
pop
fiadds
ret
daa
xorb
sbb
loop
fadds
jge
add
into
xor
sub
mov
ror
xor
mov
notb
les
nop
sub
xchg
leave
mov
or
sarb
mov
dec
jp
arpl
lds
movl
pop
and
pop
mov
sub
fstl
sbb
jb
inc
dec
cmp
xor
push
es
ja
sub
mov
or
fcoml
xchg
cmp
push
mov
cld
rorb
sub
mov
xchg
xchg
xchg
aaa
adc
jle
out
mov
mov
lcall
add
push
clc
shll
data16
push
jmp
popa
movsl
xchg
icebp
dec
and
ss
sub
in
sub
sahf
xor
imul
sbb
sub
adc
inc
fdivr
loop
push
sbb
jecxz
sti
cmc
mov
hlt
xchg
std
inc
adcl
icebp
mov
pop
je
outsb
cwtl
ret
ja
stc
mov
sarl
shl
sub
jge
rclb
loopne
int3
into
ds
fildl
mov
sub
xchg
cmp
int3
in
aad
xor
dec
push
push
aas
adc
cmp
ficoms
cmp
imul
jge
cmp
mov
and
xchg
fs
test
pop
int3
adc
fists
por
pusha
stos
repz
rdpmc
outsb
dec
out
dec
ds
add
sbb
std
iret
xor
or
andl
mov
fwait
ja
lds
mov
or
in
enter
xor
stos
or
sbb
js
mov
pop
inc
jne
jns
lahf
ss
jnp
in
and
or
negl
les
xor
mov
mov
into
jg
xchg
data16
jbe
cli
xlat
cmpsb
jb
push
insl
jne
dec
pop
hlt
daa
scas
les
pop
shrb
cmp
idivl
jge
and
loopne
scas
andb
push
test
add
pop
ljmp
jecxz
daa
dec
cmp
sbb
mov
popf
repnz
xchg
or
ja
lds
push
or
push
in
inc
and
pop
mov
scas
aam
mov
sub
mov
mov
xor
add
aad
add
inc
fmull
inc
jmp
push
push
jge
ret
enter
push
cltd
mov
dec
pushf
in
std
sbb
fisubl
fs
dec
cmp
leave
adc
sar
cmp
inc
xor
push
pop
and
sbb
daa
fcmovnbe
push
xchg
jns
lds
push
mov
enter
in
mov
fsubs
adc
add
or
cmp
inc
inc
sbb
jmp
mov
push
popf
mov
adc
sarb
movups
jmp
xorb
icebp
or
jo
stos
and
sbb
movsl
rcll
es
cmpsl
fidivl
pop
lahf
mov
sbb
enter
or
popf
jle
je
mov
dec
popw
cmp
add
xchg
loopne
adc
aas
inc
sbb
insl
daa
push
adc
scas
mov
mov
inc
or
aad
jnp
pop
mov
sub
pop
jno
mov
or
aaa
pop
pop
adc
mov
cli
push
xchg
cmpsb
into
jo
in
pop
inc
aaa
shlb
dec
inc
sub
inc
mov
fisttpl
dec
iret
lahf
lea
dec
mov
in
adc
and
aaa
outsl
add
test
fwait
mov
popa
jecxz
popf
iret
orb
mov
nop
xlat
inc
mov
test
or
je
jno
shrb
mov
add
nop
adc
and
or
mov
xor
push
jno
dec
xchg
popf
js
push
mov
cmpsb
in
xorb
sub
xor
daa
and
push
push
ljmp
mov
cmpsl
push
cmp
adc
gs
in
push
mov
push
test
scas
adc
insl
lds
inc
xchg
filds
imul
mov
push
mov
xchg
mov
mov
test
cmp
lahf
imul
xchg
imulb
hlt
subl
and
mov
stos
add
or
and
popf
push
scas
ret
leave
movsl
outsb
jb
adc
out
cltd
and
sub
test
cmp
jp
mov
jg
int
and
frstor
cmp
int
fisttps
ss
cli
icebp
lret
adc
loope
cli
rorb
out
mov
sbb
mov
shl
addl
nop
in
xor
pop
inc
pop
adc
cmp
arpl
pop
arpl
popa
test
adc
and
setno
shrl
scas
mov
fidivrs
mov
adc
mov
clc
mov
sbb
jb
cmp
jmp
lds
push
jns
call
push
cmp
jns
mov
add
push
pop
rcr
sub
ja
cmp
pop
int3
or
xlat
sti
int
cmpsl
stos
cmp
push
push
cmpsl
ljmp
out
ficoml
scas
in
je
clc
mov
jbe
dec
sti
jmp
inc
dec
arpl
push
into
push
dec
mov
ds
out
lret
ret
bound
loopne
fistpll
inc
mull
clc
in
imul
fcoml
mov
nop
into
stc
fs
pop
cmp
cmpsl
jo
inc
ret
rcr
repnz
mov
jg
push
inc
in
leave
inc
jl
mov
cs
iret
addr16
lods
pop
popa
in
inc
sub
lret
mov
mov
fucomi
xchg
add
adc
mov
pop
stos
shlb
outsl
dec
push
xor
nop
xchg
inc
aad
pop
mov
repnz
push
mov
pop
lods
xor
pop
mov
adc
fcoms
or
mov
inc
scas
aad
cmpsl
pop
fsubl
pop
mov
cmp
adc
push
pushf
add
push
mov
mov
fs
inc
xor
sub
mov
or
lods
test
aam
cld
push
mov
test
push
into
xor
and
pop
and
mul
testl
stc
sbb
xor
or
imul
push
sub
mov
rol
inc
in
jno
sti
push
popa
adc
scas
popf
icebp
mov
mov
pop
mov
popf
insb
add
das
mov
sub
mov
xchg
and
shll
cmpsl
and
jle
sbb
and
jo
ret
ret
mov
xchg
inc
mov
ret
addr16
je
sub
scas
jno
cmp
lea
push
ljmp
xor
out
js
sbb
decl
or
les
xor
xchg
lea
lret
mov
in
aam
push
cwtl
inc
sub
icebp
int3
mov
sahf
in
sub
lods
add
sub
pop
pop
ret
mov
fdivrl
int
jo
jo
stos
fs
cmp
ficompl
xor
aas
insl
cmpsl
cmp
xchg
jo
or
sub
incl
xchg
xlat
sbb
and
and
outsb
mov
xchg
lea
mov
mov
pusha
cmp
pop
inc
sahf
adc
jbe
sub
iret
jnp
test
icebp
adc
ficomps
test
pop
pop
add
outsl
out
mov
mov
mov
sub
mov
test
mov
mov
xor
xor
mov
shrl
aas
mov
icebp
pop
inc
xor
notb
add
in
pop
inc
cwtl
add
pop
push
jecxz
mov
sub
adc
push
fwait
jmp
push
pop
insb
repnz
aas
dec
stos
cmp
push
aad
xchg
mov
fiadds
cmpl
negb
arpl
jnp
mov
xchg
sbb
aam
mov
gs
fs
dec
out
jno
aad
movl
cmp
sub
fwait
arpl
pop
push
shll
add
cmp
dec
inc
aas
dec
in
ss
into
sub
mov
xchg
rcr
mov
icebp
fadds
loop
sarb
test
ret
test
clc
add
dec
mov
in
clc
repz
aas
rcrl
lock
xor
add
rorb
pusha
jp
insb
sub
xor
hlt
mov
lds
inc
popl
fs
push
imul
mov
adc
aaa
cmp
std
lahf
adc
push
cmpb
bound
xchg
inc
je
fidivs
into
add
adc
mov
iret
mov
sub
dec
aad
inc
xchg
scas
push
mov
cld
push
out
aam
adc
loope
push
jg
pop
pop
addl
mov
mov
cmp
icebp
xchg
push
xor
pop
cltd
mov
and
dec
sub
mov
mov
fcompl
dec
out
adc
pop
xor
adc
mov
fistl
push
push
es
mov
das
mov
idivl
mov
mov
test
jl
orb
out
imul
orl
lcall
pop
insl
ret
subl
test
mov
mov
push
fldt
pop
xchg
mov
fdivrp
pop
sar
pushl
sbb
xor
fstpt
cmp
and
in
in
sbb
aad
out
dec
dec
xor
mov
push
lock
add
imul
cli
bound
jbe
mov
scas
or
inc
mov
push
fldenv
sub
jne
inc
sub
sub
cltd
pop
mov
and
sbb
jae
sub
inc
and
xchg
or
shlb
sbbl
push
add
inc
add
jp
jo
mulb
push
and
pop
in
sti
push
aam
adc
push
mov
sub
mov
pop
xchg
daa
mov
int3
fbstp
rolb
faddp
scas
pop
pop
sbb
xchg
out
testl
mov
test
pop
inc
cltd
jge
adc
adcb
adc
nop
xlat
mov
dec
mov
pop
dec
imul
and
std
push
aas
push
fwait
mov
cmpsb
orl
jbe
mov
lock
pop
pop
aaa
fdivs
call
push
sbb
pop
dec
in
jmp
lret
hlt
mov
mov
xchg
sub
lret
shlb
out
push
and
cmp
mov
push
mov
mov
and
and
mov
mov
scas
daa
aam
pusha
sub
mov
jb
pop
scas
mov
testl
sbb
and
inc
jmp
jbe
addr16
popl
test
insl
adc
jnp
shrl
jmp
push
cmp
pop
rcrl
mov
shrl
jnp
xor
jecxz,pn
mov
jmp
or
mov
pop
mov
mov
lret
outsl
adc
js
in
jmp
in
sbbb
mov
pop
add
movlps
mov
inc
sub
pop
jae
sahf
mov
jb
mov
enter
xchg
testb
lds
sti
in
ss
subb
sbb
rcrb
test
pop
adc
xor
dec
ret
add
ret
imull
xor
add
into
js
push
mov
mov
daa
adc
scas
sbb
dec
dec
fwait
scas
loop
cmp
pop
aam
add
mov
add
dec
lcall
cmp
jbe
in
sub
in
jmp
repz
jbe
ja
in
mov
arpl
out
hlt
pop
cmp
cmc
ljmp
out
adc
xchg
push
jae
pop
xor
imul
bound
mov
test
adc
rol
std
and
and
arpl
mov
orl
jns
orb
pop
outsl
jecxz,pt
xor
imul
xor
and
xchg
adc
adc
int
rclb
xlat
and
fcmovu
jbe
loopne
lcall
xor
mov
imul
das
int
lods
mov
or
mov
cld
pushf
mov
jp
inc
xor
fstpl
and
out
gs
adc
and
sahf
mov
inc
pop
out
cmp
rcl
cmpsl
ds
ljmp
mov
inc
push
rcr
xchg
lock
xchg
pop
pop
icebp
fiadds
mov
or
mov
arpl
dec
adcl
jle
fwait
je
adc
arpl
fnstsw
daa
xchg
ret
bound
out
nop
sub
mov
xchg
ret
pushf
xor
sbb
into
mov
popa
pop
xchg
clc
push
stc
rcrl
dec
mov
push
sbb
sbb
mov
and
std
cltd
lds
rorb
rep
sti
fdivr
mov
cmpsl
addl
mov
mov
push
fstl
add
sub
imul
jge
aaa
notl
insb
mov
mov
mov
sbbl
das
ja
pop
hlt
clc
mov
imul
mov
inc
arpl
dec
jns
cmp
lcall
ja
xor
xor
dec
imul
stc
mov
mov
xchg
xor
push
rcll
push
mov
fwait
inc
mov
jp
cmp
lret
or
dec
pop
add
dec
xor
add
test
call
pusha
popa
repnz
jne
scas
les
scas
test
repz
xchg
outsb
aam
add
jecxz
push
xchg
mov
fdiv
sahf
ja
pop
je
shr
xor
adc
xlat
ljmp
adc
cmc
sub
sbb
cmpsb
daa
in
cmc
pusha
out
into
out
insb
in
incb
ror
mov
push
xlat
mov
fs
jbe
cmpsb
mov
xchg
rclb
scas
inc
pusha
push
or
push
push
and
imul
xlat
mov
mov
popf
mov
sbbl
lcall
hlt
or
je
sarb
and
repnz
sbb
negl
es
popf
mov
orl
test
push
mov
sbb
push
shl
aas
jbe
popa
clc
and
sub
mov
push
in
inc
imul
stc
cmp
subl
xor
int3
shlb
mov
test
xor
es
push
decb
or
xor
mov
inc
xor
mov
mov
and
mov
into
fwait
dec
mov
insl
xchg
mov
and
cltd
pop
push
mov
jle
xchg
pop
rcrb
aam
add
ror
and
stc
dec
dec
dec
pop
mov
jmp
pop
push
push
repz
inc
and
dec
jo
mov
insb
or
dec
mov
loop
add
or
rclb
pop
add
enter
dec
repnz
push
inc
jl
adc
xor
add
scas
sbb
gs
push
mov
arpl
xlat
outsl
inc
pop
leave
jge
dec
mov
xor
std
mov
cld
mov
scas
lcall
int3
shll
mov
mov
and
mov
pushf
ss
jae
jb
fwait
and
shr
xchg
jg
or
dec
cmp
daa
cmpsb
lods
dec
adc
fisubrs
sub
adc
pop
jle
mov
or
das
out
sub
icebp
outsb
addb
retw
push
cmpsb
jmp
mov
mov
in
xchg
mov
cmp
xlat
inc
pushf
data16
fwait
cmpsl
call
inc
jb
leave
repnz
shlb
test
mov
hlt
jle
push
jmp
loop
mov
or
clc
xchg
or
icebp
sbb
in
in
test
push
outsl
scas
adc
movsb
and
pop
daa
xchg
xchg
dec
xlat
gs
or
xor
pop
in
out
pop
xchg
mov
pusha
arpl
popa
outsl
insb
cmp
pavgb
test
sbb
mov
mov
in
add
xchg
ljmp
xlat
pop
addl
fsub
out
and
jl
int
pop
aad
cs
pop
xlat
cwtl
xor
mov
call
ja
in
pushf
testb
pop
mov
in
push
add
popf
sub
push
cmp
lock
push
mov
dec
push
mov
leave
mov
pop
lcall
sahf
sbb
pop
sub
mov
in
jmp
push
mov
cmp
or
or
data16
popf
outsl
dec
mov
test
inc
inc
xor
ljmp
cmp
xchg
out
lods
cld
addr16
jl
add
cmp
add
loopne
push
jmp
notl
dec
mov
out
jl
adc
inc
andl
hlt
dec
inc
mov
jg
pop
iret
insl
and
mov
mov
jno
xor
push
ds
rorb
movsb
jge
and
sub
std
and
pop
repz
push
xchg
lret
icebp
pop
inc
out
cwtl
movsl
mov
inc
push
fs
je
testl
ja
sbb
dec
or
gs
mov
repnz
adc
mov
call
cmp
test
add
cmp
and
xor
es
enter
mov
cmp
mov
fsubrl
aam
cmp
adc
cwtl
xor
push
iret
rol
cmp
jmp
lret
push
add
mov
mov
push
out
movsl
insl
fildll
cmc
movsl
dec
pop
rcrl
mov
push
in
inc
jmp
loope
rolb
arpl
clc
std
and
jne
add
jno
shrb
sbbb
sarb
xchg
scas
jecxz
enter
cmp
insb
adc
das
int
enter
hlt
xchg
mov
cmc
jecxz
adc
lods
int3
mov
xchg
nop
lock
ret
fwait
xor
mov
cmc
pop
push
lock
loop
cmc
popf
xchg
sub
sub
jns
push
loop
test
or
xor
ficompl
inc
mov
xor
and
icebp
mov
fdivrp
jle
sbb
cmpsb
dec
cld
xchg
sbb
lds
lret
daa
xchg
outsl
lock
mov
or
cld
nop
jmp
aaa
inc
push
xor
cmp
pushf
pop
pop
dec
inc
xor
add
mov
jne
push
stc
xchg
jae
outsl
cmp
adc
ljmp
ljmp
jecxz
in
push
lahf
ret
loope
push
maskmovq
adc
push
ret
stos
jb
int3
mov
stc
cmp
hlt
lock
pop
cltd
inc
leave
xchg
or
ffree
cmp
test
in
testb
daa
pop
mov
test
pop
es
fsts
mov
fiaddl
xorb
pushf
pop
imul
sbb
shll
xlat
mov
dec
push
mov
jmp
xchg
xor
adc
mov
pushl
jp
adc
and
mov
orl
mov
cmp
test
dec
rclb
fdivrl
pop
inc
ret
aam
negb
mov
movsl
fldt
xor
subb
sbb
push
into
jle
nop
push
mov
ret
mov
leave
jnp
repnz
nop
mov
divb
cmpl
mov
jle
jecxz
mov
cmc
xchg
fsubl
dec
and
repnz
out
loope
add
jecxz
arpl
aam
cmp
pop
cmp
lcall
fwait
dec
incl
outsl
sbb
xlat
gs
rolb
andl
xor
fnstsw
cmc
pop
xchg
lods
cli
push
les
dec
mov
mov
xchg
movsl
add
call
add
jl
mov
adc
hlt
xchg
sbb
xchg
daa
pop
dec
cld
or
inc
ret
lret
call
out
sub
push
push
adc
cmpsb
inc
add
inc
ret
sbb
dec
or
sbb
in
inc
nop
pop
test
inc
mov
xchg
dec
int3
push
add
sub
push
rcrb
push
mov
add
sub
fildll
adc
loopne
inc
push
push
dec
aas
push
sti
cmc
outsl
test
mov
push
xor
nop
push
jo
dec
out
jmp
aaa
lock
jnp
mov
jge
dec
fmull
xor
push
minps
push
test
gs
push
push
lods
out
and
testb
sbb
sub
jl
mov
sub
dec
ret
and
xor
incb
jl
cmp
test
lcall
sbb
dec
es
mov
ret
jns
pop
addl
into
mov
arpl
prefetch
push
fs
and
sbb
sub
pminsw
or
call
shll
add
iret
and
mov
jno
add
enter
and
mov
or
or
jl
adc
sbb
inc
or
leave
adcb
out
mov
jae
je
add
mov
popa
push
ret
in
mov
adc
js
ja
lcall
dec
sbb
sub
cmpsl
jmp
sbb
cwtl
push
dec
je
gs
sbb
fsubr
lahf
or
les
bound
xlat
stos
mov
xchg
push
xchg
pusha
movsb
das
dec
std
insb
fs
jg
jns
jge
je
jns
faddp
ret
js
fnsave
or
pop
sbb
lcall
in
jmp
les
add
cmp
out
ficompl
dec
inc
or
icebp
cli
jbe
jge
xchg
mov
xchg
scas
int3
or
and
aad
bound
inc
rorb
movsl
mov
xor
push
sub
lret
lods
rcll
shlb
push
mov
sbb
mov
mov
dec
scas
mov
dec
pop
cmp
stc
xor
outsl
into
push
mov
shl
jg
fdivrp
dec
out
fisubs
push
cmp
xchg
jne
addr16
je
mov
cmp
ret
enter
cli
hlt
stos
mov
jg
or
movsl
filds
sub
nop
xlat
jo
or
xchg
mov
fwait
sbb
sahf
jmp
mov
lods
cli
stc
or
inc
ds
insb
mov
mov
jmp
xchg
data16
data16
ss
in
push
aam
xor
aam
arpl
jmp
scas
jl
imulb
cmp
jae
adcl
xor
xchg
add
pop
jg
out
xor
in
mov
xchg
imul
mov
imulb
xchg
test
int3
xchg
loopne
out
sub
xor
cmpsl
aaa
testl
aaa
sbb
ss
imul
loop
xchg
pop
pop
jo
sbb
push
cmp
test
pop
jecxz
cmp
sbb
test
push
mov
jns
ret
pushf
inc
xchg
jmp
xor
aaa
sbb
or
enter
test
dec
or
pop
aas
sub
dec
leave
xchg
jbe
pop
pop
xor
mov
insl
add
jp
fmuls
add
mov
mov
mov
jge
add
sbb
jmp
aam
in
xor
jl
mov
fs
xor
lret
pop
xlat
sbb
dec
sbb
sbb
cmp
or
aas
mov
daa
test
mov
imul
push
scas
mov
icebp
mov
rolb
imul
std
fdiv
adc
test
add
or
xor
add
add
loop
inc
ficoml
sub
push
xor
stos
out
mov
test
and
push
xor
insb
aaa
ds
cmp
aas
std
jno
mov
xchg
xchg
cli
jnp
pop
jae
adc
rolb
dec
lcall
cmpsl
xor
xor
xor
cmp
mov
pop
inc
insl
ljmp
repnz
dec
mov
sub
push
mov
xchg
push
jg
jmp
imul
cmp
aam
call
mov
sub
xor
mov
mov
inc
cmp
adc
pusha
or
shrb
in
pop
push
dec
mov
mov
fisttpll
sbb
hlt
ficoms
push
addl
inc
in
ret
pop
mov
mov
int
adc
aas
pop
aad
jmp
cmp
sbb
rol
inc
fistl
data16
int3
enter
xchg
push
sbb
loopne
ret
sub
mov
or
fstpl
xor
xor
push
mov
dec
out
nop
pop
in
mov
mov
int3
mov
cmp
jbe
inc
cld
int3
and
out
cmp
dec
out
cmc
and
pop
adc
subl
and
mov
or
lods
mov
xor
rclb
mov
arpl
lds
clc
jb
fdivrp
out
lds
mov
js
mov
pop
fwait
or
movsb
pop
pop
cmp
mov
dec
shlb
aam
arpl
push
and
imul
mov
sbb
xchg
sahf
adc
add
dec
push
jl
cmp
and
cmp
bound
xchg
xchg
pop
jmp
xor
dec
sub
lock
dec
gs
cmc
and
loop
dec
dec
or
jge
add
movsb
cmc
mov
test
in
push
mov
pusha
mov
lret
xchg
aas
add
cmp
aad
add
dec
call
push
mov
je
test
cmp
xchg
sbb
cmp
mov
push
cli
dec
int
imul
cltd
jne
and
xchg
ss
shlb
xor
mov
outsb
insb
dec
in
idivl
jmp
jno
mov
or
int3
or
add
test
movsb
inc
cmpsb
add
shlb
dec
gs
sbb
loopne
push
sub
lods
daa
lods
sub
mov
dec
scas
jge
ljmp
leave
dec
adc
and
lea
lcall
nop
pusha
sub
rorb
ss
test
mov
movsb
imul
cld
add
cltd
xchg
packssdw
bnd
es
movsb
dec
ret
movsb
and
sub
adc
sub
add
mov
sahf
push
lods
data16
sbb
sbb
int
and
lret
dec
sbb
ss
mov
popa
push
sti
jnp
pop
jo
stc
insb
dec
bound
bswap
push
arpl
inc
movsl
sub
push
dec
mov
and
inc
or
and
adc
stos
xorb
leave
lods
cmpl
or
sbbb
xor
cmp
jecxz
fsts
scas
dec
push
stos
pop
adc
outsl
sbb
arpl
mov
and
or
dec
das
xor
xor
mov
xchg
es
push
jl
imul
into
jnp
or
and
lcall
mov
frstor
fisubrl
adc
mov
and
gs
push
and
adc
es
bound
xor
push
cld
in
adc
out
stc
clc
xchg
sbb
jo
adc
inc
pop
loopne
sbb
lea
xchg
dec
mov
push
scas
xor
dec
leave
imul
arpl
cmp
loope
and
add
mov
xchg
xor
push
adc
mov
xor
or
push
add
pop
jno
out
dec
repnz
xor
cmp
sahf
jecxz
mov
and
pop
jge
sub
lret
and
mov
xor
xchg
adc
aaa
pop
nop
iret
movsb
inc
in
or
repz
or
outsl
adc
gs
stc
out
decl
pop
fcomp
iret
jae
inc
and
push
arpl
out
lcall
lret
sbb
cltd
mov
inc
adc
dec
js
es
sub
xor
aad
fwait
int3
std
dec
add
adc
and
stc
jp
popa
rcl
hlt
bound
mov
push
mov
cld
pop
xchg
sahf
mov
dec
in
sub
mov
mov
adc
or
fstpl
lods
ret
stos
mov
inc
rorl
std
mov
data16
or
imul
mov
sbb
in
and
sbb
sub
nop
out
ljmp
std
je
fnsave
adc
adc
pop
sub
xor
mov
cltd
inc
xor
clc
fistpll
xchg
js
xor
mov
rolb
bound
or
pop
and
mov
ljmp
sub
fwait
ror
in
out
push
dec
push
popf
pop
sub
shlb
pop
push
and
cmp
aas
outsb
aam
outsb
xchg
cmp
loope
xor
sti
mov
xor
xchg
les
es
adc
movsl
test
inc
xchg
and
mov
add
frstor
inc
xor
xlat
pusha
int
fcmovnb
lea
loope
inc
dec
sub
pop
push
mov
dec
and
sub
mov
aam
inc
int
sbb
mov
rcll
mov
movsl
dec
jnp
inc
test
cmpsl
mov
je
inc
add
mov
add
lods
cld
mov
sbb
in
adc
cmp
xchg
jg
jge
adc
pop
stos
mov
pop
in
jl
into
or
popa
fistpll
push
scas
mov
mov
sub
dec
sub
fmuls
xchg
in
lods
test
jl
aas
mov
pusha
mov
sti
imul
sahf
mov
xchg
popa
rclb
mov
hlt
xor
fsts
shrl
loop
sbb
into
cwtl
repnz
sub
jno
mov
sahf
aam
mov
sub
enter
mov
cmpsb
in
fiadds
sarl
adc
adc
push
adc
mov
jg
or
xchg
cmp
inc
push
sub
mov
pusha
pop
nop
xchg
sbb
mov
push
repz
or
enter
push
rcl
jmp
mov
jecxz
fmuls
data16
lock
pop
or
movsb
lret
lret
dec
jns
shrl
rorl
leave
insl
iret
push
imul
mov
int
jno
test
sub
rorb
rol
pop
cmp
pop
outsb
mov
adc
lds
test
int3
adc
out
jb
jnp
jmp
test
ret
inc
push
roll
mov
je
inc
sub
out
arpl
mov
cmpsl
mov
pop
stos
or
inc
das
sahf
mov
mov
adc
rorl
aas
out
enter
inc
ret
dec
imul
mov
fs
cltd
test
nop
loopne
xchg
and
mov
mov
in
cmc
leave
adc
mov
pop
pop
pop
dec
cmpl
mov
pusha
xchg
mov
fildl
fdiv
jmp
or
cld
out
xchg
mov
jno
mov
adc
icebp
sub
lock
stc
mov
ret
in
xchg
jle
push
jp
xchg
push
test
movsb
fadd
andl
jo
push
xor
adc
pop
pop
pop
mov
loope
faddl
push
fildll
sarl
leave
mov
iret
mov
out
add
scas
neg
dec
ja
pop
lods
shll
mov
icebp
dec
aaa
mov
inc
das
jecxz
cmp
sub
mov
repnz
rolb
push
je
adc
mov
mov
loop
aas
jg
movsl
fsub
sub
int
or
fcoml
xorb
fwait
push
push
cltd
orb
mov
orb
imul
mov
imul
sub
clc
fldl
scas
xor
xchg
jb
push
out
loop
dec
filds
and
sbb
xor
repnz
xor
pop
jno
nop
andl
stos
nop
fisubs
fdivrl
or
out
in
dec
int
xor
outsw
sbb
xchg
cmpsl
xor
data16
mov
pop
add
add
lcall
insb
ss
jo
adc
loopne
lcall
arpl
lret
clc
push
jnp
decb
pop
add
cmp
sbbb
push
dec
cmc
xchg
sub
fsincos
push
push
in
test
lock
inc
clc
mov
inc
or
outsb
pop
out
jp
mov
sbb
push
jne
cld
xlat
push
out
fidivl
sub
fsubrl
test
fistl
lret
push
out
es
and
adc
jle
adc
jae
lods
sarl
inc
push
xor
ret
dec
gs
mov
xor
addl
shrb
mov
daa
cmp
arpl
cmp
mov
int3
dec
mov
call
push
or
dec
xchg
mov
cmc
push
cltd
flds
out
fwait
push
add
cmp
testb
add
dec
pop
or
mov
and
or
cmp
addl
xor
lods
arpl
xor
arpl
xor
push
xchg
mov
in
xor
cmp
adc
out
repnz
mov
sarb
sahf
sti
cmp
jp
shrb
pusha
cld
addr16
shl
push
cwtl
mov
scas
adc
inc
outsl
sub
popl
add
mov
pusha
cmpl
out
sahf
lret
or
aas
iret
mov
pop
lahf
stos
mov
mov
push
xor
inc
mov
xchg
push
pop
or
mov
lret
es
cld
pusha
clc
cmpsl
lds
cmp
lods
mov
dec
loope
push
enter
stos
xor
mov
pop
es
sub
inc
jmp
push
inc
add
gs
cmpsb
jp
movsl
insb
inc
int
lods
add
xor
jge
testb
nop
icebp
mov
lret
cmp
sub
int3
xor
pusha
out
mov
pop
outsb
out
jno
outsl
ss
sbb
add
adc
jl
xlat
pop
sub
pop
cmp
cld
lock
repz
mov
or
or
sbb
xchg
outsb
je
icebp
loop
sub
aad
inc
cmpsl
xchg
sub
divl
sub
mov
lds
and
pop
inc
push
stc
xchg
insb
dec
xchg
xchg
fiaddl
mov
movsl
out
dec
mov
repz
mov
int3
xchg
icebp
mov
int
movsb
cmp
test
testb
xor
or
mov
pop
addr16
dec
jg
aam
mov
or
in
js
mov
fwait
jno
mov
pop
cmpsb
inc
icebp
jbe
jne
jo
test
push
imul
test
in
adc
adc
sub
push
cld
adc
je
test
jb
call
out
rcrb
or
mov
sbb
icebp
imul
scas
push
add
and
or
sbb
loopne
pop
fbld
or
shll
jp
movupd
out
and
sub
lret
add
andb
mov
xchg
into
push
loop
iret
cmp
push
push
repnz
sbbb
and
cmp
sahf
fcmovb
dec
arpl
jo
sub
xor
jb
sbb
mov
xchg
mov
jmp
pop
and
inc
push
xchg
divl
popa
cmc
sbb
mov
out
and
pop
pop
movsb
cs
stc
shl
sub
pop
mov
mov
dec
xor
lds
fidivs
xchg
dec
mov
lods
jb
dec
jnp
push
movsl
pop
lock
les
imul
pusha
jbe
sub
mov
sub
cmp
add
jns
addl
mov
lods
mov
repz
mov
lds
icebp
xchg
loope
je
dec
icebp
xchg
addr16
jb,pn
sbb
mov
xchg
lods
mov
and
or
xchg
sbb
jne
stos
cmp
sti
out
cld
fs
dec
aad
mov
pop
xchg
sub
mov
ret
sti
jmp
stos
ds
cmpl
test
jne
insb
das
jbe
scas
xor
and
les
adc
dec
add
jo
test
push
mov
push
cmpsl
sub
or
and
jl
push
push
cld
xorb
ss
mov
test
inc
push
jp
push
or
bound
call
pusha
or
rolb
sahf
xchg
or
into
push
jecxz
daa
stc
hlt
cwtl
or
add
and
pop
or
bound
pop
lods
add
and
sbb
jg
mov
sbb
outsb
sub
adc
test
pop
inc
call
xchg
and
cmp
sub
pop
int3
jp
adc
fwait
adc
inc
aad
cmp
xor
push
cmp
add
add
int
lcall
cmp
or
sarl
mov
mov
cmp
cmpsl
lcall
popa
mov
bound
hlt
cmpsl
jae
xchg
iret
jae
jno
imul
push
lods
adc
mov
sbb
jnp
popa
sub
lcall
sysenter
mov
sub
dec
ror
out
xor
cmp
xor
and
loopne
dec
pop
push
mov
shll
push
cltd
ds
pop
mov
dec
lret
mov
xchg
mov
sub
out
int3
jns
adc
xchg
daa
frstor
loopne
fs
mov
aad
out
outsb
push
jns
sub
sahf
lret
daa
mov
dec
push
cli
sbb
ds
out
pop
mov
add
mov
lcall
movsl
inc
push
mov
and
dec
mov
dec
outsl
sbb
and
roll
mov
dec
mov
fistpll
or
shlb
xor
jns
pop
fisubrl
fsubrl
rorl
inc
in
mov
pop
imul
adc
sub
jge
testl
stos
out
loopne
stos
popa
inc
outsl
scas
dec
repz
fiadds
dec
sub
mov
inc
push
adc
push
pusha
js
fsubrp
mov
inc
gs
shr
lea
mov
cmc
lods
xlat
xor
out
in
xchg
sub
out
mov
lahf
sahf
andl
ljmp
fists
push
ret
out
aas
jp
mov
aas
aam
pusha
and
enter
push
int
jle
fsubrp
mov
mov
loope
and
sub
int
sbbl
es
push
jmp
cmp
sbb
das
nop
hlt
scas
and
jmp
push
dec
ss
jo
inc
xor
arpl
pop
mov
aas
out
rcrb
sbb
rcr
sub
movsl
mov
xchg
nop
in
arpl
test
insb
mov
cmpxchg
xor
mov
adc
fldt
int
jl
jae
or
lods
repnz
push
loope
adc
out
mov
xor
gs
repz
dec
mov
dec
in
dec
mov
in
cs
mov
dec
inc
in
xchg
mov
mov
rorl
test
sbb
cmp
mov
pop
inc
iret
mov
xorl
in
loopne
adc
or
rclb
or
add
jge
rorb
pop
call
test
cmp
sub
jbe
in
dec
push
jle
jns
mov
movsb
mov
popa
xchg
sub
push
xchg
emms
sahf
std
sbb
and
loope
mov
sub
push
sub
outsl
push
mov
fwait
cld
and
mov
and
mov
xor
pop
sbb
adc
lods
insl
jae
ljmp
mov
inc
js
outsl
inc
lret
andl
orb
dec
cmpsb
ds
in
les
inc
sbb
aam
cmp
out
push
cmp
imul
lock
lds
or
jbe
or
mov
dec
sub
out
stc
ret
xlat
jbe
lds
add
sub
mov
sti
dec
shll
gs
sbb
push
adc
add
lods
xor
aad
int
stc
pusha
decl
jmp
sbb
xchg
test
pop
rcrb
ret
add
adc
lea
test
stc
adc
jmp
outsl
pop
int
cmp
out
popa
test
push
lahf
jmp
test
adc
popa
sub
test
iret
add
mov
mov
inc
jb
jns
or
or
ljmp
clc
xchg
and
rorb
sub
mov
outsb
int3
sbb
mov
imull
nop
pop
maskmovq
fs
and
ret
sti
push
test
jg
mov
pop
sub
ficomps
mov
and
mov
and
mov
and
test
or
inc
aaa
add
dec
lock
mov
lea
out
inc
test
in
out
inc
or
or
daa
mov
out
mov
jmp
lret
ja
and
add
pushf
mov
xchg
pop
jo
sarb
sub
mov
xchg
scas
adc
jnp
mov
mov
rolb
jo
push
in
test
scas
inc
lods
mov
ret
mov
xlat
lahf
adc
insb
mov
mov
sarl
mov
xor
fnstsw
scas
pop
cltd
mov
sti
pop
stos
popa
scas
jne
fldt
push
pop
sbb
popf
daa
sbb
inc
pop
clc
dec
mov
sub
sbb
jbe
jle
sub
push
inc
stos
xchg
cmpsl
sub
cli
stos
je
loopne
imul
aas
ret
dec
sub
push
insl
lcall
add
aaa
jnp
jns
in
dec
aaa
xor
sti
int3
arpl
testb
fdivl
pop
int3
pusha
int3
fwait
ret
in
lods
mov
push
cmp
hlt
cmp
out
ret
sti
dec
xor
mov
loope
mov
pop
les
shlb
sbb
call
lahf
out
cli
sbb
loop
pop
mov
and
xor
das
fmulp
fsubr
jno
mov
dec
pop
or
and
mov
cmpsl
jno
push
jg
mov
jmp
push
xor
xchg
dec
pop
mov
hlt
into
insb
cmp
lcall
push
jmp
sbb
int
xchg
out
add
sahf
ds
xchg
jo
shll
mov
fsubp
xor
test
cld
lods
outsl
mov
cmpsb
sbb
or
dec
std
rcll
sbb
stos
adc
add
add
shlb
fistl
rclb
inc
sub
inc
jbe
pushf
adc
cmp
mov
push
mov
add
in
iret
adc
hlt
cltd
mov
jae
jp
fists
cmc
mov
jb
cmp
lret
inc
arpl
xchg
lods
lahf
in
ljmp
xchg
into
fst
les
inc
popf
pop
scas
xor
pop
fptan
fadds
jbe
enter
mov
mov
mov
les
and
in
xchg
or
dec
inc
loope
cmpb
das
clc
sbb
fmuls
fwait
mov
mov
sub
mov
mov
lret
jmp
or
push
xchg
xor
in
xlat
xchg
movsb
inc
rclb
add
into
lea
jae
or
or
cmp
pop
dec
shlb
ror
xchg
push
ret
test
or
je
aas
inc
into
lods
pop
add
push
mov
cmp
div
mov
pop
sub
sbb
push
mov
mov
cmova
aad
in
orb
fwait
lock
adc
insb
add
sub
cmp
aaa
adc
mov
push
mov
jmp
dec
mov
pop
stos
jnp
les
xchg
push
adc
mov
jl
cmp
mov
aaa
sub
ja
std
sbb
les
mov
sbb
pop
or
jno
std
push
repz
stc
add
sub
inc
jp
jno
lock
and
jl
stc
ud0
lcall
dec
lods
test
cmpsb
shlb
mov
push
fwait
push
mov
es
xchg
mov
dec
sbb
sbb
repnz
aam
mov
cmp
popl
mov
push
xchg
push
mov
movsb
dec
jnp
lods
rorb
call
aaa
xchg
mov
mov
pop
jo
bound
push
test
mov
jge
add
adc
sub
sub
xorb
xor
cmp
dec
inc
rcrb
dec
push
pushl
cs
jnp
xchg
cmovns
inc
stc
mov
adc
je
in
dec
mov
scas
sbb
sbb
mov
fucom
fwait
ljmp
mov
rol
fwait
and
sahf
jno
lods
les
icebp
shll
pop
jmp
test
push
mov
add
je
scas
and
out
loopne
pop
arpl
and
cmpsl
adc
jae
xor
jle
sbb
jne
mov
cmpsl
and
out
xchg
ljmp
ficoml
rcl
sti
adc
into
add
loopne
add
sbbl
pop
divb
xchg
push
inc
jle
xchg
sub
insl
shl
xchg
pusha
jae
shr
pop
repnz
jp
mov
xor
mov
pop
xchg
or
stc
fs
test
ljmp
popa
adc
lock
out
xchg
fcoms
mov
movsb
sbb
daa
mov
inc
add
ret
dec
xchg
and
fwait
mov
movsb
adc
shl
sbb
mov
add
and
xchg
imul
mov
mov
xor
cmpsb
mov
push
out
dec
rcll
or
enter
lret
xchg
jns,pt
ret
inc
aas
mov
sarl
or
fistl
lods
xchg
jo
push
scas
xor
pop
or
jne,pt
or
loope
cli
inc
sbb
add
cmpsb
mov
out
sbb
in
add
fimull
push
movsl
mov
mov
es
jae
push
sbb
dec
out
pop
dec
pusha
enter
cmp
in
push
enter
mov
mov
add
xor
or
xor
jecxz
pop
test
xchg
aam
jo
mov
lea
inc
ds
mov
orb
orb
xchg
sti
push
mov
mov
jge
add
xchg
hlt
cmp
std
imul
orl
jl
scas
sahf
stos
addr16
mov
mov
outsb
add
es
or
push
rcrl
dec
pusha
sbb
icebp
repz
and
and
pop
lds
xchg
mov
jg,pt
cmp
pop
xor
or
lret
cmp
or
push
dec
pop
mov
mov
mov
mov
sub
xlat
adcb
adc
push
inc
xchg
fstpt
jge
sbb
inc
pop
ds
or
pop
outsb
imul
xchg
stos
push
pop
mov
xchg
scas
in
push
pop
int3
int
xchg
scas
and
add
popa
xchg
sub
scas
imul
mov
int3
xor
imul
adc
adc
xchg
sub
test
sbb
in
sub
mov
int
bound
flds
std
std
icebp
inc
jo
arpl
add
mov
sub
aad
and
pop
enter
outsb
dec
ficomps
cmp
xchg
out
adc
jo
mov
mov
aam
lahf
fdivs
sbb
cmp
adc
je
sti
iret
icebp
mov
ret
cmpsb
stos
mov
sub
popa
and
lret
add
pop
movsl
mov
imul
stos
mov
popa
inc
addr16
out
cmp
push
push
add
mov
cmpsl
pop
pop
xor
mov
sub
fimuls
mov
dec
lds
arpl
incl
in
clc
out
xor
daa
adc
push
xchg
mov
inc
rol
and
jno
xor
xchg
add
scas
adc
dec
loope
inc
push
mov
pop
fisttpll
xor
hlt
in
push
jg
mov
pop
out
test
nop
and
into
and
mov
out
test
nop
aaa
and
and
test
cmpsb
and
inc
sbbb
push
lahf
dec
cmc
push
ljmp
mov
popf
mov
jne
dec
sbb
mov
pop
xor
add
arpl
jae
and
inc
xor
mov
cmp
cs
outsb
fistl
jo
ret
cmp
movsb
mov
lods
add
shlb
push
mov
aam
int3
into
ss
pop
andl
adc
adc
jns
in
jmp
or
cmp
subb
mov
mul
daa
cld
mov
pop
movsb
sub
ja
test
mov
xchg
cmp
aas
in
cwtl
out
jbe
mov
loope
xor
inc
push
mov
sbb
push
icebp
sub
lods
imul
lret
xchg
lods
fsts
or
adcb
xor
mov
mov
cmp
fiaddl
mov
outsl
adcb
xchg
into
aad
ds
adc
outsl
jp
add
adc
nop
add
in
mov
sahf
dec
in
push
jbe
movsb
xchg
pop
sbbb
push
dec
jns
cmp
and
adc
fistps
fs
les
add
dec
pop
pop
mov
push
movb
pusha
adc
push
pop
push
imul
cmp
fxch
adc
cwtl
ret
dec
scas
insl
mov
pop
push
lea
cmpsb
sbb
dec
push
sti
out
push
jle
pop
xor
xor
xor
add
push
jb
fxtract
push
call
add
hlt
xchg
addb
mov
inc
test
mov
ljmp
inc
das
test
test
lods
imul
inc
fwait
mov
dec
push
dec
idivb
xchg
loop
enter
clc
fbstp
outsb
pushf
and
mov
mov
mov
push
outsb
data16
xorb
push
out
and
xor
xchg
dec
ret
test
test
imul
xor
adc
loopne
push
pop
out
xor
adc
push
adc
ja
mov
xor
fstps
test
scas
enter
mov
pushf
add
adc
dec
aam
cld
add
dec
pop
cmp
jb
add
adc
mov
xchg
fisttpl
sub
pushw
out
in
movb
and
jbe
mov
push
int3
inc
sti
inc
sub
inc
add
lahf
mov
ret
add
push
pop
nop
or
jge
push
add
roll
cmp
adc
js
ja
mov
movsb
inc
push
loopne
pop
xor
xlat
pop
cmp
es
cs
cmpsl
aas
sahf
test
xor
pushf
mov
roll
add
aaa
mov
imul
mov
pushf
mov
stc
fmuls
push
in
xor
lahf
shr
mov
lret
mov
icebp
das
jecxz
ds
pop
ficoml
test
jle
xor
dec
cs
lret
lret
cwtl
mov
or
jo
mov
clc
add
pop
jmp
es
jb
sti
repz
sahf
movsl
dec
push
pop
xor
sub
es
cmp
xor
mov
ret
aad
jmp
xor
call
xchg
test
data16
out
out
add
xchg
push
xorl
fwait
test
push
lods
lret
arpl
xchg
lods
test
cli
lea
dec
test
rolb
movsl
jae
xor
into
xchg
push
sub
mov
outsb
rclb
stc
fistpl
pushf
mov
test
push
xlat
fsubr
and
jmp
xor
pusha
call
jg
mov
stc
negl
call
nop
jb
repnz
pop
aam
sahf
mov
popa
cmp
xor
in
or
jmp
inc
xlat
sbb
cmpsl
xchg
cmp
push
xorb
dec
dec
push
adc
clc
mov
leave
loop
fbstp
stos
push
pushf
shrb
jae
inc
cli
mov
xor
daa
push
mov
inc
fs
mov
jge
fistl
pop
xor
bswap
add
popf
scas
xor
jp
subl
add
movsb
int3
shlb
mov
out
xchg
ljmp
jecxz
inc
dec
push
mov
pop
adc
mov
xchg
sbb
mov
jg
iret
sar
sbb
mov
std
scas
push
add
add
sti
fistl
adc
test
cmp
test
xchg
and
shl
andb
push
scas
mov
adc
pop
pushf
pop
add
xchg
mov
and
jno
rol
xor
sub
rcr
loopne
ret
mov
scas
pop
mov
fs
adc
add
subb
inc
shrl
mov
dec
xchg
out
cmp
shrb
lock
xor
xrelease
sbb
cli
pop
insl
cmpxchg
leave
mov
ja
cmpsl
sbbb
popf
loopne
xchg
or
iret
arpl
fisubs
dec
sbb
sub
inc
lock
imul
xor
pushf
dec
cmp
test
xchg
addr16
push
stc
insb
mov
out
push
mov
in
xchg
das
in
adc
xor
in
dec
sbbb
std
mov
addr16
popa
xchg
inc
enter
fstps
cbtw
push
dec
lret
out
sub
sbb
ja
cmp
cmp
xchg
rcrb
fcmovne
pop
imul
scas
inc
lcall
or
mov
jnp
mov
add
push
je
push
push
push
out
clc
mov
in
sbb
mov
mov
sub
jecxz
xor
int3
int3
mov
test
jae
cltd
cwtl
out
popa
ds
and
xor
sbb
stc
push
dec
clc
in
and
jne
mov
fwait
lret
or
stos
lods
clc
cwtl
rcrl
mov
inc
mov
aad
inc
cmp
xor
shll
sbb
push
enter
jne
or
mov
sub
ljmp
or
js
jno
cltd
pusha
cmp
cmp
or
mov
clc
adcl
and
sbb
loopne
pop
dec
jmp
movsb
es
sub
popa
cwtl
in
popa
push
sahf
andb
jne
xchg
mov
sbb
jmp
lcall
in
cmp
xor
jge
dec
jg
mov
and
xchg
push
sub
adc
hlt
loopne
daa
in
lcall
loope
fiaddl
repnz
fdiv
mov
js
jge
inc
ss
pop
fsts
sbb
push
orl
scas
cs
mov
cmc
adc
add
jmp
sub
fcmovu
mov
je
xor
push
or
mov
repnz
add
or
sbb
cmc
jb
stos
sub
jp
push
cltd
mov
cmc
push
rcr
movsl
dec
andl
adc
cmpb
mov
dec
and
in
ljmp
inc
aas
add
ret
inc
mov
loope
push
idiv
test
jl
clc
lock
push
mov
mov
ficoms
leave
cli
jge
mov
xchg
or
mov
repnz
sbb
xchg
mov
insl
xchg
repnz
add
inc
jo
push
mov
lds
clc
push
inc
out
xchg
out
and
daa
and
std
nop
dec
ss
inc
push
out
xchg
jne
mov
mov
and
rcl
daa
in
jno
ret
sub
and
mov
or
cmp
cmp
and
mov
lret
add
leave
ret
inc
aad
mov
arpl
sub
dec
rcl
mov
test
sub
sarl
mov
fnstsw
inc
out
fs
lods
cmp
aam
mov
mov
shrl
mov
lods
push
mov
push
das
xor
les
or
and
adc
inc
adc
xchg
movsl
and
inc
cmp
jecxz
and
loop
loopne
lock
mov
out
sub
xorl
cmpb
jecxz
in
pop
jge
or
or
sub
jb,pn
test
inc
add
in
nop
inc
jl
int
movsb
mov
pop
mov
ja
jae
je
or
scas
sti
ret
notb
cmc
jecxz
loopne
mov
cmp
ja
pop
icebp
shr
scas
lods
mov
push
sbb
mov
ds
dec
popf
pop
dec
xchg
popa
scas
dec
sbb
nop
gs
pop
or
loope
cmp
jg
cmpsb
ja
jge
lcall
cmp
xchg
out
inc
and
mov
mov
ja
bound
sbb
push
enter
stos
loop
stos
dec
sbb
mov
rcl
mov
ja
push
xchg
cli
test
pusha
jg
cmc
in
mov
les
jae
cli
imul
inc
dec
adc
and
mov
xor
mov
mov
cmpsb
cmp
jae
or
inc
adc
int
flds
insw
push
dec
scas
es
sub
push
ret
in
inc
mov
mov
fcoms
xchg
mov
cmp
jmp
nop
stos
cmp
test
mov
cmpsl
push
pop
and
repnz
or
inc
std
inc
add
push
pushf
outsl
int3
subb
jnp
in
jb
jae
mov
scas
loopne
lret
xchg
icebp
or
outsb
dec
add
shrb
inc
lock
add
pushf
mov
loopne
or
jnp
call
lock
xchg
cmp
lret
add
test
sti
and
xchg
mov
insl
test
xor
enter
cli
mov
dec
pop
enter
lea
mov
ja
mov
or
fsubr
jle
jg
inc
sar
mov
bound
sbb
mov
dec
xchg
in
les
add
dec
push
jmp
sbb
xchg
cmp
imul
icebp
sbb
dec
jg
out
sar
xchg
xchg
popa
das
mov
xchg
cwtl
inc
fnstsw
dec
sub
lds
dec
aas
in
ficoml
push
xchg
out
hlt
xor
cmpsb
lcall
sub
pop
adc
cmp
adc
arpl
push
cmpsl
pop
inc
lods
scas
inc
mov
sub
jecxz
push
cmp
aam
mov
mov
pop
insl
std
loop
sbb
mov
test
faddl
add
xor
xorb
enter
xor
dec
fisttpl
cmp
bound
jle
in
xchg
scas
mov
or
pop
mov
fistpll
imul
repz
arpl
mov
pop
pop
jge
fidivl
jmp
xchg
cmpsl
sti
pop
cmp
clc
dec
cwtl
mov
mov
ret
adc
adc
pop
sbb
xchg
xor
inc
bound
lods
adc
es
outsb
lock
subb
flds
adc
ret
jno
mov
lcall
std
add
movsl
ss
sarl
jecxz
jo
jb
dec
jnp
mov
xorl
xor
xor
cmp
enter
lods
jnp
ficompl
xor
dec
adc
pavgw
cmp
ljmp
nop
adc
xor
popw
cmp
rcll
xor
ja
rcl
mov
fnstenv
xlat
stos
rcll
idivb
pop
or
xchg
xorl
cli
push
or
pop
incb
out
shll
ret
lret
cmpb
mov
adcb
push
nop
stos
mov
dec
pusha
pusha
xchg
sub
pop
add
xor
lcall
sbb
fwait
inc
insb
shl
pushf
aaa
adc
xor
push
lods
mov
ljmp
adc
ds
movsb
outsl
sbb
lcall
insl
out
fwait
add
pop
mov
push
shll
xchg
leave
sub
aad
scas
jbe
mov
inc
and
jae
or
jne
ds
in
fistps
xor
scas
call
xor
sbb
mov
jg
movsl
push
stc
popf
test
data16
push
cmpsb
stos
fnsave
xchg
sub
lods
repnz
outsl
mov
or
push
fisttps
or
clc
adc
cli
enter
outsb
dec
sarb
daa
out
push
mov
clc
sub
xlat
adc
lods
sub
xor
add
sarl
es
js
or
lret
notl
int3
xchg
ret
jmp
lds
jnp
jns
adc
jno
imul
loope
mov
aam
adc
xchg
pop
mov
shll
pop
jl
add
lods
jo
xchg
mov
sbb
cmp
jecxz
shll
loope
pop
jmp
outsl
sbb
dec
xlat
adc
push
dec
mov
das
in
fisttpll
sbb
add
jo
cmp
mov
xchg
ficoml
xchg
dec
pop
cltd
inc
inc
into
cmpsl
push
adc
mov
dec
mov
xor
cmp
xchg
sbb
call
jne
and
aam
mov
rolb
xor
repnz
adc
arpl
push
insb
xor
nop
imul
outsl
cmc
mov
mov
xchg
pusha
mov
xor
push
ret
jmp
rol
push
pop
dec
aas
mov
pop
fisttpll
jno
daa
gs
jecxz
push
sbb
loopne
mov
pop
je
aaa
push
dec
int
xor
andb
jae
bnd
dec
jle
das
dec
inc
xchg
push
pop
jo
std
add
add
mov
movb
incb
jno
and
aam
jle
inc
push
and
test
icebp
adc
inc
gs
test
leave
mov
fwait
loopne
lcall
sub
mov
lahf
scas
pop
fistpll
int3
mov
pushf
popa
std
mov
push
fcomi
movsl
popa
xchg
jp
add
inc
push
pusha
dec
in
pop
xchg
dec
cli
out
xor
xor
call
jnp
ds
jecxz
mov
mov
lea
cwtl
pop
std
imul
push
xchg
rcll
cmp
mov
sbb
call
mov
mov
xor
mov
xchg
dec
mov
dec
stos
mov
xorb
aad
scas
xor
cmp
cmp
mov
mov
test
adc
jge
pop
aaa
into
lock
into
fwait
scas
std
jmp
scas
ret
dec
xor
jae
mov
ljmp
fists
data16
inc
rclb
mov
cmpsb
add
lcall
aad
fdivr
out
pop
test
jl
bswap
rclb
adc
pop
jo
and
jp
in
in
addr16
dec
adc
push
ja
das
adc
negl
xchg
fstl
adc
iret
dec
xchg
sbb
add
jns
or
dec
leave
pop
sarl
fwait
jg
mull
jnp
cmp
cmp
inc
out
xchg
stc
xchg
jno
pushf
pop
lods
dec
cmp
mov
shlb
adc
cmp
xchg
call
mov
pop
pop
inc
pushf
jmp
push
daa
mov
or
mov
mov
fsubr
pop
loop
xchg
lods
push
sub
imul
push
dec
lret
jp
pushf
popa
jo
xor
sub
pop
sub
mov
xchg
xchg
lock
in
fstpt
cmp
jmp
aad
stos
cmp
jne
xor
xchg
sub
popa
push
in
jecxz
pop
fs
popa
lods
push
and
out
stos
mov
stc
repz
add
sbb
in
or
sbb
int3
push
xchg
fiadds
fcmovnbe
mov
mov
jbe
dec
jnp
filds
mov
mov
sub
xor
push
mov
test
or
push
cmpsb
mov
popa
std
popa
push
jo
sub
cs
cmp
adc
mov
popf
pop
enter
movsl
inc
out
cld
mov
cmp
pushf
std
ficomps
mov
lea
call
repz
pop
insb
ja
dec
dec
shrl
imul
mov
push
add
hlt
mov
shlb
nop
imul
fmul
nop
mov
cld
fistl
and
xchg
pop
xchg
icebp
xchg
loope
pop
dec
adcl
jmp
mov
cmp
je
sub
aam
loop
cmc
inc
jns
pop
addr16
test
out
ljmp
sbb
cmp
or
mov
mov
rcrb
xor
xor
jle
mov
adc
cmp
and
or
or
pop
mov
out
push
jnp
or
cmc
call
pop
jno
aad
movsl
rclb
mov
dec
cmp
loopne
xor
jb
jne
cmp
sahf
sub
cli
mov
pop
jae
icebp
pop
cmpsb
push
and
js
rcrl
sub
imul
out
mov
sar
out
dec
sub
jb
mov
popa
repz
cmc
jno
or
stos
cwtl
sub
pop
push
xchg
push
daa
inc
int
dec
and
push
out
rorl
rcl
outsb
mov
test
cmp
inc
shlb
inc
fs
lds
xor
sbb
cmp
loope
in
insb
in
inc
in
pop
in
and
inc
int3
pop
bound
dec
pop
add
dec
jns
add
popa
cmp
div
pop
mov
jns
jb
stc
and
xchg
xchg
jbe
push
xor
fs
cli
dec
arpl
xchg
dec
loope
jmp
rolb
lods
inc
movsb
mov
adc
scas
xor
mov
fiadds
rol
mov
push
lret
mov
arpl
cs
pop
loopne
cmpsl
add
dec
mov
cli
pop
jno
xchg
or
fsubrs
repnz
jno
cmp
sbb
sti
push
dec
shrb
mov
lea
or
xchg
mulb
lea
dec
out
js
mov
lds
imul
jo,pn
adcl
cs
cs
jns
adc
imul
jns
lcall
push
pop
or
sub
mov
sub
inc
mov
cmp
xchg
jge
mov
test
or
sub
pop
cmp
jg
jecxz
test
pop
and
push
adc
inc
iret
and
sub
ljmp
or
push
xor
test
mov
js
mov
loopne
ds
out
mov
aam
inc
add
icebp
popa
xchg
mov
add
cmp
ret
repnz
add
je
jg
add
inc
andb
ljmp
jp
decl
imul
je
cmp
in
sub
or
iret
imul
ds
cmpsb
or
jmp
lock
add
in
pop
shll
scas
cmp
sarb
fdiv
andl
mov
push
testb
repnz
mov
mov
cmpsb
es
add
paddusw
loop
insl
adcb
push
lret
mov
in
jne
xchg
push
mov
add
lahf
icebp
ja
js
fdivrs
ja
dec
inc
adc
and
movsl
fsub
lret
adc
and
sub
adc
adc
leave
mov
lds
dec
pop
or
push
xchg
or
orl
jne,pn
std
push
imul
pusha
jae
nop
popa
sub
loope
adc
negb
in
lods
fstl
adc
adc
ret
dec
add
or
xchg
xchg
into
sbb
cld
cmp
test
jge
sub
inc
stc
cmp
imul
xor
mov
mov
bound
es
scas
dec
aad
jnp
loopne
cltd
stos
mov
outsb
or
push
mov
aas
xor
xlat
stos
cld
test
push
and
adc
sti
jg
sub
fldenv
push
mov
jbe
push
out
xchg
out
pusha
cwtl
cmc
fcompl
push
ds
xor
pop
aad
jmp
or
push
mov
scas
pop
jno
outsl
lds
jg
lret
js
mov
mov
fnsave
sub
test
mov
inc
pop
mov
inc
repnz
dec
ja
sbb
mov
in
pop
cs
jmp
adc
movaps
xor
mov
jns
cmpsl
mov
aaa
cmp
outsb
call
inc
loopne
lret
mov
mov
dec
std
lahf
xor
inc
mov
jmp
std
and
movl
sub
in
mov
leave
adc
jo
push
cmc
test
aad
test
scas
or
inc
add
mov
pop
add
adc
xchg
or
int3
jl
inc
xor
mov
pop
cmpsl
icebp
jg
scas
jae
fsubr
scas
and
jp
std
pop
jo
daa
and
sbb
jg
fimuls
cmp
pop
mov
push
mov
clc
daa
xor
xchg
shrb
iret
fwait
mov
jl
or
or
adc
and
sbb
inc
in
mov
and
out
outsb
cmp
repnz
fmulp
ja
push
inc
dec
into
repz
xchg
and
nop
mov
in
stc
lods
movlps
or
cmp
repz
xchg
js
jg
pop
enter
cmc
ret
mov
sahf
fimull
iret
fisubrl
mov
mov
fwait
jno
jnp
push
mov
aaa
adc
imull
mov
mov
dec
scas
out
aad
add
pushf
cmp
or
sbb
aad
inc
cmp
incl
or
jg
addr16
outsl
fwait
nop
dec
cmp
xchg
xchg
push
dec
or
xchg
adc
aam
ret
mov
gs
jns
inc
sub
mov
sub
loopne
stc
or
mov
jae
lret
cld
ret
mov
mov
mov
or
mov
xorb
mov
sub
push
out
pop
mov
mov
inc
sub
inc
lcall
cmp
cmp
jmp
lods
cwtl
jo
jns
inc
jno
cmp
inc
outsb
dec
shrb
or
pop
xchg
out
test
enter
push
sub
and
pusha
lret
pop
mov
sbb
push
xchg
xor
or
mov
dec
addr16
out
movsb
cmp
into
xor
or
pop
push
inc
popa
fisubl
loopne
sbb
aam
loopne
inc
and
cmpsb
mov
sti
xchg
add
cmc
and
jle
pop
stos
push
cmp
sahf
mov
int
out
movsl
scas
mov
add
loop
or
divl
outsb
cmp
aam
cmp
sub
bound
mov
pushf
jmp
mov
sub
and
les
addr16
imul
and
xor
ret
movl
pop
fnstcw
xchg
loop
xchg
ja
mov
adc
mov
push
mov
sub
repz
cmpsb
cld
stc
testl
mov
les
mov
or
in
lods
pop
jnp,pn
stos
inc
divb
lahf
and
push
aam
push
push
inc
aas
add
jnp
jbe
sub
sbb
adc
jno
mov
xor
dec
sub
aam
push
ss
or
push
push
jne
js
out
cmp
mov
push
dec
scas
jbe
scas
sbb
imull
cld
cmp
iret
fisttpll
subl
pop
ja
dec
mov
int
call
arpl
or
sbb
jl
btr
mov
push
stc
in
lock
outsb
out
fisubrs
mov
leave
push
leave
pop
mov
mov
pop
fs
bound
dec
leave
pop
xchg
and
add
stos
xorb
inc
shll
call
pop
mov
ja
mov
jb
mov
mov
inc
push
pop
test
fnstcw
jg
sbb
mov
push
movsb
pop
push
jmp
adc
push
cli
jle
jne
pop
mov
aas
pushf
outsb
femms
pop
iret
test
pushf
pop
notl
out
add
in
data16
dec
inc
mov
mov
fsub
cli
jle
and
loop
sub
mov
in
sti
aas
aaa
push
mov
sbb
pushf
inc
xlat
and
cmp
nop
stc
sbb
xchg
mov
sub
cmp
jl
add
in
lea
cmpb
cld
fidivs
shl
jb
jbe
xchg
or
pop
pop
ljmp
xchg
pusha
out
push
sub
push
aas
aas
repz
xor
and
inc
push
mov
fwait
cmp
and
cmpsl
jns
or
add
xlat
imul
js
dec
adc
push
adc
roll
xor
and
inc
jne
ret
ret
dec
cwtl
es
sub
sbb
pop
push
add
push
fsubr
orb
jb
jbe
pop
push
push
into
jmp
test
loopne
xchg
mov
pop
xchg
ret
mov
loopne
mov
xor
shll
xchg
data16
dec
stos
lahf
movb
sub
mov
aaa
mov
xlat
lret
insb
cmpsb
mov
mov
pop
or
adc
sarl
xchg
repz
inc
scas
in
add
je
or
popa
imul
in
or
pop
movsl
daa
sbb
add
inc
es
pop
mov
ljmp
movsl
ror
repnz
xor
pop
xor
mov
adc
xorl
popf
jno
mov
ret
and
andb
mov
push
scas
dec
mov
push
add
movsl
lret
jns
ja
pop
fwait
mov
bound
scas
stos
daa
into
lret
imul
out
or
int
mov
mov
push
outsl
xchg
mov
push
fxch
and
push
cmp
lret
pop
xor
push
int
mov
arpl
data16
in
roll
ds
add
in
negb
cmpsb
jmp
xchg
pushf
es
bound
movsb
mov
xor
insb
test
pop
adc
int3
xchg
mov
testb
and
sbb
inc
rorl
xor
sub
pop
jmp
xchg
pop
sbbb
cmp
mov
add
xor
push
ficomps
push
je
in
rcr
adc
out
sub
sarl
insl
outsl
popf
mov
inc
clc
rorb
or
adc
hlt
lea
xchg
int
mov
dec
jns
icebp
lahf
cmp
loopne
js
ja
jo
aaa
or
fcomp
add
jge
rcrb
push
push
icebp
cld
loop
cmc
stc
pusha
clc
push
mov
xchg
mov
push
imul
pop
adc
jo
jmp
movsb
adc
inc
adc
js
push
jno
sti
sub
add
push
iret
loope
jmp
test
jmp
dec
xchg
test
mov
out
lret
aas
dec
hlt
loop
mov
adc
mov
mov
jno
dec
inc
mov
mov
ss
push
jle
jb
or
fwait
mov
and
sarb
fiadds
push
fldt
ljmp
sbb
pop
push
int3
orb
xchg
cmp
inc
pushf
lds
incl
rcr
aaa
es
dec
fs
imul
fidivl
aad
pop
add
sub
inc
sbb
mov
xor
pop
adc
cmp
stos
inc
and
and
sbb
ja
in
es
lcall
imul
xchg
cltd
shrl
xchg
std
xor
loop
ja
dec
imul
out
mov
test
aad
pusha
mov
add
les
pop
push
scas
sahf
sub
jge
add
arpl
mov
adc
addb
or
cs
pop
lock
ret
mov
mov
mov
sub
sub
sbb
sub
aaa
js
test
push
es
mov
mulb
sti
jb
repnz
icebp
sbb
dec
dec
fnstcw
add
xchg
inc
test
xor
insb
test
dec
dec
mov
nop
or
mov
mov
jmp
inc
nop
or
outsb
lods
jns
daa
xor
ljmp
mov
pop
dec
mov
xor
mov
test
inc
xchg
adc
cmp
shr
in
push
mov
add
jmp
lahf
outsb
bound
mov
leave
jp
lods
popa
test
out
pop
cltd
imul
in
and
push
out
jp
mov
cmpsl
jns
andl
sub
shll
divl
xlat
cld
add
or
add
jne
out
mov
mov
dec
pop
rolb
addr16
push
addb
mov
insl
cwtl
test
lods
jb
inc
xchg
repz
add
shl
mov
inc
jp
adc
push
mov
clc
mov
popf
ret
and
cmp
adc
pause
and
pushf
xchg
clc
mov
fwait
inc
mov
pusha
push
and
pop
add
add
lock
sahf
xor
adc
or
orl
insb
pop
push
outsb
mov
inc
inc
fbstp
xchg
sbb
push
add
std
push
and
testl
js
and
push
push
inc
mov
cmc
adc
jb
inc
hlt
cltd
ret
mov
bound
cmpsl
sub
push
pushf
mov
or
test
dec
lods
inc
adc
xchg
vphaddwd
aas
dec
out
pop
and
xchg
aaa
xchg
xorl
sahf
stos
xor
dec
js
mov
popf
les
scas
or
inc
clc
data16
ret
sbb
rol
or
fldl2t
pusha
sbb
ret
pop
dec
push
or
sti
lea
int
daa
mov
es
cmpb
cmc
outsb
adc
or
sbb
sub
jg
js
jo
imul
pushf
lret
add
fisttps
in
into
mov
subb
pop
sbb
inc
jae
sub
aaa
int
mov
xchg
jb
cmpsb
enter
cmp
or
pop
xchg
pop
mov
pop
inc
shlb
shll
sbb
arpl
and
xor
sbb
sbb
jne
pop
adc
xor
clc
fisubrl
mov
data16
fs
push
mov
or
jmp
es
stc
or
xchg
pop
mov
ljmp
sbb
adc
icebp
dec
mov
pusha
popa
sbbb
mov
data16
jae
outsl
jle
je
test
pusha
jecxz
stc
in
insl
sub
and
scas
sbb
fnstenv
mov
sbb
gs
fs
mov
fadds
dec
mov
cmp
jne
xchg
adc
cmp
mov
test
push
inc
dec
int3
adc
and
or
rep
mov
or
add
cmp
mov
xchg
out
dec
std
orl
xor
push
jo
out
jne
pop
mov
push
jb
js
fisubrl
aaa
mov
cmpsb
xchg
xchg
aas
dec
and
aad
jmp
or
out
sbb
es
xchg
xor
mov
sahf
push
sub
mov
xchg
sub
and
mov
mov
push
and
xorb
rol
lret
jle
cmp
es
fistpl
fdivrl
sbb
sbb
cmp
flds
call
aas
and
loope
or
xchg
stc
stos
mov
pop
jae
mov
jle
lahf
cmp
mov
xchg
out
scas
rcll
xlat
std
mov
stos
push
inc
ss
aas
lea
or
imul
mov
popf
add
pop
sbb
jns
test
shrl
dec
imul
xchg
fdivrl
jl
sub
pusha
out
popf
jae
das
imul
add
mov
and
shlb
xor
fwait
nop
cmp
rorb
stos
out
add
stos
test
push
mov
add
inc
sbb
std
mov
mov
bound
add
sbb
ljmp
mov
add
jbe
insl
pop
outsb
adc
nop
or
mov
mov
cmp
out
jae
sub
mov
jp
paddw
lods
add
fidivl
aam
and
fs
inc
subl
lds
rcrb
in
dec
icebp
stos
xchg
loope
hlt
push
push
int3
adc
xchg
mov
bound
cli
test
stos
dec
std
test
nop
push
mov
insb
push
mov
sub
popf
jp
psubusb
out
cmp
jae
ds
and
dec
jnp
icebp
imul
in
pop
mov
mov
mov
fucomi
xlat
out
shrb
sub
loop
int3
sub
adc
clc
mov
mov
loopne
imul
shl
inc
sti
jecxz
test
imul
pushf
push
or
mov
in
inc
jns
loopne
xchg
data16
xchg
adc
subps
push
mov
lahf
les
int
mov
movsb
sub
into
push
aas
sahf
je
repnz
aas
mov
sub
xchg
or
add
xchg
cmpsl
mov
idiv
daa
pop
sub
dec
sub
push
into
icebp
xor
comiss
xchg
push
and
and
cvtps2pi
xchg
test
das
push
ljmp
into
cld
les
fcompl
scas
xchg
mov
and
stos
dec
sub
movsb
mov
notl
mov
stos
shlb
jmp
adc
cmp
imul
xlat
dec
lock
sbb
jmp
pop
or
and
xchg
xor
arpl
cwtl
aam
pop
adcb
xchg
push
pop
cmp
adc
addr16
mov
xchg
in
or
shll
clc
test
push
fists
popf
insl
pusha
and
mov
fbld
push
and
addr16
rol
ffreep
sbb
mov
incl
jo
jg
add
sahf
push
xor
dec
test
pop
in
inc
sub
mov
mov
sbb
xchg
scas
or
dec
imul
ret
push
mov
and
call
jnp
fiadds
xor
ljmp
idiv
sub
mov
in
cmp
cld
add
je
stos
add
pop
neg
or
jmp
push
mov
jb
mov
xor
xor
fsub
lret
mov
lret
xchg
or
or
test
mov
mov
inc
adc
pop
test
mov
add
into
jp
int
and
shrl
out
inc
mov
xor
lds
out
into
dec
pop
cld
mov
xor
or
pop
jmp
push
outsb
mov
pop
add
dec
inc
imul
lock
mov
add
popa
in
js
out
mov
repnz
sti
pop
push
std
dec
dec
lahf
lret
pop
xor
stc
jecxz
loope
test
and
xchg
mov
cmp
orl
jecxz
stc
add
pop
pop
xorb
adc
mov
aaa
or
pop
lahf
sarl
insb
cmpsl
jae
gs
adc
and
fdivrl
jnp
cmp
adc
aam
popa
inc
sub
mov
std
repz
rclb
leave
std
sahf
and
loop
adc
xchg
xlat
jp
and
in
pop
shr
jne
sbb
test
jle
dec
pop
xor
stos
xor
jmp
jle
adcb
xor
jmp
dec
pop
sbb
hlt
sbb
lock
or
pop
popa
stc
adc
jmp
in
mov
repz
jge
push
jne
movb
rcrb
mov
sub
jb
and
pushf
mov
imul
insb
jns
inc
mov
bound
aaa
push
clc
int3
adc
mov
int3
dec
int
imul
imul
sbb
jge
icebp
pop
mov
sbb
in
ljmp
ja
aam
popa
jno
mov
or
mov
outsb
loop
mov
push
icebp
add
mov
cltd
push
js
test
fs
ss
pushf
sbb
and
into
and
pop
inc
adc
stc
lods
xor
mov
in
mov
repz
bound
outsb
adc
xchg
sbb
push
ja
inc
mov
test
sub
fimuls
inc
fistpl
push
pop
das
sbb
sub
pop
roll
lret
dec
pop
sub
out
pop
xchg
sahf
clc
jnp
xor
cmpsl
adc
cmc
orl
jns
scas
in
xor
cmc
jmp
xchg
rolb
add
dec
mov
mov
or
add
inc
sahf
sub
setno
inc
mov
push
loopne
pusha
mov
cmpl
sub
aaa
push
aad
sbb
sub
imul
adc
mov
dec
mov
jl
dec
mov
sarl
and
or
and
adc
inc
fsub
xchg
pop
pop
inc
adc
xchg
xchg
in
mov
mov
addr16
add
fisttpl
push
push
sbbl
inc
xor
sub
rolb
movsl
pop
out
ljmp
out
pushf
popf
xor
idivl
stos
or
cmp
jno
sbb
gs
pusha
bound
mov
repnz
push
lods
mov
push
mov
pop
dec
or
aas
inc
dec
mov
test
sbb
jp
aas
aam
mov
pop
or
fsubrs
push
les
and
lods
insl
insl
mov
or
add
pop
push
movsl
pop
test
xchg
out
mov
jl
cmpsl
stos
sub
test
aas
in
jmp
imul
lcall
or
dec
add
lea
mov
aad
mov
repz
jmp
sbb
inc
shrb
rcrb
fnstcw
shll
fcoms
mov
in
arpl
xlat
or
dec
push
cmp
dec
test
insl
scas
ffreep
fmuls
push
js
push
pusha
es
mov
cld
sub
pop
neg
add
int
or
inc
lahf
push
mov
push
insl
lcall
inc
push
lcall
mov
sub
push
jmp
add
lret
jne
cmp
xchg
rcll
dec
jge
pop
jmp
sub
loope
scas
ja
sar
and
inc
ud2
cmpl
inc
lret
jp
shll
mov
dec
dec
pop
cmpsl
mov
xchg
jns
test
mov
mov
leave
outsb
pop
cmp
mov
es
aam
jecxz
repnz
call
jmp
adc
lcall
int3
cmp
scas
fisttpl
bound
sahf
into
mov
pop
mov
jb
hlt
testb
xchg
es
cltd
jne
sbb
mov
jno
out
leave
sbb
mov
push
sbb
or
pop
cmp
cmp
cmp
in
sub
pushf
jmp
aaa
fdivl
mov
pushf
inc
pop
adc
repz
mov
add
and
jns
mov
mov
loopne,pn
ret
aam
cmp
cmpsb
or
enter
lds
and
mov
out
and
fwait
dec
xchg
sub
aam
sbb
pushf
fsubr
mov
mov
mov
sbb
mov
jbe
push
xchg
mov
gs
bound
mov
add
adc
xchg
mov
mov
out
lods
cwtl
xchg
xchg
pushf
inc
inc
mov
xor
pop
mov
or
add
xor
sti
mov
imul
scas
jne
xor
pop
push
mov
mov
push
xchg
xor
cmc
jno
mov
ret
pop
add
stos
mov
and
std
cmp
iret
add
pusha
cmp
scas
mov
xor
push
je
call
call
or
jg
push
out
into
mov
xchg
gs
movl
popf
pop
shll
adc
fsub
mov
sbb
mov
and
int
or
mov
mov
xchg
lret
js
insl
int3
xor
mov
mov
jecxz
fiaddl
mov
xor
inc
leave
mov
leave
lea
scas
data16
gs
cs
test
xlat
aas
dec
sub
mov
in
adc
push
adc
cmp
loop
cs
pop
dec
nop
xlat
insl
adc
jne
jne
int
ret
jle
pop
rclb
jecxz
scas
stc
inc
and
jne
das
fsub
das
push
aam
add
cmp
adc
mov
in
js
add
mov
sbb
mov
dec
test
mov
lea
sub
shl
frstor
push
or
mov
loope
inc
pop
pop
sub
neg
iret
insl
ja
mul
ja
mov
fs
call
lods
arpl
xchg
push
push
ret
or
movaps
gs
xchg
lock
or
loope
outsl
into
es
stos
sub
stos
iret
in
rep
inc
sbb
cmp
pop
or
push
enter
xchg
sahf
sbb
aas
push
or
test
idivl
mov
xor
jl
sub
rolb
push
cwtl
bound
mov
dec
in
pop
loopne
enter
inc
hlt
pusha
mov
adc
pop
pushf
dec
sub
xor
scas
pop
push
or
stos
push
dec
mov
jnp
xor
jl
jo
xor
jbe
xchg
jmp
notb
ret
daa
test
rclb
jns
insb
cmp
pushf
sbb
cmp
mov
cmp
div
mov
sub
jns
shl
pop
push
jnp
into
and
test
ljmp
leave
insb
les
add
aaa
mov
ljmp
xor
outsb
icebp
int3
decl
nop
mov
aas
ss
add
pop
inc
out
and
ljmp
xchg
or
cli
dec
cmpsb
imulb
add
mov
mov
notb
sub
pop
xchg
in
xchg
cmp
push
jns
mov
int
test
and
pop
rolb
pop
std
mov
loopne
or
jp
or
push
dec
xchg
lret
movsl
iret
xor
inc
idivl
dec
dec
fimull
stos
dec
add
lret
push
iret
add
loop
inc
push
les
inc
ret
in
add
leave
cmc
mov
mov
adc
out
cltd
out
cs
scas
scas
rcrb
or
insl
and
lret
mov
inc
mov
add
dec
dec
insl
pop
pop
mov
cmp
loope
or
cmp
pop
xchg
mov
add
mov
jne
lahf
inc
xlat
push
adc
icebp
movsl
xor
mov
test
xchg
sbb
imul
iret
push
insb
push
push
adc
and
jmp
and
sti
stos
ss
shll
sti
shl
jge
ja
sub
mulb
jle
out
mov
test
mov
popa
fcoms
iret
push
cmp
inc
lret
or
sbb
fcompl
out
cmp
inc
test
inc
adc
enter
xchg
dec
out
pusha
aaa
sbb
xchg
dec
in
pop
sbb
jns
setns
xchg
pop
popa
ds
sub
inc
aas
lock
shrl
loop
and
mov
push
pop
dec
cmp
add
mov
stc
mov
loope
ljmp
mov
jns
imul
push
adc
mov
xor
leave
dec
mov
clc
test
cmpsb
imul
rcl
mov
shlb
fisubrl
loopne
mov
scas
inc
pop
pop
outsl
push
nop
out
xchg
push
mov
or
jne
in
cmp
and
mov
or
adc
iret
add
daa
cmp
data16
mov
sbb
cmc
and
cli
aad
mov
and
cmp
bound
in
das
push
clc
test
sub
repz
dec
dec
dec
inc
filds
scas
mov
add
xor
cmp
andl
sub
cli
sahf
hlt
out
jg
jl
hlt
xor
mov
xor
fstpl
data16
sbb
push
mov
hlt
xor
push
pushf
ret
mov
fidivs
mov
cmp
nop
push
sub
xor
push
sub
dec
sub
mov
loop
cld
fbld
sub
mov
or
ja
pop
aas
mov
sub
jecxz
imul
adc
sbb
in
aas
mov
pop
dec
or
cmp
pop
test
sub
std
mov
push
or
jl
stos
mov
jae
gs
mov
dec
andb
dec
xor
aad
ficomps
subl
std
mov
dec
loop
and
call
insb
push
dec
outsb
in
cltd
or
add
stos
and
inc
mov
add
fidivl
lahf
icebp
xor
icebp
sti
pushf
mov
arpl
pop
inc
adc
das
jb
inc
adc
data16
mov
or
sahf
add
idivb
jns
mov
fstpl
orb
pop
loopne
push
jne
xchg
xor
shl
sub
popa
les
in
pop
push
insl
std
xchg
mov
dec
outsb
or
filds
sub
out
test
in
imul
add
test
or
sbb
movb
xor
push
stos
ficomps
lcall
mov
mov
lahf
pop
cmpsl
push
fcomps
movsb
jecxz
cwtl
or
cwtl
push
push
shll
pop
dec
sbb
or
mov
dec
inc
cmpb
mov
int
push
push
test
xchg
rolb
pop
push
push
ds
and
pop
lret
and
push
xchg
jb
pop
stos
mov
push
hlt
inc
test
pop
pop
rolb
test
pop
mov
hlt
ret
stc
pop
test
cmp
and
jb
jne
lock
in
mov
mov
fbstp
nop
or
ljmp
test
or
sbb
ljmp
insb
popf
shll
rcll
and
adc
dec
cld
pop
popfw
jle
leave
in
sti
icebp
and
sub
cmc
and
cmp
xor
in
jo
adc
int
ljmp
push
mov
imull
jle
fdivrs
fiadds
popa
jo
mov
popf
aad
push
sti
dec
inc
dec
add
punpckhdq
push
enter
sub
es
lret
pusha
es
int
sbb
sub
pushf
adc
cltd
push
bound
enter
addb
int
mov
or
or
cbtw
xchg
sbb
rol
mov
mov
sub
mov
loop
lock
mov
or
cwtl
cmp
mov
punpckhbw
arpl
mov
out
stos
xchg
mov
stos
test
mov
jne
dec
xor
and
mov
loope
or
movb
inc
popf
xchg
mov
add
scas
push
mov
mov
pop
xor
xchg
lahf
lret
cmp
outsl
and
arpl
std
push
xchg
inc
sbb
and
sub
test
rclb
int3
mov
lret
and
mov
cmp
pop
mov
inc
push
sbb
lods
stos
enter
int
sbb
ret
daa
in
jne
cmp
arpl
or
int3
scas
adc
icebp
ja
shl
jae
xor
add
sub
ss
mov
iret
jl
ja
or
and
push
jo
movsb
or
test
xor
xor
dec
inc
fs
ret
movsb
push
mov
je
clc
into
cs
push
cmp
push
aam
mov
pop
out
stos
imul
pop
outsl
enter
sub
ljmp
xlat
inc
xchg
sahf
leave
mov
or
lahf
sub
or
mul
jle
mov
aam
cmp
jle
test
stos
cmp
mov
or
mov
mov
dec
jae
inc
enter
adc
ja
sarl
pop
lcall
xchg
xor
rcl
test
jle
add
xchg
in
es
xor
adcb
pop
les
xor
xchg
popf
out
adc
sti
lock
pushf
test
mov
push
push
fmull
pushf
loop
xor
lret
add
and
movsl
jae
cmpsl
xchg
ss
ljmp
cmc
cwtl
popa
cmp
leave
jmp
jecxz
sahf
mov
sub
loop
addb
lcall
in
add
cmp
inc
and
xchg
or
decl
adc
pop
aam
cmpsl
mov
gs
aad
movsl
cmpsl
fcoml
mov
xor
xchg
mov
mov
je
fdivr
test
xor
xchg
movsb
lahf
sahf
pop
jecxz
push
jmp
xchg
cmp
lahf
out
loopne
ljmp
lcall
lcall
ljmp
push
mov
int
ret
push
jo
outsb
stos
aaa
cmpsl
fs
sub
and
push
hlt
fadd
xor
sub
inc
sbbb
setg
push
daa
sbb
push
lret
cmp
outsb
cmp
mov
lret
cmpsb
out
mov
shrb
call
dec
std
cld
test
out
sub
inc
call
inc
lods
mov
int3
cmp
aad
inc
icebp
loope
pop
shlb
cmp
xchg
jb,pt
pop
sub
out
dec
mov
inc
push
lcall
rolb
daa
pop
mov
push
mov
cmp
and
cld
movsl
sub
jbe
popf
movaps
in
jno
adc
or
or
add
lea
sahf
push
insl
aam
pop
xlat
push
shlb
sub
xchg
cmpsl
push
pop
or
sti
mov
xchg
and
cs
sub
push
repz
sub
pop
aam
dec
and
nop
ss
scas
and
dec
loop
xor
add
jns
cmpsl
pop
movsl
push
push
or
pop
mov
mov
ss
leave
bound
jbe
cmpsb
xchg
fucom
add
data16
inc
sbb
mov
sbb
dec
jb
jge
xchg
mov
lods
int
test
ret
mov
nop
cmpsl
fidivs
les
es
xchg
xor
cmp
loope
sbb
in
push
pop
rorl
pop
adcl
lahf
fidivl
fwait
je
fldl
adc
outsb
or
insl
test
data16
xorb
xlat
inc
add
nop
insb
mov
adcb
add
out
in
dec
sub
push
fwait
mov
push
into
fs
inc
push
push
pushf
enter
cmp
movsb
mov
outsl
out
dec
xchg
dec
jno
pop
cmp
scas
fistpl
mov
arpl
sbbl
cmp
push
jl
ss
adc
into
test
inc
aam
mov
in
sbb
cmp
cmp
or
push
or
and
loopne
test
sbb
mov
lock
adc
mov
cmp
and
push
out
aaa
pop
mov
imul
xor
sbb
sbb
mov
in
jb
call
hlt
mov
insl
addr16
pop
fwait
jecxz
out
test
popf
outsl
inc
mov
pop
cmpsl
sbb
enter
jno
scas
int
xor
std
imull
add
and
mov
mov
jmp
add
cli
dec
cmp
jnp
dec
pop
das
scas
mov
mov
gs
cmp
in
stos
ret
je
sub
dec
dec
outsb
pop
add
mov
cli
pop
pop
adc
mov
ja
pushf
sbbl
cmp
imul
and
loope
xorb
out
lds
or
add
insb
es
xor
fcmovnbe
mov
xor
cmc
lds
bound
xchg
jmp
xor
sarb
std
xorl
mov
inc
nop
xchg
mov
orl
shl
fnstsw
push
pop
movsl
add
or
orl
aas
or
mov
xchg
ja
pop
push
pop
movb
fwait
jo
adc
inc
and
addr16
mov
pushf
jne
popa
xor
imul
xor
sbb
inc
sarb
push
sub
dec
pop
mov
xrelease
mov
imul
push
push
mov
jp
jge
rorb
notl
dec
inc
aaa
push
fmull
aas
mov
test
fidivrl
mov
cli
out
mov
loop
sub
fnsave
and
adc
push
adc
ljmp
out
out
lods
add
jns
lock
sub
push
xchg
add
mov
cmpsl
outsl
bnd
outsb
mov
andb
jnp
dec
xchg
lcall
into
sar
sub
rol
pop
ret
aam
andl
jnp
mov
mov
adc
mov
mov
pop
ret
pusha
pop
push
adc
mov
jo
sbb
ret
shrl
pop
mov
sub
test
lock
jne
dec
sbb
mov
ds
xor
jg
out
adc
add
mov
dec
add
shrl
dec
xor
or
sub
mov
inc
sbb
inc
xchg
mov
inc
pop
mov
ljmp
push
daa
cmp
movups
xchg
repz
das
sub
jns
lods
and
sbb
fxch
ror
push
dec
add
push
adcl
xchg
popa
mov
cwtl
out
jb
shrb
mov
aaa
xor
jecxz
pop
sub
adc
ds
ret
mov
dec
xlat
outsb
jno
add
push
mov
divl
out
dec
add
aad
decl
jo
loopne
push
dec
dec
mov
icebp
dec
mov
mov
or
or
insb
xor
push
push
jae
xor
cmp
inc
std
jb
add
leave
adc
out
jl
leave
clc
push
arpl
mov
push
mov
or
push
push
xchg
stc
scas
popa
stos
cmpsb
nop
clc
repz
lock
xchg
xor
sbb
xchg
pushf
adc
fcomps
enter
out
cmpsl
push
push
mov
cmp
add
jg
xor
mov
mul
cld
sub
or
repz
movsb
inc
or
sub
movsl
jo
fidivrl
aas
push
push
jge
inc
ret
and
mov
inc
mov
aaa
addb
test
out
loope
adc
mov
mov
xor
jae
push
push
pop
xchg
aaa
out
pop
arpl
ljmp
or
jno
or
outsl
mov
shlb
out
in
inc
mov
cmp
fsubr
in
xor
mov
mov
and
clc
dec
or
lods
call
mov
mov
xorps
pushf
ret
gs
push
or
jo
jae
sub
pop
stc
and
enter
lock
mov
push
in
mov
repnz
mov
push
imul
cmp
jmp
inc
jbe
js
outsl
mov
cmp
imul
mov
jp
push
repz
push
nop
mov
movsl
inc
popf
inc
or
jb
xchg
jecxz
xor
sbb
jo
and
jmp
pop
xchg
outsb
cmpsl
pop
mov
mov
sbb
leave
or
int3
loope
inc
xor
scas
jmp
jle
mov
and
mov
dec
ljmp
sbb
lret
shr
pop
pop
test
dec
pop
nop
xchg
sub
aas
or
int3
inc
mov
aas
push
ret
addb
pusha
lock
daa
jae
mov
pop
out
and
mov
xchg
xchg
or
ret
fdivrs
repz
sbb
sub
outsl
pop
mov
repz
cmp
mov
push
pop
dec
outsl
xchg
bound
stc
enter
out
adc
std
cmp
xor
fdivl
loope
hlt
movsb
pop
bswap
mov
cli
xor
dec
xchg
jecxz
sbb
inc
jae
gs
pop
jge
pop
test
aas
push
std
sbb
sub
and
aad
sbb
imul
sbb
sbb
inc
add
push
add
test
es
mov
dec
sub
testb
or
outsb
sub
ljmp
int
les
sub
les
add
loopne
mov
jnp
fs
push
or
sbb
jg
or
popa
add
xchg
add
cmp
push
mov
inc
cmp
or
adc
mov
jge
mov
inc
leave
nop
cmp
icebp
dec
lcall
push
leave
fs
out
push
fisttpl
stos
stc
lock
pop
arpl
clc
xchg
mov
xchg
jle
lods
icebp
cmp
fsubl
pop
repz
sbb
cmp
sub
mov
cwtl
mov
js
jns
jne
call
or
sbb
cmp
jp
in
lods
pop
sub
lods
imul
xchg
divl
in
jns
loop
loop
arpl
add
mov
data16
xchg
int
cmpsl
sbb
cmp
add
jns
incb
pop
adc
lds
iret
adc
stc
fs
add
jne
cmp
enter
mull
insl
dec
add
inc
jge
mov
xchg
ss
idivb
cld
dec
mov
xchg
push
stos
bound
out
loopne
pop
testl
cmp
mov
xchg
inc
mov
pop
movzbl
xlat
and
xchg
or
pushl
lcall
jb
dec
shlb
mov
fistpl
push
scas
clc
scas
aas
adc
mov
sub
xor
xchg
arpl
adc
mov
mov
mov
xchg
push
sbb
fsts
and
adc
test
mov
sbb
mov
popa
scas
cmp
popa
lret
rcrb
xchg
adc
hlt
push
test
push
add
scas
cltd
stc
mov
arpl
pop
sub
xchg
xor
push
js
dec
adc
inc
pop
pushf
js
cld
test
push
outsb
push
and
subl
dec
xchg
cs
mov
ljmp
and
out
mov
adc
pop
nop
sbb
mov
movsb
push
jbe
mov
xchg
mov
mov
stos
rorb
push
sub
loope
mov
int3
xor
iret
inc
inc
stos
mov
fsubl
and
cmc
add
mov
mov
push
in
ja
or
jb
call
adc
and
daa
mov
dec
jle
jnp
push
pusha
push
sub
sbb
push
sbb
lods
in
mov
in
mov
mov
jge
mov
jl
call
cmc
daa
xor
dec
xchg
sub
push
rcrb
pop
mov
cs
out
mov
arpl
dec
mov
dec
jnp
sarl
cmc
push
pop
repnz
push
pop
sbb
xor
xor
ret
mov
int3
js
subb
in
arpl
jle
xchg
and
into
xor
push
mov
aad
clc
or
jmp
fstps
xor
mov
xchg
aam
loope
pop
fbstp
and
and
jns
scas
stc
nop
rolb
mov
repz
gs
mov
push
and
inc
add
call
jp
gs
test
jne
inc
repnz
dec
add
sahf
inc
cs
mov
repz
fucom
pushf
aad
scas
mov
test
pop
adc
mov
mov
push
xchg
lock
sbb
mov
iret
in
jne
pop
push
cmc
dec
data16
outsl
xchg
arpl
jge
in
mov
jnp
xor
ljmp
sub
lret
aaa
cmc
sti
stos
jb
jno
mov
loopne
inc
fnstsw
sub
sub
stos
cmp
xor
and
loope
loop
dec
xchg
aaa
mov
mov
fnstsw
test
mov
mov
xchg
ret
shll
push
std
cmp
cs
mov
cmpsb
add
inc
sub
jg
loope
and
into
addr16
lds
mov
jp
jne
jl
mov
dec
xchg
test
xchg
push
push
pop
andb
xchg
std
addr16
in
popf
adc
xchg
sahf
lahf
xchg
mov
lahf
or
mov
lahf
mov
and
jne
cmpsl
pop
mov
push
fistps
dec
mov
inc
jne
sub
and
sbb
sub
sbb
ja
fcmovb
xor
sbb
mulb
andb
jge
aaa
fisubrs
cmp
int
lret
dec
out
inc
add
outsb
dec
dec
mov
xor
aaa
test
pop
push
cmp
jg
repz
xchg
ret
xor
push
push
out
scas
mov
andb
adc
lods
cmp
fisubl
and
lds
mov
pop
out
call
repz
or
xchg
pop
inc
inc
or
add
movl
punpckhbw
jmp
rorl
inc
test
inc
sub
sbb
pop
push
push
sub
lds
cs
adc
notl
mov
out
mov
cmc
cmp
xchg
testb
cmp
push
sbb
adc
dec
sbb
pop
sub
stos
mov
rorl
test
aam
ja
fdivs
sarl
imul
mov
sahf
mov
cvtps2pi
xchg
cmp
les
inc
mov
adc
pop
add
push
test
xor
or
popf
cli
insb
stos
push
sub
mov
popa
push
fstpl
stos
dec
sbb
dec
mov
int3
fsubrs
jmp
push
imul
inc
mov
outsl
icebp
xor
daa
xor
fcmovu
sbb
jp
cmp
les
scas
dec
mov
out
loopne
les
int
imul
jbe
dec
daa
xlat
notl
popf
pushf
mov
cmp
mov
jno
cld
fistpll
xor
fstl
arpl
outsl
cmpsl
popa
jb
xchg
or
rcll
ljmp
rcll
mov
adc
xor
imul
stos
jge
sbb
inc
sub
loope
pop
add
jns
jg
or
in
movups
or
jo
fldl
in
jo
or
mov
pop
insb
test
les
mov
cmpl
or
push
loope
bound
inc
xchg
fcoms
imul
fdivrl
aas
mov
mov
das
movsl
fnstcw
jmp
push
sub
sarl
fdivl
pop
test
inc
cmp
adcl
xor
roll
lcall
xor
cmpsl
cmp
xchg
xor
stos
aam
dec
stos
shlb
shl
pop
inc
jne
push
jle
andl
adc
push
push
inc
sahf
rorl
lea
ftst
ret
cmp
inc
outsb
mov
xchg
aad
inc
gs
adc
lcall
mov
and
scas
js
mov
out
loop
lods
lea
jns
daa
fwait
sbb
lcall
out
xor
insl
hlt
sub
popl
add
rcrb
or
push
ja
scas
xchg
adc
cmpsl
jg
test
cltd
and
xchg
push
inc
sbb
mov
xor
jo
and
and
sbbb
mov
sbb
shrl
gs
bound
sbb
imul
cli
mov
out
fisubrl
aas
scas
and
or
adc
jmp
sbb
mov
cwtl
out
or
mov
js
sbb
inc
mov
adc
add
xchg
iret
shl
cmp
fists
push
add
lods
push
jecxz
lret
push
add
out
int
rclb
pusha
out
adc
pop
add
inc
mov
mov
dec
jno
loopne
and
mov
ss
sub
inc
imul
or
hlt
jbe
adc
inc
and
xchg
je
imul
dec
push
push
in
mov
lock
xchg
jnp
hlt
lds
or
cmpsl
adc
or
sub
fnstenv
mov
aam
hlt
push
int3
cmp
and
jno
push
stc
sbb
adc
pop
cmp
xchg
loope
dec
cwtl
mov
adc
jo
xchg
jg
mov
ret
mov
inc
xchg
in
dec
daa
test
jae
lock
jbe
gs
aaa
out
pop
imul
int
cs
dec
lret
stos
pop
sbb
in
xchg
cmp
or
test
and
iret
jns
fs
jno
aaa
and
dec
pusha
ret
jmp
rep
je
adc
popf
pop
adc
ret
sub
arpl
push
mov
pushf
jmp
fistpl
decl
bound
stos
fcomps
test
pop
aam
lahf
add
pop
push
xlat
bound
andl
out
adc
xchg
xchg
fdivrl
push
repnz
fldt
popa
cli
outsb
jp
clc
jne
sti
mov
enter
jecxz
sahf
mov
add
jb
xchg
and
pusha
dec
pop
movzbl
outsb
pop
sub
jo
subb
aaa
sub
inc
or
push
adc
jge
jb
add
mov
adc
and
rclb
lods
in
pusha
and
ret
ret
fyl2x
xchg
mov
outsl
arpl
std
or
cmpsl
ret
push
insb
aad
jno
mov
ret
mov
pop
mov
movsl
je
pushf
jecxz
jg
scas
push
mov
fmuls
jmp
cmp
jne
cmc
or
pop
std
dec
cmp
ljmp
pop
xchg
fistl
and
sbb
sti
xor
mov
add
pop
inc
cmp
leave
es
movsb
mov
mov
pusha
mov
int
cmpsb
xor
xchg
and
inc
mov
movsl
jl
lret
push
inc
add
cmpsb
mov
or
lea
scas
inc
push
in
mov
in
mov
divb
repnz
mov
ret
cmp
mov
stos
dec
shrb
dec
out
mov
or
pushf
cmp
iret
jbe
xor
scas
or
js
fdivs
aaa
jp
jg
outsb
push
and
fcomps
lahf
jmp
test
inc
pushf
cmpl
adc
lods
jb
cmp
leave
psubusb
lods
pop
aaa
mov
es
inc
cmc
addr16
out
aas
and
out
and
mov
jns
mov
in
adc
push
dec
and
jae
mov
fisubrl
xor
out
push
dec
fisttps
xchg
mov
stos
cmpsl
mov
push
loop
stos
dec
shrl
popa
jnp
push
fnstsw
cmp
push
out
mov
push
adc
lret
xor
xor
pop
or
pop
rdmsr
bound
jno
jmp
loopne
cmpsb
mov
cmp
xorb
in
jg
jns
sbb
mull
xlat
push
mov
xchg
jge
cwtl
scas
mov
jle
adc
sub
sub
adc
lods
mov
jnp
fistl
adc
inc
or
test
andb
aad
nop
push
test
adc
aas
jmp
push
adc
dec
jmp
outsl
pop
mov
pop
or
movsb
in
test
into
xlat
jl
ljmp
ss
mov
ret
add
push
push
mov
testb
lds
rclb
fs
cmpb
les
mov
cmp
inc
and
sub
out
insb
dec
rorl
orb
or
xchg
adc
fdivrl
movsb
in
popa
je
sbb
stc
cs
popf
stos
popf
cli
fcoml
pop
add
movsb
jmp
push
jo
jns
lods
sub
jbe
push
inc
popl
out
cmp
fcomp
sub
wrmsr
fadd
jo
sbb
jg
sti
push
scas
movsl
mov
mov
js
sub
xor
xchg
xor
scas
cmp
iretw
push
sub
gs
popf
out
aaa
xor
cmpsb
jno
add
jnp
enter
mov
push
sti
aam
loopne
loope
add
iret
jp
adc
sub
xchg
mov
stc
push
inc
xor
add
jns
ss
cmc
inc
inc
test
icebp
das
or
and
xchg
pop
sahf
lods
xorl
nop
lods
jo
xor
movsb
mov
dec
mov
into
les
in
in
push
push
mov
shl
in
out
push
push
mov
mov
mov
mov
inc
jnp
addb
lods
push
aad
mov
mov
jo
popa
jmp
cltd
leave
dec
push
pop
ss
cwtl
sti
cwtl
insb
addl
xchg
pop
mov
aas
loopne
faddl
gs
mov
ljmp
pop
fiadds
aad
ja
or
iret
mov
mov
fisttpl
xor
inc
jb
inc
js
cltd
mov
sbb
push
mov
loop
outsl
or
fmull
ds
push
sbb
mov
add
or
xor
fcmove
mov
adc
sub
fldl
push
sub
fwait
in
rep
mov
mov
sahf
and
sbb
mov
add
cli
test
int
dec
dec
and
mov
sbb
xor
mov
jl
adcb
or
mov
test
pop
in
insl
jmp
call
aad
hlt
test
cltd
push
ljmp
leave
lods
lcall
mov
insl
ja
cmp
out
scas
adc
rorl
test
fwait
fwait
dec
cmp
aaa
pop
dec
mov
or
xchg
xchg
inc
xor
or
and
call
lds
enter
mov
mov
fadd
jp
fcmovu
mov
nop
test
test
lock
inc
jmp
push
push
movsl
int3
add
cs
out
mov
icebp
stc
inc
loop
jo
add
mov
bound
add
pop
xchg
and
add
ja
leave
cld
lods
jns
stc
dec
sahf
mov
xor
ret
aam
enter
xchg
aaa
fdivrl
daa
lcall
push
add
sarl
add
ja
xor
int3
xchg
call
popf
push
insl
or
xchg
pop
shl
add
push
int3
cmpsl
xlat
and
xchg
push
cld
push
or
sub
push
jne
mov
sub
xchg
inc
push
mov
cmp
pushw
into
or
xor
sahf
add
gs
sub
sarl
sub
mov
sahf
push
ret
sub
inc
jae
jp
xor
jle
inc
pop
xor
loopne
leave
push
aaa
mov
repnz
aas
adc
adc
icebp
sti
jo
mov
and
mov
fidivl
popa
push
test
aaa
outsb
pop
cmc
jge
inc
nop
inc
fcompl
cmpsl
sbb
enter
mov
dec
xlat
push
fwait
test
mov
fnstcw
lds
rol
cli
inc
add
cld
scas
jae
mov
push
outsl
and
jp
inc
pop
inc
dec
dec
and
fisttpl
sbb
in
int3
mov
mov
xlat
cmp
andl
int
arpl
cmpsl
or
xchg
dec
mov
cmp
xorb
iret
jg
test
xlat
out
and
mov
jno
test
out
pop
cmpsl
dec
stos
je
loope
and
movsl
xchg
enter
test
fsubp
push
push
mov
ret
gs
imul
sahf
scas
enter
call
out
mov
cmp
push
and
pop
pop
lcall
push
enter
rorb
movsb
arpl
dec
aad
das
imul
fimuls
adcl
pop
mov
sub
push
mov
adc
push
pop
add
aam
stos
xchg
les
call
sbb
sarl
rorb
mov
movl
cmp
sbb
das
ret
pop
imul
js
pop
dec
mov
hlt
cli
roll
aam
in
lock
xchg
adc
lret
push
test
inc
inc
int
mov
aad
test
sbbl
mov
adc
das
inc
dec
dec
sbb
jecxz
xor
sub
movsl
pop
adc
inc
mov
pusha
xor
icebp
shlb
scas
xlat
push
imul
jmp
arpl
dec
sbb
fidivrs
sub
out
shlb
adc
jmp
hlt
out
sahf
into
adc
in
test
xchg
xchg
std
push
dec
pop
and
lret
sbb
lret
lea
push
ja
push
fsubl
ljmp
xchg
out
mov
sub
and
cmpsl
pushf
mov
hlt
aas
jo
out
mov
jb
les
xor
adc
bound
or
jo
int
cwtl
or
push
popa
out
pop
mov
xchg
leave
ficomps
mov
push
insl
cltd
dec
inc
push
test
mov
test
mov
mov
mov
rcl
pop
add
shlb
ja
fcompl
shl
inc
inc
mov
sbb
imul
mov
inc
sti
mov
cltd
js
sbb
lods
shll
out
mov
stos
xor
inc
jmp
add
mov
mov
dec
lret
jmp
inc
jmp
xor
stc
jne
cmp
stos
movsb
ds
jo
pop
mov
inc
pushf
jl
repnz
adc
sbb
adc
inc
push
clc
repz
sub
cli
xchg
int3
cmp
outsb
fldenv
in
aad
mov
sub
ror
stos
mov
andl
popl
test
bound
ret
cmpsl
imulb
fadd
mov
adc
pop
and
inc
dec
jne
int3
cmpsl
mov
mov
mov
sbb
jb
fists
push
loop
ja
test
cmp
insl
out
call
orl
mov
lods
js
adc
push
or
rcr
pusha
mov
pop
imulb
xor
jecxz
xor
aas
stos
pop
ret
dec
pop
out
gs
push
call
pop
lahf
push
sbb
push
cli
or
sub
inc
bnd
mov
mov
mov
xor
xor
inc
data16
jns
je
rcrb
les
aam
int
pop
test
comiss
mov
stos
mov
shld
roll
ficomps
push
push
mov
fwait
aam
pop
ja
out
jns
inc
sub
lods
sub
mov
sbb
and
mov
mov
jle
add
scas
dec
clc
push
jge
cmp
sub
out
dec
and
xchg
fdivs
mov
scas
inc
lods
negb
xchg
insl
jge
test
pop
cld
xchg
je
fs
roll
aaa
jmp
dec
int3
pop
sbb
cmp
adc
xor
mov
xchg
sbb
jecxz
mov
sti
scas
mov
scas
stc
xchg
jo
dec
pop
popa
inc
aad
or
loop
cmp
cmc
push
pop
sbb
cld
xor
icebp
test
add
pop
ja
out
dec
mov
testl
cld
out
cwtl
scas
add
rcl
aaa
cmp
es
adc
dec
shlb
sbb
ret
xor
adc
lahf
ja
sti
dec
aaa
xchg
aaa
iretw
jbe
fwait
js
pop
adc
and
stos
out
xchg
push
es
lds
dec
dec
mov
lahf
out
inc
jp
iret
add
push
mov
js
mov
mov
hlt
sub
dec
push
mov
jae
add
pop
stc
pop
sbb
mov
push
jle
sbb
das
and
pop
inc
and
mov
push
out
inc
nop
and
dec
ficoms
or
push
in
in
sarb
aad
es
cmpsl
adc
pop
andl
push
mov
cmpsb
lods
fs
mov
pop
add
les
or
pop
into
push
push
js
jl
lds
adc
pop
roll
push
dec
xchg
fst
lahf
xchg
test
xor
pop
lock
add
out
ds
xor
add
or
rcll
loope
mov
sub
and
imul
es
out
in
cmp
mov
cmp
scas
push
add
xchg
push
or
test
xchg
hlt
xlat
mov
imul
cmpsb
mov
orl
jge
jo
pop
jnp
popl
ret
outsl
nop
pop
push
inc
fwait
lret
xchg
adc
cmp
pop
sub
sbb
pop
jge
inc
xor
dec
into
popf
pop
cmp
or
fsubs
mov
insl
aas
sti
jae
repz
in
sbb
imul
das
out
dec
cld
popf
insb
fstpl
mov
add
test
xchg
mov
cmp
push
mov
mov
xor
test
mov
jle
add
push
xchg
mov
mov
fwait
dec
gs
add
or
sbbb
jle
mulb
xor
add
in
sub
repnz
shll
fdivr
pop
and
inc
rcl
fwait
xor
ret
je
into
ss
cltd
fdiv
aas
mov
cmc
inc
mov
hlt
pop
sub
mov
loopne
lret
in
dec
jns
out
fs
xor
dec
sbb
scas
out
mov
dec
pop
aaa
ds
push
adc
add
enter
pop
into
mov
jne
mov
sbb
mov
sarl
mov
mov
pop
add
enter
ret
mov
jo
jae
jecxz
cld
mov
add
je
mov
fisubrs
fcomp
inc
loope
sub
add
in
cld
arpl
mov
push
out
cmp
insb
mov
mov
lods
push
stos
pop
and
or
pop
fldt
and
or
dec
ret
scas
subl
cli
and
mov
inc
mov
cmpsl
cs
mov
push
push
fdivrs
les
pop
outsl
lock
jno
inc
fwait
data16
inc
inc
js
jp
sbb
out
pop
daa
or
fnstenv
pop
movsb
sub
adc
push
ret
mov
sti
negb
cmp
xorb
rcrl
and
aaa
inc
push
push
mov
cmp
cmp
or
or
mov
push
imul
in
hlt
dec
aas
loope
pop
cmp
rcl
adc
lods
xor
scas
xlat
inc
xchg
sbb
mov
adc
add
pushf
pop
cmpsl
fnstsw
into
xchg
xlat
cmp
dec
das
inc
or
nop
cmpsl
add
mov
icebp
icebp
jbe
mov
test
inc
add
cmp
je
xchg
rol
pop
stos
fidivs
fimuls
xchg
cmp
add
mov
roll
dec
mov
aas
dec
fistpl
push
sarb
pop
repz
pusha
test
sbbl
sbb
jo
imul
fistps
sarl
insb
mov
stc
or
xchg
jge
cmpsl
aam
std
or
cmpsb
popa
fsubr
lock
xchg
nop
mov
pop
xchg
mov
xchg
fdivp
int3
sbb
dec
call
mov
cmp
test
cld
mov
cld
aam
sub
das
stc
and
popa
ljmp
jge
movsb
push
sahf
insb
mov
rcrb
out
movsl
jg
stos
filds
sub
movsw
dec
mov
xchg
push
shrb
jno
jg
push
or
inc
xchg
repnz
cmp
pop
inc
ret
pop
adc
adc
sub
mov
lret
imul
and
loopne
dec
xor
test
cmp
int
adc
call
cmp
mov
jl
sahf
xor
outsl
pop
push
movb
lahf
hlt
mov
and
bound
sbbb
dec
or
cmpsl
xchg
pusha
push
stos
ret
add
or
add
cld
inc
test
sub
das
xor
push
movsb
cmp
je
aam
cmp
pop
lock
sub
lods
xor
andb
iret
lcall
cmp
sub
fildll
clc
test
insl
jecxz
cmpsl
js
xchg
roll
xlat
push
cmp
sbb
mov
mov
or
add
mov
insb
mov
dec
pop
shlb
repz
inc
fwait
popf
scas
repz
and
cs
xchg
cltd
cmc
push
pop
or
lock
outsb
mov
adc
call
xor
stos
sbb
add
mov
lods
cmp
and
daa
test
cmp
or
jae
push
divb
data16
inc
shl
test
add
daa
jmp
loope
dec
pushf
incb
add
xor
jo
push
adc
imul
push
pop
std
jge
ss
popf
popf
inc
leave
cld
mov
adc
into
mov
or
adc
or
push
into
scas
cmpb
ja
xor
pop
add
xor
pop
jmp
xor
dec
dec
adc
sbb
push
inc
xor
mov
jne
dec
fiadds
out
jle
and
mov
insb
push
lds
sub
sar
daa
xchg
loop
mov
xor
xor
mov
or
adc
scas
or
pop
push
push
mov
cltd
mov
mov
xor
jle
xchg
cmpsb
lock
mov
xor
addr16
push
aaa
imul
dec
fstpl
and
mov
adc
ja
push
sarb
scas
and
adc
xchg
jne
adc
mov
or
pushf
mov
inc
pop
orl
test
ljmp
mov
lret
push
sahf
xor
rclb
add
mov
mov
inc
dec
ret
mov
test
fdivrp
push
or
cwtl
and
das
cwtl
in
loop
xor
xchg
jnp
mov
inc
adc
xor
xchg
aad
scas
fisubrs
sbb
mov
jno
dec
lret
cmp
mov
mov
mov
push
jnp
jns
dec
push
xor
mov
cmpsb
cmpsl
ds
or
cld
inc
sub
jb
push
jne
inc
leave
add
sbb
addr16
push
jmp
adc
ret
or
or
adc
sbb
lock
xor
add
call
mov
and
sti
lahf
out
adc
mov
push
and
fadd
mov
test
outsl
rcl
jecxz
push
cmpsl
pop
cmp
mov
ljmp
inc
into
mov
mov
push
jbe
das
cli
mov
pop
pop
mov
popa
jo
jmp
jb
je
call
adc
and
cmp
xchg
mov
lcall
add
push
or
imul
sbb
fldln2
gs
pop
icebp
jo
jns
int
std
push
mov
lahf
xchg
in
sahf
enter
sbb
jne
aam
fs
push
movd
std
out
pop
shll
leave
jg
fildll
push
lcall
pop
xchg
pusha
fidivl
lret
push
push
out
cli
jbe
ds
orb
nop
out
xchg
and
sub
push
dec
add
aad
iret
aad
cli
or
es
inc
dec
call
aam
cmp
in
int3
ror
mov
sub
out
and
inc
mov
pusha
les
sbb
pop
push
test
loop
add
iret
mov
test
push
rcll
sub
lret
jo
addr16
mov
subb
lods
dec
xor
je
notb
jg
test
push
cmp
es
adcl
adc
ss
test
mov
imul
mov
fcmovu
jno
or
mov
push
mov
xchg
out
addl
or
imul
aad
cmp
test
pop
sbb
jnp
rolb
nop
ror
rcr
sahf
xchg
sbb
inc
gs
cmp
xchg
movsl
ljmp
aas
adc
xchg
stos
daa
es
cltd
stc
in
mov
ja
or
pop
jge
jecxz
sbbb
pop
push
jge
dec
pop
mov
xlat
ficompl
inc
daa
add
dec
and
push
mov
ljmp
stos
and
push
fstpl
mov
xchg
lea
dec
iret
mov
lahf
lods
das
sub
dec
mov
pushf
pop
fwait
jmp
adc
cmp
ret
and
test
lds
xchg
mov
rorl
fldl
arpl
testl
cmp
ret
cmp
jo
aas
add
push
hlt
mov
push
pop
adc
pusha
inc
sub
adc
in
clc
inc
loope
xchg
mov
ror
inc
cwtl
aam
and
xor
xor
pop
xor
or
add
adc
push
fsub
jl
or
sbb
jnp
rorl
adc
cwtl
test
xchg
dec
hlt
pop
cs
mov
xchg
inc
lcall
push
jle
dec
test
into
loope
cmp
dec
mov
test
jne
push
outsb
and
dec
dec
mov
fnsave
xlat
push
in
sub
gs
mov
inc
add
mov
sbb
hlt
adc
adc
cmp
dec
sbb
adc
jg
lods
fisubrl
jbe
aad
fldenv
xor
pop
sub
xchg
push
cld
dec
stc
xlat
hlt
cmp
xchg
cmpsb
fs
iret
adc
cmp
in
push
sub
add
int3
lcall
xor
ffreep
mov
and
lea
xchg
int
icebp
jle
xlat
imul
mov
dec
cmp
push
sbb
xor
loope
repz
mov
outsb
rorl
adc
xchg
aam
out
sbb
sahf
imul
mov
fcomps
xchg
jns
mov
jmp
sbb
fwait
mov
cmp
mov
and
mov
adc
loop
adc
mov
jl
dec
imul
fwait
stos
mov
jno
sub
jns
popa
js
or
sbb
std
and
xchg
shll
xor
xchg
js
jnp
mov
jp
mov
cmpsl
daa
rcrl
sbb
lahf
jecxz
outsl
orb
and
pop
pusha
mov
xor
rcrl
js
movsb
in
xlat
dec
in
hlt
xchg
dec
xor
jge
pop
push
push
outsb
mov
out
fsincos
jns
test
and
sbb
dec
and
inc
fsubl
sbb
fimuls
shll
or
enter
push
aam
nop
sub
je
inc
repnz
sti
into
mov
imul
leave
pop
mov
ficompl
imul
pop
stos
mov
lock
in
mov
pop
add
imul
mov
mov
loope
push
xchg
jg
ss
adc
inc
mov
mov
cs
sbb
ljmp
testb
dec
fsts
test
shll
add
add
popa
sub
cld
stos
arpl
xchg
mov
dec
jmp
mov
imul
cmpsb
cmp
sub
xor
lock
xchg
mov
stos
push
sub
pop
add
inc
sub
push
arpl
push
xchg
stc
jo
jns
adc
int3
mov
xor
cmp
fbstp
test
cltd
out
xchg
out
mov
adc
mov
mov
stos
mov
mov
cli
cmp
inc
filds
jl
and
jge
ss
scas
pusha
stos
test
dec
pop
add
xor
dec
xlat
mov
push
pop
jno
push
in
jne
insl
cmpl
or
fsts
fidivrs
xor
fistps
or
aad
gs
jo
inc
jmp
cmc
xchg
lret
or
adc
addr16
add
jecxz
inc
lret
es
inc
shrl
test
js
or
pop
ljmp
xor
inc
adc
call
xor
jns
insb
mov
inc
arpl
aad
or
insl
lea
lret
sbb
out
mov
sub
ret
es
add
fsubl
pop
int3
fsubrs
rclb
sbb
mov
pop
and
sarb
adc
push
mov
xor
fnstenv
ja
add
in
add
ljmp
xchg
sub
dec
rorb
in
mov
push
test
or
cwtl
push
mov
push
pop
sbb
sbb
int3
lods
dec
push
adc
cmp
sbb
xchg
mov
lahf
sub
faddl
push
test
les
cs
mov
xor
pushf
mov
test
stos
mov
lds
xor
add
mov
aam
jl
fistpll
icebp
pop
add
mov
in
pusha
imul
pop
mov
repnz
mov
lcall
pushw
ljmp
jo
ret
jl
jg
stos
mov
in
mov
push
adc
pop
xor
or
ret
mov
cmpsl
pop
mov
lods
pop
or
cmp
mov
pop
jno
cmpsb
push
ficomps
inc
cmp
stos
frstor
aad
xor
ret
in
push
lds
fs
cmp
or
pop
scas
repz
cmc
mov
sbb
fimuls
ljmp
adc
inc
pusha
pop
in
jg
fidivs
dec
imul
jg
pop
fdivrl
push
mov
icebp
shlb
pop
insb
bswap
mov
aam
ret
and
push
mov
je
cld
cmp
cs
stos
xchg
leave
mov
int
xchg
cld
shl
mov
sbb
lret
inc
push
test
or
or
fsubl
pusha
sarb
pavgw
out
in
xor
push
ret
mov
int3
xchg
fsub
aam
mov
icebp
inc
sbb
inc
jo
loopne
mov
lret
aaa
add
push
loop
cmp
outsl
lcall
mov
ds
lds
jo
push
pop
dec
pop
js
jl
int
adc
repz
aas
push
pop
fldt
lcall
out
cmpsl
inc
jns
and
shrl
pop
les
sbb
cwtl
lret
push
jns
adc
imul
stc
fistps
in
mov
sbb
loope
jmp
sub
push
xchg
scas
cltd
pop
push
fdivp
mov
rclb
loop
out
das
push
add
pop
dec
mov
sub
inc
call
add
xor
out
stos
lret
or
jae
pusha
cmp
and
call
int3
adc
jecxz
dec
jnp
addr16
xchg
adc
push
pop
inc
bound
fwait
shl
ljmp
adc
inc
test
sbb
imul
outsl
or
xor
outsl
xor
sti
sub
addr16
adc
dec
iret
lods
mov
xchg
mov
adc
mov
lret
mov
pop
fldl2t
lea
mov
sbb
xor
or
add
and
das
mov
pop
cmp
shrl
enter
lods
ljmp
mov
adc
in
cmp
push
fnstcw
push
mov
jbe
nop
push
nop
sbb
jecxz
and
mov
sbb
jecxz
fs
mov
xor
push
andl
dec
lods
sbb
stos
dec
inc
das
fadds
mov
test
icebp
dec
ficoms
xor
and
pusha
pop
mov
pop
or
popf
inc
fnsave
sbb
push
sahf
std
call
stos
data16
xchg
lret
inc
cmpsb
mov
mov
inc
sbb
mov
shrb
out
stc
iret
loop
test
divl
inc
lret
lahf
lods
mov
push
push
pop
ljmp
mov
sti
adc
adc
mov
jns
push
inc
adc
mov
je
xor
inc
pop
cmp
fisubl
and
inc
mov
loopne
dec
mov
inc
sub
xor
xchg
js
cltd
mov
add
xchg
aad
pop
mov
je
mov
fwait
adc
sub
jmp
mov
push
rol
movsb
fldcw
dec
jge
mov
sub
lret
in
ret
xlat
xor
inc
lods
sub
test
out
lods
int
movsb
dec
mov
hlt
push
aam
out
sbb
inc
xor
push
sub
lds
int
lret
sub
cmpsl
fistl
jbe
ljmp
push
mov
les
jne
sti
mov
int3
jns
push
push
lock
int
in
push
addr16
scas
fnstenv
stc
pop
stos
subl
lock
imul
jecxz
sbb
cld
adc
or
lods
jmp
add
imul
cmp
mov
pusha
imul
adc
sbb
lret
testl
enter
mov
add
js
sbb
fdivrl
inc
sbb
xor
ret
pop
pop
push
mov
mov
pusha
pop
into
std
xchg
xor
fdivrs
and
mull
mov
jmp
fnsave
iret
repnz
add
lcall
aam
xchg
pushf
repz
fsubl
stc
cwtl
or
mov
ss
xchg
pop
int
mov
loope
mov
adc
xchg
scas
push
hlt
iret
cmp
xor
pop
fwait
push
pusha
and
ljmp
aaa
sub
xlat
aad
or
add
mov
imul
mov
sti
pop
jo
lret
push
aam
xchg
into
wbinvd
movsb
cmc
fidivs
ret
push
push
inc
adc
xchg
xchg
arpl
outsb
xor
push
es
xchg
cs
jns
push
subb
fnsave
lret
push
jae
ja
jns
or
dec
or
jge
popa
test
fs
jb
adc
cmp
add
add
xchg
cli
das
pop
adc
jo
add
in
dec
ret
ss
aam
in
pop
sbb
xor
dec
jg
cmp
mov
cmp
ss
test
and
test
xlat
insb
mov
add
mov
sbb
jg
dec
fcmovnb
into
fs
insl
jecxz
cmpb
dec
xor
ror
daa
pop
add
dec
out
sbb
xchg
sti
stc
sbb
cltd
dec
add
lcall
xor
in
mov
xchg
xchg
add
adc
mov
mov
jmp
jb
sbb
and
mov
cmp
imul
sub
pop
inc
sbb
je
pop
inc
cmc
out
cmc
fdivp
and
insl
dec
jne
xchg
pop
inc
cwtl
stc
dec
sbb
out
xor
mov
sub
and
push
in
mov
sbb
ja
test
push
mov
ss
jmp
jmp
xorb
scas
outsb
xchg
adc
fimull
sar
mov
sub
fldt
orb
shrl
inc
push
bound
and
and
inc
mov
movsb
ja
dec
js
imul
pushf
jecxz
push
sbb
mov
ds
sub
xorb
loope
je
sarl
outsl
out
ja
push
and
cmp
sbb
xchg
test
xchg
clc
cli
daa
les
aam
xchg
jle
andl
add
insb
test
mov
bound
loopne
cmpsl
push
mov
int
cmpsb
pop
xchg
sbb
aas
xorl
jl
jbe
push
jge
mov
jbe
iret
push
inc
mov
rcl
gs
push
out
mov
fwait
push
mov
fwait
stc
xchg
cmc
lret
jns
adc
xor
push
repz
mov
push
mov
gs
movsb
add
jno
xor
xchg
into
aad
xchg
je
mov
subb
scas
cmpsl
shrl
aaa
aam
dec
bound
jle
negl
das
in
cmpsb
xor
cmp
dec
dec
mov
cmpl
ret
sub
rcrb
inc
ds
xor
push
inc
outsl
mov
fcom
mov
mov
arpl
flds
mov
mov
sti
fs
daa
test
pop
push
out
sbb
xlat
jns
mov
outsl
daa
cmpsb
imul
popa
fnstsw
insl
test
in
dec
out
sub
jnp
pop
dec
adc
cwtl
aad
push
pop
out
hlt
lret
pusha
xchg
je
push
inc
mov
adc
push
dec
xchg
dec
add
add
cld
dec
cmp
stos
xchg
cwtl
lcall
loopne
xchg
mov
mov
sbb
cmp
mov
sbb
sti
insl
imul
js
dec
fsubl
jg
jo
mov
jnp
mov
jp
cli
daa
aad
mov
inc
lds
ret
inc
inc
loope
shlb
and
adc
inc
cmp
pop
lea
in
pop
mov
scas
mov
loop
loope
shlb
and
and
add
push
xor
push
jno
jne
xchg
jns
stos
jne
fisubrl
push
movsl
add
sub
mov
mov
cld
cld
pop
adc
scas
insb
and
mov
out
mov
mov
in
lret
sub
repnz
cld
fcmovbe
ret
sub
mov
jle
jne
cld
xor
hlt
push
jno
in
or
jecxz
aaa
mov
testb
cmp
sbb
mov
pop
jle
jmp
mov
in
jb
xlat
sbb
add
enter
lret
ret
lcall
sbb
push
sbb
jnp
out
mov
jp
jo
cmpsl
mov
outsb
push
cwtl
sbb
and
pop
jl
pop
push
mov
movsb
loopne
or
test
xor
test
sub
cmp
cli
mov
mov
adc
in
jno
sub
or
test
fsubl
mov
and
or
mov
sti
enter
adc
xchg
xor
mov
arpl
xlat
cmpsb
pop
sbb
shll
xor
xchg
jno
adc
loope
xor
xchg
sahf
out
adc
cmpsl
pop
into
clc
lds
mov
mov
mov
movsl
and
sar
stc
jge
mov
repnz
stc
or
sbbl
mov
mov
dec
inc
cmpsl
mov
add
jne
cmp
sub
popf
loope
push
push
push
ja
into
pop
xchg
mov
insl
mov
leave
enter
movsb
jo
xchg
dec
xchg
push
rcrl
test
pop
sub
dec
mov
shll
daa
popf
leave
pop
inc
paddq
mov
push
stos
mov
mov
out
ror
lea
and
in
cmpsl
cmp
adc
dec
sti
mov
jg
shll
mov
loopne
mov
push
shl
cmpsb
cmp
gs
pop
pop
fmulp
std
mov
pushf
adc
ja
fsubl
cmpsb
mov
and
adc
scas
xorl
aaa
and
aam
ret
stos
lcall
mov
lret
clc
or
or
cmpb
jae
div
cmc
or
inc
xchg
pop
in
insb
sbb
sahf
ljmp
jne
lcall
hlt
dec
and
stc
pushf
or
pop
xchg
add
shl
out
mov
stos
add
stos
push
cwtl
sub
mov
gs
loop
aad
and
add
loop
and
inc
cmp
stos
stos
sub
mov
imulb
pop
out
pop
jo
popf
dec
rcrl
ja
push
int3
mov
or
bound
jo
aas
mov
pop
das
nop
mov
das
cmp
fisttps
lods
inc
mov
mov
shr
sub
movw
dec
cmp
movsl
lock
or
add
lods
adc
cmp
sub
jl
inc
orl
xchg
lock
cld
je
lret
add
xor
xchg
or
add
adc
push
outsb
pop
cmp
push
test
sbb
add
call
outsl
int3
arpl
arpl
in
hlt
ret
sub
outsl
xchg
mov
cmp
sarl
adc
movsb
adc
gs
loope
adc
pop
iret
out
insb
ret
xor
call
cmp
push
jb
adc
pop
sub
and
dec
ljmp
xor
xchg
push
sarb
inc
js
jnp
jmp
pop
movsl
push
int3
and
lock
adc
lahf
scas
cmp
aam
in
jle
xor
and
pop
ja
ss
in
ret
add
xchg
push
sbb
push
inc
xchg
adcl
aam
or
pop
and
daa
aad
push
loope
push
outsb
lret
sbb
aad
mov
dec
and
std
or
out
jbe
cmp
lcall
jns
or
decb
xlat
incl
sub
jl
insl
rorl
cld
aad
push
xor
lahf
sub
sbb
das
out
in
out
or
mov
inc
fcoml
dec
sar
sahf
inc
jae
pop
mov
mov
push
cltd
test
mov
sub
cmpsl
outsb
popf
jo
in
xchg
mov
mov
jecxz
pushf
les
pop
and
mull
and
jb
add
mov
imul
xor
and
dec
xor
inc
mov
mov
rol
test
shl
lods
ret
cld
lds
add
and
fnsave
ljmp
cs
mov
sahf
pop
das
xor
pushf
push
mov
sbb
stos
lahf
jmp
shrl
mov
xchg
cmp
imulb
mov
test
rcll
cmp
inc
scas
fmull
data16
mov
push
ret
outsb
sbb
pop
pop
imul
mov
and
pop
ja
mov
and
fistl
jle
movsb
mov
popf
pushl
icebp
inc
imul
lods
leave
stos
cmp
xchg
aas
test
inc
js
mov
sarb
das
ret
ljmp
lahf
pop
cmp
aaa
mov
sub
lds
jle
cmp
mov
gs
mov
les
aaa
stc
push
and
fidivl
dec
fcomp
lock
in
rcrb
aam
cmp
mov
or
cmp
repz
icebp
xchg
cmp
hlt
fldl
sbb
pop
jbe
movsb
jno
xchg
cmp
fmuls
outsl
mov
call
sub
or
or
mov
push
adc
jle
fwait
and
fs
dec
fcomps
mov
inc
daa
inc
cmc
or
dec
insl
push
sbb
in
es
mov
fnsave
dec
lods
mov
xchg
call
sbb
test
popa
xchg
jl
inc
dec
imul
add
or
push
mov
nop
mov
ds
cmpsl
or
inc
je
scas
daa
ljmp
sub
rorb
hlt
das
mov
scas
ljmp
xchg
fidivl
cmp
and
inc
aam
fsubr
inc
sbb
mov
loop
test
xchg
mov
jge
sub
cltd
clc
mov
xor
inc
mov
dec
mov
adc
jb
mov
xlat
adc
pop
dec
dec
pop
ret
push
arpl
jp
pop
dec
mov
insl
movsl
loope
shrb
and
orl
cmp
jae
xor
adc
add
shlb
ss
mov
test
mov
adc
dec
call
dec
dec
xlat
mull
dec
dec
mov
into
aas
fnsaves
mov
mul
xchg
mov
std
and
sub
mov
and
cmc
cmpsl
stos
push
dec
mov
xchg
bound
rcrl
xor
mov
mov
in
inc
mov
jne
inc
call
es
das
cmpsl
in
xlat
jno
mov
push
inc
jl
sbb
jo
sar
cmp
dec
addr16
sub
je
mov
add
jno
dec
stos
lds
mov
loope
rcrb
xchg
or
lea
add
sbb
xchg
mov
pushf
arpl
mov
stos
add
int3
rcrl
pop
gs
sti
push
inc
outsb
mov
cwtl
lds
rcl
cmp
inc
lret
fwait
push
jbe
daa
call
cmp
bound
ljmp
cmp
xor
pop
movsl
enter
stc
andl
sbb
pop
push
mov
mov
pop
in
add
mov
mov
cwtl
and
dec
std
cmp
dec
add
jle
sahf
xor
sbb
stos
aaa
mov
in
xchg
and
test
or
or
popl
clc
cmc
ja
push
loop
mov
repnz
xchg
imul
arpl
adc
insb
ret
push
aam
test
rcll
stos
addb
cmp
hlt
xchg
cmp
fiaddl
or
dec
inc
int
push
adc
push
lret
mov
xor
pusha
sbbl
inc
inc
sbb
add
jl
imul
repnz
dec
fwait
test
mov
movsl
mov
int
int3
sbbl
js
xor
xor
hlt
daa
cs
adc
test
imul
sub
inc
mov
push
adc
shlb
mov
mov
and
add
inc
insb
out
pop
popl
cmc
outsl
in
pop
lret
pushf
ret
insb
insb
or
and
nop
mov
lea
push
dec
or
sbb
loopne
adc
xor
mov
mov
movsb
sub
sahf
pop
cmpl
mov
xchg
cwtl
push
fldl
dec
das
arpl
cmp
mov
push
test
or
dec
inc
mov
lods
insb
sub
je
pop
movsb
fwait
aas
cmc
jmp
mov
ljmp
adc
je
popa
add
out
mov
mov
lods
in
jb
test
mov
xor
repnz
jns
jae
aad
cmpsl
into
test
fsub
mov
dec
fbld
movsb
les
out
pop
outsb
and
movsl
lea
add
lcall
mov
nop
sbb
adcl
insl
mov
nop
aad
test
sbbl
xchg
rorl
push
pop
push
insb
rcr
neg
subb
into
and
jmp
testl
orb
fcmovb
dec
push
roll
lds
push
mov
outsl
mov
mov
jns
enter
push
scas
fdivs
pop
insl
pop
stos
mov
hlt
and
add
inc
lret
cmp
xchg
or
sbb
xchg
sbb
mov
ret
cld
xor
mov
inc
adc
push
loopne
push
rcl
aad
pop
pop
ret
icebp
adc
xlat
hlt
push
add
lret
in
or
and
mov
and
inc
jl
dec
jmp
pop
js
repz
bound
cs
cmp
stos
mov
push
shrb
cmp
mov
pop
pop
out
shlb
xchg
lcall
xchg
mov
js
pop
lcall
add
mov
and
and
fsubrs
adc
in
arpl
test
cmp
int3
cmpsl
lret
pop
sbb
jg
jb
mov
mov
iret
pusha
and
jge
dec
adc
push
xlat
js
fxch
mov
or
repz
fadds
in
aad
cmp
sub
add
aas
rolb
rorb
nop
pop
pop
subl
cmp
out
in
mov
mov
mov
ja
dec
dec
ret
idiv
daa
pushf
rorl
or
mov
test
fnsave
adcl
dec
mov
mov
lea
mov
dec
inc
int
xchg
mov
rol
loope
ljmp
inc
push
popa
cwtl
add
jge
adc
pusha
fdivp
lldt
adc
je
push
xor
lcall
pop
jg
cmp
jl
xor
add
add
fwait
lcall
mov
dec
ss
pop
jmp
mov
jb
inc
and
pop
or
push
cmovs
jnp
or
int3
inc
movsl
xchg
cmp
ds
mov
or
aas
aad
test
adc
or
lods
hlt
in
repz
shrb
bound
add
arpl
or
cmc
mov
xor
out
repz
enter
cmp
jecxz
stc
aaa
jno
fisubrl
pushf
lret
jae
xchg
out
rcrl
jns
fsub
inc
pop
mov
pop
imull
jp
mov
test
jbe
imul
imul
fcompl
jge
les
jmp
adc
push
repnz
scas
dec
popa
fisttpl
fsubr
adc
push
jno
popf
bound
cmpsl
jae
push
arpl
leave
lds
pop
lea
mov
in
push
cli
idivb
cmp
lods
test
lret
fucomip
scas
xchg
ror
sbb
adc
jae
and
or
es
add
cli
add
adc
mov
cld
push
stc
clc
jmp
or
push
cwtl
inc
cmp
mov
stos
fdivs
neg
xchg
dec
sub
cmp
cmp
mov
ret
or
inc
jnp
mov
add
gs
push
push
rcrl
mov
into
lods
sub
and
mov
sub
mov
inc
aas
mov
lds
jp
xchg
fsub
je
sub
scas
or
sbb
les
and
cmp
push
mov
int
and
js
pop
and
inc
lret
jnp
push
stc
add
iret
xchg
adc
push
xacquire
insl
dec
cld
jno
pop
pop
cmp
dec
stos
movsb
stc
in
cmp
into
cmpsl
xor
jecxz
hlt
xor
jecxz
rorb
sbb
xor
mov
mov
inc
das
imul
div
leave
aas
fisttpl
mov
int3
cmpsb
dec
push
call
cmp
xor
add
dec
repnz
sub
loope
push
lcall
lods
repz
les
sbb
mov
in
jecxz
arpl
inc
sti
popf
mov
cmpsb
cmp
push
shr
adc
inc
inc
push
adc
icebp
incb
inc
xor
lds
subb
call
or
sbb
lods
sbb
sti
mov
or
push
clc
jmp
shrl
inc
sbb
sub
fnstsw
outsb
pop
inc
int3
les
shrl
ja
mov
cmp
mov
incl
lock
mov
imul
xor
loopne
aas
in
je
jnp
imul
and
out
outsb
push
in
mov
push
jo
sbb
stos
or
jo
addr16
cs
movsb
sub
inc
pop
dec
inc
sub
bound
out
sub
pop
mov
jmp
mov
das
andb
mov
or
paddw
sbb
leave
xor
inc
popf
in
pop
fcoml
adc
enter
jp
js
popf
sub
js
in
outsb
insl
cmc
aas
mov
rclb
ficoml
ljmp
xchg
inc
adc
push
rorl
call
adc
fnstsw
sbb
push
add
aam
test
idivb
stos
xor
add
push
cmpsb
inc
add
mov
jae
jno
jno
xor
test
test
bound
outsl
addl
pop
sub
adc
inc
flds
and
pop
or
dec
and
sbb
sbb
stc
pusha
cmpsl
jmp
add
inc
daa
loop
mov
addl
xor
jl
sub
les
add
shr
sti
repz
std
cmp
ds
lahf
jl
xchg
mov
loopne
pop
push
outsb
mov
hlt
push
push
jb
clc
das
in
fidivrl
cmpsl
mov
jb
imul
call
ds
loope
mov
fwait
xor
sbb
or
or
addb
adc
movsb
xor
fsubl
mov
adc
popf
and
cmpb
iret
lret
cmp
les
rorl
fldl2t
jl
push
test
mov
loopne
lahf
scas
add
bound
mov
adc
aad
sbb
adc
push
aas
loopne
daa
mov
xor
and
jno
std
shrl
repz
inc
cmc
lahf
lea
push
jae
insb
insb
ret
sbb
jne
or
out
ljmp
inc
imul
push
movsb
mov
xor
xor
mov
pop
mul
jecxz
shr
and
xor
data16
stos
push
pop
popa
xor
adc
loop
arpl
imul
in
pusha
nop
inc
xor
bound
jecxz
xchg
mov
mov
movsb
data16
and
mov
push
stos
cmp
inc
ret
push
int3
lret
xchg
dec
jp
cmp
xchg
mov
jmp
test
and
nop
enter
mov
jl
sbb
or
mov
rcll
dec
std
ljmp
mov
pop
outsb
xor
cmpl
xchg
cmc
or
jnp
rcll
xchg
cmp
arpl
lahf
push
mov
aam
jp
and
xchg
pop
scas
addr16
jp
mov
seta
je
test
pop
adc
jns
sbb
pop
pop
inc
loope
clc
fcoml
subl
je
xchg
mov
push
std
ret
mov
pop
lcall
js
mov
xchg
xor
mov
pusha
sub
lcall
or
movl
sub
inc
shrl
lret
insl
adc
sbb
push
push
mov
cli
fiadds
sub
addr16
ss
or
or
fcmove
out
cmp
daa
add
aad
sbb
repnz
das
fiadds
and
out
jo
iret
xchg
dec
sub
dec
loop
push
jle
cmp
sbb
outsl
sbb
mov
push
xor
into
pusha
hlt
jbe
add
lock
mov
outsb
jmp
scas
leave
sub
adc
xorb
xorb
mov
repnz
jb
pushf
bound
mov
cld
inc
jp
lock
loope
lahf
mov
dec
adc
push
rcrl
jae
mov
ret
pushl
pop
jno
or
mov
in
dec
adc
mov
inc
dec
push
out
push
dec
sbbl
jb
xchg
cmp
ret
mov
xor
fninit
divb
popf
icebp
loopne
clc
add
or
mov
clc
cwtl
imul
jmp
in
sahf
inc
aam
cmp
or
test
add
mov
xor
popa
int3
mov
pop
pushf
test
cltd
jge
ret
repz
dec
mov
lret
loopne
les
daa
pushf
sub
or
out
inc
adc
loopne
mov
notb
notl
addr16
xor
loope
test
push
gs
enter
mov
imul
and
push
pop
xor
cs
in
in
aas
lret
shrl
or
push
nop
in
xchg
rcrl
lea
jl
stos
sub
xchg
fdivl
aas
leave
fmull
leave
in
ds
inc
jmp
cmp
mov
sbb
mov
pop
insb
in
xchg
cs
cmpsb
mov
lcall
jbe
xchg
pusha
inc
push
mov
je
mov
adc
jo
test
or
ds
lret
adc
dec
das
pop
sub
xor
mov
fildll
outsb
icebp
nop
lcall
adc
jl
inc
imul
xchg
out
adc
xchg
jle
insl
insb
adc
icebp
bnd
cmpsb
sub
cmpsb
inc
mov
aas
mov
adc
cmp
cltd
push
mov
in
bound
push
out
out
inc
push
mov
mov
loopne
push
and
fsubl
inc
push
roll
and
imul
or
cmp
adc
lods
icebp
jl
mov
pop
pusha
pop
sub
and
push
ret
push
mov
fmuls
fimull
loopne
jnp
jecxz
inc
add
push
xlat
cs
nop
sbb
lock
xlat
mov
call
lock
inc
shr
cs
out
andl
mov
jb
scas
or
xor
addr16
movsl
add
aas
aam
mov
mov
int
dec
and
jns
lahf
into
push
mov
inc
mov
push
mov
push
std
pop
sbb
mov
mov
sti
dec
mov
test
and
jae
jl
lahf
call
cmpsl
push
jecxz
push
shlb
aaa
aad
pusha
in
lahf
rol
cmp
adc
dec
in
gs
mov
xor
mov
lock
cmp
imulb
add
ljmp
movsb
jb
jb
xor
or
mov
fwait
add
outsb
add
sbbl
loop
jle
jns
mov
xchg
iret
xor
add
mov
xor
cmpl
adc
cli
or
fldl
jp
jmp
sub
mov
sahf
add
loop
push
jg
inc
es
lods
or
insb
hlt
dec
ss
sti
mov
push
mov
rcrl
mov
and
adc
xchg
mov
xor
in
movsb
loop
incb
sub
and
andl
les
int
jne
in
movsb
fcompl
ret
mov
xchg
xchg
out
pushf
or
or
ljmp
loope
mov
add
les
or
cld
fldenv
sbb
sbb
es
je
loopne
aas
pushf
adc
imul
sbb
les
push
enter
gs
add
mov
mov
jnp
sti
jne
mov
jae
into
mov
mov
sub
stos
sub
xchg
and
shrb
out
fistpl
add
add
jae
xor
mov
sbb
xor
cmp
inc
add
mov
dec
sbb
sub
fstpt
pop
sbb
push
sahf
sbb
add
hlt
test
sbb
mov
pop
in
std
icebp
sbb
fisubrl
push
cmpb
mov
pop
add
pop
add
enter
sahf
or
mov
inc
into
sti
cmp
inc
sub
sbb
stos
inc
or
xor
and
lds
loopne
call
inc
mov
aaa
mov
subb
pop
dec
or
jecxz
pop
xchg
nop
push
out
adc
insb
bound
imul
outsb
sbb
push
test
cmc
inc
out
clc
or
jl
call
clc
aas
fildll
mov
jle
in
dec
adc
mov
mov
push
inc
pop
jb
inc
sbb
xor
mov
adc
xor
xor
aad
dec
cmp
fldt
xor
call
pop
sub
xchg
xor
mov
test
push
push
ljmp
sbb
das
pop
push
les
lods
aas
dec
xchg
cli
ret
pusha
push
push
add
repnz
sbb
jmp
rcl
mov
shll
cmpb
neg
inc
lock
fldz
fnstsw
in
aam
push
scas
test
enter
loopne
cmp
popf
inc
das
rcll
sbb
mov
sti
sub
movsl
and
or
dec
and
mov
frstor
xchg
push
es
mov
es
cmp
dec
mov
jge
iret
dec
out
enter
lret
mov
mov
jnp
and
jp
cli
in
gs
cmp
leave
pop
sub
loope
clc
aaa
clc
and
or
mov
pop
push
std
xchg
insb
add
cwtl
xor
add
cmp
mov
push
movsb
inc
pop
fistps
icebp
fildl
push
mov
clc
cmp
add
fistpl
add
gs
js
insb
push
fadds
ja
lcall
push
dec
pop
daa
push
popf
jb
stc
into
fldenv
push
test
push
iret
mov
or
ljmp
mov
loop
pop
sub
rorl
mov
and
fdivr
cld
sub
adc
inc
outsl
push
pop
dec
mov
mov
jp
cmpsl
repz
inc
mov
les
lret
test
add
inc
mov
xchg
push
inc
nop
int
push
jle
mov
sub
cld
cs
dec
addr16
lahf
loop
pop
into
mov
cld
jns
push
jg
push
mov
xchg
add
jb
push
out
mov
add
sbb
lds
xor
mov
sub
push
ret
mov
fcoml
xor
inc
in
xlat
hlt
add
outsb
inc
mov
sub
and
xor
fimull
jle
loopne
xchg
sub
xor
jmp
into
xchg
mov
inc
sub
in
mov
pop
inc
cmpsb
pop
fnstsw
mov
mov
or
idivl
add
in
xchg
push
hlt
adc
clc
pop
mov
mov
das
nop
loopne
sub
loope
adc
or
dec
xor
add
sub
dec
scas
shrb
cli
jge
sub
into
adc
movsl
xchg
not
insb
add
icebp
xor
adc
aam
mov
inc
xchg
dec
adc
outsb
xchg
in
jp
test
shl
dec
add
dec
aam
mulb
sbb
leave
sbb
mov
sti
ficompl
push
add
lods
pop
pop
repnz
lock
mov
pop
addl
xor
sub
arpl
movsb
cmp
fsubrl
out
ret
sahf
sti
imul
daa
dec
xchg
stc
rclb
hlt
or
iret
out
inc
fmul
pop
fnstenv
or
lods
ja
dec
dec
in
inc
rorb
leave
ss
mov
les
mov
stos
xor
leave
ss
ficomps
add
scas
movsl
mov
les
sbb
mov
in
mov
jb
and
idivb
pop
inc
mov
sbb
rolb
sub
out
pop
mov
sbb
sbb
scas
jmp
dec
xchg
mov
dec
andb
mov
stos
pushf
fisttpl
pop
movsl
push
cmpsl
and
cli
mov
xor
hlt
addb
dec
jns
adc
xor
mov
adc
adc
mov
js
push
lock
shl
cmp
lea
lods
ret
pop
and
sub
pop
mov
js
lods
cmp
cmp
rcll
jle
lret
xor
movb
out
mov
scas
flds
out
imul
xor
xlat
lds
inc
xor
test
xchg
out
test
fisubrs
mov
loop
xor
mov
lock
sbb
iret
jnp
js
repnz
addr16
or
mov
aas
sub
mov
nop
hlt
test
sbb
mov
bound
mov
xor
mov
xor
adc
cmp
imul
cld
cli
and
out
jle
push
jecxz
and
mov
jl
cli
push
dec
and
xchg
sub
dec
mov
jns
or
mov
pop
add
xchg
jmp
xchg
add
adc
pop
les
lret
pop
cmc
dec
push
orl
jmp
dec
popa
lea
xchg
lret
inc
pop
sahf
adc
cmpsb
imul
add
or
sbb
lods
xlat
mov
lcall
popf
mov
xchg
cmp
pop
or
mov
lock
outsl
imul
dec
adc
pop
shlb
mov
push
xlat
add
popf
pop
jg
mov
gs
mov
popf
xchg
cmp
cmpxchg
repnz
ret
incl
mov
dec
inc
sbb
ficoml
ds
adc
jbe
mov
ret
icebp
cmp
pushf
clc
push
adc
in
sbb
mov
mov
jmp
ds
negb
loope
jge
call
mov
fs
mov
scas
ja
fldl
dec
les
jbe
jl
mov
cmp
ljmp
sarl
es
or
hlt
shll
mov
aad
cld
lea
cmp
cmp
scas
mov
mov
fwait
or
imul
mov
xchg
and
test
sbb
divl
pop
notb
xor
dec
mov
lret
mov
and
adc
popf
in
cmp
sbb
enter
out
xchg
mov
and
insb
sub
xor
lods
popf
dec
sbb
fidivl
daa
xchg
lea
sbb
jp
and
push
movsb
sbb
mov
clc
mov
sbb
in
jae
pop
xchg
jno
mov
and
push
pop
and
jae
pop
push
mov
das
mov
iret
icebp
cmc
addr16
imul
pop
add
fistpll
jg
aad
sti
xchg
inc
lock
sub
and
lods
xchg
or
xchg
jb
mov
adc
stc
cltd
add
fmull
mov
lock
call
or
aad
pop
or
iret
mov
adc
add
outsb
jmp
sti
mov
outsb
in
in
imulb
sbb
adc
adcb
dec
sbb
jl
adc
jae
pop
mov
push
dec
outsl
ljmp
repz
push
xor
jecxz
dec
repnz
dec
inc
js
ja
out
repz
testb
leave
inc
cmpb
mov
mov
out
mov
movsb
xchg
pop
jg
aad
cmp
scas
and
push
aad
scas
aas
push
daa
dec
adc
call
stos
out
repz
or
int
popa
cli
in
rorl
inc
mov
xor
arpl
das
int
push
mov
test
sbb
les
cwtl
mov
sub
xchg
pop
cwtl
pop
jns
xchg
dec
ljmp
call
inc
mov
push
jp
lods
rcrl
mov
insl
clc
sbb
fiadds
dec
or
cmp
dec
xchg
xchg
adc
or
dec
mov
rorb
out
jmp
paddusw
push
cwtl
stos
lea
dec
mov
mov
int3
bound
int3
push
jnp
bound
cmp
daa
mov
inc
xchg
int
insl
dec
std
lea
stc
lcall
shlb
movsb
xchg
xchg
call
fldenv
xchg
inc
push
clc
push
arpl
xchg
or
lock
mov
mov
jns
fucom
xchg
push
sarl
mov
dec
ja
dec
lock
pop
dec
and
stc
in
into
pop
jb
pushf
jb
or
ja
cmp
cmc
pop
or
push
repz
out
sbb
shlb
push
mov
mov
or
loop
pop
scas
dec
out
jno
or
out
push
and
cld
enter
sarl
and
adc
lock
push
cli
mov
scas
cmp
iret
xor
daa
fmuls
inc
scas
pop
mov
js
and
cmp
dec
test
nop
adcb
xchg
mov
ret
cmp
pop
adc
lds
ljmp
sbbb
fcoms
mov
sbb
mov
pusha
mov
fisttpl
pop
test
mov
mov
xchg
data16
mov
push
mov
mov
icebp
adc
movsb
and
xor
mov
test
outsb
cmp
mov
adc
test
mov
mov
cmp
aam
lret
subb
stos
scas
arpl
adc
sbb
or
in
inc
insb
pop
cmp
push
int3
iret
gs
jnp
and
movsb
push
mov
xlat
sbb
fimull
nop
cli
sahf
outsl
cmp
in
add
sahf
loop
sbb
mov
inc
ret
jmp
mov
lock
mov
mov
cmp
add
sub
or
adc
andb
mov
popf
ss
sub
mov
add
push
lods
das
subl
push
mov
jl
cmpsl
aaa
mov
ds
adc
push
push
mov
fsubl
in
int
ret
shr
mov
out
cmc
pushf
enter
mov
push
daa
cmp
arpl
out
stos
inc
xor
test
sub
repz
push
jge
cmp
mov
adc
xor
xor
mov
popf
je
mov
es
out
jb
pop
push
fldl2e
xor
aas
lcall
or
in
lods
daa
and
test
inc
loopne
sub
dec
inc
dec
rorl
sti
push
sbb
stc
cmc
test
add
js
mov
scas
or
cwtl
and
lret
cmp
insb
aad
sbb
sbb
fiadds
insl
fwait
daa
imul
out
lret
xchg
popf
and
or
add
jle
call
aam
sahf
and
push
or
cmpps
mov
in
add
add
or
jnp
add
rcll
adcl
pop
mov
clc
push
nop
arpl
ficoml
test
scas
stc
pop
lods
subb
cmpsl
je
pop
mov
test
mov
sbb
pop
popa
imul
pop
xor
add
sti
cmp
add
jecxz
jecxz
dec
fstl
mov
inc
xchg
stos
fstpl
mov
daa
test
ljmp
cmpsl
jl
mov
adc
push
enter
arpl
push
enter
out
jns
cmp
std
rol
in
sub
cmp
xchg
and
mov
push
sub
fcmovne
mov
popf
push
xor
xchg
pop
jge
and
xchg
scas
lods
mov
sub
xorl
js
xchg
fwait
inc
fistpll
inc
mov
enter
xchg
mov
addl
mov
pop
pusha
mov
jbe
ret
pop
or
add
fisubrl
push
mov
ffree
mov
pop
nop
push
adc
jecxz
push
adc
leave
and
std
scas
imul
sbb
bound
ds
fdivrp
leave
fstps
outsl
rcl
test
mov
sarl
jle
aaa
push
int3
clc
dec
jno
das
dec
push
out
aam
lret
fwait
idivl
xor
aaa
movl
pushf
or
cwtl
stos
jb
outsb
mov
cmc
jnp
repz
in
in
push
sub
mov
sbb
enter
pop
jle,pn
in
xchg
sub
sbb
xor
jl
inc
jl
xchg
clc
and
cmpsl
lods
cmp
pop
adcb
hlt
pop
push
stc
pop
in
push
nop
int3
jmp
ja
out
jno
imul
int3
xor
pop
inc
das
incl
test
and
in
dec
mov
sbb
out
pop
and
mov
dec
ret
out
cltd
mov
and
fucom
add
mov
cld
loop
and
cld
inc
cs
out
pop
push
mov
jl
and
rcr
sbb
cmp
or
out
pop
aad
jnp
inc
xorl
dec
jge
addl
stos
popl
sub
sub
jae
inc
pop
lock
daa
cmp
mov
pop
mov
fwait
call
movsl
aas
fcmovb
subl
fists
ficoms
adc
pop
mov
mov
xor
push
in
stos
fdivrl
les
loop
lock
adc
in
sbb
push
xchg
push
jl
lods
mov
mov
stos
mov
fdivrs
jb
stc
dec
cmp
and
sub
or
cmp
ja
sbb
imul
pop
lcall
jle
lcall
cs
out
ds
jecxz
loopne
or
jb
scas
hlt
cltd
add
std
cmp
jo
pop
cld
push
cwtl
negb
mov
adc
jbe
or
mov
inc
fcmovnu
jb
sub
push
in
addr16
or
test
scas
pop
lds
pop
adc
or
pop
loopne
aam
pop
test
out
cwtl
je
fwait
rorl
fildl
dec
mov
popf
faddl
clc
mov
popf
cmpsb
inc
test
hlt
xor
xlat
insb
mov
in
jle
movsl
mov
psllq
mov
mov
add
dec
inc
sub
adc
ficompl
jle
sbb
mov
adc
inc
lods
push
xchg
fisubrl
test
cmpsb
cmp
leave
jo
and
push
scas
aaa
movsl
xor
cmp
mov
xorl
mov
outsb
mov
outsb
push
cmpsl
mov
loop
outsb
int
daa
in
cli
xor
lcall
or
addb
push
xchg
mov
xchg
mov
sbb
inc
sub
push
inc
fdivrs
xchg
and
jno
push
jnp
jle
push
dec
inc
and
sarl
push
int
push
mov
out
pop
pop
push
in
xchg
cld
adc
pop
outsb
out
dec
push
inc
fwait
sbb
mov
ja
leave
inc
mulb
cmp
jmp
pop
mov
fimuls
movsb
cmp
sbb
iret
mov
popf
icebp
and
stc
sub
imul
adcb
push
repz
outsb
pop
mov
addr16
out
scas
iret
loope
inc
sbbb
les
jmp
cs
mov
mov
imul
out
imul
in
xchg
lock
pop
sti
dec
aas
push
fmul
adc
mov
insb
mov
in
outsl
mov
pop
fmull
lock
stc
pop
addb
enter
into
jle
adc
mov
sub
xchg
xchg
jle
cmpsl
mov
test
and
insb
adc
aad
arpl
push
repz
je
jo
stos
mov
fsubl
inc
add
jbe
pusha
hlt
mov
sub
pop
and
jne
cmp
ret
push
lcall
sbb
loop
sbb
in
mov
movsl
push
or
mov
cld
cmp
imul
sbb
inc
movsl
or
add
movsb
cltd
or
popf
adc
popf
sub
jb
xor
decb
and
imul
js
xor
fsubp
and
cld
js
lcall
lods
add
pushf
mov
gs
in
sbb
or
leave
arpl
jnp
negb
sub
mov
stc
loope
dec
mov
add
fisubl
std
dec
dec
push
popf
fucomi
das
dec
out
dec
xchg
sub
mov
les
and
cltd
lret
test
and
jae
pop
pushf
hlt
mov
adc
pop
inc
stc
nop
insb
xor
bnd
push
in
pop
cs
inc
push
ja
inc
mov
sbb
test
outsb
xchg
push
and
int3
jne
push
lret
xchg
and
movsb
jecxz
std
push
rorl
repz
xor
shlb
pop
mov
divb
adc
jl
divl
scas
in
and
dec
lods
movsb
cli
xor
aam
and
adc
repz
adc
xchg
dec
sti
jge
cmp
sub
adc
inc
in
mov
cmp
mov
test
inc
movsb
sub
mov
sbb
push
out
jno
in
xorb
dec
push
pop
mov
lock
in
xchg
sbb
movsb
sub
push
iret
popa
xchg
es
pop
sbb
push
and
sbb
pslld
inc
jmp
add
dec
sti
in
lret
xor
jae
or
in
rol
xchg
xor
inc
repz
jno
xor
jge
std
in
pop
arpl
xor
xchg
cwtl
xchg
mov
daa
not
leave
xor
outsb
cld
cmp
jne
mov
inc
mov
gs
loop
xchg
stos
jbe
aam
stos
dec
dec
lret
pushf
popa
mov
jle
shlb
jmp
loope
and
cmp
cs
repz
adc
in
stc
fistps
sub
addr16
in
mov
sti
add
and
ds
pop
adc
notb
addr16
pop
fs
mov
insl
arpl
sbb
sub
addr16
xlat
arpl
push
ja
data16
gs
sub
jmp
outsb
xchg
out
mov
xchg
outsb
sub
ret
sbb
or
xlat
ds
xchg
push
mov
dec
lds
xchg
add
mov
out
xchg
lock
les
or
push
pop
dec
lods
rcl
or
loop
dec
shlb
fisubl
nop
leave
lock
lea
hlt
aaa
dec
xchg
cmp
das
dec
xchg
pusha
lret
xorl
adc
xor
sti
cwtl
push
mov
in
fnsave
fisttps
loopne
aaa
rcl
xchg
loopne
xchg
pop
in
push
clc
push
jb
jmp
stc
movsl
out
aas
fisubrs
xor
int3
lret
test
and
sub
loope
popf
push
xor
ss
cmpsb
negb
xor
jp
xchg
hlt
cmp
push
out
xchg
popf
sti
ljmp
stc
lock
jns
movsb
add
cltd
sub
add
sbb
pusha
mov
hlt
mov
dec
scas
shlb
add
inc
and
mov
push
lret
mov
mov
sbb
aaa
movd
mov
push
fsubrp
cmp
pop
sub
adc
push
into
int
pusha
bound
pusha
xchg
std
fimuls
ss
fwait
cmp
push
cmp
das
mov
xor
add
loop
fwait
mov
dec
jbe
movsl
push
push
leave
push
xchg
dec
inc
cmp
xlat
jo
cmp
loop
dec
pop
mov
mov
pop
lret
cmp
lret
push
sbb
mov
fs
ret
xlat
popf
roll
or
add
sub
inc
xchg
lock
lds
xchg
jae
ret
add
mov
push
push
push
xchg
dec
mov
sub
movl
aad
xor
cs
jp
jge
jp
push
imul
loopne
iret
mov
div
xchg
xor
das
push
hlt
push
stos
jmp
dec
insb
mov
fcmovbe
cs
xchg
push
and
aaa
jo
scas
mov
and
xchg
jp
xchg
addr16
enter
add
fdivrs
es
lret
adc
dec
adc
scas
jo,pt
or
push
push
mov
mov
test
lahf
dec
sub
testb
addb
jge
aam
sbb
xchg
add
cli
inc
push
int
cmp
mov
add
add
daa
jns
push
mov
icebp
jmp
inc
sbb
dec
flds
mov
ljmp
sti
mov
movsb
aaa
lea
xchg
loope
adc
dec
repz
mov
xlat
popa
es
pop
mov
mov
xchg
call
sbb
mov
xchg
inc
ror
cmp
xchg
and
cmp
lea
sti
and
push
sub
je
push
lret
ds
popa
pop
aad
out
subb
ja
mov
mov
test
roll
sahf
jo
fisttpl
xor
inc
push
rolb
push
lods
push
pushf
xchg
and
test
push
lock
shrb
cmc
addr16
mov
adcl
in
sub
cwtl
dec
dec
pop
or
stos
rcl
in
test
test
ss
in
inc
insl
sub
ljmp
ss
sarb
out
lock
mov
xor
jne
or
xchg
test
cmc
test
xchg
insb
icebp
and
sub
popf
push
fcmovnu
movsb
stc
mov
xor
pop
aaa
fmull
pop
pop
xchg
daa
xchg
adc
movsb
sbb
jno
out
pop
xor
iret
lock
les
adc
repz
push
pop
inc
data16
mov
repz
jbe
jmp
shrl
xchg
mov
and
mov
xchg
ret
mov
rcrl
xchg
adc
outsl
js
das
pop
fwait
shrl
jg
and
sbb
adcb
or
inc
xchg
mov
outsl
or
mov
test
mov
gs
es
add
mov
nop
gs
lcall
in
pusha
cmp
sub
adc
jg
fwait
jl
adc
mov
xlat
adc
jno
mov
or
dec
repnz
xchg
xlat
scas
cld
jno
lret
mov
mov
rclb
sub
push
sbb
adc
outsl
or
xchg
xlat
addr16
sub
mov
pop
xor
lds
cmp
loop
movsb
insb
jge
jge
jl
insb
lcall
dec
cmp
in
add
xlat
push
pop
neg
clc
push
mov
xor
ljmp
out
jno
pop
pop
addb
add
fisubrl
hlt
mov
sub
ficomps
xor
ficoml
enter
testb
inc
outsl
jge
daa
xchg
in
popf
xchg
shrl
imull
mov
popf
out
inc
sub
daa
add
and
aas
jbe
push
cs
mov
stc
int
and
jb
xor
push
std
punpckhdq
xor
fs
add
addr16
into
test
fists
adc
push
mov
movsb
or
imul
lahf
cmp
popa
pop
insb
jne
adc
lods
aad
aas
lods
xchg
or
dec
addr16
lock
stos
stc
xorb
adc
jl
push
mov
mov
inc
jge
cmp
and
xchg
insl
add
data16
push
cmpsl
popa
mov
enter
rcrl
xor
leave
mov
icebp
int3
in
add
or
xor
mov
jg
jae
mov
iret
rcll
cmp
push
push
cwtl
push
into
xchg
lods
dec
jno
sbb
leave
jno
test
out
jmp
cmp
push
inc
cmp
push
je
ret
xor
sbb
xlat
stos
adc
add
xlat
imul
bound
movsl
pushf
lahf
call
pop
test
jnp
add
sbb
mov
hlt
ljmp
mov
xchg
cmp
cmp
fildll
mov
cmp
xchg
mov
movsl
pop
sub
push
push
push
fimull
inc
push
ds
ret
dec
insb
test
cmpsl
push
insb
fs
push
cmp
loop
into
jecxz
xchg
inc
das
add
pop
les
lods
mov
cmpsl
out
arpl
sar
fwait
mov
in
test
imul
cwtl
mov
pop
shlb
and
sub
jg
imul
pop
fwait
push
xor
insl
imul
mov
les
popa
jge
ljmp
jnp
mov
dec
and
xorb
leave
dec
push
std
popf
dec
adc
in
dec
inc
cs
sub
jge
ret
xorl
cmpl
and
cs
mov
outsb
mov
sub
push
sub
fcoms
std
inc
out
inc
inc
gs
jne
loopne
mov
pop
mov
mov
jmp
pop
in
jle
inc
xchg
mov
push
pop
jns
outsl
add
lods
and
mov
orps
idiv
cwtl
pushf
int3
fcmovbe
in
shlb
mov
loope
pop
push
mov
std
xchg
jbe
mov
pop
dec
lods
dec
int
mov
lahf
jl
nop
push
mov
push
fnsave
sbb
xor
in
inc
push
fadds
mov
repnz
pop
mov
fiadds
cmp
xor
and
cmp
jmp
inc
cmpsb
push
inc
ret
test
mov
out
rcl
mov
insb
mov
fbstp
sub
cld
les
cmc
cltd
add
ja
outsl
mov
and
xlat
xor
cld
shr
fsubrp
mov
adc
aam
mov
nop
cmp
inc
mov
iret
imul
fwait
pusha
xchg
mov
fimull
push
jecxz
mov
inc
cwtl
mov
mov
filds
addb
pop
fldl
xor
insb
jno
add
push
rolb
push
cmp
aaa
rol
divl
pop
lahf
popf
orl
xchg
lds
add
bound
pop
xor
xchg
lds
insl
aam
jne
pop
sahf
das
sub
push
jne
jmp
bound
hlt
outsb
in
mov
cmp
adc
out
cmpsb
jmp
push
dec
xor
addr16
jb
pop
adc
repnz
test
ret
dec
pop
xchg
push
roll
es
mull
xor
fs
fdiv
sub
gs
cmc
add
adc
push
xchg
iret
stos
push
rolb
in
sti
ja
pusha
shr
mov
shll
out
rcrb
jmp
push
pop
ja
xor
loop
mov
push
addb
icebp
add
test
sub
or
pop
mov
adc
iret
mov
push
sbbl
addl
mov
fisubrl
cli
call
mov
mov
add
out
lret
shlb
mov
inc
in
iret
pushf
popl
and
arpl
jecxz
and
mov
dec
xor
sbb
or
mov
aas
add
les
xchg
cmp
fbstp
cmp
adc
ja
dec
or
or
mov
stos
cmp
push
icebp
pop
rolb
xor
negb
dec
mov
pushf
stos
mov
sbb
xor
xchg
jns
mov
in
mov
pop
aad
ljmp
ds
stos
cld
sahf
cmp
mov
adc
not
xor
jns
jae
insb
mov
cmp
push
cmp
dec
call
fisubrl
mov
lahf
gs
pushf
jbe
pop
les
mov
fmul
mov
das
iret
mov
push
ss
or
xor
xor
pop
pop
push
lods
ss
pop
xor
loop
imul
shl
mov
hlt
and
dec
add
jmp
es
jmp
dec
pop
push
and
repz
ret
xchg
pop
stc
clc
rcll
pop
push
mov
jns
hlt
repz
sbb
adc
sar
int
mov
xchg
cmp
push
add
mov
cmp
mov
mov
dec
pop
jp
mull
or
push
lock
pop
loope
lods
fwait
insb
int3
icebp
push
push
add
in
mov
fwait
ja
sub
popa
aaa
pop
aam
das
fucom
stc
mov
in
call
xor
imul
mov
mov
inc
shlb
cmp
sti
aam
nop
in
test
hlt
lret
cmpl
jmp
ficomps
sub
js
das
shrl
adc
jl
subb
xor
hlt
lock
into
outsb
rol
icebp
or
xor
pushf
inc
jae
or
mov
pop
fistpl
scas
imul
ds
fwait
popf
dec
in
movsl
fiaddl
xchg
or
ret
insb
add
call
cmp
xor
inc
lret
loopne
aas
inc
call
int3
xor
push
push
test
push
into
pop
sahf
cmp
in
test
push
jb
jmp
jo
ret
jne
enter
inc
shl
lahf
gs
mov
cmp
addr16
lods
xor
mov
mov
gs
push
jns
adc
sub
push
mov
iret
mov
movq
lcall
cmp
pop
nop
fnstsw
or
mov
nop
fwait
inc
cmp
in
jp
pusha
sub
scas
and
jb
nop
dec
ficoml
adc
popf
stos
gs
or
fistl
push
push
xchg
fdivl
or
jmp
loope,pt
cmp
fldt
outsl
mov
lea
hlt
enter
jmp
or
lea
pop
dec
lods
or
xor
loopne
shll
push
sub
pop
jo
xlat
or
clc
pop
imul
bound
mov
and
hlt
push
push
outsl
xorb
jno
fidivrs
scas
jo
shll
push
jmp
es
push
or
roll
leave
fxch
je
rcl
jle
insl
xchg
cli
pushw
add
lds
pusha
add
lahf
inc
mov
push
jecxz
jg
out
mov
xor
xchg
out
adc
adc
sub
jae
inc
mov
xchg
push
loopne
into
enter
lods
movsl
jo
or
pushf
iret
adc
std
pop
cmc
cwtl
popf
idivl
mov
out
inc
aaa
sbb
dec
pop
lds
gs
mov
sbb
fdivr
das
mov
jmp
les
cmp
shll
mov
not
inc
cld
test
mov
test
out
push
int
xor
mov
es
xor
gs
shrb
enter
les
xor
or
movsl
sub
xchg
xchg
mov
cld
inc
cmp
scas
je
fs
hlt
and
sub
loopne
xchg
mov
or
add
dec
fcmovu
or
into
cmp
and
outsb
lcall
shll
push
pop
pop
dec
mov
and
int
xchg
leave
iret
out
sub
or
jp
fnstsw
out
sbb
ret
popl
loop
xchg
out
sub
rcrb
clc
imul
rclb
or
xor
outsb
cld
std
loopne
enter
jne
and
jmp
and
and
mov
hlt
out
cmc
add
daa
and
and
insb
ret
push
ljmp
fsubs
aaa
insl
fwait
sbbl
mov
cmp
and
es
xchg
and
std
cltd
movsb
xchg
movsb
test
and
sahf
push
es
int3
dec
sbb
sub
mov
cmpsb
ja
in
xchg
and
cwtl
dec
add
gs
push
sbb
adc
xchg
or
inc
cmp
shr
cmp
push
pop
mov
push
and
adc
into
shll
mov
sub
sahf
cli
pop
imul
sub
pop
push
je
iret
hlt
add
fcmovb
and
xor
ljmp
sti
mov
out
or
es
sti
sti
cwtl
xlat
aas
mov
mov
mov
int3
les
xchg
push
jnp
fldt
push
adc
jge
fwait
popa
and
jl
jle
movsl
mov
or
lds
std
clc
jne
adc
pop
mov
fisttps
push
xchg
jb
push
inc
and
inc
movsb
lahf
jecxz
loop
inc
loope
and
loop
stc
loopne
icebp
jl,pt
fs
js
sub
pushf
mov
cmp
mov
or
mov
mov
decb
out
stc
imul
ret
dec
add
xchg
lret
xor
adc
sub
xor
into
fucomi
loopne
cmpsb
push
pop
mov
pminsw
sub
or
andl
in
addb
je
cmp
sbb
push
sub
pusha
stc
lods
mov
cmc
inc
pop
pop
xchg
push
sub
and
push
mov
clc
or
ret
loop
pop
inc
jge
mov
aas
mov
jl
movsl
rcrl
fcoml
push
ret
je
imul
mov
scas
pop
jle
sub
and
cmp
lock
push
js
cmpsb
fsub
bound
pushf
bound
fisttpll
fwait
rcrl
lahf
xor
xchg
fbstp
icebp
dec
xchg
mov
dec
ret
sub
xchg
insl
int
inc
jmp
or
push
stc
sub
push
dec
cmp
or
ljmp
sbb
mov
aam
or
push
std
faddl
cmpb
jg
mov
adc
cmc
fidivs
push
xor
xchg
into
icebp
loop
mov
mov
outsl
in
popa
mov
adc
push
gs
cli
decl
push
das
xor
ret
daa
loopne
ljmp
mov
jnp
clc
dec
dec
mov
sub
mov
fildll
mov
bound
inc
gs
cs
jbe
popa
push
sub
pushf
insl
inc
stos
adc
adc
sub
or
dec
or
xchg
xor
mov
popf
sbb
dec
cmp
mov
or
cli
pop
push
dec
cld
ljmp
aam
ret
mov
jecxz
lcall
cwtl
fstpl
adc
fnstcw
lea
arpl
stos
ret
sbb
push
mov
mov
testl
test
jp
inc
rcl
cmp
subl
cmp
pop
cmp
in
dec
inc
gs
inc
push
pop
daa
insb
imull
pop
sti
lods
adc
in
cltd
adc
adc
adc
je
xor
cmp
jnp
xchg
repz
in
sbb
mov
jmp
lret
jnp
mov
int
sbb
je
lock
and
sbbb
xor
jl
cmp
in
dec
lahf
pushf
jmp
mov
inc
mov
sbb
orb
lods
rcrb
out
xchg
dec
push
pop
ret
jnp
pop
ud1
xor
sub
arpl
jmp
lret
pop
jmp
and
push
mov
xchg
add
inc
in
sarb
push
movsl
dec
sub
xchg
cmpsl
movsb
pusha
shrb
mov
fwait
push
cli
mov
ret
aaa
push
daa
xor
ja
shl
xchg
xlat
mov
dec
jl
sbb
jne
sub
scas
jp
inc
mov
outsl
roll
sub
pop
push
lret
dec
scas
in
clc
xor
out
push
pop
xor
int3
mov
imul
scas
cmpsb
not
mov
sbb
lahf
dec
pop
fwait
mov
in
pop
sub
sbb
mov
insl
push
add
ficoml
scas
mov
pop
insb
test
pop
xchg
dec
sbb
nop
mov
fildll
adc
inc
mov
cmp
xor
in
xor
mov
sub
inc
ja
decb
stos
stos
loope
mov
popf
cli
repz
daa
adc
push
cltd
xor
sub
sarb
dec
sarl
xor
or
adcl
jmp
dec
cmc
icebp
andl
sbb
dec
xchg
movsl
pop
mov
adc
fdiv
aaa
cli
pop
xchg
pop
xchg
scas
test
mov
fsubr
mov
dec
cmpsl
jp
scas
push
cmpsb
mov
and
loope
mov
dec
mov
orb
pop
mov
loop
test
repnz
add
stc
and
insl
stos
orl
xchg
arpl
js
or
in
xchg
dec
sbb
push
sbbl
inc
mul
shrl
lret
pop
push
cs
jbe
inc
sbb
repnz
ret
in
xlat
xchg
sbb
fdivr
mov
mov
ja
adc
outsb
cmc
aas
and
xchg
pop
scas
fcmove
ret
dec
lock
pop
mov
loope
lret
xchg
lods
cld
dec
ja
pop
add
fmuls
pop
jle
mov
xchg
shll
jg
lods
mov
add
stos
and
mov
dec
rorl
adcb
loope
lret
hlt
push
add
js
xor
dec
pop
sbb
fdivrl
ficoml
or
mov
pop
into
iret
sbb
sub
movsl
dec
loope
or
xor
arpl
push
fiaddl
xor
outsb
out
dec
icebp
daa
pusha
int
negl
lret
xchg
jg
jb
cmp
xorb
dec
add
popf
push
test
ficomps
or
mov
cwtl
outsl
adc
sbb
jbe
jo
in
xchg
movsb
jbe
mov
push
std
outsb
fisttpl
insl
mov
inc
test
call
ja
mov
mov
mov
mov
lahf
add
sub
add
lds
testb
mov
mov
lcall
cmpsl
ss
sub
pop
outsb
rcrl
cmpsl
das
ret
shrb
stos
sbb
lret
sub
add
sti
and
mov
bound
pop
or
lcall
xchg
lea
es
or
mov
lods
add
xchg
xor
fwait
popa
mov
enter
ljmp
add
dec
outsl
fildll
cmc
scas
sti
imul
enter
jg
inc
xchg
jmp
sbb
cmp
lods
xchg
jne
cmp
ficoms
fdivrs
inc
inc
xor
insb
sub
add
outsb
xor
lahf
xor
out
sub
pop
dec
dec
mov
fcmovbe
mov
mov
pop
daa
mov
sub
lret
lods
popa
fldenv
or
test
adc
stc
in
mov
pusha
in
cld
test
repnz
sarl
inc
je
push
push
xlat
pop
xor
jp
mov
in
idivl
movsb
idivl
nop
push
pop
test
pusha
outsl
adc
pushf
xchg
inc
andb
hlt
mov
adc
fisubrl
lock
sub
mov
push
pushf
mov
xor
mov
in
inc
arpl
mov
xor
or
js
xor
sbb
lods
in
fs
scas
mov
das
popa
mov
jae
add
adc
ljmp
jo
insb
pop
shlb
insb
fistpl
roll
leave
pop
pop
out
movsb
sub
pop
and
mov
pop
add
roll
jae
adc
sahf
nop
dec
cwtl
repz
leave
ds
stc
ret
xor
je,pn
and
imul
sub
shlb
xor
iret
cmp
out
les
mov
adc
mov
jp
nopl
or
push
fildll
stos
xchg
ja
or
sub
ret
pop
push
push
or
inc
mov
push
out
adc
jnp
test
xor
jne
or
mov
mov
push
jae
xchg
push
dec
shrl
mov
daa
cmp
jo
shrb
sub
adc
push
adc
jnp
lret
push
inc
cld
clc
cmp
out
cli
lock
and
aaa
or
pop
xlat
or
mov
xor
adc
lods
push
sbb
pop
mov
repnz
outsb
inc
push
jbe
adc
adc
cmp
cmp
in
and
mov
out
fldt
std
fwait
and
cld
andb
mov
int3
and
push
push
cld
scas
lcall
sbb
hlt
or
sbb
pop
add
call
jp
inc
adc
push
inc
adc
lahf
test
lcall
mov
andl
adc
jle
jmp
outsl
repz
push
and
shll
popf
aaa
and
mov
xchg
test
add
paddq
cmc
adc
xchg
pusha
mov
xor
inc
lahf
add
pop
cmp
movsb
mov
scas
stos
mov
cmp
popa
jbe
add
xabort
xor
stos
pusha
fadds
push
out
xchg
data16
into
int
mov
arpl
inc
adc
addr16
jo
mov
clc
stc
std
in
dec
sbb
pop
pop
fcomps
pop
xchg
icebp
aad
inc
xor
insl
outsl
scas
les
test
mov
adc
and
mov
cmpsl
adc
rol
mov
es
mov
jp
sub
push
lock
das
and
push
and
lret
jne
fmuls
xchg
scas
mov
xor
pop
loop
jns
ret
ret
cmpl
in
sti
es
dec
pusha
or
sbb
and
jmp
loope
adc
sbb
inc
into
pop
cmc
or
sub
repnz
xor
dec
les
and
andl
adc
cmp
js
adc
lret
jae
and
int
or
sbb
lds
sbb
arpl
enter
sbb
sbb
pop
std
xor
cli
sbb
fs
add
cmp
mov
dec
mov
cmp
lcall
enter
mov
fisttpll
fwait
aas
mov
mov
push
pop
mov
jp
dec
xchg
dec
je
rcrb
cwtl
ljmp
mov
js
and
lcall
test
inc
xchg
adc
sbb
sbb
and
lret
movsl
xor
je
push
xor
test
div
nop
xor
sbb
xor
mov
inc
es
call
shrl
iret
cmp
adc
ret
push
push
xor
ret
jo
jp
xor
negl
and
jnp
repnz
fcoms
dec
loope
add
or
fldln2
mov
int
push
sub
ljmp
add
cli
and
mov
pop
mov
fwait
adc
outsb
pop
push
sbb
xchg
pop
leave
jmp
lcall
in
jmp
in
fnstenv
cmp
push
mov
insl
add
out
out
jo
push
int3
es
mov
jne
rclb
cmpsl
sbb
test
add
ljmp
popf
pop
fsubrs
stos
into
mov
jp
adc
and
movsb
sub
push
mov
addl
sub
cmc
test
stos
cmp
test
mov
jg
dec
int
dec
scas
jnp
xchg
or
lods
scas
cmpsl
jmp
shl
pop
or
sbb
fdivrs
rclb
in
pop
fs
or
movsb
push
or
jmp
aam
sarb
xor
mov
cmp
add
ret
push
mov
fsubs
into
test
inc
ds
ret
aad
cmp
dec
leave
lock
push
enter
xchg
add
cmpl
daa
adc
scas
popa
pop
push
mov
xor
add
leave
outsb
popa
pop
sub
sbbb
push
pop
movsl
mov
jae
xor
loop
adc
insb
cmpsl
daa
aas
sarb
add
xor
repz
adc
pop
pop
andl
pop
inc
movsb
xlat
into
and
rorb
mov
adc
add
ja
idivb
mov
mov
cmp
cmp
dec
pop
mov
push
pusha
lods
jno
aam
xor
mov
int3
ds
cld
add
fsin
fwait
jmp
fwait
inc
adc
jae
jb
dec
inc
mov
fistpl
lret
scas
scas
scas
mov
into
pop
cmp
test
push
or
test
gs
xchg
dec
insb
adc
clc
stos
cmp
dec
repnz
bound
cld
sar
jne
cmpsl
sub
pop
push
pop
gs
ss
jnp
dec
or
fidivl
js
inc
aas
adc
arpl
cmp
dec
mull
or
dec
insl
and
dec
rcrb
push
add
shr
pop
cld
pop
fdivrl
or
fcomps
or
adc
sub
mov
stc
idivl
fsub
daa
xor
pop
mov
adc
jnp
dec
enter
gs
adc
rclb
mov
jo
mov
jge
int
push
shrb
mov
pop
out
stos
cmp
push
stos
dec
mov
xchg
adc
shl
add
lods
fisubl
mov
sub
daa
mov
xchg
pop
sub
test
push
adc
pop
cld
or
movsb
leave
aas
cmpsb
push
sbb
cmp
mov
sub
dec
mov
jnp
or
jmp
add
fiaddl
mov
andl
push
jns
subb
addr16
mov
in
dec
pop
scas
into
es
cmpl
test
dec
jne
cwtl
mov
jns
stc
cld
out
or
pop
cmp
add
jne
pop
es
int
daa
cli
add
sbb
aad
stos
cmpsl
push
clc
fiaddl
xchg
cmp
ljmp
mov
cld
inc
jo
scas
sbb
pop
nop
in
xchg
xchg
fiaddl
push
or
adc
or
sub
ja
xchg
push
mov
int3
mov
xchg
idivb
pop
xor
mov
sub
stc
rcr
add
dec
js
mov
lret
push
xchg
int3
shl
jnp
in
enter
leave
std
pop
imul
xchg
neg
cmpsb
mov
int
lds
lahf
mov
mov
mov
dec
aam
gs
xchg
cmp
xchg
insb
mov
into
mov
int3
sti
pop
out
mov
mov
cltd
leave
and
mov
push
sbb
imul
gs
loopne
les
xchg
add
jecxz
xadd
inc
test
outsl
fwait
jge
or
ds
insb
xchg
inc
cmp
loopne
cltd
dec
test
push
and
mov
incl
das
orb
fnsave
push
repnz
xlat
and
mov
xchg
sbb
pop
fldcw
add
cmp
sbb
cmp
shr
in
mov
lods
fcoms
xlat
fisttps
push
mov
jb
ret
dec
arpl
pushf
push
add
and
jae
call
sub
add
jo
lock
inc
fisttps
stos
adc
push
pop
cmp
nop
lret
adc
cmp
push
add
mov
cmp
xlat
sbb
notb
jl
add
jno
fmull
mov
or
loop
xor
pop
mov
jmp
mov
shl
les
lea
mov
std
pop
inc
jmp
xchg
fistpl
pop
push
mov
push
inc
pop
loope
push
pop
and
pop
cld
sub
outsb
fcomip
or
xchg
outsb
bound
xchg
daa
repz
ja
jno
xchg
add
pushf
leave
jg
pusha
sbb
sub
pushf
push
or
pop
jmp
cmp
xchg
loop,pt
add
inc
shll
mov
fisttpl
mov
pusha
cmc
cmc
nop
mov
push
mov
cld
mov
fstpl
ds
dec
adc
inc
lret
mov
mov
sbb
es
jmp
cmp
mov
fistpl
xchg
sub
insl
mov
lods
mov
sub
daa
popa
lods
jbe
and
pushf
shlb
sbb
xchg
mov
lcall
pop
outsb
negb
or
cmp
mulb
test
jp
xor
cmp
add
and
fisubrs
jle
mov
insl
out
xchg
outsl
loop
ret
cmp
cmp
mov
push
push
imul
jl
scas
inc
jmp
pop
ja
mov
orb
mov
xchg
jno
jmp
out
pop
inc
push
and
fdivp
mov
fcoml
pop
pop
insl
movsl
ficoml
mov
mov
dec
in
popa
inc
xor
nop
mov
std
jo
addb
rorb
hlt
ljmp
adc
test
push
sbb
loopne
push
and
dec
mov
push
or
fwait
mov
nop
jg
mov
fs
sbb
add
lret
dec
mov
dec
call
out
or
mov
imul
int
stc
add
sub
jg
mov
dec
mov
dec
js
cmpl
das
jl
dec
fstps
rcrl
sbb
add
push
mov
adc
push
mov
out
movsl
pop
out
xlat
mov
sbb
xor
fs
loop
mov
inc
ss
out
ds
pop
addr16
dec
push
loope
movsb
adc
mulb
mov
and
xor
loop
inc
cmc
mov
test
sub
lods
subps
stc
mov
addr16
sbb
xor
cmp
sub
mov
addb
sbb
fld
mov
xorl
cmpsb
dec
cmp
and
mov
ret
jne
popa
mov
daa
les
andl
jnp
lds
lcall
int3
lock
mov
xlat
pop
push
orb
lods
push
push
negl
fwait
lods
in
fwait
mov
mov
insl
mov
push
fiadds
adc
xor
push
call
xor
int
push
icebp
in
sbb
add
fsubl
cmc
add
xor
mov
add
push
pusha
sti
or
iret
jne
sub
and
fstl
fists
pop
xchg
bound
clc
cmpb
inc
std
jge
mov
fadd
out
popa
loopne
mov
sub
ret
gs
je
fidivl
lds
jp
mov
jns
ds
xchg
pop
ss
jmp
aaa
in
loop
xor
cmpl
in
ss
jecxz
movsb
push
icebp
iret
orl
aam
sbb
insb
jp
xor
or
jnp
mov
mov
fisttpll
ljmp
in
push
data16
movsl
sbb
mov
sahf
jae
rcrl
out
fisubs
push
cld
outsb
push
aam
mov
mov
sbb
mov
lds
sbb
in
scas
xchg
int3
ljmp
xor
inc
pop
fsubrl
call
push
cmp
aad
sub
rolb
inc
negb
repnz
mov
xchg
es
adc
sub
data16
jmp
incb
pop
cmp
sbb
pop
xchg
and
pop
stos
mov
sti
xlat
inc
push
mov
loop
or
movsl
push
pop
rep
sub
or
lret
xchg
lret
ds
jne
shr
mov
sbb
pop
or
shlb
cmc
push
fld
pop
jno
push
add
addb
mov
popa
orb
inc
in
iret
pusha
add
orl
ficoml
pop
add
xor
stos
inc
and
inc
mov
scas
add
out
loope
mov
or
add
jo
enter
mov
cld
and
sub
test
jnp
jae
imul
lcall
stc
sbb
add
dec
out
insb
loop
test
stc
mov
daa
xchg
ja
xor
mov
push
enter
jno
inc
enter
cmp
les
push
jp
sub
or
movsl
or
gs
xchg
test
out
mov
xor
dec
xor
je
lock
fscale
cli
mov
nop
cmpsl
mov
adc
inc
push
test
mov
imulb
jo
fidivrl
fbstp
leave
popf
adc
outsb
mov
mov
int3
add
dec
cld
dec
xchg
jmp
mov
imul
xlat
ljmp
jno
add
popf
or
test
pop
lds
mov
adcb
xchg
jle
subl
insb
std
add
inc
jp
jge
mov
negb
scas
cwtl
mov
sbb
jnp
vpunpckldq
stos
iret
sbb
pop
lds
out
jl
sub
not
and
inc
and
dec
cmp
inc
movsb
das
cs
out
test
or
jae
mov
test
repz
push
gs
fisubl
dec
rcrb
das
dec
cmp
loop
and
or
pop
incb
fldt
enter
lock
xor
inc
ljmp
cmpsb
add
jae
push
mov
inc
les
test
sub
pop
loopne
xor
out
test
inc
push
es
xchg
das
mov
cmp
lret
int3
xchg
lret
ja
in
xchg
fdivrs
popa
out
bound
cld
orl
fcmovb
shl
dec
pop
subl
push
mov
stos
cmpsl
jmp
jb
and
fcmovnu
mov
sbb
and
out
or
push
fcompl
scas
cltd
dec
sbb
fwait
jno
cld
in
mov
insb
xor
testb
pop
aad
inc
or
inc
int
aaa
imulb
mov
inc
pop
or
push
out
push
add
test
popa
pop
subb
fbstp
sub
cmp
mov
pop
pop
sbb
jmp
xchg
loope
sbb
pop
into
xor
cmp
vsqrtss
scas
xchg
dec
cmp
xchg
daa
jl
clc
stos
dec
jo
fisubl
and
adc
cmp
insb
testl
out
pop
push
out
pop
jge
lock
iret
push
enter
mov
pop
mov
jl
xor
jmp
dec
bound
cmpsb
hlt
in
movsl
adc
push
sbb
cmpl
xchg
cmovbe
add
hlt
loope
mov
das
ds
lods
repz
dec
push
cld
mov
cld
jae
sub
pop
daa
pop
or
cmpsb
push
mov
test
jmp
xchg
dec
js
sub
push
add
jg
mov
xchg
push
icebp
xchg
jb
out
cli
inc
fisubrs
fdivr
xor
stos
xchg
push
nop
and
mov
mov
jb
enter
enter
and
sbb
xchg
fxch
xor
iret
das
fprem
mov
pop
lahf
repz
sub
dec
rolb
je
push
and
imul
inc
js
push
xor
pop
push
movsb
push
movsb
pop
js
ss
pop
mov
sub
xor
leave
lahf
jmp
lea
enter
outsl
cli
rorb
mov
mov
inc
enter
fimull
xor
sub
std
or
out
mov
je
push
pop
push
adc
jno
inc
push
les
and
mov
les
inc
into
fwait
stc
repnz
std
aaa
ss
pop
inc
inc
jge
mov
adc
sub
inc
or
push
xchg
fwait
imul
sbb
mov
out
add
xchg
xor
sbb
adcb
inc
stos
xor
cwtl
fcomp
jb
dec
dec
mov
ror
mov
mov
adc
leave
dec
pop
rorw
in
loope
xchg
sub
test
cmpl
mov
dec
mov
fimull
jl
in
xchg
add
orb
bound
mov
insb
cmpsb
mov
loope
xor
inc
mov
adc
inc
das
pop
cmc
and
or
rorb
fiadds
insl
xor
add
pop
adc
or
cmp
jle
in
jle
cmp
fs
ja
and
insl
sbb
jae
pop
divb
cli
cmp
and
mov
jl
sbb
dec
icebp
ror
cmp
sbb
sub
in
mov
jo
sbb
leave
inc
pop
mov
and
sub
mov
or
or
jb
mov
inc
dec
adc
jae
add
movsl
mov
mov
xchg
push
mov
mov
sub
insb
sti
push
xchg
shlb
jle
add
xor
lret
jle
imul
cmp
mov
subb
inc
ljmp
adc
inc
push
mov
test
inc
repz
loopne
enter
inc
bound
adc
mov
popf
push
dec
sahf
or
cwtl
sahf
inc
adcb
push
cmp
out
cmpsl
das
mov
popf
jg
vpinsrw
movsl
push
ljmp
notb
movsb
adc
loope
dec
pop
repnz
movb
and
inc
bound
dec
xchg
pop
mov
cmp
mov
and
adc
cwtl
repnz
push
mov
movsb
cmp
outsl
jbe
fsubrl
or
jae
pop
xor
int3
push
test
or
jnp
mov
push
int3
sti
mov
test
jb
adc
outsb
xchg
mov
aaa
cmp
addr16
xchg
aam
xchg
scas
adc
or
and
or
jmp
xchg
dec
inc
orl
fcmovbe
mov
add
aas
leave
insb
outsb
push
cld
cs
sbb
daa
add
bound
bound
jge
fs
push
mov
filds
jno
movsb
outsl
loopne
minps
enter
aad
rorl
cmp
dec
push
stos
xchg
or
jno
sub
aad
cmp
leave
movsb
test
add
pop
mov
bound
nop
je
mov
sub
jbe
pushl
incw
adc
inc
subb
push
shll
scas
cli
test
mov
xchg
jns
ja
outsl
sub
cwtl
cwtl
stos
lods
cmp
test
inc
popl
inc
clc
hlt
cmp
test
cmpsl
es
fs
test
jg
jae
das
int
dec
pusha
aad
enter
mov
mov
fldl
test
inc
stos
sub
sbb
xchg
cld
push
iret
pextrw
and
bswap
jl
jnp
xor
pop
jg
push
inc
pop
sbb
adc
jle
jo
pop
mov
sbb
pop
lret
ljmp
push
idivl
xor
jl
rolb
fistl
push
shrb
lods
sbb
inc
mov
adc
mov
repnz
pop
pop
sub
cmp
dec
sti
mov
orl
lcall
mov
outsl
push
dec
push
adc
jno
push
je
pop
add
cld
sbb
cmp
scas
jge
mov
cwtl
add
je
and
push
loopne
sbbb
fcomps
lds
ret
out
out
mov
jmp
shlb
popf
dec
iret
roll
mov
cmp
aad
lock
push
sub
repnz
adc
push
cmp
push
fildl
pop
sub
mov
imul
jbe
call
jmp
popf
sahf
aas
mov
data16
pop
xchg
dec
mov
add
imul
pop
cmp
lea
mov
rolb
bound
inc
fistpll
repz
sub
xchg
mov
mov
loopne
or
mov
aam
cli
pop
xchg
out
sub
xorl
je
mov
ds
mov
imul
sub
cli
mov
adc
push
sti
and
shl
ja
sub
pop
xchg
dec
mov
data16
sbb
icebp
jmp
mov
fnsave
or
adc
mov
sbb
iret
inc
aam
test
dec
adc
imul
cs
cmpsl
dec
or
stc
xor
mov
loop
in
in
lods
xor
mov
sub
inc
sbb
push
nop
or
mov
push
fwait
mov
sub
ficoml
ja
dec
pop
xor
mov
cld
js
in
fisubl
add
adc
lods
dec
jb
and
pop
xchg
and
inc
jne
mov
fmuls
mov
lock
outsb
shll
or
std
jb
ret
mov
sbb
mov
sti
mov
dec
addb
pop
push
hlt
sub
aam
les
test
dec
fidivrs
sbb
jo
lods
out
test
pushl
movsl
cltd
mov
add
test
repz
sbb
sub
xchg
push
mov
ljmp
icebp
scas
ljmp
mov
into
mov
xchg
mov
cmc
push
pop
sub
ficoml
loope
divb
daa
jg
test
shr
or
ja
dec
jns
test
cmc
std
push
repnz
jo
or
push
iret
jmp
xchg
ja
mov
mov
aad
mov
fwait
inc
scas
adcl
xor
testl
fidivrl
pop
pop
or
xchg
mov
lret
adc
pop
add
cmpsl
mov
cmp
repnz
mov
fucomp
add
inc
cmp
sbb
into
mov
xor
inc
pop
adc
scas
and
mov
or
sbb
stc
xchg
and
push
clc
cmpsl
shll
inc
xchg
ljmp
adc
hlt
adc
mov
lods
and
push
sub
cmp
jp
arpl
xchg
das
adc
jns
sub
mov
imul
clc
lea
aad
aad
shrb
inc
les
inc
pop
std
pop
jecxz
fimull
mov
pop
cli
nop
lods
cmc
xchg
test
and
sbb
jle
pusha
mov
cli
xchg
sbb
sub
in
push
fprem
mov
push
imul
push
inc
in
xchg
leave
mov
inc
cwtl
call
sbb
ljmp
imul
mov
dec
push
sub
add
outsb
lret
xor
mov
imul
lea
inc
fdivl
test
jg
xchg
adc
pop
xor
in
jecxz
sbb
inc
mov
leave
inc
pop
dec
daa
jp
sub
int3
cmpsl
fsubs
mov
dec
popa
xchg
and
pushf
xor
rcrb
and
pusha
lods
lret
mov
cmp
fucomip
lds
mov
mov
mov
ja
aad
pop
movsl
mov
aaa
mov
into
mov
pop
or
sbb
adc
fwait
scas
stos
es
ret
out
insl
dec
fs
ret
outsl
add
call
inc
add
jge
mov
int3
test
scas
jp
pop
lret
aas
jl
adc
cmp
out
xchg
in
xchg
outsl
inc
out
call
mov
lahf
scas
add
dec
pop
dec
bnd
enter
inc
adc
jg
push
xor
pop
sbb
lea
cmp
popl
imul
adc
push
pop
ljmp
inc
aas
dec
lea
in
fs
and
fisttpll
push
sub
xor
cli
xchg
andl
addb
lret
push
loope
fldcw
xor
jne
push
cmpsb
pop
xor
fistps
xlat
mov
cmp
dec
pop
fstpt
loopne
bound
mov
and
push
fs
cs
out
clc
adc
ret
insl
mov
push
inc
cmp
dec
mov
lret
add
push
imul
int
mov
cmp
sbbl
mov
icebp
aaa
push
sub
bound
leave
jne
jle
out
cs
mov
int3
negb
push
sbb
xor
iret
push
sub
bound
jo
push
mov
scas
stos
sahf
cltd
jb
jecxz
add
xchg
icebp
sahf
push
cmp
sahf
jg
lods
sbb
imul
push
mov
mov
xor
ret
jb
fidivrs
mov
and
and
aaa
xchg
adc
sarb
adc
dec
test
jg
inc
jle
imul
jnp
nop
cmp
jne
sbb
fsubrs
daa
test
push
mov
xor
mov
aaa
push
mov
jno
sti
in
mov
test
add
icebp
jnp
aad
jns
xchg
loop,pt
dec
jge
mov
jecxz
cltd
ss
push
add
pushf
jp
aas
dec
cli
dec
and
pop
add
sub
jp
popa
adcb
into
xchg
fnstcw
mov
cld
push
icebp
rcll
jle
mov
rorl
pop
mov
in
jl
push
cmpsl
aam
adc
aaa
adc
jbe
dec
dec
mov
mov
mov
mov
movsl
mull
iret
repz
iret
xor
fwait
ss
stc
mov
mov
jge
xchg
imul
or
repnz
imul
push
cmp
and
mov
pop
mov
push
repz
lock
shlb
inc
ud1
mov
jl
ja
addl
sbb
push
pusha
nop
xchg
mov
cmp
push
out
stos
xchg
and
gs
fnsave
mov
mov
js
data16
dec
bound
push
dec
inc
pop
inc
out
sbb
mov
xchg
cmp
push
add
out
or
sti
leave
test
test
test
mov
adc
mov
xchg
stc
in
repnz
push
xchg
push
xchg
adc
pop
adc
sub
repz
pop
sub
ds
sbb
mov
leave
dec
xchg
pusha
push
and
in
clc
push
clc
sbb
mov
jecxz
out
movsb
mov
clc
bound
call
fwait
sub
push
mov
jnp
sbb
movsb
sub
xor
xlat
scas
movsl
xchg
jp
ds
add
push
sbb
sti
sub
xchg
push
test
iret
lret
lret
cmpsb
test
mov
pushf
hlt
ds
enter
stos
sub
daa
jno
cwtl
xor
mov
xchg
dec
fbld
in
sub
mov
and
ljmp
into
pop
jb
xchg
je
fs
clc
outsl
sub
mov
push
iret
and
incl
push
cli
movsb
and
or
cmp
orb
xorb
xchg
cmp
shr
dec
mov
ljmp
pushf
lret
or
in
repnz
xor
aam
rclb
in
sar
mov
mov
adc
movsl
aam
xchg
jecxz
push
add
je
add
sbb
aaa
pop
push
adc
in
mov
addl
enter
int3
add
fcmovnbe
xor
scas
aad
push
xchg
repz
rorb
xchg
or
sbb
mov
sub
sahf
push
pop
pop
pop
jne
and
ds
xchg
shr
cmp
test
outsb
aas
sbb
or
jmp
repz
inc
cli
mov
push
push
ret
sub
pop
loope
aad
iret
ljmp
shlb
and
fimull
jae
mov
js
decb
fs
jne
mov
fs
fdivr
das
fld
inc
jl
jecxz
shrl
pop
mov
sbb
jmp
outsl
and
mov
cmp
cmpsb
repz
jl
or
stc
mov
mov
scas
and
cmp
xchg
clc
and
lock
mov
stos
pop
cmp
call
cli
dec
dec
out
sub
popa
add
dec
cmp
data16
and
lods
lret
ror
imul
pop
add
dec
xchg
out
cmp
xchg
lods
xchg
pop
sub
xchg
cmp
adc
pop
pop
adc
xor
les
and
stos
cmp
insb
sub
add
ja
loopne
mov
movb
lods
adc
adc
inc
and
pop
mov
mov
xchg
loop
push
fbld
adc
nop
shr
xchg
mov
jb
jbe
sbb
push
jmp
icebp
fidivs
rclb
ror
repz
mov
les
mov
addr16
sub
or
cmc
dec
push
mov
outsl
dec
sbb
movsb
negl
mull
bound
xorb
jns
pop
aas
mov
xchg
jno
push
jp
sbb
sbb
inc
add
pushf
xchg
mov
push
dec
mov
pop
xchg
sbb
fiadds
cmp
cmpl
add
and
fnstcw
ja
test
sub
popf
jge
out
nop
pop
sarl
xor
xchg
stos
pushf
dec
add
ss
adc
in
lahf
xor
pop
daa
adc
hlt
jo
cmp
lock
inc
xchg
push
lahf
dec
mov
push
fistpl
mov
pop
add
add
ret
cmovp
jecxz
out
outsb
lahf
mov
adc
or
js
adcl
pusha
scas
mov
pop
mov
outsb
add
lahf
popf
fcompl
fildl
aam
mov
mov
leave
pop
fwait
cmpsb
sub
sbb
popf
test
int
ljmp
xchg
add
aam
arpl
sbb
repz
cmp
mov
ret
imul
inc
and
out
aam
xchg
cmc
int3
xchg
cmpl
test
notb
add
out
rolb
jp
xchg
mov
das
es
cmp
xor
stos
xor
int
aam
cmp
push
mov
mulw
shll
fwait
aaa
mov
or
stos
das
cmp
fisubs
les
enter
sub
int3
add
pop
jp
jns
sbb
sbb
fcoms
jg
sbb
bound
js
enter
lret
add
ffree
mov
das
mov
jno
stos
pop
outsb
out
int
addr16
fst
inc
fsts
and
inc
and
jns
push
lret
jle
fistpl
fadd
xchg
out
sbb
xchg
xor
gs
fsubrl
xor
mov
xor
cmp
imull
or
mov
addr16
addr16
scas
ret
xchg
bound
jb
jae
sahf
mov
lea
rorl
dec
test
subb
or
pop
in
je
mov
sbb
xor
leave
jle
flds
cmpsb
and
scas
push
jge
stc
ss
gs
adc
inc
mov
stc
push
test
outsb
cmp
sbb
pop
inc
testl
popf
dec
sbb
out
out
pop
inc
int
push
lret
rcll
faddp
cmp
clc
push
pusha
adc
in
mov
nop
sub
adc
inc
push
cmp
cmp
fiaddl
and
jl
cmp
inc
call
loopne
insb
pushf
pop
push
xchg
jp
mov
sub
jge
test
hlt
sbb
mov
cli
inc
movsb
sbb
test
jno
adcl
idivl
popf
jp
imul
mov
mov
xchg
hlt
sbb
mov
es
cld
mov
ljmp
or
js
jbe
add
fs
fs
cmp
jg
sbb
mov
jns,pn
mov
sahf
adc
xchg
sbb
mov
lock
inc
movaps
pop
insb
cmpsb
adc
das
sub
gs
jb
jo
ss
dec
jmp
into
sub
repnz
sub
imull
aaa
push
mov
xchg
mov
dec
xchg
and
jb
pop
sarb
mov
repz
xlat
cwtl
scas
aaa
je
mov
adc
adc
ficomps
push
mov
jo
sub
mov
stos
jns
mov
fnstcw
data16
sti
xor
xor
hlt
adc
push
push
inc
cld
sti
xchg
mov
cltd
or
mov
repz
push
dec
push
test
jb
sbb
pusha
sbb
cmp
mov
add
pop
xor
mov
cmp
mov
shlb
in
sbb
xchg
add
jmp
xchg
mov
dec
loop
in
aas
sub
outsb
dec
add
and
test
pop
test
adcl
clc
lds
xchg
ds
or
test
jbe
hlt
and
cmpsb
sub
stc
shl
cli
mov
sahf
lret
call
jne
pop
rorl
imul
pusha
sub
sti
enter
xor
mov
cmp
stos
mov
loop
pop
push
xchg
repz
jno
ror
push
adc
sbb
xchg
ljmp
icebp
ret
fidivrs
int
cmp
push
sbb
fnstcw
and
aas
gs
pop
pop
ja
es
cwtl
out
enter
sub
xor
xor
or
out
jl
or
stc
push
lcall
loopne
push
mov
mov
dec
shll
je
mov
cmp
pand
clc
xor
mov
add
mov
mov
out
xchg
fiadds
pop
hlt
sub
push
push
pusha
pop
mov
imul
je
jg
jbe
loopne
into
rcr
xor
fucomi
out
out
pop
stc
mov
repz
xorb
out
dec
das
mov
pcmpeqd
in
jle
xchg
add
sbbl
js
xor
cmpsb
mov
divb
mov
popf
ficompl
sbb
and
cmpsl
in
sub
aaa
push
lret
imul
inc
pop
arpl
sbb
mov
roll
into
xchg
nop
xchg
test
outsl
shl
cmpsl
sub
ljmp
pop
loope
aaa
xchg
pop
or
fidivrs
jg
and
dec
repz
cmp
enter
cmpsb
xchg
mov
ret
mov
xchg
sahf
fs
jecxz
xchg
out
jns
std
loop
mov
in
ret
xor
and
push
out
sub
sub
add
sub
mov
jle
mov
lods
xor
out
inc
lahf
jl
aas
sbb
xor
repz
push
and
mov
repnz
add
xor
stc
dec
adc
je
or
cmp
cld
sub
loope
int
and
jno
xchg
inc
out
mov
cmp
inc
push
test
mov
daa
or
mov
loop
jnp
lods
mov
fcos
lahf
pop
xchg
inc
xlat
out
cwtl
adcb
push
add
fisttps
inc
mov
xor
sub
addr16
ds
loope
or
test
cmp
inc
ds
enter
mov
add
mov
dec
loopne
sti
stos
sbb
cmpl
mov
mov
ret
addr16
xchg
lahf
mov
push
mov
inc
jmp
loope
icebp
push
mov
xor
ret
sahf
sub
push
test
mov
or
mov
push
push
sub
jae
lcall
xchg
cmp
loop
in
test
mov
cwtl
cwtl
cs
out
aas
shr
mov
add
pop
and
sbb
daa
adc
ret
insb
sbb
cld
into
mov
pusha
ja
sbb
jge
stos
cmp
sbbl
and
add
ja
mov
and
sar
adc
xor
je
jo
adc
subb
inc
jmp
inc
iret
cmpb
inc
ljmp
push
add
callw
scas
in
mov
dec
scas
inc
lret
aaa
jge
aad
test
les
adc
xor
cmpl
aas
jp
aad
fsubr
stos
push
sbb
aam
and
test
or
idiv
lea
insl
jmp
inc
cmpsb
mov
cmp
shrb
cmp
add
pop
sub
xor
iret
leave
nop
ljmp
int3
in
mov
push
sbb
sub
int
cmp
in
xor
in
adcb
sub
mov
mov
dec
mov
jb
fnstsw
jns
daa
pop
dec
test
inc
cmp
inc
mov
adc
pop
insb
jo
fidivrs
jns
pushf
sub
mov
imul
mov
pop
std
xchg
jmp
and
jmp
xor
sub
jmp
or
sub
push
test
dec
inc
imul
xlat
sbb
sbb
xor
jae
jle
adc
xor
jmp
or
popf
ds
popf
pop
mov
fists
cmp
mov
mov
mov
mov
sarb
push
cwtl
insb
pusha
decl
fdivrl
shl
cmp
jno
mov
mov
lcall
cs
sbb
xchg
pushf
iret
lods
lcall
xor
lea
push
pushf
js
lea
jge
lods
in
insb
sbb
test
and
ds
push
sub
pop
adc
pusha
or
movsl
mov
mov
pop
imul
sarl
cli
mov
lcall
sbb
cs
push
movsb
cmp
insl
add
jge
aam
mov
inc
mov
or
pushf
scas
xchg
cmc
sahf
imul
mov
adc
xchg
in
mov
mov
inc
sub
sbb
jecxz
shrb
xchg
les
jae
push
lods
cmp
jbe
mov
lret
xchg
inc
addl
pushf
stc
dec
repz
inc
xchg
dec
enter
fwait
ljmp
test
fidivrl
sbb
fiaddl
add
cmp
or
push
xor
fisubs
cld
and
cmp
pop
and
repz
out
push
pop
mov
pop
sub
imul
pop
enter
sbbl
xchg
xchg
addr16
sti
into
push
loope
xor
adc
mov
sti
mov
add
xchg
dec
ja
pop
movsl
aam
inc
aam
push
cmp
pop
push
or
fnstenv
mov
cmp
scas
pop
psrad
add
cli
mov
ret
mov
fstpt
xchg
xchg
and
push
mov
jae
jbe
pop
jp
inc
inc
mov
sbb
leave
aad
insl
pop
jecxz
jle
test
aas
or
add
sbb
gs
loop
adc
cmp
hlt
mov
push
outsb
xchg
mov
sub
or
push
ret
inc
aas
pushf
push
push
lret
movb
mov
push
cs
sbb
inc
jecxz
shrl
pop
push
lret
mov
push
jl
xchg
outsl
int
inc
dec
cmp
inc
mov
xchg
sub
mov
xchg
inc
sbb
or
clc
push
loop
mov
ljmp
or
sti
mov
movsb
addl
mov
in
xor
push
sbb
nop
sbb
mov
jg
int
rcl
lods
mov
das
mov
jl
cltd
shrl
push
loope
cmp
loope
aam
add
jl
rol
jecxz
orb
xor
add
xchg
mov
scas
cld
fcmovu
ja
adc
sub
adc
repnz
repz
lock
repz
in
mov
leave
xor
mov
into
and
out
cmp
in
cmp
xchg
test
and
cmp
adc
cmp
hlt
cmp
mov
pop
mov
pop
fpatan
out
popa
in
add
jbe
sub
cli
pop
jnp
out
xchg
inc
adc
scas
iret
inc
jle
cld
lret
jecxz
push
sbb
out
movsb
testl
sub
inc
jmp
aaa
les
cmp
jns
jle
adc
mov
add
mov
mov
shlb
pop
cwtl
pop
mov
lds
fmulp
test
data16
mov
clc
cld
sub
xor
mov
and
lds
dec
out
mov
stos
ficoms
mov
sub
test
pop
sub
mov
das
add
ret
and
lods
push
dec
fiaddl
jle
insl
hlt
xor
ds
adc
aaa
push
xchg
jbe
xchg
jg
popf
pop
lcall
stos
jl
orl
xchg
push
jecxz
pop
nop
xchg
or
lahf
pop
pop
push
lcall
decl
xor
into
insb
lahf
stos
pushf
mov
ret
mov
sarl
pop
popf
lds
ds
stos
and
iret
or
adc
mov
push
push
or
call
mov
push
lcall
add
stos
mov
js
and
pop
addr16
xchg
mov
stos
or
pop
push
bound
ficoml
ljmp
xchg
rorb
loopne
jb
or
out
xorb
int3
insl
fcmovnb
or
pop
orl
push
gs
enter
mov
jnp
fnstenv
mov
out
jp
xor
jg
cld
push
out
sub
sti
daa
jne
jo
mov
sbb
jns
scas
cmp
cmpsl
dec
jno
xor
out
nop
call
adc
insl
out
fadds
mov
push
shr
cmc
push
jo
imul
mov
adc
icebp
lods
into
popf
repnz
push
cmpsb
imul
cltd
mov
inc
shrl
jne
movsl
cmp
fldpi
sub
mov
stos
lcall
cmp
add
out
inc
lods
mov
push
jl
mov
clc
xchg
mov
lahf
or
test
pop
insl
ficomps
dec
in
pop
lds
push
inc
fidivrl
insl
stc
pop
inc
mov
fistps
jge
int3
sbb
out
jl
xchg
adc
pop
mov
popa
dec
jge
test
mov
ja
rolb
cmp
gs
mov
fildl
jp
ljmp
cmp
push
inc
cmp
mov
jns
adc
sbb
test
lods
xchg
inc
popf
testb
int3
int
cltd
testl
cmp
and
jbe
and
in
and
cmpsl
icebp
mov
pop
or
inc
xchg
mov
addr16
outsl
faddp
scas
xchg
cld
or
pop
push
adc
pop
out
mov
push
test
inc
adc
andl
cwtl
pop
test
mov
cmp
mov
sbb
sahf
cli
lods
jno
cld
pop
dec
mov
inc
imul
pop
pop
fcomi
jnp
test
fcoml
dec
cmpsb
jno
mov
lock
xchg
cwtl
lods
dec
and
incb
pusha
push
xor
pop
insl
push
inc
movsl
xchg
pop
in
mov
jp
fimuls
pop
fwait
fwait
lods
xor
mov
scas
xor
lods
in
mov
mov
mov
in
std
mull
and
loop
jle
sbb
ljmp
mov
pop
xchg
cmp
jg
test
data16
jo
jecxz
xchg
in
ja
stos
stc
repnz
adc
xor
mov
xchg
data16
dec
pop
adc
movsl
mov
je
fndisi(8087
push
add
xchg
xor
push
aaa
cmpsl
fwait
xchg
movsb
outsl
push
and
out
sbb
adc
mov
jl
fprem
pop
jns
add
clc
xor
cmp
hlt
jmp
mov
sub
pop
pop
imul
jp
lahf
rolb
or
xlat
and
push
xchg
outsl
mov
mov
adc
test
fmuls
test
shrb
jl
adc
cmp
sbbl
ljmp
sahf
lods
jne
dec
push
sub
cld
scas
cwtl
in
xor
addr16
insb
pop
push
into
imul
mov
test
push
add
fwait
mov
lahf
sbb
jb
jp
sbb
pop
popa
aas
gs
repz
adc
test
lret
rclb
jbe
or
mov
push
sbb
out
adc
das
add
inc
or
inc
loope
push
dec
repnz
dec
lods
xchg
popf
imul
movsl
cmpsl
mov
dec
popa
fwait
data16
adc
inc
and
sbb
leave
mov
xor
xchg
repz
jns
push
aas
es
and
adc
mov
pop
fisttpl
cmp
jp
js
mov
mov
out
cmp
inc
sbb
mov
dec
xchg
scas
je
jnp
lret
push
es
xlat
dec
fwait
lahf
int
rdpmc
pop
aam
mov
cwtl
lea
jbe
and
rorb
xchg
mov
inc
pop
cmp
arpl
pop
push
insl
lock
call
lock
sbb
dec
sbb
sbb
xchg
mov
push
icebp
cwtl
cmpps
or
xchg
push
jle
mov
mov
ja
add
mov
mov
adc
jl
xor
and
shlb
inc
insb
leave
lret
push
jno
sbb
lds
test
sbb
and
sbb
es
dec
cmp
jbe
pop
mov
xor
xor
xor
call
and
and
or
sbb
pop
lcall
inc
outsb
fsubrl
je
arpl
mov
pop
fsubrl
rclb
aas
add
sbb
add
jns,pt
out
jno
cs
inc
inc
loope
repnz
repnz
ss
cmpsb
mov
adc
gs
mov
mov
mov
stos
data16
and
push
in
pop
imul
daa
mov
jne
fadds
jp
cld
nop
pop
daa
or
std
enter
mov
cli
or
jno
bts
dec
push
outsl
pop
rcl
test
or
iret
lods
loopne
mov
sub
test
pushf
mov
ja
cli
insl
imul
cmp
xor
test
fcoms
lea
test
fwait
pmullw
inc
cld
adc
cli
rol
push
push
xchg
dec
shlb
pop
cli
je
push
lret
sti
push
adc
test
ret
or
out
xchg
xchg
lret
rcrl
push
inc
push
andl
hlt
rclb
rcrl
jnp
cmp
aad
fdivl
xor
test
rolb
add
push
pop
ficoms
test
leave
movsb
shll
sahf
pop
stos
inc
sub
fs
inc
pop
sub
push
cld
push
sarb
cmpsb
inc
mov
adc
push
mov
movsb
xor
sub
icebp
sti
ds
cmpl
inc
cmp
imul
hlt
fstl
lods
out
push
mov
int3
stos
imul
push
shll
dec
push
call
and
xor
jge
pop
insl
mov
push
or
jl
repnz
fcoms
data16
mov
xor
dec
inc
out
ret
or
fsts
mov
fs
xchg
call
pop
sbb
mov
mov
ljmp
orl
push
jae
or
and
repz
mov
loopne
lcall
adc
adc
icebp
jge
adc
jno
jecxz
imul
pop
mov
cmp
lret
mov
jle
dec
fmuls
mov
sbb
mov
ret
push
loopne
jecxz
stos
mov
and
xchg
cmc
adc
int
fadds
lret
std
jns
outsb
cs
sti
inc
cmp
sbb
cmp
jge
sub
or
jle
dec
jno
mov
and
mov
and
or
aaa
scas
rol
jecxz
dec
sbb
xor
or
cmp
push
test
jge
add
xchg
rol
out
in
jne
out
pusha
sahf
nop
mov
pop
stos
mov
pop
mov
jne
cmp
cmp
inc
push
jnp
mov
xchg
scas
imul
js
cmp
mov
pop
call
jl
cltd
notl
daa
dec
sub
pop
dec
pop
inc
lahf
or
push
ja
xchg
fldcw
jge
adcb
xchg
dec
or
enter
xor
sbb
fxch
dec
movsb
mov
inc
and
sbb
inc
daa
icebp
xor
dec
push
sub
out
lods
pop
adc
add
rcrl
mov
cmp
bound
pushf
sub
lahf
fldcw
stos
or
das
adc
xor
mov
and
mov
jg
xchg
cmp
mov
pusha
out
lret
jnp
dec
iret
add
orb
push
addr16
ljmp
fistpll
adc
in
notl
push
outsb
sub
mov
inc
adc
dec
xchg
dec
out
mov
out
cmp
or
hlt
push
enter
cmc
ja
or
jae
mov
les
pusha
iret
push
sub
imul
lods
cs
fs
cmp
jmp
xor
mov
cmpsl
mov
lock
cmpsw
addl
sub
mov
sahf
push
mov
std
std
xor
daa
mov
pusha
pop
cwtl
jns
sti
add
pusha
or
jmp
fmull
inc
xchg
aam
jnp
int
leave
adc
inc
imul
out
adc
jmp
pushf
push
jno
pop
je
testl
push
push
loop
test
pop
xchg
jp
add
js
xor
dec
pop
shll
adc
jl
mov
jb
je
popl
fcmovnbe
loop
sub
movsb
inc
mov
stos
inc
jnp
mov
push
lods
fbld
cmp
mov
mov
cmpsl
jno
or
sbb
adcl
add
nop
iret
lods
lret
dec
ja
sbb
lret
iret
push
pop
ret
push
sahf
shlb
sbb
mov
and
stc
inc
inc
outsb
push
ret
pushf
clc
scas
fwait
jns
fbld
push
mov
jno
icebp
out
xchg
repnz
mov
sbbl
fwait
mov
mov
subb
mov
movsb
cmp
mov
xchg
jmp
insb
lods
and
pop
bound
insl
dec
lret
cmpsl
mov
add
btc
jne
jg
mov
sti
bound
in
gs
mov
cmpsb
dec
jmp
xchg
popa
inc
xor
cmp
rorb
lret
pop
sbb
xchg
in
push
dec
aad
xor
jp
inc
cmp
sub
pop
scas
mov
jne
mov
or
inc
loopne
sahf
arpl
loop
std
ja
ret
std
pop
mov
jo
ds
push
add
sub
sti
push
push
or
push
and
scas
add
xchg
sub
add
sub
adc
mov
hlt
jle
mov
jnp
xor
shr
jecxz
mov
jle,pt
inc
pop
or
sahf
into
cmp
or
dec
pop
dec
lock
xor
dec
push
loop
and
add
mov
popa
xor
mov
rorb
jge
pop
jmp
pop
popa
in
push
push
dec
jae
test
mov
mov
push
je
imul
bound
mov
in
mov
std
loope
add
xchg
cmc
loope
stos
pop
movsb
and
inc
mov
movsl
es
jmp
jnp
lahf
test
sbb
adc
pop
stc
mov
pop
stc
sysexit
xchg
jnp
mov
mov
ror
icebp
ret
inc
cmpsb
inc
or
adc
ds
test
filds
mov
pusha
and
mov
adc
jle
cld
jns
dec
add
aad
mov
cmpsb
mov
outsl
popf
jb
flds
pop
mov
shr
lea
jge
in
int
enter
aam
add
push
in
cmpsb
add
imul
xchg
subl
adc
xor
pop
jns
mov
int
mov
lds
xor
and
aas
mov
loopne
icebp
insl
pop
mov
add
sub
sbb
jmp
sar
or
mov
rorb
sbb
mov
jne
sub
arpl
inc
imul
push
pop
mov
loop
out
adc
out
mov
std
sti
and
clc
jp
sub
jle
cmpsl
loopne
or
sub
add
ss
mov
movsb
fs
sti
wbinvd
filds
imul
jnp
and
ss
cmp
fdivr
adc
push
jbe
mov
push
pop
movsb
mov
or
ret
dec
push
push
jge
adcl
mov
aaa
test
xchg
decb
add
xchg
cmp
movsl
nop
adc
arpl
mov
imul
mov
rorb
pop
aas
daa
push
jno
mov
or
std
push
xchg
push
push
scas
call
jp
mov
inc
leave
jbe
push
pop
lret
loope,pt
rcr
arpl
fiaddl
sbb
sbb
xor
push
pop
xchg
xlat
cs
add
and
cmpsl
push
pop
in
push
xchg
rcrl
or
sub
andl
mov
pop
mov
lret
stos
hlt
push
ret
inc
outsb
jg
jae
pop
mov
dec
add
rorb
lock
ljmp
sub
lret
into
test
cmp
pop
pop
imull
mov
and
loop
faddl
xchg
and
movl
pop
adc
xor
out
div
mov
mov
mov
jg
jbe
jl
scas
test
xchg
cmp
outsl
mov
pop
insb
and
xor
mov
gs
mov
sub
push
bnd
jle
loopne
mov
and
mov
cwtl
or
and
decl
xchg
xorb
enter
jne
cs
adc
cmp
test
pusha
xor
into
cli
or
sbb
fs
xor
aas
pushaw
stc
and
popf
xchg
and
lea
mov
cmpsl
jns
or
pop
push
push
mov
mov
dec
adc
inc
jecxz
lods
cmp
iret
test
mov
fisubrs
fimull
and
xor
ret
mov
insl
mov
enter
or
dec
std
fnsave
xor
loope
fistl
outsb
xor
pop
jne
push
xchg
stos
mov
es
jge
push
cld
enter
pop
je
inc
adc
ret
fsubs
dec
fimull
mov
cmp
push
icebp
jge
jmp
dec
sub
test
test
inc
int
jecxz
push
jb
testb
push
popf
fisubl
notb
xchg
out
ret
rolb
call
push
lods
sbb
jno
and
shrl
scas
cmp
jmp
mov
popf
popa
push
jno
ret
pop
pop
push
test
mov
push
jo
ss
iret
dec
arpl
jmp
inc
inc
iret
loopne
mov
pop
scas
dec
sub
push
leave
sub
je
pop
cltd
add
push
pop
mov
add
mov
add
repz
lds
testl
js
popf
cwtl
test
lret
int
nop
test
orl
mov
jne
xchg
pop
and
xor
fwait
inc
xchg
jns
push
or
mov
das
vphsubdq
inc
aaa
stc
outsb
gs
cmp
clc
gs
adc
mov
inc
push
out
fimuls
mov
cmp
xor
cltd
ficoms
fdivs
inc
pop
and
mov
bound
jae
mov
pop
push
out
mov
jecxz
sarl
bsf
jns
mov
adc
ret
push
add
mov
aam
or
cmp
es
mov
fiaddl
dec
push
adcl
adc
pop
ret
in
ja
push
loopne
xor
es
cmpsb
aam
mov
sti
aaa
or
xchg
mov
ljmp
mov
cld
fisttps
inc
jns
inc
pop
outsl
cmp
inc
jmp
into
stos
push
mov
sbb
fs
adc
ficompl
dec
adc
dec
aam
or
xor
int
mov
and
xchg
notl
lret
cltd
pop
cli
cmp
pop
stos
js
movl
cmp
xor
jae
pop
arpl
testl
fdivl
mov
cmpsb
js
mov
lods
sub
imul
cmovge
cmp
or
jae
lds
mov
adcl
insl
sbb
mov
sub
cmp
icebp
ss
notb
cltd
adc
cmp
int3
shrb
stc
push
sub
mov
push
negl
cli
out
jo
pop
scas
in
loop
pop
lcall
loopne
data16
mov
rorl
out
sbb
stos
add
ds
shl
test
sahf
setg
in
lea
fsubs
test
add
imul
jb
les
es
cmp
and
ja
add
int
lret
nop
dec
shlb
dec
cmpsb
jae
sub
inc
sti
sbb
mov
loopne
xchg
hlt
out
lods
mov
jnp
adc
push
fisttpll
sarb
aaa
dec
mov
inc
xor
and
push
rcl
add
mov
or
leave
pop
dec
and
fst
push
daa
lcall
std
aaa
shll
adc
mov
leave
enter
and
jnp
imul
lock
loopne
pop
mov
arpl
rcr
repz
push
mov
pop
cltd
or
gs
or
leave
mov
cmpsb
pop
jge
movsl
leave
xor
test
adc
cmc
push
mull
shrb
sbb
xchg
in
inc
cwtl
dec
in
adc
adc
stos
sub
sub
mov
lock
fs
mov
clc
and
mov
bound
jg
add
xchg
faddp
mov
pop
xor
andl
mov
pusha
aam
fsubl
jge
xchg
movsb
aad
and
dec
aam
fimull
out
xchg
nop
fimull
cmpsl
sub
cmp
xorb
or
out
loope
mov
mov
mov
sbb
gs
ret
arpl
add
add
negl
int
add
scas
clc
push
dec
inc
pusha
mov
fldt
xchg
xchg
test
sbb
les
sbb
and
mov
cmp
in
add
ret
out
imul
adc
and
loop
js
fnstenv
or
cli
dec
or
jae
cmp
mov
repnz
add
or
bound
dec
add
fldl
ss
cmp
lea
in
lret
inc
push
lret
or
lret
mov
aad
fimuls
pop
setb
arpl
stos
scas
fdivrs
shr
dec
insl
call
hlt
dec
pop
daa
mov
lret
sti
mov
mov
and
js
in
jecxz
inc
mov
jp
int3
dec
mov
jl
into
or
adc
mov
sbb
pop
imul
das
popf
and
mov
cmc
sbb
out
xor
outsb
ret
in
dec
cmp
loop
rcrl
mov
mov
pop
inc
stc
sbb
je
lods
xor
sbb
and
fdivrl
inc
shrl
inc
inc
inc
dec
lret
imul
pop
lret
loope
cmp
adc
or
int3
cld
lds
cmpsb
js
movsb
mov
pop
pop
lds
ret
fcmovne
inc
or
ljmp
xchg
fnstsw
jbe
and
fwait
das
xor
cmp
xchg
mov
pop
cmp
sub
fisttpl
sub
popf
subl
sub
cmpsl
or
adc
cltd
mov
jae
xor
std
call
cmpsb
movsl
sub
dec
dec
imul
scas
ret
call
xlat
sbb
inc
imul
jmp
rclb
mov
cmp
cmpxchg
pop
push
or
push
mov
jbe
jge
es
test
push
mov
fdiv
dec
pop
adc
ds
out
cmc
or
fsubp
inc
inc
dec
mov
fidivrs
insl
aam
add
int3
push
aas
or
push
cmp
and
ficoml
idivb
out
pop
repnz
lret
mov
mov
cli
mov
sub
lock
sbb
mov
test
jl
jp
push
pop
and
sub
inc
inc
adc
aam
xor
jp
stc
mov
mov
insl
int
addr16
aad
outsl
movl
nop
sbbb
xorl
stos
das
mov
cmp
mov
adc
dec
popa
out
repnz
lea
cmp
push
cs
jecxz
or
jmp
or
std
clc
xchg
in
xchg
pop
mov
out
adc
push
scas
pop
push
cltd
imul
push
aaa
inc
lods
sti
ss
subb
jns
loopne
mov
cmpsb
dec
movsb
mov
out
xchg
arpl
inc
cs
push
into
es
sub
sahf
add
fwait
cmp
outsl
xchg
adc
out
loopne
fst
sub
cmp
scas
lahf
mov
fcmovb
jae
pusha
jmp
and
pop
xchg
mov
and
xlat
in
in
jae
jp
cld
push
in
hlt
idivb
mov
add
mov
cltd
sub
movsb
addr16
movaps
insl
xchg
stos
push
leave
ret
loopne
mov
sbb
lods
push
js
sbb
and
mov
cli
mov
add
pop
dec
jg
fwait
cmp
aad
in
movsl
push
popf
lds
jb
aad
shlb
mov
or
hlt
sub
dec
fmull
mov
int3
mov
add
add
shr
in
icebp
frstor
js
mov
test
or
pop
orb
adc
xchg
xchg
xchg
jmp
popf
ss
stc
cmp
enter
pop
mov
xacquire
loop
lock
xchg
mov
dec
mov
mov
sub
cs
pop
ss
dec
pushf
push
mov
mov
push
gs
mov
dec
push
ds
add
xlat
ds
shrl
inc
in
or
adc
je
lods
xchg
cmpsl
sbb
mov
jb
es
jne
sahf
push
aad
mov
mov
scas
xor
ret
fsts
xor
and
pop
pop
lret
mov
fadd
and
jge
mov
or
mov
ja
pusha
inc
sbb
or
js
repz
cmp
mov
and
mov
pushf
pusha
data16
sub
xchg
or
mov
or
mov
cmp
fldl
in
inc
std
or
jg
out
rol
sbb
xorb
ds
mov
test
outsb
cmpb
push
push
or
arpl
imul
insl
lea
push
scas
push
pop
jns
and
sub
adc
sbb
cmp
daa
or
mov
mov
loop
mov
and
inc
fadds
add
cmp
and
shrl
cmpsb
test
inc
mov
sub
or
jecxz
fstpl
clc
mov
lds
cmp
lods
cmpsl
pop
or
xchg
push
mov
pop
lods
icebp
out
inc
jne
popf
mov
icebp
xor
insl
bound
mov
mov
std
push
mov
movsb
push
jge
data16
adc
les
adc
stc
and
jne
or
mov
bsr
sahf
pop
into
jae
push
pop
mov
mov
push
aad
int3
mov
das
push
rorl
or
push
movsb
and
jge
lret
je
push
aas
pusha
mov
aaa
pop
pop
jbe
mov
add
xchg
mov
push
cmp
or
mov
or
fdivl
sub
adc
cmp
std
jnp
xchg
cli
repz
xor
add
inc
sarb
int
push
mov
mov
xor
dec
cmp
sbbb
lea
fisubs
out
cld
ret
jmp
mov
insl
xor
aad
sbb
push
cmp
or
test
sahf
inc
lcall
cmp
push
imul
in
jbe
cmc
cs
insl
jg
lods
incl
flds
sarb
add
sbb
leave
cmp
inc
cmp
jb
mov
jmp
mov
xchg
adc
jge
scas
out
ret
xchg
cmp
jne
mov
insb
mov
pop
subl
into
and
in
adc
add
fildl
std
dec
cmp
scas
mov
push
pop
mov
bswap
mov
xchg
pop
inc
or
pop
fcoml
dec
adc
or
jg
dec
popf
aaa
test
mov
xor
test
jl
in
jb
mov
movsl
insb
sub
and
xor
xchg
mov
stc
jb
jno
dec
pop
push
jg
mov
jg
push
add
outsl
add
dec
xchg
dec
pop
lods
pushf
inc
sbb
jne
dec
mov
xchg
enter
int
add
mov
test
sub
and
adc
js
lods
loope
sbb
jp
mov
adc
sub
jg
aam
push
incb
adc
add
pop
mov
mov
and
xchg
stos
fs
adc
icebp
lcall
addr16
pop
push
sub
hlt
jmp
xchg
cwtl
imull
push
movsl
xlat
cmp
rol
shl
cmp
sbb
jecxz
js
stc
dec
sahf
insb
lcall
clc
fisttpll
cmpl
jmp
pause
fildll
ja
fistps
repz
inc
addr16
xor
loop
imul
lea
fldl
dec
or
cwtl
idiv
pop
dec
mov
cmp
fildll
lds
std
shll
push
fwait
out
arpl
dec
daa
ficoms
jg
jg
and
js
mov
pop
dec
add
sbb
sbb
xchg
mov
aas
sub
lret
rol
dec
loope
pop
fldt
sbb
inc
jae
add
mov
push
jecxz
mov
fsub
test
mov
in
jp
push
adc
inc
fsts
fldl
imul
mov
dec
push
rcll
ljmp
enter
clc
xor
push
rclb
sbb
dec
aas
inc
push
outsb
sbb
pushl
movsl
ret
pop
sbb
fs
push
add
sbb
xchg
negb
jbe
inc
aad
cltd
and
sub
inc
in
stos
and
mov
rclb
or
dec
aam
cmp
jmp
xor
dec
fcom
or
push
push
in
push
sbb
jge
cld
call
cmpsb
sub
mov
mov
je
or
fcompl
add
lods
push
stos
incl
clc
mov
mov
int3
jne
repnz
ds
pop
fstpt
mov
ret
sbb
inc
dec
mov
mov
cmp
adc
ja
and
push
sbbb
movsb
testb
fadds
sarl
pusha
sti
out
xor
scas
and
adc
sub
and
sbb
add
fildll
lcall
aad
int
std
fmul
repz
xor
fldcw
insl
push
int3
outsb
fisttpl
les
xchg
mov
inc
mov
hlt
or
cltd
ror
or
dec
out
adc
adc
fwait
sub
mov
mov
int3
pop
std
or
mov
mov
sub
xchg
in
test
enter
or
mov
addb
mov
jl
es
es
lods
cs
ficomps
add
dec
jne
ljmp
cmpsl
out
mov
jbe,pn
punpckhwd
sub
dec
test
andl
mov
xchg
repnz
icebp
lret
dec
js
inc
xchg
or
xchg
movsb
push
pop
icebp
fld
lcall
sarb
call
mov
dec
mov
out
push
fbld
mov
out
add
negl
pop
xchg
imul
in
pushf
out
aaa
out
hlt
sbb
cmp
and
cld
mov
jmp
add
inc
mov
mov
add
xchg
push
xor
mov
ficompl
cmp
aas
fmuls
mov
mov
cmp
gs
subb
jno
xchg
stc
xchg
sbb
in
mov
dec
icebp
