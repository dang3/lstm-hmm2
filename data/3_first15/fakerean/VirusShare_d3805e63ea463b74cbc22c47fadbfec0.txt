jge
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
push
push
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
lea
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
pushl
movl
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
call
mov
pop
ret
push
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
cmp
lea
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
lea
lea
call
test
je
xor
cmp
mov
jne
mov
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
jne
mov
mov
mov
push
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jmp
mov
jmp
mov
push
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
jne
xor
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
mov
test
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
call
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
mov
add
mov
lea
mov
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
push
xor
inc
push
push
lea
push
mov
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
je
mov
cmp
jne
mov
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
test
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
cmp
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
je
xor
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
call
test
pop
je
mov
pushl
lea
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
mov
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
push
mov
test
mov
jne
test
jne
lea
push
push
push
mov
call
add
test
je
mov
mov
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
call
pushl
pushl
pushl
call
add
cmp
mov
je
mov
push
call
cmp
je
pushl
mov
mov
lea
push
push
call
test
js
lea
call
testb
jne
testb
jne
mov
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
xor
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
cmp
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
dec
adc
pop
adc
lds
mov
push
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
push
push
call
mov
add
pop
jp
add
lock
add
sahf
xchg
jbe
add
lcall
jge
push
push
mov
add
in
add
add
push
mov
add
mov
add
jmp
addl
add
push
push
push
push
push
push
call
xchg
in
lahf
out
mov
add
js
les
out
out
add
add
add
jmp
add
mov
cwtl
bound
add
data16
mov
add
ljmp
add
lcall
inc
in
push
push
push
push
push
push
call
pop
aad
add
add
add
pop
add
xchg
mov
lret
xchg
push
mov
add
filds
jmp
jecxz
stos
add
add
mov
mov
add
fs
add
popa
popa
incb
push
push
push
push
push
push
push
push
push
push
push
call
add
push
pop
data16
je
push
fstpt
aam
add
add
add
add
pop
mov
add
add
outsl
lea
add
add
test
xchg
add
add
nop
add
add
fcomp
add
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
je
add
xchg
add
ret
nop
add
mov
fwait
cmc
in
pop
scas
sti
add
add
add
stos
mov
mov
add
data16
add
add
add
add
insb
add
lock
add
add
add
loope
add
cmp
add
push
push
push
push
push
push
push
push
call
add
add
add
fadds
xchg
add
add
in
addl
lds
in
call
add
neg
add
cmpsb
jbe
loop
xchg
add
add
lcall
add
daa
call
lcall
mov
add
add
add
notb
arpl
add
jbe
clc
add
mov
sarl
add
shlb
mov
bound
cmpsb
nop
mov
add
test
add
add
mov
xchg
mov
rolb
lcall
or
add
jmp
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
pusha
push
imul
leave
lcall
test
testb
out
pop
add
lds
xchg
cwtl
add
mov
jne
mov
aam
fiaddl
out
push
add
rolb
lret
xchg
sub
pop
ret
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
imul
add
loope
nop
scas
add
add
xchg
add
ret
add
add
mov
push
xchg
add
add
add
add
mov
add
aad
lret
add
add
add
add
int3
scas
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
loop
add
push
je
add
add
pushf
cli
out
add
addb
nop
jne
scas
fldt
outsl
add
push
add
movl
add
add
data16
mov
lds
mov
add
add
sub
pop
mov
add
push
push
push
call
fwait
xchg
add
add
add
xchg
ficoml
pushf
push
cltd
add
mov
pop
iret
push
imul
push
iret
sub
pop
add
push
push
push
push
push
call
mov
cli
add
add
add
add
mov
sahf
add
popa
xchg
add
jnp
imul
add
add
movsb
pusha
scas
push
add
add
add
mov
mov
mov
jge
scas
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
push
jno
add
add
pop
repnz
scas
lea
push
add
mov
add
add
add
mov
sub
pop
mov
xor
push
push
lea
not
inc
push
and
add
sub
inc
shl
sub
shl
xor
not
pop
sub
pop
push
push
lea
push
lea
push
lea
push
call
out
add
add
add
mov
fsubrl
add
mov
add
add
push
cltd
popl
xchg
lahf
add
repnz
fiadds
lcall
jne
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
aad
fildll
stos
jp
mov
mov
jns
add
add
testb
fstp
add
fisttpl
cwtl
cltd
add
mov
sbb
movsl
add
mov
add
movl
add
popl
add
addb
add
add
test
mov
mov
mov
in
fdivr
lcall
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
cld
cli
add
bound
mov
shrb
ret
int
xchg
mov
lock
pop
enter
imul
add
jge
mov
lcall
inc
lock
lea
push
call
xlat
jmp
add
add
cmc
add
popa
mov
jb
mov
imul
jle
add
xchg
bound
add
stc
mov
jae
mov
subb
xchg
scas
sub
pop
movl
push
push
lea
push
lea
push
push
lea
push
call
add
out
incb
add
xchg
fadds
add
mov
add
add
add
pop
nop
mov
push
add
add
popf
add
stc
xchg
sub
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
add
cwtl
cmpsl
add
add
add
in
fistps
add
add
add
add
sub
pop
pushl
push
push
push
push
push
push
call
add
mov
add
add
shlb
mov
add
add
stc
xchg
add
into
mov
add
push
ljmp
cwtl
movsb
jl
leave
addb
cmpsl
movsb
add
aad
mov
add
xchg
mov
sub
pop
pushl
push
push
push
call
add
stos
test
in
pop
add
add
add
arpl
add
push
call
add
hlt
add
add
pusha
cmpsl
add
imul
jge
leave
fs
movsb
clc
in
mov
push
popa
add
lcall
pop
add
push
push
push
push
lea
push
call
stos
fstl
fiaddl
cmpsl
lcall
add
into
add
push
ljmp
mov
mov
jno
push
stos
in
frstor
lcall
jne
push
push
push
push
push
push
call
filds
fiaddl
popa
add
mov
test
int3
hlt
add
add
rcr
add
incb
xchg
add
bound
pop
add
movsl
add
add
add
les
shrl
in
call
call
push
push
shr
push
sub
add
rol
add
sub
add
shr
inc
pop
add
dec
xor
add
pop
push
push
push
push
call
add
in
sti
je
loope
lcall
test
add
add
jmp
add
lahf
flds
add
in
loop
add
mov
push
xchg
add
add
sahf
add
jp
lds
cmc
add
xchg
push
movb
push
pushl
call
push
push
call
jb
push
rolb
fisubs
negb
test
add
popl
push
add
shll
push
xchg
mov
in
clc
pop
push
push
push
rol
sub
dec
dec
push
xor
add
rol
sub
rol
inc
inc
pop
add
pop
push
push
call
lcall
add
push
data16
arpl
cli
fs
add
scas
add
add
jnp
mov
repnz
in
mov
add
add
push
in
add
add
bound
lcall
push
push
push
push
push
push
push
push
call
add
jle
sar
ljmp
call
scas
cwtl
add
add
sti
add
push
cwtl
add
out
cmpb
popa
add
shl
mov
add
jnp
mov
add
mov
add
lock
push
add
loopne
push
call
push
push
push
push
call
mov
add
mov
jbe
in
add
icebp
int3
leavew
call
mov
add
add
jae
add
jnp
push
push
lcall
clc
push
lea
push
push
push
push
lea
push
push
push
push
call
jno
pushf
add
add
out
mov
loope
mov
add
add
lea
pop
adcb
lcall
push
push
call
mov
add
push
add
jge
add
cld
cli
mov
jl
loop
fiadds
xchg
mov
add
hlt
jb
je
cmpsl
sub
pop
push
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
add
test
insb
push
add
outsl
xchg
xchg
add
jnp
movsl
add
xchg
jl
outsl
add
fucomip
add
add
test
jns
xchg
add
add
add
in
arpl
movsl
out
pop
sar
addl
aam
xchg
fwait
add
pop
in
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
test
push
jge
mov
lods
push
pop
stc
add
add
add
add
mov
mov
lds
leave
xlat
lods
pop
xlat
fadd
add
pop
push
loopne
add
sub
pop
add
add
push
push
push
call
add
addr16
add
jo
mov
cld
fstps
add
add
push
shlb
add
add
add
push
iret
iret
enter
xchg
lods
add
add
xchg
stos
add
add
lods
shl
add
ljmp
lcall
xor
or
outsl
push
inc
push
push
push
push
push
push
call
mov
adcl
mov
sti
add
lahf
popf
add
add
data16
add
lcall
xor
push
push
call
add
push
scas
je
nop
jno
add
insb
push
push
add
add
cld
add
add
ret
add
add
ja
nop
lahf
mov
add
mov
sarl
int3
add
loope
push
add
xlat
add
add
mov
add
add
add
aam
xchg
push
movb
lea
sub
pop
add
push
push
push
push
push
push
push
call
add
add
fcmovbe
mov
lret
cld
add
add
add
je
mov
loopne
mov
sti
cli
lock
mov
leave
filds
add
mov
add
lret
jns
add
out
add
push
add
add
add
add
jne
push
push
lea
push
lea
push
push
push
push
call
add
pop
add
mov
pop
xchg
add
jb
loope
add
jp
add
xorb
xchg
lret
add
xlat
push
add
add
std
add
cltd
add
jb
add
test
stos
jo
fiadds
add
xchg
jae
scas
loope
sub
pop
push
push
push
call
mov
pop
int
test
add
add
rolb
pusha
push
add
movsb
mov
aad
cwtl
add
sti
aam
add
jbe
rolb
add
filds
test
jb
cltd
xchg
out
add
imul
add
pop
pop
pop
mov
neg
add
arpl
add
add
add
cmpsl
jo
mov
lcall
inc
or
or
push
call
add
mov
jns
mov
loopne
cmc
subb
add
popl
fcompl
add
cli
sar
mov
add
leave
add
add
add
sub
pop
xor
push
lea
push
push
push
push
push
push
call
popa
mov
mov
xchg
jo
mov
cmc
loop
int
mov
faddl
lods
std
pop
lock
add
add
jecxz
js
ror
pop
add
add
pop
icebp
add
mov
lret
add
pop
lods
add
aam
addl
in
in
lcall
les
add
push
push
push
push
push
call
add
jae
pop
pusha
in
xchg
test
mov
jns
add
pusha
mov
insb
pop
add
add
mov
mov
mov
pop
std
cmpsb
mov
lcall
lock
push
push
push
push
push
call
push
in
imul
lahf
lret
out
iret
jns
arpl
add
add
add
lea
icebp
bound
xchg
push
jecxz
in
add
stc
popf
add
mov
add
mov
mov
add
lock
jns
push
add
mov
add
ljmp
push
push
push
push
push
push
push
push
call
mov
mov
xchg
hlt
add
pusha
jge
call
loope
fdivr
scas
add
add
fs
add
add
push
sbbb
cmpsb
add
mov
je
sub
pop
mov
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
fsubl
lods
xchg
fimuls
add
lods
pop
jecxz
add
hlt
add
test
sar
mov
add
mov
sti
add
jmp
push
lcall
int
cwtl
add
add
repnz
lcall
or
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
xchg
loopne
loopnew
push
add
fsts
mov
add
mov
stc
mov
add
xchg
sbb
push
lods
add
add
jns
mov
add
cmpsl
add
lcall
les
lea
push
push
lea
push
push
push
push
call
add
ja
arpl
push
faddl
sti
clc
mov
add
add
add
add
jmp
cli
mov
add
addb
add
pusha
mov
add
sub
pop
push
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
pushf
add
add
je
add
filds
add
in
insb
stc
add
stc
mov
add
push
add
mov
mov
add
pop
pop
into
icebp
mull
lret
add
mov
int
add
add
lcall
add
push
push
push
push
push
push
call
add
add
pop
add
add
push
add
add
imul
jmp
add
add
jbe
add
lret
push
add
mov
add
mov
add
icebp
nop
ror
add
add
jl
pop
push
je
js
fildl
lcall
les
push
push
push
push
push
call
add
add
jb
mov
add
shrl
jnp
bound
sub
push
add
push
mov
pop
movsb
cmpsb
jo
add
fisubrl
lret
in
jns
jne
xchg
aad
fildll
xchg
out
cmc
cltd
movsb
xchg
add
rolb
add
lea
addl
insb
mov
add
add
sub
pop
sub
pop
push
push
push
push
call
stc
mov
add
add
add
shrl
jl
test
add
add
add
je
cmc
mov
add
loop
add
xlat
add
mov
add
pop
xlat
add
add
add
add
add
mov
jne
mov
jmp
in
lock
lcall
movsb
push
push
push
call
mov
xchg
je
mov
add
add
add
loop
add
les
pop
add
ja
cmc
add
mov
shl
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
add
mov
shll
add
add
ja
fildl
add
add
ret
ficoml
lods
pop
add
mov
add
int3
mov
out
add
add
scas
add
test
stos
add
mov
add
push
push
push
push
push
push
push
call
roll
lock
fdivl
add
jnp
add
enter
iret
test
pop
add
add
add
add
lcall
ret
add
add
push
push
push
push
push
lea
push
push
call
jl
xchg
hlt
cmpsl
add
add
fldl
int
pop
std
out
out
add
fdivs
mov
add
add
lcall
xchg
out
jae
in
in
add
push
push
push
push
push
push
push
call
mov
xchg
mov
jo
testl
int3
push
fiadds
cwtl
mov
add
add
add
lret
add
insb
cmc
add
add
je
in
in
lcall
inc
and
or
push
call
data16
push
add
xlat
ljmp
add
push
mov
add
add
add
icebp
jp
add
add
add
ljmp
push
jle
sti
add
mov
insb
lea
push
movb
bound
add
add
jnp
mov
in
hlt
lcall
add
push
push
lea
push
call
mov
add
loop
add
pushf
add
add
fwait
enter
jae
mov
add
add
xchg
sahf
in
lcall
into
push
mov
test
pop
add
add
add
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
lock
xchg
add
aad
mov
cltd
add
js
clc
add
add
lds
add
xchg
add
testb
arpl
add
add
addl
or
add
and
push
push
push
lea
push
push
call
mov
test
jb
add
xchg
xchg
jp
add
pop
je
jne
add
lret
hlt
add
int
add
jno
push
scas
int
pop
int3
jb
add
pusha
mov
insb
add
in
cwtl
add
hlt
lahf
add
incb
idivl
gs
add
movsb
add
lcall
adc
push
push
push
push
call
fadds
mov
add
mov
add
lret
add
add
jno
mov
add
fidivl
int3
mov
add
push
sti
in
mov
test
lock
add
mov
add
ror
scas
jno
je
fldt
add
add
lret
jae
pop
pushf
faddl
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
cmpsb
mov
add
clc
gs
add
lret
add
add
div
add
add
test
add
add
push
add
mov
arpl
add
xchg
add
push
add
add
add
add
in
fdivr
lcall
dec
sub
or
test
pushf
mov
push
push
push
push
call
push
mov
ret
add
lock
cmp
xorl
popa
push
mov
add
add
enter
add
bound
bound
add
add
add
movsb
add
jge
loope
mov
ja
lcall
add
pop
xor
push
lea
push
push
push
push
call
mov
ret
add
loope
div
add
xchg
add
sti
add
out
mov
lods
scas
xchg
cwtl
mov
jl
add
add
add
shlb
lcall
les
push
push
call
add
add
mov
push
add
js
add
push
fs
lock
mov
add
add
test
jne
jbe
add
in
hlt
pop
add
push
push
push
push
lea
push
push
call
imul
imul
add
add
push
pop
xchg
add
movl
fwait
jle
pop
add
hlt
lock
add
mov
rol
add
push
loope
rcl
mov
add
mov
mov
popf
std
mov
pop
xchg
into
push
add
add
mov
push
in
call
lea
push
push
call
test
add
add
addr16
add
mov
ret
fdivl
add
add
cltd
imul
add
pop
pop
gs
fiaddl
arpl
data16
jle
add
add
lcall
add
lcall
fsubrs
dec
mov
ror
push
push
pop
add
rol
ror
sub
sub
add
pop
sub
dec
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
js
add
testl
jno
lahf
push
add
add
out
movl
add
add
mov
roll
add
xchg
add
pop
adcl
add
in
in
enter
sarl
pop
cmpsl
mov
bound
sub
pop
pushl
push
lea
push
push
call
nop
jmp
mov
sahf
rcrb
in
in
scas
cmc
add
gs
add
add
xchg
add
loop
mov
mov
ja
pop
mov
in
fildll
add
add
mov
sahf
movsl
fadds
push
fs
roll
je
jle
sub
pop
call
push
lea
push
push
push
lea
push
push
call
les
push
add
add
roll
xchg
add
push
add
fildl
in
mov
lods
jne
movsb
nop
pop
addr16
rolb
movsb
add
gs
sub
pop
push
push
push
rol
shr
push
push
pop
add
lea
sub
shr
shl
sub
add
pop
sub
dec
pop
push
lea
push
push
push
lea
push
push
lea
push
call
mov
int
jge
add
popa
pop
lret
add
add
int3
cld
jnp
add
shll
lret
test
add
sub
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
push
xchg
add
cmpsl
cltd
add
mov
mov
mov
xchg
add
add
push
add
mov
add
lcall
rorb
call
shr
mov
in
jne
add
add
add
push
add
movsb
cld
flds
cwtl
add
mov
add
jecxz
fstpl
gs
in
js
add
add
fdivs
add
add
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
shr
aad
xchg
add
push
add
rorl
lahf
pop
push
sbbb
add
mov
mov
add
imul
roll
lcall
pop
hlt
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
add
rcrb
add
cmc
add
jmp
add
lock
add
icebp
add
add
mov
add
aad
add
push
movsl
add
pop
in
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
push
les
ret
jecxz
add
mov
popf
jno
add
jb
vcvtpd2psy
push
aad
sarb
add
add
movsb
add
add
add
lcall
ret
xchg
dec
add
push
push
push
push
push
lea
push
push
push
push
call
lods
add
cld
test
add
xchg
fisubrs
add
add
add
ror
jmp
add
scas
add
add
add
lods
int
nop
mov
nop
add
mov
ret
jge
lcall
jbe
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
ja
imul
add
ljmp
int
xchg
in
jp
lret
flds
add
add
add
out
push
std
jnp
iret
add
in
fdivr
lcall
xor
push
push
push
push
call
rolb
jb
imul
fldl
mov
add
jle
in
add
jle
mov
add
add
pushf
cmpsl
add
cwtl
cwtl
mov
add
xorb
lods
jle
mov
mov
imul
in
lock
add
push
lea
push
push
call
jmp
out
scas
add
add
add
jne
add
add
push
add
mov
xchg
faddl
push
add
add
push
add
add
add
cmpsl
push
add
pop
mov
mov
add
add
lds
push
add
jo
sub
pop
add
push
push
push
push
lea
push
call
lea
add
int3
mov
add
mov
add
cmpsb
mov
add
js
mov
sub
pop
mov
xor
push
lea
push
call
mov
push
add
add
bound
lahf
pop
pop
test
mov
enter
popl
xchg
aam
nop
add
shlb
xchg
enter
enter
push
mov
add
mov
test
push
test
add
nop
add
out
rolb
jnp
loop
add
hlt
cli
pop
add
lcall
lock
push
push
lea
push
push
lea
push
push
push
push
push
push
call
lcall
nop
ret
lret
imul
popf
jmp
scas
test
add
imul
push
add
add
cmpsl
xchg
call
out
bound
add
add
hlt
xchg
cmpsb
xchg
add
jl
mov
add
in
fcomps
dec
and
mov
push
lea
push
push
push
lea
push
push
push
call
mov
ljmp
ror
push
fldl
add
push
add
scas
add
mov
lret
mov
add
in
loopne
lcall
movsb
push
push
lea
push
push
push
push
call
lods
loop
add
add
add
sarb
add
test
mov
add
add
mov
mov
push
add
ret
add
add
cmpb
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
movl
icebp
add
add
testl
add
popa
roll
pusha
orl
add
jl
in
lcall
add
aad
data16
xchg
pushf
mov
int3
add
xchg
sub
pop
or
je
mov
push
push
push
call
jne
sarl
jbe
mov
out
in
pop
popl
mov
add
xchg
add
jecxz
nop
add
add
pop
xchg
jb
add
jne
bound
add
add
jecxz
add
jae
add
fsubl
add
mov
clc
lcall
xor
push
lea
push
lea
push
push
push
lea
push
call
repnz
jns
add
fwait
lock
mov
mov
mov
add
test
aam
test
lods
mov
fiaddl
leave
mov
add
jnp
scas
std
add
jno
in
mov
clc
jae
loop
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
pop
mov
popl
push
lcall
mov
test
xchg
push
jnp
add
fcomps
push
sbb
mov
sub
pop
add
add
push
not
pop
push
mov
xor
push
add
add
shl
add
pop
add
push
not
not
pop
pop
push
shl
add
pop
rep
push
push
lea
push
call
mov
mov
add
in
add
add
add
add
xchg
scas
add
add
add
cmc
jo
add
call
loop
add
jnp
mov
jo
add
jae
in
test
add
jp
jno
add
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
lea
push
call
shl
sti
mov
add
add
push
add
xchg
add
fs
add
js
add
add
test
into
xchg
fwait
add
out
add
add
js
in
add
add
je
add
add
push
add
add
leave
je
mov
push
dec
pop
add
push
pop
add
push
push
lea
push
push
call
add
pop
mov
add
add
add
jmp
fiadds
loopne
add
mov
imul
subl
rcrl
pusha
add
add
lcall
movsb
push
shr
not
pop
pop
push
push
not
rol
push
or
inc
add
sub
shl
pop
shl
pop
push
dec
dec
shl
pop
pop
push
sub
pop
mov
mov
push
inc
sub
not
pop
mov
jmp
push
lea
sub
pop
push
push
add
xor
sub
pop
mov
add
push
push
push
lea
push
push
call
push
push
out
js
mov
test
icebp
jecxz
add
test
imul
add
mov
pop
add
mov
add
add
add
jmp
add
leave
mov
lret
std
jmp
jno
enter
jb
add
add
arpl
lcall
push
not
sub
lea
pop
push
push
push
not
xor
dec
not
pop
push
push
push
lea
push
lea
push
push
push
call
add
fiaddl
in
ret
add
in
fidivl
add
push
jae
mov
fwait
test
add
push
push
add
popf
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
push
call
cmpl
iret
push
add
fwait
xchg
mov
lds
add
lcall
add
mov
add
add
shll
add
add
jl
pop
add
int
negb
mov
scas
add
jb
add
jmp
in
loopne
lcall
push
push
push
push
push
push
push
push
call
cli
xchg
stos
iret
mov
cld
enter
add
add
add
fiadds
add
cmc
push
add
add
xchg
add
test
add
add
addl
gs
pop
divb
push
sub
pop
pop
pop
push
rol
pop
pop
leave
push
shl
xor
not
pop
ret
push
push
push
push
lea
push
push
lea
push
call
add
push
mov
add
addr16
mov
xlat
mov
add
add
je
push
mov
flds
jge
add
add
mov
popl
push
test
mov
std
add
jb
cwtl
jmp
add
in
lcall
mov
push
not
sub
add
pop
add
push
push
xor
not
lea
pop
push
push
xor
lea
shr
shr
pop
push
push
push
add
pop
movl
addl
push
add
shr
rol
inc
pop
test
je
mov
push
not
shl
dec
pop
pop
push
shr
pop
pop
pop
push
sub
pop
pop
push
add
dec
add
lea
pop
leave
push
lea
push
push
lea
push
lea
push
lea
push
call
jae
loop
add
add
add
add
add
lods
ja
roll
mov
mov
lret
mov
rcrl
lcall
addr16
repnz
int3
sub
pop
ret
push
push
not
add
pop
mov
add
push
shr
lea
add
pop
push
push
rol
shr
pop
push
push
sub
not
pop
push
push
push
sub
pop
testl
addl
push
push
call
add
pop
lcall
xchg
arpl
add
in
add
add
jno
add
lds
outsl
add
mov
add
pop
push
push
push
call
add
rclb
popl
shll
loopne
add
add
mov
add
stos
jge
pusha
add
mov
add
add
add
xchg
in
jp
add
add
lcall
test
decl
iret
mov
pushl
push
push
call
add
shr
out
rolb
fiaddl
hlt
add
jo
cli
push
inc
add
add
push
xchg
add
jb
add
enter
xchg
fists
xchg
mov
add
add
pop
out
roll
jecxz
add
jae
add
aad
sti
add
scas
lds
add
jb
pop
sub
pop
push
push
push
push
push
lea
push
push
call
mov
cmpsl
cmc
add
mov
addb
jb
add
test
out
jns
addr16
add
sti
in
mov
enter
mov
divb
lock
mul
sub
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
iret
add
addl
add
ja
out
nop
loope
in
test
add
clc
add
fiadds
js
cmc
ret
mov
add
mov
add
mov
add
cmpsb
add
add
mov
mov
imul
hlt
jl
mov
push
add
in
fcompl
out
cli
call
fistpl
jge
add
test
call
push
icebp
xchg
ret
dec
add
add
jno
push
mov
add
pop
push
mov
iret
jmp
add
add
bound
lret
movl
loop
mov
jecxz
lock
mov
data16
ja
add
mov
addr16
add
mov
sub
pop
pop
push
sub
rol
add
add
pop
pop
push
push
push
push
push
push
push
call
mov
push
mov
gs
jl
add
add
add
arpl
jb
add
in
cmpsl
jmp
add
popf
testl
add
insb
roll
add
cltd
mov
add
add
jne
sub
pop
pop
push
push
push
push
call
add
pushf
std
je
add
push
mov
stc
jmp
je
xchg
add
lahf
gs
add
add
scas
leave
enter
lods
hlt
cltd
cltd
fwait
jle
imul
add
add
push
push
cmc
push
nop
add
lcall
push
push
call
popa
faddl
lcall
shl
scas
xchg
add
movl
jb
jmp
add
add
push
add
cld
cltd
faddl
add
add
add
add
pop
add
mov
add
jno
enter
add
lret
jbe
in
clc
pop
leave
push
shl
sub
dec
pop
ret
push
push
ror
pop
mov
add
push
pop
push
push
rol
add
lea
pop
push
push
dec
pop
push
push
push
inc
dec
not
pop
movl
push
push
lea
push
push
push
lea
push
call
scas
mov
add
add
loop
add
scas
mov
flds
mov
je
movsl
push
xchg
cwtl
add
pop
mov
xchg
add
mov
add
psubq
call
call
add
js
outsl
cwtl
xchg
add
pop
add
add
add
add
pop
jo
hlt
insb
std
hlt
mov
add
add
pusha
add
mov
test
xchg
out
mov
cmc
test
add
add
push
xchg
int3
out
add
std
add
pop
push
call
push
push
push
push
push
push
call
jnp
add
push
add
add
mov
mov
insb
add
add
jle
test
add
xlat
xchg
cltd
add
data16
add
insb
add
pop
fadd
mov
add
add
addb
mov
add
insl
cld
add
test
call
lea
push
push
push
push
push
call
add
insb
add
call
add
add
add
movsl
add
lods
nop
jge
add
jae
push
add
stc
add
add
xchg
out
pushf
add
in
in
lcall
pop
push
add
dec
sub
pop
pop
pop
push
push
call
pop
add
push
add
add
mov
xchg
mov
add
add
into
aam
add
xchg
lods
out
add
mov
lcall
cwtl
mov
lahf
add
roll
push
pusha
cwtl
add
addl
outsl
add
add
call
add
in
clc
lcall
push
push
push
push
push
push
push
call
mov
in
add
add
fiadds
mov
in
ficomps
add
add
add
add
mov
push
loopne
mov
jle
sub
pop
ret
push
dec
pop
push
mov
push
push
push
push
call
loop
mov
mov
call
cli
xchg
jo
add
add
push
xchg
add
add
add
bnd
add
push
add
mov
xchg
xchg
add
add
mov
lcall
cli
add
ffreep
add
mov
in
lock
lcall
cld
push
ror
sub
not
pop
push
push
lea
pop
push
push
dec
pop
push
push
sub
dec
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
cwtl
cld
pop
xlat
add
loope
add
out
mov
add
aad
out
xlat
cld
add
loope
pusha
add
cli
addb
std
add
add
add
lock
xchg
add
jle
cmpb
mov
mov
rorb
inc
or
inc
cmp
push
push
lea
push
push
push
lea
push
push
push
call
xchg
rolb
add
push
fmul
popl
icebp
xlat
add
std
add
idivl
fisubl
add
add
fsts
add
enter
mov
add
mov
add
add
add
fadds
add
push
xchg
fldl
sub
pop
sub
mov
push
lea
inc
pop
shr
push
shr
dec
ror
pop
add
mov
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
icebp
int3
cwtl
imul
fmul
shll
add
in
add
add
add
add
mov
pusha
popf
jmp
pop
add
pop
jl
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
mov
add
add
xchg
mov
add
add
outsl
add
jbe
imul
data16
mov
jecxz
out
jbe
add
push
add
add
cmpsl
stos
movsl
push
roll
lret
add
add
mov
stos
add
add
stos
add
fldl
lcall
inc
or
lea
push
push
push
push
call
mov
loopne
add
add
jnp
jbe
add
mov
add
fmuls
lret
mov
add
test
mov
add
add
pop
add
lods
cmc
add
enter
mov
add
add
add
mov
lea
mov
fldl2e
push
add
pop
push
add
add
lcall
shlb
inc
pop
mov
push
pop
mov
push
dec
shr
lea
pop
cmp
jne
push
shr
pop
cmp
jne
mov
push
push
push
push
push
push
push
call
sti
add
mov
add
fwait
add
add
mov
xchg
add
push
mov
add
add
add
lea
shr
cld
pusha
addb
cmc
nop
add
add
sub
pop
movl
jmp
push
lea
push
call
push
scas
xchg
mov
add
incb
icebp
mov
mov
outsl
int3
xchg
add
fiadds
jb
popa
flds
int3
pusha
add
add
mov
add
add
lds
shlb
mov
jb
aam
add
mov
clc
pop
mov
mov
push
shr
add
pop
sub
jne
push
shl
dec
rol
sub
pop
mov
movl
push
dec
shl
pop
jmp
push
add
pop
mov
push
push
lea
push
call
add
add
jp
jp
cwtl
xchg
xchg
add
mov
out
add
add
loope
lds
icebp
jne
pop
roll
nop
mov
add
cmp
jne
push
push
push
push
call
cmpsb
sahf
add
push
add
add
add
add
mov
add
add
add
add
xlat
add
add
jnp
add
lcall
pop
mov
movl
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
jmp
data16
ret
xchg
add
mov
add
lret
into
pop
roll
add
cltd
add
mov
add
test
add
fsubrl
rolb
fiadds
add
test
enterw
in
add
out
insb
add
add
icebp
data16
mov
add
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
loope
add
add
add
repnz
stos
pop
mov
mov
ja
push
jno
add
jbe
add
hlt
cmp
into
add
lea
pop
in
mov
fsubr
add
add
movsl
jmp
mov
jo
add
sahf
clc
mov
loop
stos
lret
pushf
push
sahf
pop
out
insb
add
sub
pop
cmpw
jne
push
ror
shr
pop
mov
push
dec
pop
movl
push
push
lea
push
push
push
push
push
push
push
push
call
out
bnd
add
pop
jmp
jno
fdivp
test
mov
mov
repnz
mov
add
add
test
in
fcomps
stos
or
add
xor
add
push
push
push
push
lea
push
push
push
push
call
xlat
fldl
mov
test
push
add
add
jo
fcomi
insb
fdivr
mov
add
lcall
cmc
jp
jns
xchg
add
pop
notb
xchg
jmp
add
jbe
cwtl
add
add
add
shl
pop
faddl
in
mov
scas
lcall
inc
or
sub
inc
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
std
jnp
int
mov
add
int3
outsl
mov
andl
pushf
push
lcall
add
xchg
ret
clc
cltd
ffreep
cmpsl
imul
add
fcompl
push
or
das
pop
inc
push
sub
dec
push
push
pop
add
rol
lea
shl
sub
sub
xor
pop
not
pop
push
push
push
push
push
lea
push
push
call
incb
int3
gs
jmp
std
sti
in
xchg
int
add
jnp
lods
bound
add
add
pop
add
xchg
add
fwait
push
jecxz
leave
fsubr
add
iret
nop
jb
add
add
enter
arpl
add
add
add
pusha
add
scas
add
out
mov
int
in
in
lcall
call
push
push
push
push
push
push
push
push
lea
push
push
call
pop
in
jo
test
add
lret
pop
jmp
test
add
add
mov
jnp
jle
arpl
bound
xchg
add
stc
jno
mov
add
add
cmc
sbbl
add
add
stos
jns
stos
pop
gs
stc
jle
addl
enter
mov
add
mov
pop
cmpl
je
push
push
add
sub
push
sub
add
shr
xor
xor
sub
add
rol
pop
pop
push
dec
sub
sub
pop
push
push
ror
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
add
push
add
add
add
pushf
mov
lcall
test
add
incb
xchg
add
add
repnz
sahf
mov
add
jbe
fnstcw
mov
add
xchg
repnz
leave
add
add
lcall
js
int3
fldz
ret
dec
or
add
and
mov
lcall
incl
add
jl
or
ficompl
rcrl
push
push
call
add
ljmp
pop
push
pop
add
int
cmc
imul
xchg
pusha
add
mov
subl
js
in
hlt
pop
push
push
xor
pop
call
push
dec
pop
cmpl
je
push
push
sub
ror
push
or
not
add
sub
xor
sub
shl
xor
pop
add
sub
add
pop
push
lea
pop
push
call
push
lea
push
call
lahf
add
add
addb
push
mov
stc
arpl
sti
push
add
add
iret
je
pop
test
sbbl
add
xorb
cmpl
je
push
push
add
sub
shr
lea
push
and
add
ror
sub
shl
not
not
pop
dec
xor
rol
pop
push
sub
lea
dec
pop
push
push
lea
push
push
push
push
call
add
add
pop
cld
cwtl
ret
xchg
rolb
xchg
addb
gs
pusha
pop
xlat
add
add
mov
rol
jl
cwtl
pop
imulb
jp
add
lcall
push
xor
add
push
lea
push
call
push
add
add
stos
mov
add
fcmovne
add
divl
add
xchg
mov
popf
add
mov
mov
push
js
jnp
in
fnstcw
lods
mov
mov
add
lcall
add
add
lock
lcall
cmp
rol
je
push
push
inc
push
and
add
rol
dec
dec
sub
dec
pop
shl
dec
inc
shr
pop
push
shl
pop
push
call
push
push
call
add
outsl
scas
gs
xchg
add
cltd
pop
add
addr16
les
sti
add
fwait
outsl
jae
addl
add
jp
sub
pop
cmpl
je
push
push
inc
push
push
pop
add
sub
sub
xor
pop
ror
ror
lea
pop
push
rol
pop
push
call
push
lea
push
push
push
lea
push
lea
push
call
mov
fiaddl
add
add
add
lds
jno
add
sti
fiaddl
fldl
jne
clc
pop
mov
push
cwtl
add
push
add
js
add
std
add
sub
pop
cmpl
je
push
push
xor
shr
dec
push
or
inc
add
ror
ror
inc
lea
sub
lea
pop
not
add
lea
pop
push
push
push
lea
push
push
push
call
add
add
fildl
jl
in
bound
into
lock
add
roll
loope
add
roll
xlat
jae
out
movsl
add
pop
xchg
out
add
out
sub
pop
push
call
push
lea
push
push
lea
push
lea
push
call
xchg
lcall
add
mov
add
fst
out
add
jns
xchg
loopne
add
mov
nop
add
ret
push
std
enter
clc
jae
rclb
add
cmpsb
jl
add
add
pop
pop
sub
pop
cmpl
je
push
push
xor
sub
push
push
pop
add
sub
shr
sub
not
dec
dec
pop
rol
xor
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
popa
add
add
add
ja
movsl
lahf
add
sbbl
add
popa
add
pop
xchg
add
ja
add
movsl
xchg
jecxz
add
lcall
push
add
ror
pop
call
push
push
push
call
add
add
add
in
add
add
iret
mov
push
push
rcrb
add
arpl
mov
mov
movsb
pop
add
add
mov
stos
sub
pop
cmpl
je
push
push
dec
dec
push
xor
add
sub
not
sub
not
sub
shl
pop
sub
pop
push
sub
not
xor
ror
pop
push
push
shl
lea
shl
not
pop
call
push
inc
pop
cmpl
je
push
push
add
rol
push
push
pop
add
shr
sub
dec
pop
lea
pop
push
push
push
lea
push
push
push
push
call
add
add
xchg
fwait
add
xchg
fldl
add
add
fs
stos
mov
incb
add
add
lcall
call
push
push
call
add
mov
addb
add
add
mov
jo
add
int3
jnp
leave
pop
add
push
add
loope
cmpsb
test
mov
mov
add
in
arpl
test
mov
cmpl
je
push
push
push
and
add
dec
sub
rol
rol
not
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
test
int
pop
loopne
jno
jbe
add
add
add
pop
add
js
add
fdivl
add
out
add
jmp
add
push
push
dec
pop
call
push
push
push
lea
push
push
push
call
add
add
popf
push
add
add
add
add
iret
add
stos
out
add
cmc
popa
pop
add
add
xchg
push
scas
test
add
mov
cmpl
je
push
push
dec
push
or
inc
add
lea
sub
xor
xor
sub
add
xor
pop
lea
add
ror
pop
push
not
pop
push
push
push
call
add
add
jo
in
rcrl
add
call
add
add
faddl
add
add
mov
enter
in
add
add
popl
push
fsqrt
add
mov
jecxz
xchg
jp
iret
add
cwtl
add
popl
fildl
pushf
clc
bnd
sub
pop
call
push
lea
push
push
push
push
push
lea
push
call
lcall
testl
mov
in
add
jl
jmp
ljmp
push
mov
lcall
lods
push
add
cmpl
jne
mov
push
sub
sub
shl
pop
movl
push
xor
pop
jmp
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
add
add
add
add
add
jp
add
movsb
pusha
les
add
mov
cwtl
add
push
add
add
jbe
pop
shll
add
add
bound
add
add
rclb
addb
push
ror
dec
shl
add
pop
pop
push
sub
pop
pop
pop
push
push
push
lea
push
call
test
add
repnz
rclb
add
add
mov
add
add
pop
rolb
add
add
add
pusha
popf
mov
lock
lcall
push
shl
add
add
lea
pop
ret
push
push
push
push
lea
push
lea
push
call
lods
add
pop
repnz
add
add
push
mov
in
add
jmp
mov
add
mov
add
push
jb
insb
stos
roll
cwtl
adcl
ja
push
add
lret
ret
add
push
add
jne
add
add
add
lahf
jl
add
ljmp
in
call
push
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
mov
add
add
jmp
repnz
stc
shll
add
fwait
add
add
std
add
movl
mov
test
add
leave
add
sub
pop
add
cmpl
jne
push
push
add
push
and
add
ror
sub
add
add
rol
pop
xor
add
pop
push
dec
pop
pushl
push
dec
ror
add
rol
pop
call
push
lea
add
sub
pop
push
push
rol
add
shl
pop
call
jmp
push
xor
pop
cmpl
je
cmpl
jne
push
dec
not
add
pop
mov
push
add
pop
call
push
push
push
call
add
add
add
add
into
add
mov
add
cli
stos
add
fldenv
data16
add
leave
jmp
push
add
jmp
add
sub
pop
ret
jmp
push
pop
cmpl
jne
push
push
shl
push
xor
add
dec
xor
sub
add
pop
sub
rol
pop
push
push
call
hlt
pop
shr
mov
add
mov
xchg
add
pop
add
add
jbe
mov
scas
sahf
add
std
add
add
in
sub
pop
pushl
call
push
sub
add
pop
push
push
shl
sub
pop
call
push
push
push
lea
push
push
push
lea
push
call
add
add
add
cli
std
jmp
add
cmc
lcall
add
clc
add
add
andb
add
add
rcr
add
pop
lods
add
add
add
out
mov
add
add
ret
sahf
xchg
mov
add
add
sub
pop
jmp
push
push
lea
push
push
lea
push
call
push
stc
xchg
add
in
xchg
add
add
mov
pusha
iret
add
add
rcll
jb
add
mov
cmpsl
add
mov
fwait
add
mov
add
bound
add
popl
pushf
add
movsl
xchg
cmpsb
add
add
sub
pop
cmpl
jne
push
push
push
push
push
lea
push
push
call
jl
add
add
cltd
clc
testb
mov
stc
add
aam
add
add
aam
pop
shr
xchg
into
into
imul
mov
push
sub
pop
mov
push
pop
mov
push
shr
pop
push
push
push
sub
push
or
not
add
ror
sub
lea
xor
pop
rol
rol
sub
lea
pop
push
sub
dec
shr
rol
pop
pushl
call
push
add
sub
pop
call
push
push
lea
push
xor
add
dec
add
sub
pop
add
xor
dec
pop
push
lea
push
push
push
push
call
popf
ja
add
mov
add
add
cmpsl
jno
add
lods
sar
add
add
call
jno
mov
add
arpl
add
stos
pop
popa
insb
mov
push
add
add
jnp
pop
push
mov
sub
pop
pushl
push
not
pop
call
push
lea
push
call
js
popl
sahf
testl
add
jp
add
add
scas
loope
mov
add
add
lret
in
insb
add
push
jnp
jmp
add
aad
fucomp
add
pop
pop
aad
insb
add
mov
movb
add
out
add
nop
fdivp
add
sub
pop
call
push
push
shr
push
sub
add
sub
sub
add
sub
sub
pop
rol
lea
dec
pop
push
ror
sub
xor
pop
pushl
push
inc
sub
dec
pop
call
push
push
push
call
push
pop
pop
xchg
add
add
add
ficoml
add
js
add
add
add
fwait
out
in
cli
lods
subb
out
movb
add
add
add
add
add
cmpb
mov
pop
add
movsl
loop
jle
roll
xlat
out
cltd
ljmp
add
lcall
shrb
xchg
push
add
push
and
add
sub
sub
sub
sub
dec
pop
ror
dec
pop
push
push
push
push
push
push
call
int3
add
add
iret
add
add
push
pop
out
roll
ljmp
add
add
add
js
add
data16
out
add
je
aam
add
in
mov
add
mov
loope
add
mov
add
add
lea
push
pop
pushl
call
push
push
call
scas
add
add
flds
add
shlb
xlat
jp
jecxz
jmp
xchg
cli
cmpsl
xchg
add
arpl
in
test
mov
add
add
mov
xchg
jne
mov
add
add
add
add
sub
pop
call
push
push
rol
rol
ror
push
or
inc
add
xor
lea
sub
rol
shl
inc
add
pop
shr
not
pop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
lods
mov
jno
add
lock
add
addb
adcl
imul
in
add
pop
add
add
fldenv
pushf
pop
xlat
add
jne
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
add
popa
add
sar
pop
add
mov
add
aad
mov
fcoms
sti
aam
not
cmc
leave
add
jmp
add
scas
ja
jmp
test
fcoml
add
sub
pop
call
push
push
lea
push
push
call
cwtl
sub
test
mov
je
testb
add
icebp
add
imul
loope
mov
mov
into
add
sub
pop
call
push
push
inc
inc
lea
push
and
add
sub
pop
add
sub
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
stos
add
addb
jno
add
enter
add
add
add
loope
add
add
xchg
flds
hlt
xchg
pop
add
ret
add
negl
mov
shr
add
lcall
jne
push
shl
shl
shl
pop
call
call
push
push
shl
not
lea
sub
push
xor
add
inc
sub
sub
sub
pop
ror
add
pop
push
shr
pop
pushl
push
push
push
push
push
push
lea
push
push
call
jmp
in
gs
mov
add
add
add
jp
loopne
add
popa
jae
jl
imul
add
xchg
cmc
fldt
mov
add
add
fcmove
add
add
cmpsb
cmc
stc
aad
add
add
int3
add
add
sub
pop
call
push
add
pop
call
push
push
sub
xor
push
or
inc
add
lea
sub
not
pop
dec
rol
shl
pop
push
push
push
push
call
aam
stos
mov
add
xchg
fs
cmpsl
sar
xchg
add
mov
movsb
testb
push
add
add
jecxz
int3
stos
add
insb
add
add
jmp
js
add
addl
add
add
out
add
ja
add
in
pop
add
loopne
lea
jne
push
rol
dec
pop
call
call
push
push
ror
push
sub
add
xor
sub
lea
inc
ror
sub
pop
sub
inc
xor
pop
push
shl
sub
xor
pop
pushl
call
push
ror
pop
call
push
push
inc
sub
push
sub
add
dec
sub
add
pop
shr
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
rolb
test
movb
mov
add
push
add
add
add
pushf
scas
fwait
mov
xchg
in
sarl
in
mov
add
mov
add
jno
add
add
cwtl
add
lods
fcomip
push
xchg
add
add
jne
push
add
pop
call
push
pop
lea
push
push
lea
push
push
push
push
lea
push
push
push
push
call
pusha
mov
add
add
data16
mov
ljmp
add
cmpsb
add
movsb
add
jno
xchg
add
jb
add
push
data16
faddl
into
test
lahf
in
add
in
aam
imul
mov
add
add
out
add
add
add
push
add
shrb
lds
push
inc
push
xor
add
xor
sub
xor
pop
sub
sub
sub
pop
push
lea
inc
pop
pushl
push
push
lea
push
push
push
push
push
push
push
call
jecxz
jne
add
addb
aam
jbe
imul
lcall
outsl
add
loope
pop
mov
add
add
add
mov
push
in
clc
push
mov
add
pop
stos
sub
pop
call
call
push
push
sub
push
and
add
ror
sub
sub
ror
ror
pop
ror
pop
push
dec
sub
rol
pop
pushl
push
shl
ror
add
add
pop
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
scas
fs
add
pop
out
pop
movsb
fildl
add
jb
add
scas
add
cld
popa
xchg
movl
add
mov
add
add
fcmove
test
add
add
leave
add
pop
fsubs
pop
add
jp
add
add
loop
add
sub
pop
call
push
push
shr
sub
push
sub
add
lea
lea
add
ror
sub
shl
ror
lea
pop
lea
add
xor
xor
pop
push
push
lea
push
call
mov
jno
out
in
lret
add
stc
test
addr16
in
mov
roll
mov
filds
add
add
push
pushf
mov
bnd
xchg
iret
add
loope
pop
testl
sub
pop
pushl
call
push
lea
pop
call
push
push
add
sub
push
sub
add
inc
sub
not
rol
ror
pop
add
dec
xor
pop
push
xor
pop
pushl
call
push
push
xor
push
push
pop
add
lea
not
sub
xor
pop
ror
xor
ror
pop
push
push
xor
push
sub
add
inc
not
lea
sub
lea
pop
dec
lea
not
pop
push
shr
xor
inc
pop
call
push
rol
pop
pop
push
ror
dec
shl
pop
dec
jne
call
push
push
call
xchg
outsl
je
cmpsb
sbbl
jl
push
faddl
add
scas
xchg
push
sbbb
mov
add
add
pop
mov
jmp
nop
ja
mov
bound
add
add
push
ror
pop
int
push
lea
push
lea
push
push
push
lea
push
push
push
call
stos
pop
push
jns
add
jp
add
jns
cwtl
add
out
add
add
into
enter
cwtl
fldl
xchg
ficoml
push
push
add
add
add
add
add
in
add
movsb
add
add
pop
push
fiaddl
add
pop
test
int
add
test
testb
add
icebp
add
nop
add
add
in
loopne
lea
push
push
ror
sub
shr
push
or
inc
add
dec
sub
pop
lea
shl
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
out
mov
lock
xchg
add
push
mov
jecxz
add
pop
fiaddl
out
test
add
mov
add
add
rcrb
push
mov
add
test
in
fdivr
lcall
jne
push
push
lea
push
call
fsubrs
add
jnp
add
add
xchg
add
xlat
add
mov
fdivrs
adc
xchg
jno
mov
addl
mov
in
hlt
pop
call
push
sub
sub
pop
push
push
push
push
lea
push
call
xlat
add
add
xchg
push
add
push
add
add
add
mov
add
mov
lods
add
add
aam
jnp
in
lock
call
push
push
not
sub
push
xor
add
ror
ror
shr
dec
sub
pop
rol
dec
ror
pop
push
push
push
push
push
push
push
call
add
iret
push
sbb
add
add
lret
jnp
andb
shlb
add
add
add
lds
mov
iret
xchg
movsl
sub
pop
pushl
push
rol
pop
call
call
push
push
push
call
mov
arpl
mov
lds
mov
mov
ror
add
push
add
add
xchg
xlat
xchg
jns
fstl
into
add
add
pop
add
cmpl
call
loope
ret
je
movsl
add
sub
pop
mov
lea
push
push
ror
push
push
pop
add
shl
lea
xor
sub
add
pop
add
inc
not
pop
push
lea
push
push
push
push
push
lea
push
call
popa
push
rol
out
add
fiaddl
cld
js
mov
test
fiadds
add
add
out
mov
divl
mov
jecxz
mov
lds
add
add
add
sub
pop
pushl
call
push
push
push
push
push
push
push
push
push
call
jo
imul
movsb
add
jbe
in
add
mov
in
add
pop
add
add
imulb
imul
xlat
add
mov
add
mov
mov
add
add
lcall
add
repnz
add
stos
add
lret
fldl
add
push
push
push
push
push
call
test
out
add
jne
push
in
arpl
push
jo
test
xchg
add
add
aam
xchg
add
roll
add
in
xchg
je
push
imul
add
hlt
mov
lea
sub
pop
push
push
push
push
lea
push
push
push
lea
push
call
out
out
movsl
rorl
nop
mov
mov
pop
je
cwtl
add
mov
push
mov
data16
add
mov
xchg
add
mov
add
in
in
lcall
add
lahf
push
push
je
push
push
call
cmc
test
hlt
add
cmpsb
add
add
lahf
scas
mov
movsb
je
add
pop
imul
mul
out
add
add
loope
scas
jb
add
pop
pop
push
fldl
push
addr16
add
mov
cwtl
add
push
call
popf
mov
js
in
in
pop
push
pushl
push
push
sub
dec
add
push
and
add
shl
sub
add
pop
add
dec
ror
pop
push
shl
rol
shl
ror
pop
push
push
sub
add
pop
call
push
push
sub
lea
sub
push
and
add
shr
dec
sub
shl
lea
shl
pop
inc
add
pop
push
pop
pushl
push
add
pop
call
push
push
shr
sub
pop
call
push
push
lea
lea
push
sub
add
lea
rol
shl
sub
inc
pop
ror
lea
dec
pop
push
dec
shl
pop
pushl
push
lea
push
push
lea
push
push
push
call
add
mov
fdivs
addb
mov
add
pusha
mov
or
jge
out
add
js
movsb
cwtl
add
add
out
add
sub
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
flds
xlat
add
insb
loope
add
pop
add
mov
stos
xchg
test
cltd
add
add
mov
ja
in
fcomps
shlb
add
add
push
shl
pop
mov
push
not
lea
add
pop
jmp
push
push
not
add
sub
push
and
add
not
sub
add
xor
pop
ror
inc
sub
pop
push
sub
rol
pop
pushl
push
push
push
lea
push
call
stos
rclb
mov
in
lock
lcall
stos
add
mov
mov
pop
std
add
ficoms
mov
jae
add
in
in
add
xchg
add
push
hlt
add
xchg
jae
cmpsl
add
jp
movsl
clc
add
fildl
lcall
xchg
adc
add
lea
push
push
push
push
call
add
add
mov
add
pop
pop
add
fcompl
add
in
add
jne
lret
test
add
add
add
roll
imul
loop
mov
add
shlb
add
add
fs
rolb
xorl
testl
in
call
shrb
push
lret
xlat
push
sub
rol
add
push
sub
add
shl
dec
inc
sub
sub
pop
xor
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
incb
add
lret
add
mov
add
push
lret
xchg
nop
mov
push
lods
ret
into
pop
cltd
add
fidivrl
mov
les
add
aam
pushf
jns
sub
pop
pushl
push
dec
pop
call
push
xor
pop
push
push
push
push
push
push
call
loope
pop
add
lcall
add
notb
idivb
add
xchg
push
int3
cltd
add
xchg
mov
loopne
add
add
out
jp
jae
pusha
pop
add
mov
add
lods
jns
add
fcmovnbe
add
aam
addl
in
in
pop
call
leave
push
lea
push
push
lea
push
lea
push
call
test
add
iret
mov
idiv
add
xchg
add
addb
jmp
add
mov
leave
xlat
add
mov
jae
push
add
cmpsb
flds
add
int
sub
pop
add
push
push
push
push
push
call
mov
add
cld
push
ljmp
mov
add
add
pop
add
add
add
add
lcall
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
lea
aad
add
gs
testb
add
add
add
mov
out
add
add
add
add
add
add
hlt
icebp
mov
fiadds
lcall
xor
push
push
push
push
call
xchg
stos
mov
cli
scas
lahf
add
add
add
arpl
test
sahf
insb
add
jecxz
push
sarb
mov
mov
push
lcall
push
push
lea
push
push
push
lea
push
push
push
push
call
cltd
test
fdivs
push
push
jb
add
loopne
add
mov
add
add
mov
call
mov
sub
pop
ret
leave
push
push
lea
push
push
push
lea
push
push
push
call
mov
fldl
add
into
add
lahf
add
push
ret
test
xchg
add
int
cmpsl
add
cmpsl
cmpsl
push
ret
mov
lcall
or
push
shl
pop
push
push
shr
pop
mov
push
ror
sub
pop
cmpl
jne
push
push
push
lea
push
push
push
call
roll
lret
mov
mov
mov
add
push
add
add
add
addr16
add
imul
in
call
mov
push
sub
pop
jmp
push
push
push
lea
push
push
push
call
rolb
roll
xchg
add
leave
arpl
incb
ficoml
insb
cmc
add
sub
cld
add
add
xlat
shlb
cli
scas
mov
mov
mov
ficoms
pop
roll
fistps
stc
mov
sub
pop
mov
push
lea
push
push
lea
push
push
call
jecxz
clc
lret
shlb
out
roll
in
cli
in
mov
aam
add
mov
add
add
add
testb
pop
fildl
jns
ja
mov
sti
andb
add
xchg
icebp
add
lock
mov
add
sarb
mov
add
sub
pop
and
push
lea
push
lea
push
push
call
cmc
stc
add
add
arpl
add
imul
clc
push
mov
cmpsl
loopne
cmc
orl
add
push
xchg
add
add
push
stos
faddl
scas
sub
pop
xor
xor
push
push
lea
push
lea
push
call
sti
jge
scas
add
rcrl
call
ja
pushf
add
add
ret
lods
jp
loopne
mov
add
into
add
test
mov
test
adc
repnz
mov
test
ljmp
lcall
rolb
push
push
push
push
push
push
push
push
push
call
fs
push
mov
add
mov
fwait
vpsubb
lock
add
filds
add
add
fwait
add
clc
add
add
leave
add
add
add
int
xchg
mov
mov
out
add
fiadds
test
in
fcomps
dec
call
movb
add
pop
dec
sub
push
push
lea
push
push
push
call
add
add
push
rcll
movsb
jb
add
jmp
add
fwait
cmc
add
add
out
mov
add
addl
cwtl
add
push
mov
frstor
add
movsb
xchg
add
add
testb
mov
add
lock
mov
into
add
in
in
pop
jmp
push
lea
pop
sub
pushl
push
push
push
lea
push
call
roll
add
adcb
cltd
add
subl
negl
xchg
pop
mov
add
add
add
add
add
add
jle
add
add
add
xchg
add
in
xchg
sub
pop
pop
sub
push
shl
pop
cmp
jne
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
popa
sahf
test
add
cwtl
add
fdiv
fcmovne
lret
jno
add
lock
nop
add
xchg
add
add
add
cmpsb
lcall
aam
arpl
clc
cli
add
enter
push
lea
push
call
add
jno
call
add
ljmp
pop
aad
add
add
mov
test
test
lods
pop
in
ror
stos
push
je
hlt
mov
mov
addb
add
add
aad
pop
cmc
incb
sub
pop
sub
push
dec
inc
not
pop
mov
push
push
push
push
call
insb
pop
iret
enter
xchg
pop
ret
jae
xchg
aad
add
sahf
movsl
add
out
push
aad
mov
std
jle
add
xchg
add
add
add
jb
in
lock
lcall
jmp
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
pushf
orb
add
pop
push
test
jns
xchg
add
into
add
add
sarl
add
add
rcrl
jns
xchg
loope
sub
pop
add
sub
push
push
push
push
lea
push
push
lea
push
push
call
movsl
add
lcall
jns
xlat
add
hlt
les
pop
add
loopne
xlat
add
add
add
add
push
popf
sub
pop
pushl
push
lea
push
push
push
push
call
mov
mov
lds
add
cmpsl
add
cld
mov
stos
add
add
add
add
iret
popa
add
in
rcll
push
xorw
add
add
add
jl
iret
sub
pop
pop
push
push
push
push
lea
push
call
bound
mov
cli
add
ljmp
push
ja
fs
add
popf
fildl
lcall
jmp
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
cld
fs
add
mov
jle
sarb
call
fstpl
push
fwait
add
add
jae
add
mov
bound
test
stos
add
in
mov
add
add
in
loopne
and
push
dec
pop
sub
cmp
jne
push
add
lea
pop
leave
push
sub
pop
ret
push
shr
pop
push
mov
push
push
lea
push
call
push
movl
pusha
stc
add
mov
push
addl
add
sti
jno
in
add
in
ror
add
pop
add
pushf
movb
add
mov
push
mov
add
lcall
cld
push
push
push
push
push
push
call
in
push
jp
add
lcall
notl
add
add
add
pop
add
add
add
add
ja
jo
imul
jge
cld
add
add
push
sub
ror
shl
pop
push
push
push
lea
push
push
push
push
push
call
cltd
mov
out
mov
into
xchg
add
add
in
add
icebp
add
add
addl
pop
sub
pop
push
push
push
push
push
push
push
call
int3
add
shll
addl
add
add
push
xchg
push
push
add
ja
add
pop
xorl
pop
flds
mov
add
add
add
movb
jge
fwait
xchg
sub
pop
push
push
sub
add
pop
mov
push
push
push
call
mov
popf
addr16
xchg
mov
add
add
push
mov
add
add
jb
add
jb
add
pop
add
add
push
int3
cltd
add
add
add
add
jnp
add
pop
mov
mov
pop
lea
push
lea
push
push
push
call
xchg
add
push
add
add
popl
push
add
xchg
add
int
mov
cmpsl
add
loop
cwtl
aad
repnz
push
add
add
add
add
mov
push
filds
sub
pop
sub
push
push
push
lea
push
push
call
push
scas
out
add
pop
mov
in
ljmp
add
lods
jl
add
in
jmp
add
adc
ljmp
mov
out
inc
jmp
pop
add
add
shlb
jmp
pusha
add
faddl
push
add
popf
popf
nop
add
add
fwait
test
mov
pop
xchg
out
add
mov
push
add
add
add
mov
push
add
sbb
add
mov
pop
mov
pop
add
push
pop
mov
add
push
push
call
stc
out
xchg
sarb
jae
pusha
cli
push
sbbl
pop
cli
xchg
add
push
add
rcrl
mov
ret
mov
aam
fnstenv
add
stos
add
mov
add
addb
sub
pop
mov
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
jp
add
popa
add
lods
mov
fildl
sbbl
enter
xchg
pop
add
xchg
lret
push
fadds
fildl
stos
popa
add
fwait
jge
add
add
mov
add
je
in
fcompl
notb
mov
out
push
lea
push
lea
push
lea
push
push
push
push
call
pop
pop
mov
imul
testl
cmc
add
les
test
add
lds
lcall
xlat
push
push
call
xlat
pop
mov
add
jns
pop
popl
filds
add
add
aam
scas
mov
testl
test
add
add
lcall
loopne
rol
push
lea
push
push
push
call
mov
add
add
mov
add
mov
pop
cltd
add
push
add
jl
mov
add
fistpl
add
adcl
sub
pop
rol
push
lea
push
call
out
add
lds
test
xlat
xchg
pop
mov
add
into
xchg
add
lea
in
push
add
xchg
mov
popf
fdivp
add
mov
xchg
fcmovnu
leave
mov
mov
fiaddl
mov
add
add
bnd
add
mov
in
clc
pop
xor
inc
push
add
dec
pop
cmpb
jne
add
push
sub
pop
cmp
je
add
push
push
push
push
push
lea
push
lea
push
call
add
je
add
mov
sahf
add
push
fcmovb
add
add
add
add
hlt
leave
lds
in
test
sub
pop
cmpl
jne
push
not
sub
shr
xor
pop
xor
pop
push
dec
add
sub
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
lahf
add
movsb
or
add
cmpsl
iret
add
pop
add
aad
jne
stos
test
jge
pop
nop
rcrb
out
push
add
clc
mov
add
sahf
in
add
pop
lret
jecxz
in
add
add
popf
mov
add
pop
pop
pop
push
add
add
rol
pop
pop
push
shr
pop
leave
ret
push
xor
rol
sub
pop
mov
push
push
push
push
push
push
lea
push
call
filds
push
ret
clc
testb
pusha
jnp
fnstcw
xchg
roll
rolb
add
add
add
jns
add
xchg
pop
repnz
xchg
test
enter
popa
outsl
movl
add
lea
push
push
push
push
lea
push
call
jecxz
mov
add
mov
cmpsb
push
pop
out
in
add
pusha
add
add
add
fldl
xchg
or
jb
je
add
aam
movsl
ja
lds
fs
stos
jle
add
call
roll
arpl
add
int3
add
mov
lock
add
add
lcall
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
pop
pop
pop
xlat
add
insb
mov
add
add
fcmovbe
gs
push
jae
js
pop
add
movb
add
test
sti
add
in
fcompl
and
push
push
push
lea
push
lea
push
push
push
call
arpl
add
add
mov
xchg
movsb
xchg
add
add
add
in
add
add
ljmp
in
addr16
add
mov
ret
testb
fs
pop
call
push
inc
pop
push
push
push
call
mov
push
add
mov
sti
jne
rolb
scas
hlt
mov
popa
add
add
aam
fldl
fs
pop
jp
in
clc
pop
call
push
pop
xor
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
sar
pusha
jo
arpl
loopne
roll
jl
arpl
push
test
mov
mov
pop
add
mov
mov
mov
jge
cli
add
add
mov
mov
pop
lcall
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
lahf
nop
repnz
add
add
loop
mov
add
add
mov
add
mov
add
add
out
in
lock
testl
add
lcall
push
push
push
push
lea
push
push
push
lea
push
call
add
add
aam
push
add
jp
int
addl
add
mov
add
add
add
stos
out
add
add
int3
mov
mov
add
add
bound
stos
add
add
lcall
sub
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
mov
out
add
add
out
add
flds
ja
add
add
xlat
add
add
lods
add
pop
add
fcompl
push
add
sub
not
pop
leave
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
in
add
jo
mov
add
movsl
push
add
fiadds
add
add
add
add
jbe
lods
add
add
bound
add
bound
push
add
xchg
mov
jbe
lret
in
mov
pop
ret
push
pop
push
push
sub
lea
pop
mov
add
push
lea
push
push
push
push
push
call
clc
add
add
hlt
add
add
add
sbbl
scas
add
add
add
mov
stos
movb
xlat
add
xchg
pop
add
test
cmpl
add
add
jbe
add
sub
pop
push
push
push
push
call
add
add
add
testb
mov
stos
les
stc
add
add
stos
add
jmp
add
outsl
lods
add
imul
lcall
push
push
push
push
push
call
xlat
pushf
add
xlat
in
add
add
cmpsl
data16
mov
xchg
add
int3
jge
lret
add
iret
std
add
jb
mov
icebp
add
add
add
xchg
pop
addl
mov
add
out
int
add
lcall
roll
add
cltd
sub
pop
push
push
lea
push
call
jb
pop
jno
data16
add
outsl
mov
outsl
add
jmp
xchg
insb
add
jnp
add
mov
andl
xchg
jae
add
mov
add
sub
pop
push
push
push
push
push
push
push
call
mov
add
add
add
add
in
add
pusha
mov
jbe
add
lods
jo
aam
sti
add
mov
add
jnp
push
stos
out
sub
pop
mov
push
push
not
rol
pop
pop
push
push
push
push
call
add
in
jp
leave
iret
lcall
arpl
xchg
sahf
add
lret
imul
jle
roll
add
mov
clc
cmpsb
shll
mov
lock
nop
add
add
cltd
add
add
jge
stos
scas
cmc
sub
pop
lea
push
push
push
push
lea
push
call
add
add
push
pop
popa
sti
pop
jae
icebp
add
add
fildl
mov
add
mov
pop
data16
add
les
add
add
add
xchg
mov
xchg
add
add
sarb
add
sub
pop
sub
mov
push
rol
pop
shr
push
shl
dec
ror
sub
pop
add
mov
push
push
call
arpl
xchg
add
mov
pop
add
insb
add
mov
add
pusha
push
add
add
add
mov
mov
pop
js
int3
xchg
sarl
ret
ja
mov
jle
sbb
xchg
call
imul
mov
in
clc
lcall
fcos
jae
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
mov
jns
add
into
push
add
add
imul
add
mov
js
add
bound
in
loopne
lcall
inc
clc
mov
push
xor
shr
add
pop
add
push
dec
dec
shl
pop
xor
push
push
push
lea
push
call
stc
mov
pushf
xchg
insb
add
gs
add
ficomps
add
add
add
mov
add
sub
pop
lea
push
add
xor
pop
mov
add
push
push
push
push
push
push
push
push
push
call
push
lret
xchg
jbe
add
loopne
xchg
push
loope
fs
cmpsl
add
iret
add
add
add
add
lock
pop
mov
nop
mov
sub
pop
xor
rol
push
add
not
rol
pop
nop
push
push
lea
push
push
push
push
push
call
insb
add
add
add
mov
push
mov
fildl
subb
add
sbb
mov
add
add
add
mov
add
add
scas
ja
add
jo
cmc
add
pushf
mov
fdivs
out
loope
cmpsl
out
add
in
in
nop
push
push
lea
push
push
push
push
push
call
cmpsl
aam
pop
add
add
push
add
mov
fmul
std
leave
add
popa
add
xchg
loopne
popf
add
push
fxch
add
mov
mov
popa
jge
mov
xchg
icebp
mov
jbe
mov
stc
faddl
add
mov
arpl
jge
jl
out
testl
addl
pop
data16
in
in
lcall
add
je
xchg
push
push
push
lea
push
push
push
call
fistpl
stc
filds
add
jbe
scas
mov
xchg
add
into
add
aad
mov
add
add
call
test
pop
add
push
add
add
add
shl
sub
pop
nop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
testb
je
pushf
test
jne
out
add
add
add
add
lea
incb
add
xchg
repnz
cld
test
push
add
fcoml
mov
add
jbe
mov
test
fdivr
lcall
push
inc
add
inc
pop
inc
nop
push
add
ror
pop
nop
cmpb
jne
push
sub
pop
add
push
push
call
roll
stos
js
add
add
add
ret
pop
iret
stc
add
add
imul
mov
add
add
xchg
push
add
mov
add
fsubs
cmpsb
nop
xlat
int3
jl
mov
stos
out
add
pop
sub
pop
nop
push
xor
ror
add
pop
nop
cmp
je
push
xor
rol
inc
pop
nop
push
sub
pop
nop
push
lea
push
push
push
lea
push
push
push
push
call
rclb
pop
testb
loope
roll
in
add
icebp
jno
mov
loope
push
add
into
cli
xchg
mov
add
mov
add
jecxz
add
add
popl
mov
add
add
loop
add
jge
xchg
add
popf
lock
sti
lahf
pop
add
push
add
xchg
add
movl
rcrl
push
push
push
push
push
push
push
lea
push
push
push
call
ret
sti
shrl
lods
jb
add
jecxz
notl
add
jnp
add
add
add
incb
hlt
add
cmpsl
pop
pop
add
movb
add
bound
mov
fcomps
cmp
jb
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
loope
add
mov
add
push
cli
pushf
insb
lret
notl
mov
add
xchg
add
add
add
aad
add
xchg
add
loope
int3
mov
add
add
cli
cmpsl
sub
pop
xor
push
lea
push
push
lea
push
lea
push
call
ljmp
loopne
xchg
add
add
add
xchg
add
add
push
in
add
mov
aad
enter
xchg
add
add
push
add
jns
add
mov
add
scas
popl
add
add
outsl
push
add
add
repnz
add
sub
pop
jmp
push
push
push
push
push
push
lea
push
push
push
push
call
lcall
xchg
add
movsl
jo
notb
jp
pop
jle
loop
out
add
int
int
lcall
and
rcll
cmp
lahf
push
call
negl
add
data16
add
mov
loop
add
jp
add
mov
mov
jle
jmp
add
ja
addb
add
add
rolb
repnz
mov
pop
movzwl
mov
push
lea
push
push
push
push
push
lea
push
call
xchg
hlt
add
add
add
xchg
xchg
add
aam
add
add
add
mov
imul
mov
add
add
push
add
push
add
add
iret
js
js
out
add
xchg
mov
add
mov
sub
pop
add
push
inc
add
pop
mov
push
push
push
push
call
add
ja
add
call
out
add
jae
xorb
jnp
stos
repnz
lock
arpl
mov
lcall
leave
push
sub
not
lea
pop
xor
push
add
add
pop
shl
push
add
sub
sub
pop
xor
push
lea
push
lea
push
lea
push
push
push
push
push
call
ja
out
add
fildl
js
lods
add
add
mov
fs
push
pushf
push
enter
add
out
add
lret
add
add
testl
pop
fadds
sub
pop
shl
xor
push
push
push
call
add
rolb
jecxz
ja
add
lock
add
add
in
add
add
jnp
nop
pop
addl
add
add
mov
pop
add
int
mov
mov
pop
movsb
add
mull
aad
pop
sub
pop
shl
xor
push
rol
pop
mov
push
push
call
pop
add
out
cmpsl
mov
roll
pop
push
loopne
sti
add
bound
add
movl
out
movsl
add
out
add
mov
mov
bound
push
addl
jmp
movsb
out
xchg
rcrb
add
sub
pop
add
pop
push
lea
push
push
push
call
add
add
sti
add
imul
fwait
int3
fnsetpm(287
add
jae
lods
popa
push
add
js
add
xlat
add
je
add
xchg
enter
add
push
mov
bound
lock
add
lds
mov
push
out
add
xchg
add
mov
lods
lock
rolb
mov
pop
push
add
lea
pop
pop
pop
push
shl
pop
leave
push
push
call
xchg
testb
stos
out
ret
add
mov
jae
xchg
push
jno
pop
pop
add
pop
add
push
jle
je
xchg
div
add
mov
lock
mov
cmpsl
add
out
jp
xchg
jge
push
mov
add
std
rclb
in
clc
lcall
or
push
push
lea
push
lea
push
push
push
call
jbe
add
mov
aam
add
add
lcall
movb
add
mov
cmpsb
add
push
add
call
loope
ror
inc
pop
mov
push
push
shr
dec
dec
pop
push
push
shl
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
pop
roll
cld
lcall
pop
add
mov
pop
add
lea
lret
add
add
imul
add
add
imul
jae
out
add
add
sub
pop
mov
push
inc
rol
add
pop
mov
push
dec
pop
mov
push
push
lea
push
push
push
push
push
call
ret
mov
add
mov
jo
add
arpl
add
test
mov
shl
add
add
leave
add
mov
lcall
rorb
test
or
add
sub
mov
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
shrb
stos
push
out
lcall
mov
add
cmpl
out
xchg
add
add
mulb
add
cltd
addl
sarl
mov
add
scas
mov
pushf
lret
jo
mov
mov
in
fdivr
lcall
jno
test
je
push
push
push
push
push
push
call
pop
push
add
add
js
jae
fdiv
mov
outsl
pop
addl
add
pop
add
test
addr16
mov
push
lds
add
add
add
add
xchg
mov
loopne
lcall
add
cwtl
outsl
add
add
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
les
add
add
mov
add
add
add
mov
leave
push
mov
sub
pop
mov
mov
push
push
lea
push
push
push
push
push
call
mov
pop
jns
rcr
ljmp
add
cmc
js
add
jns
xchg
add
add
in
sti
pop
mov
iret
mov
add
stos
rolb
in
lcall
push
lea
push
push
push
push
lea
push
call
fiaddl
fwait
add
xchg
xchg
jo
stc
loope
add
mov
add
outsl
add
add
ljmp
sub
pop
cmp
je
push
lea
push
push
push
push
push
push
push
call
add
lahf
add
sti
imul
add
cmpsl
ljmp
mov
lahf
add
loope
xlat
add
add
add
mov
std
in
mov
sub
pop
test
je
push
push
call
add
xchg
mov
lods
push
add
add
movsb
pop
add
add
add
add
cld
add
push
add
mov
notb
add
jae
pop
lcall
test
add
add
xchg
jno
movb
add
cwtl
pop
out
push
mov
clc
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
movsl
add
lahf
imul
movsb
add
add
bound
rolb
add
cli
add
cmc
add
add
add
out
hlt
cld
les
add
add
ret
int
add
fcompl
push
lea
sub
pop
cmp
je
push
push
push
push
push
push
push
push
push
push
call
fwait
add
add
movsb
pop
icebp
arpl
jo
pop
enter
add
ret
add
data16
add
test
add
js
test
out
mov
add
xchg
ljmp
push
push
add
add
fadds
add
add
stc
push
test
add
rorb
stc
call
std
sub
xor
pop
xor
pop
push
rol
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
mov
mov
pop
stc
pop
add
mov
lret
call
ljmp
in
add
mov
xchg
mov
ljmp
aam
in
leave
sub
pop
pop
push
xor
pop
pop
push
xor
shl
lea
pop
leave
push
sub
pop
ret
mov
push
ror
pop
inc
cmp
jne
push
sub
lea
inc
pop
lea
mov
push
push
push
push
call
pushf
mov
pop
add
add
jl
lahf
stc
add
add
mov
test
ret
add
lret
add
mov
mov
test
je
push
lea
push
push
push
push
push
call
fs
jne
movb
xchg
int
scas
mov
cmc
mov
lods
add
push
fwait
add
iret
add
cli
test
add
lds
add
lock
mov
out
add
add
pop
shrb
add
push
add
call
clc
add
rolb
filds
lcall
push
add
push
pop
cmp
jne
mov
push
push
push
call
sub
xchg
add
loope
icebp
mov
test
cwtl
jns
add
add
mov
lods
add
push
fildl
pushf
add
add
rcl
insb
fcmovu
add
pusha
out
add
mov
in
hlt
pop
test
je
mov
push
push
push
push
lea
push
push
push
push
push
push
call
pop
clc
repnz
mov
ror
add
lahf
add
movsl
add
add
add
add
add
clc
jno
mov
add
aad
sarl
add
in
in
sti
add
jo
add
xlat
push
jne
add
imul
ljmp
lret
mov
imul
lcall
roll
push
call
add
shlb
add
data16
push
lock
add
add
in
mulb
mov
lahf
iret
add
js
fiadds
lcall
loopne
test
std
call
jmp
push
lea
inc
pop
xor
push
push
push
lea
push
lea
push
push
call
add
add
mov
mov
rcr
pop
mov
cmpsb
pop
outsl
cli
movl
clc
add
xchg
add
clc
ret
jle
lock
movsl
loopne
loope
cli
lea
add
mov
add
pop
aad
lods
add
add
add
add
aam
mov
add
add
add
add
lcall
pop
push
lea
push
lea
push
push
call
out
cmpsb
jno
scas
add
add
test
rcrb
add
add
stc
add
mov
pop
add
in
jae
mov
add
add
std
add
int3
sub
pop
pop
pop
push
add
pop
leave
push
push
push
push
call
mov
clc
fadds
add
sti
movsl
roll
mov
fdivrl
stos
add
pop
jbe
mov
add
in
add
idiv
lahf
add
cwtl
jmp
outsl
add
mov
sahf
add
out
mov
sahf
pushf
add
out
add
gs
jmp
lds
pop
enter
lock
lcall
or
push
push
lea
push
push
push
call
mov
add
push
stc
pop
test
int
test
push
lcall
add
imul
add
xchg
add
add
add
insb
in
mov
add
mov
add
mov
add
scas
xchg
jnp
icebp
movsb
aam
jmp
pop
xchg
add
pusha
push
icebp
sub
pop
lea
push
shl
dec
pop
pop
push
ror
xor
shl
pop
pop
push
push
lea
push
lea
push
push
push
call
rcrb
negb
add
out
add
push
add
xchg
add
mov
gs
add
add
sti
fsubrs
imul
sbbb
test
stos
add
mov
sub
pop
pop
push
sub
add
pop
pop
push
push
push
push
push
call
pop
mov
add
out
add
add
mov
cld
rolb
lea
roll
xchg
rcll
jne
jmp
add
add
push
ja
aam
stos
push
add
icebp
xchg
sti
lahf
xchg
in
aam
test
add
std
add
add
lcall
push
ror
pop
ret
mov
push
sub
pop
pop
push
push
lea
push
push
push
push
push
push
call
cmpsl
add
hlt
clc
pop
add
imul
pop
mov
add
add
add
push
add
add
lret
faddl
push
popa
aam
pop
add
scas
in
addl
rolb
loopne
lock
push
add
fwait
add
loopne
pop
pop
push
push
push
call
xchg
je
fildl
mov
xchg
add
mov
test
mov
mov
xlat
roll
mov
mov
data16
js
xchg
sbb
push
xchg
addl
les
pop
popa
add
test
xchg
sub
pop
pop
leave
push
lea
push
push
lea
push
call
loop
push
cmc
xchg
xchg
jp
out
add
aam
add
in
add
subl
pop
cmpsl
mov
cwtl
out
add
sub
pop
ret
cmp
mov
and
mov
mov
mov
loope
mov
ror
mov
mov
lret
add
mov
xchg
lret
or
orl
add
mov
adc
inc
sub
add
test
and
test
mov
icebp
pop
ja
cltd
subb
or
outsl
pop
rcl
mov
hlt
jo
subl
dec
push
lock
sbb
ds
mov
test
in
pop
sub
rol
dec
xchg
imul
clc
pop
loop
and
push
jnp
push
jne
jle
movsl
pop
inc
xchg
icebp
in
cmpsb
cli
je
sti
cmpsb
xor
jbe
rcrl
push
je
xchg
xchg
test
lahf
jg
movsb
push
cmpb
jns
cmpsl
mov
test
stc
fistps
or
loope
movsl
out
lods
pop
cmpsl
lock
xor
orb
inc
cmpsb
nop
jno
out
pop
sar
mov
push
push
jbe
xor
xchg
or
js
adc
push
jle
adc
sub
mov
cmp
add
push
mov
pop
sub
xorb
mov
xchg
sub
mov
ds
cmp
sbb
add
jns
push
imul
mov
addr16
xchg
shrl
add
sti
movaps
iret
xor
jno
lahf
mov
mov
jno
add
and
mov
in
pusha
mov
dec
ds
fstpl
pop
test
pop
mov
clc
adc
ja
fistpl
sbb
pop
lcall
fdiv
out
enter
in
daa
and
jne
stos
cmp
repnz
mov
dec
pop
in
fsts
sahf
jg
sbb
jecxz
xchg
fisubl
frstor
xchg
inc
xor
and
xlat
dec
sbb
add
jle
stos
inc
rcll
cmp
jecxz
aas
movsl
xor
out
mov
repnz
sbb
add
lods
fs
push
decb
push
es
arpl
aas
push
jle
leave
inc
jecxz
sbb
sbbl
pushf
pop
fbld
cwtl
sbb
into
or
fsubrl
push
lret
sti
pop
fs
and
and
jno
lahf
dec
mov
and
xlat
lock
aad
pop
sub
push
jl
and
jmp
inc
aam
scas
cmp
push
cmp
bound
or
jp
aas
fstp
xor
mov
ja
inc
xorb
sub
addr16
cmp
push
ja
add
and
pushl
dec
outsb
imul
mov
add
jmp
mov
fsubrs
xor
inc
xchg
sub
mov
push
jne
push
sbb
mov
les
sbb
cmpsl
mov
js
jp
pop
repz
je
jg
pop
adc
jb
ficomps
icebp
mov
xorl
add
lods
daa
dec
scas
stos
ljmp
test
xor
push
and
iret
adc
mov
fs
push
cli
jp
fnsave
pushf
sbb
cmp
cltd
jg,pt
pop
lock
insl
mov
pop
or
mov
imul
mov
pushf
xor
pop
xor
das
leave
clc
push
icebp
sahf
mov
jno
lret
jbe
and
mov
dec
push
sbb
or
fxam
arpl
xchg
xor
xor
ds
int3
push
xor
adc
xchg
and
add
dec
dec
xor
decl
fwait
add
pop
shrb
shr
lea
setge
xchg
mov
jge
bound
mov
scas
jmp
stos
pop
and
loopne
and
mov
inc
xor
sbb
out
jo
push
xrelease
push
xlat
sub
mov
add
inc
cli
cmpsb
mov
int
xor
jp
inc
aam
lods
aam
mov
mov
aam
cltd
stos
loope
mov
and
mov
loop
sub
outsb
jl
repz
shlb
or
inc
mulb
jns
xorb
insl
xor
push
jp
fistps
lds
cmp
mov
jbe
ret
dec
jns
mov
xlat
push
test
fs
inc
xchg
mov
xor
aad
dec
fildll
lods
xor
pop
shlb
or
fidivs
jb
push
roll
push
lahf
jne
mov
xlat
sub
rorb
fbstp
adc
dec
es
test
mov
jmp
add
scas
ucomiss
push
je
scas
or
test
cmp
dec
pop
xchg
fildl
mov
sub
jmp
ret
or
mov
ficomps
sbb
or
loope
cmp
fistl
stos
sub
cmpsb
mov
lcall
aaa
aam
and
or
push
mov
outsl
or
mov
xlat
inc
ljmp
mov
popa
mov
icebp
mov
pop
adc
in
adc
pop
sub
jns
popf
pop
std
je,pt
push
sbb
aam
rcll
jge
cmp
aaa
pusha
mov
and
mov
or
cmp
in
jg
ja
pop
test
stos
pop
mov
jb
adc
shr
or
add
mov
push
icebp
or
cmpsb
lcall
pusha
shrl
es
mov
sbb
xchg
rol
std
adc
jl
fidivrl
inc
inc
addl
xchg
jle
inc
in
loop
jnp
inc
stos
enter
stc
insl
and
outsb
sti
repnz
in
rorl
adc
push
sahf
xor
gs
push
lods
je
or
cmc
test
cmpb
sahf
pop
xlat
and
out
jl
and
aaa
ffree
movsb
push
dec
mov
ret
pop
mov
pop
sub
shll
decb
sbb
mov
hlt
xchg
test
jle
ret
adc
pop
out
adc
fmull
push
dec
dec
mov
test
and
or
pop
test
gs
test
in
jmp
xchg
xor
fildl
mov
scas
mov
jp
ficomps
ss
shr
push
adc
dec
out
in
lds
and
aaa
cwtl
mov
sbb
cmpsl
outsb
aad
push
sbb
mov
cli
cmc
stos
imul
xchg
and
mov
stos
cmpsl
nop
add
ss
dec
dec
dec
mov
mov
aam
mov
and
xchg
dec
dec
mov
cs
out
sarl
cmp
pushf
dec
outsb
lcall
jb
mov
push
lfs
sahf
fisubl
inc
xor
sub
mov
decb
dec
sarl
in
inc
fwait
adcb
iret
sbb
or
ljmp
lods
loopne
mov
mov
lods
xchg
enter
push
mov
hlt
out
xchg
fadd
jbe
xchg
xchg
jp
or
je
jl
lcall
int3
les
in
daa
aam
and
in
insb
inc
jp
pop
jne
mov
in
push
sti
adc
imul
jecxz
jnp
js
mov
adc
icebp
mov
cmp
cwtl
pop
push
addr16
cwtl
mov
xor
add
fld
dec
inc
pushf
xor
jp
jg
mov
movsl
jae
and
mov
or
mov
leave
aam
cmp
loopne
repz
lcall
out
xchg
add
punpcklbw
popa
ja
pop
pop
in
dec
cli
movsl
mov
sub
cmpsl
mov
les
push
cltd
pop
aad
mov
xchg
sbb
xchg
cmpsb
add
inc
repz
mov
test
xor
int3
fistps
and
sbb
leave
into
ja
mov
xchg
push
jp
out
xchg
dec
mov
adc
es
addr16
cld
imul
test
sub
sbb
push
das
add
mov
mov
js
xor
and
pop
gs
fmul
hlt
adc
push
ficompl
cmp
push
jmp
jbe
jecxz
xchg
mov
mov
outsl
sbbl
cmc
bound
inc
add
lock
test
ret
rcrl
fstpl
lahf
mov
fisttpl
adc
fisttpll
pop
jnp
aam
nop
outsl
adc
outsb
pop
ror
loop
adc
das
cmp
faddl
rorb
lret
stc
push
inc
into
movsl
stos
sub
fiaddl
out
push
jle
and
shll
sub
iret
mov
mov
popa
mov
mov
xchg
loope
sub
es
sbb
outsl
cmpsl
addr16
ja
std
xor
lret
mov
cmpsb
cmpsl
dec
xchg
daa
bound
xor
fsubrl
ret
jle
setg
insb
lods
or
mov
popf
ret
jae
xor
xor
jecxz
loopne,pn
dec
fmuls
leave
push
push
cwtl
xorb
in
scas
mov
mov
lds
push
outsb
sub
sub
stos
mov
push
pushf
dec
ret
mov
push
dec
push
adc
into
sbb
call
scas
arpl
addb
jecxz
insb
pop
popf
movsl
sbb
mov
jns
test
dec
jbe
fstps
mov
jnp
fistpll
adc
frstor
sahf
xchg
loop
aad
rcl
jns
sbb
xlat
mov
jns,pn
lds
mov
mov
jno
xor
scas
push
fimull
jne
xor
out
mov
pop
test
xchg
movb
jmp
xchg
push
rcrl
xchg
outsb
xor
jnp
mov
cmp
pcmpeqd
inc
jnp
or
scas
aaa
loopne
outsl
ja
shl
test
dec
xchg
out
or
push
xor
pushf
jns
push
mov
jl
loopne
dec
mov
jno
cmc
les
negb
pop
add
jp
fwait
dec
rclb
sub
cmp
enter
xorb
jp
mov
mov
cmp
stc
xchg
and
jbe
cwtl
dec
into
leave
push
lret
mov
or
daa
test
jo
dec
dec
aam
syscall
nop
out
mov
lds
or
test
push
sub
leave
xor
xchg
pop
pop
leave
sbb
and
mov
fnstsw
adc
jbe
mov
adc
adc
dec
notb
nop
dec
popa
mov
sbb
sub
and
stos
in
pop
jle
scas
mov
jmp
insl
insl
ss
xchg
in
pop
adc
cmp
jl
push
repnz
add
mov
mov
cmp
repnz
mov
int
inc
jle
add
cmp
mov
inc
movsb
sar
fcoms
sub
shll
mov
cmpsw
mov
pop
push
jmp
xor
cmp
adc
mov
cmp
mov
repz
inc
jo
lahf
jg
sub
push
and
cmpl
stos
clc
or
lock
or
xchg
cmp
outsb
lret
jno
in
outsb
test
call
cwtl
in
add
pop
out
push
sbb
jns
dec
stc
xchg
lea
addr16
lods
sbb
sbb
cmc
stos
loop
dec
pop
jne
or
in
mov
push
dec
in
pop
mov
lods
inc
jmp
sbb
insl
jge
inc
mov
scas
or
sbb
mov
out
movsb
outsl
xor
icebp
lcall
cmp
mov
push
lcall
xchg
push
xor
adc
bswap
push
sbb
pop
push
add
inc
jg
jmp
lahf
sti
and
dec
into
lds
lds
lret
mov
jno
out
insb
cld
mov
fsubl
adc
adc
movsb
js
inc
call
and
mov
orb
js
jp
pop
mov
out
mov
in
xchg
jecxz
or
enter
addr16
fs
cs
fwait
mov
in
ret
xchg
test
daa
rcr
int3
cmc
jnp
hlt
jbe
call
icebp
mov
add
push
mov
mov
shll
add
pop
mov
divb
inc
rcr
testl
popa
xchg
pop
xchg
adc
fs
inc
add
out
mov
cld
mov
mov
loop
cltd
adc
mov
and
in
ds
pushf
in
push
and
jo
stos
jecxz
imul
pop
jno
sub
stc
cmpsb
and
mov
or
add
or
sti
bound
sbb
je
sub
mov
vpxor
jecxz
pop
fs
jle
cmpb
sti
lods
sbb
sahf
dec
ficoml
cmp
sbbl
arpl
insl
insb
jl
pushf
sbb
pushf
sub
in
sahf
out
sarl
sarb
mov
inc
and
and
and
orl
adc
mov
ffree
sbb
xor
lea
daa
pop
andl
mov
xchg
cwtl
mov
inc
movsl
ret
ds
and
push
cld
mov
adc
cli
push
mov
out
xchg
or
sub
and
rcrb
lock
icebp
fldenv
adc
daa
sub
in
and
push
mov
add
scas
aad
adc
mov
push
fsubrs
lret
sahf
mov
fnstsw
call
dec
mov
xor
add
lods
cmc
pop
or
loop
outsb
jecxz
cmp
lea
xor
std
mov
and
xor
insl
lret
std
dec
xlat
xor
cmp
and
jge
and
push
loopne
shlb
jmp
jb
out
mov
testb
out
addb
fnstsw
pusha
rcrb
pusha
or
movsl
pop
in
jns
iret
test
push
divl
test
fsubs
mov
sahf
fs
mov
jne
xchg
cmp
icebp
or
inc
or
arpl
xorl
flds
not
jmp
test
push
sti
pop
scas
push
push
push
stos
arpl
and
clc
lahf
sub
xor
sbb
cs
adc
dec
hlt
jge
mov
sub
insb
jbe
cli
into
or
test
jl
ret
jne
pop
add
cmc
shr
rclb
mov
xor
pop
xchg
sbb
cwtl
adc
inc
jg
pop
jo
mov
jl
xorl
jae
push
mov
inc
xchg
sub
aas
icebp
push
data16
shlb
xor
cwtl
es
cli
sarl
push
xor
sub
in
jbe
cmpsb
arpl
mov
sbb
xor
lods
repz
cmpl
movsb
fwait
arpl
jmp
icebp
jle
insb
sbb
xor
and
pop
js
cmp
cmpsb
pop
mov
ffreep
adc
out
push
clc
std
xchg
das
and
sub
or
mov
shrl
movzwl
fwait
push
dec
and
cmpsb
fdivr
inc
into
xchg
and
cltd
or
or
aas
pop
mov
cmp
and
lock
cwtl
cmp
dec
adc
or
std
mov
rcll
and
xlat
xchg
mov
int3
jg
les
loope
xchg
cmp
repz
inc
enter
dec
xchg
negb
xor
jae
fsts
jl
in
or
jg
adc
or
outsb
inc
dec
inc
ja
sub
jns
loop
add
sbb
aad
jo
or
inc
mov
repnz
repz
xor
jae
dec
sti
xchg
jns
xor
lahf
shl
adc
jge
sbb
pop
and
lret
pop
pop
orb
sti
mov
gs
daa
mov
daa
or
lods
rclb
mov
repz
aas
adc
fmull
jle
sbb
mov
fs
popf
or
sbb
mov
push
push
inc
out
cwtl
mov
add
push
in
xor
rcrl
mov
cwtl
sub
stos
inc
sbb
mov
push
inc
and
scas
enter
xorl
dec
inc
ret
mov
push
inc
mov
sbb
lds
out
sbb
ret
and
rcl
dec
xor
dec
adc
out
adc
cmc
loop
jge
push
cmp
int
push
jl
sbb
flds
out
add
xlat
std
idivb
outsl
outsb
push
mov
xor
es
mov
xor
pushf
lahf
sbb
cmpsb
aas
adc
pop
mov
ret
dec
aam
pop
add
jge
push
add
push
lea
scas
jae
cld
into
mov
fwait
dec
lea
pop
fnstcw
xchg
scas
repz
lahf
out
stos
lret
xchg
rolb
ficompl
mov
inc
jl
jecxz
pop
aam
imull
insb
jnp
or
std
add
pusha
lods
sub
jecxz
cld
imul
push
pop
daa
mov
dec
cli
push
and
mov
test
sub
pop
sub
testb
xchg
stos
lahf
jb
sub
and
sarl
out
out
sub
cmp
cmp
cmc
les
sbb
push
insb
sub
ljmp
daa
test
aas
lret
frstor
mov
insl
aad
push
mov
inc
test
mov
push
daa
imulb
xor
mov
in
pop
mov
jmp
mov
jge
mov
dec
iret
insb
mov
xlat
pop
cs
ror
cmp
inc
sub
and
hlt
jns
sbb
ficompl
das
xchg
push
roll
xlat
pmuludq
xchg
ss
mov
sub
pop
push
mov
xchg
inc
dec
dec
inc
mov
aaa
mov
sub
mov
rcl
xor
adc
pop
mov
insl
and
repnz
mov
and
das
push
mov
mov
out
or
hlt
add
sbb
lret
stos
ja
hlt
xor
jno,pt
stos
int
mov
mov
dec
push
scas
add
jmp
ds
out
add
mov
mov
stos
data16
daa
mov
or
les
outsb
adc
ret
and
outsb
or
mov
in
push
xchg
mov
mov
adc
inc
jae
fildl
rorb
jno
mov
addr16
sbb
mov
cmp
mov
xchg
inc
cmc
mov
imul
fwait
xor
out
stos
or
in
das
push
push
ficoms
les
inc
icebp
int
adc
sbb
loop
outsl
xchg
loope
cwtl
iret
loopne
xchg
cmpsb
sbb
pop
ret
cmp
in
lods
add
mov
scas
mov
aaa
jbe
push
fisubrs
cmpsb
movsl
movsl
je
mov
or
dec
fwait
lds
ds
adcb
cmpsl
fcoms
stos
pop
and
adc
mov
mov
sub
jb
jecxz
pop
dec
outsl
stos
fistpll
stos
pop
lds
xor
ret
xchg
icebp
cld
xor
cli
cmp
mov
out
and
inc
mov
cmpsb
bound
cwtl
cmpsl
cmpsb
dec
mov
idivl
repnz
adc
cmp
das
movsl
out
add
mov
sbb
xor
sbb
mov
call
dec
arpl
mov
mov
int
out
movsb
cmc
jecxz
in
test
daa
imul
sbb
jb
gs
mov
imul
jg
xlat
adc
outsb
movsl
out
pop
xchg
pushl
int3
add
cmp
sbb
roll
sub
popf
ret
gs
lds
loope,pt
push
insl
xchg
loope
adc
testb
negb
std
mov
mov
popf
adc
mulb
sbb
jbe
pop
fidivs
or
sub
jmp
shll
xor
or
xchg
lcall
out
stos
xor
xchg
xchg
inc
in
pop
adc
mov
xchg
daa
arpl
push
adc
inc
sbb
jecxz
scas
dec
lret
dec
xor
or
mov
call
fldcw
icebp
jg
rsqrtps
sub
pushf
loope
cmp
push
adc
imul
xor
push
sub
add
xor
and
cli
xchg
cmpl
mov
inc
loope
rcrb
std
push
in
sbb
xor
add
cmp
popa
cltd
xchg
jbe
dec
pop
fisttpll
jb
cmc
xor
sub
sub
ror
jp
inc
dec
sub
cmp
bound
sub
mov
add
dec
lock
jo
lds
scas
and
lods
insl
in
sbb
jmp
sub
inc
dec
ret
scas
mov
stos
add
push
aam
jmp
xchg
mov
or
sti
std
fucomip
and
pop
jecxz
into
ja
sub
mov
xor
imul
ret
ja
repnz
jb
jo
daa
imul
or
or
fs
cld
mov
dec
je
sub
mov
daa
pop
push
ja
adc
enter
push
filds
in
test
mov
aas
mov
pop
dec
movsl
shl
pop
add
pop
jmp
jg
jge
or
cmc
mov
fdivl
test
cmp
shrb
insl
or
aad
jmp
test
add
push
adc
add
out
jp
or
mov
inc
mov
xor
test
mov
dec
arpl
and
pop
cli
lahf
std
lret
cmpsl
pop
jbe
fimuls
add
fwait
mov
cmpsl
sbb
dec
dec
out
push
sub
and
sar
push
sub
xor
addl
shr
and
pop
mov
inc
fnstenv
and
cld
mov
push
sbb
push
popa
sub
rcll
inc
rcrl
mov
cs
add
fxch
idiv
jmp
pop
lcall
sub
sti
jge
ficomps
cwtl
mov
fistl
push
pop
imull
cli
popf
push
push
cli
mov
test
mov
jg
mov
adc
daa
fisubs
jg
outsl
push
js
push
nop
outsl
outsb
icebp
inc
outsb
out
jle
aaa
mov
js
cli
sub
out
add
jg
decb
mov
xchg
dec
in
xchg
mov
movsl
mov
lods
cwtl
push
rorb
xchg
pop
shlb
inc
dec
addl
mov
hlt
stc
sbb
cmp
pop
xlat
test
lods
xor
sbb
bound
ja
and
mov
arpl
in
or
sub
insb
loopne
xchg
cmp
sbb
in
dec
outsl
loop
lock
testl
mov
xchg
outsl
cld
lret
scas
cmc
inc
dec
popw
rcl
jb
ret
lea
inc
shr
rclb
xchg
jp
mov
outsb
dec
cwtl
test
gs
mov
std
popa
and
or
loopne
or
jmp
sub
in
sub
mov
idivb
xchg
and
push
cmp
jns
aaa
add
std
jnp
es
addb
shr
lret
pop
cmc
movsb
adc
pop
adc
jg
mov
scas
lea
test
sahf
jmp
popf
and
icebp
push
test
sbb
orb
push
and
movsb
in
mov
ja
inc
idivl
int
fnstcw
aas
hlt
insb
cmpsb
outsl
cmp
pxor
fcmovnb
sbb
je
jne
dec
jnp
inc
xchg
fwait
mov
dec
jnp
jg
sub
repz
xchg
out
andb
xlat
mov
cmp
sbbl
scas
ds
add
arpl
aas
dec
push
xor
dec
jle
mov
push
shlb
and
cmc
xorl
inc
ss
and
jnp
cmpl
mov
sti
fmuls
sbb
inc
fisubl
push
xchg
jge
xor
xchg
popa
aaa
repnz
adcl
js
dec
into
add
cmovbe
dec
int
mov
cmp
insb
pop
movsl
rolb
and
call
mov
jb
xor
inc
testl
adc
aad
jnp
lods
into
push
enter
faddl
mov
cmc
mov
sub
test
scas
fisubrl
xchg
xchg
fisubrs
testl
inc
mov
jnp
cmp
and
cs
dec
aas
jbe
ret
push
jge
fistl
nop
in
xchg
sub
es
mov
mov
and
push
xor
push
mov
roll
mov
or
fstpt
inc
sub
int3
add
mov
cmc
in
popf
lret
xorb
sub
lret
dec
inc
adc
and
enter
sbb
jmp
cmp
dec
inc
hlt
jns
jae
pop
mov
loope
adc
pop
sbb
aaa
pop
xchg
fcompl
xor
xor
inc
stc
test
jo
fisubs
in
in
xchg
orl
inc
mov
sub
pop
and
push
jl
jg
call
xchg
les
jge
sti
add
sub
ret
cmp
out
jne
cmp
lock
dec
push
pop
test
or
sub
int3
movsb
imul
xchg
fcompl
out
lret
lahf
pop
xchg
cmp
fcmovne
fisubrs
jb
mov
push
jbe
push
outsb
in
cwtl
sbb
adc
push
test
clc
push
pusha
call
xchg
enter
fs
imul
add
mov
inc
xor
inc
mul
mov
cmp
xchg
push
sbb
dec
arpl
mov
test
jo
push
repz
insb
test
add
out
add
push
shr
push
jmp
ret
push
dec
mov
fdivp
mov
pop
scas
dec
cmc
imul
push
jecxz
mov
xchg
call
xchg
fdivp
fs
dec
test
mov
jle
xchg
orb
pop
lahf
add
fstps
ret
stos
icebp
xor
inc
dec
daa
sti
inc
sbb
rcl
sub
jp
shlb
loop
enter
dec
cmp
jmp
inc
outsb
xorb
cs
xorl
sbb
repnz
stos
or
mov
xlat
xlat
out
pop
scas
std
push
mov
sahf
mov
outsl
xlat
bound
mov
mov
testl
xor
cmp
movsl
fcomp
or
push
fsts
mov
adc
lods
push
sub
jbe
loopne
mov
mov
inc
hlt
push
mov
aam
xor
and
or
lcall
adc
lods
mov
lock
std
fiadds
std
add
jmp
pop
stos
mov
js
scas
mov
rorb
fldcw
adc
cmp
mov
insb
sti
inc
js
xor
nop
daa
popf
push
mov
hlt
cmp
mov
into
xor
fld
cmp
push
xor
rcrl
cltd
shlb
mov
and
jle
jns
imul
rcrb
popf
in
subb
outsb
ror
sahf
inc
push
push
lret
xor
jle
clc
inc
dec
xor
and
addr16
inc
push
fidivs
sbb
mov
xchg
test
pop
mov
mov
cltd
out
mov
popf
mov
push
aam
testb
or
dec
or
push
insb
push
pusha
and
das
xorb
fcomp
cmpsb
test
sarl
lock
ja
adc
push
dec
ret
andb
inc
mov
stc
mov
outsb
hlt
inc
pushf
fildll
push
mov
adcb
inc
sub
daa
int3
push
push
popa
dec
jg
push
pop
arpl
push
push
and
push
push
test
xchg
jl
and
shrb
ret
push
push
push
js
ds
iret
dec
and
fistpl
icebp
ror
mov
ret
jp
outsb
es
inc
jl
stos
aad
into
adc
cmpsb
mov
xchg
mov
mov
adc
das
add
jp
jmp
int
cs
xchg
jl
mov
test
pushf
jg
pop
imul
pop
mov
jge
xor
mov
dec
adc
dec
lock
pop
pop
cmp
jle
adc
xor
mov
lahf
cmp
xchg
mov
push
pop
push
dec
lret
fcoml
mov
xlat
mov
fidivrl
cmp
dec
popa
fcmove
hlt
stos
lods
xor
lret
mov
lds
add
pop
add
lock
js
jmp
lcall
mov
scas
push
mov
sub
sub
imul
imul
daa
push
dec
push
jb
xchg
lock
jns
movsl
add
push
out
sar
leave
pop
or
mov
notb
mov
mov
int
das
call
ljmp
lret
sbb
pop
pop
xor
mov
push
cmp
cmpl
xchg
mov
scas
ja
mov
enter
jmp
sub
stos
sti
int3
fs
dec
cwtl
loop
dec
decb
push
insb
mov
lods
xlat
add
pop
stc
test
add
cmp
ret
nop
sub
ss
jns
inc
int
into
jl
bound
pop
outsb
inc
in
shrb
jno
outsl
xor
or
inc
dec
and
or
cmp
jle
xchg
pop
scas
add
cmp
fbstp
or
cmp
xchg
dec
int
and
test
mov
mov
les
outsb
ret
inc
lea
les
xchg
movsl
jg
mov
push
cltd
or
int
add
scas
dec
scas
push
mov
dec
dec
and
xchg
jbe
add
pop
xchg
cmp
jo
ret
sbb
inc
push
test
mov
and
lcall
jnp
loop
jne
jle
inc
lret
cmp
mov
loop
leave
mov
out
std
adc
jns
xlat
scas
mov
lock
inc
iret
repz
int
mov
in
dec
jge
push
and
pop
ljmp
shr
mov
in
cltd
std
jle
aam
ds
pop
into
push
call
adc
hlt
roll
sbb
mov
cmp
push
scas
fmuls
popf
out
das
push
call
mov
and
fcmove
aad
sub
insl
iret
mov
mov
test
fildll
push
pop
cmp
lock
popf
aad
sbb
loop
dec
mov
dec
dec
in
inc
sbb
cmpsb
das
das
imul
mov
or
xchg
adcb
mov
and
imul
das
push
insl
mov
mov
leave
imul
sub
mov
ljmp
mov
mov
mov
lds
adc
mov
jecxz
leave
dec
fwait
cltd
pop
xchg
test
sti
jae
sub
push
dec
xor
mov
xor
adc
loop
lds
loope
mov
loope
cli
push
insb
pop
out
scas
stc
inc
pop
insb
imul
cmpsb
movsb
ret
mov
movsl
mov
sub
jno
sbb
pop
movsb
mov
mov
sbb
lods
or
cmc
mov
lret
call
or
pop
jecxz
cmp
sbb
add
push
movsb
call
jg
out
cmp
mov
cmp
xor
cli
pop
cmp
bnd
out
mov
add
daa
mov
retw
hlt
push
xor
mov
pop
jecxz
mov
sbb
jge
adc
aam
inc
add
jmp
cld
xlat
dec
jae
mov
jne
or
int3
cmp
pop
ljmp
das
out
cmpsl
notb
and
mov
dec
lds
sub
setle
adc
clc
lds
jb
mov
mov
jne
mov
sbb
dec
lahf
push
mov
sub
adc
adc
nop
jecxz
fdivrl
ss
push
jns
sti
lret
dec
je
test
sbb
xchg
mov
sub
xor
fistpl
lea
rcrl
popf
shlb
dec
jae
jl
xchg
call
inc
stos
mov
pop
or
add
or
pop
or
adc
sub
jno
les
adc
and
or
je
mov
insl
pushf
stos
jne
into
pop
pop
cmp
sub
mov
sub
insl
mov
xchg
jg
out
mov
pop
inc
add
push
xchg
mov
push
dec
fsubrs
mov
int
adc
mov
pop
stos
jbe
rcrb
xlat
mov
shrl
sbb
ss
daa
fsubl
adc
xchg
repz
mov
cmpsb
ds
xlat
lods
outsl
popa
xchg
mov
sbb
xor
jge
inc
add
xor
and
pop
insl
pop
pop
xchg
adc
sbb
and
in
fcompl
pop
add
mov
popf
psrlq
fstp
jnp
xlat
inc
enter
sub
xchg
sti
mov
test
sbb
push
pop
xchg
test
inc
js
mov
xchg
and
pop
int
ja
xchg
jecxz
inc
loop
mov
outsl
shll
mov
in
ds
cmp
test
lret
scas
cmp
sbb
mov
in
jbe
out
movsb
push
add
pop
in
mov
lea
jp
sbb
mov
jbe
out
hlt
loope
movsb
scas
fcmovnbe
int
loop
outsb
imul
bound
lret
xchg
push
jl
imul
push
or
pop
push
jmp
add
test
enter
mov
jno
push
push
mov
adc
rep
jp
mov
push
fsubrp
fwait
xlat
jle
loope
adc
push
cmc
in
pushf
jp
xchg
test
xorl
pop
xchg
bsr
pop
mov
imul
in
add
arpl
stc
rclb
jle
and
mov
push
ja
xchg
dec
push
scas
or
or
adc
xor
adc
jo
fisubrs
add
xor
mov
lea
out
pop
popf
stos
xchg
dec
mov
jp
je
imul
jge
test
pop
dec
jg
sub
or
lahf
pop
aas
add
je
addl
adc
pop
int3
ds
in
in
jl
jae
xor
mov
cld
push
inc
test
aad
xchg
cmp
fwait
and
test
pop
mov
fsubrl
shlb
insl
sahf
adc
mov
xor
fcmovb
fcmovnb
es
and
mov
pop
xchg
int3
lods
stos
loop
pop
repz
jmp
sbbl
pusha
inc
mov
sbb
dec
dec
cld
jb
mov
xor
sahf
jl
mov
ds
call
in
cmp
adc
inc
and
data16
bound
and
add
mov
mov
test
dec
cld
leave
lret
and
loopne
lret
dec
outsl
fimuls
xlat
lods
cmpb
mov
mov
lds
inc
jmp
leave
add
in
sbb
test
sti
dec
call
in
push
repz
cmp
sbbl
xchg
sahf
stos
jne
cmc
mov
das
adc
fildll
les
mov
xor
push
cmc
inc
sarb
xor
cmc
sbbb
mov
sbb
pop
adc
push
out
je
out
repz
jge
andl
outsl
mov
ret
add
push
testb
add
mov
in
push
ljmp
fistpll
dec
repz
ss
cmpsl
test
sub
pop
push
jo
test
fwait
mov
xchg
cmp
inc
xchg
aad
pop
test
cmpsb
xlat
dec
pop
aas
nop
ret
pop
fcoml
lods
adc
sarl
pop
std
hlt
xchg
cmp
cwtl
pop
ss
inc
xor
gs
loope
lock
inc
xor
lcall
loope
sbb
add
dec
sub
sbb
dec
xchg
mov
xchg
dec
shll
outsb
clc
cmp
ja
inc
push
cmpsl
test
xlat
or
clc
jno
mov
sub
cmp
or
mov
sub
or
out
popa
cmp
int
and
testb
insl
push
jg
sbbb
aas
adc
jo
mov
xor
insl
mov
enter
lcall
cmc
sti
fsts
pop
mov
je
push
fisubrl
jmp
mov
test
sbb
insb
pop
call
inc
loopne
enter
xor
push
jnp
mov
or
faddp
imul
push
cmp
inc
cmpsl
sbb
xor
pop
insl
movsb
mov
xchg
add
fnstcw
adc
jne
jg
dec
pushf
pushl
mov
popa
shlb
inc
pop
add
adc
xchg
xchg
ret
pop
mov
mov
inc
or
sti
or
xchg
cmp
push
inc
push
xchg
fldt
xchg
dec
out
negb
cli
sub
jbe
xlat
scas
xchg
je
test
out
iret
xlat
adc
lea
dec
lret
xor
movsb
lret
out
lods
ficoml
dec
cmp
push
mov
negl
scas
sbb
pop
iret
lds
jg
stos
adc
nop
cltd
sbb
mov
sbb
cwtl
or
jle
int3
hlt
push
shrl
fsubs
loope
xorl
mov
fimuls
jae
adc
xor
fidivrs
pop
or
mov
das
sub
repnz
shlb
shll
sbb
neg
fcom
push
cmpsb
push
inc
xchg
das
and
bnd
movsl
bound
lret
popa
outsl
xlat
jns
popa
lods
shr
xchg
sub
lret
pushf
jg
cs
in
mov
jecxz
fnsave
xor
fs
cmp
fisttps
dec
jle
xor
std
add
lret
and
popa
cmc
out
mov
sub
mov
xchg
andl
cmp
ljmp
test
jb
lcall
popf
or
pop
and
cmpsl
sbb
movsb
iret
xchg
mov
adc
testb
adc
cmp
sbb
mov
cmpsl
pop
sub
filds
dec
sahf
or
jmp
hlt
inc
mov
out
sti
scas
enter
sub
outsl
mov
pop
out
push
icebp
pop
js
push
pop
mov
pop
sub
xlat
gs
outsl
lea
xor
xchg
fisttps
pop
pop
or
jge
rorb
movsb
sar
mov
sbb
daa
aaa
clc
push
cs
call
shll
out
inc
mov
es
xchg
pop
daa
in
cltd
clc
dec
push
add
cwtl
test
stos
daa
inc
and
fsub
pushf
in
scas
add
push
hlt
fisubrs
test
shl
fistpll
mov
pop
imul
dec
mov
loopne
adc
dec
cmc
mov
mov
xchg
iret
mov
push
or
sahf
or
mov
ret
jo
push
insb
jp
addr16
es
xor
js
jno
cmp
jo
sbb
jecxz
push
sub
sarl
sbb
insb
xchg
ret
push
out
outsl
ret
outsb
push
adc
mov
cltd
or
sub
push
xor
sbb
roll
jmp
das
std
xchg
push
mov
xor
add
lea
sbb
inc
pusha
cmp
xorl
sub
cmc
jl
mov
aam
jl
stc
stos
sub
insb
and
dec
imul
sarb
shlb
popa
push
push
stc
popf
int3
lahf
inc
lods
mov
mov
sub
pop
mov
push
mov
fidivl
mov
out
and
mov
es
mov
add
arpl
out
pop
pushl
lcall
xorl
call
push
js
es
ret
test
and
push
cmp
jg
push
andb
fiadds
movl
pop
test
cwtl
outsb
sti
dec
cmp
imul
sbb
jae
pop
adc
jne
sub
push
imul
rorb
leave
add
xchg
lret
mov
jno
jns
cli
in
push
dec
lea
sbb
lock
pop
in
stc
inc
std
and
and
movsb
iret
repz
sarl
dec
pop
mov
adc
andb
dec
sub
pushf
dec
addl
mov
sarb
and
nop
pop
mov
xchg
or
push
mov
sub
sub
push
pop
adc
jl
pop
dec
push
mov
ficoms
push
adcb
movl
stc
ss
push
sbb
daa
pop
cmp
pop
jb
leave
in
int3
jns
ret
sbb
insl
out
push
mov
push
cmp
sbb
xchg
outsb
push
xchg
pushw
lods
stos
repnz
jo
inc
and
adc
jbe
push
fcomip
stc
popf
xchg
mov
stc
adc
mov
bound
inc
mov
adc
xchg
xchg
xchg
xor
adc
fldenv
and
daa
dec
shl
or
jbe
fcompl
and
dec
push
aas
and
jge
add
shlb
jnp
jae
in
cmpsl
sbb
mov
xchg
xchg
into
hlt
mov
cmp
dec
sub
les
pop
repnz
push
adc
xchg
mov
push
sub
dec
cmc
xchg
mov
pop
or
dec
imul
mov
push
movsl
xchg
jge
inc
pop
xor
push
sub
into
pushf
adc
enter
xchg
stc
shl
xor
andb
addr16
xor
jns
mov
pop
and
lcall
test
cwtl
jmp
fldt
push
pop
popa
sarl
lock
xor
mov
lret
rcrb
leave
sub
mov
mov
and
fsubrl
mov
rcr
or
ss
rep
stc
call
add
pop
ljmp
add
push
mov
into
lock
push
and
cmpsb
fcompl
cwtl
cltd
pop
pop
mov
ficoml
mul
mov
stc
pop
sub
leave
mov
add
mov
push
add
cmp
scas
imul
sub
notl
push
mov
das
xchg
stos
out
lahf
nop
and
push
dec
out
pop
inc
xor
fcoml
ss
or
mov
icebp
bound
xor
test
pop
movl
jb
outsl
xchg
cwtl
mov
xor
das
out
into
loop
movsb
lea
fsubr
and
push
push
push
cmp
or
push
std
xchg
mov
mov
xchg
jg
loopne
hlt
aas
je
sbb
sbb
sbb
sbb
sahf
xchg
addb
mov
cld
push
and
addr16
and
mov
or
cmpb
popa
push
sarb
in
push
jb
leave
call
lret
push
arpl
jle
mov
fadds
imul
pop
mov
stos
int
insl
mov
inc
pop
mov
sub
loope
fidivl
add
fsave
cld
sbb
imul
pop
insl
hlt
add
push
jecxz
lcall
arpl
int3
shl
cmpsb
in
cwtl
roll
xchg
das
inc
leave
imul
sub
jb
push
mov
mov
pusha
xchg
pop
mov
sub
add
leave
push
dec
test
icebp
jo
mov
popf
lahf
mov
mov
mov
inc
popa
sub
stos
sbbl
aas
clc
and
jae
testb
pop
mov
in
ret
inc
ret
add
inc
inc
fmull
or
cs
add
mov
and
cmc
sti
inc
sarl
ja
ss
xchg
fstl
stc
xor
shlb
mov
les
ja
xor
jmp
outsb
cmp
loope
jecxz
push
xchg
inc
lret
fsubrl
into
xchg
and
jge
sub
jb
test
addr16
mov
mov
mov
test
lds
add
sbb
add
and
xchg
fcmove
ss
mov
jecxz
inc
inc
inc
mov
mov
sbb
das
pop
or
cltd
xchg
jb
bound
std
roll
lcall
jg
mov
xchg
inc
imul
mov
dec
call
mov
rcll
add
sub
or
outsl
sbb
scas
and
jl
sbb
xchg
imul
fidivl
xchg
add
outsl
cmp
pushl
pop
int
cltd
ret
test
dec
jnp
pop
sbb
ljmp
pop
sarb
mov
repnz
movsl
stos
fidivrl
mov
jmp
xchg
sub
fcoml
jp
sbb
push
adc
mov
dec
and
daa
cmp
xchg
cwtl
jno
xorb
aaa
dec
test
add
mov
andl
xor
dec
nop
movl
and
and
mov
jecxz
cltd
inc
pop
aas
dec
pop
inc
fsubrp
loopne
pusha
aas
lods
test
inc
add
sbb
pop
pushf
xchg
mov
int3
and
lret
pop
push
or
dec
mov
inc
xchg
mov
fwait
mov
pop
mov
cmp
adc
lock
in
cltd
push
inc
fwait
lahf
xor
iret
mov
je
xchg
arpl
mov
dec
mov
push
ficoms
adc
or
jns
clc
dec
cmpsl
mov
adc
movsb
ret
std
gs
jo
mov
data16
dec
and
pop
mov
sub
es
aam
lea
pop
aad
shrb
roll
ljmp
cmpsb
das
mov
test
js
inc
adc
cmpsb
xor
popa
cmp
test
push
sbb
sbb
lahf
xchg
daa
and
data16
xor
or
adc
sahf
or
and
fsubp
pop
push
orl
fninit
mov
push
inc
jo
mov
mov
dec
dec
int
lret
mov
mov
popf
sub
and
lcall
xorb
cld
dec
pop
push
ljmp
mov
mov
mov
mov
push
scas
push
lcall
lods
stos
pop
jb
jno
cmc
xlat
mov
push
out
fisttpl
pusha
and
push
enter
sub
and
into
daa
xlat
imul
sub
insl
ds
xchg
adc
rcll
push
and
popf
jge
xor
ffreep
adc
ret
jge
push
icebp
jne
sbbl
imulb
and
cmp
or
or
add
pop
jno
addb
ds
mov
pushf
mov
sub
clc
sahf
test
std
mov
lods
mov
es
int3
pop
stos
ret
mov
cli
movsb
jl
mov
jbe
push
or
lock
push
dec
in
mov
xchg
sub
dec
inc
stos
or
dec
cli
push
xchg
lahf
enter
jl
cmp
mov
mov
lods
aam
dec
aaa
dec
cmp
push
repz
or
in
lea
dec
cli
pop
movsl
arpl
je
xor
xor
xor
mov
aaa
mov
popf
sbb
aad
mov
xchg
fstl
lcall
loope
mov
mov
repz
call
or
out
imul
xor
subb
shr
cmp
pop
and
jae
ret
movsl
sarl
pop
jo
je
add
sub
popa
mov
xor
pop
cmpsl
xor
push
xchg
sahf
mov
lock
cmp
scas
loope
popf
jecxz
pop
inc
pop
hlt
pop
test
mov
insl
cltd
in
mov
out
lahf
je
nop
mov
push
js
push
inc
cld
hlt
mov
aaa
fistps
jle
xor
pop
bnd
pop
adc
jae
ljmp
stos
jbe
dec
test
jmp
jb
insl
sbb
jmp
ss
mov
pop
cs
add
push
push
cmp
fnstcw
loope
les
popa
daa
xchg
mov
inc
adc
fwait
mov
cmp
pop
aad
xchg
mov
push
shll
loopne
popa
cmpsl
std
mov
xchg
pop
addl
xchg
xchg
sub
xchg
fnsave
pusha
sbb
sbb
gs
sub
aas
sbb
xchg
loope
loop
mov
stos
push
mov
int3
inc
xchg
and
push
test
push
xor
bound
add
xor
push
jno
and
xchg
mov
or
dec
lds
and
cld
inc
aam
jecxz
outsl
mov
stc
mov
mov
mov
int3
mov
ror
mov
pop
sbb
xchg
and
loop
popl
jne
or
in
xchg
mov
shll
xchg
cld
xor
aad
fwait
test
divb
xor
mov
dec
js
mov
pop
push
pop
xor
movsb
sbb
test
pop
testb
dec
imul
pop
cmp
jae
pop
lea
inc
pusha
adc
jbe
xor
dec
clc
js
sbbb
adc
std
lods
mov
ds
and
mov
cmp
jae
sub
add
push
movsb
and
into
inc
nop
mov
dec
or
jp
jbe
pop
gs
ret
leave
jb
das
sahf
stc
ljmp
aam
icebp
mov
or
and
imull
je
popa
push
fisubrl
shrb
mov
add
sbb
fwait
sbb
imul
or
push
xchg
addr16
dec
rcrb
push
mov
lods
add
aam
stc
cmpsl
insl
push
sahf
pop
lret
adc
insb
mov
out
mov
add
and
sbb
shlb
fistl
adc
cli
or
dec
aam
lds
mov
inc
in
pop
xor
push
lea
icebp
cmc
nop
ja
xchg
pop
les
shlb
sub
jge
je
inc
fwait
mov
int3
aad
ffreep
fiaddl
mov
xchg
jle
dec
mov
repnz
sub
rcl
mov
jo
sbb
outsl
imul
xor
fs
clc
sbb
cld
aaa
int3
fsubr
jecxz
insb
cmp
mov
gs
les
and
mov
cli
push
popf
jno
pushf
adc
or
decb
pop
lods
rorl
repz
or
iret
in
pop
sub
push
jge
dec
popa
sub
push
push
cmp
adc
sbb
add
movsb
aad
scas
mov
adc
mov
loope
imul
test
lret
cltd
xor
pop
in
outsb
pop
faddl
mov
pop
test
mov
pop
adc
les
mov
and
pusha
cmp
clc
jg
pop
lds
test
xchg
lods
shll
mov
xchg
stc
add
je
mov
data16
fsubrp
adc
orl
push
daa
mov
jge
adc
sbbl
lret
sub
movsb
mov
xchg
mov
jecxz
mov
mov
and
imul
insb
icebp
mov
insb
enter
insl
inc
adc
sub
jle
nop
inc
andl
and
adcl
stc
movsb
fdivrs
and
jae
fnstcw
cmpsl
push
xor
push
sub
sti
movsl
imulb
daa
imul
sub
icebp
fwait
aaa
leave
xorl
push
cmp
mov
inc
data16
or
mov
mov
shll
gs
int
inc
fiaddl
sbb
add
inc
neg
dec
jmp
scas
adc
enter
aad
mov
cli
fsub
cmpsl
test
mov
mov
sub
mov
xchg
shrb
pop
dec
clc
and
push
lret
dec
iret
jge
jl
fisubl
imul
push
ja
jbe
rcrl
add
lcall
push
dec
cli
or
xor
cli
jne
pushf
ljmp
popa
push
cmp
dec
adcb
iret
inc
dec
int3
movsl
stc
clc
xchg
adc
dec
insb
add
stos
stos
cltd
and
ja
dec
add
push
shll
pop
mov
and
mov
push
arpl
dec
push
adc
cli
pushf
xchg
inc
push
mov
fs
mov
stos
sub
enter
and
push
loop
adc
js
or
jp
sbb
pop
mov
jo
adc
fldenv
loope
jge
cmp
cmc
lods
jmp
mov
lods
fcomps
or
adcl
fmull
outsl
cmp
add
push
xorl
jne
and
pop
jno
dec
fucomip
cmp
xchg
cmp
xor
daa
mov
sub
addr16
or
rorb
orl
sbb
adc
dec
int3
insl
aaa
mov
xchg
jb
idivl
jg
ret
fcomi
fstpl
scas
out
enter
sub
xlat
mov
not
or
andl
imul
cmp
nop
mov
push
aad
dec
inc
sub
ret
bound
or
and
insl
imul
ds
popa
inc
adc
test
jno
testb
sarl
aas
les
cld
and
iret
adc
pop
dec
pop
dec
ficomps
pop
xchg
fsubrs
jae
in
outsb
mov
mov
lods
mov
call
mov
or
mov
add
inc
sbb
out
pop
in
cmp
dec
repz
xor
mov
pop
loope
repz
xchg
add
add
dec
imul
cli
push
mov
push
push
dec
mov
shll
adc
cmp
stc
cli
dec
outsl
pop
jge
stos
js
cmpsl
stos
lea
movsl
cs
mov
pop
mov
clc
shll
xor
mov
cmc
int3
js
dec
sbb
dec
or
xor
sbb
in
cmp
sub
add
xor
mov
jno
es
mov
lcall
leave
mov
roll
and
add
adc
sbb
mov
xor
adc
stos
fst
xchg
sub
sbb
mov
hlt
pop
pop
movsl
sbb
sub
in
xor
sub
shll
xchg
mov
outsl
jne
mov
sub
cmp
sub
aaa
or
jmp
lods
call
insl
shlb
lods
mov
fimuls
push
jae
mov
push
mov
imul
call
jg
addr16
push
mov
js
cltd
mov
cmp
push
sbb
leave
or
loopne
xor
sub
dec
push
cmpsl
pop
mov
call
cmpsb
mov
jns
pusha
aas
mov
jae
mov
neg
cs
xchg
cmpsl
xchg
and
xor
cmc
aam
iret
and
xor
push
push
mov
sbb
jns
orl
test
imul
xchg
test
mull
xor
inc
jmp
adc
icebp
xchg
addr16
jbe
pop
add
loop
adc
xor
fsubl
outsl
mov
repz
sub
mov
roll
jbe
lret
shrl
loop
add
sub
out
adc
leave
iret
scas
mul
mov
adc
sahf
stos
pusha
bound
push
push
jbe
fsubrl
lods
push
lea
xchg
adc
nop
push
call
ret
cmp
mov
test
mov
and
stos
scas
pop
cmpl
adc
push
and
lds
in
outsb
cmp
sbb
push
mov
adc
mov
mov
ret
cmp
mov
popa
inc
daa
mov
or
xor
stc
pop
cmpsl
xchg
orb
mov
ljmp
fstpl
arpl
ja
cmp
loopne
push
orl
shrb
loop
sti
cmp
loope
loopne
mov
cmpsl
testb
retw
add
sub
inc
mov
dec
sbb
ret
orl
add
dec
test
cmpsl
js
sub
arpl
pop
and
jnp
fistpl
nop
ret
fcoms
adc
inc
scas
xor
pop
inc
pop
xchg
pop
cs
test
aaa
push
dec
imul
inc
jecxz
push
adc
mov
imul
arpl
std
movsl
sahf
xor
cmpb
out
mov
push
ret
push
push
and
pop
xor
dec
cmc
pop
fstpt
js
test
push
pop
mov
xor
add
mov
mov
xchg
push
pushw
enter
lock
insl
jmp
inc
in
insb
ja
std
sahf
xchg
pusha
leave
gs
mov
add
call
fwait
out
daa
mov
decl
fimuls
orb
or
lock
pop
mov
ss
pop
mov
mov
jl
loop
and
outsb
pop
cwtl
push
outsb
pusha
and
mov
repz
fidivrs
ficomps
xchg
adc
out
aaa
leave
xchg
arpl
test
hlt
scas
pop
and
add
test
cmp
jl
call
inc
test
or
lds
das
aaa
jmp
outsl
cmpsl
test
cmp
loop
cmp
movsb
mov
cmp
daa
cmpl
mov
repz
repz
lcall
push
int3
xor
cld
hlt
push
rolb
leave
mov
xor
inc
loopne
mov
add
loope
jecxz
lret
pop
cmpps
dec
or
push
enter
imul
inc
cmp
in
xchg
push
jle
orb
lret
push
xchg
fsubrs
in
and
xor
inc
je
out
fistpl
dec
leave
mov
inc
pop
xchg
aam
sub
loope
or
iret
cmpsl
scas
ljmp
or
mov
lcall
in
dec
lock
sbb
jge
data16
add
out
inc
add
lahf
repz
cwtl
sbb
pop
xor
xchg
sbb
mov
adc
and
jae
inc
pop
jg
imul
pusha
sub
popa
test
fs
das
dec
gs
mov
jbe
xchg
mov
dec
out
sub
out
mov
jge
xchg
xchg
or
xchg
rcll
sub
mov
mov
sub
imul
fadd
xor
iret
mov
jb
jo
repz
into
add
sbb
sbbl
dec
xchg
inc
xor
sub
pop
jae
jb
dec
mov
xchg
add
ss
mov
mull
mov
xchg
popa
enter
mov
sbb
xor
je,pt
nop
loop
dec
rcll
push
pop
mov
mov
pop
add
mov
fbstp
insl
ja
icebp
int3
loopne
dec
dec
or
daa
mov
dec
or
sbb
lret
clc
and
sbb
shlb
mov
out
in
outsb
sbb
push
les
mov
repz
rorb
adc
sub
mov
daa
push
fsts
ret
mov
xchg
jbe
jmp
xchg
adc
insl
xchg
loope
inc
inc
sub
in
stos
push
cmp
lcall
repz
dec
aad
loop
rcll
imul
push
or
insb
jnp
or
mov
stos
out
movsl
dec
fldenv
mov
arpl
jg
fisttpll
lret
add
cmp
add
sahf
pop
leave
pop
stc
inc
cmp
sbb
mov
adcb
jae
inc
adc
cmc
mov
frstor
in
je
ss
in
lahf
cmc
and
lock
xchg
sbb
mov
cwtl
fsubl
out
dec
cltd
cmp
adc
popaw
mov
xchg
adc
mov
ror
inc
scas
pop
aas
cwtl
leave
sub
stos
mov
mov
sub
cltd
push
mov
pop
mov
jbe
pop
sub
sub
mov
call
out
test
pop
pop
cs
or
dec
or
rorb
sbb
bnd
scas
dec
aam
xor
xor
and
cmpb
ss
shrl
lret
mov
dec
out
sub
dec
outsb
cltd
xchg
aas
fsubrl
sub
stos
loop
cmc
cmpl
imul
inc
aam
loop
fs
jo
inc
push
xor
nop
sub
ds
fwait
dec
das
in
jbe
lods
push
das
fcoml
test
es
and
popf
xchg
add
jno
outsb
out
cltd
add
push
in
in
ret
faddl
ja
aad
add
inc
ljmp
mov
push
push
das
pop
int
outsl
cli
mov
scas
add
shr
sbb
fadds
add
loopne
mov
aaa
sbb
cwtl
mov
mov
pop
stos
mov
shll
leave
les
mov
and
push
cltd
frstor
shl
repz
jne
int
cmp
jge
pop
jmp
ret
mov
es
imul
call
inc
xlat
or
pop
jne
xchg
outsb
ljmp
mov
orb
cli
jecxz
pop
aas
add
add
fcoml
and
aam
aam
popa
movb
or
into
and
mov
test
je
popa
xchg
mov
in
daa
out
jge
and
scas
dec
test
sbb
test
out
rcrl
xor
jmp
je
data16
inc
pop
incl
xor
out
mov
in
push
xchg
pop
add
xor
flds
pop
sub
lea
adc
pop
jle
mov
fsubrs
ljmp
les
jl
stc
and
mov
push
pop
adc
sub
test
js
lods
cmpsl
or
fidivl
mov
addb
loope
repnz
xor
movsb
cmp
mov
ljmp
test
adcb
mov
mov
test
and
jb
dec
adc
cmp
push
jne
mov
stos
gs
je
and
cmp
leave
or
cs
pop
mov
loop
jae
jb
popa
in
mov
adc
aam
shl
lea
into
push
inc
xor
sbb
insl
loope
je
pop
pop
fwait
mov
push
push
jbe
fcmovnbe
xchg
push
inc
lcall
lds
xchg
loope
pop
dec
jae
lret
cmp
sub
call
mov
es
jo
adc
push
add
jne
cmp
test
mov
stos
testb
bnd
stos
xchg
or
xlat
pop
sarl
rclb
jo
mov
xchg
inc
jno
adc
cs
int3
jge
xchg
inc
rorl
in
lods
mov
push
mov
sbb
sti
iret
test
mov
jns
cmp
sbb
and
push
and
jge
leave
push
fcom
xchg
repz
pop
sarb
ss
xchg
xor
or
test
xchg
repnz
xchg
testb
mov
mov
xchg
loopne,pn
les
sub
mov
mov
inc
and
xlat
mov
mov
dec
call
dec
adcl
js
pop
inc
call
ret
and
std
pop
mov
jp
sbb
push
inc
push
inc
xor
aas
outsb
filds
sbb
loop
inc
inc
pop
cwtl
mov
jns
mov
inc
xchg
je
out
sub
xchg
fistps
out
jl
out
stos
jne
stc
mov
or
jp
in
mov
mov
cmp
jg
int3
stos
sub
sarb
mov
icebp
rolb
mov
ss
fnsave
inc
adc
aam
loope
mov
push
jg
paddd
jbe
aad
ss
xchg
push
adc
loope
and
mov
pop
mov
adc
aas
add
dec
inc
xlat
flds
cmc
movl
adc
addr16
cwtl
scas
dec
mov
sbb
or
loop
add
jmp
xchg
push
test
jge
sbb
adc
jb
addr16
inc
xor
adc
dec
loop,pn
mov
dec
or
mov
inc
cmp
jmp
xchg
lea
popa
sbb
pop
mov
jp
je
adc
test
push
clc
add
pop
mov
dec
je
push
jno
sbb
sub
popf
fs
sub
daa
mov
imul
or
daa
sti
daa
jne
lcall
xor
pop
pop
dec
mull
pop
push
push
nop
movsb
xor
jmp
xor
adc
mov
or
enter
push
push
pop
rolb
adc
std
in
pushf
sub
xchg
aaa
jecxz
mov
mov
mov
or
push
cmc
pop
popf
add
adc
lods
int
pop
and
je
mov
ljmp
notb
cmp
in
push
pop
loop
dec
add
scas
pause
jne
pusha
addr16
inc
repz
stos
jp
push
sbb
mov
fmul
jl,pt
mov
jae
out
inc
lahf
push
pusha
mov
test
and
cmp
subl
sbb
sbb
add
loopne
in
pop
lods
cmp
test
fmuls
ja
imul
negl
push
popa
lock
inc
aas
es
ret
fldcw
ds
data16
mov
pop
stc
iret
push
ret
xor
sub
js
mov
inc
or
cmp
fiadds
push
and
into
repnz
or
movsl
iret
insb
xchg
adc
jp
ret
xchg
test
xchg
sbb
mov
add
xchg
dec
imul
mov
cltd
and
lahf
or
mov
les
add
in
jecxz
lcall
sbb
push
inc
or
int
imulw
xchg
xor
les
dec
xor
stc
xchg
or
push
sbb
adc
int3
add
xor
in
and
mov
sub
pop
ljmp
es
scas
adc
mov
dec
xchg
fsubrl
mov
jns
icebp
jne
clc
into
and
scas
mov
ja
push
test
pushfw
cmpsb
aam
xor
pop
jp
out
ret
loop
mov
ss
fidivs
gs
mov
jb
push
dec
dec
aam
push
dec
sub
pop
in
fidivs
icebp
cmp
xor
or
ss
jae
mulb
push
and
addr16
xor
out
stc
add
iret
jmp
movb
xorl
jg
dec
pop
gs
ficomps
xchg
pop
pop
out
daa
adcb
insl
stos
dec
lret
jp
bound
shrl
and
fcomps
push
test
mov
mov
fwait
lahf
sbb
int
inc
mov
mov
mov
out
cld
push
fcompl
ss
bound
sub
push
cmp
mov
in
addb
or
add
fmuls
inc
movsl
push
dec
into
cmc
sub
mov
in
movsl
insl
mov
movsl
sub
dec
and
rorb
mov
dec
ja
or
imul
mov
pop
mov
popf
std
sub
push
lcall
pop
sbb
sbbb
cwtl
fwait
cmp
mov
in
lods
lock
jmp
mov
mov
icebp
pop
stc
imul
cmpsl
lds
sub
cltd
cmp
fildl
jecxz
call
push
mov
pushf
inc
xchg
xchg
jns
sahf
jo
xchg
in
enter
addl
jnp
xchg
cs
pushf
mov
mov
inc
sbb
je
pop
sub
imul
inc
or
adc
cld
scas
lods
push
pop
pop
adc
inc
jae
imul
ret
inc
jae
sub
or
inc
dec
pop
fcos
add
inc
hlt
inc
or
repz
adc
push
cmpsb
jno
aas
fsubrl
inc
xlat
cmp
cmp
int3
lods
fldl2t
push
es
xlat
mov
bound
stos
pusha
dec
nop
psubb
cmc
push
mov
xor
and
mov
cmp
xor
pop
mov
scas
shrb
push
push
and
fldenv
pusha
sub
int
jno
mov
xor
cmp
push
cld
jle
pusha
rorl
lods
fdivs
stos
fdiv
dec
and
mov
xor
mov
xchg
sub
mov
cmpsb
scas
cld
push
mov
pop
add
arpl
sub
test
adc
ja
shlb
mov
pop
popw
mov
movsl
imul
shll
repnz
fstpt
aas
scas
cmc
sbb
xor
or
dec
repz
loop
push
or
jbe
xchg
aam
ficomps
pusha
mov
or
ret
sbb
mov
cld
jl
popa
aaa
sub
xchg
cmp
aad
idiv
mov
rcrl
pop
xor
push
push
insb
mov
pop
rorl
xchg
xor
pop
mov
and
xor
cmp
cmpsb
mov
in
cltd
or
or
xchg
dec
sbb
and
fadd
and
xchg
outsl
clc
out
stc
inc
lret
mov
sub
push
out
mov
jns
xchg
ret
push
rcll
cmpsl
cli
push
mov
mov
pop
push
sahf
jecxz
push
xor
inc
das
push
xor
data16
mov
inc
push
scas
scas
pop
adc
xchg
enter
popf
mov
jge
mov
cs
lret
nop
add
ljmp
mov
inc
shll
ja
mov
push
mov
sahf
dec
jnp
and
mov
call
fisubrs
inc
imul
push
sbb
xchg
in
cmpsb
into
mov
jg
in
push
xlat
mov
adc
frstor
insb
rcr
pop
fisttpll
or
xor
xor
inc
sbb
pop
sub
sub
xchg
adc
xlat
jae
les
aas
cmpsl
or
xor
mov
fdivrs
pop
mov
or
loopne
bnd
mull
fldenv
bound
ret
addr16
mov
popa
dec
ret
mov
mov
aaa
pop
inc
mov
jg
lret
push
pop
clc
mov
fadd
cmpsb
outsb
add
lret
mov
mov
jmp
add
enter
in
or
dec
in
popa
nop
mov
dec
add
jae
scas
pop
out
xor
fst
adc
or
push
sub
pop
shrl
xchg
mov
adc
test
sub
call
inc
iret
nop
sbbl
cmp
and
es
psubsw
sub
cmp
std
jp
mov
sbb
mov
mov
mov
ds
ret
jo
push
jns
clc
pushf
ja
xlat
adc
inc
xchg
enter
push
jno
les
jle
xor
lret
mov
mov
fs
shll
push
popa
lahf
enter
jno
in
not
inc
sbb
lods
mov
nop
mov
dec
adc
sti
test
neg
repnz
loop
in
jae
out
jmp
push
cli
push
scas
mov
adc
test
cmc
push
dec
lea
and
rclb
aad
inc
or
add
sub
fisubrs
xchg
xchg
mov
ret
push
inc
mov
test
sbb
movsl
mov
lods
xchg
sub
fsubrl
jae
aad
mov
push
jg
dec
mov
jl
insl
aaa
mov
push
sti
cmp
or
std
push
repz
cmp
adc
ds
rcll
and
mov
mov
popa
mov
xchg
add
xchg
lods
jp
xor
pop
xchg
sub
inc
mov
sub
sahf
jae
sub
inc
test
xor
aad
xor
and
ja
movsb
test
sbb
out
jecxz
jecxz
push
and
iret
fisubs
xchg
mov
ja
mov
es
push
xorb
js
push
adc
xor
jg
pushl
sub
adc
mov
push
inc
pop
add
inc
push
xchg
in
push
inc
faddp
rep
jo
mov
outsb
int
ficompl
cmpsb
mov
push
int
lock
cmp
xchg
pop
inc
lahf
rorl
leave
lods
cmp
xchg
add
jecxz
push
jle
push
insl
push
loop
cmc
mov
lea
dec
lret
cmp
or
xchg
stc
je
xchg
sbb
mov
iret
xchg
mov
rcr
mov
imul
fidivrl
xchg
scas
push
dec
jecxz
cmp
test
pop
cli
fsubs
push
fwait
popf
dec
push
test
xchg
xchg
adc
imul
stos
push
jno
adc
imul
jmp
movsl
test
pop
or
je
loopne
sub
popa
pop
scas
sub
or
jmp
jmp
cli
lods
cmpsl
sti
ds
pop
pop
jmp
fmuls
xor
daa
add
pop
inc
push
jb
mov
lcall
push
xor
jecxz
inc
jne
cmc
pop
out
imul
push
lret
mov
pop
lret
cmp
pop
popf
cmc
sbb
inc
fnstenv
dec
xor
sub
inc
ret
push
cmc
sbb
lret
push
stos
fstpt
jne
aam
sub
adc
les
ret
fmuls
push
dec
jnp
xor
inc
xchg
add
sub
divb
loop
decb
xor
push
pop
popf
dec
push
push
push
cli
mov
call
std
mov
lret
mov
mov
xchg
out
mov
mov
and
inc
jge
stos
addl
mov
adc
jb
cmp
mov
testb
mov
icebp
push
jle
pushf
out
pop
jo
push
xor
xor
inc
jae
inc
inc
dec
ficompl
dec
ljmp
jl
sub
iret
sbb
movsb
or
mov
stc
movsl
rcrb
test
mov
mov
pop
loopne
rorb
jbe
and
sbb
repz
mov
mov
pop
or
pushf
ret
in
gs
mov
test
mov
sub
pop
movsl
call
cmp
loop
fmuls
jp
js
fdiv
repnz
fcmove
xchg
inc
or
cli
in
push
cwtl
adc
arpl
sbb
lahf
test
jns
xchg
pop
sub
mov
in
imul
lds
sbb
inc
mov
pop
ds
ja
call
arpl
xor
lea
mov
movsl
xor
lods
iret
dec
out
addr16
push
pop
add
pushl
mov
in
in
jns
outsb
and
dec
inc
in
sahf
mov
adc
leave
jo
inc
add
pop
lret
mov
fists
add
xchg
dec
pop
stos
xchg
loopne
sbb
sub
mov
stos
jg
cmp
inc
test
mov
or
xchg
mov
push
and
out
lret
inc
push
das
lahf
push
fwait
test
out
add
xchg
or
and
cld
sub
gs
xchg
adc
mov
xchg
cmp
aas
mov
inc
call
jns
xor
inc
pop
jl
enter
int3
cli
lcall
stos
iret
add
xchg
in
pop
xor
fwait
lods
arpl
scas
adc
push
scas
push
xchg
jbe
jg
outsb
stos
sub
es
cmpsl
or
sbb
in
push
fs
cmp
shl
xchg
cmpxchg
rorl
inc
popa
dec
add
fldl
mov
cmp
outsb
shll
xchg
sbb
pop
or
je
pop
push
xor
daa
imul
nop
mov
int
shll
jmp
jge
fstpt
sub
idivl
sahf
rcrl
aam
fisubl
je
scas
push
mov
leave
lods
in
daa
jbe
aad
mov
push
sub
iret
daa
inc
add
daa
and
psllq
cld
mov
js
pusha
mov
and
or
inc
sub
mov
mov
adc
dec
sub
insl
jle
idivl
lea
xchg
repnz
mov
or
sub
lds
sahf
jae
sub
mov
fmul
cmp
ja
jno
dec
fucomi
xchg
lods
sar
adc
xchg
sarl
imul
adc
int3
iret
ret
icebp
cltd
pop
stc
push
scas
cmp
into
sbb
and
loopne
cs
aam
jns
cmp
sub
lods
in
data16
subb
and
pop
enter
jno
std
outsl
cmc
xchg
mov
loopne
call
ljmp
or
cmpsb
jne
pushf
mov
xlat
out
dec
dec
subl
les
dec
jno
fcomps
movsl
lret
xchg
test
inc
jmp
testb
test
xchg
push
dec
std
mov
inc
sub
addr16
daa
dec
inc
ja
enter
sub
es
xchg
test
jae
push
int3
loop
scas
xchg
cmp
bound
xchg
push
daa
xor
call
nop
and
adc
rcr
mov
repz
xor
loop
adc
daa
fmull
lods
or
vmread
icebp
addr16
fidivs
inc
in
addr16
loop
push
push
xor
in
hlt
mov
pushf
nop
cmp
push
leave
and
sub
push
and
scas
addr16
push
cmc
add
outsl
aas
adc
pusha
jnp
mulb
gs
sub
aaa
jecxz
mov
and
lret
in
sub
dec
add
cli
gs
loope
rorl
call
cld
pushf
adc
scas
sub
ljmp
xor
icebp
push
lahf
xor
gs
xchg
add
mov
and
out
adc
ret
lret
hlt
data16
mov
sub
or
xchg
ret
idivb
fidivs
gs
js
add
mov
xchg
jnp
jp
jns
jne,pn
aas
sub
xor
adc
scas
mov
loop
or
imul
push
mov
sahf
xchg
xchg
pop
dec
xor
or
inc
loop
mov
lret
insb
and
lock
cmpsl
test
jne
mov
sbb
sbb
vmovaps
ja
xchg
cltd
movsl
mov
jmp
lcall
pop
inc
pop
mov
push
mov
xchg
xlat
in
adc
sti
cmp
push
inc
mov
jp
mov
movsb
js
fs
and
dec
iret
andl
xchg
lahf
or
orb
inc
outsl
cli
mov
cmpsl
sub
sahf
je
xchg
push
ljmp
inc
xor
dec
cltd
dec
popf
js
scas
jb
mov
add
into
mov
mulb
daa
and
cmp
mov
sbb
roll
xor
mov
arpl
out
sbb
pop
lret
push
push
lods
or
je
jle
int
jae
jmp
lds
push
sub
scas
xor
imul
mov
cmpsb
cld
dec
ljmp
push
push
pop
jge
mov
inc
loope
adc
add
fldl
mov
sahf
cmp
adc
sbb
mov
mov
push
mov
jmp
xor
mov
ret
xchg
sub
jecxz
inc
fwait
xchg
aas
imul
ret
insl
dec
insl
or
push
or
cmp
and
adc
and
fmull
push
out
fmul
pop
pop
or
xor
and
lods
insb
orb
lret
loop
jmp
inc
mov
aas
idivb
stc
mov
cmp
addr16
push
xchg
cmp
jmp
xor
or
push
imul
pop
mov
and
mov
insl
je
ss
ficomps
mov
pop
adc
cmp
daa
pop
sti
inc
enter
es
or
int3
xchg
test
pop
out
cwtl
les
or
mov
sarb
mov
ss
movsb
jge
test
daa
std
mov
sahf
push
mov
dec
xchg
out
or
shl
pop
cmp
ficoms
icebp
fsubl
inc
sbb
rcrb
pop
stos
inc
jge
dec
cwtl
or
out
dec
xchg
push
cmp
and
notl
loopne
insl
adc
fiaddl
jmp
popa
or
sub
sarl
rcll
loop
ss
cmp
ret
dec
test
jecxz
inc
decb
fwait
add
hlt
nop
add
jle
and
scas
jge
jp
fnstenv
or
push
movsl
push
mov
dec
xchg
popa
jne
fs
adc
mov
sti
and
shrb
outsl
sbb
mov
and
pop
and
paddd
mov
loop
mov
aam
mov
and
sub
add
pop
pop
xor
mov
pop
popa
adc
fisttps
or
aad
fs
popf
fdivrs
xor
scas
lret
pusha
jb
jb
adc
xchg
cld
je
mov
inc
push
xor
mov
mov
pop
repnz
sarb
inc
inc
dec
stc
dec
loope
in
mov
outsl
pop
inc
test
fimuls
repnz
jl
or
std
ficompl
push
test
mov
adc
adc
push
flds
add
aad
push
push
fisubl
arpl
in
stos
cmp
fmul
pop
mov
lahf
imul
sbb
mov
xchg
mov
mov
push
sub
ss
mov
aaa
add
mov
outsb
jle
xchg
jne
stos
dec
testb
aas
popa
outsl
inc
in
push
inc
or
mov
adc
sub
mov
sbb
and
jmp
and
mov
pop
movswl
adc
dec
sub
mov
call
fwait
xor
mov
and
inc
stc
pop
sub
leave
icebp
sarl
or
call
and
jne
push
sti
popf
pop
push
fldl
popf
int3
adc
xchg
cli
xor
inc
pop
mov
jo
imul
adc
stos
fnstenv
out
and
sub
lds
fldl
mov
data16
jno
push
mov
leave
mov
jle
and
dec
js
decb
cld
add
jle
loope
cmp
adc
adc
mov
xchg
push
movsl
adc
pop
inc
stos
insb
cmpl
mov
mov
fsubrp
cltd
cmp
inc
in
pop
rcrb
icebp
gs
loope
jg
je
fstp
mov
and
push
cld
lret
ret
dec
adc
mov
rcl
ret
sub
jmp
jg
inc
pop
scas
fbld
jg
loopne,pn
loopne
push
xor
jb
jno
fbstp
xchg
xchg
jmp
mov
cmp
sub
xchg
mov
cmp
xchg
sti
ret
ret
out
mov
jg
jns
ja
pop
data16
cli
xchg
adc
add
aam
mov
push
repz
pop
mov
outsl
lcall
mov
out
sbb
leave
adc
sarb
push
cmpsl
aam
ss
out
ret
scas
push
push
lret
scas
mov
xor
sub
sbb
jae
mov
add
jmp
push
dec
jl
sbb
push
jno
cs
dec
add
sbb
sub
cmp
and
jle
and
lcall
push
ret
and
pop
fcmovnbe
ja
hlt
mov
sbb
ds
punpckhwd
mov
sub
sbb
fmull
dec
orb
inc
jl
and
ljmp
adc
lds
add
popa
xor
mov
popf
sub
sub
mov
fldl
fisubrl
xchg
pop
lods
rcll
pop
cmp
jne
cmp
or
jbe
inc
int
or
inc
shll
jmp
mov
jnp
iret
fimuls
outsb
xchg
jp
loop
jmp
or
inc
addr16
pusha
inc
push
shll
es
push
loope,pn
pop
sbb
push
cmp
jne
insl
shl
xor
sub
mov
pop
jns
push
in
in
insb
push
and
rcl
movsb
fstpl
sub
rcrl
test
aam
jnp
mov
fisubrl
or
fcoms
fucomp
ja
or
jecxz
test
sbb
insl
pop
mov
stos
fwait
dec
mov
push
in
xlat
test
cld
mov
cmp
aam
fdivs
sti
dec
xor
pop
and
adc
repz
lods
jb
sbb
bound
movsb
push
ret
test
or
fs
pop
insl
ds
sbb
xchg
pop
inc
jae
std
pop
xchg
test
cmp
or
hlt
mov
call
sbb
cwtl
sub
es
adc
out
mov
and
cs
xchg
pop
xchg
roll
mov
xchg
loop
imul
mov
cmp
adc
xchg
repz
inc
inc
call
inc
gs
aam
sub
dec
jo
add
dec
repnz
enter
fldt
sbb
ret
adc
iret
ja
sbb
cmp
arpl
mov
cmp
dec
popa
mov
ja
mov
js
aad
cmpsb
outsb
mov
or
push
sbb
mov
dec
sub
pop
push
xchg
dec
pop
xchg
les
js
cmp
dec
lods
push
aad
popf
mov
mov
lret
loop
cmpsb
andl
and
mov
test
mov
popf
jecxz
sub
push
and
movsb
aad
mov
int
mov
and
test
cs
and
pop
push
xor
mov
lea
sub
fdivl
stos
push
jo
testb
mov
in
std
inc
cs
pop
rcrb
lds
jnp
rcll
arpl
mov
jle
lcall
add
cli
jne
hlt
sbb
xchg
cmc
filds
fdivrs
mov
loop
cmp
mov
mov
sub
rclb
add
sbb
mov
xor
add
lcall
xor
call
rcl
fdivs
fldenv
outsb
outsb
xor
out
or
lret
fnstcw
ljmp
jecxz
sbb
mov
dec
mov
cltd
pop
jne
mov
push
pop
add
in
jmp
fcomps
sub
jp
push
pushf
cwtl
adc
lods
les
or
in
and
in
pusha
sahf
jle
pop
or
leave
ret
sbb
xor
out
add
sub
insl
cltd
jmp
pop
inc
notb
ss
test
aam
add
jle
sbb
mov
je
mov
xor
xor
jno
aaa
mov
push
les
out
out
sbb
dec
in
inc
push
fcmovnbe
xlat
test
outsb
inc
sti
imul
sbb
fdiv
lcall
cmovp
jno
stos
push
add
sbb
lahf
pop
push
sub
fwait
call
dec
lcall
repnz
fnsave
movsb
push
add
mov
out
xlat
cmp
fidivl
jns
lods
pusha
insl
add
jo
rcrl
mov
in
and
lock
into
push
cmp
mov
int3
cmpps
sarl
or
cmp
loope
or
call
jecxz
mov
ja
or
sbb
add
mov
sbb
inc
daa
push
mov
leave
add
inc
jp
pusha
gs
popa
xor
add
pop
xor
daa
add
add
mov
xchg
dec
or
loope
repz
inc
xchg
es
ret
loopne
sbb
jge
shrb
ret
dec
outsb
xor
xchg
or
fsubl
cmpl
sbb
xchg
inc
lret
fiadds
cltd
call
mov
jbe
loopne
cltd
aas
adc
and
jge
pop
in
adc
and
push
repnz
or
push
call
je
subb
icebp
mov
jo
or
inc
dec
inc
fwait
dec
mov
add
scas
jne
ljmp
cld
mov
in
xchg
mov
shrl
xor
arpl
js
push
lcall
inc
orb
lcall
add
push
out
dec
iret
or
repnz
mov
jne
inc
or
cld
out
sbbb
js
inc
fbld
sub
daa
jbe
pop
cs
imul
lret
adc
mov
pop
inc
ljmp
and
sahf
mov
jl
mov
add
mov
test
or
ret
sbb
or
pushf
push
pop
dec
in
cld
xor
pop
xchg
ret
xor
lahf
dec
into
pusha
gs
inc
add
pushf
mov
jo
jno
cmp
jnp
dec
xchg
scas
aas
lahf
nop
imul
jns
pop
ja
jl
fcoml
fucomip
mov
add
stos
and
jnp
neg
repnz
pop
dec
or
and
test
in
imul
cs
inc
or
dec
mov
lret
imul
sub
int3
push
jmp
and
xchg
outsl
push
or
mov
iret
sbb
xor
lea
ret
mov
jmp
enter
sub
pop
cltd
arpl
jecxz
push
mov
jns
add
pop
add
pop
cmp
out
xchg
int
push
nop
xor
xchg
stos
test
dec
loopne
mov
fnstsw
daa
xchg
leave
incb
xor
repz
dec
fwait
inc
loope
mov
adc
xchg
ds
nop
lahf
cs
push
pop
push
pop
and
pop
pusha
xor
adc
mov
xor
jbe
pushf
mov
mov
fcoml
addr16
test
dec
test
imul
mov
cmp
xchg
mov
enter
sub
lods
pushf
sbb
xchg
add
icebp
imul
mov
arpl
inc
cltd
loop
ja
mov
mov
cwtl
lods
push
imulb
jp
aaa
in
ret
notb
lods
sbb
ss
mov
shl
pop
loope
std
or
rorl
shlb
sbb
fincstp
pxor
or
mov
pop
mov
scas
cltd
push
dec
mov
inc
inc
inc
dec
pop
inc
test
clc
inc
sub
inc
movsb
shrb
cmp
xor
aad
pop
jle
gs
stos
cmc
push
push
test
sub
sub
add
ret
test
clc
gs
xchg
fisubl
push
int
fidivrl
dec
sub
inc
decb
jp
cs
testl
mov
hlt
int3
inc
jo
pop
in
xor
xchg
test
pop
dec
xchg
pop
mov
mov
xor
icebp
dec
add
pop
insl
call
jo
fwait
xor
test
stos
stos
lcall
mov
loop
xchg
xchg
nop
and
mov
inc
test
loopne
lods
repnz
lods
cmpb
xchg
cmp
cmp
adc
in
push
jbe
mov
cld
ds
jne
ret
cs
fsts
jg
std
mov
adcl
sarb
fnstenv
dec
inc
pop
adc
stc
adcb
push
in
cmpsb
push
push
mov
test
aad
push
cmpsb
pop
mov
lods
fdivs
adcl
lods
stos
test
mov
or
xlat
addb
and
pop
lds
sbb
popf
cmp
jl
jecxz
and
sbb
push
cmp
loop
imul
xor
sub
fimuls
roll
add
adc
leave
ret
mov
gs
sub
cwtl
mov
dec
mov
push
flds
lea
mov
mov
add
adc
ret
dec
and
add
add
testb
imul
mov
mov
inc
lods
mov
pop
cmp
cmp
loop
push
xor
out
push
cltd
leave
cmc
mov
mov
inc
ljmp
cmpsb
or
das
cmp
sub
test
xchg
subb
sub
sbb
cmp
test
sbb
jmp
sahf
fmulp
int3
cs
idiv
dec
mov
inc
int3
je
xchg
sti
sbb
aad
mov
pop
add
insb
pop
mov
inc
fidivrl
rol
test
pop
push
imul
sub
push
outsb
rclb
and
int3
and
nop
jp
inc
les
pushf
lods
xchg
xchg
js
or
xor
push
pop
rorl
inc
add
push
test
mov
xor
lea
or
xchg
bound
sub
imul
aaa
jl
or
loope
adc
adcl
cwtl
outsl
xor
mov
inc
mov
mov
addl
movsb
xchg
mov
in
or
sub
cmp
pop
outsl
aas
aas
repnz
xor
jae
jl
push
icebp
pop
dec
cmp
mov
mov
lods
mov
std
lock
cwtl
and
and
xchg
cmp
jae
and
inc
xor
xor
mov
lea
in
xlat
add
test
jae
push
imul
mov
or
int3
sbb
cmpsl
test
cwtl
cmp
hlt
mov
icebp
in
in
bound
pushf
fbld
and
cmp
mov
daa
mov
mov
test
in
imull
leave
rcll
mov
int3
das
loope
and
fwait
ret
popa
jecxz
dec
sbb
test
mov
jno
pop
and
or
mov
int3
jae
in
mov
cltd
pop
mov
outsl
into
and
jmp
add
pop
stc
cmp
adc
push
sbb
push
mov
loop
mov
mov
push
mov
lret
lea
jo
ljmp
inc
inc
scas
clc
mov
pop
mov
rorb
enter
pushl
push
les
mov
cli
ljmp
bound
int
loop
mov
movsl
icebp
pop
mov
and
sub
loopne
inc
or
mov
mov
adc
sub
dec
sbb
push
fldl
cmp
es
aaa
xor
shll
and
push
js
mov
mov
push
out
jnp
cmpw
jmp
inc
push
fcmovnu
jmp
jmp
mov
inc
cmpsb
data16
and
in
aaa
ljmp
mov
lea
push
cmpsl
pop
xchg
mov
stos
jbe
scas
sahf
mov
test
mov
icebp
out
out
xlat
shl
jge
sbb
cld
or
mov
addr16
daa
daa
divl
or
push
aam
jge
in
popf
pand
pop
rcrl
xchg
jecxz
push
or
sub
push
hlt
sub
testb
into
shlb
lock
adc
push
outsl
mov
push
inc
in
popa
sbb
and
and
xor
out
push
clc
cwtl
mov
cmpsb
loop
adc
sbb
aaa
fstps
jmp
clc
ret
pop
ss
xchg
adc
and
cmp
scas
and
mov
in
sub
mov
cmp
add
mov
xchg
movsb
addl
xchg
xchg
inc
cmp
sahf
adc
in
std
pop
jl
test
pop
icebp
mov
sbb
jo
and
aas
jae
imul
xchg
sub
xchg
mov
in
xchg
cmp
jle
ds
mov
lock
sub
out
shl
pop
jnp
out
popa
test
out
mov
push
sub
add
and
stc
xor
pop
add
shrl
adc
clc
and
mov
out
ljmp
inc
cmc
lds
and
mov
pop
adc
divb
insb
cmp
or
mov
mov
jl
stos
jl
loop
aaa
inc
sub
push
cld
test
mov
lcall
ret
mov
xchg
xchg
sub
mov
xorl
cmp
hlt
loope
mov
das
adc
rcrb
pop
or
je
jl
pop
push
hlt
mov
inc
inc
iret
popf
mov
stos
pop
jg
jle
addr16
outsl
mov
div
xchg
mov
pop
jg
repnz
in
rcrb
aad
cmpsl
mov
sub
mov
or
fs
sbb
cmp
lcall
in
popa
ss
div
shrb
cli
sub
and
ficompl
shlb
iret
jg
ret
sbbl
lods
or
mov
incl
add
pushf
jge
pop
movsb
sub
frstor
pop
inc
push
sub
ror
aam
jp
fs
in
enter
jne
imul
loop
imul
popa
mov
add
sub
mov
inc
mov
hlt
sti
lds
jecxz
cmp
pushf
and
push
jns
jno
jnp
sbb
in
mov
jp
add
aad
adc
mov
mov
lcall
pop
fldenv
mov
stos
xchg
push
loopne
bound
add
out
lds
data16
call
repnz
int
mov
es
xchg
fucomp
or
out
dec
push
add
mov
or
imul
cmpsb
jle
fwait
popa
mov
mov
int3
movsb
shll
fmul
mov
dec
shr
jb
adc
bound
push
sub
lods
sbb
call
lods
xor
dec
leave
and
push
loop
mov
gs
mov
pop
lret
jle
repz
dec
fimull
or
mov
dec
jbe
push
xor
cmp
jnp
out
jl
pop
les
les
cmpsl
mov
or
rcr
ljmp
sub
mov
movsl
push
rcrl
fidivl
or
mov
ss
xor
fcmovnu
shlb
mov
adc
cli
adcb
xchg
mov
add
into
and
lock
ret
pop
cmp
and
inc
mov
les
push
clc
les
fs
in
xchg
mov
data16
subb
aaa
dec
sub
ja
lcall
inc
mov
int3
push
adc
inc
stos
out
mov
mov
pop
pop
mov
aaa
add
pop
arpl
mov
adc
mov
aaa
lods
mov
cmpl
iret
aas
adc
cmp
mov
out
dec
notl
and
pop
and
ffreep
aas
sbb
cmp
add
jbe
lcall
mov
aas
loope
lahf
sbb
lea
fidivl
cltd
shlb
test
jle
repz
mov
and
add
mov
push
xchg
fidivs
test
out
cli
and
dec
popa
inc
cwtl
adc
or
insl
movaps
sub
lret
mov
xchg
mov
test
mov
cmc
outsb
clc
test
xor
emms
fisttpll
fdivrp
mov
in
out
lods
and
fistps
movsl
add
pop
add
xchg
adc
ret
pusha
mov
dec
push
pop
scas
add
or
xor
jmp
fdiv
iret
nop
int
mov
loope
pushf
inc
sarb
popa
xor
xchg
sub
sub
loopne
int
loope
push
out
data16
mov
pop
inc
cmpsl
jae
cmpsb
mov
bound
mov
aam
pop
inc
ds
add
or
fucomip
insb
fmuls
mov
sub
fldl
xlat
test
sbbb
loopne
pop
sub
lds
test
jge
push
jecxz
sbbl
xchg
int
xchg
mov
std
jl
into
and
inc
inc
sub
jge
lds
repz
rorl
shr
jno
std
je
jl
dec
pop
lea
mov
mov
and
mov
addr16
dec
dec
std
addb
xchg
test
enter
jb
stos
scas
push
mov
lahf
rcpps
mov
imul
or
sbb
pop
fwait
inc
sbb
icebp
repz
ret
inc
insl
aas
movsb
xchg
adc
mov
jae
es
out
xchg
movsb
pop
inc
xor
out
pop
jle
mov
mov
push
or
pop
push
out
sbb
je
and
insl
es
inc
and
cli
sub
stos
cld
std
xor
mov
fisttpl
test
shrb
pop
cli
push
sbb
mov
imul
pop
mov
sbb
sarl
in
fsubrs
mov
cmpsl
inc
pop
adc
push
shll
movsl
or
push
popa
jns
aad
sbb
mov
or
add
sti
fists
mov
ret
into
xlat
pop
dec
or
push
dec
or
sub
shrb
int
xor
sub
int
xchg
data16
int
adc
add
cltd
imul
fmull
test
fidivs
lock
adc
test
inc
mov
pop
push
xchg
jbe
sbb
test
std
aaa
inc
test
leave
push
orl
add
mov
pusha
nop
in
push
sbb
subb
nop
cmc
add
xchg
imul
icebp
pop
bound
jb
js
push
mov
push
out
out
fwait
cmp
lds
test
loope
sub
mov
or
ror
xchg
cmp
leave
and
xchg
add
sbb
jne
add
add
add
cmp
int3
ret
jno
sub
and
xlat
mov
std
sbb
adc
and
push
lret
lea
movsb
and
mov
cmp
sub
mov
lods
push
jns
mov
sub
scas
stos
or
sbb
fs
pop
mov
in
jnp
sbb
mov
das
pop
push
rcl
mov
xor
push
je,pn
leave
and
xlat
std
fs
mov
stos
mov
push
jg
subb
test
adc
imul
xchg
mov
xchg
or
sbb
mov
loopne
add
sbb
inc
and
nop
arpl
es
mov
mov
mov
pop
xor
inc
push
lcall
xchg
cmp
std
mov
mov
shll
mov
xchg
sub
outsl
inc
lcall
mov
outsb
orb
inc
dec
mov
xor
xchg
pushl
adc
inc
imul
inc
fiaddl
inc
or
and
test
push
out
lds
inc
jmp
sbb
addl
test
mov
cmovg
or
dec
mov
jno
loop
lcall
outsl
jno
add
insl
jae
add
xchg
and
gs
add
adc
jle
fdivrs
and
or
xor
or
je
lea
mov
into
dec
repz
idivl
ficoml
mov
mov
lods
in
jno
dec
ret
sub
js
add
scas
dec
rorb
test
lock
and
sub
dec
icebp
pop
pushf
aas
imul
sub
add
cmpsb
cmp
data16
xchg
ret
out
pop
scas
dec
bound
dec
addr16
ja
or
fucomi
cwtl
jnp
cmp
and
scas
ret
outsl
inc
outsb
push
lods
pusha
movsl
mov
mov
sub
add
adc
arpl
enter
lea
push
adc
ficoms
pop
ds
sub
int3
mov
lea
cld
mov
xlat
xor
push
dec
or
gs
jge
mov
sub
adc
jnp
repnz
jno
jge
or
daa
jg
mov
mov
clc
out
loopne
lock
ret
test
mov
jmp
lock
dec
sub
push
shl
psubb
sub
jb
cmp
xchg
push
push
popa
pop
push
jne
imul
add
sbb
fnsave
insb
adc
test
xchg
cli
insb
faddp
dec
pushf
cmp
push
lds
cmpsl
and
dec
and
and
call
inc
ja
sahf
dec
imul
pop
aad
sarb
add
sub
rcrb
mov
int
xchg
jmp
lds
cmp
mov
sbb
xchg
dec
loope
jle
arpl
cmp
jb
xchg
aas
pop
sub
out
jae
cmpsl
sahf
aas
xchg
pushf
scas
mov
mov
mov
sbbl
and
xchg
mov
xchg
or
mov
mov
inc
and
cmp
dec
andb
dec
sahf
ja
jg
stos
ljmp
dec
fldcw
pop
lea
push
dec
leave
mov
add
xor
xchg
loopne
imul
push
jge
dec
fwait
cmpsl
push
mov
in
les
pop
inc
insb
outsb
scas
inc
pop
inc
xor
mov
imul
pop
jmp
mov
mov
sahf
inc
ja
es
aaa
pop
mov
jo
lods
mov
sbb
cmp
lret
stos
mov
lret
inc
cmp
sub
fbld
add
das
dec
jmp
movsb
aad
addr16
sarb
inc
arpl
outsl
cltd
mov
xchg
shrl
pushf
mov
mov
dec
sub
add
aad
in
mov
xor
ret
push
dec
decb
insb
bound
sbb
aam
xor
cmp
pop
xor
sub
xchg
pop
andl
cmpsb
or
ret
xor
mov
xor
call
clc
mov
push
ss
xor
bound
adc
mov
fistps
xchg
js
mov
sbb
xor
mov
test
or
adc
adc
sub
arpl
lds
inc
sbb
loopne
inc
and
les
lea
xchg
clc
frstor
inc
or
pusha
mov
lods
mov
test
inc
enter
mov
popf
and
movsb
nop
orb
push
cwtl
xor
inc
jae
andl
inc
lock
sarb
call
xchg
push
pop
pop
jae
mov
xchg
mov
repnz
mov
out
mov
adc
ja
mov
test
mov
nop
mov
xchg
mov
iretw
nop
push
xchg
mov
push
mov
push
or
mov
aas
dec
and
dec
pop
int3
cs
push
mov
pop
fistpll
sub
test
outsb
lods
jmp
ret
mov
in
inc
xor
mov
cli
ror
xor
dec
pop
xor
std
or
shrb
es
pop
jge
inc
and
repz
fldt
aad
cmp
repnz
mov
adc
mov
mov
sub
push
sti
mov
inc
fldl
xchg
cmp
mov
sbbl
out
push
ficoml
in
and
fwait
sti
mov
roll
fldt
push
icebp
nop
cmp
sub
cwtl
in
pop
mov
in
ja
sbb
xchg
into
dec
inc
xchg
and
and
cmpb
mov
jg
mov
icebp
movsb
inc
dec
pusha
and
into
sub
jae
xlat
enter
pop
inc
movsl
or
daa
adcl
imul
clc
aas
jo
jno
xchg
jge
mov
jnp
fstps
outsl
dec
imull
lcall
xchg
in
dec
xchg
jecxz
mov
mov
movsb
jl
pop
jbe
and
cmpsl
cwtl
cmpl
push
and
sbbl
mov
sub
and
xchg
inc
pop
repz
mov
or
or
cwtl
push
dec
cmp
addr16
ja
or
fsubrl
iret
or
or
push
mov
nop
xchg
and
jle
xchg
xchg
push
jl
pushf
lds
jle
ficoms
enter
lods
lds
cmp
mov
dec
jge
xchg
fldt
jmp
add
and
jno
push
pop
xor
mov
das
xchg
les
rcrb
cmp
push
fildl
les
in
jo
andb
test
adc
outsl
jmp
stos
xchg
mov
aaa
pusha
sub
sub
mov
dec
sbb
cmc
jns
out
outsl
fstl
stc
ret
xchg
add
test
or
ret
in
loopne
mov
jmp
xchg
mov
push
into
js
aaa
mov
cmc
and
sahf
imul
adc
stos
and
sti
inc
fwait
inc
cld
pop
and
imul
xchg
icebp
scas
dec
xchg
pop
ror
cs
add
push
test
jmp
push
insb
xchg
data16
mov
mov
cmp
leave
dec
push
in
das
jae
cmp
inc
mov
repz
shrl
mov
adc
sbb
enter
lcall
push
cmp
bound
inc
lea
push
aaa
std
fsubr
ljmp
fldenv
lods
pop
ljmp
pop
xlat
lret
mov
cmp
push
in
pop
fld
mov
adc
dec
cmpsb
dec
xchg
adc
dec
aaa
mov
int
sbb
push
retw
out
bound
mov
add
push
fcompl
ret
or
rol
rcl
sbb
cmpb
cmp
cmp
add
push
push
out
ja
inc
icebp
repz
mov
xorl
push
and
inc
adc
dec
shll
orb
sub
andl
dec
clc
out
pop
cmp
mov
add
mov
ja
push
sub
jo
enter
mov
leave
sbb
mov
or
xchg
cmpsl
call
daa
xchg
rorb
lea
cli
jb
es
xchg
jbe
mov
and
rcrl
jmp
xchg
clc
cs
inc
loope
shll
adc
mov
xchg
leave
shll
mov
inc
je
or
mov
pop
sbb
sub
jns
popa
lret
inc
les
stos
jb
sbb
in
xor
scas
ret
jae
iret
inc
aas
lret
push
jecxz
leave
es
lods
sbbb
inc
push
push
mov
mov
faddp
out
mov
push
call
lea
sarl
icebp
adc
push
imulb
fstpl
xchg
icebp
mov
inc
les
xchg
fs
xlat
fmull
insl
repz
add
sub
loop
add
pusha
ret
call
test
pop
repnz
xchg
xchg
pop
cmpsb
insl
test
xor
pushf
popa
sbb
xchg
loopne
lret
lock
mov
repnz
mov
inc
mov
fbstp
das
dec
loop
sbb
fldcw
push
dec
ret
aaa
pusha
cmpl
aaa
mov
pop
sbb
mov
movsl
gs
fistpll
test
xor
push
cmp
and
xchg
aad
xor
insb
or
sub
pop
or
or
cmp
rcrb
sub
cmpl
pop
dec
jb
loope
jnp
sbb
rcr
and
scas
dec
das
leave
into
dec
fcmovu
in
ss
mov
cmp
add
test
movl
dec
loopne
sbb
lcall
cld
fs
mov
jns
dec
ja
das
loop
mov
xchg
xchg
sahf
cmc
dec
sub
adc
xchg
add
outsb
or
or
mov
inc
cltd
mov
rolb
sbb
push
xchg
mov
nop
das
jnp
add
inc
mov
out
jecxz
xchg
roll
lret
call
repz
mov
pop
cmp
daa
xchg
sahf
scas
or
push
dec
pop
enter
imul
lods
xor
neg
mov
dec
or
mov
leave
xchg
or
add
adc
stos
das
add
lret
repz
jb
aas
js
pop
or
lea
jmp
cmp
sub
push
sub
push
aad
int
cltd
fucom
xor
or
mov
dec
repz
repnz
es
test
shll
pop
mov
pop
xchg
cmpsb
mov
pop
push
adc
test
fwait
mov
fmul
jle
mov
out
sub
cs
jb
outsl
sub
inc
shl
xchg
pop
xchg
mov
push
ljmp
cmp
das
add
movsb
loopne
jb
and
mov
push
cmc
push
sbb
cmp
xchg
nop
inc
pop
lret
mov
sbb
xlat
mov
add
jns
test
jge
fiadds
div
imull
pop
lcall
push
popa
dec
iret
mov
mov
icebp
adc
aaa
lcall
jmp
jo
sti
fisttpl
push
sub
mov
dec
test
rclb
hlt
adc
cmc
or
mov
out
test
pop
xor
mov
test
jp,pn
and
and
test
lahf
inc
xor
xchg
add
cmp
leave
dec
jae
mov
dec
cmp
sbb
lret
xor
xchg
sub
arpl
jns
xor
insb
in
cwtl
push
fmuls
mov
ds
xchg
insl
lret
push
movsl
push
mov
fstl
imul
sbb
movsb
test
pushf
pop
sbbl
int3
fisubl
addr16
jg
jmp
sbb
addr16
cs
cld
icebp
fists
pop
sbb
jo
fsubrl
xor
test
clc
mov
je
lods
mov
addb
pop
mov
cltd
mov
mov
loopne
lahf
shll
lods
dec
and
jle
dec
xchg
insl
push
pusha
fs
jle
movsb
push
jae
pop
xchg
in
rcrl
jae
rclb
pop
mov
subl
and
cmp
push
jne
xchg
icebp
into
popf
pop
mov
push
add
cmp
imul
mov
push
adcb
xor
mov
sbb
jae
pop
bndldx
lret
adc
mov
aad
lret
gs
mov
xor
in
adc
loop
dec
sbbb
cmpsl
inc
insl
jle
fisubrs
mov
movsb
loope
inc
lahf
ds
xchg
mov
cmpsl
loope
or
xor
test
or
xlat
fdivs
ss
dec
pop
mov
jns
lods
add
ret
mov
xchg
mov
scas
push
adc
xchg
stc
popl
inc
adc
sbb
jle
test
loopne
pop
nop
mov
lock
push
arpl
nop
hlt
in
jns
les
push
jle
jp
imul
dec
ficoms
jp
push
xor
or
xor
daa
cld
xlat
xchg
adc
fbstp
pushf
xchg
push
insl
imul
rclb
jae
push
pusha
xor
into
inc
inc
jp
xchg
add
inc
jne
cli
inc
testb
bswap
dec
mov
cli
push
rolb
out
loopne
sub
xchg
pusha
mov
sbb
bound
pop
repz
jbe
xacquire
push
call
sub
cmpsl
fimuls
xchg
mov
shl
push
push
xor
push
out
pop
mov
push
push
int
loopne
push
and
add
jbe
jae
clc
xlat
sbb
loopne
leave
mov
cli
aaa
jp
mov
add
adc
pop
mov
bound
popa
cli
xchg
shll
sub
or
sub
pop
movsb
imul
push
sub
cmp
cmpsl
jle
movhps
or
inc
packsswb
xor
jl
pop
fwait
mov
pop
sbb
or
sub
fldl
stc
dec
xchg
adc
outsl
jg
push
add
and
js
mov
dec
dec
cmp
and
leave
xorb
dec
xor
sbb
dec
xchg
sub
push
push
ljmp
ja
xor
sarl
scas
orl
int3
jg
or
nop
gs
leave
in
jae
sbb
arpl
xchg
repz
bound
mov
mov
fcmovnu
int3
xchg
mov
shld
test
dec
clc
lret
cli
adc
xchg
pop
pop
jns
cmp
sub
jge
repz
jle
mov
mov
xchg
fcmovnb
loopne
sub
pop
je
icebp
add
loope
stos
popf
loopne
and
repnz
add
dec
rcrl
js
xchg
sti
or
push
jne
push
cltd
adc
out
fcmovb
pop
test
xor
orb
leave
roll
sahf
xor
in
into
mov
je
leave
push
adc
sbb
mov
push
cli
cwtl
scas
hlt
loop
xor
cmp
sahf
aad
cld
lahf
lret
inc
leave
lahf
inc
arpl
imulb
loope
jmp
out
push
xchg
mov
xchg
xor
outsb
xchg
or
loope
int
pop
lahf
cmc
jp
fcmovu
insb
push
adc
loop
inc
and
jge
testb
pop
inc
xchg
push
jmp
jne
mov
testb
xor
int
bound
lods
dec
mov
adc
adc
push
jmp
jle
or
cmp
fsts
push
adc
js
out
or
fs
pop
shrb
sbb
or
popa
push
popf
movsb
call
and
lods
mov
pop
rcl
lret
aam
cmp
mov
dec
negb
push
sbb
test
out
pop
test
scas
iret
dec
in
pop
cs
cld
dec
xchg
dec
or
xlat
std
rorb
pop
fidivrl
and
js
xor
mov
call
jl
lahf
seta
fs
imull
daa
mov
inc
jge
dec
sub
fdivr
push
mov
clc
xchg
cmp
flds
mov
xchg
lds
insl
clc
push
lods
jbe
repz
cmp
dec
xor
lahf
jle,pt
mov
jmp
adc
rorl
in
stos
popf
fidivrs
fs
push
inc
test
adc
sahf
test
inc
gs
push
sahf
stos
xorl
adc
mov
enter
sub
jmp
adc
push
cmp
lcall
out
scas
test
insb
sti
mov
sbb
xchg
aam
fwait
mov
lcall
clc
bound
lahf
pop
mov
mov
dec
notl
sub
xchg
stos
into
mov
push
outsb
jnp
mov
jle
hlt
pop
imul
loope
pop
push
mov
mov
les
push
fisubrs
cmp
adc
mov
push
pusha
popf
pslld
mov
inc
cld
je
sub
out
pop
ret
inc
es
xor
mov
jp
pop
pusha
inc
xor
add
push
dec
jecxz
mov
push
sub
mov
gs
jle
mov
sub
mov
aas
popa
add
ljmp
mov
icebp
cmp
dec
xchg
push
mov
or
cwtl
pop
or
out
cmc
adc
xor
insl
mov
xor
mov
and
incb
xor
imul
mov
out
dec
enter
sti
jecxz,pn
mov
xor
push
adc
test
and
hlt
and
dec
mov
mov
ds
hlt
orl
or
cmp
lds
push
mov
jl
push
cmpl
sub
data16
push
push
mov
pop
dec
mov
mov
add
xor
adc
pop
das
fbld
scas
xchg
lock
jns
lea
xor
lcall
lret
pop
or
rcrb
and
lea
cvtps2pd
in
fisttpll
repnz
je
mov
or
or
jbe
pop
jge
movsl
sub
test
out
ret
test
push
insl
adc
or
lret
jl
lods
addb
xchg
lea
dec
push
fsubl
in
mov
jp
fnstsw
cmp
jo
ljmp
inc
leave
cmp
mov
cli
fdivl
ret
icebp
pop
add
mov
stos
aam
xchg
cmp
jle
and
ljmp
cmp
sahf
adc
cmp
aaa
movsl
mov
push
inc
xchg
lds
xor
movsl
sub
jge
mov
xor
bound
ret
cmp
popa
test
sub
pop
int3
ficompl
in
mov
cmp
push
or
int
pop
test
lods
loope
scas
jo
jge
or
ror
cmp
lcall
xorl
jnp
or
outsl
mov
shlb
test
cwtl
mov
dec
mov
out
stos
cmpsb
or
mov
rcr
or
pop
not
loope
cltd
insl
aad
xchg
inc
rcl
imul
pop
mov
jmp
daa
cmp
in
in
fs
sub
loop
sbb
test
rep
xchg
jp
jb
mov
lods
mov
mov
ljmp
loop
pop
jne
loope
and
xor
mov
jl
mov
rcrb
orb
gs
sahf
dec
stc
mov
adc
or
add
imul
loop
loope
outsb
cmc
xor
cmp
jns
cmpsb
lods
add
xchg
mov
lcall
rcrb
dec
add
xchg
repz
scas
add
int3
cwtl
adc
and
call
pop
lret
mov
fstps
xchg
and
insb
icebp
cmc
pop
mov
or
jb
push
pop
mov
mov
mov
add
int3
cs
movsb
inc
imul
hlt
ss
add
out
add
jge
sbb
cmpl
mov
adc
inc
mov
add
push
cmpsl
negb
fistps
imul
data16
jno
xor
fstl
xor
mov
sbb
fcmovnbe
cmpsl
shrl
gs
sbb
stos
in
mov
pop
inc
arpl
call
jo
push
lea
jg
pop
cwtl
mov
xor
xor
les
lock
xor
pop
imul
adc
jg
psubw
stos
mov
out
push
lcall
scas
orb
inc
aaa
sub
mov
leave
lods
sub
int3
enter
pop
test
inc
in
jo
fcompl
inc
aam
mov
jnp
stos
movsl
jle
cwtl
mov
push
jns
out
ret
mov
adc
inc
jge
cmpsb
dec
add
outsb
lods
filds
dec
mull
adc
lods
jo
arpl
or
or
pop
pop
push
push
lcall
xor
jnp
inc
jecxz
pop
jo
movsb
mov
cmp
mov
inc
ds
dec
lahf
push
mov
imul
negb
adc
das
in
ret
pop
mov
or
lods
out
jle
imul
sub
enter
sub
mov
or
std
aas
mov
sub
out
dec
cmp
lea
add
in
jmp
sbb
bound
lret
cli
iret
cmpsl
int
out
lods
cmp
lds
adc
mov
mov
pop
inc
fsubrl
cmp
sarl
pop
aas
and
xchg
jnp
ljmp
fcmovnb
bound
cwtl
pop
add
inc
es
mov
cmpsl
xchg
jl
pop
pop
dec
xchg
push
and
daa
ds
xor
cld
dec
cmp
xchg
addb
mov
push
movsl
loopne
inc
mov
xor
cltd
pop
stos
add
mov
imul
aaa
xchg
pop
das
xor
push
cltd
mov
arpl
cltd
jl
imul
cmp
mov
into
aam
in
loopne
imul
or
adc
outsb
mov
push
dec
push
cmp
bt
out
mov
mov
rolb
in
cld
pop
lea
orb
pop
icebp
out
icebp
cs
and
ja
popf
jg
cs
test
ljmp
ds
pushf
inc
push
push
pop
xchg
xlat
jae
icebp
sub
push
cmp
fwait
test
sub
lahf
xchg
lods
jae
mov
je
mov
adc
inc
jge
mov
xchg
outsb
adc
imul
sub
add
mov
jcxz
test
fbld
pop
mov
sub
std
mov
cmp
or
cmp
mov
sbb
fstps
fcomp
mov
loope
mov
int
inc
mov
nop
fisubl
ret
mov
mov
inc
pop
cmp
xor
and
mov
lcall
xor
push
pop
push
add
pop
leave
mov
dec
js
repz
xor
dec
sbb
mov
int3
sbb
mov
in
jmp
inc
cmp
ret
int
or
out
les
loope
cmp
pop
mov
jo
cmpsl
fsubl
lcall
mov
rep
faddl
add
mov
jmp
and
or
rcrl
out
sbbb
fidivrl
mov
pop
aaa
outsb
jmp
pop
aaa
jne
lods
popf
sub
mov
jae
jmp
add
add
imulb
subl
movsb
sub
pop
pop
dec
dec
sub
out
adc
or
xchg
mov
mov
sbb
stos
jb
jb
ljmp
dec
fcompl
pop
xor
inc
push
stc
pop
imul
or
xlat
sarl
scas
shr
cltd
enter
dec
fsubp
mov
lds
les
jl
loopne
push
add
enter
leave
add
pop
inc
ljmp
nop
rcrl
push
cltd
push
inc
scas
vprotq
jno
mov
fldenv
mov
mov
mov
or
xchg
push
imul
mov
push
rcl
inc
shl
test
jnp
sbb
shr
aam
adc
pop
xchg
pusha
or
sub
push
cld
mov
das
xlat
jge
dec
inc
pop
jo
or
fcmovne
test
xor
sahf
mov
leave
cmpsb
add
jl
mov
push
lcall
dec
push
jecxz
sub
sarl
jnp
mov
icebp
repnz
repnz
repnz
lret
hlt
lahf
sub
xchg
add
popa
push
hlt
fistps
pop
jno
push
js
sub
outsl
mov
dec
mov
jmp
inc
sub
iret
mov
scas
xchg
ss
or
cmc
cmc
jmp
imul
xor
mov
cmp
dec
sbb
mov
subb
leave
push
frstor
jb
sub
or
pusha
fimuls
add
pop
add
sbb
movsb
add
popl
insb
jae
xchg
stos
xor
mov
jae
mov
inc
aas
adc
push
shll
fldl
push
popa
xchg
daa
test
push
les
cli
dec
sub
pop
cmp
data16
fs
inc
xchg
pop
xchg
xor
inc
dec
aam
add
fwait
push
cltd
inc
sub
clc
sub
outsb
fisttpll
shl
push
push
insl
mov
pop
popf
cld
scas
shrb
lahf
test
popa
or
mov
ret
mov
fcmove
mov
inc
mov
stos
ret
call
popa
mov
adc
pop
xor
mov
repz
sub
int
push
pop
call
jmp
rcrl
subb
dec
jbe
jl
repz
or
pop
xor
icebp
inc
add
mov
orb
scas
and
xor
rclb
sbb
jnp
add
sahf
cltd
cs
or
mov
fsts
into
cs
add
bound
mov
adc
test
cmp
flds
sub
xor
cmp
cltd
std
cmp
loop
inc
xchg
cltd
enter
and
inc
inc
mov
das
xchg
fwait
pop
dec
sub
adc
fwait
dec
popf
gs
rorl
pop
ja
int3
and
out
xchg
lahf
shrb
js
mov
cmpsb
mov
ds
mov
in
jmp
vmaxsd
fs
js
add
clc
icebp
movsb
imul
jae
xor
rorb
scas
addr16
cmp
mov
js
lods
leave
and
es
loopne
xlat
xor
xor
and
rcll
lret
iret
or
mov
xchg
loop
imul
pop
xchg
xor
mov
jns
ja
mov
out
or
xor
or
out
sub
lret
cmpsl
and
sbb
test
sub
and
nop
bound
aaa
sub
fsin
imul
sahf
jb
sub
dec
dec
mov
jb
dec
adc
adc
cmp
scas
imul
aas
pop
adc
es
stos
sub
mov
cmp
faddl
jno
inc
sub
test
add
xchg
push
xchg
fcoms
mov
lods
add
incl
les
sbb
mov
jmp
cmp
cmp
jmp
daa
daa
mov
cmp
sbb
in
xor
jl
shll
jmp
roll
mov
jmp
pop
xor
mov
mov
movsb
test
lea
push
arpl
aas
dec
mov
xchg
inc
ficoms
ret
imul
insb
sub
in
aam
cmp
adc
dec
cmp
inc
mov
adc
xchg
mov
dec
scas
cld
pusha
push
outsb
xor
jo
fidivrs
subl
icebp
and
push
movsl
pop
pop
push
cs
aas
xor
or
add
jmp
jne
or
add
out
fstl
mov
or
test
cmp
xlat
imul
aad
cwtl
xor
bnd
pop
les
xchg
xchg
sbb
pop
xchg
ret
inc
dec
mov
loope
fsts
fldl
mull
xchg
int3
sub
popa
inc
mov
push
mov
sbb
aad
movsb
fs
or
sarb
scas
fistl
mov
int3
inc
pop
movsl
ret
in
pop
shlb
loopne
repnz
mov
out
or
xchg
jmp
mov
pop
pop
adc
cmp
or
sbb
jmp
pop
and
cs
pop
jmp
aas
push
inc
insl
inc
addr16
and
jmp
jo
xor
inc
mov
fs
xchg
mov
jmp
sbb
and
add
inc
out
inc
sbb
movsb
stc
and
jge
inc
aaa
cmp
aaa
xlat
js
leave
dec
mov
add
jg
movsl
mov
xor
sbb
push
cmp
sbb
shlb
add
loop
outsl
and
inc
subl
dec
movsb
pop
dec
mov
addb
pop
or
lret
cmpsb
push
ret
fiadds
xchg
cwtl
mov
jecxz
cmc
shll
mov
push
xchg
ds
out
es
mov
outsl
outsb
jne
int
repz
push
bound
outsb
dec
test
les
scas
repnz
xchg
add
xor
testb
inc
and
push
inc
aaa
js
push
fiaddl
add
pop
clc
push
fs
ss
dec
sarl
scas
repnz
push
lcall
lret
js
inc
fmul
leave
mov
gs
mov
jmp
imul
dec
bound
dec
shl
popf
dec
xor
cltd
inc
lcall
add
and
icebp
sbb
jnp
mov
ror
or
imul
cmpsb
std
addr16
imul
fistl
jb
xor
xor
test
int
jae
cmp
out
xor
jns
clc
add
push
shll
shrl
mov
scas
mov
call
sub
repz
xchg
out
and
pop
adc
in
add
inc
test
dec
dec
dec
jmp
dec
jge
adc
xchg
data16
sahf
bound
cmpl
push
jp
lods
jp
dec
jns
mov
hlt
jne
call
xchg
mov
jns
outsb
mov
xchg
pop
cmpsb
dec
cmp
in
aaa
ret
xchg
jbe
stos
les
enter
pop
lahf
adc
mov
adc
pop
data16
push
mov
test
enter
roll
mov
add
mov
or
mov
jbe
fs
cld
addl
pop
cmp
sbb
push
jno
iret
pop
xor
dec
fldenv
lods
jg
jae
pop
xchg
adc
fstl
xchg
vpsllw
push
push
inc
push
lds
lods
mov
fldcw
cltd
or
stos
in
push
push
mov
and
std
out
xor
mov
ret
insb
mov
xor
add
mov
int3
and
stos
mov
scas
lret
push
pushf
mov
pop
pop
sub
sbb
aam
mov
inc
sub
lock
in
clc
sub
mov
cmp
arpl
jmp
mov
mov
add
jnp
lock
outsb
fidivrl
adc
adc
das
iret
sub
aam
xchg
sbb
jmp
mov
aaa
mov
imul
dec
push
push
ret
sbb
sbb
inc
cmc
cli
fwait
xor
stos
sbb
imul
loop
fwait
les
fsubs
xor
adcl
repz
insl
imul
mov
loopne
and
sahf
mov
inc
cmc
pop
out
or
insl
adc
fisubs
out
push
pop
neg
bound
ret
jne
imulb
subb
out
mov
lods
jbe
xchg
rcrb
xor
jns
out
out
and
sar
xchg
sbb
mov
scas
mov
stc
andb
les
inc
pop
data16
mov
pop
lds
pop
dec
inc
xor
insl
imul
call
xchg
sbb
and
cmp
push
sbb
push
or
andb
fmull
mov
andl
mov
cld
mov
push
lahf
pop
add
push
inc
fwait
outsb
jl
sti
dec
mov
xchg
arpl
lea
imul
insl
pop
imul
in
test
rcl
inc
jb
jp
inc
pop
in
push
or
push
lods
adcl
movsl
dec
insb
aas
aad
sub
add
xor
js
cli
outsl
pop
loope
xor
xorl
mov
ret
loop
and
iret
fidivl
push
fiadds
icebp
fcmovbe
pop
jge
outsl
js
adc
pop
mov
loop
cld
mov
adc
mov
test
in
cli
mov
or
mov
test
inc
pop
inc
cmpsl
hlt
test
lahf
int3
and
jbe
mov
insb
je
adc
xchg
in
dec
cmpsl
dec
daa
jb
inc
aam
jp
stos
testl
add
or
xchg
jnp
mov
push
jb
xchg
scas
test
stc
and
jbe
shl
repz
sahf
push
ret
testl
mov
sub
out
es
adc
cmc
sub
in
and
in
pusha
imul
jle
test
addr16
cmp
fistps
mov
das
in
adc
inc
sbb
sbb
jecxz
jmp
xor
jns
or
mov
xchg
sti
adc
stos
mov
test
pushf
inc
mov
push
dec
out
lods
mov
jmp
andl
fsubl
push
and
pop
arpl
jbe
in
dec
or
add
pop
mov
aaa
pop
ljmp
adc
nop
dec
mov
dec
push
mov
lahf
int3
and
fwait
cltd
or
cmp
adc
jb
or
add
fbld
or
jge
sub
popa
int3
pop
adc
negb
loopew
sbb
es
dec
cmpsl
scas
mov
mov
fwait
iret
into
adc
sti
xchg
cmp
lock
je
lods
mov
outsb
mov
imul
loop
cmp
bound
dec
clc
jmp
sub
jns
inc
in
push
ret
mov
out
jne
lea
jnp
xor
jge
push
inc
shll
movsl
mov
scas
movsb
push
dec
movaps
pop
inc
pop
jo
lret
dec
outsl
mov
or
dec
mov
dec
pop
lahf
repnz
lods
aas
lods
fidivs
adc
sbb
dec
push
jmp
je
cltd
and
mov
sti
inc
or
and
jg
test
jg
pop
scas
sub
ja
mov
sub
or
in
add
lods
and
orb
daa
or
adc
push
push
das
es
xor
int
push
inc
movsb
push
sahf
inc
dec
mov
mov
push
into
stc
mov
mov
xchg
add
enter
cmc
outsb
imul
jbe
xchg
stos
aaa
lock
mov
jl
xorl
inc
ja
cld
push
cltd
push
cmp
push
into
ds
sti
leave
xor
in
mov
adc
int
ja
es
lea
push
mov
and
aaa
lahf
mov
loopne
xor
scas
pop
pop
mov
adc
push
gs
fistpl
stc
mov
leave
aas
in
fidivrl
jb
lret
cmp
add
xchg
ret
scas
add
dec
lret
pop
push
iret
or
push
cmp
stos
mov
clc
outsl
and
xchg
xor
ds
sahf
insb
aaa
lret
cmc
clc
es
insb
mov
jae
arpl
stos
push
test
cwtl
jmp
fstpl
mov
lret
adc
push
movsb
mov
add
xor
fsubl
adc
clc
fs
pop
sahf
sbb
mov
mov
lods
dec
repnz
stos
sti
add
mov
mov
pusha
dec
jae
inc
in
addb
mov
push
cmp
mov
fisttps
push
lds
or
in
jae
inc
xchg
in
sbb
dec
test
push
mov
mov
nop
aad
outsb
int
jbe
mov
arpl
sbb
sub
inc
dec
popa
pusha
xor
lcall
sbb
mov
and
bound
jbe
and
dec
popf
rol
mov
mov
out
lods
adc
addb
fwait
mov
adc
xchg
lods
cmp
pop
xor
cmp
xchg
loop
and
fimuls
pop
inc
add
xor
filds
pop
adc
dec
and
xlat
enter
leave
sub
cmpsl
mov
pop
or
fwait
sahf
insb
push
call
xchg
insl
xor
adc
or
push
stos
push
repnz
pop
or
scas
or
test
push
jo
les
cmpsl
add
sarb
sub
cmp
in
popf
cmp
lret
int
mov
add
mov
mov
inc
bound
xorw
mov
lret
pop
movsb
iret
sbb
ljmp
rolb
inc
cld
and
dec
loope
add
adc
push
fucomip
repnz
icebp
imulb
data16
inc
adc
mov
xchg
cld
jmp
xor
dec
pop
jmp
shrb
jns
cld
repnz
jb
icebp
cmpsb
lods
fadd
sub
shrb
dec
aas
and
js
inc
add
loop
or
shll
or
out
rsm
arpl
lret
lds
dec
inc
mov
mov
pop
gs
jl
repz
outsb
int
mov
or
movsb
inc
add
mov
mov
inc
sti
dec
pop
pop
cmp
test
dec
outsb
ret
sti
scas
mov
dec
push
dec
leave
mov
repnz
xchg
aaa
lahf
xchg
xchg
cmpsb
push
sub
mov
sub
std
adc
or
push
xor
fsubr
in
lret
addr16
cmpsl
inc
imul
test
add
addb
adc
mov
xchg
mov
inc
sub
int3
push
xor
es
and
xchg
das
fcompl
xchg
xor
xor
adc
jne
push
dec
cmp
cmc
mov
adc
js
and
imul
popa
int
rolb
ret
cmpsl
jle
xchg
aas
xchg
mov
sbb
xchg
sub
sbb
push
jl
dec
sbb
sbb
sub
mov
ljmp
adc
xor
or
mov
loop
mov
jne
cld
sbb
and
jecxz
xor
aas
inc
xchg
or
ljmp
clc
bound
cmpsb
xchg
dec
divb
lahf
jne
inc
rcl
xor
fstpt
jo
jbe
cmpl
cmp
pop
and
std
push
dec
or
stc
aad
jle
repnz
ds
enter
hlt
sbb
mov
bound
add
sub
test
cmc
mov
dec
cli
std
inc
sahf
xor
jnp
out
sub
clc
xor
push
pushf
outsl
mov
or
mov
jno
inc
fisubrs
das
add
int3
pop
in
push
and
test
add
repz
data16
test
pop
xlat
cmpsb
popf
sbb
jb
int3
inc
sahf
jns
je
add
xlat
add
sti
repz
int
ss
sbb
push
sub
inc
ficoms
sub
mov
insb
xor
push
add
pop
and
xchg
call
int
jge
ret
into
jmp
repz
add
stos
out
xchg
adc
mov
sbb
jp
aaa
dec
jp
mov
xor
sbb
fisubrl
adc
repz
loop
pop
ds
xor
mul
mov
loopne
out
mov
movsb
adc
rcl
ja
adc
outsl
mov
sub
jecxz
flds
jae
bound
aam
leave
add
add
int
push
pop
pop
adc
roll
gs
inc
pop
test
loop
and
or
shll
jecxz
ss
aam
popf
jg
push
arpl
sbb
and
gs
xor
inc
inc
push
push
negb
sbb
in
push
jle
in
xchg
cmp
mov
add
test
ds
jbe
stos
pop
xchg
icebp
mov
enter
and
add
jmp
xlat
icebp
movsb
shll
js
movsb
cmpsl
lret
mov
or
sub
testl
je
add
push
test
icebp
lcall
xor
clc
out
out
mov
xchg
add
rclb
imul
fwait
sub
test
loop,pn
dec
mov
pop
out
or
popa
mov
adc
inc
pop
shll
mov
pop
sbb
test
movsb
in
add
cmp
lods
stos
pop
jecxz
pop
popa
xchg
xchg
and
xchg
jl
dec
dec
mov
das
xchg
imull
jns
xchg
push
imul
rclb
lods
mov
sti
jno
test
inc
add
inc
test
int
stos
and
stc
xor
pop
ret
aad
cmp
lods
and
cmp
div
and
in
sub
mov
push
lahf
hlt
insl
pop
sub
pop
and
aas
mov
js
or
pop
rclb
stos
mull
in
test
sbbl
nop
and
aaa
leave
xor
jl
test
icebp
or
fs
clc
ja
mov
mov
int
cmp
or
outsl
outsb
jg
insb
dec
pushf
xchg
mov
stos
bound
inc
cs
lds
cmp
inc
fidivl
cld
fmuls
pop
and
adc
dec
movsl
adc
mov
sbb
loopne
ret
or
daa
jle
sarb
cmp
lldt
cmpsl
mov
jmp
sbb
and
mov
push
and
lret
iret
out
aad
loope
insl
rcll
lds
push
xor
sbb
push
repnz
dec
scas
lret
imul
faddp
out
xchg
mov
adc
inc
cmp
and
into
mov
hlt
adc
xchg
loop
in
push
pop
ljmp
dec
fwait
test
mov
arpl
dec
mov
jmp
xchg
mov
decl
stos
out
jle
pop
push
scas
jno
imul
lds
mov
xor
cs
bound
movsl
popf
test
xchg
pop
call
in
add
inc
or
les
dec
je
stc
or
in
sub
stos
int3
test
dec
push
out
xor
mov
sahf
cmpsl
mov
sahf
push
mov
push
repz
movsl
pusha
adcb
mov
pop
push
push
fistpl
pop
mov
xchg
ret
xchg
cmp
ret
popa
pop
clc
lret
sub
aam
jp
sti
pop
jae
imul
adc
pusha
jnp
sbb
xor
in
mov
ret
inc
adc
std
ret
xchg
xor
lret
adcl
inc
and
cmpsl
leave
add
out
cld
dec
fwait
mov
cmp
mov
in
inc
test
adc
out
dec
and
and
test
dec
insb
pop
call
cmp
sbb
push
insb
mov
insb
ret
push
stc
xchg
pushf
mov
nop
dec
jle
dec
cltd
xor
dec
or
dec
or
adc
int3
push
dec
xor
dec
dec
or
lods
add
das
cltd
pop
sub
lret
adcl
in
jne
add
test
cmp
mov
gs
jge
pop
stos
pop
dec
in
mov
scas
pop
jp
or
out
mov
aam
cltd
and
insl
push
nop
and
scas
daa
jmp
xchg
bound
inc
inc
scas
out
mov
loop
mov
fisubrl
ds
imul
cmp
jbe
push
dec
and
pusha
jecxz
fwait
out
cmpsb
fsub
xchg
cmp
dec
mov
sbb
pop
jbe
nop
xchg
lods
pop
aas
fnstsw
mov
fstpl
push
stc
les
inc
inc
cmpsb
push
push
xor
xor
jl
test
adc
lock
icebp
add
xchg
mov
jae,pn
dec
lea
mov
cltd
in
pop
cs
outsl
call
mov
popa
xor
pop
mov
add
adc
rol
add
test
mov
mov
cmpsb
lahf
loopne
dec
inc
adc
jno
mov
cmp
out
inc
jge
nop
call
movsb
loop
idivl
je
jae
aas
cs
mov
mov
in
mov
sub
fs
push
fstpl
add
xlat
push
xchg
cmpsl
jecxz
or
push
push
fsub
outsl
ret
lock
sub
cmp
es
mov
mov
ja
cmp
loop
pop
mov
les
push
dec
pop
sbb
outsb
inc
jmp
mov
movsl
in
scas
add
and
imul
xchg
roll
test
int
aas
ret
inc
pcmpeqb
andl
or
cs
or
flds
pusha
add
fmull
fldcw
fnstenv
or
cmp
shl
add
mov
jnp
lods
add
sub
sub
mov
cmp
daa
lock
mov
std
push
pop
idivb
add
paddsb
mov
aas
jo
push
shlb
lds
outsb
cwtl
pop
je
push
or
sbb
fadds
and
fadds
xlat
add
sti
outsb
sti
xchg
pop
xor
and
outsl
cld
sub
pop
dec
hlt
shrb
leavew
dec
add
inc
iret
cwtl
pop
xlat
nop
xchg
push
test
and
lock
adc
cld
icebp
rclb
mov
jno
mov
js
push
mov
xchg
xchg
jl
xorb
roll
mov
push
xor
insl
jo
mov
adc
mov
pusha
icebp
inc
cld
jo
jmp
nop
mov
adc
mov
mov
in
mov
cmp
fdivs
push
call
lret
mov
std
pusha
jecxz
xchg
and
jl
insl
inc
pop
mov
in
out
xor
sbb
or
cmp
push
jmp
push
jmp
adc
bound
dec
es
movsb
pusha
or
insl
cwtl
decb
in
shll
inc
dec
push
mov
test
mov
pop
adc
sbb
rcr
or
mov
dec
iret
jne
xchg
sarl
xchg
dec
test
pop
testb
mov
cmp
add
xor
in
pushf
loope
rorl
dec
lret
insl
and
add
fldenv
and
nop
lods
sub
or
sbb
jecxz
sti
in
push
add
push
or
popa
stc
arpl
iret
pusha
loop
add
xchg
hlt
mov
das
pop
sbb
add
sub
xor
xchg
mov
pop
cltd
jle
cwtl
push
aaa
mov
pop
cld
in
jmp
xchg
pop
and
cli
cmpsb
push
les
pushf
jae
xchg
mov
dec
hlt
lods
int
or
in
sahf
xor
sbb
popf
repz
in
mov
gs
adc
das
cli
repz
aaa
std
jnp,pt
sub
fwait
mov
dec
icebp
sbb
arpl
add
push
stos
movsl
or
int3
repnz
fnstsw
mov
insb
xchg
push
xor
mov
jns
movb
lcall
pop
sbb
jnp
sub
and
iret
rolb
mov
cltd
dec
jae
iret
dec
jne
fsubrl
or
fcompl
sahf
fwait
adcb
sarb
add
in
push
pop
test
dec
insl
out
lret
call
mov
roll
mov
ret
dec
jg
xchg
jmp
call
sub
add
jae
out
xor
mov
or
iret
add
lahf
add
dec
bound
aad
orb
fbstp
lds
cmp
dec
test
ss
hlt
jae
jno
inc
xchg
dec
in
lods
test
push
sti
das
out
add
inc
inc
imul
xor
leave
cmp
push
add
add
sbb
xchg
nop
pop
pop
cmp
sub
mov
or
inc
xchg
fcmovne
mov
aad
dec
mov
test
sbb
aaa
es
dec
fnstenv
cmp
iret
jmp
bound
lock
aam
subl
test
mov
and
push
aas
shrb
ss
sbb
in
push
jl
adc
lcall
mov
pop
xchg
inc
push
ret
loop
adc
jmp
rol
dec
lret
adc
mov
stc
mov
dec
xor
notl
test
fiaddl
adc
xor
out
jle
mov
stos
push
jle
sti
xchg
or
xor
fmull
push
or
xor
and
sbb
fidivs
addr16
shl
sub
insb
jge
sbb
mov
push
pmuludq
jns
mov
sbb
insb
sbb
lahf
imul
jecxz
pop
mov
xor
and
out
dec
fwait
imull
jno,pn
movsb
or
mov
mov
cltd
mov
push
mov
jo
jnp
xchg
fdivrs
pop
stos
jg
push
jmp
jns
pop
fnstenv
jne
mov
inc
mov
jp
mov
lahf
mov
imul
dec
pop
into
or
push
jge
inc
out
mov
aaa
stos
and
jl
push
sbb
add
xor
inc
or
jecxz
insl
mov
cmp
jb
cmp
and
mov
clc
pop
test
sbb
jmp
cs
dec
shrb
lahf
jne
mov
loopne
test
inc
insb
outsl
lcall
adc
push
jbe
dec
pop
call
fldl
cmp
push
loope
lret
lcall
add
into
das
addr16
adc
xor
push
cmpsb
loope
lock
jp
push
das
loope
mov
adc
and
pop
jmp
std
repnz
dec
or
and
movsb
jbe
mov
fldpi
sti
adc
shr
sub
mov
cmp
sbb
mov
jmp
xor
outsb
lods
xor
cmp
mov
mov
xchg
sti
add
dec
xchg
push
xchg
mov
das
repz
call
pushf
clc
or
enter
jo
fadds
sbb
mov
cli
pop
jp
push
cmpsl
loop
mov
jbe
lea
popf
cltd
cmp
pusha
mov
push
and
sti
pop
mov
ljmp
aaa
xchg
jbe
int3
lret
je
push
jecxz
mov
push
jno
xor
cld
in
xchg
cmp
stos
into
sub
push
lds
movsl
ss
insl
out
sub
or
popa
mov
adcb
lock
jl
ret
mov
pop
add
aas
adc
imul
es
mov
loop
fistl
xchg
push
pusha
iret
dec
xor
dec
lea
ret
lock
and
lock
lods
sub
adc
pop
cltd
pop
pushf
xchg
or
nop
mov
std
pop
dec
xor
dec
inc
jmp
lock
imul
and
cli
fcomps
sbb
out
scas
xor
add
and
movsl
js
popa
mov
clc
je
pop
xchg
xchg
xlat
cwtl
xchg
push
ds
mov
sbb
fcoml
cmp
mov
test
int3
jnp
pop
in
imulb
dec
mov
cli
mov
push
xchg
popa
mov
inc
adcl
out
ret
xor
popa
les
add
outsl
sub
andl
sub
fs
xor
xchg
mov
ret
xor
adc
nop
cmc
inc
inc
push
test
pop
aas
cmp
sub
add
lods
jge
lret
stos
push
or
mov
out
xor
andb
stos
push
or
adc
inc
lds
lahf
cltd
add
addr16
lahf
or
rol
filds
pop
mov
imull
xchg
xor
in
fidivrl
cwtl
xor
push
cmc
mov
xor
sub
orb
loope
outsb
sbb
stos
or
popf
sahf
mov
mov
jp
push
in
negb
cmp
jmp
ret
and
aam
stc
das
mov
xchg
mov
sub
cmpsl
and
or
adc
dec
flds
jmp
in
xor
sub
sub
jo
rcr
fs
adc
cmpsb
outsb
dec
inc
pushf
push
sar
int3
outsl
push
add
lea
push
sub
into
jp
dec
fbld
mov
or
push
mov
int3
push
fiaddl
test
roll
int
add
pop
rclb
nop
cmp
cmpsl
jmp
lret
or
push
ljmp
or
xor
enter
mov
pop
sbb
and
iret
mov
popf
mov
inc
pop
push
mov
inc
push
leave
aad
scas
mov
sahf
push
popa
andl
cld
or
movsl
or
pop
cmp
pushl
pushf
and
mov
cs
cmpsb
mov
cmp
sub
pop
iret
xlat
jecxz
and
jge
fildl
dec
inc
out
out
bound
leave
or
mov
iret
push
mov
shrb
push
mov
cmp
popf
cmpsl
stos
and
cwtl
cltd
pusha
jno
enter
xor
mov
ds
xchg
push
test
sub
call
mov
aas
xor
js
inc
mov
arpl
pop
sub
cmp
mov
push
sub
stos
jo
shll
jmp
inc
dec
adc
sti
sarl
adc
ja
out
jno
sbb
movsl
and
sbb
cmp
scas
sub
xchg
mov
jge
outsl
cmp
pop
shr
mov
add
push
movsb
imul
cmp
stc
xchg
repz
rclb
pop
out
in
arpl
bound
add
push
shlb
push
mov
sub
into
jp
adc
xor
sub
adc
movsb
imul
dec
stos
scas
add
rorb
and
fisubrl
mov
push
sarb
iret
jb
mov
outsl
cmp
in
push
jb
fnstsw
movsb
inc
xor
out
inc
into
out
dec
jg
sbb
fisubl
cmp
and
stos
sub
sbb
pusha
fs
enter
int3
jmp
xchg
xchg
xchg
cmc
pop
jl
mov
jl
orb
loop
push
fwait
pop
das
push
jb
pop
ret
and
sub
or
dec
mov
rcl
notl
std
xor
cli
jae
or
xor
ss
or
xor
popf
mov
push
jnp
fstpl
insl
fmuls
cmp
jmp
adc
adc
sbb
jne
or
sub
and
cmpsl
cmc
xor
divl
aad
dec
idivl
jmp
out
pop
jle
out
jnp
cmp
xchg
out
dec
xor
push
sbb
push
fstpl
addl
cmp
lods
les
test
lea
je
cmp
xchg
ds
test
rol
sbb
push
mov
pop
jg
pop
gs
and
mov
inc
mov
fistpl
adc
push
fistpl
xchg
in
xor
pop
idivl
adc
fldt
pop
dec
sub
fs
mov
sub
bound
decb
cmp
mov
push
movsb
pop
sub
mov
stos
ss
ret
add
adc
lock
aad
push
push
sub
or
xchg
sbb
sbb
scas
imull
lret
jne
or
pop
out
ficomps
add
inc
in
sub
jmp
shrb
mov
add
xor
push
lret
outsl
sbb
ljmp
clc
cwtl
sub
mov
mov
or
cli
daa
add
or
xor
mov
lcall
call
push
mov
push
in
lds
insl
daa
iret
das
test
ljmp
and
pop
stos
and
fisubs
mov
into
out
xchg
loopne
xor
xchg
aas
std
dec
lea
sub
popa
sub
ljmp
mov
cs
addr16
jl
test
push
sbb
cmp
sub
pop
xor
adc
or
leave
and
adc
in
in
scas
mov
clc
add
je
sbbb
leave
out
out
das
stc
jecxz
or
push
rcl
int3
jae
mov
xor
lahf
mov
mov
lret
pop
cmpsl
idivb
sti
ljmp
pusha
hlt
sbb
mov
cmc
repnz
je
int3
dec
dec
mov
xor
fnstsw
outsl
push
and
daa
and
mov
sub
xchg
ds
jbe
iret
in
nop
push
and
push
pop
enter
fcomps
inc
push
sbb
and
jnp
bound
movsl
cli
cmp
mov
lock
cs
imul
add
insb
push
xlat
ret
and
pop
pop
test
test
outsl
pop
ds
loope
jnp
bound
mov
push
cmp
repz
and
mov
call
cmp
dec
cltd
jnp
or
scas
mov
std
cli
xchg
adc
pop
push
inc
loopne
outsb
outsb
adc
cmp
arpl
cwtl
mov
lock
insl
or
cmp
push
mov
pop
insl
js
in
sbb
jbe
pop
testb
ss
push
test
out
aam
or
fwait
mov
cld
loope
xor
mov
es
push
je
mov
dec
push
sub
jg
sbb
repz
ja
mov
loop
mov
mov
roll
ret
lock
ja
jno
jge
popa
xchg
add
cs
inc
push
fs
ficompl
and
jp
aad
inc
fiadds
int3
pop
xor
cs
pop
insl
repnz
push
leave
movsl
xchg
jl
aas
push
jle
inc
dec
ficompl
mov
mov
outsl
fcoml
sti
sbb
pop
xchg
mov
push
fldl
movsl
adc
jnp
pop
cmp
mov
aas
xchg
dec
jp
divb
mov
pop
push
jb
xchg
loop
loop
movsb
sbbb
and
pop
mov
inc
shlb
pop
out
cli
leave
xchg
push
sub
nop
stos
inc
pop
fcoms
xchg
lea
flds
popf
and
xchg
and
daa
aaa
and
push
cmc
push
xor
repz
adc
xor
push
sbb
inc
mov
cld
cmp
cmp
xor
adc
cltd
sahf
dec
jge
test
mov
cwtl
pop
xchg
add
das
fmuls
sbb
les
jb
add
lret
aas
test
pop
jno
push
idivl
push
xchg
movsl
sti
adc
xor
cltd
cmc
rolb
sbb
or
add
jle
jp
dec
push
dec
out
je
lods
jo
sbb
jb
sarb
fidivs
pushl
int
xorps
pop
mov
push
mov
btc
fsubl
stos
xlat
inc
mov
mov
mov
cld
hlt
enter
outsb
into
jne
inc
dec
hlt
push
loope
in
int3
imul
cwtl
lahf
stos
cwtl
shl
sub
jns
xor
push
inc
shlb
divb
fistpl
or
push
mov
jne
ds
jnp
mov
dec
cmpsb
xchg
xor
push
ss
sar
in
out
mov
dec
push
mov
jo
and
scas
inc
mov
jecxz
stos
push
scas
mov
mov
mov
les
dec
xor
push
mov
jg
and
ja
mov
pop
adc
inc
or
mov
mov
mov
push
xor
adc
add
sbb
pop
aas
into
orl
loope
mov
imul
inc
xchg
enter
mov
mov
adc
les
mov
in
pop
mov
adc
sub
stc
adc
in
ljmp
xchg
jmp
testl
bswap
lea
repnz
in
ss
lahf
mov
popf
loope
inc
and
test
jo
andl
cmpsl
scas
lock
xchg
orl
xlat
stos
idivl
cld
xchg
hlt
xchg
sub
mov
or
into
sbb
push
xchg
cltd
loopne
aas
or
mov
jns
mov
lahf
push
movsb
add
ja
ret
shll
insl
pop
jecxz
pop
sub
in
out
addr16
lcall
lea
addr16
stos
xchg
mov
cmp
mov
fcomip
cmp
popa
subl
or
fldt
xor
mov
jp
push
add
mov
adc
pop
data16
lods
xor
sub
loope
pop
push
xchg
mov
sbb
sbb
mov
mov
repnz
rcll
fs
std
lret
jle
or
pusha
lret
lcall
nopl
jae
push
push
rcll
xchg
enter
dec
clc
push
cmp
and
test
mov
and
pushf
inc
cmpsb
clc
inc
in
dec
clc
and
iret
hlt
lods
xor
ud0
push
lods
and
cmpsb
sub
test
mov
movsl
iret
and
add
mov
movsl
sbb
dec
pop
shrb
mov
mov
pop
pop
int
in
sbb
mov
push
leave
clc
stc
adc
js
cmp
cmpsl
sbbl
mov
mov
pop
lock
int
dec
andb
or
out
cmpsb
mov
push
adc
jg
in
stos
loope
ret
test
lcall
popf
xchg
add
popf
add
dec
out
or
xchg
jmp
aad
adc
push
mov
dec
jl
pop
inc
loopne
divb
xchg
andb
sbb
cmp
xorb
mov
jge
xchg
adc
mov
xor
jecxz
aad
mov
inc
insb
jne
test
call
dec
adc
int
and
jnp
jp
roll
add
jmp
mov
adc
sub
add
and
cmp
sub
cs
mov
jnp
sbbl
push
daa
add
call
mov
mov
movsb
push
jb
rcr
xor
dec
sub
cmpsl
sub
into
mov
and
stc
aad
xchg
icebp
adc
dec
sbb
inc
mov
sbb
mov
and
push
cmp
popf
xor
popa
push
mov
dec
mov
pop
mov
hlt
data16
cmpsl
mov
sbb
icebp
hlt
shl
mov
push
lcall
lret
xor
hlt
mov
push
aas
mov
pop
ret
pop
add
mov
stos
or
repnz
mov
inc
mov
daa
js
mov
repnz
int3
sbb
adc
sbb
data16
mov
xor
mov
js
cli
push
dec
out
sbb
mov
lcall
xor
mov
cwtl
out
fstps
jle
imul
popa
popa
sub
jns
push
dec
scas
adc
pop
push
scas
test
or
dec
xchg
pop
dec
adc
push
add
lods
push
push
push
or
dec
push
repz
stc
jbe
pop
mov
test
repz
pop
mov
out
pop
sbb
or
xor
push
cs
jbe
xchg
lds
mov
lods
mov
les
aam
pusha
push
lods
mov
out
loopne
loop
enter
push
xchg
ret
lea
das
in
cmp
cltd
loope
xlat
cmc
pop
js
push
jb
xchg
cwtl
je
hlt
arpl
adc
and
add
pop
inc
lcall
dec
jp
push
movsb
xchg
jp
test
out
push
lret
ds
and
lret
add
icebp
inc
daa
pop
push
add
stos
in
jmp
dec
movsb
mov
pop
loop
and
xor
cwtl
movsl
lds
pop
push
jmp
inc
jecxz
sbb
pop
xor
fucomi
xorb
aad
enter
lahf
arpl
sbb
adc
idivb
dec
stos
jb
push
cs
inc
push
aaa
pmulhw
outsb
jp
repnz
mov
xchg
outsl
dec
mov
dec
movsl
stos
sub
arpl
or
cli
dec
es
mov
cmp
outsl
std
cmp
call
adc
sub
movb
stc
sub
xchg
and
sbb
cs
dec
sub
repnz
popa
or
mov
jmp
into
mov
je
fldenv
inc
push
sub
lea
xor
adc
mov
or
ja
bound
iret
popfw
jl
pop
test
jge
pop
mov
fildl
imul
and
lret
push
sahf
dec
jmp
jno
cmp
cmc
fistpll
dec
mov
add
out
out
pop
ret
dec
adc
pop
or
hlt
ds
mov
mov
xor
in
cltd
add
lret
push
imul
mov
jno
jmp
lea
xor
scas
sbb
inc
add
int
xor
mov
jbe
cmpsb
dec
nop
xchg
mov
jmp
xchg
cmp
mov
pop
mov
outsl
stc
jnp
stos
repz
dec
aas
loopne
cmp
rolb
out
sbbl
xchg
sahf
frstor
xchg
pushf
sbb
xor
push
addl
cmp
pop
in
scas
xor
in
addb
ret
jecxz
dec
or
test
movsl
cmp
adc
imul
jmp
mov
imul
shl
adc
out
lcall
arpl
sti
jne
xchg
repnz
or
dec
ret
add
negb
fcomps
aad
sbb
xchg
aas
das
cmp
xchg
and
mov
jns
and
xorl
sub
mov
mov
xchg
insl
je
dec
adcl
movb
lock
sbb
fsubrs
fimull
test
sbb
addr16
hlt
push
in
divb
push
and
nop
movsl
inc
jns
dec
cld
addr16
sbb
movsb
int3
ja
mov
popa
and
and
add
or
cmc
faddl
jg
xchg
and
out
push
mov
setle
xchg
or
dec
cmp
adc
jne
xorb
mov
sub
mov
daa
xor
in
inc
jne
mov
xor
mov
jg
push
lods
sbb
jmp
cmp
xor
jecxz
or
xor
enter
lods
int
shll
loope
dec
and
adc
or
lahf
inc
dec
push
jl
movsl
aad
xor
jo
out
jo
movsl
lock
cmpsb
pop
shl
rcrb
mov
daa
sbb
push
pop
div
push
pop
fistps
popf
insb
adc
adc
stos
enter
outsl
cmp
xchg
je
cmp
inc
inc
fisttps
leave
cmp
mov
scas
cmp
iret
sbb
xor
inc
xchg
jnp
shl
loopne
ss
sbbb
rcl
in
rcll
mov
adc
cli
sbb
sub
cld
test
sub
out
insb
sub
xchg
dec
test
fcoml
lret
jmp
lds
pop
mov
mov
ss
and
mov
fildl
and
cmp
adc
push
jns
js
sub
xchg
test
jmp
daa
adc
jl
stc
sti
lock
out
jl
inc
outsl
cmpb
sbb
sub
push
leave
ja
movl
cmc
fsubl
and
stos
cmp
add
cmp
fmuls
jmp
push
lret
jle
and
adc
add
push
or
add
je
pop
jae
jg
imul
in
leave
pop
jl
loop
rcl
iret
adcl
popf
es
stos
lea
hlt
push
push
push
movsl
and
iret
xorb
int
mov
mov
fildl
icebp
push
repnz
add
lcall
push
cmpsl
pop
push
add
dec
or
cmp
in
lea
lods
sarl
add
pop
fistpll
scas
in
scas
xchg
dec
int3
xor
xor
xchg
jp
cmp
test
mov
mov
idivb
repnz
jns
adc
pop
pop
test
test
or
pop
pop
push
loope
aas
fldcw
push
mov
mov
adc
scas
mov
das
aaa
out
cli
fwait
or
sbbb
mov
pmulhw
and
stc
or
sub
mov
movsw
pusha
loop
xchg
jge
clc
aas
cld
adc
mov
pushf
cmpsl
pop
jp
fidivs
push
rcrb
subl
popf
dec
cltd
aad
test
cli
add
mov
adc
aaa
testl
lods
sti
mov
test
call
inc
aam
sahf
push
aam
shll
inc
xchg
fists
mov
lahf
nop
sbb
add
stos
fsubrl
insb
sbb
dec
loopne
cmp
mov
test
and
and
sub
xchg
test
ror
lock
aas
push
loop
mov
imul
loopne
pop
jg
aaa
jb
and
in
cmc
fidivrl
jbe
mov
adc
xor
push
aam
adc
sub
sub
mov
push
pop
xchg
into
sbb
push
pop
jb
lods
popf
cmpsl
jecxz
es
cmp
scas
mov
add
stos
push
inc
int
dec
aad
pop
or
and
xor
cmpsl
ja
out
inc
rclb
movl
movsl
cltd
cmpsb
dec
scas
add
enter
xor
jmp
pop
orl
adc
pop
arpl
sub
adc
xchg
jmp
pop
divl
das
int
dec
outsb
out
jns
pop
sahf
test
imull
mov
pusha
mov
fwait
dec
test
sbb
sub
adc
xchg
lods
int
addr16
in
lea
and
out
jb
xchg
es
xlat
fstl
stos
xor
mov
fisubrl
xchg
add
cli
sar
stc
push
xchg
push
sbb
lods
mov
iret
in
popf
inc
and
dec
mov
pushaw
scas
mov
bound
enter
push
repz
adc
xor
outsl
add
sub
dec
cmp
dec
shlb
inc
xchg
mov
mov
test
pop
jle
add
and
lret
js
dec
cwtl
aas
push
jg
add
add
cmova
out
inc
pop
add
dec
lods
and
movl
jae
fiadds
push
xchg
lret
pop
out
subl
mov
xorl
orb
mov
ljmp
out
repnz
dec
adc
pop
mov
xlat
cmp
inc
repnz
fadd
fs
adc
dec
jg
es
push
push
aaa
pop
push
adc
push
bound
xchg
lret
jge
xor
scas
icebp
rorl
push
sbb
and
xor
or
subw
popl
aam
mov
je
adc
js
mov
aas
lcall
sub
out
divl
mov
jge
mov
adc
int
or
cmp
aaa
mov
or
aas
aam
lock
push
dec
xchg
je
dec
std
sbb
inc
adc
in
das
repz
popf
push
dec
test
mov
pop
pushf
insl
bound
push
incb
jne
jb
mov
ja
jbe
xor
movsb
jle
sbb
mov
inc
data16
into
bound
fdivl
cmp
jle
cltd
addr16
push
adc
sub
push
adc
test
es
lock
lcall
rorb
popf
dec
lock
imul
mov
and
dec
xor
popa
aam
mov
inc
adc
divl
inc
gs
xor
add
cmpsl
push
jg
mov
mov
cmp
inc
mov
push
inc
jbe
movsb
and
aad
adc
pop
movsl
push
mov
cmpsb
loop
or
adc
stos
adc
mov
icebp
rol
dec
pop
jbe
jmp
mov
cmp
or
pop
gs
push
pop
cmp
xor
test
mov
sub
movsb
jge
jge
jno
mov
mov
addr16
popa
out
js
fadds
mov
xchg
aas
pop
lcall
in
mov
cmpsb
pusha
inc
adc
mov
cltd
pop
in
and
stc
and
mov
mov
incl
xchg
pop
fwait
jge
cwtl
mov
xor
test
xor
ret
loop
and
xor
mov
sahf
leave
mov
add
inc
jb
pop
int3
flds
pop
mov
stc
lahf
add
fs
dec
add
jmp
mul
cmpsl
jg
sbb
aaa
mov
pop
ret
sub
inc
sub
xchg
xchg
inc
mov
cmp
sub
jp
fisubrl
test
lret
repz
mov
jl
in
cli
mov
dec
cs
jne
sub
notl
shrb
sub
sub
shlb
dec
lcall
mov
dec
popf
dec
in
into
xor
ljmp
int
sub
popa
cmc
cmp
lret
sbb
sbb
leave
movsb
jae
cli
push
push
icebp
dec
mov
movsl
add
jle
dec
adc
std
and
push
jp
mov
fcom
or
lcall
shlb
dec
sarb
jbe
lret
cmp
push
arpl
sub
sub
fs
popf
imul
lods
pop
push
xor
push
add
loopne
xlat
xchg
xorl
push
out
mov
bound
mov
data16
mov
ljmp
mov
out
mov
cmp
xchg
fcmove
xchg
movl
jge
int
sar
ja
iret
or
cmp
mov
call
xchg
dec
test
cmc
adc
or
push
adc
out
sti
jno
sarb
jle
adc
inc
xchg
mov
mov
jge
pusha
dec
orl
aas
dec
mov
xchg
add
cmp
das
repnz
add
or
xor
rcr
cld
sarb
loop,pn
fists
sub
cmpsb
pop
mov
inc
cmpb
jo
or
xchg
pop
nop
mov
adcl
xchg
mov
ret
xor
and
adc
inc
push
inc
mov
jnp
or
out
dec
lea
push
push
mov
jp
push
dec
out
cwtl
out
aam
push
daa
pop
je
jnp
xchg
cli
out
xor
mov
pop
aad
dec
cmp
fwait
cmp
push
fdiv
rol
mov
stos
push
mov
inc
addr16
lahf
adcl
fwait
cmp
aad
adc
aad
lods
les
adc
add
jp
stos
pop
repnz
sub
cwtl
dec
rcl
in
loope
mov
inc
sti
add
sub
cmp
sbbb
cltd
repz
loope
lcall
lods
ja
cmp
sub
jmp
mov
mov
repz
scas
out
rcll
stos
fsubl
loop
dec
sub
cmp
lods
insl
fmull
loopne
mov
insb
inc
push
icebp
hlt
xor
popl
pushf
rcrl
push
lahf
xchg
xor
int3
xor
sub
mov
push
cmp
sti
or
mov
into
xchg
ror
sub
gs
lods
cmpsl
repnz
cld
cmp
or
outsb
xchg
pop
adc
jmp
ja
fdivl
lret
leave
bound
cmp
mov
stos
push
push
mov
test
and
jbe
and
jb
pop
mov
inc
dec
cmp
xor
xchg
jl
or
xor
fwait
adc
sbb
add
sahf
jge
sti
mull
jle
push
out
jne
jno
mov
xchg
test
subb
sbbl
xchg
fwait
sub
push
test
sbb
icebp
arpl
pop
lret
mov
lcall
hlt
repnz
int3
dec
xor
repz
sbb
gs
shll
js
mov
xchg
mov
add
in
sub
stc
dec
shr
xchg
mov
pop
dec
add
cmpsb
out
jo
push
jle
mov
fst
adc
jno
cltd
lret
mov
and
sub
xor
sub
mov
fstps
sahf
inc
cwtl
cmp
pop
xor
imul
dec
testb
in
lods
shll
rcll
ja
ret
fmull
cmc
popa
out
mov
cmp
mov
shlb
jl
add
mov
out
shlb
shrb
inc
inc
jns
cmp
shll
ret
inc
fisttpll
cmp
les
mov
xchg
xor
cmpsb
subl
fisttps
push
incl
jbe
mov
add
xchg
pop
lods
or
mov
ret
xchg
jl
jae
cld
fcompl
mov
ret
push
cmp
rcrb
pop
pop
cwtl
xchg
push
lret
ljmp
mov
arpl
mov
inc
pop
mull
stc
shlb
rorb
es
jg
xor
cltd
fisttpl
fistpll
push
xor
ret
push
mov
aad
jp
inc
push
addb
adc
mov
ds
mov
faddl
test
fsubrl
xchg
add
mov
and
fwait
or
fs
push
cmpsb
jbe
xchg
cmc
adc
icebp
cmp
sub
jno
sub
lret
out
je
call
int
repz
mov
sbb
add
pop
add
jmp
and
and
cmpsl
in
flds
je
pop
mov
push
push
add
nop
cmpsl
jo
pop
ftst
cmp
mov
jg
das
ret
test
sbb
inc
es
adc
movsb
gs
out
pop
mul
filds
dec
mov
adc
mov
dec
imul
or
mov
divps
xor
out
adc
sti
add
mov
in
das
dec
es
jbe
test
stos
lret
jae
fbld
out
pushf
and
and
and
scas
mov
xorl
jmp
jmp
or
test
mov
rcll
push
inc
sbb
inc
rcrl
outsl
push
jge
xchg
sub
dec
je
push
inc
popf
sbbl
cmc
rol
adc
movsb
pop
adc
xlat
fisttps
adc
dec
mov
add
hlt
scas
cmp
cltd
shll
js
cmp
sub
dec
ret
jge
and
xchg
std
cmp
mov
in
jns
ljmp
and
pop
cmpsb
sub
paddd
repnz
sti
mov
pop
adc
fwait
shrl
sbb
and
jl
dec
cmpsl
push
pop
aad
xor
jg
bound
mov
test
cli
mov
push
add
pop
xchg
jge
test
cs
jnp
imul
scas
mov
add
lea
outsl
stos
les
sahf
inc
adc
jo
and
xor
mulb
mov
xor
jl
push
dec
add
bound
dec
sub
xor
jbe
out
les
pop
and
cmpsl
lods
lds
pusha
in
notb
xorb
cmp
test
enter
mov
xchg
mov
loope
fldt
adc
jae
mov
and
push
push
or
mov
aaa
xor
mov
rol
hlt
or
push
jmp
mov
xlat
cmp
notl
xor
cmp
inc
imul
scas
popa
sbb
sub
lods
mov
nop
rol
xchg
lods
adc
pop
iret
outsl
je
adc
cltd
idivl
int
mov
pop
jb
cmp
out
inc
jnp
xor
sbb
aas
xchg
loop
out
push
mov
dec
inc
subb
pop
or
cmp
jmp
dec
mov
adc
loop
jmp
sbb
mov
test
cmp
mov
xor
dec
enter
int
test
adcb
xchg
adc
mov
inc
mov
and
xor
sti
sub
pop
xchg
sub
jae,pt
adc
ficompl
outsl
jge
push
xchg
decb
pop
push
xchg
cmp
call
or
pop
cmc
xor
sbbb
subl
cmp
std
sbb
sub
dec
xor
cmp
jnp
inc
stc
xorb
popf
ja
and
ret
shl
cmp
rcl
test
pop
out
aam
push
js
or
and
pop
pop
fwait
and
popa
cmp
cmp
aad
pop
pop
int
and
xor
in
xchg
stos
sti
and
jp
dec
scas
mov
into
dec
pop
sub
add
lahf
mov
sub
dec
jmp
dec
icebp
adc
jmp
data16
pusha
popf
nopl
out
sub
out
les
mov
xchg
adc
adc
ret
movsb
xchg
pushf
lods
inc
rclb
xor
cmp
fisubs
or
insl
arpl
inc
sbb
sbb
xor
adc
xorl
pop
in
cmp
icebp
inc
ret
adcl
dec
sbb
movsl
or
mov
mov
xchg
fnsave
xchg
push
jnp
mov
outsb
pop
and
mov
cld
aad
out
jg
aas
push
repnz
mov
mov
dec
mov
je
cmp
test
fwait
int3
fadds
imul
xor
and
lret
nop
bound
cs
mov
jge
pop
cmp
add
in
aas
push
aam
cmpsl
je
dec
inc
int3
stos
jle
les
sbb
ss
int3
into
daa
scas
xlat
enter
or
xlat
sahf
mov
rorl
sbb
xchg
test
scas
insl
mul
cltd
loopne
mov
mov
int
in
push
pop
xor
outsl
jmp
mov
push
jg
inc
cmp
rolb
sti
jb
push
ss
cmpsl
out
das
push
sbb
aad
lock
mov
les
cmp
scas
lret
and
mov
ja
js
call
cmp
sti
dec
les
mov
movsbl
sbb
xchg
cmp
leave
int3
and
pop
sti
pop
xchg
jbe
enter
sub
mov
jl
outsl
daa
ss
repz
lcall
in
pusha
loope
sahf
pop
cld
std
mov
push
into
ss
and
test
pop
mov
xchg
mov
js
push
bound
add
arpl
insb
das
xor
jns
pop
pop
mov
mov
cli
push
and
push
inc
insl
pop
mov
adc
mov
std
add
shrl
jge
add
scas
push
jo
cmp
add
xchg
adc
cmpsl
into
mov
int3
pop
addr16
cmc
loopne
mov
and
add
pop
jnp
and
rcl
fcomp
adc
out
repnz
imul
xchg
insb
push
into
cmp
cld
inc
or
mov
mov
sbb
cld
or
enter
mov
dec
in
push
arpl
pop
sbb
out
aas
loope
inc
sbb
aaa
rcrl
data16
incl
stos
dec
lcall
pushf
dec
addr16
cltd
test
cld
sub
lods
js
pop
cmpsb
inc
pop
mov
cmp
lds
inc
xchg
fisubrs
mov
popa
cmp
ja
stos
jne
push
mov
pusha
lret
inc
popf
adc
enter
jmp
pop
insl
shrb
cmc
dec
cmpsl
hlt
fdivs
inc
enter
inc
sub
sub
aas
xchg
pop
jl
in
jmp
jns
pop
dec
stos
push
test
add
lret
xchg
fisttpll
mull
push
inc
mov
dec
mov
jno
lahf
imul
fidivl
rol
push
mov
ror
jb
xchg
mov
ss
adc
xchg
pushf
push
mov
out
sbb
mov
mov
adc
jne
inc
movsb
ja
cmc
xor
sbb
ficoml
arpl
in
sub
repz
lods
jl
in
dec
fidivs
push
daa
js
jmp
lods
shl
test
out
push
xchg
enter
iret
xor
rorl
xchg
ret
cmp
scas
jmp
and
mov
mov
pop
ret
clc
fwait
adc
decb
jne
and
push
mov
push
cld
jbe
imul
repz
and
push
mov
rcrb
mov
lcall
mov
movsb
aaa
loope
lret
sub
sarl
or
std
pop
aad
lods
xchg
cmpsl
mov
xor
pop
enter
cli
es
jae
push
adc
lds
xor
inc
mov
mov
outsl
mov
sahf
sti
push
cmp
inc
lret
xchg
flds
arpl
js
test
fiadds
mov
dec
popf
jg
inc
dec
adc
mov
pop
bound
lcall
and
repnz
mov
negb
push
in
mov
repnz
pop
add
dec
add
mov
xor
mov
sti
sahf
and
and
mov
pop
sbb
cmp
sub
ret
push
adc
sub
ss
dec
mov
sub
nopl
test
repnz
xchg
jo
inc
ret
movsb
cmpsl
mov
loop
mov
mov
std
push
jge
popa
hlt
rcl
iret
icebp
mov
mov
sbb
jl
stc
mov
test
fildl
xchg
in
cmp
fisttps
push
mov
jl
ljmp
daa
insl
push
adc
data16
outsb
sysexit
push
dec
gs
mov
xchg
mov
inc
test
leave
decl
jb
dec
push
mov
cmp
cmc
mov
loope
pop
loope
mov
sub
cli
clc
cmc
mov
jp
bound
bound
push
aaa
fs
loopne
lods
loopne
mov
and
mov
push
or
mov
jae
jne
add
shlb
add
sbb
push
dec
sbb
std
adc
popa
ret
push
iret
or
jnp
dec
call
xchg
jns
testb
das
insl
std
sbb
and
movsl
sti
dec
jl
icebp
stc
or
xor
mov
add
fisubrl
fwait
mov
cmp
pop
adc
mov
ss
mov
mov
pop
mov
sub
bt
loop
cmpsl
push
das
icebp
xchg
xchg
adc
sub
mov
shlb
fsubs
out
in
cli
mov
outsb
iret
adc
ja
lods
and
mov
xor
pop
push
lods
xor
push
dec
add
mov
jp
sub
in
or
ds
jle
sbb
mov
push
jnp
xchg
std
inc
add
jo
repz
insb
aas
mov
sarb
add
or
fadd
pop
cmp
cmp
ljmp
push
cld
clc
inc
fwait
leave
push
push
ss
mov
sbb
mov
fptan
repnz
xchg
imul
mov
adc
daa
pop
jle
hlt
cmp
jbe
xchg
in
and
xchg
pop
push
jp
cld
cmp
out
bound
js
fists
xchg
jmp
ds
sub
jb
into
insl
push
push
pop
in
add
cmp
sbb
sub
or
mov
mov
out
and
xor
ja
call
scas
std
fsubl
stos
jae
fcmovnb
in
mov
or
test
cmc
and
clc
lcall
dec
fs
add
pop
xchg
fidivrl
mov
push
add
jge
and
rorl
sub
or
mov
add
xchg
cli
pop
push
xor
aas
popa
arpl
mov
rorb
mov
imul
cmp
in
jmp
mov
mov
sub
sub
ja
xor
mov
imul
sub
idivl
stos
adc
notb
bound
cmp
adcb
xor
aad
shlb
fiadds
push
mov
incl
scas
push
insb
mov
jecxz
lcall
pop
dec
xchg
out
xor
pop
push
stc
cmp
fwait
sub
adc
fildll
stos
xor
int3
test
or
add
sbb
xlat
je
jecxz
jne
iret
sbb
insl
cmpsl
dec
lcall
rcll
out
xor
mov
jne
jmp
mov
popf
out
inc
vpaddsb
inc
xchg
and
cltd
mov
pop
sub
mov
rclb
int
pop
pushf
adc
ret
jg
xor
test
inc
cmpsl
or
mov
add
mov
inc
pop
out
clc
pop
pusha
out
mov
jno
je
pop
aaa
ja
cmc
sbb
xchg
jno
pop
pcmpgtd
and
js
call
sahf
mov
mov
repnz
fcmovnb
xchg
adc
xor
sahf
mov
test
mov
cmp
cmp
aaa
lods
int3
jle
dec
out
pop
dec
mov
scas
mov
and
or
adc
scas
ljmp
scas
out
pop
push
stos
aam
mov
dec
sub
sub
xor
and
inc
inc
dec
jo
inc
xor
sar
and
or
sub
roll
inc
push
jae
dec
icebp
inc
out
cs
data16
stc
cmpsb
test
lock
sub
data16
adc
popa
sahf
xchg
jb
pop
jecxz
inc
and
imul
mov
arpl
jle
pop
sti
shlb
mov
fnstcw
bt
mov
ret
push
cld
cltd
inc
mov
cmpsb
inc
dec
sbb
call
inc
sub
in
fisubrs
jbe
jge
xchg
mov
sub
stos
jne
and
mov
pop
sbb
ja
int3
push
arpl
adc
xchg
pop
inc
psraw
std
jne
je
push
or
inc
xor
mov
sub
add
je
push
test
or
pop
or
fcomi
xor
data16
cmp
pushf
icebp
and
jae
ret
loope
ret
fsub
stos
mov
jp
je
fwait
jmp
lret
jae
dec
mov
or
imul
dec
mov
pop
pop
fimuls
or
add
mov
in
cmp
mov
ljmp
sub
popf
inc
and
pop
cld
ds
push
sbb
sbb
pop
and
ja
mov
ret
inc
inc
sti
test
ret
rcl
addr16
inc
dec
js
pop
pop
xchg
fnstcw
sbb
in
sub
push
insl
sbb
mov
sbb
repz
mov
pop
push
daa
lods
or
rol
js
jp
xchg
notl
and
ljmp
test
xor
jo
inc
or
ja
ret
cwtl
aad
add
mulb
and
or
xchg
push
popf
adc
mov
add
push
fs
fnstenv
ret
int
adc
adcl
or
insb
cli
ss
mov
or
mov
xor
repz
cltd
and
shl
sbb
and
fsubrs
jle
xor
roll
sub
jecxz
jmp
ss
out
lret
data16
sbb
sbb
mov
insl
sbb
ljmp
xchg
aaa
fwait
rcll
stc
fs
pop
stos
adcl
pop
daa
lods
xchg
ret
dec
push
mov
xchg
fbld
lret
int3
ja
pop
xor
pusha
inc
lods
mov
jmp
sbb
sbbl
lret
loopne
dec
cs
pushf
movsl
mov
data16
data16
sub
mov
imul
arpl
lret
nop
push
jo
outsb
imul
sahf
pop
lret
ja
test
push
scas
xchg
data16
test
and
je
or
rclb
mov
outsb
and
gs
cmc
mov
push
loope
filds
and
xchg
fstpt
adc
fcmovnu
es
hlt
loope
mov
sbb
cmpsb
sete
jb
fistps
xchg
mov
aas
lret
int
inc
std
iret
xor
and
or
std
sbb
lcall
push
cmpsb
mov
out
outsl
cmp
sbb
xor
inc
loopne
sub
in
mov
jl
xchg
dec
push
loop
sbb
cltd
jg
dec
and
aas
or
cld
dec
pop
xlat
mov
sbb
push
and
mov
adc
je
cltd
xlat
mov
pop
in
jae
mov
jge
sar
mov
jnp
dec
shrb
inc
mov
mov
lret
and
adc
pop
addr16
test
lds
mov
movl
dec
bound
andb
das
adc
imul
enter
popf
mov
adc
mov
mov
xlat
out
sarl
ds
xchg
push
and
cwtl
jmp
addr16
dec
push
or
mov
arpl
pop
sarb
lods
mov
lods
mov
adc
jne
dec
push
popa
negb
add
add
or
jb
sti
int3
shrl
cmp
dec
inc
xchg
test
xor
adc
icebp
mov
sub
mov
pop
mov
in
push
hlt
mov
jbe
inc
jmp
mov
mov
inc
cmpsl
jnp
push
int3
and
jp
lods
pop
add
rorl
mov
cmpb
sti
mov
mov
xchg
cld
gs
mov
inc
out
loop
pop
ss
push
aam
data16
adc
push
leave
adc
push
ljmp
mov
push
pop
pop
pop
xchg
sub
pop
pop
mov
dec
out
cmp
clc
xchg
cmpsb
testl
xchg
xlat
fisubrs
cmp
and
adc
fwait
cmovge
nop
push
outsb
repz
cs
repnz
out
cmp
push
daa
jbe
add
xor
mov
inc
xchg
add
push
cmp
cwtl
ret
lods
leave
lods
popa
add
inc
in
xor
mov
out
jmp
sahf
add
pop
out
ja
dec
cmc
or
xor
js
adc
bound
insl
pop
pushf
je
incb
lock
out
xlat
pop
clc
push
push
aas
push
cwtl
xchg
xchg
xchg
xchg
loope
filds
shll
inc
sbb
sti
not
ficoml
xchg
test
push
sbb
xchg
icebp
gs
or
mov
aaa
cmpsb
pop
mov
pop
sub
js
insw
pop
sti
mov
rdmsr
xor
enter
or
cmp
mov
sahf
ret
imul
arpl
andl
sarb
sbb
test
sbb
out
sub
int3
sub
notb
or
add
sub
in
pop
xchg
pop
sbb
hlt
lcall
scas
pop
int
jmp
hlt
sahf
and
shll
jg
stc
push
stos
mov
fwait
cmpsl
inc
rolb
jmp
push
shl
mov
sbbb
mov
sar
imul
xchg
mov
add
mov
adc
loopne
call
adc
ficomps
cmp
mov
jns
dec
mov
jmp
jno
inc
lret
mov
test
outsb
je
sbbb
shrb
jns
or
jbe
ds
aas
decl
lahf
jnp
add
test
and
sub
scas
sbb
fldl
or
movsb
stc
dec
into
pop
ret
xlat
aaa
push
iret
enter
cmpsl
popf
mov
mov
adc
pop
movsb
or
cmc
imul
test
filds
idiv
lahf
push
rcl
cmc
mov
mov
loop
mov
jno
jg
ds
mov
pop
push
loop
jmp
into
aad
outsb
dec
popa
inc
insl
cmp
dec
nop
leave
push
cs
dec
cmp
loop
std
xlat
loopne
xor
jno
adcl
int3
call
xor
and
scas
test
stos
dec
push
and
pusha
fcomp
push
cli
xor
jno
push
pop
xor
dec
mov
outsl
inc
adcl
add
adc
inc
pop
inc
outsb
into
cmp
and
sub
add
lcall
cwtl
and
xlat
pop
dec
xor
dec
rcrl
lahf
pop
and
loop
inc
jb
push
mov
sbb
pop
sbb
out
lret
sahf
iret
in
inc
imul
std
test
push
ficoml
scas
jmp
orb
cld
mov
inc
and
lods
inc
sbb
push
or
jle
cmp
imul
mov
movl
mov
jb
insb
dec
xchg
push
imul
fcmovbe
mov
fs
insb
adc
jno
jge
or
mov
fnstcw
xchg
mov
mov
ret
dec
jbe
xchg
push
adc
sbb
jnp
andb
hlt
sbb
scas
adc
and
lods
rol
cmpsb
add
cmpb
jo
repnz
jg
shll
adc
fs
fwait
xor
insl
xchg
xchg
sbbb
jnp
sbb
mov
pop
scas
adc
out
pop
jp
repz
enter
xchg
mov
cmp
dec
mov
jecxz
repnz
scas
int
dec
jg
mov
push
dec
mov
jne
inc
fildll
xor
psubw
mov
sbb
mov
adc
int
pusha
mov
push
shll
fldt
jo
sbb
jle
inc
sbb
push
ret
or
bound
movsl
pop
inc
shlb
call
push
inc
dec
cmp
xchg
inc
dec
outsb
push
push
push
loop
and
lcall
cmp
jecxz
dec
fwait
addr16
dec
nop
jl
scas
mov
inc
pop
sub
push
fsubl
pushf
push
xor
mov
mov
mulb
xor
inc
push
mov
in
push
add
ljmp
xchg
pop
sub
mov
pop
rcrb
ss
sbb
fisubs
push
mov
and
dec
pop
pusha
push
in
mov
mov
sub
fs
and
xor
inc
inc
and
insl
fcoms
je
call
movsb
adc
xor
inc
adc
test
push
sarl
or
outsb
ja
push
push
xor
outsl
mov
mov
push
imul
mov
in
insl
testb
push
nop
fldt
push
or
sub
addr16
mov
push
dec
cmp
adc
fwait
stc
sbb
shll
out
cmpsl
mull
rclb
or
xchg
jnp
lret
testb
and
les
jmp
jo
enter
sbb
fs
repz
movsb
push
sarl
mov
or
dec
cld
inc
add
push
jne
pop
mov
adc
frstor
add
fwait
sub
inc
sub
ror
add
cmpsl
subl
sub
add
pushf
pushf
sbb
push
cltd
sbb
xchg
insb
sbb
lahf
xchg
mov
mov
pop
pop
xlat
mov
xchg
dec
push
rcll
std
les
pop
mulb
leave
push
clc
mov
mov
sbb
fs
je
push
push
int
shlb
jle
xchg
out
fidivrs
sub
imul
clc
lret
jns
pop
push
or
mov
nop
aam
jne
xchg
mov
push
inc
cmp
push
popa
fwait
jle
mov
pop
and
rcr
fdivs
mov
sahf
mov
push
pop
nop
push
vandpd
cmp
repnz
repz
fnstcw
ljmp
icebp
xchg
or
test
adc
insb
dec
int3
or
cld
sahf
xor
fldt
jmp
pop
movsl
adc
test
pop
jb
and
mov
rcrb
push
lcall
or
jb
test
xlat
mov
or
cmp
popf
movsb
cmp
mov
add
cltd
xchg
int3
sub
sbb
nop
mov
mov
lds
je
lods
fwait
xor
inc
std
mov
cmpsb
shlb
ret
sbb
add
dec
and
scas
mov
sbbl
loope
movsl
add
into
sarb
shl
sub
rorb
dec
in
loop
adc
xor
mov
mov
pop
xchg
pop
mov
rorb
out
mov
and
pop
loopne
jg
cs
push
cwtl
add
into
mov
stos
add
enter
xchg
scas
rolb
nop
popa
add
clc
shr
lds
xchg
mov
inc
pop
and
push
mov
outsb
iret
out
lods
lcall
fiadds
pop
xbegin
fisubs
jae
mov
pcmpgtd
mov
lret
push
mov
ja
cmp
mov
dec
push
pop
mov
mov
xchg
inc
and
inc
jmp
data16
lds
sbb
xchg
and
mov
mov
mov
push
ret
cmp
pop
jge
loop
xchg
shlb
pop
push
mov
and
mov
sbb
or
ficoml
cwtl
and
xchg
aad
adc
lcall
ret
cmpl
push
sbb
sete
daa
jbe
into
jmp
scas
imul
push
shll
add
and
iret
aas
decb
js
lea
cmc
icebp
dec
push
or
push
sub
cmp
sarl
mov
or
xor
fadd
sarb
inc
mov
int
stos
push
jl
xchg
mov
shlb
pop
sbbl
sbb
pusha
movsb
cmp
mov
clc
push
jo
adc
mov
in
pop
aaa
ljmp
pop
dec
je
ss
mov
or
pop
pop
iret
pop
xlat
insl
mov
imul
dec
sub
inc
pop
mov
lcall
mov
dec
pop
in
jbe
je
movsb
add
dec
iret
aas
jns
inc
arpl
fwait
stc
mov
cmp
push
rolb
fisubrs
lret
xchg
inc
dec
subl
sbb
jne
mov
les
jmp
push
and
sbb
cld
fs
dec
cwtl
aaa
sub
push
pop
sbb
jns
or
test
lods
mov
adc
rcrb
fstp
outsl
lods
pop
push
push
ljmp
dec
sbb
or
ja
loopne
das
mov
fwait
enter
dec
js
mov
ret
stos
push
insl
stos
outsl
fistpl
mov
push
push
xor
insl
and
cmc
pop
aas
cmp
sub
add
bound
ret
xchg
add
movsl
dec
jg
movsl
adc
inc
or
pop
lret
call
sub
ret
cs
push
aad
int
adc
jl
push
in
mov
lahf
aaa
mov
push
shlb
inc
xchg
jns
cli
je
aam
xor
mov
fildll
std
mov
mov
push
out
dec
adc
sub
js
aam
loop
inc
xchg
mov
jle
mov
pushf
aas
jae
inc
pop
push
push
dec
add
dec
aas
mov
ds
mov
jb
xor
lea
repz
shll
daa
xchg
lret
aam
inc
mov
icebp
dec
sti
jmp
ficomps
cs
inc
sbb
xor
adc
iret
leave
push
xor
xchg
ds
jmp
repnz
dec
xor
in
clc
loope
mov
fwait
fwait
lcall
pop
sub
rcll
shlb
cld
dec
rcll
out
insb
sub
out
add
cmp
xor
shll
repnz
cmp
mov
ja
sbb
int3
aam
add
mov
mov
adc
int
xchg
cmpsl
dec
movsl
and
subl
cltd
mov
jle
jle
xchg
pop
ss
dec
add
and
push
cmp
jmp
xor
cmpsb
cmp
ds
ror
cmp
add
pusha
lds
pushf
movsl
fs
dec
pop
jge
shl
pusha
ss
lret
bound
in
test
push
lcall
cmp
add
push
mov
adc
pop
or
sahf
cs
add
xor
stos
leave
mov
or
mov
mov
xor
scas
in
mov
xor
outsl
mov
addb
pushf
sti
js
and
fisubrl
icebp
test
pinsrw
add
adc
icebp
push
int
addr16
push
mov
outsl
push
adc
and
pop
fstl
mov
cmovs
jmp
sbb
pusha
sub
jecxz
xchg
imul
ss
mov
sbbl
aam
bound
in
jp
jae
pushf
xor
aas
fcoml
jns
jne
jne
mov
dec
out
je
out
ds
mov
pop
mov
jno
test
adc
dec
repz
mov
jne
pop
adc
adc
stos
or
xor
sub
mov
into
test
jp
jb
movsl
pop
xor
lret
ss
mov
sub
cmp
out
pop
outsb
mov
paddd
pop
or
push
xor
sbb
mov
das
ljmp
imul
push
bound
ljmp
dec
ret
scas
xchg
in
sbbl
sbb
sub
add
or
mov
jmp
xchg
dec
sahf
jmp
pop
fsubr
lea
xchg
push
xor
insb
add
jge
test
hlt
dec
jecxz
sbb
aas
dec
xor
inc
fiadds
lahf
and
fstl
hlt
mov
int3
push
jmp
xor
stos
xchg
adc
lcall
or
mov
xchg
push
push
fdiv
jmp
mov
pusha
mov
push
inc
lea
lock
pushf
jp
push
lahf
mov
std
mov
or
shll
or
iret
xor
stc
nop
mov
pop
nop
lock
push
mov
jl
pop
jno
je
inc
inc
lock
test
ds
fcompl
push
pop
arpl
inc
dec
xlat
pop
popf
std
mov
test
out
pop
rcrb
or
orl
or
icebp
dec
lret
lods
aad
mov
jle
cmp
test
inc
mov
add
xchg
jbe
xchg
arpl
jb
ja
mov
std
outsl
xlat
lcall
js
iret
stos
rep
cli
das
mov
jmp
and
insl
add
mov
xchg
mov
xchg
outsl
mov
push
dec
mov
lods
push
push
cmc
loopw
mov
pop
fcomps
in
clc
cld
xor
mov
dec
in
add
jbe
mov
cmp
pop
sbb
int3
pushf
cmc
mov
push
pop
mov
sub
clc
ljmp
push
stos
imul
shll
cmpsb
or
inc
dec
xor
xor
inc
dec
or
js
pop
jns
imul
pop
xchg
mull
and
xor
call
push
outsl
xor
das
in
icebp
rorb
push
loop
dec
push
pop
daa
ja
sub
adc
dec
cmp
shlb
out
jecxz
add
mov
and
inc
add
out
mov
cmp
ljmp
push
fiadds
mov
mov
fsubrl
xor
mov
push
cmp
inc
cmp
push
cmp
cmp
and
fimull
xchg
in
movsl
xor
std
stos
cmp
sbbl
dec
lea
fwait
jle
mov
fdivr
scas
insl
dec
push
push
xor
push
in
pop
pop
ret
idiv
pop
loopne
lahf
push
sarl
push
cld
ss
adc
pop
out
cli
cmp
lock
repz
cmpl
arpl
loopne
pop
jge
cwtl
stos
arpl
jmp
test
dec
test
ds
andb
arpl
fwait
rol
sbbb
out
out
or
insb
or
jne
loopne
lret
dec
inc
inc
shrl
mov
cwtl
mov
and
ret
lret
mov
mov
addr16
outsl
popa
xchg
jbe
pop
jp
pusha
pop
dec
add
inc
ljmp
jmp
outsl
movsb
in
jae
xor
fsts
sub
push
cmp
gs
aas
push
cmpsb
push
cwtl
orl
das
subl
pusha
xor
inc
in
mov
sarb
jmp
pop
aas
pop
hlt
lods
ds
or
test
enter
and
in
xchg
push
xorb
call
lcall
inc
ljmp
mov
in
and
jg
xor
scas
xor
into
jb
in
lea
add
and
push
ds
push
icebp
add
mov
xchg
pop
int3
nop
pop
sub
lret
adc
data16
mov
imul
xor
mov
mov
sbb
out
push
xor
push
xchg
data16
inc
subl
in
xor
gs
mov
mov
inc
inc
push
xchg
aas
inc
push
sub
pop
sbb
enter
sub
cmp
xor
sub
rorb
int
or
pop
jbe
ss
or
scas
testb
jno
pop
dec
pop
jp
data16
inc
lret
aad
das
mov
xchg
pop
pop
repz
xchg
scas
mull
es
pop
dec
arpl
repnz
pusha
mov
into
icebp
mov
cmp
mov
push
in
cmp
rorb
lcall
add
inc
movsb
dec
rolb
xorl
and
mov
and
mov
enter
hlt
push
dec
pop
sbb
sahf
mov
cmp
add
push
cmp
sub
divl
add
sub
fldl
dec
std
mov
jnp
shl
fwait
dec
fadds
jge
dec
lahf
test
add
mov
sub
push
cwtl
les
popf
shlb
loope
icebp
int3
les
dec
xchg
mov
cmp
sbb
fsubl
std
incl
pop
loopne
or
mov
push
jg
test
jle
cwtl
mov
push
and
sub
imul
aaa
or
into
out
lods
data16
shl
ja
xor
mov
cmp
xchg
rcl
lods
int
xchg
pop
call
in
adc
imul
test
push
add
subl
xorb
add
in
stc
dec
jb
mov
push
aas
push
shr
jno
dec
sti
xlat
adc
inc
fwait
sub
cmp
aam
aam
scas
in
mov
sub
inc
jo
out
enter
cmp
xchg
scas
iret
jmp
fs
mov
fstpt
ljmp
js
pop
mov
ja
movsl
sub
std
mov
ret
dec
jne
lds
sub
mov
push
in
mov
scas
dec
jl
pop
jmp
mov
loopne
and
hlt
adc
add
or
int3
popf
pop
mov
push
jg
cwtl
and
push
jne
iret
shl
aas
add
or
loopne
cmc
inc
lahf
xchg
push
mov
dec
rcll
fnstsw
sub
cmpsl
mov
mov
jmp
scas
aaa
cmpsb
mov
aad
shlb
xchg
push
xor
lock
or
push
scas
je
sbb
out
loop
push
cmc
or
pop
pop
test
mov
mov
loopne
stos
jno
int3
sbb
jne
xor
dec
in
mov
jae
shlb
test
data16
push
ret
push
mov
adc
notb
or
mov
pushf
mov
add
pop
loop
mov
rclb
stc
sbb
inc
fnstcw
in
push
or
and
jb
xor
push
jb
pop
lcall
lea
jbe
out
add
xchg
adc
pop
int
cmp
xor
xor
jns
ljmp
je
adc
sbb
mov
xchg
pop
sahf
mov
out
aad
aas
cmc
or
dec
lds
imul
jmp
mov
ds
pop
mov
dec
icebp
sbbb
cmp
cmp
test
mov
iret
stc
pop
pop
pushl
adc
mov
loopne
xchg
mov
mov
add
cmp
je
mov
and
mov
test
cmp
inc
push
orb
ja
xor
cmp
and
mov
out
das
jmp
adc
into
inc
sub
push
aam
cmp
enter
iret
insl
jns
jae
mov
adc
jecxz
shld
push
dec
push
scas
dec
fnstcw
andb
mov
in
pop
int3
pop
inc
xchg
xchg
push
int
mov
cltd
stos
shlb
gs
test
jo
pusha
adc
jl
dec
and
fstp
pusha
push
jns
xchg
mov
insb
mov
xchg
or
fwait
rcrb
pop
dec
imul
in
das
push
xchg
jno
xchg
andb
into
imul
and
mov
mov
cmp
shlb
mov
jmp
adc
push
and
cwtl
adc
jb
inc
or
sub
push
and
enter
aad
mov
into
imul
ljmp
and
mov
roll
dec
sub
add
or
imul
push
insl
and
mov
repnz
cmc
enter
sbb
push
xchg
mov
roll
and
sbb
push
imul
push
inc
addr16
mov
mov
popa
movsb
jbe
dec
pop
call
pop
les
jecxz
xchg
fimull
mov
fstp
dec
lret
pushf
fstps
movsl
jl
xchg
xchg
xchg
cmp
mov
add
push
shl
cmp
or
pop
and
imul
popa
dec
enter
mov
add
lret
mov
xchg
push
or
adc
mov
mov
mov
or
jne
pop
test
insl
les
push
and
xchg
cmp
or
xchg
dec
int
and
leave
mov
imul
das
push
shrl
sub
add
dec
cmc
push
xorb
daa
adc
sahf
cmp
enter
sti
fiadds
and
pusha
adc
sarl
jl
mov
mov
mov
mov
stos
mov
decb
jne
pop
push
add
scas
inc
cwtl
int3
mov
bound
sub
ror
xor
mov
fistpll
jp
sbb
lods
lods
mov
sub
jmp
inc
mov
lret
xor
movsb
add
push
inc
xlat
cli
in
shl
xor
xlat
mov
adc
lret
fisubrl
fadds
xor
sbb
lret
pop
js
jb
xor
roll
mov
into
fcoml
out
xabort
call
fxch
sbb
pop
xor
and
jnp
jmp
mov
mov
adc
test
insb
mov
cmpsl
mov
fildll
cmpsb
add
js
mov
pop
xchg
mov
pop
lret
lock
xor
jno,pn
lods
push
sub
sub
shlb
cmpsl
insb
cmc
mov
dec
sub
xchg
lods
push
fistl
repnz
mov
ret
movaps
shr
jp
sahf
jle
mov
cld
xlat
add
push
and
repnz
push
lea
cli
idiv
push
sbb
push
push
pop
std
insl
xor
xor
inc
nop
dec
imul
jno
push
icebp
fs
pop
lret
sbb
ljmp
xchg
sub
clc
out
mov
imul
or
dec
pop
inc
and
adc
loope
lods
mov
fnstenv
movsl
iret
mov
sub
and
and
in
mov
cmpl
outsl
pop
mov
cmpsb
push
push
call
test
icebp
shll
les
iret
xorl
xlat
sbb
mov
mov
sub
loopne
stos
cmpsb
push
int
xchg
adc
push
out
movsl
sbb
stos
cmp
inc
test
mov
out
iret
mov
mov
xchg
add
stc
ret
xor
pushl
xchg
or
in
lds
inc
pop
aas
pop
pop
push
xchg
daa
imul
fsub
fldt
iret
pop
mov
cmp
jno
cmpsb
jge
das
ret
sbb
or
and
pop
adc
or
sub
or
into
movsb
fwait
add
ret
cs
gs
fst
pop
mov
add
pop
xor
loope
and
inc
mov
xor
sub
jbe
movsb
add
shll
imul
mov
mov
jo
jae
out
ret
loopne
fdivl
shll
sub
lret
rcr
stos
add
pushf
mov
mov
scas
sub
xlat
mov
sbb
xor
lods
rcl
and
loope
xchg
sub
mov
loope
lret
push
int
inc
shll
and
xor
orb
insb
xor
add
sub
push
xchg
jo
popf
jmp
test
xchg
jne
daa
sbb
ss
repnz
sub
push
and
xor
jne
test
adc
mov
xor
adc
jbe
cmp
aaa
ficoms
add
adc
fwait
cmp
mov
sbbb
jne
mov
mov
xor
and
sub
push
fsubrs
lds
xchg
repz
int
jb
jp
dec
faddl
movsb
sub
dec
aaa
je
add
cmp
das
pop
mov
sarb
sbb
mov
push
daa
mov
sahf
mov
insl
ret
jecxz
sbb
mov
push
std
push
les
mov
cmp
or
xor
mull
imul
jae
into
and
loopne
push
rorb
enter
push
iret
pop
inc
loopne
mov
les
bswap
outsb
push
into
aam
inc
cmpsb
frstor
pop
adcb
fidivrl
cmp
or
adc
cmp
test
inc
push
pop
mov
mov
je
push
pop
in
pop
adc
add
push
lods
push
or
mov
addr16
pop
inc
mov
inc
cmp
dec
je
push
adc
jae
push
nop
push
xchg
mov
dec
and
dec
insb
clc
fmul
arpl
and
orb
lods
push
fistpll
popa
jb
hlt
fstpt
imulb
jg
and
pop
mov
leave
inc
ret
pop
int3
test
and
in
mov
pop
lea
or
cmpb
je
nop
int3
outsl
stos
cmpsl
mov
pop
push
inc
and
pop
ss
cmpsb
int
push
cmp
mov
das
loop
lods
ret
cltd
pop
icebp
push
jb
xor
aam
mov
sbb
ljmp
mov
dec
lods
push
stos
push
pop
rorl
sub
sarb
cmp
mov
dec
mov
inc
bound
adc
mov
aas
pop
lods
xchg
sub
cli
lret
popa
jbe
mov
add
jno
imul
jge
das
out
js
pushf
xchg
xlat
fisttpll
inc
out
mov
cmp
scas
inc
pop
add
andnps
cmpsl
mov
jmp
fwait
adc
jne
sub
outsb
dec
jo
jae
addl
addl
cltd
test
lea
mov
adc
xchg
pop
into
dec
mulb
mov
xchg
push
out
pusha
xlat
pop
outsb
mov
lahf
pop
filds
pop
and
icebp
jle
and
jge
rcl
inc
push
lcall
sub
push
mov
cmovbe
jp
cwtl
lods
cld
je
mov
shl
aaa
xor
pop
xchg
pushf
sub
push
cmpsb
imul
push
and
jmp
cmp
add
pop
int3
rcl
mov
and
mov
jnp
push
cmp
add
adc
repnz
js
out
push
movsb
and
sub
call
push
or
scas
cmp
xchg
pop
xchg
mov
test
ret
out
in
loop
lods
and
push
in
dec
fs
cmp
push
cmc
les
lret
push
sbb
mul
xchg
ds
sub
push
leave
imulb
jno
rorb
es
xor
push
aaa
dec
pop
mov
push
mov
pop
dec
flds
mov
jp
mov
or
test
ja
pop
push
cs
ja
ja
xchg
mov
jb
es
iret
cli
aaa
ss
xchg
and
jno
sahf
insb
push
insb
rorl
into
push
sub
outsb
lcall
push
mov
cmp
sub
xchg
sub
mov
jae
fdivrs
in
cmp
pop
lock
or
js
mov
inc
pop
addl
jbe
sub
pusha
dec
mov
lea
xor
ja
mov
inc
dec
icebp
pop
std
cli
cld
pop
iret
add
ja
pop
push
aad
outsl
iret
test
test
xchg
loop
pop
cmc
dec
sbb
addb
lods
xchg
cmp
push
outsb
adc
imul
add
adc
arpl
lret
jo
mov
test
adc
jns
fidivrl
jp
cltd
in
dec
repnz
inc
iret
jl
je
imul
hlt
test
mov
aad
pop
or
inc
adc
pop
repnz
mov
adc
and
mov
xor
mov
cmp
mov
cmp
sub
mov
cli
into
les
mov
in
aam
call
sbb
add
mov
push
outsb
inc
pop
int
negl
sub
ljmp
jbe
and
sahf
in
movsb
push
mov
iret
insl
mov
imul
enter
outsl
add
jge
rorl
in
gs
cmp
movsb
adc
insl
rorb
push
ror
mov
and
fistpll
pop
dec
inc
mov
inc
or
clc
mov
out
cmpsl
adc
and
fcmove
jmp
clc
mov
in
and
aad
roll
mov
jmp
jno
mov
and
xchg
xor
fwait
mov
push
push
cmpsb
mov
sub
sub
push
xor
xchg
xchg
in
clc
js
cltd
aas
push
push
cld
mov
imul
push
mov
loopne
cmc
daa
mov
push
jbe
cltd
inc
adc
sbb
outsl
pop
test
and
lods
ss
es
mov
sub
fsub
lock
push
mov
cld
mov
jns
roll
out
sub
std
xor
bnd
jno
mov
sbb
mov
in
lea
or
scas
sarb
bound
loop
cmpsb
mov
mov
out
loope
je
push
cltd
add
cmp
cmp
clc
mov
insl
pushf
jle
and
or
jno
mov
lods
xchg
in
ret
sbb
pop
andps
enter
iret
xchg
xor
or
daa
test
xchg
sub
hlt
dec
xchg
ja
mov
xor
jno
mov
mov
pusha
repnz
push
in
adc
xchg
ret
fwait
bound
jno
mov
mov
and
mov
adc
jg
and
ja
imul
ret
xor
inc
cmp
jg
cmp
mov
and
sub
ret
in
jnp
xor
jp
sti
xor
xchg
call
inc
nop
xchg
fdivrs
inc
ret
mov
xchg
aam
aam
cwtl
lcall
loop
inc
imul
jg
xchg
adc
jmp
sub
lea
aam
cmp
add
lea
jno
scas
gs
pushf
loope
pushf
bnd
int
or
ret
bound
inc
das
mov
popf
loop
pop
movsl
xchg
push
popa
stos
sub
pop
sub
loop
pop
pop
adc
mov
cmpsb
mov
iret
add
push
dec
or
imul
pop
pushf
or
sbb
outsl
jl
out
pop
inc
push
xlat
loop
jmp
je
fs
dec
and
repnz
test
lds
sahf
cmp
fisubrl
or
push
dec
scas
mov
pushf
jmp
in
clc
shl
mov
lahf
xor
movsb
sub
pop
rolb
icebp
insb
loope
inc
fcomps
fstl
pop
push
sti
outsl
and
pop
dec
jno
shrl
insl
mov
jle
cmp
sbb
fs
adc
cmp
adc
pop
imul
xchg
add
andl
cmp
gs
inc
pusha
sub
movsl
push
arpl
in
sahf
gs
adc
push
push
xchg
adc
in
notb
mov
pop
dec
mov
xor
and
ljmp
mov
fwait
ja,pn
cmpsb
jns
js
pop
cli
jae
ret
test
mov
iret
inc
out
outsb
jnp
and
test
ret
xchg
aad
lods
xor
pop
cwtl
or
mov
daa
int3
repz
jmp
ss
xchg
cmp
mov
nop
or
aaa
dec
jne
js
pop
or
lock
imul
add
dec
popf
sbb
insb
in
scas
stc
fdiv
lods
mov
push
add
add
sti
inc
out
sar
add
xchg
popl
shll
push
cli
dec
out
mov
inc
lahf
sbb
cmp
jge
lock
outsl
push
sbb
popa
jmp
out
pop
leave
jmp
outsb
and
insl
jns
pop
gs
cmp
inc
jp
inc
repz
jp
mov
andl
aaa
sbb
cmp
ficomps
fmull
xlat
and
and
sbb
xor
pop
sbbl
outsl
es
pmaxub
mov
jae
gs
sbb
bound
nop
bound
mov
mov
aam
mov
adc
pop
jo
inc
jo
insl
lods
cmp
push
scas
jbe
cmpb
out
decl
popa
cwtl
popa
mov
sub
ljmp
and
insl
xor
pop
sub
cltd
shlb
loope
in
sub
push
ret
rcl
movsb
sub
sbb
in
mov
ret
mov
sub
mov
add
das
or
popa
mov
popf
leave
xchg
je
ja
insl
mov
cltd
ljmp
ror
add
arpl
fnstcw
dec
mov
out
sbb
xorb
cmp
inc
pop
daa
addr16
sub
mov
push
cltd
push
pop
mov
mov
in
lret
dec
inc
lods
cmp
mov
xchg
test
or
push
sub
mov
lret
push
pop
rcrl
js
fistl
test
inc
add
pusha
mov
test
xor
sahf
dec
icebp
inc
add
mov
mov
lahf
sti
imul
dec
mov
dec
imul
mov
xor
shrb
mov
xor
ja
mov
movsb
lcall
addr16
ror
cmp
mov
repnz
mov
outsl
ljmp
pusha
push
lret
lret
jae
gs
pop
jns
cld
orb
jno
sub
mov
test
je
dec
mov
lods
mov
push
loop
inc
pop
add
mov
and
mov
sbb
xlat
inc
stos
bound
mov
lret
mov
test
out
ret
or
xchg
daa
insl
adc
nop
jp
jg
mov
xlat
imul
sbb
insl
sub
push
sub
lret
stos
cmp
add
hlt
aam
fidivrl
mov
dec
test
inc
filds
dec
jmp
test
and
push
jne
sub
movsl
mov
in
xor
pop
out
aam
stos
sbb
pushf
lea
pop
lcall
dec
adc
inc
sub
rorl
push
sbb
andb
or
ja
mov
fmul
sub
pop
xor
fdivrs
arpl
ja
jl
stos
dec
lahf
andb
cmc
xor
sbb
add
mov
or
dec
or
pop
or
in
sub
push
jg
stc
jo
fldl
stos
mov
outsl
mov
dec
add
cmp
add
mov
testl
das
xchg
cmc
or
adc
jl
cli
subl
stos
shlb
inc
nop
popf
jg
pop
xor
add
loopne
inc
xor
mov
aaa
jg
movsb
pop
xor
dec
xchg
inc
jo
testb
inc
inc
inc
repnz
divb
jnp
mov
movsl
push
ss
cmpsl
ret
js
xchg
sbb
arpl
mov
xchg
inc
cmp
out
dec
and
rcr
pop
dec
les
das
call
push
and
repz
cmp
int3
push
jae
mov
push
or
pop
test
mov
sahf
xchg
stos
arpl
fadds
push
lcall
push
mov
push
mov
mov
aaa
bound
mov
push
push
adc
or
arpl
adc
cmc
hlt
pop
push
stc
or
mull
ss
or
leave
mov
sbb
je
int3
adcl
aam
adc
mov
push
mov
mov
mov
int3
scas
cmpb
stc
dec
js
cmp
lock
rorl
fcoms
mov
test
inc
add
xchg
pop
pusha
add
sbb
fnstsw
dec
dec
out
leave
sti
inc
mov
mov
adc
jbe
lea
and
adc
test
in
test
sbb
push
pusha
mov
adc
cmp
fistpl
pusha
mov
inc
arpl
xor
sub
pop
mov
daa
adc
ja
mov
rcrl
inc
lds
sbb
loopne
cwtl
and
and
xor
xchg
lea
repz
push
mov
lret
fcomi
jb
stc
push
bound
in
xchg
mov
call
inc
testl
lods
aas
insb
fwait
mov
sub
outsl
push
pop
cltd
sbb
mov
in
stos
rol
imul
sbb
push
dec
mov
and
mov
mov
add
std
and
pop
fnstsw
xchg
rcll
mov
and
dec
cmpsl
mov
rclb
xchg
sub
adc
lods
pop
addr16
mov
mov
or
cmp
out
inc
repz
push
inc
add
mov
xor
test
xlat
xor
adc
lea
adc
and
dec
pop
outsl
andl
cmpsb
add
add
push
in
dec
std
test
inc
repz
mov
in
push
push
lret
or
sub
lods
cwtl
aaa
or
inc
mov
dec
xchg
sub
xchg
stc
lods
mov
add
adc
std
inc
popa
bound
je
push
cmp
jmp
popf
sub
adc
aas
mov
ljmp
lcall
ficompl
cmpsl
mov
addr16
dec
shlb
push
cmpsb
cmp
test
pop
iret
xchg
push
nop
scas
rcrl
shll
jbe
cmp
and
pop
pop
test
jo
in
es
mov
je
cmp
rolb
imul
xor
movsb
cmp
dec
inc
mov
mov
insl
mov
xchg
jp
mov
jl
mov
aaa
push
into
test
call
adc
outsl
sbb
icebp
daa
sahf
pop
mov
dec
xor
cld
push
push
adc
cli
aas
mov
pusha
inc
mov
push
ret
push
rcl
test
lret
pop
adc
add
pop
mov
faddl
sub
inc
inc
push
inc
test
fwait
mov
xchg
imul
testb
mov
sub
adc
pop
mov
jne
sbb
mov
jecxz
add
sub
jge
pop
mov
outsl
in
movsb
jns
cmp
pop
mov
iret
ficompl
xchg
and
xor
stos
sub
sub
out
add
das
sub
aas
hlt
adc
push
int
fsubr
and
push
push
mov
add
ljmp
sub
shrl
lds
cmp
stc
push
inc
dec
lods
add
aaa
xor
test
mov
pxor
ds
pop
fldcw
jbe
jb
adcl
pop
cltd
dec
mov
or
jae
mov
scas
and
lods
scas
fnstsw
xchg
sub
mov
movsl
mov
rorb
aas
and
xor
mov
ja
pop
mov
or
in
cmp
notb
xchg
mov
fmuls
loope
push
in
adc
lods
sbb
pusha
repnz
fdivl
cltd
xchg
sub
push
lods
sarb
popa
movsb
scas
or
fbstp
stos
lods
rcrb
ds
aad
xchg
adc
jle
daa
shrb
push
jbe
mov
inc
add
sbb
add
fmulp
notb
sarb
test
cmpsl
std
push
sahf
mov
in
xor
push
add
mov
and
fldlg2
mov
jecxz
int
xchg
fcoms
mov
dec
movsl
imul
push
ret
dec
push
mov
subb
adc
or
cmp
adc
push
pop
cmp
and
sub
lahf
push
add
stc
push
mov
ljmp
pop
fwait
stc
dec
fwait
pop
push
hlt
mov
arpl
nop
leave
jbe
sahf
cmpb
stos
ljmp
mov
push
rcrl
xchg
popf
out
fs
jecxz
test
jne
arpl
sub
jo
repz
imul
mov
mov
int3
xchg
mov
add
aam
mov
inc
mov
and
gs
aas
arpl
jno
or
lock
repnz
jl
insb
jnp
int3
push
out
mov
daa
xchg
ret
movsl
inc
inc
into
pop
jnp
adc
mov
jp
add
jge
loope
adc
in
mov
pusha
adc
cmp
mov
inc
lock
pushl
and
out
fbstp
ret
mov
lahf
push
movsb
inc
std
imul
insb
loope
stos
fsubrl
shrl
sbb
xor
xchg
lcall
pusha
mov
jno
mov
sub
lret
test
iret
jecxz
fbstp
add
adc
xchg
in
cmp
jmp
push
pop
subl
jp
mov
pop
dec
lret
mov
andl
lods
shlb
or
jnp
push
add
call
pusha
cmp
int3
addr16
xor
jmp
xchg
mov
sahf
jnp
addr16
mov
jo
sbb
sahf
or
dec
popa
sbb
fstl
cmpsb
jmp
xchg
jge
ret
loope
or
inc
dec
xchg
stos
inc
xchg
out
pop
xorb
add
jle
loope
repz
xor
rcr
inc
mov
sub
push
inc
jne
xchg
imul
pop
lcall
lods
xchg
in
stos
in
cmp
ljmp
sar
or
xorl
stos
jmp
cmp
sub
clc
push
mov
fbld
lods
cltd
int
in
outsb
leave
cmp
dec
bsf
movsb
cmpsb
pop
cmp
mov
cmp
sub
push
jb
xlat
flds
cmp
jb
movsl
xor
cmp
sub
sbb
mov
mov
mov
subl
arpl
dec
cmp
add
lret
mov
lock
sti
imulb
aas
icebp
mov
mov
xor
rolb
pop
iret
adc
add
ret
pushf
push
push
mov
xor
xchg
aad
rorl
mov
add
scas
mov
mov
push
notl
cmp
and
mov
dec
jge
sti
sbb
xchg
lret
mov
jns
aam
imul
lods
dec
mov
mov
in
cmpsb
fldenv
cs
inc
push
call
jp
stc
push
cmp
psrld
jo
arpl
test
jne
lret
sub
ja
dec
push
sbb
out
daa
fs
push
fwait
cmpsl
fsub
pop
loope
pop
in
sbb
cmc
sbb
bndstx
xor
cmp
fwait
sbbb
inc
jns
xchg
mov
adc
mov
adc
xor
or
leave
in
cmp
fcmovnu
aam
sbb
pop
movsb
inc
or
adc
mov
enter
mov
test
pop
push
pop
cs
ss
xor
mov
jp
in
popa
and
stos
loope
pop
inc
popa
repnz
or
pop
mov
cwtl
mov
mov
loope
ljmp
stos
inc
mov
adc
ds
mov
dec
push
stos
lock
add
sub
mov
in
xchg
lret
insb
mulb
cmp
adc
xchg
jne
imul
out
dec
hlt
jle
mov
mov
xchg
hlt
or
mov
jg
lret
cs
inc
inc
lods
xchg
shrb
shl
aad
add
gs
lea
out
pop
sub
mov
cmp
pop
pusha
xchg
and
mov
in
push
hlt
lods
and
jo
add
mov
aam
leave
sub
aam
outsl
ss
psubsb
jle
mov
dec
add
insb
mov
sti
cltd
jp
cmp
js
or
add
add
lock
jp
ljmp
ret
push
cmc
pop
push
cld
loop
pmulhuw
enter
or
jl
insl
inc
jp
test
push
adc
lods
sbb
dec
xor
dec
arpl
repnz
push
lea
fs
stc
cld
mov
sub
loope
pushf
add
stos
push
stos
sub
xchg
aam
xchg
ret
inc
into
dec
jp
xchg
mov
xchg
imul
sar
cli
repnz
imulb
adc
mov
test
mov
inc
movsbl
push
popf
fldt
pop
add
hlt
pop
les
stos
enter
xor
pop
jnp
jbe
mov
addr16
ljmp
or
and
push
push
fidivrs
mov
loope
sub
mov
push
int3
sbbl
adc
mov
mov
aaa
xchg
dec
enter
lods
dec
fildl
pop
xor
cmp
mov
movsl
repz
jo
out
xor
icebp
and
sti
cmp
ret
enter
mov
arpl
ret
push
pusha
mov
pop
push
mov
mov
std
test
out
lds
cmp
jb
mov
dec
ror
mov
or
push
out
mov
pop
js
xchg
push
mov
adc
lcall
jmp
add
mov
xor
lcall
pop
imul
daa
inc
lock
mov
stos
out
clc
mov
jp
jo
pop
pop
hlt
and
sbb
cmp
movsb
out
cmp
ret
cmpsl
add
xor
aam
push
test
ret
pop
jmp
popa
jl
sub
lret
adc
push
stc
xor
arpl
xor
cli
scas
sbb
outsl
insl
adc
fbstp
pushf
jns
pop
out
pop
jmp
pop
xchg
sbbb
mov
stos
mov
sub
push
mov
mov
das
pop
mov
push
cld
xor
sbb
pop
fsts
int3
jo
popa
test
es
enter
vmovq
xlat
lds
pop
fxch
sub
popa
and
push
mov
cltd
push
dec
mov
adc
cld
idivl
mov
repnz
outsb
ret
insl
jecxz
lret
jb
sub
test
inc
bound
inc
sub
sub
mov
mov
lea
outsl
cmp
adc
sub
jl
test
and
adc
xchg
mov
xorb
shll
jmp
repnz
pop
dec
les
inc
sub
aad
aam
outsl
addb
sbbl
cltd
xor
xchg
mov
neg
push
adc
adc
test
out
mov
mov
in
pop
aam
cwtl
mov
int
jb
pop
cmp
adc
cld
push
push
int3
jo
add
adc
fimull
adc
cltd
test
enter
xor
icebp
push
loop
and
mov
loope
fistps
pop
push
addr16
sti
out
lods
mov
jmp
pop
xchg
fildll
addr16
sub
jecxz
cmp
mov
cmp
push
mov
lret
iret
push
scas
sub
cmpsl
xor
mov
scas
outsl
push
mov
shr
bound
roll
push
shr
out
jnp
ds
js
jle
add
out
pop
xlat
or
call
stos
roll
rorb
icebp
jno
mov
xor
dec
sub
popa
notb
ja
repnz
jecxz
js
fiadds
jle
std
jbe
js
or
xor
adc
rcrb
jge
ss
test
jl
sub
shrl
adc
test
cmp
je
xor
sbb
push
dec
mov
mov
push
and
lahf
and
test
mov
out
cld
outsb
dec
push
xor
xchg
stos
cs
sub
dec
jae
adc
and
in
mov
and
repnz
mov
dec
fcoms
jo
xchg
movl
ret
cmp
inc
mov
test
push
or
xor
xor
add
or
call
imul
aam
adc
das
popl
add
mov
xor
mull
mov
sbb
jns
sbb
dec
std
out
subl
jl
test
xchg
pop
bound
jg
xchg
cmp
sbb
scas
insb
cmp
mov
pop
cwtl
das
push
pop
inc
sbb
mov
mov
mov
mov
and
lds
fsubs
cs
lret
inc
enter
int
je
shrb
lock
add
rcl
mov
addl
cmpb
mov
xor
rcl
xor
add
jb
jle
add
fcmovbe
enter
and
inc
je
mov
cmp
cld
cmc
cld
lea
pop
js
jns
cld
out
inc
adc
shlb
push
add
ffreep
inc
push
aam
data16
jno
or
imull
mov
dec
cltd
mov
pop
negb
push
sub
jbe
pop
inc
jmp
adc
hlt
sub
xor
xor
xor
jl
push
jae
inc
in
faddp
jmp
aas
sbb
dec
mov
inc
xchg
and
xchg
imul
xchg
or
jns
sub
cmp
in
cmp
sti
pushf
mov
int
fdivl
xor
xchg
test
adc
hlt
mov
jnp
je
mov
lret
adc
jae
add
shrl
pop
lea
lret
add
rolb
xor
mov
mov
xor
cmc
jne
aad
out
xchg
outsl
push
into
pusha
jno
bound
add
movsl
jmp
xchg
test
sbb
inc
xchg
stos
out
push
and
test
fildl
mov
loop
cmp
xchg
daa
pop
inc
fcmovu
cwtl
push
mov
fistl
push
jno
xchg
sub
push
ret
out
push
stos
lcall
or
cmp
and
jne
sbb
aad
cmp
or
mov
xor
cmp
ljmp
xor
jb
cmp
sbb
mov
pop
add
push
mov
bound
outsb
cs
je
movsb
cli
cmp
mov
sarb
ret
flds
pop
mov
pushl
or
sub
and
cltd
mov
add
les
aas
mov
mov
in
mov
lods
incb
push
mov
icebp
dec
lahf
repnz
repz
int
repnz
pop
pop
inc
loopne
mov
test
test
pushf
lock
add
ja
test
xchg
jne
std
cmp
mov
sbb
icebp
cltd
adc
rclb
stos
leave
divl
scas
lea
in
pop
ffreep
ret
outsl
jnp
mov
lea
stos
xor
daa
outsl
sbb
sub
out
push
adc
lahf
cmc
push
sbb
scas
jo
cltd
bound
repz
pop
jecxz
pop
mov
shll
sahf
repnz
ret
scas
jnp
mov
xchg
cmp
inc
mov
or
add
call
jno
mov
mov
inc
push
and
jmp
or
mov
jnp
sbb
xor
subl
and
push
lds
push
xor
or
jne
or
mov
cmp
daa
adc
push
push
mov
out
mov
pusha
dec
es
adc
lahf
xor
mov
js
not
pushf
dec
test
dec
mov
in
lahf
jno
adc
repnz
mov
jl
repz
arpl
lahf
xchg
int3
jl
mov
aas
in
sub
ret
movsl
jecxz
outsl
outsb
and
pop
sbb
iret
lods
sub
push
dec
xor
fldl
jb
out
lea
xchg
inc
dec
mov
inc
test
ficomps
insb
mov
rolb
cltd
dec
mov
mov
push
add
fiadds
gs
ja
lock
mov
aaa
cmpsb
imul
mov
add
mov
jno
mov
jecxz
mov
push
cmc
cmpsb
pop
and
rcl
decl
dec
fisttpl
rcrb
inc
lret
pop
inc
add
test
icebp
cmp
inc
enter
pop
sbb
add
daa
jmp
pop
sub
mov
pop
or
jmp
das
or
lock
and
cmp
call
mov
test
leave
add
sub
iret
sbb
js
stc
ds
push
push
sub
std
xchg
movsb
and
subb
mov
pop
hlt
gs
pop
int3
jne
adc
mov
push
popf
clc
test
adc
push
jne
sub
dec
divl
pop
rcll
inc
and
mov
imul
out
and
rorl
jl
add
adc
shrb
sbb
and
ffree
jle
outsl
jb
popa
adc
test
adc
out
mov
add
aas
jb
aad
lock
loopne
adcl
adc
inc
idivl
and
and
mov
adc
jl
iret
jge
testb
jle
negb
out
mov
mov
inc
out
xchg
pop
orb
imul
cmp
mov
dec
pop
sub
jmp
xchg
enter
shl
test
out
adc
cs
aas
add
mov
inc
lods
and
leave
xor
adc
adc
fs
pushf
jno
add
loop
xchg
mov
fisubs
shrl
aam
add
mov
sahf
and
daa
cmpb
jle
in
pop
jns
jbe
cwtl
mov
fidivrs
ds
rolb
add
lds
jecxz
jecxz
scas
jb
repnz
stc
dec
imul
dec
xchg
adc
repnz
sub
lods
sbb
pop
ds
or
push
push
jne
pop
push
inc
lret
sub
xchg
clc
lods
jg
outsl
loop
mov
or
pusha
out
repnz
jne
mov
test
outsl
filds
aad
pop
jl
int
aas
mov
jecxz
inc
xor
imul
decl
out
push
adc
dec
aas
inc
push
push
adc
xor
and
xorl
cltd
pop
mov
jge
mov
pop
js
mov
add
cmc
jmp
sub
mov
dec
orb
and
popf
fdivs
and
in
xchg
lret
int3
and
shll
jg
add
loop
inc
mov
fnstcw
shlb
and
ret
shl
cld
shrl
pop
pusha
stc
daa
outsb
out
push
xchg
fmull
pop
jmp
jl
xlat
fs
mov
xor
push
popf
out
iret
mov
add
mov
cli
cmp
sub
aaa
jle
mov
shrl
arpl
mov
push
sub
xchg
in
fwait
xchg
test
imul
inc
mov
iret
jmp
push
jmp
call
mov
mov
xchg
mov
xorb
orl
iret
and
idivb
dec
into
xor
or
xor
mov
addr16
fnstsw
dec
popa
das
out
mov
inc
in
mov
jg
iret
push
cmpsb
or
inc
jp
sar
sub
jnp
xchg
arpl
out
addb
cmp
test
in
sbb
fisubrl
mov
inc
dec
imul
pop
xor
out
out
mov
loop
mov
xor
rcrb
es
sbb
into
fmuls
mov
xchg
lock
jecxz
xor
repnz
lret
cmp
mov
pop
scas
fistpll
mov
sahf
add
movsb
jge
imul
loope
shl
jns
out
outsb
outsb
xorb
mov
lahf
in
fsubr
push
shrl
or
mov
inc
bound
sub
std
ret
bound
mov
loop
mov
jle
mov
xchg
jno
xor
push
outsl
fisubl
inc
stos
ja
mov
xor
shlb
sti
stos
roll
dec
fnstsw
test
push
jne
fwait
xor
mov
stos
leave
mov
push
or
jge
test
imul
int3
imul
or
mov
cmp
jg
rorl
push
test
mul
sub
mov
inc
fcomps
inc
fbld
adc
adc
cltd
out
cmpsb
je
adc
and
rcll
jl
dec
std
icebp
xchg
cmp
mov
repnz
cmpb
ss
jnp
xor
cmpb
cmp
rep
cmpsb
jle
in
cli
and
dec
js
movntq
int3
mov
and
aad
or
popa
decb
je
inc
dec
add
in
sbb
hlt
ljmp
dec
sub
or
xor
xor
imul
arpl
lds
cmp
ret
inc
and
insl
adc
shr
ss
loop
pop
mov
ds
cmpb
jno
js
xor
mov
mov
cmp
into
pop
mov
fiaddl
ja
or
outsl
test
mov
jbe
xchg
mov
cs
scas
int3
mov
mov
mov
push
mov
xor
cli
inc
sbb
adc
rorb
or
int
ja
mov
rorl
repnz
mov
loopne
into
xlat
inc
xor
repz
push
movsb
cmp
out
xor
mov
stos
xchg
inc
sbb
iret
lret
call
ja
pop
and
mov
dec
xor
xor
sub
xchg
push
repnz
push
aad
xchg
cli
outsl
pop
mov
popa
push
pop
sti
sub
fsubs
iret
xor
cmp
inc
es
xchg
sbb
hlt
fisttps
lds
sub
adc
push
enter
mov
mov
pop
or
add
and
jle
les
sbb
or
int
rorl
into
jmp
pop
mov
aad
mov
cmc
fldl
jb
aaa
xor
cmp
test
add
xchg
aam
push
in
stos
cltd
xor
sbb
jl
out
sub
pop
loopne
insl
nop
push
sub
stc
dec
inc
sbb
or
mov
lret
cltd
jmp
fnstsw
sbb
repnz
mov
adc
or
rolb
xchg
lods
mov
test
push
sbb
out
push
inc
add
mov
dec
in
rorl
or
jp
fsubrl
shrl
sarl
stos
xchg
out
rorl
lods
movb
cwtl
pop
mov
xchg
arpl
push
movsl
inc
mov
pop
clc
sub
pushf
enter
insb
xchg
push
mov
jae
test
pop
aam
adc
pop
loopne
or
dec
stos
ret
mov
inc
popf
adc
sub
push
sti
lret
adc
or
inc
adc
adc
dec
out
pop
imul
popf
dec
xchg
das
in
mov
add
push
xor
dec
jg
roll
addr16
sarl
cmp
sub
push
lods
nop
outsb
test
rol
stc
jo
test
fwait
lds
pushf
gs
push
rclb
and
mov
jl
xchg
rclb
popf
shll
shlb
mov
outsb
pop
dec
sbb
insl
pop
shll
insb
fldl
pop
jecxz
dec
rcrb
in
fidivl
popf
dec
mov
dec
mov
and
cld
xchg
dec
arpl
out
lea
sub
jge
int3
jne
inc
mov
das
sbbb
pop
inc
jmp
pop
outsl
mov
pop
xor
scas
adc
inc
cmpsb
dec
cmpsl
imul
test
imul
add
fldl
loop
pop
mov
shll
inc
pop
jb
gs
jl
xchg
jae
xchg
testl
xor
push
ret
push
pop
in
jg
cmc
pop
pop
cwtl
cld
ror
test
or
add
push
test
mov
cwtl
adc
mov
mov
movsb
xchg
cmp
pop
xchg
lret
cwtl
xchg
or
jmp
pop
in
filds
in
pop
std
cmp
cmp
scas
sbb
adc
icebp
aad
out
insb
mov
jbe
mov
shll
lods
andb
xchg
das
roll
jl
xchg
sahf
clc
sub
ret
and
mov
push
loopne
stos
fldcw
dec
dec
cmp
bound
jns
insl
mov
xlat
mov
sar
iret
cmpsb
mov
jge
scas
xlat
and
push
xchg
out
and
mov
int3
pop
test
and
imul
sbb
xchg
leave
sti
movsl
sti
mov
sbb
adc
sarb
push
insl
or
jle
fidivl
pusha
fmuls
pop
dec
xlat
jno
mov
repz
insb
stos
outsl
scas
ret
mov
push
stos
pop
mov
out
lock
push
fwait
sbb
dec
ret
insl
movl
sti
stc
aad
subb
inc
and
pop
xchg
pop
cmpsb
mov
jmp
jl
int3
ja
cmp
mov
ss
jae
add
push
gs
in
xchg
add
sbb
dec
cli
call
lock
xchg
stos
push
xor
jle
jns
xchg
cltd
aas
jle
pop
nop
arpl
addr16
adc
daa
jbe
inc
insb
pop
mov
test
sub
xor
lea
mull
sub
lcall
xor
jp
arpl
pop
hlt
pop
xchg
loope
mov
fs
leave
insb
jae
sbb
arpl
sbb
adc
push
push
pop
push
and
push
mov
mov
aaa
dec
popl
xchg
pop
in
test
lcall
call
xor
sbbb
push
jge
repz
je
sub
lcall
mov
lods
xor
out
fs
xor
cmc
xor
nop
shlb
enter
jl
sbb
std
jne
pop
lods
gs
cmp
inc
pop
xchg
lods
jmp
push
rcll
sub
leave
xchg
or
pop
ret
in
sarl
push
pop
mov
leave
test
rcll
jg
movsl
sarl
mov
test
insl
push
push
mov
ss
lds
and
xchg
xchg
mov
ror
xor
ficomps
bnd
fstl
sahf
sub
dec
push
mov
enter
outsb
mov
fcoms
inc
mov
xchg
gs
xchg
shrb
inc
add
xchg
or
mov
test
out
test
jp
push
rcll
pop
cmc
cmp
cld
stos
ljmp
push
and
mov
and
cmp
jmp
hlt
addb
sbb
jns
mov
inc
pop
mov
call
ret
inc
jbe
xchg
xchg
inc
mov
gs
pop
inc
ret
jbe
sbb
lods
ja
shlb
pop
movl
stc
in
cmpsl
repnz
and
popa
hlt
xor
cmpsb
aas
sbb
mov
popa
cltd
ds
jns
mov
mov
lods
jne
pop
mov
fldenv
cmp
add
add
jmp
ds
sbbb
pushf
imul
movsl
insb
cmpsb
andl
adc
rcrb
andb
pushf
push
cwtl
loop
cmp
movsb
mov
pop
ljmp
addr16
aaa
mov
and
cmp
mov
js
sbb
or
int3
cmp
gs
shll
stc
mov
repnz
pop
addr16
stos
fcompl
and
inc
add
fmul
xor
mov
jns
cs
jns
push
xchg
sub
stos
dec
ljmp
sti
xchg
aaa
mov
xlat
push
rcrl
loopne
lret
aaa
andb
push
inc
sub
dec
dec
negb
mov
cmpsb
in
pushl
inc
ret
xor
rclb
sub
push
js
ja
mov
fisubrs
dec
out
test
mov
lcall
or
mov
cli
push
mov
adc
ljmp
call
mov
and
inc
sbb
push
xchg
aam
xor
xor
rorb
mov
fdiv
shll
or
mov
push
sti
push
xor
adc
shlb
push
je
push
scas
xchg
mov
xchg
mov
cmpsb
add
es
add
mov
rcrl
out
mov
or
xchg
push
mov
cmpsb
in
fs
mov
je
xchg
mov
adc
bound
dec
sti
pusha
mov
fbld
mov
ja
mov
cmp
mov
inc
pop
icebp
imul
pop
xchg
fwait
sbb
xchg
and
cmc
mov
lret
or
cwtl
sbb
clc
fsubr
jl
sbbl
add
mov
push
mov
rsqrtps
and
ljmp
fwait
notb
mov
cmp
pop
jno
js
dec
jnp
outsl
mov
pop
fbstp
sub
addr16
cmp
imul
mov
outsl
test
fwait
stos
out
loopne
shlb
xor
push
add
stos
inc
add
adc
out
out
insl
push
cmpsl
or
xchg
xchg
cmp
lods
add
cmp
xchg
cmp
insb
outsb
mov
mov
imul
es
xor
loop
sub
repnz
arpl
arpl
sub
pusha
and
lcall
sub
mov
daa
loop
xor
mov
mov
clc
loope
lds
mov
call
jb
pop
lods
xor
call
lcall
push
mov
mov
mov
aad
adc
in
mov
pop
fistpll
dec
call
add
movsl
scas
ror
fsubs
push
add
add
ss
mov
xchg
cmc
aas
int3
fs
mov
jl
adc
ftst
inc
push
xchg
push
jge
insl
in
lret
repz
js
pop
lahf
push
inc
jle
push
sbb
sub
movsb
fildl
mov
stos
adc
xor
movsb
je
cs
xchg
sti
lcall
mov
scas
shr
inc
lahf
aad
ljmp
xor
sbb
push
sbb
repz
adc
jbe
out
pusha
pop
lods
inc
sub
and
in
pop
movsb
popa
xor
mov
mov
test
gs
mov
add
mov
or
pop
xchg
pop
in
dec
pop
pop
pop
arpl
mov
test
add
outsl
test
mov
aam
mov
adc
inc
mov
jecxz
mov
fsts
shll
je
pop
dec
in
mov
xor
jmp
or
sar
add
jo
xchg
loop
pop
inc
pop
sub
outsb
lret
cmp
mov
test
cmc
add
in
pop
push
push
sahf
les
push
jne
outsb
mov
mov
jle
cmc
or
xchg
cli
aas
scas
sub
cld
clc
enter
xor
lds
xchg
pop
sahf
fs
fisubs
mov
inc
sub
aad
mov
jae
jne
out
bound
mov
imull
lock
and
sub
sbb
je
movsb
pop
dec
and
cmovo
jns
fadds
aas
cli
popa
out
add
cmp
test
xchg
push
cmpsl
ljmp
mov
stos
out
jmp
pop
ret
mov
sbb
fldl
lea
sub
fbld
mov
lods
pop
lret
in
xor
movsl
scas
fisubrl
notb
lret
mov
test
mov
insl
or
lret
jae
pop
cmp
call
adc
fists
xchg
xchg
lcall
or
dec
daa
jecxz
inc
or
and
pop
je
cmpsl
sti
stos
mov
dec
mov
pavgw
or
and
add
pusha
sbb
pusha
orl
pop
fistps
pop
lock
rolb
push
jnp
adc
lods
inc
fisubrl
jp
notl
jb
lret
dec
sub
je
subl
cmp
lock
dec
cli
iret
cmc
fisubrs
dec
cld
arpl
sub
sub
shlb
mov
dec
xor
jnp
pusha
push
mov
xor
push
pop
or
push
loope
push
mov
xchg
push
mov
imul
out
jmp
mov
fidivrs
cld
std
sbb
adc
xor
cmp
inc
add
pushf
scas
into
imul
sbb
pushl
mov
jg
call
gs
rcrl
cs
cli
scas
lcall
add
xchg
push
or
mov
stos
cmpb
cmc
fcompl
mov
stos
outsb
out
loop
cmc
scas
in
jb
push
inc
jnp
icebp
cwtl
or
xor
and
fwait
aam
xchg
pop
jne
fwait
sbb
arpl
xor
jmp
mov
dec
imul
inc
testb
cltd
icebp
out
ror
jp
lret
mov
aam
and
stos
pop
xorl
out
sub
adc
stc
aad
lds
mov
jecxz
sub
in
lea
int3
sbb
mov
dec
cli
pop
dec
insl
je
movsb
mov
adc
pop
sbb
ds
loop
test
arpl
and
xchg
cmp
xchg
add
jle
cld
rcrb
fwait
in
push
pop
xrelease
stos
sbb
cmp
rcrl
mov
pop
orl
jmp
xchg
ja
push
das
xor
dec
dec
mov
inc
pop
add
sbb
push
push
sbb
pop
push
xchg
fldt
ja
xchg
xor
int
push
xchg
mov
add
xlat
mov
rol
mov
push
xchg
adc
cld
subb
int3
addr16
lahf
repz
jb
aam
adc
push
scas
cmp
addr16
loopne
fs
inc
test
cmc
ffree
sbb
add
lret
dec
jge
idivb
mov
rol
dec
dec
jmp
andl
dec
jb
lock
push
push
jp
lcall
push
and
or
sub
sbb
jecxz
cmp
sbb
jmp
push
mov
dec
push
mov
jmp
xor
scas
pop
pusha
add
lahf
stos
test
ljmp
lcall
aaa
xchg
cmc
push
adc
std
push
dec
and
and
insb
hlt
popa
arpl
stos
out
jbe
push
bound
sbb
pop
add
mov
sbb
and
cmp
xchg
push
mov
pusha
sbb
sbb
add
inc
inc
loopne
arpl
out
xchg
bound
out
stos
int
sbb
mov
lcall
sub
ret
push
roll
and
mov
popa
in
inc
mov
jae
stos
add
sub
arpl
push
pushf
imul
inc
mov
rclb
call
mov
sar
movsb
out
test
cmp
mov
mov
xor
sarb
xchg
sbb
sbb
xor
push
mov
js
lcall
stos
stos
cmpsl
push
dec
adc
dec
cli
mov
test
dec
lods
cli
jg
ds
imul
cmp
jle
mov
dec
clc
in
mov
arpl
std
adc
mov
iret
into
pop
std
adc
pop
stos
jmp
push
mov
cmpl
inc
mov
cmp
dec
rcrb
aas
sarb
push
or
shrl
lds
aas
or
cmpl
cmp
pop
xor
cmpsb
xchg
cltd
mov
cmp
pop
int3
ja
adc
xor
xchg
jle
xor
mov
add
std
add
xchg
lret
ds
cmp
mov
pop
mov
cs
dec
sub
cmp
jp
xchg
xchg
outsb
lahf
pop
ret
cmp
jbe
mov
rorb
rclb
out
fs
dec
jl
ret
aas
movl
jns
es
nop
mov
mov
and
jge
mov
jno
xor
or
mov
or
popa
sbb
repz
mov
xor
int3
cmpsb
dec
xchg
shl
push
cmpb
xchg
xchg
mov
mov
push
cld
nop
sub
mov
push
pand
movsb
add
in
ljmp
xorl
mov
push
jp
sbb
imul
adc
pusha
nop
lea
idivl
xor
faddl
xlat
repnz
and
scas
faddl
lret
pop
push
aad
test
movsb
mov
adc
cli
sub
xor
add
loop
sub
push
and
and
push
ljmp
cs
and
mov
loopne
int
push
insl
sub
in
cmp
push
pop
fisttps
inc
inc
int3
out
sahf
adc
out
xor
loop
test
push
jb
stc
nop
repnz
push
xadd
push
xor
pop
xchg
notb
fwait
adc
dec
pop
inc
fisttps
int3
jle
push
fcoms
sub
adc
dec
sti
lock
jne
test
pushf
data16
sbb
xor
push
fwait
nop
fstsw
fisubs
mov
ret
out
imulb
insb
push
repnz
fs
mov
pop
sbb
adc
pop
push
pop
mov
leave
int3
cmp
les
addb
call
pop
fldt
or
lret
pop
mov
stos
lea
sub
das
add
scas
pop
xor
push
sub
add
sub
and
push
adc
pusha
jne
lds
mov
inc
test
jl
jbe
adc
push
mov
adc
inc
add
dec
dec
and
lahf
int3
xlat
push
movsb
pop
jle
sti
shlb
inc
stc
lahf
xor
inc
mov
gs
mov
sbb
dec
pop
cltd
xchg
mov
push
push
shrl
mov
pop
jp
fstpl
addr16
cmp
pop
mov
and
sub
and
pop
imul
mov
dec
inc
add
scas
mov
and
aad
xorb
outsl
je
rolb
inc
lods
sbb
out
and
sub
sub
out
inc
loopne
sub
adc
dec
movsl
lret
xchg
xchg
out
adc
or
mov
je
lods
cmpb
mov
outsb
adc
decl
arpl
fs
lcall
add
lcall
push
gs
psubb
adc
roll
int
aas
sub
pop
push
push
dec
and
pop
mov
sbb
or
jne
stc
shr
push
scas
repnz
push
inc
cmp
stos
adc
sbb
clc
xchg
inc
repz
mov
loop
in
push
out
sub
mov
add
dec
rcl
inc
loopne
jmp
icebp
sti
rol
das
loopne
mov
or
ud2
lret
mov
popl
jmp
arpl
cwtl
arpl
inc
bound
push
mov
dec
cmp
inc
bound
dec
les
sarb
dec
pop
mov
mov
and
das
fldt
adc
mov
sub
and
fadds
test
arpl
testb
jmp
xorb
mov
push
and
push
lods
xchg
lds
lcall
mov
add
addr16
movsb
fs
lret
incb
or
dec
mov
cld
pop
pop
leave
mov
jp
cmp
mov
mov
movsb
sub
inc
xchg
pop
push
rorb
and
into
and
ja
repnz
cltd
adc
movsl
fisubrs
icebp
mov
int3
out
pop
mov
jns
fs
mov
stc
add
rep
mov
xor
gs
add
popa
xchg
and
je
sub
fcoms
lret
sub
inc
out
and
dec
ds
xlat
fcmovbe
xor
adc
jle
out
ret
adc
pusha
aam
push
or
and
pop
mov
xchg
imul
fwait
lret
out
js
jb
je
test
and
mov
cs
daa
sbb
or
pop
cmc
cmp
jecxz
sub
mov
mov
push
enter
pop
lahf
ss
dec
rclb
repz
aas
mov
dec
loope
xor
adc
xor
test
push
les
adc
mov
xchg
push
imul
lea
mov
fmuls
mov
lahf
xor
fcmovnbe
and
test
add
mov
pop
fwait
notb
jecxz
xor
pop
iret
daa
loopne
cmp
cmpsl
xor
sub
inc
ds
ret
sti
add
jl
xchg
cmp
mov
and
cmp
aam
push
shlb
int
movsb
sub
fcoms
push
loop
pop
jo
insl
push
aaa
pusha
push
pop
mov
adc
inc
xor
mov
pushf
inc
push
popa
daa
fadds
mov
movsb
pushl
fs
clc
adc
inc
aam
ret
inc
jl
xor
pop
ja
jne
es
sahf
movsb
mov
idivl
sbb
sub
mov
dec
mov
push
mov
lock
ljmp
mov
pusha
lock
das
pop
lock
jp
add
dec
push
add
mov
std
js
ret
xor
fidivrs
lret
imul
mov
cmc
add
pop
lret
mov
or
inc
xchg
addr16
or
nop
add
xor
add
int3
push
push
mov
pop
shr
xchg
out
ds
out
mov
je
xchg
jb
loope
xchg
ja
enter
out
ja
cli
ljmp
enter
aad
xchg
lock
verr
lret
jbe
insb
nop
inc
xorb
insl
mov
test
sarl
test
mov
popf
out
je
clc
sbb
xchg
sbb
movsb
mov
cwtl
push
lock
sbb
loope
cmp
jmp
cmpsl
xchg
mov
shlb
dec
and
loope
repnz
mov
out
dec
into
jns
jo
cmp
mov
je
rorl
clc
ret
mov
sub
cltd
or
stos
add
push
push
ret
cmp
aas
push
mov
outsl
xchg
test
ljmp
aaa
pop
add
pop
out
popf
ret
je
das
ficomps
iret
inc
lea
pop
nop
lods
popa
out
in
leave
movsb
push
outsl
pop
cmpsb
test
jg
dec
cmp
fidivrl
xchg
ficoml
sub
dec
xchg
jmp
jnp
or
or
jnp
ret
and
dec
cld
imul
mov
push
fimuls
xor
ret
and
aad
push
xchg
insb
aas
repnz
mov
push
fisubrl
and
xchg
testl
lret
push
mov
xchg
and
shll
sub
imul
mov
cmpl
cmp
xchg
in
or
mov
cmp
shrd
lds
sti
cmc
jb
fcoml
xor
sub
sbb
add
test
push
je
sbb
cbtw
fsubrs
sarl
stos
insb
xchg
or
test
cmpsb
daa
sub
shlb
icebp
jne
test
out
and
shlb
or
cmp
out
add
into
in
lcall
xor
dec
inc
sub
cmp
loopw
lcall
movsl
rolb
leave
lret
fwait
subl
jbe
mov
dec
pop
or
sub
call
xor
js
in
mov
jmp
scas
movlps
add
add
xor
cmp
push
out
mov
fidivrl
adc
push
push
xchg
movsl
push
iret
inc
incl
inc
sub
dec
aad
jmp
les
leave
mov
rcr
nop
out
fs
lock
outsb
shll
sti
popa
int3
addb
movl
lret
dec
jge
fadds
rcrb
call
mov
lds
jnp
in
jecxz
xlat
mov
adc
filds
adc
sbb
mov
mul
test
push
popa
and
add
mov
dec
xchg
push
mov
cmp
js
in
cld
ret
lods
xchg
les
inc
or
push
jb
aad
cmp
movsl
and
fwait
xor
mov
rcr
or
call
sbb
cmp
cmp
mov
lods
movl
shld
call
das
add
insl
jo
repz
cmp
lods
addr16
nop
imul
inc
ds
ficoml
jb
mov
jg
ret
das
out
inc
jns
sub
out
push
sbb
pop
sub
call
push
jne
and
push
or
sub
loopne
pop
xchg
push
push
and
push
xchg
into
and
mov
pusha
dec
xlat
inc
int3
push
xor
add
add
sbb
and
push
dec
push
dec
setbe
mov
sub
test
xlat
repnz
out
cmpsl
rorl
or
push
test
daa
sbb
adc
jnp
stos
xor
fwait
pop
dec
ja
sbb
lds
sub
and
stos
dec
mov
or
arpl
xor
adc
cli
sti
fcoml
lret
scas
mov
inc
add
pop
push
pop
sbb
and
dec
jmp
push
shll
jno
sahf
pop
xchg
jle
add
xor
stc
mov
mov
cltd
icebp
shll
repz
jle
mov
mov
push
inc
jne
lods
sahf
fistpl
dec
sub
sbb
shrb
scas
jo
leave
and
stos
xchg
je
mov
data16
mov
aam
add
or
lret
jecxz
inc
sub
std
push
outsl
movsl
insl
fimull
outsb
xchg
fmulp
and
mov
lods
sbb
dec
push
mov
repz
cmp
sub
cli
ret
cltd
clc
dec
std
dec
enter
test
push
mov
dec
mov
int3
es
mov
inc
movsb
pusha
cmpsl
dec
mov
insb
mov
es
xor
mov
insb
add
adcb
loopne
ljmp
or
sub
repz
jp
pop
sbb
sbb
inc
addl
jp
imul
into
lahf
push
jnp
add
lods
sbb
jno
jae
movsl
adc
enter
sbb
xchg
and
mov
stc
data16
je
repnz
push
inc
sbb
jmp
in
mov
push
xchg
mov
decl
repz
lret
pop
mov
std
xchg
xchg
jbe
fidivrl
hlt
aas
loopne
mov
roll
jae
rclb
ret
dec
and
push
loopne
mov
std
imul
mov
dec
add
jno
inc
xchg
xor
movsl
jne
popf
fisubs
inc
push
rcl
ss
dec
cltd
mov
clc
popa
lret
or
push
push
or
gs
mov
sbb
push
jl
out
inc
lods
ss
inc
inc
gs
cmp
leave
dec
shlb
movsb
mov
arpl
xchg
inc
xor
jae
jg
pop
addr16
pushf
and
jmp
inc
nop
mov
out
icebp
adc
cltd
dec
int3
fcomi
pushf
out
pop
inc
int
pop
mov
mov
inc
test
mov
xor
loopne
scas
mov
xor
loopne
hlt
xchg
sti
roll
sbb
add
aam
mov
outsb
outsl
and
mov
and
push
je
cli
sbb
in
fcmovb
stos
fwait
test
sub
jno
mov
lea
js
inc
call
in
popf
cs
mov
and
mov
mov
cmp
cmpsl
mov
cmp
adc
fsub
jne
push
sub
ds
cmp
sahf
jns
enter
or
push
push
mov
ficoml
mov
dec
push
ret
jle
dec
sub
mov
adc
loope
fdivs
decl
and
inc
lahf
out
pop
loop
repnz
push
inc
pop
sbb
mov
cmp
mov
test
fdivrl
xchg
mov
jmp
lds
jo
pop
xor
gs
lea
mov
shr
pop
fxch
jle
xor
dec
xchg
rolb
sbbb
test
stc
scas
mov
mov
xchg
jo
cmp
ret
add
cli
rclb
jo
ret
sub
push
popa
pop
sub
and
pop
adc
push
xor
sub
int3
fisubs
inc
outsl
arpl
add
push
cmp
into
push
fmull
call
xor
lcall
dec
or
out
xchg
xchg
xor
add
mov
jbe
or
push
addr16
mov
loopne
xchg
adc
int3
ficomps
mov
adc
outsl
jno
jmp
es
mov
ljmp
mov
jge
addb
stc
xchg
arpl
mov
loope
insb
xor
mov
xchg
cmp
add
jns
push
push
jns
testl
xchg
aaa
cmc
jge
outsb
pushf
shlb
ja
ss
push
jmp
pop
jl
or
cld
sbb
insl
into
jge,pt
imul
xchg
cmp
mov
sbb
fcomip
js
in
and
push
xchg
xchg
dec
dec
lcall
mov
loop
inc
dec
ss
out
mov
jg
arpl
adc
push
addr16
sbb
daa
mov
in
nop
jb
xchg
push
outsl
lret
pop
dec
hlt
aam
pop
push
jae
cwtl
xchg
aaa
test
and
scas
push
add
mov
pop
fcomi
scas
cmc
xor
xor
or
call
add
test
mov
clc
inc
aas
and
ds
test
call
insl
leave
cs
cmc
in
sub
bound
subb
lock
sbb
lea
push
std
mov
out
mov
dec
push
push
push
lret
push
lea
pusha
leave
ja
je
mov
and
mov
mov
mov
sbb
and
xchg
repnz
mov
sub
jmp
scas
out
jne
push
aas
mov
sub
mov
fadds
mov
mov
push
lods
stos
or
jno
jno
pop
jge
cwtl
jmp
loopne
cli
lret
repnz
or
out
ret
xor
sub
aad
xchg
jp
pop
js
int
mov
or
push
sbb
mov
pop
xchg
adc
add
mov
insl
outsl
inc
clc
popa
or
int
sub
int3
fdivrl
es
and
sub
out
push
pop
pop
sbbb
xchg
xlat
jbe
cwtl
sti
imul
bound
pusha
pop
int
lea
roll
and
adc
jno
xor
jbe
loopne
cmp
jp
sub
jl
inc
inc
xchg
rcll
jp
cmp
mov
pop
push
pop
test
in
scas
pop
cltd
add
ret
add
sti
cmp
xchg
push
xchg
xor
mov
test
and
fisubrl
cwtl
enter
data16
loop
pop
cmpsb
push
dec
test
mov
aam
push
arpl
dec
insb
adc
jo
jecxz
jbe
popf
xor
loopne
cmp
sbb
mov
xor
jno
xchg
mov
shlb
in
repz
movsb
int3
or
popa
pop
cmp
aad
push
pop
fcoml
lahf
cmpsl
jge
mov
das
mov
or
dec
insb
es
in
adc
mov
shlb
push
pop
xchg
stos
mov
jne
sbb
sub
dec
sbb
adc
sub
xor
test
xchg
popf
aaa
mov
loopne
adc
in
dec
mov
movsl
ss
push
or
lds
cmpsl
fdivrs
ja
sbb
test
or
jmp
cmp
xor
call
stos
aas
negl
xor
addr16
jmp
mov
xchg
mov
ljmp
test
jo
mov
adc
mov
lret
xor
sub
push
pop
sbb
sub
lea
mov
scas
mov
mov
dec
sarl
adc
ret
sub
in
daa
in
dec
cmc
xor
inc
cmpsl
jecxz
ja
cli
fmull
sbb
pop
jae
pop
xor
or
int
lock
sbb
imul
movsb
imul
jns
jo
notb
xchg
int3
cmp
xlat
and
jmp
adc
arpl
push
out
outsb
cmc
fs
jg
loop
std
add
idivb
in
push
mov
insb
aam
add
loop
popa
push
mov
fxtract
add
cmp
aad
xchg
roll
cmpsl
dec
mov
int
mov
push
add
xchg
in
jns
xchg
mov
mov
js
mov
pop
test
sub
jae
dec
push
xor
jmp
dec
js
lcall
sbb
mov
mov
dec
mov
inc
mov
add
shrl
cmp
and
mov
shrb
pop
jns
add
lcall
adc
movsb
pop
fst
pop
xchg
mov
ja
or
rcl
adc
jne
or
ret
cwtl
fwait
es
out
sbb
xor
adc
mov
dec
testb
ret
cmp
adc
fwait
in
sbb
xchg
bound
mov
jo
sbb
ret
jg
lret
gs
pop
push
es
jle
cld
inc
cmp
stos
lea
and
int
mov
insb
jns
or
xchg
or
mov
cmp
pop
testb
outsb
pop
mov
bound
aaa
fnstenv
jmp
lods
aam
nop
inc
aaa
lcall
insb
push
or
sub
les
and
repz
push
je
ds
mov
add
das
pop
pop
in
shll
mov
imul
negb
rorb
push
and
adc
push
lods
and
mov
aaa
icebp
jo
xlat
in
dec
inc
xchg
jns
rclb
cli
mov
call
hlt
incb
xchg
in
or
pop
cwtl
xlat
push
xchg
sbb
das
out
mov
add
inc
out
mov
cwtl
jle
sahf
xor
xor
and
lds
jle
pop
sbb
outsb
mov
dec
sarb
xor
mov
sbb
push
pop
rorl
lods
mov
mov
fstpt
or
xor
popa
mull
jb
aaa
cmpl
rorl
xor
xchg
lret
xchg
push
mov
loope
lcall
dec
add
repz
stos
inc
add
mov
imul
loope
or
out
ror
cs
jbe
adc
mov
adc
add
mov
inc
les
addl
push
js
movups
sbb
js
loope
call
cmp
in
fnstenv
test
jmp
add
lahf
test
insl
sub
mov
push
pop
insl
ret
mov
bound
pop
fisubs
mov
leave
add
mov
inc
inc
hlt
ret
cltd
mov
xor
fisttpl
lds
xchg
sahf
jmp
repnz
jmp
or
jge
sub
cmc
dec
xchg
push
and
and
test
stos
push
xchg
rcll
in
scas
shr
aaa
dec
subb
jns
jmp
mov
dec
cmp
test
fidivl
clc
out
mull
rcr
mov
pop
int3
ljmp
int3
outsl
hlt
cli
mov
jne
pushf
rcll
xchg
pushf
lret
add
or
dec
sti
mov
ss
outsb
in
pop
adc
jo
bound
sahf
pop
sub
into
push
xchg
jl
outsb
ficoms
adc
stos
add
inc
jmp
cmpb
mov
mov
aaa
dec
inc
xlat
mov
out
jno
xchg
xchg
test
call
mov
lods
add
push
paddd
cmpsb
sbb
pop
std
insb
sti
push
mov
cld
sbb
ret
in
cmp
stos
or
daa
adc
sub
pop
fcmovb
test
pop
sahf
mov
pushf
and
jb
xchg
jecxz
push
and
out
dec
lods
cmp
and
clc
jecxz
shl
nop
sbb
jecxz
adc
cld
daa
pop
mov
mov
mov
mov
sub
pop
pop
jnp
ret
cmpsb
mov
sub
imul
sbb
xchg
jp
sbb
jae
mov
sarl
aad
lret
mull
inc
cmpsl
out
mov
movsb
push
or
jae
mov
outsb
nop
lahf
xchg
push
push
add
xor
cmpsl
scas
int3
sub
ss
in
into
aaa
leave
ret
es
stos
das
addl
and
mov
dec
cmpsb
lds
cmp
dec
leave
mulb
inc
adc
lea
aad
hlt
push
data16
lret
cmpsl
stos
push
pop
cmpsb
dec
adc
test
aad
inc
mov
jnp
mov
jo
push
cli
mov
nop
das
js
or
lea
daa
inc
dec
ss
nop
or
cltd
mov
inc
sbb
sbb
lods
ds
or
pop
jnp
jb
mov
cmpsb
xchg
adc
mov
int
sub
sbb
add
fbstp
ret
sub
and
cltd
push
adcb
fisttpl
fsubs
jne
push
inc
out
inc
sbb
xchg
or
xor
sbb
mov
pop
lea
mov
jne
mov
rclb
repnz
push
mov
dec
andl
inc
pop
icebp
neg
dec
pop
pop
mov
sub
addr16
or
jo
fistpll
sbb
in
scas
icebp
int3
ja
out
dec
sub
xor
stos
popf
adcl
negl
aas
pop
loopne
scas
cmpsl
xchg
scas
mov
add
xchg
adc
int
and
imul
mov
test
push
test
dec
inc
dec
std
outsb
leave
aas
stos
mov
jae
sbb
add
xor
sti
mov
xchg
mov
or
fmuls
inc
mov
test
stc
lahf
mov
push
test
daa
and
dec
mov
repnz
shrl
test
ss
sub
cs
dec
fs
pop
test
inc
negb
cltd
xor
xchg
mov
xchg
rcr
and
xchg
sti
sbb
inc
movsl
add
xchg
lds
pop
cmpsb
inc
cmp
xchg
jge
lods
mov
outsl
sub
or
popf
or
pop
pushf
push
icebp
into
into
sbb
pop
pop
in
gs
jae
mov
arpl
incb
rorb
leave
jmp
stos
push
and
aam
jmp
jnp
push
jb
dec
clc
cmp
xlat
pop
xchg
orl
add
in
jmp
mov
lds
mov
dec
push
jl
and
xor
xchg
mov
xlat
push
push
daa
loopne
jo
adc
mov
sub
scas
inc
push
add
sub
jl
dec
xor
push
mov
insb
mov
sbb
jno
mov
cld
es
cs
and
jmp
fdivl
loope
loop
leave
insl
push
ds
mov
mov
fsubrs
mov
dec
dec
mov
xchg
imull
mov
lods
nop
xor
adc
lahf
addb
scas
jle,pt
cmpsb
dec
pop
daa
or
xor
jg
lret
mov
mov
aad
sub
call
xchg
mov
sti
jae
addb
mov
ja
sub
cmp
cld
cs
dec
sub
and
test
pop
jmp
mov
mov
cld
pop
out
pusha
scas
or
stos
mov
test
repz
fdivrp
or
mov
dec
rcrl
in
ja
shll
jmp
mov
cmp
outsl
or
rolb
pop
xchg
xchg
scas
dec
movq
add
imul
add
or
jne
lcall
cmpsb
inc
or
movsl
xor
jns
rorl
adc
xor
mov
sbb
ja
xor
or
rclb
ficoml
xlat
xor
jge
mov
jecxz
cmp
std
ret
and
lds
fcomi
mov
lea
xlat
xchg
fdivp
mov
fidivrl
pop
cmpsl
add
movsl
or
movsb
xor
stos
fcmovnb
push
pop
dec
cld
pop
cmc
out
adcl
and
xchg
push
popf
scas
jmp
sub
inc
out
ret
stc
ds
inc
fdivrl
out
jnp
jge
sub
inc
xchg
hlt
das
scas
imul
add
test
out
imul
sbb
push
inc
daa
rclb
push
andb
and
push
push
adc
pop
sub
jne
mov
inc
and
addl
pop
add
jl
xor
mov
std
or
leave
mov
mov
mov
insb
dec
cmp
pop
pop
outsl
out
ret
adc
js
mov
push
shrl
gs
xchg
mov
jl
scas
mov
gs
xlat
mov
xor
mov
adc
inc
jp
mov
mov
outsl
or
insb
sub
jae
xor
popf
ja
mov
mov
hlt
cs
adc
pop
inc
in
mov
dec
pop
inc
ror
inc
xor
fwait
xchg
push
jle
rol
fsubr
or
ficomps
test
push
xlat
pop
sub
pop
lds
les
jmp
repz
mov
mov
shr
dec
add
sti
pop
mov
call
pushf
push
insb
imul
and
xlat
and
dec
sub
rcll
push
mov
push
sbb
sbb
js
dec
lock
inc
fisubl
das
jge
add
xchg
push
cmpsl
pop
das
xchg
adc
scas
std
xchg
mov
clc
pop
inc
outsb
jne
adc
and
movsb
jl
dec
jb
add
or
popl
clc
add
sti
leave
jnp
bound
js
pop
pop
inc
push
cli
rorl
pop
insb
imul
mov
cld
mov
and
pop
adc
ret
pop
inc
inc
je
mul
je
aam
movsl
xchg
aam
adc
xor
lods
pop
sti
sarl
enter
push
ss
rcrl
iret
add
das
jns
in
ret
push
push
lea
xor
ror
dec
rorb
sub
cmp
cmpsl
daa
hlt
ja
rcl
adc
xchg
jns
push
out
in
dec
lock
dec
add
les
jmp
xor
movsl
adc
repz
sbb
psubd
mov
js
insl
and
sbb
mov
push
out
jno
sbb
jbe
mov
and
sub
jg
sub
mov
icebp
and
in
loope
fcmovne
mov
cmp
into
divl
loopne
cmp
mov
or
xchg
es
inc
pop
adc
lock
cmpsb
cmp
jae
jne
push
clc
add
inc
aad
insl
nop
jbe
mov
mov
sbb
xchg
mov
xlat
popl
inc
pop
cmp
push
lock
test
mov
pop
push
cmpl
loope
lcall
dec
push
xchg
fwait
aaa
pop
pop
and
sti
in
mov
mov
push
add
jne
or
cmp
jg
lahf
aad
data16
out
fdivrl
rcll
cli
std
mov
lock
or
push
and
dec
pop
xor
cmp
pop
fs
push
mov
hlt
fwait
push
popa
cmc
xchg
mov
test
enter
xchg
int3
xor
es
lods
fisubs
lret
prefetchw
or
mov
aam
repnz
mov
orb
add
cmpsb
loopne
clc
adc
and
dec
pop
adc
mov
stc
and
sbb
pop
loop
dec
daa
test
sti
aad
or
or
inc
icebp
xor
jno
adc
dec
adc
or
push
xchg
outsb
mov
imul
scas
cltd
repz
mov
xchg
aad
xchg
inc
xlat
xor
loope
rorl
inc
jecxz
hlt
xor
call
outsl
push
data16
pusha
sub
dec
arpl
sbb
sub
je
lahf
aad
cltd
cltd
pop
jg
or
fldz
adc
dec
je
call
adc
push
sbb
sbb
mov
push
push
mov
je
inc
jbe
add
mov
movb
call
xchg
cld
sbb
jmp
lods
fs
in
adc
scas
sbb
mov
lcall
and
inc
loop
cmp
daa
addr16
add
dec
mov
cmovo
lods
xor
loop
es
mov
clc
hlt
insb
fmuls
adc
bound
mov
pop
jge
rclb
xor
std
in
mov
shrb
cmp
popa
adc
jbe
mov
ss
dec
mov
mov
lock
xor
cwtl
mov
pop
lock
jb
lret
mov
fwait
mov
jno
pop
mov
test
inc
arpl
xchg
int3
mov
or
scas
ror
sbb
xor
lret
cmpsb
push
movsb
cli
xor
loope
jae
jg
and
fcmovnb
inc
bnd
mov
cld
pop
fsubrs
xor
shl
sbb
in
jno
xlat
push
out
sbb
or
faddl
xchg
or
pop
mov
testl
push
or
and
idivb
and
das
mov
push
cmpsl
cltd
je
test
mov
add
push
sbb
cmpsb
cmp
shlb
stos
adc
inc
mov
inc
inc
shrl
sub
mov
jl
pop
mov
mov
mov
cmpsl
push
xchg
clc
cmp
push
sub
jno
cmp
cs
in
mov
lret
aas
cld
pop
jns
rorb
out
aad
shrb
cmp
jb
xchg
or
imul
rcll
fidivl
pusha
lock
sbb
sub
push
lcall
or
inc
mov
fmuls
std
cmpsl
movsb
push
fnsave
jp
push
jmp
sub
mov
xor
hlt
jo
fidivrs
ds
out
insl
push
adc
inc
std
divl
jg
outsl
cmpsl
repz
lcall
dec
js
xor
pop
aam
mov
icebp
pushf
sub
xlat
lahf
lds
mov
das
sbb
sub
pop
sbb
fcomps
inc
stos
xchg
xchg
out
xchg
dec
dec
inc
subb
les
sarb
sbb
xchg
add
push
mov
std
out
fisubrl
xchg
mov
inc
pop
mov
jp
pushf
push
scas
test
xchg
xor
cmp
push
jg
pop
stc
jmp
shl
xchg
cmp
testl
je
ret
lcall
arpl
mov
lods
fdivl
push
dec
xchg
mov
insl
cld
popa
xor
imulb
pop
test
aas
frstor
arpl
roll
pop
jnp
push
push
sub
subl
inc
dec
lods
out
shlb
sub
ljmp
ss
inc
push
mov
daa
out
stc
push
divl
dec
mov
mov
sbb
mov
xchg
mov
lock
cltd
inc
adc
loope
cmpsb
not
push
xor
and
pop
clc
pusha
inc
push
es
ret
dec
jmp
cmp
test
mov
mov
mov
xchg
jnp
into
ljmp
mov
add
sbb
in
shll
cs
adc
jne
mov
lds
add
in
sub
fmul
ds
add
adc
jbe
inc
repnz
mov
daa
scas
sbb
das
outsl
clc
mov
iret
mov
movsb
addl
jno
and
stc
cmpsb
nop
lret
mov
daa
loop
mov
cmc
sub
jbe
xchg
xor
popf
pop
mov
pop
lea
pusha
mov
enter
add
pop
xchg
adc
fists
add
xchg
cltd
mov
data16
adc
dec
cmp
xor
dec
scas
push
xor
sbb
dec
jecxz
xor
jl
xor
jns
pushf
fistpl
arpl
mov
bound
pop
inc
aas
lods
mov
in
out
mov
sbb
push
xchg
sbb
pop
insb
jae
pop
add
out
arpl
loopne
daa
jno
dec
test
out
cmp
push
adc
lahf
jmp
lahf
sub
cmp
out
int
sahf
xchg
js
xchg
cltd
or
ret
fcmove
jno
jl
cmp
scas
xchg
cmp
push
ds
jecxz
cmpsb
lret
adc
push
jns
loope
sti
jnp
lret
test
fiaddl
cmp
mov
sbb
imul
repnz
mov
add
test
xchg
push
jg
lahf
xchg
sub
sarl
cmp
sub
ja
or
jb
pop
pop
pop
xor
int
hlt
cmp
inc
test
ja
test
in
out
pop
into
jge
mov
mov
in
push
mov
mov
push
jb
and
mov
sub
scas
mov
movsb
loop
repz
mov
jmp
in
cmp
xchg
pop
shl
stos
mov
xchg
daa
enter
outsb
in
pop
stc
cmpsb
xor
movsl
add
xchg
lret
cmp
add
mov
fs
int3
icebp
ret
mov
in
push
inc
push
movb
pop
lahf
lods
movsl
mov
cmpsb
xlat
mov
test
push
sub
pop
mov
lcall
test
scas
divl
pop
mov
mov
and
test
or
out
pop
movswl
push
fmuls
in
repz
push
sbb
rclb
xchg
fnstsw
ljmp
sbb
jl
jg
into
add
pop
push
test
adc
in
and
xor
sub
xchg
xor
lods
pop
int
cmpl
mov
insb
add
cmp
cmpsb
xor
lcall
add
pop
rcl
xchg
jo
dec
jmp
ret
mov
mov
and
daa
stos
pop
mov
clc
popf
leave
xchg
add
leave
loop
xor
pushf
test
sub
fisubrl
jne
jmp
inc
xlat
dec
add
push
xchg
dec
xor
sub
cmp
inc
in
popa
xor
insb
mov
lea
cmp
les
jg
or
fimuls
fsubrl
imul
mov
mov
fisttpl
push
in
bswap
pop
push
cmp
pop
xchg
je
test
xchg
mov
and
add
lret
or
push
dec
std
lret
cmp
pop
popa
rcrl
mov
iret
movsb
add
and
pop
dec
lret
mov
test
test
mov
sbb
stos
jp
imul
mov
xor
repnz
jmp
sahf
out
sbbb
inc
rcrl
fsubrl
mov
ret
aam
rorl
js
data16
sbb
jmp
sub
clc
cmp
push
mov
insl
pop
sbb
add
stos
bswap
in
jle
dec
push
test
aam
xor
pop
pop
sbb
cltd
divl
pop
scas
push
or
and
je
xchg
icebp
and
jge
lret
in
test
inc
aas
loope
jb
loopne
aad
mov
mov
lea
push
or
popa
xchg
dec
push
test
xchg
adc
inc
imul
xchg
out
cmc
mov
stc
loopne
rorl
pop
lret
sbb
psubb
bound
mov
cmp
rcrl
cld
mov
xor
mov
aas
mov
test
cmp
cld
in
pop
inc
adc
push
add
out
repnz
lret
dec
movsb
pop
clc
gs
test
sti
push
fwait
hlt
jne
gs
inc
rdmsr
push
inc
or
xor
lods
cmp
adc
stos
iret
mul
dec
cmc
stos
loop
dec
xlat
adc
and
fs
aam
mov
test
inc
aaa
movsb
inc
js
sbb
lretw
sub
mov
mov
push
out
addr16
or
outsb
pop
adc
cmp
fs
cmpsl
fwait
adc
dec
test
dec
cmp
sbb
hlt
adcb
outsl
pop
es
aad
rcrl
adc
mov
inc
or
xor
cmp
mov
mov
jae
lret
nop
aas
xchg
jno
std
fsts
mov
sbb
jmp
or
cmovle
xchg
jecxz
sub
xchg
dec
shrb
out
rcrb
xlat
pop
cmpsl
sarl
pop
or
xor
faddl
out
xchg
add
movsl
cmp
push
xchg
out
faddl
xchg
subl
cmp
inc
dec
add
pop
dec
mov
xchg
std
mov
cmp
gs
push
fiadds
push
cli
scas
jno
or
rclb
stc
out
cli
add
mov
int3
sti
testl
jnp
jge
xor
int3
push
mov
daa
fidivs
test
pop
enter
cmp
es
mov
sti
push
imul
xor
fcomps
mov
mov
adc
mov
mov
andl
xor
testb
and
dec
or
dec
movsl
loopne
pop
add
bound
inc
das
pop
repz
js
xor
clc
jl
dec
and
cmp
aam
lods
mov
cmp
push
push
ja
sbb
lea
fisubs
mov
cmp
data16
test
in
mov
dec
or
lods
cs
mov
dec
test
movsl
push
jne
iret
add
mov
mov
lcall
add
cmp
movsl
pusha
cmp
sahf
mov
fldz
es
cmp
js
sub
push
int3
push
imul
mov
add
popa
push
pop
popa
mov
jl
and
jmp
adc
sbb
jl
sti
mov
into
xchg
and
inc
ja
stc
cmp
jge
pop
push
pop
mov
fcmovbe
iret
pop
rorb
cli
pop
aam
test
das
addr16
lcall
je
ret
into
loopne
orb
push
xchg
xchg
lret
dec
or
ds
fisttpll
mov
add
jle
cmc
add
lret
shrb
jle
out
sbb
rcrb
sub
mov
fistps
movsb
jl
aas
push
aad
sub
fsub
sbbb
repz
mov
into
or
push
inc
call
xor
cmpsb
cmpsb
jnp
hlt
in
pop
insl
or
outsl
imul
ret
je
call
dec
pop
mov
mov
sub
push
std
or
std
and
and
dec
inc
ror
iret
pushf
ja
lcall
pop
xor
jb
rorb
popf
adc
popf
mov
dec
or
push
xor
cwtl
mov
push
jecxz
add
cltd
jne
mov
cmp
lret
xchg
lea
cltd
mov
xchg
jp
sti
push
insl
je
sub
sub
rcrl
cltd
shrl
mov
sbb
stc
inc
enter
enter
and
add
ds
fidivrl
mov
test
adc
call
xor
mov
fldt
mov
rcrb
cltd
ficoml
lods
cmp
inc
xchg
push
pop
sar
push
jae
lret
popf
pop
jle
adc
cmpsb
scas
inc
xor
dec
xor
stc
sbb
mov
push
in
mov
nop
lret
push
iret
into
cli
mov
popa
pop
mov
or
mov
clc
stc
div
lock
mov
fldl
xlat
and
addl
sub
sub
and
cwtl
insb
xchg
lret
sbbb
call
cmpsl
xchg
sbb
xor
mov
cmc
imul
or
sub
xchg
and
cmp
xchg
add
push
ret
push
mov
xor
in
clc
inc
lcall
mov
cmc
dec
ljmp
popf
push
mov
mov
not
push
sbb
outsb
mov
and
loop
xchg
pop
xor
adcl
mov
imul
add
and
mov
ret
inc
outsl
xchg
lea
pop
pop
lret
out
xchg
xor
jle
das
insl
xchg
mov
dec
and
add
mov
jg
popf
adc
adc
mov
movl
push
mov
sub
sub
leave
ja
xchg
dec
cmpsl
pop
cmp
mov
adc
xchg
jae
out
jno
divl
in
int3
cli
xor
dec
imulb
pop
adc
daa
test
pop
cli
jle
adc
xchg
mov
pusha
jb
clc
fisubl
loope
inc
fs
clc
push
sbb
mov
pop
mov
out
fistpl
ret
pop
pop
pop
call
push
cmovno
ret
ror
push
sub
sbb
js
jns
cmp
xor
xchg
jbe
test
cmp
testl
jae
hlt
xchg
lcall
repnz
mov
cmp
lock
mov
ljmp
cmp
iret
pop
sahf
push
mov
sbb
loopne
sbb
jne
lds
jae
xchg
movsl
in
xchg
iret
push
xchg
pop
adc
push
mov
dec
lcall
cmpsl
xchg
push
dec
mov
lds
or
pop
addr16
dec
popf
in
mov
xor
inc
cmp
xor
pop
sbb
push
dec
lcall
call
jae
insb
dec
adc
cmp
xor
sub
mov
aaa
shll
jne
ror
loope
test
pop
data16
faddl
lea
jge
outsb
adc
aaa
cmp
jp
nop
lea
add
incb
mov
xchg
inc
testl
dec
add
cmp
push
mov
ljmp
pop
mov
outsb
aad
push
jno
flds
push
and
fcoml
xchg
pop
mov
jge
and
and
xchg
jmp
or
nop
inc
adc
stc
jle
jo
adc
mov
jp
orl
fmull
inc
loope
and
push
lods
into
inc
pop
push
push
sub
adc
imul
push
xchg
sub
sub
notl
jb
clc
add
adc
inc
dec
das
ljmp
insl
insb
and
adc
push
cli
bound
push
lods
xor
icebp
pop
dec
lock
lds
mov
pop
dec
mov
cmp
stos
mov
xchg
push
mulb
jle
cmp
pand
pop
and
mov
sbb
ret
mov
push
sbb
dec
mov
push
mov
and
jl
adc
adc
inc
out
inc
push
add
insl
pusha
push
push
push
and
lea
jl
push
or
push
adc
jle
stos
pop
jge
pop
push
bound
mov
or
mov
daa
jmp
or
negb
cltd
xchg
shll
movsl
sub
pop
mov
ret
inc
mov
outsb
jmp
repnz
rcrb
xchg
mov
imulb
push
roll
notb
pop
lret
adc
aas
test
fmull
push
hlt
xchg
push
jbe
lods
clc
dec
cltd
xor
shrl
dec
cmp
jg
xchg
imul
aas
addr16
stc
mov
adc
inc
stos
fs
mov
subb
outsl
stos
lcall
xor
outsl
scas
addb
cmpsb
mov
sub
xor
jge
popa
fwait
pop
out
push
aas
sbb
push
mov
jns
and
add
adcl
faddl
mov
jmp
loopne
ret
jne
xor
in
lea
repnz
mov
xchg
adc
inc
repnz
pop
out
lret
sahf
stos
rclb
adc
js
repnz
push
ret
lea
out
shl
push
lahf
mov
into
mov
xchg
dec
xor
lahf
sub
jl
nop
jnp
pop
adc
aaa
jno
cld
add
cmpsl
sbb
mov
mov
pop
mov
imul
push
xor
outsb
mov
jne
add
push
cmpsl
sub
lods
cmp
mov
dec
jecxz
sbb
inc
mov
inc
mov
cmpsl
sbb
cmp
xchg
add
dec
mov
lret
movsl
and
jp
xor
ja
xor
dec
mov
out
out
outsl
and
lret
jge
arpl
push
fwait
mov
pop
cwtl
or
mov
shrb
and
enter
rorb
or
addr16
jl
push
gs
sbb
adc
out
mov
mov
iret
sbb
movsl
orl
arpl
fisttpl
and
add
jns
subb
mov
mov
mov
add
mov
loopne
xor
notl
adc
and
inc
cmp
jg
ja
int3
jg
sahf
inc
inc
fcomp
clc
fwait
cmp
dec
mov
jbe
pop
cmp
enter
jno
cli
jl
lds
xor
test
or
mov
shrl
bound
idiv
sahf
popa
gs
inc
add
jge
in
divl
xchg
lahf
xchg
xchg
sub
mov
add
out
sbb
cmp
pop
xchg
out
mov
and
sub
mov
adc
cli
xchg
in
fists
or
xor
daa
xor
int3
pusha
adc
xchg
shlb
sahf
jne
aaa
cmpsb
sbb
xor
inc
adcb
pusha
inc
scas
fs
xchg
and
scas
loop
inc
inc
cmp
push
out
or
and
gs
fimuls
ljmp
bound
adc
xchg
loope
rcr
xchg
inc
outsl
out
jns
push
inc
adc
dec
push
scas
jns
mov
sub
addr16
sub
mov
sub
add
push
jnp
pop
insl
cmp
jle
adc
xchg
cmp
lods
dec
pop
push
mov
xchg
sub
cmp
cmp
std
or
push
int
fisubrl
or
sub
out
jno
sarb
ss
mov
inc
push
add
jnp
stos
add
push
in
xchg
arpl
mov
jmp
pop
cmp
sub
or
bound
shl
push
repnz
flds
addl
test
add
dec
mov
call
cmp
sub
cmp
add
ret
push
cs
mov
popa
or
or
test
cmovge
inc
jle
ds
add
stos
mov
xor
out
jo
scas
mov
stc
sbb
jge
cmp
enter
test
loop
stos
mov
xor
pop
fsts
js
leave
add
push
out
fists
test
addr16
sub
mov
ror
xor
dec
test
mov
out
in
jge
jno
jnp
jo
psubw
add
add
adc
out
mov
cmp
sbb
lock
push
sbb
std
add
test
push
rcrb
mov
idivl
fcoml
jb
mov
add
push
shrl
in
push
adc
cmp
mov
rclb
mov
outsb
push
insl
stos
xchg
lds
dec
mov
pop
faddl
lcall
call
jle
push
insb
sbb
negb
xor
jbe
out
nop
pop
sbb
rorl
xor
jb
ret
mov
inc
add
jmp
pop
pop
stos
pop
popl
xor
mov
cli
sbb
cmp
inc
xor
or
pushf
or
test
test
imul
mov
add
lret
shll
pop
adc
jno
xchg
mov
cltd
inc
lods
mov
xchg
xchg
mov
aam
add
popa
jmp
xor
cmc
out
dec
pop
xlat
mov
imul
sti
xchg
insl
fcoml
and
mov
adc
mov
mov
mov
adc
outsl
repnz
lret
cltd
mov
or
fidivrl
fwait
jmp
or
push
adc
testb
scas
sub
jecxz,pn
mov
and
push
lds
push
inc
popf
and
xor
into
and
mov
push
pop
lods
arpl
loop
mov
fnstsw
aaa
adc
hlt
repz
les
inc
repz
pop
aam
aaa
cmpsb
xor
mov
cmpsl
mov
sbb
mov
mov
lods
mov
pop
lods
enter
mov
sub
cld
push
push
sar
das
mov
xor
lahf
cmpsb
cmc
lods
jecxz
int3
push
lods
jne
bound
adc
and
adc
jmp
or
and
ret
or
dec
inc
and
movsl
bound
adc
cld
sub
xlat
fldenv
bound
pop
pop
mov
add
pop
adc
pusha
das
sub
fs
jno
arpl
add
int3
sub
mov
and
icebp
pop
not
pop
icebp
sub
fiadds
stos
repz
fdivs
push
cwtl
cmp
leave
in
push
loopne
push
or
mov
fwait
jge
mov
cli
in
inc
sub
movsl
xor
insb
in
neg
jge
loopne
add
cmp
cmp
cmpsl
mov
sbb
cmp
into
pop
lcall
pop
inc
inc
imul
movsb
push
mov
pop
cmp
fidivrl
cltd
andl
ss
adc
jg
ror
push
in
jnp
fwait
inc
sub
jnp
hlt
cmp
sub
jae
sbb
xchg
sub
push
xchg
mov
enterw
jne
rcrb
aam
xchg
repnz
repz
js
push
arpl
dec
push
fdivl
pop
cmp
lea
cmp
lea
mov
cmp
mulb
fnstsw
dec
adc
aam
dec
add
fxch
leave
xchg
loop
push
cld
lods
cmp
xchg
andl
movsl
push
pop
mov
out
inc
shl
iret
adc
test
das
or
pop
dec
push
sub
sbb
pushf
jg
and
out
cmc
or
and
mov
pop
sub
stos
lcall
imul
mov
inc
pop
cwtl
in
and
mov
add
xor
rcl
pop
jno
ljmp
adc
aas
adc
push
or
hlt
outsl
sub
js
adc
notl
rcrb
mov
jno
mov
mov
jecxz
add
je
adc
mov
jb
xchg
rolb
inc
add
test
mull
movsb
and
pop
pop
into
xor
push
push
cmp
push
mulb
adc
cmpsl
pushf
and
in
jle
movsl
test
mov
mov
adc
repz
outsl
xor
cwtl
or
inc
sub
or
jp
mov
es
cmp
aam
into
push
in
add
lods
repz
lock
lahf
sahf
lds
and
pop
cmp
sahf
xchg
das
inc
mov
add
push
int3
inc
mov
sub
sbb
aas
outsl
outsb
out
jae
xchg
jb
jmp
in
rorl
cvtdq2ps
jmp
mov
inc
mov
push
push
fnstcw
push
and
enter
push
loopne
and
xor
repz
push
pop
add
hlt
mov
add
add
jle
lods
lret
test
pop
js
lock
mov
imull
scas
pop
mov
sbb
or
movsl
pop
add
xchg
add
lds
setg
daa
adc
push
mov
adc
dec
incl
sbb
mov
lcall
mov
push
imulb
roll
lcall
repnz
mov
int
ja
jb
andb
loopne
lods
je
jne
movsb
jo
bnd
aaa
xor
add
dec
negl
pop
push
ret
addb
and
rorb
jmp
in
mov
push
in
icebp
test
shlb
sub
adc
adc
mov
jo
rorb
lods
clc
out
mov
scas
rolb
or
lea
push
push
idiv
mov
mov
mov
pop
pop
adc
lock
add
pop
xchg
movsl
inc
in
sbb
cmp
push
lcall
push
inc
sbb
pop
inc
sub
sbb
lret
push
ret
jp
jae
into
pop
add
loop
push
cmp
xor
mov
xor
data16
mov
xchg
mov
movsb
xorb
imul
inc
mov
sti
add
push
aad
icebp
inc
or
fcmovb
lahf
lods
push
call
mov
daa
mov
rclb
add
push
ficomps
xchg
test
in
push
sbb
cmp
sar
scas
fidivl
les
pop
pusha
xchg
addr16
jl
ret
jnp
and
add
hlt
and
loop
add
cmp
dec
das
xchg
test
adc
idiv
ljmp
inc
push
out
mov
pop
sti
arpl
ja
aad
cmpsl
inc
jbe
vpslld
loope
pop
dec
mov
into
sub
dec
arpl
inc
dec
pushf
push
lods
pusha
adc
insl
push
popa
mov
sarb
sbb
jae
shr
push
jp
lret
jmp
jb
adcb
pop
lahf
mov
sbbl
ret
hlt
lds
inc
je
pop
fstpl
lock
adc
cmp
inc
cmp
cmpl
cmp
testl
sbb
or
loop
inc
aaa
lret
push
lcall
mov
stc
inc
mov
mov
pop
test
jns
jl
mov
ja
dec
js
enter
fidivrl
pushl
insl
cs
repnz
jo
lods
mov
scas
sbb
dec
sbb
sub
cs
jbe
insb
or
cwtl
mov
cmp
cld
mov
pop
roll
gs
inc
shrb
jnp
adc
push
and
or
mov
xor
and
out
in
stos
inc
daa
jb
into
sbb
push
mov
adc
fimull
and
addb
rorl
mov
mov
xchg
sbb
int
xor
and
mov
subb
aaa
fmull
add
repz
sar
mov
mov
and
scas
rorb
subb
pop
rcr
scas
pusha
lds
pop
adc
or
adc
sub
jp
in
cmp
ret
mov
mov
push
iret
pushf
mov
imul
sub
mov
dec
ss
stc
sbb
jnp
cwtl
mov
push
test
xchg
cmp
mov
cmpsl
fists
pop
or
sbb
sti
push
mov
or
xor
push
mov
mov
dec
push
jae
xchg
sub
iret
mov
inc
jge
xor
or
sbb
ret
mov
pop
inc
jl
jg
cmpsb
mov
add
cmp
fcmovnu
mov
sub
push
adc
push
push
aas
cmpsb
jecxz
xlat
int3
pop
mov
jmp
or
sahf
fld
mov
cmpsl
lock
ffreep
daa
push
dec
sub
dec
cmp
sbb
call
mov
fcoml
mov
inc
outsl
fs
cli
cmp
cwtl
neg
adc
icebp
xor
mov
enter
xchg
out
pop
xorb
clc
leave
sub
out
sbb
xorl
subl
xor
cmpsb
xchg
adcl
xchg
or
cmc
push
es
cmpsb
int3
sarl
dec
cmp
popf
std
push
subl
dec
push
ljmp
loope
leavew
sub
outsl
push
lcallw
xor
ljmp
push
pop
aaa
adc
pushf
mov
inc
pop
push
jno
push
les
inc
jns
subl
mov
jge
inc
adc
xchg
rolb
std
ss
nop
fstps
shlb
iret
das
outsl
pop
ret
adc
aad
cld
mov
lea
lcall
jle
mov
stos
test
inc
dec
add
and
shl
daa
pop
push
repz
and
sub
mov
jp
fwait
hlt
sub
dec
and
in
jmp
mov
adc
or
jge
ljmp
mov
fwait
add
lods
mov
aas
push
ds
out
lcall
sbb
stos
or
enter
jnp
leave
sahf
iret
mov
cmp
sarl
lods
das
adc
insl
lret
push
int3
sub
sahf
xor
inc
xchg
in
mov
gs
or
shlb
adc
xor
psubusb
push
push
mov
cltd
xor
sub
xor
stos
mov
out
sub
fstps
push
cwtl
mov
and
test
pop
mov
cli
push
insl
mov
das
psubsw
fcmovnu
shr
call
popa
jge
add
sbb
push
dec
bound
std
pop
inc
push
xor
popa
mov
lret
jbe
mov
mov
gs
enter
mov
push
cmpb
shll
into
int
lock
pushf
sti
out
mov
pop
test
xor
mov
imul
sub
jo
pop
sub
in
mov
add
xchg
adc
mov
mov
push
faddl
pushf
sbb
inc
jle
push
xchg
xor
mov
push
mov
inc
fdiv
ss
xlat
fimuls
fisttpl
xor
pop
cmp
xor
xchg
fldt
cwtl
cmp
leave
ja
aaa
mov
pop
rorl
and
push
and
stc
lahf
sub
lcall
movsl
inc
ret
xorb
shl
popa
mov
jcxz
mov
lea
int3
fwait
adc
lcall
sub
sarl
lods
push
daa
mov
sub
fidivrs
jns
jnp
adc
push
xor
inc
jp
stc
mov
and
sbb
adc
aam
fwait
insl
orb
dec
es
int3
push
xchg
ds
adc
jns
add
mov
out
jl
inc
outsl
sub
ds
sub
sub
push
je
sbb
jns
xor
js
fsubrs
je
mov
inc
jmp
xchg
sbb
cs
jns
xchg
mov
jne
jns
mov
loope
sbb
popa
and
shll
por
mov
mov
insl
jmp
filds
and
pop
inc
inc
or
enter
repnz
inc
sub
jg
scas
xchg
ret
or
pop
xchg
in
in
and
cld
pop
shll
mov
movsl
dec
and
mov
xor
movsb
pop
mov
ret
add
sti
cmpsb
pushf
sub
mov
dec
mov
clc
or
mov
aam
inc
sub
xchg
sub
nop
pop
lret
xor
mov
xor
jne
mov
jae
shl
sub
mov
imul
add
test
dec
cmp
dec
lods
cwtl
pop
pop
inc
mov
cmp
dec
dec
out
xchg
subl
sbb
inc
cmpb
cmp
mov
shlb
mov
mov
lods
arpl
call
das
pop
cmp
sbb
pop
jo
jge
jp
and
fldt
pop
jecxz
shlb
int
aas
mov
lea
aad
sti
lods
idiv
gs
rclb
pop
adc
and
dec
mov
stc
repz
or
fstpt
es
ss
popa
iret
popf
jb
cmpl
push
xchg
cld
cmp
subb
loopne
and
xchg
enter
adc
stos
and
outsl
mov
ljmp
push
dec
shlb
add
fwait
and
imul
cwtl
cmpsb
enter
jl
inc
ret
or
cmp
icebp
inc
mov
mov
jbe
adc
mov
into
lret
stc
mov
repnz
xor
fimull
dec
sti
or
jo
sub
dec
test
push
out
dec
aaa
dec
popf
lea
gs
aad
lahf
cli
je
mov
jae
mov
jne
sub
pop
xchg
push
leave
mov
or
movsb
add
sbb
sbb
nop
jbe
push
int3
subl
pusha
loop
divl
insb
xor
mov
mov
lods
or
in
ss
push
inc
push
aam
xchg
mov
or
and
cmp
insl
or
pusha
fdivp
dec
jmp
out
jecxz
mov
jle
roll
dec
or
mov
icebp
outsb
mov
sti
cmp
add
jmp
fstl
mov
jg
sahf
data16
sub
imul
adc
cs
in
call
arpl
addr16
pusha
addr16
data16
stos
mov
push
push
xor
lea
xchg
push
mov
mov
or
add
xchg
add
bound
std
ljmp
shll
fbstp
jmp
outsb
repz
jl
pop
cmp
jnp
bound
and
scas
push
cmp
inc
daa
ja
sahf
sti
push
xor
mov
push
add
jns
add
fwait
push
jg
stos
jns
imul
je
mov
mov
in
push
adc
insb
cmpsb
mov
push
sub
out
aad
and
aad
mov
adc
outsb
jmp
pop
test
lahf
enter
push
aad
loop
mov
inc
bound
sarb
pop
jl
jg
sbb
stos
cwtl
das
pop
dec
pop
ljmp
jp
fdivrs
je
cmpsb
or
repnz
fwait
lret
mov
into
fsubs
repz
addb
clc
xor
mov
lods
addr16
addr16
and
aaa
mov
push
aad
jl
inc
inc
adc
ret
out
or
ret
dec
pusha
pop
mov
insb
stc
sbb
mov
dec
cltd
push
adc
pop
dec
xor
xchg
sti
jo
inc
xchg
sub
dec
dec
push
add
adcb
and
inc
insl
iret
xchg
scas
daa
and
add
push
cmp
aas
int3
das
mov
adc
lea
ja
jecxz
sbb
mov
push
int
scas
data16
lcall
repz
iret
inc
cld
mov
lock
sarl
xor
mov
mov
stc
jnp
cld
push
xor
ret
sub
jo
inc
cmc
pushf
pop
call
xor
fs
jle
sub
idiv
imul
bound
sbb
push
test
aam
sub
and
cld
ret
jge
push
test
adc
out
icebp
aad
jo
add
mov
shll
dec
cmpsb
push
fsubl
adc
or
aam
dec
insl
xchg
push
icebp
dec
movsl
mov
xchg
into
sbb
cmc
repz
movsl
sub
mov
pop
lahf
adc
ret
jae
clc
das
aam
xor
mov
cmpsl
fstp
repz
jmp
xor
fdivl
pop
clc
outsb
shrl
xchg
movsl
and
test
jle
sub
sbb
outsb
jns
ljmp
jp
sarl
pop
pmulhuw
cltd
jnp
cmp
jno
ret
adc
loope
dec
nop
lea
jb
notl
rcr
repnz
pop
xor
stos
cwtl
push
out
xchg
mov
out
dec
cs
insb
into
adc
int
int
or
ret
test
daa
and
ret
jmp
jns
in
popf
pop
jb
enter
jns
rcrb
jle
cld
popf
in
sbb
jno
or
lock
out
sbb
test
stos
cltd
scas
cmp
mov
mov
ds
icebp
add
inc
inc
xchg
fimuls
mov
ja
sahf
adc
xor
cmp
leave
push
jns
lock
push
pop
jl
fstl
or
and
cwtl
inc
lcall
stos
pop
inc
idivb
jns
jno
adc
mov
inc
xchg
in
rol
mov
fstpl
add
subb
popf
jle
sub
sti
xchg
push
mov
scas
xor
push
dec
inc
or
std
sub
sarl
lods
arpl
or
testl
add
out
mov
cmp
jno
jns
add
xchg
imul
pushf
lods
fsubrl
jbe
jo
test
cltd
adc
pop
dec
outsl
xchg
cmpsl
lahf
in
lock
inc
aaa
cwtl
iret
daa
cmp
and
push
fildll
pop
xlat
shl
shrl
sbb
ffreep
ror
sub
pop
jo
mov
cs
mov
adc
mov
mov
in
sbbb
aad
nop
movsb
roll
mov
jo
xchg
mov
clc
jecxz
dec
sbb
dec
sub
mov
dec
adc
xchg
test
aam
push
jecxz
stos
popa
mov
nop
out
pop
mov
inc
roll
add
lahf
mov
ljmp
pop
out
popl
inc
arpl
movsb
out
xchg
ret
out
outsl
xchg
push
stc
bound
lahf
cmp
and
adc
and
xchg
sti
mov
add
sbb
cmpsb
pop
out
push
cmp
or
pop
dec
movsl
fldcw
add
in
jnp
mov
movl
mov
fstpt
scas
bound
mov
cli
lret
not
ss
mov
push
roll
mov
push
mov
aas
mov
sbb
addr16
mov
inc
imul
xor
ret
rcll
lret
enter
outsb
sbb
pusha
dec
push
or
mov
and
stos
fadd
ficoms
cs
movsl
inc
add
mov
test
mov
in
adcb
xor
cmp
add
in
jae
jns
outsb
sub
cmpsb
out
rcl
push
push
incb
arpl
mov
fstpt
enter
mov
loopne
mov
push
pushf
es
mov
mov
idivb
push
pop
push
and
jge
mov
sub
cmpsb
loopne
or
cmpsb
mov
dec
aas
adc
outsb
push
test
in
add
or
or
shll
lret
jle
push
ret
enter
js
jle
sbb
xchg
int
or
mov
roll
sar
leave
into
scas
mov
and
or
cmp
lret
sub
cmpsl
addl
mov
pop
icebp
jg
xchg
fisubrs
push
insb
adc
enter
and
and
or
pop
mov
out
mov
xor
vpmacsww
movsl
jb
inc
sbb
dec
flds
out
pop
test
and
in
stc
or
hlt
adc
mov
cmpsl
arpl
jge
sbb
cli
mov
or
push
movsl
nop
lahf
inc
movsl
or
fwait
ret
sbb
or
pusha
ljmp
push
dec
enter
cltd
adc
jp
mov
cmp
cmp
push
rclb
adc
insl
sbb
lcall
xchg
push
ficomps
les
jmp
cmpsb
stc
mov
push
push
lahf
add
mov
mov
dec
mov
dec
or
pop
fwait
inc
pushf
nop
mov
arpl
pusha
pop
inc
jno
mov
dec
push
pop
pop
ljmp
pushf
cmp
and
pop
je
repz
in
push
int3
pop
rorb
ficoml
ds
or
enter
pop
sar
fwait
xor
les
ret
loope
jl
movsl
and
test
pushf
dec
test
sahf
aas
add
and
mov
and
cltd
lea
scas
ret
cmpsl
and
pop
mov
push
mov
ljmp
test
mov
out
inc
mov
mov
mov
jae
or
sbb
stos
jae
stos
cmp
push
ss
xchg
xor
pop
jne
fs
dec
and
add
jecxz
or
mov
dec
push
pop
sbb
dec
sbb
movsl
xlat
mov
mov
in
or
mov
ss
idivl
stc
push
ds
cmp
lock
pop
sub
dec
and
mov
popf
les
or
js
int
mov
loop
jno
int3
in
in
das
call
jbe
arpl
or
cld
insb
mov
mov
lcall
pop
inc
or
push
lret
pop
cli
inc
mov
into
cli
stos
push
sarl
mov
in
movsb
clc
and
xlat
fidivrl
test
outsb
mov
adc
push
cmp
add
xchg
jge
pop
in
pop
test
roll
into
iret
xchg
cmpsl
or
aad
cwtl
jg
xchg
popa
dec
xchg
mov
fists
mov
orb
testb
out
dec
jo
lahf
fwait
adc
data16
das
xchg
cwtl
stos
insb
mov
cmc
pop
push
inc
mov
sbb
or
xor
xchg
rcr
rcl
enter
mov
dec
f2xm1
in
jmp
lea
push
test
jne
mov
cli
jmp
inc
je
push
sahf
mov
std
out
sub
bnd
outsb
add
jp
pop
aam
and
test
jns
jbe
sbb
cmp
scas
daa
into
or
fdivrp
mov
or
cmpsb
daa
push
fwait
jo
jns
mov
inc
cmp
out
xchg
stc
push
movsb
jnp
loope
mov
xchg
mov
or
add
inc
lcall
and
cmp
shl
xchg
pop
imul
and
inc
fiadds
mov
mov
sahf
xor
dec
inc
sahf
in
lods
jle
int
add
jns
and
ret
mov
push
into
aaa
xchg
inc
sbb
repnz
mov
aam
and
xor
fs
sbb
ret
add
sbb
sbb
mov
pop
pop
xchg
cmp
lret
dec
mov
test
mov
std
xor
adc
dec
push
fwait
das
ret
and
push
aas
out
hlt
popf
fldenv
cmpsl
jle
mov
jmp
pop
fmull
test
jge
pavgb
aas
into
mov
ljmp
cli
mov
cmp
icebp
adc
jne
rolb
xor
aas
rcpps
push
push
test
inc
jb
in
popa
loopne
test
rorl
push
mov
or
adc
popa
mov
mov
invd
daa
mov
sbb
enter
mov
outsb
in
sti
dec
loop
arpl
sub
mov
roll
scas
lds
je
fadds
push
testl
mov
mov
pop
repz
xchg
inc
je
dec
push
out
stos
adcl
cmp
push
mov
mov
loopne
out
adc
jbe
aad
or
pusha
cli
xlat
test
stos
or
scas
mov
mov
fidivs
repnz
orb
call
cmp
mov
inc
and
mov
jge
mov
fildl
or
mov
sub
jg
xchg
shrb
mov
mul
mov
inc
mov
xchg
or
das
or
or
dec
sbb
call
add
lods
inc
jg
sub
adc
mov
jb
shll
cwtl
inc
fistl
test
mov
outsb
adc
or
or
xchg
xor
int3
cs
jns
mov
mov
cmpsb
popf
data16
jl
mov
out
add
or
aaa
fnstsw
dec
fwait
mov
test
xor
pop
pop
incb
mov
cmp
sbb
dec
push
repnz
repnz
inc
into
filds
dec
lods
loopne
ljmp
pop
jne
or
stos
sub
push
xor
inc
xor
ljmp
inc
dec
add
pop
sub
fsub
stc
div
imul
sub
mov
cs
rclb
xchg
fs
sub
popa
cwtl
jp
test
ret
cmp
insb
mov
inc
stc
xor
xor
dec
sbb
icebp
ljmp
ja
push
dec
jecxz
out
cmp
mov
ret
add
loop
add
ret
push
iret
jl
out
popa
mov
enter
adc
mov
arpl
push
ds
mov
dec
xchg
or
into
insb
add
inc
push
aaa
cmp
sbb
xchg
fldcw
jmp
mov
jb
ds
mov
ljmp
jp
and
dec
stos
lods
mov
push
mov
aas
roll
sbb
hlt
cmpsl
mov
cli
addr16
mov
stos
dec
lods
xor
add
sbbl
sub
ds
fidivs
mov
jne
out
cltd
sarb
stos
sbb
pop
mov
call
scas
dec
ljmp
push
scas
andb
scas
xchg
aaa
clc
sbbl
scas
negb
pop
fistpll
outsb
rorb
adc
mov
dec
rorb
iret
iret
or
sarb
hlt
dec
enter
movsb
enter
xchg
jne
push
movsb
shl
mov
in
or
mov
push
dec
imul
ja
push
cmpsb
xor
xor
sahf
cmp
test
push
loop
pop
add
push
add
mov
loopne
out
dec
xor
cmp
loope
mov
pop
pop
add
loop
push
jbe
push
add
xchg
int3
inc
sbb
sbb
and
cmp
sbb
adc
inc
push
xor
mov
mov
xchg
stos
adc
and
jae
dec
fnclex
xlat
add
popa
or
dec
and
jae
cmc
ret
mov
mov
bound
jl
sbb
into
cmpsl
cmpsb
cmp
xor
jno
xchg
xor
test
lcall
pop
testb
je
aad
fmull
dec
sbb
loop
or
xlat
dec
sarl
add
xchg
repz
rorb
sbbb
loopne
jmp
add
daa
pop
test
sub
test
popa
push
cld
shrl
cmpsb
push
adc
test
mov
lods
pop
out
in
cwtl
sahf
std
mov
addr16
pop
mov
push
xchg
outsl
icebp
js
fisubl
pop
and
or
pop
inc
daa
push
xchg
xchg
insb
or
fadd
push
sub
inc
or
mov
dec
sub
jno
jmp
mov
pop
fadds
loopne
enter
jecxz
mov
sub
mov
adc
outsb
adc
daa
ret
push
and
mov
stc
sub
mov
stos
xchg
movsl
and
xchg
insb
adc
test
jecxz
cmp
inc
and
sahf
cs
pop
inc
or
and
or
xor
shrl
lcall
push
and
pop
and
lods
cmc
xchg
out
add
in
mov
xchg
lods
cli
std
mov
push
or
in
into
call
in
js
mov
out
jmp
and
lcall
adc
mov
insl
mov
pop
aaa
imul
dec
mov
jne
test
mov
or
mov
aas
sbb
mov
mov
cli
out
inc
sbb
fadd
pop
in
stos
pop
sub
or
fs
sbb
pop
push
add
cmp
mov
inc
jae
loope
push
and
pop
dec
in
pop
imul
mov
mull
cld
mov
dec
inc
dec
in
negl
fsubr
push
out
aas
cwtl
movsb
ss
push
adc
fists
arpl
imul
sub
jmp
adc
jb
fcomp
push
xor
les
sub
fldl
mov
ficompl
outsb
sbb
push
jmp
cmp
and
adc
xchg
xchg
fstl
push
pop
jmp
cmc
inc
adc
lret
and
aam
dec
out
xchg
xchg
lock
es
pop
imul
stc
lahf
ds
rcl
daa
jmp
xor
xchg
mov
pusha
das
pushf
fisttpl
jmp
in
lcall
mov
pop
jg
sti
dec
pop
mov
out
ret
pop
out
xchg
stos
int3
cmp
adc
push
dec
aaa
cmpb
movsb
jae
int3
test
fidivrs
movsl
add
mov
mul
xchg
lret
insb
call
shrl
out
movsb
aad
jl
loopne
dec
mov
arpl
in
lcall
adc
and
cli
xchg
fdivr
mov
mov
outsb
scas
inc
pop
sbb
add
jmp
xchg
fcomi
and
mov
dec
js
mov
mov
jne
jecxz
arpl
insl
xor
aad
sub
and
mov
add
add
icebp
pop
adc
jp
jecxz
pop
pop
jnp
cmpsb
pop
mov
adc
xlat
iret
jmp
push
mov
imul
mov
imul
rcll
inc
hlt
stos
add
pop
mov
loope
cmpsb
ljmp
rclb
push
fstps
sub
inc
jae
add
ljmp
lcall
xor
and
add
shll
sbb
adc
push
sub
pushf
scas
sbb
dec
push
push
xchg
hlt
adc
add
push
pop
cmp
jns
xchg
mov
push
jge
cmc
mov
jb
pusha
jecxz
mov
lret
lret
mov
adc
inc
outsl
inc
ss
mov
testl
inc
jo
fdivrl
push
adc
mov
mov
mov
mov
sub
outsb
addr16
imul
jo
cmp
push
mov
or
pop
fcmovnbe
lds
xchg
adc
sub
in
icebp
mov
cmp
andb
pop
ret
add
cmp
mov
mov
stos
popf
mov
xor
in
pop
sub
pop
scas
iret
or
and
insl
xor
jl
pop
stos
repnz
cld
in
add
cwtl
andl
loope
mov
mov
mov
out
rcrl
popf
cmpsl
mov
mov
cwtl
mov
and
xor
mov
mov
mov
outsb
jae
fdivrp
ficomps
sbb
test
out
out
lahf
shrb
lea
js
cs
push
cmp
adc
in
push
shlb
xor
insb
lcall
adc
adc
jg
stos
sbb
cmp
sub
ret
repz
cwtl
xchg
lret
das
into
dec
mov
les
sti
aaa
stos
fcomps
inc
mov
lret
mov
pop
test
cmp
rcrb
mov
push
subl
push
xchg
xor
add
insb
std
add
and
xor
sbb
pop
test
mov
xor
lret
add
negl
daa
jle
ret
stc
fiaddl
jo
and
daa
shl
dec
mov
pusha
sbb
add
inc
pop
cmc
bound
xor
das
xor
out
icebp
fcmovu
fmuls
inc
faddl
sub
daa
xchg
jnp
push
nop
pop
insb
clc
add
loopne
cltd
sbb
mov
into
mov
mov
sub
jne
in
push
pop
pop
sar
jno
push
jge
jns
sbb
push
jp
inc
popa
loope
pop
ljmp
mov
or
push
cmp
inc
or
or
cmp
xchg
je
and
mov
mov
cmpsl
dec
cli
nop
out
add
mov
add
lret
adc
adc
cmp
sbb
mov
pop
jno
daa
jp
into
lcall
sub
dec
into
out
insl
test
stos
inc
pusha
push
inc
cmp
mov
addb
xorb
or
fsubr
jno
adc
subl
ljmp
ss
ror
push
arpl
pop
cs
jne
mov
aaa
dec
test
mov
leave
idiv
in
out
jae
sbb
mov
ljmp
add
or
outsl
idivb
and
mov
lcall
mov
repz
ficoms
in
mov
andl
negl
pop
popa
sbb
mov
sub
in
or
xor
inc
adc
cmp
test
inc
int3
mov
int3
into
loope
jb
lds
add
and
pushf
sub
mov
or
jne
in
mov
es
mov
outsl
cmp
adc
inc
dec
in
in
nop
cmc
sbb
rcll
pop
cmpb
mov
sbb
or
mov
cwtl
test
add
mov
arpl
pop
test
enter
cmp
jg
test
jmp
cmpsb
sarl
cmc
jnp
imul
test
add
scas
jae
jbe
fsubr
les
mov
inc
add
adc
pop
js
adc
xchg
imull
les
add
push
icebp
fnsave
je
adc
imul
add
push
dec
loopne
cs
pop
inc
ss
hlt
cltd
mov
cmp
xor
je
inc
sub
cltd
mov
dec
mov
adc
adc
push
cmp
mov
jmp
icebp
clc
arpl
int
xor
cmp
rcrb
xchg
inc
mov
xchg
or
adc
ret
push
fldl
mov
fildl
push
lock
jae
xor
pop
mov
inc
shrb
dec
sbb
stc
add
scas
test
imul
jo
mov
add
mov
sbb
lds
pop
repz
mov
pop
jle
cmp
bnd
jmp
mov
aad
movsl
push
cmp
rorl
dec
lcall
push
adc
sbb
push
sbb
xorl
je
mov
push
fstpl
mov
mov
inc
fnstcw
add
sahf
dec
and
cli
jge
inc
subl
push
mov
add
cmp
repz
sbb
sub
inc
sbb
cmp
out
ret
dec
repnz
push
shrl
mov
lods
dec
xor
adcl
mov
mov
test
out
ja
dec
xchg
mov
mov
and
scas
lret
lahf
xchg
cmc
loope
jnp
cmp
inc
push
outsl
test
in
daa
jne
shl
cmp
inc
mov
test
jge
add
mov
repnz
test
mov
push
rcl
inc
int
push
flds
test
inc
mov
jmp
sbb
inc
dec
aad
xchg
mov
add
push
iret
cli
fdivs
cmp
dec
mov
adc
lea
adc
fsub
xor
jecxz
mov
inc
push
jmp
dec
stos
pop
into
mov
xchg
ljmp
int
push
sub
addr16
jb
push
imul
xchg
lcall
jl
mov
cwtl
fcompl
or
test
push
sbb
jg
out
pusha
out
fidivrs
add
adc
sbb
pusha
imul
jns
mov
sub
popa
insb
xor
pop
cmp
vcomisd
hlt
notb
mov
cli
jle
push
fnstsw
inc
repz
lods
mov
add
mov
push
mov
rcr
popf
icebp
jecxz
xchg
or
cmp
testl
xor
sub
mov
lods
pop
lahf
test
mov
inc
std
or
popa
dec
ljmp
push
xor
and
add
cmp
inc
push
sbb
lock
dec
mov
in
fldenv
xchg
jnp
lds
leave
inc
ftst
mull
pop
dec
pop
sbb
sbb
xchg
and
push
xchg
push
jp
mov
les
lcall
out
or
movsl
push
sbbl
push
out
shll
insl
in
mov
fdiv
sbb
mov
in
cmp
jb
jle
add
xchg
je
stc
ret
in
jecxz
fiadds
pop
inc
das
inc
hlt
adc
cmc
in
in
dec
fdivs
inc
or
add
ds
inc
andl
push
cmp
daa
inc
insb
mov
xor
lea
pop
mov
cmpl
push
mov
sbb
or
adc
xor
aam
xchg
stos
outsl
rol
scas
rorl
leave
inc
mov
enter
cmpsl
sti
out
daa
sub
out
cmp
cli
shr
rcll
das
clc
xor
adc
inc
cltd
stos
lahf
mov
push
jns
into
ljmp
add
or
and
test
mov
push
test
mov
push
xchg
mov
out
and
or
rcll
xchg
lea
ja
data16
or
aad
mov
insb
sub
fsubrs
sub
jns
pop
repnz
cmp
dec
jae
xorb
roll
push
xchg
outsl
sub
loop
jae
push
das
imul
lret
cmc
insb
aas
mov
adc
mov
test
jns
xchg
mov
xchg
cmpsb
xchg
popa
push
fcomi
mov
xchg
aam
inc
ljmp
xchg
push
addr16
out
in
pushf
xor
cmc
fucomp
sub
cltd
clc
daa
test
mov
les
out
sub
xchg
and
xor
sbb
into
mov
ljmp
out
je
inc
je
dec
adc
add
mov
xchg
xor
xchg
inc
adc
mov
dec
mov
test
pop
mov
out
lcall
fldl
rcll
jne
cltd
dec
lret
rorl
push
mov
addr16
test
lret
lahf
xchg
mov
or
mov
fsubrp
ja
dec
push
pop
rcll
decb
mov
jbe
mov
mov
mov
xchg
movsl
lock
orb
sbb
lahf
sbb
sbb
sbb
push
inc
fildl
sbb
lea
mov
inc
dec
jno
imull
ficoms
or
rep
dec
int
or
movsb
andb
pop
jle
add
xor
mov
popf
cmp
mov
jns
insl
imulb
xor
or
or
push
fcmovne
fsubr
insl
sub
sbb
pop
cmp
inc
add
negb
sub
lock
or
lea
xor
stc
in
repz
mov
pop
pop
es
dec
inc
push
pop
loop
les
xor
xchg
mov
stos
pop
out
inc
outsb
mov
xor
xchg
dec
sub
cmp
gs
jg
rcrl
mov
xor
inc
mov
aaa
add
mov
out
push
out
jmp
pop
ret
and
xchg
jbe
cmp
dec
dec
in
adc
daa
adc
rcrb
data16
jnp
cmpsb
mov
test
sbb
hlt
daa
pop
mov
mov
mov
mov
mov
xchg
push
inc
adc
dec
je
add
int3
adc
pop
lock
dec
test
sbb
scas
mov
pop
flds
call
sahf
jmp
cwtl
cmpl
mov
int
pop
add
push
stos
outsb
insb
mov
mov
cmp
int
inc
sub
test
adc
cmp
cltd
jge
xor
ja
xchg
sbb
mov
xor
push
aad
inc
sub
sub
mov
rol
into
sub
into
ret
sbb
xor
mov
insl
lcall
xlat
sub
test
in
test
xchg
adc
outsb
or
lahf
aam
pop
sub
or
mov
jne
lret
pop
adcl
xor
fwait
rorl
xchg
hlt
push
mov
push
popf
rclb
int3
repnz
test
out
lds
inc
inc
ret
push
add
enter
and
jg
out
sub
xor
dec
mov
push
xchg
adc
mov
dec
xlat
pop
out
fsubrp
lret
pusha
test
sbb
adc
mov
sarb
cmc
pop
inc
fdivrs
mov
pop
icebp
jmp
add
cli
adc
or
loope
rcrb
pop
pushf
test
mov
bound
call
fisttps
or
loop
in
fmuls
aam
lcall
mov
fidivrl
insb
test
jb
filds
cmc
in
outsb
addb
jle
pop
sub
gs
pop
insl
addb
popa
in
int
repnz
add
cmpsb
xchg
cmp
mov
aas
sub
mov
sahf
bound
sbb
or
mov
sahf
sbb
stos
pop
or
shlb
jbe
mov
ret
pop
or
movq
xor
pop
cmp
rcl
mov
add
popl
icebp
lods
psubusw
popf
daa
mov
ret
pushf
scas
jg
adc
pop
push
sub
pop
sahf
xor
sahf
call
std
pusha
in
jl
je
ljmp
leave
mov
int3
jecxz
movsl
pop
push
sarb
push
fdivr
push
js
lahf
je
call
sub
jp
jae,pt
mov
push
aam
push
mov
mov
nop
jne
cld
dec
pop
ret
inc
or
fcomip
out
jge
mov
imul
mov
mov
pop
dec
or
push
mov
xchg
fiadds
and
mov
add
pop
repnz
rcrl
std
add
shll
outsl
push
std
cmp
das
mov
orb
sub
bound
xchg
lock
popf
push
lea
shll
ljmp
fwait
movsl
lods
cmp
mov
pop
xchg
outsb
adc
lods
push
dec
mov
bnd
ret
push
dec
mov
pop
jmp
cmpsb
adc
jnp
pop
les
stc
pop
jb
adc
and
push
adc
mov
int3
fwait
cmp
scas
jmp
jae
xor
jecxz
dec
enter
pushf
xchg
jl
xchg
out
hlt
dec
sti
inc
test
ds
icebp
pop
roll
jge
cwtl
or
ret
mov
orb
mov
mov
cli
xchg
mov
cwtl
mov
xchg
iret
mov
lret
push
add
je
or
xchg
jmp
push
shlb
sahf
lock
pop
mov
notl
jo
or
sub
into
fwait
jbe
adc
in
pushf
or
out
sbbl
pop
dec
adc
adc
lcall
push
in
mov
pop
out
repnz
mov
pop
std
add
sbb
pop
sti
xchg
mov
sti
pop
cmpsb
stos
add
cmp
mov
dec
sub
cmpsl
push
push
loope
sbb
scas
sbb
dec
xlat
push
je
push
arpl
push
xchg
lods
sahf
sub
sbb
aam
sbb
loop
cmp
mov
rclb
mov
adc
adc
frstor
frstor
add
test
adc
aas
cli
jge
dec
mov
adc
sti
pop
test
adc
adc
mov
inc
mov
fwait
xchg
in
and
fimull
pop
jmp
mov
dec
dec
fwait
lods
cmp
pop
jge
xor
mov
pop
lret
dec
add
inc
inc
pop
cmp
sti
scas
adc
mov
xchg
sbb
nop
ret
and
mov
jno
scas
xlat
and
xchg
cmp
cli
add
push
popa
cli
aas
ss
pop
xchg
inc
aad
sub
arpl
cmc
or
xchg
and
xchg
push
cmp
adc
movsb
mov
xchg
and
das
mov
hlt
xchg
aam
add
int
fadds
out
jecxz
sub
pop
inc
test
fdivrl
xor
inc
jle
and
mov
mov
shrb
jns
nop
inc
xor
les
push
cmpsb
ja
xchg
jae
push
in
int3
sbb
into
pop
orb
mov
adc
dec
xchg
out
add
or
mov
lret
lock
stos
nop
movsl
in
cwtl
in
fwait
xchg
lds
push
fildl
scas
test
stos
dec
rcr
push
mov
pop
inc
imul
out
ljmp
push
aad
jg
add
out
divps
dec
sub
adc
pop
and
mov
stos
inc
aaa
inc
jae
mov
jb
movsl
lods
xchg
cmp
cs
adc
mov
test
xchg
insl
ds
sbb
loopne
or
jge
imul
sbb
xchg
add
outsb
jns
cmp
jp
cwtl
leave
jnp
dec
or
jl
testb
add
in
and
test
in
stos
add
sub
fwait
out
mov
cmp
jbe
mov
mov
lods
mov
pop
stc
and
xor
push
fistl
and
test
push
xor
call
or
mull
sbb
stos
out
sbb
adc
sub
fsubrl
inc
push
test
andb
aaa
adc
dec
and
xchg
shll
sub
adc
mov
mov
mov
inc
xor
icebp
push
dec
ds
sbb
repz
out
push
sub
lret
lret
pop
fmull
dec
test
xchg
test
fwait
jns
jne
jnp
jmp
mov
popa
dec
pushl
mov
or
sbb
clc
sub
js
adc
xor
insb
popa
mov
mov
xchg
push
adc
shll
rolb
rorb
add
roll
lret
insb
jmp
pop
arpl
push
mov
out
fistpll
out
dec
stc
add
mov
dec
out
jno
push
loop
mov
and
mov
jle
cmc
cwtl
jo
imul
xor
jnp
mov
sbb
pop
adc
sub
jmp
cltd
filds
stc
mov
xchg
js
push
jp
inc
rclb
add
fstpl
out
test
popf
xor
outsl
xor
outsl
lods
fisubrl
in
call
xor
inc
sub
cmp
inc
cmpsl
js
xor
out
inc
lret
daa
and
adc
arpl
out
dec
lret
pop
in
in
lret
xor
shll
ds
popf
mov
dec
scas
ret
mov
rcrb
xchg
int
xor
lds
sbb
nop
jnp
xlat
cmc
mov
cwtl
jl
inc
lods
mov
xor
popf
mov
or
jno
outsl
mov
push
cld
xor
push
cmpsb
xchg
fcomps
bound
sub
jae
lods
sbb
inc
ljmp
pop
call
and
sub
inc
pop
orl
xor
mov
ja
inc
ljmp
test
jne
mov
xchg
add
push
mov
dec
adc
into
xlat
pop
pop
daa
imul
loop
ret
jae
push
sub
xor
sahf
push
dec
out
lcall
push
lods
loop
idivb
inc
cmp
cmp
dec
nop
adcb
addr16
sbb
cld
xor
mov
ret
xchg
in
jle
in
push
out
adc
aas
dec
mov
orl
clc
dec
jb
cmpb
inc
dec
in
jne
lds
adc
pop
adc
cltd
add
push
mov
pushf
mov
fsubl
push
popf
ret
inc
xchg
adc
call
adc
das
mov
outsl
push
loop
sar
adc
xor
aaa
test
sarl
pushf
inc
adcb
cld
fidivrs
adc
xor
cmp
nop
imul
jecxz
mov
xchg
mov
sbb
fcomps
lods
js
imull
inc
mov
ret
sbb
mov
clc
ljmp
data16
fimull
and
int
arpl
int
push
movsl
popa
mov
push
sub
push
in
add
xchg
push
cmpsl
xor
adc
xchg
jmp
popa
mov
add
notl
pop
sub
imul
repnz
shlb
adcl
icebp
out
lods
and
push
ja
fimull
xor
mov
test
nop
aas
xor
push
daa
jg
xchg
mov
pushf
push
add
push
adc
adc
fwait
lods
mov
xchg
mov
dec
in
in
or
fdivs
pop
rorl
jl
popa
int3
mov
pop
mov
lods
stos
inc
ret
mov
mull
std
and
mov
dec
subl
stc
aas
cmp
push
xor
sbb
cmp
xor
popf
shll
push
add
syscall
xchg
mov
dec
sti
inc
mov
insb
and
aaa
or
inc
dec
ds
testb
shlb
push
das
sub
cmp
out
dec
mov
sbb
loopne
test
or
lock
mov
lods
pop
andb
xchg
sub
mov
popa
add
adc
sub
push
movsb
jns
add
mov
addr16
cmpl
sub
nop
hlt
lds
loop
lea
sahf
repz
xor
push
dec
test
cmp
fidivs
mov
inc
push
dec
insl
xchg
ljmp
js
lcall
push
sbb
dec
add
and
fistpl
cmp
push
ja
dec
pushf
dec
cmp
or
xor
scas
popa
or
sti
imul
push
int3
xor
cwtl
xchg
pop
test
ficompl
mov
adc
ret
movb
ficoms
popa
popa
add
adc
test
mov
lea
inc
inc
jb
int3
aad
pop
push
addr16
inc
mov
test
into
mov
aaa
inc
cwtl
xchg
sub
push
scas
or
jl
ret
das
jle
clc
imul
adc
loope
fldenv
sbb
mov
adc
out
xor
pop
pop
push
pop
adc
insb
and
mov
testb
pop
cmc
add
loopne
or
add
dec
and
notl
bound
clc
mov
mov
jno
jmp
push
dec
sbb
dec
data16
sbb
arpl
fistpll
mov
ror
ret
xor
ja
xchg
leave
push
scas
repz
imul
jo
in
inc
loop
roll
jno
sub
orb
sub
sbb
cmp
fwait
xchg
cmp
pusha
in
ss
in
sbb
leave
rcrl
push
sub
xlat
in
dec
pop
jne
mov
xchg
inc
lret
pop
xor
dec
push
hlt
insl
cltd
xchg
das
das
lret
mov
pushf
push
repz
adc
imul
loop
je
ss
lcall
xlat
adc
dec
push
imul
cs
mov
test
mov
dec
imul
jl
cmpsl
pop
cwtl
push
repz
lahf
sub
das
xor
clc
std
popa
inc
push
mov
pusha
mov
cli
mov
push
je
insl
lea
inc
andb
or
or
addr16
jo
data16
mov
mov
cmpsl
call
psllq
or
push
cmpsb
jge
ljmp
dec
pop
push
test
lods
inc
jno
loop
fs
or
push
mov
cmc
in
xor
jl
xchg
mov
pop
pop
cmc
add
in
cmp
adc
nop
insb
fistps
push
aaa
rclb
dec
scas
insb
and
lds
add
lods
add
adc
xchg
push
popf
pop
cli
cwtl
cs
pushf
sub
into
stos
jp
les
in
xor
mov
mov
sahf
push
aam
cmp
xchg
inc
subl
mov
mov
fisttpll
cmpb
cmp
dec
inc
sub
hlt
or
jae
pop
ss
xor
pop
lods
repnz
push
fsubr
pushl
out
jo
fucomi
ja
sbb
idiv
iret
iret
movsl
rorb
aas
xor
pusha
inc
leave
lahf
imul
cmp
dec
sbb
or
int
sub
ljmp
sub
sbb
sbb
xor
enter
mov
sti
test
adc
and
js
ja
fildl
xchg
in
addb
mov
int3
inc
xchg
and
sbbl
shlb
add
and
gs
mov
shrd
jmp
das
ss
rcr
and
stc
and
cmp
pop
ljmp
incl
adc
push
jo
xor
jae
rcrl
adc
fidivs
sub
inc
add
subl
pop
data16
popa
xchg
sbb
addl
sub
fucompp
jo
inc
xchg
mov
dec
xor
xchg
stc
out
mov
lahf
adc
out
dec
sti
sbb
xor
add
cli
dec
popf
or
inc
mov
or
cmp
mov
gs
or
xchg
push
sub
add
inc
frstor
mov
cld
xorb
adc
inc
ljmp
jle
and
testb
mov
movl
pop
mov
movl
sub
out
daa
ret
add
inc
push
ret
ja
cwtl
cmc
inc
add
mov
lret
push
jns
sub
jmp
mov
adc
dec
in
fmull
sbb
xchg
or
int
std
rolb
xchg
mov
or
popa
shll
in
or
xchg
mov
sub
pusha
test
pusha
pushf
sahf
lahf
cld
cmp
sub
outsl
test
fstpt
pop
mov
lcall
std
insl
sti
inc
sbb
mov
loopne
jnp
adc
shll
adc
shll
push
adc
data16
hlt
hlt
mov
mov
repz
push
sub
dec
repz
inc
nop
and
rolb
sub
and
jl
xlat
adcb
jne
cmc
mov
rcll
decb
mov
in
js
loop
pop
push
dec
int3
push
or
mov
nop
inc
mov
out
movsb
jp
mov
andl
loop
pop
jae
mov
rcl
shl
imul
and
xor
fistps
cmp
ficomps
sub
xchg
test
movsl
lods
cmp
mov
pop
rcrb
dec
lahf
movsb
in
sub
dec
into
ficoml
test
jecxz
cmp
inc
sbb
cmp
pop
mov
inc
ja
shlb
loopne
cmp
mov
lods
mov
aad
mov
sbb
jne
add
cmp
xchg
and
jg
jno
outsl
dec
stos
jae,pt
cmp
test
fbld
movsl
lea
jecxz
mov
fs
dec
loope
push
lods
sbb
jne
mov
imulb
dec
xchg
add
sbb
cltd
sub
fldt
nop
frstor
inc
and
ljmp
jg
in
cmp
add
lret
test
movsb
mov
xchg
insb
shrl
inc
push
mov
xchg
sbb
ja
push
pop
mov
mov
push
sub
ja
adc
pop
or
push
lcall
add
pusha
mov
std
or
insb
enter
jle
fwait
cmpsl
ret
jg
cs
clc
into
push
cwtl
ljmp
inc
and
sahf
add
jp
popf
mov
jmp
repz
pop
jnp
sbb
in
push
iret
mov
jecxz
cmpsb
mov
call
cmp
mov
or
or
fcomps
jge
sbb
dec
adc
loop
xchg
cmpsl
aas
in
stos
sub
lods
rclb
aaa
outsl
push
sti
pop
sbb
cmp
push
sub
test
sbb
adc
jp
mov
aad
inc
push
xor
pop
and
gs
insl
cltd
xor
sub
jbe
sete
iret
add
pusha
das
cli
mov
pop
pop
and
mov
insb
out
mov
les
add
pusha
push
push
and
cmp
xor
fistpll
int3
cmp
jno
stos
dec
cmpsl
mov
cmp
fcmovnb
gs
pushf
xor
push
stos
mov
xor
lahf
xchg
data16
inc
rorl
popa
fs
lret
mov
mov
push
jbe
xchg
std
push
aam
iret
jae
xlat
or
push
sbbl
push
jl
scas
xor
lret
mov
inc
leave
leave
push
rorb
js
std
xchg
imul
mov
stos
repz
in
mov
mov
jae
loop
aaa
inc
mov
adc
adc
test
test
pop
ret
push
mov
and
sub
mov
cmc
xchg
jge
lock
mov
pop
or
lock
pop
xchg
in
xadd
xor
jo
sti
pop
xlat
sahf
adc
es
jmp
rol
fyl2x
xor
test
xchg
leave
mov
cmp
push
sub
add
out
mov
and
jbe
pop
shlb
xchg
mov
and
pushf
cmp
cwtl
mov
inc
test
dec
mov
and
call
jl
jge
rcrb
jo
inc
mov
mov
xor
push
jae
mov
mov
cmc
pop
popa
outsb
fnsave
adc
out
adc
mov
lret
sar
lcall
cli
mov
mov
int
pop
mov
stos
shrl
pop
addb
jle
pop
dec
test
mov
repz
arpl
xor
daa
mov
imul
dec
xchg
push
sub
aaa
fsubl
jge
btc
push
mov
rcll
sbb
insl
sar
or
mov
daa
out
sub
push
imul
fists
xchg
add
pop
cmp
loop
lock
mov
xlat
icebp
cmpsb
sbb
adc
push
xlat
in
mov
cmp
movsl
jnp
mov
xor
fdivr
dec
fisubs
pushf
flds
pop
inc
push
out
mov
sbb
into
mov
jo
movsl
mov
mov
nop
xor
xchg
push
ret
add
jae
sti
clc
inc
shl
leave
jae
shrl
and
adc
cmp
imul
fcompl
jge
mov
iret
adc
loope
mov
sbb
lods
cmp
shlb
dec
rsm
orl
rep
loope
push
outsl
lahf
xchg
cmpl
nopl
cmpsb
sub
sbb
scas
pop
lds
sbb
jb
ror
popf
fldenv
fnstenv
and
es
mov
push
test
cmp
mov
inc
popf
jmp
testl
aaa
js
loopne
ret
ds
or
in
cld
loop
nop
adc
testl
fidivrl
push
xchg
push
popf
sub
dec
jne
test
sub
or
mov
jg
arpl
clc
mov
lret
jns
movsb
mov
jl
test
and
pop
push
jecxz
addr16
dec
lods
aas
out
mov
shlb
xchg
and
adc
xor
rolb
cmp
in
mov
mov
hlt
repz
ret
aad
xchg
xchg
movsb
mov
pop
adc
cmp
adc
sti
mov
mov
out
adc
pop
add
add
lods
pusha
jge
dec
or
imul
add
in
adc
pop
rorb
jae
popf
xchg
popa
ljmp
dec
or
jge
in
mov
and
rcrb
lahf
mov
or
stc
pop
es
loopne
adc
xor
xchg
in
xlat
or
loop
sbb
mov
inc
dec
rol
outsb
das
add
jmp
mov
pop
xchg
lcall
mov
shrl
movzbl
sub
jmp
mov
xchg
fwait
outsb
mov
adc
jl
aas
or
daa
inc
add
pop
daa
ret
inc
int3
cmp
jnp
test
js
jnp
out
xchg
in
leave
sbb
imul
js
fisubs
mov
mov
mov
daa
pusha
inc
sbb
xchg
jns
dec
inc
data16
in
scas
scas
in
mov
xchg
jg
jbe
mov
outsl
popa
mov
xor
insb
dec
xchg
or
loopne
lods
cmp
inc
push
sbb
out
lret
fs
frstor
orl
es
cmpl
lods
imul
fcmove
push
sbb
fidivrl
xor
add
sbb
add
ds
movsl
lods
adc
pop
test
outsl
testb
int3
in
in
ffree
adc
inc
lfs
int
insl
fidivl
pushl
push
addr16
adc
pop
jmp
jbe
sub
sti
sub
int3
jne
cli
insl
inc
pop
fnstenv
insl
push
xchg
xchg
adc
xchg
mov
ss
fwait
out
cmp
rol
pop
lahf
jmp
inc
jl
mov
add
push
add
rorb
stos
enter
cli
sbb
and
mov
divl
add
xor
xchg
aam
ljmp
std
sub
xchg
setnp
js
sbb
pop
out
push
dec
out
mov
pop
int
jno
andl
xchg
cmp
cmp
xor
outsb
mov
jmp
clc
ret
std
sbb
mov
gs
mov
movsl
sahf
xlat
out
daa
in
bnd
push
or
repnz
or
sub
cld
dec
addr16
cmpsl
popf
cmp
pushf
jns
outsb
push
add
je
cmc
mov
popf
stos
arpl
xchg
ret
inc
scas
into
dec
int
push
push
adc
in
fldt
fwait
int
stos
jmp
aas
push
cld
mov
imul
in
outsl
pop
xchg
sub
outsb
adc
fsts
push
sahf
out
sub
jo
cmp
mov
and
sahf
dec
cmp
mov
leave
sub
push
push
inc
fcomps
push
fcomps
lods
les
mov
ja
mov
loop
or
bound
dec
into
add
inc
stos
jb
jae
sub
lods
lds
xlat
push
jp
sbb
push
icebp
ljmp
sub
xor
or
aaa
ret
lret
out
rcll
dec
mov
xchg
pop
mov
fwait
jno
fsubr
xlat
xor
push
xchg
cmp
push
aaa
scas
fisttps
lods
pop
aaa
dec
jl
movsb
popa
out
cmp
or
out
mov
js
mov
adc
push
sbb
popf
rcl
and
lcall
jne
shl
adcb
push
push
mov
loopne
jecxz
pop
aaa
jae
enter
adc
cmpsb
out
ss
jp
das
aad
mov
add
add
xor
mov
mov
in
cwtl
mov
or
in
nop
sub
xlat
andl
lahf
lret
cmpb
sarb
aad
insb
jg
pop
in
sub
fmulp
mov
xchg
nop
fnstenv
cld
adc
inc
fmuls
xchg
fsts
mov
rolb
inc
fsubs
js
jg
and
xchg
jbe
lods
push
fildl
lret
mov
movsl
xor
gs
in
xchg
mov
imul
mov
lea
or
bnd
in
clc
fs
pop
mov
stos
addr16
daa
ja
ret
repz
inc
push
hlt
jle
push
xor
cld
testl
sub
pop
xchg
mov
aaa
and
mov
shl
adc
adcl
pushl
sub
inc
add
sub
js
pop
hlt
movsb
mov
imul
enter
shlb
sub
out
mov
insl
jnp
pop
inc
inc
jo
aas
jo
subb
test
cmp
mov
addr16
pop
or
loope
ret
icebp
sbb
and
out
push
dec
push
jae
ret
mov
mov
out
mov
mov
jecxz
adc
xchg
ficoml
sbb
xchg
loopne
mov
pop
scas
dec
jp
loope
in
push
jmp
movsl
cmp
pop
lock
out
andl
jle
inc
fs
sub
xor
sbb
mov
jmp
mov
call
movsb
sbb
das
mov
jnp
lahf
dec
and
orb
sbb
or
xchg
neg
lock
xchg
rorb
mov
out
lret
cmp
out
sti
enter
jge
xlat
mov
push
cmp
lret
repnz
inc
cmpsb
js
pop
jmp
inc
dec
mov
in
adc
mov
or
push
add
mov
test
add
cmp
mov
jmp
mov
jl
fdivrp
add
popf
inc
je
cltd
das
fstp
cli
dec
or
dec
mov
push
daa
pop
icebp
or
and
xor
sbb
data16
adc
repz
or
movsl
test
arpl
mov
pop
mov
icebp
lahf
gs
pushf
outsb
inc
inc
pop
lret
inc
fildll
in
cltd
push
div
jmp
push
dec
cli
sbb
out
enter
nop
nop
inc
mov
out
in
add
pushf
cmp
mov
inc
into
decb
or
mov
push
adc
dec
js
pop
pop
dec
sub
cmpb
fwait
call
xchg
pop
mov
cmc
popa
flds
xchg
mov
pop
call
insb
xlat
mov
lock
faddl
fsubl
mov
les
mov
push
dec
sbb
scas
out
jno
dec
mov
and
push
push
adc
hlt
xchg
mov
out
sub
shll
clc
test
rorl
mov
cwtl
rolb
mov
ret
xlat
jge
push
out
out
stc
out
scas
xchg
pop
mov
mov
rcrb
shll
cmp
fs
xor
mov
adc
or
mov
sbb
adc
insb
scas
xor
sahf
ja
mov
scas
add
sub
jmp
pop
mov
scas
xor
pop
cmc
mov
adc
lock
push
gs
inc
aam
mov
mov
adc
and
lret
dec
dec
repnz
pop
pop
mov
insb
mov
mov
xchg
ja
xor
dec
jl
xchg
push
andb
mov
stos
push
adc
mov
jg
mov
xchg
sti
repnz
xor
cmp
adc
addb
sub
mov
mov
repz
mov
add
mov
out
mov
movnti
daa
enter
adc
iret
repnz
cltd
inc
movsl
clts
or
mov
push
fbstp
dec
out
out
or
xchg
in
push
xlat
fstpt
aam
mov
mov
test
mov
cmp
sbb
hlt
mov
cmp
data16
mov
orb
das
mov
sbb
lds
mov
jp
xchg
loope
sarb
aaa
jno
imul
push
lds
pop
enter
push
inc
ds
rcl
bnd
add
cltd
mulb
scas
lds
lock
push
cli
inc
mov
dec
push
sbb
jno
loopne
es
cli
add
adc
pop
jnp
in
jae
sbb
ret
stos
sub
fs
xchg
cmpsl
xchg
jo
outsl
cwtl
xlat
es
jo
outsb
mov
dec
fstps
daa
pop
xorb
push
add
test
cmp
roll
jno
add
add
mov
pop
icebp
xor
push
inc
mov
in
lds
repnz
faddl
fcmovnb
ja
sbb
dec
mov
push
iret
shlb
pop
retw
sub
je
sbb
sbb
and
lods
sub
ss
cmp
pop
pushf
cmpps
jae
pushf
pop
push
in
sbb
jns
add
testl
jge
out
jbe,pt
fs
std
adc
js
scas
fucomip
push
push
push
fbld
sub
xor
idivl
mov
adc
shrb
adc
std
mov
or
jl
cmp
jno
and
lock
jo
inc
push
sti
or
inc
les
lock
cmp
jecxz
xchg
mov
dec
xchg
inc
or
xchg
xchg
cmpsl
dec
and
sub
push
push
sbb
test
mov
pop
jo
xor
sbb
pop
pop
in
sub
sbb
dec
test
xchg
mov
xchg
inc
mov
add
mov
pop
fwait
push
adc
cld
xchg
or
repnz
nop
cmpl
aas
cld
rorl
mov
insl
ljmp
cltd
aam
xor
ret
fadds
xchg
lods
mov
jno
lcall
fsub
or
push
push
adc
cmpsl
test
insb
pop
adc
mov
sub
jle
scas
and
pop
add
pop
pushf
int
lea
xor
loopne
mov
gs
out
and
cmp
add
cmpsl
mov
fstpl
mov
in
in
sub
and
mov
or
push
mov
mov
mov
lcall
cmp
lret
and
in
inc
imul
push
cs
mov
in
cmc
jo
repnz
jp
nop
incb
dec
and
add
inc
cmp
xchg
cmpl
mov
push
sbb
fisubrs
cmp
sarb
add
int
cmpsl
xchg
out
fdivrs
dec
xchg
rorb
icebp
into
iret
push
popa
sahf
push
das
lret
xlat
stos
rol
xchg
sub
fiadds
pushf
cltd
aam
jmp
sub
loop
scas
movsb
mov
push
aam
mov
movsl
scas
mov
xchg
mov
inc
fmull
fwait
pop
inc
sub
mov
sahf
mov
ret
mov
push
cs
repnz
dec
or
out
mov
enter
jns
sbb
js
pop
lods
mov
sbb
inc
xor
cmc
mov
jno
fldl
or
les
je
scas
inc
ficompl
cmpsl
xor
cwtl
add
les
inc
cs
scas
loop
adcb
push
out
ja
pop
imul
jno
cmp
adc
mov
jne
test
push
and
sub
in
addb
or
add
pop
jno
popw
and
int
ss
imul
xchg
test
scas
clc
cmpsb
or
rcll
or
arpl
out
test
sbb
rcrb
out
or
adcb
push
jl
icebp
fwait
lods
arpl
jo
pop
pushl
mov
cmpl
mov
roll
mov
mov
ljmp
pop
mov
jp
repnz
aad
popf
aam
adc
inc
mov
loop
repz
imul
xchg
cld
lods
ja
sarl
push
ss
and
dec
daa
lret
stos
fs
cld
and
enter
int3
bound
js
push
imul
xor
mov
dec
cmp
icebp
push
stos
sti
pop
out
das
ret
aam
push
add
subl
inc
repz
add
ja
fmul
cmp
xor
dec
test
cld
xchg
sti
fwait
jb
xchg
ret
or
jno
jl
jl
scas
call
pop
nop
sbb
add
idiv
sbb
cmpsb
sbbb
in
fldz
mov
mov
push
pop
sub
or
xchg
rcrb
stc
mov
inc
xchg
xchg
hlt
ljmp
push
push
jo
mov
subb
ljmp
pop
ds
adc
rol
mov
inc
mov
jecxz
repnz
outsl
loope
mulb
pop
and
jo
jp
xchg
fdivl
jo
idivl
pop
add
jge
daa
scas
popa
push
adc
int
daa
ja
inc
and
xor
aam
fisubs
mov
ret
jo
loopne
pushf
stos
and
pop
sbb
adc
and
cs
mov
in
jl
fs
mov
xchg
xchg
dec
lds
sub
clc
and
inc
or
not
mov
popa
inc
mov
jle
movhps
les
call
mov
aaa
xor
pop
test
mov
pop
call
mov
mov
cwtl
xchg
outsl
jecxz
cmp
xchg
inc
mov
push
adc
inc
sti
push
or
lods
jl
xlat
lds
ret
clc
adc
cmp
scas
pop
sbb
int3
cmp
add
push
or
sub
dec
adc
ffreep
inc
rcrb
cs
push
cmpsb
pop
mov
adc
xor
mov
pop
aam
cmpsb
mov
jmp
adc
push
and
push
jge
add
repz
push
sub
mov
ja
rdtsc
jnp
out
jmp
pop
je
xchg
bound
les
movsb
cli
lahf
sub
scas
nop
repnz
mov
out
xchg
cmp
inc
pop
lcall
push
inc
dec
sbb
sub
and
stos
lods
pop
inc
and
cmp
daa
xchg
dec
into
in
xchg
mov
pop
ret
repz
andb
lods
mov
pop
adc
ficomps
mov
shr
jg
cltd
sbb
test
gs
test
cltd
dec
dec
mov
in
mov
push
pop
movsb
add
push
dec
in
pop
das
fwait
in
sbb
arpl
mov
in
sbb
loope
mov
pushf
inc
ljmp
dec
jae
lcall
adc
or
mov
fsubl
or
mov
xlat
aam
add
scas
jns
pop
add
xor
cmp
lret
and
rcpps
fidivrs
je
jle
mov
adc
mov
movsb
jae
cmp
fisubrl
push
jg
sub
loopne
inc
loop
movsl
int
cmp
in
arpl
outsl
mov
mov
sbb
pushf
rclb
and
jnp
push
fwait
mov
leave
xor
and
call
in
or
aad
mov
test
insl
enter
iret
daa
adc
nop
cs
xchg
cmp
mov
repnz
and
out
or
inc
fcoml
test
data16
pushf
imul
fs
push
and
and
jge
imul
sbb
adc
imul
ja
sti
rcll
or
rcrb
add
push
push
mov
push
mov
jne
adc
add
enter
jmp
lods
add
xorb
push
outsl
std
leave
fmull
or
pop
push
aas
push
xchg
ds
add
enterw
lret
repz
cmp
sub
mov
rorb
shll
outsl
lea
pop
ror
adc
sbb
mov
loope
rorb
push
mov
fs
or
push
pop
jnp
dec
jge
cmp
cmpl
mov
dec
mov
in
xchg
jo
leave
sub
xor
pop
rclb
xchg
xor
data16
cmp
push
push
jno
push
icebp
orb
int3
les
sahf
jo
push
mov
into
add
les
jp
out
pop
push
cld
cmovns
lret
inc
shlb
dec
fdivrl
rorl
jnp
out
testl
addr16
inc
int
and
fwait
out
pop
xchg
pop
inc
xor
pop
std
aas
int3
dec
inc
in
jecxz
xchg
imul
mov
xchg
jae
ss
mov
clc
jecxz
es
dec
test
rcr
fistpl
mov
xlat
test
test
jecxz
sbb
pushf
insb
movmskps
jno
pop
sbb
fsubr
aaa
inc
lock
gs
aas
in
sbb
aas
popa
push
and
xchg
sub
stos
rol
jecxz
sbb
std
inc
stc
and
mov
fildll
mov
lahf
in
xchg
xorb
fldt
sub
cvtps2pi
sti
cmovle
cmp
ds
xchg
push
jmp
mov
or
push
mov
pop
push
andb
mov
fucomp
lret
adc
jmp
mov
lret
in
pop
hlt
push
ja
les
or
scas
and
xchg
sub
test
inc
xor
in
xor
jmp
sub
das
insl
mov
loopne
jge
mov
sbb
add
test
cmp
fsubl
cmpsb
into
loopne
jl
sarb
dec
mov
lahf
scas
adc
cli
lahf
and
and
push
dec
jbe
mov
fs
cmpxchg
sub
imul
outsb
scas
cld
sub
dec
jno
jb
push
shlb
loopne
daa
fdivp
mov
lcall
test
addl
xor
mov
xor
lock
or
and
pop
jno
mov
push
fstl
add
sbb
movsb
adc
mov
pop
orb
pop
outsl
imul
adc
jle
lods
sub
scas
sub
fnstenv
mov
stc
fimuls
cmp
out
cmp
inc
add
add
push
sbb
std
shlb
add
pop
inc
call
cltd
es
or
stos
add
fcoml
cmc
mov
in
push
lcall
rcl
dec
repnz
jle
fcmovnu
outsb
pop
loopne
sbb
movsb
enter
add
clc
add
xor
aad
or
dec
sbb
je
sbb
frstor
and
in
hlt
mov
xchg
testl
test
std
notl
adc
test
scas
jne
cmp
inc
mov
mov
lahf
xchg
xchg
ss
inc
and
jbe
mov
fimuls
ljmp
xlat
mov
mov
xor
pop
cmp
xchg
xorb
aad
dec
xchg
dec
aad
fidivs
es
mov
or
fisttpl
adc
gs
cli
out
xchg
add
cltd
stos
sti
sbb
dec
add
jg
and
mov
enter
inc
shlb
sub
dec
ss
test
inc
out
xor
movsb
sub
push
dec
push
gs
orb
push
xchg
pop
pop
xchg
mov
jbe
imul
roll
test
lahf
cmpsb
insb
mov
pop
ljmp
add
rcl
adc
mov
jmp
arpl
sbb
dec
cltd
les
mov
cmpsb
mov
or
cmp
dec
dec
push
mov
sbb
sub
negb
fnstcw
pushf
sub
sbbb
mov
imul
stos
icebp
xlat
pop
or
or
cmp
push
jecxz
inc
fcmovnu
scas
sarb
popa
loopne
and
mov
aam
xchg
or
sbb
stos
sbb
inc
xor
aad
or
xor
sbb
mov
outsl
and
push
repz
bound
outsl
add
jl
in
and
push
mov
push
out
inc
and
cmp
data16
hlt
rclb
mov
push
fdivrp
out
addr16
mov
inc
add
jl
hlt
daa
xlat
adc
hlt
sti
scas
sbb
in
es
dec
pop
in
adc
sub
cmp
out
pop
mov
pop
aad
xor
clc
cmp
test
sbb
mov
out
lods
cmp
push
imul
or
sbb
xor
xor
jb
mov
dec
push
sahf
dec
pushf
sub
cmpsl
mov
or
xor
jmp
fbld
frstor
insb
cs
in
in
sub
loope
xor
xchg
jge
leave
cmpsl
out
pushf
loop
mov
lret
mov
xchg
cmpsl
jb
push
cmp
xchg
test
shl
xor
mov
xlat
nop
clc
out
inc
jg
ret
and
outsb
mov
pushf
xchg
rcll
pop
aas
lock
mov
jl
inc
pop
popa
cmp
mulb
xor
mov
es
sub
idivb
mov
stos
cltd
data16
adc
stc
arpl
jg
out
fcomps
adcb
loop
add
cli
fmul
jns
inc
adc
jo
mov
add
out
std
repz
je
adc
test
jle
sbb
sub
cld
sbb
jae
push
cmpsl
push
ja
call
popf
jecxz
cmp
jmp
stos
movsb
mov
mov
mov
xchg
cmp
pushf
test
xchg
push
imul
aaa
lcall
in
sbb
movb
mov
cmpsb
sub
cmpsb
ret
or
scas
mov
out
aas
std
out
les
and
mov
pop
adc
xchg
les
or
push
hlt
and
ret
adc
stc
push
fdivrs
sub
fwait
xchg
cs
add
pop
inc
icebp
or
mov
ds
xor
cmpsl
aam
mov
stos
int3
ret
in
test
mov
jecxz
decl
cli
dec
fwait
xlat
jle
inc
push
xchg
data16
call
mov
inc
mov
in
push
xor
bound
stos
loop
pop
mov
int
mov
aaa
push
test
mov
mov
dec
push
pop
cmp
addl
push
pop
clc
sbb
xchg
mov
inc
jmp
cmpsb
mov
xlat
mov
mov
sbb
cli
mov
adc
inc
loope
jecxz
xchg
jne
jb
in
jmp
repz
adc
jge
cmp
adc
jle
call
or
rcll
and
repz
les
sti
cmp
test
pop
jno
das
push
cli
sub
mov
scas
cmpsb
fimull
ljmp
les
sbb
or
insb
ss
cmpl
mov
lods
xor
repnz
dec
mov
mov
xor
cli
ret
idivl
adc
fdivrs
cmp
push
clc
xlat
cmp
stc
aas
fcomi
outsb
fcomi
rcrb
dec
xlat
xchg
outsl
xor
mov
adcb
orb
gs
jns
pop
and
adc
lcall
sarl
out
loop
cmpsb
fmul
pop
xchg
out
call
jg
or
sub
push
mov
jecxz
popa
inc
push
xchg
xchg
fdivp
movsl
mov
test
cmc
pop
sbbl
cmp
imul
jp
pop
cmp
mov
cli
add
or
push
fs
outsb
pushl
adcb
inc
mov
jae
xchg
shl
dec
imul
std
daa
rcl
sarl
cmp
dec
jmp
dec
mov
loopne
xrelease
repnz
dec
dec
stos
add
aaa
cmp
clc
xor
mov
push
dec
jbe
pop
jl
cld
shrl
stc
push
jae
data16
or
fists
fucom
pop
call
sub
inc
xor
dec
push
push
sahf
jnp
mov
jecxz
dec
xor
cmp
xor
sbb
jp
pop
call
mov
and
aad
daa
push
in
jmp
into
push
or
add
and
pop
out
push
loope
lret
cli
xor
mov
mov
adc
cld
mov
push
outsl
out
cltd
xlat
or
mov
inc
nop
shrb
aam
pop
mov
aaa
gs
xchg
loop
dec
mov
lret
push
roll
frstor
dec
pusha
sarb
lret
inc
inc
push
sbb
adcb
jbe
dec
mov
stos
mov
mov
pop
inc
add
push
out
iret
fcom
ficoml
xchg
rcll
sbb
dec
cmp
xchg
xor
mov
rorl
xchg
mov
xor
push
adc
js
nop
repz
jg
jge
les
cmc
push
xchg
cwtl
sub
xchg
push
cmp
sub
ds
adc
push
dec
mov
cmpsb
lret
ret
xor
mov
add
inc
xchg
scas
dec
in
call
enter
adc
dec
or
xorb
mov
ret
loope
scas
faddl
stc
add
arpl
mov
xlat
push
and
xchg
call
sbb
out
mov
push
in
sbb
bnd
sbb
icebp
mov
add
hlt
mov
pushf
add
fiaddl
xlat
push
test
mov
mov
nop
mov
jb
movsl
or
pop
mov
jbe
and
xchg
jae
sahf
ror
and
popf
xor
movsl
jmp
sub
push
scas
dec
mov
imul
jmp
mov
fildll
dec
mov
or
in
and
dec
fs
sbb
and
stc
out
enter
mov
shl
insl
xor
imul
xchg
aaa
les
aas
adc
out
sbb
pop
xchg
sub
mov
arpl
fs
inc
cmp
mov
sbb
or
outsb
push
xchg
push
xchg
in
sub
int3
push
inc
inc
sbb
adc
jp
cmp
test
inc
out
lcall
jp
push
ret
push
lods
cmpsb
ja
pop
dec
xor
xchg
jp
dec
inc
into
ret
sbb
fisubrl
cmp
or
dec
movsb
inc
mov
xor
mov
push
lcall
test
insl
sbb
push
adc
test
stc
aam
or
mov
xor
fildll
test
mov
jae
dec
or
mov
lock
jae
loope
out
in
aam
pop
sahf
in
sbb
pop
xlat
cmc
sbb
pop
sbb
xor
divb
shlb
ss
push
add
pop
mov
mov
cmp
adc
ret
mov
outsb
lahf
ljmp
loope
movsb
data16
inc
into
stos
mov
xchg
add
mov
or
pop
jne
sub
cmp
loop
mov
sbb
xlat
mov
shlb
mov
stc
pop
pop
loope
push
adc
shrb
and
out
adc
movsb
xor
adc
cmp
popf
ret
mov
in
cmc
test
div
ss
stos
incb
repz
or
cwtl
xchg
cmp
hlt
out
sbb
test
add
insl
repnz
xchg
push
mov
pop
jb
fstp
scas
repnz
mov
mov
rorb
sub
push
mov
fstps
insl
inc
fisubs
xor
lret
out
aas
mov
push
xchg
mov
sub
inc
frstor
sub
enter
cmp
cmpsb
xor
inc
or
xor
or
push
hlt
inc
sbbb
frstor
mov
pop
mov
dec
ja
rol
push
push
ljmp
aaa
das
test
cmpsl
into
aas
mov
add
repnz
sti
adc
pop
dec
xchg
out
loope
mov
scas
stos
pop
pop
adc
cmp
mov
lds
mov
lret
mov
mov
xchg
xor
popa
das
adc
mov
dec
cli
mov
or
lea
mov
add
in
add
jns
or
xchg
push
lret
orb
out
lret
mov
insl
pop
dec
stos
insb
sbb
icebp
lcall
mov
cwtl
test
adc
enter
cld
cld
inc
jo
in
sub
mov
into
sub
ja
clc
or
push
outsb
mov
addr16
xor
out
and
cmp
fnstcw
das
enter
xchg
pop
pusha
ljmp
mov
push
pop
mov
dec
sub
icebp
mov
daa
or
mov
mov
daa
mov
dec
clc
and
es
and
push
add
aaa
aam
in
ret
stos
es
dec
and
add
or
pusha
push
lret
lods
push
jecxz
push
imul
pop
popa
imul
data16
test
rcll
outsl
es
pusha
mov
pop
xor
jo
xor
rol
aas
xchg
imul
lea
rcr
pushf
xchg
imul
jno
test
pop
test
sbb
mov
xchg
push
add
and
dec
sbb
cmp
stc
les
sub
jle
push
cmp
in
jecxz
das
sub
and
mov
xchg
pop
cmp
xchg
or
ret
and
lods
lods
mov
dec
cmp
test
or
xchg
fisttps
xor
lret
mov
out
pusha
sarl
out
cmp
jo
addr16
dec
mov
test
adc
into
arpl
sub
movsl
addr16
mov
sub
out
rcl
orb
and
shrb
addr16
cmc
aam
mov
pusha
cmp
dec
jae
xor
dec
cmpsl
cmp
inc
leave
jbe
add
and
outsl
out
dec
aaa
mov
aad
pushf
pop
sub
mov
insl
push
xchg
test
and
and
sub
adc
test
pusha
mov
mov
int
jae
in
je
adcb
dec
insl
sbb
pop
iret
jp
insl
inc
jmp
mov
mov
popa
add
cmp
inc
mov
jnp
push
xchg
add
popa
or
mov
pop
push
cmp
fwait
pop
in
dec
jg
sbb
cs
mov
dec
movsl
iret
int
ret
mov
sub
and
mov
jmp
jb
outsb
jg
jmp
icebp
pop
cld
nop
test
scas
iret
test
mov
sub
adc
test
mov
mov
xchg
sbb
jb
xchg
xchg
pop
ret
mov
ret
int3
stc
loope
adc
xchg
pop
ret
xchg
adc
fdivs
js
sub
dec
pop
ret
xchg
repnz
dec
push
mov
mov
xchg
fldt
add
dec
int3
movsb
sti
mull
xchg
pop
int
outsl
sbb
sbb
lods
push
in
aad
les
mov
orl
js
push
aam
sbb
int3
aaa
pop
js
xchg
pop
pop
adc
pop
jns
pop
jp
mov
adc
insb
in
and
pop
jno
scas
add
cmpl
adc
daa
inc
ss
fcmovne
mov
in
popf
stos
out
mov
daa
jmp
xchg
cmp
and
scas
or
inc
mov
rclb
mov
mov
rorb
mov
cltd
dec
add
add
lea
loopne
cmp
pop
test
add
pop
jae
in
add
fisubl
mov
stc
xlat
mov
inc
push
aam
cli
movsl
and
xchg
test
je
mov
stos
xchg
data16
shrb
pop
cmp
push
sub
rorl
jne
and
adc
rcll
ds
pop
ret
fs
cltd
scas
and
in
fcmovu
in
test
push
lds
popf
mov
inc
push
push
stc
and
inc
enter
jmp
mov
in
jecxz
mov
into
jbe
rcrb
jmp
in
sub
sbb
cmpsb
xlat
in
xor
enter
adc
and
scas
subb
aaa
xchg
fsubrs
loop
push
dec
sub
xchg
sbb
xchg
stos
adc
mov
faddp
ds
dec
mov
aas
fwait
loopne
jno
sbb
xchg
inc
jo
aam
mov
add
jp
insb
mov
int3
je
lret
pop
out
cmp
sbb
fs
addl
fld
xchg
mov
push
fmul
ja
mov
pop
xchg
mov
daa
sub
adc
scas
sbbl
pop
iret
sbb
pop
pop
xor
adc
jl
xlat
jecxz
mov
leave
lret
mov
lods
aam
sub
xor
xchg
js
iret
stc
mov
inc
pusha
ret
inc
addr16
adc
cltd
mov
push
lods
in
arpl
movsb
ret
inc
into
scas
es
aam
push
cwtl
and
push
xchg
filds
mov
inc
dec
out
jmp
cmp
inc
inc
inc
jb
iret
push
dec
scas
mov
loopne
or
and
mov
cmc
push
arpl
sbb
cmp
sbb
insb
sub
mov
xchg
pop
push
jl
cmp
jmp
call
push
push
cmp
fiadds
sub
in
mov
mov
pop
jle
jp
mov
inc
inc
clc
sub
xchg
popf
adc
jno
or
test
das
add
dec
xor
xchg
cmc
icebp
push
lcall
mov
lret
ficompl
in
int3
repz
inc
xlat
adc
adc
sbb
fisttpll
xchg
pusha
ret
push
lret
cmpsl
mov
pop
mov
inc
adc
sbb
mov
and
repnz
ret
nop
mov
ds
jne
and
js
push
xchg
sub
xchg
ljmp
nop
cli
inc
loope
adc
in
je
mov
fildll
push
aas
push
repnz
inc
mov
pop
outsl
arpl
xchg
ficoml
jecxz
sub
mov
cwtl
ljmp
ljmp
cld
das
sub
push
or
adc
gs
adc
jp
push
pop
imul
lcall
repnz
push
imul
iret
inc
cli
stos
aas
add
ds
out
and
or
mov
adc
pop
pop
mov
mov
mov
addr16
sti
inc
adc
loop
mov
dec
sahf
ret
jge
sub
mov
cmp
push
mov
sti
sbb
mov
xchg
repnz
or
cmp
jl
dec
jge
cwtl
sbb
je
pushf
add
sahf
add
or
add
movsl
leave
daa
icebp
mov
pop
fstps
or
jecxz
hlt
daa
jge
imul
sub
iret
jae
jb
fstpt
jmp
int
lods
out
lods
mov
cmp
or
insl
jmp
mov
xor
push
mov
and
cmp
jmp
pusha
or
and
mov
cmc
push
pusha
jmp
pusha
mov
leave
fcoml
filds
test
stos
pop
sbb
push
js
shrb
or
push
sbb
add
sti
xor
les
jmp
ss
inc
in
inc
mov
repnz
rolb
mov
push
insl
add
lret
ss
adc
push
sub
fldcw
sbb
cmp
cmp
push
into
inc
jecxz
mov
lods
sub
loop
dec
mov
adc
add
fisttpll
mov
cmp
add
popf
orb
ficomps
outsb
mov
fldt
add
sbb
xor
mov
push
pop
jmp
icebp
and
jnp
lahf
scas
leave
rorl
bound
xchg
js
cwtl
dec
dec
test
add
dec
sub
inc
xchg
lret
scas
ja
test
je
sbb
sub
popa
enter
out
pop
xor
clc
dec
push
icebp
vpermt2b
clc
adc
and
adc
or
mov
pop
dec
adc
mov
inc
sbb
dec
outsl
lret
cwtl
ljmp
mov
mov
push
rcrl
out
sbb
mov
clc
push
cmp
mov
cmpsb
inc
push
push
pushf
add
cld
pop
lods
cs
jl
mov
xor
lock
daa
push
shll
into
add
xor
sub
out
jno
test
adc
test
iret
push
push
xor
jb
pop
aad
jno
xor
and
in
xchg
sub
sti
or
mov
shrb
ja
mov
imul
shl
in
add
jmp
popf
cmpsl
add
xchg
mov
cmp
mov
inc
bnd
dec
push
shll
jg
add
push
pop
push
repz
xchg
pop
mov
add
jb
mov
fstl
push
cmp
jb
pop
cltd
stos
mov
dec
lea
dec
fistps
mov
hlt
ja
iret
push
mov
mov
out
push
sbb
or
ret
in
popf
sub
lea
mov
js
ja
dec
pop
mov
pop
mov
ja
jmp
push
shll
mov
xchg
enter
inc
sti
imul
inc
call
jle
cmpsl
push
jae
mov
mov
gs
dec
int
push
xor
test
pushf
lock
sub
jg
fdivs
lock
cmp
dec
jl
dec
ljmp
stc
xor
xlat
jbe
ja
pop
mov
add
mov
dec
push
mov
hlt
jb
out
in
mov
dec
jl
xchg
jae
and
ljmp
std
jle
les
xor
icebp
shrl
lret
fisubrs
out
or
add
adc
fistl
dec
pop
cmp
lahf
adc
out
ret
stos
push
jae
xor
test
mov
mov
jno
arpl
xor
imul
daa
dec
cld
lock
jb
out
clc
sub
mov
dec
cwtl
jnp
mov
inc
inc
cmpsl
fdivs
push
shrl
or
or
test
mov
pop
sub
inc
outsl
sub
xor
adc
out
iret
ficompl
daa
push
xor
ds
shl
loop
push
popf
lret
and
mov
mov
call
sti
pusha
aam
and
mov
mov
les
pushf
popf
jbe
lods
mov
outsb
jae
push
inc
sub
pop
fadd
pusha
inc
fwait
arpl
push
ds
popf
mov
cltd
rolb
push
ds
dec
or
in
inc
out
in
inc
movsl
ret
push
dec
and
sbb
outsl
lock
sbb
cmp
mov
lret
bound
imul
dec
cmp
mov
mov
inc
into
loope
mov
mov
jl
cmpsl
insl
call
jge
mov
jnp
pusha
fwait
out
mov
jb
or
and
hlt
mov
idivb
call
jge
imul
nop
mov
dec
aam
xchg
pop
cmp
inc
push
push
cs
out
xchg
jecxz
test
mov
repnz
imul
pop
jo
pop
xchg
fmuls
mov
inc
cs
mov
mov
mov
push
dec
xchg
sbb
cli
mov
xor
mov
inc
into
movsb
jae
faddl
loope
inc
dec
stos
mov
adc
mov
xor
jbe
loop
stos
das
or
ret
mov
push
mov
sahf
xchg
sbb
jge
jp
adc
xchg
dec
ja
popa
sub
gs
in
mov
lods
xchg
and
test
xchg
sbb
push
mov
and
pop
ret
insl
push
pop
mov
loopne
sahf
sub
stos
mov
enter
fldl
pushf
and
insb
test
les
movb
cltd
in
bnd
add
je
aad
mov
mov
aaa
add
ljmp
dec
push
fbstp
cmc
jb
stc
jmp
jae
cwtl
test
jle
push
test
hlt
sbb
in
ret
sub
aaa
or
cmpsb
lock
fldt
aad
pop
outsl
into
lock
gs
ret
mov
pop
int
jge
pop
mov
xlat
stc
gs
nop
jmp
xchg
int3
sbb
jp
push
jae
inc
data16
xchg
xor
arpl
and
std
ret
ret
cmp
into
adc
jns
cmp
or
dec
cmp
sbb
es
mov
aad
xor
sbb
lea
lret
les
xchg
push
les
test
mov
dec
pop
push
pop
mov
mov
int3
jo
imul
das
es
imul
inc
leave
outsl
push
aas
lahf
int3
fstpt
lea
xor
ret
in
sbb
xchg
or
out
jns
add
add
movsl
cmp
mov
aas
insb
sarl
aaa
fnsave
lds
fisubrl
push
std
push
xchg
add
mov
xor
cmpsb
pop
or
fst
add
xchg
loope
add
cs
ss
mov
inc
hlt
loop
sub
xor
mov
aad
addb
roll
mov
pop
gs
jg
push
in
imul
ja
lret
jle
jo
and
xchg
mov
sub
hlt
adc
test
arpl
or
jle
push
cmp
inc
add
js
and
mov
xchg
adc
jle
or
mov
mov
arpl
sub
sbb
or
jl
pop
stos
loop
xchg
and
adc
lods
shlb
dec
sti
xchg
mov
pushf
push
movsl
adc
js
jle
sub
mov
add
in
jp
test
dec
mov
jns
xchg
mov
cld
dec
inc
xchg
jl
fs
inc
sbb
out
subl
cld
pop
pop
mov
jl
aaa
dec
pop
xor
inc
shlb
or
pop
roll
bound
aaa
aas
xchg
xlat
add
popa
mov
jno
dec
xchg
int3
sub
pop
xchg
mov
mov
bound
popf
dec
xor
cmpsl
push
andb
dec
inc
clc
mov
push
xor
xor
icebp
mov
dec
mov
out
adc
jl
inc
jnp
xchg
mov
stos
addr16
jae
add
es
in
in
ficomps
mov
mov
or
fistpl
dec
ljmpw
push
mov
xchg
xchg
popf
rol
fiaddl
test
mov
inc
nop
inc
lret
xchg
sahf
repnz
stos
sbb
pop
or
roll
mov
dec
sbb
pop
inc
dec
push
cmp
ret
xchg
repz
test
bound
out
xor
in
repnz
test
and
out
fstpl
and
sub
lcall
nop
stos
adc
popf
jecxz
xchg
jle
mov
adc
pop
pop
stos
imul
cltd
and
add
jbe
inc
add
adc
jae
cs
in
xor
cltd
mov
sbb
sar
or
mov
cld
loop
xchg
adc
mov
xlat
ds
push
call
add
les
mov
cmp
mov
andb
in
pop
sahf
mov
inc
sub
call
pop
pop
fstpl
cmpsb
aaa
popf
pop
mov
fidivl
fwait
push
pusha
nop
bnd
repz
mov
inc
xchg
cltd
add
mov
lods
pop
sbb
mov
inc
sub
sub
stc
cmp
sahf
dec
mov
push
in
std
jno
mov
sbb
cmp
stos
cli
sub
xor
rclb
roll
lods
orb
out
sahf
sbb
dec
dec
outsl
dec
arpl
adc
ljmp
mov
sbb
mov
outsb
push
dec
mov
js
pop
mov
push
pop
mov
jecxz
mov
shl
adc
mov
sub
and
sbb
imul
test
push
jnp
xchg
xor
push
dec
mov
test
fs
lods
les
jbe
push
mov
sub
jg
outsb
or
mov
pop
enter
jmp
cmp
es
fstps
mov
int3
jno
push
fisttpl
push
mov
decb
stc
das
mov
pop
shrl
negl
xor
cmpb
insl
cmp
popf
loopne
add
shl
imul
notl
stc
and
jnp
out
sarl
mov
xor
mov
mov
call
jnp
mov
dec
mov
mov
fldcw
pop
or
mov
mov
aaa
xor
lret
xor
or
fwait
stos
es
adc
pop
or
sbb
mov
xchg
dec
and
cmpps
iret
add
dec
and
mov
mov
xchg
xchg
sarl
lcall
lock
push
sbb
push
cmp
xchg
test
cmp
pop
lock
pop
and
cmp
pop
xchg
cld
and
ror
fucomp
and
adc
aad
fsubs
xchg
rorl
lcall
inc
xchg
int3
movsb
sub
loopne
lock
cmpsl
push
call
and
movsb
pop
mov
pop
sbb
xchg
mov
jp
xchg
cli
sbb
push
cwtl
aas
add
fisttpll
test
push
xor
bound
cltd
popf
cltd
mov
arpl
jp
lcall
dec
pusha
das
pop
xchg
test
in
fadds
lea
jbe
test
bound
or
pop
jl
shlb
pop
xlat
inc
popa
aam
push
add
ss
int3
sub
lods
pop
and
mov
shrl
loop
fmuls
in
rorl
pop
dec
push
leave
lahf
push
push
ss
mov
mov
fwait
jbe
out
sub
add
sub
cmp
mov
fidivrs
int3
insl
fs
sub
in
dec
out
xchg
scas
out
xor
scas
cmp
xchg
xor
imul
mull
mov
in
mov
mov
loope
cwtl
dec
mov
pop
sarl
and
lea
hlt
pop
xor
xchg
push
test
dec
push
xchg
lahf
lock
inc
in
xchg
or
clc
dec
fidivrl
roll
push
and
and
dec
push
xlat
sbbb
ret
sub
in
pop
pop
out
aas
in
iret
jmp
add
fwait
jb
ss
sbb
cwtl
movsl
sbb
scas
push
jb
bound
mov
cmp
inc
pop
in
pop
aas
jae
cmp
lods
orb
mov
lret
pop
pop
sub
adc
cs
scas
fsubrl
mov
cmpsb
dec
dec
clc
push
xchg
lods
pop
push
cwtl
sbb
aad
jae
cmp
gs
mov
aam
xor
arpl
std
test
push
jp
jl
dec
push
inc
add
ret
outsb
repz
aas
sbb
sub
fildl
daa
aas
push
cmp
cmp
cwtl
lock
outsl
adc
sub
andl
xchg
fdivr
mov
and
enter
jle
stos
sbb
xchg
in
pop
push
mov
outsl
push
arpl
xchg
dec
fcomps
xchg
sarl
jnp
jne
pop
mov
fidivs
xor
stos
inc
dec
push
inc
jg
mov
inc
loopne
popf
mov
nop
out
push
wrmsr
xchg
and
dec
sbb
stos
rolb
xchg
call
adc
jecxz
xlat
dec
inc
lcall
out
lock
lahf
aad
ret
mov
mov
push
mov
dec
popf
cs
push
cmp
into
scas
inc
jle
movsl
push
adc
fnstcw
daa
mov
fsubrs
dec
lock
jns
dec
dec
fcmovnb
fnsave
lret
or
incb
inc
jno
mov
xchg
gs
sbb
out
jae
xchg
cmp
mov
ss
mov
and
push
aaa
jge
nop
adc
xlat
fnstsw
adc
mov
test
sub
out
sbb
fisubrs
fwait
adc
pop
adc
rorb
aam
test
cld
lahf
adc
fwait
shr
call
imul
xchg
inc
dec
adc
inc
dec
das
pop
adc
add
popf
or
aad
push
aam
xchg
in
fsubrl
out
adc
xchg
push
inc
fst
arpl
test
dec
inc
xor
lret
or
cmp
sahf
aam
add
mov
fmull
mov
in
sarb
fwait
clc
xchg
xor
bound
and
jl
movsl
push
sub
dec
insb
mov
cmc
icebp
sbb
push
adc
imul
std
push
daa
push
scas
jg
sbb
out
mov
fiaddl
daa
pop
inc
loopne
sub
out
add
mov
hlt
aaa
mov
xchg
leave
jmp
or
mov
jo
fldcw
pusha
je
in
lods
fildll
push
das
icebp
push
mov
icebp
xchg
cld
cld
or
stos
xchg
sbb
mov
imul
test
cld
out
cmp
pop
or
stc
fiadds
lea
xchg
mov
mov
andb
cmp
rcll
loop
lds
scas
pushf
jne
cmp
xor
mov
adcb
ret
dec
xor
or
inc
jne
inc
cmp
pushl
sub
imul
xchg
ljmp
jnp
pushf
addl
test
je
popa
mov
fbstp
cmp
add
cli
lea
insb
cmp
adc
repz
or
and
pushf
xchg
pop
dec
inc
rol
sbb
scas
sti
hlt
mov
and
enter
mov
ret
in
pop
mov
cmp
mov
sbbb
repz
add
addl
xchg
jl
fwait
inc
mov
loop
clc
adc
outsl
mov
sbb
jo
icebp
es
inc
sub
ret
aad
out
loopne
cmc
lret
sbb
jge
arpl
cmp
scas
add
pusha
outsl
push
sbb
in
sahf
loope
xor
rorb
ret
pop
sbb
adc
imul
repz
xchg
add
stos
popf
xchg
mov
mov
lret
adc
xchg
aaa
movsb
aaa
sub
stos
popf
push
add
xor
shll
sbb
dec
xor
or
jmp
shl
adcb
test
pmaxub
fildll
dec
je
jo
add
mov
xchg
xchg
xor
pop
jb
xchg
mov
mov
push
mov
lods
xor
mov
ret
mov
xor
mov
pusha
xor
adc
clc
out
rorb
push
cmpsb
xchg
jecxz
xchg
ficompl
jg
pusha
mov
push
in
dec
jmp
and
xchg
push
inc
pop
push
xchg
cmc
icebp
jbe
xchg
mov
cmp
fimull
in
out
orl
push
pop
shll
sub
pop
rol
dec
lret
fdiv
aas
bnd
push
and
cmp
mov
xor
fstps
shrb
ror
push
sahf
jle
pop
je
mov
mov
sub
jne
add
aad
and
out
dec
idivb
or
dec
cmp
pusha
adc
xchg
push
sub
xchg
mov
int3
mov
mov
add
cs
out
mov
mov
sub
pop
and
loop
out
add
xchg
std
push
pop
lock
xlat
popf
std
pop
ret
in
scas
icebp
gs
std
lods
mov
and
xchg
aas
into
fstpt
xchg
cmp
adc
push
jnp
scas
xchg
mov
lock
call
mov
cwtl
sti
push
mov
push
mov
or
fsubr
and
lods
add
jbe
mov
mov
andb
sub
adc
inc
jle
aad
fidivl
xchg
ss
fsubrp
push
xchg
fcom
mov
int3
cs
sarl
das
xor
das
sub
shlb
fsubp
or
dec
mov
xor
pop
sbb
out
xorl
dec
add
andb
test
subl
cmp
mov
or
mov
dec
icebp
addr16
push
iret
mov
in
and
out
fnstenv
cwtl
sub
jle
push
mov
push
popf
sahf
ljmp
xor
and
mov
call
outsb
or
xchg
sub
fnstenv
int3
icebp
dec
adc
sub
popa
inc
aas
addl
mov
scas
stos
gs
ljmp
fsubrs
cld
arpl
xor
cli
addl
mov
push
cmp
addr16
jbe
add
int3
add
jl
insb
dec
outsb
inc
inc
shll
pop
sub
bound
xorb
and
sub
add
push
jae
fistl
sub
xor
adcb
xor
nop
mov
or
lock
jns
or
pushf
loopne
jo
jmp
hlt
mov
mov
in
cli
and
bound
aas
ret
mov
cmp
xor
sahf
rep
sbb
xchg
jle
mov
fmuls
loop
xor
push
aaa
ljmp
pop
push
xor
es
ret
inc
out
mov
scas
add
push
xchg
icebp
mov
call
push
gs
dec
inc
ljmp
xchg
cmp
in
mov
es
sub
mov
add
xchg
dec
jo
dec
lock
gs
dec
xchg
cmp
jne
sub
push
fsubrl
enter
sahf
or
int3
pop
mov
mov
mov
push
jmp
lods
mov
pop
adcb
sub
pop
and
fucomip
pop
repnz
xlat
adc
fldt
push
in
iret
pop
xchg
inc
sbb
jb
sbb
jecxz
xchg
popf
adc
adc
adc
das
scas
push
mov
xor
aam
psubw
scas
push
xor
mov
xchg
pop
not
arpl
fistl
jb
repz
sbb
repnz
jl
icebp
mov
aaa
lret
push
adc
scas
aaa
jecxz
cmc
enter
out
cmpsl
jp
push
pop
nop
lods
pushf
push
gs
jge
cmpsb
mov
xlat
jns
or
les
xchg
jo
or
xabort
cmp
cmpsb
adc
dec
rorb
or
in
and
cld
xor
add
scas
fcoms
jmp
hlt
std
mov
imul
cltd
popa
rcrl
cmc
pusha
xchg
in
pop
ss
inc
lea
fidivrs
or
js
pusha
xchg
pusha
popa
sub
loopne
mov
movsb
lock
and
pop
sbb
jp
lcall
cmc
xchg
xchg
pop
pop
xchg
out
pop
sbb
xor
imul
inc
aad
scas
lods
lcall
mov
adc
cwtl
cltd
xor
xchg
add
xchg
rcrl
or
push
pop
jmp
pusha
lcall
sub
test
ds
aas
adc
cmp
inc
sbb
stc
sub
dec
pushf
adcl
mov
lret
rorb
fwait
scas
sub
mov
mov
pop
ret
xchg
loop
cltd
pop
in
jl
mov
jb
add
cmp
mov
pop
lea
add
jnp
popa
test
lds
nop
lahf
mov
xor
xor
fmulp
jb
xor
pop
xlat
push
dec
pop
sbb
xor
cmp
mov
cmp
cmp
scas
inc
call
cs
inc
pop
cmpsl
cmp
mov
pop
rolb
jne
sbb
inc
mov
jo
push
sbb
jns
test
or
jne
adc
popf
xchg
mov
adc
int3
add
fwait
sbb
popf
jp
xchg
push
push
aam
ret
xchg
jae
mov
loop
mov
adc
xor
fmuls
sbb
cmp
mov
mov
dec
ret
mov
fsubr
mov
dec
dec
sub
aas
or
call
xor
popf
les
dec
inc
push
fs
aam
mov
mov
shlb
inc
pop
mov
orl
imul
inc
push
sub
outsb
sbb
js
or
mov
inc
xor
jecxz
pushf
and
jno
pushf
enter
lcall
fimuls
mov
outsl
push
dec
scas
cld
jge
pop
je
push
cltd
jp
inc
cmp
ds
mov
mov
pop
mov
lock
push
insb
jb
in
xor
or
adc
lahf
movsl
negb
sbb
sbb
test
push
leave
sub
out
rcr
mov
sahf
insb
xor
cmp
jl
adc
mov
push
pop
xchg
and
mov
lods
mov
ds
xchg
mov
ss
pop
js
addr16
nop
scas
imul
pop
arpl
rol
xor
xchg
arpl
ja
and
mov
xchg
xor
loopne
aaa
xor
sub
xlat
mov
pop
ja
sub
cltd
xchg
mov
jg
pop
jno
je
push
mov
push
fwait
adc
jnp
out
and
mov
cmc
repz
lret
or
movsl
jl
ja
outsb
pop
xchg
and
xchg
arpl
jl
ret
pusha
adc
imul
clc
mov
fwait
dec
ja
mov
jecxz
xor
sub
push
lea
leave
test
push
cmc
outsl
jp
in
or
inc
shr
xchg
xchg
mov
sbb
leave
jge
pusha
cltd
jae
ds
aad
mov
lahf
pop
mov
dec
idivl
ret
scas
mov
fisubs
mov
js
daa
out
das
xchg
jnp
jnp
mov
icebp
jb
jg
push
cs
dec
cmp
sbb
out
jns
rcll
sbb
cmp
mov
push
ds
sub
leave
jns
cld
fstpl
daa
jb
das
and
sbb
push
jmp
mov
push
enter
hlt
jns
flds
push
cmpsl
cmp
cmp
rcl
xorps
and
mov
xchg
pusha
cmp
sub
xor
sbb
jle
push
rcl
push
clc
cmp
cltd
mov
test
ljmp
gs
icebp
jnp
mov
push
test
insl
fdivrp
mov
inc
xor
lcall
mov
pushf
in
sbb
sub
shrb
xchg
int3
aas
aam
loopne
out
or
stc
test
sub
inc
call
loope
add
repz
jns
push
xor
push
add
pop
scas
pop
lock
sbb
loopne
or
sub
sbb
seto
jno
and
addl
cmpsl
jmp
mov
jp
filds
jae
mov
mov
popf
cmp
pop
pop
test
cmp
shr
push
lods
fldenv
out
sbb
movsl
outsl
sbb
aas
cltd
imul
daa
adc
adc
lcall
daa
add
rol
rcrb
lods
mov
imul
mov
xchg
inc
int
out
loopne
or
in
add
cli
fsubrs
xor
push
jo
shlb
imull
notb
pop
jmp
push
nop
and
inc
mov
mov
aad
mov
in
sbb
outsb
bndldx
in
or
xchg
add
ds
outsl
mov
cwtl
cli
pop
mov
loopne
push
mov
cwtl
es
fwait
push
adc
inc
ret
lods
inc
cmpsl
cmpsb
sahf
les
mov
mov
outsl
popf
fldl
pop
pop
jle
sub
movsl
ret
mov
push
xchg
inc
stos
movsb
scas
loope
movsb
sbb
or
pop
inc
imul
aam
imul
xor
xchg
jno
or
jle
mov
insl
out
xchg
mov
or
dec
shl
push
rclw
lock
and
ja
push
adc
fiadds
add
fisubl
lds
insl
add
repnz
inc
popf
add
stc
mov
rcr
ret
xchg
out
add
fdivl
inc
adc
jns
sub
imul
jg
jo
movsl
testl
sub
xor
incl
push
into
fstps
aaa
imul
aad
jle
inc
dec
jnp
sub
mov
fxch
adc
lcall
inc
mov
push
push
jo
inc
pop
mov
dec
xor
outsb
pop
insb
bound
lods
pop
xchg
pop
and
push
dec
dec
dec
in
aam
shlb
dec
mov
aas
pop
fcmovnu
aas
dec
jb
jb
aam
or
testl
stos
cmp
rclb
jns
xchg
in
mov
push
adc
mov
inc
icebp
rcr
dec
xor
xchg
inc
mov
cmp
das
rcrl
push
fdivl
xor
in
clc
leave
sbb
insl
das
and
pop
sbb
test
jno
jl
loope
xchg
pop
adc
fisubrl
in
pop
sarl
cmp
jecxz
mov
mov
ljmp
lahf
push
pop
hlt
cmpsl
fldenv
cmp
fnstenv
test
xor
push
pop
loope
mov
xor
xchg
call
test
jae
add
sbbb
mov
jae
mov
pop
leave
movsl
cwtl
lahf
and
inc
icebp
push
xor
add
pop
adc
aaa
pushf
push
xchg
es
mov
or
mov
adc
ret
aam
mov
inc
jae
mov
push
cli
addr16
outsl
stos
loop
lret
mov
ds
cmp
in
fidivrs
mov
and
mov
and
decb
aam
lods
xchg
cmpb
leave
mov
sbb
dec
out
lcall
in
inc
sub
aam
iret
jge
mov
es
testl
mov
push
stos
stos
push
mov
testl
lods
pop
cwtl
loopne
mov
cltd
movsb
iret
rcrb
add
ds
in
pop
imul
sahf
pop
jnp
cmp
notl
scas
shll
in
divb
pop
insb
leave
ret
lds
lret
rolb
xchg
or
or
push
xchg
push
outsb
push
out
cmp
int
in
mov
adc
or
push
sbb
daa
xor
leave
ja
imul
lds
aas
call
jp
adc
xchg
jecxz
hlt
iret
test
jne
xor
inc
ret
out
dec
cld
xor
mov
in
mov
xor
xchg
cs
lret
loop
std
xchg
std
rcr
mov
jle
mov
hlt
clc
pop
push
test
inc
ficomps
or
icebp
xchg
outsl
inc
mov
xchg
sbb
pop
popa
sub
fadd
inc
mov
lds
fildl
out
push
int
fs
sbb
inc
xlat
insb
or
mov
lret
loop
jmp
pop
mov
jne
lret
cwtl
pop
pop
je
gs
xchg
les
jmp
mov
adc
sub
adc
inc
aas
cmp
arpl
nop
cli
das
mov
hlt
pop
or
xor
jp
aad
std
leave
mov
call
mov
cs
dec
mov
fcmovne
push
popw
sbb
stos
shl
inc
xchg
subb
enter
shl
jmp
filds
inc
into
sub
push
fmull
dec
andl
push
popfw
cmpsb
cmp
or
call
arpl
jg
ficoml
push
jbe,pn
or
popf
push
shlb
cmp
ds
stc
jb
adc
repz
test
xchg
jae
push
inc
aaa
mov
mov
mov
cld
xchg
sar
pop
inc
and
mov
jns
xor
lds
mov
les
shrb
in
jmp
icebp
push
and
jecxz
jl
lret
dec
mov
shl
or
sbb
mov
outsl
and
ljmp
in
and
loop
es
stc
xchg
hlt
loopne
imul
mov
pop
fsubl
daa
test
cwtl
xchg
je
pop
cmp
addr16
push
mov
aad
adc
fcompl
adc
push
sbbb
dec
or
dec
push
push
lock
xchg
xchg
loope
test
shrb
sub
test
mov
out
lods
movsb
pop
mov
jb
sbb
jmp
push
inc
push
sarl
mov
cmp
scas
fwait
and
pop
out
daa
mov
push
data16
scas
cmp
lods
pop
cmpsb
xor
push
sub
inc
cmp
cmp
xchg
sub
in
push
orb
rcrl
int
mov
xchg
sub
test
sub
lret
insb
sub
stc
test
inc
and
mov
mov
pop
pop
cs
bound
fs
gs
add
adc
je
sbb
mov
div
int3
mov
push
xchg
add
dec
mov
mov
push
iret
inc
adc
cmp
fcomps
shll
in
fstpl
mov
stos
or
call
push
fisubs
sub
cs
outsb
add
fmuls
xlat
adc
pop
push
dec
div
inc
push
jl
sti
mov
pop
adc
xchg
dec
iret
push
in
fsubs
leave
andb
dec
pop
cltd
call
cld
gs
in
xchg
xchg
rcrl
testb
dec
add
pop
sub
in
jbe
and
jmp
inc
lock
jp
mov
cmpsb
mov
arpl
icebp
lods
mov
sbb
into
fs
jns
aad
ss
fsubr
aaa
add
pop
in
inc
into
xor
pop
cld
cli
arpl
sbb
inc
jae
jl
popf
jbe
inc
sbb
outsb
fucomp
icebp
repnz
sbb
les
roll
lret
testl
jo
repnz
fs
xchg
aam
jmp
inc
sub
fldl
ljmp
lahf
push
inc
jae
insl
cmpsb
jecxz
mov
mov
or
xor
outsl
lret
mov
sub
mov
xchg
mov
push
sti
cmp
mov
mov
ds
push
sbb
mov
sti
xchg
bound
mov
loopne
int3
mov
cli
bound
cmpsb
pop
es
adc
hlt
mov
xchg
pop
dec
adc
addr16
ss
out
sbb
or
pop
sub
adc
cmpsl
pop
add
mov
and
test
outsb
or
or
cmp
movsb
xchg
filds
cmp
test
shl
mov
andl
mov
movb
pop
lret
inc
loop
mulb
shld
cwtl
inc
jle
hlt
mov
popw
sub
sbb
pop
lret
movsb
cmpsb
jecxz
mov
outsl
cmp
inc
stos
std
ds
push
in
popa
dec
xor
rcrl
pop
jae
xchg
call
mov
xlat
enter
mov
mov
ja
rcll
mov
jp
pushf
mov
popa
aas
scas
fisttps
lret
int
pop
ret
cmp
add
or
adc
scas
into
sub
mov
cmp
jp
cmp
mov
into
sbb
push
xchg
and
arpl
sbb
sbb
mov
cmpb
or
push
ss
sub
aam
pop
cmc
xchg
dec
pop
push
push
cmpsl
stc
insb
sbb
loop
leave
inc
addr16
push
flds
adc
xchg
negb
mov
jbe
fstpl
das
pop
dec
push
pop
or
sub
add
push
mov
popa
adcb
das
adc
xor
ret
lods
sbb
sub
inc
mov
push
push
roll
pop
push
lret
or
cmp
movsl
addr16
xchg
cmp
das
lret
inc
hlt
fnsave
inc
mov
adc
fsubrp
scas
in
cmpsl
ljmp
xor
jge
pop
cltd
call
xor
and
dec
loope
in
jl
adc
sbb
sub
or
aas
insl
lret
mov
jns
xchg
and
inc
aad
ds
or
xchg
xor
ss
inc
imul
or
lods
push
imul
jge
push
or
sub
fsubs
cmpsb
adc
icebp
xchg
ja
inc
pusha
xchg
xchg
mov
test
enter
xor
fwait
sbb
push
stc
rorl
cmp
ljmp
sbb
fmull
inc
mov
leave
cmp
inc
dec
and
leave
cmp
insl
and
fwait
mov
or
fsubr
adc
stos
lret
pushf
rolb
push
or
push
push
inc
xlat
nop
insb
outsb
sub
inc
dec
push
xorl
xchg
lret
sub
jge
shlb
rol
xchg
or
mov
cltd
test
cmp
popa
push
mov
test
mov
fbld
xchg
scas
add
ret
call
test
mov
or
aas
lods
lods
fldl
and
sbb
loopne
ficoml
push
shll
aas
popf
dec
lock
mov
mov
ret
push
fbstp
ja
ror
inc
and
adc
leave
sbb
stc
add
inc
out
jp
push
enter
shrl
scas
stos
xor
sbb
and
inc
adc
popf
xor
repnz
icebp
icebp
aas
scas
int3
jg
xor
pop
loop
add
out
imul
xchg
mov
ror
sub
out
pop
and
sbb
pop
pusha
mov
sub
pop
inc
jnp
jle
fimuls
mov
or
mov
or
lock
mov
push
shrb
xchg
popa
push
lea
fsubl
mov
faddl
or
popa
sub
mov
or
daa
data16
dec
pop
mov
push
imulb
add
sbb
cmpsb
push
push
jno
mov
ret
andb
pop
mov
hlt
cld
fistpl
pop
rcrl
ss
pushfw
stc
data16
push
sahf
fsubrp
pop
pop
enter
inc
in
aad
scas
test
xchg
out
lea
push
xor
jg
cmp
push
fcoms
xchg
icebp
mov
push
and
out
add
fildl
fnstenv
xchg
imul
stos
lret
jg
jnp
lcall
sti
lods
les
pop
push
xchg
jmp
loopne
fcoms
rcr
inc
in
push
stos
int
bound
cmp
mov
cs
shll
mov
sbb
das
xor
dec
sahf
shl
push
xor
subb
dec
dec
xchg
xchg
pop
dec
test
add
dec
lea
sub
add
mov
data16
xchg
lods
idivb
mov
mov
xchg
jno
mov
inc
popf
repnz
mov
insl
outsb
mov
adc
inc
aaa
stc
jns
xchg
mov
mov
mov
loope
dec
in
push
inc
outsl
push
and
pop
imul
out
mov
jg
add
mov
cmp
pop
outsb
ret
inc
rorl
sarb
sbb
or
xchg
adc
lods
lret
pmaxsw
push
mov
and
mov
stos
popf
jecxz
xor
int
inc
jno
icebp
dec
xor
lods
inc
xchg
dec
loop
stc
aaa
mov
ror
popa
lods
pushf
lret
add
inc
aas
insb
mov
xor
xchg
lahf
mov
or
cltd
movsb
fyl2xp1
fsubs
mov
and
mov
inc
pop
lods
adc
shrl
lret
or
sub
test
mov
shlb
cmp
mov
inc
lods
arpl
cmpb
inc
xor
pop
repnz
sub
cmp
push
dec
sbb
arpl
nop
loope
mov
and
rolb
mov
stc
cmp
adc
icebp
cwtl
inc
sbb
movsb
xor
call
scas
clc
lret
and
dec
mov
notl
xor
out
xor
sahf
xchg
fsts
jecxz
pushf
cmp
hlt
cmp
sbb
lds
std
adc
fildl
adc
adcl
mov
stos
mov
das
call
insb
aad
andb
sarl
nop
push
das
inc
bound
inc
or
add
and
or
gs
fdivs
sub
jno
scas
aad
dec
xlat
cmp
sub
in
add
les
cwtl
test
pmaxsw
mov
ss
adc
push
mov
fcmovb
aas
push
mov
testb
sbb
push
imul
and
pusha
aam
xchg
gs
jge
testl
xor
push
vpor
ret
mov
inc
push
mov
xchg
sub
jns
lods
stos
pusha
mov
fbld
lds
test
into
add
insb
ja
sub
repz
lock
push
int3
xor
push
sahf
mov
dec
mov
pop
inc
push
dec
adc
test
mov
and
cmp
leave
push
adc
push
jecxz
inc
popa
inc
insb
fsubs
fcoms
pop
pusha
sarl
cmp
xor
or
lea
cmp
jbe
shl
dec
mov
or
rcl
repnz
mov
mov
lods
jmp
and
rcrl
aaa
rclb
adc
push
out
adc
ds
mov
ja
push
dec
xchg
mov
fistpll
inc
loop
shr
or
push
lahf
mov
mov
daa
cmc
pop
out
decl
or
setno
jnp
mov
xchg
lock
scas
mov
in
and
dec
jge
ret
popa
and
cli
dec
xor
int
pop
stc
inc
outsb
scas
stc
aaa
daa
lret
xchg
jle
orb
imul
fldenv
push
mov
nop
mov
sbb
mov
es
xor
icebp
mov
das
dec
xor
lock
pop
cmp
push
cmp
hlt
add
cmpsb
lcall
pop
loope
push
clc
stos
push
push
push
dec
icebp
cmp
cmp
out
mov
dec
add
outsb
push
test
inc
xlat
mov
add
adc
popa
cmp
pop
xlat
std
test
aam
rorl
call
rcr
adc
insl
int
xor
sub
nop
ljmp
shr
gs
pop
cmp
test
inc
mov
leave
mov
pop
sub
or
dec
mov
leave
test
or
popa
rol
mov
fstl
ja
jae
pop
push
lods
mov
fsubrl
adcl
xchg
sbb
sub
xchg
jl
pop
rolb
aad
mov
push
mov
mov
and
mov
or
sub
mov
mov
or
aas
add
add
jle
cmpl
movsb
mov
mov
dec
pushf
cmp
pop
stos
sub
adc
scas
das
fldt
adc
dec
subb
adc
lahf
in
dec
mov
jo
push
jmp
fcmove
fiaddl
pushl
stos
test
xchg
in
std
dec
mov
in
in
xchg
adc
outsl
inc
lods
sbb
test
cmpb
pop
mov
mov
push
sbb
jl
mov
jg
pop
pop
repnz
sbb
push
fcoml
add
push
adc
adc
in
inc
xchg
add
pop
into
or
nop
sub
je
cmova
int
adc
xchg
pop
cmc
sub
dec
and
arpl
shl
pop
in
lcall
sarb
jge
cmp
lret
push
mov
psraw
out
scas
popf
loope
leave
fiaddl
insb
xchg
adc
mov
aam
subl
add
cmp
loope
add
in
xchg
xchg
inc
mov
ret
fstpl
out
incl
adc
rcrl
loopne
push
jge
lea
das
nop
cmp
in
gs
mov
dec
adc
sub
sub
sbb
sub
decl
sbb
ja
adc
jle
xchg
repz
mov
cld
fdivrl
repnz
insb
sub
adc
int3
fwait
lock
push
dec
je
adc
subb
cmpsb
xor
addr16
mov
sub
xchg
loopne
scas
daa
mov
jnp
jle
xchg
mov
popa
loop
insb
jmp
faddl
lret
pop
rolb
mov
or
repnz
jb
mov
popf
shlb
addr16
add
dec
or
pop
pushf
cmp
xor
mov
sub
out
xchg
pop
fadd
cmpsl
add
cmp
into
out
negb
jmp
sbb
frstor
out
fnstenv
push
jae
push
sbb
add
outsl
pop
pop
movsl
divl
mov
cmp
xor
xchg
sbb
mov
push
shll
bswap
or
movsl
out
mov
sub
lods
scas
add
inc
adc
xchg
inc
push
sbb
aas
pop
sahf
sti
negl
dec
inc
adc
orb
inc
push
adc
push
repnz
sbb
dec
cmp
loope
test
xchg
or
mov
adc
pop
aas
sub
and
js
pushf
add
mov
jbe
sub
xchg
pusha
mov
dec
pop
pushf
sti
mov
dec
dec
pop
das
jge
mov
xor
cli
dec
push
xor
lods
mov
ret
mov
push
xchg
xor
adc
xchg
cmp
in
or
xchg
mov
test
pop
dec
stos
cmp
pop
xchg
daa
arpl
dec
leave
loope
stos
sbb
and
jae
popa
adc
xor
repnz
cmp
push
push
in
mov
pop
test
mov
mov
dec
bound
push
stos
xorb
je
fnstsw
andb
adc
xchg
adc
js
rcrl
das
fsubrs
aam
adc
imul
xor
popf
outsl
test
sahf
jns
jbe
scas
shl
adc
jecxz
lahf
std
addr16
pop
leave
test
cmp
ja
jae
in
sbb
ja
mov
sbb
mov
mov
ja
mov
fdivr
imul
lahf
popf
mov
cmp
test
lcall
jns
jl
cs
mov
mov
das
loopne
pop
nop
bound
mov
add
icebp
fidivrs
decb
in
fildl
daa
fisubs
insl
and
cmp
callw
scas
mov
data16
push
cmpsb
push
divps
add
adc
sbb
nop
fistpl
fildl
pop
add
dec
cmp
fucomp
mov
cld
loope
sub
or
and
andb
pop
inc
test
cmp
inc
ljmp
fucomp
int
sub
outsb
push
repnz
gs
test
test
jle
mov
sub
push
inc
pop
mov
jp
fcmove
andl
jg
jb
adc
ljmp
mov
xor
cmp
inc
iret
inc
out
and
stos
mov
movsl
inc
adc
cmp
rorl
ds
cwtl
inc
jle
mov
stos
sub
mov
push
push
inc
insb
repnz
jle
pushf
and
inc
inc
sub
xor
aam
loop
leave
cltd
in
lret
mov
sub
dec
pop
push
jmp
mov
ficompl
cmp
sbb
das
mov
das
fildl
aad
pop
sub
sbb
jle
inc
iret
out
sub
cwtl
in
aaa
mov
jno
cli
inc
inc
xor
pushf
or
mov
cmpsb
test
hlt
jmp
jno
push
cmp
or
or
sbb
inc
push
sbb
inc
pop
pop
dec
inc
or
popf
jns
stos
test
or
cmp
testl
mov
lods
cmpsb
test
repz
mov
mov
xchg
scas
pop
mov
cmpl
jns
test
add
lds
repz
mov
js
lcall
adc
out
fsubrl
or
xor
aas
mov
pop
xor
sbb
stc
or
push
mov
xchg
jbe
jno
inc
sub
xlat
mov
cld
cmc
in
pop
jle
les
inc
sti
cli
or
fmull
fs
adc
imul
mov
aad
imul
dec
call
adc
push
add
cli
mov
aas
es
add
inc
pop
and
std
popf
enter
imul
repnz
shrl
sub
jg
jne
mov
sbb
mov
repnz
mov
inc
cwtl
int
rep
mov
jecxz
xchg
mov
imul
or
xchg
mov
ret
cmpsl
pop
or
dec
mov
out
lcall
jnp
mov
lcall
in
mov
sbb
mov
jb
filds
aaa
xor
loop
push
push
pusha
pop
jb
lds
repz
push
pop
push
jge
addr16
stos
mov
icebp
xchg
shl
cmp
lods
lods
push
sub
inc
xchg
pop
jle
das
fs
jle
inc
inc
sub
sbb
jg
pushw
sbb
xor
sub
or
popf
jbe
push
xlat
xor
adc
adc
inc
std
pop
movsl
push
adc
dec
cmp
imul
insb
sub
push
sar
aas
test
ret
ficoml
aaa
push
mov
cltd
pop
rcrb
stos
and
test
jmp
andl
pop
or
jge
and
ret
lret
jl
adc
xchg
add
push
movb
push
sub
cmp
or
jo
dec
test
loopne
cmpsl
mov
in
inc
and
xchg
dec
sub
les
loopne
mov
ret
mov
nop
int3
scas
xchg
adc
stos
add
lcall
jns
imul
dec
rolb
jg
push
mov
jecxz
push
outsb
push
xor
add
int
test
inc
pop
push
jnp
into
mov
xchg
jle
mov
xchg
xor
pop
pop
mov
mov
mov
fs
fadd
mov
inc
into
stc
stos
adc
cmp
xor
cmp
fs
mov
ret
xchg
imul
movsb
mov
pop
fnstcw
pop
stc
les
push
les
xchg
shrb
iret
push
cwtl
jnp
dec
xchg
adc
push
and
adc
cmp
mov
icebp
pusha
adc
push
aad
sbb
cmp
jns
cltd
push
sbbl
mov
stos
loopne
cli
ffreep
notl
aam
rolb
ja
pop
mov
jns
xchg
lss
mul
cmp
test
lret
out
std
call
mov
sar
inc
je
add
add
loope
inc
jo
sahf
loopne
sub
lock
push
out
dec
jno
insb
das
int
idivl
pop
rcll
lds
sbb
mov
ds
and
xlat
mov
jecxz
jo
insl
pop
cmp
fildl
popa
pop
jns
in
scas
dec
shrl
xchg
add
or
mov
push
fdivrs
mov
cld
fmul
sbb
xor
das
and
jb
pop
sbb
andl
scas
pop
call
jae
pushf
shrl
add
ficoml
aas
call
sbb
scas
sahf
cmp
pop
xchg
and
mov
sub
pushf
rcll
jno
xor
ret
inc
jns
dec
push
into
inc
adcb
jle,pt
push
inc
leave
mov
mov
or
data16
mov
push
rorl
push
mov
and
pop
sub
jae
xor
jl
jno
mov
faddl
repz
out
ret
pop
sbb
or
in
jp
pop
jmp
cmp
movsb
adc
mov
loop
mov
jg
push
outsl
rorb
insl
push
repz
lcall
jle
mov
jl
pusha
stc
fisubl
in
lods
sbb
mov
push
jne
mov
fldenv
cmp
ficomps
insl
add
sahf
cmp
nop
cli
or
push
xchg
rcr
dec
add
lds
js
inc
and
adc
fcmovu
mov
fwait
popf
fldl
cmpsl
cmp
and
and
sarb
les
into
daa
mov
xor
and
sub
mov
jge
cmp
push
inc
mov
and
inc
testb
mov
aas
xchg
test
push
fdivs
shrl
cli
fmul
push
in
in
sbb
push
mov
xlat
sub
xor
shl
arpl
repnz
xlat
inc
inc
pop
cmpsl
lahf
inc
inc
dec
lret
xchg
inc
fwait
or
cwtl
loope
pop
jno
inc
sbb
inc
rolb
xchg
pop
add
mov
lock
test
xchg
test
push
ret
xor
in
ds
jnp
iret
xchg
int3
sahf
fucomp
jp
popf
mov
xor
stc
call
out
loope
xchg
or
dec
movsl
fimull
mov
mov
in
pusha
fistps
arpl
shll
test
cmpsb
mov
into
mov
jne
mov
push
mov
ss
fwait
xchg
inc
ds
cmp
std
and
sbb
les
pop
stos
lret
clc
jp
iret
pop
pop
push
lds
pop
inc
imul
movsb
sbb
popa
fidivl
fwait
push
cmc
push
mov
mov
mov
or
repz
jae
pop
ret
mov
adc
in
cmovs
add
mov
rclb
xor
es
sub
push
aas
push
push
popa
cmpsb
dec
popf
loopne
frstor
or
ds
cwtl
rcll
rorl
cmp
mov
and
push
pop
cld
aas
jle
popa
mov
movl
push
mov
xchg
push
out
sub
push
dec
hlt
pop
jne
mov
pop
movsb
out
inc
fs
arpl
in
xchg
inc
adc
jecxz
icebp
icebp
ret
jns
mov
mov
mov
rorb
pop
cmp
xchg
ljmp
fsubs
fsubl
out
cld
jge
mov
and
and
sub
bound
ja
insl
and
push
mov
nop
sub
sti
cmpsl
psrad
lods
sub
fcmovb
outsl
lods
sbb
jp
mov
out
inc
dec
sbb
scas
hlt
pop
cmp
repnz
cltd
lahf
clc
xchg
lret
dec
jnp
push
outsl
cltd
mov
jnp
shlb
inc
mov
jg
jne
cmp
lcall
xor
ljmp
pop
mov
mov
lds
sbb
cmp
shll
fucomip
rcrb
dec
std
outsb
addl
cmp
mov
push
popf
testb
push
cld
and
pop
outsl
or
je
cld
outsl
jo
cs
out
xor
pop
mov
dec
movsl
mov
sub
sub
test
daa
and
call
int3
sbb
cltd
imul
pop
addl
push
insb
imul
in
xchg
incb
add
mov
in
xchg
jnp
xchg
jns
xchg
sub
push
pop
sbb
andl
fldenv
adc
lret
mov
xor
and
mov
pushf
int
or
nop
pop
mov
xchg
sarb
out
adc
sub
insb
vmwrite
inc
sbb
dec
cmpsl
and
outsl
data16
mov
pop
ss
mov
int3
shll
sub
pop
out
or
jns
mov
sub
xchg
negb
sub
fstpt
and
lcall
push
lret
sub
in
mov
leave
inc
or
sub
jmp
lcall
dec
aas
inc
jno
jge
mov
pop
out
mov
js
add
out
in
and
mov
add
ja
and
mov
ss
dec
stos
push
pop
push
push
hlt
pop
mov
sub
scas
jg
jg
adc
pusha
add
fs
add
push
rorb
out
test
and
add
addr16
adc
push
fisubs
fsts
jae
pop
in
xchg
pop
mov
pop
cld
jns
ss
popf
add
push
push
sbb
mov
lds
jmp
enter
addb
and
mov
xor
mov
imul
and
or
into
push
fstpt
stc
pop
mov
mov
or
cmp
nop
dec
sub
inc
arpl
dec
int
sbb
mov
sbbb
stc
push
jne
inc
cmpsb
cli
ss
xor
faddl
xlat
cltd
aas
xor
leave
aam
sbb
push
gs
sub
sbb
ja
out
xlat
adc
cmp
and
leave
sub
dec
mov
sbb
pop
adc
adcl
mov
fwait
inc
inc
cli
arpl
inc
fisttps
xor
call
iret
pop
jg
call
sti
shl
cwtl
aam
shrb
pop
cmp
fidivrl
xchg
sbb
data16
stos
add
or
out
insl
std
inc
xor
scas
pop
ss
sub
int
xor
sbb
or
dec
outsl
fstl
mov
push
das
cmp
or
jmp
mov
push
jne
dec
call
sbb
pop
pop
or
adc
jno
movsb
push
int
and
mov
or
jo
push
or
sbb
jmp
xchg
popa
lret
lcall
aam
rol
mov
cmp
mov
mov
dec
psraw
and
pop
sarb
pop
push
decl
and
pop
es
dec
and
movsb
mov
test
dec
sahf
xor
repnz
or
out
mov
push
fistl
add
xchg
notl
add
cmp
add
cmpsb
mov
enter
sbb
mov
add
lahf
pop
sbb
mov
icebp
in
cmp
test
and
sub
xchg
fildll
popf
sbb
outsl
in
mov
sbb
jo
or
lcall
shll
enter
sbb
pop
loope
in
aam
nop
mov
pop
hlt
push
ljmp
loop
outsb
sub
push
xchg
lods
cmp
enter
xor
scas
int3
loopne
mov
cld
or
inc
jo
xchg
icebp
jge
lods
pop
mov
push
idivb
test
repz
cmc
shll
sub
test
lcall
add
pop
js
and
add
in
pop
dec
clc
into
add
xchg
aaa
jmp
pop
imul
xor
shll
icebp
push
das
jge
ret
xor
lods
scas
cwtl
pop
dec
out
or
shll
outsb
nop
addr16
mov
cs
mov
iret
adc
sti
dec
pop
call
push
adc
pop
pop
ficoml
jecxz
xor
inc
mov
mov
ja
jg
and
lahf
jne
cmp
test
or
filds
addb
outsb
add
outsl
inc
enter
xchg
lea
mov
ret
cmp
sbb
push
mov
push
lret
push
nop
inc
push
in
pop
imul
pop
pusha
sbb
sub
faddp
dec
repz
in
mov
lahf
cmc
add
sub
mov
pcmpeqb
xor
nop
pop
sbb
pop
xor
pusha
cmp
or
divl
popf
leave
int3
pop
xchg
stc
cmpsb
in
cld
xchg
and
stc
mov
or
push
add
sub
push
rcr
popa
loope
out
pop
out
incl
push
fstpl
test
js
pop
sbb
aad
out
pop
add
dec
dec
leave
add
mov
mov
dec
xlat
ret
ja
clc
jnp
int
cmp
add
mov
mov
dec
xchg
and
repnz
icebp
addr16
xchg
popf
jmp
arpl
inc
inc
data16
in
xchg
pushf
jg
jo
je
icebp
lds
adc
add
lds
loope
ret
mov
fwait
sahf
mov
xchg
adc
test
push
int3
inc
enter
sbb
sahf
pop
mov
and
xchg
pop
xor
scas
lock
incb
push
add
cld
xchg
cmc
jo
stos
or
mov
pop
adc
popf
push
les
mov
sub
pop
dec
add
int
or
lcall
mov
ljmp
cli
jns
or
insb
les
pop
lcall
jbe
into
movsb
bound
cmpsb
lds
pop
jmp
xchg
pop
mov
lret
dec
mov
movsb
arpl
pop
mov
push
jl
mov
in
dec
add
push
dec
sub
mov
mov
push
stc
mov
mov
fwait
mov
mov
inc
ror
popa
cmc
sti
je
push
and
dec
cmpsb
or
es
fisttps
cwtl
scas
sub
adc
mov
pop
xchg
loope
and
pop
das
cltd
sbb
push
sbb
cmc
and
bound
lret
xor
gs
ds
mov
sub
cmpsl
inc
lret
sub
dec
sti
jne
sti
aas
movsl
sub
add
sahf
subl
insl
inc
movsl
jnp
bound
fldt
outsl
popf
add
aam
add
std
pop
mov
dec
fistpll
xchg
dec
mov
fs
pop
scas
jmp
pop
and
rcll
push
cli
jno
popa
aam
mov
outsb
xor
out
mov
lret
cmp
mov
sub
imul
mov
jbe
mov
jmp
movsb
mov
pop
push
mov
jbe
mov
sbb
mov
xor
mov
loope
push
mov
jne
dec
out
push
in
jecxz
xchg
inc
in
push
pop
mov
aad
sahf
add
mov
test
mov
ljmp
push
ror
lahf
nop
inc
stos
fsubrs
stos
ljmp
and
loopne
sub
test
jnp
sbb
mov
and
cmc
out
inc
or
mov
sahf
loope,pt
sahf
mov
testl
xchg
dec
jmp
jecxz
pop
push
xchg
pusha
or
pushf
inc
jnp
test
jl
push
loop
cwtl
lds
pop
data16
mov
stos
mov
lcall
xchg
sarb
leave
cmp
push
mov
lcall
fimull
or
cmp
sub
xorb
mov
imul
sub
test
add
sbb
mov
inc
sub
jbe
push
in
dec
aad
lods
fsubs
xchg
insl
roll
nop
lahf
add
fnstsw
jbe
in
fs
add
pop
cmp
jbe
mov
punpckldq
xchg
and
nop
in
jle
mov
sbb
stos
pop
inc
or
imul
into
mov
lods
add
push
xchg
sub
jle
or
push
xor
jle
mov
faddp
pop
stos
mov
jge
rcr
mov
scas
jmp
and
pop
xchg
dec
jo
push
jg
or
leave
adc
in
movsb
daa
adc
cmp
mov
add
dec
sahf
mov
test
dec
int
fsubl
daa
loop
out
dec
pop
jo
in
mov
jg
je
mov
mov
jl
adc
mov
add
dec
push
test
pop
neg
arpl
clc
sub
mov
cld
fwait
jl
push
les
sub
mov
jne
int
sbb
test
mov
pop
mov
cs
adc
pop
push
pop
cltd
and
movsb
cmp
ret
push
jge
dec
cmc
int
mov
enter
fcomps
xchg
dec
lret
lds
or
xchg
cmp
out
or
mov
sbb
ljmp
mov
pop
mov
jo
jnp
out
aaa
inc
ja
push
in
subb
mov
jae
fcoms
test
lahf
dec
out
rcrl
pop
cs
aam
inc
jne
dec
mov
xchg
lea
hlt
pop
or
int
dec
sbb
mov
fcmovu
mov
add
pusha
xlat
mov
pop
pop
int3
incl
sbb
sub
rcrl
mov
jecxz
lock
shlb
lock
sub
nop
mov
xor
lcall
lds
sub
bnd
xchg
lret
sub
add
mov
insl
outsl
in
jns
jne
shrl
int3
xor
or
add
cmpb
dec
es
jns
loope
mov
mov
shl
inc
std
xor
sub
jbe
lcall
scas
ret
sub
aas
rcl
fistpl
loope
mov
mov
or
out
or
loope
daa
test
adc
jbe
repz
fwait
mov
fcom
mov
or
sbb
outsb
lahf
dec
mov
cld
adcb
jge
movsb
push
adc
test
pushf
ffree
pop
into
shl
test
mov
jge
test
addr16
outsl
cmp
lret
mov
xor
cmpb
jle
pushf
adc
mov
adc
inc
imul
pop
sub
stos
adc
dec
sub
les
and
test
std
dec
or
mov
cmp
fs
jp
dec
inc
mov
pop
xchg
shrb
les
push
xor
repnz
push
cld
xchg
jg
jae
addr16
inc
faddp
ljmp
pop
loope
mov
ds
fcmovb
dec
or
cmp
mov
loop,pt
xchg
popf
xchg
push
in
lret
insl
lock
jl
xor
xor
pop
xor
cmpsl
roll
cmp
mov
add
fidivs
into
fidivs
and
mov
inc
cli
jne
gs
add
mov
mov
repz
stc
nop
mov
fmul
xchg
xchg
neg
out
mov
iret
inc
mov
xor
push
cwtl
xchg
rorb
lret
jmp
xorl
in
in
add
negl
dec
push
in
lret
inc
imul
mov
test
sbb
push
inc
sbb
fisttps
mov
jno
pushf
cld
and
fld
dec
lods
loop
cmp
aaa
jbe
cltd
sbb
add
sbb
pop
iret
cli
fs
add
push
push
jl
inc
sub
sbb
shll
xchg
add
les
xchg
movsb
pusha
sub
ret
xor
jno
out
mov
sbb
jle
xlat
xor
es
add
icebp
jbe
out
das
jp
mov
lea
dec
sbb
lods
arpl
mov
imul
fsubrl
and
es
pop
cwtl
push
xchg
cs
mov
push
movsl
icebp
sub
ja
iret
test
pushf
jne
insl
xlat
shll
push
mov
aad
jns
out
push
test
jle
jle,pn
dec
cld
ljmp
out
loope
add
xor
pop
sar
mov
cmc
inc
mov
dec
adc
lea
sar
cwtl
mov
lcall
les
jae
and
dec
popf
lock
repnz
xor
jne
xchg
aam
clc
cmp
xor
cld
pop
xchg
xor
sbb
clc
adc
xchg
testl
xor
pusha
jne
out
rcr
mov
jae
out
stc
cmp
mov
pop
mov
sub
pop
push
push
pushf
inc
xchg
ljmp
lret
or
popf
movsl
jle
sar
xchg
and
mov
sub
mov
xchg
cmpsl
inc
loopne
xchg
mov
orb
fisubrl
dec
pop
das
and
jp
in
sbb
mov
dec
xchg
mov
adc
frstor
mov
sbb
sbb
xor
xorb
cld
mulb
push
mov
adc
sti
into
das
shrl
jmp
xchg
rclb
cmc
ficompl
dec
inc
mov
movl
mov
addr16
jp
shlb
lods
cmp
or
movsl
cltd
cmp
jae
or
push
mov
pop
mov
push
stos
adc
inc
adcl
int
scas
outsl
mov
cmp
popa
mov
cmp
loope
insb
push
push
and
jnp
daa
add
stc
xlat
addl
cmp
adc
sahf
mov
popf
or
mov
roll
push
fildl
mov
mov
into
jns
cmp
lret
mov
mov
push
ret
pop
mov
inc
scas
inc
arpl
jl
push
dec
lods
loop
and
sarl
les
sub
mov
pop
mov
lret
or
cmp
mov
fdivr
lock
call
cs
adc
lret
stc
movsb
dec
in
icebp
out
aad
lret
int3
mov
out
sbb
je
dec
loope
lock
je
arpl
mov
adc
mov
xor
call
or
xchg
inc
xor
lcall
sbb
ss
aas
cs
adc
pop
and
cli
fwait
sub
in
je
add
ficoms
or
hlt
out
jae
icebp
mov
or
sbb
shlb
out
mov
cltd
clc
or
mov
shll
mov
sub
push
jg
dec
rcrb
dec
cmp
stc
and
inc
pop
inc
mov
push
iret
lea
mov
aas
lret
scas
dec
repz
pop
cmp
sbb
jnp
add
out
rorl
cs
aam
mov
sub
mov
jne
fwait
mov
mov
dec
inc
int3
jge
aaa
ja
cli
sub
sti
inc
in
xchg
inc
push
leave
psubw
sbb
rdpmc
cmp
jbe
imul
xor
pop
lret
sti
clc
ds
test
scas
out
gs
outsb
add
aas
loopne
jnp
jecxz
inc
cmp
fldenv
dec
cmp
add
xchg
lahf
sub
loope
jns
cmpsl
dec
mov
mov
lea
hlt
lds
sub
test
xor
inc
shrl
ja
mov
cmp
mov
outsb
ret
mov
in
js
xchg
push
mov
shrl
add
movsl
mov
pushf
xchg
jle
xchg
sub
inc
adc
xchg
call
xor
in
je
mov
lods
or
inc
mov
push
push
cmp
repz
and
ret
aam
sbb
sub
fwait
push
popf
push
cmpb
add
xchg
fnstenv
sub
pop
test
orb
adc
js
mov
xor
in
lods
jmp
loope
adc
fbstp
xchg
adc
addl
testl
lods
test
pop
aad
lods
sbb
adc
sbb
sub
pop
mov
fs
sbb
int
pop
jne
xchg
aaa
dec
jle
int3
divb
repnz
loopne
mov
push
les
mov
int
sub
cmp
fwait
sahf
ds
rorl
sahf
popf
repnz
fnstsw
sub
jb
mov
or
pop
fcoml
cmpsl
xchg
xlat
insb
insb
cmp
push
outsb
js
int3
rolb
sub
xor
lock
xor
loopne
inc
jo
test
inc
push
push
pop
leave
roll
inc
dec
fs
add
cmp
xlat
pop
call
jp
int3
je
sahf
pop
pop
dec
aam
xor
bound
pop
xchg
in
stos
pop
sub
pop
fnstcw
pusha
outsb
cltd
sub
jae
xchg
cwtl
js
loope
fildl
inc
mov
int
into
add
jno
test
sbb
jp
jae
out
ljmp
pop
leave
lea
mov
adc
fistps
cli
lcall
lret
push
sbb
cmpsl
in
pusha
test
xchg
push
loop
sub
loopne
fsubrp
fnstenv
inc
es
push
mov
imul
mov
xchg
js
lret
mov
icebp
outsb
or
mov
adc
add
push
inc
out
test
ret
cmpsl
rclb
cmp
xor
pop
jecxz
popf
cmpb
pop
mov
mov
ret
mulb
fnstenv
cmp
push
dec
mov
fstpl
pop
enter
rcr
std
inc
jge
adc
sub
fldl
das
xor
push
dec
nop
lea
sub
ret
stos
call
aaa
jnp
adc
pop
mov
adc
roll
or
jp
movsb
aam
mov
adc
cmp
mov
imul
adc
in
outsl
js
pop
inc
mov
add
mov
mov
pop
mov
out
inc
jg
push
mov
std
es
push
and
or
cmp
dec
sub
cmpsl
insb
mov
sbb
outsb
and
btr
fisubrl
in
jbe
ljmp
or
fwait
add
in
or
in
js
xorl
negb
cmp
test
sbb
addr16
mov
mov
insl
aad
add
mov
pop
ja
jno
daa
pop
in
inc
fists
imul
push
jo
xchg
fcoml
das
adcl
rolb
shlb
xchg
cs
push
inc
loope
loop
jns
jmp
sub
adc
icebp
mov
cmp
aam
es
scas
scas
sub
mov
sbb
dec
xchg
jle
clc
pop
mov
lea
mov
scas
movsb
incb
ljmp
subb
out
cmp
inc
in
mov
jge
sub
cmpsl
pushf
lret
xor
rorl
xor
aad
adc
mov
pop
cld
fucomp
sbb
xchg
aaa
jns
daa
movsb
scas
in
xor
fimull
and
mov
les
fwait
and
loop
test
mov
movsl
stos
ss
shrl
or
in
xchg
fsubl
leave
outsl
das
mov
xor
repz
mov
nop
jne
mov
ds
and
jle
xchg
jle
test
sahf
movsb
adc
fisubs
mov
fwait
or
adc
adc
daa
sbb
loopne
cmp
mov
mov
inc
mov
push
fldl
in
outsl
or
sbb
add
int3
adc
leave
jbe
cmc
lcall
mov
cmp
dec
das
cmp
aam
decl
in
fdivl
push
sub
fcomi
adc
mov
cld
mov
stc
xchg
test
xchg
xor
popf
data16
mov
in
pop
lods
dec
ja
push
and
jbe,pn
push
pop
xchg
push
push
jb
mov
adc
fs
lcall
dec
mov
sub
cmp
mov
xor
sbb
mov
jnp
mov
bnd
xchg
jl
repnz
xor
lahf
pop
pop
inc
hlt
pop
sub
xchg
xchg
mov
push
xchg
push
in
into
jge
sub
xchg
roll
sub
inc
fnstcw
mov
leave
mov
adc
shrb
sbb
cmp
setae
sbb
mov
xor
inc
sub
ror
data16
xor
add
cmp
nop
push
ds
repz
lds
dec
fiaddl
push
mov
loope
out
jmp
out
add
mov
or
loope
cmp
loop
push
adc
xchg
adc
roll
pusha
push
dec
jecxz
cmp
mov
aaa
test
fidivrs
pop
addb
stc
sbb
push
jno
rcrb
test
popf
lret
in
add
mov
test
inc
jmp
sbb
out
xchg
cmp
fisttps
iret
stos
lods
adc
scas
in
jge
into
notl
push
iret
or
flds
pop
adc
subl
cwtl
or
cmc
mov
jbe
in
cltd
stos
jae,pn
sbbb
mov
dec
mov
xchg
jecxz
push
pop
ret
fst
jne
test
repnz
out
andl
idivl
dec
iret
mov
je
jbe
or
faddl
push
xor
test
mov
jbe
nop
or
sahf
fcompl
mov
push
add
xor
repz
inc
lea
mov
test
lods
cmp
les
lret
adc
cmc
pop
xlat
jp
int3
in
jbe
mov
test
fists
add
arpl
mov
lret
xor
mov
and
movsl
cmp
lods
adc
sub
jmp
xlat
sets
sbb
add
imul
js
sub
mov
call
jecxz
std
fidivrl
aad
cs
xor
aas
bound
sahf
and
scas
or
pop
int3
arpl
stos
push
adc
xchg
and
call
dec
mov
int3
aaa
inc
or
ss
shrl
pop
push
jbe
and
push
push
jno
mov
and
orl
jmp
loop
or
popf
ret
push
sub
sbb
push
inc
or
imul
ret
enter
sub
jo
subl
mov
mov
xchg
xchg
push
mov
hlt
gs
xchg
leave
xor
outsb
ret
jp
imul
movsb
lret
ja
mov
jae
insl
fdivs
daa
pop
lods
ljmp
lock
push
and
inc
pop
cwtl
cli
jmp
and
cmp
pop
dec
cwtl
es
dec
mov
loop
add
and
jne
pusha
mov
push
cmc
idivb
test
lcall
sbb
cmp
sbb
or
or
and
xchg
xor
cmpsb
in
cmp
jnp
add
jns
cltd
mov
mov
test
imul
imul
xlat
fnstsw
jmp
cmpsb
sahf
fs
lea
leave
shlb
xchg
sub
sub
iret
mov
call
lock
sub
fildll
mov
push
push
movsb
fs
xchg
rcr
and
mov
xor
call
adc
insl
out
inc
sub
lods
daa
roll
pop
inc
jp
test
cmp
or
jecxz
int
dec
or
popa
xchg
loop
jle
stc
add
shlb
mov
nop
push
sti
out
call
push
ds
imul
xchg
mov
adc
fldl
div
or
negb
pop
xor
insb
test
xor
sti
addr16
cmc
pusha
inc
js
mov
sbb
pop
push
les
add
dec
lods
gs
adc
adc
push
mov
sub
cmp
fstl
adc
jl
in
mov
add
sti
inc
push
sub
int3
mov
xor
cmpsl
add
movsl
out
sbb
pop
bound
in
fiadds
icebp
add
pop
lock
push
sub
xor
clc
sub
out
add
push
jmp
xchg
pop
sbb
loop
ja
ljmp
aaa
xor
outsb
xchg
aam
shl
inc
into
xchg
dec
leave
and
and
rcrl
push
lret
xchg
movsl
cmp
icebp
xor
enter
jmp
data16
nop
adc
push
inc
jno
mov
lea
xor
ljmp
pop
cmc
cwtl
ja
inc
mov
fidivl
addr16
xchg
movsb
xchg
push
add
ljmp
das
aam
sub
cmp
test
popf
sti
push
call
mov
push
inc
call
xchg
xlat
sub
and
js
add
mov
in
mov
and
xchg
mov
push
inc
cs
jnp
cmp
xchg
cmp
jmp
jl
push
cmc
sub
sub
push
aam
mov
inc
mov
es
or
jle
in
push
xor
push
dec
std
imul
cmp
xchg
xlat
ficomps
push
push
dec
fcomp
fbstp
fcomps
fdivr
popf
leave
cmp
nop
xor
adc
cmp
cmp
sarb
xchg
mov
ret
mov
jg
xchg
insb
ret
in
adc
in
mov
arpl
jno
clc
mov
std
inc
push
repz
fimuls
mov
mov
das
mov
dec
popf
lahf
inc
clc
dec
cld
mov
addb
and
bound
rcll
fiadds
pop
in
imul
xor
push
add
xchg
dec
mov
and
dec
jb
add
xor
imul
cmp
insl
push
inc
pop
jno
push
xor
xlat
loop
lods
repnz
ds
aad
xor
or
out
shll
pop
cld
repz
xor
dec
ret
fs
loop
push
xor
jl
jb
mov
pop
nop
push
and
adc
mov
bnd
cmpsl
fbstp
and
mov
pop
loop
clc
push
mov
inc
idivl
add
aas
stos
jae
fwait
or
add
fmuls
fisubrs
pop
repnz
shll
sbb
ljmp
pop
push
inc
sbbl
lds
mov
and
sub
iret
mov
xchg
rcll
and
adc
xchg
xchg
popa
rclb
notl
add
mov
mov
imul
jge
fcom
scas
movsl
dec
popf
add
dec
mov
in
and
or
cs
mov
loope
cmp
mov
test
push
push
dec
test
add
lods
std
inc
mov
push
xor
cmp
dec
adcb
xor
xchg
xor
cmp
sub
xor
int3
test
pop
rolb
cmp
imul
test
jae
cmpb
out
movsl
pop
cmp
push
sahf
cmp
add
push
and
mov
lret
sahf
fs
inc
mov
sbb
mov
cmpsl
iret
or
rol
add
fs
jno
jecxz
lock
mov
mov
pop
dec
imul
dec
imul
ljmp
outsl
adc
and
movsb
addr16
call
lods
ror
scas
jns
sysexit
pop
sbb
stc
dec
repz
call
decb
js
lea
fdivrs
sub
push
fiadds
cwtl
lret
push
sub
dec
sub
sub
andb
jp
cli
xor
loop
add
lds
pop
pop
out
outsl
dec
out
aam
mov
cli
fisttpll
xchg
jbe
jle
xchg
and
pop
aas
lea
out
outsb
push
call
mov
jle
jp
mov
inc
loop
mov
mov
cli
adc
adc
sub
aas
neg
jmp
out
mov
fdivrl
outsb
or
xchg
xchg
lods
imul
sub
xchg
sti
cmpsb
inc
pop
lret
sub
mov
mov
daa
in
bound
ret
jmp
shrb
je
adc
xor
aad
divps
push
pop
mov
pop
scas
pushw
push
inc
sub
cmp
stc
loop
inc
mov
lods
mov
iret
sbb
push
xlat
jne
mov
pop
ret
jge
stc
cs
test
ds
sub
es
mov
mov
cmp
icebp
rorb
sti
cmp
fmull
or
in
loopne
jg
or
push
int
setb
sbbb
stos
dec
xchg
and
pop
aad
mov
mov
aaa
inc
lret
rolb
pop
iret
addr16
push
mov
jb
add
inc
jle
out
cmp
cmpsb
sbb
push
inc
pushf
add
or
das
andb
push
cmp
xchg
ds
ss
imul
ret
cmp
lcall
mov
xchg
inc
mov
out
sub
pop
mov
stos
pop
adc
dec
std
add
jbe
mov
pop
lret
outsl
stc
ds
mov
xchg
fwait
jns
popa
testl
xor
jnp
push
mov
orl
fstpl
mov
add
and
ret
jp
outsl
mov
or
inc
mov
and
inc
add
int3
cwtl
cmp
inc
add
adc
adc
imul
mov
jb
inc
dec
xchg
icebp
mov
mov
add
pop
dec
sub
jo
mov
jne
inc
dec
sbb
out
out
xchg
pop
jmp
test
out
clc
test
xchg
lock
bound
push
mov
sub
pop
jge
jle
popf
cwtl
and
lds
inc
mov
leave
jmp
jge
sbb
pop
subl
lret
gs
xor
push
mov
jns
pop
out
fs
adcb
sbb
mov
out
sub
jmp
xor
pop
sbb
aaa
inc
mov
cltd
and
mov
iret
cmp
out
int3
jns
pusha
imul
cmp
mov
adc
aas
xor
inc
aas
push
dec
out
cmp
sar
cld
sub
inc
popa
inc
scas
nop
cmp
mov
mov
insl
pushf
or
or
jbe
jbe
out
mov
test
fs
clc
cli
test
repnz
xor
hlt
loope
pusha
cmpsb
movsl
or
repz
push
jle
push
push
bnd
xchg
mov
and
std
hlt
jmp
cmpsl
insl
inc
mov
adc
fmul
dec
shrb
pusha
orb
mov
and
icebp
cmp
les
inc
or
mov
pop
jg
mov
stos
js
and
repnz
pop
hlt
and
and
and
add
repnz
leave
sar
arpl
cmp
push
mov
lret
inc
hlt
jnp
pop
jne
push
pop
mov
xchg
imul
inc
iret
xchg
dec
stos
mov
loopne
mov
es
lock
jmp
int3
aad
stos
aas
repz
inc
es
enter
pop
aaa
dec
mov
int
mov
sbb
sbb
jb
push
jns
data16
jne
out
and
sarl
lds
pop
sti
add
dec
enter
and
pop
addr16
imul
fdivs
inc
dec
cmpsb
ret
jnp
scas
lcall
pop
inc
sbb
rcrb
mov
inc
xor
iret
stc
mov
gs
cmp
lahf
dec
push
mov
into
imul
nop
push
push
movsb
push
mov
std
fs
stc
mov
dec
outsb
pushf
push
pushf
xchg
and
or
hlt
pusha
cwtl
fdivs
je
lea
sub
and
add
rol
xchg
cwtl
jo
mov
sar
cwtl
outsl
xor
les
out
adc
sub
pop
int3
sub
cld
into
ret
mov
xchg
mov
dec
ret
stc
call
out
mov
insb
sub
popa
fadds
hlt
and
xor
pop
mov
imul
inc
scas
mov
adc
push
adc
xchg
push
push
push
pop
mov
push
addr16
adc
inc
lods
or
sti
fnstsw
jle
movsl
hlt
mov
xor
je
dec
aaa
lcall
mov
add
pop
movsb
lds
mov
inc
scas
or
test
xchg
test
xor
cmp
test
mov
inc
cmp
mov
test
push
fstpl
dec
push
cwtl
aas
and
into
pop
xchg
push
fsubl
or
pop
scas
mov
jg
jle
dec
sahf
je
push
int3
out
dec
adc
ja
jbe
add
sti
lea
sbb
cwtl
enter
enter
test
mov
cltd
xchg
push
jecxz
mov
xchg
xchg
and
ja
dec
cltd
loop
lock
jns
jmp
cmp
sbb
lods
xchg
add
jp
mov
jmp
push
adc
pop
jne
scas
iret
and
mov
clc
fcompl
jmp
js
mov
add
jp
jnp
jl
fs
idivl
mov
aas
movsl
aaa
jecxz
dec
xchg
cmp
loopne
sbb
lar
mov
cmp
xchg
dec
dec
insb
out
inc
adc
into
dec
dec
cltd
shlb
sbb
mov
test
jg
cmc
cltd
pop
mov
cmp
mov
out
shll
xchg
mov
cmpsl
xchg
mov
inc
pop
sub
inc
push
stos
dec
xor
rorl
subl
repnz
subl
xchg
xchg
rcll
flds
and
mov
fs
dec
xor
jns
scas
notb
cli
mov
ret
stos
clc
cmp
scas
loope
scas
std
ret
mov
movsb
or
lret
xor
pop
sub
pop
cs
loopne
sub
call
xor
adc
test
push
dec
mov
jnp
dec
daa
mov
cmp
mov
adc
test
jnp
mov
loope
xchg
data16
jge
mov
mov
popa
or
test
into
inc
add
or
mov
shlb
out
pop
dec
mov
jge
dec
or
mov
les
arpl
fs
testl
lret
fisubrs
add
inc
scas
wbinvd
xchg
aam
mov
xchg
bound
or
movsb
push
mov
aad
pop
adc
into
in
cmp
cwtl
mov
cmpsb
xchg
push
lahf
cmp
mov
sub
mov
sbb
scas
sbb
xchg
sub
mov
push
test
das
arpl
adc
jmp
mov
popf
cmpsb
xor
pusha
lods
cmpsb
mov
mov
jecxz
mov
fsts
imul
icebp
fdivrl
jnp
mov
lahf
mov
lock
pusha
or
call
mov
out
or
xchg
push
mov
mov
sbb
inc
hlt
inc
pusha
xor
pop
pop
dec
outsb
mov
dec
insb
je
pop
jnp
jmp
pop
daa
scas
xor
jge
xor
inc
rolb
xchg
adc
jge
int3
inc
in
mov
xor
jg
addl
les
rolb
addr16
inc
js
fisttps
mov
push
fisttpl
in
xor
les
pusha
arpl
enter
in
pop
pop
push
xchg
or
dec
sbb
jb
loope
lahf
dec
xor
sbb
cli
adc
mov
xchg
js
imul
mov
les
popa
lcall
push
add
cld
jecxz
and
int3
inc
dec
push
pop
xchg
loop
adc
sahf
mov
jl
push
pusha
lea
dec
push
outsl
jns
pop
scas
ss
adc
std
adc
xchg
and
pop
inc
in
stc
fnsave
cmpl
and
push
adc
scas
shrl
mov
test
cmp
clc
xchg
or
xchg
adc
adc
lcall
or
roll
test
push
mov
jne
ds
fidivrs
pushf
push
stos
pushf
sahf
mov
push
shl
mul
pop
ss
fistps
loopne
fyl2x
lods
push
rcll
mov
add
or
pushf
or
mov
ljmp
ret
jae
inc
movsl
pushl
mov
xor
arpl
xor
adc
fnsave
cmp
int3
jge
popa
movsb
push
jge
add
pop
pop
mov
ljmp
add
jb
aaa
add
mov
cltd
xor
clc
es
or
and
rcrb
out
pop
or
sarb
fmuls
cmc
dec
pop
xor
mov
stos
sub
xchg
sti
repnz
and
ret
cwtl
cmpsl
clc
mov
shlb
je
and
mov
jmp
mov
mov
jnp
xor
imul
arpl
or
call
add
lds
xchg
outsl
aam
xlat
pop
xchg
jo
sbb
adc
mov
pop
lds
inc
or
ror
mov
xchg
xchg
loope
dec
add
or
das
dec
xor
sti
lcall
js
pop
mov
enter
mov
inc
adc
cmpsl
lods
xor
mov
cld
ds
cltd
push
enter
and
adc
cmpb
sbbb
or
jp
movntps
push
xor
or
ffree
push
and
cmp
out
decl
lret
aas
popl
xor
jae
fcoml
mov
stos
inc
ja
je
in
in
test
nop
ror
js
add
mov
jmp
fstcw
mov
mov
call
cmc
gs
dec
add
push
or
push
loope
and
sub
ret
rcrl
fwait
jno
mov
sarb
enter
add
scas
mov
pop
pop
push
fdivl
enter
xchg
mov
imul
cmp
sbb
ljmp
dec
or
xlat
into
jae
jmp
dec
out
ja
mov
push
cmp
adc
fimull
add
mov
lods
adcl
inc
fidivrs
xchg
stos
dec
inc
sub
loop
mull
adc
sbb
pop
mov
push
push
fcomps
cwtl
pop
jge
pop
ret
addr16
add
mov
add
imull
fwait
sbb
inc
stos
mov
jb
fwait
in
aam
sub
push
push
scas
dec
push
xor
mov
mov
cmpsb
pop
dec
das
sub
cmp
mov
xchg
int3
mov
int3
mov
mov
fldcw
sub
cs
and
xor
stos
adc
outsb
lock
fwait
rorb
pushf
outsl
xor
xchg
cmpl
jns
insl
inc
pop
jmp
notb
adc
dec
and
hlt
insl
stos
pop
andl
mov
mov
inc
jmp
sub
cmp
ficoms
aaa
dec
aas
jnp
pop
xor
jo
fs
mov
das
daa
mov
gs
pop
push
ds
outsb
stos
add
stos
cmpsl
arpl
insl
xor
ss
mov
fdivs
outsb
imul
roll
mov
add
jg
and
icebp
shrb
sub
loope
jae
dec
xor
sbb
sub
aam
das
in
das
lock
pop
or
test
pop
pop
xchg
add
hlt
mov
hlt
mov
cmp
bnd
lods
mov
cmpsl
incb
or
adc
push
mov
pop
mov
pop
shr
mov
mov
push
rorl
mov
adc
mov
xor
adc
adcb
mov
data16
repz
cmpsb
xchg
ja
stc
ret
cmpsb
je
mov
add
and
xchg
rorb
push
lahf
gs
sub
mov
sub
and
push
pop
jp
jp
outsb
lahf
testl
mov
cld
adc
xor
sbb
inc
xchg
setb
movsb
es
and
xlat
pop
jae
sub
pop
and
je
sub
gs
popf
jl
divl
push
out
fdivp
and
and
imulb
mov
add
xor
sub
sub
fwait
daa
jecxz
stos
and
fistpl
inc
fmuls
call
lcall
adc
add
int3
dec
mov
add
pop
xor
scas
rcll
lret
xor
insl
and
aad
pop
dec
jb
fcmovb
cmp
dec
pop
call
push
xor
cltd
shl
pop
bound
daa
js
addl
pop
push
fdiv
add
cmp
ret
xchg
test
push
adc
sti
jg
insl
add
inc
mov
jo
sub
mov
dec
test
cmp
push
arpl
mov
stos
mov
fs
jge
mov
or
sti
mov
mov
jb
pushf
xor
lret
inc
push
push
add
aad
mov
das
cmp
call
or
jb
adc
dec
shrb
dec
ja
pop
and
sbb
xchg
jmp
xor
dec
lahf
fdivrl
jne
adc
stos
mov
mov
leave
clc
shl
lret
popa
push
lret
jmp
addl
imul
shll
je
sbb
push
dec
mov
jmp
loop
insb
pop
stos
bound
mov
jb
pop
add
addr16
cmpsb
fwait
sbb
jle
xor
lock
fiaddl
out
sub
sarl
repz
out
or
je
in
inc
stos
arpl
leave
jp
jle
jbe
pop
fucomip
xor
push
fisubl
lea
or
testl
scas
push
jg
xorb
stos
inc
adc
int3
pop
jecxz
test
jecxz
imul
out
mov
fs
add
jmp
inc
mov
mov
ficompl
cwtl
adc
mov
or
or
sahf
shrl
inc
xlat
push
mov
fstl
lret
xor
jo
ficomps
loopne
das
cmp
in
sbb
cmp
shll
pop
xchg
sti
test
hlt
data16
push
roll
cld
arpl
add
mov
cmp
or
adc
lahf
add
imul
xchg
insl
mov
leave
lock
cmp
movl
mov
mov
in
dec
jnp
popa
and
loopne
mov
test
add
xchg
jno
mov
popa
sub
flds
lods
cmc
not
inc
xor
jno
mov
adc
xchg
push
fistl
mov
push
loope
pop
cmp
inc
cs
add
ja
dec
cmp
and
cmpsb
pop
in
jecxz
lock
sarl
mov
loop
rorl
ret
inc
data16
jns
jg
ds
cmc
bound
fisttps
pop
cmp
inc
pushf
pop
lret
ficoml
scas
pop
imull
xor
negl
mov
adc
inc
pop
lret
mov
prefetchw
or
test
xchg
and
sub
ficoms
cld
mov
push
xchg
and
xchg
cmp
mov
mov
test
es
test
orl
lds
ret
add
dec
push
cmp
in
push
xchg
or
repz
mov
add
outsb
insl
repnz
lret
mov
repnz
cwtl
jecxz
and
lahf
or
mov
sbbl
je
push
popa
jno
push
loop
scas
in
lcall
cmp
ret
sbb
mov
popf
inc
pop
faddl
jne
and
bound
in
sub
xor
lds
sbb
xchg
push
ds
cwtl
inc
xchg
pusha
jno
cli
add
jl
ficoml
push
inc
jo
std
and
pop
jnp
test
pop
pop
xchg
cmpsb
xor
inc
rcr
stc
sbb
data16
mov
push
sub
test
hlt
lahf
popf
or
jge
cmc
aam
sub
imul
sub
frstor
xchg
add
inc
iret
cli
les
dec
and
xchg
xchg
bound
movsb
mov
adcl
dec
mov
mov
cmp
jp
cld
enter
mov
dec
jmp
mov
mov
add
js
jo
or
cmpsl
mov
mov
push
push
fmuls
out
les
popa
or
imul
popf
dec
lock
push
lods
dec
int
mov
test
lret
mov
xlat
fs
and
in
mov
xchg
es
es
pop
jl
dec
dec
ss
push
jle
dec
mov
mov
and
out
pop
mov
add
stc
mov
ljmp
lret
xlat
fstpl
fs
imul
ljmp
test
std
imul
pop
scas
push
sub
cmp
stc
xor
sub
jle
pop
std
lahf
and
sbb
add
adc
in
out
loopne
fildl
stos
pop
inc
ss
shll
sbb
push
mov
add
push
inc
sbb
rcrb
xchg
mov
cmp
add
push
or
insb
fs
aad
mov
adc
leave
sbb
xor
add
out
jl
int3
notb
and
mov
aam
ljmp
push
loop
fisubs
sbb
pop
pop
popa
mov
sub
mov
icebp
in
sub
jl
andb
cmpsb
pop
sbb
push
rcrl
aam
lods
fldt
imul
jmp
inc
sub
data16
pop
popa
cmc
add
imul
xchg
hlt
sbb
inc
or
movsb
mov
push
xchg
mov
xchg
push
and
fs
push
dec
ss
dec
fcmovb
loope
clc
mov
push
xorb
ret
loopne
in
lcall
pop
stc
cli
repnz
jge
lods
push
push
jp
mulb
data16
and
les
push
repnz
inc
add
stc
gs
test
mov
jmp
lret
out
arpl
pop
xor
push
dec
shrb
jno
cwtl
inc
cmpsl
shrb
cli
fbld
pushf
pop
mov
xchg
subl
cld
bound
and
sub
movsl
add
int
ret
push
out
inc
ds
imul
mov
ffree
aaa
lea
jp
dec
cmp
pop
lea
adc
fidivrs
cmpb
clc
mov
and
gs
mov
das
stc
jo
js
sbb
mov
xor
xorb
mov
iret
imul
hlt
int3
jb
or
out
cmp
sub
dec
xor
mov
pop
or
imul
movsb
loopne
pop
arpl
fildl
push
and
loop
add
mov
loop
dec
push
mov
cld
iret
xchg
test
xchg
jae
cmc
sub
lods
xor
movsb
movsb
gs
cltd
sbb
and
mov
sub
xor
jmp
arpl
inc
ljmp
mov
xor
insb
mov
jmp
sbb
adc
mov
sbb
sub
jns
or
fstps
rcrb
inc
or
arpl
jl
loopne
lock
js
xchg
and
ffree
enter
das
jb
jbe
push
mov
mov
mov
xchg
cmpsl
orl
xor
and
jnp
pushf
enter
sbb
int3
sbb
xlat
sbb
dec
pop
sub
inc
cld
out
dec
push
pop
inc
sarl
or
adc
cltd
lods
sub
aaa
std
aaa
ljmp
xchg
mov
and
imul
pop
imul
xchg
add
push
movl
scas
ja
js
push
add
iret
lcall
or
add
nop
fwait
mov
and
in
fnsave
pop
mov
mov
aam
dec
test
mov
lret
and
mov
mov
xor
mov
sub
data16
push
shlb
fwait
xchg
jmp
shrl
loopne
arpl
insl
pushl
jg
dec
sub
dec
jmp
std
adc
ret
imul
into
jns
sub
out
rolb
nop
jne
pop
xorl
mov
data16
push
out
pop
inc
aaa
push
imul
mov
dec
dec
mov
adc
jle
out
cmp
cmp
outsb
mov
push
pop
sahf
fmul
mov
mov
mov
dec
mov
ret
or
sbbb
addl
or
pushf
mov
adc
lret
repz
cmpsl
loope
call
cmpsb
rorl
repnz
xor
xchg
add
popa
aaa
ret
mov
cmp
xor
cmpsb
std
jmp
je
or
pop
push
data16
popf
pop
in
call
push
push
subl
cltd
pop
inc
clc
fdiv
xchg
cwtl
js
adcl
and
and
jmp
xlat
or
push
mov
inc
fwait
and
push
lret
ficompl
test
and
lods
or
sub
dec
inc
lds
sbb
xor
pusha
push
stc
or
add
mov
ja
mov
pop
fnsave
out
push
push
aad
fucom
dec
jl
jno
push
clc
jg
xor
jbe
ds
add
xchg
pop
push
mov
lods
xor
push
xor
sahf
mov
pop
pop
or
jo
push
or
xor
cmp
leave
in
push
cmovne
fwait
pop
mov
or
fcoms
cmpsl
pop
in
xchg
or
loope
inc
lods
dec
pop
jb,pt
push
mov
test
mov
mov
inc
pop
arpl
icebp
and
es
sbb
push
cmp
std
xchg
jge
pop
or
pusha
pop
stos
in
push
xor
stos
lcall
adc
rorl
gs
dec
dec
data16
sub
pop
pop
stos
adc
sbb
sarb
jb
adc
stos
cmp
sarb
cmpsb
aam
or
push
push
mov
and
sbb
loope
push
hlt
cmc
leave
addl
inc
and
movsb
pop
gs
mov
adc
fcmove
in
daa
fisubrs
cmp
push
add
xchg
test
xor
pop
xor
mov
lahf
cmp
loope
out
mov
fdiv
pop
aad
pushf
ja
dec
psadbw
dec
sub
xchg
mov
mov
add
fiaddl
in
lods
sub
dec
pop
adc
or
test
cmp
stos
aaa
jmp
adc
push
dec
adc
push
pop
mov
in
cs
rolb
push
test
inc
xchg
fcmovbe
rep
int
lods
test
or
pop
xor
jge
push
test
pop
fadds
cmp
push
movsl
mov
xchg
cmp
stos
xchg
and
pop
push
out
jp
ss
xlat
fnsave
mov
dec
rorb
cwtl
push
jg
cmpsb
lods
test
fwait
push
push
in
ret
mov
cltd
mov
push
mov
pop
pop
dec
inc
rorb
dec
ljmp
add
xchg
in
aam
xor
or
es
mov
mov
and
out
cmp
add
jnp
stc
scas
push
mov
jbe
fwait
push
cmp
and
movsl
mov
xchg
popf
xor
pop
lds
icebp
shll
clc
adc
xor
inc
lods
or
xor
mov
inc
dec
shll
cmp
mov
jb
jecxz
sbb
test
lods
jno
outsl
push
pushf
jne
enter
in
mov
test
stc
xchg
hlt
sbb
cmp
aam
xchg
xchg
pop
cltd
push
aas
outsl
sbb
add
inc
mov
clc
lods
lret
clc
addr16
decb
cltd
cmp
lock
std
pop
add
lods
adc
xor
jecxz
adc
push
lock
iret
cmpsl
push
cmp
es
pop
pop
movsl
pop
push
push
stos
sub
push
sub
mov
enter
xchg
mov
push
dec
test
scas
xor
sub
into
jge
fbld
mov
les
std
sbb
push
sub
outsl
leave
dec
shlb
imul
mov
pop
jle
insl
pop
add
push
mov
sbb
pop
mov
shll
je
test
insb
arpl
inc
fwait
imul
outsl
add
stc
add
mov
sbb
cbtw
jge
cwtl
mov
add
jmp
xchg
jg
mov
scas
pushfw
fidivl
xor
clc
pusha
daa
mov
jne
pop
enter
test
cmpsb
cld
outsb
sub
or
imul
mov
xchg
loope
pop
xor
jl
pop
sti
insl
xor
leave
cmpsl
xchg
movsb
iret
add
mov
dec
aaa
sbb
movsl
sbb
pusha
push
fs
sbb
jbe
mov
pop
test
push
mov
iret
ss
jb
call
push
jbe
dec
xchg
pop
insl
xchg
sub
test
mov
sbb
adc
fs
push
enter
fiadds
add
out
in
mov
add
push
fwait
mov
lcall
je
dec
test
movsb
ret
mov
sbb
iret
or
mov
sub
dec
stos
and
cmp
mov
and
xchg
out
cs
jbe
lcall
push
leave
gs
push
mov
std
call
repz
fsubrl
sti
lahf
or
sahf
ret
adc
subb
push
ljmp
push
dec
shrl
xchg
loop
jge
push
pop
jns
push
xchg
xchg
mov
shll
and
in
cltd
adc
xchg
subb
insl
scas
das
dec
aad
sbb
cs
pop
shrl
mov
jl
add
or
nop
push
xchg
das
push
andl
cltd
cmp
shll
aaa
data16
stos
test
mov
add
pushf
cmp
add
add
xchg
cmpsb
inc
repnz
inc
mov
dec
and
xchg
int3
fdivs
rorl
rorb
aaa
mov
hlt
mov
nop
cli
loopne
sub
fs
stos
push
pop
xchg
lock
inc
icebp
mov
jbe
cmpsl
movsl
or
testl
les
nop
or
jp
adc
addr16
add
scas
imul
sarl
in
mov
mov
ret
sbb
inc
pminub
xchg
scas
xchg
dec
ret
jnp
sub
push
pause
jge
mov
push
clc
cmpsl
mov
adc
loopne
adc
sbb
ret
enter
add
xor
cltd
or
sub
jl
aam
inc
push
sbb
lea
mov
inc
pusha
inc
insl
inc
pop
cmp
shl
xorb
mov
xchg
and
jge,pn
jb
inc
das
inc
stos
dec
dec
ffreep
dec
data16
mov
enter
mov
dec
bound
cli
and
in
cli
fs
xchg
add
rorl
or
push
jg,pt
pop
push
mov
add
and
subl
stos
lock
mov
rcrl
cmc
and
xor
insb
xorb
add
scas
std
fsubrs
mov
fldcw
push
pop
or
aaa
popl
mov
push
scas
pop
mov
mov
xchg
mov
out
xor
in
orl
call
aas
gs
popf
lahf
sti
xor
mov
outsl
mov
jge
cmpsl
adc
dec
rorb
sti
out
rclb
cwtl
and
jno
add
sbb
popl
mov
xchg
in
sbb
pop
mul
mov
in
mov
mov
xchg
notl
inc
cmp
dec
out
xor
xor
fucom
xor
lds
push
mov
xchg
loopne
ret
adc
inc
das
leave
out
or
mov
fstps
pop
cmpsb
add
pop
cmpsb
cmp
push
xchg
mov
cmp
pop
add
sbb
xchg
in
xchg
sbb
mov
pop
mov
sahf
mov
xlat
jl
call
jg
jbe
out
sub
sub
sbb
push
cmc
or
mov
and
das
inc
and
gs
mov
or
test
or
xchg
xor
mov
sub
popf
sbb
ss
cld
push
add
negb
mov
gs
out
and
dec
or
add
out
cmp
out
mov
mov
push
add
ljmp
leave
cmpsb
jae
mov
pop
in
pop
xchg
xorb
mov
pop
insl
dec
mov
xchg
jns
fs
or
jnp
jne
int3
xor
inc
pop
push
lds
xlat
sub
call
add
mov
adc
xchg
cmc
aas
fsubp
es
xlat
cmp
stos
mov
push
mov
lock
mov
jne
mov
shl
mov
out
loopne
fimull
xor
fdivl
iret
or
movsb
lcall
xchg
and
add
scas
xchg
call
xchg
stos
addr16
fcompl
and
shrl
ds
popa
push
dec
add
arpl
push
scas
lret
and
xor
mul
outsb
mov
in
xchg
roll
sbb
or
or
xor
imul
push
mov
sahf
inc
out
punpcklwd
mov
shr
jge
xor
lret
lcall
mov
push
lret
xabort
dec
in
xor
jmp
push
push
test
je
imul
test
daa
xor
mov
adc
mov
imul
repnz
test
gs
cmpsl
jne
rclb
incl
repnz
jns
jnp
daa
stos
pop
cmp
xchg
jmp
fidivrl
dec
push
cmpsb
xchg
fcmovnu
mov
mov
fmull
xor
cmp
jge
jo
stos
mov
sbb
mov
mulb
adc
leave
or
test
add
inc
mov
jb
cmpsl
push
fldt
aaa
xchg
outsl
sbb
fsts
repz
pop
push
push
enter
and
imul
loop
sub
mov
aad
pop
mov
adc
dec
imul
sub
nop
xor
jnp
mov
pop
pop
hlt
adc
mov
mov
imul
or
cli
mov
xor
fiaddl
lods
mov
inc
jmp
test
push
cwtl
nop
xchg
mov
mov
push
lock
mov
and
pop
jo
mov
mov
pop
loop
enter
jns
xor
call
lcall
nop
cwtl
cmpsb
and
cwtl
inc
loop
orb
sti
mov
push
mov
mov
mov
jns
and
and
or
mov
dec
push
and
rcr
aas
dec
iret
ret
and
and
mov
hlt
pop
fisttpl
pop
push
dec
dec
insl
shll
lcall
imul
aaa
or
inc
sub
xor
lods
shlb
xchg
xorb
xchg
sub
addr16
jns
adc
out
loop,pt
into
cmp
cmp
pop
nop
add
mov
pop
pop
jmp
jle
jecxz
arpl
cmp
mov
js
jge
mov
mov
lret
repnz
pop
fisubl
subb
cli
fwait
mov
jbe
xchg
mov
adc
lcall
aad
scas
mov
sti
pop
in
popa
movntq
das
insb
sub
andb
ss
pop
and
jge
out
or
sub
cmp
jl
rorl
dec
add
xor
mov
push
adc
test
std
shl
add
or
push
icebp
fildl
push
out
and
shrb
pusha
inc
add
shrb
outsb
jge
inc
inc
ficoml
sahf
sub
pop
jp,pn
dec
bound
vpunpckhbw
xlat
dec
push
aam
shll
dec
ret
xchg
ss
test
std
xchg
dec
mov
and
mov
mov
cmc
xchg
iret
mov
fstps
call
adc
mov
sar
mov
mov
adc
push
xor
jbe
xchg
cs
std
add
leave
leave
incl
mov
das
push
lds
cmp
neg
mov
adc
mov
enter
das
leave
dec
scas
xor
mov
js
xor
sahf
shr
in
movntps
loopne
xor
xorl
mov
pop
jns
dec
sar
or
dec
and
xchg
and
jb
mov
rorl
std
mov
out
push
int
inc
and
hlt
cld
adc
pop
and
cmp
dec
popa
push
inc
pop
ja
pop
dec
ljmp
imul
lds
push
and
mov
test
xchg
pushf
dec
mov
scas
mov
gs
andb
out
push
jae
outsl
xchg
push
fiadds
pop
movsb
mov
sbb
bound
jl
or
sub
clc
fsubl
dec
add
roll
sti
adc
mov
mov
addr16
movnti
bound
stc
mov
cmp
insl
xor
add
sbb
mov
mov
add
sbb
mov
outsl
jl
push
and
xchg
repz
mov
andb
ljmp
in
xchg
dec
push
and
iret
jmp
es
and
test
push
xlat
dec
shrl
mov
test
cmp
ds
mov
repz
sti
dec
jae
fsubrl
jl
push
scas
ret
pop
cwtl
xchg
jbe
adc
add
adc
mov
loope
and
or
sbbl
cmp
aas
iret
lret
and
fcmovu
push
out
fbstp
scas
mov
push
pop
mov
idiv
xor
ret
subb
movsl
into
lea
and
pop
sbbb
push
fimuls
addr16
in
dec
add
jp
lahf
xchg
mov
ss
push
hlt
sbb
jb
in
inc
push
inc
jns
sub
je
or
inc
xor
addr16
cwtl
orl
sahf
xchg
jge
mov
shlb
mov
jno
mov
push
cmpsl
sub
lock
add
pop
xchg
loope
negb
inc
add
fdivr
mov
lret
xchg
xchg
pop
push
dec
mov
xchg
repnz
fs
mov
out
popf
lahf
sbb
xor
jmp
arpl
fcoml
pushf
push
and
int
loope
mov
adc
mov
mov
imul
movsb
into
shl
repz
add
leave
mov
cmpsl
add
int3
lock
repnz
fsubs
mov
add
mov
xor
popf
pop
sub
or
fistl
cltd
inc
cmp
pop
subl
and
push
mov
push
call
sub
cmp
xchg
push
sbb
lcall
jmp
add
aam
dec
inc
callw
xchg
cmpsl
dec
jbe
daa
leave
aad
pop
out
push
fnsave
pop
inc
mov
mov
mov
and
adc
loopne
fsubl
cs
sub
daa
xorl
pop
mov
jo
stc
xor
fwait
in
stc
jae
mov
mov
popa
mov
in
xchg
ljmp
add
lods
jno
jno
pop
xor
jmp
test
xor
mov
movsl
popa
cld
loopne
xlat
test
lea
leave
ja
test
andb
scas
js
test
testb
and
cmp
outsl
and
lock
dec
fbld
in
pop
fidivrs
fwait
test
andl
popa
push
jp
xor
hlt
mov
or
pop
mov
sbb
xor
ss
rcrb
lret
sub
fildll
xor
scas
pushf
test
mov
cs
lea
or
fistpll
mov
xchg
lcall
clc
adc
rcl
lds
xchg
mov
mov
and
mov
popa
xor
pop
mov
xchg
mov
sbbb
incl
push
ljmp
fxtract
fdivrp
mov
jb
push
inc
cs
loopne
fdivr
icebp
imul
dec
std
mov
inc
push
ljmp
mov
adc
cs
xor
adc
into
arpl
movsb
movsl
enter
sbb
aam
hlt
xorb
adc
pop
adc
fildll
dec
push
xchg
push
mov
jo
push
adc
in
add
test
clc
jmp
or
mov
cmp
dec
lret
lock
into
xchg
pop
aas
mov
push
inc
orb
adc
xchg
cli
jge
flds
push
xlat
pop
and
in
xchg
mov
ss
xchg
ss
test
fidivs
pop
les
call
cmp
loop
cs
adc
loope
adc
lret
pop
fwait
adc
loope
pop
mov
jb
adc
jmp
cmp
ljmp
fisttps
loopne
es
dec
sub
pushf
jl
pop
insl
fnstcw
jno
pusha
inc
mov
fwait
inc
into
cs
pop
sbb
cltd
mov
adc
flds
shll
imull
sbb
ret
push
xchg
mov
es
pop
jbe
hlt
into
adc
sbb
jae
in
in
mov
push
lret
aad
mov
jl
push
push
out
mov
inc
dec
fcomps
xchg
sbb
adc
aaa
push
and
jo
icebp
cmpsb
cmp
icebp
gs
mov
pop
sti
movsb
xchg
insb
xor
addl
cmp
mov
mov
and
mov
repz
mov
lahf
xor
je
es
mov
adc
rolb
inc
sbb
fwait
negl
frstor
cwtl
cmp
cmp
in
movl
in
lods
add
lcall
xor
dec
mov
and
je
sub
pop
sbb
pop
into
mov
inc
popa
push
inc
mov
xor
mov
aas
mov
add
sub
cmp
mov
xchg
push
aam
divb
js
int
cs
dec
add
je
mov
insb
adc
pop
lahf
jmp
shll
int
das
ja
call
movsl
fsubp
or
fcmovbe
push
pop
mov
test
sub
mov
pop
or
sbb
scas
mov
push
out
add
sbb
xchg
pop
das
push
mov
imul
fwait
mov
and
sbb
xor
dec
imul
push
jle
mov
mov
mov
pop
adc
push
loopne
jle
leave
xchg
aad
sahf
cmp
aaa
jmp
xchg
pushf
mov
lods
or
shrb
pop
lea
cmc
and
loopne
inc
adc
filds
aas
or
mov
xor
cltd
test
push
fildl
lods
out
dec
xchg
xchg
ret
movsb
jnp
dec
jbe
lahf
cltd
dec
inc
and
pop
arpl
adc
mov
into
enter
and
lahf
adc
leave
inc
inc
nop
out
cli
divb
call
push
jns
sbb
and
sub
mov
lods
mov
jo
subl
rorl
mov
and
cli
cs
cmp
or
loope
cmp
jnp
sbb
push
adc
jecxz
and
or
ss
out
jns
idivl
xchg
bound
push
mov
sahf
inc
ss
jmp
jmp
lea
adc
adc
add
or
lret
addr16
add
jnp
out
int
aaa
cwtl
xchg
mov
shlb
inc
cmp
imull
add
xor
or
cmp
stos
inc
nop
mov
imul
jl
jbe
pop
adc
mov
lea
std
inc
rcrb
imul
ret
andb
scas
jg
lock
sbb
cmpb
sub
sub
push
dec
jnp
insl
ret
lods
fstpl
jmp
std
fcompl
and
add
xchg
out
mov
arpl
sub
mov
divl
popa
outsb
mov
mov
iret
stos
jns
es
sub
jecxz
dec
mov
pop
je
or
push
lahf
xchg
dec
pop
stos
xor
pop
iret
push
fsubrl
mov
fcompl
mov
and
jno
fcoms
and
jmp
pop
arpl
lahf
add
lea
xor
or
scas
sti
pop
popf
lods
pop
imul
test
ja
out
push
les
xchg
ret
mov
sbb
bound
inc
xor
popf
les
movsb
adc
sti
sub
jb
or
push
in
jge
insl
adc
push
xorb
sbb
lret
jle
iret
fwait
mov
repnz
test
loope
jne
pop
mov
adc
repnz
ljmp
imul
iret
jp
cs
jo
out
loop
xor
aas
jle
add
mov
jo
mov
mov
inc
shlb
ljmp
shll
xchg
push
cmpsl
push
fistpll
pop
xchg
mov
or
inc
sbb
xchg
popf
dec
mov
inc
iret
pusha
push
ja
mov
mov
fadds
mov
lret
xor
lcall
inc
jbe
xchg
push
insb
xlat
add
mov
je
pop
andl
add
and
int3
std
iret
ja
adc
sub
je
inc
sar
pop
sbb
push
xor
xchg
add
xchg
je
dec
jle
es
scas
lea
outsb
cmp
mov
fdivr
xlat
adc
outsl
inc
lahf
pop
shlb
scas
and
fcmovne
and
jle
lret
repnz
std
test
shl
call
xchg
out
movsb
cmp
pop
mov
das
mov
inc
mov
loopne
int3
mov
mov
jg
mov
or
loopw
shr
mov
dec
adc
popl
adc
cli
in
jo
jp
jns
test
cmc
mov
stos
cmp
cmpsb
jo
imul
addr16
xor
xor
cmc
outsl
subb
sub
popl
aam
into
cmp
sbb
cli
adc
mov
dec
push
push
dec
stos
sub
jbe
cmp
fisubrl
mov
jbe
call
xor
pop
jmp
and
call
mov
bound
dec
push
enter
test
cwtl
jg
cmpsb
xchg
mov
icebp
movsb
ret
xchg
out
test
lods
sub
addr16
fcompl
call
fisttpl
adc
push
imul
loopne
mov
daa
add
xchg
mov
loop
mov
push
je
int
loopne
lds
movsb
adc
test
ljmp
outsb
cmp
fstps
cltd
pop
lret
lds
into
push
test
push
add
push
push
mov
repz
mov
push
sbb
jns
mov
xor
jle
cmp
es
loop
ss
popa
nop
pop
sub
pop
cvtdq2ps
xchg
hlt
mov
repnz
fwait
into
pushf
jle
adc
sub
cmp
add
test
mov
int3
incl
xchg
pop
xor
xchg
data16
fcomp
fwait
ret
inc
lret
xchg
lret
outsb
lcall
orl
xchg
jns
into
push
sub
insb
sub
hlt
and
or
cld
popf
cli
dec
pop
mov
and
mov
lahf
insb
mov
mov
xor
cmpsb
mov
inc
js
jecxz
cmp
stos
add
xchg
daa
popf
lods
and
mov
or
bound
cmp
in
jno
xor
repz
fs
or
push
sub
sub
sbb
mov
in
test
cmp
test
adc
pop
rol
fs
imull
les
imul
and
sub
xor
add
or
into
pop
int
adc
fistpll
mov
sub
pop
pop
nop
inc
jnp
mov
mov
mov
lea
fnstenv
hlt
dec
xchg
ret
or
fstl
in
in
add
jecxz
rclb
add
xor
jbe
leave
jecxz
jns
add
mov
push
fs
pop
jle
sub
das
roll
adc
repnz
mov
icebp
mov
sub
data16
daa
mov
mov
xor
jae
cs
mov
gs
jmp
add
shlb
in
and
out
lods
or
imul
cmpsb
outsb
mov
dec
scas
cli
lods
mov
dec
gs
cwtl
and
mov
js
mov
mov
stc
adc
mov
jb
cmpsb
mov
sti
push
pusha
arpl
imul
adc
insb
mov
in
in
dec
sbb
push
push
and
js
aas
mov
inc
in
in
nop
iret
cli
pop
clc
into
push
add
cmp
outsl
mov
cmp
std
xchg
aaa
pushf
and
rcrb
xchg
add
outsl
push
and
and
xchg
mov
insl
stc
or
adc
push
mov
sahf
mov
fcmovnbe
sbb
adc
fs
fwait
je
movsb
mov
dec
jns
adc
mov
mov
shlb
pop
repnz
inc
sbb
fnstcw
cmp
push
movb
fldl
sub
fbld
in
gs
xorb
xchg
mov
insb
arpl
jno
push
stc
jnp
dec
scas
push
cmp
mov
pop
jge
mov
popf
mov
pop
cmp
xor
pusha
or
mov
add
or
add
inc
mov
push
mov
paddusw
adc
xor
dec
repnz
into
aad
pop
fadds
mov
fimull
roll
push
pop
fs
inc
inc
aad
xor
pushf
add
mov
xor
fwait
aad
ja
out
ss
cmpsb
addr16
mov
insb
lods
repnz
cmp
xchg
add
inc
adc
sub
or
xchg
sub
cwtl
push
outsb
shl
int
dec
in
imulb
movsb
push
inc
loop
sahf
push
dec
dec
cmp
mov
std
rcll
pop
lods
divl
ja
xchg
add
push
push
mov
and
fsubrs
jp
fcoml
mov
cld
mov
mov
leave
in
clc
push
inc
xor
nop
cmpsl
aam
mov
scas
imul
dec
imul
jmp
xor
pop
in
xchg
jno
push
je
push
push
ljmp
fnsave
aas
out
mov
pop
push
xchg
xchg
not
hlt
outsb
jmp
inc
adc
jl
scas
jb
ret
shlb
scas
std
pop
sub
stos
xor
jg
or
push
mov
adc
add
lds
xchg
push
sub
in
jbe
in
out
data16
dec
mov
dec
mov
pop
mov
stos
sbb
cmp
sahf
movsl
cmp
std
ja
mov
out
imul
mov
hlt
in
jo
iret
pop
les
lret
push
mov
lods
test
icebp
hlt
loope
loope
cmpsl
and
xor
add
fists
pop
lret
cmp
lea
ljmp
xor
mov
xchg
xlat
xor
lods
xchg
cmp
and
jno
xchg
shlb
in
push
ret
rol
jge
adc
mov
or
adc
dec
mov
push
jnp
jecxz
sub
push
in
adc
cltd
les
push
sbb
pop
mov
fwait
enter
jmp
cld
jno
mov
inc
pop
cmc
movsl
sub
push
lcall
or
fst
mov
sbb
test
sbb
dec
sti
mov
dec
lds
adc
aad
inc
faddl
push
iret
lret
repnz
xor
insl
mov
lahf
aad
rcrb
in
mov
mov
add
fmull
mov
push
shll
std
and
into
xor
dec
stc
test
test
cmpsb
daa
add
stos
mov
mov
cli
sbb
xlat
mov
in
jne
cmp
movsb
cmc
mov
outsl
cmpsl
dec
adc
mov
in
or
inc
pop
arpl
jmp
fs
out
cld
in
inc
rcrb
loop
dec
scas
frstor
adcl
ja
jle
cwtl
pop
vphaddwd
pop
jb
imul
dec
adc
xchg
jb
fwait
add
nop
xchg
pop
push
pushf
movsl
cltd
cmpsb
out
out
ror
into
and
push
popf
and
stos
adc
xor
xchg
lcall
pusha
sub
in
add
ja
fstl
jo
sti
sub
imul
xor
cmpl
cmp
push
data16
vorpd
outsb
cmp
mov
mov
push
sti
add
mov
xor
fwait
add
or
mov
pushf
pop
mov
and
ret
mov
sub
inc
nop
fadds
jl
xor
aaa
adc
int
sbb
adc
hlt
fcom
shrb
out
bound
mov
bound
cmc
pop
call
cmp
cmp
into
fmul
jecxz
mov
movsb
fs
subl
jo
testb
cwtl
popa
pop
mov
add
pop
xchg
test
and
pop
into
inc
mov
es
repz
sub
loope
pop
mov
mov
mov
cli
mov
add
xlat
jp
pop
xchg
test
test
les
jae
andl
sub
xor
aam
cmp
outsb
loope
add
or
nop
aas
fistpl
shrl
xor
xor
or
jp
xor
inc
mov
rcl
cmp
sbb
insl
roll
sub
adc
mov
and
fsubl
jg
mov
jne
ljmp
ds
repz
mov
scas
cltd
push
and
int3
sbb
dec
xchg
int
or
jl
pop
mov
imull
cmc
jno
aam
jp
sti
add
sahf
test
mov
scas
lcall
icebp
int
mov
call
mov
cmp
cmp
mov
loope
daa
nop
imul
mulb
pushf
sub
lods
pusha
jl
pushf
pop
loop
enter
sbbb
cmc
sub
lods
outsl
push
enter
inc
mov
mov
test
jne
mov
aaa
lock
fcoms
int3
adc
std
push
pop
jno
imulb
adc
xchg
sbbl
daa
daa
mov
mov
mov
mov
scas
xchg
wrmsr
leave
sub
sbb
xor
aad
cmc
testl
int
pop
ret
jg
push
aad
mov
lea
scas
into
xchg
jl
addr16
cwtl
test
shrl
dec
cwtl
mov
in
xor
xor
cmc
mov
jae
hlt
mov
je
push
and
fmuls
push
push
xor
fiadds
sub
pop
or
lods
jecxz
jecxz
rolb
cwtl
fidivrl
add
pop
xchg
out
mov
fdiv
adc
fbld
mov
adc
je
mov
or
dec
je
enter
pop
mov
inc
fisttps
mov
jge
mov
daa
inc
xor
negb
dec
lahf
sub
sbb
push
jne
mov
xor
sub
insl
pusha
stc
add
shlb
or
adc
dec
jp
or
shrb
dec
outsb
push
imull
cmc
mov
movsb
pop
add
sarb
xchg
adc
in
jbe
pop
xchg
popa
sub
pop
inc
or
add
or
add
mov
mov
sti
sbb
pop
sub
sub
xor
xchg
fimull
ss
dec
in
pop
in
loop
mov
or
and
push
xchg
cld
repz
xchg
or
mov
popa
sarb
mov
inc
lods
lods
xlat
mov
adc
xchg
pop
push
inc
add
test
hlt
mov
mov
mov
pop
push
or
ret
clc
push
out
lahf
aad
mov
cmp
mov
sub
popf
pop
lock
or
xor
into
lock
hlt
enter
mov
sub
iret
pop
cltd
sbb
and
dec
cs
pusha
xchg
mov
mov
mov
mov
insb
iret
std
fwait
push
movsl
loop
and
rcrl
loop
rorb
and
mov
jmp
or
mov
jae
fnsave
or
outsb
movsb
add
aas
int
jmp
movsl
lods
xor
imul
push
addr16
sbb
repz
out
mov
dec
push
lock
pushl
jg
xchg
cmp
dec
xlat
sbb
sbb
test
arpl
lods
lret
in
sbb
cmpsl
rclb
cli
and
movsb
insb
cs
jle
arpl
jecxz
sub
testb
insb
cmc
rcr
xchg
sub
lods
xlat
or
enter
mov
push
clc
les
push
xchg
pushf
sub
jno
fistpll
mov
imul
jle
adc
mov
push
add
sbb
sbb
sub
loopne
nop
clc
mov
popf
xor
adc
jbe
pop
arpl
mov
adc
mov
dec
mulb
mov
xchg
add
les
dec
and
inc
xor
loopne
push
and
scas
adc
push
stos
dec
sub
cmpsb
mov
and
push
add
fidivrs
std
mov
fldcw
add
cmp
test
leave
insb
inc
cmp
lahf
outsl
jno
test
and
jle
js
mov
pop
stos
mov
xor
test
sbb
cmp
sbb
fs
fstpt
ret
push
push
mov
adc
ljmp
cmp
dec
sti
mov
cmp
movsl
aas
movsb
test
stos
lods
movsb
push
addb
xorb
test
dec
cld
stos
popa
ficoms
rcrb
loopne,pn
fbstp
jae
lods
push
int3
call
dec
popa
push
push
push
mov
adc
sahf
push
loop
pop
das
xor
sub
xchg
out
mov
stos
sub
dec
sbb
dec
adc
adc
andb
add
push
mov
shl
inc
mov
push
add
lcall
enter
out
mov
leave
cmp
imul
imul
mov
jae
in
push
subl
jle
mov
scas
repnz
hlt
test
jo
xchg
orb
mov
add
mov
jnp
iret
nop
inc
mov
in
adc
mov
insb
das
jnp
test
cmp
sub
in
adc
xor
and
ret
mov
inc
movsl
daa
or
cmp
jne
jns
add
ret
mov
ljmp
leave
adc
cltd
jmp
and
add
and
sbb
jbe
stos
cltd
mov
scas
ja
lock
add
push
add
push
mov
imul
jo
repz
stc
idiv
adc
push
ret
sub
dec
sub
pop
or
jg
sub
movl
dec
lret
jno
ljmp
ss
into
dec
ret
push
or
adc
repnz
ds
mov
js
in
stos
rcll
in
popa
es
jo
pop
jl
pop
clc
bound
lods
push
lahf
aaa
sbb
test
mov
jecxz
out
lahf
mov
jnp
icebp
jno
adc
mov
jmp
fwait
sti
mov
aad
add
je
inc
sub
fisttpl
xor
push
sbb
sub
adc
jle
mov
jg
adc
adc
jmp
adc
push
or
pop
arpl
jne
push
and
mov
lock
inc
and
xchg
enter
mov
mov
arpl
adc
iret
scas
movsb
aaa
adc
gs
lods
push
sbb
mov
rolb
sub
cmp
arpl
mov
dec
sbb
jae
addr16
lods
pop
test
sub
mov
inc
push
mov
mov
or
fnstsw
xchg
pop
stos
add
push
sbb
shrb
xchg
jno
mov
jmp
rorb
int3
out
mov
push
xor
bound
dec
fidivrl
sub
arpl
insb
ja
xor
dec
xchg
inc
loop
mov
xor
mov
pop
mov
mov
xor
xlat
nop
arpl
in
test
movsl
sbb
mov
fincstp
lods
xor
jg
or
lcall
jno
pop
jbe
mov
mov
pushf
icebp
jle
in
push
mov
mov
adc
fdivr
insb
inc
shlb
inc
mov
ljmp
mov
jae
xchg
push
sub
mov
push
insl
inc
mov
and
dec
mov
adc
scas
pusha
imul
push
icebp
fstl
mov
ret
xor
xor
out
mov
mov
jecxz
mov
cwtl
and
les
idivb
movnti
loope
ja
xchg
xor
imulb
dec
js
enter
lds
dec
outsl
push
aad
icebp
adc
push
jecxz
xor
mov
popa
je
ds
repz
push
sti
pop
loopne
out
add
push
addb
fcmove
push
mov
into
and
imul
push
out
bound
in
push
dec
jg
sub
xchg
pop
mov
push
and
sbb
call
sbb
in
into
outsb
test
dec
jp
mov
or
jo
movsl
and
rcll
or
out
mov
cmp
or
sub
sti
cmp
inc
fdivs
in
jnp
sbb
and
aad
mov
popf
scas
xchg
add
imul
loope
popf
in
mov
xlat
mov
outsl
rcll
sbb
mov
scas
ljmp
fiadds
daa
ret
out
dec
scas
imul
pop
add
jbe
stos
lret
jne
fcoml
ret
fidivrs
add
es
rclb
mov
mov
testb
mov
rcrl
pop
in
cmp
cmc
pop
popf
repnz
dec
clc
add
xchg
add
fmuls
push
xchg
sbb
lret
out
xlat
hlt
ret
ret
stos
fwait
out
sbb
cmp
inc
jb
es
pop
out
pusha
push
scas
push
sbb
sub
push
mov
cmp
out
push
inc
or
inc
into
int3
pop
add
jno
ljmp
pop
out
das
mov
cmp
mov
jns
pop
js
lods
aad
push
add
je
cs
dec
clc
icebp
fdiv
es
andl
leave
call
push
xor
pop
incl
mov
iret
add
add
loope
lods
push
adc
nop
es
sub
test
aaa
ret
pop
mov
imul
arpl
sbbl
mov
loopne
cmc
loope
fisttps
xorl
ds
repz
adc
xchg
or
in
incb
loop
xchg
call
fs
or
or
inc
and
mov
mov
inc
out
cmc
cmp
xchg
pop
mov
push
fwait
iret
xchg
mov
pop
icebp
xchg
jmp
pop
testl
out
clc
loopne
mov
mov
adc
xlat
adc
adc
mov
or
cmp
subb
mov
dec
sbb
lea
jge
pop
hlt
xchg
imul
std
movq
rorl
inc
cmp
lret
repnz
add
repz
fists
mov
es
daa
sarb
jecxz
and
stos
mov
addr16
mov
jmp
ljmp
scas
test
adc
int3
adc
or
sub
jnp
mov
xor
pop
xlat
mov
addr16
sub
xchg
fldl
and
pusha
adc
jns
movsb
and
jbe
xor
lcall
fldz
mov
xchg
cmp
mov
out
mov
clc
js
jl
mov
mov
xor
nop
dec
shll
sbb
ss
int3
and
data16
pop
nop
lock
je
loope
lcall
pop
xor
decb
pmaxsw
or
or
sbb
inc
inc
jo
imul
cld
scas
mov
test
sbb
adc
xchg
xchg
jp
mov
add
mov
push
jg
test
xor
sbb
pop
popa
xchg
cmpsl
test
fld
lods
xchg
ret
leave
pop
mov
sbb
iret
xchg
scas
push
mov
adc
pop
and
pop
shll
ret
les
loop
add
pop
testl
sbb
lods
ret
je
adc
mov
jge
stos
dec
scas
cmp
mov
cmp
jmp
jae
xchg
int
push
lcall
daa
sahf
dec
and
cmp
adc
mov
push
lcall
std
push
aam
call
inc
sbb
adc
dec
loop
jne
adc
dec
sub
pop
cmp
xchg
es
cmpsb
out
cwtl
clc
inc
in
jbe
mov
jb
jmp
test
xchg
inc
inc
ss
mov
xor
cmc
sub
cmpsl
or
cltd
out
inc
or
push
sahf
sub
xor
sbb
mov
ficomps
dec
cmpsb
orl
je
pop
cmp
pushf
out
push
mov
nop
xchg
pop
iret
mov
push
test
cmc
push
repz
std
sbb
mov
inc
sbb
daa
xor
and
insl
push
jmp
arpl
xorb
mov
sahf
sbb
outsl
lods
sbb
jle
idivb
idivb
mov
xor
fwait
mov
jmp
mov
push
dec
push
xchg
pop
mov
inc
mov
js
inc
inc
push
and
mov
stos
rcrb
adc
les
cmp
sub
hlt
xor
call
jb
dec
lods
push
xchg
shlb
jp
aaa
jmp
into
jb
add
cmp
cmpsb
inc
call
sbb
sbb
xor
lea
adc
fdivs
mov
or
sbb
mov
mov
addb
mov
arpl
fadd
gs
push
xchg
insb
jne
mov
adc
pop
or
clc
iret
pop
arpl
mov
mov
pop
cwtl
cmp
cmp
and
loopne
mov
sahf
jno
aam
aam
lds
sbb
mov
push
xchg
lods
jne
sub
xlat
movsb
repz
sahf
jne
bnd
daa
test
dec
lock
cmp
and
cmovb
loop
jg
xor
inc
leave
nop
cmp
aaa
aam
movsb
mov
push
adc
xchg
mov
sti
fsubrp
fisttpl
mov
jbe
insb
les
cmpsb
vandps
jge
ficomps
lock
mov
ficoml
lahf
in
jno
in
or
mov
aaa
fisttpll
clc
jl
insb
add
shrl
mov
and
outsb
push
and
in
lret
out
outsb
jbe
pop
xchg
xchg
int
mov
sub
and
dec
pop
ss
fsts
xchg
inc
scas
mov
push
cld
inc
xor
pusha
inc
and
lret
test
cmc
enter
push
mov
out
or
lcall
add
movsl
js
fldt
scas
arpl
dec
mov
jg
dec
iret
mov
imul
repnz
push
ret
mov
rorl
jbe
bound
icebp
adc
or
mov
mov
cld
mov
mov
pop
xor
sbb
lods
dec
shrb
mov
push
cmp
es
or
inc
or
cld
orb
test
add
movsb
mov
imul
loopne
or
jecxz
fstpt
lock
and
xchg
adc
and
xchg
mov
cmpl
xchg
int3
xlat
out
test
push
xor
lods
add
ss
mov
test
aam
adc
loop
cmp
mov
jle
iret
cmp
jle
or
inc
lods
and
leave
icebp
dec
push
dec
mov
bnd
ja
inc
pop
mov
fnsave
sub
mov
pop
or
jmp
xor
mov
test
mov
scas
push
push
hlt
cltd
push
les
sbb
push
mov
ss
shr
std
repz
in
daa
cmp
mov
cmp
add
nop
cmp
sub
and
inc
cwtl
mov
scas
addr16
pop
dec
push
test
sbbb
mov
stos
ljmp
ljmp
sub
inc
mov
pop
cmp
loop
pop
dec
lods
hlt
push
adc
fsubr
pushf
je
lret
cmpsl
mov
sarb
or
std
cmp
push
out
adc
imul
xor
xor
xchg
data16
cld
insb
dec
iret
mov
fwait
xorl
fildl
mov
fcoms
repz
push
dec
pop
jnp
outsb
xchg
pop
add
lods
inc
dec
mov
or
adc
aas
add
sub
pushf
ret
push
mov
out
cmp
xchg
jbe
cmpsb
sub
push
push
fistpll
je
fidivl
mov
pop
lret
add
xchg
faddp
sbb
sub
hlt
or
inc
mov
cmp
in
fdivrs
and
push
arpl
inc
or
loope
or
xchg
sbb
pop
or
inc
jl
inc
xchg
ds
jne
or
test
mov
stos
cmpsb
inc
js
mov
mov
outsb
cmp
cli
divb
js
xor
push
jge
cmp
mov
into
repnz
cmp
int
loope
push
sbb
jge
push
mov
fwait
cmp
xchg
mov
sub
lahf
ss
imul
mov
mov
aad
fcomps
jmp
shlb
lods
repz
xor
leave
inc
out
jl
and
mov
into
xchg
or
xchg
fs
xor
popa
xchg
mov
mov
or
xchg
lcall
pop
inc
js
mov
fisubrl
mov
cmpsb
imul
mov
xor
jb
mov
sbb
mov
fnstsw
testb
mov
add
cmp
ljmp
mov
mov
fnsave
enter
stc
jo
sbb
stc
mov
lods
sarb
dec
dec
fnstsw
mov
lret
ljmp
or
add
adc
gs
lods
icebp
ja
subl
jl
mov
jne
cld
rorb
jb
fwait
mov
inc
pop
dec
sub
mov
insl
stc
lret
or
sub
sub
movsb
push
adc
iret
lret
data16
adc
pushl
jb
ss
dec
mov
xchg
fcoml
push
jge
pop
xchg
cmp
mov
sbb
adc
xor
jo
xchg
lcall
cmc
push
mov
xchg
cwtl
or
dec
mov
inc
test
repnz
push
rol
dec
mov
outsb
jge
xchg
xorl
das
push
ds
xor
int3
cs
test
mov
sarl
icebp
lret
js
in
inc
imul
cmpsl
lea
sbb
sub
bound
jecxz
fadds
dec
cmpsb
pop
hlt
out
xchg
mov
outsl
cmp
mov
push
fisubrl
aaa
mov
mov
es
sub
mov
or
pop
cmpl
test
jae
sbb
fsubrs
out
cmp
repz
jnp
flds
loopne
call
pop
cmpsb
cmp
cltd
je
mov
cmpsb
loopne
xor
lds
xchg
push
mov
inc
orl
std
mov
pop
out
lahf
push
ret
lret
or
cmpsl
push
xchg
test
int
je
loop
in
fcomp
add
mov
inc
mov
inc
jp
jp
xchg
aad
add
mov
pop
or
je
repz
inc
cmp
aaa
mov
mov
loopne
jnp
push
mov
xchg
enter
sub
loopne
les
pop
cli
inc
jmp
pop
jb
jbe
mov
jp
cmp
popa
aaa
jge
fildl
ds
xchg
lea
pusha
pop
push
and
add
leave
dec
movsl
jb,pn
dec
jns
pop
push
aaa
adc
stos
sub
out
out
mull
clc
je
push
xchg
test
ja
pop
aad
xor
xchg
xchg
xchg
daa
loopne
orb
mov
jbe
test
shlb
popf
dec
and
cmp
add
sbb
jmp
or
push
dec
hlt
shrb
sbb
cwtl
mov
adc
sbb
push
lods
push
movsl
push
cmp
sub
push
sub
stos
lock
jl
xchg
cmp
hlt
enter
clc
cld
push
and
jnp
ficoml
popa
subl
fsts
stos
jnp
loop
sbb
xlat
jns
out
cs
cmpsb
int3
lcall
or
add
test
push
nop
xor
les
mov
adc
push
in
mov
dec
cmp
xor
ficomps
nop
xlat
jge
pop
test
jo
aaa
aas
les
pop
mov
xor
push
movsl
enter
stos
xchg
rol
mov
sbb
icebp
xlat
mov
sbb
and
jg
sbb
cmpsl
xchg
mov
popf
arpl
adc
pop
mov
sub
scas
xor
push
shll
add
cmp
cmc
cmc
fldt
cmpsl
fwait
or
or
push
dec
repz
sub
out
inc
push
bound
fmuls
arpl
add
outsb
aam
lods
aas
aaa
push
outsl
or
cltd
sub
and
stos
inc
adc
rcll
int3
cmp
sbb
dec
sub
shrb
push
sub
push
push
aas
loop
push
pop
js
clc
and
out
xchg
add
mov
jp
stos
repnz
adc
les
xor
mov
mov
jno
adc
movsb
mov
and
sar
out
cltd
test
dec
adc
sub
push
sahf
mov
xor
dec
xchg
sbb
push
mov
movsb
scas
mov
pop
add
dec
xchg
clc
ss
call
inc
fdivp
gs
push
or
into
pop
lret
xor
jbe
outsl
subb
popa
xchg
mov
xlat
mov
push
push
sbbb
pop
jb
or
pop
adc
lret
add
arpl
mov
push
or
and
aam
xchg
jb
mov
xchg
mov
push
mov
xor
pop
mov
shl
insb
ja
cmpl
push
rcll
cmpsl
fmuls
das
adc
imul
cmp
fsub
fnsave
inc
les
pop
pop
mov
adc
pop
adc
push
shl
in
loope
outsl
lret
scas
push
xchg
dec
fs
stc
push
lods
mov
popa
mov
cmp
or
jge
jns
dec
fcompl
or
loopne
add
mov
les
cmp
sbb
sahf
movsl
addb
pop
or
lret
jmp
and
bound
loope
jno
or
stos
jge
ret
pop
push
in
inc
jne
mov
inc
sbb
pop
mov
sub
pusha
mov
fadds
inc
lock
iret
sbb
jl
adc
jmp
cld
fdiv
pop
add
lea
mov
push
sub
mov
mov
lock
sub
xchg
mov
fs
xor
and
jae
out
andl
adc
xchg
fisttpl
sub
cmp
sbb
pop
pop
add
les
xorb
ljmp
sub
stc
sbb
fstps
fildl
filds
pop
lcall
hlt
jmp
out
xor
ds
mov
pop
jg
xchg
sbb
out
notb
insl
lea
rcll
test
repz
push
inc
out
inc
inc
outsb
jecxz
inc
scas
jae
jp
sbb
mov
outsb
mov
mov
sbb
jmp
call
adc
lds
adc
pop
ret
int3
dec
mov
ljmp
push
cmpsl
add
je
sbb
lret
push
sbb
and
sub
icebp
xorb
mov
xchg
mov
pusha
cmpsl
int3
jae
jge
fiadds
movsl
cld
test
adc
or
stc
sbb
leave
inc
sbb
sub
cmp
leave
pop
pop
push
lds
add
jmp
iret
roll
je
sbb
pop
mov
pop
notb
orb
pop
mov
push
lods
movsb
xchg
repz
push
add
jmp
divb
sub
stos
iret
xchg
inc
addr16
add
fadds
mov
cmpl
int3
and
push
in
pop
xor
fmulp
or
mov
sub
and
add
pop
mov
jge
nop
mov
fstpt
sub
dec
sbb
sbb
cmp
xchg
enter
xchg
mov
xor
rep
mov
pop
pop
ret
jg
and
enter
testl
pop
enter
jl
mov
sub
and
sti
adc
icebp
out
adc
int3
test
insl
ds
test
inc
dec
sub
and
jl
sbb
icebp
cwtl
mov
inc
push
xor
mov
divb
jecxz
push
test
pop
xchg
test
mov
jp
aad
test
mov
inc
jg
les
sub
push
cmpsb
xchg
push
adc
pslld
loop
sbb
repz
lds
pop
dec
inc
adc
fisubrs
xchg
test
jecxz
xor
scas
pop
mov
stos
sub
std
push
pop
test
mov
das
enter
mov
mov
fwait
xchg
sarb
stos
sbb
xchg
adc
mov
in
ret
mov
cld
pop
mov
in
xor
inc
iret
aad
fs
push
cltd
mov
pop
iret
mov
andl
out
repnz
das
or
push
pop
inc
dec
cmp
dec
and
movsb
pop
jns
mov
sar
js
xchg
push
divl
jmp
add
sbb
push
inc
nop
rorl
adc
fstps
outsb
push
mov
clc
push
aas
and
mov
ret
mov
gs
xchg
gs
dec
mov
or
outsl
xchg
mov
out
dec
push
stos
push
lret
das
and
pop
dec
jmp
mov
sub
les
stc
subl
jecxz
dec
push
lods
cmp
mov
mov
aam
xor
pushf
add
int
pop
mov
stc
out
sub
pop
repz
mov
pop
out
lock
and
inc
pop
into
push
loop
xchg
dec
dec
inc
scas
clc
lods
outsl
cmp
jbe
cmpsb
mov
cmp
adcb
popa
add
push
test
fisttps
mov
add
add
aaa
xor
dec
subb
clc
aam
adc
xor
cmc
adc
movsl
pop
scas
push
nop
fsubs
inc
mov
jmp
push
mov
mov
pop
test
fucom
mov
jne
ret
lods
fwait
xchg
push
jae
fiadds
data16
dec
dec
in
push
maxps
aaa
shrb
cmc
ljmp
lds
mov
dec
and
and
mov
dec
and
imul
add
mov
lahf
add
pop
out
stc
adc
inc
cmpl
cmp
dec
fdivrs
sub
dec
mov
popf
jg
jbe
push
pop
in
sbb
sbb
pop
push
cltd
lods
inc
cli
xor
cltd
out
adc
mov
dec
dec
pop
jp
push
sti
inc
nop
pop
sti
jns
and
push
scas
mov
hlt
pop
ss
test
sbb
call
mov
pop
pop
dec
xor
cld
mov
pusha
jnp
aas
enter
mov
xchg
inc
inc
mov
pop
fwait
pusha
leave
daa
stc
cmp
test
gs
out
cmp
mov
jle
lahf
or
in
js
cmpsl
mov
movsl
orl
mov
jno
mov
mov
add
adc
enter
add
clc
repz
cmpsl
in
pop
fcomps
cld
pop
jns
test
out
or
mov
sbb
sbb
pop
aad
push
in
push
ja
pushf
xor
inc
jmp
jl
fistl
adc
push
loope
xchg
add
leave
in
daa
movsb
rcrl
inc
mov
xor
lret
dec
inc
imul
push
fstps
mov
pop
push
mov
shrl
jae
adc
lcall
xlat
cmp
lret
and
pop
clc
adc
sbb
sbb
push
push
aad
sub
inc
addr16
shl
leave
push
sti
cmp
aad
je
xchg
mov
stos
mov
pop
testl
es
xchg
cmp
adc
cmpsl
mov
gs
pop
mov
aad
sbb
data16
xchg
push
stc
lods
xor
lcall
aad
ja
dec
xor
cmpl
out
test
adc
es
cmp
push
leave
and
dec
repz
jbe
xchg
push
scas
das
xlat
cmp
orl
mov
sbb
push
jae
mov
fdivrs
fistl
dec
sarb
pop
mov
push
loopne
sbb
dec
jg
or
sbb
movl
int3
insl
orl
cwtl
in
pop
imul
cltd
shr
popf
shlb
loope
jae
mov
jae
shll
jno
jp
jae
imul
pop
push
jmp
negl
adc
push
pusha
adc
nop
push
inc
xchg
loopne
pop
sbb
rclb
push
sbb
aam
dec
fidivl
into
cmc
lds
pop
iret
pop
adc
popa
lods
push
cmpsl
sbb
out
out
adc
clc
or
or
stos
movsl
inc
jbe
lods
js
mov
jg
enter
jnp
fidivrs
pop
fwait
lds
sub
lods
xchg
into
cmp
push
jge
xchg
inc
inc
xchg
and
mov
adc
push
les
enter
and
fcmovbe
jns
arpl
and
sbb
mov
test
lret
pop
std
dec
sub
push
dec
xchg
jmp
idivl
cmp
test
test
aaa
lret
repz
fnsave
cmpb
add
sub
imulb
cmp
daa
fidivl
jo
jns
jne
sahf
pusha
cmpl
lret
inc
push
nop
cmc
out
adc
lods
mov
inc
out
call
sbb
xor
lea
insb
push
pushf
cltd
mov
mov
divb
lcall
addb
fyl2x
sub
dec
mov
ret
pusha
fs
jne
jmp
lahf
xchg
popa
stos
outsl
cmpsl
ret
mov
cmp
mov
xchg
inc
sub
add
mov
into
ret
test
sbb
xor
cltd
push
lock
fdivl
or
imul
xchg
dec
js
cs
iret
jb
ljmp
mov
dec
clc
xchg
mov
clc
arpl
dec
sub
sbbl
or
fstl
fistpl
sbb
mov
or
fs
jp
out
insl
fistps
pop
in
adc
or
aaa
icebp
adc
pop
dec
hlt
pusha
shll
jle
aaa
mov
jmp
xchg
cmp
icebp
std
insb
push
or
cmpb
sbb
cmp
stos
and
sbb
ficoms
lret
out
dec
mov
push
and
pop
std
mov
inc
cld
inc
and
faddl
sti
push
sahf
sub
mov
xor
leave
xor
dec
leave
adcb
or
popf
mov
push
inc
cltd
sbb
mov
das
pusha
xor
dec
in
mov
aas
sarl
pop
loopne
cld
fwait
testb
cmpsb
icebp
xchg
loop
loope
int
lods
xchg
mov
pusha
and
adc
rcl
jle
push
sbb
xchg
sbb
aam
mov
hlt
shlb
mov
push
ja
insb
cmp
iret
inc
lret
inc
xor
das
inc
cwtl
dec
xchg
stos
mov
outsl
fcomi
jge
lret
add
les
adc
jp
enter
xor
and
inc
jo
jg
test
push
inc
jge
cwtl
ja
sahf
cmp
push
shlb
loopne
mov
cmp
aad
cld
call
adc
lods
push
push
xchg
lea
js
enter
data16
sar
xor
mov
shll
stc
mov
dec
clc
xchg
cmp
push
and
int3
lret
mov
and
xor
xchg
dec
xor
in
push
movsb
jb
jge
pop
adc
cltd
jbe
rorb
pop
mov
lcall
xchg
dec
popf
in
dec
clc
outsl
loope
es
or
lret
push
sub
xchg
sbb
call
or
jl
int3
pop
dec
xchg
pop
in
movsb
imul
mov
ljmp
scas
in
insb
arpl
mov
inc
stos
das
lcall
xchg
jo
outsb
test
out
push
sbb
icebp
mov
or
jb
pop
rcl
sbb
pusha
mov
rorb
xor
dec
mov
fisttpll
dec
lds
loope
mov
push
sbb
jbe
sub
lahf
cli
loop
xchg
jae
jle
int3
and
cmpl
cmpsb
orl
les
adc
subl
sbb
nop
sarl
add
je
addr16
xchg
xor
fwait
adc
cmp
or
inc
push
test
loopne
mov
aad
mov
and
mov
cmc
enter
mov
fmuls
imul
lret
lahf
testb
adc
cmpsb
push
cmp
aam
stos
cwtl
shlb
mov
ret
test
mov
xchg
jno
std
lods
mov
lods
mov
mov
mov
dec
push
push
in
imul
test
test
ja
add
test
mov
push
loope
in
test
pop
in
cmp
mov
int3
push
sti
sbb
pushf
pop
or
lahf
mov
test
out
pop
repz
and
mov
mov
stos
pop
pop
mov
bound
inc
int
ret
cmc
xlat
sti
mov
int
ja
fwait
rolb
adcb
cld
lds
das
cmp
dec
adc
jbe
jmp
adcb
jno
outsl
sub
dec
jecxz
add
xor
jmp
sbb
mov
jmp
scas
lcall
bound
out
pop
mov
in
jno
sahf
mov
xchg
ficompl
mov
mov
outsb
inc
jp
pop
or
mov
scas
repnz
repnz
jecxz
pop
inc
out
lock
shlb
popf
in
inc
xlat
and
stos
scas
outsl
test
dec
mov
insb
xor
or
jge
stc
ljmp
fdiv
xchg
mov
lods
adc
inc
fdivrs
lods
or
sbb
pop
cmc
xor
ss
sbb
or
add
dec
or
mov
loop
in
fs
in
xor
mov
jne
ret
dec
fcmovbe
dec
in
dec
pushf
je
inc
addl
out
adc
loopne
mov
jp
xchg
mov
xchg
xor
pop
add
xchg
push
stc
mov
pop
lcall
icebp
add
lods
jp
ftst
and
lock
adc
int3
mov
inc
adc
imul
test
repz
push
xorl
mov
push
int
adc
cs
rorl
push
xchg
rcr
xor
lods
cltd
or
sub
xor
push
sub
or
cmpsb
or
ljmp
sbb
call
dec
cmp
repnz
nop
addr16
repz
sahf
jb
mov
inc
adc
lcall
dec
sbb
cwtl
cmpb
cs
and
jg
jecxz
idiv
rcll
mov
mov
jmp
inc
jecxz
loopne
or
call
jp
jge
add
iret
or
mov
fnstsw
push
inc
xchg
sahf
pop
out
pop
ficompl
out
mov
imul
mov
bound
inc
mov
xchg
dec
push
mov
push
popf
mov
int
lds
cmp
es
xchg
data16
movsl
add
sub
in
sub
out
push
ret
mov
and
stc
shrb
xchg
fsubrl
mov
pop
rclb
xlat
shlb
shrb
mov
pop
pop
fisttpl
jb
push
outsl
cld
add
les
cld
faddl
into
mov
popf
dec
push
push
and
outsb
push
jp
xchg
jle
sbb
sub
inc
push
popf
or
das
cmpsb
movsb
mov
sub
and
mov
jmp
inc
jle
pop
sub
pop
fadds
and
mov
fwait
jbe
inc
push
dec
ret
les
push
cmp
fcmovbe
xlat
popf
add
lock
jns
add
adc
cli
mov
or
insb
push
rorl
ret
add
or
out
test
arpl
sub
mov
sbb
jno
dec
pop
pop
xchg
mov
fstpt
dec
ljmp
push
add
jl
into
mov
dec
sbb
or
cmpl
cmpsb
xchg
sti
mov
lea
push
pop
cmpsl
cli
dec
jbe
push
fdiv
clc
addr16
cli
fxch
push
adc
fldenv
mov
por
iret
lods
push
lret
jbe
lds
or
hlt
mov
mov
xor
aam
mov
mov
insl
shll
mov
lds
repnz
stos
fcoml
filds
adc
sarl
fwait
daa
inc
jecxz
sub
dec
jne
iret
mov
push
mov
fwait
movsl
rcll
push
hlt
aam
in
cli
xchg
push
inc
mov
adc
ljmp
add
arpl
sbb
std
add
movsb
fiadds
movsl
inc
adcb
mov
and
jg
adc
fsts
or
xchg
jmp
das
mov
lcall
sub
pop
xor
test
push
pop
jp
popa
inc
popa
mov
lahf
sahf
inc
icebp
add
xchg
dec
push
xchg
sbb
mov
jns
gs
into
fidivl
arpl
das
imul
flds
or
adc
or
inc
out
mov
test
xchg
cmp
fs
aad
add
jno
outsb
call
leave
into
and
add
fnstcw
or
add
dec
out
jg
shlb
xor
jo
in
in
es
test
incl
and
sub
inc
mov
pop
ss
sbb
push
mov
dec
inc
or
mov
mulb
in
pop
jo
enter
bound
addr16
or
sbb
popl
mov
lret
cmp
jle
adcb
mov
and
xor
sub
jge
dec
jae
or
lcall
data16
jnp
cmpsl
insb
add
js
or
subb
add
and
movsb
cmc
push
test
out
into
mov
sbb
inc
and
inc
sbb
cmp
add
cmp
movb
pop
sbb
push
out
enter
push
xchg
sbb
pop
pusha
mov
pop
scas
and
popf
insb
sbb
rolb
aaa
and
leave
or
mov
lret
cmp
add
movsl
in
mov
cmp
adc
jle
mov
add
jl
daa
shrb
inc
in
and
mov
shll
jg
pop
cld
add
lret
dec
and
push
jp
jae
ljmp
mov
xchg
pop
test
sbb
in
jae
pop
sbb
push
xor
subb
lret
mov
cmp
stc
fnstenv
push
mov
mov
cwtl
xchg
shlb
adc
scas
stos
pop
lods
or
cli
cli
sbb
fcmovnb
mov
mov
out
into
aas
in
gs
or
fsubrl
call
pushf
test
hlt
and
dec
stos
cmp
mov
adc
iret
out
mov
repz
xlat
push
mov
mov
fwait
mov
es
inc
repnz
push
mov
mov
and
imulb
cmp
jnp
icebp
je
add
mov
xchg
repnz
pop
sbb
and
hlt
adc
mov
xor
cmp
mov
fistps
pop
xchg
sti
xor
nop
xor
jo
out
out
ret
sub
inc
xorl
mov
xchg
outsb
xchg
add
mov
dec
inc
xchg
cmp
mov
test
mov
lret
jno
rep
loope
cltd
mov
scas
jne
scas
fisttpll
fistpl
fdivl
xchg
ljmp
loope
shrb
in
lahf
dec
cmp
fistl
cmp
cmpsl
dec
mov
roll
arpl
out
lock
adcl
push
mov
ljmp
push
jns
add
ret
js
outsl
ja
int3
add
push
notb
inc
loope
jle
push
mov
test
mov
std
add
dec
jmp
mov
xor
fmuls
outsl
push
nop
sub
outsl
pop
orl
jo
mov
add
fld
xor
test
mov
loope
lcall
or
fimull
ljmp
push
sub
insb
sti
cmp
xorl
insb
sbb
add
xchg
into
loopne
mov
jp
stc
mov
test
sbb
rcl
loope
mov
popf
push
bound
push
adc
cmpl
dec
pop
fistpl
jmp
jle
mov
mov
pop
dec
adc
outsl
dec
pop
inc
sbb
jo
int3
jecxz
scas
popl
pusha
xchg
cmp
sbb
sbb
xorl
icebp
clc
jb
xchg
in
aaa
and
scas
daa
in
mov
enter
imul
lret
loope
call
cs
outsl
insl
enter
out
das
sbb
push
subb
fistps
mov
add
push
adc
dec
adc
dec
roll
aad
jb
hlt
cmp
pop
in
sahf
ss
pop
xor
or
lods
lds
lcall
lds
sahf
pop
lds
shl
lret
xchg
js
stc
pop
in
dec
mov
ret
sahf
push
enter
xor
and
mov
dec
jg
mov
ret
mov
push
popa
and
imul
mov
and
jle
stos
addr16
js
int
push
sub
pop
test
rorb
mov
sbb
adc
lea
in
push
sti
movsb
cld
jbe
stos
pop
xor
lock
and
dec
in
mov
add
pop
mov
dec
mov
or
fidivl
mov
sbb
fstl
inc
push
das
nop
cmp
in
pop
xor
sub
mov
pop
mov
xchg
in
adc
rclb
enter
arpl
mov
xor
inc
or
cmpl
push
jns
inc
xchg
add
mov
xor
daa
arpl
pop
add
fucomp
sub
mov
pop
bound
mov
out
add
enter
movsl
xor
fidivrs
fisubl
inc
mov
xchg
into
push
jge
ja
inc
mov
dec
inc
int
daa
out
jg
test
call
inc
sbb
mov
xchg
test
jmp
and
lret
arpl
das
aad
daa
xor
mov
dec
push
ljmp
dec
cwtl
push
loope
mov
cld
sub
push
sub
icebp
shlb
mov
add
mov
icebp
icebp
popa
lds
push
stos
or
ljmp
or
inc
cld
adcb
loop
scas
lret
stos
push
cmc
fnstcw
scas
aad
dec
lcall
outsb
jge
mov
push
jae
bound
adc
add
and
rclb
mov
inc
lret
pop
ljmp
xor
rol
aas
fsub
push
mov
mov
sti
iret
data16
mov
imul
out
out
jge
dec
dec
push
or
outsl
mov
cmc
ret
jge
jmp
aad
and
cmp
sub
add
sub
xor
mov
inc
nop
loop
clc
and
loop
stos
xchg
sub
mov
repnz
fbld
xor
push
shll
sub
xchg
xchg
add
mov
push
out
shlb
cmc
xor
iret
bound
xchg
sarl
add
mov
std
jg
lock
push
push
mov
test
call
imul
out
fcmovu
mov
je
or
loop
fwait
lret
fiadds
cmp
or
xorb
jo
cli
sti
out
pop
jo
dec
push
scas
inc
sbb
jae
out
or
out
ja
sbb
push
xchg
or
xchg
push
jae
sbb
inc
jne
mov
call
mov
xchg
ljmp
add
stos
mov
cmp
xor
int
cli
jno
xor
inc
sub
xchg
push
mov
cltd
jp
mov
pop
pusha
cmp
andl
or
pop
popf
fdivrs
cwtl
sbb
loopne
adc
or
call
dec
pop
sbb
scas
push
into
push
sub
jp
stc
xor
mov
pop
mov
jge
cli
popf
xor
jnp
xor
in
ret
cmc
lea
or
popf
mov
mov
icebp
adc
dec
jg
loopne
mov
mov
sti
push
lock
jmp
or
dec
test
pop
jbe
sub
cmpb
mov
pushf
sub
rorl
out
mov
mov
add
scas
neg
shl
mov
cs
aam
scas
or
sub
cmp
in
mov
sbb
dec
push
lock
push
lods
jno
les
std
outsb
add
out
test
in
adc
adc
push
cli
cwtl
xorb
or
xlat
mov
fisubl
mov
decb
xor
sahf
aaa
fdivrl
jns
stos
mov
push
mov
stc
in
sub
repz
mov
jmp
push
test
sbb
outsl
fnstsw
sub
test
or
lcall
adc
inc
cmp
cmp
cli
lret
sub
add
insl
lock
aam
pop
inc
xchg
jge
and
mov
mov
pop
mov
vblendvpd
cmp
dec
and
add
pop
mov
ret
inc
std
and
shlb
lahf
movsl
dec
xor
inc
test
xlat
mov
xchg
or
rcl
in
lods
add
or
loop
dec
cltd
mov
hlt
sub
cmpsl
ja
push
sub
mov
sub
jle
cmpsb
adc
fstps
and
aas
es
add
cmp
sbb
or
mov
xchg
sbb
pop
xchg
jo
out
clc
aam
pop
cmp
jns
xchg
je
cmp
fldenv
inc
pop
incl
push
jo
out
mov
dec
call
leave
mov
lret
pushf
pop
jp
mov
mov
jl
mov
lods
fsubr
inc
cltd
mov
in
je
pop
mov
mov
fistpl
pop
movsb
mov
insb
movsb
ds
xor
test
aas
das
xchg
sahf
imul
or
mov
push
aaa
enter
popa
fisubrl
or
dec
cmpsb
inc
push
scas
dec
xchg
aas
gs
sets
fidivrs
push
movsb
repz
outsl
into
push
pop
mov
ss
xor
dec
ret
adc
popf
dec
int3
add
int3
enter
dec
xlat
loopne
jnp
in
stos
mul
mov
cli
cmp
lods
clc
cltd
fstp
popf
or
push
mov
test
fs
add
dec
int
insb
jbe
add
out
mov
test
aas
push
or
std
cltd
sub
loop
mov
cld
xchg
pop
push
mov
pop
mov
das
mov
stos
jg
mov
cwtl
popf
jbe
hlt
scas
dec
arpl
add
mov
push
int
jno
push
inc
mov
mov
sbb
dec
dec
loop
addr16
test
jecxz
hlt
ret
arpl
lods
cmpsl
int
xor
mov
or
cmpsl
dec
pop
stos
jbe
adc
add
push
fcoml
mov
ficompl
and
iret
fwait
in
scas
mov
out
js
dec
shl
push
pop
sbb
es
popf
mov
bound
fs
mov
xor
dec
cmp
dec
sahf
repz
mov
test
mov
mov
pushl
hlt
insl
ljmp
mov
inc
jg
repz
sub
cmp
cmp
or
ret
shlb
call
mov
inc
lahf
or
mov
sub
mov
sti
pop
in
roll
cmp
mov
roll
mov
fdivrl
mov
lea
stos
cmpsl
popf
cli
pop
movsl
pusha
pop
xor
aaa
push
repz
mov
or
pop
ss
inc
outsb
pop
sbb
jae
rclb
mov
mov
vpmaxsw
aaa
arpl
cmp
xor
scas
inc
inc
xor
inc
scas
adc
divb
xchg
stos
stos
or
shl
dec
stc
ss
sub
jmp
mov
dec
loope
in
enter
out
int
movsl
shll
xchg
nop
xchg
aas
inc
or
imul
mov
test
fidivs
inc
bound
daa
test
push
call
cmc
sbb
jg
daa
push
xor
stos
xor
clc
inc
jne
inc
call
pusha
filds
push
sahf
dec
dec
out
pop
jge
sbb
sbb
mov
sub
out
sub
inc
mov
repnz
cmp
or
sub
ljmp
add
sub
sbb
xor
es
xchg
push
mov
popf
push
popa
in
xchg
popa
dec
rorb
mov
adc
adc
ds
sub
xor
or
lods
xchg
test
repnz
xor
divb
ret
mov
leave
inc
inc
dec
call
lds
xchg
mov
add
push
hlt
sub
loope
xchg
test
out
addr16
call
data16
dec
inc
in
mov
repz
insl
sbbb
fidivrl
cmpsl
dec
loop
aas
dec
cmp
mov
jb
arpl
inc
xor
inc
fwait
sub
adc
mov
fwait
adc
movsb
imul
jo
hlt
aam
push
ret
xchg
adc
aas
icebp
xchg
dec
adc
cmp
cmpsl
push
and
lret
mov
das
rol
pop
ret
pop
pop
loopne
pop
imul
pop
in
nop
jbe
mov
daa
enter
ret
adc
or
hlt
rclb
daa
in
jnp
ds
repnz
fs
fbld
jno
sarl
out
adc
insl
sub
mov
and
sbb
sbb
jle
push
or
adc
or
mov
mov
pop
daa
sbb
lods
cmpsb
add
sbb
fwait
rol
push
dec
sub
jae
push
xchg
out
mov
loopne
push
stc
jne
int
roll
and
addr16
sti
cmp
jnp
bound
sarl
cs
lret
pop
out
and
jmp
mov
xchg
scas
test
mov
aas
es
sbb
lods
sub
or
pop
lret
inc
adc
mov
cmp
inc
or
mov
rcr
dec
pop
popa
xor
clc
aaa
cld
pop
cmp
icebp
adc
cmp
clc
xchg
mov
push
push
mov
fsubrl
lea
lods
popf
in
dec
popf
fstl
enter
sbb
mov
mov
cmp
rcrb
loopne
std
push
adc
aam
enter
std
cmp
iret
dec
cmp
cmp
xchg
out
dec
pop
sbb
mov
pop
push
adc
dec
adc
arpl
les
push
push
lcall
das
popf
das
and
sbb
mov
sbb
mov
xor
sub
pop
inc
lock
lret
mov
pusha
or
mov
xchg
xor
test
imul
mov
adc
es
pop
jns
lds
jmp
dec
jle
mov
je
push
outsb
mov
or
mov
pop
out
mov
negl
cmp
xor
mov
jnp
xchg
sarl
cli
sub
sub
cmp
cmp
loop
dec
outsl
lea
pop
push
mov
sub
inc
add
jno
pop
stc
aad
xor
dec
repnz
add
inc
out
xlat
or
or
push
shll
mov
lods
add
inc
sbb
cmp
xlat
push
adc
adc
cld
pop
push
xchg
lret
cli
incl
and
pop
cmp
outsb
in
repnz
or
jmp
fnstcw
call
in
xlat
cmpsb
cmp
sbb
out
lea
sub
cwtl
xor
push
aaa
adc
ret
jecxz
xchg
adc
test
test
shrl
pop
insb
mov
push
adc
bound
setp
mov
lahf
cld
out
and
jecxz
shrl
ljmp
dec
mov
into
cmp
dec
fcomps
loop
inc
pop
jbe
loopne
mov
movsl
xchg
push
sbb
push
ficompl
sub
cmc
out
pop
in
and
pop
stc
xchg
mov
scas
or
mov
in
xchg
aam
adc
pop
les
aad
xlat
jne
xchg
jle
mov
sbb
inc
in
imul
nop
test
jnp
pop
dec
rolb
jl
in
mov
dec
pop
jl
lret
xor
fs
scas
cmp
leave
xchg
or
push
fcmovbe
ja
mov
test
lret
add
xchg
or
stc
jge
test
jne
mov
or
decl
sbb
ficompl
movsl
xchg
imul
pop
decl
add
mov
dec
pop
loopne
into
inc
ljmp
pop
add
pop
inc
mov
inc
dec
dec
cs
jmp
cld
ljmp
cld
jp
loope
sbb
or
dec
clc
mov
lahf
inc
xor
adc
jno
push
dec
sarb
dec
pop
sub
adc
lock
mov
fiadds
ja
rcrl
andl
insb
out
test
int3
xchg
push
push
lret
aas
repz
push
out
rcr
cld
rorb
gs
js
sbb
sub
pop
jmp
testb
push
cmp
mov
mov
rcll
lods
loopne
lret
push
push
pop
inc
sub
adc
xlat
stos
outsb
mov
repnz
sbb
adc
xchg
or
adc
leave
adc
adc
add
icebp
or
inc
aaa
mov
sub
leave
int
shll
mov
pushf
sbb
pop
push
cs
dec
mov
jecxz
rclb
shlb
sbb
inc
add
test
dec
addb
jo
pop
mov
sbb
mov
jbe
pop
test
sbb
shl
fwait
jle
push
cli
sub
shrl
fwait
push
push
test
cmp
xlat
xorl
pushf
mov
xor
mov
xchg
mov
lcall
push
xchg
sub
xchg
jecxz
mov
jmp
inc
sbb
add
jp
or
repnz
push
dec
lock
dec
repz
adc
stos
add
andl
dec
and
scas
pop
test
pop
test
cmpsb
pop
lret
insl
loope
push
dec
and
and
sbb
cltd
out
xchg
mov
leave
sbb
and
mov
dec
mov
pop
and
addr16
add
mov
jne
ret
mov
pop
xchg
lahf
sub
lock
adc
mov
sub
xor
dec
jge
leave
xchg
addl
shlb
mov
dec
and
cmp
mov
xlat
sbb
rclb
inc
sbb
sarl
lods
fdivs
xchg
fs
and
jnp
sbbl
push
sarb
in
stos
lods
ret
loop
and
lds
nop
pop
sbb
jle
mov
mov
or
add
fcmovnbe
dec
adc
push
and
rol
mov
rorb
shrl
or
xor
mov
xchg
sub
into
xor
in
xchg
mov
pop
ficoml
in
cli
and
cs
mov
stc
jne
sbb
cli
cmp
lret
shrb
mov
sbb
xlat
hlt
lret
mov
popf
or
lret
ret
in
lock
mov
mov
jmp
pop
loope
and
push
push
or
sub
jg
mov
pushf
jo
or
aad
inc
and
cwtl
icebp
sbb
add
cmp
bnd
or
add
jl
sub
stos
xor
pusha
loopne
stos
push
stos
ljmp
dec
fs
pop
orl
fnstsw
fs
xchg
test
adc
sbb
mov
push
test
arpl
mov
mov
cmpsb
lcall
dec
mov
pop
lret
les
push
imul
jge
clc
cs
sarl
adc
psubusb
loop
mov
and
xor
subl
xchg
mov
inc
adc
int3
or
mov
sub
jb
jle
dec
inc
xlat
out
push
xor
or
xor
push
popa
xchg
sbb
pop
fucom
jle
cmp
mov
cmp
jmp
sub
xor
rorl
inc
xor
sbb
stc
orb
adcl
and
pop
adc
or
jno
jl
mov
int
dec
push
ja
les
ljmp
ret
or
les
loopne
jbe
mov
pop
lods
jp
lods
xorb
bound
mov
mov
cmp
ficoml
in
push
adc
xor
rcrb
insb
xchg
adc
mov
gs
jp
jp
dec
cmp
out
insl
stos
int
test
rcrl
clc
sbb
push
fcoml
mov
jge
pop
outsl
cmp
add
ds
add
cli
mov
test
cld
mov
push
adc
imul
cmpsb
shr
xor
pop
inc
sbb
movsl
lds
and
fstps
stc
lods
fs
mov
out
or
mov
insb
mov
imul
sbb
add
jg
xor
cmc
mov
lods
test
popa
iret
bound
fidivrs
jl
and
push
es
seta
fisubs
pop
sub
fnstsw
stos
xorb
dec
rcr
dec
mov
sbb
nop
sbb
fstpt
push
dec
out
rcll
repnz
cld
lock
int3
loopne
mov
cmpsl
xor
sub
inc
xchg
or
push
fstps
mov
mov
mov
lret
sbb
rorb
insl
imul
cwtl
stos
ljmp
inc
mov
pusha
ljmp
sbbb
push
push
dec
out
stos
cmp
inc
stc
push
adc
mov
lret
into
nop
add
dec
out
loopne
dec
xchg
scas
pop
jmp
mov
lret
or
movsl
dec
push
add
cmc
jmp
add
inc
adc
insl
or
mov
mov
sub
xor
and
jp
mov
add
ret
xor
lds
addr16
xchg
push
adc
jmp
jno
lea
je
out
std
push
jae
lret
faddl
xchg
sbb
and
xor
rclb
xchg
mov
filds
jbe
push
mov
xor
scas
lock
xchg
pop
ret
mov
jne
xor
dec
loope
loop
pop
sahf
inc
shl
data16
sbb
jno
jl
jecxz
sub
stos
iret
add
lahf
ss
dec
mov
or
test
ret
cmp
cmp
jno
jns
test
ret
push
xchg
stos
jecxz
jo
lahf
push
xchg
scas
aas
loope
int3
fstpt
daa
lret
mov
sarb
dec
clc
lret
call
pop
adc
mov
jge
pop
dec
push
jp
push
test
mov
jae
int3
cltd
out
daa
xchg
dec
in
aad
inc
mov
mov
inc
and
mov
int
sub
mov
push
jae
xor
es
lcall
xor
add
mov
jo
lock
shll
into
cmp
push
lahf
sbb
push
xchg
adc
pop
cmp
gs
mov
sarl
leave
jns
mov
gs
mov
enter
pop
or
jno
aam
fstl
cmp
rcrb
adc
stos
jle
lret
int3
sub
add
jle
orl
ss
pop
int
xorb
inc
adc
repnz
hlt
inc
int
mov
xchg
call
jb
sbb
aad
enter
mov
xchg
xchg
and
loopne
rcrb
fucomp
js
or
popf
rclb
std
push
int
cwtl
xchg
jns
push
sahf
xor
in
mov
outsb
jmp
dec
iret
push
mov
pop
add
sub
mov
pop
popf
lret
pusha
adc
out
movsl
mov
jmp
loopne
adc
enter
push
cmc
insb
add
jno
mov
fistl
es
aad
mov
stos
test
cmp
and
mov
shlb
adc
pop
add
pop
xchg
push
sub
pop
leave
stos
xor
dec
loope
ljmp
jp
dec
xchg
bound
nop
mov
dec
bound
inc
in
mov
fcoms
push
jno
leave
test
fisttps
mov
push
dec
idivl
fisttps
cmp
xchg
sbb
bound
or
mov
xor
cwtl
or
xchg
lock
jl
dec
and
mov
dec
mov
cmp
and
sbb
pop
xchg
cmpb
clc
pop
out
insb
jl
mov
arpl
push
js
dec
inc
mov
pushf
daa
arpl
cmp
hlt
in
pop
js
mov
pop
ljmp
in
outsb
or
mov
xchg
and
add
lcall
out
bound
or
adc
push
dec
cmpl
jmp
fbstp
sarl
stc
leave
jno
loop
push
repnz
adc
jge
pop
inc
push
pop
jnp
xor
add
sbb
je
add
fmull
jl
arpl
andb
mov
sub
shll
mov
nop
and
outsl
test
sbb
xchg
lock
insb
adc
je
and
or
pop
test
pop
jmp
inc
adc
add
adc
push
pop
xchg
sbb
lret
insb
inc
mov
in
adc
push
push
jbe
cmp
jns
inc
mov
imul
les
popf
iret
jmp
lods
adc
cmc
pop
scas
pop
lds
xchg
mov
sbb
dec
push
cmp
cmp
cmp
aaa
stc
js
aam
stc
std
pusha
inc
jno
shlb
sub
shrb
pushl
dec
ret
je
rorl
cmp
es
dec
scas
push
mov
mov
in
loope
mov
and
sti
orl
or
push
or
out
rcrb
inc
sahf
mov
stc
ret
add
push
flds
push
ss
dec
or
repz
push
mov
std
cmp
mov
repz
pop
outsb
cmp
lods
sub
mov
xchg
mov
mov
inc
push
or
inc
or
pop
or
std
rorl
sub
sub
and
xor
vmovaps
inc
call
insl
inc
loope
imulb
out
gs
in
mov
mov
xor
dec
ret
push
push
lods
sub
inc
inc
and
pop
enter
sti
fcmovnb
add
jb
test
daa
jp
outsl
insl
mov
inc
push
jno
cwtl
mov
cli
pop
lock
sub
or
or
or
xchg
jp
push
sbb
rorl
popf
lock
lret
lea
scas
mov
jle
mov
outsb
repnz
mov
dec
pop
jl
fisubrl
test
out
test
and
add
imul
jbe
cs
dec
jge
in
mov
out
adc
popa
sbb
movsl
int
adc
dec
loope
pop
ds
push
xor
hlt
pop
mov
lods
mov
je
mov
dec
aaa
and
dec
aaa
pop
outsb
ss
lds
adc
pop
aad
mov
cltd
ja
sbb
pop
fmuls
out
mov
inc
pop
dec
nop
jnp
popf
sahf
insl
filds
xlat
movsb
mov
xlat
aaa
jbe
inc
jp
push
and
mov
and
mov
sbb
out
cmp
adc
daa
adc
xor
les
adc
popf
jmp
adc
push
jo
pop
mov
jae
fucomp
pop
lock
lret
mov
ret
mov
shll
xchg
xor
xchg
adc
and
insl
pop
push
aas
in
xchg
pusha
add
jge
cltd
stos
mov
dec
aas
jns
xchg
pop
xchg
mov
dec
or
adc
push
push
jns
xchg
es
xchg
es
mov
inc
shlb
sub
leave
jmp
and
pop
sahf
in
push
pop
and
xor
shrl
das
xchg
push
lods
jl
push
add
push
js
outsl
test
adc
lods
pop
loope
or
sub
push
xchg
loop
push
jmp
jle
test
push
push
push
or
jne
lods
fs
dec
or
inc
xchg
pop
xchg
pop
mov
mov
repnz
andb
outsb
sar
fcoml
xchg
shufps
mov
fsubp
sti
inc
std
sti
mov
jmp
dec
mov
pop
iret
in
sbb
mov
ror
mov
pop
roll
mov
mov
mov
cs
daa
mov
push
fimuls
cmp
inc
fcmovnu
insb
jne
cmp
loop
stc
pop
jb
dec
adc
mov
shl
addr16
mov
xchg
xchg
shll
fidivrs
es
push
into
dec
test
sbb
daa
mov
mov
dec
imull
push
ds
push
fwait
or
adc
pop
icebp
fsub
out
or
hlt
lods
mov
sub
mov
lods
lea
clc
ds
fistpll
push
into
inc
xchg
rcr
pop
sbb
insl
cmpsl
mov
xor
push
inc
jo
gs
mov
fdivr
or
mov
xor
adc
and
das
cs
in
xchg
in
adc
sahf
hlt
push
cmc
ljmp
inc
lret
mov
loopne
repnz
push
loop
jp
lock
subb
movl
out
in
mov
mov
add
shr
jmp
adc
xor
fs
in
je
xor
insl
das
add
ljmp
iret
xor
inc
outsl
inc
pop
adc
aad
mov
aas
sbb
in
mov
fcmovne
test
xlat
mov
mov
pop
lock
daa
pushf
inc
addr16
das
lods
xchg
jl
jecxz
inc
xor
and
flds
or
iret
subb
sub
shlb
js
movsb
xor
push
sub
or
stos
pop
bswap
xchg
ljmp
shlb
xorb
pop
sbb
lods
xchg
or
xchg
or
pop
inc
js
aad
xorb
fisubs
jle
jb
lret
inc
stos
ret
in
pop
pop
sub
frstor
mov
repz
imul
aas
pop
mov
xchg
decl
hlt
mov
xor
xchg
sbb
mov
mov
in
scas
jb
test
jmp
inc
cmp
lret
in
ljmp
and
repnz
nop
mov
cwtl
pop
mov
aad
sub
xor
pop
xchg
pusha
push
add
cmp
scas
leave
leave
xor
cmpsl
dec
push
ljmp
add
fcmove
pushw
mov
mov
repnz
xchg
add
mov
rolb
fidivl
jb
xchg
add
pop
jmp
cbtw
dec
int
or
mov
mov
mov
int
fcmovnb
inc
xor
cmpsb
dec
cli
jnp
cmp
pop
sub
setge
stos
pop
negl
shlb
mov
daa
iret
jl
test
loopne
call
pop
inc
sti
in
dec
xor
dec
sub
data16
sbbl
add
aad
out
dec
into
loop
cmpsb
fdivs
dec
lock
dec
addb
pop
scas
rcll
xchg
and
dec
mov
push
lret
sbb
mov
xor
xor
addb
mov
mov
lock
xchg
lcall
dec
sahf
outsb
jae
or
mov
xchg
data16
test
rclb
jecxz
not
jl
inc
inc
jae
insl
icebp
js
out
sbb
out
sub
clc
cli
out
sarl
test
sub
cmp
fimull
fstpl
cwtl
sbb
popa
pop
xor
mov
and
mov
cmpsl
sbb
dec
xor
mov
mov
cmp
sub
mov
orl
jbe
pop
or
jp
mov
mov
xchg
xchg
jl
push
call
test
dec
sub
jb
test
pusha
addr16
arpl
test
xor
imul
pop
jmp
jnp
movsl
dec
and
imul
add
mov
cwtl
mov
hlt
repnz
mov
test
sti
inc
out
inc
mov
push
jno
pop
sbb
mov
add
cld
lret
es
loop
jae
test
inc
lret
add
fldt
xchg
cmp
idivl
jb
call
jle
mov
cmp
mov
lahf
adc
jl
mov
imul
push
pop
lea
std
repz
lds
out
push
data16
stc
es
mov
lea
and
jge
lods
pop
add
outsl
mov
adc
insb
cmp
stc
jns
test
add
or
xor
lods
enter
data16
cmp
lret
cmp
adc
and
jecxz
das
sub
out
mov
pop
int
clc
xor
pop
shrb
jge
jb
add
xchg
ds
mov
inc
cli
aaa
stos
xlat
mov
stc
mov
lea
aas
jecxz
pop
data16
iret
xchg
jecxz
pop
je
fdivp
push
jg
decb
jmp
jne
mov
outsb
ljmp
pop
xor
jns
enter
sub
stos
es
leave
and
imul
jecxz
les
mov
mov
shll
out
xchg
jo
jne
add
rcl
sbb
sub
ret
sbb
push
data16
stos
sbb
jo
in
xchg
loop
cld
add
xchg
movsb
mov
mov
mov
mov
mov
out
sub
aas
in
pop
jge
cmp
dec
jo
jnp
jecxz
or
fcmovnu
in
push
sub
or
bound
je
mov
ret
sbb
jl
mov
xor
sub
ljmp
out
mov
dec
inc
pop
test
cmpsl
cmp
cmp
or
jae
ljmp
cs
jno
push
test
sarl
gs
sub
movl
inc
pop
xchg
out
orb
sarl
nop
or
arpl
test
ljmp
repz
ds
rolb
jo
shlb
mov
mov
dec
insb
push
sbb
lret
insb
div
adc
imul
add
ret
loopne
push
fstpt
fwait
ljmp
mov
call
fwait
addr16
orl
mov
jne
sbb
mov
in
lcall
mov
arpl
sbb
dec
or
test
ret
sub
sti
fwait
daa
adc
jg
mov
mov
xchg
rcll
fcomp
dec
push
jb
je
or
sbb
inc
fisubl
inc
arpl
inc
aam
repnz
fsubs
jmp
scas
ret
std
and
aad
insl
sbb
sub
and
inc
fldt
aaa
hlt
mov
int
fistpl
rorl
lret
push
dec
addr16
xchg
popf
jns
loop
sub
icebp
addb
imul
fidivl
push
adc
lret
mov
in
leave
icebp
fucom
cmp
clc
fisttpll
add
inc
inc
pop
mov
aaa
adc
xchg
xchg
popa
and
outsl
into
das
ficompl
or
fldenv
adc
dec
lods
inc
inc
mov
mov
lock
cld
pop
xor
fs
add
icebp
stc
push
test
add
fstl
outsb
cmp
dec
sbb
cld
stos
adc
jecxz
mov
rcrl
in
or
je
add
xor
loopne
cmpsb
sub
adc
push
push
repnz
dec
sbb
mov
push
mov
or
out
gs
enter
push
iret
jl
aas
adc
add
pop
lds
in
movsl
jmp
inc
adc
shlb
cmp
xor
inc
pop
stos
es
movd
push
insl
in
xchg
or
dec
repnz
jle
pop
in
outsl
and
ljmp
ss
cwtl
pop
mov
xor
inc
pop
fucomi
xchg
dec
test
out
mov
sub
xchg
repnz
push
pop
popa
mov
movsl
and
push
js
xchg
insb
cmp
insb
cmp
into
daa
outsl
jae
mov
fadds
and
roll
push
jl
xchg
movsl
scas
stos
mov
js
dec
inc
pushf
test
in
ljmp
hlt
adc
div
lock
aad
ficomps
push
gs
jle
ja
sbb
push
sbb
cli
inc
xchg
and
lods
jo
mov
or
sub
rolb
shll
pushf
jl
je
les
inc
pop
mov
add
lds
sti
imul
xchg
mov
std
vpsravd
and
mov
outsl
lret
sub
pop
sbb
add
iret
xchg
frndint
ret
mov
lods
push
repnz
std
leave
push
xlat
testl
pop
mov
add
gs
jge
ret
add
enter
sbb
push
stc
cmp
out
pop
xchg
dec
cmp
push
sub
or
adc
aad
test
nop
sub
push
push
sbb
or
scas
mov
push
scas
pop
mov
jp
lds
mov
shlb
fisttpll
push
sbb
mov
jmp
inc
xchg
adc
mov
outsb
out
mov
ret
popf
push
and
sbbb
insb
aad
pop
push
or
testb
jnp
mov
mov
pop
fisubs
mov
mov
xchg
cltd
jecxz
inc
adc
popa
mov
dec
cmp
pop
out
test
jo,pt
test
adc
je
inc
xchg
out
enter
sti
sbb
dec
pop
fcomi
push
push
fdivs
notl
fs
jns
push
mov
fildl
fnstenv
sub
iret
cli
ret
ret
push
mov
dec
and
testl
mov
and
mov
push
sahf
adc
in
ss
repz
xchg
sbbl
push
fcompl
repz
lret
push
loop
dec
ja
xchg
repz
xchg
or
test
or
mov
or
les
inc
jle
xor
comiss
mov
stos
sti
aas
ljmp
push
push
sbb
les
pop
jmp
insl
push
mov
mov
loopne
lret
cmp
arpl
jg
mov
mov
xchg
popw
lret
jg
cmpsl
pop
arpl
ret
xor
jae
add
fistpll
xchg
js
out
mov
cmp
jae
xchg
int3
cmpsb
cmp
push
xor
mov
sub
jecxz
push
mov
mov
sbb
lods
inc
add
dec
popa
cmp
mov
or
jp
rcll
hlt
test
sbb
flds
add
cs
jg
xor
test
fwait
jbe
and
les
das
jmp
adc
or
outsb
xor
jl
shlb
pop
sub
mov
mov
outsl
out
cs
mov
inc
daa
xchg
cmp
sbb
jae
cld
jmp
outsl
mov
adc
sbb
mov
mov
das
inc
lret
xchg
jle
inc
xorb
push
sti
sbb
xchg
mov
inc
cmpsl
sub
rolb
pop
dec
push
fisttpll
out
int
sar
push
mov
call
xor
dec
or
outsb
aas
sub
movsl
adc
push
pop
push
mov
lock
xchg
scas
lea
sub
fstps
push
push
xchg
push
xorl
loopne
pop
lret
sub
jge
lret
cld
push
lock
pop
aam
lods
daa
mov
js
jmp
and
movsl
adc
fisttps
pop
addr16
cltd
icebp
out
pop
mov
sbb
repz
cmp
bound
popf
pusha
xchg
imul
xchg
jle
adc
jno
cmp
mov
nop
adc
xor
mov
out
mov
stos
push
mov
jl
in
add
adc
movsl
xchg
dec
cmc
push
mov
mov
dec
push
sub
xchg
ja
adc
mov
cmp
iret
dec
std
and
pusha
sbb
jmp
cmp
add
nop
or
fildl
hlt
iret
jp
shll
mov
add
decb
dec
pushl
cld
andb
out
shr
push
cmp
push
ret
xchg
push
mov
pusha
repz
gs
cmp
bound
pop
out
xlat
adc
scas
pop
lods
cmp
daa
cld
mov
xor
and
mov
lods
sub
and
fcmovne
pop
push
xlat
adcl
xor
xor
ja
or
fstl
je
imulb
adc
inc
xor
cmp
inc
rol
jns
jmp
or
sub
inc
mov
jo
lahf
stos
pop
movsl
in
push
sbb
lcall
inc
xbegin
pop
das
mov
fcomip
jno
xlat
xchg
out
add
jb
lea
add
xchg
int3
push
xor
dec
lea
and
sbb
push
adc
jge
into
cmpsb
ret
push
pop
mov
aaa
scas
cmp
aam
das
movsl
ds
dec
test
sti
lea
fidivrs
or
mov
lret
out
in
jl
lock
repz
subl
push
push
fbstp
daa
inc
mov
in
icebp
shr
xchg
lds
orl
lock
pop
ds
ljmp
imul
pop
pop
pop
inc
push
jno
stos
adc
outsl
pushf
jmp
arpl
adc
jnp
std
cmp
xchg
fprem1
bndstx
imul
sbb
int3
sub
test
pop
push
aas
repz
pop
jb
xor
sbb
lock
xlat
or
add
arpl
out
imul
sbb
xchg
xor
jno
mov
popf
cwtl
fmull
sub
clc
pop
ror
addr16
or
inc
test
ds
outsb
dec
xor
int3
xor
pop
lods
fdivs
cmp
hlt
adc
pushw
adc
inc
lods
pop
out
push
cmp
mov
or
pusha
insl
or
jmp
inc
inc
sbb
inc
and
or
sbbl
add
and
scas
sbb
push
fstl
or
lock
sti
sahf
leave
ret
pop
sub
test
ds
movsl
ret
xchg
shl
inc
movsb
neg
pop
or
shlb
ja
stc
push
div
popf
push
pop
pusha
cli
pop
mov
bnd
push
orl
std
fadd
inc
push
adc
imul
mov
jbe
push
daa
adc
adc
orb
jbe
and
in
adcb
inc
ds
loopne
aam
xchg
arpl
inc
xchg
dec
repnz
mov
rorb
inc
das
jo
int
out
lods
subl
push
jecxz
jnp
into
push
and
sahf
push
add
fidivrl
filds
push
inc
cmp
adc
hlt
jbe
jnp
fwait
cmp
dec
add
out
pushf
je
fs
jp
xchg
pop
inc
push
cmpsb
cmpb
jmp
cmp
faddl
dec
xor
sub
and
dec
xchg
pop
add
test
xchg
cmp
cmp
sub
and
sub
xchg
pop
xchg
lock
sbbl
ljmp
add
lods
xor
mov
mov
pop
jle
cmp
pusha
inc
mov
jmp
addr16
xchg
repz
imul
int
lock
aas
and
aaa
ficoms
jae
xchg
jl
inc
sar
add
mov
into
loop
js
xlat
nop
push
test
pop
icebp
and
sahf
sarb
inc
jge
mov
xchg
jb
cmp
aas
xchg
repz
mov
xor
mov
in
push
sbb
test
mov
aad
push
fistl
popa
xchg
sbb
shl
fsubr
cmp
or
loope
xor
push
sub
pop
out
xchg
mov
es
push
inc
xchg
adc
dec
mov
xor
or
faddl
xor
xchg
push
mov
sbb
push
adc
pop
es
add
or
outsl
push
fnstenv
stos
adc
mov
sub
jns
stc
jne
ret
push
push
popf
jl
lods
mov
pop
in
movsl
lret
xchg
adc
inc
stos
xchg
jbe
mov
loop
pop
dec
mov
cwtl
idiv
idivb
inc
lock
lods
ror
cmpsb
aas
pop
push
fistpll
xchg
push
mov
or
push
fldl
mov
inc
iret
inc
push
mov
loop,pt
jns
std
sti
add
fwait
adc
mov
les
movsl
ja
pop
aas
test
push
movsl
push
push
xchg
sub
mov
jne
aas
jge
pop
in
and
mov
or
jp
outsl
sub
outsb
shrb
mov
fs
leave
fildl
movsb
push
mov
xor
fadd
dec
pop
daa
xchg
data16
inc
adc
push
xchg
pop
jne
mov
cmp
pusha
in
ss
xchg
push
mov
rcll
sub
mov
lods
lret
and
sbb
xchg
dec
outsb
pop
pop
ljmp
push
push
ljmp
push
stos
add
mov
lcall
outsl
pop
sbb
mov
leave
sbb
mov
mov
push
cli
mov
or
jle
sbb
push
mov
xchg
xchg
mov
mov
xchg
mov
fwait
in
mov
sbb
movb
cmc
out
clc
cli
das
fwait
pusha
cmp
repz
inc
lcall
jb
adc
mov
mov
jge
ret
mov
fdivrl
inc
test
mov
add
xor
or
in
push
sub
jp
and
test
mov
fs
ss
sub
icebp
jge
fnstcw
or
mov
fimuls
popf
cmp
setne
je
inc
sarb
repz
unpckhps
mov
mov
add
movsl
adc
js
mov
jb
xor
int
ficoms
fwait
inc
jb
dec
xchg
sti
xor
and
out
jge
sub
cwtl
ror
mov
add
xchg
mov
lods
daa
dec
data16
lds
test
push
ss
jg
dec
jb
popf
add
sti
nop
pop
fstpl
cli
loopne
jns
mov
mov
movsb
stc
and
call
aam
pop
hlt
clc
xchg
xchg
sub
add
shrl
stos
xchg
jbe
jae
xchg
rcrb
sbb
push
adc
sbb
test
fs
hlt
jne
inc
mov
mov
add
xchg
xchg
loop,pt
push
cmp
movsl
push
jbe
in
add
pop
imul
jns
stos
jnp
shlb
enter
lds
out
and
test
push
jg
scas
jecxz
test
arpl
xchg
aaa
mov
mov
jbe
adc
mov
pop
mov
pop
mov
adc
inc
rcl
cwtl
cmp
jmp
cmp
push
lahf
cwtl
inc
ret
jle
fsubrl
pop
lret
repnz
jp
hlt
das
mov
rcrl
icebp
lcall
jg
rorb
sub
je
stos
jmp
dec
fwait
movsb
aas
jb
and
lret
mov
xor
jle
push
adc
jl
mov
jmp
dec
add
test
mov
ljmp
sbb
jae
add
xor
ret
add
imul
pushf
lea
adc
jmp
xchg
xchg
mov
arpl
cmp
cmpsb
ret
repnz
mov
sub
push
fbld
jle
xor
push
push
test
faddl
add
mov
dec
lods
stos
cmpsb
fsubs
dec
insl
xchg
cmpsb
pop
xchg
cld
fs
lods
int
xchg
xor
jle
sub
lret
sub
outsb
ds
push
mov
inc
dec
fldenv
mulb
icebp
push
inc
dec
jmp
xor
fwait
outsl
add
mov
push
mov
adc
add
cmp
sti
jecxz
stos
dec
fdiv
cltd
ret
in
jnp
dec
lods
les
data16
or
sahf
jge
push
stc
sarb
mov
cmpsl
in
arpl
out
pop
cmp
mov
daa
lds
jb
jg
mov
sbb
cwtl
cmpsl
repz
and
cmpb
pop
enter
mov
fstps
jmp
and
mov
lret
xchg
pop
jecxz
call
jnp
fs
adc
jmp
int3
dec
sbb
out
bound
dec
sti
push
xchg
and
and
out
pop
mov
push
scas
lea
lds
cmp
cmp
mov
jo
clc
push
mov
imul
sub
xchg
vmwrite
test
gs
cltd
xchg
push
jb
adc
mov
mov
cmp
xchg
or
test
in
clc
lret
fincstp
pop
cmp
pop
stc
push
data16
sti
mov
pop
sbb
mov
and
cmpsb
popa
and
mov
orb
xchg
ret
lret
jbe
and
iret
aas
inc
xor
jbe
insl
mov
ret
mov
lahf
jnp
stos
mulb
into
sub
add
inc
cmp
jmp
xor
jp
jp
and
push
inc
loopne
ror
ss
in
repnz
ljmp
ljmp
mov
pop
loop
jp
mov
test
clc
xlat
pop
sahf
jno
aas
shlb
adcl
pop
mov
or
cmp
mov
fbstp
sub
pop
adc
adc
sbb
mov
mov
inc
xor
test
jbe
imul
test
cmpsb
sub
lock
loopew
ds
xchg
push
ss
ljmp
ja
push
adcl
call
mov
cmc
test
cwtl
cmpsl
fbstp
lods
dec
clc
cmp
sub
jmp
jbe
add
nop
lret
lds
repz
and
adc
andb
jge
inc
or
dec
sub
pop
xor
loope
mov
aas
or
dec
xor
pop
xlat
push
xchg
movsl
lods
pop
add
jp
inc
inc
stos
loop
out
cmp
xchg
sbb
and
cmp
jo
out
mov
xchg
dec
jl
cwtl
out
mov
daa
lds
pop
mov
jo
jno
push
orb
cli
enter
outsb
test
fstpl
movsl
scas
add
pop
dec
adc
rcl
notl
std
movsb
jae
lcall
scas
cmpsb
inc
cmpb
imul
pop
sbb
sbb
inc
pop
fldcw
push
lock
push
mov
add
imul
stos
fiaddl
jb
cmpsb
pop
mov
ja
xor
in
arpl
pop
rcrb
scas
xchg
sub
jl
daa
push
xchg
incl
lea
sub
cmp
adc
pop
loope
or
repnz
and
fstl
push
sbb
sbb
push
pop
xchg
out
dec
push
in
push
cmp
inc
sbb
push
sbb
xchg
mov
or
mov
aam
mov
push
dec
hlt
xor
stos
addr16
mov
mov
cmp
sub
gs
or
lret
pop
loopne
pop
cmp
mov
iret
pop
push
mov
cmp
movsl
mov
sub
int3
cmp
imul
mov
imul
jae
popa
mov
adc
fsubrl
orb
mov
xor
sub
pop
mov
mov
repz
push
popa
fwait
call
call
cs
outsb
jmp
stos
push
in
les
stc
ljmp
xor
push
aad
loop
sarb
aas
mov
dec
cmp
mov
ss
dec
mov
ficoml
cltd
adc
repnz
and
fimull
or
bnd
mov
dec
pop
sarl
sub
cltd
out
xor
jbe
mov
mov
mull
or
jl
outsb
rol
mov
mov
inc
and
mov
add
rorl
or
out
out
popf
loope
imul
or
dec
bound
jl
sbb
out
js
ret
pushf
xchg
push
ljmp
pop
xor
and
aaa
inc
and
xchg
imul
sub
cmc
pop
pop
daa
cmp
cmpsb
jg
shlb
add
xor
push
fldcw
pop
add
cmp
sbb
jae
movsl
mov
out
nop
dec
inc
adc
pop
ja
movsl
daa
sbbb
pop
arpl
scas
enter
adc
lret
mov
jbe
or
idivb
mov
mov
lret
cmp
sub
jecxz
inc
ret
xchg
je
jne
jp
movsl
inc
add
and
sti
add
mov
bound
shrb
pusha
ljmp
or
xor
pop
adc
sti
jne
