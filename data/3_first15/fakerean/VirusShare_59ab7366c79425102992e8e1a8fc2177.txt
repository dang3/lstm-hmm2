sbb
add
mov
sbb
imul
loop
nop
mov
inc
mov
mov
dec
lods
loope
sub
jae
div
dec
inc
sbb
test
or
pop
sub
or
mov
jecxz
ret
xlat
sbb
sbbb
adc
sar
mov
movsb
sub
dec
pop
jne
jb
push
jmp
mov
dec
jae
xor
push
inc
add
sub
add
mov
push
int3
xchg
insb
ss
pushf
mov
in
mov
loopne
rcll
or
lods
decl
xchg
mov
pop
sbb
movsb
add
jnp
daa
shr
paddusb
test
mov
sub
in
xchg
jmp
sbb
xor
pop
inc
pop
mov
and
push
mov
sub
pusha
fadds
xchg
je
test
xor
jno
dec
sub
pop
cmp
or
dec
sysexit
cmp
xorl
cld
repnz
sub
retw
push
decl
push
mov
lods
pop
frstor
adc
mov
addr16
and
mov
cltd
inc
adc
cmp
dec
data16
outsb
lret
stc
adc
cwtl
int3
rorl
push
cmp
lcall
xor
mov
adc
rcl
xor
aam
inc
mov
cmovl
xchg
je
mov
and
cwtl
inc
or
cmp
xchg
jle
aaa
std
jmp
fldcw
imul
std
sbb
in
jg
std
cmp
adc
in
jl
mov
fdivrl
push
stos
adc
bound
jle
or
cli
pop
xchg
xor
mov
les
pop
das
hlt
or
add
xor
movsb
jo
xchg
fsubrp
or
xor
pop
pop
mov
lahf
rol
sbb
mov
popf
mov
shlb
pop
dec
popa
jne
int
dec
loope
scas
push
pop
loopne
enter
jae
hlt
fcmovnb
cmp
mov
inc
cs
pop
aam
test
sahf
adc
or
mov
daa
jno
clc
mov
les
cwtl
bound
imul
mov
dec
sbb
int
xchg
xor
rorb
jge
xor
into
xchg
fisubrl
pop
push
pop
pop
cs
xor
or
gs
pusha
dec
aas
inc
xchg
test
ret
mov
cmp
xchg
cmp
inc
xchg
dec
jecxz
add
pop
push
and
mov
mov
mov
mov
mov
test
or
or
and
push
xchg
rcr
inc
dec
movsl
int
xor
mov
dec
sbb
sti
cmpsl
sub
pop
push
stos
inc
sahf
cmpl
sbb
mov
pop
cmpb
cwtl
int3
out
ret
bound
mov
ss
adc
xchg
add
and
jle
jmp
mov
add
enter
push
frndint
clc
lahf
xor
xchg
mov
pushf
dec
add
or
int
xorb
sbb
fsubr
popa
addb
into
adc
inc
cmp
shlb
dec
popf
faddp
add
sub
in
cmp
cmpsb
mov
sub
mov
and
ss
movsl
pop
fsts
enter
add
je
push
scas
fsub
mov
scas
addr16
or
aaa
bound
aam
ds
cwtl
ret
push
jecxz
popf
int3
pop
push
xor
mov
imulb
incl
clc
and
sbb
repnz
fsubl
les
and
pop
es
int3
loope
jo
and
add
std
rcr
in
enter
les
ja
sub
mov
jo
push
mov
cmpsl
cmp
je
xchg
arpl
jbe
lods
mov
enter
test
inc
daa
scas
xchg
stc
mov
mov
mov
push
mov
lahf
mov
shll
add
adc
pop
jo
dec
sbb
mov
fnstenv
jb
pusha
aad
out
sarb
inc
stos
mov
pop
add
ret
negl
xor
cli
lods
xchg
cwtl
aad
cld
loope
sub
aas
addr16
sub
sub
jnp
inc
sbb
jle
cmpb
or
mov
clc
push
push
ds
arpl
add
lock
inc
fwait
pop
pop
cmp
dec
and
mov
repz
js
xor
fildll
out
dec
xchg
loopne
pop
jnp
cmpsb
iret
ror
push
inc
inc
mov
mov
fisttps
arpl
push
pop
daa
scas
xchg
pop
ja
cli
mov
loope
and
aam
out
inc
call
dec
and
pop
sbb
lods
mov
mov
pop
xchg
pusha
rolb
sbb
mov
aaa
frstor
mov
movsl
xchg
inc
push
out
xchg
ficompl
jecxz
or
push
test
ss
iret
and
sbbb
push
pushf
repz
in
jmp
jle
dec
add
pop
nop
mov
jmp
int
xchg
xchg
and
mov
or
lods
dec
jecxz
pushf
and
mov
xor
fs
or
and
fisttps
and
xchg
or
loope
lods
call
dec
xor
sub
jp
lret
add
add
ss
xchg
mov
repnz
inc
jmp
cltd
mov
int3
push
sbb
call
sub
fnstcw
test
inc
rolb
or
in
popf
add
data16
jno
aas
xor
inc
fistl
adc
lock
ljmp
sbb
imul
xor
and
mov
sbb
rcrb
jp
lret
in
xchg
add
push
js
jmp
push
push
fimuls
inc
cwtl
dec
lret
jae
repnz
insb
loopne
dec
push
pop
hlt
or
leave
xor
and
jno
and
clc
mov
mov
or
xor
mov
cmpsl
adc
js
pop
sahf
cmpsl
push
or
insb
xlat
jp
xor
sbb
jmp
stos
push
mov
lret
cmp
bound
shll
insl
push
fidivs
jns
xchg
sub
cld
aas
pop
mov
shrl
mov
xchg
cltd
fucomi
lods
ret
lds
mov
sbb
in
fnstcw
xor
pop
xchg
add
enter
repnz
push
mov
cld
mov
push
pop
shlb
cs
int
push
mov
ret
pop
stos
push
cs
popf
lods
cwtl
lret
adc
lahf
aas
shll
fldt
iret
cli
call
cmpsl
int
cmpsb
push
inc
adc
mov
adc
xchg
pop
xor
inc
sub
inc
cli
ljmp
mov
lcall
mov
add
popa
fisubrs
push
into
cmp
jmp
sbb
data16
int
mov
and
mov
lods
dec
mov
add
not
xchg
dec
mov
ret
mov
dec
or
sub
out
xor
inc
iret
jnp
out
mov
sbb
daa
subl
test
bound
inc
es
xlat
sub
ret
js
fildll
mov
ds
call
lahf
jns
dec
jae
mov
xchg
sbb
movsl
dec
daa
ret
data16
xor
dec
jno
mov
movsl
or
mov
fisubs
add
outsl
dec
fistl
jle
fs
mov
xchg
popl
in
cmp
aaa
xchg
cmp
sbbb
lea
inc
mov
jb
adc
dec
enter
or
movsb
push
into
out
out
imul
jns
imul
jo
jns
push
sub
jno
rcrb
mov
xor
repnz
mov
test
int
cmpsb
push
mov
xor
dec
lret
mov
mov
adc
lret
cwtl
pop
sbb
adc
and
xor
aaa
adc
jo
add
mov
mov
imul
mov
popf
ret
call
shrl
int
dec
out
pop
fisubrs
repz
insb
inc
movsb
icebp
adc
add
cmc
test
in
pushl
testb
outsb
arpl
mov
sub
cmp
adcl
and
cmp
ljmp
cmp
fucomp
mov
pop
mov
push
push
pop
mov
js
push
sub
imul
test
lret
cltd
gs
or
cmpb
dec
xchg
push
cltd
mov
arpl
xor
add
xor
sub
inc
add
gs
inc
ss
rcrb
xor
negb
in
je
insl
mov
or
jne
push
mov
mov
lcall
xchg
outsb
jns
lret
mov
inc
mov
test
call
sub
mov
shl
inc
mov
sbb
mov
mov
push
xchg
dec
cmp
out
or
in
mov
or
inc
in
fbld
add
pop
adc
and
dec
pop
ljmp
lcall
mov
pop
rclb
mov
icebp
xor
mov
push
push
lret
cmpb
or
fs
xchg
out
popf
dec
and
daa
or
insl
arpl
add
inc
push
dec
out
xchg
and
jae
scas
sub
pop
inc
xchg
das
arpl
out
leave
call
lods
pushf
sbb
lods
push
pushf
and
mov
mov
cmp
push
stos
jo
popa
sbb
jb
push
pop
daa
add
andb
mov
mov
aad
mov
test
pop
into
lret
ljmp
adc
pop
push
test
xchg
stos
pop
call
in
pop
push
into
push
sub
ds
inc
dec
mov
scas
out
repz
stc
cmpsb
pop
xchg
out
paddw
js
sbb
insl
sbb
pop
pop
jp
add
mov
add
inc
mov
shrb
adc
mov
jb
pop
sbbl
fcmove
jne
push
push
cmpsl
jae
rcrl
addr16
call
pop
nop
jae
js
sub
std
pop
jnp
loopne
push
fmuls
mov
decb
xor
in
andl
jl
mov
pop
mov
movsb
mov
fcomps
bnd
mov
in
dec
in
mov
adc
idiv
mov
mov
xchg
push
xchg
push
xchg
adc
mov
cwtl
call
scas
inc
arpl
imulb
push
adc
push
jae
loop
jg
out
add
add
hlt
push
rorb
sbb
call
lods
cwtl
xor
add
xchg
xchg
ds
ljmp
out
repz
lahf
fs
std
dec
sub
das
mov
pop
xchg
inc
inc
add
pop
push
arpl
rcrb
movsb
ss
leave
mov
lds
or
push
cmp
xchg
pop
sahf
push
mov
add
ds
gs
lea
pop
aad
orb
sbb
cmpsl
inc
mov
cmp
add
repz
xor
iret
dec
add
mov
cmp
nop
int
mov
mov
in
lds
rorb
imul
mov
ror
adcl
xchg
sahf
cmc
dec
iret
mov
push
sub
pushl
pop
mov
sahf
mov
sbbl
push
mov
jb
dec
gs
lods
out
mov
pop
adc
sbb
mov
leave
dec
cmpsl
mov
test
add
mov
pop
insl
sub
mov
dec
jmp
int
ljmp
cmpsb
test
test
aaa
or
inc
stos
addl
dec
adc
pop
jns
inc
jnp
stc
popf
shl
fcmovu
jns
lret
inc
lods
aad
cmp
mull
dec
xlat
outsl
cld
mov
or
loop
sti
add
popf
push
cltd
xor
and
test
fs
imul
sub
movsl
rclb
inc
mov
pop
jp
ja
push
push
cmp
cmp
int
jecxz
push
mov
or
mov
jo
lods
cmp
int
pushf
xor
int
imul
dec
xchg
mov
ljmp
insl
xchg
cli
jns
dec
popf
inc
mov
fcom
xchg
cmp
bound
cmp
dec
out
inc
mov
or
aad
jmp
push
scas
nop
not
and
popf
lods
xchg
loop
xchg
xor
scas
or
mov
les
in
je
lcall
cmp
inc
cmp
sub
in
fldl2t
xor
sti
scas
stos
out
in
sub
notl
test
or
sbb
aaa
push
js,pt
sarb
lods
mov
cmp
fwait
mov
xor
and
dec
or
push
add
insl
mov
test
xchg
gs
adc
jge
pusha
out
sub
pop
subl
lret
lds
pusha
pop
nop
cmp
lea
int3
jae
sbb
sub
pop
jecxz
xchg
and
mov
mov
rcl
cld
test
add
ja
mov
gs
add
jbe
sahf
pop
jmp
pop
fimuls
or
ss
fimuls
nop
dec
loope
or
lea
test
push
adc
aam
stos
popf
pop
jno
xchg
jg
jno
fcompl
mov
test
sub
test
xor
xor
mov
notb
stos
adc
les
lods
jae
mov
cmp
sbb
gs
xor
push
and
jnp,pt
icebp
icebp
jne
lret
jmp
popf
daa
test
sub
dec
rorl
lret
mov
cmc
mov
lods
push
pop
shl
xchg
and
xor
mov
test
rcll
cmp
test
std
xchg
push
push
loop
ret
jnp
and
xor
notl
int
aaa
push
and
jb
cmp
pop
out
add
mov
scas
dec
mov
vpshufhw
inc
sbb
fs
push
sti
jo
jmp
or
mov
jne
cmp
push
mov
shrl
stc
insl
cmp
pop
fcomi
divl
xlat
add
add
ret
gs
mov
mov
push
or
or
jmp
popf
jae
inc
xchg
loop
push
dec
setno
dec
jne
mov
out
call
aam
fdivs
xchg
faddp
subl
xorb
mov
jb
xchg
dec
mov
test
mov
sbb
dec
pop
mov
cmp
lock
in
dec
push
pop
jl
mov
sub
dec
ficompl
and
cmp
xor
ret
popa
shl
aad
rorl
mov
ljmp
pop
xadd
sti
test
push
xchg
and
pop
mov
push
cmp
cmpsl
sub
mov
sub
pop
push
add
pusha
mov
enter
and
or
jne
fsubl
outsl
fisttps
adc
xlat
push
stos
testl
pop
stos
clc
loope
jle
dec
int3
movsb
push
gs
pop
pop
shrb
leave
mov
rcrl
and
mov
lds
xchg
adc
or
in
dec
jno
push
loop
xlat
dec
jg
push
insl
fmuls
mov
pop
add
aad
jge
pop
cmpsb
jb
pop
lea
fmulp
mov
cltd
jb
into
inc
repnz
sbb
in
into
out
in
mov
jno
rol
imul
je
jae
shl
cmpsb
push
stc
push
mov
dec
and
mov
jns
mov
lcall
pop
test
xor
aaa
mov
mov
sub
daa
inc
stos
pop
inc
and
fcmove
ja
leave
xor
inc
xchg
in
inc
push
not
pop
push
cli
or
mov
mov
pop
imul
push
pop
jo
ret
loope
subb
xchg
pop
orb
inc
jmp
repz
lahf
aas
sub
xor
fnstsw
pop
mov
pop
mov
clc
iret
push
pop
sbb
clc
movb
jno
std
lds
arpl
nop
pminsw
fiadds
mov
dec
inc
insl
neg
outsb
add
dec
lock
ds
jl
daa
sbbb
sbb
xchg
add
es
stos
mov
xchg
xchg
or
push
add
aad
pop
push
dec
insl
and
add
and
mov
cmc
push
or
mov
rcr
lcall
xlat
pop
jne
dec
lods
js
sub
insl
or
jnp
adc
mov
fnstcw
jae
es
and
test
in
shlb
stos
sbb
xchg
push
fstpt
rcl
sarl
inc
pop
mov
jge
mov
cmp
sbb
imul
icebp
popf
adc
mov
jl
jmp
cmpl
sbb
cwtl
ds
mov
xchg
push
pop
mov
inc
aad
scas
xchg
test
mov
insl
xchg
mov
pop
bound
rcrl
jae
pop
inc
int3
mov
or
sahf
sbb
pop
pop
cmp
les
jg
jb
enter
rcrb
inc
test
sub
mov
or
xchg
mov
test
scas
xchg
lahf
je
mov
xchg
sub
arpl
sbb
pop
xchg
xchg
jg
pop
cmp
xchg
movsb
movsb
mov
shl
test
enter
ljmp
mov
bound
imul
jge
mov
xchg
xlat
mov
shufps
lds
lock
xchg
lret
mov
and
in
aaa
xor
movsb
sub
outsl
aas
push
mov
jp
jno
mov
lea
loop
subl
aaa
jl
inc
vpunpcklbw
popf
and
lods
add
mov
push
xchg
push
mov
sub
dec
imul
adc
cmp
out
sub
sub
mov
es
repz
and
stc
sbb
into
jne
cmpsl
and
scas
ret
push
aaa
mov
pop
pop
es
sarb
enter
daa
mov
sub
jb
ljmp
rclb
or
dec
adc
lahf
dec
nop
out
pop
popa
in
add
adc
fsubrs
shl
mov
out
xchg
lret
in
testl
sbb
adc
scas
mov
mov
add
and
xor
rcrl
xor
cwtl
rcrb
mov
push
pushf
stos
mov
cmp
pop
or
cmc
jge
push
cli
cmp
aam
adc
and
mov
mov
movsb
cmp
cmc
dec
mov
repz
mov
adc
xor
popa
or
pop
pop
mov
les
idiv
out
inc
imul
dec
xorps
mov
pushf
mov
insl
jmp
jns
adc
fadds
inc
lret
inc
push
mov
icebp
xor
add
jno
loopne
adc
add
cmpsb
and
aam
nop
cmc
lret
cwtl
sbb
jg
incb
add
pop
or
sub
dec
subb
push
iret
je
inc
mov
mov
xchg
pop
rcr
dec
dec
push
jecxz
jo
jne
pop
in
ja
cwtl
cmp
decb
sbb
inc
adc
sti
push
in
xchg
jnp
xor
inc
lahf
and
lret
mov
jecxz
push
inc
cmp
sub
in
adc
or
repz
dec
pusha
inc
lret
cld
push
pop
push
test
cmp
lock
test
cmpsb
xchg
or
xor
je
xor
mov
pop
hlt
lds
jmp
jmp
jmp
cmp
sub
adc
cmp
outsl
mov
rorl
dec
stc
cmpsb
pop
or
mov
adc
lahf
aas
rolb
pop
or
out
popa
loopne
adc
cmc
push
inc
mov
roll
push
add
fdivs
in
fiadds
int3
fdivl
xchg
ja
cwtl
or
add
mov
ja,pt
data16
dec
addr16
adc
aaa
pop
cmpsl
imul
aad
ds
clc
cwtl
mov
sub
xchg
mov
or
out
xor
cmc
mov
lods
dec
out
or
sub
inc
mov
clc
push
pop
add
mov
imul
mov
clc
xor
push
cmp
sbb
fwait
adc
fiaddl
or
mov
aad
pop
insb
call
mov
or
cmp
rolb
test
das
test
jmp
je
mov
or
ret
jno
xor
loope,pn
jbe
stc
aad
fcmovu
jo
in
mov
es
aam
xor
cmc
mov
popf
sub
fmul
dec
call
cmc
jo
lods
jne
pushf
mov
cmpsb
out
lods
repnz
adc
mov
xchg
js
pushf
inc
rclb
insl
icebp
adc
repz
add
jno
adc
pop
mov
test
xchg
jle
not
jno
out
and
out
les
push
push
add
shl
out
xchg
and
sti
xor
dec
test
push
int
pop
call
push
lods
xor
inc
add
cmp
int3
sbbl
les
lods
xorb
adc
ja
in
insb
movsl
cmpsb
jne
pop
xchg
mov
cmpsl
cmp
jne
inc
xor
and
scas
mov
jl
clc
lret
lcall
mov
xchg
jo
mov
push
ja
ljmp
sbb
xchg
dec
adc
ja
scas
jmp
outsb
mov
aas
fwait
inc
pop
ret
push
sub
and
ds
daa
pop
push
mov
cmp
sbb
add
push
cs
mov
push
mov
add
test
add
imul
stc
pop
mov
xchg
push
outsl
or
cmp
out
pop
stc
cli
inc
stos
dec
xchg
xor
dec
js
mov
cld
dec
bound
fwait
xor
mov
sub
xchg
aad
nop
shrl
jmp
in
loop
pop
negl
and
mov
cmp
sbb
mov
rcrb
bsf
lret
mov
or
je,pt
nop
popf
in
mov
xor
sub
sbb
mov
mov
inc
mov
decb
pop
cltd
mov
mov
enter
daa
jg
imul
mov
shrb
and
out
enter
stos
sub
mov
cmp
push
xor
push
xchg
pop
test
sub
sti
sbb
iret
int
xor
lret
xchg
mov
or
cmp
icebp
inc
add
inc
ret
inc
or
call
inc
pushf
js
imul
lcall
shrb
mov
inc
cli
aam
push
jg
xor
pop
fs
cmp
out
mov
test
ss
cli
pop
xchg
sub
repz
mov
int
jo
js
int
iret
xlat
push
shll
icebp
movsl
das
bound
shr
dec
fnstcw
pop
cmc
push
mov
mov
dec
outsl
add
xchg
mov
jb
subb
loopne
pop
dec
cld
out
inc
rcrl
push
faddl
scas
dec
imul
aas
pop
mov
jmp
cmp
add
addr16
sub
insl
dec
dec
stos
cmpsl
mov
xchg
cmp
sub
sbb
jbe
mov
xchg
push
mov
or
dec
inc
push
jns
fstpl
sub
xchg
pop
fwait
mov
and
bound
push
idivl
adcb
in
dec
inc
bound
scas
icebp
push
or
lods
inc
xchg
int3
aam
ret
out
cltd
push
les
adc
hlt
sbb
push
xchg
mov
xor
push
sahf
mov
jecxz
xchg
xor
lret
clc
pop
nop
adc
test
dec
cmpsl
sub
insl
subl
pop
paddq
add
jle
pop
loope
cmp
cli
sub
sbbl
sub
hlt
test
xlat
xor
jo
jne
popa
cmp
sbb
aaa
mov
ret
imul
mul
pushf
lret
cmc
jno
sbb
fs
pop
xor
leave
test
ljmp
mov
jg
iret
inc
lcall
cs
lods
mov
xlat
pop
and
xor
push
cmp
or
or
push
xchg
mov
cmp
ret
xchg
push
dec
xchg
lods
in
cmp
inc
dec
enter
lea
push
cwtl
mov
rolb
add
push
daa
push
xor
rcrb
jl
adc
cmpsb
add
enter
cmp
into
rcrb
dec
mov
in
jo
and
fnstsw
and
push
inc
lods
jg
fwait
out
cmp
xor
cwtl
pushf
out
mov
les
mov
push
mov
mov
dec
pop
imul
add
push
test
or
lcall
push
mov
mov
mov
jnp
xor
les
ret
mov
mov
mov
pop
outsl
outsb
leave
in
mov
shlb
repnz
xor
lahf
dec
xchg
push
les
or
sbb
sbbb
cmp
in
jne
sub
adc
ret
sarb
cmp
stc
mov
pop
dec
and
sub
shl
cmp
lret
pop
data16
into
loopne
adc
add
pop
xchg
in
jo
stc
sahf
outsb
dec
xchg
dec
pop
cs
inc
mov
insb
jbe
xor
lret
test
add
jecxz
adc
fstpt
push
jmp
cmp
push
mov
loop
adc
inc
fcmove
aaa
add
or
push
jle
lret
cmp
mov
mov
pop
lods
mov
jae
sub
fcomps
loopne
jns
push
out
xor
cmp
mov
fisubrs
ret
pop
pop
and
sarb
inc
dec
sub
and
stos
movsl
test
test
test
lock
add
add
add
jg
movsl
ss
out
mov
aad
notb
jo
lahf
inc
rorb
idiv
repnz
sti
pusha
rorl
movsb
in
jae
leave
xchg
and
dec
push
fldt
nop
jne
cmpsb
outsl
and
xchg
pop
xlat
addr16
scas
mov
or
fstps
jns
and
js
imul
in
pop
test
mov
mov
stc
adc
cmp
lcall
fdivs
cmp
pop
aad
scas
inc
fchs
and
sbb
add
xchg
lret
gs
ja
jbe
in
xchg
movsl
dec
popf
rcrb
sahf
xorb
adc
es
add
push
fiaddl
or
mov
mov
and
outsl
aam
jmp
and
jo
mov
xor
jle
jmp
popf
pop
or
jne
rorl
mov
lret
in
mov
push
dec
les
jp
lea
mov
mov
push
pop
mov
pop
clc
mov
pop
add
adc
in
jbe
xor
lock
ss
fildl
xchg
or
fldt
adc
add
inc
sub
je
fisubl
cmp
addb
es
xchg
pop
cwtl
mov
loope
enter
cmp
fidivrl
mov
ja
fisubs
fs
ljmp
mov
aam
pop
or
enter
mov
jae
pop
je
dec
pop
mov
mov
lret
xor
sub
jp
dec
or
dec
mov
les
add
cltd
in
sub
in
mov
pop
les
mov
cld
push
sub
mov
xchg
outsb
dec
movsb
lds
leave
movsb
scas
add
inc
fidivrl
sbb
or
xchg
les
in
loope
and
sbb
cmc
push
push
inc
xor
scas
xor
jbe
fistl
pusha
push
jno
add
les
xor
int3
mov
adc
inc
sbb
mov
adc
lods
ret
pop
jne
pop
outsl
add
les
pop
lret
cmp
jae
inc
test
jmp
adc
xor
mov
dec
lret
cmc
sbb
fldt
sub
ds
push
jg
ds
xor
lcall
mov
mov
rcll
sbb
mov
mov
push
cltd
jne
sbb
fistl
jp
scas
jmp
xor
mov
rcrl
lds
stos
arpl
lock
and
jb
arpl
xchg
addr16
sbb
fisttpl
or
cmp
add
sti
fisubrl
fsts
inc
adc
std
adc
sub
mov
sub
pop
inc
imul
pop
jl
pop
add
push
test
cltd
push
leave
or
cld
jg
rcl
lods
inc
adc
cmp
aam
push
aad
fidivl
aad
jl
pop
repnz
push
out
sbb
repnz
and
sar
or
inc
pop
out
shrl
ret
repz
and
ja
adc
leave
lahf
ja
call
sub
sbb
imul
add
sub
jns
cmp
sbb
xchg
mov
jge
push
flds
stc
adc
scas
fcmove
ja
fsubl
inc
aad
fmulp
into
mov
push
mov
leave
insl
jne
out
adc
pop
fisubrl
shlb
shlb
dec
ret
out
fimuls
hlt
dec
ret
or
hlt
es
inc
jle
mov
subl
jns
mov
dec
icebp
mov
dec
dec
stc
mov
mov
push
jb
fstl
data16
mov
jnp
sbb
mov
jnp
hlt
cmp
mov
pop
adc
and
push
in
insl
sub
lea
push
shll
and
icebp
jg
das
rol
addr16
or
cmp
adc
mov
popf
push
shll
fcmovnu
out
scas
pmulhuw
jg
mov
es
xlat
xchg
stos
shl
xchg
mov
mov
rcr
lea
sub
jmp
in
fstpl
aas
dec
cmp
cld
lcall
pop
mov
push
rorb
dec
sub
gs
sub
dec
mov
pop
push
adc
jnp
and
and
dec
scas
aaa
push
ljmp
incb
es
inc
sahf
loop
jb
or
out
pusha
or
jae
inc
sbb
jle
icebp
jmp
sbb
icebp
xor
sbb
sbb
fwait
nop
test
cmp
test
scas
inc
aas
inc
jp
leave
in
out
fistpl
pop
sbb
pusha
cmp
loope
and
stc
imul
mov
int
dec
pop
dec
adc
repnz
sbb
adc
mov
sub
cmp
xchg
xchg
add
adc
clc
imul
dec
inc
sub
sbb
or
popf
push
push
xchg
cmpl
mov
fs
push
lods
pop
call
xlat
mov
pop
cs
sub
mov
je
push
xchg
dec
mov
or
ljmp
out
dec
fildl
repz
jbe
out
divl
cs
cmpsb
cmp
aad
out
dec
test
inc
ret
fs
jb
mov
ljmp
std
pusha
hlt
xor
xchg
scas
pop
or
xlat
cwtl
cmp
xor
xchg
loopne
imul
xchg
xchg
orl
sahf
inc
mov
lcall
insl
negl
fnstsw
jl
icebp
dec
xlat
inc
fcoml
ror
loopne
jmp
dec
push
es
xor
popa
lods
jmp
cmp
push
push
push
mov
or
push
xchg
lret
dec
daa
sbb
xor
scas
cmp
int3
sbb
mov
jmp
clc
test
push
mov
aas
cmp
fadd
repz
ud1
pop
clc
ljmp
sub
cli
lods
xchg
iret
push
pop
mov
or
or
imulb
add
mov
out
popa
jbe,pt
mov
pop
xchg
cmp
cltd
xlat
inc
add
iret
ficompl
lret
jl
adc
pop
mov
subb
sbb
push
mov
insl
mov
push
movsl
bswap
push
mov
test
xor
lock
ss
jge
adc
ret
xor
jl
enter
call
and
pop
pop
dec
test
scas
ja
shrb
loopne
gs
sarl
push
ret
mov
jnp
pop
test
insl
stc
push
cmp
outsl
push
dec
in
test
aaa
icebp
push
enter
mov
and
enter
or
push
push
es
mov
int
movb
andb
pop
aam
mov
pop
sbb
ljmp
rcr
mov
add
das
jnp
xor
stos
jle
out
sahf
and
data16
pop
xor
incl
sub
push
es
loop
push
add
mov
push
aaa
mov
inc
or
stos
mull
mov
stos
adc
les
out
fisubs
mov
jae
aam
add
notl
mov
loopne
jbe
xchg
das
mov
cs
shl
loopne
pop
push
xchg
aam
or
ja
int3
push
je
or
jo
cltd
sti
out
mov
jmp
mov
fwait
jnp
sub
xchg
nop
idiv
into
pop
adc
daa
inc
xchg
mov
push
or
mov
mov
ficoms
sub
cmc
divb
outsl
cmc
pop
add
mov
ficoml
mov
jno
imul
sbb
clc
lea
jmp
xchg
or
clc
or
ja
call
xchg
sub
nop
pop
xchg
cmp
shrb
push
mov
mov
push
lcall
cli
push
jo
jne
or
lods
jl
into
pop
loopne
adc
rolb
movsl
mov
mov
push
aaa
jnp
adc
sahf
rorb
mov
mov
lods
jb
dec
iret
pop
jnp
push
xchg
pop
outsb
cs
xor
shrb
loop
cmp
lret
mov
inc
xchg
push
arpl
outsl
xor
adc
fisttpll
cwtl
dec
repnz
mov
js
push
mov
add
and
xchg
pushw
stos
jno
inc
fcom
dec
add
push
loop
jmp
jl
push
mov
lds
and
pop
jae
aas
addr16
jl
repz
sub
lock
and
jae
sub
and
inc
arpl
dec
xor
clc
js
cmp
ret
mov
xchg
pop
test
inc
in
lods
call
and
dec
insb
jmp
push
cmpsl
sbb
inc
dec
dec
jg
js
xchg
fiaddl
sbb
jg
jmp
push
rcll
data16
or
cmc
jbe
fists
add
xchg
pushf
nop
dec
fstpl
jnp
enter
rorb
xchg
sahf
mov
xorl
and
aas
andl
push
or
iret
stos
or
scas
adc
adc
jnp
dec
jae
int3
negl
test
das
jmp
mov
ret
jl
mov
lcall
or
mov
mov
mov
popf
cmp
adc
inc
and
sbb
pop
mov
mov
push
and
adcl
mov
xor
add
cmp
cmp
les
in
xor
add
mov
lret
inc
jl
xlat
popf
test
in
xchg
in
movsb
rcr
test
test
inc
cltd
rolb
mov
fdivrl
addl
outsl
ror
cmp
stc
aaa
jl
flds
cld
pop
insb
xchg
pop
mov
std
fadd
mov
inc
stos
loope
cmp
cld
mov
iret
sub
icebp
push
mov
cli
jmp
pusha
fcomip
sahf
insb
pop
and
push
dec
pop
cli
inc
or
fisttps
shll
in
xor
dec
enter
jl
and
cmp
xchg
mov
ss
leave
sub
lret
test
pop
out
jecxz
fistpll
add
aaa
push
xchg
push
mov
fnsave
or
push
popl
pop
fucomip
mov
inc
cli
jge
scas
mov
mov
push
add
lock
aaa
adc
repz
imul
lock
pop
push
cmp
insl
mov
jecxz
int
ds
dec
out
mov
sub
mov
lahf
jle
xor
pop
movb
push
add
mulb
stos
lret
test
mov
cmp
or
mov
dec
mov
nop
pusha
cmp
and
xchg
das
jo
mov
sub
or
enter
mov
lret
xchg
cltd
jnp
cwtl
mov
cs
pop
dec
ret
cld
daa
test
jae
and
dec
cmp
fwait
mov
insl
stc
sbb
stc
fistpl
addl
pop
push
dec
dec
push
adc
xchg
lds
imul
mov
je
cltd
and
sbb
push
add
lods
mov
pop
lea
xor
shlb
pop
imul
jo
faddl
inc
jbe
inc
push
into
lods
add
or
clc
aam
out
scas
test
jge
mov
push
cs
inc
and
int3
or
jns
jle
rep
gs
cmp
into
dec
mov
pop
lret
add
jo
add
inc
push
loope
mov
popf
out
pop
int3
push
dec
push
adc
repnz
jl
mov
or
fidivs
leave
fwait
or
cwtl
mov
jg
pop
add
pop
test
aas
leave
dec
lds
insb
mov
fsubrs
pushf
and
push
mov
scas
inc
and
xor
shll
test
inc
outsl
and
push
jl
cmpsl
xchg
mov
imul
pusha
shr
cmp
sahf
outsb
mov
pop
fcoms
and
jle
fistpl
int
pop
loope
add
mov
lret
lcall
mov
fs
pop
mov
or
or
mov
cmp
pushf
js
cmpsl
or
cwtl
sub
dec
repnz
add
inc
xchg
std
lds
or
cmc
in
rorl
xchg
filds
adc
xor
jo
jb
cmp
and
jo
std
pop
dec
imul
jne
fs
pusha
movsl
jb
jecxz
jb
out
xchg
cmp
loop
cwtl
adc
ljmp
mov
add
mov
test
ja
out
cwtl
test
push
sarl
sarb
dec
pop
sbb
ret
mov
xchg
rclb
in
lret
add
scas
inc
movsb
dec
xchg
cmp
pop
fidivl
jg
dec
push
sahf
scas
cmp
ds
pop
sbbl
repz
pop
xchg
inc
xor
fsubs
insb
fcomi
jecxz
dec
mov
jge
dec
adc
int3
cmp
dec
test
add
repz
into
mov
xor
sub
repnz
out
scas
pop
call
pop
mov
sub
dec
sub
push
or
cmp
cmp
loop
add
cmp
mov
cmpl
push
push
xchg
push
imul
mov
inc
insb
dec
dec
or
add
rcl
push
stc
mov
aam
push
adc
dec
loop
inc
jb
pop
or
adc
gs
xchg
mov
mov
inc
adc
cwtl
cmpl
xor
inc
mov
aad
fs
mov
adc
jb
add
daa
test
std
fists
lahf
popa
das
cmpsb
xchg
lock
inc
jne
pop
cmp
dec
movsb
enter
push
xor
enter
mov
iret
push
xor
inc
push
addr16
mov
cmpsb
mov
movl
jae
icebp
lret
jge
push
insb
sti
cmp
jnp
mov
push
es
mov
mov
orb
or
fucom
lret
shr
mov
ds
jbe
inc
sub
cld
ds
mov
imul
dec
bound
add
int
cmpl
test
ds
inc
sahf
inc
out
add
ret
xor
xlat
fsubl
and
mov
movsl
das
mov
mov
xor
xchg
movswl
fmuls
and
mov
shrb
cmpb
idivb
fcompl
dec
enter
mov
ja
mov
fwait
xor
fistpl
data16
js
into
in
arpl
pushf
sahf
inc
stos
pop
mov
and
sub
xchg
adc
cmp
clc
test
push
jo
ror
pop
inc
ljmp
das
pop
das
xchg
pop
jbe
jnp
pop
movsl
stos
fwait
push
pop
mov
or
aad
mov
cmp
jle
xor
aas
push
fsub
pop
pop
pop
movsb
sub
cld
stos
imul
lcall
js
dec
push
mov
idivb
xchg
mov
into
jns
jo
cmpsb
cmp
fisttps
es
jnp
js
sub
scas
dec
ds
fldl
jmp
scas
shrb
dec
loope
add
stos
mov
rorb
clc
sbb
lret
out
ficoms
out
add
outsb
mov
in
fcomps
add
insb
push
icebp
mov
mov
sbb
fwait
inc
sbb
add
shll
or
jle
pushf
sbb
pop
iret
mov
jns
dec
sahf
std
dec
fmuls
push
sub
push
pop
jecxz
sub
xor
xchg
mov
sarl
test
outsl
pop
adc
lds
sub
sahf
out
cmc
cmc
inc
inc
push
adc
push
xor
js
sbb
jecxz
sbb
push
and
inc
test
out
push
test
xchg
rol
xor
lods
sub
icebp
mov
push
test
cmpsl
addb
cld
jge
and
fwait
or
cmp
aaa
sti
mov
mov
in
push
or
sahf
lea
mov
and
sub
fildll
mov
pop
fcomp
test
cwtl
mov
dec
jle
mov
movsb
jle
or
and
pop
inc
xor
out
lea
push
inc
push
add
xchg
mov
adc
cld
xchg
mov
and
cli
cli
adc
les
test
jmp
mov
push
xchg
dec
pop
fcoms
and
lret
xchg
xchg
or
outsl
in
imul
push
outsl
mov
xor
xchg
mov
and
push
mov
sbb
mov
mov
add
cmpsb
pop
movsl
jns
xor
push
sti
mov
test
inc
andl
fimull
scas
lcall
mov
mov
mov
addr16
mov
pushf
and
mov
push
aad
mov
cmp
sub
push
fcomps
insl
xor
adc
ljmp
jp
scas
sarb
lahf
mov
call
mov
pop
in
loop
mov
pushf
stos
inc
push
rclb
dec
jo
sbb
adc
mov
add
ficoms
in
xchg
xchg
test
scas
sub
ret
roll
sub
fs
das
data16
or
aaa
adc
jo
fists
mov
dec
mov
inc
xlat
mov
ret
inc
rorl
ja
movsl
pop
mov
test
lds
fs
aad
outsl
insl
rcll
lret
mul
sbb
jnp
loop
sub
mov
jp
jnp
or
cld
xor
push
iret
dec
fstpl
mov
std
push
xchg
insl
push
pop
xchg
enter
stos
repz
scas
movsb
fldcw
pop
imul
repz
push
cltd
pusha
inc
dec
pop
xchg
mov
daa
sub
pop
mov
jo
pop
and
pop
jecxz
inc
push
pop
int3
push
jmp
jl
rclb
lods
rolb
into
lcall
mov
dec
dec
xchg
hlt
sub
bound
xlat
rcrl
insl
int3
xchg
arpl
mov
and
xchg
lret
lock
fwait
scas
dec
and
push
fistps
mov
pop
bound
adc
cmp
mov
xor
cmp
adc
jmp
or
ja
into
adc
mov
orb
mov
mov
gs
fidivl
or
repz
inc
sbb
dec
cmp
lock
aas
lods
inc
xchg
push
loopne
xchg
add
and
call
fstpt
adc
xorl
sbb
mov
repz
mov
nop
cs
loope
lea
lahf
mov
test
pop
cmp
xor
popf
shlb
call
bound
mov
mov
jl
mov
adc
lret
sub
insb
outsl
ficomps
cmpsb
cmp
cmpsb
sbb
sbb
cmp
lds
adc
mov
xlat
xor
mov
icebp
test
and
xor
fnstcw
fwait
insb
iret
dec
sub
insb
shlb
cmp
adc
fwait
notb
jmp
jae
push
cmp
xchg
sbb
jne
popa
or
adc
icebp
scas
out
cmp
and
pop
dec
cld
shrl
and
addr16
dec
inc
or
dec
dec
cmpsb
xchg
out
push
mov
mov
pop
add
mov
sub
adc
dec
rcrb
push
jo
push
es
insl
mov
leave
add
pop
pop
decl
loopne
cltd
pop
in
in
inc
les
lods
mov
dec
dec
fisttpll
lds
xor
jns
stc
aaa
sub
or
cmp
fstpt
inc
xor
mov
rolb
inc
std
test
xchg
imul
mov
adc
lds
sub
subb
imul
xchg
std
arpl
and
insl
adc
mov
xchg
std
mov
imull
or
scas
aam
inc
ret
pop
pusha
sarb
jae
out
out
sub
std
cmpsb
fs
fcmove
mov
outsb
stos
mov
jns
cmpsl
xor
loope
test
jb
xor
inc
dec
cmp
push
or
cmpsb
mov
fisubrl
mov
sbb
and
out
nop
lock
dec
jge
jns
test
push
stc
lret
movsl
cwtl
or
or
inc
iret
pop
pop
mov
mov
mov
test
inc
add
add
dec
sbb
jo
push
xchg
sbb
jno
out
push
ds
push
pop
pop
mov
leave
outsb
xchg
movsb
mov
je
outsb
cwtl
inc
and
and
mov
mov
push
mov
push
xor
lret
xlat
pushf
loop
jne
mov
adc
adc
push
imul
mov
xchg
jecxz
hlt
inc
divl
lods
movsl
mov
gs
push
cmpsl
pop
repnz
or
lds
adc
mov
fs
and
pop
mov
out
or
das
push
insl
iret
pop
or
out
sbb
icebp
loopne
enter
in
shl
xchg
push
sarl
sbb
notb
je
add
pusha
cli
sbb
mov
lock
pop
loope
jge
repz
addb
popf
insl
push
mov
fwait
cwtl
je
sbb
bound
rcrl
inc
movb
or
or
out
pop
in
inc
cmp
push
insl
mov
sbb
push
loope
fnclex
adc
pop
mov
sbb
test
shrl
rcll
lds
mov
es
or
fstl
mov
test
push
sbb
insl
jne
clc
xor
test
nop
pushf
ljmp
pusha
es
lahf
jmp
mov
dec
aad
out
shl
pop
adc
popf
les
jcxz
imul
mov
sbb
cmc
mov
dec
jb
xchg
mov
inc
jo
int3
and
adc
leave
stc
sbb
xchg
jmp
lcall
pop
mov
jecxz
push
and
movsl
push
jnp
popf
ret
push
pushl
sub
cmpsb
fsubrl
add
das
nop
xor
mov
test
outsl
js
movsl
push
stos
jp
xor
movsb
and
xchg
popa
sub
ss
test
test
pop
sbb
and
ljmp
insl
aam
std
outsl
aam
xchg
insl
mov
mov
orb
mov
ret
adc
shr
xlat
push
int
add
jbe
pop
aam
inc
dec
inc
mov
je
or
pop
sub
or
js
or
mov
filds
and
daa
je
jecxz
sub
popf
leave
add
cli
push
sbb
mov
push
sbb
mov
or
je
imul
xlat
lods
and
sub
inc
imul
cs
jnp
out
fistpll
pop
jb
xor
mov
cmp
sbb
mov
add
jge
sub
pop
pop
imul
cmp
push
mov
mov
sub
int3
push
cmc
sbb
adc
mov
pop
dec
sti
aam
mov
mov
mov
ret
mov
lcall
push
or
xor
aad
sub
and
sbb
mov
fistpll
cmp
cld
cs
notl
fs
dec
fstps
cmp
ss
repnz
cmp
inc
outsl
mov
mov
xchg
repz
inc
pop
push
ret
out
stos
test
in
dec
xchg
insl
adc
dec
nop
insb
rsm
repz
mov
dec
or
push
fdivp
movsb
mov
mov
out
push
mov
pop
mov
stos
ja
rclb
sti
jae
push
iret
stos
xchg
mov
imul
sub
fwait
ds
movsl
mov
imul
cmp
push
lahf
js
push
pop
sub
mov
out
pushf
out
mov
sbb
popa
out
dec
faddl
push
dec
jmp
sbb
icebp
out
and
int
push
hlt
sahf
push
pop
rorb
in
dec
pop
sub
out
movsb
mov
arpl
je
cmp
test
orb
xor
xchg
pop
fisttpl
mov
jge
lds
dec
outsb
stos
sbb
jg
mov
xchg
xor
mov
scas
inc
nop
xor
fiadds
pop
shr
and
lea
pop
or
inc
and
loope
test
mov
cmp
mov
into
mov
xor
repz
mov
adc
out
adc
xchg
add
cld
mov
incb
mov
nop
in
dec
cmpsl
mov
sbb
aad
mov
mov
in
aas
cli
adc
pop
cltd
add
das
push
pop
or
cmc
mov
mov
mov
xchg
jb
dec
or
push
sub
fyl2x
gs
lcall
daa
in
ret
mov
outsl
sbb
bound
mov
pop
mov
lods
lea
dec
pop
sbb
cli
test
or
pop
pop
adc
pop
add
inc
daa
lahf
nop
jno
pushf
xlat
pop
push
fs
jae
mov
sbb
ret
jne
icebp
add
enter
ret
mov
scas
loopne
xchg
loop
rorl
sub
and
cwtl
shlb
pushf
scas
out
popf
pop
rorl
fldt
bound
leave
cmp
ss
cmpsb
jb
mov
jo
enter
in
mov
out
movsb
mov
jb
pushf
and
mov
lret
cli
das
rcrb
stc
call
dec
faddl
psubsw
lock
iret
xor
decb
orl
pop
jp
inc
push
retw
lcall
pop
inc
xchg
sar
pop
cmp
scas
inc
and
jo
insl
daa
mov
and
addr16
out
loop
mov
or
push
cmp
pop
mov
inc
pop
cmp
cmp
adc
icebp
push
sub
movsb
sti
ds
rol
pop
or
mov
iret
jne
cmp
je
push
fadds
fildll
pop
icebp
ret
dec
call
out
lret
push
mov
ss
sbb
aaa
jl
inc
push
xchg
add
dec
iret
pusha
fists
add
dec
jg
test
out
test
push
sarb
mov
arpl
fs
push
pop
mov
jmp
mov
push
sbb
pop
enter
dec
jb
xadd
pop
fistl
sbb
rcr
stos
adc
push
jl
sarl
jno
imulb
pop
or
es
fs
ss
fistl
cmc
add
dec
sbb
sub
inc
dec
mov
and
xor
jle
js
inc
fnstsw
cld
addr16
push
adc
test
or
push
mov
fcmovbe
hlt
iret
jo
mov
loopne
jle
popf
or
dec
rol
pusha
leave
jno
sbb
push
cwtl
ret
in
ror
pushf
popa
lret
mov
jne
sbb
xchg
fsubs
xorl
jno
std
mov
popa
scas
sbb
stc
adc
pop
enter
ja
sti
test
inc
pushf
mov
ret
movsl
sti
or
scas
insb
add
jb
in
in
mov
push
aam
xchg
xor
mov
outsl
sbb
sub
add
cmp
cltd
test
push
shrb
jno
mov
pop
lret
adc
fisubs
rolb
icebp
es
ret
js
xchg
and
pop
fucomip
cmp
mov
lahf
je
cmp
jnp
pop
push
fcompl
mov
mov
jmp
rcr
dec
repz
mov
adc
les
mov
dec
fwait
lods
dec
sar
sbbb
call
cld
les
in
ret
pop
push
pop
std
add
and
xchg
adc
dec
movsb
loope
xchg
std
xor
test
lcall
jecxz
leave
arpl
stos
mov
mov
push
adc
xchg
jg
es
iret
movb
push
outsb
pop
aas
into
roll
inc
jmp
sub
arpl
lods
imul
xor
xchg
mov
mov
imul
das
jne
imul
lods
inc
xchg
pushf
push
add
adc
mov
pop
xchg
mov
mov
jb
inc
orb
xchg
jno
xchg
dec
xchg
out
push
and
test
dec
mov
mov
ss
shlb
pop
sahf
jae
ret
je
pushf
push
shlb
adc
cmc
addr16
dec
fstpl
push
pop
daa
or
push
and
mov
std
dec
hlt
mov
mov
xchg
mov
mov
pop
or
jmp
js
je
es
jnp
neg
xor
or
aam
lds
mov
bound
mov
dec
mov
push
xchg
jg
ret
int
pop
jns
imul
outsb
jnp
aas
cmp
inc
adc
lret
or
pop
and
sbb
aad
std
or
xchg
insl
je
into
or
lock
data16
clc
sbb
in
leave
jns
adc
cmpsl
je
movsl
in
jp
mov
mov
cmp
fidivs
or
imul
cld
in
pop
xor
mov
cmp
fld
jmp
jecxz
dec
inc
movsl
jmp
and
test
lods
or
call
sub
pop
push
rorb
pop
cmp
add
mov
add
ror
lods
mov
scas
push
jmp
std
pop
xchg
addr16
mov
mov
or
jb
jmp
and
or
mov
pop
mov
rcl
pop
pop
cmp
sbb
ds
inc
out
leave
mov
dec
loop
and
jno
inc
mov
int3
mov
outsl
jns
xchg
out
movsb
jge
pop
adc
scas
int
mov
ret
push
xchg
jns
aas
out
sbb
jae
ret
xor
sbb
mov
jmp
or
rcll
sub
pop
push
es
jb
inc
arpl
jno
pop
sub
neg
adc
sbb
and
inc
push
test
mov
enter
imul
in
adc
sub
fdivrs
pop
test
pusha
sahf
xchg
cmpsl
mov
jge
cmc
xchg
sarb
test
mov
aaa
pop
inc
test
and
movsl
pop
lret
jae
xrelease
gs
pushf
or
jg
stos
rorb
inc
stos
mov
push
lock
shll
sub
cmp
xchg
cld
jge
ljmp
movl
push
movsl
aaa
pop
sbb
aam
push
cmpsb
int3
dec
push
in
call
jo
stos
lret
and
pop
dec
testb
or
dec
push
mov
test
imul
ret
leave
leave
icebp
cmp
xlat
push
xlat
cmp
clc
mov
add
in
jo
shl
xlat
orl
pop
mov
sbb
out
imul
add
mov
popf
xchg
mov
int3
xor
push
mov
enter
insb
fwait
shrb
mov
shr
inc
add
and
lods
adc
pop
fildll
clc
mov
sbb
shrb
movsb
jb
fdivl
sahf
cli
push
stos
push
neg
shrb
push
sbb
mov
adc
nop
inc
mov
sbb
xor
and
add
add
inc
jmp
aas
add
aad
pop
scas
fdivr
sbb
test
jmp
pop
and
pop
int
ljmp
in
imul
adc
movsl
aas
pop
push
movsb
inc
clc
outsb
negb
inc
mov
cmpxchg
xor
or
fs
inc
inc
dec
aad
shrb
ret
mov
dec
movsl
and
xchg
jo
push
pop
jne
cli
and
sarl
sbb
dec
mov
mov
loopne
inc
sbb
imul
lahf
les
enter
mulps
les
les
push
lock
pop
ljmp
jl
mov
add
je
mov
or
jge
jge
pop
shlb
mov
lds
addr16
add
outsl
in
add
push
add
enter
sti
pop
sbb
add
movsb
lret
mov
jns
ret
dec
out
jg
mov
mov
and
stc
mov
dec
in
inc
pop
push
or
popa
test
xchg
insl
js
popa
cmpsl
fmul
xchg
jmp
popa
mov
andl
and
mov
pop
jg
test
addr16
push
adc
cwtl
cmp
pop
ja
out
xor
cltd
push
or
fidivrl
pop
scas
je
sbb
pop
es
add
inc
mov
jno
mov
adc
lock
cmp
in
pop
arpl
adc
scas
mov
cmpl
test
or
inc
int
push
nop
jl
mov
adc
out
add
xlat
cmc
dec
into
dec
or
aad
add
push
or
rorb
inc
cmp
mov
mov
xor
jne
out
and
adc
sub
sub
imul
or
push
popf
dec
fnstsw
ret
or
loopne
xor
sub
pop
pop
xchg
into
xlat
js
les
sub
inc
stc
test
xorl
mov
mov
mov
jle
cld
add
loope
push
xor
mov
pop
xchg
inc
fistpl
pop
jg
jge
push
fmulp
xchg
and
xor
leave
pop
or
pushf
cltd
addr16
int
mov
int
or
aas
cld
pop
mov
xor
xchg
sub
fmull
dec
and
jl
add
lds
inc
cmp
scas
iret
fadd
movsb
aaa
lret
jnp
imul
dec
je
adcl
or
ret
jno
out
enter
aam
cmp
lahf
mov
dec
in
leave
pusha
cmp
dec
sub
loope
sbb
js
out
mov
aad
notb
jecxz
insl
pop
sti
mov
mov
pop
rcl
je
pop
xor
test
cmp
adc
dec
pop
das
leave
icebp
push
loope
pushf
add
dec
lods
ss
pop
rcl
mov
ficoms
lock
xchg
xchg
dec
push
insb
pushaw
leave
jns
push
push
inc
mov
pop
inc
loope
inc
inc
jb
mov
xchg
out
loope
xor
jne
dec
adc
pop
push
xor
mov
notb
lods
leave
sahf
sub
jl
xor
jl
xor
pop
addl
ds
ja
mov
test
lods
cwtl
sbbb
push
push
mov
inc
pop
cmpsb
fldenv
out
pop
or
mov
imul
fcmove
xchg
xchg
inc
xchg
jne
cmpsl
lret
test
and
lock
ret
mov
xchg
pusha
push
adc
xor
or
push
push
and
push
adc
mov
cld
cltd
hlt
les
arpl
cmp
bound
and
mov
push
js
sub
xor
gs
lea
sbb
pop
dec
ret
pop
xor
aad
lahf
push
inc
ja
adc
pop
adc
leave
adc
test
fs
sub
push
scas
dec
jg
xchg
aad
pop
cmp
mov
out
fcomps
fldenv
mov
stos
jmp
sbbb
xchg
popf
cmpsl
sahf
sbb
fistps
fwait
add
add
divb
mov
in
call
les
ud2
movsb
fisubrs
adc
aam
sbb
jo
push
xor
imul
jo
wrmsr
mov
fdivrl
push
cmp
lock
roll
sub
cmp
pusha
push
ds
repz
and
inc
pop
movsb
and
mov
jne
das
pop
jp
mov
sub
xchg
jl
xorl
and
add
and
sub
cmc
xchg
loop
and
sbb
cmp
add
sbb
in
pop
sarb
lods
lret
call
bound
fdivl
or
or
nop
push
cwtl
das
adc
loope
movsb
sub
inc
add
cmp
mov
cmp
mov
cltd
push
dec
enter
cli
or
sbb
inc
addr16
aam
ja
scas
jge
cld
xor
inc
ss
rorb
cwtl
dec
sbb
dec
aad
aam
setg
jg
or
les
or
add
jecxz
fadds
xlat
mov
pop
and
mov
adc
sbb
fldcw
aas
and
push
test
mov
dec
add
sti
jnp
lcall
leave
icebp
imul
popa
loope
mov
imul
inc
lret
jbe
mov
push
aas
jae
je
dec
addr16
mov
xchg
jl
lods
loope
out
outsb
xchg
pop
gs
cwtl
negb
dec
cltd
xchg
jae
adc
mov
xor
outsl
jmp
sahf
je
push
sub
or
xchg
insb
pop
sub
mov
inc
or
sti
cmp
mov
mov
xchg
or
iret
arpl
test
sub
fnop
pop
push
mov
mov
adc
enter
jns
mov
dec
cmpsl
xlat
mov
or
push
test
in
jle
clc
or
or
sbb
incb
movsb
jnp
sbb
insb
push
xchg
or
xchg
mov
fucomip
sbb
scas
dec
push
mov
xchg
fwait
leave
ljmp
dec
xchg
icebp
cmc
or
push
sbb
movsl
xor
xor
mov
lcall
in
dec
into
mov
nop
fisttpll
out
shll
aaa
out
cmp
dec
jl
not
es
add
fs
add
js
call
addb
pop
pop
xor
data16
sub
add
mov
shr
cmp
adc
outsb
idivb
jb
sbb
clc
enter
test
dec
jmp
pop
mov
loope
outsl
lcall
test
movsb
sub
xchg
xor
shll
ja
dec
rolb
add
nop
jp
rol
aas
lret
lea
xchg
jae
mov
or
cmp
cmp
cld
cmpsb
inc
fucomi
mov
lock
push
mov
mov
loop
push
les
push
and
in
lods
int
jno
dec
enter
jmp
and
arpl
mov
outsl
rorb
cmp
mov
loope,pt
push
pushf
or
daa
dec
out
mov
std
cltd
es
push
mov
int3
sub
lods
cmpsb
mov
in
pop
test
inc
pop
xchg
and
dec
cwtl
shl
add
clc
lret
and
fwait
gs
mov
data16
push
xlat
add
adc
lahf
cmp
adc
rclb
add
push
icebp
push
mov
mov
push
xor
xor
mov
push
dec
sbb
ret
mov
outsb
xchg
popf
mov
sbb
dec
test
icebp
gs
sub
xor
push
sub
pop
es
shrl
dec
aaa
jle
cmp
dec
dec
aaa
ficomps
fisubrl
divl
xor
data16
test
cld
fistl
mov
loopne,pt
mov
test
xor
mov
push
sub
jg
sub
push
es
ds
mov
lret
insl
sub
addr16
in
repz
mov
popa
mov
push
imul
rorl
in
rcl
das
lcall
add
das
lock
mov
shlb
mov
cli
push
ficomps
or
mov
adc
sbb
std
sbb
jmp
add
clc
icebp
subl
sbb
adc
sub
fnsave
das
dec
decl
jne
mov
mov
mov
xchg
adc
ds
cmpsl
mov
dec
test
add
pop
outsb
movb
pop
xor
add
mov
push
adc
into
mov
push
xor
bound
pushf
sbb
sarl
lods
mov
mov
inc
adc
xor
jnp
push
mov
or
pop
std
clc
jg
cmpl
adc
data16
sub
inc
mov
loopne
jmp
mov
popf
sub
xchg
dec
mov
add
dec
jb
sahf
or
arpl
mov
push
stos
aam
out
mov
xchg
sub
cmpsb
cmp
and
xchg
push
jns
movsl
clc
mov
movsl
pop
mov
adc
jp
mov
insb
leave
cmp
pop
xor
push
push
and
mov
or
cmp
mov
sbb
popa
iret
push
and
xor
rorl
dec
movsl
jp
sbb
lahf
cmp
sbb
pushf
loop
jmp
stos
mov
adc
pushf
mov
stc
sub
mov
out
in
jo
outsb
mov
and
lahf
int3
mov
das
pop
add
imul
dec
jp
jae
xchg
jle
pop
movsl
enter
into
inc
mov
rclb
ljmp
das
push
and
xor
not
fcmovne
dec
mov
jbe
push
lds
test
xor
stos
aad
push
xor
mov
pop
adc
lcall
sub
adcl
cltd
or
inc
inc
adc
hlt
ljmp
dec
cmp
sahf
pushf
insb
jns
xor
pop
mov
lds
jbe
sub
xchg
mov
movsb
ds
test
repnz
fisubs
jecxz
jg
out
push
mov
insb
xor
push
std
lahf
outsb
loope
pop
sbb
mov
cmp
int
sbb
subb
xchg
jecxz
mov
call
test
daa
and
int3
dec
ds
adcl
or
push
mov
pop
int
rclb
mov
push
mov
xchg
aad
xor
movsb
pop
loopne
fisttpll
pop
mov
adcb
cmp
cmpsl
jp
xor
rcrb
add
lds
nop
push
jg
hlt
mov
sbb
test
xor
xchg
cmp
pop
push
test
cmp
inc
dec
pop
fs
mov
pop
adc
or
push
stc
std
mov
outsl
cwtl
mov
cmp
mov
ret
xchg
push
fs
lods
jl
scas
jecxz
jl
mov
fiaddl
in
sbb
jecxz
scas
mov
call
jne
xchg
push
jb
mov
mov
jecxz
xor
clc
in
aas
push
daa
lock
mov
mov
push
xchg
repz
loopne
aam
mov
lret
into
pop
and
jg
xchg
xlat
rcrb
pop
gs
jo
mov
sbb
pop
pusha
filds
cli
ret
sbb
push
dec
pop
mov
jno
gs
inc
sbb
pop
mov
aad
insb
sahf
cmp
mov
cmp
adc
rcl
add
cmp
xchg
orb
inc
sub
xchg
lea
ja
sbbb
add
loope
test
jecxz
inc
inc
mov
push
iret
mov
add
cwtl
shrb
loopne
orb
xchg
sbb
movsl
loopne
scas
add
enter
xor
pop
popf
mov
testb
repnz
mov
insl
sub
fildl
lahf
sub
push
lods
lods
push
imul
psubusb
adc
sarb
call
stos
out
out
enter
pop
add
fidivrl
in
mov
je
es
test
fidivrs
fstl
daa
mov
xor
sbb
std
stos
call
add
mov
popa
dec
insl
mov
mov
scas
hlt
rcrb
fs
push
inc
mov
and
test
adc
dec
pop
mov
push
sub
dec
jge
mov
out
and
cmc
in
inc
mov
adc
sub
sbb
mov
cmc
xchg
ret
lds
inc
shrl
lods
iret
pop
sti
add
je
pop
rorb
mov
mov
stos
sub
cmp
loopne
adc
xchg
sbb
inc
in
inc
mov
xchg
sub
rcr
sub
insb
push
adc
jg
xor
orb
cmc
or
dec
inc
jecxz
push
rcll
xchg
iret
std
dec
inc
les
icebp
xor
dec
push
xchg
or
add
cmc
and
pop
xchg
xchg
pusha
cli
and
std
and
mov
decb
push
divl
test
movsb
sub
int3
es
sub
sub
stos
mov
push
push
mov
pop
jnp
mov
cmpsb
or
inc
push
xor
pop
imull
mov
outsb
popa
call
dec
test
sub
dec
dec
ss
xchg
add
mov
lods
sbb
or
mov
push
sti
or
aas
jbe
jecxz
adc
and
dec
xchg
in
repnz
mov
das
ret
mov
jno
adc
mov
mov
inc
daa
xchg
adc
pop
fwait
mov
loope
testb
xchg
xchg
addl
int3
jne
inc
xor
ss
pop
daa
fdivs
sub
mov
fninit
mov
fs
and
sub
dec
add
dec
mov
test
cmp
insb
cmp
jnp
cmpsl
sbbw
jne
loope
push
xchg
scas
mov
and
das
xor
xor
lea
cld
sub
popf
je
std
lret
xor
cmp
nop
movsb
iret
jns
repz
dec
mov
jne
pusha
clc
push
mov
cltd
sbb
rcl
push
mov
lock
inc
fdivrl
add
cltd
xchg
call
lock
les
jp
imul
xor
mov
dec
outsl
out
push
push
cmp
lret
or
xchg
pop
sub
dec
mov
lods
lds
int3
dec
jno
push
sub
pop
cmp
xchg
jmp
pop
movl
pop
or
hlt
push
pusha
ds
imull
push
lods
pushf
pop
xor
mov
adc
mov
jecxz
jmp
loopne
stc
jg
fwait
cmp
sbb
or
pop
dec
jnp
pop
mov
aaa
pop
cmp
scas
jl
mov
or
inc
add
cmp
mov
aad
insl
sarl
sahf
xor
jg
or
jle
mov
cltd
cmp
sahf
inc
ds
lock
jbe
negb
jns
and
imul
push
insl
aaa
jle
sbb
cld
fucomip
fisubl
mov
mov
pushf
test
stos
aas
dec
or
sti
call
fst
xor
mov
addr16
sahf
mov
mov
ss
lahf
jp
rcrb
movsl
loop
in
adc
lods
test
jp
inc
les
clc
xchg
pop
les
jecxz
stos
adc
fcmovbe
or
insb
mov
adc
cwtl
xor
fisttpl
adc
pusha
repnz
sbb
jmp
movsb
js
cmc
push
and
enter
pop
mov
dec
mov
cmp
adc
xchg
inc
mov
xorl
stos
cmpsb
push
mov
loop
add
outsb
and
adc
fwait
xchg
aad
or
je
inc
xchg
fsubl
daa
xchg
pop
notl
gs
scas
sbb
stos
popa
fsubrs
mov
mov
aas
xchg
repnz
mov
pushf
repz
xchg
outsb
pop
fiaddl
mov
or
fadds
lea
cmp
aas
movsb
pop
mov
or
add
mov
xchg
out
in
push
scas
ret
mov
adc
nop
add
or
sahf
imull
imul
jnp
arpl
pop
test
mov
jne
push
cmp
jae
bound
movsb
cmpsl
pop
xchg
nop
out
mov
movsl
cmpsl
jb
repz
cmp
xor
inc
testb
or
jmp
sahf
insl
add
cs
xor
hlt
pop
jbe
add
testb
sti
nop
add
sahf
insl
sbb
push
mov
shlb
imul
ret
loopne
ret
imul
popf
dec
add
std
loop
push
iret
push
divl
jno
scas
or
loop
jg
bound
add
pop
ret
int3
ret
out
add
xchg
fwait
das
and
pop
sbb
inc
mov
mov
lock
lods
test
sahf
mov
outsb
test
pop
jmp
or
sub
clc
add
rolb
pop
in
jge
subl
pop
in
mov
sahf
ficompl
xlat
mov
adc
push
mov
jne
push
dec
in
fimull
out
add
jb
push
in
xchg
test
imul
push
dec
pusha
mov
sbb
popf
add
push
add
push
scas
mov
cs
js
pop
repnz
sbb
xor
sbb
lcall
jecxz
adc
loope
xorl
nop
dec
iret
shll
test
lock
inc
pop
inc
repz
sbb
in
movsb
ret
dec
xor
mov
pop
and
dec
mov
das
or
and
xchg
aam
out
or
stos
leave
cmc
lcall
jg
add
int3
mov
mov
aas
fwait
outsb
fs
repz
rcr
and
pop
icebp
mov
xlat
shrl
mov
imul
jp
out
mov
mov
sbb
sub
adc
sbb
mov
divl
stos
mov
dec
mov
scas
and
mov
jbe
cmp
or
cmpsb
lea
mov
scas
mov
jmp
jle
nop
jmp
mov
xlat
pop
push
sbb
sub
sub
sbb
push
mov
mov
mov
mov
pushf
into
stc
jb
push
out
pop
clc
sbb
lods
pop
add
jg
lret
xor
lock
sub
sub
fwait
xlat
push
dec
out
int3
sahf
mov
xchg
pop
push
cmp
adc
adc
xchg
push
movsb
xorb
jne
in
mov
xor
sbb
fistps
flds
in
push
jge
xor
daa
push
xor
insb
pop
imul
push
cmp
push
cmp
imulb
cmpsl
je
in
add
mov
adc
sbb
adc
call
sub
filds
mov
out
add
xchg
loop
jns
scas
xlat
lret
insb
data16
mov
push
inc
jle
fcom
divl
mov
push
cltd
roll
and
std
add
test
add
mov
lods
aaa
decb
sbb
push
or
jle
and
stos
cmp
cmpsl
push
push
push
xchg
fisubs
inc
mov
and
xor
stos
fisubrl
test
adc
pop
xchg
insb
cmpsb
mov
push
ret
xor
mov
mov
imul
test
lea
push
lds
in
fadd
mov
lcall
ja
push
repz
fistpl
int3
xchg
add
and
test
adcl
addr16
or
repz
dec
jge
and
mov
in
pop
mov
and
cmp
mov
pop
rolb
dec
cwtl
lds
xor
dec
lods
mov
xor
push
lret
push
insb
ret
popa
jno
push
sub
popa
mov
cmc
sarb
mov
xchg
addr16
stos
adc
jg
adc
xchg
pushf
cmpsb
xor
cmp
cmp
mov
dec
sbb
add
ljmp
cmpsb
and
xchg
sub
movsl
and
pop
xor
xchg
cmp
jb
inc
pop
adc
ret
add
dec
or
xor
pushf
jle
mov
arpl
movsb
bound
rclb
lds
mov
and
cs
xorb
orl
cmpsl
jge
xorb
gs
jns
nopl
push
or
mov
out
push
dec
vpsubsw
icebp
jbe
in
shl
fsubrl
out
aas
dec
ss
adcb
add
mov
sahf
test
jg
das
adc
jb
leave
lods
int
mov
pop
sub
je
or
movl
jbe
fcmovnu
sti
dec
push
ficoml
inc
aad
out
sub
aad
iret
out
repnz
sub
cli
iret
test
repz
inc
mov
arpl
dec
insb
mov
xchg
push
add
in
jbe
xchg
xor
dec
push
sub
or
push
hlt
mov
lahf
lods
scas
xchg
in
mov
lds
cmc
sub
mov
rsqrtps
xor
fcmovnu
mov
or
push
cmc
fldenv
adc
xchg
das
jle,pn
fistpll
mov
mov
xchg
mov
xor
pop
sti
or
inc
xchg
dec
mov
xchg
lods
jne
sub
pop
push
add
mov
outsl
int3
out
add
dec
out
leave
sbb
prefetch
ret
dec
xor
and
fiaddl
in
int3
xchg
sub
ret
pop
adc
das
and
stos
sbb
out
idivl
xor
dec
cwtl
xor
scas
lret
ret
ds
jmp
sub
std
dec
shlb
cwtl
mov
aaa
cmp
ret
stos
mov
sub
mov
or
jns
push
xchg
idiv
lret
inc
ret
xor
and
mov
mov
and
fdivrl
cmc
stos
adc
cmp
pop
cmpsb
sub
add
sahf
test
jecxz
inc
es
mov
mov
mov
into
inc
jle
xor
rcll
and
inc
dec
push
adc
pusha
nop
pop
imul
scas
loop
pop
sti
addr16
or
roll
iret
aam
sti
or
ds
push
shll
scas
in
xorb
push
out
or
push
push
not
or
add
hlt
sbb
or
jnp
inc
dec
add
das
aad
mov
mov
or
dec
pop
sub
sub
mov
adc
loopne
adc
jmp
push
and
arpl
xlat
push
or
pusha
dec
aad
test
ds
fwait
adc
cmc
jb
jnp
in
xchg
das
push
std
jmp
pop
vpsubb
xor
xlat
out
insb
pop
nop
cmovl
in
push
sbb
lcall
lahf
daa
sbb
ss
mov
int
lret
jg
negl
vhsubpd
sub
dec
stc
sbb
jg
xlat
shll
push
cmp
inc
pop
or
fs
mov
mov
mov
or
lock
inc
sub
in
sti
ret
adc
xor
jb
mov
out
fbld
insl
popf
jg
xchg
repnz
repz
jo
push
ret
sub
lock
stc
imul
sub
jo
aas
test
es
lcall
sti
nop
loopne
cmpsl
cmp
and
es
sar
loop
jp
fs
sub
inc
push
xor
into
clc
int3
adc
fidivs
mov
xorl
xchg
mov
mov
jge
pop
call
aaa
pop
mov
call
jmp
popa
sbb
insb
fisubrl
jl
xchg
fisttpll
add
bound
inc
push
in
sbb
test
sarb
or
mov
mov
inc
sti
imul
jb
stc
adc
scas
pop
xor
or
stos
pop
or
jle
orl
dec
pop
adc
ds
jbe
adc
mov
xchg
or
jle
adc
and
inc
stos
ss
xchg
inc
int3
cvtpi2ps
xchg
mov
jo
xchg
dec
push
xchg
test
cmp
xor
idivl
daa
inc
mov
sahf
in
or
inc
stc
out
xchg
test
daa
imul
pop
arpl
pop
inc
sbb
xchg
mov
pop
cli
enter
jbe
push
push
aam
ret
loop
mov
inc
and
cmp
xor
adc
mov
pop
mov
push
adc
addr16
lret
inc
clc
lcall
cmp
push
sub
push
mov
push
push
lahf
cmc
mov
sarl
adc
aas
in
jne
inc
xor
pop
mov
jns
lcall
andb
or
in
dec
xchg
push
mov
ror
adc
or
imul
addr16
arpl
lret
fstpl
orb
add
push
or
mov
push
lds
loope
test
test
and
jne
push
das
ja
sbb
cmc
add
hlt
out
sub
mov
push
sub
sub
in
imul
xor
in
clc
rcl
pop
rol
pop
mov
pusha
mov
lock
cmp
jp
mov
push
gs
push
push
je
mov
jmp
movsl
call
pop
jl
mov
shrb
xorl
sub
aas
mov
gs
cmp
sub
shr
mov
mov
push
in
lret
pop
aad
icebp
adc
sbb
sbbl
cmp
and
add
in
dec
xchg
push
mov
in
fidivs
sarb
push
push
xor
mov
sahf
hlt
cmpsb
push
pop
aam
fisttps
mov
cmp
pop
sub
mov
mov
into
cltd
into
lcall
push
jne
sub
cmp
scas
pop
pushf
mov
mov
daa
inc
fs
or
frstor
add
lahf
orl
das
inc
repnz
inc
xor
mov
push
xor
mov
push
sbb
mov
int3
cmc
dec
outsb
xor
mov
pop
mov
cmp
neg
in
decb
addr16
sbb
test
mov
hlt
popa
adc
repz
pop
jp
cmpsl
mov
mov
xchg
imul
lret
mov
xchg
cmp
xor
add
cmc
enter
pop
fsubrl
out
xchg
roll
jge
mov
out
sbb
push
loop
mov
cmpb
push
cmp
sbb
add
pop
xchg
clc
rcll
lret
lds
fs
adc
jns
sahf
cmp
scas
insl
iret
adc
push
inc
and
fnsave
lret
mov
mov
pop
data16
fldt
inc
or
xchg
jecxz
jae
andl
sub
sbb
mov
notl
pop
adc
loop
inc
in
sarl
cs
pusha
pop
cmpsb
xor
loop
add
adc
pop
xchg
jecxz
xor
sbb
ss
gs
jns
sub
into
push
xlat
xchg
inc
jb
pushf
mov
addr16
aam
pop
loop
jbe
dec
int
cmp
mov
xor
adc
inc
inc
js
addl
int
shlb
xor
cmp
loope
add
paddusw
mov
fildl
inc
lret
dec
mov
mov
out
repnz
mov
jne
push
cli
and
mov
xchg
nop
scas
adc
gs
dec
movsb
cs
rcrl
shll
dec
inc
xor
ret
push
test
aam
test
inc
imul
and
outsl
lea
aad
imul
fiadds
pop
in
mov
adc
shlb
bound
sub
sbb
insl
fdivl
mul
imul
xchg
xor
jnp
lcall
cmp
cmpsl
xor
xor
in
sbb
cmpsl
mov
ds
pop
loop
fidivrl
pop
ret
shll
je
lahf
push
out
insb
pop
mov
jmp
idiv
and
xor
sub
fists
xchg
sbb
sbb
out
test
or
enter
outsb
pop
jbe
xchg
pop
mov
inc
pushf
int3
xchg
push
mov
cmp
pop
cmp
mov
xchg
aas
push
out
pop
xchg
loope
cltd
sbb
sub
lret
or
mov
std
jbe
sti
mov
pop
jmp
pop
lods
pop
sub
lds
jns
and
xor
repz
mov
icebp
mov
subl
sub
mov
jns
add
lahf
push
inc
jne
xor
lcall
lret
ret
notl
push
orb
mov
jle
xchg
pop
mov
adc
fidivl
or
je
mov
hlt
loopne
scas
clc
lock
lock
xchg
lcall
mov
out
mov
jg
xlat
lods
adc
adc
jbe
test
cmp
push
mov
or
add
iret
mov
pop
sub
scas
push
jo
inc
loope
loopne
lods
or
fwait
push
and
ror
inc
test
jno
push
loope
loope
xchg
cmc
mov
push
pop
push
add
add
xor
and
lret
test
push
sbb
daa
stos
insl
int3
jb
push
xchg
std
jl
mov
push
adc
cmpsb
sahf
repz
lds
hlt
jnp
dec
xchg
ja
pop
mov
cmpsl
push
in
fisubrs
mov
lods
add
cmp
shlb
ja
icebp
jl
fcomps
repnz
in
outsb
inc
pop
ljmp
pop
test
xor
outsb
out
or
jo
jo
add
outsb
in
sbb
mov
push
xchg
dec
test
loop
ret
cmp
int3
es
jns
cltd
push
cs
cmp
enter
adc
repz
out
movsl
dec
out
test
sti
fdivrl
jecxz
mov
push
stos
add
xchg
mov
xchg
pop
ficompl
add
nop
or
outsl
push
rcll
lds
or
icebp
lcall
push
jns
xlat
sub
xchg
ret
out
aaa
jl
pop
dec
shlb
xor
sbb
jg
sub
fstl
mov
faddl
add
sbb
repz
dec
popf
add
mov
cmp
roll
enter
stos
subl
scas
sbbb
sub
hlt
dec
nop
sbb
jp
xchg
lea
pop
mov
cmp
outsl
xor
les
xor
mov
jno
movsl
jmp
outsb
sahf
out
test
aas
sbb
test
cmp
or
pop
fsubs
pop
jle
inc
mov
xchg
aam
int
mov
frstor
ret
mov
in
mov
add
sbb
adc
cld
loopne
pop
dec
or
cmp
sbb
jne
push
adc
mov
fildll
loope
cmp
or
pop
adc
jg
mov
cwtl
aaa
dec
lcall
xchg
dec
clc
mov
cld
and
push
dec
adc
fnsave
stos
sbb
jle
cli
dec
jle
xchg
dec
and
cltd
cmp
adc
test
das
push
call
fisubrl
xchg
jl
addr16
popa
mov
fnstsw
lcall
lcall
jmp
aam
aas
xor
test
pusha
sub
adc
mov
in
add
or
push
dec
iret
push
punpcklwd
mov
fucomip
je
add
jl
xchg
or
test
dec
mov
add
xor
fmul
cmpsb
dec
mov
sbb
cmp
call
sbbb
scas
and
sbb
mov
pop
cmc
or
out
scas
hlt
out
cmpsb
and
loopne
cwtl
orb
in
fxch
cltd
inc
dec
push
in
push
mov
pop
sbb
fdivrl
and
test
xchg
js
push
mov
xchg
cld
shrl
and
pop
sub
out
mov
cld
aam
call
mov
cltd
fcoml
adc
inc
xchg
sbb
adc
lcall
xor
pop
or
aaa
stos
cmpsb
insb
pop
jmp
stos
shr
es
pushf
xchg
js
jge
dec
aaa
dec
add
jl
or
pop
daa
inc
dec
into
test
sub
std
sbb
iret
adc
stc
clc
mov
bound
aaa
ljmp
mov
pop
sub
sub
mov
jno
jo
popa
int
push
ss
icebp
or
jge
mov
cmpsb
cwtl
cmc
adc
mov
mov
and
cmp
test
fimuls
aaa
add
rcrb
popa
cmp
das
sti
push
imul
jl
je
repz
repnz
xchg
rcr
xor
add
lret
mov
xchg
push
orl
insb
gs
clc
orb
xchg
push
inc
xchg
jle
iret
fadds
inc
mov
and
lcall
jmp
das
pop
jnp
insl
add
test
mov
lret
jg
lahf
pushl
bound
jle
cld
ja
push
fcmovnb
add
pop
iret
dec
jae
fildll
out
bound
pop
sbb
outsb
out
cmp
pop
in
mov
dec
sbb
call
test
data16
std
mov
mov
sbb
pop
cwtl
cwtl
and
dec
mov
loopne
adc
inc
jecxz
mov
cmpsl
test
jle
repnz
dec
fiaddl
pop
mov
ret
repz
xchg
and
movsl
lret
in
fldt
jno
dec
cmpsl
pusha
adc
es
xor
xlat
inc
dec
repz
std
and
shrl
fldcw
into
cmp
push
pop
loopne
jnp
std
push
mov
pop
adc
es
xchg
cmp
cmp
rcll
pop
push
jbe
cmp
loop
in
int
mov
sbb
inc
imul
jge
push
cmp
ljmp
mov
addr16
adc
fs
jnp
les
lock
lock
push
std
mov
pop
xchg
iret
out
add
push
int3
cltd
jmp
push
mov
shl
int3
mov
jb
ljmp
inc
push
out
nop
xchg
movsb
mov
or
nop
xchg
cmpsl
dec
xchg
aam
pop
mov
inc
jnp
hlt
sub
sbb
cld
movsb
mov
jb
fistps
push
les
jo
fisubl
mov
inc
lock
cwtl
bound
pop
lock
out
ja
orb
je
inc
push
jns
mov
cwtl
cmp
rorl
test
cld
and
nop
mov
repnz
mov
cli
inc
push
stos
ljmp
loope
fldt
inc
push
fidivl
sbb
test
scas
pop
jge
mov
inc
ljmp
mov
cmp
es
daa
pop
cmpsb
and
add
xchg
mov
and
aas
pusha
lock
pop
sti
pop
xchg
lods
pop
xor
push
rclb
xor
sub
out
test
and
fwait
leave
popa
or
jp
jo
xlat
pop
stos
push
jp
dec
mov
lcall
lea
sbb
fmul
xchg
push
jp
or
sub
lock
fs
in
pop
push
inc
or
sub
pushl
xor
jbe
gs
mov
out
add
mov
imul
roll
cmp
pop
inc
inc
sbb
mov
clc
mov
mov
cmp
in
popf
gs
cmp
jle
mov
push
aas
movsb
adc
orb
mov
push
xchg
or
xchg
cwtl
ror
ret
int3
enter
fimuls
mov
ret
fs
sub
in
cmp
sbb
adc
out
loopne
movsb
fimuls
inc
jo
inc
add
sbb
dec
mov
and
sahf
cmp
push
cmp
nop
jge
push
xchg
mov
xorb
inc
cmp
lock
mov
iret
lods
jne
popa
push
inc
popf
xor
mov
push
mov
push
cmp
cmp
rcl
jae
and
mov
pushf
xor
test
test
aad
sub
je
rolb
in
cmp
mov
xchg
sub
sub
call
cli
rcrl
adc
pop
or
popa
inc
adc
outsl
xchg
aas
or
dec
sbb
jl
pop
cmpsl
repnz
pop
mov
sbb
ss
inc
dec
dec
addr16
stos
pop
mov
lea
ljmp
out
mov
mov
pop
lods
repnz
stos
movsb
cltd
outsb
pop
repnz
shrl
push
add
or
mov
xchg
ret
xor
lahf
or
dec
fs
clc
insb
out
or
and
xlat
dec
cmp
lock
sarl
or
or
repz
neg
pop
push
adc
sbb
xchg
clc
loope
out
push
stos
dec
aad
fistl
cwtl
rcll
ror
sbb
jbe
shll
mov
mov
and
xor
jns
icebp
divb
xchg
mov
lcall
fcompl
enter
sub
hlt
lds
stc
bound
push
aad
push
push
lcall
clc
sbb
ret
push
popf
cmc
insb
nop
jo
clc
jno
lcall
push
inc
and
or
sbb
xchg
cs
xchg
insl
xchg
lods
push
pop
push
dec
nop
popa
jno
mov
decl
mov
dec
out
ss
mov
in
test
mov
push
add
insb
out
sbb
cmpsb
sub
sbb
stc
cmp
out
xchg
lahf
mov
push
mov
das
aam
ror
xchg
loop
arpl
jmp
mov
jl
clc
fwait
cld
and
jmp
or
jns
or
insl
icebp
inc
dec
les
push
mov
rcrb
hlt
loopne
push
repz
pop
ret
xchg
scas
fmull
movsb
pop
mov
adc
dec
inc
xlat
ret
jl
adc
dec
or
loopne
add
data16
xchg
negl
mov
sbb
xchg
adc
xchg
pop
daa
mov
inc
iret
sub
xorl
rclb
adc
jno
add
ljmp
cmp
sarl
clc
cmovle
lds
inc
cli
and
xor
lods
ljmp
or
adc
push
mov
xor
adc
mov
xchg
shrb
popw
ret
inc
push
cmp
pop
jae
push
sahf
jmp
fsubp
xchg
xchg
inc
test
js
xlat
xchg
cmp
in
imul
sbb
jp
call
stos
cltd
in
mov
or
cmp
cmc
mov
out
lock
fisubrl
mov
xchg
pop
insb
sbb
sbb
pushf
loop
and
js
add
lret
and
xchg
mov
in
outsb
pop
and
stos
push
fdivs
push
push
ret
sub
cld
ss
cmp
fidivrl
pop
cmc
fisubrs
push
rorl
mov
mov
xor
jb
and
mov
cwtl
dec
scas
stos
adc
sti
dec
inc
pop
hlt
pause
xchg
sbb
clc
mov
pop
ja
sbb
sti
or
push
sub
out
mov
ja
ficoml
or
incb
jne
push
fsubrl
jmp
or
dec
inc
push
mov
decl
pop
in
imul
inc
push
push
jl
iret
mulb
cli
sti
mov
jnp
inc
jne
mov
or
mov
push
out
jmp
testl
out
cmp
inc
jge
fsubr
rcll
test
jae
push
inc
inc
das
cmp
mov
bound
xor
push
lods
shl
xor
jmp
adc
mov
add
insb
push
and
movsl
jo
dec
cmp
jmp
dec
fadd
adc
jmp
push
jge
aaa
add
das
inc
and
enter
fnstcw
mov
sub
pop
mov
test
cmpsb
jmp
test
icebp
jae
jo
mov
movsb
jmp
and
add
sahf
mov
jno
divb
pop
sub
sub
mov
ss
test
into
int3
inc
repnz
mov
cli
js
inc
push
mov
mov
outsb
inc
xor
in
out
les
cmpsb
push
insl
lea
xlat
and
dec
cmp
xor
cltd
in
xchg
outsl
arpl
out
aad
sub
cmp
fcompl
xor
dec
xor
add
mov
mov
icebp
sub
shl
fldl
stos
add
sbb
and
jge
cmp
in
sbb
mov
mov
push
jae
add
add
icebp
inc
jne
cmp
adc
aad
pop
cmp
shll
cmc
dec
flds
fucom
mov
sbb
cmp
add
hlt
cmpsl
mov
add
sbb
xchg
bound
xchg
push
jnp
or
xchg
pop
xchg
push
cmpsb
mov
lds
inc
mov
enter
imull
pop
and
ss
inc
inc
bswap
rcrb
cli
test
inc
push
ret
out
sub
add
in
ret
sub
inc
or
mov
or
mov
add
or
stos
test
in
jecxz
jge
dec
sti
imul
lahf
mov
sub
cmpsb
bswap
add
pop
mov
in
je
and
adc
scas
mov
sub
negl
dec
int3
push
xor
test
scas
std
mov
fiadds
aaa
loop
mov
rorl
popf
xchg
out
mov
mov
adc
std
out
dec
repz
js
lahf
negl
daa
pusha
push
push
repz
xor
out
std
push
out
jae
xor
addr16
sbbb
mov
ret
stos
ds
xchg
xor
cld
in
xchg
shlb
jnp
jo
sbb
iret
jns
cmc
imul
pop
dec
pop
inc
iret
mov
je
bound
xor
jecxz
pushf
jl
jecxz
shlb
jnp
iret
jg
rorb
jge
add
mov
ror
xor
repz
xchg
jp
xchg
pop
mov
dec
sbb
or
sub
or
cmp
mov
in
into
sbb
ffreep
pop
jl
shlb
pop
sbb
adc
sub
and
cmpl
out
test
aas
jne
and
imul
test
scas
jmp
stos
cld
loop
repz
arpl
push
iret
cltd
dec
pop
xchg
xlat
mov
xchg
and
mov
pop
sub
cmp
das
cmpsb
shl
jo
mov
mov
push
imul
xchg
jle
inc
popa
aam
cmc
lea
adc
lock
xor
lea
imul
add
dec
scas
test
shrl
sbb
ds
jno
push
fcomip
mov
push
mov
scas
lret
cmpsb
aas
sbb
inc
xor
mov
push
clc
movsl
adc
inc
fstps
fisubs
xchg
or
cmpsl
inc
cmpsl
fdivrp
sbb
arpl
cs
mov
adcb
jae
cmp
add
out
pop
jae
push
inc
pop
test
mov
sahf
outsb
lret
idiv
fs
das
testb
ret
icebp
inc
mov
frstor
ja
in
jo
stos
adc
lcall
xor
ljmp
mov
inc
mov
dec
popf
loop
test
fs
mov
mov
jb
imul
test
and
mov
es
jns
gs
out
das
out
outsl
mov
movsb
leave
xchg
xorl
mov
fstpt
outsb
jmp
push
test
mov
xchg
int3
loopne
xor
test
jb
pushf
push
mov
push
inc
lods
cltd
sarl
ja
lret
icebp
fistpl
jge
das
test
popa
orl
jle
nop
dec
or
or
add
cli
aam
test
cmp
fwait
jo
or
js
adc
jmp
pop
daa
aas
bound
dec
jmp
xchg
cmp
outsl
arpl
adc
cmpsl
pop
pop
adc
push
add
push
pop
and
mov
mov
out
mov
or
jecxz
jle
jne
sbb
adcb
jp
push
popf
cmpsb
mov
fldcw
mov
lahf
imul
pop
movsl
nop
xchg
test
out
pop
pop
sub
cmpsl
cli
mov
stos
ret
loop
outsl
stc
or
add
fld
inc
push
mov
dec
cmp
sub
adc
adc
stc
sub
daa
sarl
sahf
popl
lds
cmp
icebp
outsb
add
out
sbb
mov
fimull
and
out
out
lods
js
aad
add
adc
jg
inc
add
pop
mov
inc
xchg
mov
add
pop
fstpt
aaa
aam
lcall
mov
cmp
out
rolb
repz
outsl
jp
fbstp
and
mov
push
fld
in
push
cwtl
add
or
repz
test
mov
fdivrl
inc
je
mov
add
bound
push
fstpl
sahf
gs
movsl
push
call
jge
shrb
mov
aam
add
into
repz
sbbl
clc
sbb
push
ss
ror
ret
cwtl
mov
out
les
scas
or
push
fiaddl
fldcw
addl
mov
dec
stos
jae
mov
or
mov
and
lret
fidivs
push
popa
aam
movsl
and
leave
or
mov
shl
punpckldq
sub
add
loopne
or
bound
andb
add
pop
std
sub
pop
or
mov
std
push
xchg
sub
pop
mov
add
xchg
imul
addr16
jle
mov
rcl
bound
mov
fistpl
mov
jle
sub
add
fstps
repnz
adc
mov
cmp
pop
lret
in
dec
nop
ljmp
add
movsl
mov
inc
adc
mov
xchg
cmp
jle
das
and
rcl
sub
scas
bound
test
and
scas
jne
sub
fildll
int3
scas
dec
lds
xor
and
dec
sub
add
js
mov
cmp
movsl
daa
sub
repz
lock
sub
ja
in
mov
mov
repnz
push
jbe
daa
sbb
pop
lcall
push
mov
lock
pusha
dec
lods
cmp
das
data16
jmp
cltd
in
xchg
jbe
pop
ret
inc
mov
pop
xor
pusha
jl
xchg
add
jmp
mov
sbb
or
push
push
mov
mov
in
mov
sbb
mov
mov
aad
and
bound
addr16
ret
jecxz
push
pusha
test
add
jae
jbe
jmp
push
aaa
inc
lea
mov
mull
rorl
sbb
icebp
es
sub
sbb
shl
pop
pop
jmp
lret
cmc
push
jbe
or
ss
cltd
test
mov
in
lret
in
jmp
xchg
mov
mov
adc
or
cli
fwait
cmp
out
in
xor
out
mov
in
pop
lret
or
jmp
outsb
mov
push
dec
ret
and
in
dec
cmp
cmp
jnp
loope
outsl
dec
mov
pop
lds
mov
cmc
test
xlat
fdivl
cmp
and
mov
out
pop
or
jecxz
inc
aam
pop
popf
in
fs
xchg
cmp
push
push
pushf
sarb
ljmp
and
pop
jl
cli
imul
in
push
out
pusha
add
pop
lahf
jne
pop
outsb
dec
decl
lock
les
std
jae
shrb
adc
inc
icebp
cmp
test
outsl
or
and
lret
nop
imul
adc
push
daa
es
cs
icebp
ret
mov
shrl
push
adc
add
xchg
clc
dec
jmp
pop
mov
aam
inc
mov
fwait
or
and
cmpsb
pop
imul
inc
dec
in
fdiv
lahf
loope
es
add
cs
mov
dec
sbb
jmp
xchg
xchg
inc
dec
cltd
fildll
ret
std
mov
in
fidivs
mov
int
add
pop
rcr
xor
cmpsl
ror
lahf
out
fildll
sarb
repz
jp
inc
adc
sub
les
sarl
fwait
xchg
fs
jnp
imull
iret
push
push
repz
xor
adc
sbb
fwait
mov
sub
cmp
jle
cwtl
push
data16
scas
mov
xor
cmp
pop
and
sub
das
xchg
bound
add
sub
mov
jnp
pop
lods
jmp
sbb
mov
xchg
in
jb
scas
ret
add
xchg
xor
vshufps
xlat
push
xchg
cs
rolb
push
mov
cld
and
loope
mov
adc
xchg
in
inc
xor
sbb
push
ljmp
jno
mov
out
or
lret
and
cmpsl
je
push
jle
gs
loop
pop
lret
sbb
dec
pop
vpminub
or
mov
imul
test
or
dec
xchg
push
adc
and
aas
mov
in
popa
out
lahf
stos
imul
adc
out
mov
jg
mov
lods
pop
inc
cmp
jne
push
cltd
jae
xchg
cmpsb
inc
sbbl
push
dec
or
fsubp
adc
ja
dec
or
aas
push
jae
leave
or
sbbl
int3
out
imul
dec
mov
ss
push
stc
xchg
or
mov
xchg
repnz
dec
leave
mov
xor
inc
idivb
call
inc
test
lods
mov
adc
pop
in
xor
lret
loop
push
out
jne
mov
add
pop
icebp
mov
cmc
pop
xchg
cmp
shll
and
fcomp
push
ret
leave
mov
xchg
popa
dec
or
and
mov
sbb
rolb
mov
cmp
add
dec
add
lock
das
fsubr
adc
popl
push
or
sub
outsb
push
add
and
inc
jns
mov
insl
flds
cmp
inc
std
ret
xor
push
mov
sbbl
jecxz
jmp
aad
inc
mov
das
xchg
jge
sarl
je
test
sub
test
das
test
loopne
fwait
xchg
int
rcrb
push
ds
adc
xchg
out
sbb
mov
pop
mov
dec
ja
xchg
pop
fimuls
sbb
sbb
iret
dec
ret
cmp
jns
xchg
mov
adc
jecxz
cmp
adc
bound
or
and
pop
sbbb
xor
in
in
xor
loop
sti
add
push
shrb
xchg
add
xor
shl
aam
mov
jbe
lea
lret
rcr
js
sahf
leave
push
mov
mov
outsl
adc
mov
sub
xlat
lcall
aas
adc
jae
cmp
lcall
push
mov
pop
push
add
les
jmp
push
adc
adc
repz
scas
loope
int3
jl
sub
iret
mov
dec
sbb
xchg
js
into
add
or
mov
leave
inc
js
stc
push
xchg
data16
or
call
mov
sbb
mov
jp
nop
das
sub
mov
leave
stos
imul
lea
lahf
sub
repz
addb
sbb
mov
cmp
xor
push
xchg
cld
mov
aad
dec
scas
adc
sbb
lock
rcll
xor
cmp
or
icebp
pushf
imulb
inc
inc
mov
lock
sbb
jg
jnp
adc
jae
xchg
ficompl
jl
or
lods
inc
xchg
xchg
mov
popf
roll
mull
imulb
outsb
pop
inc
enter
mov
fcmovb
sbb
mov
sbb
ret
aam
orl
lea
das
sbb
mov
leave
sub
inc
xchg
add
xchg
enter
xor
popa
and
out
dec
push
aad
int
add
movsb
push
add
rcr
mov
clc
in
mov
jnp
mov
stos
ss
lock
fdivl
cld
pop
cmp
sti
in
jnp
push
arpl
xchg
xchg
fsubrl
cli
or
sarl
imulb
popf
xchg
notb
pop
ljmp
inc
fbld
fldcw
push
mov
sbb
test
and
push
ds
out
push
jnp
fisttpl
cmp
lea
push
jbe
cmp
lahf
fcom
inc
xchg
pop
add
cmpsb
xchg
ss
pop
pop
mov
aad
loop
cmp
mov
fldz
add
das
adc
in
leave
lea
fwait
mov
mov
mov
aad
sbb
xor
and
jecxz
cmp
push
or
or
jns
ljmp
test
mov
sbb
insb
insb
shll
sub
test
mov
jne
ret
xchg
ds
add
mov
or
mov
sbb
sbb
lret
dec
pop
insb
mov
lds
jl
mov
jnp
push
dec
dec
and
mov
lock
rcl
add
out
rol
cmpsb
push
xchg
cmp
stos
cli
push
shr
jge
and
cmp
adc
adc
sub
lret
sahf
adc
cmpsl
movsb
in
cmpb
cwtl
mov
mov
cmp
mov
and
bound
inc
cwtl
out
mov
push
dec
sub
inc
lock
push
les
mov
and
xchg
ret
insb
movsb
add
xor
inc
adc
cmp
sbb
lea
out
in
int
mov
pop
and
cmp
stc
jecxz
adc
pusha
fnstsw
pop
fmul
xchg
inc
push
sub
pop
mov
subl
orb
fldcw
aaa
fcoms
cli
push
loop
mov
cld
cmp
push
add
mov
jecxz
push
repnz
mov
gs
or
cmp
popf
add
pop
jnp
in
fcomps
shll
pop
mov
push
xchg
fidivrl
dec
sub
in
icebp
mov
cmp
dec
sbb
push
pop
push
add
xor
loopne
popa
adcb
gs
call
sub
adc
mov
cmp
pop
jns
add
les
jns
cwtl
data16
xchg
inc
pop
or
addr16
mov
push
mov
sarl
fisubl
cwtl
mov
dec
push
mov
lock
and
or
aam
fnstsw
dec
and
sub
adc
pop
ficoml
and
dec
sub
sub
xchg
xchg
sbb
mov
out
out
icebp
clc
cmp
mov
sbb
jle
movsb
jo
adc
pushf
imul
xchg
int
repnz
pop
imul
lods
xchg
mov
insl
xlat
mov
repz
lea
xor
lahf
iret
inc
rcll
adc
filds
xor
hlt
cmpsb
gs
filds
xchg
arpl
out
add
push
fcompl
xor
mov
adc
jmp
push
daa
imul
in
out
adc
inc
mov
imul
inc
fimuls
inc
test
sahf
or
mov
cmp
mull
mov
shr
inc
cmpb
pop
subb
xor
daa
out
int3
xchg
inc
pop
cwtl
mov
jecxz
data16
outsb
shl
lcall
xchg
out
imul
hlt
into
or
or
aad
nop
jnp
adc
std
fidivl
pop
or
mov
mov
jecxz
pushf
das
pop
sbb
cmpsb
out
cmc
xchg
in
test
cmp
and
inc
xor
jmp
iret
stos
mov
inc
frstor
cltd
lea
mov
mov
movsb
es
add
les
cwtl
sub
sbb
sub
shrl
fcmovnb
sbb
cmpb
and
mov
imul
cld
add
mov
pop
outsl
or
es
inc
xchg
xchg
push
inc
cmp
and
xchg
push
mov
mov
mov
shrb
inc
or
sub
test
das
push
inc
insb
adc
mov
inc
pop
xchg
mov
cmpsl
cmp
repz
ja
insl
xchg
jo
add
jmp
inc
mov
fs
dec
iret
cld
mov
inc
movhps
xchg
hlt
xor
push
xor
cmc
mov
pop
adc
pop
fwait
push
lahf
clc
shll
mov
sbb
out
pop
pop
mov
inc
aam
fimuls
cmpsb
cmpsb
rorb
cmpsb
jge
pop
daa
xor
xor
scas
jne
loope
cmp
inc
adc
enter
mov
loope
movsb
lods
insb
lds
mov
sbb
jb
push
insl
rorb
xor
testb
jmp
scas
aam
cld
mov
test
inc
push
lret
mov
inc
dec
or
aam
mov
jp
and
loope
ljmp
loop
inc
pop
fdivrs
dec
dec
mov
fwait
push
xorl
call
dec
jae
push
les
and
push
sbb
mov
xor
dec
dec
dec
rorb
sbb
je
jp
loop
insl
xchg
sahf
sub
sub
pushf
adc
xabort
jnp
fisttps
das
popa
cmpsl
dec
daa
jp
cwtl
push
adc
cli
cmp
xchg
arpl
add
test
push
mov
xchg
jge
dec
push
insb
in
movsl
sub
add
js
jg
fucom
lahf
adc
add
mov
pop
push
push
stos
dec
ja
lret
or
jbe
inc
push
adc
movsb
sub
inc
mov
in
jp
mov
loope
dec
cltd
pop
mov
fucomip
push
add
cmp
cs
adc
jecxz
adcl
and
pop
cmp
mov
mov
ds
dec
mov
push
pushf
xor
ds
fnstenv
jge
sbb
out
add
xor
or
cmp
scas
stos
lods
inc
clc
jno
dec
lea
ja
je
es
cmpsb
cmp
fisttps
and
fldcw
inc
imul
lea
pop
int
sysexit
cmp
cmp
mov
in
push
xchg
icebp
imul
imull
in
incl
in
sbb
rclb
add
mov
jg
cld
ret
ss
dec
xorb
imul
sbb
shlb
pop
pop
xchg
test
xchg
sbb
jno
repz
pop
ss
and
loope
jg
jns
mov
inc
loope
jo
pop
mov
mov
mull
push
cli
mov
fidivl
flds
cmpsl
lea
cmpsb
ror
inc
or
aaa
ja
fwait
inc
push
or
inc
sahf
add
xchg
or
or
out
inc
inc
cmpsl
jge
add
pop
add
stos
push
adc
in
rorb
dec
aam
xor
and
ljmp
push
cltd
scas
mov
lock
dec
inc
xchg
sahf
popa
adc
xchg
fnstenv
pop
jmp
stc
mov
pusha
mov
addw
movsl
add
xor
dec
xor
sbb
add
jmp
dec
mov
sahf
test
lret
dec
movsb
pop
pshufw
cwtl
pop
movsb
out
fcoml
fdivp
out
xchg
xchg
inc
iret
mov
dec
imul
call
lock
pop
outsl
mov
aas
bnd
push
insb
subb
in
rcrb
add
and
fnstenv
dec
jmp
les
push
adc
addr16
and
fs
in
push
fdivrs
and
lods
and
ss
test
fdivs
inc
mov
dec
std
xchg
ljmp
test
cmc
das
jp
xor
orb
xchg
sbb
lcall
xchg
jecxz
mov
lret
xor
es
call
fdecstp
cs
or
add
xchg
jg
fisubrl
stos
adcl
ljmp
inc
mov
test
outsl
mov
push
lcall
popa
lods
pop
or
outsl
xor
pop
test
and
hlt
loop
repnz
and
dec
xor
out
fisttpl
sub
repz
sub
sti
sbb
jmp
xchg
inc
ja
rcrb
mov
dec
push
xorl
outsb
sti
cli
insl
les
std
and
movsb
xchg
outsb
lock
movq
push
sub
es
add
sub
je
nop
cmpsl
stos
cmc
sub
pop
mov
fdivrs
dec
loop
xchg
mov
dec
popf
jbe
adc
push
mov
cltd
or
xchg
gs
sbb
push
cld
fmuls
xlat
pop
icebp
test
inc
inc
cmp
loop
dec
jns
aas
jmp
push
jae
clc
xor
xor
and
pushf
imul
negb
movsb
out
je
xchg
into
ret
call
cmp
mov
dec
dec
repnz
adc
cmpsl
minps
ss
ror
stc
sti
andl
dec
mov
pushf
out
dec
popa
cs
cld
loop
pop
call
test
pop
pusha
mul
sbb
pushf
unpcklps
imul
repnz
adc
mov
into
xchg
loop
mov
jo
or
xchg
daa
xor
sub
xor
clc
xor
addr16
cli
add
mov
mov
ret
clc
inc
sub
int3
xchg
sub
mov
jl
jns
dec
loop
mov
and
lds
pop
movsb
xor
jno
dec
aam
mov
pop
jno
icebp
mov
xchg
add
jnp
gs
pop
int
les
dec
in
in
aas
out
iret
mov
clc
jle
data16
push
sbb
loopne
cmp
jnp
shr
pop
sub
pop
and
ja
xor
pushf
insl
out
insl
lock
xchg
aas
ret
mov
dec
xchg
out
push
jae
dec
aam
iret
mov
and
add
mov
test
dec
mull
or
cld
jecxz
ds
jae
xchg
fcomps
stc
stos
lret
lret
fs
in
cmp
xchg
cmpb
push
mov
lcall
pusha
xlat
out
ljmp
fyl2x
pop
add
pop
jg
xorl
popf
or
lret
repz
jae
insb
iret
mov
cli
ds
cmp
jecxz
daa
mov
add
inc
pop
repnz
sbb
loop
gs
cs
jp
dec
enter
xchg
das
test
hlt
icebp
decb
jecxz
cmp
lret
mov
cmp
pop
xchg
stc
mov
into
fnstcw
xchg
jns
cmpsl
rolb
lock
or
call
mov
outsb
sahf
cmp
push
adc
das
fwait
jg
and
and
cs
in
lahf
mov
or
fstps
cltd
popa
mov
popf
pop
or
aam
pop
nop
shl
jns
cmp
clc
and
mov
aad
cmpsb
dec
bound
jb
push
fstpt
movsl
mov
sbbb
and
addr16
dec
rorl
stos
xor
push
xor
hlt
jae
pop
popf
adc
sub
and
fdivr
enter
xor
fdivs
or
push
inc
or
in
aad
aas
pop
pop
push
sti
dec
inc
inc
cli
or
scas
stos
xchg
jne
add
jp
pop
mov
pusha
lret
xchg
sub
push
inc
push
dec
leave
jb
adc
rorl
mov
xor
out
in
incl
push
pop
xchg
inc
mov
mov
hlt
arpl
push
inc
orb
push
js
insl
pop
aad
push
ja
pushf
xlat
xchg
dec
dec
scas
repz
repnz
mov
jl
push
dec
pop
repz
adc
insl
insl
jle
xchg
stos
adc
sbbl
repnz
sbb
dec
and
adc
mov
notl
lods
stos
sub
lahf
mov
jp
mov
pop
test
arpl
insb
jg
sub
inc
adc
lcall
dec
cmp
push
mov
lcall
sub
fs
stc
push
les
push
xor
xchg
cmp
pop
jo
xchg
daa
xor
pop
inc
aad
cli
jmp
sub
test
mov
mov
pop
mov
push
cld
mov
lea
push
iret
mov
dec
and
roll
add
mov
into
frstor
xorl
js
rdpmc
pop
mov
pop
orl
test
lret
pop
add
iret
test
dec
mov
push
or
mov
sbb
pop
adc
xor
jno
jne
cld
fwait
dec
sub
repnz
dec
or
fdivs
dec
test
clc
jl
jbe
or
addl
xchg
cwtl
adc
sub
imul
dec
mov
ss
or
cld
test
adc
jns
push
pushf
jns
lcall
dec
test
out
mov
and
add
fwait
sahf
adc
lods
adc
fists
xor
lods
jl
inc
jb
aaa
lods
sarl
out
das
dec
cmp
jg
push
andl
std
push
dec
pop
lods
pop
ret
add
mov
jo
pop
fstpl
sub
orl
popf
fidivl
fdecstp
sub
add
mov
dec
mov
popf
or
mov
sbb
pop
fbld
sbb
stc
into
push
daa
cmpsb
aad
jnp
mov
bound
jno
mov
pop
outsl
xor
cmpsl
rorb
dec
dec
push
lods
mov
test
adc
repnz
addr16
stos
leave
inc
outsb
mov
subl
loope
insl
cmpb
mov
int3
adc
xchg
mov
or
test
pop
and
icebp
sub
inc
divb
mov
pop
nop
lret
insl
lods
mov
push
sub
jmp
into
aas
in
cmp
mov
stc
nop
stos
arpl
scas
fstpl
add
jno
pop
mov
xor
jg
xor
xchg
cmp
cmp
cli
mov
rcrb
or
outsl
xchg
pop
cmp
sub
cmpb
mov
cmpsb
pop
or
sub
iret
icebp
loop
push
xchg
cmc
filds
enter
sahf
mov
das
repnz
mov
js
and
sbb
xchg
mov
adc
es
add
scas
xchg
adc
pop
scas
nop
inc
xor
dec
mov
movb
push
push
xchg
arpl
dec
in
xchg
das
cmp
add
popf
adc
clc
sbb
dec
push
inc
repnz
cmp
jecxz
rclb
jmp
push
movsl
sahf
aas
stos
dec
loope
mov
xchg
imul
sub
push
or
mov
dec
sbb
mov
out
xchg
repz
sbb
mov
push
jl
mov
pop
dec
int3
mov
xor
enter
test
pop
or
addl
insl
mov
cmp
fcoml
scas
lret
cs
out
sahf
xchg
roll
add
mov
js
shrb
push
shll
fwait
pop
mov
in
or
sbb
jno
stc
inc
xchg
mov
iret
mov
jle
jg
insl
iret
and
add
cltd
iret
sarb
test
and
add
int
inc
push
mov
inc
stos
data16
mov
in
es
call
and
loope
jg
test
das
fcoms
sbb
mov
pop
test
int
fs
dec
push
lds
jle
sti
mov
sbb
mov
aam
ljmp
sub
cmp
push
aaa
test
mov
add
aad
jb
mov
pop
outsb
pop
fdivrl
fldenv
rol
cmpxchg
fwait
push
push
sub
fsts
nop
mov
adc
mov
imul
leave
in
adc
leave
and
mov
mov
push
pop
ret
lods
clc
fstpt
dec
and
loopne
pop
int3
mov
jp
pop
sarb
inc
fimull
subb
orl
adc
leave
lret
rolb
cmp
xchg
push
rorb
cmpsl
stc
push
pushf
lock
out
mov
and
or
fmull
cmp
dec
je
and
orb
stc
or
popa
pop
adc
lea
fisttpll
push
bound
ja
or
push
mov
aad
jbe
cmp
jp
push
adc
or
lea
loope
ficoml
mov
xor
fstpl
fmull
push
fs
sbb
or
into
mov
adc
in
cmpsl
cmp
out
mov
fwait
mov
movsb
sbb
jbe
dec
nop
sub
dec
cmc
adc
gs
vmptrst
decb
mov
or
outsl
mov
stc
loopne
mov
mov
xor
aad
mov
mov
xor
xor
sbb
cmp
jmp
adc
adc
in
ss
cld
jno
pminub
sub
mov
lods
mov
fprem1
mov
sub
mov
mov
jp
lret
fidivl
and
push
into
xchg
and
fcoms
xchg
and
ret
roll
inc
aam
or
scas
xchg
pop
mov
xor
jge
lds
push
cs
je
sahf
out
pusha
sbbl
or
adc
into
xchg
mov
sub
repnz
jo
fs
xor
shl
mov
ds
lahf
popf
or
sub
mov
sub
push
in
jecxz
pop
push
or
jmp
xor
inc
out
pop
sti
lahf
mov
jno
push
movsb
mov
mov
test
out
out
outsl
fbstp
mov
ljmp
sbb
or
test
mov
stos
popf
mov
dec
ds
mov
or
pop
in
mov
pop
pop
lret
pop
cltd
stos
sar
hlt
lds
clc
mov
xchg
lret
xchg
xchg
rorb
fsubrs
js
push
pop
adc
in
or
aaa
cmc
mov
pop
and
scas
cmc
sbb
movsl
popf
pusha
and
lret
leave
cld
inc
bnd
and
add
push
out
in
xor
pop
pop
mov
push
mov
dec
mov
and
inc
jg
dec
in
dec
mov
mov
je
pop
mov
and
jns
add
push
adc
adc
test
sti
enter
es
cltd
mov
out
shr
jo
data16
lds
mov
lods
loope
sbb
adc
pop
mov
push
lods
jge
add
mov
fnstsw
mov
cmpsb
xor
xchg
mov
movsl
addr16
add
push
and
fidivrs
sub
insl
insl
push
movsb
out
rcrb
cmpsb
and
icebp
ffree
push
in
test
in
out
test
mov
in
fnstcw
jae
dec
mov
push
xchg
push
xor
sub
jns
andb
jl
aas
arpl
cmp
mov
jmp
lret
out
sbb
push
or
dec
xor
mov
imul
hlt
mov
mov
push
jp
add
fdivrl
sub
lea
lock
or
imul
filds
add
adc
ds
repnz
in
sub
shlb
mov
sbb
or
pop
es
sbb
xlat
rclb
mov
push
lods
movsl
push
or
dec
leave
fcomps
subl
int3
fistl
imul
jl
insb
fistl
and
jg
cs
pop
loopne
mov
jle
insb
xchg
cltd
mov
xlat
ret
dec
outsl
push
popf
adc
add
out
int
mov
cmpsl
das
negb
aad
pop
lret
mov
mov
movsb
pop
mov
shrb
jmp
adc
mov
push
stos
cli
push
sub
dec
icebp
jbe
popa
jns
and
sbb
jg
faddl
addl
aam
jle
sub
fidivs
es
xlat
add
pop
shl
lock
adc
jl
jae
fidivl
imul
clc
or
cmpb
sub
jmp
jns
fsubrs
cmp
dec
gs
xor
jbe
add
fisttps
and
sti
fnstenv
pushf
inc
push
sbb
cmp
and
cmp
rsm
cmp
xor
inc
int3
pusha
lock
sbb
cs
cltd
xlat
dec
push
addr16
int
add
push
in
out
mov
imul
mov
cmp
sti
out
cmp
push
dec
mov
cmp
and
mov
mov
mov
popf
push
std
mov
fisttps
push
mov
jecxz
xor
inc
mov
pop
adc
jle
jmp
outsb
pop
xchg
mov
cli
mov
int3
sbb
and
pop
or
xchg
mov
stos
or
scas
popf
sub
sbb
in
mov
pop
arpl
xor
add
addr16
mov
cmp
lea
jmp
mov
push
cli
ds
rorb
and
mov
jae
test
jae
shrl
jle
inc
lods
das
mov
pop
inc
mov
inc
dec
xchg
jge
insb
inc
dec
dec
adc
cmp
shlb
adc
xchg
ret
xchg
daa
lock
loope
xchg
out
inc
and
push
addl
push
jb
out
xor
mov
loopne
pop
cmpsl
xor
push
popa
out
mov
dec
jg
ficoml
adc
sbb
xor
mov
xor
dec
pop
adc
lahf
xor
xchg
xor
xor
push
pushw
dec
adc
int3
sbb
adc
mov
inc
sub
sub
sbb
push
jo
in
fiaddl
enter
mov
dec
ret
daa
xchg
pop
jmp
jnp
pop
orl
call
cmpsl
jecxz
mov
mov
sbbl
sbbl
cwtl
add
jmp
mov
mov
ret
push
pop
add
mov
out
sahf
lret
into
js
or
fldt
in
inc
pop
jno
hlt
mov
leave
std
scas
or
lds
fs
pop
pushf
fstpl
mov
scas
xchg
xor
repz
fdivl
push
insb
inc
cld
in
mov
pop
nop
and
jne
pop
or
aas
dec
pop
sbb
mov
cmp
jo
popf
ljmp
insl
or
add
pop
cmp
xchg
xchg
pop
mov
inc
cmpsl
test
cmp
insl
rolb
adc
ficoms
cwtl
or
push
or
fnsave
mov
imulb
push
push
mov
inc
xchg
adc
pop
aaa
xor
lahf
iret
xchg
mov
imul
inc
mov
xchg
xchg
packsswb
popl
in
aas
jo
in
jmp
jns
push
ss
aad
js
and
movsb
sub
outsl
mov
shrl
rclb
dec
mov
in
push
pop
xchg
into
in
aaa
dec
hlt
mov
and
jb
pop
dec
inc
adc
int3
sbb
dec
jp
cwtl
stc
fidivrl
in
dec
mov
nop
pop
ljmp
adc
xchg
fisubrs
cmp
pushf
mov
add
adc
push
fwait
add
and
xchg
int3
jne
stc
fdivrl
mov
pop
fbstp
testb
mov
pushf
addl
sbb
or
inc
and
repnz
inc
loopne
jae
inc
pop
sub
cld
inc
insl
xchg
pop
pop
mov
adc
imul
dec
rorb
hlt
pop
loopne
or
pop
out
and
fadd
clc
jb
out
or
fdivrp
imul
fldcw
sbbl
in
aad
mov
and
daa
cmp
inc
dec
hlt
xchg
jmp
sbb
testl
or
xchg
mov
jg
jo
or
mov
sub
aaa
mov
add
push
fdivl
frstor
scas
pop
adc
add
pop
sbb
outsl
or
lock
xor
fsubp
js
cmp
cltd
sahf
inc
loopne
cmp
testl
sbb
scas
das
mov
jne
loop
cmp
stc
push
pop
popf
imul
xchg
movddup
mov
iret
cli
out
sbb
push
or
fbstp
jmp
xchg
std
sbb
dec
stos
or
inc
cmp
leave
aaa
adc
ret
cmp
int
andl
fcomps
mov
repz
aaa
shrl
loope
aad
xchg
lcall
or
sbb
jne
outsl
cmpsl
push
fildll
outsb
cmpsl
jl
mov
jle
xor
dec
push
mov
sbb
sahf
les
pop
sbb
adc
ljmp
pop
jns
adc
xorb
fs
sub
adcl
mov
or
xchg
stos
mov
pop
int
mov
cmp
inc
enter
dec
push
icebp
les
push
xchg
dec
mov
int
dec
nop
mov
dec
mov
pop
mov
out
xor
mov
aad
cmp
xchg
mov
movsb
cmp
mov
sub
nop
lcall
into
shr
xchg
std
jo,pt
aad
jno
push
dec
jb
mov
unpckhps
cmc
inc
mov
jmp
lret
xor
adc
xchg
ljmp
pop
push
outsl
cltd
stos
popa
aaa
sbb
into
ljmp
mov
dec
ror
dec
mov
or
addr16
xchg
mov
xchg
and
dec
inc
inc
dec
lret
prefetch
aam
pop
mov
and
push
scas
or
dec
fsts
popf
inc
pop
pop
in
test
stos
xchg
add
nop
fistpll
mov
xchg
and
add
xlat
xor
cwtl
sar
mov
rorl
lret
xor
cwtl
xor
or
pop
mov
test
dec
sbb
lods
or
sarl
out
dec
and
jmp
rorb
lods
dec
in
jle
adc
loop
mov
inc
into
adc
stos
shlb
cwtl
lret
xchg
cld
aaa
stc
popa
test
imul
dec
aad
rdpmc
sub
fstl
jl
inc
xchg
stc
lds
inc
jo
rolb
iret
std
cmp
and
and
jle
pop
xchg
aam
fidivrl
or
je
mov
loopne
xchg
scas
and
enter
jnp
jecxz
xchg
mov
ret
fldln2
mov
aad
jb
stos
cmp
enter
sub
into
cmp
das
into
sbb
insb
sbb
jno
hlt
mov
outsl
stos
pop
loop
adc
sbb
lahf
lods
mov
addr16
dec
push
fs
fsubr
cmpsl
xchg
in
or
push
push
repnz
sbb
lock
inc
cli
aas
mov
dec
pushf
ret
js
js
outsb
in
sub
pop
sbb
hlt
dec
ret
inc
xchg
lds
clc
sub
mov
jno
dec
sub
jnp
not
add
out
or
cmp
jne
lods
jle
xchg
pop
cli
aaa
mov
ret
push
push
cmc
mov
cmp
mov
xchg
mov
lds
pop
sahf
aas
lds
cmp
push
lods
xchg
fstl
lea
fisttpl
inc
daa
mov
in
xor
xchg
add
pop
push
xchg
data16
insl
inc
push
add
push
int3
loope
js
and
push
jbe
popf
sbb
and
pop
loop
insb
and
adc
loope
xchg
test
filds
and
push
and
fmull
adc
mov
enter
mov
into
inc
adc
daa
dec
rcll
fsubl
add
dec
cmp
mov
imul
dec
mov
sbb
or
and
or
jmp
jno
into
xchg
lods
ss
int3
push
jo
rcrb
push
nop
imul
dec
sbb
dec
xchg
bound
cli
cwtl
or
xchg
dec
xlat
cmp
shrb
cmc
xchg
dec
pop
repnz
xlat
in
jbe
sub
mov
loop
out
xor
mov
adc
sbb
inc
jl
push
cmpsl
xchg
xor
pop
dec
inc
fisttpl
out
or
in
aam
pop
and
mov
sbb
cli
das
pop
and
xchg
out
cmp
mov
jne
or
mov
fadds
sub
repnz
pop
pminsw
mov
mov
xorb
mov
xchg
shlb
sbb
sbb
addr16
in
sub
movsb
sbb
cmpsb
lret
inc
pop
jp
mov
loop
sbb
push
sar
std
in
pop
mov
and
ret
inc
out
pop
mov
imul
push
icebp
dec
xchg
sub
jl
mov
jge
lock
std
into
ret
inc
jmp
add
or
fnstenv
jbe
sbb
inc
call
stc
popf
cmp
lahf
pop
rclb
lds
fiaddl
in
insl
inc
jle
jmp
xor
out
inc
lahf
inc
imul
jle
sub
cmpsb
addr16
movsb
sub
je
add
repz
add
aaa
ret
lret
aam
outsl
pop
dec
sbb
mov
jg
fbstp
dec
loop
jmp
aad
and
dec
lret
add
sar
cs
cwtl
or
cmpsb
jg
arpl
push
mov
lods
test
xlat
cld
mov
in
xor
cmpsb
push
test
sti
aam
jns
fiaddl
cmp
arpl
adc
and
hlt
pop
cli
enter
pop
pop
pop
cld
scas
mov
jl
and
xchg
add
scas
incb
mov
push
dec
jne
insb
rorb
dec
es
add
stos
xchg
xchg
mov
pushf
inc
dec
stos
mov
pushf
sarb
jnp
cmpsb
inc
ljmp
lcall
mov
pushf
pop
cmp
mov
leave
and
xchg
jmp
pop
or
and
leave
daa
fisttpll
jg
dec
iret
js
xor
bound
aaa
sar
push
scas
aaa
push
and
ret
mov
test
mov
ljmp
pop
ror
cwtl
add
jl
insl
orl
dec
pop
xor
push
xchg
fsubr
js
mov
cmpsl
xor
daa
lret
sbbb
jbe
stc
mov
out
stc
lahf
push
pop
sbb
jbe
fiaddl
adc
cmpsb
jne
lret
sbb
pop
aas
add
pushf
mov
sub
pop
popa
mov
cmpsl
sbb
out
test
dec
orl
mov
iret
loop,pt
stc
test
inc
stos
jb
out
pop
test
scas
inc
xchg
into
sub
nop
addr16
mov
push
add
loopne
stos
adcb
push
inc
push
jno
daa
pop
testb
jb
insl
sub
dec
popf
test
mov
pusha
mov
test
sbb
cltd
ret
aam
and
roll
push
je
in
sbb
cmp
fildll
rolw
inc
xchg
adc
pop
mov
and
add
jne
ljmp
cmp
or
roll
ss
sbb
shll
pop
add
lea
mov
jg
pop
stos
dec
mov
cmpb
sarb
mov
lret
mov
insb
inc
pop
sarl
hlt
stc
repz
fistpll
lcall
sbb
cli
adc
xor
push
xor
dec
or
popf
enter
push
xor
adc
ficompl
xor
pop
add
sbb
insb
loop
outsl
adc
jne
sbb
and
push
pop
icebp
mov
ja
scas
out
jb
inc
jne
mov
fbld
lods
sbb
ficompl
jne
pop
mov
adc
adc
lea
orl
cmp
cmp
sbb
sbb
mov
pop
inc
shlb
pusha
jne
mov
or
roll
pop
enter
mov
or
push
in
in
jl
jl
mov
test
mov
sub
insb
inc
mov
mov
push
sbb
outsb
test
cmpsb
stc
fdivrs
pop
repz
sbb
leave
push
not
cmp
movsl
cs
test
cmpsl
dec
ss
xchg
movsb
stos
lea
xchg
sbb
fists
mov
push
in
dec
xor
cmp
mov
and
insl
jne
cmp
cmpsl
and
loop
cmp
out
arpl
or
push
popf
xor
xchg
pop
inc
push
test
xor
notb
fldt
sub
hlt
jecxz
test
lahf
fldl2t
inc
pop
push
mov
mov
outsb
mov
insl
jne
int
mov
or
mov
cmpsl
popf
cmp
int3
lea
mov
dec
pusha
fisubs
mov
hlt
jecxz
in
addr16
push
fists
sbb
cmc
repnz
sub
fdivrs
inc
mov
jne
sub
sub
pop
jmp
inc
mov
and
push
xor
mov
pop
pop
sahf
mov
inc
pop
andb
cld
xlat
ljmp
xor
outsb
cmp
pop
jp
cmp
jp
dec
jecxz
jnp
pop
pusha
test
ja
ljmp
sbb
mov
sub
jg
clc
mov
or
mov
cmp
out
shlb
xchg
fisubrl
adc
ja
sbb
loope
jmp
cmp
or
loop
pusha
jb
lret
fnstsw
int
pop
loop
stos
lods
sbb
inc
xchg
pmulhuw
es
sahf
xor
pusha
arpl
mov
test
push
pusha
scas
dec
into
adc
enter
inc
cmpsl
push
ret
jae
popf
mov
cmp
loopne
and
fistps
mov
movsl
ds
xlat
imul
or
push
div
sti
test
jge
xor
test
int
insb
hlt
outsb
push
dec
adc
outsb
fs
dec
enter
xor
sub
dec
dec
pop
push
lds
mov
jo
inc
loope
sub
lock
jno
subl
sahf
sbb
ret
lahf
push
mov
loope
jae
dec
mov
xlat
xchg
push
fdivl
or
fcoml
pop
out
sub
idivb
ljmp
jmp
loope
sbb
cmp
jecxz
sbbb
xchg
jl
loopne
les
add
leave
xor
lea
out
mov
xchg
out
pushf
lods
test
and
out
mov
fdivs
mov
outsl
movsb
xchg
rep
xchg
sub
jbe
xchg
cmpsl
sbb
mov
out
xlat
sub
pop
lret
add
adc
fstl
aad
push
mov
push
mov
cmpsl
or
iret
xchg
jecxz
das
cs
loopne
jl
mov
stos
and
orl
inc
pop
inc
test
scas
out
into
jp
js
repz
mov
inc
or
cwtl
adc
btc
add
mov
cmp
ss
xchg
sub
lods
mov
int
add
push
in
faddp
inc
stc
lret
sub
sbb
lret
mov
cmp
neg
and
shll
inc
ret
push
enter
mov
xor
les
push
scas
cmp
sbb
jbe
mov
aaa
pushf
inc
imul
xchg
les
pop
pop
push
sbb
xchg
movsl
jae
outsl
jg
mov
ja
push
lock
lock
pop
or
mov
jle
push
cli
sbb
inc
mov
or
adc
dec
pop
fisubl
lahf
jb
sbb
sarb
sti
sub
insl
push
outsb
inc
pop
ljmp
adc
cmp
fisubs
orb
movsb
inc
or
int3
pop
sub
pop
jmp
pop
cmp
mov
push
data16
cltd
int3
int3
mov
push
mov
mov
mov
lret
cmp
lsl
push
cmp
lret
ds
jecxz
loop
dec
dec
shll
popf
mov
mov
loop
push
orb
sub
and
iret
cmpsb
and
jecxz
mov
ljmp
add
dec
push
cwtl
pop
and
dec
dec
pop
sbb
fnstsw
mov
lock
xchg
jge
and
dec
imul
jp
stos
add
push
stos
ret
stos
mov
gs
pop
ret
ss
cmp
test
nop
xchg
jp
scas
jge
movsl
sbb
stos
test
xchg
jg
pop
jns
pop
out
sub
jle
les
pushf
mov
and
xlat
loopne
leave
sub
test
xchg
push
gs
xor
out
fs
add
and
mov
std
repz
test
not
sub
imul
pusha
cmpsb
cwtl
in
ljmp
adc
imul
loope
xchg
sub
xlat
jmp
xchg
in
adc
ja
cmp
sbb
jnp
cmp
cld
xor
fidivs
dec
aas
add
aad
push
adc
and
jecxz
jmp
cwtl
aad
cmp
push
xlat
cs
inc
xor
mov
jbe
nop
jl
in
mov
sti
pop
fidivrl
jg
pop
lods
mov
popa
xchg
sbb
jl
xlat
xor
je
mov
sbb
stc
mov
out
xchg
jae
jecxz
push
add
lods
sub
leave
xor
jno
imul
xor
imul
jg
xor
out
cmp
mov
and
mov
movsl
xchg
fsubrl
mov
aaa
mov
adc
mov
and
and
push
es
jge
pop
mov
mov
dec
imul
jb
xor
jl
adc
bound
hlt
int3
dec
xchg
jae
lods
jne
popf
xchg
sub
mov
idiv
cmp
js
dec
push
push
aad
cmpsl
adc
pop
push
ret
jae
mov
xchg
or
mov
mov
dec
scas
xchg
lods
stos
pusha
shrl
adc
data16
arpl
shll
xor
jl
jmp
in
fcomps
pop
sbbl
scas
loopne
jo
imul
pop
cmp
add
cwtl
lret
add
xchg
pop
and
jmp
mov
mov
or
pushf
in
xor
jnp
aam
pop
lds
dec
movsb
push
fwait
sti
jl
jle
cmpsl
sti
mov
test
andb
sub
rclb
push
push
jnp
xchg
outsb
lret
sti
pusha
or
dec
incb
pusha
icebp
adc
and
sbb
mov
xchg
aas
addl
push
movsl
mov
scas
rcr
popa
and
sti
int3
mov
fdivp
jb
in
adc
mov
shrb
pop
and
loop
out
add
jp
insl
mov
insb
outsl
xchg
cli
scas
cmp
xchg
mov
sbbl
jle
add
pop
clc
sbb
adc
dec
pusha
hlt
jae
fnstsw
pusha
sbb
and
sbb
mov
cli
and
incl
ja
jae
int
xchg
nop
aam
xchg
sbb
push
cwtl
in
imul
mov
push
pop
and
lds
clc
adc
mov
add
dec
add
mov
push
xchg
in
stos
jge
cmp
out
test
lods
mov
mov
fdivs
xlat
leave
pop
test
mov
scas
lret
dec
xchg
hlt
add
xabort
rcll
imul
bound
jno
clc
sub
imul
adc
dec
mov
jl
xor
outsb
dec
imul
mov
mov
std
rcl
dec
inc
adc
and
push
dec
or
lret
dec
jmp
or
cltd
or
pop
push
xchg
mov
inc
fs
in
ja
xchg
mov
xchg
scas
neg
aad
sub
or
xchg
push
js
add
xorb
adc
dec
outsl
mov
xchg
pop
mov
movsl
flds
jb
mov
bound
dec
sub
fwait
push
lret
nop
cmp
sub
or
std
repnz
xchg
std
out
adc
je
xchg
xor
push
jb
push
xchg
mov
inc
lods
inc
daa
adc
data16
sbb
jnp
jbe
xor
add
in
stc
mov
pop
pop
iret
cmp
ret
sub
sub
add
cltd
sbb
sub
inc
dec
adc
fsubrs
xlat
adc
dec
inc
add
push
adc
add
mov
inc
xor
je
mov
push
repnz
clc
sbb
or
xchg
cmp
mov
inc
repz
dec
fldl
xchg
and
mov
mov
or
xor
test
and
push
dec
dec
lods
add
clc
mov
leave
les
push
loope
cmpsb
push
popf
mov
or
movsb
pushf
jle,pn
mov
ret
push
cmp
jnp
or
mov
sub
lock
sbb
xchg
pop
mov
jecxz
and
sbb
cli
outsl
in
cmp
je
push
iret
int3
xchg
jl
jge
aad
fsubrs
xchg
fstpl
outsl
jb
sbb
pop
cmp
out
mov
imul
add
rorl
sbb
inc
test
jmp
inc
in
mov
out
lahf
push
mov
xor
cmp
fstpt
idivb
popf
mov
mov
inc
stos
cltd
addr16
sbb
es
pop
scas
inc
mov
enter
leave
mov
cld
mov
push
push
jp
jg
xor
fildll
imul
pop
stos
cmc
adc
xchg
push
in
jno
dec
fcoml
and
inc
mov
or
shrl
testb
mov
mov
popa
jle
jmp
lock
sbb
es
mov
repnz
test
or
mov
jge
popa
insb
jo
mov
mov
jl
add
fidivs
stc
in
hlt
jae
lock
clc
mov
xchg
fwait
jmp
and
sub
or
push
test
or
push
shlb
cli
mov
incb
pushf
and
mov
outsb
push
pop
test
sub
xchg
mov
mov
fs
inc
dec
inc
xor
jns
mov
clc
fwait
pusha
add
mov
sti
scas
xchg
ja
jp
jbe
std
sub
xchg
jge
mov
fnstcw
cmp
sbb
mov
dec
mov
adc
or
mov
mov
xchg
mov
sub
jbe
cltd
fistps
imul
ja
and
jp
mov
rclb
push
xor
push
fisubs
jle
cmp
adc
ss
add
adcb
ja
aam
mov
in
pop
pushf
lods
pop
or
dec
mov
xchg
push
mov
jbe
lea
arpl
orb
ret
int3
inc
cmc
add
sti
pushl
aas
sbb
lahf
lahf
gs
sbb
xchg
mov
jne
daa
dec
pop
mov
mov
sub
or
inc
insb
inc
aam
xchg
adc
ret
and
shr
jne
sub
push
loopne
lret
cmp
in
inc
loop
push
jmp
pop
xchg
adc
xchg
cs
mov
push
sti
add
arpl
sub
shlb
or
mov
inc
xlat
adc
jl
push
or
int
xorb
outsl
or
push
rorb
icebp
fcompl
jge
les
imul
or
mov
repnz
mov
mov
in
ret
dec
mov
inc
dec
sub
shlb
sub
or
lea
stos
rcl
imul
das
cmpps
sub
push
cmc
cmp
lods
mov
mov
jns
cmp
daa
les
dec
pusha
add
lret
mov
mov
repnz
rol
mov
sub
dec
or
sbb
aas
sbb
addr16
rcll
jmp
jg
push
sub
pusha
testb
mov
fcoms
repnz
sub
shlb
jae
sbb
jmp
popa
add
fcomps
les
scas
pop
aam
push
stos
hlt
gs
scas
subl
and
push
add
mov
or
mov
loopne
push
mov
mov
lret
in
mov
add
mov
or
cmp
fisubs
mov
push
fsubs
xor
popf
out
push
pop
mov
sbb
ror
test
xchg
test
mov
scas
flds
mov
inc
aaa
mov
mov
ss
jmp
movsb
insl
dec
ds
loopne
xor
pusha
stos
shrb
xchg
rep
adc
add
rcrl
clc
cmpsl
sti
or
cmpsb
sub
xchg
mov
bound
pop
mov
add
push
test
iret
adc
xor
imul
test
dec
fmull
mov
fcomps
repz
jmp
sbb
mov
popa
into
popf
xlat
lods
xor
pushf
mov
loop
fiadds
pop
push
sbb
fucomi
pop
sub
mov
out
pop
push
fmuls
test
dec
jne
jo
mov
sbb
or
cli
orb
adc
dec
fdivr
dec
rcll
jp
cmpsb
rcrb
mull
stos
mov
int
enter
pushf
mov
nop
push
ret
mov
jbe
jne
adc
inc
xchg
add
nop
movsb
sbb
mov
pop
xchg
cmp
mov
in
sbb
loopne
stos
mov
hlt
fcomip
xchg
pop
push
sbb
mov
mov
mov
les
mov
lods
inc
mov
mov
daa
das
add
push
fmul
fiaddl
cmp
je
push
jne
cli
popa
ss
mov
ds
mov
xchg
out
cmc
sbb
jnp
popf
add
and
pop
mov
jns
insb
test
jae
sub
pop
dec
mov
mov
movsb
inc
stos
lea
mov
jle
jbe
pop
pop
xor
iret
push
and
stos
or
add
mov
pushf
pop
xor
repz
pop
imul
les
adc
gs
push
in
mov
adc
mov
aam
mov
rcrl
push
pop
adc
lahf
scas
jecxz
cmp
adc
xor
enter
lea
dec
ds
jle
lret
nop
inc
push
gs
mov
xchg
mov
ljmp
inc
cmpsb
cmp
hlt
gs
mov
subl
sahf
popa
test
sbb
je
shll
insb
xchg
mov
push
dec
sbb
cmp
ljmp
das
loopne
push
dec
jns
xor
push
pop
push
outsl
or
xchg
or
mov
sahf
ficompl
dec
push
inc
rcl
clc
leave
sub
lret
cmp
in
push
shrl
xchg
xchg
lock
leave
mov
mov
scas
xchg
dec
test
je
call
mov
or
movsl
mov
fsts
popf
jne
icebp
mov
subl
adc
sbb
cmp
xchg
inc
sub
dec
xor
pop
enter
movsb
daa
dec
sbb
scas
inc
test
insl
aaa
mov
outsb
les
xor
insb
xor
push
pop
lods
iret
mov
cmpsb
push
push
cmpb
pop
push
mov
pop
fiadds
test
inc
lods
xchg
cmpsl
test
xchg
pushf
mov
adc
in
and
mov
add
sub
insl
push
xor
add
lahf
fidivrl
jmp
insb
sub
lods
and
shrl
dec
sub
shl
into
fidivs
js
popa
inc
or
mov
pop
jbe
icebp
enter
sbb
mov
mov
inc
or
xor
dec
or
test
sbb
cmp
dec
arpl
loop
sub
jae,pn
inc
mov
out
insl
popf
mov
bound
xchg
mov
fisubrs
cmp
lods
push
bound
je
xchg
or
adc
and
in
js
jns
inc
js
pop
bound
or
sbb
jecxz
stos
jg
ss
inc
jns
inc
arpl
cmp
xchg
pop
sbb
dec
js
das
lahf
adc
int3
ds
in
xchg
sar
and
xor
push
inc
addr16
or
jo
mov
adc
and
mov
jp
push
dec
andb
mov
and
jo
mov
mov
fwait
and
or
aad
addl
sub
mov
nop
fs
mov
adc
push
jp
add
rorl
sbb
mov
in
adc
pop
xor
fcmove
shll
loopne
add
addl
dec
cmp
mov
or
jbe
mov
fists
sub
test
xorl
enter
pushf
inc
icebp
adc
fistl
xchg
aaa
mov
lock
out
pop
mov
add
xchg
imul
test
inc
aad
gs
pop
push
sub
push
mov
sub
outsl
fiaddl
mov
pop
pop
clc
mov
mov
lods
clc
jb
inc
add
repz
rcll
outsb
adc
cwtl
in
movsb
push
loopne
cmc
sbb
ds
imul
ds
jl
dec
xlat
mov
sub
stos
xlat
mov
add
inc
inc
mov
and
aaa
out
faddl
cli
pop
ret
jo
es
jno
fsubrs
adc
pusha
daa
mov
mov
push
mov
dec
rcr
dec
add
rcrl
pop
add
adc
push
sub
stos
leave
push
inc
in
cwtl
pop
movsl
pop
mov
arpl
dec
sarl
dec
pusha
pushf
ljmp
movsl
xlat
in
mov
or
stos
mov
stos
fnsave
push
mov
sub
fisubrl
out
jns
xor
adc
out
mov
fwait
mov
push
add
cs
and
cmp
in
mov
pop
push
in
push
inc
fldt
push
popf
fidivs
mov
cli
xor
ja
and
out
inc
adc
jp
dec
call
xchg
and
add
loopne
data16
in
adcb
or
push
push
out
xor
cwtl
aas
idivl
cmpsb
movsb
xchg
leave
inc
mov
das
mov
clc
sbb
xor
stos
fisubs
movsl
push
cmc
adc
mov
mov
sbb
fildll
xor
push
add
or
adc
mov
jne
add
or
push
pop
fcomi
pop
pop
idiv
js
pushf
and
fisttps
adc
and
jp
test
arpl
lahf
daa
cmp
inc
inc
clc
aas
sub
inc
hlt
shl
mov
push
pop
push
lock
stos
and
xchg
leave
adc
xor
or
inc
xor
ljmp
icebp
in
test
lret
pop
movsl
pop
jbe
or
data16
sub
mov
jg
cmp
inc
and
or
xchg
mov
fs
enterw
in
inc
adc
mov
dec
cld
movsb
dec
push
inc
pop
jp
clc
lea
push
std
jecxz
dec
or
xchg
cli
push
sbb
dec
jmp
dec
pushf
cmp
push
mov
hlt
fsubl
lcall
xlat
xchg
add
add
cmpsl
sti
adc
xor
xlat
and
mov
xchg
lods
jo
shlb
or
sbb
fisttpl
jns
inc
push
jbe
inc
mov
inc
fists
dec
stc
repz
lock
les
mov
push
inc
push
push
inc
int3
aas
push
xchg
inc
adc
fsts
es
add
aaa
lock
sbb
cmp
jnp
xor
and
loop
xchg
jg
xchg
in
aad
xor
mov
dec
and
pop
jmp
push
sub
iret
mov
lcall
cld
jo
xchg
inc
into
pop
cmc
sbb
icebp
int
ja
bound
lcall
mov
stos
scas
and
adc
xor
mov
xor
mov
orl
ficoms
mov
inc
lahf
imul
xchg
leave
mov
pusha
cmp
insl
jo
out
add
pusha
adc
outsb
movsb
add
mov
xor
ljmp
and
stc
aaa
xchg
bound
loopne
int
rcll
jp
lret
cli
cltd
test
ja
hlt
ljmp
push
cld
imul
jne
pop
mov
add
or
jl
or
mov
jg
pushf
mov
cld
xchg
cmp
pop
inc
gs
and
xchg
in
mov
hlt
je
sbb
stc
and
addb
in
push
pop
sub
and
cmc
sub
scas
incb
pop
xchg
out
mov
adc
mov
in
mov
push
inc
fadds
or
sti
insb
xor
btr
arpl
outsl
mov
loopne
adc
mov
jb
lret
in
iret
mov
sub
loope
xchg
es
push
jnp
and
and
aad
xchg
lds
inc
rcrb
cmp
jmp
subb
cmp
in
pop
sub
and
mov
fwait
mov
mov
or
negl
inc
in
xchg
cltd
pop
lock
pop
adc
imulb
std
push
mulb
add
jns
xchg
and
loope
pop
pusha
jg
jg
mov
pop
sbb
add
adc
cmc
sbb
repz
pop
ret
jg
push
cltd
sub
pop
insl
jae
xchg
adc
jp
stos
dec
mov
int3
push
xchg
lds
sbb
push
mov
xor
popf
jge
jle
or
jl
std
sbb
jbe
push
pop
cmp
std
loope
shr
test
int3
testb
xchg
mov
pop
and
mov
xchg
xor
mov
daa
repnz
out
scas
sub
mov
jp
mov
lcall
mov
push
mov
shrb
fisubl
and
stos
outsb
gs
mov
movsl
aad
pop
in
mov
jns
in
fsts
mov
jno,pt
js
mov
rcrl
xchg
imul
cmp
fnstsw
pop
mov
jge
mov
loope
dec
lods
mov
jbe
sub
and
test
adc
hlt
and
cmp
aas
jnp
and
inc
cmp
jge
add
xchg
inc
xor
sbbl
jne
or
daa
pop
in
sti
in
lock
outsb
in
inc
mov
mov
jno
xor
xchg
and
insb
dec
dec
mov
push
out
call
jmp
push
adc
sub
mov
addr16
cmc
out
sub
mov
lahf
jp
dec
sub
add
fsubs
mov
mov
xor
comiss
mov
test
sbbl
add
sahf
pop
insl
or
and
pop
add
cmpsb
add
sub
or
aaa
cmp
popa
jno
pop
rolb
ja
pop
data16
xor
push
popa
mov
jg
loopne
push
mov
insl
aad
leave
sub
dec
xor
je
mov
and
pusha
cmp
inc
imul
pop
fimuls
stos
dec
inc
adc
outsb
mov
hlt
hlt
jo
pop
stos
cmp
pop
daa
xorl
sbb
loop
scas
mov
push
xor
xlat
or
or
xor
lret
inc
cmpsl
ljmp
adcb
movsb
cmp
pop
jle
push
cmp
sub
out
or
gs
movsl
inc
push
out
dec
cwtl
pusha
xlat
and
rorb
fisubs
jl
mov
jns
cmp
inc
inc
pusha
aas
loope
xchg
js
in
es
push
incl
fcompl
inc
movsl
cmp
cmp
adc
inc
sarb
js
jl
xor
inc
stos
inc
int3
mov
shlb
mov
jle
lods
mov
push
shlb
push
insl
das
out
mov
int
or
jmp
movsl
loopne
sti
bound
rclb
daa
xor
push
and
jae
xor
fistpl
gs
adc
mov
xchg
js
fisubrs
mov
ljmp
lret
out
outsb
pcmpeqd
testl
push
outsl
xor
int3
sbb
xorb
add
pop
fldenv
mov
dec
in
inc
xchg
xor
shll
sarb
and
pop
pop
and
or
sub
ljmpw
in
xchg
push
mov
sbb
je
cmpsb
add
test
rclb
adc
push
testl
shlb
nop
mov
sarl
sti
out
inc
cmpsb
dec
lea
dec
cld
and
add
jp
cli
mov
mov
cmpsl
out
push
in
jl
push
sub
adc
enter
subb
and
add
lret
aaa
mov
pop
into
lahf
inc
mov
or
sahf
scas
xchg
scas
mov
adc
lcall
stc
inc
test
fldcw
mov
out
dec
aaa
xor
pushf
js
dec
push
and
lahf
movsl
test
cmpsl
push
push
gs
loop
call
mov
mov
adc
ret
andb
loope
mov
cmpsl
int
sbb
dec
fidivrl
repz
adc
hlt
mov
sub
jle
dec
rclb
pop
aaa
ret
mov
roll
or
or
std
loopne
cli
push
jo
xor
jecxz
imul
jmp
cmpsl
leave
sub
fmuls
inc
fdivrp
int
dec
rcrb
jle
push
mov
sub
scas
sub
cmpsb
sbb
inc
mov
sbb
xor
cld
mov
ds
in
push
nop
mov
les
or
and
aam
sbbl
and
pcmpeqw
test
in
or
push
mov
mov
test
dec
add
iret
es
loope
aad
add
arpl
cmpl
jl
jae
test
in
scas
adc
je
ret
leave
imul
dec
repz
cli
or
add
lds
notl
adc
iret
dec
cmp
sbb
pop
insl
cmc
pop
push
iret
out
rcll
pop
cmp
ja
mov
addl
lcall
aaa
xor
jns
in
mov
mov
testb
adc
loope
mov
out
mov
scas
lock
clc
xor
lods
adc
out
mov
adc
mov
rclb
mov
shll
mov
push
inc
sti
mov
dec
inc
jns
mov
dec
pop
popf
ret
pop
aaa
inc
cmc
ficoms
sbb
adc
mov
push
push
xchg
fsts
out
add
out
mov
xchg
insl
and
bound
aad
and
rol
jl
adcb
sahf
aad
inc
loope
sbb
testl
sbb
bound
sbb
add
sbb
mov
rclb
mov
shlb
sbb
jg
mov
lret
clc
xlat
sbb
cs
pushf
push
rcll
out
cmpb
mov
addr16
sbb
adc
std
ficomps
jge
daa
add
sahf
hlt
dec
addr16
pop
jb
cmp
pop
subl
sbb
sbb
and
jecxz
and
or
mov
insl
addb
mov
loope
mov
xchg
and
adc
lahf
out
aaa
dec
ds
add
notb
jp
or
xor
jg
test
push
or
mov
mov
inc
inc
add
xchg
push
sub
mov
enter
call
inc
jns
cmc
popf
daa
mov
fdiv
and
add
xchg
stc
mov
jns
fimull
mov
imul
icebp
in
out
stos
mov
icebp
fbstp
nop
jno
xchg
stos
arpl
ljmp
jg
daa
in
inc
adc
cs
lret
and
aad
or
xchg
pop
jecxz
fs
popa
les
pop
rclb
sub
adc
aaa
arpl
mov
xchg
xor
popf
or
xchg
mov
or
sbb
mov
decl
mov
pop
sbb
sbb
pop
adc
mov
push
sti
jmp
pop
xchg
xchg
shll
aad
xchg
je
sbb
movsl
adcl
or
dec
jae
push
mov
ds
jo
stc
mov
pop
pop
push
test
out
andb
and
jbe
int
xchg
add
pop
rorl
sub
pop
ljmp
mov
mov
dec
and
mov
fldt
sbb
or
push
int
inc
pop
jne
sahf
cwtl
xor
clc
mov
ret
push
shrb
ret
fisubrl
popa
and
in
mov
fs
push
dec
dec
push
pop
les
push
and
jecxz
pop
lods
sbb
push
aam
push
jecxz
int3
and
lret
inc
in
stos
out
adc
call
loopne
sbb
mov
sub
pop
add
ss
scas
lods
rolb
shrb
push
jecxz
lods
sub
rclb
and
sbb
pop
pop
xchg
ss
into
js
sub
lods
sti
jmp
pop
shr
pop
sbb
push
sub
fisttpll
arpl
mov
scas
adcb
icebp
call
ret
jae
sbb
das
xor
dec
adc
jbe
jmp
out
jecxz
sub
stos
sub
pop
lea
mov
out
aam
push
sub
push
fcomi
dec
xor
cmpsl
out
push
inc
dec
dec
sbb
push
mov
rcr
push
adc
xchg
mov
sbbl
cmpb
outsl
add
mov
orl
xchg
and
cmp
xor
fldl
inc
pusha
cmpb
add
insb
shrl
pop
push
push
sahf
and
incl
mov
popa
or
rorl
sub
out
mov
pop
test
inc
inc
or
gs
outsb
jo
nop
insl
xchg
xchg
fistps
dec
sub
xlat
inc
daa
imul
in
ds
dec
xor
jnp
adc
shrl
sbb
xor
imul
xorl
mov
incl
mov
push
arpl
inc
lcall
push
shll
mov
xor
mov
xchg
shlb
mov
lahf
push
test
sub
push
mov
sbb
add
pop
pop
jo
stos
shll
imul
and
cmp
or
jmp
test
jmp
push
dec
lahf
add
test
cwtl
push
fsubs
mov
or
ljmp
xor
jne
imul
dec
push
inc
or
add
addr16
into
inc
cli
and
xchg
int
add
xor
stos
andb
jo
push
ret
sbb
mov
pop
xor
imul
adc
out
inc
jns
push
aad
jns
push
push
add
sarl
sbb
adc
and
xchg
mov
into
lahf
mov
pop
xchg
and
cmp
cmpsl
mov
lds
dec
out
sbb
mov
add
xor
inc
shll
test
xor
aaa
sbb
dec
sbb
test
outsb
xor
cld
push
mov
sti
mov
adc
jae
in
fidivl
loope
rcrl
pop
pop
add
mov
stos
add
test
mov
mov
mov
jg
xor
xor
xchg
adc
js
jge
lahf
jne
xor
jge
rcrb
sub
mov
in
iret
andl
nop
jl
dec
outsl
into
test
imul
add
dec
ss
jns
popa
push
jmp
and
lret
fcoms
test
jno
pop
pop
mov
repnz
mov
mov
fwait
inc
ss
das
test
aas
out
mov
jnp
pushf
adcl
int
jb
xor
mov
add
mov
inc
sarb
adc
stos
repnz
pop
jge
outsb
sub
imul
add
mov
jbe
test
xchg
pusha
mov
leave
lods
popa
jo
int
or
dec
push
inc
aaa
test
xor
mov
call
ss
jmp
fwait
mov
cmp
xlat
mov
stc
xor
loope
hlt
xchg
insb
and
sahf
dec
mov
mov
xor
call
ljmp
cmp
arpl
test
out
and
push
adc
neg
mov
ret
insb
test
pushf
imul
jmp
imul
xchg
sti
aaa
or
lret
in
dec
mov
in
and
jae
sbb
mov
leave
in
pop
jae
mov
aas
sub
pushf
cli
ss
mov
sub
add
hlt
inc
xor
sub
jge
fadds
daa
sub
adc
jns
jb
jle
mov
popa
xor
xchg
leave
mov
sbb
lds
fisttpll
fcos
mov
lret
jge
or
hlt
sub
inc
pop
push
fucom
inc
data16
sahf
ret
xchg
mov
cmp
adc
int
push
and
or
popf
or
cmp
push
cvtps2pi
jle
jle
repz
gs
sub
test
stos
dec
push
ss
xor
add
inc
sub
adc
pop
iret
mov
sub
pop
mov
cli
cld
sahf
mov
sbb
mov
fdivr
or
fisubs
add
cld
jne
fistl
outsl
cmp
and
dec
sub
mov
imul
xorb
jae
sti
test
pop
mov
jecxz
in
pop
xor
lea
pop
inc
add
push
push
jl
insb
fcmovbe
lods
mov
cmp
fcoms
test
jg
movl
into
mov
xchg
jle
jae
pop
push
fistpll
adc
xlat
shrb
push
out
scas
inc
roll
push
sarl
add
ds
pop
push
push
movsl
add
inc
adc
jp
daa
jg
movsl
jns
jge
pop
dec
clc
sbb
fisttpll
jnp
cmp
in
loop
mov
pop
stc
cld
sbb
jp
sahf
sahf
and
dec
xor
mov
lcall
xor
ret
es
inc
adc
pop
iret
ja
mov
repz
pop
test
rcll
into
adc
lods
icebp
cli
hlt
imul
inc
or
movsb
repnz
inc
jmp
movsl
lods
outsl
mov
mov
mov
mov
fmuls
dec
adc
sbb
repnz
movsb
and
int3
push
xchg
dec
jle
ficoms
jnp
ret
rol
inc
mov
xor
leave
fiaddl
pop
and
lret
cmp
push
inc
mov
fmulp
stos
push
jge
pop
fdivr
pushl
subl
icebp
fwait
das
mov
jmp
adc
scas
lods
daa
adcl
dec
sti
int
fwait
negl
cmp
mov
sbb
pop
test
mov
in
pop
jne
jl
ret
ja
and
xchg
js
faddl
outsl
pop
mov
xor
sbb
mov
test
decl
jb
fcomps
cwtl
int3
jl
mulb
cs
lods
int
inc
cmp
sub
rclb
sub
dec
jbe
mov
jge
stos
dec
sub
cmp
mov
mov
out
mov
out
shlb
jbe
imul
sub
and
mov
xor
call
rclb
ret
test
loopne
test
lahf
pop
repnz
test
stos
arpl
or
push
xchg
pop
imul
and
push
nop
roll
mov
lock
repz
es
add
and
sbb
mov
repnz
das
jmp
adc
lods
xchg
mov
les
adc
test
icebp
gs
jg
inc
addr16
jae
xor
cmp
mov
shlb
lret
jbe
xorl
not
cmc
leave
je
loop
mov
rorl
ror
and
push
mov
lods
mov
inc
jne
inc
mov
inc
nop
pusha
jp
adc
jp
xor
inc
cmpsb
icebp
xchg
aas
fdivs
inc
dec
jb
pop
xchg
lahf
pop
jle
jbe
pop
jg
or
movsb
adc
ds
or
dec
xor
mov
scas
mov
mov
xlat
pop
sub
sub
sti
lret
sbb
dec
mov
mov
stos
lret
jge
dec
inc
add
sbb
fwait
sub
dec
mov
mov
push
popf
mov
or
in
test
outsb
pusha
call
pop
call
test
xlat
mov
ret
inc
mov
sbb
cltd
ss
jmp
or
and
add
ficoms
mov
sarl
inc
gs
negb
and
repz
nop
fnstsw
js
arpl
jecxz
test
xor
dec
in
insl
mov
and
mov
rsqrtps
push
or
ds
xchg
cmc
vmptrst
push
js
xor
insl
fisubrs
cld
jne
dec
jb
or
stc
movsl
pop
aam
loope
in
add
or
iret
gs
xlat
pop
jp
in
popa
movsb
xchg
dec
out
aas
sub
pop
xorl
mov
gs
sub
hlt
fisttpll
jle
stos
insl
push
lds
and
mov
jbe
leave
sub
arpl
xchg
out
orl
ss
movsb
sub
xchg
adc
insb
mov
call
sbb
orb
inc
gs
push
mov
mov
mov
mov
or
shlb
add
in
push
loop
sub
dec
push
out
jo
mov
xor
sbb
fwait
pop
cmp
mov
jb
into
mov
cld
xchg
adc
lcall
fisttpl
fiadds
or
in
sbb
shll
ret
push
fisubl
mov
sbb
sti
lods
xor
push
mov
and
xor
add
adc
push
mov
test
mov
cwtl
mov
mov
or
outsl
inc
inc
pop
pop
iret
aad
sub
or
xchg
sub
rclb
add
xchg
xchg
in
dec
nop
mov
xchg
cwtl
stc
or
cmp
mov
hlt
sub
mov
nop
dec
xlat
sbb
sti
or
scas
push
lret
dec
inc
rolb
in
xchg
xor
mov
add
mov
std
lods
xchg
mov
ss
leave
mov
cmpsb
mov
insl
inc
out
pushf
int
in
ret
test
repnz
cmp
loop
aad
or
jg
in
and
cmc
pusha
adc
and
insb
mov
in
mov
jb
inc
and
cs
adc
lcall
popf
jno
int3
push
mov
scas
repz
int
mov
lods
and
mov
out
xor
ljmp
add
mov
mov
aad
xor
cld
inc
jge
shrb
xor
ja
test
cmp
out
scas
add
scas
xchg
mov
cmpsb
sti
leave
ror
inc
mov
call
mov
fidivrl
mov
pusha
js
xor
ss
push
aas
or
dec
inc
mov
sub
sbb
sub
in
test
idivl
cmp
inc
add
pop
push
mov
outsb
int
mov
leave
loop
sti
pop
pop
mov
adc
insb
mov
dec
cmp
loopne
mov
sub
stos
or
ficoms
jg
ret
subl
mov
fisubrl
mov
lds
push
lods
cmp
mov
inc
mov
lret
mov
sub
xchg
and
xor
xchg
das
or
movsl
pop
cltd
xor
push
or
call
inc
push
repz
shlb
jmp
int3
fcompl
scas
dec
xchg
sub
or
mov
xor
push
xor
or
mov
inc
std
imul
out
je
aam
xor
or
add
jp
mov
pop
dec
push
ds
scas
outsb
inc
stos
out
test
gs
jno
roll
adc
stos
mov
outsb
sahf
or
pop
mov
and
test
xor
dec
outsb
mov
or
std
add
xchg
mov
push
push
scas
mov
scas
inc
mov
leave
loope
adc
jg
outsl
jmp
call
jne
clc
cltd
popa
int
cs
std
loop
mov
pop
add
inc
or
add
stos
test
mov
lret
mov
icebp
push
imul
repnz
sbb
xchg
stc
add
jle
shrb
xchg
out
sub
jmp
and
popa
or
sub
xchg
jl
jno
dec
scas
roll
mov
inc
jp
mov
pushf
shr
scas
shll
out
cmp
lret
and
loopne
adc
pop
mov
inc
mov
push
push
pop
out
xor
sarb
push
jge
shll
subl
adc
add
mov
aam
mov
mov
dec
in
mov
cmp
pop
cs
lds
mov
dec
das
mov
lea
jns
mov
add
xor
cmp
shr
cmc
cwtl
sub
movsb
test
inc
add
pop
adc
fsubl
addr16
movsl
jno
repz
fstps
and
pop
loope
pusha
cltd
xchg
adc
mov
shl
push
jmp
mov
xchg
mov
mov
shrb
pushf
jg
cmpsb
push
cmpsl
push
insl
jbe
cmpb
push
xchg
cmpl
or
xchg
sbb
push
loop
adc
mov
das
das
lds
lret
lods
fsubs
fldt
sbb
cmp
and
or
rcr
jno
jmp
leave
hlt
leave
test
xchg
int3
mov
jmp
add
sar
pop
sbb
jae
loop
cmp
pop
xor
ljmp
sub
out
cli
mov
ret
test
mov
sub
and
cmp
punpckldq
mov
inc
nop
loop
std
cld
lret
pop
mov
mov
int
mov
push
cmp
sbb
fistps
xor
add
inc
push
loopne,pn
inc
mov
or
popa
lret
pop
fildll
loope
dec
movsl
pop
jo
pop
ljmp
push
jle
stos
cmpsl
test
mov
xchg
gs
in
cwtl
xor
scas
arpl
mov
xchg
pop
and
les
jnp
dec
mov
xor
jle
adc
fsubrl
jae
jp
push
test
int3
dec
inc
sub
sbb
pop
push
xchg
in
lahf
iret
xchg
push
add
and
push
lods
sub
les
and
push
aam
jnp
out
mov
dec
mov
cmpb
mov
and
jb
out
fwait
dec
pop
out
add
mov
les
iret
subl
and
subl
mov
sbb
xchg
jp
push
int3
imul
clc
sbb
clc
movsb
imul
mov
jmp
mov
setb
stc
sub
or
xorb
addl
imul
lret
push
mov
pop
dec
and
cwtl
mov
scas
mov
lock
mov
sbb
jb
mov
xlat
fcom
adc
sbb
dec
aam
pop
xchg
jbe
dec
jne
push
mov
aaa
sub
enter
ds
xor
imul
add
shlb
stos
jmp
adc
mov
pop
arpl
sarl
lds
sub
jo
lahf
fcomps
add
inc
mov
aad
jg
lahf
adc
sub
mov
daa
cmc
out
shlb
mov
dec
clc
fdivrs
dec
jae
mov
mov
pop
adc
sbb
sarb
in
add
sti
xchg
imul
fwait
mov
sbb
push
dec
push
imul
cmp
xor
cmp
out
icebp
stos
and
pop
pop
repnz
in
repz
mov
fwait
in
add
cltd
mov
adc
shlb
pop
dec
movsl
fldl2e
mov
add
cmp
mov
addr16
cmc
popf
and
dec
in
sbb
cmpsl
inc
gs
sub
dec
sbb
rclb
and
push
xchg
and
xlat
xor
out
lock
dec
xchg
inc
pop
push
popf
jae
add
pop
lahf
mov
xchg
dec
jns
jbe
rcr
sahf
pop
jns
jge
incb
dec
ret
mov
cmp
xchg
out
sbb
or
fwait
mov
bound
stos
imul
jge
jle
xchg
pop
je
mov
push
jae
imul
mov
mov
lret
test
stos
imul
insb
dec
cwtl
and
cmpsb
cmp
cmp
xchg
xor
outsl
faddp
lcall
mov
xchg
add
leave
jns
mov
adc
icebp
inc
mov
cmp
pop
xor
inc
and
mov
scas
es
mov
mov
mov
adc
mov
repz
js
cld
push
mov
sbb
jmp
or
and
jg
cmp
lods
fsubs
test
das
fucom
imul
pop
es
mov
push
popa
stos
pop
mov
inc
enter
inc
lret
mov
je
jge
inc
fisubs
test
or
out
in
xchg
inc
aad
lcall
pushf
dec
mov
jp
xlat
push
mov
sbb
loop
xchg
mov
mov
mov
inc
jo
jb
sub
ss
sub
scas
jle
sub
mov
pop
adc
xor
fdivl
pop
cmp
mov
cmc
or
push
in
mov
mov
mov
inc
inc
lret
clc
xor
adc
push
or
mov
mov
xor
sbb
dec
call
and
push
not
xchg
mov
sti
push
bound
pop
das
shll
mov
cmp
call
xorb
pusha
cmp
cli
out
sbb
shrb
mov
mov
fldcw
cmp
aad
jns
iret
or
out
rcll
pop
ret
and
js
scas
stos
adc
dec
rcr
sub
jmp
aad
jae
add
xchg
arpl
sub
popl
lds
and
cmc
push
cmp
roll
addr16
loope
pop
fnsave
mov
push
push
jne
sub
push
mov
outsb
jne
inc
int
test
mov
adc
in
push
cmp
mov
insb
test
and
mov
fs
icebp
fidivs
scas
fistpll
mov
or
xor
push
cmp
das
out
js
add
pop
shrb
xchg
mov
or
bnd
popa
add
lods
mov
sbb
int
movsl
push
sub
mov
shll
sbb
inc
and
ss
rolb
mov
dec
sbb
ss
sbbl
popa
cld
push
pushf
jg
out
jnp
sub
mov
or
divl
and
stos
or
lods
cmc
push
insl
mov
and
mov
std
inc
mov
and
stc
loop
icebp
cmp
fdivrl
mov
pop
mov
xchg
sub
sub
xchg
dec
pop
pop
cmp
out
lock
sbb
fstps
cmpsb
dec
xchg
fldenv
arpl
dec
jmp
lods
xor
stos
aad
sub
jp
ljmp
int3
fadd
xlat
sbb
cmp
xchg
push
call
pop
adc
cld
pop
flds
in
sub
loopne
sbb
push
pop
rorb
and
sbb
js
pushf
and
mov
pushf
mov
jno
shr
xor
mov
jno
stos
xchg
nop
and
movsb
push
xchg
sub
and
cli
push
data16
imul
pop
sti
mov
mov
test
push
insb
jg
mov
xor
movsb
rcrl
jo
mov
sahf
adc
inc
pop
adc
iret
jne
inc
mov
mov
adc
sar
cli
enter
cmpb
xor
jge
xor
inc
lea
in
out
dec
sub
nop
stos
xor
iret
js
and
xor
popa
push
push
jae
lods
jbe
movb
jp
ss
aas
sbb
pushf
push
cmp
out
pushf
sbb
fsubl
xchg
sbb
add
js
daa
mov
lret
ljmp
jnp
xchg
sbb
clc
push
pop
sub
inc
shlb
push
adc
sub
mov
pusha
jle
out
xlat
add
sbb
pop
pop
and
out
leave
repz
and
xor
cli
xorb
aad
scas
xor
adc
xor
xchg
lds
daa
ljmp
int3
mov
mov
pop
jnp
fs
push
cmp
and
adc
imul
mov
fnstenv
cmp
fdivrs
in
ret
call
lret
dec
es
inc
pop
jno
dec
jge
sbb
sub
or
ret
inc
cltd
fsubrp
es
inc
out
push
pop
adcl
ds
in
lret
cmpsb
jl
popf
rcl
lods
idivb
iret
rolb
or
jp
and
or
in
sub
ja
out
xlat
les
outsl
addb
push
jns
push
js
jl
xor
cltd
scas
gs
ret
jle
repnz
xchg
in
sbb
fs
dec
popa
mov
cli
xchg
ret
jmp
mov
sarl
and
cmp
cmp
sti
rcrb
sbb
pop
jecxz
or
mov
push
and
mov
mov
xchg
lods
adc
pop
push
sbb
mov
pop
mov
xchg
adc
shrb
xor
sub
mov
pop
dec
inc
icebp
insl
xchg
jnp
stos
sbb
pop
jo
lds
mov
sub
pop
mov
loope
and
mov
lods
out
or
aaa
push
mov
sbb
test
push
cltd
push
jns
push
xor
outsb
insl
cmc
push
pusha
mov
inc
push
inc
je
sbb
pop
cmp
sub
fdivr
lea
outsl
sbb
add
imul
lods
ret
jno
adc
lahf
insb
or
lock
dec
test
jns
jl
movsb
cmp
push
jle
jg
xchg
int3
sbb
insb
icebp
nop
adc
sub
jl
or
sub
es
fstpt
jg
fdivrl
lret
int3
cs
js
insl
mull
sbbl
loopne
and
mov
mov
test
cli
mov
push
jnp
dec
lret
fdivrl
mov
cmp
les
test
pusha
dec
cltd
daa
shr
inc
jno
inc
or
or
jne
enter
lahf
jo
xchg
lods
xchg
cmp
int
daa
fnsave
decb
xorb
in
test
daa
popl
int
push
ret
out
sub
mov
dec
movsl
aas
dec
lret
loop
lock
mov
xchg
and
pop
popa
mov
mov
cmpsl
xchg
rorl
arpl
mov
leave
mov
mov
dec
ljmp
push
sub
jmp
ficoml
adc
stc
sub
cwtl
pushf
enter
and
push
ret
push
cmp
push
lcall
cmpsb
mov
mov
push
inc
in
out
fcomps
les
ds
fsubs
lahf
and
sub
arpl
lret
sbb
shll
or
push
mov
jno
cmc
pop
fs
or
dec
jle
leave
dec
push
sub
add
scas
mov
sub
mov
sub
jp
push
pop
push
imul
mov
mov
adc
mov
adc
mov
push
inc
push
mov
add
dec
dec
push
xchg
fisttpll
or
ljmp
push
sub
enter
cmpsb
cmp
or
into
push
or
std
xchg
lods
shlb
pop
xor
push
mov
add
fimull
out
call
sbb
cmp
lahf
xchg
adc
test
jge
into
sbb
imul
add
das
int3
adcb
data16
sbb
inc
sbb
das
inc
mov
test
mov
sbb
aas
push
addb
scas
mov
push
mov
shll
push
adc
cmp
and
adcb
cmpsb
repnz
jecxz
inc
cmpsb
les
push
and
cmp
scas
adc
and
cmc
dec
aas
xchg
inc
loopne
ret
gs
and
mov
pop
and
sbb
xchg
andb
repz
outsb
mov
fmul
popl
addr16
sti
adc
lods
push
xor
sarb
dec
shr
pop
cmpsl
inc
lds
clc
push
mov
xchg
or
mov
addr16
inc
mov
inc
push
movsl
pop
add
mov
xchg
cmpsl
adc
aas
mov
dec
ret
cmp
pop
shlb
cld
push
sbb
mov
push
popf
enter
rcrb
lods
pop
xchg
ret
pop
fidivrs
popf
dec
cmp
mov
rcrb
enter
adc
pop
jmp
inc
push
inc
hlt
xchg
lds
negl
sub
mov
cs
addr16
clc
xchg
sbb
and
or
xchg
popa
cmp
add
xchg
sub
jmp
std
pushf
in
dec
shrl
cld
fisttpl
imul
pushf
jo
push
repnz
cli
mov
out
hlt
aam
imul
mov
jo
jno
clc
cmp
hlt
pop
fstpt
movsl
pop
pop
xchg
jmp
hlt
pop
add
ja
out
insl
bound
and
movd
cld
and
inc
sahf
sti
in
sub
je
ds
andb
inc
xor
fmulp
out
mov
cltd
inc
add
lea
mov
pop
add
imul
test
lea
pusha
fcomps
push
xchg
mulb
xor
sbb
in
gs
pop
xlat
shrl
cltd
pop
cmpsb
and
mov
xchg
dec
mov
xchg
and
subl
pmaddwd
adc
mov
cld
outsl
ds
fiaddl
test
sub
lock
lahf
popf
shll
push
push
or
mov
jmp
or
pop
push
movsb
cmp
mov
ficoml
outsb
or
inc
mov
std
dec
jl
fdivrl
sti
addb
sub
jp
mov
mov
push
in
insl
jl
mov
inc
pop
sbb
mov
roll
cltd
mov
mov
fdivrs
test
push
xor
xchg
enter
pop
adc
psadbw
mov
in
or
and
lret
testl
clc
dec
cmp
xchg
sbb
xchg
sub
mov
mov
aad
ficompl
addr16
das
ror
cmp
lcall
in
inc
push
xchg
push
notl
insb
pusha
inc
shrl
flds
and
add
pop
je
imul
push
and
jg
and
inc
xchg
cld
movsb
aad
mov
lcall
sbb
jo
and
cmp
push
call
outsb
sbb
add
pop
out
std
ss
xor
lock
sbb
mov
mov
out
movsb
cs
stc
pushf
ret
jp
xlat
mov
insb
rorb
push
data16
and
pop
and
adc
jmp
cli
clc
test
jmp
jle
push
sub
mov
loop
push
inc
inc
enter
mov
pop
dec
ss
mov
outsb
imul
fwait
mov
xlat
pop
ret
push
pop
addr16
in
insb
or
pop
pop
xor
add
cld
or
sbb
les
adc
clc
insb
mov
xor
mov
and
dec
or
fstpt
and
test
pusha
iret
scas
dec
push
testl
aad
xchg
dec
mov
stos
jg
or
inc
inc
data16
xchg
les
pop
adc
int3
lret
adc
outsl
arpl
push
push
enter
clc
pop
xor
push
loop
sub
xor
or
fiaddl
inc
fists
shll
int3
pop
cmp
mov
cmp
inc
or
or
sbb
and
mov
pop
jae
pushf
push
ds
popa
dec
inc
jecxz
rol
cmpb
pop
out
jg
sbb
call
sbb
lea
cmpsl
lcall
fidivs
repz
fmull
lods
jge
out
stos
pop
fsubr
push
xlat
arpl
dec
cmp
lret
nop
fsubrs
outsl
dec
clc
in
sub
jle
push
aad
xlat
mov
push
pop
cmp
sbb
popa
addl
xor
push
nop
jo
sbb
bound
xchg
xchg
jl
out
xor
movsb
pop
dec
cs
test
push
jno
stos
xorb
adc
jmp
pop
push
mov
pop
sub
insb
push
jnp
and
inc
and
xor
pop
fst
cmpb
push
add
push
inc
push
and
push
jno
aas
cmp
push
xlat
and
shll
and
sbb
cmpsb
movsb
fidivl
mov
testl
add
mov
outsb
sar
push
fisubs
mov
cwtl
test
dec
notb
loop
push
mov
mov
xchg
fiadds
cmp
push
scas
daa
pop
mov
and
cmp
xor
sbb
test
push
rsm
mov
pop
mov
mov
mov
fildl
daa
enter
notb
cld
hlt
adc
mov
movsl
lds
shll
jo
xor
icebp
or
push
imul
or
cmc
jl
xor
out
pop
fldcw
scas
jb
push
inc
repnz
andl
sbb
inc
mov
dec
pop
in
call
into
xchg
jmp
mov
xor
push
je
xor
inc
popf
mov
jne
dec
xlat
aaa
daa
lea
xlat
or
xchg
lret
xor
sub
cmpsl
hlt
shrl
cld
fld
adc
sub
dec
xchg
movl
in
mov
fnsave
push
pop
xor
jg
jle
dec
pop
add
push
gs
jmp
call
cltd
pop
mov
dec
je
in
rcrl
push
inc
ret
push
cli
sbb
rcrl
jae
and
xchg
subb
dec
adc
jno
in
ljmp
mov
popf
arpl
xlat
popa
repz
xchg
fiadds
jle
repnz
xchg
add
cmpsl
shlb
jno
lock
mov
loopne
out
adc
cmp
mov
pusha
fmulp
pusha
or
cmp
xchg
lea
jno,pt
add
aaa
insl
mov
ljmp
and
xor
mov
sub
cli
sub
movsl
stc
int3
imul
and
es
xchg
arpl
inc
mov
jp
push
jae
mov
jp
dec
jge
mov
cmp
dec
push
xchg
pop
imul
cmpsl
movsl
xor
dec
dec
ret
jp
das
or
pop
fiaddl
shlb
jae
lds
rolb
push
int3
jmp
orb
fnstenv
leave
sbb
aam
fstl
ds
or
lahf
pop
sbb
xor
push
cltd
loopne
xchg
and
xchg
in
mov
pop
enter
push
mov
ljmp
popf
mov
sbb
mov
in
xchg
mov
sbb
out
push
xor
dec
cmp
mov
mov
push
popf
out
insb
push
push
xor
pop
pop
fldenvs
fwait
leave
pusha
dec
cli
aas
mov
inc
mov
out
ss
dec
xor
scas
ficoms
in
dec
pusha
cmc
jmp
jae
es
and
push
adc
or
aaa
mov
push
mov
pop
xor
outsl
insl
and
sbb
jmp
xchg
daa
lods
ljmp
adc
outsl
pop
lret
nop
mov
jg
dec
pusha
cmc
ja
outsb
popa
mov
insb
imul
call
ds
sbbb
cmp
lret
clc
sbb
popf
popa
sbb
popf
pop
sub
cmc
sbb
mov
inc
jl
and
ja
sub
aas
fsubs
cmp
int
adc
lret
xor
cld
add
sbb
and
cmp
insb
pop
nop
pop
xchg
dec
insb
mov
push
mov
movsb
cld
dec
jle
pop
push
inc
scas
push
fnstsw
mov
mov
adc
jns
mov
adc
ljmp
nop
subl
pop
mov
cmp
sub
std
lcall
jb
stos
stc
mov
sub
lock
aas
mov
inc
fwait
mov
or
cmp
add
inc
std
movhps
mull
push
movsb
xchg
cmp
fidivs
jae
push
cmp
cltd
repnz
add
lahf
sub
sbb
ljmp
pop
std
test
jbe
repz
lcall
dec
aam
mov
rorl
nop
adc
ja
movsl
inc
aam
dec
lret
push
repz
mov
out
sbb
iret
push
test
jecxz
aad
in
mov
jns
jmp
loop
inc
ret
out
test
sub
jns
test
sbb
jo
mov
or
loop
das
js
inc
mov
xor
addr16
mov
pushw
add
outsb
dec
aaa
mov
test
cltd
add
inc
fsubl
out
and
push
test
cmp
mov
mov
sub
nop
jbe
je
mov
out
jl
sub
adc
repz
inc
xor
iret
pop
icebp
lods
iret
dec
dec
scas
xchg
or
data16
pop
fcoms
mov
xor
and
pop
clc
sahf
sahf
loopne
pop
adc
loop
mov
jns
inc
pop
lods
or
push
jge
mov
push
popa
xor
pusha
cmp
in
jns
imul
nop
fcmove
sbbl
xchg
xor
mov
movsl
xchg
jnp
pop
test
popf
inc
sbb
and
and
pop
xchg
subl
stos
ljmp
dec
inc
dec
jg
pop
stc
in
cmp
lds
leave
ret
inc
jle
push
cld
mov
sbb
pop
pop
cmpsb
push
fsubrp
lret
sbb
jmp
push
repnz
sub
mov
cmc
movsl
inc
mov
mov
mov
dec
sub
iret
test
out
add
sbb
and
popa
dec
daa
dec
jp
push
sbb
add
mov
test
gs
xchg
mov
push
xchg
dec
ja
stos
jbe
mov
sbb
lods
sbb
cmp
and
inc
out
fadds
ds
mov
xor
in
pop
mov
fwait
cld
rclb
dec
ret
ret
dec
jp
push
dec
fidivs
pushf
aad
insb
cs
daa
das
cld
or
mov
sarl
fnstcw
outsl
sub
stos
mov
jg
aad
jmp
push
idivl
shlb
add
loopne
rcrl
xchg
push
push
in
enter
add
inc
adc
xchg
dec
add
inc
push
in
or
in
ret
pop
and
bound
not
adc
sub
mov
ret
jbe
stc
ret
out
pop
pusha
lret
or
xchg
cmp
add
xchg
and
adc
and
pop
lock
test
movsl
add
xchg
lret
push
mov
dec
fcompl
dec
iret
fs
sahf
and
xchg
mov
movsl
stos
jmp
insb
inc
bswap
cmpl
outsb
in
adc
sub
mov
cld
lcall
bound
aas
test
movsl
mov
popa
xor
leave
into
inc
out
ret
ret
gs
sub
mov
add
lea
gs
jns
sbb
mov
sbb
xchg
adc
aas
js
or
add
xchg
and
mov
jmp
inc
mov
sbb
push
decb
dec
pop
inc
faddp
rorl
lret
jmp
mov
in
lds
xchg
dec
out
sub
mov
gs
popf
nop
fwait
aam
stos
pop
pop
mov
cmp
cs
jecxz
mov
xor
or
vpaddw
idivb
je
aas
int
add
in
xchg
sub
out
enter
popa
in
adc
mov
push
jne
dec
jne
inc
sbb
jnp
ret
push
pusha
iret
in
xchg
ljmp
push
mov
xchg
jp
push
and
push
mov
add
push
xchg
xchg
push
pusha
push
notb
push
mov
add
addr16
movsl
mov
popa
dec
mov
push
adc
dec
sub
into
sub
repnz
push
pop
stc
fs
xchg
stc
dec
cmp
sbb
fdivrs
xor
sub
cmp
outsb
pop
loope
std
stc
rcrb
int3
mov
ljmp
mov
cmp
pop
sub
lods
pop
sbb
jp
in
xor
call
repz
lock
cmp
mov
sbbl
xchg
in
cs
cli
int
ss
sbb
addl
sar
push
pop
hlt
int
xor
mov
xchg
jmp
out
cmp
ljmp
jbe
lahf
push
stos
and
cwtl
jge
jmp
loopne
mov
adc
gs
cwtl
div
fiaddl
mov
int3
or
xchg
outsb
pop
popa
loop
in
jmp
xor
stos
sub
dec
sbb
repnz
test
cld
idiv
popa
or
jb
mov
dec
cmp
iret
in
hlt
inc
push
xchg
jmp
jno
or
cmpsl
and
inc
scas
fdivl
adc
jns
mov
call
xor
add
into
test
pop
mov
stc
push
mov
frstor
cmpsb
jle
inc
les
mov
xor
sbb
sbb
es
iret
pop
cmp
jecxz
ret
repz
ret
mov
inc
jo
add
mov
mov
sbb
xor
add
aad
sbb
jmp
mov
jecxz
dec
fdiv
xor
cwtl
repnz
movsb
mov
int
pop
adc
mov
insl
out
xchg
test
and
dec
je
mov
adc
mov
mov
inc
lret
xchg
jae
mov
xor
adc
push
test
js
xchg
stc
mov
dec
popa
pop
jp
leave
pop
int3
test
daa
cmp
fsub
cli
lret
add
jl
loopne
fstl
out
shrb
jno
cmp
dec
push
lods
mov
and
dec
jmp
rcl
push
out
icebp
and
adc
testb
pop
xchg
in
std
sub
dec
shll
or
pop
cmpsl
sub
imul
addr16
fimull
push
and
movsl
mov
mov
add
in
insb
sti
fs
cmpsl
orl
add
flds
js
cli
pop
push
imul
xchg
imul
jbe
cmc
mov
les
aad
inc
inc
lods
loopne
lock
xchg
mov
cmc
sub
xchg
in
mov
cmp
aam
js
shlb
and
decl
xchg
out
lcall
int3
pop
je
inc
jnp
jbe
out
out
push
dec
ja
mov
push
xchg
mov
dec
jns
inc
call
test
iret
fcos
pop
loop
test
xlat
or
dec
xorl
insl
fwait
stos
sbb
out
insl
pop
pop
push
insl
jmp
sub
iret
fsubl
push
jnp
inc
mov
dec
jge
push
add
sub
arpl
mov
lds
add
xchg
adc
in
into
loope,pn
jns
and
sbb
out
inc
pop
fsubrl
loope
lods
or
pop
call
dec
call
movsl
xchg
xor
adc
push
scas
sar
mov
mov
mov
sarl
imul
inc
and
js
or
jecxz
xchg
add
outsb
or
xchg
mov
and
iret
jbe
loop
repz
push
cmp
mov
inc
pop
push
lods
push
mov
jbe
and
int
cmp
xor
mov
sahf
adc
cmpsb
inc
scas
cmp
jno
xchg
outsb
jge
push
sti
add
xchg
aas
mov
dec
out
daa
negb
int3
std
pushf
jnp
sbb
lock
dec
clc
ss
cwtl
jg
and
push
stc
cmp
inc
or
iret
sbb
dec
js
popf
popa
dec
pop
inc
ret
aam
repnz
pusha
bound
mov
out
je
pop
into
not
xchg
cmpsl
insb
mov
ljmp
dec
je
pop
dec
cltd
lahf
dec
jns
mov
dec
bound
dec
jne
xchg
inc
in
out
adc
aaa
inc
adc
jg
sub
inc
xchg
jnp
shr
adc
stos
bnd
ret
fcoms
xchg
cmp
insb
xchg
roll
test
mov
pop
cmp
xchg
sarb
push
jnp
mov
test
push
and
popa
movsl
pop
or
mov
pop
add
loop
push
add
movsl
jp
lret
adc
decb
jle
and
cwtl
enter
xchg
in
push
pop
int
or
jp
gs
xchg
movsb
into
cmp
insl
mov
push
pop
inc
inc
js
sbbl
inc
inc
jbe
outsl
scas
in
addr16
ja
pop
push
sbb
push
mov
into
jnp
popa
mov
xchg
scas
aaa
in
dec
outsb
sbb
xor
fwait
addb
ds
adc
sahf
mov
pop
data16
sub
ds
pop
inc
pop
push
int3
shrb
shlb
cmpsl
mov
xchg
mov
pop
mov
jecxz
shll
mov
in
mov
sub
rolb
sbb
pop
sbb
mov
cmp
jl
dec
jnp
mov
push
stos
mov
mov
out
jg
iret
jb,pt
sub
and
xor
adc
imul
mov
ja
jl
adc
pop
adcb
and
fwait
sar
jns
dec
rcr
addr16
lds
leave
cwtl
test
fwait
ds
xchg
mov
cmc
mov
in
hlt
scas
pop
cltd
rorl
pop
fnstcw
push
sbb
mov
jmp
cld
test
bound
das
jae
jge
xor
psubd
ret
mov
mov
ja
sbb
sbb
popf
cmpsl
sub
mov
in
adc
mov
mov
insb
sbb
xchg
icebp
push
out
push
js
cwtl
or
dec
cmc
outsb
xor
ja
shlb
or
pop
imul
es
ret
fstpl
pusha
das
dec
xor
or
or
adc
repz
pop
cmpsb
sahf
xchg
subl
mov
aaa
mov
or
inc
enter
xor
push
popf
mov
outsb
mov
sub
mov
xchg
pop
test
loope
ja
mov
stc
sub
sub
arpl
ficoml
imul
adc
test
cmp
neg
testb
inc
mov
add
jp
test
sbb
ds
push
push
add
sub
inc
mov
faddl
aad
xor
jmp
sub
xchg
pusha
sub
xchg
push
pop
pop
dec
stc
shll
les
xchg
in
push
cmp
fnclex
jo
inc
adc
jne
stos
andb
mov
or
pop
pop
dec
sub
sub
aas
sbb
inc
lds
mov
mov
xor
sub
int3
and
dec
andl
pop
rcl
popf
and
stc
ficoms
mov
inc
push
outsl
mov
dec
cmpl
jge
out
mov
jle
cltd
faddl
xchg
or
jno
stos
pop
and
mov
fnstenv
xchg
es
and
xor
xchg
mov
cmpsl
inc
ret
jge
cmc
stos
push
inc
pusha
inc
fldcw
adc
xlat
jb
test
loopne
mov
negl
out
mov
dec
sub
int3
mov
push
mov
in
jmp
fstl
in
test
rcll
jne
shll
lods
inc
lds
mov
negb
sub
cli
add
jg
jecxz
scas
xor
mov
jbe
je
pop
jae,pn
loopne
inc
in
cbtw
push
lea
xchg
dec
inc
push
mov
adc
repnz
in
xorb
pop
les
add
popa
rcrb
inc
into
pop
sub
jl
cmp
rcrb
rcrb
mov
pop
inc
and
cmp
sub
pusha
xchg
outsb
outsb
ss
outsb
push
xlat
insb
in
arpl
inc
xchg
xor
pop
les
mov
js
bound
inc
jo
and
leave
out
xor
fs
sbb
xchg
repz
rcrb
sbb
xor
fcoml
cltd
dec
test
mov
in
nop
scas
lea
mov
xor
jnp
push
and
xor
out
fidivrs
sub
mov
arpl
popaw
jo
lock
inc
sbbl
insl
aas
sub
into
sbb
inc
push
cltd
mov
outsb
inc
imul
dec
repnz
out
aaa
sub
inc
arpl
xchg
mov
inc
cmp
into
mov
cmp
sub
daa
xor
xchg
arpl
xchg
or
mov
adc
mov
and
iret
push
push
in
stc
dec
ljmp
pop
int
aaa
lahf
shlb
mov
leave
sbb
or
adc
test
sar
test
xchg
mov
inc
out
sahf
and
push
lods
inc
sub
cmp
adc
outsb
or
adc
test
sahf
fsubs
jmp
dec
sbb
jle
pop
stos
xor
jbe
les
es
insl
adc
popa
bound
lea
pop
out
xchg
aas
leave
orl
jmp
jg
mov
jae
outsl
inc
xchg
loop
push
xchg
ljmp
lret
jne
adc
pop
jl
jp
rolb
mov
andb
in
test
mov
pushf
movsb
ror
test
sbb
mov
and
leave
mov
aaa
push
cltd
icebp
aas
gs
and
insl
add
in
mov
mov
mov
in
sar
fstpl
mov
out
mov
ret
add
jge
xchg
xor
mov
xorl
sub
orb
push
inc
dec
pop
mov
mov
jmp
jbe
inc
pop
lcall
push
inc
xchg
pusha
iret
pushf
dec
pop
xlat
inc
lds
aad
push
push
outsl
add
push
scas
pop
mov
mov
inc
aam
daa
stos
je
jmp
int3
insl
xchg
push
inc
xor
scas
popa
jne
stos
mov
orb
cmpsb
or
or
mov
xchg
dec
sbb
cmp
sbb
pause
xor
bound
cmpsb
das
scas
aad
jb
mov
scas
dec
fdivrs
or
cltd
sub
jb
scas
sbb
push
pop
pop
inc
aas
ss
lahf
cmp
adcl
bound
pusha
lea
mov
mov
mov
das
jp
xor
mov
std
stc
pushf
cmp
addr16
in
jle
mov
loope
cmp
and
inc
test
clts
mov
lock
fidivrs
xor
popa
sub
mov
test
lret
mov
ljmp
mov
mov
mov
sub
push
xchg
push
inc
addr16
mov
repnz
sbbl
les
push
pop
xchg
inc
enter
out
mov
stos
jne
mov
rcrb
pop
mov
sub
mov
test
dec
jo
cltd
adc
mov
loopne
mov
nop
jne
adc
inc
xchg
int3
push
stc
pop
repnz
lods
stc
lret
xor
dec
fwait
or
push
push
jo
sub
aad
sub
add
dec
inc
mov
and
push
push
inc
adc
iret
xor
cmpsl
hlt
ss
ss
xor
xor
in
add
shll
fs
js
sub
sbb
adc
movb
cmc
pop
subl
repz
fstpl
xchg
popf
add
sbb
mov
or
movsb
adc
xor
cmp
xor
aas
cmpsb
sti
jbe
xchg
ljmp
add
dec
jmp
mov
shr
sbb
test
imul
ficoml
cli
cmp
xchg
sub
mov
insl
push
mov
inc
mov
xlat
cmp
pop
lcall
xor
scas
aaa
cmovg
add
mov
sub
add
clc
jo
pop
dec
mov
xchg
dec
inc
sub
pop
cmp
or
jne
imul
ja
enter
push
loope
jg
xor
dec
jbe
inc
inc
pop
xchg
push
sub
data16
mov
rolb
sub
inc
lret
loopne
inc
lahf
orb
mov
rorb
xchg
xchg
add
movsb
lods
in
dec
jecxz,pn
push
xor
addr16
adc
jl
inc
xor
cld
repnz
ja
add
push
ucomiss
addr16
incb
fnsave
sub
and
xor
xlat
sbb
scas
dec
ja
lea
js
cltd
test
xor
xchg
jmp
adc
int
mov
outsb
dec
cld
icebp
sub
arpl
test
jno
mov
aam
stos
xchg
jge
jmp
inc
mov
outsb
neg
insl
xor
imul
push
pop
jo
jb
cmp
aam
loop
test
push
add
fisttpll
or
xor
cli
mov
test
fdiv
pop
loop
test
int
xor
stos
cs
arpl
scas
mov
mov
mov
cli
jbe
mov
push
movsl
mov
sahf
inc
pop
xchg
cmp
mov
mov
enter
xor
jnp
push
xchg
jno
jno
aaa
sub
cmp
cmp
add
mov
push
jmp
pop
adcl
xor
fsub
xor
adc
mov
lcall
pushf
push
adc
mov
inc
movsl
int3
ss
push
xor
push
push
and
jno
mov
pop
or
data16
mov
xor
test
test
in
fsubr
dec
add
ret
aam
sub
sbb
shlb
cmpsl
cmp
push
jge
out
push
mov
jg
outsl
inc
sahf
test
imul
leave
clc
sbb
aam
lds
ljmp
mov
xlat
insb
outsl
fdivrs
or
paddq
cltd
sahf
dec
mov
add
aas
sbb
popa
shl
lret
xchg
test
cmc
add
sbb
mov
push
hlt
pop
lahf
add
push
out
fwait
adc
mov
mov
jbe
int
sbbb
pop
data16
dec
jp
sub
pop
push
repnz
orb
orl
push
lahf
int3
mov
leave
jmp
inc
loope
rol
mov
or
jb
mov
inc
adc
fisttpl
shlb
aas
push
scas
push
ds
adc
mov
add
mov
lcall
testb
inc
dec
add
xchg
leave
jmp
xorl
popa
mov
adc
repz
push
inc
dec
or
sub
cmp
out
push
in
push
dec
adc
ret
cmp
leave
and
in
outsb
nop
adc
sub
pop
out
mov
pop
push
adc
sub
cmp
aas
sbb
push
push
stc
jg
jnp
inc
data16
sub
add
out
cmc
pop
rcrb
or
sub
fwait
xor
or
mov
xchg
cmp
or
aaa
jl
cmp
sub
mov
movsl
fmuls
jge
xor
stos
dec
cmp
sub
ljmp
mov
mov
pop
and
loopne
or
ds
idivl
ret
inc
add
mov
jnp
lods
adc
adc
adc
int
mov
push
or
sub
das
fs
aaa
ljmp
pop
jp
mov
repnz
test
cmp
jns
sub
pop
adc
fstl
fsts
push
in
loop
pop
cltd
pop
cld
jno
cmp
pop
push
movsl
sub
inc
jo
jbe
push
lret
cmc
aaa
mov
lods
ret
mov
fistpl
scas
imul
test
sbb
inc
mov
and
cmp
pop
fadds
mov
pop
popf
push
cmp
mov
icebp
mov
xchg
sub
and
or
popf
mov
repnz
push
sti
jae
push
pop
jno
repnz
jae
push
scas
scas
adc
out
cltd
lock
sti
mov
pop
and
popf
fmul
pop
sub
daa
cmp
xlat
and
into
movsb
les
jp
dec
scas
cmc
loop
inc
sbb
or
pusha
leave
xor
std
push
mov
enter
mov
sbb
fldl
fmull
fxch
pop
or
ficoml
dec
sti
loope
dec
adc
insl
jnp
bound
or
xchg
inc
pop
lahf
out
iret
inc
xor
jmp
cld
pop
rclb
jns
fwait
movl
fistpl
jo
ret
cmp
pop
test
lret
mov
jbe
mov
stos
cs
mov
fdivrl
bound
sub
outsb
jnp
xor
adc
in
cmp
and
lahf
rolb
test
mov
inc
push
push
sti
push
sti
adc
inc
jnp
add
mov
adc
pop
fiadds
and
imul
out
fldenv
enter
xor
fcoml
push
nop
test
enter
jp
mov
or
push
mov
adcb
dec
aaa
xchg
xchg
or
xchg
enter
xor
divb
adc
arpl
mov
xchg
lods
xlat
and
sub
lret
or
dec
shrb
mov
adc
push
ja
sbb
call
aaa
jp
ret
push
je
mov
dec
xchg
adc
adc
movsl
inc
mov
mov
into
mov
pop
mov
or
subl
sbb
sti
add
ja
aad
movsb
cmp
loopne
out
push
and
xchg
pop
mov
jo
aas
imul
ficomps
lds
xchg
lds
clc
mov
rolb
into
inc
stc
fcoml
rcrb
rcl
or
movsb
fs
dec
jb
cmp
mov
xor
or
sahf
jecxz
push
cmp
cmpsl
xchg
inc
dec
push
lret
call
repz
cmp
in
push
push
ss
or
push
mov
sub
addr16
in
in
dec
pop
xchg
adc
jo
ret
push
iret
adc
xor
ljmp
das
test
jp
outsl
mov
je
enter
and
jbe
push
andb
sarl
test
mov
les
fbld
sti
or
stc
daa
pop
xchg
ja
pop
repz
into
addb
sbb
mov
xor
fdivrs
xor
ficomps
or
add
push
jp
jg
mov
xchg
mov
pop
and
add
push
jle
je
push
cmpsb
cmp
mov
and
mov
mov
jb
push
pusha
mov
lcall
cmp
shll
xchg
imulb
jge
push
dec
jbe
xor
scas
mov
inc
mov
xchg
mov
sub
xor
notl
rcrb
mov
push
pop
in
sub
lods
push
jl
pop
lcall
out
sub
lods
and
and
push
push
andb
insb
mov
and
sub
sub
mov
cli
add
inc
xor
fcoml
inc
pop
repz
movsl
jb
xchg
rol
mov
fldt
fistps
sub
out
div
xor
cmp
push
or
call
es
outsl
fprem
mov
mov
dec
mov
js
mov
adc
xchg
lret
mov
fcompl
mov
insl
insb
inc
jae
jnp
and
adc
and
clc
mov
pop
arpl
dec
adc
sub
clc
push
ljmp
adc
test
cmpsb
push
mov
or
clc
rcrb
xchg
jo
addr16
ljmp
push
leave
out
or
or
xchg
adc
xorl
stos
cld
sub
jno
sub
lods
int3
xorps
fldcw
sub
pop
sahf
stos
jmp
daa
dec
pop
sub
jo
dec
pop
rorb
lods
fwait
sub
xchg
push
add
fldcw
das
mov
inc
popa
xor
xor
ja
test
popa
stc
push
sub
dec
movsl
push
dec
loop
adc
sahf
movsb
addr16
inc
stos
hlt
sbb
jmp
pop
dec
int
int
or
test
cli
push
cmp
xor
lods
stc
imul
sti
scas
test
es
jne
repz
push
shlb
xchg
aaa
lock
cmp
adc
aam
sub
mov
xorl
inc
sub
jae
ja
push
idivb
loop
dec
int3
sub
sbb
jl
aad
fs
cmp
xor
inc
xchg
test
mov
push
add
jnp
add
mov
fcmove
jo
jmp
ds
test
cmp
sub
rorl
mov
and
xor
mov
andl
jge
jmp
adc
imul
xorl
or
jp
inc
pop
adc
loop
daa
push
and
xor
shl
mov
xchg
or
xchg
stc
add
jmp
aad
pop
sub
push
mov
mov
mov
jno
pop
push
adc
jae
adc
lods
stc
cwtl
xchg
icebp
xchg
mov
jg
das
xor
call
leave
mov
aas
popf
xchg
cmpsl
or
ljmp
jae
adc
lahf
das
push
test
adc
and
std
pop
das
aaa
popf
stos
sub
sub
nop
mov
pop
subl
es
movsb
in
inc
fldcw
clc
mov
push
std
inc
imul
lahf
fisubl
fdivrl
or
fidivrl
pushf
icebp
rcrl
mov
stos
aad
lods
add
iret
fbld
mov
pop
das
xchg
scas
mov
jbe
out
pusha
xor
cmp
sbb
or
mov
pop
inc
ret
ret
and
pop
mov
jae
add
xlat
imul
or
xlat
push
popa
push
jecxz
dec
sub
in
or
inc
sbb
in
dec
mov
in
pop
pop
mov
stos
int3
jne
inc
xor
mov
push
mov
lret
sbb
dec
mov
cmp
mov
bound
fisttps
jnp
outsl
sub
xor
shl
jnp
push
mov
or
mov
into
pop
enter
rcll
es
mov
sub
inc
das
sub
std
test
cmp
or
pop
jecxz
cwtl
int
shll
das
inc
and
in
out
sahf
stc
stos
cs
fstpl
ret
push
bnd
scas
pop
call
mov
lahf
dec
pop
add
jle
adc
js
stos
scas
mov
scas
inc
and
lods
sbb
scas
fsubrl
cld
sub
test
lret
pop
cli
push
xchg
push
in
std
imul
aad
mov
dec
pop
aam
shl
ret
jmp
push
xchg
bound
pop
stc
xchg
popa
sbb
cmp
push
lret
mov
xchg
addr16
mov
and
bound
mov
movsb
stos
xchg
and
loop
cmpsb
imul
xchg
movsl
call
fbld
cld
sahf
ret
dec
loop
test
idivl
lods
loopne
jne
push
push
xor
mov
inc
jge
cmpsb
dec
mov
stc
add
sub
sbb
fdivrs
pop
rolb
bound
cmp
cld
pop
adc
dec
add
inc
mov
mov
ljmp
cld
jle
cld
js
push
out
xchg
adc
jbe
in
in
push
movsl
imul
cmc
jp
jae
adc
pop
and
pop
daa
sub
push
test
les
cmpb
loop
in
xchg
aad
mov
flds
sbb
xor
add
mov
mov
fs
xor
sbbb
push
adc
xchg
adc
or
test
jge
add
add
cmpsb
sti
xchg
arpl
push
stc
fidivrl
insl
push
out
cmp
cwtl
clc
pushf
repnz
nop
pop
pop
xchg
fstpl
scas
cmp
loop
insb
daa
jb
pop
mov
lcall
loop
ficompl
lret
xorl
movb
sbb
testl
cs
cmc
dec
ja
dec
xchg
pop
mov
sti
aam
pop
xor
cli
xor
xchg
repnz
es
movsl
pop
inc
and
int3
pop
mov
jmp
push
bswap
call
mov
mov
in
fwait
out
pusha
shl
and
sti
dec
sub
and
mov
push
lahf
or
sbb
dec
pop
xchg
and
push
xlat
push
mov
movl
inc
mov
inc
lock
mov
xchg
mov
add
sbbb
ja
inc
cmpsb
fidivrl
outsb
mov
insl
inc
out
stos
cmpsl
js
dec
jo
lret
shll
mov
pop
js
fmuls
xor
and
daa
sti
dec
fistl
lea
and
scas
jle
mov
push
add
ljmp
repz
loope
or
sti
arpl
sbb
xor
pop
xchg
cmp
lret
mov
call
cmc
xor
push
inc
dec
jl
test
sub
dec
adc
mov
push
fcompp
xchg
stc
or
inc
cmp
xor
jno
lds
xor
jg
es
testl
mov
sbb
mov
cmp
push
xchg
xor
inc
xchg
scas
xchg
adcb
push
adc
xor
jl
std
insl
mov
es
into
push
adc
cmp
push
addb
xor
enter
stos
mov
xlat
in
outsb
cmc
sbb
call
mov
push
hlt
in
cmpb
mov
andl
ficoms
sub
push
pop
inc
ret
or
cld
and
mov
push
mov
ljmp
repz
and
lds
aas
mov
cmp
popf
aam
fs
divb
xchg
bound
sub
mov
arpl
mov
aam
stos
mov
and
and
push
hlt
outsb
inc
fnstenv
leave
mov
jno
in
fnstenv
lea
xchg
inc
shlb
cld
sub
xchg
incl
xor
pop
sub
push
cld
sub
sub
sti
jno
and
rorl
sbb
mov
ss
and
add
sub
fsubrl
mov
imul
testb
pop
fwait
scas
xor
mov
daa
cmpsb
or
idivl
pop
sbb
inc
insl
lret
imul
jno
xchg
bound
fwait
das
loopne
jne
enter
inc
mov
test
out
lods
imul
cltd
int3
cld
add
loopne
cmp
aaa
mov
or
mov
inc
jae
cmc
out
mov
out
sbb
test
push
and
aad
adc
lock
pop
inc
fnstenv
inc
cmpsl
lahf
and
push
pop
out
movl
jns
push
push
jle
push
inc
ret
and
leave
jg
pushf
daa
inc
cltd
sub
mov
aad
mov
push
push
shlb
sub
inc
mov
dec
pushf
imulb
sbb
adc
into
dec
insl
and
cwtl
jecxz
lea
sbb
xchg
xor
cmp
stos
es
adc
mov
daa
repz
pusha
ficomps
movsb
sbb
inc
les
into
jmp
mov
sub
mov
call
out
movsb
mov
shrb
inc
fcoml
adc
clc
lds
aam
jge
jg
int
test
pop
call
lret
push
push
loope
adc
aad
lds
loopne
and
cmpsl
sub
push
ret
jmp
push
loop
cld
mov
rorb
mov
push
inc
cltd
shll
sub
add
inc
pop
mov
pop
jge
out
jne
sub
mov
mov
mov
mov
addr16
into
popa
lock
test
jae
ret
sahf
incb
scas
aam
push
in
pusha
lds
and
push
xchg
test
mov
lahf
aad
mov
add
cmp
push
stos
cs
mov
jo
adc
cs
or
fstl
fwait
repz
inc
jle
jno
test
std
sub
add
mov
ficompl
sbb
test
fnsave
and
cmp
mov
orb
dec
dec
repnz
enter
jb
movsl
and
nop
mov
cmp
mov
in
xchg
adcb
fs
push
xchg
xchg
adc
mov
and
outsb
jbe
faddl
aad
mov
mov
mov
lret
xor
pop
dec
jl
iret
in
cmp
sbb
cmpsb
dec
mov
clc
ficompl
and
pop
cld
xor
xchg
nop
popf
mov
int3
out
mov
add
fstpl
sub
mov
test
dec
comiss
je
xor
jge
xor
inc
pop
incb
pxor
mov
inc
in
add
push
cli
mov
inc
jb
popf
bound
push
jo
shll
cmp
lcall
sub
push
push
lods
stos
mov
push
repz
cmp
adc
inc
shrb
mov
mov
dec
iret
sbb
sub
sub
pop
sbb
push
int3
cli
mov
fwait
lods
dec
mov
iret
cmp
mov
add
loopne
ss
imul
xor
lret
fcoml
mov
leave
jno
movsl
out
ja
cmp
lods
sub
mull
xchg
stc
js
stos
pop
mov
ds
sub
add
lods
fldl
sahf
dec
push
fimull
mov
jl
loope
ret
jae
sbb
pushf
or
repnz
adc
jmp
cli
mov
jp
cmp
lret
xor
roll
sbb
mov
mov
jb
gs
jno
stos
add
outsb
mov
pop
scas
push
shlb
sbb
cmp
negl
jg
mov
sbb
stos
int
ds
pop
inc
call
ja
shrl
lcall
and
jne
mov
jecxz
jp
or
ret
adc
fmuls
inc
or
mov
shl
paddsb
add
scas
or
cs
ja
pop
add
sahf
rcrl
push
rolb
shrl
dec
adc
mov
push
aas
loopne,pn
ds
out
les
pop
mov
in
pushf
mov
xchg
xchg
xchg
jno
adc
mov
insb
xchg
les
cmpl
or
testb
dec
jb
cmpsl
cmpsb
sbb
mov
out
lock
push
testb
cvttps2pi
xchg
add
pop
mov
int
push
cld
sbb
enter
idivl
jo
stos
push
mov
fwait
jo
bound
or
stos
xlat
xor
add
fdivrl
shrl
loope
popa
sbb
out
outsb
mov
sbb
pop
inc
add
clc
mov
repz
jne
stos
mov
fs
cmp
pop
lea
adc
dec
mull
mov
rorl
lea
xor
addr16
push
les
rcrb
sub
test
jns
dec
mov
ja
mov
and
je
inc
cmc
pop
mov
lea
fstpl
out
sub
ljmp
inc
imul
shll
test
xor
xchg
addr16
add
or
pop
test
inc
mov
hlt
jns
in
sub
call
pop
das
ss
js
cmp
add
xor
inc
ret
dec
scas
loope
insb
sub
fwait
or
into
push
mov
rol
vpmacssdql
je
cmc
xchg
push
lret
vmulss
int3
movsl
add
jge
cltd
push
mov
shlb
das
sub
fisubl
push
scas
add
add
mov
mov
das
xchg
push
add
mov
push
movsl
jge
xchg
mov
cltd
push
dec
and
rolb
push
sub
sbb
lea
shl
repnz
mov
xor
adc
mov
shrb
js
aas
add
scas
test
addb
insb
into
sti
push
or
inc
or
push
inc
push
ljmp
es
adc
jecxz
push
push
fcompl
stos
fidivs
xor
out
stos
aad
xchg
adc
xchg
mov
push
imul
xchg
xor
cltd
sub
sbb
sti
or
push
pop
sbb
into
sahf
ret
test
xor
popa
repz
hlt
cmp
mov
jmp
mov
arpl
or
mov
test
jae
fstpt
add
les
dec
jb
add
xchg
gs
lock
mov
or
and
test
mov
aas
jb
and
jnp
int
stc
mov
dec
sub
cmc
das
cmp
ret
sub
jae
or
adc
cmpsb
adc
ljmp
std
or
mov
push
outsl
lret
adc
fcomip
cld
mov
mov
mov
jecxz,pn
sbbb
popf
int
xchg
sbb
outsb
adc
sbb
add
shr
lret
sbb
pop
hlt
std
inc
xor
fwait
inc
fisubrl
filds
mov
scas
ss
and
into
xorb
xchg
lea
mov
divl
sub
mov
push
pop
push
hlt
and
mov
mov
lods
pusha
loop
xor
xchg
repnz
cmc
mov
scas
mov
pop
adc
dec
data16
mov
add
mov
sub
pop
mov
mov
jecxz
daa
arpl
push
fnsave
iret
inc
adc
lds
fnstcw
fcoml
loop
sub
mov
push
or
repnz
andb
cmp
xchg
jge
cld
pop
and
hlt
mov
das
or
cmp
inc
pop
outsl
and
outsb
pusha
js
pop
ret
std
xchg
insl
or
mov
or
mov
inc
mov
adc
dec
fimull
shrb
test
pop
mov
adc
in
in
and
roll
dec
mov
inc
imul
addps
popa
mov
adc
sbb
repnz
or
jle
jp
push
ficompl
adc
clc
repnz
lret
inc
inc
xor
in
sbbl
and
cld
or
addr16
jmp
imul
inc
push
mov
sbb
test
mov
push
jae
gs
adc
mov
repnz
fwait
xchg
mov
xchg
jecxz
sub
pop
pop
or
jmp
or
pop
fcmovnu
outsl
test
cmp
pushf
fcmovb
and
mov
pop
inc
pop
fcmovb
pop
mov
dec
gs
xchg
int3
stc
out
sarb
pop
xchg
mov
fmuls
test
les
fdivs
adc
mov
pop
rclb
test
cmp
mov
in
das
mov
jbe
jae
das
int
stos
int
or
movsb
popa
or
inc
push
jecxz
les
mov
pushl
xor
stos
jns
and
add
cltd
and
fxam
lret
mov
das
mov
ret
and
push
mov
icebp
out
sbb
pop
adc
pop
test
push
inc
lahf
sbb
inc
lock
insb
daa
test
jl
push
loopne
inc
outsl
data16
lret
mov
adc
cmpsb
shlb
xor
movsl
lahf
inc
dec
call
jge
or
cmp
or
mov
xor
jns
pop
cs
or
pop
ljmp
add
lcall
xor
xchg
in
add
mov
loop
cmp
mov
aam
out
test
aaa
decb
pop
push
dec
pop
aam
xor
imul
insl
cmp
scas
mov
ret
sbb
add
testl
push
std
scas
movsl
pop
into
rcl
loop
xchg
mov
es
shl
add
icebp
sub
or
dec
int3
mov
fildll
pop
repnz
aaa
in
cmp
dec
mov
cltd
shr
int3
stos
dec
sbb
xchg
je
pop
lea
mov
jmp
dec
or
xor
lea
shr
mov
jecxz
notb
push
in
cmp
and
push
enter
enter
push
arpl
mov
shlb
add
mov
cltd
pcmpgtd
stos
paddb
or
fcomip
push
xchg
fistpl
pushf
js,pt
pusha
mov
cmp
add
mov
stos
push
jg
mov
shlb
xor
adc
ja
cmp
sbb
icebp
jle
jnp
dec
imul
mov
dec
stc
iret
jecxz
imul
lods
sbb
in
push
xchg
xorb
insb
push
cmp
insl
out
mov
addps
sti
in
push
out
bound
sbb
inc
cmpsl
xchg
inc
sub
aad
mov
lods
sarl
gs
add
lret
or
dec
xor
inc
ret
mov
and
cs
sub
fs
push
push
test
mov
push
outsb
andl
insb
imul
push
popa
adc
lahf
mov
and
loop
add
xchg
pop
in
shlb
push
jle
or
or
add
fistps
in
pop
mov
sub
shlb
in
or
addr16
pop
je
cld
xchg
dec
pop
lds
mov
iret
lret
js
movsl
dec
aad
jnp
jl
addb
stc
arpl
enter
fisubl
adc
add
cmpsb
lods
flds
or
adc
xor
enter
jl
add
lea
aad
dec
sbb
xchg
lds
jmp
popf
pop
jns
imul
aad
mov
cmp
xchg
cmpl
jb
aas
out
jne
hlt
in
loopne
sahf
sti
ljmp
aam
push
fst
push
jns
lods
sbb
mull
sbb
movsb
ljmp
and
or
and
sbb
lock
pusha
or
aaa
jns
add
in
in
out
lods
dec
mov
add
mov
cmpsl
lods
mov
ret
sbb
or
in
adc
and
mov
add
adc
adcl
mov
hlt
fdivrs
pop
sbb
fcmovb
rcrl
cld
or
sbb
aam
arpl
sbb
xchg
je
cmp
jbe
jno
inc
and
mov
pop
out
dec
push
popa
inc
pop
shr
icebp
add
daa
into
iret
dec
iret
jne
and
ss
aaa
xchg
popa
fcompl
lods
adc
cltd
inc
jns
sti
jb
icebp
test
cmp
aam
dec
cmp
pop
xor
iret
lret
jno
xchg
or
or
std
pushf
inc
insl
mov
rcrl
test
mov
sub
sub
adc
xorb
jae
jne
jge
dec
push
ss
cmc
or
cmp
xor
rcll
push
arpl
js
and
mov
out
xchg
xchg
mov
or
rcl
sbbb
mov
jnp
fnstenv
test
lret
mov
stos
cltd
je
adc
sbb
pop
lea
das
mov
cmp
inc
jne
out
mov
test
jbe
mov
mov
or
push
pop
sbb
stos
push
frstor
repz
xor
loopne
jmp
cld
dec
stos
jg
loopne
aad
inc
fwait
lods
cmp
mov
fstpl
pop
jno
inc
jae
and
mov
adc
and
in
xchg
insl
dec
std
add
ret
sar
sahf
sub
xlat
add
scas
loope
adc
jg
cmp
xor
pop
mov
mov
xor
int3
push
in
mov
jle
jecxz
ja
addr16
and
inc
sti
in
inc
push
test
mov
xchg
sti
rcll
mov
pop
jmp
insb
jmp
adcl
sub
mov
mov
int3
test
pop
jecxz
pop
ret
push
movsl
fdivs
lcall
and
push
pusha
pop
into
pushf
mov
scas
xchg
cmovae
inc
add
push
add
std
dec
add
cmp
mov
shll
into
test
mov
addr16
jne
ret
pop
subl
ror
adc
jb
pop
mov
fwait
mov
cmp
cltd
and
movsl
lret
int
test
hlt
test
ds
loop
icebp
hlt
stos
loopne
punpckhwd
xchg
push
jbe
xchg
hlt
pop
loope
jg
pop
xchg
sub
lock
push
je
jmp
test
pushf
xor
inc
or
push
movsl
xchg
pop
sub
push
repz
cli
mov
push
mov
fnstsw
sub
jne
cmp
lods
cs
adc
daa
stc
decl
and
lret
out
sbb
mov
push
enter
pop
in
ret
push
mov
scas
and
sahf
or
xchg
in
xor
jns
jp
cmp
dec
sti
push
pop
jge
das
lods
pop
mov
es
mov
sbb
sbb
lahf
shrb
cltd
and
popf
test
lods
pushl
and
cwtl
idivl
add
cmp
inc
lods
daa
sub
inc
mov
and
or
sub
mov
jb
mov
or
mov
dec
repnz
ds
pop
test
addb
out
jns
mov
test
dec
dec
enter
pusha
push
lods
mov
cmpsb
cwtl
out
stc
mov
jge
aam
loope
fcoml
es
lock
xor
pop
mov
or
sub
sahf
lea
mov
inc
and
xchg
in
lods
add
push
cmp
hlt
mulb
cmp
sbb
xor
test
jno
pop
sbb
pop
int
cmp
mov
arpl
mov
pop
int3
sarl
xchg
cmp
mov
imul
mull
inc
lods
das
fs
call
mulps
xor
in
shlb
adc
in
fiadds
sbb
xorb
inc
jp
mov
add
enter
sub
js
xchg
shrb
adc
sarb
jg
mov
adc
gs
mov
insb
aad
outsl
pusha
rcrb
sbb
xor
or
sbb
out
outsb
jle
or
mov
aaa
cltd
out
int3
push
mov
rclb
mov
sub
int
sbb
fcmovnbe
aad
arpl
aam
int3
adc
cmp
adc
clc
movsb
xchg
outsl
out
pop
push
pop
ret
dec
sbb
or
push
scas
add
dec
and
lret
mov
ljmp
incb
push
mov
xchg
or
or
inc
das
push
in
inc
adc
js
pop
push
aas
xor
xor
bound
push
mov
ljmp
scas
ss
fs
dec
int3
mov
mov
and
inc
add
in
gs
sub
xlat
add
sub
xchg
sub
adc
or
xchg
jb
leave
sub
push
and
dec
xchg
addr16
mov
adc
fistpll
xor
xor
dec
clc
fistpl
stos
cmpsb
call
rcl
inc
negb
push
dec
cmp
lods
sub
sub
mov
pop
jge
fnstsw
aaa
push
sahf
pusha
jb
ss
in
jnp
dec
jge
sub
and
hlt
jbe
ss
and
adc
sub
cmp
mov
xchg
in
hlt
bound
mov
or
pop
xchg
push
out
cmp
xlat
jo
mov
fs
stos
pop
or
xor
jno
test
mov
push
or
dec
sub
lcall
das
pop
idivl
sub
inc
imul
test
mov
cmp
jp
inc
sbb
rcrl
in
flds
scas
movsb
repz
les
dec
fdivrs
incl
repz
mov
popf
xchg
dec
sub
negl
call
rcrl
sbb
test
pop
out
cmc
rolb
sub
cli
xor
subb
out
jbe
enter
aad
adc
les
stos
sbb
arpl
and
sbb
test
inc
sbb
jne
call
das
adc
std
frstor
pandn
mov
and
aaa
sbb
pop
and
xchg
subb
arpl
xchg
movsl
outsl
or
in
stc
adc
mov
shrl
push
cli
cmp
jno
rcll
ljmp
insl
mov
inc
mov
xchg
lods
pusha
xchg
pop
aad
outsl
fs
movsl
xchg
fmulp
cmp
xchg
xchg
pop
cmp
push
in
push
mov
call
out
pop
dec
pushf
jl
or
push
push
push
pop
out
lcall
and
sub
mov
enter
sti
jno
repz
mov
mov
test
sbb
mov
dec
jb
notb
cmp
fistps
aas
mov
mov
scas
sub
jnp
fisubl
loop
lcall
mov
cmp
push
js
push
push
dec
cmp
and
aad
fwait
adc
inc
mov
lahf
test
and
fs
addb
fnstenv
sti
nop/reserved
jmp
mov
cmpsb
loop
add
cmp
cwtl
jbe
shll
mov
adc
mov
rol
cmpsl
cmp
mov
xor
sti
xchg
xor
cmc
push
xor
mov
fs
sbb
jne
movsb
dec
fadd
pop
test
popa
push
jmp
pop
lods
mov
inc
testb
sub
clc
push
xchg
mov
andl
cmp
jl
add
pop
scas
lcall
push
sarb
xor
std
loop
inc
aad
inc
jns
adc
pop
jecxz,pn
ret
bnd
call
popf
scas
movsb
test
inc
sub
fisubrs
loope
mov
inc
mov
pop
add
shrl
push
insb
inc
xchg
and
or
int3
jmp
cwtl
jne
mov
rcrl
aam
dec
lret
xchg
insb
clc
dec
enter
cltd
sbb
js
mov
pop
jecxz
or
push
jge
ss
xor
sbb
pop
imul
hlt
fstpt
jecxz
in
movsl
fucomi
lahf
test
mov
mov
lods
clc
mov
push
or
add
push
aam
cmpsb
lods
fisttps
outsb
inc
addr16
jno
sub
inc
iret
dec
xor
in
mov
push
adc
mov
push
cmp
sub
push
fistps
jl
mov
movsb
inc
jno
cmp
enter
out
lret
xchg
andl
sub
stos
mov
gs
xchg
pop
mov
or
sbb
int3
cltd
lret
fs
mov
or
push
jl
shll
je
aas
and
clc
dec
sbb
push
insb
or
xabort
push
pop
lock
je
jne
and
lds
adc
adc
jmp
in
and
in
sbb
push
pop
cmpsl
mov
or
sub
xor
mov
mov
pusha
pop
sub
clc
call
push
aas
add
inc
sub
mov
xchg
std
sahf
pop
ret
ds
aas
outsb
shll
dec
push
iret
jns
add
inc
pop
push
inc
sub
mov
mov
push
and
push
nop
in
and
xor
dec
cmp
sti
sbb
pop
mov
dec
dec
data16
push
xchg
repnz
les
fucomi
jg
xor
divb
test
repz
sbb
test
push
inc
scas
lock
jne
out
mov
hlt
push
fistpll
sahf
mov
icebp
pusha
arpl
jle
pop
mov
sbb
out
mov
pop
sub
jg
mov
add
mov
mov
repz
bound
mov
int
jb
int
stos
aad
out
aaa
sub
hlt
insl
call
cltd
cs
mov
loope
adcb
lret
mov
ljmp
xor
dec
or
jecxz
outsl
inc
leave
daa
add
mov
aam
fiaddl
aas
xchg
ret
std
pop
jmp
scas
cs
ficoml
fcomip
xchg
dec
push
push
outsb
outsl
lock
loop
mov
aam
xlat
lea
dec
mov
xchg
rorl
inc
jge
shll
and
xchg
out
data16
insl
lcall
mov
push
repz
inc
out
jb
loop
loope
ret
jae
cmp
mov
sbb
mov
inc
or
cmpsl
fisubs
out
outsl
cmpsb
popa
mov
sbb
pop
add
sub
rol
dec
mov
popf
lods
pop
lock
mov
add
mov
je
xchg
fldt
xchg
stos
cmp
xlat
pop
in
ss
and
scas
or
xor
cmpsb
faddl
aam
xchg
stos
push
sbb
add
lods
dec
jg
cmovp
fs
pusha
jmp
lods
sbb
pop
sub
adc
xchg
movsb
sub
or
cmc
push
test
lret
mov
or
sbb
sarb
test
mulb
xchg
mov
int3
orl
sbb
mov
jne
inc
sbb
lods
mov
pop
mov
lds
pushf
cs
push
cmp
movsl
repz
mull
movsl
or
outsb
sbb
and
sbb
cmp
xchg
mov
push
sbb
pop
pop
in
xlat
add
mov
xchg
or
and
adc
pop
mov
rcr
sbb
jmp
sti
and
jmp
inc
sbb
push
pop
push
inc
sbb
and
jnp
scas
pop
push
lret
nop
add
dec
or
fcmovnu
pusha
add
xchg
sar
push
ret
into
pop
xor
xor
sub
ljmp
adc
mov
loop
into
xor
jne
mul
rorl
and
std
int3
iret
or
iret
int3
pop
pop
adc
test
fstpt
addr16
xchg
sub
ss
sbb
mov
pop
push
xor
fs
in
je
or
cwtl
push
sub
movsb
or
sub
sbb
aad
sub
clc
sbb
daa
xchg
fnstcw
sbb
mov
or
into
xor
movsb
jno
cmp
repnz
sub
sbb
dec
adc
icebp
in
popf
or
gs
cmp
stc
data16
push
add
test
repz
into
push
scas
fs
js
sub
je
dec
push
pop
divl
sahf
stos
movsb
mov
jmp
or
aad
lea
iret
add
movl
lods
inc
shll
xchg
les
inc
lods
xchg
xor
jne
or
and
or
cli
pcmpeqw
pop
aas
call
sbb
lahf
dec
das
inc
pusha
xlat
insb
ret
out
mov
ret
and
jmp
test
pop
in
pop
in
in
push
out
fistl
add
rolb
push
mov
fs
mov
in
loope
xor
xchg
aas
sub
arpl
push
pop
jae
aas
lods
int3
mov
outsb
scas
lock
mov
or
pop
shl
loop
pop
xchg
insl
icebp
fsts
stc
mov
xchg
jle
jge
loopne
pushf
pop
rolb
mov
pop
adc
shlb
and
or
push
mov
imul
cmp
scas
cli
adc
out
dec
mov
fs
push
adc
cld
jne
add
pushl
xor
icebp
jno
adc
les
icebp
or
arpl
cs
fst
dec
xchg
and
fsubrs
cmpsl
or
repnz
push
pop
mov
lcall
cmp
test
clc
daa
or
inc
push
add
or
pop
and
push
shrb
xor
adc
movsl
dec
fcomp
sub
repnz
cmp
sub
jge
lahf
mov
xor
test
xchg
lahf
insb
jmp
loop
mov
or
subl
push
jno
cmpsb
jge
mov
into
mov
test
pop
mov
movsl
sbb
mov
cmp
aam
ss
pop
insl
cmp
push
stos
scas
setnp
aas
cwtl
xchg
les
sahf
mov
and
aas
stos
idivl
test
data16
and
adc
cmpb
pop
mov
xchg
and
xchg
jb
xor
pop
xchg
data16
fldcw
fbstp
pop
movsb
mov
xchg
inc
cli
pop
repnz
xchg
shlb
int
inc
lds
int3
push
addr16
sar
hlt
idiv
cmp
sub
std
jns
mov
jbe
lea
in
dec
cmp
popa
jo
pop
popa
or
mov
pusha
into
dec
jg
xorl
lods
arpl
ret
cmpsb
pop
lock
cmc
insb
int
std
lret
xchg
fsubrs
ds
lods
lods
jne
jne
mov
sti
pop
rcrl
out
mov
aas
nop
sub
pop
aaa
pop
iret
scas
int
mov
inc
lea
insb
testb
inc
jl
and
cmp
sub
ds
je
faddp
mov
inc
lods
mov
jl
sub
pop
pop
stos
lods
jmp
shlb
shll
push
add
dec
ret
sbb
hlt
sub
je
fs
push
mov
jle
adc
outsl
cmp
lret
loope
stos
adc
push
xchg
push
add
sub
mov
arpl
cs
test
test
xchg
rorb
popa
loop
movb
sub
sub
or
sarl
inc
jne
adc
and
dec
rolb
sahf
mov
mov
dec
into
pop
xchg
mov
mov
xchg
arpl
movsb
or
push
ret
adc
in
or
inc
push
mov
sarl
cmp
sub
stc
in
xchg
mov
mov
xchg
cmp
fildll
arpl
jle
test
xor
pop
push
bound
sarl
push
push
cmc
or
jg
inc
mov
adc
mov
xchg
sub
push
bound
push
push
xchg
mov
dec
or
mov
mov
scas
push
mov
movl
jle
and
or
or
dec
inc
xor
mov
dec
mulb
sar
fisubrl
mov
ljmp
ds
xor
call
push
sti
scas
outsl
xchg
jge
ljmp
dec
inc
push
out
js
jno
daa
and
pop
pop
gs
out
lcall
ret
fidivrl
adc
jecxz
rclb
inc
mov
outsl
in
sbb
push
ljmp
cmc
push
jae
mov
jle
rorl
stos
cmp
mov
xchg
test
jne
cmp
push
fneni(8087
addr16
psllq
out
test
cwtl
cmpsl
jae
movsb
fsubrs
cmp
ret
out
filds
cltd
fisubrl
stos
add
gs
or
int
pop
and
movsb
in
stos
dec
adc
or
push
cmp
pusha
testb
push
xchg
inc
das
mov
into
push
filds
pop
jle
iret
jle
in
arpl
out
loopne
lock
pop
test
sbb
aam
dec
ffree
test
mov
mov
testb
lcall
inc
add
hlt
jae
xor
mov
inc
or
daa
xor
out
scas
idivl
add
jp
add
cmc
xchg
jo
stos
and
jns
xchg
scas
pushf
icebp
jns
imul
inc
in
adc
dec
or
int3
mov
paddusb
pop
lea
aad
imul
mov
push
adc
lea
rcll
dec
imulb
gs
inc
je
pop
mov
xlat
lds
xor
lcall
sbb
xor
push
push
lcall
xchg
subl
lods
cmpl
arpl
pop
and
sub
xor
aad
mov
movsl
dec
iret
cmp
jge
mov
repnz
int
push
inc
add
sbb
mov
sub
rcrb
add
or
inc
roll
cmpsl
push
pop
sub
and
stos
data16
jo
pop
addb
xor
ficompl
int
and
sub
aas
jl
movsb
in
sub
pushl
lret
aas
and
ret
push
addl
pop
mov
xchg
pusha
lods
leave
rorl
std
repnz
outsb
ss
mov
xchg
cmp
sbb
andl
mov
sub
gs
mov
mov
or
mov
sbb
and
cltd
movsl
sub
pop
and
mov
jb
repnz
or
aad
ret
jle
shrl
clc
mov
pop
movsb
das
in
dec
xorb
fnstcw
pushl
js
and
cmp
daa
insb
cmpsl
cli
out
jecxz
cmp
bound
mov
inc
arpl
iret
int3
or
mov
push
mov
or
or
sub
out
repz
cwtl
cs
js
repnz
xor
mov
cmpsb
sarl
jnp
jne
pusha
fwait
push
in
arpl
mov
movsb
nop
stos
fstpt
pop
mov
popa
inc
pop
push
xchg
fwait
outsl
sub
dec
push
xchg
adc
xor
ficoml
xchg
cld
cmc
jge
adc
push
cmc
daa
push
push
outsb
pop
cli
fisubl
arpl
hlt
cld
pop
mov
xor
pop
xchg
je
popf
dec
pop
sbbl
fwait
jo
jb
cltd
and
push
add
in
loope
push
outsb
xlat
xlat
inc
hlt
repz
ja
pop
lds
repz
sub
xchg
mov
inc
imul
jp
faddl
push
cwtl
ds
nop
int
fisubrl
test
sarb
das
cmp
pop
push
out
sub
inc
push
fimull
cs
mov
aad
cmpsl
cmp
push
sub
push
inc
xor
mov
sub
mov
dec
push
rorl
and
sub
jge
add
adc
in
daa
cmp
adc
adc
fisttpll
push
lcall
sti
cmp
dec
lea
mov
mov
pop
gs
je
lret
inc
push
lahf
mov
sbb
btc
sub
imul
mov
jecxz
dec
nopl
cmpsl
xlat
jg
pop
jnp
scas
sbb
pushf
shlb
jl
push
int
cmpsl
stos
fsub
icebp
lret
neg
push
movsl
inc
out
ret
mov
stos
js
push
mov
jae
inc
into
push
jle
and
mov
dec
ds
inc
stc
fsubrs
loope
xchg
jae
pushf
es
fdivrs
cmp
test
cli
push
notb
shll
cmp
add
pop
dec
lock
xchg
enter
fdivl
stc
mov
inc
push
jno
mov
dec
scas
aaa
or
roll
mov
fildll
pop
cmp
mov
pop
outsb
in
lcall
int3
mov
jmp
les
sbb
shr
aaa
xlat
mov
jp
sub
sub
jo
call
mov
sbb
mov
in
andb
add
sbb
nop
sar
scas
inc
adc
jp
or
sub
call
cmp
adc
aaa
adc
xchg
ss
or
cmp
mov
jecxz
inc
pop
sbb
jno
mov
pop
inc
lods
lcall
cmp
cmp
mov
rcll
lret
aas
iret
lods
jno
aas
adc
movsl
ret
inc
xor
push
xor
dec
ds
dec
push
stos
and
or
mov
dec
mul
iret
push
lods
mov
rcll
mov
lahf
pop
fisttpll
and
cld
into
pop
dec
pop
divb
int3
and
loop
cmpsb
inc
push
sarl
mov
or
fcmovu
jl
lahf
xlat
xchg
xorb
jnp
pop
mov
pop
add
push
adc
jae
push
mov
mov
lods
cmp
sbb
xchg
pop
xor
dec
mov
sbb
sbb
pop
sbb
jle
jnp
jnp
js
insb
testb
ja
mov
stos
jg
dec
lret
pusha
mov
roll
sbb
fadd
dec
call
rcll
pop
cli
sbb
mov
xor
insl
test
in
push
ljmp
stos
dec
xor
jbe
lods
adc
cmp
fldenv
test
sbb
mov
aam
mov
call
imul
call
outsl
loop
stc
scas
push
cmp
fnstenv
ret
aas
ljmp
loop
and
into
ficoms
imul
pop
lods
adc
sub
iret
xchg
mov
stos
add
nop
out
adc
pop
xchg
mov
fcmovbe
repz
inc
xchg
xor
ljmp
fidivrl
aaa
mov
lret
mov
xchg
fs
dec
push
jge
add
into
sub
or
jle
sti
jecxz
or
or
jle
popa
aad
fisubl
xchg
pop
inc
pusha
lcall
fs
cmpsl
fldl
xchg
push
aaa
fst
ret
loop
dec
shll
push
dec
sbb
stos
loope
ja
inc
mov
sti
cmpsl
mov
cmpsb
xchg
test
mov
fildll
sbb
repnz
arpl
dec
in
xchg
cwtl
test
imul
fmull
lret
aaa
cli
sahf
and
ss
data16
sub
sub
enter
jo
xor
xor
aam
push
sbb
mov
test
inc
out
mov
adc
adc
pop
test
mov
lret
repz
add
gs
fadd
mov
xor
mov
pop
xor
mov
push
cli
outsl
stos
into
mov
fs
jbe
pusha
repnz
mov
popl
cs
in
sub
xchg
jbe
add
add
test
inc
scas
mov
jmp
mov
jbe
arpl
mov
xor
notl
mov
jb
pop
mov
xor
in
mov
cmc
and
test
pop
cmpxchg
rcll
popa
lea
jp
cmp
andl
imull
andl
inc
or
cmpsl
out
jp
inc
roll
loope
push
test
push
and
xchg
xor
enter
cmc
dec
fsubr
mov
mov
ret
enter
push
lcall
fisubrs
in
or
cmpsb
and
cmp
int3
daa
into
jae
rcll
out
inc
xor
imul
push
cmpsl
push
icebp
imul
mov
imul
mov
scas
xor
aad
sbb
outsb
ja
repnz
sbb
sbb
fisubrl
cltd
xor
inc
imul
mov
mov
mov
lds
jns
insl
pop
or
xchg
aam
jl
xchg
sub
out
jo
ja
popf
test
pusha
pop
jo
mov
add
mov
mov
cmp
stc
pop
lock
popa
cmp
dec
aaa
adc
or
outsb
andl
mov
xor
ja
sahf
js
movsb
push
jl
push
cs
aas
data16
in
rolb
xor
es
push
sahf
mov
inc
ret
dec
jo
and
cmp
mov
hlt
inc
inc
inc
jecxz
adc
pushf
test
lds
out
xorb
jle
jge
cmp
popf
mov
movsb
cmpsb
rorb
aam
push
xor
adc
imul
sbb
or
jge
ljmp
xchg
lock
jmp
jne
and
scas
jae
cmp
leave
xor
lods
jne
iret
xlat
jns
gs
push
icebp
jle
loop
outsb
mov
fidivl
rcll
and
lods
stos
dec
xchg
imul
mov
repnz
dec
cmp
jae
mov
or
into
mov
mov
nop
lds
cli
xor
pop
rorl
stos
jmp
xchg
dec
or
sub
bswap
or
gs
popf
clc
repz
pop
push
popa
fildll
dec
cmp
in
loopne
and
mov
jns
mov
test
in
fwait
and
xchg
push
aam
pushf
pushf
push
ret
out
or
cltd
mov
inc
bound
sbb
cs
test
and
mov
cli
push
xlat
push
dec
shrl
mov
testb
adc
xchg
aaa
xchg
adcl
sub
ss
xchg
push
mov
stc
dec
shlb
jno
pop
mov
mov
push
std
jno
mov
inc
jge
jmp
js
cltd
test
mov
mov
mov
stc
dec
test
mov
inc
sub
shll
pop
mov
mov
stos
insl
dec
xchg
add
adc
lcall
sbb
cli
shrl
cmp
aad
adc
dec
dec
cmp
outsl
cltd
pusha
push
clc
push
fisttps
xchg
dec
pop
loop
adc
ds
push
ret
int
and
and
cltd
cwtl
pop
addl
es
aas
pop
icebp
xchg
push
mov
mov
push
scas
mov
jbe
fcomp
loopne
cmc
jl
sub
xchg
loope
push
sub
pushf
ffreep
movswl
gs
popa
in
stos
pop
cmc
insl
inc
sbb
movsl
mov
or
xchg
inc
mul
loopne
inc
daa
and
or
dec
push
icebp
adc
lret
stc
sbb
jl
arpl
inc
sub
jmp
leave
loop
fdivs
pushf
mov
enter
les
fistpl
jne
fidivrs
xor
insb
xor
les
jg
aas
and
or
xchg
pop
into
jl
lock
loope
cs
adc
mov
xor
mov
je
fsubl
test
mov
adcb
cltd
popf
ret
jne
mov
scas
fnstcw
sbb
stos
into
outsl
fs
dec
out
xor
dec
xor
xchg
add
dec
fidivrl
cs
pop
dec
sub
inc
fldl
ret
lahf
pop
xor
or
sub
enter
je
das
push
mov
mov
js
cld
subb
insl
stos
loope
sub
or
push
fidivl
pusha
insb
shlb
dec
pop
adc
out
dec
or
jle
bt
or
in
mov
out
orb
bswap
stos
add
cli
jp
and
gs
loopne
inc
sub
mov
ret
mov
or
ds
call
clc
push
rcrl
ds
sub
rorb
sub
lahf
sub
jmp
add
pop
stos
push
add
xchg
lret
lods
add
mov
add
sahf
sbb
pop
int3
insb
adc
lret
test
fidivrs
pusha
mov
inc
pusha
adc
nop
inc
aas
aad
push
je
and
xor
xor
int3
outsl
fs
stos
loop
fsubrl
ds
mov
mov
insl
mov
lods
cmp
xchg
jbe
jg
mov
out
pop
pushf
xchg
dec
push
les
shrl
pop
mov
sbb
movsl
shrb
lods
out
ret
push
push
daa
cwtl
pop
loope
xlat
push
push
mov
shlb
out
or
into
std
mov
mov
jge
xor
inc
push
and
repz
mov
stos
lret
sub
sub
and
xchg
leave
push
dec
mov
in
mov
lea
pop
mov
in
sub
in
sub
push
dec
sbb
mov
outsb
and
adc
and
int3
jmp
iret
dec
or
data16
and
cmc
xchg
cmpsl
pop
loopne
sti
mov
sarl
mov
dec
push
pop
fadds
pop
xorb
testl
mov
xor
stc
in
lahf
push
out
adc
adc
dec
cmp
inc
sub
xchg
xchg
add
mov
repnz
add
clc
jp
pop
imul
xchg
fmuls
push
jae
repnz
in
push
xchg
ja
jmp
push
stos
dec
aad
cld
cmpsl
cs
dec
dec
mov
addr16
inc
cwtl
lret
sbb
ss
fdivrl
in
jmp
daa
rep
cld
in
cmp
push
stos
addb
push
jmp
mov
inc
mov
xor
scas
mov
sbb
or
adcl
fsub
insb
out
and
loope
jmp
repnz
jb
push
jge
sbb
inc
rcrl
adc
xor
ss
dec
sbb
data16
mov
and
dec
out
icebp
cmp
shll
sub
inc
sbb
popa
inc
mov
pop
mov
gs
hlt
loope
lret
push
clc
movsl
and
scas
mov
popf
inc
or
insb
pop
out
mov
sbb
push
and
dec
lcall
pop
es
hlt
test
inc
fbstp
divb
jmp
lods
lret
aas
fidivl
mov
push
sarb
add
push
bound
hlt
insl
pop
out
les
push
jns
sbb
push
sub
pop
jle
push
pop
into
jmp
arpl
push
ja
daa
pop
push
ret
push
aam
stc
ret
dec
push
adc
cmp
mov
pop
test
jnp
mov
jo
loope
inc
in
or
pop
lahf
fsubr
lods
loope
lods
mov
adc
mov
pop
pusha
decb
js
adc
repnz
insb
sbb
inc
dec
mov
fistl
imul
orl
fwait
test
mov
pop
movsb
inc
xchg
nop
fucomip
pop
dec
add
pop
adc
sbb
xor
mov
mov
adc
lret
pop
and
inc
cli
xchg
mov
out
sub
jle
hlt
sbb
jle
cs
push
rclb
orb
and
sbb
mul
xor
scas
push
sub
movsl
and
in
cmp
das
imul
movsb
lods
push
int
je
aaa
nop
mov
es
push
xchg
inc
into
sahf
subl
add
mov
insb
fadds
sub
aad
leave
jge
dec
fldenv
pop
adc
test
rol
dec
sub
dec
imul
push
xor
mov
movsb
sbb
adc
xor
sub
jl
mov
ret
cmp
cld
or
ja
adc
dec
in
iret
pusha
jne
mov
jo
shll
scas
jae
out
sbbl
pop
aas
or
fnstenv
test
loopne
cmp
add
mov
inc
sbb
jb
cs
aaa
inc
push
fbstp
outsl
inc
jae
sarl
scas
cwtl
sahf
mov
imul
aas
sub
das
insl
add
and
or
sti
dec
xor
clc
jb
push
test
iret
pop
clc
mov
fwait
aaa
or
scas
int3
into
push
xor
and
mov
mov
stos
pop
sbb
pop
popa
jmp
sbb
pop
test
daa
stc
pop
sub
repnz
popa
lods
mov
xor
mov
adc
popa
adc
adc
cmc
pop
xor
mov
leave
push
subb
push
fdivrl
fstpt
xchg
fmul
mov
stos
xchg
outsb
rolb
int3
rorl
jge
jge
inc
push
mov
mov
scas
and
jbe
push
xchg
and
addr16
in
push
xchg
inc
in
pop
aad
rcrb
sub
xchg
mov
insb
mov
test
and
call
sbb
adc
in
orb
sub
push
cmp
jne
aaa
cmpsb
mov
mov
dec
push
push
inc
xchg
mov
je
aas
adc
dec
out
ss
out
ja
addr16
aam
push
imul
decb
shl
mov
sub
jno
mov
sahf
enter
xchg
jg
cmp
js
jae
std
rol
pop
or
lret
pop
mov
adc
dec
inc
stos
lods
cltd
ret
aad
inc
test
pop
jmp
inc
loopne
mov
xor
test
jno
cld
lods
mov
addb
into
pop
fistps
js
jbe
mov
jp
pop
push
test
push
cmp
stos
lahf
sbb
adc
xchg
mov
imul
jle
and
loopne
dec
sbb
pop
pop
test
mov
mov
sub
fldenv
mov
lret
out
and
mov
addl
or
pop
std
clc
jg
add
ljmp
or
shlb
add
les
enter
inc
leave
in
mov
sub
iret
loop
std
push
ret
xchg
les
dec
fnop
dec
sahf
push
stc
mov
outsb
push
jge
test
gs
add
inc
jo
jne
add
decl
sub
push
cwtl
hlt
adc
dec
push
adc
gs
cmp
les
and
pop
xchg
inc
and
sbb
ret
pop
or
or
cmp
mov
jl
pop
lret
push
sbb
sti
dec
inc
mov
out
fsts
adc
mov
movsb
sti
adc
mov
mov
xchg
loopne
adc
mov
mov
add
in
insb
mov
add
or
add
sahf
pop
pop
and
jle
and
mov
movsl
ss
sub
out
adcb
mov
cmp
xlat
fisubs
out
jmp
inc
fcmove
mov
xchg
insl
lods
cld
mov
arpl
fiaddl
testb
xchg
roll
sub
iret
cmpl
or
repnz
rcr
add
mov
xchg
and
adc
jl
repz
ss
out
or
xor
ret
push
testb
cltd
outsl
mov
xlat
add
out
rorb
xor
jge
sub
rorl
dec
loope
push
test
or
faddl
sub
and
cs
cmp
sbb
rcrl
dec
push
ss
mov
adc
lret
insl
out
mov
test
push
out
push
stos
sahf
dec
dec
mov
mov
sub
add
movsl
inc
jns
sub
data16
mov
pop
add
rolb
lea
xor
mov
lret
mov
dec
fs
in
and
aaa
and
lahf
btr
xchg
insb
cmpl
je
orl
fldenv
mov
xchg
imul
andl
jecxz
xchg
push
sub
pushf
adc
jecxz
negb
mov
rcl
lods
mov
cwtl
loope
mov
fbld
ljmp
out
les
ret
pusha
jle
push
test
push
jbe
lahf
mul
adc
lods
hlt
test
nop
leave
pop
dec
lahf
mov
cmp
movsl
mov
add
dec
sbb
mov
push
pop
in
adc
scas
les
xchg
adc
cmp
aam
lret
dec
lret
fs
sub
dec
xlat
pop
fidivl
addb
daa
mov
icebp
xor
int3
sbb
adc
ret
testb
aad
push
mov
push
xchg
push
inc
cltd
rorb
stos
enter
pop
jg
dec
imul
adc
mov
shrl
push
fildll
popf
ret
push
cmpsb
adc
fcoml
es
jge
outsl
or
cmp
loop
dec
int
leave
inc
scas
sub
cmp
cltd
fwait
xor
cli
scas
stc
jp
cmp
ss
repnz
push
and
push
jne
pop
and
stc
adc
out
idivb
movsl
stos
inc
add
jp
les
inc
pop
inc
jle
lret
lea
and
mov
aaa
leave
jnp
js
and
sbb
leave
jmp
adc
aaa
pop
mov
xchg
in
idivb
inc
out
fdivs
push
push
aas
dec
nop
das
aad
add
and
pop
cmpsb
pushf
mov
js
pop
sbbl
cmpsb
pusha
mov
aas
insb
xor
dec
repnz
ja
mov
icebp
jge
cmp
or
lods
cltd
jge
sub
ljmp
out
pop
xor
xor
dec
jne
and
je
xor
out
movsl
loope
jno
push
cmp
cwtl
dec
std
sahf
lea
add
outsb
mov
test
xchg
mov
mov
in
sti
mov
int3
xchg
outsl
dec
sub
mov
add
bound
es
dec
jbe
dec
ficomps
pushf
mov
push
ds
xlat
mov
sbb
popa
push
cli
or
xor
scas
sub
or
xchg
lods
push
bnd
test
sahf
fnsave
dec
mov
and
lret
jo
in
ja
xchg
dec
call
rcrb
sbb
and
out
push
shl
sub
pop
addl
mov
and
inc
pop
ds
dec
outsl
cmc
lock
sbb
and
jl
adc
cli
in
addl
notb
shl
inc
pop
mov
jmp
daa
test
ret
inc
in
rol
cmp
mov
movsb
mov
dec
cmc
push
pop
push
and
in
aaa
mov
pop
lcall
xchg
inc
imul
ljmp
mov
in
add
xor
lods
and
and
mov
stc
xchg
cmp
push
inc
aad
dec
push
ret
mov
push
push
mov
pop
adc
mov
lock
shrb
adcl
jle
push
mov
add
inc
push
mov
lods
jge
jne
add
cwtl
fcmovnu
pop
aas
xchg
xor
inc
cmpsl
popl
shlb
push
mov
mov
or
xchg
inc
cmp
shl
inc
or
push
xchg
in
mov
out
outsb
das
or
ss
xor
cmp
lahf
enter
fimull
cmp
mov
pop
hlt
sti
loope
add
xor
push
stc
dec
push
loope
pushf
pushf
dec
pop
mov
imul
push
lret
xchg
push
bound
cli
push
hlt
xchg
cmp
out
aas
push
adc
in
notb
insb
scas
or
js
mov
push
call
sti
and
lds
clc
mov
lds
pop
insb
scas
stos
aas
pop
pop
outsb
shlb
xlat
test
jb
push
in
lcall
enter
popf
and
lret
xchg
cmc
out
xor
das
sbb
cmovae
sub
mov
xor
push
iret
jle
mov
je
pop
loope
cli
fsubr
dec
adc
insl
sbb
pop
flds
pop
pop
sub
pop
mov
shlb
in
pop
sub
sub
scas
jmp
cmpl
lods
pop
xchg
pop
fsubr
lret
clc
fistpl
out
or
pop
sbb
popf
jbe
inc
push
mov
inc
sub
adc
in
aas
pop
jnp
adc
les
dec
pop
inc
popf
iret
arpl
cli
sub
scas
and
lahf
jb
in
addr16
les
sub
outsb
lea
imul
je
mov
jmp
arpl
mov
clc
cli
mov
xor
ffreep
and
mov
inc
repnz
dec
sub
jge
gs
or
dec
js
rorb
push
mov
es
pop
sbb
test
jmp
out
sub
les
cmp
jmp
dec
xchg
add
jge
jbe
rcl
cmp
xor
sti
cltd
imul
fsubs
xor
dec
and
dec
push
in
aad
xchg
addr16
jg
sbb
push
sub
cmp
or
imul
inc
pop
test
lock
fldenv
mov
mov
jne
mov
hlt
adc
mov
sub
nop
push
sbb
push
adc
clc
dec
lock
into
out
mov
call
gs
push
test
insb
clc
jle
inc
pop
mov
cs
jl
addr16
xchg
pop
jle
cmp
mov
call
pop
adc
outsl
jne
in
xorl
cli
adc
js
ss
cli
daa
repz
push
mov
jo
pop
je
stos
sub
ret
mov
popa
loopne
sub
out
sub
xchg
pop
dec
and
xor
lods
or
push
aad
lret
jle
aam
dec
xor
repz
xchg
popa
ret
add
add
cwtl
in
cmp
or
adc
and
stc
mov
mov
ret
sbb
mov
sahf
fwait
hlt
loopne
std
sti
xor
or
cmc
cmpsl
fs
mov
bound
cltd
add
mov
inc
dec
in
push
stc
xor
enter
addr16
fcoms
push
adc
mov
sbb
addr16
inc
js
mov
in
adc
cs
mov
push
push
or
pop
cli
outsb
dec
push
jecxz
aas
jne
jb
dec
jge
sti
shll
xchg
fldenv
rolb
scas
xor
xchg
pop
sub
sahf
pop
cmp
jne
or
add
addl
sub
cmp
cmc
pop
jnp
jge
push
mov
pop
stos
jecxz
push
push
sub
pop
mov
or
clc
inc
in
adc
rcrb
lods
fnstenv
mov
adcl
and
adc
mov
stc
adc
mov
push
fldl
or
push
dec
mov
int
mov
adc
or
lahf
cmp
fcmovu
push
push
repz
inc
movb
sti
stc
hlt
clc
mov
into
mov
fsts
loop
cmpsl
jno
dec
scas
push
xchg
jb
andb
xchg
jle,pn
push
in
out
adc
clc
cmpb
or
sbb
dec
mov
pop
int
cmpsl
xor
inc
pop
fimull
test
stos
fldenv
mov
addr16
sbb
dec
jne
xchg
arpl
ds
ficomps
es
jnp
das
jle
jp
mov
pop
dec
mov
iret
addl
jmp
sub
push
add
sub
mov
lods
hlt
outsb
inc
shrl
dec
fstpt
jl
pop
inc
ljmp
aam
fsubp
pop
sbb
negl
mov
sub
int
sbb
push
adc
or
mov
inc
fstl
cmp
sub
rcr
leave
shl
pusha
mov
add
and
fbld
lcall
adc
jmp
sbb
int
fisttpl
or
not
in
or
jg
mov
pop
fdivs
aas
xchg
aam
sub
mov
orl
inc
out
in
xor
jae
and
and
mov
rolb
outsl
mov
xchg
iret
or
inc
cmp
push
jb
mull
lret
das
mov
mov
xchg
mov
add
dec
imul
mov
int
sbb
imull
lea
push
pop
repnz
pop
cmpxchg
jae
adc
jb
arpl
mov
gs
adc
mov
out
and
test
jge
push
in
cld
pop
out
mov
push
les
fisttpll
clc
stos
aas
pop
mov
pusha
jg
int
aad
hlt
add
arpl
jbe
xchg
mov
adc
out
jb
and
nop
or
sbb
imul
adc
dec
insb
xchg
in
mov
mov
or
in
ficompl
add
orl
jo
out
incb
push
outsl
icebp
lcall
dec
cmp
pushf
pop
and
push
test
sub
in
adc
leave
jl
sti
xor
aaa
add
sub
rcrl
popa
dec
push
and
cwtl
inc
sarl
and
sub
insb
push
mov
and
sub
pop
pusha
push
ljmp
cmpsb
dec
and
pop
xor
push
movsl
add
loopne
popa
fsubrs
cmc
ret
jo
cmp
clc
mov
sarb
popa
lods
adc
test
stc
out
adc
xor
add
sbb
scas
mov
or
xchg
lret
jge
cmp
add
pop
cld
mov
sbb
lea
mov
fbstp
adc
jns
insl
adc
and
sti
sbb
ficoms
testb
leave
inc
fwait
sbb
xor
or
mov
mov
jge
rorb
sub
imul
out
push
fdiv
in
jbe
mov
add
cmp
pop
or
cmp
sbb
mul
and
push
sbb
ja
lock
in
cltd
mov
loop
mov
jb
scas
in
dec
xchg
pushf
pop
pop
dec
pop
lret
sub
jno
lret
pop
dec
cmpsl
cli
sbb
jmp
je
fnstcw
outsb
dec
rolb
pop
test
in
dec
jmp
orl
cmp
loopne
pop
lret
stc
add
or
cmc
sbb
or
les
test
fs
push
fs
fstl
ret
sub
arpl
or
ret
push
out
dec
mov
ret
adc
mov
insb
fdivp
ret
orb
mov
outsb
mov
xchg
sbb
pop
dec
push
push
addl
mov
cltd
rol
mov
rcl
inc
inc
mov
jmpw
xchg
cmpsb
and
lods
jae
mull
inc
shlb
inc
and
jmp
push
mov
push
mov
out
adc
pop
and
pop
cwtl
pop
scas
imul
mov
jp
sbb
fstpl
lds
and
inc
fidivl
pop
lret
gs
and
push
shrb
push
sub
fdivl
ss
add
movsb
aas
mov
xchg
mov
sbb
repnz
daa
sti
mov
mov
mov
xor
xor
inc
ja
or
adc
cmp
aas
test
test
fmull
dec
jb
push
je
rcr
ja
cmpsb
fildll
dec
mov
mov
or
pop
xor
lock
and
mov
roll
sbb
push
cmpsl
jp
mov
hlt
into
in
pop
jne
adc
aaa
pop
popa
pop
sbb
mov
fdivl
cmpsb
or
jl
xor
sbb
xor
stos
jl
int
inc
std
xor
pop
dec
pop
sub
mov
push
lea
rcrl
jo
js
popf
hlt
outsb
dec
ret
mov
pop
add
dec
fldenv
xchg
shl
movsb
dec
and
cmp
adc
and
mov
cmpsb
jmp
xor
xor
test
out
cld
mov
xchg
loopne
clc
push
js
mov
out
stc
insl
shrb
cmpsl
cmpsl
int
lahf
dec
les
shlb
fisttps
popa
dec
test
rclb
push
inc
ljmp
sbb
int
jnp
out
sub
sub
jne
fstpl
orb
xor
cmp
pop
push
out
xor
push
lahf
add
rclb
jmp
jne
stos
mov
xor
push
inc
cmc
aas
in
aad
pop
daa
cmpsl
pop
inc
in
pop
pop
or
outsb
repnz
out
and
sahf
into
pop
popa
imul
or
dec
sub
push
lock
or
sbb
push
xchg
fsubrs
mov
pop
aam
push
test
adc
adc
rcrl
push
fistpl
aad
loope
xor
jmp
lret
xor
or
popf
loopne
pop
lock
movl
cmc
mov
sbb
cmpsl
mov
insb
jbe
into
push
mov
addr16
je
out
xor
xchg
sbb
fnstsw
test
push
ss
xchg
mov
jecxz
adcb
pop
ljmp
ret
sbbl
out
movsl
popf
lods
incl
mov
xor
jno
cld
mov
aaa
jns
inc
jb
rcl
xor
mov
cli
and
push
fists
hlt
enter
cmc
ja
sub
imul
inc
nop
cmpsb
adc
and
fdivs
lock
sub
iret
pop
xor
lods
imul
push
add
movsb
xor
mov
push
mov
jmp
repz
sub
push
mov
inc
pusha
push
xor
test
nop
dec
in
mov
cmp
loopne
inc
xchg
jmp
pop
push
jge
testb
leave
loope
scas
hlt
mov
sbbb
cld
or
or
lea
xor
int
loop
mov
in
or
adc
pop
mov
inc
push
push
dec
dec
call
mov
xor
mov
in
xchg
fildl
outsw
ja
int3
and
ret
mov
sub
sbb
cs
xchg
mov
inc
pop
push
xchg
sbbb
xchg
pushf
or
jl
cwtl
pop
js
insl
ret
cli
push
insb
cltd
and
inc
out
mov
adc
test
in
mov
mov
out
mov
push
lahf
push
and
jo
inc
xor
adc
outsl
sub
sbb
and
or
test
push
in
loope
add
sub
je
jns
mov
popf
aas
mov
mov
out
and
test
lds
inc
in
sbb
push
push
pop
stos
aaa
dec
push
jle
cmp
addr16
or
push
ljmp
inc
and
mulb
rolb
inc
sti
inc
jnp
and
and
lods
les
mov
push
into
std
xchg
pushf
and
adc
xchg
jo
outsb
adc
xor
adc
lcall
imul
lods
pop
xor
lahf
sbb
xchg
and
mov
push
fwait
ret
nop
repnz
sub
ror
inc
fcoms
xor
xchg
dec
in
fildll
push
cmc
into
jno
mov
xchg
mov
dec
jae
add
pop
xchg
add
push
test
sbb
nop
shll
push
pop
or
mov
mov
jp
mov
inc
inc
stc
mov
xchg
es
cltd
inc
jmp
pop
outsb
push
jne
nop
push
sub
divb
leave
mov
imul
pop
push
mov
or
xchg
inc
sbb
push
out
mov
xlat
hlt
test
in
cwtl
fsubs
mov
mov
xor
inc
push
jp
rorl
push
dec
cmp
stc
and
pushf
dec
lea
aad
loop
pop
jg
leave
jge
call
imulb
xor
orb
mov
xlat
sub
push
cmp
mov
xchg
test
add
xor
std
xchg
pop
hlt
mov
out
das
push
xchg
movsb
pusha
imul
xchg
push
jbe
mov
inc
pop
sti
mov
div
dec
test
xchg
dec
push
dec
or
sub
repnz
jbe
das
inc
xchg
movsl
pop
cmpsl
jae
out
sbb
not
xlat
shr
push
mov
mov
dec
sarl
xchg
cmp
into
adc
ret
pop
dec
std
repz
ljmp
mov
sub
inc
sub
jmp
ret
push
fistpl
dec
outsb
sbb
sub
inc
aas
sbbl
xchg
push
test
xchg
or
or
or
add
sub
dec
pop
ret
fisubs
cld
jns
aam
dec
int3
sub
jmp
xchg
or
sub
cmp
scas
mov
in
sub
sbb
dec
aaa
mov
aam
out
add
les
add
jmp
aaa
inc
adc
jo
popf
push
jne
mov
inc
jmp
xchg
xchg
aad
loope
sbb
into
ds
icebp
sbb
shll
scas
mov
ret
lcall
cmp
fildll
xor
dec
ss
add
inc
fwait
shl
mov
cmpsb
out
dec
std
cmpsl
jae
mov
aad
insl
lahf
fstpt
lcall
cmpl
movsb
jecxz
inc
or
dec
fcmovne
xor
inc
cmp
xor
mov
addr16
rorb
jae
pop
nop
sub
inc
mov
mov
scas
scas
pop
fdivl
pmaxsw
lea
jl
push
adc
push
hlt
mov
ret
jmp
adc
out
aas
arpl
pop
into
cmp
roll
xlat
pushf
pop
jbe
imul
insb
or
mov
stos
mov
add
mov
bound
jb
mov
mov
mov
loopne
mov
sub
mov
push
lea
sub
addl
adc
dec
ret
mov
movsl
adc
and
dec
jge
and
pop
mov
xor
adc
imul
ljmp
and
jb
in
hlt
sub
aad
xchg
fcmovne
xchg
in
jle
add
mov
shll
xlat
ret
inc
cs
push
test
clc
pop
push
jmp
jbe
fcmove
sub
stos
lcall
mov
xchg
push
push
pushf
pushf
inc
ret
sub
jns
lret
movsb
fimuls
in
jl
stos
and
sub
or
jno
stos
push
xor
push
mov
loop
pop
test
cmp
xor
and
push
xchg
mov
out
pushf
jbe
cld
fsubr
cmpsb
nop
jge
sbb
xchg
pop
lcall
or
xor
fists
pop
xchg
pop
jg
sub
pusha
cs
xchg
pushf
pop
cs
xchg
movsb
sbb
cmp
clc
test
mov
aad
je
fadds
sub
adcl
ja
push
insl
pushf
sbb
pop
jecxz
lods
push
ss
pop
xchg
lea
aas
inc
out
lock
pop
loopne
jmp
pop
sti
sbb
xchg
loopne
cmp
dec
xchg
lods
mov
mov
add
pop
mov
mov
mov
shlb
xor
inc
int3
cmc
aas
cmp
adc
sbb
add
aad
repz
mov
cmc
add
out
out
jno
lret
mov
insb
leave
sbb
cwtl
mov
sbb
cmp
jl
jge
adc
inc
cmp
iret
ljmp
dec
xor
add
mov
cltd
stos
inc
sbb
cmp
jbe
mov
mov
out
mov
into
xchg
jo
in
push
insl
jmp
pop
fwait
imul
call
stc
js
les
loopne
xor
mov
and
inc
inc
sti
mov
mov
jge
mov
es
insl
std
push
in
lea
loope
inc
fdivrs
int3
dec
fistps
cltd
dec
aam
popf
cmc
push
es
mov
iret
mov
fidivl
xor
es
fisubrs
or
or
cwtl
dec
adc
int
sbb
sbb
or
pop
ja
or
inc
and
nop
stos
inc
es
stos
mov
mov
aaa
cli
sub
les
sub
into
mov
sbb
dec
or
pop
sub
jne
mov
inc
mov
add
cwtl
and
out
and
lret
js
jmp
cmpsl
filds
and
and
sbbl
lret
jo
lcall
pop
test
mov
add
dec
aam
jmp
stos
loopne
pushf
push
push
icebp
inc
inc
jnp
mov
jns
sub
cltd
sub
or
push
jb
ljmp
fcomps
adc
psllw
xor
mov
hlt
mov
aad
adc
push
push
mov
sub
andb
pop
jp
jbe
mov
or
add
mov
pop
push
nopl
aaa
cld
enter
or
or
mov
aad
call
iret
lret
xchg
push
dec
add
mov
adc
out
dec
scas
icebp
popa
cmp
enter
adc
iret
lret
cmp
jmp
cld
and
imul
into
jae
mov
mov
cmp
enter
and
mov
rcrl
js
fidivrs
push
and
fdivrl
mov
cmpsb
xchg
loop
scas
jno
lea
test
imul
lahf
out
loop
sbb
fnstenv
xchg
fisttps
pop
test
xchg
repz
xor
push
shrb
mov
sbb
arpl
loope
or
and
or
arpl
mov
gs
mov
mov
pop
inc
scas
outsl
dec
sub
iret
lods
js
adc
pop
sub
jno
flds
xchg
aam
xor
out
cmp
pop
movsb
sub
aam
lahf
stos
jne
jmp
pop
mov
lock
in
or
imul
inc
push
in
lret
lock
or
test
jmp
arpl
inc
out
jae
orb
arpl
roll
nop
jmp
in
sub
in
jbe
jmp
inc
ja
cmp
ret
cmp
pop
pop
mov
adc
dec
push
into
lock
lahf
xor
je
and
pushf
addb
push
pop
lds
lret
xor
add
and
pop
scas
fld
decb
data16
cld
fwait
or
xchg
jmp
jmp
pop
cmp
and
iret
pop
and
stos
dec
and
pop
in
stos
cmp
adc
jg
dec
cmp
scas
into
dec
jo
add
jle
ret
sub
js
push
sub
xchg
fcoml
dec
sub
xchg
ret
sub
fstpt
pop
cwtl
mov
hlt
icebp
push
push
ja
push
jecxz
js
imul
inc
mov
mov
mov
or
fldt
jecxz
lret
inc
adc
push
mov
call
mov
out
or
mov
mov
lock
jno
movsb
int
pop
daa
cld
jno
insl
lods
movsb
dec
pop
pop
arpl
sbb
cli
mov
pop
xchg
add
xor
and
jecxz
stos
xor
fimuls
imul
jecxz
mov
cmpsl
arpl
mov
imul
mov
jle
push
pop
jno
jecxz
sub
fildl
fsts
sub
xchg
adc
aas
mov
or
cmc
jg
idivb
jno
pop
push
out
jecxz
into
and
or
in
data16
xchg
int
movsb
ficomps
xor
mov
sub
sbb
mov
xor
mov
int
push
inc
or
ret
cwtl
push
fcomps
push
jb
outsl
fiaddl
push
jl
jl
mov
test
pop
fadds
lods
leave
das
lods
in
push
push
insl
pop
sub
jecxz
and
sub
out
push
in
add
mov
cs
or
xchg
loopne
pop
in
cmp
pusha
aad
js
push
push
or
lods
and
xor
push
mov
in
dec
jae
mov
sub
out
mov
movsl
lcall
cmpsb
mov
adc
mov
cltd
jne
push
fiaddl
add
adc
in
adc
sub
push
ljmp
out
pop
cmc
inc
call
mov
in
push
into
popa
jb
popa
fisttpll
push
imul
jecxz
stos
scas
sub
out
dec
testl
and
push
das
mov
lahf
hlt
cld
imulb
leave
push
ljmp
and
pop
or
inc
pop
into
test
ljmp
or
pop
push
jbe
inc
adc
dec
int3
movsb
into
inc
aam
icebp
ja
or
pop
out
mov
daa
int
or
loopne
xchg
xchg
in
cmp
xchg
jg
dec
test
sub
sbb
daa
sub
and
fstpl
rcll
fadds
and
sub
push
cmc
into
outsl
insb
or
cmpl
jb
cltd
fcomip
dec
outsl
lea
shlb
lods
in
adc
xchg
jb
jmp
sbbl
lahf
jge
lcall
lods
mov
scas
sbb
cld
in
sub
xchg
out
mov
inc
xchg
das
movsl
ljmp
fld
out
sbb
daa
mov
rorb
repnz
decl
rcl
imul
dec
inc
pop
cmp
jmp
push
push
pop
loop
mov
iret
jo
adc
xor
test
xor
test
loop
bound
xchg
adc
jmp
pop
sub
adc
imul
push
pop
jge
lds
lods
add
pop
fwait
mov
mov
call
mov
dec
lret
mov
pop
movsb
enter
sub
mov
xlat
lret
iret
addr16
cmp
aad
cmp
or
dec
cmpsb
inc
sub
js
and
xor
jecxz
xor
inc
fwait
pop
mov
cmc
jne
sbb
je
xchg
fldl
bound
arpl
stos
cmp
test
or
imul
adc
add
sub
les
xor
arpl
clc
jne
sbb
or
mov
xor
das
push
pop
aad
lahf
call
daa
out
inc
xchg
in
clc
popf
add
and
stos
loopne
mov
pop
pusha
push
gs
xor
and
xor
dec
pusha
lcall
ja
ret
cs
jg
dec
test
nop
cmp
sub
pop
lds
sti
mov
pop
test
adc
sahf
pop
xorb
out
stos
or
cmc
xor
movsb
pusha
and
cmpl
push
dec
rorl
es
ljmp
jg
fucom
loope
ret
xor
cs
jle
or
adc
leave
add
xchg
mov
cmpsb
add
xor
push
sbb
push
fiaddl
jmp
loop
insl
cmp
and
cmpsb
pop
jae
adc
sub
lods
clc
loope
insl
loopne
js
imul
jmp
add
lcall
icebp
xchg
adc
out
mov
cli
lahf
fstl
ds
jbe
cmp
jge
mov
xchg
jmp
rcrl
gs
pop
xchg
addr16
cwtl
cmpsb
jp
in
icebp
pop
and
imul
lock
iret
xor
pop
shrl
aam
fadd
jl
xchg
mov
fwait
push
shrl
imul
mov
daa
cmp
shr
or
inc
push
cmp
sti
mov
mov
mov
xor
xor
fucomp
call
gs
mov
pop
pop
push
popf
lea
xor
xchg
cli
iret
ljmp
ljmp
scas
adc
sub
mov
cmpsl
daa
or
aad
dec
mov
enter
sahf
and
hlt
test
repz
daa
pop
push
and
push
push
das
loope
imul
xchg
mov
jmp
mov
lret
popf
pushl
imul
or
cmc
cmp
js
or
lret
add
iret
xchg
cmp
add
sti
lea
pop
movsb
ret
mov
jl
mov
movl
int
or
pop
push
push
lock
xchg
xchg
ds
or
les
xor
pop
or
xchg
sahf
mov
aaa
push
in
aad
jl
pop
test
or
js
ret
mov
loope
lock
xor
mov
cmp
hlt
cmpsl
popf
mov
cmp
mov
sub
mov
insl
jno
ret
inc
dec
pusha
stos
dec
in
xor
sbb
movsl
mov
push
cmp
adc
inc
or
xchg
fcmovbe
adc
insb
call
ficoml
adc
cli
jp
xchg
sub
push
lret
sub
into
add
push
bound
cwtl
out
popl
add
popa
mov
clc
jecxz
add
pushw
jmp
or
inc
ljmp
push
das
pop
cli
inc
fs
test
fcoml
or
inc
dec
shrb
scas
mov
shlb
xchg
pop
cs
add
push
push
push
out
pop
or
push
lock
inc
orb
jbe
inc
sbb
or
popa
cmp
push
xorb
jl
xor
xlat
and
ljmp
pop
add
and
stos
push
mov
ret
movzwl
sub
aam
mov
push
lock
repnz
adc
pop
fldenv
cs
push
je
cltd
jb
cmpsl
push
lret
js
fldcw
ret
jp
nop
and
or
cmp
ret
decb
cmp
jb
daa
repz
jo
shrb
add
popa
lcall
stc
insb
pop
adc
std
andl
and
movsl
addr16
mov
repz
test
cld
or
repz
vmovaps
jp
in
rcrb
into
lahf
mov
fmuls
stos
xchg
std
test
cmp
test
outsl
inc
scas
xchg
fadds
mov
hlt
mov
mov
and
sbb
mov
pop
mov
xchg
xor
sbb
dec
push
cmp
pop
xor
jnp
test
and
ret
lcall
aas
push
jp
scas
pop
arpl
sbb
jmp
jbe
loopne
icebp
imul
aas
jl
ja
dec
test
in
lea
mov
sahf
loopne
data16
and
shlb
and
daa
shll
mov
popf
or
inc
scas
outsb
aaa
pop
mov
insl
in
ja
out
add
sbb
push
out
subb
push
sub
cmp
xor
and
sbb
mov
imul
mov
in
dec
push
lods
sub
push
aam
pop
dec
adc
iret
aaa
lcall
jne
xor
int3
subb
jbe
ds
push
inc
repz
rolb
dec
in
xor
lret
mov
fs
in
push
jmp
test
inc
mov
xchg
xchg
test
gs
mov
jle
cmp
loope
les
pop
xchg
sub
mov
inc
lea
add
inc
jle
enter
incl
jmp
sarl
xorl
adc
adcb
iret
imul
mov
jae
mov
push
ljmp
sbb
cmpsl
test
fidivl
rcl
mov
sub
jb
mov
ds
je
inc
cld
xor
push
nop
xor
mov
sub
outsb
lahf
mov
negb
pushf
int
cmpsl
dec
test
xchg
inc
fs
sarl
aaa
divl
cwtl
jp
push
mov
fwait
dec
sahf
lods
fwait
push
aas
push
pop
pop
andb
cmc
addl
js
fwait
daa
add
push
fwait
add
popf
mov
jbe
in
cmpl
xchg
inc
cmp
jbe
fs
pushf
subb
mov
dec
and
and
fs
lods
jnp
loopne
sbb
pusha
shrb
test
dec
dec
adc
xchg
ss
lock
xchg
sub
and
inc
scas
sbb
mov
add
or
int3
add
sbb
cmc
fildll
xlat
inc
jg
aam
cltd
cmc
lahf
std
fisttpl
scas
test
fdivrl
push
fwait
int3
pop
lahf
jo
cmp
cwtl
mov
insl
insb
push
fs
xor
and
dec
mov
jmp
sbb
repz
push
out
fwait
xchg
push
pushf
aad
je
adc
inc
lret
int3
mov
int
xor
movsb
xchg
lcall
js
addr16
fildll
int3
mov
xlat
aas
inc
push
sbb
push
xchg
inc
aad
lods
es
xor
or
sub
push
jne
cmpsb
dec
inc
push
mov
in
dec
insl
xchg
int3
cld
clc
jb
sub
mov
sbbl
test
pop
leave
jl
sbb
push
mov
roll
roll
test
ljmp
ss
int3
xor
and
clc
dec
jae
mov
adc
mov
mov
scas
out
add
into
bound
inc
addr16
push
loop
ss
and
add
xchg
ret
in
xor
js
dec
cs
mov
mov
sbb
sbb
dec
aas
mov
xchg
jnp
mov
push
mov
cmp
or
push
cmc
inc
jge
inc
int3
cmp
push
xlat
add
insl
push
xor
out
ret
xchg
pop
jns
cmp
pop
push
sbb
adc
cmp
xor
in
hlt
inc
xchg
loopne
pusha
push
out
sbb
repnz
sub
pop
aad
mov
mov
xchg
hlt
pop
das
out
sahf
int3
outsb
mov
dec
jo
movsl
filds
mov
and
imul
rolb
push
sbb
or
push
dec
repnz
mov
or
jns
inc
sub
scas
jl
sub
fsubr
call
jb
inc
mov
outsb
pop
and
dec
cltd
adc
sbb
jge
xor
test
xor
ret
fistpll
pop
push
adc
fnsave
pop
inc
je
jb
ret
mov
and
sbb
mov
in
or
adc
inc
jno
inc
xchg
push
es
lcall
pop
aam
shr
les
jno
or
arpl
mov
xchg
fs
pop
ja
lret
iret
test
fdivs
sub
pop
and
js
int3
sti
das
pop
test
fs
fistl
jl
xchg
shlb
adc
dec
xor
and
mov
divb
jnp
enter
ljmp
push
jle
or
cld
leave
icebp
adc
test
in
outsb
jns
and
jmp
adc
out
enter
sti
xor
xchg
scas
mov
jae
jo
test
int3
lret
cmpxchg
xchg
mov
into
adc
inc
xchg
lcall
leave
bound
and
nop
pop
fisttpl
repnz
push
inc
mov
cmp
fsubrs
xor
fdivrl
pop
ss
mov
mov
mov
test
xchg
sub
and
cwtl
stos
xchg
xor
in
fmull
mov
inc
cmp
inc
mov
int3
int
fdivp
and
ret
jae
dec
cmp
stos
and
add
orb
jecxz
sub
ret
push
repz
inc
dec
jb
push
jno
aaa
movnti
jns
data16
jmp
stc
push
add
pop
cmp
xchg
cli
sub
inc
shl
mov
pop
cmp
fidivs
stos
mov
dec
leave
or
cmpsb
jl
popf
ds
push
fwait
lret
inc
es
cmc
adcb
les
push
mov
jae
lcall
xchg
outsl
imull
aas
aam
mov
and
sbb
cs
popf
scas
or
pop
in
lret
enter
jg
dec
sahf
cld
pop
clc
lea
lret
xchg
xor
and
sub
sahf
and
fsubrp
pusha
or
cmpsb
bsr
mov
rorb
sbb
cmpsb
outsl
mov
ja
int
inc
push
psubusw
xchg
mov
or
push
imul
and
pop
push
sbb
and
xor
mov
inc
sbb
mov
mov
push
sub
fwait
mov
mov
dec
out
push
pop
mov
push
sti
in
les
jle
and
cld
fldenv
jno
ja
jns,pn
pop
out
inc
pushf
data16
adc
xor
and
or
imul
push
enter
cmp
aas
pop
out
rcrb
inc
cmpsl
pop
mov
movsl
inc
jecxz
jns
lcall
inc
movsl
imul
and
jno
lea
sarb
call
push
out
outsb
pop
pop
lock
xchg
or
push
xchg
jg
out
rcl
test
dec
fcompl
xchg
incl
cwtl
stos
lret
jmp
into
push
jae
xchg
cmpsb
and
mov
movsl
frstor
xlat
int3
push
or
lods
adc
in
sbb
mov
push
mov
outsl
ss
and
enter
pushf
inc
cmc
test
xor
lods
pop
pop
dec
pushf
jno
in
jb
rolb
xor
jne
movsb
mov
mov
sbb
mov
sbb
adc
fwait
loope
dec
cwtl
int
int
jno
jmp
pop
jnp
js
jae
push
xlat
jne
xchg
aad
and
xchg
add
xorl
fisubs
cmp
jae
data16
sub
in
int3
jae
sub
nop
pushf
adc
push
or
and
fwait
stos
mov
roll
cmp
add
mov
stos
inc
loope
inc
repz
pop
aas
xchg
ljmp
and
pop
shl
sahf
aad
mov
push
andb
xchg
dec
cwtl
imul
pop
cli
stos
es
test
pop
iret
std
mov
fnstenv
xchg
int3
pop
in
cmp
inc
mov
dec
dec
pop
push
push
es
xchg
mov
call
cwtl
outsl
hlt
mov
jmp
fbstp
mov
les
xor
push
sub
pop
mov
push
daa
jmp
sbb
int3
shl
out
mov
or
xchg
int
fcmovbe
cmp
xorl
inc
mov
mov
xor
clc
shrb
pushf
cmpb
std
nop
popa
sqrtps
aas
fcomps
int
sub
test
push
mov
mov
jae
cli
adc
xor
out
stos
insb
lret
inc
mov
and
sti
loop
ret
push
faddl
sbbl
cld
adc
movsb
jbe
rclb
mov
lods
xor
xchg
dec
cld
cmp
or
and
pop
stos
sbb
cmpsl
loope
sarb
scas
push
jns
and
sub
jp
xchg
sbb
mov
cs
fwait
gs
jbe
sbb
rorb
mov
ljmp
mov
neg
mov
push
ds
xchg
and
out
mov
jg
mov
and
loop
int3
aam
pop
jmp
setae
inc
and
enter
or
xchg
iret
aaa
lds
scas
adc
add
jne
mov
rcl
cwtl
movsb
add
jecxz
ss
mov
dec
mov
out
aam
or
ds
ret
fildll
mov
stos
nop
mov
pop
jns
mov
pushf
sbbl
xorl
movsb
mov
popf
movl
mov
insl
aad
nop
rcll
rclb
inc
cld
pop
stos
jns
popf
les
ds
cmp
fisubrl
jns
mov
jle,pn
rcrl
inc
jbe
xchg
add
add
mov
mov
fstps
mov
or
jne
mov
sbb
std
dec
jp
lahf
movsl
sub
adc
pop
loope
and
mov
out
push
hlt
add
leave
pop
dec
insl
xor
push
faddp
call
leave
ds
aas
das
cwtl
sbb
jbe
and
addr16
xorb
cmp
sub
lret
push
mov
aam
inc
jecxz
or
mov
adc
sub
jb
cs
das
add
push
pop
aaa
add
fldt
and
frstor
push
mov
jp
cwtl
mov
xor
lret
loop
int
add
cwtl
xchg
stc
add
sti
clc
js,pn
push
data16
popf
stos
mov
or
jg
mov
outsl
sbb
pusha
mov
mov
jno
dec
add
sub
lahf
in
decl
mov
jb
cmc
out
sub
dec
outsl
into
divb
mov
cmp
mov
dec
cli
mov
aas
jmp
outsl
cmp
xchg
push
and
int
jnp
out
dec
add
mov
xor
scas
xor
cs
cwtl
shll
adc
jg
pop
add
daa
xchg
cmp
mov
jne
gs
rcrl
jae
and
mov
in
mov
pop
test
fbstp
dec
movswl
jbe,pn
sub
fdivs
dec
movsl
lcall
push
pop
mov
aam
mov
xor
les
cltd
incl
daa
je
mov
fsubl
inc
dec
jne
mov
jno
lds
pop
dec
cli
jo
push
mov
mov
std
xchg
push
js
xchg
adc
lret
icebp
pop
lods
lahf
pushf
dec
mov
filds
cmp
test
sahf
xchg
in
jnp
ss
ret
cmpsb
sbb
inc
jl
sub
shrl
mov
dec
jbe
add
stc
jmp
stos
xchg
push
cltd
pop
add
enter
aaa
fsub
adc
lret
jg
mov
js
shlb
cmc
sbbl
cmp
leave
push
pusha
and
daa
sarb
inc
mov
jns
cmp
imul
les
insb
add
and
sbb
dec
lods
jae
mov
imul
pop
insl
adc
pusha
mov
jge
divl
pop
jo
adc
xchg
scas
cmp
sbb
dec
jns
frstor
pushf
xor
jae
jne
jmp
jl
sbb
lock
stc
jge
shrl
movsl
fcompl
gs
pop
xor
mov
jno
sbb
iret
push
es
jae
pop
xchg
out
push
mov
xchg
pop
jl
push
dec
sahf
les
dec
xlat
add
int
mov
xor
das
movb
fwait
dec
imul
and
popf
mov
loop
dec
xor
mov
lds
orb
jl
int
std
jno
lcall
bound
adc
jl
jb
stos
lea
push
xor
loop
xchg
pop
test
repnz
and
sbb
mov
push
xchg
sub
cmp
sub
lods
jmp
mov
arpl
or
mov
iret
fwait
mov
mov
or
push
inc
in
fisubrl
jo
push
sub
cmp
inc
call
sahf
push
js
jnp
ror
xchg
insb
jno
jmp
dec
cmp
fdivl
xchg
dec
mov
xchg
mov
rolb
sub
push
mov
subl
push
inc
in
clc
loopne
lcall
fcmovne
out
ret
xchg
jg
loopne
adc
jecxz
sarb
inc
sbb
and
xor
stos
add
aad
xchg
fsin
daa
loop
scas
mov
pushf
lea
js
mov
sbb
div
aam
cs
and
aaa
fdivr
mov
dec
inc
loop
push
mov
mov
fsubrl
mov
sbb
in
movsl
pushf
aam
cmp
fidivl
stos
clc
pusha
mov
xchg
mov
js
xchg
pop
pop
aaa
add
or
mov
xchg
stc
mov
or
aaa
pusha
stos
dec
fmul
imul
dec
cmp
pop
test
stos
or
jae
mov
or
outsb
xchg
jno
fildll
jge
stc
test
mov
mov
cmp
in
adc
ds
or
add
cmp
sbb
inc
jle
sarb
adc
test
jb
pop
mov
divb
mov
cli
mov
mov
test
pop
je
fstps
repnz
aas
xlat
int3
ret
arpl
fdivr
push
pop
orl
sbb
adc
out
mov
inc
nop
jno
mov
lret
mov
mov
dec
jg
mov
jo
pop
and
and
cmp
es
das
ret
pop
dec
div
fnsave
sub
mov
lahf
cmp
rorb
iret
cltd
lret
sti
es
aad
outsb
shll
lahf
xor
xchg
mov
pop
dec
inc
addr16
dec
push
push
cmovg
mov
inc
int3
cld
mov
or
cmp
dec
mov
xor
sti
mov
sub
cmpb
es
std
popa
mov
push
test
gs
inc
loope
push
inc
mov
int3
jne
cs
and
pop
sub
iret
je
dec
xchg
pop
xor
inc
std
das
lock
icebp
mov
sahf
cmp
popa
push
movsb
int
and
pop
mov
inc
sub
or
xchg
dec
fsubrl
pop
mov
pop
adc
or
push
push
loopne
mov
push
push
push
scas
test
int3
je
popa
mov
sbb
fdivr
inc
or
fsubs
in
out
mov
mov
lods
mov
or
mov
mov
pop
mov
pushf
stos
bound
mov
in
aaa
push
ret
mov
mov
stos
fldenv
sahf
js
pop
push
inc
fsubrs
sub
fisttps
cmp
out
jo
pop
mov
xchg
scas
loope
mov
sbb
adc
push
test
jl
clc
call
jns
fnstcw
xchg
imul
sbb
jmp
cmp
popa
add
sbb
mov
movsb
push
mov
cli
mov
lahf
enter
sub
inc
fnstsw
cmpsb
in
and
cmp
mov
mov
scas
inc
popf
repz
jmp
mov
scas
fisubrs
jge
icebp
mov
xchg
stos
loope
jmp
mov
daa
iret
inc
cmpb
sahf
xlat
jns
jecxz
add
xor
xor
and
clc
ret
jnp
dec
cs
fwait
int
cli
mov
mov
rcrb
lret
cli
lds
xor
dec
pop
aad
pop
jle
inc
shll
test
inc
push
mov
fldenv
jmp
adc
xchg
sub
outsl
dec
jecxz
andl
cmp
sahf
les
fs
into
dec
cmpsb
adc
loop
cmovg
mov
inc
cmp
movsl
daa
je
adc
dec
push
repnz
mov
mov
adc
dec
inc
lock
jb
jmp
jns
insl
mov
and
mov
sub
test
lods
add
jp
loop
rcrb
flds
inc
les
insl
add
dec
lret
int
pushf
bnd
mov
test
jb
add
and
jle
jbe
repnz
cmp
mov
jg
mov
out
ja
cwtl
scas
dec
mov
cltd
sub
cld
loop
mov
mov
dec
sbb
add
mov
mov
cmp
icebp
ret
xchg
push
mov
jns
imul
mov
xchg
fdiv
pop
pop
add
shl
pop
push
shll
xor
xchg
push
aas
in
lret
je
lret
test
adc
aam
mov
fildll
ljmp
xor
cbtw
sahf
push
xchg
stc
sahf
lock
andb
push
mov
in
bound
ja
jmp
cmpsl
leave
sub
out
push
call
repz
xchg
std
ds
aad
out
scas
les
pop
mov
repnz
das
jb
push
add
sbb
cmpsl
jmp
adc
push
sub
jbe
fisubrl
jns
lea
ror
pop
xchg
rorb
inc
sub
dec
int3
sub
pop
je
cld
or
out
xchg
fstpt
mov
and
stc
aaa
jecxz
fwait
cmp
or
rorb
adc
es
in
inc
inc
cwtl
cmp
xchg
popl
add
push
mov
cli
pop
sbb
sub
adc
shll
leave
mov
loop
lods
jno
inc
fimuls
int3
inc
cmp
fidivs
pushf
gs
lcall
lods
xor
iret
cli
seta
mov
inc
mov
rcr
pop
push
jecxz
div
adc
mov
je
sbb
push
pop
loop
outsl
out
shlb
adc
pop
push
jnp
sub
int
into
lret
mov
insl
cli
sub
dec
int
lds
push
sti
pop
imul
jle
xchg
stos
loop
stc
xor
and
pop
cmp
mov
mov
sti
adc
test
lret
aaa
stc
mov
repz
adc
ljmp
jns
mov
sbb
cmp
mov
adc
in
out
aas
movsl
adc
jmpw
sbb
inc
push
cmp
adc
jnp
data16
mov
jmp
sub
sbb
pop
pop
loopne
mov
sbb
pop
and
sbb
cmp
mov
mov
jg
fcoml
in
sti
loopne
addr16
push
sub
mov
les
iret
imul
pop
dec
popl
add
add
shll
pop
dec
lret
or
jb
pop
adc
dec
mov
push
push
sbb
ret
lods
add
xchg
xor
jle
sub
mov
push
push
xchg
aas
adc
pop
fcmovnbe
dec
sub
add
ljmp
pop
dec
xchg
xchg
je
aas
inc
pop
aaa
pop
out
pop
pushf
pop
lret
push
stos
out
cs
ret
movsb
out
mov
out
xor
jns
mov
inc
ret
mov
cmp
outsb
adc
test
mov
xor
outsb
loopne
pusha
call
jb
pop
and
scas
push
test
cld
or
fimuls
and
lcall
js
into
pop
inc
loopne
inc
xor
push
cs
mov
push
movsl
subl
sub
xchg
and
jmp
faddp
and
out
enter
rcr
mov
js
xor
push
rcrb
add
test
pop
sbb
out
mov
sarb
sarb
pushl
into
mov
or
icebp
jbe
das
maxps
jmp
scas
jbe
das
jnp
out
imul
dec
data16
jae
daa
or
cmpsl
mov
fisttpl
xchg
enter
inc
das
dec
addr16
pusha
cmpsb
mov
pop
or
add
bnd
andb
in
fdivrs
sbb
imul
popa
adc
sub
fcomp
loope
outsb
lcall
test
add
or
aam
sub
add
lret
cmpsb
adc
push
sub
push
jg
in
push
add
nop
js
inc
push
arpl
hlt
xchg
mov
cli
imul
lock
xchg
mov
rorl
cwtl
jp
iret
aas
mov
xor
test
adc
mov
lds
ret
dec
lret
jbe
push
add
xor
lret
inc
push
movsb
sbb
outsb
imul
std
out
xor
sbb
in
mov
or
insb
or
xorl
mov
or
shll
stos
scas
dec
cltd
sbb
inc
jno
imul
push
mov
js
cmp
xchg
ds
aad
mov
fs
cwtl
in
repnz
imul
popa
dec
and
mov
lods
jb
movsb
add
pop
iret
fcoms
andl
bound
mov
pushf
dec
arpl
stos
lock
jmp
mov
fdivp
aad
dec
adc
clc
es
jge
jbe
aaa
hlt
push
and
xchg
lods
push
jb
adc
sub
mov
nop
lock
jno
sub
mov
adc
ret
adc
mov
fsub
ljmp
push
add
mov
cld
xor
cs
inc
ret
push
jle
pop
adc
sbb
push
roll
mov
xor
and
jb
cmp
sub
cwtl
jecxz
rorl
jl
in
sbb
fcoms
jle
loopne
inc
inc
cltd
lret
enter
xor
mov
cwtl
lea
xchg
loop
lcall
test
lock
xor
inc
jo
dec
mov
sahf
mov
cmp
nop
or
inc
out
ret
fstp
push
mov
jns
mov
dec
in
cmp
pop
lods
movsb
mov
push
xor
pop
inc
push
sbb
pop
fimull
int
sub
loope
jae
stc
insb
xor
insb
sub
fimuls
outsb
and
fldenv
sbb
insb
insb
jl
cmp
arpl
jle
fdivs
subl
push
mov
add
sub
ds
loope
test
mov
xchg
sbb
sbb
jb
or
clc
pop
es
dec
xchg
push
orl
pop
dec
xor
cmp
fiaddl
lahf
loope
frstor
xchg
out
int
sbb
push
jp
outsb
gs
rorb
rclb
or
push
in
jmp
or
xor
loope
pop
mov
sbb
lahf
dec
jbe
add
cmc
xchg
les
mov
jmp
mov
es
add
jo
mov
inc
lods
mov
or
outsb
lods
add
cmp
outsl
imul
repnz
jnp
inc
mov
mov
cmp
lea
mov
pop
mov
repnz
push
push
popa
add
dec
ljmp
sbb
xor
and
dec
lock
cmpsb
xor
rcrl
mov
int3
jne
cmpsl
loop
fidivrs
and
test
xchg
pushf
and
lods
push
mov
rorl
cli
cmp
cmp
repz
lret
jo
test
lahf
pop
sub
sbb
mov
sbb
sbb
sub
mov
int
inc
neg
mov
jne
mov
dec
ljmp
or
in
add
adc
leave
in
jo
xchg
push
addl
or
clc
fbstp
jle
pusha
sub
dec
add
enter
mov
xor
jns
mov
pop
jns
lods
cli
mov
bnd
fs
shll
int
xchg
test
outsb
scas
jne
xchg
and
mov
cmp
das
push
dec
sub
lods
int3
outsb
pop
xchg
push
sbb
cmp
ljmp
and
xchg
mov
jl
dec
jmp
lds
popa
adc
std
insl
lret
or
pop
jmp
xchg
mov
iret
add
fdivl
addb
lret
push
push
pop
fnstcw
pusha
push
imul
dec
movsl
add
add
mov
inc
adc
pop
stos
dec
adcl
inc
and
ret
aad
mov
mov
rclb
sub
sahf
out
js
bswap
xor
fwait
cmp
inc
imul
loop
loop
dec
ds
hlt
gs
push
out
add
inc
push
aas
notb
push
mov
xor
jns
mov
add
cmpsb
jp
push
cmp
or
inc
rorb
sbb
pop
xchg
sbb
fwait
and
xor
test
nop
adc
lret
leave
les
jmp
mov
dec
leave
pshufw
lds
xor
and
shr
jge
fstpt
sbbb
imul
inc
aas
stos
movsl
mov
addr16
sbb
lret
icebp
xchg
outsb
cmpsb
popf
stc
or
push
mov
cwtl
jl
aaa
xor
xor
out
adc
xchg
xchg
addr16
lahf
inc
xor
add
fwait
dec
push
mov
xchg
test
push
pop
jnp
jg
mov
ljmp
lahf
in
sbb
and
sbb
push
sbb
dec
push
mov
dec
push
lret
lods
cmp
inc
mov
mov
call
lret
enter
cmpsb
jecxz
mov
leave
les
dec
pushf
mov
cmpsl
out
push
mov
inc
cld
mov
lret
mov
xchg
sti
sbb
shl
xorl
jp
ret
lret
nop
lods
pop
das
pop
adc
imul
jae
and
xor
cwtl
test
cmp
xor
add
adc
and
repnz
cmp
xchg
call
dec
mov
js
push
push
ljmp
pop
pop
nop
pop
ljmp
sub
xchg
fstl
dec
pop
cmp
outsl
fsubrs
imul
push
repz
xchg
pop
xorb
mov
roll
clc
cmc
or
sub
leave
fsubp
scas
jmp
mov
or
sbb
cmpsl
mov
mov
scas
adc
fsubs
cmp
fadd
and
out
out
cmpb
jns
xor
cwtl
xorl
fnstenv
xor
sbb
mov
or
jle
test
sarl
jge
insb
xchg
das
imul
adc
sub
ss
dec
pusha
dec
and
imul
add
in
mov
out
es
mov
push
fstp
out
test
loopne
cli
mov
js
adc
test
xchg
push
mov
cmpsl
insl
mov
and
into
fldenv
int
arpl
sub
int
call
out
lock
lahf
or
xchg
es
push
and
pop
imul
repnz
test
imul
gs
jp
jecxz
ds
pusha
hlt
cli
jae
bound
jg
in
xor
sub
addr16
cmp
add
fcoms
add
push
mov
lret
mov
xchg
fcoms
rorl
fists
cmpsb
mov
popf
outsl
cmp
pop
orl
fwait
mov
psubusw
dec
loop
sub
pop
and
dec
repz
xchg
and
cmpsb
fld
xlat
pop
sbb
repz
jb
or
jp
ljmp
mov
mov
int3
outsl
fwait
in
aad
inc
out
or
mov
push
inc
sbb
dec
andb
and
push
dec
dec
xorb
push
dec
push
or
push
push
add
mov
mov
cmp
insb
cwtl
jp
push
repnz
out
mov
fdivl
lea
movsb
push
jns
mov
mov
dec
jl
scas
ds
ror
mov
in
shll
push
in
repnz
pop
inc
cltd
xchg
in
add
add
xor
adcl
stc
dec
stc
stos
imul
inc
xchg
cwtl
cmpsl
out
ficoml
mov
sub
add
subb
cwtl
xchg
add
push
sub
and
ror
lret
mov
out
push
xchg
sbbb
mov
sub
repz
hlt
or
data16
test
fnstsw
popa
lea
sbb
neg
cmc
pop
out
in
jge
mov
lahf
pop
push
shlb
and
pusha
xchg
cs
pop
and
test
fiadds
xchg
sub
rclb
cwtl
lods
add
in
xor
xchg
cmp
jge
and
test
xchg
pop
cld
push
mov
jns
jne
rcrb
xchg
loope
std
xchg
adc
sbb
mov
js
and
sbb
xor
fs
cmpsl
lods
adc
cmp
cmp
sbb
mov
int3
cmp
jno
adc
dec
pop
dec
out
xchg
dec
outsb
pop
sub
stos
cmc
dec
push
jg
push
call
mov
ds
ljmp
cmp
shlb
push
xchg
lahf
inc
pop
lock
xor
pop
loopne,pt
dec
lahf
add
fwait
push
xrelease
cwtl
push
dec
dec
sbb
daa
in
or
mov
ss
shr
faddl
jle
lds
test
mov
adc
or
test
nop
mov
call
cmpl
dec
jo
sbb
xor
loopne
push
inc
mov
add
bound
adc
std
add
loop
pop
dec
stos
pop
out
js
adcl
jge
jp
push
cld
push
lds
data16
les
shlb
pusha
add
sar
sbb
inc
arpl
fcomps
leave
dec
or
fcmovnb
xlat
push
sti
shrb
inc
or
cltd
hlt
test
das
mov
sub
ja
and
inc
pop
lods
popa
dec
call
sub
addr16
rdpmc
add
xchg
orb
xchg
pop
fsubrs
scas
stos
and
lock
es
jl
aas
mov
push
fcom
cs
mov
loopne
aaa
jl
xor
xlat
lods
pop
cmpb
insb
and
mov
leave
pop
xchg
or
addb
fcompl
in
pop
xchg
sbb
inc
subb
cmp
jecxz
push
mov
sbb
scas
jbe
jmp
push
out
or
sarb
test
je
in
mov
iret
movsl
and
repz
popa
and
pop
jge
inc
pop
push
inc
push
loop
push
les
mov
mov
stos
inc
cwtl
sbb
rcrb
xor
js
andb
rclb
add
jge
xchg
inc
or
jno
cli
xor
stos
jp
pop
clc
dec
cs
mov
sbb
rol
jmp
xchg
xchg
jae
xchg
push
xchg
dec
inc
dec
cmp
imul
popa
icebp
aad
and
rcrb
mov
xchg
cli
sysenter
jl
xchg
outsl
rcrb
xor
loopne
hlt
pop
rcll
add
hlt
fists
xchg
movsl
pushf
xchg
sbb
sub
pop
and
dec
fildl
and
xor
mov
lods
xor
popf
fnsave
loop
push
or
sti
lds
cmp
pop
lea
sub
rcrb
sub
repnz
int
ja
stos
push
pop
push
lds
push
cmp
ret
lahf
xchg
dec
sub
inc
test
dec
ret
shl
push
add
and
icebp
mov
jo
loopnew
int
out
fwait
js
jne
pop
xorl
cli
sarb
pusha
imul
inc
fnstsw
fmul
jl
test
ljmp
sbb
inc
scas
out
inc
lahf
shrb
test
inc
imul
inc
xorb
lods
inc
inc
fisttps
aad
hlt
pop
in
or
repz
mov
push
lds
xor
mov
imul
xlat
outsl
int
idivl
pop
mov
lahf
cmp
outsb
xchg
and
mov
in
xor
out
add
xchg
shll
mov
mov
and
dec
sbb
cmp
idivb
pmaddwd
dec
lods
test
aam
xorl
ja
mov
fbstp
cmp
pushf
imul
pop
mov
xor
insl
and
fisubrl
jg
adc
mov
dec
lcall
mov
clc
inc
inc
push
mov
ret
mov
daa
std
mov
dec
pusha
jo
inc
inc
inc
xor
xchg
xor
mov
iret
or
pop
cmpsl
arpl
lret
loope
pop
jbe
test
test
sub
jle
addr16
rorl
jecxz
xor
movsl
xchg
sahf
jbe
adc
jl
stc
jl
outsb
adc
in
pop
jmp
lahf
cmp
mov
test
ret
shl
cmp
mov
sbb
cld
movsb
jnp
xor
mov
dec
push
fsubs
jp
xchg
sbbb
ret
pop
cs
ds
cmp
cmpsb
lods
bnd
mov
inc
inc
cmp
test
add
xchg
ror
sub
inc
pop
pop
movsb
sub
neg
scas
cmpl
shll
or
in
inc
pop
lcall
aad
fdivr
ret
jne
cmp
jae
std
dec
mov
in
mov
pop
xchg
cmp
adc
out
add
xchg
stos
hlt
sbb
aaa
mov
ficompl
and
xorb
lds
cmpl
jmp
adc
adc
pop
in
inc
mov
ja
js
pop
pop
xchg
fsubl
xor
ret
jmp
cmpsb
in
xor
adc
inc
mov
es
iret
mov
adc
mov
xchg
xchg
adc
sbb
or
xchg
sub
cli
and
fmull
inc
dec
arpl
pop
pusha
pusha
mov
stos
xchg
mov
jns
call
xchg
les
icebp
mov
mov
pop
test
jo
pop
inc
stc
inc
fcomi
mov
push
lods
xor
sub
out
push
adc
aaa
cwtl
push
sub
fdivrl
push
xor
pop
insl
lods
sbb
cmp
addr16
cs
outsl
negl
mov
in
add
mov
lods
pop
imul
iret
shlb
ret
ljmp
jg
pop
jmp
ljmp
psrld
jmp
adc
arpl
mov
ret
inc
xchg
xor
mov
pop
cwtl
pop
sbb
out
mov
xchg
roll
adc
xor
fsubrp
inc
sbb
jg
outsb
insl
jecxz
lcall
dec
mov
inc
aas
pop
popa
add
repz
in
pop
std
dec
sarl
or
out
dec
xchg
mov
out
adc
and
mov
push
popa
inc
int3
shufps
daa
in
sub
push
lea
shl
movsl
inc
jno
insb
daa
lea
add
cmp
inc
or
jno
loope
stos
jbe
in
pop
sbb
xor
ss
mov
iret
mov
sti
inc
cmp
push
push
imul
ss
add
push
cltd
pop
rorl
icebp
aas
xor
mov
sub
loopne
stos
lods
adc
pop
aas
test
xchg
jb
shll
cmpsb
mov
mov
inc
jno
xchg
xor
cwtl
aad
sti
mov
loope
mov
jbe
dec
push
mov
ffreep
dec
ds
stos
and
aam
insb
fbstp
push
or
test
mov
mov
inc
adc
mov
mov
or
inc
popf
inc
mov
mov
add
cltd
add
and
rorb
leave
fwait
leave
mov
test
push
push
lahf
lods
push
xchg
sub
js
rcrl
adc
push
fnsave
xor
pop
hlt
sub
pop
xor
test
or
jg
repnz
jle
cmp
push
cmpsb
add
hlt
ror
loopne
sub
imul
aas
sahf
or
mov
cld
sub
jne
cmpsl
pop
gs
cmp
out
imul
mov
dec
out
push
xchg
or
dec
repz
icebp
mov
inc
bound
lods
mov
popf
mov
xchg
scas
popa
mov
es
mov
push
dec
jbe
sti
pop
repz
jo
xchg
bound
or
ja
call
ss
mov
pop
jg
xchg
push
mov
test
rclb
mov
sbb
add
enter
pop
std
add
insl
cmp
popf
push
nop
push
xchg
inc
push
iret
imul
stc
popl
loopne
in
call
int3
cmpsl
inc
in
sar
xchg
ret
jb
cwtl
insb
mov
fbld
lret
jbe
test
out
add
outsb
sbb
push
adc
sbb
or
iret
jecxz
ja
sub
mov
jno
inc
cltd
jb
inc
fs
out
repz
subb
inc
push
mov
sub
aad
sbb
pop
decb
divl
mov
loope
inc
ret
push
mov
popa
push
filds
push
stc
adc
mov
lock
jbe
push
mov
in
mov
repnz
pop
mov
rcrl
int
and
push
pop
pop
lcall
pop
jbe
movsl
mov
push
mov
mov
stos
sub
fnstcw
add
inc
mov
scas
stc
push
test
lock
sbb
add
pop
push
popa
xchg
xchg
inc
inc
cld
mov
or
jb
cmp
rorl
and
insb
test
xchg
sbbb
sub
mov
popa
dec
ret
xor
and
loop
aam
push
cmpsl
cmp
sbb
mov
hlt
inc
loopne
or
or
mov
and
hlt
int
jno
sbb
stc
sub
cld
shlb
inc
mov
imul
sub
repnz
jp
mov
clc
mov
scas
outsb
xchg
jo
inc
or
inc
pop
les
fldenv
lods
xor
inc
push
gs
mov
jl
add
sarb
mov
cmc
scas
jns
ss
scas
lods
push
cmp
add
adcl
cwtl
jmp
sub
cmp
cmp
xor
jo
push
xchg
mov
mov
scas
stos
push
sbb
or
shr
push
insb
je
ficoml
and
int3
cmp
pop
jae
jecxz
pop
xchg
rorl
hlt
mov
sub
fmuls
add
gs
jmp
mov
and
mov
insb
adc
sbb
leave
ss
test
or
insb
loopne
outsb
sti
imul
mov
push
jle
xor
adc
jge
jns
jae
jg
inc
push
fdivs
sbb
repnz
dec
dec
xchg
pop
into
xlat
stos
mov
jg
mov
pop
popa
pop
notl
mov
mov
and
imul
pop
jno
cmpsl
pop
hlt
or
pushw
push
pop
icebp
movaps
sub
subb
cli
push
call
jno
out
xchg
or
mov
js
cltd
popa
adc
lahf
addl
xchg
sub
pushf
push
pop
adc
aaa
jecxz
out
arpl
cmp
mov
je
add
cmp
dec
fwait
mov
mov
out
clc
dec
int3
jge
fisttps
push
push
lret
rclb
dec
xchg
sbbb
cmc
add
fnstenv
adc
fildll
xor
mov
sub
icebp
or
cmpsl
cmp
adc
sbb
or
sbb
imul
push
mov
fsubrs
not
adc
jne
inc
sbb
les
xchg
push
jmp
push
inc
mov
push
jg
idivl
or
out
pop
sub
mov
ja
or
outsb
loope
call
out
in
repz
xchg
pop
outsb
aaa
xlat
sub
lods
ljmp
loope
rol
push
sbb
xor
cmpsl
cmp
jg
xchg
lods
adc
mov
sti
ret
int
xchg
jg
pushf
pop
push
ds
cmpsb
lret
insl
popf
jge
push
pop
outsb
addr16
sub
incb
and
sbb
fistpll
loopne
or
pop
xchg
mov
jb
inc
test
fwait
lcall
cwtl
add
jo
dec
push
xchg
mov
push
mov
dec
pop
mulb
and
push
jnp
pop
fsubr
js
fnstsw
adc
pushf
cmp
call
shrb
mov
sti
insl
cmpl
ss
out
gs
andb
dec
test
inc
popf
into
cmpsb
push
push
andl
dec
and
push
dec
repz
sti
inc
iret
adc
mov
in
lea
and
cltd
insb
or
pushf
push
jbe
mov
cmc
adc
arpl
pusha
sbb
pop
clc
nop
sub
sbb
mov
mov
pop
cmpsl
mov
inc
mov
mov
pop
rcrl
jbe
stc
add
push
xchg
cmpsb
outsb
out
scas
js
push
mov
loop
stos
fisttps
loop
hlt
mov
sbb
sub
mov
jae
inc
mov
iret
inc
xlat
push
repnz
mov
scas
mov
push
push
jmp
lock
mov
mov
scas
hlt
loope
daa
mov
inc
mov
enter
xor
aam
daa
push
imul
out
pushf
push
inc
fiadds
rcrl
test
xchg
inc
pop
mov
push
xlat
imul
adc
dec
fisttpll
cwtl
push
sub
ds
ljmp
ljmp
mov
out
loop
mov
movsb
or
imul
clc
ja
cmp
adc
icebp
push
cli
xchg
bound
and
out
pop
pop
jmp
jnp
sbb
mov
loope
push
out
jne
adc
jne
sbb
xor
sti
aad
mov
xor
push
jno
push
pushf
sub
adc
push
lret
mov
fbld
test
das
pushf
shr
push
cmp
pop
leave
xor
mov
pop
cld
andb
mov
jo
jno
testl
mov
sub
pusha
cmpsb
dec
sar
push
test
push
in
iret
push
or
lcall
fcmovu
pop
icebp
scas
inc
out
mov
inc
cmp
add
mov
or
dec
lcall
pop
sbb
int3
xchg
mov
xchg
dec
jecxz
mov
push
jge
mov
mov
xchg
inc
adc
cmp
mov
push
push
inc
test
mov
push
mov
lret
jmp
mov
mov
and
imul
fisttpl
jb,pn
push
pop
mov
out
sbb
mulb
xchg
addl
jne
mov
sbb
mov
hlt
mov
xor
loope
adc
add
idivb
mov
mov
adc
or
ja
xor
xor
push
and
add
dec
pushf
pop
inc
aas
inc
ds
out
and
xorl
int3
jns
add
sub
add
mov
in
je
pop
loop
mov
stos
lods
mov
hlt
lock
insb
pop
push
sub
orb
pop
int3
cmp
inc
xlat
cmpb
push
movsw
pushf
cmc
xchg
in
mov
bound
std
xchg
jge
jge
xchg
xchg
or
sbb
xor
lret
aam
aaa
outsb
inc
dec
leave
daa
icebp
cs
daa
fs
xor
push
xor
cltd
jecxz
push
mov
ss
insb
std
mov
leave
xchg
jnp
in
jnp
pop
sub
in
dec
shrb
and
lock
inc
inc
aas
pop
cmp
add
aad
add
xorb
ja
ljmp
jnp
jb
insb
and
mov
cmpl
into
push
mov
lock
cmp
sub
and
mov
cmp
xchg
xor
ficompl
xchg
enter
iret
daa
inc
mov
and
mov
fldl
stc
or
imul
jb
das
test
xor
pop
mov
inc
data16
add
outsb
mov
inc
daa
xchg
jns
lcall
pop
std
in
pop
daa
dec
outsl
pop
sbb
cmp
fcmovnb
std
mov
sbb
fcoms
popa
xchg
stos
dec
insb
bnd
gs
int3
cmp
dec
stc
kmovw
cwtl
fwait
gs
mov
push
cmpsb
cltd
mov
jae
test
mov
in
mov
fisubrl
push
das
fnstenv
jmp
cmpsb
sbb
sub
mov
in
cltd
fs
and
test
les
or
dec
dec
push
lret
ret
push
or
mov
mov
xor
xor
daa
ja
cwtl
pop
add
jns
or
lret
jae
jle
insb
sbb
aaa
scas
pop
fcomi
aad
movb
adc
les
dec
push
ds
mov
mov
xchg
xchg
inc
dec
les
jb
insl
icebp
mov
sbb
leave
and
daa
incb
jge
fadds
aam
jmp
inc
dec
mov
fisubrl
cvtdq2ps
rclb
push
andb
sbb
cmp
push
das
mov
pop
ja
or
inc
jbe
insb
ja
inc
pushf
ds
jne
pop
jp
repz
jo
std
into
movsl
or
dec
and
jg
hlt
mov
cmp
push
out
std
icebp
cmp
mov
xchg
cmc
neg
push
cmpsl
jae
sub
lret
cmp
jno
mov
jo
jle
scas
movhpd
cli
inc
or
and
sti
js
add
xchg
in
and
push
stc
add
out
xchg
mov
out
js
leave
push
push
cmp
cs
jp
or
sahf
xor
mov
stos
push
jbe
cmp
add
sub
mov
push
jmp
adc
in
push
jns
push
push
mov
out
mov
and
sub
jmp
xor
jmp
mov
cmp
xlat
jecxz
das
cmp
jg
shrl
popa
push
js
repnz
ret
aad
jge
pop
or
sbb
cld
cmp
adc
mov
mov
sub
imul
int3
iret
stos
aaa
jne
pusha
push
jmp
mov
addb
dec
loop
cmp
sahf
shlb
adc
add
jle
movsb
mov
int3
push
in
mov
mov
imul
adc
sbb
dec
sub
mov
xchg
js
or
jle
negl
ljmp
pusha
and
sti
sub
or
aam
loop
xor
add
push
push
insl
lea
lcall
sub
ficomps
sbb
mov
or
inc
das
jl
push
pushf
mov
xor
ljmp
push
test
xor
fwait
repz
outsb
mov
shlb
subb
aad
sub
les
sbb
test
outsl
sub
pop
inc
push
test
ret
xorb
cmc
mov
jp
cmpsl
sbb
fwait
stos
divb
sbb
cli
leave
repnz
lahf
push
pusha
lock
sub
clc
into
xor
mov
cmp
adc
sub
pop
mov
pop
pop
inc
and
pusha
xchg
jbe
sbb
inc
push
stos
lock
bound
xor
lcall
adc
xchg
mov
push
mov
xchg
mov
clc
jns
pop
adc
sub
fmull
xchg
data16
jns
mov
sahf
cmp
dec
hlt
outsb
cs
icebp
and
add
cmp
rclb
popa
sub
push
cmp
out
aas
mov
push
sarl
iret
ret
fnstsw
add
jl
jg
add
adc
or
clc
int
mov
jb
pusha
loop
mov
inc
push
popf
jmp
outsl
repnz
imul
in
sbb
mov
pushf
push
mov
xchg
das
dec
pop
mov
imul
and
xor
adc
pop
repnz
sub
xadd
sar
adc
mov
addl
scas
int3
dec
xchg
cmp
test
ret
out
pop
shrb
jl
add
repz
nop
test
adcl
mov
es
sbb
psubsb
dec
mov
lret
mov
inc
inc
ret
push
inc
movsl
dec
movsb
adc
pop
leave
mov
xor
or
test
mov
test
leave
divl
notl
out
mov
cmp
add
dec
mov
mov
cs
mov
out
cmp
mov
loopne
cmp
mov
pusha
arpl
xchg
ja
push
add
dec
mov
mov
pusha
push
mov
sbb
adc
xchg
clc
and
inc
imul
push
dec
sub
jmp
fisubs
sub
fisttpll
xlat
or
notl
test
add
pop
jmp
and
mov
das
repnz
mov
jbe
aad
inc
loop
mov
popf
fcmovne
mov
int3
cmp
repnz
and
cmp
cmc
pop
jge
cmp
popa
nop
dec
pop
push
and
divl
mov
punpckhwd
xchg
in
xor
dec
push
out
or
sub
mov
shrb
sub
xchg
and
and
stos
xor
test
pushf
int3
in
rcrl
nop
lahf
xchg
fnstenv
mov
and
lahf
daa
pop
inc
xchg
mulb
and
in
dec
mov
ljmp
mov
sbb
pop
xor
mov
mov
mov
jge
push
push
sbb
xchg
xchg
ret
xrelease
fmull
sub
je
iret
cs
lret
aad
add
push
pop
xor
xor
fcmovne
and
jmp
mov
or
xchg
stos
hlt
stos
jmp
hlt
outsb
inc
pop
in
mov
addl
push
mov
adc
mov
mov
pop
mov
mov
fs
jp
sbb
stos
pop
pusha
subb
lahf
pop
xor
fdivrs
xlat
movsl
das
mov
push
sbb
fstps
adc
pop
sub
jge
test
xor
insl
fmull
cmp
jne
out
push
hlt
cltd
dec
pusha
xor
mov
add
and
push
orb
ret
inc
cmp
mov
in
add
data16
xor
sub
out
add
leave
mov
arpl
cmc
or
jecxz
pop
scas
lret
int
ret
push
std
mov
xchg
jnp
xor
or
pop
adc
inc
push
inc
test
bndldx
popf
popf
cmpsl
dec
cwtl
xor
adc
std
popf
mov
shr
ja
stos
jno
adc
mov
cmc
xor
jnp
push
mov
jg
or
enter
pusha
mov
inc
aaa
xchg
faddl
insb
mov
inc
xchg
movsb
mov
cmpsb
bound
shlb
in
and
dec
popf
fwait
add
pop
xchg
add
movsl
cmp
add
ficoml
rorb
iret
clc
adc
mov
push
repnz
mov
iret
sub
frstor
mov
mov
mov
inc
push
xchg
or
rcl
adc
rorb
aad
icebp
mov
test
xor
insl
cld
fsub
push
sarb
addb
add
add
in
adc
data16
sahf
mov
pop
lret
or
dec
mov
insl
test
mov
mov
fcoml
out
test
stos
sub
punpckhbw
scas
xchg
or
ljmp
out
outsb
pop
adc
jb
aad
inc
cmp
push
arpl
aas
insl
lods
dec
ljmp
ret
fidivl
pop
push
out
int
or
xor
push
inc
aad
jle
out
pop
mov
push
sub
jne
cmp
int3
mov
pop
repnz
jl
pusha
adc
mov
dec
jle
lea
pop
sbb
fisubl
push
pusha
gs
imul
leave
inc
pusha
ficoms
out
insl
dec
dec
or
pop
cmc
lods
fdiv
xor
cmp
inc
cmpsl
mov
and
lods
xchg
push
repz
mov
xor
pushf
add
notb
ja
mov
lock
or
test
mov
popf
js
xor
jecxz
xor
jb
jne
jge
jo
mov
dec
jp
movsl
out
aam
ret
fwait
jecxz
xlat
icebp
aas
add
mov
fnstcw
out
int3
mov
loop
or
movsb
mov
cli
outsl
test
fidivs
push
push
and
xor
js
jmp
clc
sti
ljmp
rolb
stos
decb
cmp
jno
out
push
xlat
loope
sbb
push
scas
cs
xor
mov
cmp
out
ds
cld
inc
push
add
aaa
hlt
pop
rcrb
insb
sarb
leave
je
in
stos
jbe
fwait
imul
outsb
push
cmp
enter
xchg
sub
add
and
movsl
adc
sbb
int3
push
dec
mov
lock
inc
jne
mov
addr16
cli
ja
dec
mov
aaa
xchg
mov
addr16
cwtl
dec
push
add
lret
pop
addb
jg
cmp
les
inc
xchg
xor
push
mov
push
cltd
sbb
pcmpgtb
les
push
pop
and
xchg
mov
cmc
cmp
inc
add
xor
pop
or
inc
and
xchg
jns
aad
insb
cmpsb
jecxz
push
fdivr
jle
ljmp
push
ljmp
das
rep
int
out
arpl
pop
pop
xchg
pop
ljmp
divps
addl
jecxz
cltd
push
or
xor
dec
jmp
jbe
add
aaa
jns
cmp
dec
sbb
pop
jns
test
sahf
cmpsb
cltd
mov
iret
xor
pop
jns
dec
ret
shrl
and
leave
imul
dec
mov
ret
jmpw
lcall
int
test
test
shll
popa
mov
subb
repnz
inc
call
fisttps
out
cmpsl
aaa
in
dec
not
jno
and
repnz
aad
pop
add
testl
adc
dec
or
inc
insb
push
fadd
pop
pop
ds
iret
js
cmc
les
dec
jnp
jo
jns
adc
add
or
xchg
xchg
cmp
fdivp
jl
gs
lret
lods
mov
dec
adc
scas
mov
les
jae
add
sub
sbb
jne
push
dec
cli
sbb
jno
pop
pop
ds
lret
mov
data16
jae
lds
pusha
loope
adc
jle
imul
mov
mov
stos
imul
jle
iret
inc
push
test
rclb
cmpsb
jnp
sbb
aad
and
jae
xor
imul
scas
cmp
cld
pusha
or
cmp
aas
pushl
scas
in
rclb
push
cmp
loop
mov
fisubl
cmc
and
mov
test
adc
nop
push
cwtl
mov
add
imul
ret
imul
and
aas
arpl
fistps
shll
jo
push
jp
add
cltd
test
jl
jno
cmp
fwait
ret
aam
sarb
mov
divb
xchg
test
rorl
shll
subb
add
sahf
sahf
inc
int
js
jne
out
lcall
sbb
fdivl
and
leave
sbb
mov
insb
loop
cmc
movsb
sbb
cmp
mov
scas
loopne
cltd
push
xchg
ds
or
cmc
ficoml
push
lea
stos
push
aad
push
out
cmpsb
sub
adc
pushf
pop
sub
outsl
push
js
sbb
test
aad
or
cs
pop
sub
pusha
je
sahf
push
enter
and
ja
xchg
cmp
mov
xor
lret
lea
sbb
xor
into
mov
or
js
sti
out
mov
push
or
inc
sub
sbb
aad
push
roll
sbb
je
and
or
adc
sub
jmp
addl
popf
scas
arpl
shrb
fdivl
xor
xchg
rcrl
adc
mov
mov
pop
js
pushf
sarl
repz
xchg
jo
leave
xchg
pop
mov
add
and
push
lahf
iret
inc
adc
in
ret
test
and
iret
lahf
inc
cltd
sahf
in
cld
sub
dec
or
ja
xchg
insb
push
ret
inc
ret
jb
pusha
neg
into
divb
push
jp
jbe
popa
cmc
or
mov
push
in
hlt
inc
orl
xchg
xchg
jo
cmp
add
push
add
sub
scas
daa
xor
mov
insl
rcrl
push
stos
out
cmp
imul
aaa
mov
mov
dec
and
jle
fstpl
je
xchg
adcb
out
cltd
push
out
inc
jl
jno
dec
aam
imul
fsubs
int3
dec
dec
sahf
push
push
loop
das
adc
mov
inc
pop
filds
add
and
cmpsl
mov
xchg
test
and
mov
inc
mov
jbe
pusha
mov
call
jl
jae
mov
into
dec
stos
mov
fwait
mov
lahf
cli
add
jmp
pop
adc
loop
xor
xchg
hlt
fidivrl
lock
fwait
in
test
inc
push
inc
jecxz
mov
imul
in
std
mov
or
dec
pop
popf
in
mov
jnp
xor
add
cld
xchg
jnp
jg
fists
or
sbb
jecxz
cwtl
mov
cmp
enter
jo
out
pop
dec
imul
out
popa
sti
aad
hlt
andl
push
cli
into
jmp
cmp
sarb
or
sbb
popa
jo
daa
leave
xchg
jnp
mov
add
loopne
call
and
and
divl
xor
jecxz
fs
nop
xor
ljmp
cmpsl
lret
adc
lret
fsubrs
cs
adc
stos
inc
adc
out
sub
jle
int
mov
cmp
fstpt
test
into
int3
adcl
fadd
or
push
pop
pop
and
jmp
mov
push
sbb
ret
lcall
fs
add
sub
dec
in
mov
mov
dec
and
pop
rcrl
push
mov
call
sub
ljmp
bound
ret
adc
scas
sub
mov
jg
dec
dec
push
jecxz
pushf
dec
cmp
lahf
lret
outsl
adc
rcll
inc
test
xchg
inc
xchg
and
dec
out
fwait
add
push
outsl
popf
lds
mov
std
inc
mov
inc
ror
stos
cld
daa
inc
cmp
and
das
adc
out
jle
xor
jl
mov
xchg
jb
mov
xchg
daa
jmp
loopne
test
push
cmp
insl
inc
jecxz
rcll
pushf
and
lcall
or
pop
inc
stos
cwtl
repz
icebp
aas
aaa
js
sub
fimull
inc
shll
xor
sbbb
xchg
add
inc
jmp
repz
xchg
xchg
scas
mov
scas
lock
sub
jmp
sti
inc
sbb
dec
xchg
std
mov
lock
mov
or
dec
add
mov
fcoml
jnp
xchg
lret
cwtl
cwtl
cmp
mov
pop
int3
jg
sub
shrb
mov
dec
cltd
or
pop
ret
push
push
testl
gs
fs
lcall
cld
aas
sahf
xlat
jb
inc
cmp
push
outsl
mov
shl
xor
pusha
inc
lds
jbe
lcall
xchg
iret
fldcw
mov
sub
scas
sarb
out
sub
inc
xchg
xor
adc
loope
jge
shrb
jle
adc
mov
clc
push
cmp
jno
out
xor
add
fwait
add
pop
jle
pop
jb
ret
xor
insl
pop
cmp
test
in
outsb
or
dec
movsb
mov
sbb
mov
subb
lds
es
inc
dec
mov
imul
sbb
or
lahf
inc
and
int
ret
ja
mov
push
mov
test
cmp
xchg
mov
dec
inc
insb
pop
dec
xchg
mov
sbb
mov
cmpsb
sbb
lods
jmp
jl
adc
fsubl
sub
movsb
dec
inc
mov
sub
pushf
sub
push
cmpsl
lcall
pop
pop
sub
shll
in
jno
xchg
lahf
jns
and
mov
loopne
pushf
loope
shrb
sbb
jae
lret
inc
add
push
cmpsb
jae
and
out
out
dec
es
mov
push
mov
mov
lret
sti
mov
jnp
sbb
xchg
outsb
aad
inc
xorl
add
cmp
sbb
inc
inc
mov
cmpsl
inc
lahf
xchg
push
imul
dec
inc
push
icebp
fwait
sub
pusha
imul
in
fnstenv
xchg
sti
adc
adc
lcall
into
adc
sub
aaa
fistpll
pop
mov
je
pushf
mov
and
jle
jnp
xor
je
outsb
int3
fcmovnbe
xor
jg
push
sub
mov
jae
cmpsb
fs
mov
jmp
les
outsb
inc
push
or
gs
test
std
or
je
movl
or
adc
dec
je
shlb
inc
div
sbb
jmp
outsb
xor
mov
mov
scas
mov
out
jg
popa
inc
sbb
fucom
jle
add
sbb
mov
ret
aad
lcall
mov
pop
xor
xchg
adc
cmp
dec
call
fwait
or
inc
loop
ja
push
cmpsb
push
test
lds
test
lea
push
or
mov
jg
loopne
nop
dec
cs
mov
and
testl
lret
sub
push
ljmpw
cmp
xor
sub
xor
add
fmuls
mov
cwtl
jp
xchg
mov
in
cwtl
xchg
mov
dec
in
enter
xor
xor
pop
push
pmulhuw
mov
mov
push
daa
jb
xchg
sbb
in
and
aad
jmp
in
je
pop
xchg
arpl
sub
cs
insl
or
hlt
std
out
mov
xchg
insb
cli
lods
xor
aad
lods
inc
rorl
or
inc
pop
mov
adc
sbb
aam
filds
dec
adc
mov
push
out
aas
mov
call
adc
cmp
xchg
out
mov
adc
xor
jl
mov
stos
jbe
idivl
fwait
jmp
sub
mulb
pop
sbb
shlb
push
repz
insb
adc
push
and
les
lahf
stos
mov
insb
pop
js
ljmp
aaa
test
mov
cmp
inc
adc
inc
pop
add
ja
and
insl
rcl
dec
adc
mov
dec
mov
jmp
cmc
jo,pn
sbbl
push
add
adc
clc
sub
loop
out
xchg
loope
dec
gs
sti
push
sbb
fs
push
mov
fs
in
imul
lock
inc
loopne
daa
aas
flds
or
push
addl
pop
arpl
mov
mov
inc
push
lret
pop
adc
shrb
addb
fiadds
in
sbb
pop
dec
add
mov
sbb
sbb
push
imulb
sbb
imul
jns
jmp
out
xor
mov
pop
jo
dec
sbb
mov
lds
sub
xacquire
hlt
add
repz
int3
loopne
push
fadds
inc
lret
out
daa
sti
pusha
dec
dec
popa
push
test
pop
push
xor
or
in
retw
rorb
adc
popa
rcrl
jne
pop
and
lods
push
jg
xor
jg
pop
push
mov
popf
mov
push
add
push
popa
cmp
inc
pop
mov
pop
xorl
sub
mov
lahf
pop
fs
push
aad
outsb
repz
push
sub
xchg
pop
adc
imul
insl
xorl
pop
pop
imul
sbb
mov
iret
mov
add
mov
xchg
xor
lds
and
repnz
lahf
mov
push
adc
xor
push
lods
imul
ljmp
comiss
mov
sbb
cltd
mov
rcr
cli
push
cmp
int
add
push
ret
xor
mov
adc
add
imul
and
or
mov
dec
mov
and
mov
bound
test
outsl
das
scas
fwait
xchg
cmp
push
jo
aad
shll
in
std
imull
push
test
fistps
inc
cmp
std
addr16
testl
rcl
hlt
test
call
add
mov
in
shll
dec
insl
dec
aaa
out
xor
int
fisubrs
lret
mov
add
arpl
lahf
xchg
push
push
popa
aaa
fdivrl
xchg
mov
aad
lahf
and
cli
in
call
lret
pop
cwtl
inc
fcmovnu
inc
pop
fbstp
xchg
or
js
inc
out
sub
add
nop
push
imul
aad
adc
cmp
cmp
xchg
mov
pop
mov
add
in
aad
xchg
cmp
je
or
mov
rcl
and
push
in
sbb
lods
sti
xchg
pop
dec
pop
and
xlat
jecxz
adc
or
cmp
rcpps
mov
out
jmp
lea
lcall
imul
ss
ljmp
test
ss
ret
adc
pushf
mov
sub
pop
ret
mov
pushf
out
int3
loop
inc
xchg
and
jns
clc
hlt
roll
or
dec
ljmp
and
add
sub
sbb
clc
fcoms
test
and
stos
inc
pushf
sti
test
xchg
xchg
push
ficoms
mov
mov
xlat
push
push
je
lock
inc
push
nop
jbe
xchg
sub
mov
add
inc
cwtl
mov
adc
imul
filds
sbb
out
mov
int3
push
lock
out
repnz
xor
out
fdivs
push
adc
stos
mov
push
daa
push
fisubrl
shrb
push
repz
inc
mov
pushf
cmp
mov
stos
mov
dec
mov
stc
arpl
movl
xor
lcall
cs
in
cmpsl
in
test
test
int
loop
cmp
rorb
pop
jno
clc
and
xlat
cmp
daa
rcr
shll
dec
cs
push
nop
mov
clc
mov
out
mov
xor
out
add
shrb
rcl
jo
push
stos
lock
es
fwait
adc
cld
push
mov
jne
jb
pop
add
dec
insl
xchg
mov
dec
jmp
out
arpl
or
push
adc
pop
aam
scas
and
ret
xchg
push
stos
outsl
popf
add
les
lretw
jnp
sbb
mov
mov
sub
shl
adc
dec
rclb
lcall
pop
mov
xchg
fwait
or
sarb
lahf
add
out
or
cld
or
and
jmp
repnz
sub
sbb
push
aaa
jno
stc
sbb
adc
inc
dec
in
push
jno
xor
shrl
jmp
cs
mov
aaa
adc
lret
hlt
inc
adc
cmp
lretw
stos
int
inc
xchg
sahf
jg
and
cmp
movsb
clc
test
xchg
stc
jb
or
inc
bound
xchg
lahf
hlt
pop
xor
pop
dec
mov
jae
push
mov
stos
daa
sub
sub
nop
je
and
fidivrs
push
jmp
xchg
mov
pusha
leave
xchg
adc
jno
lods
sbb
ja
in
xchg
rcl
mov
js
adc
mov
test
in
xlat
mov
add
outsb
jo
daa
int
adc
and
add
std
dec
sbbl
out
punpckhbw
sbb
js
mov
gs
jmp
xchg
ljmp
mov
popa
push
jnp
loope
jo
dec
mov
pop
lock
lods
lret
cmp
das
sbb
fisubl
popa
nop
mov
in
adc
pop
inc
clc
pop
add
ret
add
jmp
enter
sbb
inc
outsl
or
mov
or
lret
or
jnp
outsl
mov
ficoms
xor
adc
xchg
dec
adc
ret
test
jl
cltd
and
ds
inc
and
lret
mov
xor
ds
or
fisubs
loope
push
adc
enter
in
aam
negb
mov
jnp
outsb
xor
stc
cmpsl
push
add
xor
pop
inc
or
int
psllw
sub
stc
jecxz
popa
les
gs
cld
addl
and
jl
iret
cwtl
jbe
or
mov
jae
inc
popf
add
sarl
pop
idivb
call
inc
cli
pop
ds
fldcw
push
movsl
sbb
jae
das
mov
push
or
and
or
pushf
mov
jge
in
lock
fdivl
sbb
xchg
inc
pop
pushf
lret
data16
ds
aam
addl
ret
cld
dec
mov
mov
jae
mov
stos
mov
loopne
sub
and
mov
out
sti
push
dec
ss
jge
pop
aas
mov
mov
cmc
movsl
and
xlat
add
cs
push
mov
push
jle
mov
add
pop
fwait
xorb
out
jbe
sub
fistpll
and
repnz
fistpll
cmpb
imul
fnsave
mov
jb
dec
test
cmpl
imul
enter
mov
mov
jmp
xchg
fistpll
out
je
out
adc
dec
cmpsb
pop
xlat
insl
sub
pusha
hlt
movsb
movsl
aaa
dec
xlat
push
movsb
and
sub
ja
dec
pop
xor
popa
mov
scas
popfw
xchg
arpl
inc
cmc
int
jbe
in
push
mov
xor
xor
xchg
inc
or
pusha
ljmp
rep
lods
push
xor
mov
movl
lods
loopne
sarb
movsl
xchg
xchg
and
push
ret
std
inc
or
push
fbstp
xor
dec
aad
cli
hlt
mov
arpl
mov
ficomps
mov
les
push
and
lret
adc
in
mov
cmc
data16
inc
cmp
imul
sbb
lret
cmpsl
scas
or
mov
shlb
ret
push
push
jg
ror
cwtl
push
sub
push
fdivrs
jecxz
push
mov
fbld
xchg
push
jecxz
lods
lahf
aas
adc
movsl
pop
nop
xor
sub
or
pushf
shlb
push
rcl
iret
popa
fs
sbb
or
jg
jecxz
sub
cwtl
adcb
dec
lea
mov
adc
pop
or
daa
adc
dec
outsl
leave
mov
pop
add
xchg
cld
cwtl
jle
push
mov
pop
cmp
push
mov
mov
popa
call
aad
jecxz
adc
jae
push
clc
les
xchg
push
shl
inc
jecxz
mov
stos
in
js
pop
adc
sub
mov
lret
mov
push
adc
push
lret
aaa
test
int
fnsave
jb
xor
ds
repnz
mov
icebp
mov
pop
aam
fcoms
fcmove
nop
scas
insl
ret
fistl
nop
hlt
cltd
insb
cmp
dec
or
data16
mov
mov
cmp
cmp
pop
sti
pop
mov
aad
cmpsl
xorl
add
repz
jnp
inc
movsl
ret
flds
push
sbb
cmp
loop
xchg
fmul
into
fisttpll
ret
icebp
mov
into
cmpsb
test
cmp
outsb
aam
icebp
aaa
in
mov
add
inc
inc
popa
add
xor
inc
testb
jno
cmp
sub
jb
or
sbb
loopne
xchg
jmp
lea
cltd
int3
jno
lods
pop
sti
mov
aad
mov
gs
out
inc
mov
mov
dec
scas
fdivl
and
in
jno
pop
out
cmp
inc
or
out
or
add
rcrb
adc
pop
xchg
enter
add
hlt
lea
fs
ror
xchg
sti
mov
sub
mul
jns
shrl
out
es
scas
mov
xor
loope
rcrb
push
push
and
xchg
sti
xor
stc
push
pop
les
movb
lds
into
xor
cwtl
loopne
fiaddl
push
sahf
cmc
test
jo
loopne
addr16
mov
out
inc
xor
pop
or
test
sub
xor
or
mov
cld
jg
adc
adc
icebp
or
inc
mov
fiadds
add
std
pop
mov
xchg
add
mov
mov
fcom
xchg
roll
jnp
push
mov
inc
leave
or
jne
ljmp
mov
inc
pop
ret
xor
mov
int3
repnz
fwait
jbe
inc
jae
pop
fcomi
dec
dec
sahf
mov
xor
and
das
and
ret
lea
mov
push
das
call
out
fcom
adc
je
xor
mov
adc
out
inc
clc
xchg
mov
test
fsubr
push
mov
dec
sarb
jg
fisubl
inc
xor
xchg
mov
das
into
push
mov
es
or
ret
mov
rorb
and
cmp
adc
repz
call
pop
dec
add
cmp
dec
cmp
xor
mov
fs
in
inc
pop
out
repnz
dec
jmp
jns
in
in
push
sbb
movsl
or
cltd
out
jp
inc
das
jnp
movntq
pop
test
out
pop
aas
inc
icebp
xchg
bound
movsl
scas
jp
cmp
cmp
dec
pop
sarb
pop
jns
nop
mov
out
mov
xchg
divl
jp
add
inc
lea
out
xlat
pop
jnp
stc
sbb
cmpsb
and
pop
cli
arpl
mov
dec
add
and
insb
jns
movsb
es
andb
cli
mov
push
shlb
addr16
inc
push
ljmp
ss
call
out
xor
jns
pop
lea
xchg
push
dec
xor
xchg
inc
outsb
idiv
clc
mov
testl
push
push
xchg
dec
mov
fs
mov
data16
lcallw
push
mov
dec
je
or
adc
test
pop
loope
push
xor
out
jb
xor
clc
pop
rcrl
jne
icebp
jae
push
aad
inc
adc
mov
jg
ja
xchg
push
cs
mov
and
mov
or
hlt
mov
out
inc
loop
mov
and
movsl
cwtl
fs
push
pop
add
sbbb
int
and
push
sbb
pushf
jp
xchg
xchg
jo
sbb
and
or
or
cs
add
popl
cmp
jo
int
mov
mov
mov
and
and
pop
leave
cli
je
dec
in
cli
roll
inc
loopew
bound
std
jmp
imul
pop
cmp
js
daa
sub
lret
cld
aaa
push
out
fidivrs
les
dec
pushw
fucomi
add
xor
jns
out
cmp
mov
xchg
dec
jp
xchg
or
mov
xchg
lret
sub
pop
push
rcrl
lods
pop
loope
mov
cltd
adcb
subb
cli
add
pop
aad
sbb
push
xor
stos
sbb
dec
lret
movsl
jo
mov
lret
and
repz
adc
daa
ds
adc
pop
loope
adc
adc
icebp
add
les
xchg
test
or
je
add
xlat
pusha
mov
movsl
orb
mov
adc
or
inc
push
xchg
rcll
push
rcl
mov
jmp
xlat
xor
or
inc
scas
xchg
les
outsl
jl
xchg
outsl
lret
and
int3
push
cwtl
jb
dec
stc
or
adc
pop
xor
insb
imul
adc
and
out
jmp
push
dec
xchg
shr
lret
add
mov
jl
cld
push
negb
jnp
lret
xorb
sbb
push
les
in
int3
bound
or
inc
sahf
rol
in
xchg
mov
jl
cmpsl
adc
add
frstor
xchg
loop
cmp
inc
pusha
xchg
jns
dec
out
pop
scas
dec
sbb
cmp
mov
out
outsb
push
push
dec
fwait
icebp
cli
scas
enter
mov
mov
loopne
ja
mov
dec
js
popa
adc
adc
fwait
dec
dec
xchg
cmpb
jp
cmp
xchg
lods
popa
sub
aaa
out
push
mov
clc
fstpt
sub
mov
into
pop
dec
shll
int3
aad
dec
ret
inc
cmpsl
arpl
mov
xchg
mov
pop
incl
pusha
mov
imul
mov
aad
popl
out
adcl
mov
aaa
ljmp
jge
repnz
pop
jb
or
mov
nop
push
bnd
sbb
jecxz
jb
mov
or
add
mulb
iret
or
insb
mov
pop
mov
sub
xchg
sti
insl
mov
and
add
mov
mov
test
fiadds
ficomps
scas
or
test
int
adc
ficoms
jae
sbb
and
sbb
sub
push
pop
cmp
mov
sbb
fidivrl
push
mov
mov
bound
fsubl
adc
ret
jl
or
jle
jg
jae
or
cmp
adcl
adc
jb
pop
repnz
or
inc
sarb
mov
repz
fistl
mov
ljmp
mov
sbb
out
or
sub
push
ret
cld
pop
sbb
adc
lods
xor
xlat
sbb
lahf
aaa
jb
outsb
ss
mov
loopne
xlat
push
inc
mov
popa
ret
shr
in
stos
pushf
mov
les
pop
notl
lock
adc
movsb
pop
mov
mov
gs
xchg
or
pop
push
push
filds
mov
mov
lock
insb
and
jb
cmc
test
pop
push
push
pop
push
mov
xor
fwait
lret
pop
push
call
ljmp
inc
cltd
jg
rorl
sbb
jne
scas
push
push
adc
xchg
in
mov
scas
imul
pop
and
mov
push
adc
cmc
fsubp
or
sub
dec
ja
dec
loopne
idivl
sarl
icebp
mov
jbe
sub
scas
cmp
cmp
xor
pop
sbb
mov
pusha
xchg
inc
loop
push
incb
call
xchg
std
repnz
dec
enter
push
std
and
sbb
xor
hlt
inc
jl
mov
out
cmp
lcall
je
outsb
pop
add
mov
cmpsb
xor
jp
and
pop
or
cwtl
sar
out
lds
je
call
rol
jb
pop
popa
pop
adc
lret
push
movsb
jns
in
mov
arpl
cli
scas
lods
jle
inc
push
lret
cmpl
cmp
push
sbb
xor
sub
jne
add
push
cmp
or
mov
loopne
dec
test
scas
data16
pushfw
or
pusha
mov
dec
stos
pop
push
inc
fdivs
dec
clc
pop
push
enter
add
jecxz
cwtl
or
mov
stos
ret
push
xchg
sub
push
loop
adc
lods
adc
rolb
or
in
test
out
jnp
xchg
sbb
mov
mov
adc
sub
inc
inc
pushf
push
cmc
dec
cmp
xor
jle
dec
and
dec
jmp
sub
xchg
adc
pop
jg
pop
insl
xchg
js
call
mov
jg
or
add
or
or
or
mov
iret
jp
ja
xchg
ds
cmp
push
and
in
leave
cmp
cmpsb
repz
push
dec
lds
test
les
jbe
lods
mov
sbb
xchg
fdivrs
ret
insb
and
sarb
add
pop
int3
push
dec
ds
lods
cwtl
xchg
decl
or
nop
jle
test
mov
xchg
stos
cltd
in
cmp
or
pop
dec
push
cltd
inc
insl
dec
nop
clc
push
dec
test
shll
int
loop
pop
add
lahf
xor
xchg
fcoms
cmpsb
int3
pop
mov
lods
adc
pop
mov
dec
fcomps
ret
push
call
das
push
rcll
xchg
add
or
out
xchg
test
sub
lcall
mov
xchg
cwtl
xor
dec
cmp
cmp
hlt
adc
das
adc
mov
xchg
or
push
add
inc
jne
lods
sub
sub
cmp
stos
inc
repnz
and
in
dec
iret
adc
xchg
popf
nop
cmp
cwtl
add
repz
scas
repnz
push
inc
hlt
pop
test
lods
dec
addr16
sub
scas
jo
pop
inc
stc
sbb
ljmp
push
mov
mov
xor
or
mov
inc
lcall
fninit
aaa
sar
je
ret
int3
lea
and
mov
loope
js
xor
cmp
or
test
sti
mov
jmp
xchg
test
add
aas
or
push
cmp
lahf
or
add
jnp,pn
mov
cmp
and
insl
cmp
fiaddl
fs
pushf
ljmp
dec
testb
dec
inc
cmp
xchg
push
dec
push
sub
mov
outsb
stos
rcrb
outsb
out
into
sbb
xlat
out
daa
pushf
pushf
mov
and
jb
out
push
in
xchg
ja
fnstsw
inc
scas
dec
int
lods
push
daa
push
movb
das
cmp
sbb
rcll
orb
lea
aad
aaa
push
xor
push
sub
mov
pop
popf
test
xor
js
out
push
iret
ret
js
mov
mov
pop
aam
mov
aad
mov
xlat
sub
test
xorb
inc
ljmp
ret
mov
rolb
add
cltd
sub
xor
js
movsl
add
rcrb
add
sub
data16
xor
push
cmp
mov
cmp
enter
mov
jmp
out
arpl
leave
mov
clc
scas
xor
addr16
dec
push
dec
je
adc
push
xchg
test
dec
xchg
jno
xchg
adc
iret
sub
mov
jp
fdivs
jbe
sbb
stos
push
js
rorl
cld
or
add
or
daa
iret
insl
xlat
shll
adc
movl
pop
push
mov
push
mov
loop
mov
sub
adc
pop
push
repnz
shll
xchg
cltd
lahf
negl
cwtl
add
adc
and
add
int
rolb
pop
stos
mov
gs
cmc
push
xor
outsl
outsb
add
jo
jns
jo
dec
mov
add
ds
jecxz
jbe
sub
mov
mov
dec
rcl
mov
shlb
add
out
xor
out
stos
fidivl
push
ret
cs
das
js
cli
cmp
pop
xchg
gs
or
stos
cmp
add
xor
shr
mov
mov
icebp
xchg
jge
out
outsb
xchg
jp
mov
sbb
out
cmp
dec
jbe
fists
mov
aam
jae
mov
out
cltd
lds
xchg
xchg
cmp
leave
mov
xor
mov
daa
in
test
mov
mov
call
inc
xchg
fdivr
jae
sub
fwait
add
push
and
inc
clc
aad
jecxz
sarb
cmc
int
lds
mov
cmp
push
push
dec
sub
pop
and
sbb
xchg
jno
cmpl
lahf
loop
jo
call
jne
xchg
mov
out
hlt
divb
sub
in
xchg
cwtl
sbb
hlt
pop
push
push
and
jb
repz
bound
mov
jne
push
and
int
lret
les
leave
inc
int
ljmp
imul
and
ficompl
lock
scas
leave
or
push
xorb
xlat
mov
sahf
lret
js
push
mov
pusha
jno
stos
stc
mov
jmp
repz
pop
adc
ficoml
shrb
cwtl
jne
jnp
subl
daa
push
xor
add
outsl
pop
mov
cmp
ja
out
dec
jo
les
jmp
aaa
rcll
aaa
rsm
jae
push
cmp
mov
movsb
pop
xchg
xor
xor
lahf
loop
bound
jae
cld
int
inc
mov
andb
adc
mov
clc
std
mov
fstpt
pop
jecxz
mov
sub
jmp
call
mov
aam
rcl
jae
add
dec
fiadds
adc
adc
in
movsb
in
out
loopne
scas
fistl
roll
in
jl
fsubrs
enter
adc
sub
mov
lahf
pop
pop
mov
sub
lahf
adc
push
pop
imul
pop
decb
jns
mov
xor
inc
fstpt
into
jle
and
cmp
jl
sub
dec
add
pop
or
pop
or
lret
les
mov
jno
jl
xor
sub
js
mov
add
loop
xor
lock
xor
xor
mov
int3
push
sbbb
mull
pop
mov
rol
sub
into
sub
mov
call
cmpsb
pop
jmp
leave
cli
sahf
mov
dec
xchg
shrl
imul
mov
aas
pusha
mull
dec
xchg
scas
and
mov
ljmp
and
stos
dec
and
adc
push
inc
mov
lcall
sub
mov
and
fwait
inc
cltd
int
cmp
out
mov
sahf
sbb
xor
or
cs
lea
sbb
lret
or
and
repz
adc
in
testl
loopne
push
test
push
fstpt
ja
test
inc
inc
xlat
dec
inc
mov
and
je
jnp
outsb
push
jle
mov
xor
mov
mov
adc
dec
flds
out
dec
sub
inc
sahf
mov
inc
mov
add
insb
inc
sbb
jb
bound
mov
ficomps
aam
repz
xor
add
cmpsb
stos
ret
pop
adc
ficompl
pushf
andl
movsb
pop
jns
loopne
xchg
fimuls
pop
mov
insl
and
fstp
mov
jmp
and
and
dec
into
or
jno
aas
add
dec
mov
lods
enter
xor
mov
rorb
aas
inc
in
js
jmp
xor
dec
hlt
mov
sub
mov
sub
jae
xchg
jno
aas
std
je
insl
jp
push
jp
sti
incl
push
cmp
fcoms
xchg
cmp
outsb
jne
xchg
push
ja
jae
push
out
inc
cli
clc
pop
pop
scas
out
aad
mov
lock
in
or
dec
pusha
cmp
and
push
cmpsl
outsl
sub
loop,pn
aas
fcomps
test
jl
and
jp
fimuls
pop
mov
push
jmp
push
mov
arpl
pop
call
mov
in
das
cld
inc
or
sub
cmp
xor
cld
mov
jo,pn
inc
mov
jmp
adc
loope
cmp
fs
and
sahf
data16
add
push
lods
mov
in
jl
xlat
mov
inc
sub
xlat
dec
push
or
sub
pmaddwd
shlb
pop
jno
mov
aaa
test
int
lret
sbbl
ja
adc
dec
dec
in
pushl
xchg
dec
push
inc
arpl
ds
sahf
jo
inc
or
out
mov
pop
sbb
adc
cmpb
cltd
test
xchg
cmp
popa
cwtl
fidivrl
loopne
test
fbstp
sbb
and
sbb
dec
mov
push
cmp
push
mov
loop
adc
inc
mov
jp
xor
sbbl
outsl
add
imul
jo
mov
jb
or
or
stos
lret
adc
sbb
fiadds
sti
adc
xor
mov
adc
push
mov
mov
sbb
dec
jno
adc
lcall
push
jl
test
dec
fwait
inc
fildll
mov
into
icebp
jo
nop
jns
jb
mov
jl
cmc
popa
inc
jg
outsb
rcrl
jp
xchg
iret
push
lahf
test
enter
int
aad
in
icebp
clc
pop
xor
push
pop
in
push
test
mov
and
mov
loop
sti
pop
pop
mov
pop
cmc
mov
into
fadds
fwait
out
jbe
movsb
dec
mov
pop
ja
int
xchg
cmpsl
xchg
xchg
sbb
or
ja
and
mov
shlb
mov
xchg
lea
mov
jnp
pop
push
fists
cmovo
jnp
inc
add
sub
pusha
pop
bound
or
dec
pop
testl
push
jle
repz
pop
stos
xor
sbb
inc
xor
jnp
xor
xor
xchg
lcall
hlt
mov
mov
ja
sbb
insl
inc
jbe
repz
jg
stos
mov
sbb
jnp
cmp
cltd
int3
sbb
nop
lods
loope
ja
mov
das
hlt
mov
ss
clc
mov
or
or
jle
jge
cwtl
mov
cmp
in
push
lods
and
sbb
rcr
loop
shr
fwait
dec
dec
cs
mov
pusha
pushf
iret
clc
ljmp
lcall
xor
pop
sub
jae
lcall
addr16
dec
jnp
test
fistps
jnp
cld
pop
sub
and
in
fmulp
jns
adcl
gs
mov
push
shll
call
cmp
je
divb
jp
rorl
cltd
push
cltd
pusha
push
icebp
cmp
imul
enter
pop
aaa
cwtl
xlat
nop
icebp
in
xlat
popf
push
out
mov
clc
mov
popf
out
sbb
je
jge
negb
xor
mov
push
subb
ret
andl
bound
daa
adc
xlat
push
jecxz
mov
jge
std
add
sti
fcoms
hlt
xor
clc
mov
cmp
mov
sbb
nop
or
xchg
adc
add
mov
test
or
xor
fwait
jns
or
push
xor
or
sub
push
call
and
or
shlb
xchg
sub
dec
lea
and
adc
cmpsb
dec
xchg
xchg
mov
stc
leave
outsl
sbb
pusha
cwtl
and
pand
out
ljmp
cmc
aam
insb
aam
imul
std
lods
cmp
lock
or
push
add
inc
repnz
mov
adc
jns
or
push
pusha
std
sbb
add
lahf
aaa
scas
jnp
mov
xchg
ret
lods
inc
sti
mov
sub
aaa
aad
xchg
cmpsl
add
sti
dec
and
jnp
or
or
sbb
xor
idivl
cltd
pop
sbb
in
and
sbb
rolb
jne
push
sbb
jnp
xchg
xchg
push
or
imulb
aad
xchg
mov
push
cmc
and
ds
dec
lahf
in
cmpsl
imul
movsb
cmp
insl
insb
jne
fdecstp
fsubrs
or
clc
rorl
and
and
mov
jmp
jbe
jle
insl
pop
lods
fnstsw
lods
pop
cs
outsb
mov
rolb
mov
xchg
sbb
mov
outsl
jnp
pop
add
xor
jbe
aam
mov
xor
dec
int3
inc
jnp
mov
shl
stos
dec
ret
cmp
cmpsl
lock
mov
or
int
cmc
sub
shlb
xchg
push
sub
jb
mov
pop
movsb
dec
into
mov
arpl
dec
sub
stos
gs
mov
jns
outsl
pop
outsb
dec
sbb
mov
jg
cmp
icebp
fsqrt
adc
gs
lods
lcall
lock
in
jp
mov
mov
and
test
out
cmpsl
fcompl
mov
xchg
push
add
sub
aaa
or
mov
push
jp
cltd
add
ja
xchg
stos
inc
mov
mov
jbe
adc
repnz
jnp
imul
mov
in
and
xchg
inc
lahf
sbb
cs
popf
add
jg
mov
sub
adc
sbbb
jmp
xlat
cmp
push
shlb
inc
das
gs
xor
lahf
sarl
inc
cmpl
jno
mov
xor
mov
adc
mov
movsb
jle
push
andb
sbbb
leave
repnz
fcoml
pop
lea
pop
mov
iret
sbb
vphsubbw
in
or
lods
fwait
jge
insl
adc
pop
daa
mov
adc
inc
dec
ss
loopne
fldenv
mov
outsb
pop
outsb
out
fwait
gs
fisubl
mov
inc
mov
and
leave
pop
xchg
jmp
and
rcrl
je
sahf
push
ljmp
jne
inc
push
ror
cmp
loope
mov
push
scas
ss
mov
inc
dec
std
cmpsl
cmp
lcall
jns
xchg
imul
jl
xor
sbb
cltd
pushf
xchg
ja
in
ret
std
sbb
and
out
test
cmp
insl
and
jge
or
push
cmp
xchg
data16
lea
mov
insb
push
add
jb
pop
std
mov
push
aas
testl
push
arpl
mov
cmpsl
ljmp
or
aaa
sbb
pop
ds
pop
jae
jne
test
mov
ret
push
jae
aad
mov
out
and
pop
lods
stos
inc
mov
cmpxchg8b
outsb
adc
nop
sub
xchg
int
fidivrl
sbb
xchg
xor
out
and
insb
dec
mov
int3
mov
cmp
jno
cmp
cmc
sub
roll
and
clc
push
sub
jb
mov
filds
stos
iret
in
shll
imul
in
stos
push
test
loop
stos
add
or
dec
pop
add
adc
in
ret
dec
mov
stos
pop
jae
sub
lods
xor
in
lret
out
mov
sub
xor
dec
cmpsl
push
inc
into
mov
xor
rcll
cmp
cmc
mov
insb
pop
cmpsl
and
mov
jmp
mov
mov
and
mov
mov
sub
je
dec
mov
arpl
test
mov
inc
int
xor
xor
or
outsb
loope
jno
int3
test
sbb
addb
fwait
mov
sbb
push
std
insb
adcl
mov
repnz
mov
call
movsl
rcll
into
dec
fldcw
arpl
movsb
cli
bnd
pushf
popf
mov
addr16
add
cmpb
mov
fisubl
movntps
jno
and
mov
jge
hlt
or
inc
sub
dec
in
push
sub
pop
movsl
testl
fwait
mov
nop
imul
and
or
divl
fdivs
icebp
push
cmp
test
jb
enter
add
mov
int3
mov
js
cmp
lds
fbstp
test
lahf
sub
adc
test
inc
fwait
lea
outsl
std
out
sub
mov
jb
mov
pop
jl
sub
pop
adc
sub
xchg
xor
mov
push
or
or
and
jge
inc
pushf
enter
divb
jmp
add
push
jno
add
jns
mov
mov
pop
lret
pop
xor
sti
xchg
sub
mov
ss
ss
outsb
cmp
mov
bound
adc
adc
pop
adc
rorb
pop
loop
inc
cmpb
fwait
aam
addb
insl
out
fstl
pop
out
jecxz
pop
sub
lods
movsbl
dec
or
and
push
push
pop
sbb
leave
test
lock
test
pusha
subl
mov
leave
inc
test
mov
sub
add
sub
cltd
add
mov
jnp
add
cld
call
add
fldcw
sbbb
push
jbe
cmp
pop
jae
es
div
xchg
xchg
or
mov
cld
or
pop
jne
dec
fwait
mov
pop
fadds
test
lods
into
add
shrl
and
lret
mov
sarb
pop
jecxz
scas
gs
pusha
cmp
bound
xor
jns
add
adc
inc
fs
or
fistpl
ret
std
or
addr16
sbbb
jecxz
loop
cmp
mov
and
cli
mov
sub
ja
pop
mov
add
or
lea
mov
dec
sti
dec
xchg
or
repnz
mov
loope
jae
jb
push
stos
gs
lcall
add
dec
fwait
pop
repnz
out
popa
lcall
push
addr16
dec
add
in
pushf
dec
pop
mov
mov
mov
popf
sbb
insl
add
push
xor
sbb
adc
int
mov
imul
xlat
xchg
lea
insb
out
add
addb
daa
inc
lea
fisubs
movsb
iret
and
test
mov
push
dec
cmpsb
outsl
clc
lret
mov
das
shrl
pop
fildl
cmc
jg
repz
movsl
push
xchg
js
rcr
enter
popf
mov
cmpsb
popa
cmpsl
ja
mov
hlt
popa
mov
fsubrs
mov
inc
cmp
push
es
bound
call
out
addr16
sub
xor
pop
and
sbbl
jmp
push
dec
fisttpl
sarl
adcl
cmp
jmp
sub
ja
adc
add
loop
adc
inc
sti
jmp
sub
out
mov
mov
lods
cmc
lods
ds
les
int3
xchg
mov
and
mov
and
mov
subb
clc
dec
adc
stos
push
daa
cmpsb
movsb
pop
ror
cmpsb
adc
das
icebp
xor
subl
repz
adc
nop
push
subb
mov
inc
movsl
cmpsl
stos
les
and
mov
fcmovbe
pop
or
mov
fbld
and
sbb
push
cmp
sub
es
jne
dec
pop
ss
lahf
mov
mov
dec
push
fs
mov
call
mov
movsl
mov
sbb
out
ja
les
cmpsb
xchg
and
xlat
ror
fbstp
andl
lock
lods
divb
pop
movsl
test
ljmp
sub
das
js
hlt
jle
inc
mov
cmc
jb
insb
mov
pop
mov
cld
xor
inc
mov
pop
adc
fdivrl
sub
cld
frstpm(287
sub
iret
push
test
add
jl
loope,pt
enter
aad
cmp
int3
pop
mov
fdivs
push
mov
repz
pop
dec
cld
shl
ss
pop
mov
dec
jg
clc
in
mov
fisubrl
lret
cmp
lds
push
pop
sbb
aad
pusha
xchg
inc
sahf
xor
and
inc
pushf
data16
mov
data16
rcrb
cltd
mov
sub
outsl
jge
push
fnstcw
fidivl
push
lretw
push
adc
inc
xor
xor
jp
and
xor
dec
cmp
mov
pop
rcrb
inc
cs
xchg
or
push
sarl
stc
jg
jg
dec
hlt
inc
push
fnstcw
enter
sub
mov
faddl
ret
adc
lods
mov
test
dec
scas
mov
add
mov
or
xor
test
call
outsl
dec
ds
push
cmp
imul
arpl
jbe
sub
mov
bound
push
repz
and
cld
std
popa
mov
or
xor
les
dec
xchg
dec
stc
mov
test
and
outsb
cmp
outsb
hlt
mov
xor
std
outsl
sbb
jnp
inc
push
add
clc
mov
add
ja
call
mov
fxch
aad
jbe
scas
cli
bound
lahf
loope
inc
subb
lret
enter
lret
inc
and
sub
test
dec
xchg
or
ja
or
out
repz
adcl
xchg
jb
mov
bound
out
scas
and
cmp
nop
sbb
push
add
shr
jp
out
sbb
mov
dec
push
mov
les
aad
clc
add
mov
mov
test
and
out
inc
mov
int
pop
jl
loopne
pop
repnz
repnz
cmp
jo
pop
aam
and
or
std
int
js
cltd
xchg
mov
pop
out
push
pop
jge
dec
dec
pop
push
mov
cmp
mov
sbb
cmp
mov
push
push
rclb
nop
cltd
flds
leave
addr16
cli
repnz
mov
cwtl
jns
mov
mov
test
insl
mov
jno
dec
stos
mov
jmp
sbb
int
xchg
mov
xchg
mov
ror
lret
pusha
mov
pushf
out
pop
fbstp
lea
inc
stos
xor
mov
mov
std
sti
loop
xlat
pop
cli
pop
fbstp
gs
inc
cmp
adc
adc
push
ret
dec
jmp
adc
daa
cli
stos
cmpsb
or
xor
imul
roll
mov
inc
sti
mov
subb
xchg
cmpsl
xor
nop
dec
fwait
mov
or
or
lods
inc
aam
mov
push
scas
pusha
test
mov
or
pushf
out
movsl
ret
push
cmp
leave
jnp
and
sbb
ret
xchg
or
pop
cmp
jae
dec
pop
je
cmp
jecxz
mov
js
fsubs
adc
test
or
push
adc
push
hlt
stos
or
or
and
mov
and
idivb
push
leave
push
push
and
mov
lods
sub
fidivrs
xchg
sub
fisubrs
adc
and
rcl
out
add
out
mov
xchg
xchg
std
icebp
inc
dec
nop
add
dec
ret
xor
lret
stos
sub
mov
adc
mov
adc
cmp
push
shll
repz
int3
mov
jno
jns
fimull
repz
sbb
lret
pop
jo
clc
out
mov
pop
push
adc
mov
sub
xorb
testb
stc
xor
sahf
or
add
dec
xor
cld
mov
test
je
aad
out
push
cmp
setns
push
daa
jbe
sarb
push
cmp
sub
dec
fadd
or
push
lods
outsl
mov
or
pushf
adc
inc
jae
jbe
dec
or
out
push
inc
mov
sub
sub
ret
adc
add
cmpsl
mov
inc
jmp
jp
out
aad
ja
insl
stc
mov
inc
stos
jbe
imul
ljmp
mov
xchg
dec
cmp
adc
subl
mull
mov
cwtl
mov
rcll
sti
xor
cmp
pop
add
loope
repnz
in
lea
xor
aam
in
dec
mov
fs
sbb
test
fildll
and
fisubrl
out
mov
daa
push
push
mov
lods
adcb
fbstp
paddusb
mov
cwtl
push
sbb
jecxz
outsb
pusha
lret
jae
mov
push
sub
push
cwtl
mov
mov
loop
addr16
inc
insl
test
aas
jo
push
test
loope
out
or
sahf
sbb
inc
xchg
dec
int3
sbbb
jno
pop
popa
adc
mov
xchg
sub
pop
jbe
or
or
jae
pushf
sbb
jl
push
mov
mov
dec
loopne
mov
fcmovbe
fs
cmp
movsb
jns
add
inc
fwait
aaa
add
xchg
insl
or
scas
aam
loopne
daa
mov
push
mov
cmpl
push
xlat
stc
dec
in
push
pop
push
adc
loopne
or
lret
aam
repz
pop
inc
movsl
fwait
jp
inc
xchg
push
cmp
cli
dec
and
mov
xchg
stos
icebp
and
pop
sub
add
cmpl
sti
ljmp
lds
ret
stc
push
mov
xchg
out
sub
mov
fyl2xp1
mov
pop
fldl
sbb
sub
lds
mov
inc
in
jb
sub
pop
push
movsb
addr16
pop
test
aam
mov
sbb
sbbb
repz
lret
push
lock
pop
push
push
cld
dec
lret
pop
loopne
xchg
stos
mov
jmp
push
push
lahf
ret
push
mov
xchg
int3
sbb
fldt
frstor
mov
inc
mov
out
push
pop
push
inc
insb
mov
cmp
xchg
xchg
add
add
lret
pop
mov
xchg
pop
sbb
adc
fistpll
mov
les
dec
fldenv
inc
test
add
in
repnz
and
xchg
mov
push
test
mov
and
dec
mov
pop
jns
clc
bound
xchg
push
lds
or
aaa
mov
xchg
lahf
add
gs
jge
mov
inc
in
xchg
aad
mov
int
fiaddl
popf
pop
adc
and
ja
inc
and
daa
xchg
addl
movsb
les
sub
pop
int
ss
sahf
negb
push
xor
movsb
lods
fimull
bswap
mov
add
call
repnz
mov
in
adc
or
cmpsb
cmc
ret
pop
stc
orl
jno
cmpsl
loop
mov
sti
and
mov
ss
call
adc
call
jl
dec
cmpl
add
mov
sub
mov
push
roll
mov
jmp
sti
dec
or
adc
dec
sbb
das
cmp
insl
cmp
dec
sbb
push
iret
xlat
cmpsl
ja
mov
in
popf
stc
mov
or
gs
xchg
testb
xor
mov
xchg
sar
mov
ja
mov
cmp
pop
bound
jne
scas
scas
sub
movsl
dec
rclb
imull
in
push
mov
add
jecxz
push
mov
cmp
xor
mov
cwtl
jae
sti
out
push
sub
mov
push
xchg
ljmp
xor
int
mov
ret
sbb
lods
pop
mov
mov
cmp
rorl
pop
lods
call
ds
fdiv
pop
xchg
xchg
adc
std
rolb
sub
inc
mov
push
pop
idivb
cmp
and
dec
stos
cmp
icebp
jge
lock
inc
jbe
stos
pop
int
repz
sub
fcomi
add
xchg
push
inc
sub
je
ja
lret
loop
pop
test
sahf
and
enter
test
add
or
testb
fisubs
push
cmp
push
xchg
aam
mov
pop
mov
std
pop
int3
push
aas
mov
xchg
adc
push
lock
push
and
mov
mov
sbbl
mov
xchg
push
push
push
jge
scas
mov
push
je
xchg
repnz
stc
mov
mov
imul
mov
ret
daa
adc
insb
inc
bound
pop
inc
mov
adc
lock
xor
lea
cli
flds
cmp
push
cmp
lds
dec
cmp
push
jbe
or
test
sub
lea
inc
hlt
test
adc
rcr
xor
jnp
dec
jb
xlat
outsl
and
test
sub
bound
je
clc
dec
or
mov
pop
inc
movsl
js
mov
adcb
mov
mov
in
cmc
insb
ficompl
jmp
cmp
inc
insl
pop
mov
clc
fldcw
jecxz
push
test
jae
push
je
push
jp
pop
pop
movsb
fisttpl
add
ds
addr16
pusha
lahf
dec
fldt
add
iret
gs
movsb
push
outsl
mov
mov
mov
jle
cmp
push
daa
cmp
mov
inc
and
sti
leave
scas
or
repz
xor
dec
mov
arpl
adc
cwtl
loop
ljmp
scas
scas
lret
ja
mov
xor
mov
xchg
ret
f2xm1
or
in
push
mov
cmp
call
sbb
out
mov
pop
test
adc
pop
xor
cmp
xor
enter
push
jp
cmp
sbb
mov
pop
in
scas
adc
mov
xchg
lods
in
clc
jo
repnz
mov
mov
push
mov
iret
mov
cmp
call
aaa
daa
cmpsl
sbbl
ret
add
lds
ficoms
scas
sub
stc
inc
aad
xchg
jmp
dec
inc
push
ja
or
push
movsl
add
aas
sbb
push
push
add
inc
and
sub
aam
fs
jnp
and
mov
cltd
jmp
test
outsb
gs
dec
sub
adc
xor
jbe
adc
dec
inc
push
add
mov
pushf
sub
xchg
mov
inc
push
es
sti
sbb
cld
ljmp
insl
jecxz
push
in
lahf
inc
push
test
je
fstps
mov
outsl
adcb
fnstenv
pop
bnd
and
jp
push
test
sbb
jb
das
mov
fstl
aad
flds
call
adc
xorb
mov
or
movsb
stos
jbe
mov
add
mov
jmp
mov
mov
mov
mov
pop
push
adc
loope
xor
sarl
out
mulb
jge
test
inc
repz
pop
aas
mov
pop
shrb
test
add
ret
xor
inc
das
mov
mov
rcl
adc
loop
mov
lock
movsl
out
mov
xor
in
mov
jnp
mov
cmpsb
lds
mov
fnstsw
xlat
jno
out
out
ss
add
xchg
arpl
repz
xchg
dec
push
cmp
mov
and
mov
dec
xchg
adc
test
jae
push
dec
test
leave
sarb
fdivrl
sub
dec
shlb
je
xor
sbb
and
inc
hlt
scas
cs
jge
popa
mov
push
adc
les
or
into
mov
lds
push
cmc
xchg
loop
xor
push
sbb
test
xlat
inc
repnz
ds
xchg
and
insl
test
mov
xlat
dec
cmp
fidivs
cwtl
ljmp
dec
push
dec
adc
in
ds
inc
inc
push
adcl
cmp
xchg
popa
cmp
sbb
arpl
fildl
scas
dec
filds
daa
dec
cmpsb
cltd
dec
pop
push
leave
mov
stos
repz
scas
mov
gs
mov
rcrb
mov
cwtl
add
ror
pop
arpl
adc
push
mov
insl
push
sub
imul
ficoms
mov
mov
js
pop
push
into
xlat
cmp
xor
push
sub
test
push
mov
imul
inc
xor
xor
xlat
push
jae
push
or
fidivrs
jno
push
cmc
not
lock
sub
pop
mov
mov
cmpl
imul
cltd
pop
scas
dec
and
out
inc
cmp
mov
insl
dec
js
mov
sub
pop
mov
enter
lds
aas
mov
cmp
loopne
mov
xchg
push
sub
inc
pop
arpl
cmc
pop
jl
jg
popa
lahf
out
add
fldl
test
mov
fmull
sti
jmp
cli
cs
lods
cltd
addr16
mov
loop
mov
xchg
into
lea
xchg
scas
inc
loop
sahf
ficoms
xchg
ljmp
aam
arpl
xchg
jecxz
inc
or
dec
add
fs
or
and
ss
insb
sbb
mov
test
adc
cwtl
sbb
int
js
xchg
sub
push
cmp
mov
popa
dec
cwtl
adc
orl
add
lret
sbb
mov
jecxz
and
icebp
pop
add
stc
xchg
popf
mov
pop
pop
xor
sbb
clc
addr16
lock
inc
aas
bound
fiaddl
sbb
xchg
add
jno
scas
aaa
sbb
out
and
cltd
ds
std
mov
in
mov
pushf
and
ret
test
push
pop
in
dec
push
add
testl
ss
or
loope
jecxz
and
sar
int
sbb
mov
inc
and
les
test
cmp
enter
rclb
push
mov
push
inc
sub
pop
cmp
add
mov
icebp
movsl
mov
add
xor
pop
jp
push
jnp
lods
inc
or
pop
push
push
add
dec
pop
push
mov
pop
enter
jne
push
inc
add
out
sub
les
pop
pop
adc
jno
movsl
ljmp
xchg
xchg
iret
mov
lds
lret
clc
aas
in
stc
xor
mov
nop
xchg
lgs
aam
jnp
xchg
sub
aaa
testb
and
mov
pop
pop
lcall
xor
aad
sub
sbb
in
sti
arpl
shlb
ljmp
lock
push
icebp
lods
pop
js
jmp
popf
outsb
clc
cmp
pop
add
es
mov
in
adc
push
adc
dec
int3
aas
and
data16
sub
dec
pop
stos
mov
hlt
pop
dec
ret
pop
test
iret
fisttpll
shll
outsb
lret
fisttpl
adc
sbb
mov
ret
cltd
stos
or
xorb
enter
je
arpl
mov
or
jmp
rorb
es
jo
sub
aam
cmp
rep
stc
cmpsl
fsub
pushw
fisubrs
fwait
mov
nop
jp
ja
dec
push
dec
or
sub
dec
repnz
ljmp
push
mov
fcos
repnz
rcrl
dec
adc
dec
fldenv
jmp
fs
xchg
push
fldt
nop
stos
ror
xor
jo
lret
push
jnp
adc
call
cmpsl
mov
gs
mov
outsl
insl
sub
fiadds
pusha
lahf
int3
test
scas
rclb
in
sbbl
mov
jg
dec
add
in
rclb
test
pop
xor
cmovo
jo
and
mov
mov
daa
aaa
lea
pop
fwait
es
mov
xchg
cmp
adc
push
cmc
std
sub
arpl
movsl
in
rclb
into
cmp
sar
fwait
sbb
sbb
mov
xlat
jp
mov
fmuls
in
cmp
insb
push
and
jg
daa
xchg
sub
mov
scas
aaa
mov
jo
sar
pop
test
js
pop
hlt
out
pop
and
stc
adc
or
add
xchg
or
sub
cmpsl
aad
out
push
xchg
and
outsb
es
adc
add
and
cmp
addr16
pop
mov
and
mov
add
shl
fldcw
xchg
mov
cmpsl
addl
ljmp
int
xchg
push
in
add
cmp
cli
pop
jb
rorl
or
aam
adc
xchg
cmp
mov
scas
inc
call
or
mov
pop
lods
negl
aaa
ss
fmul
mov
inc
dec
jmp
adc
fildll
fcoml
les
shll
pop
aaa
aas
pop
orb
shll
push
fiadds
mov
fimuls
mov
out
dec
jp
in
testw
out
push
jb
test
xchg
aas
xchg
arpl
push
dec
mov
push
scas
repnz
xor
add
inc
icebp
dec
inc
jnp
push
or
add
jmp
lods
dec
stc
mov
dec
xchg
jg
xor
lds
lret
mov
nop
mov
mov
jnp
sub
or
cwtl
cmp
cmpsl
repz
dec
out
sbb
and
lret
dec
jae
add
addb
lcall
mov
stc
mov
test
sub
jecxz
mov
call
mulb
jno
leave
scas
arpl
filds
in
cmp
cwtl
psraw
xchg
shrb
sahf
shl
lret
jl
xchg
loop
stc
les
mov
mov
bound
cmc
sub
lds
fwait
repnz
fdivs
paddw
insl
sub
in
pushl
cwtl
push
mov
mov
out
sti
xchg
stos
jmp
insl
pop
testb
icebp
outsb
inc
lds
inc
inc
popf
lret
test
adc
sarb
rcr
pushf
cmp
inc
xor
aaa
rorl
dec
setnp
add
test
inc
pushf
jne
and
fcomi
push
cltd
or
fldt
fcomps
fdivrp
in
pusha
repnz
xor
sti
or
adc
or
or
mov
sub
out
mov
and
pop
and
jp
xchg
arpl
add
inc
in
imul
js
arpl
cli
mov
xchg
dec
inc
push
xor
rorb
or
out
cmp
imul
icebp
fldt
sbb
push
aad
xor
push
ja
fcompl
mov
mov
and
cmc
cmp
stos
iret
jo
xor
or
clc
mov
push
lock
repnz
mov
sub
lret
pusha
call
shll
les
push
sarb
push
inc
jle
hlt
jb
xchg
sti
mov
cmp
lret
jbe
ljmp
aad
clc
repz
mov
add
mov
fs
insl
xor
and
adc
sbb
or
and
gs
ja
cmp
sbb
outsl
jne
cmp
jle
sarl
sahf
test
adc
sbb
fildll
cltd
cwtl
pop
jno
cwtl
movsl
shll
xor
mov
jmp
xor
sub
pop
xlat
mov
sub
fwait
enter
scas
loopne
xchg
inc
sbb
inc
jno
repz
mov
arpl
xor
sbbb
ja
jge
or
fistps
subb
rcrl
and
sub
adc
inc
je
out
in
and
cmp
mov
movsl
call
lret
mov
jae
xchg
pop
popf
fwait
inc
sbb
pop
add
xor
pop
pop
mov
cld
sub
push
icebp
xlat
aam
mov
jbe
xor
cmc
loopne
test
cmpsl
imul
mov
fbld
cmp
xchg
cwtl
rolb
mov
lea
sub
pop
sub
jle
dec
lock
xchg
cmpb
outsl
out
lds
mov
int
outsl
out
push
lds
jns
popa
sarl
aas
mov
int3
mov
outsb
pop
rclb
and
add
mov
mov
fstsw
push
shll
movsl
jge
xor
divl
mov
std
ud1
or
xlat
mov
pop
cli
mov
daa
outsb
fnstcw
mov
mov
pop
mov
mov
pushf
es
push
fwait
test
pop
mov
cmp
pop
test
sbbl
lcall
inc
in
sbb
testb
mov
mov
lds
xchg
sub
shll
mov
testb
lcall
cs
orl
stos
dec
jnp
mov
pop
sti
mov
cmc
adc
cmpsb
cmp
mov
push
das
and
insl
ret
inc
xchg
inc
scas
cmp
xchg
and
imul
xchg
pop
mov
xchg
mov
mov
scas
mov
dec
lahf
jge
dec
add
adc
and
cmp
mov
dec
jnp
cs
jno
cwtl
aaa
xor
jl
mov
and
adc
pop
cld
xchg
or
jge
pusha
lea
fists
adc
mov
je
in
pop
adc
cld
fcmove
mov
sub
and
or
cmp
sbbb
dec
sub
aaa
scas
push
loop
cmpsb
rorb
roll
pxor
insl
pop
xchg
jg
and
jns
pushf
mov
xchg
aad
mov
xchg
imul
loopne
clc
test
jg
ret
movsb
lods
and
aaa
push
or
push
or
mov
ja
lds
inc
cmp
clc
add
push
and
cmp
outsl
loopne
cmpsb
and
stc
test
mov
xor
inc
mov
das
push
dec
fnsave
fcmovb
leave
pop
rolb
stc
mov
mov
lcall
mov
iret
arpl
orb
aad
in
cvttps2pi
movsb
mov
dec
and
dec
pop
dec
xchg
sbb
fsubrs
mov
imulb
push
fsubp
cmp
pop
cmp
dec
push
cltd
leave
cmpsl
adc
fcmovb
gs
xor
cmp
bound
jp
push
dec
pop
iret
aad
movsl
andl
shrb
ret
ss
sbb
push
dec
cmpsl
sub
add
mov
mov
add
cmp
insb
pop
out
jl
mov
pop
mov
jae
loope
or
fcoml
pop
repz
xchg
fs
je
bound
cmp
xchg
push
sbb
out
andl
fwait
xor
dec
xchg
pop
or
scas
sub
xchg
les
mov
add
push
mov
stc
mov
mov
cmpsb
mov
imul
divb
out
mov
mov
jo
pop
xchg
cli
push
jno
dec
ffree
fisubrs
inc
cld
pop
in
movsb
pop
in
sahf
loopne
xchg
inc
test
xor
push
mov
dec
in
icebp
push
andb
dec
insb
lea
jns
sub
add
fstpt
jb
int
xchg
aas
cmpsl
add
cmp
mov
sbb
in
push
xor
cmp
movsl
bound
bound
hlt
mov
push
sub
jbe
lods
scas
cwtl
pop
stos
in
cmpsb
push
or
mov
mov
xor
cs
sub
sub
repz
xor
movsl
je
daa
jbe
fldcw
repz
scas
imul
stos
ret
sub
xlat
sbb
aaa
cmpl
stc
les
leave
repz
adc
push
lcall
es
xor
and
pop
les
cmc
cmp
cmp
push
and
add
sahf
sub
js
lahf
sahf
sub
jno
sub
xchg
and
xor
lret
mov
xchg
in
clc
and
jo
and
mov
in
int
jl
out
lods
cwtl
xorb
addb
mov
aam
sarb
inc
and
fcom
pop
sbb
push
cwtl
scas
inc
push
and
mov
or
dec
sbbl
in
sub
push
mov
cli
push
cmpsl
mov
xchg
loope
jbe
or
rcrl
xchg
repnz
mov
dec
lods
pop
pop
mov
mov
stc
bound
mov
sub
push
rclb
push
jp
mov
fisttpl
ret
test
xor
add
jmp
inc
mov
adc
gs
int
mov
out
sub
mov
shlb
adc
push
jbe
cmp
mov
and
sbb
int
stc
icebp
cltd
push
aaa
ds
subb
ljmp
push
outsl
and
lods
adc
stc
jg
call
mov
roll
fsubrs
pop
je
pop
fstl
sub
cmpl
jne
dec
roll
cmpsb
push
sub
add
mov
add
pusha
push
lcall
or
jns
sahf
jp
xchg
int3
or
inc
sarb
inc
push
fisubl
xor
jno
xor
jae
jecxz
rol
push
clc
cmp
push
mov
jo
jecxz
push
push
sbb
cli
leave
dec
sub
cmp
push
sbb
and
cmp
fwait
push
xchg
mov
mov
pop
scas
xchg
neg
cmp
fisubs
fsubrs
sub
adcl
ret
add
add
cmc
pop
mov
dec
daa
jnp
call
sbb
lahf
add
ret
aam
pop
popf
jl
popa
and
push
push
and
jmp
lret
xchg
scas
in
ljmp
mov
out
inc
pop
mov
stos
inc
std
mov
mov
push
fwait
pop
mov
ja
mov
lahf
repz
sub
insb
shll
sub
pushf
mov
fs
mov
mov
popf
add
push
cmpsb
lds
in
mov
nop
les
jp
dec
or
adc
adc
rorb
mov
xor
out
adc
dec
pop
push
aaa
stos
sub
mov
cmpsb
adc
popf
hlt
sub
push
inc
sahf
add
cmpl
in
leave
jbe
fsubl
pop
pop
pop
inc
mov
lret
inc
aas
mov
jge
add
and
in
adc
push
jne
xchg
add
sbb
sahf
cli
sub
mov
rcrl
cwtl
out
or
xor
dec
lcall
lcall
push
pop
insb
or
add
push
or
or
adc
cmp
scas
enter
clc
les
ja
sbb
mov
inc
cmp
dec
push
jo
inc
aaa
fwait
cs
and
lahf
jbe
push
dec
pop
nop
dec
add
fstpt
mov
and
lcall
sbb
cmp
and
lds
shll
sbb
jg
aaa
and
add
jno
fstpl
std
mov
add
dec
repz
stos
aaa
xor
outsl
test
inc
jg
lcall
scas
mov
jecxz
and
fwait
cwtl
daa
andl
push
aam
sbb
lcall
and
mov
push
add
pop
xchg
call
mov
pop
or
and
scas
sbb
fdivrl
scas
js
in
xor
ja
inc
and
jno
mov
vmovapd
dec
aas
addb
ret
add
popf
pop
jmp
andb
ficomps
repz
mov
outsb
sub
pusha
sub
lret
xchg
into
das
fmuls
gs
pop
gs
xchg
call
cmpsl
lods
popf
ds
lahf
movsl
stos
loopne
sbb
rolb
stos
inc
stc
insl
dec
mov
xlat
and
pop
cwtl
sub
dec
gs
and
xchg
sahf
mov
xchg
mov
imul
sub
mov
leave
dec
pop
std
loop
mov
cmc
sahf
pop
xor
add
push
cwtl
cmp
cltd
push
cs
push
and
mull
stos
pminsw
xchg
ret
and
iret
arpl
nop
bound
popa
pop
ret
ja
movsb
movsb
push
lahf
rolb
pop
inc
je
out
cltd
outsb
adc
les
into
out
pop
jmp
and
inc
je
lock
mov
adc
loopne
mov
dec
mov
je
push
mov
pusha
andb
std
int3
xchg
outsl
clc
mov
je
js
xor
pop
je
in
mov
jg
cmpsb
mov
stos
loopne
push
dec
add
inc
sub
cmp
and
add
inc
pushf
daa
stc
cmpb
fwait
cwtl
pop
das
aaa
pop
jge
add
cli
adc
cmp
or
test
dec
int
sub
sbb
mov
inc
outsb
jg
and
mov
stos
dec
cmp
popa
mov
or
mov
push
jp
stc
sub
lcall
in
cmc
jae
sub
lock
xor
push
movsl
sub
shrb
pop
repnz
test
inc
cmpsb
mov
popf
movsl
inc
mov
loop
pop
addr16
mov
iret
pop
jge
fstps
inc
movsb
aam
imul
outsb
xchg
pop
mov
jns
mov
insb
arpl
mov
push
cmpsl
dec
int3
inc
out
stc
es
shll
jno
sub
in
test
dec
jnp
add
pop
adc
sbbl
clc
and
addr16
jno
xchg
push
mov
push
frstor
add
mov
xor
dec
rcl
loopne
cmp
lcall
mov
fcomp
xchg
mov
cmc
in
insl
out
imul
enter
popf
ljmp
sbb
jp
testb
lods
clc
dec
lds
cmc
pop
movsb
fstps
jmp
jge
cmc
sbb
pop
decl
loop
testl
pop
sti
pop
or
jle
insl
xlat
mov
call
adc
pop
in
mov
pop
jno
jecxz
out
jecxz
out
adc
xor
je
add
mov
ret
add
adc
cmp
and
lods
mov
add
outsl
dec
cld
lret
shlb
rolb
movsl
gs
jns
inc
and
out
fldl
cwtl
push
pop
lods
lcall
lods
push
inc
das
pop
shrl
push
sbb
xchg
fsubrl
loopne
xor
mov
add
lcall
and
fisttpl
push
sub
mov
push
fwait
push
ret
mov
shrl
jns
xchg
jg
xchg
jae
in
jmp
pop
lea
cmp
es
mov
fldt
pop
movsb
mov
in
lret
data16
jp
sbb
mov
cmpsb
push
stos
notl
dec
mov
push
fdivl
fisttps
sub
loope
int3
add
xor
xchg
inc
iret
jae
out
xchg
test
outsb
pusha
leave
stc
imul
dec
cmp
mov
xchg
addr16
filds
dec
mov
sbb
aam
xchg
leave
mov
mov
push
loopne
into
divl
dec
add
movnti
imul
int
shll
movsl
mov
cmp
sbb
popl
aas
push
mov
sbb
sti
int3
mov
lret
xor
out
arpl
cmpsl
and
or
ja
mov
mov
mov
and
mov
adc
push
inc
in
bound
pop
loopne
cmpsb
sbb
mov
push
adc
lds
mov
sbb
xchg
push
sub
add
test
sbb
les
mov
mov
cmp
stos
int3
ds
and
mov
sub
lods
xchg
jno
dec
daa
mov
lds
lods
pop
dec
aad
in
mov
arpl
sub
lods
pop
xor
sub
lret
ret
fwait
add
inc
ds
les
jno
loopne
xor
jp
and
cmc
aaa
jne
cmpsl
adc
or
in
mov
push
ds
test
orl
mov
and
inc
arpl
imul
xchg
pop
loopne
lret
push
xchg
daa
dec
dec
cmp
out
sti
add
cmp
ror
popf
movsl
mov
xchg
insl
inc
mov
insb
dec
sbb
mov
inc
mov
movsb
inc
pop
pmaddwd
mov
adc
out
add
rcll
mov
aaa
xchg
shrb
shll
sar
imul
rolb
xor
ficoml
xor
cmpsl
and
int
cmc
movsl
dec
aaa
pop
stos
adc
ss
dec
loop
or
mov
jo
xor
cmc
xchg
movsb
pop
mov
sti
ffree
in
push
outsb
cs
lds
ljmp
or
xor
jle
dec
loop
mov
das
mov
add
pop
adc
out
jno
in
and
mov
mov
es
push
test
scas
jno
fstp
jne
add
and
mov
sub
xor
push
in
ror
das
xchg
aad
sub
mov
out
mov
lods
and
jbe
addb
push
and
inc
jo
adc
lret
xchg
insl
movsl
jns
adc
or
es
cmpsl
or
pop
mov
scas
pinsrw
daa
cltd
les
dec
push
mov
icebp
adc
xchg
mov
cmp
mov
sbb
decb
loopne
mov
xchg
jl
push
sbb
cmp
popa
outsb
pop
jae
jbe
dec
mov
push
mov
sbb
inc
dec
movsl
and
daa
sbb
xchg
mov
fldenv
push
decl
dec
xchg
xchg
sub
inc
imul
imul
lods
cmp
xlat
int
jp
dec
mov
in
pop
lcall
mov
cmp
cmp
lahf
cmp
pop
push
mov
div
dec
arpl
add
pop
cs
scas
jae
pop
pop
push
ficompl
js
fwait
sub
rorb
cs
xchg
mov
mov
xor
lods
jb
push
mov
jmp
das
add
dec
sbb
push
mov
out
mov
jmp
jmp
shll
rcl
into
ss
rorl
cmp
aaa
cmp
lahf
dec
adc
sahf
enter
mov
jp
movsl
inc
jae
leave
fcom
lds
aas
nop
dec
ljmp
mov
add
sub
cmp
cwtl
push
jecxz
mov
rcrl
out
pop
mov
xchg
addr16
sub
add
jae
fadd
mov
enter
sub
mov
and
jae
andl
push
mov
mov
sub
cmp
outsl
add
push
call
cmp
or
cwtl
inc
mov
inc
mov
and
lret
push
cmp
in
cmp
stos
sbb
jbe
int
test
in
leave
lea
mov
imull
mov
iret
mov
jne
jecxz
push
add
push
pushf
xchg
insb
int3
mov
jp
mov
cmpsl
pop
xchg
stos
clc
mov
sbb
aas
jmp
ret
and
je
pop
mov
shrb
aad
sub
or
popa
aas
push
dec
call
js
insl
test
je
adc
cli
mov
jmp
jge
cmpps
inc
xchg
pop
push
rcrb
in
mov
add
sub
sub
and
ja
inc
iret
pop
out
adc
dec
or
xchg
out
loopne
dec
movq
mov
adc
xchg
loopne
bound
sbb
insl
fstpl
nop
mov
insl
sub
push
push
fisttps
cwtl
lods
int
jns
push
mov
sub
push
xor
cwtl
xor
ficomps
aam
sub
sbb
cld
mov
jge
shlb
negl
bound
sbb
fbld
rcll
push
sub
out
icebp
es
cmp
cmp
push
sbb
add
int3
cmpl
lea
xor
xchg
cs
das
push
mov
jae
mov
stc
stc
fisubrl
mov
mov
or
sub
cli
ret
in
loopne
push
xchg
test
and
pushf
lcall
nop
mov
mov
fwait
pop
jns
out
lods
or
int
push
bound
add
icebp
fcomps
xlat
jmp
pop
pop
dec
pop
mov
jo
inc
popa
ds
jne
and
mov
lock
addl
inc
push
iret
mov
pop
pop
es
out
xor
add
mov
scas
lods
mov
jb
xchg
aaa
inc
sbb
loope
pop
xchg
addr16
sbb
cmc
in
lock
cmpsb
or
sahf
mov
pop
add
ljmp
movsl
pop
fistpll
cwtl
jno
inc
dec
out
and
sub
dec
adcb
ja
push
inc
mov
popa
mov
jge
fs
push
je
bound
fwait
sbb
pop
je
push
add
pop
pop
pop
out
inc
aam
int3
dec
push
fwait
push
lahf
jl
inc
into
call
pop
movsl
push
scas
xchg
ljmp
lret
or
or
add
sbb
add
pop
in
inc
repnz
push
fidivs
rorb
inc
pushf
cltd
xchg
addr16
or
jno
dec
xchg
jle
sub
lret
scas
cmp
mov
or
clc
call
outsl
ljmp
or
sbb
fisubrs
pusha
lea
dec
and
scas
in
add
mov
mov
jl
mov
sub
cmpsl
adc
sub
or
ret
adc
cmp
adc
and
js
arpl
pop
mov
jg
pop
sbb
and
insl
call
test
sahf
cmc
cmp
popa
mov
inc
dec
das
pop
popf
int
push
imul
loop
insb
push
gs
sarb
popa
mov
sti
iret
outsl
pop
push
mov
xchg
scas
inc
dec
add
repz
mov
mov
insl
xchg
pushl
xor
xorb
jmp
and
mov
lock
dec
repz
test
ljmp
je
inc
cmp
ja
adc
lods
gs
in
xor
das
xchg
cmp
xchg
xor
movsb
jae
jnp
add
je
cltd
inc
fdivr
lock
mov
and
cmc
pop
sub
cwtl
scas
lret
or
adc
cltd
push
lods
mov
scas
leave
push
movsb
stos
xchg
sar
sbb
inc
ss
stos
leave
pop
in
xchg
cltd
mov
idivb
xor
xchg
cmp
ds
int3
popf
bound
daa
jp
cmpl
mov
or
xor
pop
test
mov
call
popl
and
add
or
mov
outsb
mov
mov
mov
mov
lods
lods
jg
xchg
pop
testb
outsl
jne
xor
inc
mov
outsb
in
sti
or
mov
pop
sbb
lock
mov
adc
stos
inc
ss
xchg
fiadds
mov
jo
cmpsl
xchg
mov
mov
dec
mov
aaa
mov
iret
ljmp
cmp
cmp
aaa
out
sub
and
mov
data16
mov
sub
idivb
mov
xor
pop
test
leave
inc
pop
mov
cmpsb
jae
push
xor
xor
scas
pusha
cli
mov
icebp
xchg
xor
cmpsl
mov
movsl
insb
bound
pop
stos
lds
and
sbb
xor
pusha
stos
jns
pause
mov
mov
xchg
sbb
inc
push
dec
lea
sahf
test
add
outsb
mov
sbb
out
std
imull
mov
dec
push
mov
cltd
scas
mov
jle
jge
call
fbstp
testb
pop
int3
cmpsb
ret
test
test
or
cmpsl
rcll
out
adc
outsb
aad
adc
mov
in
sarl
inc
sub
adc
mov
jne
lahf
mov
insl
sub
cmp
sub
mov
outsl
loop
push
mov
and
ret
negl
cmp
sbb
icebp
inc
xchg
les
fldcw
jg
jne
aaa
sub
mov
jge
xor
popa
cmp
shl
jl
jne
push
sahf
xchg
xchg
or
dec
jo
test
fists
mov
or
inc
sub
jbe
push
je
mov
test
xchg
mov
jp
inc
push
sbb
in
mov
jge
mov
xchg
pop
movaps
push
fstps
jg
pushf
sbb
rcll
out
pusha
push
pop
adc
push
pop
adc
push
jp
push
js
clc
inc
jge
loop
mov
pop
movsl
xchg
es
jl
or
inc
outsb
pushf
adc
pop
daa
jecxz
cmpb
cmp
sub
dec
cld
inc
cmpsb
inc
mov
movsl
adc
pop
or
jmp
cltd
cmp
pop
int3
push
iret
fwait
hlt
outsb
shl
gs
jno
xchg
sub
push
sbb
jecxz
and
and
cs
fistpl
int
inc
dec
sub
rclb
cli
inc
mov
in
mov
loop
lods
push
lcall
push
test
dec
or
das
pop
cwtl
sahf
cmp
mov
inc
cmc
inc
sub
es
jbe
sbbb
xor
push
lahf
in
gs
inc
lcallw
repnz
push
sbb
test
cmpb
popa
dec
or
pop
and
pop
mov
cmp
sahf
mov
push
loope
sub
adc
lock
shl
dec
jl
sbb
pop
push
mov
push
pop
xor
cmp
ret
jle
ret
adc
sub
push
and
cmp
pushf
scas
jb
mov
bound
mov
shrl
dec
mov
xchg
sub
mov
aas
pop
in
call
nop
mov
aaa
cmc
cld
sub
or
jg
inc
fdivrs
popf
xchg
enter
imul
mov
loopw
fs
loope
mov
mov
fcoml
out
mov
repz
ljmp
scas
cwtl
rcr
adc
dec
xorb
test
das
fidivrl
inc
mov
call
clc
in
fwait
dec
movsl
xchg
sbbl
in
je
xchg
dec
pop
mov
add
std
in
adcl
pop
xchg
sub
mov
mov
mov
scas
sub
xchg
sub
cmpb
test
cli
jo
mov
lea
stos
push
mov
imul
ficoms
repnz
in
imul
stos
mov
cmc
or
and
cmp
xchg
add
mov
ljmp
test
aad
mov
ljmp
xlat
pop
xchg
and
pop
fidivrl
fprem1
mov
div
lcall
push
mov
mov
mov
lcall
int
fbstp
inc
ds
jae
sbb
sbb
or
insb
fcomp
jno
je
dec
clc
mov
rcll
enter
jns
xchg
test
adc
lea
mov
pop
pavgw
lock
int
sub
icebp
adc
xchg
pop
mov
dec
test
pop
rorl
pop
push
popa
bound
xchg
pop
dec
cmpsb
and
inc
pusha
pop
jmp
sbb
xchg
test
xchg
ror
scas
ljmp
cmp
into
jl
icebp
ss
stos
or
jmp
insl
dec
sti
fwait
and
icebp
les
fwait
and
pusha
mov
aam
push
lret
pop
mov
lret
repnz
jne
fidivl
sub
add
pop
dec
push
push
ljmp
mov
lret
jae
fists
sub
and
inc
adc
xchg
jecxz
and
pop
sbb
test
sub
sub
out
shl
jb
or
add
pop
cmp
add
jne
xor
dec
push
dec
idivl
fsub
in
sbb
outsl
pop
js
loope
hlt
out
test
cmpsl
stc
sbb
leave
in
in
daa
mov
test
out
inc
test
loop
push
outsb
cmc
fdivs
fldt
movl
outsb
js
sbb
orl
out
pop
rorb
xorl
jns
xor
sbb
lds
in
and
rolb
pop
jb
mov
dec
sub
fistpl
xchg
inc
adc
jo
push
pop
pop
aam
outsb
js
ret
sar
adc
sub
jns
adcl
mov
sub
cmp
sub
stos
or
mov
pop
add
inc
test
xor
xorb
int3
outsb
adcl
test
mov
xchg
scas
fcmovne
je
sbb
adc
mov
lds
pop
je
sub
mov
pop
shlb
outsl
cmp
ja
mov
inc
and
je
add
ljmp
neg
mov
lea
xchg
jle
pop
rol
fs
xchg
xchg
ja
das
loop
pop
push
test
xchg
dec
jl
subl
sti
outsl
jmp
or
mov
sbb
mov
ret
push
outsl
fwait
sbb
mov
scas
jo
out
and
fcompl
add
push
shl
ds
ret
mov
cmp
arpl
out
aaa
sub
dec
loop
out
push
ret
adc
push
bound
popa
cmpsb
push
jecxz
and
pop
add
inc
pusha
sub
dec
mov
xchg
push
mov
jl
mov
inc
xor
sub
lods
jo
push
scas
xchg
mov
xor
and
testb
push
imul
mov
adc
and
out
sbb
adc
jge
mov
aad
mov
sbb
jno
cwtl
pop
fucomi
fmuls
jle
xchg
subb
pop
aaa
mov
out
ret
shll
fmulp
xor
negl
movsl
dec
mov
fistpl
sti
fmull
mov
cmp
ret
scas
idiv
pop
adc
cmp
fmuls
pop
dec
mov
mov
mov
in
in
enter
jmp
cmp
stos
addr16
or
cmpsb
adc
mov
mov
cmpsb
bound
lcall
test
fidivrs
pop
pop
call
sbb
shlb
cs
in
sub
dec
icebp
dec
lock
ss
icebp
sahf
xchg
add
xchg
or
fisubrl
sbb
xor
xchg
lds
dec
add
mov
inc
cli
cmpsl
ss
cmp
xor
fcoml
lds
popa
mov
mov
ret
loope
sbb
jae
in
dec
dec
inc
jno
and
cmp
lret
or
jb
in
dec
clc
xor
out
mov
pop
cmp
scas
inc
push
push
jmp
push
ss
mov
push
cwtl
addr16
pop
mov
mov
xchg
leave
xchg
scas
in
push
dec
leave
add
rcrb
insb
jl
jb
idivb
jo
fimull
out
inc
lds
cmpb
es
sub
scas
mov
lahf
hlt
mov
out
ficoml
cmp
jg
rcl
inc
push
icebp
dec
adc
mov
and
loopne
adc
mov
vmovddup
xor
pop
add
sbb
ficoml
jecxz
jp
mov
cwtl
test
adc
push
sbb
dec
pushf
dec
adc
push
xor
addb
sahf
xchg
test
cltd
pop
mov
xchg
popf
push
fdivrs
mov
jmp
lret
fdivrp
fistps
orl
int
add
hlt
jmp
popa
loope
xchg
cmp
adc
pop
shrl
imul
ljmp
pop
jo
lds
test
je
sbb
shlb
sahf
sub
shlb
dec
dec
pop
mov
jno
das
pusha
add
addr16
push
ss
mov
inc
or
outsb
lea
adc
mov
incl
rcll
xchg
rcl
xlat
imul
aas
mov
ret
movsb
cmpsl
mov
mov
fsubrs
sar
mov
sub
or
xor
das
or
rcl
js
stos
inc
sbb
stos
add
nop
pop
mov
mov
mov
flds
loope
testb
push
aaa
jp
std
mov
cli
mov
xchg
cmpsb
inc
adc
cmp
cmp
inc
dec
fildl
jecxz
sti
jb
mov
adc
in
mov
jmp
cmp
jae
sbb
jbe
test
std
jle
push
xchg
jge
popf
and
rcr
inc
inc
pop
std
lcall
loopne
or
push
sub
fcmove
jp
loop
add
jmp
shr
imul
lods
push
add
and
inc
xchg
je
out
dec
rolb
inc
sbb
and
in
push
adc
out
ret
outsb
or
or
jl
mov
push
sbb
add
pop
shr
fsubs
xor
jecxz
cmp
fldcw
je
cld
loop
sub
xchg
add
test
call
aad
lahf
rol
test
pop
addb
push
sub
cmp
and
and
adc
cld
sbb
lock
mov
inc
inc
jo
and
mov
sbb
sbb
or
and
sub
popa
cmc
push
fwait
das
push
xchg
jle
pop
push
mov
xchg
mov
mov
fsub
retw
inc
insl
and
in
mov
cmc
bound
mov
push
mov
inc
jns
jns
add
stos
outsl
ja
repnz
and
xchg
aam
sbb
mov
jl
jbe
int
and
outsl
add
sti
xchg
dec
das
loop
push
or
icebp
sti
cmp
add
xor
outsb
movsl
jns
lds
arpl
les
mov
imulb
sahf
out
dec
rcrb
inc
mov
push
cli
test
push
popf
cmp
jmp
xor
iret
xor
mov
fs
stos
jp
cs
into
mov
pop
inc
mov
in
movsl
sub
lock
mov
aad
rorb
fldl
imul
and
jae
cwtl
iret
dec
mov
adc
cltd
scas
hlt
repz
pop
dec
push
add
mov
call
xor
adc
mov
out
lea
adc
mov
fbstp
loope
xor
and
xchg
and
jg
cltd
cmp
ljmp
push
out
mov
adc
mov
mov
xlat
cmp
add
mov
sbbb
xor
jnp
mov
call
jecxz
push
test
loope
push
push
repz
sbb
mov
leave
mov
sbb
mov
es
out
jge
clc
test
pop
shll
mov
add
cmpsl
or
aad
leave
mov
jae
pop
pop
outsl
int
imul
mov
lods
push
cmp
lret
mov
cmc
inc
sbb
push
jp
dec
inc
dec
cli
dec
sbb
or
mov
aas
dec
xchg
xchg
mov
sti
int
push
and
jno
fcoms
sub
ss
mov
not
mov
jnp
push
jb
add
fwait
xchg
loopne
jmp
pop
xor
or
adc
test
sub
pop
push
int3
add
arpl
mov
popa
bound
push
clc
test
cmp
cld
out
cld
jo
mov
push
xchg
cmpsl
sarb
mov
aad
popf
push
push
adc
mov
aam
lret
add
lea
lods
popf
fwait
adc
mov
cld
push
sub
add
scas
pushf
sbb
cwtl
insb
lahf
xor
push
mov
jmp
sbb
cwtl
xchg
lods
rcrl
xchg
mov
mov
mov
repnz
inc
sub
pusha
je
aam
setle
sub
mov
mov
dec
test
clc
roll
jecxz
orl
cmpsl
adc
call
outsl
dec
and
adc
jmp
pop
xor
pop
dec
jp
lock
lahf
push
dec
mov
cli
test
dec
mov
sbb
shl
or
aam
inc
dec
mov
pop
dec
sub
add
lods
shll
stos
cmp
dec
dec
divl
cmp
dec
pop
addb
cwtl
rcrl
inc
lods
sbb
cli
mov
imulb
push
or
inc
daa
stos
mov
sbb
pop
xor
mul
arpl
mov
les
gs
push
jb
movsb
xor
jns
push
sahf
enter
and
repnz
mov
push
pop
push
rol
test
adc
dec
push
fildl
lods
or
adc
sbb
lods
rcr
out
inc
mov
dec
dec
js,pn
dec
xor
scas
enter
mov
loopne
rorl
stos
cmp
xchg
pop
jp
out
aam
pop
mov
out
cmpsb
jae
xchg
addr16
insb
nop
mov
xor
faddl
sbb
in
adc
divb
leave
push
lds
test
js
dec
stc
dec
sub
lret
cmp
les
lods
fistpll
mov
inc
adc
stos
jl
xchg
jo
and
nop
stc
js
fdivp
sub
dec
push
ljmp
mov
adc
fmuls
sub
aaa
loop
loopne
dec
icebp
stos
adc
daa
adc
pop
pop
notb
mov
sub
pop
cmp
add
aad
movsb
cmp
cmp
lock
lock
xor
xchg
mov
or
jns
push
sub
cwtl
mov
or
movsb
mov
js
mov
push
add
ret
sub
popa
clc
stos
imul
out
dec
pop
mov
xchg
cmp
xor
xor
or
popf
out
test
sub
pop
xor
jecxz
cmpsl
dec
mov
push
adc
pop
and
jmp
popl
test
mov
mov
iret
push
addb
fnstsw
ret
sub
sub
dec
jle
inc
fiadds
fcoml
cmp
inc
aas
ficoml
xor
fidivs
scas
dec
int
fidivrs
inc
jae
insl
pop
and
xor
movsb
sbb
fdivrs
outsb
jle
cmpsb
movb
and
pop
mov
xchg
lock
cmp
xchg
mov
fnstenv
icebp
add
outsl
xor
add
jo
dec
adc
sahf
pop
adc
mov
push
lahf
repnz
das
int
imul
stos
out
pop
fwait
jae
and
hlt
mov
jns
sbb
das
xchg
pop
imul
mov
or
cltd
push
mov
movsb
dec
aas
stos
insl
mov
xchg
add
or
mov
jmp
jbe
js
pop
mov
xchg
in
imul
dec
es
ret
repz
push
and
adc
movsl
jae
insl
inc
aam
les
imul
leave
pusha
andl
adc
cmp
xchg
and
mov
mov
cmpsb
ret
adc
cmc
jne
je
mov
lea
or
jg
bound
decb
sub
in
sbb
and
imul
in
fldt
insb
add
pop
inc
push
mov
movsl
jns
lcall
pop
out
dec
sbb
sub
iret
dec
jg
xchg
mov
ss
leave
in
xchg
xlat
sub
les
xchg
xchg
mov
data16
add
jle
inc
push
bound
push
loop
sahf
cmc
lods
call
scas
xor
jb
cwtl
cmp
je
ds
push
dec
xchg
rolb
jns
and
mov
arpl
ja
and
scas
jge
pop
mov
dec
push
stc
pop
adc
and
in
xchg
cli
sbb
mov
mov
and
test
inc
dec
fstps
mov
data16
inc
aas
and
mov
out
idiv
xor
rcrl
fistps
fimuls
pushf
cmp
dec
xchg
and
and
das
cmpsl
jg
dec
cmpsb
mov
cmc
popf
push
aam
in
insb
pop
je
test
loop
orl
dec
mov
lods
outsl
cmp
mov
out
gs
jbe
adc
xchg
lahf
in
mov
lret
stos
cwtl
and
jae
xor
aas
cmp
xor
push
scas
push
mov
es
push
lcall
xor
push
sub
mov
fildl
mov
sub
test
test
xchg
xor
cwtl
sbb
pushf
inc
in
cmp
sbb
loop
in
cltd
dec
js
jns
xchg
fs
sahf
pop
inc
ret
adc
dec
clc
dec
mov
push
ret
and
loopne
push
push
mov
inc
jle
test
add
in
and
mov
sarl
popf
adc
fcoms
mov
inc
fs
out
aad
inc
mov
push
je
in
push
cmp
sub
aam
or
fwait
out
icebp
mov
inc
jmp
popa
inc
test
or
push
pop
in
jae
rorb
in
and
sub
dec
jmp
lret
test
push
pop
pop
test
xchg
mov
jns
lcall
sbb
lods
cmp
pop
push
insb
lahf
lds
repz
daa
mov
cld
lock
xor
adc
jmp
inc
cmp
adc
int3
lock
lret
scas
push
mov
rcll
push
push
int
pop
shl
mov
lods
stc
jae
inc
ds
scas
lret
int
xchg
adc
testb
jp
test
and
add
inc
pop
push
stos
xchg
lock
shrl
gs
xchg
fwait
dec
add
fiaddl
imul
call
mov
bound
jge
jbe
call
fldl
fldl
cli
fsubrs
daa
imul
clc
dec
sub
out
stos
push
pop
mov
jnp
jp
popa
arpl
push
mov
xchg
fcompl
popf
fnsave
icebp
or
loopne
adc
leave
and
xor
movsl
nop
jge
dec
sbb
aas
fs
cmp
jecxz
testl
cwtl
push
scas
or
add
xor
mov
aam
jmp
subb
push
bound
ret
sbb
pop
jne
out
fwait
adc
pop
sbb
es
test
mov
test
pop
mov
bound
lret
ljmp
data16
adc
in
push
addl
mov
rcll
mov
lds
or
loop
loope
add
testl
rcrb
popa
repz
mov
adc
pop
testb
push
scas
les
out
xchg
test
pusha
aam
scas
or
mov
je
and
sub
iret
outsb
loope
mov
mov
or
adc
sbb
mov
stos
adc
insl
or
mov
test
dec
sub
inc
push
rolb
pop
xchg
lcall
hlt
mov
cmpsb
xchg
pop
int3
insb
or
mov
xchg
sbb
jnp
push
scas
lret
pop
in
insl
pop
stos
lods
pusha
cmc
call
cmp
adc
out
cmp
mov
add
ds
sub
andl
outsb
or
lret
dec
cmc
pop
rcrb
test
pop
xchg
das
or
ret
cmp
jp
or
fsubs
inc
mov
add
and
pop
out
cmp
les
lret
loope
sbb
call
pop
testl
xor
cmp
sti
mov
imull
sub
ret
inc
jb
add
icebp
roll
jns
mov
adc
mov
xchg
mov
mov
cmc
xor
roll
pusha
ljmp
ljmp
inc
xchg
xlat
in
lock
lret
sti
js
cmp
inc
shrd
test
les
rcr
fwait
mov
mov
fisttpll
pop
mov
dec
divl
add
push
in
cmp
nop
lods
add
fwait
aad
pop
mov
ja
add
and
xchg
pusha
loop
cmp
xor
pop
rcll
and
inc
in
mov
hlt
or
popl
ljmp
sbb
xor
push
cmp
mov
push
rcl
mov
cmpsb
push
mov
dec
shll
xchg
push
push
outsb
or
push
lea
idivb
or
mov
jecxz
and
push
mov
sub
faddl
cmpsl
movl
in
into
xor
and
and
push
xor
jp
sub
leave
scas
addb
movsb
ss
fistps
adc
dec
push
mov
xchg
je
jmp
mov
aas
push
xchg
sub
lret
lock
loop
pop
xchg
inc
fcomps
sti
push
mov
test
push
lahf
cmp
mov
inc
icebp
mov
inc
ret
cltd
mov
mov
lock
push
sbb
sub
imul
int
mov
jp
jl
jg
cmpsl
testl
js
mov
nop
icebp
mov
xchg
icebp
jns
out
push
shll
push
in
xchg
rcll
jnp
aam
test
mov
and
aam
sub
inc
mov
lods
dec
xor
movsl
leave
xor
sub
inc
mov
adc
pop
lret
test
jbe
push
sbb
aam
imul
xorl
pop
mov
mov
xor
mov
push
aas
pusha
imul
jo
addl
leave
stos
xchg
icebp
and
xchg
add
push
repz
in
jl
decb
cld
mov
addr16
es
outsb
dec
jle
cld
pushw
mov
or
rorb
add
jne
sahf
pusha
nop
daa
sti
xor
push
leave
dec
jg
cli
adc
xor
lea
enter
sbb
pop
sbb
sub
pop
xchg
mov
loopne
xor
repz
xchg
in
jecxz
cs
pop
aaa
add
push
sbb
and
daa
loopne
mov
popf
scas
cmp
xchg
mov
repnz
stc
pop
inc
cmp
sub
stos
sub
or
fldenv
sub
aam
fucomi
imul
das
enter
enter
sub
cli
daa
cwtl
pop
imul
aas
sub
lds
loopne
dec
lods
out
xlat
or
xchg
mov
xor
lahf
jmp
divl
sbb
in
stc
pop
xor
frstor
or
rcrl
jne
cmpsl
xchg
pop
loop
xor
xchg
xor
cmp
xor
lea
xchg
mov
addb
cwtl
mov
add
aad
cmp
fs
inc
hlt
lret
mov
outsb
xchg
sub
push
or
fimull
sub
xor
sub
inc
fs
fsub
test
hlt
dec
bound
jl
pop
lahf
push
ja
push
mov
pop
bound
jge
xchg
out
jle
mov
pop
jmp
rcrl
add
mov
lret
jo
cld
je
push
xorb
stos
xor
push
inc
int3
or
adc
push
and
jl
dec
dec
mov
pop
xchg
mov
fcomip
addr16
mov
and
fisttps
scas
sbb
ss
imulb
fucomip
daa
ret
ret
cs
jo
ja
push
repnz
sub
xchg
cs
in
jbe
rcrb
es
gs
adc
loopne
arpl
add
mov
adc
lds
testl
xor
js
int
dec
cmp
mov
hlt
call
js
fs
test
filds
fwait
lahf
or
push
pop
je
xchg
add
adc
sbb
xor
je
adc
mov
pop
dec
popf
loopne
in
dec
loop
scas
sub
mov
jne
repnz
dec
inc
dec
stos
sti
push
cmpsb
rep
fidivs
cld
stc
or
fldz
clc
sbb
int
inc
popf
sbb
push
cs
cmpsl
mov
dec
cmc
or
xor
outsb
sub
sahf
in
push
adc
ds
sti
add
push
sbb
orb
out
cmpsl
xor
cmp
cmp
lret
loop
fidivs
aam
jecxz
jp
cld
inc
or
sbb
push
pop
jnp
inc
inc
sarl
insl
dec
fsts
repnz
push
xlat
into
pop
xchg
aaa
jbe
mov
mov
fwait
mov
jo
sbb
iret
insb
add
in
push
adc
xchg
cld
adc
sbb
cmpsl
and
mov
mov
cltd
das
mov
fwait
mov
aaa
rcll
and
arpl
cmc
jmp
and
out
xchg
adc
xor
test
daa
call
iret
dec
js
cmpsl
inc
sub
inc
sub
stos
and
fwait
xchg
sub
xchg
mov
xchg
jb
push
push
pop
xor
insb
cmp
adc
xlat
mull
and
adc
push
scas
jb
push
pop
sbb
xchg
mov
push
bnd
call
inc
std
daa
push
jge
jge
xchg
pop
add
shrl
pop
mov
test
add
cmp
mov
dec
ss
mov
jno
mov
notb
jecxz
pop
jne
push
mov
mov
xchg
pusha
scas
cmp
sbb
xor
xchg
addr16
jb
arpl
insb
xchg
sbb
push
and
test
out
cmp
arpl
outsb
insb
dec
mov
das
mov
mov
ficoml
int3
in
into
cs
cmp
scas
jb
and
push
ss
inc
scas
fldt
pushf
cmc
das
pop
adc
mov
ficoms
mov
mov
arpl
cs
sub
mov
call
or
inc
mov
les
xchg
xchg
jo
leave
pop
push
pop
dec
add
mov
sub
xchg
lahf
das
lea
fdivrp
push
dec
movsb
cmpsb
dec
fnsave
outsl
add
mov
fs
jns
sbb
inc
mov
or
xor
lahf
sub
pop
xor
xor
push
adc
pop
stos
xchg
ljmp
call
nop
rcrl
mov
data16
in
mov
mov
add
ret
add
sti
stos
daa
in
repz
fsubr
dec
bound
pop
xchg
push
into
test
mov
push
fisttps
call
mov
xor
shll
push
inc
pop
lcall
in
jbe
into
or
fcmove
std
pop
inc
xor
shrl
insl
xchg
scas
movsl
aaa
xor
je
fsts
test
or
dec
adcl
jmp
mov
add
lods
jge
sbbb
in
shl
lahf
sarl
and
jp
shrb
add
imul
xchg
movsl
jp
scas
adc
cmp
dec
daa
push
cs
testb
jbe
push
roll
push
cmp
lahf
insl
or
fstpl
insl
stos
fnclex
out
cmp
adc
dec
in
bound
xchg
test
pusha
nop
test
lcall
xchg
dec
inc
pop
aas
js
or
fwait
lahf
outsl
jl
push
out
adc
and
out
insb
fxch
orl
jmp
jmp
cmp
xchg
push
mov
movhps
xchg
test
mov
cmp
jle
sti
xchg
repz
gs
ds
and
mov
shl
jmp
pop
dec
addr16
cwtl
push
cmpsb
clc
aas
lret
adc
sub
xor
xchg
out
mov
dec
lock
loop
fdivrl
cmp
stc
mov
cld
mov
sub
push
rolb
movsb
jl
dec
add
jle
cmp
iret
xor
inc
fsubrp
mov
lock
sahf
fdivl
and
add
sub
xor
dec
repz
adcl
sbb
movsb
pop
and
test
pop
bound
jp
mov
je
movl
aaa
dec
mov
xor
jns
push
adc
dec
jne
incl
inc
xor
inc
test
jl
adc
das
mov
mov
fmull
fdivr
jle,pn
mov
out
enter
jnp
mov
aam
mov
lret
pop
push
push
cmp
and
cmc
xor
stc
sub
mulb
daa
mov
sbb
insb
jne
call
xchg
out
pop
icebp
jmp
in
adc
pop
iret
out
imul
leave
dec
mov
add
jo
lret
mov
sbb
cmpsl
daa
cmp
insb
xchg
cwtl
jns
push
test
or
pop
xchg
in
loopne
pop
inc
loopne
nop
scas
inc
jp
out
insb
ss
push
scas
sbb
or
or
repz
pop
xor
cmp
cltd
mov
stos
jnp
jl
pcmpgtw
int3
aaa
adcl
xchg
push
ret
adc
dec
pusha
mov
out
addb
outsl
out
int3
cmp
mov
lret
pop
cwtl
roll
inc
sbb
mov
scas
xchg
jmp
jmp
jno
dec
jg
ret
push
insb
dec
mov
ret
movsb
fldenv
aam
out
loope
mov
pop
aaa
sbbb
dec
ret
adc
jne
mov
incb
pop
xchg
out
cmpb
and
lock
xor
or
lret
shlb
push
dec
add
cmp
fadd
push
aas
mov
shrl
enter
jns
out
loop
orb
mov
adc
mov
js
pusha
out
int3
lds
out
pop
mull
int3
repnz
sub
loope
ret
or
addr16
mov
jl
in
mov
sbbl
in
lret
and
and
cmp
js
or
cs
xorl
cmpl
ja
sahf
into
iret
pushf
jl
dec
inc
push
xorl
sbb
mov
popa
mov
adc
lahf
add
and
mov
sbb
cld
out
lret
or
inc
mov
jo
cld
lods
cmp
popf
fcompl
mov
or
cs
sub
inc
pop
ds
mov
sub
repz
xchg
std
daa
movsl
dec
arpl
lea
outsl
addr16
lock
adc
push
fiadds
push
push
orb
cmc
xlat
jg
jne
jp
inc
cld
mov
andl
push
in
shrb
mov
in
mov
cli
mov
cmp
inc
mov
les
mov
inc
cmpsl
xor
popl
movsb
pop
cs
cmpsb
jmp
inc
add
inc
sub
bound
inc
cld
add
ss
xchg
enter
popa
in
mov
pop
xor
rcll
sbb
mov
adc
or
pop
mov
lahf
aaa
xlat
mov
inc
idivl
mov
jne
repnz
lock
and
adc
dec
push
hlt
sbbl
xor
mov
push
ret
cli
mov
xchg
xor
loop
insl
dec
repz
in
mov
jae
stc
ss
and
out
pop
fldenv
jl
cmp
in
gs
adc
aad
lcall
call
loopne
int3
inc
mov
test
push
push
push
out
sbb
mov
and
push
jp
or
jnp
repz
cli
xor
fcomps
cmp
mov
push
imull
pop
push
dec
or
outsb
pop
repz
mov
lahf
lcall
cli
push
add
out
outsb
dec
test
jnp
add
mov
bound
sbb
jno
jae
inc
cltd
psubw
sbb
daa
fstpl
divps
xchg
repnz
mov
mov
xor
push
icebp
push
push
nop
out
sub
mov
ret
jb
out
insl
cmc
dec
dec
ret
arpl
push
shl
and
mov
mov
popa
test
mov
cmp
and
cmp
mov
sub
inc
dec
repz
stos
jo
cmpsl
mov
mov
mov
ljmp
scas
and
enter
dec
leave
pop
lret
xchg
popa
sub
pushf
sbb
sbbb
fmul
lods
jp
lret
fsubr
in
xchg
ret
xor
cs
mov
movsl
fisubl
test
jnp
scas
jns
pop
inc
cld
cmp
adc
in
sbb
not
mov
mov
adc
stos
xor
fsub
or
daa
pop
xor
pusha
out
shll
mov
mov
pop
mov
lods
aaa
jmp
ficoml
pop
es
enter
mov
in
fsubrl
aaa
shl
rorl
add
mov
cmp
shr
mov
push
mov
shll
cmp
mov
ja
ret
pop
pusha
mov
sub
in
mov
push
and
shrl
adc
xchg
mov
fdivrl
dec
repz
mov
idivl
neg
add
stos
sbb
jmp
rorl
adc
pusha
fldl
sub
sbb
dec
mov
out
cmc
xchg
pop
in
daa
fs
loopne
std
xchg
std
inc
or
lea
icebp
jo
mov
add
outsb
mov
loope
shl
or
and
mov
les
xchg
testb
aas
jo
mov
lods
xor
fnstsw
stc
nop
sbb
add
dec
sub
xor
cmp
sbb
xor
or
mov
jge
cmp
daa
sub
sbb
mov
push
jg
add
fldt
sbb
or
js
test
inc
or
cld
cmp
jbe
sbb
xchg
fbld
sbb
jecxz
ja
test
xchg
cmpl
push
sub
addr16
test
inc
popa
lcall
stc
cld
dec
cmp
xlat
lret
shlb
ficompl
dec
cmpsb
mov
dec
lret
lret
scas
xor
rcll
xchg
bound
loop
cmp
cmp
lock
sbb
outsb
inc
std
dec
push
sub
in
xchg
jnp
inc
cli
jbe
fwait
and
xor
pop
pop
mov
scas
adc
dec
xor
jl
ret
inc
mov
dec
enter
hlt
loope
add
xor
in
jne
je
mov
out
or
mov
lcall
loop
inc
pop
cmpsb
mov
hlt
mov
outsl
sub
xor
pusha
lds
and
jg
pop
into
jg
iret
fdivrs
dec
push
out
stos
loope
adc
cmp
push
cwtl
sub
pop
or
cs
adc
pop
xchg
stc
test
test
fbstp
pusha
pop
cmp
or
fwait
test
into
pop
out
lcall
movsl
adc
inc
add
and
jb
pusha
inc
out
pop
xchg
dec
enter
push
je
out
and
test
cmp
jp
sbb
cmp
scas
or
pop
pusha
das
outsl
xchg
mov
cmp
jns
and
lret
mov
push
sub
xchg
mov
cmp
popf
sub
sysexit
sbb
xchg
mov
aad
adc
push
jae
aaa
das
les
fwait
stc
adc
xlat
sub
sbbb
int3
aam
mov
std
xchg
xchg
aad
xchg
and
xchg
pop
adc
fisubrl
lret
xchg
xor
popf
or
xchg
xor
movsl
std
inc
pop
sbb
fs
lds
jns
hlt
test
xor
rcll
and
loope
cs
jecxz
pop
test
pop
repnz
lods
out
cmp
adc
iret
out
adc
out
mov
pop
cmc
mov
pop
or
mov
rol
std
pop
inc
sub
pop
test
or
dec
push
test
rdmsr
loopne
cli
mov
xchg
add
cmp
int
xchg
and
mov
mov
xor
stos
ljmp
mulb
push
ret
add
shll
cli
or
or
hlt
andl
jnp
and
inc
and
fiaddl
aaa
ss
or
xor
inc
subl
fsubr
inc
loopne
lea
mov
fstpt
ja
dec
cmp
xchg
inc
sub
sbb
cmp
fiaddl
fdivs
inc
cli
adc
mov
out
mov
xor
add
test
rorl
stc
fwait
xorb
mov
mov
and
or
jge
repnz
stos
outsb
addr16
repz
mov
movsl
jecxz
mov
int3
sub
addl
cltd
arpl
xchg
xlat
dec
icebp
daa
adcl
xor
mov
pop
fcmovnb
in
inc
mov
jb
xchg
jg
xchg
push
adc
test
pop
aam
sti
cmpb
pop
and
sbb
fsubrs
fiadds
sub
fsts
lds
sub
add
push
dec
out
sbb
lea
add
mov
or
add
outsl
insl
add
xchg
and
loopne
stos
jne
pop
loopne
out
pop
mov
pop
pop
push
aaa
inc
out
and
xchg
inc
ljmp
test
popa
inc
ficoms
pop
mov
in
lods
inc
sub
jmp
adc
mov
mov
sbb
jl
aam
pop
inc
aaa
js
mov
popa
std
ds
lret
jne
stc
add
loop
cmp
push
xchg
arpl
scas
pop
mov
int
mov
insl
sbb
sub
aaa
xor
cld
test
push
gs
push
cmpsb
sbb
mov
aam
or
movsl
push
mov
ret
loop
mov
cltd
xor
leave
stc
and
daa
je
mov
movsl
add
movsl
adc
and
adc
loopne
dec
out
test
mov
xchg
xor
cltd
pop
pop
xor
pop
fadd
cld
push
ljmp
cmp
sub
push
lahf
mov
add
jno
lock
cld
sahf
dec
lret
aad
xchg
fscale
and
dec
xlat
inc
cmp
mov
ljmp
or
xchg
mov
cltd
hlt
addr16
outsl
or
icebp
cmp
imul
mov
jbe
ja
std
scas
mov
mov
pushf
jl
fistl
mov
addb
mov
push
pop
push
hlt
xchg
int
push
sbb
sub
cmp
push
jns
fs
add
cwtl
addr16
cmp
push
pop
pusha
or
insb
cmp
neg
xor
ret
rcl
push
dec
xor
inc
mov
mov
rolb
cmp
push
repz
sbb
xor
mov
pop
outsl
test
rorb
insl
xor
jge
pop
shl
mov
cmp
jl
aaa
pop
jb
mov
lcall
or
test
dec
mov
fmull
rorb
stos
sti
cmp
sti
arpl
mov
pop
jbe
jge
daa
lea
dec
popa
pop
mov
out
es
push
mov
test
lcall
addr16
ret
sti
enter
push
fidivl
repz
sahf
fstpl
sbb
ficoml
addb
mov
fldt
test
push
repz
sub
mov
cmp
mov
test
cmpsb
dec
cwtl
sub
jo
cmp
pop
pop
cmp
push
mov
xchg
cmp
mov
inc
xchg
mov
pop
xchg
test
pushf
xchg
add
cmc
mov
pop
fwait
add
inc
imul
jge
mov
daa
sbb
and
or
push
adc
mov
ret
pop
push
inc
scas
xor
cmp
int3
je
cmp
sbb
jecxz
clc
dec
mov
out
xchg
dec
push
jns
sub
mov
rcll
xchg
mov
hlt
shlb
insl
andb
mov
test
cs
je
iret
dec
imul
mov
in
add
ret
iret
lret
inc
mov
jo
xlat
js
popa
mov
sete
gs
in
push
je
scas
shll
vpackuswb
pop
int3
cmp
cmp
fdivl
push
pop
or
mov
xchg
gs
inc
xchg
aaa
dec
jnp
test
ret
jne
inc
push
cwtl
test
dec
dec
gs
clc
bound
pop
loop
std
andb
add
out
pop
cmp
mov
mov
and
pop
or
mov
in
aaa
push
std
insl
in
mov
xchg
dec
mov
jmp
push
lahf
adc
popa
adcb
jo
ret
and
mov
and
xor
mov
sbb
mov
lahf
addr16
fwait
push
or
fidivrl
or
sub
cltd
add
add
push
mov
popa
dec
ja
std
loop
pop
in
outsl
or
mov
lods
jae
mov
js
ret
mov
mulb
lret
adc
jmp
mov
or
leave
cmpsb
idivl
xchg
fistpll
shlb
and
xor
jp
jae
clc
lret
outsl
xor
adc
or
and
lock
cmpl
repz
mov
out
mov
negb
js
or
jl
add
cs
daa
jg
add
pop
and
aaa
fsts
test
pop
stos
jp
add
jg
xlat
cmpsb
mov
or
mov
inc
pop
ror
xchg
insl
mov
xchg
arpl
or
in
cmpl
lods
pop
inc
pop
sbb
shll
ret
sti
lret
dec
int3
adc
adc
test
pop
mov
pop
add
ret
ljmp
push
pushf
rclb
jno
es
in
and
pop
inc
and
loop
das
movsl
lock
stc
xchg
adcb
pop
std
fisubl
popf
push
call
subb
lods
dec
repz
pusha
stos
stos
cmp
xchg
cmp
mov
or
mov
popa
xor
std
mov
add
mov
jmp
sti
xchg
push
push
or
add
stos
xor
in
insb
jmp
or
jae
or
lock
pop
sbb
push
xor
push
outsl
jb
xchg
ljmp
adc
mov
pusha
adc
push
xor
sbb
cmp
das
outsl
stc
jle
sbb
rclb
je
push
inc
pop
shll
inc
orl
rol
sub
jecxz
std
test
mov
mov
jp
push
mov
repz
je
push
pop
and
jle
mov
push
and
dec
and
ljmp
test
lods
insb
or
inc
and
mov
out
push
xchg
outsl
mov
add
inc
sub
sub
aaa
mov
pop
je
cmpsb
inc
push
mov
test
insl
xchg
jne
fwait
mov
icebp
sahf
dec
cwtl
or
das
test
push
push
mov
sub
xor
cmpsl
fisubl
inc
mov
loope
xchg
aam
rclb
jp
lods
adcl
add
es
es
mov
xchg
mov
mov
or
lcall
and
test
sub
mov
or
cmp
mov
jp
out
inc
arpl
stos
xchg
xor
cli
mov
adc
insb
ficomps
mov
mov
sarl
add
cmpb
repnz
btr
orl
outsl
xchg
and
int3
dec
adc
and
xorb
jns
fstpt
xchg
pop
rcr
cld
je
ljmp
pushf
xor
in
mov
push
iret
pop
push
addr16
adc
andl
or
xchg
push
lods
adc
je
repz
jo
mov
and
lods
stc
dec
decb
mov
shll
mov
fidivrs
jns
xor
shl
push
shll
pushf
mov
bound
mov
pop
fdivs
pop
push
xchg
and
pmullw
cmp
and
cwtl
lahf
int
xchg
es
mov
pop
cld
adc
push
fsubrs
cwtl
pop
aaa
push
call
adcb
scas
xbegin
lret
mov
arpl
sarl
repnz
divl
mov
xchg
repz
mov
cli
fwait
je
xchg
and
lea
imul
test
dec
and
arpl
sarl
decb
sub
pop
and
jle
mov
xchg
inc
xor
stos
notl
idiv
adc
jno
dec
pop
dec
pop
mov
jg
sbb
sub
dec
mov
aas
add
mov
dec
push
pusha
les
das
cli
enter
mov
and
adc
repnz
insl
xchg
fsts
inc
shlb
mov
sbb
out
repnz
cmp
test
dec
add
fistpll
xor
sbb
std
lea
rolb
add
jnp
insl
xor
or
mov
aas
xchg
lock
fisttps
xor
fnstenv
in
test
sti
xadd
addr16
or
movsb
out
aam
sub
jle
imul
jae
jecxz
rorb
xor
ljmp
frstpm(287
inc
mov
mov
out
xrelease
ljmp
adc
dec
dec
ljmp
pusha
push
xchg
pop
sbb
popf
add
ljmp
or
jbe
fisttpl
mov
ds
adc
push
test
mov
sbb
inc
rcr
jns
data16
push
xchg
iret
lds
in
sub
lahf
adc
mov
sub
or
sti
fnsave
or
fnstcw
jbe
jb
fmull
pop
test
pop
jl
mov
mov
jmp
movsl
mov
push
ds
xchg
push
jb
and
aas
pusha
daa
or
inc
jbe
mov
add
shrl
push
inc
mov
out
cwtl
xchg
xor
loop
adc
inc
arpl
cmp
inc
mov
mov
pop
dec
dec
push
xchg
insb
stos
cmp
cmp
fs
out
jne
sbb
test
inc
mov
test
ret
cmp
xchg
dec
out
or
mov
nop
xchg
out
add
test
push
push
jns
cmp
mov
mov
push
out
pop
xchg
loope
xchg
lcall
test
xor
jne
mov
inc
out
jo
pop
mov
fucomi
ret
jbe
and
adc
jle
push
sub
pop
mov
imulb
mov
lea
jle
pop
sbb
hlt
and
fstl
pusha
and
xchg
popf
aaa
push
mov
xor
mov
jmp
mov
push
aad
aam
out
mov
jmp
pop
xor
pop
js
lods
outsl
add
jnp
jge
in
lcall
nop
inc
test
push
pop
imul
leave
cmp
insb
clc
pop
repz
or
loopne
test
add
cmp
xchg
testl
push
sbb
out
push
sub
or
sarl
mov
and
jo
hlt
mov
insl
movsb
mov
sbb
mov
jp
fisubrs
repnz
xchg
outsl
cmp
mulb
ja
push
pop
pop
mov
and
int
jne
sbb
dec
or
aad
lods
inc
loopne
mov
test
inc
rcl
scas
xchg
and
pop
cli
pop
sub
adc
lahf
jne
ss
insl
cmp
lahf
jmp
cltd
push
scas
jl
sub
push
out
pop
mov
loop
nop
and
or
stos
cwtl
test
int
adc
sbbl
int3
stos
mov
repnz
mov
xor
xor
decb
into
sbb
sbb
inc
xchg
mov
pop
sbbb
test
xor
xor
outsb
adc
dec
fidivs
jmp
insl
popa
xchg
jnp
sub
xor
outsl
xor
hlt
cmpsl
aas
mov
mov
add
sar
and
outsb
arpl
and
lret
je
sbb
sub
xchg
sbb
sahf
int
or
jp
imull
inc
mov
iret
in
loopne
push
and
mov
incb
xor
sbb
je
fisubrs
mov
and
and
dec
popa
pop
adc
fldt
loop
sub
rclb
xchg
xchg
insl
mov
in
pop
cmp
jp
popa
bound
scas
mov
jmp
cwtl
xor
cmpsb
mov
aas
cmpsb
ficompl
mov
add
add
sbb
xor
das
pop
add
int
popf
cmpsb
je
movsb
sub
cltd
test
mov
push
loop
jns
test
imul
jl
lea
xor
rcl
xchg
loope
into
inc
xchg
mov
mov
xlat
aad
mov
cwtl
mov
push
sbb
inc
sbb
lea
cmp
clc
inc
sub
lods
mov
or
std
add
mov
pop
ds
mov
xlat
out
int
out
jne
cmp
lret
jbe
xor
jno
xor
xchg
mov
imul
and
icebp
iret
aaa
and
jnp
fimuls
and
sbb
cmp
mov
std
int
push
test
push
dec
adc
into
mov
out
jmp
jbe
pop
xchg
lods
pop
ja
xor
sti
inc
leave
mov
test
testl
test
mov
add
adc
and
jns
pop
loop
dec
in
jp
sbb
popf
mov
outsb
movsb
mov
aad
dec
mov
cmp
xchg
dec
mov
pop
xchg
jl,pn
lret
addb
int
sub
sbbl
cltd
nop
jbe
inc
and
fs
inc
jns
fstps
int
xchg
inc
hlt
sub
add
cmp
cmpsb
test
mov
sbb
aaa
fs
fbld
fwait
test
lahf
pusha
sarl
mov
sbb
ss
mov
in
pop
ret
in
fsubl
mov
repz
loop
filds
push
sahf
popa
lods
sbb
das
xor
jbe
mov
xchg
ljmp
jle
imul
xchg
setnp
jecxz
rol
or
jo
in
xchg
stc
lods
mov
mov
movsb
dec
jecxz
xorb
cmpsl
push
iret
cmp
mov
push
xchg
dec
mov
push
push
inc
cmc
cmp
xchg
xchg
adc
scas
shl
jno
push
cltd
lret
or
inc
sbb
lahf
mov
into
cmp
jb
je
pop
stos
bound
in
insb
or
jo
mov
adcl
sbb
sub
sbb
das
cld
mov
jnp
sub
ret
xchg
mov
and
inc
addl
int3
adc
jle
ret
push
cld
sbbl
jmp
mov
call
cmp
cmpsl
cli
dec
push
imul
and
clc
pushf
push
nop
cmpsl
mov
shll
jae
imul
icebp
ds
mov
sti
adc
jmp
aad
int
aas
sbb
push
mov
popa
mov
rolb
loop
jg
xor
adc
in
in
xor
das
add
pop
add
push
add
hlt
aas
adc
sbb
arpl
andb
mov
push
or
insb
push
jae
aad
out
mov
pop
mov
xchg
daa
xor
call
jecxz
dec
icebp
lods
gs
mov
push
call
gs
jne
loope
out
xchg
jmp
push
sub
and
stc
hlt
outsl
mov
push
lods
mov
sbb
lods
mov
fimull
xchg
and
in
out
ljmp
sub
test
pop
int3
ret
mov
sub
pop
push
out
xchg
pop
or
shll
in
inc
insl
push
push
sti
cmp
sahf
mov
inc
arpl
cmp
arpl
mov
push
insb
into
mov
push
lock
push
mov
dec
test
call
sub
and
mov
movsl
imul
cmp
cmp
cmp
add
sbbb
scas
cli
cmp
jl
scas
sar
pop
jbe
in
gs
or
int3
icebp
cmp
ret
das
push
fldcw
pop
shlb
out
dec
add
jae
hlt
pusha
push
popa
inc
inc
mov
xor
mov
insl
data16
ljmp
fidivrs
test
sub
pop
push
popa
loopne
neg
adc
out
shrl
cltd
pop
jmp
adc
mov
lods
sbb
daa
adc
bound
or
fstpl
sti
das
xchg
fiaddl
mov
pop
dec
dec
mov
scas
stc
sub
repz
and
mov
int3
imul
jle
mov
xchg
loopne
sub
mov
xchg
push
sbb
xchg
decl
mov
or
mov
call
sbb
es
in
lea
ljmp
or
and
pop
add
stos
mov
outsl
in
push
fistps
std
jo
jge
test
outsl
cmp
xor
pushf
imul
cli
lcall
je
cmpsl
loop
jge
push
cmc
push
jp
mov
pop
repnz
xchg
lods
xchg
call
xor
mov
inc
sahf
jmp
fdivs
loope
dec
adc
cmp
aas
pop
repnz
stos
fldl2e
xor
push
adc
and
push
mov
inc
xchg
das
xor
mov
sbb
sahf
lahf
xor
std
aaa
rcr
and
pop
xor
pop
mov
push
sub
push
jl
and
mov
mov
aam
imull
std
dec
push
addr16
push
rol
pushf
dec
imul
movsb
testl
xchg
das
mov
pop
es
and
mov
sbb
imul
mov
cmp
faddl
dec
xor
lds
and
push
popf
inc
xchg
jecxz
arpl
fdivrl
lcall
dec
mov
push
sbb
divl
jge
jno
shrb
pop
sbb
iret
add
addr16
pop
pop
lcall
imul
xor
frstor
nop
mov
lea
sbb
fcomip
aaa
mov
push
out
das
cli
sbbb
add
out
out
repnz
loop
and
lea
adcb
cltd
in
xchg
test
mov
xchg
daa
bnd
dec
lods
into
outsl
ficoms
mov
ret
fcmovbe
mov
adc
push
and
mov
hlt
mov
in
sub
mov
mov
notb
cltd
cmpsl
adc
jg
pop
dec
loope
or
iret
adc
and
btr
pop
imul
add
rcrb
push
push
mov
xchg
enter
push
push
gs
mov
mov
loopne
inc
jnp
jbe
xor
sbb
jne
mov
cmc
lret
mov
or
hlt
je
mov
jns
inc
jmp
mov
lock
pop
adc
and
inc
test
fisubl
imul
call
mov
dec
and
scas
adc
je
inc
xorl
add
jmp
adc
push
xchg
pop
xchg
stc
clc
dec
fiadds
cmp
or
dec
jmp
loop
lods
dec
data16
outsb
mov
sub
seta
cwtl
inc
adc
shlb
insb
pushl
inc
es
aam
loope
out
push
stos
add
and
inc
push
pop
push
pop
xchg
jns
loop
in
mov
adc
repnz
jecxz
pop
nop
inc
shr
ret
add
in
mov
stos
or
add
loop
jb
sbb
sti
adc
aas
addl
adcl
adc
dec
les
and
xlat
lods
popa
shll
dec
dec
movsb
add
call
daa
pop
pop
cltd
rolb
cmp
cmp
mov
sbbb
inc
or
xlat
shll
scas
aam
dec
cmp
mov
stc
dec
rclb
dec
in
inc
mov
push
pop
out
and
mov
scas
jmp
mov
loop
mov
sub
mov
fldenv
jbe
lea
sub
and
repz
or
dec
xorb
adc
jne
popf
pop
stos
mov
push
sbb
sub
xor
in
pop
lcall
push
jle
ret
ret
xchg
adc
xchg
repnz
add
les
adc
into
mov
lret
rolb
sub
mov
push
dec
popf
jle
inc
test
xor
jbe
lcall
xchg
add
enter
inc
fwait
mov
cmpsb
add
jne
movsl
cwtl
ds
stos
xor
add
sbb
sbb
rolb
pop
stos
rcrb
sub
sub
hlt
push
js
push
mov
and
outsl
xchg
pop
sbb
popa
lret
outsb
push
xor
aad
daa
dec
ljmp
xchg
stos
and
mov
push
and
mov
mov
fcompl
daa
jl
test
mov
rol
cli
lock
adc
sub
inc
int
mov
es
pop
fcmovne
mov
inc
aas
sti
pop
xor
dec
adc
in
xor
ret
mov
popa
negb
incl
outsb
je
ficoms
jmp
mov
cld
int3
in
mov
pop
cmp
and
xor
push
mov
cmpsl
in
xchg
stc
sub
push
jecxz
pushf
mov
inc
jp
dec
aam
push
xchg
repnz
or
inc
sbb
mov
enter
enter
xchg
lods
andl
js
scas
sbb
mov
stc
ds
pushf
loop
or
mov
or
xchg
add
out
daa
fdivs
mov
mov
inc
mov
add
sbbl
insl
sub
or
sbb
pop
pusha
stos
fcoms
or
and
and
ja
popf
into
fucomp
push
push
xorl
out
fbstp
mov
lret
loopne
sbb
leave
mov
and
repnz
cs
add
ja
cmp
mov
push
jno,pt
test
sub
mov
outsb
fstpl
add
inc
adc
lods
pop
pop
iret
rolb
js
lods
imul
pop
lds
add
pop
aas
arpl
out
xchg
imul
sbb
xor
cmp
data16
dec
lcall
imul
jb
addr16
cli
or
in
subb
adc
fadd
and
push
pop
push
hlt
data16
jg
outsb
daa
push
ja
push
jle
inc
fisttps
icebp
lods
jae
cmp
int
es
jg
sbb
out
mov
subb
inc
mov
sub
cmc
mov
dec
add
das
test
inc
clc
mov
push
sbb
test
sbb
mov
mov
dec
push
push
mov
lock
in
cmc
xchg
je
sbb
hlt
add
daa
and
cmp
cmpsl
lods
scas
jg
and
fdivs
inc
out
in
fmulp
imul
in
and
jns
push
sub
in
arpl
cld
in
out
insb
enter
or
xor
pop
bound
mov
jnp
sarl
loope
cmp
mov
add
std
std
sub
push
js
out
rcrb
hlt
or
add
aas
neg
and
out
push
push
das
adc
rclb
xchg
lcall
adc
loop
inc
gs
xlat
mov
or
xchg
cmpsl
stos
in
ja
mov
jo
lods
jbe
jge
movsb
pop
dec
dec
fucomi
aaa
pop
inc
imul
sbbb
fwait
lret
push
test
or
cli
jae
inc
lods
std
test
xchg
roll
in
mov
inc
cmp
in
mov
jae
push
int3
push
in
xchg
push
sbb
jnp
xor
inc
mov
mov
in
sub
inc
fsub
es
jne
les
rcrl
lods
test
insb
lahf
mov
arpl
or
test
rorb
popf
into
pop
push
jne
push
mov
fwait
push
fdivrs
mov
stos
dec
cmp
sub
call
repnz
add
dec
mov
jmp
jp
testb
les
jnp
rcrb
fisttps
xchg
xchg
mov
hlt
cltd
insl
shl
imul
divl
imul
fs
mov
cmp
cmc
dec
in
xchg
inc
pop
sbb
push
bound
loopne
xor
cmp
repz
loope
mov
sbb
das
xchg
inc
shrl
xchg
fsubrl
sbb
jno
es
inc
das
loop
rcl
cmp
imul
es
push
and
fsubl
in
mov
rorb
lds
sub
dec
inc
cmpsb
lods
jle
inc
aad
insb
pop
cld
scas
lds
dec
mov
fwait
push
lds
leave
dec
xlat
test
adc
leave
cmpsl
jp
enter
adc
outsb
lds
and
adc
mov
xchg
faddp
jmp
stos
inc
loope
es
jmp
cmc
outsl
roll
dec
shl
mov
sub
push
push
cmp
out
add
or
or
jl
daa
mov
fs
aam
sbb
imul
fwait
push
movsb
arpl
cli
aas
daa
shrl
popa
xchg
adc
xchg
repnz
sub
dec
loope
test
dec
xchg
inc
and
sbb
stos
dec
sub
xor
jp
mov
and
rolb
and
and
icebp
sbb
out
xlat
mov
push
jo
sahf
lods
popa
aaa
xchg
inc
pop
adc
xchg
dec
push
stc
movsb
std
test
xchg
out
repnz
lds
jns
jg
hlt
lods
or
aaa
adc
ret
sbbb
pop
or
pop
popa
add
nop
pop
push
cmp
ret
sbb
lahf
lods
mov
test
sub
xchg
loope
xchg
int3
mov
and
and
lods
xchg
mov
push
pop
push
xchg
fwait
jns
xorb
add
cmp
leave
pop
inc
pop
add
or
pushf
jle
xchg
aam
cwtl
lea
mov
jbe
in
clc
mov
lahf
inc
ja
mov
cmp
jg
sub
mov
fists
xchg
xchg
daa
das
enter
lds
jae
loop
lcall
ss
mov
adc
lret
cmp
pop
rcrb
mov
outsb
jmp
pop
stos
jle
mov
push
dec
push
add
hlt
sti
loope
pop
mov
rorb
nop
sbb
mov
mov
imul
add
cld
sub
sbb
cmpsb
and
cltd
or
in
dec
mov
filds
or
mov
jae
pop
cmp
in
cmp
fcoml
add
sbb
aaa
int3
and
xchg
ss
cltd
inc
je
sbb
xchg
insl
adc
sub
add
xor
cmp
pop
popf
jge
mov
sub
push
fwait
cs
inc
clc
mov
aad
aaa
cmpsb
cmp
test
and
rcll
jae
cwtl
icebp
xlat
filds
dec
pop
inc
cmp
iret
cmp
mov
or
adc
andb
xchg
pop
and
cmp
fnstcw
adc
and
inc
sbb
lahf
ljmp
pop
jmp
add
test
and
mov
push
out
and
mov
fs
jno
inc
inc
dec
enter
ljmp
mov
mov
xlat
inc
cmpsb
dec
inc
rdpmc
lret
stc
lcall
dec
flds
stos
inc
or
or
pavgb
mov
xchg
jecxz
mov
shlb
movsb
sbb
inc
xlat
sub
dec
push
cmp
add
pop
mov
hlt
and
fsts
lods
insb
xchg
inc
pop
fstl
adc
enter
cmp
fisubl
cs
mov
into
jg
test
ja
sub
fs
fmull
stc
xor
push
fsubp
dec
or
inc
xchg
adc
std
aam
sbb
movsb
aaa
js
jg
lods
stos
xlat
aas
in
pop
adc
aad
cmp
ret
sub
fdivs
je
ret
or
inc
fcomip
and
dec
pop
aad
out
and
das
cmpsb
rorb
push
scas
mov
inc
xlat
cmp
js
dec
call
sbb
outsl
movsl
sub
or
fisttpl
leave
jmp
push
push
xchg
push
addb
scas
aaa
fistps
and
int
jg
add
fnstsw
in
mov
es
jnp
sti
mov
xor
xchg
cli
and
les
push
int3
sbb
leave
mov
jge
arpl
inc
dec
mov
fisubrl
push
pushf
inc
sbb
shrb
and
call
repz
mov
imul
xlat
mov
popf
sbb
das
jmp
jp
rcr
xchg
jb
mov
cmp
add
jg
jns
pusha
das
mov
fsubrl
push
mov
rolb
fsubs
add
fldl
mov
fwait
mov
jbe
ret
add
jno
out
jle
sbb
mov
sub
sbb
cmpsb
xlat
xlat
in
pop
imul
sub
icebp
inc
out
dec
dec
fwait
mov
jge
sbb
push
popf
jb
adc
xchg
sub
mov
jb
cld
lret
movsl
mov
mov
mov
stc
jecxz
push
int
repnz
dec
iret
divl
std
mov
ds
std
lret
stos
mov
outsl
cmp
scas
pop
scas
push
add
notb
or
mov
repz
pop
insb
cmp
xor
inc
xor
ja
loope
mov
leave
ret
lret
aad
stos
imul
mov
pop
and
ret
sub
stc
add
push
jae
inc
mov
dec
mov
out
cmp
popf
add
mov
sub
int3
add
push
dec
jl
or
jge
mov
push
loop
pop
lea
fs
nop
aas
sti
rcll
aaa
daa
sarl
aam
jno
insb
lock
fistl
iret
dec
xchg
sub
ret
clc
lahf
cltd
pusha
insb
mov
lea
mov
stos
pop
sti
sub
adc
das
lret
pop
aaa
sub
xor
outsl
jmp
test
mov
push
daa
out
lret
jl
mov
ret
push
fwait
cwtl
cmp
movsl
jne
inc
mov
lcall
dec
push
fldt
sub
cld
or
jo
stos
adc
out
push
in
xor
mov
mov
or
inc
jns
mov
insl
pop
jmp
adcb
scas
rcr
cmp
jl
insb
sub
sub
dec
arpl
pop
enter
fisubrl
fwait
or
dec
mov
out
ret
mov
xor
das
mov
sbb
test
jge
mov
add
jo
mov
cwtl
mov
jne
pop
dec
lea
pushf
icebp
pop
and
lods
cmpsl
fucomp
aad
sbb
or
nop
hlt
call
sub
ljmp
cmc
add
repz
subl
fistpl
lods
and
push
add
nop
jnp
loopne
in
sahf
mov
cwtl
adc
pop
pop
das
cmp
sbb
or
xchg
mov
mov
out
les
mov
loopne
sahf
in
paddusw
imul
jp
test
notl
adc
mov
test
pusha
xor
test
dec
sub
jns
test
and
jns
push
push
sti
xor
mov
int3
push
fucomip
loope
cltd
ds
das
out
dec
sbb
mov
pop
leave
push
inc
bound
push
dec
push
aad
or
call
mov
dec
int
inc
push
out
outsb
or
mov
mov
adc
pop
loop
lret
adc
pop
jbe
mov
adc
push
mov
mov
add
es
inc
shlb
xor
sbb
fnstenv
ret
pop
inc
mov
shrb
mov
inc
cwtl
add
xchg
dec
dec
adc
mov
add
sub
shrl
loopne
sbb
add
lret
lea
arpl
es
fimuls
fs
adcl
idiv
imul
fiadds
or
loopne
mov
xor
pop
in
pop
mov
mov
jge,pt
rorb
orb
fdivrs
jae
jb
pushl
and
loop
pop
or
incb
pop
popa
pop
sbb
in
in
in
mov
call
cmc
int
and
jne
rcr
std
add
or
mov
add
inc
or
push
in
sub
jp
std
and
loopne
jo
int
jo
mov
in
cmp
push
cmp
sbb
xchg
push
fadd
mov
scas
pop
aam
hlt
movsb
arpl
aas
int
cltd
sbb
xor
xor
adc
xchg
hlt
pop
cmpsl
sbb
dec
lds
stos
mov
cmpsl
pop
inc
out
fldcw
mov
push
cwtl
and
pop
ret
sub
xchg
addl
xchg
push
jne
adc
pop
call
imul
daa
and
jl
xlat
mov
jmp
mov
std
pop
stc
inc
xchg
dec
mov
jp
mov
or
fadds
aaa
mov
leave
mov
sub
mov
fidivrs
or
fbstp
insl
push
and
lcall
fcomip
and
lahf
enter
gs
imul
idiv
aaa
adc
pop
jo
fwait
push
or
mov
imul
cli
inc
sbb
leave
mov
sub
jle
mov
jb
repz
nop
andb
mov
xor
mov
jl
pusha
dec
dec
mov
xor
or
cmpsl
orb
cmp
jle
cli
bound
mov
jle
in
js
sub
jbe
aaa
aad
sahf
loopne
push
fdivr
rorb
xchg
loope
dec
inc
jge
jmp
sbb
or
hlt
dec
lcall
popa
icebp
cli
push
aaa
inc
sub
fcmovu
mov
add
je
mov
mov
popa
xor
ret
testb
xchg
jne
ss
fstpl
add
popf
aad
push
jnp
jo
sahf
jb
add
mov
mov
cmp
adc
repz
daa
loop
popa
in
fistps
movb
adc
add
mov
sub
je
and
shll
or
pusha
fwait
int3
push
xor
inc
int3
mov
adc
in
mov
lret
jo
lret
fsubrp
stos
movsl
mov
loopne
shll
ljmp
lock
sbb
pop
xchg
sub
stos
jmp
je
rorb
jb
xchg
fwait
insl
push
jp
icebp
pop
gs
imul
cs
inc
test
or
sbb
inc
lods
iret
and
cs
lea
mov
jae
cmc
bound
add
pop
xchg
jecxz
add
xor
push
hlt
ja
notl
mov
jne
jg
pop
out
jle
and
insl
sub
out
add
or
jb
fisubs
arpl
call
fildll
inc
sbb
cltd
mov
call
add
ljmp
lahf
mov
push
lret
loope
or
out
pop
lea
mov
fnsave
mov
daa
fldenv
mov
inc
lods
or
cmp
and
xchg
das
je
mov
nop
push
mov
lahf
enter
jbe
insb
mov
outsl
mov
cmp
leave
loopne
dec
rorl
mov
adc
pop
lods
mov
mov
aas
test
xchg
add
mov
iret
xchg
push
mov
jmp
ret
movsl
outsb
fnstsw
add
xchg
in
iret
jo
repnz
movsl
jmp
add
lea
pop
sub
jg
test
aaa
cltd
sub
and
cwtl
test
push
xlat
mov
repnz
fdivl
sbb
push
mov
mov
mov
loop
push
repz
scas
loope
dec
or
push
add
adc
push
icebp
imul
mov
xor
xchg
sarl
adc
scas
lock
ficoms
lods
mov
leave
or
mov
ret
cmp
out
mov
lcall
add
lcall
fbstp
mov
pop
add
insl
and
add
cmp
jecxz
ficompl
push
call
cwtl
stc
xor
loope
push
and
cmp
out
and
sub
and
mov
adc
lea
icebp
data16
push
les
inc
into
out
imull
cmc
push
dec
cmc
test
or
aaa
ja
dec
cltd
pop
adc
jno
mov
fisubrs
cmp
loope
jge
ret
push
push
out
adc
jg
mov
loop
sub
sub
pop
xchg
stos
pop
leave
inc
mov
aam
add
cmpsl
and
es
ja
inc
or
int
fstps
add
mov
vpshufhw
xorl
aam
js
test
xor
leave
sub
or
sbb
sub
dec
aam
mov
sbb
pop
inc
or
in
std
push
insl
rcrl
test
add
push
test
mov
push
cmpsb
and
and
pop
repz
xor
mov
fildl
rolb
mov
cmp
sub
arpl
mov
inc
add
jge
cmp
pavgw
ljmp
add
adc
loop
sub
xor
mov
lods
lods
fiaddl
int
xchg
enter
push
mov
arpl
in
rclb
icebp
lret
rorl
lret
add
cs
inc
fdivrs
xlat
pop
jmp
fistl
dec
notw
xlat
push
adc
sarl
mov
cmpsb
jecxz
int3
inc
jp
mov
popf
xchg
xchg
ljmp
test
sti
jecxz
adc
sbb
aaa
add
xor
sub
xchg
inc
push
loopne
and
in
and
mov
lret
rol
js
cmp
push
mov
sub
outsb
adc
dec
fistpll
adc
rcll
dec
faddl
mov
push
loopne
ja
jbe
jno
xchg
stos
daa
loop
test
adc
push
or
and
push
mov
push
leave
test
fxtract
or
repz
aaa
rcrb
sbb
imul
fucomp
mov
repz
jmp
lock
lret
icebp
movl
mov
mov
jns
lods
mov
fs
jle
adc
mov
and
lret
imul
aaa
aas
xchg
shrl
mov
sub
scas
sbb
mov
cmpsb
inc
dec
cwtl
cmpsb
mov
test
push
pop
cltd
cwtl
stos
pop
shlb
lahf
rcll
mov
xor
mov
loope
or
xchg
push
cmp
daa
and
sti
or
cmp
test
lret
std
or
out
push
cmp
or
outsb
dec
fs
sbb
fsts
mov
dec
arpl
sub
gs
pushf
mov
mov
pop
testl
into
popa
mov
jnp
in
rolb
clc
pop
lahf
push
leave
inc
push
cmp
enter
jecxz
xchg
in
adc
mov
sub
xchg
ds
push
imul
adc
jmp
sbb
lods
cli
das
stos
mov
cwtl
mov
in
push
or
dec
dec
and
push
and
mov
ret
mov
sub
bound
pushf
jbe
lret
dec
in
pop
adc
sbb
and
jg
xchg
xor
push
daa
das
mov
int
sub
cmp
pop
popa
push
popa
aam
pop
xorl
insl
pushf
adcl
lods
loopne
iret
adc
pusha
mov
shlb
xorl
fstpt
cltd
iret
out
dec
xor
mov
mov
adc
and
cmp
cmp
movsl
jg
mul
pusha
mov
sbb
ds
add
dec
mov
out
and
ret
testl
dec
mov
or
repnz
sub
fs
adc
lahf
add
push
out
lods
aam
add
insl
ja
js
and
mov
sti
mov
push
jb
out
loope
mov
jo
inc
mov
ret
jbe
insl
enter
cmp
cltd
int3
mov
mov
sub
xchg
jle
iret
fcmovne
pop
cmp
push
jp
clc
adc
pop
xchg
jae
out
push
cs
shll
pop
cmp
pop
mov
push
cmc
sub
lods
cmpsb
mov
je
fildll
test
ficoml
add
imul
pop
cmp
pop
cmp
jg
fdivs
movswl
cmc
pusha
mov
ret
dec
pop
sbb
ljmp
xchg
leave
ljmp
ja
ljmp
iret
push
inc
pop
int3
loopne
jmp
ss
sahf
notl
rorb
mov
mov
xor
mov
inc
out
or
xchg
fnsave
outsl
ret
cmc
sbb
sub
sub
mov
aaa
jb
mov
dec
mov
and
popf
ljmp
jno
pop
popf
into
xor
mov
sub
je
push
and
adc
inc
insl
sbb
iret
jp
adc
push
stc
cmp
and
sub
bndstx
subl
rorb
inc
lcall
iret
mov
fmull
pop
cwtl
mov
rol
or
push
outsl
adc
insb
fisubrl
jecxz
inc
sarb
xchg
jle
out
jcxz
bnd
push
aas
sub
rolb
in
cmp
pop
outsb
cld
in
mov
mov
rolb
in
lcall
enter
in
addps
sbb
leave
bound
insl
mov
popf
and
dec
push
mov
xchg
pop
xchg
ret
sub
pop
mov
cmpsb
lcall
pause
imul
ficoms
hlt
sub
loopne
scas
loopne
ret
iret
or
xchg
imul
testl
sbb
repz
shll
lsl
xor
bnd
ljmp
negb
cwtl
stc
push
jne
sahf
sbb
dec
dec
lock
mov
pusha
sbb
push
iret
imulb
scas
mov
inc
mov
push
add
dec
in
dec
dec
adcb
mov
ds
test
dec
gs
xchg
icebp
pop
int
sbb
cli
aam
cli
lods
lcall
dec
or
loopne
cmp
xchg
adc
adc
xchg
and
arpl
pop
mov
sahf
ljmp
jns
pop
mov
rolb
sbbl
andl
lahf
sti
pop
lock
mov
movsb
ret
adc
out
test
inc
js
ljmp
jmp
lods
cwtl
jle
jbe
sub
cmp
ret
cmp
repnz
shrb
out
test
xor
ret
add
arpl
xchg
insl
xlat
push
rcrl
fnstcw
stos
pop
dec
pop
and
cmpsl
out
into
jge
sbb
mov
out
lods
test
and
fstl
mov
outsl
mov
mov
xlat
mov
inc
aas
push
fidivl
arpl
xchg
push
aam
sub
std
mov
pop
push
jl
xlat
orb
pop
xchg
adc
push
fsts
fstpt
mov
imul
imul
jae
jmp
mov
adc
push
add
xchg
insl
dec
mov
add
loop
pop
pop
dec
jno
stos
daa
insl
lods
mov
sbb
dec
pushl
aaa
es
std
mov
or
xor
fdivrp
imul
cli
sub
scas
pop
lea
inc
xchg
jns
hlt
je
rorb
add
push
cmp
jmp
push
ljmp
repnz
adc
rorb
inc
dec
push
dec
cmp
cwtl
out
xchg
mov
jnp
cmp
movsl
das
mov
scas
xchg
cld
dec
insb
out
das
dec
out
jnp
push
lock
int
into
xchg
sahf
inc
lods
inc
jg
mov
sbb
sub
mov
mov
cltd
enter
and
xor
dec
mov
fwait
in
jge
inc
add
sub
and
aam
inc
imul
jp
int
and
fcoms
mov
shl
pop
and
arpl
outsb
mov
sub
std
mov
fistpll
cmpsb
mov
fisubrl
sbb
aad
enter
mov
push
and
push
jno
sbb
mov
neg
xchg
xorb
mov
into
sbb
push
sahf
push
push
mov
inc
sarl
push
jb
inc
fsts
mov
pop
pop
arpl
jl
pop
adc
inc
dec
inc
mov
mov
pop
push
arpl
add
xstore-rng
cmpsl
shl
push
iret
fs
xlat
add
add
jbe
data16
das
and
enter
fildll
or
sbb
jno
mov
movsl
add
leave
orps
rclb
cmp
test
roll
push
std
push
fdivrl
xchg
push
repz
fstpt
dec
leave
scas
sub
jbe
xlat
pop
inc
ljmp
jl
jg
aas
mov
iret
sti
pop
mov
ds
sbb
lret
pop
pusha
ja
out
sbb
mov
insl
xor
adc
xorb
sub
loop
es
push
mov
in
jecxz
xchg
lret
jl
ljmp
xchg
fwait
rcll
dec
insl
adc
out
jns
sub
mov
bound
paddb
mov
aad
pop
rol
mov
cmpsb
cmp
jo
add
mov
lcall
movsl
mull
mov
cltd
sbb
xor
xlat
xor
adc
xchg
aam
xor
dec
jge
ja
fadds
or
pop
fistpl
out
pop
int
and
test
sub
push
loopne
xor
xchg
adc
shlb
into
shrl
faddl
sbb
mov
adc
stc
in
imull
jp
mov
out
cmp
sti
leave
sti
sub
dec
int
add
or
and
int
clc
jmp
xchg
fildl
mov
pop
jnp
incl
aad
dec
into
lret
ss
subl
in
stos
mov
add
sahf
push
xor
repz
and
pop
lcall
jo
popf
int3
inc
into
mov
stos
jno
pusha
jmp
mov
cmp
cmp
mov
mov
sbb
push
xchg
inc
imul
arpl
test
imul
dec
push
dec
shrl
out
out
test
xor
das
xchg
cli
sbb
in
popa
sarl
jno
leave
aam
stos
test
popa
rol
xchg
call
push
dec
mov
mov
sbb
add
mov
in
inc
pop
push
nop
test
add
xchg
int
jb
inc
scas
iret
ss
sub
sahf
xchg
sahf
or
int3
inc
sub
mov
xlat
inc
aaa
sub
xlat
adc
lock
cmp
xchg
mov
adc
sub
bound
aad
push
fcmovnu
scas
or
xchg
pop
pop
and
clc
lahf
sub
adc
cmpb
scas
fwait
push
iret
repz
push
jb
cwtl
div
and
inc
mov
das
sub
add
add
pop
add
xor
ret
sbb
jns
jbe,pt
fmul
lods
scas
dec
loop
xor
or
sbb
pop
gs
jl
xchg
cmp
cmp
mov
out
mov
and
into
sti
jno
push
xchg
and
add
adc
pop
jne
in
push
ret
push
xchg
dec
jo
fisubrl
repz
movsl
inc
push
pop
push
mov
loopne
jne
cmc
shl
iret
cmp
sbb
mulb
sbb
stc
out
int
jb
jl
sbb
adc
jb,pt
stc
out
or
dec
and
xchg
out
aad
in
push
gs
movsb
scas
or
insb
fnstenv
scas
in
inc
cmp
and
movsb
dec
cmp
xchg
movsl
sbb
jl
xchg
test
jl
ljmp
sbb
mov
inc
xchg
lea
inc
sbb
call
idivb
inc
push
mov
les
mov
std
sahf
mov
scas
or
pop
inc
lds
pop
mov
mov
pop
pop
fiadds
cmpsb
dec
cli
jle
inc
push
in
mov
sub
cli
mov
xorl
in
mov
sub
or
pop
int3
pop
push
movsl
test
lods
jle
cmp
ret
test
mov
popf
orb
xor
loopne
xchg
shl
repnz
jb
lret
jae
or
pop
cltd
lcall
lahf
xchg
add
or
popf
lods
inc
sub
xchg
mov
pop
inc
lahf
mov
js
xchg
jno
jae,pn
movsb
pop
jmp
push
mov
sub
ss
jb
fwait
or
sub
outsb
nop
enter
jno
or
inc
enter
das
pop
pop
adc
adc
sarb
in
or
adc
cli
mov
dec
push
jns
jae
lea
shrb
loopne
cltd
push
cmp
inc
push
dec
xlat
xlat
mov
mov
and
fidivl
and
jmp
sarb
and
cmpsb
cli
jo
xchg
aaa
dec
mov
push
sar
xchg
mov
insl
cmp
aad
mov
outsb
int
fnsave
fldt
jb
lahf
enter
out
or
pop
inc
mov
cmp
and
cwtl
aas
sbb
add
shll
or
gs
cmp
mov
stos
icebp
testb
and
xchg
das
xchg
scas
imulb
mov
mov
push
in
and
jmp
adc
xchg
adc
inc
mov
loope
xorb
cmovg
add
repz
push
jge
push
fwait
js
insl
lods
adc
push
or
push
and
int3
adc
mov
mov
mov
fadds
dec
cmp
or
bound
fmuls
repz
xchg
sahf
xor
mov
testl
filds
xor
xorl
pop
stos
sub
sub
sub
stc
pusha
add
or
xchg
jb
fidivrl
data16
jns
cmpb
mov
dec
xchg
pop
aas
enter
sub
repnz
mov
daa
cmp
push
pop
das
rorl
push
inc
loopne
mov
leave
fcomp
mov
in
push
bound
pop
sub
fildll
sbb
or
ret
and
lods
out
dec
std
dec
leave
js
push
ljmp
arpl
aad
mov
mov
pop
out
or
push
and
ret
aad
dec
jge
mov
xor
dec
icebp
mov
rcr
lods
xchg
aaa
xor
sbb
jno
and
lods
sbb
aas
repnz
in
sbb
and
dec
mov
pop
sbb
and
das
pop
and
ret
mov
sub
jl
loopne
jl
or
and
mov
movsl
loopne
dec
cmp
repz
or
jmp
dec
aad
xchg
mov
lret
cmpl
out
addr16
push
cltd
shll
cmc
sbb
ss
fsubr
leave
push
sub
mov
inc
pop
mov
jne
mov
dec
mov
subb
mov
pop
jmp
and
add
mov
push
outsb
insb
mov
cwtl
jne
fildl
or
not
dec
dec
mov
inc
hlt
mov
or
fimuls
push
orb
js
lock
in
sbb
sarl
sub
push
xchg
psubsw
test
pusha
outsl
jbe
mov
push
push
or
cli
push
jecxz
icebp
add
sbb
adc
mov
out
cmpsl
xchg
jb
sbb
xor
gs
addr16
jo
ja
sti
or
jno
xchg
or
or
out
pop
mov
adcl
push
daa
sub
pop
flds
or
stos
lods
push
aas
sub
sub
or
sub
stos
jge
pop
mov
sub
stos
loop
dec
jbe
push
cli
ja
add
std
and
mov
mov
fucom
mov
clc
rol
xchg
sub
lds
cmpb
cmpsl
push
adc
xorl
jnp
dec
dec
ret
repz
fisubs
xor
mov
inc
mov
mov
push
scas
loop
int
cli
loopne
inc
push
mov
jl
jp
fdivrl
inc
mov
scas
pop
sub
xor
dec
fdivp
push
jne
ljmp
pop
push
jne
outsb
clc
cltd
arpl
arpl
push
push
pop
mov
adc
xchg
insl
outsl
cmpb
ljmp
enter
js
aad
mov
mov
das
mov
in
xor
xchg
xor
xchg
test
pop
cmpl
and
sahf
in
dec
push
mov
mov
push
cld
mov
out
cmc
push
adc
adc
notb
sar
pushf
lods
out
je
int3
pop
push
dec
aad
dec
shll
lds
pop
sti
xor
addl
mov
pusha
out
cmp
xor
je
add
or
rcrb
cli
loopne
int
mov
cmp
add
inc
cli
movsb
popa
add
and
fiadds
dec
push
add
fisttpll
idivl
ljmp
mov
mov
sbb
fisubs
ljmp
fiadds
cmpsb
cwtl
insb
cltd
rolb
lret
and
jmp
dec
cmp
rcl
mov
icebp
ja,pt
cmpsl
adc
loopne
or
sbb
or
inc
mov
subl
inc
inc
shr
scas
push
mov
dec
cmc
jno
scas
push
es
push
sti
xchg
lock
cld
push
inc
jns
add
xchg
std
inc
pop
mov
adc
inc
cmp
jbe
rcrl
pop
pop
mov
insb
xchg
pop
jle
mov
mov
nop
jns
fnsetpm(287
mov
push
leave
rorb
sahf
subl
adc
ja
out
lcall
mov
ja
dec
mov
push
ss
aaa
lds
adc
pop
lret
movsb
add
cmp
xor
jb
xor
add
outsb
cli
add
or
push
fs
dec
pop
arpl
mov
mov
bound
sub
dec
push
push
cmp
sbb
jne
fucomip
imul
pop
bnd
ret
cmp
xor
jecxz
mov
xchg
addr16
lret
jo
rcll
imulb
js
inc
pop
cmp
outsb
mov
data16
inc
xchg
xor
rcrb
jg
jg
push
jne
mov
scas
jae
dec
aas
cltd
dec
and
fwait
xchg
hlt
fistl
adc
xchg
into
aam
dec
mov
add
xor
sbb
fldl
daa
or
fstpl
das
jnp
imul
movb
inc
cmpsb
insl
dec
adc
leave
xchg
push
jmp
popa
out
pop
cmp
sub
out
pushl
ret
inc
dec
jle
test
pop
and
lahf
mov
insl
in
mov
out
idivl
adc
je
push
fucomip
jmp
setbe
sahf
adc
roll
call
pop
inc
clc
mov
jb
or
xlat
sub
lret
stos
mov
push
mov
lret
dec
nop
std
adc
hlt
or
inc
pop
test
inc
mov
movl
sti
mov
or
insb
and
sahf
push
sahf
mov
lcall
fildl
jl
adc
add
scas
adc
xor
lcall
or
nop
sbbb
jle
cmp
mov
insb
xor
inc
mov
or
iret
imul
bound
inc
fstl
mov
sar
fsubrl
les
stos
adc
out
adc
dec
mov
xor
mov
ss
dec
push
mov
shl
fs
test
jbe
adc
pop
inc
xchg
mull
pop
jnp
jno
dec
jg
insb
jmp
outsl
daa
mov
xchg
sahf
shll
push
push
xor
enter
mov
icebp
out
js
repz
sub
cmp
add
sbb
fmull
and
jg
push
inc
movb
dec
sbb
xor
scas
jae
mov
xor
pop
cltd
dec
imulb
push
lret
jp
lret
jno
mov
push
dec
xchg
imul
jl
and
fldenv
mov
push
cmp
cmp
rol
ljmp
dec
inc
push
ret
and
lea
mov
out
mov
xor
adcl
or
repnz
lret
mov
jns
mov
xor
imul
xor
scas
in
popf
push
int3
incl
test
xchg
inc
push
jp
lods
cmpsl
test
test
mov
or
fmul
mov
xchg
and
dec
iret
sub
mov
ret
inc
pop
mov
shrb
shrl
mov
rclb
jmp
testl
dec
pop
xlat
lcall
dec
mov
and
cltd
mov
adcl
mov
xor
mov
jbe
int3
adc
repz
sti
arpl
shl
jp
push
and
cld
dec
mov
pop
or
repz
push
push
jb
pop
pop
dec
or
pop
sbb
xor
fistps
adc
inc
pop
pop
cmp
mov
adc
push
mov
jp
cld
cld
js
and
mov
inc
idivb
movsl
imul
xor
add
jae
rol
mov
dec
pop
push
cwtl
xor
out
add
cmp
fwait
xor
sahf
push
push
mov
jmp
sti
into
pusha
aam
sub
lret
lods
sbb
mov
or
mov
loop
stc
sbbl
out
ror
repnz
vpshld
and
jge,pn
xchg
add
push
dec
jne
test
dec
sub
cmp
push
iret
xor
js
sti
cmpsl
cli
sbb
add
jl
mov
and
daa
add
and
pop
sbbl
mov
inc
jg
xor
jg
lret
scas
xchg
push
pop
mov
dec
xor
adc
stos
or
jae
in
cmc
push
out
ja
lds
popw
xor
push
or
push
fwait
arpl
jmp
repnz
lret
shrl
lods
xchg
ficompl
sti
sub
in
cmp
fwait
inc
sbb
aaa
push
sahf
cmpsl
call
mov
neg
jmp
push
into
aam
add
lods
test
add
pop
fnstcw
mov
sub
push
jp
pop
cmpsb
aad
das
and
negb
inc
push
popa
insb
jge
inc
adcb
repnz
jmp
jl
dec
and
mov
pusha
cmpsb
cmpsl
xor
rcll
sub
sub
and
push
in
cmc
outsb
push
int
fistpl
lods
js
pop
dec
inc
dec
sbb
mov
js
mov
lret
pop
sub
xor
fmull
mov
rcll
repz
sub
stc
fstpl
flds
outsl
and
lock
sub
shlb
loop
jg
lret
jb
pslld
sub
jle
jmp
das
test
cmp
mov
orl
mov
test
popa
addb
cltd
or
sbb
push
dec
push
inc
dec
shlb
mov
and
inc
aam
xchg
push
cmp
push
mov
cmp
push
aad
inc
imul
cmc
adc
ds
inc
aas
xor
cmp
icebp
mov
xchg
pop
sub
dec
jl
xchg
stos
adc
push
stc
test
xchg
jae
dec
adc
sub
loopne
cs
loop
pusha
repz
in
data16
das
mov
sub
cli
jo
sub
mov
push
dec
jb
mov
js
dec
mov
pusha
mov
out
js
add
sar
mov
xlat
ja
adc
mov
or
cmpsl
out
jns
xorl
mov
and
add
das
add
data16
jo
xlat
or
rclb
addr16
pusha
xor
sub
mov
cmp
jecxz
scas
notb
in
dec
fstl
add
notl
xlat
es
aam
jnp
pusha
xchg
testb
mov
scas
in
out
js
hlt
shrb
pop
jno
ss
les
dec
mov
mov
rorb
add
lods
das
pop
ds
push
mov
test
call
notl
icebp
int3
outsl
lea
sahf
leave
je
jns
aad
lods
xchg
loopne
sbb
sahf
jb
out
adc
sub
mov
xchg
push
aad
ret
or
cmp
negb
fsubrs
rcl
and
scas
cmp
je
shl
jmp
shrb
add
jne
clc
rcr
cmp
int3
inc
imul
dec
frstor
icebp
mov
lds
xchg
out
pop
xor
push
jecxz
out
sarl
mov
push
mov
push
add
je
rorb
pop
sub
dec
js
sub
test
and
mov
mov
add
jnp
decl
dec
in
sub
push
pop
mov
push
dec
and
aad
insb
outsl
mov
hlt
xchg
push
dec
pop
data16
cmp
mov
iret
pop
inc
push
xlat
mov
es
aam
pop
testb
imul
js
iret
and
add
jnp
mov
add
push
scas
adc
mov
cmp
jg
repnz
out
and
add
mov
mov
pop
jmp
adc
bound
sub
cmpl
sbb
lock
and
scas
inc
call
cs
loop
xchg
in
jg
xchg
inc
push
jg
cmp
dec
test
push
pop
xchg
push
inc
sbb
fwait
lds
lods
xor
xchg
push
and
int
xor
jno
in
sbb
xor
jecxz
mov
push
inc
dec
push
orl
sub
ljmp
mov
or
sbb
lahf
sub
icebp
xlat
ss
sarb
pop
xchg
cwtl
in
xchg
andl
and
mov
pop
icebp
lods
jnp
imul
xor
push
rolb
movsb
jmp
xchg
sbb
sub
mov
lcall
or
iret
xlat
xor
jecxz
ret
popa
mov
sub
lcall
cmc
pushf
dec
pop
and
out
or
test
loope
lahf
xchg
les
and
mov
sub
sti
sbb
xchg
add
imul
adc
addr16
pop
shll
lahf
pop
sbb
adcb
and
pop
ss
shrb
insb
sti
push
inc
xchg
nop
test
inc
add
cltd
dec
fadd
inc
lea
aad
mov
call
gs
ss
jecxz
das
inc
loope
xchg
dec
push
in
lods
movsl
pop
enter
or
lret
cmp
adc
mov
divl
insb
sub
je
inc
xchg
adc
sti
adcl
cwtl
ljmp
iret
fsubs
lods
imul
hlt
mov
or
pop
jle
cmp
pushl
jp
rorb
js
out
sub
jae
rorl
ret
imul
lods
loop
out
sbb
pop
xchg
test
movsb
leave
in
ljmp
lea
push
pop
and
push
and
pop
mull
lret
xchg
xor
cli
clc
jno
adc
insl
js
xchg
push
and
add
dec
xchg
jge
xor
ja
mov
xor
enter
sub
repnz
mov
ds
sub
add
fwait
or
stos
jns
mov
xchg
icebp
enter
or
inc
das
cltd
sub
stos
lods
xor
outsl
or
pop
pop
jnp
mov
and
mov
pop
cmp
dec
xchg
out
jg
int3
sti
leave
jo
ret
out
shlb
inc
lret
lds
sbb
adc
dec
rcl
mov
lods
pop
jbe
fisttpl
lret
insb
fdivrl
popf
aad
scas
inc
imul
lods
outsl
inc
imul
dec
add
xchg
cmc
pop
push
fucomp
cmpsl
insl
inc
fimuls
or
into
push
mov
in
leave
jo
add
add
es
lock
sbb
adc
pop
add
jb
sbb
in
test
mov
jnp
and
lods
pop
mov
je
ficompl
js
xor
jnp
mov
jae
or
or
loop
adc
sbb
jo
jno
inc
sub
fnstsw
and
jecxz
lods
sbb
inc
sub
push
sub
inc
insl
mov
insl
push
mov
icebp
es
jno
in
lds
mov
sub
ret
jmp
or
and
mov
adc
stc
jle
cs
sub
inc
sub
sbb
adc
sub
mov
in
test
inc
in
xchg
jmp
popa
cmp
sbb
and
or
mov
movsl
ds
sahf
das
jbe
push
ja
fdiv
or
leave
int
jmp
push
jmp
jno
ljmp
fs
pop
loop
pop
pop
fld
sbb
push
xchg
mov
dec
test
cld
mov
cmpsb
xchg
mov
lret
xchg
sub
add
test
nop
nop
roll
ficoms
outsb
pop
int
dec
shl
ja
scas
push
jno
dec
les
mov
mov
lds
test
mov
cmp
adc
cmp
jo
push
jns
fnstcw
sbb
inc
lods
js
or
data16
fistl
pusha
mov
pop
cmc
mov
push
lock
cmpsl
push
mov
xchg
mov
ds
fs
jns
insb
cmp
ret
outsl
or
jb
xchg
sub
out
test
shll
dec
jae
les
mov
push
imul
adc
inc
jecxz
cmp
pusha
imul
jl
inc
sub
jae
es
xor
cltd
adc
jge
stc
cltd
lea
shl
sub
scas
fdivl
dec
insb
or
fiaddl
sbb
mov
lret
xor
push
test
out
inc
imul
sti
fwait
cs
lret
ljmp
add
pop
repz
sbb
mov
xor
in
lea
xor
loope
pop
push
push
lds
ljmp
add
ret
stc
mov
outsb
stos
jmp
pop
mov
in
mov
cli
or
fld
popa
cmp
repz
pushf
loop
sub
fs
inc
rcrb
dec
jnp
mov
lods
sbb
ret
flds
and
mov
cmp
pusha
iret
jns
mov
fidivrs
add
adc
push
pusha
xlat
imul
lret
rcrb
aas
adc
jmp
lock
sbb
jns
inc
sub
in
inc
test
cld
add
inc
add
xchg
aaa
mov
enter
loope
mov
in
test
ss
cmc
loopne
fisubl
xchg
movsb
pop
outsl
out
enter
arpl
push
test
lahf
test
pusha
lcall
shrb
roll
inc
inc
lcall
test
ds
push
out
test
call
aas
sbb
mov
sub
fstpt
test
pop
scas
adc
pop
movsb
jns
push
inc
mov
or
xlat
lods
and
and
int3
outsb
and
dec
jne
dec
jb
or
sahf
repnz
and
ret
mov
jl
lret
xor
insb
adc
sub
xorb
outsb
pop
sarb
loop
push
mov
popf
and
jnp
dec
sbbb
mov
test
jl
pop
pusha
lret
add
lret
mov
mov
cmpsl
je
mov
stos
lret
push
in
movsl
fstps
es
movsb
icebp
lcall
bound
fimuls
dec
ljmp
xlat
das
mov
shll
sbb
cmp
cmpsl
push
pop
pop
in
aas
add
jecxz
out
adc
pop
pop
cwtl
sub
xchg
cmp
repz
push
xor
cmp
inc
outsl
in
lcall
fdivrl
pop
push
adc
cs
jp
inc
cwtl
mov
mov
dec
addr16
jo
mov
ret
jmp
imul
out
jne
sub
jmp
icebp
bound
inc
xor
cmp
stc
les
test
enter
lea
out
ja
imul
movsl
aam
mov
and
push
test
and
sbbb
in
push
addr16
pushf
bound
mov
out
push
shr
push
xchg
sbb
jne
or
cmpb
pop
std
andb
lahf
icebp
rcrl
push
arpl
mov
adc
popa
mov
pop
cmc
sti
adc
in
dec
cli
xorl
sarl
test
adc
loope
pop
clc
stos
psubusw
xorl
cmp
mov
cwtl
arpl
sbb
sbb
mov
loope
incb
cld
xchg
pop
rcl
ja
xor
imul
and
push
sar
xor
call
xchg
cmp
cmp
pop
sbb
ljmp
loop
ret
outsl
sub
sub
test
jns
pop
sti
adc
mov
nop
lea
inc
adc
lock
aam
cmpsl
loop
and
mov
rclb
xchg
sub
sub
int3
pop
stc
in
inc
push
and
pop
adc
mov
dec
dec
in
test
sub
adc
test
orl
gs
orl
adc
in
lods
push
ljmp
test
loope
push
add
mov
or
sbb
sbb
mov
dec
scas
mov
lock
bound
adc
sbb
loopne
in
pop
sub
ret
les
scas
lret
imul
in
in
aad
loop
inc
rorb
mov
mov
inc
lahf
add
lcall
mov
xlat
cltd
push
popf
daa
and
jl
iret
mov
and
or
ficomps
mov
aad
ljmp
cmp
cli
dec
mov
cmc
adc
daa
push
rcl
mov
imul
pop
sbb
aas
xor
mov
lock
dec
adc
ds
pop
cwtl
cmc
leave
in
imul
inc
jbe
jno
aaa
dec
jb
fs
mov
xlat
cmp
push
sbb
lods
jb
leave
jge
scas
sarl
add
cs
pop
push
test
jno
adc
pushf
sub
and
pop
dec
lea
das
inc
push
and
hlt
sbb
stc
push
es
lcall
jl,pt
and
or
ja
jp
lock
inc
sub
icebp
lret
js
js
outsb
mov
pop
cli
add
pop
sahf
push
out
scas
pushf
aas
mov
shll
push
and
sbb
cmpsl
xor
xor
jo
jge
faddl
jbe
clc
dec
xor
lahf
lahf
into
adc
orb
fwait
sbb
mov
push
pop
jge
cmp
pop
imul
jecxz
jne
mov
jne
imul
inc
add
loop
repz
dec
jmp
mov
test
lcall
mov
pop
dec
jnp
mov
xchg
xor
mov
or
lods
cmpsb
insb
insl
hlt
inc
adc
mov
xchg
lcall
insl
enter
xchg
and
ds
pushf
push
loop
jae
pop
lods
cmp
mov
divb
xchg
repnz
les
jnp
outsl
cmp
std
cltd
xor
cwtl
sbb
inc
ja
mov
push
nop
mov
popf
mov
ret
mov
mov
xor
sti
ds
out
imul
inc
decb
inc
jae
push
sub
leave
jp
inc
les
iret
inc
aas
ds
adc
adcl
add
push
out
aam
dec
test
leave
sahf
xchg
call
imul
jle
stos
aas
jno
or
xchg
leave
leave
cmp
ret
push
xchg
add
in
inc
enter
push
aaa
aad
stos
xchg
fistpl
push
xchg
or
in
subl
inc
adc
xchg
andl
stos
add
call
loop
jp
pop
sub
ret
aam
dec
lret
call
push
rep
call
push
mov
mov
outsb
cmc
adc
repz
test
cmp
int
outsb
fldenv
dec
mov
enter
dec
stc
pop
mov
mov
sub
xor
adcb
into
xor
test
mov
cmp
sbb
test
pusha
jns
lods
add
jno
sub
jecxz
mov
xchg
imul
pop
lock
int3
cmp
rorb
cltd
test
adc
cmp
lock
shl
xor
and
push
push
orl
mov
or
fimuls
int
lds
nop
lea
in
addr16
cli
loope
push
xchg
jg
mov
jg
sub
xor
sbb
jo
inc
push
dec
cmp
loope
jne
jle
xlat
ss
scas
pusha
popa
cmp
bnd
repz
and
mov
cmpb
outsb
jmp
icebp
in
movsl
loop
sub
mov
push
sub
xor
aas
or
xor
xchg
or
pop
adc
mov
shll
fs
xchg
mov
notb
jno
lods
shlb
out
mov
cld
or
out
cmp
cwtl
in
xorl
mov
movsb
aas
jb
aad
js
sti
and
rcrb
cmpsl
sti
mov
mov
lods
add
adc
mov
ljmp
pop
jg
lods
test
dec
jns
xchg
hlt
popa
xlat
std
hlt
ljmp
ljmp
cmp
movsb
cmp
bound
pop
out
and
mov
cmp
xorb
sti
lods
pop
pop
push
movsl
jb
test
scas
dec
out
arpl
ror
fidivl
ds
add
inc
adc
pop
int
mov
in
dec
add
shll
mov
mov
or
lock
loopne
push
push
out
adc
pop
jl
inc
xchg
inc
movsb
jno
repz
push
daa
fstps
repz
mov
jge
xlat
xor
fs
loope
imul
pop
aam
xor
or
ds
cld
insb
out
sub
xchg
sti
sub
mov
mov
aad
stc
push
popf
dec
or
andl
ret
and
popf
and
inc
xchg
xchg
arpl
add
out
mov
dec
push
out
inc
imul
jne
jl
mov
bound
cmpsl
pop
dec
push
fldl
mov
lds
scas
es
mov
test
sbb
pop
and
dec
cmp
push
push
xor
jb
adc
push
inc
jb
sub
leave
outsl
push
push
xor
adc
jae
out
pop
sbb
push
gs
inc
cmp
out
test
imul
loopne
lcall
mov
data16
push
stos
add
pushf
mov
mov
cmc
sbb
pop
pop
add
fmul
flds
out
push
dec
jno
insl
nop
add
aas
push
shrl
adc
fwait
addb
cltd
stos
lock
cmp
insb
mov
lock
mov
pop
in
sbb
test
stos
popa
lea
sub
arpl
pop
enter
mov
sub
mov
loop
xor
aam
fisttpll
cmp
ljmp
call
inc
shll
adc
xchg
loope
lods
sub
shll
and
sub
sahf
ret
cs
dec
lcall
push
cmp
adc
pushf
pop
mov
rclb
add
and
lods
lret
inc
imulb
ret
lea
mov
mov
and
pop
movsb
ds
nop
je
insl
sub
aad
sbb
mov
loope
jle
les
xchg
dec
gs
mov
dec
jp
out
popa
shl
mov
inc
js
das
dec
jb
lds
aam
inc
xor
idivl
mov
jns
mov
lds
sub
imul
mull
jmp
dec
lcall
or
push
or
test
sbb
test
iret
and
lds
jb
lods
insl
out
in
mov
xchg
mov
fisubs
lds
enter
fstpt
add
repz
aam
and
sub
jle
outsl
scas
je
push
push
test
aam
and
adc
rcll
cmp
xchg
cld
jae
push
adc
lcall
lds
xor
pop
mov
imul
scas
xor
fildll
adc
xlat
leave
in
idivb
cmpsl
mov
sub
jo
pop
cmp
cmp
jge
mov
int
mov
mov
mov
or
int3
inc
or
and
cmp
mov
das
jo
iret
jne
sub
ret
xchg
add
and
add
lahf
add
jne
mov
mov
jne
lock
fldenv
lds
xchg
push
jmp
and
or
dec
pop
push
push
shlb
adc
insb
test
jmp
adc
push
mov
xorl
int3
xor
mov
xchg
ljmp
call
xchg
repz
dec
mov
rcrl
stos
int3
add
mov
cmp
cltd
or
mov
mov
mov
loopne
mov
dec
daa
stos
pop
adc
cmp
out
es
aas
rcrl
pop
repnz
xchg
stos
insl
nop
hlt
shlb
cmpsb
jmp
ljmp
pop
sbb
dec
xchg
push
sbb
and
xor
ret
ret
adc
aam
pop
mov
mov
xor
std
ret
out
enter
arpl
popf
daa
xchg
jmp
xlat
out
lds
js
insl
lcall
dec
repz
fadds
mov
out
icebp
out
cs
push
and
jle
dec
mov
ret
jle
not
lods
mov
lcall
stc
push
xor
adc
mov
xor
sbb
mov
stos
add
call
jg
pop
lahf
sti
dec
mov
mov
je
sbb
push
outsl
inc
popf
cmp
in
test
in
addr16
pop
ret
cmp
sbb
cwtl
and
gs
push
test
int
repz
data16
out
test
mov
mov
lods
xlat
lds
mov
or
adc
je
xchg
or
cltd
xchg
or
lds
push
jecxz
mov
pop
cmp
xor
les
mov
jmp
push
or
das
repnz
aaa
sub
jo
mov
or
js
loopne
scas
loope
jbe
dec
inc
add
jns
xor
push
call
jp
mov
cmp
insb
cmp
and
jae
enter
sub
push
cmpsl
sarl
outsb
push
lret
inc
movsb
push
movsb
mov
repnz
stc
fnstenv
out
aaa
fcomi
lret
fwait
xor
or
dec
das
and
ljmp
je
cli
shll
shlb
ss
and
cmp
cmp
sub
pop
in
mov
pushf
sbb
dec
sarl
scas
mov
xchg
sub
push
jl
addr16
movsb
push
inc
scas
ret
data16
jle
pop
mov
inc
sbb
int3
enter
mov
es
lret
jns
sbbl
mov
in
xorb
les
xchg
aam
push
jb
or
sbb
test
test
imul
in
mov
leave
shll
sti
xchg
sbb
or
ret
mov
jno
mov
int
mov
in
pop
loope
outsb
xchg
pop
jbe
xchg
and
sub
xchg
ljmp
sub
sbb
int3
xor
in
in
adc
scas
add
repnz
mov
mov
push
mov
push
pop
inc
shrb
sub
sarl
jp
pop
and
hlt
pushf
sbb
adcl
inc
add
pop
hlt
or
mov
mov
or
enter
arpl
dec
subb
and
movsb
mov
movsl
andl
add
cld
iret
out
push
loopne
gs
push
pop
xchg
mov
jno
mov
js
loopne
cmp
mov
ds
pushf
in
pop
das
mov
je
jp
and
sub
lcall
sub
jmpw
xorb
dec
aaa
cli
fildll
cmp
lds
cmp
mov
mov
ljmp
ds
imul
movsb
fmuls
pop
mov
mov
push
pushf
mov
jl
ss
mov
inc
out
lahf
jno
or
dec
in
lret
adc
adc
lods
das
inc
js
mov
jns
testl
cmpl
pop
outsl
mov
jo
mov
nop
mov
push
movl
frstor
sbbl
lret
adc
cmpsl
ds
xor
data16
loop
insb
rcl
pop
dec
fwait
cmp
notb
push
shl
mov
inc
cwtl
push
test
cmp
or
lods
mov
stc
sti
in
add
push
loopne
lret
insb
push
mov
and
dec
fwait
iret
repz
mov
ljmp
dec
xor
pop
inc
and
movsl
test
dec
dec
xchg
cmpsl
enter
fwait
jno
ss
mov
mov
xorb
lret
push
imul
int3
lea
xor
lock
repnz
or
fisubrl
repnz
dec
pop
out
aas
rcrb
sahf
mov
icebp
inc
cmp
call
cmp
loopnew
lahf
int3
test
push
outsl
push
adcl
inc
divb
jb
mov
pop
mov
jmp
sarl
hlt
sbb
push
push
nop
stos
xor
mul
mov
pop
movl
cmp
or
jae
ficomps
je
test
fldenv
in
sbb
aas
xor
sbb
imul
inc
and
std
movl
adcb
add
insl
testl
je
sub
add
dec
mov
and
pop
call
cmpsb
mov
mov
mov
adc
lea
adc
dec
subb
mov
or
loope
mov
stos
or
lret
cmp
xlat
arpl
cli
cmc
cmp
cmp
mov
jnp
inc
push
addb
lock
lahf
mov
js
ja
aam
dec
push
inc
xchg
repnz
or
out
fistpll
loop
popf
mov
or
add
jae
sbb
enter
repz
nop
dec
xor
aad
jns
xor
ss
hlt
in
test
mov
sahf
xchg
push
mov
repz
test
popa
ret
jmp
or
bswap
cmp
jmp
in
js
push
andl
and
lds
sbb
cmp
adc
mov
pop
mov
shl
inc
shll
cmp
in
mov
and
xor
sub
in
mov
popf
xor
cwtl
push
pushf
push
loop
inc
sbb
incb
pop
daa
sahf
mov
fcompl
iret
mov
fmul
cmp
pop
fldl
or
pop
ret
sarl
dec
cli
inc
push
les
push
mov
sub
loop
or
mov
das
add
shr
hlt
mov
loop
pop
cmp
imul
outsl
jp
prefetch
das
cmp
mov
mov
pop
out
and
jge
mov
adc
pop
or
inc
dec
imul
dec
inc
cmp
fcmovu
mov
and
or
mov
push
mov
xchg
cmp
xchg
jb
sub
lock
or
mov
push
cltd
inc
cs
push
add
rcll
test
push
or
sbb
std
fbld
xchg
lea
pop
popfw
sarb
int
add
idivb
and
notb
or
push
sub
dec
int
addr16
mov
mov
cmpb
xchg
ja
sub
push
aad
pusha
in
addb
sub
popf
lea
sbb
push
js
mov
scas
xchg
rcrl
jg
movsl
xchg
loopne
repnz
push
jg
dec
or
in
into
rorb
idivb
jmp
pusha
orb
add
add
inc
mov
leave
lret
lahf
aam
lahf
divl
adcl
push
outsl
xchg
inc
in
hlt
or
shrl
lahf
js
push
cmp
or
repnz
test
es
adc
sub
mov
mov
mov
js
push
xchg
pop
mov
test
sbb
dec
cmpsl
jp
mov
xchg
add
test
ss
add
push
jg
insl
pop
and
jp
lods
cmp
int
xchg
mov
push
push
push
inc
out
shlb
mov
push
pop
inc
jbe
add
nop
ficoms
pop
outsl
adcl
or
jp
xor
jge
add
sbb
xchg
ljmp
or
adc
mov
dec
js
rol
aad
jp
hlt
repnz
into
nop
fmulp
sub
sarb
bound
xor
push
fwait
loopne
pop
jecxz
jmp
fisttpll
jbe
pop
xchg
stos
sub
or
xchg
jns
sub
lahf
mov
xchg
fildll
aam
sbb
cltd
cmp
mov
jae
ds
mov
stos
add
xchg
sub
das
fisttpll
aad
mov
mov
ja
adc
jnp
xor
in
push
rclb
jmp
lods
fldenv
add
sub
cmpsb
fsts
pop
inc
adc
mov
pop
fisubrs
mov
add
mov
cmc
push
cmpsl
cmp
test
test
inc
mov
adc
sub
das
ret
lea
sbb
scas
push
mov
popa
or
cmp
jno
xchg
dec
mov
cmp
push
xchg
jmp
jecxz
pop
aam
fidivl
mov
bound
stc
fnsave
adc
int3
or
xor
xchg
dec
clc
xor
or
cwtl
movsb
jnp
xchg
fnstsw
xchg
xor
imul
xchg
xor
cmpsl
inc
cli
xchg
xchg
aas
in
cmp
sbb
xor
adc
jp
icebp
mov
dec
pop
mov
jge
add
sub
sub
jl
test
mov
in
cmp
pop
adc
jg
pop
jns
out
cmc
int
mov
cmpb
or
push
in
jns
adc
mov
sarb
imul
les
fiaddl
xchg
cs
adc
adc
xor
mov
pop
divb
mov
gs
push
popl
xchg
mov
les
jecxz
push
sub
pusha
gs
in
outsb
inc
xor
xor
es
lret
cld
push
sub
das
out
xlat
lret
gs
push
dec
mov
sbb
lahf
fs
ds
rcrb
mov
les
movsl
jns
dec
es
mov
jecxz
mov
cld
pop
xor
stos
aaa
lea
sbb
fdivr
es
jo
outsl
pop
lds
test
push
lret
mov
lret
jge
pop
insl
aad
or
cmp
add
flds
rolb
lds
lods
push
adc
push
adc
jae
js
jmp
sub
shl
xor
add
jg
movb
stos
das
pushf
inc
repnz
cs
sbb
mov
push
popa
cli
sbb
test
stos
in
pop
in
jno
pusha
std
pop
or
ds
jge
push
adc
fdivs
or
int
adc
cmp
pop
xor
push
add
mov
test
repnz
dec
ficomps
inc
mov
sub
mov
cmpsl
push
mov
xchg
mov
test
leave
in
adc
sbb
dec
cmpsl
sub
cmc
lcall
mov
or
xchg
mov
jl
mov
scas
inc
pop
dec
and
cltd
cmp
pop
movsl
push
adc
pop
cmp
mov
pop
je
imul
sbb
imul
cmpsl
dec
mov
mov
mov
stos
or
leave
and
leave
sbb
mov
lea
aaa
mov
in
xor
push
test
inc
inc
dec
outsl
sub
sub
pop
aam
insl
add
cmp
push
stos
mov
xchg
shlb
jle
cmovo
ror
repz
jle
add
add
add
and
cmp
mov
loopne
icebp
adc
push
cmpsl
mov
ret
aam
pop
dec
in
rclb
pop
call
sub
mov
in
arpl
int
jae
jne,pn
dec
cld
outsl
cmp
cmp
out
les
addr16
mov
cli
jecxz
xor
add
push
mov
insl
cmpsl
mov
mov
loopne
jecxz
xchg
lods
and
inc
in
adc
cmp
pushf
ret
jne
es
lock
jns
xorl
xor
es
push
sub
sbb
call
xlat
hlt
fwait
dec
pop
sub
add
adc
pop
stos
int3
mov
inc
fdivl
push
pop
adc
xchg
int3
icebp
add
stos
rcr
je
andl
rolb
out
and
cmpsl
cmp
pop
repnz
mov
jae
push
dec
fldl
mov
push
repnz
mov
imul
ficompl
pop
hlt
rcrl
jle
loop
xchg
pop
stos
stc
in
scas
mov
mov
cmp
out
add
lods
or
or
in
dec
fnstsw
aad
jbe
adc
lahf
test
out
jb
add
aas
jmp
inc
inc
repz
cmpsb
enter
push
bound
out
inc
fmull
jmp
mov
or
mov
in
les
popa
mov
ljmp
popa
push
into
lock
rcrl
mov
bswap
sarl
adc
push
rcr
lret
int
jne
inc
ret
das
dec
addr16
in
push
pop
cmp
and
out
mov
cmpsb
cmc
inc
xchg
inc
not
pop
insb
pop
movsb
fs
push
xchg
or
mov
jmp
clc
mov
gs
enter
jge
faddl
arpl
cli
add
cmpsl
mov
jle
jmp
and
adc
mov
lods
mov
filds
ss
and
mov
adc
jmp
xor
xor
popf
lahf
sub
mov
fwait
xchg
arpl
test
and
in
push
lods
pop
jne
add
add
xor
dec
push
push
mov
fbstp
bound
shl
inc
int3
mov
push
shll
mov
mov
xchg
mov
push
adc
roll
mov
stos
loope
rcrl
dec
iret
mov
cmp
and
jge
push
scas
inc
aas
mov
cli
cmp
test
dec
or
pop
mov
test
xor
xchg
jnp
sub
cmp
add
je
push
mov
mov
mov
int
loop
and
ss
cld
andb
or
cmpsb
fwait
adc
imul
ret
jo
cwtl
dec
sub
adc
dec
or
mov
fisubrl
mov
xchg
daa
add
push
adc
int
popa
gs
in
rorb
add
cmpsl
jno
mov
mov
dec
jno
lret
mov
and
mov
movsb
testl
add
int
xchg
xchg
sarb
mov
addr16
cmp
pop
pop
lret
cmp
pop
push
mov
das
jae
jle
dec
inc
mov
xor
jb
add
dec
popa
adc
imul
lret
adc
ljmp
sar
inc
iret
lods
idivl
jne
push
sbb
jl
aaa
sbb
pop
xor
jge
scas
mov
movsb
or
xor
xchg
stos
adc
into
lods
adc
cmp
xchg
cmpsl
bound
pop
cltd
mov
not
jge
cmpsl
sub
and
in
outsb
jo
repnz
xchg
movb
inc
and
fisttpll
ret
ds
jns
ret
sbb
in
push
pop
loop
cmp
jbe
jp
mov
adc
adc
mov
mov
rcrl
dec
iret
push
jb
scas
or
and
sbb
insb
ret
or
int
out
push
es
jmp
adc
fcomps
enterw
mov
xchg
cli
fildll
push
jnp
or
div
inc
out
aaa
sbb
push
aad
pop
inc
push
cltd
test
jp
ljmp
loop
mov
orps
or
fldl
rclb
sti
in
mov
int
insb
jnp
ss
in
sahf
xchg
jo
fiadds
add
cli
andb
mov
or
cs
push
and
mov
clc
stos
fdivrs
mov
push
stc
jno
inc
fwait
roll
repz
fmulp
sbbb
inc
push
xor
sbb
in
out
leave
push
xchg
cmpsb
nop
pusha
push
dec
or
mov
cltd
das
leave
repnz
mov
sub
ss
or
pop
adc
push
mov
test
push
bound
jbe
fs
mov
mov
fdivs
test
fadd
and
outsl
lock
or
movsb
sbb
push
xor
xor
repnz
into
dec
lds
xchg
inc
dec
pop
and
push
pushf
dec
pop
int3
bswap
leave
lcall
inc
mov
or
lcall
adc
cli
leave
push
scas
sahf
mov
mov
mov
enter
sbb
pop
jbe
in
mov
inc
cmp
mov
mov
imull
adc
test
lret
call
xor
cld
and
mov
loop
pop
mov
lock
add
div
cmpsb
and
into
cmp
mov
bound
hlt
mov
jecxz
pop
popa
add
xchg
in
jge
or
out
dec
bound
pop
std
scas
jmp
dec
push
cmp
ficoms
rclb
push
repnz
jmp
jle
out
push
jae
lds
pop
shl
lods
ret
sbb
inc
pop
stos
in
xchg
inc
andb
push
loopne
lea
out
push
mov
push
mov
mov
adc
jb
stc
jp
sbb
adc
pop
sub
mov
fwait
mov
jle
das
cmp
and
jb
std
cli
sbb
imul
mov
fs
xchg
push
sub
test
fwait
inc
adc
mov
fwait
inc
cwtl
sahf
mov
add
ror
gs
pop
inc
clc
add
lock
cwtl
push
lods
cmpsb
imul
mov
xor
loope
cmp
fadds
mov
insb
pop
mov
out
mov
mov
sbb
mov
cwtl
rol
dec
daa
lahf
lea
movsb
or
add
pop
sbb
rcr
xor
inc
inc
scas
or
jecxz
adc
in
jne
cmp
mov
jg
std
mov
mov
rolb
out
enter
adc
push
mov
cltd
pushf
dec
inc
imull
test
mov
int3
fimull
push
test
std
bound
cmp
or
sbb
push
fprem
stos
ret
hlt
fistpll
fs
mov
xlat
sub
add
stos
inc
sub
addb
jp
dec
mov
mov
mov
fmull
adc
jmp
in
popf
insl
dec
outsb
cltd
fdivrs
addr16
xchg
outsl
mov
bnd
cs
fs
fnstenv
push
jo
lods
adc
jp
into
dec
loop
push
or
leave
sbb
and
dec
cmove
ret
lahf
mov
add
pop
in
push
jae
lcall
inc
push
add
sbb
xchg
pop
mov
jne
mov
out
mov
inc
mov
mov
xchg
add
xor
sub
rcr
std
sbb
push
add
sbb
jle,pn
dec
mov
mov
cmpb
pushf
int3
lcall
sub
xchg
mov
mov
mov
roll
xor
add
add
mov
std
jp
enter
xor
lods
imul
or
cmp
lods
jmp
lret
mov
ffree
push
adc
cmp
cmp
cmpb
mov
pop
in
fwait
mov
jne
imul
loopne
in
add
ss
cli
add
loopnew
jnp
les
sub
add
cli
andl
xchg
lahf
rclb
xchg
xorl
iret
test
imul
andb
sti
ds
adc
adc
jmp
sbb
lcall
push
aad
lods
bound
mov
add
cltd
adc
xor
int3
mov
pop
or
pop
pop
and
test
or
data16
mov
fnstenv
xchg
adc
daa
hlt
inc
mov
push
jno
enter
mov
cmp
cld
das
pop
inc
xchg
pop
mov
roll
test
mov
fptan
mov
or
or
pusha
stc
jne
and
pop
push
sub
mov
jne
cmp
mov
es
hlt
mov
sub
sub
mov
repnz
iret
insl
ror
jg
pop
xchg
lea
shlb
lods
scas
lock
push
mov
fidivrs
cmpb
outsl
pusha
mov
adcl
dec
jp
cmp
xor
push
sti
loope
sub
ret
dec
out
jno
adc
dec
sub
movsl
dec
out
dec
movsb
pop
cld
repnz
jmp
jmp
push
xchg
fstps
pop
lret
mov
mov
mov
inc
outsl
cmp
jbe
int3
dec
push
mov
aaa
out
lods
inc
stos
pop
dec
clc
out
fcmovb
cltd
inc
mov
add
ficompl
jb
data16
pop
sub
mov
setl
fmull
hlt
xor
push
add
push
in
xor
std
dec
sub
lret
faddl
out
nop
or
sti
mov
shll
cmpl
dec
xchg
sbb
push
add
push
mov
fnstcw
arpl
mov
add
cmp
shrb
cltd
ja
lods
dec
rcr
push
push
sti
and
mov
or
adc
scas
stc
add
stos
test
call
and
add
popf
imul
stos
push
xor
sub
sub
add
xchg
pop
lret
cli
or
sahf
lock
shrl
test
push
rorb
andb
outsl
cmp
xor
pop
movsb
outsb
es
aam
push
mov
pop
push
or
mov
mov
or
jns
andl
adc
test
in
arpl
in
in
add
je
mov
rsqrtps
in
mov
hlt
push
mov
cmp
je
lock
push
lret
aad
repnz
pop
stos
add
push
lock
test
pop
es
inc
cmp
ds
adc
frstor
push
adc
xchg
mov
ss
sbb
int3
xchg
movsl
js
cmpsb
mov
jp
addr16
fnsave
ret
dec
loop
sbb
jmp
dec
arpl
xlat
sbb
add
popf
lret
adc
inc
lods
add
add
jp
and
and
add
jge
in
adc
andl
nop
leave
out
pop
roll
lahf
or
xchg
jae
cwtl
divb
xor
add
pop
icebp
cld
mov
aad
push
jae
jmp
jb
inc
shll
or
sti
mov
lods
inc
and
js
dec
rcr
fadds
xor
pop
push
neg
and
rcrb
test
dec
inc
push
ja
jmp
cmp
pop
fists
sub
push
xchg
pushf
or
adc
in
xor
pop
mov
out
xor
pop
les
out
fisubrl
jl
push
sbb
mov
movsl
and
mov
out
jge
in
lods
call
pop
movntps
les
pop
pop
sbb
xor
and
sbb
adc
iret
xchg
cmp
sub
lea
ffreep
lds
and
in
adc
int3
lods
mov
repz
stc
stos
cs
inc
jge
mov
into
mov
dec
xchg
xchg
stc
jmp
fistps
add
xor
xchg
clc
add
pop
fldt
inc
icebp
arpl
test
and
es
das
and
sub
cmp
and
jne
aad
imul
mov
daa
test
sub
int
mov
jge
lret
jmp
sub
xchg
popf
gs
fiadds
xchg
in
and
dec
cmp
jp
jnp
xchg
outsb
sahf
dec
jmp
mov
aam
test
ret
mov
add
clc
stos
xchg
xchg
dec
jmp
push
xchg
icebp
les
xchg
insl
lret
shlb
push
std
mov
faddl
lea
add
pop
out
add
push
add
ret
imull
repnz
mov
mov
add
cmp
mov
xchg
inc
mov
out
inc
lods
dec
loop
cmpsb
fstl
mov
out
push
out
int
repnz
sti
lods
xchg
std
les
adc
lret
in
jb
aas
in
inc
jg
movsb
xor
hlt
imul
test
pop
daa
dec
cmc
lahf
xor
aas
call
mov
sub
ret
clc
jns
cs
and
outsl
dec
in
jbe
mov
mov
and
mov
jo
loope
jo
inc
lods
add
push
scas
mov
xchg
fisttpll
cmp
ljmp
in
nopl
dec
sub
nop
jbe
and
mov
pop
lds
insb
test
dec
cmp
or
xor
lcall
mov
shrl
inc
xchg
sbbl
lahf
push
mov
sbb
shrl
push
cmc
iret
sub
mov
cmpsl
pop
or
fdiv
movl
xor
out
mov
pushf
sarl
jl
fcmovb
cltd
cmp
fmull
stos
int
xchg
mov
xorl
or
xor
clc
in
rol
dec
enter
sbb
vaddsubpd
mov
inc
add
and
test
mov
test
in
jle
lods
inc
jne
mov
xchg
inc
cmpsl
out
mov
dec
aas
mov
jge
gs
cmpsb
sub
add
rorb
push
fldcw
adc
fldcw
pop
or
in
adc
mov
jmp
mov
dec
test
pop
inc
mov
mov
fs
out
mov
lcall
lds
scas
addr16
xchg
hlt
cwtl
adc
jno
inc
push
push
mov
push
aad
pusha
mov
lds
fnstenv
rcll
scas
in
xchg
and
cmp
jnp
jg
fnstsw
dec
iret
mov
sti
mov
cld
jne
outsb
jns
mov
enter
call
sub
cmpl
jb
ljmp
loopne
nop
ror
mov
sahf
push
call
and
out
in
inc
mov
and
movsb
mov
shl
cli
rcrl
outsl
lea
inc
leave
popa
add
add
mov
jb
scas
hlt
sahf
loope
mov
je
mov
mov
pop
test
sbbb
mov
inc
cmp
test
cmp
push
ja
mov
add
and
pop
out
imul
lcall
movsb
mov
dec
mov
xor
lret
mov
xor
or
sub
mov
add
notb
ja
test
mov
mov
test
sub
adc
mov
jb
flds
sbb
inc
fwait
cmp
mov
pop
mov
mov
out
clc
std
adc
mov
push
scas
movsl
aaa
test
pop
jns
mov
add
mov
jmp
dec
ss
int
and
push
jle
nop
jb
loope
or
out
fnstsw
mov
jge
movsb
cmp
push
shl
pop
dec
add
jmp
inc
aam
in
xchg
jo
nop
shll
fs
out
cltd
call
and
xchg
lcall
or
popf
sub
or
adc
mov
jo
add
xchg
mov
pop
aam
in
mov
fwait
xchg
filds
mov
lds
mov
xchg
mov
xor
adc
mov
mov
shl
scas
add
add
add
aas
sbb
aaa
mov
gs
loopne
aad
jle
add
mov
or
adc
mov
sub
stc
and
or
jmp
js
dec
cmp
and
xor
rep
xlat
cmp
mov
inc
xchg
popa
loopne
lret
out
jmp
dec
mov
bound
sub
fs
or
mov
in
jae
ds
dec
xchg
xchg
das
rolb
cli
dec
movsb
lods
mov
jle
in
mov
sbb
xchg
lea
lods
mov
lock
cmpsl
xor
inc
pusha
insl
mov
xor
pop
ljmp
push
push
pushf
inc
xchg
sbb
and
jp
arpl
jecxz
movsl
inc
arpl
xor
repz
xchg
loop
insb
push
sahf
mov
dec
adc
hlt
in
xor
iret
or
std
in
sbb
mov
mov
jo
ljmp
out
aad
daa
int
mov
add
mov
insl
pusha
xor
mov
loope
mov
shr
inc
adcb
xchg
fiadds
mov
cmpsl
sub
sub
loopne
scas
outsl
inc
xor
out
mov
sbb
adc
jns
mov
sahf
addr16
flds
inc
xlat
aad
cmp
hlt
xchg
arpl
add
shll
subl
icebp
or
ret
pop
movsb
mov
mov
adc
addl
push
pop
int
sub
mov
add
xchg
sti
int
mov
and
lret
outsl
decl
xchg
in
pop
mov
sbb
cmp
pop
scas
and
cmp
test
cmp
sub
jnp
in
push
fldenv
mov
adc
add
out
fstl
pop
clc
cmpb
out
icebp
adc
mov
loop
in
cmpsl
xchg
push
lcall
es
leave
fidivs
adc
or
out
lcall
sub
sub
testb
les
adc
pop
insb
fcompl
lret
fnstcw
sub
cmp
pop
or
lods
xor
aad
stos
cli
addr16
rcrl
shlb
lock
cmc
push
repnz
popa
sti
test
pop
stos
cs
ret
lock
call
lret
jge
inc
or
jae
sarl
jno
xchg
jno
add
cmpsb
cli
and
out
and
loope
mov
sarl
addr16
push
adc
add
inc
push
dec
dec
les
mov
lret
lret
sub
inc
stos
ss
gs
stos
inc
mov
or
sub
sbb
test
and
lret
mov
xchg
xor
cmp
inc
rcl
push
leave
cmp
rcrb
fsubrs
adcl
mov
outsb
mov
fildl
inc
movsb
test
and
push
push
or
call
push
or
add
scas
push
inc
xchg
mov
dec
add
pop
outsl
cld
bound
jbe
insl
sbb
into
loope
add
lods
jp
jp
out
lcall
xlat
in
xor
lcall
dec
bound
sub
ret
cmp
xor
push
mov
xor
int3
ja
cli
mov
pop
push
es
jge
lahf
pop
les
mov
push
push
test
insb
movsl
lea
mov
mov
xchg
xor
call
jmp
inc
mov
sub
inc
cs
xor
and
adc
xor
aam
popf
add
shrb
gs
lods
or
xor
cli
sub
test
mov
imul
push
xor
scas
jne
fldt
loop
mov
sbb
pop
mov
jnp
js
and
loope
out
jge
xchg
pusha
cmp
in
clc
cmp
sti
fisttpl
jge
or
push
mov
pop
dec
loope
fldcw
mov
add
pusha
shrb
fcmovb
xchg
lret
push
mov
mov
inc
adc
push
cmp
xchg
inc
pop
jecxz
pushf
push
daa
xchg
xchg
mov
xchg
shl
push
lock
jb
jp
rorb
pop
mov
cmp
xchg
int3
sbb
leave
dec
ror
lods
pop
sbb
fnsave
jmp
xlat
das
or
rol
jbe
out
lock
imull
push
mov
cmpsb
mov
cmp
mov
inc
mov
shr
mov
adc
jle
jbe
test
jne
cmp
shrb
pop
scas
push
jnp
jg
int
or
xor
in
mov
sub
int3
push
sbb
xchg
in
sahf
fnsave
arpl
sub
sbb
add
add
inc
cmp
fnsave
insb
popf
sbb
dec
fdivp
mov
sub
and
lahf
adc
dec
pop
roll
xchg
add
add
out
mov
ss
movsl
sub
push
inc
xlat
movsb
jg
adc
mov
andb
cmp
or
xchg
aaa
in
mov
cmpsb
jp
leave
mov
pop
sub
adc
xor
arpl
lret
dec
rorb
call
push
aaa
xchg
outsl
jge
lret
sbb
xchg
insl
gs
popa
or
enter
and
dec
pop
xchg
pop
addr16
sbb
js
pop
push
out
in
mov
xchg
and
int
rcl
pop
test
adc
loopne
xchg
shll
nop
push
adcl
push
push
cmp
mov
push
jg
loop
int3
lret
cli
shrl
push
mov
mov
faddl
in
dec
cmp
in
sub
jae
sub
loopne
push
and
and
js
xchg
arpl
fistps
add
fsubl
lea
movsl
mov
fisttps
xchg
or
dec
sub
sbb
imul
sub
xor
jp
fldenv
int
cmpsb
shrb
fists
aam
cmp
cmp
sbb
ds
ljmp
jp
cltd
test
mov
inc
mov
subl
mov
scas
iret
push
jl
xchg
mov
mov
add
test
push
test
loope
cmp
jb
mov
pop
ret
sbb
mov
and
idiv
ja
outsl
pushf
popf
jle
sub
jmp
push
adc
scas
in
mov
pop
mov
dec
ret
or
shll
dec
xchg
sub
enter
push
andb
cmp
outsl
sub
shlb
mov
cli
xor
push
add
insb
in
cld
dec
mov
popl
xor
mov
mov
out
fnstcw
fnsave
and
cmp
jbe
lea
xchg
test
push
mov
dec
shrb
in
js
inc
sahf
out
cmp
pop
sub
aaa
fs
int
stos
leave
jle
xchg
mov
sbb
test
xchg
fiaddl
negl
scas
aad
fdivrs
jl
fstpt
xor
sub
push
mov
ds
pop
inc
xchg
jne
jl
sahf
cmp
sub
sub
out
dec
cld
leave
mov
daa
sbb
sub
mov
mov
push
or
dec
cmpb
push
push
add
xchg
inc
mov
enter
inc
scas
sub
test
jecxz
fistpll
fdiv
mov
shll
adc
pushf
push
xchg
aad
inc
pop
fcoml
cs
adc
add
adc
mov
lret
inc
shrb
xchg
or
fdivl
xchg
lret
xchg
mov
pushf
sub
mov
dec
lret
sbb
fldcw
jb
mov
cmp
fimuls
inc
mov
in
mov
test
xchg
jl
daa
jno
in
jmp
mov
or
pop
dec
ja
inc
aas
jb
je
mov
cltd
cmp
lret
sarl
inc
inc
pop
pop
aaa
scas
sub
enter
outsb
movsb
lahf
or
loopne
jmp
dec
enter
mov
pop
sub
lods
sbb
jbe
push
fcmovb
cmpsl
mov
nop
mov
pusha
or
leave
push
mov
popf
jnp
scas
fstpl
sbb
add
xor
lcall
jg
sub
testl
loopne
sbb
iret
andl
lea
mov
add
in
add
fmull
or
mov
aas
mov
rclb
jmp
xchg
mov
or
inc
inc
and
cmovno
pusha
lcall
sbb
fwait
loope
xchg
cmc
dec
adc
mov
stc
rcrl
add
stos
xchg
xor
xor
sub
call
out
cwtl
negb
fsubrp
aad
scas
mov
popf
push
dec
les
je
outsb
je
jae
dec
lahf
sti
test
sub
sbb
pop
cmp
outsb
adcb
fs
popf
and
pop
bndstx
cltd
popf
pusha
fimull
xchg
inc
sbb
sub
lock
es
ja
sahf
cmc
jno
fadd
fsubrs
test
jp
add
pop
lods
and
sbb
mov
xor
cld
fstpl
pop
sahf
mov
add
scas
arpl
lret
ficoml
stos
mov
xchg
xchg
test
jae
mov
add
cmpsb
push
stos
in
mov
pusha
adc
sub
or
sti
push
pop
add
lret
jmpw
add
jno
xor
adc
add
or
inc
jnp
adc
cmpb
add
iret
lods
jge
fwait
or
jbe
jne
lret
xchg
sbb
or
out
pop
popa
js
andl
fists
into
push
pop
fs
cmpsl
insb
sub
sti
sub
movsb
insl
cmpb
pop
aaa
mov
cltd
lods
notl
sbb
push
add
movsl
or
negb
insl
dec
dec
fwait
sub
or
and
icebp
xchg
fnstcw
pop
sbb
or
test
dec
insl
jp
mov
divb
dec
mov
cmpsl
add
leave
scas
sbb
pop
pop
add
mov
xor
mov
orb
popa
int
call
imul
rolb
mov
ret
cmp
mov
xor
les
in
imul
or
aaa
cmpsl
inc
and
shrl
jg
adc
in
mov
insb
and
pop
xchg
mov
or
xchg
jno
int3
sbb
out
outsl
sbbb
adc
xor
jmp
xchg
sub
aam
inc
lcall
int
xor
jb
cmp
push
pop
mov
imul
popf
cs
cmp
and
jp
inc
cmp
loope
lea
test
push
addr16
pop
pop
imul
inc
xor
mov
imul
pushf
scas
sub
jb
push
inc
mov
and
pop
popa
cwtl
es
xchg
push
scas
xchg
adc
popf
aas
int
fiaddl
sub
pop
test
into
cmp
lahf
pop
cmpsb
jg
or
jne
jecxz
movsl
xchg
push
or
std
jbe
mov
mov
stos
mov
test
adc
bound
mov
dec
push
arpl
and
inc
mov
sti
ret
push
push
mov
in
push
in
pop
iret
imul
fidivrl
or
jbe
cmp
sub
jnp
lds
call
repz
inc
and
popa
lds
dec
xchg
movsb
sub
add
decb
cmp
adc
outsb
pusha
sbb
aam
push
mov
movd
bound
idivb
sub
loop
xchg
push
jge
jb
sub
gs
mov
jae
shr
xlat
push
mov
repz
cmp
repz
adc
pop
js
pop
dec
dec
enter
fs
je
inc
fwait
stc
test
jns
adc
aas
inc
aaa
in
call
repnz
pushf
fiaddl
jp
mov
stos
jno
sarl
insb
test
ret
xchg
jbe
in
add
mov
bound
mov
pop
dec
movl
push
popa
jp
into
das
mov
or
mov
xchg
call
xor
sub
lcall
out
scas
insb
jg
push
sub
pop
pop
push
popa
in
lods
pop
leave
iret
push
dec
pop
fs
push
enter
jne
mov
xor
jge
in
sbb
xor
dec
movsb
push
xor
xchg
sbb
sahf
in
lret
and
mov
out
cmp
pusha
cltd
scas
xor
stos
or
or
push
inc
outsl
jecxz
xlat
scas
test
scas
push
daa
ss
adc
insb
sbb
or
inc
lret
dec
sub
pop
push
cld
arpl
lret
in
push
inc
in
ret
mov
mov
roll
dec
sbb
cmc
jecxz
cli
subl
inc
and
cli
cli
adc
adc
push
jecxz
mov
stos
mov
loopne
mov
in
les
add
fisubrs
call
movsb
inc
imul
and
xor
fldcw
fisttps
dec
fildll
decl
xor
lea
rcll
sub
mov
test
cmp
mov
or
adc
mov
ss
pushf
fwait
xchg
adc
add
dec
incb
jns
icebp
add
cmp
add
push
jnp
jae
test
fisubl
push
sti
icebp
sub
jmp
test
shll
pop
jae
aas
loop
arpl
cmpsl
divb
subb
pop
scas
jecxz
negb
mov
add
sbb
hlt
je
fisttps
cmp
fbstp
pop
cmp
shlb
dec
aas
or
imul
movsb
loop
jge
xchg
ljmp
pop
rep
loope
stos
adc
or
sbb
sub
pop
lcall
fs
fisttps
or
rorb
inc
jmp
ja
scas
dec
leave
add
sub
inc
daa
mov
jne
push
aad
aad
xor
repnz
lds
xchg
js
and
pop
mov
fisttpl
push
push
cmpsl
ror
fdivrs
inc
sbbb
mov
inc
out
ss
inc
orb
imulb
stos
cmp
jbe
pop
mov
scas
xchg
pop
push
lods
shrb
movsl
xorb
or
jb
out
rolb
inc
xchg
or
adc
jge
add
nop
push
test
out
shlb
call
cmp
sub
movsl
lock
push
repnz
pop
mov
stos
scas
or
fldl
fwait
rol
sbb
movsl
pusha
mov
pop
jmp
xchg
out
sub
mov
inc
outsl
push
cwtl
icebp
mov
add
sbb
fs
lock
push
lea
pop
loopne
out
out
sbb
lock
dec
xchg
cmovne
xchg
mov
je
test
mov
stc
cmpsl
mov
push
daa
pushf
pop
inc
pusha
shll
aas
negl
pop
dec
in
cli
xchg
push
sbb
mov
repnz
fldenv
add
xchg
sbb
testb
add
pushf
or
loopne
bound
xorb
mov
jmp
mov
enter
xchg
cld
mov
mov
sub
xchg
and
mov
nop
cld
out
jbe
ss
adc
add
hlt
jmp
or
add
lods
arpl
leave
jp
pop
pop
lds
pop
jmp
mov
fst
inc
push
mov
in
sbbb
cltd
xchg
ret
popf
cmp
test
push
mov
fwait
pop
mov
addb
imul
fs
popa
sbb
test
jne
cmpsb
or
pop
inc
cld
jns
test
xor
dec
test
cmpsl
sbb
orl
ljmp
adc
sbb
dec
inc
xorl
inc
stc
add
jmp
push
mov
or
enter
ds
lods
pop
test
jmp
mov
lcall
mov
js
add
dec
or
jmp
xchg
sbb
fistps
dec
push
xchg
cmp
popa
lret
jmp
iret
mov
lret
frstor
mov
pop
mov
pop
dec
fwait
sbb
sbb
sub
ret
cmc
add
pop
rorb
mov
sbb
mov
or
dec
mov
xlat
aas
jle
and
cmpsl
sub
adc
xchg
nop
in
mov
out
icebp
jno
out
scas
loope
aas
mov
loopne
sbb
rcr
jmp
dec
repnz
xchg
das
prefetch
sub
add
jno
scas
mov
clc
and
lock
lock
pop
mov
int
xor
mov
insb
bound
jg
or
shlb
dec
ljmp
ret
sbb
fcoml
mov
cmp
out
pop
pop
inc
jnp
sub
lods
sub
mov
and
test
clc
jl
out
xor
rol
std
xchg
cmpl
enter
out
pop
sub
out
js
or
adcl
ds
mov
push
aas
int
int
lahf
push
jp
fdivrl
sub
sub
lcall
push
cmp
mov
lret
push
popf
xchg
mov
ss
or
ss
outsb
jmp
pop
dec
lahf
add
xchg
inc
xchg
cmc
adcl
mov
arpl
std
das
out
insl
mov
mov
xchg
mov
sub
sbb
scas
rcl
inc
lods
cs
jle
movsl
inc
xchg
jle
and
mov
enter
cs
and
leave
jae
iret
ss
sub
scas
mov
repz
ficoms
into
daa
movsl
xchg
out
adc
fisubrl
sarl
pop
mov
js
nop
sub
pop
mov
ficompl
out
dec
pop
int3
pusha
cwtl
and
scas
movsb
lret
int3
dec
les
mov
push
or
and
sub
movsl
dec
aaa
xchg
push
mov
inc
pop
sbb
shrb
dec
pop
inc
rcrb
xchg
enter
sbb
fwait
lret
dec
jecxz
rclb
fwait
insl
dec
dec
enter
and
mov
mov
test
adc
mov
aam
test
and
int3
mov
cli
les
fs
cmp
pusha
cmp
into
test
push
out
or
popa
in
xor
jo
add
mov
js
sub
cmc
int3
add
scas
add
frstor
mov
sub
xor
inc
cmp
sub
mov
lret
or
pop
adc
movsl
mov
out
adc
lds
inc
rdpmc
mov
ficoms
sarl
or
stos
cmp
dec
xchg
xor
or
out
xchg
push
pushf
jmp
jmp
inc
push
gs
jns
ss
daa
mov
gs
ja
and
test
lret
push
and
mov
mov
mov
jmp
xchg
outsl
inc
fwait
pop
jne
xor
insb
adc
inc
incb
xchg
add
pop
xlat
push
jl
jb
mov
ja
pop
mov
cmpsb
out
out
or
pop
daa
xchg
cmp
cmpsb
cmp
mov
in
mov
out
cmp
imul
ficoms
adc
or
sub
fs
daa
nop
xlat
cmp
push
mov
ljmp
js
inc
or
sti
cmp
bound
cwtl
fiadds
and
or
call
xchg
push
adc
dec
mov
dec
push
adc
cli
push
cli
in
or
rcl
mov
sbb
ss
or
xchg
cmp
ret
adc
stos
mov
pushf
hlt
test
push
sarb
add
ret
push
jl
xor
andl
adc
out
mov
and
jmp
jl
hlt
adc
cltd
call
frstor
cmp
or
mov
and
fs
sub
mov
cld
mov
repz
call
adc
xchg
cmc
mov
jecxz
push
lock
pop
scas
stos
mov
stos
sahf
xchg
mov
jbe
mov
fmuls
xor
arpl
and
sub
popf
or
pop
addr16
gs
aaa
lods
sbb
jno
in
xchg
enter
sbb
stc
sub
mov
inc
popf
movsb
push
xchg
filds
lock
adcl
push
mov
jnp
xchg
mov
mov
loop
mov
pop
iret
lods
lret
jnp
mov
push
pop
jmp
jb
mov
lcall
aam
lods
aas
je
ss
xchg
ret
dec
popf
add
dec
lock
mov
sub
in
xchg
sub
cmpb
mov
add
mov
sbb
sbb
mov
neg
sub
mov
jne
in
jg
pop
movsb
push
inc
or
mov
dec
scas
das
mov
pop
inc
xor
mov
rcl
push
sub
inc
mov
aaa
mov
bound
add
sbb
or
pushf
add
insl
addr16
cmpsb
sbb
push
mov
movsl
lods
cmp
je
in
xor
xor
sbb
fcmovnu
dec
pop
inc
lds
mov
add
mov
jge
push
push
movsl
pop
pushf
push
sub
mov
sub
daa
and
push
popl
inc
fists
cmp
dec
xor
push
add
mov
adc
cmpb
stos
cmc
lock
and
and
movb
mov
or
inc
xor
mov
mov
mov
xor
aad
pop
cmp
rorl
sub
add
cld
jns
inc
addb
sarb
fsqrt
cltd
push
dec
xlat
jecxz
sti
xor
xchg
inc
data16
inc
adc
adc
sbb
push
cmpsb
ficompl
cmpsl
add
orl
es
je
adc
push
dec
and
mov
add
sbb
fdivrs
nop
cmpsb
sbb
ret
mov
xor
inc
jg
in
addr16
lods
dec
push
pop
les
xchg
sub
stos
bound
cld
and
fdivl
pop
jne
mov
out
int3
bound
xchg
hlt
xor
mov
test
mov
popf
imul
xchg
or
aad
insl
sar
pop
xchg
ljmp
and
out
cld
rcrb
dec
push
es
sub
and
pop
scas
cmp
jb
dec
sahf
int3
adc
mov
lret
push
rcrl
movsl
add
sub
or
rol
movl
mov
xchg
movsb
add
adc
xchg
arpl
jne
pusha
out
mov
lahf
pop
pop
xor
shrl
dec
xor
jg
out
mov
mov
outsb
cmp
in
sub
int
push
testl
inc
mov
jg
ljmp
cmp
push
call
ja
cmp
rcl
sbb
cwtl
mov
in
push
jmp
icebp
sbb
xchg
mov
sub
jne
jnp
jb
sbb
repz
mov
in
scas
mov
dec
nop
ss
roll
cli
mov
aam
clc
xor
push
push
std
add
incl
lock
mov
repnz
in
cmp
xchg
push
xlat
and
push
rcrb
cmpsb
mov
push
leave
xor
jo
or
inc
das
pop
inc
out
inc
mov
xchg
xchg
xor
cmpsl
aaa
adc
insb
cmp
push
sarl
inc
jecxz
ja
or
imul
xchg
fdiv
call
pop
inc
fimuls
js
push
ljmp
mov
insb
jmp
nop
lahf
mov
insb
push
movl
scas
cwtl
cltd
jno
mov
lahf
dec
push
sub
stos
rcr
popa
push
cmp
pop
inc
fistps
xchg
push
sbb
or
lock
arpl
js
aas
sub
addr16
daa
inc
mov
int3
sub
mov
shlb
clc
adc
pop
jp
repnz
xor
shl
hlt
dec
ss
cmpsb
jl
xchg
je
mov
jne
jne
xor
sahf
xchg
fs
lds
stos
shrb
enter
cltd
push
mov
in
push
add
push
nop
mov
insl
gs
fisttpll
and
push
stc
jb
popf
mov
jecxz
into
mov
js
ljmp
or
push
push
jmp
inc
or
out
subl
sub
fwait
pop
mov
adc
add
mov
add
mov
inc
xchg
lea
paddsw
stos
push
add
sub
scas
jbe
sbb
xchg
push
pop
cmp
mov
je
dec
aas
mov
push
sahf
cltd
in
popf
mov
jnp
and
cwtl
jge
int
dec
lea
mov
mov
push
movsb
mov
xchg
cwtl
clc
cmpsb
pusha
gs
clc
cmp
xor
xchg
jp
sbb
iret
xchg
shl
std
dec
stos
dec
and
ucomiss
mov
sbb
mov
sahf
movsl
sbb
loop
mov
mov
sbb
mov
mov
pop
adc
imul
out
pop
gs
add
dec
daa
outsb
xor
das
cmpsb
and
cli
add
jmp
jno
push
out
jnp
mov
lahf
filds
enter
stos
jae
cmpsl
loop
in
aaa
inc
dec
shrb
std
push
sub
in
cmp
ret
daa
sub
call
insl
xlat
stos
mov
cmp
iret
mov
sbbb
repz
and
ss
fwait
adc
or
test
cmp
xor
inc
or
dec
jmp
jmp
movsb
ficomps
fs
fsts
stos
push
push
mov
leave
pushf
cmp
jbe
mov
mov
pop
mov
jmp
mov
sbb
mov
fld
scas
repnz
mov
inc
jl
in
jne
into
hlt
push
bound
xor
pushl
adc
push
mov
xchg
nop
mov
cmp
push
sbbl
push
lods
mov
outsb
movsb
mov
repnz
add
cwtl
bound
sub
and
mov
gs
out
sbb
and
negl
jle
mov
bound
or
pop
das
push
pop
shrb
in
xor
mov
lock
mov
push
or
mov
fisttps
push
xchg
jp
push
push
ss
ds
dec
cmc
scas
sbb
shll
mov
mov
out
mov
mov
inc
shlb
cmpsl
loope
inc
addr16
and
sarl
enter
inc
clc
or
push
and
in
cmp
mov
mov
das
sbb
cmp
in
push
inc
cmpsb
hlt
mov
aas
push
adc
mov
lret
jl
pusha
xchg
fistl
dec
or
pop
in
insl
add
cmp
out
jnp
sub
jo
fcompl
arpl
adc
lret
mov
arpl
xchg
mov
xchg
pop
popa
push
call
enter
ja
cmc
dec
jbe
and
aad
cltd
popf
push
adc
mov
out
lret
mov
jecxz
gs
lds
xchg
xchg
sub
mov
xor
mov
or
add
xorb
add
or
gs
icebp
insl
pop
mov
inc
or
xlat
inc
stos
mov
das
cld
push
push
mov
sub
sti
lock
mov
lods
arpl
push
push
pop
cmp
push
in
cwtl
xor
adc
incl
xchg
mov
rolb
jb
xor
dec
and
cmpsb
scas
repz
pop
dec
popf
imul
mov
pop
push
shl
adc
loope
pop
mov
pop
pushf
out
xchg
xlat
push
sbb
testb
mov
sbb
or
icebp
mov
shlb
mov
shrl
cmp
cmpsl
scas
push
adc
mov
cmpsl
pop
mov
push
mov
add
adc
xchg
loopne
jb
imul
cmc
inc
xor
mov
decl
scas
loope
mov
or
pusha
lcall
add
aad
xchg
aaa
mov
mov
scas
sub
movsl
xchg
inc
or
sarl
jecxz
test
jno
mov
addr16
xor
pushf
orb
push
xor
inc
jns
aad
pop
test
fisubl
cmpb
hlt
sub
sbb
mov
mov
and
scas
cmp
repnz
inc
mov
imul
xchg
sbb
pushf
lea
jno
and
addr16
hlt
sti
out
sbb
sub
sub
mov
and
adc
js
fsubs
cs
mov
fstpt
add
ret
adc
xchg
sahf
jecxz
jmp
cmp
pop
mov
jmp
decl
add
jge
rcr
fadds
subb
jo
pop
pop
add
repnz
arpl
mov
test
lods
sub
inc
mov
pop
jle
shlb
popf
mov
mov
xchg
call
loope
out
push
sub
insl
fwait
or
movsl
lods
lods
leave
fldl
xlat
les
xor
cld
push
add
jno
lods
imul
and
inc
out
mov
sub
scas
bound
cmp
push
pop
dec
sub
pop
cmpsl
sub
mov
pop
les
jmp
mov
test
push
pop
mov
bsf
or
mov
mov
lea
dec
shll
movsl
fnstenv
lds
in
sbb
scas
adc
jne
outsl
adc
jno
adcb
and
xchg
dec
out
leave
rcrl
sarb
xchg
clc
fimuls
mov
xchg
xor
push
add
stos
or
pop
sub
jg
fbstp
or
enter
jbe
xchg
mov
iret
lahf
add
hlt
ss
daa
mov
mov
xchg
pop
cmp
pop
sbb
xchg
jns
fisubrs
push
scas
mov
sbb
inc
mov
push
ret
jb
mov
fisubs
and
lret
stos
mov
fstpl
clc
cmp
sub
divl
movsl
cmpsl
cmpsl
push
adc
mov
cli
pop
test
out
pop
add
mov
pop
test
dec
ret
imul
xchg
lods
add
or
scas
add
shl
insb
adc
loopne
pusha
jecxz
ret
loop
leave
jmp
pop
aam
jmp
or
les
arpl
pop
adc
jnp
scas
lds
fsubp
pop
add
mov
mov
mov
lahf
rcr
aaa
popf
repnz
mov
mov
test
xchg
dec
or
push
pop
js
cmpsb
xchg
ret
adc
push
ret
push
inc
and
mov
inc
or
cmpb
inc
hlt
test
aaa
mov
dec
clc
and
mov
pop
lcall
cmp
sarl
dec
int
lea
jmp
dec
repnz
or
bound
sbb
data16
cmpsl
rcrl
fdiv
mov
sub
loopne
sbb
pusha
les
dec
mov
movsl
aas
scas
lock
sub
jecxz
add
call
adc
sub
cmpb
xchg
loopne
mov
lret
xchg
popf
popa
mov
nop
push
push
repz
repz
mov
jne
xor
test
inc
negl
sub
outsb
cmc
pop
cli
dec
out
push
fcomps
cmc
jecxz
test
fyl2x
fisttpll
mov
into
inc
rcrb
xchg
xor
mov
pushw
fwait
out
jp
andb
adc
dec
or
inc
mov
xor
add
shlb
dec
lods
sub
jo
adc
sbb
mov
sbb
rolb
xchg
pop
test
xor
mov
jge
int3
push
pop
sub
out
mov
mov
and
cmp
pop
stc
sbb
xchg
inc
nop
mov
xchg
fimull
xchg
sub
ficoml
xorl
addb
imul
jae
push
xor
not
lods
orb
es
stc
popa
ja
sub
and
xchg
test
cltd
mov
repz
or
inc
push
xlat
inc
push
popf
xchg
xchg
shl
pop
mov
pop
mov
mov
mov
popa
xor
sbb
dec
insl
mov
stc
rolb
mov
sub
stos
lcall
mov
xchg
stos
mov
mov
ljmp
or
testl
test
jo
into
xor
or
sbb
fdiv
and
mov
pop
lret
dec
cmp
movsb
xor
mov
fistpll
fidivrl
pop
xchg
adc
cli
pop
or
sti
icebp
mov
fwait
int
nop
mov
cmp
jmp
mov
mov
or
popa
addr16
inc
repz
or
popf
call
or
ds
push
sub
out
ds
cltd
int3
add
jp
xchg
jnp
fmul
out
mov
jge
addl
out
stos
aas
inc
mov
dec
cmpsl
fisubl
add
les
in
jmp
sub
mov
mov
je
cwtl
xor
sbb
int3
or
fsubrs
lahf
out
lret
scas
lock
test
push
in
fcompl
add
in
and
adcb
out
aaa
ljmp
push
sub
jbe
out
fs
daa
and
pop
push
xor
xor
mov
mov
aaa
xor
xor
bound
dec
into
stos
repnz
andnps
data16
inc
sarb
outsb
mov
or
mov
aad
sbb
adc
test
sti
sahf
mov
sub
cmp
in
gs
cmp
mov
pop
push
pop
mov
dec
sti
pop
in
inc
ret
int3
or
fsub
jg
sub
sbb
loope
cmp
jp
lea
mov
add
sbb
and
ja
lcall
aam
cltd
jecxz
pop
adc
int
or
pop
sub
in
fiaddl
dec
dec
push
sbbl
sub
or
xchg
mov
clc
push
sub
into
loop
fcom
stos
iret
push
lcall
cmpsb
adc
sbb
ret
mov
mov
cmp
scas
sar
sbb
cli
jecxz
xchg
shl
mov
mov
bnd
lret
mov
cltd
dec
stos
mov
cwtl
jno
ss
xor
das
xor
mov
inc
add
nop
daa
stos
cmp
sbb
les
adc
push
pop
test
mov
pop
push
sbb
mov
shll
and
sti
cmp
push
pop
jecxz
jne
jmp
add
sub
cwtl
fsts
push
cmp
pop
mov
gs
leave
xor
popf
loope
popl
pop
jle
loop
bound
mov
pop
gs
js
leave
outsl
push
ljmp
pop
xor
mov
in
lcall
je
iret
test
mov
inc
stos
fisttps
push
push
fucomp
pop
popl
xlat
xchg
mov
cmp
jge
sbb
mov
jno
je
rolb
adc
xor
in
aas
rclb
xchg
jns
xchg
pop
mov
inc
in
dec
pop
sarb
in
mov
movsb
push
inc
imul
push
mov
jg
repnz
cmpsb
dec
push
xor
sub
aaa
je
xor
pop
fdiv
mov
pop
cs
jl
rcrb
test
sub
out
out
mov
xchg
adcb
aaa
fs
and
inc
dec
aas
mov
pushf
sub
or
dec
add
or
punpcklbw
cwtl
push
mov
out
lock
xchg
lcall
push
jge
mov
dec
add
movl
mov
imul
adc
lock
push
inc
jge
adc
aaa
push
mov
cs
push
repnz
fistpll
xor
xchg
jno
mov
inc
xchg
sbb
mov
sub
aam
les
sahf
dec
leave
outsl
mov
ljmpw
and
pushf
sub
add
jecxz
popf
push
lock
nop
orb
xchg
ret
negb
in
sub
inc
filds
mov
mov
in
fildl
loope
lret
int
test
xor
xchg
jmp
inc
sti
add
loopne
add
enter
out
push
aas
scas
sub
inc
sub
fisttpl
xor
push
in
test
ja
or
jl
popl
movsl
ljmp
jecxz
jecxz
jmp
push
push
std
cmp
mov
pop
incb
sub
insl
jmp
jnp
pop
mov
push
pop
incl
adc
cwtl
push
pop
mov
dec
js
pusha
shr
fistps
loope
lcall
test
jecxz
push
inc
sti
pop
sub
fcompl
dec
mov
mov
push
xchg
cs
mov
inc
arpl
jbe
cmp
xchg
cmp
add
arpl
pop
add
arpl
or
inc
mov
jmp
push
xchg
in
out
jecxz
lahf
push
cltd
mov
adc
dec
pushf
sarl
aad
xor
in
adc
jle
xchg
fcompl
std
ficompl
mov
lds
nop
idivl
pop
mov
arpl
or
cmp
popa
xlat
ljmp
xchg
popf
stos
pushf
stc
loopne
cmp
add
lret
out
popa
xchg
les
stos
test
cltd
mov
hlt
push
pmaxsw
mov
pop
test
hlt
loopne
xchg
fs
jg
mov
paddb
addr16
and
repnz
xchg
sub
inc
mov
adc
mov
icebp
xchg
cld
xchg
outsb
xchg
nop
cmp
icebp
and
push
dec
pop
jmp
mov
cmp
xor
mov
hlt
iret
cmp
dec
popa
push
mov
sub
pop
lcall
pop
out
sub
out
sbb
sbb
enter
mov
sub
fisubrl
fimuls
adc
inc
add
jae
in
cmp
stos
les
jecxz
lahf
scas
add
xorl
fs
lods
sti
andb
sbb
jb
aas
sub
add
ds
aas
add
mov
cmp
in
jne,pt
test
or
mov
cmc
stc
lds
dec
and
out
dec
mov
ret
cli
in
pop
rcrb
mov
sbb
fldcw
mov
jb
jle
and
fmull
test
xorl
into
mov
jae
lock
ret
out
or
lret
lret
enter
out
fiadds
cmpsl
pop
ljmp
shll
popf
cmp
loopne
push
mov
repnz
pop
nop
mov
dec
in
dec
sbb
mov
and
sub
mov
in
in
aad
mov
push
sbb
inc
ffreep
or
xor
pop
aad
push
mov
in
add
xchg
xor
lcall
pop
dec
mov
push
out
xlat
pop
inc
jle
fwait
test
sbb
loopne
xchg
test
insl
xor
sahf
hlt
call
push
repz
sub
sti
daa
inc
pop
jp
cmp
icebp
lds
inc
pop
insb
pop
jle
cmp
mov
xchg
movsb
cld
or
sbb
mov
inc
loope
mov
pop
xor
sbb
jns
mov
je
inc
ss
call
mov
shll
xchg
fldl
push
imul
jge
in
inc
cmc
popa
std
fdivrs
out
xchg
stos
sahf
loope
fucomi
and
xorl
lods
sub
mov
repz
lods
repnz
inc
xorb
dec
cmp
jl
inc
ret
and
or
sub
mov
cmp
in
rcrl
push
jmp
lret
cld
xor
dec
pop
pop
sub
mov
mov
sti
pushf
push
dec
jg
sub
das
popf
xor
and
mov
jae
push
sbb
out
testl
xlat
iret
out
std
mov
loope
mov
lods
fbstp
andps
dec
sti
enter
xlat
cmp
pop
popa
sbb
dec
inc
data16
and
pop
fcomps
pusha
add
jno
test
jle
scas
inc
xchg
sahf
add
jno
js
mov
loopne
jl
ss
out
dec
jo
mov
cmp
cltd
inc
popa
inc
add
xor
les
jbe
aaa
frstor
mov
mov
loope
xchg
les
inc
and
mov
jnp
scas
jle
cmp
sbb
mov
cmp
push
andb
icebp
mov
popa
out
jo
xchg
pop
scas
mov
popa
jb
jmp
mov
hlt
inc
mov
or
pop
mov
test
lods
pop
cmpl
fbstp
rorb
inc
notb
add
xor
ret
cwtl
inc
mov
jp
js
mov
mov
dec
out
jl
jl
aas
aam
scas
shlb
jl
imul
mov
movsl
loopne
fadd
or
pushaw
mov
mov
sbb
xor
push
adc
add
pop
lock
xchg
out
and
repnz
ss
add
rclb
shll
pop
rol
ja
insl
movsl
pop
aam
aad
stos
mov
insb
jnp
fidivs
inc
and
and
dec
repz
dec
aad
add
xchg
sub
cmp
mov
ret
push
divl
in
cli
lret
mov
gs
aaa
int
mov
cwtl
out
lret
push
scas
inc
cmp
push
cmp
push
jnp
cmp
mov
mov
dec
aaa
inc
jecxz
loopne
ss
push
inc
xor
or
dec
or
lret
inc
push
cmp
cltd
add
fsubrs
in
mov
lds
cmc
negb
push
xchg
sbbb
pop
lret
jg
imul
popa
insb
fstps
pop
inc
nop
shll
mov
cli
les
xchg
xchg
mov
addr16
jecxz
pushf
dec
scas
push
adc
in
push
cmpsb
in
pop
lcall
repnz
std
js
add
adc
divl
adc
push
xor
xchg
adc
leave
mov
lret
cmpsl
and
repz
daa
lock
stos
pusha
test
jmp
into
call
push
cld
xor
cmp
dec
jns
or
pop
xchg
movsl
xchg
lret
insl
sbb
lods
xor
test
lods
inc
fwait
rcrb
and
int3
int
cwtl
jae,pn
lcall
mov
inc
dec
inc
neg
into
shlb
sahf
lods
push
xor
mov
cmpsl
cmpsb
bsf
js
loopne
push
mov
mov
push
lcall
and
add
dec
stc
cltd
pop
out
mov
jp
gs
mulb
pop
rcll
mov
cld
cmp
imul
sub
in
add
lcall
outsb
inc
aaa
movsl
ds
cwtl
insb
sbb
mov
or
sbb
mov
imul
out
jns
pop
jecxz
loopne
fistl
daa
inc
mov
mov
das
pop
std
loopne
ja
xchg
dec
mov
gs
shlb
mov
mov
dec
jbe
and
test
dec
lods
mov
cmpsl
out
sbb
pop
rolb
jbe
cmp
inc
ljmp
test
mov
cmpsb
jbe
out
fmuls
cwtl
inc
add
insl
nop
scas
ss
mov
lahf
lds
icebp
and
xchg
mov
sub
dec
xchg
pusha
stc
push
lret
and
push
push
pop
inc
jo
loopne
lea
leave
shll
cltd
jb
out
and
dec
leave
xorb
dec
mov
and
es
into
sbb
xchg
push
cmp
rolb
ja
or
jl
lds
jp
loop
addr16
lea
sub
call
sub
push
ss
or
gs
mov
cmp
and
sahf
in
push
and
fisubl
fwait
mov
cmp
sub
std
sbb
jecxz
into
pop
sub
mov
in
fdivl
into
dec
inc
cmpsl
cmc
push
push
stc
addr16
and
jmp
add
hlt
into
je
inc
mov
sbb
test
aas
divl
sub
push
mov
xor
insb
insl
sub
lods
out
xor
xor
and
lret
xor
sbb
xchg
aam
or
sarb
sahf
push
push
iret
sti
fisttps
push
rcr
nop
cmp
fbstp
inc
cmp
cmp
lahf
push
mov
or
mov
pop
jge
cs
js
cmp
dec
dec
repz
mov
mov
ret
ljmp
cmp
inc
mov
xchg
mov
pushf
rclb
shrb
ss
mov
mov
jo
popa
mov
push
ret
push
loope
jl
add
stc
outsb
pop
in
cmp
inc
or
test
inc
insl
add
mov
arpl
pop
sub
aad
xor
xor
aaa
in
xor
adc
stos
jp
movsb
xorl
int
and
mov
cli
outsl
adc
push
and
aam
setge
push
les
xor
push
cmp
cs
int3
xchg
xor
xorl
imul
pop
test
cwtl
cs
mov
lret
adc
or
sub
movsb
arpl
and
cwtl
adc
inc
data16
repnz
add
in
mov
loop
mov
mov
sub
sbb
pushf
rolb
das
mov
pop
rcrb
push
rcrb
adc
dec
insl
shrl
fwait
sbb
es
aas
xchg
aas
dec
sub
dec
sub
sbb
pop
jl
das
mov
jmp
mov
jne
cmc
outsl
push
push
loope
pop
mov
xorb
mov
lods
call
clc
lret
imul
dec
js
dec
imul
movsb
push
and
sbb
daa
pop
notb
cmp
xor
push
sub
mov
jecxz
xchg
cmp
and
fidivl
dec
or
pop
push
push
xchg
das
xchg
and
inc
std
sbb
ss
imul
das
jb
adc
or
or
cmpb
iret
sub
out
sub
lods
scas
lret
pop
ret
test
aaa
movsl
dec
jmp
xchg
aam
idivb
bound
inc
inc
add
ror
sbb
aas
in
xchg
and
and
push
mov
cmp
pop
sub
xor
rorl
mov
inc
inc
mov
or
and
xchg
xlat
xchg
pop
jnp
cwtl
rcll
cmpsb
mov
mov
jne
jbe
aad
fadd
in
xor
cmpsl
xchg
sbb
mov
rol
cmpsl
push
sbb
ljmp
xchg
xor
mov
sbb
lods
cltd
mov
pop
sbb
cmp
and
pushf
adc
in
lea
pop
and
push
mov
fisubs
xchg
mov
mov
xor
pushl
les
xor
cmp
ficoms
mov
lock
adc
xchg
mov
sub
cmp
sub
mov
mov
jl
xchg
ret
and
mov
pop
xchg
jb
sub
aaa
lock
jne
scas
sarl
xor
into
inc
add
rclb
pop
in
pop
pusha
nop
add
and
fiadds
dec
sub
cld
cmpsl
mov
dec
pop
pop
cmp
shlb
ljmp
subl
out
test
cli
call
mov
imul
rolb
fstl
jne
hlt
cltd
or
dec
mov
mov
scas
scas
push
mov
inc
int
sub
out
daa
in
mov
inc
nop
cmp
out
fwait
mov
xchg
add
scas
mov
cmp
inc
loop
aam
in
fisubrs
adc
orl
addr16
xor
popl
cltd
je
lods
mov
into
cmpsl
cmp
sahf
iret
mov
cmpsl
es
repz
or
sub
jmp
xor
ficoms
aam
sbb
ret
aad
sbb
bound
loopne
mov
xor
imul
adc
outsl
pop
sub
sub
js
mov
push
test
ficoms
movsl
adc
adc
nop
leave
cmpsl
stos
push
decl
mov
push
loopne
mov
or
jge
cmp
pop
je
jnp
dec
mov
test
outsl
xor
inc
cmc
ror
sbb
stc
fdivl
pop
inc
popf
pop
test
fcomps
mov
rol
adc
xor
outsl
inc
bound
or
cmp
jmp
pop
jnp
mov
outsb
jns
push
sahf
popa
dec
and
mov
jbe
xchg
inc
scas
test
and
pop
xor
sub
jne
repz
mov
mov
dec
call
test
lea
and
push
push
dec
in
outsl
and
es
jl
daa
pushf
fcmovbe
jg
push
mov
jmp
sbb
pop
pop
jecxz
repz
add
inc
cmpsl
mov
sub
cmp
xor
out
add
loop
xlat
jb
mov
repnz
inc
and
sub
jns
mov
inc
popa
nop
je
std
cltd
arpl
jp
xor
movsb
mov
pop
push
xchg
loopne
hlt
xor
push
add
mov
adc
imul
mov
cmp
mov
mov
xor
enter
int3
push
into
loop
add
push
std
outsb
movb
xchg
xor
cltd
ljmp
insb
jmp
lds
jnp
cltd
sub
hlt
jne
mov
xor
mov
pop
jmp
adcb
outsb
and
mov
sti
movsl
pop
scas
jbe
in
xchg
sti
fmull
stos
jmp
jge,pt
pop
dec
adc
push
sti
adc
and
pop
int3
add
repz
xchg
popa
jbe
inc
out
push
cmp
addr16
push
jns
nop
adc
es
dec
xor
and
fcmovnbe
clc
cli
sub
nop
push
jo
xor
xor
mov
mov
push
mov
xor
movsl
push
stc
mov
jge
mov
ljmp
mov
mov
repz
pop
ss
push
subb
cmp
dec
sub
repnz
stc
mov
fbld
scas
and
dec
je
xor
push
xor
aaa
and
les
insl
lea
and
adc
dec
loop
pushw
xchg
push
mov
and
push
mov
cwtl
aas
inc
into
sub
adc
mov
subb
mov
inc
mov
outsb
dec
fistpl
mov
ss
mov
adc
pop
icebp
aam
clc
ret
dec
cmpsl
enter
cltd
stos
sbbb
popf
inc
pop
cltd
sub
jg
arpl
pop
test
push
divl
push
dec
add
test
movsb
and
pop
rcll
xchg
repz
pop
aas
into
cli
dec
dec
add
xor
mov
mov
shll
ret
pusha
inc
int3
test
and
out
jge
dec
xchg
jp
loop
repz
lret
push
jp
iret
add
mov
out
push
cmp
ljmp
arpl
call
movsl
inc
mov
push
das
xlat
lock
pop
add
js
cld
popa
xchg
enter
jae
mov
shll
push
out
hlt
scas
in
cmp
scas
xor
adc
and
stos
mov
adc
pop
jo
xchg
and
adc
mov
pushf
cmp
notl
dec
mov
aas
push
cwtl
add
add
pop
mov
aaa
aam
lds
out
iret
pop
push
lea
in
add
mov
fsts
or
daa
sti
pop
sub
sbb
test
pop
bound
insb
mov
aaa
mov
repz
daa
stos
cli
pop
inc
jns
dec
shl
mov
mov
or
cmp
adc
and
adc
aam
push
pop
aaa
iret
mov
and
inc
mov
mov
xchg
daa
xchg
or
sbb
ss
rcl
iret
inc
adc
fs
pop
sub
daa
mov
mov
scas
pop
push
jge
xor
mov
sub
or
ret
packssdw
inc
clc
ss
bound
inc
test
pop
inc
cmp
div
mov
pushf
lods
test
inc
nop
pop
fwait
dec
adc
inc
mov
lods
test
lcall
arpl
sahf
dec
insb
mov
sub
aad
dec
popa
nop
jmp
pop
sub
push
jo
mov
add
movsl
data16
push
pop
faddl
push
out
sbb
push
sbb
out
mov
mov
shll
lcall
xchg
std
push
mov
dec
iret
xchg
out
xchg
clc
stos
in
aas
je
or
mov
mov
enter
xor
mov
ja
lret
enter
fistl
bound
push
mov
mov
or
mov
ljmp
cmpsl
inc
ret
loope
mov
loope
sbb
mov
or
or
jmp
jg
cmp
add
jmp
sub
cwtl
scas
mov
jmp
mov
scas
rcrb
jmp
xor
jne
sub
lahf
loop
add
shll
cltd
test
pop
or
mov
add
adc
jo
imul
xchg
sub
pusha
mov
xor
fsts
xchg
xchg
xchg
lret
mov
iret
popa
push
push
sub
jno
push
imul
xchg
inc
lcall
add
or
cmp
jns
mov
pop
sbbb
sub
adc
inc
pop
sub
repnz
pop
mov
mov
ss
or
jl
push
sub
jo
xchg
loopne
dec
sar
repnz
jmp
jle
in
daa
push
lds
movsl
jmp
mov
pop
imul
cwtl
sbb
movsb
mov
test
mov
jmp
loope
rcrb
neg
adc
jp
cmp
xchg
mov
movsl
out
inc
cs
aaa
xlat
outsl
and
insl
add
jo
icebp
pusha
mov
mov
lcall
add
mov
push
loope
ja
stc
movsb
xor
das
push
fsubl
xor
add
imul
and
sti
inc
cmp
inc
dec
jle,pn
pop
sbbl
insl
inc
xor
xchg
sub
es
pop
push
fs
iret
subl
adc
dec
push
dec
xchg
mov
and
stos
add
mov
jmp
mov
push
add
or
adc
sti
hlt
lods
push
xchg
pusha
xor
or
pop
fisubrs
pop
rorb
test
adc
cmc
pop
roll
popa
loope
cwtl
sub
mov
mov
jge
mov
dec
sbb
mov
rorl
sbb
loopne
jns
jnp
xor
movsb
lret
jbe
jnp
xchg
and
jbe
xchg
or
out
mov
lahf
loopne
sarl
pushf
jns
mov
push
rorl
pop
cmp
pop
and
rol
test
out
cld
scas
call
sub
xor
fldenv
fwait
lret
mov
push
adc
mov
out
mov
or
sbb
jae
xchg
stos
pushf
cmp
into
inc
popa
inc
stc
je
xchg
lret
xchg
fwait
mov
xchg
shll
mov
inc
data16
es
test
cmp
inc
push
negl
shl
rcrb
jle
mov
sbb
daa
inc
cmp
mov
pop
push
adc
jg
push
pop
pop
pop
xlat
adc
mov
sbb
pop
jge
ret
xchg
mov
pop
xor
jae
adc
pop
mov
imul
add
jge
mov
loopne
lret
pop
ffree
pop
pop
call
jecxz
add
mov
cmpb
push
mov
pop
in
jmp
inc
push
idivb
pushf
shlb
scas
aaa
test
sarb
loopne
pop
fcomps
push
cmc
inc
fwait
lret
enter
cmp
cltd
inc
xchg
xor
sbb
das
sahf
aas
bound
push
lock
shr
fldcw
jecxz
decb
inc
test
xor
sarl
pop
push
decb
mov
lcall
mov
inc
pop
or
mov
xchg
std
jmp
adc
cmpsl
jb
jg
push
jle
add
shr
dec
mov
fisubrs
fidivs
loop
push
out
ja
dec
inc
jae
jno
jb
mov
stc
scas
add
into
icebp
jo
movsl
in
mov
cmpb
inc
add
sbbb
push
data16
insl
inc
sbb
jno
nop
cmp
out
pop
ret
push
and
or
mov
icebp
adc
push
jmp
dec
pushf
lods
or
divl
lods
and
jp
into
pop
jnp
push
push
test
pop
int3
sbb
repnz
ja
adc
xchg
aaa
das
or
and
inc
mov
push
push
inc
movsb
inc
adc
iret
sub
add
insl
push
ret
or
mov
outsb
jne
dec
adc
ljmp
cmp
xchg
out
das
out
xor
cs
sbb
or
sbb
rcll
or
sub
adc
mov
mov
add
nop
push
sub
cmp
sbb
fwait
hlt
jno
insl
mov
addl
outsb
scas
pop
mov
or
rolb
div
int3
in
iret
sbb
fsts
adc
inc
sbb
nop
inc
outsl
arpl
cmpsl
loope
scas
inc
and
das
ret
push
fs
jae
sbb
inc
mov
popa
jbe
mov
add
orb
dec
jmp
lret
sahf
data16
jle
jno
pop
fimuls
enter
rorl
mov
mov
push
pusha
pop
jmp
sarl
fmull
dec
in
pop
stos
push
ds
adc
cwtl
xchg
arpl
dec
cmpsb
jno
movsb
pushf
inc
adc
pop
add
pop
jl
in
push
jno
nop
out
sbb
outsb
iret
sub
or
insl
idivb
enter
mov
je
xchg
cwtl
test
mov
stos
jl
or
add
rorl
adc
lods
adc
jbe
ds
xchg
push
ja
rdtsc
pop
xchg
cmp
jnp
cmp
and
rol
imul
sub
xchg
adc
js
pushf
mov
ret
aad
popl
cld
adc
xor
jg
mov
and
xor
cmp
xchg
scas
shlb
xor
cmpb
int3
and
jb
les
mov
nop
scas
sub
xchg
inc
pop
fwait
cmc
fimuls
loop
cmp
out
repnz
loope
inc
mov
mov
push
push
scas
jmp
jle
push
flds
es
loope
clc
stos
shl
xchg
scas
adc
xor
enter
jecxz
gs
xchg
testb
testl
outsl
add
cmpb
cmp
daa
out
dec
sbb
out
shr
jns
jmp
ficompl
cli
aas
test
mov
inc
call
and
push
mov
adc
sub
fwait
jo
xor
aad
and
lahf
rorb
ret
adc
push
push
aaa
sbb
adc
mov
jnp
xchg
dec
test
ja
imul
cmp
or
bnd
shlb
mov
adc
cmp
fildl
inc
mov
xor
cld
int
pop
stos
mov
adc
adc
inc
and
add
mov
add
and
mov
inc
sub
jne
adc
and
outsl
cmpsl
in
dec
inc
push
and
test
or
js
das
mov
stos
scas
leave
aad
push
js
push
sub
pop
mov
jnp
testb
loope
test
xchg
sbb
pop
in
xchg
je
in
out
imul
and
jle
stc
clc
mov
or
aad
mov
aaa
inc
pop
packssdw
lea
inc
movsl
xchg
inc
cmp
lcall
xchg
or
sahf
push
test
sbb
and
popa
cmp
add
add
or
repz
orl
push
into
mov
cld
and
jb
aam
mov
movsl
sub
sub
sbb
and
mov
mov
xchg
aam
imul
jne
lea
sbb
pusha
or
fistl
or
jae
mov
mov
push
and
dec
call
xor
cmp
in
imul
fwait
out
inc
dec
mov
scas
loop
sub
pop
pop
fcoml
fwait
mov
mov
les
sbb
inc
bound
mov
cwtl
hlt
push
xchg
push
mov
fwait
mov
xlat
fnstcw
xchg
imul
jo
cmp
in
lret
dec
lds
mov
pop
sbb
mov
sarb
jb
lret
and
jo
xchg
or
int
notb
out
ret
add
dec
xchg
movsl
jns
inc
fnstcw
std
mov
out
fwait
cmp
les
fs
add
outsb
fldcw
loope
outsl
clc
xchg
mov
inc
divl
or
cmp
es
dec
inc
pushf
lret
lods
xchg
mov
faddp
sub
cmp
xchg
test
push
shll
inc
sbbl
xchg
sub
cli
lods
sbb
test
jmp
xor
pop
pop
mov
fbld
xor
out
jns
push
lahf
pop
pusha
jnp
xchg
fsubrs
int
xchg
stos
sub
iret
xorl
mov
aad
pop
cmpsl
sbb
xor
iret
or
imul
cmp
stos
and
adc
pop
xchg
xlat
add
pusha
or
mov
xor
xor
cmpsl
das
ja
xlat
inc
scas
insl
decl
aas
or
repz
es
int3
xchg
in
outsb
in
test
push
add
scas
push
movsl
sbb
cmp
fisubrs
xlat
jmp
test
aas
jns
push
call
cmp
adc
fdivr
jns
mov
rcl
fnsave
jns
dec
pop
jns
add
adc
int3
sar
daa
add
xor
jp
lret
lcall
push
sub
dec
lret
pop
push
cli
in
pop
shlb
dec
negb
push
or
mov
or
inc
mov
mov
jp
aam
movl
sub
jge
les
mov
cmp
inc
dec
xchg
jmp
mov
stos
arpl
sub
or
dec
and
cmp
xor
aam
js
imul
inc
sub
dec
jmp
pop
xor
fldt
and
xor
adc
push
xor
push
in
or
mov
push
sbb
jno
outsb
out
jnp
subb
add
inc
or
aas
int
je
mov
sub
inc
cld
dec
mov
sbb
in
jae
jne
shrb
inc
fimull
fistl
js
mov
xor
jns
sti
scas
movsb
mov
enter
jp
popa
leave
inc
xor
adc
jno
cmp
fwait
loopne
inc
repnz
cmp
dec
clc
mov
and
aad
jae
shlw
cmp
adc
mov
add
imulb
xor
imul
xlat
cmc
enter
ja
loopne
aas
mov
xchg
inc
iret
outsl
push
push
sub
lea
or
lret
xchg
mov
fbstp
mov
cmp
movsl
ds
or
or
jg
mov
jbe
fldt
aad
mov
cwtl
movb
in
lods
mov
pop
std
cwtl
sub
gs
in
mov
lods
sub
je
sub
jbe
scas
movsl
sarb
dec
jge
test
xor
and
cmpsl
cmpsl
jle
xchg
nop
loope
orb
mov
mov
xchg
ffree
shll
call
mov
and
in
fptan
lock
std
pop
movsl
out
fisttps
cmc
mov
jg
pop
jbe
cs
data16
mov
lcall
and
mov
inc
imul
std
mov
lret
mov
mov
xlat
fisubrs
movsb
sahf
jbe
pop
fiaddl
fldl
popa
ss
imul
sub
pop
jne
addl
je
movsb
xor
pop
call
jmp
pop
sbb
sbb
jge
cmp
mov
or
data16
inc
inc
aam
out
shlb
inc
add
adc
add
inc
cmpsl
mov
iret
stos
xor
cmp
imul
pushf
xchg
fdivrl
mov
cmp
mov
repnz
cmp
es
das
in
repnz
ss
add
aas
mov
shrl
push
out
push
push
enter
pop
cmp
jnp
mov
add
inc
sbb
sti
dec
ficompl
fadds
cs
fistl
sar
xor
lret
lret
test
and
insb
movsb
dec
cmpsb
jmp
lret
loope
sub
lcall
mov
mov
js
jmp
pop
and
mov
ret
mov
xor
bound
xor
adc
jno
cmp
nop
push
fnstsw
inc
add
ljmp
push
dec
or
adc
pop
out
add
sbb
pop
push
cwtl
ret
dec
adcb
or
mov
mov
out
je
mov
cmpsl
xchg
dec
gs
cmc
cmpl
mov
lds
inc
out
call
pop
mov
in
pop
jo
mov
mov
pop
cmp
pop
ds
outsl
mov
or
jae
shrb
jne
out
ljmp
fstpt
cmp
mov
pop
gs
sbb
adc
pop
jo
cs
nop
jo
jl
push
dec
rcll
xor
in
xchg
mov
fnstenv
mov
sub
sti
hlt
push
push
repnz
js
jo
sub
pop
rcrl
mov
cs
lahf
xchg
dec
push
mov
and
int
mov
mov
pop
out
jl
fwait
mov
cmp
movsl
jne
dec
cltd
ror
and
inc
inc
fldt
popf
dec
push
mov
jp
jbe
nop
ret
cmp
xor
scas
mov
mull
imul
pop
xchg
js
daa
inc
mov
sbb
push
xor
sub
xchg
inc
jne
fmull
cli
lds
mov
addr16
mov
aaa
cltd
jb
push
adcb
in
jl
add
icebp
sbb
push
and
lods
cs
lcall
gs
in
jns
or
cmc
cwtl
push
sub
in
jae
mov
mov
jno
mov
xor
rorb
call
mov
stos
cmpsb
mov
or
je
inc
arpl
and
aas
push
in
inc
not
ret
jl
aad
sahf
mov
shll
int
in
mov
loope
mov
adc
rorb
cld
xchg
cmc
imul
hlt
jecxz
insb
or
movsb
mov
adc
inc
push
dec
and
xchg
nop
or
ret
movsb
inc
cwtl
setae
sbb
ljmp
cmpl
mov
shr
mov
pop
adc
shlb
cmp
and
cmpsb
or
int
dec
mov
push
ja
or
jge
add
fstps
mov
inc
loopne
jae
into
inc
cmc
xor
jno
xor
adc
mov
pop
mov
push
sbb
fwait
sbb
xchg
loop
incb
rcrl
bound
out
and
adc
bound
loopne
lea
or
ror
leave
loop
xchg
inc
dec
stos
fsubs
xor
pop
xor
cmp
fidivs
inc
hlt
push
mov
dec
mov
xchg
mov
repnz
lcall
push
sub
hlt
popa
mov
testl
cmp
imul
ds
pop
push
loop
ret
ror
popf
and
adc
fsubrl
mov
insl
add
jns
xor
nop
cmp
stos
pushf
scas
and
stos
stos
xor
aas
or
int3
cmc
scas
mov
or
lcall
fwait
repz
ret
xlat
xor
jmp
lcall
xchg
add
mov
add
sbb
jmp
mov
aad
test
inc
imul
xchg
pushf
stc
adc
int
mov
pop
in
xchg
adc
adc
and
dec
mov
adc
cltd
ja
cmp
sbb
or
or
jb
cmp
outsb
push
or
incb
jbe
dec
push
enter
imul
mov
lret
push
cmp
std
sbb
xchg
xchg
jns
daa
mov
jle
addr16
jge
mov
dec
fucomp
sti
stos
push
dec
and
stc
shll
in
lcall
rcll
inc
pop
pop
mov
std
push
mov
jne
lds
addb
imul
adc
out
sub
mov
hlt
idiv
int3
rcrb
xchg
dec
xchg
stos
scas
call
mov
jg
xchg
std
sbbb
inc
or
leave
mov
fnstsw
xchg
dec
pop
repz
push
push
pop
xor
shrb
mov
sahf
mov
push
sub
mov
pop
mov
adc
jo
pop
sub
pop
mov
dec
xchg
xchg
xchg
in
sbb
out
adc
push
data16
mov
out
popa
sets
icebp
adc
sub
loope
xor
std
ficomps
or
cmc
cmpsb
adc
inc
lods
aaa
jae
shlb
jl
stc
lea
loope
into
xor
mov
sti
adc
pushf
pop
mov
daa
out
repz
push
and
mov
cs
inc
ljmp
sarb
and
cmp
mov
add
cmp
cmp
inc
sub
jp
leave
sbb
std
repz
push
jno
test
or
xor
out
adc
and
lcall
mov
shl
mov
les
mov
sbb
lret
mov
sbb
add
shll
pop
add
mov
xchg
cmp
xor
xchg
mov
mov
cli
insb
movsl
mov
mov
sahf
jle
push
and
test
and
mov
mov
sbb
dec
push
jg
xchg
push
inc
jae
cld
push
into
inc
int
push
mov
cmp
lods
lods
or
xchg
lret
push
out
jae
lods
jbe
movsb
into
idivl
mov
in
mov
inc
dec
in
mov
repnz
inc
jg
adc
sahf
popf
insb
cmp
dec
add
jnp
sbb
repz
mov
pop
shlb
add
in
repnz
jo
inc
inc
bound
jne
push
cld
cmp
leave
lret
loopne
int
mov
mov
adc
mov
rcrl
lret
jnp
xor
inc
xchg
push
stos
sub
ret
push
add
out
std
int3
repz
mov
movnti
push
loop
adc
xchg
mov
pushf
add
cmp
movsb
leave
adc
loope
dec
and
sti
and
jbe
or
imul
data16
fistpll
mov
xchg
jmp
mov
aam
lock
xchg
sub
and
fistpll
and
push
sbb
dec
bound
lret
popf
sti
shl
mov
mov
lock
xchg
repnz
inc
inc
dec
sti
jbe
sbb
mov
sbb
mov
and
mov
mov
in
xor
mov
xor
cmp
jo
fdivrl
xchg
sub
jmp
xor
mov
pop
shlb
xor
popf
adc
jne
or
sbb
rcrl
std
pop
in
pop
fistl
pop
xor
les
dec
loopne
subl
adc
mov
push
subb
aas
adc
daa
out
xchg
fimuls
push
cmpsl
fld1
icebp
xorb
out
scas
jns
cli
test
cmpl
xorl
jbe
jmp
cwtl
mov
cmpsl
je
pusha
jbe
cmp
inc
cmc
mov
jmp
xor
lods
nop
mov
sub
mov
iret
insb
dec
mov
rorl
push
mov
mov
je
sbb
or
fs
sahf
aaa
fidivs
dec
add
mov
fwait
sbb
stos
pop
test
adc
mov
fistpll
insl
lret
mov
mulb
push
negl
fists
mov
xchg
cmp
jnp
jmp
or
bound
data16
testl
mov
xchg
shlb
bound
sub
es
shlb
jne
sti
outsl
pop
push
fists
pop
mov
insb
aam
xchg
call
cmp
inc
repz
lock
jl
xlat
fwait
in
scas
pushf
mov
push
jmp
leave
push
icebp
mov
lret
jge
sbbb
and
fs
inc
jo
and
mov
aaa
inc
ret
cltd
lea
lods
push
lret
push
xor
jle
sub
xor
mov
enter
xchg
or
jmp
fs
int3
cmp
imul
xor
jns
pop
loop
or
inc
andb
xchg
mov
sub
aaa
jo
movsb
movsb
sbb
pop
cli
mov
add
and
push
fneni(8087
int3
je
xor
dec
push
outsb
push
sti
mov
xor
pushf
shrb
repnz
jne
pop
outsl
push
pop
sbb
add
fldt
arpl
mov
out
enter
add
add
adc
sub
push
out
mov
pop
lock
loopne
or
mov
sub
in
push
popa
add
mov
imulb
imul
aas
mov
daa
lret
loopne
sub
call
inc
pop
dec
lea
loope
mov
mov
sbb
or
and
in
sub
jge
stos
lds
lea
lret
outsb
pop
cmp
int
cwtl
pop
ss
in
fmuls
lods
push
jb
outsl
call
push
cs
insl
mov
xlat
vorps
cmp
lcall
sub
or
lret
js
and
or
cltd
mov
xor
pop
adc
insl
popa
test
push
mov
ljmp
ret
clc
loope
mov
test
cmpsl
test
arpl
stc
aas
fldl
sbb
push
lret
jge
pop
jmp
adc
stos
push
inc
cmp
lret
jge
add
fisubl
fldl
out
sbb
mov
fld
xorl
outsl
add
add
and
adc
adc
jnp
xchg
mov
xor
into
push
mov
or
mov
jmp
nop
and
mov
iret
xchg
movl
sbb
cltd
sub
imul
icebp
push
xor
xchg
pop
push
mov
movsl
in
daa
rolb
xchg
fcoms
or
test
sub
push
sbb
ja
mov
xor
aaa
add
cmp
cmpl
daa
sbb
lock
adc
or
repz
sub
addb
repz
js
dec
testb
jno
out
jl
mov
cmp
les
cmp
dec
js
sahf
mov
cltd
scas
std
mov
test
sbb
cwtl
mov
jbe
push
adc
push
xchg
cmpsl
mov
data16
in
rcll
lret
mov
dec
xor
jno
jge
jge
jmp
pusha
pop
add
shlb
pop
add
xor
xor
test
lods
pop
hlt
xchg
mov
and
fistps
rorb
cmpsb
pop
test
inc
lret
inc
in
cmp
mov
lss
sbb
scas
inc
arpl
adc
lahf
jge
sbb
sbb
push
fsub
das
push
dec
ljmp
pop
add
gs
popf
lock
ss
cli
adcb
or
dec
jmp
mov
es
push
push
stos
pushf
fwait
mov
int3
clc
pop
mov
fadds
add
pop
pusha
cs
arpl
xchg
repnz
and
sar
adc
clc
adcb
pushf
pusha
ret
lret
stc
andl
push
sbb
imul
mov
lock
push
and
test
jle
xchg
stos
inc
test
test
and
lret
sub
popa
mov
xchg
mov
std
into
lods
pop
adc
mov
jne
or
mov
les
shl
sti
cmc
adc
cmpl
sbb
mov
int
pusha
xor
lods
mov
jl
stos
push
fistpl
repz
stos
fucomp
inc
pushf
hlt
and
inc
pushf
dec
jmp
test
rcrb
jp
jl
lret
cmp
mov
imul
mov
xor
or
movsb
sbb
int3
loop
mov
out
xorl
mov
cwtl
jle
xor
adc
dec
xor
icebp
dec
xor
sub
jl
popf
popw
pop
inc
incl
pop
jg
testl
push
xchg
jnp
push
and
add
adc
rcrb
test
pop
push
adc
pushf
sbb
push
xchg
orb
push
shlb
push
cmp
jp
push
sub
decl
fistpll
xchg
push
mov
sar
std
mov
pushf
push
inc
scas
into
fwait
stos
dec
aaa
dec
xchg
push
mov
js
inc
pop
jg
in
jns
dec
mov
fs
in
sub
jno
out
mov
lods
cwtl
dec
mov
mov
test
mov
mov
leave
aad
aam
jg
or
jge
jnp
call
repnz
ret
cmp
xchg
mov
and
lahf
movsl
cmp
pop
out
sbb
sbb
adc
xor
cmp
sub
dec
dec
jp
enter
push
jbe
and
arpl
mov
jg
imul
ffree
js
stc
inc
add
dec
add
and
fldenv
testb
pop
jp
fwait
push
fwait
sti
pop
popf
or
cmp
in
push
adc
aaa
loopne
jo
inc
shrl
fisubs
fbstp
cmp
add
xchg
adc
mov
outsb
jp
clc
pop
xor
mov
cmpsb
lock
sarl
sub
mov
mov
outsb
aam
inc
xor
dec
cmp
mov
inc
jbe
xor
push
mov
jl
cmpl
mov
lea
xor
mov
addr16
jecxz
xchg
outsb
in
pop
dec
stos
pop
mov
add
mov
addb
mov
mov
add
fsub
mov
cmp
pushf
pushf
jnp
mov
cmp
push
mov
mov
fmuls
push
add
fnsave
cltd
outsl
jle
and
stos
leave
xchg
mov
cmp
xor
call
dec
or
cmovo
test
in
ljmp
fistl
rorb
fwait
adc
dec
mov
sarl
ja
xor
iret
and
je
stos
lds
add
aad
xchg
mov
dec
call
scas
xor
dec
mov
ret
sti
jp
es
push
int3
ds
into
mov
push
in
pushl
cmp
rcrb
mov
loopne
jecxz
xor
mov
fwait
lcall
or
jecxz
mov
jb
test
shr
push
xchg
fistpll
movsl
repnz
rcr
hlt
fisubrs
adc
addb
aas
sub
jle
outsl
ds
dec
sbb
mov
adc
out
jmp
add
mov
dec
lods
stos
cmp
and
fdivrl
mov
das
xchg
pusha
adc
stos
inc
cmp
in
pop
pop
inc
das
pop
xchg
adc
fsubl
pop
push
call
nop
stc
mov
fs
enter
repz
addr16
inc
jbe
pop
fcomi
mov
ds
imul
rcrb
fiaddl
xor
cltd
lods
loope
ret
lret
dec
pop
inc
jo
pop
pop
inc
arpl
dec
xchg
add
int3
pand
push
inc
push
xchg
pusha
pop
dec
cmpsb
call
dec
popf
das
jle
ss
andl
adc
mov
and
xor
jmp
inc
inc
push
lea
sbb
mov
push
xor
popa
cmpsl
stc
add
sahf
test
fcmovnu
in
jge
popa
cltd
sti
movsb
lcall
xor
and
add
loope
mov
cs
out
arpl
imul
ss
mov
pushf
repnz
jp
lock
test
jmp
sub
inc
push
mov
push
shll
sbb
clc
icebp
xchg
test
insb
fwait
add
push
push
repz
into
addr16
sahf
daa
dec
cmc
imul
aad
fwait
pusha
inc
in
mov
out
jnp
dec
lock
sub
jp
dec
adc
loopw
stos
xchg
fisubrl
xor
jl
cli
pop
or
daa
fs
fimull
sub
mov
jp
jmp
movsl
cld
bound
into
or
or
dec
jmp
xor
clc
mov
jno
jnp
setle
rol
fidivl
sub
mov
xchg
jge
sahf
cmp
imul
das
movsb
push
jl
or
mov
push
jg
jp
inc
sub
out
sahf
and
lea
rcl
mov
mov
outsl
dec
jp
sbb
in
xchg
sub
mov
add
mov
rcrb
clc
dec
addl
or
push
call
jno
pop
fs
sti
sbb
xchg
in
out
das
mov
lret
scas
jle
ds
mov
xor
call
xchg
mov
test
mov
loope
xor
lods
push
adc
dec
inc
mov
je
ror
or
ljmp
aad
cmp
repnz
pusha
adcl
lahf
mov
jmp
adc
cmp
sub
sub
push
mov
push
pop
or
cwtl
cmp
jb
jbe
aam
mov
dec
hlt
stos
les
aad
out
inc
mov
sarb
jno
in
inc
or
stos
xor
and
sub
ljmp
in
adc
dec
mov
dec
mov
add
mov
and
bound
out
mov
dec
jmp
mov
aam
mov
inc
pusha
dec
pop
call
shll
sti
mov
dec
sbb
mov
push
xchg
or
cmc
mov
dec
cmc
add
jl
pop
aas
adc
mov
iret
xchg
dec
jno
enter
adc
sbb
ficoms
push
pop
cmp
add
loop
xchg
cs
outsb
pop
dec
pop
dec
adc
cmp
andl
add
mov
jg
insl
lods
adc
cmp
adc
xor
jecxz
push
call
lock
jno
adc
and
sbb
mov
das
push
mov
jmp
jns
repnz
fcomip
cmpb
and
xchg
cs
enter
movsb
dec
imul
loop
jnp
inc
or
repnz
pop
testb
xor
stos
jo
hlt
adc
push
hlt
inc
rorl
outsl
adc
data16
or
cmp
pop
cmp
pop
add
xchg
fninit
push
sub
dec
data16
pop
mov
dec
fs
das
adc
jmp
adc
mov
adcb
cli
or
not
add
roll
mov
pop
jo
and
fs
mov
rcr
pop
adc
jecxz
pop
sbb
xlat
jl
xchg
adc
ljmp
jae
insb
add
scas
adcb
mov
bound
xor
inc
pop
dec
xor
and
pop
dec
inc
ds
jbe
aas
popf
and
shr
jno
jg
lea
ja
scas
adc
lods
xor
and
inc
pop
mov
mov
adcl
aas
je
fxch
sbb
loope
add
pop
jle
rcl
dec
mov
shll
pop
in
jmp
or
push
push
insb
mov
dec
and
inc
enter
hlt
popa
cmp
cmp
sbb
xchg
or
inc
mov
dec
add
ljmp
fnsave
stc
hlt
mov
cwtl
jmp
mov
bound
pop
mov
ljmp
push
ret
cld
int
xor
aam
xor
loopne
mov
adc
rcl
popf
mov
test
iret
stc
pop
inc
mov
out
xor
jae
decb
lret
jnp
pop
jae
jg
ret
inc
mov
mov
hlt
sub
int3
inc
js
sarl
mov
cwtl
push
and
in
and
loop
je
daa
add
filds
xchg
js
outsl
cltd
dec
cmp
js
lea
sbb
inc
andl
pop
cli
enter
bound
xchg
cmp
or
arpl
aaa
popa
jge
jl
push
in
xor
rclb
jg
mov
test
loope
icebp
cmp
popa
vfmsubaddpd
sub
mov
and
or
inc
mov
out
lea
cmp
adc
scas
sahf
cmp
mov
pushf
dec
mov
mov
inc
push
int3
ljmp
ret
inc
ss
mov
push
mov
aas
cmp
les
cmpsb
sub
in
lds
fs
mov
mov
cmp
aas
dec
dec
sbb
bnd
movsl
dec
dec
mov
and
jmp
out
xorb
aam
or
inc
fdivr
sub
mov
leave
test
in
fldcw
and
push
lret
cmp
push
sub
mov
xchg
js
dec
lds
push
aaa
add
sbb
out
sub
or
fists
adc
out
mov
push
lods
scas
push
push
cmp
pop
repnz
adc
ss
into
mov
out
pop
sub
pop
adc
lock
inc
mov
mov
sbb
call
xlat
or
ljmp
sbb
test
or
std
stos
cmp
sbb
or
adc
addr16
push
or
popf
add
push
icebp
fistps
lods
or
fs
inc
sti
fwait
ljmp
xor
xor
dec
mov
jmp
mov
clc
stc
scas
les
push
jle
push
nop
mov
pusha
mov
jge
mov
enter
mov
add
out
jle
pop
or
lods
pop
jecxz
enter
sbb
jp
scas
lret
or
adc
stc
adc
mov
dec
push
andl
je
sar
push
xchg
pop
rclb
ljmp
nop
xchg
in
sti
or
insl
in
mov
pop
dec
ret
mov
mov
in
insl
scas
inc
pop
dec
mov
inc
jmp
out
hlt
pop
xchg
inc
insb
mov
mov
jg
xchg
movsl
add
loope
mov
and
push
leave
mov
mov
das
sbbb
xchg
ret
sti
lods
pushf
pushf
cmp
cmp
stc
les
sarb
cmp
push
out
adc
fwait
cli
sbbb
mov
mov
stc
leave
inc
mov
fcomps
jns
jge
cld
inc
addr16
inc
icebp
jp
lahf
stc
das
lds
idivl
push
jecxz
scas
mov
mov
xor
mov
lods
pop
int
push
lods
cld
xchg
outsl
adc
push
push
cmp
imul
repz
cmp
mov
sarb
out
xchg
sub
push
mov
mov
jbe
inc
push
scas
inc
mov
iret
inc
lcall
bound
movsb
and
or
outsb
bt
add
pop
xor
cmp
pushf
cwtl
jae
cmpsb
push
push
int
sbb
and
cmp
add
movsb
add
repz
rorl
lock
dec
xchg
sbb
adc
xor
out
stc
dec
repnz
movsb
and
inc
faddp
xchg
adc
fstpt
fs
sub
xor
sbb
dec
add
jae
idivl
mov
pop
std
dec
inc
push
lret
fs
orb
cmp
out
divb
sub
mov
mov
nop
arpl
jb
push
cmp
cwtl
mov
xchg
sti
dec
jno
push
cwtl
adc
sbb
or
inc
add
and
push
mov
xchg
fisubrl
push
pop
xchg
lcall
lods
mov
inc
jg
add
int3
fnstsw
xchg
jns
pop
xchg
sub
cmpsl
push
jae
or
pop
push
dec
jne
inc
rorb
and
enter
fdivrl
insb
mov
repz
fidivrs
lods
fs
push
sahf
movsb
lock
jl
or
pop
cwtl
jecxz
push
cmp
xchg
cs
in
and
xchg
and
mov
dec
fidivs
sbb
pop
sub
pusha
sbb
lock
dec
jnp
aam
jbe
cmpsb
imul
lods
subb
int
xor
repz
addr16
inc
add
mov
shrb
xchg
movsb
rolb
push
xor
outsl
jb
push
dec
mov
mov
je
ret
cmp
lods
subb
jo
or
insl
mov
gs
or
or
shll
sti
adc
mov
scas
ret
in
dec
jg
adc
xchg
in
mov
xchg
jg
xchg
cmc
push
pand
xchg
scas
loop
or
and
xor
pop
mov
cmp
lret
pop
fsin
sbb
inc
sbb
jne
mov
repnz
pusha
out
shlb
aaa
pusha
push
pop
adc
lahf
xchg
xor
pusha
xchg
cwtl
sub
and
mov
inc
ja
jge
sbb
dec
cmc
pop
aam
cwtl
outsb
push
xor
cmc
aaa
mov
out
loop
push
jle
sti
lock
mov
sub
dec
xchg
lods
mov
pop
popf
clc
movsl
mov
es
rcr
clc
pushf
aad
aam
lret
cmp
push
mov
push
leave
pop
out
in
insb
xor
add
mov
ds
push
std
in
rcl
jno
mov
push
aam
push
fmulp
shl
test
sarb
xorb
sbb
out
lods
test
outsb
jne
fsubs
movsl
dec
iret
inc
xchg
mov
jno
mov
add
ss
lret
ret
push
mov
cltd
inc
add
push
inc
xchg
lret
neg
mov
add
and
cmpsb
dec
or
cmp
mov
fisttps
push
mov
fmuls
rolb
cmpsb
push
sbb
push
and
mov
sti
inc
decb
or
idivl
ja
adc
lcall
into
clc
sub
lods
jle
fcompp
mov
mov
dec
shll
sbb
orl
cltd
sub
loop
lcall
shlb
dec
adc
cltd
lods
repz
sub
mov
add
xchg
ret
inc
jge
and
sub
or
cmp
sahf
out
jle
enter
sarb
shll
jno
fiadds
pop
pop
imul
loopne
mov
inc
cs
sbb
or
mov
and
jno
into
incl
cld
mov
loopne
addr16
lods
mov
lods
jecxz
xchg
mov
sbb
fwait
bound
std
sarl
mov
inc
jmp
lahf
and
repz
pusha
mov
push
sub
sub
xor
add
insl
pop
push
sub
and
dec
jl
mov
das
sub
inc
adc
jg
inc
xchg
loop
adc
and
cli
stos
outsb
scas
pop
icebp
push
iret
push
xchg
xor
dec
xchg
add
or
or
sbb
pop
jle
dec
pop
imul
add
int
mov
xor
xor
iret
jmp
jp
cmpsl
adc
or
movsb
sub
push
inc
push
gs
mov
jo
pop
inc
cli
roll
ja
mov
enter
into
dec
lret
adc
sbb
std
mov
or
fidivrl
loop
sub
sbb
mov
push
cmp
xor
push
clc
dec
out
mov
dec
dec
push
es
es
mov
lds
add
daa
std
sbb
sub
or
int
ss
test
sub
jmp
push
adc
int
mov
into
rcll
sarl
pop
movsl
and
mov
lds
add
push
inc
push
adc
and
lret
aas
mov
mov
inc
mov
and
lret
and
pop
fistps
jb
dec
jo
popa
adc
mov
lods
aam
sub
pop
rclb
mov
pushf
push
push
and
ja
push
jae
and
xor
push
adc
divl
push
pop
push
cmp
in
pop
scas
stos
jo
adc
mov
pop
sbb
xchg
pop
xchg
lret
pop
sub
push
mov
popa
jmp
pusha
test
fmuls
inc
loop
leave
dec
mov
xor
in
js
scas
jns
mov
sub
fists
out
mov
dec
sbb
xchg
scas
inc
xlat
icebp
fisubl
mul
pushf
cltd
dec
xor
movsl
scas
lock
rdmsr
jle
dec
jmp
mov
mov
mov
inc
push
lds
push
aaa
ret
pop
xchg
inc
pop
cmp
lea
lea
insb
adc
scas
add
sub
xor
addr16
dec
mov
mov
xlat
ss
stc
jecxz
inc
insb
add
stos
push
xchg
lahf
aam
push
cmpsl
sub
jge
aad
pop
mov
mov
lods
cmp
movsb
sti
pop
sbb
pop
or
mov
push
notb
add
push
mov
pop
hlt
nop
pop
jns
dec
sbb
lahf
scas
add
mov
aaa
sbbb
mov
subb
fsubr
enter
repnz
rol
pop
inc
lock
in
mov
das
sub
test
fs
mulb
add
scas
dec
pop
hlt
mov
xchg
jle
imul
and
fst
cmp
icebp
mov
adc
movsb
adc
stos
aaa
idiv
push
xchg
xchg
lds
mov
out
iret
lahf
push
adc
jle
or
inc
xchg
cmp
fsubl
xor
mov
mov
dec
lcall
test
mov
stos
and
xorl
movsb
sub
lds
or
sub
test
push
push
in
dec
xchg
pop
test
fcoml
pop
dec
pusha
int3
out
mov
test
cltd
repz
loop
mov
mov
push
jo
scas
insl
lret
popf
es
jae
sbb
fwait
mov
sahf
jecxz
cmp
cmpsl
jb
fstpl
in
and
xor
inc
ss
cwtl
daa
cmpl
push
and
mov
add
loop
rcll
pop
xchg
sub
pop
pop
push
ret
jge
repnz
gs
pop
into
lock
ss
cmp
add
push
std
push
test
rcrl
sbb
push
push
sbb
pusha
lea
xchg
mov
repnz
sbb
mov
dec
rcl
pushf
repz
pop
lret
xchg
loopne
xor
bound
fdiv
or
aaa
cld
mov
mov
dec
mov
jle
rcr
push
aam
jl
cltd
lret
inc
cmp
jle
iret
hlt
sbb
bound
sbb
les
cmp
pop
push
jne
mov
xchg
xor
inc
jbe
arpl
lods
sbb
stc
out
push
or
lcall
sbbb
jp
ljmp
out
adc
jbe
sub
xor
mov
pop
mov
adc
push
pop
inc
inc
pop
repnz
scas
loopne
adc
and
adc
cmp
in
sbb
fisubrs
cld
push
xchg
in
sub
in
xor
or
push
mov
push
imul
add
jb
flds
fstl
xchg
inc
in
xchg
mov
mov
xor
jne
cmp
fmulp
pop
ror
fstl
stos
adc
jns
ss
and
dec
orl
pop
insb
xlat
adc
shlb
xlat
push
mov
push
psraw
and
fisttps
jge
mov
push
jg
inc
es
pop
inc
mov
or
movsl
ljmp
or
mov
mov
ja
and
cmp
pushf
inc
jnp
dec
sub
or
scas
pop
ss
jmp
jb
push
pop
clc
jmp
pop
dec
aam
stc
jo
jp
ja
stc
sbb
loopne
and
and
dec
xchg
mov
jnp
and
movb
sub
outsb
in
mov
shll
test
dec
jno
xor
enter
fsubl
fadd
dec
add
jge
repz
nop
sub
dec
sub
or
call
scas
wrmsr
std
mov
lods
icebp
fldt
jns
mov
lods
fdivs
dec
scas
push
je
es
add
mov
hlt
jmp
insb
push
outsl
loope
aas
xor
mov
xchg
mov
lock
mov
cltd
cmc
xchg
imul
pop
cli
mov
mov
jno
aas
icebp
lock
xchg
add
push
sub
lret
jmp
jno
das
insb
cli
out
xchg
std
mov
orb
mov
pop
adc
push
ret
inc
jns
xchg
ret
jp
lahf
adc
fimull
jns
mov
shl
jle
add
iret
add
mov
cmp
or
lea
mov
inc
mov
cwtl
imul
push
cmpsb
lret
fwait
shll
push
dec
insl
ja
sub
shl
or
dec
inc
push
pusha
cmpsb
pop
jns
ss
sbbl
dec
mov
sbb
ror
ss
sub
bound
mov
xlat
sbb
leave
inc
je
fdivrs
int3
iret
fstl
xchg
or
inc
stos
psrlq
popf
fisubl
test
cmp
shlb
xchg
sbb
shlb
test
or
sub
pop
sub
xchg
mov
dec
inc
xchg
mov
inc
or
sub
mov
xchg
jmp
inc
hlt
sbb
fnstenv
stos
popa
mov
fs
dec
adc
test
sbbb
mov
sahf
loope
pop
mov
mov
or
hlt
adc
push
jb
xchg
clc
imul
movsl
iret
dec
add
xlat
ss
sbb
pop
aas
and
jb
pop
icebp
les
int3
jno
out
fisttps
fwait
xchg
sti
jge
shr
and
xlat
jne
roll
or
inc
xor
mov
icebp
xlat
pop
cmp
cld
xchg
fsubrp
rcr
loop
popf
sub
addr16
jp
sub
jl
insl
cmp
jae
mov
int3
jl
mov
sub
stc
xor
jne
xchg
cld
inc
cwtl
sub
mov
jns
sarl
imul
scas
add
sahf
ja
adc
pop
add
ja
mov
fucomip
and
push
or
xchg
daa
movsb
comiss
sti
jno
sub
lods
into
xor
mov
mov
dec
call
mov
cmp
fldl
dec
pop
and
out
cmp
lea
add
sti
leave
jg
or
sti
mov
or
adc
pop
or
gs
lock
ret
mov
and
std
fidivrs
pop
jns
addl
sbb
jge
pusha
lea
mov
sarl
mov
mov
out
insb
fidivrl
cs
mov
mov
or
in
ds
mov
jmp
xchg
scas
mov
xor
push
popa
das
dec
adc
cmc
xchg
iret
jmp
test
test
lret
mov
aas
pop
iret
xor
push
aas
ficoms
movsl
loopne
popl
lahf
mov
loope
scas
xchg
aas
inc
dec
sub
xchg
dec
push
repz
push
int3
imul
clc
movsb
stos
mov
dec
push
mov
andb
loopne
mov
push
mov
mov
shl
aaa
in
fisttpl
or
mov
mov
pop
repnz
or
fidivl
loopne
test
xchg
pushf
fldl
xor
mov
push
int3
mov
jl
scas
push
mov
and
jnp
xor
jle
popf
mov
jg
fistpll
ret
mov
roll
push
sub
pop
test
jo
lret
and
sub
sbb
ds
dec
ret
jg
adc
aam
and
mov
icebp
mov
lar
int
cltd
push
and
cmp
fcoml
push
jl
push
add
sarl
dec
clc
loop
dec
and
iret
xchg
cmp
popf
sbb
jno
repz
jecxz
jne
negb
rcrb
ja
stc
pop
push
dec
les
subb
push
test
xor
jl
stos
imul
cltd
cmp
mov
out
cmp
jmp
mov
push
andnps
sub
pushf
cmp
cltd
inc
xor
lret
inc
bound
mov
dec
pop
test
fs
mov
pop
in
fstpl
flds
push
stos
adc
jg
pop
mov
pushf
insl
xchg
inc
pop
pop
push
xchg
xor
lret
iret
test
aad
sub
or
cmp
fs
fiaddl
mov
fnstsw
das
add
mov
les
leave
ficoml
xlat
jno
push
es
xchg
xorl
inc
dec
addr16
loop
dec
sbb
push
fdivrs
je
mov
stos
push
or
xor
sahf
dec
add
js
and
adc
dec
fs
lock
inc
fwait
sbb
sub
lds
std
jp
outsl
and
xorb
or
lock
sbb
pop
and
insl
adc
test
sub
lods
jecxz
rol
inc
out
add
dec
scas
xchg
data16
cwtl
loop
inc
jmp
jmp
mov
xchg
add
fsqrt
out
fs
sahf
andb
in
cmp
xlat
xor
aaa
es
sbb
mov
loopne
add
fdivrl
add
lret
add
ds
arpl
test
jns
and
sbb
adc
push
bound
push
insb
cmc
add
popa
loopne
rcrb
pop
enter
es
cwtl
shll
leave
mov
mov
xchg
cmpsb
sbb
dec
outsb
scas
sar
mov
add
sti
jbe
push
orb
decl
or
xchg
xor
es
mov
jle
xchg
dec
and
je
add
int3
ljmp
sbb
mov
jo
sub
andb
fs
movsb
ror
push
movsl
pusha
lods
out
xchg
mov
mov
test
adc
mov
ja
popf
shrl
nop
mov
pop
mov
fdivrl
data16
mov
inc
mov
and
dec
int
fildl
add
pusha
xchg
mov
rorl
push
int3
enter
lret
int
outsb
into
xchg
cwtl
pop
test
lods
or
lret
jns
cs
popa
in
cltd
daa
lods
dec
les
jne
cli
mov
loopne
aas
mov
test
and
cmp
cmp
insl
push
inc
mov
mov
dec
mov
jb
mov
xor
dec
mov
add
insb
dec
pop
insl
lcall
pop
imul
jle
push
xchg
or
nop
insl
into
mov
and
jl
mov
jmp
mov
sarb
add
lcall
lret
sbb
push
or
jbe
pop
sti
push
push
jb
je
scas
xchg
push
cwtl
aaa
mov
sub
lods
xor
xor
jbe
jno
cmp
cmp
in
rolb
stos
insb
adc
sbb
jge
sbb
mov
pop
ljmp
outsb
dec
imul
jb
push
cld
addl
aas
add
pop
or
fiadds
jbe
mov
cmp
push
sti
push
adc
jge
xchg
inc
and
movsl
ss
pop
lods
push
scas
sbb
and
or
insb
cmp
sub
push
cmpsb
lret
in
int3
movsb
loop
lcall
idivl
addb
xchg
xchg
cld
cmc
lods
prefetchwt1
jo
add
mov
mov
stc
cs
dec
sbb
adc
rorb
cmp
push
ret
jnp
dec
mov
push
xlat
mov
mov
rol
mov
aad
imul
pop
shrb
addl
lods
fistpl
loopne
cmp
aam
push
sbb
mov
mov
in
jbe
cltd
outsb
ret
xor
push
movsl
and
jmp
xor
or
iret
mov
and
bound
dec
or
inc
int
es
inc
lods
or
adc
mov
dec
arpl
adc
ret
pop
scas
mov
fs
daa
ret
loopne
adc
or
rcl
jae
pop
mov
pop
xchg
ds
leave
pop
cvtpi2ps
mov
arpl
pop
out
cmp
adc
sti
iret
orl
pop
adc
push
and
fwait
aad
std
ss
pminub
lret
sbb
cli
mov
push
dec
xlat
imul
mov
sbb
test
icebp
shrl
scas
push
scas
hlt
add
or
mov
int
pop
pop
stos
mov
jp
in
ja
push
mov
inc
adc
mov
mov
add
ret
pop
pop
aas
adc
std
xlat
lret
xchg
mov
mov
std
test
xchg
adc
pusha
jae
insl
adc
cs
or
inc
cmp
popf
add
outsl
pop
lock
in
pushf
jno
and
aam
jne
movsb
lahf
sub
test
mov
mov
adc
and
sbb
pop
cs
or
inc
insb
loope
sbb
mov
lods
js
fisttpll
les
jnp
xor
mov
aaa
and
enter
lods
jno
fdivrl
lods
jmp
and
mov
jecxz
sub
xchg
leave
mov
pop
xchg
dec
aam
stos
hlt
and
scas
cli
test
sub
and
mov
mov
hlt
test
les
shll
adc
je
adcl
push
movsl
leave
aas
cmc
lods
les
sbb
and
pushf
dec
xchg
jl
rcrb
and
and
subl
and
mov
adc
movsb
xchg
outsl
pop
aad
dec
lahf
jg
mov
jmp
fnstcw
insb
jmp
adc
out
int
sub
xchg
rep
in
loop
lds
pop
mov
mov
fcoml
gs
inc
inc
adc
dec
lret
sub
test
push
sub
fsubrp
sub
pop
inc
test
dec
ret
xor
add
ja
f2xm1
inc
xchg
sbb
std
jnp
cmp
sti
inc
sbb
imul
pop
jmp
or
and
mov
test
mov
lock
push
push
mov
sub
inc
fnstenv
out
jno
shlb
into
lds
outsb
aaa
int3
rcrb
mov
pop
xor
push
mov
sub
mov
xorl
cmp
xchg
cmc
lea
in
add
xchg
or
cltd
mov
rclb
lods
push
movsl
fsubrs
in
and
cmp
fcomps
push
je
std
cwtl
dec
or
push
mov
xor
inc
inc
xchg
fs
push
stos
adc
fisttps
sub
xor
bound
inc
int3
movsb
int
ror
xchg
xor
adc
popf
cmp
orl
pusha
push
nop
inc
pop
mov
ret
push
rcl
iret
sub
mov
lahf
cmp
lea
idivl
in
in
push
es
gs
mov
pop
or
sbb
xor
jnp
or
pop
inc
test
rol
xchg
aas
push
push
fisttpll
jnp
mov
sbb
imul
inc
arpl
cmp
add
gs
push
dec
fnsave
and
jo
mov
idiv
mov
xchg
inc
das
in
sbb
sub
push
movlps
mov
or
fists
std
mov
into
xor
scas
mov
scas
lret
andb
pop
adc
jae
push
std
mov
or
sub
lods
dec
pop
pushf
xchg
sbb
sub
and
sbb
push
cld
in
arpl
pop
scas
inc
roll
insl
mov
scas
push
inc
gs
add
arpl
je
adc
leave
xchg
xchg
cmc
mov
jne
pop
lds
mov
int3
lahf
movsb
xchg
and
imul
cmp
test
out
dec
ja
push
push
bnd
test
cmp
and
adc
in
inc
pop
call
mov
pusha
andl
orb
fucomi
addr16
daa
add
pop
lock
js
sbb
mov
mov
repnz
sub
test
in
cmpsl
fsubr
out
je
loopne
or
outsb
js
test
gs
inc
cmpsb
mov
mov
pusha
lret
movsl
mov
mov
mov
and
push
push
enter
push
mov
dec
push
jae
xchg
sbbb
sbb
and
stc
xlat
sahf
xchg
dec
fstl
clc
aad
xchg
jl
sbb
dec
sbb
rcrl
lea
ret
mov
jne
hlt
outsb
sbb
and
push
cld
dec
push
add
xor
aam
fucomi
movsl
cli
inc
mov
jp
jge
push
inc
sbb
xchg
jmp
cmpsb
mov
xlat
adc
fcoms
daa
pop
push
xor
dec
mov
outsl
cmpl
push
lds
cltd
clc
and
mov
push
mov
add
mov
loope
insb
imul
outsl
scas
stc
not
icebp
call
enter
jp
pop
aad
test
mov
jne
xchg
cmc
cmpsb
jne
dec
inc
xchg
rcr
movsl
hlt
lea
fwait
pushf
add
mov
test
aas
movsl
push
sbb
movsl
and
addl
push
in
inc
ljmp
mov
repnz
dec
lret
rolb
pop
loope
aam
mov
cmpsl
xchg
ja
add
pop
in
pop
fimull
cltd
dec
subb
jp
pop
cmp
or
loop
or
sbb
mov
adc
and
mov
lret
out
bound
xor
add
fcompl
dec
iret
push
pushf
xchg
inc
out
sub
mov
and
jns
outsb
pop
push
and
jbe
leave
push
daa
je
arpl
sub
int3
mov
sahf
xchg
in
add
in
mov
loope
and
mov
mov
popl
lods
mov
aam
dec
cli
xor
pop
xchg
lea
stc
rorl
cmp
lds
mov
movsb
or
mov
ret
sbb
cmc
jg
jne
mov
push
dec
aad
adc
int
orl
jp
ja
jns
ret
int
mov
cli
adc
adc
int3
push
lods
cmp
inc
popf
jg
lret
and
cmc
sub
add
out
xchg
xor
orl
cwtl
insb
dec
mov
push
hlt
adc
push
cwtl
lcall
enter
int
loopne
xorl
jbe
mov
cmp
sub
mov
popf
mov
ret
and
out
sbb
ja
sbb
cmpsl
lea
insb
sub
xchg
sbb
lret
inc
add
inc
push
shll
jmp
mov
pop
mov
sub
outsl
subl
mov
sbb
mov
outsb
mov
cmp
sub
push
lock
mov
scas
outsb
scas
and
les
mov
lods
adc
or
mov
sbb
lahf
cmpsl
push
out
jp
cmp
and
xchg
mov
fsubr
repnz
mov
jne
enter
cmp
sub
mov
enter
into
fidivrl
cmp
dec
int
pusha
gs
add
fsubr
xchg
repnz
mov
hlt
fs
push
push
icebp
rorb
push
inc
push
fists
sub
mov
ljmp
outsl
icebp
push
sbb
or
cmp
push
aad
out
jle
shlb
sub
cli
mov
cld
jns
stc
mov
shll
cmp
sbb
xor
in
popf
pusha
scas
ljmp
fdivrp
fisubrl
cmc
stos
inc
adc
inc
adc
push
popa
js
jbe
or
pop
cwtl
dec
pop
into
cmpsb
jae
jns
push
or
shlb
sbb
xor
fwait
xchg
frstor
push
loop
jnp
clc
gs
ss
cmpsl
jg
push
inc
dec
xor
jns
fcmovu
sbb
lret
pop
outsb
sub
jp
pop
or
into
or
push
aad
cmp
push
inc
xor
mov
outsl
in
adc
bound
lods
cmpsl
loop
test
pop
xchg
lret
and
es
push
mov
fsts
mov
xorb
pushl
icebp
inc
daa
pop
mov
xor
mov
add
loop
jmp
pop
push
sbb
inc
jno
inc
lods
fwait
xor
out
push
jnp
popa
cmpsb
es
fildl
mov
mov
test
sbb
mov
scas
jbe
rorl
rcr
fsub
stos
dec
cwtl
push
cmp
fistl
dec
fbld
repz
lcall
jg
aam
inc
sub
push
and
sbb
push
add
add
test
inc
cmp
loope
int
push
sbb
pop
cmp
jnp
push
les
push
and
jl
out
std
mov
rorb
sbb
push
test
push
lods
xor
ja
rol
mov
mov
adc
jb
in
ret
jb
out
lcall
repz
or
loop
lods
fildl
dec
pushf
jmp
jl
adc
out
in
aad
jl
mov
les
add
arpl
test
xchg
pushf
enter
adc
out
and
dec
mov
les
lods
fdivrs
jecxz
lret
xor
and
jecxz
rclb
adc
and
test
push
mov
stos
mov
cmp
push
add
mov
repz
sti
dec
cld
loopne
mov
bound
dec
add
test
clc
leave
lahf
iret
gs
adc
and
inc
sub
aad
int
lret
daa
pusha
incb
mov
inc
sbb
fnstsw
xor
les
dec
fbld
out
add
out
lock
idivl
ss
xchg
cmp
in
and
fcompl
cmp
xor
xchg
dec
push
sub
addl
dec
xchg
popa
icebp
sbb
hlt
in
sbb
inc
xchg
or
and
ljmp
mov
sub
sarb
push
mov
dec
dec
cmp
imul
adc
sbb
cs
mov
pop
xor
es
rolb
xchg
lea
dec
fs
sbb
cli
stos
xor
icebp
aam
shll
loopne
xchg
pusha
aad
orl
sub
inc
push
inc
sub
and
add
mov
push
mov
cmpsl
or
clc
jg
aas
pusha
lock
les
pop
rcrl
popf
in
je
fidivs
jge
cmc
mov
shlb
add
push
stos
mov
lods
push
sbb
and
sbb
lock
loop
popa
scas
push
xchg
in
out
ds
cli
dec
add
aad
pusha
mov
incl
mov
adc
stos
inc
in
and
fcompl
subb
bound
fsubrl
clc
mov
pop
negb
sub
dec
cmp
pop
add
pop
outsl
sub
outsb
mov
xchg
bound
jno
jnp
dec
cmp
cmp
popf
cmpsb
sub
jg
out
inc
pop
addr16
fstps
or
push
in
aas
js,pn
mov
inc
mov
push
aad
outsl
shl
imul
adc
icebp
cwtl
mov
xor
dec
out
icebp
xchg
push
push
push
cmp
or
jbe
mov
xchg
cmp
mov
lods
and
cmp
push
nop
jbe
xor
sub
mov
adc
or
loopne
jecxz
test
xor
std
sahf
mov
push
stos
js
aas
mov
in
sub
add
cmp
icebp
icebp
data16
mov
fnsave
cmp
pop
sahf
jmp
mov
jl
adc
and
jae
push
out
mov
test
test
xchg
cmp
or
rcrl
or
jge
xchg
mov
jns
iret
stc
sub
icebp
adc
int
mov
and
jp
fsts
pop
or
sub
cmp
adc
mov
insl
icebp
outsl
dec
fwait
les
addr16
sahf
call
mov
iret
mov
std
ds
shlb
mov
add
xchg
pushf
aaa
mov
icebp
gs
cmp
lea
sbb
or
jbe
or
mov
push
dec
fistpll
repnz
dec
xlat
fcomps
repnz
mov
out
lret
aas
dec
call
jecxz
test
lret
sbb
cmc
inc
int3
jl,pt
dec
sbb
xor
push
aaa
sub
xor
push
push
js
adc
sub
fisubl
subl
in
xor
or
push
sahf
enter
jbe
iret
jecxz
sarl
sarb
and
pop
adc
xchg
cmpl
push
js
jae
int3
roll
imul
stos
stos
mov
icebp
outsb
push
pop
js
in
sbb
or
shlb
pop
and
std
pop
mov
sbb
cli
cmp
fidivs
insl
jmp
mov
add
pop
lods
pusha
push
adc
addr16
jns
std
mov
or
dec
ret
push
adc
aaa
xchg
js
out
data16
mov
push
cmp
sub
icebp
fimull
call
cmp
in
cmp
jne
jge
loop
aad
movsl
jecxz
mov
subl
inc
or
je
arpl
in
adc
mov
loopne
mov
insl
lods
pop
aad
mov
push
std
ja
fs
rcrl
les
xchg
daa
sbb
test
cmp
test
cltd
int
mov
jbe
push
lods
pop
dec
int
or
sub
sahf
lret
sub
xor
sub
inc
rcrb
mov
mov
aam
cmpb
xor
and
ds
aad
imul
insb
push
lods
bnd
les
add
mov
cmpsl
cmp
pop
inc
xor
adc
and
pop
gs
in
sub
repnz
xchg
ror
aad
gs
mov
dec
arpl
std
add
les
jbe
scas
cmpsl
inc
mov
sbb
lock
cld
xor
test
jnp
mov
mov
dec
sub
stc
mov
cltd
sub
shl
outsl
fcoml
in
jae
add
pop
cmpsl
xchg
setge
loopw
jne
jnp
cmp
leave
mov
fistl
add
mov
adc
mov
or
push
jno
dec
aas
jo
xchg
imul
test
push
hlt
cmp
cmp
mov
repz
push
inc
mov
test
or
mov
xor
lods
ret
pop
inc
pop
mov
gs
pusha
sub
es
pushf
or
movsl
adc
leave
scas
pop
imul
dec
pop
mov
pop
rolb
mov
sub
cltd
pusha
sarl
mov
pop
loope
cli
je
aad
or
mov
jmp
test
sbb
shll
lods
mov
jl
sbb
fnsave
sub
inc
rcl
hlt
add
test
xorl
and
mov
mov
xor
add
sub
out
cmp
ljmp
sbb
push
loop
addl
mov
xor
mov
sub
xchg
mov
add
inc
mov
jbe
xor
lcall
popa
or
jae
lods
jle
int3
icebp
ss
out
aam
inc
xchg
mov
dec
mov
xchg
lea
or
add
sub
dec
dec
jp
mov
pop
out
pop
je
add
in
xchg
movsl
dec
xlat
in
int
mov
cld
mulb
pop
mov
pop
cmp
lahf
and
bound
arpl
dec
leave
xor
and
das
cmp
adc
pushf
scas
sub
sbb
stos
mov
push
mov
in
cltd
add
fcomi
out
cmp
pushf
jecxz
cmpsl
xlat
adc
xor
lret
inc
cld
dec
mov
xor
nop
sbb
sbb
and
push
mov
nop
je
mov
sbb
movsl
mov
and
bound
aas
mov
cmp
ret
loopne
mov
mov
test
lcall
mov
dec
inc
dec
pop
sub
subl
dec
mov
xor
jge
mov
pop
ljmp
insl
lods
test
jmp
test
out
mov
lret
push
jp
xor
mov
fdivrs
cld
sub
sub
imul
sbb
sbb
or
ret
mul
loop
nop
jge
jns
mov
inc
or
cmp
aas
ds
jecxz
jl
stc
jne
mov
out
mov
int3
inc
js
dec
cld
test
cs
daa
repz
sbb
xchg
jo
xchg
jl
jmp
andl
ja
or
mov
push
rcr
xor
dec
mov
pop
ficoms
sub
pop
das
cwtl
add
pop
pop
xchg
fists
enter
sbb
pushf
popa
dec
push
leave
push
xlat
outsb
mov
mov
arpl
xor
ljmp
jmp
daa
cmpb
out
pushf
mov
inc
pop
mov
cmpsb
push
loopne
jno
jnp
mov
js
mov
pop
rorb
aad
jnp
sub
dec
in
test
ds
sub
test
enter
arpl
pop
push
xor
xor
push
fstpl
sub
popa
cltd
rolb
and
dec
jnp
cli
inc
outsb
enter
cld
push
mov
and
scas
or
pop
enter
add
fstps
add
add
ja
sub
sub
imul
aaa
xchg
jmp
and
cwtl
rcrb
dec
pop
movsb
pop
lret
test
es
ja
mov
sbb
jnp
test
mov
push
adc
sbb
sub
dec
xor
test
dec
jmp
pop
inc
shlb
cmc
iret
sub
inc
mov
mov
mov
pop
in
adc
push
mov
in
testl
or
test
lea
sub
inc
std
in
push
negb
ss
jge
loope
mov
adc
lock
cwtl
push
and
add
add
jne
stos
mov
addb
pop
push
push
aam
loopne
fiadds
hlt
push
adc
shlb
fstpl
mov
aam
mov
jae
or
ret
inc
add
jecxz
xor
lds
into
xchg
ljmp
sub
cmp
das
arpl
es
push
stc
mov
das
adc
subl
mov
aad
sub
jnp
add
mov
adc
pop
ret
mov
jae
lret
push
pushf
mov
pop
xchg
icebp
daa
pop
xlat
daa
dec
int
cmp
pop
rorl
insb
cmp
dec
outsb
mov
test
pop
xchg
push
jb
and
sbb
add
stos
mov
iret
lcall
loop
push
push
aad
push
out
ret
mov
sub
push
mov
mov
or
idivb
cltd
cwtl
es
jae
mov
dec
sti
cmp
or
das
add
mov
loop
mov
dec
mov
pop
js
fisttpll
shlb
add
rol
cmp
xor
loopne
jl
and
or
sbb
add
pop
add
shlb
das
es
insl
mov
sub
xlat
pop
mulb
cmp
push
adc
pop
test
add
dec
scas
pop
push
lea
mov
push
cmp
jge
das
pop
ja
add
mov
mov
or
sub
fsubrs
jb
and
lcall
ret
aam
cmpsl
rorl
lret
imul
int
cmc
imull
add
mov
dec
pusha
adc
jecxz
add
insl
lods
mov
xchg
data16
adc
aaa
jg
int3
mov
pop
dec
push
cmp
jp
and
mov
adc
add
pop
lcall
outsb
xchg
xor
or
jge
push
mov
or
mov
xlat
inc
mov
sub
sbb
icebp
dec
adc
push
scas
les
or
cmp
pusha
xchg
fisttps
shlb
call
pop
sbb
loopne
or
adc
ret
lcall
paddusb
sahf
dec
push
in
fmul
out
and
loop
ljmp
orb
lds
cltd
dec
loope
out
dec
sbb
repnz
inc
popf
adc
out
xchg
gs
imul
rclb
aaa
lret
push
jl
iret
lock
lods
xchg
jae
ja
sub
jmp
and
js
iret
mov
cmpsb
push
pushf
repz
pop
cmp
jecxz
pushf
in
push
loope
add
and
stos
push
ret
jge
xorb
mov
or
orl
mov
push
loopne
xor
adc
lods
push
inc
cmp
or
outsl
in
stc
mov
xor
mov
xor
push
jne
rorb
dec
xor
popa
movsl
dec
add
jmp
scas
jnp
push
cmpsl
das
dec
mov
ret
mov
sbb
jmp
jmp
push
mov
subb
sbbl
or
inc
aas
fwait
xor
pop
and
pusha
aas
push
or
or
pop
cmpsb
fwait
mov
scas
mov
inc
dec
lret
sub
xorl
lds
lahf
jne
out
arpl
hlt
xchg
outsl
mov
sbbb
pop
scas
xlat
xor
mov
sub
push
imul
adc
sbb
lock
jae
add
orb
xor
or
fs
mov
and
xor
cmp
lcall
fsubs
pop
or
mov
mov
es
jle
ret
pop
mov
jecxz
shrb
push
dec
iret
out
inc
add
jle
imul
jno
or
test
xor
rclb
aad
inc
sub
scas
mov
push
sbb
lds
lea
fadds
ds
scas
mov
xchg
sub
jg
pop
mov
jecxz
add
fbld
xchg
mov
mov
dec
sbb
fsubp
mov
movsb
in
fcmove
mov
es
mov
or
or
adc
push
mov
inc
ret
das
push
add
add
clc
repz
sbb
adc
adc
cmp
jg
fcmovb
test
out
jne
jecxz
cmp
xorl
out
addl
and
mov
push
push
push
cmpsl
pop
ror
and
xchg
pop
dec
mov
aad
dec
lret
loop
shrb
lods
iret
int3
lret
test
pop
iret
and
xor
inc
xor
xor
arpl
xchg
daa
stos
ret
cs
mov
cmp
outsl
das
loop
push
lods
mov
aam
push
pusha
adc
mov
cltd
xor
sub
shrl
add
mov
add
aas
adc
call
jg
ret
sub
inc
mov
push
loop
lods
cmp
mov
sbb
fidivrl
xor
adc
cmpsl
jno
mov
cmpsb
jl
jmp
dec
xchg
or
int3
pop
jl
out
mov
mov
jg
or
jne
mov
icebp
cli
or
pusha
mov
sahf
sub
jge
sub
mov
mov
adc
lock
scas
sub
les
adc
arpl
mov
sbb
fisttpll
pop
cltd
out
cmpsb
movsl
xlat
adc
pop
dec
and
mov
add
aas
push
sahf
mov
sbb
xor
push
xchg
pop
xadd
pop
movsl
js
inc
cmp
adc
dec
and
subl
jl
mov
mov
lods
jns
aad
inc
xchg
dec
add
int
fsqrt
pop
and
test
shlb
cmp
addr16
mov
lret
scas
mov
repz
sub
sbb
dec
jne
jno
xchg
pop
sti
lock
cmp
sti
jecxz
push
out
je
std
mov
fdivrs
sbb
fmull
sub
xor
sub
push
jo
or
jb
outsl
subl
push
mov
sti
pop
pop
aaa
insl
ret
imul
mov
std
dec
cmpsb
sbb
add
hlt
fisttpll
cwtl
mov
push
imul
ret
xchg
cmc
imul
xor
addr16
xlat
fnstenv
mov
mov
pop
js
and
push
pop
popa
insl
cmp
sbb
mov
inc
leave
hlt
xor
shlb
jbe
mov
mov
pushf
cs
out
scas
pop
imul
mov
jp
pop
mov
push
inc
dec
aad
and
adc
nop
cli
push
es
in
jae
inc
cltd
lret
rolb
cs
or
sub
test
into
inc
inc
and
pop
shr
in
dec
or
repnz
xchg
cmpsb
andl
in
cmpsl
cmpsl
cmp
arpl
xchg
mov
mov
dec
sub
or
jno
sub
jle
pop
mov
iret
push
xchg
adc
sbb
sbb
cmp
ss
inc
stos
aaa
pop
mov
aam
and
movsb
xor
mov
je
in
pop
inc
xchg
or
bound
and
fdivrs
loope
insl
xor
jae
or
int
mov
adc
out
ss
or
stos
mov
xor
push
out
into
adc
jmp
arpl
lds
xor
mov
xor
test
fimuls
cld
dec
cli
sub
inc
jae
les
mov
jnp
sti
jecxz
in
adc
add
dec
scas
ljmp
jbe
push
xchg
cmc
das
movsb
sbb
cmp
mov
loope
inc
scas
cwtl
pusha
insl
mov
mov
cmp
lahf
es
insl
inc
mov
push
pushf
filds
mov
repz
pop
inc
and
and
test
add
cmp
cmp
lock
outsb
in
pop
fstl
xchg
rolb
xor
cmp
mov
es
push
xchg
test
ljmp
inc
cmp
sbb
mov
jl
sbb
mov
cmpsb
add
jns
mov
lock
push
dec
cmp
jecxz
aaa
mov
ficoms
nop
pop
pop
mov
cmp
inc
lahf
cmp
mov
mov
scas
roll
daa
adc
and
mov
rcl
insl
mov
pop
push
fcoml
cltd
and
out
sti
xor
cmp
lds
dec
ds
out
sub
mov
cmp
mov
inc
pop
pushf
loopne
xchg
fimull
pop
mov
cmpb
jmp
jno
xchg
fistps
adc
mov
inc
xchg
add
mov
dec
ljmp
push
xor
mov
fdivl
cmp
pslld
scas
cmp
in
xor
mov
subl
mov
data16
sub
test
and
lret
sbb
repnz
sbb
out
lock
test
mov
push
sub
push
pop
mov
ret
mov
xor
bswap
rcll
mov
das
scas
imul
dec
out
cmp
dec
mov
jg
mov
sub
xchg
cmpsb
orl
in
in
movsb
pop
movsb
rcll
shr
pushf
xchg
xchg
cmp
xchg
mov
inc
xchg
push
imul
push
inc
mov
addl
lock
inc
dec
loopne
xchg
movsb
jo
add
push
push
cmp
inc
jne
and
sbb
xlat
lods
lret
das
mov
xchg
inc
xchg
cmp
jo
jb
aaa
lds
aas
cmpb
mov
adc
jg
cmc
cmpsb
jno
jb
in
or
stos
popf
sbb
ret
aam
aas
pop
add
add
inc
mov
inc
add
xlat
cmp
into
inc
mov
xor
mov
xor
jns
cmpsl
add
sub
pop
inc
mov
inc
aas
ret
mov
mulb
les
cmc
movsl
cmpsb
add
ret
inc
mov
ljmp
test
xlat
xchg
stos
pop
add
filds
call
cmpl
add
sub
push
pop
rcll
adc
dec
imul
shll
fcmovne
movsb
mov
stc
std
out
pop
jnp
adc
xchg
xlat
das
jmp
scas
jmp
frstor
std
in
nop
sub
ljmp
sbb
pusha
dec
inc
or
ret
and
jno
insb
incl
jecxz
mov
push
pop
lret
loope
push
adc
add
sbb
and
push
gs
stos
rolb
jns
add
popa
lods
xor
test
or
or
inc
sarl
int
mov
bound
test
xor
test
push
xchg
pop
arpl
cmp
add
js
lods
int
aas
notb
xor
dec
pop
cmpl
inc
pop
xchg
js
aaa
and
pop
out
jnp
lret
inc
sbb
and
loopne
outsb
mov
in
ljmp
stos
cmc
aaa
repnz
jmp
popa
sarl
mov
sbb
xor
adc
lods
xchg
imul
hlt
dec
push
push
lds
cwtl
cmp
mov
daa
cmpl
int
sub
imul
sbb
movsb
push
daa
push
cltd
jmp
mov
inc
sbb
xor
enter
leave
xchg
mov
mov
imul
in
dec
mov
in
push
enter
sarl
arpl
xchg
pop
push
cltd
insb
and
and
int
out
dec
rcl
push
in
cmp
dec
scas
aas
rcrb
outsb
leave
push
lea
sub
jb
mov
iret
leave
jmp
pop
lea
fdivp
jns
sbb
lret
les
insb
and
or
push
pop
xchg
loop
cld
jmp
jns
sub
jp
jmp
xor
push
sbb
fildl
push
ja
orl
addps
dec
xor
mov
dec
dec
inc
mov
movsb
sti
mov
add
into
dec
andl
pop
cld
inc
lds
insb
push
imul
add
pop
jae
dec
repz
mov
inc
aad
jl
mov
pop
rorl
repnz
fstps
jge
mov
inc
inc
lods
mov
das
push
cwtl
push
adc
insl
mov
jmp
mov
ret
mov
add
jl
inc
fildll
popa
mov
int3
jnp
ds
xchg
ds
push
test
std
pop
cwtl
push
cmp
push
enter
cmp
scas
sarb
mov
into
or
xlat
xor
inc
fadds
or
out
les
push
add
pop
dec
cmpsl
jg
adc
cli
jg
push
xchg
popf
aas
mov
mov
cmpsb
scas
inc
outsl
stc
push
aam
fisubrl
mov
lock
sbb
lahf
cltd
ds
or
dec
imul
lahf
or
jnp
arpl
dec
ja
enter
ljmp
sub
sub
xchg
dec
cmpsl
push
and
imul
inc
mov
aaa
mov
push
ds
mov
scas
fs
jno
mov
repz
in
adc
lea
imul
imul
lcall
add
jg
pop
xor
ss
xchg
or
lahf
mov
dec
ds
or
icebp
aaa
inc
push
xchg
and
popa
iret
out
lods
mov
xor
adc
repnz
sub
pop
pusha
pop
notl
mov
cmc
mov
insb
xchg
test
jo
fists
pushf
push
pop
inc
mul
mov
stos
gs
inc
cli
idivl
out
pop
mov
pop
cld
add
dec
ror
xchg
push
dec
test
lea
cmc
cmp
xchg
mov
and
icebp
or
adc
test
or
cltd
push
ret
shrl
sub
lods
mov
popl
loope
rcr
push
arpl
cmpsl
mov
push
jmp
sub
mov
inc
and
mov
orb
movsl
repnz
je
dec
jecxz
add
fildl
test
xor
fcomp
xchg
push
ret
cmp
add
xchg
lcall
mov
cmp
add
adc
push
bound
xlat
xor
xlat
adc
into
lahf
xlat
sbb
dec
cs
cmpsl
xchg
clc
into
clc
sbb
or
and
rcr
out
pop
cmp
test
lock
adc
std
js
add
mov
out
rolb
clc
test
ret
jg
fs
pop
pop
lds
cmpsb
adc
cmp
in
dec
cmp
popa
repnz
gs
in
mov
push
sbbb
fcomp
push
xchg
std
xchg
sbb
ret
clc
cmpsb
mov
lahf
jbe
fstpl
iret
jle
sub
push
adc
cmp
aam
or
sbbl
or
xchg
sbb
pop
sub
lods
das
fisubrl
cld
dec
adc
xor
mov
push
or
aad
adc
cmp
pop
mov
mov
xchg
fldcw
cmp
jmp
iret
sbb
aaa
xor
into
inc
iret
or
jno
add
jl
and
adc
and
mov
inc
add
jmp
inc
mov
fwait
loop
add
out
sbb
sahf
push
neg
mov
rorl
push
lea
fnclex
lahf
jmp
cmpsb
pop
cmp
repz
mov
push
push
fldl
into
pop
cmpsb
jns
and
mov
ss
xor
pop
mov
or
inc
and
es
call
mov
sub
mov
fldenv
sub
mov
mov
inc
cmp
sbb
lds
jae
imul
or
push
nop
in
mov
jp
mov
inc
icebp
pusha
fsubrl
mov
mov
mov
and
sarb
sti
pop
popf
pop
mov
xor
sub
scas
xchg
pop
adcb
inc
jge
incb
mov
mov
mov
adc
mov
mov
popf
jae
mov
mov
dec
pop
in
adc
jb
lock
cmpsb
pusha
mov
pop
jnp
scas
mov
push
jg
mov
mov
enter
scas
sub
push
pop
sub
mov
sti
in
sti
mov
ja
xlat
add
mov
pop
cmp
outsb
cmp
dec
jl
lret
adc
daa
xorl
pop
and
lret
cmp
xchg
and
int
xchg
testl
mov
loope
or
sub
mov
pop
ds
jns
inc
pop
sar
std
xchg
sbb
push
mov
dec
adc
arpl
fbld
call
enter
or
imul
jae
add
jno
iret
xor
xchg
push
mov
mov
adc
ss
jle
mov
mov
test
test
test
lods
cmp
dec
ret
ljmp
aad
mov
imul
dec
mov
sbb
popa
mov
or
cmp
mov
pop
loopne
xchg
adc
jno
dec
sub
lds
addr16
clc
sbb
adc
lock
dec
rolb
ret
and
mov
movsb
xor
mov
flds
jo
cmp
fldcw
adc
je
and
lahf
inc
dec
sarb
out
testl
decl
pop
and
pop
mov
sbb
fildl
bound
scas
loopne
ljmp
and
and
cmp
adc
test
mov
mov
out
test
daa
mov
mov
ljmp
push
inc
push
js
push
test
ret
and
cmp
xchg
je
inc
into
in
cli
pop
popf
mov
adc
mov
jns
jecxz
or
addr16
sub
add
xor
jnp
lret
pop
add
outsl
push
repz
mov
das
sbb
mov
out
std
adc
jne
dec
xor
push
and
lcall
cmp
jg
in
or
pop
cwtl
lods
xchg
getsec
data16
aam
push
jg
clc
idiv
xor
push
cmp
sbb
rcrl
push
jns
fimull
adc
int3
rcll
sbb
lret
mov
sbb
aam
add
xchg
loope
cmp
or
pop
sbb
mov
mov
jo
mov
scas
jo
shlb
mov
dec
ljmp
inc
aaa
mov
sbb
push
out
scas
jbe
xchg
and
xchg
je
cs
jo
dec
fbld
testl
rorl
cmp
addr16
dec
xor
lock
sub
xchg
dec
pop
lret
sahf
xchg
push
mov
mov
sub
sbb
xchg
movl
inc
es
stos
rolb
rcrb
inc
ds
push
fwait
cmp
shll
addb
stc
jns
jg
cltd
mov
gs
mov
dec
stos
mov
mov
out
stos
add
mov
loope
dec
mov
sub
or
jae
or
inc
fnstcw
cmp
in
xchg
movsl
clc
mov
lods
sarl
icebp
cltd
stos
popf
lahf
push
aas
movsl
dec
adc
mov
jnp
movsb
adc
inc
jo
fildll
incl
test
lahf
insl
aad
and
lods
cli
mov
or
cmp
icebp
stos
js
int3
hlt
xchg
in
popa
fdivrl
aaa
and
jns
lea
add
cmp
cli
mov
pop
push
in
and
jp
jns
in
add
push
and
out
shll
cwtl
push
leave
cmp
mov
adc
adc
or
sti
cmp
lret
test
pop
adcb
jmp
stos
cmp
leave
jbe
pop
pop
fsts
sub
lods
sub
mov
rcll
mov
push
outsb
int3
pop
xchg
popa
rorb
dec
movsl
mov
pop
inc
and
icebp
jnp
sbb
sub
pop
or
repnz
es
add
sub
jbe
fistpl
test
xor
aam
lahf
ret
pop
add
lea
mov
push
in
mov
pop
pop
jp
rcrl
xor
arpl
xlat
dec
scas
mov
lock
imul
inc
push
xlat
rorl
int
jo
dec
mov
xchg
rcr
xchg
sbbl
lahf
sbb
push
pushf
xor
out
mov
xor
push
lret
adc
xchg
scas
andl
or
ret
test
popf
andb
jns
or
enter
jb
je
arpl
ds
pop
mov
jb
or
mov
add
cli
call
xor
repz
cmp
add
add
mov
in
mov
and
je
cli
insl
jp
std
push
or
push
aad
js
sub
iret
loopne
cs
mov
sbb
in
add
aaa
lret
stc
push
mov
jo
int
icebp
sbb
push
sbb
jne
and
dec
shrb
stos
orb
dec
sbb
sbb
les
out
lds
cs
sub
mov
outsl
mov
jo
mov
clc
cmpsl
dec
out
sbb
cli
cltd
dec
stc
popa
pop
fcmovnb
or
jbe
pop
fisttpl
iret
in
cmpsl
xor
aad
sahf
inc
aad
mov
push
mov
jmp
inc
mov
aad
test
sub
rcr
rclb
or
das
xchg
inc
sbb
mov
scas
enter
stc
sbb
scas
and
js
ficoms
mov
and
movsl
out
lret
sbb
out
jecxz
or
bound
pushf
cltd
lds
cltd
pop
pop
xchg
dec
and
xchg
out
loope
stc
jno
iret
ljmp
js
mov
leave
pushf
pop
popf
xor
push
out
mov
inc
mov
jne
lcall
ljmp
xchg
inc
test
sub
movsb
cwtl
or
out
jb
lcall
lcall
jl
inc
xchg
pop
ja
inc
outsl
inc
xchg
jmp
fsubrl
xchg
and
or
rol
jle
sbb
xor
and
inc
push
cs
and
nop
insl
mov
jg
sub
movsb
out
mov
icebp
sti
mov
cmp
mov
add
les
fwait
dec
incl
or
xor
mov
out
out
test
arpl
rcl
sub
stos
dec
mov
movsb
dec
test
into
fsubs
gs
sub
fsts
xchg
dec
mov
cltd
sub
xchg
xchg
mov
stc
jp
enter
sub
push
ds
clc
enter
insb
jo
jns
lods
fstpt
mov
mov
cmpsb
mov
sub
mov
inc
mov
sbb
or
jns
jbe
cmpl
push
pop
jmp
jp
and
jg
pop
and
mov
push
xchg
push
mov
cmc
dec
ja
pop
lock
fsubl
xchg
nop
and
mov
lea
daa
popf
dec
cld
jle
pop
test
adc
aam
adcb
push
lahf
mov
push
cmpsl
xor
sti
mov
enter
shlb
push
or
das
in
inc
les
addl
imul
ds
sub
pop
cmp
data16
aad
lds
push
xor
dec
mov
sbb
fdivl
mov
and
inc
push
sub
out
or
jno
pop
pusha
pop
and
add
mov
inc
insl
pop
loopne
push
and
scas
cmp
xor
insb
ret
das
xchg
call
push
mov
pushf
mov
aam
jg
fdivr
cmp
imul
cltd
mov
in
in
adc
das
cmp
les
fistl
add
add
bound
fistpll
pop
and
enter
xor
adc
inc
xor
sti
clc
lahf
sahf
dec
inc
mov
je
jnp
in
popf
sub
cmpsl
xchg
mov
add
sub
xchg
test
neg
aad
test
cld
jl
mov
or
scas
or
mov
pop
dec
adc
push
aad
dec
daa
rcr
or
xor
scas
xchg
mov
lret
pop
nop
adc
inc
sub
addb
mov
imul
xor
inc
or
out
out
movsl
mov
shll
inc
pop
les
inc
dec
pop
ret
fcmovb
cmp
cmp
lea
pop
in
loopne
or
data16
popf
mov
out
pop
mov
ds
or
les
mov
or
cmp
loopne
xchg
addr16
jnp
es
sub
mov
pop
out
shll
movsb
leave
xchg
iret
fwait
js
arpl
sbb
fsub
cld
sbb
add
cwtl
mov
add
aas
add
xor
inc
aam
pop
add
lcall
fs
and
mul
cltd
imul
cmp
mov
clc
jae
out
cmpsl
out
pop
and
test
xor
aas
and
xor
rcrb
shlb
int
and
xchg
sbb
aad
js
xchg
adc
mov
jmp
xor
or
mov
xchg
filds
sbb
inc
xchg
xor
push
push
lds
jbe
arpl
push
test
gs
lods
dec
mov
inc
lock
push
xchg
mov
inc
mov
jecxz
xchg
mov
in
in
movsl
cmpl
sbb
pushf
push
pusha
dec
dec
cmp
mov
adc
js
mov
bound
test
sbb
sub
pop
aad
lcall
mov
fisubrs
mov
andb
adc
cmc
je
xor
fnstsw
inc
ljmp
inc
mov
ljmp
rcrb
and
dec
jg
jg
xor
dec
into
addl
shl
pushf
rcll
inc
sbb
sti
push
push
mov
loop
rcr
push
dec
and
xchg
sub
mov
shrl
push
das
pop
shll
les
add
icebp
sbb
imul
out
push
sub
popa
pop
push
cld
repnz
mov
pop
inc
je
inc
fisttpll
xchg
ja
imul
mov
xor
mov
test
mov
xchg
or
fldl
inc
xchg
xchg
mov
cmc
int3
add
jne
sub
imul
adc
ret
stos
aaa
idivl
mov
test
ret
push
arpl
mov
inc
lods
jno
xchg
mov
and
outsl
ljmp
sbb
xor
insb
inc
mov
jns
mov
call
xor
and
bound
fyl2xp1
lock
mov
nop
cmp
loopne
test
call
mov
jb
pop
in
ds
popa
xor
pop
movsb
pop
in
add
int
mov
outsb
out
lahf
int3
inc
pop
mov
fdivrp
jne
cmp
flds
dec
mov
fs
rorl
fs
inc
dec
imul
cmp
add
jle
mov
add
mov
stos
xor
jg
sub
jp
out
sahf
cmpsb
dec
mov
pop
call
xchg
pop
fidivrl
imul
mov
adc
sbb
sub
push
gs
lcall
cwtl
sahf
mov
stos
dec
inc
std
outsb
gs
cmp
xor
and
stc
std
fmul
in
ss
lea
repz
push
jnp
popa
mov
cli
xchg
inc
insl
jmp
dec
clc
or
ds
inc
rol
dec
or
pop
mov
mov
mov
fwait
movsl
and
mov
test
mov
jle
mov
loop
add
mov
cmp
stc
push
sbb
movsl
hlt
sub
ficoml
push
jecxz
movsl
mov
adc
sbb
inc
add
clc
scas
sbb
lds
cmp
in
add
std
out
mov
int
rcrb
or
adc
xor
xchg
int
push
in
mov
dec
cmpl
xlat
leave
popa
out
out
xchg
icebp
or
jo
pop
sbb
add
pop
dec
pshufw
hlt
stc
cs
cmp
mov
mov
pop
js
loope
inc
sahf
lret
or
inc
sbb
jge
incb
arpl
sbb
dec
push
sbb
mov
sub
adcb
cmp
inc
clc
and
xchg
inc
inc
add
or
push
inc
roll
xlat
xchg
jnp
and
xorl
sbb
xor
add
pop
stos
filds
inc
jno
fildll
and
mov
mov
inc
int3
inc
movsl
lcall
mov
es
jg
mov
push
inc
mov
push
fwait
mov
int3
sti
mov
push
lret
push
cs
xor
test
shr
xchg
lods
or
jno
add
adc
adc
cmp
out
or
sub
xchg
mov
int3
sbb
lds
and
push
repnz
add
xor
jge
setne
fbstp
cwtl
inc
es
pop
test
ficoml
xchg
dec
mov
cmp
repz
xchg
mov
nop
push
loop
jmp
ss
fs
test
cld
sbb
add
ja
loope
push
lret
pop
hlt
pop
pop
fwait
dec
jne
das
int3
ljmp
mov
test
add
mov
xchg
mov
leave
mov
mov
sbb
je
push
nop
jbe
push
add
inc
mov
andl
pop
cmp
test
xor
adc
int3
jmp
jno
imul
sub
and
test
sub
mov
push
in
pop
pushf
loopne
jo
arpl
mov
xchg
mov
or
out
jl
outsl
stos
and
sub
pushf
add
jecxz
lea
sahf
add
stos
repz
cmpsl
bound
inc
insl
les
mov
popa
add
mov
push
mov
cmp
mov
mov
sbb
xchg
sub
adc
push
aas
testl
inc
popf
mov
aas
movsb
jbe
js
add
add
or
xor
fadds
int3
push
test
sti
dec
mov
xlat
outsl
das
push
daa
mov
in
fs
mov
adc
dec
lret
lret
mov
mov
nop
mov
pop
adc
jl
rcl
jecxz
cmp
cmp
movsl
or
stos
and
sbb
test
leave
mov
inc
popa
icebp
xchg
push
nop
cwtl
push
jp
jmp
call
or
pop
ret
sbb
ffree
sub
mov
or
xor
sarl
into
movsb
dec
push
lods
and
dec
xchg
xor
or
popf
bound
mov
sahf
jo
test
les
push
sti
adcb
leave
iret
nop
sub
pop
jnp
inc
xchg
mov
push
pop
cltd
mov
adc
scas
js
dec
and
lea
push
aad
int
mov
adc
jbe
adc
insl
push
data16
adc
bound
cs
sbb
movsb
mov
mov
jnp
ret
aam
inc
or
stos
add
or
inc
and
cmp
pop
push
call
icebp
ret
add
fs
push
or
jge
fdivrs
or
aas
xor
cli
aas
imul
fisubs
je
ficompl
loop
ret
push
jns
sub
jge
into
or
jbe
push
dec
cmp
cmpsl
outsl
adc
leave
clc
pop
push
bound
repnz
js
rcrl
gs
adcb
fs
int3
lock
xchg
add
shlb
lahf
pop
push
dec
push
pop
adcl
push
bsr
pop
in
orb
add
sarl
xchg
pop
adcb
or
cltd
bound
leave
mov
cmpsb
idivb
or
sbb
jo
add
lea
adc
cmp
or
mov
aam
stc
and
jl
xchg
jge
jecxz
push
in
push
outsl
shlb
jae
lods
rorb
lahf
imul
shrb
hlt
repz
lods
jle
das
mov
stos
scas
mov
add
clc
or
and
and
pop
iret
xchg
dec
xor
pop
cli
in
pop
xchg
repz
adc
clc
lahf
sub
sti
xchg
jno
pop
stc
dec
jno
cwtl
in
mov
adc
pop
idiv
addl
shll
shll
push
rorl
les
js
sbbl
bound
cmpsb
rcl
scas
jge
mov
xchg
push
mov
jno
in
fdiv
lds
std
arpl
sbb
popf
push
jle
cmc
inc
xchg
lahf
movsb
loop
out
out
flds
inc
add
cmpsl
pop
inc
add
or
ret
jecxz
sbbb
adc
push
shlb
or
adc
jp
mov
add
mov
mov
and
mov
js
xor
sbb
fildll
dec
mov
popa
sbb
push
mov
fs
cli
lods
inc
ret
jnp
pop
sbb
mov
ret
es
jge
mov
xlat
out
add
fcmovne
add
mov
jecxz
dec
stos
mov
lods
and
add
pop
sbb
movl
push
frstor
stos
xor
xchg
or
ljmp
push
pop
mov
push
bound
add
cmp
idivl
jg
sahf
mov
shrb
pop
lock
dec
shrb
push
dec
or
or
into
pop
in
pop
pop
mov
jmp
dec
inc
fidivs
loop
and
mov
cmpsb
in
jb
mov
sbb
add
sbb
imul
or
mov
hlt
add
jmp
jg
lock
mov
lret
mov
mov
jne
jp
push
stos
enter
imul
sub
xor
lea
fsts
sub
int3
adcb
les
add
loopne
out
mov
or
sub
push
js
jae
cmp
or
sbb
push
jmp
sub
imul
lret
sti
in
dec
notb
add
cmp
cmp
dec
pop
mov
jmp
xchg
dec
lods
dec
mov
or
mov
outsb
inc
xchg
adcl
push
or
lret
lods
xchg
mov
fwait
popa
inc
jmp
popa
cmp
leave
adc
decb
xor
sub
pop
popa
popa
std
test
inc
in
xchg
loopne
xor
pusha
repz
xor
or
jns
fnstenv
in
xchg
cld
add
sbb
sub
push
pusha
sbb
ljmp
push
pop
mov
mov
shr
inc
jge
repz
mov
ds
mov
ficoml
lods
int3
pusha
lods
mov
outsb
test
push
je
fsubrs
dec
iret
pop
lds
call
xchg
data16
push
dec
and
push
outsl
cmp
sbb
fbld
das
add
sub
stos
pop
clc
mov
shll
xlat
or
rcrb
sti
les
xchg
in
fstl
fidivs
push
lds
jno
jno
into
mov
jo
mov
push
mov
sbb
sbbb
cs
out
inc
pushf
mov
test
fsubp
es
lods
and
pop
pop
lcall
lods
dec
or
fbld
mov
mov
push
leave
mov
add
fldcw
jbe
repnz
out
adcb
in
push
sti
xor
mov
leave
mov
pop
inc
jl
xor
insl
or
xchg
out
pop
fcmovu
xchg
push
std
or
mov
xchg
dec
rorb
and
popl
xor
fsubl
mov
add
jg,pt
insb
xchg
lret
mov
inc
pop
stc
mov
adc
and
jmp
and
sti
loopne
frstor
testl
aaa
sbb
addr16
and
repnz
jp
insl
ljmp
cwtl
sti
mov
call
aam
out
repz
sahf
jbe
push
adc
mov
lock
insl
xchg
mov
dec
clc
sbb
imul
jmp
loop
mov
pop
ret
adcb
push
stos
sbb
div
arpl
jb
sbb
push
loopne
sub
aam
dec
test
sub
mov
xorb
outsb
cwtl
insb
xchg
cld
rcll
fcompl
popa
cmp
dec
hlt
sub
lods
adc
hlt
fisubs
inc
sbb
repz
jecxz
mov
jbe
or
mov
mov
cmpl
jle
sarl
ljmp
push
leave
js
mov
mov
fisubrs
xor
pop
pop
pushf
mov
xchg
or
shrb
je
fadd
and
sub
fnstenv
inc
and
cmpsl
fistpl
addl
push
fstpl
fcoms
jle
int3
push
jle
lock
test
jb
outsl
xchg
sub
pop
mov
loop
mov
sbbb
movsb
pop
clc
movsb
fstpl
xor
sbbb
gs
mov
mov
lock
outsl
mov
pop
int3
inc
cmp
lds
cmc
loopne
xchg
xor
or
sbb
sbb
mov
std
adcl
cmp
les
mov
mov
je
pushl
push
xchg
lds
out
jne
icebp
insl
lahf
mov
test
adc
iret
sbb
xchg
jecxz
in
xorl
jne
jle
inc
ja
in
jmp
aaa
mov
adc
imul
aaa
enter
stos
lahf
clc
jp
in
mov
movsb
jnp
lods
daa
insl
out
les
xor
cwtl
adc
jmp
jae
cld
mov
sbb
xchg
lret
sub
add
add
pusha
lods
jne
mov
ror
movsb
jb
push
jecxz
popl
popa
mov
jae
dec
js
dec
mov
cli
mov
lret
push
out
stos
lods
xchg
mov
enter
mov
repz
clc
mov
push
mov
pop
test
decl
movsl
xchg
test
fcoml
cltd
outsl
loopne
fimull
je
push
in
mov
loope
fyl2xp1
std
movsl
cmp
sbb
std
xchg
imul
sbbb
push
movb
push
les
subb
int
cwtl
in
stos
and
mov
mov
xchg
test
adc
inc
and
ret
adc
or
cs
jecxz
or
hlt
adcb
int3
outsb
loopne
nop
in
cli
in
add
lods
sbb
ja
scas
add
mov
cmp
cmp
lods
hlt
mov
insb
popa
notl
pop
cmp
inc
push
clc
arpl
outsl
xor
jb
push
mov
xchg
adc
aas
lds
pusha
dec
fsubs
gs
sub
push
test
cmpsl
inc
push
roll
movsl
stos
ret
xlat
das
cli
dec
adc
loope
sbb
pop
mov
arpl
push
subb
dec
adc
mov
mov
mov
push
ss
jnp
cmp
fldcw
pop
insl
in
mov
gs
mov
adc
lock
jge
sub
insb
xchg
sbb
or
fs
lods
aas
jb
mov
mov
pop
xchg
fists
inc
jmp
mov
loop
lahf
testl
movsb
dec
fadds
mov
xor
es
pop
negw
fs
and
jne
add
inc
rol
dec
cwtl
das
jmp
sbb
jb
aaa
rcl
mov
pop
jns
xchg
hlt
sub
mov
jge
fcmovne
push
fs
or
sub
jae
jne
ret
mov
bound
and
or
fists
or
mull
pop
stos
das
jo
xchg
push
jecxz
adc
test
out
sahf
jge
dec
sbb
dec
jp
fcompl
pop
mov
mov
sbb
mov
ss
push
call
mov
movsl
mov
dec
pop
pushf
repz
repnz
cltd
rorb
dec
add
jecxz
cltd
and
loopne
lea
mov
adc
shll
cmp
stc
inc
lods
and
mov
jbe
shrb
dec
xchg
sub
mov
and
scas
pop
push
adc
or
rorb
jne
push
movsl
idiv
rcll
sub
sub
dec
push
test
jne
std
ret
fistpl
inc
mull
fbstp
cmp
pusha
ja
aas
int3
movsb
add
arpl
fldcw
lds
lcall
add
and
fnstcw
mov
pop
and
insb
outsb
and
xlat
sbbl
push
leave
pop
push
dec
js
testl
jns
xchg
mov
ffree
lds
xor
xor
aam
ljmp
ficoml
push
jmp
mov
lahf
stos
loop
mov
cld
jnp
mov
out
xchg
mov
or
dec
pop
imul
and
ret
jp
lds
popa
adcl
cwtl
cmp
out
ds
dec
addb
ja
pushf
int
pusha
pop
dec
inc
dec
jnp
mov
shll
call
xchg
loopne
inc
addr16
and
pushf
fisttpl
push
pop
ja
xchg
push
leave
arpl
into
inc
xchg
mov
add
repz
sahf
call
addb
or
ja
mov
shr
call
int
cmp
fadds
sub
mov
mov
test
mov
orb
sbbb
jp
ja
xor
sub
mov
cs
out
adc
add
fs
cmc
push
pop
mov
cld
rcr
push
sbb
ljmp
pop
andb
loop
je
and
sbb
lret
cmp
dec
xchg
pushl
xor
cld
push
mov
sub
shrl
je
cs
xor
mov
sbbl
cld
lds
dec
popf
repz
jno
or
mov
mov
dec
xor
or
lods
cmp
movsb
and
fadds
popf
ret
mov
cmpsl
xor
scas
jo
shlb
adc
push
scas
int3
cmp
outsl
pop
xor
mov
inc
daa
out
sahf
daa
pushf
push
rcrb
pop
xchg
rcl
mov
jo
out
mov
aad
pop
jle
dec
and
mov
lock
imul
movsl
pop
js
addl
cli
or
xchg
movl
mov
jno
xor
mov
in
lds
or
popa
shrl
roll
sub
movsl
sbb
incl
loopne
xor
inc
push
or
jne
push
cmp
add
lods
fidivrl
lods
push
xchg
movsb
loope
int3
daa
lret
xor
add
ret
mov
mov
mov
lods
cmp
mov
cmp
adc
je
lret
jge
mov
mov
cltd
mov
push
mov
inc
and
into
inc
ljmp
add
fmull
ret
xlat
xor
incl
fistpl
in
je
data16
lods
adc
fs
lods
and
jnp
sbb
frstor
dec
std
jg
ror
cmpl
rclb
cmpsl
inc
movsb
and
add
fadd
add
js
popf
adc
test
adc
dec
loop
lea
and
cmp
sti
fucomi
adc
inc
insl
pop
cli
pushl
jno
push
arpl
leave
es
cmc
cmp
jne
mov
ljmp
mov
mov
jg
mov
sbb
add
mov
data16
adc
push
dec
arpl
sbb
inc
cmp
add
xchg
iret
es
aam
aad
xor
test
push
mov
mov
mov
push
aaa
push
outsl
xor
push
push
sarl
pop
aaa
bound
aam
test
rorl
nop
into
adc
sub
jns
or
xchg
movsb
addr16
mov
xor
fwait
cmp
int3
xlat
push
push
sbb
frstor
sub
add
adc
inc
dec
roll
out
popa
push
test
push
popf
cwtl
fcompl
addr16
cwtl
in
mov
dec
testl
mov
pushf
sub
sbb
pop
xor
outsb
add
mov
sub
adc
mov
imul
fistl
mov
bswap
or
jecxz
push
ficomps
dec
mov
andl
pusha
mov
sbb
test
repnz
or
das
mov
xor
mov
test
sbb
or
or
into
loope
pop
push
aad
daa
inc
popf
dec
cmp
pop
cmp
pop
cmp
xchg
mov
cmp
popf
jnp
mov
scas
inc
and
shlb
gs
mov
jb
push
mov
pop
cmp
cmp
push
movsb
scas
sub
arpl
or
dec
mov
into
inc
pop
mov
loope
test
and
mov
mulb
dec
cmp
ficomps
outsb
jbe
addr16
jg
xor
push
outsb
cmp
or
xchg
jae
xor
in
imul
push
movsl
stos
push
jns
xchg
cmp
pusha
xor
xor
push
jmp
mov
test
push
jnp
fists
inc
mov
into
and
jg
adc
in
lea
out
sbb
xchg
popa
pop
aaa
sbb
repnz
pop
mov
stos
jb
fldcw
cmp
jnp
repz
xor
sbb
sub
repz
xchg
jb
bound
and
xorl
adc
lock
gs
push
dec
sub
in
rorl
test
mov
mov
add
ret
shr
outsl
ja
outsb
mov
pushf
out
scas
jecxz
sbb
mov
xchg
lahf
mov
loopne
jns
xchg
lods
and
test
jns
rcl
jge
sbb
or
pop
in
in
aaa
sbb
push
xor
jl
cmpsb
icebp
fildl
cltd
cmp
cmpsl
dec
mov
ret
and
dec
out
mov
and
xchg
xorb
mov
lret
xlat
xchg
mov
inc
adc
in
call
fcomp
jecxz
cmpsb
dec
inc
adc
sbb
xchg
cmp
jae
sub
dec
add
subb
cmpsl
pop
inc
or
sub
repnz
xchg
shlb
push
mov
test
jmp
test
push
jnp
jo
faddp
imul
mov
popf
ficoml
adc
loop
push
add
add
lcall
dec
in
aaa
pop
adc
ljmp
and
sub
shll
mov
lret
cmp
pop
fdivr
movl
xor
xchg
dec
jb
or
mov
xchg
mov
sub
xchg
sbb
cmc
insl
or
aaa
repnz
inc
leave
push
dec
dec
bound
jle
adc
in
push
daa
dec
in
push
xchg
imul
dec
lcall
sbb
mov
cld
or
in
jo
and
jp
sbb
push
aad
mov
push
inc
aam
sub
push
movsb
xor
jle
cmp
ljmp
or
dec
sub
jnp
divl
imul
mov
push
sub
add
es
push
sub
mov
addr16
jmp
call
jge
fmuls
jl
xor
out
ja
nop
stos
jmp
pop
mov
cmp
or
sub
push
fstpt
pushf
adcl
or
imul
xor
cmc
repnz
popa
mov
test
add
xchg
mov
lods
test
mov
jno
inc
and
push
imul
adc
jno
sub
sub
jnp
outsb
lods
icebp
ds
dec
or
xadd
xor
pop
nop
push
xchg
add
pop
call
out
cmp
xchg
imul
cwtl
test
pop
mov
stos
mov
loopnew
insl
mov
xchg
xchg
and
lock
in
rcll
aam
mov
or
pop
adc
cli
in
sbb
inc
mov
mov
jnp
add
mov
fstpt
std
sub
jmp
nop
sti
fildll
stos
pop
dec
and
xor
mov
xorb
mov
int3
mov
push
push
adc
or
mov
xchg
test
in
pavgw
mov
xchg
xchg
pop
jb
inc
mov
inc
mov
and
and
add
mov
adc
mov
mov
adc
push
fsub
adc
xchg
and
hlt
adc
pop
mov
lods
mov
in
xchg
fildll
bound
push
xor
pop
es
clc
in
push
mov
fnstenv
or
xor
and
sar
aaa
gs
mov
mov
dec
adc
in
pop
ljmp
fdivr
jb
scas
or
je
int
adc
loope
mov
xor
mov
xchg
clc
xor
es
and
shll
insl
ret
jge
pop
mov
inc
inc
or
mov
shll
insb
mov
test
and
jns
imul
push
adc
pop
and
xor
sbb
pop
push
push
loop
xor
repnz
xchg
loope
cmpsl
roll
or
je
test
stc
ficompl
push
push
push
fcompl
ljmp
lret
push
push
jae
aas
clc
jo
mov
out
push
jnp
je
jbe
insl
jl
sahf
dec
pop
repnz
cmpsl
or
dec
cmp
jbe
xchg
aas
repnz
in
in
jge
enter
xchg
test
mov
lods
imul
gs
and
in
bound
push
inc
cmp
adc
cli
leave
mov
les
cmc
and
daa
sub
ffree
dec
or
enter
insb
dec
push
mov
ret
dec
mov
insb
pop
push
cli
mov
scas
fcoms
dec
push
xchg
outsb
inc
es
test
push
sbb
lcall
or
push
cmpb
fwait
add
xor
out
jb
cmp
repnz
scas
test
push
jnp
push
mov
jp
lods
fisttps
movsl
mov
xchg
sub
leave
lds
stos
rorb
dec
je
and
mov
out
fnstenv
clc
xor
es
sbb
fistpll
data16
cmp
push
xor
inc
loope
test
out
and
test
jo
mov
lock
rcrb
or
mov
les
and
xchg
or
mov
or
dec
xchg
push
mov
sbb
push
stos
lcall
cld
stc
pop
loopne
fucomi
or
ss
fwait
cmp
sub
xchg
or
imul
sbb
scas
xchg
push
mov
pop
mov
and
mull
mov
cltd
nop
push
jecxz
sbb
cltd
pusha
das
adc
lock
jl
inc
cwtl
cmp
dec
lcall
xchg
mov
mov
subl
jmp
push
cmp
push
fisttpll
ret
adc
iret
std
mov
sub
xchg
cmp
mov
xchg
pop
movsl
sbb
ret
sbb
outsl
mov
pop
jb
sarl
inc
jge
out
inc
call
adc
and
roll
icebp
xor
jbe
mov
lret
fs
sbb
jg
mov
lret
push
jecxz
scas
int
or
sbb
or
mov
dec
lds
mov
stc
jecxz
sbb
int
repz
scas
sbb
or
mov
outsl
test
dec
stos
and
inc
push
inc
test
int3
and
ljmp
pop
mul
and
cmpsl
lea
inc
daa
fsubs
push
adcl
jle
push
jno
sub
push
cmpsb
mov
inc
cmp
pop
loope
lret
dec
mov
movsl
lahf
mov
aam
sarb
jb
lea
sahf
lcall
sub
mov
pop
les
gs
mov
cli
or
or
jnp
hlt
cwtl
fwait
jnp
popa
jbe
shl
mov
imul
ficompl
mov
in
pushf
jns
sbb
push
adc
xlat
cld
idivb
sub
xor
loop
ficomps
int3
mov
out
std
jle
movb
jg
mov
lret
add
movsb
imull
imul
aam
mov
ljmp
mov
fsub
imul
jmp
jb
popa
rcl
and
push
jbe
je
lods
popf
arpl
loop
movsl
shrb
jnp
andl
add
mov
pushl
cmp
mov
in
adc
cwtl
pop
arpl
fdivs
in
std
das
mov
jg
clc
call
pop
icebp
sbb
loopne
push
outsb
push
leave
lods
pusha
insl
cli
push
adc
or
idiv
mov
loop
ffree
pop
push
or
sub
adc
cmp
push
jo
xor
insb
pop
push
sbb
adc
in
lock
lahf
pop
imul
bound
xor
jmp
mov
cli
fldt
push
call
insl
frstor
xor
jne
or
lock
movl
jo
daa
pop
adcl
mov
ret
adc
aam
clc
add
in
ljmp
dec
adc
int
stos
adc
es
pop
push
outsl
mov
mov
aas
inc
sbb
mov
lahf
cmovb
dec
cli
jmp
jge
fndisi(8087
leave
call
push
mov
mov
xchg
idivl
xor
adc
or
xor
repz
xchg
add
cmp
jl
mov
das
jns
cs
jno
inc
outsl
insl
fsub
dec
xchg
jb
lahf
add
movb
out
jmp
cmp
rcll
gs
test
add
xchg
and
pop
add
les
adc
lret
mov
mov
push
scas
lock
fistps
jg
inc
push
inc
fistpl
xchg
jno
in
add
fwait
and
adc
mov
push
or
into
or
mov
mov
and
fldt
xor
xlat
call
mov
movsb
and
and
data16
jge
loop
lahf
xchg
adc
data16
xchg
arpl
sar
xor
and
adc
jp
gs
shr
fstpl
popf
popf
xchg
lcall
fs
inc
test
pop
clc
lds
fwait
add
ret
inc
fimull
and
adc
arpl
add
dec
and
scas
sahf
lcall
sbb
add
cmp
push
repz
cli
shl
cld
ret
mov
outsb
inc
jb
jge
push
stos
xchg
jb
lock
fsubp
or
cmp
push
cmp
pop
or
test
notl
push
je
xor
loopne
into
add
js
pusha
xor
mov
in
push
xchg
aad
mov
add
mov
cmp
adc
pop
ror
or
imul
daa
add
es
js
cmp
mov
add
sbbb
ds
mov
jnp
and
dec
xchg
jns
lea
jbe
cmc
mov
rcrb
jbe
xor
mov
mov
insb
and
enter
jbe
mov
sbb
xchg
push
xchg
ret
ja
sub
rorb
push
scas
push
shlb
lret
adc
add
jae
or
out
inc
xchg
sti
add
push
sbb
and
fsubp
sbb
xor
test
adc
iret
adc
dec
inc
out
cld
add
mov
mov
ja
pop
inc
adc
add
mov
div
and
xchg
xchg
xor
sahf
aas
cmp
sub
stos
mov
adcl
pop
and
jmp
clc
loopne
xlat
xchg
jl
into
cmp
xor
sub
imul
test
mov
aas
out
cltd
xor
adc
shrb
iret
outsb
in
dec
jg
shl
jnp
and
xchg
sub
cwtl
cld
jecxz
repnz
rol
hlt
fidivrs
sbb
out
int3
cmpsb
hlt
adcl
lock
daa
clc
lods
jbe
fbstp
lods
mov
sub
pushf
dec
iret
adc
imul
scas
add
add
adc
xlat
inc
jmp
inc
adc
mov
sbb
call
in
ffree
add
test
inc
shl
insl
mov
jl
movsb
negl
enter
ja
push
mov
xchg
sbb
jne
mov
mov
ret
lret
jae
repnz
scas
ret
stc
into
inc
xorb
lcall
ficompl
or
xchg
lock
push
sub
mov
out
push
fs
add
jne
xor
cmpsl
cs
arpl
fsubrp
test
push
sti
leave
adc
lret
mov
xchg
mov
jp
inc
mov
and
pop
mov
xor
repnz
mov
sbb
mov
int
pop
inc
test
sub
rcr
int
loop
jle,pt
outsb
dec
push
pop
cwtl
scas
out
orb
push
iret
aad
adcb
aam
or
mov
stos
gs
ficoml
mov
or
iret
mov
loopne
adc
in
shl
sbb
inc
dec
mov
gs
adc
mov
rclb
in
subb
lds
or
mov
stos
cmp
cltd
loope
push
enter
mull
nop
hlt
cmp
dec
dec
push
lahf
arpl
push
or
pushf
sub
mov
mov
sbb
lock
lret
jns
xor
int3
sbb
arpl
xchg
push
jl
mov
xchg
faddl
aaa
pushl
cli
cmp
push
sbb
mov
icebp
ljmp
dec
test
inc
rorb
cwtl
xchg
aam
xchg
mov
xor
dec
arpl
mov
xchg
lcall
lcall
cld
dec
movsl
sahf
pop
or
lea
mov
pop
jmp
js
ret
mov
push
inc
je
inc
icebp
mov
jne
push
mov
add
mov
mov
loop
dec
outsl
fwait
add
add
loopne
les
dec
push
and
lret
sbb
into
adc
sbbl
rol
and
mov
clc
add
pop
and
mov
cmp
fstl
adc
xchg
or
test
mov
and
xchg
clc
scas
fwait
xchg
std
leave
lret
lods
popa
mov
pop
ret
cli
test
mov
popa
and
ror
push
lret
xor
cmp
rcrb
push
sahf
mov
popa
cltd
out
xchg
dec
push
sahf
fs
dec
mov
jnp
clc
xor
int3
adc
movsl
pop
xchg
mov
fwait
outsb
int3
je
sbb
fcmovnb
jo
dec
push
popf
fucomp
jmp
xor
xor
ja
and
test
fwait
test
repz
rcll
fnstsw
in
outsl
xchg
mov
jae
inc
das
inc
out
jg
xlat
rcrb
lcall
jne
aam
dec
mov
xor
or
mov
scas
rclb
or
push
xchg
loope
mov
mov
stos
and
cli
aam
outsb
add
scas
inc
popa
jns
push
adc
sub
xor
or
xchg
aam
movsb
and
rorb
cmp
mov
sbb
and
and
popf
xor
xchg
and
pop
ss
pop
mov
mov
pop
stos
mov
xor
jne
inc
rorb
mov
push
mov
fwait
mov
leave
mov
pop
pushf
ja
xor
popa
aam
push
mov
in
pop
movsl
mov
data16
adc
and
aam
in
es
ret
adc
mov
call
iret
jae
inc
gs
inc
stos
iret
insl
daa
xchg
ret
mov
shrl
or
pop
loopne
cld
ja
adc
sub
mov
sbb
inc
les
sbb
jo
nop
decb
push
inc
sbb
mov
sub
lret
xchg
sarl
cmp
jle
jo
sub
scas
mov
mov
ficoms
and
sti
lahf
imul
int
push
mov
jmp
xor
xchg
out
cmp
inc
xchg
mov
cwtl
pop
in
adc
aad
clc
adc
pop
popa
inc
rcr
jb
sub
mov
mov
push
into
dec
mov
mov
insb
mov
mov
mov
gs
fildll
pushf
sub
in
or
xor
cli
xchg
cmp
sub
adc
int3
mov
ja
jns
inc
pop
rcrl
clc
int3
fisubl
xchg
xor
cwtl
sub
sub
imul
aaa
pop
int3
xchg
inc
fdivrl
xchg
xchg
mov
outsl
pop
cmp
pop
pusha
ret
adc
mov
dec
jl
xchg
pushf
dec
in
jbe
add
test
call
daa
xchg
add
adc
xor
and
push
jecxz
arpl
fsts
nop
or
fsubrs
ja
neg
xor
in
pop
out
adc
xor
and
and
or
pop
bound
daa
cmp
fstl
fnstcw
out
mov
add
jne
pop
call
jle
sub
mov
int
push
je
lods
fucomp
or
pop
and
shl
call
insl
sub
sbb
sub
in
cmpsl
daa
pop
int3
test
sahf
mov
mov
mov
push
arpl
cltd
aas
pusha
subb
sarb
dec
ror
mov
test
insb
aad
movsl
jae
xor
xor
mov
ret
popf
mov
das
xor
enter
pusha
ss
xor
xchg
in
inc
cmp
in
aas
cmp
push
xor
mov
into
in
hlt
mov
or
gs
cmovnp
inc
je
and
dec
cmc
inc
xchg
mov
pop
cs
inc
rorb
stos
add
push
gs
arpl
in
enter
push
xor
iret
mov
dec
cmp
mov
mov
iret
sbb
xor
add
enter
cld
mov
and
loop
xlat
sub
lds
bound
jmp
xchg
pop
enter
repz
jns
inc
popf
pop
repnz
jno
mov
fdivr
es
and
pop
xchg
pop
mov
sbb
out
xchg
xor
xchg
out
repnz
pop
dec
bound
loop
mov
push
aad
xchg
pop
xor
call
dec
adc
movsb
mov
cld
addr16
add
addr16
adc
pop
add
add
fisttpl
jp
or
cltd
mov
outsl
jne
outsb
in
xor
fmuls
pop
or
jb
movsb
mov
mov
jg
aaa
mov
mov
xchg
icebp
pop
data16
cld
movsl
scas
data16
mov
jp
nop
in
adc
xlat
sub
shrb
mov
into
popf
adc
pop
adcb
outsb
xchg
cmp
mov
jp
push
xchg
in
pop
jp
decb
adc
sub
mov
iret
push
jecxz
dec
lret
add
test
push
and
js
inc
jno
sub
push
cmc
lds
lods
jne
and
dec
cmpsb
cwtl
push
and
or
iret
lret
jl
jbe
bound
mull
popf
or
xchg
sub
popl
arpl
xor
mov
mov
mov
jne
pop
jne
mov
je
mov
xchg
insl
mov
loope
pop
call
sub
push
ljmp
xor
sbb
jg
imul
das
push
mov
push
xor
inc
push
das
pop
stc
and
mov
fstl
or
sbbb
insl
jge
and
dec
xor
mov
loop
hlt
add
daa
push
fwait
adc
in
out
data16
loop
shrb
aaa
and
js
xor
mov
pop
jmp
std
push
in
dec
pop
in
repz
pusha
std
mov
pop
and
push
inc
dec
jmp
loopne
aas
jb
xor
testb
stos
mov
xor
add
push
adcb
cmpsl
push
push
pop
outsl
sub
iret
dec
dec
jns
ljmp
push
stos
cmc
add
pusha
mov
mov
xor
iret
ljmp
aas
outsl
inc
lahf
pop
push
scas
aas
push
mov
push
mov
sub
dec
aas
add
sbb
daa
stos
shlb
aaa
jbe
mov
in
fs
mov
pop
pushf
and
sti
and
clc
mov
decl
jmp
xchg
clc
gs
pop
mov
loop
jp
mov
stc
rsm
arpl
jg
mov
jno
mov
fadd
es
fwait
out
icebp
mov
imul
cmc
dec
push
push
push
xchg
mov
loope
cld
fiadds
or
fstpl
in
mov
jge
movsb
mov
push
mov
and
mov
mov
jne
push
sbb
dec
addb
pop
aas
lods
mov
push
sbb
jb
push
sub
jo
sbb
nop
inc
scas
cmp
popa
hlt
insb
sub
xor
mov
add
adc
cli
mov
inc
xlat
add
fisubrs
mov
inc
adc
cmp
dec
jge
in
pop
add
cld
sub
xchg
mov
jno
inc
inc
adc
dec
inc
stc
loopne
sbb
mov
jecxz
imul
add
pop
sbb
xlat
jmp
mov
cmpsb
in
dec
in
hlt
mov
jns
fcmovnb
jnp
mov
pop
lret
xchg
insb
mov
dec
popa
call
gs
jge
add
enter
mov
and
scas
dec
sti
leave
mov
fmulp
push
xchg
gs
or
adc
lcall
nop
das
xchg
dec
cmp
push
mov
lret
pop
mov
jg
dec
mov
out
or
mov
int
gs
lock
mov
lret
test
int
jae
scas
and
fwait
pop
dec
out
les
outsl
dec
adc
adc
sbb
push
sub
mov
jmp
jns
add
mov
push
scas
push
shll
push
aam
dec
mov
lock
mov
push
movsl
fsubrs
jge
in
imul
mov
int
data16
lea
in
fcomps
popf
test
mov
ror
xchg
adc
lahf
cmc
push
ret
test
mov
js
shrb
test
dec
push
je
pop
push
idivl
out
dec
dec
or
pop
push
stos
addr16
xchg
mov
jnp
lret
mov
in
lods
int
xchg
or
loop
mov
add
int
or
sub
jp
or
gs
js
loop
mov
out
xor
inc
cwtl
adc
and
sbb
xor
xchg
xor
mov
sub
add
mov
cmp
sbb
outsb
push
idiv
das
mov
fdivl
pop
jne
pop
push
pop
sbb
inc
jl
mov
stos
sahf
xchg
imul
jg
adc
cmpsl
pop
daa
addr16
int
bound
hlt
adc
aam
mov
test
rcll
dec
dec
stos
lret
mov
test
bound
add
mov
adc
pop
jo
push
es
push
add
mov
sti
test
inc
std
dec
out
inc
cmp
cwtl
xor
stos
cmp
jo
imul
in
aas
or
sbb
in
std
mov
cmp
sbb
test
cmp
add
call
hlt
jb
lcall
ret
cld
test
sbb
cmpsl
mov
xchg
lret
mov
fidivrl
jle
jnp
idiv
pop
ds
jae
rcrb
aam
leave
in
cli
jnp
xchg
lea
stos
pop
repz
jo
out
fisubl
mov
mov
add
stos
mov
pusha
out
nop
jmp
sti
pop
sbb
testl
fsubl
mov
pop
or
pop
les
nop
cmp
sbb
jno
jb
pop
inc
fst
test
test
push
jp
decb
aam
jp
or
and
or
adc
outsl
fisubrl
or
ficomps
out
jecxz
scas
xchg
sub
push
das
push
adc
sbb
ss
push
sbb
sbb
xor
cli
lea
outsb
add
xchg
mov
jecxz
cmp
loop
pop
loop
insb
mov
push
xchg
and
inc
push
inc
lods
mov
scas
lret
mov
jb
mov
pop
fsubl
push
bound
popf
push
ret
mov
nop
sub
add
mov
cmp
adcw
les
sub
dec
push
ds
in
loope
add
jo
cmp
adc
jg
sti
jge
mov
pusha
outsb
pop
mov
punpckldq
sbb
xor
addr16
jo
imul
push
ret
and
movsb
stos
mov
dec
add
push
orb
xlat
cmp
aam
sti
jne
cmp
sub
jno
repz
mov
fists
lods
roll
xor
cmpsb
fwait
push
outsb
movsb
ss
pop
out
cmpsl
insb
jo
push
jno
push
xor
push
cltd
sub
inc
add
fs
pop
rcrl
cmpsl
aas
pop
repz
sbb
cltd
lahf
dec
in
fistpll
in
inc
add
mov
je
push
jmp
or
mov
negb
out
adc
loop
decb
push
adc
in
jbe
pop
add
adc
xor
lods
pushf
xor
movsl
dec
add
mov
xchg
xchg
jmp
sub
loop
call
add
pushf
movsl
andb
lcall
or
xchg
fimull
sub
cmp
pop
jb
push
jne
add
imulb
adc
orps
shlb
xchg
xchg
add
fucomip
cmp
pop
inc
pop
inc
cs
test
inc
stos
in
fstps
adc
inc
stc
pushl
icebp
outsb
add
adc
sub
stos
xor
in
cmc
adc
lcall
in
xor
mov
pop
sarl
mov
xorl
mov
orl
mov
or
sbb
call
jo
rorl
mov
in
dec
xor
movsl
sti
mov
lret
push
loope
cmp
icebp
in
jno
xchg
cmp
ds
sub
pop
outsb
add
mov
stos
cld
mov
inc
cmp
push
fwait
repnz
dec
sbb
femms
pop
xor
xor
pop
jb
push
rcrl
fmul
dec
xchg
xchg
lds
mov
push
add
xor
inc
xchg
mov
fwait
jle
imulb
data16
int
test
xchg
pop
adc
outsb
xchg
and
pop
enter
in
and
cli
sbb
cli
leave
mov
pop
xor
mov
sbb
xlat
pop
jmp
add
mov
shrb
arpl
ret
pop
adc
inc
dec
lock
or
mov
pop
mov
adc
cmp
jne
xor
lahf
sbb
jno
dec
inc
pop
mov
lock
lock
mov
push
lods
ss
inc
call
push
shrb
sbb
stos
sarl
les
orl
xor
mov
dec
sbb
xlat
fcomps
or
popa
pop
pop
mov
xchg
and
mov
fistps
fwait
jo
les
rcrl
jge
fiaddl
pop
cmc
stc
cmp
push
mov
imul
cmpsb
cmp
leave
pop
cltd
xchg
jecxz
iret
lods
lahf
cmp
test
sbb
mov
insl
shr
shll
jp
inc
and
mov
jg
dec
push
sub
sbb
lods
aam
add
xchg
mov
addl
and
filds
loope
add
dec
cld
adc
or
cltd
or
jo
dec
out
lret
icebp
clc
and
ja
fwait
or
clc
cmp
rorl
lods
hlt
cmpl
pop
nop
pop
cld
add
jne
jnp
movsb
into
mov
test
bound
ja
xor
inc
or
cmp
loope
into
dec
jecxz
adc
jmp
in
roll
xlat
lds
jecxz
sti
and
rep
pusha
pop
out
cmp
in
xor
sbb
imul
push
xchg
xchg
aaa
nop
mov
mov
push
mov
test
mov
fildll
aaa
mov
pop
and
dec
into
mov
xchg
xchg
fidivs
lods
xor
add
and
loopne
aas
pop
jl
iret
cmp
les
xor
outsb
call
in
add
xlat
nop
imull
enter
out
pushf
out
les
aas
loop
imul
fidivrs
pop
and
loopne
mov
ja
xor
in
std
outsl
subl
jo
push
cmp
pop
mov
pushf
xchg
cltd
in
arpl
adc
jbe
mov
leave
xchg
xlat
push
push
cli
mov
xchg
lahf
adc
xlat
pusha
lods
cmc
mov
negb
jl
dec
push
das
test
sarb
popf
or
jl
or
dec
mov
je
cmp
and
leave
nop
call
sti
push
cmp
cmp
mov
call
insb
ds
xor
stc
lcall
das
mov
pop
lcall
inc
jae
fwait
js
fiaddl
adc
jne
or
les
sbb
mul
inc
lods
cld
mov
repnz
push
rcll
fiadds
addr16
inc
aad
inc
dec
icebp
repz
push
adc
hlt
les
sbb
jge
inc
mov
mov
xor
aam
push
adc
mov
adc
inc
xchg
mov
pop
dec
and
xlat
popf
incb
fwait
or
outsl
pop
mov
jbe
in
aam
shlb
ja
sarb
outsb
iret
repz
jg
sti
cmp
lcall
icebp
push
leave
pop
out
adc
fs
bound
lds
in
push
rcrb
sub
mov
leave
orl
pop
fdivrs
hlt
iret
cmp
lock
dec
addr16
jbe
or
or
pop
or
or
xor
adc
mov
pop
dec
sub
ljmp
sub
idiv
xlat
adc
arpl
imul
fwait
mov
or
outsl
push
push
loope
mov
lret
movsb
cmp
sub
sbb
fs
lcall
dec
sub
addr16
cltd
mov
sahf
in
jnp
flds
and
jmp
cmp
cltd
jno
adc
and
cmp
inc
cmp
cmp
rorl
jno
push
mov
cmpsb
lock
add
sar
mov
pop
cwtl
jmp
imul
cmp
cwtl
pop
xchg
mov
stc
fnstcw
dec
or
repz
lock
dec
hlt
lret
xchg
add
roll
out
int3
cmpsl
je
or
and
cli
rcr
sub
cli
pop
idivb
lret
mov
int3
dec
shlb
in
pushf
lods
stc
icebp
cmp
inc
pop
sub
add
mov
les
mov
add
je
jns
add
push
push
mov
jmp
gs
rcr
lahf
cmc
jbe
ja
dec
ljmp
ret
scas
gs
or
fdivrl
les
lcall
add
ljmp
dec
int
mov
xchg
ret
popf
add
outsl
sub
pop
imul
adc
mov
cwtl
jmp
je
jp
out
xchg
icebp
xor
push
out
jecxz
fs
sti
insb
push
xchg
scas
mov
jl
inc
mov
jns
mov
xchg
push
scas
addr16
pop
mov
divl
jo
sub
cmpsb
add
or
sarl
movl
sbb
aad
xor
ret
xlat
movsl
enter
lahf
out
mov
xor
inc
out
scas
mov
cs
jae
test
in
sub
cli
add
mov
hlt
xor
sub
pop
hlt
pop
cmpsl
inc
mov
push
loope
fwait
adc
mov
cmp
xchg
sahf
ss
sbb
mov
mov
pop
push
inc
inc
cmp
adc
mov
push
test
inc
inc
fimull
sbb
pop
idivb
mov
mov
cmpsl
lds
inc
sub
xor
xor
loop
or
fidivs
or
xchg
push
sbb
xor
mov
in
dec
xchg
cmp
mov
xchg
adc
ffree
cmc
stos
lods
mov
out
push
dec
mov
movsl
inc
fbld
cld
xchg
jne
push
pop
pusha
dec
out
push
cltd
sbbl
push
sbb
into
shlb
pushf
sahf
mov
mov
cld
dec
dec
mov
sbb
pusha
xchg
xchg
mov
mov
add
or
adcb
adc
arpl
dec
add
jbe
rcr
loope
fistpl
int
scas
in
aam
or
sbbb
cmp
mov
gs
iret
rorl
cmp
pop
nop
mov
sahf
aad
mov
pushf
jbe
or
popf
adc
das
cmpsl
in
lock
xor
loopne
insb
scas
xor
jle
and
aaa
dec
sti
jae
sbb
xchg
xchg
leave
dec
movl
fsubrl
jnp
sub
jp
popa
movsl
rolb
sbb
push
sbb
cmpl
sar
sbb
mov
push
test
mov
jecxz
lahf
xchg
sbb
or
xchg
fadds
pop
rcrb
js
nop
inc
or
sub
aad
add
loopne
fmulp
sub
lahf
arpl
jnp
test
insb
popf
xorb
sbb
jnp
scas
popf
icebp
mov
pop
jmp
fsubl
sub
mov
fs
das
jbe
icebp
fiadds
sbb
inc
push
add
arpl
sarl
and
mov
mov
in
cmc
dec
push
lret
sbbb
adc
sti
fiaddl
test
addb
push
sarl
sbb
fisttpll
pop
jno
xor
mov
out
or
pop
inc
dec
cwtl
and
ret
stos
sub
inc
or
outsl
lret
add
loop
out
add
pop
lea
mov
gs
repz
mov
jo
shrb
cmp
or
push
jbe
mov
mov
pop
call
mov
outsb
repnz
and
xchg
mov
xlat
push
push
imul
lock
arpl
mov
cltd
ljmp
or
pop
jo
cld
and
leave
cmpsl
sub
sbb
pop
icebp
rcr
sub
dec
ja
cmp
push
sbb
scas
mov
cmp
iret
lcall
jnp
ror
ucomiss
sbb
fsubrp
fldt
fstl
fwait
mov
mov
or
cmpb
xor
mov
call
enter
cmp
inc
mov
cli
pop
movsl
and
pop
movl
mov
loope
sbb
scas
ja
out
mov
pushf
stc
xor
add
lahf
hlt
addr16
in
stos
ja
mov
fstpt
into
cmp
cmp
mov
popf
popf
sub
es
pop
mov
test
subb
aaa
or
or
movsb
sub
lcall
sub
pop
fnstsw
jmp
stos
aaa
adc
dec
int3
inc
push
sbb
sbb
xor
ret
roll
push
stc
insb
or
loop
jecxz
jmp
sbb
inc
mov
je
aas
in
mov
ret
cmpsb
sbb
xor
push
mov
mov
notb
cmp
dec
sub
faddl
in
mov
dec
data16
lock
aam
in
jbe
daa
pop
pusha
add
mov
mov
mov
mov
xchg
jmp
adc
mov
sub
lods
mov
mov
dec
add
shlb
push
push
rcll
pop
out
sub
jne
mov
jg
in
xchg
inc
outsl
aad
jns
mov
jmp
mov
std
lret
incl
dec
in
pusha
scas
xchg
jno
sub
mov
sub
mov
xchg
mul
push
cmp
test
sub
jne
in
js
and
outsl
xor
and
sti
cmp
inc
nop
adc
dec
jg
sub
into
xlat
lahf
js
pop
xchg
addb
sahf
and
divb
es
mov
clc
push
sbb
push
push
ret
test
rolb
out
dec
cmp
arpl
mov
mov
rolb
fiadds
ljmp
xor
loop
dec
xor
sti
rolb
in
dec
mov
sbb
movsl
lock
jge
testb
add
lods
xchg
push
sbb
into
testb
xor
les
int
and
cltd
cmp
loop
mov
lret
das
int3
fwait
into
outsl
jo
sub
sub
into
xchg
nop
sbb
xlat
xor
leave
mov
mov
adc
int
xor
popa
xchg
sbb
into
loop
adc
pop
cmp
hlt
shr
hlt
ss
es
sub
shll
xor
lods
movsb
sub
mov
cs
insl
inc
add
shrl
fmul
adc
lds
dec
mov
sbb
inc
daa
daa
inc
xchg
mov
lret
sbb
es
ja
adc
pushl
adcl
push
adc
cmp
xor
xchg
aad
pop
outsb
push
xchg
push
and
insb
mov
scas
jmp
jne
xlat
fcmovbe
lcall
ljmp
inc
mov
pop
push
daa
subb
push
xor
jge
xor
push
int
aas
je
sbb
mov
pop
jne
and
inc
ja
fcoml
int3
mov
adc
and
jecxz
add
mov
pusha
jns
les
add
mov
pop
addl
mov
movsb
sbb
mov
aam
mov
pop
hlt
mov
cmp
and
aam
mov
or
pop
push
ficoml
pop
gs
dec
pop
je
adc
mov
shlb
sti
sbb
mov
out
mov
mov
inc
sub
fimull
int3
out
mov
adc
jae
imul
jl
comiss
sahf
orb
divl
dec
aad
push
gs
or
mov
mov
mov
js
pop
jl
loope
jecxz
add
out
popf
movsb
pop
adc
popa
rcrl
xor
dec
inc
jno
push
hlt
in
rcrb
and
sbb
bound
mul
mov
in
adc
pop
fdivrp
mov
popf
or
leave
adc
call
adc
repnz
inc
and
daa
jmp
or
sub
adc
repz
cltd
push
pop
jg,pt
and
mov
ss
movsl
rolb
mov
jo
pop
loope
lock
clc
and
out
or
jle
imul
inc
mov
pop
test
pushf
repz
xchg
pop
cmp
jbe
push
loopne
xchg
sar
xchg
hlt
cmp
pop
in
or
lret
in
sbb
xchg
in
js
icebp
mov
mov
sub
jle
fs
popf
rorl
rcrb
ljmp
xor
mov
mov
push
jae
imul
out
or
ljmp
cmp
jns
xchg
or
mov
mov
lds
outsl
mov
data16
and
jl
push
movsb
mov
jmp
cmp
dec
in
mov
pop
into
mov
push
jp
fs
cmp
dec
jle
add
push
ljmp
aad
dec
jmp
cmc
mov
inc
inc
xchg
or
cli
cmp
jecxz
mov
lods
pop
in
dec
out
mov
xchg
mov
iret
std
popa
loop
imul
jns
fucom
ljmp
inc
negb
mov
mov
jno
dec
sub
bound
mov
dec
test
adc
ss
jge
mov
jne
lea
repz
filds
inc
and
mov
pop
dec
mov
lea
cmp
pushf
dec
jp
push
xor
dec
stc
push
or
add
sbb
dec
mov
fnstcw
xchg
inc
ss
inc
ds
dec
lret
gs
cmp
inc
sbb
fdivr
cmpsl
xchg
js
leave
jne
imul
gs
dec
jge
ds
lret
popf
dec
push
fcomps
push
stos
and
test
sub
movsb
cmpl
jbe
stos
push
push
mov
mov
cs
jle
adc
push
inc
insl
push
push
pushf
cmpsb
xchg
addr16
fwait
push
add
icebp
push
adc
and
mov
push
pop
repnz
inc
sub
sub
add
repnz
push
xchg
repz
incb
clc
jp
popa
or
lret
cmp
jge
icebp
xor
out
lock
xchg
push
call
je
lock
xor
cmp
lahf
xchg
mov
xchg
mulb
mov
mov
pop
aam
adcl
mov
mov
mov
stos
aam
fldl
lret
push
xchg
in
clc
negb
cmp
and
mov
fistpll
jns
mov
aam
fcomps
or
stos
pop
xor
pushf
push
adc
mov
mov
aad
cmp
aaa
mov
out
mov
je
mov
adc
mov
daa
add
push
sbb
inc
xchg
xchg
pop
repnz
cli
aam
inc
add
sub
cli
inc
mov
dec
push
inc
push
xor
lahf
out
cmpsb
push
je
jl
andb
dec
pop
mov
and
xchg
push
add
pop
sub
iret
scas
out
mov
stos
icebp
and
or
push
punpckhwd
loopne
pop
push
das
inc
adc
cli
test
xor
js
imul
sahf
scas
add
ljmp
xchg
mov
cmp
les
cmc
mov
mov
inc
pop
cld
adc
inc
inc
push
xlat
adc
dec
fwait
das
pusha
stos
add
ret
or
pushf
rolb
xchg
cld
pop
inc
popa
je
dec
loopne
or
add
sub
loope
ja
pop
push
add
xor
mov
aas
pop
idivb
jmp
cmp
add
adc
aas
fistl
xor
adc
das
mov
adc
inc
ds
or
xor
fsubrs
ret
inc
jmp
imul
and
cmpsl
stos
fucomip
mov
insb
xor
fsts
xchg
push
stos
mov
add
inc
ds
xchg
arpl
pop
scas
mov
mov
pop
dec
bound
adc
and
stos
popa
push
xchg
or
aaa
push
ficomps
or
inc
js
adc
lea
xor
fwait
cwtl
jp
dec
or
fstpt
iret
cmpsb
fwait
mov
stc
outsb
xlat
pop
dec
lcall
aaa
mov
outsl
mov
dec
mov
mov
jp
mov
fmuls
mov
mov
pop
xor
sbb
mov
push
sbb
mov
jo
hlt
aas
ret
inc
cmp
dec
sub
int3
add
xchg
mov
mov
push
lods
or
and
icebp
stc
outsl
mov
inc
sbb
adc
push
js
fwait
pop
xchg
ret
aam
adc
pop
inc
xor
jl
adc
std
pop
out
cltd
dec
xlat
jne
xor
out
sti
dec
scas
xchg
fisubrl
mov
jns
and
or
cli
out
jne
pop
push
jb
out
ret
add
nop
push
xchg
add
loope
sahf
out
mov
jnp
std
loope
fs
cmp
inc
shll
in
repz
or
shrl
inc
pop
xchg
mov
cmp
sub
bound
adc
sbb
lret
pop
pushf
mov
clc
out
xor
inc
outsl
test
call
repz
out
pop
xchg
jne
out
mov
scas
ds
sahf
stc
jne
mov
adc
dec
jg
xchg
les
repz
xor
xor
sub
fdivs
add
ficompl
add
cmp
cld
pop
jl
enter
inc
hlt
jle
dec
mov
add
sbbl
fstpt
mov
adc
xchg
rcll
sbb
mov
aad
repz
stc
jecxz
setno
xchg
rclb
test
mov
in
enter
add
lret
push
testl
pop
daa
xor
pop
movsl
loope
mov
mov
dec
adc
or
mov
or
mov
dec
dec
insb
out
push
xor
push
sub
lcall
sbb
mov
fidivs
jecxz
popf
sub
incb
adc
cld
mov
add
adc
fisubs
in
adc
dec
mov
ja
ss
cmpsl
ret
dec
lods
enter
xor
lahf
mov
and
and
sbb
aas
es
dec
add
shrb
dec
sbb
pushf
sti
insl
or
shlb
pop
xor
int
inc
dec
lea
out
stos
adc
cld
imul
insl
mov
mov
pop
mov
sub
imul
mov
stc
arpl
fnstcw
nop
dec
mov
push
mov
gs
push
jae
js
sbb
push
clc
mov
cmp
mov
shlb
push
lods
mov
jge
ss
pop
or
mov
lea
push
dec
mov
pop
scas
pop
bnd
ss
pop
lret
sub
pop
jge
insb
dec
adc
inc
ret
cmpsb
cwtl
mov
lahf
stos
pop
jmp
push
push
fs
sahf
or
inc
mov
push
mov
ret
fabs
mov
fsubp
cwtl
insl
shl
sarb
and
movsl
xchg
add
inc
add
lret
lea
and
or
dec
dec
inc
adc
sahf
push
cmp
outsl
jmp
mov
pop
rolb
cli
in
sbb
cld
ljmp
pop
mov
inc
sahf
mov
popf
scas
push
pop
popa
adc
pop
outsb
pop
pop
repz
aam
fxch
sti
sbb
movb
mov
addr16
dec
jno
imul
inc
push
pop
int
jne
push
ret
cmpsb
mov
cmp
sti
mov
jmp
cmpl
ljmp
mov
pop
addl
loope
adc
sahf
jle
lea
shrb
lds
add
push
dec
test
dec
dec
nop
filds
push
sbb
mov
mov
nop
add
lds
test
pop
inc
cmp
in
mov
sub
out
lods
popa
movsb
in
dec
jp
call
cmpsl
out
data16
out
mov
cmp
mov
adc
into
xchg
mov
iret
les
and
or
sbb
and
enter
loop
mov
mov
jg
push
xchg
adc
sbb
imul
sbb
sub
push
add
lods
xor
xor
xchg
shll
shrl
adc
mov
mov
pusha
mov
in
push
push
clc
sahf
jg
imul
rolb
enter
in
mov
or
xor
dec
iret
push
in
mov
adc
insb
nop
mov
data16
subb
cli
lret
xchg
dec
jle
mov
jb
push
iret
js,pn
insb
mov
fxch
insl
jle
sbb
jge
xchg
mov
test
loopne
test
push
js
inc
inc
popa
cmpsl
cmp
push
xchg
cmp
dec
insb
mov
fisubrs
mov
insl
pop
xor
cld
out
ret
rcll
jae
mov
inc
pop
arpl
xor
incb
add
sbb
xor
or
xchg
xor
cmpsl
fisubrs
push
jmp
push
mov
cltd
insl
repnz
adc
pop
mul
fistl
xor
pushaw
es
pop
fs
aad
jb
lahf
aam
in
test
aad
mov
sbb
fidivl
dec
sub
sub
xchg
out
or
dec
jge
xor
aas
lock
ss
pushf
fnstsw
mov
inc
hlt
pop
pop
dec
in
push
ficomps
sub
adc
inc
mov
mov
add
dec
mov
add
push
cli
sbb
pop
fcomps
mov
lcall
ret
outsl
sub
xor
scas
in
jnp
lods
add
sbb
jl
inc
loope
cmpsb
xchg
lea
push
fstpl
leave
fs
pop
test
cli
lds
stos
nop
inc
cmpsl
call
pop
push
or
call
cs
mov
lret
mov
arpl
xchg
scas
push
aam
xchg
dec
mov
add
mov
pop
test
cmp
adc
pop
aam
pop
add
push
int
subb
fsubrp
adc
inc
add
mov
aad
mov
lcall
shlb
and
jge
pushf
push
roll
push
jecxz
cwtl
das
lods
dec
inc
mov
mov
jle
jae
jmp
std
push
testb
ja
cmp
cmc
and
jae
mov
icebp
stos
fidivrl
xor
leave
jle
mov
test
ljmp
jge
and
push
cmc
clc
mov
daa
dec
repz
xor
outsl
out
xchg
rol
insb
ss
jg
stos
dec
xorw
sbb
icebp
xor
out
loope
add
sub
fsts
jl
cmp
inc
xchg
into
fcomp
pop
imul
mov
or
mov
rolb
xchg
inc
and
cmp
mov
pusha
fbstp
into
push
loope
jp
imul
call
fmull
stos
push
jp
pop
sub
stos
cmp
addr16
inc
ds
mov
xor
inc
fildll
frstor
movsl
xor
cmp
jle
adc
xchg
in
and
pop
icebp
leave
jg
imul
loop
out
xchg
fsubrl
inc
xchg
add
fmul
loop
xor
mov
mulb
cwtl
cmp
push
mov
or
in
or
cwtl
pop
or
sub
in
rol
aaa
test
jo
shrb
ljmp
movsb
lods
push
fsubl
sub
mov
movsl
sbb
mov
adc
xchg
cwtl
and
pushl
pop
lods
xlat
push
int
sub
mov
add
push
mov
mov
jo
pop
insb
sub
imul
mov
cmp
mov
add
mov
inc
je
sub
pop
jne
sub
sahf
or
mov
xor
hlt
ret
stos
xchg
xchg
push
addr16
xchg
cltd
pop
sbb
cmpsl
mov
fnstsw
and
movsl
iret
mov
das
inc
push
in
cmovae
xchg
sub
mov
xchg
dec
xor
icebp
mov
decl
push
jmp
or
lods
push
subl
repnz
popa
pop
cmp
movsb
dec
jnp
sbb
fbstp
xor
jbe
ja
cltd
xor
xchg
fnsave
push
sbb
pop
subb
or
jb
mov
xchg
pop
out
adcl
loopne
ret
int3
xor
test
data16
movsb
jae
mov
push
gs
js
or
cwtl
mov
xor
repz
add
push
xchg
in
in
loop
fwait
or
outsl
dec
xchg
or
adc
imul
flds
add
js
push
mov
and
jmp
imul
xchg
mov
xchg
rcl
dec
std
push
mov
xor
or
adc
out
test
cld
das
cmc
int
les
std
add
cmpsb
jmp
jp
cmpsl
mov
aad
es
aaa
insl
data16
xchg
call
xchg
mov
mov
clc
push
sgdtl
aam
xchg
dec
add
xor
and
mov
cmpsb
add
lods
add
fdivl
and
fidivs
scas
call
cmpsb
dec
nop
cmp
andl
adc
push
in
jb
popa
and
and
sbb
mov
adc
cmc
pop
and
icebp
pop
add
leave
adc
push
pusha
mov
lods
and
inc
mov
mov
mov
jecxz
add
and
adc
xor
cmp
fiaddl
out
sub
jmp
xor
pop
ljmp
pop
add
add
in
movsb
and
sub
xchg
insb
imul
and
push
dec
sub
insl
sub
js
mov
push
insl
and
daa
int
shlb
test
rorl
nop
sahf
pop
pop
outsl
or
mov
jp
dec
inc
data16
cmp
sub
sbb
add
loop
and
inc
out
add
push
sbb
push
jnp
movsl
xchg
gs
jl
popa
xchg
jle
add
xchg
push
add
outsb
inc
mov
or
testl
jne
in
cli
call
pusha
repz
push
jae
cltd
jns
loopne
or
xor
xchg
test
movsb
and
outsb
and
pop
mov
dec
fwait
clc
jno
imul
dec
pushl
andl
push
imul
leave
loopne
leave
pushf
stc
cmp
fsts
sub
scas
inc
adc
loopne
sub
leave
mov
test
popa
mov
std
je
fnsave
mov
inc
mov
sbb
loopne
gs
rcll
sub
mov
or
sub
cmp
sub
ret
or
cli
sub
idivb
subb
and
sbb
and
xchg
es
test
lret
push
push
jmp
movl
adc
and
lahf
lahf
mov
fisubrl
inc
xchg
jg
int
adc
inc
lret
xor
bound
roll
pop
pop
jecxz
into
inc
inc
stc
push
mov
push
jns
repnz
sub
xchg
pop
dec
pop
xchg
sub
testb
xor
enter
repz
mov
inc
imulb
out
inc
scas
out
sbb
insl
and
push
pop
mov
adc
ffreep
mov
jge
subl
lock
mov
add
in
xchg
inc
mov
mov
mov
xchg
xchg
jge
jmp
aas
clc
pop
push
outsl
mov
xor
mov
add
arpl
or
or
in
fistl
enter
sbb
pop
sub
sbb
cltd
gs
int
popa
cli
or
mov
loopne
mov
jle
mov
adc
jo
adc
dec
dec
cmpsl
sub
push
mov
lahf
lret
outsb
inc
and
mov
repz
jb
imul
aas
dec
call
lahf
xchg
lcall
adc
repz
or
or
sahf
repz
add
decb
sub
push
shlb
inc
add
std
outsb
inc
mov
call
pop
mov
sbb
mov
std
xor
push
dec
aas
loope
inc
aaa
cmc
movsb
xchg
movsl
pop
jp
mov
movsb
mov
pavgb
icebp
es
adc
daa
int
ret
sti
dec
pop
ja
lods
xchg
xor
pop
xor
imul
dec
fisttpll
mov
adc
xor
lahf
stc
fiaddl
mov
decl
push
adc
stos
es
adc
ss
bound
imul
fdivrl
test
int
outsb
xor
je
iret
shlb
lcall
or
mov
pop
ja
xor
std
xchg
cltd
lahf
mov
int3
imul
mov
filds
int
aas
lods
std
test
push
std
push
jecxz
insb
in
xchg
dec
push
pushf
filds
mov
push
mov
enter
arpl
cmc
push
inc
out
out
mov
add
shlb
push
and
xchg
icebp
sub
pop
jmp
popa
adc
and
xor
sub
clc
ds
bnd
divb
jnp
dec
xor
cmp
les
call
lret
or
adc
dec
mov
pop
push
cld
jae
test
jno
faddl
loope
add
fldenv
ljmp
sub
hlt
mov
push
push
or
mov
xor
jl
sti
push
daa
scas
pop
aad
cmpsl
inc
pusha
es
es
jp
xchg
push
mov
push
add
iret
lods
aaa
inc
jno
sbbl
lock
jno
shrl
pop
push
and
pusha
xchg
sub
cs
jnp
leave
or
xchg
add
jne
pushf
mov
outsl
outsb
shll
push
mov
stos
sbb
movsl
xchg
in
mov
popf
std
fsubr
shll
xchg
sub
scas
pop
mov
lods
sub
cli
pop
das
dec
push
add
adcl
icebp
imul
jg
ss
rcrl
sbb
or
xor
fimuls
ror
and
dec
shrb
add
jo
pop
sar
pop
sub
sti
cld
stc
push
scas
mov
sub
xor
inc
imul
adc
jge
adc
pop
es
push
jb
add
mov
mov
ja
jbe
scas
add
aaa
inc
in
sub
aad
jecxz
iret
mov
lret
andb
mov
out
or
dec
cmp
andw
imul
cmp
mov
pusha
add
adc
inc
dec
addr16
testb
and
test
arpl
jae
lea
in
jle
and
fldcw
cld
idivl
pop
xor
and
and
or
fsubrl
ret
xor
mov
cmpsl
fdivrl
push
int
inc
dec
xor
fistpll
loopne
pop
jmp
push
pop
sahf
pop
lcall
sub
jb
sub
inc
test
sub
jl
fnsave
sbb
movsl
sahf
les
add
icebp
mov
inc
test
lret
push
jmp
insl
mov
ja
sbb
mov
xchg
rcll
xor
xchg
sbb
je
out
lret
pop
lods
cmp
adc
jl
scas
lods
mov
add
clc
dec
jae
sbb
lods
and
jmp
dec
inc
or
add
inc
xor
xlat
outsb
jp
cs
cmpsl
popa
and
jge
test
scas
cmp
imul
ret
es
sbb
movsl
cmp
gs
cld
neg
sub
lds
ds
xor
jge
mov
add
xor
aad
rolb
dec
sahf
adcb
adc
jmp
out
fwait
xor
xchg
sbb
xor
mov
or
pusha
loope
cmp
mov
cmp
pop
js
fsubr
popa
mov
aas
add
inc
fstl
ss
test
cwtl
sar
clc
hlt
and
dec
sbb
notb
mov
sub
mov
enter
xor
aas
jae
sbb
loop
xchg
in
jo
imul
sti
sub
inc
popa
sub
sub
bound
push
pusha
mov
xor
or
leave
jl
mov
mov
dec
mov
mov
test
stc
and
movsl
loop
dec
inc
mov
popa
pop
fisttps
xor
cmp
add
add
iret
mov
jmp
inc
ficompl
ret
cmp
mov
cmpl
jne
cmp
and
popl
stos
in
push
adc
mov
push
outsl
adc
inc
mov
add
sbb
lcall
push
mov
and
push
test
lock
mov
sbb
jae
adc
outsl
xchg
pop
movnti
stos
lret
insb
cmp
shrl
shl
xchg
imul
aaa
cmc
and
xchg
push
scas
lret
je
loop
xchg
inc
cmp
cmp
push
out
add
pop
rcl
ss
sbb
into
icebp
mov
jbe
loopne
ficomps
rcl
cs
xchg
cwtl
mov
dec
xchg
xchg
jb
clc
lock
cs
jg
sbb
imulb
mov
inc
jno
jns
sub
or
mov
stos
push
fwait
std
xchg
push
out
inc
movsl
push
push
cmpsb
mov
mov
push
mov
cmp
into
dec
jmp
fwait
ljmp
jnp
add
enter
xor
push
mov
jbe
and
mov
das
mov
and
cmc
xchg
arpl
int
dec
cwtl
cs
scas
xor
cmp
sbb
into
xchg
shrl
out
add
dec
inc
adc
mov
test
lahf
xor
adc
je
ret
jae
testl
mov
mov
in
and
outsb
das
mov
fwait
ja
add
or
addr16
mov
mov
fmuls
test
adc
jbe
mov
pop
adc
adcl
jo
jne
mov
mov
popf
fdivl
pop
push
ret
inc
js
jno
in
fildl
xlat
aam
xlat
inc
aad
cmpsl
div
cwtl
les
cmc
test
mov
inc
inc
and
and
ret
push
mov
jl
xchg
fildl
in
cmovbe
pop
fbstp
into
loop
xchg
test
testl
mov
inc
inc
adc
cmpsl
push
cmp
sarb
add
les
add
mov
adc
pop
inc
out
xor
imul
pop
jae
cli
jmp
fnsetpm(287
mov
mov
push
sub
dec
ja
mov
adcb
rcrb
ret
ret
add
test
daa
and
movsb
ljmp
cmp
add
or
imul
or
aas
mov
sub
cmp
je
fcos
loope
cltd
lock
mov
mov
or
iret
mov
mov
xchg
sub
push
mov
orb
or
fildl
inc
adc
mov
inc
fmull
dec
or
dec
mov
fcompl
xchg
jmp
xor
push
push
sbb
hlt
call
push
dec
dec
outsb
add
int
mov
fwait
jne
push
push
mov
push
sahf
mov
mov
cmp
fwait
mov
bound
xor
stos
cltd
mov
fistpll
xor
lock
icebp
pop
imul
adc
lods
andb
shll
jbe
mov
aam
dec
arpl
push
in
mov
imul
pusha
or
sbb
dec
mov
add
fadds
sti
sub
inc
or
and
push
mov
push
mov
daa
sti
mov
push
cwtl
loope
jge
xchg
loope
clc
push
ljmp
aad
leave
hlt
jnp
add
loope
adc
imul
ret
add
xor
js
movsl
mov
pop
pop
inc
or
pop
daa
test
jmp
inc
xchg
and
mov
sub
lahf
sbb
ficomps
into
and
dec
xchg
mov
jge
pop
mov
mov
imul
mov
addr16
ljmp
sahf
jne
out
nop
mov
loope
fs
pop
xchg
test
ret
dec
or
or
push
xchg
sbb
sbb
ja
jbe
mov
ljmp
ss
mov
mov
movsb
xchg
sbb
nop
xor
push
sub
pop
in
pop
icebp
add
push
das
int
bound
inc
leave
add
ret
push
fisttpl
and
out
jecxz
decl
and
inc
shlb
pop
icebp
mov
and
mov
mov
repz
fistl
in
sarb
scas
sbb
mov
inc
mov
out
xchg
lds
enter
adc
add
or
divl
pop
cmp
jle
adc
mov
into
push
cmp
adc
mov
in
cwtl
cwtl
sbb
or
aad
add
rcll
adc
testl
ror
jmp
mov
or
pop
xor
shl
jg
push
aaa
mov
xor
shrb
andps
cmp
dec
and
testl
push
push
lea
xchg
jae
mov
lds
pop
and
int
jp
dec
fstpl
xor
lcall
mov
sbb
jmp
adc
xchg
insl
inc
pop
inc
or
cwtl
loope
mov
sub
push
mov
arpl
shrb
sub
icebp
popl
mov
insl
addr16
mov
and
insl
imul
insl
das
into
sarl
xor
xchg
test
pop
adc
sahf
jmp
mov
xor
sub
adc
sbb
js
push
inc
out
mov
fdivs
inc
or
and
mov
xchg
xchg
mov
aad
push
dec
push
pop
pop
arpl
stos
shlb
mov
mov
adc
jbe
pop
ja
xchg
and
lcall
push
push
iret
popf
pop
mov
xchg
sahf
push
adc
nop
mov
pop
and
loop
mov
jnp
test
sub
inc
lcall
adc
cmpb
test
arpl
gs
je
dec
rorl
jne
iret
xchg
jmp
xor
lock
test
adc
das
pop
scas
jno
xchg
int
adc
daa
sahf
ss
xor
dec
sub
les
mov
stc
xor
ret
sub
movsb
jbe
jmp
arpl
data16
mov
inc
mov
inc
pusha
cwtl
popa
sub
popf
mov
rolb
push
pop
jecxz
ja
mov
xor
hlt
dec
mov
inc
xchg
int3
mov
repz
ret
push
cmpsl
sub
repz
ss
jb
lods
out
pop
pop
mov
cmp
jne,pt
xor
mov
fiadds
addr16
xor
jmp
jl
cld
pop
mov
mov
mov
ljmp
ret
popa
or
jnp
cmp
mov
clc
add
sti
ds
mov
or
sub
mov
rcll
or
mov
xlat
stos
push
xchg
xchg
push
movsb
xchg
jne
pop
aad
xor
cmp
leave
push
push
sub
xchg
andps
and
push
mov
push
mov
stos
add
push
cs
in
push
dec
sub
rorl
in
sti
pop
and
jo
xchg
push
mov
sbb
sbb
mov
out
push
xchg
push
stos
out
lea
in
push
lods
out
mov
jmp
sbb
add
repz
inc
push
bound
mov
nop
or
mov
mov
test
add
lds
and
push
lcall
inc
mov
repz
pop
clc
ljmp
lods
inc
sahf
cli
jle
adc
xor
movsb
adc
dec
imul
arpl
cmp
pop
lret
aaa
insl
scas
add
jmp
mov
dec
mov
rcrb
mov
push
and
out
dec
push
mov
out
push
mov
dec
pop
out
push
fistl
inc
and
push
les
js
or
loope
xchg
and
test
pop
sti
fwait
xchg
mov
jne
scas
lea
mov
inc
mov
je
cmpsb
cmp
cmc
test
push
sbb
adc
incb
movsb
in
pop
cld
das
imul
xchg
aam
rcr
icebp
ds
jb
mov
cmp
mov
dec
cmpsl
icebp
jo
pop
xchg
and
jno
push
adc
sbb
cld
bound
lcall
movsb
call
mov
pusha
mov
jl
pop
fwait
pop
in
sbb
pop
push
popa
adc
cli
pop
shll
iret
loop
outsl
sarb
aas
inc
xor
dec
lock
cmp
insl
xchg
xchg
push
rolb
add
call
dec
inc
or
inc
loopne
sbb
sahf
mov
jns
dec
dec
dec
loopne
lea
pop
sbb
test
xlat
cmpsb
cmpsb
gs
push
leave
and
int
mov
mov
fisubrs
pop
jmp
cs
adc
insl
mov
push
ror
ljmp
push
mov
mov
inc
jne
sbb
nop
and
and
scas
and
jg
js
sub
inc
ret
mov
iret
scas
add
outsl
test
mov
mov
iret
mov
leave
cltd
stos
out
xchg
jo
and
and
inc
mov
sbb
pop
int3
inc
xor
es
cmp
dec
jl
daa
loopne
sarb
loopne
movsl
sbb
sti
test
mov
rclb
icebp
stc
inc
sbb
bound
lods
stos
ljmp
xor
std
push
fiadds
or
mov
in
adc
in
out
fmull
ja
cwtl
aad
push
jo
or
bound
xlat
pushf
pop
push
push
push
xor
cmp
and
pop
sbb
push
cmpsb
xor
pop
push
mov
aas
or
xor
and
dec
fildl
in
xor
and
bound
sub
loop
movsb
rol
mov
mov
or
adc
pop
xlat
dec
je
addr16
pop
sub
jmp
dec
cld
add
rcl
es
int
mov
jbe
jnp
out
add
sbb
add
repnz
xchg
xor
fwait
push
or
dec
adc
lcall
sub
ficoms
xor
mov
stc
pop
clc
ret
dec
sti
cwtl
dec
loope
dec
cmpb
aas
adc
sub
in
inc
fwait
mov
pop
movsl
ret
mov
adc
or
xor
xchg
das
ret
jle
inc
add
fldcw
lock
mov
rclb
push
stos
int
mov
add
lea
jg
push
jne
inc
xlat
popf
cld
dec
adc
sub
das
test
nop
fiaddl
lret
sbb
mov
imul
mov
int
mov
je
add
mov
sbb
cmpsb
push
leave
mov
cmp
cli
lret
or
mov
adc
insl
loop
clc
mov
lock
dec
es
int3
clc
or
push
enter
jge
add
loope
push
fwait
test
sbb
test
mov
dec
cmp
ret
insl
jae
test
sbb
inc
pop
imul
stos
xchg
push
dec
dec
mov
dec
aas
xor
fcomps
xor
test
mov
xor
pop
sub
mov
test
add
xchg
into
lret
sti
jecxz
dec
dec
fcoml
and
mov
gs
jp
inc
ficoms
inc
add
test
cld
fildl
lds
fnsave
sbb
jbe
mov
int3
inc
popf
adc
jmp
xor
cli
mov
adc
rorb
inc
add
movl
mov
sete
jmp
xor
xchg
jo
sbb
imul
jecxz
js
mov
jne
maskmovq
testl
popf
jo
loop
inc
mov
fcoml
inc
push
fwait
sub
mov
and
fwait
xor
mov
pop
call
add
cmp
gs
out
xor
mov
pop
jl
xor
mov
sub
sbb
mov
jg
cli
addr16
pop
push
je
repz
xchg
pop
jae
jl
xchg
imul
mov
push
and
pusha
xor
int3
dec
mov
and
mov
dec
std
sbb
mov
shll
mov
mov
mov
xchg
adc
in
js
xor
add
adc
adc
mov
xchg
outsb
roll
lret
cmp
jno
sti
cmp
xlat
sub
lods
jp
stos
scas
js
stos
arpl
stos
or
mov
out
inc
out
push
xchg
fsubl
cmp
fisubrl
mov
sarb
xor
dec
int
popa
loop
cltd
add
xchg
add
aad
jge
imul
adc
out
add
pop
daa
cmpsl
jp
add
push
xchg
iret
test
ret
leave
in
stos
pusha
jnp
fistpl
inc
idivl
and
mov
imul
push
xor
call
in
clc
jle
inc
mov
pop
adc
jnp
mov
inc
add
mov
movsl
sub
add
imulb
pop
cmp
and
cmpsl
xchg
push
or
lock
jge
xor
ret
sti
fwait
pop
add
mov
leave
dec
inc
cld
mov
mov
jl
ss
fldl
and
mov
xchg
aad
mov
pop
test
test
das
mov
and
in
pcmpgtb
inc
fwait
xchg
push
cmp
fcoms
js
cmp
push
dec
mov
and
testb
fwait
cmp
xchg
in
jge
mov
lock
jae
icebp
addr16
adc
repnz
inc
cs
std
xchg
cmp
lock
xchg
mov
push
aas
pop
inc
sahf
mov
loopne
mov
inc
loop
pop
lods
out
mov
jno
cmp
sub
and
pushf
nop
icebp
repnz
xor
scas
add
pop
push
mov
jmp
sub
out
stc
jb
xlat
inc
out
push
xchg
outsl
incl
aas
mov
cmpsl
fisttpll
cmp
sub
sahf
xor
outsl
je
pop
mov
popa
sbb
xchg
loop
push
in
jno
xchg
arpl
enter
stos
dec
xchg
mov
stos
and
lcall
xor
popf
add
pop
cmc
pop
or
xchg
lds
out
cs
sbb
push
pop
insb
cli
and
push
int
pop
xchg
rcll
cmpsl
in
fstpt
and
stc
pop
push
movsb
adc
mov
xchg
shll
fcoms
inc
cmp
leave
xchg
xchg
mov
jns
xlat
scas
push
sub
ret
fs
pop
insb
dec
jge
lret
cmpsb
addl
leave
jae
dec
loop
lret
fistps
repz
or
adc
jb
fistpll
push
sbb
xor
sub
cwtl
aas
mov
repz
mov
jae
in
xchg
je
jbe
inc
jp
lret
lahf
mov
xchg
or
sbb
hlt
sbb
add
mov
cltd
adc
jae
xor
xchg
pop
stc
gs
mov
push
or
loopne
cmpsl
and
mov
cmp
scas
roll
or
lret
mov
mov
jmp
scas
aas
mov
mov
orb
scas
inc
sub
and
push
ja
sub
out
movsb
sbb
outsl
xchg
cmpb
movsb
imul
dec
and
mov
lock
sbb
adc
arpl
es
imul
imul
pop
daa
ss
inc
ret
mov
enter
and
pop
cmpsb
jmp
pop
test
xor
mov
push
je
push
xchg
iret
out
out
cmc
popf
adc
mov
add
fs
aaa
and
ret
cmc
dec
and
cmp
xchg
and
int
out
jg
inc
iret
fistpll
ret
inc
or
or
je
xchg
pusha
xor
jno
xchg
aaa
xor
or
mov
sti
jbe
leave
or
getsec
cmc
push
lret
cwtl
fs
ja
out
xrelease
xchg
fbld
int3
or
mov
xchg
repnz
and
insb
sub
and
pushf
inc
stos
or
test
insb
mov
inc
mov
xchg
ret
dec
movsb
out
adc
inc
fisubs
fidivs
push
cmp
ljmp
mov
xor
lock
jns
dec
add
and
sti
xor
mov
cli
jmp
lock
cmpsl
sbb
lock
shlb
push
sahf
enter
mull
insl
out
mov
and
mov
push
ja
iret
shlb
loop
daa
movsl
sbb
xor
or
in
and
lds
mov
popf
stc
jne
call
inc
add
fs
adc
out
inc
fs
mov
fisttpl
lea
xchg
xorb
cli
add
mov
mov
outsl
call
repz
pushl
xchg
adc
gs
aaa
lods
pop
pop
sub
rcrb
add
dec
fnstsw
mov
cs
lret
xor
inc
ror
loopne
mov
test
cld
in
push
js
js
mov
movsb
pushf
push
insb
mov
rol
insl
mov
out
mov
lret
iret
cld
es
pop
jmp
or
cmc
sbb
in
adc
into
mov
aaa
sub
push
cli
cltd
fistl
xor
mov
pop
jmp
ret
jp
xchg
push
insb
adc
pushf
mov
xchg
push
push
and
or
inc
fiaddl
xchg
fldcw
loop
mov
dec
ret
enter
mov
inc
fdivl
rcrb
inc
in
repnz
faddl
out
adc
dec
cli
push
add
sub
fcoms
lret
loope
xchg
mov
push
lret
sbb
sbb
decb
je
inc
push
inc
and
mov
call
repz
jbe
sbb
loop
add
xor
mov
scas
pop
fldl
cmc
jmp
shr
orb
jnp
nop
out
sub
pop
repz
jle
push
test
dec
add
loopne,pn
aam
jnp
pop
push
mov
cwtl
jae
xchg
jnp
cmpsb
les
addr16
mov
scas
lret
sbb
mov
test
add
ret
xchg
insb
mov
cmp
sbb
movsl
xchg
xchg
dec
sahf
cmp
mov
aam
xor
inc
cltd
popa
aad
dec
sub
fdivl
dec
popf
mov
add
out
clc
fcomps
cmp
out
lds
sbb
int
dec
xchg
fimull
inc
dec
arpl
jbe
and
ds
xchg
repnz
fisubrl
dec
push
push
icebp
addr16
jecxz
sti
inc
shll
insb
js
cli
je
aam
push
clc
xor
mov
adc
outsb
mov
sbb
rorl
sub
jo
dec
out
dec
dec
ret
push
pop
cmp
jg
add
leave
shlb
push
cs
cld
daa
aad
orb
pop
sub
jmp
adc
or
stos
mov
jne
add
into
dec
out
jg
daa
mov
fdivrs
ljmp
out
movsl
fidivs
mov
add
mov
xchg
sub
mov
xor
xor
call
xor
lret
xlat
xor
pushf
or
sub
das
stos
jmp
in
lcall
fs
mov
sub
es
sub
add
addl
dec
mov
xor
fcomps
loopew
lea
xor
in
mov
adc
cli
mov
popf
mov
cld
arpl
mov
lahf
and
pop
cmpsb
sub
xor
fmuls
jb
icebp
pop
mov
jle
mov
imul
aam
cld
sbb
je
sbb
insb
aaa
and
loope
or
clc
jo
repnz
mov
jp
mov
mov
adc
cld
mov
bound
fnstcw
pop
lock
ss
es
adc
out
xchg
sub
mov
fs
pop
aaa
adc
push
sbb
mov
lods
fcomps
xor
push
call
ficoml
push
xor
fcomps
stos
add
jne
in
mov
mov
xchg
add
cmp
mov
pop
loope
mul
jno
repz
mov
repz
imul
ficomps
ret
aas
mov
xchg
cmp
sbb
jb
lahf
outsb
shll
repnz
loopne
mov
mov
pop
mov
jecxz
jno
sub
push
sbb
or
sub
mov
adcl
cs
jg
stc
loope
sarb
adc
pop
enter
sbb
sub
js
mov
or
aam
pop
cmp
lods
mov
mov
or
ret
or
test
jmp
fstpt
sbb
sub
das
test
or
xchg
scas
ss
in
roll
icebp
dec
aam
mov
sarb
and
sbb
scas
xchg
loopne
jnp
dec
mull
xchg
scas
dec
xlat
lods
push
mov
nop
add
add
or
inc
ret
mov
divb
jmp
cmp
inc
lds
popa
adc
jle
repnz
push
out
add
or
xlat
lahf
mull
lods
bound
leave
fidivl
repnz
das
xchg
scas
pop
mov
mov
push
ret
push
jp
out
cmp
push
inc
shll
mov
sahf
aad
or
add
adc
lret
jnp
push
xlat
push
mov
test
pop
pop
mov
lret
sub
pop
push
lods
dec
in
cmp
mov
mov
cmc
pop
clc
cld
xor
out
and
fwait
inc
test
sbb
sub
and
js
cmp
push
and
jp
arpl
mov
jl
clc
pop
or
mov
iret
repnz
add
push
jmp
xchg
xchg
call
mov
imul
cmpsb
adc
pop
adc
lock
movsl
arpl
xchg
rcll
int3
icebp
xchg
call
inc
sub
jg
inc
inc
lods
xchg
decb
fldcw
xor
and
fwait
push
test
push
dec
inc
inc
cmpl
push
mov
jnp
mov
sub
test
inc
inc
mov
test
sbb
mov
std
arpl
dec
je
movsl
mov
loop
xchg
cmp
popf
fwait
mov
mov
xchg
ja
cmpsb
push
cmp
sub
xchg
xchg
inc
in
dec
test
sub
inc
pop
lcall
inc
jo
push
jne
in
pushf
je
rcll
lods
cltd
cmp
fwait
and
xchg
nop
cmp
ss
mov
push
js
lret
je
orl
pusha
out
outsl
fisubrs
adc
ret
jecxz
movsb
dec
mov
test
fucomip
xchg
pop
jecxz
jae
push
std
sub
pop
mov
push
push
ret
pop
mov
pop
es
push
in
repnz
mov
rclb
xchg
xchg
add
push
lcall
xchg
fisttpl
jno
jnp
inc
inc
jbe
and
jne
mov
mov
xchg
push
ja
sar
mov
hlt
test
aad
repnz
sub
add
pop
movsl
pop
sbb
mov
call
rcr
int3
scas
and
inc
leave
test
and
xor
out
lahf
push
add
jecxz
mov
stc
cwtl
inc
aaa
sahf
addr16
jno
imul
ret
in
pop
dec
jmp
pop
and
or
sbb
add
xchg
loope
adc
cmp
xchg
xor
mov
je
sahf
xor
lahf
push
imul
loop
das
dec
mov
pop
aaa
pop
and
roll
inc
in
loop
les
inc
dec
push
dec
pop
icebp
outsb
xchg
jne
jle
cmp
dec
pushl
popa
ret
in
rorl
jb,pn
dec
xchg
jl
lods
pusha
jno
xor
xchg
pushf
sbb
cwtl
ror
cmc
inc
lods
scas
stos
movsb
gs
sbb
xor
push
xorb
rorb
push
lret
adc
ljmp
xchg
aaa
cld
mov
xorb
push
ljmp
push
inc
dec
lcall
cmpsb
cmp
fisubl
mov
dec
or
and
or
rorb
jno
dec
cmp
lea
sbb
sti
adc
xor
cmp
aaa
movntq
xchg
inc
cmp
lods
and
inc
pop
add
cmpsl
ja
ljmp
ja
pusha
icebp
and
pusha
sti
mov
push
pop
imul
pusha
test
jb
dec
mov
lea
push
sti
jnp
cmp
pop
shr
movsl
outsl
sub
roll
pop
adc
pop
xchg
test
fwait
mov
imul
or
sbb
insl
pushf
push
shrl
cmp
iret
mov
inc
test
shll
insb
cmpsb
inc
fwait
mov
mov
adc
mov
jle
adc
mov
iret
dec
jo
jp
pop
shrl
or
sub
lock
or
lret
stc
je
mov
or
ljmp
orb
push
cli
inc
fimull
repnz
aad
jecxz
push
loope
ret
sub
adcb
movsb
sbb
jp
mov
and
rcll
scas
mov
xchg
sbb
stc
stos
leave
clc
in
sbb
xor
lods
or
sbb
loopne
js
xchg
mov
shl
adc
cli
fistl
push
adc
xchg
dec
push
push
cmp
mov
mulb
loopne
lods
adc
mov
add
cld
cmp
ficompl
mov
sti
sarb
inc
cmp
pop
gs
mov
inc
xor
push
test
pop
pop
jb
cwtl
sbb
iret
insb
cmp
imul
push
es
adc
stos
jnp
loopne
lds
cmpsl
js
jb
mov
loopne
stc
dec
mov
dec
sbb
arpl
subb
testl
sbb
dec
lock
cmpsb
rcll
test
int3
cli
sahf
rorl
push
jno
dec
add
dec
data16
lar
jb
fdivs
test
and
enter
daa
pop
jl,pn
bound
pop
push
pop
xchg
mov
add
test
xchg
jbe
cmp
pusha
outsb
jne
idivb
or
fisubrs
dec
or
lahf
mov
cmp
inc
loopne
cmp
es
int3
ds
je
addl
mov
adc
notb
decl
cmpsl
or
leave
hlt
leave
aad
push
lds
lcall
sti
das
jb
mov
inc
mov
xchg
mov
popf
ss
stc
xor
push
out
lret
icebp
push
std
cmp
dec
cmp
out
das
mov
add
dec
bound
sbb
jno
in
push
ljmp
xchg
repnz
dec
jne
jns
jns
sbb
cmc
push
pop
dec
xchg
mov
push
xchg
shlb
sub
js
std
adc
je
mov
push
add
xchg
popf
imul
loope
or
xchg
dec
push
jg
jge
inc
nop
add
repnz
xor
sub
and
add
dec
cs
fisttpll
int3
mov
cmp
and
in
adc
cli
imul
mov
push
jmp
sahf
pop
iret
jmp
mov
add
fadds
ret
sahf
test
inc
js
cmpsb
adc
sbb
fdivrp
inc
ret
dec
sbb
inc
push
rcrb
popa
pop
mov
cmp
adc
mulb
pop
or
adc
cmp
pop
mov
outsl
sbb
subl
out
or
xlat
fcmove
mov
jle
dec
stos
xor
sbb
ss
movsb
in
mov
scas
jo
aam
ret
jo
sub
jnp
mov
cmp
fnsave
mov
add
imul
outsb
inc
icebp
inc
pop
xor
dec
or
jle
or
call
leave
and
div
xchg
push
cmpsl
mov
mov
jb
add
imul
test
cmpsb
hlt
mov
cli
dec
and
inc
xchg
dec
jecxz
mov
pop
xor
outsl
cmp
mov
mov
subb
xchg
dec
add
bound
and
test
cmpb
fsubr
repz
sub
enter
movsb
rcr
mov
pop
hlt
test
das
sbb
xor
dec
das
and
test
mov
popa
mov
out
mov
lcall
xlat
sub
cs
lock
dec
fists
push
arpl
pop
or
add
dec
xchg
cli
and
test
jecxz
add
push
aad
data16
xor
mov
andb
adc
scas
in
loop
lods
pop
adc
lahf
sub
int
imul
pop
cmp
jg
mov
addl
jns
data16
mov
movsb
xchg
add
into
es
fdivr
and
stc
lea
adc
mov
sub
push
mov
gs
inc
cmc
sti
loope
mov
notb
mov
jae
ja
push
pop
enter
leave
jbe
sbb
jmp
popf
adc
filds
mov
jge
cwtl
push
out
inc
dec
test
lods
or
call
repnz
in
sbb
pop
jnp
imul
add
xchg
daa
and
jmp
xor
mov
repnz
sub
cmp
cmpsb
in
jp
and
mov
fwait
sub
mov
sub
loope
rolb
jl
jmp
mov
mov
sbb
arpl
arpl
data16
gs
lret
loope
and
unpcklps
jo
mov
push
lea
add
test
out
or
outsb
stos
jo
or
shll
test
xor
sbb
lds
sahf
adc
xchg
add
mov
ljmp
andb
jo
push
jg
xor
pop
xchg
jns
push
pop
inc
dec
dec
cmp
push
mov
loope
ss
xor
cmpsl
push
add
addr16
sub
mov
test
repnz
ljmp
xchg
mov
in
adc
mov
repnz
push
sub
add
and
loopw
push
out
jmp
and
mov
lcall
mov
ret
fwait
les
mov
xchg
movsb
and
mov
xchg
push
loope
cs
aad
leave
out
xchg
and
cld
insl
jae
fucomip
nop
jae
cmp
or
or
and
lods
ds
std
mov
jns
imul
jle
push
lret
or
push
cmp
shrb
sar
stos
sbb
or
jne
inc
mov
jo
pushf
mov
xchg
inc
mov
xchg
inc
xor
stos
jp
inc
ds
add
sub
ret
cmp
mov
call
sub
sbb
outsb
fwait
scas
lods
pop
pop
jmp
adc
or
cmp
add
jle
mov
push
fadd
insl
inc
je
lret
push
sti
ret
jo
dec
cltd
out
dec
scas
inc
xor
fisubl
pop
mov
cmc
ficoms
push
inc
cmp
adc
dec
fistps
mov
push
push
in
aas
mov
lret
adc
ret
or
fstpl
sub
jno
mov
rorl
clc
jae
clc
fstps
orb
test
mov
and
add
fucom
sbb
pusha
mov
adc
pop
mov
mov
rorl
xchg
shlb
cmp
nop
pop
cld
nop
sub
test
addr16
sub
int
xchg
sbb
mov
int3
les
mov
inc
pop
inc
jo
cmp
lret
or
mov
aad
push
cmp
das
add
bound
aaa
mov
xchg
fldenv
scas
mov
pop
mov
movd
xchg
mov
insl
cmp
sbb
and
mov
and
dec
mov
lock
pop
mov
mov
sub
inc
rcrb
mov
push
int3
jo
aaa
out
test
pop
add
mov
scas
aad
arpl
out
push
popa
push
sub
jg
mov
add
xchg
addb
int
jg
gs
xchg
test
mov
or
scas
mov
shll
jno
add
pop
bswap
mov
add
mov
sbb
push
sbb
out
mov
adc
adc
orb
test
adc
sub
nop
fimuls
lock
pop
cmc
or
mov
lea
out
pop
mov
xor
test
mov
pop
ficoml
scas
fistl
pop
adc
adc
mov
xor
push
and
push
out
es
loopne
inc
repz
mov
mov
mov
mov
mov
daa
insl
sub
pop
ss
imul
sti
es
xor
sub
ds
dec
pop
inc
sub
sub
xor
data16
adc
jne
stc
or
outsl
and
pop
fstpt
shll
pushl
or
fwait
out
bound
hlt
dec
repnz
jbe
mov
xchg
fmul
mov
jge
testl
push
adc
sbb
in
sbb
scas
mov
js
out
into
test
push
sarl
mov
inc
dec
cmp
push
aad
push
ret
pop
scas
fmuls
add
lret
jmp
dec
lods
popl
outsb
ror
xchg
dec
xor
aaa
shrl
hlt
sub
jecxz
orl
nop
xor
ss
cmp
xchg
mov
pop
cmp
xor
cli
push
loop
imul
mov
and
dec
cmp
inc
push
pop
mov
cmp
insl
inc
in
xchg
jmp
xor
loop
cmp
rcr
test
fldt
shll
xchg
push
mov
pop
stc
sub
std
add
aad
mov
loopne
leave
iret
push
stos
bound
and
xor
xor
cmp
jns
sbb
mov
stos
xor
inc
mov
cmp
inc
dec
xchg
cmpsl
sub
fisttpl
cwtl
pop
repnz
cmp
cltd
mov
xchg
push
cmc
push
jg
ljmp
xor
cmp
cmpsb
mov
or
gs
dec
mov
mov
stos
sbb
sub
cmp
lret
js
or
jmp
fwait
mov
inc
cs
daa
xlat
setp
pop
lods
cli
mov
mov
daa
data16
push
fcmovnb
or
push
xchg
popl
mov
call
imul
mov
jns
mov
and
jmp
xor
mov
xchg
test
jecxz
fidivrs
xor
frstor
dec
inc
cmp
push
push
mov
dec
pop
inc
fdivr
shll
cmp
inc
xor
clc
mov
cmp
push
rclb
pop
mov
in
cld
mov
cmpsl
xchg
insb
jae
sbb
subl
jo
fcompp
mov
xor
or
inc
test
sbb
jecxz
fwait
mov
dec
and
ljmp
xlat
sub
xchg
xor
cmp
sar
mov
adc
icebp
lock
mov
add
movsb
data16
jg
loope
xchg
arpl
xchg
pusha
scas
popf
push
insl
roll
sub
sbb
movsb
push
sbbl
cmc
jns
and
push
aad
mov
dec
mov
push
ljmp
push
mov
dec
stos
lcall
mov
jle
rclb
jns
lods
popa
cmp
mov
cmc
rclb
subl
ret
shr
dec
imul
pop
push
push
popf
xor
movsb
hlt
stos
add
sub
jmp
jo
mov
out
mov
repnz
sub
sub
gs
xchg
fdivs
dec
add
lahf
leave
cmpsl
add
cmpsl
dec
adc
icebp
ljmp
or
stos
sbb
into
pushl
add
insb
jle
outsb
pop
arpl
leave
subb
adc
or
andb
mov
out
icebp
in
fcoml
in
mov
jo
aas
mov
test
arpl
js
push
fstps
xor
in
inc
fcoml
dec
pop
push
imul
mov
inc
imul
push
xor
fmulp
fsubs
mov
ret
stos
mov
fwait
les
cld
loope
xchg
xchg
test
icebp
fadd
jo
ja
push
sub
sahf
dec
sbb
les
div
add
scas
repz
adc
adc
pop
xchg
scas
popa
inc
mov
clc
mov
les
push
push
cmp
push
in
jne
add
add
mov
fwait
ret
cmp
imul
jbe
daa
sbb
loop
pop
jle
hlt
fs
push
jno
dec
das
xor
aas
cli
add
in
fmul
imulb
push
jno
mov
lret
sbb
lea
mov
inc
sahf
jecxz
mov
pop
leave
and
mov
and
and
xor
mov
mov
test
movl
xlat
xchg
push
sub
dec
and
das
nop
sub
test
in
mov
fsubs
and
jecxz
xchg
xor
cli
test
sbb
aas
or
lea
inc
ljmp
cmp
insb
mov
push
sub
nop
adc
int
xchg
push
lahf
push
xorl
ljmp
dec
and
adc
mov
lds
push
lods
dec
xor
mov
add
inc
pusha
pop
out
mov
fistpl
imul
or
aaa
stos
inc
loop
or
jns
sbb
arpl
mov
adc
stos
pop
jb
iret
xchg
pop
test
xchg
ljmp
ljmp
dec
loope
dec
fldt
iret
es
cld
clc
xor
out
ljmp
pop
xor
fnstsw
insb
sahf
push
xor
daa
sub
and
xor
cmp
popa
fnsave
dec
xchg
repz
fimull
adc
js
or
test
jmp
pop
cmp
mov
arpl
imul
mov
into
and
popa
jge
sub
aas
pop
jge
and
sbbb
jge
pusha
inc
ror
insl
dec
arpl
dec
mov
xor
xchg
ss
imul
shlb
ja
cld
xchg
inc
jg
mov
push
or
aam
ljmp
movsb
jnp
pop
loopne
cli
adc
xchg
movsw
fst
xchg
mov
mov
jo
jecxz
mov
sar
sbb
inc
xor
dec
push
xor
rcl
jnp
iret
test
or
shll
aam
shl
out
inc
mov
fcomip
or
fisttps
out
and
pop
stos
mov
or
jl
push
cmc
aam
rcrb
lret
sbbl
or
xor
scas
mov
jne
jmp
cmp
dec
sbb
xchg
lea
dec
sub
jb
ficomps
dec
std
mov
cli
dec
push
outsb
jecxz
mov
and
pop
xchg
pop
add
push
notb
movsl
jbe
movsb
xor
cmc
cmpsb
movb
mov
fs
xchg
jmp
mov
lea
repnz
xchg
in
cmp
sbb
xchg
and
add
mov
out
js
mov
lea
push
inc
jne
ficompl
sahf
test
sub
stos
into
out
jnp
in
xor
ret
mov
stos
fiaddl
jne
cmpsb
sbb
and
mov
les
dec
test
rclb
lcall
gs
in
insl
fistpll
int
ret
dec
inc
daa
divb
cmp
lds
sbb
scas
repz
testl
dec
sbb
loop
lcall
lock
data16
mov
inc
dec
cmc
mov
test
mov
stos
xor
movsl
adc
fisubrl
mov
mov
sti
lret
ret
sbb
idivl
subb
stos
mov
or
cmp
mov
adc
stos
pop
sub
sbb
outsb
cld
add
dec
dec
in
cmp
stos
xor
mov
jp
dec
lcall
mov
jne
sbb
pop
cmp
mov
adc
push
cmp
and
xor
sbb
push
aas
cmc
xlat
jl
sbb
ss
jb
aaa
xor
enter
xor
call
jae
push
int3
pop
add
sub
push
cld
adc
shlb
in
repz
xchg
int
adc
movsl
adc
mov
insl
test
dec
popa
jno
push
mov
outsl
push
xor
repnz
sti
push
scas
cltd
jns
sub
in
add
push
xchg
mov
repz
jnp
xchg
cmp
lock
orb
cmp
mov
pop
inc
movl
dec
bt
xor
xor
sub
das
cmp
add
mov
xor
and
inc
sbb
test
cltd
nop
lods
jo,pt
push
mov
imul
mov
cmp
or
test
mov
ret
adc
cmc
out
stc
repz
mov
sbb
aam
inc
fidivl
aas
jg
mov
lret
rcll
dec
push
aas
dec
loope
mov
jbe
mov
pusha
pushf
pop
les
sbb
enter
sti
push
push
inc
fiaddl
xor
sub
push
pop
sbbb
enter
mov
and
fadds
jp
popf
jmp
fsubr
pop
icebp
in
mov
js
shll
sbb
ret
cld
cltd
test
mov
mov
mov
shl
xor
xchg
pop
pop
push
in
or
or
mov
ret
add
dec
mov
pop
mov
add
movsl
cmpsb
test
mov
imul
inc
add
in
sbb
push
lret
fwait
jg
push
inc
push
cmp
adc
js
jge
sub
data16
ljmp
dec
stc
fcmovnb
pop
dec
adc
or
shrb
inc
inc
jns
xor
inc
mov
fistl
bnd
imul
insb
inc
les
adc
shrl
jl
cmp
xor
sbb
sbb
and
xchg
cs
mov
cmc
sub
mov
dec
cmpsl
and
sub
xchg
shlb
flds
and
sub
stos
xchg
ret
push
inc
fs
lret
pop
les
popa
sbb
es
scas
minps
popa
enter
es
pop
aaa
insb
xchg
mov
add
or
xor
mov
punpcklbw
int
and
lahf
insl
sub
rcrb
int
dec
rcl
sti
mov
ret
add
jmp
mov
and
fldcw
push
jmp
dec
push
rol
movsl
inc
popf
dec
iret
lahf
inc
negl
mov
add
icebp
mov
jle
stos
xchg
and
and
daa
lcall
or
das
mov
inc
adc
jge
gs
push
xor
inc
dec
dec
rclb
roll
jge
out
pop
lahf
clc
inc
xlat
jp
pop
mov
outsl
push
aaa
lret
addb
bound
mov
outsb
test
xor
nop
shr
leave
repz
std
mov
fwait
jo
sbb
lea
jnp
test
adcl
xorl
push
in
movsb
sbb
ret
dec
xchg
out
adc
fmuls
inc
shrl
loopne
cmp
negl
xorb
mov
mov
add
dec
adcl
push
inc
adc
roll
jne
daa
in
lods
lahf
in
or
mov
and
mov
cltd
dec
jmp
lret
fwait
stos
sbb
sub
push
jmp
xor
pop
add
inc
adc
rep
scas
das
jno
push
or
mov
sub
pop
outsl
in
push
nop
fisttpl
rclb
cwtl
fwait
repnz
cli
in
or
inc
test
mov
mov
jle
out
dec
loop
es
add
je
orb
mov
sarl
sub
adc
cmp
push
clc
out
sahf
jp
sub
jns
int
fistpl
rcll
mov
inc
outsl
adc
xor
sbb
fwait
cmc
cmp
popa
push
lods
mov
cmp
xor
mov
xor
cmp
mov
sub
and
sub
or
rcrb
bound
jge
insl
sbb
jecxz
std
adc
mov
aaa
out
adc
es
mov
in
and
add
dec
pop
ret
xlat
sbb
in
pusha
cmpsl
sub
xchg
cmp
das
fisubrs
rclb
sti
sahf
lods
ja
dec
sbb
add
movsb
arpl
mov
aaa
add
test
cmpb
adc
and
loope
neg
jmp
push
imulb
daa
xchg
jns
rcrl
aad
or
sahf
iret
push
cli
aam
jb
sti
fcomps
cwtl
push
rolb
jg
enter
js
mov
daa
adc
incb
cmp
pop
cmpsl
xchg
xchg
dec
push
test
sbb
inc
insl
jae
imul
mov
push
push
and
shlb
and
ss
nop
stos
pop
scas
inc
mov
and
jmp
lods
and
mov
dec
mov
cmp
stos
mov
mov
xlat
idivb
lahf
repnz
xlat
mov
stos
mov
fistps
sbb
loope
icebp
test
sbb
lea
pushf
xlat
jo
aaa
fstl
mov
pusha
out
cmp
loopne
push
stos
xchg
pop
jo
mov
mov
pop
xor
lcall
dec
and
pop
insb
jl
pop
mov
cmp
ja
pop
loopne
cwtl
xchg
cmp
nop
push
and
repz
mov
loopne
outsl
cmp
jp
cli
call
loop
or
add
sbbb
push
mov
inc
xor
jbe
cwtl
aas
mov
fadds
ret
mov
jae
fimuls
pop
int
in
xchg
push
hlt
jb
xchg
inc
iret
dec
sahf
pop
sbb
shrl
cwtl
pushl
and
dec
add
xlat
add
xor
loope
adc
ss
nop
or
cmp
mov
pop
fiadds
inc
push
mov
lea
packsswb
add
dec
je
lea
cld
dec
mov
mov
push
repnz
shll
jae
push
adc
repz
fisttpll
mov
lods
nop
add
notb
add
sub
jbe
popa
mov
push
jl
sbb
jmp
dec
iret
push
movsl
psubsw
mov
jbe
or
in
cmp
inc
inc
xor
cmp
call
xchg
lods
mov
out
mov
mov
mov
push
fstps
jecxz
leave
stos
push
adc
lds
adc
jb
in
push
add
sbb
test
mov
sbb
aad
sti
sti
push
in
xchg
loope
jb
xor
pop
adc
scas
and
and
mov
sub
xor
dec
mov
mov
test
xchg
adc
insl
repz
push
frstor
lcall
fnsave
test
enter
lock
push
movsl
cli
ret
sbb
repnz
mov
pusha
push
mov
jne
cwtl
fistpll
into
cli
das
into
insb
and
dec
sub
insl
jbe
rolb
add
or
pop
adc
pslld
dec
js
sub
jle
sbb
roll
sbb
jge
xor
cmc
addr16
lods
lods
mov
jno
mov
mov
ds
push
or
jne
push
sub
pushf
xor
dec
dec
inc
test
dec
aad
in
js
mov
fidivl
fs
sub
leave
out
mov
aam
adcb
testl
stos
push
mov
std
or
push
loope
pop
cmp
ficompl
mov
loopne
jne
dec
cmpsb
into
aas
sub
mov
pusha
cmp
or
jle
mov
pop
xor
cmp
out
sahf
fsts
mov
pop
test
or
push
push
mov
lds
imul
dec
je
lock
jl
ds
pop
sub
gs
scas
push
push
jnp
mov
testb
jno
repnz
pop
cs
andb
in
push
test
push
iret
sbb
fwait
mov
jbe
and
clc
sbb
mov
out
sahf
jp
mov
dec
jo
shr
xchg
xchg
xlat
add
ret
fimull
mov
cs
add
ja
arpl
xchg
xchg
adc
dec
sub
jo
xchg
push
orl
jl
pushf
aaa
cmpsb
enter
out
movsl
dec
js
test
mov
push
into
stos
sub
repz
jnp
data16
mov
jno
pause
lret
cmp
arpl
popf
add
ja
dec
pusha
leave
bound
push
imul
and
fwait
mov
scas
xor
scas
inc
xchg
and
add
lods
lods
int
in
ss
xchg
jbe,pn
outsb
in
loop
mov
pop
cltd
xor
ja
stos
jecxz
and
dec
insb
ds
js
mov
mov
mov
jne
adc
fisttpll
dec
fsts
inc
icebp
adcb
fstl
lods
xor
dec
xchg
add
or
inc
mov
dec
aas
dec
mov
addr16
imul
icebp
pop
clc
int
jmp
ret
inc
mov
mov
leave
test
cs
sti
ja
inc
mov
push
das
loop
imul
je
mov
sbb
mov
cs
into
mov
and
call
popf
adc
mov
mov
stos
dec
jbe
xchg
pusha
inc
mov
sbb
or
push
ljmp
fisubs
jb
shrb
adc
pop
jns
xor
mov
popa
mov
dec
test
insb
mov
ret
sub
xor
int
mov
adc
or
mov
pop
in
add
cli
mov
mov
pop
flds
inc
xchg
out
sahf
xchg
imul
adc
fwait
outsl
mov
cmp
js
aad
mov
pop
out
clc
es
jl
mov
int
and
xorb
lods
adc
aad
mov
sbb
jge
bound
jb
sub
outsl
stos
push
and
mov
movsb
and
inc
das
ret
adcb
insl
xor
outsb
pop
insb
insl
mov
clc
movsl
outsl
add
jg
cmp
pop
lods
mov
mulb
or
add
shlb
jg
mov
or
into
and
lock
pop
mov
pop
mov
cmp
or
sub
inc
push
dec
jecxz
jne
mov
cmc
or
add
fidivrs
push
lods
loope
aad
jnp
hlt
sub
or
sti
jb
jb
or
jne
cli
ss
cmc
pushf
mov
cli
mov
imul
out
xor
jns
add
dec
fnstsw
jg
push
movsb
mov
adcb
mov
push
and
cmpl
scas
aaa
js
fwait
idivl
stc
mov
mov
aam
ds
sub
jge
jge
cmpsl
cmpsb
out
jmp
xchg
adc
inc
push
dec
cltd
lock
scas
insb
xor
push
mov
shl
ret
xor
imul
out
lock
lods
jno
jb
add
ja
adc
lods
ja
add
loop
iret
hlt
mov
pop
mov
mov
adc
mov
xchg
pushf
and
xlat
pop
fistpl
mov
pop
popf
pop
or
xchg
popa
hlt
inc
ds
rep
push
sub
insb
insb
adc
stos
dec
mov
sub
pop
in
xor
mov
push
xor
out
sub
cmp
mov
push
push
sub
mov
sbb
insb
mov
je
incl
shll
loope
and
arpl
insl
dec
mov
and
xor
bound
out
and
je
xchg
in
popf
test
cmpsl
jmp
mov
test
cwtl
iret
das
hlt
and
jne
lods
dec
shrl
mov
es
mov
or
push
lods
jle
sbb
div
sbb
sbb
js
cltd
adc
jae
sbb
sbb
sti
movsb
inc
add
jg
push
outsl
sbb
insl
mov
mov
push
sub
fisttpl
push
lea
sub
pop
cmp
mov
add
and
fsubrl
adc
xor
cmp
or
or
cmp
adc
ficomps
inc
jge
xlat
aam
pop
ljmp
jae
push
mov
aaa
ficomps
xchg
mov
shrb
jge
jg
ljmp
pop
sub
mov
and
and
push
int3
push
imul
sti
nop
out
fnstcw
je,pt
lahf
mov
dec
icebp
rorw
sbb
mov
dec
test
stos
shll
xchg
jne
xor
notb
inc
arpl
rclb
icebp
xchg
xchg
cltd
add
lods
mov
pop
es
test
xor
xor
mov
es
jecxz
cmc
adc
lock
sarl
inc
shl
fwait
test
test
lods
jge
add
pop
movl
xlat
dec
mov
stos
inc
jp
int
pop
or
or
or
cli
jmp
nop
cld
mov
adc
daa
loop
mov
pop
or
and
aad
sbb
xor
or
fsts
xchg
sub
cmp
out
mov
jo
push
cmp
call
fsts
mov
lea
push
cmp
leave
dec
jp
mov
sub
out
xchg
or
les
mov
mov
out
lea
xchg
std
xor
mov
imul
stc
mov
pushf
xchg
mov
lds
sbb
cmp
divl
stc
stos
pop
test
aad
std
aas
mov
daa
xchg
fld
xchg
test
loope
rorb
fsubp
mov
cli
insl
push
loopne
movb
sbb
das
xor
jno
filds
and
lock
sub
fidivrl
out
push
loope
mov
jne
add
sub
and
addr16
sub
lods
mov
fnstcw
dec
shl
xchg
and
imul
out
mov
sbb
fwait
xlat
pop
fdivrp
fistpl
idivb
jb
mov
pop
movsb
sbb
mov
insb
daa
mov
arpl
fwait
cmp
mov
cmpsb
push
loopne
pusha
inc
out
imul
or
sbb
pop
scas
mov
jb
xor
mov
dec
shll
mov
fimuls
xchg
adcb
loope
imul
push
int
test
in
lods
popa
fistpll
imul
lds
mov
pusha
pop
cmpl
imul
vpminsw
les
sbb
jg
inc
aad
mov
mov
enter
pop
sbb
ror
push
xchg
and
leave
cmp
sub
or
xor
mov
stos
xor
xchg
push
and
xor
pushl
cmp
ds
jae
xchg
xor
jle
sbb
adc
jle
jo
out
push
popf
imul
shlb
jle
xlat
nop
lahf
cmp
and
call
in
ja
cwtl
in
mov
adc
xchg
in
outsb
xchg
fadds
ja
xchg
in
aad
inc
jnp
lea
ds
aas
mov
push
iret
notb
gs
fmul
mov
sbb
jp
mov
test
rclb
pushf
imul
sarl
rcl
out
sahf
and
dec
inc
test
sbb
and
xchg
mov
xor
xchg
fimuls
lock
pop
jae
mov
fsubs
idivl
sahf
ss
pshufw
pop
mov
push
ja
add
pop
inc
leave
test
les
mov
aas
js
lods
xchg
mov
pop
divl
xchg
mov
dec
add
or
push
cmc
mov
icebp
xchg
test
hlt
sub
or
xchg
sti
jae
fcom
cmp
or
mov
jno
dec
jne
mov
decl
mov
mov
and
jl
inc
xlat
loop
and
adc
cmp
sbb
add
insl
test
and
push
and
xor
mov
push
out
push
in
repz
xlat
xchg
xchg
push
xchg
mov
data16
ret
and
adc
sbb
pop
sbb
bound
push
and
sub
mov
and
cmpb
repnz
in
sti
call
sar
and
push
push
shr
or
hlt
lea
aad
sub
scas
pop
xor
cmc
enter
sahf
in
aam
fdivrl
andb
enter
sbb
outsb
sub
jecxz
cmp
push
mov
mov
mov
adc
clc
mov
mov
sti
lcall
push
xor
or
loope
jmp
pop
shll
cmpsl
scas
sub
add
push
xor
out
xchg
in
sub
outsb
mov
repz
imul
mov
xchg
mov
ficoms
and
or
movsb
pop
das
cmc
mov
movsb
inc
shlb
bound
xlat
repz
pop
clc
stc
les
pop
jmp
leave
fsubl
cmp
pushf
push
outsb
cmp
aaa
dec
cmpsb
add
and
push
add
xchg
es
loop
pop
cli
mov
popa
jo
xchg
pop
xor
or
sar
xor
sahf
out
mov
popa
add
lds
hlt
mov
mov
adc
mov
call
out
aaa
outsb
xor
jp
pop
mov
mov
sti
in
and
fimull
orb
mov
lods
popa
iret
pop
idiv
fmuls
dec
adc
andl
mov
pop
sarl
pusha
jge
addb
pop
stos
jge
jge
pop
call
mov
les
roll
mov
mov
cmpsl
lds
pop
jo
push
mov
cmc
mov
jmp
xor
je
hlt
add
xchg
dec
flds
cmp
gs
je
cltd
sub
mov
jne
push
sub
mov
aad
inc
xor
nop
mov
push
xchg
repnz
mov
in
cmp
or
push
jecxz
inc
mov
jg
sub
sti
mov
icebp
cmp
and
mov
sub
mov
popf
mov
loopne
ljmp
pop
movsb
ficoml
movsl
sarl
gs
lret
outsl
and
sbb
cmp
jno
mov
jle
push
cmp
push
in
xchg
lret
fimuls
shl
push
mov
or
addr16
repnz
jge
and
jbe
out
dec
mov
push
cmpsl
sbb
lock
mov
aas
mov
push
rolb
jmp
push
push
push
in
test
icebp
in
adc
inc
gs
xor
mov
pop
mov
loope
int3
popf
pop
cld
mov
and
fistpll
and
test
pop
lods
mov
cld
pop
push
lock
filds
inc
push
mov
mov
push
lret
cmp
addr16
fisttpl
aam
add
add
xor
daa
cltd
xchg
push
out
xorb
in
dec
jp
inc
pop
add
int3
push
pop
push
add
rol
jle
mov
mov
xchg
insb
pop
dec
jno
aad
push
dec
inc
lret
xchg
dec
cld
sar
iret
test
xchg
out
inc
xchg
cmpsb
xchg
adc
xchg
cmpsl
cld
xchg
mov
cs
out
fwait
scas
cltd
push
popf
xlat
shl
bound
stc
sub
jl
or
xor
and
shll
mov
xor
add
sub
push
aad
out
mov
lret
shr
cmp
cmp
inc
inc
jp
jbe
insb
bound
mov
jo
sbb
test
pop
dec
push
pop
inc
jl
dec
insl
sbb
mov
lock
jp
js
push
clc
sbb
jns
pop
or
pop
dec
popf
and
bound
cmp
or
shrl
xchg
jp
pop
fsts
fldcw
push
add
ret
imul
sub
ja
push
adc
mov
fs
xchg
or
xchg
inc
adc
jo
push
pop
cmpsb
movsl
into
pop
and
insl
repz
loopne
jl
mov
push
dec
inc
aas
mov
ss
fucomi
push
in
mov
xchg
addl
sub
sub
mov
cmpb
mov
shrb
lods
pop
iret
xor
lods
mov
aas
sbb
sbb
adcb
shrb
add
cmp
int3
mov
dec
pop
ret
push
pop
mov
and
and
ja
mov
xchg
aas
or
mov
in
cmp
add
xchg
inc
jns
aaa
stos
jmp
xlat
testb
jb
xor
iret
push
sub
and
mov
ss
sahf
xchg
jb
insl
sti
dec
rcr
pop
or
push
dec
fiadds
loop
mov
enter
add
inc
push
stos
jae
insl
cld
pushf
sbb
int3
jne
push
ja
fildll
js
xorl
pushf
push
push
mov
repz
inc
xor
sbb
movb
subl
fwait
movsl
pop
pop
adc
cli
cltd
call
pop
lods
push
pop
cmp
add
jg
loopne
clc
sub
inc
inc
ret
or
insl
mov
or
dec
jne
sahf
mov
daa
xchg
out
jecxz
stc
pop
cmp
sub
sub
ja
sub
in
pop
cld
inc
cmc
xor
ret
mov
stc
sbb
xchg
arpl
nop
sub
je
fimuls
push
xor
scas
mov
jae
mov
jb
cld
push
lods
icebp
pop
adc
ss
pop
insl
mov
iret
imul
lods
mov
mov
jno
mov
xchg
inc
jg
popa
ret
mov
pop
cmp
stc
rclb
cmp
pop
bnd
and
cld
adc
lret
mov
mov
jbe
pop
pop
fbstp
in
sub
cmp
jo
sbb
and
test
push
cmp
pop
or
ret
jp
cltd
xor
pop
iret
jnp
mov
sub
or
repz
test
push
sti
dec
fcoms
cmp
mov
test
xchg
loope
push
setae
jge
jge
sub
or
push
and
sahf
repz
jecxz
out
scas
or
movsl
in
xchg
aaa
insl
lods
test
pop
add
mov
sahf
aas
jmp
inc
xchg
mov
lea
hlt
and
stos
sub
jle
icebp
xor
mov
filds
popf
cmpb
sti
imul
adc
movsb
fwait
outsl
cmp
mov
inc
cmpsb
aaa
int
mov
popf
dec
mov
jg
or
jo
imul
cmp
dec
ja
sub
inc
test
sarl
fsqrt
xlat
cwtl
bound
mov
and
outsl
mov
hlt
pop
popa
push
sub
in
aaa
cmp
andb
arpl
sub
push
jb
enter
jmp
sub
dec
shll
push
inc
adc
jns
mov
and
jns
scas
shl
jo
imul
out
mov
movsl
cltd
jle
mov
xorl
cmp
and
pop
in
push
pop
repnz
lods
xchg
jg
mov
jno
cltd
cmp
dec
or
lds
lea
cmp
clc
pusha
enter
insl
stc
scas
mov
add
xor
push
into
cltd
adc
mov
dec
orb
mov
or
lods
pop
sbb
xlat
test
push
sahf
mov
mov
and
gs
cmp
adc
jmp
das
lock
adc
or
in
jb
dec
jae
push
xchg
sti
loop
test
popf
mov
push
and
adc
out
subb
or
xchg
cld
push
scas
into
loopne
mov
mov
dec
and
imul
xchg
inc
mov
pop
jne
roll
sti
dec
mov
mov
cmp
sbb
and
outsl
stos
lcall
daa
cmp
push
mov
cli
ror
fldenv
je
cmc
mov
out
fld
dec
inc
stos
test
call
or
inc
pop
and
xor
lds
shrl
lahf
out
dec
decb
mov
or
jbe
mov
mov
rorl
negl
or
dec
hlt
shlb
ja
or
test
mov
sub
pushf
xor
mov
rcrb
loopne
and
dec
adcb
cmp
scas
add
xchg
xchg
cltd
cwtl
andb
rcpps
sbb
mov
mov
icebp
jge
fcomp
icebp
icebp
xlat
cmp
sbb
and
and
jnp
sub
push
addr16
es
dec
lods
push
test
add
cmp
xor
sub
xchg
pop
xor
outsb
fnsave
xor
lea
mov
mov
xor
sub
jne
push
out
pop
adc
pop
push
gs
inc
jecxz
ret
lods
mov
inc
dec
daa
fstl
ss
sub
orl
xor
popf
insb
bound
mov
sahf
push
jmp
cmc
ret
popf
mov
jns
mov
cmp
repz
jnp
xchg
bound
or
stos
pushf
sub
adc
test
push
jecxz
mov
dec
dec
shll
jo
cwtl
adc
add
sub
cmpl
cmp
addl
hlt
in
and
pop
mov
cli
cmpsl
mov
cs
mov
je
xchg
add
push
je
call
test
insb
adc
int
lahf
arpl
lock
data16
testl
clc
mov
cmpsl
lret
mov
movsb
fstl
mov
xor
mov
ror
call
jl
sub
repnz
xor
add
xchg
std
decl
fsts
int3
push
lcall
xor
std
mov
add
call
xor
testb
neg
dec
subb
js
add
xor
mov
les
jge
lods
faddl
adc
jp
push
imul
repz
neg
and
and
es
popf
mov
jnp
test
loopne
add
je
ffreep
fwait
daa
sbb
scas
fildll
outsl
pop
testb
or
leave
inc
mov
cltd
insb
dec
inc
jl
inc
dec
out
cmp
mov
into
ja
mov
leave
jns
leave
dec
ljmp
jge
xchg
jnp
xor
jae
sbb
or
cwtl
push
jp
dec
push
jb
jns
cmpb
mov
or
cmp
ret
mov
jmp
leave
lahf
addr16
idiv
xor
pop
sbb
out
test
aad
adc
cmpsl
orl
or
jg
push
imulb
and
outsl
sbb
sbb
adc
jno
xchg
sahf
cmc
lock
loopne
lcall
sbb
into
mov
rdpmc
sub
jbe
jecxz
int
xchg
push
fmulp
cmpl
inc
add
cmp
sbb
leave
xchg
jae
or
sub
lret
pop
cvtpi2ps
jmp
push
ret
shrb
jb
out
mov
xchg
sbb
fucomi
std
sub
or
xor
mov
flds
aam
iret
sub
and
dec
sti
jbe
daa
movsb
sub
test
xchg
sbb
sbb
and
sahf
jmp
cli
cmp
out
mov
sub
fwait
nop
mov
sbb
mov
mov
test
andl
in
bound
dec
adc
pop
jnp
insb
sbb
add
arpl
insl
int3
fwait
js
pop
outsl
sbb
lods
in
in
cmp
xchg
sbb
popf
pop
push
iret
int
movsl
lds
inc
mov
imul
xor
mov
push
outsb
shr
adc
addr16
sahf
fwait
negb
mov
popf
shr
xchg
inc
jb
arpl
test
fists
mov
pop
and
inc
push
jo
cmp
jg
inc
loop
loopne
imull
mov
pop
ss
cmpsl
sbb
dec
sub
and
xchg
ss
jb
inc
cmpb
mov
sub
mov
jge
ljmp
mov
les
pop
cmp
add
cmpsb
dec
gs
mov
sbb
and
jbe
mov
sbb
add
jns
push
movl
ja
rol
dec
mov
xor
adc
incb
lods
xor
and
sub
inc
sub
push
test
rcrl
aas
inc
jo
enter
dec
mov
inc
out
fsubrs
sbb
mov
imul
and
fwait
or
sub
mov
les
or
jp
xchg
mov
scas
push
sbb
popf
js
cltd
add
xchg
cmp
movnti
cmc
je
push
mov
mov
push
lret
mov
mov
inc
popf
mov
or
nop
pushf
aad
in
jns
mov
sub
mov
jb
inc
mov
inc
ja
out
lret
cmc
test
sbb
inc
jmp
push
mov
mov
cmp
test
jmp
dec
jns
and
cmpsl
pop
and
divb
inc
cli
sbb
dec
jne
fwait
loope
xchg
inc
mov
paddb
cltd
add
lret
lret
repz
jge
push
inc
test
lret
test
add
jb
mov
add
adc
adc
mov
sti
xchg
fsts
lock
pop
test
xchg
shll
adc
insb
mov
jbe
popf
xchg
lds
mov
mov
xchg
inc
aas
xchg
mov
or
adc
cs
insb
in
stos
ss
jnp
jge
mov
push
or
pusha
faddl
or
mov
aad
test
fwait
aaa
ret
pop
aad
cmp
out
ja
bound
dec
iret
cmp
inc
incl
arpl
stos
mov
jp
cmc
negl
data16
idivb
pop
cmp
adcl
cmp
push
in
in
in
cwtl
lahf
add
fs
fiadds
cmp
shll
add
out
xchg
scas
mov
pop
xor
stos
lea
arpl
into
in
xchg
sti
sub
or
stos
cltd
std
rcl
adc
fisubrl
jae
mov
mov
in
sub
sub
fisubrs
fdiv
fcmovb
test
mov
mov
fisttpl
fcomi
xlat
aam
pop
push
rcll
push
cmp
and
shll
jmp
xlat
std
add
push
cmc
mov
jae
and
insl
pop
push
jo,pt
movsl
push
xchg
mov
lret
lds
mov
jmp
lcall
jb
jg
xor
stos
jg
pop
aad
mov
adc
int
or
inc
jecxz
xor
xchg
push
adcl
or
jg
sub
pusha
outsb
push
fidivs
cmpsb
movsb
sbb
popf
fisubrs
cmc
into
xchg
insl
mov
enter
sbb
aas
mov
test
push
mov
push
loope
sbb
inc
jae
xor
sub
or
ficoml
testb
dec
hlt
xlat
fucomp
inc
rcl
movl
jno
leave
pop
pop
xchg
jns
fsts
fdivs
std
scas
mov
mov
sbb
push
inc
mov
dec
dec
jecxz
push
repnz
sahf
rolb
std
mov
mov
push
sub
mov
sub
mov
scas
stos
jns
das
movlps
adc
outsl
add
pop
cmp
mov
mov
fistpl
or
jne
rolb
mov
cwtl
popa
sub
fldt
sbb
add
mov
sub
jns
addb
add
sti
jp
dec
xchg
mov
test
test
add
movsb
pop
push
lock
mov
or
push
test
sbb
movsl
push
js
mov
or
adc
scas
test
and
and
int
daa
ljmp
push
ss
sub
in
sbb
mov
int3
add
dec
jae
mov
xor
test
jb
inc
pop
jno
xchg
mov
xchg
mov
por
add
or
gs
enter
add
test
into
scas
push
mov
hlt
adc
andb
xor
divb
xor
bound
cs
and
std
mov
xchg
ja
adc
jg
sahf
inc
push
jns
repnz
xchg
into
lods
dec
or
sub
sbb
xchg
jecxz,pn
data16
mov
pop
test
aam
shrl
fnsave
rcl
mov
mov
or
xchg
scas
dec
stc
cwtl
test
shll
cmp
push
adc
out
xchg
inc
loop
popf
icebp
push
hlt
movsb
inc
or
movsl
stc
fwait
lret
std
adc
push
popa
out
jp
adc
sub
sub
negb
jbe
xchg
loop
add
cmp
in
pop
cmp
xlat
mov
mov
ret
aaa
add
stc
std
pusha
cli
push
das
mov
xchg
loopne
cli
iret
test
out
sbb
push
lea
fldl
cld
arpl
fsubrs
add
call
xchg
push
imul
lcall
repz
sbb
xchg
pop
pop
xchg
or
jnp
not
cmp
xor
add
push
mov
in
adc
jb
fdivrl
ret
or
popf
push
pop
fstpl
mov
pop
testl
outsl
mov
test
and
in
pop
adc
pop
mov
lds
gs
les
inc
std
shr
sub
das
xchg
stos
data16
xor
jb
sub
lahf
jne
lcall
jae
xchg
scas
or
mov
and
loopne
sub
fs
out
cmc
aam
daa
lret
leave
push
addr16
inc
int3
sub
fstl
rorl
shll
aaa
push
adc
lods
xchg
aaa
pusha
ret
movsl
icebp
adc
mov
or
and
mov
ficoms
pushf
xchg
in
ficoms
ja
and
nop
mov
imul
test
xchg
mov
js
xchg
test
arpl
ds
sbb
adc
mov
xchg
fcomps
shl
cmp
dec
jecxz
dec
aad
xchg
lret
lahf
aad
jno
cmp
add
sbb
and
js
jle
mov
and
loope
repnz
into
push
or
cmp
arpl
or
or
scas
push
mul
xor
mov
jg,pn
sahf
xchg
cmp
mov
gs
int3
shlb
ret
push
sahf
push
ror
mov
lret
inc
lahf
pop
cmp
jmp
jo
popa
in
cmc
inc
sub
mull
xchg
add
int3
test
lret
pop
xor
inc
jge
dec
cld
cwtl
lret
mov
inc
xor
sub
inc
icebp
aad
in
mov
sbb
xchg
dec
pop
mov
ret
je
xor
addr16
lods
imul
addr16
or
shll
push
insl
movsl
mov
xchg
lahf
cmp
ds
out
and
xchg
lret
dec
aaa
mov
push
jg
jb
pusha
add
popf
mov
inc
jp
inc
dec
inc
add
fists
push
mov
aas
cmpsb
rclb
xchg
mulb
stc
jmp
sbb
xchg
icebp
test
mov
pop
stos
xor
loopne
push
pop
pop
cmp
xchg
and
sbb
out
inc
push
ret
inc
pop
jno
mov
aad
std
sarl
fnstsw
pop
fldcw
es
or
fdivp
stos
lahf
pop
fs
pop
sarb
push
push
ljmp
sti
lock
out
or
cmpsl
aas
addb
pop
push
outsb
js
xor
fcom
clc
inc
adc
pop
outsb
xor
sahf
faddl
push
jecxz
cmpsb
pop
jg
mov
and
aaa
inc
pusha
lret
cmp
jne
dec
adc
stos
adc
int
xchg
sub
je
sub
cmp
or
popa
xchg
and
sahf
sbb
sbb
xor
lods
lcall
iret
fisubrl
mov
popa
rcll
lods
xchg
leave
into
sub
testb
adcl
mov
pop
push
mov
lds
scas
cmp
dec
inc
leave
cmpsl
clc
sar
jbe
adc
push
xor
sarb
sbb
out
jne
mov
inc
mov
adc
adc
cmp
adc
jne
mov
negl
add
xchg
and
call
inc
sbb
mov
and
pop
sub
jl
movsb
pop
daa
push
add
jp
xchg
xlat
xchg
sbb
dec
cmc
into
and
rolb
scas
push
pop
les
into
push
stos
nop
and
fimull
sti
ss
jmp
and
inc
mov
sub
mov
popa
aam
cmp
or
mov
insl
and
inc
fwait
lcall
das
adc
jecxz
sub
add
stos
push
xor
and
mov
pusha
sbbb
pop
inc
jbe
orl
dec
xlat
daa
aam
das
pop
xchg
push
mov
cli
xchg
sbb
and
or
pop
pop
int3
mull
loop
aas
pop
jmp
jo
sub
insl
push
cltd
jno
loop
pop
inc
out
sbb
and
jne
in
and
jo
mov
icebp
out
pushf
cltd
or
idivb
xchg
xor
out
sbb
sbb
sub
int3
leave
movsb
mov
mov
popf
dec
int3
add
adc
inc
pusha
push
imul
or
inc
addr16
fstl
in
cwtl
pop
mov
mov
sub
ljmp
mov
jge
daa
leave
addl
fwait
dec
mov
movsb
add
cld
out
cli
mov
or
push
lahf
cmp
push
mov
loope
addr16
outsl
popf
adc
popa
icebp
data16
mov
mov
cmp
arpl
pop
sbb
mov
test
lds
in
or
fisubrl
jge
mov
imul
pop
outsl
mov
or
push
cmp
xrelease
mov
push
mov
ds
call
xor
out
ss
repnz
fisubl
add
lret
in
in
cltd
scas
mov
mov
addr16
arpl
and
pop
cmp
cwtl
xchg
xlat
shrb
pop
lret
xlat
lds
movsb
dec
dec
insl
test
pop
aaa
rolb
pop
cld
or
je
nop
add
sbb
pop
out
mov
je
js
sarb
sub
push
inc
xrelease
clc
int
sub
into
lret
adc
mov
or
pushf
pop
sbb
push
scas
jno
push
cli
mov
push
cmpsl
out
xchg
imul
adc
pop
add
adc
and
xor
xchg
mov
mov
mov
jp
xor
call
and
cmp
call
testb
icebp
nop
pop
dec
jle
int
jmp
mov
je
xchg
jno
and
insb
loop
mov
nop
sahf
shrb
xchg
loope
ficompl
in
fimull
jmp
lret
es
pop
aad
mov
sbb
fmul
test
pop
push
cmc
cmp
mov
es
mov
xor
pop
push
jecxz
hlt
inc
push
mov
nop
xlat
mov
push
outsb
out
sub
movsl
in
sahf
adc
icebp
loop
orb
cmpsb
cmp
push
mov
arpl
fwait
push
rcr
mov
mov
push
mov
sbb
cltd
popf
outsl
hlt
sub
cltd
sub
push
fdivs
inc
fwait
add
adc
sbb
jp
add
mov
jge
nop
cmp
cltd
xlat
xchg
lahf
mov
cli
lds
add
dec
add
xlat
je
mov
mov
movsb
cmp
mov
xlat
xor
repnz
mull
mov
inc
mov
lcall
mov
fcmove
inc
push
or
insl
popa
inc
incl
push
lea
sub
leave
fwait
cmp
pop
jnp
shrb
jo
xchg
and
add
stc
scas
inc
popf
shlb
sub
xor
pop
pop
push
repz
jle
jmp
xchg
into
xchg
hlt
iret
pushl
inc
xchg
xchg
add
sub
push
sub
cmpsl
stos
in
les
jns
in
arpl
sub
sahf
xchg
cmp
popf
sbb
aad
mov
or
xor
pop
cmp
add
arpl
jo
je
repnz
in
add
xorl
mov
mov
lahf
out
sti
cli
pop
mov
push
or
sbbb
loopne
arpl
pop
shll
mov
loopne
out
sti
push
cmp
pop
and
int
scas
mov
jmp
sbb
cmpsb
mov
mov
sti
in
xchg
mov
lret
pop
subb
mov
mov
test
xor
jne
test
sub
daa
int
mov
mov
and
dec
lock
dec
adc
jecxz
shr
mov
jl
push
and
fs
adc
lcall
outsl
jg
je
in
dec
mov
dec
int
jae
jecxz
cs
ficoml
cs
sbb
ret
in
stos
cmp
loop
xchg
add
aam
cwtl
jbe
and
mov
lock
mov
cltd
xchg
jge
outsb
dec
sbb
imul
push
lahf
rcrb
arpl
or
movups
pop
hlt
sbb
les
inc
add
loop
repnz
push
pop
dec
hlt
cmpsb
pop
in
mov
jns
jmp
ret
loop
ljmp
repnz
test
add
xor
xchg
or
and
push
ret
add
sub
fidivs
dec
fld
je
es
mov
imul
mov
dec
dec
xchg
rcll
push
mov
inc
mov
and
mov
mov
mov
add
adc
call
cmp
loopne
xchg
mov
lods
dec
aaa
pop
fdivrl
fcoml
movb
int
mov
imul
push
xor
sub
sub
and
mov
call
cmp
testb
sub
sti
add
fnstenv
aas
adc
dec
popf
out
lahf
mov
push
mov
loop
sub
xchg
aaa
or
push
test
ljmp
pop
movsl
loopne
jecxz
push
and
mov
cld
decl
imul
in
lahf
mov
inc
into
mov
cmpsl
jl
scas
dec
in
add
xor
xor
insb
daa
jg
jl
xchg
movb
sub
and
jne
cmc
sub
jnp
inc
mov
sub
or
hlt
pop
mov
inc
jns
cmpsl
rorl
je
sub
mov
mov
flds
stc
jne
aam
adc
je
sbb
xor
popf
dec
sbb
cld
mov
loop
call
push
mov
cmp
or
or
fmull
xchg
dec
test
mov
xchg
mov
notrack
lahf
scas
dec
jp
add
aam
or
xor
hlt
outsl
roll
sub
ljmp
sub
stos
mov
int
add
mov
test
inc
or
xchg
std
and
int3
inc
int
pop
cli
test
inc
push
sti
push
xchg
shll
repz
clc
pop
shll
arpl
push
or
int
in
int
int3
cmc
outsl
xor
sarl
pop
mov
dec
jmp
adc
ss
idiv
lds
and
push
sub
push
pop
nop
call
adc
les
pusha
add
je
ja
sub
sbb
jns
push
jmp
pop
int3
decl
leave
dec
popf
add
fdivrl
dec
adc
sub
inc
sbb
xor
leave
sbb
mov
push
decb
fwait
in
mov
or
int
in
push
sub
mov
in
lea
sbb
fwait
je
mov
add
repz
icebp
mov
ja
jge
dec
push
xor
add
jp
inc
iretw
mov
cmp
jns
xlat
jb
lret
inc
inc
push
cmp
xor
jne
cltd
push
add
mov
testb
lea
sub
inc
lods
dec
xchg
jae
pop
sbb
mov
pop
popf
scas
xlat
sub
push
das
aaa
or
or
xchg
sub
fnstsw
hlt
jbe
sti
out
cmp
xchg
ficoml
mov
inc
repz
cmp
fdivl
xor
inc
add
cltd
and
clc
fdivp
rorl
xchg
dec
insb
adc
ret
inc
cmp
or
cld
and
out
test
jae
daa
xchg
stc
imul
add
repnz
push
cmp
push
repnz
sbb
ja
dec
or
cmpsb
and
lods
add
repnz
test
push
jne
push
nop
and
jmp
enter
xor
mov
pop
lds
push
sbb
xchg
hlt
rcrl
pop
aad
scas
adc
pop
or
lods
jns
data16
sub
cwtl
leave
jb
fistl
fdivs
mov
dec
mov
mov
mov
or
aad
fsubrp
push
pop
and
cmc
leave
mov
xchg
inc
dec
nop
pop
in
lea
mov
out
ret
adc
fcoml
rcrb
mov
out
push
or
aas
push
add
mov
jg
xchg
push
andb
push
fcmovnb
push
movsl
sbb
loop
stos
lcall
jno
cmp
mov
xchg
push
xor
jbe
xchg
xorb
stos
push
mov
insb
jmp
ss
jp
push
sbb
mov
push
in
sbb
cmp
and
repz
adc
xor
fstp
enter
mov
mov
dec
push
push
fwait
push
fists
frndint
sbb
sar
adc
xor
cmpl
gs
out
test
xchg
addb
mov
test
orl
adc
into
ret
and
pusha
mov
push
ss
stc
xor
sub
xor
vmovlpd
sub
push
cmp
sbb
dec
and
push
lea
inc
lcall
push
btr
or
add
dec
ja
lea
pop
adc
lahf
aas
iret
jne
and
lock
dec
push
push
int
test
negl
std
inc
mov
adc
inc
fistps
clc
loope
pop
ds
mov
mov
jb
push
mov
movsl
enter
fdivrs
loopne
xor
mov
ja
mov
ret
adc
in
and
loop
out
enter
movsb
out
xor
hlt
imul
daa
fists
test
mov
cli
jae
or
sub
sub
das
loopne
mov
mov
je
arpl
push
mov
imul
add
jecxz
jns
cs
mov
sub
clc
rcrb
test
fs
ljmp
repnz
fstpt
lcall
je
mov
xchg
dec
lock
test
in
pop
adcl
dec
pop
ret
pushf
fimuls
mov
adc
aas
jge
out
addb
je
cmpb
pop
and
cmp
adc
dec
mov
cmp
xor
pop
int
mov
sti
sbb
xchg
mov
cmp
push
mov
outsl
in
das
xchg
push
gs
int3
inc
sub
rep
aam
pusha
outsb
inc
xchg
jmp
cmp
dec
mov
dec
add
dec
jae
pushf
mov
cld
dec
fcompl
lds
fstl
xchg
mov
lahf
adcb
ss
ret
pusha
xchg
and
sarl
clc
pop
sbb
std
dec
xchg
inc
pop
movl
xor
je
test
pop
subl
lds
pop
dec
adc
leave
mov
enter
mov
cwtl
into
lods
push
ljmp
jne
cmp
xor
insb
in
pusha
adc
call
cltd
sbb
les
cli
inc
push
shrl
out
mov
dec
add
movsb
mov
loope
inc
add
pop
lea
and
mov
outsl
pop
push
je
shrb
hlt
test
insb
std
pop
mov
popa
add
leave
mov
sti
lahf
or
repz
fimull
icebp
loope
sub
pop
push
aaa
jnp
and
aam
mov
sti
fstl
dec
bound
lds
jnp
fwait
pusha
add
mov
test
mov
or
cmp
mov
pop
push
fnstenv
test
push
js
cmp
insb
add
mov
les
jl
mov
lret
out
or
popf
push
or
pop
mov
gs
sti
add
jo
sti
pusha
ret
aas
pop
cmp
mov
dec
leave
jae
push
mov
test
mov
lods
popa
leave
xor
xor
lea
call
cli
shl
rorl
adc
sarl
jmp
stos
mov
pop
cmp
xlat
mov
insl
cli
pop
movsb
adc
xchg
cmpsl
mov
xor
sahf
loope
cmp
mov
or
rorb
dec
jne
lock
xchg
mov
aas
mov
jg
dec
das
xchg
xchg
mov
aaa
lret
xor
push
sub
repnz
fisubl
mov
out
push
cwtl
xor
loopne
mov
jecxz
je
inc
and
lock
pop
test
jmp
lcall
call
fmul
std
push
mov
addr16
push
aad
adc
das
aaa
inc
mov
lods
ret
out
stos
lahf
mov
mov
xchg
fidivs
xlat
mov
cmp
xor
and
aaa
jbe
test
fmull
repz
imul
jmp
mov
ret
std
xchg
add
sahf
jl
and
fdiv
inc
xor
hlt
sub
mov
shl
enter
out
loope
add
or
out
ret
xor
out
in
pop
std
sub
cmp
inc
mov
xor
lret
push
test
pop
mov
xor
mov
aas
or
enter
mov
add
jp
lea
sbb
pop
or
stc
dec
test
xlat
xchg
and
ja
dec
add
mov
xor
push
mov
add
adc
sub
sbb
fnsave
in
xlat
sub
dec
sahf
and
pop
mov
repz
push
arpl
push
adc
loop
cmp
dec
lret
sbb
sub
sbb
js
pop
or
mov
dec
movsl
out
and
cmp
jl
out
iret
pop
popf
decb
jecxz
lods
adc
dec
fs
ss
add
mov
ficoml
push
shlb
call
loope
push
and
pop
jae
and
insl
mov
aam
jp
scas
push
add
inc
sub
ret
inc
jmp
cmp
mov
ret
jg
nop
dec
xchg
inc
ljmp
add
adc
out
cmp
mov
aaa
movsl
cmpsb
mov
stc
xchg
pop
loop
lds
sbb
and
out
push
xchg
iret
dec
shrb
cmp
inc
and
jo
add
jns
cmp
data16
adc
cltd
dec
loopne,pt
push
cmp
mov
sbbb
inc
jg
pop
or
aas
shll
sti
pop
or
lahf
mov
push
popa
stos
outsl
push
xchg
push
fiaddl
adc
jl
clc
jmp
cli
mov
and
mov
aam
mov
mov
xchg
mov
neg
ds
add
xchg
lea
lahf
push
jmp
xchg
fbstp
sub
cmp
jne
out
mov
cwtl
std
ja
or
jg
mov
fistpll
inc
popf
scas
outsl
in
push
mov
cwtl
cmpb
movsl
sarb
outsb
push
seto
jmp
jmp
jg
subb
xchg
adc
lcall
adc
inc
fisubrl
lds
arpl
add
dec
mull
daa
mov
xor
out
sub
mov
js
lret
push
sbb
or
repnz
loopne
sti
cs
xor
xor
rolb
test
mov
movsl
test
xlat
cli
dec
xchg
cmp
mov
fcomp
enter
add
add
out
xor
mov
pop
mov
shrl
dec
pop
cmpsl
cmp
cmpsb
popa
cltd
mov
lcall
sub
inc
rcll
xchg
lcall
adc
test
mov
stos
lret
lods
sub
cwtl
jl
dec
dec
jmp
jno
lahf
dec
inc
jge
inc
iret
inc
jge
imul
push
pop
xlat
repz
insl
mov
sti
push
test
lock
jp
dec
pop
call
xor
or
idivl
std
mov
mov
jecxz
xor
inc
imul
inc
arpl
xor
fadds
cmpsb
dec
fcompl
mov
shl
or
pop
sbb
test
out
dec
push
sti
imul
push
pushf
pop
and
sub
fbstp
or
and
hlt
cmp
xchg
fisttpll
jne
or
sahf
pop
xchg
push
jno
inc
cltd
fidivrl
jbe
mov
inc
repz
mov
insb
push
cmc
adcl
mov
shlb
pusha
fiadds
xchg
shll
push
mov
lcall
popf
sub
sbb
dec
int
fcmovbe
pop
mov
rcll
nop
enter
popf
dec
xor
cwtl
dec
insb
mov
fs
dec
enter
jmp
lahf
roll
ficoms
push
lods
ja
xor
mov
rcrb
in
add
jmp
test
repz
mov
xor
popa
cmpl
addr16
iret
dec
aas
mov
iret
push
cmp
push
mov
popf
mov
or
call
sub
mov
in
jnp
into
pop
clc
out
call
aad
notl
mov
jge
push
roll
dec
jecxz
fmull
xchg
fnstsw
pop
inc
mov
icebp
push
mov
icebp
stos
and
cld
enter
add
loop
mov
mov
ljmp
lret
mov
jae
stc
outsb
add
or
xchg
pop
insl
rolb
sbb
inc
mov
lcall
fld
inc
and
sbb
or
fdiv
cmp
push
ret
sbbb
mov
aam
out
cwtl
mov
fmull
push
add
mov
leave
mov
cmp
shll
lret
loop
sub
jb
mov
mov
xlat
mov
pop
ja
and
sbb
nop
push
scas
mov
add
test
inc
lea
and
je
sbbl
test
in
pop
sti
pop
xchg
test
stos
xor
xchg
lret
inc
cwtl
cmovno
pop
add
or
lds
lret
clc
xchg
lcall
gs
sub
pushf
rcrl
cs
add
xchg
pop
jg
outsl
rolb
out
or
call
test
insl
es
cli
outsb
mov
xchg
aad
mov
mov
sub
or
jno
cmpsl
xchg
push
xor
and
or
push
or
aam
jns
aad
adc
rorb
fcoms
rclb
sub
outsb
cli
add
dec
xlat
mov
mov
mov
ja
sub
bswap
adc
sub
out
or
dec
xchg
adc
xchg
nop
jp
das
clc
inc
notl
mov
aam
cmp
ja
xor
cmc
xchg
popa
clc
inc
movsb
popf
sub
pop
call
stc
aam
xchg
push
in
jns
lret
jle
push
or
or
fdivrl
adc
jg
call
enter
ljmp
pop
or
outsb
loopne
mov
pop
xchg
push
pop
dec
loopne
sbbb
inc
pusha
out
mov
and
cli
mov
sub
mov
cmp
loopne
aas
mov
xchg
loop
sub
xor
xor
fistpl
lcall
push
mov
mov
mov
mov
dec
insl
xor
mov
push
jecxz
jg
rcll
dec
adc
mov
push
mov
pushf
fmuls
xchg
inc
ds
cmp
sahf
sub
sbb
test
and
mov
or
mov
aam
sbbb
mov
push
cs
outsb
cmp
inc
scas
push
cwtl
popf
add
int3
sbb
xchg
jns
mov
sub
push
jnp
add
daa
das
mov
and
stos
push
pop
jb
pop
jbe
ljmp
mov
cmp
jmp
adc
leave
sbb
sbb
push
xor
bnd
scas
cli
pop
cld
and
inc
jo
jbe
adc
jle
dec
and
mov
push
outsb
sbbl
shl
jae
inc
push
lds
fisubs
nop
mov
bnd
cmpsb
jno
add
rcrb
sbb
adc
and
out
jmp
inc
or
test
inc
xor
xor
dec
adc
enter
cltd
xchg
jb
sub
rorb
or
pop
inc
adc
rclb
inc
xor
xchg
rolb
cmpsb
adc
fwait
mov
lods
in
and
cmp
mov
test
sub
xchg
pusha
repz
loope
sub
cmp
adc
leave
xchg
sarb
pop
add
movsb
pop
jae
add
test
xchg
lds
mov
cltd
lahf
add
and
pop
xchg
inc
pusha
xor
cmp
fstpt
rcll
loop
jmp
or
lea
mov
cmpsb
scas
out
decl
jne
movsl
dec
out
call
test
fists
push
fiadds
jecxz
cmp
inc
in
in
bound
jo
rcll
cmpsl
ficoml
sbb
addl
push
shll
sti
imul
fmull
pushf
push
add
push
cmp
stos
icebp
pop
mov
cmpsl
enter
repz
add
xor
jmp
data16
inc
ret
dec
pop
sub
fmull
subb
sbb
xchg
lods
and
out
jmp
pop
jecxz
cmp
mov
imul
dec
hlt
cmp
dec
fwait
push
adc
movb
sub
icebp
scas
xchg
enter
and
sahf
mov
mov
or
inc
sub
add
movsb
je
hlt
xchg
gs
cwtl
ja
mov
jbe
mov
jge
or
mov
push
fwait
cmpsb
sbbb
adc
inc
adc
sub
and
pop
pop
rdmsr
rcrb
outsb
sub
enter
pop
jmp
popf
ja
cmpsb
shrl
sub
xor
fcoms
adc
mov
pop
xor
dec
clc
mov
xchg
adc
loope
lahf
ret
sub
or
pop
cmc
gs
xchg
cltd
popf
out
mov
in
in
outsl
ret
and
dec
loopne
icebp
sbb
ds
ss
aaa
sub
or
jns
xchg
mov
icebp
hlt
sub
aas
inc
xchg
inc
lahf
xorl
add
push
mov
xor
adc
cmpsb
sub
mov
or
shl
mov
stos
xchg
jp
pop
xlat
aaa
fwait
shll
rcrb
hlt
cli
addr16
out
and
lock
loop
into
jbe
or
cmpsl
mov
mov
ret
sbb
inc
fcoml
loopne
das
incl
lods
leave
jecxz
push
jb,pn
adc
addl
repz
fsqrt
test
cmp
inc
jmp
call
and
stos
pushf
out
and
decb
mov
jbe
push
or
mov
fwait
xchg
mov
xor
push
leave
addr16
pop
sbb
jg
std
ja
in
shrb
test
inc
out
call
mov
push
pushf
arpl
mov
insb
out
or
in
xor
xlat
jmp
mov
ja
lods
add
mov
mov
xchg
sbb
lret
or
mov
ficoms
es
lods
and
jge
adc
pop
mov
inc
sti
or
jae
arpl
push
fcoms
xor
leave
in
cld
test
inc
mov
inc
cld
adc
cs
push
es
xchg
lds
clc
idiv
push
lret
gs
ljmp
pushf
xor
aam
cmpsb
pop
jp
mov
aaa
cli
sbb
clc
roll
in
jbe
in
popa
cwtl
adc
add
jo
out
dec
aas
push
scas
pushf
xchg
push
push
aam
pop
xchg
mov
sbb
ror
aad
test
push
or
xchg
mov
cmp
or
sub
mov
mov
pop
sub
or
nop
sbb
push
xchg
movsl
gs
lcall
cli
push
in
ret
push
movsb
push
ljmp
mov
cmc
push
sbb
mov
test
mov
fcmovbe
and
test
xchg
xor
inc
nop
pop
comiss
mov
sbb
or
div
call
pop
fildll
jae
mov
es
cmp
ret
sub
push
lahf
int
fsubs
and
pushf
into
inc
lock
mov
xchg
cmp
add
cld
jp
jae
sub
clc
cmp
test
popf
lcall
xchg
or
loop
loopne
xorb
inc
aam
and
aam
pushl
bnd
xor
rcrl
sbb
and
add
sbb
int
in
jl
test
xchg
sahf
aam
stc
xor
add
and
rcrl
sbb
enter
push
mov
mov
sbbb
iret
lock
lahf
and
mov
push
sub
jle
mov
frstor
repnz
sbb
lods
lahf
adc
lods
push
loopne
sbbl
lret
mov
idivl
sbb
ja
or
lcall
test
cmp
mov
adc
pusha
ret
mov
cmpsl
andb
out
hlt
lds
imul
push
sub
aas
adc
cli
adc
scas
xor
imulb
mov
pop
cld
or
test
imul
cmpl
shrb
or
mov
pop
fidivrl
leave
sbb
cmp
xor
loopne
mov
ret
mov
lahf
pop
ss
cmp
xchg
in
call
cmp
push
call
lret
pop
rolb
mov
or
insb
stos
call
mov
negb
insl
inc
xchg
fstl
ja
xchg
bound
aam
jl
sub
adc
pop
lahf
ja
sbb
imul
pop
out
mov
jle
negl
or
testl
loope
daa
es
sbb
sbb
and
aas
xchg
repnz
aam
dec
sub
push
popf
movsl
in
ss
xor
test
xchg
sbb
stc
dec
test
in
or
add
test
shll
push
jae
mov
inc
add
in
int3
adc
sbb
aam
push
adc
pop
negl
and
push
outsl
sub
ja
ret
xor
or
xchg
mov
cmc
add
pushf
fs
mov
cltd
rol
rcll
xchg
adc
clc
cli
jecxz
fistl
xchg
rorb
push
sbb
sbb
cmp
pop
subb
jb
mov
jne
movsl
or
and
or
fstpt
adc
int
lock
rcll
pop
sbb
shlb
popa
mov
ja
ret
cli
mov
and
mov
icebp
imul
adc
push
xchg
movsl
push
pop
mov
popf
jno
jp
sbb
push
popf
and
dec
nop
jno
xchg
test
jnp
nop
ljmp
inc
adc
fdivs
inc
pop
mov
lahf
loop
adc
cmpsb
or
inc
fsts
inc
add
cmp
push
xor
out
ret
fstps
xor
cmp
xor
and
sub
mov
fcompl
sub
jmp
stc
lcall
sub
out
into
dec
les
lods
cmp
nop
mov
lcall
push
push
mov
jle
daa
push
push
push
imul
mov
xlat
jo
arpl
adc
cld
inc
or
inc
sub
add
test
out
jns
enter
lds
shrb
sahf
push
dec
inc
cltd
jne
cmpsl
inc
xchg
push
aaa
push
scas
das
add
in
and
cltd
nop
mov
mov
lds
mov
ror
leave
add
loop
shlb
cmc
mov
xchg
cmpsl
xchg
loop
int3
lret
add
and
jp
mov
imul
ret
aaa
sub
mov
lahf
inc
add
adc
inc
clc
popf
in
jl
mov
xor
push
pop
mov
add
mov
adc
jns
rcl
mov
out
adc
aaa
in
fcoml
in
icebp
adc
cmc
dec
mov
and
or
or
imul
sahf
dec
stos
pop
push
dec
rcr
int
movsb
lods
ds
or
ljmp
ret
lret
sar
mov
subl
add
stos
pop
inc
push
mov
rorb
jnp
xchg
inc
jno
add
xor
iret
sbb
dec
push
imull
adc
and
in
dec
mov
push
inc
cmpsl
xchg
loope
inc
adc
insb
add
test
pop
je
shrb
es
push
pop
inc
in
mov
inc
sbb
or
jnp
dec
dec
xlat
test
xchg
dec
popa
cmpsl
test
call
jg
aaa
popf
jae
jne
xor
enter
xchg
mov
xchg
mull
inc
pop
jmp
jle
cmp
inc
subb
xchg
test
adc
popf
imul
xor
cmp
pop
or
lahf
xchg
push
cs
dec
stos
mov
cmpsl
add
jmp
fists
enter
into
inc
xor
iret
jmp
les
xchg
cmpsl
insb
ja
mov
movsb
call
mov
or
movsb
pop
jne
mov
das
addb
repnz
push
adc
dec
mov
or
jle
adc
dec
ljmp
insb
lods
ss
les
sahf
cld
fprem
mov
dec
imul
xchg
mov
lods
fistpll
cmp
xchg
mov
xor
je
mov
test
mov
pop
fwait
xchg
out
out
and
mov
xchg
xlat
add
repnz
or
test
out
je
test
andb
adc
and
xchg
popa
cmp
lods
mov
or
int
sbb
cmp
icebp
pop
sub
jg
fs
add
ss
adc
jbe
or
insl
pop
adc
in
mov
mov
cmp
adc
das
dec
fadds
dec
fwait
xor
out
sbb
cmc
add
fs
dec
repnz
jno
dec
inc
or
sub
fdivrs
in
mov
je
jge
movsb
xchg
or
xchg
sbb
sti
rcrb
cwtl
sbb
or
orb
inc
jno
mov
testl
xchg
mov
cmp
inc
push
in
mov
int3
push
nop
xor
mov
aam
sbb
xchg
sub
mov
dec
mov
xchg
jecxz
movsl
or
arpl
out
or
fs
dec
mov
loope
mov
int3
inc
pop
and
sti
jle
inc
or
test
scas
inc
sbb
sub
adc
out
pop
shlb
rcr
lods
in
cmpsb
sarb
adc
int
nop
popf
repnz
jecxz
cli
jae
fs
and
and
inc
jne
sub
pop
jno
imul
shrb
test
lock
in
lahf
les
cwtl
push
jae
adc
sub
cmp
inc
push
mov
dec
popa
pop
cmp
dec
mov
mov
pushf
jg
push
cmp
call
andb
push
pop
jb
int3
jo
or
xchg
pop
popa
jnp
les
mov
xchg
or
xchg
jmp
out
mov
mov
fstps
loope
mov
jge
mov
inc
or
or
outsb
stos
sub
mov
mov
int3
xor
jne
mov
aas
xorb
xor
in
dec
add
inc
out
fwait
mov
fisttpl
mov
insb
out
push
adc
push
pop
sbb
orl
cmp
add
out
push
xchg
inc
fnstenv
fwait
das
and
cmp
mov
adc
fidivl
pop
les
push
sbb
xchg
cmc
xchg
mov
xor
test
mov
xchg
fnstsw
icebp
pop
fwait
adc
sarl
out
imul
sub
scas
xchg
cmp
out
nop
sbb
cmp
loope
push
push
adcl
adc
imul
adc
in
add
jno
push
lods
int
je
jo
cmc
sub
ror
cmp
mov
cmc
cmpsb
ret
test
cmp
push
mov
xchg
cmp
sbb
outsb
adc
or
push
and
filds
inc
out
cmpsl
hlt
shl
out
test
sbb
fisttpll
mov
pop
push
push
jl
fwait
pop
pop
ja
pusha
sbb
ret
sti
push
cmpsl
mov
pop
pop
insb
inc
adc
adc
std
sub
idiv
loope
cld
cmp
pop
test
fstpl
pop
lret
stc
mov
fidivl
insl
pop
andb
ret
add
sub
push
cmpb
jnp
adc
lds
cli
push
push
or
xor
jmp
shr
jg
jbe
loopne
push
sbb
stos
out
adcb
filds
rolb
cmp
repz
insb
jp
fwait
push
xor
std
stos
scas
mov
mov
call
or
stos
aam
fstl
loopne
arpl
sbb
fsubr
adc
divl
jae
dec
dec
sbb
push
xor
call
nop
outsl
mov
bound
ss
fistl
aam
popa
call
rorl
cmp
and
xor
cli
cmpsb
or
popf
daa
aad
pop
cmp
pusha
scas
add
cmp
test
mov
out
ret
pusha
cmpsl
lcall
push
mov
aam
xchg
mov
sbb
sub
mov
dec
cmpsb
scas
inc
push
popf
loop
jmp
daa
push
out
xor
les
inc
jns
stos
cmp
xor
adc
xor
mov
jp
aad
dec
cmp
jns
inc
pushl
aaa
mov
sub
stc
pop
lret
xchg
mov
stos
stc
loop
repz
movsl
dec
jno
in
adc
outsl
cmp
enter
aad
jge
lds
or
shll
inc
adc
cmp
rorl
and
repnz
sub
sbb
push
ja
gs
cwtl
add
xchg
mov
xchg
push
test
jle
imul
sub
sti
and
movsl
sub
mov
cmc
jne
cmpsb
icebp
xlat
pop
mov
loop
jbe
ds
cmp
sti
dec
lea
pop
sub
inc
push
pop
mov
sub
add
stos
out
jg
test
movsl
arpl
xchg
mov
adc
jns
add
lods
fistl
cmpsb
adcl
mov
in
and
adc
push
std
je
or
push
bound
mov
mov
neg
push
je
fwait
push
insb
adcl
mov
rol
aam
cmp
adc
sub
mov
sub
lret
je
cltd
mov
jno
push
jecxz
jmp
and
fnstsw
adc
dec
lods
pop
mov
ss
fsubs
sub
push
shrb
push
xlat
mov
sub
push
push
xchg
mov
cmp
xchg
test
cs
cmpsl
push
cmp
movsb
sbb
stc
pusha
in
sub
or
inc
push
or
pop
std
imul
fiaddl
cltd
insl
push
sbb
xchg
stos
out
in
sub
dec
inc
iret
dec
jl
enter
arpl
test
jb
ss
in
sub
push
and
stc
mov
mov
in
std
add
or
dec
push
popf
pop
imul
mov
int
clc
aad
lea
adc
inc
push
das
leave
push
push
gs
mov
aad
ja
andb
fiaddl
pushl
jns
push
outsl
pop
int3
sub
cmp
sub
cmp
cld
mov
adc
cmp
dec
lea
enter
mov
lea
movzwl
lea
je
xchg
push
daa
xor
std
mov
jp
xor
fcomps
cltd
rclb
dec
in
jae
and
stos
clc
fstpt
cmp
mov
loope
jg
mov
nop
les
mov
out
jbe
divl
and
xor
lods
or
ljmp
fcomps
cmpb
xor
dec
mov
movsl
mov
dec
sub
xor
popa
ret
and
sbb
outsl
mov
push
lods
int3
xchg
mov
bound
bound
addr16
mov
dec
adc
pop
int3
mov
jae
push
pushw
adc
fs
mov
pop
jae
in
out
into
lock
jmp
daa
or
inc
push
push
add
cmp
xchg
insl
pop
aam
addr16
insb
jne
ss
cmc
ret
in
nop
insl
lock
push
xchg
mov
stos
in
mov
fcompl
push
fs
mov
outsl
loop
icebp
cmp
movsl
test
cmpsb
cmp
test
jmp
lds
adc
loopne
adc
rcrl
lea
pop
push
cmp
xchg
pushf
cmp
push
adc
cs
nop
xor
sbb
xchg
push
pop
clc
dec
pop
pop
lea
fisubrl
imul
enter
jecxz
inc
inc
cltd
shrl
mov
xor
int
jl
out
sub
xor
int
xchg
int3
inc
cmp
jle
test
in
das
insl
movsl
cmp
leave
pop
push
insl
mov
adc
and
loop
jmp
or
and
fsubp
subb
movsb
cmpb
lock
and
rol
cmpsb
sbb
sbbb
jg
loopne
mov
jecxz
or
jp
adc
int3
loope
mov
xchg
sub
lea
push
out
loop
sub
mov
cmp
mov
adc
push
or
add
mov
icebp
popa
push
push
ret
or
jno
int3
js
mov
out
lds
push
mov
pop
in
jae
cmp
jnp
cmpsb
sbb
movsb
cmc
orl
sbb
nop
mov
push
xor
add
pop
sub
mov
xchg
out
adc
mov
and
lods
cvtps2pd
sbb
pop
shlb
cmp
es
fisubrs
or
sbb
out
je
mov
dec
stos
pop
cltd
fnsave
mov
or
das
add
in
mov
clc
ds
leave
js
arpl
aad
sub
sbb
mov
xor
pop
xor
adc
les
enter
pop
hlt
pushf
jbe
orl
cmp
jnp
lcall
sub
mov
xor
roll
pop
xor
lock
sarb
cmp
xchg
lret
or
dec
orb
lcall
loopne
stc
cmp
jo
jae
sarl
mov
push
stc
push
sub
clts
xchg
cli
xor
leave
cmpsl
ljmp
out
mov
nop
xor
jne
mov
int3
or
inc
fdiv
inc
mov
sub
stos
movl
orl
or
sub
sbb
in
outsb
addr16
mov
imul
sub
dec
call
in
stos
popa
mov
test
lea
and
lock
push
inc
jl
lahf
das
out
scas
mov
cmpsb
fwait
xor
stos
add
add
sahf
in
mov
addr16
add
inc
push
and
popf
jecxz
jae
mov
jo
and
lods
cwtl
movsb
push
imul
push
nop
in
sbbl
xchg
fwait
jo
sbb
xchg
xlat
inc
cmp
jno
lret
sbb
int
sub
inc
mov
fdivr
sbb
addl
lea
scas
cwtl
dec
testl
pop
rorb
aaa
clc
aas
test
and
dec
jmp
roll
cltd
pop
xor
scas
or
mov
or
add
notl
hlt
fldcw
lcall
or
jle
fbstp
stos
mov
inc
lea
int3
mov
mov
fs
push
orb
pop
xchg
stc
ret
xchg
mov
sub
push
fsubrs
add
roll
out
ret
es
or
dec
sbb
lret
fnstenv
not
jge
push
test
pop
dec
cs
dec
arpl
aam
jecxz
imul
loope
dec
sub
ja
jle
idiv
out
bound
sbbl
mov
add
pop
xchg
lock
aam
mov
les
mov
je
xchg
cld
or
xor
pop
cld
fwait
jae
mov
rcr
cmp
mov
adc
cmp
mov
jecxz
inc
cmpsb
pop
sbb
daa
ljmp
jae
xor
aas
shll
data16
aad
call
xchg
mov
cmpsb
outsb
movsb
scas
push
adc
adc
call
pop
or
lds
push
xadd
add
rep
jnp
add
inc
pop
call
or
or
mov
subb
and
sub
test
jecxz,pn
int
xor
out
leave
call
add
mov
in
pop
pop
inc
lods
xor
xchg
mov
sbb
ret
mov
cmp
enter
xchg
xlat
dec
push
loope
mov
push
repnz
add
push
cmp
xor
fidivs
dec
pop
add
loop
jno
sbb
int
cmp
sarb
shlb
das
sti
orb
in
stc
gs
bound
mov
jmp
roll
out
insb
ret
mov
dec
mov
lea
outsb
push
inc
xchg
add
int3
push
jmp
out
dec
imul
jecxz
add
ficoml
push
repnz
mov
aad
sahf
dec
dec
add
shlb
mov
in
fs
push
adc
or
dec
pushf
or
leave
pcmpeqd
dec
cltd
int
test
adc
fsubrl
jecxz
jno
jle
jecxz
jge
mov
lock
lret
lods
loopne
push
popa
add
jecxz
jmp
aas
or
std
sbb
movsb
xchg
movsb
jb
in
sbb
or
das
mov
push
imul
test
mov
rolb
jp
jg
xor
pop
inc
xchg
xchg
mov
xlat
leave
dec
xor
pusha
xchg
add
iret
fstl
inc
cltd
repnz
lock
cltd
sbb
ret
ficoml
dec
adc
lcall
sbb
xor
fiaddl
movsb
push
jno
cwtl
or
mov
je
das
mov
std
jge
int
inc
addr16
add
out
xlat
out
in
push
inc
imul
cmpsb
mov
sarl
or
mov
pop
ljmp
dec
cmpsl
inc
dec
aaa
jmp
add
sbb
jno
pop
ficoml
inc
stos
pop
add
fwait
mov
sub
loop
test
loope
pop
dec
cmc
leave
xchg
mov
mov
cwtl
push
lock
add
adc
or
bound
inc
ljmp
orl
add
mov
mov
fbstp
lcall
or
pop
cli
loope
les
sahf
jnp
or
or
outsl
xchg
lock
shlb
adc
pop
xlat
sar
push
ficoml
loop
rcll
pop
sbb
ficompl
add
imul
ja
inc
pop
test
cmp
mov
popa
js
ret
xor
enter
mov
pusha
or
in
leave
cwtl
push
lods
popa
lahf
jg
mov
call
mov
cs
sahf
mov
loope
pop
and
lds
push
jb
mov
mov
ret
pop
mov
jmp
cmp
xchg
in
insl
lea
or
push
js
mov
lea
dec
push
out
cld
ret
bound
jns
fs
out
jle
xchg
cld
push
ret
dec
popf
pop
ffreep
xor
imul
jecxz
in
xor
pop
xlat
loop
pop
cmpsl
jo
xorb
pop
bnd
jb
mov
cld
mov
ds
pop
rorb
sbb
or
or
out
mov
aaa
sub
cs
ficomps
jg
add
imul
cwtl
cmc
xor
cmp
rcrb
cmp
adc
mov
or
jle,pt
pop
mov
in
fiadds
test
mov
push
push
insb
insb
sahf
sti
jbe
gs
xchg
dec
mov
dec
mov
cmpl
out
xchg
lahf
mov
or
neg
rcll
and
lock
add
dec
mov
cli
mov
push
outsl
movsl
pop
hlt
or
sbb
push
mov
jp
inc
dec
repnz
cmpsl
add
and
jne
pop
pop
pop
clc
jmp
fadds
gs
es
cltd
adc
jmp
sub
cmp
cld
dec
or
test
mov
fidivs
popf
jl
push
enter
sub
mov
lods
mov
dec
sub
icebp
fwait
mov
std
mov
sub
add
cmp
fcompl
xchg
mov
call
test
into
ja
pusha
popf
leave
popf
scas
pushf
adc
dec
jae
jne
icebp
arpl
xor
sub
cmp
shll
lcall
mov
jb
test
loop
xchg
lahf
xor
xchg
pop
push
je
arpl
out
int3
aaa
into
mov
fcoms
imul
add
xchg
cltd
dec
scas
push
outsb
jg
xchg
shl
cmc
pushf
lods
loope
xor
mov
std
test
test
rcrb
mov
insl
xchg
repz
int3
jmp
pop
dec
adc
ljmp
inc
into
jp
mov
call
adc
ret
mov
jb
nop
stc
xor
mov
cltd
rorb
push
pushf
mov
test
push
cmpsb
imul
xchg
pop
fs
inc
inc
repz
sbb
xor
roll
jno
jl
rclb
fs
arpl
outsb
cwtl
arpl
dec
arpl
pusha
loopne
add
jo
fidivs
xchg
mov
cmc
lea
fadd
jmp
movsb
stos
mov
jno
inc
mov
sbb
adc
into
sub
out
xor
cltd
sbb
imul
cli
mov
popf
mov
jb
pop
clc
nop
js
ds
add
std
scas
dec
xor
sub
cli
pop
sub
add
cwtl
rcll
ljmp
jno
cmc
ljmp
push
cs
sub
pop
int3
inc
xchg
stos
popf
out
loope
xchg
jl
jge
fildl
push
lret
mov
inc
jg
sub
scas
sbb
mov
pop
mov
push
repz
pop
movsb
call
xchg
lods
mov
test
sub
cmp
pop
addr16
xchg
mov
dec
xor
xchg
mov
xchg
jne
cmp
sub
aam
mov
popa
loope
test
cmp
adc
pop
and
bound
sti
test
fsubl
xor
repz
ds
shll
sub
lods
imul
push
dec
sub
gs
das
dec
out
outsb
ds
xchg
pushl
lods
outsb
or
imulb
stos
mov
ds
loopne
cmp
bound
test
inc
lret
scas
leave
dec
sbb
cs
iret
pop
inc
lds
add
mov
xor
insb
mov
push
int
fstps
lahf
inc
call
icebp
cmpsb
loope
pop
mov
jg
orl
ret
push
enter
lods
mov
mov
cmp
loope
inc
out
insl
mov
addb
jo
js
shll
pop
aam
push
popa
notl
mov
cmpsb
jl
es
test
pushf
mov
jne
daa
pop
pop
pop
fsts
sbb
divb
lods
and
xchg
das
pop
xor
mov
repnz
rorl
pushf
loope
test
cwtl
jg
mov
fldcw
ds
jecxz
and
push
adc
sub
mov
rcll
pusha
sahf
cld
and
push
sub
addr16
xchg
mov
mov
pop
mov
push
push
inc
mov
shll
mov
test
call
daa
pop
aam
mov
nop
fsubl
divb
cmpsb
outsb
pop
fisubrs
cmp
dec
pop
test
mov
les
sub
add
in
push
movsb
sub
cltd
fldl
jns
or
les
outsb
adc
mov
cmp
mov
push
pop
lods
push
stos
xchg
add
addl
leave
int
out
jae
mov
mov
ficomps
lret
xor
sub
and
pushf
xchg
mov
mov
xor
or
mov
pop
call
push
pop
shl
icebp
mov
jne
fwait
insb
addr16
ret
inc
fisubs
mov
pop
scas
fcoml
or
jns
push
lahf
xor
movsb
xchg
cmpl
lret
js
out
or
xchg
ljmp
fcompl
subl
ja
int
in
add
test
cmp
xchg
push
jmp
sub
mov
jb
xor
or
lea
jb
popf
inc
inc
mov
flds
ret
sbb
in
adc
aas
int
mov
adc
add
dec
xchg
and
inc
cmp
or
ljmp
add
cmp
lods
out
stc
sbb
add
xor
adc
and
push
dec
loopne
pop
pushl
mov
sub
sbb
mov
cmp
cmp
sbb
cmp
fptan
jb,pt
dec
inc
fs
xlat
inc
mov
xor
stos
aam
leave
mov
in
mov
popf
ja
dec
std
jp
mov
dec
cld
insl
mov
inc
mov
bound
icebp
pushf
and
stos
pusha
inc
inc
lea
repnz
pushf
pop
jmp
hlt
xchg
cmp
dec
mov
jecxz
mov
mov
int
xor
inc
sbb
jnp
xchg
xchg
mov
push
leave
stos
xchg
xchg
out
mov
fnstcw
in
loope
jne
cmp
in
pop
dec
sub
jecxz
out
out
xor
sub
sahf
pop
pop
mov
jns
repnz
xor
mov
repz
test
xchg
xchg
mov
xchg
push
std
imul
pusha
test
adc
adc
lret
xor
and
xchg
push
push
mov
pusha
push
int
mov
cli
jmp
test
outsb
fists
pop
xor
or
out
cmp
call
shl
mov
cmp
xchg
lds
sub
or
jne
jne
inc
dec
lret
out
pop
push
mov
and
adc
inc
je
shll
test
jno
out
push
adc
dec
test
subb
and
daa
or
dec
hlt
dec
jmp
lahf
push
sub
aad
add
and
pusha
rcrb
mov
jg
cmp
mov
inc
mov
adc
push
shlb
mov
out
je
mov
test
dec
xchg
mov
mov
xchg
adc
data16
decb
xchg
pop
jb
mov
xor
mov
mov
mov
shlb
rclb
nop
pop
mov
jl
stos
mov
mov
shl
mov
cld
sbb
xor
and
insb
popf
add
inc
outsl
xor
mov
cmpsb
lretw
push
push
lret
fcomip
mov
pop
sub
add
sti
into
pop
add
in
icebp
cmp
outsb
mov
repz
cmpl
pop
and
test
dec
clc
lret
outsl
mov
mov
ret
lods
leave
je
mov
mov
xchg
mov
mov
jno
int3
aam
xlat
xchg
enter
scas
mov
add
pop
insb
in
lods
dec
jae
mov
test
jb
cwtl
adc
dec
xorl
or
jo
outsl
xlat
jbe
push
ds
ljmp
or
mov
outsl
mov
iret
sbb
aas
nop
cmpsb
sub
push
mov
cmp
nop
movsb
adc
aad
adc
pop
je
xor
jae
outsb
push
add
stos
dec
imul
sub
in
popf
pop
cmp
mov
mov
push
push
loopne
ljmp
mov
fstps
pop
xor
rcrb
lock
dec
enter
rclb
loop
sub
xor
shll
adc
dec
pop
jmp
dec
shrb
pop
sub
int3
fcompp
mov
and
je
add
lret
cmpsb
int
mov
out
inc
add
insl
inc
push
or
cmp
xchg
sub
cmovo
push
mov
add
or
repz
push
in
iret
pop
stc
in
dec
jle
adc
adc
orb
out
and
push
jl
insb
inc
mov
sar
ja
dec
and
cmpsl
xchg
in
pop
js
mov
add
jae
and
rcrl
int
in
push
insl
xchg
xorl
cli
icebp
mov
cmp
shl
test
jo
bound
sub
sub
in
imul
mov
or
insb
fnsave
jp
lahf
pop
mov
imul
addr16
push
sbb
sbb
xchg
popf
xchg
out
addr16
stos
movsl
sub
cmpsl
stos
mov
mov
shl
xchg
xchg
cmp
sahf
jg
pop
js
test
and
incb
pushl
pop
ret
into
out
test
mov
push
rcr
repz
pop
inc
aas
mov
imull
or
jl
aad
fwait
jne
adc
inc
shl
pop
or
das
push
mov
push
sub
jb
sar
sbbl
fimull
push
add
int3
aad
mov
scas
insl
roll
push
push
test
jae
lock
pop
fildl
ds
or
push
dec
inc
jb
dec
and
push
std
mov
or
filds
call
jg
movsb
clc
lret
mov
sbb
cmp
mov
stc
mov
sub
add
dec
jp
lock
es
xchg
pop
rcl
out
xor
movsb
addr16
fsts
push
add
add
lcall
xor
fidivrl
bound
and
cmpsb
dec
mov
and
xlat
out
psubsw
inc
mov
xchg
jne
test
iret
loop
cmpsb
mov
and
lea
fldenv
inc
jle,pt
aaa
sub
inc
or
jmp
mov
enter
jp
sbbl
mov
pop
push
insl
push
jbe
insl
push
adc
lds
jecxz
push
nop
cmpsb
mov
adc
pop
push
pop
dec
mov
sub
test
lea
je
mov
jb
xor
movsl
cmp
out
push
lds
push
mov
mov
dec
lea
pop
ljmp
fbld
mov
icebp
push
ja
test
fldt
scas
xor
pop
sahf
lock
das
imul
jl
comiss
in
inc
test
addb
test
dec
cli
mov
sub
ljmp
dec
push
or
pop
inc
and
leave
rcrl
or
cmp
xchg
out
inc
test
cmpsl
test
ds
xor
int3
sub
fildll
fs
mov
adc
push
inc
repnz
in
fistpl
mov
add
inc
ss
cmpsl
fildl
pop
add
add
mov
pushf
adc
icebp
jae
hlt
jge
cmp
cmp
out
xor
mov
inc
stos
fsubrp
add
std
pop
popa
sbb
dec
push
shrb
jmp
xchg
sub
add
mov
mov
imul
add
scas
shll
enter
out
inc
shlb
stc
cmpsb
test
mov
std
imul
aas
mov
inc
xor
jmp
daa
and
ja
sbbl
or
mov
mov
stos
leave
fldl
inc
imul
aam
das
pop
daa
mov
jbe
outsl
leave
fists
lock
sbb
mov
sahf
and
jne
pop
push
add
xchg
mov
insb
xchg
push
sub
movsb
daa
out
testb
mov
mov
or
dec
out
rcrl
in
imul
mov
stc
mov
lock
or
push
dec
dec
stc
addb
jno
ror
sbb
cmpb
mov
mov
mov
and
mov
lods
test
inc
cld
sbb
dec
cmp
popf
mov
fisubrs
pop
xorl
iret
mov
pop
imul
dec
add
pop
popa
out
jge
mov
fsubrs
out
fwait
je
in
lret
idivb
inc
aas
rclb
rcrb
mull
cmp
pop
and
aad
mov
mov
mov
push
push
mov
xchg
jmp
hlt
jmp
cmp
sub
stos
aas
push
push
nop
aaa
xor
lea
inc
push
js
mov
pop
push
pop
mov
xor
lahf
loopne
std
pushf
stos
or
test
adc
xchg
mov
add
and
add
gs
popf
push
je
mov
add
pop
es
lods
push
sbb
adc
or
ret
outsb
sarb
pop
aam
xchg
jp
xor
jl
cmpsl
enter
add
xchg
xchg
shrl
mov
js
jnp
ret
push
les
dec
rcrb
test
xor
inc
jns
push
or
jne
pop
test
xor
shll
call
das
movsl
jne
addr16
pop
mov
xor
clc
arpl
xchg
mov
icebp
bound
out
sub
adc
test
out
cmp
inc
add
icebp
add
faddp
rcrl
and
adc
xor
mov
ret
pop
mov
ror
js
stc
outsb
insb
cmpsl
outsl
mov
jge
pop
xchg
out
pop
and
add
lods
cs
xlat
cmpsl
sbb
push
add
cli
sbb
lea
clc
adc
out
movsl
jbe
aas
inc
jl
mov
add
dec
fwait
jo
inc
stos
jo
xchg
fidivrl
xor
sbb
mov
es
jae
mov
lret
xchg
and
cwtl
and
mov
sub
outsl
ds
arpl
and
test
sbb
jns
outsb
cltd
inc
fiadds
cmpsl
mov
xchg
mov
pop
data16
sbb
rcrl
jg
testb
inc
ds
or
xor
das
es
shr
mov
push
leave
pop
or
aam
out
subl
xchg
adc
loop
fucomi
or
repz
mov
iret
sti
outsl
jnp
push
data16
fisubs
insl
add
xchg
jg
hlt
push
sub
sbb
ror
out
enter
xor
pop
pop
dec
test
jmp
mov
lahf
fisubrs
bound
fsub
in
loop
mov
adc
out
andb
nop
jbe
adc
movsb
rsm
loopne
insl
hlt
xor
mov
movsb
outsl
in
cmp
jmp
push
lret
xor
push
mov
clc
bound
push
call
scas
adc
or
sbb
push
mull
outsb
inc
out
ja
rcl
jmp
int3
jmp
add
xor
jbe
lcall
dec
das
mov
data16
mov
movsl
inc
cmp
cltd
inc
dec
jmp
push
je
outsb
sub
pop
les
out
orl
push
add
jae
ljmp
push
mov
and
xchg
or
mov
repnz
pop
mov
subl
xor
arpl
mov
pop
push
insl
jno
divb
xchg
mov
jnp
lret
sbb
and
and
push
arpl
mov
jle
hlt
iret
shrb
xchg
jno
sbbl
dec
adc
mov
lcall
mov
cmpsb
shl
pop
shrb
sub
or
hlt
sbb
fstl
xchg
lea
cmp
lret
mov
jmp
adcb
pop
sub
inc
xchg
pop
stos
sar
pop
mov
cmp
dec
pop
jge
int3
mov
aam
popa
mov
xchg
shlb
fisttpl
int
and
mov
push
ds
mov
push
pop
addr16
xchg
enter
cmp
rorb
mov
ficomps
test
movsl
mov
ja
push
leave
inc
lcallw
xor
pop
jl
in
cmp
jno
dec
mov
mov
lret
cs
pop
mov
and
enterw
dec
sbb
dec
les
mov
mov
in
test
xlat
ja
ljmp
pop
cmp
cmp
nop
jo
pop
xlat
out
rolb
inc
mov
ja
push
adc
push
xchg
sbb
loope
mov
xchg
cmp
mov
push
fincstp
mov
leave
shr
xlat
out
jo
mov
cmp
xorl
out
jmp
cli
and
movsl
wrmsr
mov
xchg
cmp
or
loope
hlt
ffree
mov
insl
and
push
sbb
add
bound
push
lods
leave
push
int
mov
jae
sbb
dec
xchg
jae,pn
pop
int3
pop
fnstsw
sbb
sub
mov
cmpsl
jns
mov
shrl
pop
imul
insb
iret
out
movsb
xor
das
lcall
std
jmp
jo
gs
shl
aad
ret
jne
lahf
test
es
test
xchg
jg
dec
cltd
mov
dec
push
ret
mov
jecxz
pop
aam
notb
je
cmp
fimuls
dec
add
add
mov
fnstenv
push
xchg
outsl
pop
sub
jmp
inc
xchg
sbb
mov
movsb
gs
lret
leave
sarl
mov
arpl
adc
cmp
icebp
jnp
mov
push
je
or
clc
cmpsl
aaa
adc
fwait
test
mov
in
gs
enter
push
daa
out
dec
add
out
dec
and
xor
test
jmp
popf
aad
insb
jg
movsl
and
cwtl
adc
dec
pushf
sbb
mov
ret
inc
xchg
cmp
imul
xor
int3
bnd
ret
ljmp
mov
test
fdivr
jge,pt
int
inc
outsl
and
popa
stos
cmp
jb
lds
push
popf
add
cmp
xchg
mov
mov
xchg
lods
sub
out
sub
les
cmp
xchg
bnd
jle
adc
ret
mov
stos
pop
xor
cmp
cli
mov
and
xchg
mov
adc
or
or
out
testb
adc
xchg
add
jnp
roll
es
cmc
test
xchg
mov
or
mov
loopne
ljmp
mov
divl
and
cli
mov
inc
inc
pop
icebp
xor
flds
test
jns
adc
into
aaa
das
mov
mov
imul
mov
push
xor
cld
mov
lcall
xor
ret
iret
cmp
in
fsubrl
scas
mov
push
push
jge
or
data16
push
cmpxchg
loope
pop
push
repz
shl
fmull
ds
fildl
aad
incl
xor
mov
sub
arpl
sub
clc
sti
push
movsb
mov
xor
pop
out
ja
inc
lahf
sbb
mov
fdivrl
sub
aad
lahf
cmpsl
or
sarl
sub
fsubs
mov
or
mov
addl
add
jo
in
dec
add
adc
xchg
pop
outsb
jae
insb
sub
mov
dec
mov
add
xor
movsl
imul
imul
stos
jge
popf
xchg
scas
imul
mov
inc
clc
and
adc
lret
sahf
jle
out
push
scas
pop
out
jae
mov
bound
call
scas
test
xor
cld
daa
cmp
rcr
and
jne
pop
repz
push
mov
push
adc
stos
callw
gs
scas
adc
push
mov
push
jo
cmc
gs
mov
fsts
repnz
imul
lea
in
and
mov
jbe
sub
insb
mov
xchg
jge
mov
inc
sub
push
mov
xor
arpl
mov
sbbl
icebp
call
test
xchg
xchg
loopne
or
pusha
pop
stos
mov
movsb
xor
cmpsl
xchg
pop
mov
inc
mov
xor
outsb
xchg
inc
or
adc
pop
cmp
out
mov
mov
jle
insb
adc
or
pop
add
pop
daa
add
push
test
cmp
jno
ret
loopne
popf
in
int3
lahf
pop
pop
inc
pop
mov
or
ljmp
cmp
nop
shrb
xchg
xor
cld
std
and
push
xor
fistpll
push
pop
rcrb
inc
xchg
addb
idivl
add
mov
jp
xchg
out
jmp
mov
cmpsw
enter
movsb
jp
loopne
mov
outsb
shll
inc
in
push
fistpll
cmp
jmp
fnstenv
movsb
int
pop
and
sar
push
xchg
jge
ret
add
loop
sub
mov
mov
jns
cs
je
lret
and
mov
leave
xchg
outsb
shrb
lcall
stos
into
push
stos
ja
imul
and
mov
ret
jbe
lcall
xchg
test
pop
int
mov
stos
btc
pop
jne
xor
pop
xor
xchg
stc
into
gs
cld
mov
cmp
popf
and
aas
pop
cmp
jnp
lahf
cli
das
jo
inc
shlb
pop
addr16
add
je
rolb
add
lock
or
pop
jns
ja
popf
lock
dec
push
jnp
dec
bound
or
in
push
in
sbb
lret
push
push
adc
lahf
push
jne
lock
mov
mov
clc
out
mov
push
push
dec
push
data16
sti
add
fbstp
mov
jle
pop
or
jbe
pop
data16
or
je
in
pop
fs
mov
jno
dec
cmpsb
sub
cld
ret
imul
sub
mov
ret
mov
es
cmc
ficoms
mov
insb
pop
mov
jae
inc
or
xchg
in
jp
pushf
and
imul
lods
jmp
sub
lock
mov
cmc
and
sub
cmpsb
js
adc
or
test
add
inc
push
lods
bound
adc
lea
xchg
popf
stos
fcompl
xor
test
leave
jno
imul
inc
scas
sbb
push
mov
cli
and
aam
mov
out
inc
fwait
pop
nop
cltd
fidivrl
and
and
push
pop
fsubr
insl
jg
cmp
dec
mov
pop
push
enter
push
imul
aam
cmpsb
xor
pushf
xor
sub
test
jb
jge
loopne
jg
popf
call
ret
lret
jmp
mov
sahf
mov
push
bound
xor
cmpsb
push
push
in
outsb
push
cmc
out
dec
fwait
mov
pop
pop
xor
mov
aas
mov
push
cmc
iret
xor
sbb
mov
fcoml
cwtl
es
pop
lods
cli
icebp
mov
inc
popf
test
cli
pop
aaa
shlb
fnstcw
lods
jno
xchg
ljmp
push
ja
push
xor
dec
stos
js
mov
dec
aaa
test
aad
repnz
mov
pop
andb
xchg
fsts
in
push
sub
aad
pop
cwtl
dec
movsb
ficomps
pop
or
fdivl
out
ficompl
mov
test
and
lock
or
push
mov
cli
jae
rolb
pop
xchg
jne
dec
jp
and
sbb
dec
bound
xor
jno
xor
xchg
sbb
mov
outsb
test
pusha
dec
and
enter
insl
adc
or
fdivp
adc
and
xchg
cmp
scas
mov
cwtl
xor
xor
ja
jbe
sub
outsl
ds
pop
mov
scas
jmp
stos
cmpb
out
push
nop
cmp
cli
mov
and
sub
xchg
or
js
enter
shrl
jo
jb
xor
aam
clc
lahf
inc
cmp
jae
in
cmp
jbe
xor
lahf
sub
lcall
pop
cwtl
mov
adc
outsl
lahf
adc
jecxz
dec
sbb
mov
test
jl
or
push
in
aam
inc
add
je
ljmp
dec
mov
fidivrs
and
not
jge
call
or
pop
pusha
or
cmc
fs
out
aaa
and
scas
cmpsb
sahf
dec
and
mov
sbb
stos
les
aaa
mov
in
lahf
divb
fisttpll
iret
int
arpl
mov
sbb
arpl
mov
pop
xchg
repz
js
ja
push
or
push
orb
dec
rorb
scas
pop
das
mov
xchg
adc
mov
xchg
shl
lret
fldt
clc
lods
lret
mov
sub
jb
or
fdivrs
test
jl
orb
pushf
iret
je
cmp
or
dec
sbb
cmp
xchg
inc
mov
jbe
ja
test
sti
outsl
pop
mov
decl
clc
arpl
jle
loope
inc
loop
cmpl
sub
dec
mov
pop
and
dec
inc
andb
jns
sub
sub
fmull
popf
and
test
sub
lcall
daa
repz
pop
mov
aad
mov
lcall
cmp
pop
imul
xchg
iret
in
xchg
fimuls
mov
lea
fmuls
call
ljmp
sub
adcb
fcompl
inc
pop
iret
xor
mov
inc
test
mov
cmp
daa
fldt
in
push
add
pop
sbb
add
xchg
out
jns
cmpsb
mov
and
mull
cmpsl
and
push
mov
sbb
pop
mov
mov
inc
xchg
xchg
shl
jae
daa
adc
inc
ret
stos
sbb
fwait
sbb
push
cltd
add
adc
and
push
xlat
push
pop
cltd
add
out
mov
pop
adc
pusha
and
sbb
pop
sti
push
lret
mov
es
xchg
int
xor
std
mov
push
nop
mov
fwait
out
or
sub
mov
dec
insl
xchg
std
pop
and
enter
mov
insb
jl,pn
cmp
sbb
mov
cmpb
push
dec
outsb
push
imul
push
leave
ret
fldt
pop
clc
repnz
and
icebp
mov
add
sbb
aaa
or
sub
lods
sar
aam
sub
pop
and
sbb
xchg
xor
leave
push
and
aas
and
jg
mov
sti
add
xor
enter
jb
inc
lea
into
imul
in
lret
shrl
movsl
aaa
clc
inc
insb
mov
movsb
mov
nop
xchg
inc
dec
adc
das
in
cmc
push
xor
push
mov
xor
imul
addr16
xchg
gs
dec
cltd
repz
call
mov
cmp
ljmp
jae
std
add
aam
addr16
pop
xchg
jno
mov
fidivs
ret
sbb
jno
lds
or
xchg
icebp
cld
add
pusha
push
in
aad
fwait
ljmp
repnz
ret
push
stos
aam
js
jge
push
xchg
dec
cwtl
jae
adc
mov
inc
imul
shrl
outsl
jbe
push
mov
adc
push
jnp
fdiv
lret
fisubs
jge
fldcw
test
ret
scas
jno
push
pop
sub
fmulp
movsb
ja
mov
xchg
push
sbbl
push
or
scas
lret
jge
cmc
jne
push
push
ds
ljmp
push
mov
sub
inc
into
rol
lcall
sbb
or
push
xchg
xchg
adc
add
cmp
scas
adc
scas
dec
or
xchg
mov
adc
xor
jl
sbb
push
adc
mov
jle
cmpsb
jmp
rorl
jns
in
icebp
fiadds
xor
dec
xchg
hlt
fs
pop
pusha
push
imul
test
addr16
ljmp
xor
fmul
and
xchg
xchg
rcll
mov
add
stos
push
cs
insl
out
cmpsb
adc
or
add
mull
mov
lds
push
in
sbb
inc
cmp
pop
addr16
testb
cmpsb
adc
pop
insb
jle
push
mov
lea
mov
insl
xor
hlt
rorb
bnd
movsb
int
pop
mull
sub
out
add
cwtl
add
pushf
cmp
cmp
and
stos
out
andb
sbb
aas
popf
jne
mov
xchg
out
stos
sub
arpl
or
mov
xchg
inc
lret
out
sub
lea
daa
sub
mov
mov
jmp
mulb
mov
dec
call
mov
retw
test
daa
or
push
jge
fcomps
and
fdivs
mov
xchg
les
inc
cmp
movsl
mov
cmp
lods
and
push
lahf
push
test
fs
cmpl
hlt
clc
loop
fidivl
inc
mov
xor
push
xchg
push
out
push
lods
loop
add
mov
dec
stc
xor
xchg
mulb
addr16
push
lret
iret
pop
cmp
aad
stos
dec
mov
lods
scas
call
or
jbe
fiadds
cmpl
and
flds
mov
mov
xor
mov
int3
or
sbb
fs
iret
xchg
or
sarl
jmp
int
das
push
mov
pop
inc
xorl
cmpsl
push
mov
xchg
sbb
iret
pop
cmp
mov
xor
std
add
jns
cmc
push
and
andb
mov
lea
sbb
sbb
cmpsl
popf
jmp
mov
mov
sti
xor
inc
imul
scas
pop
pop
xor
mov
int
scas
adc
gs
and
pushf
scas
stc
scas
inc
pop
insl
mov
outsb
push
jmp
dec
adc
jae
test
mov
fadd
jae
jecxz
outsb
fcoms
xchg
pop
xchg
mov
push
jo
mov
xor
pop
mov
stc
lods
fldt
addl
sub
jbe
das
jo
mulps
lcall
cltd
sub
mov
add
hlt
les
jmp
xchg
hlt
jp
addl
les
jb
mov
push
mov
repnz
test
add
mov
fidivl
fldcw
inc
xchg
or
inc
cs
out
inc
das
ds
inc
ficompl
and
call
xor
xor
and
jns
jnp
dec
movsb
movl
sbb
jns
or
fldt
sub
cld
push
xor
jl
cmpsb
mov
pop
lea
div
pop
sti
pop
inc
or
loop
insb
pop
and
ret
cmp
mov
lahf
push
fmull
pushf
call
sbb
aaa
push
mov
or
adc
xor
and
jnp
iret
fmull
addl
dec
mov
loope
dec
and
inc
xchg
push
or
data16
add
out
add
jmp
ret
jne
out
dec
popa
lret
jp
stos
xor
insl
rolb
jge
insb
in
inc
and
out
in
sbb
mov
pop
dec
mov
push
insb
test
in
iret
ja
stc
lret
stos
jmp
xchg
mov
aas
pushf
ljmp
dec
mov
mov
push
jl
ja
mov
loop
scas
ja
lods
loopne
jne
outsl
jp
push
or
test
mov
mov
mov
xor
mov
shll
push
hlt
dec
adcl
repnz
mov
lahf
mov
hlt
insl
mov
rcl
jge
xchg
dec
push
and
rep
add
dec
fidivs
mov
rorb
push
push
sbb
and
imul
pop
sub
aaa
add
pop
xor
push
scas
pop
dec
int3
push
mov
lahf
sbb
adc
test
je
ljmp
jo
jno
add
lret
aam
inc
inc
xor
movsl
std
jo
sub
mov
in
inc
adc
lea
loop
lock
enter
mov
cmp
cmp
add
mov
xchg
ficompl
dec
xchg
mov
adc
cld
clc
dec
int3
sub
or
jns
and
xor
pop
insb
mov
sbb
or
xor
insb
paddd
xchg
ljmp
mov
pop
cmpsb
jmp
pop
or
and
cmp
add
gs
mov
pop
fadds
mov
mov
ret
sub
jb
lret
mov
cmc
or
add
lea
ret
aas
outsl
test
popa
push
gs
pop
or
stc
pop
mull
mov
test
int
ret
mov
insl
hlt
inc
lret
addr16
push
mov
sbb
cli
es
cmp
dec
or
push
aaa
sbb
rorl
mov
lock
push
lods
pop
dec
je
adc
push
mov
sbb
pushf
xchg
jo
sti
dec
mov
lcall
int3
or
or
mov
cwtl
pop
out
pushf
push
adcl
dec
loop
xor
rcll
mov
popa
pop
pop
lahf
pop
cmp
aad
xchg
daa
mov
ss
out
nop
jne
jl
mov
or
or
repnz
loop
jg
insl
xchg
movsl
mull
incl
cmp
sarb
sub
xchg
ret
pop
sub
mov
inc
cmpsl
ret
enter
mov
push
jecxz
and
mov
xor
mov
lcall
incb
push
sar
mov
cmp
mov
xchg
lods
xor
das
repz
sub
sahf
into
test
add
jb
sbb
cltd
test
lret
movsl
pop
xor
mov
dec
jle
xor
sub
loop
leave
in
fdivs
sbb
cmpsb
pop
adc
sub
adc
mov
or
mov
repnz
pop
mov
inc
insl
inc
sbb
lods
mov
mov
mov
jle
mov
repz
xchg
add
inc
je
push
popf
inc
xchg
jnp
cmpsl
add
xchg
mov
test
sbb
add
iret
idivb
movsl
cmp
mov
fs
sub
mov
hlt
xchg
mov
enter
aaa
es
lds
imulb
insl
push
add
push
xor
out
mov
xor
inc
bound
xor
sbb
xchg
push
jge
push
fimull
mov
test
ret
add
xchg
cmp
cli
pusha
and
popf
mov
jl
jge
imull
and
clts
xchg
add
pusha
mov
std
xchg
ljmp
xchg
aas
scas
mov
lret
scas
xchg
pop
stos
jo
enter
enter
pop
and
inc
mov
pusha
fnsave
fcompl
imul
cmp
lretw
add
pop
in
mov
or
sub
add
pop
or
movsb
push
imul
mov
cmp
mov
fcomp
stos
xor
dec
test
cli
mov
push
mov
xchg
pop
iret
push
cmp
pop
addb
test
push
cmpb
fsubrl
jmp
mov
lock
push
xlat
rcrl
pop
ljmp
sub
scas
js
add
filds
adc
rep
sti
mov
int
sbb
das
mov
dec
repnz
mov
jns
aaa
adc
cli
mov
cmc
push
push
jecxz
or
sahf
rcl
pop
sub
les
fsubrp
mov
shlb
loop
mov
dec
cli
ret
adc
mov
movsl
mov
ds
in
cli
pop
adc
pop
mov
fs
iret
dec
movsl
sub
mov
pop
xchg
jb
inc
jge
std
and
jl
add
cmp
fwait
mov
les
fcmovb
xchg
fsub
sub
sti
jle
bound
and
repz
adcb
sub
sbb
dec
mov
leave
adc
push
loope
fsubl
mov
sub
pop
rcrb
cmpsl
mov
jmp
cltd
cmpsl
insb
add
dec
xchg
insl
outsb
inc
jb
jo
add
sub
and
and
nop
jns
pop
pop
inc
mov
data16
andl
push
mov
popa
fdivrl
mov
push
push
sbb
jmp
in
push
dec
mov
pop
mov
or
insl
ljmp
add
cltd
sbb
xchg
cmpsb
and
push
adc
leave
in
popa
test
sbb
mov
iret
xchg
lods
aam
inc
jl
rcll
test
jbe
pop
or
aaa
lea
movsl
xchg
jge
int3
sub
jo
inc
add
aaa
dec
pop
sub
cmp
or
loop
push
jl
js
xor
clc
loope
fsts
test
cmp
and
stos
or
lret
leave
cmovae
fnstenv
das
push
int3
movsl
sbbb
inc
add
push
fyl2xp1
mov
loope
or
icebp
xchg
and
jge
jg
mov
or
rorb
adc
push
jl
dec
aam
dec
push
ret
clc
push
mov
adc
xchg
xchg
xchg
stc
ljmp
mov
jl
inc
or
add
fcoms
insb
je
mov
lea
mov
movsb
lods
cmc
lret
cmp
jle
mov
aad
shrb
movsb
mov
jl
mov
push
cs
pop
gs
outsb
mov
ds
sub
sub
rclb
cmc
lea
adc
mov
sbb
ds
ja
cmp
imul
in
pusha
dec
sbb
jb,pt
fstpl
sahf
loope
xor
sub
lret
dec
gs
cmp
sbb
outsb
mov
popf
xchg
mov
jb
rorb
das
and
jp
addb
jne
dec
bound
push
mov
pop
cwtl
add
movsb
arpl
fucom
xor
mov
xlat
jecxz
out
ret
ds
cmp
xchg
or
mov
stos
pop
fbld
mov
jmp
inc
mov
jge
cwtl
test
iret
leave
adc
roll
aad
mov
stos
mov
lcall
and
xor
xchg
lea
pop
aaa
xchg
pop
mov
push
mov
movsl
sub
jge
cmp
in
inc
dec
add
cmp
je
out
xor
add
fnstcw
mov
je
mov
out
daa
lcall
and
test
fidivs
in
jg
adc
dec
or
jbe
pop
mov
xchg
mov
test
call
pop
les
mov
shrl
addl
iret
xchg
push
outsb
movsl
mov
fs
js
dec
mov
xchg
fistl
shll
sbb
mov
jp
sahf
xor
int
dec
sahf
fwait
jp
test
pop
sbb
hlt
out
mov
jp
pusha
int3
xor
jp
outsb
lods
xchg
movsl
sbb
push
push
outsl
adc
aaa
int
outsl
sahf
in
andb
es
sub
insb
inc
mov
push
pop
sbb
xchg
or
add
adc
add
mov
add
mov
scas
out
divl
pusha
adcl
leave
inc
and
xor
lea
cs
cltd
pusha
or
xchg
pop
ljmp
out
js
mov
or
shr
jl
cltd
inc
lcall
sbb
outsl
out
lret
aaa
push
and
stos
mov
dec
gs
push
mov
lock
gs
sbb
ret
jle
push
ficoms
test
es
and
pop
out
mov
or
mov
mov
jmp
mov
scas
stos
inc
ret
xchg
add
sub
aam
push
adc
movsl
test
cmp
adc
inc
rolb
mov
pop
jg
mov
and
sub
das
mov
adc
fsts
fwait
inc
sbb
nopl
imul
push
sbb
mov
aaa
int
adc
repz
jo
in
sti
cmc
jl
sbb
test
add
jl
outsl
addr16
int3
dec
loope
jl
jno
jno
js
adc
es
mov
or
in
lea
ljmp
mov
mov
fnstcw
sub
push
push
and
out
repnz
and
jle
les
adc
add
cmp
cld
mov
xchg
jae
jne
cmp
bound
loop
cld
in
dec
int3
inc
push
mov
jle
cmpsb
orl
scas
cmpsl
mov
mov
mov
stos
fwait
sbb
test
adc
xchg
sbb
pop
pop
push
jecxz
clc
mov
inc
sbb
or
dec
inc
xor
cmp
push
mov
mov
and
jecxz
push
push
cmp
mov
mov
cltd
and
je
push
mov
mov
int
adc
sub
mov
aam
jns
addr16
imul
cmp
lret
mov
call
shll
mov
leave
test
ss
loopne
jns
cmp
inc
repnz
sbb
iret
pop
jg
mov
pop
movhps
or
lock
lcall
mulb
jle
xchg
cmp
dec
add
xchg
scas
mov
fdivrs
loop
jbe
loopne
mov
sahf
hlt
clc
lahf
xor
pop
sub
xlat
stos
mov
dec
xchg
and
add
imul
loopne
or
into
rolb
aaa
test
fs
mov
xor
lock
push
dec
mov
jmp
inc
adcb
mov
cmp
repz
lret
pop
arpl
flds
pop
mov
pop
stc
js
mov
mov
add
inc
cli
jecxz
dec
or
or
dec
or
int3
insl
negb
push
push
xchg
jno
xor
sub
inc
ja
sbb
xchg
fidivl
scas
fnstenv
mov
mov
je
sarb
xchg
xor
mov
jmp
or
push
add
insl
sub
jl
cmp
inc
fisttps
pushf
cmp
lret
leave
lret
stos
repz
cli
mov
mov
aas
ljmp
adc
adc
pop
jnp
pop
mov
outsb
inc
xchg
aam
iret
int
test
cmp
fwait
or
stos
leave
add
dec
push
pop
jno
xor
mov
mov
push
cmc
leave
mov
aaa
cmp
rol
jmp
jo
xchg
adc
lcall
int
xchg
xorb
insb
je
xchg
fwait
cs
push
xlat
or
lahf
jecxz
fs
or
sub
mov
ds
aam
mov
inc
ljmp
lret
inc
mov
push
dec
rcrb
inc
sub
mov
push
or
push
scas
xchg
mov
cld
dec
or
and
inc
pop
xor
icebp
in
mov
jl
or
fldl
shr
nop
repz
leave
cs
ret
add
icebp
xor
into
and
push
or
add
mov
mov
int3
ds
push
daa
test
sbb
fdivl
outsl
sbb
jo
sub
add
jnp
jnp
push
sub
shlb
stos
and
and
test
cmpsl
and
das
icebp
jo
pop
das
scas
fwait
in
cmp
subb
popf
lret
pop
popa
xchg
xor
fld
mov
lods
jae
xor
insl
inc
shll
ret
cmp
add
xchg
pop
jns
sbb
pop
inc
jmp
jle
adc
js
jb
out
fs
jnp
jae
dec
insb
adc
add
sbb
xchg
sti
je
mov
jae
sub
jmp
or
pop
pop
flds
or
gs
int
inc
clc
pushf
incb
das
arpl
jo
fwait
sbb
shlb
cli
mov
adc
dec
sbb
and
in
jbe
mov
cmp
scas
add
adc
popa
sbb
xor
sbb
adc
inc
clc
sarl
mov
adc
icebp
int
daa
fsubrs
push
cwtl
outsb
mov
xchg
or
sbb
ret
xchg
fidivs
jbe
and
and
fimull
sub
cli
test
nop
mov
cmpsl
mov
sbb
jns
push
lds
inc
divl
sub
std
stos
adc
daa
pop
and
pop
or
mov
mov
rcrb
xadd
add
cmp
fistl
jns
ljmp
arpl
jbe
mov
mov
pop
inc
mov
or
dec
jecxz
mov
mov
cld
inc
sbb
add
fisttpl
aas
das
shufps
cld
sbbl
enter
dec
push
lahf
popf
mov
popa
imul
rcrl
push
xchg
das
out
xchg
mov
mov
subb
push
mov
pop
push
cmc
les
push
or
bound
dec
push
lcall
mov
insl
loop
dec
pop
outsl
push
mov
pushf
mov
pushf
cwtl
inc
inc
rolb
cmp
mov
jbe
rol
int3
fwait
and
insl
imulb
fnstsw
insl
jp
int
lret
dec
pop
test
xchg
movsl
push
add
dec
popf
adc
inc
lods
ss
xor
mov
mov
mov
add
fwait
outsl
xchg
push
inc
daa
mov
sbb
mov
xor
mov
stc
sahf
mov
cltd
ljmp
test
push
pop
pusha
inc
mov
movl
dec
xor
mov
mov
xchg
lahf
imul
loop
xchg
nop
sbb
or
xor
test
cltd
sti
cmpsb
xlat
cmpsb
hlt
push
out
mov
inc
shr
div
xor
cmp
push
cmp
or
shll
lods
xchg
and
pop
mov
sub
loopne
movq
scas
fdivrs
outsl
xchg
jnp
jp
mov
test
repnz
sub
adc
sub
mov
gs
adc
dec
addb
mov
and
ret
les
inc
cmp
loope
and
mov
xor
cld
dec
lret
cmp
and
iret
dec
outsb
inc
cmp
push
cmp
cld
repz
adc
dec
xor
sub
cwtl
clc
je
cltd
iret
stos
repz
outsl
jno
or
add
dec
in
sub
mov
add
and
sub
sub
cmp
xchg
xorb
mov
ret
mov
je
xor
cmp
mov
insl
or
jns
lock
in
cmp
ret
and
insb
inc
xchg
push
xchg
pop
inc
sub
pop
sub
insl
ljmp
clc
push
iret
xor
ss
aas
dec
pop
loop
jge
mov
in
mov
pushw
sar
out
push
lock
push
addr16
dec
icebp
out
mov
call
add
pop
pop
dec
adc
popa
cmp
inc
aaa
fsubrl
lcall
xchg
mov
xor
mov
jo
sbb
cltd
mov
clc
popa
inc
call
adc
sub
andl
popf
clc
fnsave
fs
arpl
mull
std
das
xor
adc
test
mov
testl
xor
cmp
orb
push
mov
jge
or
pop
xor
test
sub
jle
idivl
xchg
sub
stos
dec
loope
les
scas
xor
cwtl
pop
pop
mov
imul
pop
inc
lea
push
test
jnp
or
jne
xor
mov
xor
sbb
mov
mov
add
adc
loopne
es
in
mov
xor
adc
jle
js
nop
fs
sub
subl
cmc
es
dec
lods
dec
je
rcrl
lea
push
call
pop
mov
mov
adc
dec
pushf
and
jecxz
inc
fnsave
xor
ljmp
adc
sbb
and
lods
inc
lret
sub
fsubr
mov
ja
inc
std
adc
cmp
mov
in
push
dec
test
ret
cmpsl
mov
inc
std
adc
xchg
jns
sub
fcom
popf
mov
xchg
push
addb
in
cmp
cltd
jbe
pop
js
or
push
mov
cwtl
insb
test
insl
dec
loop
ret
inc
ja,pn
xlat
inc
subl
add
cmp
add
out
jmp
add
push
xor
add
pop
sbb
jecxz
out
jns
xchg
cs
int3
sub
push
cmp
adc
jns
mov
mov
push
inc
cwtl
add
enter
cmp
lock
jl
iret
fstpl
cld
sub
test
fs
jmp
and
jnp
movsl
stos
adc
fstps
jbe
cmpsl
fsubrl
aaa
in
push
xorb
and
sahf
lods
or
sbb
shlb
test
inc
cwtl
push
dec
pop
xlat
lds
in
int
dec
sub
imul
sahf
adc
cmc
mov
out
out
mov
imul
popa
add
mov
aaa
inc
in
cli
jne
mov
fs
clc
and
mov
xchg
out
adc
push
popa
fisubrl
sub
jmp
cltd
sub
pop
jnp
pop
mov
pop
add
pop
lret
js
popf
cltd
lods
dec
cmp
or
adc
fucompp
mov
aam
dec
xchg
cmpsl
mov
dec
xchg
push
fidivl
xchg
addr16
call
pop
cmpsl
and
mov
js
mov
pop
pop
mov
add
mov
bound
sub
xor
cwtl
inc
stos
xchg
inc
in
xchg
scas
push
dec
inc
lea
adc
and
push
jo
pop
mov
or
lds
mov
jb
imul
or
pop
int3
std
dec
popa
push
mov
aaa
mov
mov
push
jae
nop
mov
stos
stos
in
pusha
xor
jne
jns
mov
mov
movsb
or
hlt
rorb
inc
xor
in
sbb
out
loopne
incb
pop
push
xchg
stos
fisttpl
pop
fimuls
shlw
es
mov
or
lds
andl
lea
rol
sub
pop
lods
shrl
cltd
adc
stc
negl
mov
test
std
in
and
cmpsb
iret
pop
mov
pop
mov
frstor
mov
xchg
pop
es
sub
sub
sahf
push
sub
and
push
scas
inc
aaa
lods
cld
mov
out
stos
stc
sbb
push
in
jo
cmp
pop
add
push
outsl
ficomps
int
mov
fmull
pop
cmc
sbb
pop
adc
inc
jmp
sbb
inc
aas
sub
pushf
add
xchg
sbb
mov
mov
jnp
jae
aaa
bound
fdivrs
sbb
mov
mov
inc
cld
inc
dec
in
stos
dec
adc
fidivs
push
hlt
dec
pop
testb
and
jecxz
push
faddl
and
sbb
fcoml
add
sub
sbb
addb
das
hlt
imul
dec
cmp
insb
cltd
add
insl
andl
mov
stos
cli
or
rcrb
fisttpl
into
inc
in
aam
leave
shr
sbb
cmp
jecxz
in
adcb
pop
outsl
dec
mov
scas
int
jb
in
pop
imul
mov
test
mov
sub
mov
xchg
out
jl
dec
jmp
lret
in
xor
mov
fs
insl
scas
rol
jbe
cwtl
push
mov
ret
dec
add
imul
stc
adc
and
jl
fbstp
fwait
or
pop
mov
scas
pusha
es
int3
sub
push
popa
inc
hlt
jl
jle
xor
mov
pop
lahf
add
inc
inc
or
mov
and
add
shlb
push
sbb
push
mov
mov
xchg
sbb
mov
sub
rolb
lret
and
aaa
lods
jnp
pop
cli
pusha
fwait
incb
lods
inc
sbb
lahf
inc
out
cmp
mov
cltd
sub
add
add
sub
fstl
cmpsb
xor
cmpb
test
enter
ret
mov
es
push
jge
mov
and
xchg
mov
jmp
mov
dec
movsl
jmp
dec
aam
inc
push
scas
stos
inc
push
icebp
enter
nop
or
int
outsl
mov
pop
test
cli
or
fadd
sbb
add
mov
cmp
xor
lcall
out
lahf
ja
pusha
fwait
sahf
xchg
cmc
loop
adc
add
in
and
push
inc
ds
test
pop
sub
inc
cmp
scas
adc
ffreep
inc
xorl
shrl
rep
sub
mov
inc
push
stos
shrb
inc
jge,pn
out
pop
add
rorb
cmpsl
dec
test
add
sub
aad
push
xchg
loopne
dec
cli
push
sbbb
pand
mov
pushf
mov
addr16
popf
cmc
mov
repnz
dec
push
out
popf
cmp
push
jmp
pop
mov
xor
pop
repz
and
lret
xchg
sbb
es
outsl
sti
dec
stos
pusha
pop
jb
jmp
scas
frstor
push
lock
jp
fidivs
scas
xchg
mov
lock
push
pushf
aas
jl
push
sbb
icebp
sub
jb
jecxz
add
inc
rolb
add
mov
push
stos
into
mov
cli
jge
jl
xchg
lods
lcall
push
add
lea
push
sub
ret
push
jo
mov
mov
or
mov
ja
pushf
xor
sub
mov
or
inc
repnz
jb
push
adc
pop
dec
mov
or
in
out
mov
stos
mov
cmp
jae
jne
in
or
pushf
rclb
xchg
push
add
adc
jns
add
roll
sub
jecxz
xor
dec
and
cwtl
in
data16
adc
add
mov
sub
pop
inc
jbe
sub
and
nop
lahf
mov
aad
add
mov
push
les
dec
push
mov
push
dec
push
adc
sub
fs
mov
xor
jl
rcrb
movsl
sub
and
cwtl
cmp
daa
or
or
out
push
negb
push
repnz
xlat
cs
lods
xchg
gs
lret
sbb
loop
mov
ja
jle
xor
cld
repnz
xchg
sahf
ja
nop
xor
adc
jns
call
cmp
shrl
insl
clc
cltd
stos
xchg
call
pop
idivb
bound
add
inc
sub
popf
xor
repnz
xor
jo
pop
push
pushf
ret
or
jmp
rcrb
les
cmp
jge
imul
inc
lahf
pushf
or
arpl
cs
pop
shrl
mov
lcall
mov
subl
fwait
lods
or
daa
mov
ja
test
adc
mov
out
notl
movsb
repz
pop
dec
inc
fdivr
add
push
mov
push
lods
call
jge
hlt
xlat
or
dec
sbb
adc
arpl
xchg
out
sarb
sub
test
int
add
out
fs
clc
dec
jge
or
xchg
or
cltd
pop
adc
cli
ljmp
fadds
push
cwtl
adc
shl
sarb
mov
push
out
in
jnp
mov
add
push
jp
test
jno
inc
jge
je
mov
fstps
pop
lahf
push
xchg
inc
bound
std
lock
xchg
imul
hlt
sarb
pop
and
inc
imul
mov
inc
sub
add
push
inc
mov
add
mov
das
cld
aas
lahf
xor
mov
inc
jno
lcall
xor
jns
sbb
inc
and
mov
aad
sub
adc
jl
and
mov
lea
xchg
leave
jo
dec
adc
negb
jge
pop
cltd
mov
mov
dec
mov
jnp
popa
ss
or
andl
daa
cli
mov
push
inc
pop
sub
and
lret
inc
jns
test
mov
dec
mov
scas
mov
fmuls
jno
into
scas
shld
push
fsub
stos
jmp
sbb
cltd
aas
int
dec
dec
push
adc
cmp
and
shll
add
sti
out
in
jl
jmp
pop
out
aad
jecxz
in
jge
mov
mov
bound
iret
xor
cltd
mov
mov
push
scas
out
stos
pop
mov
ret
lods
jb
inc
mov
or
lea
cmp
pop
sarl
mov
shr
ja
pop
sub
xchg
jmp
push
loop
cmp
lret
scas
andb
rolb
rorl
and
sbb
and
mov
or
xchg
fildll
stos
xor
adc
xor
leave
lret
popf
pop
lahf
add
inc
out
iret
aas
xchg
adc
push
add
xchg
movsl
sarb
mov
fisttps
in
pop
ror
inc
or
inc
in
and
push
or
sbb
sub
mov
cmpsl
and
cli
jmp
inc
or
icebp
or
imul
faddl
and
pop
sbb
mov
ds
jnp
jns
add
das
xchg
push
pop
into
sbb
into
mov
faddl
aas
mov
loope
push
test
mov
pop
fwait
hlt
jno
cmp
and
cmp
cmpsl
out
xchg
pop
add
aam
xchg
sahf
push
sub
outsb
lea
or
xor
push
inc
loop
ret
pop
filds
imul
or
jnp
sub
icebp
mov
xchg
sarb
cmp
jns
push
mov
sarb
outsb
popf
push
lods
push
mov
std
lea
jno
icebp
insl
addl
mov
shl
shl
dec
inc
jns
inc
je
test
fisubrl
inc
es
xchg
shlb
mov
pusha
imul
pop
jge
loop
test
hlt
imulb
fisubrl
test
leave
cld
repz
jecxz
fcompl
cmp
or
fisubs
and
enter
es
cmp
push
fisubl
daa
pop
rcl
mov
jne
std
push
sbb
hlt
outsl
in
mov
dec
xchg
loope
sub
push
mov
xor
inc
pop
sbb
daa
test
sbb
push
int
clc
jno
sub
cltd
jg
fdivrs
test
int3
mov
dec
jbe
cmpb
xchg
shll
sub
jle
loopne
cmpb
lods
lock
rorb
popa
mov
xor
push
sbb
inc
in
dec
cmp
push
and
ret
and
out
and
dec
popw
sbb
jmp
scas
mov
sub
jne
sbbl
into
adc
dec
mov
outsl
jo
shrl
xor
jne
and
adc
in
lcall
fbstp
sub
dec
sub
sbb
xor
popa
lds
cwtl
lahf
cli
cmp
movsl
out
jecxz
lods
pop
xor
sti
ffree
xchg
scas
popf
pop
out
aam
add
sub
adc
jmp
imul
push
jns
js
xchg
adc
jge
imul
fcoml
sbb
sahf
xchg
mov
movsb
arpl
mov
pop
sahf
aas
daa
adc
dec
std
adc
adc
xchg
mov
xlat
fadds
scas
bound
call
loope
out
bswap
mov
add
jecxz
sbb
subb
shl
dec
push
jecxz
inc
jmp
xchg
xchg
cs
push
sub
sub
aaa
out
dec
cmp
xor
cmp
cmc
out
aas
inc
pop
in
xchg
call
mov
das
idiv
sbb
push
mov
adc
call
push
inc
daa
sub
test
daa
mov
aaa
sub
jne
and
and
in
cmp
dec
cs
les
scas
inc
outsb
push
xor
movsl
inc
mov
push
jne
pop
int
test
push
loopne
loope
out
mov
lods
xor
mov
sti
push
insl
rorl
dec
out
sahf
mov
pusha
out
stos
sub
push
lods
bswap
cmp
pusha
imul
sarb
pop
xor
imul
sub
mov
and
lret
in
mov
inc
adc
inc
clc
cld
dec
arpl
push
adc
xor
and
notb
xor
fwait
mov
cwtl
mov
mov
or
bound
mov
mov
ljmp
popa
add
cmp
out
inc
mov
ds
mov
xchg
cmp
inc
clc
dec
jg
sarl
orb
cmp
add
jp
in
test
shll
and
rolb
popf
les
clc
mov
sub
push
popa
xchg
adc
clc
into
inc
pop
pop
lea
mov
jnp
mov
iret
pushf
pushf
ret
sub
inc
pop
pop
mov
adc
imul
fildll
xchg
xchg
call
pop
dec
pop
push
push
mov
or
add
scas
iret
imul
movsl
scas
stc
aam
mov
dec
mov
pop
cld
out
sub
loope
mov
xor
mov
xchg
sahf
mov
cwtl
aaa
mov
fcoml
and
lds
dec
push
add
ficomps
or
js
sub
xchg
test
inc
inc
adc
leave
call
in
cmp
jbe
outsb
inc
jne
pushf
pop
pop
aam
xchg
lret
add
adc
stc
aas
fimull
add
jno
pop
xor
mov
lahf
mov
dec
sub
out
repz
or
insb
mov
ljmp
repnz
mul
ret
xchg
pop
stos
cltd
adc
jnp
fistl
mov
mov
les
xchg
fwait
dec
push
pop
test
push
mov
sub
sbb
dec
rorb
pop
fisubl
gs
call
push
add
push
or
aam
cmp
ja
push
bnd
or
mov
cltd
mov
ljmp
add
sub
into
adc
inc
inc
sti
aad
fidivrs
filds
lret
or
cltd
mov
aaa
xchg
test
add
out
sbb
test
shl
in
xor
movsb
sub
popa
mov
sub
inc
test
clc
pop
or
adc
enter
lret
hlt
cmp
dec
jnp
arpl
mov
ss
push
out
pop
addr16
cmp
stos
mov
cmp
and
jae
xchg
xchg
xor
xor
inc
pop
aas
int3
cmpsl
xchg
into
pop
or
pushf
jae
or
outsl
movsl
or
sarl
jg
outsl
insb
sub
push
rcl
lds
sbb
cld
lock
ljmp
dec
mov
xchg
xor
nop
inc
ret
popf
aad
int3
xor
mov
test
setnp
dec
lcall
inc
out
call
mov
cmp
hlt
sub
xor
lret
dec
fistps
out
xchg
jbe
loope
xchg
loopne
movsl
pop
and
mov
sarl
js
sub
xchg
lods
fnstenv
mov
add
sbb
pop
sbb
push
inc
jb
dec
fstp
ret
xchg
outsl
xchg
lcall
out
sbb
pop
jle
enter
fcompl
and
push
mov
ja
notb
xchg
cmp
push
int
pop
addb
jns
jecxz
add
sbb
shlb
jns
mov
jae
mov
pop
and
lret
icebp
pop
mov
aas
leave
jmp
call
pop
std
mov
lds
dec
cmp
popf
pusha
gs
cmp
gs
inc
lds
loop
push
test
js
jl
shll
jo
cwtl
ret
cwtl
test
and
cmp
push
aam
daa
out
aaa
icebp
mull
cmp
mov
xor
jne,pt
and
pop
xor
push
inc
repnz
xchg
push
xchg
ss
aaa
mov
sbb
mov
xor
jp
inc
repz
xchg
sbbb
sti
and
add
testl
mov
dec
dec
cwtl
cmp
cmp
push
xor
es
enter
shrb
movsb
mov
push
je
iret
roll
scas
test
adc
mov
xchg
mov
dec
test
pop
leave
ficompl
and
loopne
in
ja
fsubl
dec
imul
push
sahf
lahf
xor
jl
push
rcrl
adc
leave
insl
pop
lods
outsb
jne
in
stc
cli
ret
sbb
xor
les
and
mov
in
lods
fbstp
xchg
daa
scas
fcompl
adc
or
andl
sbb
adc
inc
mov
mov
xchg
push
std
scas
push
test
xchg
push
test
jno
je
pop
jns
daa
repz
add
leave
add
stos
addr16
loopne
inc
cli
stc
cmp
dec
es
pop
push
dec
inc
jno
xchg
rcrl
jo
pop
pop
push
adc
stc
roll
mov
fldenv
or
sub
lds
xchg
and
and
cmc
leave
xor
adc
fwait
dec
mov
adc
jmp
adc
or
ds
dec
inc
dec
jne
test
cmc
mov
or
push
cmp
xchg
imul
push
push
addr16
and
xchg
scas
mov
cld
jbe
pop
xor
pushf
inc
mov
mov
insb
inc
call
les
sahf
jle
cmp
mov
mov
mov
in
jno
or
inc
jecxz
inc
and
push
sbb
rolb
movb
mov
andb
push
movsl
sahf
jns
outsl
push
push
cmpsl
ljmp
jle
imul
push
xchg
mov
aas
addr16
addr16
sub
push
les
lods
out
insl
and
mov
adc
cwtl
inc
dec
push
jle
cmp
popf
or
and
pop
or
dec
insb
mov
dec
mov
adc
cmpsl
lods
fs
or
clc
je
loope
pop
jmp
or
adcb
into
pop
pop
jne
lret
movsl
add
xchg
mov
hlt
cmp
cmp
add
jmp
jp
sub
lret
enter
mov
fsubr
add
cmp
and
loopne
adc
add
xchg
mov
xor
jp
lea
test
decb
pop
mov
pop
mov
mov
mulb
adc
sarl
ss
mov
jecxz
lahf
sbb
jnp,pn
leave
cli
xlat
jmp
sti
popa
or
jp
popa
add
fildl
xor
aas
cwtl
fs
pop
jno
cwtl
ret
push
mov
movsl
add
scas
aad
loop
mov
sarb
mov
or
mov
mov
repnz
jb
pop
jecxz
jne
or
sub
cmp
rcrb
mov
inc
sti
and
cmp
adc
call
test
dec
jg
sub
leave
aad
das
repz
loope
xchg
cmp
mov
sub
inc
push
xchg
outsl
push
push
imul
in
lahf
adcl
push
div
mov
jge
popa
movsl
arpl
filds
mov
pop
and
ficoml
mov
push
mov
loopne
insb
scas
test
out
stc
dec
inc
xchg
or
mov
add
and
stc
or
movsb
imul
xlat
fiaddl
dec
shlb
cmp
scas
leave
fwait
add
sbb
lcall
mov
jg
arpl
psubusb
inc
mov
outsl
sbb
aaa
in
xlat
xchg
pop
hlt
sbb
adc
sbb
mov
cmp
xor
imul
mov
inc
add
sub
xchg
jne
dec
in
cmp
dec
lea
cmp
adc
xchg
andl
mov
stos
fs
lcall
repnz
pusha
mov
xlat
cmpsl
dec
mov
pop
lods
shlb
out
nop
cwtl
inc
pminub
pusha
repz
lock
push
jge
sub
daa
adc
xchg
popa
mov
add
xchg
nop
push
fdiv
sub
adc
icebp
pushf
sub
mov
mov
inc
in
js
popl
cs
shlb
aas
push
dec
cmc
pusha
push
jae
jb
xor
incl
icebp
nop
push
rorl
adc
jecxz
pop
ljmp
daa
xor
sub
sbb
std
sbbl
popf
jp
loop
dec
test
sbb
dec
lret
movntq
out
out
sahf
cld
pop
int
mov
pop
int
fcoml
cmp
in
test
xlat
push
cmpsl
pop
push
stc
rorb
addr16
push
repz
add
mov
into
sbb
imul
scas
stc
xor
add
scas
insb
pop
out
or
jb
and
ficompl
dec
lds
mov
stc
rorb
nop
mov
vmulpd
stos
dec
dec
lcall
inc
ficoms
cwtl
lret
das
pop
inc
repnz
sub
sub
cmp
in
push
test
cli
rcr
out
subb
jg
rcl
repnz
sbb
sti
lahf
jo
leave
je
fsubl
dec
sub
mov
jne
add
inc
gs
jns
rcll
cmp
sub
or
ret
insb
push
lret
and
aad
pop
mov
mov
arpl
mov
xor
push
inc
roll
test
popf
scas
movsb
idivb
bound
fcmovbe
push
xlat
lret
fstpl
jg
test
pop
or
negb
and
xor
push
mulb
pop
bound
sub
jo
fdivr
mov
nop
mov
cld
mov
xchg
out
ds
test
adc
nop
mov
xchg
imul
add
sub
xorb
bound
fmull
mov
and
sbb
jl
xchg
scas
filds
jge
and
jmp
xchg
xor
xchg
sub
cs
xor
jge
jl
inc
xor
rorl
das
stc
sub
or
jnp
std
jmp
dec
pusha
gs
mov
mov
cmpsb
mov
sub
scas
sar
and
sub
xor
inc
jo
jne
pushf
xchg
dec
and
repnz
push
movsl
dec
pop
or
in
leave
add
insl
mov
dec
add
wbinvd
repnz
push
mov
ljmp
cmp
xlat
sbb
mov
scas
leave
fstpl
xor
incl
outsb
aas
xor
lret
pop
mov
xchg
movsb
pop
pop
mov
fnstenv
adc
pushf
fdivl
sti
aaa
xor
sub
add
sbb
xchg
jbe
adc
or
in
imul
ficompl
test
hlt
mov
out
and
jmp
add
shl
cmp
dec
mov
jmp
das
pop
ret
fwait
lds
pushf
icebp
adc
movsb
sbb
add
jg
dec
xchg
scas
pop
gs
fildll
rcll
push
aaa
jl
mov
scas
mov
add
cmp
fwait
jg
cmpsb
adc
xor
outsb
fwait
sbb
scas
fwait
push
xlat
fsubrs
inc
push
shlb
sub
xchg
or
cmp
mov
and
rorb
xor
sbb
inc
mov
cmp
cmp
cmpsb
popf
adc
push
addr16
push
or
in
into
rolb
pop
xor
adc
movsl
aam
mov
jns
dec
testb
scas
sub
andl
add
cmp
test
leave
sahf
lds
negb
std
adcb
dec
cmpsb
pop
sahf
cmp
cli
out
mov
shlb
aaa
sub
loope
in
xchg
mov
and
std
imul
gs
cld
movsb
or
sub
rcrb
dec
push
adc
mov
adc
sub
push
xchg
cmpb
sub
loop
lret
test
xor
adc
pushf
test
adc
xchg
cmc
gs
std
xchg
ss
xchg
pop
arpl
addr16
push
lock
scas
sub
mov
mov
jge
in
jb
xor
lret
insb
cmpb
jmp
sub
xchg
cmp
push
js
jge
dec
fistps
and
and
dec
mov
insl
rolb
aas
xchg
mov
adc
scas
inc
xchg
ds
fcompl
or
cmpl
stos
dec
mov
stos
jg
cmc
stos
xor
inc
lret
scas
pushf
push
push
or
push
inc
jns
leave
sbb
lret
mov
aas
inc
dec
mov
adc
adc
mov
pop
jle
pop
fsts
movsb
stos
inc
hlt
fsin
arpl
int3
sbb
popf
or
adc
fiaddl
cmp
xor
lea
mov
mov
jle
stc
and
lock
cmpsl
mov
iret
mov
cs
xor
into
push
jl
std
orb
sbb
hlt
push
fwait
push
jns
and
popa
cmpsb
mov
sahf
xchg
sub
call
or
std
sbbb
ja
mov
push
push
xchg
mov
mov
push
out
fisubrs
mov
or
mov
jmp
shl
push
sbb
scas
hlt
adc
sub
in
xchg
xchg
inc
jno
faddp
inc
xchg
aas
mov
dec
negl
jnp
adc
or
xchg
fdiv
add
stos
cltd
xchg
mov
mov
and
add
lret
insl
and
push
mov
lds
cltd
and
loop
outsb
and
nop
loopne
sub
testl
xchg
jle
mov
mov
dec
cmp
mov
insb
dec
in
shlb
shlb
out
jnp
leave
sbb
out
arpl
push
mov
popa
iret
stos
mov
pushf
dec
pop
leave
cwtl
adc
push
sub
cmp
cmp
insb
sbb
jnp
push
loopne
or
jge
mov
pop
xlat
mov
mov
and
or
sub
mov
jo
pop
roll
xchg
inc
das
repz
mov
fcmovb
addr16
push
pop
cwtl
jae
fsubs
sbb
mov
xchg
cwtl
jge
and
sahf
xchg
sbb
sbb
popa
ss
cmp
in
mov
push
addr16
lock
and
sub
mov
movsb
push
inc
mov
and
and
mov
sahf
jmp
jl
mov
push
dec
lds
mov
sbb
jl
je
in
lahf
jmp
data16
sbb
or
dec
sbb
push
xchg
adc
xchg
imul
and
cmc
mov
pop
mov
add
lret
int3
movsb
pop
inc
jo
add
jns
pop
mov
push
sbb
inc
das
hlt
sub
inc
or
call
shll
push
and
mov
cmpl
sub
pop
test
cs
sbb
les
mov
inc
add
pusha
pop
repz
dec
fcmovnb
pop
push
mov
imul
mov
mov
int3
fsubl
js
mov
popf
std
add
mov
push
add
cmpsl
std
dec
pop
rclb
adc
lds
sub
lahf
push
lea
cmpsb
mov
loope
xor
in
jg
mov
cmc
push
or
lds
pop
lods
gs
push
sub
arpl
ljmp
les
insb
aaa
xor
pop
cmp
dec
adc
mov
fidivrs
pop
xchg
fmuls
shlb
dec
and
jae
inc
ffreep
gs
cmp
push
fucomip
lcall
xchg
cmc
dec
xor
je
push
mov
popw
imul
sbb
or
inc
jnp
pop
push
and
or
dec
test
xchg
jnp
movsl
mov
xor
adcl
push
lods
cmp
insl
jmp
push
adcl
mov
aam
test
in
into
and
push
cmp
repz
inc
mov
fildl
and
xlat
iret
lea
pop
mov
push
cmpsb
mov
dec
jbe
fdivrs
rcrb
rcrb
int
jne
mov
leave
jge
jae
cwtl
jne
add
into
cmp
pusha
or
hlt
ja
repnz
in
shr
pop
mov
out
xor
mov
test
inc
mov
mov
mov
mov
dec
push
leave
and
jbe
mov
cmp
xor
sub
or
rorb
mov
cltd
sbb
fsts
pop
arpl
mov
push
mov
inc
hlt
mov
mov
jo
cli
inc
cltd
mov
in
and
add
mov
jg
movl
mov
inc
push
push
xchg
adc
or
push
sbb
and
push
sbb
pop
aaa
in
pusha
sbb
jge
mov
adcl
cmp
dec
jno
xor
xor
outsl
or
dec
push
push
andl
les
iret
pop
cmp
jg
insb
fsub
add
xchg
push
nop
repnz
push
test
loop
inc
lea
or
push
int3
xchg
adc
mov
add
pop
jns
and
pop
pop
repz
add
fstl
mov
repz
add
sub
fidivrl
xlat
cmp
subl
xchg
jp
pushf
nop
fnstsw
add
push
mov
push
in
xlat
inc
rcrb
sbb
xchg
das
mov
pop
popf
xchg
ffreep
stos
pusha
push
stos
fcmovnb
mov
int3
clc
sub
loope
adc
push
mov
xchg
push
pop
test
or
loope
cld
or
sbb
loop
addr16
mov
add
jo
pop
pop
dec
cmpl
pop
sbb
sub
and
sahf
xor
daa
cmp
cltd
in
icebp
xor
adc
aam
ja
adc
mov
add
and
data16
xchg
xchg
sub
cmp
cmp
dec
popa
movsb
push
aaa
hlt
std
jae
aaa
outsl
popa
out
mov
adc
adc
or
es
inc
xchg
jb
test
clc
ret
xchg
ss
cmp
test
ret
or
pop
fdivrl
bound
mov
enter
int3
or
sar
and
sbb
div
jns
mov
push
mov
jmp
sub
push
sbb
and
cmp
cmp
stos
cld
outsb
xchg
popa
cltd
pop
aam
lcall
jg
sub
pop
and
dec
loopne
jle
idivl
stos
pop
and
xchg
inc
clc
icebp
aaa
sub
insl
imull
dec
push
mov
jae
push
movsl
jmp
push
mov
cmp
je
push
ja
pop
clc
rcrl
adc
scas
jp
add
xchg
jns
cmpsl
or
jecxz
mov
dec
sti
clc
arpl
popl
fcmovnbe
nop
rorb
movsl
mov
sub
mov
popf
scas
and
stc
and
sahf
popa
popa
dec
pop
mov
shll
outsb
adc
jno
mov
insl
mov
pop
dec
inc
cmp
clc
mov
test
sbb
sub
dec
outsb
xor
mov
bound
js
lahf
mov
pop
mov
pop
xchg
push
sarl
pusha
rorl
lds
cmpsl
outsl
adc
out
dec
cld
lock
push
fwait
sub
mov
cmp
sbb
xchg
repnz
dec
add
ja
pop
fnstsw
fidivrl
inc
fwait
pop
push
add
lods
scas
and
out
hlt
lds
pop
jle
mov
jne
xchg
cmp
add
xor
xchg
iret
mov
fstpl
jno
test
add
out
sbb
xlat
iret
mov
loopne
mov
testb
sbb
mov
movb
dec
fs
in
popa
push
push
sub
addl
pop
xchg
rdtsc
sub
lds
pop
sub
mov
in
sbb
push
in
sbb
scas
mov
xchg
mov
aas
cmp
sub
or
mov
push
jp
js
xchg
add
and
es
out
or
iret
scas
xor
rcr
push
loopne
jne
sbb
pop
jnp
dec
and
mov
ss
lret
adc
out
mov
mov
mov
or
ret
sti
decb
dec
lods
add
mov
ss
xor
add
mov
scas
ljmp
mov
or
test
adc
test
jnp
push
add
inc
jg
psadbw
dec
jl
and
mov
adc
mov
and
inc
outsl
push
sbb
cld
push
enter
movb
imul
rclb
push
mov
jl
push
mov
add
mov
sbb
mov
adc
push
and
ljmp
inc
add
addl
mov
jge
jmp
or
repnz
clc
icebp
xlat
cwtl
jecxz
fs
cmp
shll
xor
enter
sbb
and
inc
xlat
incb
stos
imul
test
inc
cs
and
lret
xor
and
sub
test
jns
inc
out
adc
test
aam
pop
insb
mov
xchg
ljmp
popa
outsb
sahf
mov
pop
mov
aaa
cmp
clc
adc
subl
sub
xor
inc
push
loop
inc
int
mov
outsl
mov
cltd
nop
mov
add
das
rcr
xchg
bound
xor
aad
mov
int
outsb
fs
or
mov
and
andl
cmp
andl
repz
fstl
mov
dec
add
and
push
push
in
xchg
push
aaa
sub
fistl
push
cld
leave
inc
or
sub
cmp
arpl
jno
call
int3
addr16
jl
xor
daa
cmpsl
or
xchg
in
mov
daa
jae
aad
sub
sbb
pop
sub
clc
dec
jecxz
repz
ret
les
jb
mov
mov
lcall
push
xchg
stc
aad
and
cmp
outsl
cld
mov
cmp
loopne
shrb
pop
rcr
pop
inc
mov
dec
and
inc
outsb
mov
add
fsubl
push
insb
int
jns
idivb
movntq
push
xchg
and
adc
xor
mov
leave
jle
lret
push
jge
stc
mov
mov
bound
jae
pop
mov
xchg
jns
call
add
addr16
mov
sbb
aam
xchg
jb
adc
out
push
enter
mov
xor
add
pop
stos
mov
imul
lods
pop
jmp
jge
popf
add
push
out
nop
insl
inc
jno
and
and
xchg
inc
idivl
popf
sub
mov
dec
roll
jl
xchg
adc
enter
vphaddubd
mov
int3
fnstcw
pop
cs
jle
out
sbb
mov
xor
lock
mov
cli
adc
mov
push
push
jp
jae
in
and
mov
or
mov
enter
sbb
mov
sbb
addl
das
test
pop
imul
call
cmp
xor
cmc
or
cli
fbld
cmp
jmp
ret
inc
idivl
decb
cmp
mov
mov
mov
lret
jl
sbb
mov
or
fnsave
and
mov
and
jno
in
dec
inc
fdivrl
aam
out
inc
mov
adc
or
pop
icebp
and
xor
daa
sub
lcall
fs
jle
repz
dec
repnz
shl
outsl
add
jo
sarl
cs
and
xor
pop
xor
sub
inc
pop
adc
pop
stos
loopne
iret
mov
outsl
or
nop
push
add
loopne
pop
push
push
scas
jae
xor
cmpsb
fwait
sahf
and
cld
xchg
popf
dec
sub
inc
lcall
dec
fmull
xchg
adc
rcrb
fsubr
rclb
mov
loopne
test
popa
ret
adc
bound
and
or
mov
push
mov
fnsave
dec
sbb
scas
outsl
xor
cmp
push
fdivs
aam
add
pop
adc
and
dec
mov
jge
movsb
adcl
mov
xor
outsl
push
fdivrp
inc
jnp
lret
hlt
iret
das
mov
cmp
pop
pop
dec
pushf
or
popl
adcl
fists
call
je
in
xchg
mov
and
fdivrs
ret
adc
arpl
insb
fsubrp
lock
sti
gs
mov
sbbl
or
cli
fcmovu
ds
mov
and
popa
popa
mov
shlb
ljmp
out
lret
push
jns
adc
ljmp
push
ljmp
or
sahf
push
pop
cmp
cmp
mov
inc
stc
and
mov
or
dec
xchg
mov
es
mov
xchg
mov
rcll
ficompl
in
popa
push
je
rcrl
in
in
ret
ds
insl
xchg
pop
push
adc
sub
sti
inc
std
xor
or
insb
test
pusha
adc
push
inc
mov
jbe
push
call
hlt
pop
icebp
test
not
pop
iret
add
mov
inc
out
and
lret
out
lods
out
jbe,pt
push
sarb
outsb
lock
mov
test
pop
icebp
jne
inc
inc
cmp
and
lea
xlat
add
rcll
dec
pop
xchg
into
bound
jmp
jecxz
dec
fdivs
lock
subb
dec
cmp
pop
enter
loope
jmp
inc
pushl
loop
jp
push
cmpsl
test
lock
ss
pop
xchg
dec
sbb
outsb
sub
push
sub
and
jb
cmp
sbb
xchg
mov
test
jmp
leave
adc
add
jno
xchg
sti
mov
xchg
gs
lea
push
jbe
and
dec
out
shr
imul
sub
cmp
inc
inc
jae
inc
test
pop
sub
mov
add
mov
sub
sub
leave
sahf
xor
xchg
jmp
popf
lods
out
leave
lds
adc
inc
cwtl
movhps
dec
pop
adc
cmp
adc
fcomip
pop
inc
jp
mov
loop
cmpb
cmp
and
or
or
std
jg
ja
dec
adc
push
inc
fs
gs
jbe
adc
or
dec
mov
xor
push
inc
sbbb
out
inc
or
mov
sub
inc
jle
hlt
pop
pop
push
mov
mov
xor
repnz
add
sarl
cmp
jne
nop
cmc
das
jle
push
fwait
je
fistpll
sbb
shll
inc
insb
ficoms
or
popa
sub
inc
dec
scas
sarl
loopne
ja
sub
inc
je
test
xchg
in
lret
mov
cmpsl
mov
jp
adc
int
pop
inc
adc
or
mov
int3
jle
cli
sub
call
into
push
sub
adc
pop
rclb
push
ja
cwtl
mov
fidivrl
mov
mov
ja
mov
xor
outsb
sti
and
test
stos
cld
repz
dec
lods
stc
or
mov
sbb
lcall
or
pop
lret
xor
int
test
mov
clc
push
test
popa
icebp
popa
and
ficoms
xchg
jl
adc
and
jne
orl
shrl
shrl
mov
or
mov
push
loop
xor
sub
xor
fcom
movsl
ret
sub
in
adc
xor
xchg
dec
mov
lcall
mov
or
gs
fsubs
sub
das
jo
movsl
jb
inc
inc
mov
leave
cli
bound
stos
inc
adc
xchg
add
and
dec
std
test
mov
mov
and
lock
jecxz
lret
inc
faddp
dec
loope
hlt
out
mov
sbb
enter
xor
push
mov
int
in
add
hlt
or
pop
lock
or
out
sub
gs
out
pop
cmp
out
or
or
fisttpl
jg
cs
jmp
jecxz
cltd
sub
bnd
pushf
test
xchg
in
in
scas
or
xor
rclb
cmpsb
dec
shlb
jnp
xor
pop
mov
inc
jne
data16
pop
mov
mov
mov
test
filds
js
movsl
dec
sub
pop
push
push
mov
stc
mov
push
popa
sar
dec
adc
out
jbe
ror
push
jmp
rclb
inc
pop
jp
cmp
push
dec
mov
mov
mov
or
add
int3
ljmp
and
ja
call
sti
xchg
adcb
insb
lds
mov
jge
cmc
repz
mov
add
push
js
mov
mov
repz
loopne
out
gs
jge
pusha
shll
out
enter
add
fadds
stc
jl
loopne
stc
dec
faddl
add
or
add
dec
test
jge
mov
ja
inc
mov
js
sbb
sub
movsl
jl
sahf
jae
jne
ja
push
in
cs
cwtl
rorb
xor
sbb
fs
out
mov
sti
mov
addb
cld
mov
pop
test
jle
fistl
mov
or
xor
pop
push
in
inc
jmp
loope
loope
mov
subb
sbb
adc
sbb
lods
pushf
rcll
push
das
movsb
sub
jbe
xchg
in
pop
xchg
xchg
loope
popa
test
sbbl
or
pusha
sbb
lret
push
add
xchg
std
int
push
and
mov
imul
sbb
jo
xor
movsl
sbb
dec
sub
inc
lock
flds
push
mov
sub
js
xor
jb
shl
fdivl
mov
cmpsl
call
enter
icebp
jg
mov
ficoml
mov
push
mov
ret
lea
or
std
adc
mov
out
adc
movsb
and
mov
sub
cmp
bound
cmp
and
movups
xchg
inc
in
fwait
loop
mov
fisubl
repnz
mov
das
jecxz
int
aas
pop
ret
lcall
lods
sbb
std
popf
jge
push
or
push
add
fcmovu
stos
jb
dec
stos
clc
cltd
lock
cwtl
xchg
mov
and
out
test
mov
jmp
roll
fidivrl
outsb
cld
loop
andl
movsl
mov
and
sahf
jl
lods
sbb
movsl
cmp
out
inc
dec
add
add
sub
xor
fisubrl
xor
push
iret
aad
add
sub
mov
fs
les
in
mov
push
sbb
mov
icebp
push
insl
test
mov
bound
and
adcb
and
movsl
repnz
and
movsl
sub
jo
ss
jns
dec
and
in
mov
popl
xor
sahf
xor
ss
fs
out
repz
dec
sub
jmp
push
or
and
daa
cmp
push
add
mov
push
adc
cs
int3
dec
sbb
or
pop
aas
ss
push
add
shl
push
sbb
test
dec
call
inc
ds
popf
insb
in
xor
scas
push
jbe
xor
or
add
jbe
sub
aad
in
cmc
imul
sbb
add
pop
or
ficoml
or
dec
mov
adc
xchg
leave
movsb
dec
cmc
pushf
leave
jg
and
sti
jae
ret
stos
mov
pand
dec
jbe
insl
repz
cmp
jmp
iret
ficomps
loop
adc
jmp
or
push
and
shll
push
imul
sbb
mov
dec
imul
pop
pop
mov
mov
cmpb
jg
dec
out
sub
ljmp
cwtl
jns
call
jp
arpl
jl
movsl
push
test
jno
pushl
push
dec
mov
sbb
imul
std
popa
test
jo
pop
loopne
xchg
mov
in
xor
cmp
lds
lcall
enter
inc
adc
add
mov
push
xor
pushf
sbb
cmpsl
dec
jbe
cmp
mov
imul
stos
mov
decl
dec
lea
stc
movsb
mov
pop
mov
jge
fdivrl
cmp
inc
mov
inc
inc
mov
push
mov
cltd
repnz
mov
mov
mov
ljmp
test
or
xchg
je
dec
inc
sbb
cmp
jg
mov
test
and
lock
pop
xchg
push
or
pop
pop
push
call
testb
inc
movsl
dec
dec
sub
es
aad
mov
mov
std
lods
into
xchg
sbb
or
sbb
adc
jg
or
pop
mov
call
icebp
call
into
aas
icebp
jle
data16
pop
outsb
scas
mov
pop
dec
cmp
sbb
sbb
sub
mov
dec
dec
jp
pushf
dec
add
adc
mov
dec
push
jo
test
and
cmp
js
imul
rcrb
xor
inc
mov
adc
mov
or
loopne
shrl
mov
dec
loopne
hlt
mov
xor
vxorps
nop
xchg
add
clc
and
js
test
scas
sub
je
push
push
xor
xor
mov
jne
leave
aas
into
cli
loop
adc
in
neg
push
dec
mov
jbe
into
es
aad
xchg
pop
inc
mov
push
inc
cs
add
out
add
and
mov
cltd
cmpl
jns
mov
in
fildll
shll
xchg
sub
fsubl
nop
pop
mov
cmc
sub
les
insl
push
and
jg
std
jo
adc
jp
ljmp
inc
cmc
mov
mov
sbb
mov
cmp
test
rorl
and
lods
insl
outsl
push
add
int
xchg
add
cld
push
jmp
mov
push
xchg
adc
sbb
jbe
mov
push
mov
shrb
in
into
int3
stos
iret
cmp
aad
xchg
into
pop
shrb
mov
xor
js,pn
pop
into
inc
aaa
sbb
stos
sbb
cmp
int3
mov
add
sub
cmp
xchg
data16
stc
test
jmp
aam
outsl
pop
jecxz
enter
add
pop
pop
inc
lods
nop
fwait
mov
mov
and
fistps
push
push
sub
push
xchg
out
clc
mov
pop
mov
add
push
jmp
pop
daa
cmp
negl
add
xchg
sub
xor
popa
xchg
int3
arpl
jp
mov
mov
xor
and
jb
into
cmp
mov
shrb
ret
ret
sbb
and
seta
imul
sbb
or
adc
dec
test
mov
lcall
pop
cmc
aas
mov
push
inc
je
mov
divb
insb
mov
push
sarb
das
dec
sahf
push
xchg
lea
xor
daa
cli
clc
aam
repz
push
lods
xchg
ljmp
inc
addr16
imul
icebp
adc
and
out
pop
ja
addr16
movsb
jbe
jae
xor
push
addr16
loopne
aad
imul
adc
repnz
cmp
movsl
fwait
inc
mov
call
out
or
mov
pop
hlt
mov
mov
lods
insb
ret
repz
out
imul
xchg
les
push
and
jbe
cmp
inc
rcrl
data16
pop
fimull
nop
xor
aas
stc
xor
cmp
sub
cmpsl
scas
arpl
mov
push
aam
push
cmpsb
movsb
fst
mov
add
pusha
lahf
and
push
loope
out
idiv
jb
cs
in
mov
push
or
icebp
push
lods
jnp
sub
arpl
subl
fs
and
ja
adc
adc
mov
sbb
sbb
pop
jbe
nop
xor
dec
jecxz
stos
aam
and
int3
orb
mov
enter
rorl
push
in
pop
xchg
test
jae
movsl
das
aaa
jnp
or
enter
jns
mov
insl
jns
xchg
in
sbb
sub
shll
addr16
mov
lahf
rolb
ss
inc
adc
jmp
mulb
fcmovu
push
mull
loopne
rcl
jle
xchg
repz
mov
jle
fwait
add
loop
lods
push
js
xchg
cld
or
scas
and
mull
cltd
data16
sbb
repz
icebp
push
push
and
push
and
fists
dec
sub
sbb
push
data16
mov
inc
decb
sub
ret
push
mov
dec
jecxz
ljmp
mov
in
stc
xchg
xchg
popf
rcll
push
ficomps
sbb
dec
lret
pop
lea
lds
push
and
jecxz
in
sahf
daa
fnstcw
cmp
outsb
in
pop
fcomps
jp
aaa
fistpl
mov
mov
cmc
pop
cmp
push
data16
jle
xor
adc
testw
or
rol
jae
mov
inc
test
mov
jns
mov
mov
push
aas
mov
rcll
mov
sbb
inc
pop
xlat
dec
push
int
ret
pop
popf
icebp
push
fidivrs
sbb
or
out
cmpsb
adc
mov
jae
jmp
cmp
cmp
rcr
mov
negl
xlat
dec
cmpsb
mov
call
jg
test
lods
inc
icebp
pop
sbb
daa
adc
xchg
lret
jns
or
test
mov
in
movsb
cmp
std
pushf
pop
mov
mov
push
icebp
insb
push
cs
loope
nop
lds
inc
in
popa
js
pop
lret
mov
mov
mov
dec
ljmp
xor
or
insb
call
dec
inc
cmp
or
pop
lret
ss
xor
decb
inc
lret
mov
fcmovu
jb
js
data16
cs
mov
stos
or
push
int3
pop
dec
jne
inc
cmp
jo
das
ret
dec
insb
pop
lods
subl
or
shlb
les
popw
pop
shlb
push
dec
push
popf
dec
ljmp
je
loop
mov
cmp
cli
sub
addl
fistpl
jmp
repnz
les
insb
and
jbe
cld
inc
sahf
xchg
in
call
jl
cmpl
orb
jp
mov
mov
sahf
sbb
daa
xor
mov
imul
jl
mov
cmp
add
adc
scas
and
inc
jecxz
push
fists
jl
inc
in
cltd
js
xchg
shr
lret
aam
std
decl
push
xor
adc
adc
pop
arpl
jl
out
and
rorb
mov
int3
sub
pop
xor
xchg
stos
ret
mov
jae
adc
call
push
push
sbb
and
sti
rcr
movsb
cltd
outsl
loop
dec
jecxz
and
inc
out
xor
insl
clc
mov
xor
cmc
jle
adc
icebp
into
dec
clc
push
and
sahf
or
sub
dec
lret
lea
inc
movsl
mov
test
adc
mov
add
fidivl
inc
mov
pusha
test
jle
aaa
test
push
mov
xor
dec
lret
pop
cmpsl
repz
push
les
movb
stc
pop
dec
pop
js
add
push
testl
stc
fbld
popa
shl
jl
jb
xchg
out
mov
adc
push
es
js
jecxz
mov
sbb
jns
std
push
imul
out
lods
ds
in
sub
and
lahf
jmp
xchg
loope
test
mov
ret
fdivl
popa
sbb
push
mov
cmp
pop
jae
push
leave
xor
jb
ror
call
adc
cmpsb
and
gs
xor
int
enter
xchg
cmp
movsb
lods
test
dec
jge
xor
push
pop
jns
shll
outsl
out
sub
mov
repz
mov
lret
bound
cwtl
arpl
movb
xor
in
jge
into
mov
dec
dec
ja
cmc
cltd
test
pop
xchg
mov
ds
arpl
js
test
in
pusha
test
dec
jle
mov
out
out
and
cmp
loopne
insb
or
insl
sbb
push
jmp
popf
sub
test
ficompl
add
xchg
in
inc
in
jl
outsl
mov
fs
in
sbbb
scas
adc
jmp
test
add
fs
pushf
cmp
xlat
ret
arpl
pop
scas
adc
clc
jg
xor
push
mov
dec
cld
and
push
fcoms
into
add
loop
daa
sbb
pop
data16
out
sub
prefetcht1
mul
div
lahf
aas
dec
out
pop
popf
adc
mov
hlt
push
je
outsl
add
push
pop
push
or
xor
fcmovne
repz
js
cld
jb
pop
lds
add
jns
adc
out
sbb
movsb
pop
aad
arpl
pop
push
lret
stos
mov
jae
stc
jne
insb
test
pop
inc
push
pop
cmpsb
nop
lods
cmc
cld
pop
call
and
lods
movsb
or
mov
es
cmp
lret
dec
std
sub
jecxz
xchg
in
adc
xchg
int3
add
jg
clc
jp
fldt
mov
push
pop
dec
into
fwait
std
push
or
arpl
jo
mov
sub
add
in
outsb
nop
mov
jp
ds
add
dec
sbb
in
lahf
mov
ja
ucomiss
fisubrs
mov
sub
mov
in
mov
ljmp
jp
ljmp
fidivs
or
and
xor
jne
mov
mov
cmc
je
bound
mov
dec
inc
ret
fucomp
sbb
mov
mov
iret
lea
rol
dec
iret
dec
inc
pop
jge
ja
aad
jecxz
pop
and
in
pop
in
sbb
jns
in
or
sub
mov
or
mov
aad
nop
jae
fbstp
or
mov
sub
daa
jmp
cltd
mov
bound
inc
fisubrs
negb
mov
dec
popf
inc
ret
xchg
cmpsb
push
xchg
aad
xchg
loop
sbb
xlat
cmp
mov
push
or
std
pusha
movsl
ficoms
test
aaa
test
mov
inc
cwtl
push
and
cmp
lret
nop
ds
mov
jmp
push
xchg
sbb
in
cmpsb
push
iretw
add
lods
in
test
xchg
stos
fwait
orl
popl
xor
and
jle
xchg
pop
add
int3
push
dec
mov
outsl
mov
jg
sbb
adc
mov
inc
push
cmc
arpl
sbb
pop
popf
fld
cwtl
inc
fiaddl
pop
push
adc
inc
mov
call
mov
ret
mov
xchg
lret
jno
aaa
leave
repz
fldl
adc
xor
sbbb
xchg
xchg
xor
mov
fimull
sub
orl
xlat
xor
sub
lods
jmp
addl
xchg
test
sbbb
pop
add
mov
movsl
jg
movsb
jmp
jo
pop
aad
ret
ljmp
testl
pop
out
mov
loope
cmpsl
out
mov
inc
xchg
sarl
mov
into
das
and
lret
aas
lret
nop
sahf
xchg
add
pop
pop
ror
out
sbb
lcall
or
mov
adc
mov
mov
dec
sbb
xchg
cwtl
out
push
push
cmp
push
test
leave
jmp
sar
jmp
push
je
fnstenv
or
leave
sbb
mov
push
adc
jnp
jne
outsl
cmp
xchg
ss
jns
out
lds
lods
cmpsl
push
lods
xchg
inc
xchg
and
dec
xchg
sub
inc
andl
jb
xchg
iret
mov
pop
mov
fnstsw
inc
fs
inc
push
imul
in
xor
cmpsb
ja
adc
lahf
pop
push
mov
xchg
in
mov
lds
push
fwait
dec
cmp
in
jl
add
xchg
mov
cmp
mov
and
jecxz
jmp
xchg
loop
or
adc
fsts
mov
dec
es
pop
xorl
mov
cli
or
xor
mov
cwtl
sub
insb
add
jnp
pop
cs
cmpsb
inc
clc
subb
std
loope
jle
mov
cmp
iret
add
push
jge
cmp
xchg
pop
mov
adc
mov
rclb
push
mov
fildll
mov
jb
stc
or
imul
and
cmp
dec
mov
mov
cmp
push
mov
fprem1
pop
mov
fiadds
popa
scas
pop
in
pop
cmp
and
movsb
dec
jae
push
daa
adc
jae
mov
jg
add
in
jge
out
xor
stc
lahf
sub
in
push
cs
and
ss
dec
icebp
mov
mov
sub
cmp
in
aam
daa
jmp
lret
jl
test
dec
daa
popa
psubusb
adc
cmp
popf
jne
fiadds
out
inc
and
push
push
mov
aam
hlt
sub
or
pop
movsl
iret
movsl
fadd
xchg
stos
xor
jnp
mov
lods
add
dec
popa
mov
xor
sub
jo
jmp
push
popa
xchg
insl
push
loop
inc
jl
jno
repnz
mov
data16
es
int3
jge
pop
frstor
and
dec
call
stc
cmc
cltd
int
popa
in
push
and
cmp
add
out
adc
jb
pop
rcll
jo
ljmp
xchg
mov
xor
push
jmp
outsl
daa
sub
pop
mov
mov
pop
dec
mov
dec
mov
jmp
fs
aam
das
or
lahf
shll
shll
pop
push
rcrb
mov
jne
int
fldt
dec
mov
and
lret
jecxz
aas
fcmovb
cmc
push
xchg
cmp
mov
scas
ret
sub
je
cmp
test
aad
sub
hlt
push
clc
dec
test
pushf
test
xlat
adc
out
push
int
jg
lea
icebp
aad
rcrb
jo
ror
les
push
xchg
or
fcoms
mov
cmp
cs
fimuls
and
push
in
mov
sti
loopne
pusha
adc
lret
sbb
push
add
fucomip
aad
and
aad
cltd
xor
rcr
mov
xchg
xlat
inc
sahf
mov
or
or
out
rdmsr
add
xor
mov
cmp
push
mov
jmp
mov
sti
mov
fdivrs
sbb
mov
jle
inc
dec
jge,pt
xchg
jne
mov
xor
arpl
out
pop
lock
clc
cwtl
mov
sub
sub
adc
outsl
test
loope
iret
icebp
and
jecxz
loope
mov
cmp
cmp
loopne
leave
push
lahf
js
add
out
and
xchg
xor
mov
outsb
rorb
loope
or
ror
or
cltd
push
jg
in
xchg
add
mov
pop
adc
dec
pop
fsub
jl
sti
inc
jne
adc
testl
cmc
or
mov
push
add
pop
or
fbld
sarb
out
pop
mov
cmp
inc
and
out
stc
or
out
fstpt
ficomps
cli
stos
xchg
adc
adc
cmpb
test
pop
cld
mov
fisubs
leave
jne
hlt
push
mov
jnp
jl
mov
cmpsb
dec
cmc
push
sarb
fsubr
testl
jle
or
and
cmpsb
lret
xor
sub
ret
and
xchg
add
in
scas
das
push
xor
sub
or
ljmp
int
pusha
je
loop
dec
mov
dec
inc
pop
subl
and
and
push
hlt
je
inc
insl
andb
enter
xchg
pop
cmp
pushf
gs
sti
ljmp
lock
or
pop
and
xchg
fs
push
stos
fildll
jae
fmul
cs
lcall
ljmp
aaa
push
sbb
push
jp
pop
mov
jecxz
insb
lds
add
stc
in
mov
aad
fstpt
mov
jl
je
aam
xor
xchg
inc
loop
lods
xchg
add
pushf
sub
add
lcall
fistpll
fs
test
adcb
stc
mov
jmp
loope
inc
pop
mov
lods
mov
stos
ljmp
pop
mov
jle
int3
xor
andb
test
shrl
cmp
bound
jbe
xchg
aas
add
mov
incl
scas
call
sti
sub
loope
pop
shrb
cmp
cltd
sub
push
lock
adc
and
inc
mov
popf
inc
sub
int
aad
inc
mov
mov
sbb
les
dec
xor
mov
xor
mov
mov
push
fcomps
jne
push
xrelease
or
xchg
je
dec
cmp
sub
or
out
pop
movl
pop
inc
negl
mov
pop
and
sub
out
movb
pop
sbb
enter
mov
loopne
fildll
aad
lock
mov
mov
cmp
jle
cs
btc
push
loope
pop
pushf
sub
rcrl
or
pop
and
push
xchg
xchg
ret
mov
fdivp
daa
cmp
std
mov
mov
or
sub
jbe
test
rep
lret
jle
rolb
mov
scas
test
mov
xchg
jl
jmp
loope
lock
sbb
in
or
scas
pop
adc
negl
popa
jmp
and
ja
aad
arpl
xchg
icebp
mov
sti
and
stc
sbb
jecxz
jmp
xchg
cmp
test
xor
sub
push
adcb
jl
std
mov
shrb
test
mov
lret
fdivr
loop
mov
mov
int
cmp
loop
adc
pop
loop
loopew
repz
popf
popa
mov
cld
shlb
cmpsl
repnz
push
fwait
aad
out
lret
popf
mov
out
ror
out
lret
add
pop
push
and
les
stos
add
xor
dec
xchg
in
sti
sub
mov
inc
adc
mov
arpl
inc
cmp
insl
dec
dec
movsb
or
fldln2
xor
popl
push
mov
jne
xor
xlat
and
popa
jo
jo
mov
popf
mov
mov
popa
test
sub
lret
jl
sub
jg
bound
ret
notl
dec
mov
addb
jl
cltd
test
mov
rorb
mov
inc
dec
mov
jb
and
xchg
add
mov
add
loop
aam
and
and
and
mov
out
push
shrl
test
fxch
pop
mov
rolb
jp
dec
fsub
popa
lcall
dec
sbb
xor
cs
out
cmp
xorb
call
sahf
adc
cmp
mov
or
cmp
jp
jecxz
and
xchg
add
idivl
push
mov
push
sub
imul
or
sbb
adc
xor
test
dec
xchg
jnp
out
popf
into
popa
or
add
or
inc
loopne
sbb
dec
dec
int3
ljmp
cmpsb
into
stc
mov
sarl
xchg
mov
adc
cmp
adc
fsubrl
mov
jbe
inc
dec
je
scas
jg
and
lock
aas
mov
icebp
movsl
or
pop
mov
popa
sarl
push
in
sbb
mov
or
push
sub
cmpl
lcall
push
sub
std
pop
in
cmp
pusha
test
pop
xchg
push
ss
imul
dec
inc
leave
jb
and
sbb
dec
rcrl
pushf
mov
ljmp
fsubp
jo
insl
or
ret
xchg
call
xlat
cmp
in
mov
in
addl
xchg
mov
pop
cld
andb
mov
inc
jge
loope
adc
push
xchg
int3
inc
xchg
rcr
cmp
cs
push
out
rol
pusha
xchg
hlt
dec
out
mov
or
test
and
popf
mov
aam
cmp
popf
lret
and
push
xchg
loop
xor
add
imul
add
sub
mov
push
fdivl
sub
inc
mov
mov
sbb
sub
inc
negb
in
test
outsl
mov
mov
sub
inc
add
cltd
sahf
aas
push
pop
popf
xor
xor
sbb
in
addb
movsl
xor
adc
pop
faddl
ds
cmp
mov
cmp
xlat
xchg
dec
and
cmp
loop
les
inc
xor
mov
push
push
mov
xchg
dec
addb
int3
sub
mov
pop
gs
or
addr16
out
add
outsb
push
decb
push
xlat
lret
adc
adc
or
add
add
and
cmp
cld
xor
popf
bound
out
test
pop
sarl
sbb
jae
adc
add
inc
and
out
mov
test
pop
mov
cmp
inc
lea
or
lret
int
pop
shll
xlat
cs
add
sub
stos
div
loopne
in
insb
mov
xchg
jbe
cli
jl,pn
xchg
pop
push
scas
and
lcall
fwait
aad
popf
popa
adc
or
sbb
push
dec
sarl
jle
jo
pop
aaa
outsl
test
push
int
and
repz
imul
fdiv
adc
inc
jg
testb
sti
stos
movsb
add
in
es
dec
xor
idiv
mov
jmp
dec
push
lcall
dec
mov
adc
leave
repz
ret
cmp
adc
divb
scas
aam
lds
or
iret
mov
jmp
inc
loope
aam
cmp
inc
into
sub
dec
and
pop
xchg
or
out
jl
loope
xchg
outsb
in
inc
rolb
xchg
out
mov
jmp
popf
adc
or
and
sbb
in
adc
mov
out
push
adc
cmp
push
enter
addb
mov
add
inc
push
cmova
lcall
xor
xor
mov
xor
movsb
mov
rcll
inc
int3
stos
std
lahf
dec
xorl
cmc
cs
orb
shl
adc
push
push
jle
xchg
jbe
mov
iret
jbe
cmp
adc
shll
jl
mov
decb
lea
and
jns
cmp
sub
cmp
dec
ja
das
jmp
inc
div
sub
fisttpl
lods
js
and
sbb
call
scas
xchg
cmp
stos
jno
pop
stc
test
cmc
in
lods
dec
cmp
aam
xchg
push
mov
inc
and
mov
push
pusha
dec
mov
ret
movsl
test
pop
daa
lods
fwait
push
aam
aad
mov
dec
imul
push
xchg
push
das
adc
out
xlat
xorb
push
mov
std
dec
cwtl
pop
jl
mov
rcrl
jb
inc
add
jl
mov
js
mov
imul
movsl
aaa
xchg
rcrb
lret
hlt
pushf
push
insb
cmpsb
and
xchg
popa
dec
hlt
inc
stos
cmp
fs
push
sub
aam
sbb
int
xchg
xor
into
cmp
add
fisttpll
std
dec
in
adc
mov
cmp
es
adc
adc
dec
pop
ror
add
fwait
push
cmp
shr
cmp
jg
cmp
and
or
movsb
aaa
in
pop
cmp
lret
ret
das
pop
enter
in
repnz
inc
sti
and
jmp
cmc
aas
pop
ljmp
sbb
inc
outsl
int
mov
or
inc
aaa
push
dec
test
pushf
enter
mov
cld
xor
pop
scas
enter
test
mov
jo
xor
mov
xor
xchg
push
add
mov
aad
and
xor
pop
imul
test
popa
test
jo
in
push
enter
ret
lret
and
push
les
movsl
ret
mov
imul
test
aad
clc
sub
push
xchg
mov
inc
fbld
clc
mov
pop
xchg
cmp
aam
jp
adc
dec
push
bound
lods
jmp
cmpsb
arpl
cmp
mov
inc
jg
pop
adc
mov
loopne
mov
cmp
pop
pop
stos
pop
mov
adc
pop
mov
lret
pop
adcl
stc
push
mov
insl
loope
jb
andb
or
sti
std
test
aaa
or
inc
push
mov
dec
out
jl
insb
js
repz
jbe
jno
inc
inc
lea
inc
call
rcrl
cmp
xchg
xchg
dec
movsl
jecxz
sbb
scas
push
shr
inc
sti
test
pop
inc
sub
xor
daa
push
into
xchg
pop
stc
das
xchg
push
js
aaa
cmc
mov
adc
cli
cmp
mov
aaa
pop
roll
mov
adcl
icebp
movsb
adc
les
in
insl
int3
adc
xor
sti
jge
fidivl
movsb
in
cmpsb
pop
push
adc
lret
add
mov
and
dec
decl
jl
pushf
sbb
cmp
sarl
xor
adc
push
xchg
and
cltd
mov
xlat
adc
sbb
push
cmp
add
lahf
xchg
cmp
inc
mov
lcall
cmc
inc
stc
inc
inc
cmc
movsb
data16
pop
test
leave
sub
push
ljmp
dec
arpl
pop
mov
popa
call
mov
sar
aad
cmp
test
ss
mov
inc
xchg
inc
ja
xchg
sbb
iret
addr16
aaa
repnz
enter
out
sti
jp
inc
cmp
push
arpl
push
sub
pop
repnz
cmp
fadd
roll
lock
mov
rdpmc
mov
lods
insl
adc
in
cmpb
shrb
push
jg
aad
pop
dec
pusha
sbb
jmp
push
mov
cmpsb
xor
add
les
adc
rcrb
mov
cmc
data16
filds
xchg
stos
adc
cmp
mov
les
add
jl
dec
xchg
or
stos
mov
aam
hlt
cli
div
jmp
test
sub
bound
sub
push
ds
daa
sti
add
adc
icebp
push
jle
inc
in
and
mov
mov
add
clc
cli
movsl
push
test
fcoml
insl
cmc
and
adcb
scas
in
adc
repz
and
mov
cltd
ret
mov
iret
rcrl
push
mov
mov
into
sub
jg
jecxz
scas
aaa
inc
push
stos
into
cmp
rclb
cmp
sbb
inc
orb
scas
outsl
mov
shrl
insb
das
rolb
daa
rcrl
jns
sbb
or
push
sahf
outsl
jnp
xchg
inc
jg
xchg
mov
stos
mov
inc
lret
lcall
mov
fists
xor
jb
roll
mov
dec
insl
mov
test
adc
fnstsw
mov
push
mov
movsb
push
mov
jmp
push
pop
popf
jnp
pop
inc
add
cld
and
ret
ja
lretw
lret
or
leave
in
incl
jg
add
ds
movsb
inc
xchg
cltd
or
sbb
movsb
jns
popa
or
sbb
stc
dec
and
int3
shlb
clc
leave
jl
fcmovbe
rolb
clc
mov
ret
shl
push
loopne
andb
imul
adc
xchg
ficoml
push
xchg
and
add
in
fcomp
jecxz
addb
pop
movsl
les
cmp
clc
scas
test
stos
xor
leave
dec
fdivp
adc
and
jne
arpl
mov
add
and
faddl
addr16
or
rcrl
cmp
xchg
pop
outsl
jne
pusha
cs
adc
xor
cmp
mov
aas
bound
xor
stos
aaa
and
cmp
sbb
call
xchg
cmp
fdivl
std
loopne
or
fidivrs
add
inc
out
lahf
dec
pop
jae
mov
sbb
jl
inc
inc
mov
mov
push
sbbb
mov
mov
cwtl
jo
subb
mov
ja
xchg
mov
cmp
dec
ja
push
pop
leave
jae
repnz
pop
xchg
jmp
jge
mov
call
jns
sbb
mov
mov
pop
les
bnd
lcall
daa
gs
cmp
mov
addb
in
stos
std
or
cmp
int
lods
movsl
xchg
mov
sbb
jae
sub
cmp
mov
dec
sbb
aaa
insl
rol
gs
mov
sub
test
dec
hlt
mov
shr
pop
cs
mov
int
rorl
cmp
outsb
cli
test
inc
fstps
pop
and
dec
jl
xor
leave
rclb
cmc
push
loope
jae
jne
or
adc
mov
mov
inc
in
dec
jp
out
add
jecxz,pn
mov
cwtl
or
cld
xor
mov
test
and
mov
mov
les
push
lea
dec
xchg
push
mov
dec
cmc
sub
xor
dec
pop
sbb
loope
push
push
gs
xchg
jge
movl
in
rcll
sub
mov
mov
repz
add
adc
mov
inc
push
mov
ror
fdivr
and
popa
xor
mov
shll
pxor
pop
popf
mov
ljmp
scas
imul
movsl
out
or
in
test
jae
or
jne
in
mov
les
dec
sbb
push
aaa
pop
hlt
cmc
std
pushf
sub
add
bound
dec
test
adc
dec
xchg
imul
in
stos
stos
fwait
or
and
xor
les
xchg
push
aam
jb
mov
iret
sbb
inc
adc
lcall
je
int3
loop
and
jnp
out
xchg
jns
cmp
movsb
iret
dec
and
int3
pop
and
or
cmpb
stc
shl
sbb
push
fcompl
jbe
and
xor
test
call
icebp
and
dec
cld
push
fs
in
inc
add
xchg
seto
adc
dec
xchg
orl
in
push
jno
pop
int
push
int3
cmp
pop
lds
xlat
push
sub
sub
leave
jg
jb
scas
stc
mov
loope
inc
sbb
xchg
das
jno
mov
dec
jns
xchg
repz
inc
push
orl
shlb
pushf
ljmp
mov
in
push
das
ret
cmp
and
lret
aaa
push
mov
cmpsl
lods
and
cmp
sub
nop
sahf
dec
pop
pop
stos
je
aas
stc
fldt
mov
jb
lock
out
arpl
dec
icebp
lods
mov
push
jbe
xchg
int3
out
sbb
ret
shlb
mov
and
or
push
lcall
pushf
cmpsb
lods
pop
mov
shrb
pop
popa
in
mov
pop
or
ja
shlb
sub
cwtl
rolb
jno
mov
jge
mov
out
sub
sahf
push
and
jmp
xchg
adc
mov
xchg
mov
je
sbb
dec
sub
lods
jbe
arpl
mov
jnp
repnz
sbb
mov
inc
insl
xchg
out
add
dec
sub
xchg
sbb
push
std
xchg
mov
lods
test
pop
mov
andl
lea
lcall
mov
fcomi
mov
fwait
jbe
movl
lcall
stc
pop
cwtl
and
outsb
ss
loope
xchg
push
dec
pop
jl
mov
jb
cwtl
stos
sti
jp
add
mov
outsl
xor
test
and
adc
into
test
inc
cltd
adc
arpl
mov
addr16
xchg
lret
push
outsb
ljmp
mov
rclb
bound
ss
fistl
movsl
cmp
insl
mov
push
sbb
out
mov
xchg
insl
push
or
jl
lds
les
lods
lds
icebp
mov
xor
nop
in
fldenv
push
mov
jae
movsl
cmc
mov
sub
cmp
cmpsb
outsl
xor
xor
imul
daa
mov
sbb
or
xor
and
movsb
or
mov
cmc
aad
rcr
pop
add
lcall
imul
pop
ret
xor
pop
loope
pop
jbe
pop
mov
mov
das
cwtl
outsb
push
mov
jecxz
cmp
and
cmp
inc
out
jmp
and
jmp
cmp
testb
aaa
jo
mov
or
aad
sub
cmpb
xchg
in
mov
out
repnz
mov
pop
aad
mov
call
sub
mov
andb
pushf
fsubl
push
adc
cwtl
mov
or
pop
movsl
inc
mov
sub
dec
sbbb
sub
enter
push
pushf
ljmp
loopne
out
push
xlat
push
dec
dec
sub
lods
aas
test
push
and
ret
xor
shll
xchg
jnp
adc
mov
fisttpll
xchg
xchg
inc
dec
cmpsb
pop
jp
sub
cs
sbb
xlat
and
in
jns
xchg
add
jo
std
out
adc
xchg
mov
jecxz
sub
aaa
mov
icebp
push
loop
inc
nop
pop
enter
add
ljmp
push
es
sbb
fidivrl
mov
andb
mov
xchg
mov
sub
dec
in
mov
pop
jae
test
out
xor
out
les
out
cmpsl
and
adc
inc
fildll
pusha
or
enter
insb
subb
outsl
cltd
mov
xchg
popa
jo
ret
or
int
ds
mov
nop
lahf
xchg
push
ficoml
mov
pusha
cs
es
jbe
dec
pop
add
in
in
inc
cs
push
fbld
push
and
cmp
test
cmp
jb
add
mov
mov
dec
ret
dec
lods
inc
and
xorl
mov
sub
lret
xchg
sbb
inc
stos
xor
clc
test
cmp
push
ret
mov
outsb
jmp
xchg
dec
leave
mov
sbb
jae
mov
in
call
dec
sarb
sbb
cmpsb
stos
imul
inc
jo
hlt
pop
addr16
jbe
pusha
mov
mov
or
pop
jnp
mov
cmp
popa
out
ret
push
mov
jnp
rcrl
inc
and
pusha
sbb
stos
test
dec
imul
jmp
or
push
outsb
and
lcall
enter
fs
fmul
mov
mov
ret
push
dec
jb
test
push
mov
xlat
clc
jnp
imull
mov
fisttps
test
es
loopne
xor
insl
mov
xor
sbb
roll
popf
test
mov
cmpsb
inc
test
js
ret
call
or
cmpsl
fsub
mov
jp
add
push
outsl
push
pop
inc
and
jns
jne
imul
lret
sbb
pop
cs
push
test
clc
scas
scas
je
gs
mov
cs
arpl
stos
cld
push
cmpsl
inc
xor
ja
or
loopne
jle
xlat
add
movsb
aam
call
fstpt
pop
icebp
mov
cli
jl
cs
adc
jo
aas
mov
xor
xor
testl
pop
mov
lret
dec
push
or
mov
fldenv
fildl
mov
jne
dec
cltd
pop
fstp
bound
cmp
out
xor
mov
mov
mov
adc
nop
ds
cmpsl
mov
adc
bound
cwtl
fadds
std
icebp
inc
das
adc
fdivrp
mov
xor
adc
jae
sub
push
mov
je
mov
test
inc
ss
cmp
add
stos
cltd
adc
xchg
int
cmc
cmp
call
enter
movsb
int
lahf
leave
mov
lcall
or
sub
or
mov
dec
icebp
lock
pushf
lcall
imull
repnz
cmp
addps
inc
fs
pop
lret
cmp
lods
add
loope
nop
scas
fwait
lea
pop
in
std
outsb
cmc
and
pop
scas
pop
dec
out
add
pop
or
repnz
sbb
movsl
jg
insl
xchg
add
add
sub
outsb
hlt
jmp
mov
scas
insl
lock
pusha
sbb
fwait
dec
aam
lods
jo
mov
iret
mov
pop
outsl
jae
pop
jg
mov
push
pop
incb
or
fdivrl
out
jle
sub
and
cmp
pop
add
push
icebp
xor
lds
pop
xor
or
adc
or
aad
mov
pop
mov
jp
in
ds
jne
push
inc
gs
lea
lock
call
rclb
cmpsl
pop
in
stos
sahf
push
jp
sti
xor
push
ds
imul
sbb
cmp
pusha
les
clc
xor
push
push
push
and
stos
or
cld
pop
imul
xor
dec
push
inc
insb
ljmp
lcall
mov
xor
jmp
inc
adc
daa
pop
scas
pop
dec
push
inc
dec
test
lds
cld
mov
mov
mov
dec
and
sbb
pop
and
xor
jno
in
bsf
add
cmp
sub
stc
push
xchg
inc
xchg
mov
shll
rcrb
dec
inc
ljmp
fdivrl
mov
test
daa
inc
mov
imul
gs
sbb
std
jnp
jae
push
cmp
popl
loope
cltd
mov
rcrb
jne
fimull
das
icebp
adc
dec
xor
inc
sub
cmpsb
into
daa
jo
jmp
push
lret
into
mov
lcall
push
mov
int3
cmp
in
aaa
cltd
mov
int
popl
adc
adc
inc
xor
fcmovb
daa
cmp
xor
inc
and
iret
movsl
outsb
dec
fadd
xchg
into
fcmovu
hlt
fstpt
sub
cltd
mov
scas
jae
sub
dec
push
sub
stc
adc
divb
loopne
pop
cmc
jb
mov
das
rorb
xor
inc
inc
call
dec
jecxz
ffree
mov
clc
mov
and
aam
popa
sbb
pushf
shlb
fnsave
pop
addr16
dec
loopne
neg
pop
adc
pop
add
int3
xor
push
arpl
bnd
jns
pop
mov
ror
xchg
lret
scas
jns
sti
xchg
out
mov
mov
test
in
and
fwait
sbb
cld
fidivl
add
mov
int3
pop
add
adc
cmpsb
xor
rol
dec
and
int
mov
leave
fldt
and
xchg
mov
insl
pop
or
gs
push
fildl
inc
shr
loope
jbe
push
push
arpl
push
nop
mov
test
dec
jge
js
sub
rcr
fcoml
push
lcall
add
addr16
cwtl
cmp
mov
xor
sub
lret
pop
mov
mov
in
pushf
fnstcw
sti
xchg
jcxz
dec
mov
jmp
sub
add
or
out
sub
dec
push
inc
cli
push
and
ret
lds
cli
daa
mov
xor
xlat
cli
mov
es
xor
cmp
jb
cmc
popa
pusha
sbb
out
push
jge
scas
loope
jbe
mul
sbb
pop
sbb
mov
jge
sbb
pop
mov
xchg
test
decb
aaa
xor
gs
insb
mov
lret
pop
sbb
lahf
std
xor
loope
mov
cwtl
sti
mov
pop
addr16
addr16
mov
or
iret
enter
fwait
repz
pop
gs
push
lods
in
fidivrl
mov
dec
loopne
add
adc
rorb
jo
pop
xor
jge
fucom
and
push
lahf
inc
jle
in
loop
mov
or
or
into
in
subl
rorl
inc
mov
es
cli
repnz
inc
loopne
xor
push
and
and
push
test
cs
cli
or
sbb
test
pop
pop
cmp
int
mov
xchg
ss
mov
lret
push
cs
shlb
mov
roll
mov
jo
xchg
call
push
sbb
xor
lret
roll
jg
repnz
sbb
into
jae
push
add
test
add
fucomi
jmp
jae
sbb
pop
pusha
inc
mov
outsb
xor
cmp
arpl
mov
stos
data16
stc
jge
addl
repnz
cs
mov
in
adc
sbb
ret
pop
jns
mov
adc
in
movsb
lret
adc
sub
js
rcrl
xor
shr
gs
daa
movsb
loop
mov
push
jge
mov
add
mov
mov
fdivrl
sbb
or
fmul
push
xchg
in
adc
mov
and
imul
lret
arpl
sbb
adc
dec
stos
cmp
mov
mov
ja
and
push
lcall
jae
jecxz
loop
inc
push
push
pusha
dec
ret
loopne
subb
imul
sbbl
lahf
psraw
lahf
out
daa
push
icebp
add
insl
push
mov
xlat
jmp
outsl
pop
andl
and
in
lea
sub
pop
and
aas
mov
out
xchg
jne
pop
pusha
push
push
mov
push
xchg
mov
pop
push
xchg
jle
bound
mov
dec
inc
push
aad
in
scas
fisttpl
add
mull
cmp
cmc
outsb
sahf
push
pop
lods
fstps
mov
enter
inc
and
lods
shlb
sbb
add
hlt
inc
loope
dec
int
push
repnz
mov
jecxz
inc
clc
push
xchg
fsubrl
cmpsl
cmp
leave
out
xchg
jge
lea
inc
push
inc
rorb
ja
pop
mov
imul
sbb
add
inc
mov
insl
push
icebp
and
lods
jbe
frstor
imulb
incl
sbb
repz
dec
jno
sbb
out
push
test
inc
cmpsb
mov
in
js
xor
mov
gs
push
roll
adcl
dec
mov
dec
mull
jl
testl
mov
addr16
dec
insb
inc
sub
push
mov
pop
and
inc
fmull
lea
sbb
dec
mov
xchg
adc
push
sub
imul
sub
adc
imul
sub
push
subl
pop
cmc
cmpl
xor
dec
test
jecxz
lods
aam
jecxz
lret
loop
xchg
cs
jmp
call
cmc
sub
xlat
cmp
xchg
idiv
pop
xchg
jmp
xor
fs
fisttpll
adc
orb
xlat
les
outsl
push
mov
pop
shrb
out
shrl
idivl
push
mov
shll
fists
pop
fidivrs
arpl
loop
push
xchg
dec
test
xchg
pop
out
mov
and
flds
fldcw
iret
hlt
adc
mov
ror
inc
shl
push
outsl
cmpsl
push
flds
rcr
push
sbb
xor
in
ficompl
mov
dec
les
pop
pop
out
mov
sbb
xlat
jge
adc
adcl
jle
or
out
aad
mov
fwait
push
pop
jp
xchg
mov
loop
outsl
cmp
int
sub
sub
lcall
adcl
in
sub
and
push
push
xchg
jl
lret
jns
adc
jmp
adc
add
test
inc
cmp
pop
in
int
out
dec
test
fmul
inc
pop
in
inc
or
leave
push
sbb
push
mov
cltd
mov
sarl
mov
negb
pusha
mov
mov
repnz
xchg
xchg
sbb
inc
andl
pusha
mov
add
mov
xor
pop
adc
test
xchg
imul
mov
fistpll
sub
mov
repnz
push
jns
fisttpl
aaa
ficompl
xchg
pop
aas
int3
scas
ss
add
dec
pop
push
mov
mov
fwait
movsl
mov
jecxz
sbb
dec
stc
out
mov
stc
mov
enter
xchg
mov
jno
mov
dec
outsb
paddsw
imul
arpl
add
rclb
iret
xchg
test
insl
inc
inc
inc
or
and
pop
stos
or
dec
xchg
sub
push
jmp
push
sbbb
out
mov
test
pop
xchg
shl
xor
rcrl
in
mov
inc
shr
push
mov
je
mov
add
inc
mov
or
mov
lods
jmp
test
adc
inc
dec
and
push
scas
add
sub
int
out
imul
arpl
sub
std
push
jecxz
bound
pop
sbb
test
pusha
adc
pop
jmp
lret
fnstcw
xlat
jle
mov
ret
jecxz
and
mov
lods
cmp
fdivs
fmuls
cs
fwait
popf
fisubrs
mov
jge
add
pop
xor
pop
aam
dec
dec
aas
dec
cmpsl
pop
std
mov
jl
pop
int
lock
mov
out
mov
add
aad
lods
xchg
vpmuldq
mov
mov
sbb
pop
clc
sbb
xchg
std
test
jle
dec
das
test
call
sbb
lret
scas
popf
gs
stos
repz
jmp
scas
xchg
stc
cmp
stc
dec
mov
repnz
lock
ret
cli
es
movsb
sti
adcl
pop
dec
mov
test
dec
test
mov
cmp
inc
jno
popf
mov
sub
push
out
cmp
outsl
add
pop
push
inc
cmc
insl
movb
jmp
hlt
mov
mov
mov
sub
or
sub
or
push
sahf
xchg
insb
aas
ret
mov
adc
aaa
mov
popf
fs
mov
cmp
cs
xchg
push
mov
pusha
push
add
and
lods
push
js
xchg
inc
pop
pop
sub
sub
loop
stos
pusha
rcrb
push
lock
popa
sub
adc
clc
popa
shlb
subl
jg
rorl
rcll
cmp
repz
mov
mov
mov
xor
dec
dec
je
in
flds
out
cltd
xor
int3
lahf
adc
mov
jecxz
lods
cmp
pop
cmovge
jmp
mov
jmp
and
dec
loope
enter
nop
sti
and
leave
and
dec
push
xchg
cmp
inc
leave
ljmp
or
sub
xor
pop
fxch
data16
stc
lret
mov
jp
fistps
rcll
int3
stos
jbe
jl
cmp
sti
test
shll
dec
cmp
and
jecxz
lea
push
iret
jo
push
fcomip
lahf
push
flds
pop
inc
adc
cmp
xchg
pop
sub
ss
mov
xor
dec
mov
mov
ja
jmp
xor
mov
aam
sub
xchg
adc
fnsave
xchg
cmp
add
pop
clc
mov
mov
mov
cmp
les
push
das
push
leave
push
fmull
lcall
push
fwait
scas
ja
push
arpl
dec
cwtl
lea
mov
fwait
inc
popa
xorb
ss
ret
adc
gs
push
bound
mov
cmp
jne
out
loopne
push
xor
push
and
inc
nop
cmp
psubusb
shll
lods
or
fildll
fsubrl
lds
sbb
jns
fadds
daa
frstor
ljmp
lods
xor
xchg
int
cli
out
pop
jg
dec
fistl
and
in
dec
lods
in
test
sahf
test
push
pop
addb
inc
jo
adcb
push
add
pop
lods
mov
pop
mov
and
sub
jo
repnz
xor
dec
sub
hlt
push
xchg
jge
cmp
fidivrs
sbb
loop
leave
xor
int
repnz
aas
sub
das
leave
or
cmp
bound
leave
and
aas
cmpsb
fucomip
pop
ljmp
adcl
cs
jge
pop
pop
push
test
and
or
mov
outsl
add
aas
sub
jbe
cmp
and
pusha
xor
adc
or
out
xor
xchg
and
int3
enter
ss
inc
mov
outsl
push
sbb
inc
sbb
jb
retw
ficompl
clc
xlat
push
and
in
adc
jnp
enter
int3
cmp
jmp
push
cmp
das
jns
repnz
dec
shrl
add
lretw
ja
fidivrs
sub
ja
jno
out
loop
adc
and
add
sub
iret
fildll
xchg
outsb
sbb
cmp
ja
popf
imul
scas
ljmp
stos
arpl
fnsave
hlt
xor
fstpl
outsb
lock
in
ljmp
ja
inc
fcmovnbe
icebp
xor
sbb
ret
lds
ja
dec
lret
or
aad
dec
jmp
or
xor
inc
imull
inc
inc
sub
outsb
jne
cmc
push
cmpsb
push
jecxz
les
leave
pop
sbb
movsb
outsl
jae
lods
add
mov
loopne
mov
ret
jmp
push
mov
imul
decb
cmp
xor
fsubs
test
pop
outsb
inc
lahf
push
rcll
ss
adc
jns
dec
xchg
stos
push
push
pop
add
int3
adc
or
pushf
add
ror
xchg
add
add
dec
mov
mov
pop
and
cmpsb
int
ficoms
jno
mov
cld
loop
add
jo
lds
mov
lods
sarl
add
push
inc
or
mov
and
pop
dec
xchg
jb
imul
ljmp
inc
scas
dec
fdivrs
sbb
xlat
sbb
xor
mov
push
cmovle
into
dec
sahf
mov
push
daa
mov
xor
cwtl
lret
sub
idivb
cmpsb
mov
in
sbb
ds
mov
sub
lret
loopne
popf
and
xor
icebp
outsl
cmpsl
cltd
sbb
sub
sub
into
ret
cmpl
adcl
jmp
pop
fstl
fcomp
int
les
bound
loop
add
cltd
inc
add
xchg
and
jle
outsl
sti
cltd
sub
add
push
sti
sbb
xor
sub
xor
outsl
ljmp
cld
adc
lret
push
xor
sbb
sub
aam
daa
and
imul
gs
sub
test
mov
adc
adc
dec
gs
fwait
outsb
ds
xor
push
in
das
cmp
inc
push
lods
lahf
inc
jl
xchg
adc
into
push
clc
or
ljmp
arpl
and
into
es
stos
xor
push
in
adc
sbb
sarl
stos
int
push
cmp
push
std
adc
fs
mov
sub
mov
test
dec
or
sub
jl
mov
add
negl
pop
xchg
and
rolb
pop
sbb
pushf
push
hlt
testb
bndldx
push
cmpsl
aam
cld
stos
loopne
and
and
push
subb
stos
imul
lcall
mov
push
jg
jge
test
sbb
adc
into
shrb
pop
adc
cmpsb
out
mov
shrl
ss
sbb
sti
mov
ret
insb
mov
popf
jl
inc
into
pop
cli
cmc
icebp
xchg
psubw
in
out
pop
xchg
sbb
cwtl
imul
lods
call
fisubrs
push
or
out
jmp
cmp
pop
pop
aam
inc
clc
inc
ds
add
or
cli
sub
lods
imul
pop
xor
push
cmp
cmpsl
lods
enter
in
fbld
cld
push
pop
loop
scas
std
fdivs
je
aam
and
or
imul
les
or
xchg
in
mov
inc
je
aaa
add
inc
popa
dec
push
mov
dec
addr16
lret
sub
inc
fcom
mov
cli
movsl
mov
call
pop
icebp
inc
xchg
outsb
pop
stos
inc
ss
dec
push
int3
ds
add
pusha
pop
xor
lahf
call
maskmovq
notl
cmp
add
inc
cltd
pmaddwd
adc
roll
cmp
fcoms
mov
loop
fisubs
rcr
push
cmpsl
fistl
xor
sub
mov
mov
and
decl
jecxz
or
mulb
adc
mov
dec
nop
int3
cmp
sbb
jns
clc
push
xor
sti
inc
mov
add
pop
je
rcrl
jns
out
inc
dec
jb
lock
mov
pop
and
add
xor
andb
fbstp
push
and
add
mov
xchg
ret
or
shlb
test
push
orl
jne
push
xchg
push
xchg
mov
stc
sbb
mov
scas
inc
stos
scas
add
ret
inc
popa
push
cmp
add
mov
inc
ret
fstl
xor
mov
push
or
jns
mov
lcall
mov
or
xchg
cmp
mov
sarl
xchg
mov
jge
into
inc
fdivr
out
mov
inc
inc
mov
fsubs
cmp
ret
lret
sti
gs
loopne
xchg
push
fadds
nop
adc
in
or
imul
call
adc
fimuls
push
inc
call
imulb
xchg
enter
mov
add
in
sbb
or
xchg
pop
lea
inc
cmpsl
mov
mov
es
jae
test
ficompl
push
loop
add
xchg
popf
fwait
jge
adc
push
inc
int
aad
push
ficoml
loope
imul
mov
inc
sub
out
sub
or
xor
jae
adc
mov
dec
sbb
scas
imul
lds
ja
das
dec
test
ja
jmp
pop
cmp
add
push
sti
mov
imul
and
out
and
add
and
jmp
mov
ss
and
mov
jno
mov
xchg
push
pop
cmp
stos
ds
add
sbb
xacquire
dec
out
adcl
mov
pusha
stos
adc
mov
push
loop
stc
and
mov
js
arpl
jbe
sub
das
jbe
fs
and
xchg
dec
mov
dec
movsb
mov
and
xchg
movsb
andb
outsl
loope
sub
mov
xor
sub
fs
rcll
aad
or
jne
cmp
dec
cmp
jmp
insb
sub
shl
enter
pop
xchg
aaa
mov
xchg
fisubrl
loop
scas
in
fsubl
js
inc
adc
mov
ds
cmp
decl
divb
push
sbb
inc
repnz
xor
sbb
out
inc
add
dec
push
movsl
mov
pop
ss
dec
iret
xchg
jmp
lock
pop
call
pop
cmp
shl
ret
popf
pushf
out
mov
and
mov
in
pop
nop
mov
push
cmp
int
and
popa
aam
jns
or
jp
xchg
cmp
lock
pop
add
push
pop
jmp
mov
sub
fimull
sub
movsb
xchg
mov
push
pop
jbe
sub
outsl
dec
add
sbb
xchg
adc
mov
das
subl
push
jg
xor
scas
push
sbb
cmp
dec
fmul
test
inc
outsl
leave
ficoms
lret
adc
cld
in
les
pop
fstpl
jnp
mov
and
and
xor
inc
imul
loop
cmp
mov
ja
push
jnp
add
inc
dec
cmp
in
jb
jns
mov
jbe
in
fists
jno
and
push
test
add
sub
adc
push
mull
pop
je
cmp
pushf
push
sti
in
cltd
mov
push
das
insl
jo
cltd
jecxz
shrl
scas
decb
or
aaa
xchg
cmp
adc
dec
lods
les
lea
inc
cs
jo
inc
in
push
add
std
sbb
xchg
inc
roll
stos
mov
icebp
jo
cwtl
xor
fwait
adc
cwtl
mov
adc
jne
push
data16
jns
ret
pushf
les
stos
xor
add
test
jl
cs
jmp
ss
loop
rorb
hlt
inc
fimull
ja
mov
adc
loopne
xchg
sbb
mov
loop
push
fcmovb
fimull
cmovg
xor
jge
rolb
sbb
mov
js
xchg
and
ljmp
mov
clc
mov
sahf
bound
mov
and
lea
jg
sarb
mov
pop
in
jae
fldl2e
xchg
pop
ret
fdivrs
scas
test
shll
xchg
leave
jnp
and
push
jnp
push
xchg
jge
into
rolb
mov
jne
subb
test
mov
repnz
xchg
and
and
fldenv
mov
fstpt
jle
add
movsb
lds
in
loop
sub
xchg
ss
jecxz
xor
rol
push
jb
xchg
push
imul
pop
push
lahf
std
clc
cmp
mov
stos
stc
shrb
jle
mov
dec
jmp
xchg
lods
popf
sbb
and
or
xor
call
sub
dec
fmull
out
jnp
mov
cmpsl
sub
or
sbb
mov
cmp
mov
das
pushf
pusha
into
stos
inc
xor
popf
pop
ljmp
mov
adc
add
lret
xor
cli
adc
add
imull
xorl
stc
loop
repz
icebp
mov
sti
dec
imul
or
and
and
icebp
mov
jecxz
not
arpl
repz
jmp
add
sbb
push
les
xchg
sbb
ss
mov
fbstp
mov
std
push
pop
cmp
ret
ljmp
dec
int
mov
sbb
int
ljmp
push
shrl
mov
cwtl
lahf
out
cmp
sahf
popa
mov
cltd
xor
dec
call
sbb
in
mov
cmp
cwtl
dec
enter
pop
adc
push
ss
cmc
mov
push
seta
or
cli
daa
movsb
shll
andl
cmp
cmp
movsb
lcall
pop
jle
cwtl
xchg
ss
mov
xchg
int3
xlat
adc
push
push
mov
xor
enter
jns
xchg
add
mov
arpl
jp
cwtl
fs
hlt
test
js
repnz
imul
mov
dec
inc
test
addr16
jp
push
lds
add
xor
fstpt
bound
out
data16
dec
popa
out
lock
lods
sbb
cltd
sbb
xor
out
and
outsl
adcb
adc
cld
pop
mov
push
push
mov
sbb
mov
push
test
and
pop
push
sbb
ficoms
ror
dec
andnps
sub
lods
cmp
int
lcall
hlt
xchg
mov
mov
mov
push
insl
in
iret
xchg
xchg
lahf
mov
movsl
icebp
or
mov
push
xlat
push
pop
ljmp
dec
lret
push
xor
push
mov
inc
pusha
fisttpll
aas
push
lahf
pop
lods
movsb
negb
dec
jp
inc
sbb
imul
cmp
push
mov
repz
fstpl
and
dec
lods
scas
into
xor
lds
les
sub
xor
mov
into
cmp
ds
incl
cwtl
imul
insb
adc
dec
aas
roll
mov
cmp
add
es
scas
push
ja
mov
xchg
pop
sub
jle
sahf
test
push
jns
out
movsl
sbb
sub
inc
mov
jecxz
xchg
dec
add
sub
mov
and
mov
in
lcall
and
jo
andl
sbb
pop
aaa
dec
jnp
mov
push
xchg
mov
dec
mov
mov
sbb
leave
movsl
push
aas
push
mov
repnz
test
mov
adc
push
mov
outsb
scas
and
jmp
jb
mov
cmp
cmp
lods
sub
outsl
int3
and
ljmp
inc
enter
scas
ret
jmp
daa
daa
fsub
jecxz
inc
les
stc
pushf
inc
aaa
test
jecxz
shrl
mov
xchg
test
gs
ds
pop
inc
fstp
cli
push
jl
test
leave
pop
nop
scas
mov
push
mov
rolb
or
addr16
loop
xor
sub
shll
mov
std
mov
pop
mov
cmpsl
xor
jp
jmp
push
add
or
pop
add
test
fmuls
fidivrl
loop
cs
or
sarl
pop
jae
inc
add
push
jno
sbb
aaa
fidivl
loopne
je
lret
and
cltd
push
cmp
addl
call
mov
jnp
cmp
mov
jne
insl
outsl
shll
mov
scas
mov
popf
out
xchg
in
push
lahf
enter
es
lods
or
jae
lret
out
mov
jnp
inc
add
shll
mov
jno
sarb
mov
movb
or
mov
mov
mov
fstpl
sbbl
lret
sub
mov
sub
mov
push
mov
push
xchg
je
xchg
pusha
jg
sahf
add
mov
sbb
fcmovnbe
push
mov
inc
iret
aaa
ljmp
sahf
rcll
in
in
clc
scas
es
jmp
repnz
arpl
push
add
push
jnp
add
aad
fs
out
inc
mov
aad
loopne
js
movsb
in
aaa
ja
aam
mov
xor
stos
sbb
cli
jo
xchg
sub
xchg
fdivrs
stos
movsb
mov
dec
daa
ljmp
fwait
inc
xchg
mov
cmpsl
mov
ret
dec
fadd
popf
adc
repnz
pop
push
les
mov
jbe
faddl
sub
xor
cmp
xor
and
icebp
scas
lea
movsb
mov
pushf
andb
push
xor
mov
into
pop
or
mov
imul
test
into
cld
and
push
jecxz
and
adc
add
adc
jnp
inc
addb
adc
mov
add
pop
sbb
jbe
sbb
add
mov
jno
dec
lret
das
sbb
insb
hlt
or
lods
xchg
ror
or
mov
ret
mov
xchg
mov
imul
iret
das
sbb
fldcw
test
xchg
mov
enter
push
arpl
frstor
or
add
mov
inc
pop
mov
lods
push
mov
mov
inc
add
push
cs
insb
or
ret
scas
add
adc
aas
sbb
mov
adc
popa
shlb
std
push
jge
stos
std
out
push
lds
ljmp
add
xlat
lods
mov
add
movsb
cmp
lock
movsb
xor
ss
ret
dec
xchg
xchg
test
jp
sbb
mov
std
pop
inc
mov
cmp
test
xchg
jo
sub
imul
jb
xor
cmp
arpl
push
xchg
pushl
int3
imul
sbb
pop
lret
mov
mov
pop
add
aas
or
inc
mov
mov
gs
jp
movsl
sub
cs
das
mov
in
push
add
lahf
sbb
fcoml
or
pop
jp
xor
fadds
dec
inc
cmp
and
cmp
leave
adc
popa
xchg
inc
mov
push
sub
xchg
mov
cltd
arpl
pop
stc
xchg
movl
lahf
mov
pop
test
sbb
iret
xor
ds
notb
bound
mov
bound
repnz
xor
add
mov
int3
xchg
or
shrb
cltd
out
mov
movb
rorl
mov
cmp
cmp
jbe
sbb
mov
dec
mov
inc
scas
out
mov
mov
and
imul
test
in
pop
icebp
fwait
pusha
add
add
fdivp
scas
cmpsl
mov
nop
jp
mov
test
insl
je
mov
dec
cmp
stc
addr16
xchg
lret
les
scas
std
popf
sbb
fs
pop
push
sub
pop
mov
pop
test
add
add
xchg
fwait
scas
or
lret
insl
sbbb
fldenv
and
mov
inc
cmp
pushf
inc
test
pop
mov
jno
mov
bound
push
lea
inc
and
xlat
add
pop
aas
divb
loope
sub
lret
sub
in
push
aad
stos
push
sarl
popf
pop
push
test
gs
xchg
xorb
loopne
cmp
arpl
andb
inc
int
add
out
insl
pop
out
arpl
xchg
loopne
stc
adc
fnstenv
aad
aaa
rsm
lods
inc
loope
pop
xlat
cmpb
cmpsb
mov
inc
pop
lret
sub
add
cmp
sbb
test
jmp
mov
sbb
pop
ret
test
and
mov
sub
pop
mov
cld
and
std
jb
pop
leave
ficompl
imul
push
fiadds
stos
add
add
inc
ss
pop
mov
lahf
ret
adc
sub
lods
shll
movsb
ud0
movsl
testb
lcall
and
repz
movntq
sub
add
insb
push
sahf
jecxz
shr
arpl
push
cmc
call
fnstcw
test
sbb
fdivl
mov
sub
push
div
test
add
add
mov
push
repnz
mov
lds
mov
int3
mov
xchg
adc
and
ja
pop
jmp
pushf
jg
or
lcall
and
mov
stc
imul
xchg
rorl
je
test
ds
inc
data16
negl
cmc
sub
hlt
ret
into
jge
je
jb
scas
sub
jo
sbb
jo
pusha
cmp
nop
push
mov
or
mov
dec
xor
mov
add
sub
jbe
xchg
mov
mov
xlat
leave
std
or
addl
mov
psrad
gs
imul
dec
lea
adc
int
dec
andb
aas
aad
cmpsb
js
inc
lds
cmp
and
sbb
clc
leave
push
pop
xlat
lods
xchg
cwtl
insb
hlt
inc
xor
xor
out
or
pop
sub
clc
jo
ja
mov
xchg
add
std
pop
inc
sar
in
jmp
das
xchg
loopne
push
popf
loope
mulb
addl
jnp
lahf
pop
pop
jp
fwait
negb
cmc
xchg
push
cmpsb
mov
xchg
jmp
lahf
sub
es
rolb
in
fnstcw
or
jnp
pop
sub
jno
ss
sub
cmp
dec
push
out
xchg
leave
jnp
pop
cmp
mov
mulb
outsl
js
sub
pop
daa
jecxz
test
shrl
adc
cmpsl
add
or
fisttps
in
negl
dec
mov
jp
loope
fsub
push
inc
cli
xchg
mov
push
mov
dec
jg
sbb
mov
cmp
stos
cmpsb
push
jecxz
out
loop
push
in
sbb
gs
add
out
sub
fs
into
sbb
or
cmpsl
pop
shll
mov
mov
scas
fbld
sbb
dec
dec
fidivl
sti
and
xor
or
xchg
popa
out
xor
mov
idiv
mov
shrl
cmpsl
xor
ja
pop
xlat
imull
cmp
lock
mov
mov
ds
lock
popa
mov
std
jp
leave
mov
cmp
dec
rcr
stc
sub
pusha
xor
je
inc
mov
mov
jbe
fdivl
fsubrp
add
sti
stos
call
jo
xchg
adc
dec
pushf
and
div
xchg
and
adc
sahf
xchg
lahf
jmp
jb
xor
inc
dec
lods
mov
lcall
xchg
cs
idivb
clc
and
adc
imul
sbb
fxtract
xor
jo
add
push
xor
lods
pusha
js
movsb
push
adc
add
dec
cltd
mov
sbb
adc
dec
sbb
arpl
mov
or
pop
inc
push
fiadds
pop
adc
pop
push
ds
ret
push
shll
test
mov
dec
out
into
cmp
lahf
jns
decb
addr16
fdivrl
insb
jecxz
adc
rclb
mov
leave
popf
ret
pop
mov
out
mov
out
inc
push
jno
jae
mov
out
push
jl
push
ds
pusha
and
lea
stc
jp
enter
jns
in
ljmp
or
fs
inc
mov
mov
xor
add
test
sbb
in
or
mov
clc
push
cli
mov
push
dec
xor
cmp
ret
cmc
add
sti
cmpsb
je
ds
mov
mov
push
pop
fistl
mov
cwtl
mov
pushf
dec
andb
lea
ja
inc
lods
jge
call
leave
ja
push
jns
mov
sub
loop
mov
sbb
mov
orb
push
cmp
adc
pop
cmp
into
cmpb
ret
imul
int
mov
jecxz
icebp
cli
clc
inc
scas
cmp
sbb
jmp
stc
xor
jb
cwtl
test
push
std
or
push
jmp
sbb
movsb
sub
sub
int
sahf
jb
call
mov
ffree
add
in
dec
pop
test
cltd
mov
cmp
sub
jecxz
push
xchg
mov
pop
cmpsl
xor
push
mov
or
rcr
aad
ss
jge
sub
and
inc
push
jbe
das
adc
into
mov
mov
arpl
inc
ja
jnp
mov
push
lahf
push
dec
jb
pop
icebp
test
pusha
les
jbe
lea
imul
loopne
xlat
jp
xor
sub
sbb
mov
jmp
fisubrs
sub
in
adc
jae
int
leave
cmp
mov
inc
adc
nop
sbb
cmc
push
sub
repnz
jno
and
or
int3
out
movzbl
dec
hlt
inc
stc
inc
adc
xchg
das
inc
aad
gs
out
xor
dec
jmp
dec
dec
cmp
ret
daa
int
push
arpl
or
stos
sub
fistpl
nop
test
sbb
in
cmpsl
pushf
mov
sub
outsb
mov
cmpsb
rorl
xchg
xor
xor
add
adc
push
mov
jbe
lods
xor
mov
sti
das
mov
mov
shrl
stos
add
inc
outsb
dec
add
dec
pusha
pop
push
int
xor
mov
dec
jp
sbb
dec
and
sbb
push
das
es
sahf
jge
movsl
xor
jmp
mov
pop
punpckhwd
sub
test
jne
lods
inc
or
inc
inc
xor
or
dec
filds
jmp
xor
mov
add
test
stos
mov
test
mov
dec
xchg
adc
outsl
out
pop
out
xor
or
cwtl
mov
mov
jle
loop
xchg
add
clc
mov
int3
sub
xchg
enter
gs
std
icebp
lret
and
dec
push
lods
pop
add
lahf
adc
out
mov
mov
inc
inc
fdivs
cli
lcall
mov
sub
mov
in
out
push
stos
xor
mov
out
movsl
push
jns
sub
sti
mov
pop
fimull
jbe
rcr
dec
dec
pop
jmp
adc
out
sarb
stc
rclb
loop
scas
or
cmp
pop
sbb
sbb
iret
dec
push
cmc
inc
movsl
cli
dec
inc
stc
clc
jo
jmp
jne
ljmp
dec
popa
push
dec
push
mov
push
test
push
jmp
leave
sub
add
xor
sbb
or
dec
push
jns,pn
mov
ret
mov
sbb
inc
dec
or
mov
push
push
push
pop
or
cmp
jl
leave
jno
mov
shlb
mov
int3
cmp
ss
or
xchg
mov
inc
jg
dec
addl
fadds
sbb
cmp
test
mov
mov
mov
and
xor
inc
inc
dec
das
sub
cmp
mov
and
xor
insb
ds
pop
fcomps
lock
jecxz
jns
and
cmpsl
sub
pop
mov
cld
jo
jmp
mov
cmp
adc
aas
mov
inc
add
dec
dec
push
shlb
xor
mov
test
inc
mov
bound
xchg
sahf
daa
mov
ret
push
aad
mov
jge
xor
jae
ljmp
dec
inc
movb
pop
jns
dec
adc
xor
repz
in
mov
sub
inc
jle
or
int
outsl
ljmp
orb
fstps
lret
std
lahf
sahf
push
mov
and
add
nop
push
mov
jbe
lret
rcl
push
mov
shl
ficoms
out
xchg
jb
call
mov
roll
mov
jae
popf
fdivs
and
push
fildll
jo
lahf
adc
jo
in
rolb
xchg
dec
out
cli
scas
scas
ret
sbb
clc
test
or
xorb
daa
cld
pop
scas
out
pop
and
lock
cmp
fdivl
aaa
cltd
inc
es
in
jge
push
loopne
jno
imul
xor
loopne
cmc
jp
cmp
xchg
mov
mov
into
lods
insl
daa
pop
in
jne
repz
aam
pop
jnp
ja
xor
icebp
xor
and
mov
pop
outsl
cld
fdivs
cld
fnsave
add
test
out
sub
pop
push
adc
adc
icebp
das
inc
decb
jns
or
xchg
push
and
fldcw
cmp
xchg
mov
rcrl
aas
pop
icebp
mov
stos
iret
mov
cs
test
mov
aas
cmp
movb
xchg
add
mov
xchg
lock
push
inc
iret
testb
cmpsl
xchg
pop
data16
xchg
movb
xchg
cmp
sbb
inc
pop
inc
and
mov
mov
sub
dec
loopne
xor
ret
in
movsl
enter
mov
push
pop
dec
pop
rcrl
inc
cs
movsb
hlt
mov
sbb
jp
push
adc
shll
aaa
pop
stos
addr16
sbb
mov
incl
adc
sbb
mov
sarl
pop
fwait
lods
fisttps
enter
mov
lret
inc
sub
clc
cmp
fstps
gs
icebp
jb
mov
lds
cs
mov
xor
sub
aam
inc
sbb
mov
sub
gs
lret
pop
mov
mov
pop
roll
mov
push
test
jecxz
icebp
push
add
fmuls
cmpsl
inc
or
ficomps
lret
repz
aaa
sub
xchg
fiadds
sub
test
push
outsl
mov
inc
xlat
mov
mov
cmpsl
shlb
xchg
add
adc
jno
mov
adc
stos
mov
pop
aam
std
sbb
xchg
inc
daa
push
gs
popf
sarb
jl
arpl
inc
adc
mov
dec
pop
pop
lret
popf
out
inc
shlb
jle
gs
jns
lret
mov
insb
xchg
xlat
push
jecxz
shrl
xchg
sub
mov
and
int
cmp
mov
fwait
loope
mov
ljmp
mov
inc
push
enter
shl
test
mov
xlat
pop
add
mov
int3
sbb
clc
xchg
pop
aam
mov
adc
pop
and
and
shlb
shlb
imul
inc
sub
loop
push
xchg
add
popa
mov
sbb
push
shlb
mov
mov
mov
stc
xchg
inc
enter
xor
shrl
in
orb
fnstsw
or
out
notb
inc
rorb
daa
xchg
ret
or
mov
push
adc
inc
cmp
aam
shl
subb
mov
mov
cmc
icebp
addr16
dec
test
cmp
sbbb
fwait
add
push
xchg
shll
xorl
xchg
cli
cmp
pop
in
fists
xchg
inc
lret
xchg
es
xor
adc
dec
push
inc
outsl
adc
mov
xchg
xor
xor
push
scas
cmc
test
sti
cmpsl
inc
bound
add
cmp
inc
mov
popa
pushf
pop
lds
xchg
loop
dec
push
mov
popa
inc
popf
dec
push
popa
mov
dec
aam
and
jg
icebp
push
hlt
push
sbb
scas
add
inc
xchg
and
xchg
jle
daa
daa
adc
and
scas
mov
loope
dec
lds
notb
add
pop
mov
dec
icebp
les
call
jecxz
mov
mov
je
sar
arpl
pop
mov
cwtl
call
sub
sbb
push
cmc
sub
lods
andb
pop
dec
outsl
sti
pop
movsl
push
lock
jae
sub
dec
pop
mov
jl
add
int3
cmp
pop
lock
mov
mov
cmp
xchg
add
push
push
aam
into
imul
sbb
stos
in
ret
add
clc
ret
hlt
in
sub
sbb
shll
cs
aaa
imul
mov
inc
daa
test
mov
fcomps
inc
ret
xchg
in
sti
jae
insl
into
cmp
dec
out
mov
cs
dec
cltd
push
int3
test
dec
fistpll
in
xchg
aam
lcall
dec
push
iret
xor
jge
enter
js
movsl
inc
shlb
ja
aas
frstor
jge
scas
xchg
insl
aaa
or
jp
and
or
inc
dec
ror
ljmp
cwtl
cltd
or
pop
lret
push
call
xor
xchg
sub
add
jge
test
aas
mov
mov
cmp
mov
mov
push
js
xor
outsb
xchg
stos
mov
xor
lods
dec
push
mov
popa
pop
push
xchg
mov
cmp
push
push
scas
push
inc
aam
mov
dec
mov
ja
leave
mov
sbb
mov
add
sub
neg
push
pop
and
jg
push
ja
add
je
push
mov
stos
or
mov
test
lahf
movsl
movsl
nop
and
dec
outsl
lea
gs
stc
mov
pushf
clc
je
movsl
jo
cmpsb
das
jno
into
fcmovnb
or
cmp
in
xor
nop
mov
mov
inc
insl
in
es
and
adc
int3
inc
ret
nop
inc
popa
xchg
repz
outsb
xor
cmc
daa
int3
mov
mov
jecxz
enter
loopne
cs
fcomps
scas
mov
xchg
fdivl
int
inc
test
popa
in
call
lret
and
dec
insl
lods
dec
lret
in
call
sub
xchg
incb
jl
xor
aas
xchg
xor
fld
push
inc
push
add
jl
sbb
pusha
inc
inc
push
std
or
cmp
sti
xchg
and
ret
push
jne
sbb
dec
mov
addb
icebp
dec
xor
in
xchg
and
sti
mov
jecxz
out
loopne
leave
adc
pushl
mov
pushf
adc
hlt
decl
mov
push
dec
in
push
cmp
lock
mov
pop
test
add
stc
sbb
imul
or
lcall
xor
mov
jae
test
push
and
adc
adc
xchg
dec
add
faddp
stos
adc
insl
cs
mov
mov
insb
ficomps
mov
test
cmc
pushf
mov
lods
cmp
lds
push
movsb
lock
rol
movsb
and
adc
in
stos
mov
je
push
fadd
stos
pop
mov
cmp
inc
std
icebp
adc
cli
fs
pop
test
mov
aam
ja
movsb
shl
rclb
sbb
xchg
pop
inc
insl
adc
jmp
sub
aaa
sbb
cmp
sbb
mov
cmc
dec
cmp
mov
xor
add
loopne
fwait
and
dec
sbbb
pop
xchg
scas
jecxz
adc
icebp
sub
sub
clc
arpl
fildl
in
mov
lods
mov
shrb
xor
push
mov
pop
clc
in
dec
mov
inc
shll
push
scas
adc
iret
cli
push
insl
xor
pushl
cmpsb
mov
hlt
fidivrs
or
sbb
fninit
ljmp
jecxz
lock
lods
insl
popa
sbb
mov
push
gs
pop
adc
dec
fs
mov
sub
inc
mov
fdivrl
fmull
jbe
cmp
jl
ljmp
xor
dec
jno
sahf
test
aaa
ret
jne
mov
int
int3
sbb
sub
add
dec
xchg
push
mov
push
cli
subl
mov
lods
out
cmpsb
jecxz
or
pop
inc
cltd
adc
scas
mov
mov
sbb
jno
pop
add
nop
push
pop
popa
insl
mov
add
cmp
adc
ret
dec
jecxz
mov
and
pop
jno
pop
pop
in
adc
adc
mov
mov
call
cmp
jnp
leave
call
shr
daa
repnz
mov
into
ljmp
jmp
mov
rorb
or
js
mov
in
aas
mov
sub
mull
jmp
repnz
dec
in
sahf
or
push
sbb
cmpb
inc
loope
jg
scas
lret
ds
ja
into
fisubs
lods
loope
addr16
cli
jp
push
aam
outsl
jns
stos
mov
mov
test
sub
je
mov
sahf
xchg
pop
sarb
test
mov
jmp
dec
push
xor
sahf
push
movsb
jle
xor
jo
jmp
into
push
lods
mov
or
clc
xorb
cwtl
fimuls
aad
cmp
lea
and
jo
orl
dec
cmp
int
pop
orl
aas
or
sub
add
jge
push
sahf
int3
xchg
lret
in
js
cmp
pop
stos
push
mov
cmp
int
inc
dec
jp
lret
aas
or
xor
mov
lock
mov
add
repz
sub
dec
es
sub
loope
mov
jbe
in
stos
fneni(8087
shll
stos
fcoml
es
fwait
mov
pop
rolb
cmp
pop
data16
shrl
and
rclb
psllq
es
in
mov
cmp
and
lahf
push
pop
cmp
dec
call
inc
orl
mov
sub
fstpt
scas
dec
adc
jge
and
mov
test
push
xchg
inc
jmp
std
ljmp
adc
fisttpl
scas
in
fwait
xchg
mov
outsb
or
push
inc
mov
inc
xor
jnp
aam
jns
dec
or
scas
aam
or
mov
cmp
popa
out
dec
mov
les
adc
cmpsl
xchg
dec
pop
sub
mov
push
out
popa
roll
jge
fadds
jge
mov
xchg
mov
fbstp
pop
xchg
or
pop
add
shll
mov
subl
mov
mov
subb
gs
int
xor
fldt
scas
cmpsl
mov
jg
nop
and
aam
mov
es
inc
adc
or
dec
sti
int
pop
adc
or
aad
sub
imul
shrl
inc
dec
mov
pushl
stos
lds
cmpsb
in
mov
shl
ret
cmp
sub
xor
in
lret
rcl
cs
and
mov
pop
jnp
cmc
jbe
mov
and
mov
and
inc
xlat
shlb
out
aad
scas
mov
xchg
pop
loope
es
enter
add
pop
push
jp
lods
sub
sub
stos
sbb
add
mov
fnsave
mov
ja
push
push
push
sbb
push
lret
sbb
iret
enter
test
sub
mov
ljmp
or
std
out
shll
in
inc
in
lock
cmp
ficoml
faddl
cmp
insb
lods
mov
jp
fisubl
mov
xorb
sub
xchg
sub
xor
insl
push
cli
and
outsb
push
inc
dec
cmp
push
xchg
push
jbe
push
pusha
idivl
xor
loopne
idivl
dec
add
jge
cld
mov
orl
pushf
pop
in
out
aad
call
aas
lods
lds
in
cmp
pop
lock
ja
sti
mov
ds
stc
and
dec
add
int
fmulp
pushf
or
mov
pusha
in
or
into
push
or
jae
add
ljmp
aam
jb
iret
pop
or
lea
sub
dec
mov
dec
inc
scas
xor
into
fsubrl
sub
sbb
xor
icebp
adc
push
or
insl
popa
dec
cli
push
insl
pop
cmp
les
movsl
aas
xchg
addr16
push
mov
dec
inc
jmp
sub
mull
xchg
jge
and
mov
repz
dec
int
cmpsl
imul
pop
aam
mov
pusha
jbe
sahf
test
clc
cmc
push
mov
dec
movsl
and
inc
dec
es
fwait
lahf
stos
fmul
cli
imul
mov
cmc
or
sbb
push
and
xlat
push
cmpsb
sbb
adc
xchg
mov
imul
test
int
outsb
pop
lea
jb
mov
adc
sub
mov
cmpsl
jmp
cmp
ss
lahf
repnz
mov
jp
ret
and
dec
sub
sbb
loope
adc
mov
mov
loop
fsubrs
dec
lcall
int
mov
sbb
movsl
dec
dec
popf
mov
stc
outsb
inc
leave
sub
adc
or
xor
aad
in
dec
mov
cmp
into
mov
jbe
mov
aam
aaa
inc
jle
test
js
sarl
loope
and
mov
enter
leave
fucomi
pushf
das
add
and
cmp
punpckhdq
and
pusha
cld
add
jg
or
loop
enter
mov
mov
sahf
inc
mov
leave
pop
and
cmp
fcompl
sub
or
and
sub
adc
inc
or
cmpl
test
push
sbb
int
mov
add
or
push
mov
dec
xchg
data16
push
xchg
js,pt
rcrb
pop
inc
jecxz
push
leave
mov
cmp
pop
cmp
stc
pop
inc
adc
mov
jne
out
sbb
mov
sub
imul
loopne
inc
and
cmp
xlat
fs
xor
pop
mov
repnz
pop
jbe
xor
or
push
xchg
pop
js
repnz
je
mov
loope
xor
jbe
inc
jg
and
cltd
aam
cmp
loopne
push
cmpsl
sub
nop
dec
maskmovq
imull
mov
adc
mov
clc
cmpsl
jge
jmp
jbe
stos
neg
sahf
arpl
cld
ficompl
mov
test
cmp
mov
and
call
in
push
fadds
jb
repz
int
cmpsb
jl
test
stos
xchg
mov
push
test
or
cmpsl
and
into
leave
add
andl
test
inc
adc
mov
into
push
insl
popf
jle
cmc
ja
mov
test
mov
cwtl
push
gs
clc
decl
in
stos
pop
stc
inc
nop
sbb
pop
push
xchg
adc
std
or
inc
mov
ja
mov
int
idivb
arpl
arpl
dec
jae
sahf
stc
shl
pop
adc
mov
push
cmp
and
or
negl
lock
insl
ljmp
sti
fbld
das
rorb
shlb
in
imul
push
lahf
cmp
nop
xor
cwtl
pushf
inc
push
jbe
pop
jle
pushf
enter
into
gs
cmp
mov
fdivl
into
test
xor
fsubr
dec
and
pop
push
dec
rcrl
sbb
cmp
xchg
mov
ja
xchg
inc
push
stos
push
test
jle
jmp
ds
push
sbb
lahf
or
and
jnp
test
dec
fucomi
mov
sub
aaa
mov
jg
out
jb
ret
shlb
adc
cwtl
push
jno
int
shll
cmp
in
imul
daa
mov
data16
dec
push
enter
test
sub
mov
cmp
std
xor
cmpb
or
mov
scas
xchg
mov
fwait
divl
in
insb
lret
popf
xchg
out
lret
dec
jge
dec
ffreep
jecxz
sarb
aas
mov
and
in
adc
xor
jne
push
xchg
addr16
sub
push
push
rolb
xchg
jbe
add
mov
jg
insb
out
aam
lea
ljmp
bound
xchg
xchg
mov
lock
fcmovb
add
mov
xor
push
mov
std
test
mov
fwait
in
test
dec
adc
stos
mov
jo
repnz
shll
out
mulb
repz
jg
xchg
mov
fldcw
pusha
hlt
test
jge
inc
jecxz
sub
add
gs
inc
pop
push
mov
mov
mov
adc
xor
test
jp
jg
shlb
pop
clc
lret
push
int
test
mull
push
test
cmpsl
call
mov
sti
jecxz
shlb
jnp
mov
sbb
or
mov
repz
fildll
mov
ret
mov
xchg
fldenv
pop
jle
test
shrl
ss
ljmp
push
cli
ret
sbb
clc
aas
pop
mov
cltd
xchg
out
cmp
jae
call
pop
sub
xchg
push
cwtl
leave
inc
fidivrl
xor
cmpb
and
mov
imul
push
pop
imul
sahf
jmp
loopne
adc
icebp
test
incl
mov
lret
lret
sbb
xchg
cs
cmpsb
sub
in
push
sub
int3
mov
dec
fs
das
int
adc
decb
xor
cmp
imul
and
jg
xchg
push
hlt
loop
pop
iret
movsb
dec
repnz
pop
cwtl
ret
jo
imul
sbb
cmp
adc
push
xor
xchg
mov
dec
jmp
aas
push
mov
and
mov
jnp
or
arpl
aaa
test
mov
xchg
xor
xor
xchg
jae
fdivrs
jmp
idiv
int3
flds
add
in
jmp
insb
push
loope
lea
and
xchg
repnz
pop
mov
fisubrs
xor
popa
inc
mov
dec
add
mov
bound
jo
push
inc
sarb
pop
xchg
in
int3
and
pop
es
jl
das
cmp
sbb
pusha
inc
inc
mov
iret
pop
sarl
xor
aam
mov
sub
fistpl
rcr
clc
xorl
fidivl
cld
sbb
cld
aaa
xchg
lret
in
push
int
cli
xchg
adc
repz
inc
xchg
aaa
jge
out
scas
movsl
aam
push
inc
dec
and
aaa
jno
adc
mov
sbb
div
mov
lock
jb
lret
hlt
push
lds
push
pusha
cmp
xor
adc
mov
fwait
not
mov
nop
mov
ja
push
jns
push
sarl
cltd
enter
mov
mov
aam
cld
xorl
shlb
and
mov
fwait
jbe
aad
clc
jmp
lahf
loopnew
sub
push
repnz
adc
aas
pavgw
shlb
mov
inc
ret
aad
out
into
lea
add
jmp
leave
bound
adc
xchg
or
mov
inc
ljmp
push
adc
pop
cmp
sbb
inc
mov
cli
loop
dec
add
in
mov
sahf
push
imul
std
mov
mov
cltd
add
push
clc
out
inc
ljmp
mov
sbb
fcomip
loop
adc
sbb
mov
sbb
push
data16
loopne
pop
or
nop
sbb
ds
sub
les
loopne
mov
xor
jo
fisubrs
jl
rcl
fistps
out
cmp
xchg
out
mov
push
or
lds
les
loope
popf
pop
mov
into
xor
adc
pusha
enter
shrb
imul
adc
jp
fimull
jns
cmp
push
push
or
jb
push
jno
inc
add
sbb
sti
pop
xor
and
repnz
xchg
std
push
outsb
test
inc
xor
or
jge
ds
test
inc
jl
mov
mov
dec
mov
in
and
in
sahf
rep
or
movsl
sbb
xor
inc
ja
imul
or
bound
sub
cmpsl
fimuls
ret
pop
sub
out
lret
stos
ja
mov
mov
sub
insl
es
push
or
cmpsl
dec
std
push
dec
outsb
pusha
cmp
imul
mov
and
adc
sub
or
jp
mov
lahf
pop
shll
and
cmp
out
into
shlb
out
mov
sarb
push
add
sti
and
out
add
lret
mov
out
sub
push
xchg
add
in
jl
push
sbb
jno
xchg
gs
fwait
mov
dec
pop
add
cli
adc
lods
xor
add
repnz
mov
iret
add
xor
pushf
xchg
not
fildll
repnz
cmp
jg
cmpsb
jbe
mov
rcrl
das
or
insl
pop
mov
ret
in
pusha
push
adc
xchg
rolb
mov
pop
dec
pop
out
adc
dec
push
outsl
push
inc
lea
mov
mov
jnp
fildl
loope
imul
out
addr16
cmp
pop
inc
lret
lods
mov
mov
cmpsl
sub
mov
testl
jg
jno
and
test
lret
pop
loop
add
adc
push
pop
add
daa
sbb
daa
test
in
out
mov
xlat
nop
movsl
pop
nop
mov
pop
sub
jns
adc
jns
lods
mov
push
mov
push
push
cmovb
add
pop
lcall
call
xor
mov
and
inc
mov
jo
inc
mov
push
notb
sbb
jno
mov
insb
push
mov
xchg
pop
roll
sbb
in
cmp
shl
sub
cmc
das
js
add
repz
sub
xor
add
add
pop
pop
sub
insb
xchg
jle
gs
mov
lcall
arpl
push
jnp
sbb
and
jno
jecxz
mov
ds
ficoms
sub
lret
aas
stos
loopne
stc
ljmp
dec
mov
loopne
push
jae
mov
or
cmp
in
aad
adc
loopne
shr
fwait
icebp
dec
or
sub
lret
adc
mov
pushf
fsts
sbb
es
loope
sub
push
in
and
cmp
pop
cmpsl
add
adc
dec
sbb
lcall
notb
lea
jmp
xor
mov
in
pop
or
lcall
movsb
jp
movsl
mov
ja
cmc
add
lds
negl
lods
ss
lods
arpl
idivl
mov
out
cmp
fcoml
ja
mov
inc
xor
jmp
jg
lret
ljmp
rorb
xlat
xor
mov
lahf
push
mov
test
test
and
dec
leave
das
sub
and
or
mov
mov
add
stos
test
inc
sbb
loope
data16
in
push
fistpl
xor
mov
test
fiaddl
inc
pop
adc
dec
imul
ret
xor
jle
xchg
dec
xchg
sbb
mov
mull
xchg
insl
or
scas
ficoms
mov
data16
adc
mov
enter
ror
call
fwait
mov
mov
mov
jp
aas
shlb
popf
add
rcll
inc
jmp
xorb
xchg
pop
in
nop
stc
insl
test
xor
cli
push
add
push
sbb
and
push
out
int
lahf
and
es
shll
adc
loopne
push
pop
das
pusha
pop
jno
in
and
mov
insb
ret
dec
and
inc
jge
inc
ret
push
js
and
addb
and
push
adc
mov
sbb
or
pop
mov
dec
ja
and
mov
into
int3
fisubs
pusha
in
jle
pop
rorb
test
jp
and
inc
xor
enter
ljmp
cmp
add
fisttpll
popa
or
inc
mov
addr16
mov
sbbb
cmp
and
bound
sbb
repnz
add
inc
xlat
sti
jmp
or
add
and
or
mov
pop
jne
mov
ja
jmp
lcall
popf
mov
pop
adc
push
xor
or
fwait
xor
jmp
in
mov
ds
int3
and
sub
fldenv
cltd
xchg
movsl
fldcw
pop
adc
test
cmp
push
andl
ficompl
jg
cwtl
pop
and
mov
push
xchg
jg
movsl
and
mov
pop
jecxz
icebp
or
clc
out
mov
aaa
stos
xchg
mov
in
ret
xchg
add
stc
xor
mov
pop
mov
mov
clc
mov
setle
push
nop
dec
push
test
dec
daa
or
mov
sbb
and
lds
sub
sbb
sbb
pop
push
and
mov
push
fstps
cltd
punpckhwd
jo
jle
add
call
lret
lds
mov
out
mov
push
push
sbb
mov
mov
pop
adc
cmp
insl
into
mov
fdivrl
xchg
movsl
pop
jmp
shlb
iret
jne
mov
inc
jmp
push
jno
mov
xchg
fidivrs
dec
iret
xor
jp
cmp
aam
int3
push
lock
or
ja
adc
push
popf
icebp
ror
loopne
pop
mov
fwait
adc
dec
push
mov
out
cmp
sub
inc
cmp
pop
cmp
or
pop
jb
jmp
int3
enter
icebp
xchg
sbb
out
cmp
ljmp
stos
inc
idivl
sbb
in
mov
sub
inc
dec
inc
jb
mov
lea
inc
cmp
lcall
mov
mov
inc
jl
mov
idivl
fists
dec
xor
jns
or
scas
pop
sahf
adcl
mov
mov
add
sbb
pop
out
movsb
or
jle
jns
js
inc
jl
ret
fstp
loope
mov
movsl
adc
sub
sbb
jbe
sbb
xor
fucomip
pop
xor
movb
xchg
dec
push
or
adc
fstl
jmp
xchg
pop
pop
fcom
les
inc
and
and
fildll
mov
mov
sub
mov
mov
push
jmp
jp
ss
cs
lea
test
and
xchg
aaa
stos
je
cmpsl
add
xor
loop
out
stos
leave
in
arpl
imul
insb
test
das
or
pop
jnp
repnz
imul
test
cmp
or
fisubl
fnstcw
pop
jnp
jns
push
loop
jne
in
out
aas
mov
fistpl
jne
enter
shl
dec
pop
popa
cmpsl
and
mov
or
sub
fdivrs
out
fs
pop
push
leave
mov
test
lret
pop
cmc
inc
adc
pushf
cmp
inc
mov
loopne
test
push
lret
inc
aas
test
ret
sub
call
xchg
in
inc
shll
cltd
push
push
loopne
or
xorl
adc
adc
add
movsb
sub
fisttps
pusha
xchg
sahf
mov
add
aam
aam
xor
repz
in
jg
daa
int
repnz
ret
pusha
jb
xor
push
xchg
nop
adc
xchg
outsb
lcall
push
out
lds
add
mov
and
out
lea
xor
dec
sub
outsl
sbb
mov
jae
pop
dec
pop
lcall
xor
mov
inc
xor
mov
xor
dec
fwait
inc
lock
test
aad
sbb
mov
lret
lahf
inc
loopne
inc
push
xor
cmpsb
cmc
or
imul
std
xchg
adc
xor
pop
dec
lock
es
out
mov
xor
xchg
lds
repnz
out
imul
xor
jno
stos
lret
inc
dec
je
sbb
pop
pop
bound
in
mov
cmp
cmp
cmp
in
mov
outsl
pop
daa
bound
dec
mov
fwait
in
adc
mov
xor
sub
pop
pop
loope
outsl
sbb
out
xor
adc
popa
dec
adc
outsl
push
lret
cmpsl
and
mov
jmp
js
jp
movsb
jmp
and
fsubl
bound
cmp
xchg
inc
push
test
adc
adc
stc
cwtl
mov
xor
mov
into
testb
push
xlat
ljmp
cmpsb
jbe
fistpll
xchg
xchg
fidivl
and
mov
mov
push
out
mov
cmp
pop
mov
sbb
fwait
adc
cmp
leave
adc
lret
inc
iret
adc
mov
xchg
xchg
in
fisubl
jno
jo
inc
mov
jne
cmp
es
out
das
out
cmp
jecxz
push
and
pop
sbbl
cltd
movsl
sbb
jbe
fisttpl
pop
out
stos
add
test
adc
inc
cmc
mov
ficomps
and
je
dec
push
test
addb
fwait
push
push
insb
mov
push
or
push
ret
mov
xchg
xor
push
sub
out
pop
mov
sub
jle
jmp
enter
shl
and
cli
mov
mov
or
repnz
jp
sbb
das
jg
push
rcll
in
push
mov
dec
mov
fld
in
dec
dec
mov
mov
insb
js
test
xchg
cmp
add
aaa
std
inc
inc
sahf
sub
sbb
sub
push
mov
test
call
movsl
stos
lock
aad
mov
les
jns
ja
jl
or
cmp
push
sub
jle
mov
je
call
in
and
mov
jo
add
mov
mov
and
dec
push
aaa
call
sbb
rclb
add
add
push
pop
pop
jg
bound
daa
cmp
cmpsl
outsb
push
outsb
push
push
inc
dec
enter
mov
sub
xor
out
mov
mov
xor
stc
sub
pusha
or
and
jg
ret
fwait
mov
clc
dec
jg
jge
mov
cmp
pop
and
and
cld
repz
mov
lds
roll
and
pop
xor
jl
out
lock
test
xor
dec
jns
mov
pop
push
adc
dec
movsl
cs
ffree
loopne
bound
hlt
sub
das
mov
inc
jge
pusha
xchg
outsl
mov
and
int3
out
shll
fcompl
in
adc
cmovl
inc
sub
jb
mov
std
gs
or
xchg
enter
mov
mov
sbb
xor
test
add
pop
and
cmp
inc
jno
or
cmc
jno,pt
and
lods
loope
inc
repnz
dec
push
stos
xor
aas
pop
xchg
test
bound
xor
add
adc
cld
pushf
int
or
sub
dec
lcall
inc
push
xor
sbb
das
ljmp
fisubrl
iret
out
imul
vpmaxub
bound
adc
mov
jns
mov
ret
addr16
mov
lea
leave
lea
dec
adc
movsb
insl
pop
and
xchg
push
inc
fsubs
loope
dec
repz
adc
push
jae
aaa
lahf
xchg
mov
mov
jb
sub
sub
push
call
inc
call
lahf
sbb
scas
shl
repnz
sbb
mov
mov
mov
daa
movsl
fldcw
arpl
push
ja
push
stos
mov
and
ret
loop
add
aaa
scas
loopne
lea
add
sbb
xchg
inc
neg
push
jne
scas
loope
cmp
fucomip
sub
pusha
jae
xchg
out
push
out
cld
testl
mov
inc
aas
sahf
dec
or
or
enter
icebp
repnz
mov
mov
iret
test
push
pop
mov
ret
push
stos
iret
cld
rclb
cli
in
test
jno
fidivs
ret
pushf
ja
scas
fs
dec
in
ds
pusha
mov
aaa
sbb
ffreep
mov
insl
xchg
insl
test
std
dec
bound
or
adc
mov
lcall
add
test
jae
adc
popa
mov
jle
inc
sbb
mov
mov
in
lret
mov
push
fwait
popf
cmp
stos
stos
mov
pop
lock
adc
aaa
adc
adc
icebp
mov
std
out
cmp
jnp
mov
pop
cmp
and
xchg
stc
fildl
fcmovnu
test
nop
scas
cmp
adc
outsl
xchg
pop
sub
negb
jg
cmp
sbb
push
lcall
sahf
outsb
pop
cmp
rcr
dec
cmp
xor
test
je
add
and
imul
jae
movsb
int
sub
in
insb
iret
push
xchg
mov
pusha
lods
jb
cmp
es
lock
enter
mov
mov
clc
cmp
hlt
imul
leave
scas
movsl
xor
or
adc
mov
mov
adc
xor
adc
push
push
lds
push
mov
outsl
lods
je
scas
test
repnz
shr
cmp
mov
inc
xchg
add
jo
in
jno,pn
aad
popf
out
das
test
stc
pop
stos
xor
mov
jge
adc
xor
push
adc
dec
out
jbe
inc
sbb
cmpl
push
add
jmp
xor
nopl
out
in
pop
and
mov
dec
lahf
xchg
movsl
inc
std
mov
out
fsubrl
sbb
push
cwtl
sbb
fsub
lret
mov
push
sbb
mov
jecxz
xor
cmp
test
xchg
mov
xor
xchg
push
mov
movsb
add
cs
shrb
xor
sarb
inc
or
fdivrl
fidivs
lea
push
rcrb
lret
xchg
xchg
test
sbb
inc
push
push
insb
inc
sbb
retw
cmp
pushf
sub
into
shll
mov
push
outsb
imul
test
lods
mov
cmp
xchg
std
out
js
and
sbb
dec
mov
xchg
es
addb
scas
add
sub
cmc
insl
xor
sbb
ret
pop
imul
ja
int3
aad
ds
mov
cmpsb
cltd
mov
test
std
rolb
das
pop
aam
pop
outsl
push
clc
movsb
aad
mov
xor
lea
mov
dec
push
shll
and
jne
inc
ljmp
and
push
shl
gs
scas
test
dec
mov
xchg
orl
push
sahf
jo
scas
pop
sti
adc
rcll
mov
lea
xchg
ret
mov
std
adc
mov
and
xor
sbb
dec
dec
adc
inc
fwait
sbb
xchg
test
aam
push
cmc
or
ja
testb
mov
or
push
stos
mov
dec
in
ret
mov
lods
dec
loope
cmp
push
push
sub
push
int3
xchg
cld
and
push
add
fmull
xchg
pop
inc
lds
mov
adc
repz
fbld
rsm
imul
out
dec
out
sahf
inc
and
inc
sbb
push
mov
mov
int3
dec
imull
sbb
loop
mov
lods
test
xchg
shl
rcl
dec
cmp
dec
mov
lret
add
pushf
insb
jmp
cmp
xchg
sbb
repz
stos
push
jp
sbb
xchg
push
jp
push
ret
or
aad
mov
lock
es
js
adcl
push
inc
rorb
add
or
popa
jae
pusha
push
inc
popf
scas
jmp
clc
movsl
cwtl
mov
jge
loope
lret
sub
icebp
dec
fwait
icebp
in
das
mov
jne
cmpsb
test
ja
loope
movsb
andb
andb
xor
jge
mov
sub
mov
mov
ss
stos
mov
scas
sub
dec
fwait
sar
das
xchg
add
mov
cwtl
fwait
push
testl
inc
imul
jmp
lock
xlat
mov
mov
fcoml
cli
hlt
int
sub
mov
stos
push
scas
addr16
dec
jbe
in
lock
mov
and
test
out
and
sbb
jbe
adc
mov
jns
mov
mov
push
cli
int
sbb
sbb
stos
sbb
into
inc
push
sbb
mov
jo
add
dec
xchg
addr16
stos
stos
in
lods
pushf
out
push
mov
outsb
pop
shll
in
jecxz
cmpb
daa
fnstsw
inc
and
jp
punpckhbw
cmc
cmp
cmp
pop
rclb
or
loop
sub
mov
or
pop
and
iret
inc
mov
mov
mov
shll
cmpsl
push
sahf
and
jg
inc
in
jmp
call
mov
sbb
or
jbe
pop
decl
mov
push
pop
fists
stos
or
push
leave
push
pusha
xchg
shll
push
add
out
and
mov
pusha
jecxz
push
rcr
hlt
xchg
xchg
mov
fdivp
hlt
push
cltd
jbe
dec
inc
pop
mov
icebp
stos
cmc
inc
test
ljmp
fs
addr16
mov
mov
lret
push
sti
shll
cltd
xor
xchg
pusha
and
sub
sub
popf
push
xchg
mov
fs
bound
stos
push
inc
push
sub
cmp
sarl
shll
jnp
and
test
mov
mov
xor
add
rolb
adc
shlb
inc
mov
xchg
dec
mov
fstl
insb
fcompl
outsl
jbe
dec
repz
mov
push
popa
bound
mov
movsb
xor
mov
push
fisubs
push
sub
push
xchg
jne
mov
push
cwtl
cmpsl
addl
je
sub
adc
push
neg
stos
fcmovnbe
xor
and
push
aas
loopne
xchg
mov
mov
pause
and
aam
and
jge
call
xor
xchg
mov
imul
fstp
aam
jae
jge
daa
ss
shrb
or
sbbl
das
and
lods
ss
sbb
push
hlt
orl
cmp
fldt
dec
test
mov
xchg
inc
aas
jae
imul
mov
and
fldcw
mov
push
cli
sbb
jmp
push
push
lret
pop
loopne
mov
sbb
test
xchg
mov
nop
dec
shr
arpl
mov
cli
adc
push
stos
lods
or
and
sahf
lret
and
xor
mov
sbb
push
sub
mov
cmpsl
cmp
insb
add
xchg
adc
icebp
in
xchg
mov
fisubrs
push
push
xor
mov
push
or
cmpsb
js
stos
xor
gs
repz
push
xor
push
inc
pop
in
jle
call
dec
stc
js
mov
popf
les
cmp
push
into
std
aaa
ljmp
popf
mov
loop
lds
jge
dec
je
jle
out
fistpll
and
jb
add
aas
adc
jle
push
push
pusha
push
lret
stc
stc
sbb
xchg
mov
mov
outsl
dec
pop
repz
push
loopne
roll
imul
inc
xchg
out
dec
aas
or
cmp
faddl
mov
xor
inc
loope
leave
cmpsb
inc
fsubrl
mov
xchg
jge
push
inc
stos
push
jns
outsb
cmpsb
outsb
mov
pop
ret
lea
dec
fdiv
fimull
into
mov
filds
in
dec
push
xchg
jge
add
ja
ljmp
scas
rorb
testl
push
cmp
push
inc
pop
lock
outsb
mov
leave
push
cli
mov
inc
lods
mov
mov
adc
inc
pusha
pop
out
lea
add
popf
push
pop
andb
mov
dec
in
decl
push
cltd
sbb
fidivrl
lods
ret
cmp
push
mov
pushf
xor
call
xor
bound
xor
into
andb
jecxz
fdivrl
mov
lret
mov
xor
jp
ds
mov
lahf
fwait
ret
mov
repz
lret
out
mov
sub
and
in
push
aaa
mov
aaa
sbb
fiadds
aad
sbb
push
int
call
and
call
mov
ja
mov
jl
scas
cmp
int
lods
cwtl
stos
ds
movsl
dec
mov
or
xor
popf
popf
test
int
sub
xchg
subb
or
mov
pusha
loop
fcomps
push
lcall
sti
cmpsb
xchg
arpl
enter
jle
stc
pushf
insl
in
rcrb
sub
inc
or
dec
lahf
imul
and
mov
adc
outsb
imul
pushf
jno
pop
leave
notl
out
mov
rclb
loopne
movsb
cmp
cmpsb
nop
xchg
in
popa
dec
xchg
xchg
icebp
std
lock
lods
in
imul
lea
mov
stos
cmp
pop
jne
xchg
add
fildll
test
mov
ss
je
leave
fsubrs
cbtw
stos
push
dec
aas
rorl
popa
and
lret
int
xchg
jb
rolb
or
add
lods
incl
mov
cmpsb
movsl
ja
out
dec
in
dec
jae
lods
cmp
xlat
lea
inc
push
adc
inc
mov
pushf
jmp
sub
inc
or
fisubrl
fstpl
mov
push
cmc
pop
aad
loopne
outsb
sub
and
nop
sub
and
push
repnz
adc
xorl
es
adc
daa
jmp
push
lahf
jmp
enter
push
outsl
dec
xor
push
xchg
jge
cmc
je
push
push
lret
xchg
add
jne
push
subb
insb
adc
lea
push
jle
jecxz
jnp
push
cmpsl
stc
xchg
leave
mov
ret
addr16
cmp
add
test
cmp
in
pop
jae
mov
mov
inc
les
call
mov
jns
and
test
mov
jae
sub
mov
in
mov
cmp
iret
mov
and
and
sbb
dec
loopne
in
shll
add
inc
int3
or
fldt
pushf
test
nop
sti
out
fiadds
aad
shrl
sub
mov
mov
jecxz
or
dec
push
xor
cmpsl
popa
outsl
jp
lret
fcom
dec
pop
dec
popa
cmc
xorb
and
stc
jl
dec
aaa
add
repnz
icebp
outsl
aad
cmp
cltd
fsubp
xor
dec
xor
lea
movsb
xchg
cwtl
push
jmp
stos
pop
jmp
into
into
push
xchg
sbb
xchg
pop
cmpsl
add
bound
jge
fimull
sti
mov
mov
sub
pop
shlb
add
and
ljmp
jl
shlb
out
notb
addr16
mov
adc
mov
stos
inc
and
sbb
loope
shr
dec
dec
sub
sub
add
daa
fldcw
negl
popa
stos
xor
inc
leave
popa
sbb
dec
inc
or
jge
cmp
jge
mov
or
cs
xor
push
ja
jb
rcr
ficomps
lcall
push
jmp
lret
into
pop
mov
pop
jo
ds
push
xorb
jg
xchg
aas
sbb
cmp
inc
dec
dec
aaa
insb
movsb
jbe
xchg
pop
scas
inc
cmp
jbe
pop
lcall
aam
repnz
xor
or
jge
push
sub
cltd
rorl
in
inc
ja
sbb
out
xor
xchg
and
xchg
je
aad
sbb
xchg
dec
negl
jne
push
aaa
daa
mov
inc
mov
insl
adc
cmpsl
fs
push
movsl
adc
cmp
xlat
mov
xchg
aas
in
bound
lds
jo
movsl
ds
cmp
cmpsl
int
inc
mov
jne
add
mov
inc
and
add
add
test
popa
shl
lcall
pop
std
enter
add
dec
push
inc
cmp
insl
shlb
sub
pop
xor
sahf
shll
sub
cmp
cmpsl
cmpb
and
lcall
iret
mov
add
fwait
lret
sbb
lret
adcb
inc
aaa
fsubrs
rorb
dec
cmp
mov
mov
mov
lcall
iret
sbb
mov
jno
push
mov
push
stos
push
lret
shl
sti
pushf
mov
and
rolb
ffree
aad
xchg
adc
dec
popf
enter
ja
cmpsb
mov
sub
mov
cmpsb
and
arpl
jecxz
mov
clc
sahf
xor
ja
xchg
add
jae
mov
xor
pop
jg
mov
xor
and
shll
jle
je
mov
clc
pop
stos
sahf
idivl
xchg
addr16
lds
dec
sub
add
dec
fwait
leave
out
int
stc
jl,pt
or
int
pop
mov
xor
mov
push
jbe
push
out
iret
mov
sub
sub
jecxz
pop
inc
pop
dec
out
push
mov
leave
jns
sub
adc
sarb
sbb
sbb
stos
out
insl
dec
inc
stc
in
leave
mov
jns
std
mov
arpl
dec
and
inc
sahf
lods
movsl
mov
ss
repz
xor
sahf
dec
push
sahf
push
cmp
rcrl
decl
sbb
clc
mov
out
pusha
pop
inc
arpl
add
incb
inc
jg
inc
or
addr16
or
adc
in
and
push
lea
push
and
test
sub
push
test
jge
ret
jns
les
fwait
bnd
sub
gs
or
sub
lods
sub
jbe
pop
pop
arpl
sbb
bnd
lret
xor
in
add
lods
adc
sahf
sub
mov
scas
mov
aad
or
pop
mov
mov
cmp
pop
out
movsb
sbb
aad
pusha
xchg
inc
hlt
daa
mov
mov
adc
fdivs
fimuls
daa
lea
adc
cmp
dec
fwait
jo
setl
push
icebp
or
icebp
push
pop
mov
push
and
scas
aas
xor
sub
out
xchg
push
mov
lret
es
mov
insl
std
xor
sub
into
nop
or
cwtl
pushf
mov
jno
pop
fadds
aad
add
pop
adc
xor
dec
add
mov
fldl
into
xor
fbstp
push
jns
ret
mov
addl
jecxz
sub
cmp
sbb
std
fstp
lahf
test
pop
orl
loop
ds
mov
rcl
mov
jge
xchg
pop
dec
cmp
adc
inc
mov
mov
add
nop
ret
js
push
adc
fldt
adc
sbb
dec
mov
pop
dec
in
dec
stc
or
jp
sub
jmp
cmp
pusha
fwait
test
call
ljmp
std
divl
pop
inc
cltd
sahf
call
lcall
cmpsl
ss
xchg
loopne
inc
test
loope
dec
getsec
jo
jne
cltd
mov
daa
jns
loop
sub
xchg
add
dec
mov
push
test
mov
loopne
pop
arpl
je
hlt
xchg
stc
repnz
adc
adc
test
cli
lock
int3
and
sub
mov
push
inc
or
inc
fldl
ljmp
mov
xchg
std
and
xchg
iret
push
mov
cwtl
loope
ljmp
and
xchg
enter
cmp
jmp
lods
xor
jne
cs
or
mov
jno
dec
xor
lret
or
movsl
inc
dec
and
call
lea
xor
sbbb
pop
sahf
test
imulw
adc
jge
push
sarl
insl
test
and
inc
cmp
mov
sbb
dec
repnz
repnz
mov
jb
outsb
scas
inc
jg
or
sarl
pop
jbe
push
xchg
and
mov
adc
add
lods
xor
stc
push
jae
adc
xchg
ret
rorb
lock
jecxz
pop
faddl
mov
inc
out
loope
test
aas
popf
lock
adc
mov
call
das
add
adc
mov
mov
mov
mov
jne
cmp
mov
fisubrs
dec
jge
lods
je
jp
daa
xor
sbb
jge
and
push
xor
rorb
imul
aad
popf
ss
mov
jmp
cmc
xchg
adc
mov
lds
pushf
push
in
inc
mov
push
dec
cs
dec
sub
ret
gs
inc
inc
or
and
shrb
push
mov
imul
adc
or
pop
sub
repz
stc
jge
jnp
call
pop
sub
fnstenv
dec
adc
cs
enter
test
rol
outsb
out
pop
push
push
in
lea
insb
mov
dec
or
and
jnp
inc
dec
insl
mov
fwait
xor
mov
ret
popa
call
fidivs
scas
and
hlt
xchg
push
and
sub
lret
mov
push
ss
loop
or
push
enter
or
movsl
hlt
loope
pop
cmc
bound
out
loop
push
sub
test
add
mov
sbb
push
imul
lods
ret
fsubrp
je
adc
inc
iret
std
mov
sub
mov
mov
inc
or
inc
mov
pop
popf
jmp
xchg
mov
pop
add
jmp
fsts
cli
test
out
call
imul
cmpsb
js
outsb
pop
aaa
dec
out
or
test
push
cmp
mov
mov
loop
or
mov
or
gs
mov
cmp
xchg
rcrb
vhaddpd
out
aaa
fnstenv
aam
cld
mov
insl
jbe
outsl
sbb
cmp
pop
push
jmp
xor
or
imul
add
push
mov
lock
inc
xor
out
jl
jns
mov
pop
imul
mov
jno
mov
jmp
into
cmp
outsl
test
mov
xchg
pop
or
imul
test
dec
adc
addr16
lret
lea
imul
sub
je
aam
lods
dec
add
aad
ljmp
nop
jnp
cmp
mov
dec
fisubrl
and
adc
fdiv
es
cs
mov
decb
push
rclb
movsl
sbb
push
dec
cmp
nop
test
js
xor
movsl
cmp
fxch
jge
cmp
cld
cltd
adc
push
xor
and
fbld
dec
jmp
loop
and
adc
push
orb
imul
mov
mov
repnz
mov
push
pusha
stos
and
stc
ffree
insb
pop
shl
add
arpl
sub
lret
shll
cmp
cmp
test
rorb
lods
dec
in
mov
pop
stos
or
mov
popa
popf
loop
and
adc
lods
sbb
push
mov
pop
lcall
pushf
or
push
lea
scas
mov
loope
push
mov
stos
jecxz
xor
das
jmp
movsl
or
pop
adc
pop
or
jge
xchg
sbb
clc
adc
insb
insl
rcll
repz
iret
sahf
clc
sub
sub
clc
notl
cmp
idivb
call
in
jb
sbb
adc
clc
aaa
pop
aas
cmpsb
adc
cld
mov
sub
pop
dec
add
fnstcw
cmp
push
xchg
mov
mov
out
std
mov
outsb
xchg
repnz
iret
add
xchg
add
add
test
lea
cmp
ljmp
imul
push
or
xor
aad
cmpsl
sub
scas
push
cmc
js
cmpl
push
mov
jge
aas
pop
mov
pop
int
mov
repnz
jp
test
mov
xor
mov
xlat
adc
repnz
vshuff32x4
icebp
lock
xor
pop
out
xor
or
and
sbbl
repz
sarb
jno
movsl
leave
outsl
jmp
mov
outsl
pop
lret
jae
adc
dec
hlt
leave
cwtl
stos
mov
push
push
pop
into
les
dec
xchg
xchg
sbb
rorb
mov
jl
push
mov
cmp
push
adc
inc
jl
mov
or
repnz
leave
es
mov
cs
gs
jl
adc
sub
clc
mov
xchg
mov
adc
insb
outsb
push
xor
adc
push
push
popl
fstl
imul
pop
lods
incl
ds
popf
cmp
jmp
bound
popf
mov
loopne
lea
mov
mov
iret
stc
adcl
add
xor
cmpsl
xchg
ret
cltd
sub
bound
scas
add
das
cmp
xchg
xchg
shrl
xchg
insb
jae
push
movsl
adc
jno
pop
ds
jae
add
or
es
adcl
int
adc
jecxz
mov
cmp
js
int3
popf
adc
or
xchg
jmp
mov
aad
xchg
push
jle
xorl
xor
jmp
cmc
sbb
jns
mov
push
mov
mov
fucomi
pusha
xchg
lahf
loope
pop
inc
or
jns
xchg
mov
xorb
movl
sahf
or
ljmp
into
rorb
xor
cmpsb
push
jmp
push
mov
lahf
cmp
dec
and
mov
arpl
cmp
mov
jno
leave
jo
stc
in
pop
and
jbe
pop
popa
inc
fstpl
push
jecxz
clc
out
mov
enter
xchg
pop
popa
cmpsb
cmp
dec
lcall
xor
mov
insl
push
mov
std
enter
lds
adc
test
shlb
scas
enter
mov
fwait
mov
xchg
pop
dec
mov
mov
xchg
sub
test
and
jmp
rorb
or
jl
out
shll
jmp
mov
ljmp
pusha
mov
xchg
aad
divb
mov
inc
popa
insl
pop
xchg
push
or
in
mov
mov
lods
jmp
xchg
lods
jne
pop
pop
jle
mov
loop
aam
addr16
dec
pop
jmp
add
or
popf
push
call
into
jp
inc
xorb
jns
push
cmpsb
lea
popf
lcall
push
test
inc
andl
xchg
divb
xchg
sbb
push
test
dec
or
mov
xchg
and
jne
jl
jl
fistl
dec
or
ss
pop
xor
imul
xchg
shll
in
mov
out
sub
in
dec
movb
pop
les
dec
rorl
or
add
dec
jg
stc
and
mov
push
push
pushf
jl
push
mov
adc
mov
stos
push
shrb
ret
lods
jge
push
mov
push
sub
fcompl
sub
jg
fcmovb
lea
or
les
lret
and
xchg
adc
jbe
fwait
sub
scas
pop
push
stos
jnp
cwtl
mov
jne
and
sti
inc
push
mov
push
lds
fbld
sbb
xor
sbb
icebp
jp
call
pop
sbb
dec
sbb
rcll
xchg
pop
jmp
mov
push
or
in
and
and
xor
daa
dec
fisttpll
mov
loopne
divl
sbb
gs
dec
or
dec
ja
dec
xor
sahf
mov
mov
in
fdiv
es
ds
andl
daa
imul
pop
mov
loope
loope
xor
push
cmp
jle
adc
xchg
scas
adc
mov
jl
imul
xchg
mov
sbb
inc
mov
push
push
xchg
mov
mov
jmp
out
and
ret
js
xchg
jnp
outsb
test
xor
jp
je
neg
mov
lods
in
ds
ljmp
or
aam
lods
jne
lods
jne
sbb
mov
mov
jb
sti
push
ret
loopne
sbb
add
stos
sahf
xchg
jb
inc
xchg
and
dec
jmp
stos
aad
jle
addr16
ss
add
iret
push
and
mov
cmpsb
gs
dec
sbb
mov
int
push
jg
ljmp
push
aam
sub
mov
adc
pop
jle
ret
cmp
push
mov
mov
push
jno
or
adc
lea
fnstenv
fwait
or
and
adc
push
inc
fildll
add
jecxz
addb
jmp
ss
inc
mov
mov
push
mov
loope
jl
les
ficoml
adc
mov
mov
insb
pop
cmp
shl
daa
int3
enter
fcoms
sbb
lret
inc
aam
iret
jecxz
sahf
xor
jle
lret
sbb
mov
xchg
push
insl
mov
pop
sub
test
lods
mov
pop
inc
xchg
xor
jecxz
sub
pop
or
pushf
and
jmp
dec
sbb
mov
inc
and
lret
pusha
pop
add
out
mov
cmp
sub
xchg
adc
in
insb
std
or
adc
sarb
jge
mov
sbb
nopl
scas
lods
mov
in
add
mov
fnsave
in
dec
rcll
push
pop
rcrb
gs
mov
fxch
pop
cltd
testb
je
inc
pusha
inc
subl
fdivrl
ljmp
das
test
adc
shlb
insb
les
sahf
movsb
imul
xchg
push
decb
pop
repnz
xchg
inc
ret
mov
jmp
add
jmp
inc
or
jnp
and
inc
sub
out
daa
imul
mov
les
sub
mov
jb,pt
jp
pop
js
andl
cmc
inc
dec
ds
fisttpll
inc
icebp
insl
fisttpll
pop
test
push
stos
lret
stos
fnstsw
loope
mov
or
fsubrl
lods
out
push
data16
and
mov
cmc
jbe
pop
mov
addr16
jmp
mov
jmp
dec
add
push
xchg
filds
mov
jb
out
aaa
mov
fwait
push
inc
ds
pop
mov
mov
jle
movsl
inc
mov
push
cmpsb
cmp
mov
mov
xchg
inc
mov
pop
enter
mov
ljmp
jmp
aaa
adc
enter
mov
daa
ror
pop
aad
outsl
mov
and
jne
pop
push
jmp
jp
arpl
sub
gs
xchg
dec
and
jns
push
sub
test
mov
daa
dec
jmp
sbb
lods
mov
insl
popf
adc
push
mov
sbb
scas
cmp
sub
xchg
inc
jle
sarb
das
jbe
xor
sarb
inc
or
daa
sti
sbb
fldt
jp
add
sub
cmp
sbb
fistps
sub
cltd
leave
stos
mov
int3
std
fs
mov
xor
add
ret
aaa
sbb
mov
sbb
cwtl
xlat
incb
or
sub
add
lret
mov
xchg
xchg
sub
divb
pop
insb
cmp
pusha
cmp
xor
fadd
pop
mov
lcall
adc
int
arpl
rcrl
cwtl
mov
add
xor
and
xchg
jae
addb
sarl
test
xchg
or
push
aaa
mov
add
jo
test
jo
pop
es
adc
and
insb
and
pop
clc
and
aas
subl
mov
loopne
les
sub
outsb
and
jge
cmpsb
pop
xchg
enter
pop
or
notl
adc
adc
adcb
push
fisubrs
cmp
fistps
and
push
movsl
or
or
mov
loopne
add
push
mulb
inc
inc
test
push
mov
push
sub
ficompl
cld
fadd
loopne
cmpsl
pop
mov
push
dec
out
insl
fisubl
sbb
clc
sub
cmp
mov
mov
pop
pop
sub
dec
sbb
pushf
pop
xchg
adcl
sahf
loop
stc
cmp
or
lret
adc
enter
xor
sub
mov
mov
or
data16
mov
and
mov
jecxz
pop
aas
stos
pop
xor
and
ljmp
push
insl
fsubrp
add
xchg
push
mov
lret
fdivl
dec
jae
fnsave
out
leave
imul
cs
dec
lds
pop
outsb
inc
cmp
mov
push
adc
mov
mov
inc
stos
and
mov
cwtl
lods
test
frstor
mov
int
sub
test
mov
out
push
or
mov
xor
jb
ret
insb
xor
arpl
pop
mov
push
js
aas
adc
ret
fdivr
xchg
and
xor
gs
inc
dec
add
xor
inc
scas
inc
sbb
inc
or
stos
cwtl
aad
mov
adc
cwtl
lret
fs
pop
and
adc
push
pop
fadds
movsb
iret
mov
and
insl
cmpsl
mov
bound
mov
testb
push
and
testl
das
loope
outsb
sub
out
lods
cli
jl
push
or
icebp
ja
sub
sti
mov
repz
js
cmp
xchg
imul
lods
repnz
imul
mov
ja
lock
pushf
dec
fstpl
cwtl
and
repnz
lods
mov
and
shrb
mov
int
push
push
cmp
sub
mov
test
cmp
imull
adc
ja
pop
cld
xlat
pushf
or
lods
jmp
pop
sub
bound
shr
in
push
sbb
inc
or
mov
inc
int
jecxz
xor
cltd
cmpsl
cmp
sub
adc
iret
inc
mov
inc
ret
into
vsubps
xchg
push
icebp
scas
push
and
adc
pop
cmpsb
out
fucomip
outsb
cmp
xchg
jae
mov
cmp
dec
scas
fwait
inc
mov
hlt
sbb
xor
mov
add
fwait
movsl
sub
jnp
pop
hlt
inc
aad
test
inc
cmp
xchg
jnp
prefetchnta
into
dec
dec
pushf
cmp
or
xchg
or
jmp
inc
and
push
ror
outsb
aas
push
jnp
insb
lea
cmp
cwtl
lock
pop
sarl
mov
pop
out
fisttpl
and
addr16
cmpsl
cld
fcmovu
bnd
out
jo
cmp
sti
sub
jb
jo
xlat
pushl
outsb
or
shl
lcall
ljmp
cmp
mov
sbb
push
fs
fimull
add
aas
jle
std
mov
mov
cmp
mov
insb
xchg
pop
sub
add
clc
rcrb
fstpt
cmp
xor
sbb
mov
pop
sti
dec
lret
ret
es
mov
push
ss
stos
imulb
sub
leave
sub
push
mov
inc
pop
enter
mov
lret
jno
or
mov
xor
test
icebp
mov
push
arpl
pop
xchg
cwtl
sti
push
dec
inc
jg
jns
dec
xlat
cmp
xchg
pop
push
addb
ss
popa
add
fcomip
mov
adc
je
fnstcw
fcoms
scas
gs
sub
push
je
add
scas
add
insb
lcall
sub
hlt
int3
loop
mov
imul
dec
push
sbb
sub
bound
add
fsubp
cld
aaa
iret
dec
push
in
hlt
xor
enter
shll
xor
fsubr
fdivl
sbb
popa
xor
push
movsb
xor
daa
nop
nop
test
xor
sbb
cltd
jno
xor
dec
and
mov
lahf
xchg
mov
mov
imul
or
lahf
fmull
xchg
lahf
mov
sub
rcrb
jno
mov
int3
jl
mov
adc
inc
mov
leave
lods
jbe
pop
mov
push
mov
cmp
in
leave
fdivl
cld
mov
clc
lcall
jecxz
repz
jle
leave
outsb
out
incb
sub
or
jns
data16
dec
inc
jmp
test
inc
sti
loop
cwtl
adc
add
sub
jb
movsl
loope
mov
mov
test
mov
push
lock
push
clc
push
jle
push
insb
adc
and
out
xor
mov
dec
inc
sbb
xor
mov
cmp
or
insb
jg
inc
pushf
imul
jg
push
shll
dec
cld
xchg
cmc
xchg
rcll
and
jmp
and
mov
out
xor
cmc
push
mov
ja
inc
jne
mov
mov
ss
mov
inc
xchg
push
sbb
mul
dec
push
popl
jp
push
add
jb
cmc
repnz
fidivrl
sbb
ja
pcmpgtw
in
data16
lret
into
cli
sbb
push
repnz
push
xor
cmp
xor
cmc
clc
mov
arpl
push
mov
jae
cwtl
jb
push
repnz
dec
mov
mov
fsubrl
add
std
inc
sub
pushf
outsb
xchg
shl
ficompl
push
sub
push
out
ficompl
ret
gs
nop
inc
push
das
daa
cmpsb
inc
mov
out
movsb
ds
adc
and
in
pop
dec
arpl
mov
stc
xchg
mov
mov
add
xor
ljmp
inc
and
scas
test
je
pop
sub
dec
repz
daa
popa
xchg
pop
xchg
jmp
les
pop
pop
push
mov
movsb
call
xchg
inc
mov
aas
pop
dec
and
jb
fcomps
scas
mov
ljmp
ret
mov
sbb
arpl
subb
push
flds
push
mov
push
inc
ja
lods
imul
sbb
add
xor
push
ja
das
test
xorl
lods
dec
xor
add
dec
clc
cmp
jne
pop
mov
test
insl
jle
cmp
in
popf
mov
clc
jp
jecxz
lcall
pop
mov
jge
push
stos
push
and
fucomp
dec
pop
jb
jge
or
mov
out
mov
jns
stos
mov
bound
cmpsb
add
dec
adc
pop
sbb
add
fnsave
pop
test
popa
lds
pop
sub
das
les
mov
push
lcall
mov
cmp
cmp
dec
repnz
and
xchg
pop
inc
stc
xor
imul
stos
push
or
push
dec
imul
inc
sbb
push
mov
imul
cmpsl
lahf
test
scas
mov
cmp
ficoml
or
lods
loopne
fstpl
dec
fcoms
aas
repz
hlt
xor
neg
mov
into
jns
sbb
std
das
adc
or
mov
or
cmp
hlt
cltd
and
lods
add
xchg
in
dec
ss
sbb
sbb
enter
fildl
test
push
test
cltd
js
pop
jle
test
cmp
outsl
mov
add
lret
fidivrl
shrb
cmp
xor
imul
lea
pop
mov
xchg
xor
test
stos
xor
and
mov
xor
sbb
dec
xlat
adcb
sti
jae
jno
or
outsl
mov
sarb
fs
iret
faddl
jecxz
outsl
arpl
cmpsb
hlt
sbb
lret
cld
adc
out
aaa
iret
leave
sbb
data16
sub
mov
mov
dec
gs
dec
leave
cmp
std
test
es
pop
inc
into
mov
sbbl
push
lret
jl
cs
js
aas
je
lds
fildl
xchg
pop
mov
sbb
jmp
and
out
out
mov
mov
aaa
test
arpl
fbstp
ja
and
adcb
imull
mov
std
add
shll
mov
xrelease
pop
movsb
pop
dec
out
xor
fidivrl
inc
sbb
dec
stc
fdivrs
js
cli
ss
mov
inc
cmp
push
and
testb
arpl
test
ffreep
ret
sub
mov
sahf
enter
xlat
mov
cmp
and
adc
xlat
idivl
aaa
sub
sub
pavgb
mov
sbb
mov
mov
lahf
jmp
sub
loopne
mov
jmp
dec
test
or
ja
push
cld
jmp
movsb
mov
xchg
repz
pop
stc
xchg
sub
dec
inc
cmp
jmp
in
xchg
outsl
ljmp
mov
xchg
icebp
out
jl
cli
mov
adc
cmc
cmc
sub
icebp
fcmovnb
int3
xchg
lret
cmp
inc
jno
jbe
push
int
test
jo,pn
dec
add
jnp
jge
sbb
adc
mov
ds
mov
xchg
pop
adc
popf
cmc
jne
pop
lret
inc
lahf
adc
pop
addr16
and
cmp
lahf
test
xor
xchg
test
mov
dec
repnz
pop
adc
test
into
shlb
imul
div
mov
test
daa
lret
mov
fcomps
cmpsl
xchg
ds
imul
in
je
mov
popf
xor
cmp
push
push
and
nop
insb
out
cld
inc
and
sub
stos
push
sbbl
dec
enter
gs
test
stos
mov
sub
push
sub
std
push
fwait
jg
cmp
adc
pop
push
mov
or
rcr
divb
jno
and
icebp
jmp
add
mov
jne
subl
mov
sub
add
enter
sub
mov
pop
lods
out
je
cmp
jg
ss
push
pop
sbb
cwtl
lret
cmp
jb
ljmp
mov
xlat
push
std
add
adc
std
outsl
push
int
and
rcll
aam
sbb
and
ljmp
sbb
sbb
jg
ret
dec
daa
ds
js
pop
fwait
xchg
leave
fildl
mov
fdivrs
sbb
lods
mov
cmp
lods
sub
xor
cmpsb
lods
push
sbb
xor
pop
push
loope
sbb
cmc
aaa
popf
jl
in
in
sub
out
into
or
or
aam
ljmp
inc
sti
add
mov
inc
push
out
pop
or
repnz
insb
mov
cs
ror
fadds
repnz
cli
adc
fsubs
dec
jmp
icebp
test
xchg
dec
lock
cwtl
sub
inc
movsb
jns
push
mov
dec
js
popf
dec
fs
loope
mov
push
push
or
insb
inc
push
jnp
out
mov
movsl
je
lret
scas
jo
cmpsl
pop
addr16
or
test
mov
xor
leave
jg
cli
or
and
pop
inc
insb
sbb
mov
je
fldenv
lret
inc
les
repnz
gs
push
pop
in
imul
imul
xchg
sub
fcomip
mov
mov
sbb
cmc
out
fmulp
xor
popa
incl
and
xlat
mov
cs
jns
push
outsb
dec
stos
lea
and
out
mov
xchg
jb
or
add
inc
loop
inc
cmp
adc
jp
scas
pop
or
repz
adc
jle
dec
bnd
sarb
jo
into
outsb
fistpl
clc
jge
lcall
das
or
mov
and
rcl
scas
pop
adc
sbb
outsb
js
jno
mov
jp
fsubrs
sbb
outsl
push
movsl
shrb
aas
sahf
cmpsb
fs
hlt
pop
push
lods
leave
pop
mov
nop
jne
xlat
xlat
xlat
pop
pop
stos
aaa
push
pop
mov
fs
test
cmp
in
sbb
sbb
and
mov
fdiv
inc
scas
loop
pop
mov
pop
adc
inc
int3
sub
aaa
mov
push
fstl
mov
push
test
cltd
sti
loopne
jno
add
cmp
lahf
je
test
sub
jo
into
dec
or
cmpsb
movsb
test
sbb
add
popf
inc
push
addr16
or
add
xchg
add
add
cld
repz
outsb
pop
pop
inc
rcll
js
mov
jo
nop
adc
or
jg
fmul
aad
xor
jmp
mov
sbb
push
rep
fs
cmp
ja
mov
lods
add
outsw
cmpsl
xor
insl
scas
lods
mov
mov
mov
sub
rolb
jbe
inc
lds
hlt
lock
push
aas
xchg
rolb
bound
mov
js
mov
sub
fildll
aam
xor
mov
imul
adc
sub
xchg
in
call
and
decb
sub
mov
add
sub
cs
push
or
push
cmp
dec
fiaddl
stc
inc
cmp
jmp
imul
push
xor
pushf
rolb
push
push
fwait
or
pop
test
arpl
xchg
fildl
outsl
jmp
adc
fisttpll
sub
adc
adc
lret
popa
xor
add
push
fdivl
imul
sbb
inc
out
mov
inc
loope
push
mov
cs
mov
push
push
adc
loopw
je
fs
dec
ds
scas
fld
popa
push
cltd
cmp
push
bound
push
sbb
adc
pop
inc
cmp
mov
das
lret
mov
xchg
xchg
ds
xchg
testl
mov
dec
mov
stc
cwtl
adc
stos
mov
adc
cmp
lods
aas
push
sbb
popa
test
das
addr16
mov
test
mov
sub
xlat
and
mov
or
adc
mov
idivl
push
add
nop
xor
mov
in
icebp
add
std
ja
push
inc
rclb
push
mov
or
push
xor
mov
xchg
push
adc
cmp
jp
pushf
mov
repz
and
pop
pop
and
fucomi
push
sbb
cmp
iret
pop
les
cwtl
fwait
sub
ja
addl
sub
fcmovnbe
cwtl
dec
fcomps
jno
sbb
popf
xlat
sub
test
add
iret
imul
inc
xchg
pop
cmp
pop
aas
inc
xor
adc
jbe
and
mov
mov
popa
dec
mull
loope
fwait
andps
lock
cltd
clc
outsl
in
adc
jle
loop
sbb
lds
call
mov
sub
push
mov
xchg
mov
mov
sbb
fnstcw
out
xor
xchg
sbb
sbb
or
and
cmp
ret
cmpsb
pop
jg
dec
and
frstor
sbb
cmp
jbe,pn
icebp
in
outsl
mov
mov
push
jnp
les
jge
sbb
xorb
mov
scas
mov
ljmp
xchg
out
lock
sarb
jg
cmpsb
rcl
inc
pop
stos
and
sti
xor
cwtl
cs
les
out
inc
mov
and
int3
sbb
stos
xor
stos
out
popa
cli
cli
cmc
stos
lds
addb
dec
push
dec
mov
imul
lahf
adc
sub
push
cmp
cmpsb
jmp
jmp
mov
psraw
xchg
fwait
je
fildl
lds
fbstp
bound
out
fcoml
mov
jnp
xor
cmp
cltd
imul
jle
mov
bound
scas
fdivs
xchg
sbb
push
pushf
fidivs
pop
std
insl
sbb
pop
lds
mov
mov
jl
jmp
fldcw
cmp
cmp
hlt
inc
push
jle
loope
loopne
xor
pop
jp
pop
int
add
loopne
push
sti
sub
cmc
push
push
and
mov
sbbl
repz
pop
xchg
and
jo
sti
daa
ss
pusha
sbb
or
mov
fcoml
nop
push
mov
jnp
hlt
add
push
xor
sbb
js
mov
addr16
js
lods
shll
xchg
std
push
pop
inc
sahf
mov
add
push
icebp
and
pop
popa
jg
inc
jmp
sub
aad
cld
jp
aaa
pusha
adc
and
outsb
mov
loope
leave
mov
dec
daa
stc
in
shr
mov
int
sbb
je
pop
mov
mov
call
mov
sbb
in
sub
jnp
dec
adc
add
pop
ja
inc
test
rcll
lods
test
add
sub
js
repz
std
les
pop
daa
add
inc
iret
xchg
int3
xor
movsl
adcb
add
rcrl
dec
lret
repz
sub
ret
incl
inc
push
adc
mov
adc
mov
lret
xorb
cli
stos
jae
adc
jl
pop
mov
cmc
int3
hlt
cld
push
popf
mov
mov
sbb
outsb
dec
push
push
push
addr16
cwtl
sub
or
cli
jp
std
jecxz,pt
je
cmp
icebp
cmpsb
icebp
mov
adc
jno
dec
cmp
ret
ror
add
addr16
inc
mov
shrl
cli
enterw
dec
push
lods
mov
daa
btr
mov
insl
push
adc
lret
out
and
loope
fucom
pop
movsb
and
xchg
movsl
pop
mov
sub
dec
or
fsubrs
cmp
rcll
iret
or
arpl
xor
std
cmp
loop
test
mov
adc
push
add
sbb
lods
loope
das
test
rcr
stos
inc
add
int
mov
enter
mov
loopne
pop
lods
movsl
std
int3
mov
jne
adc
out
adc
sub
adc
jmp
xchg
in
mov
stos
add
pusha
lret
orl
fisubs
leave
add
insl
shlb
test
pop
adc
xchg
ja
subl
push
or
mov
dec
arpl
sub
pop
pop
cmpb
adc
rol
mov
push
inc
in
adc
pop
adc
call
es
mov
cmpsl
push
and
sbbb
push
mov
test
lds
dec
and
movsb
jo
jbe
subb
leave
cs
dec
xor
push
stos
pop
push
add
je
lds
cmp
pop
sbb
and
inc
fiadds
adc
js
xor
inc
sbb
sti
xor
in
jg
test
icebp
mov
movsb
inc
test
mov
leave
sub
rcl
cli
out
scas
jno
out
insl
loopne
movsl
bound
call
push
fimuls
inc
faddl
scas
iret
call
xlat
popa
pop
stos
and
mov
and
or
or
cmc
push
orb
insl
std
shr
shll
jg
xlat
or
adc
and
sbb
mov
sbb
insl
daa
mov
jmp
pop
rcl
nop
ret
and
loope
testb
lret
mov
sub
mov
loope
pop
into
cmpsb
arpl
cmp
xchg
fidivrl
enter
icebp
daa
xchg
or
daa
dec
push
sbb
fbstp
ror
mov
dec
adc
arpl
ja
aas
inc
mov
mov
jb
jo
xchg
test
js
push
dec
add
xchg
jmp
femms
ljmp
mov
insl
js
xor
push
mov
pop
pop
push
xor
rcll
pop
movsl
pop
ret
fcoml
cmpl
mov
jp
inc
pop
cld
dec
jne
aas
jb
es
cmc
inc
sub
pop
loopne
dec
push
shll
mov
mov
inc
sarb
ret
mov
cwtl
mov
fcmove
ljmp
mov
ja
insb
pop
jbe
jae
mov
and
testl
nop
adc
xchg
xchg
pop
test
lds
mov
insb
fwait
cld
divb
pop
cmpsl
mov
clc
mov
in
rcrl
push
xchg
jo
inc
addr16
les
dec
jae
dec
or
fimull
sub
popf
lds
jge
and
insb
out
outsl
ss
cmpl
fwait
in
loope
xor
sub
push
cmp
sub
fisubs
jp
pop
ljmp
test
in
mov
inc
mov
pop
loope
cmovb
push
pop
xor
sbb
ficoms
cmp
popf
mov
xchg
push
dec
inc
cmp
bnd
aad
pop
fdivrl
add
loope
test
cltd
sbb
add
lea
stos
mov
mov
adc
mov
popa
mov
mov
adcl
jo
testb
icebp
fbld
outsl
popa
cmp
xchg
adc
inc
push
cltd
or
test
and
out
adc
stos
dec
push
dec
jae
or
scas
sbb
outsb
out
push
add
sub
out
fldcw
mov
push
repnz
fildl
das
scas
pop
pop
movsl
arpl
xor
xchg
jg
int3
or
add
sub
sahf
add
out
sbb
mov
push
add
xchg
add
and
clc
sub
mov
and
adc
loop
pusha
jmp
push
xchg
and
and
cmp
sub
jo
inc
sbb
ret
jmp
notb
imul
adc
loopne
jle
add
outsl
or
and
adc
rcrl
imul
cmp
or
inc
into
dec
push
aam
stos
jnp
or
xor
imul
mov
je
xlat
in
orl
in
dec
clc
cvttps2pi
flds
xlat
xor
cmpsl
es
pop
or
insl
xor
ljmp
clc
or
cld
sbb
sar
adc
nop
out
outsb
mov
shlb
outsb
pop
inc
jp
outsb
outsb
fmuls
ljmp
out
and
enter
xchg
out
dec
pop
mov
ja
les
stos
aad
or
mov
jae
add
hlt
lea
add
xor
call
inc
xchg
mov
jns
mov
cld
mov
add
ficomps
shlb
mov
xchg
idivb
adc
fisttpl
jmp
mov
push
jecxz
xor
push
nop
xchg
xor
loopne
inc
aam
or
bnd
adc
out
pushf
mov
jb
xchg
sbb
xchg
in
sub
and
ljmp
jbe
add
stc
inc
jnp
mov
jg
fldl
mov
xor
inc
fwait
insb
add
iret
dec
and
mov
es
sbb
out
sub
push
mov
orb
fisttpl
adc
sub
inc
jbe
outsl
push
rcrl
out
loop
dec
sbb
popa
or
cli
es
add
jge
dec
cmp
adc
lds
push
dec
cmc
sbb
push
push
pop
xor
fisttps
sub
jo
cli
sbb
lret
and
lret
inc
bound
mov
sub
jo
aad
ss
scas
lcall
jo
sbb
jne
pop
lock
dec
xorl
push
cmp
add
mov
jns
test
xchg
pop
xchg
aaa
and
test
or
aad
push
insb
pop
shlb
sarl
and
jle
mov
les
xchg
push
xor
cs
push
aaa
xchg
and
adc
sbb
aas
xor
xchg
orl
mov
icebp
xchg
sbb
push
lret
push
and
sbb
jp
jecxz
int3
repz
cli
divb
call
das
fists
nop
mov
ffreep
hlt
and
imul
jmp
leave
lahf
sub
inc
leave
jl
adc
cwtl
mov
mov
mov
sub
popf
xor
mov
sbb
das
cmp
mov
jne
pop
lret
adc
dec
sub
dec
call
sahf
int
std
mov
repz
jbe
inc
cmpsl
mov
mov
pop
testl
push
push
fdiv
popf
iret
into
jb
outsb
test
adc
push
cmp
cmp
adcb
cmpsb
ss
enter
popa
addb
pop
movsl
dec
adc
andb
sarl
mov
shrl
das
jecxz
loop
into
lock
js
ljmp
mov
addl
cmp
scas
outsl
lahf
jp
inc
faddl
fisttps
cmp
mov
push
and
fsubrs
mov
sahf
mov
sbb
xor
out
roll
into
cmp
lea
sbb
mov
or
addb
pop
add
in
repz
imul
mov
mov
xchg
lret
push
push
imul
std
ret
sbb
xor
or
inc
push
movsb
sbb
sub
jns
add
mov
cld
push
sar
dec
mov
mov
fmuls
pop
add
pop
mov
mov
jg
xchg
cmc
repz
xchg
fsubs
stos
ret
mov
imul
dec
jo
xchg
add
les
jle
sub
mov
loop
clc
push
hlt
or
jp
mov
lahf
in
insb
loopne
xor
pusha
imul
loopne
push
movsb
mov
movsb
movsl
loope
lahf
repnz
data16
je
add
jmp
cli
loop
mov
dec
lods
fcomp
leave
inc
mov
or
cmpsb
xor
jmp
inc
mov
out
sbb
cwtl
ljmp
mov
sub
jp
aad
insl
xchg
fildl
jecxz
mov
loopne
scas
pop
fmuls
jecxz
addr16
and
in
cs
mov
dec
ret
and
mov
mov
sahf
lods
push
out
push
aas
mov
push
in
fsub
ret
adc
test
jno
mov
cmp
idivb
adc
pop
jecxz
adc
jns
mov
adc
adc
mov
pop
enter
adc
call
aad
loopne
lret
xor
push
lds
jo
in
push
sub
js
rcll
scas
mov
cmp
cmp
adc
mov
mov
push
push
pop
pop
test
push
xchg
insl
shll
add
scas
arpl
xchg
incb
fisttps
shlb
push
hlt
stc
jmp
adc
fcoml
sbb
push
xor
out
jecxz
xor
daa
pop
mov
filds
mov
xor
xchg
fists
xchg
movsl
sub
lods
rorl
sub
cmp
in
mov
mov
gs
mov
dec
dec
ds
sub
rcrl
lea
fimull
sbb
imul
fcoml
ret
xchg
shll
mov
hlt
push
pusha
cmp
iret
adc
sarl
test
dec
fmuls
icebp
xchg
fidivrl
xchg
push
aad
js
mov
xor
dec
test
jg
aad
mov
dec
xchg
cltd
jle
in
scas
and
and
test
push
xor
push
add
and
mov
sub
mov
cmp
pop
fadds
mov
xchg
into
cwtl
and
inc
or
xor
lcall
fs
jae
mov
mov
cltd
jns
pop
dec
inc
andl
sti
push
xchg
or
fs
repz
lods
fwait
stc
cli
mov
fs
xchg
pop
subb
lcall
notb
repz
outsl
sub
push
cld
test
mov
orl
pop
xchg
and
mov
mov
add
lcall
and
cmp
pop
jmp
mov
sub
stc
ret
mov
fcmovnbe
in
loopne
gs
pop
int
inc
jae
movsl
or
int
ja
push
loopne
xchg
mov
jp
sub
mov
dec
push
cwtl
mov
iret
orb
fldcw
adc
and
mov
sbb
fwait
mov
mov
and
rolb
je
cmp
divb
mov
and
lds
je
repnz
mov
push
int3
mov
iret
repz
sbb
sbbl
dec
add
js
in
sbb
cld
mov
sbb
cltd
pop
jae
xchg
inc
fldt
test
out
mov
test
mov
cmpsl
cltd
cmp
stos
shl
nop
aad
pushf
idivb
push
loopne
pusha
xchg
mov
rcll
push
fisubs
xlat
and
xor
push
xchg
inc
sub
movsb
ds
mov
cmpsl
push
sahf
dec
mov
sbb
pushl
mov
push
test
mov
sub
mov
xchg
adcl
mulb
xor
dec
fiaddl
jle
lock
dec
add
addw
fsts
sbb
hlt
cs
mov
inc
add
pop
dec
ror
dec
mov
sub
pop
cvttps2pi
rcrl
dec
arpl
lret
hlt
popa
jae
int3
std
scas
lock
add
shrl
or
and
push
mov
push
xchg
and
pop
aam
sbb
jnp
stos
mov
xchg
mov
cwtl
addl
or
jbe
pop
mov
lods
cwtl
xchg
mov
mov
push
and
out
push
in
jge
mov
hlt
lret
cwtl
mov
shlb
sbb
push
push
mov
lcall
adc
sbb
int
pop
and
rorb
push
int3
cmpl
mov
sbb
mov
out
adc
pop
frstor
fbld
sub
jle
shlb
cmp
popa
sub
pop
loop,pn
sbb
dec
pusha
fisubl
sbb
xchg
inc
and
push
cmp
xor
mov
cmc
push
fldenv
xchg
mov
push
lahf
dec
cmp
xchg
mov
dec
pop
jno
inc
ja
fildll
jge
cwtd
pop
jg
mov
scas
dec
mov
xorl
sbb
dec
nop
pop
popa
loopne
imul
cmpsl
lahf
xlat
inc
out
add
repnz
inc
inc
jnp
dec
jb
push
jae
mov
fwait
push
add
push
mov
pop
orl
enter
cmp
daa
jge
bound
mov
push
pop
lea
mov
sbb
jnp
push
adc
scas
shlb
mov
ss
ja
push
stc
jg
mov
int
test
pop
cs
addb
mov
sub
fs
pop
add
iret
sbb
push
xchg
out
idiv
mov
bnd
jo
aaa
mov
adc
jge
dec
ss
xor
adc
push
sbb
push
ja
int
mov
sbb
and
xchg
pusha
imul
pop
je
push
fs
push
add
sbb
test
testl
repz
rorl
jbe
push
or
fwait
mov
sbb
lea
repnz
jp
sub
xor
pop
or
fmull
push
ret
adc
popw
mov
pop
loopne
test
imulb
in
mov
lds
adc
push
push
sub
xchg
ljmp
jae
iret
rorb
or
cltd
sbbb
and
inc
pusha
cmp
je
pop
aaa
mov
jno
cld
fdivs
dec
dec
icebp
ja
ficoml
shrb
add
cltd
movsl
ror
scas
dec
mov
imul
fistl
pop
jnp
out
inc
out
jmp
insl
or
inc
scas
sub
inc
sub
lcall
mov
adc
dec
sar
ror
push
push
adcl
mov
cli
sub
jae
repz
add
and
ds
ret
movb
inc
je
jbe
loopne
jno
jo
iret
lods
adc
dec
fistps
stos
dec
jb
ret
lds
outsl
add
fsubrl
mov
lock
fldl
loopne
and
dec
fsubs
dec
sahf
sti
call
jg
sub
dec
jle
push
mov
cmp
jecxz
jno
mov
outsl
adc
dec
xor
ja
ret
mov
and
sbb
arpl
gs
stos
fnstcw
leave
into
repnz
jp
cmp
and
mov
fdivrl
sbb
out
mov
jnp
xchg
ret
in
pop
les
lds
and
cld
test
adc
mov
and
mov
mov
jne
or
or
mov
xchg
stc
ja
out
fsubp
mov
lods
inc
and
stos
or
mov
stos
clc
out
imull
in
push
mov
and
inc
imul
or
incl
out
mov
addr16
leave
scas
pop
pop
icebp
mov
add
adc
and
xchg
mov
or
sbb
lods
lods
lea
xor
loope
xchg
or
ficompl
xor
test
movsl
push
xchg
cli
pop
xorb
rcrl
out
cwtl
test
test
pop
jb
add
sti
or
or
lods
mulb
mov
push
mov
xchg
or
das
xor
xchg
stos
fmull
gs
ljmp
nop
sub
dec
mov
out
outsb
inc
mov
mov
sbb
and
int3
and
out
mov
xchg
dec
ss
movsb
add
pushf
mov
cmpsl
push
mov
insl
out
aad
inc
sub
xor
mov
xchg
les
dec
mov
cltd
jae,pn
mov
out
jb
inc
sti
ret
jno
mov
or
mov
pop
push
sub
or
gs
pop
or
shrb
and
sub
mov
int3
xor
daa
int3
adc
into
mov
into
imul
xchg
ss
dec
test
sub
mov
mov
stos
or
lret
and
outsb
aad
xchg
mov
pop
cli
popa
push
adc
mov
inc
adc
add
xor
in
iret
int3
outsb
movsb
inc
push
sbb
call
js
xchg
mov
out
push
mov
push
push
stos
lret
add
and
ljmp
loopne
in
inc
pop
out
inc
cli
pop
add
cltd
xor
adc
fwait
jns
into
sbb
mov
or
sub
call
adc
outsb
lret
add
aaa
loope
int3
and
lahf
negb
sub
push
cli
adc
add
loope
mov
and
fst
jg
clc
aas
sbbl
mov
in
dec
sub
or
lods
std
push
lds
adc
fwait
ja
pusha
jno
pushf
add
test
stc
imul
imul
dec
adc
lods
dec
lea
sub
je
out
sbb
xor
dec
push
mov
xor
sbb
scas
and
xchg
xor
je
popa
mov
ss
mov
push
inc
lds
outsb
popa
sbb
out
xchg
sub
rcrl
loopne
testb
xchg
cmp
je
xchg
rcrl
test
and
mov
mov
cs
shrl
mov
inc
cmc
aad
out
add
push
scas
icebp
in
jp
rclb
mov
out
lock
inc
gs
dec
imul
cmp
pop
arpl
mov
test
or
call
pop
or
and
inc
sub
xchg
push
or
and
jno
psubusb
inc
jecxz
mov
mov
and
pop
jnp
sub
mov
loop
ret
jnp
scas
out
mov
nop
jae
xlat
xchg
data16
out
add
xor
jae
lret
into
mov
adc
iret
push
mov
inc
movsb
xchg
cmp
push
imul
jns
and
mov
push
test
fisubrl
mov
xchg
cld
and
sub
pop
scas
xchg
jmp
fldenv
xor
into
pop
mov
imul
xor
dec
sub
jg
cmpsl
scas
dec
testl
xchg
paddusw
and
popa
dec
lret
xor
jp
fistl
icebp
nop
sahf
add
je
scas
jbe
pop
fwait
orb
xor
shll
or
sbb
jle
inc
sub
mov
adc
dec
repz
dec
movsl
andb
xor
jp
data16
arpl
jne
pop
stos
pop
int
sub
cwtl
xchg
outsl
cmpb
push
sbbl
push
pop
mov
loop
adc
mulb
movsl
and
jle
jmp
mov
shrb
imul
sub
and
or
or
jns
add
jg
add
sti
fildll
xchg
hlt
in
jne
lret
mov
sbb
dec
dec
jo
in
cli
jp
adc
mov
push
and
fdivl
mov
inc
cmp
iret
adc
lea
dec
pop
dec
inc
pop
cld
xor
jl
xlat
loopne
mov
mov
lods
sub
mov
mov
loopne
cld
movsl
xchg
cmp
add
sbb
inc
out
lret
clc
xor
xor
mov
dec
or
inc
push
xchg
and
adc
lcall
enter
dec
mov
xlat
jp
or
cmp
and
ds
bound
rcrb
push
mov
mov
stos
call
jge
xchg
push
js
push
or
sti
and
ror
out
xor
lahf
xor
sbb
lret
and
pop
fnstcw
loopne
jg
jp
xchg
add
jnp
dec
popa
xchg
mov
mov
pop
jg
jae
push
mov
pop
mov
inc
dec
test
mov
mov
shlb
pop
insb
sar
mov
pop
ja
sbb
repnz
fdivs
lods
xor
xchg
add
xor
je
inc
sub
cmpsl
inc
clc
cmp
aam
ret
xor
sbb
loope
xchg
push
stc
fstpl
loope
and
mov
mov
mov
jb
mov
sbb
or
loopne
fxch
cmpsl
adc
test
jmp
push
sbb
test
insb
cld
test
dec
pop
xor
jecxz
jecxz
jno
gs
in
in
subb
lds
incb
push
test
and
pop
ja
rcll
sbb
mov
jbe
std
in
push
mov
loope
mov
mov
lcall
addr16
xor
cli
mov
movsb
shl
xor
inc
sbb
dec
aam
push
inc
and
inc
aas
fcomip
clc
xor
jns
xchg
clc
decb
fwait
cmp
fisubrs
xor
sbb
xor
loop
insl
cmp
add
testl
xor
fildll
lret
inc
sar
subb
xchg
mov
xchg
dec
add
or
cmpsl
push
xor
push
mov
into
fsubr
xchg
sub
mov
repz
inc
jae
mov
sbb
inc
outsl
and
cmp
inc
shll
mov
jne
add
mov
mov
or
push
call
xchg
sbb
push
adc
test
sbb
fbld
mov
loopne
lret
mov
sahf
lods
mov
cmp
xchg
sbb
dec
or
push
loop
cmp
cs
mov
int
jae
mov
mov
push
cmp
jmp
inc
out
dec
xor
sub
lret
adc
fistpll
decl
sub
sub
test
pop
test
xchg
xchg
mov
fdivr
and
or
jmp
enter
outsb
movsb
push
les
pop
gs
sbb
imul
loop
mov
std
in
sub
into
or
jae
imul
imul
mov
add
int
pop
inc
scas
xchg
mov
push
sub
adc
xchg
nopl
jo
mov
test
pop
rcrl
sbb
cs
fadds
inc
movsb
jmp
jmp
mov
int
in
xor
push
repz
cmpsl
cld
mov
ret
and
pop
mov
lods
pop
sbb
dec
pop
xlat
xchg
cmp
mov
xchg
add
mov
push
pop
or
dec
movsb
xchg
cmpsl
inc
add
push
lods
jle
cmp
scas
unpcklps
imul
pushf
roll
xor
std
xchg
sbb
cli
pusha
lea
inc
mov
sub
fildl
adc
adc
push
sub
sti
mov
cs
mov
ds
inc
sbb
cli
rcrb
ds
pop
push
or
adc
cld
inc
mov
dec
sub
sti
mov
pop
xchg
int
add
and
jecxz
xchg
and
cmp
das
cwtl
mov
sub
mov
mov
pop
inc
pop
adc
fbld
sub
out
mov
imul
pushf
push
dec
xchg
add
jp
pusha
cmp
mov
insl
insb
js
inc
arpl
jle
inc
cmp
xchg
xchg
mov
movsl
push
shrl
xchg
testb
fisubs
jl
out
int
insw
outsb
sahf
mov
or
icebp
outsb
dec
sub
jecxz
and
inc
popf
sub
push
pop
cli
popa
sub
sbb
out
jb
jnp
mov
popf
popf
mov
int
and
repnz
mov
and
aad
and
jge
mov
sbb
jo
pop
ficoml
test
adc
sub
fildll
cmpsb
and
clc
cltd
int3
pop
mov
pop
iret
out
fstps
xor
in
pop
mov
sbb
push
mov
loope
loopne
mov
stc
mov
pop
inc
jno
fimuls
stos
or
stc
sti
insb
and
outsb
loopne
lods
dec
ror
dec
movsb
es
divb
sbb
or
fsubl
es
xlat
and
add
sbb
loop
inc
outsb
orl
mov
in
clc
jns
mov
and
clc
insl
and
sbb
inc
into
mov
push
out
mov
cmp
lock
sbb
dec
daa
scas
jp
dec
arpl
adc
cmp
adc
xchg
outsb
or
sbb
mov
lret
or
dec
rorl
ds
mov
stc
xchg
lods
jne
mov
bound
mov
dec
adc
sub
cs
jl
aad
xchg
mov
stos
lods
or
inc
sarb
jo
mov
call
and
inc
jle
arpl
adc
test
and
pop
cld
fnsave
jne
adc
lret
push
mov
push
add
outsb
cmpsl
push
out
clc
js
mov
adc
mov
sub
addl
sti
push
mov
loop
push
xchg
push
cmc
mov
push
push
test
scas
jle
dec
fcoml
push
mov
xor
dec
push
or
pop
fwait
mov
mov
loope
gs
iret
arpl
scas
mov
dec
inc
and
les
fisubl
ficompl
in
fsubp
and
ljmp
loopne
and
inc
int3
imul
push
cmp
lret
scas
pop
mov
call
inc
pop
insl
loop
pop
ret
gs
cmp
ss
leave
dec
mov
in
pop
in
add
movsl
aaa
push
fidivs
es
mov
xchg
pop
es
sub
mov
je
mov
sub
xchg
mov
inc
sbb
cmp
or
push
test
adc
xchg
push
addr16
and
push
std
sahf
mov
adc
hlt
xlat
pop
pop
push
out
stos
mov
dec
xchg
or
and
dec
cltd
test
pop
je
jg
mov
repnz
mov
push
clc
test
ljmp
or
fnstenv
je
pusha
and
push
loope
shlb
jg
mov
in
cmpsl
testl
mov
mov
sti
mov
or
sub
mov
das
fnstcw
mov
push
clc
mov
push
adc
ljmp
or
mov
push
cmp
pop
mov
aaa
js
stos
es
or
cmp
cli
jg
incb
test
shlb
sbb
sbb
inc
and
mov
jae
jno
xchg
je
dec
add
or
bound
scas
aam
pop
cmp
mov
lea
xor
popa
cmp
pop
inc
dec
arpl
mov
movsb
add
sub
subl
add
xor
stos
sub
and
or
mov
xor
mov
push
mov
enter
jle
mov
fmul
and
mov
cld
push
push
inc
hlt
xlat
mull
or
push
xchg
jecxz
xchg
mov
aad
dec
dec
sub
and
cwtl
fstps
test
in
mov
dec
jle
es
movsl
xchg
push
pushf
test
movsl
pop
cmp
adc
dec
mov
adc
mov
xchg
xchg
adc
xchg
sub
cmpsl
xchg
add
add
add
stos
les
mov
out
test
hlt
repnz
pusha
dec
jbe
mov
lret
cwtl
mov
repnz
adc
inc
imul
inc
inc
clc
test
shlb
ss
cmc
lea
sbb
call
lods
pop
imul
lret
adc
shl
in
adc
push
dec
mov
enter
pop
iret
cmp
cs
int3
arpl
fdivr
mov
in
xchg
stos
inc
mov
mov
xchg
sti
lock
and
pop
xor
dec
enter
xchg
not
and
lret
xchg
daa
cli
out
xchg
inc
inc
lcall
in
in
aaa
inc
or
mov
inc
jecxz
jge
popa
es
pop
mov
jg
inc
sbb
mov
xor
jmp
les
cmp
ljmp
jle
xchg
add
mov
jle
fiaddl
enter
scas
mov
sub
push
and
cmp
inc
inc
pop
mov
or
mov
aam
push
xchg
aaa
aaa
repz
movsb
cmp
cli
xchg
dec
jmp
into
cmpl
icebp
mov
arpl
rcll
fs
mov
sahf
sub
mov
xor
adc
mov
mov
insb
test
pop
call
ficoml
data16
gs
xor
outsl
fstp
lret
fistpll
sbb
test
sti
sub
inc
cmp
jmp
push
jns
shl
mov
and
adc
add
inc
bndldx
mov
andb
cmp
push
push
xor
mov
xor
notb
jg
aaa
cli
push
andb
bound
dec
dec
mov
push
push
shlb
aas
je
xchg
mov
push
stc
cli
insl
pushf
add
dec
lods
mov
push
push
push
cmp
popa
and
xor
mov
or
in
mov
testl
xor
orb
and
pushf
sbb
fdivl
mov
adc
pop
mov
adcb
xorl
inc
out
and
sbb
mul
cmc
or
jne
sti
out
mov
add
fsubs
adcl
push
bound
add
dec
and
push
pop
xchg
scas
cld
outsb
push
aad
mov
insl
cwtl
pop
cmp
mov
ljmp
inc
inc
sbb
out
pusha
gs
frstor
xchg
mov
sub
push
mov
xlat
inc
aas
dec
adc
or
int
bound
into
daa
ss
sahf
lret
xor
int
mov
fcomp
fdiv
xchg
fisubs
js
xor
shrb
les
cmp
mov
inc
pop
cmp
dec
hlt
xor
outsl
xchg
in
cmpsb
pop
xchg
psubusb
jb
and
repz
push
push
fwait
imul
lret
cmp
stos
pop
mov
xchg
mov
data16
gs
mov
lea
imul
test
aas
lea
dec
add
jns
mov
mov
xor
loopne
mov
mov
inc
or
setge
mov
sbb
cwtl
int
test
add
fisubs
inc
xchg
mov
test
into
jb
pop
xchg
sub
loopne
mov
repz
mov
dec
adc
in
add
insl
xlat
xchg
popf
sbb
data16
xor
jb
dec
mov
sub
out
cmp
lea
stos
test
ret
rorl
xchg
mov
movl
cltd
das
adc
sbbl
adc
ds
imul
mov
jmp
test
xor
jb
dec
icebp
stos
int3
lahf
and
xlat
xor
in
inc
push
ljmpw
rolb
popa
outsl
pusha
sub
imul
pminsw
push
jno
out
add
fwait
arpl
cmpb
mov
incl
decb
mov
aad
sbb
jp
cmp
xchg
out
jae
fstl
sub
adc
hlt
push
fisttpll
mov
inc
sbb
iret
cmp
daa
jbe
in
jnp
adc
inc
pop
enter
cmpsb
loopne
dec
add
andb
xor
loop
adc
pop
and
mov
push
stc
mulb
out
cmp
sub
mov
jb
push
push
fcom
out
insl
and
pop
cmpsb
shlb
test
xchg
jbe
sub
push
and
mov
xor
lods
clc
les
mov
mov
pop
xchg
fdivl
xchg
sub
fwait
pop
addr16
shrb
dec
add
pop
loop
pusha
push
xchg
push
pop
out
js
cmp
in
add
lret
ret
push
sub
int3
mov
mov
cs
cmp
pop
xchg
loop
dec
mov
push
xlat
sub
pop
and
adc
jns
iret
push
xchg
push
cltd
pop
rclb
jne
lret
std
inc
sub
repnz
insl
xor
xor
dec
or
pushf
stos
jmp
bound
rcl
sbb
daa
lock
aad
jnp
js
addr16
repnz
or
cmp
cmp
dec
test
rcrb
inc
dec
cmp
add
push
mov
adc
aad
ds
mov
add
nop
push
add
iret
and
fstps
mov
sbb
insb
and
and
lahf
addr16
adc
mov
int3
rorb
dec
rcll
jno
or
int
or
mov
mov
cmp
call
cltd
xlat
push
mov
fnsave
out
inc
jecxz
int
push
or
xchg
xchg
mov
jne
cmp
fisubl
jae
loopne
adc
in
ja
add
push
push
or
bound
adc
jno
mov
add
subb
jbe
xor
jmp
pusha
and
lods
frstpm(287
fs
sub
push
addl
addb
jecxz
mov
push
popa
mov
lds
insb
pop
movl
enter
sub
adcb
lahf
roll
das
outsb
push
or
inc
out
lret
fdivl
fistpll
sbb
cmp
jp
fstl
pop
sbb
xor
mov
push
in
fcomps
push
add
fnstsw
sahf
push
pusha
lods
scas
movsl
xor
icebp
aad
cld
popf
int3
pop
mov
stos
mov
xor
xor
jg
sti
je
stos
in
lahf
lret
arpl
mov
sbb
add
int3
jno
dec
sbb
cmc
cmp
lret
movsl
xchg
sbbb
inc
inc
js
sub
call
cmpl
fadd
sbb
dec
push
out
jns
mov
out
movsb
frstor
dec
jns
out
js
int3
or
ss
jnp
mov
push
cmp
add
dec
int3
sub
mov
push
enter
pop
int3
cmp
data16
and
cs
stos
pusha
loope
mov
out
rorb
loopne
sarb
mov
jge
sub
jg
add
pop
dec
mov
sbb
xchg
mov
fbld
sbb
fwait
repnz
mov
add
nopl
xchg
orl
fcmovbe
push
rclb
xor
fstl
addr16
out
xchg
inc
xchg
add
push
pop
jne
push
sub
js
inc
ja
jge
jns
loope
sub
lods
fistps
pop
cmp
out
cmp
or
and
sbb
ficompl
pusha
call
vsqrtsd
fisttpll
dec
shl
add
add
pop
sub
adc
ljmp
jecxz
ja
ror
je
mov
inc
es
subl
loopne
int3
cmp
add
jp
ja
imulw
xor
dec
and
push
das
ds
test
push
je
adc
scas
pop
cmpsl
jp
dec
es
xchg
repz
adc
push
dec
pop
and
test
nop
dec
pop
jo
cltd
lea
jge
pop
jp
and
pop
sub
dec
addr16
jmp
ucomiss
test
das
add
push
ljmp
hlt
js
xor
mov
add
out
mov
sahf
cmp
push
das
sbb
cs
fs
cmpsb
arpl
mov
orb
mov
or
shlb
sti
push
iret
pop
sahf
jb
sahf
mov
dec
push
clc
jg
cltd
bound
or
mov
das
xchg
cmp
lret
or
add
fisttpl
or
mov
mov
dec
notl
out
loopne
loop
in
movsl
pop
ss
mov
dec
adc
sti
fdivrl
ja
or
push
mov
sbb
hlt
cmp
loopne
ljmp
xchg
insb
push
inc
mov
dec
std
pop
inc
or
mov
and
fidivl
ret
test
xor
lret
or
add
pop
lcall
and
mov
push
or
aad
iret
xor
mov
lcall
mov
out
sub
divb
mov
or
push
subb
sub
push
mov
fs
mov
pop
push
sbbl
or
fwait
jno
incl
hlt
sub
jle
aaa
lret
push
out
jl
push
add
jae
sub
inc
bound
mov
cmpsl
xchg
arpl
mov
push
das
cmp
jbe
bnd
sbb
dec
sahf
push
pop
cmp
cmpsl
std
dec
ret
and
push
pusha
lcall
or
mov
sbb
hlt
rcll
mov
int
nop
mov
adc
pop
sbbb
jne
sub
pop
jns
pop
cmpsb
insl
push
sub
mov
inc
mov
xor
es
addr16
shll
xor
fnsave
sub
sbb
loopne
jle
imul
mov
addr16
xchg
clc
and
movsb
mov
sbb
jge
or
es
fcoms
imulb
ret
loope
cld
leave
nop
outsb
mov
daa
push
jno
mov
dec
mov
adc
mov
or
inc
xor
or
xchg
adc
pop
inc
mov
call
cld
jg
std
push
mov
or
xchg
aam
paddusw
add
mov
xlat
dec
lret
sbbl
push
sbb
mov
adc
xor
pusha
cli
sub
xchg
mov
pop
outsb
adc
aaa
or
loope
cmp
and
sub
cltd
mov
mov
or
aaa
jns
xchg
in
pushf
push
mov
sbbb
outsl
test
xor
ret
sbb
loope
outsb
jge
pushf
idivl
clc
dec
test
mov
fsubl
push
mov
loope
jns
xlat
mov
xchg
or
lret
call
add
repz
popf
insb
inc
pop
pop
sbb
push
sub
stc
jb
std
and
insb
hlt
les
or
leave
lcall
cs
nop
pop
ja
jle,pn
sbb
in
dec
xchg
das
mov
fildll
xchg
pop
ljmp
lods
cmpsl
add
stc
imul
into
push
xchg
or
stos
push
leave
pop
jl
loope
inc
xchg
mov
or
fnstcw
sbb
test
pop
push
popf
sub
cltd
je
xor
pop
add
jle
shrb
arpl
fisttpl
jb
jns
loop
test
imul
daa
push
mov
pop
repz
cs
shlb
mov
or
gs
in
jg
clc
mov
test
xor
add
push
push
adc
xchg
inc
jns
add
cmp
pop
mov
jecxz
scas
rorl
shlb
lret
cmpsb
mov
shl
jns
movsl
in
cmp
movsl
xchg
mov
fsts
sbb
std
clc
adc
add
mov
cmc
push
out
push
daa
mov
pop
add
and
sub
pushf
add
pop
ss
cs
fstpl
jp
iret
shlb
pop
xor
fs
and
inc
mov
insl
xor
xchg
repz
aas
inc
pop
andl
int3
inc
bound
push
or
dec
into
test
sub
cli
add
pop
fsubp
popf
mov
push
addr16
repz
xor
int
addr16
lock
adc
lock
out
cli
into
or
fisubl
leave
mov
sahf
rcrb
movsb
fcoms
jne
mov
push
jae
out
sub
rorb
outsb
and
sbb
pop
aaa
stc
or
xor
movb
sarl
dec
or
xchg
inc
faddp
jp
inc
in
popf
push
in
pop
xchg
mov
insl
or
mov
xlat
sbb
pushf
fistpll
movsb
lods
pop
insb
jecxz
cli
jg
insl
aad
pop
movb
das
xchg
sbb
ljmp
fildl
xchg
mov
aad
hlt
dec
aas
adc
outsb
popf
scas
xchg
mov
xor
jecxz
jnp
test
cld
ja
lock
xchg
cmp
addb
sbb
push
add
into
cmp
pop
lret
lock
shlb
mov
xchg
add
imul
mov
or
daa
rcrb
ja
sbb
pop
cmp
rcr
or
sbb
test
daa
aas
out
mov
xchg
les
cmp
sbb
xchg
aam
push
inc
mov
jmp
mov
sub
cmc
push
sahf
xchg
lock
mov
mov
push
call
mov
mov
fimull
cmp
shrb
mov
xor
xor
and
jo
jecxz
filds
cmp
mov
std
iret
push
jb
add
pusha
fimuls
iret
fistps
or
mov
sbb
cmp
mov
mov
pusha
sbb
pushf
push
or
stc
mov
mov
sbb
pop
stc
nop
adc
rcrb
sbb
dec
pop
sahf
inc
jno
icebp
outsb
aaa
cmp
pop
lret
mov
adc
notb
in
out
outsb
push
popf
xor
dec
mov
leave
jmp
jne
mov
pop
sub
jns
mov
adc
out
in
mov
inc
add
cs
sbb
sarl
in
nop
sub
push
sbb
inc
out
or
pushf
or
xchg
adc
sbbl
inc
call
pop
fdivs
pusha
inc
rclb
sbb
mov
push
sti
push
out
jne
dec
pop
mov
imull
xlat
cmp
sbb
dec
shl
push
push
outsb
pop
mov
sbb
adc
int3
pop
mov
jne
fs
xor
cmp
xchg
dec
inc
sbb
mov
into
xor
flds
jle
out
outsb
ds
dec
ljmp
sub
jecxz
imul
jge
sbb
testl
push
jno,pn
andl
push
xor
sbb
int
lods
dec
xchg
insl
orb
add
je
ja
and
fnstenv
cmp
ss
mov
xor
cmpxchg
nop
loopne
jp
mov
adcb
pop
inc
inc
lret
lahf
cld
jb
mov
sbb
movsb
mov
adc
mov
mov
mov
and
fsubrl
and
push
imull
out
fbld
ss
inc
fwait
push
push
test
pusha
push
rcll
sbb
mov
ret
ret
iret
movsl
out
into
int3
hlt
xchg
xchg
enter
insb
sub
frstpm(287
out
add
xchg
push
loop
aam
cmp
xchg
inc
jle
es
inc
xor
lcall
fimuls
ss
fisttpl
test
pop
sub
ret
adc
sbb
mov
movsl
pop
lret
push
mov
in
xchg
adc
pop
into
les
je
sbb
adc
mov
cmpsb
iret
pop
adc
jnp
fistpl
inc
sbb
inc
sub
inc
lods
inc
lret
loope
or
repnz
dec
std
add
test
inc
mov
pop
movsb
push
mov
adc
jae
sub
rorl
dec
mov
hlt
sarl
cmpsl
rcl
aas
cltd
fdiv
outsl
dec
mov
hlt
in
sub
jmp
sub
push
ds
in
je
adc
fidivrs
mov
pop
pop
scas
sbb
and
lock
xchg
push
push
cwtl
mov
sub
hlt
sub
int3
push
pop
mov
fstpt
test
andl
cmpl
or
aam
int3
cld
and
mov
cmp
adc
ljmp
insb
out
push
mov
roll
mov
test
push
or
bound
sbb
push
jecxz
rorb
ss
outsl
adc
stos
jb
add
cltd
sub
inc
mov
mov
or
lea
push
ja
push
jnp
loope
sbb
adc
fsubs
sub
loop
mov
pop
jmp
cs
pop
adc
mov
jbe
cmp
inc
rclb
jecxz
ret
in
xchg
push
mov
fs
fidivs
cmc
int
sbb
scas
mov
xor
fsubrl
and
sti
jg
scas
adcl
mov
mov
xchg
js
pop
lods
pop
mov
mov
mov
mov
js
jmp
lcall
stos
inc
pop
and
movsb
lret
pop
or
xor
push
subb
xlat
jge
sbb
mov
adc
adc
xor
ds
mov
sti
jne
add
loopne
andb
fs
loope
adc
xchg
subb
or
pop
cmp
xchg
pop
test
je
inc
mov
cmovle
flds
xor
and
sub
jmp
sahf
mov
adc
aam
sub
mov
mov
es
outsl
cmp
jecxz
xchg
repz
sbbb
lret
pop
repz
loop
mov
pop
nop
jl
or
xchg
adc
inc
sbbb
or
pop
sbb
or
xchg
mov
sbbb
fdiv
mov
stos
mov
cmp
in
mov
aad
cmp
movsb
roll
sub
inc
push
pop
inc
mov
xchg
and
mov
in
lods
ret
aas
sti
loope
or
sbb
or
test
je
rclb
out
jnp
clc
pop
int3
ja
pushf
aam
das
dec
push
mov
cld
mov
scas
out
dec
in
sbb
xor
push
mov
pop
mov
sbb
sbb
ds
jle
cs
rcrl
cltd
in
leave
xchg
in
sbb
imul
les
subl
sbb
mov
repnz
push
jl
aaa
fdiv
ss
mov
das
sbb
push
adc
inc
shlb
and
hlt
jae
jg
inc
cmp
faddl
rol
sub
rorl
out
pop
pop
mov
xchg
out
in
push
pop
fs
push
jp
insl
xchg
xchg
push
bound
and
bound
push
add
and
rclb
inc
inc
xor
jmp
add
pop
lea
cs
inc
orl
icebp
xchg
adc
jmp
lret
fdivs
fists
out
pop
push
push
xor
fisubl
dec
cmp
ljmp
fdivr
ret
push
leave
sub
cmp
adc
and
jb
mov
lret
add
sub
cmp
insl
mov
adc
mov
test
add
mov
ljmp
cmp
xchg
adc
and
pop
pop
ja
xlat
icebp
lahf
jecxz
stos
push
int3
push
into
xor
call
jne
scas
sub
aad
sbb
xor
adc
shrb
cmpsb
imul
mov
xor
ret
add
ja
pushl
mov
shll
loop
add
ss
inc
aaa
xchg
pop
pop
int
ljmp
lret
mov
dec
xor
hlt
mov
je
cmp
aad
fisubrl
leave
and
gs
lods
imul
jae
xor
insl
fisubl
xor
cmp
in
ljmp
shlb
cmp
jae
cli
push
inc
icebp
dec
pop
dec
lret
dec
pop
inc
push
imul
in
sbb
stos
jl
sbb
in
sbb
cmp
gs
loop
mov
ja
add
xlat
push
outsb
pop
test
pop
iret
xchg
xor
mov
jns,pn
add
jmp
inc
idivb
ss
jmp
int3
xor
movsb
adc
aas
xlat
cli
test
roll
in
fwait
out
add
adc
or
outsl
repz
push
and
sub
push
loope
in
jecxz
cmpsb
dec
sub
mov
cmpsl
rcrl
test
pop
call
inc
clc
cmp
rolb
cmp
clc
popf
andb
or
outsl
mov
adc
fnsave
loop
xor
cltd
fwait
outsb
push
std
data16
mov
call
sbb
mov
jnp
jno
gs
mov
in
loop
mov
inc
adcl
ss
xor
xor
pop
enter
scas
or
fistps
es
mov
jns
cwtl
add
mov
sarb
leave
std
ss
popa
sbb
aaa
and
aam
jecxz
fists
test
mov
sub
xchg
jg
les
jb
mov
push
or
movsb
decb
mov
dec
cmp
sbb
cld
xchg
push
cld
or
data16
and
inc
pusha
fwait
ret
mov
cmpl
jle
xchg
xchg
lret
fsubl
sbb
mov
and
jg
push
stos
xlat
cmp
outsl
jae
ljmp
movsl
push
sbb
iret
push
xor
hlt
jmp
loopne
jle
std
and
adc
mov
fistpl
cmp
pusha
push
jecxz
add
iret
xor
ficomps
pushf
ljmp
insb
xor
cmpsb
push
and
int3
sar
shlb
out
xor
dec
inc
jnp
addr16
mov
cli
dec
jnp
mov
sub
fimull
les
mov
icebp
jmp
cmp
mov
push
pop
or
shr
fdivs
fwait
push
xor
lahf
dec
sbb
and
mov
mov
fstl
dec
scas
mov
and
in
jl
add
dec
mov
andb
push
popf
inc
mov
mov
lea
and
sbb
cli
daa
push
ret
push
lock
mov
das
mov
adc
pop
roll
insb
jp
push
sub
xchg
dec
adc
pop
mov
pop
pusha
in
rcrl
inc
ljmp
out
popf
xor
stos
push
and
movsb
or
push
sahf
out
pushf
les
pop
out
push
ss
push
ss
add
int
fimull
inc
cmp
jp
sbb
and
pop
jb
je
cmp
out
das
addb
jnp
xchg
inc
and
dec
loope
pop
add
jb
nop
sahf
cmp
je
dec
aas
inc
lods
inc
dec
add
ljmp
lret
test
inc
aaa
push
dec
mov
adc
call
mov
cmp
iret
push
cs
scas
out
out
iret
mov
dec
mov
xor
pushf
sbb
xchg
sarb
or
mov
push
or
aad
lcall
cmp
popl
sbb
and
dec
push
out
mov
sbb
sub
jb
insl
test
mov
insb
mov
dec
je
dec
xchg
sub
repnz
mov
push
lahf
dec
fstps
or
sbb
sub
repz
aam
xor
jge
subl
movsl
lods
sbb
mov
adc
addr16
lret
stos
repz
jge
xor
and
int
ficoml
xchg
ja
sar
or
stos
xor
pop
dec
mov
js
fstl
add
outsb
lcall
cmp
mov
inc
rorl
fsubr
pop
jbe
inc
es
fdiv
call
mov
je
push
imul
push
divb
in
push
fcoml
fisubl
repnz
dec
cmp
jmp
or
and
sub
movsb
xchg
sar
jmp
mov
mov
pop
outsb
pop
int
add
adc
xchg
shlb
mov
jae
or
fcoms
dec
lcall
cli
xor
xchg
clc
cs
and
aam
sahf
push
xchg
dec
pushf
test
fs
xchg
inc
aas
push
hlt
xchg
push
sub
sbb
dec
int
adc
je
ljmp
xlat
cmc
push
pop
push
stos
pusha
inc
cmp
jg
mov
ds
xor
inc
lahf
sbb
mov
cli
loopne
cmp
fnstsw
pop
push
inc
or
pop
insl
mov
pusha
sbb
repnz
fcoms
dec
mov
dec
pop
outsb
jmp
mov
xchg
dec
shl
mov
rcll
mov
add
xchg
inc
mov
adc
fcoms
mov
nop
cltd
fsubrs
inc
xorl
aam
xchg
fs
fwait
push
leave
xchg
enter
mov
imul
jp
addr16
pop
iret
and
jb
cmpsl
test
sub
mov
jl
js
mov
in
cmp
mov
inc
jb
pop
dec
js
iret
mov
sbb
dec
cld
jmp
lock
and
fsqrt
inc
lret
push
pop
aam
lods
scas
add
movsl
jecxz
rclb
or
mov
or
jp
cmpsl
cmp
nop
mov
insl
mov
xor
cmpsb
dec
sub
aad
inc
jge
test
ljmp
push
movsb
pusha
test
aaa
jecxz
test
jl
add
jnp
scas
stos
inc
cmpsb
mov
inc
sahf
mov
mov
es
jo
adc
jne
xorb
xor
inc
jg
test
loop
ret
ljmp
push
pop
mov
or
adc
push
jne
xor
mov
test
lock
out
subb
inc
inc
nop
mov
xchg
and
cmp
sub
out
jo
cmp
inc
imul
popf
ret
notl
scas
add
add
mov
cli
js
sbb
mov
inc
dec
jg
aam
mov
xchg
jbe
push
ss
mov
jmp
lods
adc
mov
fs
lret
into
subb
xor
mov
lcall
stc
xlat
pop
add
mov
pop
add
je
fstpl
repz
out
adc
pop
daa
sub
mov
push
sub
mov
cmp
scas
xorb
pop
loop
ljmp
dec
out
repz
push
mov
clc
gs
cmp
sub
das
pop
sbb
xchg
jne
jg
adc
lods
out
dec
out
into
sti
mov
sbb
bound
jle
push
jp
sbb
mov
sti
daa
or
outsl
mov
addr16
mov
aaa
push
lret
jns
jbe
push
test
pusha
out
xchg
add
add
mov
stos
pop
dec
or
iret
add
dec
push
jmp
movsl
push
push
xor
mov
pushf
add
mov
popf
push
lret
inc
aam
jne
dec
dec
sub
xchg
imul
mov
pop
jnp
mov
pop
lret
sbb
mov
pop
fiadds
jmp
xor
pop
mov
mov
hlt
push
add
inc
and
sub
out
jg
out
ret
into
mov
push
divb
scas
subb
inc
ljmp
sub
inc
xchg
add
imul
js
sahf
push
sbb
cmp
fwait
mov
pop
add
fcmovnb
xor
out
pop
or
daa
sub
mov
xor
jecxz
xlat
test
js
or
movsb
or
push
stos
and
stos
repnz
mov
pop
dec
pop
or
lret
mov
push
lds
out
jne
je
dec
stos
lock
fdivr
mov
out
int
test
pop
xlat
dec
dec
mov
add
mov
pop
sub
inc
xchg
or
or
add
inc
rorl
xchg
inc
cmc
dec
and
jmp
sub
push
bnd
adc
jne
sub
xor
cmp
inc
stos
xchg
sti
adcb
pop
sbb
fistpl
inc
mov
sbb
daa
and
bound
aas
lea
ja
mov
outsb
aas
dec
lret
in
leave
stos
jge
bound
pop
sub
pop
std
ds
mov
adc
cmp
mov
or
and
pusha
shlb
out
lret
dec
mov
outsl
repnz
test
xchg
lret
inc
ror
test
stos
adc
jmp
cmpsb
addr16
xor
push
adc
push
inc
loopne
mov
sbb
or
addb
pop
jge
outsl
inc
lock
cld
xchg
stos
or
imul
jnp
aam
push
add
xchg
add
loop
cmp
sti
inc
jmp
mov
repnz
outsl
aaa
jecxz
cmp
outsb
out
jne
mov
push
bound
mov
ret
push
test
push
xchg
loop
fstps
rolb
mov
jne
add
and
xchg
cld
imul
jp
cmc
xlat
scas
mov
fldt
fistpl
xchg
mov
mov
fcom
cmp
notl
popa
faddl
dec
outsb
cs
js
int3
sub
push
js
pusha
outsl
add
testb
sbb
add
mov
jne
jge
mov
in
mov
adc
iret
std
mov
pop
fs
stc
jge
cs
into
jae
pop
cmp
mov
enter
jge
stos
pop
cli
xchg
stos
mov
xor
inc
or
cmp
mov
xlat
repz
or
stos
out
cmp
out
ds
mov
pushf
and
dec
mov
jb
aas
mov
pop
int
cwtl
ljmp
or
enter
or
test
ret
dec
push
cs
dec
and
push
das
in
jnp
jae
xchg
loop
add
mov
sbb
mov
mov
fwait
xor
cmpsb
iret
aas
inc
aad
or
push
cmp
imul
or
mov
mov
aaa
lods
popl
cmp
cmpsb
rcl
insl
sti
sti
jmp
into
cmp
pop
sbb
orb
icebp
fisubl
mov
xor
sbb
ret
imul
sti
fwait
test
mov
test
mov
aas
mov
push
adc
push
xor
mov
loop
addb
popf
mov
lahf
push
lea
shl
lock
jns
sbb
int3
movsb
imul
pop
test
and
push
aam
std
sub
add
cltd
inc
test
sub
dec
sub
adc
xchg
add
sub
add
test
testl
fisubl
push
in
and
daa
adc
cmpsb
adc
xchg
ret
push
lea
push
cltd
cmp
in
leave
repz
push
data16
cmp
xor
adcb
jp
jo
cli
and
test
bound
lea
mov
push
les
jo
aas
jbe
adc
sbb
sahf
pop
sbb
outsl
aad
pop
dec
into
sti
addr16
inc
out
cmp
dec
lret
shll
test
mov
inc
pop
clc
nop
dec
sub
mov
push
fs
jb
sub
movsb
mov
negb
lahf
push
mov
repz
sbb
mov
in
jmp
out
movsb
dec
shl
or
gs
fcompl
cld
jb
inc
in
xchg
mov
push
jmp
fadds
ljmp
mov
sbb
xor
je
clc
into
popa
adc
fidivl
cmp
mov
outsl
push
mov
shll
orb
in
sub
scas
jae
sbb
sbb
pop
jne
inc
popf
xor
stos
aaa
add
aas
pop
testb
sbb
pop
clc
and
pop
sbb
das
les
cwtl
mov
adc
outsl
incl
sub
jbe
push
lahf
pop
or
mov
jo
and
aaa
adc
cmp
push
enter
int3
add
pop
push
or
mov
push
push
xlat
add
lcall
ja
add
cwtl
push
into
jp
add
std
jo
lea
push
and
pop
arpl
inc
dec
pop
adc
fbld
stc
mov
test
jb
xlat
loope
sub
imul
jae
cs
mov
lret
add
dec
pop
dec
mov
adcb
repnz
in
push
cmc
shl
mov
or
cmpb
xchg
xorl
push
std
iret
fwait
cmp
dec
lret
mov
aam
or
test
into
rorb
or
mov
test
in
movl
mov
xlat
pop
lret
aas
xchg
sub
mov
and
fdivrl
mov
jge
testb
sub
divps
orl
mov
andb
push
test
sub
roll
jmp
mov
stos
leave
cmpsb
pop
mov
gs
mov
movsl
movsl
push
add
push
insl
notl
xchg
or
ret
push
arpl
ja
xor
outsl
ret
es
sbb
mov
mov
mov
dec
js
sbb
push
xor
xchg
loop
ret
scas
das
pop
pop
xor
adc
incl
push
sbb
js
push
in
lret
daa
sub
mov
popf
aam
or
rol
sub
ja
dec
or
xor
pop
adc
and
sub
jecxz
aas
mov
sbb
jbe
mov
out
incl
gs
iret
inc
sub
mov
stos
push
into
mov
out
sbb
mov
jae
push
les
push
xchg
stos
mov
dec
dec
push
push
push
cli
loope
push
adc
cmpsb
pop
mov
lods
jge
in
data16
rcrl
mov
shr
mov
das
jno
cmp
inc
adc
xlat
fiadds
push
jb
xchg
lea
addr16
dec
addb
push
dec
lea
add
xchg
inc
fs
imul
xor
mov
push
imul
sbb
cwtl
out
movsl
or
in
mov
add
test
insl
pusha
nop
call
jecxz,pt
cmp
hlt
fisubrs
and
aas
or
xchg
or
in
test
bound
repnz
dec
je
js
jle
shll
mov
adc
pop
or
lock
lahf
push
fiadds
imul
cli
push
mov
push
push
mov
aaa
hlt
jp
data16
pop
push
pop
stos
xchg
sub
push
inc
arpl
imul
cwtl
in
cmp
lea
cmp
jp
lret
dec
mov
daa
mov
out
push
sub
popf
arpl
fisubrs
lea
js
popa
dec
dec
sarb
shlb
jae
jg
aas
cmp
out
jno
outsb
int
jbe
in
dec
lods
push
aas
pop
pop
icebp
xor
test
or
daa
pusha
xchg
shlb
jle
mov
mov
adc
dec
dec
out
insl
cmp
rcrl
cmp
fs
cmpsl
or
hlt
push
inc
arpl
push
inc
ljmp
pop
fdivrs
in
xchg
aaa
in
cmpsb
xchg
push
lea
pop
xlat
pop
cmp
mov
pop
cmpsb
iret
push
enter
push
mov
or
jl
jae
lock
aam
stos
xchg
test
aaa
aaa
popf
or
xor
insl
or
lea
jle
mov
out
mov
dec
std
lahf
mov
xchg
xchg
int3
adc
dec
and
or
xlat
sub
jb,pn
cmc
cmc
sub
out
lds
aaa
mov
pop
push
lods
faddl
mov
insb
or
cmc
xchg
outsl
nop
sti
repnz
hlt
in
in
dec
adc
sti
ja
sbb
mov
arpl
insl
push
mov
rorb
out
dec
xchg
or
sub
test
push
in
add
xchg
roll
inc
js
pusha
mov
leave
daa
movsl
lret
test
add
xlat
mov
lea
jmp
lds
fisubrl
popf
adc
hlt
ret
xor
jmp
push
fdivrs
js
or
jae
mov
push
mov
nop
push
push
inc
mov
mov
jae
dec
jle
inc
jecxz
fisubrl
movsb
in
subb
subb
push
jno
ljmp
mov
sbbl
test
jae
enter
add
aam
lods
pop
add
adc
cmp
iret
xchg
xchg
testl
push
jl
jmp
stos
sbb
stc
adc
cmc
xchg
data16
push
mov
rolb
xlat
xor
sbbb
hlt
xor
pop
jl
imul
mov
mov
cmc
push
jo
dec
bound
cmp
cltd
inc
subl
xor
pusha
mov
add
shll
mov
icebp
sbbl
insb
push
xchg
imul
movsb
bound
pusha
and
test
and
pop
stc
nop
fstpl
pushl
push
push
int3
andl
testl
jo
stos
rorl
mov
sub
cmp
mov
sbb
cmc
mov
adc
pusha
lds
shl
dec
out
mov
adc
int
mov
out
xchg
cmp
shl
imul
lcall
lahf
dec
cmp
and
or
clc
ljmpw
icebp
pop
sub
or
lock
lret
rdmsr
pop
xchg
adc
es
xchg
jecxz
inc
sub
and
sbb
sbb
sbb
jo
icebp
sub
xchg
dec
lods
in
popa
out
mov
pop
je
movsl
add
mov
andb
insb
push
orb
pop
mov
mov
xchg
sub
clc
cmc
lock
cmpsb
dec
inc
jo
inc
sub
aad
sub
addb
adc
loop
jl
ljmp
iret
mov
int
in
call
inc
mov
in
add
fidivs
lock
mov
mov
lods
out
dec
je
mov
xor
out
call
inc
xor
xlat
stos
les
mov
outsb
push
stc
daa
into
popl
mov
or
xorb
fisttps
lods
out
lret
das
movsl
out
leave
icebp
dec
scas
repnz
rcr
out
lds
aam
cli
mov
cmpsb
mov
lods
enter
out
push
cwtl
repz
inc
enter
aas
int3
mov
and
movsb
lahf
fmuls
lretw
jno
movsb
iret
mov
movsl
lcall
mov
in
jae
je
addl
push
out
pop
addr16
push
popf
cmp
or
pop
pushf
xor
imul
and
cmp
mov
stc
int
xchg
add
rorb
call
shll
pop
negl
int3
fistpll
lds
cmpsb
into
or
inc
pop
mov
sub
jnp
xor
jno
dec
sarb
inc
rol
mov
stos
test
leave
mov
imul
jae
mov
nop
mov
dec
cs
pushf
popf
aad
test
push
es
into
jb
push
rcr
inc
aas
and
in
in
inc
cmp
fldpi
in
xchg
movsl
push
push
xchg
cltd
xchg
enter
in
cli
or
mov
push
lret
mov
call
jns
mov
push
dec
mov
insl
stos
addb
decb
ror
cmp
test
imul
bound
and
aad
dec
jns
int3
dec
pushl
xchg
std
add
aas
out
xor
je
cli
adc
lret
mov
outsb
jmp
cmp
andb
xchg
and
adc
dec
popa
inc
fistpl
jmp
std
repnz
mov
push
xor
insl
fst
rol
pop
push
cld
lret
jl,pt
inc
stos
pop
call
cmpsb
insl
jo
outsb
adc
inc
insb
xor
je
mov
sub
jae
xor
insl
mov
mov
repnz
or
test
ret
lds
stos
dec
leave
adc
xchg
aaa
sub
in
popf
xchg
mov
repz
push
fiadds
sbb
sbb
jns
jle
adc
sbb
leave
push
mov
rorl
pushw
and
sbb
sub
repnz
rolb
xor
adc
jno
adc
and
mov
or
lret
dec
mov
ljmp
push
dec
shlb
enter
mov
lods
jg
adcb
inc
lds
mov
sahf
lret
jge
popa
hlt
out
inc
ret
sub
adc
insl
or
fs
jae
in
aad
jg
scas
mov
rorl
movsb
in
mov
ss
jae
in
sbb
subb
stos
iret
pop
push
dec
dec
popa
xchg
push
scas
stos
jo
int3
xor
cmp
or
test
fsubl
cmp
jo
popa
fnsave
and
mov
pop
sbb
sub
mov
add
and
jne
push
int
enter
push
aam
movsb
xchg
push
xchg
aam
adc
pop
jnp
xchg
sti
push
fcmovu
cmpsl
cmp
push
daa
inc
enter
insl
jne
pusha
mov
xchg
lock
mov
arpl
push
xorl
cmp
lret
or
rcrb
icebp
inc
sub
sbb
dec
sub
mov
fs
mov
xor
xchg
mov
lods
scas
cmp
sti
sarb
imul
xchg
test
fbld
jo
fldcw
xchg
cwtl
mov
fiadds
jmp
lds
cmp
dec
jmp
mov
inc
mov
and
insb
add
lods
fst
outsl
sbb
stc
mov
mulb
ret
push
enter
mov
mov
lds
idivl
pop
lret
pop
xor
mov
cmp
pop
xor
cmp
xor
xor
fistps
fmuls
out
stos
out
stos
pop
sub
divl
xchg
cmp
test
hlt
out
imul
adc
push
lods
je
clc
outsb
push
mov
clc
xor
das
push
adc
fstpt
pop
push
aad
out
cmpsb
pop
and
psubb
jecxz
jl
insb
jbe
jg
jmp
mov
cmpsl
push
push
push
repnz
das
jae
in
test
pop
sub
adc
mov
mov
push
dec
add
iret
popa
mov
sbb
loopne
negl
xchg
in
sbb
sbb
loop
xlat
dec
data16
mov
dec
jne
ss
loopne
mov
cmp
test
and
xchg
rcll
icebp
cs
dec
jp
jns
aad
iret
pop
mov
bound
jmp
pop
add
lcall
cmpsb
scas
imul
subl
sub
stos
and
cltd
xchg
imul
addr16
lcall
and
loopne
clc
mov
clc
pusha
pop
test
xchg
adc
into
push
rolb
xchg
das
ljmp
testb
fisttpl
mov
pop
into
jecxz
insb
xchg
ja
stc
loope
jo
cli
outsb
mov
lods
fldenv
repz
fisttps
sub
and
into
pop
fisubrs
mov
sub
cltd
mov
xor
and
aam
jns
mov
mov
or
adcb
je
jg
cmp
and
ret
es
push
sbb
fwait
popl
fnstsw
sbb
xor
je
rcrb
adc
sbb
inc
rolb
cmpsb
add
xchg
mov
xchg
movsb
gs
sysenter
push
pop
sub
mov
push
movsb
mov
jns
or
dec
and
in
out
mov
loopne
push
fs
cli
and
sub
and
mov
cmp
cmc
std
add
out
cmp
inc
cmpsl
dec
adc
insl
add
loopne
adc
pop
pop
ret
cltd
sarb
pushf
cwtl
xor
mov
fists
cmp
or
call
cmc
add
aaa
movb
mov
cltd
out
cwtl
cmc
in
inc
push
in
dec
notb
mov
add
sarl
mov
pop
pop
or
add
aad
adc
inc
sbbl
pop
rorl
fbld
ja
inc
sub
ljmp
pushf
ret
or
loopne
lea
jmp
jae
pop
push
and
mov
adc
roll
cmc
xlat
mov
imul
add
jne
nop
adc
test
arpl
lea
imul
in
das
xchg
repnz
sub
in
mov
loop
mov
push
fs
jmp
xor
cmc
lcall
fisubs
sub
jmp
jecxz
inc
adc
mov
stos
inc
popa
cmpsl
ja
gs
fistpl
jl
mov
jb
push
mov
shrb
mov
push
dec
aaa
enter
xchg
out
icebp
jae
bound
sub
adc
mul
daa
sbb
cmp
in
fwait
ds
jae
inc
pop
jo
rorl
ja
cwtl
and
jge
daa
repz
cltd
mov
push
cmp
pushf
sub
adc
int3
mov
out
mov
inc
testb
push
mov
mov
and
cmp
cmpsb
xor
es
jne
pop
mov
xorl
stos
or
push
dec
iret
xor
ret
loope
mov
jbe
lods
jg
rclb
incl
push
stos
jecxz
scas
cmp
add
lock
cli
or
jb
cmpsl
mov
adc
leave
or
and
shl
lods
xchg
push
cld
popa
jmp
mov
mov
movsb
inc
xchg
movsb
movzwl
rcrb
sub
mov
js
inc
iret
arpl
pop
sti
shl
and
pusha
push
sub
sbb
stos
aaa
sarb
stos
bound
ret
inc
hlt
mov
push
cltd
mov
or
pop
lea
inc
loope
sub
xchg
aam
inc
cmc
mov
mov
gs
lock
aas
ja
push
xchg
jnp
xchg
dec
rolb
inc
sbb
jb
outsb
lods
aam
addr16
pop
jns
and
cmp
lds
sub
insb
js
pop
sbb
fistl
fistpl
push
cli
xchg
nop
jecxz
pop
dec
sub
shlb
jecxz
and
cmp
mov
xor
inc
cld
ror
out
rcll
test
cmp
hlt
push
sbb
lods
mov
mov
jo
mov
clc
xchg
inc
add
ds
adc
pop
push
xchg
loope
sti
adc
stos
les
pop
or
xor
sub
js
sub
pushf
sbb
icebp
scas
mov
lret
outsb
mov
jp
xor
orl
lahf
pop
jg
hlt
mov
idivb
jae
mov
sub
sub
cmp
and
orl
mov
jbe
sbb
fstps
movsl
mov
cwtl
add
aas
mov
mov
cs
adc
pop
add
cltd
ss
cmpsb
dec
movsl
push
sub
add
stc
dec
push
mov
fldenv
xchg
and
ficoml
cmp
mov
dec
imul
inc
pop
or
mov
test
sub
jo
les
ss
xor
add
mov
cmpsb
repz
hlt
lahf
inc
test
out
xchg
fwait
insl
iret
dec
jne
or
mov
mov
push
filds
lcall
inc
mov
mov
adc
jae
subb
mov
repz
mov
ficomps
xlat
aaa
mov
insb
mov
iret
dec
pop
aaa
mov
shll
mov
mov
inc
loope
push
push
movsl
das
mov
push
cmp
aam
pop
lret
lea
outsb
stos
ret
decl
inc
aas
sbb
and
pop
pop
xchg
test
xor
mov
divb
cmp
cld
xor
or
cmp
xchg
fbld
push
stos
in
inc
cli
sahf
pop
sbb
mov
fwait
xor
bound
and
sub
lock
xchg
ja
mov
xchg
outsb
adc
mov
xor
jae
push
imul
sub
jmp
push
mov
dec
jno
out
outsb
push
cmp
adc
xor
push
mov
mov
sar
mov
inc
int3
pop
jl
int3
sbb
sarb
dec
and
pop
push
rclb
inc
cmpsl
jne
and
cmp
xor
or
jne
cmpsb
enter
ljmp
inc
push
loope
aaa
or
dec
jge
dec
mov
std
orl
dec
rcrl
fidivrs
inc
push
mov
stos
sub
lods
cmpsl
jmp
pop
or
js
les
lock
pop
pushw
fildl
inc
xor
mov
mov
mov
mov
cmc
pop
push
mov
and
insb
xchg
pop
shr
mov
lea
icebp
push
add
pop
ljmp
fcomp
scas
inc
add
je
dec
testl
push
fs
mov
addb
inc
testl
mov
dec
out
daa
je
fistps
in
add
in
cmpsl
in
mov
or
xchg
mov
jae
sahf
orb
xor
ror
add
movsl
aam
stos
imul
dec
jecxz
xor
xchg
inc
movsl
sbb
addr16
xchg
sub
dec
push
call
mov
pop
das
in
or
cmpsl
xchg
out
dec
in
mov
test
sbb
dec
inc
push
ret
adc
push
scas
sbbl
and
insl
es
movhps
xchg
jmp
fsubs
adc
ret
movsl
pop
add
jo
mov
lcall
daa
imul
lret
jl
daa
sbb
shl
push
negl
leave
xchg
jbe
inc
or
add
stos
repnz
stc
jo
jns
sbb
xchg
push
xchg
jb
mov
jecxz
sub
fwait
inc
cmp
sbb
cs
mov
xchg
jmp
mov
inc
add
ret
lret
not
loopne
les
dec
xchg
out
mul
jecxz
pop
inc
push
enter
xor
insl
inc
or
dec
sarl
xchg
push
int3
xlat
test
in
bound
pop
jae
jnp
js
xor
adc
hlt
cld
sbb
into
and
push
xor
enter
je
popa
pop
cmc
sbb
stc
popf
or
cmp
ja
out
xchg
lods
fcomi
nop
insb
ja
mov
and
int3
popf
jecxz
mov
lods
jo
cmp
aam
lea
mov
adc
push
loope
shll
lds
or
cli
mov
cmc
pop
mov
xor
lds
xchg
stc
ret
mov
mov
sub
out
mov
mov
sub
cmpb
xchg
ret
int3
push
sbb
add
icebp
mov
cmp
pop
test
sub
xor
lcall
cmc
cmp
lods
jo
faddl
aaa
enter
jp
cmp
lock
shl
test
xor
aam
or
sbb
jne
stos
mov
andl
aaa
jbe
mov
mov
add
test
and
test
xchg
xchg
xchg
fcmovnbe
aaa
push
jle
xor
lods
pusha
cld
fistps
sub
mov
fildl
sub
inc
out
out
add
test
pop
push
dec
push
push
and
add
jp
pop
sub
mov
push
mov
inc
and
lret
stos
mov
cmpl
and
adc
mov
xchg
out
stc
fs
jno
push
xor
inc
js
iret
mov
mov
adc
add
mov
xor
icebp
shll
aam
push
pop
or
addr16
sub
adc
into
aad
test
jno
and
in
icebp
mov
sub
aam
std
sbb
mov
pop
jno
inc
stos
inc
mov
cmp
addr16
ljmp
mov
push
lods
dec
xorl
xor
int3
pop
sahf
repz
popa
sub
ja
std
cmp
jecxz
or
sub
aas
and
dec
mov
pop
movsb
sbb
imul
test
push
loopne
out
aam
jb
lcall
mov
push
jae
cmp
mov
xor
test
out
push
xchg
les
xchg
ret
mov
xchg
loope
call
push
jnp
dec
cmpsb
jle
sarl
cmpsb
scas
gs
scas
bound
lret
outsb
mov
cmpsl
sub
daa
jno
or
addr16
test
lods
and
ja
push
testb
cmp
or
jo
pusha
call
sub
pop
pop
push
notb
push
dec
xlat
push
jmp
out
push
jge
push
pop
addb
in
loope
mov
or
jmp
jge
inc
adc
add
out
mov
lcall
daa
bound
jnp
stos
sub
jno
adc
mov
imul
icebp
xchg
mov
xor
xchg
lret
popl
ret
cli
sub
fdivrs
fwait
sbb
jbe
inc
popf
das
ret
and
fimuls
sub
jmp
cltd
into
ljmp
iret
mov
shrb
movsl
enter
aam
pop
adc
xchg
repz
jge
jg
add
xchg
jns
imul
sbb
mov
sbb
mov
icebp
sti
add
pop
arpl
or
pop
xchg
out
popf
jp
pop
ljmp
ret
adc
ret
mov
ss
aad
movsl
xor
mov
mov
imul
sbb
out
lods
test
mov
std
xchg
push
fsubp
jl
outsb
dec
ss
mov
mov
cmp
adc
outsl
daa
pop
outsl
adc
loope
or
mov
mov
add
mov
and
clc
dec
outsb
cmp
adc
push
adc
mov
mov
addb
aam
mov
xor
imul
pop
and
jg
inc
pushf
pop
out
addr16
adc
push
fdivs
es
or
dec
fistps
test
repnz
and
inc
jle
pop
outsl
inc
and
test
push
inc
loopne
adc
cmp
scas
push
mov
test
lahf
jns
jb
push
lahf
xchg
test
cmpsl
lods
cmp
dec
cmp
adc
mov
in
fcmovnu
jmp
enter
mov
cmp
fisubrl
rclb
and
insb
loop
push
and
mov
push
xor
sub
in
add
stc
mov
imul
push
neg
add
adc
jg
mov
xchg
lea
in
mulb
lock
into
imul
adc
xchg
imul
test
stos
mov
xchg
hlt
dec
inc
cld
xor
pop
dec
pop
cmp
data16
fwait
adc
lods
jne
push
bnd
push
push
test
in
das
mov
jmp
dec
mov
sbb
dec
lods
in
arpl
jp
out
lret
mov
out
dec
xlat
cmp
jmp
and
push
popa
std
mov
loop
sarb
adc
sbb
mov
das
sbb
into
lds
imul
and
testb
popf
lcall
ljmp
sbbb
dec
sub
mov
iret
pop
xlat
rcl
add
adc
popa
fmull
enter
rolb
imul
add
in
inc
mov
mov
pop
loop
dec
addr16
mov
lret
or
ljmp
je
outsl
inc
sbb
popa
cmp
mulb
test
adc
js
fucomi
xlat
push
sbb
sub
inc
or
mov
int3
adc
insl
rorb
std
insl
repnz
mov
xchg
and
fdivp
cmpsb
popf
js
int
push
inc
jns
mov
fistpl
stos
jb
mov
imul
imul
aam
dec
add
rclb
cs
jp
stc
jne
xchg
sub
fwait
or
leave
and
adc
inc
add
sbb
dec
mov
fwait
push
int
mov
jne
loop
rclb
loop
xchg
mov
sbb
or
aas
adc
mov
int
outsl
mov
bound
in
mov
mov
inc
aam
jne
add
enter
mov
cmp
dec
addr16
mov
mov
sbb
fs
repz
lods
xor
lea
jb
xlat
jg
push
cmp
iret
in
rorb
repnz
adc
in
fiadds
push
rcr
ficomps
push
insl
add
div
dec
rcr
fisubl
xor
or
cmp
out
in
jno
outsl
lock
jle
in
cli
nop
and
mov
sub
popf
stos
xchg
sbb
jge
cmc
sbb
pop
add
xchg
in
jae
cmp
scas
jmp
push
fbstp
loopne
stos
mov
in
or
cltd
lcall
movsb
sub
int
jb
pop
and
and
mov
or
in
jne
iret
cmc
cltd
sub
adc
jl
mov
jo
jbe
rcrl
pop
sahf
in
jge
movsl
std
inc
jo
or
inc
addr16
add
jp
cmc
sbb
es
mov
mov
cli
shlb
pop
jl
or
test
xor
cltd
out
wbinvd
adc
mov
movl
insl
xchg
and
jmp
sbb
jg
rclb
aas
jno
xchg
and
dec
push
xchg
loopne
mov
xor
frstor
fsubs
adc
cwtl
mov
popa
testl
movsl
popl
cmc
xor
pusha
mov
stc
mov
ljmp
dec
test
ljmp
pop
xchg
mov
mov
movsl
enter
add
dec
mov
push
loopne
cwtl
es
dec
inc
xrelease
adc
addr16
idivl
je
int
push
mov
push
cmp
sub
ret
aas
sbb
into
adc
mov
cmp
testb
xor
daa
or
xchg
xchg
sti
sarb
stos
sub
jmp
sti
mov
ljmp
or
jno
push
lods
out
movsb
js
inc
fiadds
cmp
int3
lcall
push
mov
and
push
dec
inc
leave
sub
cmp
lock
pop
sub
imul
or
or
ret
pop
jle
fdivr
ja
ficompl
pop
ja
add
pushf
rcr
adc
inc
fninit
popa
sub
sti
les
push
add
sub
sub
dec
js
mov
push
mov
fildll
cmp
mov
push
mov
xor
fsubrs
fstps
add
dec
loope
dec
test
adc
adc
int
xchg
fwait
mov
mov
or
inc
jno
out
lcall
and
sub
dec
test
inc
daa
inc
repz
mov
lock
testb
mov
ja
jno
mov
pop
dec
repz
std
push
test
push
cli
add
les
sbb
xchg
inc
loope
push
or
repz
repz
repnz
pop
fidivrs
leave
sub
pop
lahf
mov
and
out
rep
in
push
insb
lret
jecxz
rcr
push
or
pop
dec
sbb
cmp
imul
leave
sahf
pop
or
mov
sub
pop
lock
push
stos
shlb
inc
into
ficoms
mov
inc
jp
enter
mov
out
sbb
adc
repnz
jl
ljmp
push
mov
inc
stc
mov
test
cli
daa
iret
nop
jbe
insb
sub
pop
mov
mov
icebp
xchg
mov
jnp
ja
mov
xchg
jne
push
es
je
cmpsl
iret
mov
insl
cli
pop
pop
cmp
or
cmc
std
out
mov
aas
pusha
cmp
in
negb
rorl
dec
cld
mov
sbb
xchg
stc
xchg
test
call
mov
test
and
cli
sub
stc
lock
popa
mov
test
mov
mov
cli
stos
push
sub
sub
xchg
mov
andb
jl
xchg
jmp
add
push
jg
adc
dec
rcll
clc
mov
adc
call
or
bound
push
je
inc
sahf
xchg
fsubl
fsubrs
mov
pop
sub
push
dec
inc
les
aas
je
ja
mov
jae
stos
dec
push
lcall
ret
adc
or
lock
out
scas
mov
cltd
sti
xor
jb
or
dec
cld
sbb
je
inc
xor
test
dec
clts
mov
jne
mov
dec
lock
mov
mov
out
lea
shr
adc
loop
fidivrl
arpl
push
jl
and
mov
sub
mov
mov
jb
mov
imul
movsb
enter
mov
xchg
arpl
or
mov
rorl
adc
adc
jle
jmp
cmpsb
inc
shll
push
gs
adc
stos
movl
cmp
lods
pop
jae
jl
pop
fcomp
mov
stc
push
inc
andl
fmul
pop
sub
dec
sarl
aad
push
cli
outsl
add
or
rolb
es
mov
insb
sub
inc
movsb
inc
sbb
lods
test
cwtl
mov
cmc
jnp
push
fisubl
outsb
stos
dec
cmp
adcl
mov
int3
leave
push
mov
imul
rcrl
adc
push
stos
push
sbb
repz
or
outsl
loope
jae
pop
mov
xor
popf
sbb
sbb
pop
int
jno
add
sub
fdivr
int3
iret
push
or
loop
adc
add
sti
mov
cltd
sbb
shlb
jmp
dec
call
je
sub
rcll
leave
xorl
cmc
aaa
mov
daa
mov
loopne
aas
enter
rclb
int
shrl
jne
push
inc
mov
mov
jne
mov
inc
and
pop
sbb
daa
or
add
cwtl
sbb
push
jg
inc
divb
hlt
adc
loope
mov
cmpsb
out
loop
bound
sbb
sbb
imulb
sub
push
aaa
repz
and
out
push
mov
shll
sbb
mov
mov
jne
cmpsb
hlt
mov
mov
in
adc
or
push
pop
inc
lret
sub
sbb
lods
sub
arpl
push
out
sti
into
aaa
test
or
shll
or
xlat
std
aas
push
fistpl
lret
push
dec
cs
movsb
mov
cmp
nop
jle
jns
je
arpl
clc
rcr
ss
rorb
dec
xor
inc
ja
jnp
ficoms
sub
mov
inc
enter
pop
pop
dec
jnp
mov
popf
cli
mov
out
mov
xchg
push
add
nop
inc
test
mov
hlt
and
cmc
jbe
jmp
scas
out
stc
mov
dec
arpl
pop
or
pop
jo
adc
xor
flds
add
cltd
sbb
sbb
adc
sub
sti
insb
cmpl
movsb
test
xchg
mov
insb
inc
sub
and
pop
sbb
fnstcw
bound
arpl
mov
mov
xor
cs
out
mov
mov
mov
into
add
pop
data16
out
jno
mov
jbe
sbb
inc
repnz
cltd
lock
addr16
cwtl
jmp
cmp
inc
test
inc
popf
xchg
add
mov
cltd
movsb
or
cmp
jbe
pop
adc
inc
imul
push
shlb
xchg
mov
sbb
movsb
mov
lret
clc
mov
mov
ljmp
xor
push
stc
ja
jno
adc
jge
dec
test
mov
dec
pop
fs
test
aad
pop
cmp
add
mov
push
inc
clc
sbb
fisttps
sub
or
pop
inc
push
inc
cmp
dec
dec
loop
popf
inc
sub
ret
in
imul
adc
imul
stos
or
xchg
shrl
xchg
mov
sbb
lods
cmp
fiadds
xor
repz
scas
ss
mov
cmp
and
jb
fisubrl
xchg
ja
cltd
clc
outsl
scas
jae
lods
ret
in
inc
xor
fdivp
inc
jmp
mov
add
insl
or
rcr
shrl
add
sarb
jl
add
adc
es
dec
jbe
loope
xchg
cwtl
movsb
inc
pop
imul
mov
ljmp
mov
das
nop
cmp
lods
push
aas
jmp
adc
lods
xchg
pusha
jl
jmp
into
lods
dec
mov
or
cmc
leave
lret
ss
lret
sub
call
ljmp
jmp
scas
ss
enter
sahf
cwtl
pop
adc
mov
outsb
or
fcmovne
movsb
shlb
sub
jns
xchg
out
cmpsl
xor
xchg
fwait
mov
test
adc
pop
pop
icebp
test
bound
xchg
repz
mov
fwait
loop
add
into
iret
in
das
add
sub
sub
test
xor
mov
mov
sbb
ss
decl
add
ljmp
hlt
push
mov
aas
push
daa
in
and
dec
std
jno
xchg
jmp
fistpl
sahf
mov
lcall
pop
sbb
aam
sub
adc
sub
push
imul
loopne
push
push
pop
xor
ja
outsl
xchg
push
pusha
ljmp
std
lods
outsl
xchg
push
int
mov
mov
imul
mov
iret
movsb
imul
in
cltd
in
cwtl
je
clc
ret
lods
cmp
jmp
pop
adc
jne
js
adc
and
xor
std
insl
cmp
pop
push
pop
rorb
dec
lock
lea
dec
push
and
call
mov
xor
adc
dec
sub
jb
sub
jae
adc
jge
call
cltd
add
push
js
sbb
cmp
rcrb
sbb
leave
push
sub
xorl
mov
or
xorl
mov
aam
pop
pop
outsl
dec
pop
mov
in
ljmp
jl
xor
mov
cmp
or
jno
das
sub
repz
lods
cltd
push
push
dec
lds
je
icebp
jnp
pop
pop
hlt
mov
lret
mov
orl
inc
and
mov
xor
push
pop
in
leave
insl
cld
lcall
or
inc
fnsave
cmp
cmovno
es
lret
in
gs
jge
or
out
push
out
xchg
jg
xchg
rclb
fstp
fldcw
aad
insl
hlt
cld
dec
call
jle
repz
lock
addr16
fisubrl
stos
adc
hlt
pop
adc
xor
pop
xor
inc
popf
sbb
or
les
js
enter
cmpb
testb
or
xchg
pop
pop
mov
sahf
sub
pop
insb
adcl
aaa
sbb
aas
sub
push
dec
add
sub
daa
scas
movsl
mov
mov
insl
test
jmp
xchg
or
rcl
pop
fwait
cmp
push
std
mov
subb
push
push
ja
cmp
jle
pop
add
mov
adc
cld
addr16
push
test
push
stos
lea
sbb
andb
cmpb
pop
hlt
test
daa
hlt
push
pop
fsubrl
sbb
mov
lahf
enter
das
adc
cmpsl
pop
lret
lcall
inc
jae
fidivs
and
xchg
into
push
mov
dec
adc
xchg
stos
mov
or
lds
pop
sbbb
sbb
shl
adc
xor
xchg
mov
cmpsl
or
addr16
fists
sti
jg
xor
fs
push
xchg
mov
sbb
in
js
mov
aas
addr16
rcll
shlb
cmpsl
jno
nop
mov
iret
mov
mov
shlb
int3
rolb
adc
ret
loopne
shll
cmc
movsl
imul
jg
sbb
orb
inc
aas
mov
imul
xchg
fstl
mov
out
icebp
jg
lcall
adc
aaa
outsb
fisttps
xor
mov
add
shll
cli
je
add
int3
stos
shl
sar
fisubrl
xchg
scas
jo
test
jl
adcl
cmp
and
incb
repnz
xchg
enter
pop
pop
stc
jp
lahf
xchg
cmp
mov
mov
sti
push
sbb
xor
cli
dec
lds
int
sub
aaa
mov
xor
adc
ret
lock
push
jmp
shll
dec
pop
aam
scas
into
out
lods
jb
in
scas
push
dec
mov
insb
add
fsubr
icebp
stc
adc
pop
mov
inc
rorl
pop
jne
mov
testb
inc
push
repz
shl
or
rorl
pop
lods
mov
es
xor
push
into
popa
cmpsb
cmp
mov
fwait
jae
xlat
aaa
mov
mov
sbb
stc
fsubrs
cwtl
cmp
jl
ljmp
adc
sahf
cmp
or
mov
insb
jge
jg
mov
call
data16
scas
xchg
push
sbbl
lods
jg
add
movsl
sahf
scas
jecxz
xor
mov
scas
enter
sti
ret
in
pop
out
or
lods
dec
das
aam
enter
jle
outsb
add
adc
in
pusha
es
stos
pop
dec
cmp
mov
jg
lds
stos
cmp
sbb
fldt
adc
xlat
aaa
xor
add
in
jbe
push
dec
mov
jo
or
pop
pop
fdivr
lds
or
and
out
cmp
push
bnd
pop
xor
and
std
mov
es
mov
xorl
pop
repnz
imul
outsb
inc
sbb
jl
hlt
inc
adc
gs
lret
fs
jbe
pusha
mov
push
jmp
es
dec
int
xor
adc
mov
inc
xchg
icebp
adc
aas
scas
ficomps
inc
xor
jg
sbb
and
sub
jb
cmp
aaa
fs
leave
lds
push
mov
addl
xor
push
push
lods
xor
mov
or
incl
pop
push
mov
rcll
pushf
cmc
adc
mov
pop
dec
scas
xchg
cld
les
or
leave
les
mov
pushf
fsubl
cli
add
push
pop
shrl
ds
adc
imul
into
xchg
jl
push
pop
inc
adc
inc
scas
xor
gs
fidivs
inc
scas
jg
sbb
mov
or
ljmp
or
push
lods
jno
mov
repz
add
test
sub
xchg
dec
push
jno
es
add
xor
les
adc
sete
cmp
add
ficompl
shrl
stos
repnz
pop
lods
jae,pn
inc
fistl
inc
push
cmpsl
sub
lahf
jge
ja
test
adc
test
lret
outsl
in
mov
lcall
scas
arpl
push
push
popf
inc
cli
lock
cmp
mov
xor
pop
fs
insl
lock
negb
adc
inc
lret
rcr
scas
pop
daa
sub
cs
fcmovu
sti
in
pusha
push
jno
inc
jge
loope
mov
es
sbb
movsl
test
leave
cmp
push
test
xorb
add
jnp
xchg
out
adc
mov
dec
mov
repz
lea
inc
xchg
ret
arpl
adc
mov
aaa
out
repnz
jae
mov
aam
fstps
push
cmp
cmc
mov
popf
ja
inc
sub
stc
lods
mov
lret
pop
shl
pop
mov
cld
hlt
cmp
test
and
mov
je
nop
and
je
stc
fistl
jle
movsl
dec
jecxz
xchg
negb
pop
or
sarb
in
mov
sbb
adc
mov
inc
jle
inc
mov
roll
mov
arpl
in
enter
int3
sub
cmp
sbb
fldln2
pop
cmp
mov
cmp
sub
adc
stc
xor
and
pop
mov
cmp
adc
cmpsb
mov
int3
inc
mov
add
adc
call
out
and
inc
cmc
xchg
test
fdivs
mov
mov
xor
testb
mov
stos
jo
push
jne
aad
js
test
cli
cld
mov
addl
jl
movsb
js
jl
gs
icebp
test
lret
sub
inc
repz
xor
inc
adc
push
iret
stos
mov
cld
insl
jne
xchg
jl
cmpb
lock
imul
add
sub
das
gs
data16
xor
jmp
cld
jae
pop
je
data16
inc
fs
cmpsb
mov
incl
push
xchg
cmc
xorb
or
outsb
push
scas
movsl
cli
test
icebp
push
inc
or
std
fsts
jge
jo
cli
xchg
add
dec
ss
cmp
fiaddl
xchg
jno
mov
loopne
dec
push
ljmp
pop
bound
out
xchg
and
cld
push
sbb
insl
leave
sahf
leave
mov
mov
sub
out
test
mov
fidivrs
cld
ja
out
ss
dec
js
shll
das
loopne
lods
ja
in
push
rcr
lcall
pop
xor
dec
push
cmp
inc
out
jl
xchg
push
adc
push
cmpsb
xor
or
add
mov
fmuls
fcompl
mov
icebp
jno
das
loop
lds
stc
in
add
jge
lods
cwtl
dec
insb
sub
sub
or
mov
jle
dec
sbb
mov
add
jmp
gs
add
ds
mov
fwait
out
mull
sbb
subb
add
fnstsw
mov
cmp
adc
out
cs
jl
pop
adc
movsl
inc
out
or
and
pop
sbb
ret
pushf
ret
sbb
aaa
mov
xchg
or
sbb
jb
cmpsl
sub
xchg
mov
ret
xor
leave
xchg
popa
push
call
fsub
jns
jno
or
leave
repnz
loopne
xor
mov
adc
outsb
dec
not
push
mov
das
adc
mov
inc
lahf
clc
outsl
lock
add
in
push
jmp
sub
mov
nop
pop
mov
pop
dec
xchg
xchg
or
cli
xorb
fsubr
in
xlat
add
adc
imul
mov
test
daa
fcoms
mov
inc
push
sbb
add
imul
jae
clc
push
xchg
arpl
sbb
stos
aad
repnz
fisttps
lahf
sub
jne
add
in
cmp
cmp
push
imul
mov
jo
sti
add
mov
fcmovnb
dec
adc
pcmpeqb
or
jbe
jae
push
and
movsb
hlt
cs
push
fldt
lahf
cmp
sub
std
mov
jle
push
scas
xchg
cmp
outsb
les
aas
repnz
aad
mov
int
popf
push
inc
xor
lds
test
in
ss
shlb
orl
sub
pop
xor
fcom
sub
inc
mov
push
mov
mov
and
popf
jecxz
add
rcrl
aad
mov
sub
lret
stc
std
push
mov
popa
push
mov
frstor
mov
jg
cld
jbe
and
cmp
mov
inc
in
sub
popf
pop
insb
xchg
rorl
jl
pushf
push
mov
pop
xchg
and
dec
hlt
leave
clc
push
push
push
or
xor
mov
aam
out
xor
mov
rorb
adc
jecxz
cmc
mov
inc
shr
and
inc
jecxz
fisttps
add
outsb
data16
loop
insl
lods
repz
mov
int3
fsubrs
mov
mov
mov
push
push
adc
test
jb
loope
mov
adc
jge
push
xchg
xchg
shll
cmpsb
push
inc
popa
sbb
xchg
lods
outsb
rcll
mov
jae
cltd
inc
xorb
mov
pop
nop
cmc
dec
jmp
dec
cld
in
lcall
into
popf
mov
push
push
and
shll
sbb
dec
push
loope
jb
adc
inc
xchg
dec
sarb
hlt
rcrb
mov
jge
js
into
lahf
lods
es
aas
add
mov
push
xorb
lcall
daa
aaa
aas
imul
push
fimuls
lret
lock
sbb
xchg
dec
xchg
leave
test
out
js
xchg
test
jne
js
daa
xchg
pop
xchg
das
jae
lods
sarl
inc
adc
lcall
insl
test
outsb
push
pushf
js
loopne
sbb
xchg
nop
inc
mov
int3
jae
sahf
sti
in
or
mov
fsts
das
mov
pop
inc
and
bound
int3
call
pop
lods
ljmp
push
push
fcoms
xchg
jne
jbe
xchg
lods
out
mov
in
sub
jo
adc
enter
adc
and
je
xor
aad
or
aas
and
fnstcw
mov
std
shll
xchg
imul
rcr
jl
xchg
addr16
test
pop
adc
dec
std
icebp
inc
jno
mov
cmp
jb
out
out
fldcw
fldpi
pop
in
sub
dec
aaa
jg
cmc
dec
or
test
jo
adcb
out
lret
std
icebp
mov
shrb
jns
xchg
outsb
ret
imul
cwtl
xor
or
pop
or
xor
popa
mov
enter
insb
cmp
popa
push
cmc
movsb
xchg
repz
lods
in
aad
or
movsb
xor
imul
outsl
int3
mov
movsb
cli
jo
in
fisubs
cmc
cld
mov
sub
test
push
or
out
cs
popf
push
sbb
jo
je
add
sbb
inc
cmp
and
pop
sbb
sbb
xchg
push
lds
mov
xchg
mov
dec
scas
imul
out
xchg
mov
adc
std
repz
sub
fistps
jae
inc
loope
out
cmpsb
test
cmp
xchg
imul
imul
xlat
int
inc
stc
cwtl
mov
fsubrp
push
sbb
pop
dec
fimull
adc
negl
sub
cmp
pusha
mov
jne
xchg
adc
add
mov
pop
ret
dec
pop
shlb
sbb
aad
outsl
out
xor
outsl
andl
jg
cmpsb
sub
mov
dec
in
sub
loope
shrb
pop
lods
rclb
jg
sti
arpl
hlt
adc
push
test
testb
popa
jl
ret
mov
mov
cmpsb
xchg
xchg
in
jmp
fmuls
cmp
xchg
mov
fisttpll
and
lods
jmp
sbb
scas
cmp
mov
out
adc
and
enter
jbe
les
push
inc
outsl
or
dec
stos
mov
sub
in
pop
lods
movl
xchg
ja
stc
scas
jp
jbe
imul
pop
loope
sbb
sbb
push
mov
movsb
sbb
pop
jno
mov
mov
pop
mov
inc
xor
sub
jp
adcl
test
xchg
mov
sub
fs
in
or
cmp
adc
push
stos
push
mov
xlat
mov
je
repz
cmp
addr16
addr16
flds
mov
sub
mov
sub
fld
xchg
je
movsl
sub
mov
sbb
sbb
pop
dec
sbb
push
es
sbb
pop
adc
adc
mov
mov
in
dec
push
mov
pusha
mov
daa
inc
rdtsc
adc
cmpsl
xchg
das
mov
punpcklwd
mov
push
lret
mov
inc
cwtl
loop
mov
popf
dec
ret
push
sbb
sbb
daa
repnz
inc
divb
jae
cmp
fcmovbe
push
sar
add
pop
mov
jge
add
xor
xor
shlb
mov
cmp
fldl
pop
mov
in
mov
enter
loopne
cmp
int3
int3
lods
sub
enter
test
je
enter
cmp
push
sub
dec
push
aaa
pop
push
out
cmp
out
popf
push
je
jnp
lcall
lods
adc
aad
pusha
add
decb
fists
lock
add
add
sti
jp
out
in
mov
or
sbb
cmp
bound
mov
repnz
jnp
xchg
lret
and
imul
dec
sub
fs
mov
movsl
or
rcll
aaa
mov
mov
shrb
mov
f2xm1
and
adc
adc
lea
repnz
mov
movsl
add
shl
js
cmp
jne
ret
mov
sbb
adc
cli
outsl
bound
scas
test
pop
sub
xor
lcall
push
push
push
sbb
bound
add
and
lods
adc
inc
jmp
inc
sub
test
xchg
shrb
fdivs
int3
jo
dec
cwtl
push
iret
or
call
jo
stos
inc
add
mov
xor
sbb
mov
sub
ja
imul
jmp
cmp
mov
mov
lea
push
xor
clc
xor
cmpsl
nop
and
or
lock
mov
pop
sahf
cld
rcrl
xlat
xchg
cmp
sbb
rorl
inc
add
mov
ret
mov
and
out
pop
jp
mov
sbb
add
pop
mov
xchg
cltd
test
dec
aaa
lea
test
or
std
pop
jbe
xchg
loopne
xchg
xor
scas
das
mov
push
sbb
adcb
lahf
movsb
inc
cmc
addr16
and
add
cmc
test
cmpsl
ds
dec
int
out
cwtl
jae
stos
cmpsl
and
push
xchg
push
xchg
lea
sbb
jns
popa
testb
cmpsl
and
jns
pop
push
mov
iret
fsubs
pop
pop
jae
xchg
fcomps
lret
inc
lods
flds
push
fisubrs
pop
es
dec
mov
test
enter
std
add
test
xor
jp
fildl
in
shlb
add
add
pop
fidivrs
push
dec
push
loope
cmp
mov
lods
xorb
adc
inc
into
dec
cmp
sbb
dec
adc
je
scas
lcall
dec
push
or
push
pop
negl
cmp
std
and
mov
push
pushf
adc
sti
ss
sub
inc
cmc
lret
shll
mov
lret
js
out
shlb
pusha
in
mov
xchg
idivl
lahf
iret
xchg
or
xchg
aaa
in
jbe
or
mov
sarl
dec
push
addr16
mov
and
pop
jns
loopw
pop
jg
and
sub
add
lahf
sbb
xchg
mov
cmp
in
adc
mov
pop
test
sub
dec
out
jp
lcall
insb
push
lcall
jl
adc
fsubrs
xchg
push
or
hlt
pop
add
testb
popl
jns
aaa
pop
sub
lods
push
movsl
pop
mov
push
xchg
fsubs
roll
mov
dec
push
mov
cmp
int3
adc
loop
imul
sbb
jno
sub
xchg
sbb
ficomps
fs
add
ss
sbb
lea
loopne
mov
mov
dec
in
mov
mov
pop
mov
pop
ljmp
pop
pushf
ret
push
ret
mov
jae
cmovs
ds
adc
jl
jp
xor
scas
popa
pop
sti
push
dec
mov
orb
cld
push
repz
test
popf
out
aad
mov
call
mov
or
inc
outsb
mov
mov
int3
inc
sbb
push
fcomi
mov
push
fnsave
jecxz
mov
adc
cld
insl
sbb
cltd
aad
lods
cld
or
negb
jae
rorb
mov
cmp
stc
mov
js
push
popf
lods
jle
cwtl
je
or
adc
cmp
add
mov
jg
dec
push
push
pop
mov
gs
icebp
popf
add
push
or
mov
insb
pusha
xchg
push
in
mov
add
mov
test
or
and
leave
outsl
test
adc
add
jp
pop
aad
xchg
pop
std
adc
sbb
push
and
jg
mov
sti
int
push
fwait
push
insl
mov
and
adc
inc
leave
cltd
and
test
mov
adc
inc
push
addb
pop
jecxz
mov
lds
leave
add
jg
ficompl
push
xchg
mov
push
enter
mov
arpl
and
fdivrl
rcll
lock
sub
xchg
inc
sub
rorl
in
mov
sbb
jo
fbld
inc
and
outsb
mov
ss
ret
pop
ss
mov
dec
xor
mov
mov
shl
pop
test
in
clc
shr
or
cmp
loop
aam
cli
dec
mov
sbb
pop
add
xchg
mov
cli
dec
push
shll
inc
popa
ret
xor
hlt
xor
pop
jecxz
nop
cld
imul
aam
sbb
xchg
test
mov
dec
add
sbb
cmpsb
popa
mov
arpl
dec
movsb
inc
push
push
sarl
dec
pop
addl
jo
out
int3
sbb
mov
jns
inc
stc
xchg
jne
es
add
push
mov
inc
pop
lcall
inc
mov
jne
pop
pop
lods
addr16
flds
and
aas
cs
fs
dec
push
popa
lods
fwait
mov
add
xchg
leavew
or
andb
cmpsl
lock
daa
dec
in
lods
push
jp
xor
inc
sahf
icebp
xchg
roll
icebp
inc
in
cli
sbb
shl
lods
enter
pcmpgtb
and
ljmp
out
mov
jg
mov
push
push
loop
mov
mov
sahf
dec
test
cmp
adc
mov
scas
jl
jns
pop
lret
std
iret
mov
add
or
or
loop
xor
out
ret
call
iret
xchg
movsb
in
lock
sbb
jmp
shrb
aad
adc
jnp
push
cmp
and
pop
and
adc
push
lea
icebp
mov
pop
xor
add
negb
pop
push
or
sti
into
mov
imul
and
fstps
pop
xor
mov
js
lahf
mov
sbb
cmp
fucomip
and
jg
jns
incl
pushf
das
push
aam
pop
popl
pushf
in
add
shrb
aam
sub
pop
loopne
inc
xchg
inc
test
and
sbb
out
cmp
insb
xor
je
xchg
lds
fadds
sub
lret
inc
fdivp
lret
es
jb
mov
fildll
aam
sbb
sbb
or
jo
sbb
xor
dec
sbb
gs
add
jmp
jbe
xchg
lock
fnstenv
ja
outsb
movsb
arpl
sub
test
sahf
xchg
fmull
aad
aaa
and
mov
or
js
out
arpl
pop
imul
xor
and
loope,pt
out
mov
es
test
outsl
jno
cmc
int
jmp
rcrb
sbb
test
lods
rclb
jge
mov
lock
fistpl
adc
lret
fs
jno
lahf
loope
sbb
fsts
or
rolb
dec
inc
dec
out
movsl
sbb
lds
flds
or
ficoml
inc
jg
aaa
dec
in
pop
test
jecxz
cmpsb
jp
repnz
push
mov
nop
jo
xor
fmull
in
push
jns
mov
adc
dec
inc
mov
push
notl
pop
and
mov
sub
test
insl
dec
imul
sub
inc
nop
mov
movsl
mov
cmp
cmp
cltd
aad
push
test
lods
add
cmp
stos
cmp
sti
mov
cmp
stos
fnstenv
imul
dec
mov
dec
roll
xor
mov
enter
xchg
cmc
xchg
jne
jle
mov
mov
inc
insl
push
std
repz
ss
mov
dec
and
mov
rcrl
in
popf
xchg
fstl
xor
xor
js
and
movsb
dec
push
stc
loope
pop
xlat
fstpt
jb
mov
jne
sbb
jle
jmp
or
jg
lahf
inc
adc
cmpxchg
jnp
mov
add
pop
jbe
jne
jbe
pop
mov
lret
enter
push
test
cld
in
les
mov
movsb
outsl
adc
push
loop
test
cwtl
out
jnp
xchg
js
in
xchg
test
aas
lds
sub
dec
das
lock
scas
notl
out
cmpsl
pop
js
fstps
or
loopne
mov
jbe
imul
icebp
aam
fdivr
aas
push
and
push
pop
imul
ja
rol
push
sub
mov
mov
push
int
pop
bound
aad
mov
out
mov
cmp
xor
pop
or
mov
ret
mov
testb
cmp
pop
add
inc
int
or
lret
ret
adc
daa
jle
js
jne
pop
int
mov
cmc
pop
jecxz
push
adc
clc
es
stc
mov
or
inc
and
out
mov
jecxz
xor
add
mov
test
stos
cs
loopne
pop
xor
je
xchg
dec
xor
js
imul
stos
divb
cld
cmpsb
insb
addb
fcoml
sbb
push
inc
ja
popa
sbb
pop
push
loope
dec
push
fsubs
addl
mov
arpl
test
lcall
sbb
les
push
out
es
and
imul
cmp
mov
dec
or
or
sbb
fbstp
push
fsubrl
sbb
out
push
imul
cs
repnz
xor
cmp
xor
xor
adc
xchg
dec
pusha
push
xchg
cld
outsl
sub
mov
out
cmp
and
push
cmp
vcvttss2si
mov
mov
dec
jo
push
test
and
or
leave
cs
mov
adc
sbb
xor
and
jns
sub
fdivs
or
jp
mov
out
sbb
daa
mov
or
inc
or
cltd
aad
sub
into
repnz
out
cld
cli
in
mov
cld
cmpsb
jno
jle
cld
cs
cmpsb
ret
pop
mov
mov
mov
hlt
pop
xchg
mov
inc
orb
fstps
lea
rorl
mov
negb
lret
pop
inc
jne,pn
and
movsb
push
fldenv
inc
imul
aaa
mov
gs
ret
out
cs
sub
out
popa
jb
cld
inc
sbb
cltd
adc
les
fdivr
popa
es
int
mov
inc
dec
cmp
ret
out
jne
stos
add
mov
enter
mov
dec
fcmove
cld
les
es
mov
mov
add
push
inc
sbb
inc
popf
push
stc
idivl
and
test
xor
xor
mov
in
dec
sbb
or
stos
mov
jg
fdivs
cwtl
mov
ret
sub
test
cmp
shlb
fs
inc
mov
push
dec
sbb
sbbl
imul
test
lock
cwtl
fidivrs
test
cmpsb
sti
dec
cmp
xor
hlt
sub
xor
jns
or
and
aam
test
push
hlt
mov
leave
xchg
jg
pop
outsl
aad
mov
xchg
out
push
xchg
les
loopne
xor
mov
lock
or
cmp
jo
push
mov
std
orl
jne
mov
pop
pop
filds
mov
rcrb
adc
in
decb
das
mov
bound
daa
xor
addr16
pop
pusha
push
addr16
out
mov
notl
flds
popf
movsb
mov
adc
cmp
std
div
popa
hlt
pop
sub
out
xchg
dec
popf
sub
mov
outsb
cmp
sahf
into
fwait
shlb
pop
fbld
push
adc
ret
and
mov
addr16
adc
jge
jmp
sub
shl
mov
lea
pop
js
or
ljmp
out
mov
ljmp
or
push
xor
jnp
sbb
lret
mov
dec
mov
int3
and
scas
adc
inc
add
pop
clc
es
xchg
stos
xor
jmp
frstor
aas
mov
jne
xchg
adc
test
add
adc
lret
mov
mov
cmp
mov
call
flds
sbb
cmpsb
mov
xor
pop
shll
int
les
cltd
jge
or
mov
or
pop
cli
push
inc
ret
jmp
mov
mov
cmp
scas
sub
or
ret
mov
fxch
leave
jecxz
into
cmp
outsl
test
adc
xor
mov
sub
lods
mov
bound
out
sti
cmc
rclb
or
cmp
setp
jbe
mov
adc
mov
push
or
mov
mov
data16
jle
xor
pusha
inc
shrb
mov
push
cmp
pop
xchg
pop
insl
jecxz
jns
xchg
faddl
jecxz
stos
mov
mov
or
pop
push
dec
cmp
stc
shlb
pop
test
jbe
add
pop
xchg
das
mov
outsl
out
fnstsw
popa
sbb
aad
les
cmp
lret
pushf
rorb
fdivl
xchg
pop
mov
adc
cmp
out
jmp
and
xor
and
jmp
cmpsl
test
mov
cmpsb
mov
cmpsb
shrl
mov
and
or
xor
jb
inc
or
inc
ss
icebp
imul
dec
into
xchg
or
jbe
inc
rsm
jge
xchg
cmp
push
dec
mov
outsl
mov
xchg
inc
hlt
mov
test
outsl
mov
lret
addr16
xor
and
mov
jo
cmpsl
into
iret
inc
mov
in
jbe
and
repnz
out
jl
jnp
push
push
dec
jle
cmp
addr16
inc
push
push
push
das
movsl
movsl
cmp
inc
mov
sbbb
test
jge
dec
mov
and
inc
push
sub
outsl
pop
int3
adc
push
jne
mov
adc
imul
fdivrl
fistpll
add
mov
mov
jae
add
xor
jp
hlt
insb
jno
pop
outsl
xorl
sbb
sub
sub
aad
mov
test
push
movsl
add
out
aas
push
out
call
subb
je
loopne
add
xorb
pushf
dec
mov
int3
mov
aam
jle
into
sbb
cmpsb
push
inc
or
call
jno
pushf
add
mov
out
in
std
insb
sub
xchg
in
mov
scas
push
dec
scas
pop
mov
mov
sbb
test
push
xor
mov
dec
out
add
pop
cmpsb
add
loop
das
enter
imul
dec
jg
sti
dec
or
aad
data16
xchg
sbb
jle
repz
cmp
add
negb
leave
dec
popa
test
xor
shrb
stc
js
push
shll
das
inc
sbb
jb
adc
pop
insb
cmpsl
jge
sub
lods
mov
add
mov
iret
push
ss
out
mov
sbb
bound
sbb
stos
jnp
sar
fs
ljmp
mov
lea
push
add
ljmp
dec
imul
clc
pop
mov
lods
mov
pop
lahf
js
sbb
sbb
or
lock
cmp
cmp
inc
ret
int
sub
sub
int
sub
and
fbld
stos
sahf
lahf
in
pop
and
jl
into
jnp
push
popf
sbbb
imul
mov
jo
add
repz
insb
xor
xor
test
inc
xor
mov
insb
je
inc
pop
jg
pop
iret
jge
jne
xchg
imul
clc
repnz
shrl
xchg
xor
add
mov
stos
daa
insl
lea
adc
or
lret
dec
pop
add
pop
imulb
daa
and
jp
mov
dec
repz
popf
imul
lcall
and
imul
sbb
rcl
les
adc
pop
inc
push
mov
out
les
into
test
in
test
arpl
test
pxor
push
hlt
adc
push
mov
dec
in
inc
and
std
out
xlat
push
jb
int
mov
addr16
ja
or
jno
inc
or
jecxz
jle
jmp
xchg
decb
out
pop
stc
push
mov
mov
push
and
xor
xor
aam
mov
and
out
jl
fcoms
fildl
cmpsb
mov
nop
in
inc
dec
sub
inc
xchg
jmp
push
rolb
mov
shll
or
int
push
sub
pusha
adcb
shrb
nop
sar
call
push
mov
pop
or
cmp
lcall
push
push
add
clc
mov
and
icebp
xchg
jmp
adc
das
bound
imul
cwtl
dec
xlat
movsb
add
gs
inc
sti
adc
jge
sub
jp
mov
mov
icebp
xor
sub
pop
jbe
lea
xorb
or
jns
and
data16
fnsave
icebp
aad
push
lea
les
loopne
mulb
pop
mov
xor
lock
xchg
mov
dec
les
pop
in
call
fsubrl
fildl
dec
mov
jae
cmp
sub
pop
push
jbe
test
jmp
sbb
inc
in
adc
cmc
addl
outsb
imul
adcb
mov
push
adc
cmp
imul
inc
xchg
or
movsb
inc
mov
sub
cmp
imul
scas
inc
mov
orb
insl
or
fs
cmpsl
add
les
inc
mov
cmp
out
mov
in
and
cwtl
dec
incl
cmp
call
add
stc
std
pop
pop
insb
out
mov
mov
in
mov
add
mov
sbb
movsl
xorb
ljmp
mov
icebp
rorb
cld
loop
dec
cmp
or
fldenv
mov
jno
adc
lods
int
nop
mov
sub
xchg
push
call
mov
stos
fldt
leave
add
push
test
sbb
in
sub
add
shlb
ds
add
pop
xchg
push
inc
jg
push
pushf
fld
in
frstor
dec
sbb
int
ljmp
push
sub
in
out
dec
pop
pop
or
cmpsl
sub
and
pop
cli
call
arpl
je
xchg
je
packsswb
imul
int3
popf
daa
int3
xchg
or
jae
pop
bound
push
bound
in
out
lea
out
rolb
lods
pop
pop
mov
repz
jmp
sub
dec
leave
fwait
dec
push
insb
add
rclb
xchg
or
in
lcall
ja
dec
lret
sub
mov
pop
and
and
cmp
adc
sub
mov
xor
inc
sahf
and
jmp
mov
cmpsb
mov
cld
scas
inc
and
lods
mov
fldt
nop
fs
movsl
fcoml
lret
sbb
jne
jns
lret
and
dec
das
ss
divb
dec
pop
mov
movl
mov
popa
les
push
popf
xchg
stos
loop
lea
divl
xor
and
and
ss
xchg
inc
pop
shl
lods
mov
xor
shl
mov
stc
repz
lcall
cwtl
inc
mov
cli
jo
nop
xor
push
jle
or
jns
lret
outsl
cs
frstor
lcall
sbb
pusha
push
stos
aaa
stc
gs
in
out
rolb
xchg
imul
inc
les
dec
shll
and
push
outsb
icebp
popa
cmc
cmpsl
aaa
icebp
sbb
pop
repnz
leave
jbe
enter
inc
std
inc
xlat
nop
mov
adc
dec
ds
rcl
into
mov
mov
cmp
dec
es
pusha
jmp
mov
cs
push
push
outsb
cmpsb
push
data16
fldt
fwait
xchg
mov
mov
adc
and
fisttpll
pushw
mov
mov
push
push
jg
ds
pop
mov
jle
test
adc
or
adc
loop
jecxz
cs
popf
std
xchg
push
mov
xlat
push
arpl
lock
add
push
inc
jmp
add
push
adc
lods
xor
hlt
daa
repnz
or
test
xchg
imul
and
sbb
inc
push
xor
or
dec
test
push
cwtl
push
and
pop
test
lret
dec
dec
lds
mov
push
ficoml
call
xor
fsqrt
popa
cmp
jecxz
mov
mov
mov
popa
std
out
call
dec
lds
test
or
cmpl
push
pushf
repnz
into
scas
push
adc
xor
loop
jo
jg
in
subb
mov
mov
dec
shr
adc
jge
pop
add
rcr
test
mov
mov
outsb
jno
sub
push
and
or
mov
icebp
and
adc
pop
cs
cmpsl
push
sub
mov
xchg
lahf
out
test
aaa
and
ss
jmp
in
movl
lds
push
notl
ret
ret
pop
notb
mov
pop
sub
dec
popa
mov
movsb
loopne
lods
adc
inc
cli
sub
lds
sbb
icebp
mov
or
lret
sbb
lret
cs
cwtl
aam
mov
cmpsb
inc
aas
xor
fwait
lcall
sub
mov
shl
push
inc
add
push
push
sub
rclb
aad
ljmp
mov
dec
adc
add
in
pop
loope
dec
push
pop
out
jp
jmp
loop
sbbb
jno
cltd
test
jecxz
inc
inc
jne
cli
inc
cld
popf
jb
or
and
sti
push
xor
mov
xchg
aas
stc
shlb
out
hlt
lds
das
sub
cs
dec
sub
dec
daa
clc
xor
adc
mov
out
mov
push
outsl
fs
ds
pop
mov
scas
cmp
adc
cmpsl
std
jb
mov
out
sbb
xor
sahf
in
add
and
into
and
fisttpll
shll
mov
pop
sahf
mov
rcrl
fcompl
repz
push
loope
adc
insl
scas
popf
xchg
pop
adc
movsl
inc
jmp
stc
xorb
ud2
cmp
fsubs
call
nop
cmp
mov
dec
dec
add
inc
sbb
ss
cmp
adc
std
push
icebp
call
or
xchg
sar
into
add
xor
in
stos
popf
loop
dec
popa
cmp
push
mov
mov
mov
lock
sub
call
lret
cmp
push
pop
adc
jmp
jno
inc
adc
ja
push
xlat
or
loop
gs
shrb
dec
push
repz
int
cmp
pop
mov
mov
mov
sbb
or
inc
call
jne
lahf
faddp
in
jns
mov
pop
pop
jo
pop
fstl
test
movsl
lock
pop
mov
xlat
dec
push
push
cld
dec
mov
push
and
push
pop
sbb
stos
aaa
fwait
int
cmc
mov
and
fldl
lds
add
mov
movsb
pop
push
imul
mov
idiv
cltd
push
add
fsubp
jmp
int3
test
test
or
in
mull
enter
icebp
cld
cltd
shll
inc
cmp
les
clc
mov
adc
cmp
das
pop
cmp
dec
das
mov
nop
and
sbb
jnp
push
push
add
fisttpll
mov
rorb
shr
mov
xchg
jno
scas
subl
std
pop
imul
xchg
adc
lret
subl
dec
mov
cmp
add
jnp
mov
and
dec
or
xor
cmc
lret
jg
xor
mov
lcall
roll
sti
out
mov
popf
mov
in
mov
cs
sti
clc
xchg
jg
fisttpll
cld
mov
fcomps
int3
pop
fdiv
setp
sbb
add
sub
loop
cmc
lods
ret
mov
sub
data16
jecxz
and
mov
aaa
sbb
or
rolb
or
ja
arpl
mov
xchg
mov
sbb
cmpsl
sbb
fistpl
and
inc
jle
int
pop
xor
ret
mov
in
and
xlat
ficoml
push
fwait
mov
and
mov
cmp
sbb
ds
adc
xchg
es
xchg
add
repnz
fwait
xchg
lcall
shl
outsl
jp
push
aas
cmp
inc
mov
enter
adc
or
sbb
fstp
push
aam
fdivrp
mov
ja
jne
jmp
and
int
sub
xchg
sbbb
jl
dec
pusha
add
push
jnp
jo
mov
inc
sub
jnp
ja
mov
adc
inc
xchg
mov
dec
fwait
mov
push
stc
mov
fiaddl
jo
push
xchg
ret
mov
out
aas
push
hlt
shl
or
stc
mov
lret
inc
adc
pop
push
pop
movsb
insl
cmp
jmp
pop
adc
jne
inc
je
call
cmpsb
mov
fistl
loop
cmp
jb
xchg
sub
cmp
frndint
inc
std
and
notl
test
aas
mov
sub
fsubr
xchg
jbe
cmp
je
cmp
out
push
rol
mov
mov
adc
int3
jl
mov
mov
dec
lock
and
sti
mov
lods
pop
inc
and
pushw
sti
daa
das
hlt
scas
xchg
mov
adc
sub
xchg
or
cwtl
mov
mov
js
dec
addr16
pop
sti
or
pop
mov
in
push
mov
mov
sti
mov
mov
repz
mov
adc
call
xchg
push
movsl
mov
and
fildl
push
mov
sbb
adc
inc
bound
das
jbe
push
inc
out
jg
mov
movsl
xchg
sbb
fs
cltd
call
inc
dec
xchg
push
outsb
fidivrs
jne
mov
inc
add
mov
or
sahf
je
pop
lret
iret
das
dec
icebp
xchg
or
jne
dec
repz
addr16
icebp
sbb
fs
jecxz
adc
popf
pushf
cmpsl
cmc
adcb
ljmp
addr16
aam
and
push
pop
xchg
gs
or
jnp
cwtl
xchg
sub
out
sub
addr16
ljmp
push
lahf
jbe
inc
shlb
and
dec
dec
sahf
xor
sbb
clc
jg
divb
rorb
idivb
xor
addr16
jl
push
xor
push
clc
jle
dec
jle
add
add
repnz
mov
iret
xor
sbb
ja
inc
cmpsb
xchg
mov
sbb
stc
inc
sub
sub
or
xchg
fstl
sbb
pop
mov
sub
das
inc
aam
pop
in
xor
aam
test
jle
shrb
cmpsb
daa
adcl
sbb
repnz
adc
push
rol
pop
inc
inc
test
movl
int
cmpsb
stos
mov
jmp
addl
or
jg
mov
pop
cmpsb
iretw
cltd
subl
inc
jne
and
in
fiaddl
cmp
and
sub
sub
pop
shll
add
sahf
mov
ljmp
add
jnp
xchg
inc
lods
adc
xchg
inc
add
inc
inc
mov
pop
or
mov
nop
insl
sbb
add
adc
iret
mov
xchg
and
lret
outsb
cwtl
flds
xchg
adc
outsl
pop
mov
dec
subps
xchg
sub
test
divl
out
or
dec
imul
xchg
xchg
cmp
dec
sbb
dec
je
push
cltd
arpl
scas
pop
mov
cs
sub
hlt
js
movb
stc
gs
pop
fwait
int3
push
jne
loop
xchg
cmp
bound
jb
shl
add
ret
jecxz
cltd
add
sbb
loope
adcl
xor
clc
sub
mov
sar
mov
sbb
int
inc
xchg
gs
fcoms
or
xchg
stos
and
sub
cmp
jbe
adc
mov
pushf
cmp
xchg
mov
push
rcrl
xchg
addr16
scas
cmc
aaa
jecxz
in
mov
xchg
or
imul
push
add
movnti
add
xor
xorl
push
idivl
rorl
test
sti
stos
es
jl
xlat
mov
mov
stos
movsb
ljmp
inc
psubb
sbb
xchg
pop
mov
loop
pop
push
lahf
and
push
xor
inc
movsb
and
insl
lcall
popf
xabort
cmpsl
imul
dec
call
addr16
int
fisttps
call
jbe
push
xor
xor
fstpl
jge
jne
pop
mov
sbb
std
loop
jne
lret
xchg
inc
pusha
mov
cld
jge
dec
hlt
gs
mov
sarb
fnstcw
jno
stc
test
fst
cli
jge
cmp
sub
dec
dec
aad
fdiv
mov
roll
push
lcall
pushf
dec
mov
jmp
jle
push
call
movsb
cmpsb
jbe
or
xchg
sub
loop
ja
lcall
loope
loopne
lahf
adc
xor
dec
adc
sarb
adc
sbbl
int3
push
mov
enter
ret
in
pusha
cmpsl
ss
mov
movsl
mov
das
andl
in
ja
jae
dec
ret
add
std
pop
int
cmp
icebp
adc
out
in
stos
repz
dec
nop
inc
push
inc
nop
ficomps
push
xor
rorl
lods
cltd
or
add
add
stc
mov
inc
xlat
xchg
call
pusha
insb
pop
aas
add
xchg
bound
pop
in
or
cltd
rclb
cmp
mov
xchg
xor
jmp
pop
pop
push
cmpsb
mov
mov
js
push
cs
mov
jl
mov
jmp
sub
cmc
mov
push
hlt
and
add
jno
fstp
fmull
stos
pop
or
into
inc
fmulp
sbb
xchg
repnz
jge
pop
jno
xor
add
in
loopne
cmp
add
insl
or
mov
int
cwtl
mov
lds
in
lret
test
int3
in
pop
mov
out
test
jnp
cmp
cli
lods
shlb
lods
shrl
int
jge
push
rolb
test
out
imul
es
call
sub
inc
cmp
mov
rolb
sbb
pop
mov
fwait
lds
inc
jo
or
adc
sti
adc
cltd
aaa
mov
jle
aad
pop
in
push
wrmsr
inc
inc
jns
mov
dec
mov
div
adc
or
jg
or
xchg
pop
stos
sahf
scas
xor
rorb
movsl
pop
loopne
xchg
incl
lahf
gs
add
push
call
xor
and
sbb
sbb
rclb
out
lods
clc
xchg
adc
or
and
fsts
push
lock
sbb
add
cmp
xchg
je
xchg
je
data16
and
xor
inc
inc
mov
mov
out
rorl
lret
mov
mov
das
cmc
sti
fmuls
nop
xor
mov
bound
and
sub
std
push
xor
mov
xor
or
push
cmp
adc
ss
mov
push
sti
pop
cmpsl
xlat
and
fdivrs
xchg
in
sbbb
mov
rorb
mov
enter
adcl
sar
add
xchg
push
mov
stos
in
jns
pop
mov
xchg
inc
out
push
in
cmp
sahf
adc
fwait
mov
inc
dec
or
dec
and
movsl
xor
mov
js
cmc
popf
xor
mov
imul
arpl
mov
outsl
repnz
xchg
test
cs
add
push
stos
pop
or
xchg
xchg
push
sahf
pop
cmp
mov
xlat
mov
rcrl
and
cmp
imul
jecxz
imul
fsubs
scas
daa
cmpsl
fiadds
lods
es
fstpt
and
xor
fs
dec
clc
stc
sbb
repz
cmp
pop
mov
scas
lock
xchg
pop
inc
mov
daa
cmp
test
outsb
xchg
xlat
cmp
orb
ret
mov
inc
cmp
addr16
jmp
outsb
or
ds
add
int
jno
sbbl
jnp
or
jnp
jno
xor
test
leave
out
push
sbb
or
jb
mov
cmpsb
mov
shl
hlt
lock
add
iret
xchg
decb
push
push
adc
xor
dec
sti
aad
mov
cltd
std
shl
adc
push
test
fidivl
outsb
jp
push
mov
dec
scas
pop
shll
ds
cltd
sub
gs
dec
cmp
cmp
inc
andl
out
roll
je
in
adc
mov
sbb
add
and
sub
movsl
mov
lret
inc
add
or
ss
popa
mov
sarb
jne
jns
jle
cmp
pop
cmp
or
lahf
jle
mov
stos
add
fcomp
sbb
fdivs
vpandn
adc
mov
stc
push
and
pop
pushl
fbld
dec
adc
pop
or
or
dec
outsb
mov
jae
mov
or
xchg
inc
xchg
ret
sbb
pushf
lret
les
sub
loope
sti
stos
out
test
or
out
jb
leave
push
push
or
outsl
cltd
xor
nop
and
rcrb
push
adc
cmpsl
jp
packuswb
mov
xchg
dec
inc
cli
in
in
dec
pop
jne
pop
inc
push
sarl
pop
mov
in
add
xchg
fs
jl
mov
add
mov
test
ja
ret
mov
mov
popf
ljmp
fisubl
xor
and
xlat
into
out
pop
shlb
out
movntq
out
repnz
data16
lret
cmp
cmpl
or
test
jnp
enter
xor
stos
jmp
inc
cmp
inc
inc
sbb
add
dec
cli
js
cmp
insl
mov
or
inc
imul
pop
xor
and
ds
lock
pop
mov
and
xchg
mov
fistpl
sahf
daa
cmp
sub
pusha
mov
rclb
test
mov
sarb
je
mov
int
jmp
dec
data16
or
mov
mov
gs
push
outsb
dec
out
adc
mov
test
lea
movsl
shl
mov
dec
movsl
loopne
jno
mov
push
in
in
sbb
movsb
and
popf
in
or
int3
lahf
mov
push
roll
sbb
push
test
in
pushf
or
std
inc
addr16
cs
ret
or
inc
pop
scas
lds
xor
inc
bound
and
cmp
cmp
push
lcall
and
pop
in
and
test
and
push
lods
test
or
pop
cwtl
mulb
pop
and
outsl
js
negb
push
mov
scas
dec
xchg
cmp
mov
fdivrl
fwait
or
iret
mull
sbb
shld
inc
lock
fimuls
jge
add
aas
in
mov
xlat
int3
aaa
movsb
cmp
cmp
pop
xchg
jmp
pop
push
sub
and
pop
stos
ret
fwait
out
orl
repnz
lea
sub
je
ja
jno
and
push
enter
mov
jne
xchg
mov
in
sbb
iret
add
sbb
aaa
pop
jle
lret
cmp
sahf
jl
enter
xchg
fnstenv
sub
xchg
and
sbb
into
js
xchg
mov
jg
insb
sub
dec
ss
pusha
stos
cmp
inc
fisttps
jmp
int
xchg
negb
cmp
ret
lods
faddp
sbb
mov
pop
insl
and
stc
repz
loope
into
dec
fwait
adc
hlt
outsl
fsubr
jecxz
int3
aas
fstl
rorl
fwait
ret
das
cwtl
xchg
mov
cwtl
mov
inc
movsl
dec
mov
clc
nop
push
xor
mov
mov
mov
mov
movsl
sub
add
add
ss
or
in
stc
adc
hlt
inc
adc
jmp
rorl
cmpsb
hlt
or
fstpl
pusha
cs
push
outsl
cs
pop
dec
mov
jmp
sbb
ss
fs
sbb
push
xlat
mov
or
xor
mov
add
xchg
dec
repnz
fadd
and
xor
sti
sti
mov
jbe
pop
stc
xchg
insl
roll
sub
rclb
mov
xchg
cmp
in
in
mov
adc
rolb
aaa
es
int3
xchg
into
pop
dec
push
mov
loope
and
xchg
sbb
inc
cmp
andl
ret
pop
fcomps
mov
mov
outsb
movsb
mov
mov
push
stos
lahf
sub
add
jne
in
fwait
arpl
loopne
lcall
add
adc
loopne
lds
lea
fsubs
ret
jbe
or
mov
into
mov
pop
or
outsb
mov
mov
pop
push
inc
notb
into
imul
aam
pop
shll
repnz
pop
add
stc
push
mov
mov
mov
push
pop
sub
or
aam
pushf
mov
adc
pusha
jge
cli
fidivrl
cltd
xchg
clc
cld
mov
nop
out
dec
mov
mov
xchg
or
sub
xor
popf
ret
dec
push
push
aam
lahf
push
adc
lret
adc
sahf
insb
mov
sarb
ds
sub
adc
or
icebp
inc
push
jb
xchg
nop
push
xlat
movsb
xor
rcr
inc
push
cs
xchg
xor
push
test
lds
inc
stos
in
les
fwait
pop
dec
inc
imul
sub
pushf
or
sub
stos
xchg
jne
jl
test
aas
popf
scas
in
add
pusha
scas
lea
cs
pop
inc
sbb
cli
adc
int3
dec
test
mov
stos
leave
dec
dec
sbb
inc
scas
mov
pop
push
add
or
mov
stos
jb
xchg
stos
fcomps
leave
and
add
orb
out
and
in
sub
leave
sub
fidivrs
cmp
jno
imul
mov
adcl
lock
ret
xor
pop
iret
xcrypt-ctr
cmpsl
push
int3
mov
push
mov
mov
jp
jl
stos
sbb
test
hlt
pop
pop
and
fs
iret
movsb
pop
aad
add
hlt
jge
orb
cmpsb
mov
jae
inc
pop
cmp
ret
push
xchg
les
lock
pusha
je
mov
jo
sub
push
test
ficomps
fldenv
pop
shrb
xor
rcrb
mov
imul
pop
cmp
fidivs
in
xor
ret
push
jo
push
into
or
hlt
repnz
mov
repz
jae
psadbw
push
and
into
mov
or
fcompl
jae
adc
pop
jne
xchg
lock
jo
movsb
aas
cltd
mov
xchg
outsl
loopne
and
jno
push
and
and
and
outsl
lods
or
scas
outsl
negl
enter
js
insb
call
or
jo
addr16
mov
cltd
sbb
scas
notl
jl
cmp
or
scas
adc
sahf
push
addr16
cltd
ret
outsb
notb
aas
xor
push
pop
mov
int3
and
js
jne
inc
xor
mov
ficompl
add
mov
xchg
test
ja
or
push
dec
fisubrs
in
pop
push
and
mov
test
dec
jae
in
pop
lret
inc
nop
xchg
cmp
ljmp
xchg
cwtl
push
inc
call
es
leave
sahf
cmpsl
ficompl
xor
out
cs
mov
lea
in
inc
aam
int3
cmp
ficoms
jnp
mov
sbb
out
inc
repnz
clc
outsb
ret
loopne
je
ljmp
pop
mov
xchg
and
int
or
ret
ss
outsl
lret
outsb
and
ja
iret
mov
sub
or
mov
dec
mov
in
push
movsl
fucomp
les
bound
push
je
adc
jge
mov
push
popf
cwtl
pop
adc
cmp
jle
jl
stos
jmp
pusha
adc
xorl
es
xchg
in
lahf
in
sahf
mov
inc
sub
dec
and
lea
js
mov
inc
jp
xor
dec
scas
popl
ljmp
add
lret
subb
pop
sbb
and
test
mov
push
insb
rcrl
movsl
cld
stc
shl
xchg
jle
mov
lahf
fistl
nop
repz
lods
data16
out
sti
shlb
shlb
push
adcb
and
pop
sti
pop
add
lahf
lock
dec
ljmp
dec
jg
sahf
js
add
push
lock
dec
inc
jo
cmpsl
sbb
arpl
pop
jge
loopne
insb
inc
xchg
lret
incb
inc
mov
xchg
test
jg
pop
in
sbb
and
lock
fwait
shll
out
dec
push
mov
mov
stos
or
pop
pop
sbb
and
mov
imul
lods
scas
lcall
and
jno
insb
xchg
shrb
dec
ds
cs
cmp
mov
sbb
dec
xchg
dec
das
loope
cmp
out
inc
jge
mov
fs
lds
xchg
adc
inc
push
xor
sub
idivb
jp
stos
call
jae
leave
enter
mov
dec
or
and
sbb
jnp
je
insl
inc
sbb
cmpsl
xchg
dec
ret
add
dec
clc
xor
push
dec
les
and
mov
data16
int3
js
add
pusha
jp
jne
adc
or
fwait
or
and
xor
sti
imul
jno
pop
sub
xor
stos
iret
adc
xchg
dec
xchg
mov
lock
pusha
and
xor
inc
adc
cmpsb
leave
cmp
or
jae
inc
push
es
cmp
xchg
pop
mov
lea
xorl
inc
dec
jno
cmp
xor
ja
rcrl
pop
movsl
stc
fstps
cli
test
pop
and
imul
clc
inc
dec
ss
cmp
ficoms
cltd
int
fistpll
loop
xor
mov
int3
and
mov
test
aam
xorb
nop
push
xor
imul
aad
js
test
dec
push
jl
xor
push
cmpl
mov
notb
mov
push
xor
cld
dec
adc
test
sub
in
xchg
jo
mov
mov
dec
popa
jl
xlat
or
pop
mov
cmp
ja
xchg
push
xchg
fwait
and
shll
outsb
mov
jno
xor
imul
rcr
out
sbb
insl
lock
mov
bound
pop
rcrb
aaa
int3
jns
cmc
add
jo
sub
test
mov
cmp
popf
add
in
pop
lods
test
lea
push
cld
ficoml
mov
loope
cmp
hlt
sub
sub
daa
sti
cmp
xor
cmp
icebp
push
addr16
adc
xchg
sub
movsl
imul
jge
xchg
int3
pop
and
nop
pop
push
repnz
addr16
in
mov
push
aad
push
repz
adc
cmp
adc
push
js
push
pop
push
rolb
mov
mov
inc
test
hlt
adc
fnsave
xchg
rorb
cwtl
dec
push
inc
mov
shrl
loope
out
pop
jb
rclb
pop
inc
jge
out
mov
arpl
push
inc
sbb
popa
jecxz
jge
push
insl
or
mov
mov
sbb
lods
xor
mov
add
xor
out
enter
lret
ja
loopne
lods
mov
pushf
fiaddl
mov
push
int
or
inc
and
out
cmp
jae
push
mov
xchg
stos
cmp
push
inc
lret
and
push
push
dec
sbb
enter
imul
dec
jl
fs
aad
push
jno
mov
sarl
push
cmp
push
addl
inc
es
xlat
add
mov
loope
pop
in
add
mov
or
mov
cmp
mov
imul
and
adc
movsl
jmp
mov
push
mov
cmpsl
jle
mov
and
xchg
imul
sub
inc
push
cmp
push
test
stc
add
dec
adc
sbb
xchg
outsb
ret
dec
bound
call
jmp
das
popa
adc
mov
sti
in
sub
sub
push
jbe
xlat
fsubr
and
in
pop
stos
xchg
js
movsb
aaa
pop
dec
leave
lret
adc
xor
test
ret
loopne
mov
mov
repnz
jge
and
lds
les
cmpsl
xchg
mov
or
fcoms
pop
push
cmp
lret
push
mov
addr16
adc
mov
or
js
ss
adc
mov
mov
test
cltd
adcl
xchg
cmp
sub
test
inc
test
or
xchg
cwtl
insb
xorl
stos
push
or
bound
mov
jo
nop
mov
cmp
mov
popf
addr16
sbb
pushf
pop
xchg
add
sbb
mov
out
fwait
out
xor
push
repz
jmp
add
mov
add
xor
scas
or
mov
fldenv
xlat
or
in
testl
xor
je
mov
push
mov
lcall
lods
fcom
push
xchg
mov
mov
cmp
daa
adc
clc
lock
lea
arpl
jecxz,pn
and
dec
push
or
or
fiaddl
mov
cmpsl
mov
add
shl
xor
andb
pop
xlat
push
dec
and
mov
sub
push
jno
fidivl
pop
mov
push
xlat
je
icebp
mov
mov
jecxz
mov
mov
jns
cmp
jns
xor
push
mov
arpl
lcall
mov
jmp
xchg
cltd
cmpsb
or
out
add
sbb
fsubl
mov
scas
setns
mov
in
or
jb
add
leave
and
arpl
sub
xchg
sbb
mov
fsts
inc
sbb
mov
mov
push
fnsave
in
pop
add
adc
mov
xchg
stos
insl
clc
loopne
push
les
push
loopw
and
ja
lcall
add
or
aad
pushf
sbb
jecxz
dec
lods
sahf
addb
push
stos
mov
int3
in
iret
pop
in
pusha
decl
je
fiaddl
jge
dec
sub
inc
and
pushf
lret
mov
outsb
arpl
xor
pop
sub
lret
dec
xchg
add
inc
out
lret
xchg
adc
insl
adc
cs
ss
push
bound
jmp
outsb
out
nop
outsb
mov
dec
enter
push
push
xchg
pop
cwtl
data16
jmp
cli
into
cmp
pop
call
es
les
roll
and
pop
jae
jmp
sub
or
mov
cmp
mov
aam
sbb
fmul
xchg
je
cli
push
mov
stos
lret
push
push
sub
xchg
mulb
jnp
cld
cltd
adc
idiv
enter
push
enter
add
push
repnz
out
jecxz
outsl
loop
sbb
pusha
sub
imul
pop
mov
push
xor
pop
push
pcmpgtw
pop
push
jle
cmp
inc
xor
mov
outsl
aaa
mov
xchg
xor
sub
gs
test
clc
push
mov
pusha
test
sbb
push
out
cmpsl
sub
mov
xchg
les
push
jg
push
sbb
push
dec
pop
out
pop
mov
pop
int
lret
push
in
inc
cs
ret
pop
ljmp
xor
xor
divl
cmc
std
pop
repnz
cmp
fisubrs
rcrb
andb
inc
inc
sbb
dec
imul
xor
mov
mov
ljmp
mov
call
repnz
add
nop
mov
daa
push
inc
data16
pop
push
xor
or
lret
inc
push
cmp
add
and
mov
lds
in
xchg
cld
sbb
sti
inc
ss
or
push
daa
cmp
sti
cmp
jg
cmpsb
shr
mov
inc
lea
mov
xor
mov
fs
push
pop
movsb
ret
jno
mov
sarb
or
in
scas
mov
add
cmp
fcmovnb
mov
ss
dec
dec
in
shrb
inc
popf
jg
cmp
lods
jl
leave
test
fidivrs
sbb
inc
jp
pop
lock
ss
cmpsb
shll
in
icebp
les
fiaddl
jne
jae
das
sahf
xchg
jns
sarl
sub
or
pop
jecxz
sub
hlt
sbb
jge
out
ds
je
int
jle
xchg
jne
ret
cmp
orl
jge
mov
add
push
imul
xchg
or
xor
loop
adc
mov
out
add
loope
or
push
jge
bound
sti
fists
xchg
fwait
xor
ret
adc
stc
stos
insb
stos
mov
sub
add
rcrb
push
pop
pop
aam
flds
scas
xlat
cmc
cmp
ja
fcomi
mov
mov
test
pop
clc
cmp
jp
test
dec
lea
push
jno
xchg
cmpsb
imul
adc
pop
jo
test
push
xor
pop
mov
mov
add
lods
pop
mov
mov
pop
aad
xor
pop
outsb
inc
inc
out
dec
leave
pusha
inc
fcomp
leave
hlt
jne
mov
loopne
mov
push
jo
adc
out
outsb
pop
or
or
jno
push
leave
sarb
inc
hlt
enter
xor
repz
jle
jp
lcall
and
pop
pop
dec
push
das
sub
jecxz
pop
out
mov
pop
test
sub
dec
ss
jmp
in
pop
mov
mov
sti
sahf
fistps
cmp
sbb
test
or
repnz
sti
cmc
mov
stos
aas
mov
and
sub
movsb
icebp
arpl
dec
dec
shrl
std
iret
pop
xchg
icebp
repnz
sub
out
pop
jle,pt
sahf
jo
dec
lahf
ret
add
call
sbb
arpl
das
or
sbb
imul
xchg
lods
sbb
cltd
mov
xchg
jecxz
xlat
push
dec
push
pop
pop
jmp
push
jmp
xorb
cmp
pop
push
stc
fstpt
push
das
mov
dec
push
adc
icebp
test
sbb
jo
and
inc
lock
shl
ljmp
add
xchg
mov
mov
jecxz
add
or
pop
sbb
add
sbb
das
popa
out
lock
sub
lret
pop
pop
xchg
pop
adc
xchg
test
push
in
sub
int
adc
xchg
sbb
adc
inc
pop
add
add
gs
pop
sbbb
sbbb
mov
sub
mov
aad
dec
in
pop
mov
clc
jecxz
cmc
rcrb
stos
mov
hlt
orb
ljmp
mov
jecxz
cmpsb
ss
adc
mov
out
add
or
push
cmp
jmp
xchg
in
push
add
fisttpl
shrb
inc
mov
jb
jae
push
movsb
add
loopne
sub
push
and
daa
and
xlat
inc
inc
popa
jo
pop
adc
bound
mov
adc
je
xchg
enter
shrb
mov
shrb
mulb
adc
popa
les
xor
leave
or
pop
dec
daa
jle
xchg
dec
scas
dec
mov
sub
xchg
push
aam
lds
repnz
or
hlt
ljmp
ret
jne
xchg
gs
xchg
xor
or
popa
inc
mov
add
and
add
push
cmpsl
mov
push
push
or
push
adc
and
in
jge
add
das
or
jnp
loope
movsb
call
out
cli
mov
aaa
ret
mov
je
dec
pop
arpl
add
rclb
xor
out
enter
loop
mov
mov
xor
xchg
int3
add
push
and
or
push
inc
jl
bound
repz
pop
arpl
push
push
dec
xchg
outsb
xchg
testb
dec
dec
pop
push
pop
mov
sbb
cmpsl
cmp
sub
lds
mov
stos
inc
loope
es
pusha
cmpsb
inc
js
cltd
mov
nop
out
mov
sub
sub
inc
sbb
iret
push
cmpsb
sbb
xlat
adc
push
jp
or
pop
out
fstps
loopne
add
ds
mov
cltd
xchg
or
test
mov
pop
fistl
and
xchg
adc
rorl
jp
ficoms
push
xchg
jo
sti
clc
inc
out
push
daa
push
cwtl
pop
fcomp
and
cs
mov
ret
in
xchg
jmp
inc
mov
fcmove
rclb
xchg
cmp
aad
sub
push
mov
inc
repnz
jp
xchg
pop
and
xorb
pop
lods
xor
test
movsb
jmp
add
sti
stos
cmp
jle
cmp
imul
pusha
scas
adc
clc
aad
inc
push
jle
mov
sub
xchg
cwtl
test
call
rolb
repnz
cmpl
jne
jns
lock
inc
inc
or
mov
push
sbb
sti
inc
sub
pop
or
lods
pop
outsl
pop
divl
pusha
dec
les
mov
int
sub
cli
xor
fldenv
xor
dec
cltd
xor
stc
inc
shlb
pop
cmp
scas
pop
mul
mov
jg
pcmpgtd
lods
add
mov
mov
ret
mov
out
int
xor
fmull
idivl
add
xor
push
push
lds
rorl
push
dec
inc
cltd
mov
pop
mov
fsubs
aad
mov
dec
pop
fs
xchg
push
subl
ret
push
xchg
repnz
cmc
mov
xor
stc
aad
adc
pop
adc
jge
ja
mov
adc
cmp
fsubr
adc
jle
fwait
sbb
xchg
rcrb
adc
cmp
sti
jecxz
mov
les
ja
mov
outsl
movsb
mov
push
dec
mov
daa
jo
inc
cld
mov
pop
inc
insb
lcall
pop
mov
pop
adc
dec
cmp
out
or
je
test
leave
push
mov
insl
popa
and
pusha
fisubl
jp
xorb
popf
xlat
das
sub
pop
inc
outsl
sbb
shrl
push
lret
lret
add
aam
int3
dec
adc
mov
shrl
jle
pop
imul
es
jns
pusha
dec
pop
faddl
add
repnz
pusha
sbb
lret
jmp
mull
repz
cmpsl
mov
in
je
inc
test
imul
mov
clc
dec
push
lahf
aas
and
enter
aad
dec
ds
lahf
pop
jb
push
shrb
inc
ror
and
loope
xor
push
pop
jg,pt
mov
jle
xchg
xor
mov
cmc
jecxz
push
adc
lahf
push
xor
mov
cmp
jg
dec
out
out
mov
mov
jb
movsb
pop
test
in
cmpb
and
or
je
dec
cld
cmp
fsub
push
cmp
outsb
int3
rcrb
or
sti
out
cmp
sbb
jecxz
cltd
and
fs
ds
mov
jns
cmpsb
cmp
sahf
shlw
xor
jnp
scas
and
add
negb
int3
mov
clc
push
mov
sub
mov
xchg
mov
mov
rcrb
push
cltd
insb
arpl
push
adc
jl
out
mov
divl
add
xorb
lods
xchg
sub
sub
stos
data16
pop
jb
dec
int3
add
sub
or
mov
sbb
stc
stc
push
cli
xor
jmp
es
fs
dec
sbb
jns
iret
push
push
jmp
xor
mov
cmp
mov
loope
das
icebp
sti
sub
mov
jae
dec
inc
outsl
popw
sub
mov
aaa
shl
mov
jle
lcall
xor
and
shr
inc
stos
sti
pop
dec
xchg
repz
movsl
mov
inc
shlb
mov
int3
fs
das
xchg
outsb
and
fwait
jns
push
hlt
cmp
popf
or
lods
cmc
jno
aad
jno
ja
es
repz
test
imul
cld
pop
pop
popa
xor
sbb
xlat
rorl
imul
sbb
xchg
inc
dec
xor
lds
mov
out
loop
aaa
outsb
loop
push
scas
out
lret
int3
jmp
loope
add
pusha
popl
fisubl
fs
lahf
roll
lahf
and
add
lods
jae
mov
push
movsl
jle
ret
inc
shrb
int3
and
add
and
lods
cltd
xlat
mov
add
lret
loope
add
out
mov
loop
lret
fsubr
xor
les
mov
and
xor
ja
inc
insl
or
xor
cld
sub
jle
filds
jnp
test
aam
sub
and
in
cwtl
mov
xchg
out
mov
aas
cld
mov
sbb
gs
mov
xchg
insb
out
sub
dec
pusha
lahf
inc
pop
xchg
movsl
mov
inc
cmpsl
test
insl
jp
out
sub
sub
or
sub
in
in
or
cmp
out
insb
cmp
adc
jo
test
pop
jecxz
mov
push
je
xor
sub
ss
data16
or
xor
add
dec
sbb
jl
lods
and
bound
inc
sbbb
jae
enter
pop
rcll
mov
repnz
mov
inc
xchg
sub
xor
push
add
lods
push
scas
mov
insl
cmp
adc
mov
cmp
shlb
dec
std
cmpsl
test
sbb
pop
xor
xorb
lods
inc
and
ret
das
pop
scas
cmp
outsl
pop
repz
sahf
pop
dec
add
rclb
pop
pushf
xchg
jns
mov
and
jns
ret
jecxz
mov
enter
mov
pop
shrl
mov
inc
mov
sub
pop
adc
mov
xor
aam
push
push
rcrb
adc
adc
adc
dec
rolb
mov
mov
in
cmp
movsl
cmp
int
notb
cwtl
data16
sub
jmp
aad
test
mov
movsb
jp
push
adc
imul
nop
cwtl
divl
sti
lcall
xchg
push
sbb
shlb
jb
mov
xchg
orl
sub
and
fstpl
or
das
mov
int
push
sar
test
into
and
inc
or
gs
pop
stos
loopne
mov
scas
ds
cwtl
popf
jge
popa
jns
sub
mov
pushf
mov
je
cmc
add
mov
mov
xchg
nop
mov
push
test
test
das
dec
movsl
enter
push
mov
int
cmp
adc
xchg
scas
into
repnz
sbb
xchg
icebp
push
fistpl
fisubrl
xor
xchg
mov
out
lock
jne
mov
mov
dec
push
mov
ds
das
sub
lea
xchg
sub
sahf
sub
lcall
mov
mov
mov
inc
gs
aaa
mov
push
divb
mov
imul
sti
outsb
xor
and
out
inc
xchg
roll
xor
bound
or
sub
jbe
iret
repnz
inc
lds
in
jl
jns
std
decb
aam
mov
cltd
xchg
add
fidivs
int3
push
std
mov
xchg
cmp
push
mov
add
imul
xchg
sub
xchg
dec
stos
pushf
xor
mov
sbb
xchg
aam
inc
adc
mov
mov
rcrb
xor
jg
bnd
lret
push
sahf
test
scas
cld
inc
jb
pusha
cwtl
push
stos
popf
rcll
lea
adc
xchg
aad
xchg
mov
jl
fcoml
xchg
scas
xchg
mov
dec
aas
mov
cwtl
dec
jmp
or
movsb
insl
dec
lea
jp
shll
cmpsb
rcll
cmpsl
pushf
add
xor
inc
ret
out
aam
push
xorb
and
xchg
repnz
out
les
pushl
add
pop
icebp
in
adc
gs
ret
fs
xor
xchg
rclb
sbb
and
cmpsl
push
sbb
push
push
out
ret
sbb
ds
cmp
or
jbe
fimull
dec
fcmovnb
aaa
ret
jbe
xchg
jns
arpl
cmp
shl
cmp
xchg
sub
mov
mov
cwtl
gs
mov
mov
repz
sbb
bound
fisubs
xchg
lret
insb
int
pop
sti
out
pusha
sbb
jae
mov
fwait
adc
stos
test
jl
push
adc
icebp
arpl
out
or
xor
mov
aaa
fnsave
fwait
mov
jl
test
leave
clc
jne
aad
xchg
push
dec
aas
sbb
add
mov
jbe
jbe
in
imul
arpl
ret
mov
sbb
ret
inc
add
fs
mov
das
cmp
jb
lret
mov
cmp
inc
lods
stc
push
adc
sbb
mov
stos
daa
gs
adc
out
add
imul
shll
sbbl
sub
xchg
aam
push
and
xchg
data16
nop
dec
insl
mov
pop
mov
lahf
sahf
lret
rclb
adc
push
adc
popa
xchg
fidivrl
in
sub
mov
pop
jmp
in
mov
adc
and
mov
lea
std
dec
dec
sbb
cmp
test
test
mov
adc
inc
xchg
mov
adc
daa
rcll
mov
seto
mov
jl
out
pop
jl
je
add
push
push
cmp
cmp
ret
in
ljmp
gs
popa
iret
inc
arpl
daa
pop
mov
cmpsl
xchg
dec
test
xchg
fs
aad
inc
movsl
test
stos
or
mov
and
arpl
fiadds
insl
mov
push
shlb
dec
mov
add
les
inc
push
stos
ffree
xchg
mov
test
imul
push
mov
mov
cmp
mov
lahf
mov
lcall
sarb
jne
ja
loopne
out
dec
sub
rorb
lret
sbb
pop
cmp
mov
or
gs
dec
mov
cmp
add
orb
test
in
imul
inc
repnz
xlat
jnp
push
in
push
push
out
sub
xor
mov
mov
or
orb
scas
sbb
jno
std
enter
mov
repz
adc
pop
stc
daa
xchg
pop
dec
pop
out
ja
ljmp
fisttpl
daa
cwtl
shl
pop
icebp
dec
test
int3
mov
push
inc
pop
push
insb
mov
cmp
in
add
xchg
ljmp
shll
dec
aad
pop
push
shll
sbb
sbb
nop
ss
lcall
inc
imul
xlat
lret
je
cmpsl
xchg
data16
xor
xchg
test
mov
int
in
xchg
xor
push
pop
mov
test
in
clc
jbe
add
movsl
int3
iret
or
movsl
sbb
fabs
in
push
subl
cld
cld
lods
fdivl
push
std
push
pop
push
inc
cltd
ret
push
or
jne
test
sti
xchg
xor
xchg
fsts
sub
cmc
jns
rcrl
add
inc
pop
and
mov
jo
or
test
outsb
ja
popf
lret
adc
sbb
inc
xchg
int
jp
pop
lahf
mov
inc
nop
inc
mov
ljmp
stos
fisubrs
dec
fists
add
jp
inc
scas
divl
pop
push
inc
inc
sti
jecxz
mov
pop
bound
xchg
adc
mov
add
jns
cmp
nop
xchg
in
adc
frstor
xor
aas
adc
stos
mov
cmp
inc
imul
push
int
stos
negb
add
xor
jbe
push
adc
dec
sbb
leave
or
fdivl
inc
ss
outsb
into
adc
mov
lods
arpl
adc
es
popa
filds
outsl
push
std
jp
cmp
mov
rcrb
orl
call
mov
mov
sub
das
mov
pusha
add
fildl
sub
cmp
cmp
subb
pop
mov
push
and
mov
push
mov
sti
ljmp
shrb
jp
push
jo
test
cmp
cmpl
push
mov
inc
pop
mov
jmp
lods
or
out
popa
jno
loop
pop
mov
cmpsl
mov
push
mov
cmpsl
push
inc
push
popa
das
in
ffreep
fidivl
out
dec
fists
sbb
pop
jl
pop
popf
sbb
pop
repz
into
xchg
fistpl
inc
add
movsb
cmpsb
sbb
popa
and
sbb
les
pusha
bound
outsl
fs
pop
cld
cmp
js
shll
inc
pop
jae
cmp
daa
sbb
mov
cmp
clc
push
fcoml
lods
dec
sbb
cmpsb
gs
jbe
sbb
adc
out
loopne
repnz
jecxz
mov
sbb
lods
std
mov
cmp
dec
daa
mov
das
add
gs
negb
repz
lret
cld
adc
nop
push
ljmp
repnz
dec
scas
shr
jmp
push
add
mov
add
lret
dec
dec
fstps
call
and
dec
xorl
or
mov
ja
xchg
xor
pop
sbbl
outsb
insl
loopne
jge
outsb
push
mov
inc
dec
sahf
mov
ret
add
inc
insb
outsl
mov
dec
scas
movsb
lds
sub
push
dec
cmpsl
movsl
loope
sub
or
pop
xchg
sub
jne
lret
push
je
sbb
mov
in
jp
inc
mov
leave
xor
int
jle
leave
ja
add
lret
notb
dec
cmp
rol
push
test
xor
mov
test
addr16
mov
adc
leave
xchg
mov
imul
fiaddl
ds
lret
mov
xchg
mulb
sub
sti
out
or
aam
arpl
mov
insl
rclb
ror
cs
mov
out
lahf
testb
mov
adc
mov
mov
in
inc
into
push
or
dec
pop
shll
js
imulb
movsl
xchg
xchg
out
outsl
rolb
cmp
dec
dec
int
data16
sbb
sub
push
cmp
jp
mov
sub
add
out
inc
xchg
in
sarb
push
cmpsb
inc
xchg
ljmp
push
divb
sub
xorps
dec
dec
dec
test
decl
test
adc
movsl
jle
rdpmc
dec
repz
jns
or
sbb
rclb
repnz
fldt
cmp
das
js
enter
es
push
inc
lods
lods
leave
cmovbe
loopne
cmp
xor
test
adc
testb
outsb
fildl
stc
fiadds
sbb
lret
outsb
xchg
xchg
sub
mov
bound
js
shlb
icebp
aaa
xor
push
mov
icebp
fidivrl
dec
dec
sbb
movsb
mov
ds
shrb
cmp
popf
jp
cwtl
int3
stos
int
or
add
fsub
in
das
mov
push
fsub
dec
pop
jnp
rcrl
das
add
stc
out
int3
sub
je
mov
out
or
xchg
ds
popl
jp
push
ds
lods
ds
and
pushf
setb
movsb
xchg
mov
cli
adc
sbb
push
sahf
mov
pop
inc
jbe
out
daa
shrb
jmp
lds
stos
in
xchg
hlt
cltd
enter
adc
push
mov
pop
lahf
call
lds
rclb
xchg
repnz
int3
adcb
jg
dec
jl
dec
add
scas
fcomi
add
adc
andb
mov
inc
adc
lret
xchg
adc
mov
cltd
aaa
cltd
or
fcoml
out
inc
sub
cli
or
fildl
xor
cmc
mov
pop
pop
inc
dec
pushf
xor
ret
adc
icebp
push
mov
jmp
mov
in
mov
push
outsb
xor
std
sub
mov
xor
sub
xorb
outsb
lea
mov
add
inc
pop
mov
or
loope
out
icebp
pop
sbb
or
mov
out
pop
mov
aam
jecxz
push
insb
xchg
clc
cmp
pusha
js
das
mov
frstor
xor
sbb
jp
enter
dec
adc
xchg
fnstenv
xor
inc
vandnps
fcomp
sbb
push
sub
incb
xchg
sti
add
pushf
fwait
jmp
fadds
ffree
jb
pop
pop
and
push
and
das
test
pop
mov
adcb
call
sbb
aad
int
adc
cmp
adc
dec
xlat
jo
mov
les
sbb
dec
jbe
inc
ds
popa
sar
lcall
add
fidivs
fstp
xor
movsl
out
inc
pop
jne
lock
push
into
ss
cmc
xchg
and
call
test
cmp
ja
jge
cmp
ja
out
jns
jmp
int
sub
aas
xchg
push
fistps
xlat
mov
in
shufps
mov
dec
mov
add
jg
mov
lods
ret
clc
mov
rorb
lahf
stc
in
fbstp
lock
movsb
inc
mov
or
pusha
ds
lcall
push
jb
mov
cmp
fidivs
or
inc
lcall
xchg
jge
shrb
or
sub
pop
push
mov
mov
sub
push
xor
mov
adcl
mov
xchg
cltd
fistpl
lods
dec
push
inc
stc
jmp
or
ficomps
lahf
mov
pusha
mov
lods
cmp
sbb
xchg
data16
mov
jno
stos
xchg
mov
cmp
movsl
shlb
sbb
je
mov
loopne
out
cld
adc
sbb
test
sub
lahf
imul
stos
nop
ljmp
jno
loopne
insl
jl
mov
pop
pop
mov
dec
xlat
inc
inc
xor
cmc
push
jb
pop
add
mov
inc
pop
pop
sti
push
push
mov
popa
and
or
pop
xchg
std
pop
mov
pop
and
push
xchg
in
cmp
nop
adc
cli
jae
insl
sbb
jae
cmovp
push
sub
sahf
pmovmskb
jl
mov
jbe
xchg
pusha
outsl
mov
in
cli
cltd
out
mov
aaa
rolb
insb
cli
push
clc
outsl
clc
add
popf
dec
lret
test
sahf
cmc
insl
push
lret
std
cmp
rol
cmpb
icebp
xchg
cmp
jo
cmpsl
xchg
mov
in
inc
lock
push
in
sbb
add
push
inc
pop
fisttpll
aas
lock
rorl
pop
scas
fsubl
pop
mov
rorb
add
cmpsl
sub
fwait
mov
pop
iret
sub
or
popf
js
je
fldpi
shrb
movsw
adc
icebp
push
aaa
mov
sbb
cmp
lock
lods
add
outsb
cmp
push
jg
mov
data16
xor
xchg
inc
xchg
in
xchg
push
fwait
incb
int3
sub
mov
cltd
pop
pusha
fldt
imul
adc
cmp
mull
ljmp
pop
and
sti
mov
sub
xchg
fnsave
rcrb
cmpsl
and
jo
ficompl
aad
jmp
pop
fldenv
andl
nop
sub
jge
mov
cltd
mov
cmp
jb
add
xorl
rcr
inc
sbb
mov
pop
xchg
outsl
dec
mov
sub
mov
push
and
mov
mov
pop
mov
cmp
mov
push
out
xor
scas
in
sbb
dec
mov
lock
push
pop
out
test
std
jp
outsl
xlat
jmp
push
mov
in
lock
andl
dec
push
add
lods
push
jmp
add
adcl
arpl
sbb
aaa
fxch
mov
xchg
pop
jp
out
pop
jns
pop
popf
or
jns
fcomps
and
pop
xor
in
rclb
push
ljmp
inc
mov
inc
mov
inc
sbb
out
inc
ljmp
push
loop
insb
call
mov
loopne
fsubrl
int3
dec
sub
xchg
push
push
jecxz
jmp
sar
inc
subb
jg
cmpsb
inc
xchg
pop
in
jmp
lret
dec
mov
lock
divb
jl
lcall
sbb
fwait
gs
stc
push
fldl
stos
in
mov
inc
fcompl
clc
jge
mov
test
addr16
cmp
sub
pop
data16
jp
les
xor
push
imul
ds
mov
js
aas
lahf
push
sbb
mov
lahf
imul
shr
fistpll
fmuls
ret
pop
call
inc
mov
jno
shrb
pop
outsl
inc
and
add
jno
lea
sub
dec
add
mov
cmp
test
pop
mov
add
inc
inc
mov
sbb
pusha
add
out
pop
arpl
jge
jo
push
cmp
mov
jg
and
in
xor
pop
cmp
cmp
ds
rclb
cwtl
dec
jb
xchg
mov
push
aaa
gs
xor
lcall
mov
pusha
fldt
lret
push
test
ret
xor
sbb
mov
gs
push
je
mov
test
mov
jp
ret
push
or
arpl
jp
cmp
jp
cmpsl
cmp
cmpsb
enter
mov
mov
rorb
stos
sbb
in
repnz
insl
adc
pusha
pop
jmp
mulb
or
push
jge
adc
mov
jne
jge
mov
cmp
icebp
xchg
popf
mov
or
ret
sbb
add
cwtl
in
or
sub
sbb
pop
dec
and
in
lock
xchg
outsb
es
pop
and
inc
dec
mov
stc
fisttps
mov
aaa
xorb
cmp
mov
mov
cmp
adc
ljmp
xchg
inc
mov
popa
das
push
jmp
jne
les
in
test
or
dec
xor
cmp
scas
stos
pop
sbb
test
hlt
ja
in
fnstcw
and
mov
adc
jae
cmpsb
sub
push
push
push
repnz
or
popa
lahf
xor
outsl
mov
sub
adc
pop
ret
das
cmp
stos
xchg
sbb
fildl
add
jae
das
daa
fimull
mov
add
mov
sbb
xchg
into
popf
add
push
cld
stos
iret
inc
sahf
and
ja
orl
push
push
jbe
ljmp
stos
mov
fisubs
xchg
jmp
repz
inc
jecxz
sub
sub
inc
pop
cmpl
inc
pop
xor
cltd
push
sbb
jmp
pushf
cli
xchg
mov
cmp
fs
bound
dec
fwait
push
pop
xchg
repnz
notb
aam
popa
sub
stc
outsb
test
jae
popa
push
and
jo,pt
push
sbb
dec
fnstenv
sub
aad
cmpsl
cmpsl
in
xchg
pusha
cld
shl
faddl
stc
lock
mov
addr16
leave
scas
repnz
sbb
cmp
mov
jecxz
das
xor
jecxz
imull
push
mov
jl
or
movsl
lea
clc
inc
adc
push
in
inc
cmpsb
pop
gs
int3
cmpsb
sub
inc
mov
cs
jae
out
pop
lea
xor
js
popf
scas
jno
adc
insl
sub
mov
xchg
adc
jl
aas
call
lcall
addr16
inc
cmp
xchg
mov
lods
into
mov
leave
jns
or
leave
cmc
icebp
adc
ss
mov
jmp
add
adc
or
ret
xlat
push
outsl
ret
inc
mov
out
scas
es
shlb
aam
xchg
lods
lret
fs
mov
movsb
in
or
in
inc
sub
xor
xlat
sti
mov
ja
or
fldenv
fisubrl
inc
pop
pop
pop
mov
gs
nop
xchg
pop
push
xchg
in
jge
into
or
cmpsl
jb
jge
stos
pop
iret
clc
mov
popa
in
mov
xor
lret
out
pushf
insb
or
pushf
jne
loopne
or
cmpsl
imul
push
rorb
or
dec
int3
out
imul
adc
fldl
dec
cmp
cmpsb
lea
stc
gs
rcr
xor
push
xor
cltd
cmpsl
inc
inc
hlt
add
fidivl
ret
rcrb
push
jno
fs
push
add
subl
cmc
xor
jnp
in
adc
push
std
mov
ja
ja
xor
icebp
jmp
cltd
push
adc
je
aas
outsb
outsl
lcall
pop
xchg
cmp
xor
movl
mov
hlt
and
cmpsb
dec
repz
sbb
mov
dec
aam
es
clc
jo
and
ljmp
mov
add
jecxz,pt
dec
mov
outsl
or
sarb
adc
lods
ret
sbb
or
add
stos
push
xchg
dec
and
pop
push
jp
inc
inc
lgs
xor
in
mov
jo
xchg
inc
mov
push
and
dec
dec
pop
mov
pop
dec
dec
sub
mov
lock
mov
mov
jg
movb
pop
xchg
sbb
pop
mov
adc
mov
shll
lods
loop
outsb
js
mov
inc
filds
push
dec
fninit
arpl
fiaddl
ror
into
iret
push
xchg
jg
loope
lret
shll
cmp
add
push
and
lcall
fmuls
icebp
in
clc
fisubrs
pop
cli
push
shll
arpl
xor
xor
jmp
loopne
flds
lahf
rol
js
out
fcoms
popa
pop
stos
ret
add
mov
dec
mov
idiv
xchg
shrl
mov
fs
pop
dec
xchg
xchg
mov
pop
mov
nop
test
or
mov
pop
lods
adc
stos
jg
mov
out
cmp
push
in
stos
insl
fstps
jne
mov
notl
pop
push
inc
adc
dec
das
enter
inc
xchg
fsubrl
negl
ljmp
and
adc
adc
inc
and
sbb
jecxz
sub
into
outsl
xlat
push
idivb
xor
daa
cs
fadd
sbb
and
cmp
cmpsl
stos
rclb
mov
iret
test
mov
test
mov
in
test
pop
bound
test
push
cltd
std
push
dec
out
inc
jae
jecxz
loope
clc
xor
roll
add
add
jne
jne
dec
mov
inc
push
std
add
pop
adc
sub
scas
add
mov
popa
outsl
pop
inc
or
adc
out
stos
dec
fisttpll
adc
sbb
dec
test
mov
inc
jecxz
hlt
and
shll
aaa
xlat
les
cli
fstl
and
sbb
xchg
fcomip
sub
cli
mov
xchg
and
mov
loop
in
xchg
or
test
cmp
lret
pop
insl
xor
sti
cmp
xchg
push
hlt
xor
nop
mov
insl
push
mov
pop
mov
add
roll
and
sub
jo
mov
push
lahf
add
sbb
xor
mov
and
push
xchg
lods
adc
out
mov
lcall
inc
xor
dec
ljmp
cld
and
inc
jmp
loop
adc
xchg
mov
jns
test
cmpsl
cwtl
adc
sub
sub
xchg
sti
lahf
cwtl
aam
cmpsb
testl
push
imul
roll
jb
add
test
push
xchg
cltd
roll
push
add
sbb
es
insb
clc
icebp
rclb
jecxz
push
scas
lods
movsl
and
mov
stc
cmp
std
xchg
adc
repnz
popa
xor
shlb
cs
mov
push
enter
test
or
and
pop
out
lret
out
lds
in
jge
jbe
ja
add
loope
stc
sbbb
xor
mull
mulb
mov
es
xor
jns
xchg
jbe
dec
mov
pop
xchg
mov
dec
fistpll
sbb
jns
push
call
sub
icebp
in
and
sbb
fsts
xchg
or
pop
adcl
loopne
push
gs
leave
add
les
ror
pop
inc
xlat
shr
fmuls
sbbl
aam
outsl
testw
rol
inc
mov
dec
add
inc
pop
fisttpll
es
cli
sub
mov
ljmp
mov
add
jge
adc
fs
ja
sarl
in
sbb
xor
mov
inc
adc
das
pop
dec
das
lds
or
imul
outsb
dec
adc
std
mov
xor
aad
cs
push
mov
xor
jnp
out
mov
dec
loop
fiadds
stc
or
sbb
jnp
cld
jmp
repnz
jne
sahf
movsb
cmp
push
pop
jle
je
imulb
lea
fdivrl
gs
mov
lahf
rcrl
pop
mov
shl
cmp
sub
jae
lahf
lods
inc
push
pusha
fmulp
xor
push
fdivl
lods
out
add
mov
xchg
loopne
and
sub
int3
xchg
dec
cld
cld
fdivs
arpl
iret
stos
aad
lods
movsl
add
push
inc
jne
cmp
es
jmp
iret
fcomp
decb
stos
out
xor
push
or
iret
inc
add
or
bound
addr16
pop
add
inc
test
sub
mov
ljmp
test
adcl
adc
sbb
jnp
es
jns
les
or
xchg
rcll
inc
or
mov
out
and
mov
mov
test
dec
stos
aam
sub
push
and
stos
inc
sbb
mov
add
out
and
push
shl
jge
dec
aas
inc
jge
in
fs
dec
dec
jmp
negl
and
mov
iret
cmp
dec
sub
inc
pop
cli
andl
add
mov
pop
mov
sbb
adc
sbb
xchg
inc
push
inc
mov
push
imul
in
cmp
sbb
pusha
push
insb
cmp
bound
inc
mov
jecxz
cmpsl
iret
adc
out
push
cmc
cli
ret
outsb
repnz
push
aaa
dec
nop
pop
iret
push
inc
push
pop
cmp
xchg
inc
mov
pop
push
push
xorb
lret
in
js
xchg
outsb
xchg
loopne
aam
icebp
outsb
xchg
adc
mov
lods
push
cld
idivb
xchg
or
push
pusha
aaa
into
sbb
mov
and
push
sub
add
addb
pop
test
or
ret
mov
dec
mull
scas
dec
mov
cmpsb
aaa
lds
rorb
add
or
ds
cmovp
jle
push
sub
movsb
push
jl
leave
jae
in
lea
pop
in
std
das
out
frstor
add
imul
mov
push
pusha
inc
sbbb
push
xorb
sbb
cmp
mov
out
sti
sub
outsl
in
cmp
outsb
movsb
jno
fcmovbe
adc
xchg
push
pusha
mov
aam
outsl
test
mov
inc
iret
dec
add
mov
ds
cwtl
int
pop
inc
mov
dec
push
pop
push
push
fsubrl
add
shlb
lock
data16
sbb
stos
xchg
iret
iret
add
sbb
dec
mov
jb
loope
cld
sahf
ss
mov
lods
ja
cmp
cmp
cld
sub
inc
movsb
nop
cli
jae
jecxz
sub
sahf
clc
mov
cmpsb
pop
sbb
sarl
int3
lock
stos
es
mov
mov
mov
lcall
dec
add
movl
sbb
add
and
inc
je
mov
inc
lods
xchg
loopne
or
cmpsb
scas
cwtl
jo
and
mov
inc
andps
xlat
or
imulb
and
repz
cmp
lcall
push
fdivr
mov
adc
neg
xor
mov
lds
ds
ljmp
test
add
mov
sbb
insb
mov
jg
xchg
lret
out
and
and
push
sub
lods
insb
mov
orl
jl
imul
pop
mov
int3
pop
and
shlb
rolb
jae
xchg
push
mov
imul
mov
dec
xchg
sub
mov
inc
jbe
cs
push
jecxz
das
and
mov
lret
dec
nop
stc
movsb
add
or
mov
add
aas
nop
jge
inc
stos
push
inc
mov
dec
sahf
mov
adc
scas
addl
push
cmp
filds
add
int
imul
jno
mov
cmp
push
push
mov
stos
xchg
rolb
push
imul
in
leave
pop
push
mov
lock
lds
dec
jmp
push
iret
sti
jmp
push
lcall
arpl
jnp
push
mov
outsl
frstor
pop
add
loop
add
xor
sub
mov
pop
dec
out
mov
fdivl
shrl
mov
rclb
je
lock
adc
popa
jns
xor
push
bound
or
daa
int
add
push
addr16
cld
mov
insl
insl
or
cmp
sti
jb
cwtl
jns
xor
pop
flds
sub
mov
ror
repnz
cmp
or
jns
add
jns
imul
lahf
xor
xchg
clc
and
fldcw
les
and
add
cmp
sub
push
or
inc
ret
aaa
sub
mov
stos
push
mov
push
into
push
test
cmp
aaa
movsl
out
movsl
sti
jmp
add
btr
dec
sub
or
push
cli
push
xor
adc
lret
popa
add
stos
jns
ret
lret
idiv
bound
sbb
adc
repz
jnp
inc
inc
push
stos
jmp
ret
js
icebp
cld
aaa
movl
packsswb
xchg
pusha
inc
and
ds
loope
ret
dec
cs
incl
arpl
pop
xchg
les
in
stos
xor
out
test
sub
pop
fnstenv
popf
push
xchg
pop
jb
push
fsubrl
mov
inc
gs
cmp
ret
jb
paddq
sti
lret
xchg
add
dec
lret
adc
pusha
pop
ficoms
lds
jne
dec
mov
aaa
popa
jge
aam
and
and
enter
push
loop
sub
dec
inc
push
je
jne
mov
int3
inc
mov
xor
in
daa
scas
dec
dec
pop
sbb
add
fxch
scas
pop
push
mov
test
fbld
and
inc
testl
popa
mov
jae
push
lock
hlt
xor
sbbb
xchg
neg
push
loopne
jg
das
pop
hlt
lods
cmp
xchg
mov
and
push
ds
test
add
lret
add
fldenv
aas
mov
ret
and
shlb
mov
mov
mov
or
test
mov
xlat
jo
jbe
pop
adc
faddp
fmull
shlb
add
lcall
mov
out
repnz
fdivrl
pop
cmp
inc
pop
testl
dec
push
fsts
xor
sbbl
pop
fistpll
or
mov
push
push
jae
cmp
clc
cld
je
mov
scas
fstp
jmp
adc
movsb
jb
ja
out
or
rorb
pop
mov
push
pop
incb
sbbb
loope
outsl
lret
jl
ret
xchg
inc
adc
int3
or
pop
mov
aad
popa
loop
lods
out
or
xchg
fstps
mov
or
xchg
or
mov
add
cmpsb
mov
mov
adc
mov
aad
pop
je
int
leave
adc
addr16
add
push
mov
dec
cs
movsl
dec
xor
xchg
loop
rorb
cmp
sarb
pop
sbb
movsl
mov
mov
lds
ss
fwait
leave
in
push
push
push
jecxz
inc
adc
dec
add
inc
add
or
inc
arpl
popf
lret
sbb
add
xlat
jne
mov
data16
dec
xor
push
mov
fdivp
stos
arpl
es
mov
repnz
dec
pushf
in
inc
mov
pushl
rorl
rorb
je
xor
rol
or
cmp
andb
inc
mov
fildl
inc
add
popa
sahf
xor
iret
xor
les
or
shlb
add
cmc
mov
imul
xor
cmp
adc
int3
sub
sbb
ss
adc
jo
int3
cmp
cmp
dec
inc
dec
mov
out
mov
xlat
dec
aaa
idivl
lock
push
jnp
pop
leave
mov
jecxz
je
and
jb
movsl
add
pop
pop
in
pause
rclb
jl
cmp
into
lret
push
push
push
jmp
outsb
nop
inc
cli
stc
cmc
jb
adc
inc
clc
imul
cli
call
sbb
adc
cmpsb
push
lods
je
lahf
arpl
es
call
push
xlat
fsubl
add
fiadds
push
in
jecxz
mov
stos
push
xor
xorl
and
jp
icebp
outsl
pop
sbb
adc
iret
and
lcall
lds
xchg
cmpsl
adc
mov
push
xchg
xchg
inc
or
pop
and
insw
shlb
cmp
xor
pop
cmpsb
rol
cwtl
inc
daa
xor
mov
sub
popf
jae
shll
pop
int
xorb
arpl
mov
sub
jl
in
std
int
cmpsl
dec
dec
sbb
aad
xor
jmp
loopne
push
add
seto
arpl
mov
scas
push
insl
imul
pop
xor
clc
mov
adc
xchg
mulb
stc
aad
out
scas
scas
push
rclb
ss
movl
push
cmpsl
cmc
mov
movsl
inc
stos
xchg
mov
les
mov
sbb
fs
in
test
ret
add
jp
adc
push
lahf
scas
int3
pop
lock
cmpsb
push
int3
or
mov
push
outsl
fmulp
jmp
arpl
or
sub
or
in
jmp
or
adc
pop
mov
enter
aad
push
xor
lret
jge
and
clc
fwait
sahf
cld
roll
cli
fbld
jg
mov
inc
cmc
jmp
test
mov
push
mov
iret
mov
push
and
pop
dec
ljmp
stos
push
stos
inc
xchg
lods
repz
jnp
cmp
adc
mov
pop
inc
push
sar
mov
and
and
xor
mov
movsbl
gs
cltd
sub
inc
jne
icebp
es
jae
outsb
decb
insb
mov
hlt
fmuls
cld
push
mov
xchg
call
or
sub
mov
jle
jns
mov
mov
popf
or
aad
push
sahf
lea
test
mov
sub
orl
in
lods
xchg
dec
les
out
ret
adc
push
dec
inc
fyl2xp1
addr16
outsl
inc
add
mov
mov
adc
pusha
mov
pusha
push
jg
and
mov
xchg
ret
sub
js
pop
inc
aam
jae
mov
popl
mov
aam
outsl
in
adc
sub
mov
sarb
mov
mov
lret
sub
jnp,pt
jbe
stos
mov
mov
cmp
das
lret
mov
cmpsl
scas
fstpl
ret
sub
sarb
pushf
aad
cmp
add
mov
das
mov
push
rorl
hlt
mov
shrb
jbe
push
ds
jnp
shrb
in
jl
test
mov
cmp
andl
mov
mov
leave
push
jge
xchg
movsl
fcmovne
cmp
jle
mov
inc
push
mov
maxps
sub
mov
jnp
ja
push
cwtl
inc
push
js
aaa
das
adc
pop
push
addr16
mov
xor
adc
test
pop
pop
pop
xchg
loopne
adc
psadbw
xor
jae
xchg
bnd
imul
sbb
insb
fcmove
les
in
push
add
mov
test
stc
mov
sub
sbbb
ljmp
bound
mov
xor
pop
lahf
fcompl
pushf
push
mov
fwait
leave
insl
lret
inc
mov
dec
into
bnd
nop
es
call
mov
imul
mov
int3
fists
mov
pop
lret
scas
sub
mov
cmp
mov
add
stos
cltd
jmp
iret
mov
add
inc
cltd
jge
clc
and
adc
sub
cs
stc
fldt
insl
mov
mov
sahf
out
dec
or
xor
insl
cmp
out
call
loopne
mov
fwait
pop
jno
adc
aad
hlt
push
mov
or
add
mov
out
mov
jae
cmc
inc
enter
flds
call
pop
inc
push
or
adcl
mov
fwait
arpl
ljmp
fsub
jle
adc
sahf
pop
repnz
shrb
outsb
jg
xchg
sbb
jnp
add
in
sbb
rcr
in
mov
cmp
jbe
jl
jmp
push
mov
push
add
push
push
push
cltd
add
rcr
sti
xchg
sub
adc
mov
mov
sbb
cli
call
lea
in
inc
and
mov
and
mov
imul
sub
data16
cmpsl
pop
dec
popf
jno
mov
and
sub
fcoms
aas
dec
test
and
push
into
gs
pop
sub
aas
hlt
mov
add
jns
cmc
data16
lods
call
xor
fdivrl
movsb
lock
pop
adc
push
adc
inc
sbb
cmp
or
sub
pop
stc
cmp
xor
sbb
xor
pop
pushf
cltd
pop
enter
inc
pop
nop
ret
mov
inc
aad
insb
cli
int
jae
xor
jg
pop
mov
pop
scas
mov
adc
jge
mov
adc
jg
pusha
jecxz
fldt
rcl
push
add
sbb
cmp
or
loope
outsl
rep
dec
pop
mul
dec
jbe
sbb
sti
jne
xchg
stc
sbb
pop
stos
into
nop
mov
cwtl
hlt
out
ja,pt
aaa
cmp
jnp
ror
jno
lret
stc
xchg
das
cwtl
ds
adc
into
setbe
jno
fistpl
fdivrl
sub
lcall
ret
cmpsb
xlat
in
push
jmp
sbb
mov
mov
mov
mov
xchg
xchg
lret
mov
movsl
or
jl
push
push
pop
and
xor
cmpsb
mov
movsb
mov
fisubrl
or
xchg
jne
fsubs
cmpsl
int
mov
test
pusha
int
loope
mov
aad
adc
outsb
cltd
cltd
cmpsl
inc
inc
in
es
fistps
out
xor
sub
pusha
test
and
shll
or
mov
inc
lock
xor
sti
das
push
stos
bound
movsb
sahf
add
push
or
sub
sahf
scas
mov
outsb
jb
push
sbb
mov
andb
mov
les
cli
mov
add
std
shlb
sahf
sub
and
popf
jne
inc
les
data16
in
in
or
dec
lods
cld
je
push
inc
sbb
add
aam
sbb
adcb
cmp
mov
xor
aam
adc
aas
movsb
loopne
clc
lds
test
inc
jmp
in
fcmove
addr16
inc
arpl
xor
sbb
inc
mov
test
outsb
fldl
mov
sbb
jg
push
pop
mov
cmp
xor
jno
jbe
sub
fadd
imul
loope
stc
and
dec
andb
pop
inc
xchg
pop
mov
arpl
aam
adc
dec
cwtl
inc
hlt
adc
jo
mov
push
push
lods
bound
pop
pop
shl
in
enter
adc
mov
test
fsubrs
dec
lds
fwait
jnp
stos
pop
adc
cwtl
adc
aas
mov
xor
and
adc
inc
fisubrl
aad
mov
sbb
test
pop
push
sub
dec
inc
adc
pop
mov
push
test
sti
xchg
and
shll
test
test
dec
loope
sub
imul
sub
sbb
imul
xchg
das
jne
das
rclb
into
negb
mov
test
xor
sbb
fisttps
adc
pop
mov
div
cli
daa
fs
rcrb
into
push
add
adc
int
ljmp
or
test
sahf
sahf
movsl
mov
dec
sbb
push
aad
jns
dec
add
inc
cmp
add
push
inc
fsub
in
fdivs
push
mov
fidivrs
ficoms
adc
mov
lods
xlat
or
dec
into
sub
push
arpl
add
xchg
fcomps
mov
push
popf
je
sub
in
in
out
stos
cmp
es
xchg
mov
mov
call
xor
mov
and
xchg
in
add
xchg
dec
adc
das
lds
sahf
decl
movsl
insl
in
aaa
adc
inc
into
movsb
xchg
adc
pop
movl
add
jecxz
sti
mov
inc
scas
jno
mov
pop
push
lahf
sub
cltd
pop
push
notl
in
or
lods
out
ss
dec
jb
mov
imul
mov
jmp
lret
mov
mov
xchg
stos
outsl
mov
sub
xchg
lods
js
cmpl
test
jno
test
or
pop
bound
adc
cli
lahf
mov
call
iret
jne
mov
outsb
lods
mov
insl
les
scas
cmpsl
xchg
xchg
and
cmpl
and
add
dec
fwait
mov
pop
dec
or
loopne
ljmp
or
xlat
and
push
dec
cld
clc
jnp
pusha
pop
stos
cmpsb
imul
push
shl
dec
lahf
mov
jne
inc
sbb
and
fcomps
xchg
xchg
xor
push
and
addr16
sahf
cmp
pop
popf
pusha
aaa
add
jg
mov
and
pusha
inc
cs
inc
pop
leave
push
pop
xor
fld1
xchg
in
int3
mov
cs
pop
ret
push
mov
dec
sub
dec
add
inc
cltd
or
jnp
out
popf
pop
mov
or
fs
repnz
push
in
push
xchg
add
shrb
mov
addr16
fwait
lods
jmp
fsts
ror
das
jo
push
mov
sbb
and
or
sahf
ds
subb
int3
mov
cmp
xchg
leave
stos
and
shrb
push
jns
xchg
sub
xor
dec
add
adc
mov
aad
js
test
jecxz
mov
mov
cmpsb
pop
xor
test
push
leave
and
movsb
lret
notl
out
rol
pop
mov
mov
jae
mov
shll
es
xor
jmp
test
sbb
xchg
sub
mov
insl
rolb
inc
inc
sub
enter
into
cs
lods
int3
cli
add
popf
call
cs
in
xor
jns
push
fnsave
or
xchg
fbstp
lcall
xchg
adc
and
test
rclb
jne
cmpsb
outsl
adc
jg
add
sbb
rclb
subl
cmp
out
aad
cmp
fistpl
aam
mov
inc
decb
pop
adc
ja
jp
sbb
ror
ror
add
lret
mov
arpl
add
cmp
jo
add
mov
pop
xchg
xor
ret
jne
xchg
call
jb
cmp
por
mov
aaa
adc
sub
xchg
lcall
jae
sub
outsb
bnd
test
mov
pop
adc
aas
rcrl
mov
dec
jecxz
sub
push
incb
js
mov
imul
in
xchg
nop
test
fisttpl
pop
jmp
inc
ss
pusha
cwtl
adc
mov
out
push
out
insb
or
gs
fsubrs
cmp
pop
scas
xchg
lods
js
outsb
mov
push
daa
adc
push
repz
outsb
add
data16
or
rcll
lcall
adc
cmpsb
mov
in
and
cmp
repnz
fstpt
mov
inc
outsb
outsl
push
test
loope
jnp
pop
fmuls
jmp
shrb
sarb
xchg
sbb
xchg
push
sbb
cmp
out
pop
sub
cmp
push
adc
inc
add
jo
rolb
dec
sub
push
scas
je
lcall
test
fyl2xp1
in
mov
xchg
loope
repz
sub
dec
cmp
sbb
frstor
xor
jbe
cwtl
mov
cs
stos
mov
dec
test
lahf
mov
movsb
mov
add
mov
mov
stc
pop
int
dec
jo
mov
cmpsb
inc
outsl
dec
inc
je
and
mov
jge
jecxz
data16
xlat
cltd
in
fildll
in
adc
mov
cld
mov
test
sbb
idivl
push
xchg
jge
add
add
push
or
mov
jle
push
mov
jge
mov
xchg
add
packsswb
sub
lret
test
mov
and
sbb
repz
enter
sahf
int3
pop
mov
mov
imul
pop
sub
adc
adc
loop
xchg
pop
mov
arpl
ja
inc
jl
mov
aas
daa
or
xor
ret
divl
push
xchg
adc
jp
and
loopw
mov
add
mov
mov
enter
in
fcmovbe
lods
data16
aaa
fldz
cmp
hlt
mov
jl
add
clc
test
and
cmpsb
pop
xor
mov
imul
lock
mov
rolb
out
add
jl
jecxz
das
or
shll
imul
mul
mov
mov
data16
js
int3
andb
jp
lods
mov
mov
pop
push
adc
rcrb
jne
out
push
pop
pop
lret
push
stc
and
mov
dec
lcall
mov
cwtl
imul
testb
rclb
call
stc
loope
js
mov
push
cmp
vmovdqa
mov
dec
inc
icebp
jecxz
adc
shll
decb
outsb
test
jle
sbb
fs
test
aad
ret
mov
insb
fsub
mov
mov
xchg
sbb
arpl
inc
shll
mov
out
mov
inc
push
pop
aas
divl
push
xor
jae
xor
stc
aas
negb
insl
cwtl
or
outsb
xor
mov
popa
pop
jbe
icebp
jle
popa
pusha
cld
jl
fucomi
lods
pop
clc
inc
fbld
lods
mov
nop
ja
inc
dec
mov
inc
out
lea
mov
jno
cmp
inc
inc
mov
push
jg
shrb
out
and
clc
gs
fdivrp
arpl
mov
jb
jae
xorb
mov
sbb
inc
insb
shlb
jno
sbb
mov
ret
dec
fneni(8087
jg
mov
jl
enter
dec
pushf
addr16
push
ret
nop
or
cs
imul
jno
pop
adc
mov
mov
ret
cmpsb
scas
in
or
loop
add
push
inc
repz
inc
fmul
mov
std
roll
sub
in
ljmp
inc
aad
add
cmp
repnz
mov
call
pop
mov
push
jne
loope
push
popf
rorb
dec
call
cmpsb
jae
xchg
out
jmp
lahf
pop
clc
subl
ds
test
insb
idiv
adc
jo
xlat
outsb
or
and
cmc
and
jp
add
int3
popf
sti
push
xchg
jo
popf
sub
lods
sub
push
cltd
xor
xchg
scas
pop
icebp
add
std
mov
ret
fnstsw
xor
mov
movsl
mov
adc
mov
and
ficoml
dec
jo
sub
sahf
xor
lahf
add
and
out
lret
lods
bound
and
fucom
in
xchg
mov
mov
push
jb
insl
mov
push
mov
es
rcl
mov
daa
xor
mov
push
fidivrs
sub
adc
in
sahf
mov
sbb
push
jg
je
mov
les
mov
leave
out
dec
cltd
int3
rorb
into
add
dec
fstl
or
add
mov
jno
test
push
adc
rcrl
mov
ja
xor
je
cmp
pop
push
mov
cmp
pop
loop
mov
inc
xor
push
mov
mov
mov
sar
jo
testl
jg
ljmp
shrb
push
pop
jp
and
push
movsb
shll
mov
inc
xor
outsb
mov
test
insb
dec
dec
sbb
xor
inc
mov
mov
cltd
add
sbb
mov
add
dec
fldcw
push
ja
repz
es
sbb
sbb
popa
out
lds
das
popa
sbb
std
jle
push
jno
aam
hlt
mov
cmp
int
inc
cmp
pusha
cmpsb
jnp
gs
les
lret
daa
dec
or
xchg
xor
les
sti
cs
and
or
adc
outsb
cmpsb
outsl
xor
push
movsl
js
bound
add
jge
aad
ja
sub
add
and
mov
mov
ja
inc
adc
push
sub
mov
inc
and
mov
add
push
clc
mov
jle
sub
cltd
jb
jmp
cmp
adc
inc
ja
lds
mov
std
data16
inc
lcall
jecxz
repz
lret
out
lret
lods
xchg
mov
and
xor
jge
ret
imull
mov
out
jg
js
jbe
adc
push
popf
dec
and
fcomi
add
jne
roll
dec
clc
rcrb
xchg
test
push
push
push
sub
sarl
outsl
dec
scas
out
outsb
repnz
mov
lock
add
daa
mov
scas
lret
int
mov
xchg
or
jb
push
into
mov
dec
pop
or
mov
jnp
xchg
cli
in
adc
xor
lahf
add
cmp
popf
aaa
in
in
mov
into
leave
and
cmpsb
or
jp
not
cmp
data16
cmp
or
repz
cmp
dec
insl
insl
pop
lret
cli
xchg
data16
push
mov
imul
aaa
jge
and
std
hlt
jmp
ja
lods
mov
adc
cmp
cli
fldenv
push
mov
dec
jo
mov
and
dec
mov
mov
jmp
rorb
addr16
push
sub
mov
add
popa
jp
js
pop
add
insl
mov
add
insl
adc
jbe
cltd
pusha
fs
repnz
xchg
jns
xchg
aas
jno
ret
data16
popf
inc
leave
cli
xchg
mov
in
test
adcl
call
loope
into
pusha
cwtl
mov
xor
mov
pop
je
jmp
dec
pop
xor
jle
rorb
dec
in
xchg
idivb
push
mov
sub
xchg
push
jg
push
push
leave
fiadds
xor
negb
mov
out
sbb
jp
inc
pop
add
fsubrl
inc
inc
dec
adc
pop
cmpsl
inc
push
sbb
ja
mov
mov
mov
orb
fisttps
test
adc
lods
cmpsb
in
mov
pop
fsubrs
jnp
xchg
xor
loope
push
add
and
int3
add
mov
mov
cltd
lea
idivb
loopne
aam
mov
adcl
cmpl
or
dec
icebp
bound
dec
data16
cmp
pop
inc
cmp
pushf
jo
cmpsl
xor
sbb
lret
popf
add
arpl
lret
std
ftst
ja
cmp
xchg
push
sub
repz
dec
fwait
testl
cwtl
add
push
ret
or
add
sub
es
mov
or
cwtl
insl
test
cmpsb
pop
push
and
add
movsb
lea
lock
xchg
dec
lret
jbe
jle
pop
add
mov
cmpsb
mov
xor
add
iret
push
fildll
push
pop
xor
popa
push
push
std
xor
cmp
pop
push
call
cwtl
std
mov
lock
in
icebp
xor
les
pop
dec
mov
adc
pop
lods
in
dec
into
ja
scas
adc
imul
sub
mov
adc
xchg
rcrb
fsub
sbb
push
hlt
mov
jns
bound
xrstors
or
cmp
pop
sbb
and
scas
loopne
testb
add
mov
out
adcl
enter
leave
sub
or
das
int3
outsb
inc
push
dec
xchg
ljmp
fcmovnu
xchg
shr
flds
loopne
subb
sarl
sub
pusha
push
in
jp
scas
xor
mov
mov
or
sbb
cmp
aam
xor
cmc
lret
int3
mov
mov
ret
out
push
inc
insl
mov
stos
push
or
lea
inc
pop
fldcw
ja
insb
arpl
imul
mov
pop
dec
int
push
jmp
sub
jno
pop
xor
inc
mov
pop
pop
ret
fisubl
scas
cmp
fcoml
call
mov
insb
movb
mov
mov
sub
out
ds
and
add
inc
lcall
adc
and
scas
loope
or
imul
unpcklps
add
cmp
inc
cmp
imul
test
cmpl
pop
adc
scas
stc
and
imul
jle
scas
mov
aaa
sub
ret
inc
out
es
rcr
sub
das
add
mov
stos
dec
lods
push
cli
shll
repz
pusha
out
rol
test
add
loopne
lcall
fiadds
ss
fcmovb
add
cmp
es
pop
cmp
xor
sbb
je
hlt
jge
outsb
out
popf
jmp
inc
rclb
out
and
and
outsb
lds
out
jmp
cs
es
mov
jne
xchg
call
push
mov
std
and
adcb
mov
pop
ficomps
xchg
and
ret
mov
sbb
xchg
das
inc
in
or
push
scas
push
pushf
fldl
shll
mov
pusha
jo
adc
mov
or
int3
mov
or
push
pop
push
iret
sub
mov
in
mov
loop
lahf
loope
rorl
or
add
ret
ljmp
aad
sbb
in
jbe
xor
adc
cmpsb
inc
jge
push
scas
in
mov
js
and
lea
repz
cmp
sbb
dec
mov
ss
xchg
fsubrl
jp
roll
mov
fwait
pushw
push
js
sub
dec
std
xchg
rcrb
mov
add
cmpsb
outsl
jno
out
mov
or
or
dec
push
cltd
test
sub
fstpl
popa
orb
jle
xchg
leave
jecxz
xor
jno
leave
cmovo
out
int
cmp
fs
and
push
notb
sub
cmp
adcl
mov
push
xlat
pop
mov
jmp
frstor
xor
mov
xlat
out
fistps
popa
mov
movsb
mov
ja
out
xlat
fisttps
sbb
lahf
or
sbb
setp
cmp
xor
or
das
cmp
popa
rolb
and
xlat
addr16
push
sub
mov
loop
enter
ret
add
vcmpps
hlt
aad
fxch
mov
mov
mov
out
scas
nop
xchg
hlt
sub
pushf
mov
jns
arpl
std
stos
je
out
pusha
ret
shrb
jle
aam
das
into
dec
jo
push
sbb
das
pusha
jle
pop
in
aas
cmpsb
ljmp
roll
push
in
dec
cltd
insl
push
jns
test
bound
scas
add
in
pop
jne
cmp
aam
add
pop
jmp
mov
xor
pop
arpl
std
xor
scas
push
jae
add
fmuls
xchg
std
xor
dec
or
and
or
aas
xchg
lret
fcmovu
pop
jbe
mov
movl
test
out
push
clc
pop
jns
inc
mov
xlat
lods
push
pusha
in
jle
in
and
in
push
lds
push
push
xchg
pop
mov
lock
push
jae
cwtl
jg
inc
roll
je
aaa
add
rcll
insl
mov
add
fmuls
lods
and
sbb
sbb
mov
fdivr
lods
mov
xchg
jl
ffree
clc
cmpsb
js
outsb
fidivrl
push
je
jbe
xor
add
add
mov
sbb
xor
repnz
mov
nop
lret
and
lcall
dec
subl
push
je
js
jbe
mov
jge
push
out
and
jp
sub
mov
mov
lcall
pop
imul
notl
sub
aas
ror
mov
xchg
cmp
test
mov
sub
mov
movsb
xchg
xor
enter
test
pop
jecxz
leavew
les
xchg
cltd
stos
cmpsb
or
push
add
and
decb
add
in
dec
mov
adc
fsub
xor
and
rcrw
sbb
xchg
rcrl
ss
jecxz
popa
test
inc
push
jg
inc
lcall
xchg
divb
sub
pop
pop
push
pop
jns
fstp
in
adc
shr
sahf
movsl
cmp
fdivs
add
in
int3
aas
jne
inc
xor
jle
test
push
ss
push
sahf
adc
in
pop
popf
adc
aas
jmp
fs
fistpl
add
sbb
cmp
adc
and
loopne
imul
fadds
adc
aaa
sub
inc
pop
xchg
add
jg
xchg
shlb
xchg
ss
inc
or
jge
jecxz
push
sti
pop
mov
inc
ffreep
outsb
loopne
or
inc
in
push
repz
jecxz
pop
in
dec
out
imul
mov
mov
fldenv
xlat
nop
loop
mov
scas
mov
lret
mov
pop
push
roll
js
fists
cmp
jp
jge
cmp
cld
fwait
adc
sbb
test
and
in
xchg
mov
out
sbb
aaa
fistl
add
mov
imul
rcrb
imul
ss
or
cmpsl
cli
int
test
lods
ficoml
scas
mov
lret
jmp
gs
inc
pop
pop
mov
mov
addr16
and
add
dec
out
sti
xor
inc
push
out
iret
dec
outsl
pop
xor
int
add
dec
cmp
jecxz
repnz
pop
push
bswap
adc
insb
sub
jns
mov
and
mov
rcrl
leave
sub
cli
outsl
or
nop
popf
testb
out
or
cmp
out
push
ret
jns
adc
imul
insb
sbb
popf
in
and
leave
test
xchg
cmp
push
arpl
push
cmpsb
push
or
push
sbb
cmpl
xchg
pop
push
add
sbbl
test
xchg
adc
push
jmp
test
imul
push
mov
cs
dec
sub
dec
push
or
cmpb
fmuls
fdivl
test
sbb
mov
movsb
jno
jo
bound
lock
in
dec
ljmp
cmp
pop
pop
dec
xchg
pop
pusha
out
xchg
stos
inc
add
jg
mov
arpl
mov
mov
dec
add
jnp
stc
addb
lea
xchg
out
mov
pop
shll
sub
repnz
call
push
scas
add
adc
mov
outsb
sub
cmp
fdivs
stos
jg
inc
xchg
adc
pusha
or
pop
xchg
bound
jmp
and
or
inc
jg
int
jno
xor
outsb
dec
push
fucomip
mov
pushf
es
aas
outsl
jl
pop
enter
popa
sub
fdivs
adc
push
mov
mov
inc
pop
iret
xchg
rclb
mov
out
adc
xor
xchg
cmpsb
rcl
mov
mov
leave
push
fnsave
sti
in
lods
or
sti
pop
or
inc
pop
loope
sub
inc
xor
adc
add
aam
xor
jle
mov
xor
xchg
sbb
mov
pop
out
pop
fdivs
or
ret
add
jae
fiaddl
xor
jg
mov
rcrl
roll
sub
sub
movsb
pop
aad
ljmp
xor
mov
xor
scas
lret
xchg
jmp
add
mov
andl
and
fs
mov
cli
push
arpl
adc
ret
pusha
popa
pop
pop
mov
loopne
aam
xor
rolb
frstor
cwtl
inc
insl
iret
iret
mov
insl
mov
cmp
mov
push
and
and
in
jae
xchg
xor
mov
inc
shrd
pop
shlb
dec
pop
dec
movsl
shr
sub
lcall
or
cmpsb
test
jb
lret
push
mov
mov
or
cmp
xor
jp
fcoml
ja
repz
pop
pop
xchg
into
xor
outsl
dec
mov
out
pusha
and
jg
stos
psllw
inc
mov
sbb
pop
mov
test
adc
enter
xor
xor
push
es
jb
outsl
mov
fidivs
ja
push
pop
xchg
fwait
lock
les
mov
subl
mov
aas
push
es
add
push
xchg
inc
cltd
dec
dec
jns
fiaddl
ss
faddl
inc
push
xor
sbb
push
mov
push
test
test
inc
mov
mov
xchg
sti
icebp
fwait
sahf
lret
jecxz
loop
test
enter
cmp
sub
call
mov
and
hlt
pop
leave
cwtl
inc
lahf
mov
and
xchg
sahf
insl
repnz
mov
mov
cwtl
clc
mov
fs
jp
ljmp
mov
sbb
jb
and
pop
xor
push
pusha
mov
dec
ret
addb
xchg
fs
push
cmp
add
jne
inc
push
mov
pop
or
addr16
movsb
pop
pop
mov
jnp
shlb
cmp
push
out
aaa
lret
mov
push
shll
aad
sbb
stos
lods
lcall
cmc
fs
outsl
pop
sub
jbe
popf
xor
fdivl
test
jge
lahf
outsl
movsb
in
push
ja
lahf
jmp
or
bound
sar
inc
adc
add
call
lcall
mov
mov
cmpb
repz
adc
adc
stos
les
mov
test
cld
add
test
fildll
out
pushf
icebp
mov
mov
cmpsb
adc
mov
mov
lret
ret
mov
sub
lcall
ret
jns
bound
pop
subb
loop
add
std
test
add
xor
jle
mov
mov
xchg
or
cmpb
aam
lcall
inc
repnz
or
icebp
imulb
addb
jmp
mov
mov
jns
mov
dec
int
and
cmp
xor
aaa
popf
push
ljmp
repnz
and
outsb
inc
stos
rcrl
jne
pop
pop
jle
push
push
loope
movsb
mov
jge
aam
mov
mov
mov
xchg
mov
jae
and
mov
inc
inc
mov
sbb
shll
out
stos
mov
scas
push
lods
jle
sbb
xchg
cmp
jne
gs
or
insb
fisubrs
fimull
cmp
lret
push
jne
aas
lcall
inc
ret
pop
call
les
and
sub
mov
pop
sub
jle
jne
das
and
xchg
test
clc
xor
int3
call
call
dec
adc
xor
pop
mov
sbb
and
cmp
jmp
mov
jbe
lahf
pop
mov
out
or
js
das
mov
jmp
push
ja
xor
xchg
jae
les
shrb
mov
in
leave
mov
sbb
xor
jno
push
sub
pop
cli
pop
cmpsb
add
addr16
dec
loopne
adc
test
sub
dec
adc
out
jg
push
je
mov
loopne
mov
xchg
out
or
fidivs
jl
rcrb
cltd
stos
or
nop
cmp
mov
aam
gs
xor
mov
add
jmp
dec
add
std
mov
jo
negl
adc
sahf
add
xchg
arpl
push
dec
xchg
mov
or
inc
jle
jb
xor
lret
mov
cli
iret
lea
arpl
or
push
lcall
jmp
ss
pop
sub
xchg
orb
sbb
adc
inc
ds
mov
outsl
fnstsw
push
pop
sbb
sarb
adc
fstps
sbb
enter
in
and
ljmp
xlat
pop
push
push
bound
dec
jae
mov
and
push
data16
scas
and
repnz
leave
adc
test
sbb
lods
aas
mov
out
ljmp
movsb
call
test
inc
jle
and
movsb
xchg
call
and
add
mov
sbbl
outsb
mov
dec
xor
icebp
and
xor
mov
daa
fst
push
and
mov
push
inc
dec
or
pop
stos
test
pusha
and
repz
sbbb
dec
jge
push
and
mov
stos
xlat
aad
mov
out
lret
jbe
cmp
incb
jg
mov
lods
aad
cmpsl
xabort
dec
enter
scas
mov
push
gs
cmp
push
sub
jge
subb
xchg
inc
outsl
mov
mov
imul
push
dec
addl
mov
stos
ja
sahf
or
mov
pop
popa
xchg
divb
mov
cmp
pop
fnsave
enter
subl
mov
and
adc
pop
jl
inc
jle
aad
inc
mov
hlt
idiv
fcmovb
movsb
sbb
repz
or
mov
pop
or
dec
lret
stc
popa
cmp
mov
sub
in
rcr
push
inc
fstp
inc
in
sbb
insl
or
pop
or
lret
daa
orb
in
inc
push
adc
push
pop
xorl
lret
int
cmp
enter
jmp
xor
and
push
cwtl
out
xor
mov
adc
dec
cltd
xor
mov
repnz
fisubs
sti
xlat
bnd
loope
lcall
je
cmpsl
jle
ret
dec
addl
cmpsb
clc
add
mov
sbb
icebp
iret
jne
pop
shlb
rorl
push
cwtl
jecxz
fs
test
ret
cs
rcrb
mov
lea
jae
pop
adc
jne
sbb
cmpsl
inc
xor
into
in
xchg
bound
mull
ret
loopne
inc
in
cvtps2pi
pop
mov
aad
mov
scas
lret
in
push
mov
jb
push
sbb
ds
cmp
push
sti
sbb
dec
mov
test
mov
stc
out
pop
and
pop
mov
es
ss
add
xchg
dec
jmp
test
sbb
sub
inc
movsl
sbbb
and
jns
outsl
into
jb
repz
jecxz
sub
pop
or
adc
adc
and
mov
out
pop
andl
mov
dec
imul
xlat
in
pop
lea
lock
mov
pop
dec
sar
sub
aas
mov
sbb
xchg
fcom
jp
lods
inc
sahf
jp
and
pop
sub
inc
mov
dec
icebp
xor
fsts
daa
jecxz
or
cmp
xchg
mov
push
xchg
pop
roll
cmp
leave
dec
inc
pop
cwtl
fnop
push
xchg
and
shrl
xchg
test
stos
and
push
test
inc
aad
ficompl
xchg
dec
xor
lahf
jge
sbb
dec
aaa
jecxz
fs
lea
cmp
mov
rcll
dec
mov
adc
pop
xchg
cmp
scas
or
pop
add
loopne
pop
arpl
clc
sbb
xor
pop
hlt
movsl
iret
stos
es
push
faddp
decl
sbb
arpl
xchg
adc
push
jns
daa
rorb
ds
jle
pop
sbb
fwait
sbb
adc
sti
mov
and
sub
push
inc
mov
pop
clc
popa
test
push
aam
xchg
xchg
arpl
ret
outsb
jl,pn
mov
fsubs
es
sti
arpl
ljmp
push
shlb
adc
sub
stos
leave
rclb
adc
imul
hlt
dec
xchg
loopne
mov
jb
and
dec
mov
lret
xchg
pop
sub
popa
pop
cmp
push
and
call
mov
inc
jno
es
inc
fisttpl
mov
xor
outsl
pop
jae
sarl
pop
mov
or
and
or
jne
xor
dec
or
sbb
xchg
push
lahf
pushl
lock
fidivrs
sarl
push
dec
jge
mov
mov
mov
or
mov
jl
ljmp
adc
sti
mov
xor
jne
iret
mov
or
ret
lahf
enter
loope
subb
pop
aaa
ret
or
fildll
add
rorb
push
cwtl
test
popf
or
lret
inc
das
aam
xchg
stc
lds
cmp
mov
jg
adc
fimuls
lods
mov
xchg
rorl
adc
clc
clc
mov
ss
jle
or
std
mov
nop
jns
fsubl
push
jb
adc
adc
jno
fs
popa
xchg
popl
loopne
jo
ret
adc
mov
lahf
fistl
xchg
test
call
xlat
push
xchg
test
adc
xchg
or
jecxz
jmp
mov
push
pushf
call
popa
int3
mov
scas
aas
xchg
inc
or
mov
mov
test
xor
test
addr16
jl
js
push
cli
es
lea
ja
es
jp
add
cmp
pop
add
cmc
dec
popf
add
xchg
test
push
cmp
pop
clc
je
aas
or
push
pop
pop
add
sbb
adc
jae
imul
imul
pop
scas
cmc
stc
xor
cmp
add
jae
popa
call
adc
hlt
adc
test
nop
pop
or
cmp
call
pop
dec
or
sub
jmp
mov
sbb
das
inc
jmp
cli
ffreep
pop
outsl
pop
pop
jp
test
cs
cli
cld
and
inc
push
bound
mov
xor
cmpsb
cmp
sub
add
and
inc
xorb
fimull
arpl
pop
push
mov
mov
dec
jmp
or
sahf
lods
bound
sbb
in
and
jmp
xorb
pop
mov
loope
in
pop
fcoms
stc
jmp
xchg
shrb
xchg
mov
mov
cmpsb
fdivl
scas
mov
ja
inc
in
cmp
out
aas
stc
mov
fs
mov
fxch
test
and
or
push
pop
repz
dec
mov
sub
shlb
pop
int
inc
or
fldt
int
ja
in
jge
add
sub
cmp
addr16
push
mov
rol
movsl
scas
rorb
scas
mov
das
push
jno
daa
mov
cmp
push
insb
or
push
in
js
or
push
rcrb
fwait
inc
jnp
into
or
push
add
sbb
iret
stos
aad
pop
xor
or
sbb
xchg
pop
icebp
inc
mov
push
test
loopne
mov
dec
aad
push
out
sub
mov
lea
or
nop
xchg
cmp
leave
fmulp
lret
and
ret
inc
int
dec
mov
mov
sbb
jb
stos
lock
inc
mov
shrb
pop
bound
fwait
mov
hlt
movl
xor
scas
in
divl
aam
xor
iret
ret
adc
inc
mov
pop
add
xor
mov
scas
jmp
xor
ja
pusha
mov
ficompl
push
xor
add
cmp
mov
jns
add
out
and
test
dec
je
arpl
test
and
push
jmp
mov
sbb
xchg
cli
push
jo
dec
mov
je
mov
ss
test
mov
imul
dec
fiaddl
sub
stc
mov
mov
cmp
mov
cld
scas
jp
inc
ret
std
dec
int
pop
popf
mov
lret
mov
aaa
xchg
xchg
mov
loopne
cmp
ds
mov
stos
inc
xor
push
mov
mov
pop
lock
lcall
mov
fildl
or
bound
mov
rclb
dec
xchg
sub
out
cmpsl
inc
sub
aaa
mov
jae
pop
out
mov
or
push
xchg
cmp
popf
icebp
xor
loop
fistpl
xchg
call
inc
xchg
lret
fcomps
cmp
pop
clc
dec
jp
gs
dec
and
pavgw
pop
inc
adc
mov
inc
mov
insb
addl
bound
cmp
test
lods
int
ss
sub
fsubs
jnp
mov
mov
add
sbb
jmp
mov
pop
dec
jp
xchg
sub
int
sbb
lea
mov
mov
sahf
in
sub
push
and
jp
or
inc
push
adc
sbb
stos
inc
mov
or
dec
fimull
adc
data16
sub
enter
mov
jae
jg
in
and
fisubrl
loope
aas
mov
add
lods
dec
lret
mov
lea
shrl
mov
push
std
mov
ss
xchg
loop
push
sbb
xor
mov
lods
pop
pop
adc
dec
sbb
inc
or
dec
mov
pop
cmp
call
ja
fistpl
dec
lds
cmpsb
jle
fdivrl
aam
arpl
cmp
push
mov
add
or
addr16
jno
pop
fidivs
or
or
pop
sahf
and
mov
in
pop
ds
dec
xchg
fldt
mov
jle
add
pop
movsl
pop
xchg
add
sti
daa
sahf
pop
sub
jl
shl
hlt
add
sti
rolb
jmp
xor
mov
test
popf
mov
sub
xchg
fstps
xor
cwtl
pop
xchg
adc
rolb
xchg
jne
lret
mov
fs
push
nop
pop
cmp
js
fdivr
das
bt
mov
mov
pop
sbb
mov
in
iret
jle
mov
add
imul
and
pop
jno
cltd
dec
sub
cmpb
cmp
add
test
hlt
inc
xchg
test
cmpsb
push
rcll
lods
orb
dec
fildll
shrb
movsb
sub
loope
mov
sub
fs
xor
gs
dec
pop
add
orl
scas
or
pop
js
int
aam
adc
jnp
nop
and
js
and
nop
mov
stc
lock
sbb
cmp
hlt
push
pop
pop
push
lcall
cmpsb
cmp
mov
mov
dec
paddsw
pop
jb
push
and
or
repz
mov
jl
inc
xor
in
test
test
mov
mov
int3
scas
gs
and
xchg
dec
or
push
pop
mov
add
fs
sbb
lock
add
rclb
insl
fbld
or
jl
pop
jl
fstl
repnz
std
subl
es
mov
sbb
add
nop
lret
hlt
imul
mov
movsl
nop
imul
and
push
pop
dec
bound
insl
ja
adc
test
fstpt
mov
mov
stos
addr16
mov
push
pop
push
fs
jmp
add
test
sub
in
lods
shrl
iret
ftst
jmp
push
add
jbe
pop
fbld
cmp
mov
rcl
pop
shll
add
pop
ret
jp
sbb
dec
addr16
cmpb
movsl
jne
out
out
cld
icebp
mov
and
mov
mov
cmc
dec
jle
out
rorb
fisubrl
call
nop
in
or
inc
cli
pop
cmp
jno
mov
dec
mov
push
lret
movsl
and
jne
icebp
fcmovb
popf
test
push
mov
es
mov
es
shlb
cmp
or
inc
xlat
stos
hlt
or
leave
pusha
adc
loopne
jg
cmp
sub
sti
mov
arpl
cmp
inc
pop
xor
adc
sbb
push
dec
repz
ds
xor
cltd
mov
cmp
sub
adc
test
jecxz
stos
dec
and
jno
add
rcll
and
add
out
popf
push
int3
ljmp
lods
out
int
and
pop
ds
cwtl
push
dec
lcall
mov
inc
push
pop
lret
pop
inc
sub
je
pop
das
and
adc
xchg
sahf
mov
test
addr16
adc
xchg
push
int3
ja
mov
fwait
outsb
hlt
aad
xchg
hlt
sub
or
jle
inc
in
mov
and
mov
cwtl
xchg
shll
add
or
mov
mov
insb
lret
add
sbb
sbb
mov
or
lahf
mov
out
pop
mov
ljmp
cmp
mov
bound
push
ljmp
mov
addr16
mov
daa
jns
arpl
jle
pop
stc
sub
mov
mov
cld
and
repnz
dec
scas
nop
out
xchg
test
mov
mov
adc
stos
popa
and
adc
mov
jbe
popa
popa
ja
test
out
mov
pushf
movsl
or
push
dec
les
adc
mov
and
push
mov
pop
lea
and
fdivl
push
loope
into
dec
fwait
pop
enter
fwait
xchg
push
push
lea
push
stc
xor
lods
int3
js
aas
cmpsl
pop
cmc
add
mov
pusha
and
sub
jl
dec
adc
inc
fstl
pop
sub
xchg
add
pop
out
mov
call
insl
mov
setp
xor
xchg
loop
mov
xor
sbb
jnp
mov
xor
cltd
ja
rorl
popa
add
jno
sub
xor
xor
inc
push
jb
pushf
mov
or
inc
cwtl
lret
roll
mov
pop
popf
or
xor
cli
imul
in
andl
test
pop
fsub
cs
decb
pop
push
pop
xor
jp
mov
lock
je
lock
inc
push
fnstcw
inc
sbb
mov
and
sbb
movsl
dec
imul
ss
cwtl
inc
loope
fdivrl
popf
mov
leave
adc
sahf
rorl
jmp
hlt
pop
or
xor
in
mov
mov
push
mov
pusha
push
xchg
in
aam
pushf
ja
test
xor
adc
pusha
sub
jmp
ja
mov
push
or
lret
pop
mov
outsb
inc
mov
hlt
popw
test
fwait
cmp
data16
dec
stos
enter
sbb
xchg
and
jne
rcrl
adc
dec
sti
and
addl
addr16
mov
push
sub
leave
rcrb
inc
cmp
lret
xor
adc
lcall
jne
adc
dec
insb
adc
inc
and
or
hlt
sbb
sub
ret
add
lcall
lret
xor
out
pop
mov
clc
movsl
sbb
sub
pop
es
pop
xor
push
dec
shl
inc
adc
sbb
sti
jle
pop
fldenv
mov
pop
gs
outsl
adc
dec
sbb
xchg
hlt
mov
xchg
push
mov
daa
jno
das
jl
inc
mov
push
sub
inc
cmp
mov
and
lcall
ljmp
mov
loopne
pop
lods
dec
dec
sbb
cwtl
out
bound
add
test
cltd
gs
das
test
test
scas
mov
out
and
jno
hlt
mov
or
out
dec
mov
xchg
sahf
lcall
mov
sub
adc
add
or
test
iret
mov
bndstx
test
ret
aad
mov
cmp
sub
mov
adc
sbb
add
insb
xchg
es
nop
add
pop
adc
leave
insl
push
jl
dec
xchg
ljmp
jmp
xchg
mov
pop
mov
cwtl
pop
rcl
push
in
inc
or
outsb
xchg
sti
jne
das
jns
push
sbb
pop
pop
andl
sbb
outsb
mov
add
jge
stc
adc
xor
dec
jne
dec
fcompl
leave
outsl
call
jae
or
dec
je
inc
mov
shlb
lahf
lahf
sbb
aam
popf
xchg
xchg
daa
or
or
movsl
pop
and
mov
xchg
inc
cwtl
int
add
stos
push
adcl
dec
es
lahf
sbb
jmp
pop
lds
mov
loopne
imul
loope
lcall
xchg
loop
loope
pop
xorb
movsl
icebp
sbb
adc
pop
adc
push
inc
sar
cmc
mov
dec
inc
je
fdivrs
mov
and
fadds
sbb
nop
sub
in
into
mov
shrb
std
mov
inc
mov
xchg
pop
jo
mov
adc
outsl
push
adc
cmpsb
scas
into
scas
jl
adc
xor
xor
dec
mov
jbe
or
adc
dec
fs
jns
mov
movsl
mov
jno
inc
outsb
or
adc
mov
xor
or
test
adc
adc
sub
mov
imul
jmp
aam
add
sahf
sub
inc
mov
fcoms
cli
pop
imulb
repz
pop
pop
mov
cmp
stc
and
cs
iret
add
jb
xchg
or
xchg
mov
les
push
stc
mov
or
fsubs
xor
mov
repnz
add
mov
aas
pushl
dec
mov
xchg
ret
cli
or
sbb
idivb
cmc
ljmp
xchg
cmp
pop
mov
xor
into
pop
sub
icebp
rcl
add
ss
add
rorl
xor
jne
sub
gs
pop
sete
movsl
adc
mov
test
inc
mov
dec
addr16
xchg
pop
push
sub
movl
popf
xlat
lds
xchg
lea
subl
adc
push
lds
das
add
cmpsl
loop
insb
outsl
xchg
xor
scas
stos
mov
out
stos
ja
jp
jp
je
and
enter
xor
mov
and
out
add
pop
mov
and
mov
stc
xlat
cmp
andb
pop
mov
push
aas
xor
pushf
jnp
pop
aad
das
cmpsb
nop
arpl
xor
sbb
icebp
in
mov
repz
mov
inc
add
cld
xchg
adc
or
inc
cmp
jg
mov
sub
and
fimuls
xchg
or
xor
cmp
inc
xchg
dec
imul
ljmp
mov
xchg
outsl
cmp
incl
cs
lahf
inc
cmp
push
test
ret
inc
mov
int
pop
push
lret
nop
je
fimuls
cmc
pop
sahf
or
out
popf
push
add
jmp
aad
sub
ret
and
cmpb
movsb
and
sbb
pop
sarb
jnp
or
xor
adcl
lock
mov
arpl
in
xchg
cmp
fistpl
clc
mov
lds
add
push
cmpsl
int3
sbb
outsb
ljmp
xorl
popf
xor
ror
dec
call
aas
adc
shl
std
xor
push
fisubl
and
cwtl
push
cmp
in
and
pop
fwait
pop
xor
pushf
sbb
in
das
inc
mov
nop
insl
cli
lret
subb
xchg
push
movb
lock
push
mov
adc
scas
in
and
shlb
mov
into
dec
push
push
scas
andl
int
test
lods
and
xor
inc
push
in
into
pop
outsb
ds
adc
cltd
and
xchg
lahf
adc
pop
bound
test
fldl
aam
shl
jae
fidivrl
jb
jmp
sub
addr16
adc
sbb
dec
xchg
lret
mov
and
cmp
pop
rcr
inc
jbe
flds
mov
mov
int
pop
aad
cld
and
xchg
mov
lock
jecxz
les
lea
js
xchg
mov
cli
notl
xchg
in
fsubrs
cmp
clc
jnp
cmc
cld
jg
mov
jns
xor
scas
aas
pop
jno
xor
sub
xchg
mov
lods
leave
inc
mov
aad
mov
add
sahf
fwait
bound
out
sub
out
cmpsb
xchg
jbe
jbe
enter
cmp
mov
mov
popf
dec
mov
stos
sbb
arpl
adcl
fstpl
loopne
cmc
sbb
sbb
fisubrs
rolb
or
sub
jecxz
xor
int3
stc
stc
cld
fwait
inc
push
xor
stos
lock
sahf
xor
repnz
xchg
iret
sarl
pop
lret
and
pushf
stc
test
lahf
pop
jb
xchg
add
bound
psubw
mov
push
pop
and
in
std
gs
pop
mov
imulb
mov
stos
mov
add
and
stos
ljmp
mov
ret
or
dec
daa
jne
and
mov
je
mov
jg
dec
mov
sub
into
aad
mov
dec
lret
jmp
jmp
shrb
int
xor
into
or
insl
sub
cmc
or
jnp
xor
stos
xor
push
sbb
fldl
data16
lds
sahf
gs
sti
fwait
xchg
cwtl
mov
jle
jae
and
inc
lock
xchg
imul
sbb
mov
clc
push
enter
or
cmp
sarb
mov
test
mov
push
add
jnp
roll
ficoml
jb
int
adc
mov
cmc
sub
xchg
ja
add
inc
and
aas
out
or
push
push
cli
xchg
jae
dec
shrb
mulps
sbb
je
scas
outsl
push
pop
push
push
in
arpl
dec
loop
fildll
iret
or
jo
js
aam
inc
xor
testl
lahf
jbe
fnsave
inc
imul
jp
fstl
shl
clc
scas
jg
push
dec
mov
ret
fld
adc
movb
adc
leave
push
jo
repnz
cmp
aaa
xor
push
jmp
ss
cmp
aam
scas
loop
inc
mov
and
adc
insb
mov
mov
out
and
shrb
fistps
push
outsl
jmp
push
fldcw
push
stos
rcr
pop
jg
mov
es
pop
jg
rclb
sub
andb
mov
push
shlb
dec
cmp
fcompl
jp
arpl
leave
pushl
jae
jnp
fstp
mov
mov
mov
adc
xchg
fbstp
addr16
fwait
popa
xchg
push
inc
jg
and
lock
dec
in
add
jo
pusha
pop
sub
int
jb
jmp
add
jns
xor
adc
in
push
into
dec
jne
call
in
mov
in
xlat
es
js
mov
push
nop
sbb
mov
push
fsts
cmp
pop
lock
sti
mov
xchg
je
das
and
nop
adc
cmp
or
push
jb
xchg
inc
fcompl
mov
aad
jnp
test
loopne
xchg
add
jge
xchg
inc
in
pop
jbe
push
xchg
xchg
pop
mov
cmp
add
mov
pop
lret
sub
push
jg
pop
lock
pop
push
shll
adc
xor
mov
mov
mov
ret
mov
sbb
cmc
pushf
out
xchg
sbb
sub
lods
bnd
mov
bound
repnz
insl
sbb
int
cmp
dec
jmp
das
lahf
cmp
lock
mov
shll
mov
lret
dec
mov
roll
je
jmp
xchg
jnp
cmp
pop
out
sti
push
aad
test
xchg
jg
jecxz
mov
inc
out
mov
mov
fsubrs
adc
add
lret
aad
push
mov
jb
cwtl
test
sub
mov
mov
subl
add
cmp
divb
and
movsl
push
push
push
xchg
je
mov
mov
and
add
mov
clc
mov
lea
loopne
push
jge
sahf
pop
push
loop
or
fiadds
mov
jecxz
test
push
push
inc
mov
loopne
fs
out
sub
ret
xchg
out
mov
fs
push
dec
pop
das
inc
pop
jne
gs
cmp
sub
pop
adc
jge
mov
ja
jle
jge
aas
mov
pop
push
push
sbb
repnz
mov
out
ja
pushf
mov
push
out
pop
pop
popf
test
bound
jle
sti
rep
adc
fmulp
cwtl
mov
enter
jl
lds
push
icebp
int3
ds
push
leave
out
mov
xlat
jg
dec
sub
enter
jns
enter
dec
inc
mov
loopne
movsl
stc
cmp
test
push
cwtl
fiaddl
adc
mov
cmp
sbbb
ret
mov
mov
cld
add
cmpsl
mov
cmp
sbb
jb
or
sub
push
test
jnp
add
inc
pop
mov
fmull
mov
mov
mov
mov
fwait
add
xchg
data16
stc
cld
dec
sbb
xlat
jo
movsb
and
push
jl
cld
les
pop
iret
lods
dec
pop
bnd
fucomip
ret
and
lahf
pop
push
sbb
inc
sbb
in
sarl
lods
jns
pop
aaa
mov
adc
jl
or
sub
inc
mov
shrb
call
shlb
mov
pusha
popf
lods
mov
xor
ds
or
mov
cmpsb
xor
and
lret
pusha
lret
arpl
pop
dec
inc
in
call
scas
xchg
sti
sbb
push
hlt
sub
dec
xchg
adc
jp
push
sbb
xchg
cmp
pop
idivb
adc
je
cmp
cmp
in
mov
pop
test
mov
pop
testb
inc
xlat
es
call
dec
out
pushf
xor
cmp
pop
loop
jle
test
cli
shl
add
mov
clc
in
add
mov
push
sbb
call
adc
outsl
je
addl
popa
lods
cmc
and
ret
add
mov
pop
daa
movsb
pop
pusha
adc
cmpsl
stos
pop
fs
pusha
aad
fcmovne
pop
jne
in
add
test
add
push
subl
test
or
pusha
scas
pop
xchg
aaa
adc
inc
hlt
mov
insl
inc
pop
sub
xor
std
arpl
or
add
dec
inc
shrl
mov
push
mov
push
push
cmpsb
in
inc
inc
popf
cmp
xor
data16
pop
adc
xchg
std
mov
ss
sbb
push
mov
lock
jne
inc
add
add
and
gs
bound
in
and
push
mov
pop
inc
mov
push
fstl
imul
xchg
insb
scas
mov
mov
imul
sbbb
cmp
fisubrl
xlat
repz
je
pop
push
xlat
or
cmp
testl
shlb
xchg
xchg
out
imul
sar
jmp
cmp
pop
cli
or
inc
jae
stos
pop
ds
adc
sub
or
loop
divb
mov
orb
test
push
sub
insl
stos
adc
dec
lret
jne
pop
es
xor
test
mov
mov
mov
push
pushf
cmp
sub
enter
xchg
and
test
lods
ds
pusha
add
dec
xlat
ss
test
test
repz
je
ss
or
and
lcall
xchg
aad
icebp
in
sbb
out
pop
nop
lret
mov
push
pop
outsb
mov
sbb
ss
mov
call
cmpsb
stc
mov
imul
inc
fisubrs
mov
inc
dec
js
and
cmp
jg
and
mov
mov
cltd
and
out
repz
dec
jg
out
js
cmp
xchg
sub
fs
inc
mov
lret
gs
xor
popa
mov
cltd
and
call
sub
jp
mov
xor
popf
and
pop
push
test
lcall
cmp
int3
gs
mov
push
leave
ret
dec
push
imul
push
sti
lahf
dec
dec
ljmp
jl
cmp
cmp
mov
out
fiadds
mov
sbb
pop
sbb
sbb
pop
loop
xor
mov
pop
in
out
out
fwait
and
xor
mov
mov
frstor
pop
subl
movsl
lods
xor
or
jbe
mov
push
mov
pcmpeqd
mov
cmpsl
lret
inc
sub
mov
mov
or
push
fs
cmp
ficoml
mov
mov
adc
outsb
gs
cltd
repnz
cli
mov
addb
adc
dec
inc
mov
mov
push
xlat
test
popf
rcll
mov
lahf
cmc
jae
inc
outsl
jmp
mov
aad
negl
xor
mov
xor
and
jmp
pop
sbbl
out
sbb
ds
leave
or
cmp
push
or
shlb
sbb
addb
aaa
jle
in
mov
arpl
dec
xchg
mov
sahf
cmpsl
idivb
jmp
push
fucomi
mov
mov
nop
stos
stos
sti
mov
nop
jno
add
movsl
xchg
mov
out
xchg
jp
mov
sub
inc
dec
testb
mov
std
mov
sub
out
mov
mov
inc
clc
xchg
dec
xor
lcall
xchg
push
add
pop
in
sub
xchg
roll
dec
cmp
adc
rolb
and
add
mov
push
and
pop
pop
jo
push
fiaddl
fisubrl
push
pop
pushf
mov
sarb
addl
ljmp
push
ja
stc
hlt
dec
sti
xchg
lahf
test
js
mov
and
inc
dec
ret
icebp
ret
xor
rcrl
mov
add
or
shlb
out
icebp
test
cltd
sahf
negb
push
push
pop
jg
mov
js
pop
jg
rclb
or
lcall
mov
pop
jnp
out
js
mov
push
hlt
sahf
sbb
test
inc
dec
pop
push
sub
in
sbb
lret
hlt
stos
push
mov
bnd
push
sub
and
xchg
nop
xchg
mov
mov
fdivr
adc
push
out
fisttpl
jbe
xchg
jmp
rolb
sahf
dec
xchg
dec
inc
call
dec
adc
xchg
imul
fisubl
outsb
std
rorl
mov
pop
mov
imul
loop
mov
ja
je
divb
fisubrs
stos
xlat
xchg
pushf
enter
ret
push
xor
stc
add
dec
loopne
xor
hlt
stc
test
adc
or
or
add
mov
bound
xchg
imul
push
sti
mov
fwait
sbb
iret
inc
ljmp
add
fwait
cmpsb
insb
cmp
divb
lret
cmpsl
jbe
dec
testb
or
repz
push
or
scas
pop
jnp
jg
clc
inc
fstpt
fxch
gs
mov
fstpt
pop
cs
cwtl
mov
lea
sbb
rolb
xor
inc
pop
jo
xor
jg
push
or
and
icebp
add
inc
push
mov
into
xor
in
out
fistps
inc
sub
add
jno
jg
into
loop
xor
call
lret
push
es
inc
xor
add
mov
lock
adc
pusha
pop
jmp
int3
outsl
xchg
aas
outsb
lahf
sbb
adcb
jle
insl
dec
stos
jl
fs
in
shlb
adc
jns
jb
outsl
insl
pop
enter
icebp
out
mov
sbb
jne
cli
xchg
pop
ljmp
int
out
xlat
lret
adcb
nop
mov
repnz
dec
jecxz
jmp
inc
fcoml
or
out
mov
sti
aam
push
pushf
and
out
and
xchg
sub
sti
in
in
leave
jmp
movsl
sbb
mov
xor
mov
dec
scas
aam
push
dec
or
mov
xchg
pop
loop
jmp
adc
fwait
mov
dec
jg
out
daa
aas
inc
out
mov
inc
sbb
repnz
fdivl
ljmp
sysret
xchg
xor
xchg
fldl
cmp
dec
jl
shrl
sti
xchg
das
cmp
popa
cmp
push
les
add
push
addr16
mov
dec
cld
call
push
mov
add
jl
push
je
pop
push
xchg
sub
jno
test
mov
mov
ficomps
adc
dec
bound
fwait
in
xor
fdivs
cwtl
pushl
popa
mov
jl
cltd
sbb
les
lret
adc
rcrb
push
movsb
mov
xor
lret
lahf
rcrb
sub
adc
out
xor
or
jecxz
pop
xorl
mull
mov
cmpsl
xchg
out
sbb
iret
and
test
les
dec
addr16
mov
mov
lret
out
sub
test
stos
push
repnz
mov
lret
test
mov
sub
test
xor
jge
out
cmp
mov
and
in
les
xlat
xchg
adc
fcmove
sti
cld
mov
mov
push
fwait
fs
jp
mov
es
dec
leave
mov
out
testl
fisttpll
loope,pt
arpl
mov
ret
out
les
les
stos
mov
adc
jge
xor
scas
inc
push
ret
jno
mov
sub
test
sahf
arpl
stos
fcmovnu
nop
fdivrs
in
push
pop
andb
ljmp
in
xor
jo
jno
mov
lret
clc
fstpl
mov
int3
fbstp
int3
mov
outsl
and
xor
lds
loop
xor
adcl
aas
shll
loop
sbb
inc
push
xchg
jo
loope
fnstenv
xchg
arpl
ss
das
pusha
popf
test
ret
es
lods
inc
fists
enter
and
test
and
cltd
js
in
scas
enter
xor
xchg
mov
sahf
clc
inc
jle
out
cltd
loopne
xor
adc
test
pop
stos
notl
hlt
inc
fiaddl
int
out
pop
and
lret
aad
repz
jg
push
cmpsb
inc
fsubl
cmp
or
xchg
subl
nop
sarl
xor
and
push
push
cltd
and
xor
pop
negl
fs
xor
in
push
pop
xchg
insl
push
in
add
orl
cmpsb
push
xor
lods
in
sub
lcall
xchg
jmp
stos
pop
adc
adc
sbb
outsb
pop
mov
cmp
mov
repnz
ljmp
jns
cmpsb
cltd
sub
fwait
aaa
cld
mov
in
int3
mov
ss
cmp
pop
rolb
add
xchg
scas
mov
in
add
push
cmpsl
xchg
mov
ret
mov
shl
test
xor
sbb
ljmp
xchg
xchg
in
adc
dec
cmp
imul
xor
cmp
fistpl
movsb
ljmp
add
fsubrs
leave
jae
shr
or
dec
fwait
inc
repz
imul
add
xor
mov
pop
xor
jnp
push
adc
repz
pop
icebp
dec
lret
pop
mov
stos
pop
pop
sub
jecxz
sbb
adc
mov
fsubp
xchg
arpl
out
fmull
mov
push
ficompl
and
pusha
mov
add
bound
das
fdivrl
fs
leave
push
adc
negl
pushl
insl
pop
test
inc
mov
inc
push
cld
cmp
push
mov
cmp
jbe
xor
cmp
add
mov
push
jge
jae
jno
mov
clc
xor
sbbl
xlat
orl
mov
lods
sub
fs
nop
sbb
or
add
jmp
push
notb
out
push
loope
xor
mov
lea
mov
lods
jge
jmp
fwait
pusha
rcll
pop
ss
jno
dec
dec
or
dec
lods
xchg
mov
inc
popf
imul
mov
lods
or
or
jp
ret
nop
sub
push
xchg
push
or
subl
and
jae
jnp
hlt
cmp
scas
in
sub
add
mov
fsts
dec
in
mov
fdiv
lahf
sub
test
rolb
pop
mov
dec
push
lock
jmp
clc
or
rclb
loope
loop
and
cld
fidivs
dec
and
rolb
cs
fwait
test
subl
pop
jg
mov
sbb
pop
push
mov
add
pushf
xor
mov
xor
in
xchg
imul
sahf
mov
sarb
movl
int3
xchg
jg
pushf
or
add
dec
inc
and
mov
xchg
mov
pop
sub
cmp
adc
push
or
sub
mov
insl
sub
mov
jns
mov
shlb
out
pop
dec
add
add
pop
lock
mov
dec
enter
mov
jle
outsb
sbb
cmp
push
std
shlb
mov
mov
add
pop
div
lds
in
arpl
idivb
mov
inc
mov
insb
inc
pushf
sub
mov
cmp
xor
jb
push
cmp
xchg
imul
jne
subl
pop
or
stos
sarb
mov
push
sub
or
fwait
insl
aam
push
enter
cmp
xchg
insb
pop
repz
jbe
xor
add
aaa
push
gs
inc
stos
pop
adc
mov
add
jns
fs
sbbb
xor
and
inc
fs
out
add
test
push
test
mov
je
movsb
mov
xor
fwait
sbb
call
or
inc
jp
insb
imull
push
aad
mov
adc
mov
cltd
jl
and
and
jb
frstor
aas
adc
dec
jg
push
das
inc
pop
aam
cmp
std
dec
enter
fmuls
jmp
adc
subb
outsl
in
xchg
fcmovbe
xchg
inc
mov
pusha
or
adc
adc
lods
loop
jns
lcall
and
ja
sti
nop
or
fiaddl
push
rcrl
lds
pop
mov
mov
xchg
lods
cld
push
movsb
mov
ja
rcl
jecxz
jb
dec
ret
and
jae
fdivrl
lcall
lds
and
dec
mov
cmpb
hlt
ljmp
imul
outsl
jbe
jle
dec
aas
mov
repz
jns
pop
int
fiaddl
fwait
mov
jnp
add
adc
jle
inc
popa
dec
xchg
shlb
or
fs
and
xor
mov
jmp
mov
pop
jbe
fsts
xor
gs
sbb
das
adc
dec
nop
push
in
test
jbe
push
ss
sbb
inc
xchg
or
xchg
setbe
es
sub
lret
and
add
pop
bnd
jne
pop
aas
xor
jl
ds
push
inc
ss
push
push
mov
adc
pop
scas
mov
mov
fs
push
jecxz
test
addr16
xchg
idivl
sbb
ror
lret
leave
dec
xlat
aad
repnz
or
mov
lcall
push
pop
icebp
pop
cmpsb
push
inc
ret
jae
cmpsb
push
rcl
or
call
popa
sti
adc
sub
jle
or
jmp
idiv
scas
push
xchg
lcall
mov
mov
sub
sub
mov
inc
and
adc
dec
int3
stc
xchg
iret
in
pop
cltd
jne
jno
repnz
jle
jp
idivb
pop
xchg
mov
mov
cmpsl
icebp
into
xchg
push
popf
jl
jmp
push
lds
sub
mov
jae
data16
loope
push
jns
int
std
scas
sub
cltd
or
in
cmc
pop
arpl
jno
sbb
cmp
int
mov
cmc
js
stos
int3
test
xor
mov
push
push
roll
les
sub
add
mov
loopne
cmp
icebp
pop
fldl
imulb
add
int3
imul
int3
cmp
pop
mov
sbbl
icebp
imul
movsl
inc
and
pop
cltd
out
cs
lock
mov
pop
inc
inc
test
cmp
dec
insb
in
stos
inc
idiv
cmpsl
fnsave
cmpsb
scas
xchg
pop
inc
mov
mov
loopne
sub
xor
adc
inc
repz
push
ja
mov
outsb
stos
out
aam
mov
mov
dec
fldcw
dec
pusha
imul
pop
xor
mov
mov
xlat
cwtl
rcll
add
and
sub
idivl
pop
mov
icebp
inc
jmp
mov
inc
push
pop
roll
pop
push
mov
in
push
ret
stos
or
jecxz
xchg
jecxz
sbb
ss
leave
loop
jb
rcrb
hlt
fidivs
mov
test
push
lcall
add
ret
cmc
pop
cmpsl
inc
movsb
cltd
ja
lea
imul
int3
stos
jge
xor
or
mov
loopne
mov
imul
jp
jno
pop
and
pusha
movsb
sbb
stos
xor
push
testb
in
lds
subl
lret
lret
stos
push
or
adc
and
dec
enter
repz
cmp
sbb
mov
add
sbb
ret
test
mov
lds
add
shl
ret
dec
mov
jbe
adcl
int3
push
adc
mov
mov
jbe
or
xchg
add
outsl
pusha
mov
out
xchg
loop
mov
icebp
dec
sahf
aad
jo
push
adc
xchg
lret
and
mov
addr16
lods
cvttps2pi
out
xor
push
ljmp
inc
sub
xor
sbb
nop
lret
lea
or
push
jne
mov
inc
sarb
jbe
xchg
mov
cmc
cmp
shrl
in
subb
or
mov
ss
xchg
insb
out
outsl
pop
xchg
into
inc
or
test
sbb
int
ss
mov
fisttpl
cltd
repz
xor
push
xor
int3
ficompl
xor
add
sub
lds
dec
cmpsb
jo
aaa
das
ret
std
mov
inc
mov
pop
mov
mov
dec
testb
shl
jae
xor
inc
test
in
pop
idiv
shlb
push
stos
shlb
sbb
jmp
scas
sub
adc
jnp
int
push
out
inc
mov
pusha
into
sub
out
jae
loope
inc
stc
ljmp
sub
mov
inc
scas
ljmp
enter
in
sub
sbb
test
add
pop
hlt
push
mov
loop
add
mov
push
adc
pushf
jp
mov
int3
adc
imul
mov
cmp
dec
xor
and
test
inc
not
outsl
and
clc
mov
adc
xchg
xchg
pop
int3
addb
stos
dec
mov
loop
movsl
sarb
push
pop
cltd
dec
ret
cld
lahf
aam
jge
ret
or
or
inc
int3
ljmp
rol
xchg
in
xor
mov
or
hlt
xor
push
cmc
insl
xchg
add
cs
and
dec
sub
mov
ss
enter
int
mov
mov
fdivl
cs
adc
xor
insb
lock
loopne
in
mov
cltd
pop
and
jbe
lret
loop
movsl
jns
and
and
sahf
fs
xchg
sti
xor
in
loopne
out
sub
fimull
push
out
xchg
sub
lds
or
and
sub
out
sbb
imul
and
mov
loope
add
cltd
push
jmp
pop
push
and
lret
sub
leave
mov
push
add
std
subb
out
fwait
idivb
dec
and
in
testl
xchg
mul
cmp
stos
mov
mov
pushf
pop
push
or
fcom
fldt
mov
jne
jle
int
mov
pushl
push
aas
inc
xor
rorb
xchg
add
mov
mov
xchg
adc
out
mov
rcrb
inc
pusha
xchg
enter
mov
inc
bound
pop
loop
push
out
inc
popf
xlat
jle
fdivrs
in
sbb
js
stc
xchg
mov
cmpsb
mov
enter
pop
js
cwtl
inc
out
or
add
icebp
and
out
sti
add
xchg
notb
dec
js
roll
das
inc
lods
add
or
push
fstpl
pop
jle
fdiv
out
xlat
push
mov
leave
xchg
cs
loop
or
or
xchg
cmp
sbb
loopne
xor
insb
add
cld
pop
jg
pop
fwait
test
cltd
sbb
dec
clc
mov
cs
xor
xchg
add
dec
push
mov
lea
daa
sub
cmp
sbb
jno
fistl
pushf
das
bound
xorl
mov
scas
mov
xchg
pushf
inc
lods
mov
stc
mov
pop
adc
jmpw
js
dec
loop
add
xor
movl
add
push
jbe
xor
jae
enter
xor
adc
adc
mov
push
jecxz
and
lods
fwait
inc
xchg
and
mov
stos
out
pop
jmp
cmp
and
mov
mov
dec
lock
ds
add
test
add
pop
ja
add
insl
sub
fisttpll
sar
jb
xchg
mov
mov
jb
xor
xor
fwait
xchg
fsubs
xchg
lods
jmp
cmpsl
cmc
jp
lret
pop
enter
cmc
aad
jne
mov
movsl
sti
das
test
aaa
call
popa
and
call
dec
test
ja
push
mov
push
add
mov
lods
pop
aad
adc
sub
idivl
adc
push
push
sub
dec
cmp
adc
pop
jno
or
rcrb
lods
cli
stos
js
lret
jl
add
xor
push
xchg
fstpl
or
ret
sub
adc
jbe
mov
cmp
jmp
scas
push
mov
push
push
cmp
loope
addr16
sub
mov
dec
and
int3
sahf
cmpsb
or
inc
movsl
rcrl
aas
cmp
mov
push
cmp
mov
dec
adc
cld
inc
jp
stc
imul
outsl
mov
fistpll
fsubr
aad
add
inc
sbb
leave
xor
inc
stos
stos
mov
daa
jp
pop
int3
int3
loope
dec
add
or
in
das
iret
fs
xchg
es
scas
cmpsb
add
or
test
mov
in
inc
or
mov
int
jg
push
cmp
pop
xor
cmc
jae
mov
dec
loope
sbb
fistpl
or
test
rorb
mov
or
lods
jmp
aam
or
cmp
fnstsw
stos
sbb
lock
jle
jecxz
dec
es
rol
jnp
lcall
and
mov
cltd
scas
jmp
or
sub
cmp
popf
pop
mul
dec
mov
fdivs
fwait
mov
adcl
test
fwait
xor
rolb
sub
imul
lahf
mov
je
icebp
jle
mov
cmp
bound
mov
inc
add
lret
dec
mov
les
mov
inc
mov
pushf
pop
mov
xorl
into
fstps
adc
arpl
and
dec
scas
repz
pop
dec
adc
sbb
lret
pop
sbb
push
mov
imul
popf
enter
outsb
pop
lods
movsl
outsb
out
jl
and
mov
or
jge
jbe
mov
das
sub
sbb
stc
mov
xlat
lret
std
lds
dec
mov
adc
fildll
outsb
and
into
das
mov
dec
push
gs
out
movsl
sbb
movsb
jo
scas
cmp
negl
or
nop
adc
mov
subb
push
dec
test
dec
ret
sarl
aas
add
in
in
mov
mov
cmp
jg
mov
movsb
ljmp
pop
dec
xchg
mov
cmp
pop
lds
andb
jne
cmpsl
test
xchg
call
outsb
and
popa
mov
adc
notb
push
sub
gs
adc
in
loop
shr
push
jl
popf
rolb
cmp
pop
int
scas
or
mov
inc
pop
mov
sbb
int
std
push
and
cli
cmp
shrb
xlat
or
xchg
sub
xchg
lea
popa
mov
inc
mov
rolb
ja
mov
mov
out
insl
cmp
jne
jne
inc
insb
stc
cwtl
in
mov
mov
add
mov
movsl
jmp
mov
sbb
rclb
jno
iret
dec
pop
or
xchg
ljmp
scas
ja
imul
dec
mov
shrl
sbb
pop
scas
cld
xor
jnp
or
rclb
push
jmp
fisttps
pop
mov
cmp
fistpl
adc
mov
mov
jg
stos
mov
mov
inc
js
dec
push
sub
jg
push
mov
sahf
or
jo
mov
mov
push
rcrl
jno,pn
xchg
ret
mov
ljmp
dec
cli
cmpb
mov
lods
jae
cld
jle
sub
cli
testl
jl
scas
insl
pop
xchg
sub
jmp
adc
sbb
mov
rorl
sahf
or
cmpl
outsl
jg
je
mov
ja
push
mov
pop
cmp
stos
sbb
clc
les
xchg
and
or
pusha
fdivs
mov
outsl
xor
sub
movsb
jmp
xchg
fmuls
leave
sub
adc
adc
add
adc
loope
inc
loop
add
lods
pop
push
xchg
sub
adc
mov
cmp
push
in
lcall
xor
sub
mov
jnp
and
xor
push
cwtl
xchg
or
mov
pop
into
jl
push
mov
cmpsl
das
cmp
mov
fcompl
pop
bound
lret
cmpl
in
jb
fldenv
jbe
and
mov
xchg
inc
setle
mov
andl
adc
xchg
and
test
bound
and
jbe
stc
and
sarl
lcall
cmp
ds
mov
sub
lret
sub
jns
push
xchg
cwtl
adc
imul
and
dec
jmp
adc
movsl
xlat
cli
inc
push
lds
rclb
jle
push
es
mov
dec
sub
scas
jl
xchg
das
cmpsl
shufps
sub
mov
or
jnp
std
push
into
cltd
cwtl
mov
inc
xor
pop
sti
pop
dec
test
jns
mov
cmp
fldl
popa
mov
repnz
hlt
and
inc
pop
insb
push
jmp
jnp
mov
clc
mov
jne
and
sub
fucomip
dec
add
push
dec
pop
mov
push
sarb
cli
je
mov
jle
xchg
xchg
jb
andps
lds
sbb
cli
add
jge
push
jne
pop
insb
imul
je
mov
in
and
or
fnsave
outsb
jae
das
out
pop
dec
ja
rolb
inc
mov
add
je
xchg
pop
mov
fwait
mov
adc
dec
lahf
dec
loope
inc
pusha
adc
add
xchg
nop
out
jmp
hlt
xor
sahf
addr16
xor
jns
shrb
jp
test
or
add
mov
inc
jo
push
jp
insl
out
xor
outsl
push
xlat
scas
loope
fwait
push
clc
jno
lahf
xlat
std
dec
movsl
dec
inc
mov
pop
cmp
inc
jne
arpl
jo
sbb
outsl
push
push
ss
enter
and
stc
lret
repz
test
mov
adc
hlt
pushf
lods
dec
push
cmpsb
ss
imul
enter
lods
or
js
test
jo
fs
cld
xchg
dec
roll
lds
jne
xor
stos
mov
sub
out
addb
je
add
dec
dec
xchg
leave
repz
adc
aaa
cmpsl
jno
pop
mov
scas
ret
pop
sub
scas
or
lret
gs
mov
movsl
push
testb
add
movsl
loopne
push
insl
jg
fcoms
rcr
cli
les
sahf
adc
push
lock
das
lcall
pop
mov
loop
inc
xor
lds
pop
jbe
ds
jae
adc
mov
xchg
bound
icebp
mov
bound
in
sti
fbstp
push
enter
and
cmpsl
les
xor
mov
shrb
push
stos
sti
dec
sbb
or
shll
pop
jmp
les
jecxz
int3
xor
lods
and
xchg
xor
loopne
xor
outsb
rol
sbb
cld
rcrb
push
pusha
jecxz
scas
int3
stos
jno
jo
jmp
out
daa
movsl
pop
fisubl
pop
jne
lret
aas
mov
cmpsb
mov
ret
pop
cmp
dec
call
pop
and
push
addl
iret
and
pop
mov
imul
fiadds
inc
sub
arpl
not
mov
xor
cmp
inc
mov
add
les
sbb
ss
out
inc
sub
or
outsb
cwtl
outsb
mov
dec
jg
pop
or
rcrl
pop
ret
xor
dec
xchg
xor
mov
outsb
dec
cmpsl
jmp
and
xchg
mov
or
sahf
gs
insl
loop
mov
ret
xchg
rorb
push
cmpsb
mov
cmp
aaa
jge
xor
aas
stos
stos
das
push
popa
or
push
bound
sti
push
add
sub
mov
leave
pusha
nop
xor
push
rcrb
sbb
push
or
lcall
loope
mov
mov
repz
aad
imul
pop
lret
push
popf
int3
movb
js
xor
mov
in
arpl
jae
mov
stos
test
mov
sbb
xchg
cmp
int3
cmp
popf
int
adc
adc
dec
mov
out
out
xchg
push
pop
push
sbb
sbb
loope
mov
sbb
ds
and
enter
inc
fsubl
out
test
dec
je
mov
mov
fptan
jp
popf
sub
shll
out
arpl
sbb
adcl
push
cmp
stos
addw
fidivs
cmp
add
mov
fwait
sub
dec
jb
cmpsb
movsl
shlb
inc
outsl
enter
sti
mov
adc
mov
in
roll
dec
loopne
sub
iret
sub
in
or
mov
adc
fadds
test
xor
es
dec
lgs
mov
jne
aad
jne
in
sub
adc
dec
rolb
cmp
popa
lods
sub
dec
gs
mov
movsb
add
movsl
ret
pop
mov
adc
std
jmp
hlt
scas
shll
jle
pushf
cmpb
movsb
xchg
mov
sbb
stos
std
stos
or
lahf
push
jmp
mov
inc
jl
or
loopne
dec
cmp
cmp
push
inc
cld
loopne
stos
int3
fsts
jbe
je
lea
add
outsb
xor
jl
jno
sbb
push
dec
lcall
sbb
int3
mov
push
jg
out
sbb
out
cmp
mov
pop
test
xchg
fstpt
testb
clc
mov
cmpsb
adc
mov
test
fstpl
ficoms
mov
out
addr16
rorl
fisubrl
push
cld
sbb
cli
add
out
inc
adc
pop
fs
inc
outsb
cmp
or
fwait
outsl
ljmp
inc
enter
jl
cld
jno
or
mov
lret
pushf
pusha
cmp
xchg
sub
lods
bound
test
pop
sbb
out
add
nop
lods
bound
add
lret
or
mov
gs
xchg
scas
cwtl
enter
jne
xchg
dec
popl
xor
push
or
mov
aam
movsl
imul
das
dec
adc
idivl
adc
or
sbb
cmp
movsb
inc
jae
inc
lret
std
jo
mov
jge
lock
shll
mov
xchg
cmc
sub
push
dec
mov
call
cwtl
shlb
cmp
cmp
jnp
mov
dec
pop
adc
or
scas
in
lret
es
pushf
mov
stos
cld
dec
sub
daa
xlat
mov
std
fsubl
mov
lret
jbe
loope
mov
xchg
pop
jl
cs
addl
out
cmp
rol
in
xor
push
mov
repnz
push
stos
stos
mov
daa
in
sti
popf
out
in
cmp
jg
cwtl
in
mov
mov
cli
push
inc
add
push
add
sbb
push
inc
xor
dec
xor
dec
je
adc
cmpb
add
and
mov
adc
or
cmp
fildll
cmc
aam
sti
push
adc
and
imul
xor
idiv
jge
inc
das
fsubs
jbe
add
inc
in
pop
imul
inc
test
outsb
and
mov
clc
das
push
sbb
mov
sbb
sub
mov
cwtl
sbb
push
lret
inc
movsb
jb
inc
push
and
pop
jbe
js
sbb
push
adc
and
test
push
dec
jle
cld
push
or
enter
or
out
idivl
je
clc
pop
dec
shll
shll
movsb
inc
mov
mov
add
scas
jg
icebp
fdivs
push
sub
ljmp
test
push
sbb
jg
hlt
push
out
pop
stc
clc
xor
jns
mov
aam
jle
adc
mov
adc
ret
pop
andb
push
mov
pop
notl
in
xchg
pop
xchg
sbb
dec
mov
jns
outsb
sub
subl
add
imul
pop
add
fwait
ret
jecxz
jno
mov
aam
paddw
cmc
sbb
xor
cld
scas
xor
scas
test
jmp
cmp
cmp
and
jmp
fdivrl
sbb
outsl
mov
rcl
sbb
repz
jecxz
jle
icebp
cmc
mov
fistps
mov
jae
mov
cwtl
jno
les
jno
push
popa
and
pushl
scas
push
xlat
call
xchg
mov
xchg
xor
sbb
stos
sub
push
ret
std
mov
iret
scas
push
int
int
fs
test
add
adc
sahf
mov
leave
fnstenv
mov
jo
loop
pop
dec
scas
movsb
mov
pop
sbb
loop
mov
popa
cmp
dec
or
in
std
mov
xorl
sub
jmp
cmp
fsubrp
rolb
inc
jae
lods
mov
into
mov
mull
test
push
dec
popl
ret
movl
sub
das
xor
int3
rol
cmc
aam
lods
add
xor
adc
test
test
popl
push
add
xchg
mov
daa
mov
xor
add
and
je
sbb
icebp
or
insb
jl
mov
clc
push
in
jecxz
push
stos
mov
pushf
xlat
jb
mov
lock
pop
xchg
out
fcmove
xor
sar
push
lcall
push
adc
outsb
insb
daa
cli
mulb
mov
pop
nop
int3
dec
dec
jb
dec
mov
in
xor
fs
popf
cmpl
xchg
cmp
mov
test
out
les
in
ret
xor
loop
fwait
add
lret
mov
int3
aas
pop
clc
outsl
inc
xchg
fsubrs
push
out
mov
mov
clc
rcll
dec
pop
test
and
fdivs
inc
in
iret
shrb
sahf
dec
adcl
jmp
lret
mov
mov
xchg
mov
push
cwtl
out
shl
adc
test
cmp
lret
push
loop
into
stos
test
loopne
xchg
outsl
pushf
dec
push
fisubl
add
cmpsb
sbb
sub
mov
out
lock
cmp
mov
inc
adc
out
jae
imul
sub
cmpl
mov
cwtl
aas
xor
mov
scas
sbb
adc
inc
mov
inc
hlt
push
leave
mov
inc
fists
push
lahf
jle
pushf
mov
fsubrs
inc
test
sbb
mov
fsts
mov
or
mov
shrl
andb
fldcw
cld
imul
jb
jb
test
ret
inc
adc
cmp
das
les
xchg
adc
daa
adc
adc
inc
aam
jne
outsl
jno
lock
pop
lds
mov
adc
push
sub
popf
fwait
cmp
dec
imul
testl
in
cmp
dec
mov
cmpsb
mov
dec
inc
xor
add
dec
les
dec
ret
lods
jbe
sbb
cmp
xchg
xchg
jl
pop
ret
pop
leave
mov
lock
push
xchg
inc
leave
mov
pop
mov
mov
repnz
inc
mov
lock
xor
fsubp
mov
cli
dec
imull
sbb
xchg
fwait
or
push
jno
push
xchg
insl
mov
push
xchg
rolb
mov
mov
mov
loop
adc
mov
repz
cltd
xchg
je
and
and
dec
push
mov
fcomps
adc
aam
or
lds
lods
mov
lahf
xor
dec
or
xchg
fbld
fstl
aaa
repnz
sti
je
arpl
in
mov
lock
call
jnp
mov
jb
and
es
add
adc
push
repnz
aaa
aad
imul
jle
out
xor
sub
fxch
jbe
dec
movl
orb
cmp
fisubrl
and
inc
ret
leave
pop
and
cmp
es
pop
mov
mul
mov
sti
dec
jg
aam
mov
lds
sarb
jnp
jbe
sti
xchg
movsl
lock
cmp
jns
sbb
push
mov
jecxz
icebp
imul
outsb
mov
mov
hlt
shll
inc
setle
out
sahf
ljmp
fnsave
lods
mov
aam
lret
shrb
subb
mov
rorl
pop
and
mov
sub
mov
and
pop
divb
sarl
xchg
das
and
imul
ss
stc
lea
rclb
jnp
or
int3
loopne
mov
test
jb
call
cmp
fistpl
pop
mov
les
xchg
cltd
pusha
mov
xor
lock
dec
pop
mov
ret
push
in
mov
roll
push
xor
cmpb
sub
aas
call
mov
arpl
cmp
ficoml
push
or
sbb
fstpt
xor
pop
data16
jne
and
test
orl
lea
mov
or
in
dec
cmc
rclb
test
stos
lret
add
cmp
jbe
xchg
xchg
inc
jg
mov
cs
mov
jl
cmp
shll
jnp
mov
or
xchg
ret
dec
scas
adc
test
daa
int
jno
mov
outsl
addr16
int3
addr16
inc
sahf
xchg
sbb
repnz
cmp
out
or
cmp
push
xchg
andb
test
adc
add
mov
pop
int
or
iret
enter
dec
add
push
pop
pop
mov
fsubs
adc
es
xchg
incl
mov
aas
xchg
out
divb
jns
sbb
pop
arpl
inc
inc
fidivrl
cwtl
mov
bound
add
in
xchg
sahf
cmp
adc
push
jns
jmp
mov
or
mov
jo
sub
or
imul
repnz
rol
mov
scas
arpl
sti
stos
mov
dec
aad
push
add
xchg
pop
pop
mov
loop
fldl
xlat
push
cmp
out
inc
ret
lea
outsl
push
xorl
shll
int3
jl
loopne
jecxz
int
call
lds
imul
mov
rcrb
cmp
enter
dec
fs
fldcw
out
pop
jl
call
shlb
rolb
cmp
cwtl
lods
test
int
or
jnp
mov
movups
jne
pop
and
mov
lcall
mov
mov
mov
dec
lret
gs
cmc
enter
and
jg
jge
and
in
sahf
sbb
mov
ja
addr16
mov
adc
xchg
outsl
push
out
push
xlat
inc
sbb
pop
rcl
mov
leave
out
sbb
or
pop
adc
pop
jg
sbb
xor
pop
pop
xor
movsb
push
dec
mov
adc
inc
jmp
push
mov
xchg
sub
mov
dec
scas
in
inc
movsl
push
pop
addl
inc
ja
dec
and
das
popa
push
imul
push
jae
test
sbb
dec
or
enter
adc
rep
les
sub
jl
push
lcall
pusha
sub
jae
ss
push
cmpb
addr16
rol
das
and
jo
jae
popf
outsb
jecxz
sub
pop
sub
in
stos
add
leave
jnp
xlat
and
sbb
inc
test
mov
daa
divb
mov
nop
jmp
mov
cmp
jg
cmpsb
dec
or
inc
lea
mov
gs
nop
and
fcmovnu
jle
cwtl
sub
mov
out
mov
jae
add
mov
nop
repz
inc
xor
push
jb
mov
and
fisubrl
fwait
loopnew
call
adc
inc
pop
popa
lock
lds
loop
and
or
pop
outsb
andl
sub
leave
jo
xor
add
push
push
inc
sbb
aam
mov
cmc
push
xchg
sbb
xchg
mov
dec
lods
xchg
mov
or
xor
cmc
push
push
jbe
notb
adc
mov
sub
inc
xlat
nop
mov
xor
addr16
in
pop
push
das
jne
sahf
rcll
jo
enter
icebp
mov
icebp
scas
mov
xchg
xor
in
int3
leave
aaa
or
outsb
int3
and
fiaddl
jp
btc
sub
push
loop
mov
and
xchg
adc
gs
add
ja
cmp
fs
es
std
test
mov
sub
adc
daa
and
push
cmp
movl
jecxz
inc
ret
ret
cmp
mov
sahf
xchg
dec
in
aad
mov
dec
arpl
push
jg
inc
sub
pop
insb
pop
inc
rorb
aas
push
sub
fwait
cli
push
loop
loopne
in
mov
cmpsb
fninit
shl
inc
mov
and
sti
rorb
lock
dec
push
ja
imul
adc
add
nop
and
mov
or
mov
inc
std
add
mov
lods
dec
aam
sub
mov
insb
inc
sti
insl
mov
jo
lds
sub
sbb
cmp
mov
jne
bound
daa
mov
lret
xorb
lret
mov
loop
jp
or
pop
push
jae
movsl
inc
vunpcklps
push
xchg
sub
or
repz
ljmp
xchg
mov
or
cmp
mov
es
les
insl
jg
fmull
jl
push
push
xor
outsl
out
pop
loope
fwait
mov
sub
inc
fists
dec
mov
cmp
ds
in
dec
in
and
pop
adc
imul
sub
fldl
loop
dec
xor
inc
dec
pop
fs
cli
push
cltd
call
scas
mov
sbbl
adc
vmovdqa
adc
xor
fnstenv
movsl
push
lcall
cmc
mov
mov
adc
cmc
negl
movsb
xor
out
or
or
incb
lcall
or
int3
sbb
xchg
xor
mov
xor
rcll
or
jo
jae
lcall
mov
outsb
sbbl
ror
pop
std
inc
mov
les
sbb
adc
aam
mov
mov
xorb
fldcw
add
and
jnp
test
mov
out
mov
push
jb
stos
push
adc
sub
jge
lock
inc
imul
sarl
mov
jecxz
or
in
test
imul
xchg
aam
fdivs
repz
pop
jmp
test
sti
aad
xor
mov
lret
mov
notl
xchg
pop
adc
enter
mov
call
daa
xchg
xlat
sub
mov
push
mov
sbb
outsl
jno
push
iret
fldcw
add
jge
inc
scas
das
mov
in
int3
ret
mov
je
inc
mov
and
imul
adc
sub
jg
lds
clc
repnz
lahf
pop
add
add
inc
cmc
fs
mov
in
mov
push
xchg
push
aam
clc
fidivs
cmp
inc
xchg
xor
popf
jle
out
arpl
lahf
mov
jecxz
xchg
jae
lcall
cmp
xchg
pop
out
jno
scas
pop
das
fbld
iret
shrb
jno
test
push
data16
scas
dec
or
push
sbb
pop
fs
adc
stos
mov
bound
adc
push
mov
xchg
fbld
xchg
jae
xchg
pushf
leave
imul
aaa
int3
sub
push
sub
inc
add
cmp
jmp
shl
push
sbb
insl
nop
pop
insl
jae
pop
push
cmpsl
add
sbb
outsb
shrb
jecxz
scas
dec
sarb
fdivs
in
add
rcrb
into
shll
push
pusha
shrb
popf
xchg
add
mov
sbb
shl
jns
dec
adc
in
aaa
scas
add
testb
push
jg
push
aam
pop
call
jno
stos
nop
test
mov
jno
lret
jmp
lea
fsubs
jnp
fsubr
add
mov
in
test
cwtl
adc
dec
and
jb
push
push
loope
outsb
aaa
dec
dec
lahf
push
das
dec
push
mulb
and
or
dec
mov
loopne
cmp
jnp
testl
push
add
add
jae
cmp
fcoml
push
icebp
loop
fadds
imul
cld
insl
test
dec
in
push
inc
cmpsb
cmp
nop
shr
lds
lods
jae
mov
xchg
repnz
jo
into
adc
lock
andb
or
sbb
in
mov
mov
sahf
ja
pop
pop
push
push
jno
jecxz
and
sub
mov
or
xchg
sbb
cmp
jae
mov
jl
dec
aam
in
pusha
xchg
je
mov
into
xchg
filds
test
addr16
in
scas
aad
mov
in
aam
das
mov
popa
inc
fcompl
sbb
fidivs
call
imul
push
jmp
nop
mov
jl
xchg
data16
shlb
imul
push
xor
sub
jns
adc
sahf
mov
loopne
in
insl
lock
imul
addb
cs
xorl
repz
cmp
psubd
cmp
lods
movl
sub
adc
fiadds
xchg
jg
jb
ds
inc
cmpl
and
or
sbb
dec
cmpsb
outsb
mov
cmc
pop
lret
rcll
cld
addb
fwait
inc
call
mov
int3
mov
xchg
sbb
outsl
js
cmp
jg
ds
xchg
pop
aaa
shr
push
push
push
mov
jnp
pop
cs
sbb
stos
and
xchg
add
jg
lds
mov
imul
ror
or
add
in
aaa
mov
testb
fstps
outsb
popf
xlat
add
test
adc
mov
enter
hlt
pop
insl
mov
mov
sub
mov
aas
jno
enter
cmp
rcrb
inc
push
adc
adc
xchg
pusha
mov
into
lcall
xchg
nop
outsl
jbe
dec
outsl
sub
je
cmc
repnz
ja
stos
sub
mov
add
adc
mov
and
cli
cli
sbb
mov
in
imul
cmp
sbb
inc
stos
or
mov
daa
dec
idivb
jg
js
inc
cs
xlat
ficoms
les
dec
and
fsubp
push
cltd
mov
ret
mov
cld
shlb
adc
mov
push
sbb
pop
sub
mov
ja
mov
push
push
pop
lods
cmpl
scas
pop
mov
test
push
les
mov
xor
dec
into
xchg
inc
out
daa
inc
sahf
mov
or
xlat
je
outsb
cmpl
movl
repnz
pop
into
mov
rorl
push
adcl
and
or
loopne
jne
adc
cld
lds
ds
xchg
jg
lcall
push
or
notb
jecxz
pusha
push
sti
mov
sarl
xor
outsb
lea
outsb
mov
add
and
pop
push
int
in
call
repnz
imul
dec
add
and
movsb
pop
fs
push
test
lcall
pushf
xchg
movb
fldt
mov
lock
dec
xchg
mov
add
scas
mov
les
sub
mov
out
lock
es
lods
mov
push
cwtl
test
cmpsl
mov
shl
cmp
mov
int
out
addr16
in
fsubrp
out
ror
ss
sar
sbb
pop
and
sbbl
inc
enter
leave
outsb
jge
ret
call
adc
lret
cwtl
in
mov
in
or
push
les
fsub
jmp
test
aam
jns
xor
inc
ja
imul
inc
cmc
ret
das
lods
sarb
push
icebp
mov
ret
add
lret
loope
aaa
rcll
test
cmp
push
jle
xchg
gs
or
push
adc
subb
test
nop
adc
test
je
xchg
or
loop
jl
mov
hlt
pop
lcall
xor
dec
push
cmp
lods
insb
cmp
push
out
jae
xchg
ljmp
jbe
xchg
mov
or
jnp
pop
mov
outsl
les
xchg
rcrl
sarl
jge
jnp
xor
add
pop
cld
pop
shrb
data16
or
in
arpl
dec
mov
in
stos
in
lods
mov
aad
rolb
out
shlb
mov
push
and
mov
xchg
mov
sbb
xchg
inc
les
addr16
shlb
dec
mov
mov
jge
pop
iret
das
imulb
sub
adc
or
out
lahf
pop
popa
out
add
sahf
cld
jmp
std
mov
sbb
jg
xor
test
mov
test
xchg
loope
adc
je
cmpsl
shrl
out
mov
sbbl
mov
pop
and
movsb
or
mov
mov
ja
lea
shll
shrl
add
das
push
rcll
arpl
dec
adc
cmc
dec
insb
jnp
adc
rol
jp
jns
cmpsb
mov
pop
jp
nop
loop
push
dec
xlat
cli
pop
cmp
fwait
subb
add
jne
inc
call
into
dec
jae
adc
and
data16
lea
out
dec
mov
sbb
mov
inc
jecxz
push
aad
jmp
mov
and
subb
sbb
xor
dec
and
cmp
xchg
test
mov
fs
or
test
cwtl
adc
sbb
mov
jns
lods
push
or
sub
aad
lahf
std
mov
cmp
sti
lret
pop
push
inc
mov
cltd
ret
in
imul
mov
mov
scas
pop
add
pushf
add
jmp
ret
jmp
dec
dec
pop
das
in
pushl
push
sbb
push
jmp
mov
gs
push
and
push
push
popf
dec
inc
pusha
les
add
scas
sbb
iret
std
sbb
sbb
popf
xchg
add
add
dec
lds
jbe
mov
shrb
cmp
stc
xchg
lret
cmc
and
mov
shll
inc
or
inc
rsm
xor
nop
xchg
mov
movsl
jns
inc
dec
xor
sub
sub
push
jl
loop
push
fucomi
jne
pusha
lock
cmp
nop
fiadds
xchg
and
cltd
repz
xor
loope
fxch
cli
inc
popf
clc
scas
pusha
popa
jnp
pop
push
mov
in
popa
jno
mov
jbe
push
hlt
js
cwtl
push
push
adc
js
lock
movsb
sub
push
push
jge
testb
ret
cmc
movsb
push
outsb
outsb
mov
jno
xor
dec
shlb
pop
ret
add
lret
mov
nop
pop
aad
adc
out
jnp
js
imul
mov
adc
jl
sub
xchg
outsl
and
ret
dec
mov
loope
call
lds
lahf
cld
shlb
es
popf
nop
push
arpl
jecxz
push
scas
mov
daa
outsl
pop
les
push
add
pop
stc
cmp
add
ds
mov
add
push
adc
push
jnp
aaa
pop
movsl
sbbl
fnstcw
pop
add
call
out
add
sbb
xor
lret
lret
test
nop
pop
jnp
sti
pop
mov
sarl
pop
js
inc
int3
add
cmp
and
adc
adc
ret
lods
or
outsb
mov
pop
pop
adc
push
jb
stos
push
and
mov
andl
mov
jbe
out
rorb
jno
inc
sbb
cmpsl
xor
mov
and
push
mov
cmp
in
fsubl
mov
mov
pop
mov
lret
mov
add
shrl
xchg
stos
mov
jle
imul
xor
jb
xchg
lea
movsl
or
mov
or
and
add
inc
or
sbb
scas
push
test
outsb
xor
outsl
pop
cs
xor
cmp
ret
add
je
lea
mov
imulb
int3
push
ja
or
pop
cmp
pop
mov
cli
or
jge
mov
add
adc
incl
sti
lcall
in
push
xchg
add
xor
dec
or
test
jp
mov
es
stc
addr16
fistl
int3
sahf
dec
jb
aas
push
sbb
push
or
ja
adc
fimull
and
gs
popf
js
dec
shll
arpl
and
mov
mov
in
clc
xor
fwait
mov
jmp
adc
stos
fs
push
dec
inc
mov
movsl
or
cmpsl
in
test
xorl
cs
ljmp
pop
mov
adc
jnp
jmp
push
cmp
cmp
xor
dec
push
lods
pop
or
jae
pop
out
lds
mov
mov
jo
or
push
lds
imul
inc
scas
adc
sbb
out
icebp
pop
sti
sub
mov
imul
gs
sbb
sti
testl
in
test
inc
pushf
cs
inc
icebp
insb
mov
gs
add
dec
jmp
leave
pushl
mov
mov
xor
or
mov
icebp
aas
jo
in
int
mov
andnps
mov
js
push
xor
fisttpl
adc
jb
sub
lods
inc
pushf
jns
movsl
fnsave
ret
cmc
dec
not
mov
jnp
mov
lea
bound
sbb
jge
mov
cld
mov
push
std
les
or
sbb
dec
lods
mov
jbe
mov
sbb
rcl
dec
fldenv
mov
mov
and
cmpsl
pop
cs
imul
stos
and
test
in
jge
gs
aaa
iret
inc
mov
sub
mov
fcoml
or
inc
or
enter
ja
loop
xor
jg
stos
outsl
mov
xchg
pop
cmpsl
int
push
orb
dec
push
std
aad
sbb
and
fcmovb
cli
ljmp
adc
pop
cmp
adcb
call
sarl
push
xchg
cld
sub
ja
sub
pushf
scas
add
xchg
arpl
xchg
xchg
dec
pop
cmp
push
clc
sbb
sbb
mov
or
rcr
stc
and
subl
xchg
add
loopne
mov
imul
mov
mov
ret
jmp
xchg
loope
insb
bswap
adc
inc
pop
cmpsb
fisubl
in
adc
xchg
jecxz
and
enter
add
insb
sub
mov
mov
mov
js
adc
pop
xchg
push
mov
jns
sub
aaa
jl
lahf
cmc
sub
ss
push
xor
sbb
int
fdivp
das
pop
daa
insb
test
mov
movsl
in
adc
inc
xchg
jae
sbb
dec
mov
cli
inc
mov
vblendmpd
cltd
das
xlat
fidivrs
xor
insl
jmp
idiv
lods
or
push
out
add
shll
or
jmp
aaa
jecxz
nop
mov
sbb
and
fs
jae
mov
out
push
mov
fnstcw
lock
mul
push
adcl
add
mov
mov
jno
sub
lahf
jae
out
into
stos
xchg
fnstenv
push
push
ret
mov
stos
cmp
pop
cmc
pop
push
std
imul
cmp
test
or
adc
push
repnz
je
dec
jno
out
out
xor
shrb
daa
jle
push
or
push
jne
sub
and
pop
lcall
mov
inc
push
push
adc
pop
pop
out
pop
push
movsl
cmp
xor
dec
or
or
aam
out
sbb
loope
sub
dec
stos
add
add
push
shlb
je
adc
das
ljmp
pop
sbb
aas
bound
psrlw
fs
or
fadds
or
cmp
cmp
inc
test
cld
mov
xchg
scas
mov
pusha
imul
xchg
adc
fcmovnu
push
test
mov
sub
or
inc
jl
add
ss
pop
pop
shrl
sbb
cmp
push
dec
mov
sub
and
cmp
int3
or
push
aas
inc
mov
xchg
pop
les
and
jmp
leave
cmpsl
mov
imul
pop
imul
mov
negb
sbb
pop
out
popf
loop
bound
mov
mov
in
pop
mov
mov
mov
cltd
hlt
out
fs
scas
xor
push
jns
push
pop
or
adc
xchg
and
mov
push
xor
mov
xchg
and
cmp
daa
mov
repz
test
fsubs
jbe
add
pop
out
daa
ficomps
iret
cmp
mov
push
mov
sar
add
loop
or
out
and
aaa
in
lret
lods
outsb
adc
xor
mov
loop
sbb
rcr
ret
test
outsl
aad
lea
xchg
inc
pop
adc
adc
sub
hlt
push
adc
mov
or
jg
movsb
fildl
fmulp
adc
movsb
fisttpll
jge
rolb
ficoml
arpl
push
sub
add
repnz
mov
pop
adc
sbb
add
jle
orl
stc
jbe
mov
inc
lret
adc
dec
imul
mov
lods
int
mov
jns
cmp
and
push
xchg
mov
sub
inc
adcb
jmpw
mov
inc
lahf
adc
fs
pop
jno
std
jmp
add
sbb
add
jns
xchg
push
dec
jne
mov
lcall
xchg
mov
lods
loopne
mov
mov
cmp
arpl
jno
sahf
xchg
pushf
out
lock
hlt
into
and
or
sub
out
sub
fs
daa
popa
jne
add
jmp
inc
call
mov
sbb
fidivs
ret
in
stos
mov
imulb
and
lahf
imul
push
sub
movsl
and
test
mov
loopne
aas
xor
xlat
mov
int3
adc
xor
ja
inc
movsb
stos
rcrl
xor
shrb
dec
fwait
dec
xorl
lds
mov
aaa
je
ret
or
and
mov
dec
jo
das
fisttps
inc
icebp
inc
xchg
fiadds
jae
fsubr
icebp
cwtl
or
sub
dec
and
mov
push
mov
pop
and
jmp
mov
pop
sub
hlt
mov
sub
add
adc
daa
cltd
xor
cmpsl
sahf
add
ja
test
jo
xor
push
fisubs
pop
jl
mov
mov
inc
arpl
movsl
xchg
inc
mov
jl
in
clc
fbld
mov
insb
xorb
or
mov
jge
je
int
or
inc
add
add
shld
out
pop
psadbw
or
test
lods
xchg
stos
mov
imul
add
push
jo
sbb
mov
adc
int
mov
sbbl
dec
jns
pop
push
pop
fsts
add
popa
mov
addr16
lret
sub
mov
test
push
jmp
dec
fsubrl
ds
dec
ja
cltd
in
cmpsb
dec
mov
call
rcl
or
addr16
leave
cwtl
testl
sub
inc
cmp
jb
sahf
repz
sub
aas
push
aam
mov
lcall
add
gs
xchg
int
adc
jo
push
jmp
pop
nop
jo
mov
aad
test
jae
dec
fs
jl
iret
mov
enter
js
inc
popa
mov
and
sar
dec
std
cmp
in
mov
xchg
and
aas
aas
lcall
push
rep
inc
jmp
inc
add
mov
add
aaa
inc
push
cmp
fcmovnb
cltd
pop
int3
pop
mov
mov
out
sbb
nop
and
sbb
push
add
out
sti
and
test
es
xchg
inc
xchg
in
xchg
xor
ret
cld
jnp
add
push
lcall
std
pop
fildl
jge
test
push
daa
adc
gs
pop
call
mov
outsl
cld
pop
imul
pop
fidivs
or
lret
push
pop
mov
mov
push
sarb
repnz
pop
leave
pop
jb
adcb
in
repz
xlat
or
scas
xchg
mov
insb
daa
push
in
push
push
sbb
sbb
jg
stos
fstl
cmp
mov
int
push
add
add
push
push
or
ljmp
pop
xor
add
loopne
xchg
inc
push
imul
push
sti
inc
jp
ss
mov
mov
mov
adc
nop
cs
dec
sub
jne
cmp
icebp
dec
jmp
push
repz
mov
and
mov
adc
xchg
cltd
mov
cs
adcb
aam
test
mov
pop
adc
xchg
aad
push
or
sub
daa
pop
xchg
loope
dec
jbe
sub
mov
and
ja
adc
sbb
out
jp
xchg
xchg
cs
cmp
adc
push
jmp
ss
pop
loope
repnz
pop
lods
xlat
mov
jge
add
out
dec
fwait
stos
cld
sbb
ja
pop
in
push
jg
repz
xlat
sbb
add
mov
xor
cmc
mov
add
addb
outsl
imul
adc
dec
mov
cld
aad
inc
and
cmpsl
adc
scas
mov
jecxz
lock
sub
bound
ss
push
sbb
out
outsb
inc
mov
mov
and
pop
in
adc
adc
xchg
rolb
pop
or
int
xchg
bound
mov
push
or
mov
push
jns
inc
faddl
xor
sub
les
les
insb
inc
jo
cmp
sbb
orl
sarl
pop
lcall
xor
mov
outsb
cmc
xchg
test
arpl
sahf
mov
rcl
nop
sub
sahf
loop
bound
push
incb
ss
mov
mov
lods
xchg
cli
test
addr16
cmpsl
push
sbbb
mov
add
stos
dec
mul
inc
mov
test
pop
cmp
xchg
imul
fmull
imul
ss
out
sub
push
jno
push
icebp
xchg
orb
mov
sbb
xchg
les
adc
clc
cmp
lret
in
pop
add
iret
xor
pop
or
das
std
enter
push
fwait
inc
popf
push
push
stos
dec
or
mov
cltd
xor
repnz
cwtl
mov
and
mov
mov
das
push
xchg
les
loop
xchg
psubsb
fcomi
add
sub
pop
jl
out
dec
mov
lods
mov
xor
add
cmpl
push
test
add
pusha
cmc
and
mov
cmp
mov
in
fidivs
cmp
aas
cmpsl
or
mov
cltd
push
ret
lea
mov
jle
mov
jmp
enter
jns
pop
testl
insb
sub
and
jg
es
xchg
loop
enter
sbb
test
jae
aaa
lock
out
out
lods
mov
lret
bound
mov
mov
pop
andl
popa
dec
xchg
and
and
add
cli
jae
cmpsb
rcrl
add
jge
xor
push
cs
add
hlt
dec
cmp
push
js
sub
lock
jno
jne
jo
mov
and
dec
inc
mov
cmpsl
das
cs
or
cmp
mov
mov
pop
cmp
je
push
gs
pop
imul
cmc
jecxz
out
add
push
xor
xor
xor
sub
pop
lods
mul
dec
sbb
cmp
xlat
mov
jmp
jle
roll
sub
pop
or
dec
xor
cmp
icebp
xor
mov
clc
jle
dec
pop
es
cmp
bound
sbb
mov
mov
xchg
xlat
or
jl
inc
xchg
jmp
dec
in
mov
out
mov
aaa
and
sbb
mov
and
jno
insl
jge
and
or
fsubs
scas
lcall
cmpl
jb
mov
ljmp
push
and
loopne
jmp
test
imul
sbb
inc
enter
push
mov
adc
jo
daa
jne,pt
gs
stos
xchg
dec
divb
imul
inc
dec
int
inc
push
inc
sbb
cld
cltd
loope
sahf
test
ja
loopne
push
aad
mov
das
lret
outsl
sbb
dec
stc
addr16
pop
lret
fs
jbe
mov
test
js
insb
inc
mov
sub
les
xchg
jl
jmp
mov
jge
add
out
cmp
push
dec
jnp
push
mov
int3
leave
popf
mov
sub
pop
lret
inc
mov
mov
test
ja
divb
cwtl
ret
pop
xchg
jnp
stc
cmp
movsl
jae
pop
enter
mov
sub
out
add
jns
adc
pop
jmp
jmp
adc
lods
lcall
push
loopne
idiv
cli
inc
inc
outsb
ficomps
into
jmp
jae
push
mov
push
imul
shll
inc
ss
xlat
dec
jbe
clc
or
loopne
fildll
sarb
xchg
ret
rclb
push
repz
add
testl
sti
leave
out
cld
das
inc
xchg
mov
cmpsb
addr16
out
push
push
aad
adc
cmp
or
sub
inc
mov
addr16
andl
lret
shrl
jb
xchg
mov
scas
daa
add
rcrb
or
loope
mov
xchg
es
mov
out
mov
cmp
add
jne
imul
lods
pusha
icebp
xor
sbb
push
adc
sub
insl
andb
jne
movsb
push
test
rdpmc
lock
mov
mov
add
sbb
push
jo
push
hlt
mov
jnp
incb
int
repz
add
adc
shrl
mov
icebp
add
xor
insb
popa
hlt
jmp
test
ss
push
shll
pop
icebp
lahf
es
test
jmp
into
jmp
mov
addr16
pop
and
push
ljmp
cmp
icebp
popa
stc
lcall
ss
jp
mov
dec
mov
jb
xchg
out
and
add
incb
dec
repnz
push
dec
dec
fisttpl
mov
fnsave
cmp
xor
out
mov
or
cmpsl
rorb
add
sbbl
movsl
shll
std
test
mov
fbstp
xchg
std
jl
mov
sub
push
jnp
fwait
popf
pop
outsb
cltd
test
imul
pop
xor
rorb
pop
mov
lods
mov
mov
mov
adc
pop
cmp
mov
pop
test
push
idivl
iret
ljmp
sbb
fmuls
cs
dec
out
outsb
jge
sbb
sbb
mov
cmp
dec
test
jae
mov
clc
push
pop
repz
cmp
sub
or
push
repnz
inc
sbb
out
xchg
xchg
and
push
pop
inc
in
test
sub
mov
push
pop
adc
and
and
jmp
sarb
add
pop
mov
push
xor
movsl
cltd
jmp
push
jg
lret
inc
mov
sbb
dec
repz
mov
popf
xor
xchg
mov
sbb
mov
jmp
push
push
stos
clc
insl
mov
cmpsb
pop
shrb
stos
xchg
std
je
cmp
mov
mov
or
dec
jbe
movsl
adc
out
pop
addr16
push
adc
test
mov
sub
pop
push
cs
push
fnstsw
or
cltd
aam
testl
sub
mov
lds
jg
or
mov
pop
lods
aad
and
mov
mov
call
and
lock
je
dec
insb
outsl
pop
sahf
dec
into
in
sbb
mov
push
cmp
fildl
inc
adc
adc
loope
popa
std
adc
add
xlat
cmp
adc
pop
or
rcll
fdivl
ret
lret
icebp
push
movsl
and
inc
inc
mov
into
dec
sbb
stc
mov
mov
pop
mov
jb
push
scas
in
jg
stos
test
ret
popa
pop
int3
or
cmpsb
xor
popf
pusha
insl
fcmovb
mov
aas
shrl
sub
dec
jbe
xor
push
dec
xor
xor
sub
ljmp
stc
test
int3
cld
sahf
pop
movsb
out
in
mov
icebp
fistl
popa
push
iret
pop
sbb
push
cmp
ss
repnz
or
pop
addl
out
nop
fstl
sahf
xchg
fstl
jne
mov
or
mov
or
loop
mov
mov
xchg
cltd
and
mov
jne
scas
cmp
loopne
aad
incl
add
rclb
fimuls
push
and
orl
inc
jns
cmp
pop
pop
incb
xor
mov
mov
mov
jle
and
jp
test
loopne
sub
lcall
mov
js
or
mov
rcll
xlat
jo
icebp
xchg
f2xm1
xor
repnz
insb
int
inc
jg
jb
adc
std
mov
subb
xor
push
leave
dec
addr16
jnp
out
fcomps
jb
adcl
push
cmpsl
mov
ret
jae
cmpsl
sub
add
fwait
and
ds
cmp
stos
xchg
add
in
and
pop
jbe
dec
daa
mov
adc
dec
pop
xchg
mov
jle
adc
fwait
jecxz
test
rcrb
cmp
xor
sub
mov
dec
loopne
inc
mov
mov
aad
mov
jno
pushf
enter
fcoms
rcrb
nop
mov
divb
int3
lcall
mov
jmp
cld
jp
mov
lods
adc
in
loopne
adc
das
loop
les
andl
icebp
jmp
mov
insl
sbb
lcall
imul
or
xor
xor
movsb
adc
loope
add
adc
sub
stc
aad
insl
cli
loop
sbb
shll
pop
add
cmpsl
mov
fldt
sbb
adc
test
faddl
mov
xor
cmp
ret
fcomps
adc
ljmp
faddl
mov
lods
push
mov
incl
mov
pop
lret
sub
cmc
shll
add
ficoml
neg
pushf
dec
cmp
outsl
lret
push
dec
jnp
mov
and
jae
or
pop
push
push
xchg
push
xor
fs
les
mov
mov
nop
push
mov
in
adc
pop
cmp
outsl
sbb
mov
xor
imul
add
loopne
loop
xor
inc
ret
pop
lcall
sbb
sub
xor
mov
push
sub
jnp
add
dec
jp
cmp
cli
outsb
les
rolb
repz
sub
cmc
daa
aaa
fmull
sub
mov
push
adc
iret
shrl
lahf
mov
pop
fs
sub
cmc
mov
fnstsw
std
adc
xchg
rol
xchg
sbb
loope
jge
pop
mov
inc
sar
cmp
fs
inc
mov
fistpl
mov
mov
mov
packssdw
ret
jno
test
fnstcw
mov
sti
iret
bound
cmp
xor
xchg
sub
in
mov
mov
xchg
adc
pop
xchg
into
cmp
xor
sbb
inc
int
clc
cwtl
flds
xrelease
jl
imul
xchg
stos
or
push
add
xchg
dec
push
iret
sbb
imul
dec
cmp
lret
rorb
fisubrl
inc
pop
xor
mov
jge
inc
cwtl
mov
jecxz
jns
lods
xchg
xchg
mov
into
fimull
cmp
adc
pop
out
in
lahf
push
ss
ljmp
addl
adc
xchg
jbe
insl
dec
ja
ret
aad
jae
inc
xor
flds
js
pusha
testl
cld
push
cmc
stos
leave
in
xor
icebp
push
rcl
xchg
sub
xor
sbb
js
mov
push
and
ja
or
dec
clc
sub
adc
cmp
lea
add
lahf
ljmp
and
inc
icebp
daa
mov
pop
inc
stc
mov
and
mov
movsl
scas
aam
adc
mov
sbb
flds
call
js
mov
repz
push
or
mov
cmc
test
sub
addl
sbb
cmp
clc
cltd
dec
mov
push
mov
sub
or
shll
aad
adc
adc
jl
inc
test
jp
add
lahf
scas
push
push
scas
jae
icebp
jb
mov
sti
adc
es
jge
sbb
mov
movsl
cmp
xchg
sbb
cmpsb
aad
into
jp
jne
sbb
loopne
mov
andb
scas
lret
fidivl
push
mov
add
cmc
cld
lea
repnz
sahf
jle
in
cmp
sbb
and
or
pop
sub
pop
stos
test
xchg
jo
adc
or
loopne
call
xor
aad
fistpll
sub
lds
mov
push
insb
jo
stos
mov
aad
lods
int
in
xor
mov
loopne
fdivl
sbb
test
testb
cmp
jns
push
xchg
popa
sub
iret
add
xchg
mov
xchg
inc
mov
jl
mov
inc
cltd
ss
jbe
js
mov
call
test
das
leave
mov
fwait
mov
icebp
test
adc
add
mov
push
or
imul
sbb
mov
mov
cmp
mov
je
push
mov
in
cmp
inc
lret
push
test
push
fistl
les
je
and
mov
dec
int
enter
push
rcll
in
std
sub
sbb
mov
cltd
rorb
imul
insb
insb
jo
test
pusha
xchg
rcrb
cmc
cmpsl
imul
sbb
jecxz
aam
popa
daa
cmp
les
movsl
push
clc
pop
mov
fistpl
jge
andb
add
bound
fmull
cs
cltd
xchg
fs
pushf
jo
btc
sub
or
xor
mov
cmp
out
sahf
std
sbb
mov
mov
push
rcl
out
jns
pushf
lods
mov
xorl
ret
lret
sbb
rcll
dec
jp
mov
js
aam
cli
test
movsb
subb
xchg
lock
and
inc
sub
sub
pop
aam
push
mov
in
out
notl
aad
sub
xor
xlat
into
mov
add
popa
out
pop
lods
rclb
inc
jo
dec
xor
ja
lcall
aam
sbb
in
icebp
or
pop
ret
stos
xchg
int3
ret
data16
bound
fdivrl
mov
jbe
std
insb
and
sbb
add
fisubs
repnz
lret
xchg
lret
push
repnz
into
or
mov
jmp
int
scas
jae
imul
sbb
insl
mov
mov
pop
jo
pop
insb
es
int
push
out
dec
pop
push
inc
push
pop
add
out
gs
push
scas
cmp
push
jecxz
push
cmp
aaa
adc
aad
lret
push
popf
popa
adc
cmp
pop
mov
stc
sub
cld
in
std
adc
aas
or
mov
pop
aad
adc
iret
xchg
xor
ds
mov
adc
mov
and
pop
insl
push
stos
inc
stos
iret
mov
popf
fadds
arpl
test
push
cmp
ds
mov
pop
icebp
les
jmp
inc
sub
pop
mov
stc
into
gs
in
and
dec
fsubp
leave
mov
pop
push
jecxz
fucomip
adc
adc
ret
push
mov
cmpb
insb
push
mov
xchg
mov
lds
jo
cld
ret
pop
sub
jle
push
imul
subb
in
adc
mov
test
lock
mov
imul
movsl
fcmovb
mov
or
or
mov
sub
iret
hlt
in
jmp
popf
sub
add
adc
mov
out
add
pusha
clc
adc
leave
adc
mov
jne
cmpsb
std
inc
mov
int
lods
mull
ror
stos
add
inc
les
ret
xchg
xor
movsl
sub
fsub
aaa
sub
jno
or
ror
mov
out
dec
jmp
andl
sbb
pop
sub
mov
adc
rcr
push
sub
jp
or
cwtl
idiv
pusha
mov
insl
pushf
aaa
push
inc
and
xlat
adc
cmp
mov
into
jae
dec
pop
stos
andl
push
inc
or
jb
xor
mov
xchg
ror
dec
roll
mov
dec
dec
adc
lret
std
sahf
inc
addr16
call
xor
test
jo
xacquire
jns
inc
jnp
xor
jl
and
push
jmp
aam
and
out
push
aad
imul
movsl
pop
fisubs
mov
and
sbb
in
icebp
adc
cmp
aam
gs
push
fsubl
push
and
pop
cmc
imul
divb
ret
xlat
cs
adc
data16
ss
or
adc
in
pop
and
dec
jl
sub
xor
jp
mov
jmp
test
popa
and
adc
mov
jl
inc
andl
mov
push
adc
mov
stos
jge
aas
adc
push
jb
cmp
push
jecxz
jbe
movl
adc
int
cmp
lods
fwait
ret
xor
lret
mov
sub
push
stos
sub
inc
imul
mov
into
repz
gs
jb
ret
shlb
fbstp
inc
adcb
cltd
jnp
mov
pop
mov
inc
fs
ljmp
sub
sub
leave
mov
pop
lock
mov
loope
mov
mov
ret
pop
cmp
cmp
adc
insb
add
outsl
ficoms
inc
movsb
xchg
push
test
xor
test
outsl
out
and
les
jmp
sub
ficoms
nop
ja
or
sub
test
fadd
push
scas
and
lahf
mov
adc
insb
shl
int3
out
jb
test
cmpsb
mov
mov
sbb
dec
inc
cmp
ds
das
pop
in
sbb
push
out
pop
js
sahf
push
dec
pop
ds
cmp
mov
xor
ds
adc
insl
add
pop
dec
and
popa
push
inc
lods
das
xlat
pushf
mov
popa
ljmp
sub
mov
sbb
jle
xlat
rcl
les
imul
sub
cmp
or
jno
sub
sbb
fdiv
mov
sbb
aad
cmpb
push
lods
pop
cmp
inc
sahf
pop
aaa
in
aas
or
outsb
mov
and
mov
dec
mov
fadds
mov
push
pushl
cmova
mov
pusha
push
aad
jno
jle
sub
imul
mov
or
jno
inc
cmpsl
jecxz
dec
repz
mov
scas
lahf
inc
inc
push
cmc
pop
mov
push
mov
xor
cmpb
in
or
mov
sub
lea
sbb
mov
sbb
add
mov
adc
clc
sub
cmpsb
sub
cmp
lock
ljmp
fcmovnbe
rorb
into
mov
mov
lcall
adc
jp
addl
xor
sub
outsl
clc
xor
push
xchg
push
cwtl
adc
cmp
jbe
fimull
cmp
dec
fcmovu
lock
shr
dec
addr16
sahf
in
inc
inc
jbe
mov
and
ljmp
mov
dec
cld
popf
add
ltr
sub
inc
or
in
jecxz
les
lods
pop
xchg
jnp
pusha
cmp
nop
jle
jnp
in
ds
adc
push
std
mov
adc
add
jle
aad
shr
out
adcl
sub
add
mov
int
inc
lcall
adc
jge
cmpsl
negb
or
icebp
ret
cmp
push
jle
pusha
rorl
sub
popf
xor
add
cmp
inc
loopne
dec
pop
pop
pop
addr16
xlat
in
dec
fnstcw
lods
and
clc
mov
test
aas
int3
adc
mov
test
sbb
cmp
add
push
push
push
and
insl
adc
dec
adc
incb
or
in
adc
int3
jbe
nop
dec
inc
xchg
lahf
jbe
loope
sbb
sbb
dec
lret
mov
outsb
mov
pop
mov
iret
out
aas
pop
divl
lret
mov
inc
ljmp
or
insl
or
neg
mov
std
arpl
dec
jno
iret
pop
in
popf
inc
test
push
jae
fistpl
dec
add
js
fisttpll
je
data16
adc
fists
pop
or
xchg
popf
data16
ds
xchg
and
cli
es
test
jg
mov
xchg
iret
xchg
andl
sbb
or
arpl
mov
and
hlt
and
pop
cmp
xlat
and
mov
mov
icebp
lahf
adc
pop
outsl
and
aas
and
sbb
or
or
and
add
adc
aam
push
inc
sub
call
pop
xchg
jp
and
cmpsb
out
push
mov
hlt
ret
outsl
das
jns
inc
arpl
push
adc
mov
jo
adc
insb
test
add
or
xchg
rcll
mov
mov
and
jle
mov
dec
popf
mov
push
cmp
push
test
shr
stc
push
xchg
dec
lds
inc
push
enter
call
outsl
push
fistps
imul
ret
jecxz
add
push
pop
dec
sub
xchg
jg
mov
mov
cmp
repnz
or
clc
cmp
aaa
out
imul
adc
cmpsb
hlt
xchg
mov
push
mov
or
leave
push
inc
mov
scas
shrl
insb
fs
sbb
aas
cs
xor
mov
mov
and
loopne
mov
jns
mov
mov
addr16
stc
sti
aad
dec
cmp
xchg
das
jge
shll
add
hlt
es
pop
lds
stc
mov
add
test
jb
loopne
inc
test
out
repz
faddl
call
sbb
popf
push
inc
or
ficoms
es
inc
push
pop
add
stos
out
imul
aad
xchg
into
cld
pusha
ret
pop
inc
nop
xchg
xor
push
enter
or
push
and
movsb
shlb
subb
ret
icebp
adc
xor
or
std
cmc
scas
xchg
test
outsl
dec
mov
int
adc
mov
outsb
and
test
ss
push
arpl
xchg
dec
mov
pop
add
mov
sbb
out
iret
xchg
and
xor
sbb
jecxz
scas
aam
mov
dec
cwtl
jl
iret
mov
or
std
cld
repnz
ljmp
movsb
enter
popa
cli
jecxz
cwtl
out
xor
sbb
add
fs
out
jae
fucomi
inc
insb
mov
sbb
addr16
clc
daa
jmp
ret
imul
pop
mov
pop
xor
push
jle
mov
mov
push
lods
jmp
sbb
movsb
movsb
mov
pop
add
mov
mov
arpl
lcall
mov
mov
cs
or
pop
mov
mov
sbb
outsl
mov
adc
mov
popl
sbb
adc
lds
iret
pop
test
shrb
xchg
lcall
pushf
lods
pop
aam
into
mov
pusha
mov
loop
shlb
ret
push
xchg
inc
cmpsb
pop
xchg
insb
subl
enter
cmp
repz
sbb
mov
call
into
in
ljmp
aad
push
int
inc
push
in
clc
adc
jo
ljmp
imul
sub
mov
xor
mov
sti
daa
dec
mov
pushf
das
or
clc
pop
mov
pushf
lea
rcr
subl
loopne
cmp
leave
dec
mov
in
lret
xchg
out
adc
insb
rorb
in
mov
pop
insb
push
mov
push
out
mov
mov
push
aas
xchg
jp
pop
inc
dec
push
adc
jmp
fisubs
decl
push
pop
push
fnstenv
xor
bound
mov
pop
mov
loope
rorb
pushf
push
mov
push
xchg
fisttps
xlat
stos
addb
push
test
bound
and
mov
mov
sub
test
gs
adc
mov
mov
pop
or
xor
les
cmp
je
ljmp
xchg
addr16
icebp
mov
pop
xchg
enter
daa
or
push
mov
push
loopne
call
xchg
fcmovnbe
xadd
sbb
insb
pop
mov
fistpl
add
push
stos
pop
cmp
mov
mov
push
mov
pop
in
test
in
shlb
and
xchg
xlat
mov
cwtl
dec
test
or
jnp
sbb
inc
push
sbb
or
sub
add
ret
xor
aad
push
sti
js
adc
pop
les
mov
loop
jae
dec
sahf
test
into
push
xchg
sbb
loop
sbb
ljmp
xor
sub
or
cld
movsb
aam
icebp
xchg
adc
imul
movsl
sti
adc
pop
stos
pop
testl
and
pushf
icebp
test
adc
ja,pt
mov
fs
cmp
mov
cmp
push
cmp
sbb
mov
ret
lods
sub
sbb
push
dec
test
cmp
cs
and
jecxz
inc
movsb
das
dec
pop
cmp
cmpsb
addb
cwtl
pop
and
insl
stos
mov
xor
mov
sbb
stos
mov
movsb
dec
das
sbb
inc
in
fists
aaa
add
inc
loopne
daa
clc
scas
push
insb
scas
fnstcw
cmc
mov
in
mov
mov
lock
dec
fdivrl
pop
push
je
xchg
in
out
inc
fldt
jge
dec
xchg
jno
mov
sub
mov
ss
mov
in
lods
nop
outsb
mov
lea
fistpl
in
in
adc
mov
das
in
adcl
mov
cmp
fcmovu
fdiv
push
dec
xchg
lahf
daa
iret
and
shll
cmp
pop
popf
dec
pop
insl
or
mov
push
stos
aad
inc
lret
mov
sti
adc
adcb
mov
dec
les
sub
orb
testl
or
mov
pop
pop
pop
jae
js
mov
push
dec
and
sub
addl
rcll
mov
dec
push
mov
dec
sti
and
xchg
adc
cmp
cmp
inc
divb
shll
iret
pop
fcoms
mov
fs
shrb
ret
jle
outsl
cmp
xor
cs
aad
xchg
xor
and
mov
cmp
pop
cwtl
cmp
sahf
out
or
mov
xchg
jl
roll
cmpsb
lcall
daa
xchg
or
jp
xchg
xor
add
xchg
scas
or
jb
roll
int3
cwtl
scas
dec
ret
cmpl
adc
das
or
inc
loope
push
ret
out
orb
hlt
sub
mov
jecxz
ficompl
jb
xor
and
push
dec
aaa
cld
cmpsb
outsl
repnz
sbb
aad
push
or
and
push
inc
les
arpl
mov
cltd
mov
sbb
out
popa
push
mov
cmove
jo
lods
cmpl
push
cmp
adc
pop
lea
stc
pop
lret
cmpsb
sti
sbb
dec
imul
or
les
dec
cmp
jmp
and
xchg
aam
sbb
sti
mov
mov
lahf
aad
and
outsl
leave
jp
stos
pop
sub
lods
push
data16
into
iret
out
dec
xchg
jl
andb
hlt
je
in
mov
aas
orb
pop
pusha
mov
push
mov
push
test
in
ss
mov
sbb
add
xor
dec
pop
loope
lret
cmp
mov
dec
dec
in
sbb
mov
dec
ss
or
mov
or
cltd
inc
cmp
pop
lcall
cmp
rol
fisubl
cmp
repz
outsb
add
mov
jno
push
pop
fcoml
mov
lods
push
jnp
or
addr16
add
out
out
repz
ret
addr16
pop
test
cmc
call
sub
mov
pusha
and
and
push
mov
loopne
addl
fidivs
adc
addl
insb
call
jb
sub
add
mov
and
pop
and
pop
mov
pushf
dec
ja
out
and
arpl
ljmp
cmp
cmp
and
out
sti
inc
cmp
jg
mov
or
inc
dec
js
call
inc
sub
jbe
xor
mov
add
inc
out
adc
sub
dec
outsb
pop
or
iret
jns
movntps
test
test
cmp
dec
aas
fcoms
xchg
inc
inc
lahf
mov
inc
push
pop
cld
pop
test
xchg
mov
in
cmp
adc
and
jg
addr16
mul
jp
or
inc
repz
fdivp
aas
sbb
pop
imul
and
push
jns
cmc
xchg
mov
dec
mov
enter
test
daa
pop
cmpsl
popf
test
push
sbb
push
adc
mov
clc
ret
mull
lret
xchg
xor
pop
out
icebp
cmp
lock
push
enter
ret
daa
sub
xor
leave
and
in
adc
stos
orl
ss
push
xchg
sahf
icebp
cmpsb
cmp
rorb
push
sub
push
cmp
scas
aas
push
es
jge
add
ret
lea
or
mov
in
push
dec
inc
andb
mov
jne
das
sub
arpl
sub
or
pop
push
ret
stos
nop
dec
bound
cs
lods
add
cwtl
loopne
call
mov
mov
inc
mov
arpl
hlt
sub
pushf
pop
ret
into
xor
stos
andb
jo
xor
dec
add
addr16
clc
mov
jno
jbe
sbb
dec
out
lahf
jns
push
dec
jl
xchg
ja
xchg
cld
dec
ret
popa
pop
push
std
imul
mov
cld
push
mov
pusha
mov
pop
xor
gs
pop
jecxz
lock
aas
popf
and
popaw
adc
mov
jmp
fmull
push
outsl
pop
out
add
pop
sub
ja
xor
jge
daa
fisubs
roll
fstpt
jecxz
outsb
test
mov
pop
outsl
inc
popf
mov
mov
fld
mov
pop
sbb
cmp
das
cmpsl
mov
xchg
sub
jl
sar
mulb
lods
xchg
xchg
mov
hlt
jnp
cwtl
cmp
outsb
cmp
scas
outsl
mov
leave
sub
or
loop
pop
sub
ret
mov
int3
movsb
loop
ret
adc
fucomip
hlt
scas
mov
icebp
jnp
fwait
test
pop
dec
cmp
sub
xor
jo
test
inc
lahf
jmp
ret
sti
push
cld
inc
stos
lock
dec
repnz
push
test
aam
cwtl
jb
adc
xchg
xor
insl
mov
ja
popa
and
dec
push
pop
inc
cmp
pop
nop
arpl
ret
jecxz
mov
sub
lods
rorl
jne
jno
jmp
lahf
xlat
or
cmpb
and
or
xor
imul
scas
das
and
xor
arpl
repz
sub
dec
add
popf
mov
mov
fistpll
sbb
loopne
pop
stc
out
cmc
fnsave
inc
loopne
and
das
pop
lods
xor
add
push
fistps
lods
scas
dec
fldln2
mov
mov
jl
jae
jns
inc
inc
ja
out
adcb
scas
imul
or
clc
xor
dec
cmp
aas
xchg
repz
cmp
js
repz
jb
les
push
dec
sub
cmp
or
repnz
cltd
enter
cltd
insl
in
xor
fidivl
imul
cld
popa
nop
add
lret
inc
into
ja
mov
xchg
jns
mov
mov
mov
ret
push
dec
pop
pop
imulb
jge
sbb
or
jns
push
jp
adc
jecxz
gs
lods
fs
loopne
inc
xor
shrl
pop
negb
sbb
into
mov
int
push
ss
inc
mov
inc
hlt
icebp
popa
push
xchg
in
test
jae
imul
xchg
push
inc
xchg
das
mov
cwtl
xchg
add
scas
iret
lret
sarb
ljmp
mov
or
cmp
mov
repz
in
mov
loop
adc
lahf
lret
mov
test
movsb
xchg
dec
cld
jecxz
xchg
test
mov
xchg
push
int3
aas
fwait
cmp
push
mov
xchg
enter
cltd
notb
leave
loopne
test
pushl
mov
push
cmp
dec
add
xchg
lods
push
int
aad
lret
add
rcrl
jecxz
xchg
xor
mov
addr16
test
bound
xorb
xor
add
out
ds
es
jae
cli
icebp
adc
negl
int3
fildll
sbb
mov
js
cmp
stc
pop
xor
mov
lods
neg
inc
pusha
mov
rorb
jle
mov
lock
stos
test
das
out
adc
int3
xor
mov
je
jle
xchg
and
adc
push
xor
nop
fisttps
test
push
ljmp
push
test
jo
in
push
jg
lcall
jae
jno
adc
jle
jmp
push
push
fdivs
mov
roll
aaa
int3
sahf
inc
sub
xor
sub
adc
push
jbe
push
push
sbb
sbb
jne
pop
scas
roll
iret
fndisi(8087
or
add
sbb
cmp
sbb
push
outsb
push
or
cmp
pop
aaa
fdivr
push
data16
push
mov
lret
ficompl
in
mov
xor
adc
lock
lods
pop
hlt
add
dec
push
jmp
fbstp
ret
lock
inc
cmp
fisubl
lret
mov
mov
inc
popf
pop
push
orl
das
jecxz
fwait
push
xchg
dec
cmp
out
rcll
cwtl
repz
movsb
rolb
out
jp
push
outsb
roll
movsb
cmp
push
or
adc
cmp
in
mov
jno
aas
inc
pop
sub
jb
addl
dec
pcmpgtd
xchg
and
add
jp
mov
inc
js
lock
lahf
push
iret
lds
hlt
sahf
jmp
mov
xchg
je
es
push
or
shrb
cmp
in
fwait
arpl
xor
ss
mov
in
inc
add
adc
clc
arpl
xor
out
and
dec
cmc
sbb
fsubrs
arpl
aas
mov
ja
mov
push
jg
mov
mull
loopne
adc
inc
and
fnstcw
popa
stos
mov
cmp
scas
mov
inc
jne
sbb
les
push
lahf
xor
cld
enter
inc
arpl
repnz
push
xchg
xchg
cli
or
js
bound
add
sbb
cmpsb
out
add
or
insb
aaa
and
imul
shr
clc
lock
add
add
push
mov
dec
sahf
or
mov
test
xorl
incl
dec
dec
lret
movsl
push
mov
xor
sub
popa
cmp
xor
jnp
fwait
ret
rorb
repnz
pop
sbb
jge
pusha
push
pop
add
sub
pop
mull
pop
shlb
in
add
push
adc
lods
xchg
xor
mov
paddsb
push
mov
dec
pop
bound
cmp
lods
dec
imul
or
int
inc
add
mov
mov
push
xlat
dec
icebp
lcall
loope
inc
or
aam
call
scas
mov
mov
fsubr
add
sbb
xchg
outsl
js
cltd
cs
push
push
lcall
jge
jbe,pn
lret
mov
adc
test
cmp
rcll
ret
cmove
das
repnz
and
push
mov
fisttps
adc
add
xlat
lret
rcrl
mov
pop
push
cld
mov
xor
jl
xchg
or
pop
and
stos
jbe
enter
jge
and
jno
pop
test
mov
and
ja
inc
xor
or
notb
pop
fistpl
push
xor
xchg
ja
and
xchg
in
jle
and
addr16
cmp
das
in
ja
inc
or
xchg
cmp
dec
mov
mov
adc
repnz
mov
jmpw
push
pop
sub
xchg
cld
fcompl
fildl
ficoml
fiadds
or
pushf
inc
xchg
out
call
push
and
push
pop
ljmp
int3
add
jae
xchg
ss
jecxz
xor
ljmp
push
subb
lds
aad
xor
sub
stc
push
ljmp
mov
ja
fidivrs
adc
data16
xchg
test
lods
pushl
jno
out
ja
lock
xor
in
in
fdivl
or
cmpsl
push
dec
fwait
pop
xor
test
sbb
pop
pop
or
lea
into
out
gs
pop
fprem1
ret
outsl
pop
setne
mov
cmc
int3
mov
mov
sub
cmp
dec
mov
popa
bound
sbb
mov
test
in
jle
inc
stos
pop
push
adc
icebp
cmp
cmp
cmc
push
lret
std
cli
divl
push
pop
dec
or
fisubl
xchg
fwait
outsl
dec
xchg
std
inc
push
sahf
jne
and
lea
xchg
call
iret
xor
mov
jb
mov
dec
jmp
inc
xchg
sub
fs
sub
jae
add
cmp
stos
repnz
jbe
or
loope
loopne
cmp
inc
inc
call
and
in
sub
in
inc
loop
xor
and
and
ss
cmc
test
xor
or
add
sub
cwtl
dec
adc
jl
shl
dec
jl
popf
xor
jo
or
add
jb
mov
jo
loop
dec
fisubrl
mov
inc
push
dec
cli
cmc
rorb
push
fldcw
in
fldt
jg
ret
insb
lahf
push
pop
inc
pop
or
push
out
pop
sub
repnz
repnz
shlb
push
xchg
pop
sub
sub
xor
sti
stc
sbb
call
or
push
mov
sbb
mov
movl
frstor
xor
pop
ja
dec
jecxz
sub
rcrl
cmp
fidivrs
xchg
and
sbb
or
loop
nop
jae
imulb
adc
cmpsl
rcrl
imul
sub
mov
add
xlat
outsb
lds
and
mov
pusha
add
xor
mov
mov
jle
dec
cld
call
add
loop
push
fs
xlat
and
and
cmc
push
dec
xor
pop
dec
or
test
add
out
sub
popf
insl
xor
shll
inc
lahf
push
arpl
and
lods
cmp
and
or
inc
pop
sahf
inc
xchg
repnz
mov
and
sahf
cmp
dec
rcr
mov
aas
xor
aam
roll
pop
adcl
mov
cs
push
adc
xchg
pop
enter
scas
push
fadd
icebp
testl
push
xor
insb
enter
int3
jle
inc
sub
or
leave
stos
xor
fs
mov
mov
roll
inc
cltd
fbld
and
and
addr16
fisttpll
adc
sahf
loopne
cwtl
xor
cmp
das
into
mov
fimull
fists
scas
sub
mov
aas
mov
mov
out
in
das
push
mov
push
pop
add
inc
pop
dec
push
and
bound
bound
push
xor
and
mov
xchg
popf
xchg
fnstsw
ret
out
sbb
jnp
rcr
aas
pop
mov
pop
or
stos
xchg
adc
shlb
hlt
dec
inc
pop
mov
push
repnz
push
testl
mov
jnp
sbb
and
cmpsl
std
imul
sahf
sbb
clc
or
scas
adc
mov
dec
outsl
jb
mov
insb
cmp
ret
mov
shll
dec
mov
mov
sbb
lods
fxch
dec
jecxz
jg
std
or
sbb
cmp
add
jl
jecxz
popa
xchg
outsb
stc
jno
mov
sbb
inc
fcoms
cmpsl
fbstp
imul
into
sub
sbb
test
fwait
popa
push
sub
adc
aad
cmp
fsts
pop
dec
xlat
xlat
test
test
cld
cmp
xor
jne
jnp
inc
andb
nop
js
jbe
lret
push
pop
cmpb
dec
lret
ss
loopne
jne
mov
adc
aad
outsb
push
dec
jmp
push
mov
into
lds
and
xchg
pop
mov
xor
jbe
fldenv
add
fildl
adc
nop
gs
sbb
and
inc
adcl
xor
inc
addr16
push
sub
cs
movsb
lea
dec
aad
cld
xor
push
int3
mov
movsl
icebp
cwtl
rolb
ljmp
std
cwtl
push
test
bound
fisubs
bound
dec
cmp
dec
mov
dec
and
jle
xor
arpl
ja
pop
xor
sub
dec
dec
pop
jnp
and
das
fnstenv
loope
adc
in
and
or
mov
sub
jp
and
adc
add
clc
inc
pop
dec
xchg
push
addb
movsb
jge
pop
adc
ss
int3
jae
into
outsl
adc
loopne
jnp
bound
cmpsl
cmp
cli
notl
ret
sbb
das
movsl
hlt
xlat
pop
mov
fdivr
add
in
pop
mov
fs
mov
xchg
gs
and
and
push
sbb
adc
cmp
push
jle
sbb
mov
xor
xchg
mov
mov
push
inc
inc
out
sub
inc
cmp
ds
dec
sub
mov
decb
adc
or
in
pusha
jb
out
lods
mov
fstpt
ja
sbb
push
dec
push
scas
xorl
xchg
cmp
dec
stos
adc
xor
cwtl
mov
loop
lahf
fimull
jecxz
in
pcmpeqd
in
sub
out
or
out
pop
dec
ja
cmp
xchg
fwait
mov
dec
xchg
dec
popa
ja
shll
fcmovu
jp
xchg
mov
sub
js
xchg
cmp
dec
xor
icebp
xchg
xor
fdivs
mov
fisubrl
dec
and
and
push
scas
push
jmp
insl
sbb
int
fnstcw
or
out
mov
mov
aam
scas
data16
inc
cmp
ss
testb
inc
out
mov
jg
mov
inc
shll
test
outsl
xor
and
hlt
dec
cmpsl
mov
jmp
fsubr
mov
js
ds
not
mov
pop
adc
jnp
orb
xor
aam
cmp
lods
xor
and
fiadds
sbb
fstl
je
mov
hlt
daa
xor
in
mov
repz
fnop
fldenv
lds
add
icebp
push
les
sti
in
mov
sbb
jnp
and
imul
dec
jg
fisubl
inc
orb
outsb
jmp
ror
push
push
lods
xchg
add
hlt
loopne
hlt
movsl
mov
dec
inc
sbb
mov
push
jecxz
jg
les
les
clc
mov
fwait
pop
es
xchg
mov
xchg
es
rolb
jmp
inc
add
push
test
in
add
jp
orl
imul
outsb
dec
or
cld
nop
out
jp
adc
mov
mov
mov
jecxz
mov
mov
xchg
or
jmp
aaa
addb
or
add
rcrb
xor
xchg
dec
jo
lcall
rcll
notb
cld
pop
mov
ret
xchg
pusha
inc
mov
sub
lock
mov
or
mov
cmp
mov
outsb
push
xor
xchg
push
sbb
cmc
std
loope
repnz
push
into
icebp
inc
scas
clc
daa
shrl
les
movsl
push
mov
mov
mov
orl
mov
insb
gs
cmpsb
leave
sbb
data16
sbb
loop
pop
js
add
inc
or
jecxz
jl
int3
enter
int
adc
arpl
inc
orb
loop
jno
iret
adc
test
jnp
adc
popf
mov
jnp
loop
jns
cmp
imul
data16
inc
in
aad
inc
cmpl
jl
stos
loop
push
in
cmpsb
nop
sbb
mov
dec
jmp
movsb
daa
xchg
in
lahf
cmp
ficomps
scas
push
shlb
je
cmp
xor
jns
cmp
out
dec
imul
sub
fsts
pusha
inc
rcrb
aad
and
das
addr16
testl
jp
lods
cmp
dec
push
enter
aam
inc
xor
hlt
add
xor
sbb
push
cmc
jp
ret
test
mov
subl
ja
adc
stc
push
pop
xlat
fimuls
pop
imull
sbb
inc
xchg
shl
fcmovu
in
cld
or
pop
les
into
pop
jbe
outsl
xchg
leave
pop
mov
add
pop
xchg
mov
cmpsl
xchg
insl
jno
fidivrs
dec
data16
gs
pusha
pmulhw
lret
ret
daa
js
clc
xor
fwait
cwtl
shll
cmpsb
mov
negb
or
xor
imul
xchg
test
push
fildl
mov
in
stc
dec
sbb
ds
xor
xchg
add
je
cmp
push
in
movsb
cmp
std
les
test
test
lds
jne
enter
iret
popa
xchg
pop
insb
leave
ljmp
jp
xor
jnp
out
cmp
hlt
rol
cmp
or
fstl
jo
repnz
push
jle
popl
push
or
rolb
sub
sar
jbe
divb
and
ljmp
scas
pop
push
sbbb
fstpl
mov
mov
test
les
mov
mov
adc
stc
mov
add
adc
or
and
mov
fwait
stos
dec
xor
or
inc
pop
mov
negl
stos
mov
fucomip
aas
insl
imul
mov
push
push
xor
je
aad
ja
out
into
inc
outsb
mov
imul
jb
mov
mov
and
dec
sub
stos
nop
jbe
jno
jns
xchg
push
or
insb
jno
push
xor
test
into
adc
dec
xor
fwait
xor
sub
pop
jg
sub
into
xor
sub
jo
sbb
add
push
mov
shll
mov
ja
xor
push
subl
adcl
popa
sbb
test
adc
mov
dec
cli
inc
jp
or
or
lret
daa
adc
push
cmp
in
pop
push
outsb
lret
and
dec
or
pop
mov
mov
push
push
jg
out
in
movsb
lods
out
sbb
pop
or
xor
jp
int3
xlat
lds
mov
push
inc
and
arpl
mov
roll
jae
pop
rclb
bnd
mov
pusha
insl
mov
push
cltd
xchg
jp
mov
mov
mov
sub
pop
and
js
mov
xchg
or
lods
pusha
fists
lret
enter
jbe
rorb
jo
jae
add
dec
daa
push
mov
out
jl
cmp
inc
mov
mov
xchg
jne
loop
or
mov
pop
out
into
dec
ss
js
dec
mov
sbb
mov
scas
lds
bound
and
lret
jg
fcoms
push
adc
xor
mov
inc
jp
into
inc
sub
push
mov
into
jbe
pop
and
mov
sbb
add
cli
inc
xor
rcl
lods
daa
mov
rcll
fisubrl
popf
xchg
stos
mov
dec
jae
cmp
int3
xchg
pop
out
push
adc
xchg
jmp
loopne
or
pop
jb
test
jle
sub
mov
mov
cmp
push
and
mov
jl
in
jb
mov
repz
pop
scas
icebp
mov
sub
inc
movsb
mov
inc
movq
mov
addr16
fs
mov
testl
std
add
cmp
cmp
adc
jecxz
fimuls
lock
std
icebp
stc
bound
push
adc
mov
cmp
lock
test
adc
xor
fnstenv
sbb
adc
adc
fcomps
sahf
rcrl
out
rcrl
enter
test
dec
inc
mov
jae
js
pop
sbb
ret
rcrb
call
int3
xor
loopne
je
jge
pop
and
incb
jae
jle
push
xor
xchg
pop
out
jo
push
jge
idivb
leave
mov
inc
inc
mov
mov
cltd
fsincos
push
pop
push
jno
pop
jne
pop
mov
jnp
inc
fdivl
popf
dec
shrb
pop
sub
jecxz
sub
xlat
sub
lods
push
adc
jbe
cmp
xchg
add
jle
cs
and
mov
cld
sub
sub
loope
cmp
mov
idivb
dec
jl
push
ljmp
rorb
jb
aam
xchg
xor
pusha
mov
icebp
or
inc
cmp
movsl
cmp
pop
loope
ret
push
push
movsb
jns
pop
pop
ror
ss
inc
inc
scas
xchg
inc
jae
pop
fistps
sub
testl
sub
pop
sub
jo
cmp
and
out
push
loope
and
in
int
rcr
imul
inc
sbb
test
sbb
add
aam
inc
xor
inc
jb
cmp
inc
add
enter
iret
sarl
je
jp
adc
shlb
popf
mov
pusha
sbbl
jnp
ret
mov
aam
lock
ja
and
out
mov
jnp
bound
loope
lahf
or
fadds
leave
insb
xor
ds
sbb
fcmovb
mov
imul
cmp
mov
pop
sbb
popa
sar
jbe
aas
enter
repz
aaa
push
lods
decl
push
movsl
fnstsw
jmp
or
jbe
cld
and
jb
aas
jno
mov
pop
sahf
mov
mov
cmp
adc
mov
pop
dec
lret
dec
xor
mov
sub
cmp
out
test
inc
pop
ljmp
adc
scas
mov
lods
inc
sarl
mov
inc
iret
inc
ds
add
and
mov
inc
mov
xchg
inc
mov
xor
push
add
push
insb
adc
shll
mov
xchg
ja
rorl
test
ljmp
loope
or
sbb
lock
in
scas
lock
xor
pop
mov
xor
sub
sbb
and
arpl
dec
xchg
xchg
decb
cmp
addr16
outsl
data16
je
push
loopne
jb
loope
inc
mov
pusha
sub
xchg
hlt
shrl
add
and
push
fidivl
imul
orl
xor
imul
bswap
sti
sbb
movsl
ficoms
or
gs
adc
pop
sub
dec
or
aad
lds
xchg
mov
add
dec
and
dec
int
mov
jecxz
adc
addb
xor
adc
arpl
sarl
cmp
lcall
push
mov
mov
sub
mov
je
mov
and
aaa
pop
xchg
js
jecxz
xchg
inc
jns
adc
mov
fsub
cmp
imul
stc
jnp
lock
sub
mov
or
bound
mov
mov
int3
bound
or
and
lock
sbb
jl
mov
jb
movsb
push
jle
fstpt
xorl
nop
je
xchg
in
ja
mov
mov
sarl
fadds
inc
shr
fstpl
pusha
or
cmp
daa
and
cmp
xchg
jl
add
test
outsb
xlat
movsb
dec
nop
daa
mov
testl
imul
sti
outsb
fs
negb
arpl
aad
arpl
mov
scas
mov
adc
cmp
shll
jnp
repz
out
fs
mov
je
mov
push
jp
scas
add
xchg
xchg
fcmovnb
cmp
roll
movsb
mov
push
ds
inc
scas
mov
call
adc
inc
cmp
inc
jb
xchg
xchg
ja
cltd
leave
popa
push
or
cwtl
push
cmp
xor
mov
fs
push
out
cmp
inc
or
add
std
movb
stc
sbb
or
mov
sbb
add
mov
push
ret
sub
insl
pop
lcall
lret
or
jmp
pushf
imul
fildl
stos
and
jb
mov
pop
adc
jae
adc
jb
fsubr
aam
sbb
xchg
int
push
jns
sbb
pop
loop
fldcw
xchg
cwtl
loopne
lahf
sub
int
or
daa
jge
test
clc
sub
adc
and
add
scas
mov
xor
imul
push
leave
insb
lods
lret
dec
cmpsb
rcl
ficoml
int
std
ja
cwtl
enter
in
test
pop
clts
add
fs
sub
push
mov
adc
sub
test
inc
mov
jg
dec
or
outsl
std
xchg
cmpsl
sarl
sub
dec
jecxz,pt
lret
xor
mov
addl
insb
sbb
jns
sub
loopne
dec
push
jo
lods
sti
inc
mov
sbbl
and
sbb
scas
mov
repnz
lods
fcom
das
test
cwtl
orl
pop
es
loop
inc
mov
imul
and
sub
mov
cmpsl
stc
inc
hlt
sub
jae
push
inc
inc
into
mov
sub
int
jl
repz
fbld
mov
in
jg
test
or
sbb
les
das
mov
pop
cmp
and
mov
scas
pop
insl
loopne
add
repnz
jmp
xchg
insb
fwait
icebp
cmp
mov
loope
js
je
or
nop
mov
sbb
fisubrl
dec
xchg
mov
out
stos
cltd
into
lea
repz
mov
cmpsb
mov
cmc
lods
cwtl
dec
adc
and
mov
or
pop
sub
cmp
cmpsb
xchg
xchg
in
pop
xlat
lret
jne
adc
cli
iret
add
outsl
jbe
and
xor
int3
dec
jne
or
lcall
inc
jae
and
push
pop
shlb
inc
dec
or
cli
xchg
pushf
lods
daa
into
std
fwait
push
cwtl
idivl
sbb
lret
dec
sub
adc
ljmp
cmpsl
mov
cmp
xchg
mov
les
add
sbb
xchg
scas
and
ljmp
push
push
inc
jmp
push
call
mov
push
sbb
divl
cs
and
lea
mov
fistpl
jno
lds
popa
aam
sbb
sub
icebp
mov
sbb
mov
movsb
push
mov
xlat
pop
cmp
cmp
sti
loop
push
add
push
mov
addr16
pushf
imul
hlt
push
mov
xchg
fidivl
mov
xchg
pop
jp
inc
into
das
aas
sbb
call
cwtl
fcomp
stos
test
push
jl
pop
sti
cmp
imulb
sahf
movsb
into
adc
xchg
push
xor
test
mov
xor
xor
mov
jg
test
inc
imul
jecxz
sub
adc
dec
mov
scas
xchg
jnp
sbb
push
loopne
inc
xchg
out
lds
inc
dec
movsb
leave
rcrl
test
loop
icebp
cmc
adc
adc
push
dec
or
outsb
cmc
xchg
stc
inc
iret
fildl
lds
lds
sahf
fcompl
outsl
movsl
scas
jecxz
addr16
xchg
pop
xchg
fistpl
in
sbb
jp
stc
insb
in
xchg
test
push
dec
cmp
movb
cmp
xchg
test
inc
and
shll
dec
add
xor
xchg
fidivs
adc
push
sarl
cltd
lahf
xchg
add
sbb
sub
mul
addr16
dec
push
mov
xor
cwtl
sarl
ljmp
cmpsb
cmp
imul
push
or
jo
sub
sub
nop
push
lock
fldcw
inc
stos
sub
movsb
xchg
cmp
inc
and
sahf
dec
or
xchg
testl
movsb
mov
mov
cwtl
push
mov
pop
or
push
pop
cmp
loope
jl
mov
fcomp
test
mov
xor
sbb
and
or
inc
test
mov
fwait
pushf
mov
ret
fldt
xchg
addr16
imul
jmp
stos
lret
scas
cmpsb
stc
mov
xor
nop
rcr
test
ss
imul
mov
in
popf
fsubs
ljmp
xor
xor
push
mov
jl
sub
rcrb
pop
jne
pop
mov
jmp
add
pushf
and
jo
clc
pop
fnstsw
sub
incl
cltd
add
or
jns
jno
filds
es
add
negb
fidivl
lock
mov
inc
stc
sbb
cltd
add
pushf
neg
les
pop
xchg
lea
outsb
mov
imul
add
lods
clc
insb
jp
ficomps
int3
call
mov
lds
mov
loop
aaa
in
push
dec
repz
fs
sbb
imul
je
sarl
mov
test
aaa
and
add
aam
je
add
popl
sbb
push
out
inc
jg
and
scas
clc
ret
fnstsw
pop
nop
pop
shl
xchg
sub
mov
repz
rcll
fwait
test
xchg
call
cmp
rcll
fwait
mov
pusha
inc
mov
inc
xor
fdivl
mov
aas
push
dec
sub
pop
mov
mov
sub
mov
test
insb
sub
cli
inc
shrl
stc
sbb
or
ljmp
dec
pop
ficoml
ja
inc
loop
repnz
xor
in
push
cmpsb
xchg
mov
jne
xor
inc
fmulp
mov
out
pop
sbb
clc
lcall
jle
dec
pushf
clts
push
scas
mov
int
jl
pop
hlt
clc
push
or
repz
test
imul
xchg
xor
add
repz
push
sub
sahf
out
add
jae
adc
out
dec
out
mov
pop
push
pop
push
add
stos
sbb
jmp
fwait
stc
popa
cmp
and
nop
mov
and
inc
push
inc
mov
xrelease
lods
add
jg
and
jnp
dec
jl
jb
xor
adc
jne
xlat
mov
pop
xor
push
jl
dec
dec
aad
inc
scas
mov
inc
cmp
stc
or
popa
cmpsb
aaa
mov
aam
mov
icebp
sbb
dec
std
test
mov
mov
adc
jle
in
fs
adc
nop
mov
xor
jb
inc
and
pop
push
dec
into
dec
jge
fsubrs
dec
sub
outsl
mov
mov
loope
inc
out
mov
pushf
lret
sbbb
mov
push
loop
fadds
jbe
jne
xor
sarl
lods
push
push
ss
inc
jecxz
pop
and
loopne
cmp
mov
out
adc
pop
adc
push
mov
pop
mov
stos
les
stc
xchg
scas
ljmp
dec
pop
cmp
call
leave
lds
dec
aas
sbb
je
loopne
jl
imul
ss
test
aad
jmp
das
arpl
xor
pop
xor
stc
push
int3
mov
mov
jmp
sbb
ret
rclb
mov
add
fsts
mulps
nop
addr16
daa
push
mov
sub
xlat
cs
xchg
add
and
test
sub
aam
mov
inc
hlt
add
shl
fistpl
or
push
add
icebp
mov
push
inc
pop
push
adc
xlat
xor
repz
jge
jns
cs
mov
xchg
cmc
test
imul
jge
jg
sub
in
push
adc
mov
loopne
mov
gs
xchg
and
or
std
pushf
loopne
fstl
mov
xchg
leave
mov
cmp
fsubrl
out
jno
pop
mov
insl
pop
ret
test
jge
pop
mov
lock
jb
pushf
jecxz
test
shr
jle
inc
adc
mov
enter
and
lahf
xor
push
cmpsl
cmp
push
test
mov
pushf
mov
bound
divb
and
stos
mov
lahf
add
shlb
sbb
jmp
ljmp
cli
sub
imul
repnz
orb
fdivl
jnp
sub
mov
add
es
mov
imul
aas
and
pop
mov
aaa
cmp
cmpsl
fs
mov
xchg
and
and
iret
lds
lods
jmp
fwait
stos
sbb
push
push
stos
hlt
pushf
rcll
cli
cmp
aaa
and
dec
or
test
push
pop
pop
dec
popf
pop
sbb
jle
mov
add
ficoms
mov
add
inc
push
mov
repz
in
gs
dec
add
mov
test
xchg
in
fwait
sub
loope
popa
hlt
push
cmpsl
mov
aaa
mov
ja
and
jbe
sbb
xchg
dec
fidivs
in
lock
jge
jno
test
imul
call
lea
mov
lret
pop
mov
es
jp
out
and
stos
mov
mov
cwtl
movsb
jl
mov
xchg
sbb
or
nop
pop
imul
or
add
push
xchg
cli
inc
fisubrs
jge
inc
call
insl
xchg
pusha
popa
cltd
xchg
inc
push
or
push
aad
leave
lods
add
sub
inc
xchg
add
mov
iret
fwait
loop
add
push
fwait
std
sub
loop
lock
or
add
bound
cld
fcomp
jno
lock
pop
xor
sbb
dec
and
data16
jne,pn
mov
mov
ss
mov
dec
sbb
mov
inc
sbb
add
adc
sub
jecxz
lret
cmp
mov
xchg
rcr
mov
outsb
pop
lds
sbb
cli
jns
cwtl
add
addr16
inc
xchg
xchg
jnp
or
xor
fdivs
mov
cmp
inc
mov
lcall
jno
out
hlt
dec
int3
icebp
jmp
fwait
jle
dec
mov
lcall
mov
or
lds
fcoml
push
pushf
fcompl
in
jg
lahf
ret
sti
in
inc
orb
xchg
imul
push
inc
jp
cmpsl
cmpb
push
movl
pop
cmp
pop
movsl
push
mov
addr16
movntq
daa
xchg
fs
pop
movsl
mov
add
fs
lcall
push
mov
es
sarb
adc
adc
jg
mov
sti
repz
pop
push
inc
inc
addr16
push
ret
dec
cltd
pop
in
xor
pop
pop
pushf
jge
enter
xchg
or
mov
lock
mov
std
mov
fmull
inc
mov
add
int
or
jo
clc
mov
es
int
out
add
inc
pushf
sub
pop
orl
fs
sahf
outsl
jnp
jmp
mov
int3
lods
lods
inc
repnz
fwait
cmp
sub
sub
or
sub
das
out
pop
inc
mov
scas
imul
xchg
rorb
dec
inc
not
sbb
jbe
push
repz
lds
add
inc
loop
adc
cmp
aas
push
aas
xor
lret
sbb
push
jno
fistpl
loopne
dec
adcl
test
add
jl
test
shlb
jo
js
sub
and
out
sub
push
sbb
fmul
pusha
adc
andl
inc
push
xchg
nop
xchg
mov
outsb
add
lods
std
dec
test
fisubl
bnd
mov
mov
aas
fldcw
xor
popa
mov
cmp
ds
jne
fistpl
test
dec
cmp
sarl
lcall
xor
test
pop
repnz
push
fildll
test
repnz
mov
push
and
pop
mov
stos
cmp
out
xor
ss
clc
mov
and
rcll
and
sub
mov
pop
xor
inc
in
and
inc
cmp
or
es
cmp
xlat
in
stc
push
ljmp
lcall
test
shll
mov
repz
sub
aaa
sbb
adc
test
mov
lret
lret
push
sub
sbb
rolb
or
or
movsb
push
adc
add
push
pushf
xor
adc
fmuls
imul
pop
adc
mov
inc
jb
cmpsl
pop
push
js
popa
mov
bound
inc
call
subb
popa
pop
jae
lods
mov
and
jbe
pop
inc
pop
jecxz
xchg
xchg
mov
sbb
xchg
pop
xchg
test
xchg
push
mov
sub
mov
pop
dec
pop
add
adc
arpl
ljmp
push
or
mov
hlt
jge
insb
mov
lea
jae
test
xchg
lret
mov
jl
inc
mov
adc
add
out
leave
jne
std
out
jl
test
add
aad
pop
push
inc
cmp
push
pop
push
shlb
inc
mov
jbe
cmpsl
data16
sbb
ljmp
pusha
add
inc
mov
mov
adcl
dec
mov
adcl
ljmp
lods
scas
adc
adcb
and
iret
mov
push
cmc
sub
ds
loop
test
imul
dec
cld
sbb
xchg
test
xor
into
lcall
cmpb
scas
outsb
add
std
dec
ret
dec
xchg
repz
fildll
push
xchg
ljmp
xchg
push
jnp
jp
bt
fildll
stos
dec
or
add
and
stos
dec
movsb
jmp
cmc
mov
repz
repz
dec
mov
popa
in
mov
xor
push
loop
push
insb
xor
or
outsl
cmp
cltd
pop
sub
fninit
sahf
pop
push
sbb
sbb
or
lret
mov
out
jp
or
scas
lea
sub
jne
dec
daa
dec
pop
inc
in
and
and
daa
xchg
or
mov
ds
mov
inc
enter
filds
sbb
push
fidivrs
xchg
and
cmc
clc
mov
mov
cmp
aad
pop
mov
hlt
enter
mov
cmp
insb
or
rcrb
push
loope
xor
js
leave
add
jl
add
mov
fistl
push
lock
out
int3
lds
lahf
loopne
jmp
push
rcll
adc
ljmp
and
aam
sbb
push
fmull
cs
clc
loope
push
pop
cmp
leave
pop
dec
pop
imul
imul
add
mov
mov
xlat
cmpsl
fs
jo
repnz
pop
lods
fsincos
lds
push
lcall
imul
scas
add
mov
mov
push
sbb
and
lock
adc
lods
in
xchg
pop
sub
orl
mov
int3
or
mov
pusha
inc
add
lret
cmpsb
push
dec
pop
sbb
test
jo
decb
mov
mov
cld
or
stos
out
pushf
lock
mov
add
jp
mov
inc
xchg
cs
scas
leave
repnz
in
xlat
into
and
lahf
neg
push
sub
mov
aad
and
das
in
sbb
jp
fimuls
xchg
mov
mov
movsb
das
mov
insl
repz
ljmp
fidivl
cwtl
aaa
mov
inc
sub
dec
pop
inc
xchg
push
jl
fidivl
push
sti
scas
jmp
inc
mov
or
je
lret
add
mov
sbb
popf
shll
or
leave
jns
push
fidivl
xchg
adc
addr16
jo
imul
push
dec
mov
icebp
sub
cli
mov
jp
jmp
loop
mov
and
cmp
cmp
and
pop
movsl
inc
xor
movsl
xor
inc
stos
clc
lds
push
push
fucomp
scas
xchg
sub
std
sti
and
adc
xor
fsubs
adc
aam
and
pop
and
and
sahf
repnz
sbb
sub
jmp
sbb
fiadds
xlat
mov
push
bound
push
adc
jae
dec
jns
iret
stos
inc
shl
imul
inc
jmp
lock
xchg
jbe
or
sub
ja
fisubs
das
std
stos
outsl
cmp
gs
cmp
fwait
xchg
lods
jcxz
shr
dec
pop
or
mov
je
or
sbb
inc
pop
cld
enter
cmp
add
xchg
adc
mov
xchg
xor
test
in
jl
je
push
mov
push
cmp
scas
sub
cmp
lds
mov
and
xchg
and
test
jo
sti
popa
mov
fimull
jae
or
jne
icebp
jnp
andb
js
lret
fs
aam
pushf
cmpsb
mov
leave
xchg
btl
jae
xchg
mov
gs
xchg
out
mov
pop
jno
ds
add
popf
aad
sbb
lock
addl
jle
and
push
sbb
add
cli
dec
fwait
loopne
cs
mov
or
imul
rclb
push
xor
push
aam
pushf
pushf
xorl
sub
xor
pop
xchg
insb
cli
call
loope
hlt
mov
cmp
in
shl
inc
mov
push
ss
icebp
mov
std
in
xchg
jno
jg
cmp
loope
sbb
adc
pushf
popa
sahf
sub
test
or
dec
jp
lret
fstpl
js
sarb
pop
mov
sbb
cmp
jmp
in
mov
int3
and
mov
jb
mov
jnp
shrl
scas
mov
or
sub
idivb
imul
cmpsl
into
mov
xor
push
add
push
xchg
xor
xchg
aas
push
add
aad
mov
out
xchg
repz
je
sub
xchg
pop
push
enter
add
push
test
xchg
cmp
dec
mov
pop
xor
xlat
jmp
inc
add
rcr
mov
jecxz
ss
pushf
out
out
addb
shrb
insl
aam
push
insb
and
fsts
ret
fmull
fnstcw
stos
pop
stc
adc
leave
pop
dec
xchg
int3
pop
sbb
inc
fldcw
push
cmpsb
and
dec
xchg
xchg
add
jo
punpcklbw
or
stos
jno
sbb
cmpsb
js
lods
jg
xchg
cmp
ret
xlat
xchg
adc
hlt
pop
js
shl
jno
inc
into
lods
fbstp
sbbb
aaa
sarb
add
xor
js
mov
mov
pop
dec
sub
lahf
push
fnsave
lods
xchg
dec
popf
je
mov
jnp
sub
cmp
mov
add
sbb
shlb
inc
mov
mov
jp
std
lahf
or
outsl
xchg
cmpsl
faddl
insb
and
in
lcall
call
cltd
and
jno
orl
sti
mov
mov
dec
clc
adc
out
stos
fidivrs
data16
push
mov
dec
inc
jne
inc
xor
aam
sbb
setg
pop
jnp
mov
cwtl
and
jb
dec
mov
jl
repnz
sbb
out
mov
or
lret
and
pop
pop
cmp
cmp
push
mov
std
xchg
mov
or
call
movsb
and
shr
pusha
adc
mov
add
mov
cmp
inc
call
orl
sbb
xor
and
and
mov
pop
dec
push
push
scas
mov
mov
shll
pusha
stos
loope
dec
out
lcall
sub
js
push
test
jno
cmp
adc
insb
xchg
cmp
xor
or
sub
test
lds
ljmp
mov
gs
pushf
rclb
cmp
jbe
jecxz
or
bound
mov
jno
mov
sarb
pushf
inc
sub
data16
fmul
adc
mov
sahf
in
sbb
sti
pop
pop
testb
inc
pop
mov
adcl
mov
mov
inc
stos
jle
sbb
sub
mov
jno
or
clc
loop
imul
cmc
outsb
das
dec
xor
xor
lcall
test
jecxz
into
cwtl
adc
das
std
jecxz
ficomps
cmp
lea
cmp
fdivl
cwtl
or
add
in
jge
fmull
iret
incb
mov
test
imulb
pop
push
pop
in
mov
test
adc
inc
nop
mov
push
negb
addl
pushl
xchg
fucomp
cmp
loopne
lods
inc
nop
xchg
pop
je
outsb
jmp
shrl
mov
add
mov
sbb
adc
sahf
mov
lcall
jg
test
int3
sbb
jmp
fisubs
push
fisubl
xlat
movl
in
bound
loop
lods
cmp
out
lcall
pop
sub
lods
add
scas
pop
mov
das
ret
test
sub
jl
dec
push
in
xchg
jnp
out
jae
jle
xlat
cmp
fists
and
in
out
repz
mov
pushf
ljmp
and
outsb
fdiv
dec
push
shrl
cmpsl
pop
repz
hlt
xchg
outsb
xlat
xor
jb
sti
loopne
pop
mov
stos
mov
or
sub
shrd
dec
dec
lods
inc
fsubrl
jge
add
jmp
stc
test
inc
addr16
push
jle
push
xor
sarb
cmp
cmp
sbb
mov
rorl
jle
pop
sbb
mov
pop
sbb
in
mov
pop
sti
jno
mov
int
in
mov
repz
mov
fwait
stos
stos
fimuls
ds
adc
adc
xor
test
in
nop
xor
stos
test
ror
mov
ljmp
pmullw
push
push
sub
or
sub
cs
xor
shll
and
out
inc
jae
cmp
and
mov
dec
cmpsb
lret
sahf
adc
inc
mov
outsl
fcompl
pushf
cmpsl
cwtl
sahf
adc
cmp
inc
sti
or
push
test
pop
cld
jp
fldcw
int3
repnz
mov
arpl
jl
hlt
jecxz
add
mov
test
push
lods
adc
jmp
aas
rclb
xor
xor
inc
mov
cmp
cwtl
xlat
ret
and
orl
shl
adc
dec
js
mov
mov
adcb
pop
clc
sahf
sub
out
inc
je
xor
or
testb
pop
ret
mov
cmpl
inc
out
ret
aam
jnp
dec
fldcw
dec
push
stc
test
jne
pop
mov
add
ficomps
inc
into
sbbb
mov
rcrb
mov
lret
out
iret
dec
sub
and
sub
mov
jmp
mov
inc
icebp
fstps
push
pcmpgtw
pop
aaa
add
dec
das
or
jg
fiaddl
adc
dec
mov
pop
mov
ret
sar
es
add
fwait
bound
and
popa
jo
mov
inc
sbb
test
xchg
mov
lcall
ret
or
sti
aam
sti
incl
mov
dec
add
dec
gs
lea
xor
jno
sub
int
fxam
ljmp
cltd
aam
fdivrl
and
inc
leave
push
dec
lods
int
and
lret
jge
sbb
outsb
push
cmp
mov
push
push
call
stos
dec
xor
inc
scas
stc
cmp
mov
fwait
bound
jnp
addr16
aaa
push
daa
dec
xlat
inc
dec
xlat
or
mov
cmp
add
cld
push
jl
ja
pushl
jno
clc
jg
imul
repz
adc
xor
add
fwait
jmp
mov
or
push
and
add
lds
iret
pop
sbb
jo
push
mov
aam
inc
cld
sbb
inc
imul
stos
in
dec
dec
mov
adc
cmp
ljmp
jno
imul
lods
fst
adc
pusha
data16
push
xchg
cmc
cmpsl
and
jnp
mov
jno
add
aad
mov
xor
adc
fidivrs
mov
inc
test
xchg
cmp
out
pop
xorb
jge
xchg
mov
je
insb
imul
sbb
pop
sbb
ret
and
inc
fwait
iret
xor
adc
scas
std
test
xchg
andb
sub
lock
dec
fs
push
push
fdiv
mov
mov
xchg
movsb
dec
enter
andb
push
push
lcall
push
insl
inc
lods
mov
pop
sarl
pop
pushf
sbb
es
mov
push
dec
mov
pop
push
mov
cmp
add
pusha
and
lahf
dec
out
cmp
into
xor
fimull
mov
adc
cli
push
pop
sub
mov
or
push
out
mov
rclb
or
mov
pop
imul
arpl
lret
mov
push
push
adc
sbb
and
pop
mov
sbb
addr16
inc
mov
inc
popa
aam
js
pop
jns
pop
enter
mov
mov
outsb
stos
fisubrs
push
ss
sarb
push
pushw
neg
or
jo
flds
lret
pop
mov
push
cli
push
movl
fildl
popf
push
imul
int
aam
cmp
test
inc
repz
repnz
dec
lds
jae
cmpsl
push
movsl
out
movsl
rclb
ljmp
cld
or
jl
fstps
in
pop
mov
shl
or
js
shl
pop
xchg
clc
or
dec
pop
rorl
xchg
mov
jb
pop
rcrl
xchg
push
out
pop
frstor
adc
test
in
mov
or
out
imul
test
sub
lods
faddp
jg
bound
sub
iret
jmp
outsl
ja
inc
mov
fstpt
nop
mov
sti
test
in
cmp
sbb
test
mov
push
outsb
stos
in
sbb
data16
jns
insl
imul
jp
xor
aas
movsb
fildll
loop
stos
jp
mov
cmp
rcll
ret
and
out
fs
pop
adc
xchg
push
lods
test
adc
pop
pop
mov
mov
outsb
cmpb
mov
fnstenv
mov
mov
in
cmp
scas
or
dec
out
xchg
pop
les
fld
cmp
push
lods
push
push
sub
loop
jecxz
push
sbb
xor
mov
mov
bound
cmp
pop
mov
push
cmpsb
cld
inc
bound
imul
lret
dec
xchg
mov
push
sub
rcrb
jnp
lcall
mov
bound
cld
fidivs
or
pop
jae
mov
or
xor
and
daa
js
or
lods
addr16
ja
call
adc
mov
cmp
shll
mov
nop
icebp
mov
loope
fiadds
icebp
cmp
xor
icebp
xchg
push
mov
mov
push
inc
inc
push
add
xor
xchg
inc
lods
sub
pushf
push
push
cmp
bound
mov
mov
rcll
push
fwait
rcrl
xchg
arpl
loope
imul
mov
ds
push
cmp
and
ds
in
sbb
jmp
or
adc
rcrl
lea
adc
adc
ja
pushf
daa
pop
call
fistl
sbb
mov
or
adc
mov
orl
and
inc
jnp
cli
pusha
jmp
mov
cltd
dec
mov
mov
adc
sub
push
shl
mov
fcoms
push
clc
mov
fwait
roll
inc
incl
fbstp
add
sub
in
sub
sub
pop
jp
lock
popl
mov
mov
mov
out
and
jl
or
cltd
imul
cwtl
xchg
xchg
fldln2
repz
pop
add
sahf
nop
jmp
imul
xchg
leave
setle
ds
lahf
data16
daa
inc
aam
jns
bound
mov
pop
sub
fcmovnb
inc
stc
sub
xchg
das
pop
mov
xchg
mov
popa
clc
push
scas
dec
sbb
inc
jbe
fisubrs
push
mov
dec
das
loope
adc
mov
and
mov
push
sub
ds
outsl
xchg
mov
outsb
jmp
fiaddl
xor
shrl
inc
cli
or
and
jo
pop
cld
sti
mov
adc
pop
dec
lods
mov
pop
pop
sbb
insl
fdivr
inc
outsl
mov
sbb
add
das
push
out
out
dec
inc
imulb
jg
xchg
add
mov
sub
in
shrl
mov
jnp
cmp
jo
cmp
out
loop
dec
lahf
je
js
in
dec
jl
ds
enter
and
mov
sub
addb
shrb
bound
call
test
cmc
mov
sbb
pop
pop
pop
jle
pop
cmpsb
cs
mov
push
icebp
mov
mov
rorl
ds
std
aas
mov
xor
and
hlt
xlat
aad
xchg
test
sbb
jle
lods
lcall
pop
lods
add
or
imul
aas
popa
lret
pop
or
mov
pop
xchg
push
cmp
arpl
push
adc
lods
lods
stc
test
cmpsb
adc
add
adc
fisubrl
cmpb
cmp
mov
in
jae
and
xor
or
in
xor
mov
jmp
mov
std
adc
xor
pusha
cmp
mov
cwtl
xlat
stos
scas
faddl
mov
and
lock
and
scas
xchg
mov
xchg
pop
cltd
or
jg
dec
jno
lret
enter
mov
leave
push
ret
sub
add
add
dec
push
cld
dec
pop
cmp
jecxz
add
inc
sbb
es
and
inc
inc
mov
decl
xchg
stos
adc
idivl
inc
jmp
dec
add
or
jns
call
int
rolb
xlat
cmpsb
outsb
mov
ror
test
jl
movsb
mov
push
or
pop
and
clc
sub
cmp
cmpsl
roll
je
insb
adc
test
inc
pop
hlt
icebp
sub
adc
xchg
aam
ja
cmpl
jle
add
adc
mov
not
sbb
aaa
jns
jmp
pusha
cld
out
sarb
jp
push
cld
or
fs
mov
mov
scas
out
addr16
and
testw
pushf
mov
mov
subl
sbb
adc
and
daa
lea
pusha
xchg
test
xchg
sbb
sbbl
je
stc
mov
out
push
cmpsb
rorl
int3
inc
pop
xor
push
sub
adc
xchg
outsb
pop
ds
pop
bound
aaa
push
sbb
cmp
sub
imul
push
aas
jecxz
mov
sbb
mov
lret
test
inc
outsb
sbbb
out
pop
adc
jnp
add
mov
jno
out
adc
jge
into
scas
jge
xchg
stos
sub
dec
fdivr
mov
lods
loope
or
inc
inc
mov
imul
push
mov
popa
pop
cwtl
jae
aam
cli
push
icebp
jo
mov
sar
dec
sbb
cli
dec
and
bound
scas
cltd
aas
fsubs
jbe
pop
popf
adc
ficomps
scas
pop
les
adc
fwait
mov
nop
fmull
or
xchg
adc
lods
fincstp
sub
popf
pop
ret
in
out
xchg
inc
jp
cmp
in
mov
shll
in
mov
movsl
movsl
mov
test
loop
mov
popa
sbb
pop
jne
inc
addr16
fbstp
popa
test
rorb
adc
loopne
inc
in
add
in
pop
sbb
jo
jbe
sub
jmp
in
add
lock
neg
clc
add
icebp
ficomps
movsl
jbe
or
sti
std
leave
mov
test
shrb
push
subl
fsubrl
cmpsl
push
xchg
mov
push
lods
dec
add
pop
mov
push
fdivp
loope
je
sahf
stc
dec
hlt
out
sub
std
xchg
nop
pop
mov
mov
ja
sub
push
rorl
jge
cwtl
xchg
push
insb
cwtl
iret
cmp
sub
adc
cwtl
adc
imul
xchg
jg
cs
cs
mov
mov
add
sub
movsl
mov
loope
gs
fdivs
outsb
cmpl
mov
ds
aam
mov
cli
pop
or
xchg
sti
dec
enter
xor
sub
pusha
lods
jp
push
mov
sbb
out
adc
mov
loope
dec
pop
outsl
les
int3
add
mov
and
enter
aam
dec
js
xchg
pop
pop
mov
insb
mov
xchg
test
insb
push
mov
fstps
shlb
mov
xchg
dec
out
cmc
test
push
pop
pop
adcl
notb
cmp
mov
or
test
sbb
lock
pop
rorb
pop
add
inc
enter
dec
mov
lea
les
std
push
adc
inc
data16
mov
mov
popa
mov
xchg
nop
test
test
xchg
mov
jb
cmp
pop
xchg
pop
cli
clc
lea
inc
imul
xchg
mov
fstl
sahf
dec
mov
hlt
push
cmp
adcb
mov
cmp
call
out
jg
fdivrl
mov
das
out
in
bound
inc
sbb
hlt
aas
clc
enter
lahf
xor
popf
jecxz
mov
pop
xchg
inc
cmp
xchg
cmc
stc
inc
sbb
leave
lock
and
xchg
sbbl
sbb
test
test
aad
js
fbstp
testl
jne
or
idivl
lahf
mov
mov
or
call
sub
mov
pop
icebp
icebp
push
dec
sub
popa
inc
jne
shlb
hlt
out
out
test
cli
in
mov
xchg
pop
inc
or
inc
out
ss
std
test
xor
jns
clc
pop
add
ljmp
clc
xlat
es
mov
repz
or
fcoml
fstl
inc
jecxz
xor
sub
in
ja
xor
xor
pop
js
nop
cltd
mov
jb
xchg
cmp
mov
pusha
jae
ss
mov
repnz
inc
in
or
mov
cwtl
int3
and
scas
test
mov
lods
cli
jo
pushf
popa
and
popf
sbb
pop
lods
stos
pop
je
js
add
jo
pushf
sarb
scas
jg
push
mov
adc
mov
movsb
mov
sub
ljmp
mov
je
stc
daa
movsb
dec
int
mov
int
mov
mov
add
popf
xor
paddw
sbbl
xchg
dec
fcmovne
enter
subb
dec
cmpsb
andb
mov
jl
movsb
gs
mov
sbbb
imul
inc
sbb
rol
push
scas
pop
lcall
aas
inc
test
xchg
or
jmp
outsl
mov
push
push
pop
adc
sub
js
pop
les
sbbl
sub
sub
int
mov
out
sahf
mov
lea
nop
pop
lcall
fisttpll
fldt
and
je
and
adc
push
insb
xchg
jnp
mov
jle
sub
jg
xor
in
cmpsl
cmc
pop
mov
mov
leave
das
and
je
and
mov
leave
testb
jl
adc
sub
insb
jae
jg
mov
mov
push
test
dec
ljmp
movsb
pop
subl
lret
scas
inc
adc
int
jns
push
mov
lret
repz
add
fisubrs
lcall
stos
push
mov
mov
movsb
and
sbb
flds
and
xchg
mov
scas
cmc
mov
push
ja
mov
push
fmul
or
lea
jg
std
adc
jl
cmp
xchg
in
es
add
ss
stos
ret
mov
push
lahf
xor
loopne
aaa
sti
fs
mov
xchg
cmpsb
jmp
cmp
or
daa
xchg
popl
push
cmp
jecxz
aaa
cmp
inc
fscale
sbb
pop
inc
sub
mov
mov
addb
mov
cwtl
fistpl
ljmp
dec
and
cmp
xor
xchg
in
ret
loop
jmp
dec
pusha
scas
sub
xchg
mov
call
and
pop
push
push
mov
pusha
pop
test
mov
sbb
cmc
mov
jg
dec
cld
into
mov
jle
jne
lret
sub
icebp
cmp
test
sub
jae
notb
sbb
ficoms
sub
ror
or
dec
push
mov
std
xchg
cmpsl
add
sbb
inc
repnz
es
iret
es
daa
addr16
xchg
pop
daa
pop
mov
and
mov
cld
jecxz
imul
jne
lret
jl
je
iret
add
ficoml
addr16
jl
mov
pop
loope
mov
mov
mov
decl
lret
dec
out
aaa
sub
cmpsl
int
pop
shl
jnp
lods
mov
cmpsb
fbstp
xor
xchg
mov
sub
daa
popa
nop
addr16
stos
sysexit
lret
test
gs
push
mov
insb
jnp
inc
inc
fwait
add
enter
outsl
mov
mov
xchg
cs
aaa
rorl
xchg
sub
mov
sub
pushf
rcr
mov
cli
jo
pop
ljmp
sbb
inc
mov
scas
shl
or
das
shll
cmp
mov
pop
sub
mov
push
xor
xchg
js
cmp
aad
test
xchg
outsl
dec
xor
mov
ret
lock
push
sbb
inc
sub
mov
sub
stos
repz
mov
cwtl
pop
xchg
test
and
fwait
dec
in
inc
and
daa
push
hlt
jns
push
mov
jbe
icebp
repz
cmp
sub
stos
push
mov
add
adc
in
adcb
cmpsl
in
pop
mov
mov
cmp
sbb
je
ja
sti
mov
sbb
test
cmp
push
movb
ja
lret
fidivl
gs
fwait
call
mov
xchg
dec
jg
data16
xorl
xor
outsb
fdivrs
orb
into
xor
cld
mov
cltd
es
mov
fs
out
mov
jae
je
cli
aad
jecxz
xor
cltd
sub
inc
lods
lds
ss
mov
xor
mov
jle
rorb
fwait
push
lcall
movsb
push
imul
xchg
jl
mov
cmp
cmp
mull
out
lret
add
popa
and
jle
sub
js
mov
lcall
loopne
push
in
adc
push
mov
adc
icebp
leave
mov
mov
les
aas
rcl
or
xchg
idiv
sub
fadds
dec
inc
mov
call
je
jne
std
je
aad
mov
arpl
rcl
sbb
mov
repz
cmpsl
in
adc
inc
dec
jge
jp
gs
push
subl
mov
cwtl
nop
xchg
fninit
mov
cli
push
xchg
dec
pop
test
sahf
mov
aaa
out
lcall
push
in
imull
test
out
sub
mov
das
pop
mov
fstpt
push
or
cltd
sbb
adc
ss
mov
lods
gs
jle
cmp
jno
mov
stc
sub
call
pop
dec
mov
and
mov
add
pop
mov
repz
cli
cmp
outsl
movsb
cmp
shrb
mov
dec
arpl
mov
orl
ret
popf
addr16
out
shrl
fstl
sbb
pop
shll
aas
pusha
xchg
in
inc
orl
test
sub
mov
popf
lret
mov
xor
popf
stos
sbb
push
test
lods
icebp
lods
pop
dec
jecxz
scas
mov
mov
std
fsubrl
xor
jle
mov
fstps
jl
inc
jns
nop
xchg
pop
xchg
aad
cs
mov
xchg
iret
jbe
inc
dec
xlat
repnz
test
rolb
xorb
leave
sub
out
and
out
lcall
inc
lret
xchg
and
sarl
out
adc
or
clc
scas
arpl
addr16
scas
adc
pop
lahf
or
fsubrs
or
adc
add
jnp
fisubl
mov
or
and
ja
pop
jmp
test
ret
cmpsl
pop
mov
jns
call
test
mov
call
xchg
mov
aad
mov
test
pop
mov
out
loopne
mov
or
std
sub
jge
aam
cwtl
fdivl
int
stos
mov
jbe
gs
xor
insl
cmc
lods
pusha
es
in
imul
or
mov
stc
cmp
xchg
addr16
and
dec
int3
stos
jle
xor
sbb
mov
push
and
je
test
rcr
cmpb
fcompl
mov
bnd
mov
mov
fadds
sbb
rcll
mov
or
cld
jle
out
cmp
adc
pop
outsl
or
arpl
out
cmp
iret
xchg
sbb
xor
sub
pop
cmp
jo
or
lea
jb
pop
sbbl
xor
adc
pop
and
outsb
mov
fcmove
jne
and
movsb
addr16
loopne
and
mov
add
fwait
mov
jp
arpl
fadd
mov
add
loope
std
xchg
imul
es
gs
pushf
out
inc
cwtl
mov
sbb
adc
cmp
outsl
cmc
mov
mov
repz
out
ds
bound
arpl
jecxz
push
push
sti
and
sub
xchg
call
mov
sub
dec
aam
mov
mov
jmp
mov
mov
dec
dec
scas
lods
adc
pushf
scas
adc
and
sub
mov
arpl
pusha
int3
dec
push
mov
cmpb
mov
xchg
mov
pop
popa
test
sub
push
daa
xor
mov
xor
arpl
call
push
pop
push
test
push
mov
sbb
and
daa
fistl
sub
dec
pop
xchg
add
add
int3
bound
xchg
out
or
pop
mov
adc
into
adcl
cmp
addr16
and
mov
dec
sub
jo
or
aam
inc
pop
xor
mov
cmp
add
js
mov
ret
imul
mov
cli
repz
pop
inc
sub
aaa
and
jmp
imul
popl
xchg
mov
clc
mov
mov
xchg
inc
out
es
lds
test
icebp
sbb
leave
pop
push
push
push
lock
pop
ret
iret
ss
out
cmp
scas
cmp
xor
les
xchg
xor
add
scas
add
sbb
sub
xor
jg
push
jmp
mov
mov
imul
ja
jp
sub
out
jne
inc
ret
or
les
add
inc
cld
out
icebp
xor
jl
dec
add
shll
jb
fdivr
roll
test
push
adcl
jl
jb
jo
filds
xchg
jne
jno
pop
in
add
mov
rcrl
pop
push
pop
dec
or
cmp
add
pop
mov
mov
lret
inc
sbb
flds
sub
mov
js
stos
lds
xor
mov
inc
pop
enter
pop
ds
dec
jle
mov
and
les
and
sub
fnstenv
cld
push
in
loope
loop
je
dec
jmp
pop
pop
jmp
fldt
add
subl
mov
test
call
xchg
movsb
and
and
or
and
mov
cmp
mov
xor
add
xor
adc
je
pusha
jne
outsl
movsb
xchg
mov
adcb
cmp
gs
adc
lcall
inc
enter
mov
rcrb
adc
dec
adc
pop
jne
or
scas
cmp
aam
or
cmp
and
sahf
pop
outsl
and
push
and
in
cmpl
enter
adc
movb
cmpsl
fnstsw
cmp
mov
add
sub
mov
leave
popa
and
daa
pop
pop
fnsave
dec
mov
push
inc
xchg
sub
clc
popf
fwait
or
outsl
pop
jno
sub
decb
insb
xorb
xchg
mov
ret
add
andb
add
sahf
popf
testl
and
cmp
mov
imul
adc
in
mov
add
cmp
mov
dec
jno
orb
sbb
sbb
mov
or
cmp
pop
arpl
jge
fs
adc
out
inc
inc
lahf
cmp
adc
xchg
in
add
or
xorl
or
jnp
gs
mov
jle
test
in
ret
mov
add
popa
jno
cmpsl
icebp
pop
insl
cmp
fists
push
pushf
leave
adc
loop
dec
pop
into
pop
push
push
cwtl
xor
mov
xor
pop
inc
stos
cltd
add
dec
xchg
mov
pop
inc
or
enter
push
cmp
repz
fiaddl
pusha
orb
loope
or
cld
dec
mov
jmp
jbe
sub
vmovups
add
test
adc
mov
cmc
and
stos
or
push
mov
jle
xor
add
cmp
loop
inc
mov
xchg
mov
out
sub
jne
xchg
rcl
cwtl
or
shlb
xchg
dec
ljmp
jl
xor
insl
gs
sub
movsl
aad
mov
mov
out
outsl
ljmp
push
loop
pusha
mov
ja
js
lds
arpl
and
dec
xchg
fdivrl
xchg
sub
or
mov
xor
add
mov
repz
mov
xchg
jne
js
imul
hlt
sbb
pop
pop
sub
and
adc
xor
dec
adc
je
pop
fisttpll
xchg
add
xchg
popf
push
cli
push
push
xor
push
or
aad
lret
ffreep
ja
in
imul
push
push
sti
mov
jo
jo
daa
and
pop
pop
jb
rorb
sub
das
mov
xlat
movsl
add
push
popa
xchg
loopne
mov
jecxz
insl
in
mov
push
test
lods
mov
fisubs
sub
adc
in
mov
mov
mov
lahf
push
scas
pop
jecxz
aaa
xchg
mov
cli
jbe
mov
add
xchg
cs
shlb
push
mov
adc
xchg
inc
inc
lds
cwtl
xor
mov
jge
js
aaa
and
lock
push
lds
rcl
and
or
and
xor
repz
inc
daa
shll
add
ljmp
cmpsb
cmp
out
and
cli
out
pop
and
dec
dec
outsb
shrb
xor
das
cmp
pop
movsl
gs
pshufw
mov
sbb
cmp
xor
testl
adc
and
jle
push
adc
cmpsb
sbb
inc
mov
in
dec
mov
ja,pt
hlt
ret
es
dec
jb
mov
into
hlt
jnp
lret
jne
mov
pop
pop
pop
les
int
mov
out
jecxz
jbe
inc
jb
jge
inc
mov
cmp
les
es
jge
mov
mov
rol
adc
and
sub
pop
std
mov
lods
loope
xor
pop
jo
in
push
cmp
jno
dec
fs
push
push
sub
or
repz
stos
jnp
test
sbb
clc
dec
jo
div
lods
pop
aas
repnz
adcl
subl
scas
adc
out
decb
sbb
dec
je
jp
xor
xchg
pop
pop
cmp
xor
pop
adc
dec
xor
cltd
fidivl
inc
xor
fbstp
lret
loop
aas
add
roll
lods
cmp
es
pop
imul
inc
sub
repz
adc
sbb
sub
fimull
loope
clc
add
shll
sub
testl
mov
ljmp
ret
or
orb
inc
xchg
mov
inc
mov
push
dec
sarl
mov
scas
dec
int3
dec
sub
pushf
or
push
mov
add
int3
jns
xor
or
idivb
insb
cmpl
mov
push
push
roll
fcoml
das
sbb
fistps
lock
jo
into
in
in
push
adc
enter
fistl
lods
hlt
push
inc
and
sbb
movsb
or
sub
clc
cmp
pop
push
aad
std
cmp
adc
rcll
repz
push
lods
cmp
jp
ja
cld
adc
dec
aad
test
outsl
xor
pop
or
cwtl
jge
testb
and
notb
loope
mov
popa
mov
icebp
ffreep
cs
fs
in
xchg
adc
add
dec
pop
jmp
jne
data16
sub
sbbb
and
andl
push
and
subb
adc
enter
ja
add
add
lds
dec
pushf
or
add
test
aam
scas
xor
sub
js
mov
in
inc
sbb
add
arpl
lcall
xchg
test
neg
inc
into
addr16
daa
pop
scas
xor
push
dec
jo
cmpsb
cld
and
cmp
and
push
insb
cmp
mov
call
test
cmp
mov
int
lods
mov
adc
sub
in
test
mov
adc
cmp
in
xchg
mov
popa
jne
pop
cmpsb
ljmp
scas
test
dec
lret
mov
cwtl
inc
and
sbb
rcrl
int
jns
sbb
xchg
movsl
popa
sbb
sub
loope
in
cli
outsl
cli
or
stc
arpl
test
outsl
or
mov
sub
jl
push
lea
shrb
icebp
repz
lcall
sbb
scas
leave
out
std
inc
and
or
jg
gs
xor
dec
adc
xchg
xor
cwtl
sub
and
notb
pop
aaa
xchg
inc
out
mov
imul
mov
mov
adc
mov
pusha
test
imul
test
iret
mov
inc
andl
shrl
pop
add
cmp
and
clc
inc
jecxz
inc
pop
push
push
loop
jl
idivb
pop
jl
out
and
mov
daa
dec
es
ret
dec
in
scas
xchg
push
fs
dec
dec
popf
inc
in
in
cltd
les
and
sub
loopne
ror
and
inc
mov
jp
mov
lret
sbb
xchg
mov
push
sti
shlb
push
mov
mov
or
rcrb
xchg
scas
shr
sahf
push
add
inc
or
inc
xchg
mov
loop
scas
add
scas
pop
dec
jae
fcos
jg
out
jmp
adc
add
int3
in
pushf
push
stos
xchg
xchg
xor
cmp
xlat
stc
adc
lods
sbb
xor
dec
pop
or
fs
xchg
pop
mov
lret
mov
jae
xchg
pusha
sbb
lods
leave
xor
mov
xchg
xchg
insb
inc
push
xor
es
aam
mov
int3
push
dec
inc
fldcw
jb
fistpl
jns
iret
mov
test
les
rorl
adc
imul
and
dec
jo
in
repnz
repnz
jmp
sub
pop
nop
lret
sbb
mov
addl
mov
testl
in
xor
cld
and
fnstcw
adc
je
add
movd
sub
ret
jmp
cli
loop
shrl
mov
arpl
inc
adc
pop
adc
or
xor
nop
xchg
add
push
loopne
cmpsl
shll
ret
sbb
adc
stos
stos
mov
sbb
jns
xor
pop
and
xor
mov
js
mov
mov
cmc
mov
pop
cwtl
mov
rcr
dec
xchg
rorl
lret
pushf
dec
push
jecxz
mov
clc
or
divl
sti
aas
insb
test
pusha
mov
int3
js
test
loopne
lock
push
add
mov
mov
je
cmpsb
loope
sbb
nop
imul
insb
dec
push
jl
lea
je
xor
pop
cmp
add
and
aam
rclb
or
sbb
fadds
lret
das
mov
sahf
test
addl
adc
sbb
lret
jecxz
bound
lea
dec
popa
out
xchg
dec
scas
dec
inc
dec
ljmp
push
hlt
rclb
jg
pop
push
mov
out
addr16
nop
jg
inc
aad
int
or
xor
cmp
mov
cld
xchg
insb
sbb
arpl
lods
mov
push
dec
lahf
xchg
inc
jbe
inc
lret
mov
mov
sub
mov
or
int
out
inc
icebp
sub
cmp
addr16
cmp
adc
sahf
mov
stos
xchg
pop
mov
stos
leave
sub
int
lcall
fwait
jne
jae
out
out
int
sub
sub
xor
pop
leave
mov
mov
and
xor
hlt
xchg
cmp
push
sub
test
arpl
add
test
int3
int
dec
pop
xor
dec
mov
repnz
mov
push
fnstcw
mov
xchg
push
pop
ss
mov
jns
icebp
or
inc
lret
scas
dec
mov
in
in
and
mov
push
scas
sbb
and
push
andb
pop
pop
lods
pop
jg
mov
xor
je
mov
pop
lods
and
sub
ffree
inc
jo
loope
push
test
int
loope
aad
mov
or
and
mov
imul
xor
adc
push
jne
stc
lret
hlt
dec
lods
pop
adcl
push
jmp
sbb
in
enter
jno
or
push
xchg
mov
scas
and
mov
adc
aad
pop
xchg
and
mov
push
add
ret
sbb
cmp
call
inc
in
cwtl
cmpsl
fstpl
daa
mov
lahf
outsl
sub
lock
dec
xchg
aaa
outsb
ficoms
loop
pop
pop
rolb
fisubl
ss
insl
cltd
andl
es
lods
cli
mov
popf
dec
stos
out
mov
push
or
arpl
jg
pop
mov
sbb
push
into
ljmp
mov
pop
push
or
mov
cmp
imul
xor
cmp
ret
mov
pushf
jg
stos
mov
addl
lahf
pop
repnz
xor
mov
icebp
lods
int
idivl
and
test
pop
ficoml
jb
xor
jno
and
push
xchg
inc
mov
dec
inc
lods
sub
popf
pop
inc
outsl
pop
insb
test
sub
mov
xchg
dec
cmpb
jb
ja
cltd
and
movlps
aad
rcl
or
push
cmp
xor
subb
xor
int3
call
sub
cmp
sti
xchg
imul
fidivs
or
jecxz
jmp
sbb
fcoml
idivb
adc
insl
mov
mov
mov
inc
push
test
imul
dec
xor
ljmp
pop
out
jl
into
cli
fldt
mov
inc
mov
mov
lahf
mov
and
adc
cmpsb
cmpsl
sbb
insb
out
cmc
es
ss
pusha
ret
mov
mov
call
loope
nop
cmp
ss
push
adc
or
popf
pop
mov
and
sub
clc
lea
arpl
cmpsb
in
jnp
mov
std
add
mov
push
lods
shll
or
cmp
mov
dec
and
sub
ficomps
lcall
test
inc
icebp
mov
or
out
inc
xor
inc
int3
cmp
sub
mov
cmp
int
out
mov
jp
jmp
or
dec
outsl
and
inc
mov
xlat
stos
and
xor
push
cmp
adc
dec
sub
test
xchg
jb
push
jbe
imul
and
mov
add
mov
dec
mov
xor
das
loop
inc
lods
mov
call
daa
cmp
xor
scas
jnp
shl
add
xchg
jae
dec
mov
sahf
cs
aad
sub
and
xchg
fsubs
pop
xchg
pushf
jae
cmp
pop
lcall
incl
outsl
loope
push
cmpsb
sahf
lods
movb
aam
push
sub
inc
xlat
and
mov
and
mov
dec
push
fistl
inc
xchg
rol
aam
push
pop
cld
cmpsb
sub
lds
or
and
push
push
and
xor
ljmp
adc
push
mov
sarb
mov
sbb
rclb
lcall
or
xor
outsb
add
dec
jle
mov
mov
push
inc
cli
imul
cli
mov
int3
or
sahf
mov
dec
pop
rcrl
sbb
fsubs
mov
pop
mov
out
es
hlt
test
pop
cmp
imul
gs
inc
adc
pushf
add
ds
adc
sub
jmp
das
add
jge
mov
fyl2xp1
cmpsl
popf
lret
pop
call
adc
push
scas
inc
lahf
and
sbb
cmp
popa
mov
mov
xchg
dec
or
mov
sub
push
loopne
ror
enter
dec
mov
add
int3
cli
sub
rcrl
stos
jg
mov
add
mov
test
scas
dec
andl
adc
mov
add
jg
mov
int3
scas
inc
mov
icebp
mov
loopne
loope
pop
mov
cld
fdivs
push
pushf
test
push
enter
pusha
mov
test
jns
in
xchg
inc
adc
cld
inc
test
mov
jmp
ljmp
cmp
xchg
mov
in
mov
mov
insl
adc
xor
addr16
js
imul
arpl
cmp
out
sub
das
xchg
xchg
lcall
add
rolb
pop
push
sahf
js
out
shrl
sar
adc
mov
jl
movsb
in
pop
xor
scas
jmp
push
js
aaa
push
and
lock
mov
inc
out
rol
mov
sbb
mov
jmp
negl
xorb
sbb
inc
mov
outsb
sub
arpl
xor
subl
xchg
xor
push
sbbb
push
cmp
filds
orl
fiaddl
inc
mov
push
cld
out
aam
insl
jnp
aam
cmp
into
cmp
stos
and
out
loop
daa
call
and
ss
xchg
out
pop
test
mov
repnz
sbb
dec
ficoml
mov
shl
movsb
push
int
mov
int
xor
jb
mov
das
movl
in
cld
cmp
fnstcw
jns
cld
ds
ds
sub
loopne
inc
pop
into
jno
push
pop
pop
jns
add
hlt
cmpsb
les
cmp
pop
jns
into
outsb
cmp
enter
pop
outsl
gs
stc
push
jns
xor
push
aam
imul
dec
dec
push
lock
inc
inc
rolb
dec
in
fprem1
cltd
repz
xor
sub
add
testb
add
sti
and
call
cmc
stos
adc
mov
insl
aam
fstl
cmpsl
sub
gs
jno
shlb
arpl
pop
sbb
inc
mov
mov
stc
mov
loope
and
dec
les
xchg
or
daa
js
and
xchg
sbb
in
movb
sub
out
pop
addr16
sahf
icebp
out
inc
push
mov
dec
lock
cwtl
outsb
clc
xchg
fistpll
push
fwait
popf
mov
push
fimuls
das
aam
push
hlt
xchg
inc
dec
es
push
cmp
jne
es
xchg
sub
outsl
cmp
lcall
push
jne
mov
push
imul
lock
adcl
mov
stos
mov
push
mov
add
inc
jecxz
loopne
je
mov
arpl
cltd
fisttpll
jnp
jns
mov
lods
pop
add
or
adc
and
mov
pop
jno
mov
xlat
enter
int
pop
pushf
arpl
add
js
mov
jl
fsubrs
mov
filds
jne
inc
jbe
sub
das
mov
int3
mov
xor
iret
push
pop
ljmp
xchg
fldenv
adcb
aas
mov
lea
repz
mov
js
add
jbe
dec
clc
pushf
lret
mov
mov
mov
cmpsl
push
or
jo
sub
or
daa
ret
mov
jp
aaa
push
lea
and
lea
cli
leave
pop
das
imul
mov
add
pop
ljmp
add
ror
fldenv
mov
or
mov
push
mov
sbb
pop
xor
jne
jnp
in
cmp
jae
push
dec
aad
ss
repnz
inc
shlb
lock
popa
push
push
loop
dec
sbbl
leave
lock
testl
inc
dec
fs
lods
fwait
xlat
cmp
dec
stos
dec
idivl
dec
mov
mov
adc
and
mov
mov
movl
test
stos
lahf
mov
sbb
lret
and
pop
lock
fld1
jnp
mov
or
dec
shlb
rcrl
ljmp
loope
xor
bound
inc
std
daa
inc
jo
cmp
sub
mov
je
cld
xor
mov
sbb
sbb
xchg
repnz
das
ds
xor
inc
jge
sarb
mov
jno
inc
ret
mov
adc
jecxz
jno
js
inc
push
mov
stos
mov
outsl
dec
jbe
mov
movsb
ja
scas
pop
out
bound
in
mov
out
insl
pop
loopne
xchg
or
or
add
hlt
fdivrs
test
sub
cld
fisubs
loop
int
push
sbb
sahf
fadd
cli
xor
sub
pop
stos
fst
fwait
testl
arpl
pop
loop
and
push
and
xor
sti
jl
dec
in
mov
mov
xchg
add
sub
lds
and
or
pop
sbb
pushf
xchg
push
inc
or
imul
jbe
dec
inc
cld
fisttpll
jmp
loopne
lret
or
mov
cmpsl
jg
fmuls
fs
movsb
mov
adc
inc
xchg
cmp
loop
cmp
stc
dec
sarb
fs
cs
xchg
jle
arpl
adc
notl
inc
xlat
mov
jbe
mov
mov
out
mov
movsl
enter
insl
xchg
outsb
mov
into
outsb
iret
out
sbb
in
and
inc
daa
dec
gs
dec
pop
jns
movsb
inc
mov
subl
lcall
add
fldcw
jle
int3
adc
fstpt
sub
jge
xorb
sub
xchg
movsb
pop
add
sub
or
loopne
inc
jo
ljmp
rcr
inc
fidivs
pop
mov
push
out
mov
popf
jle
sub
pop
jl
in
jne
inc
sub
xchg
in
mov
bound
imul
inc
pop
pop
xor
sub
cltd
sub
inc
jne
inc
pop
rcl
popf
mov
dec
sbb
cltd
sbb
jnp
inc
xchg
push
sbb
dec
cmpsl
out
stos
ds
and
mov
or
sub
cwtl
test
xchg
popf
cmp
leave
sub
bound
jl
js
push
repz
sbb
test
cmp
sbb
addr16
mov
js
or
adc
call
sbb
and
pop
or
jb
insb
out
push
xchg
nop
or
loopne
mov
fxch
xorb
mov
pop
mov
push
call
movsb
sbb
cmpsb
pushf
xchg
loope
iret
bound
addr16
sbb
js
fisttpl
or
inc
push
inc
mov
inc
or
mov
xchg
bound
mov
call
sahf
cmp
inc
loope
rcrl
addb
inc
call
shl
incb
arpl
mov
ror
xchg
loopne
clc
adcb
ret
mov
jp
test
inc
sarl
in
nop
jnp
sub
rolb
xor
or
mov
idivb
sbb
jmp
sarl
mul
xchg
daa
popa
les
and
mov
xor
dec
or
jmp
add
cs
mov
in
insl
push
loope
lock
das
jo
fisttpl
jne
xor
pop
out
cmp
push
je
in
out
jb
pop
popf
arpl
int
ret
xor
in
icebp
stos
into
hlt
and
cmp
fwait
push
pop
fwait
mov
add
push
cmp
fisubrs
int
lds
cld
je
xchg
jmp
dec
jle
cmp
rorl
bound
or
jo
int
int3
push
nop
cmc
inc
sub
mov
bound
inc
je
sub
iret
and
jl
cmp
xor
gs
movb
leave
cmp
pop
jl
fsubrl
idivb
mov
stos
mov
mov
sbb
mov
fadd
cmp
dec
mov
push
xor
xor
imul
leave
bound
rorl
ds
xchg
sub
pop
call
mov
push
add
stc
aas
push
jg
clc
cmpl
test
sbb
cli
sub
lods
aaa
jle
mov
ret
hlt
das
xchg
mulb
bound
sbb
jmp
jge
cltd
movsb
mov
cmpsl
cmp
xchg
mov
imul
in
add
jae
jg
imul
cmp
pop
shrb
stos
in
cmp
cmp
pop
mov
movsl
jp
xchg
or
pop
es
fmull
and
les
push
inc
pop
cmp
notl
push
xchg
hlt
clc
fwait
or
es
push
jg
out
xchg
stos
push
cmc
pusha
cmpsl
jne
test
add
fnstcw
adc
push
jl
mov
stos
roll
lods
stc
adc
out
cmp
inc
pusha
adc
jge
xchg
ds
mov
jns
inc
movsb
xchg
or
cli
jne
subl
jns
scas
aas
add
addl
test
pop
pminsw
xchg
push
pop
mov
mov
mov
dec
jp
jnp
fsubrl
in
or
fmul
inc
push
es
cmpl
inc
cmp
jp
negb
mov
push
inc
andl
inc
das
fstpt
push
cmp
cwtl
in
std
mov
add
rorb
popa
push
scas
cmp
xor
push
in
imul
and
xchg
mov
jb
xchg
adc
or
lods
push
mov
sub
mov
popa
push
js
cltd
pop
sub
xchg
pop
das
push
out
les
cmp
pop
es
dec
fdivrs
jae
mov
xchg
decl
loope
inc
ret
xor
xchg
fimull
dec
lods
xchg
pusha
addl
jo
dec
lock
std
arpl
xor
jl
or
jmp
ja
push
mov
in
and
dec
mov
in
cltd
sub
pop
push
cmp
cmp
or
and
cltd
ss
jge
aaa
pop
icebp
mov
sbb
push
push
push
or
or
pop
pop
imul
or
xchg
ret
inc
dec
mov
in
fucomip
and
inc
mov
cmp
inc
xor
hlt
fldl
sbb
sub
pop
js
push
cs
stos
arpl
fistps
in
gs
dec
inc
test
sbb
pop
pop
mov
fists
idivb
sbb
mov
scas
testl
add
insb
clc
pusha
push
push
lcall
xchg
ds
sub
stc
dec
push
xchg
mov
int
xchg
in
inc
and
inc
outsb
pop
in
call
fsubrl
js
push
dec
clc
adc
push
mov
ljmp
out
jge
enter
in
pop
jg
cmp
decb
sbb
pop
cmp
cmp
adc
das
pop
mov
jecxz
daa
mov
jns
jge
test
lods
movl
pop
mov
js
dec
or
out
sub
dec
jo
dec
stos
or
or
cmp
mov
pop
cmp
cmc
cmp
repnz
js
push
mov
push
cmp
or
jp
pop
loop
hlt
imul
mov
pop
sub
xor
gs
daa
xor
add
pushw
das
cld
adc
cltd
in
xchg
sub
dec
pop
subl
dec
idivb
and
lock
mov
cmp
mov
jo
xor
xchg
cmpsl
aad
cmp
stc
or
xchg
lods
lret
ret
dec
adc
ficompl
lock
and
scas
push
lds
cmp
jp
jecxz
inc
in
sub
dec
mov
mov
mov
xor
push
pop
xor
clc
mov
xchg
sub
jg
ret
imul
in
cmp
adc
mov
sahf
pop
pop
outsl
or
and
push
dec
jle
push
or
add
hlt
sbb
inc
add
dec
mov
divl
jge
lds
jo
shrb
pop
xchg
jo
push
out
jae
les
xchg
inc
xor
in
xor
dec
pop
pop
and
and
adc
lds
mov
push
bnd
jmp
insl
xchg
adc
iret
cwtl
adc
xchg
in
dec
in
out
call
adc
sbb
test
shlb
xchg
mov
mov
inc
fs
imul
mov
jbe
dec
push
stos
xor
sbb
repnz
iret
insb
or
mov
dec
insb
scas
push
pop
mov
push
std
pop
es
xlat
sti
ljmp
lcall
lods
xchg
popf
jo
in
and
test
rorb
push
xor
rcrl
jae
mov
xchg
repz
adc
int3
fsubs
dec
and
repz
push
out
out
cmp
in
mov
rorb
push
imul
adc
test
sbb
and
int
xchg
xchg
mov
jnp
mov
fwait
insl
insl
pop
sub
cmp
xor
cli
psrad
fcomps
mov
pop
orl
nop
movsb
xor
push
inc
cmpsb
popa
pop
sub
mov
fcoml
pusha
xchg
shl
sbb
arpl
je
mov
cmpsb
push
inc
sti
and
push
sbb
ljmp
scas
lods
leave
mov
mov
mov
xchg
fisttpll
clc
xlat
jnp
cwtl
adc
mov
cltd
iret
cwtl
lea
jl
xchg
popf
inc
and
adc
jae
imul
dec
pushf
sbb
xor
dec
scas
test
andl
jecxz
pushf
pusha
adc
sbb
out
sbb
adc
repz
xchg
in
xchg
add
inc
dec
add
orl
stc
cmpsl
bound
out
jge
in
xchg
fnsave
aaa
mov
fisttpl
sarl
mov
mov
lds
cmp
mov
dec
inc
negl
add
mov
sub
mov
add
pop
sahf
jmp
aas
in
mov
incb
cwtl
sub
sahf
out
dec
arpl
dec
push
or
pop
je
aad
adc
jb
popf
cwtl
push
sti
movsl
scas
bound
push
pop
fimull
lret
jns
mov
imul
mov
dec
pop
xchg
mov
mov
leave
and
xchg
aad
mov
loop
addr16
or
out
subl
daa
push
fidivrs
jge
mov
mov
lret
xchg
and
sub
sub
push
lahf
xor
sbb
stos
sbb
pop
and
cmp
ljmp
pushf
and
std
adc
mov
leave
lcall
mov
gs
inc
out
mov
clc
imul
ret
jne
mov
popa
sub
ja
or
pushf
ret
rorb
je
shrb
push
xlat
mov
aas
fwait
repz
popf
int
in
imul
cmp
push
fistpll
inc
gs
push
ret
es
aaa
aas
hlt
test
mov
mov
imull
andl
pusha
xchg
icebp
push
jle
sub
mov
push
inc
insb
fcmove
aam
dec
out
mov
jbe
movsl
lcall
insl
repnz
fucomip
inc
sub
mov
xchg
push
cmpsb
push
fiadds
addl
fwait
pushf
ds
cmp
daa
mov
in
sub
sarb
push
test
fidivl
mov
xor
xor
jnp
nop
aas
jnp
ja
aam
gs
leave
push
out
leave
add
test
popa
mov
push
mov
dec
sahf
sub
jmp
lock
cwtl
ljmp
jb
xor
pop
push
loope
xor
pop
or
scas
rcrl
cltd
adc
ljmp
test
dec
mov
cmc
lock
rcrl
outsl
into
iret
xchg
pop
push
inc
pop
inc
lcall
leave
adc
push
insb
add
push
clc
push
add
or
in
inc
fidivrl
fdivrp
mov
cmp
adc
xchg
jno
les
mov
jne
inc
test
pop
lcall
arpl
pop
sarb
dec
ret
les
dec
cwtl
addr16
lea
je
jl
jo
incl
sub
sub
xchg
ljmp
lock
and
or
lods
das
dec
mov
add
add
xor
or
popf
test
faddl
mov
ja
inc
aam
in
and
adc
inc
or
ja
movsb
xchg
cmpsl
mov
insb
add
imul
and
lods
mov
stos
sbbl
js
sub
xor
xchg
add
mov
dec
push
call
loop
loop
rcrl
or
orb
repz
push
jno
cld
int3
inc
mov
cli
shrl
mov
dec
xchg
or
cs
incb
mov
stc
aad
pop
xor
inc
fsubrp
cmp
jg
shlb
add
push
mov
sbb
mov
lds
adc
cmp
mov
cmp
pop
mov
ljmp
sbb
clc
enter
pop
sub
jbe
or
cmp
inc
xchg
rorb
daa
nop
icebp
mov
mov
pushf
aad
mov
xor
out
outsb
mov
dec
out
xchg
sub
dec
in
add
jle
cmp
pop
leave
xchg
jae
js
rdmsr
inc
cmp
jo
push
sbbl
cwtl
push
mov
lods
adc
xor
lock
jmp
cmp
lret
ds
push
cli
scas
fnstcw
xlat
add
xor
lahf
insb
cmp
bts
mov
mov
rcll
xchg
mov
hlt
inc
dec
lret
pop
scas
mov
cltd
inc
pop
stos
outsb
lea
fistl
popa
xor
out
jnp
ret
sarl
out
cld
push
adc
mov
inc
jb
push
ds
cmp
sbb
dec
xor
stos
xchg
pop
mov
mov
inc
mov
mov
or
sub
mov
and
mov
call
mov
out
ja
mov
lahf
jo
in
lret
xchg
pushf
loope
fcomi
mov
dec
jbe
sub
adc
mov
dec
imul
xor
movsb
or
sub
lret
enter
mov
mull
sarb
xchg
aam
shr
mov
mov
mov
aad
add
xor
lea
xchg
out
add
add
push
mov
inc
mov
lcall
sbbb
sbb
adc
dec
push
jbe
mov
fwait
push
dec
xor
ret
mov
rolb
popa
cli
andb
imul
sub
in
fs
sub
jns
mov
popf
push
push
in
pop
inc
sahf
ret
mov
xchg
inc
ljmp
add
dec
pushl
and
mov
std
pop
inc
and
inc
mov
repnz
push
shrl
inc
pop
push
insb
fimuls
add
in
daa
in
out
push
mov
stc
sub
jne
push
push
adc
dec
in
xchg
inc
and
push
adc
clc
mov
aad
pop
data16
jmp
cltd
jge
mov
mov
loop
xor
xor
xchg
cmc
gs
mov
jb
in
jle
push
add
xor
test
orl
push
adc
sti
and
fidivrl
and
xchg
xor
adc
cmp
test
shlb
repz
inc
sbb
das
mov
fldl
mov
addr16
adc
mov
int
pop
sarl
fldenv
ds
pop
subb
cmp
and
in
inc
xor
dec
mov
jp
data16
notl
addr16
imul
aad
and
xchg
lods
jle
sbb
xchg
test
adc
ret
dec
movsl
cmp
cmp
nop
add
adc
pop
jne
pop
push
bound
jle
push
push
cmpsl
std
aas
push
or
cli
dec
dec
push
lret
popa
push
mov
or
mov
cwtl
mov
mov
jmp
nop
pop
pop
popf
fistpll
mov
aad
rcll
dec
xchg
inc
sub
fs
pop
repz
mov
test
in
pop
fisubs
gs
cmp
nop
mov
or
mov
inc
scas
xor
data16
int3
cli
and
aaa
adc
inc
pop
divb
ljmp
js
popa
out
ja
lcall
pop
fmul
cmpsb
icebp
std
sub
mov
addl
xchg
into
mov
leave
iret
out
ret
das
scas
fldt
mov
mov
add
or
xlat
repz
insb
test
mov
jmp
test
adc
push
push
out
or
dec
mov
fwait
xor
jmp
incl
adc
mov
sahf
mov
fwait
dec
dec
mov
idivb
cmp
pop
push
sbb
or
mov
outsl
or
adc
xchg
add
enter
sbb
push
or
cmp
jne
inc
sbb
pop
adc
pop
xor
hlt
cmp
loop
xchg
sub
cmp
pop
sbb
sbb
ret
xor
mov
xor
into
mov
jno
cld
cmp
pop
adc
jp
lock
shrb
jecxz
lcall
mov
jle
pop
push
mov
cltd
cltd
out
push
popa
xchg
es
outsb
jg
loopne
data16
dec
inc
push
xor
int
inc
aas
aas
or
inc
ds
div
loop
pop
and
jae
mov
push
mov
or
hlt
pop
and
cld
sub
je
xchg
gs
in
mov
je
pop
jno
pop
or
roll
mov
stc
xlat
daa
or
pop
sub
push
jo
in
hlt
sub
sub
mov
addb
or
add
push
sar
lock
jmp
jecxz
mov
mov
ret
or
mov
stos
out
jg
mov
out
adc
xor
jl
add
xor
sbb
mov
xchg
jae
mov
add
ret
sub
aad
enter
mov
jge
gs
sub
and
into
daa
gs
push
mov
pop
stos
lds
jge
mov
bound
mul
fnstenv
push
jge
push
std
xlat
push
mov
arpl
inc
ja
aam
pusha
cmp
inc
jle
and
xchg
xor
jle
mov
lods
add
pop
shlb
sbb
gs
push
adc
loopne
enter
fcmovne
jnp
jge
ret
cmpsl
arpl
inc
out
lret
fdivs
test
int
sbb
roll
mov
mov
inc
xchg
push
and
pushf
push
clc
popf
mov
roll
aas
cwtl
push
jns
fisttpl
cmpb
in
mov
inc
sub
and
insb
push
pop
inc
dec
cmp
jbe
xchg
or
mov
lea
jo
pop
pop
jnp
ja
leave
jne
leave
inc
adc
call
and
decb
rol
jo
inc
xor
jb
inc
repnz
testl
enter
cmpsb
xchg
mov
lock
lock
int3
sti
xlat
push
mov
or
dec
js
mov
sub
sub
xchg
pop
mov
dec
adc
in
decb
xor
fdivrl
xchg
call
dec
sub
cltd
out
int
in
adc
xorb
xor
sbb
jmp
cmp
fwait
cmp
xor
and
loope
neg
xchg
jle
cmp
push
mov
cmc
ja
inc
std
add
mov
popf
mov
call
in
imul
int3
subb
bound
shlb
xor
mov
into
fsubr
cmp
rcll
inc
cli
test
sub
lret
mov
mov
pop
aaa
cmp
xor
jne
adc
mov
mov
pushf
add
loopne
stc
jae
int
out
cli
push
shlb
stc
outsb
mov
inc
cwtl
push
xchg
popa
dec
mov
pop
sbb
sbb
out
iret
sub
inc
incl
pop
adc
insl
xchg
lea
jmp
imul
pop
jp
inc
jbe
sbb
push
sbb
xchg
pop
je
test
push
dec
jp
stc
sbb
push
xor
xchg
or
dec
add
std
stos
inc
mov
cs
xchg
cmp
jo
and
jg
test
mov
scas
mov
mov
ffree
shll
mov
ja
inc
sbb
pushf
pushf
neg
xchg
fsubrp
test
imul
scas
mov
movsb
test
add
mov
push
xor
cmp
jnp
push
sbb
lahf
aas
mov
test
movsb
movsb
push
mov
mov
pop
jmp
inc
fcompl
jno
mov
inc
jmp
sbb
inc
push
push
cwtl
stos
lds
repz
sub
fbstp
mov
stc
inc
mov
pushf
or
xor
test
sarb
jno
inc
xlat
push
lock
and
mov
and
sub
sbb
fwait
pop
xorl
or
in
test
pushf
xchg
xor
sbb
inc
cltd
repnz
fldcw
mov
test
push
or
mov
sbb
cmp
mov
mov
add
jne
lret
inc
out
test
xchg
orl
fxtract
int3
push
mov
jle
sbb
mov
pop
ja
mov
add
mov
cld
mov
popa
leave
cmp
adc
push
xor
faddl
mov
lods
cltd
std
mov
out
jne
push
mov
pop
clc
cmpb
idiv
pop
aam
mov
push
ja
mov
inc
sub
mov
jo
xor
add
jnp
shlb
idivl
xchg
mov
sbb
and
pop
add
mov
jns
ret
mov
rcl
jae
mov
lds
jne
jno
xor
sub
aas
ret
jo
mov
into
aad
sub
dec
aas
xor
mov
clc
loop
aas
mov
jbe
repz
mov
shlb
loopne
adc
jbe
shll
mov
mov
cmp
outsl
loope
jle
mov
xlat
dec
lcall
push
add
mov
sub
cmp
xor
out
sub
and
lahf
cmp
mov
lcall
add
adc
push
js
test
push
mov
hlt
aad
sar
xor
xor
insb
das
cs
jns
or
pop
imul
bound
ljmp
cwtl
xor
cmp
mov
xchg
push
mov
mov
cmp
push
roll
mov
shrb
int3
cmp
mov
shrb
lcall
je
movups
inc
mov
aaa
dec
mov
xchg
int3
or
scas
rcll
add
lods
mov
pop
in
inc
dec
jl
enter
imul
enter
cwtl
jle
sar
leave
mov
or
clc
sbb
add
push
fmull
aad
sub
jns
cmpsl
push
xor
cwtl
mov
pop
xchg
movsb
cs
mov
outsb
xor
pushf
pop
loope
dec
sbb
icebp
fsubrs
daa
lret
lods
jge
stos
jl
dec
adc
cwtl
pop
clc
clc
add
jge
mov
mul
mov
mov
jnp
fwait
dec
lea
jge
loop
movsb
icebp
jg
in
sti
inc
sub
scas
and
or
mov
cmp
outsl
pop
mov
or
push
mov
jbe
cld
je
outsb
inc
dec
and
gs
and
repnz
aad
jmp
mov
dec
or
jns
ds
mov
xor
xor
mov
in
mov
push
lret
fisubrs
jb
pop
arpl
daa
push
mov
or
mov
in
jmp
in
rcrl
lods
push
pop
sub
lock
fdivrs
pop
jb
inc
add
mov
pop
test
mov
rcl
enter
cmpsb
cmpsb
fsub
ss
jbe
inc
mov
movq
gs
std
leave
dec
shlb
lods
out
push
push
sti
cmp
or
xchg
pop
push
loopne
push
test
lods
mov
cli
repz
or
stc
xchg
mov
stc
mov
movsb
lcall
fisubs
add
pop
test
loope
or
pop
inc
adc
or
lcall
or
daa
xor
mov
movsb
xchg
xchg
cmp
popa
xorl
add
pop
or
setno
xor
xor
xor
loop
scas
sub
cmp
and
cmp
adc
test
in
enter
and
mov
mov
shll
popa
sub
call
pop
sub
xchg
xchg
xor
mov
cmc
in
lea
fwait
dec
ret
mov
jecxz
xchg
xchg
jmp
icebp
mov
push
dec
idivl
mov
pop
xor
arpl
gs
jp
popf
das
in
pop
push
mov
arpl
mov
lock
add
inc
inc
bound
sbb
jg
and
push
inc
nop
mov
ljmp
pop
lods
jb
js
mov
sbb
mov
mov
xchg
scas
dec
daa
mov
jmp
loope
pop
xchg
shlb
mov
daa
test
mov
test
enter
decb
iret
cmc
pop
inc
push
or
fsubs
outsl
test
fwait
or
out
sbb
es
stc
sub
or
pop
call
cltd
dec
mov
call
scas
imul
or
ret
add
xchg
sti
xlat
or
rcll
cmp
and
in
dec
xchg
xchg
xchg
ret
insb
xchg
jmp
inc
imulb
sbb
out
bound
mov
bound
jle
xor
jmp
loop
int3
pop
shrl
add
dec
cmp
sahf
sarl
mov
cmpsl
push
dec
mov
mov
pop
ss
inc
adc
adc
sub
cmpb
cltd
inc
cld
es
shlb
cmpsl
dec
xor
xor
lcall
int3
mov
dec
jecxz
push
hlt
lret
inc
lret
xor
mov
outsl
sbb
pusha
jle
movsl
cltd
mov
orl
inc
out
jo
or
mov
sub
and
push
xor
and
mov
sub
imul
aad
dec
inc
test
jmp
push
scas
push
scas
jne
push
shr
daa
mov
inc
pop
decl
jp
mov
xchg
pop
xchg
sub
aas
mov
and
pop
gs
mov
inc
inc
cltd
jns
dec
add
ds
fdivp
or
sub
das
jb
inc
and
subl
dec
mov
or
repz
sti
jb
enter
sub
sub
pop
ljmp
gs
fs
xchg
outsl
pop
pushf
leave
leave
adc
pop
push
xor
push
dec
mov
dec
stos
bound
mov
mov
pop
jae
lret
lahf
ror
mov
jg
xchg
ss
cltd
int3
sbb
fwait
sahf
sbb
scas
jg
dec
and
nop
les
inc
cli
jmp
inc
rcll
add
shll
add
icebp
cmp
icebp
stos
pusha
and
xchg
sub
inc
push
enter
sub
aas
enter
push
jnp
or
dec
inc
les
push
scas
andb
mov
cmp
push
loopne
je
add
adc
mov
jae
into
imul
out
lcall
test
movsb
mov
pmulhw
pusha
xchg
mov
daa
sbb
stos
loop
push
jge
xor
fsts
pop
jnp
lods
xor
fnsave
mov
gs
fisttpl
mov
push
pop
pushf
mov
cmp
movsb
jae
dec
push
sub
xchg
mov
mov
inc
and
adc
push
shlb
xchg
adc
mov
in
lock
cmc
cmc
dec
push
push
dec
test
loopne
mov
and
cmp
jns
loope
addr16
ljmp
mov
fists
int3
stos
sub
push
dec
test
dec
bound
stos
mov
outsb
xchg
lahf
jp
adc
jle
cmp
fadds
lea
and
jmp
xor
jmp
jmp
push
inc
fstpl
cmp
enter
test
dec
rorl
xor
mov
dec
inc
rcpps
xchg
mov
sub
lds
imul
cmp
imul
jge
pushf
pop
pop
js
sbb
sbb
pushf
in
rcrb
xor
adcl
jmp
and
xchg
xor
scas
pop
lahf
sub
ja
ret
add
mov
pop
push
ret
push
jmp
das
loop
push
stc
push
sbb
jo
popf
adc
test
enter
ljmp
adc
cmpsb
fldcw
les
shr
jmp
mov
cmp
mov
std
fdivs
cltd
rorl
cmp
mov
in
ficoml
mov
lret
mov
pushf
test
mov
lcall
sbb
mov
mov
lods
movsl
or
sub
xchg
aas
inc
pop
cmp
fidivs
cmpsb
addr16
es
cmpsb
cwtl
into
lret
ss
bound
add
xchg
adc
jns
out
add
shlb
cmp
loope
xlat
int3
out
mov
and
push
sub
insl
testl
push
mov
cmp
pop
in
or
arpl
in
out
cmpsb
and
fs
mov
xchg
cli
rorb
fisubrl
adc
xchg
sbb
mov
in
and
or
sarb
call
jo
and
das
inc
xor
and
inc
data16
xchg
adc
decb
daa
mov
addr16
sbbl
popa
sub
inc
mov
mov
dec
test
cmp
dec
fcomi
lret
xchg
into
shlb
xor
xchg
cmp
cmp
add
out
dec
mov
dec
mov
xor
inc
or
mov
lods
mov
loopne
ret
shr
adc
xchg
faddp
inc
xor
es
inc
and
negb
sub
ds
stc
nop
icebp
sub
push
adc
and
push
std
cmp
jns
or
jecxz
lea
hlt
fs
and
push
rcrl
in
cld
xchg
ret
sbb
dec
loope
jle
lret
sbb
movsl
push
scas
test
mov
sub
ja
popf
mov
add
nop
bound
pop
test
adc
xchg
icebp
jbe
inc
out
and
mov
xor
inc
inc
inc
push
push
or
dec
or
push
imul
out
icebp
xchg
sbb
mov
cli
cld
push
push
pop
mov
or
sub
add
jl
scas
leave
xchg
aaa
xchg
jmp
loop
in
test
shrl
lcall
cltd
jo
xor
sahf
fwait
push
mov
mov
jle
inc
icebp
mov
mov
js
dec
sub
das
arpl
in
fs
lods
pop
ss
jne
icebp
jo
pop
lret
test
movsl
mov
or
mov
popf
jnp
out
cmp
jl
ljmp
xor
rcll
mov
cmp
mov
mov
push
loope
push
sbb
rcl
ja
pop
test
dec
call
sbb
mov
or
or
pop
adc
loope
pop
pop
add
sahf
scas
adc
cmp
clc
push
stc
sbb
orb
dec
pop
dec
adc
inc
sbb
xchg
inc
mov
lcall
push
push
inc
push
movsb
int3
push
mov
lcall
push
pop
sub
push
xchg
lret
sbb
lret
jge
fistpl
aaa
xchg
lret
sbb
jae
lret
je
addr16
pop
and
movsl
pop
xor
dec
outsb
das
scas
xchg
cmp
mov
adc
lods
and
mov
repnz
lret
enter
mov
sub
das
or
sbb
inc
cs
sbb
insb
lret
lods
sbb
jnp
lret
fdiv
out
xchg
and
or
mov
inc
sub
jb
dec
lahf
sub
cwtl
push
cmp
fwait
xor
leave
movsl
shll
sbb
cmp
sbb
pop
inc
sarb
gs
cmp
in
inc
jl
sbb
popa
mov
sarb
scas
rcrb
xlat
outsl
je
push
pop
xor
leave
jno
ret
insl
rorb
je
mov
push
into
or
jge
jb
push
adc
adc
mov
pop
push
mov
je
sub
and
testl
adc
push
push
sahf
mov
call
cld
mov
xor
sti
outsl
ret
xor
pop
popf
pop
dec
mov
mov
les
loopne
pop
les
movsb
stos
jns
push
adc
scas
xor
pop
movsl
rorl
lods
xor
xchg
push
inc
pop
jbe
jae
adc
leave
into
sub
lods
vpmovmskb
xor
aas
dec
decl
dec
mov
jns
push
sbb
leave
sbb
sub
insb
cmp
cwtl
sub
push
jge
inc
and
or
inc
cmpsb
jmp
add
nop
roll
in
cmc
push
cmp
and
xchg
cmp
inc
divl
cltd
shll
pop
xchg
mov
testl
cmp
les
inc
ficoms
fmuls
xlat
clc
sbb
fs
adc
jns
cmpsb
adc
inc
rcrl
mov
in
and
std
roll
fsts
mov
adc
rcrb
pop
and
lods
xor
push
out
jb
adc
xchg
xor
or
daa
mov
mov
push
les
mov
mov
rclb
jle
aas
mov
inc
in
mov
mov
jnp
xchg
lahf
sbb
pushf
into
push
gs
test
rcl
jl
ret
std
test
dec
add
add
or
shrb
enter
or
es
imul
icebp
int
aaa
jl
dec
lcall
shlb
mov
iret
pop
jecxz
fs
scas
mov
xor
out
stos
repz
fsubrl
xchg
inc
mov
xor
xor
lahf
push
popa
cmp
pop
divl
in
mov
xrelease
sub
cwtl
mov
jae
pop
int3
xor
outsb
mov
popa
adc
cmp
clc
fistpll
scas
outsb
lods
xchg
adc
loopne
movsb
cmp
aas
xchg
into
and
pop
pop
sbb
push
es
and
test
mov
push
call
push
gs
das
jle
xchg
sub
jge
add
in
xor
or
inc
dec
aaa
popa
sbb
nop
dec
loop
jnp
adc
rcr
mov
pop
jns
imul
in
xchg
push
iret
out
pop
add
mov
gs
pop
jns
ss
outsb
aad
pop
push
cmc
or
ret
add
cwtl
mov
jno
test
nop
ud2
stos
mulb
cmpsl
push
adc
and
mov
test
jg
imul
les
mov
int
add
adc
jecxz
in
fisttps
sbb
insl
test
fdivl
aaa
ret
dec
mov
lock
pop
fstps
cmpsl
lock
xor
mov
mov
dec
imul
push
bsr
mov
movsl
mov
ja
xor
dec
mov
ljmp
shrl
xor
adc
rcll
fisubrs
fldenv
push
cli
daa
mov
add
sbb
lock
lds
in
icebp
in
ret
and
iret
psubusw
adc
imull
dec
adc
lret
enter
mov
add
jo
inc
out
mov
out
in
test
cmp
inc
imull
es
xchg
adc
arpl
lds
lods
and
incb
test
popl
ret
adc
mov
or
sahf
cmp
loope
into
xor
or
ja
and
aad
call
mov
rsqrtps
and
popf
data16
mulb
mov
sub
jg
or
stos
jg
pushf
repnz
push
and
cmovns
lds
ret
hlt
xor
aad
mov
data16
sbb
push
xor
jns
aam
dec
mov
jg
fistps
xchg
xor
fildll
sbb
cmpsb
ja
jmp
ss
jg
notb
pop
jae
in
fsub
dec
daa
loope
icebp
and
mov
mov
jns
imul
or
fwait
dec
pop
mov
pop
out
sbbl
iret
jg,pt
mov
inc
xchg
jecxz
out
das
pop
push
pop
mov
inc
jg
sarb
int
cmp
shl
loope
mov
ja
mull
test
cwtl
xor
incl
sbb
push
dec
outsl
and
ss
test
inc
cmc
rolb
push
add
rcrb
push
push
sti
repnz
sbbl
and
xlat
sarl
inc
daa
pushf
std
cli
add
mov
xor
adc
je
into
jno
ror
mov
xor
data16
sub
cmp
out
outsb
cmp
mov
cwtl
rclb
pop
cmpsb
add
std
xchg
repz
mov
fbstp
bswap
xor
in
jl
adc
jmp
scas
cmpsl
sbb
test
js
xor
out
outsb
lods
xor
or
add
stos
dec
les
add
popf
inc
inc
stos
push
adcl
cmp
mov
xor
ret
push
cmp
push
lret
pop
mov
sar
dec
ret
pop
dec
inc
shl
icebp
lret
scas
lds
mov
out
pop
adc
stc
or
loop
or
mov
sub
push
stc
out
mov
pop
testl
addb
add
mov
shr
shl
sub
mov
adc
mov
loope
fisubl
mov
add
bound
push
cmp
out
dec
cs
icebp
int3
enter
daa
aad
pop
ja
push
es
pop
sbb
bound
jbe
mov
add
mov
sbb
int
shlb
iret
xorl
push
loopne
lock
js
cli
pop
es
and
mov
lea
push
mov
pop
cmp
in
xchg
sub
cmpsb
dec
nop
push
aaa
lcall
cs
aaa
es
push
fdivs
xlat
out
out
push
cmp
adc
bound
xchg
adc
push
imulb
aad
xchg
clc
imul
enter
repz
cs
mov
xchg
jle
cwtl
mov
scas
rclb
adc
enter
and
insl
dec
and
push
push
aad
jns
cwtl
or
mov
ljmp
cs
jno
jg
pop
add
dec
das
sub
jns
sahf
xor
dec
xchg
cmp
adc
dec
lret
loop
jno
ficoml
dec
mov
insl
add
inc
mov
pushf
or
mov
js
mov
fimull
shlb
lds
mov
jnp
sub
pop
cmpxchg8b
jno
jl
sbb
insl
cli
or
jmp
pop
xchg
ficoms
mov
push
sbb
fdiv
jg
or
fstpl
loop
push
mov
outsb
mov
sub
pop
jb
xor
jne
jge
aas
dec
cs
jnp
fs
cmpsb
sub
inc
sub
add
mov
test
xchg
adc
cmp
push
sbb
mov
stos
and
sub
bnd
pop
loopne
test
imul
pause
sti
fimull
mov
nop
inc
leave
mov
scas
fst
sub
mov
lcall
loop
xchg
imul
loope
dec
sbb
fadd
lea
lret
pusha
lods
xchg
push
aas
insl
test
mov
xchg
imul
xor
ret
sub
out
sahf
inc
std
popf
jl
jge
pop
mov
pop
repz
fwait
dec
jmp
add
add
fldt
lahf
and
or
out
sbb
push
dec
lods
aam
cmp
sbb
xchg
lret
jns
cld
shrl
jbe
mov
xor
dec
and
lods
scas
dec
movsb
pop
mov
or
pop
add
inc
nop
jnp
gs
pop
mov
les
push
push
sub
lods
sub
fsubs
cmpsl
mov
outsb
adcb
js
mov
movb
mov
fcomps
adc
aaa
test
or
cmp
loop
repz
in
mov
mov
mov
push
inc
mov
or
shlb
std
jecxz
cmc
jmp
int3
inc
in
dec
cmp
and
and
mov
jmp
pop
mov
mov
out
insl
nop
dec
xor
push
add
shlb
or
mov
xchg
push
repnz
in
adc
cmp
cwtl
pop
xchg
xchg
cmp
push
sub
lahf
ret
mov
push
fdivl
push
lahf
aam
push
ja
push
jle
pop
stos
popa
cmp
and
das
jg
adc
lods
mov
lret
or
pop
dec
jp
ficomps
add
cli
lea
out
pop
jp
cmp
jae
mov
push
adc
movsb
and
push
inc
cmc
insl
sub
xchg
pushf
hlt
jecxz
or
mov
inc
aam
mov
sbb
repz
inc
mov
cs
sub
mov
pusha
shlb
sub
std
push
adc
dec
mov
cs
adc
les
or
xchg
jg
leave
lods
cmpsb
das
add
xchg
mov
jns
outsb
mov
js
dec
lods
test
lahf
push
pop
in
in
mov
jg
outsl
dec
or
mov
popf
and
scas
addr16
pop
divl
data16
loopne
pop
sbb
movsl
sub
mov
fisubrl
pop
xchg
jmp
int
scas
pushf
ficomps
cmp
into
stos
dec
mov
or
ja
mov
sbbl
add
fbld
out
adc
mov
cltd
cld
dec
cmpsb
pop
or
mov
inc
in
add
xor
cld
sub
das
sub
sub
inc
in
out
xchg
adc
icebp
inc
fdivrl
outsb
mov
mov
or
imul
cmpsl
inc
insb
je
insl
popf
outsl
xchg
xchg
mov
fdiv
test
fiadds
xor
push
loop
cmp
imul
movb
mov
fistpl
loopne
mov
in
push
jmp
mov
mov
lock
out
pop
ss
push
test
test
mov
ljmp
rorl
outsb
push
and
cmp
ficoms
inc
adc
jg
es
js
mov
push
and
mov
add
xchg
mov
out
or
dec
nop
int3
into
and
shlb
jle
test
add
test
adcb
enter
xor
dec
lret
mulb
aas
sti
ss
mov
sub
jle
clc
xchg
xor
jns
mov
xchg
dec
pop
dec
xchg
jl
push
xor
adcb
jno
xor
pop
adc
push
mov
adc
mov
cwtl
mov
aas
test
bound
addl
cmp
xchg
add
fadd
nop
add
movsl
mov
decb
cs
pushf
scas
push
adc
aaa
subb
and
js
test
jo
dec
inc
dec
loope
pop
addr16
jmp
xor
adc
push
clc
lds
subl
jl
cs
xor
mov
pop
loop
loope
out
inc
dec
push
add
xchg
cltd
addl
cmp
pop
and
sub
das
add
pop
sub
cmpsl
and
mov
inc
jo
cmp
notl
pop
pusha
jb
imul
or
lock
dec
dec
imul
cmp
fcmovnbe
es
movsl
enter
xchg
scas
or
jl
lcall
jp
in
cs
sub
subl
icebp
jle
ljmp
push
sub
les
add
cmpsb
into
in
pop
das
nop
int
add
push
xchg
fnstsw
jmp
xchg
and
stc
arpl
inc
fst
pop
or
addl
popa
and
pop
ja
icebp
mov
shrl
push
mov
leave
xchg
pop
jo
mov
test
sub
sarb
xchg
cmpsl
mov
and
xchg
xchg
push
incl
mov
dec
jne
or
cmp
cltd
lods
scas
dec
jmp
cmp
xchg
adc
stc
into
pop
mov
cmp
xchg
cld
movsb
sarl
lahf
adc
add
or
pop
mov
cmpsb
mov
pusha
lea
cli
divl
or
mov
and
shlb
jbe
adc
es
dec
or
and
out
int3
hlt
pop
loope
inc
out
dec
movsl
sub
in
mov
stos
mov
mov
aas
cmp
adc
icebp
lcall
inc
jge
push
dec
mov
imul
inc
mov
inc
push
loop
cmp
out
add
adc
mov
and
ss
lcall
inc
xlat
dec
xchg
pop
gs
mov
in
and
xor
test
mov
loop
rclb
pop
lcall
adc
jle
lods
mov
test
popa
dec
cmp
andl
mov
test
je
cmp
shr
inc
cmp
popa
dec
push
andnps
shrb
icebp
xchg
push
repz
stc
cmp
and
sbbb
lcall
add
mov
xchg
mov
jnp
rcr
shlb
and
or
fisubl
ret
cli
cmp
sub
adc
dec
lcall
testb
daa
out
and
adcb
pop
out
js
scas
mov
mov
in
adc
inc
sbb
sbb
cltd
dec
or
xchg
xor
movsl
mov
fdivs
mov
pop
mov
mov
mov
and
mov
scas
dec
push
xchg
inc
and
adc
push
cld
push
inc
sbb
insl
shrb
ret
les
je
jbe
or
and
adc
dec
or
mov
mov
fsubs
popa
ljmp
cs
sahf
mov
or
xor
mov
lret
jmp
push
sub
push
xchg
mov
or
or
sti
outsb
out
cltd
mov
out
adc
mov
sub
sarb
imul
push
outsl
pop
test
jae
push
jae
xchg
mov
mov
jb
out
dec
daa
jl
lods
daa
movsb
xor
xchg
call
dec
push
cmpsl
mov
push
adc
cmp
stos
adc
stos
add
notl
or
call
lret
xor
sbb
ret
inc
ss
cmc
push
jmp
inc
lret
xchg
addr16
mov
mov
push
aas
outsl
pop
mov
in
sbb
adc
add
cld
cmp
cmc
adc
hlt
mov
jmp
push
jbe
mov
add
lcall
test
and
cli
insl
idivl
arpl
add
sub
pushf
jnp
xlat
into
stos
fsubr
mov
jns
sub
cmp
sbb
add
jmp
pop
shlb
add
adc
adc
hlt
pop
imul
les
xchg
jge
idiv
or
js
jae
cmpsb
jl
pop
xor
std
ss
add
sub
cltd
mov
in
adc
mov
push
lret
adc
rcrl
sub
xchg
mov
push
ss
jno
fidivrs
out
pushf
dec
cltd
inc
xchg
add
mov
pop
andb
and
push
ja
or
cmp
push
into
popa
shll
clc
sbb
and
int3
ljmp
jb
push
pop
sbb
or
inc
test
int
notl
movsb
stos
ret
test
sbb
lcall
and
and
ret
sub
orb
inc
add
iret
jo
pop
mov
fidivrs
xlat
test
xor
mov
cmp
dec
lods
sub
mov
movsb
mov
scas
mov
loope
in
xor
sub
mov
push
sbb
xor
sti
mov
rcll
inc
lea
lcall
xchg
cmc
imul
movsb
push
dec
in
push
mov
mov
stos
sub
scas
jle
mov
and
cmp
aaa
push
je
adc
fcomps
stc
lahf
jl
stos
loop
push
enter
int
inc
sbb
dec
jno
in
or
push
jge
insb
jmp
lcall
stos
rolb
mov
pop
out
insb
inc
jp
add
cmp
sub
stos
cmp
cltd
fwait
stos
mov
push
jmp
nop
in
adc
cmpb
icebp
jno
mov
add
test
rcll
vunpcklps
test
sbb
sbb
adc
incl
das
dec
xor
mov
add
jmp
in
mov
xchg
ljmp
mov
les
mov
sbb
scas
jp
ss
pop
mov
stc
push
popa
mov
pop
stc
addr16
loopne
lahf
mov
sub
ds
hlt
jecxz
imul
outsl
dec
jo
inc
fs
mov
pop
cmp
and
pop
pop
arpl
jmp
addr16
js
adc
mov
pushf
and
mov
fidivrs
or
ss
rcll
jmp
xchg
dec
cmp
and
popf
cmp
lods
mov
and
mov
jg
cmc
mov
sbb
adc
stc
fistl
loop
nop
jle
cmp
in
sbb
jns
add
inc
fnstcw
sub
dec
fldl
mov
mov
mov
and
lret
les
xlat
mov
jae
xor
psubusw
sbb
inc
jbe,pt
and
outsb
mov
xchg
push
push
lds
decl
mov
jne
loop
movsl
pop
clc
popf
repnz
xorl
or
gs
outsb
shrl
jno
pusha
adc
fs
xor
dec
mov
xchg
or
jg
adc
iret
in
ret
mov
popa
sbb
in
sub
aaa
enter
mov
pop
int3
jnp
mov
aam
out
ja
inc
pop
les
int
rcrl
out
sbb
mov
test
inc
cmp
in
mov
ffree
mov
repz
pop
sub
mov
insb
ljmp
jo
pop
push
dec
lods
pusha
inc
mov
jno
popf
les
mull
pop
pop
inc
imul
cmp
test
lods
mov
push
and
ds
and
repnz
jne
mov
cmp
stos
adc
push
mov
nop
lods
mov
or
sbb
pushl
adc
outsl
add
mov
jae
dec
clc
mov
mov
mov
cmp
in
cmp
jo
ja
jp
jp
rol
out
mov
and
lret
push
push
mov
or
popa
sub
jle
push
inc
rorl
sbbb
loopne
dec
rol
lock
fiadds
inc
repnz
sub
and
push
mov
or
xor
inc
out
xchg
loopne
daa
daa
in
mov
call
ds
dec
out
cmpsl
inc
mov
test
into
pop
mov
mov
jle
xor
das
mov
fcoml
call
imul
xchg
jg
jnp
jg
xorl
pop
fstp
ret
aas
fcoml
insb
fildl
jge
fwait
repz
push
std
dec
shlb
and
push
fcmovb
xor
add
xchg
sbb
inc
xchg
or
lds
mov
add
out
out
shll
scas
js
or
movsl
or
mov
jne
shll
cmpsb
insw
testl
xchg
addl
stos
sti
notl
push
insb
adc
lds
xchg
inc
pop
and
lahf
cmp
ret
lahf
push
sub
dec
fadds
call
dec
sbb
pop
popa
and
repz
sub
and
dec
fwait
fwait
jbe
dec
mov
cli
int3
pop
jl
mov
loope
sub
mov
jg
pop
mov
pusha
cmp
mov
cmp
cmc
mov
leave
jmp
jmp
dec
mov
sbb
mov
inc
sbb
cs
aaa
stos
cs
mov
xchg
outsl
jg
mov
sbb
dec
push
stos
sarb
out
ret
mov
cmpsb
lea
sarb
lods
inc
aaa
or
jbe
sti
mov
lods
sbb
xchg
dec
adc
std
sbb
xchg
clc
and
and
push
jmp
and
and
iret
ss
jle
xchg
test
adc
xchg
ja
clc
mov
cmp
mov
sbb
int3
mov
push
jmp
sbb
add
add
push
inc
out
or
or
mov
int
xchg
mov
es
or
add
jl
push
sbb
jp
push
xor
xchg
inc
movsl
jp
orl
fprem1
mov
or
test
pop
mov
cwtl
into
or
ja
cld
pop
cmp
movsl
mov
mov
insb
or
cltd
mov
jns
sbb
cmp
xor
cs
test
aam
cmpsb
mov
je
incb
clc
mov
in
inc
mov
add
sbb
dec
cli
xchg
cmp
ret
fsubs
mov
xchg
xchg
inc
sub
stc
lret
jnp
mov
test
or
das
aaa
xor
loopne
push
xchg
xor
xchg
push
stos
sbb
and
outsl
pop
cltd
cltd
xchg
mov
stos
subl
repz
sub
inc
add
or
add
lea
das
cmp
add
insl
popa
sub
outsb
or
daa
or
inc
xchg
fsubs
cmp
cmpsl
jp
cmp
mov
sub
test
stos
aaa
std
loop
sub
lret
mov
lods
mov
sbb
rcr
pop
push
fisubrl
cmpsl
adc
ret
lods
xchg
lea
pop
insb
pop
loopne
push
mov
movsb
cmpsl
xor
fs
fs
fisubl
in
inc
pop
flds
mov
or
out
dec
or
mov
push
fcmovnb
adc
gs
jp
pop
dec
lea
xor
inc
mov
jo
out
test
js
loop
adc
in
jecxz
pusha
arpl
cmpb
std
xchg
xor
mov
mov
mov
sbb
dec
popf
mov
out
pop
ljmp
lahf
xor
dec
jl
pop
dec
xor
fiaddl
pop
lds
push
push
daa
lret
cmpsb
xchg
es
xchg
jnp
dec
data16
add
in
cmc
or
sahf
push
cmpsb
mov
into
jecxz
in
out
std
pop
pop
in
in
test
fcomps
scas
mov
adc
loop
jmp
in
xor
ljmp
jbe
aas
dec
fsub
sbb
sahf
fldenv
lcall
rclb
xchg
outsb
sbb
push
clc
jl
pop
ja,pn
dec
inc
lret
popa
ss
pop
jne
mov
cmp
out
pop
aam
sub
pop
popl
adc
mov
rclb
add
sbb
enterw
in
add
insl
hlt
push
bound
ja
aad
loope
push
and
fdivr
icebp
into
rorb
sub
cs
sbb
xor
sti
mov
dec
arpl
inc
push
jmp
shlb
dec
inc
fldcw
sbb
aaa
jne
dec
pop
mov
sbb
divb
popa
jecxz
jecxz
dec
adc
loop
fiadds
arpl
xchg
mov
ljmp
sbb
cmc
jg
push
mov
aam
mov
dec
jno
fs
pop
rolb
or
lea
rolb
cwtl
lods
cmp
hlt
cmc
jno
inc
and
sbb
sub
loopne
ficomps
jmp
xchg
adc
ja
js
cmp
dec
mov
mov
pop
push
xchg
cmp
dec
cmp
fwait
cmp
test
test
jb
imull
xchg
sub
aas
pop
ss
xchg
inc
les
inc
cmp
push
sub
mov
daa
ds
fs
test
ds
pop
std
stos
lods
hlt
insl
jge
add
xchg
hlt
dec
icebp
ret
add
fwait
notl
mov
ja
xchg
ds
xor
inc
dec
or
push
lret
scas
test
lret
adc
sbb
cmp
xchg
andb
dec
mov
je
mov
mov
scas
fidivs
jns
fadd
add
adc
xchg
lea
out
jge
stc
mov
dec
mov
mov
das
ret
mov
lcall
mov
ficompl
test
xor
push
dec
dec
sub
pushf
and
mov
insb
add
fdivr
xor
sub
cmp
testb
ret
hlt
in
das
and
scas
xor
dec
push
pop
aaa
inc
mov
mov
sbb
push
rcrb
pop
les
mov
mov
dec
sbb
xchg
std
lahf
aas
int
inc
lds
stc
push
loopne
aaa
add
fcmovb
in
mov
imul
addb
jns
pusha
xor
mov
sbb
ss
cmp
mov
jecxz
dec
nop
fsubs
xor
jae
insl
adc
dec
or
cmp
xchg
sarl
test
pop
sub
in
popa
fidivrl
or
stc
mov
inc
shlb
cwtl
ja
sahf
ja
sqrtps
dec
xchg
in
dec
jg
and
push
popa
or
test
daa
scas
ss
popl
lds
mov
outsl
loop
test
inc
push
or
out
call
mov
xor
xor
dec
and
ss
mov
andw
lds
lds
jb
fsubrl
push
lea
push
jne
lcall
pop
or
xor
inc
ret
cmp
cli
pop
rorb
xor
push
aad
add
adc
fcompl
test
ds
cmp
or
and
stos
xchg
rolb
shrl
dec
dec
mov
iret
add
cld
xlat
leave
or
test
das
jecxz
xor
push
std
ds
pop
aad
mov
mov
iret
cmpsb
push
mov
mov
adc
add
stos
int
mov
xchg
pop
aaa
stos
inc
stos
ficoms
sbb
cmp
lret
outsb
add
stos
sbb
aam
test
pop
data16
icebp
sub
shl
cmpsl
aas
and
inc
add
jae
pop
mov
mov
imul
xor
or
sahf
imul
cmp
enter
cmpsl
insb
jle
jno
adc
xlat
pop
call
out
or
aam
add
rcr
xor
adc
mov
mov
cwtl
jge
pop
lret
mov
pop
dec
inc
push
mov
xchg
lock
add
cmp
lock
hlt
jge
sahf
fisubrl
das
cmpsl
cmp
mov
mov
pushf
roll
pcmpeqb
jle
cs
push
faddl
insb
sarb
je
or
push
repz
loope
test
sub
push
mov
lret
adc
lods
or
jmp
xlat
in
int3
loope
jae
movsb
xchg
xor
dec
addr16
mov
iret
add
and
fwait
mov
push
imul
push
int3
ja
push
lock
add
movsl
pushf
sub
push
and
xchg
das
ds
fcomp
sbb
xor
jecxz
ret
mov
call
mov
lock
sub
outsb
adc
push
pop
mov
ficompl
xchg
xchg
scas
fisubs
cmp
push
inc
xchg
int3
mov
cli
cs
in
or
adc
cli
xor
loopne
jae
push
js
ud1
lods
push
cmp
lahf
cmp
pop
dec
xor
xchg
fildl
and
insb
fwait
sbb
sbb
mov
test
int
cmp
pop
ja
nop
testb
lret
hlt
sub
pop
add
pop
xor
mov
pop
xchg
mov
push
pop
adc
mov
jns
loop
xchg
jo
sarb
xchg
xchg
adc
lret
xor
push
sub
cmpsb
repnz
mov
inc
scas
mov
popl
es
test
cmp
dec
add
push
push
pop
fisttpll
or
scas
jb
pop
data16
dec
xchg
aaa
sahf
ror
ficoms
test
pop
test
cmc
movsl
into
out
sbb
jmp
xlat
aam
jo
and
push
mov
pop
popf
addr16
mov
das
inc
push
mov
adc
cwtl
xchg
sub
sbb
dec
xchg
add
lds
scas
enter
sbb
ja
push
cmp
mov
cmp
in
or
ds
jae
mov
adc
out
inc
ds
cmp
outsb
lds
inc
jge
inc
hlt
aaa
aaa
dec
aad
sub
lcall
in
cmp
and
pop
xchg
mov
ror
xor
sbb
cmpsl
mov
lods
fcompl
cwtl
out
repnz
mull
push
inc
adc
inc
pusha
mov
movsb
jg
cmpsb
clc
cmc
pop
cltd
xchg
pop
fcmovbe
inc
push
movsb
and
inc
sbb
fmulp
xchg
pop
les
lea
add
and
dec
pop
pop
mov
lea
stos
mov
push
lea
rolb
push
xchg
inc
iret
flds
xor
outsb
add
push
sub
mov
push
xchg
inc
fcompl
add
mov
into
push
cmpsl
and
cmc
dec
fs
inc
in
dec
icebp
cwtl
cmp
sahf
in
rcrb
xchg
pop
mov
sub
test
add
push
ror
cmp
aam
mov
mov
in
call
cli
mov
je
sahf
sbb
pop
inc
inc
pop
sub
aaa
aad
jmp
xchg
adc
in
xor
push
or
mov
cmp
jp
aaa
ss
outsb
loop
repz
mov
xor
jmp
pusha
testb
ja
push
inc
fidivs
and
adc
or
ldmxcsr
or
mov
push
sbb
decb
adc
xor
dec
pop
jmp
adc
xor
lods
pop
cmpsl
pop
mov
sbb
arpl
into
cmp
ss
mov
sti
gs
flds
adc
mov
popf
push
arpl
shll
or
adc
sub
push
lret
cli
dec
xchg
mov
out
out
stos
sarb
leave
add
add
ja
test
pop
and
loop
or
push
pop
fldenv
nop
push
and
jg
jle
std
pop
adc
insb
imul
cltd
inc
nop
or
xor
cld
sub
jp
xchg
mov
or
fcmovb
cmp
mov
sbb
mov
xchg
fs
loopne
push
inc
iret
iret
jne
outsb
ficoms
push
and
inc
jnp
ja
push
repnz
mov
cld
lea
add
loope
or
mov
jbe
lcall
jo
sahf
iret
fdivs
notl
xchg
mov
or
scas
lock
sbb
data16
ret
sbb
sbb
pop
pop
pop
bound
sti
imul
arpl
sub
jns
xchg
subl
pusha
lods
fs
push
xor
ficoms
fdivs
bnd
shrb
add
rol
mov
insb
pushf
jecxz
stos
test
mov
cld
fwait
test
bnd
add
dec
rcl
pop
sahf
and
xchg
enter
mov
dec
mov
jp
cmpsb
or
xor
sub
pop
pop
aad
icebp
divl
xlat
mov
scas
push
rcrb
adc
jne
push
inc
js
stos
loop
pop
in
test
pop
add
subl
lret
lret
bound
jns
cmp
sub
sub
dec
jnp
cmpsl
or
add
mov
push
test
sbb
and
push
imul
mov
out
mov
fsubrs
pop
add
scas
cs
and
pushf
nop
lahf
shrl
lods
sub
push
fbstp
cmpb
sub
rorl
push
sahf
stc
mov
or
jo
insb
shlb
fidivrs
jb
push
mov
dec
ucomiss
lea
pop
jmp
dec
pop
mov
ffreep
movsb
jp
adcb
negl
rorl
repnz
lret
enter
stos
inc
fdivrs
sbb
jge
je
sbb
add
cli
enter
sbb
js
push
in
icebp
cld
lcall
pop
push
or
and
push
lret
imul
sub
shlb
shrl
addb
push
fadd
out
adc
xchg
inc
mov
test
in
push
out
mov
andb
pop
mov
jmp
or
repnz
push
fcompl
jns
dec
jne
sub
sub
cmp
push
push
lods
shrb
lahf
inc
dec
fsubr
lahf
fnsave
cmp
mov
inc
inc
add
adcl
out
or
mov
jne
mov
nop
call
sub
mov
xchg
je
mov
iret
rcrb
mov
sbb
xchg
mov
push
pop
sti
sub
jo
fcmovnb
jno
fisttpl
xrelease
lahf
imul
mov
pop
add
mov
in
jns
repz
adc
or
xchg
fs
insb
sbb
lds
or
xlat
pop
push
outsl
addr16
pop
pop
imul
outsb
imul
fadds
flds
or
popl
fwait
and
fsubrp
test
xor
ficoml
mov
pop
xchg
adcb
and
jnp
stc
jnp
add
insl
pushf
das
aad
inc
clc
int3
nop
ljmp
cmpb
xor
add
in
mov
lds
push
out
daa
xor
mov
or
push
mov
call
cmp
sub
lods
cs
imul
sub
adc
out
fistl
cmpsl
shr
jae
fmulp
xchg
cmp
ja
inc
or
loope
rcrb
push
scas
or
add
sbbl
icebp
cmpsl
sbb
pop
andb
mov
lds
jbe
add
mov
loop
dec
pusha
rclb
xchg
xor
dec
stos
fldt
xchg
scas
jbe
mov
add
inc
mov
mov
inc
aad
addr16
arpl
pop
xorb
das
jle
icebp
stos
dec
and
inc
lahf
push
bound
data16
mov
jns
and
add
insl
mov
pop
imul
push
aaa
fisubs
fnsave
popa
add
pop
mov
add
pop
shlb
mov
bound
insb
nop
adc
jecxz
dec
flds
movsb
lods
add
aaa
divl
mov
cmp
in
jge
daa
hlt
in
ja
dec
shrb
and
xor
test
sbbl
push
mov
out
lret
dec
and
divb
repnz
mov
call
lods
and
lea
je
fdivr
xor
fsubrl
mov
mov
pusha
rcl
fwait
mov
cli
or
push
roll
in
mov
idiv
aas
shlb
mov
mov
or
or
imul
pop
loope
iret
popf
add
test
outsb
out
jns
pop
ret
jmp
mov
mov
adc
adc
push
add
fwait
xor
bound
push
scas
cmp
xor
lret
lock
shlb
adcl
aaa
and
movsl
mov
push
xchg
cmc
rcr
add
push
cs
push
xchg
xlat
pop
xchg
adc
mov
mov
pushf
sbb
popa
aad
sbb
aaa
aad
add
jno
mov
ret
push
leave
cmp
jb
mov
add
push
daa
rolb
add
int3
pushf
push
int
mov
in
xchg
pushf
out
mov
dec
out
cld
pop
xchg
lcall
cmc
stc
jne
cld
loopne
insl
loope
xor
sbb
xchg
xchg
lret
mov
add
aad
imull
sbb
jge
outsl
xor
mov
jl
repz
insb
sbb
cmc
arpl
icebp
dec
pop
arpl
push
pop
xor
mov
fdivl
fidivl
mov
out
out
cmp
inc
sbb
jns
scas
hlt
inc
pusha
and
int3
xsha1
cmpsb
iret
push
xor
into
loope
cmp
divb
jo
insb
jno
mov
sbb
les
ss
pushf
sahf
in
adc
sbb
adc
nop
pop
pop
loope
mov
jmp
scas
dec
cli
rclb
fbstp
insb
xchg
xor
push
fimull
jnp
pop
lcall
cltd
xor
pop
shrl
test
and
lahf
outsl
int3
iret
icebp
inc
inc
xor
pop
xchg
mov
fadds
cmp
hlt
cmpsl
pop
sub
push
or
or
mov
std
sbb
push
mov
cmp
inc
and
sbb
cmp
test
outsl
and
test
xlat
stc
pop
dec
sub
lret
cmp
and
inc
mov
and
jb
pop
sub
push
punpckhdq
xor
frstor
dec
dec
push
mov
jo
jbe
mov
lcall
pop
mov
add
idiv
pop
sub
cmp
les
jne
arpl
push
stos
movsb
mov
ficompl
ror
add
sahf
xor
cmp
loopne
inc
lret
loope
mov
adc
sub
mov
mov
test
mov
or
cltd
jns
xor
jmp
xchg
pop
xchg
jge
inc
sbb
and
jge
add
add
push
fwait
or
jbe
sbb
in
inc
push
js
mov
hlt
andb
cwtl
stos
xchg
ret
stc
mov
leave
gs
dec
dec
adc
in
jbe
push
mov
push
arpl
or
add
add
lret
outsl
ds
out
in
xor
push
fiadds
pop
lods
fdivs
popa
mov
shrl
xor
das
dec
sub
in
mov
pop
sti
negl
xor
iret
addl
cli
lea
insb
pop
dec
pop
je
sbb
clc
cwtl
enter
repz
in
inc
dec
sarb
pop
jo
lea
inc
es
movsb
pop
dec
jle
sub
push
cltd
jecxz,pn
add
sub
mov
in
jno
aas
push
in
push
insb
sub
scas
or
add
test
hlt
sti
loopne
andl
add
repz
xor
pop
push
shlb
into
pop
add
xchg
inc
lret
cli
std
and
divl
int3
jae
popa
jl
or
loop
or
cmc
idivl
inc
or
jbe
mov
jge
mov
test
push
jg
out
lea
sti
add
mov
cmpsl
stos
sub
adc
outsb
sbb
pop
int3
clc
imul
inc
movsl
mov
xchg
pop
mov
pop
mov
lret
sub
push
add
pop
add
sti
mov
imul
insl
inc
inc
xchg
jo
push
sub
cltd
fsin
shr
outsb
mov
adc
flds
add
push
and
xor
sarl
push
mov
cmovnp
mov
push
sbb
xor
xchg
bnd
lea
push
mov
jne
notl
mov
idivl
in
mov
add
cmp
test
les
popa
movsl
sbb
or
and
jo
push
cmp
inc
dec
mov
out
mov
aam
insl
int3
pusha
inc
es
shlb
mov
add
add
mov
push
mov
sti
pushf
in
popf
xchg
xor
scas
subl
aas
scas
pop
gs
xor
add
sub
incl
je
in
ds
ljmp
mov
push
pop
subl
fidivrs
jnp
cmp
add
mov
movsl
dec
adc
dec
lar
in
pop
fstpl
loop
aas
and
fs
cmp
or
or
rcll
cmp
cmp
mov
push
leave
pop
daa
movsl
mov
stc
add
xchg
sbb
sar
push
sahf
pop
out
addr16
aas
loopne
inc
dec
nop
and
out
aas
ret
aad
rcrl
int3
clc
pop
arpl
xchg
xchg
jg
push
mov
mov
mov
lret
sub
andb
cmp
dec
xor
push
fildl
or
adc
ficoms
outsl
pop
dec
dec
pop
mov
xor
int
add
xchg
add
dec
jmp
cmp
shl
xor
sbb
push
xor
ja
jge
or
aas
xor
xchg
rorl
push
xor
or
sahf
xchg
lret
xchg
outsb
cwtl
dec
jae
push
xor
pop
sub
je
inc
push
jg
fisttpl
jle
push
inc
add
shr
fidivrl
or
aad
sbb
or
mov
pop
push
xor
sbb
push
mov
ljmp
mov
pop
and
mov
jno
pusha
pop
js
xchg
aam
cmovns
fwait
push
fwait
or
imul
xchg
xchg
sbb
in
mov
cmpsl
lea
repz
sbb
jl
add
xchg
in
dec
sbb
popf
cwtl
xchg
jo
dec
jb
xchg
out
add
in
push
mov
jnp
jge,pn
sbb
fs
dec
mov
dec
lea
dec
or
cltd
xchg
scas
bound
sub
xor
add
mov
inc
mov
or
into
cmp
inc
sub
mov
xor
pop
push
jbe
inc
push
mov
out
aas
add
inc
push
rdmsr
orb
sbb
leave
rcrb
push
mov
cmp
or
je
popa
inc
and
loop
cli
fdivrl
inc
or
stos
enter
rcrl
mov
movsb
sub
out
das
movsb
nop
mov
outsb
cmc
lret
data16
dec
sbb
imul
adc
outsb
jne
xchg
xchg
add
xchg
mov
arpl
addr16
fcompl
negb
inc
mov
int3
mov
ror
xor
imul
dec
or
lock
adc
rorb
xor
mov
xor
enter
fistl
faddl
imul
jmp
and
mov
fwait
cmp
mov
adc
push
sbb
cmp
mov
in
push
inc
add
movsb
enter
xor
and
out
int3
shl
add
subb
dec
mov
rorl
lcall
out
shrb
out
call
mov
sub
xchg
mov
mov
in
sar
inc
dec
test
popf
pop
sub
mov
xor
ds
xchg
jp
insb
popa
pop
add
sub
cs
test
ficomps
lret
int3
jae
testl
icebp
imul
out
sub
stc
jb
cltd
jmp
outsb
xchg
xor
test
cmp
aad
shll
jle
lahf
stos
cmc
xor
mov
cld
lea
ja
mov
imul
mov
cwtl
in
test
push
mov
push
sbb
test
in
gs
movsl
icebp
sbb
xor
pop
outsl
lods
dec
jb
stc
add
enter
mov
jno
push
lods
jecxz
cmpsl
loopne
add
mov
clc
mov
and
mov
add
ret
or
adc
flds
icebp
dec
sbb
leave
jge
xchg
idivb
push
jecxz
das
cld
mov
jne
outsb
gs
xorl
xchg
xchg
push
dec
data16
ret
jl
push
int
mov
std
aam
ljmp
pop
or
mov
bnd
push
inc
ret
sub
cld
pop
cmp
sti
in
insl
mov
jg
addr16
std
pop
and
jmp
aam
cmpsb
daa
faddp
and
pop
adc
add
fwait
push
addl
mov
daa
int3
and
rcl
inc
lods
adc
nop
push
sub
adc
jge
outsb
mov
scas
test
call
das
jne
inc
enter
sbb
xlat
jbe
dec
cltd
jne
das
jns
mov
rorl
mov
aaa
dec
test
sbb
mov
mov
xor
xchg
or
adc
cmp
sbb
int3
rcrl
xchg
insl
push
es
subb
sbb
and
mov
jnp
push
mov
das
decl
dec
xor
loopne
insl
adc
xchg
mov
cwtl
sub
add
stos
ret
sbb
out
pop
xchg
add
pop
sahf
gs
movsb
dec
imul
ja
cmp
adc
and
cmp
mov
and
sbb
sub
roll
jg
dec
js
cmp
scas
fdivrs
jmp
stc
adc
dec
sti
aad
stos
popf
aam
lods
pop
add
rcrb
test
jecxz
stc
xchg
je
in
fisttpl
sub
xor
shll
push
jno
sub
rcl
in
push
xor
push
stos
pop
xor
test
and
lds
mov
push
cltd
cld
xchg
mov
cmp
adc
sbb
mov
ss
jp
sti
mov
cmc
xchg
pop
and
xor
ljmp
dec
int
add
dec
adc
fldcw
xor
das
jmp
sti
aas
cmpsb
pop
mov
fs
push
call
in
repnz
nop
mov
mov
mov
mov
pushf
outsb
xor
movsb
fimuls
lret
fwait
or
dec
js
in
jb
sysenter
mov
xchg
add
pop
fisubs
inc
inc
cmp
fldt
or
mov
insl
xor
cmpl
popf
fld
push
stc
add
or
dec
inc
pop
adc
mov
cmp
js
ret
stc
mov
leave
mov
inc
adc
roll
insb
add
push
push
es
imul
push
popf
std
push
push
push
scas
add
insb
out
push
icebp
add
call
scas
cwtl
sti
lcall
mov
mov
cmp
lds
inc
cs
xchg
jnp,pn
fucom
or
xchg
cmp
cli
xor
dec
push
es
dec
add
fwait
aaa
jns
mov
cmp
fxch
pop
jl
aas
jns
sbb
mov
pop
andb
sub
push
ret
mov
mov
scas
out
jnp
cmp
inc
pop
clc
mov
adc
addr16
jae
sbb
cmp
repz
adc
in
sub
and
fdivp
outsb
sub
out
mov
add
hlt
mov
stos
lret
stos
and
jne
jne
add
sbb
jp
data16
bound
mov
and
cmovo
in
std
scas
and
clc
add
mov
imul
pop
mov
sbb
inc
mov
inc
add
out
cld
pop
mov
je
out
mov
mov
push
adc
test
mov
movsl
jns
inc
xchg
mov
lds
js
xor
xchg
mov
stos
pop
xchg
sub
jle
adc
in
mov
pop
sbb
pop
loop
sub
pop
mov
adc
fs
shll
mov
cs
sbb
mov
ljmp
stos
ret
andb
and
adc
mov
dec
push
cltd
inc
repz
xchg
shl
int
xchg
popf
ret
mov
mov
outsb
aad
jl
dec
mov
clc
jns
ret
xor
sbb
sub
movsb
xchg
mov
mov
sti
aam
out
rcl
int
dec
loopne
pushf
jmp
jne
andb
int
je
mov
outsb
push
and
gs
pop
pop
fwait
icebp
test
jecxz
jmp
sbb
hlt
push
mov
push
mov
sub
out
mov
add
das
xor
pusha
mov
std
mov
js
call
aad
shlb
jno
jl
xor
pop
mov
or
movsb
ret
stc
jne
adc
dec
dec
scas
adc
pop
mov
mov
dec
cmp
mov
inc
pop
xor
inc
sarb
mov
addr16
js
je
jp
popa
and
pop
movsl
mov
sarl
push
test
inc
fcompp
cmpsb
inc
and
xor
mov
jbe
insb
inc
lock
xor
ret
iret
inc
loop
push
mov
xor
fldcw
cmp
rorb
scas
mov
inc
mov
sub
std
gs
mov
mov
push
dec
out
cmp
scas
pop
push
push
jmp
lods
movsl
orb
stos
jl
adc
ja
jbe
mov
pop
xor
mov
xchg
sbb
mov
rcrl
cmc
cmpsl
in
testl
or
pushl
test
imul
adc
push
xor
test
sub
fwait
insb
mov
jl
aaa
sub
add
and
xor
adc
dec
scas
in
lods
push
out
popl
or
cmpl
outsb
lret
dec
data16
imul
dec
jmp
pop
and
cmp
cld
xchg
cltd
adc
adc
inc
jmp
xor
jle
push
cmp
pop
cmp
mov
pop
ljmp
sarl
lock
mov
mov
loop
lcall
scas
mov
out
jno
and
dec
mov
fisttpll
and
imull
fcomps
clc
pop
clc
rolb
inc
xchg
mov
pop
cmp
jno
roll
sbb
aas
inc
test
xchg
or
js
inc
add
das
ret
adc
sbb
mov
arpl
sbbl
pop
call
icebp
decb
fwait
stos
push
or
jg
leave
pop
push
xchg
outsb
pusha
mov
dec
aaa
dec
stos
std
loope
push
xchg
inc
mov
aaa
mov
das
lea
addr16
testl
outsb
ja
iret
adc
xchg
jae
adc
pusha
cmp
mov
jl
xor
dec
push
sub
sbbl
mov
dec
adc
lods
mov
testl
je
idivl
imul
gs
imul
fidivrl
in
sbb
push
adc
jl
xor
jo
dec
and
push
push
daa
jmp
inc
mov
ljmp
adc
cmp
shlb
sahf
aas
jg
and
jb
shrb
and
jecxz
mov
fidivs
jmp
repz
or
and
pushf
aaa
xchg
shll
imul
inc
mov
ror
xchg
jnp
mov
nop
mov
dec
mov
int
mov
push
and
sbb
dec
insl
lock
xadd
or
mov
in
pop
test
scas
xchg
mov
dec
cmpsl
inc
cmc
imul
cli
jl
push
mov
dec
mov
push
cmp
push
sub
stos
outsl
stos
inc
loope
popf
int3
pop
cmp
mov
repz
xor
cs
sub
repnz
movsb
adc
arpl
cmp
mov
pop
push
sbbl
in
or
mov
xor
sar
std
outsb
rcll
lcall
jle
in
xchg
cld
inc
insl
adc
jge
push
adc
mov
xchg
and
xorb
jbe
jge
xchg
mov
add
push
sub
stos
and
push
pop
lds
pop
sbb
mov
test
jmp
fcmovu
inc
icebp
repnz
fsts
push
orl
jle
ret
stos
push
bound
jo
sbb
fcoms
and
inc
xchg
cmpsl
imul
jbe
jo
popa
sarb
stc
jl
imul
jns
push
inc
sbb
lahf
orb
loop
mov
and
pop
ljmp
loop
fsts
dec
shrl
cli
cmp
mov
mov
mov
jecxz
inc
pop
in
jb
mul
mov
cwtl
iret
adc
fidivl
push
pop
clc
jbe
pop
jle
aas
cmc
push
inc
popa
imull
repnz
test
inc
or
xchg
andb
mov
push
ja
sub
bound
fistpll
cmpsl
out
and
mov
inc
jmp
xor
dec
mov
and
sub
in
stos
js
test
test
popf
push
loopne
or
inc
fst
mov
and
mov
xchg
in
and
inc
mov
test
push
xchg
lods
and
sub
pop
dec
movsb
sbb
cwtl
loopne
pop
js
ret
out
inc
mov
and
jnp
leave
rcr
jno
push
in
mov
es
push
testl
insb
xchg
sbbb
andb
xlat
scas
sub
xchg
pop
pop
adc
jns
add
ret
inc
add
jecxz
cmp
rcrl
andnps
pop
ds
mov
push
outsb
in
cmpsb
xchg
cmp
scas
mov
out
imul
aas
aam
fnsave
and
xor
xlat
mov
push
pop
adc
add
in
or
xor
das
sub
jl
inc
jmp
sbbb
pop
mov
stc
adc
repz
push
shll
dec
in
sbb
xor
fsubrs
jnp
dec
cmp
test
adc
and
shlb
popa
int
jnp
pop
cs
popa
mov
mov
mov
lea
push
fs
fimuls
es
lock
jae
arpl
and
idivl
sbb
scas
mov
ret
test
add
fcoms
test
pop
xlat
pop
xchg
sub
jbe
cli
mov
mov
dec
jns
es
cmpl
repnz
and
jb
add
mov
movsl
pop
call
test
mov
sbb
adc
mov
test
sbbl
hlt
mov
jge
inc
cwtl
mov
mov
pop
cmpsl
scas
cmp
jo
pushf
mov
xor
fildll
sub
add
xchg
jo
xchg
push
lcall
jecxz
ss
inc
jmp
ret
roll
sub
hlt
jno
or
orb
pop
cmp
pop
insl
bound
iret
pop
mov
xchg
scas
push
repnz
jmp
inc
repz
pop
sbb
dec
decl
cltd
xchg
xchg
stos
popf
insl
incb
clc
outsl
jle
push
push
loopne
push
push
lods
mov
jo
cltd
and
xchg
push
xor
nop
lret
adc
pop
ret
xchg
push
pop
rcl
pop
stos
aad
insl
imul
lds
cmp
dec
pop
xor
cmp
in
adc
xchg
dec
js
lods
jno
subl
mov
or
cwtl
pushf
fistpl
subl
pop
jno
or
sub
fisubs
inc
testb
mov
xor
enter
xor
jge
mov
push
push
pop
out
pop
fnstsw
push
scas
and
test
mov
mov
sub
add
pop
lods
jb
jne
and
sbb
leave
jecxz
mov
inc
fnstenv
fisttpl
sub
xchg
dec
xchg
or
dec
push
cmpb
pop
inc
fmuls
cld
popl
mov
jbe
pop
fcomps
insb
out
popf
push
dec
dec
shrl
inc
ret
mov
sahf
jmp
cmp
int
adc
out
aas
push
inc
inc
stc
sub
lds
push
inc
jo
lret
inc
cmpsb
sbb
and
and
and
push
pop
fisubl
or
mov
out
xchg
aaa
mov
loopne
xor
jl
pop
in
cmpsb
pop
adc
test
sbb
fisubrs
test
rorb
data16
mov
jns
aam
lcall
inc
movsb
cmc
push
out
mov
lods
lods
xchg
dec
xor
pop
stos
inc
pop
gs
ljmp
adc
fistpl
lods
cli
incb
adcb
cmpsl
rcr
or
test
xchg
pop
jb
cmpsl
inc
push
lret
shr
lds
in
jae
mov
sub
sub
outsl
and
repz
or
xor
adc
mov
scas
pop
out
mov
mov
scas
inc
cmpsl
in
or
jecxz
fwait
jno
mov
cmc
loopne
cmp
mov
mov
mov
test
test
xor
dec
lods
scas
xor
cmp
jmp
xor
sub
or
push
inc
das
shll
xchg
cmp
hlt
popl
shl
subb
cmp
mov
std
mov
mov
mov
cli
ds
push
push
mov
icebp
and
into
inc
mov
sub
shlb
iret
push
ljmp
repz
adc
xchg
and
inc
leave
cmpsb
sarb
push
push
pusha
mov
out
dec
call
pop
cmp
and
sub
xlat
cltd
aad
cs
add
fcmovne
inc
jp
loop
pusha
pop
shlb
push
mov
mov
std
and
sub
lret
jno
xor
or
test
xchg
jns
pop
xorl
jns
lea
cmpsl
push
mov
mov
sub
shr
mov
mov
pop
js
jb
or
insl
cli
adcl
sub
pop
xor
pop
ss
les
loop
cmp
popa
xchg
mov
fildl
call
clc
fsub
mov
pop
and
adc
test
bound
arpl
sub
add
push
jle
add
add
add
mov
mov
ret
mov
icebp
add
cmp
xchg
outsl
arpl
pop
inc
sti
cmp
push
and
add
cmp
jp
sahf
jbe
xor
fdivrp
xor
shlb
mov
pop
push
pop
mulb
xchg
decl
xchg
add
lods
sub
add
clc
imul
adc
mov
cltd
in
xor
shlb
inc
or
fwait
xchg
fistpll
mov
fisubrs
inc
xchg
dec
add
xchg
fistpll
ret
adc
scas
in
insb
clc
pop
sub
jecxz
mov
lret
mov
std
mov
mov
mov
and
push
mov
ret
dec
push
adc
add
in
out
in
or
jecxz
out
and
les
cli
adc
mov
xchg
ror
cmp
test
addr16
and
mov
add
jecxz
mov
lret
sub
cltd
lock
aas
mov
insb
sub
pop
cmp
sub
cwtl
add
gs
sbb
cmp
sbb
lds
int3
arpl
cmp
pop
mov
std
mov
dec
inc
fiaddl
clc
sub
icebp
push
icebp
cmp
pop
inc
cmpsb
in
cmp
cmp
push
aam
fstl
cld
push
popf
test
mov
jl
jbe
pop
movsb
pushf
fisubrl
out
dec
fwait
cmp
or
mov
pop
call
scas
mov
dec
mov
mov
mov
flds
xor
test
imul
int3
clc
push
mov
sbb
cli
mov
test
ljmp
lea
xchg
cmp
mov
xor
adc
sbb
inc
add
lods
adc
in
out
imul
aaa
pop
jns
test
lds
and
jp
xor
clc
loope
pushf
jne
pop
leave
mov
ds
aam
push
icebp
roll
pop
xor
jl
adc
push
js
add
and
sbb
pop
dec
dec
imul
adc
mov
ss
inc
jnp
pop
mov
lret
fldenv
sbb
mull
dec
sub
xchg
push
addl
mov
cmpl
adc
mov
mov
adc
adcb
loop
lret
mov
mov
data16
jnp
mov
sbb
bound
nop
or
mov
pop
cmpsl
shlb
mov
cmp
into
insb
lret
sbb
in
mov
int3
cmpb
and
adc
int
push
shl
loopne
ss
sbb
pop
pop
outsl
xchg
add
pop
push
fidivl
adc
inc
xchg
jg
sahf
cli
push
and
arpl
and
push
arpl
dec
mov
xchg
adc
inc
aas
ret
inc
out
loop
scas
add
and
cmp
mov
mov
dec
incl
adc
fucomip
xor
mov
mov
jbe
fisubrs
int3
sahf
ret
sbb
jp
dec
fisubrs
out
mov
dec
inc
std
scas
fistl
pushf
push
xor
andl
jge
incb
fnstsw
scas
ret
lock
subb
push
lahf
mov
push
and
lret
lahf
call
arpl
sti
xor
push
fimull
adc
bnd
shrb
sub
pop
mov
mov
aam
inc
push
call
xchg
ss
push
mov
push
xor
and
loope
mov
push
and
into
and
jle
scas
data16
pop
xorb
insl
cmp
mov
sbb
pop
inc
adcl
add
push
cld
jmp
outsb
clc
sbb
out
stos
pushf
jp
add
loope
inc
mov
cltd
push
orb
leave
cli
rcl
je
std
xchg
inc
out
sbb
jge
sub
xor
js
pop
iret
in
sub
iret
daa
or
pcmpeqb
mov
push
hlt
and
sub
inc
mov
sbb
adc
shll
in
dec
add
push
pop
leave
sub
push
int3
add
xchg
push
mov
cmp
in
pop
daa
cwtl
xchg
sub
fldcw
jbe
adc
xor
jne
dec
adc
jae
xor
jae
pop
enter
push
into
sub
push
stos
mov
dec
inc
ret
pushf
arpl
adc
aas
insl
repz
sub
fs
cmp
or
lock
jp
rorb
mov
xchg
mov
dec
push
cmp
push
push
xchg
gs
jg
push
out
xor
add
and
mov
adc
mov
mov
popf
stos
mov
pop
loope
mov
lahf
ret
mov
loop
xor
insl
adcl
mov
jne
stos
jmp
or
nop
mov
in
pop
pop
xlat
xchg
shll
pop
shl
or
insl
sarb
rcrl
enter
stos
sub
sbb
es
jns
out
or
dec
and
cmp
lea
in
xchg
loop
rclb
mov
das
sarl
fs
jmp
sarb
popa
sbb
xor
jbe
roll
mov
push
enter
pop
adc
icebp
test
int
daa
shll
add
xor
pop
ret
xchg
pushf
test
or
inc
sub
lahf
test
ret
cmp
push
and
les
and
fsubl
pop
and
test
nop
dec
and
xchg
aam
pop
xchg
test
pop
cltd
push
and
sub
inc
sahf
into
push
cli
or
jl
adc
inc
cmp
repz
cmp
inc
add
push
push
out
push
pushf
test
dec
pop
jmp
and
pusha
fdivrl
mov
stc
iret
sti
repz
iretw
xor
adc
rolb
into
sub
mov
push
arpl
fiaddl
mov
sbb
popa
cli
push
movsb
xor
leave
mov
or
jecxz
cmp
xchg
popf
addr16
lds
in
sub
mov
mov
ss
popf
jg
pop
jl
adc
mov
lret
arpl
scas
test
pop
stos
call
push
add
push
loop
test
jb
test
psrlq
inc
aam
sti
pop
outsl
inc
pop
push
jno
add
clc
jmp
jp
mov
cmp
sbb
pop
add
sub
sahf
push
sub
adc
clc
mov
enter
int3
nop
or
outsl
out
or
push
ret
leave
dec
sbbb
lret
repz
std
js
dec
pop
jmp
dec
lods
inc
in
mov
repz
ljmp
and
int
jge
or
add
ja
sub
test
mov
jg
and
mov
and
cmp
aam
fldl
iret
cmpb
push
test
pop
sbb
xchg
insb
popf
ds
rclb
cmp
sbb
adc
insb
jmp
dec
test
pop
pop
mov
in
bound
mov
mov
in
pop
ja
push
cmp
cmp
aad
or
jnp
mov
sub
push
adc
jmp
jecxz
cltd
adc
shlb
lcall
add
in
cs
jg
fbld
sbb
xor
xchg
mov
xor
push
enter
inc
movsl
cmp
mov
ds
xchg
int3
pop
sub
pop
mov
add
ja
stc
test
jecxz
cld
mov
inc
mov
outsb
mov
mov
test
or
int
cld
and
pop
and
mov
xor
dec
sbb
mov
mov
xchg
sub
lods
cmpsb
ret
sbb
ret
push
sub
cmpsb
jle
mov
ljmp
into
inc
cwtl
sub
rolb
ret
or
je
mov
sub
lods
not
or
pop
out
cli
and
cltd
std
call
and
mov
lock
lods
leave
mov
add
int3
mov
jo
or
enter
sbbl
rcrb
out
jno
mov
cmp
dec
dec
and
jne
pop
cwtl
leave
sti
jbe
aas
call
push
lret
les
sbb
mov
inc
bound
mov
sbb
xor
push
push
nop
or
sbb
lcall
push
adcb
cmp
mov
adc
or
in
add
dec
inc
push
repz
add
push
push
xor
mov
enterw
fdivs
std
jmp
adcb
cs
scas
cwtl
push
cli
add
addr16
insb
add
xchg
int3
jo
lcall
cld
outsb
test
or
pop
mov
xchg
das
fcoml
xchg
movsb
int
repz
stc
adc
fldt
jb
mov
lahf
mov
popf
int
dec
pop
dec
sub
push
cmpsl
sub
loope
and
outsb
and
rcl
fwait
xor
adc
in
pop
out
mov
mov
adc
pusha
pop
pusha
std
rcr
sahf
addl
scas
mov
cld
cmp
lcall
and
xchg
xchg
sub
and
xor
push
dec
mov
lds
les
inc
repnz
or
xor
shrl
lds
inc
pusha
xchg
rcll
cmpb
adc
in
and
cmpsb
pushf
test
cmp
cmp
sbb
in
adc
inc
stos
pushf
and
sub
dec
cmpsb
dec
push
dec
push
xchg
xchg
push
dec
and
inc
test
data16
lods
pushf
lea
inc
jae
mov
or
rcrb
jecxz
dec
aad
and
jg
mov
adc
fldcw
les
dec
jo
jmp
pop
rcrb
loopne
pop
push
inc
in
mov
stos
sub
loope
xor
mov
leave
inc
xchg
aad
stos
dec
adc
sbb
addl
in
repz
cmp
pop
in
cmp
inc
push
rorb
enter
jne
or
xlat
mov
pop
pop
aaa
cmc
add
push
mov
pop
sbb
push
mov
subl
bound
adc
cltd
and
mov
outsl
sbb
ds
lock
in
adc
jae
jmp
pop
mov
out
rcrl
sarb
mov
cmp
xor
out
or
pop
sbb
fdivr
add
xor
int
or
pop
xchg
xchg
jge
push
daa
cmp
hlt
fwait
inc
xchg
and
or
fwait
es
fildll
push
shll
sbb
repz
ret
mov
pop
test
loopne
cmp
pop
add
xor
cmp
mov
lea
mov
push
and
fwait
xchg
xchg
mov
hlt
push
push
bound
add
loop
sub
xchg
jge
mov
fldenv
leave
xchg
xchg
jp
mov
out
dec
dec
xchg
in
outsl
mov
mov
xorl
xchg
enter
clc
jnp
lret
fisttpl
int3
aam
push
adc
mov
push
xor
repnz
dec
arpl
out
pop
lcall
push
pop
mov
std
add
mov
leave
jne
add
xchg
sarb
pop
lods
or
loope
arpl
push
addr16
pop
outsl
xchg
cmp
movsb
cmpsl
adc
pop
sbb
mov
jbe
jecxz
lods
lcall
jae
sti
shr
push
pop
add
push
nop
cltd
mov
jl
movb
adc
jmp
xchg
in
mov
imul
and
lcall
mov
mov
sahf
jb
mov
cmp
dec
aam
adc
pusha
mov
pop
cwtl
jecxz
lods
aas
push
adc
orl
fsubl
push
xchg
inc
cmpsl
je
in
js
add
xchg
inc
mov
imul
xor
mov
test
fcompp
jne
ret
sbb
sub
test
inc
pcmpeqd
hlt
add
cmp
in
sub
std
cmp
fwait
xchg
mov
fcompl
shl
cmpsl
lcall
fbld
lods
shll
inc
adc
sub
cltd
das
jle
shrl
das
push
inc
xor
rcll
mov
inc
hlt
xchg
std
mov
inc
xor
ret
std
and
mov
cwtl
pop
mov
push
and
push
push
jb
push
mov
leave
fs
sti
popf
push
roll
cwtl
leave
jo
scas
sub
push
data16
and
jge
sub
mov
or
ret
stos
int3
lods
ds
mov
fsubl
xchg
xor
sub
sti
cmp
jne
dec
scas
roll
inc
pop
scas
xchg
cmpsl
mov
jecxz
sti
fnstsw
loop
inc
inc
jne
or
in
popa
in
pushl
xchg
push
pop
ret
dec
fs
mov
mov
jo
data16
sub
pcmpeqd
cwtl
sub
pushf
mov
push
jo
fwait
pop
loope
mov
pop
jecxz
add
adc
popa
pop
pop
jle
sub
es
mov
in
and
xor
stos
les
pop
bound
pop
in
mov
sbb
fnstenv
mov
pop
mov
add
mov
jo
outsb
mov
test
sti
ss
popf
add
xchg
in
das
inc
notl
xor
pushf
dec
shll
ret
and
in
testl
push
nop
push
push
pop
inc
scas
jno
ficoms
dec
fldcw
imul
mov
or
inc
mov
cmpl
or
push
test
mov
or
jle
xor
insl
add
std
scas
inc
imul
jl
mov
js
add
jge
fs
sbb
dec
fimull
jg
push
mov
xor
mov
jg
fcompl
cli
jp
jmp
sub
insb
push
xchg
shl
aad
jae
push
or
outsb
cmc
lods
in
add
les
sbb
lcall
jae
jp
push
cwtl
push
mov
jle
push
add
mov
pop
adc
sbb
fistpl
imul
xchg
js
jl
push
popa
pop
loopne
mov
insl
or
fbstp
rolb
mov
leave
ficoml
inc
out
fcomip
mov
xchg
dec
and
sub
orl
inc
jmp
inc
mov
mov
bound
or
add
ds
cmpsl
dec
fs
fnstcw
mov
xor
add
js
sub
adc
sti
insb
les
push
lcall
aas
lea
sub
jo
mov
loop
xor
movb
xorl
and
pop
ss
insl
pop
stos
pop
jns
inc
xchg
sbb
subl
mov
and
lret
inc
es
orl
ja
jae
rclb
shr
test
jo
inc
enter
jnp
mov
cltd
cmp
jb
inc
int3
push
jle
pop
ss
imul
pop
in
pop
ss
or
jbe
adc
ds
out
add
xor
lods
cmpsl
test
jae
inc
mov
xor
daa
in
sub
pop
sti
push
outsl
shll
mov
nop
ror
push
xchg
mov
or
push
les
and
aaa
lea
mov
inc
xchg
jecxz
pop
add
call
push
cwtl
push
cmp
sub
jp
and
mov
or
arpl
xorl
xchg
dec
stos
sub
pop
xchg
outsl
jl
mov
fs
sti
dec
sbb
ja
sub
imul
repz
xchg
aaa
rorb
xchg
or
repnz
addr16
fwait
test
xchg
cs
hlt
cmp
and
and
mov
and
add
inc
incl
mov
jnp
cmp
js
adc
mov
je
lods
xor
punpcklwd
hlt
pop
mov
dec
xchg
popa
scas
sub
and
ljmp
es
jg
outsl
push
xchg
cltd
mov
push
lret
and
scas
cmp
ficoml
out
nop
push
sar
mov
or
stos
lahf
cmp
jo
mov
bound
xchg
push
sub
movsb
inc
insb
cmp
cmp
cs
jns
in
xor
xchg
pop
push
fnsave
add
pop
out
and
in
xor
or
clc
out
rorl
ret
in
lods
mov
dec
jae
pop
or
outsl
arpl
jbe
sahf
daa
loope
push
xchg
jecxz
cli
popf
dec
pop
out
adc
xchg
sub
jg
lock
hlt
sar
mov
stos
xor
jbe
cmp
xchg
test
dec
popa
fildl
cmp
in
inc
loope
xchg
pop
adc
imul
xorl
mov
shl
test
cmpsb
or
sub
addl
xor
xor
lahf
xor
andb
lcall
out
testl
outsb
shrb
mov
test
cmpsl
or
jb
push
lea
mov
dec
or
loop
out
cmp
dec
mov
sahf
lahf
movsb
je
bound
inc
jb
sub
mov
je
mov
gs
fisubs
sbb
jmp
lock
in
aad
lret
imul
or
inc
xchg
xchg
data16
jg
pop
inc
push
sbb
mov
out
scas
in
rcr
ja
mov
mov
push
adc
test
movsb
cmp
xchg
jnp
mov
stos
pop
jb
test
shlb
leave
mov
movsl
pop
pop
push
push
push
hlt
nop
pusha
cli
pop
mov
sub
inc
mov
out
mov
leave
nop
mov
inc
fcomps
outsb
sti
icebp
hlt
fs
notl
sub
or
repz
xor
emms
in
pusha
sub
out
mov
sbb
ret
inc
insl
loop
stos
add
shl
scas
shll
mov
jle
and
cltd
std
xchg
dec
jbe
jbe
leave
sbb
xchg
push
pop
mov
pushf
sub
sbb
adc
sbb
nop
mov
fwait
xchg
idivb
out
xchg
sub
leave
mov
lahf
lea
movsb
sub
inc
sub
imul
rclb
push
out
mov
sti
insb
stc
lcall
inc
loopne
push
push
outsb
mov
lods
inc
int
mov
fcoml
adc
mov
lock
sbb
loope
mov
cmc
sbb
in
xchg
rcll
mov
js
mov
wrmsr
lcall
dec
mov
enter
adc
push
sub
ljmp
pop
clc
out
sarl
mov
or
mov
jmp
and
xchg
push
enter
in
jp
sbb
stos
rcrb
add
imul
pop
subl
add
and
int3
out
punpcklwd
mov
out
stc
jecxz
cmc
inc
aad
sub
lea
or
adc
or
inc
aas
ret
loop
sbb
ret
inc
fmuls
mov
sahf
pop
dec
cwtl
or
imul
cltd
jmp
mov
dec
aam
push
mov
add
repz
es
int
jmp
je
ja
pop
punpckhdq
or
fnstenv
daa
push
mov
dec
icebp
test
sahf
insl
inc
dec
and
fs
mov
lret
mov
or
jp
mov
test
cmp
mov
rcll
adc
int
inc
shlb
add
push
out
push
fidivrs
sti
jg
xchg
jbe
jae
les
cmp
sub
int
rcrb
mov
and
cltd
cs
adc
jmp
inc
inc
test
mov
out
mov
fldcw
jecxz
cld
and
ret
mov
xor
ljmp
jb
nop
pusha
jmp
movsb
jecxz
mov
ret
push
sti
out
xchg
add
mov
pop
jb
movsl
push
mov
in
fwait
add
ds
jo
and
mov
add
frstor
hlt
faddl
daa
or
outsb
sub
sbb
push
divl
cmp
mov
mov
clc
lahf
pushf
aaa
jne
mov
data16
push
adc
out
or
outsb
icebp
mov
xor
cltd
xchg
cmp
pop
mov
test
testb
shl
and
fdivrs
xlat
jb
cmpsl
push
cltd
insl
inc
fs
jnp
cmp
aaa
scas
xor
dec
and
or
movb
jbe
jecxz
xor
cwtl
popa
cltd
add
pop
jb
sbb
cli
ret
repz
add
jno
or
fxch
lret
insl
dec
test
repnz
lret
push
pop
fisubs
das
testb
int3
cmp
jne
loope
cmp
cmpsl
xchg
dec
mov
jno
dec
inc
cmp
loop
outsl
cmp
cld
loope
inc
xchg
ret
fs
bound
xchg
aad
inc
fnstsw
ljmp
add
imul
fisubs
aaa
scas
jnp
dec
sub
or
mov
and
xor
clc
jae
pushf
fidivrs
xor
andb
fisubrs
cmp
push
fmul
pushf
movzbl
popf
out
in
lock
xor
inc
outsb
inc
mov
ljmp
lret
jl
arpl
and
ret
iret
leave
popa
xchg
and
les
test
call
dec
jbe
stc
pop
scas
ud2
push
sbb
lret
loop
rcll
jmp
loope
sub
ja
data16
pop
fiadds
fldcw
scas
test
call
insl
jle
jne
ds
push
dec
in
jns
insb
cmp
addr16
mov
mov
or
adc
in
sarl
adc
jecxz
pusha
jmp
pop
push
cltd
pushf
mov
sbb
jle
popf
jmp
rcrb
fiadds
add
ss
mov
or
test
lock
sub
aaa
leave
push
sub
add
inc
popa
cmp
imul
cmc
lock
scas
cmp
outsb
aas
addl
jge
inc
daa
aas
push
stos
fdivp
out
out
test
inc
dec
scas
add
fs
in
xchg
fdivr
pop
or
fwait
scas
subb
mov
fwait
and
sbb
mov
adc
jns
lahf
insb
pop
push
ja
es
pushf
insb
fisttps
aad
and
into
fbld
fldcw
test
mov
add
pop
inc
js
cmc
mov
xor
enter
xlat
lret
cmp
push
ss
cmp
push
js,pn
outsb
imul
dec
mov
ja
adc
pop
clc
and
push
into
adcb
test
fwait
icebp
sub
cli
xor
leave
push
std
insb
fiadds
mov
adc
les
ret
push
bound
mov
jmp
out
pop
adc
jo
lds
je
inc
lods
and
popa
sub
sbb
sbb
and
dec
adc
add
mov
pop
scas
mov
xor
dec
stos
cld
jmp
scas
outsb
xlat
lods
mov
add
repz
xchg
xlat
gs
and
js
mov
pop
lds
lock
add
jp
ja
ja
cmp
jne
dec
jecxz
xchg
dec
push
or
inc
cmpb
insl
push
sbb
ds
in
orb
lods
pop
adc
sbb
adc
jmp
cli
pop
cmp
sub
insb
out
shlb
inc
mov
rcrl
jnp
es
sub
push
and
rolb
jne
fnstenv
add
cmp
lods
cmpsl
mov
mov
lea
cmp
shll
sub
jne
rol
mov
cmp
cld
ljmp
test
cltd
or
dec
fs
mov
push
adc
or
int
jecxz
mov
mov
ss
pusha
test
pop
inc
imul
into
cmpsl
jg
cmpsl
aas
fsubrs
xchg
push
sbb
push
ds
lods
xchg
aaa
inc
in
xchg
pop
sbb
dec
andb
adc
repz
jno
pushf
popf
icebp
mov
push
inc
adc
aam
jl
pop
loopne
add
mov
xor
insl
mov
dec
inc
ud2
pop
pop
loopne
adc
mov
lods
sub
xchg
inc
out
inc
jmp
inc
push
pop
es
dec
ss
xchg
xlat
lods
in
stos
dec
cmc
or
popa
adc
aam
inc
push
mov
fiaddl
inc
jp
arpl
imul
lret
xor
mov
sahf
mov
jp
outsl
and
in
movsb
inc
cmp
rcll
add
in
push
sbb
daa
mov
test
sahf
sbb
je
nop
jnp
jmp
leave
mov
jecxz
fisubrs
hlt
popa
cmc
stos
pop
cltd
inc
push
arpl
xlat
pop
popa
xchg
repnz
pop
adc
lods
mov
cmc
jnp
movsl
mov
jecxz
add
xor
ja
mov
negl
shrb
arpl
mov
adc
shl
mov
js
dec
dec
add
push
push
push
stos
outsl
inc
mov
pop
test
xchg
push
mov
ret
adc
push
das
pusha
outsb
xor
dec
push
mov
inc
inc
push
push
pusha
jl
out
sbb
es
not
mov
pop
fcom
jecxz
scas
fsubrs
jbe
ficoms
sub
pop
andl
rorl
test
rorl
scas
and
mov
sbb
fbld
shlb
inc
cmp
movsb
xchg
jecxz
test
fs
stc
insb
adc
subl
std
pop
adc
push
in
out
jl
and
insl
pop
push
dec
lods
js
in
or
xchg
push
in
cmpsb
stos
hlt
xchg
clc
out
cmc
sub
and
movsb
repz
sbb
sub
or
inc
mov
jo
out
add
adc
inc
dec
inc
sbb
sub
daa
pop
dec
xor
lods
cli
aad
xchg
and
mov
dec
or
fldl
push
repz
fwait
sbb
lret
out
pop
shlb
xor
shrb
jbe
dec
adcb
mov
pop
sub
cld
cmp
ret
adcl
sub
sti
inc
xchg
push
mov
add
into
cs
imul
adc
hlt
pop
add
mov
rcr
fcmovb
loope
and
lcall
or
nop
push
jno
jb
or
cli
fs
xchg
hlt
mov
aaa
in
aaa
dec
mov
sbb
mov
les
fwait
xor
or
pop
outsl
dec
add
into
fstl
and
pop
xchg
pop
xor
xor
mov
addr16
and
pop
push
scas
jno
insl
data16
cmp
and
in
cmpsl
sbb
fwait
mov
jp
ret
mov
mov
jp
mov
ja
jg
mov
inc
sub
jge
fistps
pop
inc
rolb
sar
mov
xchg
stos
nop
mov
iret
push
adc
mov
xor
das
inc
mov
xor
cmp
movb
xchg
and
mov
mov
push
in
or
ficompl
fmulp
int
pop
nop
dec
roll
mov
popa
cmp
or
push
shll
stc
enter
stc
subb
cli
pop
sahf
loop
pop
jmp
add
mov
outsb
frstor
int
lea
adc
arpl
repz
adc
add
inc
cltd
in
and
adc
and
fwait
mov
in
mov
mov
adc
inc
xchg
jae
xchg
ljmp
stos
cmpsb
fnstcw
and
out
or
lahf
gs
jb
mov
mov
jnp
mov
jns
and
or
jno
push
sbb
jl
xchg
imul
add
adc
cmpl
xor
push
inc
les
lcall
stos
cwtl
or
in
xchg
xchg
das
adc
out
mov
sti
mov
cltd
stc
sub
and
lea
std
roll
inc
popa
mov
cmp
dec
inc
insl
sub
hlt
mov
iret
and
clc
sbb
in
jg
sbb
inc
lret
mov
lds
fisttpl
cmpsl
out
jmp
push
scas
jmp
test
mov
cld
sbb
repz
sub
repz
das
mov
rcr
xor
adc
or
add
imul
insb
adc
or
and
or
push
jmp
sar
test
sub
or
dec
pop
sahf
bound
pop
pushf
sbb
in
dec
and
movsb
mov
add
aas
sahf
movb
aam
jp
inc
leave
rcrb
test
rol
xchg
addl
sub
fnsave
rorl
push
jae,pn
in
fdivp
imul
mov
or
jae
sub
jae
cmp
rcrl
aad
into
jl
inc
mov
lahf
and
mov
daa
and
or
divb
mov
stos
ss
fs
sti
leave
mov
aas
ja
insl
dec
int3
lods
ja
aaa
xor
stos
in
popa
inc
pop
js
ds
movsb
inc
cmp
or
jecxz
inc
pop
and
test
xchg
xchg
cld
inc
and
xorb
in
movsl
fmull
and
xchg
inc
add
iret
cld
xchg
pop
fcomps
faddl
xchg
dec
repz
movsl
jno
imulb
pop
jne
jle
loopne
rolb
loope
lcall
sub
mov
addl
cs
aas
adc
pop
in
lahf
ret
mov
push
test
sbb
insb
aam
test
add
push
inc
jmp
outsl
cmp
lcall
mov
pop
xor
sbbb
push
add
js
cltd
inc
xchg
std
jo
cmp
ret
pusha
jbe
jmp
mov
loopne
test
pop
push
movsl
mov
fwait
mov
mov
and
xchg
and
out
mov
jbe
andl
push
jne
and
pop
dec
sub
mov
dec
lods
mov
data16
mov
aaa
push
hlt
lret
scas
ffree
jb
clc
movsl
imul
sbb
in
xor
imul
repz
stos
test
ja
imul
adc
pop
lahf
cli
les
orb
dec
hlt
sbb
pusha
add
out
push
push
mov
sti
scas
test
mov
imull
negl
stos
mov
icebp
xchg
std
jp
jle
xchg
or
fsts
test
push
xchg
lea
sub
fsubrl
call
xchg
fistpll
mov
jmp
shl
sarb
imul
mov
jp
popf
addr16
jmp
push
sub
stos
mov
mov
add
jmp
pop
xchg
cli
dec
mull
ja
test
mov
jmp
or
jmp
cmpsb
cmpsb
rcrl
cmpsb
lret
mov
int
mov
mov
inc
aad
dec
out
scas
mov
ds
xchg
push
fnstsw
cmp
xchg
mov
or
stos
add
push
mov
or
pop
mov
js
leave
adc
enter
inc
out
xchg
aad
inc
dec
inc
int3
jmp
out
testl
mov
inc
cmp
push
mov
xorb
cmpsb
mov
and
fdivr
jnp
inc
test
ja
xorb
sbb
mov
sbb
sub
xchg
cld
or
popa
sbb
dec
pop
in
mov
or
mov
jbe
push
dec
pushl
loopne
out
adc
movsl
inc
adc
lret
fcmovne
mov
dec
sub
and
jmp
dec
jmp
pop
jnp
xor
mov
push
ficoml
pop
or
stos
jns
jmp
jne
fdivs
fcompl
lds
pop
xor
dec
pop
and
sti
sbb
xchg
adc
dec
or
faddl
lahf
cmp
addl
xlat
shrl
mov
mov
xchg
outsl
testb
jmp
or
aad
nop
inc
cmpsl
imul
addr16
pop
fisttpll
xor
imul
jecxz
xor
ret
sbb
and
in
cmc
das
sbb
pop
inc
scas
pop
in
jnp
sub
cmp
jecxz
leave
mov
mov
or
adc
pop
sar
cmp
push
cli
negb
jae
jbe
pop
mov
sbb
mov
add
xchg
pushf
popl
test
and
pop
sbb
adc
xor
rep
jno
add
std
sub
out
pop
dec
xor
or
shll
lea
rolb
and
rorb
clc
mov
xor
and
mov
mov
inc
push
xor
testb
add
sub
mov
pop
repnz
mov
js
pop
jns
aas
in
arpl
decl
je
dec
add
movsl
add
lahf
push
lahf
cmp
xchg
adc
xchg
mov
ja
in
mov
mov
popa
test
ss
cmpsl
pop
push
lds
jmp
std
and
je
pop
test
in
inc
cmp
into
xchg
loope
loope
jg
sbb
in
add
fs
push
into
xchg
popa
push
ds
xchg
jge
jbe
stos
adc
out
push
push
mov
cmc
push
push
arpl
mov
mov
mov
rcl
arpl
popf
outsb
jge
mov
imul
cmp
int
iret
test
xchg
repnz
mov
ja
mov
xrelease
dec
aad
iret
sbb
add
stos
int
xor
sbb
adc
rcll
fisubs
mov
mov
jnp
stos
subl
inc
pop
sub
add
test
cmp
bound
cmpl
sarl
fldcw
mov
stos
mov
push
stos
pop
inc
or
das
dec
je
mov
adc
mov
arpl
dec
ret
sbb
les
lret
or
arpl
mov
stc
cmp
or
movsl
adc
mov
lods
idivl
sub
mov
in
nop
jbe
push
push
push
pop
dec
cli
outsl
or
mov
out
rolb
in
and
in
mov
pop
std
ja
cmc
push
cwtl
ret
enter
pop
cmp
in
pop
ss
mov
loopnew
lahf
lss
loopne
addr16
jp
mov
sbb
push
pop
pop
scas
cmp
add
test
ss
xor
jns
push
insb
roll
pop
les
mov
sub
push
xchg
loopne
dec
dec
out
imul
nop
mov
in
or
sub
iret
mov
pop
pop
mov
or
aad
outsl
jbe
sarl
lahf
call
push
push
imul
dec
and
xchg
popl
lock
fcmovnb
jnp
mov
enter
and
mov
sbb
adc
call
mov
dec
jb
and
push
std
xor
aad
icebp
sbb
lahf
dec
mov
aam
movsb
nop
push
movsb
arpl
jne
cmp
jg
repnz
jbe
push
loopne
jnp
clc
cmpsb
shl
fdivl
das
cmpsl
pop
or
push
aaa
insl
adc
sub
xchg
push
adc
dec
and
jge
and
pop
xchg
pop
cmp
cmpsl
and
push
pop
push
int
sub
mov
pushl
or
lcall
scas
fldenv
push
push
ss
push
mov
push
push
cmp
jo
dec
mov
gs
es
int
push
pop
popf
aas
stc
repnz
mov
mov
ja
xor
in
pop
sahf
mov
stc
gs
or
dec
outsb
xchg
jae
rclb
push
pshufw
lods
mov
pushf
sbb
sub
lret
cld
cli
aad
jl
stc
inc
xor
daa
or
and
dec
imulb
mov
adc
sbb
add
fdivs
adc
js
outsb
pushf
mov
cmpsb
xlat
pop
mov
cmp
dec
faddl
cmp
sub
outsb
xchg
mov
mov
mov
je
inc
out
outsl
adc
push
or
sahf
inc
add
loopne
cmpsl
nop
or
test
hlt
jg
subb
adc
inc
aad
push
dec
mov
cmp
mov
imul
rol
fimuls
push
shl
xchg
inc
xor
into
imulb
int
push
mov
imul
jns
jne
movsb
or
outsb
shl
es
lds
xchg
lea
mov
cli
pop
divl
sub
shrb
scas
mov
mov
out
xchg
jg
mov
sbb
out
pusha
mov
xor
xor
movsb
repnz
out
inc
adc
inc
sub
fbstp
sbb
test
pop
stos
jnp
lcall
enter
jge
add
push
insl
mov
sub
jmp
adcb
in
or
setp
in
mov
or
ficoml
inc
int3
xor
inc
cmpsl
jae
cmp
fbld
icebp
cmpsb
add
sti
out
cld
jge
sarl
pop
hlt
pop
sbb
out
lock
mov
int3
fs
jno
xchg
loope
jp
and
dec
imul
cmpsb
iret
inc
subl
xchg
addl
cmp
and
insl
arpl
cs
lret
xor
xchg
sbb
adc
push
cmp
mov
add
cmp
outsl
hlt
cmpsl
cmc
lds
xchg
stos
mov
mov
jae
rcrb
or
mov
adc
xlat
xchg
lods
cmp
sub
cmp
test
pusha
cmc
xchg
xchg
adc
pop
shlb
in
xchg
mov
iret
insb
aam
sbb
sub
sbb
inc
ror
jmp
lret
sarb
insb
push
pop
mov
adc
aas
and
out
add
and
sahf
and
push
ret
push
add
lret
sbb
sub
xchg
addb
cld
jns
loop
add
mov
inc
sub
and
hlt
mov
fwait
jecxz
sub
mov
loop
sahf
xor
lods
imul
aad
fnstsw
hlt
and
inc
out
push
jae
es
filds
shrl
add
setb
xchg
mov
cli
sub
xor
push
inc
movsl
jl
aam
cs
mov
pop
mov
or
jle
mov
popl
cmp
je
cmp
pop
into
sub
lcall
data16
stc
outsb
inc
inc
scas
lods
sbb
movsb
daa
fistl
mov
rcrb
imul
imul
icebp
cmp
xchg
pop
xchg
dec
pop
sbbb
cmpsl
sbb
jmp
adc
xor
cmp
insl
add
sbb
stos
adc
xchg
pusha
fists
filds
mov
loope
or
adc
cltd
push
pushf
jb
adc
sub
and
leave
jo
add
sub
dec
lock
jge
rorl
sbb
xor
lods
mov
or
pop
push
adc
stos
cmc
xchg
popa
scas
mov
call
mov
mov
cmp
pop
add
add
dec
sbbb
sar
cmovge
mov
lcall
cmpsb
scas
aad
fcomps
jne
movb
dec
jbe
movb
shlb
popa
je
int3
push
test
adc
add
mov
push
leave
bound
pop
mov
fdivs
xor
fcmovne
aas
and
stc
add
jno
xchg
lods
dec
lahf
cs
std
and
mov
inc
divb
mov
arpl
std
fs
aas
fcompl
arpl
lds
jl
push
ret
jmp
push
jg
push
iret
pop
js
sbb
popa
sbb
out
or
inc
out
sbbl
dec
sahf
ss
push
in
in
int3
inc
pop
daa
rcrl
js
mov
inc
mov
sbb
popl
pop
std
leave
sar
aad
popf
outsb
or
sub
std
jecxz
cmpsb
rcll
push
pop
pop
mov
stos
inc
and
movsl
lods
cmp
lock
mov
loopne
push
mov
xlat
adc
or
mov
mov
lret
mov
js
outsb
mov
jns
mov
pop
push
subl
in
shrb
inc
adc
cwtl
mov
jle
jnp
add
inc
int
add
dec
adc
gs
lret
sbbb
add
ror
mov
jmp
push
jmp
popl
lea
pusha
inc
inc
cld
jns
outsl
cmp
ret
mov
inc
jge
cmp
fwait
jb
push
leave
add
lahf
or
testb
xor
push
and
movsl
push
sti
inc
shlb
jno
push
orb
mov
in
insb
adc
mov
movsb
dec
and
cwtl
pusha
inc
mov
cmp
push
mov
out
dec
test
cmp
fstps
or
out
push
xor
scas
mov
movsl
pop
enter
punpckhdq
mov
sub
dec
jne
mov
insb
loop
dec
sub
outsl
mov
call
loopne
stc
pop
outsl
xor
inc
rorb
int3
sbb
mov
int3
outsl
lock
lods
scas
lea
adc
or
push
pop
fstps
mov
cmp
out
les
shll
leave
xor
mov
loop
cmp
jo
not
ret
mov
jl
push
rcrl
aad
cmp
xchg
cs
loop
cmp
loope
mov
pusha
pop
jnp
mov
fdivs
xchg
addr16
sahf
ss
inc
xor
js
lock
adc
fisubs
notl
rolb
xor
mov
xchg
pop
int
add
fwait
inc
mov
sub
inc
aam
pop
fs
add
xchg
out
in
cmpsb
cli
mov
mov
je
push
dec
adc
repnz
or
rcrb
sbb
out
sbb
and
xor
mov
or
mov
push
pusha
scas
push
call
lds
pop
ds
adc
rcrb
xor
cld
cmpsb
sti
mov
loope
out
fwait
push
fbld
or
in
push
dec
lahf
ljmp
mov
pop
and
test
pop
push
mov
adc
add
leave
inc
lods
popa
or
cmp
bound
aaa
in
push
lock
data16
clc
xor
jle
xchg
mov
push
scas
out
cmp
or
and
out
int3
jl
movsl
fcmovnu
jns
cld
push
adc
dec
pop
lret
mov
movsl
mov
push
mov
adc
js
pop
pop
ds
addr16
and
push
and
lret
insb
ja
ja
in
jb
loop
fs
cltd
clc
in
adc
jge
pop
int
mov
int3
daa
cmp
fstps
nop
or
mov
nop
lock
push
stos
or
add
jbe
adc
jge
dec
and
outsb
mov
xor
cld
insl
cltd
sub
xchg
fwait
mov
insl
sbb
arpl
xlat
es
cmc
das
sbb
frstor
cmp
in
push
mov
movsb
dec
popf
lcall
cmp
cli
and
mov
sar
out
jo
psubusw
ss
es
in
ljmp
pushl
xchg
push
not
pop
sub
pop
mov
xchg
sub
cmp
mov
cwtl
mov
jle
in
dec
inc
imul
cmpsl
adc
inc
mov
in
xchg
mov
ja
mov
pop
jns
dec
in
cmpsb
pop
xchg
mov
aas
jl
rcrb
loope
or
fsubs
add
xor
gs
xchg
stos
push
hlt
jae
daa
in
mov
inc
cltd
in
mov
mov
inc
test
jb
inc
pop
mov
scas
fstpt
mov
es
xchg
pop
inc
xor
aad
ds
lcall
mov
push
jo
les
daa
sub
lret
into
movsb
xchg
incl
jmp
mov
add
xor
testl
pop
movsb
ret
or
mov
pop
or
cs
inc
and
cmp
iret
repnz
jb
add
add
dec
das
stc
mov
popl
notl
iret
jbe
mov
dec
ds
and
in
xorb
xchg
test
les
mov
outsb
cmp
adc
in
sub
insl
adc
test
lods
js
aas
dec
push
and
mov
aaa
add
sti
es
iret
xor
scas
xor
and
push
jmp
xchg
push
sub
jno
mov
cmp
adc
fidivrl
jns
lods
push
insl
xchg
add
mov
sub
imul
shll
jnp
mov
pop
cmp
lahf
adc
mov
fwait
lret
pop
add
iret
popf
dec
or
jecxz
fidivrl
js
div
inc
aad
out
inc
cmpsl
hlt
adc
cli
add
push
or
xor
shll
inc
inc
sbb
sub
xchg
fwait
mov
sti
inc
jb
or
aam
insb
out
xor
inc
outsb
cmp
push
ret
in
in
sub
cmpl
sub
dec
dec
add
cmc
clc
stc
sub
add
iret
push
inc
add
sub
or
pop
or
rolb
jmp
shrb
or
mov
mov
scas
bnd
fldenv
insb
test
pop
sbb
loope
stos
mov
ljmp
adc
pop
pop
sahf
sar
mov
divb
movsb
jb
dec
into
mov
pop
adc
out
sbb
or
insl
loop
clc
loope
cmp
mov
mov
pop
jecxz
and
dec
fabs
cmp
hlt
decb
aas
push
jp
jmp
outsb
sub
in
sti
sti
leave
add
aas
dec
stos
add
inc
xchg
sbb
mov
dec
bound
out
dec
sbb
dec
jb
iret
ja
sti
cld
xchg
inc
xchg
jo
pop
inc
js
cmpsl
daa
outsb
lea
sbb
std
jmp
mov
mov
imul
clc
insl
fisttpl
fcomps
xor
xchg
cmpsb
testl
movsl
pushl
mov
imul
adc
pushl
fcoms
adc
push
movsl
sbb
bound
push
ret
mov
or
shrl
xlat
roll
add
lock
leave
add
and
nop
jl
subb
adc
lea
fwait
das
dec
cmp
lret
out
xchg
cmp
ret
rcl
cwtl
or
mov
xchg
xchg
sar
inc
ss
ficompl
sub
lods
movb
cmp
js
in
pushf
cs
xor
lods
ljmp
jp
add
pop
sbb
cmp
test
stc
pop
mov
fwait
inc
pop
ss
cmp
adc
mov
fmulp
addr16
int
jge
leave
scas
mov
bound
ss
jmp
xchg
xlat
pop
mov
ss
aam
adc
sub
add
mov
mov
jbe
jecxz
inc
leave
xor
aas
inc
inc
pop
sahf
sbb
dec
xor
or
adc
inc
jmp
idivb
adc
inc
xchg
ret
sub
sbb
push
xor
shlb
or
pop
pop
test
cmp
test
adc
scas
nop
cmp
pushf
arpl
iret
and
rcl
ss
adc
xchg
repnz
jecxz
lcall
add
stc
ret
stos
adc
pop
loope
mov
popa
add
or
popa
xchg
ret
jbe
xchg
into
std
jo
lahf
ss
dec
cmc
scas
cmp
lock
dec
push
loopne
dec
pop
push
xchg
iret
repz
iret
decl
sub
lods
or
add
xlat
or
scas
add
add
sub
dec
pushf
push
dec
cmp
insl
pusha
dec
and
lds
int
sub
mov
pop
mov
push
fs
jbe
xor
push
cld
jecxz
movsl
sbb
push
dec
push
clc
ret
mov
out
push
push
mov
loopne
mov
iret
pop
mov
and
and
dec
and
and
push
fdivr
fcoms
and
dec
jbe
xor
idivb
aaa
fstpt
aaa
ja
adc
or
jbe
dec
pusha
and
enter
and
xlat
insl
hlt
mov
loopne
popa
aad
scas
jecxz
sbb
xchg
jmp
or
cs
out
mov
sub
mov
jecxz
out
sar
xchg
pop
lock
add
dec
push
mov
popf
jae
sbb
push
jb
mov
sub
cmp
in
test
out
iret
mov
mov
fnstcw
cmp
aad
aam
inc
mov
cmp
cmpsl
jae
sub
scas
dec
jp
sub
fidivrs
adc
xor
aas
sar
loopne
inc
mov
repz
out
mov
popf
sahf
xor
pop
adc
addl
jge
mov
incb
lcall
push
inc
lods
das
ficoms
out
leave
add
jmp
cmpb
and
pop
push
pop
mov
sub
xchg
mov
push
jbe
sbb
gs
jb
mov
jo
leave
jl
sahf
int
mov
ljmp
ja
rclb
or
mov
dec
lret
cs
mov
xor
push
xor
cmpsl
ret
cmp
shll
xchg
ja
test
cvtpi2ps
inc
and
ljmp
sbb
nop
popa
rcl
mov
xchg
les
arpl
xchg
jge
jns
jg
and
xchg
adc
or
pop
or
fs
dec
sub
into
mov
adc
fcmovnu
imul
andb
into
or
in
sub
movsb
cltd
sbb
leave
gs
adc
mov
push
enter
scas
test
into
pop
inc
pop
mov
call
nop
loopne
jmp
mov
jns
push
fldcw
xchg
ja
lock
jne
insb
push
bound
sub
lock
aam
and
subl
inc
cmp
jb
lods
add
jge
mov
xor
dec
ds
push
jbe
push
sub
jp
lahf
enter
ljmp
sub
sbb
push
add
jbe
mov
push
fistpll
add
or
xor
cmpsb
jle
push
das
in
lods
addr16
jecxz
pop
pop
inc
int
mov
fs
dec
shr
lds
push
cmpsb
pop
pop
and
lods
cmp
lds
inc
icebp
push
jb
hlt
call
out
adc
adc
shrl
and
jno
adc
sbb
cld
sti
add
les
dec
sub
adcl
mov
and
push
jnp
mov
pop
cwtl
cmc
push
jae
sahf
pop
push
movsl
rcll
mov
lock
mov
iret
and
mov
pop
popf
mov
jge
jp
in
aam
jg
mov
push
lret
xor
push
jnp
jo
mov
xchg
pop
ret
pop
jl
lahf
adc
bound
popa
sbb
dec
push
sub
xchg
sub
or
or
cmp
lret
mov
dec
testb
je
mov
push
sbb
jg
adc
dec
cmc
pop
gs
push
mov
push
ds
push
push
dec
mov
stc
test
push
cmpsb
pop
push
or
lea
dec
sub
insl
notb
jns
pop
ds
sub
push
jo
xchg
xor
add
add
jp
or
out
inc
stc
push
fdivl
loope
aaa
jbe
add
bound
idivb
mov
imul
dec
subl
sti
sub
test
pop
gs
inc
mov
or
mov
icebp
inc
mov
sahf
jg
add
push
jg
inc
sahf
inc
xlat
jp
loopne
sbbl
pop
stc
adc
stos
lahf
out
mov
xchg
lahf
popf
add
mov
fldenv
and
push
test
ja
or
das
idivb
inc
scas
dec
mov
or
in
out
subl
mov
out
sbb
fbld
sub
jg
jb
mov
xchg
sbb
and
popa
clc
in
or
mov
std
insl
add
pop
clc
xchg
test
repnz
in
push
and
push
fxch
mov
fimuls
adc
pop
pop
lahf
xchg
sub
pusha
push
mov
ja
fcomp
push
repz
out
and
pop
pop
fnstsw
cld
pop
scas
aas
in
sbb
into
jmp
fldenv
push
in
mov
test
test
cmpsl
call
loope
xchg
adc
ror
sbb
sbb
pop
and
sub
shll
divl
mov
shr
xchg
out
jb
push
dec
dec
cmc
adc
push
and
addb
dec
sbb
adc
sarb
inc
cltd
push
test
mov
or
adc
mul
je
lock
fcmovnbe
jge
lods
pop
sbb
mov
icebp
nop
insl
inc
inc
out
xchg
pop
out
ja
enter
aad
push
sbb
int3
fcompl
xor
xchg
adc
clc
add
rcll
test
xor
sbb
or
bound
cmp
inc
out
inc
ret
popa
push
in
jl
aaa
cmp
shll
or
push
mov
adc
lret
cli
push
call
adc
shr
jmp
ljmp
push
pop
mull
push
mov
daa
test
stos
imul
inc
sub
adc
outsb
stos
pop
frstor
mov
dec
sbb
sbb
mov
ljmp
sub
dec
sub
sub
or
push
jae
pop
popa
stc
dec
dec
mov
dec
sub
loopne
add
out
out
mov
mov
xchg
ljmp
outsl
out
jbe
es
orl
xchg
xor
sub
dec
iret
cwtl
jmp
dec
sub
jo
outsb
enter
cltd
shl
jns
push
cli
pop
mov
add
jb
fnstcw
inc
pusha
leave
outsl
jbe
inc
sub
sbbb
outsl
pop
mov
mov
jo
dec
fdivs
or
outsb
movsl
fsubrs
sbb
push
sub
incl
push
sub
dec
jp
test
ret
xor
cmp
out
sahf
in
push
mov
add
jo
out
call
xor
adc
clc
sub
xor
push
and
test
sub
into
mov
adc
aad
nop
or
xlat
repz
pushw
mov
mov
mov
mov
out
push
sti
add
cs
push
in
sub
cli
xor
mov
adc
cld
push
into
loope
aas
in
repz
mov
cli
das
inc
aad
test
pop
xor
sahf
hlt
dec
and
mov
nop
dec
aam
mov
inc
sbbl
mov
std
icebp
sub
mov
pop
outsl
mov
bound
sub
sub
or
and
sub
outsb
fsubrp
out
mov
rcll
addr16
mov
cmpsl
insl
flds
inc
adc
and
pop
cmc
mov
jns
pop
movsl
xor
jns
sbb
shr
fnstcw
aam
jno
or
add
sub
jge
insb
cmpsl
mov
sbb
sub
cmpsl
loop
push
stos
ds
lahf
outsb
push
cmpsl
sub
xchg
movsl
cmp
cmp
ja
test
leave
pop
jl
mov
out
mov
int3
decl
adc
jge
mov
lock
add
js,pn
into
mov
sub
mov
test
cmc
push
cmp
iret
mov
and
sbbb
xchg
leave
sub
or
mov
repz
mov
jb
rcl
xchg
cmpsl
in
fucom
xchg
jae
xchg
rcrl
es
incb
pusha
jne
mov
cmp
mov
in
dec
pop
xor
fwait
add
dec
sbb
push
mov
out
push
mov
mov
mov
cmp
sub
les
cli
push
pop
xchg
dec
pusha
pusha
popf
roll
ret
xchg
pop
lret
or
cwtl
sub
icebp
call
aad
hlt
mov
mov
pop
mov
sbb
cmpsb
imul
out
mov
sub
and
mov
pop
imul
fcompl
jmp
loope
scas
outsl
inc
adc
mov
jg
popw
xchg
ja
or
adc
or
mov
push
addr16
inc
pop
hlt
adc
push
pop
je
xchg
nop
xor
icebp
cwtl
aad
jg
shl
jmp
inc
mov
cmp
xorb
pushf
insl
bound
jg
hlt
add
dec
jg
cmpsl
dec
adc
in
addr16
mov
push
sbb
jle
and
or
fisttpl
jno
jle
jne
lret
add
int3
rcrb
xor
in
clc
push
in
shll
dec
push
enter
iret
hlt
roll
cmp
inc
mov
enter
jecxz
and
xchg
mov
cmp
mov
dec
js
jns
ss
pop
inc
push
mov
not
nop
mov
jns
les
nop
lock
out
and
push
stc
int
mov
or
dec
jnp
shl
xchg
ss
je
scas
addr16
adc
push
jbe
imull
in
dec
in
dec
insb
out
scas
jnp
les
adc
cmp
ret
mov
aam
lea
pop
imul
or
lret
shll
push
mov
das
mov
adc
dec
dec
in
aam
pusha
loopne
negl
in
jno
mov
adc
andl
jle
test
xlat
and
popa
nop
fisttpl
mov
inc
mov
jp
jecxz
lahf
jl
add
repz
pop
pop
sbb
add
movsl
xchg
jb
dec
mov
jne
add
pusha
enter
cld
push
insl
iret
xlat
cmc
subl
push
sbb
fwait
jb
fdivrl
sub
insl
aad
or
dec
aam
xor
arpl
add
xchg
jb
add
mov
aas
pop
jo
dec
outsl
mov
sub
xor
fildl
jb
mov
in
js
dec
or
jecxz
inc
cmpsl
push
clc
dec
adc
dec
inc
outsb
cmc
fcomps
push
leave
pushf
dec
call
jns
pop
pop
je
scas
jae
xor
popf
outsl
test
lahf
mov
out
mov
sub
movsb
roll
mov
les
fisubl
outsl
dec
bound
inc
jle
dec
sub
outsl
and
jle
setle
push
jmp
jnp
out
clc
bound
rcll
dec
xchg
dec
or
xchg
xchg
sub
cmp
inc
push
adc
fistps
xchg
lods
iret
roll
scas
shl
arpl
or
push
lods
mov
mov
andps
push
imul
inc
mov
and
or
or
xchg
cmp
mov
sub
lea
ret
dec
and
push
push
jge
call
pop
or
mov
dec
mov
sub
lahf
dec
add
addl
push
mov
push
inc
xchg
sub
cmp
mov
pop
inc
and
loop
inc
jno
repz
mulb
test
jl
add
aaa
scas
mov
enter
or
dec
push
das
cmp
pushf
mov
cwtl
lret
fadds
cwtl
loope
inc
outsb
pushf
mov
stos
xchg
mov
aam
cld
push
popa
lret
push
repz
cmp
mov
inc
or
lcall
and
enter
mov
in
xor
data16
mov
sub
mov
adc
sub
stos
mov
pop
rolb
movsb
adc
jl
push
inc
lcall
xor
aaa
in
ret
je
fcmovnb
mov
jmp
inc
xor
dec
sub
dec
dec
cld
jns
loop
mov
arpl
inc
lods
inc
shrb
or
push
dec
dec
iret
pop
outsb
out
sub
test
mov
xor
add
lret
cld
ljmp
popf
insl
mov
sti
mov
mov
mov
xor
mov
das
pop
pop
cli
test
jbe
les
push
dec
and
adc
ljmp
lods
sahf
adc
jge
pop
shl
loopne
loop
movsl
cmp
je
ss
lahf
lock
je
icebp
je
lret
repz
xor
sahf
cli
mov
adc
sbb
xchg
outsl
xor
andb
rcr
sbbl
jbe
fadds
call
adc
jne
mov
jno
jmp
test
ficoml
cmp
xchg
fistl
ja
sbb
sub
test
jns
adc
iret
ds
pop
in
lret
enter
stos
xor
sub
pop
jecxz
pop
add
jmp
rcrl
add
out
inc
rcr
gs
sarl
fsts
les
gs
dec
ja
mov
cmp
in
lret
ftst
adc
das
cmp
outsl
insb
xchg
adcb
mov
arpl
sbb
pushf
push
insb
loope
add
xor
daa
inc
addr16
and
inc
fcoms
gs
mov
out
pop
hlt
xchg
pop
inc
and
lahf
fcmovnbe
jnp
andb
xor
sbb
pop
loop
cmpsl
shl
jmp
insl
in
xor
ss
in
and
stc
sti
fwait
mov
ljmp
popa
and
jge
popa
mov
mov
leave
and
stos
ret
adc
popl
ret
and
mov
ret
dec
push
xor
popf
shlb
stos
out
sbb
xchg
adc
jbe
sbb
test
dec
dec
inc
sbb
fdivrl
sub
pop
sarl
lds
popf
repnz
test
dec
movsl
jg
mov
movl
sbb
inc
dec
mov
jge
push
stos
addl
stc
pop
mov
push
sahf
aaa
fsts
sbb
xor
jle
out
lret
insl
popa
xor
push
xor
push
pop
and
xchg
pop
sbb
addr16
push
mov
push
test
dec
add
in
add
sub
mov
xor
bound
das
into
sub
lahf
push
test
popf
movb
or
bound
scas
hlt
mov
sub
out
or
insb
mov
pop
daa
cmp
jp
stos
pop
in
jmp
lahf
cmp
mov
bound
pop
jne
push
filds
gs
mov
sbb
add
testb
dec
lea
mov
push
stc
mov
shlb
insl
inc
xor
mov
outsl
add
mov
fcmovnu
testb
sar
mov
mov
cmp
mov
dec
in
add
nop
jge
fs
pop
mov
sub
cmp
mov
pusha
sub
mov
add
fdivr
stos
xchg
imulb
inc
cmp
outsb
pop
fsubrl
out
rclb
push
stc
push
mov
sbb
mov
inc
pop
faddp
data16
scas
mov
or
lret
xchg
andb
cmpb
stos
nop
mov
push
push
pop
insl
and
mov
orl
scas
std
dec
fmuls
std
sbb
xchg
jns
data16
rol
mov
xchg
in
ret
inc
adc
xor
xor
mov
ret
and
add
test
sub
insb
ret
nop
jge
imul
cmp
xchg
cmp
sbb
call
xchg
mov
int3
lret
lret
mov
lock
idivl
lds
jl
cmpsl
sbb
test
or
pop
xchg
sti
jbe
in
cmp
inc
mov
inc
or
add
loop
cmp
xchg
push
xchg
std
jo
aaa
mov
jae
outsb
cmpl
movb
xlat
jp
sbb
mov
jns
nop
cwtl
inc
xor
push
pop
addr16
jno
jmp
dec
push
movsb
lret
mov
sub
pop
cmp
imulb
ret
adc
ret
cld
enter
imul
ds
jl
add
mov
jge
lock
cmp
xor
xchg
xor
and
cmp
push
dec
push
xchg
sahf
rcr
icebp
scas
add
dec
xchg
mov
mov
push
mov
mov
push
add
fbstp
mov
add
jmp
outsl
test
test
dec
cmc
push
inc
sbb
jg
fmuls
mov
xchg
ret
mov
inc
mov
jo
cmp
subl
xchg
sbb
mov
fdivl
jl
inc
cmp
sahf
push
js
rcrb
jecxz
pop
or
frstor
test
sbb
addr16
pop
cmp
lcall
xchg
cmp
test
pop
adc
in
stos
sub
and
jl
inc
cmp
xor
les
mov
std
sub
ja
scas
or
push
mov
iret
cmp
icebp
fsubs
cmpsb
mov
inc
out
lods
cltd
repnz
and
sbb
mov
bound
jmp
xchg
sbb
addr16
rol
scas
leave
sbbl
mov
dec
mov
mov
aaa
daa
add
call
das
mov
xchg
cmp
xor
movsl
repnz
jbe
push
jo
out
cmpsb
es
je
fcoml
ss
popf
dec
push
ret
add
leave
clc
cltd
add
movsl
adc
loop
jmp
cmc
fldl
and
iret
imul
xchg
mov
flds
and
loope
sbb
cmp
pop
or
int3
xor
fdivrl
lret
pop
out
cmp
mov
int
in
inc
mov
fwait
addb
cmp
shll
lds
ja
hlt
orl
rorb
pop
cltd
jae
jecxz
clc
and
out
mov
inc
inc
aas
loop
mov
orb
lock
loopne
sbb
repz
sbb
adc
aaa
lods
shr
gs
test
or
adc
test
xchg
xor
push
je
rcr
test
fnstcw
setl
cmpb
mov
lahf
jbe
dec
stos
shr
enter
xchg
scas
cmp
or
sbb
mov
movsl
dec
jg
lret
pusha
enter
incb
loop
leave
movsb
mov
sub
cli
lods
inc
push
mov
aam
stos
dec
mov
mov
lret
stc
mov
pop
movb
xor
in
pop
lea
dec
mov
shlb
outsb
add
mov
test
jb
xchg
dec
dec
sbb
xchg
push
or
loop
xchg
fimuls
int
imul
call
mov
adc
cwtl
dec
sub
sub
push
pop
xorb
push
push
arpl
nop
jge
enter
clc
inc
cmpsb
cmp
and
cmpb
sub
add
inc
sub
adc
and
xor
sub
in
xor
mov
sbb
movsl
xor
fisubrs
pop
push
dec
mov
outsb
ss
mov
rcll
and
jbe
imul
adc
insb
sub
or
jb
jmp
movsl
fcoml
in
sbb
sti
cmp
cld
sbbl
sub
call
mov
insb
loop
mov
jnp
mov
stc
clc
pop
and
cmp
hlt
and
xor
movsl
dec
mov
xchg
cmp
push
add
adc
test
loopne
add
les
in
js
pop
imul
stc
adc
fbstp
in
pusha
pop
sub
pop
jo
mov
inc
shlb
push
out
dec
mov
xor
bound
cmp
or
imul
dec
iret
mov
leave
jle
nop
in
mov
sub
insb
xchg
xchg
push
fnstcw
xchg
lds
insb
call
and
sar
sbb
cmpsl
inc
pop
mov
mov
sahf
loopne
loopne
and
inc
cs
push
in
test
add
test
push
lock
lea
xor
pop
fwait
in
pop
daa
addr16
pusha
lret
scas
aad
in
imul
jg
sub
adc
fimuls
in
icebp
xchg
shl
out
mov
xlat
xchg
sarl
pop
dec
ds
jns
dec
inc
jmp
pop
dec
je
pop
into
popl
sbb
jle
lods
mov
pusha
fwait
andl
ds
rcl
mov
test
dec
xchg
repz
mov
push
jle
and
repz
cmp
push
push
mov
pop
aam
xchg
cmp
call
mov
daa
shrb
out
mov
movsb
xchg
mov
jl
xor
mov
add
inc
ljmp
enter
adcl
lea
xor
adc
mov
movsl
xchg
dec
fdivl
cmpsb
sahf
testb
lock
es
cwtl
test
and
insl
ret
fsubrp
mov
sub
and
dec
std
cmpsb
xor
sahf
mov
in
push
dec
dec
pop
mov
mov
lcall
imul
mov
lahf
push
into
sbb
repz
lret
jg
dec
int
je
es
into
dec
xchg
mov
add
in
xchg
cmp
xchg
adc
aaa
inc
outsl
dec
lea
test
lods
movsb
push
mov
or
idiv
mov
js
xor
mov
dec
pop
inc
aaa
mov
jg
pop
jle
fildl
mov
movsb
dec
call
aad
ljmp
xor
cwtl
jmp
dec
jmp
mov
inc
in
ja
push
sti
mov
pusha
pop
insl
mov
aaa
add
inc
ds
lret
fs
or
shl
sbb
or
sbb
add
movb
dec
mov
repnz
and
repz
inc
das
pop
lods
cltd
jmp
pop
pop
in
cmpsb
jp
jecxz
test
pop
repz
cli
push
faddl
pop
push
adc
notb
clc
aaa
xor
cmpsl
mov
jmp
mov
adc
es
pop
js
inc
cmc
adc
pop
lahf
sbb
loop
pop
jb
cmp
inc
fnstenv
sub
cmpsl
adc
add
lea
insl
mov
mov
ror
push
imul
sbb
or
and
fisubs
fsubrs
xor
mov
scas
push
jae
testl
pop
movb
pop
mov
repz
data16
cmp
aas
sbb
xor
sarl
fs
fisubs
sbb
jmp
cwtl
adc
or
push
shl
imulb
jnp
call
arpl
sbb
jno
loope
lea
jge
pop
inc
mov
or
push
xlat
ret
adc
lret
mov
jne
scas
inc
ret
push
icebp
clc
lret
xchg
ret
fbstp
xchg
lock
xchg
lds
cmp
jge
packuswb
cmp
loopne
into
adc
test
lahf
sbb
ret
or
in
push
in
popa
mov
sub
push
popf
or
pop
jle
push
clc
aaa
jmp
movsl
jl
jbe
jl
ljmp
ja
dec
xor
add
jl
mov
mov
js
cmpsb
imul
push
mov
movsl
loopne
xor
lret
ficomps
push
inc
imul
cld
stos
pop
popf
ret
jbe
pop
push
push
xor
jle
sbb
lea
out
cmp
dec
push
cs
idivb
mov
pop
dec
popf
ja
stc
push
jnp
xchg
jb
loope
inc
shrb
mov
cmp
lock
ja
gs
test
or
mov
movsl
ret
pop
sbb
ss
dec
insl
inc
sbb
cmp
mov
icebp
lea
sbb
mov
jmp
int
dec
cmpsl
in
xchg
pop
lret
ja
lahf
dec
jp
pusha
xlat
inc
inc
insl
enter
ret
jge
adc
mov
daa
mov
sbb
arpl
imul
push
stos
test
out
sbb
jb
test
lidtl
xchg
hlt
or
insl
or
inc
cwtl
xor
push
lahf
scas
insl
jmp
push
call
out
xor
mov
mov
xchg
xchg
fwait
gs
addr16
or
test
jo
call
jnp
mov
pop
js
dec
mov
in
mov
mov
call
pop
inc
push
fcmovb
aad
repz
pop
xchg
inc
fsubr
jmp
jb
ficomps
dec
movsb
mov
jne
pushf
add
iret
loope
lret
pushf
dec
adc
scas
adc
sub
cmp
add
cwtl
cli
pop
xchg
mov
push
sbb
cmp
lcall
shlb
int
dec
or
cwtl
testb
add
jge
mov
push
xor
lahf
add
stc
outsl
mov
push
mov
push
and
cltd
add
xor
mull
push
jg
out
mov
out
lea
mov
loope
mov
add
inc
sub
out
cmp
jp
pop
out
xchg
cmp
or
call
xor
dec
mov
hlt
inc
fidivs
pop
movsb
dec
icebp
daa
pop
push
and
push
fistl
scas
test
mov
pop
jne
and
shll
dec
sbb
dec
adc
push
movsl
scas
nop
sti
cwtl
sub
jne
aam
je
lahf
push
cmp
push
pop
addr16
lods
rcrb
std
mov
adc
rcrb
xchg
cmpsl
mov
mov
outsb
clc
sahf
cmp
pop
inc
sub
and
pusha
leave
sbb
sub
das
xchg
adc
xchg
and
repnz
lcall
pop
pop
push
in
lret
dec
sub
rclb
inc
test
in
and
arpl
sbb
sbb
mov
mov
and
inc
xchg
mov
sbb
ret
or
xchg
insb
fcoml
mov
jo
push
insl
ljmp
aam
movsl
sbb
mov
sbb
jne
or
and
jno
inc
sbb
icebp
jae
push
xchg
inc
out
jb
int
pop
or
jg
and
xor
in
mov
scas
popf
or
dec
mov
xchg
pushf
dec
jne
nop
mov
and
leave
loopne
jne
cmpsb
push
mov
xchg
sbb
and
insb
fistps
rorl
pop
add
push
addr16
not
jbe
dec
mov
insl
ja
stos
adc
and
xor
fwait
mov
jb
and
add
or
mov
leave
sub
xchg
movsb
inc
jle
icebp
jbe
and
or
aam
ds
push
cltd
cld
sbb
in
sbb
mov
inc
mov
movsl
cmp
sub
xor
cmp
inc
jae
aam
imul
and
std
imulb
je
loop
push
enter
xchg
dec
mov
sub
popf
jo
sbb
xchg
lcall
xchg
xchg
aad
loop
aaa
cmp
xchg
pop
jae
push
inc
dec
push
out
stc
movsb
pop
push
adc
mov
push
xchg
push
lock
loopne
mov
xor
je
lahf
and
pop
xchg
cmp
mov
push
push
mov
pop
mov
push
sub
lret
testl
rclb
xchg
xchg
dec
jb
xchg
push
stc
aaa
arpl
mov
jb
outsb
pop
add
jo
xchg
jge
leave
mov
sub
rorl
ljmp
insb
jbe
push
shll
mov
cmp
mov
and
push
or
mov
loop
repnz
mov
sub
cmc
stos
adc
aam
inc
pushf
es
in
cli
sbb
fwait
es
dec
jo
jl
test
jnp
leave
jp
mov
in
xchg
add
je
dec
je
sub
xchg
repz
ljmp
icebp
or
fdivrs
fcmovnbe
call
scas
or
jbe
int
rcrl
pusha
fcomip
xchg
pop
repz
lds
adcb
mov
pop
aas
iret
add
xchg
scas
push
lds
xor
push
out
ficoms
popa
fwait
mov
hlt
dec
push
in
data16
nop
loop
test
jae
mov
loopne
cmp
stos
sahf
lds
sbb
sbb
push
bound
dec
loopne
gs
mov
js
push
pop
sti
lds
ds
rcll
pop
imul
add
dec
mov
clc
pop
push
sub
add
and
lret
push
scas
sub
out
mov
cmp
repnz
dec
mov
insl
test
jge
jnp
call
jne
addr16
mov
xor
jo
lea
dec
out
test
mov
aad
xchg
mov
push
sub
divl
sub
pop
inc
test
adc
je
and
push
adc
or
nop
pop
aaa
mov
movsb
inc
aam
test
adc
outsb
rclb
loop
fldt
jns
inc
and
pop
mov
pop
push
decl
adc
push
rorb
mov
pop
movsb
mov
insb
dec
or
mov
insl
fnstenv
sbb
jo
xor
push
lcall
sub
xchg
push
and
pop
add
jnp
decb
lcall
pop
data16
xlat
jp
cwtl
pop
loope
into
jmp
fildll
in
or
ds
dec
outsl
out
xchg
aad
jl
sbb
outsl
mov
scas
sbb
sahf
and
mov
lds
jecxz
repnz
sahf
add
sti
mov
iret
sbb
inc
pop
lods
je
icebp
jl
or
lret
add
insb
sub
cmc
incl
clc
dec
cld
xlat
xchg
jecxz
cmpb
fmull
xchg
fs
mov
or
das
dec
jmp
cwtl
push
jge
cmc
icebp
push
sti
jle
or
testl
dec
in
test
jmp
leave
pop
sbb
mov
ds
imul
cmpb
sbb
mov
inc
mov
push
ret
or
jp
jmp
mov
push
or
push
pop
icebp
mov
sbb
ja
addr16
insl
outsl
data16
dec
mov
lods
in
pop
fbld
lods
or
loop
dec
add
fcmovne
fs
sbb
push
mov
test
cmp
lcall
add
inc
repz
das
test
mov
cmp
aad
movsb
ja
push
xor
repnz
ret
sbb
xor
repz
jb
int
inc
cmc
jb
dec
push
sbb
sub
pushf
xor
in
jp
rcl
popa
adc
popl
mov
inc
sbb
fwait
mov
push
call
pop
subl
call
std
inc
jb
lahf
adc
cmp
adc
ljmp
enter
adc
insb
dec
stos
stos
out
push
mov
fs
shlb
test
lods
stc
sahf
jnp
pop
push
adc
adc
icebp
cmp
add
add
jge
cmp
cld
rcll
faddl
lahf
rcrb
xchg
xlat
rcl
inc
rcll
jb
dec
xchg
pop
enter
stos
xchg
into
or
aad
jmp
loopne
stc
loopne
scas
cmp
xorl
ret
sbb
dec
xchg
mov
out
adc
pop
jo
pop
pop
lcall
pop
inc
cmpb
leave
fs
push
outsb
xchg
cmpsl
loopne
arpl
push
fbld
xchg
and
inc
sub
add
mov
xchg
mov
fmull
adc
out
adc
mov
fucom
cltd
mov
test
lret
pusha
incb
jl
xchg
in
adc
repnz
fwait
scas
gs
lods
popf
imul
cld
jge
aam
outsl
dec
and
pop
mov
sub
mov
bound
inc
or
jo
pop
adc
arpl
pop
bound
mov
dec
lret
mov
daa
jne
pop
mov
inc
adc
in
insb
subl
ja
ja
dec
push
mov
push
out
movsb
and
and
dec
pop
leave
lods
push
cmpsb
sub
push
push
sub
xchg
rcrl
mov
leave
or
repz
inc
push
push
jge
jg
push
enter
jle
cmpl
fimuls
enter
int
movsb
mov
test
cmp
out
out
lahf
scas
add
bound
push
ret
shrl
jae
pop
popf
inc
jne
loope,pt
jns
shrl
loop
leave
mov
int3
dec
fldenv
lods
dec
cmp
int3
jle
jmpw
ds
in
jge
scas
loopne
push
test
scas
xor
enter
movl
xchg
mov
repnz
daa
mov
sub
cwtl
rcl
lret
cltd
adc
fwait
shlb
cmp
dec
xor
gs
mov
fdivs
inc
or
mov
flds
add
sbb
shlb
ljmp
enter
cmp
mov
mov
out
cli
cmp
aas
shr
xchg
push
cmpsl
mov
mov
stc
scas
ficomps
fxam
mov
out
cli
out
movsb
dec
aam
mov
lcall
into
data16
daa
push
adc
pop
mov
add
cmpsb
xchg
mov
xchg
xor
cwtl
les
xor
inc
imul
pop
jg
xor
popa
push
lods
fwait
mov
cmp
ljmp
or
cltd
mov
jmp
push
pop
push
add
sub
mov
notl
sbb
dec
inc
roll
sahf
mov
mov
jb
sarl
or
inc
or
es
inc
addr16
inc
lock
mov
leave
cs
pop
pop
stos
pop
test
cli
push
jle
push
insb
loopne
icebp
cmc
and
and
mov
loopne
dec
xor
mov
pop
fnstcw
fsubrl
adc
ret
xor
pop
and
dec
push
add
es
dec
jl
shlb
xor
ljmp
popf
mov
loop
addb
push
loop
pop
push
lea
xchg
add
pop
xchg
in
imul
mov
sub
inc
xchg
aaa
mov
add
cmp
int
add
push
lahf
in
je
mov
lods
pmaxub
out
loope
ja
pop
sub
add
daa
outsb
inc
mov
js
outsl
and
sbb
test
jbe
sti
mov
and
mov
cmp
push
inc
lret
jmp
hlt
push
and
paddd
dec
je
push
cmp
scas
push
pop
push
mov
dec
or
jle
and
add
adc
sub
mov
lock
sub
movb
xchg
movsl
and
inc
xchg
addr16
jo
pusha
sub
mov
test
imul
das
jno
int3
inc
mov
popa
xchg
jmp
mov
and
bound
repz
cmpsl
xor
cmp
mov
leave
daa
push
shr
inc
les
xor
fdivr
xchg
mov
lock
pop
inc
aas
push
xchg
and
sub
mov
popf
cmp
cmp
ret
inc
add
jg
xor
mov
mov
cmp
es
sub
cmp
out
adc
ret
sbb
test
inc
add
sbb
inc
test
jne
sarb
out
mov
push
cmpsl
xchg
fildl
inc
xor
sbb
sub
aas
mov
or
pop
jle
lcall
dec
pop
push
xor
xchg
adc
out
sub
mov
stc
mov
loope
mov
out
ljmp
out
insl
sbb
sub
and
pushf
leave
push
outsl
pushf
aaa
pop
cld
stos
mov
aam
add
pop
adc
inc
pushf
add
push
jno
shrl
fistpll
stos
test
add
outsb
pushf
or
inc
pushf
sbb
mov
stos
repz
shll
lods
mov
push
cmp
sbbb
jae
lahf
mov
mov
in
add
rclb
lret
push
stos
jmp
nop
mov
mov
jo
cmp
adc
into
cmp
push
mov
out
mov
shrd
ds
and
jno
sbb
clc
add
pusha
leave
daa
dec
sahf
push
test
pop
adc
lret
pop
fstps
jmp
mov
jp
movsb
nop
xor
cltd
insb
and
arpl
cmp
mov
xor
gs
shufps
sbb
orb
lea
jne
cli
pop
add
cmpsb
cmc
pushl
mov
cld
mov
iret
sub
jnp
lea
jmp
pusha
insb
jo
in
icebp
ficompl
mov
add
xchg
xor
sub
lahf
test
mov
out
in
movsb
push
gs
cmp
sbb
lahf
xchg
jnp
inc
ja
jbe
dec
fidivl
shll
call
aaa
loop
push
push
push
rcll
das
rcrb
outsb
jge
pop
sbb
sbb
lods
inc
in
pop
pushf
in
lea
push
cld
arpl
mov
je
sub
cli
cmc
sub
mov
aam
outsb
jb
repz
jbe
test
popf
push
mov
push
dec
nop
jne
mov
xor
pop
add
jp
pushf
add
dec
ja
mov
insb
idivl
shrl
cmp
outsb
push
xor
mov
daa
das
adc
xchg
dec
pop
jecxz
mov
cmp
pop
mov
popa
mov
xor
inc
lods
aad
jmp
dec
jnp
in
pop
js
and
pop
orl
in
stos
push
daa
or
repnz
lods
jle
push
xor
mov
fidivrl
add
in
mov
out
fadd
cmp
movsb
stc
aam
xchg
jl
xchg
arpl
adc
enter
sub
movsb
add
inc
push
adc
ret
and
xchg
outsb
leave
jge
xor
bnd
in
inc
ljmp
inc
pop
and
movb
and
xchg
das
and
cmpsb
and
inc
orl
sbb
aas
adc
cwtl
sbbb
jns
mov
addb
add
jo
sub
push
xchg
ss
jmp
sarb
dec
dec
in
ljmp
test
dec
push
inc
jecxz
mov
xor
or
cmpsl
lea
dec
mov
xchg
enter
outsb
adc
add
and
mov
xor
aam
inc
int3
mov
jae
mov
mov
xchg
mov
xchg
stc
pop
sbb
push
idivb
xchg
adc
ret
movsl
adc
rorl
pop
aas
sub
fcmovnb
aaa
ds
int3
mov
lcall
cmpsb
mov
out
xchg
mov
xchg
cmp
cwtl
movsb
mov
rclb
or
sbb
enter
xor
mov
xor
cmpsl
int3
cld
adc
xchg
icebp
sahf
clc
xchg
ss
arpl
mov
mov
fsts
bswap
jg
test
xor
out
addr16
mov
cmp
gs
insb
mov
loope
shll
add
std
pop
jbe
inc
sbb
xchg
rorl
and
fucom
aad
sti
xchg
xchg
inc
sbb
mov
push
inc
fstps
dec
adc
int3
pop
rol
int3
repnz
xchg
fisttpl
dec
cmpsl
sar
xchg
jp
lea
popf
sub
add
push
fdivl
in
mov
or
enter
pop
fwait
xchg
call
cmc
jecxz
mov
cmp
mov
popf
xlat
aas
sub
jecxz
bnd
pop
push
movsb
add
adc
xchg
pop
push
add
retw
ds
xchg
aad
jo
mov
or
push
int
add
fcoml
sbb
jns
mov
sarb
dec
adc
sub
jmp
aas
pushl
xchg
pop
add
xlat
xor
push
or
scas
scas
mov
cltd
cli
dec
cmpb
out
lea
popa
into
int
xchg
mov
outsl
inc
sbb
pop
mov
adc
arpl
repz
movsb
inc
push
push
sti
popf
sbbb
push
cmp
in
xchg
cwtl
or
fidivs
fsubs
xchg
xchg
in
loope
scas
jp
popa
xchg
cmp
push
cmp
and
cltd
movb
insl
fistpll
mov
mov
jl
aaa
and
dec
das
cmp
adc
mov
adc
sub
xchg
xchg
mov
push
inc
xor
ss
in
stos
jmp
pop
and
call
mov
mov
aas
pop
jb
popf
mov
sub
inc
mov
jnp
call
mov
lcall
popf
adc
xor
adc
jg
aas
test
flds
insb
xor
cs
outsl
das
adc
pop
jnp
imul
repnz
adc
bound
adc
adc
mov
mov
push
add
push
and
lock
jecxz
pop
rorb
shl
pop
pop
or
movsb
mov
xorb
popf
sti
dec
lock
std
imul
ret
pop
xchg
pop
iret
cmp
subl
aam
movb
test
mov
addr16
xchg
arpl
jle
in
push
jmp
mov
push
cmp
mov
fbld
jecxz
mov
add
xor
bound
mov
push
loop
les
dec
add
xchg
iret
sbb
clc
xor
push
xchg
cs
cmp
arpl
jmp
inc
shl
cmp
dec
dec
dec
ds
sbb
call
cmpsl
mov
sbb
jnp
jnp
gs
push
dec
add
mov
add
xchg
jl
inc
aad
das
cli
adc
inc
push
lahf
cmp
leave
mov
gs
sti
aaa
test
sar
jg
out
aas
iret
mull
stos
faddl
fucomi
mov
and
inc
pop
mov
cmpsl
test
and
adc
sbb
shlb
pop
dec
jle
ljmp
mov
sti
ret
out
cs
inc
test
test
test
leave
cs
repz
xchg
xchg
lahf
pop
call
stos
pushf
mov
jno
cli
pop
imul
xor
or
int
addb
mov
xchg
aam
or
bound
les
sub
test
inc
jmp
xor
inc
mov
aas
cltd
aad
and
mov
arpl
jne
lock
das
cmp
jle
cwtl
sub
xchg
nop
out
iret
mov
xlat
test
fildll
stos
popa
pop
push
pop
push
add
fcomip
mov
push
mov
daa
jmp
and
pop
add
xorl
arpl
loop
mov
sahf
rorb
xlat
call
dec
xor
jo,pt
insb
movsl
pop
das
in
gs
push
xchg
jp
jg
mov
cmp
insl
jecxz
hlt
roll
into
decl
push
xchg
jecxz
sbb
xor
lds
jmp
das
sub
mov
xchg
mov
cmp
and
jg
mov
in
jl
stos
or
dec
inc
push
sahf
in
inc
jl
out
add
test
out
push
and
out
rcl
in
mov
loope
push
dec
stc
pushf
lods
cmc
ljmp
lods
pop
pop
call
lods
rcll
insb
test
mov
pop
fiadds
inc
aaa
jge
enter
leave
dec
and
ds
in
shlb
pop
popf
push
pop
push
outsl
mov
nop
inc
mov
scas
movsb
fistps
xchg
or
jg
test
shlb
sub
mov
pop
push
xchg
leave
pop
in
push
int
dec
js
jecxz
stos
cld
into
cmp
in
in
fadds
or
aad
scas
loopne
jnp
loopne
inc
out
cmp
or
push
lahf
xlat
pop
outsb
push
outsb
add
mov
cltd
xlat
rcrb
daa
mov
scas
mov
lea
cmp
or
test
jb
xor
push
mov
cmp
mov
cmovbe
insb
push
cli
xchg
stos
jo
mov
add
push
or
lods
push
jg
adc
bound
cmp
or
or
or
test
std
mov
mov
sbb
out
xor
roll
in
dec
sub
loopne
and
dec
test
mov
adc
test
mov
clc
or
cltd
rolb
stc
lock
xchg
mov
and
sub
mov
dec
and
int3
pop
dec
pushf
idivl
cmp
clc
dec
or
nop
adc
add
popf
shrl
adc
notl
push
xlat
loop
mov
dec
adc
jl
mov
inc
movsb
inc
push
mov
adc
cs
mov
arpl
push
int
inc
outsb
push
and
cmp
pop
testb
push
mov
sub
sub
dec
mov
push
nop
das
and
adc
xchg
push
and
cmp
cmp
jns
cltd
test
xor
ss
xor
imul
sub
notl
add
movb
inc
subl
pop
jle
hlt
and
repz
pop
addr16
mov
sub
int
inc
outsl
adc
fwait
xchg
loop
xchg
addr16
cmp
and
cmc
mov
xorl
push
je
test
adc
outsb
mov
fnstenv
mov
out
int
jbe
cmp
movsl
cmp
mov
mov
xchg
mov
xchg
out
inc
push
je
inc
lods
dec
pushf
popa
ret
dec
xchg
sub
ret
sbb
sub
cltd
push
imul
sub
aad
pop
add
sbb
sbb
stos
sub
sbb
lea
mov
and
mov
call
xchg
imul
mov
xor
xchg
mov
xchg
and
movsb
adc
cmp
adc
and
xor
mov
inc
in
into
frstor
mov
iret
and
pop
dec
int
pop
in
inc
pop
sub
mov
pop
xchg
je
in
cmp
push
sti
xor
jg
fildll
and
sbb
add
fiaddl
or
push
loopne
xchg
mov
mov
repz
inc
pop
inc
mov
cmp
jns
ficoml
out
aaa
aad
gs
push
jnp
xchg
ljmp
paddusw
jp
cld
pushf
scas
sbb
sbb
jp
imulb
insb
insb
cmp
jno
add
pop
xchg
imul
js
mov
inc
push
push
jbe
cmp
mov
sub
adc
adc
cmpb
fstpl
xor
out
mov
movb
popf
xchg
frstor
sub
test
or
sbb
jbe
or
lods
jae
mov
sub
inc
sub
xchg
dec
daa
sbb
cmc
sbb
jecxz
jae
xchg
xor
add
sub
pop
and
mov
bound
push
mov
dec
cmp
jmp
xor
sbb
jmp
xor
mov
inc
lods
ja
mov
adc
sti
push
inc
push
xchg
xor
push
movsb
and
pop
js
pop
rclb
add
adc
sbb
push
xor
xchg
sahf
pop
stc
pushf
stos
pop
inc
jns
add
fistpl
aas
imul
into
and
sub
or
jg
xor
jmp
dec
lea
gs
inc
inc
add
xor
and
and
cmp
cmc
pop
lret
or
adc
insb
mov
jb
and
mov
cmp
mov
add
adc
mov
mov
les
mov
repnz
and
push
push
testl
movsl
ss
inc
dec
nop
xor
int
aaa
add
jle
seto
push
push
arpl
in
fucompp
pop
ss
mov
pop
rcrb
mov
sti
add
mov
das
jmp
dec
sbb
fmulp
inc
mov
sub
add
shll
pop
xchg
push
cmp
cli
mov
dec
lods
repz
sti
push
pop
test
out
in
pop
ja
dec
xchg
movsb
cmp
test
cld
int
dec
ljmp
or
rcl
fstp
addr16
frstor
mov
cmpsb
push
es
push
hlt
mov
cltd
mov
and
outsl
sbb
test
dec
lcall
repnz
rorl
sub
mov
movsl
int
push
pop
dec
decb
or
add
jg
cs
dec
js
dec
std
sub
or
gs
push
mov
jnp
mov
adc
mov
and
and
fnstsw
in
adc
adc
push
sbb
fstps
in
imul
add
rcrb
scas
mov
das
mov
inc
mov
cmp
lods
push
jmp
sbb
mov
inc
jae
sti
bound
lods
stc
cli
into
rcrl
test
cmpsb
and
stos
or
pop
jg
cltd
popa
call
xor
sbb
sub
push
add
fdivr
lret
xlat
leave
in
mov
data16
arpl
mov
test
in
dec
mov
iret
and
dec
xor
out
push
sbb
push
es
xor
cmpsw
lods
jb
inc
adc
lret
xchg
adc
pop
adc
push
hlt
cmp
rcr
dec
lock
xor
andl
mov
das
jne
inc
ja
int3
or
jo
stc
mov
mov
sub
aaa
sbb
lds
mov
and
popf
fbstp
je
pushf
mov
repz
cmc
sub
test
mov
xor
sbb
nop
cmc
jecxz
stc
nop
sbb
mov
aaa
enter
cmp
pop
jno
cmp
mov
imul
push
leave
mov
ret
add
repnz
add
adc
cwtl
jbe
movb
xor
cmp
mov
push
addb
push
subb
add
push
jo
addb
aam
arpl
lret
test
std
jnp
jae
lret
popl
cld
or
xchg
push
adc
repz
pushf
mov
sbb
loope
popf
insb
pusha
xchg
xor
push
lret
inc
xchg
insl
rcrl
fnstsw
pushf
xlat
push
jno
dec
jg
push
ljmp
subl
xor
jns
sbb
je
flds
xchg
xor
fs
cmpsl
push
mov
stc
mov
mov
inc
jo
inc
fimull
dec
aad
sub
add
lret
addr16
jmp
pop
mov
lods
lret
js
mov
xor
mov
mov
fcoml
inc
pop
adc
ss
mov
jmp
xor
or
push
cltd
gs
pop
fstps
xor
cmp
jnp
cmp
push
shr
pop
frstor
lret
dec
pop
addr16
frstor
stos
dec
lods
sbb
and
daa
sbb
icebp
dec
cmp
xchg
push
fmulp
xchg
int
sbb
in
cmpl
dec
imul
shlb
xchg
stos
xor
out
sub
xor
fbld
sub
add
dec
jno
mov
fwait
or
fmull
ja
sub
dec
movsl
testb
dec
loopne
popf
es
sub
int
pop
fcomip
cmp
cmp
loopne
aas
jbe
mov
in
and
jbe
sub
pop
and
lret
test
stc
fdivp
ret
jbe
in
je
and
push
mov
add
cltd
dec
aas
loop
aad
or
adc
cmp
sbb
cmp
xor
mov
push
mov
fs
lds
rclb
stos
inc
inc
dec
in
sub
call
aaa
out
ret
sti
and
ljmp
aas
adc
or
ja
sub
aas
iret
mov
mov
cmpl
scas
in
das
push
lret
insb
xor
adc
jl
push
inc
ljmp
repnz
repnz
or
adc
jle
or
inc
int
push
xor
mov
inc
mov
fistps
shll
jecxz
mov
cld
push
push
mov
add
xchg
loopne
or
aam
in
cltd
aas
pop
mov
jne
subl
mov
xchg
and
mov
imul
stos
out
sbb
data16
xchg
add
mov
mov
xlat
cmc
pushf
inc
sbb
jmp
lock
adc
or
bound
test
rorl
loope
sbb
fimull
sti
inc
fs
jp
lret
mov
jmp
fisubrl
or
inc
cmp
pop
xchg
aad
sub
in
mov
movsl
shr
andl
push
inc
das
inc
inc
pop
js
cmp
dec
push
jmp
sahf
push
mov
mov
stos
inc
or
dec
cmp
pushf
out
repnz
add
in
xor
pop
test
lcall
and
jb
scas
loop
outsl
and
pop
inc
andb
cmpsl
das
mov
scas
sub
sbbl
push
cltd
or
pop
daa
ret
int
into
xor
mov
inc
add
adc
sbb
pop
dec
xchg
clc
sub
std
or
jl
jl
fsts
push
lea
dec
idiv
jbe
jo
or
ljmp
xchg
mov
xchg
mov
xchg
lods
sbb
mov
out
mov
lea
ljmp
push
pop
add
cmpb
sbb
xchg
and
not
je
or
pop
push
dec
out
fcompl
push
xchg
push
xchg
jmp
cmc
xorl
out
mov
std
aas
sub
pop
fsubrs
mov
add
jmp
push
rcrb
clc
scas
mov
cmc
add
sti
sbb
add
icebp
adcl
push
stos
cmpsb
ret
jle
fstp
loope
cmpsl
or
into
cmpsl
sbb
jns
popa
mov
insl
js
sub
pop
shll
add
cmp
jb
or
aam
loope
sub
mov
add
stc
bound
leave
mov
je
subb
pop
cmpsl
jle
movsl
fwait
cmp
mov
cld
test
int3
in
mov
pop
stc
mov
or
cmp
and
mov
sbb
jmp
and
mov
inc
or
in
jle
pop
jnp
xor
test
pop
cmp
push
dec
sbb
jnp
fstpl
push
cltd
daa
adc
imulb
rorb
inc
lea
repz
test
popa
inc
cmpsb
mov
cmpsb
sub
cs
xchg
je
jbe
mov
xor
sub
out
into
out
mov
mov
pop
mov
or
push
in
clc
gs
jnp
push
adc
mov
adc
push
or
ficoms
push
inc
gs
cmc
shl
jo
leave
icebp
clc
and
arpl
gs
sahf
xchg
inc
mul
push
adc
rcrb
jns
and
push
aad
cmp
pop
sahf
bound
enter
and
cmpsl
adc
dec
je
andl
or
sub
dec
xchg
test
sub
aam
add
push
cmp
add
mov
into
pop
inc
dec
inc
sarb
addb
jg
imul
adc
cmp
xor
out
out
negl
dec
xor
mov
inc
mov
mov
and
subl
push
jg
xchg
jecxz
rcl
mov
addr16
mov
ss
cmpsb
push
sub
repnz
push
inc
pop
pop
lret
in
push
orl
insl
ret
mov
jbe
jb
xchg
inc
movsl
jns
cmc
pop
mov
mov
dec
out
pop
xor
xchg
and
push
mov
mov
rclb
fcmovne
stc
mov
adc
fnsave
sub
in
in
inc
fmul
rcll
int
iret
pop
jmp
push
add
fwait
sub
stos
xchg
sub
testl
and
rorl
and
mov
xor
inc
test
and
mov
push
jg
jle
mov
adc
daa
push
out
xchg
sub
inc
mov
outsl
mov
and
inc
lcall
pop
in
stc
mov
mov
loopne
mov
orb
or
push
dec
cmp
sub
jecxz
dec
ret
mov
jge
js
pusha
outsl
ds
loop
je
repz
cs
xor
and
and
mov
imul
aaa
in
dec
mov
xor
or
add
mov
cld
hlt
test
jge
cmpsl
push
fmulp
jnp
or
jecxz
jmp
push
mov
div
lods
jno
lods
roll
jg
mov
stos
loope
adc
dec
sub
push
and
loopne
call
icebp
jno
int
loop
mov
arpl
mov
insb
cmp
lods
daa
test
bound
adc
mov
pop
mov
es
jbe
xchg
or
out
and
xor
pop
test
sbb
stos
mov
mov
movsl
and
test
lret
mov
aaa
inc
mov
xchg
data16
filds
pop
jno
and
mov
out
into
movsl
jmp
mov
movsl
or
mov
in
loopne
mov
pop
jl
mov
jp
jns
cmp
clc
mov
dec
inc
es
cli
jns
jae
cmp
pop
aam
mov
and
pop
mov
adc
imul
daa
jge
addr16
jne
sbb
inc
jbe
inc
mov
packsswb
and
cmpsb
xlat
sub
into
push
fnstcw
insb
cli
sbb
fstpt
das
ds
in
das
fistl
mov
into
clc
outsb
fdivl
insb
cmpsb
sti
inc
aas
ds
inc
imul
inc
es
mov
addr16
cmp
dec
stos
icebp
stc
xor
sub
fwait
arpl
test
mov
aam
hlt
cmp
dec
movsl
dec
jb
cmp
add
ds
sbb
out
sbb
daa
ret
pop
and
testb
xorb
mov
cltd
sbb
int
in
scas
into
in
into
sbb
ret
inc
push
cmpsb
ja
decl
pop
jge
push
lock
mov
shrl
adc
push
shll
adc
decb
cmp
loope
sbb
adc
pop
push
ret
loopne
xor
pushf
shlb
jo
mov
out
cmpsl
push
push
call
adc
ja
sub
insb
sti
cmp
cmp
popa
ljmp
or
dec
adc
outsl
xchg
and
iret
cmpsb
jb
sub
push
cltd
pop
pop
adc
jl
mov
dec
push
pusha
jecxz
les
dec
xor
pop
les
es
mov
or
dec
jle
sub
dec
sbb
ja
jp
and
repz
jo
fstps
xor
dec
pusha
xor
mov
mov
xorb
add
fldl
pop
lds
and
sti
pop
push
mov
jmp
adc
jno
add
stos
icebp
push
movl
mov
insb
test
daa
pop
xor
dec
dec
xchg
jns
rclb
mov
scas
jmp
test
cld
adc
add
xor
mov
sub
mov
mov
or
out
push
xchg
repz
sti
xlat
sbb
ljmp
inc
xchg
out
mov
xchg
jae
pop
jecxz
xchg
std
inc
lods
jmp
xor
fcoms
mov
push
sahf
xor
pop
hlt
xchg
and
es
imul
icebp
xor
xchg
hlt
fldcw
lds
scas
cld
dec
jmp
cltd
jb
push
les
cwtl
stos
xchg
push
iret
stos
jnp
imul
fdivl
outsl
jnp
aad
int3
lea
mov
mov
cmpsb
push
lea
adc
ljmp
sti
js
pop
stos
sar
jg
lret
fldl
aam
ss
int
loopne
scas
stos
inc
fwait
mov
dec
xor
sub
inc
je
fstps
inc
rcrb
aas
cltd
pop
das
test
cmpsl
jbe
push
inc
lret
push
push
ss
cmp
jne
cmpb
imul
fcoml
add
push
jmp
call
sbb
xchg
test
jg
push
das
in
test
test
xor
and
inc
sub
pop
mov
dec
enter
mov
lods
ret
xchg
fs
cmc
jg
inc
aaa
repnz
or
pop
fisubrl
adc
popa
lea
shll
sti
stc
ss
inc
outsl
xchg
gs
dec
inc
into
repnz
add
leave
movsl
pop
add
nop
dec
xor
ret
ds
cmp
jnp
jae
pop
pop
cmp
loopne
or
int3
pop
mov
cmp
popa
xor
daa
enter
ds
mov
les
push
xchg
pop
and
jae
pop
daa
add
leave
rcll
ret
fisubl
inc
xchg
mov
scas
xchg
cmp
and
add
jae
mov
aaa
bound
pop
loope
sub
inc
mov
mov
xchg
jnp
mov
mov
pop
mov
cmp
sbb
mov
mulb
add
je
mov
pop
fsubl
loop
push
inc
lret
push
or
mov
push
and
xrelease
lock
adc
dec
int3
jb
push
xchg
and
jg
loope
daa
xchg
dec
aaa
mov
or
andl
fstp
pop
mov
lds
repnz
mov
arpl
into
sahf
nop
push
sbb
or
je
cmp
adc
mov
mov
or
inc
jmp
inc
jb
outsl
rcll
hlt
xor
icebp
inc
mov
not
cmp
hlt
out
xchg
cmp
sub
mov
iret
insb
lock
test
pushf
insb
icebp
aaa
mov
repz
fisubs
xor
sub
mov
shll
sub
xor
icebp
xorb
sbb
fidivrs
xor
adc
and
or
push
movsl
add
loopew
inc
sub
addl
mov
insb
xchg
nop
mov
out
pop
out
mov
int3
loope
hlt
movb
mov
inc
pop
jns
or
push
and
jnp
sbb
test
add
test
fsubs
cs
jl
fldt
dec
and
loope
cli
sbb
lods
xchg
and
jne
sbb
push
mov
xchg
fnstenv
xor
cmp
xor
add
push
in
jae
loop
gs
rcl
and
sub
stos
xor
xchg
stos
mov
sbb
dec
sbb
les
outsb
out
repz
jno
pop
popf
pop
pop
mov
bound
ja
jo
scas
fildll
and
inc
adc
xchg
cmp
jmp
out
sub
adc
xor
dec
rcll
sub
popf
mov
fwait
xchg
xlat
orl
dec
loopne
in
xchg
adc
inc
xchg
push
sbb
inc
mov
ret
mov
test
dec
mov
jg
xor
lea
push
adc
jns
jae
xor
in
mov
xchg
mov
lea
stos
jle
scas
sub
movsb
push
add
testl
or
test
je
shrb
std
out
sub
mov
lods
dec
mov
pusha
jbe
xchg
push
int3
or
mov
iret
pop
daa
dec
test
mov
popa
addl
sub
fstl
sar
xchg
flds
inc
mov
daa
lock
jg
push
jmp
cltd
cltd
jg
and
cmp
imul
jmp
mov
mov
imul
ret
nop
push
or
mov
mov
mov
or
stc
cwtl
leave
aad
call
hlt
stos
lcall
add
jge
dec
sub
fnstenv
scas
js
arpl
inc
iret
adc
shll
jmp
mov
pop
test
clc
pop
negb
dec
cmp
inc
mov
cmc
addr16
mov
addr16
and
mov
sub
shll
dec
cmc
pop
sbb
mov
sahf
mov
loope
dec
sub
pop
repnz
add
test
or
push
sahf
jmp
pop
inc
out
inc
dec
push
icebp
jmp
mov
jns
mov
add
jb
ret
mov
pop
xor
sbb
roll
mov
icebp
ret
insl
in
jecxz
fwait
rol
mov
xor
int
mov
leave
pushf
pop
popa
test
jl
pop
sub
adc
jb
sub
daa
mov
cli
push
aam
loop
dec
xchg
xchg
test
or
mov
cwtl
sbb
jnp
inc
push
in
inc
sub
xchg
inc
ret
and
stos
push
mov
jns
fstp
lcall
push
sub
or
adc
adc
std
sub
mov
jbe
cmp
xchg
test
or
movsb
dec
push
jb
jg
int
cwtl
cmp
sub
dec
add
pop
and
dec
sbb
cmp
add
jp
and
pop
adc
mov
stc
inc
imul
les
mov
mov
mov
out
mov
repz
and
xchg
push
dec
or
jmp
add
inc
aaa
aaa
pop
mov
pop
pusha
stos
lock
iret
mov
pop
jno
divl
cmovg
shr
lods
inc
fcoml
jmp
idiv
int
push
add
mov
iret
xchg
xor
int
sbb
adc
jb
stos
fcoms
ss
dec
or
push
popf
xor
sub
xchg
sti
pop
pop
test
js
mov
arpl
stos
mov
decb
jle
bound
or
aad
or
jno
into
shl
dec
or
sub
dec
mov
mov
inc
mov
jb
pop
pop
inc
mov
test
push
mov
aas
xor
movsl
cmp
jg
mov
popf
adc
jp
js
sub
mov
xor
add
scas
add
ret
cmp
enter
push
test
push
test
popa
fmul
out
adc
mov
ror
clc
out
daa
pop
pop
sbb
mov
sub
xchg
add
and
lcall
cmpsl
mov
xor
sbb
xchg
lret
xchg
adc
adc
enter
sbb
mov
clc
out
jnp
ret
lret
into
jecxz
mov
movsb
cmp
xchg
mov
in
in
jo
xlat
mov
fsts
push
push
mov
loop
shrb
dec
test
mov
pop
sbb
test
sti
into
sub
js
sbb
rcrl
pop
xchg
mov
lds
cmp
je
and
add
int3
xchg
dec
adc
jo
ds
sbb
ss
sarb
mov
xchg
inc
mov
xor
icebp
push
aad
xchg
leave
xor
or
xor
fcomps
pop
fs
sbb
outsb
loopne
jns
mov
jne
xchg
jb
adc
ja
gs
arpl
mov
dec
nop
adc
pop
pop
int
pop
bound
adc
jmp
jae
sbb
loop
push
scas
xchg
cmp
push
fnstenv
inc
outsl
scas
cmp
jae
mov
sbb
cld
cmc
jne
adc
std
cmc
aad
fwait
andb
mulb
cmpsb
loopne
adc
mov
insl
or
icebp
or
push
lcall
popa
xor
or
bound
dec
push
sbb
cmpl
dec
and
cltd
cmpsl
je
cmp
jg
icebp
add
inc
fldenv
dec
aad
scas
sub
inc
inc
jne
adc
pop
or
and
nop
pop
repnz
cltd
mov
dec
cmp
nop
sahf
rorl
jmp
jp
mov
mov
loopne
shlb
xor
sti
mov
movsl
into
adc
addr16
mov
lcall
daa
xor
xchg
xchg
lret
cmp
add
and
cmp
ret
ds
int3
not
lea
iret
push
out
lea
or
aam
and
in
aam
adc
sbb
push
stos
or
push
mov
sti
test
lock
loope
inc
inc
adc
push
cli
lock
shrb
sub
push
idivb
cmp
divl
stos
dec
lret
fdivrs
push
fimull
xlat
pop
push
and
das
push
fisttpll
mov
sbb
xchg
inc
jae
bound
nop
jecxz
or
int3
dec
in
mov
imul
idiv
mov
pop
add
or
sti
jmp
rclb
push
jnp
hlt
add
pop
mov
add
rcrl
movb
repz
shll
xor
sub
push
xchg
xchg
stos
pop
jle
cmc
or
stc
mov
hlt
mov
fs
out
fimull
call
mov
gs
or
rcll
add
sahf
int3
arpl
xchg
cmp
jo
xor
jp
iret
dec
jmp
ljmp
pop
daa
cli
movsb
push
mov
jmp
outsl
shl
mov
mov
shll
mov
dec
addr16
xor
fldcw
pushf
loop
es
test
aaa
add
cmp
mov
or
dec
lds
loope
sbb
xor
mov
or
inc
push
cmpb
mov
out
cmpxchg
test
xchg
add
push
fistpl
pop
mov
mov
jo
dec
ja
sub
jp
push
rolb
jecxz
pop
mov
mov
outsl
dec
mov
outsb
inc
adc
and
int3
jne
add
push
ret
sti
push
test
sub
and
hlt
dec
xlat
lret
add
test
mov
ss
pop
adc
mov
scas
xchg
lret
pop
cmp
test
push
std
or
fimuls
movsb
cwtl
fnstcw
or
add
xchg
jg
roll
icebp
cli
lret
pop
pusha
sahf
xchg
sbb
and
in
mov
fs
or
adc
je
test
push
lret
les
test
sar
lock
lods
cmp
dec
bound
xlat
pop
enter
xchg
jo
daa
push
mov
aaa
jle
shr
leave
jecxz
int
push
shll
pop
stos
xchg
mov
test
push
xorb
dec
decb
repz
cmp
lea
gs
cmp
shl
sub
cwtl
push
dec
and
pop
sbb
mov
daa
adc
xchg
xchg
cmp
or
jo
push
mov
lret
arpl
jmp
push
shlb
lea
lods
and
jo
mov
cli
add
out
int3
sbb
sbbl
aam
add
xchg
add
pop
inc
jb
or
aam
adc
faddl
addr16
out
arpl
mov
add
out
mov
xchg
cmpsl
push
cmpsl
mov
addb
or
pusha
xchg
mov
push
daa
fmul
and
pop
jno
lock
ret
sbb
leave
dec
push
out
sub
mov
mov
push
xchg
mov
stc
imull
mov
jb
or
sub
xchg
rclb
xchg
dec
clc
sahf
sarb
fldenv
xchg
sahf
sbb
dec
inc
fcompl
sub
cwtl
stos
repz
outsb
push
ljmp
mov
in
aad
test
inc
dec
ficoml
test
call
test
adc
mov
icebp
inc
adc
rclb
jno
and
xchg
mov
pop
fs
shll
into
clc
std
pop
push
add
in
push
pop
add
mov
add
jmp
xorl
or
or
push
aaa
stc
cmpsb
negb
sub
mov
cli
arpl
push
fwait
push
cmpsb
push
pop
or
pop
cmpsl
pusha
jns
push
lock
subb
call
pop
fmull
xchg
jnp
and
push
lret
cli
sbb
or
mov
cmpsl
xor
sbb
leave
pop
xorb
test
ljmp
push
and
pop
call
popa
das
pop
inc
repz
pop
mov
test
insl
aad
inc
cmp
adc
mov
sbb
jge
negl
jb
push
aaa
jns
push
mov
push
mov
push
je
lods
iret
adc
sub
push
daa
pswapd
pop
enter
sti
cmc
cli
imul
sub
pavgw
pop
out
in
dec
xor
popa
jno
lods
sarl
mov
pop
outsl
gs
roll
mov
or
xor
fs
inc
movb
jno
dec
jle
rolb
lret
xor
fnstcw
sub
lcall
xchg
or
xlat
aam
xor
xor
cmp
hlt
push
repz
jns
add
sub
pop
or
mov
pop
loope
dec
int3
jge
aaa
arpl
cmp
lahf
inc
or
xor
xchg
insl
pushf
jecxz
inc
pushw
inc
mov
jnp
sub
mov
or
mov
insl
adc
repnz
test
sahf
ffreep
and
int3
xchg
std
push
test
mov
xor
jge
xor
mov
nop
les
cmp
jne
fcoml
test
testl
aas
adc
imul
enter
popf
inc
sahf
out
aad
mov
sahf
inc
test
jb
and
push
dec
xchg
sub
and
add
scas
inc
inc
sbb
mov
test
mov
out
stc
cmpsl
sub
je
aaa
pop
mov
push
mov
cmp
inc
xchg
sti
into
mov
mov
cmp
test
lret
test
mov
testb
pushf
push
push
pop
mov
test
rcr
sub
or
inc
bound
fcoms
out
ss
rcr
jb
adc
popa
inc
mov
add
adc
jmp
out
test
cmp
mov
jno
xchg
xchg
sub
mov
fidivrs
adc
adc
and
insl
ret
jmp
jb
mov
adc
mov
bound
sub
daa
stos
cmpsb
sbb
mov
and
lods
xchg
cmc
in
test
rorb
bound
out
das
les
adc
xor
pop
cli
push
xor
das
xchg
test
mov
sbb
and
sarl
add
and
add
fs
rorl
scas
ret
or
sub
daa
jle
dec
cmp
cmp
mov
ja
out
fisttps
cmp
mov
mov
push
lcall
add
dec
sub
sti
out
mov
lods
cmp
or
cmp
sub
ret
stos
push
mov
cmpsl
or
fsubr
test
or
and
mov
cld
inc
mov
lock
or
lret
jmp
xchg
push
lods
or
cmp
inc
dec
cmpsl
sbbl
pop
dec
lods
rcr
pop
repnz
and
mov
popa
sub
or
cmp
nop
popa
sahf
jle
xlat
pop
pop
mov
mov
inc
jmp
mov
push
cmc
xchg
mov
adc
mov
mov
js
ret
rclb
adc
pop
cwtl
push
in
loope
add
cmp
or
mov
stos
insb
or
dec
sbb
mov
sub
in
shll
negb
test
inc
sbb
roll
ficomps
sub
roll
push
jo
mov
mov
ror
mov
xchg
sahf
cmp
in
std
push
loope
push
push
jnp
jnp
fwait
out
ss
ja
mov
pop
mov
pop
in
mov
cmp
lea
dec
mov
jp
js
inc
cmp
adc
add
xor
dec
xchg
or
push
push
arpl
pop
xchg
or
pop
cmp
mov
hlt
xor
je
mov
lcall
xor
imul
popf
xchg
rcrl
aam
into
lds
fdivrl
fsub
pop
xor
mov
mov
inc
sti
push
mov
sarb
lret
lods
in
jb
loop
call
mov
lods
xchg
push
in
jnp
inc
adc
add
jmp
ret
jecxz
cwtl
jae
mov
shr
aad
add
ljmp
sub
ficompl
ljmp
cltd
push
push
mov
mov
icebp
push
dec
jmp
jle
add
push
lock
or
adc
mov
mov
or
pop
dec
cmc
mov
sub
out
xchg
mov
fsts
loopne
outsb
cs
sub
movsb
jecxz
flds
mov
mov
jno
js
jo
xchg
lea
ljmp
dec
xlat
adc
movsb
lret
ja
insl
cvtdq2ps
fcoms
lock
xor
push
test
popf
xor
repnz
fstpt
cmp
xchg
out
push
ss
loopne
push
cwtl
pop
mov
lahf
jnp
adc
test
fwait
xchg
jo
movsb
mov
outsl
mov
push
sub
jp
int3
stos
in
movsl
jae
xchg
in
xchg
ljmp
je
mov
repnz
mov
cmp
rcrb
test
mov
inc
push
inc
lods
cmpl
sbb
test
lcall
mov
test
in
sub
mov
xor
repnz
dec
jge
out
stc
test
jg
push
pop
xor
xor
scas
imul
hlt
add
das
gs
jl
xor
push
movsl
fwait
sbb
inc
std
rorb
rolb
cmp
push
inc
adc
jge
test
pop
aam
push
out
jl
std
cmp
out
and
inc
lret
sti
jns
adc
fidivl
push
lea
loope
imul
dec
push
dec
daa
fisubrl
adc
mov
jl
sbb
inc
inc
js
cld
inc
sbb
outsl
leave
jl
icebp
mov
xchg
ljmp
push
jecxz
loop
pop
mov
xchg
int
fwait
xchg
dec
mov
jp
mov
and
xor
fst
jp
dec
xchg
out
ss
hlt
sbb
pusha
push
orl
or
pop
jb
cmp
inc
pusha
add
cmpsl
mov
negl
mov
push
outsl
adc
mov
mov
or
imul
add
mov
cltd
inc
icebp
cmpsl
pop
ret
lds
popa
sarb
aaa
xor
mov
and
sarb
and
insl
hlt
scas
mov
pop
mov
lret
sbb
mov
outsb
sbb
pop
ja
dec
out
mov
push
movsl
adc
and
in
dec
lret
sub
push
out
jmp
ds
fldenv
xchg
cld
jge
pop
fstpl
jge
xchg
sub
or
lock
and
push
mov
enter
fisubrl
and
fcmovb
repz
dec
cld
xchg
jg
movsl
js
dec
xlat
scas
ss
loop,pn
clc
sub
call
or
shlb
iret
xor
repnz
int3
sub
xchg
pop
sti
bound
adc
jne
pop
dec
push
pop
xlat
sahf
jns
xchg
inc
fcmovnu
dec
lds
test
orb
inc
lods
cmpsb
clc
jns
add
insb
mov
xchg
push
popa
sbb
and
std
js
jp
repnz
dec
repz
pop
mov
push
in
test
clc
push
cltd
test
cmpb
into
shlb
sbb
or
or
mov
xchg
rorl
push
sub
out
xor
xchg
mov
fldcw
das
sub
andb
addb
cmpb
aas
mov
jmp
inc
insl
fcoml
cmpsl
movsb
pop
cmpb
stc
inc
fbld
jl
clc
lahf
inc
ss
sub
in
pop
xchg
mov
pop
pushf
add
pop
or
xchg
imul
xchg
ret
mov
adc
fwait
rolb
fsts
sbb
in
pushl
mov
inc
cmp
jmp
repnz
and
imul
sbb
adc
adc
jecxz
or
adc
or
pop
dec
test
jge
inc
inc
pop
jb
and
cli
scas
jmp
rol
jl
sub
xchg
arpl
iret
dec
aas
or
pop
mov
hlt
or
adc
mov
cmp
pop
pop
in
lahf
movsb
push
in
fs
adc
scas
or
add
imul
pop
pop
pop
cmp
dec
push
mov
cmpsl
popa
mov
enter
xchg
decl
mov
sti
xor
mov
imul
or
cmc
cmp
movsl
test
out
es
icebp
pop
stos
ss
or
dec
outsl
dec
icebp
inc
ljmp
mov
push
sarl
jp
mov
adc
inc
jb
arpl
test
inc
mov
adcb
sub
out
push
imul
test
or
dec
rorl
sbb
xor
daa
xor
mov
jle
in
orl
pop
repz
mov
je
adc
pop
sbb
aad
mov
sbb
push
mov
jp
xchg
sti
inc
ljmp
cmp
mov
stos
lahf
mov
out
mov
aas
xchg
mov
pusha
mov
imull
pop
pop
mov
mov
enter
mov
xlat
sbb
fwait
ret
mov
mov
lea
or
mov
lcall
cmp
test
loope
mov
enter
push
cmp
and
mov
stos
add
xchg
mov
ret
lods
cmp
mov
xchg
test
xor
stc
leave
ss
or
and
mov
xchg
fidivl
not
shr
sbb
mov
mov
jbe
test
and
sti
add
ja
cmp
fisubrl
push
ds
dec
and
das
mov
push
cld
cmp
into
mov
aaa
les
inc
jp
aas
in
jae
pop
and
dec
pop
in
mov
xchg
ljmp
ret
pop
sub
sbb
sub
test
push
push
inc
jge
push
jno
je
pop
push
and
pop
popa
incb
xor
sub
sub
mov
pusha
pop
outsb
cmpsb
pop
iret
int3
lret
xchg
sbb
pushf
ss
popf
das
cmp
cbtw
pushf
outsl
ss
mov
mov
aad
mov
cmp
mov
ss
add
cmp
ret
shrb
dec
dec
or
mov
pop
hlt
cld
jno
mov
sbbb
or
leave
jns
pop
push
lods
push
into
lahf
arpl
sar
pop
cltd
mov
cmpsl
cwtl
mov
dec
fldt
sub
mov
sbbl
xchg
ss
out
iret
cmpsl
test
dec
jae
pop
xchg
sbb
imulb
and
dec
jnp
cmp
std
dec
pop
lods
jne
inc
cmpsl
adc
inc
stc
push
mov
cmc
les
outsl
jmp
stos
push
scas
cltd
mov
scas
push
dec
popa
in
aaa
std
pusha
or
mov
push
xlat
pop
xor
push
xor
out
mov
popa
mov
imul
data16
arpl
scas
stos
imul
add
sub
mov
addb
test
dec
dec
push
xorb
nop
sub
cmp
in
lods
mov
mov
add
in
jae
pop
mov
jmp
and
aaa
addr16
pop
or
int
in
xchg
xor
dec
aam
ret
aad
stos
xor
lret
mov
cmpsl
sub
jb
adc
fadd
inc
inc
mov
pop
or
sub
jb
dec
js
mov
cmp
inc
gs
insb
int3
cmpsb
lods
mov
cwtl
cmp
or
movl
pop
out
sbb
dec
mov
shlb
lock
and
mov
pop
or
jmp
xchg
out
jnp
cmp
ljmp
into
push
mov
or
add
fxch
iret
fs
fdivp
fnstenv
loop
lahf
retw
adc
push
dec
sub
out
add
mov
jge
fists
sub
call
xor
lds
jno
jp
addr16
mov
movsb
xchg
out
repz
jbe
pop
in
add
filds
sub
and
mov
push
aaa
sub
in
xor
clc
clc
mov
push
test
and
and
xlat
xchg
int
test
and
jo
jns
sbb
fs
jo
fmulp
cld
sbb
jo
adc
mov
mov
imul
lret
in
sbbl
push
push
sbb
xchg
in
aas
mov
rolb
push
gs
pop
scas
rol
pop
dec
lret
push
fisttpl
enter
add
mov
inc
inc
push
scas
js
jecxz
cmp
scas
mov
jno
pop
xor
imul
cmpsb
cltd
and
push
idiv
lods
push
push
pop
sbb
cltd
ret
cmp
inc
stos
scas
sub
mov
leave
jp
js
jno
je
aaa
sub
mov
and
aam
cmpb
sbb
fnstenv
dec
repz
pop
in
insb
cmp
sub
loope
and
mov
fstpl
mov
dec
mov
push
mov
lods
pop
add
hlt
enter
sbb
mov
mov
inc
ficomps
fnstsw
dec
mov
ja
ss
inc
add
clc
and
jmp
bound
std
add
repnz
inc
out
out
iret
imul
xchg
add
jge
mov
call
outsb
cmp
cmpsl
leave
arpl
cmp
jecxz
xchg
cmpsl
cmpsb
or
inc
daa
mov
adc
cmpsb
faddl
mov
jmp
dec
jnp
adc
sarb
int
repz
test
xor
sahf
out
imul
bound
push
dec
xchg
enter
sub
and
adc
scas
push
shrb
or
lods
xchg
je,pn
mov
mov
pop
loope
cmp
aas
ret
and
and
je
ljmp
cmp
dec
add
sbb
sub
add
jg
lods
sahf
adc
xchg
es
adc
pop
lock
in
idivl
jbe
inc
lds
xor
lret
mov
clc
call
out
aad
rcll
jnp
inc
inc
push
call
dec
jbe
in
mov
mov
mov
inc
sbb
ret
cmpsl
out
mov
stos
arpl
lods
imul
and
cmc
xchg
loopne
pop
and
loop
fs
xchg
pop
add
mov
or
sahf
data16
je
mov
lret
loopne
dec
imul
sarl
pop
xchg
int
insl
popf
into
sbb
rcrl
repz
sub
imul
mov
test
sbb
nop
int3
jle
or
push
adc
lods
xchg
cli
mov
mov
push
dec
xor
call
fwait
lret
cld
pushf
lret
push
xchg
enter
rorb
jge
push
xchg
aam
mov
add
add
cld
icebp
xor
mov
dec
push
mov
inc
xchg
push
cmp
and
incl
xor
jecxz
icebp
lea
add
cmp
aad
out
xchg
sbb
pushf
mov
sti
call
xor
insl
or
push
push
ds
int
pushf
movsl
imul
xchg
mov
dec
ret
pop
mov
lds
inc
jl
or
out
pop
mov
mov
inc
xor
cli
dec
and
xchg
loop
adc
addr16
nop
jae
out
jle
mov
inc
xchg
lock
sub
adc
xchg
xchg
mov
imul
rcrb
add
shrl
xchg
es
jecxz
sbb
pusha
jl
adc
lea
sub
rcl
xor
mov
mov
inc
xchg
or
sub
ret
add
mov
push
push
int3
inc
imul
xor
push
into
call
jnp
sub
fsubrl
shlb
xor
lcall
fwait
add
add
xchg
inc
xor
sub
mov
inc
mov
iret
pushw
and
scas
mov
dec
sbbl
add
sbb
outsb
sahf
sub
jae
add
sbb
movsl
enter
xchg
jo
jecxz
jno
sbb
orb
fdivrs
test
and
mov
std
pop
xchg
sbb
cli
inc
sub
jge
clc
mov
jmp
and
xorl
sti
and
push
divl
shrl
adc
imul
cltd
xchg
bound
adc
push
dec
test
dec
pop
cltd
enter
mov
pop
cmpsl
lret
lds
in
fistps
jb
pop
jae
push
lcall
dec
inc
testl
xchg
jnp
add
mov
int
sub
sbb
sub
imul
lret
and
cwtl
pop
ret
mov
adc
sub
arpl
fstps
test
pop
rcl
mov
nop
cmp
jg
sti
pop
adc
ljmp
hlt
int3
fnstsw
mov
or
sbb
jmp
gs
mov
loope
adc
or
addr16
add
jb
in
mov
ds
xchg
fistpl
aas
inc
add
mov
daa
bound
dec
cmpsb
or
icebp
and
gs
lret
cli
push
lods
push
jno
push
jle
sbb
sbb
or
and
jns
lahf
mov
pusha
mov
mov
gs
adc
rcr
and
mov
adc
push
sbb
and
ss
push
enter
jns
movsl
xor
cld
adc
mov
jmp
sub
dec
dec
aad
lds
out
add
or
icebp
sbb
add
sbb
mov
and
mov
cwtl
mov
test
push
cmp
outsl
push
pop
cmpsb
xchg
dec
lds
sub
sahf
ret
sub
adcb
and
jno
or
pusha
lock
out
or
cmp
sahf
insl
and
popa
or
das
bound
and
push
pushf
or
aam
leave
insb
xor
iret
cmp
pop
xor
out
jle
nop
lods
jmp
sub
popa
pop
adc
jmp
push
lds
enter
inc
nop
sbb
lcall
aaa
jge
imul
sbb
das
out
pop
jbe
or
or
jecxz
loopne
vhaddps
sub
roll
out
jl
out
adc
and
imul
pop
sbb
in
icebp
rol
ret
add
sub
mov
dec
outsb
mov
mull
xchg
xchg
call
inc
xchg
insb
nop
pop
inc
repnz
mov
xlat
ja
imul
hlt
sbb
pop
addr16
jmp
xchg
inc
jnp
je
pop
test
jmp
xchg
add
fiaddl
mov
dec
or
and
xchg
add
mov
daa
ljmp
or
mov
mov
shlb
push
popf
jae
insl
call
mov
xchg
sbb
insl
ljmp
int3
ja
jl
repz
pop
imul
dec
adc
clc
sub
fcmovu
ret
insb
cmp
add
pop
dec
sub
cmp
cltd
cmp
sub
jle
repz
jle
lret
fldln2
imull
jp
push
dec
popa
push
fstpl
fnstenv
repz
sbb
mov
inc
add
shl
pop
popa
cmp
movsb
cltd
rorb
jle
jb
in
in
mov
jg
jnp
pop
nop
data16
js
pop
sbb
loopne
pop
iret
pop
inc
movsb
mov
cwtl
je
fsubl
xchg
xchg
and
jle
or
mov
push
xchg
mov
loopne
loope
stc
mov
pop
mov
fsubrl
jnp
orb
movsl
insb
ja
xor
cmp
mov
xchg
mov
sub
inc
stos
xchg
and
push
mov
push
mov
negb
lods
pop
outsl
push
addr16
pop
movsl
cmpb
inc
movsl
jno
cld
xor
lahf
fidivs
shll
push
mov
int3
insl
repz
dec
pusha
sbb
insb
repz
push
std
or
movsb
pop
add
shr
xor
xor
sub
jl
adc
inc
xchg
cld
inc
aad
inc
jns
push
jl
and
loope
test
fdivrs
je
xor
add
push
dec
lods
xor
sbb
cltd
dec
and
pop
pop
mov
fisttpl
in
adc
leave
mov
sub
test
and
mov
jno
in
mov
and
fisubrl
out
adc
dec
xchg
in
adcl
xchg
xor
jecxz
adc
inc
cmp
push
pop
aam
cmp
gs
int
mov
out
les
lods
icebp
jmp
sub
movsb
xchg
stos
cmpl
outsb
mov
dec
js
roll
adc
movsl
lret
jecxz
push
add
xchg
and
cmpsl
dec
push
int3
in
mul
call
inc
and
adc
jae
jmp
pushf
xchg
sbb
dec
or
fbstp
pop
cld
sbb
mov
mov
push
out
test
pop
hlt
push
loope
call
jbe
or
es
lock
sbb
push
xlat
xchg
push
mov
mov
in
movntq
pop
push
dec
aas
dec
leave
cmp
xchg
gs
ret
inc
mov
pop
push
imull
loope
xchg
push
nop
sbb
inc
in
xchg
pop
or
or
push
inc
and
mov
mov
xor
or
sub
dec
fnsave
fisttps
dec
pop
lret
ljmp
popf
xchg
orb
clc
sarb
adc
dec
pop
int3
inc
dec
imul
pop
test
sti
jb
xor
lds
cmp
mov
mov
loop
movsl
mov
push
adc
or
stos
fwait
mov
xchg
lds
push
js
add
lret
ja
jo
or
jecxz
jp
std
daa
add
outsb
push
daa
ret
push
xchg
lods
cmpsl
pop
or
pop
xchg
pop
fwait
dec
xchg
cmpsb
sub
and
adc
mov
test
jb
xchg
xchg
jo
mov
nop
sbbl
push
xchg
imulb
mov
stos
nop
outsl
daa
mov
mov
push
pop
cwtl
jle
aas
enter
jne
cmp
mov
sarl
push
and
add
dec
mov
pushf
ret
push
jns
flds
inc
dec
mov
pop
arpl
adc
inc
data16
ret
clc
js
sub
and
fs
mov
lods
pop
into
ja
hlt
int
jmp
fistpl
xor
inc
fstl
pop
ret
lret
out
cmp
push
pop
pop
fstpl
outsl
out
rclb
dec
and
and
dec
cli
std
in
rolb
add
daa
push
inc
lahf
xor
push
repnz
cmp
ljmp
xchg
mov
xor
sub
inc
test
add
jo
jae
push
int3
movsb
inc
mov
stos
clc
push
pop
cmp
sub
mov
mov
test
jg
inc
ret
and
add
lcall
add
xor
je
xchg
in
in
add
cmp
mov
xchg
xchg
inc
cld
dec
cmc
in
outsl
incl
cli
mov
jns
dec
cmc
hlt
not
ja
xchg
xchg
js
mov
lods
sbb
test
aas
or
pop
dec
loope
lahf
sti
push
test
sbb
mov
ret
inc
add
cltd
std
adc
inc
xor
ss
les
dec
stos
inc
jns
add
cli
into
inc
dec
test
fsubrl
inc
push
data16
and
in
jmp
in
dec
mov
loopne
cmp
mov
ja
std
push
xor
xchg
in
rorl
and
add
iret
mov
fmul
int3
mov
sub
lds
inc
popa
adc
mov
jg
push
jecxz
minps
das
mov
in
test
popa
lahf
mov
jg
call
xchg
mov
loope
mov
jl
xchg
xchg
pop
xor
adc
cmpsb
cmpsl
push
or
stos
cs
ret
pop
jge
loope
addr16
or
and
out
test
sbb
out
mov
push
mov
insb
iret
mov
xchg
push
jg
and
xchg
dec
adc
pop
mov
out
push
test
ds
sbb
lea
jno
push
mov
out
and
xchg
js
test
jno
nop
adc
dec
dec
jno
jp
cmp
xchg
add
xor
xchg
es
push
push
sub
pop
stos
fimuls
mov
ss
testb
fs
add
pop
in
outsb
or
push
mov
mov
pop
js
mov
and
mov
clc
fimuls
lahf
int
xchg
mov
outsl
push
hlt
mov
mov
orl
mov
lods
cmp
xchg
aaa
cwtl
adc
push
sbb
stos
stc
mov
cmp
xor
mov
outsl
cwtl
enter
jmp
dec
loop
in
pop
std
mov
out
mov
pop
mov
out
sahf
imul
dec
cmpsl
push
scas
movsl
icebp
pop
sub
xchg
jns
shl
add
adc
sub
imul
inc
scas
lret
je
arpl
mov
ret
push
dec
cmpsb
sbb
ficompl
imul
xchg
cmp
xchg
dec
aad
popa
mov
js
or
fadds
ja
cli
pusha
addr16
int3
or
jbe
pop
lret
hlt
inc
pop
js
jnp
ret
dec
movb
ds
loope
sub
mov
or
fisttps
loop
aam
rolb
or
loop
cld
inc
mov
adc
pop
stos
jle
out
mov
sbb
mov
pop
cmpsl
adc
fmuls
testl
call
into
filds
in
ja
cli
inc
cmp
jnp
push
push
jbe
or
inc
bound
inc
pop
sahf
mov
dec
test
lods
and
rorb
in
mov
sub
pop
arpl
lods
inc
jae
mov
shll
out
daa
in
frstor
jg
pusha
dec
loopne
lret
inc
push
inc
inc
pop
mov
ret
scas
sub
cld
xchg
dec
push
dec
add
sti
mov
xor
dec
fdivrp
imul
ja
aaa
fwait
cmpsl
mov
dec
mov
js
out
popa
cmp
or
xchg
inc
jb
or
jp
jne
dec
dec
and
or
mov
cmpl
or
mov
jno
arpl
sub
or
nop
add
cmp
push
jg
addr16
adc
push
xor
add
jnp
mov
jecxz
xchg
jg
xor
enter
jg
cmp
dec
fwait
lret
arpl
cmc
inc
xchg
aaa
xchg
mov
addl
scas
insl
and
dec
ljmp
xchg
cmp
arpl
ss
data16
or
jle
mov
adc
sbb
inc
push
into
dec
imul
sbb
cmp
mov
xchg
sbb
sub
pop
pushf
je
fs
imul
and
js
push
sbb
inc
push
ljmp
lods
loop
push
jmp
add
shll
sub
mov
jns
dec
jno
or
outsb
lret
stos
and
hlt
outsl
movsl
lods
dec
xchg
mov
push
out
ret
rcl
bound
push
orb
aad
lea
loop
or
sahf
cmp
push
dec
push
outsl
sub
jns
jle
fwait
mov
subb
scas
adc
sbb
and
push
ljmp
repz
addr16
jnp
divl
ljmp
xor
pop
shll
mov
adc
jb
pop
mov
int
push
lret
imul
pop
js
or
xchg
popf
sub
xchg
push
out
scas
pop
fnsave
daa
cmp
in
out
imul
pop
jmp
test
mov
sbb
pop
int
or
adc
xchg
jno
jge
jno
ret
mov
sar
and
cmp
lds
lea
jg
lock
push
push
inc
push
xchg
leave
push
xchg
adc
lea
and
je
pushf
inc
js
jp
bswap
stos
cmc
lods
loope
popa
std
movsl
fwait
popf
leave
jno
dec
sub
and
shll
add
adc
push
std
aaa
push
sub
adc
addr16
mov
sub
in
mov
and
xchg
cmp
scas
das
insl
test
inc
or
mov
jne
xor
lahf
xchg
sub
xor
mov
cmp
adc
idiv
inc
lock
mov
adc
js
aaa
push
cwtl
mov
ds
lea
subb
xchg
bound
call
jmp
or
test
daa
popf
test
push
add
popf
jl
sbb
or
aaa
sarb
and
xlat
xchg
insl
es
lods
pop
shrb
jae
pop
daa
mov
cmp
jmp
jmp
jmp
es
mov
xor
pop
add
jne
push
js
pop
out
pop
ret
dec
cmp
mov
pop
push
lock
unpcklps
and
daa
mov
mov
aas
addr16
repz
add
lret
jnp
lods
mov
inc
aaa
dec
aad
outsl
aaa
and
jmp
das
adc
leave
rcrb
lret
push
rolb
shll
cmpb
pop
test
out
imulb
pusha
int3
mov
adc
mov
rorb
or
inc
mov
cmp
xchg
dec
std
inc
pop
jae
adc
outsl
sbbb
pop
nop
xor
add
cwtl
test
push
dec
call
fsubrp
mov
xlat
daa
in
cltd
cmp
cmpsb
cmpsb
pop
cs
adc
ljmp
adc
stos
pop
jmp
cli
and
jmp
cmp
or
test
push
lahf
jecxz
cltd
rol
inc
or
test
mov
jns
jnp
sbb
mov
enter
ficomps
shll
add
xchg
test
cmpsl
pop
jbe
and
movsl
or
and
lds
push
movb
xchg
cli
fucomi
mov
sbb
je
xlat
sbb
fwait
rcll
test
pop
xchg
in
cmp
fs
vorps
pushf
cwtl
dec
sbb
out
stc
mov
and
fisttpl
sbb
fildll
aas
subl
mov
aam
sub
pusha
daa
sti
push
pusha
es
inc
lods
in
sbb
add
or
dec
lds
xor
cs
in
loop
lea
adc
xchg
in
pop
cmpsl
lahf
xchg
sti
jnp
lret
out
jne
lds
and
lahf
lahf
stc
add
mov
push
adc
in
sti
add
add
out
test
mov
add
push
cld
loop
or
fnsave
sub
or
pop
push
mov
or
pop
cmpsb
push
loope
mov
pushf
push
cmc
iret
test
add
or
mov
lods
mov
cwtl
pop
aad
nop
and
mov
fwait
mov
cmp
cltd
int
cltd
push
out
mov
pop
rol
repnz
popf
loop
mov
mov
mov
xchg
fiaddl
xchg
sahf
mov
push
mov
and
rol
jmp
insb
and
rcr
push
hlt
push
sbb
pushf
outsb
in
xchg
incb
jg
mov
lret
lcall
mov
jno
and
iret
dec
adcl
sub
dec
jae
jb
mov
push
and
pop
je
or
mov
add
int
shll
push
xor
xchg
xor
lcall
ss
enter
dec
shrb
xlat
sahf
and
jg
repz
xor
and
ja
xchg
nop
in
ret
hlt
and
out
test
xor
daa
and
das
push
mov
fucomp
xor
fldcw
and
stc
imul
push
ret
cmpsb
mov
or
popa
lods
leave
inc
adc
mov
pusha
mov
jmp
mov
mov
sbb
dec
mov
das
rorb
xor
inc
mov
push
xchg
test
push
jmp
mov
sbb
pop
imul
or
popf
int3
mov
push
cmp
mov
cmp
stos
cmp
pop
in
fistps
in
imul
jle
std
out
mov
push
cwtl
ljmp
aaa
hlt
fwait
mov
in
int
sbb
das
rol
repnz
and
xchg
mov
cmp
push
lods
scas
adc
cmp
mov
adc
pushf
lret
jno
mov
cmp
clc
push
sbb
mov
loopne
or
xlat
lea
adc
das
daa
pop
sarb
test
movsl
inc
aaa
inc
xchg
mov
ds
in
pop
addr16
stos
lcall
push
sbb
and
push
lds
cmp
or
fwait
outsb
inc
sbb
mov
movsb
or
cmp
sti
add
jmp
fmul
popf
cltd
mov
mov
ds
aas
cmp
jo
xor
inc
fcoms
fbld
imul
push
xchg
sarb
stc
inc
push
cmpsb
lock
inc
jg
sti
lock
sub
subl
mov
inc
gs
and
or
inc
inc
into
pop
jo
mov
push
inc
mov
out
incb
lods
scas
dec
inc
cmpsb
mov
push
sub
push
call
jns
ljmp
push
in
jns
xlat
bound
sar
pop
mov
cs
pop
inc
jle
cli
jns
xor
nop
push
mov
mov
fldcw
movsl
sub
shlb
rclb
inc
push
and
das
cltd
inc
ss
push
arpl
cld
out
test
popa
push
ljmp
xlat
outsb
call
xchg
pop
lds
dec
subl
mov
cmp
and
hlt
mov
lds
out
cmpb
je
es
add
cmpsb
jge
lret
xchg
outsb
js
sub
lret
pop
fsubp
xor
cpuid
stos
icebp
bound
leave
mov
ljmp
mov
ds
inc
jbe
dec
iret
fs
scas
xchg
push
pushf
jns
mov
mov
xchg
aam
inc
pop
cmp
xchg
test
mov
xchg
jnp
fxam
call
mov
enter
addr16
and
pop
int
dec
jle
popf
mov
lahf
nop
addr16
ret
cmp
mov
stos
roll
push
sub
push
jbe
pop
or
fcmovne
lret
dec
inc
incb
and
jmp
sub
add
or
jne
mov
jae
mov
xchg
lods
sub
shlb
mov
push
sub
shlb
cmp
loope
daa
in
aad
and
push
xor
sub
mov
enter
cmp
xchg
adc
push
cmp
daa
and
and
outsb
aad
imul
lods
xchg
lcall
mov
scas
cmp
das
add
lods
sti
mov
inc
gs
mov
mov
and
fsubp
adc
insl
pop
repz
getsec
aam
inc
movsl
lahf
js
les
test
movsl
mov
fisubs
jmp
jno
out
adc
cmp
inc
repz
outsb
sub
mov
out
jmp
mov
push
jmp
push
mov
aaa
fdivs
fwait
pop
pop
xchg
or
mov
pop
and
and
xchg
mov
jnp
movl
dec
xchg
and
popf
xor
push
jmp
ja
mov
jne
pop
and
lds
stos
cld
dec
sub
insb
xchg
and
mov
adc
loopne
loopne
dec
mov
fwait
push
test
loopne
mov
lcall
imul
pushf
hlt
push
repnz
fcompl
movsl
pop
push
icebp
jns
mov
aad
or
adcb
int3
push
fcomps
aaa
daa
popf
addb
mov
pusha
xor
into
mov
std
inc
mov
es
andl
sub
or
daa
or
xchg
xor
popa
stos
mov
out
sbb
mov
loope
mov
jb
fs
int
stos
clc
xchg
insb
lock
and
nop
sub
pop
pop
mov
jp
lret
inc
les
or
mov
xchg
or
and
xchg
outsb
add
mov
sub
insl
enter
pop
pop
add
xchg
jmp
out
iret
je
cli
push
in
mov
out
cmp
cmc
jge
jno
jnp
iret
movsb
sub
rep
and
and
adc
call
enter
dec
mov
mov
mov
push
pusha
inc
cs
and
jbe
jno
mov
or
cmp
js
pushf
inc
nop
or
cmpsl
adc
mov
add
cmp
inc
push
mov
ds
add
ret
pop
and
es
and
pusha
loope
lret
push
jp
cli
lods
jbe
inc
ss
dec
mov
pop
and
addr16
pop
scas
nop
daa
jge
mov
adc
cmpsb
out
xlat
std
lret
rolb
test
lea
repz
rcr
into
jg
scas
cmp
test
fsts
aaa
push
push
mov
test
xchg
js
dec
xor
mov
push
inc
popa
inc
push
mov
leave
ss
jbe
xchg
ret
pop
int3
daa
and
mov
and
mov
clc
ljmp
push
and
xchg
cmp
add
fadds
sbb
jge
mov
cs
out
fidivs
mov
sbb
fwait
js
dec
adc
mov
icebp
pop
jmp
sub
enter
push
rcrl
cmpsb
xor
jb
mov
add
xchg
loope
xchg
loopne
xor
mov
adc
xor
pop
xor
and
imul
sti
movb
mov
push
xchg
mov
lods
rorl
jb
std
mov
fs
xchg
sub
mov
jl
dec
imul
pop
cmp
int3
cmp
mov
mov
jg
pop
roll
lret
aad
xor
jns
push
lods
pop
jns
sar
enter
pop
xor
lret
repz
scas
dec
jecxz
jne
pop
mov
mov
jo
sub
cs
mov
imul
stos
ds
fsts
repnz
aam
inc
psrld
movsl
das
scas
cmp
add
mov
rolb
mov
cld
mov
jbe
or
mov
fcmovbe
jecxz
movsb
cwtl
mov
or
add
mov
or
push
and
adcl
mov
xor
xchg
not
cmp
js
clc
pushf
les
mov
mov
push
cltd
mov
pop
xor
xchg
mov
pop
into
rcll
mov
mov
fisttpl
push
call
mov
lcall
or
inc
push
cmpb
pushf
fisubs
jbe
or
xchg
add
inc
jns
ficomps
mov
rcr
test
xlat
fcoml
loop
ret
or
push
xor
cs
aas
xchg
out
jle
jns
mov
jb
lret
mov
jns
pusha
hlt
pop
js
ja
xor
dec
mov
sub
or
test
mov
inc
ja
sub
and
xchg
inc
js
xor
adc
inc
and
xor
inc
and
mov
out
xor
mul
adc
das
push
xchg
cmp
dec
test
jl
addb
lahf
test
xchg
mov
jae
repz
mov
sbb
fs
xchg
mov
popa
xchg
sbb
iret
movsl
fists
push
add
lock
sti
movsl
pop
dec
jnp
hlt
test
xchg
bound
and
mov
filds
lret
or
inc
das
push
inc
iret
push
testl
outsl
sub
add
push
pushl
sub
faddl
dec
mov
std
outsl
push
add
jb
mov
and
fwait
mov
les
push
pop
out
pop
sbbl
sahf
ret
and
mov
jbe
enter
xor
xchg
sbb
out
mov
mov
sbb
or
or
out
rep
dec
push
dec
and
adc
fimuls
xchg
adc
sbb
icebp
pop
push
lahf
cli
sbb
cwtl
popf
nop
scas
xchg
imul
ja
lock
daa
cwtl
xchg
inc
repnz
fstps
stc
mov
mov
fbld
hlt
adc
xchg
pop
jnp
imul
cld
inc
sub
pusha
adc
out
fbld
pop
xor
mov
and
fsubr
cli
adc
pop
pop
ret
cmpsb
dec
push
shlb
shll
mov
xchg
jns
adc
jae
sbb
jne
push
jl
shr
xchg
pop
adc
hlt
les
pop
mov
cwtl
sbb
pop
jge
push
mov
pop
xor
shl
mov
shll
cli
ss
hlt
fldcw
pop
lea
negl
push
aas
data16
cmc
inc
shll
shlb
fs
dec
push
in
lcall
jb
or
cmp
bound
pop
mov
repnz
in
ret
jle
inc
gs
fcom
jmp
jo
testb
sub
lods
mov
adc
int
iret
enter
jle
jecxz
call
pop
and
test
jmp
adc
mov
push
xchg
lods
mov
inc
repz
inc
shrb
push
dec
inc
mov
or
sbb
jo
das
sbb
jmp
in
mov
movsl
lcall
popf
xchg
shl
insl
cmp
aaa
xchg
inc
andb
test
and
mov
mov
std
cs
aaa
and
push
sub
inc
adc
aad
sbb
push
xchg
dec
out
enter
pop
pop
aas
or
fsubrl
aad
and
and
test
add
movsl
jp
repnz
leave
jecxz
in
arpl
test
addb
sbb
in
dec
xor
sub
jnp
sub
pusha
andl
xchg
ficoml
pop
and
dec
and
push
lea
push
clc
mov
adc
daa
push
and
dec
je
mov
mov
jp
lods
icebp
add
or
mov
imul
ss
pop
jecxz
out
cltd
lahf
push
or
mov
jg
mull
lods
ljmp
sub
fildll
dec
jbe
test
sub
fimuls
jo
movb
call
popf
mov
cli
jno
push
imul
inc
fldenv
dec
out
sbb
popl
mov
xor
cmp
lcall
js,pn
cmp
nop
cmp
ja
popf
push
cmp
sub
outsb
dec
fcoms
in
mov
jmp
inc
xlat
cli
and
mov
push
rclb
lds
popa
inc
sub
dec
ss
xor
adc
push
sbbw
mov
insl
pop
inc
test
inc
or
or
test
outsb
scas
dec
push
in
std
addb
test
sub
movsl
fdivrs
push
push
out
out
cmp
and
adc
inc
mov
mov
test
lock
cmp
inc
xchg
xor
clc
shll
mov
test
mov
fildll
inc
je
sub
shll
adc
and
jge
sar
sbb
outsl
roll
or
stos
push
ret
scas
fisubs
shll
mov
leave
je
push
or
cs
aam
orb
loop
jo
xor
cmpsb
cmpsl
clc
arpl
mov
bound
mov
sarb
or
iret
pop
push
fistl
jae
mov
in
nop
sub
outsl
inc
mov
xchg
cltd
xchg
mov
repz
sub
out
and
imul
cmp
adc
mov
jno
dec
dec
xor
or
sbb
shlb
or
fs
inc
fsubp
push
jle
add
jb
fmuls
mov
add
lds
enter
mov
xor
cmp
pop
nop
pop
cld
jl
icebp
sbb
xor
adc
push
inc
mov
enter
pop
sahf
stos
sbb
adcb
xor
sub
push
lret
movsb
dec
cmp
sar
mov
ficoms
cmc
mov
sub
mov
repnz
jmp
stc
movsb
outsl
cltd
mov
divl
xchg
push
mov
les
pop
xlat
sub
lods
js
inc
pop
cld
cli
ret
jnp
dec
xlat
push
mov
sub
cltd
xchg
jae
fildl
bound
adc
sbb
pop
mov
add
inc
outsb
push
insb
test
cld
add
sti
push
push
mov
mov
shlb
inc
mov
iret
pop
push
pop
sub
rcrb
ljmp
sbbl
cmp
or
iret
ja
add
in
addr16
add
jg
push
jmp
mov
js
pop
push
cli
aaa
cli
pop
dec
cltd
xchg
mov
subb
aam
arpl
fbstp
scas
sar
loopne
mov
cmp
rorl
mov
mov
sub
xlat
and
add
in
or
cmp
loop
fs
cltd
push
push
sti
insb
nop
addr16
cmp
pop
push
dec
je
sub
xor
fimuls
jg
rolb
inc
pop
fidivrs
fiaddl
pop
xchg
cmpsl
pusha
gs
sub
pushf
xchg
or
mov
add
stos
fcoms
cmpsb
mov
cmp
ss
pop
add
mov
mov
mov
sbb
outsb
lds
add
or
mov
lea
dec
pop
add
hlt
or
mov
test
gs
shll
scas
push
jge
fwait
mov
pop
mov
lods
xor
cltd
pop
mov
ljmp
lea
fwait
inc
and
out
mov
lret
sbb
aam
call
cli
cmp
gs
aaa
mov
and
out
jg
xor
jmp
pop
sarb
mov
cli
pop
imulb
dec
not
xor
xor
pop
movsb
mov
lods
push
mov
adc
jle
inc
and
jno
add
arpl
ret
xchg
cltd
ds
pop
push
rclb
loope
aad
jmp
push
xchg
stos
adc
andb
sti
adc
cmp
sbb
popf
mov
pop
push
cs
add
popa
cs
and
cwtl
pop
fs
rcrb
adc
or
sbb
mov
mov
or
mov
cs
aad
xchg
push
pushf
imul
mov
inc
sbb
pcmpeqd
adc
int3
in
push
lcall
xchg
int3
repnz
mov
pop
subb
or
test
data16
mov
xor
flds
jmp
pop
fsubrs
mov
inc
neg
lret
inc
call
dec
jae
xchg
xchg
icebp
repnz
movsb
inc
adc
inc
dec
stos
out
jp
cli
cwtl
inc
sub
aas
out
pop
mov
xor
inc
inc
icebp
jecxz
movsl
cmp
jle
cmp
clc
sub
push
and
sub
movsl
pop
cmpl
mov
push
nop
xchg
nop
push
xor
xchg
fwait
mov
out
mov
xchg
fistpll
test
cmpb
cs
lret
pop
inc
or
jg
das
jno
dec
cmpsl
cmp
sbbl
cmc
js
mov
dec
add
lds
mov
frstor
xor
sub
pop
push
mov
jnp
jmp
arpl
xchg
mov
cmp
pop
xor
add
insl
shll
enter
aas
jns
adc
cmc
adc
cmp
jge
xchg
popa
jbe
push
popa
push
mov
in
call
mov
repz
push
arpl
stos
inc
je
sbb
stc
mov
sahf
sub
lret
movsl
xorb
icebp
jne
dec
pop
xchg
xchg
stc
pop
or
iret
les
out
push
dec
repnz
xorb
fs
or
push
mov
rcll
xlat
les
aaa
cwtl
xchg
loop
xor
jae
cltd
cwtl
in
sub
std
inc
add
adc
or
rep
mov
or
in
shr
add
push
subb
push
pop
pop
call
scas
cmp
loope
sbb
jno
out
mov
loope
jle
mov
adc
pop
push
adc
xchg
out
dec
leave
in
push
das
test
push
scas
mov
push
sbb
mov
iret
sbb
or
push
xor
pushf
push
sarl
xchg
sbb
fs
mov
movsl
mov
daa
nop
or
clc
pop
cli
cmc
push
dec
cmp
hlt
stc
repnz
out
bound
out
lds
les
popa
into
jbe
stos
xor
push
xor
sub
dec
push
lea
test
mov
ret
xor
inc
pop
sbb
jns
mov
stos
push
rcrl
loope
sbb
jns
fildl
fildl
pushf
fs
inc
out
lea
movsl
push
mov
push
jp
jo
sbb
roll
rcrb
mov
dec
lods
subl
cli
sub
fdiv
lret
xchg
mov
dec
mov
and
sbb
repnz
push
enter
mov
out
or
jbe
callw
dec
adcb
std
jne,pn
fs
fidivrl
cltd
mov
ficoml
enter
mov
mull
mov
ret
or
and
jl
jge
add
lds
pop
repz
pop
popf
popa
xadd
add
xchg
xlat
ficoml
push
push
bound
and
ss
pop
pop
cmp
adc
pop
imul
fmull
stc
jne
sti
or
xor
xchg
das
shlb
imul
jb
dec
shrb
adc
mov
iret
cmp
outsl
insb
adc
es
adcl
push
gs
cmpb
fcoms
dec
push
outsl
call
push
mov
ret
fdivrl
xchg
lock
push
lds
and
cmpsl
outsb
pop
ret
xor
ljmp
mov
std
and
cmp
fucomp
cmpsb
insb
cli
scas
mov
mov
pop
out
repz
jmp
mov
inc
sub
cmp
inc
orl
call
test
xlat
sbb
inc
cmp
mov
and
ret
pushl
add
dec
repz
stos
gs
or
xor
mov
jg
sub
inc
repnz
add
lds
jno
xchg
adc
sub
movsb
xor
sub
cmp
fcomp
das
cwtl
dec
pop
popa
mov
sbb
dec
leave
sub
xchg
push
mov
jge
xchg
in
mov
cltd
out
xchg
cmpsb
clc
out
mov
jns
and
xchg
or
pusha
pop
sub
pop
test
cli
testb
dec
aad
mov
stc
rol
jo
ror
sbb
jle
mov
add
jle
fdivl
inc
mov
pop
aad
jmp
dec
xchg
sub
cs
pop
fiadds
xlat
mov
pop
push
or
sbb
repnz
inc
mov
push
pop
jnp
pop
scas
sub
outsl
out
dec
leave
in
dec
movsl
inc
lret
mov
mov
rcrl
mov
xchg
jae
fisttpll
ffreep
pusha
mov
hlt
sub
sbb
sub
in
push
daa
pop
movsb
mov
out
pop
mov
mov
insl
jne
or
clc
sub
flds
cmp
call
out
sbb
cwtl
adc
out
das
xchg
cmp
shll
jo
mov
or
outsb
xlat
imul
or
gs
outsl
xor
gs
das
fsubrp
push
pop
mov
jno
lcall
mov
mov
les
or
and
push
aad
pusha
cmp
clc
jno
and
jp
mov
and
stc
mov
pop
push
dec
int
test
ret
jns
loope
xor
mov
jle
movsl
das
nop
mov
jnp
jb
xor
mov
orb
and
inc
insb
jecxz
aad
mov
in
repnz
cmp
adc
jo
mov
int
mov
mov
out
inc
outsl
aad
xor
sti
out
inc
xor
dec
movsl
movsl
and
jbe
cmpsb
lock
push
mov
sub
and
jecxz
out
ret
xchg
mov
lret
adc
in
lret
lcall
icebp
push
push
mov
add
inc
ljmp
dec
idivb
sub
inc
xor
insl
push
inc
into
in
jmp
les
gs
mov
xchg
push
stos
lret
gs
cwtl
in
lcall
imul
out
jge
or
xchg
push
mov
dec
daa
xorb
ds
ficoml
mov
std
jge
out
imulb
or
out
xchg
mov
cltd
adc
movsl
xor
sbb
adc
xor
std
in
jecxz
inc
loope
dec
cmc
xchg
xchg
loopne
and
pop
test
xchg
jecxz
in
dec
lods
mov
test
inc
out
lds
dec
pop
and
ljmp
push
adc
fisubrl
fs
push
mov
sbb
subb
xchg
dec
pop
stos
pop
lds
lret
inc
mov
sbb
adc
adc
push
leave
out
xchg
mov
sbb
mov
and
pop
pop
das
add
push
mul
inc
or
mov
dec
sub
mov
jae
dec
prefetch
or
mov
mov
stc
fistpl
btr
pusha
jp
scas
pushf
ret
sbb
insb
movsb
mov
and
push
pop
aad
xchg
ja
repnz
jns
rcrl
loopne
ret
shlb
clc
add
mov
dec
movsb
mov
mov
test
rol
clc
out
add
into
insb
clc
cmp
lret
cmpsl
adc
sbb
bound
mov
insb
push
push
loopne
xchg
mov
inc
xchg
repz
fcoml
je
aas
test
add
cwtl
mov
push
outsb
test
dec
or
jb
or
daa
mov
adc
out
lret
pop
lret
sbb
mov
mov
mov
fsts
dec
xor
xchg
sbb
push
fmull
mov
dec
xor
fcmovnu
mov
lods
scas
pop
out
mov
pop
mov
adc
addr16
mov
bndstx
jmp
mov
sub
dec
pushf
sbb
fcmovb
push
jl
leave
add
push
rorl
jmp
sbb
and
push
cmc
scas
adc
mov
lret
or
data16
js
mov
sbb
les
pop
mov
mov
push
cs
push
sub
scas
push
push
bound
sbb
xor
jecxz
push
jle
mov
sub
cbtw
xchg
cli
inc
jmp
out
dec
ficoml
lds
pop
out
inc
mov
out
fwait
cwtl
inc
mov
sbb
add
cmpsb
adc
pop
outsb
push
or
in
outsb
xor
xor
inc
repnz
sbb
or
call
and
push
mov
add
cmp
sahf
or
xchg
mov
jle
ret
dec
cmc
call
cmc
pusha
stos
pop
cmpsl
data16
ljmp
pop
ret
jae
jmp
roll
inc
mov
std
sahf
sbb
push
inc
mov
pop
stos
imul
add
arpl
cmp
and
add
movsb
xor
inc
cli
adc
mov
pop
jecxz
adc
mov
jae
arpl
pop
push
call
mov
dec
repnz
fsts
add
jns
push
fwait
and
out
ret
pop
cltd
int
add
push
movsl
mov
loop
mov
push
pop
adc
sub
inc
or
or
int
xor
dec
adc
es
and
in
push
jmp
shll
dec
push
and
imul
mov
xor
repz
into
push
dec
in
out
nop
add
cmc
test
subl
lods
xchg
imulb
cld
out
lcall
shll
ds
mov
ds
adc
dec
daa
scas
hlt
test
sub
dec
rcll
outsl
sub
inc
ljmp
std
jmp
push
adc
inc
mov
xor
jb
iret
mov
push
cmp
cmpsl
adc
push
nop
rclb
dec
loop
es
loope
or
arpl
mov
and
dec
call
or
ret
std
rcrb
bound
push
jp
rorb
or
mov
sub
sub
in
xor
inc
test
fldl
and
push
aad
jno
mov
stos
sub
or
jbe
jmp
mov
aaa
std
or
cwtl
call
add
sub
mov
fisubrl
jle
inc
pop
shl
adc
mov
insl
pop
scas
mov
test
loopne
dec
inc
imul
in
or
jb
xor
cmp
les
add
aad
icebp
test
repz
bound
sbb
aam
push
jo
add
adc
sbb
adc
add
mov
add
test
sti
jno
je
jp
aaa
cmp
dec
outsl
xor
push
dec
icebp
fsub
stc
adc
inc
xlat
xchg
sahf
insl
sub
and
shrl
out
lahf
in
movsl
mov
andl
cmpsl
int3
ljmp
es
popa
sti
cmp
xchg
mov
ret
inc
and
jg
and
inc
cmp
add
inc
insl
push
jns
add
and
mov
xchg
mov
into
out
imulb
push
js
fcom
push
gs
jp
sbb
inc
xor
pushf
push
fsubs
gs
sub
mov
dec
in
add
movsb
mov
adc
push
inc
inc
cmp
sub
sti
aaa
add
das
ds
jnp
enter
cmp
mov
fisubrl
jae
test
fsubp
xor
and
jmp
rcrl
orb
lock
adc
mov
inc
ds
sub
sub
cmc
hlt
sub
hlt
adc
sbb
insb
cli
mov
dec
pop
or
fldt
pop
cltd
cmp
xor
dec
in
nop
add
xchg
fcompl
dec
fs
mov
ficompl
nop
roll
inc
or
or
loope
inc
xchg
lret
ds
pushf
or
xor
fdiv
shr
negl
mov
aaa
shlb
mov
sub
test
xor
out
test
lock
ja
dec
add
cmp
mov
sub
test
orb
add
adc
test
imul
mov
sti
scas
xchg
or
mov
mov
mov
jb
test
rorb
cbtw
fwait
pop
test
xchg
dec
lret
push
sbb
xor
cmpsl
fildl
daa
in
fcmovnu
or
rcl
push
jl
shl
mov
andb
sub
pop
mov
cmpsl
ret
ret
sbb
mov
push
push
mov
or
pushf
xor
pop
cmpl
test
das
mov
pop
push
mov
cmpb
hlt
jns
decb
pop
push
inc
repz
sbb
cwtl
push
xor
cwtl
sbb
les
mov
pop
arpl
inc
dec
add
xor
repz
sub
inc
lods
nop
mov
xor
push
mov
push
popa
dec
add
insl
fwait
xchg
ret
in
imul
rcrb
leave
cwtl
sub
lea
mov
fwait
jl
pop
in
loopne
into
lods
js
aas
fmuls
ja
mov
pop
jecxz
xchg
ja
int
insb
ror
loopne
add
pop
adc
jns
xchg
push
mov
enter
test
xchg
clc
lods
push
mov
lcall
mov
jmp
jnp
mov
jl
test
mov
sub
cmpsb
xchg
adc
cmpl
dec
push
andb
cmp
push
cld
xchg
nop
fidivl
mov
jmp
enter
daa
mov
push
cmp
test
ret
cmp
lret
xor
cmp
out
ljmp
out
ljmp
addr16
add
rorl
cmpsl
loope
stos
sbb
pop
mov
mov
sub
sti
and
pop
xor
xlat
outsl
push
mov
movl
mov
sub
lds
dec
cmp
fs
mov
js
push
cmp
or
push
shrl
inc
lret
inc
lcall
adcl
imul
arpl
xor
push
negl
data16
sub
mov
mov
cmp
sub
repz
mov
lock
jns
incb
add
add
in
jg
jns
test
bound
pop
hlt
lock
add
adcb
fcoml
jae
mov
lret
dec
fists
inc
icebp
mov
bound
fisubrs
outsl
jnp
lret
popf
in
in
jb
pop
stc
add
lea
dec
out
or
or
sbb
incb
scas
inc
push
xor
jb
adc
xor
nop
xor
and
push
pop
sub
inc
mov
or
insl
jmp
jmp
les
pop
test
jmp
and
test
mov
dec
fxch
xlat
lea
imul
pop
pop
stos
or
mov
inc
push
and
cmpsb
ja
pop
fadds
push
mov
push
or
lahf
sub
add
into
adc
and
inc
aad
loop
mov
and
sub
sub
ljmp
imul
daa
mov
push
imul
js
xchg
iret
insb
jecxz
cmovbe
push
clc
cwtl
ljmp
and
sbb
test
ss
inc
jmp
cmp
inc
mull
fildll
mov
add
mov
ja
inc
lods
sub
iret
ds
fs
insb
xchg
xor
shl
jp
test
sahf
dec
xor
data16
out
int
out
add
inc
pop
loop
mov
cmc
stos
mov
fidivl
pop
fs
add
inc
daa
scas
js
fistps
insb
fdiv
fmul
lahf
dec
mov
fdivs
test
and
and
jb
jne
push
pop
jne
mov
and
push
bound
scas
mov
cmp
out
imul
movl
mov
daa
xchg
mov
inc
arpl
add
xchg
or
jl
mov
xchg
das
lcall
jecxz
ss
or
inc
and
rorl
xchg
xlat
mov
scas
mov
cmp
movd
cmp
call
push
add
jl
rcrb
pop
shll
sbbl
cmp
fidivs
xor
out
pop
push
cmp
or
rclb
push
incl
dec
dec
mov
insb
cld
mov
lods
arpl
or
cmp
xor
push
jecxz
fs
je
rcrl
loop
and
leave
xchg
xorl
mov
sti
dec
aad
sub
sbb
cltd
jne
repnz
insl
mov
or
push
add
outsl
jl
cltd
ret
push
sbb
iret
inc
mov
stos
cmp
mov
cmp
push
pop
repnz
sub
xchg
dec
out
add
scas
mov
or
push
push
rolb
pop
movsb
aam
add
pop
mov
xor
mov
push
loop
ret
dec
fxch
fcomp
mov
or
shrl
and
dec
mov
xchg
mov
lods
mov
add
rcrl
and
jge
andb
aaa
xchg
addr16
in
mov
inc
mov
adc
jno
sbb
test
xor
or
decb
dec
pop
jae
push
jno
test
cmp
icebp
dec
push
arpl
jecxz
into
and
dec
mov
adc
push
jo
and
fcompl
and
popf
sahf
mov
popa
mov
adcl
fcom
push
dec
mov
xlat
xlat
dec
jb
pop
ret
out
cwtl
xchg
sti
dec
cs
imull
fs
in
mov
int3
mov
lods
cmp
sub
pop
sbb
cmp
inc
jg
push
xchg
dec
data16
push
add
jno
xchg
adc
mov
bound
pop
inc
cmp
push
dec
call
les
mov
xchg
adc
test
inc
dec
push
repnz
and
aad
dec
sub
xor
leave
and
mov
adc
adc
in
out
jmp
data16
push
repz
lds
jns
test
daa
xorb
pop
jp
lret
xchg
pop
sub
lret
fs
pusha
loope
fstl
dec
orl
fldcw
dec
stc
pop
inc
scas
pushf
mov
dec
into
rcr
test
jnp
jns
jle
cmp
mov
mov
ror
popl
xor
xchg
dec
incl
lcall
fucomi
sub
pop
push
mov
mov
jne
je
inc
jle
push
push
xchg
xlat
mov
loop
or
push
rcll
adc
fidivs
and
or
xchg
cmp
fisttps
adc
nop
pushf
fbld
mov
aam
cwtl
jno
or
ret
mov
out
fwait
icebp
aam
adc
dec
movl
mov
daa
xor
jecxz
mov
xchg
daa
out
cmp
inc
mov
sbbl
jecxz
push
fs
pop
or
punpckldq
inc
lcall
mov
pmaddubsw
hlt
les
jecxz
scas
cmpsb
mov
push
int3
lret
mov
sbb
movsb
es
ds
loop
add
push
imul
dec
aad
sti
stc
and
fdivrs
stos
pusha
dec
ret
mov
jo
or
call
fdiv
xchg
cmpb
mov
jp
add
mov
mov
dec
sub
jae
and
or
or
inc
out
je
jno
sub
jl
cltd
push
fcmovb
insl
aas
xor
cmp
repz
loope
fstl
pop
mov
int3
adc
and
mov
push
sub
add
or
test
push
test
outsl
push
fldt
in
bound
loope
push
ds
and
xor
in
xchg
pop
daa
or
jmp
mov
fwait
addr16
inc
dec
mov
push
sbb
out
cwtl
or
icebp
push
outsb
int3
mov
mov
nop
jb
fimull
push
popf
leave
les
jae
test
js
xchg
jge
imul
dec
or
push
mov
mov
sbb
sbb
xor
xchg
cs
insb
xor
out
cmp
sbb
jp
ss
jmp
cmp
cld
push
lock
jle
aas
not
dec
or
cld
aad
xchg
xchg
xchg
xor
mov
pop
mov
fs
jnp
sub
cmpsl
push
mov
or
cmc
dec
jmp
sbb
add
loope
push
movsb
outsb
scas
add
mov
out
jp
lahf
cli
stc
iret
loopne
sahf
dec
push
mov
mov
stos
ljmp
inc
cmpsl
add
rolb
xchg
xor
jp
mov
xchg
push
cmp
scas
orl
xchg
int3
shl
addr16
jmp
mov
ret
mov
pop
call
push
ja
mov
and
je
mov
and
nop
cmpsb
mov
sahf
cwtl
sub
dec
sahf
cld
nop
pop
push
insl
jge
int
sbb
inc
subb
outsl
clc
test
inc
rcll
xlat
stos
cld
xor
outsl
xchg
xadd
pop
cmp
inc
mov
sbb
push
push
add
gs
fwait
outsl
ficomps
subl
xchg
aaa
pop
aad
sbb
iret
sbb
loope
adc
out
ret
shll
sub
pusha
hlt
xchg
rolb
shll
ret
int
add
pop
mov
es
pop
sar
mov
popf
dec
inc
ss
jmp
out
sub
mov
test
cs
push
push
mov
faddl
in
out
dec
dec
iret
and
das
ja
testb
jne
mov
cmp
dec
nop
xor
dec
dec
jg
test
sbb
addr16
mov
pop
fisubl
mov
dec
lret
and
mov
mov
cmp
pusha
dec
cmp
xchg
mov
mov
lds
insb
mov
or
mov
arpl
scas
push
add
and
mov
stos
out
mov
scas
mov
divb
xor
xchg
push
xor
std
fsubl
or
jge
dec
mov
movsl
js
add
das
fwait
xor
add
ret
adc
insb
push
add
push
jg
adc
xor
shl
dec
into
cli
sbb
insb
sub
out
mov
inc
xchg
repnz
or
in
sbbl
jmp
in
or
out
fwait
push
mov
sub
aas
imulb
lcall
mov
stc
nop
mov
pop
jo
push
clc
push
or
fisubrl
loopne
int
xor
addb
push
lret
xchg
mov
fwait
cmc
inc
and
dec
or
xchg
jge
outsb
imul
enter
test
sub
push
jmp
dec
fcmovbe
dec
daa
scas
jns
aad
test
repnz
int3
fcmovne
mov
popf
enter
pop
rcl
lods
test
xchg
pop
and
and
addr16
sub
push
dec
mov
nop
lret
or
popf
pusha
shlb
ss
shl
dec
pushfw
stc
cmc
sbbb
std
mov
sub
stos
mov
ja
dec
out
cs
ficoms
mov
les
adcl
out
mov
ljmp
push
mov
xor
test
fnstcw
and
or
pop
xlat
addr16
cmpl
xchg
add
mov
std
rclb
clc
pop
loopne
mov
lock
pusha
cmp
mov
cld
icebp
mov
mov
sti
push
popf
addr16
dec
daa
push
and
mov
test
stc
outsb
loope
dec
adc
out
lret
pusha
xchg
ljmp
dec
push
jge
fwait
lock
js
call
push
inc
lahf
cs
jnp
lcall
sbb
push
dec
mov
jb
clc
push
sub
fcomp
push
dec
lods
out
lods
imul
pop
aad
cmpl
fcmovnb
adc
xchg
data16
jbe
addr16
ja
cwtd
push
jg
cmp
clc
outsl
mov
add
pop
call
xchg
sub
inc
loope
repz
mov
rol
jp
sub
sbb
lret
inc
push
mov
cli
imul
in
movsl
or
push
mov
cld
shrl
push
sti
pop
cld
push
mov
mov
xlat
fmull
std
dec
sbb
arpl
and
cmp
cmp
dec
jnp
jb
clc
add
pusha
notb
pop
push
lock
inc
insl
arpl
movb
inc
ljmp
out
inc
cltd
rcrl
xor
push
mov
movsb
adc
mov
addb
pop
mov
inc
pop
or
out
stos
push
scas
repz
das
in
insb
aad
adc
scas
add
jmp
push
cmp
sub
scas
xor
ds
inc
pop
ss
and
movsb
or
sub
and
fnstenv
pushf
inc
aaa
pop
lods
xchg
sbb
mov
adc
or
adc
aad
inc
daa
repnz
mov
mov
dec
dec
or
std
xchg
jmp
enter
je
push
xor
xorl
movsl
lcall
stos
in
jns
add
ret
lods
push
or
cld
lock
cwtl
movsb
scas
ret
divl
or
push
fisubs
adc
cmp
out
out
mov
or
jge
daa
getsec
mov
push
cld
inc
cmp
xchg
or
cwtl
and
pop
movsl
inc
xchg
ds
inc
inc
xchg
mov
fisttpl
je
repnz
sbb
inc
imul
mov
cmpsb
cmp
push
dec
mov
or
jecxz
push
in
mov
mov
xchg
stos
add
mov
insl
mov
in
imul
aad
in
mov
push
xchg
add
mov
mov
clc
xchg
andl
bnd
call
stos
mov
jnp
push
repnz
mov
pop
mov
test
movsl
insl
dec
cmp
add
movsb
enter
sbb
adc
cld
gs
pop
shl
int
inc
push
mov
add
mov
aad
scas
addb
mov
aaa
scas
or
xor
xchg
nop
imul
add
push
pop
xchg
or
stc
jg
inc
ja
in
jg
xchg
shlb
xchg
xor
in
or
test
and
pusha
xor
sub
je
add
in
movsb
cmp
testb
mov
cmpsb
lret
mov
aam
jmp
mov
shrl
fcomps
mov
push
xor
xor
mov
push
inc
push
add
fdivr
sar
inc
rorl
insb
mov
inc
in
aad
xor
mov
ss
jl
mov
aas
pop
out
or
int3
cmpsl
daa
sbb
cmpl
push
adc
and
xchg
cmp
jp
ss
aad
mov
mov
xchg
or
mov
fwait
test
sub
cmpsb
fnstcw
fstps
and
data16
cmp
inc
std
std
inc
bound
das
inc
mov
xchg
inc
test
ljmp
cmp
lea
inc
aas
fildl
mov
push
stos
fdivl
add
xchg
shl
dec
or
mov
xor
add
push
and
xor
movsl
or
xchg
fsubrp
inc
addr16
add
xor
sarl
fs
push
xor
jge
push
mov
mov
sub
add
add
or
clc
lret
faddl
xchg
test
js
sbb
mov
mov
in
fdivr
out
lret
push
mov
ja
psubsb
stc
cmp
mov
stc
pop
pop
jbe
jb
out
fiadds
jns
clc
push
aad
dec
mov
in
sbb
mov
and
sbb
fs
push
jp
lock
cltd
in
icebp
push
fadds
dec
cld
arpl
jmp
mov
mov
jl
js
fildl
mov
addr16
pushf
out
mov
daa
jb
test
movntps
sbb
loope
pop
pop
ficoms
or
mov
xor
xchg
xorb
pusha
dec
pop
in
rcr
cmc
xchg
pop
into
adc
ja
scas
inc
mov
xor
neg
aas
cmp
movsl
xchg
pop
xor
cmp
pop
out
jg
adc
mov
xorl
mov
movsl
pop
or
sbb
ds
scas
test
mov
inc
mov
inc
fwait
xlat
and
std
xchg
and
ds
in
js
ror
xchg
nop
fwait
pop
cltd
out
or
pop
cmc
adc
cld
xor
ljmp
call
jne
ret
cmp
ja
push
xchg
rolb
jae
pop
into
cld
jbe
lock
inc
xchg
or
mov
mov
mull
insb
loopne
arpl
add
mov
adc
int3
and
ss
call
pushf
xor
arpl
xchg
jmp
xchg
pop
jecxz
mov
les
outsl
push
cli
xchg
pop
mov
fs
js
ror
mov
aam
mov
sbb
pop
mov
mull
shl
cmc
mov
insb
out
jb
mov
mov
jecxz
fistps
rcll
rclb
adc
stc
loope
outsl
std
das
iret
test
push
enter
fidivs
jecxz
cwtl
push
fcoms
fdivrs
add
xchg
or
mov
xchg
aas
lcall
int
orb
lret
lods
or
es
adc
xchg
fiaddl
fadds
mov
cmpsb
hlt
pop
daa
cmpb
out
or
shrl
dec
sbb
call
mov
fstps
scas
cmc
mov
daa
xchg
jecxz
inc
push
mov
sub
jg
push
or
pop
popf
incl
bound
addr16
push
push
insb
rcl
loop
mov
mov
aad
arpl
movsl
fisttpll
mov
xlat
xchg
mov
jb
or
jno
jmp
out
or
ljmp
cmpsl
das
mov
inc
fisubs
push
mov
bound
adc
and
imul
out
stos
add
push
pushf
shrl
shrb
ss
and
repz
pop
cs
ds
sub
add
daa
into
mov
or
cs
xor
test
push
fdivs
arpl
unpcklps
dec
mov
sbb
pop
mov
out
fstl
scas
lahf
cmp
jmp
pop
out
sbb
stc
sub
fdivrs
cmpsb
cmp
mov
or
dec
shll
cmpsl
xchg
xor
das
xor
or
mov
adc
and
jns
xor
cmp
dec
lcall
rcrl
dec
fisubl
scas
outsb
mov
insl
cmp
imul
push
inc
xchg
xlat
push
loop
jmp
inc
add
xor
pop
inc
mov
sti
inc
mov
mov
jmp
pop
or
mov
inc
ja
gs
ljmp
sub
sahf
int3
icebp
sbb
cmpsl
movsb
rcrl
ss
inc
jl
movsl
pop
idivb
dec
mov
jo
mov
jno
fisubrs
mov
dec
cs
in
add
test
loop
cmp
sub
mov
and
insl
ss
xor
inc
loop
sub
ds
inc
push
data16
cs
and
aam
clc
xor
ret
add
xchg
dec
push
loope
adc
xorb
mov
idivl
arpl
xchg
push
push
mov
pop
clc
outsb
dec
xchg
std
sub
xchg
jl
cmpsl
xor
iret
push
xor
xor
addl
and
jae
lds
mov
xor
push
cmp
sbb
pusha
sub
dec
dec
or
lock
dec
fs
push
mov
test
in
jmp
dec
and
push
xor
push
repnz
xlat
pop
pop
mov
mov
adc
mov
aaa
cmpb
mov
pop
ds
mov
add
loopne
popf
mov
fstl
xor
add
insl
es
sbb
imul
xor
mov
outsl
inc
pop
pop
loop
fistps
jno
std
test
test
mov
js
adc
push
jno
enter
add
stos
jns
pop
hlt
xor
sub
rcll
sbb
rclb
jl
jbe
rcll
mov
or
loopne
push
mov
add
xor
insb
pop
ljmp
jecxz
sub
mov
mov
pop
cwtl
rolb
dec
and
push
dec
xchg
add
je
sbb
xor
insl
inc
cpuid
lods
push
orl
mov
loop
sahf
jno
int3
dec
int
dec
adc
inc
loope
xchg
js
adc
jmp
mov
dec
xor
clc
pop
out
icebp
lods
lock
jg
cmp
mov
jmp
push
sub
xor
sub
xchg
cld
in
jne
or
or
notl
fildl
jno
cmp
or
mov
push
pop
sub
loopne
push
std
not
sbb
push
inc
repz
pushf
push
rclb
subb
and
test
jbe
inc
cli
clc
das
loope
inc
nop
stos
pop
xor
push
std
mov
iret
push
inc
cwtl
cmp
in
jns
popa
dec
repz
loop
add
sbbl
insb
fnsave
pop
pmaxub
scas
mov
cmp
cmpsl
test
lea
icebp
call
vcvtss2si
cmp
lods
pop
cmp
pusha
jmp
ja
in
scas
divb
mov
or
jns
pop
add
xor
adc
xchg
or
ror
jmp
sbb
cmpsl
adc
in
nop
add
jne
mov
fdivl
push
push
or
insb
fs
lock
lods
out
flds
or
xchg
push
pop
aaa
add
popa
inc
jl
insb
dec
clc
pop
ja
fisttps
mov
mov
push
mov
fdivrl
mov
push
pop
insb
cmp
cmpsb
mov
inc
xor
jno
push
add
pushf
sbb
out
dec
hlt
xchg
jmp
dec
adc
loop
andb
shl
cmp
in
movsb
dec
shrl
add
pushf
push
std
aaa
inc
inc
add
popf
out
js
scas
push
pop
jmp
pop
push
and
stos
dec
cmp
lahf
xchg
repnz
insl
repz
push
xor
adc
inc
jb
scas
rcrl
mov
dec
push
dec
jne
insl
mov
loope
adc
push
xlat
shlb
push
push
mov
cmpsl
pop
shr
sti
adc
nop
pop
jns
cmc
cmpsl
pop
pushf
and
orl
shrb
pop
dec
in
ja
popa
test
js
mov
out
mov
loop
fisubrs
lret
pusha
push
fs
sub
and
cmpsb
cmp
hlt
mov
push
insb
mov
iret
outsl
mov
inc
scas
dec
ret
push
xorl
push
in
rcrl
lahf
add
mov
shlb
xlat
xor
mov
cmp
jae
pop
ret
dec
and
ds
pop
out
mov
inc
mov
fnstsw
or
gs
mov
or
mov
mov
mov
mov
push
sahf
jecxz
aam
loop
int
cmp
lret
inc
test
xchg
xor
jo
les
mov
pop
test
push
sbb
adc
ror
cmp
cmp
movsl
repz
mov
inc
mov
cmp
xlat
test
mov
inc
andb
xchg
cld
adc
sub
shll
jbe
push
pop
sti
sbb
sbb
loop
pop
lcall
jnp
fcoml
xchg
fld
mov
inc
pusha
pop
cld
lahf
sarl
or
xor
pop
pop
jo
ss
test
add
push
ret
mov
testl
mov
jl
aam
in
loopne
cli
or
fstps
xor
sub
in
out
inc
push
rolb
ret
pop
mov
jo
mov
test
pop
sarb
imull
xor
adc
push
jae,pn
in
pop
jns
mov
add
das
inc
push
or
es
das
rorl
add
or
les
push
pop
mov
in
jno
lret
repnz
ss
in
xor
jb
and
pop
dec
adc
int3
sub
dec
call
push
mov
mov
movsb
pusha
xchg
push
jle
dec
jl
das
lahf
mov
fstpt
fucomp
mov
or
insl
xchg
mov
mov
mov
int3
lcall
mov
jmp
inc
repnz
pop
pop
push
jbe
out
popa
mov
xchg
mov
mov
push
pop
sbb
fdivr
dec
jecxz
adc
test
std
adc
std
dec
bswap
das
push
xchg
adcl
mov
jg
add
mov
jne,pt
les
cmp
mov
int3
jg
sub
dec
mul
push
xchg
or
fldt
pop
inc
leave
and
adc
inc
out
ljmp
addr16
test
out
negl
int3
sub
jo
push
je
push
ljmp
adc
dec
outsb
ds
push
and
mov
sbbl
or
inc
cmp
sub
sbb
inc
aaa
cltd
adc
inc
cmpsl
jno
outsb
jnp
aam
sub
add
outsb
dec
xchg
jnp
cmp
andb
dec
and
mov
loop
stos
loopne
xor
enter
mov
lret
add
aam
sahf
jae
rorb
cmp
data16
arpl
test
imul
mov
jg
push
or
push
repz
xor
dec
xor
sbb
cli
xor
sub
xor
test
ja
sub
lods
aad
pop
sbb
and
dec
mov
shlb
pop
in
cmp
xor
gs
sahf
popa
sbb
scas
shlb
fs
js
imul
cmp
pop
push
sahf
idiv
ss
int
movsb
xchg
loope
cs
mov
add
pop
popf
inc
testl
into
insl
in
aad
jae
ret
or
mov
sahf
scas
loope
repnz
rclb
clc
add
add
pop
or
lret
cmp
xchg
sub
inc
inc
jae
cmpsl
or
pop
hlt
repz
xor
dec
sbb
subl
hlt
and
test
cli
sbb
int
mov
out
mov
das
fimuls
dec
ljmp
adc
int
inc
or
dec
xchg
mov
imul
or
mov
icebp
cmpsl
sbb
xor
js
aam
cmp
pop
imul
inc
lea
loop
mov
fimuls
adc
aas
loop
aad
cmpsl
test
xchg
jae
mov
adc
arpl
xor
cwtl
sbb
mov
mov
lcall
xchg
cmpsb
cmp
inc
mov
aas
repnz
jg
mov
test
loop
outsb
or
sbb
mov
mov
mov
xchg
sub
mov
in
faddl
jbe
scas
mov
lock
imul
pusha
loop
xchg
clc
cmp
inc
stos
pop
adcb
stos
xor
enter
mov
data16
dec
shrb
and
inc
inc
mov
sbb
push
jge
mov
test
jl
xchg
insl
fldl
das
push
js
fcomip
mov
xchg
cmp
rorl
jge
jb
or
push
pop
ds
xor
pop
ljmp
mov
ja
cld
fdiv
mov
mov
add
fldz
mov
pop
stc
xor
iret
rclb
popa
lcall
pop
adc
cmc
xchg
pushf
xchg
pusha
fwait
push
xorb
cmp
mov
je
mov
fistl
rorl
mov
push
repz
stc
mov
adc
adc
inc
add
lret
addr16
lock
ss
mov
iret
adc
fdiv
test
call
loope
pop
in
jl
dec
xchg
and
fsubrl
fdivrs
ja
cmp
ds
sbb
lods
add
sub
mov
cld
mov
jl
or
adc
push
sbb
inc
jg
stc
jns
add
lds
aad
sbb
adc
and
or
shlb
fcomip
dec
and
or
lock
shlb
xor
adc
push
push
add
js
dec
outsl
bound
cmc
and
push
xchg
scas
sbb
call
mov
mov
and
dec
cmpsb
shl
stos
pusha
stos
cltd
cmp
xor
mov
fimuls
sbb
sbb
or
inc
aas
jecxz
dec
jg
mov
sbb
testl
cltd
or
pop
pop
or
cmp
and
clc
js
xor
mov
mov
jp
pushf
add
scas
lret
sub
repz
imul
xchg
or
ds
fmul
repnz
gs
pop
or
aam
push
sbb
rcr
test
jle
cmpsb
test
cmp
daa
pusha
jge
jmp
sbb
dec
sbb
inc
insb
mov
or
rcrl
xchg
cmpsb
scas
lds
push
rorb
and
mov
jp
testb
fdivrs
add
sahf
pop
mov
lock
cld
push
sub
pop
insb
inc
push
dec
pop
push
push
aam
cmpsb
push
adc
pushf
nop
dec
or
mov
inc
pushf
repz
mov
pop
push
out
adc
pop
dec
loope
xchg
mov
adc
inc
dec
and
cmp
xor
xorl
sbb
jg
scas
outsb
jg
jb
je
push
dec
cmovle
shll
mov
mov
and
jp
mov
cltd
sbb
out
jnp
shll
push
dec
inc
push
aaa
mov
sbb
loope
imull
push
add
stos
cmpsb
shl
sbb
imul
add
rol
add
dec
aaa
pop
mov
gs
jl
sub
cmp
ret
setg
cmpsb
lods
leave
fs
rolb
xchg
aas
adc
stos
push
sbb
xchg
adc
out
mov
or
iret
leave
clc
in
and
adc
xchg
push
cmp
inc
ja
mov
mov
xchg
xor
mov
aad
jno
push
sub
jecxz
xor
popa
stos
pop
cld
fstl
mov
pop
shll
pop
scas
xchg
cmp
jg
orl
jg
xor
sbb
ljmp
stos
inc
cwtl
sub
fisttpl
mov
mov
mov
pop
dec
fcmovbe
and
sub
dec
jge
pop
sub
mov
test
shl
xor
jo
mov
jge
lret
and
addr16
cs
addr16
xchg
mov
mov
sub
pop
pop
or
imulb
jmp
fmull
push
and
aad
dec
daa
test
mov
lods
xchg
loop
enter
add
pop
shrb
add
clc
mov
pop
sbb
push
pop
into
imul
jno
and
testl
fimull
mov
xchg
push
adc
into
pop
fst
out
mov
xchg
fildl
or
movsb
mov
sub
cmp
xchg
decl
and
daa
cmp
add
es
shlb
outsb
jno
insl
rcr
jbe
add
inc
popa
loope
cmpsb
cmp
negb
lods
mov
lock
jb
mov
shll
mov
xor
pop
pop
scas
dec
clc
mov
jp
jbe
mov
iret
shrb
out
lock
dec
dec
inc
insb
jne
xor
jbe
pop
jmp
dec
pop
gs
cmp
push
movsb
mov
data16
adc
jmp
test
push
jmp
cmp
icebp
das
test
jp
and
sub
add
pop
add
andl
ja
and
or
push
sbb
mov
xor
xchg
sbb
repz
sbb
out
pop
pop
inc
loope
mov
xor
sbb
subb
rorl
ja
shl
or
fnstenv
pop
pop
and
popa
out
xchg
fwait
push
push
rcrl
lods
std
in
lret
or
daa
cmp
cmpsb
pop
jnp
test
sbb
push
xchg
jl
cmp
out
loope
repnz
jo
outsl
sbb
push
xchg
out
out
inc
lods
push
std
pop
sub
jnp
xor
sahf
cmp
outsb
pop
imul
int3
sbb
and
in
jp
ret
adc
cmp
jg
fidivrl
lods
push
add
add
imul
stos
sbb
mov
add
inc
cwtl
mov
xchg
lret
outsb
fldt
pop
outsl
arpl
sub
bnd
outsl
xor
adc
mov
push
cmovl
out
jmp
xor
mov
push
xor
je
cli
mov
pop
pop
xlat
imul
cmp
lret
pop
mov
cmpsl
sbb
rorl
sti
push
sub
sahf
mov
mov
stos
sahf
push
dec
imul
mov
cmp
push
add
std
stos
mov
mov
jl
fistpl
icebp
cmp
adc
fcomps
outsl
sub
lds
icebp
mov
cmc
cld
mov
popf
add
pop
mov
enter
insl
int3
pop
mov
mov
gs
inc
and
rorb
jnp
imul
rorb
sub
sub
iret
jo
jnp
out
mov
push
aaa
jge
mov
test
jns
in
psraw
dec
xor
cmp
inc
rolb
xlat
cltd
out
lods
xlat
dec
adc
es
js
jg
xchg
test
nop
adc
rorl
lea
movsl
push
mov
movsb
and
mov
pop
lret
jb
push
scas
imul
xchg
mull
jmp
xchg
cmp
jb
popa
xchg
std
cltd
sub
icebp
xchg
cmp
adc
lcall
arpl
mov
xchg
cs
and
call
loope
mov
push
fwait
dec
xchg
pop
or
data16
out
dec
jne
fwait
aad
subb
adc
mov
push
aad
mov
ja
dec
loope
pop
inc
cli
aam
xchg
jmp
inc
mov
daa
jne
push
insl
mov
lret
jne
mov
mov
div
sbb
aam
fldenv
mov
outsl
scas
dec
ss
sbb
cld
ja
lret
cmp
xorl
je
jno
cmpsl
sub
fldcw
popa
sub
sbb
in
jecxz
lcall
fadd
outsb
pop
outsl
stos
add
mov
ljmp
cwtl
lods
dec
mov
jl
and
mov
sti
jo
out
shll
outsb
hlt
cmp
jecxz
stc
mov
fisubs
add
or
add
push
mov
mov
les
outsb
js
push
mov
dec
js
pop
jmp
mov
push
mov
ljmp
cmpsl
pop
xor
iret
int3
aam
xor
mov
mov
loope
orb
inc
or
cmp
xlat
inc
imul
leave
lea
dec
loopne
push
push
or
loopne
cmp
xor
cmp
leave
stc
jg
fbstp
add
call
xor
mov
decl
adc
push
cmp
jecxz
loop
dec
mov
insb
mov
les
nop
mov
outsl
and
or
mov
jecxz
xchg
add
lcall
out
outsl
popa
in
xor
and
push
inc
test
fisttps
aam
mull
stos
ss
je
aad
adc
cli
outsl
xchg
cmp
sahf
cmpsb
ret
pusha
xor
adc
into
cltd
bound
sub
xchg
imul
call
cmpsb
ret
test
or
ret
iret
mov
in
sub
dec
into
xchg
jne
mov
sar
sbb
mov
call
inc
into
iret
jg
xchg
in
inc
in
add
xchg
scas
inc
fstpl
pushf
pushf
xlat
cltd
loope
fmull
sub
je
xchg
pop
xlat
add
stos
scas
in
fmulp
mov
scas
jns
in
adc
shrl
lods
stos
movsb
outsb
jge
loope
sub
sub
ja
addr16
cmp
fcomps
sbb
imul
xchg
jb
lock
fimuls
cli
std
pop
dec
push
xchg
xchg
ds
fcmovu
test
sub
cs
xor
insb
add
scas
daa
lret
jne
xor
inc
xchg
push
xor
test
scas
cli
stc
ss
repnz
rcll
sub
add
add
mov
push
test
aam
mov
jbe
fmulp
outsb
sbb
stc
hlt
xchg
or
repz
leave
les
fisubrl
inc
insb
ds
jns
aam
mov
push
pop
sbb
add
mov
mov
testl
dec
iret
or
lods
lcall
divl
cli
jecxz
xorl
cli
lret
jmp
mov
mov
ss
add
test
mov
mov
pop
adc
nop
cmc
pop
push
into
mov
adc
cmp
push
add
or
jmp
and
insb
idivb
shlb
mov
add
stos
adc
cmp
aad
mov
mov
popf
pop
hlt
jmp
daa
clc
les
ret
pop
aas
cmpsb
int
pop
jnp
out
es
cmovle
andb
mov
xor
add
or
lret
fs
push
adc
inc
jne
pusha
cs
mov
dec
mov
stc
insb
mov
adc
jle
int3
inc
aad
je
jae
loop
xchg
movsb
or
aad
mov
lret
movsb
pop
push
add
jb
jl
mov
jbe
pop
sbb
and
decb
push
sub
add
sub
xchg
popa
test
push
inc
nop
es
pop
lret
leave
cmp
pop
cmp
nop
dec
rorb
jb
out
gs
movsb
sti
mov
jmp
or
add
outsb
pushf
mov
or
xlat
inc
add
and
jnp
cwtl
pop
sub
imul
rcr
xchg
pop
addl
mov
mov
lret
pop
sub
mov
cmp
cmp
adc
mov
mov
pop
mov
sbb
fimuls
incl
jns
aas
mov
sar
mov
aad
cmpsl
jmp
les
push
push
loop
dec
pusha
sbb
aad
rcll
jp
imull
xchg
cmp
test
enter
mov
cmpsb
lods
push
push
adc
test
inc
pop
fiadds
test
mov
test
mov
mov
das
mov
mov
inc
aad
pop
mov
adc
push
or
inc
push
clc
nop
rcr
cwtl
out
data16
sbb
adc
js
pop
dec
mov
lea
dec
or
jo
push
push
mov
insl
into
and
inc
leave
stos
in
loop
push
xchg
mov
pop
or
and
ds
jns
fdivr
je
mov
and
push
adc
jmp
jle
or
imul
fisubs
sub
cmp
xchg
fwait
xchg
sub
mov
in
inc
dec
jp
in
sahf
enter
push
and
pop
jae
insl
lods
or
jne
es
scas
cli
and
ret
repz
mov
cmp
and
pop
test
xchg
in
adc
popf
cmp
ss
mov
mov
mov
fisttpll
mov
enter
lret
incl
mov
jbe
pop
push
push
out
add
inc
adc
std
push
outsl
sarb
xor
sahf
loopne
adc
cmc
sahf
inc
pop
mov
mov
jmp
scas
lds
jmp
or
add
xor
shr
test
jbe
mov
mov
pop
mov
inc
push
cld
mov
mov
lea
cmp
enter
push
sub
ja
popa
add
sub
mov
jl
loope
adc
cmp
add
js
jp
addr16
sub
mov
pusha
fdivrl
movsl
sbb
es
out
push
pop
jne
imull
jae
ret
mov
jmp
mov
mov
add
and
add
cmc
or
xor
or
xor
adc
std
add
pop
scas
and
adc
adc
clc
sub
sar
pop
imul
mov
mov
rolb
pop
movsw
sarb
pop
mov
popa
sti
cmp
push
xchg
fs
mov
sub
sbb
jg
jbe
adc
in
dec
adc
out
pop
stc
adc
jne
stos
dec
call
jp
push
leave
dec
jle
lcall
es
mov
outsl
cmpsb
test
add
mov
aad
cmpsb
mov
and
in
add
repz
pushl
daa
or
dec
sub
das
clc
addr16
enter
xor
les
in
mov
icebp
and
mov
je
lcall
push
mov
sub
cltd
inc
pop
or
daa
cmpsl
jb
xchg
int3
mov
out
fcmovne
adc
cltd
add
push
icebp
outsl
cmc
jg
jbe
das
mov
dec
cmc
les
test
lahf
mov
mov
xor
in
cmp
bound
xchg
adc
jno
insl
pop
stos
mov
out
add
pop
hlt
in
dec
jno
movsl
lods
push
test
xor
jge
iret
push
lahf
test
xor
test
lret
xchg
push
lcall
cmpsb
shrb
xchg
lea
stc
and
dec
and
mov
xor
add
cmp
ja
cmc
int
icebp
jecxz
dec
push
rcrb
xchg
sbb
int
jbe
stos
xor
xchg
inc
inc
das
and
xor
lock
fs
out
lcall
mov
insl
jns
sub
out
jae
sub
int
mov
das
mov
pop
es
mov
add
push
test
or
adc
fwait
mov
jo
das
jecxz
inc
sahf
or
inc
xchg
lret
xor
movsl
push
adc
mov
sti
test
mov
add
mov
mul
jne
inc
or
add
mov
ffree
push
popa
icebp
icebp
pop
test
mov
cli
fadds
sets
aam
or
jnp
sub
push
push
push
pop
repnz
pop
imul
ret
fwait
or
test
inc
pop
pop
cmp
push
std
aas
dec
lea
incb
enter
dec
out
mov
test
movsl
stos
out
and
jnp
jmp
or
fimull
aas
fldl
sar
dec
mov
push
jge
ljmp
mov
or
lret
pushf
mov
cmpsb
pop
pop
gs
outsb
ja
push
add
xchg
repz
lcall
iret
shlb
lods
mov
subl
adc
das
insl
stos
loope,pn
adc
ss
idivb
and
jmp
cmovp
test
and
dec
sbb
jne
lret
or
inc
jg
jbe
std
movsb
mov
adc
je
int
test
out
ret
sub
inc
fmull
mov
shrb
data16
loop
xlat
les
popa
jg
mov
sbb
push
lret
sub
push
std
outsb
cmp
dec
into
sti
int3
add
arpl
push
mov
int3
popf
pop
int
push
daa
pop
ret
dec
mov
cmpsb
push
bound
cmpsb
mov
rcr
out
call
les
adc
push
and
adc
cmpsl
iret
or
testl
xchg
nop
xchg
stc
mov
fidivrs
clc
faddl
cwtl
roll
popf
je
lods
mov
sub
mov
sbbb
sub
rolb
jmp
gs
pop
jge
repnz
jle
mov
cmp
inc
out
jae
test
dec
test
out
insb
push
pop
and
cli
mov
add
nop
clc
and
les
aaa
in
pop
cmp
push
xchg
lret
pop
dec
adcb
flds
movsb
push
lret
and
cltd
mov
pop
ds
arpl
filds
dec
xor
push
xor
adc
test
inc
subb
out
cs
add
in
add
popa
movsl
sar
jp
mov
ret
cmp
add
xor
cmc
mov
mov
jle
jb
pop
cmp
mov
or
mov
xor
jmp
mov
add
adc
push
loopne
lock
inc
fmulp
arpl
popf
mul
aad
mov
test
mov
ds
xchg
cli
imul
imul
icebp
nop
mov
ret
pop
mov
fldcw
mov
push
sub
fcmovnu
aam
popa
dec
aad
pop
cwtl
adc
int3
mov
sti
lcall
mov
push
imul
xlat
movsb
mov
js
xchg
cmp
and
jb
notb
sahf
add
sub
cmpsb
in
lods
test
xchg
nop
es
push
outsb
jecxz
in
hlt
cmp
icebp
push
inc
pop
jg
ja
pop
jp
orb
movsb
int
loope
cmc
cmp
dec
mov
scas
mov
and
xor
adc
int3
enter
push
push
sub
pop
inc
push
adc
push
inc
fildll
add
jnp
fdiv
dec
mov
mov
daa
push
pop
movsb
fcomps
push
rclb
rcr
scas
adc
jmp
in
ss
cmpsl
stc
mov
or
jge
push
lea
fs
xor
faddp
lds
mov
leave
push
jmp
xor
mov
jne
aad
je
cmp
push
lds
xchg
jb
push
cli
dec
test
popa
and
xor
dec
cltd
inc
add
push
loop
dec
sub
sub
and
mov
push
leave
stos
xchg
aam
push
adc
imul
mov
jecxz
imul
call
int3
xchg
pop
xchg
std
inc
cli
lods
sbb
push
dec
and
and
pop
out
insl
push
cmp
outsb
sub
divb
test
mov
data16
sarb
push
cmp
mov
enter
xor
and
loopne
jne
out
mov
mov
and
test
fimuls
int3
test
hlt
pushf
enter
dec
sbb
push
fxch
mov
push
adc
ret
xor
sarl
outsl
mov
mov
adc
dec
loope
rorl
dec
xor
rolb
mov
dec
jae
sahf
jb
push
orl
push
inc
js
xchg
jp
shlb
lods
dec
and
test
std
lea
push
or
lret
cld
fsubrl
leave
das
inc
jnp
dec
push
xchg
and
int3
adc
in
mov
data16
imulb
mov
cmpsb
dec
and
sbb
mov
or
test
adc
loope
sti
hlt
inc
jle
pusha
mov
int
fisttps
stos
fiadds
addb
into
lea
into
movl
mov
jg
mov
daa
cmp
addb
mov
psraw
adc
push
in
gs
in
pop
mov
mov
sub
add
clc
clc
int
mov
hlt
insl
cwtl
scas
aas
insl
rcll
cld
addr16
push
std
mov
pop
sti
mov
rclb
dec
mov
push
outsl
mov
jb
sbb
pushf
add
mov
and
shrl
lds
jns
xchg
outsl
and
inc
add
aas
leave
jge
aad
inc
daa
dec
pop
cmpsb
popf
pop
mov
push
adcl
adc
mov
jp
scas
sahf
jo
xchg
dec
imul
jp
in
out
enter
cmp
inc
rclb
push
andb
sbb
movsl
jae
pop
cmpsl
and
xor
push
nop
xor
add
sahf
or
mov
push
es
test
add
and
lock
and
or
ror
and
popa
sbb
mov
mov
push
sahf
pop
lahf
xor
or
cs
out
push
jg
xor
pop
push
or
mov
and
popa
lods
shll
dec
stos
dec
pop
lods
dec
mov
mov
inc
jecxz
pushf
dec
and
mov
jnp
std
xchg
jmp
in
lcall
popf
insb
cli
adc
dec
cli
jp
imull
rclb
xorb
add
adc
dec
popa
xchg
push
testb
js
inc
scas
imul
cmp
decb
fisubrl
push
stos
jb,pt
cltd
cmc
pop
mov
jle
lret
adc
xchg
and
mov
jno
cmc
addr16
cmp
adc
xchg
push
mov
or
xor
addl
pop
inc
and
cmp
and
repnz
mov
xor
push
inc
stos
xorl
cmp
push
jge
xor
push
xlat
cmp
cmpsl
push
fcmovu
in
add
lea
jg
xchg
hlt
add
mov
mov
xchg
fldl
scas
dec
data16
and
and
in
mov
sbb
pop
add
sti
dec
repz
enter
js
xor
fwait
mov
inc
testl
jmp
sbb
fdivrs
add
es
out
popf
or
inc
loope
mov
inc
scas
iret
dec
inc
add
or
movsl
les
lods
incb
test
and
mov
mov
out
outsl
sbb
shrb
push
push
push
sahf
xchg
lock
dec
xor
ret
push
stos
cmp
mov
insb
lds
lds
add
inc
inc
mov
cmc
mov
imul
je
mov
add
or
stc
or
jae
sub
pop
sbb
ja
fisubs
pop
roll
dec
idivb
push
or
lea
xor
int3
pop
rolb
mov
lods
inc
scas
ja
arpl
xor
xchg
cwtl
loop,pn
fidivrl
xchg
jnp
dec
push
notb
sub
and
pop
mov
pop
jp
cmp
pushf
loop
imulb
mov
loopne
mov
jle
cmpsl
fwait
jecxz
push
enter
sbb
push
pop
sub
popf
inc
cmpsl
jg
mov
sub
and
mov
jmp
inc
hlt
jbe
mov
pop
adc
push
mov
loop
push
mov
fwait
inc
jno
stos
loopne
mov
cmpsb
lods
sub
imul
adc
aaa
pusha
stos
imul
outsl
cli
and
shrl
xlat
lcall
test
test
fdivr
repnz
sbb
jno
adc
shll
lgdtl
rcrb
decl
jl
mov
scas
movsl
mov
popf
pop
lods
jnp
outsl
in
inc
jmp
repz
je
push
sbb
sbb
cld
filds
sub
fildl
enter
shll
dec
test
cld
call
and
stos
stc
out
gs
sti
inc
pop
xlat
shl
cmpsb
xchg
inc
pushf
lods
dec
cwtl
sbb
popf
push
push
xor
notb
fninit
jne
aad
and
cmpsb
ljmp
add
js
pushf
mov
push
mov
imul
js
push
push
push
inc
push
out
je
push
fiaddl
xchg
pop
and
dec
sti
or
cmp
dec
push
fs
setb
clc
mov
add
movsl
int3
sbb
in
push
sbb
inc
test
cli
push
push
cmp
rcr
add
xchg
inc
xchg
dec
rolb
out
push
push
cmp
or
sub
in
jg
xchg
lcall
dec
mov
cmpsl
and
rclb
dec
mov
faddl
lcall
insl
and
out
xchg
and
jge
push
cltd
aad
ficoms
inc
add
loope
xchg
xchg
rcrl
setle
pop
outsb
and
in
cmp
out
hlt
inc
cwtl
in
loop
repnz
add
int
cmp
xchg
jno
or
mov
rclb
push
push
sbb
lds
out
sub
pop
jecxz
jp
jbe
jnp
ss
mov
xchg
push
and
sbb
mov
fildll
pop
scas
daa
pop
cwtl
pop
scas
add
subl
in
lahf
mov
push
jns
popa
ss
inc
mov
js
cltd
imul
iret
rcll
mov
jnp
out
xchg
sbb
movsb
cmpsl
pop
stc
out
push
outsb
cmpsl
inc
leave
arpl
jb
cwtl
stos
pop
xorl
jno
mov
cltd
mov
out
scas
pusha
xchg
push
push
fucompp
fsubs
mov
ss
sub
aas
dec
xchg
jb
xchg
in
add
test
xor
into
jge
or
arpl
push
add
insl
lret
daa
lahf
xchg
sbb
mov
inc
fbstp
mov
repz
or
mov
dec
arpl
rol
dec
xor
das
add
arpl
xor
nop
mov
cld
test
inc
sahf
sbb
bound
or
and
inc
dec
jno
mov
aam
xchg
fcmovnu
sub
lock
stos
lds
dec
das
in
lret
and
adc
int3
test
inc
jno
bound
stos
addr16
cld
dec
sbb
in
ret
add
mov
ror
push
lods
test
icebp
xorl
and
adc
cwtl
insb
cltd
xor
aas
sti
cmp
bound
add
pusha
test
imul
fimull
decl
and
lahf
add
sbb
sar
outsb
ret
and
mov
inc
in
and
mov
pop
mov
mov
mov
pusha
loop
push
bound
pop
jbe
pusha
push
icebp
inc
imul
add
fisttps
add
adc
js
daa
adc
repnz
pop
pop
dec
mov
jp
popf
cmpsl
and
mov
add
push
jb
mov
adc
and
and
pusha
std
into
loop
xor
mov
jo
cmp
lea
iret
cld
das
cmp
scas
xchg
pop
popf
sbb
xor
lahf
and
cmp
stos
int3
sbb
lret
push
push
mov
subl
pop
bound
movsb
and
loop
ss
lret
dec
out
xchg
xchg
mov
test
lret
mov
push
leave
shll
jge
dec
pop
sbb
int3
rolb
jb
cmpsb
lods
mov
adc
pushw
loop
sti
cmpsl
out
dec
daa
cmp
inc
cmp
loop
repz
push
or
xchg
lahf
aad
jb
adc
lock
movsl
cs
in
rcl
loopne
sub
mul
icebp
lret
rolb
inc
dec
adc
add
andb
pop
test
les
push
xor
pop
daa
mov
and
xchg
jle
dec
int3
push
inc
mov
movb
outsb
popf
mov
xlat
call
mov
lods
push
lods
push
imul
sbb
mov
mov
dec
loop
jmp
ret
jo
adc
adc
push
cwtl
lods
inc
xlat
arpl
fiaddl
and
pop
cmp
inc
js
mov
mov
add
add
and
mov
or
pop
daa
push
das
std
push
mov
cmp
pop
xor
sbb
jl
or
sbb
sbb
adc
loopne
pop
jb
fbld
xor
out
lahf
pop
ret
inc
daa
into
enter
les
cs
pushf
cmp
push
sub
mov
xchg
orb
sahf
out
xchg
xchg
subl
je
xor
add
orps
dec
jne
dec
push
sti
mov
xchg
pop
in
repz
xchg
ja
in
push
movsb
xor
out
mov
movsb
push
adc
mov
mov
cmpsb
std
imul
xor
mov
mov
outsb
mov
jnp
ss
push
ja
push
mov
push
ret
push
rcll
and
pop
push
aam
adc
into
mov
mov
pop
inc
adc
clc
mov
fst
das
jecxz
das
and
xor
lods
mov
into
icebp
dec
lods
out
testl
xchg
add
test
adc
add
ja
push
add
pop
test
sahf
add
scas
nop
inc
pusha
mov
popf
inc
push
scas
mov
fiaddl
inc
ds
shlb
testb
pop
daa
or
cmp
repnz
ss
test
push
sub
jmp
mov
shlb
jnp
or
fwait
lahf
loopne
lds
mov
and
movsl
sar
leave
and
cmp
les
test
testl
sahf
shrb
jne
push
push
push
popf
dec
lcall
mov
pop
cmp
loop
jg
call
je
pop
popa
mov
fimull
lds
sbb
mov
test
daa
mov
mov
aad
xchg
fistps
scas
je
lret
sbb
xchg
jp
sub
cmc
or
cmpsl
frstor
and
jle
decl
lret
int
out
idivl
sub
lret
mov
xchg
cmp
mov
xor
push
aam
pop
or
cmp
aaa
nop
pusha
mov
decb
mov
and
mov
fdivp
jo
loop
sbb
inc
pop
lock
cmpsb
mov
cmp
sub
fidivl
rolb
in
jp
inc
xor
add
dec
int3
pop
mov
sub
out
ds
cmpsb
cmp
aam
jl
addl
pop
sub
or
mulb
lret
data16
aaa
outsl
mull
aaa
rol
stos
cmpsl
push
enter
dec
sub
push
test
xor
stc
push
push
jmp
movsb
popa
and
jb
pusha
jb
add
popa
in
scas
cmp
rcl
inc
or
and
adc
les
stos
or
cmp
xchg
inc
xorb
cli
mov
rcrl
inc
stc
pop
popa
or
adc
sti
sbb
push
sub
cmp
sub
testl
cli
add
test
mov
subb
leave
push
sti
cmp
push
xchg
mov
out
nop
push
inc
pusha
pop
into
sub
dec
xchg
into
jbe
and
pop
xchg
add
mov
pop
fstps
bound
notb
or
xchg
xchg
sahf
lods
movsl
mov
scas
push
sbbb
loope
or
pop
test
testb
rcl
mov
push
aad
es
xchg
add
mov
and
or
imul
jo
push
cld
push
into
xchg
and
add
mov
rcrb
or
xchg
pop
lock
in
adc
fnstsw
xrelease
rcr
jg
sbb
xor
nop
mov
lods
inc
mov
lock
clc
arpl
fimull
add
mov
ret
ficoms
cwtl
jp
cmpl
ja
push
es
test
les
movsb
mov
in
std
or
push
cld
dec
xor
leave
sarb
pop
rolb
out
js
roll
cmc
pop
and
jge
mov
adc
shrl
dec
imul
mov
jo
push
test
test
imul
ficomps
sbb
in
dec
jno
inc
push
icebp
in
dec
imul
and
aas
lea
sbb
pusha
pop
shrl
iret
mov
jge
push
mov
fstps
add
xor
push
jne
imul
push
pop
pushf
aam
and
adc
jl
and
xchg
jb
push
push
insl
test
mov
pop
jg
fmull
sub
and
adc
cli
out
jl
xchg
mov
fcoml
xor
insb
test
sbb
sahf
std
pop
shrd
test
inc
mov
fnsave
nop
cmp
ret
mov
fnstsw
mov
in
push
int
pop
adc
xlat
mov
loop
mov
sbb
sub
adc
sarb
mov
out
in
jne
xor
mov
js
dec
daa
cld
inc
in
scas
inc
xor
out
xchg
xchg
push
jnp
cmp
cmp
fldl
in
sete
and
ljmp
stos
in
loopne
pushf
jmp
fidivrl
jae
daa
dec
sub
dec
mov
and
xchg
mov
lcall
loop
mov
shlb
lods
xchg
jno
pop
mov
or
movsl
stc
popa
adc
xor
xchg
fbld
cmp
jl
mov
inc
imulb
rclb
movsb
fwait
rol
into
out
ds
xchg
sbb
fidivs
test
xchg
mov
cmc
fisubrl
and
mov
shlb
int
mov
pusha
and
loope
pop
cmp
icebp
test
popa
pop
jecxz
adc
push
sbb
add
dec
fdivrp
add
inc
mov
aam
cmp
fs
mov
scas
adc
pop
inc
ret
jne
add
pop
xor
mov
fiadds
adc
adc
push
arpl
bound
cmp
notb
push
pop
sub
dec
jmp
fisttps
cmp
push
xchg
rorl
enter
sub
cli
pusha
arpl
push
jmp
sbbl
leave
sub
push
push
mov
adc
jns
es
cmc
vmwrite
jl
fstps
das
pusha
adc
adc
add
aad
push
mov
mov
mov
std
icebp
mov
mov
push
fstpl
loopne
rcr
notb
add
push
xor
mov
and
das
and
xchg
push
insb
cmpsb
in
jle
jne
sub
fs
pop
js
mov
lock
pop
ret
and
ret
push
cmp
scas
xchg
adc
sbbb
jmp
cmpsb
or
sub
mov
aad
mov
std
cmc
stos
xlat
data16
mov
sub
das
mov
cmpsb
loopne
pop
pop
aaa
into
xor
iret
or
ljmp
jmp
cmp
and
insl
fwait
mov
into
gs
jmp
lods
xlat
into
jnp
movsb
inc
pop
adc
loopne
shl
mov
ds
and
rorl
adc
sub
sahf
stc
push
sbb
shll
jmp
xor
jbe
xchg
fcom
mov
mov
fcmovnbe
test
adc
xchg
or
push
sarb
mov
push
sbbl
and
gs
mov
into
nopl
sub
mov
cmp
je
cwtl
rclb
enter
sbb
pop
pop
popa
add
into
adc
sub
adcb
dec
aam
push
andb
pop
mov
sbb
stos
xchg
jg
insb
mov
xor
sub
xor
aas
iret
int
rorl
sbb
in
push
add
and
or
cmpsb
js
ret
push
fdivl
mov
mov
mov
pop
pop
push
push
inc
jne
cmp
inc
jle
mov
movsb
in
xchg
ret
dec
push
psraw
dec
mov
or
cmc
leave
lret
push
pop
mov
fstpl
inc
mov
xchg
add
pop
adc
int
push
lahf
and
xchg
xor
in
push
mov
into
sub
rcll
shlb
sub
out
icebp
mov
aad
mov
or
and
inc
out
push
mov
and
das
jb
inc
inc
push
popa
addr16
daa
pop
dec
and
xchg
jb
xorb
mov
inc
shl
inc
nop
ret
sbb
inc
xchg
xor
andl
insb
cmp
test
add
loope
stc
out
fcomip
adc
out
daa
dec
push
std
sub
dec
stos
iret
rcrb
hlt
test
or
iret
imul
ret
add
aam
jle
clc
data16
mov
dec
sbb
push
adc
lcall
aam
mov
dec
cmp
aas
mov
hlt
fisttpll
lods
xchg
aas
push
lea
jge
jmp
push
pop
push
in
shlb
mov
test
mov
rorl
insb
inc
xchg
mov
xchg
data16
sub
mov
sti
jae
jno
call
jmp
aaa
xchg
xlat
outsb
orb
push
jno
pop
mov
push
pusha
cmp
repz
push
out
cmp
jle
scas
sbb
and
in
adc
gs
pop
scas
mov
mov
pop
shlb
icebp
in
mov
sbbl
mov
cmpsl
aam
fdivrs
je
cmc
mov
pop
mov
xor
scas
ret
sbb
cmpsl
and
sub
mov
and
addl
outsb
into
cmp
push
cmpsb
aad
push
std
adc
shrb
sub
outsl
and
test
cs
adc
pop
shll
mov
add
in
pusha
push
inc
cli
push
ljmp
lods
inc
bound
aam
xchg
xchg
stos
outsl
cmp
and
bound
in
jnp
insl
test
cmpsb
and
lea
rolb
jl
cld
ds
ficoml
inc
outsl
cmpsl
imul
sub
cmpsl
out
shl
or
mov
cmp
xor
inc
cld
cmp
mov
cmp
cmpsl
jno
mov
lret
sub
cmpl
push
mov
int
movsl
fistpl
pusha
mov
push
leave
push
out
scas
iret
xor
mov
jbe
adc
inc
jg
fs
in
ss
mov
and
sbb
imul
xchg
lcall
adc
mov
fisubs
popa
pop
idivb
cmpsl
call
bound
shlb
dec
inc
pop
pusha
insl
rol
rorl
sbb
out
jle
insb
and
je
jp
push
loopne
call
loop
sub
xorb
daa
jne
mov
test
cmc
mov
shr
push
mov
mov
fisubs
adc
ja
xlat
shll
aaa
clc
test
leave
sub
pop
push
rcll
inc
inc
test
outsl
jo
in
pushf
jecxz
out
add
mov
std
cli
daa
sub
dec
push
pushl
arpl
pop
mov
cmpl
sub
mov
push
aas
dec
sbb
fmuls
lea
jne
and
pop
lea
xchg
xchg
lea
sbbl
int
stos
mov
xor
cs
pop
pop
arpl
inc
in
pop
xchg
xor
and
or
dec
aam
mov
xor
xchg
jae
push
add
dec
mov
addl
or
and
and
xchg
lahf
add
ficoms
cmpsl
test
xlat
push
jno
addr16
insl
sbb
push
and
leave
fwait
or
dec
fldcw
adc
incl
mov
inc
cld
cmp
insb
pop
dec
dec
cmp
mov
shl
sub
aad
cwtl
scas
inc
mov
sub
inc
sbbl
jecxz
test
xchg
dec
in
xor
pop
mov
jmp
stc
mov
aam
dec
repnz
jns
or
test
leave
aas
add
jg
jno
mov
jb
adc
mov
push
mov
push
xchg
subl
adc
nop
cmpsb
repz
insb
xor
imul
loope
test
in
loop
call
scas
fwait
push
push
mov
xchg
popf
sub
jl
mov
cli
jl
pop
jb
jns
mov
test
xchg
idiv
es
mov
and
push
js
cmpsb
add
mov
insl
mov
inc
xchg
repnz
xor
repnz
mov
in
fucomip
cs
inc
push
ss
mov
xor
int3
push
xor
movd
leave
rorl
gs
mov
inc
cmp
icebp
mov
shlb
and
lcall
jmp
sar
mov
mov
dec
mov
sbb
leave
push
dec
sbb
jp
jne
arpl
lret
fcoml
sahf
insl
jle
pop
xlat
and
dec
pop
adc
dec
lcall
mov
adcb
mov
insb
fisubl
jge
mov
test
jno
mov
xor
sub
dec
cmp
mov
stc
into
or
xor
orb
push
jns
and
ja
mov
mov
push
orl
jb
mov
push
repz
stc
or
mov
ficoml
add
rclb
aaa
inc
mov
mov
sbb
mov
call
repnz
mov
js
push
add
jmp
sbb
pop
pop
push
lcall
push
mov
dec
pop
push
push
jno
sub
js
mov
jnp
inc
pushf
mov
dec
xor
stos
mov
inc
pushf
cmpsl
insl
dec
mov
fwait
ljmp
enter
pop
push
inc
hlt
mov
xor
sbb
jmp
cli
mov
shlb
push
repnz
daa
mov
push
gs
mul
cmp
mov
xor
inc
pop
add
mov
outsl
test
ljmp
imul
dec
mov
sub
test
pop
pop
and
out
add
into
dec
aas
daa
out
lods
jecxz
mov
add
cmp
jno
mov
xor
mov
mov
mull
inc
xchg
ret
jns
rcrb
push
inc
adc
sbb
mov
and
repz
push
call
lahf
mov
adc
or
sub
inc
adc
aaa
push
pop
jae
aad
xchg
dec
sub
add
cmp
popf
jne
sub
inc
mov
int
ja
inc
iret
xor
inc
cmp
jp
pusha
lock
xchg
insb
loop
loopne
dec
mov
add
mov
sub
xchg
mov
push
call
cmpl
push
xchg
add
pop
lcall
std
mov
out
or
adc
mov
inc
dec
inc
mov
cld
inc
ds
arpl
mov
push
aam
jle
sbb
psubq
mov
fistl
mov
iret
push
lock
es
lods
mov
inc
mov
push
icebp
cmp
and
negb
aad
jl
push
nop
mov
sarl
fildl
clc
and
ret
cli
cmp
enter
bound
outsb
sbb
sbbl
and
aaa
repz
lods
test
xor
mov
inc
fisubs
add
sub
dec
mov
jns
sahf
and
loop
xchg
aaa
mov
xchg
fwait
mov
sub
push
mov
adc
inc
lret
or
adc
jne
add
xchg
pop
mov
jl
mov
push
pop
inc
pop
idivb
xor
lds
jo
push
mov
push
aas
lcall
sahf
int
pushf
test
cmp
cwtl
sub
fldcw
push
call
fs
or
repz
cmpb
cltd
add
pop
pusha
pop
movsb
ds
cmp
pushf
repz
pop
jge
jp
xchg
test
pop
adc
or
es
or
push
fcomps
xor
iret
nop
sub
xchg
movsb
loop
xchg
push
pop
scas
ret
push
cmp
fst
inc
je
sbbl
sub
adc
aaa
loopne
dec
push
fisubs
mov
sub
in
mov
dec
out
pusha
pop
mov
stos
xor
fwait
mov
mov
xor
out
cmpl
cld
fidivl
jo
or
add
pusha
adc
mov
shlb
cmp
std
aad
inc
aaa
popf
inc
jge
dec
or
cmc
movsb
push
mov
pop
inc
imul
pop
faddl
fwait
or
in
out
jo
add
ja
aad
dec
mov
sbb
add
xlat
cmc
arpl
loopne
mov
pop
repnz
cmp
mov
rcr
data16
cmp
xchg
mov
out
jecxz
enter
call
addr16
jle
mov
dec
xor
mov
pop
mov
fcmovbe
hlt
lds
xchg
push
push
xchg
stos
sub
xor
arpl
js
cmpsl
stos
inc
jne
sbb
sbb
xchg
lods
test
mov
nop
jmp
pop
fcomps
cmpsb
les
sbb
pop
outsl
ljmp
dec
xchg
clc
arpl
aaa
bound
int3
mov
insb
stos
mov
push
dec
movsb
mov
loopne
mov
mov
or
pop
xchg
popf
mov
adc
lods
test
dec
insl
mov
mov
xor
add
inc
sbb
push
lcall
add
push
pop
mov
jae
cmp
xchg
ret
push
mov
dec
sub
mov
test
dec
out
xor
and
push
jbe
dec
jl
bound
scas
in
scas
lods
mov
add
stos
repz
xchg
sbb
dec
pop
xchg
and
push
call
cmp
roll
xor
or
mov
mov
push
lock
push
push
mov
add
push
mov
aas
cmp
movsl
in
call
push
mov
mov
sbb
push
loope
fcompl
daa
push
or
addps
rorb
push
inc
arpl
lods
hlt
mov
xchg
and
dec
mov
loope
and
or
push
cwtl
sti
mov
inc
into
and
and
xchg
in
call
rcrb
sub
outsl
adcb
movsl
and
or
test
int3
and
xchg
popa
loopne
es
dec
inc
int
pusha
xorb
xchg
inc
mov
sbb
jle
stos
cmp
mov
pop
xchg
mov
push
std
inc
pop
call
aaa
inc
xchg
shll
pop
jp
mov
add
setp
xchg
push
mov
shlb
adc
sbb
fs
xchg
jne
mov
pop
mov
push
lahf
fcoms
fs
insb
adc
idivl
or
jge
mov
cmp
lds
loope
cld
cmp
lcall
clc
adc
sub
fisubl
shlb
ss
enter
and
cmp
add
push
js
and
mov
or
out
jnp
sub
cmpsl
int
or
push
mov
hlt
mov
xor
cmp
mov
pop
pop
iret
cmp
gs
xchg
xchg
stos
lahf
sub
mov
dec
sbb
out
scas
stc
stos
dec
cs
and
lahf
hlt
xorl
mov
shlb
inc
int3
rcl
fldenv
frstor
dec
sub
or
leave
fmuls
cmp
adc
jmp
sbb
sahf
add
cmpsl
arpl
mov
jnp
fsts
adc
or
sahf
lock
loopne
and
orl
jle
gs
push
cmp
pop
outsl
pop
ss
pop
inc
das
leave
fcmovu
ss
sbb
daa
imul
outsl
jecxz
mov
xchg
shrl
dec
arpl
out
push
add
inc
jae
sbb
pop
mov
pushl
mov
and
out
cltd
or
xor
sub
mov
fildl
shll
lds
pop
sub
inc
sbb
jbe
push
imul
mov
icebp
arpl
mov
int3
pop
loope
mov
js
push
cmpsb
cmp
pop
ja
sbb
and
loopne
and
test
daa
cmp
add
and
lahf
mov
bnd
mov
mov
in
jg
sbbl
jl
cmp
in
cmp
jo
push
dec
out
xchg
or
push
mov
ffreep
sub
mov
mov
push
mov
and
push
xchg
cld
outsb
inc
loope
and
inc
jb
adc
pop
mov
jnp
cmp
sbb
or
jmp
jo
sbb
push
ror
xor
imul
xchg
cli
divb
jge
ljmp
lret
mov
cwtl
fdivl
leave
push
leave
je
daa
jae
in
data16
movsl
pop
sbb
jno
hlt
js
jmp
lock
cmp
out
pop
mov
into
inc
mul
push
mov
adc
push
jae
fildl
pushf
and
mov
push
push
out
iret
mov
push
or
test
inc
rcrb
mov
and
aam
popl
subl
imul
sub
iret
pop
adc
adc
xchg
mov
mov
mov
clc
ds
hlt
dec
cmp
xchg
orl
out
stos
pop
pop
test
pop
scas
pusha
scas
pusha
add
notl
imul
push
sahf
and
popa
test
fldenv
or
add
adc
dec
inc
aas
xor
mov
fadds
dec
inc
iret
or
adc
daa
mov
mov
pop
or
cmpsb
dec
inc
pop
lret
inc
pop
pop
shrl
rorb
shll
in
xchg
popa
cli
ret
out
dec
orl
mov
pop
or
jle
jle
repz
fs
inc
enter
clc
mov
mov
ret
orb
pop
inc
mov
push
dec
cmp
and
adc
inc
ds
cmp
and
fisubs
push
sub
mov
fwait
push
cmc
mov
roll
lcall
or
mov
adc
inc
int3
mov
jo
ficoms
je
jge
aas
push
jmp
imul
sbb
fs
inc
cmpsb
in
mov
mov
ja
cld
mov
and
jae
inc
ja
out
jle
subl
movsb
push
shll
push
inc
shll
arpl
mov
cs
adc
aaa
cmp
mov
mov
ds
push
inc
cmp
loopne
lahf
outsl
scas
popf
xchg
jg
fdivrl
incl
lea
jns
insl
push
aam
or
cmp
andl
mov
cld
inc
les
jne
xor
mov
cmpsl
push
cltd
or
or
mov
or
push
dec
sub
jo
out
sbb
rcll
push
push
fs
inc
adc
pop
or
dec
sub
jmp
fsubl
mov
mov
cmc
lahf
daa
pop
jbe
sub
movsb
lcall
jne
push
out
mov
pop
xchg
insb
test
xor
lods
push
push
cmp
arpl
and
out
frstor
jae
stos
daa
add
int
fsubl
sbb
adc
scas
xor
sbb
push
push
xchg
clc
dec
mov
lahf
push
adc
pushf
xchg
aad
fsubs
sbb
mov
in
daa
lret
repz
das
arpl
jecxz
ds
xor
sbb
add
dec
enter
xor
cwtl
sub
or
es
shll
adcl
lahf
pop
je
out
sahf
in
push
lea
nop
adc
mov
mov
mov
pop
mov
cmp
cmp
lods
sub
adc
push
pop
cmc
cmp
pop
jmp
mov
rorb
sbb
ljmp
lcall
sarl
add
fwait
clc
into
inc
mov
fdivs
xorb
mov
shll
lret
out
add
daa
dec
push
dec
sub
lret
mov
fucompp
xlat
inc
mov
mov
leave
shll
push
mov
add
inc
popa
jne
push
jecxz
in
or
pusha
mov
arpl
je
pop
cltd
popf
add
dec
inc
push
pop
aad
mov
stos
aad
stos
sbb
pop
jb
cmp
stos
loop
xlat
pop
mov
notb
push
adc
lods
lock
jno
mov
cmp
jp
repnz
pop
leave
test
jne
loope
pushf
repnz
lret
pusha
adc
and
lods
lock
scas
rcl
aam
pop
pop
jg
pop
test
or
mov
push
push
ss
pop
outsb
scas
jmp
pop
repnz
lods
cmp
dec
inc
fidivs
repz
icebp
push
push
adc
lea
xchg
adc
xorl
lock
mov
xchg
push
xor
arpl
mov
adc
mov
mov
mov
sbb
cmp
call
or
loopne
ret
pop
push
cli
jmp
jge
jo
xchg
into
jns
cmp
mov
cmpsb
repnz
sahf
mov
movsb
mov
je
adc
fildl
and
mov
ds
es
xchg
sub
daa
cld
js
out
ret
add
and
ror
mov
inc
mov
mov
or
cmc
enter
or
add
dec
inc
fsts
into
repnz
xor
test
mov
add
les
popf
inc
in
arpl
pop
insb
les
and
mov
mov
stc
pop
ret
ja
not
mov
push
and
mov
dec
adc
push
pop
lahf
repz
jmp
fildl
fldenv
fdiv
bound
xor
fiaddl
and
aam
sbb
mov
repnz
mov
jns
pushf
mov
inc
mov
mov
pop
xchg
cmpsb
arpl
ficoms
sbb
rorl
es
jo
sub
mov
xchg
mov
push
pop
in
dec
or
test
lods
lds
insl
dec
rcl
push
sbb
dec
call
in
xchg
clc
pop
data16
add
add
in
push
dec
cwtl
fcompl
pop
jp
cltd
mov
fistl
ret
or
push
sub
int
enter
stc
pusha
sbb
adc
fwait
push
jno
mov
loopne
lods
cmpsb
incl
das
sbb
lahf
arpl
jecxz
cmp
ja
rclb
js
cld
cmp
mulb
sbb
mov
sbb
popf
enter
fidivl
enter
out
mov
mov
sub
jg
inc
into
scas
adc
xrelease
icebp
push
jne
out
xchg
sbbb
popf
mov
outsb
adc
cmpsb
xchg
mov
clc
sub
mov
jns
testb
mov
sbb
add
stos
test
mov
test
xor
mov
arpl
shlb
and
mov
push
mov
sub
inc
mov
inc
es
cs
int3
lock
sub
xchg
mov
adc
xrelease
cld
ljmp
jg
sbb
je
and
mov
addr16
cwtl
add
stos
xchg
push
jecxz
xor
mov
mov
pusha
mov
scas
sbb
imul
mov
fs
dec
mov
pusha
imul
sub
mov
jno
ljmp
arpl
push
add
mov
add
add
xchg
inc
pop
jb
lock
lds
adc
stos
mov
out
cmpsb
iret
pusha
or
sbb
inc
hlt
lea
dec
and
sub
movsb
cmpsb
cmpsb
sbb
xlat
add
insl
xor
repz
ret
dec
fdivp
push
movl
adc
xor
sub
inc
cmp
outsb
mov
mov
pop
scas
mov
fists
sub
pop
push
push
stos
int3
jecxz
push
inc
into
cmp
inc
popf
mov
adcb
movsb
sbb
add
pop
mov
push
jae
loope
sbb
cltd
mov
fcoml
cs
dec
adc
aas
hlt
add
fldt
mov
sbb
pop
ja
jecxz
mov
or
push
bound
sbb
mov
xchg
imul
out
leave
outsb
xchg
call
jge
ret
pop
push
loope
or
stos
int3
fwait
dec
xchg
daa
js
fdivp
mov
jo
dec
pop
fwait
lods
xchg
les
mov
loop
test
iret
or
mov
sbb
add
or
push
out
cmp
push
pop
stos
int
fisttps
mov
imul
cmp
in
or
inc
xchg
xchg
mov
mov
push
popa
rcll
push
inc
shll
push
cmpb
clc
movsb
insl
mov
push
sub
sbb
fcmovb
fsub
bound
sti
int3
add
jl
sbb
mov
mov
sti
sub
sub
push
sbb
es
out
xchg
pushf
jae
push
lods
push
sub
jp
mov
outsb
fcmovbe
repnz
mov
in
sbb
mov
or
lods
fcmove
push
cmpsb
mov
mov
adc
xor
adc
fmull
mov
fptan
packuswb
outsb
fcoms
movsl
fimuls
or
mov
jecxz
adc
jns
int3
xor
loop
scas
sahf
in
xor
mov
lcall
xchg
inc
data16
pushf
outsb
das
mov
shlb
mov
or
fadd
addr16
xchg
das
ret
popl
out
scas
inc
or
push
mov
sub
push
pop
adc
jns
pop
and
mov
in
sbb
xchg
jmp
shl
int
push
and
mov
sub
push
pop
fildll
xchg
lret
les
and
roll
fldt
push
pusha
jb
imul
out
sbb
outsb
repz
push
fwait
dec
rcr
lcall
dec
scas
push
xor
cs
aaa
adc
cmp
sbb
in
pusha
dec
or
push
mov
lret
push
aas
sti
or
jb
int
mov
outsl
xchg
sbb
bound
fdivrl
out
mov
sbb
insb
push
cltd
mov
in
and
pop
push
lds
movsl
shll
gs
xchg
loop
mov
pop
enter
pop
test
mov
insl
leave
cmc
dec
push
sbb
push
dec
push
pop
jnp
push
cmc
out
fisttps
or
ret
sahf
and
sub
imul
cwtl
sahf
ja
mov
mov
bnd
popf
loope
inc
jne
add
and
xchg
pop
push
insb
add
mov
mov
ret
push
daa
fiaddl
sub
push
xlat
out
mov
push
leave
ret
cmpsl
sub
pop
adc
mov
sub
outsb
iret
out
and
loopne
xlat
into
or
fdivrs
out
repnz
enter
mov
aad
movsb
imul
cmp
mov
push
clc
arpl
lods
aas
pop
popf
or
mov
test
push
lock
hlt
gs
inc
xchg
hlt
sub
ret
jne
outsl
or
dec
std
or
dec
mov
into
roll
xchg
xchg
xchg
cltd
mov
nop
lods
int
push
test
cld
popa
add
hlt
sti
lret
movsl
out
dec
les
ror
adc
cwtl
dec
sub
sub
mov
adc
cmpsl
shl
push
mov
sub
ja
cmp
decl
lock
int3
aad
mov
in
push
xchg
pop
cltd
popa
mov
addr16
sub
lret
in
sbb
inc
pop
add
push
arpl
cmp
adc
sti
adc
add
cmc
cmp
imul
and
lret
fdivl
jg
test
jp
xorb
pop
xor
lds
pushf
xchg
es
movsb
jl
dec
cmp
fnstenv
push
mov
enter
mov
adc
data16
cwtl
hlt
test
sub
lock
testb
xchg
out
mov
ss
mov
testb
lock
in
cwtl
or
jae
sub
push
add
pushf
lock
lds
jno
jecxz
jmp
imul
mov
xchg
cmp
sbb
xchg
nop
jnp
dec
daa
gs
bnd
jecxz
popl
ja
sub
arpl
cli
out
aaa
and
hlt
cmp
sub
imul
ja
hlt
call
and
jmp
xchg
push
movsb
mov
movsb
jae
mov
push
jmp
lret
adc
adc
gs
out
jbe
in
out
jg
cmp
sbb
xor
pop
sahf
jne
sti
ds
outsb
pushf
xchg
dec
push
jno
sub
xchg
mov
lahf
cmp
cmp
or
dec
jl
cmpsb
sahf
push
mov
rcr
pop
jnp
add
adc
sbb
mov
loop
xchg
inc
push
lock
add
ja
scas
ror
std
lea
ret
pop
pop
loop
sub
fdivrl
jns
inc
daa
aad
fwait
data16
inc
push
mov
cmp
mov
dec
nop
stos
adc
cmc
jnp
out
dec
pop
adc
add
rcrb
mov
dec
call
stos
mov
push
out
jmp
test
and
xor
adc
xor
inc
std
jl
loop
push
pushf
mov
addr16
movsl
popf
mov
pop
adc
int
leave
xchg
scas
idivl
and
or
or
cld
div
int3
sbbb
pushf
dec
mov
inc
call
ret
pop
jecxz
movhlps
arpl
xchg
imul
iret
pop
cli
jge
ja
and
jle
cli
scas
shll
inc
clc
rorb
push
xor
pop
adc
adc
mov
outsl
or
in
xchg
ljmp
push
vmaxss
scas
jecxz
mov
mov
cmp
jp
clc
enter
and
stos
jo
test
and
stos
dec
test
sub
pop
cmpsl
jnp
cmc
xchg
fwait
out
fsub
cmp
mov
dec
xchg
xchg
xchg
cwtl
sub
sahf
pop
jecxz
pop
sti
scas
xor
dec
lods
cmp
das
xchg
mov
sbb
and
ja
xor
inc
add
xor
rclb
bound
arpl
xlat
sti
fistl
cwtl
add
mov
sub
xor
je
cmp
inc
sahf
gs
std
icebp
sbb
xor
xchg
add
int3
fstpl
jge
stos
and
xchg
mov
inc
pushf
sbb
sbb
testl
lods
or
sbb
in
iret
in
dec
icebp
or
cmp
fwait
add
jae
and
xchg
push
mov
les
test
xor
cs
add
or
pop
xlat
adc
iret
cmpsb
lock
jae
mov
cli
in
and
adc
fs
into
pcmpgtd
jno
lret
ds
mov
mov
sub
xor
inc
cmpsl
je
add
xchg
pop
pop
and
fwait
and
lods
or
mov
or
mov
xchg
gs
cmp
xor
fwait
inc
sarl
ud2
ljmp
adc
cli
mov
outsb
and
insb
jae
mov
xchg
dec
mov
and
mov
sbb
inc
push
add
dec
mov
dec
into
mov
and
push
jne
cmp
mov
pop
in
xchg
cltd
adc
cmpl
lcall
and
adc
ret
sbb
mov
dec
mov
cmp
fcomp
aad
jb
sub
shrb
enter
mov
or
push
mov
adc
mov
cmc
xor
push
push
push
insb
je
inc
aad
imulb
aad
es
stos
cmpsb
push
fbstp
mov
xor
jbe
mov
dec
aam
jae
call
dec
aam
cmp
cmp
pushl
xchg
lds
jge
inc
pop
inc
sub
sub
xchg
or
add
mov
cs
and
and
pop
lds
aad
jmp
push
sarl
into
mov
icebp
scas
stos
ret
loop
lret
dec
cmp
adc
stos
jo
mov
rolb
stc
sub
rolb
mov
test
push
loope
xor
shll
insb
pop
je
addl
pop
pop
inc
dec
out
pop
push
cmpsb
dec
daa
inc
cmp
cmpsb
mov
xor
sub
shll
lret
sub
and
pop
jne
mov
pop
sbb
dec
popf
dec
js
and
jne
test
fistpl
jb
push
insb
add
pop
jl
sbb
adc
jl
mov
sarl
and
ljmp
nop
aas
insl
and
pop
flds
pop
lcall
push
jmp
xor
rcl
cld
sbb
or
xor
je
aam
dec
clc
add
mov
xlat
or
pop
ss
lret
cmp
test
push
test
fstpl
dec
call
pop
sub
mov
dec
pop
es
fucom
dec
ja
push
aaa
and
loop
adc
jne
ja
movsl
data16
mov
cmp
xchg
aad
xchg
mov
xor
sbb
int3
dec
shll
mov
ss
enter
or
push
mov
fldl2t
cmp
fnstcw
lods
cmp
stc
jo
repnz
ficoml
mov
cmc
fsubrl
mov
idivl
and
mov
adc
mov
cmp
mov
seto
test
push
sub
arpl
sub
xor
insl
adc
sbbl
fildl
push
and
repz
sbb
cli
sbb
or
jnp
int
adcb
jnp
dec
fisubrs
xor
xchg
inc
inc
mov
sbb
pop
sbb
mov
xor
sbbb
xchg
add
sbb
sub
xor
pop
mov
js
cmp
inc
sarl
mov
out
pop
xchg
cmp
add
aaa
notb
aam
orl
sarb
and
shll
add
int3
push
and
je
addr16
leave
adc
jbe
fstl
int
shlb
and
cmp
aam
lcall
sbb
repz
xchg
push
xor
enter
aas
adc
push
dec
pop
jecxz
jnp
fadds
fs
aad
sbb
jb
outsl
sub
push
mov
mov
add
enter
add
stc
push
std
push
cld
in
push
mov
add
jne
rcr
xor
or
loopne
inc
out
or
mov
jne
insl
jp
pop
jae
andl
jnp
scas
lcall
cmpsb
sub
pop
sub
xorl
js
mov
push
dec
inc
adc
imul
xchg
cmpsl
int
and
cmpsl
and
mov
jle
mov
push
loope
push
push
jg
pop
stos
push
call
in
cs
mov
lods
bound
cmp
xchg
jo
ret
test
lock
dec
stc
enter
call
test
or
or
add
and
cmpsl
jae
and
mov
stc
xchg
push
mov
idivl
cmp
lds
jmp
aas
outsl
jne
xor
sbb
ror
ljmp
push
ret
sbb
or
mov
push
mov
sti
outsb
add
loope
xor
mov
xchg
mov
or
push
xchg
nop
scas
mov
adc
jecxz
movsl
dec
jb
test
lea
lea
dec
pop
rorl
lock
cmpsb
pop
jae
pop
xchg
xchg
mov
ss
dec
dec
rolb
enter
loop
cld
lds
jmp
ljmp
mov
test
add
mov
outsb
data16
cwtl
movsl
xor
cmp
xor
cs
loop
pop
loop
mov
jl
cs
xor
mov
movsb
xchg
cmpsl
mov
hlt
mov
xor
rdmsr
ja
adc
outsb
dec
mov
ret
adc
push
es
loope
lea
int3
ret
and
imul
rep
mov
mov
clc
mov
rorl
js
pop
sub
or
arpl
pop
pop
jae
jb
aas
int3
xchg
out
cmc
test
das
dec
mov
add
push
gs
xlat
xlat
clc
or
cmpsl
shl
jge
fstpl
push
mov
xor
sub
inc
pushf
outsl
mov
hlt
insl
mov
mov
push
clc
ss
shrl
outsb
jb
pop
pop
pop
insl
xchg
sbb
mov
ds
jo
push
sub
and
dec
xchg
jb
ja
inc
mov
shlb
jmp
ds
inc
stos
incl
adc
imul
and
mov
bnd
push
movsl
xchg
mov
movsb
mov
xor
and
stos
pop
fsubr
xchg
mov
into
xchg
ret
push
jle
mov
mov
mov
cmc
mov
pop
pop
movsb
adc
cmp
fldt
push
inc
add
cltd
xchg
or
jno
mov
out
mov
popa
fcoml
cmp
push
fst
inc
shrb
mov
mov
jle
sub
mov
mov
fs
adc
addr16
or
ja
repz
xlat
sbb
lods
cld
adc
loopne
jae
jae
je
arpl
sbb
stos
dec
sub
cmpsb
clc
outsb
inc
inc
mov
adc
out
int
add
dec
and
dec
and
cmpsb
je,pt
jmp
sub
add
repz
adc
repnz
loop
xor
jb
or
cmp
adc
pop
pop
dec
test
sub
rorl
shlb
sub
mov
pop
cmp
xchg
in
aam
mov
add
les
xlat
mov
or
mov
fcmovu
sub
mov
jae
or
jno
gs
icebp
push
and
pop
mov
and
ficompl
outsb
mov
sub
ja
mov
cwtl
cmp
clc
inc
clc
fstps
adc
repz
iret
js
xchg
adcb
add
xlat
test
lcall
cmpsb
popa
push
and
rcrb
xchg
test
jo
mov
fsub
cmpsl
idivl
pop
in
and
mov
jno
shl
and
mov
mov
negb
loopne
xchg
mov
mull
jne
sub
lret
shrl
cwtl
add
xchg
incl
push
ret
mov
gs
jle
and
mov
int3
in
iret
hlt
ret
mov
mov
je
cmpsb
lahf
lds
jno
daa
jo
aas
stos
sub
repnz
add
pop
outsb
out
inc
cwtl
fnstcw
mov
stos
pop
jecxz
adc
fcoml
pusha
ljmp
mov
xchg
in
cmpsb
in
fcmove
adc
in
ljmp
icebp
std
outsl
push
cs
jg
mov
mov
and
mov
jmp
insl
test
out
xor
dec
ret
fsubp
es
push
xchg
std
xchg
push
repz
mov
jmp
nop
sbb
ljmp
cmp
or
in
shl
inc
xor
js
mov
outsb
sub
dec
xorl
xchg
push
std
push
shl
daa
mov
and
rol
bound
data16
mov
sub
pushf
shll
xor
jbe
push
lods
inc
sbb
sub
ja
in
pop
arpl
jbe
mov
nop
sub
dec
into
ss
mov
add
out
loopne
jo
ss
mov
leave
ljmp
add
ret
test
xor
xor
or
mov
cmpsb
subl
and
adc
add
xchg
push
xchg
sbb
pop
mov
adc
loope
lds
sub
in
in
or
bound
into
stc
loop
jo
pushf
sbb
lods
outsb
idiv
aad
inc
jp
xchg
test
or
mov
add
sbb
ret
dec
xor
add
dec
and
outsl
xchg
mov
push
hlt
xor
je
push
mov
out
call
lret
jno
inc
cld
mov
cmp
pop
jecxz
popf
push
int
mov
jp
outsb
mov
mov
rcl
cltd
scas
es
pop
add
xchg
mov
std
add
sbb
sbb
sub
and
orb
xchg
jge
push
out
inc
xchg
mov
inc
sbb
adc
push
movsl
inc
jle
add
movsl
mov
loopne
push
aas
icebp
ja
outsl
lods
es
jl
jecxz
dec
mov
rorl
fstpt
iret
and
call
jnp
jno
sub
loope
mov
adc
imul
fistl
fisubrl
jle
lock
rorb
add
xor
icebp
mov
xlat
clc
jmp
and
gs
fcmovu
mov
sbb
pop
lret
jl
adc
pop
xor
sbb
ds
push
add
mov
addl
imul
mov
arpl
leave
jno
imul
clc
faddl
sub
jmp
dec
adc
aas
call
jp
sbb
inc
sbb
mov
or
cmp
fsts
fmul
and
lods
insb
mov
int3
xchg
and
dec
pop
mov
vsubsd
add
cmpsb
xor
lcall
fbstp
aaa
mov
test
sbbb
adc
mov
movsl
xor
mov
push
aas
mov
frstor
into
sub
pop
lea
and
dec
push
add
push
shll
mov
rorb
pop
nop
adc
xchg
roll
inc
les
xchg
xchg
icebp
mov
ss
stc
xor
pop
mov
fildll
lods
sub
push
mov
ja
out
cltd
cmp
pop
mov
push
pop
popa
jo
dec
sbb
dec
push
adcb
stos
inc
lret
es
loope
sub
or
mov
addr16
imull
ret
xchg
inc
pop
and
cmpl
dec
mov
push
adc
xchg
inc
or
ret
adc
imul
add
imul
stos
xor
mov
pop
cmp
jmp
xor
xchg
mov
imul
xorb
lret
rcrb
pop
test
xchg
jge
pop
pushf
xchg
jns
mov
mov
popf
popf
in
sub
and
jbe
xchg
or
in
inc
inc
scas
fcomi
sub
orl
lret
xchg
fistpll
cmp
xchg
sbb
xchg
lahf
rcrb
lcall
adc
xor
cmp
shl
pop
sub
mov
cli
add
std
shr
sub
movsl
movsl
cmp
push
pop
shl
aad
mov
mull
add
outsb
int
arpl
or
dec
xchg
sahf
sbb
das
bound
in
push
mov
fs
lds
xlat
inc
adc
clc
and
mov
sub
mov
fistl
sbb
sub
jmp
or
int
out
sbb
stos
mov
loope
add
pop
push
aas
das
xchg
xor
loop
cmp
jo
pushf
cmc
push
mov
pop
rclb
pop
call
pop
add
push
xchg
pop
pop
pop
call
jne
or
ret
xor
enter
adc
loope
jle
das
adc
lea
jecxz
mov
dec
dec
std
pop
dec
pop
into
cs
push
xor
sub
mov
imul
aad
cmp
test
push
adc
mov
loop
inc
mov
adc
xchg
push
adc
ljmp
push
pusha
sahf
out
sti
insb
push
enter
xor
jecxz
jno
enter
fdiv
sahf
pop
inc
cmpsl
inc
int3
or
movsb
adc
sub
xlat
clc
fstl
dec
lock
jl
mov
ret
scas
xor
loope
mov
fcoms
cmc
loopne
xor
dec
cmp
cmpb
dec
pusha
pop
mov
outsl
sarl
or
mov
inc
mov
jns
push
fsubs
dec
sub
jp
mov
outsb
push
shl
xor
cltd
push
pusha
cwtl
cli
std
es
out
enter
int3
jbe
shrw
sub
add
push
push
mov
in
ja
and
daa
jle
fisubl
or
sti
add
leave
jo
sub
enter
jno
pushf
xchg
aaa
cmc
xchg
pushl
fmulp
mov
out
xchg
hlt
data16
cmpsl
shrb
lret
aas
or
js
lcall
idivl
int3
push
adc
and
mov
add
adc
out
and
push
sub
xchg
add
movsb
inc
faddl
rclb
sub
add
sahf
pop
jae
pop
cwtl
into
mov
push
cmp
stc
sub
sub
adc
lcall
inc
stos
mov
insb
ss
inc
adc
xlat
daa
aas
cmp
lahf
loopne
stos
les
imul
sub
pop
cmp
loope
stos
das
adc
popa
aas
mov
inc
dec
cmp
daa
loop
adc
dec
lea
cmp
xchg
pop
xchg
mov
cmpsl
jge
jns
ljmp
dec
pop
loop
insl
cld
xlat
xchg
jle
cld
f2xm1
and
sti
std
call
sbb
stos
mov
mov
pop
ret
xchg
imul
xor
mov
lock
adc
daa
ficoms
or
int3
popa
leave
mov
sub
pop
negl
leave
scas
lods
mull
movsb
arpl
mov
dec
stc
addl
js
mov
std
shll
repnz
lea
add
cwtl
popa
mov
inc
xchg
scas
mov
jecxz
jb
clc
add
and
in
rolb
sahf
mov
mov
movsb
mov
or
xchg
or
ret
mov
cmpsl
lea
adc
and
bound
stos
jecxz
cld
push
or
pop
or
sbb
icebp
add
mov
jle
fldenv
test
dec
or
pop
xor
push
mov
out
pop
inc
sub
bnd
dec
xor
int3
cs
les
mov
inc
xchg
inc
lods
mov
ficomps
sub
outsl
mov
xor
pop
xchg
lahf
cmp
sbb
jae
xchg
pusha
jne
adc
aas
outsl
mov
in
bnd
leave
jne
rol
sub
dec
fs
sti
ficomps
lcall
cmp
and
sbb
mov
jae
mov
push
in
pop
push
mov
cmp
bound
cmpsb
out
outsl
xor
inc
push
sbb
pushf
inc
xor
leave
pop
jae
jle
stos
cmp
hlt
cmp
scas
jno
or
int3
dec
mov
shl
sbb
ljmp
mov
cmp
inc
xchg
aaa
lock
sti
pop
testb
sbb
xor
xchg
mov
dec
add
and
mov
pop
loope
xor
mov
call
shl
fcom
std
adc
mov
pusha
movsl
outsl
cltd
stos
gs
mov
cmpsb
jge
push
push
jmp
or
xchg
ja
lods
mov
sub
imul
mov
mov
les
popa
mov
fadds
jae
inc
xor
je
inc
sub
xchg
lock
cmp
mov
jecxz
sub
shrl
push
js
cli
sub
out
insb
pushf
xchg
call
and
xchg
es
mov
jge
fildl
into
test
cwtl
stos
lahf
mov
loopne
inc
ret
push
jb
in
adc
orb
and
xor
in
jbe
push
lds
and
cmp
mov
pop
mov
lods
sub
call
ss
mov
shrb
popa
imulb
add
imulb
js
addr16
push
jbe
lahf
cmp
insl
js
mov
mov
jmp
xor
mov
movsl
mov
cwtl
pop
push
insb
add
or
fnstenv
aam
sub
clc
lcall
add
data16
mov
shrl
adcl
popf
lds
inc
in
rcrb
xchg
dec
or
xor
pop
in
push
mov
arpl
xor
add
scas
inc
xchg
arpl
sbb
xchg
shr
cmp
mov
or
aad
and
cmp
std
pusha
and
cmpsb
push
in
add
sbb
pushf
int
aas
push
inc
dec
jbe
xchg
ficomps
fsubs
jae
rorl
mov
pop
xchg
jne
dec
xchg
mov
sub
stos
lods
xor
test
cmp
sbb
mov
push
cmpsb
push
aad
jg
dec
aam
mov
testb
sbb
push
push
xchg
mov
push
cltd
xchg
cs
sub
arpl
sbb
daa
out
aaa
dec
xor
xorb
fiadds
in
out
test
fsubrp
mov
js
fldt
mov
push
mov
push
in
fucomip
inc
gs
sub
test
mov
insl
rcrb
sub
lods
mov
jns
ret
or
roll
pusha
movsb
lock
arpl
cmp
out
popa
add
addr16
scas
inc
adc
icebp
loopne
adc
test
scas
xchg
aad
mov
out
sub
xchg
sarl
jne
mov
ror
sahf
dec
push
sub
daa
repnz
push
and
rorb
cwtl
mov
xchg
mov
frstor
js
push
mov
mov
xor
inc
pusha
aam
pop
dec
out
xchg
xchg
mov
dec
repnz
jbe
aad
in
xchg
mov
rcrl
jg
ds
into
pop
repz
pop
jmp
clc
clc
push
ljmp
mov
addr16
mov
iret
popl
sub
aas
sub
cmp
push
xchg
dec
adc
cwtl
test
inc
cwtl
je
add
loop
and
mov
and
push
adc
xor
arpl
stos
mov
jne
dec
decb
and
push
mov
pop
pusha
ljmp
dec
repz
mov
shlb
out
and
cmp
or
stos
mov
adc
stc
ds
inc
lock
sub
adc
hlt
je
mov
sbb
dec
xchg
les
xchg
fmul
imul
jo
test
pop
cmpsl
push
cli
mov
adc
adc
data16
test
mov
mov
imul
sub
stos
add
sbb
aad
jp
mov
push
mov
mov
mov
mov
xchg
pop
mov
dec
or
mov
hlt
inc
loopne
in
push
test
push
mov
insb
movsb
imul
xchg
push
and
gs
clc
adc
cmp
roll
mov
cmc
add
stc
loope
xchg
shrl
imull
int
addr16
jno
das
decb
or
mov
jmp
push
popa
ljmp
mov
adc
xchg
xchg
inc
ret
nop
dec
and
xchg
outsl
scas
mov
insl
outsl
dec
mov
add
ljmp
daa
push
ljmp
pop
push
in
ja
movsl
adc
mov
jne
mov
in
xlat
daa
scas
divb
icebp
fcoml
addr16
call
xor
scas
in
sub
cmp
test
stos
or
imul
add
ss
sbb
push
fcoml
fimuls
jl
lcall
out
jle
cmp
popf
adc
movsl
adc
int3
add
lret
xor
push
aaa
test
and
icebp
clc
push
sbbb
int3
daa
fnstcw
fsubrl
pop
mov
push
jge
imul
aam
mov
shl
mov
jne
loop
jnp
rcrb
lods
xor
sti
rcrl
push
sbb
xor
mov
add
nop
cmp
out
add
xor
and
lea
sahf
cltd
mov
dec
mov
add
outsb
cmp
mov
adc
dec
xchg
jae
xor
call
mov
cmp
jbe
jmp
xchg
nop
shl
pop
imul
cmp
xor
das
lret
lock
push
or
les
dec
mov
data16
jl
repnz
loope
inc
add
sbb
adc
inc
repnz
maskmovq
jb
dec
clc
xor
adc
sti
adc
or
sub
cmp
mov
ja
and
divl
popa
loope
xor
sti
xorb
xchg
pop
sub
sub
and
dec
insb
pushf
pusha
subl
mov
call
push
mov
ljmp
add
sub
sub
jae
popa
mov
add
or
mov
xchg
divl
iret
push
mov
jmp
gs
xchg
push
into
xchg
xor
fsubrl
test
mov
jl
adc
adc
add
jnp
mov
adcl
jg
sub
loope
ret
frstor
rolb
jnp
adc
push
xorb
xor
fsubrs
rcr
nop
dec
jg
jnp
test
cld
xlat
mov
jnp
fcmovbe
aaa
imul
xchg
xor
sub
fwait
icebp
add
jno
xchg
push
mov
push
imul
pop
mov
sarl
mov
add
xorl
sbb
push
adc
outsb
loop
mov
lods
nop
loopne
xchg
inc
test
inc
dec
jle
sub
inc
pop
sbb
dec
sub
popf
data16
xor
sub
loope
insb
xchg
mov
lret
jl
and
mov
push
test
xlat
imul
dec
mov
xlat
outsb
sbb
stos
sub
lods
cld
pop
adc
aaa
hlt
jg
dec
or
xchg
push
push
ds
sub
das
jno
jp
ret
imull
push
fwait
jnp
cli
inc
xor
dec
push
pop
add
xchg
mov
outsb
jno
mov
push
mov
cmp
xor
stos
ficoml
or
xchg
cmc
test
add
jge
push
test
sub
xchg
push
je
add
cmpsb
xchg
insl
sbb
in
nop
or
insl
fdivrp
fadds
mov
cmp
mov
loop
mov
sub
mov
jmp
lret
in
sbb
add
pop
cmpsb
pop
sti
ret
jns
out
adc
mov
adc
xor
jno
cltd
push
sarl
lods
jmp
aam
or
in
in
ficomps
ret
mov
in
mov
push
daa
repnz
pop
mov
lods
and
test
mov
outsl
mov
les
fsubrs
jecxz
stos
jg
mov
imul
push
ret
sarb
pop
fsubrl
cwtl
pop
inc
add
test
clc
jnp
mov
pusha
sbb
jle
mov
xchg
cmp
xlat
lods
int
rcr
jnp
std
jae
cmc
inc
mov
and
sbb
inc
fildll
xor
insb
jmp
pop
inc
iret
push
push
push
xor
int
and
loop
mov
jbe
scas
pop
ss
xchg
shlb
mov
mov
push
fsubrl
push
mov
fsubs
sbb
mov
fidivs
lret
popa
mov
js
inc
movsl
xor
or
cli
inc
mov
xor
inc
rcrb
sbb
das
out
test
or
ds
insl
push
lret
mov
sahf
inc
shrl
jae
aaa
es
sub
addl
sbb
dec
inc
cmp
aad
jnp
repnz
lock
adc
push
mov
and
out
jbe
rcll
jae
mov
adc
pop
shll
adc
dec
in
dec
ret
adc
sbbl
jl
icebp
insl
or
outsb
lahf
shrb
mov
ja
lret
loopne
jnp
pop
js
inc
inc
clc
and
inc
adc
int3
popf
or
sbb
and
cmp
aam
sub
cmp
pusha
push
dec
pop
arpl
and
xchg
jo
push
mov
int
imull
ja
lods
cmp
rolb
pop
dec
in
scas
lret
ljmp
fmul
pusha
jae
imull
dec
pop
sbb
cmpsl
push
cmp
mov
mov
push
push
jmp
xorl
sar
bound
sahf
int
and
mov
popf
jbe
in
fucom
pusha
cmp
cmp
movsl
adcb
addr16
repnz
and
adc
cmp
in
shl
xchg
lods
aam
fimull
fstpt
stc
stos
or
mov
inc
stos
dec
mov
imul
leave
icebp
or
add
inc
inc
adc
into
xchg
xor
in
mov
test
arpl
aam
jmp
xchg
mov
mov
adc
in
loope
mov
pop
adc
mov
xor
sub
test
aam
jecxz
ljmp
stc
stos
das
xor
jg
out
fldcw
sub
ds
in
movsl
jp
insb
jnp
movb
push
jp
cmp
or
call
sub
movsl
or
stos
cmpsl
sbb
sub
daa
pop
sbbl
cs
dec
dec
jg
adc
mov
add
jns
cmp
cmp
subb
insl
movsb
add
mov
mov
or
pop
scas
es
push
pop
leave
repnz
xchg
popa
cwtl
xchg
icebp
scas
loopne
cmp
or
add
loopne
test
jmp
xchg
jmp
push
or
and
sti
adc
jne
rol
pop
rcr
mov
out
pop
adc
fldcw
inc
pop
stc
or
inc
clc
fs
icebp
jb
push
mov
mov
cli
push
scas
outsb
or
push
jmp
stc
pop
inc
dec
popf
adc
and
fisttps
loop
add
sbb
movsl
test
add
ret
inc
mov
pop
or
mov
mov
lds
or
sub
cmp
lahf
stos
jmp
mov
negl
jbe
sbb
add
sbb
dec
movsl
sarl
xchg
or
int
inc
clc
lret
or
enter
jp
hlt
in
jbe
incb
mov
fldt
rep
push
sahf
mov
jmp
dec
lcall
lods
les
cld
mov
and
popl
xchg
sub
mov
add
pop
pop
arpl
dec
pop
dec
jbe
mov
adc
jnp
mov
jg
sbb
shr
jge
pop
sub
mov
mov
xor
dec
pop
mov
addr16
mov
pop
xchg
mov
loop
or
popa
mov
adc
jecxz
sub
vpunpckldq
test
push
push
lods
pop
jecxz
xchg
inc
aad
and
xorb
dec
pusha
aad
or
inc
sub
sti
ds
ficomps
test
lea
lcall
iret
add
test
outsb
scas
insb
mov
mov
pop
sbb
movsl
lods
stc
out
jbe
mov
mov
cwtl
pop
mov
mov
repnz
imul
pop
repz
adc
push
imul
aad
das
ret
sub
adc
outsb
incb
int
fwait
or
loopne
lret
sti
cltd
subl
out
loope
js
inc
pop
push
stos
mov
cmpsl
test
in
dec
sbb
sbb
ret
push
lret
test
jns
movsb
ljmp
jb
sub
adc
jo
xlat
pop
leave
add
and
lret
dec
movl
lahf
mov
cmc
cmp
rep
fucomip
enter
sub
adc
ds
mov
mov
in
mov
xor
gs
int3
pop
call
push
repnz
lods
adc
sbb
cmpsl
movsl
cld
std
clc
jle
cmp
pop
jle
cmp
pop
sbb
in
les
sub
push
push
cmpsb
mov
and
popa
mov
pop
jnp
dec
or
push
mov
xchg
popf
jle
pop
mov
es
lock
mov
xor
mov
in
enter
inc
jns
rcr
lds
and
pop
jmp
xor
sbb
sub
sub
xor
int3
and
bound
mov
inc
push
xor
pop
adc
aam
iret
shr
leave
in
stos
xchg
xor
rcr
and
scas
and
jle
stc
cmp
mov
movsl
xchg
out
mov
cmp
fprem
fsubrl
es
inc
clc
mov
ret
pop
inc
in
add
scas
xchg
mov
lods
ret
sub
es
inc
loope
ror
in
mov
in
add
xlat
jl
out
cmp
fstpl
pop
xor
push
jp
mov
mov
inc
xor
test
xchg
in
cmp
sbb
inc
shrl
xchg
test
adc
hlt
lcall
xor
sbbb
and
fimuls
xchg
dec
mov
clc
xor
push
mov
and
loope
popf
mov
or
loop
je
mov
cmp
or
mov
and
test
xor
xor
loopne
sub
adc
jle
pop
mov
xor
in
push
es
push
mov
not
fcompl
incb
cmp
jmp
imul
xchg
sbb
and
es
xor
jl
fs
test
insb
test
mov
out
insl
data16
mov
loopne
adc
push
xchg
cli
mov
stos
fildll
mov
push
lret
sbb
or
icebp
mov
jnp
inc
outsl
ret
xor
mov
mov
popf
cld
cmc
dec
cmpsl
je
adc
testl
add
xor
xor
jle
lret
dec
mov
lret
ja
stos
jae
aam
sti
mov
sbb
add
mov
scas
shrb
jecxz
sbb
sbb
stos
pop
std
movsl
sarb
push
popa
inc
rclb
jg
test
lcall
clc
mov
mov
ja
mov
adc
push
bnd
jbe
sub
adc
xor
cmpl
adc
cmp
jle
popa
fdivrs
inc
in
adc
ret
inc
fldenv
aam
mov
xchg
xor
mov
push
dec
xor
popa
lods
inc
push
loopne
out
test
or
andl
dec
dec
das
in
push
bnd
stc
inc
int3
insl
and
dec
das
cmp
shll
add
imul
pop
scas
mov
xor
out
sbb
or
inc
ret
sbbl
xchg
lret
and
push
jmp
and
popf
ficomps
inc
push
inc
rcrl
call
and
xor
fdivs
push
loop
jge
lods
inc
and
subl
jne
pop
outsb
push
leave
adc
loope
cmp
subb
cltd
push
adc
jns
lea
dec
mov
xchg
outsl
decb
mov
call
call
and
and
pusha
cmp
cmp
lock
dec
sub
jae
lds
or
pop
ljmp
cmp
mov
fst
xchg
adc
into
and
xchg
lret
mov
movsl
mov
fwait
and
fdivrl
test
js
sub
adc
dec
dec
out
push
inc
sub
lods
push
or
jno
mov
aad
adc
rcr
adc
popl
aas
pop
adc
sbb
fs
jo
xor
mov
cmp
loopne
stc
xchg
cmpsb
add
sbb
cmp
xchg
push
js
lret
imul
out
and
adc
lods
sbb
or
xlat
repnz
lahf
xor
mov
dec
inc
or
pop
push
dec
mov
jge
pushl
in
scas
mov
sub
ss
pop
sbbl
into
mov
sbb
mov
add
insb
sbb
mov
fdivs
aas
jbe
cmp
shl
mov
repnz
jge
push
aas
adc
movsl
lret
pop
jbe,pt
aas
mov
cmp
jmp
popa
cmp
fstps
pop
jae
add
jp
xchg
sub
loopne
mov
test
or
call
pop
aad
dec
add
test
mov
in
addl
mov
sub
mov
and
jl
sub
lret
mov
out
dec
popa
inc
jns
xor
cmp
cmpsl
loope
jmp
in
sbb
cwtl
pop
sti
mov
adc
js
mov
insl
rcrl
jns
pop
popf
pop
sahf
or
add
add
js
mov
lcall
out
lods
xor
test
cmpl
adc
jo
jge
push
fwait
iret
add
mov
cmp
mov
jmp
mov
xchg
mov
mov
scas
nop
bound
outsb
test
lret
push
test
jle
adc
es
push
test
clc
mov
test
repnz
arpl
enter
sarl
and
daa
scas
or
dec
mov
xchg
popf
popf
pop
loope
inc
aas
loopne
mov
jle
nop
gs
adc
call
clc
enter
push
jecxz
call
fstl
push
sub
mov
clc
jmp
or
lea
dec
ss
pop
fists
push
pop
sbb
pushf
arpl
imul
jbe
pop
cmc
rorb
stos
shrb
sbb
test
jno
out
sbb
inc
out
sub
cmpsb
pop
adc
sub
sub
test
lahf
rcrl
add
xchg
mov
popa
stos
fs
xor
adcb
xchg
gs
pop
xchg
cmp
sbb
in
add
push
adc
pop
lahf
and
dec
jo
push
push
cmp
dec
xchg
pop
xchg
dec
shrl
cwtl
xor
mov
push
adc
ss
pusha
aam
jbe
cs
mov
and
sbb
or
iret
fs
xor
mov
lds
fs
mov
sarb
mov
jp
mov
mov
push
or
cmp
emms
out
cld
or
xor
mov
rcrb
mov
dec
dec
push
stos
push
outsl
push
and
push
outsb
cmp
add
ss
xor
add
out
push
mov
jp
arpl
xor
std
mov
sub
popf
dec
test
cmp
imul
dec
push
push
jmp
push
mov
sbb
or
xchg
pusha
push
mov
jb
and
movsl
sti
je
mov
cmp
jmp
push
test
mov
sub
loop
jmp
add
jmp
pop
mov
hlt
sub
jb
lods
out
jg
mov
xor
clc
xchg
inc
dec
mov
pop
mov
out
ficompl
lret
in
and
orb
mull
cltd
imul
fdivl
sarl
jb
jbe
or
adc
mov
sub
mov
push
cwtl
add
cli
add
push
pop
mov
rcll
xchg
sub
clc
adc
fwait
push
fwait
or
arpl
out
xchg
add
jne
out
bound
jmp
or
sub
popf
fistps
mov
mov
sub
insb
andb
cmp
push
push
sub
rorl
es
das
mov
sbb
jns
paddusw
push
movsl
jae
mov
mov
adc
sbb
out
and
arpl
out
std
mov
push
out
les
out
dec
xor
imulb
mov
cmp
repz
mov
aaa
fildll
dec
iret
aaa
outsl
hlt
negl
jns
push
xchg
xor
fnstcw
mov
or
dec
je
clc
push
fdivl
cmc
fcmovbe
or
push
iret
and
mov
mov
sti
add
out
dec
xchg
mov
xchg
fs
push
sbb
push
adc
pushf
daa
outsb
inc
cwtl
fidivrs
xchg
dec
sarl
pusha
or
js
xlat
add
insb
mov
xor
std
push
cld
inc
jno
cmpb
jb
jge
push
sbb
jo
lcall
jbe
sub
les
fistpll
push
enter
pop
iret
push
mov
push
jnp
fsubs
mov
lods
xchg
xchg
lods
and
xorb
lds
dec
out
mov
inc
pop
pcmpgtb
ljmp
cmp
loope
and
jae
cmpsb
mov
sbb
inc
jecxz
or
pop
loopne
mov
fs
add
sub
push
test
popf
adc
in
xorb
sub
in
adc
pop
sbb
rclb
dec
mov
js
cltd
push
lcall
push
pusha
push
push
and
inc
lcall
test
xchg
outsl
nop
lock
gs
mov
and
pop
xchg
inc
pop
scas
xchg
jnp
dec
fs
call
xchg
pop
inc
iret
cmc
or
pop
xchg
mov
xchg
lds
mov
aam
xorl
jmp
gs
jae
test
rcrl
and
mov
inc
div
pushf
pop
add
and
aas
jo
dec
movsb
dec
xor
daa
mov
xchg
pop
mov
or
xchg
ficoml
sarb
mov
sub
jbe
movsl
mov
ja
lcall
cli
scas
rcll
or
lahf
add
push
jo
and
fs
jno
push
dec
nop
rcll
out
jg
rorl
mov
sbb
adc
push
sbb
pop
and
mov
push
jl
xchg
divl
sub
aaa
push
sub
push
inc
lcall
data16
pop
daa
mov
ja
xor
in
jg
mov
das
and
push
pop
pop
mov
daa
pop
add
loope
inc
dec
mov
int3
and
mov
mov
call
dec
test
mov
jne
into
imul
in
sub
lahf
and
xchg
mov
dec
pop
cmp
and
or
push
fcmove
in
std
out
adc
filds
mov
cli
inc
incl
pop
adc
popa
mov
pop
cltd
lcall
xorl
sbb
xor
cld
adc
add
mov
sbb
fsubrs
sub
cmp
imul
add
push
cmp
push
js
lret
push
incl
jne
pop
inc
adc
mov
aas
in
out
mov
dec
cmc
rorl
push
mov
bound
pop
sub
pop
test
add
xor
frstor
call
cmp
jp
aaa
cs
fidivrs
sub
dec
pop
pop
mov
and
lea
jecxz
xchg
cs
sbb
jle
cmp
gs
std
jno
loope
jno
mov
movsb
nop
and
inc
nop
into
inc
rolb
push
adc
popf
mov
add
push
sar
cs
push
sbbl
scas
adcb
or
hlt
xor
rol
repnz
in
jmp
insl
push
outsb
push
cmp
and
inc
jbe
cld
push
cmp
out
dec
ss
adcb
subl
and
or
test
cmc
sub
pusha
dec
dec
aad
test
in
and
insl
inc
xchg
cmp
aaa
divl
inc
rcrl
test
lods
in
sub
sbb
mov
aas
xchg
cmpl
add
shlb
insb
cmp
cmp
repnz
cmpsl
test
in
cmpl
fnstsw
inc
push
pop
clc
mov
inc
jns
mov
push
scas
mov
or
fimuls
mov
loop
mov
cs
xor
pop
xor
push
cmc
jmp
cmp
cmpsl
xchg
mov
xchg
lcall
or
sti
jl
cmp
adc
push
jo
gs
dec
andps
dec
in
iret
xor
jae
xor
cltd
outsl
sub
out
push
and
inc
test
xchg
mov
je
aad
adc
insl
fsub
sub
in
gs
mov
cli
mov
adc
dec
dec
and
shll
jp
rcll
adc
aas
jmp
cmp
cmpsl
or
sub
movb
es
cmc
ss
addr16
add
pushf
cmp
push
gs
and
inc
push
fdivl
and
cmc
roll
shll
dec
xor
aaa
nop
cmc
int
sbb
mov
loopne
stc
movsl
mov
adc
mov
xorb
cmp
jmp
sbb
lock
jnp
iret
xchg
push
ret
or
xor
sub
or
ret
adc
cmp
dec
inc
and
je
inc
fistpl
lods
fsubrs
mov
add
and
out
and
xor
ljmp
push
inc
test
leave
push
cltd
call
popa
daa
push
cmp
loopne
pop
mov
sarl
and
and
pop
mov
lea
nop
cli
iret
lds
adc
adc
jbe
mov
sub
ret
inc
in
xlat
cmpsl
jnp
cli
push
push
mov
in
push
dec
lahf
xchg
cmp
lea
jge
inc
popf
test
sarl
rorb
aad
cmp
and
add
push
and
mov
imul
push
xchg
xor
int
inc
fcom
popf
jecxz
test
mov
dec
rolb
movb
aaa
sub
dec
pusha
mov
stos
rcrb
mov
sbb
sub
cmp
aas
fmul
aam
imul
jle
pop
xor
xor
aas
mov
lret
cmpsl
adc
mov
lahf
sbb
enter
icebp
mov
notb
or
shr
dec
int
add
adc
lods
loop
ror
je
add
cmp
mov
iret
fstpl
sahf
les
jns
add
repz
pop
mov
adc
arpl
cmp
add
sbb
xor
dec
xchg
das
and
mov
inc
fdivrs
cwtl
pop
xchg
jo
jns
fisubrl
or
cli
mov
cwtl
adc
jae
jb
lret
cmp
adc
pop
in
mov
xchg
adc
inc
popa
jns
ret
mov
imul
gs
lods
cltd
mov
jmp
sbb
add
movsl
ljmp
fwait
inc
cld
mov
cmc
jg,pn
fs
outsl
outsl
imul
sar
std
xchg
push
loop
push
in
push
stc
rclb
lods
mul
aas
xorb
inc
mov
mov
mov
pop
pop
jg
and
fsubrs
push
adc
les
xchg
shlb
insl
xchg
sti
jg
movsb
test
sub
fldl2e
pop
or
lcall
outsb
push
es
lcall
leave
mov
push
roll
fisubrl
aas
inc
les
leave
and
andb
xchg
pop
inc
fcomi
outsl
lret
fmull
cmp
je
out
testl
cmp
xchg
lds
cltd
out
sbb
std
mov
mov
fistl
aad
pop
jp
sar
push
inc
mov
call
mov
push
cmp
sub
stc
mov
ret
pop
jle
xchg
adc
xor
adcb
adc
mov
icebp
sbb
jl
xchg
test
mov
xchg
fimuls
js
inc
mov
leave
mov
mov
cmp
paddusb
test
in
int3
pop
fcmovnbe
push
pop
mov
xor
pop
mov
ja
insb
aad
test
inc
xchg
dec
popa
scas
jecxz
ja
inc
test
in
sarl
les
jae
dec
pop
popl
cld
imulb
jl
stos
pop
in
out
adc
out
loopne
fistl
cwtl
popa
cmpsb
stos
in
mov
sbb
adc
push
stos
push
dec
mov
push
adc
pop
testl
sbb
fmuls
loope
call
divb
std
ds
aaa
cmp
and
stos
xor
mov
inc
xlat
mov
adc
div
cmc
mov
cmp
movb
sub
cmpsb
xor
lea
loope
sub
push
stos
jg
pop
dec
js
push
mov
or
js
lock
push
lcall
aam
mov
jle
and
sbb
lods
xchg
shl
imul
fmull
push
scas
orb
sub
enter
stos
mov
je
ds
inc
xchg
xchg
push
lret
popa
fldt
popf
pop
dec
jbe
loop
out
adc
push
pop
je
imul
call
jae
enter
mov
imul
aad
lret
adc
push
dec
mov
scas
sbb
dec
mov
jb
lods
imul
mov
es
push
mov
xchg
dec
js
ret
inc
jge
mov
in
insl
stos
test
cmpsl
rcrl
cltd
adc
hlt
xchg
jo
or
lea
in
mov
ja
stos
inc
jnp
pop
fbld
dec
lods
inc
mov
roll
xchg
les
ret
add
repnz
xor
dec
and
testb
and
xchg
and
sub
sbb
push
add
cmp
stos
sbb
adc
and
fsubrl
xor
dec
pop
in
ds
jno
lods
mov
popa
outsl
jne
mov
stc
pop
rol
aas
movsl
adc
push
test
and
testl
mov
shlb
enter
xorl
test
adc
hlt
push
sbb
fs
push
cmc
clc
or
in
push
lahf
sarl
push
sbb
jno
test
pop
orl
inc
xchg
stos
jl
xchg
cmp
cli
mov
xor
inc
rcrb
or
jp
es
rcrl
sub
pusha
mov
int
data16
mov
shrb
pop
sub
dec
lods
push
ret
lds
jecxz
or
pop
pop
lds
cs
cmc
dec
dec
pop
out
mov
mov
push
popa
pop
dec
and
jl
in
mov
pop
xlat
mov
into
dec
cmp
ret
out
adc
int3
mov
enter
popa
arpl
inc
leave
imul
pushf
push
lahf
lea
push
pushf
cmc
xchg
push
aas
cmp
add
cwtl
push
shll
dec
xchg
sub
ret
push
mov
hlt
mov
sbb
pop
out
push
rclb
pop
inc
cmp
dec
cmp
mov
addr16
jle
movsl
cld
push
fstl
dec
xchg
xchg
adc
movsb
mov
dec
push
andl
sahf
je
sbb
fcmovnbe
nop
iret
icebp
add
mov
ja
push
xor
mov
mov
out
push
mov
xor
pop
fidivrs
movsb
pop
mov
andl
leave
sbb
lcall
js
and
enter
push
add
leave
or
mov
dec
imul
jg
dec
lret
add
pop
daa
cmpl
andl
inc
dec
inc
cmp
xchg
mov
mov
inc
xor
sbb
out
test
iret
sub
aam
rorb
jo
adc
addr16
jne
ret
jl
mov
stos
sub
filds
rcrb
imul
xchg
pop
jb
std
adc
sub
inc
xlat
sbb
mov
cmpsb
or
dec
int3
sbb
hlt
dec
and
jmp
in
sub
xchg
mov
add
xor
stos
icebp
int
repnz
sub
sub
cmp
jecxz
bound
sub
sbb
scas
stos
pop
pop
movsb
and
imul
js
jle
push
in
or
fs
fisttpll
inc
mov
scas
sub
pop
arpl
mov
add
push
outsl
clc
adc
mov
or
lds
out
je
imul
mov
mov
cmc
test
addr16
push
and
and
adc
sbb
push
xchg
into
repz
cmp
ret
cmp
inc
lods
adc
cmpsl
xor
sbbb
rcrl
lock
jmp
cmp
insl
ret
jl
addr16
clc
cs
and
int
xor
test
and
testb
xchg
sub
adc
ret
lahf
daa
mov
insb
out
imul
rcll
bnd
test
mov
push
popa
dec
and
push
sbb
fiadds
cmp
and
fildll
mov
movsb
rol
mov
adc
inc
mov
xchg
into
adc
fwait
es
lahf
push
bt
cwtl
fcmovnu
imul
jecxz
jne
mov
adc
cltd
jg
mov
cmp
mov
add
lea
pop
cmpsl
jo
fisubs
jg
lods
cltd
or
cmpsl
and
pushf
dec
jne
sbb
int
push
adc
xor
mov
jnp
sbb
push
xor
xchg
nop
cmp
mov
ret
mov
pop
out
ss
sbb
loop
xchg
dec
adc
aaa
mov
sub
nop
cmpsl
cmp
mov
out
adc
nop
cmp
hlt
xor
in
outsl
cmp
jno
push
testl
mov
pop
inc
jns
sbb
subl
std
aad
into
xchg
or
pop
xchg
stos
mov
mov
mov
xor
jp
pop
js
aaa
shrl
adc
test
aas
lea
mov
cmc
insb
jle
out
mov
rcl
fs
mov
xchg
adc
mov
in
push
cs
insl
mov
or
fmul
movsb
test
sti
jo
dec
gs
lods
sub
das
cmp
cli
mov
mov
inc
out
in
test
je
mov
sbbl
roll
add
adc
push
mov
aam
lret
cld
cmp
xchg
iret
stos
jmp
and
popl
dec
dec
orb
lds
push
mov
add
xor
jmp
nop
scas
dec
push
cmp
mov
negb
adc
and
divb
push
push
dec
xchg
sti
push
mov
stos
ljmp
xor
pop
push
loopne
inc
stos
fwait
ret
add
std
adc
stos
pop
das
push
jecxz
mov
jecxz
xor
dec
inc
movsl
dec
in
or
xor
adc
push
outsl
icebp
insb
jle
and
sti
aam
nop
pop
xchg
jae
inc
insl
push
imulb
out
adc
loope
repnz
sub
imul
mov
orb
pop
rclb
mov
add
dec
inc
push
push
jo
and
xchg
out
sub
in
mov
sbb
lds
mov
mov
jne
je
clc
mov
testl
sbb
xchg
or
mov
outsl
adc
xor
push
jb
test
push
out
pop
lea
sub
dec
dec
ror
xchg
sarl
mov
push
stc
adc
push
and
xor
jecxz
jns
add
xchg
stos
xor
mov
rcl
jecxz
cmpsb
ret
pop
mov
add
aad
cwtl
subl
test
fimuls
jno
fwait
xchg
arpl
sub
pop
xchg
inc
adc
loop
push
jmp
sbb
jno
test
push
jns
add
xor
mov
fnstsw
jle
adc
in
ja
stc
js
mov
sub
clc
das
int3
add
sub
dec
push
shll
inc
xor
inc
ss
pop
xchg
ja
dec
aad
mov
mov
lods
mov
inc
aas
fwait
jns
lcall
fwait
hlt
xor
cmpsl
or
mov
loope
add
loop
daa
sbb
sti
enter
clc
out
loopne
insl
divb
push
les
xchg
mov
pop
insb
ds
lea
mov
cmp
cmp
sbb
push
cwtl
push
test
loop
mov
inc
cmp
sahf
pop
aad
loop
jl
dec
mov
mov
out
test
dec
fcmovu
xchg
mov
mov
push
sub
and
jnp
out
sub
ja
dec
inc
pop
sbb
pop
push
inc
insb
insb
mov
jns
pop
and
add
scas
push
ret
dec
jge
iret
or
cmp
adc
jb
sbb
push
dec
cs
std
dec
mov
push
cmpsl
movq
xor
mov
lcall
and
pop
mov
subb
clc
jns
xor
imul
sub
shl
inc
jne
inc
cld
iret
xchg
mov
or
or
mov
iret
ljmp
push
test
cmp
int
and
mov
roll
mov
pop
lds
test
sbb
out
test
gs
mov
testl
lock
sarl
xchg
outsb
js
cmp
das
lcall
add
cmp
or
adc
popf
sbb
xorl
pop
stc
loop
add
clc
lock
stos
sub
pop
ljmp
scas
loope
inc
pop
inc
gs
or
push
sub
cmp
dec
fstpt
cmpsl
xchg
dec
pushf
and
adc
push
jmp
cmp
test
mov
mov
xor
lret
arpl
dec
js
pushf
aaa
aad
vcvtss2sd
inc
mov
cwtl
subl
and
fcomps
fstpt
in
sub
mov
add
hlt
and
jmp
std
fistps
icebp
and
inc
mov
add
sub
int
mov
mov
pop
dec
lods
in
shll
lcall
push
mov
xchg
push
andb
aas
stos
mov
rcll
sub
ja
and
cmpsb
psrad
movsb
loope
out
pop
mov
cld
push
push
rorb
cltd
lret
shrl
lea
add
mov
test
jae
inc
inc
and
jg
mov
jl
sbb
sbb
stc
in
dec
subb
xchg
mov
adc
cmp
push
cmpsb
adc
pop
in
or
cmpsl
mov
mov
add
insl
xchg
jne
rcll
je
test
add
movsb
adc
daa
enter
push
cmpsl
push
mov
adc
imul
push
pop
repnz
outsb
inc
pushf
fs
add
mov
int
push
in
mov
in
cmp
mov
mov
mov
clc
sub
sbb
push
xor
imul
ret
fmul
and
out
xor
jp
push
ja
fistpll
xor
xchg
xchg
mov
or
sub
shrb
sbb
rorl
je
es
fldt
fbstp
mov
sbb
movsb
or
add
cltd
mov
fiaddl
mov
int3
ss
jmp
movb
stc
lahf
sbb
push
mov
das
mov
iret
aad
sbb
jb
out
roll
xchg
lcall
xchg
fwait
ja
aam
jbe
push
push
lea
gs
jge
sub
ljmp
cmp
push
sbb
and
push
fsubl
push
adc
rorb
test
jp
shrl
sbb
and
mov
sub
xchg
cmp
nop
jg
in
fidivrs
push
inc
nop
repnz
mov
cmp
rcrl
inc
fldenv
shll
ds
cld
mov
mov
xchg
mov
aam
dec
sti
mov
jo
mov
cmp
pop
lea
jge
xchg
pop
les
clc
rcr
test
data16
loop
jp
into
jl
push
xorl
in
push
inc
shrb
fstpt
js
inc
adc
in
nop
jp
mov
mov
mov
xor
bound
shr
or
out
mov
dec
test
mov
cmpsl
es
dec
dec
xor
aam
jno
mov
test
lods
and
das
stos
jle
xlat
inc
mov
cmp
xchg
je
inc
inc
push
in
lahf
insl
adc
fwait
push
sti
pop
in
std
in
movl
xor
or
pop
add
adc
ret
add
insb
sbb
loopne
push
pop
test
cmp
aas
fwait
mov
adc
push
push
or
and
jmp
mov
ret
in
scas
or
inc
jnp
dec
push
das
cltd
mov
sti
mov
je
inc
fwait
loop
mov
iret
leave
pop
cmpb
insl
pop
andl
inc
xchg
dec
mov
mov
aas
sub
into
mov
insb
pop
push
loopne
into
bound
push
push
pop
jae
aaa
lods
adc
outsb
cmc
sbb
cmp
inc
shrl
jne
push
xchg
mov
pop
stc
cmc
int
jbe
lds
jne
xor
and
fimull
dec
push
push
frstpm(287
sti
icebp
mov
lret
cmp
xchg
push
je
gs
test
jno
icebp
push
cmp
sub
jo
cmp
lea
inc
cmp
fcmovnbe
push
xor
je
add
or
push
pop
add
in
xor
jnp
pop
aam
xchg
dec
sub
mov
mov
dec
es
pop
sub
jecxz
or
pop
pop
cmp
add
out
cwtl
in
xor
loopne
or
hlt
cmp
sub
cltd
sbb
push
out
xchg
mov
mov
cmp
dec
inc
ja
bound
jbe
mov
sbb
lret
lcall
insl
stos
and
pop
xor
mov
xchg
pop
mov
sub
push
xchg
arpl
pusha
fs
mov
jne
cmc
jge
jns
mov
mov
cmpsl
adc
sub
cmp
sbb
xchg
cwtl
and
pop
outsb
loope
mov
mov
push
loope
insb
cmp
rclb
sbb
test
das
pop
mov
cwtl
sub
stos
xchg
mov
mov
sub
movsb
in
mov
xor
popa
push
dec
and
or
jge
inc
push
aam
scas
aad
or
mov
push
jae
jmp
pushf
dec
xor
cmp
cmp
int3
pop
mov
sub
adc
into
loop
ret
sbbb
out
dec
xchg
and
jmp
call
ret
aaa
adc
jb
pop
sbbb
out
lock
mov
push
xlat
xlat
out
sbb
pop
test
das
inc
push
ret
loopne
sti
add
add
fnstsw
fisubs
in
mov
mov
xor
daa
mov
bound
fsts
and
jbe
cmp
call
xchg
rclb
sub
xchg
fs
xchg
xor
imull
call
ljmp
fmul
sbb
add
in
insb
std
fisttpl
mov
pop
in
shrl
es
cmp
jg
ficomps
push
mov
lret
or
cmp
js
pusha
mov
push
dec
dec
lods
add
dec
dec
inc
jae
movsl
jne
mov
lcall
rcrl
jle
sub
and
int3
sahf
arpl
adc
insl
dec
push
xchg
faddp
or
sub
sub
cmpsl
mov
xchg
mov
push
bound
inc
lods
mov
push
and
adc
cld
mov
fsubp
sub
push
imul
pop
test
clc
leave
xchg
sbb
clc
dec
mov
add
jo
fisttpl
push
hlt
xchg
test
fisubrl
mov
xchg
setnp
add
movsb
mov
xchg
test
sbb
mov
scas
fcmove
push
adc
ficoml
mov
fs
mov
dec
pop
loope
lods
push
pop
lcall
mov
push
cmp
cmpsl
adc
repz
inc
repnz
test
mov
scas
and
enter
push
pop
scas
je
data16
jl
stos
mov
mov
pop
ljmp
inc
jno
inc
or
lret
int
js
and
mov
std
inc
mov
mov
stc
int
push
jmp
fldt
stos
push
gs
outsb
aaa
call
mov
dec
mov
adc
call
fimull
pop
clc
loop
movsb
lret
mov
mov
into
lock
popf
cmc
andl
mov
mov
rcl
mov
jp
xchg
int3
push
les
leave
in
jl
icebp
stc
or
arpl
negb
std
mov
cmpsb
es
xchg
icebp
push
scas
add
mov
inc
jns
cld
loopne
xchg
xor
pop
lcall
sbb
mov
or
inc
setae
xor
imul
aas
jne
pop
inc
lods
shl
push
in
ret
outsb
pushl
cs
mov
js
or
xor
inc
push
aaa
inc
icebp
push
outsb
in
out
hlt
push
out
test
movsb
insl
out
lods
or
add
aad
jnp
add
lds
dec
stos
adc
clc
pop
inc
int3
xchg
out
add
xchg
icebp
push
jp
or
lret
aas
outsl
pop
adc
ja
adc
sbb
sbb
pop
fisttpll
xor
flds
sub
jmp
fdivp
ret
pushf
xor
dec
sbb
cmp
push
test
or
mov
xlat
ja
subb
test
lods
in
rolb
sahf
push
js
dec
jle
es
rorb
xchg
lcall
hlt
jbe
mov
mov
es
xchg
ret
fcoml
filds
push
xchg
js
push
or
inc
call
mov
fcomip
and
mov
je
inc
scas
out
mov
flds
orb
mov
bound
loop
mov
int
pushf
push
mov
aad
xor
enter
sbb
aad
lret
inc
xchg
dec
jne
push
data16
cmpsb
hlt
sbb
push
sub
mov
jns
cmpsb
cmp
or
gs
push
and
sub
std
test
and
popfw
sub
sbb
mov
or
adc
fwait
enter
sbb
or
push
push
push
leave
rorl
je
fcoml
cltd
push
mov
sub
sbb
push
imul
ret
daa
in
mov
xchg
test
sub
mov
adc
cmp
pushf
ret
push
jl
rorb
xchg
add
bound
sub
cli
fcmovu
sub
and
sub
fs
aas
sub
push
sti
push
add
cs
push
sbb
or
jns
pop
pop
xor
cmpsb
cld
sbb
js
push
mov
stos
ret
mov
scas
loope
inc
or
cmp
movsb
mov
cs
cmp
jne
hlt
and
sbb
js
daa
ret
sbb
dec
push
aad
loop
cld
lock
inc
sub
and
dec
mov
out
repnz
jecxz
adc
push
cmp
xor
inc
icebp
es
add
repnz
mov
fildl
idivl
mov
call
jl
pop
mov
xor
bound
fmull
iret
lahf
lret
pop
leave
mov
pop
sub
cmp
icebp
cs
xchg
add
mov
jne
pop
dec
pusha
lods
shr
pop
sbb
sar
mov
jo
jmp
inc
jno
jl
repz
inc
icebp
sbb
int3
and
mov
mov
jo
aas
adc
push
in
cmc
rol
mov
bound
mov
call
test
lret
xchg
dec
push
jecxz
xor
ret
adc
xchg
pop
inc
xchg
adc
into
dec
or
cli
xlat
xchg
lea
jnp
aam
pop
in
ja
movsb
or
push
insb
imul
int
add
dec
movsl
jnp
fmul
dec
test
ret
in
mov
mov
mov
mov
xor
cwtl
push
jnp
outsb
dec
shl
xchg
mov
inc
inc
jns
out
jo
xor
les
push
add
scas
push
aad
jo
daa
and
pop
mov
mov
ja
fdivs
lret
bound
jmp
dec
xor
cmp
popl
jne
xchg
rcll
cmp
mov
mov
dec
xchg
mov
mov
push
loopne
ficompl
mov
mov
je
sub
std
out
imul
loopne
adc
or
push
sbb
popa
and
sub
mov
ljmp
mov
push
pop
mov
and
repz
repz
push
dec
push
es
es
jb
xorl
sub
das
inc
pushf
cmpsb
stos
notl
fisubs
inc
xor
push
mov
int3
in
cli
gs
fists
jo
aam
out
add
fwait
xchg
adc
xlat
cmp
mov
aad
mov
pop
inc
cwtl
sbb
fldt
and
call
lods
sbb
cwtl
cltd
jae
push
div
lret
pop
sub
mov
int3
xor
mov
inc
push
add
push
mov
adc
data16
push
fs
in
arpl
mov
es
pushf
jno
sti
loope
repnz
mov
stos
add
xor
sbb
lods
cmpsb
xlat
fldl
inc
inc
lret
es
cmp
mov
stos
jle
xor
rorl
mov
insb
adc
js
pusha
pop
adc
and
stos
pop
pushf
hlt
mov
pop
pop
dec
fnsave
xchg
push
cmp
outsl
movsl
sbb
loope
popf
sub
cs
mov
push
loope
insb
xchg
repnz
icebp
pop
test
xchg
int
pop
out
jb
cltd
cmp
add
in
mov
xor
cmp
orb
mov
mov
ret
aad
ss
outsb
sti
shll
rcrl
jmp
sbb
jl
mov
sbb
xor
pop
scas
jg
jge
add
cmp
xchg
inc
jae
push
cltd
enter
stc
lods
mov
scas
in
sbb
jge
mov
outsb
push
xchg
xchg
nop
sub
rcr
inc
lds
daa
in
dec
cmp
ficomps
xor
fs
dec
call
sub
or
fcoms
bound
ss
sub
cmp
push
inc
shl
hlt
cmp
mov
cmc
xor
sbb
jno
rcll
jmp
xchg
jg
pop
or
icebp
add
pop
pop
fbld
xchg
push
mov
stc
shll
je
add
int
cltd
inc
push
push
or
mov
rcrb
mov
push
mov
in
cmpsl
mov
divl
xchg
shrb
jo
mov
mov
lcall
fldcw
xchg
dec
dec
sbb
mov
mull
xorb
adc
xchg
xchg
jne
or
fbstp
das
es
adc
rep
dec
xor
mov
add
fnstsw
or
and
sub
xor
aam
outsl
cmp
rolb
insl
jnp
cli
xchg
mov
xchg
sub
scas
inc
das
add
xchg
in
pop
pop
xchg
and
jne
push
cmpsb
xchg
daa
sbb
sub
scas
movsb
rcrb
push
mov
mov
ss
idivl
sahf
ret
jmp
push
cmpsl
insb
jge
dec
xlat
inc
sbb
in
paddsb
xchg
xchg
cmp
pop
mov
aad
mov
cmpsb
add
adc
mov
and
rclb
cmp
orps
mov
data16
mov
jns,pn
and
daa
add
mov
add
arpl
and
js
sbb
out
arpl
negl
jbe
outsl
das
and
adc
in
inc
into
enter
cmpl
test
mov
or
xor
in
jecxz
push
lcall
mov
xchg
pop
pop
mov
filds
pop
pop
sub
leave
ja
xchg
lret
or
jge
mov
jp
mov
ss
scas
aas
mov
push
stos
xor
dec
push
mov
sub
push
fwait
jns
adc
into
aam
or
repz
cmpsb
cmpsl
mov
and
jl
push
sbb
test
inc
dec
jmp
pop
mov
jge
in
test
sti
dec
pop
sbb
pop
mov
inc
mov
sub
mov
mov
sbb
sbb
rol
xlat
dec
inc
jb
out
jle
mov
sub
mov
dec
jnp
push
in
adc
cmp
xor
dec
or
or
cs
lods
push
and
and
cltd
jmp
cmp
faddl
mov
push
adc
jne
mov
out
and
inc
push
shr
aam
push
jl
push
push
inc
xor
pop
fsubs
test
mov
pop
push
and
inc
test
xor
mov
cltd
xor
inc
mull
dec
movsl
and
ror
lods
rorb
cmpsl
mov
sub
jae
out
mov
mov
jp
and
cmp
les
pop
out
imul
rorl
mov
mov
icebp
scas
lcall
and
ja
subb
pop
aaa
cmpsb
sub
out
stos
push
les
cld
jle
xchg
xchg
and
fstl
dec
aas
push
add
adc
into
pop
pop
mov
scas
lret
enter
jb
mov
popf
mov
in
dec
push
pop
int3
mov
lods
xor
push
push
outsb
inc
int
push
add
mov
test
shr
jb,pt
mov
daa
clc
mov
push
cs
push
inc
mov
push
xchg
popf
testb
fistpll
ficoml
pop
xchg
push
in
pop
mov
mov
jle
pop
xor
mov
test
dec
inc
push
push
je
nop
xor
xor
outsb
bound
sub
sbb
cmp
subl
inc
insl
cmp
enter
hlt
inc
sub
adc
inc
cmp
mov
stc
lods
jae
jo
loop
dec
mov
enter
pop
adc
add
cltd
shll
push
arpl
cld
aas
sub
call
dec
jp
sub
fs
clc
rorb
cs
das
es
or
pusha
arpl
and
add
xchg
mov
outsl
lods
pop
dec
sbb
pop
adc
leave
inc
xchg
pop
cmp
pop
fstps
adc
aas
xchg
xchg
cmp
imulb
and
call
cli
fistl
fwait
sahf
lret
insb
inc
sub
cmp
xchg
sbb
pop
ljmp
out
or
sti
por
int
aas
les
sbb
and
in
pop
jge
or
aad
orb
push
dec
aas
dec
loope
es
xchg
pop
out
rep
cmp
in
push
jnp
pop
inc
scas
bound
mov
loop
mov
in
pop
or
push
rcrl
mov
loop
jbe
jp
dec
mov
mov
mov
inc
dec
ljmp
mov
insb
shrb
jmp
imul
frstor
cmpl
cwtl
stc
pop
mov
push
sbb
cltd
adc
xchg
call
dec
and
setb
clc
or
icebp
xorb
in
cmp
loopne
jb
int
les
data16
imul
xor
push
or
dec
xchg
push
jp
inc
mov
jmp
lcall
jno
insl
add
jp
cltd
sahf
into
insb
add
add
pop
divl
jno
jp
cli
mov
or
jno
dec
daa
mov
dec
imul
ret
xchg
inc
add
faddl
int
leave
jle
push
pop
divb
add
movsl
or
push
out
int3
das
scas
adc
shlb
out
in
xor
dec
data16
lcall
stos
mov
hlt
inc
jl
or
ljmp
xchg
or
add
js
or
sbb
stc
cmp
xchg
fldl
mov
adc
test
xor
stos
gs
jg
aam
inc
and
shrl
push
push
out
jo
jnp
icebp
xchg
or
leave
sbb
xchg
insb
ret
mov
lret
movsb
sub
adc
fcmove
push
cld
xor
pop
rorl
adc
sub
mov
leave
inc
adc
rcrb
mov
movsl
pop
xchg
jno
xor
nop
js
adc
and
ds
xchg
dec
adc
xchg
add
sbb
pop
jb
fidivl
clc
stos
pop
pop
loop
lds
and
mov
pop
mov
mov
sar
cmp
les
cmc
sub
xchg
jno
xlat
push
ret
sub
shlb
xchg
push
fbld
sbb
or
sub
cli
ja
cltd
inc
mov
jne
mov
inc
out
push
stc
and
jb
scas
rcr
push
add
mov
arpl
frstor
sarb
loope
aaa
or
cltd
sbb
inc
aad
test
clc
aas
dec
jne
lret
add
xor
sbb
int3
leave
xchg
mov
adc
or
push
jp
pop
ret
enter
ss
mov
jns
push
faddl
inc
and
mov
imul
inc
cmc
shlb
push
pop
pusha
cmp
and
push
push
sub
cmp
adc
pop
dec
pop
add
hlt
cmp
sbb
ret
add
adc
push
push
adc
mulb
jbe
loop
mov
or
or
repnz
jecxz
xor
cwtl
in
ja
xchg
jp
imul
mov
pop
mov
mov
in
jl
mov
pop
icebp
mov
mov
push
inc
scas
lret
mov
jb
dec
sub
push
notb
and
jl
jmp
loop
lds
in
outsl
sahf
jbe
jmp
out
in
sarb
dec
or
xchg
jge
pusha
nop
and
mov
sbb
dec
xchg
in
insl
or
enter
loope
add
leave
out
in
mov
lods
inc
lret
mov
jmp
in
jmp
or
dec
xor
fwait
and
mov
cs
jl
sub
mov
addl
mov
mov
adc
int
lds
jecxz
xlat
test
mov
aas
jae
mov
cmc
decb
test
mov
push
cli
loope
mov
dec
mov
lret
stos
repnz
xlat
pop
or
mov
in
mov
js
xor
sbb
jl
fwait
push
mov
leave
test
fwait
subl
lcall
test
push
lahf
dec
imul
cmpsb
add
pop
mov
push
dec
xchg
mov
roll
jmp
int
rorl
pop
adc
push
inc
outsb
daa
imul
idivl
loopne
dec
xchg
push
seto
fiaddl
les
rolb
notl
out
sub
or
fldcw
daa
sub
sub
mov
or
inc
fcmovu
pop
pop
mov
js
xchg
xchg
pop
inc
xor
xor
fsubs
inc
shll
iret
into
scas
adc
test
call
pusha
dec
ds
and
stc
pop
xchg
enter
fsubl
push
adc
orb
fsub
mov
call
xor
cld
sti
ds
jmp
adc
xor
ds
outsl
popf
sbb
add
mov
lds
repnz
cwtl
ss
shrl
mov
sub
das
daa
fldt
mov
les
inc
push
cltd
inc
xchg
aam
cs
add
add
inc
rcl
add
ljmp
aaa
jnp
aad
lahf
mul
dec
sub
out
cmp
ret
push
sub
iret
in
push
cmp
imul
xchg
add
setbe
cli
inc
adc
sarb
pop
int3
push
pop
test
cmp
in
out
mov
sbb
mov
loopne
or
ret
out
scas
lahf
add
cmc
add
repz
in
inc
inc
inc
sbb
mov
stc
lods
adc
out
cmp
loope
push
scas
outsb
mov
or
sub
pop
xchg
dec
cmp
test
pop
jmp
in
pop
and
pop
and
test
mov
movsl
insl
in
test
adc
sbb
icebp
mov
add
fimuls
mov
mov
mov
and
adc
inc
or
leave
xchg
cwtl
mov
and
mov
sub
cmp
bound
jle
loop
adc
andb
xchg
test
sbb
je
aaa
dec
and
clc
dec
test
pusha
lahf
pop
adc
and
inc
adc
or
push
test
jl
lcall
je
outsb
popa
sbb
movsl
mov
sar
loop
hlt
out
xchg
fwait
cmpsb
pop
ror
orl
mov
dec
pop
cmpsl
mov
jmp
xchg
xchg
adc
cmpsl
cmp
cmp
out
mov
movsl
icebp
insb
push
mov
push
push
pop
inc
push
pop
mov
and
sbb
sbb
inc
push
imul
cmpl
xor
test
inc
push
les
cs
and
and
cmp
mov
lahf
lea
sbb
adc
push
cmp
into
mov
xor
int
mov
out
fsts
xchg
sarl
jp
xorl
dec
fsts
push
dec
add
dec
push
into
push
lods
aad
int
test
push
sar
inc
ss
jge
mov
mov
aam
pop
aam
mov
cmp
xor
dec
mov
rcrb
push
xor
mov
loope
xchg
hlt
hlt
lret
repnz
xchg
out
addr16
addr16
ja
push
or
xor
pop
sub
add
or
add
aam
mov
inc
jae
sbbl
sub
push
lret
xor
cwtl
jnp
addr16
or
aas
adc
jmp
dec
cwtl
sbbl
jmp
test
inc
mov
into
push
mov
shlb
ret
sub
and
fwait
mov
lods
cmp
and
sub
clc
in
jge
jno
inc
aad
aad
shrl
dec
rolb
lods
sbb
es
inc
push
jg
es
sahf
faddl
adc
movsb
movsb
mov
xchg
adc
testb
testb
xchg
cmp
lret
jp
aad
push
cmp
sbb
sub
andl
test
imul
clc
fidivs
xorl
popa
lret
mov
or
mov
pop
and
enter
adcl
loope
and
stos
lock
jbe
ljmp
call
fnsave
and
out
cmp
pop
inc
jl
jno
push
fwait
dec
jg
xchg
add
adc
pop
xor
pop
js
ljmp
add
cltd
jecxz
mov
test
push
mov
mov
xor
add
fnstcw
or
faddp
mov
insl
sbb
push
inc
outsb
xchg
loope
pusha
lods
lods
pop
pop
sub
add
repnz
mov
cld
sbb
aad
xchg
shl
pushf
and
xchg
ficoms
adc
pushf
dec
out
les
or
scas
dec
cli
cltd
mov
out
sbb
jg
fidivs
dec
jbe
fstl
mov
and
cwtl
dec
xchg
mov
sub
inc
aaa
mov
push
or
ds
xchg
inc
xor
inc
jns
add
cltd
or
push
adc
sub
hlt
in
mov
js
cmp
inc
mov
sub
cltd
repz
les
gs
insb
xchg
nop
loopne
sbb
lds
adc
jnp
sub
cs
mov
rcl
xor
dec
push
in
test
fs
test
iret
lods
mov
push
push
inc
pusha
xor
mov
mov
fidivrs
cltd
push
stc
mov
dec
or
push
add
rcrl
mov
mov
mov
lret
cmp
jne
js
mov
ss
cmp
push
jge
dec
jne
mov
movsb
pop
mov
cwtl
rolb
mov
xor
sub
gs
es
je
scas
push
xor
jno
mov
inc
mov
push
dec
imul
jg
adc
pop
fldt
mov
sti
dec
rclb
adc
ljmp
jp
push
cld
cmpsl
push
lret
xchg
mov
hlt
mov
jp
mov
jno
inc
dec
movsb
lcall
fisttpl
add
and
ljmp
mov
push
pop
aad
pop
xchg
jb
xchg
sub
in
js
adc
loopne
repz
jo
rcl
push
sti
pop
leave
nop
loope
dec
mov
icebp
cmp
cmp
fimuls
cmpsb
subl
push
sbb
outsb
fsts
xlat
pushf
pop
call
and
jnp
sub
xor
daa
push
nop
sub
cld
dec
or
add
mov
and
jge
imul
and
xor
imul
pop
fucomi
aaa
push
pop
fsubl
enter
cmp
mov
hlt
xor
mov
mov
js
mov
mov
pusha
lods
xchg
insb
mov
test
lods
push
faddl
nop
xor
pop
andb
mov
mov
iret
shll
jnp
add
sbb
repz
push
stc
in
or
jo
push
sbb
cmpl
out
xlat
sbb
jae
in
pusha
and
pop
mov
imul
call
and
inc
sub
in
xor
imul
ret
cmp
gs
jecxz
xchg
mov
ret
mov
rorl
pop
jnp
mov
sbb
stc
cmp
sbb
mov
adc
xchg
lock
clc
subl
push
or
xor
cmp
leave
jp
idivb
adc
xchg
cmp
idiv
adcl
das
xchg
mov
push
lods
push
inc
push
bound
aaa
sbb
mov
mov
aam
cmp
xchg
int3
xorl
imull
aas
lahf
fcoms
inc
dec
scas
cs
stos
addr16
or
inc
xchg
adc
filds
and
xchg
pop
mov
mov
stos
pop
jnp
dec
fimull
push
lret
mov
in
sbb
and
or
dec
arpl
dec
ja
test
std
mov
ret
xor
scas
rcrb
hlt
mov
mov
repz
scas
cmc
lods
xor
in
scas
rcrb
aas
imul
cld
rclb
dec
push
aam
loope
hlt
iret
sti
push
movsb
outsl
stos
mov
mov
sarl
add
sbb
mov
dec
mov
scas
sub
loopne
dec
pop
shll
nop
incb
xchg
xor
lock
fildl
push
in
insl
arpl
aas
jmp
pop
lea
mov
cmpsb
sbb
out
orb
jnp
ss
pop
push
dec
insb
push
xchg
shlb
jmp
rorl
cmp
test
cmp
rcl
xor
lock
xchg
loop
fs
fimull
iret
pushl
pop
push
fists
insb
push
in
inc
mov
fwait
stos
test
pop
jns
in
mov
adc
xchg
jno
mov
pop
or
rorb
cmc
xchg
mov
push
test
outsl
adc
das
pop
out
fisubl
clc
mov
rcll
mov
dec
cmpsl
ret
push
fsts
mov
inc
scas
jae
adc
dec
fwait
adc
push
cmp
xor
add
bound
pushf
dec
out
outsl
iret
xchg
sub
or
sub
dec
pop
outsl
orb
or
jae
pop
stos
aam
popf
cmpsl
xor
mov
mov
das
fucom
rcr
stos
shl
push
divl
shl
stos
push
cmpsl
mov
mov
inc
out
mul
cmp
mov
jb
aad
sub
cmpsb
sub
ret
test
jns
nop
lods
lea
pop
out
mov
cmpb
inc
inc
mov
shrb
aam
imul
subl
scas
and
mov
mov
xchg
pop
jno
jl
dec
out
and
stc
sbb
ret
fwait
add
and
push
jge
jo
sti
adc
mov
push
cs
fsub
jp
mulb
cmp
add
push
int3
stos
imul
push
mov
mov
stos
test
fimuls
or
lcall
jne
adc
jl
mov
fs
sti
outsb
jg
adc
sbb
mov
xor
inc
cld
outsb
je
call
sub
fcomi
lea
mov
push
cmp
in
xchg
add
popa
or
sbb
pusha
mov
fistl
adc
mov
mov
sub
push
dec
adcb
enter
stc
bound
mov
cmc
xor
fnstcw
in
xchg
pop
mov
jbe
sub
movb
jecxz
push
repnz
or
clc
jg
dec
and
rorb
sbb
add
iret
sarb
cmp
and
inc
lret
push
pop
sub
hlt
imul
jbe
cmp
cltd
inc
lea
sbb
int3
test
add
jg
push
mov
js
fs
cmp
imul
das
pop
push
aam
mov
les
lods
adc
dec
leave
imul
out
mov
xchg
cmpb
loope
call
jp
cmc
cli
adc
sahf
sub
push
outsl
push
imul
mov
orl
cmp
cwtl
xor
xchg
sbb
pushf
cmpsl
add
jno
xchg
mov
stos
cmp
push
add
je
sbb
insb
mov
xchg
dec
xorl
xor
push
outsb
inc
adc
dec
sbb
mov
dec
jle
pop
outsl
fildl
mov
repnz
daa
loop
lds
jg
jb
outsb
cli
add
mov
xor
jo
inc
cwtl
mov
mov
popf
fisttps
repz
repnz
pop
pop
sbb
test
pop
ret
mov
sub
xor
pop
aam
xchg
subb
decb
fimuls
sbb
cmpsl
pop
sbb
es
fmul
addr16
dec
imul
shlb
mov
outsl
sbb
into
jns
and
jae
cmp
outsl
out
pop
dec
adc
imull
dec
jnp
mov
mov
lcall
fmull
rcr
mov
xor
mov
aam
mov
filds
sti
mov
pushf
in
xchg
xor
adc
aad
roll
test
int3
das
dec
inc
pop
add
cmc
dec
pop
sbb
pop
dec
imul
std
les
push
push
iret
sub
mov
and
pop
lods
inc
sbb
jg
push
mov
sarl
xor
sbb
cmpsb
adc
lods
pop
pop
inc
sbb
lahf
nop
stc
mov
mov
dec
add
out
scas
xor
add
cmc
add
cmp
cld
dec
xchg
sbb
fdiv
lea
in
push
pop
add
jp
sbb
loope
or
cs
mov
or
mov
adc
cld
mov
dec
jne
xchg
push
lret
bound
inc
es
xchg
insl
inc
out
pushf
jne
rcrl
in
adc
mov
sbb
pushl
adc
dec
repnz
aad
inc
sarl
shrb
ret
adc
dec
int3
mov
dec
movsl
popa
xor
nop
es
test
sbb
fsubrs
mov
jbe
ljmp
mov
popf
cmp
sbb
push
loop
movsl
in
stc
mov
in
sahf
imul
es
adc
push
mov
popf
push
nop
jecxz
jnp
pusha
mov
adc
test
mov
mov
pusha
xor
push
adc
dec
jns
xor
inc
cmpl
jbe
or
dec
int3
sbb
or
movsl
sub
fcomps
inc
enter
push
in
add
mov
mov
xchg
mov
call
dec
sbb
ljmp
push
inc
imulb
ja
cmp
xchg
test
fidivs
aam
popl
fbld
imul
dec
ret
fstl
sbb
popf
jbe
in
mov
cmp
pushf
mov
mov
mov
shll
roll
jns
sub
clc
imulb
leave
push
or
pop
loope
fcom
jl
sub
jg
adc
repnz
es
and
fnstsw
mov
and
out
cmp
cld
pusha
dec
sub
mov
outsb
bound
lret
inc
add
xor
cmc
jno
fs
push
dec
jns
sarb
fmul
adc
xor
xchg
loope
mov
sub
add
xchg
scas
pop
int3
mov
add
stc
mov
xchg
sub
mov
ljmp
movsl
je
out
bound
imul
add
sti
pop
cs
add
mov
push
jae
push
mov
and
mov
push
les
pop
fisubs
out
aaa
cmp
lea
pusha
pop
arpl
xor
jp
gs
sub
or
test
stc
cmpsb
and
pop
loopne
mov
push
std
xchg
fadd
mov
jns
fiaddl
pop
ja
ss
dec
ja
call
mov
cwtl
xor
sbb
cltd
push
cmp
jnp
subb
mov
fsts
inc
xor
add
xchg
pop
pop
dec
lret
and
cwtl
cs
movsb
js
jp
jbe
lea
xchg
imul
in
sub
inc
cmpsl
push
and
mov
inc
sbb
cmc
mov
push
in
sub
inc
dec
ss
and
fninit
jg
in
out
ror
adc
in
scas
sub
push
pop
ja
mov
loope
out
mov
jmp
lcall
lahf
pop
cmpsl
insb
and
push
mov
rorw
sbb
fldln2
mov
push
and
repz
test
cltd
pop
adc
cmp
inc
and
out
jo
sbb
nop
inc
adc
sub
nop
mov
inc
mov
out
cmp
lods
push
pushf
cmpsb
ficoms
mov
fsubl
mov
push
js
cmp
jecxz
sbb
mov
ffreep
xchg
mov
repz
mov
std
fmuls
sub
pop
movsl
repnz
fisubs
mov
dec
aaa
lods
push
xor
je
mov
inc
in
mov
stos
das
sub
dec
inc
stos
adc
movsl
push
aas
lret
push
or
shlb
inc
fstpl
lds
loopne
sbb
cmp
sahf
sbb
adc
leave
mov
pop
mov
xchg
fcomps
clc
lcall
cmp
iret
push
pop
hlt
xor
nop
push
nop
imul
scas
xor
or
lods
or
nop
nop
outsl
mov
ret
jp
fsts
mov
pop
adc
jno
test
adc
loop
jge
pushf
adc
pop
mov
pop
and
mov
andb
adc
mov
pop
jmp
xchg
xor
stos
data16
sbb
cmp
dec
in
vhaddps
sub
fwait
sti
sbb
and
je
es
cmp
scas
jnp
jecxz
nop
jp
adc
daa
sbbb
or
fdiv
dec
push
cmpsb
jg
mov
sar
xor
sub
scas
xchg
out
mov
mov
imul
push
xor
pop
aas
xchg
sbb
popa
xchg
cwtl
adc
adc
popf
addr16
dec
xor
jg
and
jb
insb
pop
in
in
dec
daa
dec
std
or
mov
das
stc
inc
push
adc
nopl
out
fimull
lcall
xor
push
frstor
inc
adc
mov
and
orl
mov
and
xchg
enter
dec
test
cmc
sbb
andb
cli
and
sub
add
ljmp
cs
arpl
mov
ret
mov
cs
dec
or
mov
sahf
mov
aaa
sbb
fsubrs
lcall
push
adc
out
jg
sahf
nop
mov
gs
xor
lods
imul
sti
into
inc
or
xchg
inc
lods
test
inc
add
repnz
movsb
adc
jge
fs
pop
mov
push
sbb
das
out
mov
add
jle
aaa
mov
fsubl
test
retw
mov
jnp
xlat
fwait
xor
popa
scas
mov
push
mov
sub
lcall
add
sub
add
into
mov
je
push
and
or
cmp
int3
ss
mov
mov
pop
push
fdivp
and
cmp
out
in
jecxz
mov
std
repz
jns
sbb
lods
cs
mov
inc
int3
in
fs
jmp
lods
xchg
pop
shlb
mov
cmp
daa
loopne
or
and
loope
xor
loop
adc
mov
outsl
pop
mov
jmp
mov
testb
pop
dec
test
xchg
aad
ds
negb
mov
mov
cmp
add
dec
and
xchg
inc
clc
inc
nop
jp
les
jo
mov
or
sbb
sbb
jae
incb
scas
scas
dec
ljmp
and
loop
fcoms
xchg
sarb
dec
dec
mov
add
mov
nop
mov
xchg
xlat
daa
adc
lahf
jp
enter
pop
daa
ljmp
xor
cwtl
sbb
lret
xchg
or
ret
neg
pop
mov
fmull
std
scas
out
jnp
inc
push
fsubs
shlb
enter
mov
test
jecxz
mov
mov
lea
scas
jnp
jmp
pop
inc
mov
daa
jl
adc
imul
cwtl
je
pop
adc
or
dec
mov
mov
mov
es
iret
inc
sbb
nop
mov
dec
test
dec
pop
push
pop
call
xor
inc
jb
lods
incb
fistps
std
or
cmpsl
cmpsl
mov
sub
out
dec
mov
cmc
xchg
sbb
dec
mov
roll
lock
cli
lea
xchg
ss
stos
dec
push
jmp
filds
je
loop
or
jge
cmc
mov
jo
adcb
inc
shlb
sarl
push
sub
call
sbb
ss
inc
pop
jl
test
iret
add
test
lea
xchg
shl
dec
and
jb
call
cld
mov
out
testl
inc
std
outsb
pop
or
es
jb
int3
dec
js
xor
aas
hlt
mov
mov
sbb
call
rcr
aaa
js
jecxz
out
out
push
jbe
jnp
jae
loope
mov
sbb
test
inc
jge
xor
and
push
sarb
mov
punpcklwd
scas
lds
gs
xchg
mov
jbe,pt
and
cmp
daa
mov
jbe
loopne
fdivp
xchg
lahf
jo
outsb
jl
jp
lahf
pushf
or
mov
daa
xchg
adc
adc
xchg
loopne
jp
dec
mov
inc
xor
push
jne
jns
xor
sbb
loopne
mov
loopne
rol
js
push
ss
fdiv
fildl
jns
movsl
add
push
bound
and
nop
xlat
and
sub
lahf
pusha
jle
jbe
imul
imul
repnz
cmp
sub
imul
adc
cltd
adc
dec
xor
cltd
cmp
fisubrl
aad
push
pusha
mov
mov
in
adc
int3
adc
loope
push
mov
adc
lret
jmp
int3
fsubl
dec
mov
pop
inc
inc
mov
es
popf
sbb
pop
mov
in
jg
mov
fnstenv
test
mov
inc
pop
movsl
movsl
stc
in
mov
pusha
fisubrs
jmp
sbb
dec
das
sti
cmpsl
sub
js
scas
lds
call
xchg
pop
jns
and
shl
add
adc
out
mov
pusha
movl
adc
xchg
jmp
cvtps2pi
rcr
scas
ss
pop
scas
out
loop
aam
outsb
ret
jb
int
mov
add
les
aaa
pop
test
mov
and
add
bound
mov
cmp
push
negl
popf
gs
pop
push
mov
jp
pop
add
mov
iret
or
sbb
dec
ss
mov
add
pop
arpl
clc
adc
fsubl
cmp
outsl
mov
adc
rcrl
jmp
mov
mov
sti
sbb
push
xor
and
mov
xchg
insb
cli
ds
pop
xor
rol
and
adc
fidivrs
mov
cmp
pop
push
mov
cmp
shll
pop
xchg
shl
push
iret
bound
fsub
dec
mov
mov
xor
or
cmp
data16
imul
pusha
jbe
sbb
adc
imul
mov
lret
iret
js
int
xchg
jne
inc
ret
push
push
fcmovnu
push
sbb
add
jbe
jp
loop,pn
xchg
push
pop
mov
or
adc
dec
jo
in
push
mov
xchg
inc
jmp
mov
loop
xor
leave
inc
pop
mov
mov
sub
imul
out
aam
rcrb
mov
jge
mov
mov
lods
dec
xchg
inc
in
lcall
push
inc
sbb
adc
jecxz
or
std
sub
andl
xchg
jb
cmpsb
cmpsb
mov
shlb
cmpl
xchg
out
sbb
sbb
ljmp
sub
inc
jmp
jnp
popa
sarb
lods
push
jo
aad
lahf
aas
sbb
jg
or
fcmove
xchg
sbb
fldenv
pushf
in
xchg
pop
pop
add
or
loopne
xchg
sbb
pop
or
mov
cmp
rol
push
cmp
aam
das
int
mov
cmp
mov
mov
sub
mov
inc
jmp
aam
loopne
sbb
mov
inc
add
dec
movsb
jle
test
sub
cmp
push
les
lds
cmp
fsubr
rolb
aam
filds
mov
or
stos
fstpt
mov
cmp
mov
pop
cmc
xchg
jecxz
sub
dec
leave
clc
fists
loope
mov
sub
setl
adc
scas
pop
adc
mov
pop
or
cmp
pop
cwtl
jg
xor
xlat
cmp
or
mov
mov
mov
inc
jecxz
movsl
sbb
push
xchg
cmp
in
test
and
xorl
cmpsb
cmp
xor
push
push
xor
jae
lods
add
popa
in
xor
enter
mov
sub
outsl
gs
mov
negl
lret
pop
dec
sahf
sbb
out
dec
ret
mov
sbb
push
test
iret
jmp
cmp
jbe
push
xor
adc
mov
ljmp
push
fisttpl
jge
rol
xchg
mov
cmp
out
jne
sti
xor
push
mov
or
jo
orb
scas
fxch
pop
push
mov
mov
xor
jge
dec
sub
and
div
out
out
lods
or
sbbl
insl
pop
stos
pop
bound
fisubrs
push
dec
leave
mov
leave
jnp
cmp
mov
or
cs
sti
xor
addb
or
mov
adc
jl
adc
and
xor
shl
inc
push
cli
popa
add
hlt
int
xor
adc
cmp
jge
push
movsb
repnz
pushf
sahf
jo
pop
xchg
mov
mov
pop
pop
dec
es
fwait
and
pop
shrb
aas
pop
inc
movsl
loopne
jnp
cmp
int
lds
push
out
adc
pop
lock
cs
inc
or
mov
jle
out
cmpl
sub
push
jo
dec
cmpl
pop
jno
arpl
jl
cmc
xchg
push
popf
rorl
test
ds
and
mov
pop
stos
lahf
sub
mov
test
negl
adc
pop
or
aas
push
cmp
mov
cmpsb
mov
pop
sbb
insl
mov
hlt
sarl
jl
cmpxchg
jle
in
cmp
mov
xor
fildl
lcall
cli
add
fldl
push
sbb
jnp
scas
in
inc
ret
roll
pushf
mov
aam
sub
in
xor
into
xchg
cmpsl
dec
cmp
je
mov
adc
jmp
ret
call
fisttpll
add
int
xor
int3
fwait
sub
jecxz
ljmp
adc
test
cmp
jp
xchg
aas
mov
xorl
sarb
shlb
lcall
test
jecxz
fildl
push
leave
sahf
push
addr16
enter
pop
lret
dec
xchg
or
add
divb
cmc
sarl
lods
hlt
jne
xchg
mov
ja
je
fwait
mov
fwait
test
jns
fstps
lret
push
mov
popf
push
cmpsl
dec
adc
mov
mov
subb
dec
jne
es
insl
push
lcall
add
jne
pusha
add
mov
mov
dec
jle
xor
ret
push
mov
adc
pop
jne
or
sbb
fdivr
xor
cmp
mov
or
or
ss
ret
stc
flds
sub
and
or
gs
dec
mov
add
scas
sbb
pushf
lahf
subb
movsb
xchg
cs
insl
das
test
lret
dec
sarl
and
add
sub
int
xchg
sub
loope
or
jp
mov
mov
inc
adc
mov
test
ja
mov
cmp
sbb
jo
cmp
adc
les
cmp
xor
lds
mov
and
daa
and
fisubrl
xor
incl
jp
sub
push
cltd
je
jbe
jno
mov
mov
pop
inc
cmp
and
shrb
or
dec
call
shlb
and
pop
sub
xor
sub
mov
cmp
xchg
js
push
notb
shl
cmp
or
jnp
dec
and
cli
xor
pop
xor
test
sub
cmp
jp
mov
loopne
mov
mov
insl
and
insb
aam
mov
and
jb
mov
push
int
lret
dec
inc
sbb
imulb
int
sub
in
lahf
add
lahf
add
outsb
jg
adc
push
sbb
mov
rolb
push
shl
inc
jmp
addb
loop
add
mov
adc
sbb
addl
lret
dec
mov
subl
mov
cmpsb
stc
sahf
mov
push
sbb
das
pushf
sub
cltd
movsl
ja
cmpsl
data16
jle
xor
pop
xor
sub
into
pop
lods
add
xchg
sub
repnz
dec
xchg
and
mov
fwait
loope
rcl
add
mov
scas
mov
movsl
mov
decb
cltd
into
mov
xchg
or
sub
cmp
push
lret
inc
sub
imul
lock
dec
jnp
gs
xchg
dec
cmp
loop
dec
in
jl
out
loop
lahf
inc
pop
add
lret
insl
out
xchg
sbb
jecxz
pusha
push
xor
loopne
dec
divl
jne
jge
sub
jge
or
dec
jl
mov
mov
sarl
xchg
roll
dec
test
push
je
sub
cmp
gs
cmp
movsl
int
loop
push
adc
jno
lds
stos
lods
repz
and
lret
add
adc
xchg
push
fs
dec
dec
jo
in
stos
pop
cmp
sbb
roll
movsl
jae
lock
int3
aad
popa
cmp
outsl
sti
lds
cwtl
xor
add
mov
adc
fwait
dec
jnp
test
mov
dec
je
xor
xor
xchg
mov
mov
pop
cmpsl
sub
add
popf
adc
mov
dec
jl
or
out
sub
mov
sar
jb
xchg
test
mov
je
push
xchg
fcoms
int
subl
leave
pop
sbb
movsl
movl
or
test
pop
dec
sub
out
adc
lock
in
lret
out
iret
sbb
sbbl
sub
dec
inc
rcll
mov
in
cmc
jb
lods
dec
push
inc
js
xchg
pop
in
mov
cli
dec
sbb
popf
and
js
or
mov
sbb
ja
movsb
push
outsl
test
jno
into
inc
jne
cmp
pop
cmp
scas
into
iret
sub
cmp
subb
pop
and
mov
mov
mov
outsl
fs
cmpsb
sub
notl
xchg
popa
push
test
popf
xchg
lock
in
mov
or
xchg
pop
mov
cmpb
dec
fistl
mov
add
cmp
mov
test
stos
sub
popa
and
xchg
sub
scas
insl
ficompl
sahf
out
in
clc
in
xorl
adc
test
js
ljmp
add
ret
xor
mov
in
cli
xor
sub
mov
arpl
or
outsb
mov
cmp
les
mov
in
test
out
fnsave
pop
inc
jae
andb
mov
sbb
imul
xchg
std
dec
out
mov
imulb
int3
sbb
aas
pop
mov
xor
mov
add
inc
add
jmp
fwait
repnz
call
dec
js,pt
jo
clc
nop
filds
mov
bound
push
into
xchg
fnstsw
test
and
mov
pop
jge
push
scas
ljmp
push
hlt
lea
jmp
sub
fwait
sub
adc
push
leave
inc
pushf
and
stc
mov
jno
or
outsl
cmp
outsl
rol
jmp
shl
fcmovnb
xchg
and
mov
fs
aas
ficomps
imul
imul
aam
inc
call
lcall
and
aaa
jbe
test
push
jg
push
lret
stos
sbb
scas
in
xchg
fistpll
xchg
les
daa
in
xorl
dec
mov
or
push
bound
push
push
das
jle
jmp
jle
movsl
jle
sbb
cmp
xchg
or
mov
jecxz
pop
cmp
and
push
test
mov
push
jle
ss
xchg
ret
add
sbb
es
notl
jo
add
and
lock
fwait
lcall
or
pop
sti
pop
dec
mov
test
stos
test
nop
push
sbb
push
pop
shll
and
movsl
jnp
xor
pushf
cmp
sub
sbb
div
cmpsl
orl
das
jo
push
out
inc
pop
das
repnz
or
mov
adc
movsb
xchg
pop
mov
dec
dec
clc
xchg
sbb
shlb
sarb
push
in
roll
mulb
mov
aas
xchg
test
out
rep
btc
cmp
je
mov
jno
stos
sbb
mov
pop
cmpsb
adc
push
xchg
rorl
faddl
shrb
mov
cmpsb
mov
mov
adc
lret
stc
xor
push
pop
hlt
aas
jne
cld
cmp
lock
pop
jb
jp
push
sbb
das
pop
xorl
mov
or
adc
cmp
inc
negl
nop
shlb
jp
pop
mov
jo
fistl
mov
jbe
andl
sbbb
shlb
pop
idivb
ljmp
jne
jle
movsb
fadd
dec
fdiv
mov
leave
adc
xchg
push
je
nop
sub
cltd
or
cmp
out
add
aam
cmp
push
jbe
cwtl
mov
leave
aad
mov
xchg
dec
stos
and
xchg
repz
mov
lahf
jnp
aam
cs
aaa
adc
sub
adc
pop
sarl
clc
push
sub
popa
or
test
stos
dec
addr16
sub
mov
hlt
cmp
mov
loope
repz
pop
mov
jge
mov
cltd
or
test
arpl
add
sub
das
sub
lret
inc
pop
imul
ljmp
or
sub
inc
dec
in
int3
xorl
sub
cmp
movsb
mov
adc
mov
inc
scas
scas
lret
inc
ljmp
imul
inc
sub
add
cmpb
mov
fnstcw
xchg
xor
xchg
push
adc
int
inc
inc
push
jle
or
or
mov
sahf
addr16
inc
stos
mov
mov
xlat
leave
imul
pusha
jno
test
fcoms
into
aad
xchg
inc
fcomp
pusha
xchg
out
je
mov
adc
out
cmc
pop
lods
xchg
xchg
int3
ror
int
and
mov
mov
cmp
xchg
leave
mov
fstpl
addr16
cmp
or
js
jp
out
sub
pop
ret
outsl
mov
inc
cmpsb
mov
cltd
je
popf
cmp
arpl
dec
fisubl
xchg
or
mov
pop
pushf
cmp
xor
je
xor
cmpl
mov
cmpsl
push
add
hlt
jb
cmpb
xor
xlat
xchg
test
or
push
ret
and
sub
pop
fs
nop
loopne
mov
pop
fwait
sub
mov
add
dec
dec
mov
hlt
or
lds
orb
mov
loop
push
mov
nop
cmp
les
ret
pop
lcall
addl
inc
xor
push
and
sarl
in
push
lcall
dec
mov
sbb
cmc
test
mov
inc
scas
add
add
dec
sub
ja
pop
xor
ss
mov
cmc
cmpsl
pushf
dec
xlat
jbe
mov
jb
std
jg
call
ss
fimull
xor
rcrl
xchg
xchg
testl
out
or
test
enter
xchg
adc
inc
add
pop
aaa
xlat
jno
movl
rcll
push
orl
fucom
andl
or
or
push
clc
cmpsb
mov
fs
push
and
insl
das
and
fildll
or
test
repz
mov
and
out
mov
mov
idivb
ror
jo
xlat
shrl
inc
xchg
cmp
and
push
imulb
lahf
js
cmp
lods
rorl
dec
sub
mov
pop
stos
shl
jp
enter
sbb
test
and
push
fs
dec
push
idivb
xor
or
dec
test
dec
push
and
mov
xchg
push
adc
push
jp
push
sub
pop
jnp
mov
imul
sti
inc
xchg
or
in
xor
mov
jae
lcall
aas
sub
rcrl
sub
or
mov
push
ss
nop
mov
or
jmp
icebp
inc
cli
mov
addr16
cwtl
ljmp
or
test
lods
cmp
dec
lahf
fnstenv
mov
add
dec
inc
and
cs
xor
iret
dec
jb
pop
jnp
int
mov
cmc
push
cld
xchg
inc
lods
jge
mov
jo
jp
jnp
dec
cmpsb
dec
sti
and
cli
push
int3
out
xchg
mov
scas
inc
inc
jmp
cmp
lods
dec
mov
lea
jge
scas
popf
push
insb
pop
jecxz
aad
cmp
mov
sarb
out
mov
and
arpl
jo
inc
mov
pop
dec
fwait
loopne
test
xor
inc
push
inc
popf
outsb
icebp
or
leave
adc
xchg
mov
cmp
inc
xchg
repnz
cmp
test
push
xchg
popf
dec
xor
xorl
leave
inc
adc
jmp
jecxz
mov
mov
icebp
aas
stc
int3
cmpsb
cmp
mov
cmpsl
lahf
daa
or
in
ficomps
push
adc
push
fildl
xlat
xchg
or
test
out
and
es
push
mov
dec
sub
dec
sbb
pusha
lahf
xor
testl
pop
cmp
adc
pop
xor
pop
pop
fisttps
or
lahf
out
jge
push
stos
jno
dec
cmp
or
clc
fldt
int3
cmpsl
jmp
sbb
pop
sub
xchg
jae
jl
and
test
scas
mov
xchg
clc
adc
jo
mov
addr16
call
adc
cltd
inc
pop
mov
cmp
and
test
rcrb
jae
leave
xor
imul
in
mov
inc
xchg
scas
xchg
and
mov
sahf
aad
cli
cli
inc
mov
pop
js
pop
lahf
imul
bound
stos
inc
cld
pop
push
and
repz
cmpsl
lods
rclb
cwtl
scas
sub
ja
or
repnz
jo
mov
push
enter
jo
fildl
insb
xchg
mov
pop
cs
out
ficoml
mov
adc
aas
and
ljmp
aas
inc
dec
cmp
icebp
push
inc
cmp
mov
cmpb
dec
jp
pop
xchg
add
jb
cmp
adc
or
arpl
and
fstl
cwtl
dec
sbb
lock
and
xor
xchg
mov
repz
mov
dec
out
dec
add
fstpt
push
popa
into
push
xor
push
insb
jno
add
movsb
cli
dec
jp
mov
sbb
sub
loop
lea
jbe
jge
mov
idiv
fnstsw
xor
enter
data16
loop
mov
cwtl
push
cmp
in
inc
mov
adc
je
fbstp
cld
jge
dec
mov
sub
scas
mov
mov
jae
jno
arpl
test
inc
dec
pushf
repnz
pop
mov
jno
loopne
add
push
stos
scas
loope
movl
add
mov
jno
ss
ficoml
mov
mov
in
xchg
iret
xchg
mov
pusha
loopne
xlat
jg
pop
iret
cwtl
jns
test
popf
sbb
inc
imul
dec
dec
aas
loop
int
in
mov
stc
add
mov
daa
in
scas
pop
mov
jae
int3
and
in
inc
jnp
add
testl
movsb
push
stc
rolb
mov
repnz
fists
jge
icebp
int3
in
nop
jae
lret
je
dec
cwtl
sbb
insl
pop
mov
je
fldenv
es
aad
push
ret
fldl
xchg
fwait
mov
ret
push
sbb
mov
loope
mov
aas
out
sbb
add
shll
fldenv
add
ja
add
sub
dec
pushf
push
xchg
lods
in
add
rorl
push
mov
frstor
pop
xchg
mov
and
inc
call
sbb
mov
xor
mov
mov
mov
mov
sar
fimull
mov
pop
mov
fdiv
jne
and
out
repz
sub
insl
dec
fnstsw
dec
mov
cltd
xor
cmp
aaa
movsl
ja
xor
mov
mov
out
mull
add
shrl
inc
cmpsb
and
add
mov
xor
xor
lods
cmp
enter
dec
push
jno
lahf
xor
push
sbb
xlat
adc
pop
incl
cmpsb
push
loope
xchg
mov
cmc
pop
inc
in
mov
out
sbb
fidivrs
inc
pop
cmp
into
hlt
bound
or
sti
fmul
sahf
icebp
push
int
fs
and
mov
jo
sub
pop
lock
dec
inc
cli
jg
fsubrs
push
loope
jo
jge
out
cmpb
js
shll
data16
mov
in
mov
and
add
xor
or
gs
movsb
fwait
insb
xchg
cmp
outsb
pop
jecxz
inc
and
rclb
mov
xchg
lahf
lret
add
pop
or
jns
sbb
sbbl
lods
jnp
sar
jmp
sub
pop
stos
inc
imul
into
ss
dec
or
adc
xchg
mov
rol
sbb
sahf
bound
jp
add
add
xor
or
into
jmp
stos
jmp
pusha
pop
roll
inc
push
pop
inc
mov
mov
stos
push
jnp
sbb
pop
icebp
xchg
loopne
inc
aam
jnp
inc
ds
xlat
sub
in
sbb
mov
inc
pop
arpl
mov
movsl
inc
aad
incl
or
cmp
cld
push
cmp
xchg
orl
add
jge
icebp
dec
inc
mov
push
scas
addb
fsubs
out
xchg
lret
gs
pop
cmp
mov
sub
push
out
inc
xchg
mov
out
sbb
adc
pop
push
fwait
dec
scas
dec
out
int
test
mov
aaa
mov
inc
or
pop
iret
sti
cwtl
lcall
mov
js
push
jl
push
loope
lods
and
pop
mov
js
test
scas
xor
test
inc
leave
xchg
mov
loopne
pop
mov
pop
xchg
testb
mov
and
ds
fsubs
mov
dec
cmc
cmpsb
jo
icebp
dec
scas
push
xor
lahf
push
dec
sahf
sti
or
mov
hlt
or
daa
mov
mov
pop
jle
sti
subl
sub
imul
into
lret
xchg
insb
mov
adc
fwait
push
lock
xchg
aas
inc
mov
push
ficomps
cwtl
fildl
mov
gs
stos
arpl
jae
mov
rorl
ljmp
cltd
jmp
sub
les
sbb
ss
inc
inc
scas
shlb
scas
push
jecxz
sub
lods
fstpt
pop
dec
mov
or
ret
out
pop
faddl
mov
in
mov
mov
in
xchg
and
mov
int
push
popf
cmpsl
jne
movsb
test
xchg
mov
lods
and
cmp
inc
lcall
fcomps
dec
inc
pop
into
mov
push
fmull
ss
repnz
pusha
lods
inc
cli
sahf
cwtl
in
sub
cmpsb
dec
dec
xor
ds
sub
and
cs
and
add
inc
or
push
xor
stc
add
xchg
cmp
lea
pop
les
fsubr
add
cmpsl
lds
inc
gs
les
pop
xor
add
jns
dec
xor
push
lds
push
fisttpl
cmp
movsb
push
nop
add
cs
add
mov
sub
dec
adc
and
fldcw
incb
jle
int3
movsl
or
mov
test
cltd
test
xchg
call
push
mov
adc
fsts
cmp
movsl
sti
in
xor
pop
and
fisttpll
add
sbb
jbe
pop
imul
rcrb
dec
push
mov
mov
xchg
add
lahf
fdivrs
or
out
lds
pop
jae
bound
cmpsb
cmp
lahf
jne
dec
js
inc
cs
pop
lret
pop
outsb
cmp
notl
lods
xchg
mov
adc
hlt
inc
cs
or
sub
cmpsb
and
mov
dec
pop
cmpsb
subb
cmp
push
in
push
jbe
sbb
pop
aaa
jb
lret
int
scas
jl
popa
or
out
dec
dec
clc
arpl
mov
dec
mov
push
mov
daa
pop
loopne
movsb
in
pop
adc
lret
inc
lods
cmp
dec
mov
lret
out
add
jg
iret
into
xchg
loop
jge
inc
push
sarb
pop
xor
ret
push
cli
addr16
mov
inc
xor
jmp
push
mov
xchg
fucomp
xchg
mov
dec
fldcw
dec
sbbl
test
outsb
addr16
mov
dec
ret
and
cmp
lods
mov
iret
inc
into
xchg
stos
jns
fisttpl
push
push
lods
add
je
and
pop
jg
push
mov
sub
dec
lds
cmp
xchg
ja
out
xchg
fadds
inc
ds
lods
cmp
js
jl
ljmp
call
inc
frstor
add
ret
and
rolb
mov
gs
enter
xchg
es
and
sub
lcall
dec
push
call
and
cwtl
test
in
bound
jbe
retw
mov
je
lcall
lds
fdivrs
and
or
xchg
outsb
mov
cmp
shll
dec
loop
mov
inc
ss
nop
sbb
cmpsl
cmp
pop
cli
cs
lods
cmp
mov
fxch
xor
or
call
dec
push
int3
das
cmp
xchg
cmpsb
add
jmp
movsl
xchg
inc
addr16
pop
insb
inc
fisttpll
push
or
aad
repz
jl
decl
add
jmp
sub
xchg
pop
pusha
movsl
cs
outsl
and
push
mov
cmpsl
ret
sub
stos
lds
sbb
daa
jecxz
cmp
inc
and
lock
fbstp
sar
inc
out
out
test
fwait
cmp
pop
or
ret
popa
aad
sahf
jmp
popf
cli
adc
int3
xor
lahf
cmp
aad
sbb
and
shlb
pop
nopl
and
test
and
xchg
cwtl
movsb
cmp
lods
jecxz
sbb
lret
cld
jle
insl
push
and
ljmp
push
jo
fmulp
ds
or
or
sub
mov
xchg
xchg
or
push
and
test
push
nop
cli
sahf
pushl
or
imul
or
or
dec
xchg
and
xlat
mov
mov
outsb
cmpsb
mov
les
rolb
mov
and
pop
cmp
in
mov
mov
lock
inc
pop
xchg
push
incl
xchg
cs
into
push
xchg
stos
mov
ret
xchg
sub
cmp
pop
movb
addr16
lds
in
je
dec
popa
cwtl
sbb
hlt
fidivs
sbb
or
aas
lods
movsl
xlat
loopne
add
lret
xchg
fadds
inc
repnz
jl
or
jae
and
cmp
jne
mov
stc
and
in
add
adc
jno
dec
cld
dec
mov
sub
mov
mov
ret
out
push
cld
mov
sub
ret
mov
je
in
fnstcw
icebp
sbb
outsl
xchg
pop
sahf
fsts
pop
mov
pop
shl
lret
mov
daa
clc
dec
imul
dec
and
mov
test
shl
mov
or
fildl
jo
enter
and
adc
imul
jne
ret
mov
enter
dec
cmp
in
mov
ret
loope
pop
lock
mov
add
push
pop
fxch
lcall
push
push
and
adc
pop
push
test
lahf
imull
xchg
test
push
shr
repnz
inc
loop
cmp
and
daa
lcall
rorb
dec
cli
xor
rorb
push
lods
sbb
sahf
mov
cltd
sbb
xchg
shrl
push
add
scas
ljmp
mov
cmp
inc
test
shrl
xor
roll
xchg
repz
out
out
fidivrs
pop
imul
jae
mov
cmp
jmp
shlb
push
mov
enter
dec
test
sbb
cld
dec
push
ret
sysenter
into
out
adc
mov
jmp
and
popf
mov
cmp
pop
add
push
stos
push
adc
arpl
jns
push
cmc
sub
cwtl
lret
add
dec
daa
orb
out
fs
outsb
adc
xchg
test
ss
in
mov
cmpsl
rorl
jp
mov
ljmp
jmp
pop
mov
add
jmp
adcl
icebp
xchg
dec
cmpsb
enter
sar
shrl
jmp
outsb
pop
mov
inc
imul
jecxz
movsl
lods
test
test
lret
cmp
xchg
lds
xor
sbb
xor
je
aas
inc
dec
out
mov
add
pusha
mov
pusha
xchg
inc
sub
sub
dec
push
sahf
js
arpl
xchg
roll
inc
adc
mov
lock
icebp
pop
leave
cmpsl
lds
out
pop
arpl
rcll
sbb
mov
sub
jmp
push
popf
cmp
mov
loopne
lods
mov
aaa
in
lds
jo
cltd
stos
xchg
or
rorl
push
iret
outsl
or
sbb
ficoml
sub
loop
test
dec
add
dec
inc
xor
or
sbb
sub
and
hlt
sub
jo
pusha
add
lock
fsub
jno
imul
cmp
mov
sbb
dec
sbb
test
add
sti
inc
xlat
mov
aad
stos
and
or
das
popf
fsts
sti
push
inc
mov
adc
mov
add
dec
movsl
sub
xchg
xor
idivl
mov
pop
out
adc
out
cli
or
dec
or
jnp
pushw
stc
mov
out
out
in
mov
divl
ret
xchg
stos
mov
cwtl
shr
mov
mov
add
push
pop
lahf
mov
addr16
adc
jle
add
mov
sub
pushf
ret
dec
dec
mov
push
call
in
and
loopne
mov
aaa
inc
imul
cmp
aam
jecxz
das
push
cs
test
popa
fwait
adc
mov
mov
mov
pop
mov
cwtl
ds
clc
dec
inc
pop
movsb
std
in
fcompl
mov
lea
scas
lock
add
rcrl
rcrl
jne
add
rclb
jp
test
dec
adc
cltd
jl
sub
es
loopne
xlat
nop
inc
lds
sbb
stc
adc
ss
into
gs
iret
outsb
cltd
pop
rcrl
mov
jge
adc
aad
pop
cmp
dec
xlat
mov
out
je
jl
in
gs
divb
out
lds
jg
fwait
or
add
mov
mov
test
aas
lcall
stos
push
xor
gs
jg
adc
es
mov
push
xlat
scas
pushf
mov
scas
mov
mov
jmp
sbb
mov
lcall
addr16
push
adc
call
cmpsl
mov
mov
xor
mov
out
and
cmpsl
inc
push
pop
jge
mov
jbe
les
fadds
fwait
add
imul
cmpsl
pop
int3
mov
fdivl
cs
cltd
outsl
and
mov
sbb
pop
lds
ret
pop
dec
xor
dec
out
inc
push
push
aas
das
mov
push
xchg
inc
adc
cmp
dec
idivl
dec
mov
pop
push
cmp
xchg
aam
rcll
and
daa
or
aad
dec
stc
or
push
push
inc
lret
pop
xchg
jb
shlb
xchg
mov
arpl
je
pop
pop
add
sub
hlt
les
jp
sub
pop
in
push
andl
mov
xchg
lea
clc
fstpt
psubq
mov
je
mov
jg
xchg
cli
xchg
jge
fwait
stos
lahf
push
push
fnsave
jno
sub
adc
dec
and
or
sub
xchg
mov
cmpsb
jge
mov
lods
mov
mov
inc
test
push
pop
int
fldt
mov
mov
jae
push
movsb
aad
pusha
aaa
dec
lea
push
sbb
notl
sti
js
mov
popf
jp
or
xchg
shl
in
cltd
pop
outsl
pop
in
cmp
pop
dec
ljmp
ret
cwtl
adc
std
mov
mov
jno
sar
jmp
dec
arpl
insb
shlb
hlt
popf
cmpsl
mov
jns
xchg
inc
cwtl
mov
je
mov
insl
jbe
jo
fcoms
outsb
inc
negl
jg
and
cmc
and
imul
dec
push
sti
mov
sbb
ud2
xlat
call
dec
outsl
dec
mov
xchg
ljmp
dec
ja
enter
add
push
adc
and
lret
pop
and
rcr
rcr
mov
arpl
add
push
sbb
sbb
sahf
nop
leave
mov
xor
add
lret
cmp
or
mov
rcll
out
pusha
pop
xor
sbb
popf
das
cmp
imul
mov
jle
cltd
push
jle
mov
je
ret
xor
lret
sub
or
mov
jp
mov
setbe
rcr
cwtl
adc
rcrb
out
shrb
or
inc
add
push
mov
ret
inc
loop
pop
xor
push
push
inc
dec
push
jo
jo
les
out
cmpsl
lret
jmp
sub
movsl
xchg
sahf
or
mov
or
cmpsl
push
jae
lret
movsl
push
jno
popf
xor
bound
xchg
jns
pop
and
test
mov
adc
dec
out
pop
insl
repnz
stos
xchg
jo
cmp
je
dec
add
cmp
cltd
xor
mov
sbb
scas
mov
je
fsin
aaa
je
lcall
inc
sub
scas
lcall
xchg
mov
jmp
sbb
or
stos
rorl
cmc
imul
mov
jns
push
in
in
pop
mov
dec
insb
xchg
xor
or
sbb
pop
loope
push
xor
movsb
cmpsl
adc
movsl
xlat
notb
add
dec
adc
cld
mov
or
fildl
lahf
fsubl
cmp
add
scas
or
inc
mov
cli
cmpsb
jne
adc
cmp
or
xor
outsl
inc
push
test
hlt
out
cmpsb
cmc
push
and
add
dec
pop
or
loopne
mov
in
lea
iret
mov
mov
cmp
out
and
enter
jne
dec
in
gs
movsb
inc
repz
andb
fcomp
stc
clc
out
push
add
jge
xchg
lcall
fcompl
pusha
or
movsb
lock
adc
dec
xor
and
xor
mov
lods
aad
and
cmp
jns
mov
arpl
mov
add
pop
sti
rcrl
xchg
in
sbb
push
call
movsl
negb
pop
cmpsb
stc
xchg
dec
pop
xor
and
pop
or
out
jno
mov
aad
fidivl
dec
pop
pushf
out
out
add
imul
pop
push
inc
fildll
hlt
lret
pop
push
stc
xor
mov
int
leave
fdivrl
aad
gs
sbb
scas
imulb
mov
mov
pop
lock
mov
repz
xor
xor
mov
add
jno
aaa
out
outsb
and
push
lds
add
arpl
xchg
sub
insb
fcoms
ror
xor
or
jno
or
push
pop
mov
cmp
mov
icebp
leave
sbb
icebp
cld
pop
out
sbb
push
into
icebp
stos
push
inc
push
pusha
test
inc
cmp
ret
cmp
in
push
xchg
jle
lahf
mov
inc
ja
lea
test
addr16
lock
cmp
cmp
aaa
lds
inc
dec
mov
pop
fisttps
push
add
arpl
pusha
fsubrs
jae
or
pop
xchg
jb
push
dec
call
jb
lret
cwtl
int
js
dec
out
mov
xchg
mov
dec
jne
addl
cmp
pop
sub
inc
sbb
push
adc
or
dec
dec
in
and
xchg
and
mov
inc
and
or
fistpl
push
adc
push
test
adc
jg
mov
stc
std
and
mov
call
cmc
test
xor
repz
pusha
xchg
test
loopne
xor
jno
xor
aas
push
mov
nop
jo
sbb
sarl
xor
xlat
mov
lret
out
pop
pop
pop
shrl
pop
rcl
movsl
jp
mov
ret
outsl
lahf
adc
popf
incl
xor
mov
mov
jecxz
aam
cmc
shlb
cmp
rcrl
aam
test
loopne
test
cmp
rclb
xchg
in
adc
cltd
push
jnp
mov
xchg
mov
add
inc
inc
dec
dec
jne
push
inc
shrb
cmp
xchg
cwtl
fwait
out
mov
sbb
lds
mov
in
aas
xchg
cmp
jmp
sub
mov
mov
loope
pop
mov
dec
outsb
insl
dec
cmp
into
es
outsl
pop
test
mov
xchg
adc
test
mov
mov
clc
xor
and
subl
lock
enter
repz
es
loope
hlt
mov
mov
add
clc
fiaddl
mov
loope
rcr
jnp
inc
ja
test
les
adc
pop
push
lcall
mov
loope
and
decb
dec
sarl
or
fsts
xorl
dec
gs
dec
or
sbb
orb
cmc
repnz
xchg
icebp
xor
es
push
push
mov
les
add
add
sbb
ja
out
faddl
das
test
dec
xor
pop
mov
push
pop
notl
sbb
and
cmp
mov
stc
les
sub
out
mov
mov
cs
sti
pusha
pusha
es
push
inc
es
dec
add
mov
testl
jb
and
jne
iret
cwtl
outsl
je
pop
stos
lea
or
into
mov
outsb
sbb
mov
inc
fldenv
push
test
mov
fldl
xchg
cltd
addr16
jp
hlt
sahf
movsb
pushf
dec
clc
mov
xor
popa
push
mov
scas
add
stos
popf
xchg
cmp
lds
ljmp
test
arpl
inc
or
mov
pop
pause
out
xor
add
inc
mov
xchg
stos
flds
lcall
mov
mov
pop
dec
imul
push
add
sbb
cli
arpl
test
mov
int
xchg
fsubrl
mov
loopne
and
fcmovb
loop
jae
jecxz
xor
push
divl
xchg
push
inc
jae
cmpl
mov
or
jmp
fistl
imul
mov
fwait
data16
stc
fcomp
in
mov
sar
pop
adc
shl
adc
mov
arpl
in
push
cmp
mov
repz
jmp
and
addr16
daa
shll
add
ret
imul
outsb
add
stc
bound
mov
pushw
addr16
sbbl
mov
jmp
je
popl
jnp
mov
pop
pop
push
sub
loopne
das
popf
repz
adc
inc
movsl
hlt
mov
add
gs
data16
lret
lret
es
push
or
in
test
test
adc
imul
cltd
sbb
pop
mov
test
add
aas
test
scas
mov
adc
mov
inc
aas
mov
dec
jb
js,pt
cmc
push
mov
push
insb
scas
scas
icebp
mov
jo
dec
add
shrb
in
stos
jbe
bound
sbb
mov
pop
push
stc
mov
lcall
fmuls
cmp
xlat
pop
addr16
xchg
movb
mov
mov
jne
les
les
xchg
sbb
popf
inc
in
or
ljmp
jae
push
push
mov
aaa
inc
test
sbb
pop
pushf
mov
pop
cmpsl
dec
fsubs
add
inc
ret
in
xchg
mov
popa
xor
lock
cmpl
add
es
call
jb
and
cs
mov
push
and
and
shll
inc
xchg
inc
faddl
test
outsl
inc
mov
sub
testl
rcrl
jl
test
mov
jns
jp
push
pop
mov
int3
and
mov
iret
push
aas
adc
mov
inc
mov
adc
mov
sbb
fimuls
mov
adc
movsb
data16
inc
std
sbb
mov
or
cmc
pop
scas
mov
xor
in
shll
push
or
dec
movsb
das
adc
gs
xor
pop
jl
xchg
lea
push
mov
out
out
mov
stc
int
lock
and
lret
scas
fldln2
into
sub
mov
aam
add
and
or
mov
movsl
push
nop
jg
pop
andl
push
and
push
negb
xchg
in
cmp
mov
and
gs
xor
movsb
shl
dec
fiadds
aaa
dec
jnp
sti
xchg
sbb
mov
ftst
sub
outsl
ret
push
fsts
push
insl
subl
aad
arpl
rcrl
xor
pushf
xor
jmp
call
dec
outsb
dec
xchg
decb
xchg
or
and
sub
rcrl
pusha
aaa
pop
lret
int3
adc
mov
int
lcall
pop
adc
cmp
dec
push
mov
test
inc
test
sbb
mov
xchg
jecxz
pop
push
jp
mov
adc
sahf
into
xor
sub
cs
cmp
mov
gs
pop
lcall
or
push
dec
sbb
and
adc
xor
lea
jecxz
sbb
mov
stc
mov
mov
int
xchg
inc
add
dec
xchg
xchg
and
lea
jns
cmp
aas
pushf
sub
sarl
and
mov
lcall
in
pop
pop
ror
ret
fwait
adc
or
adc
fucomip
and
dec
je
cmp
jp
ss
ljmp
stos
aas
push
lods
inc
ja
in
ret
push
pop
push
mov
dec
jne
jmp
mov
inc
fisttpl
mov
mov
enter
mov
mov
hlt
lcall
scas
iret
jg
rcr
push
jg
sub
or
out
mov
mov
adc
xor
scas
call
in
cmp
pop
or
movsb
shlb
inc
dec
ja
sti
jo
pop
loopne
mov
lock
into
es
cmpsb
sub
mov
sub
mov
mulb
dec
push
sub
dec
sub
adc
push
push
neg
push
testb
sub
les
mov
jmp
iret
jb
cli
std
loopne
cmp
mov
dec
cli
adc
cmp
xchg
hlt
int3
inc
push
movsb
fsubr
mov
jecxz
sub
dec
clc
cwtl
out
je
push
xchg
sub
mov
push
and
into
scas
pusha
dec
jle
aad
dec
les
and
add
xor
push
xchg
mov
cmpsb
outsb
mov
xor
fistps
dec
fimull
aad
sbb
repnz
aaa
je
sub
sahf
jne
jmp
bound
and
mov
lahf
sub
and
xor
out
je
mov
rorb
iret
cltd
inc
inc
sub
int
ja
or
add
dec
movsl
das
ss
dec
mov
xor
sub
in
lock
and
jmp
or
pushf
addr16
hlt
inc
aas
push
mov
or
or
rcr
jnp
lds
adc
int
xchg
leave
int3
mov
popf
test
adc
mov
xchg
fsubp
mov
xor
ret
dec
fmull
sbb
push
pop
ja
mov
sub
pusha
cmp
push
xchg
fadd
and
outsb
push
insb
mov
fnstenv
dec
jmp
leave
in
cli
cmp
fcmovne
dec
and
repz
jecxz
insb
lcall
lods
in
inc
push
add
add
sub
addr16
sbb
loop
push
jb
sbb
fnstcw
bound
mov
dec
loop
and
sub
lea
push
dec
inc
adc
aaa
dec
sbb
adc
shr
jle
mov
fwait
jg
xchg
push
push
lock
orl
xor
mov
sbb
enter
in
popa
ret
sbb
pop
js
jne
addr16
xchg
inc
xchg
bnd
adc
dec
dec
cmp
push
push
mov
mov
jno
rol
lret
data16
into
loope
stos
add
pop
das
or
push
mov
mulb
jmp
ljmp
sbb
ret
dec
fsubr
adc
scas
xlat
jb
jg
es
cs
bound
rorl
leave
xchg
inc
std
inc
mov
fstpl
pop
lret
adc
fimull
cs
cld
faddp
flds
daa
test
lcall
mov
jecxz
jo
sti
mov
cld
sbb
xchg
repz
xor
jae
inc
in
cmpb
dec
jns
cltd
or
popa
iret
imulb
cli
jg
mov
mov
cmc
cmp
frstor
enter
outsb
sub
mov
dec
into
or
sbb
cld
pusha
cmp
and
fsubp
adc
stos
mov
xchg
inc
mov
or
mov
push
clc
push
imul
push
or
out
out
jg
mov
or
or
int3
push
cmp
stos
mov
and
dec
cmp
push
in
mov
jo
ss
add
sub
insl
stos
popf
xchg
and
push
mov
les
pusha
mov
insb
push
or
jg
push
call
pop
pop
and
push
fcmovne
cmpsb
adc
mov
cli
test
stos
mov
dec
jp
add
aas
aad
lret
movsb
loop
sub
push
cmp
testb
dec
xchg
and
and
mov
sahf
xor
lock
test
out
fs
mov
negb
dec
push
icebp
adc
ja
test
dec
fsts
jl
mov
xor
out
insb
out
nop
xorl
lea
in
push
push
or
and
mov
clc
pop
pop
add
sahf
nop
cltd
pop
pop
pop
sarb
adc
fcoms
and
adc
out
mov
jp
leave
mov
mov
adc
xchg
jmp
in
int3
sub
pop
sbb
adc
sub
mov
dec
xor
sahf
sbb
ss
push
pop
mov
mov
add
sti
iret
cmp
sahf
xchg
inc
add
or
pop
or
cmp
mov
stos
push
xor
inc
stos
insb
sarl
xor
lahf
push
fldln2
push
pop
imulb
push
lret
mov
in
addr16
inc
dec
rorl
xor
mov
adc
push
add
jnp
or
or
mov
jbe
push
test
imul
sub
jo
add
popa
in
push
mov
das
in
inc
test
aam
or
imul
mov
mov
push
pop
mov
leave
das
fldenv
cmp
cmpsb
insl
jge
add
sarb
inc
pop
pop
cmp
cld
into
les
mov
xchg
or
adc
sub
or
mov
out
pop
loopne
and
daa
out
test
xchg
lcall
mov
repz
fisubl
cs
inc
dec
sub
or
sub
cld
lods
mov
mov
xchg
cmp
jge
fsubl
jns
fs
fdiv
xor
ja
pushf
mov
cwtl
pop
out
clc
pushf
mov
out
add
or
mov
je
add
mov
sub
ss
push
mov
add
cltd
push
cli
arpl
out
ret
into
add
loope
imul
pushf
fadds
outsb
shrl
sbb
jl
test
xor
cltd
mov
xlat
fidivrs
xchg
push
and
sbb
loop
jp
jg
jne
inc
sbb
out
int3
xchg
incb
cmp
pop
xor
clc
test
ljmp
push
xchg
mov
mov
shll
inc
loopne
int3
xchg
imul
sbb
and
cmpsb
mov
mov
adc
xor
mov
into
xchg
jnp
dec
cmpl
outsb
jno
cmp
add
nop
repz
sbb
test
popf
push
mov
dec
out
xor
shl
sub
pushf
push
adc
psrlq
addr16
jle
loope
fdivrp
cs
jno
jb
add
inc
push
fldt
in
sahf
mov
xlat
add
cmc
mov
fisubs
push
out
scas
push
stos
xchg
in
xchg
cmp
rorl
mov
inc
int3
das
loope
sahf
jb
add
adc
mov
add
rolb
pushf
dec
mov
cmpsl
pop
cmp
push
push
movsl
push
sub
fistl
outsb
fs
sub
pushl
or
push
adc
jg
pop
dec
stos
jns
adc
mov
mov
das
lock
rcr
aas
xor
sbb
adc
xor
jae
adc
push
iret
mov
jg
loopne
or
cld
lret
mov
add
scas
arpl
testl
xor
sbb
pop
loope
jno
shrb
in
inc
pop
iret
jae
gs
xchg
mov
mov
stc
out
es
ja
test
insb
or
mov
inc
in
daa
repz
mov
xchg
mov
adc
sub
dec
imul
mov
mov
in
mov
out
sbb
out
inc
mov
hlt
mov
or
ret
cmc
popf
mov
jns
sahf
add
jno
arpl
aas
int
js
inc
icebp
faddl
ret
iret
jno
add
mov
das
or
push
jno
xorl
mov
cwtl
mov
and
jno
xor
jp
enter
imul
or
rclb
cmovg
mov
xor
andb
push
in
xchg
mov
lods
mov
imul
into
inc
push
mov
psrlq
push
ss
sub
les
sbb
push
push
aam
mov
imul
mov
mov
lds
add
push
arpl
add
inc
std
lods
add
scas
mov
aad
mov
imul
add
insb
pop
mov
push
into
xlat
fisubrl
xchg
pop
lahf
sbb
mov
push
inc
sub
push
iret
sub
test
sarl
mov
push
test
int3
xor
pop
gs
packssdw
ret
mov
push
std
cmp
and
js
push
ret
addr16
out
pop
test
mov
mov
mov
js
inc
shrl
inc
mov
jecxz
js
mov
or
mov
pusha
push
orl
cltd
add
mov
pop
mov
push
ljmp
lea
push
shll
pop
jecxz
or
inc
mov
bnd
push
pop
xor
mov
mov
add
gs
dec
test
mov
lret
jl
sub
pop
stos
in
fwait
sub
jmp
sub
sbb
lds
jns
mov
loop
cld
cmp
mov
bound
pusha
mov
call
test
dec
in
pop
jle
mov
push
sub
xor
sub
rorl
test
and
lock
push
std
xor
notl
mov
and
dec
jb
fbld
mov
shrl
xor
mov
cld
mov
pop
push
lds
jns
stos
test
rorb
cmpsl
push
cmp
mov
test
movsl
inc
lret
fldcw
jbe
mov
lock
inc
and
pop
sbb
mov
call
aaa
mov
or
lods
mov
mov
das
std
imul
pop
adc
pushf
add
mov
lret
pusha
cmpsl
lods
mov
outsl
popf
inc
movsl
test
push
orb
cmc
sahf
and
in
mov
pop
enter
loop
incl
cmp
dec
int3
jl
ficoml
pusha
ficoml
pop
aas
in
jbe
jle
inc
mov
push
mov
or
ljmp
insl
mov
adc
cld
inc
sub
adc
pushf
test
sbb
fdivp
movsl
sub
mov
loop
inc
and
bound
faddl
scas
xor
loopne
xchg
or
push
pop
add
xor
outsl
push
sti
js
stc
pop
iret
fimuls
pushf
dec
orb
push
dec
add
in
movsb
pusha
mov
ret
int
mov
add
out
ljmp
test
inc
movsl
add
scas
jb
inc
icebp
add
xchg
dec
sbb
or
mov
mov
mov
loope
dec
cmp
insl
fwait
xor
sub
lea
jnp
fs
sub
inc
pop
push
push
or
sub
and
enter
and
mov
push
mov
xor
cld
loopne
dec
jp
movsb
adc
pop
dec
repnz
jo
call
xor
mov
insb
push
and
fimuls
sahf
push
pop
jo
repnz
lock
push
adc
pop
and
mov
rdpmc
mov
add
xchg
cmp
lds
mov
mov
lock
stos
ret
loopne
fisttps
sbb
xchg
sbb
lea
mov
ljmp
in
jl
xor
jg
jecxz
jge
mov
lret
and
push
cs
lods
sbb
mov
jg
mov
test
sub
rcrl
jecxz
jne
iret
pop
inc
sub
loop
inc
xchg
xchg
mul
aam
fs
inc
push
sbb
xchg
cli
dec
pop
out
cmpl
push
xchg
icebp
sbb
hlt
push
cmp
scas
imul
or
and
faddp
or
stc
sbb
push
into
inc
inc
lcall
clc
mov
out
flds
push
loopne
xorb
sahf
inc
sbb
shrl
aas
mov
pop
pop
jecxz
outsb
gs
xlat
xchg
sbbb
mov
fwait
or
push
idivb
addr16
fcoms
xor
shlb
movl
push
into
and
ljmp
xlat
mov
push
popf
popa
clc
pop
test
ss
mov
lret
das
icebp
lock
in
fisubrl
or
push
jg
push
fcomps
int3
lods
repz
cwtl
movsl
movsb
sub
pop
out
lods
sbb
mov
sbb
jno
mov
mov
test
das
icebp
dec
mov
xlat
mov
aam
arpl
mov
add
cltd
mov
cltd
shlb
jle
xor
mov
inc
in
lahf
pop
dec
in
lret
mov
ret
ds
fists
lcall
rcrb
pop
sbb
xchg
jo
cmp
cli
imul
popa
jmp
addr16
test
xchg
adc
cmp
cltd
cmp
xlat
jge
fbstp
or
fildll
adc
jo
dec
sti
push
jno
pop
mov
jo
pop
outsl
mov
aad
adc
xchg
sahf
into
and
fiadds
fsubrs
pushf
sub
jp
prefetchw
add
cmp
fwait
cmp
pop
aam
iret
sbb
mov
pop
subl
hlt
mov
mov
in
cmp
or
pop
xchg
jns
nop
cli
out
mov
sub
sbbb
in
dec
dec
fsubrp
pop
out
mov
lret
pushf
pop
adc
lcall
psubsb
add
and
or
mov
adc
adc
xchg
ficompl
mov
dec
jb
xchg
mov
mov
add
and
mov
sub
cli
pushf
xchg
sub
aam
or
fmull
hlt
push
cmp
scas
jo
jae
mov
mov
cmpsb
cltd
push
lods
les
in
insb
mov
aas
jle
ret
or
call
pop
mov
bound
pop
push
mov
rorb
mov
cmp
cmp
loopne
outsb
repnz
fadds
mov
test
xor
shlb
je
or
leave
leave
add
shrb
subl
je
insb
mov
jp
addr16
sbb
or
fdivl
inc
nop
nop
cmpb
subl
sub
and
adc
lcall
dec
add
adc
shlb
pop
adc
std
mov
add
or
insb
pop
push
test
aam
mov
adc
repz
lret
or
adc
aaa
leave
mov
fdivs
inc
and
loop
jle
cmp
dec
int3
mov
inc
mov
cmpsl
mov
ss
cmp
inc
int
dec
into
rorb
pop
mov
enter
or
stc
mov
test
fistpl
xor
mov
imul
xlat
mov
cmp
aas
cmpsl
popa
fs
pusha
inc
or
adc
push
xorl
out
sub
or
adc
cs
sub
test
insl
add
add
or
mov
inc
in
xchg
sbbl
or
mov
cld
ficoml
sbb
mov
xchg
lahf
fldt
xor
xchg
fsubrs
mov
addb
frstor
inc
out
dec
cmpsb
gs
and
outsl
xor
ljmp
mov
sti
inc
stc
pop
adc
lods
adc
enter
cmpsl
pop
unpckhps
mov
dec
js
into
pop
repnz
leave
lds
mov
xchg
aad
lret
add
sbb
jg
in
cld
adcl
jg
repz
fisubs
xchg
mov
iret
stos
test
push
cmpsl
cmp
sub
shrb
out
inc
js
or
or
stc
ljmp
mov
cli
lods
jecxz
cmp
cwtl
inc
bound
sbb
outsl
mulb
test
dec
das
cmpsb
jb
add
das
mov
je
and
xor
andl
out
inc
mov
dec
arpl
or
cli
add
test
lcall
push
jbe
dec
xor
fldcw
das
and
pop
fsubl
and
mov
push
movb
sti
daa
jno
lds
ljmp
jle
adc
and
aas
push
outsl
ret
lret
push
lds
stos
imul
inc
call
dec
xor
jbe
and
in
jl
rcpps
and
aaa
or
mov
aad
sar
jmp
cmpl
fiaddl
add
icebp
cltd
xchg
sahf
add
xchg
mov
jae
pusha
xlat
fs
stos
aam
mov
push
and
cli
add
push
mov
pop
call
lock
xor
xchg
adc
clc
sahf
inc
and
rcll
aas
popf
loope
pop
jno
leave
mov
loopne
push
cld
outsb
lock
std
jbe
roll
leave
and
sub
stc
popf
gs
or
cmp
adc
sbb
mov
adc
pushf
push
mov
idivb
dec
fs
add
cmp
movsl
add
loop
std
cmp
out
pusha
mov
inc
pop
jnp
sbb
cltd
cmp
icebp
pop
push
or
xchg
scas
or
cld
sahf
lods
shrb
mov
notb
cli
in
xchg
sub
sbb
ror
xorb
das
inc
sub
mov
push
mov
int3
dec
xorl
sub
cli
jbe
push
cmpsb
mov
loope
mov
ljmp
movsb
fmul
add
call
addb
sbb
mov
push
jbe
shlb
sub
push
arpl
loop
fldt
sti
les
sbb
gs
std
ret
movsb
sub
mov
pop
add
push
push
xor
xor
and
sbbl
packssdw
pusha
xchg
stc
popa
add
dec
stos
pushf
fldcw
sbb
jecxz
pop
and
push
repz
int
call
stc
jle
imul
cli
pop
lahf
mov
outsl
dec
decl
fnop
dec
xlat
in
mov
insb
sbb
mov
mov
inc
repnz
fimull
into
ret
dec
mov
xchg
cmp
inc
cltd
aas
cmp
mov
sbb
mov
inc
scas
jbe
bound
dec
jle
jno
inc
add
movsb
test
xchg
add
ljmp
fdivrs
adc
addb
std
adc
incl
pop
js
adc
movsb
out
out
pop
push
sub
icebp
in
fsubs
add
ret
push
mov
lret
mov
and
sti
pop
lcall
or
mov
ja
sub
inc
mov
lahf
pop
data16
push
inc
bound
cmpsl
mov
mov
inc
add
cmp
push
std
or
decl
push
jge
and
cmc
pop
pop
cmp
jno
out
sub
xchg
xchg
pop
and
rorb
and
add
jp
mov
sub
push
scas
or
jge
sbb
frstor
lcall
jp
out
dec
add
lret
jae
lds
rorb
movaps
out
je
add
fmull
jo
mov
mov
sub
push
inc
sub
and
push
jp
mov
add
rolb
lds
xor
enter
aaa
xor
bound
pop
jnp
lret
lods
dec
inc
jno
inc
and
push
mov
test
add
iret
mov
inc
cltd
arpl
mov
push
outsl
lahf
xchg
mov
cmc
xchg
push
in
dec
pop
sahf
ret
test
or
cmp
lock
pop
xlat
inc
jbe
movsl
popf
sbb
pushf
push
arpl
pop
scas
mov
std
shrb
sti
hlt
orb
xchg
xchg
sbb
mov
pushf
ret
mov
cmp
lahf
sub
pop
dec
insb
adc
or
nop
mov
nop
std
mov
aaa
mov
push
mov
mov
cmp
push
xchg
dec
jmp
sub
inc
cli
xchg
lds
push
andb
cmc
xchg
adc
aas
imul
push
xchg
mov
cmp
xchg
fildl
int
int3
xor
push
cmp
mov
in
cs
push
xchg
xchg
xlat
and
mov
sbb
out
cmp
cmp
das
data16
in
cld
push
fcmovu
xchg
into
movsl
xchg
mov
imul
loope
fistpll
pop
dec
or
test
aad
psubd
adc
jge
loop
sahf
push
mov
pop
cmp
lret
jle
or
mul
rcrl
push
push
xor
jb
add
scas
pop
stos
sbb
outsl
or
negb
mov
std
jno
dec
dec
jge
shrb
sti
push
mov
fsubs
inc
or
xor
push
out
xchg
mov
pop
ja
mov
cwtl
into
roll
fnstcw
je
or
fs
fisubrs
mulb
cwtl
insb
xor
xlat
dec
push
ljmp
xchg
js
shrb
pop
cwtl
add
cmp
cmp
inc
jl
clc
popf
sub
push
das
fsts
xor
inc
mov
stc
mov
push
insb
ret
adc
les
fisttpl
aaa
jp
aas
inc
or
inc
out
mov
cli
pop
pop
sub
pop
xchg
cwtl
cld
loop
push
push
sahf
bound
pop
jle
imul
mov
jb
add
imul
mov
jnp
or
out
mov
jo
and
mov
inc
add
dec
test
cmp
sub
sub
pop
popf
sub
aaa
lea
mov
in
shll
and
pop
push
and
mov
test
test
jne
push
mov
sub
cmp
xor
fistps
cltd
adc
call
inc
leave
pop
pushf
clc
sti
arpl
ja
cmpsl
cmpsl
cmc
sub
outsb
adc
sbb
addr16
repz
mov
gs
sbbl
xchg
mov
addr16
jmp
adc
xchg
imul
mov
dec
pop
or
test
dec
jge
cld
in
pop
les
bound
lcall
dec
insl
hlt
fstps
mov
rclb
lds
aad
pop
loopne
shr
call
enter
fisubrs
mov
and
sub
pop
jbe
sub
cli
mov
mov
mov
xlat
push
mov
xchg
aad
jge
xor
adc
and
inc
jnp
xor
dec
push
inc
icebp
idivl
imul
xor
mov
or
ds
imul
vhaddps
fdivl
and
scas
jecxz
push
loope
out
mov
xor
sbb
lret
fdivs
and
push
lds
mov
cmp
add
fdivrs
into
in
push
in
cmp
lds
cmp
movsb
pop
mov
scas
negb
mov
lods
sub
mov
lcall
pop
and
rcr
testl
rcrb
xlat
xchg
idivl
inc
frstor
cs
jno
repnz
inc
mov
lds
stos
dec
imul
lret
mov
xchg
movsw
fxam
mov
push
or
xor
push
mov
cmpsb
out
insl
scas
sub
or
xor
xor
cmpsb
push
ds
mov
mov
push
ds
push
cs
and
pop
add
jp
scas
mov
test
xchg
into
mov
cmp
xor
sbb
popf
out
fcoml
lods
dec
lods
mov
lahf
jne
popa
enter
das
cli
mov
mov
aas
sbb
int
loop
and
or
loope
inc
cmp
and
scas
outsl
data16
sub
pop
mov
sbb
or
call
jb
or
arpl
fcomps
inc
js
jmp
push
leave
mov
nop
sbb
adc
loope
popa
and
cmp
jl
xchg
fsubs
aad
sbb
xchg
out
enter
push
cmpsl
out
or
out
and
dec
mov
pushf
pushf
daa
xor
add
jge
test
push
shr
xchg
shlb
sahf
xchg
sahf
sbb
dec
je
push
cmp
lcall
shrl
sbb
lret
les
lret
cmpsl
movsl
cmpb
push
cmp
lret
icebp
push
or
into
sbb
pop
cli
decl
test
xchg
push
inc
ds
mov
fldl
dec
sub
xchg
test
dec
je
push
aad
in
add
sbb
out
ljmp
addr16
dec
adc
jnp
out
movsl
fisttps
std
outsb
aad
jmp
jp
sbb
add
inc
or
stos
adc
xchg
out
int
sbb
and
bswap
sbb
fwait
call
mov
and
ret
xchg
mov
cli
std
fxch
and
ret
div
dec
inc
sti
dec
add
xor
or
add
shll
sti
fisttpl
and
aas
movsl
int
stos
xchg
sbb
mov
dec
int
sub
inc
sbb
mov
jnp
aaa
add
adc
lds
lock
pop
cmp
rolb
mov
push
xchg
sti
add
push
push
push
mov
xor
adc
cmp
push
sub
xor
out
notb
xor
inc
sub
subb
dec
push
into
fbld
mov
cmp
and
and
push
clc
addb
dec
or
jg
add
ljmp
lock
inc
ja
dec
mov
cmp
push
jbe
fidivrs
fdivs
adc
outsl
pushw
xchg
loop
pushf
jg
mov
lea
xchg
inc
dec
xor
push
orl
shll
mov
cmp
pop
popf
fiaddl
insb
adc
sub
jns
push
stos
pop
pop
stos
jne
jbe
data16
push
outsl
js
add
and
mov
loopne
popf
pop
pushf
imul
sub
jb
test
mov
mov
gs
std
xor
pop
stos
mov
cld
cmc
out
popf
xor
or
pop
lea
cltd
loopne
and
lret
enter
lea
sbb
cmpsl
aaa
mov
mov
or
test
jae
outsl
mov
jl
sbbl
clc
pushl
pop
mov
fs
rcrb
push
das
ljmp
sub
lods
sub
out
xor
aas
push
lock
mov
or
cmpsb
xchg
mov
mov
jmp
dec
outsl
mov
xchg
fsubs
stos
out
cmpsl
fcmovnbe
pusha
lods
sub
sbb
rcrl
or
int3
repnz
jmp
sti
mov
sub
outsl
in
loopne
jbe
pop
dec
stos
inc
inc
jle
dec
cmpl
pop
nop
jns
loopne
sahf
repz
cmp
lock
and
adc
xchg
aad
cmc
or
lcall
ds
rorb
mov
fists
jno
jge
mov
sbb
mov
jae
out
mov
jle
icebp
jns
fnstsw
mov
mov
xor
sbb
mov
push
orl
sahf
sbbl
dec
dec
fsts
adc
cmp
mull
rolb
or
out
cmpsl
xor
jl
jecxz
xchg
sbb
loopne
mov
sbb
movsl
lret
fiadds
cmp
lods
mov
into
in
leave
test
inc
test
mov
or
jb
sbb
adc
dec
mov
roll
rolb
xor
cli
repz
into
insb
xchg
cmp
cwtl
lods
jge
aas
dec
rcrb
enter
aad
mov
popa
add
xchg
push
jle,pt
icebp
in
aaa
loopne
xor
and
ficoms
rcrl
xchg
xchg
mov
cmp
xor
mov
pushw
jmp
push
popf
jmp
or
cli
aas
mov
sub
out
sub
repnz
jnp
mov
es
push
pop
xchg
mov
ljmp
fwait
dec
jg
mov
push
mov
in
xchg
nop
mov
adc
pop
add
or
fnstsw
add
fwait
sbb
int3
rcr
inc
and
or
jne
and
pop
dec
xchg
enter
fs
xchg
popa
mov
inc
lahf
loopne
push
add
push
mov
xor
jg
je
inc
jb
mov
mov
popf
pusha
push
insl
xchg
ja
int3
insb
fs
mov
sbb
stos
jecxz,pt
mov
mov
xchg
dec
push
sub
or
out
jmp
loop
out
jb
dec
subl
dec
rorl
pop
inc
jne
mov
test
lea
inc
ljmp
cmp
jb
push
xchg
mov
pop
dec
clc
leave
xchg
mov
lods
cld
push
add
jmp
mov
out
mov
popf
cld
test
repnz
aad
stos
scas
mov
sbb
movsb
mov
sbb
xchg
inc
or
scas
outsb
pop
dec
lahf
sub
sub
lods
push
ss
subl
scas
pop
mov
jns
xchg
cmc
and
xchg
jbe
mov
sbb
rcll
jne
xor
dec
mov
jg
jl
push
aaa
cmpsb
pop
adc
xchg
es
pushf
xlat
xchg
mov
cmpsl
fidivl
lret
in
push
cmpsl
rol
adcl
inc
cmpsl
mov
imul
and
push
add
inc
xor
sbb
inc
out
inc
hlt
addr16
add
mov
cmc
mov
scas
movb
sti
and
or
xor
jg
sbb
loopne
std
arpl
addl
stos
loop
dec
xchg
and
cmpsl
out
mov
fldcw
mov
iret
cmp
xchg
mov
inc
clc
xchg
or
mov
dec
jnp
out
pop
sbb
sbbb
mov
ja
cmp
cwtl
clc
xchg
in
sbb
sub
incb
or
outsl
ljmp
mov
pop
stos
test
sbb
ret
jns
out
fcoml
out
bound
fcmovne
adc
mov
xchg
gs
and
lret
call
je
pop
inc
dec
push
xor
push
jg
shlb
dec
jg
sarl
inc
lock
mov
mov
cmp
ret
xor
sahf
inc
mov
pop
psrlq
add
cli
mov
std
dec
or
pop
call
xor
pop
out
lret
movsl
stos
fcmovne
cltd
sbb
pusha
dec
cs
pusha
aad
pop
push
test
cmc
dec
in
cli
popf
push
mov
sbbl
loop
mov
das
mov
or
je
repnz
hlt
cmp
ja
dec
push
bound
lods
sbb
xchg
xchg
cmp
push
push
pop
aas
push
mov
push
jnp
jecxz
sarl
add
jno
sarl
les
hlt
dec
adc
daa
fs
push
std
mov
xchg
or
sub
call
mov
mov
inc
cmp
xor
jl
fcmovnu
xor
mov
ds
cli
popa
adc
addr16
cmc
mov
xor
adc
mov
pop
adc
dec
shl
out
xchg
cmc
cmpsb
pusha
cmpsb
jecxz
adc
xchg
roll
in
jp
pop
incb
sbb
sbb
rorb
mov
inc
ficompl
icebp
sbb
shl
adc
xlat
dec
cs
jl
fildl
push
loop
sub
ds
dec
xor
inc
adc
and
subb
icebp
shll
std
xor
inc
adc
mov
inc
mov
and
adc
add
repnz
in
popa
aad
lods
jne
push
jo
adc
popf
add
ret
pop
add
movl
jns
push
or
sub
das
jnp
xor
push
and
jo
cmp
mov
pop
scas
inc
addr16
cmp
test
fbld
fsub
sbb
or
pop
ficoml
dec
out
or
xchg
mov
lods
inc
imul
or
clc
or
test
test
adc
push
jmp
mov
enter
rorb
cs
pop
rorb
es
jecxz
xchg
cli
lea
xchg
jns
cs
aaa
adc
mov
ret
fs
daa
loopne
cmp
cld
jns
in
pop
cmp
mov
scas
mov
data16
push
xchg
sub
out
sub
repz
mov
sbb
ds
xor
or
and
rolb
xchg
add
fiaddl
fidivrl
mov
pop
aaa
gs
xchg
adc
daa
push
jmp
outsl
pusha
fxch
sbb
inc
and
sub
dec
jbe
cmp
pop
leave
inc
push
fsubrs
rorl
test
into
adc
push
add
lret
sbb
pop
outsb
imul
outsl
aas
insl
xor
test
jno
mov
push
shlb
adc
in
je
add
in
imul
sub
mov
and
jl
jl
les
lods
dec
in
pop
sarb
fucomi
sub
scas
aad
xchg
movsl
out
jg
lahf
and
push
inc
ret
ds
out
xor
fsubr
jge
dec
mov
mov
jecxz
push
xchg
push
fxch
cltd
aaa
xor
sbb
sub
cld
dec
popf
fsubs
jo
mov
xchg
gs
sub
jp
das
inc
pusha
lea
mov
cmp
sbb
jecxz
clc
jle
das
js
mov
xor
iret
sub
ret
sbb
xchg
cmpsb
mov
lret
aas
sahf
scas
mov
xchg
in
pop
and
aaa
sbb
out
sbbb
push
jnp
sbbb
mov
mov
idivb
jmp
or
push
inc
popf
mov
jecxz
sub
js
mov
adc
in
repz
mov
sub
enter
orb
mov
mov
iret
test
fcoml
add
out
fucomp
push
xchg
fwait
out
ret
sub
ret
adc
addr16
pmovmskb
mov
adc
aad
xchg
fidivrl
in
lret
push
pop
sbb
xor
gs
shrb
lods
dec
push
xchg
stos
mov
outsb
pop
sub
jecxz
js
cmp
mov
frstor
inc
jmp
in
sarl
sub
mov
push
adc
jge
data16
cmp
xchg
or
inc
bound
add
inc
movsl
das
and
andb
sbb
loop
insb
stos
inc
jne
push
les
and
cmp
fsub
mov
mov
cmp
shrb
xchg
add
xor
jecxz
jmp
push
mov
les
aas
in
pop
inc
mov
sub
mov
dec
movb
mov
sub
sbb
mov
in
jne
add
lods
mov
cmp
push
aad
outsl
inc
ljmp
clc
fnsave
loopne
test
imul
decl
sub
fimuls
jae
lock
mov
pop
jmp
shll
jle
in
pop
cmp
mov
pop
dec
xchg
gs
sahf
rep
xchg
arpl
cmp
mov
enter
arpl
in
inc
adc
int3
inc
lcall
mov
adc
sbb
mov
dec
je
mov
test
pop
jns
inc
sbb
xchg
push
xor
sbb
ljmp
mov
xchg
stc
mov
std
push
xlat
add
rcrl
fisttpl
pop
and
push
int
jecxz
lret
push
jb
outsb
addr16
mov
and
test
cld
lods
inc
cltd
sbb
bnd
add
pusha
or
sub
popf
sti
inc
cmp
sub
nop
inc
dec
dec
scas
aaa
subb
lret
push
adcl
jno
lret
mov
cmp
cmp
ss
xchg
jno
mull
xor
cld
in
cmpsb
test
jbe
mov
mov
inc
inc
pop
stos
ljmp
loop
add
dec
push
es
in
xchg
cwtl
lret
les
inc
adc
xor
nop
or
add
insl
mov
and
jne
int
popl
mov
add
inc
out
push
lcall
add
mov
scas
jb
mov
pushf
adc
into
cltd
fidivrl
pop
addr16
popa
pop
clc
dec
jne
out
xor
aas
and
iret
sub
mov
and
std
pop
xchg
or
mov
insb
cwtl
sahf
lds
addr16
into
xchg
repnz
sub
hlt
and
or
js
xchg
out
sub
mov
out
mov
mov
xor
fsubrl
sub
test
push
jmp
popf
int
push
xor
loopne
fnsave
cltd
shl
xlat
xor
mov
out
add
mov
jl
cmp
rcl
inc
add
cmp
xor
mov
push
jo
sbbb
lret
sub
push
icebp
addr16
jl
ficoms
ja
sbb
or
aas
jb
jge
and
leave
xchg
icebp
jo
mov
mov
mov
sbb
cli
pop
sub
xchg
lods
sbb
test
jo
adc
or
adc
pop
xorb
adc
lret
addr16
and
aad
pop
pop
test
cmp
aam
ret
push
adc
xor
aaa
pop
and
xchg
into
jle
xchg
inc
inc
push
adcb
fld
lods
inc
mov
imul
cmp
pusha
int3
inc
sub
test
push
cmc
push
add
and
or
add
ror
sbb
aad
in
xor
scas
aas
cmp
frstor
rcl
add
pop
les
sti
cmp
and
cmc
or
cmp
fnstcw
out
jne
stos
add
xor
push
add
stc
call
or
sub
jmp
dec
aaa
out
stos
jge
icebp
dec
test
rcl
jecxz
jge
shr
pop
or
fimuls
repnz
push
push
js
cmp
mov
outsl
sbb
push
insb
lock
mov
out
in
fsubrl
xchg
xchg
iret
inc
lods
in
idivl
insl
test
dec
mov
mov
enter
aaa
data16
adc
out
add
int
sbb
leave
mov
inc
stc
cmp
std
fidivl
fwait
jmp
outsb
dec
pop
push
ss
leave
push
mov
clc
mov
inc
pushf
insl
and
jno
or
jo
stos
sar
pop
inc
sbb
add
add
cmp
dec
repnz
xlat
lret
les
jb
add
repz
mov
sbb
leave
fld1
fldt
das
into
adc
cmc
out
inc
sbb
and
stc
sub
mov
shll
pop
gs
push
out
lea
fbld
push
mov
sub
aam
mov
sbb
mov
inc
jecxz
jmp
jo
scas
push
xchg
add
rorb
push
insb
xor
mov
fwait
lea
jns
and
lret
mov
in
xchg
in
in
fdivl
push
out
adc
and
ja
shrb
aas
push
add
push
jmp
rol
jns
daa
sub
push
and
mov
je
negb
jmp
stc
fs
xchg
jg
aad
pusha
clc
dec
push
fildll
sbb
aam
dec
and
dec
push
inc
test
xchg
out
and
mul
adc
push
mov
mov
outsl
in
stc
jbe
lods
in
addl
loop
dec
adc
mov
jge
push
out
xchg
cmc
sub
in
ja
or
mov
repz
in
inc
mov
pop
xchg
jge
push
push
or
pop
adc
ss
clc
hlt
aam
arpl
fs
mov
and
push
inc
dec
cmp
sub
aas
pop
jb
ja
push
lods
dec
cmp
leave
cwtl
dec
add
cli
push
jecxz
mov
rcrl
xchg
aam
dec
ja
jne
mov
mov
mov
dec
pop
mov
das
mov
mov
mov
sub
mov
adc
xchg
fisubl
ljmp
pusha
and
inc
outsl
adc
rorl
pushf
mov
mov
mov
cmp
int
out
out
cwtl
add
jecxz
js
adc
fsubrs
mov
loop
or
outsl
es
jmp
adc
push
mov
notb
and
dec
pop
rol
and
sbb
inc
jp
nop
mov
lock
je
pop
add
pslld
xor
pop
push
call
xchg
dec
sub
or
movsb
dec
mov
adc
jne
cmc
sarb
pop
lahf
inc
lods
shr
sub
test
inc
fidivs
dec
lods
xor
xchg
ret
push
add
out
jnp
jmp
shlb
fs
add
jbe
jg
sub
leave
or
jecxz
adc
jge
cli
inc
stos
pop
lock
adc
pop
shrb
enter
into
or
mov
xor
scas
dec
stos
sbb
xor
cmp
push
push
cmp
push
inc
and
sbb
dec
lods
divb
loop
jo
add
invd
jne
mov
test
insl
mov
add
or
nop
sub
out
xchg
sbb
xchg
inc
mov
xchg
mov
sbb
xchg
inc
hlt
fmuls
jmp
pop
dec
dec
xchg
add
testb
dec
fucomp
adcl
shlb
cmp
lret
mov
aad
sbb
stos
loopne
mov
xchg
lret
dec
sarl
int
inc
mov
test
lds
inc
mov
adcl
sbb
in
add
cmpb
and
mov
cli
mov
arpl
adc
out
fldenv
lcall
or
and
loope
popf
mov
ss
sbb
mov
or
xchg
out
sarl
loop
insl
xchg
inc
push
ret
pop
mov
jp
inc
ds
sar
xchg
lock
scas
inc
ror
dec
in
mov
and
loopne
cwtl
stc
repnz
pop
or
dec
and
cmc
push
repnz
inc
push
cmp
mov
inc
and
lds
mov
xchg
clc
lret
mov
add
pop
xchg
adc
push
enter
lods
and
or
push
and
arpl
mov
mov
fisttps
xor
mov
ret
sarb
cmp
daa
sub
lock
mov
fildll
sub
ljmp
mov
cld
mov
xor
push
dec
pop
xlat
sbb
push
ret
mov
out
pop
push
imul
imul
sbb
push
dec
mov
psubsb
mov
xor
jnp
jmp
and
push
sbb
in
aam
fists
push
sbb
and
loopne
fildll
xor
cltd
mov
pop
xchg
out
lock
mov
cs
clc
pop
and
fistl
cmp
cmpsl
pusha
insb
mov
or
mov
in
cmpsb
loopne
jge
xor
lock
pop
mov
dec
push
mov
mov
insl
adc
jb
test
jae
mov
ret
repz
out
sub
data16
stc
imul
pop
mov
inc
jp
mov
imul
jne
xor
mov
push
cmp
movsl
lret
sub
xor
sub
cmc
stos
mov
pop
out
sub
loope
xchg
stos
and
shll
jle
aad
mov
adc
xchg
or
jno
cli
out
add
or
cli
repz
inc
in
dec
push
pop
push
adc
leave
mov
or
loop
sbb
pop
jne
aam
sbb
test
jle
or
and
mov
mov
ja
ficoml
out
out
or
fisttpll
in
cmp
jmp
aam
mov
mov
les
cmp
movsb
cmpsb
mov
test
int
into
adc
push
lds
pop
xor
dec
lahf
xchg
add
stos
sub
stos
mov
loopne
sbb
stos
imul
sbb
mov
mov
adc
inc
jl
push
sbb
cmpl
je
fistl
popf
outsl
or
ret
popa
into
jmp
mov
push
ret
cld
das
push
sub
dec
cmpsb
hlt
xlat
lods
mov
fs
stos
arpl
shlb
push
or
mov
fiadds
movsb
and
inc
outsb
sbb
test
imull
and
mov
cmpsb
ret
jns
add
add
test
push
rorl
cwtl
push
cmp
dec
push
lret
repz
xchg
jmp
inc
cmp
adc
mov
and
loop
das
inc
pop
aaa
in
outsb
imul
les
fisttps
jge
jns
gs
push
push
mov
stos
dec
pop
mov
add
adc
xor
push
movsl
lret
bound
gs
or
subl
inc
xor
fs
scas
icebp
out
in
ud0
test
sbb
test
inc
sub
addr16
xchg
lahf
inc
shlb
inc
addl
push
lret
jne
pop
add
inc
arpl
ljmp
fs
fists
mov
je
lret
lahf
pop
mov
xor
inc
and
test
xchg
shrb
je
adc
and
mov
leave
add
lock
pop
push
mov
cmc
popf
es
fs
ret
lcall
push
popa
push
mov
push
mov
lds
gs
dec
hlt
sbb
fcmovnb
sarb
xor
flds
mov
push
adc
fisubrs
or
mov
aam
mov
call
lea
mov
lret
or
dec
xchg
xor
mov
enter
in
jno
loopne
mov
xor
mov
jnp
int3
js
fadds
or
subb
mov
pop
and
daa
lcall
jp
push
mov
dec
das
shlb
pushw
out
pop
xchg
cvtpi2ps
jae
sbb
test
mov
mov
movsb
inc
sbb
pop
push
mov
mov
in
lret
jmp
mov
stos
pop
dec
jg
popa
es
and
xor
adc
sbb
dec
popf
out
in
imul
dec
int3
cltd
or
andb
jmp
mov
xchg
dec
fidivl
xchg
fstps
adc
xorl
imul
sbbb
push
cwtl
into
mov
popf
pop
call
mov
insb
loop
add
sub
fwait
xchg
push
int
addr16
rclb
imul
and
mov
xor
lods
add
or
test
gs
cmp
pop
mov
rorb
insb
jl
lcall
out
sbb
clc
int
arpl
xchg
bound
ja
dec
jle
pop
aas
shrl
lods
xchg
sub
push
mov
mov
pushf
insl
les
cmp
test
jp
sub
add
pop
test
mov
sbb
and
out
ljmp
out
or
jae
xor
int3
adcl
and
adc
dec
dec
dec
insb
fldl
mov
inc
aaa
shlb
scas
dec
jge
dec
das
mov
cli
lret
or
mov
and
inc
mov
or
pop
out
mov
jge
xor
pop
add
js
test
mov
xchg
jg
xchg
sub
shlb
cmp
cmpsb
lcall
test
int
adc
lods
xor
jg
inc
mul
push
jo
inc
mov
lret
sbb
jne
leave
imul
inc
aas
fstpt
popa
dec
cmp
fnstsw
fwait
xor
cmp
popf
cmc
lods
xchg
xor
xchg
inc
int3
push
pop
and
cmpsb
lret
imul
sbb
mov
out
mov
stos
inc
pop
cs
shlb
call
rcl
dec
sbb
cmp
push
out
stos
ljmp
push
outsb
cmp
push
xchg
out
jge
mov
mov
loope
mov
lods
aad
sub
xor
cmp
test
aas
iret
push
int3
push
leave
loopne
xchg
or
stos
icebp
pop
das
fcmovnbe
out
or
cmp
dec
into
mov
das
faddl
mov
in
or
daa
scas
bound
stos
sub
aad
mov
mov
rolb
mov
dec
sbb
das
add
and
mov
fsubrs
stos
jecxz
leave
lret
inc
test
pop
jmp
xor
jbe
nop
dec
int3
aam
cmp
loopne
outsb
cmp
push
ds
mov
inc
inc
and
lods
mov
pop
jecxz
sbb
mov
or
stos
push
test
nop
sub
shlb
or
test
add
in
xor
inc
aas
lods
add
or
mov
pop
jp
add
push
mov
int3
repnz
loope
jb
ss
test
push
inc
in
and
inc
jnp
jecxz
addr16
mov
addr16
lods
iret
adc
sbb
jmp
pop
cwtl
jnp
mov
in
outsb
das
add
cli
add
imul
in
iret
into
imul
hlt
and
ret
xchg
insl
jb
jae
inc
gs
rcrl
pop
mov
dec
jbe
adc
stos
sub
fmuls
push
mov
cmp
leave
ja
mov
push
sbb
fisubs
lods
sbb
push
in
xchg
push
mov
adc
ret
rcll
fsubs
int
scas
mov
jnp
lea
inc
lock
xchg
aas
cmpsl
or
sub
cwtl
push
les
xor
mov
jp
xchg
xchg
bnd
push
in
movsl
test
adc
call
mov
mov
mov
cli
sbb
shl
arpl
das
mov
call
mov
cmpsl
into
fiaddl
push
cld
xchg
push
inc
jp
das
mov
mov
mov
fdivrs
and
jno
sub
scas
mov
out
sub
fisubl
pop
loope
call
inc
nop
daa
push
mov
and
push
lods
lret
stc
scas
sub
cwtl
addr16
leave
xchg
jecxz
cld
sub
in
mov
test
test
pop
dec
shlb
mov
test
ss
and
iret
lcall
punpckldq
popa
xor
scas
push
and
sub
insl
imul
xchg
gs
bnd
xchg
std
lret
push
popa
mov
and
sub
sub
gs
ret
mov
pop
inc
hlt
fwait
adc
dec
es
and
push
push
ljmp
imul
and
push
mov
bound
mov
addr16
push
dec
inc
ss
push
inc
inc
lock
sub
mov
mov
fucom
clc
movsl
cmp
push
mov
mov
inc
pop
das
enter
push
inc
adc
inc
xchg
adc
xchg
outsb
xor
setb
jecxz
clc
jl
sbb
rcll
dec
and
pop
xor
xchg
mov
sbb
or
push
inc
or
jl
fs
negl
fs
jno
jne
es
mov
lds
loope
stc
pop
ret
xchg
imulb
mov
lods
mov
mov
enter
inc
fldl
adc
xchg
cwtl
ret
das
lahf
sbb
or
jge
mov
xchg
or
shlb
mov
repz
loopew
mov
push
call
push
sub
mov
push
xchg
pop
loopne
xchg
push
mov
jmp
push
jnp
sbb
jl
adc
imul
inc
xchg
int3
dec
shl
jg
cmp
inc
les
call
ds
or
and
add
or
aad
add
leave
push
sarb
add
iret
sbb
cmp
fwait
addl
xchg
test
into
sub
push
or
in
pusha
push
leave
fcomps
jp
pop
mov
or
bound
cmpsb
jp
xchg
lods
and
add
ds
pop
rcll
sbb
test
js
mov
sti
dec
stc
adc
pusha
sub
lock
cmp
fdivr
ljmp
xlat
shll
mov
mov
mov
adc
push
out
loope
xor
leave
fistl
pop
clc
pusha
push
aad
adc
mov
dec
xor
cmp
lods
scas
scas
adc
push
add
insl
push
xlat
inc
jle
daa
sbb
xchg
sbb
push
jecxz
aas
dec
jo
xor
ss
cmp
clc
stos
dec
cmp
mov
push
mov
arpl
mov
cwtl
imul
pushf
jecxz
and
mov
insl
mov
dec
cli
xchg
imulb
sub
imul
aas
and
xchg
mov
mov
cmpsb
or
rclb
test
sub
in
dec
adc
cmpsl
inc
xchg
adc
movsb
and
bound
stos
stos
add
bound
lods
decl
adc
in
jbe
mov
mov
mov
sbb
stc
gs
sbb
jnp
call
mov
movsb
push
dec
nop
pop
mov
fcmovu
jecxz
imul
dec
scas
pop
mov
inc
inc
ret
stc
divb
lcall
scas
push
jp
mov
mov
std
or
mov
add
add
popa
jp
mov
les
addr16
pop
lods
xor
inc
push
ss
pop
js
jns
xchg
out
cltd
loopne
aad
insl
adc
push
pop
or
insl
inc
je
dec
cmp
loop
lret
mov
cmpsl
cmp
loop
mov
mov
cltd
jne,pt
sub
cmp
lcall
jecxz
xchg
pushf
hlt
je
cmpl
lds
lea
mov
jl
jno
add
test
mov
sbb
fcompl
cmpsl
lea
aas
popa
jge
sub
sub
xlat
jmp
mov
bound
roll
ret
xor
js
mov
sub
ljmp
or
dec
leave
fcomps
sbb
jmp
gs
leave
inc
mov
fldt
sub
inc
pop
xorl
adc
xchg
cmpsl
insl
cmp
out
pushf
dec
xlat
and
addr16
loopne
and
mov
add
cmp
inc
sub
in
mov
inc
cltd
fdivs
clc
loopne
mov
dec
clc
or
or
push
clc
ds
ret
mov
push
adc
bound
aas
pop
xchg
pop
push
jo
negl
test
mov
push
gs
lods
cmpsl
loop
xchg
mov
inc
pusha
push
loop
stos
xchg
lcall
dec
lods
test
adc
mov
call
inc
shlb
mov
adc
movb
or
and
lea
int3
xchg
std
push
jbe
push
loop
cmpsl
scas
xchg
xchg
fwait
mov
rorl
sahf
push
mov
test
adc
sub
popf
cmc
adc
aaa
pop
pop
push
call
insl
jb
adc
ds
pop
xor
std
pop
inc
insb
jg,pt
sbb
inc
push
mov
adc
ret
bound
shll
mov
mov
loope
out
int
cld
xchg
sub
dec
dec
inc
jmp
inc
out
mov
xchg
sbb
roll
push
ds
fbld
mov
orb
pusha
aad
push
jb
int3
xchg
pop
push
or
das
pop
fdiv
mov
ficomps
mov
insb
leave
mov
mov
jg
test
aas
je
loope
xchg
outsl
push
pop
movsb
sbb
adc
jp
adc
sub
enter
movsl
xchg
pop
inc
push
cli
xor
lock
push
cmp
xor
jmp
pop
lods
jnp
sbb
lret
inc
add
jmp
xor
pusha
ficomps
push
jp
pop
xor
add
rcl
fstl
nop
jns
cmc
lret
mov
fwait
inc
fs
xor
scas
lods
cwtl
push
fcmove
sarl
in
test
mov
sub
push
std
sbb
ljmp
mov
sbb
adc
lret
mov
nop
stc
inc
cmp
pop
dec
or
push
dec
test
or
mov
shll
aad
xchg
cli
and
sbb
insl
fnstsw
dec
sbb
ss
bound
das
adc
mov
fcompl
js
int
loopne
daa
cmpsl
push
sbb
add
xchg
ret
cltd
cmp
in
sahf
mov
dec
mov
mov
popa
mov
adc
push
ja
adc
push
push
xor
insb
loopne
xchg
lds
mov
cmc
mov
inc
fldpi
sub
in
ljmp
insl
call
dec
lcall
dec
outsl
dec
pop
and
lfs
cmp
and
movsl
jg
and
pushf
mov
movsl
sub
fisubs
cmp
daa
mov
repnz
pop
cld
imul
stos
add
ljmp
fcomip
pop
pop
fs
fs
stos
aam
mov
imul
sarb
out
scas
cmpsl
jns
repnz
cli
jg
in
xchg
sbb
xor
adc
rcrl
sahf
dec
mov
inc
stos
adc
adcb
in
pushf
in
icebp
movsl
iret
imul
cld
lea
dec
mov
outsl
add
arpl
mov
mov
cmp
adc
pushf
in
cmp
or
xchg
cs
push
out
xchg
negb
sub
fdiv
nop
push
jp
adc
lds
inc
lods
jo
or
sub
in
pop
fsubs
xchg
repnz
xorb
mov
mov
pop
ret
fcoml
adc
sbb
and
je
pop
cmp
js
add
xchg
lahf
jae
or
xchg
jmp
mov
sub
push
sub
lahf
push
mov
jge
xchg
das
cs
push
sbb
ja
icebp
push
adcl
push
int3
sbb
hlt
mov
dec
and
int3
dec
insl
cmpsb
push
jp
pop
shll
add
push
cli
dec
jns
loop
into
ljmp
in
xor
xor
dec
lock
pop
test
ja
mov
insb
subl
sub
cmp
push
arpl
mov
push
iret
xchg
andl
icebp
xchg
bound
fdivrl
outsb
xchg
sub
test
fwait
hlt
pop
out
movsb
mov
mov
orb
les
addr16
mov
cmp
xchg
aas
iret
sbb
ja
xor
mov
add
mov
cld
dec
sbb
xor
jp
mov
sbb
aas
push
xchg
aaa
push
fldlg2
test
out
fwait
jmp
mov
loopne
ds
addr16
sahf
addr16
mov
jo
ds
mov
inc
sub
pop
xchg
adc
repz
push
push
pop
xchg
iret
sbb
add
xchg
fldcw
sub
loop
test
dec
sarl
mov
fimull
inc
jae
add
xor
xchg
cs
add
mov
push
adc
sarl
jnp
and
pop
sub
loop
out
dec
cmp
xor
and
jmp
rol
aam
das
mov
mov
pop
fisttps
xchg
lea
imul
test
subl
or
test
fimull
mov
int3
repnz
cmp
inc
mov
adc
mov
push
add
jo
pop
cmp
jle
cmpsb
bound
push
pop
pop
push
inc
cld
cmpsl
push
mov
fnstcw
jmp
nop
mov
or
in
fld
out
rorb
and
push
idivl
sbb
add
test
loope
inc
mov
lcall
mov
mov
sahf
lret
das
insb
bound
jecxz
and
leave
je
lret
sub
mov
fisubs
movsb
xchg
fdivrl
test
push
jge
fbld
push
mov
leave
sarb
fdiv
pop
mov
movsb
add
jno
hlt
insb
cs
orb
and
retw
xchg
das
sub
sti
xor
leave
sub
out
xchg
sub
fdivrl
mov
adc
pop
iret
pop
cmpb
lock
adc
and
cmpsl
push
push
loop
ja
insl
inc
inc
jp
cmp
mov
lret
das
inc
out
cmp
fstl
xchg
mov
xchg
jl
pusha
stos
fwait
sarb
rorl
pop
loop
std
call
cmp
pop
sbbb
mulb
scas
xchg
insb
ds
push
pop
xor
std
js
sub
enter
in
mov
adc
sahf
lahf
xlat
jns
test
push
ljmp
cmp
and
lods
xor
je
outsb
cmpsb
loop
cmp
sbb
mov
ret
xor
loop
inc
xlat
mov
mov
iret
iret
mov
jmp
rorb
mov
and
pop
cmp
jnp
or
adc
push
in
jo,pn
daa
sub
fstp
jp
push
mov
mov
movsl
idivl
jo,pn
into
insb
mov
ss
arpl
lds
push
xor
lods
jne
shrl
or
push
mov
outsb
jg
jb
loopne
sub
aas
sub
leave
bound
xor
pop
jo
test
sti
mov
movsl
adc
jbe
mov
in
lret
lret
mov
pop
les
xchg
jne
lcall
mov
jo
movsb
cwtl
jb
dec
stc
or
or
jg
iret
cmpsl
xor
mov
mov
jge
fadd
loop
push
jmp
cs
cmp
mov
insb
xchg
test
dec
int3
bound
push
aad
inc
aad
cmp
mov
insb
and
jle
jle
fidivrl
jo
adc
jno
push
outsl
push
cmp
movsl
jbe
mov
adc
mov
mov
test
fs
and
push
pop
data16
push
int
add
into
sbb
or
and
mov
ds
cmc
mov
xor
ljmp
shll
jo
mov
adc
push
addr16
cmp
loopne
mov
icebp
into
adc
jmp
stos
adc
cwtl
insl
fildll
fxtract
stos
or
adc
ljmp
jbe
lock
cmpb
dec
insb
mov
pop
jo
dec
cmp
add
cmpsb
pop
cmp
cmp
push
jmp
sarb
mov
mov
inc
in
in
cmc
cwtl
jl
and
mov
xorb
mov
sbb
daa
iret
bound
popf
adc
sub
mov
js
cltd
out
sahf
aam
sbb
xchg
jb
pop
xor
in
xchg
cmp
arpl
and
fmul
mov
daa
mov
mov
mov
iret
mov
pop
mov
jo
sub
and
mov
ds
in
fwait
and
fidivl
pop
add
cld
jo
sbbl
mov
arpl
out
and
adc
les
add
fstps
ds
mov
adc
or
and
movsb
cli
mov
insl
mov
inc
in
add
loop
sti
xchg
negl
xchg
or
dec
and
daa
leave
mov
stc
fisttpl
test
ret
lock
out
inc
mov
stc
inc
xor
jg
mov
or
stc
jle
cmp
neg
dec
sub
xchg
mov
pop
sub
popf
cli
rclb
stos
orb
or
or
lret
cmp
xor
inc
ret
in
pop
lods
mov
movsl
pop
inc
rcl
adc
mov
jnp
mov
add
fs
xchg
jo
rorl
clc
mov
repz
pop
add
sub
mov
scas
filds
sbb
push
ja
push
adc
mov
outsb
mov
in
sbb
push
adc
idivb
pop
movsb
cmpsl
mov
insl
jge
out
cmp
data16
loopne
lret
mov
insb
fidivs
jns
or
inc
push
fstpl
ss
xor
insb
cmp
push
mov
outsb
inc
stos
push
cmp
push
push
fs
imul
loop
adc
or
push
xchg
popa
dec
pinsrw
jge
pop
push
orl
or
jbe
arpl
and
in
jae
xor
es
fwait
shl
in
or
jns
mov
jne
and
and
test
mov
or
jae
jne
add
cltd
cld
jo
iret
sub
sbb
dec
mov
pop
je
pop
fmull
jne
sub
xorb
dec
add
ret
jp
pop
cmpsb
out
popf
dec
pop
cli
pop
nop
int
pop
push
cmp
and
pop
push
cli
stc
fs
in
int3
pusha
imul
jmp
inc
sbb
mov
mov
das
cs
loopne
add
stos
adc
aaa
xchg
call
ret
jo
loopne
stos
push
das
cmp
cmp
add
lcall
fs
outsb
mov
pop
pushl
aaa
stc
mov
dec
dec
pop
aas
sub
outsl
je
ja
or
fbld
hlt
mov
pop
add
jnp
ljmp
arpl
dec
cltd
adc
imul
nop
ss
sub
mov
gs
cmpsl
mov
lock
sahf
adc
popa
into
es
cmp
adc
mov
sub
pushf
js
adc
pop
or
jno
aaa
inc
sbb
mov
leave
mov
mov
inc
push
sahf
xor
xchg
add
add
fildl
lea
cmp
test
sub
jl
jns
mov
cmpsl
jne
mov
subb
xor
pop
sahf
jmp
cmp
lock
mov
addr16
mov
mov
lret
in
jbe
jne
test
mov
ss
adc
adc
mov
pop
mov
cmp
fs
cmp
xor
mov
inc
pusha
push
mov
mov
out
mov
pop
pop
loopne
dec
andl
in
cmpl
imul
and
mov
jbe
sub
mov
xchg
jle
xor
aas
add
xchg
popa
adc
add
mov
fdivl
push
cmpsb
rcrl
dec
orl
imul
hlt
pop
push
push
cmp
push
int3
jne
sbb
je
or
iret
mov
xchg
ret
jno
insl
fwait
imul
pop
add
out
pusha
in
sarl
punpcklwd
push
shlb
mov
cltd
jne
fistl
repz
sbbl
insb
in
subb
jmp
ret
sbb
pushf
mov
ss
fcoms
imul
test
lcall
pusha
dec
lods
jmp
repnz
mov
pushf
pop
jae
jno
sahf
push
adcb
dec
sbb
pop
add
inc
fdivs
push
lcall
jnp
push
ljmp
push
pop
lods
push
jno
lods
int
and
jp
shlb
jno
ficompl
inc
xchg
popf
gs
or
movsl
movsb
sbb
arpl
popf
pop
std
arpl
xchg
enter
xor
aam
ja
mov
in
nop
clc
pop
out
fs
gs
mov
lds
jp
rolb
push
mov
xchg
cwtl
sub
pushf
cmp
aas
aaa
test
xchg
cmpsb
xchg
jns
xchg
add
pop
push
sahf
and
mov
push
mov
add
push
mov
bound
lret
lcall
ret
je
and
add
sar
cmc
in
mov
push
mov
ret
sbb
pushf
jnp
jle
add
push
push
inc
xchg
cmp
shrl
mov
fsubp
mov
retw
sbb
jbe
xor
xor
clc
ja
aad
jnp
repz
lea
adc
mov
cmp
addr16
arpl
leave
rolb
jnp
xchg
xchg
sub
cmp
scas
es
out
push
cmp
xor
sbb
lahf
mov
sub
insl
or
loopnew
mov
xchg
je
adc
mov
xor
xlat
addb
out
aaa
test
mov
or
idivl
mov
rol
push
or
cs
pop
or
dec
pop
inc
push
dec
in
stos
in
pop
rclb
smsw
mov
or
mov
lods
jg
ss
lock
shlb
jbe
stos
xor
insl
es
ja
ljmp
or
jno
icebp
sbb
push
sbb
cmpsl
jecxz
and
scas
cmp
add
cmc
rcll
lret
ret
adcl
loopne
push
hlt
sbb
and
ds
out
insb
mov
or
pop
xor
lret
in
cli
data16
hlt
and
out
sub
xor
add
jge
mov
and
stos
adcl
fdivrl
cmp
daa
jmp
add
cwtl
arpl
mov
jmp
mov
scas
pop
cmpsb
sbb
jno
cmp
pop
loop
pop
jb
xor
popf
sbbl
jno
popf
clc
pop
leave
and
fidivrl
push
push
push
ret
insl
clc
cmpsl
sub
pop
xorb
jle
aaa
inc
loopne
xchg
lahf
lds
mov
adc
jo
in
dec
sub
shll
outsb
cmp
pushf
cs
push
pusha
std
xor
mov
test
fimull
mov
dec
ljmp
subb
ja
dec
rolb
cmc
pop
outsl
mov
pop
jo
mov
jl
and
cmp
iret
inc
jl
add
es
and
mov
inc
jb
stos
outsb
ror
bound
sub
fwait
jnp
sbb
sbb
movsl
nop
cmpl
dec
loope
cmp
insb
fwait
add
inc
gs
push
or
rorb
aam
jle
add
or
ret
cmpsl
xchg
and
loope,pn
in
dec
aad
cmc
adc
mov
imul
enter
adc
lret
xchg
mov
test
clc
rorl
mov
jmp
fistl
dec
test
andl
cmpsl
mov
cmp
sbbl
or
shll
xchg
sub
mov
sbb
lret
jno
pop
clc
pop
mov
sub
pop
mov
test
add
xlat
pop
lret
test
mov
lds
into
mov
mov
popa
push
in
mov
push
js
lods
movsl
ret
cmp
aaa
lcall
in
in
jp
mov
add
cmp
popa
cmp
in
dec
dec
jp
outsb
lea
mov
xchg
shlb
out
xchg
shll
jbe
xor
jmp
popa
scas
sti
sub
sbb
call
arpl
fmul
mov
cmp
int
out
clc
mov
rorl
or
ss
pop
loopne
int3
mov
xchg
xchg
aam
test
arpl
repz
int3
ret
mov
les
data16
dec
mov
jl
cmc
xchg
outsl
aad
ljmp
jne
cld
pop
ljmp
lock
sahf
repnz
aad
mov
arpl
imul
push
ret
lock
push
inc
cmp
stos
adc
sub
aam
stc
sub
rcl
mov
adc
xchg
stos
cli
jl
int3
push
fiadds
add
leave
fisttpll
mov
idivl
sub
pop
jp
xor
in
mulb
out
cmc
fs
mov
pop
mov
mov
sbb
pop
pop
testb
adc
sub
loopne
out
lcall
adc
mov
lcall
imul
std
loope
imul
or
jg
jne
cmp
xchg
jno
shll
xlat
lea
adc
lcall
add
sbb
out
clc
shrl
ss
add
call
lock
xchg
jmp
xchg
test
cmpl
push
add
push
push
sti
stos
sti
jnp
dec
add
push
pop
push
adc
mov
inc
mov
mov
adc
stos
andb
loopne
or
mov
repz
mov
test
aad
mov
pop
or
adc
pop
fwait
arpl
cmp
subb
outsl
loop
gs
scas
push
push
roll
int
loop
dec
inc
sahf
sahf
cwtl
dec
xchg
jmp
loope
gs
pushf
andps
push
imul
dec
insl
mov
push
inc
int3
sbb
mov
mov
xor
sub
incl
int3
test
pushf
pop
jg
popf
inc
mov
stc
inc
dec
sbb
and
clc
push
incb
add
int3
jge
test
push
push
aaa
pop
cs
add
subl
xlat
dec
loop
aam
mov
aas
pusha
movsb
jno
shll
std
lea
cwtl
mov
cmp
push
les
out
mov
push
je
xor
and
mov
fsubrs
mov
jmp
lea
rcrl
jo
mov
mov
add
adc
cs
nop
jmp
cmp
movb
cltd
scas
test
cmp
lret
stc
push
sahf
pusha
mov
das
jns
hlt
lods
mov
shlb
dec
in
arpl
add
or
cmp
mov
movsl
fucom
mov
mov
adc
gs
aam
pushf
fidivl
push
mov
mov
ss
push
icebp
and
sbb
imul
testl
cmp
mov
imul
pop
mov
jb
inc
pop
lahf
inc
pop
sub
pop
int
xchg
mov
rcrl
pop
xchg
test
inc
adc
movsb
aad
clc
scas
lock
aaa
sub
outsb
popf
dec
insb
dec
jge
sbbl
fcomps
pop
scas
leave
mov
mov
loopne
pop
pusha
lods
pushf
popw
xlat
pusha
movsl
mov
loop
adc
or
insl
cmpl
mov
xor
fdivrl
enter
mov
inc
mov
mov
ds
adc
enter
jmp
sub
or
xchg
repnz
inc
mov
lods
decl
je
mov
adc
pop
xchg
adc
lock
jmp
cmpsl
lcall
flds
js
fwait
adc
and
mov
mov
and
pushf
mov
xor
mov
jno
jae
cld
dec
scas
hlt
xorl
mov
xchg
or
fmul
loop
mov
aam
add
out
dec
xchg
push
add
sub
inc
pop
xlat
xchg
aas
xchg
arpl
int3
subl
pop
push
jle
clc
inc
jmp
lods
cmp
add
mov
movsb
rorb
pop
pop
adc
mov
lret
mov
jecxz
adc
data16
fldt
lret
and
add
xor
sbb
stos
lcall
adc
fcomip
inc
adc
fdivp
push
loop
lahf
adc
cli
add
cmpb
jno
imul
repz
aam
shlb
pusha
js
scas
sar
xor
xchg
pusha
xchg
mov
fistps
cmpsl
sub
xor
mov
or
gs
mov
add
ret
xor
sub
hlt
outsl
dec
sub
movsl
ss
mov
add
mov
les
xchg
add
movsb
and
pop
stos
sti
into
mov
movsl
mov
sbb
mov
or
mov
dec
hlt
push
push
into
mov
shlb
in
xchg
int
sbb
mov
pushf
or
add
or
inc
mov
jmp
loopne
fistpll
imul
cwtl
test
xor
in
popa
mov
or
stos
in
popa
sub
loope
adc
mov
ss
dec
add
lcall
fisttpll
jecxz
sub
mov
xchg
add
insb
pop
dec
test
imul
sbb
inc
xor
xor
sbb
lods
nop
push
jg
xor
pusha
push
mov
aaa
sub
mov
sti
sbb
hlt
movsl
fmull
inc
inc
enter
lea
xchg
xchg
scas
loopne
jo
pop
loope
lea
mov
xchg
push
sbbb
xor
or
jmp
aaa
sub
pop
repz
aad
ja
cmp
mov
mov
jne
push
mov
out
dec
fisubs
push
into
call
fnstcw
cmp
jns
adc
jmp
xor
sbb
hlt
cld
stos
add
jecxz
pop
outsb
ret
jmp
pushf
popa
pop
push
mov
mov
test
ret
adc
repnz
and
pop
mov
adc
stc
cmp
mov
out
lods
jbe
mov
add
cmp
pop
test
cmp
mov
cmp
inc
loope
mov
xchg
das
movsb
mov
out
vucomiss
scas
es
and
lea
push
xor
nop
push
mov
addb
stc
ja
lret
dec
repnz
ja
cmp
xor
inc
std
in
xchg
cmp
bound
jnp
fwait
stos
or
add
dec
sub
mov
or
add
cmp
xchg
call
adc
lods
cmp
cmp
arpl
popl
adc
xor
into
fimuls
repz
lods
push
lock
mov
ljmp
push
push
dec
pop
out
lea
fnstenv
mov
or
sbb
bound
bnd
add
or
push
xchg
cmc
shlb
movsb
popa
push
ror
lahf
push
rorl
movsl
pop
push
mov
pushf
pop
icebp
sub
sub
adc
insb
movsb
in
lret
repz
mov
and
mov
push
pop
dec
pop
test
sub
sub
ljmp
push
mov
xchg
aad
add
loop
mov
jns
xchg
lds
adc
es
ljmp
pop
test
fisubs
jmp
fnstenv
stos
mov
xchg
push
int3
in
xor
js
adc
mov
jne
repz
pusha
test
xchg
or
fwait
insb
in
push
loope
std
sarl
repnz
fwait
dec
popa
add
jo
dec
stos
dec
ljmp
iret
add
lcall
pop
pushf
cmp
and
dec
push
push
dec
pop
out
dec
fnstsw
pop
popf
in
jle
inc
sub
push
cltd
mov
faddp
mov
cmp
and
xor
and
xchg
dec
dec
push
jnp
pop
mov
insb
xor
mov
dec
sub
pop
inc
xlat
repz
dec
sbb
jge
push
leave
std
pop
leave
out
jne
mov
and
add
popf
mov
popf
dec
lahf
out
sti
xor
jne
inc
xor
pop
bound
ficomps
loope
stos
mov
push
jmp
shlb
call
mov
inc
or
pushf
push
mov
sahf
push
roll
sub
sahf
cli
push
sub
cmp
add
mov
sbb
add
and
shrl
das
loop
push
aaa
cmc
push
popf
xor
jbe
in
aam
dec
icebp
ss
cmp
mov
data16
subb
xchg
add
ret
fnstenv
mov
xchg
lret
jnp
int3
xor
iret
fdivrs
out
xor
mov
and
mov
or
add
loop
lret
ss
xlat
idiv
aam
dec
cmp
mov
and
sarl
sub
int
mov
loope
das
cli
mov
xchg
sbb
cmpsl
xchg
sub
cmpsb
sub
jle
cmc
call
cmp
sub
orl
ljmp
jae
lods
out
cld
adc
adc
xchg
shr
test
mov
mov
mov
jge
pop
rorl
cltd
cmp
out
xchg
sub
sub
clc
jmp
pop
test
push
push
add
dec
mov
or
fsts
ljmp
and
xchg
inc
pop
adc
mov
xor
xor
mov
into
stos
cs
jg
and
push
mov
push
push
or
mov
sub
sbb
lock
jno
sub
lods
imul
mov
push
add
loop
fcoms
mov
or
xor
dec
mov
out
sahf
xor
daa
dec
sbb
mov
mov
in
arpl
insl
outsb
mov
mov
fistps
dec
test
dec
pop
xorb
ds
inc
push
lock
inc
push
mov
mov
stos
and
mov
fwait
je
fistpll
mulb
cmpsb
dec
nop
mov
fimull
popf
cmc
shl
pusha
repnz
inc
push
add
and
shr
pop
ja
je
pop
dec
push
mov
sub
dec
lcall
inc
imul
push
cltd
and
jl
insl
xchg
mov
pop
scas
ljmp
lret
pop
orb
adc
jmp
inc
add
mov
jle
dec
mov
jb
movl
fidivrl
aaa
or
rsm
pop
cmc
ret
pusha
ficompl
ret
or
inc
pop
outsl
enter
call
add
out
or
js
std
test
rcr
xchg
fs
xorl
outsb
pop
cwtl
xor
xchg
and
add
pop
add
mov
sbb
scas
mov
push
int3
and
adc
add
fwait
adc
mov
mov
imul
shlb
inc
in
pop
mov
xor
adc
push
fwait
pop
lods
inc
mov
mov
xor
sub
xchg
xor
adc
lcall
or
daa
cwtl
lock
sub
into
push
mov
xchg
pushf
outsl
in
mov
icebp
lcall
xchg
sub
mov
push
push
push
cli
ja
or
test
cmp
jns
sub
imul
add
icebp
ljmp
movsb
lret
fucomp
push
mov
sub
add
mov
adc
sub
sub
test
push
xchg
sub
mov
aad
jnp
mov
clc
push
push
ret
xor
xchg
sub
icebp
in
les
in
jne
sub
jae
mov
or
test
mov
xchg
gs
addl
add
mov
js
mov
pop
das
and
das
cld
mov
call
es
hlt
xor
push
hlt
shr
adc
push
lret
shlb
mov
lahf
jmp
jl
es
repz
adc
out
cmp
xor
or
mov
imul
mov
push
mov
sub
pop
and
jno
or
jecxz
cmpsb
cmp
or
cmp
call
dec
loope
jae
mov
xor
rcrl
scas
mov
push
dec
or
xor
sub
mov
fwait
jno
pusha
jmp
jo
dec
fcoms
sub
out
sbb
in
sbb
dec
push
sbb
cmpsl
push
sti
out
dec
cmpsl
jo
dec
test
sarb
jmp
into
cmp
repnz
mov
inc
xor
ljmp
loope
repnz
jb
push
mov
push
clc
test
mov
out
and
gs
ss
imul
out
xchg
fsubrs
jle
notl
ljmp
or
xchg
and
insl
subb
ffree
test
ret
jp
jp
scas
lds
jle
mov
jae
aam
dec
test
mov
jg
aad
sbb
push
mov
call
int
jnp
sar
mov
testb
or
mov
aaa
ficompl
mov
cmc
sti
mov
push
cli
dec
out
sarl
push
add
cmp
cwtl
push
adc
push
loop
das
addr16
lock
pop
sub
mov
fwait
mov
arpl
add
sbb
pinsrw
fstpt
sti
je
add
call
add
pop
ss
mov
mov
outsb
cmp
mov
imul
push
pop
fwait
mov
pop
out
les
in
lods
inc
int3
cmp
fistl
outsb
cmp
fsubs
or
push
cmp
lret
ss
lret
rorb
cmp
inc
jmp
inc
jl
fimull
pop
sti
push
xchg
and
mov
lahf
push
jge
and
or
mull
je
scas
lds
fimull
push
pop
inc
xor
pop
add
insb
ss
call
pop
mov
insl
lcall
aad
mov
sbb
cmp
pop
or
jb
out
shlb
sub
pop
popa
xchg
pop
xchg
mov
pop
lds
jp
pop
xchg
and
or
sub
add
cmp
inc
xchg
repz
mov
jo
jmp
daa
addr16
cmpsb
popa
out
lahf
pop
pop
addr16
xorb
div
xchg
fldl
jo
sbb
xchg
xchg
lods
inc
pushf
push
xor
div
adc
jns
push
repnz
lret
inc
push
vaddsubps
test
sub
aad
inc
int
or
clc
mov
mov
lahf
jmp
mov
xor
jge
mov
jae
repz
dec
xor
inc
ljmp
jle
ljmp
scas
ss
jg
push
ss
xor
jns
lock
dec
lret
adc
mov
jb
pop
xorl
and
xor
cwtl
pop
fstl
daa
out
xor
or
popf
in
push
add
mov
pop
xchg
scas
dec
popa
cli
aas
mull
call
xchg
aam
or
and
jecxz
in
add
std
adc
fstpt
jns
mov
or
cmpsl
inc
int
jg
lds
lods
fwait
aaa
shlb
out
xor
add
jno
daa
bound
pushf
pushf
lods
rcrb
xchg
scas
pop
test
mov
enter
mov
mov
bound
mov
rolb
xchg
aaa
jno
scas
sub
cmc
jo
mov
shll
dec
dec
push
es
stc
or
nop
push
or
cmc
scas
ja
dec
in
sub
test
jne
inc
push
gs
cwtl
fchs
ficomps
sub
imul
daa
xor
dec
repnz
xchg
or
into
or
stos
sub
xchg
mov
push
mov
push
adc
cwtl
and
pop
mov
orl
mov
lret
clc
push
gs
je
or
lret
xchg
fwait
xor
jle
fnsave
mov
nop
add
pushf
mov
lds
out
inc
in
test
pushf
jecxz
pushf
pusha
xchg
std
pop
mov
push
push
sarl
stc
push
lods
pusha
mov
test
lret
jecxz
adcl
int
loop
jne
lds
pop
sahf
lods
mov
push
mov
test
jne
outsl
inc
push
sbb
lret
mov
mov
lret
iret
jne
sbb
and
aas
pop
and
das
stos
leave
add
adc
arpl
callw
repnz
inc
fistl
push
add
arpl
jecxz
or
aad
push
dec
stos
ret
xlat
scas
add
stc
jl
mov
sbb
data16
fdivrl
or
jle
push
gs
mov
xor
mov
out
outsb
ljmp
sub
loop
push
sbb
xchg
xor
rorl
inc
clc
sarb
pop
cwtl
jle
pop
repz
or
outsl
dec
mov
dec
cmpsl
out
cmc
lds
and
and
inc
dec
push
xlat
imul
jmp
add
and
mov
popf
sbbl
dec
popf
call
aad
out
es
lods
xor
push
mov
mov
sbb
jnp
fwait
inc
pop
or
fists
ds
dec
push
or
fildll
mov
push
push
div
scas
adc
fidivrs
cmp
dec
in
mov
sub
loopne
pop
mov
mov
mov
andl
cmp
sbb
es
pop
test
mov
xor
xor
loope
test
jge
inc
out
sti
je
jne
dec
in
mov
sti
fs
xor
adc
sti
cmpsl
pop
xlat
push
mov
sbb
aam
inc
add
add
ret
hlt
aas
fistps
scas
iret
or
jp
fstps
mov
negl
add
lds
cmpsl
xor
mov
testl
jge
addr16
lahf
mov
clc
popa
jnp
repnz
test
inc
xchg
sbb
sbb
aad
jmp
xor
and
and
xor
pop
rorb
xlat
add
orb
dec
cmp
jnp
pop
imul
scas
adc
movsl
sub
js
mov
test
pop
mov
sbb
sbb
mov
mov
sahf
pop
inc
cmp
pop
inc
push
iret
jmp
enter
jg
das
cmp
ret
push
in
push
jl
jnp
xor
popa
mov
cmpsb
jo
sub
cmp
jl
fcmovnbe
pop
scas
js
aad
cmp
xchg
and
inc
xor
and
or
pop
cmp
pop
push
push
mov
inc
fcomps
mov
mov
cmp
mov
sbb
pop
push
xor
pavgw
xchg
lret
popf
inc
sarl
ja
adc
sbb
cmp
paddsw
shlb
out
fwait
push
cwtl
adc
inc
xlat
xchg
sub
in
cmp
dec
insb
mov
dec
into
std
push
xor
dec
lahf
jnp
ret
sub
pushf
gs
xor
addl
xchg
xlat
add
mov
sbb
ss
mov
xor
outsb
shrl
adc
adc
test
nop
xor
jo
mov
pop
test
iret
ljmp
loope
and
push
lret
mov
rclb
repz
push
outsb
sub
das
or
jae
aam
in
add
pop
mov
addr16
sarb
sbb
add
hlt
test
enter
ret
ljmp
sub
inc
xchg
add
mov
lods
test
sub
into
lret
sbb
aad
pop
inc
push
pop
cmp
inc
test
ss
mov
mov
sbb
clc
cmp
jne
xor
stos
test
dec
in
mov
loopne
sub
inc
cmp
in
sahf
push
out
dec
jnp
pop
adc
xchg
add
dec
push
in
imull
std
daa
dec
mov
jmp
pop
negb
add
and
mov
iret
test
dec
mov
fs
mov
outsl
out
in
pop
sbbl
or
dec
cmpb
inc
repnz
push
jb
ret
push
xchg
mov
insb
enter
cmc
pop
mov
inc
push
mov
lods
sbb
cli
sub
xchg
andl
jnp
xchg
adcb
repz
movsl
icebp
mov
pusha
push
pop
and
add
imul
in
push
mov
shrl
inc
outsl
dec
sbb
leave
enter
movl
jo
pop
nop
mov
lods
pop
cmp
cmp
jmp
push
pop
pop
lods
outsb
or
mov
inc
adc
xor
mov
mov
mov
fsts
bnd
xchg
pop
adcb
icebp
dec
pop
pushf
out
dec
mov
pop
shrb
inc
popf
inc
mov
cmp
fcmovb
jl
data16
pop
cmp
jb
leave
push
lea
cwtl
inc
aas
addr16
xor
sbbb
in
adc
mov
mov
ds
rorl
mov
jmp
pop
push
scas
neg
jmp
mov
nop
ja
sbb
sub
push
adc
leave
jno
jno
inc
add
lret
in
adc
mov
imull
fdiv
xor
sahf
adc
mov
or
loope
mov
xor
push
pop
xor
sub
mov
test
pop
data16
shrl
cli
push
arpl
push
jecxz
negl
xor
into
xchg
popa
hlt
ret
jecxz
pusha
into
xlat
mov
xchg
inc
sbb
xchg
sbbl
outsb
rcr
mov
ja
add
lahf
sbb
sub
ja
outsl
mov
adc
lcall
and
scas
push
lea
mov
sbb
dec
adc
pop
in
or
movsl
lahf
orb
push
aam
xchg
cmpsb
xchg
and
xchg
imul
sbb
xsha256
cmpsb
xchg
sub
imul
mov
pushl
xor
jno
test
adcb
lods
pop
test
aas
test
jl
xlat
jae
dec
clc
sti
inc
popa
das
rol
in
loope
fwait
xor
pop
insl
xchg
or
fwait
inc
lahf
add
add
pop
mov
icebp
mov
ret
loope
push
pop
out
movsb
push
sub
lret
movsl
cwtl
xchg
rclb
fwait
call
xor
add
push
inc
je
stc
stos
gs
icebp
mov
push
push
mov
mov
movsb
adc
dec
or
push
push
popfw
sahf
push
test
sub
into
push
jo
pop
push
sti
test
pop
ret
fisttpl
dec
das
out
pop
xlat
test
adc
jg
cmp
xor
xchg
adc
jnp
jmp
daa
in
xchg
ret
adc
push
cmp
leave
outsb
ret
dec
leave
pop
sti
adc
jnp
pop
scas
pop
cli
sbb
jo
fwait
std
sub
push
jge
push
or
sub
cmp
ret
dec
push
dec
push
xlat
or
cmp
and
inc
jge
js
ss
mov
sbb
addb
push
push
push
inc
xchg
jl
rcl
sar
sarb
out
lahf
sahf
xchg
test
movsb
pusha
pop
cmc
dec
jl
mov
sub
sub
enter
fcompl
push
out
pop
mov
jge
jge
sti
js
mov
xlat
in
ja
cmp
rorl
insl
idiv
in
leave
je
mov
and
adc
jb
jnp
icebp
incl
inc
shrb
clc
cli
sbb
add
and
pop
addr16
icebp
xchg
pop
test
cmp
jp
mov
imul
in
or
mov
xlat
xchg
mov
xor
push
enter
jp
mov
xor
lea
mov
xchg
mov
fwait
push
int
sub
and
int3
pop
fs
int
xchg
das
inc
sub
pop
push
out
jae,pn
popl
mov
lds
add
push
popf
jmp
mov
pop
mov
xor
or
jb,pt
xchg
daa
push
stos
mov
and
mov
in
fnop
mov
int
pop
mov
cmp
iret
lock
pop
push
icebp
rsqrtps
clc
dec
cmpsb
sbb
jl
sbb
ds
push
pop
inc
mov
out
inc
cs
movsl
sub
xchg
icebp
sbb
inc
push
xor
je
scas
adcl
outsl
mov
adc
push
add
mov
fcomps
jae
inc
push
orl
out
in
mov
add
test
mov
xchg
add
in
jnp
pop
int3
inc
and
push
jl
mov
enter
jl
mov
cltd
inc
loope
daa
decl
gs
jno
leave
mov
pop
xchg
shrl
inc
test
mov
dec
popa
insl
movsl
sbb
jne
lret
dec
sbb
mov
or
cmp
cs
fdivrp
sub
imul
pop
push
mov
outsb
adc
fisttpl
stc
loopne
decl
xchg
sahf
loop
pop
or
lds
cld
cld
in
sbb
fs
fsubrl
xchg
pop
jae
sub
mov
iret
sub
call
shll
mov
pusha
das
pop
mov
ss
adc
jno
test
scas
ja
jo
pop
mov
ja
pop
dec
or
or
mov
fs
push
or
sbb
lret
shlb
dec
sub
cltd
cmp
outsb
cmp
pusha
jns
or
add
arpl
cmp
bound
mov
ss
shl
sar
adc
ss
call
fucomip
mov
inc
and
mov
icebp
and
mov
loopne
cld
bound
xorl
mov
rcrl
and
in
jne
sub
pop
adc
test
out
orb
icebp
inc
clc
push
mov
dec
int3
mov
mov
test
repz
mov
push
cld
and
dec
mov
pop
andl
fwait
movsl
loope
xchg
or
aaa
std
dec
mov
daa
scas
dec
mov
out
repnz
push
imul
in
mov
pop
push
mov
adc
outsb
sub
push
mov
or
sbb
add
mov
lods
xchg
push
mov
dec
inc
mov
mov
shrl
sub
mov
and
cmp
push
popf
cmpl
inc
repz
sub
lea
movsb
push
sbb
aaa
loope
pop
cmp
ret
js
fiaddl
orl
or
push
jns
mov
adc
and
loopne
jp
fsubs
pop
jnp
jno
cmp
xor
insb
sti
int
jns
mov
mov
popa
pushf
ret
out
fwait
adc
aaa
pop
addr16
xor
das
inc
loope
mov
push
xor
pop
je
xor
cmpsl
stos
mov
hlt
sarl
sub
and
jmp
adc
inc
mov
add
sti
jmp
jge
cmp
jne
sarb
stos
mov
jo
nop
jnp
movsl
mov
dec
movsl
nop
pusha
push
lret
pop
pop
les
xchg
or
int3
cmpsl
cmp
stos
int3
push
scas
jne
insb
int3
sbb
adc
lds
push
pop
cmp
inc
mov
xchg
loope
mov
or
ret
test
xchg
xchg
mov
jg
inc
fcmovnb
push
and
leave
push
loop
mov
out
aam
int
mov
das
in
sub
jle
sbb
popf
add
jae
pop
fcmovnu
jne
adc
adc
inc
push
inc
and
dec
dec
cmc
test
push
lret
test
inc
sub
add
cltd
jp
adc
rdtsc
sub
push
dec
mov
sbb
or
jle
sbb
pop
mov
hlt
fidivl
fwait
dec
das
mov
mov
cltd
getsec
cmc
jb
push
mov
jge
and
int
add
das
fistpll
pop
in
jne
movsb
nop
push
shrb
adc
dec
stos
pushf
mov
rcrb
pop
imulb
loop
test
mov
loope
roll
mov
movsb
mov
lds
int3
inc
addr16
mov
jg
mov
std
xchg
sarl
xchg
jmp
icebp
push
je
int
std
lcall
fisubrl
pop
dec
sbb
or
sub
mov
mov
jns
adc
adc
xlat
cld
push
or
mov
in
cmpsb
jae
inc
cmp
jmp
fstpl
pop
fwait
call
out
out
int
idivl
loope
je
insb
cmc
aas
add
gs
jl
das
fisubrs
cmp
jno
jmp
rorl
pop
mov
mov
or
fstps
mov
cmc
push
xchg
stos
test
gs
lret
popa
adc
mov
or
and
mov
mov
shl
sub
push
pop
fimull
mov
pop
xor
cmp
loope
cmc
jl
sbb
adc
loop
in
cmp
mov
xchg
mov
mov
rol
adc
xor
into
in
inc
mov
mov
mov
inc
xor
in
xchg
pop
dec
cld
pop
outsb
shrl
jae
data16
push
rcrl
gs
int3
adc
push
add
sbb
mov
jl
mov
mov
and
nop
mov
int
test
scas
cmpl
cmpsb
repz
or
push
adc
mov
lcall
das
call
pushf
inc
jbe
imul
adc
push
scas
test
xlat
add
dec
push
cmp
push
test
add
clc
xor
and
idiv
jno
loopne
sbb
jno
loopne
mov
idivb
lods
fidivrs
aad
mov
in
mov
cmp
xchg
mov
sbb
mov
mov
push
pop
xor
mov
pop
test
dec
dec
ds
int
gs
push
mov
int
lock
pushf
add
prefetcht0
pop
das
inc
xlat
shlb
es
les
stc
sub
or
jbe
scas
jne
fucomip
dec
movsl
sbb
xor
lea
mov
clc
mov
mov
mov
rcr
nop
arpl
mov
arpl
push
addr16
clc
fistl
mov
cli
xchg
and
xor
insl
xchg
jp
mov
xchg
pavgw
sub
call
arpl
in
enter
rolb
adc
je
sbb
cmpsb
dec
repnz
popf
fcmovnu
es
inc
or
fisubl
pop
cmp
icebp
out
sub
idivl
fucomp
or
add
lock
xchg
mov
adc
sub
pop
dec
fistpll
push
mov
ret
out
inc
lods
or
mov
out
pop
iret
jge
out
cmp
inc
sbbb
jnp
faddl
les
icebp
sti
push
mov
xor
imul
lahf
and
xchg
sti
gs
or
sahf
pop
sarb
mov
pop
mov
sub
mov
inc
jmp
das
movsl
push
cmp
or
push
push
mov
cmpb
test
test
cmpsl
adc
test
mov
sbb
outsl
and
and
cmpsl
sbb
bound
dec
stc
add
fdivs
outsl
mov
scas
aas
pushl
and
notb
data16
mov
das
sbb
fidivrs
in
xor
or
xor
in
jle
aad
dec
push
pushf
jge
push
sub
mov
push
rolb
cmp
aam
xlat
add
pusha
jno
imul
pop
jb
dec
mov
cmp
fisttps
dec
ror
nop
pop
popa
push
jl
mov
inc
sarl
daa
adc
sbb
jg
cld
sbb
add
add
outsb
fildll
pop
icebp
fimull
mov
inc
cld
shr
sbbl
pop
ja
push
cmpsl
popa
push
pop
sub
addb
sbb
stos
ja
movsl
test
push
push
jbe
lahf
imul
das
and
xorl
pop
aad
push
into
cmc
mov
call
rorl
xchg
add
sar
or
mov
fdivs
outsl
and
mov
or
sbb
lods
mov
or
lods
mov
pop
xor
stc
sub
nop
fstpl
iret
mov
mov
test
lods
and
int3
push
lret
mov
pop
ljmp
mov
bound
sbbb
rclb
add
mov
inc
push
hlt
lods
lret
dec
or
mov
sub
mov
xor
xchg
pop
movsl
xchg
mov
int
and
fwait
or
add
je
xor
dec
pop
xchg
mov
push
fs
xchg
adc
mov
sbb
jno
jb
xorb
fnstcw
in
xchg
cli
sub
lods
pop
repnz
loopne
push
insl
dec
pop
call
cmpsl
movsl
cli
mov
dec
sbb
pop
cmp
push
mov
ret
cmp
add
jno
sahf
in
xchg
repnz
out
in
ss
lock
jns
sub
mov
test
pop
cld
cmp
xor
outsl
inc
mov
mov
dec
and
cmp
ljmp
sbb
cmp
inc
in
sub
stos
icebp
insl
mov
mov
clc
mov
jo
cmp
pop
xchg
add
sbb
stc
xchg
jle
and
xchg
lret
mov
cmp
bound
pusha
jp
ret
pop
sti
sbb
out
insb
cmpsl
jbe
ljmp
xchg
cmp
mov
inc
dec
add
or
pop
push
aad
leave
mov
or
and
into
loop
out
add
jle
and
movsb
int3
insb
push
and
loopne
mov
mov
push
inc
xor
adc
xchg
and
pop
in
pushf
pusha
dec
dec
mov
push
leave
fnstcw
mov
dec
push
aaa
das
push
bound
bound
inc
mov
and
and
xor
sub
out
clc
aam
fstl
ror
mov
pmulhuw
sbb
lods
xchg
inc
out
loope
test
push
sti
fadd
shl
mov
lea
testb
or
loopne
ljmp
andb
mov
jmp
mov
sub
sbb
add
sub
xchg
bound
ret
and
imul
mov
dec
mov
jecxz
ja
push
jg
loop
fmuls
mov
mov
mov
pop
mov
nop
inc
rcr
jbe
out
rcr
cmp
mov
add
lret
cmp
js
jne
pop
es
push
adc
js
mov
subl
in
push
mov
mov
xor
push
out
pop
pop
jge
std
out
cmp
inc
sarl
aam
aas
imul
fwait
mov
or
out
pop
jle
cmc
pop
sbb
pop
mov
cmp
mov
jne
push
sbb
cmp
xchg
mov
push
sahf
popf
lahf
push
push
lea
jno
rclb
pop
cwtl
xor
xchg
aad
mov
xchg
lods
pop
out
inc
sub
push
add
cmp
pop
xchg
sahf
cwtl
mov
je
sahf
jl
inc
into
sbb
repnz
pusha
test
hlt
movsb
jne
sbb
in
push
jno
in
mov
or
and
daa
lods
jmp
test
mov
mov
mov
loope,pt
ret
imul
add
push
test
mull
pop
mov
mov
insb
ss
or
std
pop
xor
idivb
add
mov
pop
xchg
xor
imul
mov
dec
outsl
xchg
loope
fcompl
lods
test
pop
lahf
ds
xchg
out
and
cmp
or
inc
mov
pop
jb
pusha
jne
mov
pop
sbb
push
test
pop
data16
shl
pop
push
sub
aaa
pop
out
jle
mov
aad
xor
sub
sbb
sub
sbb
xchg
cmp
push
sub
ror
and
jae
inc
and
repz
fmuls
movsl
in
mov
mov
mov
fisttpll
mov
int3
outsl
mov
adc
movsl
xor
sub
cmp
js
adc
add
cmpb
rcr
mov
lahf
pop
repz
lcall
in
and
jp
adc
pop
mov
ljmp
mov
sub
lret
cmp
rol
push
lock
mov
sub
inc
shll
push
lret
rcrl
jge
push
or
pop
inc
and
cmp
sti
cmc
adc
jae
xorb
sub
repz
sbb
sahf
imul
adc
scas
aaa
pusha
scas
push
pop
sub
mov
mov
sub
aas
subl
movsb
ret
mov
cs
outsb
xor
shr
mov
mov
repz
fsub
add
mov
jecxz
js
popa
test
push
add
inc
and
out
pop
dec
and
pop
aas
sub
sti
pop
push
jp
mov
and
fsts
xor
jl
insl
mov
movsb
pop
cmp
adc
lods
sahf
cmp
in
out
jbe
jb
dec
push
xor
icebp
mov
insl
or
xchg
sarb
dec
insb
popa
inc
jne
aaa
insl
jb
pop
std
jno
push
lea
jno
lea
stos
dec
aam
mov
dec
or
pop
dec
andb
xchg
and
or
mov
inc
jmp
pop
fdiv
mov
mov
pushf
push
imul
test
or
sbb
sub
test
xchg
adc
push
repz
add
push
mov
shrl
mov
inc
push
add
sub
pop
ret
loop
pop
test
or
jb
sub
lret
inc
js
jnp
test
jge
jno
movb
rcr
lret
jmp
dec
daa
xor
xor
into
pusha
or
mov
int3
pop
gs
js
mov
arpl
mov
inc
lods
fucomi
xor
fwait
adc
out
and
insb
xor
ljmp
jne
cmp
jmp
daa
sbb
leave
mov
push
sarb
and
inc
push
lods
xor
mov
je
nop
inc
xor
in
inc
cwtl
loope
daa
cmp
xchg
pop
push
push
cmpsl
mov
mov
roll
scas
inc
mov
out
mov
loope
fsubl
movsl
les
push
es
fsubrp
add
outsl
pop
insl
in
or
dec
push
xchg
cmp
in
xor
push
mov
lea
mov
pop
incb
adc
and
sub
pop
mov
sub
loop
xor
jne
sbb
pop
punpckhwd
ja
cmp
movsb
adc
lahf
inc
xor
mov
stc
inc
mov
sbbl
jno
sarl
mov
ficoml
test
ret
xor
and
sbb
fsave
add
push
adc
mov
into
rorb
mov
mov
jno
pop
jae
sub
sbb
xor
push
scas
pop
sahf
das
cmpsb
sub
dec
push
mov
bound
mov
sbb
xor
dec
pop
mov
lods
cmp
rorb
mov
and
leave
icebp
lcall
ljmp
jb
fistpll
jno
or
inc
push
push
cmp
mov
aas
out
adc
cwtl
into
leave
cs
scas
inc
mov
push
sub
stc
push
popf
jbe
ficomps
sub
fwait
inc
adc
cwtl
lcall
nop
jno
fld
mov
aad
cli
inc
ret
sbbb
inc
test
adc
arpl
jl
jle
pop
lds
mov
push
cmp
mov
pop
sub
jno
pop
fldl
xor
push
xor
lidtl
xchg
inc
icebp
mov
add
data16
mov
push
adc
mov
stc
loop
lret
iret
sbb
push
fwait
or
ja
imul
insb
sahf
add
sahf
test
imul
xchg
shrl
idivb
stos
aas
imul
stc
sub
call
and
out
jae
sbb
loope
int3
ret
fdivs
fnsave
dec
stc
sub
push
mov
es
loop
lcall
leave
jae
jecxz
sbb
dec
ja
shr
sub
sub
push
inc
in
jge
addl
clc
mov
inc
push
lods
sahf
aaa
pushf
add
lea
and
je
jp
sbb
js
mov
mov
mov
mov
imul
dec
out
add
jne
sti
sbb
sahf
or
addr16
bound
sbb
or
sub
sub
hlt
ja
mov
mov
push
xchg
jns
pop
xor
push
cmpsl
add
adc
lock
xor
cmp
mov
xor
push
subl
mov
loop
sub
or
inc
pop
je
inc
xor
pushl
adc
scas
fcomip
cwtl
mov
jae
sbb
fldcw
rorl
cmp
pop
sbb
inc
pop
lds
es
mov
jae
call
pushf
jl
pushf
cmpsl
inc
jl
push
jge
dec
aam
imul
xchg
repnz
inc
popa
arpl
out
in
pop
fisttps
fstps
inc
cmp
mov
addr16
cmp
clc
adc
pop
adc
xchg
push
add
in
add
jle
int3
test
inc
pop
test
stos
roll
mov
push
xchg
xor
xor
pop
fcompl
xor
push
jne
shll
inc
dec
lcall
xchg
les
les
loope
lods
in
or
dec
inc
mov
sbb
ja
mov
aas
cli
std
stos
dec
cmp
xchg
mov
mov
or
mov
aas
push
mov
into
movsl
jmp
push
xor
add
add
test
rorb
add
ss
jnp
push
inc
pop
popa
mov
insb
cmpsl
or
or
cld
out
dec
sbb
cld
ss
add
jecxz
lret
cwtl
fnstsw
xchg
pop
in
rclb
movsl
dec
call
repnz
adc
incl
loope
jnp
sub
jb
inc
adc
or
loopne
pop
push
adc
and
pop
and
cmp
mov
or
inc
rsm
xor
adc
xor
push
add
push
arpl
push
divb
jg
dec
call
pushf
out
cmc
iret
add
inc
add
in
add
bound
inc
cmp
jp
dec
enter
jle
lret
jmp
jb
dec
and
lock
mov
stos
and
sbb
arpl
sbb
loop
dec
loopne
pop
addr16
in
mov
jae
xchg
pop
icebp
add
pop
aas
pop
pop
rcr
lods
call
icebp
out
notl
jo
ds
cmpsl
fadds
sub
mov
jp
adc
sub
push
sbb
push
add
and
push
adcl
push
push
mov
mov
jg
sub
imul
xor
inc
int
mov
insb
into
and
xor
jae
int3
sbb
add
cmp
and
mov
or
mov
adc
mov
jbe
adcl
xchg
mov
aam
lahf
popa
jbe
pop
cmpsl
mov
popa
sbb
mov
fs
mov
jg
xchg
ljmp
push
or
dec
ds
movsl
out
jl
int
cmc
lock
in
mov
jg
mov
mov
cli
inc
inc
enter
pop
je
out
push
sbb
pop
fldl
xchg
and
inc
adc
push
xor
ficompl
pop
mov
sub
es
cmpl
dec
std
cli
xchg
xchg
dec
stos
xor
cmc
jo
push
or
je
fisttpl
xchg
xchg
scas
ss
sbb
push
daa
nop
push
or
add
xor
stc
mov
into
push
xlat
lret
adc
push
test
lods
sub
scas
iret
or
push
sbbl
out
shrl
out
xor
iret
jb
aas
and
shll
incl
jp
mov
mov
push
in
add
cmpsb
insl
push
call
xor
cmc
in
jnp
ss
jmp
mov
and
jg
jg
lods
xchg
xchg
mov
mov
push
cltd
inc
test
scas
sahf
pop
pop
dec
fwait
add
xchg
cltd
ret
sbb
xor
pusha
and
sarl
pushl
add
add
stc
outsb
mov
xor
push
outsl
sub
notb
rclb
add
xchg
add
mov
rcr
pushf
sub
popa
aas
cmp
fs
fidivrl
stos
add
inc
jl
adcl
popf
into
jnp
xchg
mov
popf
adc
int
lds
shlb
adc
ret
inc
fadds
loope
in
push
cmp
icebp
dec
xor
sub
iret
jge
pop
pop
add
das
scas
jno
push
jae
lret
lcall
and
insl
push
pop
mov
xchg
bnd
mov
xchg
int3
jo
out
inc
orb
mov
add
aad
xor
loop
call
cmpsl
xor
jle
mov
and
xchg
xor
out
dec
fwait
xchg
or
push
adc
sub
mov
jg
mov
testb
es
rorb
mov
or
sub
jl
gs
mov
imul
and
ljmp
xor
in
das
lea
cmp
test
rclb
out
dec
notb
mov
lret
test
aam
int3
ss
out
sbb
pop
sti
push
push
aaa
popa
mov
lcall
jge
xor
adcb
test
aam
xchg
mov
adc
jp
nop
fimull
cwtl
add
cli
jno
xor
sahf
mov
aam
fnstsw
ret
xor
js
adc
pop
inc
mov
jle
add
aad
mov
jmp
and
fsubrs
lret
imul
pop
fcoms
scas
hlt
cmpsl
enter
jl
addr16
add
inc
xchg
imul
xchg
out
aam
jb
xlat
orb
fs
aad
jbe
incb
sub
mov
mov
cmpl
lret
adc
ljmp
loop
ficoml
mov
decl
ss
pop
lods
mov
inc
mov
and
sub
pop
mov
jo
outsl
mov
scas
shrb
dec
xchg
dec
shll
rcrl
fsubl
sub
push
pushf
aam
orl
pop
fadds
pop
jg
push
mov
xchg
lcall
into
push
test
lods
lret
push
test
jae
outsl
xchg
mov
mov
data16
or
dec
mov
movsb
test
sbb
test
mov
js
fwait
cmp
into
push
pop
ljmp
test
and
movsl
mov
lahf
cmp
jg
mov
movsl
mov
mov
mov
imul
outsl
xchg
sub
dec
imul
jge
scas
inc
mov
in
or
lret
imul
pusha
out
insb
push
mov
or
add
ss
inc
push
add
rclb
int
stc
stos
mov
ret
fsubl
loopne
or
in
lret
test
cmp
xor
pusha
mov
pop
call
mov
ficompl
std
cs
dec
xor
push
int3
jne
mov
dec
jo
mov
inc
jecxz
and
sbb
test
cmp
xor
imul
cmc
sub
lods
push
or
cwtl
xor
cmp
xor
pusha
mov
adc
les
movsl
jmp
enter
les
jno
ljmp
mov
mov
mov
daa
mov
out
bound
insl
mov
testb
int3
in
fisubrs
pop
mov
mov
mov
daa
adc
callw
mov
xor
xlat
fbld
mov
cmp
ds
push
cwtl
ss
push
xchg
cmp
scas
add
or
mov
jbe
popa
or
fstp
in
popf
scas
jmp
pop
add
jb
and
xchg
pminub
mov
push
test
push
jg
shll
cmpsb
cmp
jb
or
adc
ja
fdivrs
sbb
pop
add
mov
lea
xchg
and
xor
jb
lahf
pop
loopne
mov
adc
stos
push
out
mov
dec
cwtl
and
mov
jmp
in
jb
lock
aaa
aam
ja
add
outsl
fisttpl
xchg
mov
hlt
aaa
push
push
stc
clc
insb
xchg
mov
rcrl
fwait
jge
iret
adc
pusha
lcall
sti
aas
inc
enter
test
call
int3
mov
out
inc
xlat
sub
outsl
push
mov
repnz
add
enter
fisttpl
xchg
test
shlb
loope
ret
pop
xor
xchg
int
lods
pop
addl
xor
pop
aam
mov
roll
push
adc
clc
js
add
leave
adc
jecxz
lcall
cli
aam
push
movsb
shrl
cli
das
cs
movsl
pop
ret
call
fists
jle
scas
out
xor
rorl
xor
lods
in
xchg
lock
xchg
xchg
dec
mov
add
and
xor
adc
mov
inc
rcrb
sbbl
mov
lds
pop
rcll
jg
nop
mov
xchg
fsubrp
and
dec
jmp
hlt
mov
pushf
aaa
mov
arpl
popa
mov
pop
movsl
jbe
stc
lock
or
jmp
jb
nop
insb
add
loopne
out
lcall
out
loope
out
sti
add
inc
cmp
jne
cmpsb
sub
rorb
negb
in
push
fwait
add
cmc
add
sbb
js
mov
jmp
repz
rcr
xchg
into
xor
jne,pn
popf
test
test
xor
loop
adc
lods
jne
xchg
cmpsl
pop
das
loope
or
and
lock
repnz
out
push
and
pop
icebp
and
lea
dec
cld
out
stos
adc
adc
leave
add
inc
mov
or
lret
push
push
dec
lret
dec
inc
divl
fsubp
sbb
decl
sub
pop
gs
push
iret
cld
loopne
outsb
es
cmpsb
cmp
enter
xchg
mov
imul
mov
andps
out
cld
jp
mov
sbb
jmp
mov
mov
adc
mov
ficompl
in
data16
push
jbe
mov
mov
rcr
xor
out
xor
mov
shr
nop
roll
push
adcb
push
sbb
mov
fs
stos
aas
sub
or
add
xlat
inc
jbe
cld
jns
sarb
stos
sub
inc
scas
stos
mov
fcmove
inc
test
push
aam
mov
mov
movsl
fcoml
test
std
xor
movsl
and
sbbb
into
pop
scas
pop
or
out
mov
scas
add
into
or
xchg
sub
lahf
push
inc
xor
ror
jne
je
stos
mov
je
adc
xor
push
lods
ret
imul
je
adc
push
ret
out
xchg
scas
lods
inc
mov
xor
jmp
sub
scas
add
xchg
push
xchg
pop
sti
mov
int
lret
or
mov
fldl2t
pop
mov
das
jnp
fidivrl
mov
push
inc
pop
data16
mov
mov
ss
and
mov
jl
xchg
aaa
fstenv
cltd
call
data16
call
sub
sub
xchg
je
cli
lret
les
and
xor
cwtl
adc
pop
data16
adc
sub
xchg
mov
lds
int3
xchg
leave
out
mov
or
mov
test
lock
mov
add
and
dec
lret
aas
sub
ja
ss
push
shlb
dec
data16
mov
orl
fildll
ss
es
or
ja
cmpsl
mov
xor
mulb
insl
stc
mov
rol
xchg
cld
ja
addr16
cltd
add
push
pop
fs
subb
loope
lahf
in
pop
adc
push
sub
sahf
mov
repnz
mov
mov
mov
lret
flds
xchg
js
shrb
in
call
pop
lcall
hlt
mov
repnz
push
cmp
les
mov
fldl
test
icebp
pop
fcomp
psraw
lds
dec
mov
dec
fstpl
jle
xor
push
lret
add
sbb
test
push
lahf
jae
shlb
dec
pop
sti
gs
and
cmc
and
lods
xor
movsb
subb
mov
dec
and
addr16
inc
mov
pop
ljmp
pop
pop
jnp
mov
cltd
mov
aam
mov
push
sti
out
cmpb
enter
lock
add
lods
ja
movsb
push
pop
inc
mov
jnp
shr
test
subb
jge,pn
es
cmpl
popf
mov
and
jge
add
lret
divl
cmp
repnz
dec
mov
xor
add
lret
mov
movsb
pop
clc
hlt
leave
cmc
mov
out
mov
mov
cld
add
mov
pop
shrl
fnstenv
mov
sub
push
mov
std
lods
mov
or
cmpsl
stos
pop
push
inc
push
aam
cli
inc
cmpsb
pop
das
ljmp
popf
adc
int3
cmp
sbb
add
mov
pop
and
mull
adc
imul
xlat
movsl
xor
sub
xchg
mov
jmp
int3
scas
sub
mov
loope
inc
lods
cld
scas
push
add
dec
jb
fimuls
push
sub
sbb
sbb
in
dec
ja
mov
push
cltd
cmpsb
loop
push
jp
out
mov
test
cmpsb
mov
hlt
cmp
mov
sub
outsl
cmp
add
sbb
int3
adc
movsl
inc
mov
jb
and
ds
sbb
pusha
sbb
shrb
dec
inc
xor
jmp
pop
fcoml
cmpsb
push
push
lock
lods
call
clc
inc
pop
mov
jno
jne
dec
pop
lret
mov
fs
mov
xor
jl
xchg
ret
and
mov
pushf
arpl
arpl
out
xchg
test
test
aas
std
inc
push
push
jmp
add
inc
sub
cmp
mov
rclb
adcl
out
mov
test
or
je
mov
fnstenv
jmp
pop
mov
mov
xchg
cmp
sti
or
das
jmp
fcmovnu
cmp
mov
sub
adc
mov
stc
in
lds
lret
repz
arpl
lret
or
lret
xor
adc
popf
loope
push
jl
in
mov
inc
inc
lea
les
test
add
add
sbb
shr
mov
pop
aam
test
fisubs
je
jno
push
out
sbb
mov
rolb
int3
stos
stos
test
sti
add
je
sbb
xor
fisttpl
daa
rcl
icebp
shlb
lret
mov
jo
cmpsb
and
enter
ret
test
loop
pusha
jno
out
in
or
iret
sub
loopne
mov
cmp
std
insb
mov
pushf
lock
inc
fnstenv
fsubrl
shlb
pop
dec
adc
jae
cltd
sub
lods
iret
add
test
push
rep
adc
and
dec
or
enter
repnz
fprem
shrb
dec
cmp
push
add
mov
push
mov
xchg
jle,pn
mov
dec
lock
lret
pop
bound
lock
push
mov
pop
or
mov
add
outsb
adc
inc
add
insb
and
inc
cmpsb
adc
push
cwtl
jns
ret
cmpb
clc
mov
dec
aas
mov
or
test
icebp
ss
mov
bound
mov
mov
add
mov
jne
lret
repnz
data16
and
add
cmp
mov
push
add
ret
ss
fwait
pusha
and
lods
push
pop
pop
cmp
fistps
rcll
cmp
or
mov
fucomi
pushl
xchg
insb
add
lods
push
mov
and
test
push
add
insb
adc
insl
xchg
outsb
and
add
cli
cld
fwait
loope
shll
je
lods
loop
push
cwtl
mov
sub
pop
pop
pop
pop
fdivl
sbb
adc
pop
sub
outsl
lret
sarb
xchg
imul
in
pop
ljmp
fadds
adc
xor
movsb
jmp
dec
push
lods
aas
pop
jbe
repnz
mov
xor
call
pop
int3
pop
pusha
pop
sbbl
pop
cmp
cmpsl
jbe
add
or
jle
ret
andb
or
mov
and
sub
adc
rclb
sub
xchg
sahf
imul
sbb
dec
xchg
cmp
fiaddl
lds
mov
jp
shll
inc
repz
hlt
xchg
sub
sbb
ror
mov
sbb
xchg
cld
js
lret
cli
shrl
mov
dec
add
dec
push
mov
fidivs
inc
movb
pop
push
xor
push
jp
daa
dec
mov
add
adc
mov
and
fildl
sti
dec
mov
mov
xchg
test
int3
loop
add
sub
int3
call
int
fbstp
adc
push
push
xchg
leave
xlat
ss
ja
push
pop
cltd
mov
lret
jg
adc
repz
ret
cmp
push
mov
xchg
adc
jecxz
es
xor
rcrb
or
sti
inc
inc
cmp
sarb
lret
iret
jmp
or
stos
xchg
and
jb
and
insl
dec
sub
inc
inc
xchg
fdivl
push
int3
aaa
imul
std
adc
push
inc
jle
pop
mov
fidivs
and
mov
mov
pop
xchg
pop
cmpsl
test
cmc
dec
loope
adc
stc
jo
rorl
addr16
fwait
loope
sahf
pop
inc
cmp
adc
cmpl
popf
pop
mov
xor
hlt
ret
popf
ja
push
jae
sbb
or
mov
in
fs
dec
lods
pop
adc
cmp
loope
dec
popa
call
addr16
in
inc
cmp
or
inc
xor
push
cld
repnz
xchg
fwait
sub
lock
xor
add
popl
sbb
dec
xchg
inc
fldcw
in
aas
jmp
jnp
dec
pop
fdivrs
mov
inc
sti
xchg
jne
cs
das
or
adc
bound
stos
mov
lock
gs
stc
dec
and
mov
rcrb
cmp
int
or
add
cmp
push
test
jo
divl
push
lret
push
sub
jae
jle
dec
fidivrl
jg
jns
pusha
popa
dec
fstpt
xor
xorl
idivl
xchg
cmc
push
in
and
es
out
push
call
xorb
insb
xchg
orl
mov
jecxz
nop
push
mov
xchg
and
cmp
pop
dec
pop
imul
test
mov
test
scas
jno
jnp
cld
cmc
test
xor
imul
ret
fidivl
pop
cltd
loop
pop
imul
aad
push
scas
adc
mov
mov
mov
out
nop
movsb
addr16
xor
adc
adc
sub
push
xchg
fs
cltd
jae
or
int
inc
imul
fwait
lret
mov
ror
mov
ret
adcb
pop
dec
xchg
and
insb
daa
add
dec
cmp
insl
ficomps
inc
stos
andb
fsubl
ljmp
pop
pop
mov
ret
xor
mov
cmp
shll
ret
dec
incb
faddl
or
imul
pop
mov
dec
call
int3
sar
adcb
mov
push
or
jae
shlb
add
or
and
idiv
shlb
fmuls
sub
movsb
lock
add
rclb
inc
push
in
ljmp
push
inc
jae
adc
xor
inc
jl
leave
ficoms
rcrb
bound
xor
in
sub
cmp
mov
das
or
inc
jnp
aaa
jle
cmp
divps
adcl
xchg
data16
lods
inc
lret
fsubrl
mov
mull
dec
sub
std
lret
xchg
add
imul
lcall
pop
mov
add
pop
mov
imul
sbb
xchg
mov
mov
add
add
mov
mov
xchg
pop
inc
pop
addl
mov
ss
icebp
sub
dec
push
fsubl
pop
jle
movsb
in
je
mov
adc
cli
lea
enter
fcompl
add
adc
arpl
gs
sub
jle
lcall
sub
ljmp
xchg
push
std
inc
mov
movsl
pop
pop
inc
add
xchg
pop
mov
cmp
xor
dec
fsubl
jle,pn
fucomip
movsl
daa
aad
jo
and
in
push
test
mov
and
sarl
lea
or
sbb
movsl
and
pop
dec
push
pop
or
push
add
dec
rolb
iret
cwtl
xchg
sbb
mov
daa
push
adc
fldl
loop
test
inc
xchg
movsl
adc
jge
movsb
gs
in
push
sbb
lret
and
out
or
std
lods
push
ficomps
icebp
jp
adc
sbb
pop
xchg
inc
mov
out
cs
nop
adc
roll
adc
and
sub
rcr
mov
and
add
into
mov
stc
push
mov
xchg
adc
pop
adc
jmp
and
negl
mov
or
jnp
loop
mov
jg
push
aad
adc
inc
push
pop
or
jl
jg
popf
aad
adc
and
jle
into
lds
test
loope
adc
rcrb
and
fadds
sub
pushf
int
xor
cs
jg
lods
scas
das
inc
dec
lods
xor
es
enter
lods
popa
scas
dec
pop
sbb
mov
cmpsl
sahf
jle
scas
in
mov
repz
pop
xor
notb
dec
cmp
adc
insb
push
adc
fs
addl
stc
xor
jbe
in
movsl
sub
sub
dec
add
push
adc
pop
gs
jg
mov
inc
sub
stos
inc
inc
push
dec
sbb
add
inc
xor
lea
jge
mov
push
pop
or
push
jb
mov
mov
pusha
repnz
mov
and
and
shrb
lock
dec
dec
dec
sbb
scas
jno
inc
add
mov
lods
fwait
ret
test
and
cwtl
sub
rcll
mov
mov
aad
jp
or
test
subl
scas
mov
dec
cmp
mov
xchg
sbb
test
fildl
xor
cmpsb
cld
mov
adc
inc
xchg
dec
pop
xchg
lcall
idiv
shlb
or
pop
xchg
fsubs
pushf
movl
inc
cmp
xchg
subb
mov
cmp
add
movsl
mov
or
gs
pop
out
pop
pushf
scas
dec
mov
jb
inc
adc
xchg
or
testl
pop
or
clc
push
push
daa
int3
mov
mov
fistpl
push
dec
add
roll
mov
jmp
fmuls
mov
xchg
sarb
dec
fisttpll
jae
notb
das
fwait
adc
inc
jecxz
mov
push
fldl
je
or
shl
dec
test
dec
or
and
cwtl
scas
fldt
fnstenv
fwait
xor
aaa
mov
jecxz
sub
aam
cmp
out
mov
out
jb
jbe
fdivs
iret
std
cmpsb
sub
scas
xchg
mov
ficoml
stos
add
aad
pop
testl
add
mov
shl
cmp
in
cwtl
xor
inc
lret
aas
mov
leave
nop
cltd
das
xorb
pop
int3
jbe
mov
jl
adc
ss
pop
ds
aad
mulb
jp
icebp
loope
xor
and
lcall
icebp
dec
and
aaa
lret
jae
rcll
test
rcll
movsb
xchg
pushf
pop
sub
imul
xchg
out
pop
inc
sbb
mov
ds
jg
mov
push
or
adc
xchg
adc
addr16
outsl
je
mov
gs
mov
outsb
push
cmpl
rol
mov
std
push
cmp
aad
cmc
rclb
cmpsl
and
sahf
movl
add
push
rcrb
add
xor
adc
push
in
jmp
lds
jp
mov
fs
popf
cli
adc
jle
popa
sub
or
popl
clc
cmp
cli
xchg
pop
popf
dec
cmc
or
mov
lret
mov
inc
shl
fimuls
or
mov
idivl
adc
mov
jnp
aam
adc
xchg
fisttpll
sub
mov
into
push
mov
inc
stos
js
call
mov
mov
jge
ret
push
cmp
or
cmp
cmc
inc
push
jo
inc
ds
outsb
add
cmc
shlb
push
test
and
arpl
ret
pop
mov
loope
jbe
ffree
xchg
scas
cwtl
push
call
scas
in
sbb
jmp
pop
shlb
clc
fists
pop
mov
fcompl
cmp
and
dec
scas
add
testl
andl
xor
pop
test
xor
icebp
ljmp
lds
and
push
lods
fidivrl
mov
in
mov
push
sar
inc
mov
rorb
add
fcmovnbe
cmp
mov
mov
xor
fistpl
push
movl
mov
cld
xchg
gs
aaa
dec
andl
cld
and
dec
cltd
cmpsb
loopne
imul
sbb
pop
add
aas
int
jp
sub
mov
push
push
popf
cmpsb
push
popf
inc
mov
sbb
outsb
jp
and
xchg
stc
ret
enter
or
xor
pop
push
sub
add
jno
fstl
sbb
mov
or
mov
shl
mov
mov
enter
mul
push
mov
scas
mov
xor
dec
ja
fwait
dec
mov
xchg
popa
adc
aam
imul
or
mov
cmp
cmp
add
gs
cmpsb
xchg
lahf
out
push
out
fcomip
das
cwtl
cld
add
jnp
sub
leave
cmp
sub
popf
pop
add
popf
dec
xor
outsb
bound
push
xor
and
lock
mov
aam
inc
rcrb
mov
pop
scas
pop
xor
sahf
ljmp
and
fwait
pop
sbb
push
or
cmp
mov
imul
shll
adc
mov
jl
in
rcll
pop
gs
clc
xchg
mov
mov
lcall
inc
mov
jno
dec
std
mull
leave
push
cmp
mov
add
xchg
das
sub
jp
inc
xor
xchg
call
das
aaa
mov
mov
nop
sub
cwtl
mov
fnstcw
mov
and
inc
add
insl
ljmp
fnsave
push
xchg
mov
adc
cmp
add
add
and
mov
ja
ja
push
leave
jb
xchg
pop
nop
push
pusha
xor
shlb
or
incb
cltd
je
push
inc
dec
push
xlat
add
cmp
inc
xor
dec
adc
or
ja
ja
or
outsb
sarl
sbb
movsb
loop
mov
xchg
scas
mov
sbb
sbb
add
and
popa
cmp
xchg
xchg
aam
mov
sbb
ja
mov
jp
mov
movzbl
aas
repz
popa
mov
call
push
lods
dec
je
gs
dec
xlat
mov
xor
xorb
adc
bound
jbe
cmp
add
pop
int3
mov
out
or
dec
sub
push
rclb
xor
lahf
insl
xor
add
out
mov
jbe
sbb
mov
cs
adc
xchg
lods
add
arpl
in
sub
sbb
mov
ret
or
cmc
push
test
ss
and
jmp
cltd
iret
jp
sarb
lock
and
nop
repnz
sub
mov
sub
loop
fwait
loope
sbb
add
rcrb
mov
mov
repz
data16
das
fisubrl
mov
aas
js
stos
sub
jge
cs
incl
fcompl
shlb
or
cmpl
and
xor
in
cld
call
mov
xchg
adc
int3
ret
xchg
repz
cmp
lea
rcr
sbb
ljmp
imul
add
dec
pusha
div
or
jmp
pop
or
jecxz
std
orb
fmull
xchg
hlt
aaa
xchg
or
outsl
test
in
movsl
add
mov
cmp
aam
lods
lret
cltd
cmp
mov
imul
fidivs
xchg
sub
mov
jno
add
mov
cwtl
mov
lea
insl
xchg
hlt
cmp
cmpsl
pop
loope
inc
or
mov
mov
sbb
in
push
out
mov
out
xor
sub
sub
test
sahf
std
fld
imul
lea
addr16
push
outsb
hlt
mov
ds
lods
mov
cld
pop
xor
scas
sub
mov
sbb
jmp
or
aaa
or
mov
in
clc
adc
jne
jns
add
and
cld
rorb
aaa
inc
loopne
pop
pushf
push
sbb
cmpb
pop
ret
mov
mov
mov
dec
in
out
daa
xchg
aad
and
jns
stc
mov
test
jbe
pop
fists
shl
gs
fisttpll
fidivrs
cli
jg
fwait
pop
cmpsb
add
inc
iret
sarb
lea
mov
inc
mov
push
or
or
inc
stos
pop
jmp
and
sub
add
adc
cmpl
cmpsb
push
adc
cmc
cmpsl
rcll
fwait
xchg
incb
call
jmp
clc
jb
repnz
fs
outsl
xchg
stos
xlat
push
ret
pushf
ds
mov
fisttpll
mov
cmpsb
mov
test
movsl
cmc
shll
jne
inc
or
sbb
sar
or
jg
xlat
add
xchg
fidivrl
cmp
mov
mov
or
lods
loop
fsubrl
fsubr
das
add
jae
stc
divb
pop
decb
sub
mov
out
jmp
jne
pop
nop
ss
add
cmp
mov
mov
icebp
stos
inc
cld
jns
pop
loopne
pop
lea
orl
xorb
iret
sbb
int3
lds
std
cmp
sbb
adc
inc
jo
bound
jb
ret
loopne
out
and
sahf
cmp
call
jbe
stos
push
into
push
test
pop
int3
dec
inc
insb
js
rep
stos
hlt
and
rorl
divl
jl
loop
mov
pop
fnstenv
add
cmc
sbb
lret
shlb
mov
xor
and
ret
jmp
mov
popf
and
cmpsb
inc
fidivrs
mov
dec
lods
dec
mov
sbb
popf
mov
lock
lods
mov
aas
mov
xor
sub
popa
ret
xchg
sbb
in
pop
cmp
mov
rorl
fistl
adc
and
adc
or
jno
rcrb
pop
mov
adc
testb
cmp
orl
jp
aam
rolb
inc
in
mov
pop
lcall
stos
insb
int
xor
out
mov
mov
fldl
scas
push
call
fs
push
fisttpll
mov
inc
test
jae
andl
rcrl
stos
cmp
cld
mov
pop
std
aas
filds
jae
sub
pop
jne
mov
pushf
mov
clc
jp
dec
jecxz
mov
in
ret
pop
mov
mov
push
cmp
mov
pop
dec
cmpsl
pop
aaa
push
xor
mov
pusha
push
push
cwtl
popf
pop
imul
out
inc
xchg
or
add
jp
cmp
jno
loop
jbe
dec
dec
jns
rcl
aam
push
add
lea
mov
stos
popa
lcall
lahf
loopne
mov
mov
cli
push
and
xor
ja
mov
js
cmpsl
hlt
scas
xor
pop
pop
arpl
sbb
stos
mov
xchg
pusha
mov
jnp
sub
jmp
int3
jnp
dec
cmp
in
stos
pop
mov
adc
data16
dec
jae
jae
ljmp
sbb
cmpsb
add
rorl
push
stc
mov
jne
xchg
jo
mov
sbb
es
aad
lret
xor
ficoml
and
jge
mov
lods
clc
movsl
pop
fwait
leave
dec
divl
outsl
or
lods
jmp
lods
insb
in
bound
push
jmp
sbb
out
lods
jnp
jle
mov
lcall
in
push
addr16
fildll
fcomp
lds
xchg
movsl
dec
mov
dec
js
sahf
pop
cmc
nop
adc
outsl
mov
cmp
mov
mov
mov
mov
xchg
cmp
nop
loopne
or
bnd
add
neg
insl
test
xor
aad
xor
pusha
mov
cld
dec
mov
lcall
ret
sub
bound
adc
push
adc
mov
pushf
push
dec
arpl
mov
lods
pop
dec
or
aam
mov
mov
aam
loopne
lock
push
xor
sub
sti
int
aaa
loop
out
and
fidivrl
call
lods
pop
cwtl
lret
sub
mov
cwtl
xchg
aam
fsubrs
or
int
mov
scas
stc
ljmp
xor
out
sub
xchg
adc
seto
sahf
mov
sub
repnz
fimuls
xor
daa
cmpb
add
scas
sahf
pop
rorl
xor
test
jmp
fyl2x
enter
ds
push
lahf
sub
nop
out
dec
dec
icebp
divb
pop
loop
pop
lret
sbbl
aad
cmpsl
mov
adc
dec
cmp
sbb
mov
lea
and
push
inc
pop
cli
jae
xor
dec
stos
push
inc
cli
pushf
adc
stos
inc
jecxz
or
pop
popa
inc
xor
jbe
sarl
popa
lods
sahf
mov
jnp
jne
mov
sbb
cwtl
addl
mov
aas
pop
mov
dec
cmc
dec
sub
pop
pop
adc
pop
sbb
sbb
xor
cli
push
cmpsb
stos
stos
cmp
mov
cmp
out
or
pop
jle
push
in
sti
mov
fimuls
ljmp
out
add
or
test
xchg
sub
or
cmpsb
mov
and
cmpsb
stc
adc
jo
sbb
insl
enter
sub
pusha
mov
and
jno
jle
or
ja
mov
push
into
outsb
sbb
and
sbb
add
test
pop
fsubl
mov
aad
inc
js
pop
xchg
aad
push
mov
dec
sbb
imul
sbbb
xchg
loop
pop
testl
fdivl
cmp
cmp
push
dec
fcomps
loop
lret
je
xchg
jb
clc
addr16
inc
inc
cmp
pop
push
iret
dec
push
sbb
in
xchg
ds
pop
mov
int3
or
xor
mov
rolb
addr16
push
push
outsl
aad
xchg
lods
xchg
ds
fcomps
mov
jmp
push
sbb
rol
adc
mov
dec
xchg
add
scas
or
pop
jmp
sbb
lret
rorb
fs
cmp
push
int
add
cwtl
pop
in
lds
gs
out
and
loope
in
roll
and
inc
jl
scas
sub
push
mov
test
mov
dec
xchg
cmp
dec
movsl
push
imul
push
sbb
jmp
stc
ret
adc
loop
loopne
leave
jae
roll
mov
adc
outsl
push
repz
lods
dec
loop
decb
lcall
movsl
dec
shrl
jne
sbbl
push
and
clc
repnz
lret
mov
push
out
fildll
cmp
rolb
movsl
push
inc
nop
inc
push
int
xchg
jp
ret
dec
sbb
test
shl
scas
mov
push
or
xchg
out
push
jbe
xchg
mov
cmp
stc
aam
pop
aad
leave
mov
cwtl
in
add
stos
test
mov
clc
push
cmp
loope
xor
frstor
lcall
sub
and
adc
dec
add
notb
sbb
mov
rorb
test
mov
cmp
in
and
dec
push
std
movsl
test
popa
in
repnz
aaa
dec
mov
test
stos
jl
sub
mov
cwtl
sahf
mov
jle
orb
fldl
loopne
je
roll
imul
stc
mov
ljmp
mov
jmp
ficoms
inc
out
loopne
xor
outsb
and
les
mov
inc
movsl
mov
jbe
into
xor
push
xchg
xor
mov
sbb
je
push
jmp
out
jno
fdivl
in
lods
imul
into
xor
dec
or
fimull
ljmp
dec
push
xlat
dec
push
dec
pop
sub
xchg
pop
fbstp
dec
mov
push
loopne
in
test
xor
mov
scas
cmpb
das
mov
pop
mov
lock
inc
test
das
sti
test
es
push
jae
inc
int
mov
arpl
test
enter
jp
or
add
bound
fwait
mov
pop
inc
addr16
jnp
hlt
mov
movsl
xor
jg
stc
negb
jne
test
sarl
addl
cmp
xor
pop
dec
jnp
or
inc
xor
insb
iret
dec
lcall
in
cwtl
jne
jne
cmp
popf
or
pusha
movsb
stos
xor
mov
daa
pushf
outsl
mov
xchg
icebp
push
mov
push
sbb
or
push
pop
mov
mov
inc
stc
in
bound
stos
and
inc
scas
inc
pop
enter
outsl
lea
add
mov
sub
arpl
clc
cmp
mov
mov
inc
fiaddl
mov
xchg
jnp
sub
int3
and
imul
bound
ds
outsb
scas
adc
mov
dec
lcall
aas
xor
and
into
mov
inc
adc
rolb
sbb
fmuls
adc
aam
xchg
dec
adcl
pop
add
mov
adc
mov
dec
push
int3
cmc
insb
push
pop
jb
test
inc
aad
clc
out
mov
clc
aad
mov
add
out
pop
cmpsl
mov
xchg
adcl
std
fwait
jae
mov
repz
aad
push
mov
sub
movsb
fildll
andb
inc
or
dec
push
adc
add
push
or
getsec
imul
pop
les
cmc
inc
mov
xchg
mov
cmp
jp
lock
inc
sarb
in
dec
lods
std
rorb
mov
pop
push
dec
jbe
xor
pusha
sbb
arpl
std
and
dec
dec
pop
add
sbb
repnz
shrl
lods
jae
aad
or
outsb
sub
outsl
xor
icebp
cwtl
mov
jmp
dec
adc
jl
aaa
lret
sub
sbb
sarl
daa
sbb
insl
dec
mov
pop
scas
jb
push
fsubr
sarb
test
pop
xchg
lock
fimuls
orb
push
mov
mov
andb
aad
rcr
push
jp
or
gs
jl
xchg
or
idivb
xorl
repnz
push
push
mov
lock
mov
inc
cli
fisubs
pop
pop
adc
jg
data16
inc
or
cld
jo
and
jle
jl
test
stos
sub
pop
jp
xlat
add
jne
test
mov
les
adc
ja
je
add
xlat
popf
fadd
and
shrb
adc
popf
jb
cmp
xor
cmp
cltd
mov
sub
xorb
lcall
mov
jae
dec
ret
les
mull
hlt
dec
sub
ja
ret
xor
dec
aas
push
sub
jbe
cmp
leave
pop
lods
sbb
xorb
scas
mov
call
xchg
xor
sbb
test
push
xlat
inc
inc
popf
lcallw
test
cmpb
cmp
repnz
sub
movsb
cmpsl
dec
cmpl
sbb
shrb
fisttpll
xor
test
xchg
or
or
push
xchg
cmc
ljmp
test
mov
inc
pop
test
in
icebp
stc
stos
sub
push
int
adc
sbb
lret
jnp
dec
pop
stc
dec
xchg
dec
pop
mov
xchg
das
shlb
push
ljmp
xor
loopne
xor
and
sub
int3
mov
fnstcw
or
jb
and
sub
vpmaxsw
inc
inc
js
jge
pop
sub
jge
jnp
mov
sbb
outsl
mov
push
outsb
mov
loopne
mov
jle
adc
out
and
jg
test
xchg
cmp
out
dec
dec
lods
xchg
icebp
xor
sbb
adc
in
scas
outsl
outsb
in
pop
std
mov
das
jne
imul
inc
lret
and
push
je
adc
test
inc
add
and
mov
jecxz
sub
dec
popf
and
iret
add
test
mov
cmc
cltd
scas
inc
push
sbb
dec
orb
adc
pop
in
shrb
scas
xchg
addb
push
fidivrl
into
dec
in
xchg
popf
shl
mov
dec
rcl
pop
sti
jmp
loop
lds
push
rcrl
dec
jl
pop
ret
dec
add
dec
mov
pop
shrb
mov
lret
jmp
dec
fcompl
les
dec
add
rorl
test
rcrb
in
jns
xchg
cmpl
inc
mov
push
sbb
or
dec
jecxz
scas
add
cmp
gs
pop
add
pushf
cmc
jecxz
fsubrs
xor
iret
popf
mov
cmp
push
jae
adc
cwtl
stos
cmpsb
aam
sti
jmp
les
in
mov
pop
add
fbld
mov
fsts
lahf
lea
mov
out
xchg
in
mov
push
and
scas
out
xor
call
xor
xchg
xchg
out
cld
push
jle
mov
rcrb
out
push
dec
mov
repz
cs
or
leave
mov
pop
fdivl
test
push
pop
mov
pop
and
sub
cmp
mov
in
imul
inc
sub
imul
push
push
aas
dec
dec
ret
mov
push
cli
dec
ret
xor
mov
out
scas
pushf
jl
xchg
jg
test
and
rcrb
push
push
fisttpl
popl
call
cmpsl
add
jno
sahf
test
clc
and
ss
sbb
cltd
xchg
add
bound
test
test
sbbl
nop
xchg
xor
inc
mov
mov
add
and
mov
cld
fucomp
jle
push
lahf
sub
inc
adc
jnp
gs
or
in
aam
jp
mov
call
or
xor
xchg
imul
andl
mov
inc
or
cltd
call
cltd
xor
add
leave
int3
push
sub
mov
ret
mov
fldcw
inc
test
sbb
aam
push
push
in
movsl
mov
mov
mov
push
cmp
das
pop
inc
imul
aas
loopne
cmp
jae
stos
dec
dec
add
mull
push
leave
jb
lahf
inc
push
cmp
adc
imul
fsubrp
mov
jnp
sub
cmp
pop
inc
dec
pop
bound
loop
scas
lods
enter
lock
inc
adc
push
cmp
or
push
nop
jbe
jmp
ljmp
or
test
repnz
pop
add
add
fwait
int3
add
and
das
add
pusha
cmp
mov
test
hlt
and
jbe
inc
loope
jg
in
mov
das
push
xchg
cmp
rcrb
xchg
dec
jbe
test
mov
pop
jo
push
push
jl
mov
mov
add
jnp
stos
ret
mov
repz
pop
lods
mov
hlt
movb
and
adc
fiadds
cmp
aaa
stos
cmpl
inc
ds
xor
mov
test
adc
sbbb
mov
cltd
push
ret
push
push
popa
dec
xor
add
call
or
ret
cmpl
cs
out
cmp
mov
mov
stos
add
ret
xchg
cwtl
addr16
int
push
cwtl
in
mov
aad
mov
jns
fwait
adc
pushf
inc
inc
sub
imul
js
fcoml
enter
cld
adc
push
inc
nop
pop
cmp
fdivrs
insl
das
jge
or
cld
leave
sbb
lods
pop
mov
push
dec
ss
mov
add
mov
icebp
push
cmp
xchg
xchg
cmpsb
mov
dec
inc
imulb
xor
xlat
sti
and
jecxz
pop
andl
stos
mov
jnp
xor
inc
pusha
in
push
xchg
cli
popa
push
push
mov
cld
and
inc
jg
mov
mov
and
xchg
sahf
add
inc
aad
testb
in
sbb
stos
mov
ficompl
call
sti
stos
push
cwtl
mov
xchg
scas
push
xchg
cmp
fbstp
into
cld
inc
sarb
push
adcb
ja
inc
and
sbbb
xlat
and
pop
sub
enter
ss
lcall
out
jmp
mov
dec
sub
sbb
fmul
sub
arpl
jecxz
push
xor
sub
sub
lock
jecxz
mov
imul
xchg
popa
sbbb
push
popa
shrb
fmul
xchg
mov
andl
fcmovu
sub
xlat
out
imul
mov
cmp
sbb
fiadds
aas
lret
fwait
andb
addb
popf
mov
jo
fisubl
jns
inc
dec
loopne
add
dec
cwtl
inc
dec
pop
fcompl
jae
lock
ja
in
and
les
ret
mov
mov
inc
out
lret
dec
xchg
stc
mov
lret
mov
bound
push
mov
mov
insb
mov
xor
mov
je
pop
mov
xchg
sub
fldt
and
inc
aad
pop
jg
mov
in
add
sbb
add
fscale
lods
cmc
jnp
bound
call
add
fnstcw
inc
cmp
mov
cmpsb
stos
adc
xchg
jb
les
daa
push
sub
mov
and
arpl
pushf
test
add
or
cmpsb
mull
cmpsb
inc
jg
push
into
enter
ret
daa
ja
fcom
sbb
cmp
pushf
sbb
insb
xchg
mov
adc
inc
cltd
xchg
into
xchg
fstpt
adc
push
addb
mov
xchg
fistl
cmc
xor
cmpsb
mov
loope
es
popf
lea
lea
push
rorb
push
inc
adc
dec
jp
ja
dec
stos
jnp
ret
roll
mov
mull
jo
jmp
jo
lahf
or
rcrb
dec
jmp
lret
and
adc
lcall
or
sbb
imul
push
call
ss
push
inc
mov
arpl
imul
hlt
daa
mul
hlt
shl
and
bound
inc
or
mov
cwtl
mov
dec
fdivs
mov
lahf
pusha
add
popa
push
rol
nop
flds
lods
cs
sub
mov
pop
cmp
cmpsb
add
cmpl
dec
pop
or
and
or
mov
call
push
mov
popa
push
or
sti
adc
adc
movsl
pop
adcb
aad
cmp
rcl
xchg
pop
loop
mov
dec
stos
and
add
xchg
ss
or
xchg
mov
push
add
cltd
sub
cmp
sbb
shll
lock
pop
enter
in
call
hlt
es
scas
dec
int3
jae
dec
enter
das
std
jle
lret
arpl
cmpsb
push
stos
mov
xor
push
xor
aam
push
mov
dec
cmp
ljmp
sub
pop
xor
mov
inc
lahf
lret
lret
pop
das
xchg
pop
adc
cs
sub
lock
daa
push
fsts
cmpsl
sahf
das
test
push
ds
sbb
lret
xchg
lds
lret
call
jl,pn
dec
cmp
jne
sub
pop
and
jo
repnz
inc
fs
inc
dec
out
jmp
repz
cmp
pop
mov
outsl
jg
jbe
push
mov
mov
out
in
in
movsb
rolb
cmpb
ffreep
mov
pop
mov
inc
and
xchg
jno
cmp
xchg
or
ret
lret
fistpll
sahf
push
adc
pop
or
inc
adc
imul
std
paddusb
and
into
mov
in
jnp
int3
pusha
bt
rol
xchg
outsl
sub
insl
fidivs
jmp
pop
xchg
test
sub
dec
les
lret
int
aam
stos
movb
xchg
xchg
cmp
insl
sub
jg
add
mov
insb
les
out
jae
pop
and
xchg
sbb
addr16
pushf
push
mov
xor
outsb
hlt
testl
xor
incl
sub
inc
in
dec
pop
in
adc
fistl
jle
add
mov
fistpll
imul
mov
fcom
addr16
das
sbb
push
xor
psubb
dec
leave
lret
shll
adc
add
adc
jl
dec
mov
inc
pop
sbb
or
das
out
or
pop
dec
inc
xor
xchg
mov
inc
or
je
into
mov
mov
clc
adcb
cmp
lcall
sbb
add
inc
push
sub
inc
dec
push
jg
test
mov
mov
jp
mov
dec
push
adc
mov
mov
jmp
mov
sbb
cmp
daa
adc
shll
sbb
dec
fistps
add
test
fsubr
pop
mov
sub
ss
sbbl
test
mov
dec
inc
stc
or
pushf
clc
mov
lods
jnp
push
jae
and
shrl
push
xchg
jg
ljmp
lahf
push
cli
jbe
mov
sub
push
std
pop
sub
decb
cmp
mov
xchg
jb
lods
push
push
mov
sahf
mov
jle
cmc
mov
loop
orb
testl
repz
mov
mov
cmp
aam
cs
cltd
clc
push
sbb
inc
lahf
roll
or
das
sbbb
dec
clc
push
dec
ljmp
or
pusha
sbb
cmpsl
xor
lcall
fwait
jge
push
pop
ss
mov
cwtl
jge
mov
in
sahf
push
fsubs
dec
aad
test
addr16
sbb
inc
cmpsb
popf
enter
lock
mov
out
out
cmc
pop
adc
rsqrtps
adc
or
cmp
pop
jg
pop
or
add
cs
cmp
jo
add
dec
sub
psubsb
lock
out
sar
push
sub
aam
scas
shlb
cmpsb
scas
push
ss
cltd
adc
push
jmp
rclb
por
cmp
test
fisttpll
in
xchg
scas
mov
and
cmp
add
lret
lods
jg
push
out
daa
push
sub
insb
xchg
jp
in
or
arpl
and
cli
shl
xor
test
xor
xlat
sub
mov
das
pushf
cmp
or
sar
xor
sub
push
scas
arpl
jbe
scas
stc
out
fbld
cmp
xchg
and
xchg
adc
xor
push
lret
ljmp
mov
sub
mov
mov
repnz
jo
sahf
ja
ficompl
repnz
nop
int
jae
sahf
mov
fsubrs
lea
fistl
mov
xchg
mov
test
xchg
push
loope
pop
push
nop
push
lods
pop
adc
dec
jno
adc
mov
mov
mov
inc
movb
out
mov
pop
cltd
add
and
int3
enter
mov
xor
lret
sub
xorb
jp
imul
shr
pop
mov
xlat
sahf
push
mov
lock
loopne
mov
mov
fwait
mov
mov
dec
xlat
fldt
dec
inc
jge
push
ljmp
sub
xlat
icebp
iret
adc
shll
lea
xchg
daa
jg
subb
mov
mov
jle
jge
insl
out
and
je
loop
inc
jmp
mov
loope
and
mov
into
lods
rcrb
hlt
shll
lret
loope
adc
stos
inc
cmpsb
jg
mov
lods
fwait
xchg
inc
inc
xchg
inc
lock
sub
or
mov
int
loopne
rol
inc
out
mov
pop
pop
adc
pop
push
mov
pop
stc
push
jmp
or
jno
sbb
sub
push
cmc
mov
rcrb
mov
lods
scas
adc
mov
outsl
inc
pop
pushf
mov
and
test
iret
testl
clc
jns
add
xchg
int3
xor
mov
mov
cwtl
aam
lahf
lea
sub
rcll
pop
pop
push
jne
xor
or
ret
xchg
push
aad
fnstcw
shrb
push
aas
and
sbb
dec
les
and
ja
xchg
inc
loope
daa
xor
lcall
rorl
pop
sbb
test
dec
and
xor
inc
and
pop
lret
jl
arpl
xchg
mov
xor
cwtl
ss
jb
and
xorb
popa
jb
adc
cli
pusha
loop
inc
cld
sub
xchg
xchg
mov
sarl
test
and
jne
popf
out
aam
xchg
inc
bound
add
dec
xchg
inc
mov
leave
sarb
push
or
fidivrs
dec
pushl
xor
cltd
xchg
jp
cmp
xchg
into
popf
fisttpl
xor
gs
xchg
and
pop
mov
or
mov
filds
push
sub
xchg
jecxz
int3
fldcw
sub
ljmp
xchg
inc
mov
xchg
or
or
movsl
stc
sbb
bound
out
cmpsl
jno
xor
fs
sti
inc
mov
mov
sbb
xor
xchg
and
mov
mov
pop
lret
call
cmp
pop
or
andl
mov
pop
out
mov
push
mov
icebp
sub
sbb
hlt
xchg
xor
scas
arpl
test
out
movsb
inc
dec
or
cwtl
mov
stos
push
aas
test
jge
push
rorb
out
sub
xor
adc
es
insb
mov
add
aam
lret
inc
in
popa
xor
fwait
xor
imul
mov
pop
xor
repnz
adc
subb
push
int3
add
mov
or
pop
cmp
cmp
jl
mov
cwtl
sbb
dec
push
xor
push
out
mov
jg
dec
in
aam
jno
or
ljmp
xchg
cmp
fbstp
sub
enter
pop
lods
and
push
fucomi
popa
pop
xor
inc
pop
mov
and
or
xchg
lds
cld
out
nop
cmpl
in
sub
xchg
testb
jnp
pop
and
movsl
shlb
push
xchg
xchg
pop
jns
call
mov
mov
cmpsb
mov
or
cmp
fwait
lret
pushf
fwait
and
mov
and
into
cmp
inc
and
outsb
leave
and
js
vmwrite
xor
cs
mov
imul
gs
dec
cltd
dec
sub
outsl
ljmp
scas
in
cltd
xor
idivb
adc
psubb
rorb
inc
jl
cltd
mov
outsb
cmp
das
in
push
add
fwait
mov
sub
inc
or
dec
adc
scas
cltd
cld
out
push
cwtl
and
sbb
shrl
imul
jg
xlat
lds
cmp
ja
rep
js
sub
jmp
mov
sbb
jecxz
ret
js
inc
adc
sub
movsl
jle
xchg
loope
jno
cmp
mov
or
sbb
popf
mov
xchg
lahf
push
repnz
jb
in
xchg
fcompl
leave
inc
subl
pop
stc
pop
ds
mov
mov
or
lods
std
nop
adc
push
fdivl
pop
cmp
in
inc
inc
pushf
out
sub
ss
cmpsb
jnp
dec
push
add
cld
mov
add
mov
sbb
stos
mov
adc
and
jns
pop
mov
insb
int
repz
ja
test
adc
daa
mov
fisttps
inc
outsb
loope
shrb
inc
add
sbb
pop
sbb
sar
or
mov
xchg
scas
add
xor
pop
je
push
in
frstor
xor
inc
jb
mov
fucomi
jp
sbb
inc
out
xor
call
dec
adc
push
mov
jbe
sub
das
jg
out
jo
loope
mov
rcrb
and
add
cs
das
xor
mov
repnz
fimuls
loopne
outsl
lcall
icebp
add
lret
mov
mov
out
iret
push
scas
adc
jo
xchg
loop
xchg
ficoml
inc
outsb
ret
jbe
mov
add
enter
test
arpl
fnclex
jg
push
or
dec
mov
cmp
cmp
xchg
or
add
sub
cs
pop
arpl
icebp
lcall
pusha
stc
xor
andl
and
or
mov
call
mov
dec
dec
scas
in
outsb
mov
xchg
dec
mov
inc
or
fcmovnu
sbb
add
leave
mov
xor
xor
iret
jecxz
mov
repz
jo
cmpsb
lret
cld
into
mov
iret
xchg
sti
dec
dec
lds
sarb
filds
insl
sbb
and
mov
test
popf
xor
iret
cmp
divl
and
mov
insb
jnp
imul
jns
fimuls
js
lahf
xchg
push
mov
xor
sbb
imul
lcall
push
dec
dec
faddl
jecxz
js
das
mov
push
lods
mov
mov
cld
fsub
xor
daa
xchg
push
lock
mov
gs
inc
std
pop
test
ss
insb
mov
mov
push
xchg
push
daa
insl
dec
lock
sbb
jo
mov
xchg
xor
dec
add
sbb
jbe
push
int
imul
adc
fisttps
dec
test
data16
shlb
add
pop
mov
mov
scas
int
sub
aam
aam
push
sub
jnp
bound
popf
stc
xor
test
mov
sbb
inc
imul
dec
or
xor
pushf
lret
jo
rolb
xchg
or
push
jp
jbe
cmp
cmc
aaa
and
imull
push
xor
xchg
int3
push
mov
mov
out
fisttps
fiadds
push
cmp
icebp
daa
sbb
push
push
sbb
call
into
pop
insb
sub
and
mov
iret
push
test
daa
lcall
sar
inc
mov
jae
add
xor
movsb
fbld
std
mov
rolb
stos
xchg
cmpsl
aad
into
jg
movl
fwait
push
out
stos
test
test
inc
mov
lods
outsb
rcll
jne
and
cmp
lret
cs
gs
push
xor
movsl
aaa
pop
jbe
mov
movsb
pop
dec
adc
movsb
jecxz
add
push
adc
call
push
hlt
repnz
shr
xor
fs
sarl
aaa
adc
mov
push
xchg
aad
add
out
mov
jp
mov
bound
and
pop
pushf
mov
in
jnp
aad
ds
imul
inc
pop
jge
or
pop
out
sbb
add
imul
stc
mov
mov
and
test
push
add
sbb
popl
inc
lcall
push
jno
mov
xchg
xchg
add
std
adc
aam
xor
popf
sbb
filds
jge
add
mov
popa
mov
jo
jnp
mov
xchg
mov
outsb
pushf
fadd
xor
lods
mov
push
jbe
loop
movsl
cld
dec
int
xchg
sahf
mov
mulb
ficoml
pop
mov
cld
int3
testl
pop
mov
sub
out
sub
roll
add
sarl
mov
sti
cmp
cmc
adc
mov
mov
andl
stos
inc
test
sbb
vmovsd
dec
or
fdivs
clc
dec
push
push
outsl
xchg
insb
cmp
dec
cmpsb
addr16
jp
cmp
lret
mov
mov
mov
insb
outsl
cmc
sbb
arpl
rep
push
dec
xor
jecxz
lret
xchg
out
mov
mov
cwtl
adc
push
or
mov
push
arpl
into
cwtl
fs
cs
cmp
xchg
pusha
adc
jae
ret
sbb
fldt
in
dec
lods
xchg
fcmovb
iret
loope
aam
mov
adc
jg
pop
push
xchg
xchg
lock
shufps
pop
adc
out
in
or
icebp
add
shrb
add
pop
idivb
inc
int
xor
jns
es
cmp
fldenv
movsl
jl
push
pop
lods
push
pusha
jg
sbbl
xor
fildl
inc
sbb
repz
jl
jmp
bound
cmc
jecxz
or
and
sarl
and
ja
cwtl
xchg
and
cli
or
imul
lods
out
pushf
pop
xchg
lret
scas
inc
xorl
mov
sti
mov
xor
daa
sarl
leave
dec
or
cmp
cmpsb
jne
ja
cltd
das
pop
cmc
mov
pop
or
das
mov
mov
adc
rcr
loop
scas
dec
popa
lds
scas
jg
or
enter
mov
or
out
sbb
insb
xchg
push
add
xor
std
xor
push
bound
out
pop
int
cmp
mov
push
jae
push
cmp
mov
in
in
sbb
fildll
xchg
mov
pop
inc
dec
push
dec
jae
daa
mov
xchg
lods
mov
cli
and
aad
jo
adc
sub
pop
mov
pop
sbb
movsb
mov
leave
fbld
movsb
out
outsl
ds
out
lahf
ss
mov
add
sub
loope
jb
fdivrl
inc
repnz
sub
mov
push
xor
add
pop
xchg
mov
insb
xor
daa
aaa
dec
and
bound
push
mov
or
js
sbb
aad
adc
clc
out
jmp
push
dec
movsb
movsl
inc
xchg
sbb
ficoms
fld
out
nop
mov
and
mov
xor
cmp
dec
xchg
fisubl
pusha
repz
pop
mov
jae
out
mov
push
test
or
aad
jns
repz
mov
call
scas
jg
pop
in
and
loope
je
mov
xchg
rorb
ficomps
push
mov
cli
sbb
mov
push
lods
stos
pop
movsb
push
jnp
or
repz
or
jo
xor
mov
jmp
push
adc
iret
das
inc
in
in
popf
movsl
gs
mov
inc
dec
addb
aad
shll
or
fnstsw
dec
adc
shll
and
cmpl
dec
enter
movsb
mov
dec
xor
sbb
mov
pavgb
les
and
ret
jnp
dec
mov
cmove
popf
in
xchg
outsb
aad
xor
mov
sbb
pop
jne
cmp
or
sbb
dec
sbb
imul
cmp
je
sar
mov
clc
icebp
pop
mov
repz
cwtl
mov
add
xchg
es
in
popf
xlat
adc
ret
fisttps
jb
hlt
mov
stos
hlt
push
leave
xor
scas
push
into
cmc
imul
dec
add
inc
pop
mov
shll
inc
push
sahf
jb
and
sarl
cld
xchg
push
push
je
ror
pusha
out
xor
and
in
stos
mov
ret
push
add
lock
daa
add
movsb
cmpsb
push
mov
insb
lds
xor
lods
inc
insb
flds
mov
out
divl
insb
xchg
or
mov
xchg
sub
cld
push
outsl
inc
cmpsb
sbb
incb
cmp
bound
fcompl
sti
cmpsl
mov
dec
int3
leave
adc
xchg
sbb
bound
arpl
loopne
mov
rcrb
das
add
xchg
cmp
cmp
loop
or
divl
xchg
ss
pushf
xchg
mov
ds
ret
and
xchg
sub
dec
movsl
mov
adcb
adc
push
sub
cmp
add
fcmovbe
inc
rcr
mov
push
mov
adc
ss
push
mov
or
daa
adc
inc
cmp
add
test
aas
imul
or
or
fistpll
mov
mov
jl
es
adc
movsb
out
mov
inc
sti
cmp
into
cwtl
push
test
push
daa
imul
lods
and
dec
add
dec
or
nop
adc
lret
and
cld
testb
and
dec
lods
mov
fldt
mov
jns
dec
xchg
inc
mov
ljmpw
ss
repz
loop
and
cmp
jg
push
hlt
popa
aam
push
mov
rolb
mov
inc
sahf
leave
mov
ffree
mov
pop
cmpsb
xor
test
cmp
xor
pop
xchg
mov
and
shlb
add
int
insl
inc
mov
nop
mov
add
or
xorl
jae
leave
popf
mov
add
ja
test
ja
mov
cmp
loope
cmp
repnz
shrb
repz
adcl
fcmovnb
add
cwtl
insb
and
sbb
aaa
push
into
mov
mov
sbb
sbbl
or
js
es
out
scas
sbb
adc
fincstp
mov
imulb
dec
pop
mov
push
sarl
outsl
clc
aaa
ds
aas
mov
call
mull
loop
mov
sbb
int
aad
cmp
cmp
clc
mov
loopne
inc
inc
inc
rorb
dec
push
mov
xchg
add
xor
adc
xorb
in
lds
js
sarb
lds
in
and
xor
jb
mov
popa
cwtl
popf
pop
popf
inc
jl
pop
cmpsb
jge
cli
in
fistps
add
cmpsl
ret
cs
daa
pop
sub
aaa
mov
push
pusha
sbbl
xchg
jp
jecxz
in
mov
aas
push
mov
and
jmp
or
or
cwtl
add
in
repnz
in
arpl
stos
lea
stc
inc
pop
arpl
mov
push
stos
jb
aad
es
imul
or
push
pop
jecxz
fwait
xchg
xorb
dec
or
addr16
sub
add
insl
inc
int3
xchg
pop
push
sbb
mov
stos
popa
les
pop
arpl
insb
iret
mov
and
enter
cmp
sbb
mov
dec
cmp
jbe
dec
push
and
pop
cmp
iret
call
xchg
adcl
wbinvd
add
lds
bound
call
arpl
mov
pop
xchg
push
pusha
int
repnz
adc
mov
jno
xorb
mov
or
aas
add
in
repz
scas
dec
jl
jbe
aad
ret
jge
and
mov
addr16
in
mov
adc
xchg
sub
flds
ljmp
jg
pop
aaa
shll
add
sbb
loopne
sub
pop
dec
jmp
ret
inc
movsl
xlat
mov
xchg
cmp
cs
nop
aad
and
hlt
push
hlt
out
push
lods
scas
sub
pop
js
cmpsb
mov
jne
pop
icebp
les
decl
push
dec
les
aam
mov
pop
xchg
in
and
jle
cmp
lgs
fisttpll
cld
pusha
jnp
mov
ret
fisubs
mov
pop
or
aaa
or
mov
pop
lahf
call
enter
inc
ds
mov
fsub
mov
or
shrl
test
push
xor
loop
push
push
mov
sbb
decb
add
sbb
mov
xchg
mov
cmp
fnstcw
enter
movsl
sarl
test
adc
fsubr
stos
inc
pop
pop
scas
test
decl
inc
xchg
dec
mov
dec
xor
ds
add
insb
stc
push
imull
pop
push
adc
insb
ficoms
mov
jo
outsb
add
cmp
stos
push
push
cmp
lret
enter
mov
repz
cmp
and
inc
mov
rorb
and
jge
adc
lea
adc
and
lret
stos
push
cmpsl
and
cld
mov
call
movsb
dec
mov
sbb
fstpl
lock
jl
popf
mov
push
adc
jp
jne
push
hlt
pop
jne
add
xor
insb
sbb
push
jge
jmp
xchg
fucom
sub
test
call
mov
or
pop
ja
rorl
adc
inc
gs
push
lods
leave
mov
shl
inc
inc
pop
mov
xchg
cmp
xchg
push
ja
xor
push
dec
mov
lcall
imul
fstl
adc
inc
mov
jg
mov
jmp
outsb
les
xchg
dec
xchg
pop
pop
loop
sbb
scas
push
xchg
rol
inc
or
cwtl
adc
push
lcall
cli
nop
cmpsb
adc
jo
jo
xlat
mov
std
cld
sbb
mov
sub
jno
sbb
scas
lahf
popa
cmp
inc
js
jg
sbb
push
ret
sarl
xchg
gs
rcll
xchg
dec
aam
inc
dec
xchg
das
jg
or
popa
icebp
aas
pop
sbb
lret
lock
repz
out
adc
fisubrl
outsb
sub
imul
cmp
cmpsl
jne
or
mov
mov
jns
add
sub
hlt
pop
mov
out
loope
and
xchg
xor
sub
push
pushf
enter
sub
push
dec
inc
lds
in
and
sahf
add
stos
inc
scas
sub
and
dec
psubb
jo
sbb
dec
mov
mov
fsubrl
loope
adc
outsb
insl
adc
xor
or
adc
lds
cmpl
lock
sub
xchg
pop
mov
dec
mov
cs
lahf
cmp
negl
pop
sub
mov
ret
mov
arpl
clc
mov
iret
mov
mov
mov
sbb
sahf
mov
inc
das
stc
cmpl
movsb
xor
push
ret
cmp
cmpsl
push
rorb
pushf
cmp
lds
xlat
add
int
mov
insb
out
sbb
clc
dec
cwtl
jae
cld
pop
out
push
jae
adc
xchg
jbe
cmc
cwtl
pushl
push
push
mov
inc
push
testl
jl
sbb
jp
cltd
jmp
cmp
cmp
push
mov
popf
mov
ret
test
popa
cmp
jns
jge
cltd
int3
mov
mov
fnstcw
ret
fs
pop
clc
mov
mov
sub
fcom
addb
inc
mov
sar
and
mov
sub
arpl
ljmp
movsb
mov
lds
jg
punpcklwd
sub
push
in
inc
xchg
sbb
int3
or
mov
or
dec
ret
cltd
mov
aam
push
lods
push
add
xor
add
lret
xchg
xor
push
lods
push
orl
imul
cmp
cmp
data16
add
aam
iret
sbb
sahf
jo
push
xchg
add
mov
es
mov
scas
in
mov
cltd
dec
or
jge
mov
mov
aad
jmp
leave
push
cli
and
or
cld
lea
adc
jb
rol
faddp
mov
inc
icebp
scas
ret
inc
fldt
loop
xor
pop
push
iret
int
adc
sbb
es
ret
jmp
mov
andb
shlb
mov
pop
cwtl
adc
jp
loopne
sahf
jo
push
mov
mov
sub
fsubs
adc
test
test
jno
aam
lods
or
sti
sahf
jge
scas
insl
xlat
adc
icebp
pop
sahf
loope
repnz
popf
sub
push
sarb
sbb
out
fisubrl
push
lea
mov
cmpsb
and
pusha
jmp
nop
por
add
aam
sbbb
dec
add
bound
test
add
fistps
sub
je
arpl
jo
pushf
jns
mov
je
lcall
shr
out
sub
shl
jg,pn
in
jnp
pop
mov
and
pop
cmp
inc
in
incb
adc
mov
dec
rcrb
sub
fsubl
stc
inc
add
jmp
push
fisttpl
out
loopne
push
sbb
push
mov
mov
push
sbb
jl
cmp
xchg
jo
movsb
sub
js
xor
cld
or
iret
outsl
pop
mov
outsl
jmp
pushf
inc
pop
pushf
loopne
xchg
xchg
and
mov
and
xchg
in
enter
jge
cmp
jmp
outsb
pop
cmpsl
test
in
jl
insl
jg
leave
int3
pusha
or
out
test
sbb
sbb
call
outsl
adc
sbb
or
clc
dec
pop
cmp
aam
fdiv
jmp
fiaddl
jle
inc
int3
stos
jp
clc
push
adc
repnz
sbb
mov
xchg
add
xchg
gs
xor
mov
cmc
fidivs
dec
test
adc
pop
sub
xchg
movb
jle
stos
into
emms
pop
iret
aaa
nop
pop
les
jo
hlt
aaa
push
fistpl
test
sub
xorl
fnsave
and
sbb
popf
dec
sub
or
pusha
mov
pop
cltd
jge
arpl
inc
xor
adc
orl
adc
pop
xchg
loope
arpl
xchg
jecxz
inc
xor
enter
cli
je
dec
sahf
sub
stos
cld
outsl
lret
cmp
lcall
rclb
dec
dec
das
jno
ljmp
cltd
lea
stos
xlat
jo
aaa
pusha
outsl
mov
and
ret
rorb
lock
sbb
mov
add
subb
push
mov
jae
testl
ljmp
shll
std
inc
dec
nop
pop
add
mov
addl
aas
test
aaa
adc
test
xor
inc
inc
jp
rclb
sub
stc
in
sahf
scas
test
int
adcb
inc
pop
lcall
jl
loopne
rol
shll
sar
sbb
insl
pop
xchg
rclb
xor
cmpxchg
and
mov
cmp
fsubrs
or
dec
lea
push
stos
gs
xor
pusha
sub
sbb
clc
push
mov
fstl
lret
insl
xor
and
inc
add
test
into
push
dec
mov
add
push
dec
jge
cmp
stos
ja
fcomps
push
pop
xor
jl
outsb
push
fsts
add
pusha
into
dec
in
lahf
jmp
mov
mov
stos
xchg
cmp
dec
mov
xchg
adc
mov
fldl
lods
movsb
jle
in
xchg
push
scas
jno
pop
out
cmp
pop
int
out
lcall
adc
ds
mov
or
dec
mov
pop
inc
cmp
mov
xor
cmpl
in
jo
daa
stc
pop
or
inc
jae
mov
dec
dec
popa
out
outsl
mov
and
fs
pop
dec
xlat
inc
xor
cmp
cmpsb
adc
fcomip
add
shr
roll
jmp
or
xchg
es
dec
jge
fidivrl
cli
out
fdiv
lret
fwait
adc
add
push
mov
push
mov
add
sbb
stos
bound
sbb
xor
xchg
adc
stos
gs
push
push
sbb
xchg
fldcw
sti
and
pop
pop
xchg
jne
jg
xchg
sbbl
scas
out
mov
pop
mov
dec
into
mov
mov
in
mov
or
into
dec
cmp
cld
iret
aaa
in
das
push
dec
mov
fwait
and
adc
mov
or
bound
cmp
das
mov
push
mov
mov
lds
fcoms
jg
loopne
push
adc
fisttps
cwtl
pop
mov
sub
ret
mov
sahf
mov
dec
dec
jo
or
fwait
decb
mov
or
repz
imul
push
mov
adc
and
out
xadd
dec
jle
cltd
sbb
jmp
fidivs
insb
cmp
shll
push
push
push
inc
mov
mov
pop
jnp
xchg
pop
add
push
add
loopne
xor
stos
jp
addr16
pop
nop
mov
dec
cmp
jg
sbbl
push
or
sarl
movsl
incl
xor
int3
mov
mov
les
test
cmp
clc
jnp
cld
pusha
jo
call
aam
sub
je
jno
dec
sti
xor
pop
cltd
jae
jo
loope
cmpsl
jle
aaa
pop
test
add
jns
addr16
mov
xor
bound
dec
push
and
lcall
dec
scas
xchg
or
add
cmp
jp
xchg
jge
dec
leave
sub
push
or
push
adc
dec
jae
mov
xchg
pop
out
aaa
or
or
xchg
je
pop
aad
push
mov
adc
push
fistps
sub
xlat
cld
pop
sbb
xor
lea
fists
in
cli
aam
jbe
test
add
jns
fwait
mov
rcll
movsl
sbb
call
clc
cmp
imul
jo
outsb
push
lods
cmpsb
xor
pop
or
push
xchg
jae
js
mov
mov
cltd
dec
add
movsl
and
push
ja
rolb
inc
adc
rcrl
add
jbe
mov
sahf
adc
xor
pusha
cmp
aas
xchg
fimull
imul
dec
add
push
lret
mov
sub
and
inc
lcall
mov
scas
mov
je
mov
push
add
jne
fdivs
imull
out
in
pop
sbb
xchg
adc
xor
nop/reserved
cmp
movb
xchg
cmp
pop
fsubp
lods
inc
adc
xlat
js
adc
sub
pop
test
mov
movsb
sub
cmp
cwtl
jle
in
inc
push
cmpl
inc
out
xor
and
fstpt
fidivrs
sub
popa
mov
xor
aas
lea
daa
add
xchg
dec
fstps
fisttps
sub
xchg
jmp
fnsave
cmc
fdivl
orb
inc
jns
imul
int
inc
adc
add
cltd
loope
sbb
xor
leave
push
push
pop
xchg
xlat
sbb
sarb
out
js
bound
xor
hlt
or
mov
bound
sahf
mov
test
ds
and
dec
mov
outsb
dec
movsb
loop
je
dec
icebp
push
push
or
sbb
out
cs
call
mov
xlat
ja
sub
inc
push
xchg
jp
int
flds
ret
jecxz
mov
xor
divb
and
enter
inc
mov
pop
sbb
ljmp
jnp
in
xchg
inc
jmp
xor
push
ds
jmp
or
fimull
xlat
jbe
push
loope
loop
ja
xor
int3
mov
xchg
sbb
andl
or
sbb
scas
clc
insb
sysret
in
cmp
sub
lret
jae
mul
out
jg
call
add
cmp
pop
test
fildl
popf
inc
push
leave
dec
cld
hlt
aam
add
stc
cmpsl
mov
dec
and
imul
pop
mov
inc
inc
test
int
sbb
mov
sub
leave
mov
sub
sbb
insb
push
adc
enter
dec
ss
cmovb
mov
pop
xchg
mov
inc
inc
xchg
push
add
and
add
lret
aaa
fisubrl
movsl
addr16
sbb
insb
fisubl
jnp
mov
push
dec
andb
movsl
mov
add
repnz
pop
clc
add
cmp
cld
sti
in
cmp
push
or
push
add
adc
into
push
test
cli
xor
sub
xor
int3
sub
mov
stc
inc
stc
stos
std
jp
popa
imul
inc
and
adc
cld
or
or
jmp
jne
mov
inc
imul
lret
cmpsb
lods
xor
pop
les
or
sub
mov
decb
rclb
pop
or
les
in
xor
leave
push
js
and
add
dec
je
mov
mov
out
nop
rorb
adc
sub
and
push
pop
add
xlat
jae
mov
pop
jns
jl
xlat
sbb
xor
jecxz
inc
outsb
fdivr
push
test
jo
inc
sbb
rcrl
js
add
scas
pushf
rcrb
das
mov
insb
aam
test
mov
push
pop
jmp
aaa
daa
xchg
cltd
and
xchg
loop
mov
testb
icebp
mov
pop
xchg
in
outsl
mov
stos
pop
pop
dec
push
xchg
cltd
inc
xchg
pop
or
enter
dec
das
out
arpl
add
or
or
sarl
icebp
stos
add
std
dec
add
dec
push
aas
or
push
mov
ja
test
shrl
xchg
dec
jle
inc
fisubl
fcoml
xchg
fs
jp,pt
mov
cmp
sahf
mov
sbb
mov
dec
push
cwtl
aaa
mov
rcll
push
js
dec
pop
dec
in
fnstcw
push
popa
cmp
dec
push
mov
sbb
or
adc
dec
jmp
scas
ds
sbb
push
fldt
andl
ja
pop
lock
lahf
pop
aad
and
lea
ror
mov
sbb
lahf
test
insb
lea
stos
mov
sub
aad
mov
mov
ret
stos
lock
cmp
or
std
mov
loope
xchg
shll
lock
jle
xchg
stos
test
ret
cmp
fcom
scas
cmp
mov
repz
cmpl
xor
mov
xchg
inc
mov
sub
lock
mov
pusha
aam
nop
inc
arpl
jl
aaa
sbb
or
xor
jae
gs
movmskps
mov
xchg
ds
xor
ds
pop
clc
leave
sbb
lods
aas
in
addr16
daa
ljmp
xchg
push
sub
pusha
imulb
sti
call
loopne
or
arpl
leave
outsb
push
mov
fimull
jae
ja
outsb
je
lods
jae
stc
mov
adc
sbb
mov
add
stos
xor
aam
or
push
mov
gs
fwait
pop
fstl
xchg
or
iret
xor
xchg
mov
rcll
divb
repz
shr
jge
mov
mov
aaa
push
dec
xor
cwtl
dec
sbb
in
sub
add
mov
lret
popf
lds
ds
negl
out
sub
push
lahf
test
lds
jl
lret
add
out
lods
dec
xor
ds
xchg
jmp
mov
aaa
nop
mov
sahf
repz
add
clc
outsl
add
loop
or
cmp
sub
adc
dec
in
xor
call
mov
insl
push
popa
out
jne
jno
fwait
movsb
dec
mov
dec
dec
enter
pop
outsb
mov
call
std
aam
repz
repz
ret
or
add
hlt
adc
in
fldcw
xor
stc
cwtl
jg
or
pop
lods
iret
jne
push
dec
lods
inc
popf
test
stos
or
mov
stc
negb
mov
push
xchg
dec
mov
cltd
sbb
fstpl
mov
cld
or
sub
push
sarl
mov
jbe
dec
rclb
out
mov
sub
mull
loop
jo
in
mov
clc
mov
pop
sbb
xchg
jnp
mov
lret
cli
mov
xor
mov
outsl
fistps
jnp
push
adc
sbb
dec
inc
pop
int
cmpsl
ljmp
stc
mov
jo
jl
shrb
inc
xchg
fsubr
adc
add
and
add
into
or
and
iret
pop
ret
repnz
in
out
das
inc
imul
sub
or
inc
push
shrb
cmpsl
and
add
and
dec
les
sub
arpl
add
pop
xchg
lea
inc
iret
cmp
mov
xor
sbb
jg
pop
test
pop
inc
pop
stos
fldt
sar
push
test
movl
sbbb
out
fisubs
imulb
mov
movsl
mov
je
sar
lds
dec
add
or
add
aad
add
loope
lret
ss
jl
mov
scas
je
test
ss
mov
scas
push
test
xor
lea
fcomps
sbb
inc
in
jne
inc
pusha
jle
pushf
lcallw
mov
pusha
xchg
sbb
stc
lahf
xchg
inc
mov
scas
jecxz
inc
pushl
sub
push
mov
jp
lret
daa
jnp
imul
cld
mov
xor
fisubrs
pop
leave
mov
xor
mov
sub
out
cmc
leave
test
and
fdivl
shl
push
fwait
lret
jg
sti
adc
out
cli
push
jmp
push
out
adc
lods
jno
inc
and
rcrl
cmp
sbb
jne
jns
or
and
scas
gs
or
xchg
shl
test
in
into
into
sbb
cmp
test
fldenv
mov
in
sahf
sub
or
mov
flds
mov
in
movsl
cld
push
add
xor
mov
push
nop
and
mov
arpl
rcrl
pop
ja
fwait
repz
adc
inc
lds
xchg
jg
dec
scas
data16
movsl
mov
sbb
jmp
jl
movsb
stos
out
inc
jns
and
in
inc
psubsb
pop
push
outsb
xchg
add
jmp
ret
js
xor
pop
test
xchg
xchg
cmp
sbb
imul
lock
cmpsl
call
lea
xchg
or
nop
inc
mov
ljmp
je
mov
jg
jne
sbb
pop
push
adc
inc
dec
gs
outsl
cmp
mov
je
sub
add
push
das
xchg
dec
jne
mov
mov
mov
lret
test
std
insb
mov
jbe
scas
and
push
sub
jne
outsl
fisttpll
or
aam
mov
jae
loopne
mov
mov
lods
aad
out
pusha
fs
clc
mov
insl
push
scas
sbb
and
negb
addr16
arpl
xor
repnz
and
in
inc
adc
xor
inc
mov
aad
sti
mov
and
std
hlt
xor
push
arpl
ja
jae
mov
mov
aam
pop
adc
call
fiadds
in
outsb
adc
mov
mov
out
fmull
icebp
jno
xchg
shl
fnstcw
dec
and
aas
push
into
das
mov
scas
stc
nop
pop
dec
add
adc
jb
sti
jo
sub
fstl
aam
into
pop
addb
push
or
sub
inc
cmp
scas
les
push
push
jnp
add
xor
or
jmp
dec
xor
pop
dec
pop
cs
sub
xor
jae
jo
xchg
mov
int3
mov
je
xchg
inc
pop
test
pushf
xchg
or
popl
mov
cmp
and
add
shlb
inc
in
js
adc
push
mov
pop
icebp
inc
mov
push
int
test
mov
xor
pop
xchg
or
fsubs
scas
pushf
scas
mov
xchg
push
cmpsl
imul
sub
pop
xor
xchg
hlt
lds
nop
in
hlt
or
frstor
jno
gs
aam
pop
dec
enter
mov
stos
sub
dec
mov
mov
lods
data16
mov
mov
or
inc
iret
mov
jge
adc
test
xchg
dec
sahf
push
inc
sbb
outsb
js
aam
cld
das
adc
cltd
pop
or
xchg
into
jb
addr16
lret
xchg
dec
mov
test
fs
xchg
std
ljmp
mov
mov
je
pop
cmp
inc
fcompl
fistpll
iret
cmpsb
adc
jb
sub
rorb
ljmp
fmulp
dec
in
loop
les
rolb
mov
fadd
lcall
or
pop
mov
and
cmp
js
mov
je
fistpll
pop
cmp
or
and
sub
add
or
ss
ss
push
mov
mov
fnsave
push
jmp
sub
dec
ret
je
stos
mov
lret
sub
jge
jmp
dec
pop
icebp
divb
rcrl
shlb
fimuls
sub
jp
es
lock
sti
iret
jmp
int
cs
dec
jp
jb
mov
and
push
lret
imul
cltd
gs
cmp
mov
test
adc
or
imul
ljmp
jle
mov
lea
in
cld
movsl
test
mov
call
adc
roll
fs
jae
and
fmuls
sub
add
dec
adc
test
jg
notb
aaa
adc
fs
push
in
adc
sub
mov
or
push
mov
push
jge
sti
and
aad
mov
loop
lods
mov
sbb
or
icebp
adc
mov
cmp
out
xchg
jecxz
mov
subb
dec
out
dec
pop
push
lret
mov
ja
scas
inc
lcall
mov
repz
fimuls
mov
nop
imulb
popf
ficoms
ss
xchg
and
mov
lea
push
test
lds
dec
sub
fsts
push
std
xchg
jle
pop
push
dec
dec
test
leave
or
mov
ret
push
add
and
or
test
inc
fstps
fsubr
mov
out
push
and
sbb
xor
arpl
sbb
pop
cmp
mov
lds
sub
insl
stos
pause
lret
repz
jno
fiaddl
rcr
enter
out
sub
ljmp
das
stos
scas
and
mov
out
push
jg
xor
aas
lret
cs
iret
push
mov
je
inc
and
mov
mov
jne
les
inc
adc
fdivr
and
rcrl
rorb
lahf
and
add
shrb
xchg
pop
pop
sti
jnp
adc
notb
lret
xchg
mov
dec
jnp
repnz
and
addr16
out
xorb
jae
lods
aam
aas
fcoml
in
and
push
pushf
push
xchg
jne
dec
mov
push
push
xchg
idiv
xor
mov
arpl
rcll
call
add
shrb
dec
clc
aas
gs
movsl
dec
incl
jge
cmp
mov
pop
lods
arpl
hlt
sbb
xor
cmp
rorb
mov
scas
jge
movsl
fldcw
int
xchg
lods
shrl
and
int3
sub
adc
sahf
leave
sub
in
dec
sub
mov
jmp
lods
mov
das
pop
cld
fisttps
adc
and
and
push
inc
xor
dec
inc
ret
cmp
mov
pusha
dec
mov
test
lahf
int
int
adc
icebp
cmpsl
jo
pop
xor
xchg
jns
repz
mov
aad
std
sub
mov
sub
faddl
lcall
outsb
cld
dec
fisubrl
loope
mov
fnstcw
movsb
sub
stc
call
lcall
negb
pop
imul
pop
scas
add
mov
loop
or
mov
jne
pop
jo
lret
cmp
cmpsl
xchg
fwait
out
mov
push
sub
dec
lock
enter
xchg
jle
mov
cmpsl
sbb
mov
inc
push
inc
jno
repz
xchg
push
sbb
adc
adc
add
sub
add
js
mov
xchg
out
xchg
xor
lret
nop
gs
lret
paddsb
jb
and
pop
mov
pop
mov
pushf
dec
sbb
adc
flds
pop
xlat
std
addr16
add
sbb
loopne
push
jl
xor
dec
xor
dec
jecxz
push
cmp
push
pop
fcmovnu
fmul
add
ficomps
lret
or
mov
push
lea
fbstp
lret
mov
or
dec
sub
inc
notb
dec
out
mov
pusha
xchg
pop
outsb
les
in
jl
pusha
scas
jnp
push
adc
xchg
fcompl
sahf
inc
push
cmp
add
imul
pop
cli
pop
call
fisubrs
scas
lock
jno
mov
insl
cli
xchg
pop
add
cmp
sbb
dec
leave
jecxz
inc
pushf
out
iret
inc
daa
push
mov
ja
pusha
das
push
fdivrs
and
push
sti
inc
inc
pop
popf
rorl
movsb
out
int
lret
pusha
adc
and
xchg
push
in
out
mov
xchg
mov
push
mov
inc
mov
popa
test
pop
int3
mov
jo
inc
mov
sbb
mov
scas
cltd
jae
jp
and
stos
js
mov
mov
mov
sbb
pop
jmp
xchg
in
ss
shll
sbb
mov
push
adc
push
push
jle
lods
mov
nop
mov
rcll
cmpsb
into
in
mov
xlat
pop
lahf
movsb
scas
jmp
jae
xchg
pop
jp
cwtl
inc
sahf
cs
cmp
ja
pop
mov
xchg
adc
orl
and
add
add
aam
jne
neg
inc
adc
ret
pop
cmpsl
pop
pushf
pop
arpl
ret
mov
add
jae
adc
js
fsubp
in
mov
js
sbb
loope
sub
xchg
sti
mov
mov
push
and
lods
xchg
in
insb
and
test
fists
shll
mov
and
sbb
mov
push
xchg
ljmp
fisubrs
pop
scas
jp
add
loopne
icebp
cmp
adc
xchg
add
loopne
mov
call
out
sub
push
mov
gs
in
ror
cmp
mov
xchg
push
movsb
mov
daa
push
add
mov
sbb
adc
fisttpl
pop
dec
cmp
xlat
pop
xor
cmp
push
lret
imul
sub
fdivr
fnstsw
loopne
inc
gs
sbb
out
lock
daa
jmp
mov
cmp
jae
inc
lock
sub
loop
stos
pushf
enter
mov
mov
cs
sub
pop
stos
mov
and
jge
push
sub
cmp
int3
popf
push
and
testl
xlat
xchg
sbb
xlat
lods
rcl
pop
add
jne
sti
jle
cmp
or
shll
loope
adc
cmp
lret
aam
rcl
dec
ja
or
nop
adc
mov
aad
mov
fld
dec
test
cmp
addb
ss
outsl
arpl
jnp
loop
loop
popa
push
mov
pop
dec
arpl
js
lret
ds
lcall
xorb
cs
int
mov
out
mov
or
cmp
sti
adc
mov
add
mov
testl
fcmovu
adcl
pop
mov
or
icebp
cmpsl
add
loopne
leave
sub
xchg
int3
ret
mov
jge
mov
fisttpl
iret
mov
cmc
dec
shll
push
ret
mov
push
pop
sti
cmp
xor
and
xchg
fwait
or
imul
xchg
push
pop
jle
push
inc
cmpb
xchg
lret
pop
jp
jo
xchg
or
sub
stos
push
push
scas
sahf
cli
pusha
scas
repz
adc
xorb
subb
pop
push
xchg
shlb
inc
xchg
into
je
jge
loopne
shrb
push
in
xor
mov
jmp
arpl
add
aaa
aas
inc
xor
jae
inc
ja
cmp
sub
loopne
and
inc
das
pop
imul
xchg
fwait
adc
cmp
fstpl
pop
jb
iret
mov
jo
mov
rcrb
adc
xchg
mov
sub
push
sbb
repz
outsb
in
jg
mov
adc
movsb
mov
arpl
cmp
xchg
mov
mov
mov
inc
push
lock
cmp
repz
push
adc
stos
imul
mov
lahf
sub
fbld
or
and
cmpsl
inc
or
mov
pop
push
imul
hlt
mov
movsl
jno
cld
mov
pop
xor
adc
jo
push
xchg
mov
fcoms
jp
dec
jo
lds
imul
cld
adc
in
mov
data16
mov
push
push
loope
mov
stc
imul
and
repnz
lods
imulb
test
clc
pop
mov
fstpl
icebp
dec
scas
and
hlt
sarb
stos
cmp
lcall
pop
mov
mov
test
or
mov
and
jbe
jbe
add
es
sub
das
sub
cmp
negb
in
fnstcw
int
in
fdivrl
sarl
inc
faddl
fmuls
xchg
popa
int
push
mov
shrb
jno
and
pop
push
dec
pop
adc
into
sub
ljmp
mov
sub
stos
test
mov
fs
and
aaa
cld
aas
dec
shlb
addl
jne
xchg
and
jecxz
pusha
jno
pop
xor
mov
lock
add
xor
xchg
sahf
subl
jp
nop
lret
mov
mov
pop
inc
in
cli
xchg
xchg
into
repnz
pusha
fnstenv
dec
jge
xor
das
mov
jae
dec
xor
mov
nop
dec
sub
sub
ljmp
stos
data16
xchg
test
outsl
and
fwait
inc
int3
push
dec
push
dec
enter
inc
add
mov
lock
rolb
fisttps
mov
adc
mov
jge
rcrl
xchg
jb
ljmp
adc
ret
push
dec
mov
and
test
arpl
aam
pop
push
in
push
rcr
pop
xchg
ret
lret
inc
xor
ficomps
xchg
pop
sub
pushf
sbb
inc
sub
xchg
xor
and
cs
dec
xchg
push
jp
mov
pop
cvtdq2ps
iret
ss
cltd
xchg
add
es
sarb
cmp
lahf
pop
outsl
loop
mov
subb
adc
sbb
xor
mov
insb
pusha
sub
xchg
cmp
xchg
cmpsl
push
lcall
nop
scas
adc
pop
nop
and
cmp
adc
inc
lcall
rclb
gs
lock
push
iret
inc
div
movsl
dec
jbe
push
adc
push
outsl
xor
jp
dec
sbb
cmp
loopne
ljmp
push
out
shlb
mov
scas
xlat
call
pushf
push
stos
aaa
pop
rcll
or
or
lahf
in
lock
sub
fidivl
int
test
mov
loop
lret
push
or
xchg
lret
jne
cmp
mulb
inc
imul
decl
dec
jo
cld
adc
pop
arpl
jnp
pop
shlb
jno
pushf
shlb
mov
inc
sub
xor
ljmp
xor
aam
inc
sbb
xchg
pop
cli
loope
cwtl
lret
push
mov
jae
lds
std
or
push
repnz
mov
mov
dec
jno
repnz
jnp
ficomps
das
cmp
sub
bound
sub
xor
movl
or
lcall
loope
leave
cli
repz
inc
leave
popa
fists
in
sti
leave
daa
in
dec
sbb
cwtl
popa
jb
pop
mov
incb
rolb
inc
pop
inc
imul
xor
xorb
lcall
pop
sbbw
mov
push
inc
out
js
mov
mov
xor
cmpsl
sarb
gs
mov
daa
mov
xor
ret
test
push
pop
mov
sahf
push
iret
lret
shlb
cmp
jb
xlat
cmp
xlat
hlt
mov
xor
inc
repz
cmp
xchg
lret
sbb
mov
scas
mov
in
insb
sbb
dec
gs
jno
jge
push
popa
call
push
dec
mov
loopne
in
cmp
jmp
cwtl
pop
data16
das
adc
inc
sub
into
add
addr16
jle
aam
enter
jns
ret
cmpsl
aad
inc
popf
inc
out
cmp
mov
xchg
out
test
fs
addr16
jle
icebp
lods
or
lret
movsl
xchg
xor
inc
lret
int
cltd
xor
mov
mov
aaa
xchg
adc
icebp
jg
repnz
pop
and
pop
jmp
dec
push
push
inc
jbe
pop
mov
ja
daa
imul
out
cmc
add
pushf
dec
push
jecxz
cmp
lods
push
les
xchg
inc
xchg
mov
dec
in
mov
sub
ret
stc
add
das
fnstcw
xchg
mov
xchg
pop
xchg
jbe
xchg
mov
add
mov
push
out
sub
pop
mov
or
xchg
xor
scas
test
jns
mov
inc
lods
insl
dec
cs
sbb
je
and
ficomps
push
out
sbb
insb
xchg
jmp
ja
jns
pop
insl
mov
ret
int3
rcll
jo
push
cmpsl
push
mov
test
cld
popl
std
sbb
jl
testl
sub
xlat
xchg
lret
repz
push
pop
jb
sbb
pop
pop
and
dec
mov
pop
orb
gs
outsl
out
dec
ret
jno
cmp
xor
cld
mov
xchg
test
jne
mov
iret
test
je
dec
aam
jl
dec
xlat
mov
fldl
imulb
cmpsb
aam
inc
andb
call
sbb
testb
call
cmc
sub
pop
push
ljmpw
cmp
push
ret
lds
mov
mulb
sbb
jge
add
push
adc
xchg
push
ljmp
gs
in
adc
inc
mov
cmp
jo
xor
mov
xorl
adc
cmpsb
add
mov
xchg
push
xchg
mov
sbb
mov
mov
push
jmp
pop
sub
jle
mov
scas
pop
push
cmp
std
jb
jmp
outsl
mov
add
addl
inc
push
decl
inc
xor
xchg
sub
sarl
mov
cmp
cmpsl
mov
pop
sti
nop
cmp
scas
sbb
jge
cli
aaa
cmp
repz
fstl
addl
xchg
push
notl
pop
ret
out
add
shlb
insl
stos
jnp
mov
daa
sti
jge
jecxz
add
clc
enter
out
fcmove
sub
jl
mov
jl
add
es
inc
jo
outsb
inc
and
xchg
add
jmp
or
jnp
std
cmp
aam
sbb
insl
jnp
xchg
inc
test
dec
adc
cs
insb
pop
or
or
mov
xor
mov
ja
or
mov
nop
lock
jns
push
pop
pop
pushf
pushw
addl
pop
push
aas
add
nop
xor
nop
imul
or
fsubp
mov
xor
add
stos
push
or
mov
or
xlat
daa
jge
fmul
shll
insl
adc
push
orb
mov
fsubrp
in
cmp
push
popa
in
adc
mov
and
sbb
ds
jb
fwait
test
daa
imul
repnz
pop
fcoms
cmp
or
or
pop
pop
sbbb
divb
shrl
bound
and
popf
outsb
pusha
hlt
dec
es
hlt
or
pop
fstpl
stos
lock
jbe
mov
dec
popf
mov
push
mov
and
cs
adc
push
mov
daa
dec
xchg
daa
jmp
adcb
rcrl
mov
out
nop
mov
sub
lret
adc
out
ja
adc
pushf
xchg
cs
in
sahf
imul
push
ds
inc
cmp
std
push
gs
ret
sub
adc
adc
imul
fdivrs
notl
mov
lret
mov
aam
dec
cld
leave
fistps
jle
add
movb
shlb
ret
xor
add
lods
mov
push
ss
xor
sub
mov
lahf
test
pushl
adc
movsl
mov
scas
cmpsb
outsl
mov
push
adc
pop
sti
bound
movsl
mov
outsl
js
bound
inc
push
dec
push
or
mov
or
inc
inc
inc
pop
aad
std
cli
inc
sbb
xor
cmp
lea
testb
mov
stos
mov
cwtl
mov
xchg
push
inc
pop
fiaddl
jnp
add
fcompl
or
jecxz
sbb
ljmp
sub
xchg
or
out
data16
sar
in
jl
inc
sub
in
movsb
push
cmp
sub
out
call
fmuls
push
mov
dec
cld
imul
mov
ret
js
inc
jmp
int
mov
add
pop
stc
mov
sbb
sar
xor
jp
in
jecxz
sub
and
jl
in
inc
test
lahf
fsubrl
inc
stc
xlat
mov
movsl
mov
push
fiadds
xchg
jo
dec
mov
jmp
xor
sbb
repnz
movsl
scas
push
insb
lods
inc
jno
xchg
sub
inc
fs
inc
scas
mov
dec
jbe
pop
sbb
sbb
jge
lds
mull
fs
cmc
cmp
repz
out
jecxz
sub
pop
xor
adcl
roll
inc
hlt
and
jbe
hlt
stc
xor
sarb
mov
push
fildll
orb
aaa
mov
sbb
and
pop
aas
les
sahf
push
cmp
push
arpl
mov
hlt
lea
jp
mov
insb
ret
je
and
pop
out
push
mov
scas
xor
decb
jge
pushf
mov
jno
insb
mov
int3
mov
xchg
insb
jl
mov
mov
mov
stc
arpl
jmp
je
xchg
sub
jecxz
sub
jg
push
xor
lods
outsb
hlt
fstp
sahf
test
and
mov
ficompl
insb
cmp
lret
inc
adc
outsl
ud1
cli
push
push
push
pop
movsb
push
inc
daa
daa
mov
mov
push
movsl
cmp
into
pop
int3
clc
mov
in
mov
into
push
jp
pop
xchg
pop
adc
inc
ffreep
and
mov
mov
inc
sub
mov
andb
and
in
scas
decb
pop
push
or
push
out
fsts
adc
push
pop
data16
addb
clc
dec
sub
sbb
jno
mov
sbb
lods
sub
out
mov
cmp
mov
pop
adcb
inc
gs
push
nop
cmp
leave
push
cmp
xchg
pop
lahf
int3
inc
mov
lret
test
push
out
and
jmp
outsb
incl
icebp
jg
jbe
inc
inc
rcrl
push
mov
xchg
test
dec
stos
mov
enter
fwait
out
jmp
or
daa
and
push
mov
into
jb
in
aas
jge
jl
out
lret
xor
sbb
mov
and
js
mov
int3
sbb
push
les
push
and
add
out
scas
xchg
mov
jp
negl
push
push
push
mov
cmp
in
rcl
xchg
adc
and
add
int3
lret
xchg
adc
add
outsl
movsl
sbb
fnstenv
adc
sbb
js
movsb
xchg
inc
xchg
jl
mov
push
incl
mov
xor
push
cs
push
adc
pop
jg
lret
push
inc
stos
ss
mov
jle
mov
push
sbb
adc
cltd
test
into
cmp
push
fiadds
mov
popa
loop
xchg
scas
mov
jmp
lds
and
or
rcrl
fnsave
mov
pusha
clc
negb
daa
and
ljmp
sub
mov
mov
add
adc
xchg
mov
stos
mov
fldenv
dec
dec
inc
xchg
ja
mov
outsb
int3
hlt
cmp
xchg
xchg
scas
test
mov
in
add
xor
outsb
lds
daa
aam
sbb
roll
shlb
es
jp
bound
jmp
outsb
shlb
cltd
sahf
dec
or
dec
jg
fsubrs
or
xlat
icebp
imul
lods
add
ficoms
jne
scas
jle
out
add
in
shl
jbe
daa
dec
and
lock
repz
sub
leave
out
lock
movsl
xchg
lods
mov
push
pop
nop
xchg
shll
inc
out
cltd
daa
icebp
cmp
cli
push
jns
fwait
mov
lods
xor
daa
hlt
cmc
repz
or
outsl
push
outsb
imul
xchg
or
mov
mov
lret
jp
insl
mov
xchg
fdivr
adc
xor
mov
cmc
dec
push
mov
loop
pop
cmpsb
in
adc
push
push
pushw
jbe
sahf
xchg
cmp
pop
lods
push
adcl
mov
loopne
fsts
mov
aas
mov
mov
into
jmp
cmpsb
pop
popa
rolb
imul
bound
imul
cmp
add
lea
pop
xor
pop
outsl
ss
xchg
in
shll
sub
dec
mov
push
shlb
pushf
outsb
fiadds
into
aad
xor
cmp
xchg
jns
sbb
lods
mov
inc
faddl
dec
jb
sbb
sub
adc
xlat
mov
xchg
push
inc
movl
lret
imul
ljmp
jecxz
cmc
movsl
cli
pop
cmp
ret
movsl
les
sbb
fistpl
mov
lock
arpl
jns
xchg
in
mov
fcoml
inc
roll
push
xor
movsl
cmp
jge
sub
xchg
movsl
fmuls
fcmovnb
out
lahf
xor
mov
sub
mov
and
stos
loop
divl
cmpsb
jmp
dec
push
push
push
and
aas
pop
mov
pop
xchg
hlt
xchg
and
daa
bound
dec
xchg
fisttps
or
movsl
aas
mov
and
or
jle
mov
push
aaa
push
jne
sbb
xchg
xchg
inc
xor
xor
inc
and
mov
in
inc
cmp
enter
negl
pushf
pop
negb
pop
mov
jno
xor
jl
test
js
daa
pushf
dec
push
aas
push
jle
push
repnz
fistpl
rcrl
roll
adc
pusha
jmp
and
in
sbb
fistps
or
lods
mov
imul
into
inc
addr16
sarb
pop
mov
addb
enter
shll
xor
call
out
out
stos
add
std
xchg
andl
mov
xchg
add
sbb
sbb
bound
xchg
or
aam
add
fiadds
push
pop
in
pop
insb
cmp
dec
sub
mul
add
or
insl
adc
xchg
pop
call
add
sub
or
loopne
jae
jb
add
push
pusha
sub
mov
cmp
fmull
xor
cmp
mov
roll
push
xor
jns
xor
fcompl
pop
or
sbb
ret
adc
dec
push
sarb
test
xor
sub
ret
int3
test
jmp
gs
je
addr16
notl
mov
cmp
dec
and
decb
cwtl
mov
jb
pop
fdivs
divb
pop
cltd
mov
xlat
test
cmp
lcall
js
fwait
push
punpckldq
in
jnp
movsl
cmp
push
test
mov
push
jne
mov
outsl
fidivrs
popf
das
movsl
xor
xor
cs
mov
rcll
clc
mov
ftst
sub
icebp
shlb
mov
cli
push
sbb
mov
lock
lret
loopne
jp
sahf
push
and
or
xchg
loope
fimuls
std
sub
enter
in
arpl
xchg
in
sbb
fcoms
stos
loope
movsw
icebp
divb
inc
out
imul
cmc
jp
xor
cmc
or
aad
cli
mov
sahf
fnstcw
shrl
std
dec
push
orb
das
cmc
adc
dec
mov
dec
push
inc
aaa
lock
fwait
addr16
sub
int
bound
mov
mov
sahf
add
ja
lock
mov
inc
mov
or
mov
rcrb
cli
mov
lcall
scas
sub
andl
loope
sbb
xchg
push
or
es
mov
test
clc
stos
and
push
xor
sbb
cmp
add
movsb
adc
sbb
sbb
ljmp
iret
test
inc
mov
ficompl
gs
lcall
or
dec
sbbb
and
mov
popa
jns
cli
mov
cmp
repz
daa
jl
pop
adc
pushf
shrb
add
mov
push
iret
testl
cs
pop
lret
sub
jle
out
or
iret
movsl
mov
sar
inc
aaa
xor
ficoml
test
mov
insl
cmp
xchg
inc
sub
jo
frstor
jmp
push
or
rorb
cmpsl
sub
add
pop
adc
pop
les
fisttps
sti
mov
xor
or
add
cld
push
enter
in
mov
testl
xchg
xor
cld
pop
rorl
xor
dec
or
push
iret
test
push
pusha
push
mov
mov
negb
sahf
adc
in
out
add
xor
int
jp
loopne
dec
jmp
jmp
or
or
sbb
and
cmc
sub
sub
push
cmc
jl
stos
lret
xlat
and
mov
and
in
adc
ja
and
dec
subb
adc
dec
cmp
mov
lcall
ljmp
cmc
aaa
popa
dec
fldcw
adc
xchg
inc
fdivrl
inc
je
loope
xchg
fisubs
fsts
or
push
jno
mov
xchg
inc
dec
jne
cmc
inc
xchg
negl
scas
mov
loope
dec
add
data16
xchg
adc
roll
xorb
or
dec
inc
mov
test
aaa
repz
sub
push
mov
adcl
scas
cltd
jge
pop
imul
fsubrs
mov
jne
mov
jne
push
or
andl
mov
test
push
sarl
pop
pop
icebp
into
out
pop
xchg
inc
testb
inc
out
fildl
push
xchg
insl
mov
out
stos
and
cmpb
ljmp
sbb
or
lods
inc
ret
and
cmp
test
mov
mov
icebp
in
push
loop
mov
xchg
dec
xorl
mov
mov
and
adc
sub
pop
push
rorb
add
pop
daa
push
orl
mov
adc
mov
scas
mov
or
mov
mov
pop
add
push
xor
fstpt
inc
mov
sti
jge
and
and
mov
sbb
mov
sub
pop
adc
es
test
cmc
sub
faddp
push
jecxz
mov
mull
or
push
and
hlt
sub
jmp
into
mov
out
mov
cli
sti
cld
fwait
push
xchg
arpl
lret
sbb
cmp
xchg
cvtps2pd
popa
sbbb
repz
sbb
add
mov
pop
adc
cltd
and
inc
dec
jae
movsb
jae
popl
push
mov
inc
cmp
jmp
pop
or
sub
inc
rclb
sub
mov
cwtl
ljmp
cs
aas
xchg
pop
or
pushf
sbb
pop
adc
test
mov
xor
iret
fdivl
lahf
xchg
pop
paddusw
ljmp
insl
icebp
push
inc
or
movsb
pusha
fdivl
jmp
out
sbb
push
rolb
outsb
lds
and
fwait
or
clc
push
xchg
sti
out
jnp
push
xchg
jmp
mov
cltd
out
mov
loop
lock
cmc
mov
test
pop
sub
lret
xor
jb
xchg
js
popl
fs
out
sbb
jp
and
mov
adc
or
pop
push
xchg
dec
movsl
clc
mov
add
ret
mov
sub
fs
adc
scas
mov
pop
and
push
jle
data16
test
dec
mov
jb
arpl
andb
js
arpl
cli
sbb
xor
inc
cltd
jecxz
sub
xchg
xchg
sub
aam
pop
cmp
into
cwtl
inc
jp
mov
out
repnz
xor
and
jae
sarb
mov
mov
xchg
sahf
push
nop
imul
or
fs
jno
out
mov
mov
nop
negb
cmp
stos
mov
xor
jns
sbb
and
and
adc
xlat
or
icebp
push
cld
xchg
adc
mov
shl
addr16
push
cmp
icebp
cli
cmpsb
testl
daa
fnstenv
mov
idivb
adc
insb
adc
pop
push
push
inc
lods
and
jp
sahf
jns
cmp
notb
mov
add
xor
push
push
cmc
test
cmpsb
push
jle
stos
add
or
into
jle
or
mull
and
popf
and
clc
loop
add
es
loopne
out
push
pop
xchg
mov
mov
pusha
xchg
je
fs
push
lods
push
or
addr16
dec
cmp
or
xchg
adcl
sub
add
sbbl
out
mov
test
mov
aad
jbe
add
mov
jg
jo
ja
nop
fdivrl
fildll
fs
mov
cmc
aam
and
mov
arpl
mov
lds
mov
sub
jne
mov
sub
add
pop
inc
mov
and
add
mov
pop
lcall
imul
pop
movsl
pop
int
mov
out
or
iret
jge
mov
mov
insl
and
push
ds
repnz
lret
hlt
sub
addr16
mov
in
scas
sahf
ret
adc
shl
fists
push
xchg
or
add
pushl
push
mov
aas
xchg
jo
add
stos
add
and
xor
bound
pop
mov
mov
movl
sbb
insb
iret
jbe
in
cltd
sti
jecxz
sbb
int
sar
add
idivb
inc
sub
sub
xor
xchg
and
add
jnp
sahf
xchg
lods
cmp
clc
popa
pop
xor
lods
inc
xchg
out
das
mov
shll
push
add
cli
popf
fwait
sbb
test
dec
lock
sbb
adc
adc
xchg
lds
cmp
mov
jecxz
push
aas
not
data16
test
jmp
xchg
sarb
add
ficompl
push
cld
add
or
ljmp
xchg
push
push
xchg
jae
sub
sub
fnstenv
xor
ja
add
cld
inc
or
pop
push
loope
jb
clc
inc
mov
insb
jns
sbb
mov
lret
ror
mov
movsb
add
aad
aam
xchg
jge
jno
jecxz
int
int
mov
xor
sub
pop
stos
add
xchg
inc
testl
dec
popf
adc
int3
dec
pop
mov
fincstp
pop
nop
mov
add
mov
pop
pop
push
push
push
jbe
arpl
xchg
aas
imul
sub
jmp
movsb
push
fbstp
roll
sub
and
pop
mov
sahf
pop
dec
cmp
cmp
bound
mov
aas
inc
xor
jo
xlat
xor
shrl
mov
in
push
push
xchg
mov
pop
jno
adc
stos
mov
fnstcw
xor
loopne
or
ljmp
inc
inc
push
loopne
xchg
repz
rol
outsb
sbb
xchg
cmp
mov
cli
jnp
cwtl
xchg
ret
arpl
in
and
repz
pop
in
adc
int
jbe
ljmp
loop
and
pop
frndint
outsl
or
adc
pand
fiadds
and
es
cwtl
or
or
xchg
or
ficoml
es
xor
enter
jg
mov
xchg
pop
jae
pop
mov
jecxz
sub
lcall
push
mov
cmp
mov
jno
inc
push
mov
inc
inc
insb
sub
mov
jle
shlb
inc
loopne
sbb
and
movsb
or
inc
push
ss
jmp
inc
sbb
mov
stos
mov
std
movsb
mov
ljmp
in
nop
mov
cli
mov
push
xchg
adc
add
jle
int3
andb
xchg
loope
xchg
mov
inc
ret
adc
push
repnz
jl
sub
rolb
inc
fs
and
pop
dec
xor
rorl
sbb
aam
adc
xor
mov
dec
test
fbld
xlat
pop
add
sub
sub
enter
lea
sbb
call
lcall
or
cmpsb
clc
xchg
insb
push
int3
and
mov
jle
lea
jb
rorl
shrl
adc
ret
daa
ret
lret
inc
ret
out
dec
fistpl
mov
cmpsl
add
cmc
sbb
loope
test
add
inc
add
into
jb
movsl
scas
and
lods
push
sub
cmp
insb
mov
dec
cmp
mov
mov
inc
sbb
int3
and
cmp
ja
fistpl
push
inc
sub
inc
xor
and
fidivl
mov
push
and
xchg
mov
imul
sub
in
mov
insb
mov
repz
cltd
int
xchg
xor
int
in
sbb
jp
mov
xor
push
push
push
sti
push
sbb
ja
ja
pop
or
dec
mov
jecxz
call
jl
xorl
dec
inc
sub
ret
push
in
subl
das
sub
xchg
or
mov
mov
sub
mov
cltd
push
adc
imul
ret
arpl
int
pop
mov
mov
icebp
adc
dec
xor
pop
pop
xchg
cmpsl
div
lret
stc
sahf
test
loop
ss
mov
pop
ds
aad
ja,pt
pop
mov
hlt
cmp
pop
sub
out
lods
pop
mov
mov
sbb
pop
xor
jg
cmp
iret
sub
adc
mov
jg
xchg
repz
cltd
insl
stc
mov
mov
ljmp
inc
enter
push
addr16
jmp
or
mov
adc
lock
sbb
int3
insb
call
dec
je
adc
icebp
dec
repnz
in
jne
mov
or
push
out
mov
mov
push
push
rorl
insb
xchg
or
mov
mov
ss
push
sarb
push
popa
lods
das
pop
sbb
ljmp
stc
mov
adc
sbbb
sub
lea
fwait
daa
dec
pusha
fldt
aas
xchg
push
cmp
push
test
sbb
and
xor
xlat
push
sub
cmpsl
aaa
xor
cmp
dec
ret
mov
sbb
scas
jmpw
inc
mov
sti
dec
popf
orl
pushl
sarl
or
mov
shll
mov
dec
mov
jmp
pop
and
out
jp
mov
lea
lds
pop
mov
pop
adc
int
jne
xchg
mov
mov
stos
mov
orl
and
jmp
jo
test
jnp
xorb
dec
aam
in
cmp
sub
out
inc
popf
or
mov
mov
push
out
mov
mov
adc
adc
sbb
outsb
add
mov
mov
mov
dec
and
aam
xchg
dec
out
xor
xlat
jns
add
cmp
xor
xor
add
xor
stos
jle
cwtl
cmp
ds
mov
inc
les
call
sarb
sub
sbb
inc
add
pop
push
xor
ja
fsubrs
jb
adc
gs
pop
mov
sub
adc
cmpsl
cmpsl
test
stos
clc
add
outsl
jo
divl
outsl
idiv
aas
or
insb
test
int3
cld
inc
dec
shlb
mov
lds
jbe
pop
loopne
jp
pop
cmp
out
adc
pop
lock
or
sbb
xor
in
jbe
dec
ficompl
aam
mov
pusha
jl
movsb
xchg
jno
push
pop
cmp
adcb
arpl
ss
js
lret
inc
push
lahf
pop
jmp
cltd
dec
leave
popf
les
ret
into
xor
loop
adc
cltd
mov
dec
sbb
stos
or
sbb
and
inc
add
daa
ffreep
daa
movsl
dec
sub
movsb
test
rolb
in
imul
mov
rolb
movsb
out
cs
ja
xor
inc
cmpsb
inc
ret
repnz
mov
outsl
cwtl
pop
mov
cs
sahf
dec
test
pop
mov
sbb
repnz
loop
data16
sbb
lcall
pop
or
out
pushf
mov
mov
insl
add
mov
jb
mov
dec
aam
arpl
or
jge
loop
jbe
xchg
jae
outsl
jo
cld
and
inc
lods
fstl
mov
inc
or
adc
sahf
idivl
shrb
push
movsb
outsb
pop
out
xchg
add
std
push
insb
movsb
out
cld
xor
xor
outsl
rolb
aad
lcall
cmp
push
fnstsw
nop
jnp
jns
xorb
sbb
das
jo
cmp
pop
mov
lock
xor
insl
add
icebp
mov
xchg
pushf
imul
jp
push
aas
inc
add
out
sbb
push
pop
es
mov
outsb
jne
fstps
jl
sbb
xchg
inc
pop
clc
inc
icebp
inc
fwait
loopne
push
jg
mov
addr16
add
sbb
mov
lcall
lcall
fs
xlat
or
test
ret
inc
pop
push
add
int3
push
mov
insb
imul
in
lods
fcmovne
imul
jp
mov
mov
cltd
fcomip
xlat
lea
js
mov
sahf
pop
cwtl
repnz
das
hlt
inc
and
sub
shrb
icebp
movsw
ljmp
pop
xchg
shll
cmp
dec
dec
dec
xchg
cmp
add
push
call
lcall
xor
sub
lea
pushf
push
ds
loope
and
ss
fcoms
in
jecxz
pop
mov
mov
mov
fwait
repz
xchg
ds
adc
sub
mov
test
out
test
fildll
je
fcmovnb
push
mov
call
fisttps
loop
and
push
shll
insl
cmpsl
xchg
and
adc
mov
mov
jnp
insl
outsb
push
dec
sub
sub
jbe
mov
mov
dec
std
insl
cli
mov
mov
pop
rclb
mov
adc
nop
gs
dec
xor
aam
mov
push
cmp
nop
repnz
test
jns
mov
inc
jp
push
mov
clc
mov
xor
or
es
fstpt
movsb
inc
call
add
sarl
and
call
js
enter
mov
mov
jae
pop
fdivs
out
inc
jle
mov
lds
mov
sub
lea
out
test
mov
jno
pop
sub
cld
cmpb
loop
iret
hlt
inc
lcall
push
jns
pop
pop
arpl
orb
add
push
xchg
cld
or
into
and
dec
xor
sbb
push
mov
xor
jl
repnz
hlt
sbb
andl
cmpsb
adc
clc
popf
jmp
xchg
lods
orb
or
pop
in
mov
and
repnz
inc
movsb
or
aad
test
inc
int
pushf
test
fsubrp
fiadds
iret
cwtl
fists
jne
inc
xor
mov
mov
into
lock
imul
sbb
dec
pop
fcoml
cmp
insb
subl
mov
bswap
aas
scas
mov
push
mov
mov
dec
and
cli
mov
add
enter
sbb
negl
out
iret
push
ljmp
dec
loop
xchg
cmp
push
in
cmpl
add
dec
xchg
inc
cmp
sub
push
scas
or
sub
xorb
sbb
insb
lcall
pusha
jmp
rcrb
push
jge
in
pushf
negb
dec
add
outsl
adc
ret
je
sahf
cmpb
mov
mov
inc
push
ja
cmpsb
and
cld
add
and
rcr
cmpsl
sub
pusha
cwtl
jp
adc
add
or
mov
pop
add
mov
or
daa
test
lcall
adc
outsl
adcb
pop
cmp
daa
lret
push
and
lret
repnz
dec
xor
roll
mov
xchg
and
lret
sub
cmpsb
sbb
push
addr16
add
adc
loopne
loop
jmp
cmp
push
adc
and
es
jge
adc
in
push
lcall
xor
push
or
sbb
ret
ror
bnd
inc
add
xor
jno
add
dec
adc
fstpt
test
lret
inc
repz
xor
xchg
or
jp
fidivrl
adc
mov
in
inc
repnz
dec
test
into
int
pop
sub
mov
inc
outsb
sub
mov
daa
sbb
pushf
adc
in
movl
pop
mov
push
inc
sbb
lods
outsl
xchg
shll
and
xchg
in
addr16
es
add
or
dec
mov
pusha
xor
jnp
out
imul
cld
repnz
ret
movl
cmp
push
xor
es
mov
sub
into
fnstcw
inc
mov
out
call
push
xchg
inc
dec
dec
adc
shl
cmp
hlt
jbe
imul
xor
push
lret
ljmp
notb
or
les
out
ds
repz
popf
jb
loope
adc
les
mov
movsl
push
stos
icebp
sub
mov
sbb
mov
jno
sub
pop
mov
pop
out
xor
inc
inc
jmp
inc
sbbb
filds
aas
jge
mov
mov
loop
and
push
ret
cltd
xchg
push
mov
pop
cwtl
sub
lea
movsl
push
or
outsl
pop
nop
mov
xchg
lcall
mov
hlt
jo
xor
lret
jmp
test
dec
lods
xchg
and
jl
xchg
jge
bound
jl
adc
js
imul
arpl
lcall
xchg
icebp
mov
add
cmp
cmpb
outsb
dec
bound
mov
mov
add
mov
cmp
enter
icebp
mov
jp
and
jge
lds
fwait
push
inc
aaa
mov
out
or
arpl
mov
bound
mov
xchg
les
in
aam
jp
sahf
imul
jle
pushf
pop
cmp
push
or
dec
add
mov
add
xchg
aam
mov
adc
loopne
jns
adc
fists
in
push
lret
popa
fidivrs
sub
fcmovbe
lret
ficoml
inc
mov
mov
aam
icebp
mov
je
cmpsl
adc
mov
call
movlps
jecxz
xchg
mov
sbb
cmpsb
hlt
push
xchg
in
cld
mov
je
mov
lahf
lds
mull
xchg
iret
lret
add
pop
mov
sub
add
daa
outsl
adc
sbb
std
shlb
lds
cmp
ja
dec
les
cmp
inc
xlat
loope
scas
mov
popa
cltd
dec
lds
clc
lods
jle
sti
xchg
push
push
xchg
lods
imul
stos
das
push
pop
jp
sti
repnz
imul
cli
dec
dec
push
std
jae
pop
or
push
ret
jo
adc
mov
and
push
cmp
adc
in
mov
mov
dec
mov
add
lcall
lret
push
xor
cli
shlb
pop
dec
mov
fcoml
fisttpl
sub
negl
mov
enter
mov
mov
cmpb
stos
pop
mov
adc
pop
add
loope
pusha
lret
dec
mov
sub
cs
out
jns
js
es
jno
push
jo
insb
jb
pusha
dec
test
dec
lock
mov
mov
mov
cltd
dec
mov
mov
adc
fwait
test
nop
mov
push
test
dec
jns
jnp
repz
dec
mov
stos
mov
movsb
push
jl
sbb
test
mov
in
xor
or
nop
test
into
lcall
movsl
rcrl
test
inc
js
aad
pop
je
and
sbb
iret
adc
repz
xchg
jl
fstps
jbe
push
xor
or
pop
mov
inc
pop
xchg
ja
dec
push
mov
adc
popf
movsb
pusha
cmp
movsl
jnp
inc
call
mov
push
mov
sub
inc
loop
push
push
jb
push
mov
or
and
add
ljmp
xor
cmp
sub
mov
mov
test
xchg
mov
js
jbe
or
shrl
roll
inc
ret
fisttpl
xchg
lods
insl
ss
addl
mov
lret
jmp
or
add
les
enter
xchg
mov
dec
shll
inc
sbb
pop
in
iret
sub
mov
adc
pop
dec
adc
fiadds
icebp
lret
or
sub
outsl
arpl
jle
scas
in
adc
clc
sub
std
cmp
or
xorl
and
mov
int3
fs
loope
fwait
cmp
jmp
xchg
cltd
fucomp
into
xor
rcll
sbb
dec
lcall
nop
into
xor
aas
cli
imul
add
int
lock
mov
mov
pop
add
cmp
jg
movsb
fildll
push
jl
pusha
test
addr16
int
or
int
imul
cmp
or
aaa
mov
xchg
std
push
mov
repnz
mov
repnz
iret
dec
out
and
jecxz
dec
ja
bound
xor
mov
adc
ds
subb
fcompl
into
jns
jmp
iret
dec
lret
add
inc
bnd
test
mov
cmp
scas
pop
leave
dec
dec
into
fs
push
sub
mov
add
inc
sub
inc
test
imul
lret
dec
mov
mov
mov
ret
mov
jnp
inc
push
out
test
xor
xor
jae
mov
sti
pusha
jbe
and
sub
xchg
cld
cmpl
shlb
repnz
cli
rcr
mov
movsb
jb
push
sub
loope
ss
mov
push
js
mov
cmp
jge
xchg
cmp
insl
inc
xor
int
in
xchg
adc
jl
push
arpl
or
xlat
jae
imul
inc
insb
das
pop
inc
push
jne
push
leave
ja
cmp
nop
das
push
enter
ss
pushl
cmp
int
not
adc
jns
mov
call
scas
mov
jae
add
xor
xchg
pop
clc
xchg
mov
int
dec
and
mov
ret
sbb
mov
loope
and
push
mov
push
add
mov
sub
cmpsl
cli
cli
loop
mov
addr16
gs
jl
pop
jmp
lock
icebp
mov
hlt
loope
sub
sub
fidivs
dec
and
push
xchg
push
cmp
in
xchg
push
sub
fildl
push
lock
ficoms
adc
sbb
jns
xor
xchg
in
push
mov
jge
adc
add
pop
cld
lods
jne
sti
into
loopne
pop
jmp
pop
adc
jl
mov
gs
test
dec
repnz
fldt
add
pushf
cmp
into
aaa
sti
outsb
loope
jge
dec
push
or
cs
xchg
leave
ja
add
mov
add
sub
dec
das
mov
mov
cmpb
mov
ss
fwait
jns
pusha
xchg
nop
jbe
sub
sbb
inc
js
cmp
dec
pop
je
pop
int3
inc
or
aas
push
repnz
jnp
aam
in
pop
jl
movl
insl
pushl
push
mov
mov
sub
movsb
sbbb
xor
mov
movsb
and
aas
cmp
xchg
mov
int3
pusha
pusha
test
loopne
aaa
pop
push
mov
jg
xchg
ss
mov
out
divb
jp
jge
sbb
ss
paddsw
std
mov
test
jne
icebp
enter
sbb
and
xchg
inc
or
daa
xchg
mov
test
and
ja
leave
cmp
out
jle
jmp
xor
push
fistpll
iret
rclb
ss
xchg
adc
int
jns
mov
xchg
cmc
decb
and
pop
ret
and
xor
mov
cmp
fmull
out
mov
les
dec
inc
xchg
icebp
xor
stos
call
out
out
ds
ljmp
popf
in
pop
push
cmp
xor
and
adc
cmp
xchg
ja
pusha
sub
push
repz
movsb
cmpsl
push
aam
push
push
mov
int
xor
dec
mov
adc
fwait
paddd
dec
aad
push
out
jge
les
pop
pop
xlat
repz
out
mov
mov
mov
gs
cmp
test
xor
push
arpl
inc
mov
xor
stos
jecxz
adcl
dec
pushf
add
ljmp
pop
dec
cmpsl
mov
insl
jns
insb
ret
stos
testb
cmc
pop
gs
pop
js
adc
orb
mov
test
jle
or
pop
jb
insb
jo
stc
cmp
sbb
jmp
test
es
lods
xor
inc
imul
sbb
fisttps
push
cli
adc
imul
push
push
dec
int
ds
dec
in
jb
mov
jnp
and
adc
roll
hlt
movb
mov
mov
pop
rcll
fcomps
jne
inc
cltd
adcb
push
notb
das
pop
or
dec
les
test
pop
mov
mov
je
mov
testb
negb
jb
outsl
lock
adc
push
or
repz
xchg
mov
jmp
jmp
sbb
out
mov
adcl
push
jge
mov
nop
mov
adc
stos
idivl
and
xor
shll
lret
sub
sub
fisttps
imul
mov
jg
and
and
addb
in
in
clc
stos
outsb
iret
adcl
inc
enter
mov
sti
daa
pop
fisttps
ret
lock
push
cmp
insb
sbb
bnd
sub
lods
repnz
cld
mov
shll
dec
sbb
rorb
cwtl
gs
mov
ret
sub
mov
cmc
inc
lahf
aad
aaa
cmp
out
int
mov
and
outsb
punpcklwd
in
test
jecxz
cmp
add
mov
and
xchg
mov
xchg
call
fs
fcoms
mov
negb
pop
jl
aad
mov
out
inc
mov
push
xchg
mov
sub
cmpsb
sub
jg
fs
filds
sbb
lret
sub
adc
push
call
cs
xchg
adc
ds
jl
pop
mov
push
push
pop
push
sbb
jo
hlt
sub
nop
imul
inc
sub
jecxz
lcall
sahf
pop
mov
sbb
bound
pop
popa
negl
mov
jle
add
xorb
mov
xchg
pop
adc
or
inc
xchg
add
rorl
mov
adc
cmp
add
out
jnp
adc
pop
inc
hlt
jge
push
ljmp
sbb
jns
pop
sbb
add
out
enter
aas
das
push
sti
rclb
call
add
arpl
xor
loop
lods
daa
cmp
fidivl
pop
sahf
mov
cli
dec
push
xor
sub
push
insb
pop
push
jmp
js
test
xchg
outsb
adc
xor
in
jo
sub
imul
cmpl
pop
xchg
pop
inc
pop
sahf
jns
sub
out
sbbl
arpl
or
inc
rcrl
adc
jmp
lahf
clc
in
icebp
out
or
or
ds
sbb
mov
pop
jge
xchg
scas
cmpsl
cmpb
cmp
ljmp
add
push
add
pop
loop
xorb
jp
call
sbb
loope
xor
push
hlt
ljmp
cmp
rcrl
dec
push
push
mov
pop
mov
insl
push
mov
pop
pop
sbb
mov
sbb
xor
sub
adc
xor
fcmovne
sbb
pop
adcl
js
lahf
movsb
insb
lret
mov
mov
shll
je
mov
jecxz
pop
and
cmpsb
mov
dec
sbb
and
ret
xor
mov
dec
hlt
jg
mov
mov
inc
pop
out
cmp
stc
cwtl
xor
in
sub
das
cs
xchg
add
aam
out
cmpsl
cmp
aas
add
enter
je
enter
sbb
jmp
pop
aam
pop
ljmp
mov
xlat
sbb
push
sbbl
mov
addb
or
cld
imul
adc
sahf
push
mov
fsts
outsl
es
mov
mov
and
mov
xchg
push
cmpsb
test
jbe
js
cmp
jbe
inc
sbb
push
push
ljmp
inc
mov
add
popf
jae
and
jle
jg
lea
inc
cs
sub
add
jno
cmpsb
fistpl
mov
inc
pop
pop
inc
stc
xor
test
or
mov
addr16
cli
lock
cmp
sbb
shrb
dec
pop
test
xchg
push
cltd
jle
sbb
aam
out
lds
sub
mov
mov
mov
imul
repz
xchg
cmpsl
dec
mov
es
popa
push
cmp
sub
sbb
mov
mov
mov
mov
adc
adc
mov
cmpsb
mov
mov
in
cmp
xchg
sub
inc
loopne
jnp
xchg
mov
push
fcomi
test
lock
adc
pop
stos
jns
pop
hlt
xchg
sahf
cmp
mov
sbb
bound
outsb
jb
das
rcrb
in
xchg
loop
jl
punpckldq
jmp
xchg
sub
es
pop
out
test
jns
lea
jne
je
add
lods
or
sub
pop
test
pop
lds
cmp
cmp
leave
xchg
xchg
mov
insb
xchg
clc
ds
bound
in
jle
fistl
jnp
cmp
lret
test
nop
cmp
shll
fwait
ret
enter
mov
test
fdiv
and
sbb
mov
sti
repnz
in
jae
shll
mov
jecxz
xlat
sbb
push
jecxz
push
faddp
xchg
insl
or
inc
loopne
test
jbe
fs
xchg
and
lcall
or
mov
sub
nop
mov
xor
dec
xchg
xchg
pop
fldt
sub
jb
pop
std
je
xchg
sub
jecxz
fs
orl
mov
jae
fsubrs
push
jb
dec
mov
jno
push
in
push
mov
repnz
mov
dec
lods
adc
pop
mov
aam
lahf
in
fwait
push
mov
loop
jae
cli
cli
outsb
cmp
xor
push
add
and
lahf
jmp
cmpsl
mov
push
add
pusha
ja
jl
ret
ficompl
cmpsb
lds
inc
mov
mov
aas
xchg
push
xor
arpl
stos
fstpt
dec
ljmp
or
jne
shr
cltd
jno
lods
arpl
mov
mov
mov
mov
test
mul
xor
and
and
xchg
jl
fists
out
and
dec
push
jns
jg
or
push
insl
cld
mov
mov
sti
imul
xchg
mov
push
bound
and
dec
lcall
mov
xor
mov
popf
or
enter
push
or
or
scas
cmp
xchg
subb
mov
xchg
and
incl
bnd
mov
aad
icebp
clc
push
mov
inc
cmp
aam
xor
repz
out
out
sbb
mov
inc
gs
fisubrs
xorb
je
divl
xchg
lret
out
or
inc
mov
xchg
jmp
mov
xor
inc
fmull
push
fsubs
sbb
xchg
aam
mov
jnp
or
mov
test
clc
mov
out
add
aam
mov
lea
cmpsb
aam
push
or
jno
push
inc
mov
in
shrl
pop
movsl
into
sbb
imul
es
xchg
es
cltd
cs
jns
jae
test
clc
lods
mov
repz
pop
cwtl
aad
addr16
push
ds
lds
sti
test
push
sbb
mov
mov
mov
repnz
fistps
jno
xchg
stos
cwtl
stos
fcomip
inc
cmp
divb
std
call
test
push
movsb
daa
dec
and
loope
push
cmc
jg
addb
movsb
pop
cmp
js
mov
pop
jmp
jmp
jne
mov
push
push
les
lods
lods
pop
jo
hlt
pop
push
into
mov
icebp
iret
fcompl
xchg
rcrb
sbb
rcr
stos
ds
mov
fdivrp
lock
nop
adc
fisttpll
cwtl
push
xor
les
sbb
arpl
lods
movsl
and
fwait
jns
xor
push
cltd
xor
inc
jmp
pop
loope
xor
inc
repz
imul
sti
dec
pop
add
cmpsl
dec
gs
push
adc
xor
clc
rolb
push
bnd
and
mov
repz
mov
xchg
dec
in
inc
sbbl
adc
or
mov
and
xchg
mov
xchg
stc
pop
dec
pop
push
out
sub
and
mov
push
out
mov
push
mov
adc
cmc
jo
cmp
ret
or
xor
push
mov
fs
mov
push
mov
fidivrl
jnp
ljmp
iret
push
xchg
sub
or
pop
int3
aaa
test
incb
into
mov
dec
pop
movsl
ret
imul
popa
in
push
out
mov
fistpll
fildl
pop
cmovge
in
testl
pusha
daa
test
rclb
jns
jge
pusha
clc
cmp
ljmp
ficoml
testl
push
push
imul
pop
jmp
mov
les
imull
aad
leave
mov
loopne
sub
cwtl
out
mov
inc
push
test
aad
arpl
andl
sbb
stos
push
outsl
inc
jecxz
into
dec
loop
dec
dec
in
insb
lret
xor
fisubrs
sbb
xchg
cmp
int3
push
inc
out
sbb
ja
out
lock
ret
frstor
orl
leave
mov
shr
adc
int
add
cmc
xor
push
outsb
mov
clc
xor
imull
in
daa
int
push
ret
movl
and
loope
jmp
and
jno
mov
loope
adc
inc
add
xchg
add
imul
fildll
pop
dec
out
jnp
mov
in
inc
stos
dec
mov
scas
push
js
fisubl
in
pop
ja
inc
cmp
sub
mov
pop
iret
ss
in
and
and
sarb
lahf
out
jno
mov
arpl
stc
sbb
lcall
cli
int
int3
daa
inc
dec
in
imul
aas
into
push
shll
and
ret
in
movsl
push
mov
mov
push
cmp
mov
cld
in
push
das
inc
sar
push
daa
nop
sbb
cld
cmp
cs
pop
xor
cmp
lea
mov
mov
mov
out
out
mov
or
xor
aad
pop
dec
cltd
repnz
lcall
xor
or
mov
fnstenv
cld
lock
pop
je
xor
pusha
push
sbb
push
rolb
lea
sbb
cmp
add
add
add
jge
xor
outsl
fdivrs
sub
mov
jb
add
arpl
dec
inc
push
scas
sbb
xchg
repz
inc
jns
pop
jnp
insb
mov
dec
xchg
es
dec
ficoms
dec
fs
out
xchg
loop
adc
in
mov
add
insb
push
test
add
mov
popa
rcrb
loopne
ficomps
xor
in
mov
cli
sub
xor
imul
pushf
ss
shr
push
sub
xchg
adc
loope
add
in
shll
dec
add
out
or
dec
mov
pop
pop
mov
cmp
insl
lcall
jno
jl
dec
xor
mov
pop
push
xchg
jmp
imul
mov
jbe
mov
shll
push
sbb
cmp
aam
pop
jecxz
test
add
das
push
pop
push
shll
inc
xor
and
jg
out
inc
fwait
push
repz
fcmovnu
cltd
shrl
inc
icebp
cld
cli
jle
insb
pop
sub
mov
fsts
lods
aas
push
inc
xor
call
xlat
lcall
rcl
push
jmp
out
dec
negb
sbb
pop
mov
loop
xchg
cmp
adc
sbb
insl
outsl
mov
int
xor
sub
add
fistpl
pop
inc
sbb
dec
or
aam
jbe
pusha
cmp
addr16
cmpl
ror
jp
insb
xchg
cmp
lods
pop
lods
lock
sub
lret
cmc
xor
cwtl
into
test
aaa
in
mov
repnz
push
orb
cli
mov
jns
mov
pop
inc
inc
xor
loope
mov
xor
push
push
test
push
or
lret
sbb
icebp
shlb
mov
jns
mov
sbb
imul
mov
vmovntdq
xchg
lret
dec
dec
dec
sub
dec
into
test
dec
lods
mov
pop
ss
andb
data16
jno
pushf
loopne
xor
jecxz
pop
xor
mov
test
repz
xor
lds
sub
inc
orb
lock
rorb
sbb
repnz
xlat
pop
inc
jle
test
inc
mov
cmp
xor
int3
jp
sbb
mov
pop
sub
imul
cli
xchg
outsb
xchg
ret
cmpl
out
jns
dec
mov
add
dec
notl
cltd
jle
push
mov
cli
push
lcall
out
jmp
push
stos
sub
sbb
rcr
cmp
dec
ljmp
xorl
shll
push
lds
push
xchg
inc
jge
pop
data16
das
ljmp
ds
and
or
xchg
jmp
iret
push
inc
sub
xor
dec
iret
test
jle
out
pop
fidivs
mov
xchg
pop
sbbb
xchg
in
mov
xchg
xchg
xor
xor
arpl
lds
cmp
sub
pop
insl
outsb
lret
and
adc
nop
jnp
imul
imul
scas
hlt
sbb
mov
mov
ret
fs
dec
jl
cmp
mov
fimuls
xchg
mov
test
jnp
scas
jo
hlt
push
and
rdmsr
inc
mov
cmp
pop
sbb
and
xchg
or
xor
sub
xchg
dec
loop
sbbb
scas
adc
adcl
mov
push
sbb
xor
inc
lret
in
jl
push
loop
enter
pop
jns
xchg
pop
rcrl
push
outsb
mov
cmpsl
mov
mov
cld
push
mov
dec
test
loope
stos
lea
or
leave
xor
jp
lock
jmp
sbb
out
pushf
clc
inc
cli
lds
xchg
push
cmp
xor
bound
push
adcb
scas
movsb
inc
bound
arpl
and
sbb
sub
xchg
mov
sbb
shlw
rcrb
pop
and
adc
loopne
out
sarb
xchg
out
loopne
test
andb
jp
push
shll
xchg
adc
loop
pop
inc
mov
pop
pushf
stos
leave
add
mov
pop
shlb
je
mov
dec
call
push
mov
pop
das
inc
pusha
out
sub
popf
mov
push
mul
popf
dec
dec
loop
mov
adc
inc
loop
adc
iret
mov
in
pop
xlat
jmp
arpl
bound
icebp
out
jo
rcrb
adc
xchg
lcall
mov
mov
daa
hlt
repz
lcall
add
out
and
adc
sbb
xchg
clc
and
repnz
lcall
xlat
or
dec
pop
cld
cmp
fimull
sahf
or
in
dec
and
icebp
bound
test
mov
mov
aad
pop
sbb
je
mov
out
jb
cmp
shrb
cmp
incl
jecxz
mov
inc
int
xchg
rclb
xchg
clc
or
dec
sbb
adc
mov
xchg
jmp
inc
das
cli
insb
dec
add
enter
or
dec
cmp
add
aad
movsl
jg
loopne
push
into
push
adc
rcll
pop
adc
inc
inc
out
add
ja
imul
aas
pop
rcrl
es
adc
dec
jmp
mov
xor
leave
xor
mov
push
addr16
lret
rcl
mov
fwait
lods
in
or
sbb
push
and
push
sub
ffree
mov
mov
sub
lea
cs
das
enter
cmp
inc
and
lret
fdivl
icebp
mov
pop
pop
cmp
loopne
sub
xor
sbb
sub
cmc
cmpsb
mov
fnstsw
js
jns
lods
and
fsubrl
es
mov
insl
mov
sbb
and
cmp
cli
add
cmpsb
mov
inc
ret
xor
imul
lahf
mov
pop
leave
or
push
outsl
mov
adc
and
leave
inc
cs
dec
insb
or
minps
fstpt
sub
mov
xor
jmp
sbb
push
mov
lahf
into
push
js
and
std
daa
dec
dec
sbb
in
mov
mov
sbb
sahf
cmpsb
xchg
adc
sub
inc
or
cmpsl
scas
mov
push
ja
mov
dec
inc
sbb
lahf
push
scas
mov
xor
fnstenv
adc
ret
test
pushf
in
in
sub
ja
movsl
push
adc
xchg
es
or
rcll
sahf
jb
lcall
ja
imul
sub
fstl
sbb
pop
mov
xchg
sub
lret
iret
jne
push
adc
out
mov
rcll
clc
pop
fstl
mov
xor
js
stos
fs
pop
jbe
ret
mov
popf
ljmp
sbb
cmp
dec
jbe
fwait
negb
jo
add
imul
popf
scas
jne
sbb
xchg
sahf
test
lret
pop
popf
lods
movsb
scas
cmp
jnp
dec
adc
mull
call
sub
dec
sbb
lret
bound
in
insb
jo
dec
mov
dec
jmp
mov
enter
ret
mov
or
out
jge
pusha
subb
xchg
pop
loopne
out
or
stc
xchg
add
psrlw
movsl
std
inc
gs
sbb
inc
or
outsb
inc
and
lahf
lods
mov
xor
and
insb
jae
cmp
cs
or
test
or
adc
lea
outsl
daa
cmp
lret
mov
movsl
in
jns
mov
dec
push
stos
cmp
sbb
movsl
out
sub
push
and
dec
clc
scas
cwtl
repnz
clc
jp
mov
dec
or
shlb
pushf
inc
push
cmpsb
test
popf
inc
jl
sub
dec
pop
or
int
movsl
aas
fnstsw
sbb
icebp
sub
out
xchg
xchg
and
sub
int3
and
xchg
loopne
pop
add
mov
scas
pop
je
jnp
movsb
in
or
mov
fildl
dec
dec
shlb
insb
inc
xorb
std
pusha
das
or
adc
lahf
nop
adc
sbb
test
sbb
and
inc
mov
adc
mov
andl
pop
mov
movsb
iret
lret
and
mov
xchg
cmpb
xor
and
sub
in
dec
xchg
fwait
int3
jmp
jno
bswap
jp
ss
scas
and
in
inc
xor
repnz
test
sub
cmp
hlt
dec
pop
sbb
popf
push
insl
jo
leave
imull
xor
in
sub
or
cmpsl
aaa
cmp
and
fidivl
and
ja
pop
and
fnsave
movsb
daa
inc
int
mov
bound
in
push
push
sub
add
dec
data16
mov
clc
jecxz
ret
sbb
hlt
aam
cld
jmp
and
enterw
jo
pop
sbb
mov
js
and
outsb
scas
icebp
cmpsl
inc
jmp
pushf
mov
dec
inc
mov
xchg
mov
pop
fwait
adcb
clc
jb
add
jmp
cmc
aam
movsl
add
add
jl
push
lods
mov
cmp
clc
xor
xor
mov
call
test
mov
cmp
out
rclb
adc
mov
mov
mov
and
sub
and
ja
jl
push
ss
cmp
mov
push
cli
lret
test
pop
adc
mov
pop
fbld
divb
mov
inc
sbbl
ds
or
mov
adc
mov
or
xchg
jge
push
mov
sbb
daa
fmulp
in
int
outsb
inc
jp
icebp
rolb
fs
and
adc
jge
jae
xchg
bound
xchg
inc
nop
roll
aas
stos
jge
loopne
jecxz
pop
loopne
xor
leave
dec
jbe
out
ficoml
andl
or
mov
push
rcll
addr16
test
or
cmp
lods
jecxz
dec
lds
lds
int
mulb
ss
popf
loop
pop
insl
punpcklbw
xchg
setle
jg
hlt
add
jno
stos
mov
pop
aad
fstp
inc
scas
push
fiaddl
and
int
fwait
sbb
fs
inc
dec
mov
in
cmc
jl
cmp
and
daa
mov
out
or
mov
ret
sarl
es
xchg
lock
pushf
and
jbe
push
lods
xchg
xor
pop
pop
movsb
push
xor
and
pushf
push
push
xor
repz
dec
lret
cmp
ret
sub
jmp
aad
in
xchg
out
add
in
cmp
mov
pusha
in
inc
lret
ljmp
sbb
or
aas
je
test
nop
loopne
ss
sbb
sti
shlb
sti
xchg
jecxz
mov
lods
cmp
or
sarl
clc
cmp
out
lcall
int3
and
push
push
je
xor
jmp
jbe
hlt
sub
nop
lret
repz
aas
cmp
fisubs
xchg
clc
into
jbe
insl
mov
cmpsb
hlt
sti
notl
sbb
fnstenv
mov
inc
adc
mov
movsb
sub
test
dec
dec
and
dec
gs
daa
jbe
je
mov
nop
out
scas
mov
movsl
and
push
xchg
push
cmpsb
test
jo
aad
mov
in
in
sub
add
jb
inc
xchg
outsb
xchg
fistl
icebp
cmp
mov
sub
inc
pop
xchg
dec
xor
add
punpckhbw
test
mov
fistps
add
dec
pop
mov
in
lds
adc
aam
fwait
test
fiaddl
pusha
xchg
push
hlt
fld
lods
xchg
fcoms
pop
test
mov
scas
push
aad
mov
mov
push
arpl
jns
ret
test
fsubrl
or
stos
nop
mov
and
sbb
adc
jmp
and
fwait
jae
jle
pop
or
gs
jb
sbb
xchg
enter
mov
mov
std
lock
pop
and
test
sub
pop
repz
push
gs
pop
jbe
fisubl
cwtl
sbb
lods
sbbb
and
out
lahf
aad
testl
sub
aam
icebp
or
dec
fdiv
cmp
and
lret
dec
test
adc
movsb
int
sub
sbb
adc
and
xor
sbb
jg
mov
popa
adc
clc
leave
loop
pop
mov
sub
je
mov
adc
es
push
les
dec
jo
push
mov
push
add
loopne
xor
sub
mulb
jp
xor
jge
push
inc
rcr
push
loop
adcl
fstpt
nop
shrl
mov
ret
rolb
lock
xlat
js
mov
stos
push
repnz
jmp
gs
lahf
pusha
add
dec
int
dec
mov
jp
lahf
dec
cmp
jmp
clc
inc
xor
mov
dec
insb
sub
out
sub
dec
shll
jp
lcall
dec
in
sahf
decb
sub
leave
cmpsb
fcomp
jge
jge
adc
xor
push
leave
shll
push
gs
inc
into
mov
adc
mov
sbb
sbb
push
lods
xor
insw
test
enter
test
dec
mov
je
jne
lahf
dec
aas
mov
xchg
mov
or
mov
jb
jp
sbb
mov
and
add
loope
aas
bound
xor
movsb
sbb
imul
imul
jnp
cmpsb
adc
inc
jp
arpl
enter
pop
and
sbb
inc
and
jg
push
adc
cld
push
inc
dec
push
or
popa
jmp
ror
jb
or
addl
mov
mov
mov
or
nop
push
lods
mov
shl
in
testb
jb
ja
xor
xchg
push
push
pop
inc
push
and
js
ret
pop
aad
popa
pop
mov
inc
mov
mov
outsb
and
sub
cltd
movlps
cmp
scas
cmpl
shll
fidivrs
and
ljmp
ret
add
lret
gs
or
repz
les
lea
adc
sarb
lock
iret
sbb
cmp
inc
movsb
cmc
cmpsb
push
pop
idivl
mov
push
jo
pusha
inc
sbb
negb
rcll
adc
sbb
push
stos
jge
repz
mov
push
xchg
arpl
in
dec
adc
inc
das
dec
lcall
mov
sub
and
xchg
sub
cltd
xchg
out
push
out
lea
jbe
inc
mov
invd
jne
xchg
mov
mov
sbb
inc
pop
push
fistps
outsl
in
fchs
mov
iret
push
lods
pop
adc
jl
popf
add
popa
shl
enter
fwait
lods
sub
popf
mov
hlt
stos
xlat
les
or
mov
push
cwtl
popf
sti
inc
std
fbld
xchg
das
cmp
sub
mov
outsl
insb
jns
movsb
into
push
fs
les
add
cwtl
mov
and
inc
mov
mov
pusha
adc
outsb
sbb
mov
int3
sar
push
jp
jbe
in
cs
sbb
jecxz
jb
iret
pop
dec
bound
or
sub
cmp
enter
cmp
mov
pop
dec
icebp
in
not
ds
out
cltd
enter
sahf
lahf
mov
pop
outsb
shrl
popf
xor
mov
ret
dec
call
pop
cwtl
out
out
negb
mov
dec
jmp
jmp
add
lret
sar
push
in
adc
inc
out
mov
sarl
mov
incl
adc
adc
pop
and
jo
lahf
adcl
push
notl
cmp
xchg
mov
cwtl
xlat
insb
test
cmp
fsubl
in
mov
inc
in
test
or
leave
mov
sahf
adc
sub
ljmp
pop
jecxz
mov
icebp
pop
shlb
int
idivl
and
push
jae
addb
dec
es
lea
push
in
nop
cmp
mov
mov
mov
adc
je
cmp
jae
aaa
sbb
pop
in
push
adc
add
xchg
jnp
inc
xor
sahf
adc
out
mov
insb
cltd
mov
sub
mov
cmp
pop
lods
xchg
push
nop
out
sub
lea
test
xor
movsl
mov
test
inc
pop
cmp
mov
adc
gs
mov
mov
sub
xor
push
adc
xchg
jp
cltd
outsl
insb
pop
dec
inc
sub
pop
int
sarl
dec
mov
jo
ljmp
adc
repnz
movsl
pop
test
dec
scas
pop
xchg
xor
xor
cmp
jbe
movsb
sub
push
cmp
aad
push
jl
aam
cmova
imul
andb
fildll
or
xor
mov
vpsubq
das
fstp
in
movb
rcrb
sarl
cltd
bound
cmpsb
lret
jns
mov
sahf
bswap
xlat
pop
testl
cmp
addr16
push
scas
clc
dec
insl
and
mov
push
adc
mov
and
and
inc
inc
sbb
bswap
push
mov
sbb
test
xchg
cltd
and
mov
icebp
mov
cltd
mov
jae,pn
fnstsw
cmpsl
movsl
fs
adc
mov
mov
mov
and
or
shlb
aaa
push
test
in
sub
ret
lods
cmp
enter
lea
cmp
fwait
xor
inc
ds
add
in
and
fisubrs
jmp
jno
mov
or
pop
cmp
inc
add
cmp
push
adc
xor
and
adc
mov
outsb
sbb
daa
icebp
mov
cmpsl
es
mov
jmp
dec
sbb
pop
push
inc
ja
xor
imul
push
lret
shr
fnstenv
sub
cltd
push
xchg
push
xchg
test
pop
cwtl
incb
mov
xchg
icebp
dec
mov
pushf
cwtl
addr16
jmp
jbe
pop
inc
jns
out
lds
cmpsl
pushf
sub
jnp
aas
push
push
jae
adc
lcall
sbb
ss
stc
arpl
xchg
dec
xchg
inc
das
mov
mov
int3
repnz
jmp
in
out
xorb
ja
incb
dec
sub
pop
mov
iret
fdivl
mov
mov
jge
shll
movsl
xor
and
out
xor
inc
jle
pop
cltd
jno
shlb
in
out
jecxz
xchg
insb
sbbl
inc
and
push
cmp
sbb
ss
mov
aad
cmp
push
adc
cmp
inc
popf
mov
mov
rorb
jnp
fildl
stos
inc
mov
push
ss
aad
inc
inc
jg
pop
pop
cmp
rclb
xchg
loope
dec
pushf
mov
divl
setl
mov
enter
inc
xchg
pop
add
xchg
pop
cltd
scas
xchg
jne
adc
xchg
dec
mov
in
fldcw
mov
enter
popf
movsl
mov
int
shl
or
jmp
lods
inc
sub
sbb
jns,pt
and
mov
sbb
loopne
pop
fsubl
fidivs
or
lret
push
mov
mov
loope
add
orb
mov
test
adc
and
ja
sahf
aam
xor
push
dec
scas
xchg
mov
sbb
fcmovnu
js
scas
jge
sub
shll
arpl
jae
cmp
cs
loope
inc
lds
out
cmp
jp
ds
aad
mov
push
fsubrl
shll
dec
cltd
mov
mov
je
dec
jg
cmp
push
jge
xchg
xchg
nop
daa
scas
jecxz
cmpsl
movl
or
ja
sub
mov
dec
in
popf
stos
loope
add
lock
jne
loope
clc
dec
pop
dec
cmc
out
fbld
jns
or
lods
nop
xchg
and
repnz
jbe
jne
pop
cmp
xchg
pop
js
jmp
mov
outsb
and
dec
inc
jns
add
lock
push
mov
dec
enter
dec
nop
and
jmp
xor
lea
ds
xor
inc
xchg
jecxz
cs
xlat
ljmp
repnz
jno
sbb
jae
jg
ret
stos
jmp
fmull
push
in
inc
repnz
jne
pop
pusha
ljmp
adc
and
das
fisttpl
lock
outsb
push
jmp
repnz
lock
push
in
fsts
inc
jns
ret
adc
insl
mov
add
push
lcall
cmp
je
out
js
dec
jbe
mov
dec
push
mov
and
mov
push
lcall
jl
in
enter
lods
pop
mov
adc
pusha
push
jmp
adc
and
fiadds
and
aad
lahf
stos
into
in
jge
jmp
inc
popf
xor
sbb
les
loop
dec
mov
lds
push
jecxz
push
mov
xor
lds
and
pop
nop
cwtl
inc
xchg
jg
mov
ret
rcll
std
inc
sub
push
mov
fistpll
mov
addr16
lahf
add
push
mov
jbe
lock
push
xchg
jge
adc
aad
out
lods
inc
std
add
js
inc
sub
lds
jg
imul
test
ret
dec
imul
jmp
pop
jo
mov
cwtl
inc
xor
out
in
lret
xlat
mov
sub
cmc
clc
xchg
pushf
aas
jae
addr16
xchg
fisubrs
pop
mov
movsl
adc
adc
xchg
xchg
push
std
push
push
mov
lds
pop
and
repnz
cmpsb
push
jecxz
rolb
dec
mov
shlb
lods
cld
stos
push
stc
sbb
push
sahf
xor
sbbb
repz
jl
mov
pushf
inc
es
mov
xor
add
icebp
jns
cmc
fdivrs
repz
dec
pusha
daa
cmc
pop
mov
dec
mov
into
mov
pop
push
pop
sub
or
leave
iret
lods
xor
xor
ficompl
lret
fdivrl
mov
jl
or
xor
mov
jns
cmpsb
mov
xchg
mov
in
jns
dec
inc
push
mov
sbb
push
push
les
cmp
push
adc
data16
aaa
clc
stc
cmc
mov
lds
add
enter
adc
sbb
push
inc
repz
xorl
adc
adc
xchg
call
rcrb
scas
adc
into
sbb
cmp
and
mov
jns
pop
pop
movsl
sub
sub
pop
mov
aas
cmp
ret
jbe
aaa
fidivrl
cli
jmp
or
cmpsl
adc
in
mov
pop
in
pop
ret
or
mov
mov
pop
inc
sub
aad
lcall
int
stc
shrl
call
lods
cmp
cwtl
mov
and
arpl
jno
movsb
call
or
pop
sarl
sub
test
xchg
push
and
xor
pushf
aas
push
mov
or
mov
das
xor
je
xor
sti
xchg
orl
shrl
jl
xor
fadds
add
cmp
stos
cmp
loopne
cmp
sti
adcl
cmp
mov
movsl
jge
mov
insl
jno
jns
test
and
mov
push
mov
dec
push
dec
lret
aas
sti
jbe
cli
cmpsb
sti
push
ret
ljmp
cwtl
mov
sti
pop
scas
nop
push
int
out
mov
inc
outsb
aam
add
lea
fisubs
mulb
or
pop
insb
add
push
rcrl
in
inc
xchg
js
fsts
sbb
push
nop
repz
scas
lods
dec
sar
jmp
jg
jl
mov
jge
adc
roll
mov
adc
push
xchg
js
aaa
xchg
cmp
fdivs
sti
add
adc
sbb
add
fimull
sti
in
jp
inc
push
mov
pop
sub
push
push
add
std
or
int
mov
mov
aas
mov
cmp
imul
loop
dec
jne
cmp
mov
sbb
int
cltd
adc
cmpsl
jnp
inc
testb
add
adc
mov
mov
idiv
inc
sbb
loope
pop
insb
pop
push
test
stos
pop
movsb
call
mov
jae
push
sarl
ds
mov
push
ja
inc
xchg
lea
into
jecxz
sub
mov
inc
cwtl
push
addb
xorl
inc
movsl
push
or
lock
mov
ret
pop
shll
xchg
pop
inc
mov
cmp
les
cmp
fildl
mov
cmp
mov
push
js
pop
mov
pop
push
dec
pop
jmp
or
in
xchg
cmp
jge
inc
pop
inc
dec
lods
into
loopne
mov
adc
xchg
ss
negl
xchg
and
out
enter
lret
jnp
push
imul
xchg
ret
mov
ja
mov
push
mov
xchg
cmp
cwtl
gs
jae
mov
pop
test
cwtl
push
push
sub
enter
scas
jnp
lret
xor
hlt
xchg
or
xor
mov
xchg
adc
sub
cwtl
jb
adc
fwait
popl
es
push
or
jp
lret
lret
movsb
cmp
pop
rorl
mov
outsb
xchg
cmp
push
cmp
xchg
ljmp
into
mov
xor
mov
cli
adc
sbb
out
push
mov
jo
mov
inc
push
ljmp
push
fwait
dec
xchg
fnstenv
pusha
cmp
mov
mov
jecxz
and
loop
mov
add
int
cmp
cmp
xor
sbb
ljmp
insb
fstl
pop
lcall
mov
jae
cmpsl
push
and
push
cmp
popa
inc
xchg
push
mov
xor
cwtl
push
sahf
push
rorb
ss
xor
mov
enter
leave
mov
aam
xor
int
pop
mulb
call
xchg
rolb
sahf
stc
cmp
shll
mov
xchg
xchg
pushf
adc
fisttpl
ficomps
lcall
cld
clc
mov
cmp
mov
insb
cmp
in
outsl
mov
lods
sub
adc
iret
add
or
js
xchg
stos
fsubl
dec
ret
nopl
mov
jl
test
and
fimull
hlt
mov
xchg
dec
in
jge
mov
andl
bound
into
jl
jp
xlat
sahf
outsb
in
cmp
repz
lock
jo
lea
das
inc
pop
jnp
sbb
jp
fmull
mov
xor
pop
fld
repnz
test
int
orb
adc
stos
inc
ljmp
outsb
jge
dec
mov
pushf
adc
je
dec
pusha
dec
clc
xorl
xchg
and
imul
jb
jnp
push
sbb
add
mov
ficoms
sub
pop
jae
lods
arpl
pop
cmp
inc
push
aaa
cmpsl
add
jp
push
adcb
xchg
dec
movb
inc
pop
out
stos
bound
mov
test
cmp
adcl
cmpsl
sub
xchg
fucomp
sbb
pop
popf
sub
jmp
call
and
cmpsb
pop
popf
cmpsb
sbb
jmp
pop
daa
mov
adc
xor
cli
shr
and
mov
fwait
inc
in
push
jmp
mov
mov
mov
maxps
nop
andb
ror
fisubrs
mov
inc
xchg
mulb
pop
fs
cltd
mov
pop
dec
pop
repnz
mov
xchg
fidivrl
xchg
mov
pop
stos
jp
das
mov
stos
push
and
enter
in
jo
pop
inc
iret
test
push
mov
or
or
or
push
sub
lock
push
dec
or
cmp
in
enter
xor
mov
sbb
and
xor
cmp
shlb
mov
bound
rcrl
arpl
mov
sub
sub
xchg
mov
jp
xchg
ja
outsb
sbb
loop
adc
inc
push
mov
dec
sahf
inc
test
mov
mov
mov
pop
add
jo
lods
dec
cmpsb
daa
clc
mov
pusha
lahf
sbb
or
lock
fwait
or
xchg
aas
ja
mov
int3
idivl
push
mov
movb
jp
pop
aam
and
jl
cmc
or
jl
and
cs
out
push
mov
lret
stos
jecxz
jo
andl
cld
mov
daa
jnp
nop
mov
gs
sub
je
sti
lret
add
loopne
cmp
mov
repz
fisubs
insb
jns
dec
add
mov
hlt
cli
imul
and
pop
mov
or
leave
lods
jns
adc
cmpsl
dec
sbb
and
inc
xor
cmc
jmp
pop
pusha
js
inc
and
arpl
int3
cmp
mov
test
mov
jp
clc
dec
push
or
stos
jno
pop
pop
sbb
test
push
rcrb
pop
aaa
sub
mov
mov
iret
lock
insb
pop
cmp
out
ds
xchg
or
icebp
adc
fstl
loopne
movl
jl
sub
mov
ret
int
fnstenv
mov
pop
cmp
punpckldq
pop
or
stc
sar
ss
inc
mov
ficompl
std
in
fnstcw
test
test
out
jg
add
pop
bound
mov
push
lods
rol
mov
xchg
add
add
aam
cmp
push
addr16
pop
jl
aas
ss
xor
fstps
outsb
pop
sbb
fldenv
and
xor
cmpsl
idiv
sarl
mov
pop
cmp
mov
jae
or
jnp
push
add
push
arpl
pop
adc
mov
ljmp
push
dec
xchg
xchg
test
push
lock
daa
dec
stc
cmpsb
stc
xor
in
les
insb
jp
jo
insl
in
cs
iret
sbb
mov
cmp
mov
fwait
outsb
clc
pop
push
or
pusha
mov
popa
jnp
cli
adc
add
dec
outsb
xor
call
xchg
fcoml
hlt
in
in
mov
mov
cltd
ds
xchg
xor
push
imul
adcl
xor
jno
scas
mov
out
jns
aam
pop
mov
inc
mov
pop
push
jno
sub
enter
int
je
mov
or
mov
mov
xchg
push
xchg
mov
and
xorl
call
fisubl
into
inc
mov
and
stc
pushf
test
testl
adc
pop
push
or
insl
lret
pop
jae
shlb
mov
xchg
mov
push
outsb
mov
and
mov
xchg
leave
out
push
mov
pushf
mov
fwait
call
xor
xorb
in
es
je
rcr
add
js
push
sarl
fwait
outsb
pop
sub
bound
push
popf
push
cli
ss
add
out
mov
mov
mov
and
fs
popf
pop
pop
lcallw
sahf
lods
mov
dec
loopne
pop
or
cmpsl
movsb
mov
or
sbb
or
mov
lds
hlt
imul
mov
out
xor
in
pop
pusha
fdivrs
xchg
mov
and
xor
andl
fisttps
mov
xor
pop
cli
or
shrb
lret
lods
imul
push
shll
repz
adc
stc
int3
cmc
inc
pop
cmp
and
in
jno
inc
push
add
fsubrs
addr16
jnp
mov
jmp
push
xor
lock
cmp
les
pop
scas
jecxz
pop
lret
fdivrl
loopne
ficomps
and
into
lea
adc
ret
pop
push
xorw
mov
loop
test
pushf
xchg
movsb
arpl
mov
inc
enter
arpl
neg
xor
fildll
cmc
adc
inc
jle
in
shll
cwtl
insl
fmull
ljmp
sub
cmp
jge
scas
cltd
pop
mov
xchg
and
jnp
std
jno
inc
andb
sbb
fbstp
sbb
dec
cmp
es
mov
stos
jae
xor
mov
mov
push
xor
lock
sbbb
sbb
and
jl
sub
lock
dec
xlat
dec
std
loopne
fisubs
push
sbb
jnp
les
imul
sti
iret
fiadds
jle
pop
xchg
inc
aas
and
add
or
nop
and
jge
jne
pop
lock
imul
rclb
mov
leave
frstor
jno
cmp
lahf
int
imul
pop
sbb
pop
lret
mov
add
push
jbe
push
xorb
and
xchg
cmp
pop
jle
iret
and
pusha
mov
or
repz
arpl
sub
and
int3
xchg
xchg
mov
das
ret
test
sbb
jnp
jecxz
in
sbb
cmp
imul
mov
out
js
imul
int3
cmpsl
imul
ljmp
jno
adc
sub
scas
test
mov
repz
sub
ret
fcomi
mov
imul
jo
in
mov
faddl
sbb
cmpl
sahf
pop
pop
incb
add
rcrb
and
fldenv
mov
mov
adc
push
call
pop
out
xor
enter
test
ja
pop
pop
inc
and
adc
dec
pop
enter
jno
mov
mov
and
loope
sbb
or
sbb
xor
clc
add
push
and
dec
sahf
mov
inc
mov
push
adc
inc
jnp
mov
imul
lcall
ret
xchg
test
xor
sub
dec
bound
aas
call
push
test
fisttpl
mov
mov
pop
or
mov
sub
push
or
sub
mov
into
test
jne
in
sbb
insb
and
std
mov
js
sti
push
cmpsl
sub
sub
call
jl
cmp
stc
imul
mov
cld
icebp
fdivs
insl
or
cmpsb
push
fldenv
sbb
cmp
ss
mov
ret
jnp
shlb
daa
sub
mov
loopne
inc
jle
loop
sub
sbb
shll
dec
nop
ficoms
xchg
imul
sarb
xchg
pop
sub
pop
mov
lods
lock
push
mov
movsb
jge
lcall
test
dec
aad
xor
out
movsb
mov
xor
push
ja
pop
ja
mov
xchg
lock
movsl
jae
and
outsl
cmpsb
sahf
adc
rcrb
add
pop
and
xlat
inc
cmp
ja
mov
stc
filds
in
lock
jno
idiv
or
jmp
mov
adc
mov
into
sub
popf
out
mov
loope
dec
daa
aam
shlb
dec
fbld
ret
cli
add
push
inc
adc
cmpsl
cmp
call
mov
or
lods
je
setne
pop
int
and
test
popa
dec
inc
cmp
dec
mov
mov
repnz
mov
enter
cmp
adc
std
mov
inc
loopne
inc
cmpsb
fiadds
scas
outsl
fiadds
cmpsl
xchg
mov
jb
std
pop
and
xor
mov
mov
gs
lods
cmp
mov
push
es
add
cmp
lahf
or
inc
lahf
nop
xchg
mov
icebp
lret
sub
pop
push
adc
sar
lcall
dec
fcmovbe
in
fdivl
enter
or
mov
sub
inc
into
xor
xor
adc
pop
dec
mov
jno
push
xchg
mov
or
jae
cmpsl
arpl
outsl
lret
xchg
add
adc
mov
jp
rcl
add
dec
sbb
idivb
dec
dec
mov
mov
loopne
push
ja
xor
jns
popf
pop
loopne
dec
inc
adc
les
stc
shl
int
in
mov
add
lret
aaa
jmp
in
adc
ret
lock
decl
xlat
lahf
imul
and
lret
cltd
lret
in
cmpsb
nop
and
fldln2
pop
mov
jp
jns
jg
cli
sbb
adc
fimuls
leave
dec
cmc
sub
push
cmp
sbb
je
pop
pop
and
repz
xchg
mov
xor
inc
notl
icebp
fmulp
mov
sahf
xchg
inc
int
insb
jmp
push
into
jnp
adc
lds
hlt
mov
iret
xchg
jecxz
jb
sahf
or
push
pop
into
in
out
jmp
and
and
imul
rcll
lods
add
cmp
fmuls
js
out
sub
test
mov
pop
in
jne
in
pop
xor
aaa
je
or
and
jno
cmpsb
xor
sub
stos
adc
lret
inc
mov
arpl
add
shrl
push
push
mov
mov
addb
decb
call
shlb
aam
dec
aaa
jmp
sub
push
repz
dec
insb
scas
sbb
push
stos
cli
xchg
inc
sub
adc
dec
pop
popf
inc
lcall
rolb
push
movsl
cli
push
jae
sbb
lret
sbb
dec
sbb
adc
push
push
mov
lea
out
xchg
loop
xchg
jmp
xchg
lahf
das
lea
lds
add
sahf
jo
push
fdivrp
jo
mov
test
movsl
sub
ret
cld
mov
xlat
mov
cmpsl
pop
push
testb
loopne
insl
repz
imul
std
mov
scas
sbb
jae
daa
sti
mov
mov
sbb
sub
repz
jmp
pop
mov
out
or
xchg
aaa
pop
icebp
sub
mov
inc
fcomp
in
xchg
sub
rcrb
call
jecxz
in
mov
pop
or
xlat
push
movsb
xchg
pop
pop
rorl
outsb
mov
ss
sbb
add
int
jae
mov
mov
call
add
bound
mov
cli
or
jbe,pt
push
mov
pop
mov
sti
push
fcoms
vhsubps
ror
add
add
pop
fldt
adc
cli
rcpps
cmpb
add
ds
push
in
push
push
xlat
jno
imul
scas
clc
test
xor
jnp
jno
popa
lret
dec
or
jnp
je
dec
dec
mov
cmpsb
xchg
test
mov
and
jmp
or
inc
test
test
jb
mov
mov
xchg
jnp
nop
sti
lds
sub
arpl
push
mov
pop
rclb
push
repnz
ret
lahf
sbb
push
sbb
jne
adc
pop
add
inc
inc
dec
int3
add
notl
jne
movsb
int3
mov
dec
jle
inc
ja
je
sar
sti
pop
dec
mov
shrl
repnz
push
fbld
lret
js
adc
xor
xor
frstor
lock
fisttpl
cmpl
scas
test
sub
shll
ljmp
icebp
fbld
xchg
mov
jno
inc
das
cmp
addr16
loope
bound
out
sbb
dec
dec
xchg
sub
aas
lahf
cmp
insb
jo
mov
es
mov
sub
pop
adc
push
cmp
sbb
testl
loop
mov
popf
test
xchg
or
sbb
mov
scas
mov
sti
shl
lea
inc
sbb
inc
cld
pop
subl
sub
rcll
cmp
xor
cmpsl
hlt
scas
cmp
push
inc
lea
jge
imul
stos
cmpsb
add
xchg
sub
arpl
cltd
movsb
lret
push
add
out
lahf
into
lret
je
les
inc
dec
int
xchg
push
push
minps
roll
and
scas
xchg
sbb
mov
gs
ret
lods
inc
adc
mov
jns
lcall
push
adc
cmovae
enter
mov
pusha
bound
cmpsb
sahf
daa
fmuls
out
and
pop
sbb
jbe
jp
xchg
adc
lret
adc
jg
xchg
cmpsb
addb
imulb
mov
out
or
in
or
mov
scas
bound
add
adc
loope
cli
int
push
mov
stos
push
add
clc
xlat
fincstp
rcll
jg
movl
mov
jmp
or
mov
ret
xchg
and
mov
arpl
xchg
cltd
out
add
mov
das
in
imul
xchg
aam
and
scas
mov
mov
in
add
arpl
mov
hlt
fadds
and
int3
jge
loopne
in
dec
and
dec
pop
inc
xor
cmp
fldenv
push
in
adc
lods
mov
or
inc
arpl
jae
dec
sbb
dec
or
mov
subb
sbb
jb
mov
add
mov
dec
xchg
push
mov
cmp
imul
xchg
orb
test
lods
push
push
std
mov
cmp
fwait
inc
mov
jno
xchg
ljmp
sbb
xor
sub
sub
add
jp
cmpsl
xchg
pop
scas
sbb
popf
jno
fwait
sbb
bound
insl
insb
js
push
loop
aam
add
push
loop
ds
test
jne
cmp
stos
pop
iret
mov
mov
jns
jecxz
or
mov
mov
lods
cltd
test
call
sub
loop
imul
cmp
ret
mov
mov
mov
mov
pop
push
sbb
test
mov
sub
outsb
aad
int3
mov
aam
fcmovnb
mov
xor
pop
in
icebp
jp
mov
rorb
sti
xchg
dec
add
or
jne
imul
xor
mov
in
mov
fisttpl
push
xchg
xor
and
mov
stos
adc
pop
pop
xchg
stos
sub
xchg
mov
in
xchg
ljmp
popa
jmp
das
dec
dec
cltd
mov
dec
pop
xchg
push
jle
push
cmp
das
sbb
test
aaa
and
xchg
adc
jmp
lock
sub
jg
cwtl
pop
push
mov
cli
out
test
into
and
add
xlat
cld
cmpsb
aad
and
or
sub
test
mov
mov
cmp
push
dec
jg
mov
cmc
pusha
bt
arpl
jp
scas
push
aaa
loope
lds
push
xor
fs
inc
rolb
inc
popa
cmp
std
loop
pop
leave
not
sub
mov
out
jno
lcall
and
mov
adcb
test
xor
lods
loope
subb
or
ljmp
mov
dec
sub
sbb
mov
imul
fbstp
shlb
mov
gs
out
xchg
jae
or
fisubl
test
imul
sbb
imulb
adcl
rcr
pop
sahf
pop
xor
xorl
in
adc
inc
rolb
pop
mov
out
mov
mov
cmp
sbb
lret
popa
and
cmp
insl
and
out
mov
rol
add
sahf
test
inc
xchg
lret
dec
inc
mov
lods
push
hlt
add
insb
push
pushl
rcrb
adc
push
xor
loopne
outsb
push
stc
in
mov
addb
inc
in
idivb
icebp
test
ror
fdivr
lahf
sub
jnp
mov
shll
out
rcll
push
imul
test
push
fcmovu
mov
pop
dec
movsb
ret
mov
or
test
fmull
xchg
mov
outsl
lods
and
push
insl
jno
ret
das
sbb
fcmove
cltd
ss
pop
movl
or
cli
outsl
mov
push
dec
loop
inc
and
aad
mov
aad
xchg
incl
xor
push
mov
push
fisubrs
pop
or
lods
ljmp
dec
les
popf
sub
loope
fbstp
xchg
inc
jns
rcrl
shlb
outsl
xchg
mov
mov
inc
cmpsl
lock
jo
jae
add
mov
add
push
test
jne
int
ja
push
xchg
sub
scas
dec
sub
popf
out
and
cmp
mov
addr16
cmp
xor
das
shll
cmp
sbb
mov
inc
xchg
rorb
pop
out
ficoms
push
mov
ret
stc
pop
lret
push
lcall
inc
push
push
imul
fimuls
push
push
jbe
jle
test
xchg
ja
repnz
cs
lret
ret
dec
adc
or
in
das
sub
fmull
or
test
sbb
out
subb
aad
or
adc
mov
jecxz
mov
rclb
icebp
pop
mov
loopne
xor
dec
inc
insb
sbb
or
adc
popl
aam
mov
add
pop
loopne
rorl
or
fs
in
ds
dec
push
ljmp
push
mov
xor
sub
or
dec
push
lods
inc
jnp
movsb
call
push
push
gs
outsb
mov
mov
mov
add
test
imul
enter
mov
js
mov
pop
outsb
adc
jb
add
inc
mov
jne
sbb
pusha
jb
xchg
and
and
fwait
jb
xor
push
or
pop
lea
fwait
ret
in
inc
cmp
mov
pusha
jno
test
movsb
inc
and
mov
lcall
xlat
dec
jb
test
fs
fstpl
lcall
mov
adc
test
sbb
unpckhps
and
iret
mov
xchg
mov
jmp
mov
mov
cmp
or
fstpl
push
inc
in
cmpsb
loop
out
cwtl
insl
xchg
mov
jno
cmp
pushf
xlat
adc
mov
inc
cmp
cld
cmp
orl
dec
cmp
jne
mov
dec
xor
cs
xchg
test
push
mov
sbb
add
or
lret
xchg
mov
push
shl
popf
fistpll
dec
sub
cwtl
jg
fisttps
sti
aam
lds
pop
sbb
fsub
daa
lcall
mov
fwait
mov
adc
lret
lea
cltd
stos
outsw
inc
dec
scas
push
push
cltd
xchg
andl
lret
xor
inc
mov
push
lcallw
faddp
icebp
inc
xchg
adc
in
cld
or
mov
pop
sahf
push
aam
arpl
cmp
mov
lret
dec
shr
popa
ja
sub
inc
push
hlt
test
push
cld
fidivs
imul
out
mov
and
enter
xchg
dec
jp
lock
sahf
push
out
in
test
std
repz
jo,pn
daa
xchg
mov
jmp
mov
repz
dec
addr16
enter
es
push
cmp
adc
xchg
rorl
fwait
jae
rclb
rcrb
push
hlt
ja
jl
fwait
lret
jbe
pop
pop
loope
loope
or
push
sbbb
or
clc
je
push
call
inc
add
rcrb
and
inc
mov
sti
into
inc
xor
mov
in
mov
into
sarb
call
mov
inc
add
dec
test
out
cmpsl
mov
jne
push
cld
repnz
imulb
out
mov
data16
mov
dec
sbb
pop
into
mov
pushf
xor
lret
lret
mov
xor
inc
or
mov
cmp
sub
test
dec
scas
pop
pop
pop
in
in
pop
dec
jb
inc
mov
fildll
or
ljmp
cmpsl
push
out
dec
int3
xchg
xchg
jp
movsl
jnp
xor
jg
dec
sarb
xor
and
popf
cltd
xchg
rcrb
push
das
cwtl
sbb
pop
movsb
outsb
jne
push
mov
pop
in
xor
mov
adc
fistl
mov
test
or
jnp
out
dec
lret
and
leave
inc
xchg
pop
arpl
push
pop
and
and
aas
adc
pushf
mov
cmpsl
jge
xlat
push
mov
sub
push
jmp
sbb
mov
mov
out
mov
cmp
cmp
repnz
js
rcrl
push
sbb
push
jbe
bound
fidivs
addr16
xchg
mov
and
out
in
mov
add
mov
inc
dec
sub
ret
loop
inc
and
push
in
mov
enter
popa
lock
and
xchg
xlat
adc
adc
lds
xor
cmp
push
sbb
not
or
xlat
js
or
das
rep
push
pop
fmulp
rcll
dec
inc
divps
shl
xchg
or
inc
push
ja
pop
cmpb
mov
jle
pusha
je
push
adc
mov
decl
jmp
sub
mov
fwait
inc
dec
fisttpll
mov
add
leave
js
ret
imul
adc
jae
xor
pop
jp
in
lods
aaa
sahf
rorb
scas
push
sbb
mov
and
sbb
ret
mov
je
mov
push
inc
fsubrl
mov
jg
mov
add
jb
jns
ret
push
or
shlb
je
inc
in
ja
adc
sbb
stos
or
adc
fcomps
ss
inc
sbb
add
push
sti
stc
add
mov
jecxz
xchg
cmp
xchg
imul
rclb
xchg
xor
mov
jae
lods
inc
xchg
pushf
stc
inc
inc
sbb
xchg
push
mov
cmp
fnstsw
mov
fidivl
xchg
sbb
out
mov
sbbb
lock
insb
sbb
negl
aad
popa
mov
push
sti
xor
sub
dec
mov
cmpsb
imul
pop
add
mov
arpl
pop
inc
out
cmpsb
xor
jmp
test
fidivrl
push
add
inc
cmp
cmc
sub
mov
add
in
lret
icebp
popf
movsb
cmp
mov
fiaddl
xchg
outsl
mov
cmp
fldlg2
nop
and
in
cld
cld
xor
stos
cwtl
mov
cmp
push
xor
xor
mov
mov
aad
add
dec
hlt
stos
ja
lret
pop
xchg
aad
mov
xchg
lret
mov
leave
pop
fwait
arpl
adc
cmp
pop
aaa
lret
adc
test
jb
ficoms
dec
sub
inc
sub
pop
lods
xor
aam
mov
lret
xchg
lahf
rcrb
dec
fnop
repnz
stc
adc
xor
push
lret
mov
mov
std
int
adc
andl
cltd
inc
add
pop
adc
cwtl
je
notrack
sub
dec
push
out
push
xorl
jae
push
mov
inc
jp
jnp
cld
jp
mov
sbb
stc
pusha
lcall
xchg
lods
or
int
pop
mov
xor
es
dec
dec
arpl
frstor
pop
dec
loope
orb
popf
lds
jp
sub
loop
cli
inc
and
inc
scas
push
fadds
xchg
lods
xorb
subl
cmp
cmpsl
inc
insb
push
gs
cmp
sub
sub
mov
mov
mov
js
pop
and
mov
jns
xchg
and
mov
jne
adc
push
aas
mov
jl
cmc
ss
sub
mov
cmp
mov
adc
dec
in
inc
xor
jae
pop
xlat
and
loope
fadd
xor
fwait
cld
push
hlt
push
stc
cmpsb
ret
les
cmpsb
test
pushf
xlat
pop
imul
push
push
sub
mov
xchg
orl
test
and
mov
mov
jp
insl
jmp
and
push
xchg
and
cltd
mov
cld
cmpl
pushf
or
sub
push
mov
cmp
mov
xchg
adc
scas
ret
adc
xchg
lock
jo
sbb
push
sti
mov
dec
sub
mov
mov
push
xor
inc
adc
jg
dec
xchg
in
adc
into
xchg
adcl
mov
call
push
and
or
sub
loope
xor
add
outsl
popa
ss
push
clc
out
and
xchg
push
sub
aaa
jle
inc
push
xor
push
in
pop
into
lret
shll
mov
movsb
fwait
xchg
scas
mov
stos
fnstsw
iret
push
gs
cmpl
es
and
jne
jle
into
pop
adc
pop
jg
inc
out
inc
cltd
fcompl
mov
dec
ja
lods
movsb
mov
mov
xor
push
dec
iretw
data16
aas
fbstp
nop
add
into
lods
daa
push
pop
popa
roll
outsl
das
xor
sub
bound
dec
shll
xchg
push
push
pop
movsb
push
popa
loope
daa
jnp
inc
mov
data16
cmpsl
aas
fs
repnz
pop
mov
in
ret
lea
stc
inc
cmc
mov
pop
shr
shlb
aad
fadds
sbb
int3
mov
and
daa
inc
movsb
or
dec
sbb
mov
mov
psraw
mov
cwtl
adc
jp
movsl
lretw
ljmp
push
dec
dec
mov
add
and
jecxz
or
int3
dec
jge
mov
mov
pop
pop
ljmp
xchg
lahf
dec
ja
fsubrs
cmp
js
xor
enter
xor
inc
inc
lock
sbb
mov
fs
pop
adc
xchg
in
pop
mov
mov
popa
sbbl
mov
add
sbb
test
or
and
das
outsb
rcll
call
push
negl
push
adc
rclb
cltd
movsb
aas
lcall
jbe
xor
loop
and
push
jecxz
pop
or
lcall
mov
addr16
sbb
sub
and
and
cmp
or
dec
notl
test
movsl
ljmp
xchg
test
jbe
sarb
ss
int3
movsb
popa
xchg
mov
jns
fwait
sbb
mov
pop
cwtl
xor
pop
roll
ds
push
push
int3
mov
imul
stos
sbb
fisubrl
aaa
aad
stos
daa
pop
popf
xchg
out
fcomps
arpl
mov
leave
mov
mov
or
movsl
inc
ljmp
xchg
cli
cmp
sub
mov
mov
popa
xchg
add
mov
out
in
repnz
out
lea
push
nop
pop
repz
jl
dec
add
add
lret
inc
and
mov
mov
xlat
or
scas
into
stc
mov
jno
movsb
pop
inc
mov
mov
cmp
jnp
fildl
pop
adc
stos
ret
xor
mov
fdivrs
in
xor
jg
mov
sub
mov
pop
push
cmp
and
push
inc
push
push
or
mov
mov
pop
sbb
cmp
fildl
push
add
inc
movsb
jnp
rcrb
ret
stos
jmp
arpl
scas
rorl
pop
inc
mov
ljmp
add
stos
mov
xchg
les
or
dec
xor
je
jge
cmp
pop
test
sub
mov
popa
adc
or
stos
mov
jmp
mov
decb
std
or
or
loop
popa
rolb
in
pop
lcall
sarb
lods
cld
cmpsl
mov
jp
out
fistl
arpl
jmp
add
jnp
addr16
fisubrs
pushf
jo
roll
bound
dec
movsl
arpl
clc
jb
and
mov
push
adc
out
out
jl
fimuls
in
std
sbb
testl
or
decb
adc
clc
clc
std
rol
xor
xchg
movsl
mov
add
add
and
leave
mov
imul
jp
std
mov
clc
adc
mov
pop
push
cld
movb
iret
pop
shrl
movl
inc
xchg
notb
jge
flds
sarl
mov
xchg
push
adc
mov
jmp
cmovns
stc
mov
cmc
push
xor
add
in
pop
push
sub
mov
mov
loop
rclb
wrmsr
mov
jge
mov
cld
cmp
in
and
push
xchg
addb
mov
aaa
aaa
and
inc
mov
or
jle
out
adc
fwait
cmpsb
js
and
dec
add
out
lods
add
mov
jo
iret
or
add
mov
bound
popl
xor
scas
js
into
xchg
lds
sub
in
out
aas
and
add
ds
outsl
adc
xchg
jbe
addl
out
sub
push
jle
das
lods
popf
rcll
xchg
in
movsb
cld
fwait
cmp
xchg
nop
xchg
mov
leave
pushf
orb
xchg
inc
movsl
pushf
xor
fdivrs
cmp
in
popf
mov
repz
leave
xor
fistpll
mov
pop
dec
mov
xchg
cmc
mov
stc
cmc
andl
and
pop
or
movsl
mov
sub
sub
and
imul
jge
mov
mov
inc
fs
ljmp
sub
mov
shl
pushl
lods
sub
cli
dec
cmp
bound
dec
mov
inc
fwait
in
jb
sub
das
xchg
dec
or
bnd
sahf
decl
xor
mulb
and
push
hlt
mov
out
cwtl
and
cwtl
jb
ret
mov
inc
pop
xchg
mov
cmpsb
or
sbb
insl
push
mov
lock
add
inc
cmp
jmp
inc
lea
lods
lock
repz
xchg
nop
outsb
cmp
loope
cwtl
pop
inc
data16
mov
pop
fidivrs
xchg
jge
push
mov
adc
mov
rol
dec
jbe
fcomps
cmp
scas
pop
jle
mov
out
outsb
arpl
jo
and
push
std
call
cmp
out
push
push
jp
movsb
jg
jge
and
sbb
adc
outsl
jbe
pop
inc
dec
rcrl
hlt
clc
scas
sbb
push
out
inc
dec
push
ss
data16
add
insb
mov
push
push
fdivrs
in
loopne
outsb
mov
rorb
or
adc
leave
popf
cmpsb
js
jl
rcrb
daa
xchg
mov
popf
clc
jns
mov
push
mov
jo
popf
lahf
mov
out
mov
subl
sbb
sbb
jo
imul
xchg
dec
dec
mov
or
mov
inc
jge
lcall
enter
nop
push
test
fucomip
xchg
test
add
stos
adc
dec
mov
sbb
or
test
in
jp
inc
mov
mov
lods
inc
mov
fwait
and
and
fisubl
out
es
cmp
stc
xrelease
fstps
add
shrl
pop
jecxz
ljmp
or
push
daa
or
xor
fwait
add
ret
cmp
mov
xor
pop
jl
sti
sbb
push
sub
add
ds
inc
sahf
ret
inc
cmp
jne
cli
add
pop
pop
ret
imul
frstor
mov
mov
xor
js
es
inc
jg
imul
pop
testb
sub
ffreep
ja
mov
mov
jmp
sub
fistpll
lret
cmp
adc
inc
jae
xchg
insb
xchg
repz
add
adc
clc
bnd
fidivs
shlb
push
add
dec
push
adc
es
cmp
mov
lahf
mov
push
cmp
out
out
push
cmpsl
add
pop
add
lret
pop
push
pop
jp
aam
jnp
or
idivl
out
cwtl
push
add
mov
mov
xor
sub
xlat
lcall
pop
std
cmp
clc
hlt
sub
and
mov
mov
icebp
icebp
int3
loopne
xchg
mov
icebp
icebp
pop
daa
push
mulb
out
in
movsb
mov
dec
std
dec
push
cmp
mov
or
jle
daa
cmp
scas
pop
sub
iret
test
xchg
repz
and
add
push
shlb
fs
lahf
mov
mov
es
or
mov
sahf
mov
push
lds
add
sti
arpl
ljmp
push
xchg
xlat
int3
jmp
adc
xor
pop
aad
and
js
sub
and
movb
lock
push
test
mov
test
daa
inc
xor
mull
stos
roll
dec
dec
cwtl
clc
cmpsb
jo
repz
cmc
mov
xor
jnp
arpl
ss
mov
inc
test
lods
cmp
push
jg
or
sub
pop
mov
outsl
mov
xchg
lahf
cs
es
sahf
and
pusha
lahf
mov
movsl
loop
call
mov
sti
jmp
popf
push
cwtl
fnstcw
stc
addr16
mov
cmp
sub
xlat
out
pop
aas
push
iret
mov
push
mov
and
rcrb
stc
or
mov
add
iret
and
sub
cli
cmp
xor
inc
test
ss
mov
add
es
push
sbb
adc
push
push
fnstenv
or
xchg
rcr
inc
xchg
jmp
fcomi
xchg
fiaddl
daa
xor
mov
das
push
pop
imul
dec
dec
test
aam
out
xchg
in
push
fcomps
mov
push
push
rcll
movsb
ficoms
xchg
arpl
mov
in
repz
mov
mov
frstor
cs
test
jle
pop
mov
outsb
add
push
cltd
sub
mov
mov
push
mov
jl
std
cmp
ds
jno
outsl
cmp
dec
inc
out
push
int
loop
jo
popf
sub
mov
nop
push
xlat
push
xchg
fmuls
or
stos
mov
fcoms
dec
lds
ljmp
or
pop
xchg
adcl
mov
sub
xor
pop
mov
popa
test
jnp
jns
xchg
notl
mov
mov
cwtl
sub
orl
xor
divl
xchg
pop
stc
pop
xor
popf
in
out
inc
orb
or
jp
mov
inc
lock
ffreep
cmp
xchg
and
insb
dec
aam
stos
xchg
jnp
iret
add
cmp
mov
jb
push
mov
push
mov
sbb
sbb
mov
mov
sahf
jge
rcll
pushf
mov
xor
pop
int3
adc
sbb
arpl
mov
adc
fcoms
int3
sub
imul
sti
cmp
xchg
xchg
imul
js
lds
adcb
jmp
and
or
sti
mov
jmp
adc
push
in
mov
jnp
mov
cld
push
mov
sub
fldl
sub
stos
xor
aaa
jecxz
or
and
shlb
jns
cmp
cmc
pop
xchg
xorb
mov
inc
push
dec
xlat
mov
sub
stos
sub
out
lock
mov
push
popa
jecxz
lcall
pop
into
xchg
push
das
scas
sbb
cld
lock
sti
stos
imul
into
mov
loop
dec
sub
test
shlb
mov
int3
mov
mov
cmp
cld
and
movsb
aad
negb
mov
daa
lcall
dec
mov
or
ja
and
mov
aas
lock
pop
decl
in
push
jp
in
cmc
jne
pop
sti
push
cwtl
inc
mov
mov
pop
or
xor
dec
inc
lahf
andb
enter
mov
cli
cli
dec
loopne
xchg
xor
icebp
outsb
fisttps
pop
test
data16
mov
push
and
loopne
ficomps
sbb
bound
dec
jo
ret
data16
inc
cld
mov
jp
test
xchg
jno,pn
loopne
and
push
les
in
pushl
loop
aad
mov
repz
insl
out
inc
daa
pop
add
je
cmpsb
xchg
xchg
jg
dec
dec
jns
inc
test
dec
popf
xor
je
xlat
repz
and
cmp
fnsave
movlps
xchg
sbb
jno
aaa
hlt
loopne
xor
adc
popf
fistpll
push
inc
addr16
pop
mov
cltd
pop
pushf
xor
push
aam
jb
push
std
add
and
les
sarl
pop
in
mov
rcll
mov
in
mov
and
jp
pop
jno
dec
jp
sbb
sahf
ss
mov
jo
loope
out
out
dec
sbb
loop
push
and
sbb
sub
push
outsl
and
jbe,pn
in
mov
xor
jp
cmp
leave
les
enter
stos
mov
lret
lods
out
rcrb
push
sbb
xchg
addl
lods
lcall
loop
adc
lods
pop
push
sub
test
repnz
mov
fidivl
xor
stos
xchg
jecxz
mov
insl
and
lock
mov
pop
xor
hlt
inc
dec
jo
stos
jp
jge
cmpsl
add
loope
sub
cltd
loopne
int
sbb
test
stos
xchg
mov
cmc
leave
jp
ret
fwait
fwait
mov
jno
aad
leave
out
cs
lods
or
inc
pop
pop
add
int
cltd
les
ja,pn
loop
xchg
ljmp
cmp
stos
outsb
ret
lock
xor
jae
add
pusha
fiadds
insl
sub
shl
push
lods
clc
sub
imul
pop
mov
xor
inc
dec
in
mov
add
out
dec
dec
and
push
mov
push
fsubl
insl
insl
or
out
lods
cmp
pop
jecxz
xor
lods
mov
lahf
cmp
test
call
fwait
and
ss
cwtl
sbb
fwait
in
adc
js
leave
mov
test
adcl
lds
add
xor
outsb
subb
in
push
mov
mov
dec
dec
mov
xchg
ficomps
das
sti
movsb
dec
mov
cli
xchg
out
push
sub
sub
in
cwtl
fadd
out
ja
loop
insl
or
mov
movsl
or
pop
test
out
aaa
subl
push
dec
insb
ljmp
aad
scas
dec
out
or
lods
fdivrl
cltd
pop
cmp
add
in
mov
jg
cmp
adc
and
mov
dec
sub
inc
xlat
inc
xchg
in
sti
into
test
mov
in
sub
popa
or
pop
stos
adc
fstl
ja
and
jne
rorb
ret
xlat
sub
xchg
mov
mov
ja
mov
fidivl
sub
loope
mov
xchg
pushf
add
adc
mov
pop
mov
mov
push
icebp
dec
sbb
fidivs
push
sbb
outsl
insl
in
mov
fidivrs
adc
mov
addr16
clc
test
cmpl
fs
js
test
add
add
gs
dec
fwait
popf
sub
cmpsb
jge
dec
dec
xchg
int
push
pop
or
xlat
nop
lock
dec
mov
aaa
inc
jle
shrl
add
or
mov
inc
lock
mov
pop
pop
cmp
dec
mov
outsb
or
sub
mov
jae
pop
adc
inc
fldl
cmpsl
fstps
imul
std
imul
sahf
sarb
add
and
js
lock
inc
jecxz
stc
pop
out
mov
mull
jno
insb
icebp
pop
ret
push
hlt
xchg
and
mov
xor
test
cmpsb
jmp
cltd
cmp
lods
inc
mov
inc
mov
mov
fnsave
in
jg
aam
push
mov
sub
aad
jb
mov
and
jo
push
es
test
rorl
cmp
xchg
insl
repnz
xor
icebp
stc
fildl
sbb
es
mov
mov
sbb
mov
sub
jl
add
jo
out
cs
pop
fdivl
or
or
testb
aas
loope
lods
dec
jae
in
in
sub
popf
fists
imul
inc
sub
popf
int
cmc
sbb
inc
jecxz
jp
into
fdivl
aas
leave
sub
cmp
pop
fidivrs
mov
shl
out
push
dec
lock
fistps
fdivs
add
repz
fistpl
cmp
adc
rcl
sub
jmp
ljmp
mov
jb
stos
lcall
ret
iret
adc
mov
push
orl
popa
xor
loope
add
dec
aam
mov
jecxz
xchg
sub
gs
jecxz
jle
cmp
xchg
test
or
or
inc
cld
das
cmp
push
scas
insb
inc
sti
out
or
int
mov
aas
adc
sub
pop
stc
sbb
sbbb
sbb
push
stos
loop
push
ret
fldt
sbb
xor
push
cwtl
pusha
mov
notb
jg
xor
push
cmp
movsb
movl
rorb
sub
cmc
ds
call
mov
xor
pop
loop
push
cli
adc
xchg
call
mov
xchg
loopne
movsb
aaa
cmp
and
pop
pop
popa
xor
mov
aad
jmp
movsb
bound
ds
push
aad
ficomps
out
mov
mov
mov
lods
test
mov
loopne
aas
pushf
adc
adc
popf
ljmp
mov
icebp
push
mov
in
jns
inc
sahf
bound
outsl
loopne
dec
outsb
test
xor
faddp
jge
adc
mov
hlt
xor
outsb
jmp
jns
andb
inc
mull
mov
inc
repz
cltd
pop
sbb
mov
int
stc
xchg
push
and
sub
shlb
fsubl
cltd
mov
nop
cmp
push
ds
enter
ja
lock
push
jnp
icebp
decl
lds
repz
mov
decl
gs
cs
inc
sbb
loope
stos
mov
jge
int
icebp
lea
iret
mov
nop
add
cmp
mov
xchg
cmpsb
imulb
sub
jbe
jbe
pop
into
call
movsb
sahf
pop
dec
jle
adc
test
fsubl
cmpsb
lahf
add
loop
xor
push
pop
push
push
adc
mov
mov
cwtl
gs
das
cmp
aas
mov
mov
dec
hlt
es
jmp
pop
adc
push
jl
sub
stos
jae,pn
push
outsl
xor
mov
xor
mov
sbb
mov
movsl
sbb
pop
xlat
pop
jne
and
or
mov
jne
jl
jl
xchg
dec
pop
xchg
xchg
or
pop
jae
mov
retw
jne
clc
daa
cs
push
insb
cwtl
pusha
sbb
loope
ja
loop
shlb
movsb
loop
xchg
lahf
lods
ja
mov
pop
and
jo
cmp
lods
lock
test
adc
repnz
inc
hlt
jmp
out
cmpsb
mov
lock
out
ja
xchg
inc
daa
ja
and
and
mov
gs
mov
cmp
inc
pop
pop
sarl
cmc
mov
ficoms
das
popf
add
and
pop
lock
test
xchg
fs
fisubl
mov
jp
rolb
and
mov
pop
data16
aad
add
mov
sub
add
fwait
clc
pop
cmp
lcall
fidivrs
cmp
xor
jae
mov
mov
out
shlb
mov
dec
cmp
dec
add
or
xchg
push
dec
push
push
repnz
adcl
aaa
jb
scas
xor
mov
enter
pop
pop
cmpsb
hlt
add
sub
ljmp
fucomp
shrl
shrl
mov
mov
push
into
and
dec
push
cmp
cmp
iret
push
divb
outsl
hlt
and
jl
xorb
dec
adc
in
lret
add
movsb
jno
call
cmp
or
lret
mov
xor
mov
lods
sbb
das
lret
mov
fcmovu
xchg
and
shrb
add
in
mov
or
mov
dec
mov
lret
aaa
mov
lea
testl
repz
sti
outsb
test
mov
and
insb
inc
push
dec
xchg
xchg
bound
sbb
iret
pop
or
push
flds
jbe
enter
sub
lahf
mov
sub
or
aad
add
icebp
dec
sub
sbb
and
push
mov
adc
and
lcall
outsb
pusha
lods
cli
shrl
pop
dec
sbb
xor
mov
popf
aad
sbb
test
lods
sub
out
push
pushf
insl
jo
push
ret
adcl
ret
mov
and
fldl
xlat
in
popa
jbe
aam
and
mov
iret
mov
cmp
add
movsw
cltd
sub
lret
xchg
mov
call
pop
sbb
gs
lock
xchg
push
sbb
ficompl
into
stc
xchg
xor
cmp
mov
mov
ficoml
popa
dec
push
testl
insl
icebp
mov
movsl
xchg
loope
mov
jle
hlt
ds
push
xchg
adc
test
pop
pop
popl
push
jecxz
stc
dec
test
into
jnp
or
ljmp
push
jne
jecxz
es
sub
ss
out
add
sbb
lret
aad
xchg
addr16
je
bound
or
sbb
and
mov
push
ljmp
or
aas
cmp
pop
lock
rorl
mov
and
inc
mov
mov
mov
push
das
or
push
loope
or
mov
fcmove
lahf
je
dec
pop
in
xchg
aad
es
add
mov
dec
lods
xchg
arpl
mov
popa
in
adc
outsb
xor
and
xchg
jno
xor
adc
ret
imul
sbb
mov
rorb
lret
iret
cmp
iret
xchg
and
mov
mov
in
adc
mov
sub
jecxz
adc
les
ret
testl
jns
in
xor
repz
adc
inc
sbb
jno
xlat
sub
sahf
pusha
adc
dec
cmpsl
xchg
mov
inc
pop
or
mov
push
jle
push
sbb
fadds
insb
orl
cltd
pop
push
cltd
mov
sarl
pop
test
fisttpll
cmp
jo
xor
and
mov
mov
outsl
mov
and
dec
jp
inc
in
sbb
cmpsl
inc
jae
ja
or
dec
stos
stc
sbb
xchg
jns
cmp
xchg
jmp
inc
pop
shlb
jge
lods
push
cmpb
mov
lret
push
xchg
filds
mov
dec
loop
adc
adc
xor
or
xchg
xlat
xlat
jle
inc
or
xor
dec
mov
out
fwait
xchg
mov
mov
sbb
lcall
inc
sbb
xchg
lods
sub
push
add
ja
mov
hlt
ss
leave
push
jge
pop
cli
mov
rcrb
jmp
inc
mov
out
pop
clc
mov
mov
es
mov
mov
fs
xchg
mov
scas
pop
flds
push
sub
mov
rol
adc
mov
jp
aad
insl
xor
sbb
mov
mov
inc
push
aad
popa
ss
mov
jmp
in
sbb
mov
lcall
sub
adc
xchg
sub
scas
jg
lock
enter
insl
fwait
cs
pop
xchg
mull
test
cmp
adc
pusha
andb
sti
jle
imul
popa
in
rcrb
dec
dec
fdiv
loopne
int
and
fsub
mov
imul
xchg
repnz
sahf
jne
pushf
mov
out
xchg
mov
pop
push
dec
test
add
pop
setle
inc
test
fmuls
in
pop
push
bound
jle
mov
pop
xchg
mov
aad
lea
push
arpl
mov
mov
rcll
out
int
in
sbb
mov
jbe
jo
mov
sahf
dec
mov
jb
xor
jp
xlat
fnsave
push
sar
fistl
ds
arpl
pop
iret
aaa
lock
mov
loop
sbb
xor
inc
jns
mov
inc
lahf
jns
xor
loop
aas
push
and
push
sbb
push
lods
sbb
lcall
dec
testl
sub
cs
sub
jle
cmp
mov
rcl
jb
sarl
jg
lds
cltd
pop
inc
cmp
xchg
cwtl
scas
inc
insb
aas
insb
or
in
mov
push
hlt
sbb
pop
repnz
sti
cmp
jecxz
sub
xchg
aad
loopne
and
in
xchg
sbb
nop
sbb
sub
cltd
jbe
add
mov
out
mov
sbb
shll
insb
dec
out
jnp
sub
mov
sbb
push
xlat
push
mov
xor
pop
outsl
jmp
sub
sbbb
arpl
jae
insl
inc
clc
push
sar
or
mov
std
xlat
dec
xor
mov
stc
test
xor
outsb
mov
jbe
mov
xchg
pop
scas
xchg
pusha
sbb
fisttpl
into
cmp
and
dec
out
and
xchg
jnp,pt
push
sbb
mov
adc
cmp
xchg
jle
and
pop
xchg
cmp
mov
stos
or
or
mov
gs
or
inc
les
mov
pop
sub
push
jae
jecxz
pop
or
adc
leave
dec
push
cmp
dec
sbb
int
mov
mov
fnsave
xchg
pop
test
push
shll
cmc
jl
mov
mov
sbb
scas
sub
add
and
adc
test
aaa
jle
xchg
sbb
int3
jno
mull
add
mov
ret
mov
aam
icebp
in
scas
adc
mov
sahf
mov
mov
data16
scas
rsm
mov
pop
mov
xchg
test
adc
add
and
jg
adc
mov
mov
rclb
sbb
pusha
imul
mov
sub
xor
in
inc
push
stc
ja
aas
sub
mov
add
pop
sub
jne
cli
mov
inc
es
xchg
jmp
sub
test
push
cmp
insb
pop
and
jge
aas
insl
push
iret
ret
mov
dec
mov
push
cs
cmp
loope
xor
push
mov
call
adc
subb
mov
adc
and
ja
and
add
mov
or
xchg
cmp
je,pn
lea
aam
mov
and
aaa
add
ds
sub
jge
xchg
movsb
adc
xchg
jge
jl
aad
test
adc
jmp
shrb
stos
xchg
mov
push
lret
das
dec
sub
dec
adc
jl
repnz
js
cltd
sbb
test
add
lea
lock
sbb
cmp
lcall
xchg
add
sti
divl
mov
rorl
xchg
pusha
cmp
pushl
xor
add
cmp
sbb
out
push
loop
mov
jbe
bound
jmp
pop
and
add
cmpsb
pop
jecxz
popa
mov
jns
mov
clc
push
pop
cld
jmp
rcll
push
push
call
sqrtps
ds
rorb
je
pushf
inc
xor
mov
pushf
test
push
lahf
shlb
jb
and
or
adc
xchg
call
push
fistpll
dec
adc
push
xor
and
lret
test
jbe
cmc
or
popa
or
out
stos
xor
and
fwait
pop
pop
pop
hlt
cmp
ljmp
inc
pop
or
jb
xchg
imul
in
or
cmpsl
in
popf
push
pushf
outsb
fidivs
int
fldl
iret
gs
and
xchg
nop
mov
adc
or
inc
mov
jmp
pop
push
in
jbe
jae
fistps
fwait
test
pop
or
xchg
lea
inc
stos
mov
cmp
lock
xor
jnp
cmp
xchg
and
add
js
je
dec
test
stos
sahf
out
adc
and
dec
pop
bound
xorl
jo
adc
fildll
sbb
push
addl
cmpsb
lds
out
rcl
fnstsw
cmp
sub
inc
xchg
les
and
das
xchg
push
mov
mov
andl
or
bound
jmp
and
sub
sti
sbb
shl
inc
sbb
adc
js
mov
into
push
ljmp
rclb
mov
scas
pop
sbb
loope
mov
aaa
xor
jno
xchg
adc
push
bound
jmp
or
xor
lret
sub
pushf
xchg
fdiv
xor
dec
orb
mov
arpl
jnp
mov
xor
sub
mov
inc
pushf
cmpsb
dec
mov
mov
xlat
jb
sarb
xor
pop
hlt
mov
stos
mov
push
aad
cltd
mov
push
mov
mov
shl
mov
std
and
shlb
add
or
lahf
in
push
test
mov
scas
push
insl
fadds
loopne
shr
or
adc
dec
mov
lret
icebp
pop
jl
int
lret
jno
into
call
js
std
or
mov
daa
pop
icebp
repz
imul
adc
insb
sub
movsl
fadd
pop
insb
daa
rclb
cld
popl
fwait
icebp
mov
adc
das
xor
sub
inc
insb
dec
push
or
cmp
push
jbe
add
mov
pop
sub
in
inc
outsl
loop
mov
jnp
mov
push
shll
imul
add
cmp
cmp
push
xchg
pmulhuw
aad
rol
mov
imul
xchg
lock
out
lcall
fcmovne
xor
arpl
mov
xchg
inc
cmp
scas
push
iret
pop
es
xor
jne
test
push
cmp
dec
cmp
mov
mov
push
cmc
lahf
int
inc
nop
rorl
cs
popf
fcmovnu
pushf
mov
cmc
mov
xchg
xor
stos
mov
cltd
data16
inc
or
jp
rol
add
sbb
cli
int3
pop
mov
cwtl
flds
mov
rorl
adc
mov
movsl
mov
sub
ret
sub
lock
shll
imul
leave
dec
jbe
out
sbb
xchg
cwtl
pusha
mov
push
jl
leave
mov
out
and
lea
rcll
lods
clc
lret
cli
jle
outsl
rorl
mov
pop
outsl
or
sbb
enter
push
pop
xchg
pushf
mov
jo
dec
xchg
into
aas
push
xchg
push
push
push
addl
mov
lret
mov
hlt
xchg
mov
aam
and
mull
pop
push
movsb
icebp
loop
lods
dec
dec
icebp
or
mov
xchg
mov
mulb
pop
mov
cltd
mov
call
addr16
popf
xchg
jo
into
jns
jg
pop
arpl
adc
mov
xor
inc
mov
das
fnstsw
mov
fidivl
dec
mov
popa
filds
mov
mov
adc
push
popf
subb
repz
cmp
lock
in
mov
jle
in
lcall
lcall
xlat
andb
fsubs
jnp
cmc
or
rorb
dec
stc
xor
test
push
test
test
in
xor
adc
insl
push
xor
aaa
jle
les
dec
movsl
and
mov
adc
cmpsl
push
and
sub
divb
gs
scas
flds
and
out
mov
sub
pop
or
mov
sbb
pop
xchg
lock
pushf
mov
sub
xlat
jecxz
orb
imul
int
sub
jne
fucomip
push
call
lret
adc
fcomp
adc
inc
add
pop
xchg
mov
nop
bound
aas
in
roll
ret
cmp
push
cmp
cmp
mov
ja
es
popf
sbb
jae
ds
je
iret
xor
xchg
imull
sbb
rolb
pusha
pop
jle
lcall
add
or
pop
mov
out
inc
clc
sbb
mov
loopne
loopne
cmp
insb
pop
ret
xchg
mov
mov
xor
inc
addr16
scas
jg
mov
cmpsb
xor
lcall
mov
dec
ss
fnsave
xchg
fimuls
cltd
ret
cwtl
push
insb
pop
sub
bnd
push
ss
popl
jo
loop
mov
cmp
xor
pop
cmp
movb
lea
and
mov
ja
bswap
or
bound
inc
or
insb
test
push
bound
dec
jle
lods
mov
mov
cmpsl
xlat
dec
mov
sub
test
cli
imulb
xor
inc
fdivs
loope
lods
out
repz
je
mov
push
mov
mov
cmp
jns
mov
inc
aas
pop
icebp
jle
out
inc
mov
pop
or
mov
add
push
push
clc
adc
stc
add
cmp
mov
sbb
shlb
mov
sbb
dec
je
ja
pop
lods
ds
mov
icebp
cltd
or
clc
and
dec
lea
push
or
aad
es
dec
dec
js
test
stos
aam
push
in
inc
dec
inc
adc
fcmovne
std
jo
das
add
mov
add
mov
mov
sub
dec
fsubs
hlt
dec
mov
mov
sbb
mov
shrl
lods
or
adc
adc
xor
cltd
jbe
loope
test
sbb
or
mov
frstor
xor
push
and
das
divl
mov
cmp
mov
jne
idivb
shl
mov
pusha
push
xor
scas
add
push
js
or
jmp
xchg
aad
cmpsl
add
xchg
testl
inc
pop
movsb
push
je
inc
push
adc
sarb
xchg
push
xor
negl
in
mov
jae
mov
bound
push
jp
pop
lock
mov
jle
aaa
xor
pop
xchg
call
jge
push
xchg
cltd
inc
xchg
lods
or
jg
or
pop
add
dec
lret
inc
mov
cld
cmp
in
js
add
lock
add
push
pop
pop
jle
lret
mov
out
xor
add
cwtl
mov
and
test
push
das
xchg
cld
add
or
aas
mov
cmpsl
je
call
sub
cmp
jecxz
jo
xchg
leave
stos
jne
lds
or
push
xchg
xchg
out
cs
rorl
sbb
filds
lret
add
inc
xchg
clc
xor
xchg
cli
aad
or
lods
pop
add
mov
mov
inc
in
inc
add
mov
adc
or
push
loop
bound
jo
xor
aaa
pop
inc
add
mov
int
cmp
xorb
mov
aad
pop
jnp
outsl
int3
push
in
mov
in
stc
lock
mov
cwtl
addr16
or
sti
xchg
pusha
out
dec
lea
xorl
dec
adc
dec
xchg
adc
jae
add
mov
mov
push
add
pop
push
mov
dec
mov
jg
jne
lods
inc
inc
jne
movsl
sub
inc
iret
scas
push
xor
je
push
int3
xchg
and
cmpsl
cmp
jl
sbb
pop
outsl
lods
outsb
cmpsb
out
push
push
fucomip
imul
shrb
push
inc
std
mov
pop
sub
aam
mov
rcrl
or
lea
shrl
pushf
dec
sub
add
lret
ret
enter
ja
dec
mov
sub
mov
jno
movsl
mov
mov
push
xlat
daa
mov
jp
pop
push
stc
push
xchg
mov
dec
ret
mov
movsl
push
int3
adc
jl
aam
incl
out
stc
arpl
loop
das
push
mov
fldl
outsl
pop
dec
jbe
mov
addr16
scas
pusha
rolb
and
xchg
xor
fisttps
and
pop
or
ret
aam
mov
xor
sahf
mov
jo
movl
and
xor
enter
push
test
out
popa
mov
cmpsl
xchg
jecxz
popf
xchg
pop
dec
push
je
jmp
hlt
fsubl
fstpt
stos
dec
rcrb
and
je
jbe
pop
add
and
mov
icebp
cmp
and
out
scas
mov
inc
in
cmp
loope
mov
movsb
iret
pop
imul
xchg
scas
jb
mov
mov
cmp
ret
mov
mov
dec
or
in
stos
cs
dec
rolb
xor
cmp
xor
sbb
mov
incb
mov
xchg
sub
notl
lahf
jno
push
and
and
push
fadds
repnz
push
inc
or
subl
imul
testb
bound
divb
scas
jle
xchg
add
mov
in
loope
adc
shlb
xchg
aad
or
inc
adc
sbb
fadds
ret
jo
popa
into
mov
inc
lcall
fs
fadds
inc
sub
sbb
out
jb
jns
jno
subb
int
clc
or
mov
das
dec
adc
leave
xor
fs
xchg
xchg
mov
mov
jge
sbb
mov
fwait
bound
adc
mov
aad
adc
xchg
mov
or
pop
dec
lea
mov
cmp
cmpsb
xor
xchg
lock
mov
decb
jb
sub
loope
mov
daa
js
and
push
pop
add
bound
stos
mov
pop
shrl
daa
in
xlat
mov
sahf
out
xor
pop
and
popa
enter
inc
mov
add
aas
jmp
inc
faddp
or
pop
sub
cmp
jle
bound
mov
and
fstl
in
adc
mov
sarl
jo
stc
inc
pushf
pop
aad
push
sahf
outsl
pop
push
in
pop
lea
lea
add
adc
fcmovnbe
popaw
movsl
sub
jg
sub
arpl
mov
add
push
add
pop
add
ja
sbb
jle
ficomps
inc
test
mul
add
sbb
xchg
or
test
mov
xor
cmp
lods
insb
daa
sub
sbb
mov
sbb
ja
sub
mov
sahf
add
cs
jno
or
outsl
add
rcll
dec
xchg
adc
movsl
adc
ret
pop
movsl
add
fstpl
repz
push
outsl
je
push
lcall
outsb
lret
cltd
pop
dec
fldt
movsb
and
push
popa
jge
adc
fsub
pop
out
in
push
mov
xchg
cmp
mov
adc
xor
lods
cmc
aaa
stos
sub
jno
fs
jns
fsubl
jno
jnp,pt
mov
cmp
and
pusha
in
jo
or
jbe
rorb
sbb
or
cmp
sub
cld
neg
out
movsb
mov
enter
fsubrp
fsubl
cs
and
xchg
mov
pop
xor
scas
sbb
pop
idivb
xor
xor
fs
sti
or
ljmp
mov
data16
dec
adc
jmp
and
in
add
adc
push
loope
out
cli
add
jecxz
add
pop
and
mov
ja
in
or
sti
inc
dec
not
mov
pop
into
jecxz
outsb
inc
add
push
stos
stos
mov
xlat
sbb
sahf
jl
rorb
mov
je
cmpsb
test
mov
ss
hlt
add
in
dec
pop
adc
mov
push
stos
int3
lcall
pusha
sub
dec
test
gs
fdivr
mov
pop
xor
pop
mov
movsb
jb
lcall
cmp
xor
bsr
pop
imul
mov
push
lea
xchg
push
mov
adc
and
in
lock
jae
mov
push
pop
add
or
call
jae
in
inc
xor
sbb
sub
xor
aaa
sbb
lret
movsl
jge
stc
outsb
aam
inc
mov
dec
lods
jo
fdivrl
repz
cmp
pop
jne
aam
pop
sbb
mov
mov
fcmovne
push
xor
loop
pusha
and
pop
test
lock
repnz
nop
shrl
fstl
test
jmp
das
fisubl
jb
jnp
cmpsb
stc
repz
xor
aad
ror
add
jb
or
dec
mov
adcb
cmpsl
fstpt
jb
mov
pop
mov
push
dec
and
jp
pop
clc
mov
insb
enter
add
leave
xor
fmull
pop
sbb
pop
rolb
loope
inc
adc
xchg
mov
inc
mov
push
cwtl
inc
cmp
xor
xchg
xor
repz
stos
xchg
cwtl
push
rcll
repnz
jne
das
push
mov
jbe
in
aam
scas
cld
dec
or
mov
mov
push
adc
or
call
jp
mov
ja
bnd
leave
imul
pushf
shrl
jnp
jo
adc
push
xchg
xchg
dec
adc
mov
fs
push
loopne
xlat
inc
rdmsr
sub
pop
cmp
add
or
scas
iret
fsubrs
cmp
add
adc
mov
jbe
shlb
les
push
loop
push
movq
or
loope
mov
outsl
sbb
jae
xchg
xlat
leave
shrl
outsl
sbb
mov
dec
in
push
xlat
jns
cwtl
repnz
adc
xchg
jno
rcl
push
push
in
imul
mov
cmp
bound
jp
cmp
inc
jae
or
mov
scas
cmp
xchg
dec
test
in
movd
idiv
xor
xchg
sbb
jne
mov
repnz
stos
jecxz
mov
adc
xchg
lods
xchg
lock
lret
pop
ret
jg
imul
aad
dec
mov
cmp
sti
or
jg
lock
inc
js
xchg
adc
push
add
aas
mov
call
or
jg
popf
js
rclb
dec
pop
jb
pop
sbb
push
jae
and
testl
iret
ret
leave
mov
ja
pushf
push
or
inc
push
test
andl
and
and
and
adc
insb
ret
mov
mov
enter
add
mov
xchg
inc
clc
lods
inc
cmpsl
adc
orb
mov
sbb
and
sbb
xor
repnz
je
push
icebp
adc
push
sar
cmpb
sbb
icebp
stos
popa
jle
int
shl
cmp
int
push
loop
out
xchg
cmp
addr16
xchg
data16
lds
inc
dec
es
insl
cs
dec
loope
sub
mov
cmp
and
ss
inc
mov
mov
mov
sub
dec
and
outsl
cmpsl
fcoml
or
gs
out
xlat
mov
add
or
call
xchg
mov
lea
fistpl
loope
mov
scas
add
cmp
enter
testb
subb
push
out
imul
enter
xchg
dec
inc
lret
add
mov
loope
and
sub
outsl
or
or
testl
into
fs
lea
mov
iret
cwtl
scas
mov
xchg
int
mov
lods
icebp
cmp
xor
enter
int3
jmp
mov
loope,pt
cmp
sbb
aad
in
popa
jbe
mov
icebp
nop
cmp
orl
insl
push
add
cmpsl
adc
push
popa
cli
add
jnp
test
xlat
xor
fldt
pop
sar
xchg
iret
stos
aaa
inc
mov
pop
cmp
dec
lods
scas
repz
mov
xchg
adc
rorl
push
aad
push
sbbl
sbb
scas
mov
orb
adc
enter
sbb
test
test
leave
dec
ret
push
mov
pusha
push
or
pop
fsubrs
sbb
mov
int
jecxz
pop
mov
cmpsb
jbe
mov
pop
jae
xchg
push
or
xor
shll
jg
aas
push
insl
orb
lds
insl
cmpsl
in
jbe
nop
cmp
pop
pop
dec
decb
pop
jno
adc
sahf
iret
in
push
lock
cmp
dec
imul
dec
push
dec
jecxz
mov
lcall
pop
push
mov
cmp
int3
cld
push
cmp
clc
sarl
ficoms
pop
add
push
bound
or
mov
and
jae
fisubrs
ljmp
out
lret
scas
popf
sbb
xlat
cltd
lea
lea
mov
mov
mov
mov
add
sbb
je
push
fidivrl
fimuls
jne
sbb
aas
jp
and
pop
mov
sub
mov
mov
fnstenv
sahf
adc
daa
stos
jb
jle
loopne
xor
add
gs
jecxz
mov
jg
clc
push
pop
sub
inc
bound
inc
jb
push
std
push
imul
and
aaa
loope
adc
call
or
adc
sub
sti
inc
push
cmp
data16
sbb
pop
mov
add
pop
and
in
jo
xchg
xchg
adc
fcoms
nop
int3
call
xor
and
sbb
jae
out
mov
fldcw
bnd
lods
mov
mov
and
jg
or
incb
sahf
sbb
cmc
rcrb
xor
fstl
adc
mov
add
pop
add
xor
jns
in
dec
hlt
sub
movsl
lcall
push
stos
sub
pop
arpl
mov
dec
adc
mov
pop
sub
popa
push
add
jmp
xchg
lcall
and
mov
je
pop
ret
daa
popf
mov
and
mov
xchg
lret
sub
mov
flds
push
pop
xor
movsb
xchg
in
int3
or
adcl
adc
roll
and
ds
in
sbb
xor
dec
mov
add
sbbl
frndint
push
xor
ret
xor
push
add
inc
mov
outsb
popf
sahf
roll
inc
pusha
cmpsb
in
cmp
add
and
sbb
mov
add
sub
cltd
adc
mov
call
mov
mov
pop
rcrl
mov
or
pop
in
outsl
fwait
or
sbb
add
xor
xchg
sbb
add
fwait
shll
lcall
into
pop
mov
mov
scas
push
and
or
insl
out
lods
dec
adc
jnp
mov
fildl
jb
cmpsl
clc
idivb
std
ljmp
orb
fldl
adc
ret
xchg
js
adc
dec
loopne
jle
xor
jecxz
or
cmc
push
lods
sbb
add
and
mov
popa
and
adc
jecxz
or
or
daa
ret
cwtl
and
ljmp
jle
add
add
rolb
xchg
test
lcall
lcall
xlat
in
cs
stc
int3
fisubs
jle
ds
out
cvtps2pi
arpl
adc
into
mov
call
ja
rcrb
adc
push
jbe
push
cmc
cmp
inc
inc
dec
push
jmp
jge
int
and
xor
loopne
iret
push
incl
dec
aas
dec
stc
pop
or
mov
mov
push
lcall
push
xor
popa
and
xchg
data16
and
fmuls
xor
int3
sbb
sub
jo
ss
mov
push
push
sub
sub
xchg
stc
fidivs
in
xor
cmp
lret
push
jge
daa
or
jb
addr16
pop
mov
mov
pop
repnz
xchg
add
ret
inc
add
es
xchg
mov
insl
mov
pop
mov
adc
fildl
pop
pop
inc
call
mov
add
mov
stos
dec
lcall
or
test
mov
fstps
adc
mov
sti
enter
jae
cld
sub
cmp
repz
push
roll
xor
ret
jge
mov
insb
cld
sbb
cmp
insl
repz
mov
cmp
in
push
mov
stos
inc
das
leave
mov
insb
adc
adc
stc
adc
mov
pop
stc
in
movl
aaa
data16
in
stc
in
sub
mov
das
fwait
add
lock
cmp
inc
mov
jae
mov
repnz
dec
les
pushf
pop
mov
jne
jmp
scas
xchg
mov
int3
pop
lret
icebp
add
call
jo
dec
xchg
mov
es
push
lods
lock
addr16
cmp
jmp
sub
inc
inc
popl
mov
test
icebp
and
adc
add
adc
mov
xchg
test
cmpsb
pop
add
movb
aaa
pop
add
pop
push
and
add
push
scas
mov
aad
xor
arpl
in
push
adc
jb
push
add
loopne
lds
inc
jns
mov
push
sti
xchg
icebp
mov
xchg
mov
push
test
cmpsl
out
mov
scas
add
mov
sbb
out
notb
and
fwait
xor
loopne
ds
jp
ss
pop
mov
fwait
xchg
xchg
inc
or
aas
adc
mov
sub
nop
pop
addr16
nop
inc
cli
adc
jge
cld
arpl
int3
push
or
lcall
dec
imul
jmp
sub
jnp
mov
dec
sahf
jge
jnp
sti
hlt
push
cmpsl
inc
imul
mov
sub
fs
subb
adc
addr16
push
call
pop
mov
fisttps
add
stc
ja
adc
push
les
mov
leave
xlat
cmpl
pop
jae
mov
fidivl
std
adc
dec
fisttps
jb
repnz
outsb
xchg
daa
arpl
jecxz
ret
xlat
push
jno
imul
int3
dec
shll
cmpsl
cmp
push
lods
loopne
ret
insb
mov
fs
mov
int3
out
mov
sbb
mov
clc
cld
repnz
add
and
mov
dec
fdivl
cmp
lock
ret
mov
push
int
daa
sahf
xlat
mov
cmp
repz
loopne
pop
sti
std
xor
cmpl
xchg
sbb
inc
lock
test
add
mov
repnz
and
mov
sbb
jle
repnz
inc
in
adc
sub
arpl
leave
mov
test
shlb
push
int
and
imul
clts
push
sahf
iret
ret
push
mov
add
stc
push
lds
push
jmp
aad
xor
addr16
clc
cmp
scas
cmp
xor
inc
xchg
jnp
repnz
xchg
jbe
push
push
or
inc
dec
fmull
addl
cmp
add
icebp
pop
call
ljmp
cld
std
clc
pop
aaa
fstl
outsb
imul
xchg
sub
jge
xchg
mov
xchg
adc
cmp
mov
sbbb
pop
test
pop
cld
dec
aad
daa
inc
pop
out
or
jns
mov
mov
mov
out
rcrl
dec
sbb
dec
mov
or
adc
movsl
ljmp
popf
pop
pop
jmp
in
push
out
inc
jns
dec
icebp
sahf
int3
mov
inc
mov
movl
cmp
add
faddl
es
les
mov
push
test
xchg
cli
arpl
out
mov
xlat
xchg
frstor
stos
xchg
sub
aad
mov
mul
popa
cld
rcrl
hlt
out
dec
cmp
xlat
outsb
fbld
or
lock
cmp
stc
popa
aas
clc
aaa
out
icebp
cmp
movsb
mov
add
cmpsl
xchg
add
sub
pop
aam
out
out
mov
dec
push
push
enter
xor
rcl
lret
mov
mov
shrb
gs
std
mov
mov
test
mov
rcrb
cmpsb
sub
stc
sub
jbe
jnp
push
or
xchg
adc
push
fldl
lea
pop
xor
lods
push
jecxz
xchg
das
add
arpl
add
pop
add
cli
adc
sbb
mov
in
subl
repnz
push
cmpsb
inc
cmp
add
adc
dec
inc
dec
sbb
add
push
dec
mov
xchg
addl
pusha
and
sbb
push
add
dec
mov
push
xor
xlat
pop
adc
jb
aas
mov
movsl
inc
pop
lahf
xchg
aam
ret
pop
nop
sub
inc
pop
push
sti
cmp
jl
imul
and
in
adc
inc
mov
mov
mov
xor
mov
push
dec
inc
fsub
mov
add
cmp
xchg
rcl
pushl
pusha
pop
fcomps
ret
clc
insl
aaa
loopne
fnstcw
cmp
sub
mov
and
mov
xor
jno
sti
aaa
push
inc
xchg
cmp
or
test
push
sbb
ret
jns
fs
stos
and
enter
lods
outsb
idiv
lock
or
push
bound
andl
test
dec
ds
mov
call
mov
dec
je
mov
adc
jnp
imul
negb
jnp
fsub
imul
out
and
xor
stos
pop
pop
shl
rol
aaa
pusha
sti
lods
pop
ret
adc
ja
mov
dec
insb
fnstcw
lret
cmp
pop
jg
and
jb
test
jnp
xor
out
xchg
mov
jns
mov
lods
cmpsl
addr16
or
popf
mov
ljmp
popf
shrl
mov
in
sbb
cmc
inc
fldcw
dec
lret
push
rcl
not
outsb
push
mov
xor
mov
and
dec
pop
es
add
mov
das
inc
cmp
insl
nop
std
hlt
xchg
popf
into
call
scas
mov
sub
mov
aam
or
mov
sahf
into
divl
xor
test
add
in
or
xchg
push
adc
xor
xchg
xchg
mov
fucom
dec
imul
loop
mov
outsb
dec
in
scas
dec
stos
add
sub
cld
daa
sub
testl
aas
pop
stos
cli
mov
fwait
inc
sub
push
lcall
adc
jmp
or
push
jmp
lods
dec
xchg
mov
or
dec
push
mov
mov
out
xchg
in
ret
and
xor
bnd
dec
faddl
mov
nop
xor
lods
sbb
je
push
jecxz
aad
jno
jne
mov
enter
out
bound
repnz
gs
cwtl
in
mov
pop
sub
inc
ja
push
xchg
xchg
cmc
ss
imul
xchg
lret
loop
mov
sbb
ljmp
shr
push
inc
push
outsb
jne
les
cmp
clc
in
lret
mov
nop
xor
imul
in
sub
mov
filds
jns
and
aaa
loop
imul
sub
or
dec
es
sub
and
push
adc
jbe
mov
aam
cmp
sbb
test
outsl
inc
mov
pop
pop
imul
inc
jbe
lea
call
and
push
fs
push
mov
out
xchg
leave
pushf
divb
mov
ds
and
pop
out
add
jnp
xchg
mov
je
insb
stos
mov
mov
dec
jo
xor
sahf
mov
jge
ss
outsl
cs
out
shll
test
mov
dec
add
test
sub
ds
lahf
hlt
cs
sub
test
cmpsl
adcb
jl
or
nop
jo
sbb
sub
jne
xor
add
push
dec
and
addb
fldl
push
les
or
daa
jae
bound
and
dec
arpl
and
xchg
in
je
daa
pop
dec
dec
lods
cmpsb
test
filds
sahf
cwtl
jmp
dec
stos
andl
dec
push
dec
rclb
add
and
push
scas
scas
mov
test
pusha
stc
xor
mov
inc
mov
and
cmp
add
mov
jmp
sahf
out
aad
inc
icebp
and
lods
insl
lds
loop
dec
push
add
scas
imul
daa
push
popf
je
mov
and
mov
cmp
das
inc
jmp
test
test
imul
pop
dec
repz
sbb
shl
jge
insl
addr16
inc
sbb
xor
push
jl
in
mov
test
jle
pop
mov
gs
adc
mov
mov
adc
jbe
hlt
adc
xchg
mov
sub
out
sbb
mov
adc
rcl
sub
lret
push
jnp
and
lea
ret
xor
sbb
das
lahf
or
es
shlb
sbb
sbbb
imul
add
xor
xchg
inc
mov
rcll
adc
je
lock
inc
xchg
pop
mov
xchg
mov
adc
pop
lods
in
hlt
ds
lds
fsubs
out
mov
pop
adc
and
and
pop
jb
popf
xor
cmp
ret
add
pushf
popf
mov
sti
jae
loopne
imul
icebp
hlt
xchg
or
fiaddl
sarb
imul
jge
sub
mov
dec
adc
sbb
xor
inc
inc
xorb
xor
xchg
add
jne
mov
jmp
sub
pushf
rcll
inc
add
mov
jb
push
push
mov
lea
sub
xchg
xchg
mov
sti
sub
xchg
stos
les
jne
call
lods
xchg
push
sub
aas
jmp
in
int3
jbe
pop
leave
sub
jbe
sbb
push
push
test
repnz
sbb
loopne
mov
fstpl
leave
pusha
lret
mov
stos
int
aad
sub
mov
sti
ss
jbe
mov
pop
decb
fs
cmp
sub
jecxz
push
imul
out
mov
ror
adc
fiadds
push
inc
lea
inc
push
pop
add
sbb
nop
adc
and
jo
adc
xchg
orl
shrb
mov
adc
and
push
hlt
sub
xor
mov
push
lret
out
xchg
jl
imul
int
ja
roll
daa
adcl
push
sbb
mov
loopne
ja
enter
lahf
popf
lahf
aam
fldl
mov
aad
mov
sbb
test
inc
les
cld
iret
loope
es
aad
stos
dec
add
imul
shl
sub
cmpsb
icebp
andl
test
dec
ljmp
xor
popf
and
pop
js
popf
cmp
cmp
lds
jge
or
pop
imul
or
xchg
cli
mov
push
mov
js
add
cltd
test
out
or
push
cmp
jge
mov
stc
enter
inc
imul
gs
sti
xor
and
sbbl
push
xor
mov
sub
xchg
fistpl
hlt
sbbb
mov
jl
xchg
pop
mov
mov
pop
pop
iret
ja
imul
loopne
sub
mov
pusha
rcrb
ret
out
mov
mov
rclb
push
pop
outsb
inc
lea
imul
fsubs
jge
loope
xor
ja
ja
pop
movsl
fnstcw
loop
fcoml
loop
or
fbld
lock
or
xor
cmpl
pop
movsl
sahf
lret
into
fs
pop
cmp
mov
sbb
or
jno
popa
leave
sbb
sub
or
mov
out
cmp
adcb
jp
adc
xchg
mov
push
jne
clc
cli
add
sub
aas
mov
xchg
clc
xchg
sub
lods
inc
mov
loope
addl
lds
or
int3
add
pop
les
push
add
sub
pop
out
mov
push
cmp
lds
and
push
xlat
ret
and
push
call
out
aaa
out
inc
in
je
bts
mov
mov
out
pop
jne
and
mov
ret
scas
add
psubsw
inc
jle,pn
bnd
sub
lret
in
pop
ja
rep
fmuls
cmpsb
jge
adc
mov
pop
fiaddl
xchg
adc
lock
xchg
ror
mov
loope
or
loop
jecxz
mov
pop
xor
push
rcl
adc
rcrb
inc
stos
mov
in
dec
push
test
data16
sbb
sbb
mov
jb
cmpsb
and
cli
hlt
fidivs
aad
scas
sub
addl
cmp
pop
mov
inc
jo
sarl
cmp
aaa
mov
cmp
out
pop
test
dec
pop
fnstsw
cmp
mov
fnstsw
dec
lret
pop
mov
cli
add
dec
jecxz
enter
fs
js
push
loop
mov
xchg
add
dec
mov
inc
cmp
jmp
fs
cmpsb
callw
addb
gs
or
insb
pop
adc
dec
sub
pop
and
jnp
ss
das
or
addr16
sbb
pop
dec
and
dec
mov
test
jge
sarl
pop
xchg
mov
hlt
sbb
rcll
mov
lock
icebp
fidivrl
or
push
insb
aam
sbb
and
popf
or
adc
ret
movsb
fmul
fs
test
push
xchg
iret
sub
jno
xor
jae
sub
sub
dec
xchg
cmpsb
add
clc
sbb
lret
cmpsl
loope
lret
ljmp
js
dec
push
mov
repnz
int3
sbb
outsl
lret
sbb
xchg
lods
pop
sahf
pop
sbb
out
xlat
ret
lret
adc
push
sub
fidivrs
add
pop
fidivs
icebp
adc
adc
mov
pop
aad
jo,pt
push
cmp
xor
adc
push
lahf
inc
sub
dec
xchg
loope
pop
mov
addr16
push
adc
mov
and
mov
push
faddl
xchg
xchg
std
test
ljmp
mov
sahf
sbb
aaa
into
ss
ret
sbb
adc
mov
jae
aas
mov
jne
mov
sub
pop
callw
cmp
test
mov
fwait
pop
sub
jge
scas
xor
daa
std
xor
jo
mov
mov
cmp
stc
inc
xor
sbb
jne
insl
inc
xor
fistl
pop
jae
daa
sub
test
mov
add
ret
sbbl
adc
stc
int
fsubl
dec
rorl
jg
push
dec
mov
push
stc
dec
mov
inc
fs
cmpsb
fs
pop
push
fiadds
jns
pop
in
add
lret
pop
xor
aaa
sti
sbb
imul
jp
inc
je
cmp
shrl
xor
leave
xchg
stc
mov
mov
aam
pusha
in
cmpsl
dec
jnp
push
xchg
add
outsb
loop
stos
and
pop
cmpsl
adc
jbe
sbb
xchg
cwtl
sub
or
and
jmp
jmp
dec
jo
sbb
mov
adc
test
addr16
dec
cmpb
fwait
cltd
cltd
xchg
lret
add
daa
add
push
stos
repz
add
mov
shll
js
dec
repz
fwait
bnd
jecxz
cwtl
sbb
pusha
movsl
xchg
inc
ja
mov
xor
mov
add
xor
and
test
jp
addr16
and
sub
rcll
mov
call
xor
jno
mov
adc
cs
int3
imul
ret
lret
sbb
pop
inc
icebp
pushl
inc
or
mov
adc
mov
stos
sub
dec
sbb
mov
cmpsl
das
cld
mov
pop
jbe
sahf
lock
out
sbb
inc
or
rcrl
ljmp
data16
outsb
and
push
push
pusha
pop
xchg
mov
push
out
push
pop
aad
jecxz
jnp
cmp
mov
cmp
repz
pusha
mov
sub
movsl
mov
imul
cld
mov
push
jne
nop
leave
outsl
or
cmp
sub
xor
dec
and
mov
mov
scas
xorl
jecxz
xchg
cmp
mov
lret
dec
xchg
jecxz
pusha
lret
pop
push
cltd
outsl
xchg
fldl
and
push
mov
mov
divb
xor
sub
fninit
ficoml
xlat
inc
ljmp
add
push
imul
int3
and
aad
inc
push
icebp
ret
sub
jecxz
pop
daa
jg
aaa
and
movsl
mov
ss
and
or
pop
faddl
outsb
out
inc
stos
add
les
sbb
aaa
jle
ljmp
je
cmp
push
minps
xchg
adc
fistps
jl
cmp
scas
cmp
daa
jp
insl
xlat
and
cmp
sbb
lods
pop
lahf
xchg
push
push
and
dec
inc
sbb
cmp
sub
or
scas
int3
cwtl
cmp
ljmp
cwtl
pusha
sbb
pop
dec
inc
sarb
fstp
mov
add
sub
repnz
or
lahf
dec
roll
inc
scas
ds
test
push
push
mov
mov
test
cmp
stos
mov
push
in
out
jnp
or
clc
or
cmp
fs
into
xchg
test
dec
js
and
jp
ret
adc
push
and
or
lods
cmp
aam
push
outsb
out
stos
in
mov
inc
je
fsubrs
pop
mov
pop
enter
xor
pop
loope
aam
cmp
test
das
popl
je
and
dec
stc
movsl
mov
inc
mov
pop
hlt
clc
aam
adc
mov
push
jbe
gs
xchg
add
in
mov
push
inc
scas
mov
lods
fdivs
mov
mov
popf
ds
faddl
push
rorb
push
cmp
jno
push
add
call
sbb
lea
loope
repnz
pop
push
sarb
jns
pushf
push
ss
dec
jo
adc
mov
je
jae
jnp
mov
fistpl
call
rclb
lcall
aas
pop
push
xor
mov
cmp
fnstsw
push
or
push
hlt
cmp
add
jge
adcb
add
in
add
into
sub
int3
rolb
lds
adc
es
popf
dec
pusha
fst
outsl
imull
fisubrl
ljmp
in
pop
mov
int3
mov
cmpsb
fbld
dec
fdivrl
adc
or
xor
ret
pcmpgtb
add
push
ret
jbe
lcall
cmp
faddl
rorl
in
mov
mov
fdiv
out
in
scas
testb
jbe
orb
dec
cmc
mov
xchg
mov
pushf
lods
bound
shlb
aad
jae
aas
sub
push
mov
inc
add
xchg
loopne
pop
addr16
mov
bound
test
pop
dec
adc
fbstp
dec
jg
inc
fcomps
cmp
es
jle
and
sub
push
push
xor
xchg
rol
call
sub
push
pop
icebp
pop
jne
add
dec
int
fnstsw
cmp
pusha
stos
pop
loopne
negl
lea
fcoms
in
push
sbb
cli
cwtl
push
iret
mov
sub
pop
pop
jb
js
pop
inc
mov
inc
cs
cltd
cmp
pusha
and
xchg
sti
mov
movsb
inc
pop
gs
push
add
add
pop
sbb
sbb
dec
sahf
pop
repz
add
arpl
lea
outsl
adc
push
xchg
xor
repz
mov
dec
stos
add
pop
jle
push
mov
fwait
xchg
fwait
pop
and
push
push
sti
out
mov
xchg
in
sub
xlat
std
push
clc
or
and
mov
adc
fsubl
cmp
or
pop
cmp
aas
pop
cmp
mov
test
popl
mov
imul
pop
arpl
lahf
mov
xor
and
push
insl
popf
punpckhbw
dec
std
fisttpl
pop
sbb
mov
ja
sbb
icebp
fiadds
adc
out
rcrl
mov
dec
mov
pop
int
fs
call
jb
out
insb
cltd
jo
inc
cmp
scas
push
orl
adcl
fst
fldln2
xchg
gs
in
sub
das
sbb
and
and
and
xchg
std
cmpsl
sub
jmp
push
lods
cmp
dec
sbb
int3
movsl
and
mov
mov
ja
imul
fldt
xchg
ja
sahf
lret
mov
mov
enter
test
adc
push
mull
xchg
mov
mov
mov
sti
outsl
outsl
mov
cmc
xor
push
shll
sti
lock
jl
xchg
pop
xorl
dec
push
push
sti
or
pop
enter
add
inc
jmp
or
ds
fmul
inc
jle
add
iret
fsubrs
jecxz
add
lods
and
pop
and
lret
mov
adc
ss
sub
shl
xor
push
out
mov
or
push
in
jne
ja
aas
loopne
pop
in
ficomps
inc
pop
test
lahf
or
iret
cli
cmp
test
add
mov
jmp
mov
in
lock
pop
jne
mov
call
add
insl
add
out
andl
aaa
push
mov
gs
shll
je
cmp
add
scas
test
or
pop
jo
jbe
adc
pop
orl
mov
pop
dec
cmc
or
or
cmpsl
les
sub
jno
shll
push
or
dec
xchg
aad
adcl
addr16
pushf
mov
mov
hlt
pop
icebp
xchg
add
lret
loop,pn
loope
aas
adc
mov
xor
mov
and
sbb
inc
sbb
jle
out
mov
inc
es
scas
pushf
jnp
mov
mov
mov
mov
insl
int
jbe
cmp
imul
stos
push
or
decb
push
sbb
orl
loopne
push
ljmp
mov
fsubrl
pop
jge
in
dec
lret
iret
ljmp
in
sub
jae,pt
sbb
and
dec
xchg
cwtl
or
std
cmovb
mov
inc
pop
sbb
lods
sub
jl
popf
sub
and
sub
dec
cld
mov
leave
hlt
or
or
mov
and
xor
inc
rcrb
push
paddsb
pop
into
jmp
lahf
mov
mov
push
icebp
int
or
cmp
or
jle
sub
push
mov
xor
sar
out
inc
subl
aas
sbbb
jns
fidivrl
dec
mov
aaa
rorl
add
cmp
fisubrs
lahf
cmp
scas
inc
int
fs
lcall
mov
jb
test
cmp
sti
xchg
mov
cmc
out
loope
sub
fcmovnbe
cmp
jae
and
ja
or
jo
or
lods
dec
lahf
dec
lret
outsb
inc
jae
cmpsl
inc
mov
lret
outsl
dec
sub
jmp
out
adc
add
jmp
fwait
lret
out
aad
sti
jg
adc
pop
stos
movsl
sbb
stos
pop
xchg
aaa
mov
adc
loopne
sub
dec
cmpsb
dec
into
popa
push
cmpsb
aas
pop
jno
mov
push
jg
jns
push
insl
pop
stos
out
pushf
cli
mov
fisttps
dec
aaa
rclb
call
or
nop
fsubrl
push
sbbb
repnz
repnz
sbb
pop
mov
cmpsb
jg
and
or
out
jno
sub
shrl
push
pop
ss
test
stos
cld
xchg
rclb
in
pop
mov
mov
insl
int3
imul
inc
insb
mov
jge
jne
sub
stos
mov
ret
xor
in
mov
inc
sti
and
xor
fcoml
icebp
and
cmc
jo
sub
shrb
push
adc
mov
bound
fnstenv
out
stc
mov
xor
add
repz
roll
stc
sbbb
or
repnz
sub
inc
data16
xchg
or
dec
add
mov
sub
adc
out
mov
mov
push
sub
xor
dec
adc
fldl
test
dec
mov
pextrw
aam
aad
push
mov
loopne
ret
fildll
xchg
out
ljmp
mov
jl
fistpll
xor
mov
push
or
and
mov
dec
adc
push
ret
or
dec
mov
mov
jo
les
insb
int3
pop
in
gs
ficomps
std
mov
test
ja
jb
outsl
stos
lods
fnstcw
mov
popf
out
fnsave
jp
loop
and
setge
cltd
adc
mov
push
enter
lret
loopne
jbe
ror
mov
lods
jne
mov
test
imul
addr16
adc
cmpsb
push
jle
mov
leave
imul
jns
cs
jno
sbb
xor
inc
rcl
pusha
push
push
loope
call
push
add
lcall
dec
out
test
jge
inc
shlb
jbe
push
shlb
dec
mov
scas
dec
ja
rorl
inc
pop
mov
into
ss
inc
das
jge
fst
dec
push
cs
stos
push
inc
add
dec
mov
adc
sti
sbb
jmp
mov
xchg
bound
push
push
sbb
xchg
inc
push
sub
inc
dec
jne
arpl
mov
into
movsl
mov
fistps
sbb
aas
lods
adc
out
inc
xchg
mov
jge
fdivrl
stos
dec
gs
fs
mov
pop
stc
pop
push
jecxz
jo
fwait
and
adc
adc
add
aaa
scas
lret
mov
enter
xlat
test
in
lds
dec
clc
hlt
pop
paddsw
xor
stos
iret
add
pop
jns
or
loope
mov
rorl
in
adc
fisubl
and
xor
addr16
and
ljmp
sbb
mov
sbb
cmc
xchg
sahf
mov
xchg
icebp
xor
inc
orl
sub
sub
sub
test
into
jecxz
cld
lcall
fcoml
mov
call
shll
push
fimuls
push
into
lret
fmulp
cmc
sahf
xchg
push
xor
movsl
mov
or
push
fidivl
fcmovnb
xchg
xor
stos
push
mov
imul
bound
lods
jo
nop
or
mov
out
mov
pop
int3
jecxz
mov
push
repz
stc
lods
insb
movsb
push
pop
rolb
orl
pop
sub
aaa
sub
mov
lods
add
shrl
push
push
clc
orb
stos
xchg
loope
sarl
dec
insl
jns
imul
mov
dec
xchg
push
outsl
sub
or
fwait
lahf
lcall
cli
fnsave
mov
das
mov
stos
dec
inc
mov
dec
cmpsl
sbb
mov
push
sub
adc
cmp
jmp
fs
filds
lcall
xchg
lock
xchg
push
and
test
mov
fxch
cwtl
jl
aam
icebp
lcall
inc
push
addb
mov
movsb
xor
sbb
clc
in
jo
imul
and
jg
lea
rolb
sbb
mov
pusha
pop
sub
into
fildll
xor
sbb
sub
sub
out
and
xchg
inc
mov
scas
aam
fs
sbb
test
pusha
insl
bound
jl
dec
cmpsb
inc
cmp
insl
mov
or
lods
xlat
xchg
xchg
push
push
xor
fstps
jge
cwtl
movsl
pop
mov
fcomp
xor
inc
lcall
dec
enter
iret
cmp
jg
jmp
test
rcrb
enter
fsubs
rol
cmpsb
and
sub
jbe
loop
xor
push
insb
sbb
xor
mov
xor
sbb
inc
mov
mov
pop
pop
jo
jge
or
sbb
xchg
into
push
notl
mov
outsl
cmp
scas
push
inc
xlat
pop
loop
push
dec
xchg
mov
pop
pop
sti
imul
xor
dec
outsb
xchg
cs
dec
add
pop
or
pop
jnp
loope
mov
icebp
and
xchg
adc
inc
out
jns
dec
jno
push
push
pop
jb
jg
add
jmp
lcall
loopne
inc
negl
mov
lods
cli
fiadds
dec
insb
pop
cmp
int3
cmpsl
jnp
into
lock
outsl
mov
cmpl
sbb
mov
xchg
mov
mov
and
scas
fsubs
or
ret
dec
stos
mov
rorl
sub
push
push
xor
clc
cltd
xlat
push
repnz
sarb
andb
pop
cwtl
jmp
stos
inc
add
repz
mov
mov
mov
pop
sbb
inc
loope
adc
adc
mov
jecxz
xchg
add
inc
imulb
ss
inc
test
dec
jp
test
pop
dec
xor
jg
cltd
in
jl
mov
add
gs
shr
mov
lock
xor
out
xchg
xchg
or
sub
cltd
xor
inc
stc
mov
mov
ror
pop
dec
jae
push
ret
test
add
mov
or
sbb
sub
sahf
mov
mov
add
push
fmuls
leave
adc
cwtl
pop
push
lcall
movsl
shll
out
sub
ror
dec
fcomps
pop
jp
xchg
jge
pop
popa
mov
fwait
pusha
adc
mov
int3
pop
mov
jbe
negl
out
and
sti
test
mov
lahf
inc
pusha
add
shrl
push
in
or
pop
pop
loope
sbb
sti
insb
mov
add
into
stos
sti
jp
pop
lds
out
sbb
adc
imul
pop
test
add
mov
popa
outsl
xor
mov
add
pop
mov
dec
inc
inc
sub
xor
das
hlt
xlat
sbb
punpckldq
in
sub
sbb
jg
dec
add
ffreep
in
xor
xlat
mov
push
popf
call
repnz
mov
es
idiv
dec
inc
dec
add
std
pop
dec
xor
aam
idivb
out
pusha
lods
addr16
into
in
mov
push
fists
mov
adc
inc
cmp
mov
clts
cmc
mov
imul
lcall
nop
dec
je
out
test
sub
mov
jnp
into
lea
cmp
ja
mov
xchg
fadds
jecxz
bound
xchg
imul
fists
and
mov
lcall
sub
adc
ror
sarb
adc
pop
inc
punpckhwd
or
in
or
push
or
mov
cmp
mov
pop
adc
xchg
pop
or
aaa
inc
andb
sub
repnz
and
mov
jnp
fld
xchg
xor
mov
dec
pop
pop
mov
lea
jo
jp
loopne
xor
adc
adc
or
cmp
lds
or
mov
aas
adc
ret
xchg
pop
in
push
cmp
aaa
mov
xlat
iret
popl
scas
or
cmp
pop
iret
popf
jecxz
push
sbbl
push
lcall
mulb
in
out
jae
insl
jl
pop
inc
outsl
cwtl
ret
jge
popa
aam
mov
shlb
xchg
pop
cmp
loop
mov
outsl
sbb
mov
cmc
icebp
imul
stc
aaa
sbb
in
lock
sbb
pushf
and
sub
cmpsl
mov
pop
xchg
mov
clc
jb
pop
sub
test
subb
lret
pop
fsubrl
mov
dec
xor
popa
mov
pop
nop
shlb
jge
dec
sub
jae
test
decb
dec
out
ficomps
outsl
jnp,pn
mov
je
sarb
addr16
jne
cmc
mov
add
es
loop
dec
push
dec
push
hlt
pop
out
movsb
xchg
dec
insl
fdivl
je
jle
dec
xchg
push
mov
les
and
xchg
loopne
lds
mov
es
pop
dec
ss
cmc
orl
sub
sub
or
rcll
mov
lret
xchg
flds
fidivrl
mov
add
in
jns
mov
push
arpl
add
pop
and
xchg
js
mov
xchg
add
cmp
or
dec
push
dec
sarb
inc
mov
add
cwtl
daa
dec
outsb
mov
outsl
arpl
jp
repnz
shlb
addl
insb
aaa
jl
lock
shrb
xchg
lcall
rolb
lea
stc
lahf
popa
mov
sbb
test
hlt
cmp
xchg
lret
cwtl
aas
xchg
mov
jmp
jnp
out
jp
push
push
lret
stc
inc
adc
inc
into
les
adc
int3
pop
adc
imul
sub
stos
xchg
cmp
add
aam
cmp
mov
jecxz
loopne
loope
or
xchg
xchg
movsb
dec
and
pop
sbb
jp
cmp
outsl
and
cli
cs
outsl
inc
clc
push
jmp
out
sarb
xor
jne
sbb
in
dec
nop
xor
sub
mov
dec
cmpsl
cmp
and
int3
or
aam
mov
rcll
inc
imull
iret
clc
mov
add
sarl
jns
bnd
xchg
incl
push
dec
lods
in
inc
les
out
arpl
imul
lcall
mov
dec
push
in
aas
or
pushf
jo
in
loopne
fstp
pop
mov
jbe
out
out
dec
push
scas
rcr
dec
int
dec
mov
add
gs
fs
xlat
shlb
and
loop
ret
xchg
inc
data16
mov
xchg
call
aaa
mov
out
in
inc
cmpsb
popf
mov
loopne
stos
or
mov
out
push
jbe
sti
adc
fbstp
mov
pop
inc
sub
jecxz
add
cmpsb
add
mov
push
out
push
mov
pusha
out
mov
push
cmp
jbe
push
adc
rep
lret
adc
mov
dec
and
fisubrs
pop
push
cmp
cmp
jmp
lea
sbb
jg
cmp
ret
sub
dec
push
mov
enter
and
push
pop
pop
test
mov
lahf
xchg
fidivrl
mov
mov
les
pop
fxtract
movsb
push
imul
jle
je
cmc
mov
or
js
filds
xor
or
lahf
repnz
cmp
popa
mov
adc
dec
push
mov
mov
popa
sti
rclb
loope
inc
add
divb
dec
cmp
adc
out
les
jg
lret
and
push
clc
xlat
sub
cmp
clc
or
mov
inc
or
add
popa
cmpsb
movsl
fildl
pop
ljmp
adc
out
mov
les
mov
leave
jle
xchg
dec
xchg
mov
add
sub
pop
test
scas
neg
js
subb
add
das
adc
xchg
bound
push
outsl
jno
mov
lahf
cmp
and
fwait
push
das
idivl
push
lahf
das
pop
jmp
shlb
cmpsl
jle
cltd
out
cmp
push
xchg
je
cmpsb
sbb
jae
out
mov
push
add
push
mov
adc
pop
lea
sbb
sub
sarb
enter
inc
adc
jae
scas
adc
addr16
xor
rcrl
inc
jbe
or
and
push
xchg
push
call
push
mov
inc
lret
aam
cmpsb
jmp
sahf
cwtl
lret
lea
cmc
add
lods
hlt
jmp
pop
lret
int3
pop
lds
inc
ds
popa
movsb
adc
xor
cltd
shll
mov
jg
jmp
and
sub
pop
cmc
jge
mov
ja
cmp
inc
lds
xchg
negl
dec
enter
hlt
sbb
fadd
cmc
out
inc
insl
mov
pop
orb
subb
adc
fisttps
dec
push
das
jo
loope
js
sbb
lods
ljmp
pop
fcomps
xchg
dec
mov
inc
jo
sbb
cmp
mov
sti
or
pop
aaa
mov
ror
xor
lahf
xor
inc
sbb
mov
mov
and
mov
data16
ljmp
push
sbb
cmpb
or
leave
stos
add
rorl
mov
loope
add
jnp
inc
std
mov
pushf
add
push
lahf
adc
xor
insl
push
or
out
lea
test
arpl
sbb
lea
faddl
and
mov
cmp
xchg
leave
mov
mov
in
lea
leave
mov
es
mov
and
test
loopne
dec
das
cli
hlt
int
std
jno
aaa
pushf
ljmp
push
adc
aad
pop
cltd
addr16
sub
test
or
pop
jp
gs
adc
lds
xor
cmp
fstpl
mov
dec
adc
out
jae
imul
or
aam
test
inc
aam
push
inc
movsb
iret
jmp
jp
or
jae
sub
imul
test
xchg
insb
test
push
mov
iret
adc
push
cmc
lods
jmp
jne
outsb
jle
aas
negb
mov
cmp
mov
or
adc
push
cld
loope
repz
popf
jnp
add
or
adc
mov
ljmp
push
ss
repz
pop
xchg
jg
cmp
mov
jmp
dec
mov
fsubrl
sbb
jmp
add
push
inc
pop
xor
add
sbb
icebp
pop
cmp
shll
leave
sbb
idivb
es
fsub
addr16
sub
cwtl
push
xchg
outsl
imul
mov
sbb
pop
stos
or
daa
jno
js
lahf
cmp
jecxz
xor
jbe
out
insb
pop
sbb
xchg
loop
repz
xor
insb
aam
in
sbb
ja
out
aaa
jmp
sbb
insb
mov
shlb
test
test
cmpsb
insl
xor
mov
cmc
ret
mov
mov
cmp
pop
jl
pop
xlat
cli
out
mov
sbb
clc
jno
in
pop
xor
pop
sahf
lea
xchg
xchg
addr16
and
dec
addr16
pop
lcall
divl
movsl
lods
pop
mov
out
add
push
cmp
xchg
fisubrl
jns
or
popa
out
mov
sbb
adc
adc
jmp
sarl
jns
dec
cmpl
pop
sbb
xchg
out
inc
loope
shll
fld
mov
add
sti
xchg
nop
pop
stos
inc
sti
les
inc
cmp
push
sbb
ljmp
inc
inc
adc
mov
inc
inc
rorl
sub
dec
mov
jnp
rclb
jne
pop
mov
adcl
push
xor
push
insb
xchg
lret
mov
std
ss
xor
stos
xor
cmp
add
idivl
pop
mov
test
add
test
test
xchg
fists
arpl
xlat
cwtl
cld
bound
jns
mov
dec
cmpb
cs
in
int3
sbb
cmp
add
int
add
push
call
insl
jle
out
test
out
movsb
fs
movsl
jle
repnz
xchg
sub
stos
out
sahf
mov
unpcklps
sbb
movsb
and
iret
adc
popa
dec
mov
inc
leave
mov
sahf
scas
cli
gs
push
sbb
mov
pushf
pop
cmova
pop
pop
sbb
mov
rclb
xchg
fwait
add
jle
jle
les
arpl
jo
fbstp
sub
dec
mov
push
jmp
testb
jmp
sub
xchg
and
xchg
and
mov
nop
dec
pop
loopne
adc
outsb
and
mov
fs
dec
aad
and
lock
dec
add
inc
int3
ret
xor
mov
cmp
cwtl
lahf
jnp
xor
sub
sarl
shlb
mov
push
ss
stc
inc
fs
loopne
jo
xor
xorb
pop
add
sub
cli
bnd
pop
xchg
sub
fnstenv
test
dec
aaa
lods
add
mov
pushf
call
pushf
arpl
xorb
adc
xor
adc
mov
push
or
xchg
jl
dec
aaa
mov
fcmovnb
pop
movsb
inc
loopne
dec
mov
int
addl
cli
shrl
or
cmp
mov
test
inc
mov
xchg
ret
out
sbbb
mov
insl
or
mov
into
adc
pop
shll
pop
xor
call
out
lock
in
adcl
xchg
popf
sub
add
mov
mov
sahf
cmpsl
add
lods
lods
jae
xor
cmp
mov
adc
call
adc
sbb
pop
orl
and
add
rcrl
cltd
jb
fs
in
enter
dec
loopne
sbb
adc
or
lret
roll
addl
adc
push
inc
aas
mov
push
aam
cmp
inc
lock
add
jne
jno
mov
cli
cmc
and
pusha
push
xchg
shrb
ds
mov
ret
cmpsb
cmp
mov
js
adc
mov
push
push
arpl
cmp
jb
mov
inc
cwtl
mov
loope
repnz
aaa
cmc
pop
xorb
fdivl
and
nop
cwtl
shrb
lret
xor
xchg
push
push
test
inc
push
int3
sbb
xor
cmp
push
test
lahf
inc
jmp
test
sarb
stc
cmpsl
push
inc
adc
jecxz
sub
fwait
fisubrs
ret
repz
je
stos
mov
xchg
xchg
pop
mov
or
add
inc
cmpl
frstor
cld
mov
dec
jae
lods
adc
sbb
dec
inc
add
mov
lahf
out
es
mov
stc
or
icebp
imul
pop
jae
mov
adc
cld
es
xor
loope
push
xor
repnz
insl
addr16
mov
movsl
mov
dec
popa
sbb
aad
inc
add
add
rcrl
popa
push
mov
dec
mov
add
adc
jo
mov
fcoms
add
sub
xor
stos
mov
push
outsl
stc
jmp
xchg
jb
je
sub
pop
xor
or
out
pop
fwait
mov
jb
inc
pop
inc
aad
pop
int3
arpl
adc
rclb
push
ret
cmp
adc
jge
xchg
jmp
into
cld
out
mov
repz
js
sbb
inc
mov
pop
out
inc
jge
sahf
mov
inc
mov
es
push
imul
mov
ret
aas
cli
lcall
test
aad
pop
out
iret
cmp
iret
inc
cmpsb
or
sub
push
jl
lret
jae
xor
mov
hlt
pushf
rorl
sarl
nop
movb
push
xchg
hlt
inc
adc
or
mov
inc
test
iret
insl
jl
cmp
fidivs
arpl
call
inc
adc
sub
mov
adc
ss
out
sub
fdivl
xchg
inc
fs
cmp
jle
push
roll
push
test
mov
xchg
xchg
in
or
or
push
jmp
or
mov
fsubl
aas
icebp
mov
mov
pop
dec
adc
and
sbb
cmpb
popa
je
mov
adc
xchg
add
xor
or
jbe
je
jnp
jmp
pop
popa
pop
pop
pop
pop
mov
cmp
xchg
xchg
loope
mov
jg
sti
arpl
daa
mov
add
mov
xlat
data16
clc
cmpsb
mov
cmp
cmpsl
pop
sbb
xor
dec
pop
stos
xchg
pop
insl
sub
clc
popf
idivl
cmp
sbb
movsb
jns
je
shr
push
jae
stos
and
sub
sub
mov
or
mov
out
mov
cmpsl
rcll
push
imul
mov
test
js
ret
andb
stos
test
xor
jecxz
cmp
iret
mov
shll
jecxz
loop
or
test
adc
rolb
pop
sbb
lods
ljmp
repnz
cmp
mov
pop
pop
cwtl
mov
cs
mov
pop
pop
add
test
add
inc
sbb
ds
loop
jmp
fs
int
loop
push
inc
pushf
cmp
xor
mov
push
inc
push
mov
or
ds
out
nop
jae
js
jl
xchg
pop
mov
jecxz
xchg
push
dec
push
popf
xchg
lcall
jge
and
fsubp
into
popa
and
jo
sbb
in
fcmovne
pop
cmp
lock
inc
add
mov
and
jl
cmpsl
mov
mov
ficoms
push
enter
out
mov
xchg
std
lret
xchg
cmp
mov
mov
lret
popa
int3
mov
shr
cltd
mov
es
das
mov
int3
test
imul
js
pusha
iret
clc
test
int
sahf
jns
int
nop
ja
iret
loopne
xchg
mov
enter
mov
and
repnz
fdivs
roll
lret
inc
jp
or
adc
push
hlt
inc
jge
test
pusha
movsl
mov
mov
xchg
pop
xor
stos
xchg
jne
lahf
leave
push
push
cmc
push
rcll
xlat
out
xor
jmp
shll
xchg
mov
int3
fldl
outsl
mov
mov
dec
pop
cwtl
cmpsb
cmpsb
call
test
fsubrl
cmpsb
xchg
aaa
movd
pop
jbe
das
push
mov
fs
lea
mov
shr
mov
mov
loope
loopne
fidivrl
inc
fwait
test
leave
ss
sti
std
hlt
lcall
inc
ja
lcall
pop
in
sti
jae
loopne
inc
xchg
adc
sbb
lret
xchg
dec
cmp
ja
das
mov
ljmp
dec
xchg
arpl
popa
sub
enter
push
ja
out
hlt
mov
fsts
movsb
in
sbb
pop
mov
adc
in
cmp
jo
push
lds
in
leave
and
ffree
fs
adc
pushf
cli
iret
loopne
xchg
jno
shlb
jmp
out
iret
lock
sbb
out
inc
sti
jbe
xlat
std
std
push
pop
daa
push
xor
in
mov
out
jmp
cwtl
cmpsb
ljmp
inc
test
flds
jnp
xor
stos
outsb
push
mov
jne
aas
lcall
add
pop
pop
out
in
pop
mov
es
loopne
push
xor
in
cmpsl
push
fcoml
leave
gs
jmp
das
movb
mov
out
mov
test
mov
xchg
in
pop
mov
pop
ss
cmp
and
sbb
ja
sbb
xchg
inc
lcall
mov
cmpsb
inc
dec
xor
pop
in
loop
pop
fisubl
rcrl
call
ret
andb
hlt
mov
jle
or
fdivrl
hlt
pop
pop
pop
hlt
adc
dec
sbb
fists
xor
clc
mov
push
lret
add
push
sbb
jmp
outsl
stos
mov
xchg
fwait
sbb
sbb
je
sbb
xchg
sbb
shlb
pop
repz
jmp
xchg
jg
imul
push
cli
aaa
xchg
mov
dec
dec
adc
xor
dec
and
mov
testb
js,pn
lret
insl
push
sub
test
fisubrl
sbbl
mov
outsl
mov
jbe
xchg
test
push
es
mov
gs
mov
add
push
dec
test
mov
shll
fsts
mov
cmp
pop
les
xor
pop
or
xor
les
fs
sub
insl
xchg
jb
inc
test
sub
aam
dec
lds
stc
stos
imul
inc
shl
inc
stos
cs
cs
dec
cld
lahf
movsb
in
or
popa
pop
mov
arpl
xchg
fdiv
lea
dec
pushf
test
adc
loopne
repz
dec
out
sub
mov
or
jmp
out
xor
jle
cmpsl
out
sub
shlb
imul
std
fwait
call
int3
ret
movsb
lods
and
fiadds
inc
push
es
cs
fs
inc
xor
outsl
ret
jne
ds
je
inc
sahf
arpl
xchg
cmp
cmp
sbb
inc
push
cmp
xchg
cmp
sub
stos
pop
dec
jp
xlat
push
psubw
outsl
fnsave
sub
xor
sbb
sbb
ret
lcall
mov
mov
lret
add
pop
pop
out
jns
shlb
out
pop
in
push
mov
dec
test
pusha
sub
icebp
fmull
mov
add
cmpsb
cmp
xchg
sahf
sub
inc
std
shrl
les
shll
add
sub
cmp
sbb
jl
loop
xor
inc
lret
stos
adc
mov
aaa
sbb
in
add
sarb
xchg
int3
pushf
mov
cmp
or
mov
cmp
or
and
mov
lods
cmp
dec
inc
mov
leave
and
jnp
lret
jecxz
jmp
jnp
cmpsl
dec
push
or
testl
cmp
adc
sbb
push
and
rorl
outsl
cld
xchg
test
mov
addr16
scas
push
mov
ret
idiv
cli
gs
xorb
or
addr16
pushf
cmp
out
popa
dec
notb
mov
int3
sub
pusha
in
xchg
mov
outsl
out
mov
mov
pop
pushf
and
ror
lret
mov
imul
and
xchg
cmc
cltd
mov
sub
pop
or
sub
dec
iret
jns
adc
das
cmp
jg
add
adc
xchg
mov
mov
aas
lret
divb
loope
lock
jge
insb
push
pop
stc
xor
jecxz
inc
push
sbb
cmp
in
sbb
and
inc
push
xchg
fstl
xchg
and
loopne
pop
loopne
or
xlat
mov
insb
orl
mov
pop
gs
sub
xor
aad
pop
dec
in
aam
push
cmpsl
mov
push
arpl
addr16
sbb
jb
add
enter
jo
xchg
inc
dec
out
cwtl
inc
fmul
clc
sbb
push
push
out
dec
jmp
jmp
mov
mov
iret
mov
es
lahf
sbb
test
sub
mov
hlt
rclb
mov
popa
in
stos
out
fs
pop
dec
xchg
leave
pop
in
add
add
loope
lret
lods
jae
lret
test
pop
push
bnd
push
adc
and
xor
push
xchg
push
mov
mov
call
fdiv
mov
cmp
jb
inc
xchg
sbbb
in
and
xchg
out
cld
sar
rcrb
jne
out
stc
popa
push
mov
or
xor
loopne
negb
inc
loope
push
repnz
stos
or
lret
bound
lods
push
mov
scas
mulps
stc
adc
fisubrl
mov
push
std
popf
fstpl
xor
fwait
in
pop
mov
aaa
sub
jg
mov
jne
pushl
mov
xchg
add
push
out
in
lea
fidivl
fdiv
adc
xlat
xchg
js
cli
lods
xor
sub
mov
sbb
ret
xor
mov
js
mov
loope
lock
and
movsl
xchg
add
pushf
mov
xchg
add
inc
lret
dec
push
out
mov
daa
dec
scas
inc
jno
or
inc
push
leave
or
std
xchg
testb
sub
adc
mov
repz
sbb
mov
pop
mov
inc
adc
test
out
cmc
pop
xchg
std
mov
cmpsl
mov
mov
sub
and
daa
xchg
lcall
adc
movsb
add
jae
insb
fbld
dec
andl
lods
push
stos
imul
mov
insl
mov
cltd
into
mov
dec
fisubs
push
pop
cmp
iret
or
and
cmp
in
mov
or
dec
mov
push
pop
xor
pusha
popf
inc
xchg
sbb
aam
pop
lcall
incb
xor
jno
and
pop
add
int
xor
push
int3
xor
or
int3
jp
addr16
push
adc
aad
cmp
inc
sbbb
push
cmp
insl
cmp
and
adc
jae
lcall
adc
loopne
cmpsb
adc
stos
push
and
lock
mov
mov
push
in
dec
and
or
cs
mov
mov
stos
clc
adc
ret
sub
sub
arpl
fistl
lods
cmpsl
sahf
sub
scas
mov
fs
pop
imul
inc
push
movsb
add
mov
movsl
mov
and
mov
and
test
arpl
test
out
pushf
pop
andb
jle
mov
mov
roll
inc
pusha
cmc
and
mov
dec
es
push
dec
adc
mov
push
ret
cwtl
sub
xchg
into
mov
adc
imul
jne
dec
cld
out
pushf
sub
xor
mov
imul
decl
xchg
jnp
idivl
jnp
mov
popf
mov
push
movsl
andb
insl
xlat
enter
data16
iret
sbb
testl
shrb
xor
pop
xor
es
inc
in
inc
xor
popf
xchg
cwtl
movsl
pop
adc
fcomip
loopne
pop
jmp
sub
lret
xor
test
mov
inc
xchg
and
and
rol
cmp
push
rclb
or
sbb
cmpsb
jae
mov
push
icebp
pop
adc
push
pop
in
subl
sub
imul
pop
jnp
mov
pop
stos
enter
in
push
rorl
in
sub
mov
xor
fstps
in
sub
cmp
std
add
outsl
ja
add
mov
and
pop
imul
das
jo
ficoms
xchg
scas
sbb
mov
sahf
mov
scas
sbb
outsl
popf
mov
dec
mov
shl
stos
mov
mov
in
cld
pop
mov
jns
sub
lahf
sub
push
bound
clc
mov
push
jbe
xchg
and
xchg
enter
sahf
cmp
lret
sbb
bound
pop
or
test
or
mov
or
or
mov
fbld
inc
jg
inc
scas
insl
adc
and
pop
fistpl
fld
pop
jmp
jg
adc
push
jmp
xchg
sub
fsubrs
xor
out
add
sub
call
les
cwtl
outsb
sub
dec
mov
jge
rcrb
out
inc
jmp
or
cmp
pop
lret
fnstenv
push
das
push
push
and
sbb
xchg
enter
cli
mov
das
cmp
pop
lods
sahf
jb
cmpsl
sbb
leave
sbb
leave
and
xchg
flds
pop
sub
jg
leave
push
add
shlb
dec
sbb
ret
add
sub
shlb
or
je
push
pop
inc
mov
add
inc
stc
int3
xchg
add
pop
dec
aaa
jae
dec
cmp
out
push
pop
inc
repz
int
loope
scas
icebp
mov
jmp
test
gs
mov
pushf
push
out
cmp
push
test
add
test
dec
fsubrs
or
insb
cmpsb
shrl
les
enter
aad
pop
int
add
xchg
dec
dec
lock
cmp
mov
in
xchg
outsb
insl
leave
jmp
std
xchg
push
sbbl
inc
lods
leave
cmpsb
cmc
fnstenv
xchg
cmc
cld
stos
psllw
mov
repnz
add
popf
loope
jmp
adc
jo
test
imul
cmp
ljmp
inc
jae
push
imull
mov
pop
dec
mov
std
mov
call
push
rolb
testl
push
mov
cmp
leave
scas
out
vpmacsswd
frstor
mov
ljmp
popf
push
jnp,pt
js
iret
sti
sbb
pushl
mov
cmpsb
dec
jnp
sahf
mov
xchg
movsl
mov
cltd
test
cltd
push
xor
dec
shll
nop
xchg
adc
xor
mov
pop
pop
inc
and
cmp
and
push
data16
cmp
push
outsl
inc
pop
mov
das
push
pop
aam
imul
mov
cmc
lret
inc
add
addb
fcomps
xor
jb
test
inc
ret
mov
sub
insb
movsb
adc
xor
rol
int3
cwtl
repnz
in
addl
push
int
test
lods
push
and
and
out
mov
add
insb
xor
jge
add
pusha
dec
mov
nop
das
xchg
rcr
cmpsb
loopne
pop
imul
fdivrp
xor
mov
daa
aad
push
int3
push
or
dec
jb
in
xorl
push
shl
lds
shlb
push
scas
push
in
inc
add
lret
movsl
scas
xor
test
mov
xlat
sbb
fimull
mov
in
in
lcall
inc
movsl
inc
xchg
cmp
push
jmp
cmpsb
adc
rorl
das
cwtl
aam
push
test
loope
push
push
inc
dec
hlt
mov
fisttpll
leave
inc
sub
in
push
shll
xchg
pop
jnp
and
or
jns
jl
cli
cmp
loop
das
pop
in
cs
jnp
add
inc
jne
sahf
sbb
mov
inc
xor
and
testl
pop
jbe
pop
les
fs
fs
testl
push
loop
and
add
xchg
orb
cli
aas
test
outsb
mov
mov
call
dec
or
sub
mov
add
in
jb
mov
mov
ss
icebp
sti
xor
mov
sti
sbb
xor
repz
xorl
subl
or
cmp
pop
rcl
fnstenv
movntq
fisttpll
cmpl
cmp
loopne
add
sub
pusha
sti
sub
mov
enter
out
jbe
jecxz
outsl
sahf
adc
xorb
jns
dec
out
insl
test
es
jg
jmp
mov
fldt
into
jmp
cmc
xchg
andl
call
mov
cltd
xor
sub
mov
lock
dec
xchg
pop
mov
out
lea
adc
inc
push
sbb
push
sbb
call
jp
roll
scas
pop
or
movsl
aaa
sbb
cmp
popa
loopne
lahf
sbbl
lds
test
shlb
push
mov
pop
repnz
jbe
sub
jno
jge
mov
pop
inc
sarl
imul
xchg
and
roll
fstl
jp
orl
push
int
andl
mov
ret
dec
call
sbb
xchg
dec
cmpsl
js
vsubss
lds
fdivrs
or
ds
cli
xor
pop
push
sarb
fcomp
sbb
out
mov
jnp
fstpt
dec
enter
push
fsubs
jle
das
loopne
flds
mov
inc
enter
jo
dec
mov
outsb
push
jae
divb
out
jecxz
lahf
adcb
cmpsl
mov
out
lahf
mov
into
mov
cmpl
adc
mov
sbb
ret
ror
push
rorl
and
aas
cmp
cmp
mov
dec
ds
dec
daa
push
mov
mov
mov
mov
inc
cmp
push
dec
sub
fcompl
push
jne
pop
in
cmp
mov
les
xor
aas
xchg
scas
in
xlat
repnz
add
mov
sub
cli
sub
lahf
sub
mov
xchg
lods
add
xchg
mov
movb
push
ret
in
repnz
test
or
mov
cmp
idivb
jno
js
lds
gs
in
jecxz
gs
push
jecxz
in
jnp
xchg
gs
cmp
pushf
subl
xchg
xlat
mov
xor
cld
and
loope
jmp
sub
mov
rcrl
mov
call
pushf
dec
std
in
push
adc
leave
lock
cmp
cmp
test
pop
xchg
jb
jo
push
cmpsb
sub
cwtl
add
mov
scas
sub
arpl
jbe
out
ffree
push
lds
pop
or
push
sbbl
mov
adc
lcall
jge,pt
sbb
jb
adc
roll
and
subb
fprem1
fildl
pop
mov
pop
movsl
cmc
jnp
jnp
pushf
ret
cmpsl
faddp
push
push
and
pop
cmp
mul
add
sub
test
icebp
sti
jl
rorb
push
dec
arpl
sub
cli
fwait
out
xchg
mov
sbb
cmp
into
das
nop
add
cmp
push
jle
movl
sbb
and
sbb
bound
mov
gs
insb
jecxz
inc
sub
xor
push
jge
sub
dec
out
sbb
lcall
jg
jno
call
or
outsb
dec
fsubrl
sti
dec
inc
mov
pop
pushf
adc
mov
push
push
add
in
add
into
enter
dec
divb
jb
sub
in
nop
and
repz
mov
push
fs
mov
adc
in
mov
enter
mov
cmp
mov
icebp
subb
cmpsb
xlat
in
xlat
xor
int3
fwait
rcrl
je
gs
inc
test
mov
pushf
pushf
xchg
mov
popa
cmpsb
into
xor
std
push
inc
mov
xor
pop
stos
cmc
popa
xor
in
or
sbbb
pop
xor
add
mov
push
movsb
adc
lret
and
test
sbb
scas
test
insl
sbb
iret
add
inc
push
cmc
adc
mov
mov
sub
dec
and
movsl
jne
ret
mov
jb
pop
mov
cltd
xor
pop
inc
int
fadds
pop
repnz
es
jmp
dec
or
fistpll
add
jno
into
xor
out
gs
pop
xor
push
cmp
fstpl
popf
xchg
mov
cmpsl
jg
sbb
sti
cs
bound
mov
cli
cmc
push
inc
and
push
fs
arpl
sti
lahf
fwait
inc
out
adcb
adc
dec
ja
lods
add
sbb
out
sahf
fnstsw
xor
lahf
and
inc
fstpt
push
vpsrlq
aaa
jbe
movsl
stc
ljmp
into
mov
pop
jae
shr
mov
or
push
cmpsb
adc
cmpsl
repz
in
adc
ret
jp
mov
mov
and
add
xchg
xchg
andb
js
insb
movsl
loopne
sahf
jae
imul
js
push
push
aad
fwait
mov
leave
lods
ja
fldcw
loopne
imul
sbb
fisubrl
mov
int3
sti
mov
ds
insb
cmp
jo
xchg
dec
sbb
addr16
xabort
popf
inc
andl
mov
rorb
cmp
inc
jae
push
push
sub
sub
aam
cmp
in
lcall
fs
shll
inc
je
push
fsts
test
fstl
and
clc
rcrb
push
cmp
sub
out
pushf
gs
je
cs
pop
repnz
mov
testl
or
testl
not
inc
insb
dec
pop
cmpsb
in
xor
jo
lret
push
dec
popf
mov
push
xlat
lods
push
shl
mov
lods
bnd
mov
dec
push
jns
fcoms
inc
or
cmpsl
subl
movsl
jae
aas
push
cmp
jle
jno
loopne
sub
xchg
inc
inc
ss
inc
fcoms
mov
dec
or
or
bound
and
cld
mov
outsb
mov
popa
cmpsb
dec
imul
outsb
lcall
stos
mov
pop
add
pop
jne
pop
mov
xlat
ljmp
inc
dec
popf
push
fsubs
movsl
lods
push
mov
add
rcl
aas
repnz
fwait
inc
lds
arpl
add
and
sbb
int
adc
int
call
xor
cmc
xchg
test
xlat
xchg
out
call
and
js
adc
sahf
sahf
cmc
push
or
fdivr
cmp
xchg
mov
xor
inc
cld
adc
xchg
movsb
inc
mov
cmp
aas
sbb
lahf
insl
iret
push
fcoml
pushf
pop
ja
in
jb
dec
aad
inc
in
xchg
push
bound
fimuls
mov
sbb
xchg
and
or
addr16
or
mov
fs
mov
xor
outsb
inc
pop
std
dec
mov
addb
inc
shrl
outsl
addr16
jmp
mov
lock
clc
jnp
push
mov
mov
bound
sbb
fcoml
xor
pop
addl
cwtl
cltd
inc
jmp
jb
in
int3
pop
pop
ja
jnp
cmp
pop
fistl
add
mov
mov
dec
push
jl
jge
mulb
dec
mov
and
je
sub
push
push
sub
stos
scas
cmpsb
jb
push
xor
data16
xchg
adc
dec
pop
bound
iret
call
push
es
mov
xor
jmp
jae
out
lds
cmp
or
xor
xor
push
aad
add
out
or
push
mov
insl
clc
test
sub
inc
addl
mov
xchg
frstor
sbb
add
and
movsl
cmp
mov
mov
mov
popa
out
repnz
mov
mov
dec
fwait
sbb
adc
out
movsb
fcoml
inc
lds
out
jl
hlt
adc
dec
mov
cmp
xor
dec
jmp
jae
and
out
adcl
aam
lods
mov
mov
ret
mov
int3
pop
sub
arpl
int3
dec
stc
mov
sbbb
lret
sahf
adc
push
pushf
xor
add
dec
mov
xor
mov
and
mov
into
xchg
cld
add
pop
shll
inc
enter
ja
cli
cltd
push
in
push
cs
bound
aam
insb
xchg
popf
jo
ret
inc
out
lods
lret
inc
lock
inc
or
fwait
sbb
ret
popf
popf
test
or
mov
scas
inc
mov
out
fists
imul
cwtl
mov
push
jnp
icebp
and
std
cmp
mov
add
dec
lret
sbb
cmpsl
pop
lcall
pusha
pop
mov
push
nop
jo
sub
inc
stc
mov
ss
xchg
addl
push
xorl
sub
fists
test
sub
and
ljmp
out
pop
inc
insl
aaa
jns
lds
jp
rcrl
in
test
pop
sbb
das
outsl
ret
addb
dec
jmp
push
pop
sahf
test
mov
jbe
xchg
inc
or
xlat
aam
push
test
mov
lds
lds
enter
xchg
enter
jecxz
and
arpl
cmpsb
xor
cltd
sbb
xchg
fisubrl
dec
fsubrs
test
sub
cld
dec
push
loopne
push
xor
push
test
es
bound
jne
jno
jmp
ss
popa
pusha
fldl
mov
imul
sub
xchg
in
jl
loopne
dec
sbb
adc
sbb
add
mov
mov
mov
adc
dec
and
dec
sbb
mov
mov
sar
notb
jnp
sbb
sbb
dec
xchg
add
pusha
mov
stos
ficompl
sbb
fucomp
jnp
outsl
aad
fwait
dec
push
test
test
push
adc
in
mov
push
rcl
hlt
mov
mov
rorb
nop
mov
shll
sbb
xor
movsb
mov
xchg
popf
dec
adc
aam
movl
sub
push
jl
iret
shl
aaa
sub
xchg
mov
lea
je
jecxz
call
cltd
pop
stc
push
mov
mov
notl
adc
aam
js
notb
and
aad
mov
pop
imul
lahf
insl
xchg
fadd
sub
leave
pop
mov
mov
xchg
xor
jmp
movsl
xchg
cmp
sub
lods
sub
ficoms
add
jo
cmp
pop
dec
jecxz
mov
scas
ret
adc
cmp
mov
xor
push
lret
and
adc
fmuls
mov
test
push
mov
lret
jbe
scas
push
fnstsw
dec
lahf
and
sbb
jecxz
and
repz
jbe
outsl
std
inc
bound
jno
fldcw
js
pushf
mov
inc
add
mov
push
cli
repnz
inc
push
insb
bound
in
in
pop
cwtl
xchg
mov
sbb
hlt
sbb
inc
dec
ror
loop
es
xor
jns
out
jg
and
aam
sub
adc
sbb
mov
inc
adc
mov
scas
push
popa
aad
or
xor
dec
xchg
jmp
inc
jmp
arpl
mov
loope
cmpsb
leave
jo
jp
jmp
xchg
sbb
xchg
xchg
jns
arpl
shll
sub
sbb
sbb
mov
or
jl
mov
popf
pop
or
sub
mov
notb
shr
xchg
sbb
mov
addb
push
lret
mov
movsb
dec
adc
and
daa
inc
push
lret
loopne
into
jle
jmp
mov
mov
mul
js
orb
bound
push
std
sbb
pop
aas
fwait
cwtl
jg
lret
icebp
hlt
mov
cs
jge
test
jo
insl
fdivr
jns
hlt
shlb
movsb
std
test
mov
fisttpll
fadds
adc
pushf
and
xchg
or
int3
fs
ret
rcrl
scas
pop
jmp
cmp
xor
repz
scas
sub
sbb
mov
sub
in
push
outsb
rorb
inc
pop
sbb
rcl
aad
xchg
push
cmpsl
sti
cmpb
or
mov
leave
ucomiss
jmp
mov
lock
inc
mov
jl
pop
fimuls
pop
mov
dec
xor
rcll
hlt
loop
adc
push
lea
ret
mov
ja
fsubr
ror
or
enter
jns
jae
pop
ret
jmp
or
xor
jge
or
pop
dec
jbe,pn
fcoml
cmpb
sbb
sbb
cmc
xchg
in
lods
imul
out
and
jnp
mov
out
pop
xlat
inc
mov
inc
hlt
pop
xchg
in
in
xchg
dec
pushf
xor
loopne
into
ds
or
pop
cltd
cmp
mov
mov
dec
in
leave
push
inc
das
ja
scas
cmp
inc
icebp
nop
mov
andb
cs
pop
mov
sbb
call
push
fwait
cld
jae
outsl
push
push
or
shlb
inc
jnp
cmp
pop
into
xor
dec
and
and
incl
insb
xor
out
xor
scas
gs
movsl
adc
sbb
dec
inc
adc
mov
mov
mov
lock
cmpsb
inc
repnz
jnp
add
rcll
test
mov
adc
fcoml
sub
jmp
mov
push
cmpsb
add
xor
jne
fisttpll
xor
hlt
pop
mov
adc
pop
sbb
adc
sub
es
in
enter
or
mov
sub
inc
pusha
leave
pop
in
pop
imul
mov
mov
popf
xor
mov
jle
xor
in
mov
or
dec
sub
sbb
pop
jnp
ret
cltd
test
movl
rcl
pop
jo
addl
fdivrl
aad
mov
add
xchg
lcall
int3
sub
and
sarb
add
xor
cmp
jbe
cmp
call
out
fcomps
jne
inc
popf
inc
stc
sbb
pop
outsl
mov
mov
js
ss
stos
xchg
adc
loope
dec
adc
inc
ds
into
inc
outsl
xchg
xlat
test
mov
jae
mov
sahf
inc
jb
test
mov
cmp
or
jae
clc
scas
cli
xor
hlt
cmp
hlt
push
jnp
jb
roll
adcl
adc
das
mov
sub
icebp
dec
mov
bound
adc
push
iret
int
jl
mov
dec
repz
adc
xchg
add
inc
jp
jb
subb
fidivrl
mov
lcall
shll
fbstp
mov
popa
cmp
js
inc
je
xor
mov
je
mov
mov
aaa
and
dec
jno
adc
rcr
add
bound
jo
fs
xchg
lahf
jl
dec
jmp
iret
cltd
imul
push
dec
outsl
cmp
sbb
mov
pop
xor
mov
popa
in
outsb
sarb
jbe
rorb
xor
jo
push
out
and
adc
add
pop
or
aad
test
int3
stc
fwait
xor
jo
mov
pop
int3
push
rcr
or
repnz
mov
add
dec
sbb
enter
cs
iret
and
pop
xor
jmp
mov
and
pop
adc
dec
mov
mov
cmp
lods
sub
push
mov
sbb
pop
jl
sub
ss
mov
cmc
and
xchg
jecxz
lea
je
dec
cmp
mov
jl
pop
cltd
test
dec
and
lret
pop
pop
insb
inc
cmp
jae
imul
add
push
jmp
int
aad
clc
lds
lods
push
sbb
test
mov
arpl
es
pop
and
push
inc
dec
cmp
mov
push
mov
lods
dec
xor
out
xor
popa
xchg
sub
xchg
lds
mov
aas
outsl
jle
cld
inc
mov
mov
mov
push
flds
push
cmp
mov
cmp
cmpsb
or
addb
lahf
out
pop
insl
mov
cltd
cmp
leave
bound
mov
xchg
jle
movsb
test
mov
js
cld
out
jmp
sti
mov
push
cmp
xchg
adc
cmpsb
jl
lods
jge
fistpl
xor
jne
les
push
cld
sub
pop
shrl
test
mov
pop
repnz
mov
sub
inc
aaa
lcall
fcmovu
lea
mov
dec
into
aad
enter
addb
icebp
push
push
cmp
jne
mov
or
adc
ficompl
subb
test
mov
imul
mov
push
sub
xor
lods
lea
inc
jp
lock
aam
sub
mov
cmp
sub
sbb
aad
pop
imul
in
divl
divb
push
outsb
dec
sbb
repnz
leave
insl
xchg
mov
lret
mov
lret
out
and
sbb
xchg
shrl
add
or
sub
mov
ret
push
test
xchg
or
aas
push
int3
adc
mov
in
std
es
or
xlat
and
inc
add
imul
pop
and
mov
and
pop
pop
pop
sub
jg
cltd
xorb
push
dec
push
mov
js
aam
adc
push
add
out
bound
scas
std
lods
mov
push
pop
ss
pop
pop
or
jp
loop
push
in
enter
add
push
lods
in
insb
jl
mov
fsubs
push
pop
pop
pushf
or
jns
out
movsb
insb
fwait
fwait
int
cld
test
leave
mov
sbbb
cli
add
push
or
mov
dec
xchg
or
in
pop
adc
pop
push
popa
jg
xchg
orl
popa
in
cmp
mov
xchg
jne
fstpt
xlat
push
dec
adc
mov
mov
mov
sqrtps
jge
popa
or
inc
mov
mov
mov
out
push
lret
je
jmp
mov
sub
testb
adc
in
add
cmpsl
lret
cs
aas
mov
add
loope
bound
dec
xor
adc
mov
dec
mov
stc
cmc
aad
roll
mov
cmpsl
pop
test
push
mov
fnstsw
fs
sub
fcomi
push
cmp
xchg
insl
shlb
dec
ficompl
mov
dec
ja
idiv
bound
mov
dec
sbb
adc
lock
mov
mov
stc
bound
xchg
pop
mov
shlb
or
les
add
sahf
adc
cmpsb
sub
repnz
repz
push
dec
inc
mov
ljmp
jno
mov
fldl
push
dec
mov
mov
dec
add
sub
and
icebp
sti
cmpsb
shl
or
and
je
dec
aad
push
rcl
adc
push
xchg
lods
insb
lret
popf
fadds
imul
jae,pn
stos
xchg
js
adc
adc
jno
adc
fsubrs
test
adc
ss
pop
aas
pop
in
push
adc
xchg
outsl
xorl
adc
fdivrp
std
int3
dec
pop
mov
fnstcw
dec
or
movsl
or
inc
dec
ja
push
clc
imul
aas
imul
xchg
jle
mov
inc
sbb
fcmovu
bound
adc
push
mov
lret
sub
cwtl
and
xlat
sbb
das
ja
cltd
mov
fistpll
xchg
int3
pop
jbe
inc
ffree
mov
out
inc
push
or
cwtl
movsb
push
mov
xchg
xlat
dec
jecxz
jb
popf
addr16
add
cmc
mov
out
ret
push
stos
loope
nop
pop
pop
cmp
pop
sbb
insb
sbb
das
popf
jae
outsl
push
andb
popa
add
inc
dec
lahf
mov
push
int3
lret
popf
out
mov
sub
jle
xlat
pop
add
jecxz
andb
ret
jb
add
mov
xor
hlt
fcom
pop
fcoml
sub
cmpsb
lods
xchg
sbb
and
lea
lods
ficomps
or
fwait
dec
mov
pop
xchg
test
iret
xor
scas
jge
cmp
pop
mov
cmpsb
clc
lock
fwait
test
jecxz
push
rcrl
js
sbb
clc
shl
fsubl
mov
adc
adc
xlat
jno
push
test
sub
sub
sub
stos
scas
lea
ret
subl
in
sub
je
adc
mov
cwtl
xor
ja
jns
cli
ficoml
sub
rcr
sbb
cli
add
aad
rcl
pop
xlat
pop
lock
xor
fistpll
scas
add
pop
mov
adc
inc
and
sub
and
cwtl
cmp
call
insl
sub
push
insb
push
pop
mov
out
les
xor
mov
xorb
shlb
cli
bound
pop
inc
adc
pop
xor
lods
xor
jg
inc
mov
les
or
push
pop
cmp
or
sub
inc
arpl
mov
lds
jmp
out
sti
inc
dec
ror
adc
out
insl
xor
es
push
neg
push
mov
pop
push
push
add
jl
mov
inc
push
push
ret
jmp
repnz
inc
imul
mov
push
fiadds
mov
in
cli
in
test
inc
fstps
out
dec
jns
call
bound
stos
in
or
int3
out
mov
and
push
test
mov
rolb
and
inc
cmp
loopne
jns
loope
cmc
divl
bound
ffreep
shll
dec
mov
add
loope
lcall
adc
xchg
cmp
xor
ror
and
cmp
addb
mov
imul
cwtl
xchg
xchg
push
int
and
shl
pop
push
pop
test
push
dec
in
jbe
push
mov
je
push
insb
aam
insl
xchg
lahf
cmp
gs
pusha
sub
mov
imul
enter
fsubrs
ljmp
xchg
out
test
jge
ss
sahf
ret
mov
mov
pop
mov
scas
xchg
push
movsb
sbb
xchg
push
andl
outsl
jp
dec
mov
jecxz
loop
jae
jno
imul
in
arpl
sub
cmc
mov
enter
jbe
push
in
xchg
das
mov
mov
pop
or
mov
cmp
mov
cmp
inc
cwtl
es
bound
lret
sbb
loop
inc
dec
mov
add
addr16
or
sbb
push
pop
fcoms
fadd
inc
push
loope
lcall
push
enter
xor
out
mov
pushaw
ja
int3
imul
aam
mov
ja
stc
mov
jno
shlb
pop
cmp
push
push
dec
inc
mov
xor
push
pop
mov
xchg
fstps
xchg
ficomps
mov
shrb
sub
xchg
and
bound
mov
nop
scas
add
cmp
sub
dec
jo
pop
jl
mov
imull
lock
and
lcall
je
cmp
add
and
xorb
mov
jnp
jg
or
cli
ret
jmp
dec
shlb
push
pusha
inc
add
mov
sub
mov
sbbl
jmp
ror
dec
out
xchg
jne
mov
dec
outsl
sub
dec
test
xchg
or
loopne
rorb
add
cmpsl
loop
dec
and
adc
shrb
nop
push
test
lods
add
fiadds
jne
jmp
jne
dec
lock
pop
inc
mov
hlt
dec
out
cwtl
dec
divl
mov
jbe
pop
in
lods
xor
push
cmp
dec
fistps
pop
mov
movsl
lods
adcb
dec
repnz
xchg
and
lds
xor
adc
fcomi
pop
outsb
arpl
inc
lds
in
loop
in
js
cmpsb
sub
rcll
xchg
push
test
dec
sub
inc
mov
add
loopne
or
inc
mov
jle
mov
push
outsl
das
test
sbb
in
imul
cs
test
xor
adc
lods
out
xchg
cmc
imul
and
inc
jb
xchg
inc
push
mov
jl
push
sar
mov
mov
jl
mov
cmpsb
insl
and
test
sahf
sub
pushf
push
dec
sub
insb
xchg
inc
adc
addr16
jb
fisubrl
test
call
dec
xchg
add
iret
pop
xor
scas
gs
push
rcr
lds
in
sub
jmp
addr16
hlt
or
sub
push
inc
rcrb
xchg
test
or
pop
adc
xlat
xchg
sarb
stos
push
fldt
sbb
test
int
in
out
push
sub
jmp
mov
insb
xchg
pushf
mov
inc
lret
mov
fisttpl
rcl
std
jp
xchg
jmp
shrl
lret
rorl
or
data16
in
push
test
popa
xor
xchg
fwait
pop
pop
lahf
mov
sbb
ret
loopne
popa
and
or
jns
adc
sub
loope
cltd
add
jb
mov
pop
pop
mov
push
mov
adc
jge
lcall
inc
jle
jl
cmpsb
cmp
jb
push
mov
push
pop
pop
iret
arpl
incb
sub
inc
add
xor
rcrl
ror
cld
jns
push
or
ror
lock
dec
aaa
jg
aas
mov
cmp
nop
sub
or
data16
pop
arpl
or
mov
mov
inc
inc
lret
adc
or
outsb
xchg
inc
jecxz
sub
adc
mov
jno
adc
lret
fs
push
movsb
xchg
dec
mull
jle
push
jno
sbb
icebp
add
mov
push
arpl
orb
fwait
pop
mov
xchg
cmc
push
cli
xchg
and
clc
pop
pop
jnp
js
cmp
or
mov
call
xchg
xor
scas
sti
sub
in
sub
add
push
xlat
repz
dec
imul
loope
jb
js
cmp
lret
out
xlat
mov
pop
adc
xor
and
repnz
icebp
inc
inc
inc
fiaddl
inc
das
add
jbe
lcall
push
add
adc
ja
xor
lods
ret
jmp
adc
outsb
shrb
pop
pop
jns
xor
mov
jae
rcrl
orl
out
fdivrl
int3
clc
pusha
pushf
jnp
stos
add
lret
adc
cs
shrl
sbb
js
push
sbb
mov
stc
adc
or
call
and
jne
dec
xor
mov
or
daa
testb
mov
cmc
push
mov
xchg
stos
test
xchg
push
ja
ds
push
fcmovnu
xor
int
mov
sub
loopne
lea
jl
add
imul
cmp
out
enter
insl
movl
dec
fdivs
xor
pusha
mov
inc
sahf
pop
sbb
jbe
add
lret
pop
mov
popa
out
add
inc
clc
dec
out
mov
jl
push
or
fnstcw
jnp
imul
mov
pop
add
mov
insb
xor
mov
and
add
inc
mov
jo
xchg
mov
add
mov
sub
sub
lret
mov
mov
data16
out
fimull
pop
out
jle
lock
iret
cld
adc
fdiv
xlat
or
cmp
out
inc
inc
jne
adc
arpl
std
jbe
gs
sub
into
pop
out
mul
adc
in
rcrl
arpl
sub
mov
cmp
add
jecxz
or
fucomi
adc
idivl
or
add
adc
bound
add
push
push
test
mov
dec
rol
xor
jge
or
add
add
insb
call
enter
js
xor
jmp
lahf
pop
imul
jns
and
or
bound
popf
and
in
loopne
lods
mov
movd
ljmp
stos
sti
out
in
and
lahf
insl
nop
out
mov
aam
fdivl
xchg
or
xor
cmp
dec
addl
push
pop
inc
stos
adc
test
jbe
fisttpl
fwait
arpl
fs
mov
das
loopne
jns
push
dec
mov
lea
xor
or
jge
cmp
and
test
scas
lret
ret
stos
mov
pop
aam
dec
and
and
push
push
out
jg
cmp
ret
int3
fdivl
cs
imul
test
jnp
ja
movsb
loope
sub
popl
sbb
push
sbb
inc
and
sar
xorl
xor
adc
imul
cmp
data16
mov
lcall
js
or
daa
push
popa
aaa
mov
ficomps
pop
in
loopne
mov
sub
sub
pop
xor
stc
or
js
mov
imul
or
sbb
dec
xchg
jnp
outsl
pushw
jl
add
push
xor
cmp
adc
stc
bound
movsl
add
xchg
inc
mov
std
les
sub
xchg
movsb
lret
xor
lret
insb
xchg
iret
test
lea
jb
jns
inc
jmp
pushf
scas
or
push
pop
test
movsb
cli
loop
push
pusha
aaa
sarb
pop
loop
or
leave
movsb
ret
jo
scas
idivl
adc
stc
xchg
cld
mov
repz
lods
mov
sbb
in
stc
fucomi
xlat
sub
and
mov
or
scas
mov
adc
cs
sub
sbb
sbb
sbb
mov
ljmp
cmp
sub
push
cmp
fsubp
mov
in
shrl
scas
xchg
ss
pop
in
test
push
pop
pop
fisubs
test
xchg
hlt
sub
add
hlt
mov
sub
pushf
pop
ljmp
mov
xlat
scas
rorb
xchg
jmp
jle
jp
xor
sbb
nop
mov
push
push
adcl
inc
sub
or
mov
or
lret
push
mov
fsubs
fsubp
sub
arpl
jmp
xor
xchg
xor
xchg
sbb
mov
cli
lcall
daa
fists
iret
adc
mov
mov
and
ficomps
movsb
out
insb
dec
xor
enter
shrb
mov
pusha
jmp
mov
fnstenv
mov
repz
clc
std
cli
pop
std
aam
js
inc
sub
dec
rcll
mov
outsb
or
es
cmc
cmp
push
sbb
mov
mov
mov
push
lret
out
dec
faddl
jge
add
adc
or
ljmp
mov
ljmp
nop
scas
push
pop
sub
inc
shrb
bound
incb
and
mov
sbb
std
ret
bound
cltd
mov
xorl
insb
add
fmul
sbb
push
xchg
mov
adc
xchg
rolb
mov
xor
jbe
rorl
fsubrp
leave
inc
loop
iret
aad
xchg
pusha
mov
rol
addb
pop
push
les
push
and
xlat
out
dec
pushf
jge
fprem1
add
fdivrs
and
cmp
sbb
mov
stos
pusha
xor
cltd
xorl
inc
loopne
adc
out
mov
adc
adc
pusha
nop
sub
xor
inc
lcall
pop
std
xor
xor
mov
adc
insl
jnp
push
mov
icebp
ficoms
jns
dec
imul
lret
out
inc
push
es
lret
fsts
stc
insl
lcall
xchg
sbb
fcoms
iret
cltd
pop
cmp
lret
sub
lods
and
xor
mov
or
mov
pop
jno
incl
int3
iret
in
mov
aad
ljmp
mov
push
mov
sahf
jp
sbbl
shl
fbstp
sbb
cs
ficoms
and
cltd
push
sbb
and
lods
push
mov
xchg
xchg
je
aas
adc
push
pop
jl
insl
pop
sti
jno
pop
mov
aas
in
lock
movsl
icebp
cmpsl
out
shrl
les
cmp
imulb
ret
cs
outsl
js
and
leave
scas
and
mov
in
idivl
test
lds
rolb
sarl
and
mov
or
xor
sbb
xchg
add
cmp
imul
mov
xor
mov
xlat
loopne
cli
orb
dec
mov
inc
hlt
pusha
pop
jg
jns
jge
mov
pop
std
jnp
push
jg
test
jle
fcoms
dec
xchg
aad
lahf
dec
sbb
nop
cmp
push
dec
dec
shl
aam
pop
mov
dec
adc
and
lods
mov
fcmove
shlb
inc
jp
or
dec
test
leave
and
imul
jmp
fstpl
pop
cmpsl
sahf
negb
adc
xchg
inc
mov
jmp
pop
cli
sub
add
pusha
addl
sub
mov
shr
lret
mov
adc
insl
cmp
fnsetpm(287
movsb
push
nop
mov
in
xor
rol
aaa
pop
or
xor
jbe
mov
mov
or
cmp
sub
cmp
ret
daa
xchg
icebp
std
dec
mov
insb
xchg
jecxz
inc
and
fdivrs
inc
xchg
push
inc
and
cmc
mov
cmp
ds
jne
add
push
fdiv
nop
add
or
orl
aas
jg
lret
mov
dec
in
mov
int
ljmp
repnz
imul
imul
xchg
mov
fisttps
mov
dec
xor
int
sbb
lret
in
les
rcll
jne
lods
push
jo
add
or
jl
dec
into
adc
mov
xor
cs
fwait
mov
daa
lds
clc
and
orb
push
lret
mov
loopne
loop
cltd
push
dec
faddl
mov
je
mov
es
je
pusha
es
and
movsb
or
and
mulb
jnp
pop
scas
stos
xchg
enter
pusha
subb
jno
mov
mov
mov
inc
xlat
lods
imul
imul
addl
nop
iret
jnp
sub
arpl
out
das
xorb
cld
pop
ss
out
jge
iret
and
fwait
rol
push
dec
mov
fisttpll
xchg
out
mov
sbb
dec
push
rcr
pop
shrl
pop
es
gs
rorb
or
sti
lds
addr16
pop
push
dec
aaa
out
shl
mov
pop
popa
rol
fidivl
clc
scas
pop
pop
call
or
mov
in
in
es
stc
jp
in
or
shlb
adc
mov
push
dec
insb
fistpl
cli
into
jle
and
xchg
movsb
jp
loopne
scas
daa
stc
adc
cmpsb
mov
gs
enter
outsl
sbb
xchg
cmc
jmp
into
stos
sbb
adc
jo
scas
sub
or
xor
push
in
xor
xchg
cmp
hlt
lods
in
add
daa
insl
mov
xchg
lods
cmpb
cmp
adc
lahf
lret
push
cmpsl
and
out
ds
cmp
mov
imul
cmp
jnp
inc
outsl
outsb
jb
fsubr
fmuls
jl
push
mov
leave
cli
mov
sbb
mov
es
cmpsl
or
or
pop
add
ja
ja
push
push
loopne
xchg
shll
flds
fdivr
sbb
ljmp
mov
test
mov
mov
jae
add
emms
jno
pop
xchg
add
mov
mov
in
outsb
and
and
dec
fsubrs
in
mov
out
arpl
adc
cs
sbb
out
pusha
mov
xor
pop
sbb
dec
fwait
push
bound
mov
sbb
mov
lret
dec
dec
pop
pop
xchg
sub
and
mov
sbbb
imul
jnp
xchg
adc
jg
mov
js
xor
mov
ror
insb
xor
jge
sahf
inc
mov
or
push
subl
xorl
mov
fdivrs
pop
mov
jp
and
clc
rol
fildll
sbb
insl
stc
pusha
sti
sahf
add
inc
xchg
xor
clc
dec
cwtl
and
cmp
es
ret
popa
inc
enter
pop
enter
call
pop
jle
jl
fmul
es
inc
pop
sbb
subb
jb
lods
pop
xchg
mov
mov
dec
arpl
les
and
and
fs
iret
es
ret
rolb
pusha
sbb
int
and
push
rcr
loop
icebp
push
dec
cltd
shlw
mov
push
mov
dec
xchg
inc
imul
mov
pop
push
xor
in
mov
iret
ret
push
lea
sbb
roll
xor
jne
shrl
ds
push
aad
arpl
fbld
test
pop
mov
ficoms
leave
sbb
mov
fs
push
xchg
mov
pop
pop
lock
in
or
clc
shlb
cld
mov
outsl
repz
iret
stos
and
adc
out
insb
dec
aaa
movb
or
lock
iret
leave
dec
jle
add
enter
pop
lods
sbb
mov
mov
jae
mov
imul
pop
fisttpll
and
imul
loop
push
xchg
mov
iret
xor
cmpsl
mov
pop
mov
push
fcompl
cmp
sbb
cmpsl
dec
pop
push
jp
sbb
or
mov
mov
pop
shll
aam
fcoms
sub
je
jle
adc
push
dec
xchg
pop
cmpsb
into
or
rcll
vmovq
lcall
imul
and
mov
jge
lods
add
es
fidivrl
sbb
mov
cmp
pop
dec
push
lret
ret
inc
push
push
mov
xor
out
loop
xchg
or
and
push
push
lahf
lds
clc
sub
bound
push
push
jecxz
nop
popf
enter
cwtl
push
mov
or
popa
push
pop
mov
jg
mov
mov
jle
test
adc
out
xlat
dec
lret
adc
xlat
aad
sub
in
rol
xchg
xchg
int3
jo
int3
loopne
cmc
jecxz
test
out
scas
je
out
das
in
sar
lcall
sub
in
mov
push
stos
jns
pop
orl
scas
and
je
in
sub
ficompl
pop
loop
jle
dec
bound
pop
rolb
and
adc
xchg
inc
pop
loop
cmp
add
dec
jg
push
sub
and
or
or
ret
and
inc
dec
dec
jne
push
lods
inc
in
jle
push
pop
jecxz
inc
mov
popa
nop
pop
movsl
scas
adc
mov
xchg
mov
adc
out
sarl
ljmp
out
adc
shlb
jp
mov
call
jmp
fwait
add
mov
cmpsb
leave
add
jmp
es
xor
jp
lds
mov
lret
imul
and
std
mov
pusha
int3
fcomi
ljmp
sbb
and
mov
ret
sub
or
push
outsl
test
mov
jge
sbb
pop
lret
out
xchg
stos
pop
pop
out
jge
mov
jg
or
jo
xchg
mov
jae
int3
xchg
push
xorl
std
xchg
pmulhw
push
adc
sti
shrb
or
pop
inc
mov
outsb
push
dec
out
sub
ss
jge
gs
ret
fisttpl
les
jge
jge
fisttps
mov
jl
and
xor
out
add
mov
lahf
hlt
dec
sarl
mov
add
mov
fcmovu
mov
pop
sub
rol
sbb
lahf
jl
rorb
test
or
jbe
mov
dec
mov
cltd
fstl
add
int3
fisubrs
lret
inc
bound
aam
cld
cli
idivb
jge
mov
ret
or
lods
inc
testl
outsb
cmp
xor
jle
leave
mov
pop
inc
lea
js
dec
xchg
mov
jnp
inc
mov
scas
mov
mov
jle
adc
sahf
test
add
pop
lahf
test
movsb
mov
and
fwait
lods
inc
les
adc
mov
imul
call
lock
dec
subl
pop
and
sti
js
inc
xor
repnz
jl
cmp
add
mov
jb
xchg
jp
pop
cmp
jecxz
cmpsb
add
ds
hlt
imul
sub
push
cmc
mov
je
popl
pop
pop
xchg
div
int3
clc
jmp
fsubrs
dec
mov
rcl
mov
inc
rcrl
and
sub
test
cmp
fbld
cmp
cmp
pop
loopne
mov
shll
faddl
mov
push
dec
loopne,pt
adc
cmp
repnz
gs
mov
or
cmp
cs
outsb
orb
or
cmc
adc
push
in
xor
push
leave
pop
ficompl
lret
inc
inc
ss
shrb
inc
mov
addr16
cmp
dec
int3
imul
btc
cltd
jns
dec
inc
lret
lods
scas
sub
xchg
lret
xor
xor
adc
hlt
xchg
pxor
dec
inc
push
or
sbb
dec
xchg
adc
xor
dec
sub
push
or
jp
iret
lret
add
sub
pop
cmpsb
sti
mov
stc
xorb
mov
sbb
scas
jbe
loop
iret
xor
data16
mov
lea
mov
inc
mov
mov
lret
lahf
mov
outsl
fmul
shlb
testl
cltd
xchg
push
add
clc
jae
jecxz
sbb
call
cmp
mov
mov
add
mov
pushf
mov
scas
insl
mov
xor
sbb
adc
xchg
and
cmp
jae
add
xchg
out
add
dec
dec
and
mov
punpckhbw
mov
mov
dec
or
ss
xlat
xor
in
inc
add
aaa
mov
cld
xor
mov
inc
mov
int
mov
inc
jmp
mov
aaa
stc
xorl
out
push
lret
ja
pop
fisttpl
push
aaa
or
xchg
pop
adc
stos
fwait
lods
sub
xor
cs
pop
pop
jbe
xchg
xchg
out
ja
cmp
into
sub
xlat
imul
mov
icebp
sub
push
and
je
fs
outsl
mov
add
lods
shl
js
mov
in
sub
cmpsb
icebp
int3
cwtl
ljmp
jne
cli
cmpsl
test
dec
loop
sbb
popf
imul
add
xchg
sarl
jge
das
sbbb
sbb
lock
rolb
fsubrl
jb
mov
inc
dec
mov
inc
shll
cld
shrl
inc
sarl
sbb
sbbb
test
jmp
pusha
dec
iret
das
imul
add
push
jge
sub
xchg
adcl
dec
add
cmp
inc
cmp
out
ss
rcl
xchg
xchg
loopne
or
cmc
scas
in
inc
int3
movsb
call
cmp
jge
hlt
cmp
xchg
mov
test
pop
jo
pop
mov
imul
mov
pop
cmp
dec
xchg
xchg
cli
daa
cmpsl
inc
sbb
cmc
adc
sbb
sub
xor
ja
sbb
add
ss
je
adc
sbb
test
jp
addr16
inc
enter
mov
out
sahf
dec
shrb
xlat
pop
mov
and
stos
pop
hlt
mov
daa
cmp
xchg
lea
ja
cltd
push
lods
cmp
cmpsl
pusha
xchg
sbb
add
push
out
mov
pusha
sarl
mov
jae
inc
jmp
mov
shr
cltd
shlb
mov
shl
in
mov
pop
test
test
negb
xor
push
outsb
mov
std
cmc
inc
cwtl
cli
in
xchg
xchg
rcll
adc
mov
push
mov
lock
or
out
and
mov
xchg
push
mov
ret
xchg
bound
icebp
and
mov
push
mov
and
xchg
je
mov
adc
adc
stc
xchg
lock
incb
orb
aas
enter
stos
out
jns
mov
movsl
lock
or
jns
leave
xorb
leave
gs
jmp
leave
sahf
adc
and
dec
loope
jmp
ret
adc
bnd
ja
popa
mov
arpl
shrl
sbb
addr16
push
push
aam
push
sahf
mov
sti
cmpsb
cltd
sahf
sti
jge
in
inc
lock
dec
sbb
in
fabs
dec
lods
mov
scas
rcr
shlb
test
orb
popf
insl
imull
ljmp
push
jno
mov
add
lret
lea
dec
jno
fcompl
mov
movsl
xchg
cmp
dec
js
out
dec
cli
xchg
cmpsl
xchg
jp
and
shrl
clc
mov
jns
add
and
sub
cmp
mov
icebp
mov
jb
pop
roll
sub
or
xchg
inc
sti
mov
jb
and
lret
rorb
sub
rcrb
xor
pop
lock
lret
and
stos
inc
xchg
or
dec
rcrl
icebp
or
mov
add
sub
ja
leave
xchg
loope
xor
add
insb
das
dec
scas
imul
lds
add
ret
jmp
add
repz
mov
jg
jmp
lret
xchg
frstor
lds
cwtl
lret
leave
jmp
movb
nop
pop
jge
xchg
mov
shlb
jb
in
and
inc
inc
dec
lret
fdivl
ret
popf
rcll
add
out
pop
add
xchg
or
lcall
add
or
loop
push
adc
cli
arpl
mov
cmp
aad
stos
mov
pusha
ss
lea
lods
jno
xchg
addr16
scas
cmpsl
das
sbb
mov
daa
pop
pop
addr16
imull
data16
out
testb
push
int
mov
aad
sub
pop
adc
ret
insb
sbb
or
or
call
xor
cmp
dec
mov
roll
and
aad
add
adc
jecxz
popa
xchg
lock
lds
xor
jb
mov
fistps
shlb
xchg
test
push
add
jo
jb
outsb
sbb
jb
jno
loope
mov
pop
xchg
xor
dec
cmp
aas
pushf
call
mov
call
decl
xor
insb
mov
mov
inc
repz
mov
inc
dec
add
dec
inc
sub
movsb
stc
js
int3
xchg
add
rcll
xor
sbb
cmp
jg
fwait
xchg
or
mov
fistps
mov
lea
mov
iret
stos
imul
movsb
fdivrl
mov
pop
int
fs
xchg
sbb
scas
add
pushf
xchg
add
ds
mov
imul
outsl
dec
dec
fchs
and
lret
sbb
lea
fptan
inc
jno
lock
xchg
movsb
movsb
mov
xchg
dec
pop
mov
pop
mov
dec
mov
or
pop
mov
and
ret
and
rorl
dec
je
adcl
in
ss
dec
jne
cmp
ret
aam
stc
inc
or
pop
mov
cmc
stos
jne
mov
scas
and
xchg
addr16
push
xlat
fidivs
or
add
or
lret
jno
ret
inc
shll
push
insl
mov
enterw
mov
dec
scas
pop
cmc
push
and
xor
jae
daa
cmp
outsl
in
lea
push
daa
test
lcall
lret
pop
sbb
xchg
adc
jecxz
inc
pop
dec
pusha
dec
pop
sbb
sahf
out
mov
lcall
test
pop
push
cmp
pop
add
test
or
gs
call
imull
aas
inc
sbb
fnstsw
fdiv
push
add
xor
xor
icebp
std
cmpsl
mov
mov
mov
rclb
ret
in
or
fisubl
cmpsl
and
xchg
lret
sub
adc
sub
js
ss
test
inc
andb
je
mov
daa
scas
push
adc
stc
mov
pop
mov
pop
pushf
sbbl
aad
jp
adc
in
pop
jmp
xor
push
aas
push
test
cmp
dec
xor
or
mov
aam
mov
push
fs
ss
imul
ljmp
in
hlt
stos
xor
roll
test
mov
sbb
push
cmp
or
lds
jo
lods
xlat
xorl
mov
iret
fisttps
int
imul
lds
or
insb
or
push
into
xor
jg
cmp
outsb
sbb
dec
inc
push
pop
cld
fimull
cltd
roll
shl
xchg
jmp
cli
popa
test
jnp
jmp
or
cmp
jbe
push
movb
and
dec
loopne
xchg
popf
mov
enter
aam
in
add
jno
push
pop
lds
jno
mov
push
mov
and
cmp
adc
repz
pop
dec
mov
dec
int3
mov
ja
repnz
movsl
pop
mov
dec
cltd
icebp
cmp
inc
ret
xor
xchg
jl
fsts
cmp
xor
fs
clc
negl
test
adc
cld
lds
daa
scas
nop
pop
pop
mov
sahf
imul
sub
pop
cmpsb
mov
add
nop
adc
jecxz
jae
xchg
pop
dec
jle
xchg
icebp
pop
test
mov
jg
cmpsb
dec
pushf
jle
xor
arpl
and
repz
icebp
aaa
sub
lret
pop
rclb
cld
in
jge
arpl
clc
pop
push
dec
sub
and
stos
xor
mov
cltd
mov
and
xor
pop
mov
mov
scas
les
mov
pop
in
and
add
mov
lods
sarb
adc
cs
adc
xchg
mov
xchg
fbstp
stos
clc
sahf
sbb
and
das
enter
dec
pop
xchg
sub
loop
fdivrl
sahf
cmp
and
jb
xchg
scas
fcompl
push
ja
js
sbb
cmp
xlat
loope
pop
int
sti
cmp
xor
cwtl
out
dec
mov
les
jno
bound
das
inc
adc
test
call
add
sbb
pop
mov
dec
mov
cs
mov
mov
dec
lahf
aaa
enter
in
andl
bound
out
stos
jmp
lods
mov
mov
subl
es
sub
jns
lock
adc
lds
mov
jp
dec
ss
xor
jl
cltd
ja
pop
xchg
ret
push
push
loope
out
add
pop
cmp
mov
push
les
cmpsb
inc
adc
inc
xchg
sbb
push
or
and
jg
loope,pt
outsb
cld
fmulp
xchg
xchg
js
push
mov
sub
cmpsb
sub
in
mov
inc
mov
sub
and
int3
jns
jmp
cmp
xor
fmuls
imul
push
jb
jge
cmpsl
rolb
sti
int
xchg
int
les
jo
push
add
jnp
xor
leave
fidivl
loopne
inc
inc
add
test
aad
cmpsl
mov
nop
rol
not
gs
int
addb
movsl
cmpsb
dec
outsb
adc
push
jno
cmpsb
mov
jp
jl
stos
fimull
mov
sbb
addr16
jge
sub
dec
push
jle
mov
push
jecxz
mov
out
mov
cmp
mov
xor
jne
xor
pop
mov
push
pop
insb
cltd
lret
pop
jp
gs
sarb
pop
enter
sahf
lock
shlb
adc
jp
xchg
xor
testb
stos
pop
mov
mov
inc
add
clc
aam
adc
mov
adc
xor
div
xor
push
mov
out
lret
fcmovb
adc
sbb
leave
xor
fildl
or
out
imul
mov
pop
mov
aad
push
ja
hlt
iret
and
iret
into
ret
mov
sub
imul
fistl
aam
vmulss
and
jle
ret
jb
mov
mov
or
shll
ret
mov
xchg
orb
out
cld
setg
popa
hlt
bound
sahf
mulb
dec
roll
filds
push
shll
loope
mov
out
repz
enter
pop
mov
clc
gs
xchg
lcall
cmp
dec
add
jmp
push
insl
fsubrl
in
cltd
pop
cmpb
mov
iret
cmc
and
xchg
sbb
icebp
add
xchg
jo
dec
mov
insl
jecxz
push
dec
nop
fdivrs
push
pop
pop
sub
gs
scas
rorb
xchg
jae
ret
outsb
pop
out
fcomi
rcl
lds
ficomps
mov
nop
jmp
pop
sub
sahf
loopne
inc
pop
lret
and
pop
in
xorl
jmp
cmpsb
iret
notb
negb
cmpl
icebp
jnp
cmp
xorb
cmp
jo
into
pop
jae
loop
inc
hlt
popf
xchg
push
mov
js
loope
paddusb
insb
adcl
mov
faddl
fsubrl
ret
in
fs
lds
test
mov
mov
jg
jge
aaa
lret
lret
push
mov
jmp
pop
mov
stos
aas
dec
insl
test
push
mov
mov
mov
gs
xor
arpl
mov
aaa
jge
xor
fldl2t
cmpsb
cmp
icebp
daa
cmp
pop
fisubrs
cmpsb
xchg
sti
scas
adc
out
test
lahf
xor
mov
jne
lods
push
inc
xchg
or
push
in
xor
call
das
aaa
or
ficoms
in
dec
test
mov
enter
inc
test
cltd
mov
cmp
mov
push
and
push
jecxz
je
dec
dec
inc
mov
cli
cmp
dec
jns
outsb
out
movntq
mov
in
xchg
jns
inc
subl
pop
sub
sub
inc
jmp
fcom
popf
sahf
jge
jle
push
fmull
ljmp
popf
mov
pop
pop
push
jg
addb
fcmovnu
xchg
sbb
rorl
testl
testl
fnstsw
pop
arpl
rorb
mov
xchg
and
div
sub
pop
pop
das
pop
js
ljmp
fdivrs
dec
jecxz
iret
mov
lds
adc
pop
pop
push
push
sbb
jecxz
jno
sub
push
test
aad
mov
pop
mov
inc
aaa
call
push
dec
mov
inc
sub
fsubl
out
orl
idivb
fiadds
cmp
sarl
mov
and
outsl
fs
sbb
arpl
and
xchg
jecxz
push
dec
mov
clc
xor
sbb
js
mov
and
lods
idivl
scas
cltd
or
gs
aas
pop
or
mov
cmpsb
rorl
aam
std
stos
adc
sti
imul
in
mov
inc
punpckhbw
loopne
cwtl
int
pop
out
jb
xchg
ss
add
mov
or
outsl
xchg
popf
fstps
inc
sbb
xchg
mov
inc
clc
xchg
std
pop
inc
jbe
nop
cmpsl
sbb
cltd
mov
ficomps
movsl
rolb
sti
rcll
push
and
test
pop
loope
add
or
loope
xlat
adcb
cs
loopne
or
sbb
out
imul
xchg
xchg
into
cs
xor
lahf
pop
inc
scas
cltd
fcompl
xchg
hlt
repnz
mov
cmp
xchg
xchg
bound
mov
insb
cwtl
jnp
or
sbb
loope
testb
lock
mov
outsl
es
arpl
test
jmp
test
in
adc
in
xlat
push
inc
out
lods
fdivrs
imul
in
dec
aas
xchg
ficoml
popf
out
and
xor
testl
lcall
testl
fs
lea
xchg
cmpsb
stos
ss
jecxz
roll
push
lods
sbb
mov
adc
lods
aas
or
push
adc
cld
fs
lcall
in
nop
decl
lahf
inc
cmp
sbb
sub
ja
stc
adc
pop
inc
sahf
or
or
ja
adc
imul
packuswb
mov
push
adc
int3
push
in
add
outsl
sbb
push
cmp
xchg
cmp
mov
jbe
shlb
jle
xor
in
hlt
xor
jno
or
xor
adcb
lcall
aam
push
fdivrl
pop
mov
mov
adc
popa
stos
fistl
cwtl
mov
or
dec
imul
ficompl
adc
add
or
lahf
lret
int
adc
inc
aam
or
and
or
shll
in
dec
mov
sub
adc
xor
in
mov
fsts
popf
jmp
mov
ficomps
push
mov
dec
jle
ds
std
and
sbb
cli
sahf
lods
and
xchg
es
outsb
rcrw
loop
cltd
hlt
xor
fwait
cli
xor
xchg
cmp
pop
cmpsl
ss
sbb
out
int
pop
push
mov
mov
push
push
cmp
leave
lcall
push
sbb
or
cs
imul
jno
cmc
mov
mov
xorb
dec
inc
gs
cmp
jmp
pop
aaa
fldl
or
dec
jbe
sar
shlb
add
int3
or
xor
jnp
cmp
repz
fisubrs
test
fsubr
push
fbstp
cmp
pop
movsl
mov
nop
jp
rcrb
mov
inc
inc
in
andb
int3
mov
mov
leave
lds
test
sub
jns
jecxz
cmp
lods
inc
pusha
in
cwtl
add
mov
jns,pn
mov
add
js
je
xor
clc
xchg
into
jbe
daa
or
fcoml
lret
nop
mov
mov
pop
pop
push
sub
jmp
test
in
fimull
push
pop
ret
mov
lret
inc
cmp
add
icebp
dec
aam
push
push
jge
push
fildll
cld
dec
shr
xchg
pop
lds
pop
pop
data16
mov
in
repz
daa
cmpb
push
out
sbb
add
dec
mov
in
xchg
test
or
cmp
notl
pop
sbb
or
out
popa
clc
push
fcom
aad
xchg
inc
jbe
push
mov
pop
dec
ret
test
test
sbb
xchg
in
iret
stos
lods
jmp
outsb
xchg
pop
xchg
dec
das
fidivrs
add
push
sti
sub
pop
sbb
dec
popf
cmp
pop
fdivrs
dec
dec
and
rcrb
cmp
addr16
pop
mov
xchg
int3
or
lcall
out
repz
dec
cmp
mov
negb
lcall
cwtl
jg
sarl
fistpl
xor
iret
mov
scas
fdivrs
lea
push
dec
cmp
dec
mov
das
pop
pop
jno
dec
imul
mov
push
xor
push
xlat
mov
icebp
push
ret
xor
mov
pop
rclb
sub
pop
ljmp
iret
jbe
cs
inc
cmp
and
and
mov
nop
adc
xchg
mov
push
adc
mov
shl
pop
or
fs
repnz
pusha
cmp
cmp
jne
sarb
imul
cld
mov
in
adc
cmc
and
cs
popa
ljmp
push
dec
out
loope
test
xchg
mov
pop
jnp
lds
and
mov
jge
inc
ret
cmpsb
xchg
les
jo
pushf
jge
insl
jns
loop
or
in
push
aam
jb
punpcklbw
push
sub
lcall
or
fdivr
cmp
or
push
fdivr
lock
mov
dec
xor
cmc
and
dec
mov
xchg
cmp
imulb
ficoml
fdivrs
adc
pop
lret
sbb
mov
pop
add
jnp
lods
adc
ljmp
sub
je
mov
testl
in
push
sahf
aad
scas
push
call
clc
ljmp
imul
shlb
out
xchg
dec
jne
push
add
bound
push
xchg
cmp
mov
and
in
add
xchg
out
cmpsl
aam
mov
sub
rorl
xor
lods
jbe
aam
in
pop
sub
outsb
xor
ss
dec
jp
adc
adc
std
adc
imul
pop
outsb
xor
stc
outsl
repz
inc
dec
sub
pop
call
push
iret
jne
data16
ficoms
ljmp
mov
jp
mov
mov
and
push
mov
or
cmpsb
inc
xor
je
pop
sub
test
add
cmpsb
dec
out
insb
mov
or
inc
cmp
cmc
xor
out
and
or
jbe
rclb
movsl
jo
int
push
pushf
idivl
mov
rcr
jmp
jae
outsl
enter
shrl
mov
sub
cmp
fidivrs
aad
popa
xchg
insb
xchg
jne
pop
fadds
cmc
data16
add
lcall
mov
jns
stos
inc
jge
aas
xor
push
lcall
jns
in
xchg
out
inc
jge
dec
inc
cs
mov
fisubl
xchg
imul
and
mov
mov
pop
pop
inc
push
mov
cmc
cmc
cmpsb
addr16
pop
fnsave
mov
js
in
outsl
and
popa
imul
inc
pop
jg
mov
cmpsl
push
dec
dec
jbe
mov
xchg
sub
fwait
push
mov
scas
push
stos
mov
outsb
outsl
mov
pop
sub
data16
ljmp
fldenv
lcall
repz
sub
adc
cmp
jne
sbb
pop
lods
push
mov
inc
in
mov
push
test
inc
shlb
shlb
and
popa
pop
pop
lods
pop
lods
lock
jmp
out
pminub
add
lret
loope
fildll
or
mov
cltd
mov
jne
loopne
fsubs
xor
mov
fdivs
mov
insl
adc
imul
push
sti
add
loope
sarl
xor
fs
sti
add
lods
cwtl
jnp
and
pusha
push
addr16
int3
mov
rcr
cmp
mov
xchg
mov
sbb
out
call
or
xchg
mov
sbb
push
sub
shlb
mov
add
out
pop
int3
xor
ds
mov
push
js
push
call
jmp
adc
jle
mov
dec
push
mov
pop
test
cs
pop
mov
in
pop
pop
sub
cli
add
pop
xchg
test
cmp
pop
mov
ffree
into
sbb
xchg
mov
mov
ja
adc
pop
xchg
sbb
mov
popf
push
pushf
andb
stos
push
inc
or
lods
adcl
int
call
xchg
cmp
mov
rorl
stc
idivb
pop
les
and
aam
cli
mov
adc
hlt
sahf
jae
shlb
cmc
xor
nop
sub
add
sti
inc
mov
scas
fs
test
adcl
mov
mov
imul
fnstsw
xor
rcll
mov
xor
cmp
leave
test
fisubs
jecxz
push
xlat
pop
ret
jbe
call
shll
pop
mov
push
repz
fisttpll
lods
sbb
or
aas
insl
and
or
lock
jp
stc
mov
cmc
jmp
mov
repz
idiv
int3
mov
stos
sbb
sub
xchg
dec
loop
aad
pop
loop
fcmovnbe
test
test
mov
push
adc
jbe
dec
andl
push
add
mov
xor
insb
imul
xor
int3
frstor
into
lret
ret
mov
movsb
inc
and
mov
in
adc
ds
stc
roll
inc
nop
jp
data16
shr
and
test
or
int
jo,pn
jne
loopne,pt
cmp
addb
add
xor
or
xchg
jmp
sti
adc
or
pop
rorl
mov
mov
loope
imul
popf
lods
add
aam
push
push
add
in
clc
xchg
loopne
xor
mov
xchg
movb
mov
pop
test
inc
test
adc
cmp
pusha
sahf
adc
adc
mov
sub
mov
test
ret
inc
std
aam
mov
xor
inc
dec
inc
stos
adc
pop
pop
minps
xchg
loop
pop
adc
xor
mov
call
decl
and
fidivrs
mov
movsb
pop
pop
adc
pop
testl
leave
addr16
aam
mov
lods
imull
jmp
sub
dec
insl
and
fdivrl
inc
push
cmp
lahf
rorl
test
push
sbb
mov
shl
mov
mov
xchg
and
cs
sbb
lret
shll
arpl
mov
adc
mov
sub
fwait
dec
mov
out
jnp
lcall
repz
sti
fs
fmull
sbb
jae
cmpsl
orb
push
mov
ljmp
cmpsb
mov
xchg
cmpsb
popa
jl
arpl
insl
movsl
pop
mov
pop
or
aaa
movl
push
pop
adc
mov
sbb
lcall
nop
xor
mov
cltd
stc
cld
xor
in
iret
adc
rorb
pop
data16
bound
push
sbb
and
pop
sahf
push
jne
xor
inc
out
nop
xchg
dec
scas
pop
loop
and
arpl
cwtl
lods
lock
cmp
fwait
jmp
pop
outsl
fidivl
push
aas
loop
in
pop
cs
add
jne
cmp
sbb
ljmp
dec
call
pop
stc
adc
cmpsl
lds
cs
lods
rorl
lcall
inc
or
jne
out
cmp
out
lods
rolb
add
cmp
fcom
mov
fnstenv
cmp
fcmovbe
mov
jne
aam
test
pop
and
pop
pop
jl
add
dec
movsb
adc
es
bound
cltd
gs
flds
inc
loop
add
je
pop
flds
jb
fwait
stc
ljmp
cltd
ficompl
int3
or
mov
lods
nop
dec
inc
xchg
mov
lock
and
mov
test
push
sub
push
xlat
push
lds
push
and
int3
adc
or
mov
add
cmc
sub
ret
scas
sbb
nop
insb
shll
sub
pop
enter
sub
add
and
pop
jnp
jle
xlat
xchg
lds
mull
imul
enter
filds
scas
dec
ss
call
aad
inc
sbb
push
sar
sbb
sbb
cli
add
mov
fwait
test
or
cwtl
sbb
lcall
add
xor
push
inc
push
xchg
adc
adc
mov
jns
dec
cmp
adc
mov
fisttpll
outsb
lods
add
xchg
push
sub
mov
clc
sub
sarb
sbb
mov
subl
repnz
mov
and
dec
mov
mov
sbb
call
aam
mov
fildll
and
inc
mov
fimull
mov
punpckldq
lcall
popa
push
fnsave
inc
sbbb
mov
dec
nop
inc
addr16
andl
adcl
adc
push
mov
mov
pop
and
mov
es
push
adc
sbb
int3
inc
or
pop
jae
fmull
testl
mov
push
pop
and
les
mov
mov
add
jb
cmpsl
imul
fildll
xchg
les
cmp
inc
pushf
and
in
fmull
push
or
sub
je
lret
mov
pop
shr
ja
ja
jo
ss
push
stc
push
or
adc
test
or
sbb
aas
cwtl
or
stos
idiv
out
mull
or
jp
std
int
es
fdivr
movsb
inc
sub
popa
les
ret
out
into
sub
or
popf
or
aam
enter
jne
or
jne
mov
sub
stos
inc
xor
adc
cmp
inc
loop
mov
sbb
loope
dec
lock
out
xor
cmp
xor
imul
mov
fildll
pop
cltd
aad
dec
mov
mov
in
loope
xchg
fimull
loopne
sub
mov
loop
fistl
testb
inc
out
shlb
mov
dec
pop
jns
xchg
les
inc
dec
mov
or
popa
adc
dec
mov
mov
movb
fidivl
icebp
mov
sbb
mov
leave
push
inc
xchg
outsb
xor
enter
and
and
mov
mov
mov
cli
incb
push
mov
mov
and
push
or
pop
inc
pop
insb
movsb
stos
arpl
int
cmp
imul
rorb
pushf
jp
sbb
mov
lahf
mov
out
mov
add
in
dec
aam
jb
sbb
cmpsb
push
jp
es
adc
gs
pop
cmpsl
mov
cmp
lods
mov
xchg
ja
div
mov
cmp
sbb
loopne
push
daa
js
cmp
inc
push
jmp
cli
pop
lea
data16
cmp
push
xor
pop
pop
sahf
cwtl
in
fcomp
ljmp
cs
stos
sub
push
rcrb
adc
adc
pop
push
sbb
stc
repnz
push
pop
cld
subl
hlt
add
sbb
jge
mov
hlt
mov
and
fwait
cli
xor
pop
fisubrs
pop
push
ja
mov
loopne
jb
push
push
ja
push
cmp
mov
adc
call
dec
inc
fisubl
lcall
outsb
cmp
push
cmp
cli
mov
xor
ret
mov
enter
pop
lcall
xor
pop
nop
xor
mov
divb
div
das
ja
call
adc
pop
pushf
push
mov
fimuls
cs
mov
in
xchg
inc
out
daa
lods
jmp
push
xchg
cmp
mov
push
dec
push
mov
aam
cmpsb
adc
xchg
imul
adc
xlat
inc
mov
gs
jge
fisubl
cmpsl
lret
lret
dec
leave
js
lods
pop
xchg
jns
ljmp
push
addr16
adc
fcmovnbe
push
add
repnz
jae
xor
jbe
iret
push
in
fs
mov
out
lods
ret
xor
cli
push
cmp
pop
cmp
movsb
enter
clc
dec
inc
insl
add
imull
mov
lock
xchg
pushf
xchg
mov
adc
add
xor
pop
jle
and
andl
mov
shrb
xlat
push
mov
insb
lcall
inc
vphaddbq
ret
es
loop
dec
push
bound
pop
adc
add
ret
mov
outsb
lret
jo
pop
mov
stc
xchg
push
pusha
call
jbe
jmp
pop
lret
dec
add
call
aad
rol
cmp
mov
push
aam
nop
push
inc
pop
mov
es
lahf
jae
jle
popf
inc
cmc
dec
enter
cld
in
xlat
in
sub
mov
bound
mov
psllw
scas
xchg
add
mov
mov
dec
add
incl
lcall
lock
cmp
imul
mov
xchg
imul
aaa
and
test
add
cs
gs
sub
xchg
in
stos
jle
sbb
fs
out
nop
jno
aas
add
jg
add
jge
pop
jb
imul
lcall
mov
dec
inc
cmp
inc
clc
in
or
orps
loope
cmpsl
call
mov
cld
daa
mov
or
adc
jb
cmp
movsl
ja
push
hlt
fwait
cs
test
mov
push
sbb
pop
adc
cli
in
sub
loopne
dec
filds
push
push
add
aam
mov
sub
test
inc
and
test
outsl
aas
pop
pop
jge
inc
mov
test
xchg
cmc
jl
lods
mov
into
pop
push
add
xchg
jae
jnp
inc
mov
shlb
pop
push
jge
mov
cmpb
scas
push
jle
ret
inc
and
ret
clc
sarl
frstor
sahf
cmp
cmp
dec
adc
or
xchg
pusha
jbe
mov
cmp
lcall
rcr
lock
cmp
mov
and
jbe
mov
mov
xchg
push
mov
sub
lods
adc
sahf
gs
fdivrs
js
and
nop
icebp
adc
test
aam
push
mov
mov
sub
jmp
not
fistpl
or
je
in
repnz
add
pop
cmp
mov
in
popa
in
sti
lret
mov
aas
cmp
add
pop
icebp
pushf
sti
lahf
push
insl
add
cwtl
dec
enter
mov
out
jae
jb
xchg
ja
cmp
aad
lods
mov
testl
inc
hlt
sub
inc
xchg
sbb
or
leave
xchg
push
xchg
les
ret
add
jbe
jno
ja
pop
in
inc
push
mov
mov
ds
jo
cmpsb
xor
fadd
mov
push
adc
cmp
mov
ljmp
sbbl
adc
or
mov
push
or
lea
xor
mov
mov
inc
je
inc
cmp
daa
inc
data16
push
es
cmp
or
out
dec
testl
jle
andl
movnti
jle
popf
repz
cltd
repz
and
es
adc
fiaddl
xor
sbb
xchg
imul
inc
adc
fsubrl
xchg
inc
adc
nop
movsb
sbb
and
xchg
insb
lds
adc
test
cmpsl
sahf
leave
mov
stos
lods
dec
outsl
outsb
inc
mov
pop
popa
stos
ret
jne
bound
dec
mulb
lahf
mov
inc
pop
inc
es
imul
aam
jbe
xchg
fimull
mov
inc
xchg
cmc
cmp
sbbl
inc
jg
ret
mov
mov
xchg
xlat
jbe
into
sub
das
push
loopne
and
dec
out
dec
lret
jns
fs
mov
inc
mov
scas
daa
test
adc
cmpsl
xchg
xor
scas
push
icebp
lret
xor
push
loopne
xchg
xor
ret
hlt
jbe
aas
cmp
cwtl
mov
cmp
data16
outsb
jnp
lock
sbb
jge
jae
and
mov
xchg
mov
and
or
dec
sbb
insb
dec
jg
pop
aaa
xchg
loope
pop
mov
cltd
or
adc
out
xchg
lea
xchg
sbb
mov
mov
pop
adc
push
mov
mov
cmp
mov
imul
mov
sti
or
sbb
neg
push
ret
add
out
test
std
fadd
cmp
xor
in
cmc
adc
mov
test
rcrl
lret
fidivs
xor
sub
dec
push
adc
add
pop
adc
pop
sbb
nop
mov
pop
popf
xchg
pop
hlt
mov
nop
jmp
lret
jo
mov
test
xor
mov
push
adc
pop
mov
and
push
adc
mov
fidivs
stos
pop
xorl
int
cli
test
push
ret
xor
xlat
pop
or
mov
imul
cli
push
insl
adcl
out
daa
repnz
mov
xchg
jae
movsb
mov
testb
dec
pushf
addl
roll
mov
sub
adc
cmpsl
shlb
cmp
cmpsb
push
mov
xchg
inc
jno
jo
mov
pop
repnz
bound
insl
popa
scas
or
mov
rorl
imul
or
mov
jp
jae
sbb
sub
sub
in
call
cmpsb
out
and
aad
or
mov
shlb
cmpl
aad
adc
ficoms
mov
int
add
fstl
jnp
imul
cs
xorw
mov
in
and
mov
std
inc
scas
les
or
out
cmp
mov
xchg
adc
mov
je
cltd
shrl
xor
mov
dec
shl
in
inc
inc
jge
lahf
andb
into
ljmp
gs
repnz
enter
adc
fcmovb
aaa
test
int3
push
testl
out
and
flds
mov
xor
add
push
inc
ljmp
ja
jbe
add
stos
test
sub
or
mov
mov
enter
mov
and
not
sub
scas
ret
ds
lret
shl
mov
jmp
outsl
mov
add
scas
mov
sub
inc
stc
lahf
out
add
sbb
test
adc
cmp
add
out
cmp
mov
shrl
add
push
dec
push
pop
ja
inc
fsubp
lds
std
iret
or
cld
sti
stos
loopne
sub
sahf
das
jl
xor
rcrl
ja
inc
jbe
inc
cmpsb
add
mov
pop
adc
jb
or
push
es
pop
push
shl
mov
into
mov
imul
loope
jo
stos
sahf
mov
out
rcl
lock
jmp
shl
mov
xchg
mov
xlat
push
jmp
in
push
cs
adc
inc
jmp
test
inc
enter
sbb
dec
xlat
sar
arpl
ds
or
lock
pop
adc
hlt
fdiv
push
mov
xchg
xor
add
sbb
mov
xchg
xor
xor
test
std
add
dec
shll
and
cmp
cli
xor
inc
stos
subb
and
outsb
adc
test
aaa
dec
ret
sub
mov
sub
xor
push
inc
jns
adc
movsl
stos
sarb
cmp
ss
insb
lret
pop
jo
xor
stos
sub
call
movsb
inc
cmp
mov
test
dec
pusha
xlat
adc
fsubs
inc
xchg
xchg
or
mov
repnz
sub
xchg
mov
sbb
imull
mov
sub
xor
imulb
sar
cmpsl
inc
sbb
pop
enter
mov
leave
ret
push
loopne
or
stc
push
mov
push
cmpsb
pop
sub
stos
cmp
add
pop
push
sbb
rol
cltd
and
sysenter
sbb
xchg
sbb
inc
xor
std
orl
fldcw
inc
pop
test
es
jp
inc
push
lret
pop
testl
or
adc
and
sbb
popf
xor
bnd
jae
push
cmp
dec
xchg
push
inc
xor
test
push
shrl
clc
mov
pop
lock
lcall
sarb
bound
jp
aam
fdivrs
das
outsb
test
jne
add
in
nop
imul
lods
xor
popa
mov
inc
clc
ret
clc
fldl
arpl
lods
iret
push
int
aad
push
mov
cwtl
or
mov
addr16
mov
addr16
out
adcl
inc
add
movsbl
ss
pop
jle
mov
xchg
sub
nop
mov
xchg
es
clc
lods
test
fimull
fsubs
pop
mov
hlt
and
aas
js
and
adc
movl
add
in
popf
adc
pop
shll
mov
push
movsl
mov
mov
sti
lods
mov
rorl
mov
and
std
dec
shlb
jmp
pop
and
xor
outsl
ds
jnp
loopne
scas
bound
xchg
xchg
pop
test
mov
popl
adc
pop
xor
mov
movsl
mov
xchg
adc
cltd
and
jl
and
mull
popf
jle
jno
or
sbb
cld
or
jge
loope
xchg
orl
call
in
pop
aaa
gs
add
jnp
fwait
push
lock
ljmp
cld
pop
test
es
jp
mov
dec
daa
insb
lret
mov
add
sahf
insl
fwait
insb
mov
lret
inc
dec
scas
push
sbb
ja
sub
sahf
sub
dec
cmp
dec
and
ficompl
fildl
mov
fnstenv
leave
lock
arpl
sbb
imul
clc
int3
xchg
insl
xorb
jmp
call
loop
jp
mov
fisubrl
xlat
js
lods
add
pushf
mov
or
mov
addr16
shlb
cli
adc
or
leave
push
jl
sbb
xchg
pop
adc
xchg
xchg
pop
scas
lock
xlat
fisubs
pusha
shll
shlb
xor
lcall
jno
xor
imul
lcall
mov
punpcklbw
addr16
les
inc
in
xchg
mov
inc
out
ret
xchg
xchg
push
and
stos
and
lea
jno
test
pop
adc
jl
stc
test
push
sub
pop
imul
lock
xor
pop
mov
pop
fwait
sahf
xchg
mov
pop
in
stos
mov
xchg
fucom
push
cmpb
fnsetpm(287
xchg
push
in
sbb
jecxz
daa
mov
nop
xchg
inc
push
or
sbb
idivb
xchg
add
mov
pop
shlb
bound
cmp
out
loope
pushf
mov
rcl
lahf
jno
sbb
hlt
jns
mov
lret
popa
jno
adc
adc
fnsave
out
rorb
sti
push
pop
cmpl
mov
mov
pop
xor
rcrl
push
addb
leave
aam
cmp
dec
dec
mov
subb
fnstenv
xchg
push
mov
rcr
or
lock
pop
pop
orl
inc
daa
push
and
mov
mov
cmpsb
push
lcall
stc
int3
mov
cmc
dec
out
cmp
add
ds
xchg
push
test
xchg
outsb
je
adc
popa
fwait
repz
das
lret
push
dec
rcl
xor
jns
into
in
ret
jl
push
leave
dec
mov
jb
pop
stos
in
sbb
sbb
fisttpll
jbe
movsb
stos
dec
cmp
sub
and
mull
les
inc
popa
jnp
cltd
xchg
ss
rolb
into
icebp
push
jmp
stos
pushf
ja
cmpsb
sbb
inc
dec
cmp
in
das
pop
lea
cli
rorl
mov
add
ds
jle
data16
out
push
aaa
dec
jns
js
cmc
int3
rcl
xor
sbb
mov
and
push
in
jae
xchg
xor
adc
mov
int
gs
mov
cmc
cld
mov
mov
push
push
xchg
lods
jae
sub
pop
xlat
jb
mov
inc
lret
pop
imul
xchg
adc
in
push
lret
mov
sbb
test
sbb
add
cmpsb
test
inc
xchg
pop
popa
hlt
mov
mov
inc
cmp
jo
jg
jmp
shlb
xchg
dec
cmp
adc
leave
jmp
mov
out
jae
sbb
xchg
orl
stos
lret
xor
xor
lea
mov
sbb
cs
in
cmp
cmp
adc
leave
sbb
jl
pop
les
lods
xchg
and
pop
je
mov
sub
ss
jle
ror
mov
roll
insl
dec
out
xor
mov
in
and
pop
mov
fwait
daa
or
and
les
dec
inc
jmp
inc
rcr
ljmp
cmpsl
push
ljmp
lods
dec
in
mov
xor
push
and
cmpsl
add
mov
sarb
sti
ljmp
xchg
insl
cmp
cltd
adc
xor
mull
xchg
sub
xor
or
pop
mov
testb
dec
lret
mov
cltd
test
cmpsl
mov
arpl
mov
sbb
pop
nop
lea
xor
addr16
or
daa
and
or
add
dec
idivl
adc
pop
je
mov
ret
jnp
pop
lds
shll
scas
dec
add
dec
or
ds
dec
cmc
push
jnp
aam
mov
push
pop
stos
or
roll
add
pop
pop
aam
notb
sti
clc
sub
mov
jo
mov
imul
xchg
inc
dec
adc
cli
stos
sahf
sbb
dec
jmp
icebp
cmpsl
fistpll
xchg
pop
sbb
mov
inc
dec
bound
in
jle
sub
push
ret
sbb
loop
movsb
mov
jg
orl
dec
cmp
fcompl
out
sti
add
lods
sbb
adc
push
int3
push
pop
je
loopne
add
sub
cltd
int
cmp
mov
fnstcw
js
pop
call
aam
inc
add
or
jne
fiadds
scas
insl
mov
push
std
lds
cld
jge
xorl
inc
sbb
movsb
ljmp
pop
pop
mov
in
popf
mov
push
sub
rolb
jne
jl
rclb
and
pop
call
xchg
mov
lods
xchg
sbb
mulb
leave
fcomps
fistpll
jge
dec
sub
in
push
mov
dec
jl
xchg
mov
pop
mov
es
stc
out
xchg
jmp
inc
lea
dec
and
xorl
test
cmpsl
mov
sub
dec
cmp
pop
lock
jnp
push
popa
xchg
std
pop
hlt
sub
pop
jmp
out
mov
fdivrl
scas
inc
mov
cmp
mov
push
sbb
and
stos
shll
dec
jp
je
and
adc
repnz
addb
sbb
loopne
jb
out
adc
or
sahf
aad
xor
xor
outsl
pop
xor
lds
jmp
mov
addl
pop
mov
ret
aad
movsl
into
inc
mov
jb
std
mov
cvttps2pi
dec
cli
jae,pt
fnstenv
pop
les
inc
xchg
popa
sub
pop
icebp
je
cwtl
bound
dec
adc
mov
fwait
sub
fidivrs
push
fimuls
add
movsb
lcall
or
xchg
adc
hlt
fs
jmp
push
fisubrs
push
add
mov
fisttpl
sbb
pop
adc
aam
xlat
sti
and
sub
and
mov
js
das
sbb
add
outsl
adc
pop
dec
out
lcall
push
sub
subl
sar
push
mov
iret
cwtl
push
jg
aas
dec
popf
daa
enter
push
fnstenv
int3
out
stos
push
lds
cli
mov
pop
mov
pop
mov
repz
outsl
mov
loopne
mov
mov
fisubs
adc
js
cwtl
dec
mov
add
sar
xchg
lret
scas
push
mov
cli
lods
ljmp
jg
loopne
out
mov
adc
scas
arpl
je
push
sti
rcrb
sub
movsb
cmp
add
xchg
addr16
xor
pop
jno
hlt
je
pop
pop
xlat
sbb
mov
cltd
out
inc
jnp
cvtpi2ps
and
out
ds
push
mov
lods
clc
data16
xor
pusha
cmp
pop
es
mov
jno
and
jno
cli
and
mov
negb
aas
divb
notb
push
mov
mov
xor
xchg
js
aad
lds
imulb
jecxz
sarl
mov
add
inc
das
push
pop
aad
xor
sub
mov
dec
nop
push
xlat
sbb
inc
dec
fsubr
iret
xor
es
inc
ds
imull
adc
adc
icebp
mov
or
insl
push
xchg
movsl
mov
cs
sub
xor
pop
nop
rcrb
xlat
mov
bound
jns
fwait
xor
ficomps
cmpsb
sbb
scas
or
js
push
sbb
ret
lods
xchg
insb
pop
pop
cmpb
stc
mov
add
cmp
outsl
cmp
outsl
iret
out
pushf
add
mov
cmp
pop
dec
xchg
xchg
das
iret
mov
cmpsl
nop
cmp
xor
lods
mov
mov
leave
mov
inc
pop
mov
mov
lahf
lcall
leave
lahf
pop
imul
inc
negl
inc
pop
cld
jp
arpl
fildll
into
jno
push
ret
mov
lods
xor
xchg
and
xor
sbb
mov
mov
lock
dec
mov
test
inc
xchg
in
xchg
enter
lock
add
adc
inc
fucomp
bnd
loope
in
jle
mov
inc
movsl
lret
dec
insb
adc
lcall
mov
pop
push
clc
dec
and
mov
cmpsl
dec
sub
inc
dec
hlt
adc
jecxz
xchg
out
sbb
jge
sbb
int
jns
push
mov
add
jmp
or
in
ja
jo
adc
addr16
xchg
push
and
pop
mov
cmpsb
test
and
jo
ficoml
iret
fiaddl
jne
pop
jae
andl
aaa
or
js
or
cli
ja
jns
pop
cmpsl
outsl
mov
pop
movsb
push
shll
into
add
arpl
sub
and
mov
test
mov
pop
or
mov
sbb
sub
mov
sub
add
xchg
add
mov
dec
adc
mov
and
aam
jg
or
mov
or
push
add
jle
mov
stc
push
mov
stos
stc
inc
adc
mov
insb
dec
fmull
in
fisubrl
data16
cmp
cmp
sbb
jg
sbb
movsl
mov
pop
inc
daa
shl
mov
outsl
xchg
cwtl
pushf
mov
cmp
mov
push
push
into
int
pop
jl
jo
add
nop
xchg
jae
mov
inc
adc
in
mov
in
or
scas
add
mov
pop
lret
sbbb
arpl
outsl
mov
lret
in
xchg
push
push
pop
pop
push
sbb
dec
mov
adc
pop
xor
sub
xor
shrl
iret
iret
imul
pop
and
leave
out
aam
and
cmp
pop
or
aad
mov
repnz
inc
hlt
lea
pop
test
push
es
sub
daa
push
pop
aas
in
sbb
mov
sub
push
and
xchg
icebp
or
stos
daa
pop
test
xchg
rol
loope
mov
jbe
in
icebp
pop
pop
stos
cltd
sub
pop
inc
jecxz
lea
or
jo
hlt
mov
fs
cmp
mov
int
aad
pop
xabort
xor
fsubp
mov
sarl
sbb
mov
or
jno
jmp
mov
mov
mov
jnp
sarb
pop
mov
dec
bound
in
dec
mov
out
jnp
mul
jge
dec
mov
jo
add
pop
mov
adc
cld
jl
xchg
inc
das
xchg
cmp
inc
in
adc
or
push
xor
or
xchg
sbbl
out
outsl
or
xchg
popf
jne
cld
jge
stc
nop
cld
pop
addb
test
dec
ss
adc
cmc
cmpsb
sbb
movups
out
fcomp
add
fisubrs
sub
pop
or
dec
cmpsl
mov
xchg
in
sbb
aam
jle
jne
adc
pop
es
test
jmp
mov
push
or
sbb
mov
or
loope
les
pop
stc
mov
inc
adcb
leave
fdivl
inc
xor
outsb
xor
push
movsl
popa
mov
call
jl
jmp
sahf
cmpsb
and
fsub
jae
xor
xlat
lock
insl
jge
and
mov
jmp
sbb
add
sbb
jns
es
dec
inc
stc
sbb
js
mov
add
stos
stc
mov
ja
add
mov
or
dec
test
pop
lret
loope
sbb
fiaddl
jp
or
lahf
popa
inc
cmp
sbb
sbb
imul
mov
mov
lret
movsb
push
pop
aaa
jno
divl
mov
ss
pop
test
cmp
std
js
add
lock
sub
cmc
and
cmp
push
pop
mov
jo
sti
lock
push
ret
sbb
lcall
scas
popa
mov
test
inc
lock
in
cli
mov
hlt
rorb
and
mov
jb
movsb
adc
jmp
lret
sbb
or
sbb
pop
dec
je,pn
sahf
mov
sbb
pop
and
aaa
mov
jle
or
jnp
mov
cli
dec
imul
ret
mov
leave
mov
pop
sbb
loopne
clc
sbb
pop
dec
or
mov
cli
push
sub
add
sub
daa
pop
adc
add
adc
add
aas
dec
lcall
mov
lods
les
mov
ja
adc
push
mov
jle
or
outsl
mov
dec
sahf
inc
test
sahf
xor
pop
test
js
idivb
sub
dec
mov
xchg
push
jo
imul
das
pop
jnp
fstl
orl
mov
or
outsl
push
mov
xchg
vpunpcklbw
daa
lods
sbb
adc
sbb
mov
je
cmpl
orb
cmpsl
pop
xor
and
xor
cmp
dec
pop
leave
push
mov
push
rcr
addr16
fimull
inc
xchg
bound
sub
popa
xor
in
xor
mov
cltd
xor
fcmovnb
nop
shll
sub
pop
mov
sbb
mov
test
out
add
test
adc
xchg
mov
lock
cmp
in
add
aad
fldt
xchg
imul
fidivrl
iret
lret
sbb
mov
pop
pop
paddw
test
push
mov
addr16
jns
mov
dec
dec
xlat
out
lea
fstpt
and
add
aam
fwait
dec
test
lods
imul
or
xchg
xor
frstor
arpl
xchg
add
push
out
and
cmp
jg
nop
add
int
movsl
aas
into
movsl
dec
aaa
out
jnp
inc
pop
add
es
push
ljmp
xchg
addr16
or
mov
sbb
mov
je
jle
add
in
outsb
jg
mov
cli
inc
jl
jl
push
pmaddwd
pusha
inc
jmp
negl
fsubr
movsb
jmp
xchg
dec
push
popa
xor
pop
jecxz
lret
add
add
ss
fsts
movsl
jge
mov
xor
and
add
mov
test
rorb
sub
mov
sbb
int3
mov
push
xor
adc
mov
jmp
bound
mov
cld
mov
and
lds
push
sbb
adc
ljmp
daa
jns
in
pop
sub
mov
dec
mov
mov
lret
ds
push
and
mov
mov
push
mov
xchg
daa
scas
sbb
mov
mov
sbb
loopne
cmp
adc
add
add
jb
insl
mov
pop
mov
adc
daa
movsl
jecxz
jl
ret
sbb
cld
fmull
jle
dec
sub
fldl
clc
dec
ficompl
dec
inc
jo
and
outsb
int
movmskps
inc
mov
pop
test
in
fisttpl
int3
ret
add
adc
ret
jbe
scas
pushf
mov
jae
mov
push
in
pop
in
inc
or
push
xchg
sub
mov
scas
jno
add
std
cmp
pushf
jp
scas
push
out
ljmp
out
pop
stos
sub
stc
mov
adc
mov
mov
jb
jecxz
jbe
sarb
jno
out
in
cltd
cmc
jle
push
repz
xor
sarb
pop
hlt
shl
scas
test
dec
cmpsl
das
fld
cmp
add
sahf
inc
add
mov
inc
pop
jo
lods
loopne
inc
arpl
sbb
inc
and
gs
adc
push
adc
xchg
inc
imul
movsl
dec
mov
cmpsb
mov
xchg
mov
clc
stc
mov
mov
xchg
sub
daa
cmp
ss
cmp
jmp
leave
dec
ljmp
je
push
xchg
shlb
dec
ljmp
leave
enter
adc
and
jge
push
xor
mov
adc
popf
xchg
mov
adc
cmp
mov
or
movsb
inc
adc
lock
jg
push
dec
aas
movsl
dec
adc
lea
push
xchg
push
push
cmpsl
xor
cli
inc
stos
mov
mov
xor
aas
stc
das
and
ss
daa
jmp
xor
or
mov
hlt
mov
fs
in
add
sub
mov
shrl
pop
add
jns
sahf
pop
cli
xlat
test
cmpsl
incb
cli
out
rdmsr
jge
fcmovb
xorb
enter
and
sub
cmpsl
inc
mov
sub
mov
add
jns
test
xlat
mov
pop
test
enter
push
bound
sub
mov
es
jo
inc
loop
test
clc
cwtl
fcoms
xor
push
enter
in
shr
push
jbe
insl
xchg
mov
aam
xchg
xchg
push
mov
cmp
push
jge
xchg
rcrl
jo
je
ds
lock
and
jnp
jnp
xchg
aam
lods
test
es
inc
scas
jo
jle
test
les
cmp
pop
push
sbb
cmpsb
sbb
int3
pusha
pop
xchg
arpl
gs
js
repz
push
jns
inc
ja
push
xlat
push
sti
lods
loopne
mov
adc
aas
push
xchg
ret
mov
and
dec
push
icebp
jge
rorb
sahf
js
add
or
add
setg
push
or
mov
adcb
cmpb
pop
jnp
fdivl
stos
lcall
push
test
mov
insl
inc
movswl
scas
mov
fxch
leave
add
aad
out
rcl
out
jae
inc
mov
push
xchg
adc
lea
out
fbld
test
sub
or
jl
lock
push
mov
enter
fmuls
lcall
outsb
ret
inc
scas
vminpd
enter
loope
in
adc
adc
mov
jmp
insl
lock
mov
lds
mov
add
fs
mov
in
insl
add
test
fistpll
mov
lods
mov
shr
cld
arpl
and
je
stos
mov
mov
mov
pop
xchg
test
pop
clc
lret
lds
jg
lods
out
rolb
or
dec
dec
inc
iret
or
in
pop
add
lds
mov
xor
nop
inc
inc
mov
adc
stc
ss
pop
ret
lret
fisubs
pop
xchg
add
xor
cwtl
daa
or
fisubrl
xchg
sub
ficomps
imul
mov
out
fmul
ds
ret
addr16
mov
push
insl
xor
out
jp
out
stos
rolb
arpl
fdivl
jnp
cmp
adc
sub
loopne
sub
fcmovbe
movsl
sub
jge
lock
negl
cmp
addr16
sub
lods
sub
push
and
dec
mov
in
mov
int3
pushf
ficoml
and
pop
insb
fwait
push
call
leave
popf
xchg
daa
into
push
das
adc
cmpsb
mov
dec
sub
aaa
jge
xor
add
xor
xor
xchg
movsb
inc
pop
or
mov
stc
cwtl
adcl
test
daa
in
scas
and
mov
mov
xorl
sub
fmulp
incb
test
inc
adc
scas
jge
mov
pop
mov
cmc
ja
fcoms
push
inc
inc
mov
pop
test
add
ficoml
pop
adc
dec
sbb
push
fcoml
adc
stos
pop
mov
inc
pusha
xor
sti
xchg
mov
cs
mov
call
out
adc
stos
int3
rorb
insl
mov
sbb
cmpsl
xchg
mov
sbb
xchg
movsb
in
sbb
mov
mov
arpl
jl
mov
jmp
push
aam
adcb
and
or
mov
dec
leave
mov
or
xchg
js
in
and
icebp
sub
lds
cmp
mov
test
or
sti
dec
sarl
data16
ret
rcr
adc
sti
mov
icebp
lret
bound
xor
cmpsb
rorl
dec
lahf
pushf
mov
das
mov
and
dec
xchg
rcl
loope
or
mov
xchg
jp
cmp
movsl
leave
and
push
mov
adc
shll
mov
mov
subb
xlat
fiadds
mov
pop
inc
pushf
imul
ret
fcmove
scas
mov
inc
dec
dec
mov
push
ds
xor
inc
jp
arpl
imul
jno
or
scas
std
jl
out
lret
adc
lods
xchg
je
or
adc
lea
sti
cmp
mov
adc
mov
and
lcall
pop
xor
shlb
xor
rolb
lods
lahf
ja
jbe
and
out
fs
pusha
adc
cwtl
hlt
loope
rsm
dec
pop
je
lock
inc
xchg
test
out
mov
jae
movsl
xor
push
adc
fmuls
test
lcall
jb
sarl
jmp
mov
cmp
sbbb
repnz
out
loop
stos
mov
mov
push
sbb
inc
mov
jne
jmp
mov
pop
dec
push
sbb
dec
jae
jl
adc
inc
dec
dec
shr
repnz
pop
adc
sahf
scas
jnp
enter
ret
mov
cmp
adc
subps
rcl
pop
cli
sub
dec
xor
pop
xor
inc
mov
stc
fnstenv
pop
push
xor
imul
sti
push
lahf
xchg
cmp
call
or
imul
inc
int
insl
repnz
jle
fcmovu
ret
fcoms
mov
xor
movsb
sub
movsl
out
subl
stc
nop
into
inc
push
xchg
lock
pop
push
sub
mov
mov
popa
inc
sbb
mov
aas
dec
data16
mov
loope
std
cmp
jb
repz
push
repz
enter
jb
inc
ja
xchg
or
movl
xchg
int
jle
jae
outsb
push
mov
push
outsb
ret
fisubl
imul
ss
mov
mov
test
and
mov
lock
mov
in
jl
ja
cmpsb
es
or
xchg
add
fisubl
push
movsb
pop
adc
mov
sbb
mov
test
xchg
aas
push
sbb
adc
rcrl
add
dec
mov
in
jae
xchg
push
rcrl
xor
push
jnp
dec
mov
sub
leave
dec
pop
enter
insb
nop
mov
mov
pop
fcomps
es
in
std
imul
sbb
adc
std
push
mov
push
mov
sbb
or
push
imul
loopne
mov
das
lcall
pop
jns
xchg
mov
test
pop
icebp
sbb
inc
push
and
cld
push
arpl
addb
xor
popa
sub
addr16
notb
mov
mov
xor
jmp
xchg
daa
xchg
sar
lret
push
je
rorl
mov
add
icebp
lahf
pop
lret
mov
or
jmp
lods
es
bound
jnp
int
sahf
or
mov
sub
xchg
test
js
sbb
rorb
aaa
stc
add
sbb
rcll
push
xabort
fisubrl
jmp
arpl
mov
out
add
sbb
hlt
jle
fsubl
inc
jmp
mov
test
scas
push
cmp
sub
fimuls
insl
cmp
lods
fistpll
xlat
cmp
lock
push
push
fwait
xor
outsb
and
jnp
mov
and
dec
popa
js
jmp
mov
in
pop
stos
jae
fldl
xor
rorb
mov
scas
nopl
lods
out
jne
sahf
mov
push
insl
and
fildll
jp
es
clc
sarb
adc
pop
lods
dec
cmc
jecxz
xlat
pop
or
sti
add
lahf
cmp
outsl
mov
push
mov
cmpsb
ret
sub
mov
mov
insb
cmc
ficoms
xor
mov
sbb
push
outsb
push
int
pushf
adc
or
insl
imul
or
sbb
outsl
in
xor
in
add
inc
mov
jmp
cld
dec
out
test
dec
cwtl
xchg
and
cmpsl
xchg
fyl2x
mov
cmp
sub
xor
iret
cmp
mov
xchg
xor
fmull
adc
out
mov
cmpsb
pop
jecxz
fisttpl
outsb
out
cmpsl
in
imul
xchg
push
nop
lock
mov
stos
imul
sub
jg
sbb
aam
dec
push
or
cmp
dec
popf
mov
mov
mov
push
stos
int3
addr16
push
mov
aaa
cwtl
push
aam
shll
jge
dec
pop
mov
in
lds
enter
mov
mov
insl
mov
adc
adc
clc
dec
sbb
jns
icebp
xor
aam
bswap
pop
in
ljmp
push
rcrl
popf
test
mov
test
dec
jmp
call
test
lods
xor
mov
call
out
or
jno
dec
js
sub
and
mov
dec
hlt
out
lcall
or
ljmp
dec
sub
shlb
adc
aaa
hlt
jmp
inc
lahf
mov
mov
inc
outsl
gs
inc
add
fadd
cs
out
loope,pt
mov
fwait
out
mov
out
scas
push
jbe
jle
inc
add
cmp
nop
imul
push
imul
pop
mov
shlb
jo
mov
cli
pop
add
sbbb
das
xchg
push
sti
pusha
and
pop
sti
gs
push
test
xor
fcomps
mov
mov
dec
cli
imul
cmp
xchg
lcall
insb
arpl
ret
fdivrl
cmp
pop
xchg
add
lahf
mov
add
and
pop
sbb
pop
movsb
sbb
mov
sbb
mov
lock
outsb
divl
stc
mov
cmpsb
je
pop
cmpsb
or
daa
ficoml
shl
or
pop
mov
cli
ss
jo
movsl
faddl
int3
es
js
or
jo
outsb
sub
imul
xor
mov
cmp
sub
int3
or
sub
flds
dec
ret
int3
cmp
pop
pop
out
adc
pop
or
arpl
adc
lods
mov
rolb
lea
mov
je
sub
and
inc
fimull
adc
pop
add
les
lret
in
sahf
stos
ss
jno
sub
insb
mov
or
in
lods
leave
imul
xlat
loopne
std
outsb
xor
adc
stos
xchg
push
mov
pop
pop
ret
ds
mov
xlat
add
sbb
pop
fisttpl
in
mov
xchg
outsb
mov
rolb
xchg
jl
lret
cmp
push
inc
sbb
gs
xchg
cs
lods
out
outsl
leave
movsl
je
add
jo
dec
and
dec
faddl
iret
shll
push
lds
loope
sub
sar
sbb
fmull
adc
in
loopne
fsubs
hlt
loopne
jp
mov
mov
add
gs
xor
xlat
or
jg
add
mov
pop
xchg
negl
ret
jecxz
fadds
popf
in
sbb
insl
dec
das
fcmovnb
bound
xchg
mov
sahf
mov
mov
lcall
cltd
int
je
pop
out
pop
in
iret
add
lea
outsb
xchg
aas
xchg
jge
or
mov
xchg
fwait
stos
mov
mov
xor
add
mov
pop
in
push
mov
and
cli
loope
and
pop
xor
cld
dec
bound
inc
add
xchg
inc
in
loop
cmp
xchg
xor
inc
pusha
hlt
mov
scas
scas
stc
dec
cltd
cmp
cmp
jo
or
push
dec
xor
xchg
aad
imul
mov
sbb
mov
inc
dec
arpl
xchg
inc
xchg
push
sub
mov
andb
cld
fwait
mov
dec
in
xor
int3
popa
xchg
js
subl
push
leave
pop
xchg
cli
and
popa
pop
fsubrs
sahf
in
leave
pop
mov
aad
mov
add
sbb
sbb
cmp
push
mov
sub
xorb
mov
xor
and
jne
jl
cmpsb
and
test
xchg
and
decb
xchg
lret
and
test
mov
and
cmc
insb
jl
push
jnp
sar
loopne
sbb
jmp
mov
lods
int
pop
popa
dec
test
aad
lahf
sti
and
out
pop
mov
inc
popa
xor
pushf
push
lea
fisubl
and
mov
push
fmull
mov
loopne
lret
int
add
loop
scas
xchg
push
add
fstpt
stc
mov
add
mov
imul
sbb
sar
and
pop
xor
sbb
jmp
jge
mov
pushf
nop
arpl
scas
adc
cmp
adc
ror
mov
js
pop
xchg
test
test
mov
xchg
add
pop
cld
mov
test
push
test
and
gs
testl
rcrl
rcl
jecxz
gs
pop
mov
insb
rorb
fiadds
inc
lds
xchg
or
insb
test
dec
push
jmp
lea
pusha
lods
loop
inc
mov
inc
pop
inc
inc
add
shrl
ja
mov
xor
add
int
into
dec
dec
scas
pop
pop
mov
lret
inc
pushf
or
sbb
mov
pop
stos
cmp
fs
add
xchg
mov
mov
lcall
pop
sbb
mov
out
cmp
ds
lods
xchg
subb
cmp
repz
mov
jg
iret
dec
lods
mov
xor
subb
scas
xchg
cltd
mov
addb
push
mov
adc
cli
stos
cmp
loop
xchg
push
cli
pop
dec
adc
push
sti
mov
jnp
pop
and
int
cltd
xchg
sub
ret
insb
fildl
jae
iret
ret
or
pop
mov
mov
jnp
sub
push
push
imul
dec
jno
sub
shrl
fldl2e
push
and
je
jb
insb
mov
jle
fimuls
out
sbb
jno
mov
pop
popa
pop
pop
add
std
test
xchg
imul
es
or
lret
ret
xchg
add
bound
mov
test
push
icebp
ds
cld
mov
pop
call
adc
andl
clc
cmpsl
cmpl
lock
jecxz
lcall
lods
fwait
inc
fwait
sti
push
ljmp
mov
leave
mov
enter
clc
mov
jnp
fimuls
push
sub
sbb
fs
setp
jmp
cmp
loopne
ja
in
sub
push
pop
fstps
jp
ret
lock
cmp
mov
es
mov
sti
adc
push
in
push
jp
xor
fdivr
jp
fcomi
mov
mov
jg
roll
int
stc
add
cmp
dec
loopne
insb
flds
dec
mov
divl
push
add
pop
fcmovnb
stc
sub
aad
push
insb
js
pop
pop
mov
orl
push
iret
dec
mov
insb
lcall
stos
jmp
mov
daa
xlat
mov
sub
lods
mov
xor
fisubrl
arpl
add
je
pusha
jno
test
lea
xchg
pop
push
mov
sub
shl
test
lret
sbb
jb
push
cmp
xor
push
movsb
mov
clc
jne
inc
leave
cmpb
test
sub
loope
mov
test
push
jns
xchg
addb
add
rcrb
xchg
lds
popa
or
movq
mov
dec
push
add
mov
ffree
mov
push
out
jno
ret
bound
inc
mov
add
pop
out
cmp
cmp
mov
lahf
ss
std
rcll
aad
mov
or
in
fnstcw
fmull
ja
mov
test
rorl
jecxz
xor
movsb
mov
mov
test
jle
xor
pusha
mov
mov
stc
mov
adc
les
cmp
pushf
movsb
mov
pop
inc
inc
scas
xor
fwait
inc
stos
xchg
xor
adc
out
jb
incl
sub
lret
jle
scas
cld
rcr
insb
fimull
jmp
sbbb
ficomps
shlb
cmpsb
ds
jnp
jmp
mov
movlps
xchg
or
push
pop
gs
lcall
push
sub
es
pusha
add
push
jle
sbb
dec
xor
pop
pop
shrl
lds
or
sbb
int
rorl
push
cmpsl
loope
fimuls
sbb
aaa
sbb
add
mov
xlat
lods
pushf
aam
and
jbe
jo
pop
adc
sbb
shrl
lock
lods
test
sub
pop
mov
cwtl
mov
sbb
test
test
insb
jo
daa
xchg
cmp
popf
lret
jl
jge
lcall
adc
fsubl
push
and
push
push
xor
shrb
shl
fidivrs
notb
push
mov
mov
icebp
cmp
das
mov
adc
rol
mov
add
imul
aas
adc
inc
repz
add
pusha
mov
faddl
xor
or
adc
xchg
cmp
xchg
sub
jl
lods
lods
pop
outsb
sub
push
pop
push
push
or
mov
loop
shlb
mov
or
ret
jmp
stos
pushf
out
shrl
jnp
dec
ds
mov
sub
repz
rolb
cmpsl
or
dec
xor
xchg
push
push
mov
add
test
cmp
int3
xchg
ss
jecxz
and
outsl
add
fwait
push
es
pop
push
fcomp
fistpl
leave
push
cmp
push
test
xchg
mov
pop
lcall
adc
mov
pop
rorb
or
frstor
mov
sub
stos
mov
mov
xor
jmp
add
popa
xchg
push
loop
mov
jmp
push
push
mov
ret
cmp
popf
faddp
pop
mov
shlb
jmp
or
dec
rolb
adc
cwtl
cld
dec
xor
repnz
negl
cmp
mov
mov
pop
push
int
mov
xor
mov
jno
stos
rorl
sub
imul
fwait
or
inc
js
clc
int3
aaa
xchg
pop
xchg
inc
movsb
mov
int
xor
mov
stos
mov
and
pop
add
xchg
pop
xchg
jb
pop
rorl
cmp
js
test
sbb
pop
fsubrl
xlat
sahf
pushf
push
sbb
mov
and
xorb
push
dec
xor
add
dec
add
dec
pusha
xor
jmp
pop
adc
dec
sub
rcr
bound
and
mov
mov
and
mov
not
jnp
jmp
out
js
rcl
cmpsl
inc
cmpsb
sub
lret
stos
in
xor
popf
mul
repz
push
int
aad
pushf
mov
cmp
test
xor
cs
push
test
cli
push
sarl
dec
xor
push
dec
xchg
xchg
jl
loopne
dec
aaa
adc
mov
int
push
cwtl
inc
xchg
loopne
gs
paddd
pop
and
and
and
rolb
loop
pop
mov
out
arpl
and
adc
jbe
or
mov
jmp
je
imul
psrld
jp
inc
jecxz
outsl
dec
icebp
mov
sbb
dec
insl
test
inc
and
mov
inc
push
ficompl
pop
and
jmp
cmp
inc
mov
mov
fistl
arpl
and
inc
push
and
aam
and
cmpsb
rcrb
les
xchg
adc
lret
repz
and
jge
sbb
stos
and
mov
adc
mov
sub
repz
or
mov
sbb
mov
adc
movsb
jg
pop
jge
imul
call
lea
cwtl
aaa
or
xor
pop
jle
push
popf
mov
xor
mov
mov
push
shrb
insl
inc
jp
into
push
fs
andb
xor
data16
xchg
add
mulb
mov
test
movsl
ror
push
mov
imul
sbb
push
daa
adc
fs
in
inc
sahf
or
and
push
cmp
dec
imul
cld
push
jle
or
mulb
ljmp
lea
enter
mov
dec
xor
xchg
rcrl
scas
inc
cmc
aaa
icebp
xorb
adc
inc
adc
inc
or
mulb
fisubrs
mov
or
lret
ret
xchg
cmc
arpl
adc
lods
pop
ljmp
inc
dec
ljmp
imul
pop
mov
popf
mov
mov
leave
hlt
lock
outsl
cltd
mov
sahf
adc
fpatan
clc
and
push
xchg
jmp
inc
mov
dec
jecxz
mov
loope
xchg
out
in
std
pusha
gs
fistps
add
mov
inc
arpl
sub
pushf
jae
mov
and
mov
xor
ds
lret
push
cmp
and
mov
addl
out
pop
loopne
in
insl
aas
sub
xchg
stos
jnp
mov
cmc
push
orl
sbb
faddl
mov
lds
and
add
je
push
inc
int3
mov
xor
aas
mov
or
mov
xchg
out
mov
cmp
xor
sti
push
mov
sub
and
orl
je
jmp
loopne
sbb
and
xor
xchg
xchg
push
cmc
std
push
or
push
jle
hlt
or
jno
and
sahf
cs
mov
push
or
mov
in
pushf
into
add
sub
bswap
imul
imul
cmpsb
test
pop
or
clc
mov
cmp
notb
add
push
xor
test
mov
iret
push
lret
sbb
test
add
std
cmp
or
jmp
adc
mov
xor
bound
jns
push
mov
mov
mov
ds
fdivrl
nop
sti
mov
mov
rolb
out
adc
jbe
push
lods
shl
mov
in
jl
xchg
pop
test
andl
fiadds
insb
fwait
stos
out
lea
mov
mov
fs
jbe
push
jbe
inc
cmp
mov
aam
subl
mov
ja
mov
daa
xor
adc
mov
cs
and
popa
ljmp
dec
push
andl
stos
xor
lcall
cli
call
ret
or
divb
jge
xchg
negb
cwtl
jbe
aam
mov
mov
pusha
repnz
xlat
xchg
repz
dec
mov
jge
loop
hlt
cld
std
mov
mov
cs
adc
stos
in
mov
sub
sahf
jge
cs
sbb
lods
repnz
pop
test
jle
jmp
adc
leave
repz
mov
call
cmp
sub
mov
dec
imulb
les
and
or
adc
mov
xor
in
scas
div
out
nop
add
popf
adc
mov
in
outsb
sbb
inc
aad
jge
and
stos
and
jb
pop
pop
clc
mov
xchg
mov
push
pop
inc
adc
cs
ja
xor
loop
sti
or
call
cmpsl
pushl
sub
pusha
testl
add
shlb
push
fisubrl
push
in
pop
arpl
dec
lahf
pushf
shl
mov
stc
jp
ret
cmp
push
mov
les
es
or
inc
ljmp
in
sub
mov
stos
sbbb
or
dec
cmpsb
test
insl
fidivs
cmc
sbb
lock
cmp
rcll
dec
dec
jle
cmp
jmp
mov
jle
ret
dec
dec
add
and
scas
jl
or
add
mov
pop
lret
jle,pt
lahf
pushf
je
sahf
xchg
dec
aam
jns
out
inc
repz
pop
sahf
loope
daa
jle
cmp
xchg
cmp
inc
mov
repnz
jg
inc
mov
mov
dec
mov
sub
iret
stos
dec
push
aad
ss
jge
jo
adc
jns
out
adc
je
mov
popl
mov
cmpsb
arpl
cwtl
and
dec
jnp
insl
mov
mov
sbb
lea
test
pop
pop
mov
repz
cld
mov
lahf
scas
sbb
or
mov
pop
xor
das
cld
data16
insb
int3
test
and
lret
dec
imul
inc
ror
inc
sub
mov
inc
js
or
in
mull
and
or
pop
stos
mov
jbe
push
cwtl
xchg
push
data16
mov
xor
std
xchg
push
orb
jb
scas
pop
adc
push
xorb
mov
xchg
mov
pushl
je
inc
sbb
iret
stos
pop
add
movb
push
je
pop
lret
stc
test
pop
gs
adc
jmp
ja
jle
pusha
enter
inc
dec
cmpsb
into
adc
push
inc
mov
lds
and
cmp
ja
fwait
fwait
insb
subl
add
xchg
and
push
je
sbb
or
inc
dec
fistpl
sub
sbb
cmc
ljmp
mov
lds
cmpsb
stos
scas
hlt
mov
jae
sbb
ljmp
mov
adc
dec
xor
fidivrs
in
jno
test
jl
sbb
sbb
lock
mov
sub
xchg
dec
add
fisubl
mov
fbld
sub
jge
jp
push
pop
xlat
stos
inc
mov
adc
out
arpl
in
iret
cmpsl
mov
dec
xchg
cmp
dec
add
rolb
and
lods
and
cwtl
push
iret
imul
and
mov
adc
and
in
sbb
fsubrl
mov
cld
push
and
or
mov
and
outsl
fsubl
or
fmull
add
repz
sbb
int3
rcll
mov
loop
mov
xchg
mov
xor
and
pop
mov
cmpb
sub
mov
add
andb
cld
xchg
outsb
in
adc
lret
loop
jnp
cli
out
push
out
shlb
xchg
mov
jae
cmpb
push
inc
pop
push
ds
mov
insb
stc
mov
sub
inc
add
and
mov
or
mov
jmp
adc
adc
scas
sbb
push
in
outsl
inc
stc
imul
mov
ret
mov
pop
call
inc
mov
ja
pop
iret
scas
js
mov
in
pop
outsl
jmp
push
mov
ror
push
mov
mov
xchg
add
rcll
rcll
int
jmp
xchg
dec
out
aaa
cmp
jno
scas
mov
mov
in
jns
jg
stos
cld
cmpsb
lds
outsb
jg
cmpsb
jae
pop
sbb
stos
pop
mov
shrl
leave
lret
ret
add
xor
mov
jmp
push
in
stos
dec
xchg
rclb
jne
mov
outsb
push
mov
lret
push
in
sbb
inc
icebp
out
adc
ljmp
pop
in
dec
push
xor
add
imul
nop
push
aaa
and
mov
aas
pop
scas
sub
lret
and
fldt
out
or
push
pop
mov
mov
sbb
mov
mov
cmp
rorb
sbb
xchg
popf
mov
pop
push
mov
negl
sub
adc
inc
inc
addb
cmc
mov
fidivs
add
shll
decl
mov
adc
mov
test
scas
lds
or
inc
push
xchg
repnz
push
inc
push
orb
push
push
jnp
push
mov
mov
ss
add
push
jne
mov
xchg
jo
jns
cmp
fidivs
std
jmp
pop
xchg
imul
adcb
fs
sbb
mov
test
es
mov
inc
fisubs
jb
xor
loope
adc
ret
and
jns
fldl
pop
adc
movsl
popa
sub
and
add
jno
jnp
push
sbb
jg
cwtl
mov
xchg
jg
pop
shll
mov
repz
pop
cmpsl
cmpsb
aas
shlb
mov
leave
dec
dec
out
ret
clc
cmp
aam
mov
dec
inc
adc
add
scas
std
cld
push
mov
pusha
pop
sti
in
xor
xchg
insl
add
xchg
dec
or
js
sbb
fiadds
mov
sbb
mov
jns
repz
test
pop
aad
cli
dec
sub
lcall
mov
sbb
inc
inc
xchg
dec
mov
call
cli
fsubr
pop
fs
xor
jb
lret
lods
subl
cld
nop
mov
xchg
xor
mov
inc
adc
movsl
sbb
pop
mov
stc
test
mov
push
jle
sbb
mov
in
arpl
fcompl
rolb
das
es
nop
fstpl
lock
sahf
fsubrs
push
xor
lahf
xlat
mov
bound
cmc
sub
jne
js
mov
mov
sub
in
mov
or
out
xor
repz
rcrb
push
xchg
xchg
clc
xchg
jl
mov
mov
std
cmp
iret
add
pushf
gs
jo
adc
mov
pop
enter
cmpsb
sub
inc
mov
std
or
mov
xor
test
cmp
fildl
aaa
loop
mov
lock
hlt
pop
aad
jnp
push
mov
scas
ja
mov
jmp
js
xor
push
push
mov
aad
sbb
fs
cmc
or
mov
mov
or
cmp
stos
pop
cmp
inc
out
sub
mov
dec
in
stos
mov
sbb
or
jp
pop
pop
pop
es
xor
jmp
xlat
cld
cmp
or
xchg
cmpsb
push
repnz
stos
push
push
fcoms
adc
cmp
das
aas
cmp
loope
sub
push
mov
adcb
xchg
or
imul
test
fisubrs
das
push
jle
ds
xor
lcall
lahf
insl
lock
jp
mov
lret
push
outsl
push
daa
leave
fsub
push
call
xchg
mov
rcll
fmul
xchg
fistpl
ljmp
pop
mov
arpl
sahf
inc
xlat
mov
in
bound
dec
jno
mov
xor
jae
lahf
add
shrl
mov
out
cli
inc
add
sub
jecxz
fsts
jp
push
mov
jmp
test
cs
sub
or
cmp
scas
push
mov
fstpl
mov
aam
stos
rolb
mov
aaa
ret
inc
xchg
or
lea
mov
aad
fiadds
jb
popa
sub
aas
lock
push
cmp
xchg
pavgw
insl
aaa
loope
dec
cmp
xchg
sub
jle
adc
inc
jge
outsl
sbb
aaa
test
add
fimull
inc
xor
je
mov
lock
pushf
dec
int
idiv
rclb
xchg
stos
sahf
jne
cmp
mov
push
dec
lds
or
xchg
mov
mov
dec
fisttpll
cmp
add
or
pushf
sarb
inc
push
cmpsl
adc
sbb
lret
xchg
jae
jae
xchg
rclb
dec
shrb
ret
sar
jbe
sbb
and
jmp
push
inc
lret
pop
in
mov
mov
clc
call
mov
mov
mov
push
mov
hlt
adc
push
dec
notl
test
stc
in
mov
andb
xor
inc
cltd
mov
mov
shlb
cwtl
mov
mov
mov
hlt
sbbb
and
in
jne
xor
orl
jae
mov
jg
mov
lret
mov
sbb
insb
xchg
fisttpll
xor
push
sbb
push
pop
jecxz
cmp
ror
imul
lds
pop
and
mov
push
mov
mov
std
jle
add
imul
push
sbb
and
pop
adc
testl
test
subl
inc
xor
fiaddl
xchg
dec
ret
cld
add
push
xor
jmp
pop
jae
jp
adc
mov
sahf
popf
fcoms
sub
pop
mov
jb
aaa
mov
or
mov
jge
or
daa
inc
adc
jg
bound
mov
fiadds
cwtl
sub
and
out
inc
sub
sbb
rcr
xlat
shrb
mov
pop
fsubrl
cltd
sub
xchg
jns
sub
icebp
pusha
outsl
jns
sti
mov
and
stos
out
test
arpl
into
outsb
jl
sub
mov
popl
sbb
in
cmpl
repz
pop
adc
jo
adc
sub
insl
pop
dec
adc
lret
cltd
inc
adc
push
fisubrs
inc
xorb
shl
mov
fisubl
dec
jecxz
mov
xchg
dec
mov
sarb
xor
adc
jne
test
push
out
int3
test
xlat
sbb
cmp
mov
push
add
pop
add
aaa
inc
mov
imul
int3
pop
xor
aad
ficomps
dec
repz
dec
out
stos
adc
jbe
je
mov
push
das
lret
sub
insb
sbb
shl
rorl
pop
mov
sbb
and
imul
dec
mov
insl
mov
push
repz
push
xorl
inc
mov
push
pop
xchg
jge
or
inc
out
das
dec
sti
mov
jge
pop
das
jo
sbb
jmp
mov
aam
clc
repnz
je
sub
popf
out
pop
cld
stos
aad
aaa
ljmp
dec
inc
mov
lcall
rcrl
push
jle
subl
xor
imul
adc
loope
mov
pop
pop
cmp
insb
jle
out
mov
lea
inc
insl
icebp
ds
jle
push
adc
rcrb
xchg
dec
aaa
int
mov
add
sti
ljmp
outsb
push
mov
loopne
shrb
xchg
sub
loope
fwait
add
sbbl
sbbb
jmp
pop
insl
dec
xchg
cmp
jbe
jle
scas
leave
adc
pop
imul
dec
push
leave
sbb
dec
push
int
xor
in
cld
push
fsubr
idivb
mov
insl
inc
lds
cmpsb
inc
fists
or
adc
sahf
cltd
inc
pop
inc
xchg
mov
mov
icebp
sub
push
push
push
sbbl
mov
out
bound
mov
xor
lods
push
pop
push
jmp
fldcw
xor
pop
or
icebp
push
inc
fmuls
xchg
adc
push
repnz
sbb
les
iret
das
inc
movsb
adc
jp
xchg
stc
or
lcall
fsubr
jb
in
push
int
dec
or
fldcw
sub
in
outsl
imul
mov
cmp
ret
shll
cmpsl
sub
pop
dec
cmp
fsts
mov
xor
jnp
pop
lds
je
cmp
ftst
fsubl
loop
movl
xorl
or
outsb
mov
or
repnz
mov
push
scas
xchg
fldenv
mov
in
add
mov
mov
aad
jg
and
cmpsl
lods
hlt
jle
sub
cld
cmp
sti
pop
lds
push
mov
in
scas
int
mov
mov
and
lods
call
adc
cmp
cs
add
mov
daa
sarl
shrb
dec
test
orl
mov
sub
das
xor
jno
cs
shrl
cltd
xor
cmp
add
mov
mov
jge
adc
cli
dec
iret
movsl
dec
lods
inc
push
rcl
xorb
cld
scas
lahf
mov
fptan
por
mov
addr16
jecxz
adc
roll
loop
dec
rolb
scas
test
std
pop
pop
addr16
sbb
sbb
xchg
in
pop
xor
pop
movsl
jnp
dec
inc
and
jb
push
test
mov
scas
add
jmp
decl
popf
ds
pop
mov
mov
lock
test
push
ficoml
std
xor
arpl
push
cli
pop
cltd
or
hlt
aaa
jne
mov
loopne
sub
mov
xor
dec
in
inc
inc
fisubrs
xor
jne
aam
in
mov
pop
aas
stos
sub
dec
pushf
dec
push
jmp
movsb
sbb
and
leave
hlt
insl
rdmsr
xchg
add
inc
out
mov
jbe
rcll
or
lret
push
fisubrl
icebp
fucomp
inc
nop
mov
iret
lcall
pop
jle
cli
add
and
lahf
xchg
int
das
mov
ja
mov
push
loop
mov
cmp
pusha
xor
cmc
imul
mov
hlt
enter
pop
jecxz
jg
sti
test
xchg
xor
outsb
stc
adc
adc
jmp
out
shlb
int3
mov
shl
and
orb
xchg
jecxz
popf
push
xor
cmp
push
mov
outsb
mov
mov
adc
ret
jae
mov
imul
push
sbb
or
test
mov
cwtl
sbb
outsl
stos
xchg
and
adcb
out
insb
mov
and
mov
not
lods
mov
sub
push
pop
mov
sub
ret
js
inc
mov
adc
cmp
icebp
cltd
popa
lods
xor
inc
mov
mov
lcall
cmp
nop
dec
cmpsl
sbb
and
push
clc
pusha
mov
push
sbb
adc
std
addr16
mov
je
loope
push
pop
outsl
push
mov
nop
xlat
fs
push
inc
push
mov
add
mov
aam
jns
pop
fs
out
fsubr
roll
mov
pop
jb
xor
in
sub
mov
pop
movsl
sub
mov
xchg
stos
sbb
pop
push
dec
fadds
cmp
pop
in
jo
jb
pop
cli
pop
adc
pop
jns
stc
insb
xchg
fcmovb
xchg
icebp
popl
scas
mov
notb
iret
lcall
mull
dec
roll
je
push
dec
cwtl
ja
cli
inc
aas
orb
jle
xchg
movsb
pop
mov
lds
fisttpl
cmp
lea
push
xchg
push
iret
iret
pop
xor
push
push
adc
pop
sbb
daa
pop
cmp
fsubr
jae
jo
imul
add
cmp
icebp
subb
in
jg
mov
dec
xor
mov
dec
insb
adc
cmp
loop
dec
dec
lds
int
adc
pop
mov
xor
lahf
sub
mov
jo
or
pop
or
stos
xorb
jno
or
cmpsb
inc
mov
sbb
jo
adc
cmc
sar
add
mov
add
add
add
outsb
jnp
adc
pop
stc
out
adcl
xor
dec
fstl
adc
fs
sti
mov
pop
adc
dec
and
mov
jno
jg
out
cmc
in
je
mov
pop
and
fistps
pushf
add
or
shrl
add
mov
mov
or
or
int
sbb
jne
xchg
dec
loop
int3
inc
push
fdiv
out
icebp
lock
push
add
pusha
in
and
test
dec
adc
mov
in
mov
sbb
fs
cmp
xchg
jns
bound
out
jmp
adc
les
adc
jg
shr
lret
pop
aam
int3
flds
lods
icebp
jge
es
cmpl
outsb
popa
jle
and
int
dec
mov
and
fmulp
or
or
movsb
fld
push
sti
add
mov
mov
mov
xor
outsl
daa
test
fwait
aaa
dec
pop
dec
dec
lds
mov
jne
mov
push
rcll
xor
dec
ds
insb
adc
inc
xchg
lds
mov
fwait
orl
fs
ret
das
loope
add
dec
sti
dec
add
mov
inc
cmc
pop
jo
inc
outsb
cli
pop
pop
loope
add
cmp
into
xor
andb
call
pop
xchg
adcl
cmp
leave
enter
shr
in
xchg
jmp
xchg
mov
dec
lcall
sub
jmp
push
sarl
cli
jnp
mov
inc
cli
cwtl
cmp
faddl
pop
lcall
nop
inc
pop
mov
out
outsb
and
push
imul
gs
and
repz
jns
aam
xlat
cmp
fsub
hlt
sbb
inc
cmpsb
pop
mov
pushf
enter
cmp
nop
pop
cmp
in
les
dec
jo
sbbl
push
push
add
outsl
out
and
sub
push
sub
das
test
jo
mov
lods
nop
xor
dec
in
push
sub
repnz
shrb
js
out
out
ja
es
je
and
and
movsl
inc
or
lds
inc
cli
sub
sahf
inc
push
jg
imul
mov
or
mov
mov
ss
mov
pop
push
ret
jmp
xchg
adcl
ret
mov
pop
mov
sub
add
sarb
lock
pop
clc
pop
nop
lods
popa
adc
jns
jecxz
jno
sbb
lods
jl
into
push
jp
mov
insb
icebp
push
movsb
xchg
mov
pop
adc
push
ret
push
sbb
pop
xchg
es
sub
pushf
xchg
clc
dec
lods
pop
daa
in
inc
jns
push
adc
jecxz
xchg
add
stos
mov
loopne
xchg
sub
inc
sti
cmp
mov
dec
insl
and
inc
cmp
sbb
cltd
mov
add
mov
fiadds
cli
add
sbb
xchg
jae
push
addl
sbb
xchg
leave
push
dec
add
dec
and
push
movsl
xor
pop
mov
faddl
cmc
cmpsl
ja
xchg
lea
inc
xchg
mov
pop
mov
pop
mov
pop
jne
cmpsb
mov
test
ret
push
jg
outsl
cmp
cmpsl
and
ljmp
cld
sti
popa
jp
xor
cmp
mov
in
jno
sti
and
dec
aam
aad
and
hlt
fdivrs
mov
sbb
xchg
adc
mov
pop
jle
mov
mov
mov
xchg
icebp
pop
xor
jmp
fldcw
inc
out
cmp
xor
xlat
dec
add
jl
mov
es
dec
lods
hlt
dec
lods
movsl
inc
testb
in
pusha
pop
sub
mov
sbb
call
sub
cmp
and
sub
mov
lock
xchg
lods
push
dec
lods
es
and
jns
mov
mov
mov
add
jp
nop
pop
dec
int3
or
mov
cli
arpl
cmp
pop
cmpl
arpl
outsl
pop
ror
sbb
out
dec
pop
rcll
inc
lods
and
mov
jle
hlt
cmp
sub
sub
pop
pop
fwait
jp
lods
mov
jmp
stos
out
dec
out
je
sub
aam
das
pop
xor
jmp
jno
sub
dec
in
jmp
orl
pop
andb
adc
int3
jae
sbb
cmp
mov
into
mov
cld
push
mov
inc
sub
sub
pop
jns
stos
outsb
ss
add
jmp
and
dec
mov
pop
push
ret
bound
pop
shrb
pop
cmpl
loope
movsb
outsb
idivl
fnstcw
loope
mov
xor
lahf
pop
add
nop
dec
dec
cmp
out
and
loopne
filds
dec
inc
adc
jnp
add
lcall
fnsave
out
adcb
dec
sbb
jle
and
jl
push
cli
repnz
mov
push
data16
decl
shll
lods
aam
push
and
stos
mov
cmp
orl
shrb
fisubl
sbb
pop
stc
scas
pushf
outsl
popa
xchg
shrl
loopne
sbb
dec
leave
and
adc
or
add
lods
fsubl
mov
push
scas
out
movsl
push
push
aaa
enter
jp
cmp
sbb
jl
out
xor
loop
pop
xor
dec
jnp
imull
sti
test
inc
push
push
pop
fisubs
pop
cmp
push
gs
push
out
cld
ljmp
cmp
divb
out
xchg
dec
xchg
add
shrl
adc
pushf
mov
dec
push
pop
mov
xchg
int3
mov
sahf
arpl
inc
xor
push
mov
mov
ret
popf
push
or
ror
sub
jbe
je
inc
push
sub
nop
ja
out
pop
test
movsb
cmp
neg
fmulp
adcl
and
xor
icebp
xor
inc
adc
rcrb
cmc
push
stos
movsb
ret
push
iret
sbb
inc
out
out
sub
or
lea
arpl
mov
aas
nop
xchg
hlt
xor
jmp
jne
inc
mov
fdivs
jb
test
cmpsb
icebp
test
add
lahf
push
mov
movsb
cmpb
adc
mov
xchg
notl
lods
addr16
shrl
daa
ja
or
adc
add
mov
repnz
aaa
lahf
dec
call
jns
cs
icebp
push
stos
pop
shlb
pop
aaa
mov
dec
push
xor
test
ss
inc
sub
mov
aas
and
shll
sub
mov
ja
pop
and
dec
stc
mov
rcl
scas
repnz
inc
push
pop
or
add
adc
sti
test
enter
divb
movb
mov
test
subb
sub
inc
jno
movsl
or
orb
mov
aam
movsl
loope
or
or
push
fisubs
sarl
mov
out
lock
es
mov
test
mov
mov
adc
mov
out
add
mov
int3
jecxz
or
lahf
xchg
inc
dec
xor
xor
sub
ja
pop
jmp
testl
mov
dec
jbe
in
leave
xchg
and
imul
rcl
mov
or
push
pop
cs
adc
xchg
mov
mov
aam
mov
cld
lock
pushf
jmp
imul
rolb
mov
and
xor
jae
movsb
xlat
or
add
and
insb
iret
popf
incl
jns
xchg
sub
jp
jo
cmp
add
pop
loop
and
pop
js
divb
xchg
mov
pop
xlat
and
ret
imul
mov
jp
inc
push
fcmovb
notl
xrelease
mov
sarl
or
stos
testb
loopne
sub
pop
test
test
sub
inc
push
xchg
movsb
rorb
gs
mov
mov
push
xchg
mov
das
mov
iret
out
add
pop
and
repnz
or
loop
sub
movsb
add
mov
cs
sahf
mov
xor
cmpsb
ret
mov
adc
into
jae
inc
sbb
sub
sahf
fistl
sub
add
mov
xor
dec
in
jno
loop
leave
xchg
fistpll
mov
add
ds
push
mov
fwait
mov
mov
mov
xor
scas
mov
cmp
mov
lret
lock
and
mov
adc
pop
out
outsb
mov
push
sbb
push
rcrb
sar
jbe
es
xorl
pop
hlt
cmpl
mov
scas
mov
mov
mov
jp
stos
mov
inc
movsl
ret
mov
hlt
xchg
pop
and
cltd
xchg
in
add
mov
jge
sub
std
mov
lcall
mov
mov
adc
and
or
jb
loopne
push
imul
adc
jns
mov
sti
pop
out
jb
shrb
sbb
mov
cld
insl
hlt
daa
xor
lds
sub
mov
add
nop
testb
data16
inc
hlt
xchg
pop
stos
rcrl
pop
pop
test
into
stc
mov
enter
ret
out
dec
pushf
inc
inc
mov
jno
xchg
in
mov
mov
add
ds
or
ss
test
jb
adc
pop
ljmp
jne
les
xor
sbb
test
jle
sar
loopne
icebp
sub
imul
lds
cmp
lcall
arpl
ret
lds
cmp
add
cwtl
inc
in
jle
pop
pop
into
jmp
sbb
add
mov
hlt
pop
shlb
lods
cmp
sbbb
sbb
mov
lds
pop
inc
movsl
in
sub
add
das
ds
or
pushf
stos
push
xchg
subb
mov
and
popa
jp
scas
aad
sbb
adc
dec
push
jne
cmpsl
popa
add
mov
addr16
add
int3
cs
pusha
inc
lcall
or
notb
ljmp
std
mov
cs
add
mov
fdivr
mov
iret
push
cltd
fidivrs
stos
aam
in
inc
push
mov
lmsw
and
xchg
in
sbb
data16
outsl
cli
int
inc
inc
int3
and
ret
test
push
pushf
xchg
inc
jg
sub
push
push
lret
daa
imul
push
add
pop
lea
outsb
ret
js
push
mov
jne
push
dec
inc
fsubrp
pop
push
cld
cmp
ret
push
fdiv
fisttpl
xchg
add
push
movsb
sub
shlb
adc
imul
hlt
rcrb
movsb
add
push
fsubr
insl
aam
dec
inc
pop
add
ret
out
inc
mov
aas
jbe
scas
mov
dec
mov
mov
xor
test
cmp
sub
sub
dec
ljmp
call
lret
cmpsb
sbb
pop
aaa
sbb
dec
dec
add
outsl
xchg
outsl
pop
push
out
repz
nop
sbb
sub
pushf
fstps
les
lret
jno
das
sbb
icebp
mov
aam
push
pop
xor
mov
fcompl
adc
movsl
test
cld
addr16
rcrl
ja
pushf
and
outsl
shl
pop
pop
ljmp
jp
inc
pusha
jbe
aas
add
ljmp
add
es
mov
jg
jl
inc
and
dec
or
rorb
push
es
push
outsl
cli
int
stos
add
arpl
adc
mov
sahf
cmp
movsb
mov
inc
sub
aad
jg
mov
jno
add
stos
jle
fucomip
inc
ljmp
dec
pop
cmpsl
fadd
lcall
inc
arpl
ds
push
insl
xchg
xchg
cmp
jae
jle
fisubrl
call
dec
dec
sub
sarb
xlat
dec
insb
out
mov
insl
ja
cmp
jp
rcr
and
mov
mov
jge
or
adc
dec
dec
jg
mov
scas
jmp
ret
inc
pop
std
cmp
imul
push
push
sbb
pop
sub
inc
xchg
jg
incl
add
fistpl
sub
and
jle
sbb
mov
lahf
pushf
in
stos
dec
rcrl
test
lret
fwait
jb
jo
adc
cli
insl
cmp
mov
pop
mov
jmp
mov
pop
movhps
mov
jp
mov
test
sbb
jno
scas
xchg
sbb
xchg
movsl
pop
and
xchg
sbb
cmc
and
push
or
sub
mov
sbb
push
mov
lahf
xor
aad
sahf
pop
lahf
aaa
push
out
decl
lock
cld
xlat
gs
push
mov
movntq
out
adc
add
dec
jg
inc
cmp
arpl
notb
pop
or
dec
shr
add
cltd
dec
lret
clc
popa
insb
xor
jmp
inc
adc
add
pop
shrd
xchg
inc
cli
int
dec
or
sub
xor
mov
jns
mov
sbbl
fstpt
and
inc
jp
int3
aam
mov
jmp
mov
imul
jae
fadds
xor
mov
pop
cmp
loopne
inc
loop
jo
push
cmp
dec
jp
push
cs
xchg
xchg
ficompl
cmp
sub
mov
jg
les
xchg
ja
cld
rcrb
gs
pause
orb
cmc
cmpsb
mov
jecxz
jmp
cmp
and
cmp
fcmovu
xlat
popa
lock
fwait
pushf
pop
icebp
mov
popf
jp
int3
add
rclb
jnp
mov
imul
lahf
mov
and
out
fwait
dec
in
ljmp
outsl
mov
pop
jb
cmp
xchg
and
stc
add
push
test
inc
jae
sub
pop
mov
mov
xor
sub
sub
addr16
sub
cs
fs
ret
xchg
or
negb
xorl
ret
sub
lret
mov
and
push
jne
inc
dec
imul
sarl
outsb
mov
dec
jle
aad
stos
adc
xor
bound
or
inc
mov
inc
push
xchg
std
or
arpl
inc
fistps
adc
fs
mov
in
push
mov
cmp
mov
test
call
mov
cmp
pop
ficoms
ss
cs
pusha
icebp
inc
xchg
aas
push
fcomps
js
xor
rcl
xchg
and
push
xchg
jge
add
jle
and
adc
xor
mov
test
push
pop
aad
push
xchg
jne
inc
mov
out
cmp
mov
mov
add
adc
out
test
adc
icebp
decl
movsb
jbe
xor
ret
xor
inc
test
aaa
stos
push
inc
xchg
push
stos
push
xchg
sbb
xor
mov
adc
jp
sbb
cmp
fdivrp
mov
cwtl
pushl
insb
pop
mov
mov
jae
cmc
sub
int
imul
loop
dec
xchg
adc
jo
popf
mov
sub
fwait
adc
pop
adc
cli
ret
ss
sti
iret
sub
push
and
je
mov
sbb
mov
jg
mov
jno
mov
xchg
rcrl
xor
shlb
jb
in
bound
idivb
cmp
adc
insl
setne
push
mov
lds
add
mul
mov
xor
wrmsr
lahf
pop
shll
nop
in
cmc
mov
cmpsb
mov
fadds
xorl
mov
sub
inc
std
jmp
cmp
adc
fdivrl
mov
pop
adcb
cmp
xchg
lods
jg
imul
dec
jp
mov
fists
repz
pushf
sysenter
mov
xor
add
xlat
dec
mov
insl
sub
xor
jae
or
leave
pop
dec
adc
or
push
arpl
cmp
pop
pop
cmpsl
fadd
mov
push
adc
dec
xchg
mov
cwtl
fcomi
jecxz
xor
or
mov
pop
stc
push
rcll
daa
mov
or
sbb
adc
push
aad
pop
in
ja
scas
mov
outsl
add
cld
xchg
lea
xchg
jmp
push
outsb
mov
pop
mov
pop
lahf
dec
xor
mov
call
inc
test
lods
dec
dec
sub
xor
cmp
inc
lds
lret
test
sbb
jne
cmp
ret
push
cltd
insb
clc
dec
pop
push
push
bound
mov
pop
nop
sub
cwtl
jno
ret
xchg
and
jge
add
or
xchg
inc
push
icebp
or
cwtl
mov
push
fwait
mov
mov
mov
mov
and
outsl
clc
mov
push
mov
call
hlt
push
movsb
dec
or
fdivs
std
shl
pop
xchg
add
daa
mov
in
push
xchg
out
push
and
jmp
cmpsb
or
mov
popa
imul
std
aaa
dec
and
xchg
movb
mov
mov
jp
cmp
loope
cmp
xchg
out
sub
mov
jnp
out
pop
mov
jns
loopne
mov
adc
test
jae
pop
aaa
or
ret
sub
int3
test
cltd
dec
jbe
jnp
roll
stos
rol
cmp
in
add
dec
jns
iret
dec
jmp
mov
mov
loope
push
popf
or
mov
pusha
test
jmp
adc
stos
or
cld
cli
jae
dec
stc
dec
notb
mov
pushf
jae
or
leave
cwtl
mov
cwtl
pop
cmpsb
inc
jl
and
ret
jmp
mov
out
std
in
dec
jg
pop
jbe
inc
push
add
enter
sub
push
add
lock
in
xor
mov
xchg
lds
pop
or
cmpsb
test
cmpsl
aas
loopne
xchg
test
and
push
jbe
fisttpl
push
push
mov
and
mov
pop
arpl
pop
xchg
lock
filds
outsl
ljmp
std
mov
push
testb
cmp
push
pop
xor
mov
mov
pop
xor
je
xor
popf
add
pop
arpl
pop
lds
mov
add
pop
and
pushf
adc
sbb
sub
add
mov
mov
fbstp
cmpsb
sbb
inc
lcall
lahf
and
xor
inc
cmpsb
xor
pop
nop
inc
sbb
loop
mov
adc
push
add
lcall
dec
dec
xchg
or
gs
ret
andb
xor
cmp
and
mov
mov
sbb
imul
es
addr16
xor
dec
fstpl
scas
std
cmp
dec
xchg
popl
sbb
xor
push
or
push
push
and
test
dec
adc
pop
mov
mov
jmp
sbb
sub
push
add
mov
pusha
daa
sbb
mov
popa
outsl
mov
mov
in
sbb
les
int
jae
or
jb
lahf
sub
lahf
lods
or
sub
xchg
ljmp
loope
lock
decl
and
outsl
sbb
mov
icebp
adc
inc
mov
lock
std
fcmovnu
jecxz
xchg
sti
mov
imull
daa
insl
push
push
test
inc
push
movsl
lcall
mov
aas
add
jnp
dec
cmp
out
pop
sub
adc
or
mov
or
icebp
sub
inc
cwtl
leave
adc
cmp
sbb
xor
push
cmp
hlt
pop
dec
push
mov
xor
mov
gs
out
mov
xchg
int3
test
push
mov
cs
test
jo
cmc
adc
fstps
test
push
jmp
bound
aaa
add
xor
popa
adc
inc
inc
ret
sbb
pusha
adc
movsb
bound
jae
aad
in
adc
jg
enter
fistpl
pop
leave
sub
in
aas
pop
adc
mov
pop
lock
sbb
popa
outsl
mov
cmp
flds
outsb
xor
xor
mov
push
push
lahf
or
ljmp
mov
adc
push
push
data16
cmc
xchg
call
adc
dec
mov
fxch
add
jp
inc
inc
and
out
ret
jp
fadds
fsubrs
xor
data16
mov
cmpl
xchg
insl
pop
iret
lret
repnz
loope
mov
adc
cwtl
lock
mov
or
daa
outsb
pop
jp
mov
push
dec
dec
test
xchg
add
jl
dec
js
and
jle
inc
cli
adc
aad
xchg
imul
xchg
push
scas
dec
mov
adc
sub
fsubs
mov
mov
sub
sarb
dec
in
jle
cltd
aam
ficompl
cli
dec
add
iret
jle
in
and
mov
push
xchg
sarb
and
sub
adc
das
mov
add
enter
js
enter
cwtl
jo
cmp
js
dec
es
les
icebp
fimuls
clc
sub
mov
or
dec
add
std
outsl
jo
leave
fwait
or
and
enter
enter
cmp
ljmp
mov
rolb
ja
xchg
lock
adc
xor
imulb
mov
stc
enter
inc
pushf
mov
push
int3
repz
dec
sbb
test
lcall
pushf
push
cmp
xlat
cmp
call
mov
push
fdivr
push
cmp
aas
mov
out
pop
xchg
or
orl
add
jmp
mov
jp
dec
sbb
lock
jns
pop
inc
pop
cld
in
jb
fucomp
icebp
insb
psubusb
adc
push
stos
cmpsb
jb
rclb
cmp
mov
int
dec
jo
jne
xchg
push
mov
xchg
fnstenv
add
lods
loopne
mov
pop
andb
cli
push
xor
and
xor
fwait
push
inc
lcall
xor
lret
pop
int
dec
int
or
push
adc
cmp
and
sbb
clc
outsb
mov
pop
sahf
int3
xor
gs
das
mov
cwtl
adcl
je
inc
push
xchg
cmp
pushf
es
cmp
mov
sti
cltd
adc
mov
data16
fsubl
outsl
jl
push
in
addr16
aam
daa
pop
jb
jno
mov
and
push
mov
int
repz
and
push
ljmp
dec
pop
sbb
jo
mov
jl
jp
mov
mov
xor
xchg
movsl
repnz
jl
cmp
in
stos
lock
lret
rorb
outsl
adc
or
emms
sbb
pop
fcoml
loope
add
inc
xchg
or
or
pop
int3
push
sbb
mov
sbb
loop
mov
pop
pop
jnp
nop
test
mov
mov
and
lock
xchg
subl
ret
repz
int3
fxch
lahf
push
mov
inc
xchg
into
jbe
jmp
int
test
outsl
inc
fidivrs
add
loope
lret
repnz
xchg
cmp
movsl
je
fldl
inc
push
and
pusha
adc
test
cmp
dec
sub
pushf
cmpsb
test
rcll
add
cmp
mov
movsb
ja
push
out
sti
adc
mov
aaa
decb
and
push
mov
stos
and
cld
and
pop
jns
out
sbb
movsl
insb
daa
in
int
rolb
movsb
mov
loop
inc
fmull
mov
or
lahf
xchg
xchg
repz
aam
jbe
inc
call
jg
mov
fdivl
cmp
pop
in
mov
roll
mov
fildl
and
cmp
push
xor
insl
test
push
cmc
push
mov
std
jns
jle
in
lret
adc
inc
mov
or
orb
jg
bound
inc
push
pusha
aaa
shl
jecxz
xchg
sub
jp
or
pop
sahf
add
mov
jo
lods
mov
loope
mov
movsl
adc
jmp
mov
pop
and
fisubrl
test
notb
sub
cmp
sahf
out
ret
fmuls
sahf
mov
in
mov
mov
sbb
aad
out
xchg
adc
sbb
andl
jp
movsl
fwait
mov
mov
jae
lcall
mov
fldt
cli
xor
push
jne
mov
fldl
scas
inc
jns
and
rorl
push
fisubrl
pop
sbb
push
mov
cmp
popf
sub
notb
out
fwait
push
or
ret
sbb
mov
push
setp
mov
xor
jge
insb
push
push
leave
mov
mov
sub
ss
add
popf
jns
add
or
mov
rorb
mov
mov
push
jbe,pn
js
push
xchg
loop
or
mov
xor
sub
and
jae
mov
fisubl
dec
cmp
add
cltd
adc
cmp
lock
fistpl
add
loope
mov
and
std
outsl
aad
loope
pushl
or
inc
pop
jl
pop
out
je
lahf
cmpsl
loopne
popa
and
out
sbb
adc
int
fiadds
ret
addr16
adcb
or
movsl
lods
fcomps
xchg
adc
repnz
loope
lsl
jbe
stos
xor
sbb
repz
add
gs
xlat
es
mov
add
fists
cmpsb
add
cld
mov
arpl
test
fdivs
cmp
mov
lcall
or
aad
pop
sbb
mov
sbb
stos
and
push
mov
or
ss
or
aaa
sbb
movsl
mov
add
push
scas
int
lret
mov
test
sarl
xchg
push
and
jbe
cmp
push
dec
jmp
ljmp
repnz
repnz
popa
inc
jae
inc
jecxz
jg
dec
pop
jg
push
xchg
aas
lds
or
add
mov
xor
mov
scas
xchg
aas
mov
mov
mov
lahf
stos
insl
rclb
mov
pusha
mov
push
push
add
adc
ljmp
cs
std
dec
out
xchg
mov
dec
inc
inc
sbb
lds
inc
cltd
and
mov
mov
pop
bound
stos
push
fmull
cmc
fsubrp
cli
test
rcrb
in
jbe
mull
pop
sub
inc
adcb
inc
lods
in
sti
cs
xchg
cwtl
mov
mov
mov
adc
std
fbld
rorb
mov
call
xor
sarb
push
shlb
je
sub
aam
data16
cmp
iret
fsts
sti
test
mov
aas
push
shl
mov
cltd
pusha
imul
pushf
adc
faddp
pop
cwtl
data16
push
cli
xor
orl
jne
lret
pop
movsl
popf
jnp
mov
push
ret
mov
mov
mov
mov
mov
adc
lret
sbbl
cmp
mov
cmp
repnz
aas
cmp
adc
mov
lds
jmp
push
xchg
xchg
xchg
or
adc
insb
mov
fs
test
pop
adc
jmp
cwtl
lea
pop
scas
cmpsb
mov
shlb
lahf
dec
lcall
add
test
pop
adc
ds
out
popf
in
inc
fdivs
mov
jp
or
inc
dec
mov
cmp
jns
xchg
lock
test
sbb
dec
mov
pop
test
sarl
imul
into
jmp
test
repnz
inc
shl
mov
pop
jp
insb
jnp
xor
insb
aaa
in
jmp
mov
lcall
imul
mov
add
xchg
shlb
mov
or
fidivs
adc
add
pop
outsb
ret
or
cmp
stos
pop
arpl
out
mov
filds
rorb
shll
notl
sbb
std
xchg
mov
sbb
mov
in
sbb
and
mov
xchg
push
lds
mov
fnstcw
adc
cmp
lds
and
movsl
adc
xor
or
xor
pop
loope
mov
or
and
loopne
push
movsl
jp
lods
outsl
aas
andb
pop
mov
in
rcrl
jecxz
in
lcall
jge
shl
xor
imul
es
jecxz
mov
push
dec
pop
adcl
sub
out
insb
xor
bnd
pop
and
jne
sbb
cmp
das
pop
mov
data16
sub
scas
shll
jns
sarb
add
sub
lock
cmpsl
or
cmc
and
xchg
jl
stos
hlt
push
fcmove
and
rcll
mov
clc
xchg
dec
add
gs
out
push
es
fadds
adcl
test
ljmp
adc
mov
adc
inc
test
mov
aaa
out
loope
sbb
sub
xchg
dec
dec
mov
scas
adc
dec
pop
daa
shrb
nop
dec
mov
clc
push
mov
in
mov
ljmpw
xchg
sub
push
outsl
inc
out
and
rolb
push
inc
mov
notb
inc
bound
add
rcll
sbb
xchg
movl
and
scas
adc
cwtl
mov
arpl
sub
mov
test
leave
add
mov
pop
xchg
pop
cld
lea
fidivrs
adcl
mov
test
jp
or
jg
arpl
ljmp
clc
inc
or
loopne
sbb
push
xchg
xchg
dec
mov
pop
and
in
in
fs
and
aas
adc
gs
and
push
inc
push
jle
inc
push
jle
and
push
mov
lcall
enter
add
xchg
les
inc
jae
push
inc
dec
mov
push
sub
bnd
inc
jno
dec
out
test
ret
movsl
pop
dec
pop
sub
inc
sub
outsb
mov
xchg
pop
jb
mov
cs
inc
cmp
mov
jl
mov
orb
inc
push
dec
std
dec
leave
cmp
outsb
cmp
out
ror
fidivl
jne
idiv
push
push
imul
jbe
and
mov
fsubs
sbb
imul
or
into
pop
jmp
pop
mov
in
lods
jge
adcl
sbb
push
xchg
cmp
fmull
lea
hlt
mov
dec
ret
popa
lods
outsb
and
and
es
adc
push
lods
pop
cmpsb
sbb
xorb
stc
sbb
notb
dec
adc
mov
mov
insb
in
inc
or
les
fs
or
or
adc
adc
popf
sbb
dec
pop
enter
pop
and
out
sbb
push
push
in
popa
int3
mov
fcoms
dec
push
mov
sti
jne
or
sarb
das
cmpsb
or
rcl
cltd
jnp
push
jns
xchg
or
popl
jmp
ja
push
mov
outsl
test
int
add
mov
xor
lods
inc
xorb
pop
je
mov
outsb
aaa
jb
mov
in
and
sub
inc
adc
and
mov
jbe
mov
outsb
jnp
movsb
cs
dec
mov
shrb
fidivl
sub
daa
push
cs
xor
scas
mov
mov
scas
jb
popa
ficoml
xor
dec
dec
ss
pop
sub
shll
cmpsl
add
std
negl
lahf
out
pop
xchg
mov
mov
int
test
ljmp
add
cmpsl
test
out
out
fisubl
jecxz
jmp
fcom
scas
imul
stc
or
repnz
dec
and
xchg
aam
outsl
adc
sbb
lcall
cs
repz
fisttpl
push
fsubp
repnz
push
cmc
xchg
sub
and
mov
cmp
jecxz
fsubs
call
xchg
sbb
int3
sbb
mov
sbb
out
sbb
lds
xchg
mov
lock
or
stc
not
cmp
sarl
nop
arpl
jbe
pop
or
push
mov
cs
pusha
push
jne
fcomp
adc
xchg
and
pop
loope
adc
lret
jle
mov
sub
pop
ljmp
js
mov
xchg
test
mov
stos
ret
movsb
push
mov
faddl
fidivrl
jne
mov
into
and
lea
lret
fimuls
bound
mov
cmpsl
pusha
mov
add
jmp
sub
lds
popf
loopne
lock
cmp
lds
xorl
xor
and
aaa
fwait
xchg
fnstcw
and
dec
lock
jecxz
pop
lods
and
repz
inc
xor
sbb
xchg
outsb
push
jns
lret
scas
mov
in
pop
and
aad
arpl
pushl
xchg
sbb
mov
xchg
inc
ds
out
jle
push
cmpxchg
add
aas
call
lds
and
int
loop
mov
or
popf
pop
sub
ljmp
fidivrl
aam
int3
inc
sub
idivl
lcall
dec
push
pop
xchg
out
mov
pop
jle
decl
mov
xor
jno
cmp
sub
ds
gs
sbb
sub
ret
bound
mov
jns
in
popa
or
jmp
mov
jp
jae
or
adc
sahf
pop
roll
daa
inc
cmp
jge
mov
fistps
pop
mov
mov
imul
inc
add
sub
sbb
lock
cmpl
jmp
jae
imul
cmp
out
pusha
popa
cmpsb
push
jl
sti
push
dec
fs
cltd
loope
or
mov
bound
roll
mov
mov
push
push
xchg
clc
jo
xchg
push
and
dec
subl
xor
pusha
inc
or
push
mov
out
mov
sbbb
sbb
mov
fmull
fistpll
add
xchg
movsb
mov
pop
bound
mov
mov
push
mov
and
jl
mov
dec
or
push
clc
in
lods
outsl
pop
and
jecxz
imul
pushl
sbb
fstpt
leave
loopne
lea
les
rcrb
or
cli
and
and
in
ss
inc
fcoml
stos
xchg
jae
xchg
scas
cmpb
xchg
sub
adc
cmpsl
mov
test
or
ret
clc
inc
popf
and
sbb
hlt
cmp
adcl
fidivs
xchg
xchg
sub
sub
adc
shl
inc
mov
jmp
cmp
pop
mov
ret
lods
test
xchg
xchg
dec
orb
sub
fnstcw
mov
mov
inc
pop
xchg
jp
mov
xor
loopne
lcall
scas
divl
inc
pop
dec
cmp
out
mov
push
xchg
jno
xchg
mov
cmpsb
jb
sub
aam
lcall
mov
insb
mov
cwtl
pop
je
and
mov
sbbb
pop
adc
ja
nop
sahf
outsl
mov
pop
and
inc
or
scas
inc
lods
or
outsb
and
testb
xchg
mov
xchg
jge
clc
pop
divl
inc
push
fistpl
sub
sbb
mov
dec
dec
stos
cltd
test
ror
bound
repz
inc
pop
xor
lret
fwait
xchg
dec
xchg
iret
bound
fdivr
push
sub
rorb
cltd
es
mov
cmp
test
pop
adc
stos
mov
xor
xchg
mov
lock
push
xor
dec
outsb
xchg
push
test
inc
pusha
cmpsl
call
add
fadds
or
ljmp
shr
mov
jmp
dec
shl
orb
movsb
sub
in
pop
subb
or
into
adc
push
leave
cmp
lea
pop
aas
jmp
xor
outsl
push
inc
push
and
push
shlb
sbb
ret
jnp
popf
js
int
xchg
sub
sar
pop
loope
into
jae
jno
rol
jnp
push
push
jae
ficoml
js
in
push
mov
mov
dec
jmp
xor
fisttps
or
in
push
or
sti
mov
bound
int3
pop
mov
sbb
xchg
js
add
xor
enter
sub
sub
lcall
xlat
popa
add
outsl
jp
push
aam
xor
xor
push
pop
push
pop
and
jae
divl
push
cmc
pop
rorb
lret
jecxz
insl
jmp
push
xchg
imul
shrl
sub
mov
adc
fstpt
int
sbb
xchg
jecxz
push
mov
cmc
addr16
dec
adc
xor
clc
mov
loopne
pop
hlt
and
adc
push
add
cltd
loope
ja
sub
jne
sbb
jl
and
aaa
mov
cmp
outsl
lret
xchg
cmp
xor
mov
rol
stos
sub
push
fcompl
lods
cmc
shlb
jo
cltd
mov
jp
outsl
nop
ja
lds
mov
cmp
pop
jp
and
xchg
sub
mov
lret
int3
mov
paddusw
mov
jge
xchg
fwait
mov
dec
out
mov
mov
add
jno
sub
inc
jo
mov
sub
mov
pop
iret
jge
subb
inc
repz
jo
inc
sbb
mov
mov
jbe
stc
jno
out
cmp
imull
pop
or
cmpsl
mov
sbb
fildl
pop
out
pop
into
adc
incb
out
ss
sub
push
and
jno
mov
sbb
pop
inc
and
lods
xchg
std
into
cmp
mov
js
cmp
js
rclb
sub
ss
ret
stos
lret
es
out
insl
and
add
jb
lret
js
std
cmc
outsl
testl
movsb
daa
insb
jae
pop
nop
jb
lcall
push
jae
out
jle
repz
fidivl
je
or
push
aam
inc
aad
jg
push
out
sub
movsl
cli
and
mov
hlt
repz
push
mov
sbb
push
cwtl
lret
aaa
cmp
clc
inc
insl
cld
aaa
int3
cmp
aam
ds
or
cmp
fldl
dec
pushl
lret
pop
mov
mov
pop
ds
jne
or
adcb
xor
push
xchg
pusha
jg
fisttpll
jge
aaa
rorl
mov
add
push
iret
mov
add
daa
push
in
or
pop
and
lret
cmpsl
ret
inc
jmp
xlat
xchg
pop
mov
ljmp
adc
jge
les
mov
fucomp
adc
xchg
mov
fcompl
jb
scas
fwait
imul
sub
xor
cltd
mov
test
sahf
mov
push
fwait
insb
pop
shufps
data16
test
repz
lcall
pop
iret
sub
bound
mov
jne
loopne
sbb
stos
ds
dec
test
jb
leave
add
fisttps
das
fneni(8087
xchg
data16
pop
int
push
xor
adc
loopne
cmp
and
stos
bound
idivl
icebp
fdivr
mov
push
loop
inc
scas
mov
cltd
mov
add
push
jecxz
mov
pop
sbbl
fs
sub
int
stc
das
xchg
insl
and
pop
mov
or
andl
adc
ljmp
sbb
cmpsl
adc
int
xchg
jo
mov
xor
mov
loope
fnstcw
orb
shrl
xchg
scas
mov
jne
pop
in
ljmp
repz
in
cmpsb
in
xchg
pop
lods
add
pop
sbbl
jno
mov
mov
or
fbld
pop
in
xchg
lock
mov
out
enter
jns
bound
sub
push
mov
sti
into
or
sub
and
xor
aaa
icebp
xchg
lahf
mov
pusha
ret
or
adc
pop
and
adc
push
es
pop
jbe
fs
movsb
jns
push
jns
push
fidivl
enter
sysexit
pop
pop
and
loopne
out
pop
xchg
outsb
jge
dec
in
cmpsb
cmp
push
mov
outsb
out
cmp
xor
rolb
push
mov
mov
ds
sbb
sti
bound
or
mov
jmp
inc
and
sub
pop
negb
xor
adc
loope
or
lock
inc
sbb
flds
jbe
popf
fstpt
mov
mov
jno
int
in
xor
pop
loopne
aas
aas
mov
iret
jnp
stos
popf
pop
pop
int
dec
data16
pop
popf
dec
xor
jae
dec
into
xor
ret
jge
inc
scas
cmp
push
push
hlt
sbb
aad
xchg
mov
call
mov
sub
pop
add
sub
sbb
lock
inc
adc
in
cmpsb
adc
mov
pusha
cmp
ret
test
repz
adcb
stc
in
frstor
jb
jg
nop
loopne
add
mov
cmp
lods
mov
es
push
cld
dec
add
je
es
repz
je
mov
mov
insb
rcrb
pop
fidivl
mov
dec
stc
cli
mov
mov
ss
push
imul
je
aad
int3
pop
frstor
in
add
ret
pop
stos
call
inc
addr16
sbb
push
xor
test
arpl
jbe
jnp
loope
add
outsl
push
popf
arpl
mov
and
or
adc
std
push
icebp
aad
jge
in
fadds
lods
inc
ret
jbe
xchg
mov
cli
rcll
jmp
movsl
pop
int
or
lods
adc
add
aas
movsb
ret
std
xchg
mov
enter
sub
push
xchg
pop
jno
mov
into
ja
adc
pushf
push
push
mov
or
loopne
or
and
mov
cmc
adc
iret
movsb
lcall
insb
mov
stc
and
and
xor
aad
add
xchg
mov
cltd
insl
cmpsl
add
pop
lcall
push
lock
dec
adc
push
in
jnp
mov
lcall
ret
loopne
inc
mov
sbb
sarb
cld
xor
and
aad
add
inc
imul
cmp
jo
jne
pusha
lock
fldcw
jge
sbb
mov
xor
fs
shr
fisttpll
insb
add
xor
and
mov
xchg
cmp
cmpsb
fs
pop
in
xor
shll
dec
push
inc
mov
mov
inc
inc
ss
test
add
sahf
scas
in
out
sarb
mov
xlat
push
pop
mov
sbb
roll
inc
or
shrb
das
lahf
push
or
jns
and
pop
mov
repz
jno
mov
addr16
dec
xor
xor
adcb
hlt
xchg
imul
std
fs
mov
divl
iret
mov
inc
outsl
outsl
les
addl
jle
loopne
push
insl
stc
dec
mov
lret
xor
jge
push
jp
decb
aam
aam
lods
push
xorl
fcmovnbe
cmp
movzbl
cs
cmpsb
and
mov
jae
jmp
ljmp
push
mov
call
out
cmp
pop
push
fsub
or
cs
push
sub
aaa
cltd
cs
jbe
or
push
cld
loope
roll
push
jle
cld
ret
clc
or
push
cli
add
int3
or
lds
and
das
add
incl
test
mov
mov
jnp
or
int
cmp
mov
mov
cmp
pop
add
dec
pop
inc
fwait
loope
push
add
cmp
jnp
add
mov
enter
orb
dec
ja
pushf
lea
cmp
pop
pop
imul
mov
ret
outsb
fdivrl
pop
lods
push
iret
xor
rorb
adc
add
xchg
lods
mov
and
jmp
psrlw
fdivr
sub
in
fmulp
shlb
and
sub
adcl
int3
inc
xor
sbb
and
add
push
push
nop
aaa
and
jl
xchg
call
xor
pusha
push
ljmp
push
cli
sbb
dec
mov
daa
push
mov
mov
aas
and
push
sahf
inc
push
cmp
jg
push
xchg
jecxz
xchg
mov
loop
fdiv
fildl
xchg
in
mov
hlt
pusha
push
dec
jecxz
jp
and
xchg
mov
inc
movsb
jge
dec
rcll
scas
decl
jbe
imulb
or
repz
fidivs
test
clc
cs
fidivrl
sub
mov
mov
div
pop
fs
push
pop
jmp
pop
nop
dec
or
das
int3
jp
cmp
leave
adc
out
fmulp
jno
sbb
and
in
mov
and
in
gs
xor
rcl
imul
les
cmp
cmp
lret
xor
sub
fwait
mov
scas
cmp
xchg
repz
xor
repnz
inc
inc
pop
sub
inc
sub
iret
fwait
cltd
push
imul
mov
rcl
jmp
and
hlt
loope
jge
clc
sub
aad
sahf
inc
rolb
ja
pop
mov
mov
jo
out
jp
jle
fimuls
icebp
enter
push
shrl
jg
pop
cmp
cmpsb
nop
inc
pushf
outsb
push
repnz
mov
je
sub
rcrl
jmp
sahf
xchg
pop
cmp
jle
lods
in
les
sub
into
jle
icebp
outsb
jecxz
fldcw
sbb
arpl
adc
cmp
fidivrl
push
push
push
cltd
adc
imulb
xchg
push
mov
fstpt
movsb
cmc
loopw
ds
ss
push
js
xchg
stos
in
and
xor
cs
movsl
add
adc
push
push
xor
int
mov
aaa
push
xlat
cmc
scas
lahf
mov
jp
sub
push
pushf
cwtl
xchg
jmp
xor
mov
and
or
mov
xchg
sub
aam
sbb
sbb
and
leave
out
mov
dec
or
mov
cmpsb
push
sub
xchg
loopne
subb
cmpsl
add
mov
push
dec
and
loope
add
shll
xchg
fwait
jge
stc
xor
cltd
xor
sti
es
adc
les
loopne
dec
into
shrb
dec
outsl
out
adc
clc
adc
push
sub
xor
leave
sbb
xchg
xor
out
ret
rcrb
cmp
mov
cmp
mov
enter
shl
loope
jge
testl
push
fistpl
xchg
inc
lahf
xor
add
push
xorl
fcoms
insb
inc
lods
lret
dec
xchg
pop
and
outsl
pop
push
pop
pop
cld
andb
in
jb
xchg
sub
clc
add
and
and
cld
repnz
fxch
daa
jmp
and
fwait
xor
loopne
scas
sub
pop
ficompl
mov
sbb
int
xchg
lahf
inc
out
das
pop
add
daa
mov
sbb
mov
fiaddl
cmc
mov
adc
cmc
sub
icebp
xchg
lods
mov
fs
aaa
adc
repnz
jg
test
data16
imul
testb
and
adc
adc
or
out
fwait
repnz
icebp
out
sub
mov
stos
std
stos
lock
or
aaa
adc
ror
and
aaa
xchg
ljmp
add
fsubr
push
jmp
cmp
stc
jns
mov
pop
xchg
or
cmp
jae
fs
loope
xlat
and
mov
mov
and
dec
mov
add
sbbl
aad
or
scas
aad
mov
adc
dec
or
fdivl
movsb
sub
mov
cmpsb
lea
cmpb
mov
jmp
or
in
pushf
lods
xchg
sbb
cmpsl
or
mov
movsb
in
andl
push
aaa
mov
ja
mov
out
fldcw
sub
mov
inc
cs
lahf
xchg
xor
adc
dec
pcmpeqb
imul
ficomps
jne
fwait
jecxz
or
in
xor
jb
add
pop
cmp
xchg
inc
pop
sbb
dec
cmc
add
fidivl
sbb
jl
in
addr16
aad
out
insb
shrb
pusha
in
sbb
sbb
inc
cmp
insb
xchg
ss
mov
sub
arpl
sarb
xor
leave
insl
fs
inc
imul
js
out
addb
mov
mov
outsb
movsb
je
jno
xor
mov
jno
fisubrl
loopne
shll
mov
pop
mov
mov
mov
xor
gs
cmp
sti
mov
mov
jne
lret
pusha
daa
pop
xchg
movsl
mov
mov
js
movsb
or
xchg
jbe
pop
fistpll
pop
mov
pop
test
xchg
jl
movsb
arpl
push
push
arpl
jno
ljmp
xor
call
xor
cwtl
into
xor
outsl
push
pop
mov
das
add
pop
jg
adc
pop
push
lods
aas
xor
cmpsb
mov
std
shll
std
pop
and
in
pop
inc
or
or
cmp
and
cmpsl
cltd
rcl
aad
jo
movsl
notl
lcall
cld
notb
aad
jmp
enter
shrl
mov
loope
out
xchg
sub
mov
es
xor
rolb
es
roll
pop
xor
pushf
add
loopne
dec
shl
xor
dec
push
ret
pop
xchg
cmp
pop
jb
mov
dec
imul
adc
cwtl
add
mov
dec
xchg
sub
cmp
dec
inc
push
aas
dec
cli
adc
pop
popf
dec
sbb
mov
out
test
pop
test
fisttpl
push
lods
in
mov
dec
jb
pushf
and
jg
mov
jae
aam
mov
add
stos
mov
pop
mov
mov
cmp
push
xchg
movsl
in
fwait
pop
inc
and
je
jae
cmp
push
sahf
push
ret
mov
call
iret
xchg
ret
mov
movsl
mov
sbb
push
dec
fisubrs
out
les
fcomps
lret
mov
iret
neg
in
and
pop
push
or
int3
mov
inc
arpl
mov
push
or
mov
mov
bound
icebp
lcall
fmull
aad
cs
es
adc
lods
imul
leave
movsb
movsb
adc
shl
mov
and
stc
hlt
jno
mov
adc
sbb
cmp
loop
daa
add
out
jg
or
mov
lods
call
adc
lea
sbb
pop
cmpl
cltd
jp
mov
or
sti
adc
in
mov
stos
repz
mov
int3
les
in
stos
sub
push
or
or
hlt
jecxz
lods
in
les
aad
jl
aad
into
enter
inc
fnstsw
xlat
call
pop
out
ds
or
dec
adc
fildll
xor
movsb
dec
addr16
or
cmpsl
fisttpll
pop
ret
mov
es
dec
roll
mov
mov
jg
repnz
stos
xor
cmpsl
ja
cld
std
dec
dec
loop
adc
lret
pop
xor
gs
add
movb
or
mov
out
jg
mov
filds
mov
lret
cs
fdivr
mov
push
call
enter
in
lret
lcall
cli
jb
and
jne
popa
nop
loope
mov
ret
fldenv
lods
loopne
mov
lret
dec
test
mov
pop
test
aad
cmp
repz
cmp
mov
mov
fwait
dec
shrb
sbb
fiaddl
flds
rcll
jo
dec
sub
sti
cli
sbb
insl
es
ret
cmp
push
and
negb
xlat
cltd
or
jle
pop
outsb
rolb
sbb
xchg
dec
shll
xorb
arpl
insl
push
shl
into
inc
imul
daa
pop
je
adc
mov
sbb
jnp
imul
imull
push
mov
sbb
mov
and
sub
add
fldenv
flds
movsb
enter
xor
negl
cli
sbb
mov
and
mov
lods
xchg
xor
inc
fwait
xchg
fcmovnb
pop
shrl
cltd
mov
push
xor
es
aas
push
sbb
push
into
ss
ja
xchg
push
sub
cmp
pushf
and
sub
insb
lods
insl
dec
adcl
cmp
xrelease
cmc
mov
ret
rorb
out
dec
fmulp
outsb
mov
fistl
popf
sbb
pop
lret
cmp
test
push
sahf
jecxz
clc
mov
adcl
sbb
fildll
pop
push
sbb
pop
pop
add
xor
add
cmp
mov
repz
arpl
out
in
sub
xor
imul
lods
in
inc
jo
ds
in
in
das
ja
push
add
xlat
popa
shl
inc
aad
mov
mov
rorb
clc
adc
pusha
sub
hlt
xchg
dec
je
test
pop
js
jo
and
mov
fdivl
dec
in
xchg
out
ljmp
cmpsl
pop
xlat
and
xchg
inc
cli
out
cmc
xor
jns
inc
sub
nop
mov
inc
adc
ja
add
jg
mov
aaa
fsts
push
loop
ret
int
cmp
iret
scas
jl
cld
and
imul
pop
jp
xchg
mov
fisttpl
xchg
xchg
enter
test
mov
cmpsb
cmpsl
push
cmpsl
stc
or
cmpsb
hlt
rcrl
add
fs
or
ss
and
push
and
mov
daa
ja
data16
xor
movsb
jle
mov
bound
lock
jo
xchg
lods
mov
test
push
adc
dec
add
xchg
lods
ss
loope
cmp
cs
xor
and
pop
int3
loopne
xchg
add
call
loop
arpl
and
rcl
cltd
jae
adc
cmp
cwtl
fmuls
and
cmp
inc
and
sbb
lods
mov
shrl
pop
inc
out
dec
cwtl
push
or
fisubl
in
inc
sbb
pop
xor
fadds
lret
pop
pop
or
int3
pop
sub
jecxz
gs
add
jg
pop
xlat
add
setbe
mov
adc
add
ljmp
push
out
jp
push
or
inc
aam
fcmove
les
insb
ret
es
es
push
fnstsw
push
clc
ja
pop
lcall
mov
fildll
lea
cmp
daa
lret
fnstsw
and
push
push
mov
sbb
push
jb
ret
mov
repnz
les
push
stos
gs
aaa
and
sarb
adc
pop
decl
rcr
lea
divb
mov
call
adcb
mov
mov
push
xchg
mov
push
mov
push
aas
test
stc
dec
adc
sbb
mov
ret
loop
xor
and
in
test
jg
adcb
inc
shl
or
xchg
and
push
shll
pop
add
jb
add
xchg
pushf
rorb
xchg
rcll
scas
in
jno
ja
inc
mov
nop
arpl
adc
cmpl
andb
sub
call
cmpxchg
arpl
cwtl
test
testl
mov
pop
adc
mull
cmp
clc
fisubl
jmp
sbb
dec
mov
xlat
xchg
mov
mov
cmp
sub
pop
imul
push
add
daa
adc
jl
xlat
xor
stc
fwait
in
rorl
aaa
add
out
dec
movsl
aam
pop
adc
dec
xor
insl
lahf
dec
sti
lahf
insb
cmp
add
jl
nop
push
or
adc
cmp
jae
xor
cmpb
add
or
sbb
aam
or
push
cmp
add
cmp
cmpsl
and
enter
or
dec
cmp
adc
packuswb
jo
test
jo
mov
fbld
pop
imul
fcomip
inc
pop
sbb
out
pop
inc
push
cmpl
or
and
and
jne
sbb
lea
leave
outsb
in
mov
das
xchg
out
clc
jmp
fisubrs
adc
outsb
stc
sbb
in
inc
outsl
jo
jge
sbb
sub
pop
add
rcrl
ret
xchg
and
fsts
jle
push
push
and
int
add
pop
jo
iret
in
or
dec
imull
push
icebp
js
test
mov
fldl
outsl
push
pushf
cmpsl
push
fsubr
pop
jg
pop
inc
lahf
and
in
mov
out
xor
decb
inc
or
int3
icebp
shr
mov
roll
dec
test
aad
jbe
shll
xchg
shrb
mov
je
pop
arpl
dec
add
lods
sub
mov
vmovq
fs
sbb
test
into
xchg
push
and
test
sub
pushf
sahf
out
and
sub
mov
sub
pop
pop
ret
dec
sbb
jnp
sub
sub
addr16
into
ds
adc
fdivr
adc
lcall
int3
lea
xchg
shl
push
or
dec
js
imul
cmc
clc
bound
cmp
mov
xchg
adc
in
lock
jp
pop
cltd
gs
mov
sub
jmp
add
xchg
mov
push
pop
push
sbb
lret
sub
pmaxub
dec
fidivrl
js
test
call
insb
lods
and
jb
pushf
cltd
xor
fiaddl
out
push
mov
leave
and
call
sub
adc
enter
imul
ss
test
jle
cltd
sbb
push
cmp
pop
push
cmp
push
xchg
fs
je
jnp
xchg
inc
add
shll
sti
xor
aad
mov
stc
nop
push
push
jbe
xor
iret
in
fisubs
cli
mov
mov
cmp
out
int3
out
js
ret
cltd
xchg
and
lds
mov
dec
fwait
inc
aad
dec
sbb
cmp
cmp
mov
adc
cli
mov
inc
popf
push
sbb
sbb
mov
mov
fdivs
rcrl
add
and
add
jns
add
in
pop
pop
xchg
fwait
dec
cwtl
inc
pop
sbb
in
sbb
ss
fsubl
xchg
lock
fisubrl
jbe
rcpps
sbb
lock
sub
adc
xchg
stos
pop
jp
mov
cmp
stos
inc
mov
mov
and
out
xlat
in
add
movsl
xchg
inc
mov
test
clc
mov
and
rolb
rclb
push
cmp
psadbw
arpl
mov
enter
pop
mov
fs
imulb
outsb
or
sub
dec
jl
mov
dec
xchg
sbb
and
mov
xchg
fisubrs
push
stc
inc
inc
mov
movsb
sub
and
fadd
scas
jl
sub
sub
mull
repnz
outsb
inc
mov
and
mov
loopne
lea
lret
data16
aam
adc
mov
insl
or
push
ret
test
cmp
mov
mov
and
adc
into
ficomps
cwtl
inc
add
jae
popf
in
and
dec
out
adc
pop
push
icebp
loop
cwtl
clc
enter
pminsw
jb
pop
ja
sub
push
xchg
mov
sarl
adc
sub
push
xchg
inc
xchg
and
dec
test
pop
cmp
sar
jle
das
jnp
push
mov
and
outsl
std
std
mov
sarb
mov
loope
iret
xor
mov
cmpsb
pop
rcr
lcall
int
hlt
push
shl
sub
xor
dec
and
xchg
bound
pop
xlat
rcrb
shlb
sbb
xor
imul
push
in
ds
dec
fs
stc
scas
sub
lds
rcll
xchg
push
aad
fidivrl
pusha
sbb
mov
lock
jo
pop
lds
lret
ja
lds
jo
xchg
sarb
cs
push
and
mov
mov
aad
and
and
xchg
or
jnp
pop
ljmp
push
jl
sub
pop
int
push
sub
xor
into
sbb
add
push
mov
and
fiadds
das
pushf
nop
loopne
lret
or
xor
andl
dec
andl
arpl
addl
pop
icebp
ss
inc
out
push
aad
pop
mov
jno
sub
cmp
push
bound
mov
jb
jbe
cmp
xchg
jbe
fistpl
cs
aam
fbstp
icebp
popa
imul
loop
mov
out
mov
shll
or
jp
push
sub
mov
arpl
loope
push
dec
repz
xchg
xor
mov
push
push
dec
aaa
and
xlat
cmp
loop
lea
add
push
push
aas
and
add
mov
sti
lret
repz
pop
mov
cmp
out
jnp
sbbl
inc
xor
nop
lcall
mov
ret
mov
and
js
mov
mov
lahf
jbe
sub
test
xchg
loopne
cmp
dec
repnz
add
or
dec
mov
lahf
pop
jecxz
cmp
aaa
and
das
lea
sti
sarb
cmc
repnz
fwait
xchg
in
loop
xchg
mov
dec
out
pushf
gs
mov
pop
fmuls
jne
push
je
rcr
jb
fdivl
fidivrl
icebp
mov
mov
ljmp
sub
aam
and
les
mov
cld
movsl
dec
cmp
das
shlb
arpl
jnp
fstpt
pushf
xchg
mov
inc
mov
sub
sti
iret
mov
mov
sub
int3
xchg
loope
fs
inc
adc
push
repnz
mov
pop
inc
adc
pop
xchg
pop
pusha
xchg
and
mov
lahf
inc
sbb
push
aaa
mov
fnstenv
jg
mov
in
lea
leave
out
xchg
sub
in
push
enter
lret
fisubrl
or
pop
pop
leave
and
adc
flds
loope
cld
test
mov
shlb
lahf
shlb
gs
jecxz
jne
fsubl
dec
cmp
loope
or
movsb
stos
xor
push
inc
push
lea
lret
pop
push
decb
xchg
mov
test
xor
out
or
mov
mov
cli
mov
fiaddl
or
fisubs
pop
pop
jmp
arpl
add
lcall
std
and
fldenv
mov
scas
dec
pop
ljmp
xlat
push
mov
add
push
xchg
jl
sub
ret
xor
cmpsl
mov
or
add
cli
nop
mov
inc
pushf
and
fisttps
sub
movsl
aaa
cmp
sbb
sub
out
inc
out
jl
cmp
and
push
rcrb
sub
inc
or
hlt
jno
lret
mov
add
xchg
pop
xchg
fidivrs
push
sbb
push
adc
mov
test
lcall
or
out
jg
mov
fwait
pusha
into
add
dec
or
cli
xor
mov
push
mov
xor
jnp
xchg
xlat
jmp
out
hlt
dec
mov
inc
push
mov
ret
cwtl
dec
ss
insb
sub
in
sahf
push
ret
inc
push
rcrb
ficoms
paddsb
cmp
sbb
repz
and
into
imul
inc
stc
dec
in
andb
ds
movb
ljmp
cmp
mov
pop
rdmsr
add
sub
ss
lods
rcrb
mov
iret
adc
jmp
and
mov
stc
push
sbb
mov
adc
in
push
shll
stos
mov
inc
dec
cld
sub
repnz
call
imul
sbb
add
xchg
in
sbb
test
push
daa
dec
or
idiv
mov
mov
shll
out
idiv
jge
mov
add
pushl
clc
int3
outsl
or
xchg
fimull
push
sub
repz
out
fcomps
or
xor
shl
es
fdivr
outsb
scas
ja
sbb
push
nop
mov
fst
sub
push
in
jecxz
cltd
mov
dec
xor
std
xchg
pop
stc
imul
fimuls
lcall
adc
pop
sahf
ds
adc
and
fucomi
out
outsb
and
xchg
loop
cmp
packssdw
or
test
aad
lret
mov
xchg
mov
mov
stos
int3
adcb
jbe
push
mov
gs
and
jecxz
idivb
shll
mov
xchg
xchg
inc
pop
nop
fcomp
jnp
add
cld
jle
into
call
ljmp
ljmp
push
sbb
sahf
cmpsb
xchg
in
int
xadd
jl
push
push
add
testl
inc
idivl
mov
push
test
jl
sbb
mov
ret
cmpb
clc
pop
sbb
cmpsl
out
in
hlt
mov
dec
push
sub
mov
mov
jo
cmp
sub
jl
int
out
or
mov
mov
rcll
hlt
int
push
and
push
mov
notl
pop
incb
scas
mov
inc
sbb
mov
mov
int
ss
lcall
add
hlt
mov
repnz
xchg
mov
pop
addr16
cmpsb
jg
std
xor
fstps
push
add
push
stos
inc
add
dec
or
mov
mov
cmp
in
cmp
rcrl
rclb
xchg
ds
shrb
or
mov
mov
add
int
or
xor
stc
pop
ret
gs
jge
imul
mov
call
call
or
cmp
sub
inc
mov
push
and
enter
imul
in
jecxz
xor
cmp
or
ds
mov
mov
mov
frstor
leave
lret
inc
cmp
loope
pop
fucomi
sbb
mov
hlt
ret
daa
xor
les
cmp
sub
cmp
dec
jge
mov
in
jo
jge
fiadds
pushf
scas
fstpt
mov
loop
and
sarb
in
repnz
stos
fwait
bound
imul
pop
inc
popa
inc
movsb
pop
out
repnz
ficoml
movsb
and
or
xchg
insb
cltd
or
or
sub
xchg
cwtl
xchg
push
jle
push
mov
mov
mov
and
mov
in
das
int
jbe
ret
and
pop
and
test
scas
int3
pop
repz
push
pushf
or
adcl
jnp
ss
clc
imul
leave
dec
lcall
add
mov
add
subl
sub
insl
mov
mov
popf
out
rorl
out
repz
shll
adc
nop
add
sub
ljmp
sub
jecxz
xchg
cltd
sarb
xchg
add
jns
ja
nop
jae
inc
rcr
dec
sub
sbb
sub
sub
or
inc
pop
pop
xchg
mov
lock
inc
jae
cltd
push
in
add
loopne
adc
in
clc
test
and
adc
add
fwait
cmp
in
push
pop
in
mov
addr16
and
repz
xchg
sarb
subb
je
int
mov
in
sub
pop
jno
add
cltd
stos
std
pop
ljmp
gs
pop
cmp
and
mov
mov
pop
push
mov
das
in
push
pop
idiv
ret
mov
sbbb
xor
sbb
xchg
xchg
mov
imul
mov
xor
data16
jnp
gs
dec
movsb
rorl
cmp
leave
stos
xchg
cmpsb
iret
loopne
sub
test
inc
dec
sub
add
pop
and
cmpsl
ret
push
aam
cld
add
mov
adc
dec
push
ror
jmp
outsl
dec
shl
dec
sub
jbe
jecxz
rolb
les
out
mov
xor
aas
imul
sbb
xchg
dec
sbb
lcall
rcll
pop
sbb
jge
sbb
loopne
dec
enter
xchg
or
add
xor
xchg
mov
xor
pop
dec
ljmp
and
into
xchg
test
int3
pop
stc
push
xor
cmpsb
jb
jmp
cwtl
leave
imul
dec
or
dec
mov
jo,pt
stos
dec
inc
stos
out
sbb
sarb
inc
shrl
pop
jecxz
sub
xor
mov
popa
repz
clc
das
mov
jne
das
jmp
sub
and
fistpl
insl
mov
loopne
push
xor
daa
add
dec
ljmp
inc
rcrb
or
movl
push
loop
clc
jne
sbb
ficoml
adc
cmc
jp
cmp
cmp
or
imul
loopne
je
xor
jo
push
mov
aaa
sbb
rcrl
sbb
pop
cmp
cli
test
push
mov
daa
gs
pop
adc
jp
out
xor
cwtl
scas
pop
enter
cmp
mov
mov
xchg
pop
add
les
mov
xchg
sbb
loope,pn
lret
test
into
dec
push
and
sbb
out
clc
xor
pop
and
fwait
jno
ss
sahf
ds
mov
mov
inc
xchg
xchg
xor
jl
add
jle
cmc
sub
repnz
cmp
pop
pop
les
std
in
jge
adc
addr16
jnp
xchg
test
mov
test
jp
push
and
scas
fldt
mov
insb
xorb
mov
repnz
daa
sub
xor
mov
out
icebp
data16
adc
shl
sub
sahf
xchg
pop
cwtl
adc
lahf
pop
inc
mov
cmp
xchg
rcll
in
ret
lret
cmc
jle
lcall
gs
fstpt
inc
mov
xor
shl
popa
insb
push
dec
push
jmp
repnz
lret
mov
pop
pushf
mov
stos
icebp
pop
ret
xor
pop
inc
jle
test
test
loop
mov
jnp
sahf
or
mov
jo
syscall
idiv
out
test
inc
movsl
xchg
outsb
ret
mov
push
or
cli
jne
addr16
aam
add
insb
shlb
enter
mov
jb
add
or
lcall
rcrb
insb
out
lret
sub
add
jle
loopne
out
stos
jne
jbe
shl
mov
sbb
mov
rclb
mov
sub
mov
mov
imul
adc
cmp
jl
out
shll
cmpsb
and
cmp
fildll
pop
clc
dec
arpl
ret
sbb
insb
stc
jb
mov
adc
mov
movsb
dec
dec
pop
aam
and
out
das
xchg
pop
pop
cld
cwtl
and
or
bound
push
mov
cmc
shrl
add
fstl
aad
aas
pop
cli
jbe
scas
sub
int3
cmp
aaa
sub
nop
dec
ljmp
ja
rclb
xchg
out
shr
or
xchg
cmpsl
jmp
fs
xor
inc
add
push
cld
mov
jb
xchg
xchg
sub
in
in
xor
pop
repnz
add
jae
out
rcl
in
adc
jns
loopne
sarl
lods
cmp
cmp
sbb
xlat
shrb
sub
stos
cmp
and
insb
adc
cmpsb
push
jg
fdivrl
pop
in
fisttpl
mov
xor
mov
jne
es
dec
sti
sbb
mov
loope
pop
mov
push
push
daa
nop
fiadds
shlb
pop
pop
and
loope
mov
aad
cmc
mov
xor
cmp
test
add
mov
add
lock
sarl
lret
cmpsb
push
xor
es
shll
add
push
insb
inc
push
bound
dec
add
out
cs
pop
rorl
cmpsb
xlat
dec
lcall
dec
xor
xor
inc
iret
shl
pusha
xchg
fsubl
sahf
and
fiaddl
in
sbb
outsb
adc
fnstenv
push
adc
xor
push
jo
fwait
lock
sbb
jp
xor
xchg
mov
jb
inc
loope
jge
xchg
inc
mov
push
aas
rorb
dec
test
cld
xor
scas
sub
push
and
das
pop
push
arpl
daa
cmp
out
dec
pop
dec
push
sub
mov
cmp
cmp
push
mov
mov
dec
adc
cmc
popa
ds
or
jge
jg
mov
cmpsl
or
pop
pop
ret
movsl
mov
pop
cmpsl
sbb
pusha
cltd
stos
mov
test
add
cld
scas
lock
pusha
mov
sub
orl
xor
testl
sar
pop
xor
inc
sbb
push
out
imulb
mov
pop
sbb
out
test
imul
js
adc
pop
dec
dec
mov
cmpsl
icebp
mov
in
mov
xlat
in
fcmovnb
cwtl
xchg
xor
dec
mov
cmpl
js
push
lahf
fisubrl
mov
fistpl
leave
ret
mov
dec
pop
jecxz
imul
lret
cs
testl
loop
stc
shl
mov
nop
popf
loope
push
cld
and
adc
mov
cmp
mov
icebp
nop
dec
aaa
adc
loopne
test
cmp
mov
and
dec
outsb
mov
push
imul
xor
mov
std
je
cmc
fs
test
arpl
xor
xlat
in
pop
aam
decb
adc
inc
rcrb
fistps
sub
shlb
sub
mov
sarb
into
mov
add
cwtl
sub
in
pusha
mov
or
mov
xchg
pusha
adc
outsb
adc
ret
aad
iret
add
adc
jge
out
movaps
jp
adc
jnp
mov
push
mov
cmp
pxor
mov
cmc
or
ret
cmp
scas
fidivrs
xchg
push
out
loopne
mov
sub
or
xchg
fucomip
shrb
ds
gs
aaa
mov
xlat
test
imul
mov
mov
xchg
jbe
mov
out
out
cmp
jg
scas
orl
insb
cli
dec
aad
hlt
mov
add
pop
fsubr
repz
jecxz
inc
xchg
mov
scas
or
adc
adc
sbb
or
movsl
or
mov
dec
cmp
or
cltd
iret
cmpsb
adc
xchg
and
inc
sub
sub
les
mov
pop
mov
adc
mov
loop
mov
xor
xor
cs
xchg
daa
xchg
ret
push
imul
cld
cmpsl
inc
loopne
mov
js
mov
sti
out
imul
aaa
sub
ret
std
pushf
mov
jnp
pop
sub
loopne
lds
add
jnp
fstps
or
xor
popf
or
push
cmp
dec
stc
fnstsw
outsb
jmp
pop
std
or
jecxz
inc
movsl
inc
pop
sbb
inc
xchg
mov
enter
jb
add
pop
clc
lock
rorb
jno
xchg
inc
sub
add
ret
sahf
divl
mov
out
xor
popf
pop
sub
pop
cmp
cmp
xlat
popf
jp
fs
scas
and
fwait
mov
aaa
fwait
shrb
sub
stos
movsl
push
dec
or
or
cmovl
scas
shl
dec
icebp
aad
jecxz
fsub
xor
mov
inc
les
jge
lods
inc
xchg
clc
int
les
cmpsb
jle
rolb
inc
test
outsl
mov
out
pop
jb
movsb
loop
jne
add
jns
sbb
push
call
push
movsl
les
push
dec
jne
add
sbb
xchg
cmpsl
adc
mov
inc
ret
vpavgw
lahf
adc
lea
or
mov
push
sub
fcomp
sarb
add
lods
movsl
ljmp
cmp
mov
push
sub
mov
mov
sub
sbb
outsb
or
fs
mov
lcall
add
mov
push
cmpsb
test
push
in
xchg
lods
fwait
mov
jne
mov
cmp
add
xor
and
aaa
cmpl
pop
and
or
hlt
outsl
mov
and
xor
pushf
pop
xchg
aas
inc
push
jmp
cmp
add
push
push
push
push
out
lcall
cld
inc
adc
jmp
mov
and
xor
push
aaa
lods
and
xchg
mov
cmp
pop
add
dec
dec
cmp
lahf
push
jmp
out
mov
fstps
sub
cmp
adc
or
iret
outsl
ret
fdivl
or
push
ficoms
mov
nop
jae
cmpsb
sub
rol
outsb
mov
push
sub
mov
ret
jb
mov
jge
shlb
mov
mov
xchg
loopne
out
inc
clc
push
jno
jle
sahf
aam
mov
inc
iret
das
out
inc
mov
icebp
sub
or
fadds
mov
add
adc
in
loopne
popf
sbbl
pop
add
scas
jae
mov
mov
pop
push
mov
inc
shl
out
mov
pop
gs
arpl
jae
aas
in
push
cli
shl
orl
cmp
aam
mov
mov
xlat
scas
lods
sbb
das
mov
push
cli
sbb
xor
int
cltd
scas
les
jl
inc
in
mov
gs
or
mov
jns
lock
mov
sub
out
mov
xchg
sbb
fdivrp
jo
pop
sbb
fmulp
push
stc
or
fldcw
rcrl
cmp
mov
hlt
pusha
loopne
lods
test
mov
xchg
sub
repz
call
push
fsubp
pop
push
sti
int3
xchg
xor
icebp
cmpsb
jbe
pop
sbb
ret
test
sbb
scas
out
cmp
sbb
cmpsl
cmp
sbb
movzbl
sar
mov
bound
xchg
sahf
mov
mov
cmp
xchg
mov
stos
js
insl
sbb
ret
call
ss
aam
and
lea
jo
stc
mov
mov
mov
lods
ljmp
shlb
sbb
inc
aaa
push
lret
sbb
adcb
inc
jo
and
sub
push
jge
fldl
mov
cwtl
add
cmp
in
repnz
inc
cmc
clc
inc
add
push
sbb
xchg
iret
leave
xlat
adc
adc
out
xor
loop
dec
repz
dec
xchg
jnp
jp
fdivrl
sub
flds
pop
mov
jmp
lods
js
loope
mov
scas
test
out
cmc
subl
je
scas
data16
pop
call
jl
pop
jl
nop
popf
js
mov
push
outsb
mov
add
hlt
test
jge
xchg
ds
stc
or
mov
cmp
loop
orps
add
mov
mov
adc
mov
pop
aaa
test
fs
pop
dec
add
icebp
push
test
adc
push
pop
sahf
xchg
dec
ss
dec
pop
or
int3
xchg
push
rolb
pop
lds
lret
mov
adcl
out
push
adc
sti
or
inc
lret
sub
mov
decl
fistl
sub
les
scas
mov
xor
push
mov
in
sahf
iret
inc
mov
adc
or
ret
loope
in
test
ljmp
push
shl
cs
push
aaa
repz
gs
stos
mov
lahf
and
stc
jbe
xlat
inc
clc
in
scas
inc
add
outsl
fldl
ljmp
out
xchg
push
jge
popa
sub
jmp
filds
sbb
adc
push
mov
add
adc
push
dec
lock
or
mov
xchg
fildl
lcall
push
insl
mov
loope
cmp
shrb
xchg
or
mov
ret
mov
mov
cwtl
fs
push
push
xchg
ljmp
cmp
icebp
fstpt
sbb
sbb
stos
add
andb
push
jno
lret
sub
sahf
insb
int
sub
dec
jmp
mov
mov
fwait
bound
adc
push
subl
rcl
mov
imul
mov
frstor
adc
dec
dec
mov
loop
push
insl
std
lock
rcr
mov
mov
lcall
jp
pop
sbb
pushl
ror
cld
imul
pop
sub
sub
xchg
inc
test
mov
nop
push
in
xchg
aam
jb
inc
dec
ljmp
or
sbb
push
add
jnp
gs
lods
mov
pop
inc
adc
cmpsb
pusha
mov
inc
pop
cmp
xchg
int3
sbb
inc
jg
lret
fsubrl
cmp
adc
mov
lret
xor
cmp
movsl
inc
sti
fdiv
cmpsb
jnp
sti
and
push
test
cmpsb
fcmovnb
or
repz
xchg
add
repz
mov
pop
cmp
out
popa
scas
sub
mov
and
push
xchg
jecxz
loope
lahf
or
clc
dec
and
pusha
xor
inc
stos
xchg
mov
jge
mov
jl
ror
inc
out
lret
imull
sub
cltd
add
es
test
pop
ja
jl
xchg
jecxz
jbe
mov
sbb
sbb
and
shl
push
lahf
sub
sahf
and
sbb
outsb
xchg
or
sbb
loope
push
push
mov
daa
push
pop
pop
ljmp
lds
xchg
fwait
sub
stos
fistpl
or
sahf
mov
stc
mov
test
inc
movsb
and
jb
mov
dec
insb
inc
cmp
mov
xor
test
mov
cli
mov
sbb
dec
push
adc
push
das
mov
inc
nop
adc
sahf
scas
cmp
xlat
test
inc
or
stc
mov
aaa
sbbl
mov
push
fbstp
int3
lds
jno
sbb
mov
cmp
cwtl
adc
insb
mov
mov
mov
mov
cli
pushf
adc
shll
mov
dec
sub
je
pusha
ret
mov
push
pusha
dec
les
sbb
bound
test
mov
out
repz
int3
mov
adcl
stos
sbb
rcl
cld
ds
mov
int3
fdivrs
xchg
in
jmp
aam
or
xor
hlt
and
shlb
jb
lret
jb
fcompl
cmp
and
out
cltd
push
mov
das
test
into
outsb
xchg
scas
add
mov
inc
test
arpl
mov
orl
cmp
push
push
fstpt
xchg
push
add
adc
repz
ja
dec
xchg
enter
into
sbb
and
xchg
cmpsl
mov
cltd
mov
test
xchg
lods
ret
std
adc
fistps
in
in
dec
aaa
pop
dec
addr16
popf
mov
mov
jmp
int3
jmp
dec
fistpll
lcall
test
xchg
or
sbb
rcll
jmp
mov
je
loope
stos
adc
lock
cmp
fmul
adc
push
jo
or
pop
lds
or
dec
push
aam
jns
test
inc
xor
pop
lcall
pop
pusha
cmp
leave
or
adc
add
cmp
imul
jp
aaa
xchg
nop
movsb
int
push
add
sbb
jmp
pop
mov
inc
sahf
adc
in
mov
mov
mov
xchg
jns
xlat
ja
inc
add
fldl
push
imul
mov
pusha
xchg
dec
sbb
sbb
es
mov
adc
int3
mov
jnp
stc
add
pop
pop
call
jecxz
mov
mov
fadd
mov
lret
and
test
loop
push
data16
test
mov
dec
xchg
bound
std
loopne
cmp
inc
and
adc
jne
fs
pop
mov
mov
ret
scas
xchg
fmull
popf
mov
cltd
or
pushf
fistpll
adcb
xchg
push
or
and
shrb
mov
cs
inc
ret
clc
dec
adc
mov
inc
cli
xor
sub
and
cmc
add
scas
sub
rol
push
pop
cmpsb
jne
xchg
std
pop
aas
pop
mov
sbbl
ret
pop
in
shlb
lods
sbb
lds
sbb
xor
loopne
out
loopne
in
xor
xor
adc
fucom
jb
cmpsb
cmovge
dec
cmc
shll
test
cmc
sarb
mov
test
rolb
xor
dec
or
popf
arpl
jp
push
mov
jae
arpl
sbb
jb
xor
divl
popf
push
repz
cvtdq2ps
or
mov
and
push
push
addb
cmc
xor
and
xor
xchg
or
je
inc
sub
out
loope
cmp
cmp
pushf
adc
mov
xchg
dec
or
jle
mov
call
jp
inc
cmpsb
movsl
mov
inc
push
fbstp
cltd
mov
jb
dec
js
pop
fwait
sub
xchg
xchg
jmp
xchg
jge
sub
cmp
hlt
test
dec
rcrb
and
xor
shrl
sbb
push
pop
mov
inc
cmc
mov
lcall
call
data16
or
dec
dec
adc
movsb
sbb
lock
idivw
cmp
xchg
xor
fnstenv
stos
insb
jne
and
mov
jno
decl
stc
pushf
jae
ja
sbb
cmp
cmp
out
push
inc
leave
jae
cmp
and
mov
sub
xchg
daa
ret
mov
dec
shll
mov
push
sbb
jp
lahf
cmp
clc
mov
mov
stc
cmc
mov
push
push
mov
cmp
inc
pop
mov
add
cmc
addr16
insb
xor
cltd
pop
imul
mov
add
insl
cmc
sub
pop
cmp
or
pop
mov
pop
lods
enter
cltd
push
into
and
cmp
inc
cmpsl
les
and
pop
ds
mov
dec
push
dec
das
push
mov
jns
cli
sti
out
dec
jae
stc
mov
mov
mov
cwtl
push
cld
pop
pop
or
inc
pusha
out
mov
stc
aaa
jge
pop
daa
dec
mov
nop
cltd
push
mov
mov
mov
jmp
test
xor
int
or
leave
shll
popf
adc
sbb
add
mov
dec
lea
aaa
loopne
aaa
mov
dec
lcall
ds
repnz
daa
mov
or
pusha
out
sub
sub
xchg
lock
cli
ljmp
adc
mov
negb
jmp
cmp
cld
or
es
sbb
addb
test
std
jl
out
push
push
and
scas
push
and
jl
jge
cs
call
pop
shlb
and
arpl
dec
jmp
test
sbb
jg
aaa
mov
rol
mov
iret
pop
sub
jp
xchg
or
cmp
jl
jb
adc
jecxz
pop
add
std
xchg
aaa
and
pop
mov
cmp
sub
xor
loop
fwait
mov
add
dec
movsb
jns
bound
inc
test
insl
or
cmp
push
ret
pop
push
imul
fs
je
push
and
jae
out
push
lret
nop
into
lea
fwait
pop
mov
inc
jno,pt
add
jns
inc
or
cmp
xor
sti
enter
mov
shlb
add
mov
pop
mov
inc
out
repz
pop
outsl
jp
push
adc
sar
aas
cld
pop
arpl
adc
pop
icebp
pop
cmpsl
in
mov
adc
adc
jle
xchg
adc
dec
jl
shll
lcall
push
std
dec
mov
push
mov
cmp
leave
iret
mov
stos
pop
mov
jmp
es
inc
xchg
jbe
pop
bound
mov
test
mov
mov
jp
or
xorb
cld
inc
cmpl
jg
mov
add
jnp
hlt
mov
inc
clc
je
push
push
out
mov
lret
aam
cmp
or
shll
and
out
jo
imull
pop
cmp
aaa
sbb
jns
push
inc
nop
in
rcr
int
pushl
movsb
test
ljmp
jmp
loop
xchg
fbld
ds
int
or
add
push
xchg
je
outsb
ficoms
dec
pop
imul
lcall
dec
out
sub
mov
mov
adc
loopne
cmp
xor
test
or
push
insl
pop
dec
xor
jbe
add
in
je
dec
popa
adcb
ffreep
sbb
cmp
and
jp
push
call
sub
pop
in
in
mov
jge
inc
cltd
inc
dec
xchg
test
xor
adc
pushl
aaa
jp
rcrl
sbb
mov
cmpsl
mov
sbb
xchg
mov
insb
lret
xchg
cmp
adc
roll
ret
xchg
jbe
andb
dec
mov
xchg
mov
flds
or
xlat
test
or
cmpsb
adc
push
cmp
fwait
xor
cmpsb
adc
add
jno
mov
xchg
xchg
mov
pop
push
in
mov
mov
ret
or
out
cmpsb
aad
mov
sarl
cmp
enter
cmp
inc
push
inc
dec
jb
popa
and
lret
adc
repnz
mov
pop
pop
lds
scas
sti
push
inc
insb
push
push
sub
out
clc
aaa
xchg
pop
popa
nop
push
sbb
jbe
fisubl
std
std
scas
int3
fildl
das
imulb
sub
jo
xchg
loop
cld
or
lahf
les
adc
fs
insb
in
clc
or
fbstp
or
mov
mov
out
clc
jge
xchg
pop
pop
repz
imull
xchg
aas
pop
sarl
jns
pusha
stc
stos
out
sahf
jo
imul
push
adc
out
ds
mov
popf
xor
into
mov
popa
fs
jmp
fidivl
jbe
pop
push
mov
shl
fldcw
mov
mov
xchg
mov
mov
push
andb
fisttps
and
rolb
mov
faddl
test
scas
popf
mov
inc
sbb
jmp
sbb
cmpsb
in
sbb
mov
adc
movmskps
iret
sub
pusha
out
in
stos
sbb
sahf
push
cmp
or
xchg
packssdw
pop
out
aaa
cmp
sar
mov
push
or
inc
add
xchg
sti
movsb
xchg
adc
add
mov
test
scas
cmpsl
push
outsb
adc
stc
cmpl
cmc
fsubrl
bound
testb
arpl
jle
aas
jb
nop
cs
xor
mov
loope
movsl
jl
daa
xchg
std
xor
shlb
loope
jg
shr
jns
gs
rcl
sbb
xorl
jbe
dec
xchg
jge
aam
data16
subl
sbb
clc
sbb
jae
mov
pop
in
int
add
mov
push
out
adc
cmp
fidivs
fcoms
mov
aaa
dec
movsl
xchg
or
cld
xchg
mov
jo
inc
ljmp
icebp
add
fmuls
mov
jg
hlt
hlt
mov
call
rcrb
hlt
mov
aas
fistpll
or
out
mov
jmp
call
or
inc
fdivr
pop
sbb
aaa
jo
outsb
ljmp
jmp
fcmovb
outsl
mov
jmp
inc
dec
pop
jle
lret
int3
sti
lcall
sbb
rolb
add
jbe
shlb
mov
inc
dec
mov
xchg
xchg
cmp
lret
rcl
icebp
in
repnz
push
sbb
fdivrs
sbb
sbb
xor
testl
mov
xchg
pop
stc
push
cmp
mov
cmpsb
adc
in
ljmp
pop
cmp
loope
addr16
test
add
cmp
cmc
test
fs
adc
pop
inc
call
mov
jo
push
test
test
pop
out
pop
add
mov
xchg
mov
inc
xorb
mov
aaa
lret
add
mov
fstps
and
aaa
out
std
jge
mov
push
jo
int3
cmpb
bound
addb
fildll
jne
iret
scas
sbb
pop
inc
adc
sbb
and
cmp
dec
sbb
inc
push
cmp
mov
push
mov
into
bound
push
into
dec
subl
cmp
mov
in
stos
xorl
and
mov
es
sub
leave
xchg
inc
lret
mov
push
and
cwtl
movsl
pop
and
sub
lcall
fwait
sbb
and
jmp
cmpsb
shlb
pop
add
dec
inc
fisubrl
lea
xor
jg
in
insb
cli
mov
push
out
lret
or
popa
fistl
imul
jecxz
jmp
cld
int
pop
adc
cmpsb
inc
sarb
sub
xor
mov
or
add
pop
pop
out
pop
ja
inc
fldenv
in
xor
jae
movsb
repz
push
clc
popa
and
or
cli
orb
icebp
pop
dec
leave
sbb
sar
out
ds
and
jns
insl
xchg
sub
and
pushf
mov
dec
push
cmpsb
in
push
arpl
and
pop
jge
xlat
daa
decb
aad
cmp
jg
xchg
test
adc
push
call
jp
jmp
call
adc
repnz
lahf
jns
push
sbb
add
aad
dec
push
in
cltd
fdivrs
mov
ds
repnz
lret
xor
xlat
sarb
sub
lods
pop
cld
je
sbb
fsubs
mov
ja
jns
aad
cmp
or
sbb
cmp
mov
testl
das
aas
adc
cmp
incb
ror
fcmovu
adc
mov
xor
sti
stos
aas
mov
stc
das
mov
cmp
lret
imul
cmp
lods
mov
std
test
jnp
scas
popa
mov
add
fs
cmpsb
loopne
jl
lahf
ror
ret
test
adc
out
dec
jmp
sub
pop
in
ja
std
cmp
cmpsb
xchg
sti
add
mov
push
mov
xchg
leave
fdivs
add
adc
cmp
rol
xchg
sahf
cmp
xlat
add
mov
cmpsl
xor
sti
aad
xor
inc
push
test
out
clc
jno
xchg
ja
arpl
pop
addr16
jae
mov
repz
inc
in
test
pop
dec
mov
sub
stc
pop
adc
sub
fldt
and
xor
out
cltd
aam
mov
aad
int3
fadds
jmp
fisttpll
mov
xor
pop
xchg
adc
icebp
mov
mov
jg
aam
orb
pop
sbb
push
lahf
cmp
jae
jno
popf
movsl
pop
push
ss
xor
leave
dec
fildll
dec
pop
sbb
pop
iret
mov
adcl
testl
decl
push
sub
xchg
inc
cmp
es
jb
and
mov
push
aaa
adc
add
in
stc
outsw
jmp
mov
dec
imull
cmc
xchg
sbb
mov
pop
jp
outsl
dec
cs
xchg
cmc
fdivs
sbb
es
je
das
sahf
lds
mov
test
loope
or
dec
jno
xor
lret
push
push
pop
push
popa
ja
mov
jo
dec
mov
jns
in
loopne
jge
jno
push
pop
mov
hlt
push
mov
dec
dec
bnd
mov
lret
in
imul
aam
xor
filds
inc
cmp
loopne
lret
popf
out
int
rcl
jnp
mov
push
adc
xor
sbb
das
imul
pop
pop
dec
in
ss
cmp
cli
adc
dec
insl
decl
pop
sbb
xor
mov
fcoml
jo
sub
daa
into
addr16
cmpsb
insl
movsl
push
add
pushf
xor
mov
xchg
cmp
cmp
mov
inc
or
jb
in
test
lea
cld
test
dec
idivb
clc
jbe
cmp
stos
mov
mov
lret
cmp
mov
cmpsb
rorl
roll
loop
sti
clc
xor
ljmp
popa
or
inc
push
cmp
jmp
fbstp
lcall
or
dec
aaa
ficoml
cmpsb
sub
jo
push
jae
cs
hlt
sbb
mov
or
stc
scas
je
pushf
cmp
and
inc
ret
xor
pop
dec
in
ds
fcompl
xlat
cmpsl
insl
repz
fdivrl
xchg
imul
andb
sti
test
adc
lods
gs
mov
cmp
or
push
add
ror
push
loop
add
aaa
push
push
lds
lea
scas
push
adc
jl
sbb
jnp
mov
repz
scas
xchg
add
scas
pop
push
cltd
lods
jle
data16
ds
and
sub
xor
data16
mov
hlt
dec
sti
or
loopne
lods
std
clc
loopne
pop
fnstenv
aaa
mov
mov
in
jge
and
add
call
pop
sub
xor
out
popf
pop
inc
add
lret
mull
mov
jb
lahf
stc
cmp
out
and
fadds
je
lcall
sbb
sub
lea
fwait
xchg
inc
js
and
mov
mov
adc
bnd
ja
faddl
jne
lods
imull
andb
movsb
idivl
mov
arpl
mov
push
mov
pop
jns
jbe
add
dec
mov
adc
mov
aad
adc
mov
inc
inc
mov
ds
sbb
sbb
movb
leave
scas
jge
out
fldt
loop
jb
cmpb
mov
mov
add
adc
movsl
xor
shlb
cmp
inc
add
sahf
inc
loopne
dec
sbb
dec
or
inc
jno
xor
xchg
daa
adc
sti
sub
push
xor
xor
xchg
and
xchg
cltd
js
cmpsl
ja
int3
mov
lds
ljmp
enter
pusha
inc
dec
icebp
cmp
inc
stc
mov
mov
les
out
and
in
add
xor
jecxz
test
pop
scas
fcmovnbe
cmpl
int3
fst
rcll
adc
mov
scas
es
inc
test
sbbl
push
jecxz
lcall
ja
shlb
test
cli
fimuls
and
lcall
cmpsl
lock
mov
mov
mov
push
das
dec
jne
je
xchg
imul
pushf
gs
fwait
ljmp
cmc
insb
lret
xor
jecxz
mov
add
add
adc
flds
shrl
xchg
pop
fstps
out
cmpsl
mov
nop
cwtl
lods
mov
shl
ss
xchg
xchg
mov
jbe
js
mov
mov
mov
jmp
cmp
iret
push
sar
stc
jnp
push
hlt
stc
mov
push
xor
fs
inc
pushf
sub
fsubl
mov
pop
lock
je
stc
xlat
es
dec
xlat
fidivl
out
mov
stos
loope
repnz
adc
pop
adc
shl
xlat
dec
cwtl
add
int3
push
push
les
sbb
inc
adc
push
jecxz
push
jns
adc
sub
jge
push
ss
jne
nop
cmp
in
mov
cs
repz
loopne
fbld
pop
lods
xor
dec
xchg
sbb
push
lahf
jle
xor
es
mov
insb
inc
inc
sbb
scas
lret
lea
sub
mov
leave
sti
js
das
add
adcl
cwtl
test
sub
test
pop
stos
jnp
push
pop
js
sbb
mov
xor
sub
mov
cmp
inc
cmp
mov
ds
cli
mov
push
pop
push
pop
inc
nop
aam
xchg
sbb
jno
lcall
xchg
push
or
cs
mov
jns
js
jnp
add
data16
lds
sub
mov
or
xchg
into
stos
jle
jae
out
daa
push
mov
popa
lret
jmp
test
xchg
rcl
cld
mov
mov
inc
xor
push
sub
ja
es
jmp
int
jle
mov
pushl
shll
sbb
pushf
cmpsl
dec
sbb
fsubrs
in
ret
xorb
xor
mov
call
std
push
dec
repnz
into
mov
mov
jb
adcl
sbbl
xchg
rep
push
inc
scas
ds
cmp
mov
sub
mov
repnz
push
imul
or
jo
xchg
es
mov
fwait
mov
push
jns
aaa
jns
mov
mov
and
outsl
adc
or
and
jnp
out
dec
mov
and
imul
sub
add
lock
add
cmpsb
ljmp
sbb
fwait
add
mov
push
rcll
pop
arpl
in
scas
and
cmp
imul
es
fs
test
iret
call
cli
jmp
mov
ret
jae
add
fidivl
cmp
sahf
push
pop
xchg
mov
jmp
fcmovnbe
add
test
mov
lcall
xor
sbbl
jge
sarl
add
jle
pusha
insl
adc
ret
or
or
daa
or
pop
mov
and
xchg
cmc
enter
addr16
imul
in
fldl
rdpmc
fsubrl
mov
push
cs
push
dec
ja
sub
sbb
push
faddl
sbb
addr16
imul
push
push
pushf
movsl
add
ret
pop
repnz
or
and
inc
jle
and
pop
sub
outsl
sbb
and
shll
jmp
ja
repnz
fsubs
fsubl
sub
pop
pop
add
mov
fwait
mov
test
shll
scas
scas
jmp
ljmp
rclb
mov
fcoml
pop
add
pop
imul
lea
mov
cwtl
cmpsb
adc
add
mov
ss
incb
divb
sarb
push
sarb
jno
mov
xorb
test
call
aas
xor
and
adc
inc
inc
or
push
push
cs
popf
ss
mov
push
aam
mov
cmp
das
and
adc
repnz
mov
out
mulb
jae
scas
cmpsb
sbb
shl
mov
sub
push
xor
dec
jmp
or
popa
mov
sbb
pusha
cmp
insl
sbb
push
das
mov
mov
add
sbb
add
fs
mov
arpl
mov
mov
repz
cmp
daa
inc
push
jl
pop
out
push
sbb
std
xchg
movsl
lock
xchg
daa
mov
inc
jl
and
inc
dec
fnsave
or
add
cmp
jmp
inc
mov
pusha
fiaddl
or
sbb
mov
insb
and
lods
test
add
pop
nop
jl
cmp
fcompl
ret
fs
dec
data16
pop
sarb
jae
jg
xor
fnsave
mov
loopne
aas
xchg
outsb
push
jg
jle
or
lret
add
jno
outsl
push
imul
adcl
sub
mov
aad
lea
in
mov
xor
push
mov
mov
pop
add
in
cmpsl
and
mov
push
out
and
push
and
sarl
ljmp
fistpll
pop
pusha
es
cmp
clc
std
les
or
push
or
xor
test
incb
mov
popl
js
inc
int3
pushf
mov
xchg
mov
xor
int3
das
fwait
stos
mov
mov
mov
jns
or
and
adc
hlt
fs
jl
je
adc
fidivrl
push
mov
cmp
es
xlat
add
add
sbb
dec
or
fldenv
in
and
xchg
fs
xor
xchg
loopne
fcompl
pusha
notb
enter
movsb
jg
xchg
pop
jns
jmp
icebp
into
sbb
dec
addr16
sahf
out
inc
iret
push
push
pusha
or
in
jne
loop
gs
nop
shl
adc
mov
lcall
js
imul
imul
adc
fidivs
hlt
dec
or
testb
sub
xchg
or
xchg
addl
loopne,pn
push
sub
mov
mov
add
or
cmp
cmp
pop
mov
inc
sahf
aad
jl
cmp
or
rclb
cmpsb
rcrl
lret
add
or
ficoml
add
mov
sarb
dec
adc
ret
push
icebp
mov
fcomps
mov
in
push
fisubrl
repnz
rorl
out
or
cmc
sub
sub
inc
dec
jo
insb
and
sbbl
add
loopne
push
adc
jg
dec
push
add
sahf
push
mov
insl
xor
insb
sbb
repnz
mov
mov
sbb
inc
ret
sub
stos
fimuls
cmp
add
adc
sarl
pop
pop
cmp
mov
xor
aad
and
pop
call
push
mov
sub
pop
lcall
dec
sahf
pop
ficompl
xlat
imul
fnsave
insl
ret
cmp
cmpsl
push
sbb
int3
scas
push
loop
mov
or
mov
adc
add
outsl
xor
cmp
mov
inc
xlat
sub
mov
outsb
push
fwait
jmp
aam
mov
sub
ds
repnz
out
mov
sbb
pop
xor
clc
andl
ljmp
xlat
adc
adc
mov
cli
pop
add
sahf
js
loope,pn
outsb
mov
fcmovb
jge,pt
cmp
je
iret
ret
dec
push
mov
outsb
scas
call
mov
jmp
adc
arpl
movsb
lahf
xchg
ficoms
or
pop
xchg
mov
inc
inc
push
pop
mulb
in
aam
aad
js
adc
cmpsl
add
ljmp
inc
xor
sub
jp
jp
push
jo
rorl
mov
ret
out
push
jmp
test
cmp
sbb
mov
aam
out
dec
jle
xchg
mov
popa
sub
mov
mov
aaa
mov
repnz
loop
lahf
test
movsb
pop
movsb
sahf
push
and
dec
adc
sbb
in
loope
sbb
sarb
popf
sbb
fwait
scas
cmpsb
pop
pusha
push
jmp
repnz
pop
pop
jnp
sarb
loop
pop
ret
sarl
into
in
cs
scas
out
cmp
in
inc
pop
jne
movsl
outsl
sub
icebp
mov
mov
adc
ljmp
cmp
iret
mov
cld
lods
inc
movsb
mov
ds
xor
aam
movsb
mov
push
mov
add
ds
mov
mov
js
out
xchg
push
cmp
or
or
push
lods
cmpl
into
btc
sbb
jnp
add
push
nop
mov
mov
jp
aam
mov
sbb
push
je
jns
pop
aas
imul
pushf
mov
push
sbb
imul
sub
cmp
sbb
neg
mov
mov
jno
cli
nop
pop
sub
test
or
inc
mov
scas
lahf
push
dec
daa
sub
fcmovb
and
icebp
pop
les
fs
cmp
mov
imul
cld
jge
jp
lret
arpl
lret
stos
insb
je
mov
cmp
or
jle
ficoms
jg
xchg
pushf
test
fucomp
mov
in
mov
jo
cmp
push
cmpsl
inc
mov
push
xchg
scas
push
sub
iret
insb
jo
loopne
adc
repnz
pop
iret
and
popf
add
adc
jns
loop
xor
sub
inc
rcl
mov
gs
xchg
sbb
cli
xchg
clc
in
xchg
push
out
xchg
dec
or
mov
lds
popf
mov
xchg
mov
test
mov
pop
cmp
mov
test
sti
pop
inc
add
out
pop
out
xchg
andl
fildll
out
and
ljmp
clc
and
or
inc
mov
mov
test
lcall
mov
push
in
adc
repz
jecxz
repz
dec
sub
fsubrl
aaa
pop
in
lcall
mov
dec
xchg
jb
das
xor
popa
pop
xlat
jo
push
hlt
inc
add
in
xchg
out
cmp
mov
push
aas
pop
adc
gs
lcall
dec
push
lods
cmp
testl
mov
mov
xchg
pop
push
fdivs
pop
jge
es
popf
cmp
mov
test
pop
push
lock
lods
sbb
scas
or
popl
pop
xchg
jp
push
mov
ret
xchg
xor
and
adcl
ds
repnz
ds
fcomip
out
std
cmp
imul
add
stos
into
jo
lahf
sbb
pop
jns
xchg
lods
fwait
stos
ret
daa
into
add
fs
out
mov
push
sub
fucomi
fists
int
ljmp
and
mov
sbb
cmpsb
sub
outsl
lods
repnz
mov
daa
add
sahf
jb
xor
pop
add
dec
push
or
mov
sahf
lcall
pop
call
ljmp
in
and
dec
test
aas
mov
adc
es
das
dec
inc
mov
dec
mov
rcrl
imul
or
mov
jecxz
rol
push
pop
sbb
push
mov
xchg
and
addr16
push
dec
inc
mov
push
and
inc
mov
stc
test
data16
in
or
sbbl
cmpsl
int
jb
bound
insl
pop
popf
cltd
das
and
in
nop
sbb
adc
mov
mov
outsl
mov
lds
das
mov
mov
aaa
xchg
cmp
lea
stos
jmp
xchg
xchg
mov
or
adc
test
mull
rcll
and
cltd
sub
sahf
inc
mov
sbbl
cwtl
pop
pop
adc
stos
jge
outsl
cmp
xchg
pop
mulb
outsl
ficoms
mov
std
lahf
mov
out
cld
cmpsl
cmpsl
add
fidivl
or
dec
push
test
adc
aam
adc
lods
push
dec
dec
pop
dec
sbb
mov
outsb
fsubrs
pop
mov
das
jmp
in
pop
mov
repnz
sti
pop
shlb
pushf
test
fistl
pop
sti
mov
inc
add
pop
add
es
push
int3
jle
loopne
and
push
aad
inc
push
jmp
loopne
xchg
mov
fmuls
sbb
icebp
fsub
je
inc
add
mov
mov
jp
loop
out
push
mov
daa
xchg
cld
sahf
pop
mov
xchg
int
call
dec
outsl
decl
mov
int3
mov
rcl
mov
fistpll
mov
push
clc
loopne
outsb
mov
jmp
loopne
bound
sbb
and
or
mov
jecxz
std
xchg
jmp
test
xor
scas
push
sbb
scas
push
jo
mov
push
push
mov
push
loopne
adc
jmp
pop
and
pop
or
lret
data16
in
out
lcall
lds
clc
fidivrs
adc
push
movsl
push
popf
inc
jnp
daa
and
push
scas
leave
lret
inc
or
leave
popa
aad
stos
stc
xor
int3
xchg
scas
cmc
loope
inc
push
add
add
sarb
les
or
je
test
js
add
jno
notl
dec
mov
cld
cmpsl
pop
xor
push
cmp
loope
pop
inc
sub
int3
pop
outsb
ljmp
mov
mov
xchg
or
add
adc
sub
ljmp
pushf
pop
jmp
inc
sbb
push
lret
loope
insl
loopne
xor
push
shr
dec
jno
xor
pop
push
add
inc
sub
ret
mov
sbb
outsb
das
loop
pop
lea
and
xor
enter
mov
dec
incb
pusha
push
push
popa
push
xchg
cmpsl
shlb
dec
int
mov
mov
push
iret
shll
test
pop
mov
mov
out
pop
cmp
inc
xor
cmp
push
dec
gs
sbb
and
call
mov
js
nop
fs
pushf
jle
loop
inc
pushf
lea
pop
push
test
clc
lcall
sbb
fs
push
cmp
dec
dec
lret
cmpsl
push
mov
add
mov
icebp
fs
cld
sbb
cmpsl
stos
sub
fbld
loop
sahf
fsts
pop
movsl
pusha
psrld
shlb
inc
orl
xchg
mov
xorl
fisubs
hlt
mov
popa
orb
lret
bound
mov
icebp
jg
insb
call
stc
inc
push
sbb
dec
hlt
mov
es
pop
xchg
mov
pop
mov
pop
sbb
mov
idivb
push
push
or
jno
xchg
sub
test
dec
in
pop
sbb
mov
push
add
inc
rol
mov
je
nop
stos
jl
adc
loope,pt
icebp
and
mov
mov
inc
rorb
jnp
loope
das
pop
push
fisubrs
inc
shll
adc
jns
mov
fistpll
inc
and
pop
mov
pop
mov
test
enter
or
fcompl
and
shrl
mov
cmp
and
sbb
xor
flds
and
push
xorl
bound
or
mov
pusha
sbb
imul
test
ljmp
and
jecxz
ret
roll
mov
aam
jns
pop
dec
add
roll
daa
testl
in
mov
push
pushf
push
rcrl
fidivrs
fisubrs
call
pop
push
and
xor
sub
ret
push
or
mov
mov
adc
dec
mov
call
push
cs
ret
aas
ljmp
sbb
cmpb
mov
push
ja
out
roll
push
jbe,pn
xchg
lret
adc
jbe
and
dec
pusha
ljmp
lock
cmp
sub
xchg
loopne
sbb
into
mov
jne
aaa
mov
jmp
aam
sub
in
mov
or
pop
or
sbb
push
test
fadds
xor
dec
jge
mov
lds
icebp
mov
loope
xchg
in
out
scas
movsb
loope
out
pop
xchg
mov
arpl
je
pushf
xlat
push
cwtl
sub
sub
mov
cmp
xchg
and
push
shll
scas
cmp
and
cmp
xchg
in
outsl
sbb
ss
loope
mov
sarl
lea
sahf
sub
inc
cmp
jle
mov
lret
xchg
fidivrs
enter
pop
aad
repnz
cmp
add
sub
xchg
scas
daa
xor
stos
pop
lds
push
lret
mov
sarl
aas
mov
sbb
enter
iret
in
mov
adc
imul
ja
lods
sarb
inc
inc
cmp
lds
test
sub
xchg
add
in
aam
ds
push
hlt
mov
scas
mov
xorb
mov
das
repnz
pop
scas
and
pop
std
cltd
imul
xchg
jle
mov
dec
pop
inc
cli
fisttpl
cmp
fdivrp
cmpsl
stos
mov
jl
adc
popf
xchg
mov
call
xor
iret
add
insl
adc
dec
xor
cmp
cs
cld
pop
mov
dec
fucomi
outsb
mov
cli
or
mov
stc
test
cmpsb
sbb
jno
add
in
cli
xchg
jb
repz
jo
sub
mov
xchg
movb
add
push
popa
sahf
sbb
push
jecxz
adc
pop
adc
push
test
imul
fcmovb
add
inc
insb
xor
bound
jns
add
aaa
sub
js
add
cmp
andl
mov
and
enter
cwtl
fwait
ret
out
lret
mov
mov
sbb
stos
loop
icebp
pop
repz
sbb
data16
test
push
fstpl
lret
jecxz
jg
sbb
or
pusha
push
push
mov
lret
shrl
loope
or
mov
into
inc
mov
add
and
xchg
in
xor
lret
and
cmc
enter
inc
ds
ja
stos
lret
shr
adc
or
bound
pusha
push
movsb
xor
hlt
xchg
or
js
andps
fscale
add
cmp
or
stos
jle
stc
xlat
fnsave
pop
sub
xchg
mov
std
adc
out
pop
mov
mov
xchg
lds
cmpsb
ret
jmp
inc
data16
push
inc
inc
xchg
cmp
add
pop
jne
cltd
dec
in
and
iret
mov
inc
inc
adc
sub
mov
fadd
mov
and
jne
push
ja
mov
dec
mov
scas
mov
cs
add
adc
jg
dec
cmpsl
subb
mov
pusha
jmp
ret
nop
cmc
and
fidivl
mov
dec
mov
adc
sahf
outsb
mov
mov
dec
push
repz
mov
xchg
jl
dec
lock
push
ljmp
fstps
ja
out
pop
pop
sub
cwtl
std
jle
lahf
push
cld
ss
in
fnstcw
lods
jb
icebp
jecxz
stc
cmp
mov
xchg
popa
mov
jl
aam
cmp
or
subb
xchg
lock
dec
insl
adc
mov
aas
mov
in
xchg
sbb
sub
add
dec
popf
fisubrs
cwtl
dec
roll
add
jo
push
daa
push
sbb
dec
in
setl
mov
mov
repnz
rcll
mov
xchg
jle
sbb
or
int3
fmuls
and
and
jp
dec
push
push
mov
mov
mov
call
sub
dec
cmpb
sub
outsb
cli
jecxz
mov
pop
je
hlt
pop
mov
mov
rorb
inc
push
or
cmp
and
mov
cwtl
xchg
cs
ds
dec
ss
mov
fisttpll
hlt
movd
test
jno
mov
push
add
inc
xchg
push
pop
pop
pop
aaa
mov
adc
movsb
push
mov
sub
jmp
mov
out
cmc
dec
sti
and
or
push
mov
aaa
mov
jmp
aaa
pop
popa
ja
fisttpll
cmp
sub
frstor
lds
pop
lods
in
pop
outsb
mov
inc
mov
push
aam
dec
and
or
mov
add
out
in
pop
int3
adc
loope
popa
jae
repnz
rcr
jg
cli
pop
and
or
in
xchg
popf
dec
rcr
imulb
loopne
je
xor
push
or
mov
test
sbb
dec
negl
cmp
or
adc
pop
test
fnstcw
sbb
or
mov
gs
cwtl
inc
xor
or
inc
nop
push
sub
imul
adc
mov
mov
out
add
outsl
hlt
lret
and
xor
cmp
inc
mov
aas
dec
and
std
lea
xchg
out
stc
cltd
arpl
loopne
bswap
lock
in
fwait
and
adc
push
fsubp
scas
out
push
mov
repz
lret
cwtl
xchg
jecxz
lds
xchg
or
sbb
sub
call
rcll
hlt
incb
movsl
mov
lea
cmp
sub
mov
outsb
inc
popf
sub
lea
xchg
cli
test
cmpsb
xor
xchg
leave
imul
add
repz
outsb
sub
xchg
inc
int
pop
mov
or
mov
inc
inc
pop
popf
push
jge
or
clc
movsl
adc
xchg
fsub
pop
aad
movsl
mov
pop
sub
xor
jmp
mov
callw
loope
cmpsb
cs
jecxz
fisttpll
lret
inc
xchg
jbe
mov
int
jb
or
cli
ret
push
xchg
fimull
popf
loop
jg
cmpsb
adc
mov
fidivrl
ljmp
sar
jo
cmpsl
repnz
aam
mov
leave
aam
pop
aas
ja
push
mov
lock
cltd
lret
add
data16
cmp
xchg
xchg
pop
cmpb
pop
nop
scas
inc
lods
xor
test
sbbl
inc
into
lret
pop
call
repnz
xor
mov
sbb
sub
cltd
stc
push
stos
xchg
jae
jg
rorl
inc
mov
fdivs
outsb
in
adc
fcompl
sahf
xor
or
push
ret
cwtl
cli
fcomp
aas
out
std
pop
jne
sahf
dec
and
ror
insb
mov
outsl
movsl
jecxz
mov
nop
js
rorb
jns
jno
pushf
dec
scas
jg
adc
and
std
xchg
mov
rcrb
or
in
negl
jp
insl
jle
jno
jge
fsubp
enter
jg
icebp
pop
push
int3
mov
pop
unpcklps
inc
jns
jb
lock
mov
ss
xor
sub
mov
sub
jle
fdivs
sahf
mov
es
lcall
or
rcr
dec
push
fnsave
cmp
test
mov
ss
mov
test
add
mov
dec
sbb
or
fnsave
test
pusha
scas
in
fstpl
enter
inc
rclb
push
mov
mov
cmp
insl
cltd
xor
dec
xlat
loopne
sub
inc
push
gs
mov
push
xchg
shrl
or
xchg
jae
outsb
ret
pop
inc
add
scas
repnz
jg
add
sbb
stc
scas
push
pushf
lcall
loope
leave
sub
test
add
test
inc
sub
xchg
shl
pop
fwait
dec
int3
mulb
jecxz
mov
out
fistpll
popf
sahf
and
mov
add
mov
ds
jnp
and
xor
mov
xchg
mov
into
xlat
jnp
mov
scas
in
outsl
xchg
sub
xorl
cltd
jb
ret
lea
mov
mov
jb
aaa
push
lcall
arpl
cwtl
mov
mov
scas
cmp
jl
mov
inc
push
mov
stos
xor
std
mov
lret
pop
in
gs
mov
jns
paddw
addr16
jmp
sub
popa
mov
rolb
lods
icebp
jne
fnsave
jmp
pop
adc
jge
test
push
dec
addr16
mov
lods
mov
arpl
aaa
mov
inc
mov
pushf
push
addb
xchg
fiadds
mov
xchg
push
add
shrl
xchg
cltd
ljmp
adc
add
xchg
lret
std
add
sub
mov
movsb
sbb
clc
push
out
mov
or
repnz
insb
into
mov
lret
int
mov
push
loopne
sub
mov
dec
iret
hlt
add
sub
pusha
clc
inc
or
stc
and
inc
xlat
testb
js
inc
push
test
pusha
in
lods
pop
jnp
adc
leave
inc
loop
insl
jnp
mov
outsl
fistpll
cli
xor
ret
repz
stos
mov
or
sub
mov
cmpsl
test
inc
sbb
rclb
aas
das
sub
mov
mov
adc
add
shlb
aaa
insb
mov
rcl
into
in
and
dec
ret
sbb
xor
lock
enter
and
loope
daa
lcall
pop
add
inc
xchg
lock
test
fisttps
push
lcall
sbb
add
mov
fs
jle
ss
int3
test
shrb
stos
add
xor
mov
xchg
leave
mov
dec
xchg
jbe
xchg
add
aas
mov
mov
jecxz
inc
xor
repnz
dec
sub
jg
push
mov
xor
mov
fs
mov
ret
inc
addb
push
push
insb
cli
xor
cmpsl
outsb
adc
xchg
inc
insl
mul
add
lret
xor
ret
in
pop
stc
clc
jl
sbb
mov
in
inc
inc
js
repz
test
loope
inc
insl
ja
add
push
xchg
aad
add
push
cltd
pxor
jne
fstpl
xchg
call
arpl
sbb
inc
push
cmp
or
xchg
adc
aad
jp
cmpsl
xchg
test
sbb
mov
out
push
mov
push
adc
fcompp
stos
jae
ss
pop
into
mov
addr16
lret
mov
adc
in
jbe
mov
pop
popa
out
xchg
cmp
loopne
xchg
inc
push
mov
test
dec
and
movsl
bound
adc
add
and
dec
arpl
test
test
xchg
inc
loopne
ljmp
xor
aaa
cmp
insl
popf
sub
popa
sub
into
mov
out
cwtl
roll
cld
add
rcll
add
shll
fisubrs
popa
ret
inc
enter
cmp
fcom
mov
lahf
rol
cmp
mov
xor
rcrb
insb
cmpsb
cmp
mov
lret
daa
cmp
fstpt
jo
jns
arpl
xor
outsl
adc
rolb
push
fmuls
cmp
test
int3
cmpl
out
nop
adc
mov
test
fidivl
xor
les
push
push
sarb
idiv
stos
adc
ds
imul
inc
loop
lcall
pop
lret
sarl
dec
lret
add
push
or
lcall
sbb
rorl
mov
push
lock
out
push
mov
pop
pop
fildl
ss
and
enter
sub
sahf
adc
jo
orl
or
jmp
sub
fbstp
subb
fnstcw
xchg
ja
loop
and
outsl
cmpsl
and
mov
cmpsb
int
insl
inc
and
loope
std
add
gs
push
cmpsl
loop
lods
push
notb
shrl
mov
insl
sahf
adc
adcl
imul
into
push
pushf
xor
hlt
jns
std
daa
dec
cltd
push
scas
daa
ret
mov
and
ds
push
and
in
popf
jno
cmp
or
shlb
loopne
add
dec
lret
sbb
imul
aad
mov
in
mov
add
fcmovnb
adc
mov
dec
es
test
test
in
hlt
into
pop
mov
repnz
shlb
sarb
push
sub
pop
mov
xlat
cmpsl
dec
and
cmpsb
mov
adcb
mov
or
dec
int3
test
pop
fs
aaa
pop
push
adc
filds
pop
jns
pop
ja
out
or
mov
mov
cli
mov
stos
in
pop
mov
les
scas
stos
fdivr
xchg
sbb
ja
in
addr16
out
out
cmpsl
sub
leave
jge
sub
push
mov
pop
leave
inc
mov
or
rol
loopne
xchg
mov
je
add
fsubp
inc
mov
xor
mov
inc
jle
sub
or
outsb
testb
outsl
xor
mov
mov
cmp
scas
cli
push
mov
sub
test
push
in
repnz
sbb
jb
inc
dec
fs
cli
sub
sti
movsl
popf
out
fdivs
xchg
push
mov
lcall
sub
and
rorl
sahf
inc
mov
nop
cmpb
inc
dec
xor
mov
pop
popf
inc
out
jns
lods
fidivrs
cltd
ss
ss
or
jae
out
add
fldl
mov
shlb
aas
sbb
lods
jb
sahf
mov
sbb
adc
mov
mov
stc
dec
push
cmpsl
bound
xor
xchg
stos
push
xchg
cmp
push
dec
imul
push
xchg
mov
cwtl
mov
pop
xor
xlat
jo
data16
pop
das
in
mov
je
mov
loopne
stos
and
je
cmp
pop
push
stos
in
stc
jecxz
leave
ret
cmp
imul
sbb
cltd
addr16
xor
push
shlb
popf
fbstp
xchg
pop
mov
or
push
lods
leave
pop
or
data16
dec
ret
jecxz
push
sbbb
std
mov
pushl
cmc
decl
mov
gs
filds
xchg
rorb
jg
mov
gs
xor
fsub
sub
stos
jle
ja
cmc
sub
in
bound
xor
dec
bound
mov
dec
push
push
ja
jb
dec
inc
xlat
and
out
int3
adc
stc
test
mov
jo
xchg
push
lret
xor
sbb
pop
mov
into
xchg
ja
arpl
scas
sbb
sbb
insl
dec
jg
popa
mov
ret
pop
cld
and
sub
inc
inc
ret
and
lret
jecxz
lahf
gs
repnz
adc
or
add
pop
xlat
jg
push
cwtl
push
mov
lods
push
cs
sub
sub
fcmovnb
mov
stos
testl
push
dec
sub
cmp
out
loop
pop
mov
ret
pop
pop
lods
sbb
vmovaps
jo
push
in
lods
dec
scas
add
fwait
or
push
ss
insl
xor
adc
sbb
mov
cmp
int
jns
cwtl
data16
shlb
out
jns
or
or
mov
cmp
pop
test
mov
hlt
pushf
jp
fists
mov
mov
mov
push
call
dec
jne
lret
aam
fbld
add
stos
mov
push
ja
or
insl
jb
shlb
aas
jae
push
iret
dec
jb
lds
lds
mov
mov
int
sub
xor
pop
ja
outsl
adc
add
sbb
mov
ror
pop
mov
insl
movsl
mov
out
add
lods
sub
js
mov
nop
aad
dec
sub
push
jp
in
mov
adc
enter
add
and
mov
repz
pop
pop
pusha
lock
lahf
aam
popf
shll
xlat
push
loop
xor
fwait
sar
and
shrl
xchg
shr
shlb
mov
cs
hlt
xor
mov
and
inc
imul
bswap
out
out
jbe
test
lds
xor
data16
add
dec
es
and
sub
jmp
sbb
pusha
int
pop
mov
and
addr16
push
fmull
push
aad
dec
sub
lods
or
cmc
ret
lret
mov
pop
sahf
jns
gs
out
sub
loopne
mov
sahf
or
mov
mov
adc
jge
inc
test
jge
inc
or
add
mov
cmpl
push
es
jge
adc
pop
sub
stos
sbb
out
cli
mov
lods
je
test
in
dec
jo
inc
jne
xchg
shrl
popf
mov
sub
arpl
int
mov
dec
shl
inc
cli
sbb
jg
xor
dec
out
xor
loope
or
and
pop
movsb
test
fistpll
mov
dec
mov
jg
adc
lods
xor
mov
stc
inc
xor
jne
je
sbb
dec
push
mov
lret
cmc
xchg
mov
ja
mov
xor
dec
orl
sub
jne
fnstsw
mov
cmp
push
sbb
out
dec
add
push
lods
loope
hlt
push
inc
sub
sub
mov
sub
pop
sbb
adc
popf
dec
mov
mov
out
roll
xchg
xor
cmpl
mov
jbe
xchg
or
cltd
out
adc
lods
mov
addps
mov
push
stc
movsb
or
shll
lds
push
ficoml
leave
push
out
iret
xchg
jle
loope
dec
ss
in
sub
mov
jbe
fiadds
leave
mov
fwait
adc
adc
icebp
sbb
and
xor
scas
jg
sti
xor
lcall
add
push
xchg
dec
shl
sbb
rorl
cmp
es
inc
xlat
push
loop
and
addr16
and
fwait
pop
rorl
loopne
pushf
xchg
dec
inc
sar
test
outsl
mov
cs
mov
pushaw
vxorpd
cmp
push
aad
clc
xor
xlat
xor
sub
gs
and
test
shrb
or
or
lods
push
fstps
cmp
and
repz
xor
repnz
inc
dec
mov
jge
sti
dec
les
lcall
inc
mov
sbb
inc
test
cmpsl
dec
movsl
iret
cmp
xchg
movsb
push
adc
inc
arpl
mov
xchg
ds
inc
outsb
or
out
shl
cmp
fisttps
and
add
ret
inc
pop
or
das
loope
add
cs
sahf
push
in
inc
jge
frstor
jo
xor
aad
xor
xchg
outsl
lcall
pop
aas
notb
scas
sub
sub
dec
add
xor
and
scas
mov
sbb
jo
loopne
dec
xor
nop
mov
xchg
sbb
adc
or
dec
cmpsl
movsb
inc
inc
xchg
jmp
cltd
and
adc
hlt
adc
xlat
xchg
pop
and
popl
ss
js
subl
xchg
test
or
in
pop
sub
dec
lret
or
out
push
cmpsl
dec
cwtl
adc
mov
fidivrl
mov
fadd
sbb
adc
pop
mov
mov
inc
add
mov
in
xchg
inc
movsb
mov
test
fcmovb
mov
push
es
jno
movsb
mov
or
sbb
popf
mov
stc
jl
dec
inc
gs
sbb
mov
bound
pushf
dec
shr
xlat
ja
push
test
jo
fs
shrl
jns
cld
pusha
pushf
popf
xor
push
filds
lods
aad
adc
jno
scas
pop
fcoml
jle
jp
lcall
lods
jecxz
rcrl
sbb
inc
pop
outsl
lret
sbb
cwtl
add
movsl
sub
and
stos
das
sbb
mov
ret
ss
stc
cli
inc
nop
pop
loop
ss
or
sub
adc
rolb
popf
add
dec
hlt
andl
icebp
leave
xchg
fisubrl
adc
cmp
sub
jns
out
sbb
lcall
push
in
inc
test
test
ret
into
js
dec
push
mov
jbe
cli
std
stos
pop
or
shll
xor
sbb
sarb
test
or
cmp
test
sti
cmp
mov
idivb
shll
or
push
and
test
jmp
push
sbb
jae
movsb
mov
pop
mov
fnstenv
imul
in
mov
bound
lods
adc
jno
push
dec
pop
jmp
dec
dec
sub
int
cli
adc
sbb
xor
test
call
pop
add
inc
fstp
in
fs
inc
mov
hlt
sub
jp
jge
dec
add
daa
push
adc
mov
add
jmp
mov
inc
push
nop
and
push
pop
jae
mov
inc
and
cs
std
std
inc
xchg
mov
test
sarb
xlat
jl
or
dec
aad
cli
in
push
adc
adc
icebp
test
loopne
mov
popa
mov
push
out
ljmp
xor
shll
jne
or
xor
mov
xor
sbb
or
dec
imul
mov
adc
pop
mov
sub
xchg
lock
test
or
enter
mov
xchg
push
in
and
mov
sbb
or
addr16
mov
das
iret
fs
pop
cmpsl
or
cmp
xlat
mov
neg
sbb
cmpsb
das
lea
sub
xor
and
ret
inc
add
popf
mov
bswap
test
dec
popa
aam
xor
ret
mov
enter
int3
incb
sbb
leave
mov
cmp
xchg
mov
subl
pop
addb
mov
dec
pminub
pop
cmp
pusha
insb
ret
addr16
dec
icebp
dec
clc
add
add
sub
subl
pop
jns
popf
adc
leave
fnstcw
xchg
cmp
dec
cli
fnstenv
add
mov
das
and
xor
push
pop
ficoms
jno
icebp
insb
cmc
in
sub
sbbb
and
aas
mov
xchg
mov
jns
push
push
fdivrs
cmp
insl
pop
xor
fs
leave
testb
sub
shl
dec
xor
dec
cmpl
sbb
imul
xchg
ss
imul
jmp
mov
xor
addl
nop
jo
cmp
scas
sbb
sahf
or
xchg
hlt
mov
aaa
xor
jl
lahf
add
ljmp
pop
imul
dec
icebp
mov
add
push
mov
sbb
and
xchg
sbb
lret
cmp
iret
jbe
pushf
xchg
or
lock
pop
sbb
shrl
shrb
push
or
and
int3
cld
lret
mov
cmp
test
aaa
cmp
mov
and
shr
stos
incl
or
and
and
iret
adc
xor
stos
cs
inc
mov
testb
add
mov
out
shlb
xor
bound
test
fldcw
mov
sub
lcall
jb
sub
push
dec
loop
adc
loop
jmp
imul
cmp
pop
jo
mov
xorb
lahf
dec
fxch
cmp
jle
cmp
adc
aad
in
push
push
lods
mov
cmp
ss
push
pop
xadd
xchg
mov
jl
mov
cmp
inc
or
repz
icebp
pop
pop
or
scas
sbb
sub
lret
add
sahf
pusha
mov
jne
mov
shlb
push
mov
xor
mov
mov
jg
js
pusha
hlt
sub
shlb
xchg
sbb
repnz
push
sub
in
mov
push
mov
push
btc
pop
cmp
jmp
xor
rcll
fstpt
and
push
out
js
xchg
dec
jns
jp
adc
in
std
cmp
cmp
popf
cs
dec
jb
jle
and
pushf
test
xchg
dec
cmp
dec
sub
mov
jp
xchg
adc
xchg
mov
lods
push
push
xor
mov
mov
pop
in
call
and
sub
sub
lret
mov
jmp
fldcw
or
push
shrb
xchg
imul
jl
jle
inc
icebp
add
test
adc
mov
or
jecxz
sub
adc
xorb
cmp
ljmp
cmp
fstpl
add
sbb
add
cli
out
cli
cmp
repz
rcll
out
cmp
enter
pop
mov
add
call
lds
popf
outsb
cmovp
hlt
inc
adc
shlb
imul
out
addr16
jb
push
dec
jne
enter
leave
adc
cmp
int3
in
push
fiadds
jle
ret
je
and
outsb
mov
shl
repnz
pop
mov
test
jg
or
adc
in
jmp
cmc
push
push
push
fucomip
aam
cmp
repnz
sahf
adc
jnp
nop
or
out
into
into
addr16
mov
fstps
mov
adc
or
pop
xor
stc
sub
data16
or
push
pop
lods
imul
loopne
repz
imul
inc
insb
lock
ss
and
out
push
cs
or
add
sub
lods
aad
adc
and
add
fidivrl
dec
sbb
sbb
jne
cwtl
popf
stos
mov
xchg
add
das
pop
adc
push
cmp
repz
imul
test
or
xchg
mov
dec
add
fs
jmp
into
rcrl
or
push
inc
inc
int
sarb
sbb
xor
in
outsl
push
lds
out
outsl
fstpt
adc
jecxz
adc
sar
cltd
sub
push
int3
cmp
mov
xchg
lret
leave
and
lods
adc
push
add
jb
mov
dec
add
repnz
sbb
push
push
lahf
sub
lahf
and
or
inc
xchg
sub
mov
lcall
or
adc
fldcw
lcall
loope
xor
mov
dec
jne
ficoms
pop
push
stc
mov
jae
xor
pop
push
sub
imul
inc
int
xchg
push
push
cli
mov
dec
adc
sbb
aam
cmp
dec
int3
push
lods
adc
pop
pop
out
sub
adcb
mov
push
in
shlb
dec
mov
popa
add
dec
pop
nop
cld
adc
enter
ficoml
lea
dec
daa
lods
cmpsb
cmpb
insl
and
out
pop
popf
jp
inc
in
push
insb
shrb
pop
pop
jl
inc
das
lret
jge
fistpll
mov
xchg
fldenv
mov
mov
xchg
mov
push
ljmp
rclb
rcrb
mov
jnp
push
lods
jno
in
xorl
cwtl
push
pop
xchg
xchg
jnp
cmc
mov
push
jg
repz
pop
popa
or
imul
loop
jno
dec
cwtl
mov
xor
lods
or
and
jmp
iret
mov
int3
dec
sub
sbb
movsb
inc
inc
pop
mov
aaa
out
jmp
inc
nop
movsb
out
cmp
push
sbb
stos
std
inc
lds
mov
lods
push
dec
scas
mov
inc
push
adc
mov
adc
mul
ss
sbb
pop
test
push
adc
mov
stos
xor
movsl
fst
sbb
outsb
enter
cli
and
jg
mov
test
lret
push
cmp
fs
scas
out
and
dec
cs
push
imul
sub
xchg
std
xchg
sbb
js
imul
or
pop
pop
jle
mov
adc
mov
pop
cli
sbb
into
insl
sbb
les
inc
aam
xchg
mov
in
mov
sub
xor
icebp
mov
in
popa
loope
pop
in
cmp
mov
aas
mov
int3
lds
cs
and
cmp
mov
xlat
cmpsl
mov
aas
dec
xorb
cld
sub
aam
hlt
jp
fcoml
add
jne
cmp
push
inc
jecxz
lcall
mov
lock
pop
add
inc
jecxz
dec
repnz
ja
aaa
packsswb
in
cltd
mov
arpl
js
jle
in
sbb
fsubs
gs
loop
dec
lock
mov
imul
iret
outsl
or
fstps
sub
or
push
cmp
icebp
test
sbb
fcmovnu
negb
lock
aaa
add
push
in
mov
mov
iret
pop
outsb
add
fsubs
and
pusha
mov
clc
out
in
xchg
jge
sub
ds
jmp
mov
outsb
push
nop
stc
inc
dec
inc
adc
push
dec
leave
out
call
push
dec
push
jb
mov
lcall
fisubl
out
fnsave
sub
mov
cmpsl
inc
sbb
sbb
push
sahf
inc
shrb
mov
xchg
jmp
push
mov
adc
mov
fsubr
jb
roll
add
sub
mov
cld
aas
jle
xchg
and
jns
leave
fstpt
andl
enter
stc
stc
cwtl
ds
popa
mov
movsl
nop
adc
mov
loopne
fimull
xchg
pop
jne
in
jns
fcompl
push
jns
icebp
sahf
xchg
mov
fidivl
xor
or
loop
xor
inc
push
jns
xchg
dec
outsb
scas
adc
cmp
nop
popf
inc
cs
cmp
cmp
mov
push
mov
push
jl
pop
inc
mov
mov
cmp
pop
into
shll
sbb
movsl
xchg
outsb
xchg
imul
dec
jp
or
mov
pop
pop
jne
pop
cltd
cwtl
rcl
dec
ss
popa
stos
fldenv
test
dec
pop
mov
dec
pop
mov
dec
xchg
pushf
scas
call
mov
pusha
nop
mov
in
jno
xchg
std
xorl
in
cld
les
movsb
arpl
inc
ficoml
les
xchg
mov
xchg
ss
addr16
movsb
out
pusha
jge
mov
cmp
sbb
fs
lahf
fisttps
ficompl
rclb
movsb
pop
or
andb
adc
add
repnz
push
push
and
lods
dec
mov
test
fs
jg
nop
mov
lock
dec
cmp
pop
xor
jp
xchg
mov
mov
mov
daa
aaa
xor
and
mov
out
adc
add
inc
and
subb
dec
add
mov
xchg
popf
and
movsl
mov
movsb
shll
inc
push
adc
dec
in
dec
xor
mov
loope
mov
dec
add
inc
into
dec
pop
lods
mov
add
dec
ja
xor
xchg
subb
sbb
sbb
popf
add
and
imul
ret
cmp
push
jmp
sub
mov
int
outsb
cli
in
ss
lea
arpl
sbb
dec
xchg
mov
xchg
in
incl
sub
cmp
cmp
xor
popa
pop
push
loop
jno
dec
push
sub
out
mov
lock
push
adcb
or
push
call
int3
push
fistpl
gs
mov
mov
push
xlat
int3
sbb
jp
out
push
add
and
bound
jmp
sbb
das
insb
in
xorl
je
sarb
jle
sbb
dec
ss
xchg
sti
ds
fld
pxor
mov
or
lahf
jg
and
xchg
xchg
daa
lods
js
xchg
mov
inc
mov
pop
inc
or
and
lret
inc
sub
or
xor
pop
cmpsb
pop
out
mov
into
xor
inc
out
inc
stos
lret
cwtl
fnstcw
sahf
dec
or
inc
mov
or
xor
push
jb
and
imul
fwait
outsb
mov
push
gs
cmp
xchg
push
mov
sub
cmc
sbb
inc
ret
xor
in
and
std
cli
sbb
mov
cmp
test
idivl
rcl
xor
hlt
or
dec
adc
xor
push
push
and
loope
incb
cmp
mov
jb
test
pop
repnz
gs
jle
push
dec
jnp
adc
lock
push
sbb
aas
pop
xchg
and
fs
sbb
cmp
lahf
imul
into
mov
mov
fwait
js
ds
lods
aas
pop
sarb
and
ja
sbbl
insb
xor
cmp
addr16
subl
fstps
inc
leave
jl
xor
push
dec
insl
add
dec
adc
inc
inc
jno
push
cmp
jge
mov
les
dec
mov
push
inc
adc
ds
cwtl
aas
fidivrs
imul
stos
xor
dec
push
mov
in
les
jg
loope
popa
dec
mov
bound
jno
push
sub
lods
test
enter
daa
clc
adc
push
lock
and
and
loop
sbb
dec
push
jp
inc
inc
inc
int
js
ja
in
push
dec
fidivrl
mov
push
mov
loop
sub
cmp
filds
push
cmp
inc
outsl
cmc
cmp
cltd
rcrl
lds
imul
push
sub
push
xor
not
jne
and
push
and
and
shrb
aaa
xchg
jnp
insb
push
fisttps
lods
push
repz
rol
scas
jb
bnd
test
or
in
mov
cmpsl
sub
sbb
adc
adc
out
inc
stc
div
adc
dec
mov
jb
mov
sbb
sub
test
push
out
dec
adc
dec
and
dec
inc
fcmove
test
sub
adcl
dec
ret
sbb
dec
mov
enter
pushf
pop
and
cmc
mov
push
ret
push
out
shlb
jl
outsb
insb
mov
lcall
mov
outsl
repnz
add
push
xor
sub
cmp
movsl
fs
nop
jnp
mov
in
test
clc
jg
push
cmp
enter
and
fimuls
mov
lods
in
jb
dec
sub
mov
int
mov
ss
sbb
aad
add
rcl
icebp
xchg
dec
sbb
pusha
stc
mov
pop
test
xchg
push
xchg
jg,pt
loop
sbb
and
test
push
xchg
mov
rclb
or
gs
inc
mov
push
outsb
popa
test
hlt
adcb
sub
xor
out
mov
sbb
xchg
dec
fisttpll
outsb
mov
mov
repz
jae
xor
push
test
dec
js
xchg
fwait
cmpsb
xor
push
sub
lock
punpckhdq
add
cmpsb
cmp
aad
jecxz
and
ja
int3
xchg
mov
mov
sbb
arpl
scas
icebp
addb
pop
inc
test
jnp
jno
movsl
xchg
or
xchg
into
mov
pop
mov
scas
inc
pop
sub
mov
mov
subl
popf
syscall
push
cmc
repnz
inc
and
hlt
sbb
cmp
add
cmp
fldenv
shrl
jg
mulb
lock
outsb
cltd
nop
and
mov
cmpsl
cmpb
xchg
pusha
sub
paddb
or
cmpsb
dec
cmpsl
dec
insl
cmp
inc
shll
inc
test
pop
fimull
mov
lods
arpl
push
pop
xor
lods
frstor
xor
pusha
dec
and
imul
scas
jp
test
or
mov
aad
cs
pop
lods
xor
dec
xlat
push
xor
jnp
sbb
mov
xlat
push
dec
in
cmp
fst
lods
add
rcll
jl
mov
jo
stos
mov
aas
sbb
insl
dec
aas
lret
int3
mov
ds
andb
ljmp
fbld
cld
js
or
xor
add
xchg
cld
mov
xor
mov
lret
call
xor
xor
dec
and
lret
inc
and
and
mov
xorl
ljmp
loop
push
push
jns
mov
pop
or
lds
or
test
ljmp
shr
out
dec
gs
pop
sbb
hlt
out
sbb
adc
push
mov
push
out
cmpsb
jecxz
mov
sahf
mov
push
jnp
incl
lret
mov
shlb
xor
add
mov
lret
sub
loopne
dec
ss
xchg
inc
outsb
adc
roll
mov
inc
pop
stos
fwait
cmc
inc
test
gs
xor
mov
and
data16
xor
movsl
mov
scas
in
movsl
push
ja
movsl
jmp
addr16
inc
in
inc
lods
add
iret
push
xor
xor
insl
subl
sbb
or
lds
adc
sbb
imul
notl
mov
dec
cmpsb
jno
std
mov
pop
repz
call
inc
xchg
cmp
fimuls
lods
xchg
out
mov
fwait
mov
adc
sbb
mov
outsb
cwtl
xchg
push
outsb
xor
pop
fldcw
hlt
outsb
jmp
mov
cld
add
cmpsl
pop
mov
cwtl
push
shlb
cmp
sbb
sub
fidivrl
mov
lret
cmp
push
and
iret
aad
jns
pop
jge
inc
lods
xor
push
aas
xor
sub
jnp
leave
mov
out
jae
xor
leave
xchg
loope
xor
xchg
and
mov
fistps
lods
lahf
cmp
jmp
in
fisubrl
push
repnz
repnz
push
cs
std
arpl
jle
lcall
scas
les
aaa
cs
cmp
lret
inc
insb
inc
mov
mov
stos
push
test
int
sbb
fnstcw
sbb
bound
adc
mov
jle
dec
sub
xchg
mov
inc
mov
or
pop
test
ret
nop
pop
sub
je
mov
outsb
xorl
dec
jae
xlat
adc
dec
cmp
pop
xchg
std
std
inc
in
mov
sti
sub
mov
jbe
lret
xor
movsl
inc
stc
out
ljmp
outsl
loopne
pop
sbb
adc
adc
sub
dec
mov
dec
andb
add
test
scas
mov
insl
xor
dec
test
aas
mov
rcl
sbb
cltd
mov
outsl
hlt
mov
rol
lea
sub
out
push
cmc
push
sub
andb
int
jae
push
movsl
push
sbb
arpl
xlat
out
lcall
les
pop
mov
add
jno
mov
xor
leave
sub
jb
bound
cmp
push
movsl
and
cmc
jle
jae
and
scas
or
push
sarl
sbb
adc
push
add
shrb
lods
or
cmpsb
outsl
xor
repnz
add
out
lcall
mov
popa
jb
jns
popf
cmc
jl
cmp
pushf
jge
dec
inc
or
or
mov
mov
mov
rcr
aas
out
sub
mov
push
xor
fimuls
push
xchg
js
mov
enter
movsb
mov
sarb
xchg
lock
scas
add
jmp
adc
out
js
lock
fnsave
js
out
pop
loop
pop
repz
scas
ret
cmp
inc
addr16
cmpsl
out
mov
jge
and
cmpl
sub
lock
pop
or
arpl
xchg
sbb
mov
sbb
jp
mov
jno
or
inc
jne
jo
push
arpl
sahf
push
data16
xor
xchg
aad
mov
pop
nop
pop
rclb
hlt
and
xchg
add
ret
test
cmc
xor
maskmovq
lods
and
mov
aam
repz
fs
cmc
jne
mov
aaa
out
fbld
push
int
jge
dec
inc
push
test
fs
dec
sub
xor
data16
dec
pop
push
pop
xchg
iret
filds
fnstenv
sub
cmp
pop
and
or
dec
mov
imul
shrl
push
cmp
sub
add
mov
and
inc
xchg
jo
push
pop
push
or
hlt
sbbl
movsbl
notl
inc
push
rclb
sahf
sub
jbe
sub
repnz
mov
xchg
cmc
scas
push
pop
iret
fsubs
push
fmulp
mov
jmp
pop
pop
add
jb,pn
test
jl
push
jecxz
addr16
xchg
cmp
push
or
cs
xchg
dec
test
push
lret
sbb
and
std
cmp
pushf
lcall
out
mov
jnp
loop
lock
or
out
mov
fnclex
gs
mov
hlt
pop
push
imul
adc
cmp
adc
popa
ss
cmp
int
lcall
pop
cld
adc
sahf
xchg
mov
outsb
pop
loope
and
or
mov
push
cmp
loopne
xchg
jl
imul
iret
cmpsb
out
loopne
outsl
loop
cli
mov
fisubrl
imul
mov
ret
jns
loope
into
mov
ss
rorl
xor
fwait
push
mov
mov
mov
dec
mov
ret
cmp
cmp
add
adc
dec
and
ja
inc
cmpl
lea
mov
xlat
popf
xchg
call
adc
arpl
into
inc
inc
mov
mov
movsl
out
mov
leave
notl
mov
add
int3
int
fcmovb
add
addr16
sub
insl
xchg
jmp
pop
dec
data16
push
fstps
mov
out
pop
push
aaa
cmp
push
mov
mov
xchg
push
out
dec
out
adc
incl
outsb
test
ret
push
std
pop
mov
int
jg
div
hlt
jp
repz
lahf
push
ds
sbb
fmuls
sbb
mov
adc
cltd
and
lds
clc
mov
loope
iret
jmp
rorl
inc
push
sub
aad
lods
lret
mov
sbb
or
cmpsl
aam
xchg
sub
testl
push
jnp
rolb
mov
lock
ja
adc
and
cmpsl
pop
std
icebp
fstpt
inc
push
orl
ficompl
dec
cmp
insl
sbb
aas
fwait
lret
adc
in
popf
mov
les
mov
stc
mov
add
push
cmpsb
dec
aaa
shll
fdivrl
lods
sbb
and
jecxz
push
add
xor
dec
shll
mov
call
iret
xchg
xchg
xchg
mov
push
js
push
movd
shrl
mov
outsl
es
pop
sub
mov
sub
fstpt
xchg
scas
add
jns
lock
xchg
jmp
add
inc
pop
sarb
jg,pn
sub
and
clc
ret
jnp
push
cmp
push
sub
int
out
cltd
imul
sbb
jno
adc
pushf
push
mov
xor
aaa
inc
mov
adc
jae
add
popa
jae
mov
out
mov
mov
add
sahf
int3
push
aam
call
push
ret
mov
sahf
mov
adc
inc
stc
adcb
lret
shll
xor
daa
and
ljmp
pop
adc
stc
out
cmp
bnd
push
mov
divl
out
stc
hlt
rol
out
popf
inc
xchg
cmp
jno
inc
jmp
aad
jecxz
ret
outsb
or
and
insl
pushf
jle
cmpsb
bound
daa
pop
jo
xchg
mov
loopne
outsb
pop
repz
dec
dec
or
aam
jl
fistpl
pop
xchg
jge
sahf
xchg
mov
mov
into
into
xchg
mov
xchg
outsb
sub
ljmp
pushf
jge
cmpsl
orb
pop
and
gs
lahf
or
lds
pop
or
mov
in
ljmp
and
and
mov
push
lock
dec
xor
in
pop
mov
dec
sbb
or
mov
testb
cvttps2pi
pop
mov
out
push
push
jmp
je
mov
adc
mov
dec
fcmovnu
mov
aam
aas
movsl
lret
mov
jg
sti
cli
mov
push
sub
lret
lcall
mov
inc
stos
adc
sbb
loopne
les
dec
lock
push
push
add
loope
xchg
xor
cmc
pop
out
xor
xchg
mov
int
mov
add
cmp
daa
adc
jae
xorl
mov
loop
pop
jmp
cmp
fxam
sub
clc
fldt
mov
pusha
mov
fadds
ficoml
jns
pop
pop
sub
sub
jne
stc
pop
jnp
repnz
xor
enter
push
sahf
sub
xchg
movsl
push
ljmp
daa
and
inc
jno
ja
push
out
or
cld
adc
enter
inc
subb
xlat
jge
mov
ret
or
mov
jns
ljmp
es
push
add
adc
or
inc
mov
rclb
lods
out
cwtl
int
lock
addr16
adc
pop
add
sub
bnd
xchg
xchg
cli
and
cmpsl
repnz
inc
js
jnp
clc
push
jb
outsb
push
enter
cmp
xor
fsubl
inc
or
loope
mov
xlat
ljmp
in
adc
rcl
das
jmp
sub
mov
sbb
out
add
xchg
xor
xchg
out
aam
leave
enter
pop
xor
add
lods
stos
imul
or
loopne
fldenv
lods
mov
fsts
data16
xor
and
hlt
cld
xchg
ljmp
lret
inc
iret
push
dec
xor
test
in
dec
sbb
adc
mov
jb
sbb
movb
add
xor
and
stos
jecxz
out
mov
aaa
out
imul
test
jnp
test
jmp
int
les
and
add
and
mov
mov
sti
add
cld
pushf
lcall
cltd
sbb
fwait
mov
dec
push
pop
mov
add
ja
data16
daa
negl
jge
cmp
sahf
push
sbb
cmc
sbb
adc
les
in
adc
or
jge
into
mov
cmpsb
mov
cmp
cmc
mov
jg
ljmp
inc
test
lret
add
mov
push
mov
fnstenv
cmp
outsb
dec
iret
adcl
and
fbld
jo
dec
pop
push
test
push
push
pop
insl
inc
cmp
jle
xchg
xchg
sahf
out
ljmp
movsb
addr16
leave
fisubrl
ljmp
dec
test
pop
ret
in
insb
cmp
mov
aas
sub
inc
les
xchg
sti
testb
clc
inc
push
mov
leave
ds
sub
cmpsl
adc
lods
sahf
es
das
push
mov
lret
add
or
inc
add
fldenv
popf
cld
jnp
test
mov
outsb
pushf
clc
inc
xor
jmp
or
dec
insl
cli
xchg
mov
push
jb
test
movsl
out
cmovp
push
fists
sbb
repz
lods
lcall
dec
aam
cmp
sbb
aam
sbb
push
adc
fsub
xor
rcll
inc
nop
into
dec
gs
push
shl
jge
outsb
stc
push
sub
scas
in
sar
out
pusha
fucomip
lahf
mov
push
jg
pusha
test
mov
pop
sbb
mov
lret
sbb
dec
adc
sbb
pop
lcall
orb
outsb
jge
in
mov
mov
out
loope
adc
rcr
jp
mov
ficoml
movsb
movsb
stos
sbb
mov
xchg
cmpsb
test
enter
aam
out
out
mov
je
out
pop
pop
dec
push
dec
mov
xor
cmp
fs
test
jmp
sbb
cmp
lcall
lock
push
cmpsl
imul
xchg
sbb
jg
pop
int
xlat
dec
mov
jae
test
push
inc
pushf
push
pop
cmp
jg
dec
je
push
lret
out
adc
cmp
outsl
ret
sub
adc
jg
out
into
push
rcl
mov
leave
jle
xor
adc
inc
outsl
enter
bound
inc
or
and
adc
nop
sahf
sbb
xchg
adc
fstp
sti
or
dec
stos
xor
fidivs
ret
and
sti
shrb
scas
fidivrl
adc
mov
fstp
mov
xor
mov
cmp
cmp
inc
mov
mov
pop
dec
mov
cmp
xor
loop
and
xchg
mov
adc
sbb
cmp
std
in
and
sbb
xchg
pushf
clc
cmp
mov
push
push
mov
inc
mov
sbb
loopne
sahf
adc
ss
mov
aaa
mov
jmp
daa
shlb
xlat
lret
rcll
mov
push
xchg
rcr
push
sub
shlb
mov
push
jmp
mov
mov
push
xor
mov
hlt
add
and
sub
and
inc
inc
lods
in
std
pop
cmp
xlat
lock
mov
mov
or
dec
add
outsb
and
ja
jmp
sbb
test
xchg
dec
fidivrl
mov
dec
dec
or
push
aam
or
ficoms
jle
popf
and
outsl
sub
dec
clc
fmuls
add
int3
or
inc
mov
push
mov
ficompl
xchg
lds
fiaddl
pop
adc
adc
or
sahf
add
rorl
or
lahf
ds
fwait
insl
ds
xor
subl
lcall
popf
adc
sti
add
bound
mov
movsl
shll
outsl
xchg
inc
mov
bound
and
jge
pop
cwtl
xchg
jecxz
mov
push
push
mov
je
je
push
in
xchg
cld
add
add
rcrb
fiadds
cmp
push
test
insb
add
jecxz
sub
and
jg
push
lods
and
fisubl
lds
sbb
mov
lcall
and
xchg
pop
pop
test
pop
mov
or
popf
sbb
dec
add
and
jmp
dec
sahf
lcall
dec
fwait
in
push
jo
test
rorl
incb
and
jae
mov
mov
vpsraw
popf
xor
pop
scas
mov
pop
neg
sub
fdivp
imul
sub
or
inc
adc
gs
mov
lcall
sbb
clc
xchg
sbb
sub
add
je
push
ret
xchg
cmp
addb
mov
xchg
orl
mov
lcall
sub
dec
cli
jl
or
xchg
cmp
sub
int3
fimull
loop
int
out
mov
fistps
mov
leave
cltd
lcall
add
dec
lea
cwtl
sbb
insb
push
outsl
lock
icebp
inc
scas
outsb
insl
xor
in
sahf
test
adc
sbb
aad
pop
je
inc
outsl
popf
movsb
hlt
lret
enter
nop
lret
pushf
mov
xchg
test
daa
xchg
push
dec
sbb
insl
mov
repz
mov
mov
mov
test
outsb
pop
rcrb
xor
nop
push
jecxz
out
pushf
xor
popa
stc
scas
fs
shll
icebp
cli
lahf
sahf
xor
and
aaa
data16
je
rclb
inc
call
sti
movsb
pop
stos
imul
push
lcall
test
ljmp
cmp
inc
andb
dec
jno
imul
cwtl
push
mov
icebp
pop
add
stos
out
push
mov
sub
into
movb
movsb
iret
nop
cmp
mov
push
rclb
stc
jnp
aad
insb
gs
add
jg
aad
ret
push
ljmp
push
mov
scas
sti
xchg
test
pusha
imul
mov
jl
clc
ds
dec
sub
aas
lret
dec
cmp
pop
ja
or
lds
inc
sub
xchg
mov
jb
into
push
loop
adc
shl
addr16
fs
out
push
divb
aam
push
stos
pop
cmp
mov
stos
mov
sub
xor
test
push
out
shlb
insb
in
mov
adc
nop
pop
and
scas
scas
mov
hlt
into
imul
mov
daa
sar
xchg
push
inc
jecxz
lds
aam
add
inc
sub
or
push
test
nop
shlb
dec
and
sbbb
mov
mov
imul
mov
out
pushf
mov
and
int
ja
cmc
jae
push
and
scas
mov
sbb
ds
xor
jle
lret
mov
sti
in
sub
inc
aad
in
loope
int
pop
cmpl
mov
xchg
loopne
push
ret
jecxz
lock
nop
dec
sbb
xor
add
loopne
loop
rolb
les
imul
lds
add
xor
rclb
jbe
pop
test
into
cmpsl
out
pextrw
dec
add
push
lods
lahf
xor
outsb
enter
pop
adc
fs
inc
jo
cmpsb
sub
incl
and
mov
fwait
and
js
pop
pop
push
fdivs
enter
mov
enter
jmp
aad
push
je
arpl
xchg
lds
imul
pop
pop
mov
add
mov
aad
inc
sbb
push
shr
pop
lcall
pop
popa
inc
daa
fcmovnbe
in
mov
stos
adc
test
mov
adc
negb
mov
addb
cmp
lea
scas
jno
fdivrs
inc
jo
dec
sub
cli
push
ret
pusha
mov
out
mov
addr16
push
mov
in
cmpsb
pop
add
pop
pop
dec
lods
fbld
int3
ficomps
sub
dec
inc
test
mov
fs
sbb
je
in
repz
push
cs
inc
mov
mov
test
sub
orb
push
out
repz
adc
jle
xchg
bound
and
inc
out
dec
dec
imul
or
mov
bound
jb
xor
stos
aaa
call
jg
and
sbb
or
out
push
or
aaa
lods
pusha
ret
mov
movsl
inc
cs
push
cmpsl
xor
movb
fidivrl
add
cmpsl
add
enter
mov
int3
lahf
push
cmpsl
lret
mov
orb
mov
adc
cmp
jle
in
sbb
in
ja
testl
fldenv
pop
lods
pop
mov
adc
mov
cli
push
in
fnstsw
inc
cli
or
sub
cwtl
inc
mov
add
xor
vmwrite
inc
cmp
rcl
imull
jbe
test
arpl
dec
inc
shlb
xlat
lock
roll
sub
add
xchg
int3
cltd
or
jnp
mov
mov
test
testb
xchg
cmp
push
sti
sarb
push
cs
out
sub
cltd
jmp
ret
adc
cltd
pop
xor
mov
fstpl
scas
fistl
insl
shll
push
or
and
adc
repnz
sub
push
mov
mov
pop
stos
data16
cltd
pop
cmp
mov
mov
popa
push
pusha
pop
lahf
xchg
sbb
mov
fistps
pop
jecxz
ret
push
cld
cmp
jb
add
cwtl
or
out
pop
js,pt
jo
jo
ds
cmpl
lods
subb
stc
in
pop
push
scas
add
clc
jo
cmp
cmp
mov
inc
dec
jns
into
in
xor
sbb
les
out
fcomp
xlat
xor
in
es
jne
popf
xchg
imul
mov
pop
popf
push
cli
or
and
test
out
mov
dec
repz
sbb
daa
jno
mov
and
jecxz
sbb
aad
inc
sarb
mov
pop
gs
repz
mov
testb
aad
xchg
pop
test
push
pushf
push
or
xchg
sbb
sub
imul
fimuls
cwtl
pop
movsb
es
mov
mov
cmpl
negl
cmp
xchg
pop
pop
dec
imul
aam
push
add
test
nop
mov
test
jecxz,pn
cmc
icebp
pop
mov
lahf
jne
rorl
cmpsl
notl
and
or
pop
into
cmp
inc
xchg
mov
xor
xchg
ljmp
cmp
push
sahf
cmpb
pop
pop
mov
inc
subl
sub
aaa
mov
mov
or
lods
stos
fisttpl
movsl
into
dec
pop
gs
dec
test
xchg
out
jnp
loopne
outsl
mov
sahf
sti
jno
push
jbe
pusha
mov
mov
adc
mov
sub
jl
dec
out
fistps
add
jns
jge
pop
xchg
dec
cs
insl
movsl
mov
mov
in
pop
or
sbb
test
cmp
in
xor
ss
in
popf
sti
mov
sub
sbb
xor
xor
push
in
mov
cmp
xchg
outsb
xor
jl
frndint
xor
and
add
mov
aas
adc
bound
outsl
jo
cli
and
xchg
xor
lods
aas
leave
mov
inc
jbe
and
xchg
jg
test
call
out
add
pop
dec
and
stos
adcb
mov
cmp
rorb
xorl
in
push
mov
xchg
adc
jae
dec
add
lcall
ret
sub
in
adc
lock
iret
je
repnz
test
jnp
adc
cli
loope
int
xor
xchg
inc
mov
in
lea
rcrb
push
jns
pushw
test
testl
les
pop
insb
jno
push
int
mov
mov
testb
ret
xchg
fldt
jns
xchg
or
insl
xlat
xchg
ja
in
sbb
xchg
stos
daa
inc
sbb
fcmovbe
and
sub
jbe
stos
dec
cmp
filds
cmp
jge
jnp
xor
cmp
enter
jl
mov
loope
pop
mov
push
push
lret
push
adc
repz
orl
cltd
pop
leave
test
cs
xchg
mov
nop
lret
loope
xor
jmp
repnz
out
xor
les
cmp
push
stos
mov
dec
jmp
lods
mov
mov
jp
loope
jne
xchg
push
lcall
sbb
jbe
es
dec
scas
fisubrl
xchg
mov
das
lahf
mov
add
xchg
sbb
add
push
cmp
jmp
testb
push
pop
add
sbb
sub
arpl
cmp
cmp
mov
dec
jnp
or
outsl
jbe
lret
out
ds
pushf
lcall
add
inc
mov
and
cs
inc
cltd
clc
imul
arpl
xlat
outsb
xchg
add
pop
adc
test
jl
and
sbb
daa
mov
pop
hlt
mov
mov
mov
dec
xchg
js
pop
push
dec
movsb
sub
aas
ret
rolb
daa
dec
cmp
mov
sbb
push
pop
out
les
mov
lods
inc
lahf
add
arpl
sahf
jae
pop
cmp
repz
imul
dec
mov
push
mov
js
mov
fisubrs
loopne
push
dec
push
and
ror
add
ss
pop
jmp
dec
lods
adc
pop
and
sub
push
jae
outsb
jb
ss
mov
mov
aas
popa
mov
insb
push
sarl
dec
and
sbb
push
sbb
ds
pop
push
or
mov
aaa
pop
notl
sbb
popa
popa
push
xchg
push
gs
xor
dec
adc
lea
lods
test
or
sbb
cli
xchg
pop
out
out
and
ret
bound
add
test
jmp
inc
jb
lds
in
pop
sub
lods
cld
and
jo
inc
sub
mov
lret
cmc
push
arpl
out
cld
dec
daa
or
call
mov
mov
scas
pusha
jae
cli
pushf
fwait
add
add
imul
outsb
out
sub
dec
arpl
and
jb
scas
das
pop
xchg
div
test
dec
js
popa
sub
cmc
or
test
add
add
add
dec
push
out
fcomp
push
leave
pop
xor
inc
xor
mov
xchg
stos
movsb
popf
push
clc
insl
and
xchg
clc
andb
sub
push
fldcw
dec
inc
data16
pop
out
add
roll
mov
insb
rcr
mov
int3
sti
insb
lret
mov
iret
jecxz
leave
lret
adcl
aad
jns
je
in
js
push
movsl
pop
push
mov
inc
jnp
sti
out
insl
arpl
xchg
lahf
sub
sbb
cld
in
sub
pop
es
pop
inc
sub
mov
lahf
push
inc
rcll
ss
in
push
pop
add
and
jno
lea
or
push
xchg
outsb
push
jecxz
mov
mov
xor
in
dec
push
pop
jns
jle
lea
fisttpl
repnz
mov
dec
add
insb
gs
mov
loope
or
nop
gs
rol
jmp
adc
and
lcall
mov
addb
mov
jb
add
arpl
cmp
pusha
scas
ds
es
icebp
xlat
scas
cs
ficoms
mov
out
iret
dec
sub
shlb
in
jo
insl
mov
hlt
fcomi
mov
xchg
or
sub
jbe
xchg
xchg
adc
push
mov
xlat
nop
mov
pop
loop
cli
mov
lcall
ja
mov
push
add
xchg
jbe
lods
pop
popl
pop
pop
push
dec
jno
xchg
sbb
dec
lods
iret
shl
movsl
pop
mov
arpl
jp
lret
andb
call
mov
out
push
in
fdiv
and
inc
test
or
cmp
push
jge
hlt
and
repz
mov
lea
dec
pushf
pushf
ret
inc
shll
and
xor
push
jg
sti
dec
pop
loope
push
insb
cmp
ds
popf
scas
sub
sub
shr
dec
fsubs
and
pop
lret
adc
pop
enter
int
sbb
xor
repz
fwait
enter
or
dec
gs
xor
in
daa
cmp
mov
cmp
mov
dec
outsb
mov
push
enter
push
jb
outsl
fidivl
int3
pop
cmpsb
ds
stos
jecxz
lods
imul
dec
shlb
and
in
mov
inc
adcb
fcmovnbe
and
stc
mov
cwtl
dec
mov
cmpsl
mov
lods
or
mov
pusha
mov
push
mov
adc
imul
pop
adc
xor
mov
xchg
ds
loopne
inc
push
mov
or
cld
sub
out
aam
xlat
rol
inc
pop
subb
cmpl
dec
ss
cmp
out
popf
paddusw
and
paddq
xor
push
sbb
cmpsl
imul
icebp
jbe
movsb
jg
cli
std
cmp
imul
dec
jns
rcll
dec
jp
inc
gs
pushf
pop
or
cmc
cmp
andb
leave
data16
bound
inc
push
mov
imul
shll
dec
cli
dec
xorb
sub
xor
repz
mov
push
sbb
xlat
scas
clc
sub
sbb
scas
jnp
jl
and
push
xor
xchg
aad
mov
cld
xor
cmp
sbb
aam
push
sbb
ljmp
push
lahf
sbb
pop
push
sbb
cmpsl
inc
mov
mov
mov
cld
je
push
and
int3
dec
mov
xchg
out
in
sbb
xchg
ljmp
dec
jb
mov
or
lret
leave
iret
rolb
inc
insl
xchg
jbe
jmp
mov
jo
lahf
int3
in
test
mov
jb
mov
pop
leave
cld
clc
jecxz
nop
add
sub
aad
jo
hlt
testb
adc
movsb
inc
and
test
sub
fsts
push
pop
lcall
mov
loop
xor
jo
fs
pop
ret
push
mov
mov
xor
or
cld
rcl
mov
scas
and
mov
mov
cmpsb
outsb
adc
xor
mov
insb
xchg
mov
js
xor
mov
cli
shrl
shll
cmc
test
sbb
sbb
ja
cld
cmpb
and
out
jl
cmp
sbb
pop
add
jns
or
and
jmp
mov
and
iret
jg
int3
into
add
dec
clc
xor
jns
imul
into
adc
push
cmc
or
inc
mov
pushf
adc
repnz
mov
loop
pop
std
or
add
out
mov
mov
cmp
test
shlb
imul
out
nop
mov
xchg
mov
pop
mov
outsl
leave
int3
lea
or
pop
push
fstpl
in
xchg
loope
pop
dec
fadd
mov
mov
mov
fnstsw
xchg
cmp
pop
xchg
nop
mov
mov
mov
cltd
and
xchg
pop
js
jne
cltd
cli
loope
lret
push
aas
cmp
adc
pop
fsubs
mov
xchg
add
in
jl
xor
sbb
pop
xchg
pop
and
in
sti
xchg
adc
mov
movsl
je
cli
popf
xchg
clc
hlt
lea
jecxz
gs
stos
or
pop
xor
sub
decb
jae,pt
stos
fs
xor
push
or
repz
jns
push
mov
test
sbb
sub
dec
pop
pop
sub
xchg
or
popf
inc
lea
xchg
test
push
mov
aad
sbb
xchg
lret
sub
sbb
cmp
ret
data16
outsb
adc
dec
in
divl
xor
push
jle
fs
pop
push
in
inc
test
mov
sub
sbb
xchg
int3
lods
mov
popa
push
mov
clc
ret
adc
mov
xor
mov
addb
outsl
push
and
jg
inc
inc
addl
push
pop
iret
sahf
and
ja
aam
mov
xor
das
push
jle
push
pop
xor
add
lock
xchg
push
and
cmp
dec
mov
push
mov
xorb
cwtl
out
cld
aam
lret
push
jle
xor
negb
sar
push
aad
mov
dec
cmc
add
test
add
mov
cld
jo
test
call
or
cmc
pop
hlt
iret
push
fnstenv
jne
or
mov
adc
fwait
jecxz
dec
out
push
dec
fcmovb
mov
mov
dec
dec
lods
gs
push
cmc
push
mov
sahf
ror
scas
es
sub
inc
adc
out
pusha
mov
xchg
sub
cmp
cmp
mov
push
push
aad
out
xlat
lea
loope
jl
js
lret
inc
jae
imul
je
ficoms
sub
jl
pop
fidivl
and
adc
xor
jmp
test
cmp
fistpl
mov
add
clc
xor
or
mov
movsl
add
add
hlt
call
nop
mov
popa
and
dec
fcompl
xor
mov
arpl
jl
push
mov
in
add
push
gs
fstpl
push
inc
test
or
repnz
repz
ljmp
das
and
fcompl
or
filds
xchg
xacquire
daa
popf
call
outsb
jmp
mov
mov
repz
xchg
in
xchg
popa
jbe
fldl
xor
loope
mov
mov
push
and
subb
mov
mov
pop
popa
mov
mov
fstpt
pop
ds
push
aas
aad
sbb
inc
add
xlat
mov
outsb
cmp
inc
mov
or
cwtl
fstps
xorb
cmp
jno
aam
dec
sbb
ds
fbstp
outsl
imul
add
cmp
add
aad
add
ret
lea
adc
add
dec
jo
xchg
ret
adc
divb
in
push
imul
push
inc
push
jns
push
jl
fs
insb
cmp
call
dec
leave
jb
sbb
mov
sbb
sti
push
mov
popf
mov
gs
in
lods
xor
rcll
loopne
xchg
or
xchg
xchg
in
punpckhbw
subb
inc
insb
fsubs
je
rcl
imul
mov
hlt
les
add
insl
lcall
pusha
sbb
mov
inc
jmp
in
push
jbe
mov
cmp
fcoms
cld
xchg
pop
or
sub
stos
inc
daa
lock
sbb
lds
stos
push
lods
dec
mov
sahf
dec
sub
ficompl
jae
bound
arpl
jnp
or
gs
xchg
aad
ja
mov
mov
sub
aam
jge
cmpsb
add
clc
in
in
pop
jecxz
dec
xchg
fsubs
popa
jno
mov
lea
je
jbe
aam
dec
jae
cs
sub
movsl
jae
jno
mov
add
inc
dec
aad
sub
cmpsb
xor
mov
mov
sbb
pusha
push
mov
in
push
inc
pop
xchg
inc
jg
inc
in
jmp
sbb
enter
or
andl
scas
insb
das
cmp
push
mov
enter
adc
cmp
lret
mov
adc
push
add
std
adc
jnp
cli
push
push
xchg
repz
mov
lea
stos
mov
inc
scas
push
mov
mov
testb
imul
fnsave
ss
dec
mov
xor
mov
into
or
mov
push
lock
pop
dec
in
orb
sbb
jae
xor
hlt
mov
mov
push
xchg
in
add
lret
fldl
push
decb
push
das
dec
dec
movntq
out
test
pop
aad
imul
dec
mov
jge
je
xchg
loope
icebp
mov
pop
in
jne
mov
or
sub
adcb
mov
xor
mov
inc
divl
imul
sub
shrb
negb
lcall
dec
pop
sub
hlt
xor
xor
or
jb
cmp
mov
mov
mov
test
dec
sub
and
xchg
inc
cmp
scas
push
adc
popa
dec
lahf
push
out
mov
je
xor
and
mov
cmp
push
repnz
push
push
es
push
pop
pop
xchg
fld
mov
cltd
in
xchg
or
xchg
popa
std
loop
jns
push
push
rcll
rcr
fs
rcll
daa
mov
jmp
into
movsl
xchg
popa
in
cmpsb
out
outsl
mov
sbb
mov
cmp
mov
mov
aad
sbb
out
dec
insl
in
pop
ljmp
int3
mov
jmp
sub
cmpsl
roll
xor
pop
roll
sub
movsb
pop
notl
fs
shll
jno
mov
or
je
xchg
or
pop
aam
sub
pop
mov
adcb
fadds
pushf
push
sub
adc
adc
and
pop
add
out
or
cmp
pop
dec
jg
add
adc
inc
inc
mov
mov
add
cld
push
push
dec
out
icebp
cmpsb
cwtl
inc
lret
je
imul
bound
cs
push
add
jecxz
lods
or
or
ret
loopne
stc
or
sub
mov
stos
fdivrs
xchg
out
xchg
cmp
cmc
rcrl
xchg
cld
and
jle
inc
jne
loopne
xor
sbb
aad
fwait
fwait
sub
pushl
pop
mov
push
sbb
cmpsb
lea
add
les
lcall
test
fwait
push
inc
int
and
idivb
dec
mov
and
imul
test
ret
mov
mov
fmull
jecxz
sub
sbb
jecxz
mov
bound
cmp
add
xchg
fwait
vmwrite
roll
xchg
fisubrl
addl
jo
movb
test
repz
mov
pusha
stos
iret
or
ret
add
jb
pop
cwtl
mov
xchg
inc
cmp
sub
out
fnstsw
inc
pop
mov
lahf
and
setno
pop
rcrl
cmp
inc
add
xor
mov
mov
cmpsl
adc
fldenv
pop
rclb
pop
dec
ljmp
test
xor
mov
shll
test
add
ja
mov
dec
aad
jmp
cmc
sbb
clc
xchg
jo
scas
rcr
or
adc
adc
cld
and
call
push
cmp
stos
xchg
mov
cwtl
testl
sub
push
mov
and
push
pusha
das
into
or
and
fstpt
je
pop
ss
cld
pop
das
sbb
mov
popa
mov
mov
mov
je
rcl
sub
std
imul
lahf
iret
scas
clc
adc
fnsave
arpl
fstl
out
aaa
dec
and
loope
lods
mov
mov
mov
mov
xchg
xor
neg
pop
inc
pop
mov
mov
cmp
push
inc
jb
hlt
out
push
jl
jo
lahf
sub
xor
out
push
ret
cwtl
fdivrs
pop
push
filds
and
ljmp
out
stos
mov
jmp
ja
mov
in
jne
jge
inc
cld
flds
jo
imul
in
adc
loop
lret
shll
leave
fidivrs
ret
and
rcll
les
cmp
push
fsub
mov
je
jmp
mov
xor
dec
shr
dec
mov
jl
lret
mov
add
push
push
mov
push
lahf
loop
adc
cmpb
stos
mov
pop
or
fmull
mov
fisttpll
mov
bound
xor
jo
ret
aam
aaa
push
sbb
push
test
shl
add
xlat
mov
shll
cwtl
mov
scas
mov
clc
mov
jnp
cli
cwtl
add
dec
xchg
inc
leave
jnp
pop
cmpb
icebp
mov
mov
je
fimull
inc
sbb
push
mov
sbb
roll
in
mov
sahf
jmp
cld
xor
and
mov
mulb
mov
loope
jb
mov
das
sarl
fcmovnb
lahf
fsubr
xor
mov
fwait
pop
xlat
cmpsl
aam
adc
push
add
icebp
lret
sub
scas
adc
int
insb
ljmp
xlat
test
adc
in
inc
mov
in
jg
out
or
test
xor
pop
cmp
push
scas
cwtl
add
push
adc
ret
cmpl
mull
push
ljmp
rcrb
sbb
pop
xor
mov
sbb
enter
out
mov
icebp
mov
mov
push
lds
lret
mul
adc
jb
mov
xchg
les
add
cwtl
das
rolb
rcrb
in
and
or
and
or
cmp
inc
adc
sub
out
ljmp
testb
cwtl
cmp
inc
addr16
add
dec
stos
and
or
xor
xchg
adcb
fstpt
es
cmpl
fs
mov
dec
clc
add
inc
cmp
pop
fwait
cmpsb
inc
fwait
cld
adc
mov
stos
inc
adc
mov
cmp
sbb
jne
xor
jo
mov
repnz
pop
iret
adc
inc
fidivrl
daa
add
stc
sbbb
add
shll
push
pop
mov
push
shl
sarb
dec
or
adc
sbb
das
ret
loope
icebp
mov
dec
sub
pop
mov
adc
adc
cmp
sub
sub
cmp
add
in
cmp
aas
and
pop
cmp
in
push
fcomi
sub
pop
mov
inc
xor
inc
ret
int3
dec
push
sub
adc
push
jns
push
adc
test
mov
ret
mulb
pushf
sbb
sbb
das
bound
mov
mov
jecxz
mov
sti
out
mov
pusha
cmpsb
xchg
cwtl
pop
in
notb
push
movsb
jmp
lock
cli
xchg
jge
mov
xchg
sbb
pushf
scas
sbb
lcall
cltd
xchg
jb
xor
fcomps
iret
adc
movsb
mov
orl
lock
les
addb
xchg
or
test
and
mov
ds
int
cmpl
ljmp
inc
mov
jle
in
pop
mov
xchg
xlat
mov
leave
cli
cmp
hlt
and
sub
jne
and
add
mov
ret
jb
testl
sarb
outsl
stos
sub
shl
imul
movsb
shll
arpl
loop
cmp
loopne
xchg
xor
jne
xor
lock
cmp
dec
push
aad
pop
int
pop
ja
or
repz
or
jae
repz
adc
add
xchg
dec
outsl
adc
adc
jnp
mov
mov
fldcw
repnz
mov
dec
out
add
insb
or
mov
outsl
ds
mov
mov
repnz
or
dec
test
sub
add
xor
push
nop
jns
inc
int3
bsr
add
js
push
inc
pushf
hlt
pop
hlt
mov
in
imul
dec
repz
pusha
and
mov
test
mov
lahf
adc
clc
shlb
fnsave
push
xor
or
repnz
jl
add
add
sub
das
jge
mov
push
test
pushf
repnz
pop
cmp
jg
adc
ds
fsubr
jp
jb
ret
imul
mov
ss
sbb
lahf
fdivrs
sbb
in
push
fadd
idivl
adc
addr16
or
sub
imul
inc
mov
inc
test
lds
stos
push
mov
sub
jno
xchg
ja
push
loope
pushf
fcmove
ret
popa
ror
fcmovnbe
add
cli
inc
orl
mov
push
and
dec
aad
rcll
cmp
sti
sbb
mov
loop
xor
les
sub
loopne
scas
xchg
xchg
or
outsl
mov
mov
add
loopne
inc
fxch
out
sub
mov
and
dec
adc
dec
lds
cmpsl
lret
jb
xchg
cmp
loope
sbb
cmp
mov
sbb
pop
aam
ljmp
std
pop
mov
movsb
push
mov
pop
out
push
mov
xchg
loopne
sbb
mov
not
dec
adc
push
or
mov
daa
dec
mov
hlt
out
daa
or
or
in
int
xlat
aas
jecxz
popf
jbe
cmp
push
dec
jp
mov
test
je
dec
aad
imul
xchg
cltd
mov
insl
lea
pushf
pop
adc
div
add
int3
xchg
jb
imul
pushf
in
xor
repz
push
add
sub
lea
sarl
addl
lods
fbstp
test
xchg
negb
cmpb
ljmp
cld
push
pop
fwait
pop
fs
je
lret
fs
mov
jecxz
stos
test
adc
sbb
test
add
push
clc
push
inc
pushf
int3
dec
out
clc
xlat
push
cmp
pop
lahf
jmp
rcll
repz
fwait
inc
cmp
les
push
sti
jg
int3
cli
cmp
dec
imulb
dec
jl
jns
cmp
jnp
xchg
and
jae
div
ljmp
bnd
popa
aas
cmpsl
adc
sbb
fisubl
pop
add
jge
inc
repz
inc
or
xchg
data16
inc
cmp
and
fsubrs
cs
mov
xchg
inc
repnz
jns
lods
inc
xor
in
xchg
add
mov
mov
inc
push
nop
sbbb
add
in
adc
repz
xchg
mov
pop
scas
push
mov
in
dec
lock
push
or
jecxz
in
cltd
xor
sub
push
jb
lahf
into
cmpsl
xor
aam
lods
add
pushaw
add
xchg
xchg
jo
fcomps
cmpsl
sub
out
sbb
sub
test
jg
mov
jmp
dec
out
lahf
sbb
out
mov
mov
adc
cs
jl
test
test
pusha
mov
mov
ret
mov
push
aam
shrl
jl
nop
push
ror
sub
pop
stc
sub
sub
jb
cmp
xchg
fsubl
vmovaps
mov
testb
adc
sbb
add
ja
pop
popf
das
in
xor
xchg
push
cmp
imul
dec
sti
pop
push
jae
xchg
mov
imul
jecxz
insb
push
shr
xchg
xchg
ss
pop
es
or
push
lahf
push
xor
idivl
leave
lahf
popf
pop
rol
fucomi
xchg
or
fildl
lahf
fcoml
ficomps
in
stos
out
push
lcall
aas
test
cwtl
lret
test
out
hlt
call
lock
inc
inc
xor
ds
cmpsb
out
lcall
loopne
or
mov
fwait
out
pop
jmp
or
fcmovnb
movb
mov
and
xor
or
cmp
sarb
out
mov
and
inc
movsl
fldl
mov
fcompl
push
out
add
subb
shl
inc
scas
movsb
adc
mov
ja
mov
outsl
cltd
cmpsl
fstpl
neg
rcrl
fcomi
push
jmp
out
push
push
xchg
rcl
mov
fwait
xlat
imul
mov
add
push
daa
xor
es
pop
shlb
cmc
xchg
int3
jp
jl
adc
lea
adc
stc
push
mov
nop
xchg
rcrl
add
xor
pop
movsl
cltd
or
and
adc
daa
daa
aas
xchg
lds
cmp
out
ds
sub
push
lret
in
mov
xchg
xchg
jp
lret
loop
xor
or
lods
dec
xor
scas
cli
push
addl
xchg
push
clc
cmp
int
xchg
lods
dec
cmp
xor
xchg
or
pop
aam
pop
pushf
loopne
scas
lret
cmp
mov
js
into
jns
adc
rcll
adc
xlat
sub
rcr
sbb
dec
int3
jbe
adc
cs
xor
inc
and
cs
shr
mul
inc
add
int
test
sub
cltd
rorl
bound
popf
fs
addr16
sbb
pop
xor
test
xchg
xor
in
mov
sti
out
inc
icebp
jg
mov
movsl
adc
loop
dec
mov
out
or
jecxz
sbb
push
mov
int
int
xor
repnz
cmp
loope
and
jo
jnp
mov
jae
data16
cmp
cmp
cwtl
jmp
dec
seto
dec
mov
loope
fwait
adc
insl
jle
fistps
and
sbb
stos
ljmp
in
rcr
xchg
jns
sub
xchg
adc
in
aaa
nop
add
cmpsb
sub
stos
dec
sub
pop
sub
mov
scas
push
jae
mov
seta
rorb
mov
mov
cwtl
les
push
arpl
movsl
or
fldenv
test
sahf
push
icebp
int3
pushf
cs
mov
in
sti
pop
int
imul
stos
dec
cmp
aad
aad
add
sub
popa
push
fdivrs
addl
add
mov
jb
das
cmp
mov
pop
inc
sti
stos
cli
cmp
lcall
pop
jno
insl
push
cld
scas
xor
inc
int
xlat
cmp
pop
fldl
lcall
shrb
xchg
xchg
sub
lret
mov
add
cmp
jne,pt
mov
sbb
popa
sbb
push
movsl
outsl
lahf
lret
jg
mov
add
and
jmp
incl
popa
mov
and
cmp
xor
in
push
or
insb
repnz
mov
int3
movl
add
lds
sti
sub
ret
sub
or
or
sbb
sub
mov
test
mov
push
stc
jle
jo
inc
and
in
dec
in
dec
stos
inc
xorl
jb
jo
xor
xor
pop
cmpxchg8b
mov
push
cmp
loop
lds
out
out
int3
jno
fistps
clc
inc
stos
popf
and
shrl
adc
mov
dec
pop
xchg
jnp
dec
clc
adc
shr
inc
pop
and
sub
pop
inc
inc
mov
test
arpl
ja
loop
lret
or
push
or
pop
dec
test
lock
xor
test
hlt
aaa
repz
in
insb
mov
and
stos
dec
adc
cwtl
jl
and
insb
add
jl
lcall
mov
mov
inc
jbe
mov
popa
cmp
dec
data16
cld
sub
cmp
xchg
dec
ds
into
dec
add
in
and
in
sub
stos
shl
inc
repz
mov
jno
insl
sbb
jb
sub
adc
jl
inc
sub
imul
pause
pop
fxch
imul
or
adc
cmp
push
pop
lock
es
cmp
loop
cmpsb
add
add
adc
cltd
leave
aad
subl
adc
xchg
mov
ffree
lcall
adc
mov
adc
fwait
and
xchg
fldenv
fwait
adc
sbb
stos
gs
mov
shr
xchg
sub
je
js
adc
inc
jl
fwait
sbb
shl
lea
ffree
mov
push
xchg
fadds
inc
movsb
clc
movsl
clc
and
xchg
cli
negl
popa
aad
mov
xchg
xor
jmp
mov
ljmp
sbb
jnp
scas
enter
and
add
std
je
inc
mov
fstpl
cmp
test
out
out
sub
xor
popf
ljmp
push
mov
cmpsb
ret
mov
dec
xlat
call
icebp
adc
stc
add
rcrb
pop
aas
mov
sbb
mov
cmp
int3
sbb
mov
movsl
outsl
xchg
mov
test
cmpsb
mov
cmp
shll
mov
int3
movsl
popf
ror
test
push
shlb
bound
jg
enter
rorl
jmp
mov
push
and
jge
jge
arpl
sbb
aaa
inc
orb
leave
jp
or
imul
mov
push
in
cmpb
test
adc
mov
mov
shrl
or
pop
loopne
jb
xlat
sbb
insb
arpl
loop
decb
mov
pop
or
push
xor
insb
xchg
mov
aad
aam
test
pop
jo
loopne
arpl
shrl
adc
fists
insb
sbb
addl
loop
mov
push
adc
xchg
arpl
movsb
icebp
es
adc
push
fs
mov
mov
mov
push
inc
lret
xchg
lret
clc
inc
mov
mov
daa
dec
jp
shrl
nop
pop
insl
pop
js
dec
cwtl
dec
popa
add
jmp
add
in
ficompl
lods
and
mov
js
and
mov
add
sti
mov
push
gs
dec
push
jns
inc
out
and
enter
dec
icebp
mov
loop
xchg
inc
mov
dec
inc
pop
aaa
xchg
cmpsl
mov
xchg
out
mov
andl
dec
aaa
inc
xchg
mov
leave
lret
cltd
cmp
cmp
mov
mov
xchg
xor
or
in
aas
push
pop
fwait
hlt
lret
pusha
mov
icebp
ficompl
cmp
outsl
mov
and
sti
jle
mov
jno
imul
popf
iret
and
lea
dec
mov
adc
imul
mov
hlt
decb
lret
push
push
dec
scas
push
cmp
cli
gs
jne
xor
sbb
adc
lock
les
push
iret
cld
lahf
fidivs
or
aad
sub
dec
popf
push
xchg
rorl
cltd
jecxz
jp
in
in
shlb
aaa
dec
testl
dec
imul
in
int
sarl
insb
mov
xchg
imul
mov
inc
pop
stos
sub
sbb
jno
lods
push
dec
daa
imul
mov
mov
inc
sbb
test
fs
imul
nop
jo
push
jmp
movl
ss
ret
sub
jmp
or
mov
or
cltd
into
int
notl
mov
ja
sub
and
incb
sub
lods
adc
inc
repz
pop
ljmp
mov
jle
xchg
cs
sahf
scas
add
mov
push
add
lahf
jns,pn
cmpsb
adc
dec
add
sbb
jp
cs
adc
lods
mov
add
xor
cs
cli
mov
andl
pusha
aad
ret
mov
cld
das
push
lcall
fimull
shlb
mov
cs
jmp
rclb
dec
dec
cmp
sbb
sbb
jno
mov
adc
add
bound
add
push
es
push
pusha
xchg
push
or
pop
je
das
in
fisttps
iret
loopne
jg
jbe
vpminsw
lods
fdivs
xlat
mov
rol
fsubrl
jg
das
jge
faddl
ret
pop
pop
xor
xchg
xor
mov
decb
sbb
popf
and
cmp
scas
mov
insb
sbb
pop
push
ret
adc
je
mov
cmpsb
mov
push
mov
pop
and
mov
push
adc
in
sub
pop
push
adc
or
adc
addr16
mov
mov
int3
add
out
rcr
sbb
pusha
push
mov
repz
pop
loopne
xor
arpl
sub
vmwrite
aaa
sbb
and
pop
jg
vpmovzxbw
dec
das
cmp
mov
mov
gs
mov
mov
inc
rorl
and
loop
lea
stos
in
xor
fidivrl
incb
pop
adc
int
ret
ja
add
push
imul
insb
mov
clc
out
mov
add
inc
stos
jl
repz
cmpsb
adcb
mov
movsb
mov
sahf
stc
xchg
hlt
push
jge
add
jae
sub
cmc
aad
int3
outsb
pop
xchg
sub
xor
aad
test
lods
das
jecxz
cmp
pop
xchg
stc
hlt
aam
adc
sbb
insl
rorb
jno
mov
mov
jb
leave
jb
jg
inc
dec
sbb
xchg
jns
cmpsb
stos
sbb
xchg
lcall
idivl
enterw
jae
add
jae
xchg
jne
pop
push
adc
outsw
xchg
mov
sbb
nop
aaa
or
or
and
cmp
je
enter
pop
rclb
push
inc
icebp
jmp
dec
ljmp
lods
pop
arpl
shrb
lahf
or
stos
int3
out
pushf
push
adc
mov
je
push
xor
lods
inc
xchg
es
mov
cli
push
add
insl
cmpsb
gs
mov
gs
push
push
shlb
pushf
cmp
xchg
imul
mov
push
mov
data16
stos
add
mov
mull
jo
cmp
add
ret
push
add
les
mov
fdivs
xor
add
test
inc
das
mov
pop
add
cmp
jmp
and
mulb
test
push
fimull
lock
loope
jns
fimuls
cmp
jae
cwtl
lret
ret
ljmp
out
or
xchg
nop
js
sub
add
jnp
mov
lcall
adc
loope
push
ja
ds
enter
ljmp
pop
mov
call
mov
sub
lcall
test
incl
fidivrl
sbb
ds
sub
sbb
daa
leave
scas
fisubrl
movsl
push
mov
mov
jg
shll
xchg
ret
jo
imull
fistl
sbb
mov
das
test
inc
mov
push
push
inc
mul
pop
mov
scas
cs
sbb
or
int
jae
xor
cmc
loop
or
movsb
dec
or
xchg
scas
shl
mov
jne
mov
sar
test
push
cld
cmp
fmull
cli
popa
and
cltd
pop
ds
popa
js
hlt
jo
pushf
scas
ljmp
push
xor
mov
int
add
cmp
add
jb
cs
scas
bnd
enter
and
or
inc
rclb
sbb
es
xor
push
outsb
xor
pop
mov
test
push
aam
sub
jae
sbb
mov
xchg
stos
test
inc
test
sub
popf
xor
movsl
repz
xor
or
mov
movsb
or
inc
push
aad
pop
and
in
inc
jbe
ficomps
test
xchg
push
andb
stc
and
sub
add
arpl
sub
iret
idiv
fnstcw
incb
mov
popf
insl
aaa
out
insb
push
int3
or
enter
cmp
pop
dec
in
scas
jmp
pop
cmp
lds
leave
mov
xchg
adc
aaa
stos
in
xor
shrb
cmpsb
addr16
pop
lret
je
shrl
xchg
out
inc
pop
lret
std
xchg
cmp
insl
jae
mov
mov
or
je
pop
lea
inc
cwtl
icebp
jmp
enter
scas
mov
inc
push
jnp
inc
outsb
lret
jp
mov
dec
icebp
mov
je
es
jnp
ja
jb
aaa
es
and
mov
stc
or
out
in
push
cmpsl
mov
addr16
and
in
add
cltd
popa
push
pushf
adcl
push
mov
mov
xor
xchg
add
out
mov
cmpsl
mov
inc
or
addb
jge
xchg
xchg
adc
popa
adc
rcl
push
dec
xor
mov
pop
mov
mov
inc
pop
jae
adc
popf
pushf
lea
dec
lds
xor
mov
ret
xchg
insl
bound
dec
push
imul
mov
xchg
add
push
test
ja
sbb
leave
adc
pop
xchg
sbb
lahf
mov
push
mov
xor
jmp
dec
sarl
adc
ljmp
cmpsl
movsb
xchg
nop
pop
iret
jb
imul
in
mov
sub
out
mov
push
leave
cwtl
xchg
test
sbb
fsts
andb
pop
jno
pop
jge
add
cmpsb
nop
int3
out
xor
and
ret
pop
xor
push
push
test
mov
xchg
mov
out
mov
push
jge
xor
aas
mov
rcl
cld
es
insl
iret
pop
int3
outsl
add
pop
shrb
push
outsb
add
test
inc
daa
adc
sbb
outsb
sahf
fwait
xchg
insb
push
aam
xor
add
cs
mov
dec
push
sarl
mov
xchg
repz
push
xor
push
push
fidivrl
push
div
add
and
xchg
hlt
push
cmp
sub
pop
dec
jp
idivl
or
sbb
push
cmpsl
stos
sbb
lds
jmp
daa
push
mov
shll
and
out
jae
cli
xchg
cmp
cmp
mov
sub
sbb
sub
loope
mov
cmpsb
sub
push
cmp
push
daa
adc
cld
cmpsl
lock
aad
push
cmc
jle
inc
pop
xor
gs
dec
mov
mov
or
mov
sub
dec
mov
push
in
repnz
popf
in
out
add
mov
sub
out
add
push
pop
fincstp
data16
pusha
add
mov
outsb
jle
mov
or
int3
and
imul
popf
and
pop
cmpsl
fbld
out
in
aaa
add
jo
sbb
xlat
cs
outsl
dec
mov
and
pop
clc
jb
lock
mov
pop
stos
or
ret
outsl
flds
pop
flds
loop
cmp
loopne
les
lahf
int
cwtl
sub
mov
jle
cmpsb
fs
fbstp
mov
adc
adc
enter
ljmp
xchg
and
in
sub
cmp
imul
subb
dec
jns
lods
or
xor
xor
mov
icebp
cmp
push
jp
or
sbb
js
sub
and
sub
dec
sub
pop
jno
cld
cmp
jnp
sbb
jmp
ficoms
loop
rclb
imul
sub
shrl
mov
pop
stos
loopne
cmp
scas
mov
repnz
popa
xorl
in
add
ds
dec
fldt
jno
jg
ret
add
cmp
cmp
out
push
jbe
ja
jge
call
adc
push
mov
sarl
mov
and
call
dec
xchg
jmp
mov
push
push
xor
sbb
leave
add
mov
cmpsb
jbe
xor
clc
dec
out
sbb
notb
test
adc
xlat
mov
fnstenv
fstps
inc
mov
imul
add
inc
fisubl
sbb
cld
xor
dec
inc
push
ja
add
xchg
mov
sti
mov
aad
push
lret
dec
or
sub
addl
sub
out
enter
dec
test
enter
outsb
repnz
dec
xor
bound
je
xchg
push
clc
and
fs
incb
in
je
ds
cli
add
das
pusha
mov
imul
and
int
dec
xor
mov
cltd
fisttpl
jl
pop
daa
xchg
repz
xchg
fsubrl
push
test
jecxz
not
leave
dec
rorl
lcall
mov
subb
adc
cmp
shrl
out
mov
push
dec
cwtl
mov
out
sub
xor
cmp
jae
or
mov
pop
call
and
add
cmpsl
clc
xchg
push
das
dec
cmp
fistl
pop
sbb
xlat
xor
pop
outsb
mov
aaa
mov
or
push
nop
mulb
mov
es
dec
decl
pop
dec
mov
dec
out
out
sub
outsb
data16
pop
js
fs
mov
cmp
dec
and
jns
dec
cs
xor
loope
cld
pop
incb
pop
jmp
and
enter
loopne
outsl
ds
icebp
mov
shlb
loope
enter
in
sbb
or
andl
leave
lret
xchg
pop
sbb
mov
inc
sbb
add
lock
iret
mov
mov
movsb
bound
mov
push
sub
sub
leave
hlt
xor
aad
pushf
out
fldcw
mov
lcall
sub
or
mov
xlat
ds
ljmp
or
test
testl
icebp
cmp
mov
lret
js
test
mov
or
in
loop
inc
pop
mov
leave
inc
insl
sub
inc
xchg
int
push
std
cmp
hlt
add
cld
lahf
aad
lods
hlt
cmp
fiaddl
inc
lcall
in
ficompl
sub
dec
mov
xchg
cmpsb
jge
xchg
dec
inc
in
adc
adc
pusha
mov
add
mov
inc
cmc
mov
mov
pushf
fucomi
jae
ja
cmc
and
lds
sarl
lods
in
jo
pop
gs
fnstenv
mov
testb
and
lret
dec
inc
cmp
icebp
pop
sbb
sar
push
mov
inc
les
pushf
or
call
xchg
push
xchg
push
test
cmp
ja
xchg
push
inc
mov
dec
xor
pop
xchg
addr16
mov
inc
xor
inc
sub
addb
out
bound
outsl
xor
jo
out
shl
xchg
mov
add
imul
divb
cwtl
inc
rol
xchg
fisubrs
mov
cmp
add
cmp
pop
jl
jmp
dec
aad
mov
xchg
es
das
fnsave
cmp
mov
jl
inc
mov
test
push
je
cmp
add
or
nop
ret
les
push
pop
outsb
addb
arpl
jmp
or
mov
scas
outsb
popa
aas
xor
jmp
shlb
or
loope
push
movsl
negl
pop
mov
cmp
test
cltd
aam
jge
shll
inc
push
dec
sub
scas
sarb
xchg
dec
add
sub
xor
rolb
pusha
lcall
shll
cs
mov
lret
std
out
call
inc
enter
data16
ror
dec
fcompl
inc
in
or
movsl
add
inc
in
pop
xorb
filds
lea
and
or
lea
out
idiv
xchg
cltd
aas
mov
jge
push
dec
add
adcb
or
sbb
xchg
push
hlt
mov
mov
insl
mov
sub
mov
ret
cmc
hlt
hlt
aad
lods
cmpsl
bound
push
cmp
adc
cmp
push
cmp
loopne
inc
mov
ljmp
shl
adc
iret
mov
icebp
call
dec
ss
ss
cmp
pop
shll
and
scas
push
es
stos
inc
pop
and
in
stos
xor
scas
sub
sqrtps
es
sub
xor
adc
xor
cmp
mov
scas
daa
jge
popf
pop
ja
pushf
int3
jecxz
icebp
add
xchg
ja
and
in
mov
imul
pop
divl
mov
mov
mov
sub
outsb
and
ret
insl
stos
enter
inc
pop
mov
les
add
sub
push
push
sbb
gs
lods
push
loope
lea
cmpsb
arpl
pop
push
lods
jnp
dec
fnstcw
pop
cmp
xor
lret
push
cmpsl
icebp
mov
jne
adc
icebp
out
fwait
mov
sub
sbb
stos
push
mov
mov
mov
xor
or
pushf
mov
fsubl
js
fnstsw
test
faddl
jb
fdivrs
xchg
xor
jne
push
ret
adc
call
imul
sbb
icebp
push
out
ds
add
imul
xchg
insl
fidivrl
push
mov
dec
ja
movsl
xor
pop
stos
cltd
or
repz
test
cmp
mov
sbbl
hlt
iret
imul
push
pop
popf
lods
sbb
data16
shr
imul
jp
int
pop
out
jb
cmpsb
je
arpl
jp
std
mov
fdivl
or
stc
enter
cmp
xlat
hlt
fcomp
movsb
cltd
fistpll
cmc
pop
movsl
clc
cld
jne
push
and
jns
mov
inc
push
mov
jmp
mov
lahf
sub
push
or
enter
jne
cld
mov
lret
jge
fsts
call
enter
les
mov
out
fisubl
in
and
add
scas
push
shl
popf
or
cltd
inc
lret
rclb
in
xor
mov
cmp
popf
setne
sbb
adc
push
adc
lock
mov
loopne
and
test
xchg
lret
in
pop
outsl
dec
addr16
hlt
adc
ljmp
mov
jp
sub
in
fists
scas
push
jns
and
push
xor
int3
mov
insl
ss
pop
xchg
mov
jp
dec
loopne
mov
sub
bound
movsb
nop
dec
adc
mov
pop
push
jno
jnp
repz
mov
dec
inc
sub
mov
into
cvtps2pd
mov
dec
mov
mov
jge
ljmp
push
rcll
in
popa
cmp
mov
imul
push
cmp
push
out
ret
wrmsr
stos
pop
je
sti
lock
nop
mov
push
aaa
push
jbe
add
sub
adc
mov
jb,pt
jns
loop
jle
es
jg
add
jl
push
lock
dec
sub
dec
rcrb
out
sar
in
out
mov
cmp
inc
mov
rcrl
popa
mov
mov
push
pop
adc
lods
stos
cmp
mov
jbe
ret
cmp
ret
dec
xor
and
mov
jg
cld
jg
mov
sahf
in
int
pusha
sbb
in
icebp
pop
add
pop
movsl
test
sub
cs
gs
jb
fucomi
or
dec
std
push
jae
lds
mov
cmp
mov
pop
mov
adc
out
or
mov
add
jge
insl
pop
push
push
push
and
aas
inc
pop
or
mov
nop
sbb
push
mov
push
sub
sbb
cld
sbb
pop
add
cmp
enter
out
mov
dec
adcl
mov
pop
mov
test
sbb
mov
aam
xchg
imul
pop
dec
in
out
jp
sub
push
mov
sub
imul
xor
cmc
dec
mov
rol
push
push
lds
mov
xchg
jle
iret
mov
pop
sub
or
loop
xor
ds
xchg
lret
stos
arpl
xchg
mov
dec
std
pop
jg
mov
xchg
jle
lret
cltd
stos
cwtl
dec
fisubl
mov
imul
jecxz
mov
mov
inc
cld
cmp
sbbb
pop
fidivl
inc
int
popf
clc
ret
adc
scas
push
loop
pop
mov
stos
mov
daa
rcr
adcl
and
lret
xchg
enter
pop
out
push
pop
fbstp
out
adc
jle
dec
or
jns
sbb
sarb
inc
add
es
pmaddwd
mov
xchg
call
jp
int3
ljmp
fmull
add
cli
push
sbb
leave
enter
cmp
in
testb
sarb
stc
mov
aaa
push
xchg
out
xchg
mov
add
mov
or
or
das
cmpb
adc
mov
mov
mov
cmpsl
jne
push
mov
xlat
jb
lahf
lret
cli
mov
pop
fscale
mov
sbb
nop
mov
xchg
push
inc
ljmp
xchg
lret
inc
cmp
mov
shrl
fdivr
test
inc
mov
adc
jno
outsl
dec
mov
xor
push
xchg
lea
fistps
push
lock
xlat
rolb
das
push
lds
or
sbb
add
call
das
sahf
out
lods
or
mov
sbb
inc
adc
jecxz
orb
push
jecxz
inc
and
pop
mov
subb
pushf
mov
add
pop
adc
cmpsl
push
shll
pop
dec
fbld
sub
mov
stos
xchg
xor
repnz
mov
push
fnstcw
icebp
or
insl
jp
hlt
xchg
sub
loopne
icebp
mov
call
mov
adc
ficompl
mov
jo
in
inc
ja
xchg
add
clc
xchg
sub
pop
push
popa
pop
jmp
pop
mov
sub
jge
vaddps
mov
and
inc
int3
mov
mov
aas
mov
pop
test
loop
int3
test
mov
cmpsb
jns
pop
xor
push
push
inc
jmp
xor
dec
imul
out
push
cwtl
jp
jno
in
adc
bound
and
ds
add
jle
xor
je
int3
les
out
fisubrs
cmp
mov
xor
mov
or
gs
cmp
dec
or
sub
mov
gs
inc
or
xor
xchg
std
mov
movsb
pop
or
or
ret
adc
inc
movsl
jne
leave
inc
push
jle
push
or
repz
sbb
mov
cmp
aam
sub
hlt
jg
mov
iret
mov
rorl
lea
enter
mov
fs
and
ja
push
xor
sahf
sti
mov
and
pushf
cli
fcmovb
xor
outsl
andl
popf
clc
jp
dec
jns
add
and
sbb
mov
loope
sub
adc
cmp
pop
sarb
dec
lret
or
and
lcall
hlt
mov
jnp
push
dec
mov
ret
fldenv
pop
sub
stos
fmuls
cvtps2pd
test
lock
call
out
test
adc
xchg
mov
mov
mov
clc
or
sbb
xor
dec
xorb
stc
xlat
jne
adc
popf
xchg
data16
shr
mov
xchg
push
arpl
loop
add
orl
mov
clc
lcall
movsl
mov
mov
jb
outsb
ret
sub
push
cmpb
push
pusha
inc
inc
and
shll
repnz
or
inc
jne
push
ds
dec
and
xchg
leave
cmp
push
sub
dec
fbld
cmp
enter
iret
push
push
push
mov
in
push
fnstenv
add
jle
lock
leave
push
dec
fidivs
mov
adc
aam
push
mov
iret
xchg
lret
jb
mul
pop
xchg
movl
sub
cs
xor
mov
ja
mov
push
inc
lods
sbb
fistpll
into
push
xor
inc
movsb
xlat
mov
xor
xor
stos
inc
mov
lods
adc
cmp
std
mov
xchg
test
imul
xor
sahf
xchg
push
sbb
fdivp
popl
das
clc
cs
cmpl
mov
daa
adc
mov
dec
mov
or
mov
cmp
out
pop
mov
dec
hlt
adc
mov
movsb
inc
movsw
sbb
cwtl
pop
jbe
stc
sub
push
rcl
add
and
pushf
push
test
fstps
mov
mov
mov
inc
mov
int
enter
icebp
sbb
pop
sub
mov
jp
adc
and
ss
insb
fwait
add
jmp
mov
add
xchg
idiv
and
js
push
or
push
mov
jle
adc
mov
pop
js
push
or
mov
out
hlt
inc
mov
dec
call
jmp
mov
xor
lahf
aas
arpl
es
mov
test
xchg
mov
frstor
adc
sub
push
outsl
imul
mov
mov
sbb
lret
jno
push
adc
add
and
test
data16
xorb
aas
push
push
inc
popa
push
rcr
fs
nop
cmp
mov
loope
test
loope
addr16
cmp
adc
jns
ja
jb
cmc
lret
inc
cmp
in
sub
pop
icebp
mov
cmp
mov
sbb
shlb
inc
jns
cmp
test
push
inc
push
mov
dec
sbb
out
subl
and
pop
adc
xchg
insb
mov
xorb
inc
or
stos
imul
fsub
sub
jecxz
nop
ret
lahf
push
cmp
or
pop
test
sbb
xor
pop
xchg
xchg
rclb
jl
jg
sahf
stos
ficomps
outsb
imul
xor
and
fcmovnu
loope
jo
mov
mov
xor
std
jnp
cwtl
sarb
mov
insl
mov
cltd
push
inc
mov
and
stos
lret
insb
mov
movsb
hlt
fsts
pop
jge
push
pop
mov
xchg
sbb
mov
push
sti
push
test
sbbb
xchg
sbb
cmpsb
das
inc
icebp
push
js
jmp
popa
adc
push
jae,pn
xchg
mov
mov
push
push
in
addr16
pushf
mov
popf
inc
pop
xchg
movsl
test
test
out
or
lret
ljmp
rcr
sub
mov
cmp
dec
mov
cs
lret
mov
outsb
push
pop
jno
icebp
cmpsl
insl
stos
push
xchg
sub
outsl
jbe
loopne
pop
std
mov
or
addb
popa
jp
and
cltd
sbb
and
fstl
hlt
cmp
xor
xlat
lea
push
rcrl
jge
frstor
stos
cmpsl
jnp
push
cmpsl
lds
fs
adc
pop
sub
stos
sbbl
mov
jno
add
jo
outsb
das
sub
scas
inc
negb
sbb
mov
stc
fnstenv
mov
movsb
xlat
pop
mov
sub
sub
cmpsb
fiadds
fdivp
xchg
popf
xchg
push
movsb
or
push
fwait
arpl
stos
mov
pop
mov
pop
cli
dec
adc
shr
out
or
cmp
xor
adc
out
jg
syscall
jp
ja
or
sub
into
inc
push
outsl
push
ja
out
ja
int
xchg
aas
mov
stos
rcrl
add
cmp
arpl
shll
dec
in
push
adc
xchg
add
push
push
push
add
push
test
mov
mov
jge
sub
or
fwait
call
cwtl
lret
adc
mov
jg
xchg
adc
add
mov
orb
fsubr
pop
xchg
ss
or
pop
imul
adc
test
aad
inc
cli
outsl
iret
xchg
outsb
mov
cmpsl
mov
and
and
lret
stos
idivl
lahf
adc
dec
or
sar
lret
inc
mov
imul
jnp
test
mov
out
out
rcll
mov
lods
ja
mov
sub
pusha
fdivl
and
andl
mov
mov
xchg
mov
lds
mov
sti
leave
pop
push
aas
xor
sbb
xor
sbb
call
cmp
push
pop
xor
push
dec
sub
mov
push
mov
sbb
fwait
dec
pop
out
jno
popa
jo
xchg
push
outsb
jmp
test
jp
or
sbb
jbe
stos
jle
adc
imul
push
cmp
sahf
fwait
es
outsl
mov
xchg
fisttps
call
std
pop
insl
mov
dec
dec
push
pop
in
mov
icebp
xlat
fldz
mov
push
lds
out
xchg
insb
mov
fs
and
lods
repnz
test
aam
fnstcw
data16
mov
cld
js
pusha
fwait
loope
mov
shrb
xor
mov
repz
cmp
nop
xlat
and
cmp
mov
repnz
sub
jl
fcoms
stc
adc
lods
mov
cmp
jle
add
pop
mov
jne
enter
cltd
lea
movsb
test
in
mov
sbb
stc
or
popf
dec
test
bound
mov
mov
popf
fisubrl
adc
push
xor
jle
push
repz
pusha
or
push
mov
dec
test
xor
ds
dec
sub
xchg
ja
or
cmp
pop
jbe
scas
mov
lret
rcll
call
adc
mov
stos
dec
jns
jae
pushf
push
pop
push
hlt
call
ljmp
sub
pop
adc
jbe
dec
lea
fsub
inc
mov
shrb
js
xchg
inc
pop
cwtl
inc
mull
lds
mov
aad
push
mov
fdivrl
je
inc
xor
add
ret
mov
call
lret
ds
addl
mov
mov
xchg
subb
rorl
dec
cli
fdivrl
test
and
cmp
shll
aas
nop
cmp
inc
mov
das
fsubs
cwtl
rcrl
gs
jecxz
divl
and
mov
div
sti
jecxz
inc
faddl
or
adcb
jle
loope
jne
aam
push
dec
pop
jp
shrl
jne
jmp
dec
cmpb
leave
fwait
int
pop
dec
hlt
sub
xchg
pushf
outsl
and
lret
mov
xchg
shld
ror
xor
mov
xchg
iret
repz
jl
add
xchg
std
mov
scas
jmp
sbb
sbbb
mov
movsl
jno
dec
std
add
dec
jns
inc
push
hlt
mov
dec
xor
out
daa
cmpsl
push
xchg
lock
lret
scas
stos
jo
rcll
cmpsb
sub
xor
out
adc
call
test
bound
or
lock
cld
out
int3
leave
adc
mov
and
mov
out
les
xchg
int3
enter
int
aam
rcr
mov
clc
pop
pop
mov
jl
jae
sub
push
iret
pop
sub
mov
imulb
lds
jmp
cmc
pop
jnp
sbb
movsl
hlt
pop
repz
imul
inc
mov
js
xor
add
rcrb
and
adc
jmp
adcl
inc
cmp
fcomps
jl
pop
aam
sbb
add
fst
fisubl
jae
arpl
xlat
lret
lret
addr16
div
xor
sub
and
in
test
or
mov
lock
xor
mov
je
mov
scas
dec
jo
hlt
data16
hlt
stc
push
mov
jp
stc
test
jbe
ret
into
xchg
scas
fucomip
inc
push
or
sbbb
popa
mov
movsl
pop
mov
mov
repnz
rclb
mov
sub
sub
push
xchg
push
shl
xor
adc
cmp
stos
js
jecxz
mov
adc
push
jle
mov
xchg
insl
or
into
movsb
jmp
lahf
lds
movsl
fmul
cmp
in
js
xchg
repnz
dec
or
rorb
addr16
in
inc
out
fcoml
pop
or
call
movsl
loope
movsl
lret
pop
push
xchg
int
gs
adc
negl
push
dec
or
add
bound
testl
fcmovnu
test
cmp
jecxz
mov
inc
fildll
sbb
outsb
cmp
arpl
and
lahf
adc
jb
pushf
cs
lea
aam
mov
loopne
jmp
in
outsb
fdivrl
jne
das
shrl
jno
rcl
ss
sbb
movsl
inc
or
add
add
hlt
sahf
stos
add
pop
inc
inc
jae
das
outsb
mov
sub
cmpsl
mov
jne
dec
or
sub
rcrl
inc
fs
stos
lret
xchg
sbb
push
add
push
or
nop
sbb
fstpt
bound
aad
push
mov
sbb
jle
push
imull
or
bound
ljmp
pop
xor
xchg
roll
jl
iret
xchg
pop
jmp
test
ret
push
inc
outsl
push
jg
mov
daa
mov
je
mov
inc
adc
sti
xchg
scas
fs
cs
push
inc
inc
sub
and
cld
outsb
push
pop
xor
jmp
or
push
fnstenv
cmp
ret
and
cmpsb
add
out
scas
sbb
cwtl
cmp
iret
inc
aam
mov
add
fwait
in
das
imul
bnd
ljmp
repz
mov
movsl
xchg
mov
mov
mov
add
stos
fs
mov
adc
aam
adc
and
cmp
pop
xchg
push
cmp
shl
inc
inc
out
pop
adc
scas
xchg
dec
or
ss
mov
ret
jmp
into
lahf
pop
sub
pop
ret
mov
hlt
sub
xchg
stc
cwtl
dec
or
je
and
mov
sub
push
insb
mov
jmp
xchg
std
ret
pushf
je
push
sbb
adc
sarl
ja
rclb
jne
xor
into
xchg
jg
dec
sub
decl
icebp
aas
sbb
mov
out
cmp
in
scas
mov
dec
sbb
push
out
push
popf
loop
leave
das
pop
cmpsl
add
sbbb
adc
addr16
push
sbb
fdivrs
das
enter
xchg
in
pop
inc
pusha
jnp
inc
dec
sahf
jns
popf
push
shlb
fadd
iret
int
repz
jbe
and
push
or
mov
adc
inc
pop
popf
cmp
scas
addr16
imul
sbb
dec
pop
ja
fdiv
repz
pusha
dec
push
jg
cmp
sbb
call
aam
mov
sub
mov
mov
mov
mov
out
and
ret
test
dec
mov
inc
repnz
mov
rclb
mov
pop
or
test
jae
mov
sub
pop
lea
mov
mov
popa
jmp
shl
adcb
add
shlb
jno
xchg
cmpsl
rcll
mov
jle
outsb
pop
pusha
dec
cs
out
cmp
mov
or
mov
pop
xchg
inc
sbb
std
cmp
call
push
jle
movsb
push
and
dec
cwtl
cmp
mov
shlb
loope
sbb
fisubrs
jl
xchg
jae
inc
orb
jae
es
outsb
bnd
mov
push
ret
pop
sub
and
in
aad
jb
xor
icebp
leave
stos
clc
out
repz
inc
pushf
pop
jecxz
push
movsl
aaa
xor
xchg
repnz
sbb
cli
and
xchg
cmp
inc
mov
mov
pop
inc
test
xor
gs
shrl
jl
outsb
add
in
gs
pop
pop
fwait
jno
add
adc
inc
push
movsl
cmp
ss
dec
jo
dec
test
sti
mov
popa
movsb
dec
pop
out
and
aad
xchg
test
xor
xchg
pusha
out
inc
add
cmpsb
ljmp
mov
jae
ss
mov
ret
fildll
jecxz
xor
or
jno
xchg
push
subb
mov
sbb
inc
add
dec
or
jnp
and
repz
inc
aam
mov
add
jl
popa
jg
mov
and
dec
jg
xchg
xchg
fdivs
stc
cmp
mov
inc
insb
jp
adc
mov
hlt
ret
jge
loop
sbb
jbe
or
jne
gs
pop
add
pusha
mov
aaa
loop
xlat
cmc
and
push
subl
sub
aaa
lea
pop
insl
xchg
cmp
aad
sub
or
adc
adc
mov
clc
stos
mov
popa
lock
fwait
out
test
mov
and
clc
inc
jae
mov
sbb
push
adc
push
ficoms
fsin
into
add
sbb
into
cmpsl
movsl
add
call
lods
cmp
shlb
inc
iret
add
push
insb
rcll
mov
je
ficoml
xor
or
sahf
pushf
scas
xchg
test
cmc
jg
jmp
stos
icebp
mov
in
inc
add
and
cmp
in
sbb
lahf
test
outsb
sub
jb
jecxz
aad
fisttpll
jae
mov
sub
cmpsb
xlat
push
dec
mov
and
cmp
add
insb
adc
add
adc
jno
pop
add
enter
xor
xchg
gs
in
hlt
pop
cmc
jle
adc
fnsave
dec
scas
adc
jp
push
xchg
fsubr
div
jl
and
push
out
dec
ss
mov
rcll
dec
mov
jecxz
push
mov
xor
sub
adc
jmp
fbld
push
into
mov
xchg
mov
pop
jno
arpl
xchg
ficomps
or
sub
pop
inc
imul
or
inc
loop
push
nop
subb
xor
pop
xchg
and
lcall
inc
cmc
lret
loop
int3
in
popa
jo
repz
aam
fstpl
push
bound
mov
lcall
adc
mov
xchg
cmpl
push
hlt
aad
lock
shll
insb
mov
pop
and
loopne
imul
dec
jecxz
xor
push
loope
inc
pusha
mov
std
adc
arpl
jp
adc
xchg
gs
stc
cld
int
add
xlat
adc
add
push
cmpsl
dec
xchg
xchg
cs
clc
cmp
rcrb
imul
loopne
lea
lahf
imul
xchg
mov
pop
in
cmp
jb
pop
call
ret
mov
add
ja
mov
jecxz
inc
std
popa
inc
leave
das
sbb
jg
push
lcall
cmpsb
mul
xchg
jo
iret
leave
cld
jb
les
lret
aam
sbb
andl
pop
push
push
insb
iret
or
mov
sub
add
stos
jbe
lcall
icebp
or
lds
hlt
in
or
dec
hlt
rcl
push
lcall
stos
test
dec
shrl
cmp
shlb
leave
notb
jl
xchg
push
xor
addb
xchg
subps
xor
movsl
fdivl
fwait
lret
mov
cmc
ret
sub
jne
sub
into
and
mov
insb
ret
xlat
xchg
jmp
cmpsb
sub
in
fistpl
mov
js
adc
adc
scas
lcall
fisubrl
movsl
cmp
dec
mov
pusha
xchg
int
push
mov
mov
ljmp
stos
and
outsb
or
xor
xor
adc
mov
je
dec
aas
or
mov
sbb
pop
fucomi
inc
les
dec
insb
jg
cmp
and
call
jle
jge
mov
popf
mov
mov
icebp
adc
dec
sbb
jmp
mov
call
in
mov
nop
insb
pushf
push
test
or
pop
jmp
add
shrl
pop
xchg
shll
mov
pop
idivb
add
andl
cmp
xor
cmpb
dec
lock
out
ret
inc
or
pop
pop
sarb
pusha
in
pop
mov
stc
xchg
incb
lock
loopne
movsl
pop
push
mov
or
push
shlb
lods
cmc
mov
test
sub
ret
jmp
js
mov
sar
mov
in
movsl
sub
rcrl
xchg
xchg
jmp
stos
mov
xchg
cmc
lea
xor
les
rcrl
out
fstpl
mov
add
in
xor
popl
popf
testb
mov
push
fiaddl
lock
pushf
push
adc
ljmp
inc
xchg
mov
into
outsl
je
popa
xor
xor
xchg
mov
cmp
add
or
orl
mov
ds
mov
push
fmuls
loopne
ret
test
pop
into
imul
loopne
or
fildll
cmp
pop
dec
xor
ljmp
insb
sahf
push
hlt
js
aas
sbb
nop
push
sub
push
icebp
iret
fiaddl
jg
cwtl
repz
cmp
fwait
inc
rcl
jmp
mov
adc
mov
loop
dec
mov
fisubl
xchg
fstl
shlb
test
popa
xor
and
std
mov
sbb
fs
in
lret
push
pop
mov
pop
lock
and
loope
adc
pop
mov
or
push
sbb
cmpsb
cmp
divb
sub
xchg
cmp
test
sbb
cmp
jmp
icebp
mov
enter
pop
inc
cmp
sbb
iret
cmpsb
fsubrs
cltd
xchg
cmp
rcll
pop
fldcw
int3
sbb
outsb
push
mov
lret
cmp
mull
and
adc
xchg
xor
push
pushf
imul
test
xchg
cmp
push
push
gs
jne
inc
std
frstor
mov
test
mov
xchg
fs
xchg
addr16
icebp
mov
mov
gs
sbb
call
mov
ret
mov
jecxz
cmc
lcall
sbbb
mov
fidivrl
ja
popf
cli
xchg
pop
dec
xor
jne
fwait
inc
xchg
pop
repnz
scas
addr16
xchg
movsl
inc
dec
inc
and
cld
add
and
lcall
or
mov
out
inc
rolb
push
aaa
xor
lods
ss
insl
jae
pop
ss
aam
call
mov
sbb
orb
js
insb
adc
mov
inc
or
sbb
pop
mov
xchg
dec
sub
imul
scas
test
mov
int3
push
shl
mov
dec
out
mov
lea
roll
jnp
pushl
out
jb
imul
xchg
add
out
subb
repnz
rcrl
push
mov
xchg
stos
out
or
add
cmp
aam
xchg
inc
mov
in
and
pop
mov
fdivp
pop
sub
addb
stos
ljmp
cltd
xchg
sub
push
loope
cmp
lahf
out
cmc
dec
dec
dec
mov
in
mov
and
iret
mov
cmp
push
enter
mov
sarl
js
stos
insl
adc
add
or
mov
inc
xor
push
shll
lret
cmp
mov
pop
popf
push
fists
outsl
rcll
xor
std
cltd
pop
inc
lds
cmpsl
into
inc
push
lods
hlt
js
add
scas
pop
add
pop
inc
xchg
mov
lcall
jb
xor
insl
jle
loopne
and
xchg
or
and
cmp
jns
pop
imul
in
cmp
dec
or
mov
xchg
xchg
call
cwtl
test
xor
xchg
mov
dec
call
outsl
adcl
lods
mov
repnz
lea
lcall
inc
xor
in
or
add
fisubrl
ljmp
mov
nop
xlat
lahf
shld
mov
xor
or
repz
aas
adc
push
lds
fists
adc
imul
adc
mov
sub
mov
add
ja
ljmp
mov
push
sub
fcmovnu
pop
or
pushf
push
cli
adc
bound
cmp
xchg
call
lahf
fsub
xchg
rorb
arpl
xchg
add
xchg
push
pop
fimuls
mov
sub
adc
movsb
mov
enter
out
movsb
sbb
mov
inc
push
inc
pop
inc
subb
add
lret
scas
adc
sub
pop
add
bound
in
jns
ds
push
fmul
sbb
imul
inc
push
xchg
adc
pop
xchg
pop
addr16
dec
push
sbb
dec
sub
cmp
das
sub
mov
and
ljmp
fiadds
mov
jmp
imul
mov
jno
in
push
pop
fdivrl
jecxz
sbb
sub
and
idivl
arpl
push
push
xchg
scas
inc
add
add
iret
mov
lods
icebp
imul
f2xm1
and
push
mov
inc
lods
and
mov
inc
testl
outsl
xchg
jne
test
scas
dec
movsl
rorl
mov
dec
ljmp
cwtd
mov
hlt
jl
mov
iret
fwait
mov
mov
jmp
and
push
repz
push
sahf
sbb
inc
std
sbb
xor
mov
push
cmp
loopne
and
repz
or
fildll
mov
lea
ds
ja
inc
xchg
into
scas
out
inc
testb
mov
sub
pop
push
dec
sbb
pop
call
ret
sarl
inc
clc
loope
cmpsl
mov
sub
ret
stos
adc
icebp
adc
sub
xchg
adc
fnstsw
int3
int3
mov
cmp
dec
sub
mov
repnz
push
pop
jno
push
cld
and
mov
in
stos
cld
jns
xor
jns
mov
pop
ja
add
pop
lock
js
cmp
pop
and
lods
sbb
pop
xor
daa
or
mov
addl
jge
xchg
insb
sbb
ja
adcl
xchg
push
aaa
mov
mov
in
fcomp
push
mov
test
stos
cmpsl
fwait
push
cmp
push
jae
push
add
stos
push
jb
loope
leave
insl
pop
les
lret
out
inc
and
cld
dec
jae
mov
push
mov
mov
or
lea
sbb
cmc
pop
mov
daa
inc
sub
in
adc
in
jmp
add
adc
pop
jle
mov
bound
movsl
movsb
mov
jb
lret
lods
or
aad
es
fistl
std
mov
mov
lods
mov
adc
dec
sbb
xor
mov
jmp
and
xchg
xchg
pop
pop
loope
fadds
xlat
test
dec
pusha
imul
mov
mov
out
mov
add
sti
daa
cwtl
pop
jmp
mov
clc
jg
sbb
xchg
hlt
and
rcrb
sahf
insb
cmp
movsl
pop
sbb
addr16
push
inc
or
sbb
enter
outsl
insb
jp
imul
incb
pushf
js
pop
xchg
std
pusha
adc
xchg
jbe
push
inc
shlb
repnz
or
sbb
pop
push
sbb
arpl
inc
inc
cmp
loop
sbb
ret
inc
shrb
pop
or
xor
push
jno
inc
inc
js
xlat
and
push
loopne
nop
push
or
mov
add
out
xchg
leave
test
fsubrp
mov
pop
loope
ret
mov
std
xor
out
fstpt
data16
aaa
outsl
push
mov
and
daa
inc
dec
inc
insl
movsb
push
or
cwtl
add
jl
aas
iret
xchg
adc
push
mov
pop
mov
das
or
jp
mull
in
mov
je
inc
movsl
ret
les
dec
stos
mov
out
mov
and
cmpsb
fsubl
loop
roll
cmp
inc
and
sub
cmp
push
push
ljmp
push
inc
add
gs
or
sbb
paddusb
shll
ja
clc
daa
xchg
arpl
cmp
ljmp
shl
adc
xchg
push
cmpsb
leave
loop
dec
dec
outsl
mov
leave
lahf
data16
jecxz
pop
mov
jne
imul
inc
mov
xor
leave
ljmp
shll
out
ja
adc
fmull
and
in
sbb
rorl
and
ret
loope
pop
lret
hlt
cmp
adc
fisubrs
or
ds
adc
test
mov
pop
mov
scas
cmp
lret
es
sub
data16
mov
xchg
push
orb
test
repnz
jae,pn
insl
cmc
sbb
mov
pop
push
fisubl
inc
pop
call
adc
lds
cmp
add
cmp
mov
add
mov
and
mov
test
cs
inc
cli
and
jne
mov
mov
jno
cmpb
jge
sbb
push
inc
loope
ja
xchg
adc
lods
in
xchg
std
out
sub
hlt
lock
cmp
sbb
push
je
dec
je
test
sub
sub
pop
mov
push
and
push
jno
hlt
ret
lock
call
xor
std
int
stos
insl
mov
stos
mov
mov
sbb
or
mov
push
add
jmp
paddq
ret
pop
mov
fisttpl
push
add
mov
and
lahf
add
push
scas
push
sbb
ja
icebp
inc
xor
dec
enter
mov
imul
push
fildll
push
lods
stos
xor
push
jbe
pop
sub
loope
pop
sub
mov
dec
scas
test
test
inc
movsb
orl
mov
test
fdivs
inc
lea
ret
int3
out
push
bound
push
pop
cmp
lock
dec
out
mov
nop
icebp
pop
sub
cli
xchg
or
and
mov
lods
stos
or
inc
mov
ret
xchg
or
fstpt
push
pop
dec
insb
data16
testl
adc
jae
ret
add
insl
push
sbb
ja
add
adc
sbb
popa
push
and
stos
sub
mov
test
xchg
sarb
sub
das
cld
pop
out
add
jmp
mov
fidivl
out
jg
inc
in
add
pop
mov
xchg
dec
pop
das
leave
in
jle
mov
dec
popa
into
lds
xchg
cmpsb
jno
shlb
iret
and
mov
sahf
in
icebp
jmp
jmp
ljmp
sbbb
jnp
xor
and
pop
pop
into
jle
push
addr16
repz
cld
aad
jb
add
out
xchg
sbb
cmp
test
popf
and
fiadds
repz
or
iret
and
repz
xchg
jnp
lods
imul
mov
jbe
mov
das
scas
add
stc
stos
jg
and
rolb
and
xor
fs
je
movsb
scas
mov
push
sub
add
sbb
or
into
sarl
xor
and
movsl
ret
pop
out
sarb
ja
jo
and
fbstp
insb
loop
popa
xor
cmp
jecxz
fimuls
ss
lret
sbb
lret
stc
adc
sbb
popf
sbb
cwtl
jno
mov
mov
mov
jne
rclb
lods
enter
jmp
repnz
xlat
mov
adc
out
adc
adc
push
dec
repnz
lea
cmp
sub
lds
fwait
push
loopne
loop
push
imul
mov
cli
pusha
pop
lret
sub
das
fmull
jb
fsubl
push
mov
rclb
jns
ss
mov
mov
sbbb
ffreep
jnp
loope
mov
cwtl
inc
std
bound
mov
push
cmpb
ss
xor
sbb
sub
push
pop
fdivrs
ljmp
add
inc
xor
and
push
imul
add
sub
jl
cmpsb
jge
fildll
inc
mov
out
xor
ljmp
and
jge
pop
dec
xchg
pop
adc
js
xor
aas
sub
sbb
mov
daa
xor
and
xchg
jbe
sub
xchg
pop
inc
mov
sub
test
inc
or
mov
lock
mov
cmp
push
scas
arpl
inc
jmp
loop
jge
mov
frstor
xchg
sub
int
inc
jae
sub
rol
cmp
add
fisubs
inc
negb
lds
pop
and
repnz
push
lods
jmp
mov
push
out
in
dec
or
or
sbb
mov
pop
adc
or
lcall
aam
int3
ds
jge
in
xchg
sbb
imul
or
add
jl
xchg
lahf
xchg
cmpsb
push
dec
mov
xchg
adc
xor
jns
sbbb
clc
cmp
outsl
cli
add
sub
pop
dec
dec
xchg
pushl
fsubr
lods
popf
fwait
or
mov
mov
test
jp
cmp
lea
adc
dec
sbb
int3
cmp
pop
arpl
jne
cmp
loope
inc
jg
add
xorb
pop
addl
dec
divl
call
push
push
out
xchg
inc
push
int3
scas
sub
mov
fsts
xchg
shl
lods
into
lea
cmpsb
xchg
adc
mov
push
push
shl
push
sub
inc
das
and
test
sub
pop
pushf
and
daa
shlb
movsl
jae
shlb
and
cmp
dec
mov
mov
lcall
inc
cmp
mov
xchg
das
push
mov
xchg
mov
or
jbe
imul
jmp
adc
cwtl
lock
mov
xchg
out
outsl
enter
mov
inc
jp
clc
call
into
iret
push
arpl
fstpl
push
js
inc
inc
rolb
mov
shl
fldl
jp
adc
outsl
ficoml
stc
pop
mov
cmp
je
cmpsl
es
sahf
data16
jle
hlt
mov
enter
stos
js
mov
insb
and
loopne
rcrb
cs
pop
mov
add
and
mov
xchg
dec
movsb
mov
push
jne
dec
mov
or
adc
test
fbld
add
lock
push
aaa
mov
out
jae
cld
sub
mov
push
sbb
notb
mov
mov
clc
pop
pop
mov
dec
push
popf
scas
testb
jp
mov
sahf
ja
sbb
adc
aaa
ss
das
sub
pushf
mov
or
add
cwtd
xchg
xchg
stos
aas
int
inc
loop
adc
fldt
jge
adc
mov
insb
jns
icebp
ja
mov
dec
or
rolb
movsb
addr16
jmp
test
dec
mov
jl
cmp
rcr
mov
cmp
sbb
sub
das
pop
popf
and
bound
aad
pop
repz
jb
or
imul
in
out
mov
and
fwait
popw
xchg
fimuls
push
mov
xchg
cmc
xchg
xor
fdivrl
mov
sahf
stc
mov
daa
pop
mov
add
xor
shlb
push
pop
add
or
or
fcomps
cmp
pop
movsl
sub
movsb
inc
and
daa
or
sbb
mov
pop
fldt
loopne
mov
lea
pusha
inc
outsb
mov
cmpsb
jmp
cmp
and
aaa
xchg
cmpsl
sbb
pop
mov
xchg
jbe
cmp
aad
fstps
rcrl
xchg
sbbl
mov
mov
cmp
xchg
dec
adc
or
pop
iret
subl
push
fcoms
stc
outsb
shll
in
and
addr16
imul
roll
xor
and
mov
xchg
mov
and
push
into
pop
test
add
dec
pop
mov
adc
inc
mov
loop
xchg
cmp
pop
aas
sbb
lahf
out
cmc
push
setl
icebp
aaa
fmuls
jbe
xor
stc
xchg
xor
cmpl
xchg
xor
pop
adc
xchg
cmp
scas
add
and
bound
stos
push
xchg
push
and
xchg
inc
int3
lret
les
imul
outsl
pop
mov
ret
jg
icebp
jecxz
xor
push
les
subl
cld
subl
lods
mov
add
fisttpll
inc
jb
clc
mov
add
xor
aam
ds
jp
jno
mov
test
insl
jl
cmp
loop
aas
ficoms
push
rolb
xchg
fistpl
pop
and
jnp
bound
je
xchg
icebp
dec
in
inc
out
shlb
ret
call
adcl
xor
mov
xor
sub
cmp
mov
ljmp
mov
and
sub
dec
dec
push
popf
mov
in
inc
fidivrl
les
aaa
xor
sbb
insb
scas
in
fsub
adc
fdivrs
xchg
push
out
divb
dec
subb
xor
and
jle
call
mov
mov
adc
lret
rorl
cmp
jbe
enter
loopne
addr16
add
aad
fsub
xor
insb
icebp
mov
lods
pop
mov
mov
push
adc
pop
pushf
clc
shr
lds
out
dec
ret
cmp
ror
dec
repnz
sub
loope
add
gs
pop
mov
lds
test
pop
js
xchg
js,pt
in
sub
js
ficomps
sti
test
push
xlat
pop
fnstenv
jecxz
cs
mul
btr
xchg
into
and
jge
daa
and
out
imul
inc
cs
mov
jle
lret
int
insb
inc
sbbb
loope
test
les
hlt
xchg
testl
adc
cmp
cltd
and
pusha
aas
fisttpll
lahf
dec
push
jl
stos
idivl
into
cmp
dec
cmpsb
enter
outsl
outsl
and
cltd
test
pop
inc
or
sub
aam
loopne
call
mov
sub
inc
andl
lods
rcr
push
cmp
jg
insl
or
jo
lea
sbb
or
mov
gs
movl
lret
pushf
sahf
int3
imul
jbe
je
mov
iret
push
jne
inc
xchg
loop
nop
out
inc
and
pop
mov
sbb
or
push
inc
xor
insb
push
cmpl
push
movsl
and
stos
shl
es
aad
iret
cmp
lods
mov
jg
loopne
jp
xchg
xchg
jb
and
ljmp
hlt
jl
jmp
imul
test
mov
and
fcomps
xchg
xor
je
ja
jmp
stc
sbb
push
sti
aas
push
xor
movsl
loop
mov
inc
inc
xor
pop
imul
or
jecxz
outsb
adc
mov
dec
fistpll
or
pop
fwait
mov
jle
outsl
adc
mov
stos
jmp
repnz
leave
jmp
imul
xor
sbb
pop
xchg
negb
pop
jge
pop
sub
cld
ss
jnp
ja
add
pop
lcall
dec
xchg
js
pop
adcb
fldcw
inc
stos
aam
mov
sar
or
out
rolb
and
cmp
inc
in
dec
mov
cmp
in
cmp
sti
clc
insl
cmpsb
fldt
es
adc
and
lods
outsl
jbe
lds
mov
lods
insl
xchg
inc
xor
test
push
push
stos
xlat
cmpsl
sbb
cmp
adc
imul
cli
mov
negb
dec
lea
mov
ss
push
lds
pop
push
fsubrs
cs
mov
sub
inc
idivl
and
out
or
daa
xchg
pop
lret
fdivrl
popa
add
lods
sub
pop
lock
mov
mov
push
fisttpl
movsl
push
lea
dec
in
mov
cmc
add
or
rcr
or
movsb
xchg
iret
jnp
lahf
out
dec
lds
lock
gs
inc
xchg
pop
test
cmp
outsl
pop
adc
mov
adc
jae
pop
leave
push
arpl
cmp
adc
mov
das
js
sub
dec
inc
mov
dec
mov
test
ret
push
xlat
sub
emms
sub
mov
roll
mov
cmp
cs
mov
sub
mov
add
mov
jge
das
mov
push
or
mov
inc
mov
and
sub
scas
inc
je
dec
arpl
push
test
pop
cmc
js
push
xchg
rol
cmp
popf
movsl
xor
in
xchg
adc
jo
rcrl
aaa
mov
rcrb
in
mov
mov
sub
push
mov
jb
or
add
popa
pop
xor
loope
sbb
and
rdmsr
xor
cli
adc
pop
es
or
stos
outsb
and
xchg
daa
outsb
or
or
imul
xor
cwtl
es
xchg
add
pusha
mov
in
or
ret
xchg
push
sub
adc
data16
pop
push
or
pop
movsl
mov
cmpsb
ret
or
adc
mov
adc
ss
jae
xchg
adcb
cmp
xor
test
out
imul
mov
stos
test
loop
rcll
add
or
int3
push
movsb
ret
push
pop
fsub
lods
or
imul
mov
lods
dec
push
loop
sub
gs
dec
mov
outsl
xchg
popf
mov
cmp
pop
call
aad
aas
mov
cmpsl
js
dec
in
loop
cmc
jmp
adc
sub
add
cmp
cmpsl
sti
test
add
sbb
push
lods
pusha
insb
xchg
jae
mov
arpl
iret
adc
push
xchg
mov
adc
shrb
ds
in
ja
sbb
int
rclb
pusha
mov
into
repz
popa
mov
push
stc
jmp
push
daa
in
adc
pop
inc
pop
mov
cmp
test
cmpsb
loope
pop
pop
sbb
xchg
bound
shr
pusha
call
fidivrl
aam
xchg
add
or
leave
adc
in
mov
js
lds
fistpll
mov
lock
add
je
aas
pop
mov
imul
mov
out
jecxz
rcrb
fs
mov
push
mov
cmp
in
lods
inc
push
fisttps
xchg
mov
push
nop
inc
mov
or
pop
push
sbb
addr16
mov
pop
aas
push
adc
sub
pop
test
inc
stos
and
xlat
jae
adc
jl
or
fcmovne
xor
test
push
jg
jle
or
push
fstpt
mov
lds
lret
sub
outsb
xchg
xchg
mov
push
or
jg
adc
xchg
test
lock
dec
ljmp
sub
cmp
xchg
push
stos
loope
mov
mov
imulb
loopne
rclb
sbb
inc
add
fstp
mov
push
fnstenv
push
jns
xor
ds
hlt
xor
xor
or
imul
push
push
xchg
cmp
cmp
jae
adcl
push
jbe
jl
xchg
icebp
or
xchg
xchg
aam
dec
imul
mov
pop
mov
enter
inc
rcll
xor
or
jle
mov
xchg
mov
jnp
dec
imull
pop
lock
mov
or
mov
xor
mov
leave
push
xchg
loop
sbb
mov
xchg
inc
mov
dec
addr16
mov
dec
loopne
daa
stos
adc
cmp
sub
pop
push
xor
dec
fwait
sbbb
inc
push
mov
js
cmp
adc
mov
sar
clc
xor
jb
dec
mov
add
ret
pop
repz
or
filds
mov
mov
sub
clc
xor
fsts
clc
pop
lahf
std
jp
inc
mov
xchg
xor
int3
pop
mov
jl
mov
xchg
and
sahf
xchg
out
enter
psubusb
daa
pop
xlat
sbb
jmp
push
pop
call
push
mov
insl
imull
out
outsl
xchg
sub
add
push
adc
fdivrp
pop
inc
pop
mov
cli
sbb
adcb
mov
lahf
movsb
cs
in
ja
fldenv
insl
mov
sub
adc
call
xor
stos
inc
fdiv
push
mov
mov
js
sti
sbb
mov
out
rcr
aas
in
sbb
adc
idivl
aad
lock
inc
stc
cmp
outsb
xchg
and
push
mov
inc
out
xor
pop
cltd
jecxz
lea
mov
dec
and
xchg
adc
jl
xchg
jnp
sub
aam
xchg
add
adc
je
cmpsb
popf
xchg
cmp
test
jle
add
jnp
or
push
mov
xchg
out
pop
mov
mov
lcall
rol
and
je
push
mov
fisttps
adc
icebp
push
in
ficoml
decl
pop
test
test
in
push
mov
ss
mov
fists
mov
add
sub
cmp
cwtl
push
sub
adc
pusha
and
mov
jl
test
jg
xchg
dec
cmp
pushl
aad
xor
outsb
das
test
mov
lret
push
je
jecxz
mov
es
dec
mov
push
push
inc
mov
lods
jno
push
sub
pusha
push
loope
jp
mov
jo
ffreep
and
jae
inc
push
mov
lret
pop
sub
dec
jne
or
lret
pop
dec
jmp
insb
or
sub
fmulp
int
aas
jmp
pop
orb
cmpsl
add
jle
xor
fldl
sub
and
push
jle
xor
out
xor
mov
std
add
dec
ljmp
ljmp
mov
or
popf
shlb
or
cmp
mov
movsb
mov
sbb
xor
add
dec
cli
pop
mov
dec
rol
add
dec
std
loope
fwait
aad
repnz
fcomi
lcall
std
xchg
out
mov
dec
or
aaa
fdivrs
mov
vpsubq
rorb
nop
jge
pusha
xchg
lcall
movsb
es
xchg
mov
mulb
stos
mov
stos
xchg
aaa
and
enter
cmp
in
clc
movsl
lret
and
enter
fisttps
jmp
fs
mov
sbb
into
mov
push
rolb
and
sbb
sbb
repnz
mov
pop
out
cmpsb
cmpsl
jmp
lods
mov
icebp
push
loop
mov
xchg
int3
sbb
in
popa
mov
adc
call
inc
popa
xchg
test
in
mov
stc
push
pop
xchg
loope
mov
push
test
mov
sbb
dec
divl
shll
hlt
jmp
or
cmpsl
and
dec
bound
ja
cmpsl
repnz
cmp
pop
push
divl
sarb
ret
out
xor
test
jle
jno
and
xchg
lahf
xchg
inc
mov
and
pop
inc
mov
mov
sbb
sbbl
or
andl
pop
icebp
cmp
pop
push
or
push
xchg
and
mov
jecxz
sub
int
movsl
gs
leave
xchg
push
cmp
movsl
mov
sub
or
pop
or
push
mov
dec
sbb
xchg
xchg
xchg
mov
vmovq
gs
lahf
pop
cmp
push
pop
icebp
ds
lods
mov
nopl
push
js
cli
aad
pop
push
fmulp
sbb
scas
fdivrs
mov
outsb
fisttps
test
inc
mov
push
add
adc
lods
das
mov
int
in
push
sbb
add
je
pop
jnp
fldlg2
cltd
xchg
shrl
repz
stos
gs
cli
xchg
adc
scas
push
aas
enter
test
cmpsb
aas
push
sbb
jnp
enter
lahf
pop
rcr
mov
push
icebp
push
or
cmp
movsb
fcompl
jge
xor
jle
je
insl
sub
push
cmp
jmp
fimull
jp
add
mov
add
mov
in
cmpsl
add
add
es
or
jmp
cmp
cmp
test
aam
fdivs
fdivrs
jbe
mov
adc
push
out
out
inc
js
cmpb
sahf
arpl
mov
stos
in
xchg
movsb
lods
ret
add
inc
push
ror
mov
enter
mov
mov
xor
xchg
inc
loop
jb
or
mov
cmp
pusha
pusha
inc
jno
inc
mov
fldl
ror
push
std
mov
sub
rcrl
jo
cmp
fadds
cmp
jbe
pop
icebp
mov
sahf
cmp
pop
sub
cmpl
push
push
sbb
cmp
mov
int3
jg
jecxz
repz
ffreep
in
jb
cmp
sub
mov
xchg
add
lock
stos
mov
push
and
jae
xchg
imul
mov
mov
sub
sbb
xlat
iret
popa
adc
lret
lahf
ret
push
punpckhbw
daa
pop
fsubrl
btc
fstps
jnp
jp
lahf
dec
loope
lea
jp
xor
mov
inc
lret
std
mov
mov
xorb
cltd
jae
mov
mov
mov
cltd
into
lods
lods
mov
sub
xchg
cmp
and
or
sub
icebp
mov
cwtl
cli
sbb
sub
push
lret
fldl
xchg
pop
fmuls
xchg
repz
clc
or
jmp
dec
sbb
popa
cmpsl
cmp
enter
arpl
jb
popf
push
push
sub
push
iret
out
pop
lods
cltd
lret
dec
mov
push
iret
ja
jg
mov
mov
sahf
sub
test
and
jno
mov
xor
cmp
inc
adc
xchg
sub
mov
jl
mov
imul
loop
rorl
pop
or
push
dec
ret
nop
xchg
sub
xchg
mov
repnz
ljmp
push
stos
stos
mov
sub
add
arpl
testl
xchg
mov
call
js
test
frstor
lcall
rclb
cmpsb
inc
sub
fisttpl
and
adc
cmp
popf
daa
mov
jge
pop
mov
dec
jle
xchg
loop
enter
sbb
mov
test
stos
test
lea
adc
mov
daa
sbb
popf
fisttpl
mov
mov
bts
lret
imul
test
jne
or
lds
mov
andl
push
insl
dec
imul
pop
movsb
ds
and
adc
and
add
pop
mov
lret
loopne
xchg
into
arpl
mov
xor
add
test
movsl
mov
sbb
or
outsl
xorb
mov
fisubl
xchg
mov
jne
jns
cmp
mov
pop
lret
lods
xor
or
inc
or
jbe
push
inc
imul
add
push
xor
dec
pop
dec
xlat
nop
jno
cvtpi2ps
pop
xchg
or
xor
arpl
cmovp
mov
push
imul
and
adc
cmpsl
out
cld
sub
mov
push
cltd
ljmp
daa
mov
test
cmc
jl
sbb
rcrb
lods
out
pop
test
pop
ja
push
xor
pop
pop
dec
fwait
popa
hlt
sbb
or
outsb
or
and
pop
fdivrs
shl
mov
sbb
roll
aad
jecxz
cld
shr
icebp
inc
mov
icebp
movsb
mov
imul
ja
add
cmc
mov
ret
sub
std
add
mov
xchg
rorl
mov
jo
adc
dec
xor
std
rcll
lods
les
xchg
fistl
pop
xchg
in
cmp
inc
call
std
jge
aad
or
pop
popf
pop
clc
mov
push
xchg
adcl
stc
or
fldt
rcrb
inc
js
push
fldl
sbb
std
mov
pop
fstl
int
dec
iret
fbstp
ret
insb
in
add
notb
outsl
xchg
lret
cmp
fbld
pop
sbb
pop
leave
dec
lret
and
xchg
dec
sbb
cmpsb
or
or
jl
cmc
adc
jne
lret
mov
test
or
or
fwait
jmp
stc
stc
mov
mov
lock
dec
mov
pop
mov
xchg
shrl
adc
rorb
or
into
leave
test
sub
cltd
xchg
add
enter
shll
call
dec
adc
cmpsl
and
push
xor
inc
arpl
cmc
icebp
jge
ficoml
cld
sub
jns
pop
enter
jnp
xor
imul
data16
repz
cld
test
adc
mov
in
rclb
or
pop
in
and
cmp
pop
fwait
mov
imull
nop
sub
sbb
xchg
push
imul
or
popf
call
dec
loop
out
push
dec
jge
push
and
mov
stc
dec
fcoml
das
mov
adc
aam
cmp
sahf
out
stos
mov
xor
fs
cmpsl
rcll
nop
not
xor
sub
cmp
inc
sub
js
xchg
iret
call
pop
lods
pop
mov
jge
imul
hlt
inc
hlt
pushf
fucom
dec
outsb
inc
xchg
cs
data16
mov
dec
lods
dec
in
sbb
negl
pop
iret
lahf
pop
psrld
push
lret
push
xor
dec
mov
sub
sub
cmp
pop
mov
mov
dec
xchg
lea
das
sbb
out
lahf
fcompl
pop
sbb
xor
pushf
mov
hlt
stos
xor
sahf
add
inc
xchg
sbb
xchg
xor
dec
popf
in
iret
jnp
scas
push
test
mov
dec
add
pushf
gs
mov
shlb
outsb
hlt
cmp
add
je
jbe
das
fistpl
arpl
jne
pop
loop
add
sub
and
iret
adc
mov
pop
clc
imulb
sahf
push
ror
push
rorb
adc
clc
inc
xor
imul
or
dec
ja
push
pop
dec
iret
fwait
sub
push
pop
dec
iret
mov
mov
mov
inc
push
inc
out
icebp
loope
mov
sub
aam
xlat
sub
jb
jnp
mov
into
jb
add
inc
push
mov
in
daa
hlt
cmp
fcoml
daa
imul
jmp
or
rcr
mov
adc
mov
leave
sbb
out
cli
nop
inc
movsl
pop
inc
mov
inc
xor
int
cmpsl
cmp
sahf
aas
bswap
rorl
call
cmpsl
popf
popf
cmp
rcrl
scas
push
outsb
movsb
and
mov
fstl
out
push
pop
cmp
mov
xlat
cmp
insb
mov
in
fiadds
adc
shrl
mov
pop
icebp
xor
aas
pop
adc
sbb
or
cmp
loop
dec
pushf
push
lret
movsl
sub
push
mov
lcall
leave
jge
cli
adc
mov
xchg
adc
or
sbb
mov
lret
mov
mov
mov
lds
jge
mov
and
jno
add
lods
stos
push
rcr
popf
jg
popf
loope
sub
xchg
xchg
or
stos
inc
data16
xchg
push
enter
movsl
sub
sbb
cmp
js
mov
push
mull
movsl
pop
bound
cld
nop
sub
int
cmpb
in
loope
insb
mov
sub
fsubp
cli
or
and
xchg
adc
repz
mov
out
or
mov
pop
imul
sub
int3
popf
mov
xchg
xor
mov
aas
inc
outsl
sub
enter
inc
js
cmpsb
pop
mov
cmp
dec
xor
fwait
mov
jg
add
pop
add
pop
push
leave
repz
addb
adc
dec
idivl
hlt
cmp
fcmovne
mov
dec
jl
or
mov
imul
mov
cmp
int
sub
sbb
lcall
icebp
lcall
insb
sub
loope
es
mov
or
inc
das
push
cmp
and
stos
lea
mov
cld
push
mov
fldenv
loop
in
sub
in
mov
adc
loope
pop
cltd
popa
cmp
ss
jne
dec
std
addb
adc
popa
popa
mov
addr16
push
cmp
xor
adc
iret
fxch
fiaddl
push
xor
stos
and
pusha
aas
loopne
pop
fstpt
xor
stc
adc
dec
cmp
mov
std
out
imul
fsub
fsts
inc
sub
mov
lahf
or
mov
mov
mov
lods
int3
arpl
adc
push
sbb
adc
mov
mov
and
add
pusha
inc
adc
pop
jge
adc
sbb
orl
mov
and
lods
dec
xor
adc
popf
push
cli
push
inc
and
enter
adc
mov
mov
push
cmpb
fwait
dec
and
add
mov
and
ret
jmp
sbb
pop
sub
aad
sub
push
inc
cmpsl
adc
dec
lock
adc
jbe
sbb
jae
jno
push
mov
jg
push
popf
aaa
inc
sub
in
mov
sarb
sti
jbe
dec
xchg
es
xchg
stos
rol
aam
xchg
loop
rorl
fdiv
jp
cmp
je
jnp
dec
xor
addb
sub
push
pop
fistpll
stc
jnp
fisubrs
testb
aad
enter
jg
leave
mov
ficomps
xor
mov
movzbl
jge
and
popf
mov
sbb
outsb
dec
dec
or
add
add
movsl
adc
xorb
push
sbb
inc
pop
push
ss
adc
mov
pop
xor
movsb
mov
sahf
adc
xor
cmc
inc
xor
push
push
sbbl
jae
rorb
scas
js
aad
jecxz
ja
pop
sub
add
push
or
inc
add
mov
jo
add
sbb
nop
mov
stos
cmp
jg
mov
cmp
pop
and
fists
sbb
xor
std
inc
cwtl
mov
xlat
jle
test
insl
lea
inc
dec
mov
test
xlat
sbb
movsl
nop
xchg
std
push
test
insb
sbb
lods
or
nop
adc
aad
jp
jae
or
mov
or
out
out
cmp
push
mov
clc
or
ss
dec
into
sub
cmp
mov
shll
in
pusha
rolb
mov
cld
adc
push
and
jge
jecxz
pop
lret
xor
jno
mov
mov
loope
fwait
test
repnz
mov
ret
test
outsl
mov
cmpsl
cmp
mov
push
std
mov
xchg
rcll
sub
inc
pop
jmp
or
jp
cmp
push
jge
xchg
push
xchg
test
push
xchg
clc
inc
outsb
ret
pop
pusha
aas
lock
fimull
fsts
addl
fcmovbe
mov
mov
cld
cmc
int
pusha
mov
cmc
inc
call
push
jne
pop
pop
movsb
and
test
jno
test
or
shr
ds
outsl
pop
lret
je
addr16
adc
jo
lods
lock
inc
cli
imul
es
and
dec
adc
add
push
push
push
xlat
jno
add
and
mov
es
insl
dec
xor
mov
inc
sti
das
jns
jne
dec
inc
inc
mov
xchg
cmp
pop
cs
lret
xor
scas
loope
pusha
inc
rcrb
and
inc
cld
adc
sbb
jge
sub
into
mov
add
lods
and
and
lock
loope
clc
sbb
fcompl
dec
push
pop
jno
cmp
iret
cmp
cmp
jl
push
adc
add
rcrl
aam
in
in
xchg
or
pop
or
in
int
push
roll
mov
adc
adc
jge
sbbl
jecxz
shl
pop
jns
dec
jmp
movl
adcl
fmull
js
scas
mov
jae
sub
mov
lcall
arpl
imul
jg
ret
and
rorl
jp
enter
pop
ficoms
add
jmp
icebp
je
rclb
sub
xchg
insb
lds
push
mov
jbe
lahf
add
movups
sub
xchg
sbbb
mov
xlat
sub
fnstenv
push
and
mov
fwait
or
mov
sbb
xor
and
orl
shl
mov
add
sub
dec
call
sub
mov
shlb
inc
cmpsl
cmpsb
test
and
fsubl
rcrb
out
ss
ds
mov
fwait
cld
jbe
fisubrs
icebp
rcll
and
xchg
inc
dec
data16
out
dec
ss
out
push
fwait
mov
sbb
mov
aad
outsb
pop
dec
cmp
out
mov
je
test
mov
stc
pop
push
push
mov
data16
mov
sub
mov
into
pop
inc
mov
dec
stos
cmp
mov
xchg
and
dec
mov
inc
ret
test
and
adc
lock
in
xor
idiv
loop
xor
mov
jnp
pusha
js
out
cmp
pop
les
clc
cmp
loopne
and
popa
and
jbe
cwtl
inc
dec
jns
inc
popa
negb
pop
and
pop
cmp
ficoml
ljmp
test
add
mov
movsb
jo
sub
sbb
fcoml
in
negl
mov
push
test
bound
mov
inc
push
pop
ficoml
out
int3
lods
fisubl
mov
aaa
mov
cmpb
inc
inc
addl
fimull
mov
mov
dec
jns
pop
mov
test
xchg
dec
xchg
fbld
add
cmc
xor
mov
ret
pop
dec
push
sbb
mov
loopne
ret
fs
and
add
cmp
fwait
aad
repz
sub
testl
adc
addr16
push
aad
xchg
sbb
lods
kaddw
sub
ljmp
sub
pop
cwtl
pop
leave
mov
idiv
cmp
jnp
lcall
jl
push
or
mov
outsl
fbstp
scas
xor
mov
inc
push
dec
mov
jecxz
movl
inc
lret
shlb
sbb
mov
sub
xchg
pop
les
ret
and
sti
pop
mov
je
mov
jnp
cmp
cmp
cmp
mov
nop
pop
sti
mov
ja
jbe
jnp
inc
pop
xchg
fcoml
jno
mov
mov
loope
adc
mov
test
xor
pop
pop
stc
mov
inc
pusha
dec
xchg
arpl
adc
les
mov
fnsave
xor
and
gs
adc
leave
push
dec
enter
cs
dec
imul
sub
ret
pusha
out
clc
pop
arpl
int3
daa
xchg
scas
and
je
jne
cmpsb
mov
int
addb
pusha
ss
xchg
data16
out
rcl
in
ljmp
add
xor
mov
stc
xchg
inc
push
int
mov
ja
and
and
dec
xor
outsl
test
push
imul
push
jb
sbb
and
rclb
das
stos
iret
negl
mov
jl
jae
add
adc
lahf
sub
pushf
and
out
outsl
cld
loop
inc
xchg
mov
xchg
push
jae
fwait
sub
andb
lods
pop
jns
mov
adc
add
push
outsb
xchg
hlt
sub
jp
mov
stc
xchg
mov
cmp
ret
clc
out
dec
add
sbb
stos
ljmp
inc
jecxz
xor
pop
jbe
add
subl
cld
pop
out
cmp
sub
jnp
jb
sub
imul
inc
jno
mov
xchg
mov
cmpsl
outsb
xchg
jne
std
into
xlat
push
arpl
bnd
inc
lock
inc
lret
adc
cwtl
insl
cmpsl
test
push
aaa
sbb
fidivl
test
call
insb
dec
mov
dec
out
int3
cmp
lds
fidivs
icebp
fs
movsb
loope
xor
aaa
sar
and
leave
loopne
std
push
sbb
shrb
fsubs
addl
cld
sti
ds
popl
in
lea
jb
scas
daa
movsb
insb
dec
movb
hlt
push
js
xchg
mov
testl
repnz
xor
scas
mov
adc
mov
das
jbe
filds
inc
sbb
mov
cmp
xorl
hlt
stc
jae
mov
xchg
shlb
mov
cmpsb
in
pmulhw
cmp
add
hlt
mov
out
adc
cmp
dec
insl
cmc
xchg
mov
xor
push
in
mov
xor
fwait
and
and
sbb
lret
pop
sbb
repnz
mov
sar
sahf
cwtl
sub
int
imul
or
xor
mov
dec
push
mov
xor
out
test
cltd
loope
scas
sub
mov
jbe
jg
lods
and
mov
push
mov
testl
jp
outsl
push
xor
scas
cwtl
mov
mov
push
pop
aam
adc
mov
scas
mov
lds
adc
pop
pop
cli
andb
adc
std
and
in
ret
out
and
ja
push
mov
in
mov
outsb
daa
add
cs
mov
or
mov
inc
jp
hlt
add
add
fs
or
lods
mov
cld
pop
sbb
in
in
ds
int
cmp
in
decb
in
popa
cmp
les
sub
cmpb
lock
stos
xor
pop
mov
and
jle
lods
inc
xlat
cmp
fucom
addr16
test
mov
and
int
testb
lret
clc
mov
adc
sarl
dec
dec
rcr
es
sarl
cmp
sub
xchg
movsl
ds
push
jge
bound
loopne
push
xor
xchg
cmp
mov
lret
dec
jg
lahf
ds
sti
fsubl
xor
mov
aad
test
shr
repz
divl
dec
imul
clc
lock
std
mov
inc
cmp
std
push
push
mov
lret
mov
aaa
mov
aas
add
loope
fadds
xchg
mov
addr16
repz
fdivrl
cmpsb
inc
cmp
jmp
ret
in
mov
idivb
scas
hlt
mov
movsl
call
cmovle
movsl
jne
push
rorb
test
push
and
pop
in
jo
inc
lds
dec
negb
mov
fsub
or
adc
sub
xor
pop
jnp
js
add
loope
mov
dec
xchg
test
outsb
xorl
pop
imul
stos
jae
push
or
pop
scas
rolb
idiv
mov
jnp
outsl
cmpsb
jns
jecxz
movsb
scas
or
mov
mov
adc
test
jge
cwtl
xor
mov
lods
jbe
movsb
cmp
and
out
cltd
out
jl
test
out
scas
dec
mov
ljmp
ficoml
ds
lahf
fwait
pop
xchg
mov
mov
xchg
sub
add
jle
cmpsl
jle
jo
js
push
adc
bound
lods
out
out
loopne
clc
push
mov
inc
pop
push
test
popf
dec
dec
push
mov
add
or
xchg
imul
cltd
test
dec
test
jmp
jns
and
dec
adc
insb
pop
jno
shlb
sub
adc
xchg
in
jecxz
sahf
mov
xchg
mov
aad
lret
adc
outsb
int
jne
adc
cltd
pop
pushaw
cltd
or
pop
cltd
add
out
dec
push
mov
sub
lock
mov
mov
jbe
stos
xor
push
adc
je
xor
xchg
sbb
sub
mov
inc
push
call
lahf
sub
out
cmpsb
or
sbb
xchg
movl
orl
and
mov
sub
xchg
rcll
pop
ss
cwtl
inc
leave
js
fwait
lcall
fisubrs
dec
ret
or
cmp
movsl
hlt
dec
jle
loope
ficompl
rorl
jp
movsl
pop
adc
lock
cwtl
jl
xor
andl
jmp
outsl
mov
iret
ret
in
jno
incb
mov
add
test
imul
xchg
imul
adc
rorl
xor
adc
fmull
popf
pop
xchg
add
push
or
loopne
xchg
int3
mov
and
adc
xchg
jg
lret
xor
add
push
js
mov
mov
js
push
dec
js
out
in
or
push
mov
inc
inc
mov
xchg
mov
imul
adc
add
mov
rol
lahf
iret
test
popl
lock
rcll
or
aam
pop
rcl
mov
pop
fcmovne
rclb
out
lock
sbb
dec
fisttps
add
mov
sbb
sub
div
dec
lret
mov
iret
fdivs
outsl
rcl
aaa
imul
mov
pop
jge
daa
rcrb
rorb
nop
vmovhps
mov
xlat
pop
loop
or
jo
mov
jge
cld
push
sti
out
xor
and
lods
mov
mov
mov
stc
jno
xchg
fdivrl
clc
loop
test
pop
xchg
repz
jbe
popa
or
repnz
rolb
sub
mov
and
cmpsl
push
xor
cmp
mov
stc
aaa
mov
std
xchg
mov
lret
cmp
in
fildll
jecxz
cmp
mov
add
fnstsw
orl
lret
loope
je
ror
jb
xchg
imul
std
ss
push
jmp
sub
dec
push
movsb
dec
jp
int
pop
jle
dec
outsb
mov
pop
fidivrl
les
movsb
mov
lock
xchg
mov
pop
cmc
lea
lds
aaa
dec
mov
inc
cmp
mov
iret
jp
nopl
inc
or
fidivrl
dec
xchg
jmp
cmpsl
jle
int3
mov
lret
out
pop
bound
addr16
in
out
pop
inc
xor
and
dec
shlb
icebp
test
pushf
test
arpl
icebp
mov
cmpsb
or
pushf
fwait
shll
shll
xchg
pop
xor
lret
pop
lods
inc
ljmp
test
nop
loopne
and
in
leave
les
cmp
outsb
jne
push
and
lock
in
push
inc
out
loope
pop
decl
cmp
int3
lds
push
xlat
xor
scas
dec
mov
xchg
cmp
and
dec
leave
xor
lret
in
fwait
scas
mov
aas
inc
xlat
out
nop
daa
mov
stos
out
sbb
xchg
cli
xchg
movsb
mov
insb
inc
in
cwtl
xchg
fwait
icebp
or
in
cmpsb
notl
adc
jb
fisttps
mov
xchg
imul
cmp
xchg
loope
sbb
pop
jle
sbb
dec
arpl
mov
dec
add
push
ja
lahf
iret
jle
lahf
stos
xchg
sub
push
mov
and
dec
scas
arpl
jnp
in
insl
scas
mov
mov
iret
mov
jne
xor
add
testb
sub
aaa
subl
xor
negl
dec
mov
test
jmp
mov
xor
movsl
sbb
jnp
xor
out
sub
js
jmp
xor
movsl
es
fisubrl
and
dec
mov
into
stos
stos
fs
xor
fsubrl
adc
ss
dec
cmpsl
or
in
sub
cmc
xlat
cmc
pop
push
push
stos
sbb
push
leave
jno
jbe
jno
mov
inc
sub
and
js
imul
ret
sbb
sbb
pop
xor
popa
mov
push
sbb
pop
rol
insb
fsts
sub
mov
adc
adc
icebp
push
cld
stos
int3
mov
ficoms
ja
push
icebp
sub
iret
sti
sbb
dec
xabort
mov
dec
push
mov
mov
leave
xor
mov
jmp
pusha
dec
or
adc
outsl
adc
or
fdivr
cli
popf
test
inc
lahf
push
in
stos
sub
xlat
mov
clc
and
out
inc
sbb
adc
dec
mov
in
or
test
cmpsl
mov
dec
lods
sbb
nop
inc
in
data16
rorl
in
or
xlat
mov
insl
add
loopne
nop
jmp
jle
and
xlat
sub
and
sbb
dec
mov
repnz
xchg
and
fs
daa
popf
jl
lods
jae
cwtl
stc
pop
into
in
cmp
test
xor
add
cltd
lods
mov
mov
nop
mov
cmp
call
mov
xchg
inc
push
movsb
in
or
jg
aaa
xchg
jbe
push
fs
cmpsb
or
xchg
ljmp
xchg
cltd
xchg
cmp
adc
push
ljmp
push
loopne
jno
jne
test
ss
imul
sti
stc
xor
xchg
jnp
mov
pop
test
ljmp
out
mov
clc
jb
push
lods
decb
mov
adc
out
icebp
call
sbb
fistpl
jge
pusha
pop
cmpsb
das
cmp
outsb
cwtl
lods
stc
lret
push
xchg
pop
scas
sub
or
test
out
les
push
mov
out
addr16
outsl
pop
imul
jb
sbb
dec
add
mov
repz
xchg
not
daa
xor
rolb
fdivrs
jns
nop
xchg
jecxz
adc
cmp
nop
pop
inc
inc
jae
mov
rcl
sub
shl
in
add
mov
clc
sti
inc
mov
mov
adc
or
test
imull
aam
jb
cwtl
loope
pop
mov
or
dec
mov
fstps
rorb
mov
xchg
insb
jmp
popa
cmpsl
mov
push
test
jg
fnstcw
pop
lret
push
sbb
mov
call
xchg
xchg
call
gs
or
imul
fwait
shrl
adc
fcompl
xchg
add
push
popf
sbb
mov
pop
cli
pop
sbb
jp
inc
cmp
mov
gs
or
push
xor
lods
add
mov
data16
jmp
loopne
movsl
aas
mov
fisttpl
shl
fnstcw
jg,pn
stos
jae
loope
push
divb
push
pop
pusha
inc
or
movsb
nop
pop
ljmp
scas
icebp
fistpl
shrl
inc
and
push
cmpsb
or
iret
movsl
add
cmpsb
jns
sti
iret
mul
cwtl
arpl
cmp
je
pop
rorl
inc
push
jo
stos
aaa
nop
daa
outsb
leave
mov
stc
cmc
mov
or
pop
mov
mov
sti
lods
mov
clc
mov
push
xchg
in
stos
cmp
lock
aad
outsl
icebp
mov
inc
lock
pop
jecxz
xor
outsl
cmp
dec
mov
add
mov
adc
outsb
scas
enter
xchg
xchg
push
mov
test
mov
dec
sub
jo
dec
cmp
jae
sbb
xor
xchg
ret
mov
ljmp
push
or
jge
scas
shlb
fcmovnbe
and
out
test
mov
fdivl
aam
or
dec
mov
pop
pop
xchg
pop
add
cld
sahf
cmp
and
sub
stos
mov
or
stos
push
push
jmp
aas
inc
fsubs
andl
push
sub
mov
jbe
cmc
rcr
in
mov
mov
gs
mov
cmp
ljmp
cmp
lcall
pop
orl
je
incl
jp
adc
je
stc
into
dec
cmp
lcall
fwait
pop
in
in
sbb
aad
dec
sbb
es
ja
das
rorl
sahf
xchg
inc
xor
push
sbb
and
xor
or
cld
or
jg
xorb
adc
xor
push
push
jo
sub
dec
dec
outsl
lcall
adc
cwtl
inc
mov
fisubl
loop
mov
cmp
fmuls
push
lods
adc
mov
sbb
xor
ds
in
dec
addl
sbbb
icebp
adc
and
repnz
and
out
fwait
cmp
imul
pushf
push
fdecstp
jb
xchg
insb
xor
mov
adc
js
nop
test
sahf
mov
sbb
lret
fiadds
add
jmp
or
sub
bound
xchg
pop
inc
repnz
sahf
add
in
xor
push
sub
and
lret
mov
mov
in
or
dec
inc
jno
mov
cmp
je
mov
stos
mov
not
shrl
and
and
sbb
add
add
ja
insb
dec
push
negb
pop
mov
inc
sub
jae
hlt
out
popa
pusha
mov
inc
daa
push
lret
push
adc
scas
loopne
popa
cli
js
dec
push
cmp
sarl
test
mov
push
mov
cmp
mov
mov
nop
sbb
dec
out
xchg
xchg
mov
mov
cmp
inc
or
jns
aas
adc
push
loopne
jb
dec
cmc
nop
outsb
enter
sbb
fidivrl
cmp
pusha
aas
xchg
pusha
aaa
inc
fld
inc
push
sbb
mov
test
std
out
cmpsl
loopne
adc
mov
jb
test
test
or
das
add
push
dec
repz
stos
push
inc
mov
fwait
pop
jb
push
pop
inc
cmp
cmpsb
mov
cmp
in
xchg
shl
mov
in
ja
dec
sbb
loopne
fdivs
add
call
xchg
cs
inc
hlt
jns
push
cwtl
std
add
xchg
or
movsl
movsb
inc
inc
mov
jecxz
mov
fists
std
adc
dec
and
je
cmpsl
popa
fisubs
out
and
xchg
inc
dec
push
jge
fildll
cltd
popf
sbb
sub
pop
dec
hlt
push
push
insl
stos
pop
mov
cmp
pop
sahf
mov
rorl
outsb
push
neg
xchg
je
push
cs
arpl
ds
and
mov
mov
inc
adc
mov
enter
or
push
loopne
int
stos
and
cmpsb
lea
aaa
nop
dec
lods
icebp
leave
cmp
roll
in
mov
mov
mov
jnp
adc
repz
mov
inc
fdivl
sub
jae
in
mov
jl
cmc
inc
add
dec
sti
or
lock
call
hlt
cmpsb
mov
push
pop
add
scas
andb
cltd
cmp
in
inc
mov
sbb
push
mov
fldcw
add
scas
lret
lock
ljmp
mov
rcll
rcrl
mov
outsb
or
mov
clc
or
loope
shlb
dec
cmp
jb
imul
divb
sbb
xchg
jecxz
hlt
dec
pop
cmp
hlt
add
xchg
shll
andl
mov
adc
mov
fwait
xchg
sub
jg
or
into
xchg
add
in
stos
aas
mov
mov
push
fstl
xor
mov
popf
mov
enter
outsl
sbb
iret
cld
mov
xor
push
pop
inc
movsl
sub
test
jecxz
int3
push
mov
sbb
popf
sbb
movsl
and
in
xchg
icebp
jno
out
insb
sub
dec
roll
push
clc
adc
xchg
rclb
adc
or
adc
and
mov
aam
js
push
or
xchg
mov
mov
push
out
adc
enter
aam
mov
or
cltd
jge
sub
cmpl
or
cmp
cmp
jl
and
mov
mov
jo
pop
xchg
int3
or
cmpsl
dec
hlt
int3
ret
dec
and
and
ret
imul
jmp
popf
idiv
aad
addb
movsl
lods
mov
mov
jb
inc
xchg
nop
les
dec
andl
cltd
lods
insl
hlt
pop
xor
push
sub
lret
push
cmpsb
xchg
dec
mov
lret
sub
lcall
mov
or
cmp
and
cmp
iret
mov
mov
sbb
or
sbbl
inc
xchg
xor
mov
xor
js
and
icebp
pop
nop
jle
mov
mov
cmpsb
pop
movsl
dec
lods
cli
push
outsl
xchg
and
mov
dec
mov
gs
push
outsl
cmp
xor
cmc
jge
adc
push
cmp
repz
or
fisttpl
int3
leave
lret
mov
imul
imull
or
inc
repz
flds
in
xorl
js
xchg
test
js
mov
add
aad
in
jge
pop
sbb
sbb
jnp
in
getsec
xchg
cmpsb
sub
ja
cmp
imul
mov
xor
popl
arpl
popa
clc
out
xchg
ret
sarl
dec
jbe
aam
shll
aaa
jp
push
jecxz
std
imull
pop
adc
cwtl
orb
xorl
imul
popa
bound
in
inc
xlat
xlat
dec
pop
inc
gs
jnp
pop
sti
cmc
mov
pop
push
aaa
jbe
or
or
xchg
ret
mov
fnstcw
movsl
jg
jmp
mov
push
and
iret
mov
fsubs
mov
or
inc
push
and
add
push
stos
xorb
pop
add
mov
test
enter
mov
inc
adc
jmp
adcl
add
pop
mov
mov
sbb
push
add
lret
mov
xor
or
ss
loop
sbb
push
fstpt
push
enter
inc
hlt
iret
flds
in
xor
addr16
shlb
movsl
cmp
loopne
adcl
mov
icebp
xchg
mov
dec
and
shr
adc
aaa
jge
or
push
les
outsb
js
sti
fwait
jo
mov
fisttps
mov
lret
loopne
fcompl
cmp
mov
lods
and
shll
and
dec
mov
mov
inc
dec
andl
adc
cmpsl
lahf
xor
mov
sub
jge
mov
int
and
out
inc
loop
in
mov
xchg
das
stos
mov
push
pushf
sbbl
inc
jo
adc
xchg
jge
data16
lods
leave
daa
push
jmp
popf
sti
push
shrb
xchg
mov
pop
sbb
dec
jne
mov
testb
imul
sbb
or
test
or
jb
xor
mov
pushf
vmwrite
mov
cmp
mov
cmpsl
pop
rolb
xchg
mov
add
push
xchg
or
sub
test
xchg
add
test
push
lret
mov
pusha
cmc
dec
mov
in
decl
outsb
sub
mov
push
sbb
inc
faddp
lods
cmp
scas
jle
dec
dec
ret
sti
mov
jmp
loope,pn
xchg
cmp
jmp
in
adc
loop
je
int
outsl
ja
pop
sbb
pop
aas
mov
dec
mov
xor
inc
push
test
xor
fsubl
cmp
adc
mov
stos
mov
mov
push
std
scas
movsb
scas
and
jg
xor
lea
pop
push
int
push
jl
enter
pop
mov
scas
pop
outsb
xorb
std
and
ljmp
es
add
cmp
xor
into
jno
out
and
sahf
faddl
sahf
fcomi
call
stos
test
adc
mov
cmp
jl
sbb
lcall
xchg
adc
mov
in
inc
lock
mov
push
lret
mov
mov
push
add
ret
shlb
jl
rorb
movsl
scas
xchg
cltd
fidivrs
loope
shrb
inc
lods
jb
test
testl
aam
push
fsubrs
repz
fwait
lea
shlb
jns
aaa
inc
push
lods
aad
mov
in
add
mov
stc
dec
sbb
std
lea
mov
out
out
in
inc
xor
cli
push
mulb
cld
imul
mov
jp
cld
clc
sahf
icebp
dec
cwtl
imul
fsubs
xchg
andl
sbb
aad
lret
sbb
jg
cmp
sbb
outsl
xchg
js
mov
jae
orl
cmp
jg
xchg
mov
pop
pop
sar
clc
or
dec
mov
mov
cwtl
mov
inc
mov
sub
stos
ret
mov
cmp
add
addb
cwtl
je
sub
cmp
xor
lods
jns
cli
int
fimull
popa
xchg
int
mov
adc
leave
dec
dec
sbb
loopne
mov
mov
cmp
cmc
pushf
add
pop
mov
in
in
es
sub
icebp
xchg
clc
xlat
dec
loopne
iret
std
repz
lods
decl
jae
stos
scas
ljmp
out
push
test
rclb
xchg
push
or
fbld
pop
popa
inc
jecxz
xchg
jl
and
pop
xor
roll
sub
sbb
xor
rcl
cmp
and
mov
dec
mov
mov
sbb
outsb
repz
or
cli
icebp
add
jae
cwtl
mov
mov
dec
push
jmp
xor
xlat
cli
mov
fcomps
daa
add
ljmp
bound
mov
xor
icebp
xchg
mov
ficoms
insl
mov
adc
adc
inc
movl
nop
not
lret
imul
xchg
andb
aaa
adc
test
or
leave
in
mull
jge
cmp
mov
add
mov
xor
cs
mov
jnp
xlat
mov
mov
sub
mov
inc
in
jmp
lods
sbb
add
mov
xlat
jp
xor
test
pop
movsb
sbb
mov
sti
test
jb
jb
push
int3
xor
insb
mov
sbb
jecxz
xor
ja
mov
mov
jle
pop
sub
pop
or
fidivs
arpl
inc
xchg
int3
std
lock
pop
iret
or
cmpsb
movsb
test
lock
inc
test
jge
into
mov
lods
rcr
add
insb
icebp
mov
mov
pop
jmp
push
push
and
mov
xchg
push
sub
push
mov
inc
xchg
jle
and
lea
repnz
mov
out
fwait
mov
mov
jge
adc
jg
or
cmp
push
daa
jg
cmp
sbb
jle
in
ljmp
jg
test
stc
adc
mov
inc
inc
int3
popa
jo
or
inc
xchg
lods
cmc
daa
jno
ret
outsl
ja
or
sub
in
fs
cs
mov
shrl
inc
adc
pop
cmp
mov
cmpsl
cmpsb
addr16
sarl
cli
xchg
mov
pushf
mov
push
push
mov
movsl
cmp
and
add
mov
sub
les
cmc
sub
inc
pop
xor
ret
sbb
jecxz
pop
mov
sbb
sti
sti
decl
aas
lret
mov
repz
mov
gs
fcoml
fisubrs
orl
push
xchg
add
sbb
lock
lods
dec
iret
push
loope
jmp
test
cli
jne
popf
or
cmp
scas
sahf
sub
inc
push
xchg
icebp
xlat
and
dec
jmp
ljmp
xor
cmp
sbb
jp
pop
jae
cmp
sbb
mov
in
mov
test
mov
push
shlb
and
mov
outsw
out
outsl
jmp
fsub
mov
push
in
and
pushf
mov
mov
aam
jl
ret
jno
xor
dec
inc
in
out
cmc
test
adc
testb
int
mov
add
sub
mov
or
movsl
mov
addr16
add
sbb
jno
add
cmp
rcrl
xor
mov
mov
hlt
mov
fs
or
mov
scas
pop
aam
jl
lods
add
push
pop
fildll
dec
loopne
push
shrb
adc
pop
das
mov
fldt
sub
dec
je
loopne
cmc
adc
or
ja
imul
jge
xchg
inc
jecxz
insl
push
cmp
jg
fwait
repnz
into
cmp
fdivrl
mov
pop
mov
arpl
js
popa
inc
sahf
in
mov
cmpsb
fwait
push
popf
enter
enter
hlt
push
push
mov
xchg
in
and
pop
bound
mov
xchg
xchg
notb
adc
xor
ss
sahf
mov
or
or
xor
lret
cmpsb
ret
fcomps
outsb
es
xchg
repnz
imul
dec
lock
dec
subl
subl
adc
hlt
xor
inc
push
rorb
xor
push
push
repz
and
add
mov
sub
ds
aam
push
sub
dec
mov
sbb
or
cmp
pop
cmp
ffree
inc
daa
stos
inc
push
add
inc
nop
add
insl
mov
call
mov
cmp
xchg
push
mov
aas
mov
dec
cld
push
lea
inc
cld
loop
or
jns
popa
xor
xor
movsl
inc
or
fs
lods
cwtl
pop
jge
mov
pop
xor
pop
cmp
and
pop
insb
jmp
movsb
pop
popa
sarb
dec
sahf
mov
adc
adc
pop
orb
fsubr
fs
dec
and
ja
in
xor
pop
dec
int
and
xor
popf
push
rclb
mov
xor
ss
cltd
ja
inc
and
xorl
out
cltd
mov
add
mov
iret
mov
cmpsb
cmp
mov
sub
rcrl
shll
lret
inc
jnp
and
push
sbbb
jns
stc
icebp
in
pop
mov
leave
das
pop
mov
xor
mov
imul
ds
adc
inc
xlat
jge
scas
push
ret
lret
jge
mov
gs
cmpsb
and
mov
test
or
pop
test
mov
dec
jmp
aam
mov
pop
mov
int
mov
sbb
pusha
add
mov
inc
aad
lahf
sahf
inc
mov
test
mov
lret
and
jno
pusha
data16
push
loopne
lods
data16
jns
leave
jb
dec
jb
ss
imul
mov
cmp
sahf
add
mov
mov
aaa
cmp
inc
and
ljmp
or
push
fxch
sbb
scas
add
aam
push
and
enter
pushf
fsubrs
pusha
les
and
into
lret
dec
in
ficoms
into
jecxz
mov
loope
in
in
lret
test
mov
test
test
sbb
push
dec
inc
sub
pop
out
xchg
xor
dec
divb
sbb
lea
aaa
or
dec
push
fcmovbe
jae
push
dec
mov
mov
pop
aas
and
in
cli
dec
ds
test
xchg
cmp
adc
and
pop
sub
pop
lods
jle
lds
xchg
pop
cli
aad
jmp
pop
push
xchg
cmpsl
fs
sbb
mov
mov
cmp
mov
mov
les
jecxz
sahf
lock
out
add
sarl
ljmp
divl
or
js
mov
lahf
lret
dec
ja
adcb
lret
jecxz
imul
push
mov
fstps
outsl
inc
popf
pop
mov
xor
jne
loopne
push
repnz
ret
cltd
adc
in
lcall
or
leave
lds
cmp
or
pop
rcrb
inc
xchg
mov
lcall
jmp
dec
aad
jb
pushf
mov
int3
cmp
or
icebp
cmp
cwtl
pop
enter
pop
test
pop
cmp
fwait
sub
cwtl
lret
aad
std
int3
jb
push
ret
pminub
lock
fistpll
ja
adc
xchg
popa
sbb
fldenv
imul
or
fdivs
or
pop
mov
dec
test
jecxz
icebp
into
in
scas
and
fcmovb
push
jmp
into
xchg
pusha
ret
mov
jg
mov
lods
xchg
cmp
ss
sub
loop
cmc
repnz
inc
xchg
xchg
and
mov
popa
cmp
and
fimuls
fidivl
pop
adc
inc
stos
out
stos
push
xor
sbb
mov
lods
mov
mov
mov
sbb
jl
hlt
popf
movsb
out
mov
idivl
inc
out
rcr
andl
inc
inc
mov
push
xor
xor
jle
mov
out
fsubs
rorl
sti
xchg
cmpsb
xor
push
xchg
ret
out
push
inc
add
lods
pop
inc
push
push
push
imul
cwtl
pop
cmc
shr
or
or
sub
shrl
add
ljmp
mov
ficompl
xchg
out
sbb
and
loopne
dec
sti
pop
inc
sbb
jno
push
push
imul
inc
push
out
xor
adc
add
cmp
jmp
dec
in
pop
push
dec
cltd
xchg
ret
and
mov
inc
mov
dec
mov
pusha
jbe
and
pop
scas
shrl
fstpl
loope
push
in
mov
sbb
cmp
ret
sub
xor
pop
in
gs
ss
fbld
push
add
mov
cmp
push
push
xchg
scas
shl
mov
iret
outsb
pop
xor
sub
mov
sbb
test
lods
ret
push
mov
ja
fidivl
xor
xchg
bswap
sbb
jp
xor
lods
test
jne,pn
xor
mov
inc
int3
nop
imul
pop
xor
cmpsb
sbb
adc
shll
adc
inc
fisubl
or
test
sarb
leave
lods
push
push
xor
inc
adc
in
ds
testl
sbb
mov
rcrl
fidivrl
cmp
fmulp
fisttpll
adc
xchg
in
inc
pushf
pop
jne,pt
mov
xor
mov
out
into
int
lret
cmp
sbb
push
int
pop
push
mov
or
xor
repnz
fbld
in
lcall
neg
adc
sahf
pop
sub
dec
ss
jmp
ficomps
jae
mov
subl
dec
pop
lock
mov
push
lret
lret
sbbb
cmpsb
inc
test
pop
mov
stos
faddl
hlt
xchg
adc
cmp
rolb
cmpsb
inc
jmp
imul
mov
jnp
lods
mov
mov
mov
mov
and
fwait
sbb
bnd
cmp
clc
add
shlb
xchg
movb
inc
in
xchg
inc
adc
imul
mov
int
dec
mov
loopne
jmp
ret
jns
lds
xor
adc
loopne
adc
cli
pop
jmp
mov
test
cmp
cltd
mov
lds
outsl
add
sbbb
mov
idivb
xor
mov
cmpsb
data16
inc
xchg
push
clc
addr16
fs
lret
aad
fildll
xchg
cmpsb
cli
test
and
mov
sbb
aaa
xchg
or
push
inc
adc
cmpsb
xor
pop
in
sub
popa
adc
jl
push
mov
pop
inc
or
add
xchg
inc
jne
loop
cmp
jmp
fistpll
dec
and
xor
sub
and
movsb
add
sub
or
lds
mov
adc
ds
stos
out
cld
stos
inc
popf
push
and
push
pop
xor
jno
mov
xor
sbb
xor
sub
addr16
jmp
xor
lds
scas
ret
punpcklbw
mov
pusha
fdivr
sub
push
push
movl
cwtl
je
adc
mov
iret
xchg
mov
xchg
dec
cmpsb
add
jmp
js
rclb
and
pop
or
push
or
sbb
shrl
inc
xchg
jae
jnp
sub
xchg
scas
adc
addr16
mov
add
aas
push
jo
bnd
pop
jo
js
div
add
pop
pop
test
outsl
in
hlt
mov
sub
xor
mov
xchg
push
fsts
dec
lret
and
mov
hlt
dec
xchg
les
sbb
mov
cltd
cmp
mov
push
xor
test
ficoms
mov
loope
fldt
cltd
sub
bound
in
fists
xchg
mov
les
or
cmp
aas
xchg
int3
sub
inc
or
sub
or
mov
mov
adc
push
xor
flds
fldenv
in
jg
outsb
cld
push
std
cmpsl
fisubl
idivb
imul
jle
in
fsubr
adc
cs
aaa
cwtl
and
push
dec
adc
lret
mov
mov
in
loop
pop
orb
test
sbb
imul
adc
testb
mov
or
cmc
fidivl
test
fxch
xlat
or
add
outsb
testl
aas
inc
aas
clc
push
lods
and
stos
mov
jnp
aaa
xlat
std
cmp
pop
add
or
rcrl
inc
shl
xchg
jno
sub
clc
rorb
divl
add
aas
push
int
inc
add
cmc
movsb
adc
popa
mov
mov
or
pop
dec
cli
rorl
in
into
dec
loop
pop
out
dec
daa
out
stc
dec
sub
mov
push
cmp
repnz
call
cld
add
and
in
leave
xchg
cmp
test
or
xchg
cmp
pop
js
xor
ss
ljmp
cld
stos
push
inc
in
popa
inc
mov
push
xor
scas
push
shll
fisttpl
std
fcoms
insl
push
xor
outsl
dec
les
inc
mov
mov
fsubrs
cltd
lcall
imul
rcl
jno
dec
addr16
jle
pop
lock
dec
scas
daa
mov
inc
cwtl
lahf
pushf
push
xor
in
sub
sahf
cmp
in
jno
jo
iret
mov
and
data16
aad
jl
loopne
enter
cmp
xchg
scas
adc
jg
fwait
xor
bound
pop
popf
cmpl
and
leave
sbb
pop
cltd
and
push
loopne
enter
xchg
fsubs
subb
or
add
push
pop
test
insl
ret
dec
loopne
fcompl
dec
stc
psllq
pusha
inc
xchg
pop
adc
int
adc
lret
aas
xor
ss
jno
sub
and
mov
xchg
push
mov
and
jge
jno
stos
push
cmp
or
xchg
sbb
in
mov
xchg
ret
jge
ret
push
inc
add
aaa
dec
aaa
pop
xor
lcall
jne
sub
or
lret
mov
xchg
stos
pop
cmp
ds
pop
cmp
iret
lds
pop
shr
mov
packsswb
lock
push
sub
or
inc
dec
inc
mov
xor
rclb
xchg
pop
pop
shll
shr
xchg
imul
jbe
cmc
je
movsl
mov
jns
jns
push
xchg
stc
mov
jb
lea
test
lock
repz
or
jnp
mov
arpl
jg
mov
test
push
ljmp
ja
cmpsl
or
pushf
ss
xlat
pop
lahf
fstl
in
in
sub
dec
mov
lods
xor
gs
in
inc
mov
test
stos
xchg
mov
ss
mov
jb
fsubrl
lret
rcrl
rcrl
cmp
xchg
fdivrp
insl
cmp
lret
pushf
ja
jle
and
test
outsb
cwtl
aaa
loop
xor
rol
insl
cmp
mov
xchg
xlat
cli
addl
mov
ret
cld
loope
jae
test
int3
nop
repz
push
jne
arpl
rorl
loope
fsubs
pop
stc
in
addr16
int
add
dec
cmp
xchg
les
jl,pt
pop
mov
outsl
mov
jb
pop
lahf
mov
inc
jnp
jb
add
mov
inc
dec
fldt
cmp
pop
pop
aam
dec
add
push
mov
sbb
mov
mov
push
push
sub
sarl
gs
bound
mov
clc
pop
lcall
xlat
lret
mov
sub
repnz
inc
addr16
mov
xchg
sti
inc
js
or
and
insb
xor
ret
pop
std
jecxz
inc
in
jns
xchg
cmc
mov
lcall
insb
mov
stos
pop
adc
jns
sub
repz
or
in
xadd
cmp
pop
ficompl
add
popf
lahf
jns
jmp
loopne
mov
mov
and
pushf
cltd
add
je
sbb
lahf
jae
push
mov
and
cs
mov
loop
icebp
adc
orb
movsl
stos
cmp
std
sub
adc
jmp
pop
in
mov
sbb
scas
mov
xchg
ja
daa
cmp
out
xchg
fldt
cmpps
cmpsb
xor
pushf
xchg
or
mov
push
lods
jmp
push
filds
insl
mov
sbb
mov
fnstenv
xchg
es
xor
inc
cmp
into
cmpsb
xchg
fnstsw
iret
lret
mov
sbb
pop
je
push
mov
and
push
data16
into
jmp
mov
aaa
ljmp
or
pop
mov
mov
repz
push
add
outsb
mov
adc
add
out
mov
or
mov
xchg
es
push
andl
loopne
into
jg
dec
aad
inc
mov
push
pop
test
pop
repnz
ljmp
inc
xchg
pop
lea
jmp
cmpsb
lcall
adc
outsb
add
jmp
icebp
pop
or
aas
pop
add
sbb
pop
and
repz
push
out
into
lods
push
or
sbb
out
arpl
add
cmp
cmc
sbb
adc
add
out
lahf
xchg
shlb
or
push
ja
psadbw
jecxz
fimuls
aaa
roll
insb
mov
imul
mov
in
test
pop
jbe
ret
cmp
fists
lea
and
cmc
mov
inc
ja
dec
mov
jle
cmp
bnd
jns
nop
xlat
xchg
out
sahf
nop
call
xchg
dec
pop
insb
lret
cmpsl
xchg
inc
push
aas
test
in
add
hlt
push
jle
sti
sti
call
sbb
mov
xchg
jle
mov
add
lock
rol
lods
stos
sub
jp
mov
dec
rorl
stc
popf
sti
xchg
stc
data16
out
fdivrl
sub
aam
ljmp
mov
jnp
and
pusha
lods
dec
sub
jae
inc
mov
imul
repnz
or
rcll
mov
enter
inc
and
mov
adc
filds
xor
enter
mov
jno
xchg
xor
sub
mov
outsl
mov
in
popf
jmp
cmp
ds
dec
jb
xor
push
movsl
lods
fnsave
add
lret
mov
ret
cmpl
cmp
rcrb
xchg
pop
scas
rclb
dec
mov
adc
scas
sub
mov
cmp
xchg
call
hlt
add
orl
cld
cmp
mov
scas
xorl
fcmovb
sbb
pop
or
mov
ss
sub
push
push
call
ljmp
bound
xlat
jno
xor
ret
addr16
mov
or
inc
insb
dec
push
xchg
cld
pushf
and
iret
mov
scas
xor
rcrb
inc
xchg
leave
fisubrs
jne
pop
sbb
xor
gs
cmp
xchg
fmull
mov
dec
dec
inc
lods
jecxz
shrb
pop
mov
test
inc
loop
ljmp
fstps
fstps
rorl
mov
inc
call
ss
inc
dec
mov
inc
sbb
iret
ds
cld
insl
add
jb
sbb
pop
cmpsb
inc
inc
stos
push
repnz
mov
xlat
stc
xor
in
inc
dec
xor
lret
mov
in
add
bound
fcmovu
sub
jae
cmp
dec
mov
mov
push
scas
mov
dec
add
fldenv
clc
idiv
mov
ljmp
lahf
test
and
popa
jg
out
je
int3
nop
xor
pop
mov
pop
and
popf
add
test
push
pop
xor
lret
ret
rcrl
in
into
xor
ss
dec
fadd
pop
roll
imull
test
cmpb
and
fistl
push
outsl
movsb
stc
dec
rol
ja
mov
fisttpll
jns
popf
or
bound
clc
out
dec
push
sub
mov
fisubrs
dec
inc
stos
adc
lods
adc
in
lret
sub
lea
or
pop
aam
mov
and
xlat
xchg
adc
xlat
push
shll
xor
dec
mov
fstl
mov
faddl
xor
mov
clc
test
js
push
xchg
or
mov
jecxz
pop
aas
rolb
adc
or
outsl
or
fcmovnbe
ret
add
dec
leave
push
arpl
ret
sub
mov
sti
scas
repnz
xchg
dec
scas
fwait
in
and
aad
andl
inc
dec
mov
xchg
ret
pop
jmp
into
xor
icebp
faddl
add
inc
xchg
loope
jae
mov
add
iret
xchg
loop
mov
or
sbb
mov
pop
fstps
mov
jnp
cld
andl
adc
scas
xor
nop
jmp
call
jo
and
popf
add
sub
cs
mov
rolb
scas
arpl
fnstenv
inc
fistpll
push
scas
in
leave
push
adcl
lods
push
addr16
sahf
mov
and
jp
sti
mov
dec
inc
out
in
cli
icebp
lahf
adc
mull
fimuls
and
xor
pop
jo
ds
dec
cmc
dec
xor
lret
add
xchg
add
jmp
adc
adc
pop
or
daa
push
shr
push
jp
fwait
xchg
test
mov
jg
pop
inc
sub
popf
dec
pop
sbb
xchg
clc
aam
xchg
sti
xchg
nop
mov
cmpsb
or
xchg
movsl
loope
jle
cld
testl
cmpsb
or
dec
cltd
aas
push
or
push
aam
and
add
pop
ret
fcmovbe
mov
ds
imul
subb
stos
sbb
arpl
xlat
pop
mov
sub
pop
inc
pop
cmp
adc
jecxz
and
mov
lods
fldenv
cli
pushf
leave
addb
incb
mov
sbb
mov
repz
dec
ljmp
mov
sub
xchg
jg
lds
fnstenv
mov
sub
mov
insb
scas
aad
sub
sbbb
lahf
jb
dec
cmp
imul
call
xor
daa
inc
mov
rorb
dec
movsb
lods
xchg
fistps
dec
and
dec
cmpsl
ret
rorl
and
or
xchg
pop
inc
xor
or
ret
adc
jns
cmp
cwtl
jae
inc
enter
dec
data16
jb
inc
cmp
mov
hlt
jo
push
sbb
out
jge
loop
add
push
push
out
pop
mov
pop
nop
cmp
mov
push
jns
shlb
cmp
daa
lcall
xchg
xor
jg
ljmp
andb
testb
cmp
sti
cmp
mov
xchg
fisubrl
sbb
dec
xor
cmp
ret
push
mov
sbb
int
and
aam
jae
testb
sbbb
cmpb
call
aam
lcall
jl
fisttps
fmull
mov
shlb
jecxz
or
and
fsts
lcall
mov
test
sarl
leave
aad
sbb
sub
out
fcmovnu
shl
pop
test
jge
and
clc
lods
inc
jae
bound
or
mov
sub
inc
dec
mov
add
push
mov
daa
inc
xor
mov
jnp
dec
lea
outsl
push
jp
lods
dec
fwait
mov
push
add
mov
or
fidivrs
sub
or
inc
jae
mov
test
cmp
pushf
scas
lock
lods
ss
jge
add
jnp
cltd
xor
xorb
pop
addr16
sub
lods
dec
scas
repz
jno
jecxz
jge
mov
sbb
xchg
ljmp
ljmp
clc
js
mov
jbe
cli
xchg
roll
adc
mov
aaa
jg
sub
add
xlat
out
push
pop
pop
push
sub
mov
imul
loop
mov
and
jge
sbb
mov
adc
xor
sub
mov
pop
mov
mov
movsl
popf
push
aad
xchg
arpl
lea
aas
and
daa
push
and
cs
pusha
test
jge
imul
cmp
xor
incl
nop
mov
movsl
hlt
xchg
adc
stos
push
inc
or
adc
insb
sub
jbe
dec
xchg
jg
xchg
add
inc
repnz
js
fcomip
and
cli
add
mov
jle
adcl
add
or
repz
push
xlat
ret
adc
into
loope
or
scas
clc
sarl
shlb
cmpsl
xor
hlt
cwtl
jg
std
jmp
mov
mov
in
movsl
outsb
jle
shrl
xor
pop
adc
cli
mov
jne
push
push
inc
push
lods
mov
or
cmp
sbb
push
loopne
mov
sbb
xor
mov
pushf
mov
dec
dec
enter
lock
push
stc
xchg
ja
loopne
cmp
push
aaa
sub
cmp
outsl
xchg
add
push
test
inc
arpl
es
dec
data16
sti
sub
dec
push
xor
or
add
inc
in
and
enter
xchg
test
std
in
mov
stos
pop
or
ret
xor
cmp
test
jb
test
insb
jo
adcb
int3
repnz
bound
das
scas
jns
jbe
sbb
loope
jns
pop
or
ds
dec
mov
incl
add
lcall
faddl
mov
add
out
dec
stc
adc
adc
xchg
loope
addr16
and
add
addr16
dec
cmpsb
pop
scas
test
popa
push
xor
in
lcall
jp
scas
jbe
iret
rcrb
or
fists
cmp
mov
pop
scas
stos
sarl
cld
pop
mov
decb
lock
adc
lods
and
cmp
outsl
cmp
adc
xchg
mov
cmp
add
inc
sub
dec
mov
fldt
push
xchg
out
cwtl
fwait
addl
pop
mov
rcll
and
xor
sub
outsb
push
inc
adc
pop
mov
mov
lcall
or
ss
dec
repnz
out
jbe
repnz
pop
sarb
ret
lea
cmp
inc
xlat
lds
dec
into
ds
pop
dec
out
outsb
xchg
sbb
icebp
mov
popa
in
or
push
addb
inc
out
pushf
arpl
push
mov
add
push
test
loope
dec
adc
int
add
or
stc
out
xchg
pushf
sbb
leave
jno
inc
pop
outsb
jae
movsl
andb
insl
inc
or
push
and
sbb
pop
jge
cmp
jp
xor
stos
stc
andb
dec
mov
popf
sahf
incb
mov
jp
add
sbb
dec
dec
dec
push
fs
xor
lods
jne
ss
mov
int3
ljmp
adc
call
int
sub
pusha
ss
in
pop
loopne
inc
pop
cmp
pop
xor
rcrb
into
jle
sarb
cli
insl
nop
pushf
pop
insl
std
inc
sbb
add
out
lock
sub
sbb
popa
push
fs
dec
sahf
sub
std
in
das
pop
arpl
jmp
xor
in
movsl
pop
mov
dec
mov
adc
clc
enter
mov
pushf
cmp
cmp
xchg
inc
add
scas
dec
mov
push
sbb
vmovhps
push
leave
lea
repz
mov
and
jo
test
xchg
std
add
mov
cs
jmp
inc
inc
jns
clc
daa
leave
lcall
cmpsb
stos
xor
push
mov
out
rclb
in
cltd
push
std
add
jae
push
insb
push
dec
in
cmpsb
lock
or
cmp
int
iret
lods
out
outsb
clc
cmp
mov
mov
cmp
shr
xchg
pop
ljmp
gs
imul
xor
ljmp
daa
xlat
mov
test
out
and
mov
push
mov
pop
sbb
dec
mov
call
add
push
flds
int3
dec
lock
inc
in
sbb
repnz
mov
sub
mov
and
mov
push
dec
popa
sbb
and
lcall
adc
add
mov
aas
jbe
push
outsl
pop
cli
mov
adc
in
mov
outsl
mov
push
and
movsl
mov
sahf
rolb
xchg
mov
cmp
pop
sbb
push
popa
adc
inc
js
sbb
in
mov
xor
cli
int
jnp
push
pop
push
movsb
jl
das
adc
jno
push
xor
repz
into
in
sub
aam
sub
xor
xchg
push
lds
sbb
pop
push
outsl
outsb
ror
mov
dec
ds
outsb
sub
out
pushf
in
daa
movsb
mov
dec
pop
push
fcoms
std
pop
test
repnz
jl
shl
movl
mov
lods
xchg
insl
mov
fistps
imull
test
gs
xor
aam
cmpsl
ficoml
sbb
jnp
incl
test
shl
dec
int
fisttpl
and
bound
push
andb
inc
leave
and
push
pop
loope
outsl
mov
mov
xchg
sbb
aam
add
cmp
xor
mov
mov
inc
in
ss
insb
insl
jae
std
and
mov
sub
adc
divl
iret
daa
out
and
or
sar
inc
xor
insl
push
mov
xchg
push
notl
cmp
mov
icebp
mov
lret
lds
decl
cmc
push
sub
sbb
add
and
add
hlt
jne
rcl
loop
sub
es
jns
pushf
lea
sub
cmp
pavgw
jl
xchg
adc
mov
aam
int3
add
sub
xor
bound
inc
jle
cli
fidivrl
pusha
mov
fadd
push
clc
lahf
mov
or
in
jmp
mov
jb
mov
add
insl
fnstenv
jb
cmp
xor
sub
add
leave
xchg
mov
xor
adc
cli
add
jns
push
std
lahf
cmc
cmpb
sub
ss
xor
sbb
add
xor
adc
divl
ds
dec
mov
mov
jae
mov
xchg
in
push
adc
loop
mov
jg
push
inc
sti
ret
divb
in
in
or
jne
xchg
mov
aad
aas
inc
movsl
mov
addb
xlat
inc
fiadds
gs
mov
aaa
jne
xchg
mov
out
xor
stos
pop
cli
lret
divl
mov
cld
inc
push
aas
mov
xor
adc
push
shl
adc
cbtw
jl
rcll
jle
loopne
lcall
loop
pop
push
inc
js
stos
test
jbe
enter
mov
xchg
adcl
xor
outsl
sti
and
mov
int
pop
rorb
mov
adc
shlb
rcrl
mov
add
and
nop
add
xchg
jno,pn
jle
xor
xor
add
andl
inc
push
pop
lea
fldt
xchg
sbb
and
pop
sbb
cmpsb
jae
scas
in
in
and
mov
jns
xchg
movb
rol
sahf
int3
mov
loopne
inc
sub
lahf
shlb
lret
hlt
loop
or
pusha
inc
pop
sub
mov
push
call
xchg
and
call
daa
fs
ror
sar
mov
add
cmp
cmp
pusha
daa
add
xor
out
push
dec
fwait
cmp
ficomps
cwtl
cmp
stos
mov
fisubrl
inc
js
fwait
movsl
jno
mov
jne
xchg
pushf
mov
pushf
adc
cwtl
jecxz
dec
push
and
cwtl
and
mov
push
add
lahf
push
add
mov
rcll
in
push
hlt
clc
adc
jl
mov
cmpsb
xchg
jns
mov
sbb
imul
icebp
and
ret
sbb
mov
popa
in
dec
in
imull
hlt
outsb
scas
mov
xchg
jno
loopne
add
in
loope
int
repz
je
xor
xor
xcrypt-cbc
cmpsl
aam
cmp
sub
aas
or
push
mov
inc
es
adc
data16
cs
cltd
adc
jnp
fidivl
xchg
daa
lds
pusha
int3
xchg
or
scas
js
rcr
fists
out
cs
pop
push
test
ds
inc
fsubs
out
repz
mov
mov
dec
js
mov
les
push
dec
cmp
icebp
stc
inc
push
popf
add
pop
xor
outsl
mov
retw
fcoms
jmp
push
xor
repnz
ljmp
lods
jnp
pop
lods
std
pop
aaa
imul
popa
sub
lods
and
adc
leave
int3
cmpsb
sbb
push
stos
mov
dec
fbld
add
cmp
ret
call
adc
push
or
movsl
mov
fs
add
mov
dec
movsl
fsubr
dec
add
xorb
sub
orl
dec
sbb
sub
dec
add
loopne
scas
cmp
jo
or
push
dec
ss
cwtl
push
lahf
mov
rolb
push
orb
loope
daa
pop
push
add
dec
mov
shlb
loop
shll
subb
out
enter
idivl
fcmovb
stc
jmp
test
adc
xor
mov
xchg
xor
cli
les
add
andl
mov
pop
in
fldenv
dec
sahf
mov
inc
ss
xlat
jo
pop
pushf
out
in
xchg
fwait
cmpsl
xor
aad
data16
mov
pop
lock
fisubrl
fnstenv
jno
lock
sub
add
and
dec
mov
pop
ret
push
enter
sti
mov
icebp
xor
jl
lea
cmp
dec
test
and
rcll
inc
ret
nop
rorl
xchg
icebp
cmpsl
dec
and
out
nop
pop
das
int
dec
inc
ljmp
popa
pop
stos
fs
xchg
push
dec
in
rcrl
std
std
ljmp
mov
xchg
mov
cmp
mov
mov
add
out
mov
mov
pop
sbb
xchg
pop
scas
leave
rep
ret
mov
sbb
dec
jg
lds
lds
adc
ss
popf
cld
roll
inc
movsb
push
cmc
loope
mov
push
or
dec
and
and
imul
sbb
mov
jle
cmp
mov
repz
test
or
lahf
inc
inc
xchg
sub
pushf
fwait
pop
push
push
mov
add
ljmp
cmpsb
rorl
xorb
push
out
xor
hlt
inc
mov
data16
pushf
mov
iret
dec
frstor
jl
jmp
inc
push
andb
xchg
sti
int
push
xchg
lods
pop
cltd
mov
cld
xchg
ss
xchg
imul
pop
xor
loope
loope
jp
adc
push
xor
xchg
ja
and
call
adc
adc
push
pop
ret
push
and
jmp
pusha
xchg
and
xchg
ret
ja
gs
out
out
mov
scas
pop
sub
xor
test
stc
out
out
test
lret
fcmovnb
mov
movsb
cmp
pop
and
dec
jp
loope
jecxz
std
dec
xor
xor
stc
jmp
outsb
incl
jmp
insb
add
xchg
pop
or
dec
test
into
mov
add
mov
push
xor
sbb
mov
pop
mov
inc
pop
scas
add
jmp
adc
xchg
xchg
mov
xlat
jnp
je
orl
xchg
push
xor
iret
pop
sub
jl
jnp
int3
mov
fwait
ja
scas
cmp
cmp
aas
aad
sarb
cli
mov
or
sub
rep
push
jle
mov
xor
xor
jmp
and
pop
jle
movb
stos
inc
scas
dec
lock
inc
call
push
xchg
inc
aaa
dec
inc
scas
sub
in
nop
daa
ret
push
aam
or
cmpsb
test
dec
xchg
jl
ret
xor
in
push
push
imul
loope
pop
pop
call
aas
cmp
xor
js
sbb
js
mov
xchg
insb
xlat
push
lret
mov
and
shlb
mov
sbb
lods
jmp
cli
pushf
xchg
xlat
push
dec
icebp
jl
jne
pop
or
ljmp
ret
bswap
movd
rcll
sbb
popa
in
jge
test
mov
xchg
dec
mov
filds
dec
lds
pop
movsb
add
push
test
cltd
iret
movsl
fsubrl
jno
cmc
pusha
xor
clc
add
jge
out
cmc
mov
jmp
test
hlt
jb
imull
pop
in
and
pop
jno
jns
inc
pop
or
hlt
lea
xchg
or
jne
lret
rcrb
das
mov
int3
in
jl
xor
mov
pop
xchg
push
push
mov
mov
dec
mov
adc
daa
data16
iret
repnz
mov
pop
xchg
push
sub
not
test
sti
imul
movsl
add
push
test
mov
insb
fs
mov
pop
sub
outsb
rcrl
cs
cld
xrelease
dec
xor
pushf
cmp
sbb
jae
ss
sti
and
mov
pop
mov
lcall
imul
mov
ret
loop
dec
jmp
push
inc
and
xchg
es
popf
mov
or
adc
mov
fiadds
loop
mov
cmp
inc
xchg
xor
jne
daa
or
xchg
in
scas
jmp
or
fcmovnu
fadd
push
push
mov
scas
mov
push
mov
std
push
fistps
jmp
dec
sbb
icebp
sub
sbb
sarb
pop
insb
repnz
test
push
cmpsl
repnz
lods
xor
mov
xchg
mov
pushf
fs
xchg
mov
fldcw
push
adc
push
lods
loope
jp
sbb
leave
dec
jl
sub
xor
adcb
mov
pop
fsubr
mov
dec
pop
or
xor
shlb
pop
aam
nop
test
pushf
or
adc
sub
fsubr
mov
cmp
stc
in
mov
adc
add
pop
lock
sbb
mov
fistl
push
pop
repz
in
fwait
inc
pop
fisubl
hlt
cmovs
clc
mov
ja
ss
mov
add
les
xchg
ror
jecxz
sbb
push
jle
shl
push
jb
out
mov
cmpsb
dec
push
stc
add
jle
mov
sbb
iret
cmp
mov
ret
cli
call
mov
push
mov
inc
mov
inc
lret
xchg
jne
mov
xchg
fs
mov
fwait
stc
cmp
adc
cmpsl
or
cmp
lock
add
sbb
fcompp
jmp
cmp
lods
ret
mov
jge
outsb
mov
out
outsb
xchg
pop
jbe
lcall
insl
std
pop
dec
xor
or
jecxz
movsb
outsl
movsl
cltd
out
xor
inc
jecxz
adc
mov
pslld
jb
mov
mov
orl
scas
pusha
pop
add
mov
inc
into
insl
test
or
push
dec
mov
outsb
scas
pushf
jb
fimull
fwait
cmovg
enter
fsub
pop
add
adc
push
dec
xor
xchg
sbb
in
in
nop
push
mov
pop
shrl
push
into
outsl
out
sub
rclb
pop
sbb
movsb
outsl
pop
adc
pop
mov
push
mov
jmp
lcall
shrl
xchg
outsb
shlb
mov
arpl
int3
shrb
stos
or
roll
rcll
stc
and
jbe
scas
jmp
sub
and
std
xchg
jno
insb
jae
imul
outsl
rcrl
mov
add
rol
ficoms
shll
mov
faddl
in
lds
stos
hlt
xor
add
and
icebp
push
rcrl
sub
clc
xchg
or
inc
jmp
sub
js
shll
imul
and
mov
pop
push
pop
add
xchg
mov
xchg
xor
or
les
sbb
and
repnz
sti
movsl
insl
cmc
jmp
fs
mov
loop
lods
out
push
cmp
sbb
push
push
dec
test
imul
dec
cwtl
jge
and
and
lods
cmc
cmp
push
ja
xchg
jmp
sub
shlb
xchg
mov
stos
xchg
repnz
pop
inc
cmc
insl
dec
add
je
adc
in
mov
mov
cmpsb
sub
jle,pt
popa
jb
gs
or
daa
aas
std
or
int3
ret
cmpsb
out
shlb
ret
push
and
sbb
js
jp
sahf
popf
std
pop
cli
push
xchg
or
adc
ljmp
xor
inc
mov
mov
loop
jno
or
stc
push
ficompl
mov
sub
loopne
pop
xchg
push
fistl
mov
inc
out
ret
pop
inc
xor
lods
in
jnp
outsb
stos
out
jmp
push
lock
popf
mov
add
shl
pushf
cmp
xor
push
push
lods
mov
enter
adc
add
add
cli
inc
mov
fucom
insl
jb
mov
stc
imul
jbe
rorb
aad
xchg
xor
test
call
andl
or
cwtl
xchg
out
ret
mov
push
cwtl
call
dec
and
push
mov
les
add
mov
push
pop
dec
cmpsb
arpl
incb
cmpsl
outsb
aaa
fiaddl
sub
or
adc
lret
mov
lcall
pop
inc
fwait
adcl
dec
fcomp
adc
aas
int
cmp
xchg
or
jl
stos
movsb
test
and
ss
fnsave
dec
sbb
mov
hlt
in
cmp
or
push
gs
or
ds
rcr
std
push
stos
and
cltd
shl
stc
pop
add
add
in
add
xchg
mov
cmp
loop
push
ret
inc
lret
and
mov
ret
lret
xchg
mov
cmpsl
pop
pop
or
es
fucomip
mov
push
test
adc
mov
and
push
cmp
fmul
jno
xchg
lock
sbb
xor
pushf
arpl
cmp
mov
lock
in
pop
pop
mov
mov
push
ljmp
push
jecxz
inc
push
repz
xor
xor
xor
adc
mov
or
stc
and
sub
outsb
ljmp
in
dec
addb
roll
xor
dec
aaa
test
out
jmp
lret
and
fnstenv
sarl
outsl
xor
bound
jg
shll
xor
bound
loopne
inc
cmpsb
xor
mov
push
or
dec
stos
lcall
and
ds
or
xor
push
pop
push
outsl
pop
cltd
cwtl
leave
jmp
and
inc
add
mov
dec
dec
mov
shlb
sbb
popa
push
aaa
outsb
xchg
outsl
pop
cmpsl
mov
and
iret
cwtl
in
sub
mov
xchg
mov
test
inc
lea
popaw
cmp
sub
sahf
sbb
xlat
push
scas
rorb
sbb
dec
xor
push
mov
fimuls
or
push
and
and
xorl
popf
fimuls
enter
leave
jns
pop
repz
popa
cmpsl
in
pusha
stos
push
inc
push
es
fistpl
jl
jge
lret
pushf
xor
lock
leave
dec
mov
ljmp
test
loope
rorl
das
sbb
xchg
mov
mov
sbb
out
mov
jg
jnp
in
fiadds
pop
inc
rcll
sbb
cld
es
dec
jno
and
lock
hlt
arpl
xor
mov
push
push
or
mov
out
lret
mov
lret
mov
test
xchg
loope
fdivrl
arpl
push
outsl
and
sar
xor
mov
mov
pop
cmc
xchg
sahf
sti
dec
lock
testb
mov
xor
xchg
stc
cmp
scas
push
andl
in
or
push
mov
cmpl
ficomps
sbb
stc
and
xor
adc
xor
or
mov
xchg
or
jbe
mov
push
add
jne
add
jge
push
rcrl
scas
xor
jns
sub
and
pushf
mov
cmpsb
dec
push
in
inc
adc
or
push
xor
stos
push
lcall
pop
or
imul
mov
int3
lcall
sbb
jo
push
xor
xlat
mov
pushf
popf
sbb
add
repz
mov
xrelease
orb
in
mov
add
fcoml
add
arpl
ja
jae
es
in
adc
jmp
je
fcoml
adcl
sub
int
sub
or
outsl
inc
popf
dec
loopne
ret
mov
mov
mov
stos
into
pop
loop
mov
and
xor
xor
pop
fwait
pop
jle
add
out
jge
test
jmp
or
or
mov
mov
cmp
jmp
cmpsb
leave
sbb
xchg
adc
orb
xor
push
pop
xor
sub
subl
xlat
mov
fs
jnp
fidivl
cmp
lods
fldcw
sahf
jae
mov
popa
lock
mov
fsubs
fwait
xchg
je
ficomps
or
cmp
call
test
jno
pop
loop
jp
shlb
or
imulb
sub
rcrl
mov
and
test
cwtl
xor
mov
mov
rolb
lock
les
fldenv
sbb
fisubrs
cltd
ret
idiv
lods
dec
add
or
sti
push
clc
push
divb
pop
xor
inc
lods
out
jge
cmp
push
je
dec
insb
jb
fdivrp
fldt
mov
cwtl
scas
aam
push
outsl
sub
push
out
jno,pn
in
or
imul
mov
das
dec
jbe
mov
pop
mov
add
and
jl
out
adc
ljmp
inc
sti
or
mov
dec
aam
jmp
aas
addb
fs
and
jl
in
adc
test
decl
les
inc
sbb
pop
dec
inc
dec
xchg
cmp
mov
aaa
and
rcll
aad
imul
or
adc
gs
jecxz
pop
push
push
aas
out
mov
jge,pt
jo
or
jnp
adc
mov
push
ret
mov
fstp
or
aad
add
mov
xchg
sub
sahf
mov
mov
mov
xchg
es
add
int3
cmp
imul
stos
xor
dec
cmp
mov
leave
pop
inc
xchg
xor
and
cmp
jnp
and
test
faddl
sbbb
roll
out
fcmove
sub
mov
xlat
arpl
lret
jbe
fcmovbe
popa
es
push
inc
daa
aas
push
inc
cli
push
scas
push
mov
push
dec
lds
popl
jl
test
mov
out
dec
insb
ret
outsl
jp
sti
mov
lcall
mov
jo
out
stos
ret
jp
test
dec
outsl
jecxz
lods
dec
fwait
push
mov
add
lret
mov
mov
dec
insl
jno
push
pop
mov
xor
jl
sub
mov
imul
es
inc
je
xor
inc
jge
ss
or
imul
scas
jle
in
push
loopne
bound
xor
sbb
dec
add
mov
inc
lret
mov
jae
and
outsb
inc
mov
push
dec
push
xchg
nop
xchg
jg
inc
jne
nop
adc
lahf
icebp
add
cmc
inc
push
lods
insl
mov
data16
pop
pop
mov
jle
fwait
andb
rcr
and
sub
sbb
andb
or
ror
push
movsb
inc
push
rcll
loop
loopne
inc
add
sbbl
test
shlb
inc
adcb
mov
loopne
xlat
insl
rorl
or
arpl
fs
add
lods
js
sti
push
insb
clc
mov
popf
rcr
test
stos
dec
sbb
pop
jae
out
jge
or
mov
inc
add
aam
jg
icebp
pop
lock
fs
xor
loopne
mov
cmc
xor
xchg
pop
xchg
iret
xchg
push
dec
mov
dec
insb
fwait
inc
jno
cmp
and
or
hlt
push
test
cli
mov
ljmp
int
lret
test
push
pusha
or
and
fwait
jae
cmp
inc
cltd
inc
cmp
les
adc
jg
xchg
xchg
aad
repz
int3
enter
js
lahf
xchg
loope
xor
pop
inc
clc
xor
stos
test
dec
or
iret
add
or
in
lret
and
popf
pop
inc
adc
stc
inc
ds
jo
lock
ss
cmpsb
mov
jg
jno
dec
mov
cli
leave
test
mov
mov
inc
outsb
inc
enter
and
lret
jae
xorl
test
rcrl
ljmp
cs
movl
mov
das
jmp
xchg
arpl
je
push
pop
cmpb
inc
adc
pop
punpckhbw
xor
sub
mov
repz
adc
repz
push
insb
mov
push
test
add
pop
int3
and
push
or
fiadds
pop
xchg
sbb
aad
pop
xchg
daa
xchg
daa
mov
lahf
xchg
xchg
lcall
test
mov
xlat
pop
out
adc
push
popa
xchg
movsb
or
push
lods
dec
inc
sub
mov
fst
out
leave
pop
stos
imull
popa
xlat
cmp
jo
stos
adc
and
testl
lds
push
in
push
inc
out
cs
nop
jnp
imul
pop
outsb
insb
in
aaa
cmp
jbe
sbb
lods
pop
hlt
add
jae
sub
addl
pusha
xorb
add
xor
ja
insl
sbbl
sbb
insb
push
sbb
adc
adc
inc
bound
in
cmp
rolb
das
pop
mov
and
lcall
imul
loope
push
hlt
push
mov
jmp
fisttps
into
fnsave
in
jo
add
jnp
movsb
aad
into
mov
test
mov
cmp
sar
in
pop
sbb
loop
leave
push
out
jnp
int3
mov
sub
les
fsubrl
inc
hlt
add
ret
loop
sub
popf
and
dec
dec
jns
sub
adc
or
sub
mov
outsl
fisubs
and
mov
inc
movsb
jecxz
mov
insl
xchg
repz
pop
out
inc
or
dec
jbe
sub
sub
jmp
adc
sahf
ss
push
push
sbb
icebp
cmp
cli
nop
inc
stos
or
mov
movb
mov
mov
lds
lcall
push
dec
out
cvtpi2ps
xchg
sti
add
imul
pop
pop
sub
test
fstp
inc
std
rorl
mov
lds
fdivrs
sbb
imul
inc
mov
mov
in
or
into
or
ret
fildl
sub
jne
mov
and
jg
test
scas
daa
or
cmpsl
push
jb
mov
push
arpl
sbbl
popa
mov
test
cwtl
in
cmp
ljmp
out
cwtl
dec
adc
jno
add
bound
mov
dec
pop
cmp
test
add
pop
repz
cli
int
mov
out
sub
sbb
sbb
out
subb
dec
sbb
outsl
jae
mov
mov
mov
dec
imul
jge
imul
roll
stc
pop
lods
outsb
int3
mov
iret
xchg
jge
sbb
adcl
cmp
sbb
dec
jae
xchg
sbb
movsl
cwtl
lret
jp
out
loope
aad
pop
leave
lock
ret
add
xchg
int3
nop
das
movsl
adc
cmpsl
sub
fwait
hlt
jp
xor
pop
mov
in
adc
xor
inc
scas
aas
das
outsl
mov
mov
dec
dec
sub
outsb
insl
xchg
bound
xchg
popf
mov
out
test
mov
adc
dec
mov
int3
imulb
xor
cmp
pop
imul
imul
inc
cmpsl
jbe
insb
dec
xchg
add
xor
jl
xlat
push
in
xor
mov
int
cli
lods
cmpb
sub
jmp
jo
add
insb
js
mov
push
call
lods
popf
jno
push
aas
cmp
lods
inc
mov
xor
mov
cmp
sbb
hlt
test
lahf
loop
or
fwait
jecxz
dec
dec
sub
icebp
mov
test
stos
mov
scas
repz
inc
loopne
loopne
jnp
fimull
popa
mov
mov
sub
mov
inc
aad
stos
xor
inc
addl
inc
int
gs
and
xor
movsl
pop
and
ljmp
push
data16
scas
lods
pop
std
inc
sub
out
dec
loope
dec
push
and
aas
data16
sub
cmp
neg
mov
outsb
jecxz
imul
stc
sub
mov
adc
cmpsb
and
sbb
and
and
cmc
and
icebp
jb
scas
pushf
adc
add
sub
pop
push
inc
sahf
sub
pop
mov
push
lods
cld
ret
dec
and
aad
out
inc
loopne
mov
dec
mov
jge
or
in
add
push
out
add
pop
dec
lcall
sbb
inc
repnz
scas
jno
testb
fldl
mov
sub
fidivrl
test
sub
mov
pop
sahf
xchg
pop
pop
or
lock
adc
cmc
push
sahf
mov
lock
mov
fstpl
test
into
add
xlat
insl
xchg
fldcw
ret
mov
icebp
push
inc
cltd
fwait
je
mov
bound
rep
dec
addr16
xlat
xchg
insl
imul
arpl
pusha
inc
jmp
mov
inc
cltd
mov
sub
arpl
xchg
aad
sbb
or
sbb
sahf
pop
aas
cmp
scas
inc
sub
mov
pop
jle
lds
inc
xacquire
mov
push
shll
sbb
dec
notl
out
mov
sbbb
fdivs
and
lods
sarb
mov
lods
pop
rcll
and
loopne
mov
push
dec
xor
inc
lods
out
dec
pop
mov
dec
outsw
into
inc
outsl
scas
mov
loope
test
daa
jle
mov
xor
ficompl
jg
xor
gs
or
dec
out
cld
xor
adc
call
inc
push
jmp
fldt
in
adc
loopne
ss
es
jge
add
adc
fildl
jmp
mov
mov
or
jbe
and
push
lods
dec
push
imul
mov
push
pop
mov
mov
je
das
loopne
ret
and
sbb
mov
pusha
fmuls
into
xor
imul
mov
sbb
add
outsb
filds
dec
lret
loope
clc
shlb
mov
je
pop
xchg
push
sub
ret
sub
mov
mov
dec
pop
stos
inc
aam
xchg
pop
sbb
inc
sub
mov
add
push
and
adc
push
pop
xchg
test
or
mov
loop
enter
inc
dec
lret
or
data16
push
xchg
ljmp
pop
cld
ja
gs
out
add
aaa
mov
or
xchg
mov
cltd
jge
cwtl
xchg
movsb
xchg
pop
inc
mov
jmp
push
or
mov
xchg
mov
in
mov
and
xor
out
xchg
aam
pushf
jo
mov
aaa
cli
pushf
and
outsl
push
or
mov
jno
jnp
sub
jp
cmp
jnp
je
push
mov
inc
mov
cli
cmpsl
cltd
out
or
call
inc
out
xchg
and
jp
ja
loopne
sbb
xorb
int
rcll
cli
sbb
hlt
mov
inc
inc
mov
cli
pop
mov
inc
scas
jo
dec
and
insl
cmp
sbb
sub
loopne
adc
mov
scas
lcall
orl
ret
jbe
lea
add
fisttpl
lret
sbbl
jo
cmp
pop
inc
xchg
scas
cmp
or
imul
testl
pushf
aam
pop
and
jbe
adc
add
aaa
addl
adc
add
test
dec
adc
mov
xchg
subl
xchg
ret
fcomi
scas
ret
ja
inc
out
bound
mov
jle
lret
in
or
out
cld
lds
sub
xor
out
fdivrl
repz
fsubrp
and
add
cmp
jbe
or
lret
push
gs
or
mov
mov
aam
das
push
cmc
xlat
scas
jle
add
outsb
adc
mov
sub
adcl
lods
std
push
or
add
push
jo
call
rcll
call
and
push
mov
mov
es
jnp
adc
or
xchg
xor
sbb
ffreep
stos
xor
in
addb
jae
fadd
ljmp
into
sub
push
adc
jbe
pop
cwtl
or
xor
cmp
inc
push
stos
mov
mov
or
lea
xchg
lret
rcrb
jp
cmpsl
mov
inc
jge
ljmp
fiadds
mov
loop
popa
loope
pop
jb
aam
dec
dec
adc
lods
clc
sbb
icebp
stc
mov
xchg
adcb
adc
jl
in
adc
xor
xchg
xchg
pop
fs
sub
mov
mov
sbb
pop
xor
jp
xchg
sub
pop
test
push
and
es
xor
cmp
inc
cmp
in
pop
push
sbb
push
inc
dec
push
inc
popf
jmp
pop
mov
inc
jl
mov
push
icebp
xor
or
xorl
xchg
subl
xchg
ja
inc
arpl
push
addr16
pop
mov
cmp
mov
jb
jp
sti
cmp
or
mov
repnz
jl
or
xor
in
push
jae
and
movsl
push
mov
mov
push
or
jge
lds
sbb
fdivs
scas
mov
push
aad
idiv
push
dec
call
inc
lods
roll
fstpl
xor
ljmp
mov
push
nop
add
cmp
pop
hlt
incl
fcomip
fcmovnb
mov
xlat
stos
es
mov
cmc
or
stc
mov
dec
shrl
adc
outsb
imul
mov
mov
mov
mov
mov
inc
ljmp
insb
xchg
adc
push
adc
imul
enter
in
pop
or
xor
ds
sbb
adc
xchg
cmp
mov
jb
xor
cmp
ret
push
mov
jne
push
xchg
dec
add
fwait
mov
outsb
and
lret
aad
dec
loopne
pusha
xor
add
pop
imul
out
mov
int3
stc
sub
adc
or
sub
mov
das
mov
mov
cmpsb
ret
subb
iret
fs
cmp
data16
push
pushf
xchg
mov
pop
ljmp
clc
test
jbe
aas
cmp
cmp
pop
sub
lods
frstor
mov
xchg
adc
dec
sub
and
mov
adc
fsubrs
pop
and
dec
outsl
mov
jne
and
cli
iret
sub
insb
cmp
sub
adc
pop
pop
pushl
cmp
enter
sbb
mov
and
cmovge
stc
xchg
js
icebp
in
mov
mov
fistps
add
rorb
jmp
int3
push
sbb
sbb
xor
push
fsubp
sti
inc
pusha
ss
dec
aas
xchg
fs
adc
push
movsl
mov
xor
mov
test
mov
mov
cwtl
les
jns
in
lock
test
test
dec
sti
push
movsb
insl
mov
cwtl
and
fwait
out
mov
movsl
push
imul
pop
scas
fsubs
lcall
jns
lea
rorl
iret
das
sti
rorb
lahf
insl
test
dec
inc
repnz
pop
push
orl
jb,pt
mov
outsb
jno
add
fcoms
out
test
mov
push
xor
and
xor
mov
mov
jmp
jae
xor
lret
lock
leave
mov
icebp
fxam
ret
imul
jbe
pop
testb
int3
pop
jmp
jge
out
mov
cmpsb
jecxz
jge
popf
daa
dec
bound
sar
dec
js
adc
movhps
sbb
cmp
pop
testl
sub
and
or
daa
inc
cmpb
push
outsl
mov
fcoms
pop
fldt
dec
adcb
and
mov
cld
adc
jnp
mov
lret
jmp
lcall
popf
shrb
mov
cmpsb
andb
fcomip
mov
xchg
mov
sbb
std
insl
and
mov
mov
add
adc
je
arpl
ffree
fiaddl
sub
jnp
push
gs
or
adc
fs
add
cmp
cmp
stos
cmp
ret
jge
popa
pusha
insl
add
and
fldt
mov
xor
daa
pop
dec
push
or
andb
aam
add
lahf
repz
jne
jmp
jg
out
fs
loop
loopne
rcll
lret
and
dec
test
pop
and
mov
push
je
stc
mov
inc
adc
push
cmc
adc
jecxz
xor
or
imul
and
sbb
xchg
out
push
fwait
xor
fcomp
ret
cmpsl
add
mov
cltd
mov
fs
or
es
lods
cmc
lds
sahf
and
mull
cmpsl
cmp
jns
pop
rcr
pop
cltd
push
fs
insb
movsl
add
sahf
jbe
data16
xor
jle
or
xor
or
xor
xor
test
lods
xor
out
aad
push
addr16
mov
push
mov
imul
and
fdivrp
or
jno
lret
cmp
je
push
add
add
pop
ficoml
rclb
mov
bound
lods
cmp
add
xchg
leave
jnp
adc
insl
pop
ljmp
repnz
les
jne
push
mov
add
in
xlat
cmpsb
iret
pop
jmp
jo,pt
sub
or
inc
ror
jno
mov
bnd
adc
inc
xchg
aam
xor
mov
pop
pushf
ret
mov
cmp
cmp
xchg
cmp
lea
addl
and
jp
inc
pop
pop
push
pop
inc
pop
insb
xchg
mov
movsl
addl
inc
mov
sti
hlt
cmp
mov
fucomip
pop
stc
pop
jns
movsl
xchg
sub
or
into
mov
aam
iret
sbb
or
shl
fldl
add
push
in
mov
cmovo
cmp
dec
sbb
cwtl
push
dec
jl
popa
outsl
or
out
inc
lret
xorb
and
aas
sub
dec
push
test
test
xchg
mov
iret
jns
sbb
fsubl
inc
add
adc
mov
mov
aas
fs
bound
es
or
push
pop
lock
adc
xlat
dec
xor
fisttps
aaa
std
lcall
leave
xorb
adc
fsubl
mov
pop
daa
xchg
pop
sub
sbb
push
loop
cs
jmp
adc
jne
or
dec
add
xchg
cmp
dec
sbbb
lods
inc
cmpsb
div
push
jle
push
pslld
jg
fwait
mov
mov
or
xor
mov
mov
dec
cmp
sbb
es
mov
and
dec
gs
sbb
in
push
mov
stc
mov
mov
cs
pushl
jbe
lods
cld
push
cld
daa
stc
adcb
xor
pop
xchg
cmp
aad
fmull
adc
xlat
fmull
out
aam
cli
pop
xor
jg
cltd
ds
rcll
jbe
pusha
push
push
ror
dec
lock
jecxz
lea
call
inc
and
js
dec
loopne
lahf
lret
push
movsl
dec
loope
dec
std
imul
sbb
scas
mov
xchg
in
ret
xlat
jae
insb
inc
push
mov
testl
sub
fadd
xchg
pop
clc
mov
pop
or
das
lock
mov
inc
dec
and
xchg
dec
push
or
xchg
nop
fisttps
fdivr
sub
shr
cmp
sub
and
fadds
mov
fildl
adc
push
pusha
ficoml
sub
sub
arpl
sbb
jae
mov
or
imul
cwtl
dec
dec
adc
imul
lea
push
daa
in
mov
pop
jecxz
xchg
outsl
sub
add
sub
movsb
je
cmp
inc
and
jno
jne
mov
stc
imul
mov
std
xchg
incl
mov
add
daa
insl
add
popl
addr16
jp
pop
mov
repnz
add
movsl
negb
jmp
data16
ljmp
rol
pop
push
mov
add
push
xor
xchg
jae
and
lret
cltd
pop
mov
or
sub
shlb
xlat
mov
stos
in
out
pop
add
pop
stos
gs
cli
in
inc
enter
pop
adc
movsl
aaa
int3
add
or
inc
adc
ds
lea
jl
mov
icebp
fwait
cs
adc
daa
add
inc
mov
and
and
pop
je
cli
fdivrl
cs
jbe
mov
jo
lock
add
cmp
std
or
les
out
fbld
fcoms
mov
push
jne
or
sub
xchg
push
jo
loope
xor
xchg
inc
test
add
fstpt
outsl
jmp
mov
add
fs
xchg
xchg
cwtl
jecxz
pop
repnz
pop
xchg
lods
dec
cmp
jnp
rcrb
add
jmp
adc
outsl
shrl
jp
rcll
sub
xchg
mov
lret
or
jo
fwait
pop
xor
sbb
mov
jmp
stos
imul
jecxz
add
fisttpll
pop
test
fwait
dec
mov
sti
jne
sub
sbb
adc
push
aaa
enter
xor
sub
mov
inc
popf
add
loopne
jns
mov
inc
mov
ds
negb
jbe
push
push
adc
jecxz
pusha
push
push
cmovo
push
ficoms
fsubr
mov
mov
pop
iret
fwait
pop
mov
jbe
popa
mov
xchg
push
pop
retw
loopne
mov
sub
sbb
aas
outsb
mov
shlb
adc
xor
mov
mov
cmc
lea
mov
sbb
int3
lahf
ret
cld
rcll
cmp
lds
or
lahf
loope
adc
lea
in
pushf
fs
cli
mov
loope
and
jg
lods
mov
mov
shll
movsl
cmpsl
cmp
setb
add
xlat
push
xchg
inc
jo
mov
mov
std
jns
icebp
jecxz
inc
inc
dec
or
cmp
cmp
dec
lret
jne
filds
xorb
cmp
jnp
xchg
lods
push
aaa
in
dec
out
jne
mov
mov
lods
pushf
shlb
pusha
imul
push
mov
mov
sahf
out
int3
jl
add
jno
mov
push
in
ret
or
jmp
jge
push
pop
add
stos
dec
mov
scas
push
sbb
test
xor
std
lock
push
jp
cmp
push
psrlq
lods
enter
outsb
push
les
inc
pusha
adc
dec
pop
into
cltd
jb
test
lods
outsl
xor
cmpsb
addr16
mov
cli
dec
cli
neg
cmp
push
pushl
xchg
adc
dec
mov
fs
ss
repz
pop
adc
mov
add
sub
out
shll
setg
lods
out
int3
pop
icebp
or
cmp
popa
mov
dec
or
xor
xchg
outsb
pop
jb
ret
dec
outsl
mov
dec
push
mov
push
daa
pop
rcl
push
sbb
xchg
inc
movsb
xor
cmpsl
iret
insl
or
sbb
fdivs
add
cli
push
mov
jle
mov
int
lock
add
orb
pop
addr16
sbb
vsubsd
icebp
xor
sbb
movsb
stos
push
cmpsl
lea
rolb
mov
mov
fisttpl
ljmp
ret
stc
mov
xor
cmp
xchg
adc
dec
xchg
pop
out
xor
iret
dec
xchg
inc
out
enter
jg
push
or
dec
add
jl
inc
fcompl
inc
sbb
sarb
icebp
movsb
xchg
inc
push
sub
nop
icebp
fs
aad
iret
addl
sub
imul
arpl
adc
fisubrs
stos
pop
push
movsl
lret
insl
mov
js
xchg
aam
inc
outsl
sbb
ret
adc
sub
repz
inc
mov
popf
sub
outsb
and
cld
sub
xchg
jbe
cmpsl
mov
mov
cmp
out
in
cwtl
movsl
jo
test
push
stos
enter
cmp
into
mov
fnsave
and
jbe
or
int3
divl
and
lea
xorl
popf
faddl
jp
or
aaa
cltd
scas
adc
and
inc
mov
mov
adc
mov
jg
cmp
outsb
faddl
jl
scas
and
inc
cwtl
pop
xor
jl
xchg
push
xchg
pop
inc
add
sbb
test
lcall
ja
jae
inc
inc
push
add
fbld
xchg
add
imul
fisttps
xor
out
xchg
inc
dec
fbstp
jp
jmp
xchg
pusha
jbe
adc
fistpl
loop
ret
inc
pop
xor
das
filds
aas
test
in
aad
mov
dec
add
mov
mov
and
pop
push
xor
add
outsb
xor
mov
lea
cli
adc
imulb
mov
hlt
adc
push
stos
cwtl
ss
fsubl
jo
ds
mov
push
scas
out
cmpsl
sub
cmp
mov
insl
iret
daa
pop
mov
loop
cld
int3
ss
aad
dec
sbb
daa
leave
or
mov
and
xchg
inc
scas
stos
mov
fwait
mov
repz
xchg
pop
out
xchg
or
jg
rol
cmpsb
rep
and
push
es
push
in
add
divb
inc
mov
jb
or
mov
aad
dec
out
inc
cmp
fmulp
jge
and
scas
test
test
adc
xor
push
idivb
xchg
dec
push
loop
dec
cld
mov
xchg
lea
sbb
test
mov
cltd
and
notl
xor
aas
inc
jne
push
push
sbb
rorb
bound
inc
cltd
sahf
xor
ljmp
push
iret
mov
adc
lahf
mov
jnp
js
jmp
xchg
xor
adc
loopne
ja
ss
les
xchg
adc
pushf
shl
adc
inc
and
shrb
sub
xchg
jp
pushf
push
pop
loop
sub
push
test
pop
aas
mov
cmpsl
fbstp
cli
neg
or
cld
fs
mov
xchg
aas
jns
dec
dec
inc
add
loop
push
adc
adc
ljmp
sbb
jbe
push
pop
xor
xchg
jmp
pop
in
out
scas
mov
push
push
mov
xor
fs
cmp
hlt
in
mov
inc
inc
mov
test
cmp
jnp
mov
or
rcl
xlat
test
mov
int3
sbb
sti
in
adc
xchg
jecxz
roll
jge
out
dec
jge
and
test
mov
jle
dec
aaa
push
es
cmp
ja
or
xor
out
pop
adc
pushl
mov
sbb
adc
or
push
xlat
mov
test
ret
sbbb
push
sbb
push
lods
inc
insl
mov
mov
lods
stos
sbb
test
push
sub
test
cmp
push
adc
jge
or
sbb
mov
cltd
fidivrl
push
jp
inc
inc
negb
and
sbb
xchg
mov
loopne
enter
jge
jg
fcmovu
adc
mov
testb
lret
pop
xchg
sbb
pop
or
in
sahf
jae
pop
cmp
adcb
sub
xchg
dec
lret
imul
push
lods
test
ljmp
add
or
test
xchg
out
movsl
lock
xor
xor
jno
xor
test
ror
mov
aad
sub
mov
testb
xchg
mov
in
mov
pop
cmpsl
stc
adc
cli
adc
adc
stos
mov
push
xchg
pop
push
xor
jmp
pop
stos
cltd
daa
dec
aad
add
add
ljmp
out
dec
or
imul
inc
or
jmp
sub
mov
jmp
xor
inc
insb
cmpsb
in
mov
sti
push
adc
mov
sub
jae
mov
mov
mov
mov
mov
insl
sbbl
mov
sbb
faddp
ljmp
shlb
iret
out
mov
jge
int
aaa
in
into
stc
lret
sub
lds
or
and
rcl
pop
jns
jo
inc
gs
push
scas
xor
fwait
ja
pop
sahf
dec
loop
mov
xor
xchg
inc
outsb
inc
js
cli
stos
insl
cmp
ja
iret
sbb
xchg
in
fldt
idivl
lahf
xchg
mov
mov
adc
push
cmp
test
lret
cli
cwtl
in
loopne
mov
or
sub
jmp
setg
mov
xchg
and
in
add
jmp
jecxz
adc
incb
daa
lods
sahf
add
push
dec
push
repnz
testb
mov
shlb
in
fs
loop
xchg
in
xor
add
adc
push
push
clc
mov
roll
ss
fnstcw
jbe
addb
out
sbb
sub
popf
adc
adc
pop
sub
dec
mov
sub
mov
scas
loop
lds
push
jno
sbb
rcll
xchg
je
sbb
stos
jo
js
mov
cld
push
cmp
adc
loopne
js
push
stc
addr16
jne
inc
cmp
cltd
jecxz
push
xchg
xor
cmpsb
xchg
mov
insl
jp
lret
orb
inc
int
out
pop
shll
bnd
in
pusha
cmovge
ss
js
mov
stos
jmp
setl
lcall
jno
xchg
dec
add
jg
xor
dec
cmp
xor
mov
sub
fisttps
cmove
mov
mov
cmp
dec
sub
pop
in
xor
xchg
xchg
in
stos
or
jle
clc
xor
adc
lcall
leave
sahf
and
imull
test
push
shlb
jno
and
mov
js
xlat
jecxz
addr16
fs
test
arpl
inc
aaa
xchg
pop
imul
cmp
fcmovu
popa
mov
adc
push
sti
push
or
in
ds
jl
imul
mov
mov
pop
dec
aas
lods
bound
loope
mov
lcall
cs
stos
fsts
ss
jmp
lods
pop
outsb
pop
fsubl
xlat
and
fistpl
and
push
cmpsl
push
orl
mov
adc
sbb
shld
inc
pop
int3
popa
push
push
sahf
pop
xchg
out
sti
push
sub
xchg
push
icebp
loopne
sub
push
movsb
cwtl
jp
mov
dec
jb
mov
dec
or
jno
jecxz
mov
push
dec
out
aad
xchg
jle
cmpsb
and
ret
adc
inc
pusha
arpl
loopne
les
pop
sbb
fnstcw
dec
gs
mull
sbb
pop
cwtl
loop
jo
jge
sbb
pop
das
pop
test
mov
pop
int
movsb
fimuls
or
cwtl
hlt
add
sbb
shrl
mov
inc
stc
pop
cmpsl
in
dec
addl
pusha
sbb
mov
iret
and
xor
ret
call
inc
mov
lahf
enter
mov
xor
and
jge
orl
add
adc
sub
aam
mov
aaa
mov
add
cmp
test
pop
xchg
stc
imul
nop
adc
add
dec
in
mov
rcll
loop
ds
add
adc
jbe
fidivs
lds
std
pushf
jl
cli
inc
aam
mov
cmpsl
xchg
sub
push
adc
mov
sub
leave
pop
mov
sub
mov
mov
add
and
add
adc
cmp
mov
divb
rcl
jmp
fwait
dec
lret
sbb
mov
sbb
and
loope
push
mov
cwtl
sub
fmul
ds
and
dec
fimuls
sub
pop
cmp
or
aaa
cmpsl
cmp
mov
cmp
faddp
cld
jl
xor
fs
mov
das
sti
ret
aad
xchg
jmp
cltd
lds
adc
js
dec
cmpsl
repnz
or
out
mov
decb
push
jle
testb
inc
mov
xchg
mov
movsb
ss
jp
ljmp
subb
test
sarb
or
mov
rcr
and
cmp
scas
out
imul
push
mov
daa
fdivl
es
repnz
andl
iret
insb
imul
cmpsb
mov
rcll
cwtl
aas
lea
adc
jl
mov
mov
push
scas
das
add
xchg
and
inc
adc
aam
xor
sti
jecxz
push
inc
inc
stos
rcr
cli
and
mov
xor
sub
and
jge
and
fistpl
pop
fucomip
std
lret
pop
sbb
in
sahf
movsl
and
jno
sub
iret
fmul
cmp
push
jns,pn
push
inc
pop
sbb
into
out
dec
sbb
out
or
dec
mov
add
rcll
mov
ret
test
pop
jo
mov
xchg
adc
xor
int3
lds
mov
fdivr
pop
jmp
jl
jbe
shll
mov
mov
mov
jmp
mov
es
push
cmpb
aaa
push
rcrl
arpl
inc
jle
lock
dec
enter
rorl
lcall
xchg
or
ret
cmp
pusha
jl
jno
pop
lret
or
fwait
dec
fsts
test
addb
mov
sub
push
adc
cmp
or
add
loope
out
and
test
push
lret
mov
or
inc
fisttpll
add
cmc
insb
loop
clc
aam
jecxz
rcr
call
and
cmp
shll
push
movsl
jl
hlt
cmpsl
inc
popa
xchg
dec
stc
push
cmpsb
xor
lret
cmp
mov
xor
sbb
loop
dec
mov
mov
lods
sbb
dec
mov
and
orl
adc
push
inc
dec
ja
cwtl
push
cli
xchg
imul
lret
shlb
add
jge
pop
dec
adcl
les
outsl
pusha
out
mov
push
movnti
pushf
cmp
cmp
rcrb
sub
cs
popa
loopne
push
stos
jae
and
sub
adc
inc
push
mov
jecxz
sbb
int
sub
movsl
sbb
sub
pop
faddp
mov
aam
test
push
cmp
or
stc
vmovshdup
addb
add
cltd
outsb
faddl
mov
xchg
lret
setbe
hlt
rorb
push
call
xor
jno
loope
iret
daa
ds
je
inc
imul
dec
sahf
add
arpl
mov
sbb
repz
inc
jne
enter
in
addr16
rclb
and
insl
ljmp
sub
mov
push
aam
cmp
popf
mov
jmp
mov
mov
fwait
das
xor
sub
fs
sub
ljmp
cs
mov
jg
dec
sub
jo
adc
or
rcrl
ja
jbe
adc
jle
xlat
push
ret
int3
adc
int
clc
out
enter
inc
ja
in
bound
dec
xchg
mov
je
call
pop
mov
sub
jne
movsl
dec
outsb
push
iret
jge
lods
and
adc
adc
cmc
xchg
push
inc
int
xchg
jb
mov
adc
pop
mov
pop
loope
sbb
cli
jecxz
nop
sbb
adc
insb
bound
xchg
sub
in
clc
vandnps
mov
sbb
leave
add
sub
popf
push
jge
xchg
push
or
adc
bound
dec
lret
sub
sti
mov
pop
mov
cmc
mov
sbb
dec
movsl
enter
arpl
inc
imul
lret
mov
ret
ss
test
push
jo
xor
jbe
mov
mov
int3
test
shll
out
pop
push
leave
pop
add
mov
push
imul
shl
stc
adc
lret
cli
jmp
mov
insl
pop
clc
test
repz
add
cli
in
push
cmp
neg
loopne
loopne
sti
test
cmp
loopne
in
popf
mov
mov
pop
inc
push
lea
pushf
cmp
jl
stos
mov
mov
cmp
inc
and
or
aas
in
int
push
sub
xor
movsl
adc
jns
lock
enter
adc
dec
mov
adc
or
xchg
std
cli
xor
sub
push
mov
pop
jg
fdivrs
xchg
sbb
mov
rcll
arpl
pusha
je
xlat
scas
pop
adc
lea
or
stos
add
scas
adc
fistl
pop
imul
xchg
dec
xchg
inc
movsb
adc
out
mov
or
cltd
sbb
dec
xchg
das
mov
mov
adcb
arpl
into
push
mov
adc
std
inc
ja
int3
inc
imul
xchg
js
into
xorl
pop
enter
push
jb
or
jb
fwait
cmp
pushl
enter
inc
popa
jl
cmp
or
lcall
or
pop
jl
clc
fisttpll
jb
fistl
and
xor
test
add
add
adc
call
out
fnsave
cs
loop
sahf
mov
xchg
sbb
es
cwtl
mov
rcr
sbb
daa
xor
jecxz
push
mov
xchg
test
cmpsl
enter
add
mov
push
repz
insl
repz
lret
sub
int3
rorb
xor
andb
mov
cmp
loope
lret
cmpsb
xorb
and
jle
mov
les
pop
or
fwait
push
nop
clc
fcompl
and
xchg
jge
lods
jg
insb
or
inc
cs
cmc
pop
xor
jno
pushf
shrl
push
and
test
pop
cmp
call
lock
inc
or
inc
sti
xchg
inc
add
mov
jbe
aad
notb
scas
fcom
push
xchg
push
mov
std
xlat
movsl
cmp
shlb
add
sub
add
jl
mov
hlt
inc
jbe
inc
add
nop
cmp
dec
cli
xor
ljmp
and
pushf
pusha
movzbl
and
roll
xor
inc
aas
ret
inc
sub
and
andl
std
roll
notl
shlb
ljmp
aad
cmpb
dec
or
sahf
mov
pop
and
ret
xchg
repnz
mov
mov
xor
fisubs
roll
lock
and
or
out
push
rorl
imul
sti
pop
sbb
int
shr
mov
mov
mov
push
inc
outsl
fwait
mov
sbb
xchg
je
imul
xchg
leave
jp
cmp
add
sbb
fisubs
push
add
mov
jae
fdivrs
xchg
lret
xchg
sar
aas
ret
scas
lods
bound
sarb
add
stos
sub
xor
pop
sbb
fnstenv
int
push
mov
or
outsl
jp
and
xor
push
repnz
xchg
lahf
sbb
std
and
mov
cmp
xor
mov
inc
push
mov
add
mov
xchg
pop
jp
adcb
jno
loopne
jo
int3
in
and
jg
loopne
mov
cwtl
adc
pop
xchg
daa
push
jle
xor
jnp
sub
popa
jmp
jge
jb
data16
mov
xor
jns
sub
mov
and
sbb
mov
xchg
cmc
cmc
inc
out
push
xlat
repnz
push
pop
mov
inc
adc
lcall
scas
stos
mov
jb
mov
and
jns
sbb
adc
mov
cli
fiadds
int3
or
xchg
aaa
xor
mov
addr16
aad
stos
cmc
ret
xchg
fdivl
sub
mov
push
add
ret
out
call
lret
test
lcall
inc
test
fistl
xlat
icebp
cmp
les
mov
loop
adc
int3
int3
or
in
push
jecxz
add
jl
cmp
loopne
or
mov
jle
cmp
fstpl
enter
loop
pop
push
mov
lahf
and
dec
outsb
call
sub
rcrb
mov
out
ss
inc
adc
imul
jns
out
outsb
pop
mov
push
cmpb
jge
sub
addl
mov
pop
or
or
jnp
mov
ljmp
orl
imul
mov
loope
dec
mov
mov
sbb
pop
jo
movsb
leave
icebp
rcrb
loope
out
imul
test
push
and
iret
and
ss
movsb
js
cmp
clc
leave
sub
xchg
bound
mov
cmp
mov
jg
outsl
out
loope
sub
aas
or
mov
cmp
imull
dec
push
or
push
inc
mov
xor
mov
aaa
loopne
les
sub
push
pop
and
fdivrs
xchg
pop
jecxz
mov
rcrl
jl
outsl
dec
cmp
popl
cwtl
cld
dec
mov
or
aam
push
lods
push
fsubrs
sub
repz
rolb
mov
movsl
hlt
roll
dec
lahf
cmp
xchg
popa
jnp
inc
mov
aad
xchg
dec
rcrb
and
cmp
cmp
mov
dec
hlt
and
mov
adc
arpl
pop
testb
insl
or
pop
and
jg
mov
pop
push
mov
imul
cmp
sub
in
rorb
inc
push
fisubrs
sub
dec
bound
mov
rcr
cwtl
aaa
fs
mov
push
pmulhuw
adc
cs
test
loopne
xchg
lcall
pusha
cmpsb
adc
insb
popa
loopne
addr16
mov
cwtl
repnz
sti
out
fistpll
lret
ljmp
and
add
jae
leave
mov
xchg
lret
lret
or
and
mov
cs
scas
mov
aad
movsl
xor
in
inc
fwait
lods
decb
dec
lock
mov
out
pop
sbbl
cmp
adc
jecxz
aas
shl
jle
dec
adc
jecxz
out
out
iret
jmp
popa
inc
xor
fwait
gs
aas
fcmovbe
sti
xchg
jg
data16
les
add
mov
js
dec
rolb
mov
dec
rorb
dec
pop
pop
dec
enter
mov
cmp
mov
in
dec
mov
jns
push
das
out
jl
fidivl
std
adc
inc
jno
ja
pop
push
mov
cli
aaa
xor
sahf
lock
inc
stc
jns
push
mov
mov
push
cwtl
sub
popf
jne
cmp
aaa
les
pushf
in
fimuls
hlt
ss
adc
adc
sub
cmp
mov
in
mov
arpl
outsl
xor
mov
lret
pop
inc
push
jmp
pop
mov
xor
mov
fiadds
pop
in
mov
mov
push
pop
push
or
in
loopne
mov
inc
aam
decl
jbe
pop
adc
popf
inc
repnz
sahf
scas
dec
mov
add
dec
loop
sbb
xchg
jge
bound
jo
dec
addr16
push
leave
repz
pop
mov
pushl
sbb
ret
add
shlb
lahf
lcall
shlb
fdivr
pop
sbb
lods
xchg
ret
mov
add
stc
cltd
scas
lahf
inc
lret
dec
andb
imul
imul
out
lock
dec
movsb
jo
enter
mov
jg
cmp
xor
mov
je
xchg
popa
xor
mov
jmp
jg
xorb
cmp
cwtl
scas
add
pop
cmp
cwtl
jns
dec
mov
popa
jnp
mov
mov
pushf
adc
clc
outsl
cmc
jno
pop
dec
shl
jl
or
pop
xor
and
sub
cmpsl
lods
in
shlb
xchg
lods
sbb
xor
lret
icebp
jb
xor
jne
out
xchg
idivb
inc
cmp
roll
mov
mov
adc
mov
les
popa
fstl
mov
xlat
ret
loope
push
cs
sub
adc
movsb
daa
test
inc
or
dec
addr16
cmp
or
fstps
lret
lret
clc
xor
dec
and
jl
ss
jnp
pop
leave
jno
pop
pop
cmp
mov
pop
mov
adc
fcompl
cmp
dec
cli
cld
stos
xor
mov
out
in
mov
cld
cmp
push
pop
sbb
xchg
cmpsl
jge
pusha
mov
test
mov
jmp
jg
jecxz
mov
shl
out
sbb
loope
xlat
bound
push
add
xor
clc
dec
int3
xchg
lock
pop
jns
jb
xlat
inc
insb
add
cwtl
nop
hlt
cmc
mov
inc
add
rol
jmp
pop
sbb
pop
idivl
pop
lods
or
inc
pop
inc
fiaddl
out
pop
mov
or
xor
lods
cmpsb
inc
orl
inc
ja
inc
cmp
stos
stos
mov
in
aaa
add
popf
sbb
jno
pop
pop
push
dec
sbb
mov
xchg
sub
das
test
outsb
std
fs
decl
repz
push
adc
sbb
iret
fbld
xor
sbbl
pop
push
loope
inc
pop
cmp
dec
jns
xor
rclb
xor
push
mov
dec
adc
inc
and
mov
jne
movb
add
mov
mov
fimuls
and
jo
pop
aaa
push
jbe
mov
jp
inc
icebp
pop
mov
negb
sub
pop
fsts
sti
push
mov
push
jecxz
stos
xchg
test
jae
jge
in
and
cmp
xchg
mov
push
addr16
inc
rcll
mov
lods
pop
mov
ss
xor
push
lcall
xchg
xor
push
iret
test
cwtl
xchg
xchg
xchg
insl
jl
outsl
add
or
stc
andb
ret
in
nop
mov
mov
mov
bound
nop
lret
xchg
xor
xchg
adc
jo
xchg
lds
fildll
rorl
inc
sub
push
mov
xor
addr16
push
shll
mov
push
mov
mov
add
cld
nop
xchg
sbb
push
or
lods
out
mov
cmp
out
add
loopne
mov
cmpl
dec
push
rcrb
rcll
sub
push
mov
cmp
adc
out
or
xor
addb
ftst
roll
or
insl
repz
punpckhdq
test
jl
add
and
lret
sub
mov
sbb
mov
fnstenv
imul
ljmp
xchg
ret
mov
jo
jns
cmpsb
xor
cmp
push
ss
sub
lcall
mov
ljmp
jg
dec
mov
leave
push
push
arpl
xchg
cmp
jl
cmpb
iret
addb
ret
hlt
imul
inc
jnp
fisubl
je
xor
mov
cltd
leavew
jge
sar
es
pop
push
mov
imul
push
dec
mov
test
pop
jo
pusha
push
xchg
in
shrl
add
es
jl
pop
mov
out
push
mov
inc
popa
mull
sbb
dec
and
pop
or
int3
frstor
and
inc
push
stos
adc
lret
mov
out
sbb
test
mov
mov
push
cmp
mov
push
inc
adc
loope
jmp
dec
cli
mov
xor
ja
stos
cmp
xchg
cmp
add
es
fistpll
pop
out
sub
and
cmp
sub
xor
into
test
dec
sub
sub
lcall
mov
shl
dec
popl
fstp
and
cmp
out
add
loope
dec
out
pop
push
ss
hlt
popa
mov
mov
mov
push
mov
inc
out
sbb
mov
popf
jae
pusha
push
ficoml
or
test
adc
adc
fs
mov
pop
rolb
stos
xlat
addr16
dec
stos
adc
insb
outsb
mov
pusha
xor
or
sbb
lahf
dec
or
shll
jecxz
in
pop
out
pcmpeqb
mov
mov
outsl
add
mov
push
outsl
mov
xor
gs
ds
and
sbb
jg
aam
iret
lret
ja
add
sti
sbb
xchg
inc
push
mov
lds
inc
dec
cmp
mov
xchg
das
repnz
or
int3
sub
pushf
mov
lret
jno
cld
outsl
data16
repnz
sub
js
or
push
fadd
cmp
hlt
cmpl
sub
mov
mov
es
sub
jmp
addr16
bound
mov
imulb
sub
or
jo
add
or
shlb
out
cs
push
jb
dec
ljmp
mov
repz
mov
xor
jge
adc
sarl
out
xor
cwtl
push
jo
add
psrlw
int
movsb
test
in
add
in
and
inc
pop
call
test
icebp
xor
mov
or
popa
call
and
cmp
stc
push
test
fs
into
stos
mov
push
dec
shr
dec
das
jle
push
xorb
sbb
idivb
popa
sub
xor
rol
push
push
in
xor
sub
movsl
stc
inc
popa
push
add
jecxz
fcomps
cmp
test
xor
leave
icebp
popf
inc
clc
fnsave
mov
out
sahf
adc
test
or
dec
cmpsb
cmp
call
fisubrl
and
fucomp
jle
push
cwtl
mov
lret
fstpt
xor
mov
jmp
mov
inc
jb
mov
pop
dec
notb
jle
es
pop
lahf
xlat
loopne
aas
pop
mov
mov
js
sub
xchg
mov
dec
xchg
mov
sbb
pusha
cli
cmpb
add
sarb
pop
and
ss
or
add
cmp
lret
aam
rolb
stc
xchg
mov
ljmp
mul
and
out
ficompl
cmpsb
mov
xor
sbbl
xchg
or
mov
mov
es
iret
mov
push
mov
adc
xchg
inc
sbb
decl
jns
mulb
sbb
jge
xchg
test
iret
mov
jmp
sbb
sub
rcrl
fimuls
repz
mov
mov
mov
cwtl
insb
sub
test
pop
xchg
mov
test
cmp
inc
inc
inc
cs
cli
and
jmp
or
insl
dec
ret
cmp
xchg
ja
int3
sub
jo
sahf
adc
mov
clc
andl
jo
inc
inc
cmpsl
dec
test
test
je
push
stos
aad
outsb
call
mov
mov
sub
inc
out
int3
mov
stos
lahf
lock
xchg
pop
mov
jno
xchg
ljmp
jge
push
xchg
pop
faddp
add
clc
cmp
ljmp
xor
mov
adc
mov
push
in
test
outsb
jnp
dec
popa
adcl
jne
sahf
movsl
insl
inc
cmpsb
pop
ret
rol
ret
inc
fnstcw
stos
ds
and
dec
push
cwtl
pop
out
adc
push
jmp
add
lock
mov
call
fisttps
orl
scas
scas
outsb
add
mov
les
mov
sti
rcl
fsubp
test
xlat
hlt
cmp
jl
leave
adc
outsl
test
pop
xchg
or
cmp
shlb
stc
bnd
jne
pushf
je
outsl
fs
idivb
repz
sbb
push
sbb
xchg
mov
scas
xor
test
or
sbb
sub
iret
push
lock
stos
mov
mov
mov
icebp
or
fbld
pop
adc
xor
cmc
mov
loopne
les
clc
aam
int3
cmp
jecxz
aas
adc
sub
lahf
sbb
sbb
ret
repz
mov
sub
fwait
arpl
decl
push
repnz
cs
negb
mov
mov
js
rcrb
mul
mov
jmp
ret
cmp
jo
push
js
pop
sbb
pop
pusha
mov
xchg
push
push
pop
or
popl
pop
ljmp
in
ret
xchg
outsl
rorb
scas
fldl
push
int
test
sub
xchg
sub
inc
pop
add
or
or
loope
lock
ds
nop
mov
aaa
out
lret
inc
mov
fbld
out
je
aas
push
jne
fldenv
imul
fwait
test
lods
push
add
rcl
inc
insl
ljmp
adc
scas
mov
adc
add
rorb
andl
or
sbb
outsl
imul
orl
sbb
pop
mov
pop
and
xorl
lcall
pop
cmp
push
mov
jo
repnz
add
dec
loopne
and
nop
ss
jnp
pcmpgtw
mov
inc
stos
push
dec
xchg
into
aas
ljmp
lcall
lret
int3
push
mov
iret
xchg
outsb
xchg
mov
lds
cmp
xchg
add
or
lea
lods
pop
arpl
nop
mov
stc
mov
out
and
push
imul
cmp
adc
xor
leave
fdivrl
sbb
mov
aad
mov
jnp
sub
push
mov
and
hlt
dec
inc
cld
mov
push
fs
dec
ret
ljmp
pop
push
and
xchg
pop
jno
adc
dec
test
subb
sbb
push
mov
mov
inc
pushf
stc
and
jne
test
mov
out
sar
js
sahf
xor
ja
je
test
inc
cs
mov
stos
add
movsb
jecxz
loopne
lods
stc
mov
dec
hlt
or
scas
pop
les
rorl
mulb
inc
loop
filds
xchg
adc
sbb
in
mov
cmpsb
add
mov
icebp
ljmp
ficomps
sbb
je
jle
dec
cli
sbb
ja
arpl
ja
mov
mov
or
aaa
sbb
sarb
pushw
sub
sub
dec
jae
mov
addr16
pushf
fadds
pop
in
or
ja
mov
mov
addr16
pusha
jne
nop
add
int
or
adc
xchg
dec
movsb
inc
jns
hlt
andb
inc
pop
dec
jmp
inc
jmp
inc
jmp
aam
mov
cmpsb
add
or
out
test
mov
ss
rcrb
and
mov
cmp
ljmp
sarb
mov
inc
mov
xchg
fnstenv
adc
sbb
adc
jns
add
pop
std
rcrl
imulb
add
cwtl
mov
xor
int
shll
scas
stos
push
ffree
adc
sbb
xor
push
push
dec
jecxz
rolb
lock
jne
fcomp
loope
dec
xchg
into
xlat
add
andl
sti
push
clc
dec
pop
out
xchg
sti
mov
adc
cmp
leave
mov
mov
and
popa
cmpl
aam
std
adc
out
pushf
mov
addl
dec
jge
insl
leave
daa
adc
in
jbe
sub
rorl
decb
pop
int3
sub
mov
es
popf
pop
aam
mov
xchg
xorl
add
cli
mov
and
push
test
iret
inc
popf
sbb
cmp
cli
pmuludq
mov
dec
cmc
pusha
cmc
cmp
xor
mov
cmp
adc
cmp
sarb
sbb
cmpl
mov
cmp
mov
and
adc
pusha
test
test
jle
pop
or
inc
addl
adcb
jecxz
sti
push
fwait
mov
cmp
sbb
cltd
mov
shlb
rcl
jne
out
pushf
mov
push
aas
hlt
into
cmpsl
add
add
out
and
jmp
punpckhbw
je
push
imul
dec
daa
cli
int
and
ret
out
mov
aad
dec
je
cs
jnp
ret
jg
and
xchg
das
int3
outsl
mov
sub
pop
lds
jl
test
sbb
xchg
pop
add
cmp
addr16
cli
mov
or
les
dec
pop
adc
mov
mov
jno
std
mov
insl
pop
or
xor
pop
mov
xor
in
test
xchg
mov
into
lock
jb
fildll
lret
push
xor
shlb
rcl
mov
jmp
jnp
repz
add
ja
pop
pop
fcmove
jl
or
xor
xchg
jbe
inc
lds
lods
loop
sti
pop
add
sub
mov
inc
mov
jb
jns
outsl
sbb
in
dec
xchg
in
mov
fs
into
scas
adc
dec
add
stos
mov
xchg
xor
sub
jge
dec
stc
pop
mov
mov
dec
or
pop
out
push
cmp
lret
sbb
out
pop
adc
jnp
mov
iret
xchg
in
dec
loope
popf
cmp
mov
ss
stc
dec
test
pop
daa
dec
lahf
lcall
in
xchg
stc
jne
xchg
cli
out
in
imul
pushf
sub
mov
and
mov
jle
or
js
or
pop
dec
daa
xchg
cmp
xchg
push
dec
adc
sahf
push
dec
mov
test
or
lret
cmp
roll
bnd
dec
mov
inc
out
loope
push
inc
sarl
inc
pop
pop
into
subb
push
fwait
testl
sbb
ljmp
inc
mov
push
out
fdiv
mov
mov
cmp
jg
int
jg
xor
jp
lds
es
movsl
push
mov
roll
push
xchg
push
lock
push
out
jo
iret
inc
pop
sbb
std
push
mov
and
and
jns
push
lret
dec
lret
fsubl
push
xchg
jl
mov
inc
sbb
fdivrl
into
fsubrs
sbb
fdivrs
mov
push
std
lods
shll
pop
sbb
icebp
pop
mov
call
push
ljmp
dec
lcall
cmp
or
movsb
hlt
pusha
fwait
aaa
dec
add
mov
pop
push
and
es
sub
push
jl
xor
xor
ret
or
xor
add
lods
xchg
inc
xchg
scas
inc
das
pop
ficoml
xchg
sbb
xorl
sbb
pop
sarb
and
push
insl
dec
or
cmp
iret
pop
add
mov
testb
aas
stos
test
outsb
jge
push
or
dec
in
rclb
cmp
data16
pop
aad
ret
out
mov
hlt
fs
shll
jb
xor
xor
aad
push
popf
sbbb
cmpsl
adc
jbe
inc
inc
inc
cmp
cli
jbe
sbb
daa
or
push
lock
imul
cli
pop
mulb
mov
mov
mov
dec
pop
sbb
icebp
and
push
imul
jne
ret
dec
out
data16
pusha
sbb
xchg
xchg
sbb
out
adc
call
jno
ljmp
mov
push
cmp
and
fisttpll
daa
das
mov
mov
mov
out
pushf
fcomps
xchg
push
icebp
adc
adc
rcrb
addl
dec
stos
out
push
jae
sbb
push
leave
movsl
sub
lds
jp
sub
xchg
xchg
push
cld
and
add
pop
imul
shlb
aaa
sarb
inc
ror
cmp
test
mov
call
push
popa
jno
imul
and
dec
mov
enter
dec
adc
cmp
push
es
sahf
jmp
orl
mov
xchg
arpl
jne
dec
data16
xchg
icebp
xor
pop
ljmp
lahf
sarb
pop
pop
int
in
jnp
shll
xchg
or
das
xadd
dec
rorb
cmp
xchg
mov
je
int
imul
data16
cmpb
dec
push
mov
pop
and
xchg
xchg
pop
pop
inc
dec
pop
sarl
loope
lea
and
pop
mov
push
dec
call
jns
mov
mov
jl
mov
lcall
dec
stc
in
mov
faddl
fcompl
arpl
cmp
xchg
fwait
jp
ljmp
or
mov
mov
mov
shll
push
shl
cmp
mov
shl
add
mov
mov
jmp
popf
push
sbb
test
lret
sti
fldenv
push
dec
mov
call
push
cs
jno
popf
repnz
popa
mov
inc
mov
push
mov
test
xchg
mov
leave
lods
cmp
xchg
jl
rcrl
sbb
std
or
pop
in
leave
cltd
pop
loope
fstps
and
insb
xchg
push
add
xorl
dec
sub
icebp
sbb
mov
xchg
adc
xchg
ficoml
xor
xor
push
xor
popf
insb
outsl
es
shld
clflush
movsb
sub
xchg
pop
xor
leave
adc
decl
mov
mov
roll
mov
mov
mov
pop
pop
stc
lods
pusha
dec
iret
enter
mov
ljmp
les
pushf
out
mov
sbb
pushf
cli
and
sub
dec
jge
sahf
cmp
sub
out
jne
ja
shrb
mov
mov
fdivl
push
mov
push
stos
push
dec
icebp
in
addr16
sbb
and
out
jb
in
out
xchg
loopne
dec
mov
inc
cld
xor
lret
in
jnp
xchg
push
stos
adc
sub
mov
gs
jnp
out
xor
inc
fs
clc
das
push
pop
or
jmp
out
sbb
sub
cli
faddl
and
push
jb
xchg
cli
sub
popf
or
sub
xchg
subb
push
stos
sbb
in
cli
or
xchg
inc
icebp
sbb
fnstsw
sub
jns
xchg
mov
adc
or
es
xchg
lahf
aas
jnp
cmpsl
gs
push
xor
mov
das
aad
inc
push
lods
cld
ss
or
arpl
das
in
pop
sbb
daa
ja
cltd
dec
cmpb
arpl
add
mov
or
mov
sub
popf
push
lret
pusha
clc
iret
cmp
push
iret
and
jle
mov
popf
aam
or
inc
imul
xchg
sub
adc
scas
and
cmpsb
pop
out
decb
pop
inc
popa
out
insb
mov
rcrb
int3
cmpsb
pop
xchg
fwait
mov
adc
ljmp
push
push
cmp
inc
repz
mov
mov
add
jl
cld
dec
and
aas
xchg
push
jg
adc
mov
mov
popa
mov
stc
insl
xor
pxor
pop
or
cwtl
dec
repz
popf
aad
push
push
jmp
out
push
das
lea
mov
pop
test
sub
jo
enter
add
insl
jp
xchg
push
pop
daa
mov
add
fstl
xor
and
sbb
ror
in
cmp
pop
fs
stc
lahf
iret
mov
pusha
push
sarl
push
insl
ss
adc
fsubrs
fcmovb
leave
xor
jns
jae
push
cmpsb
mov
push
mov
pop
test
lcall
mov
iret
mov
cmp
sarl
imul
andl
pusha
xor
push
push
xor
xchg
clc
sub
push
in
cmp
dec
push
clc
sbb
cmp
xchg
scas
push
push
test
jmp
jbe
xor
pusha
jno,pn
push
or
sbb
clc
lods
xchg
mov
push
out
add
orl
push
push
es
and
sbb
mov
imul
xchg
push
inc
inc
cmp
js
xchg
mov
mov
stos
cwtl
inc
sbb
sti
mov
pop
scas
pop
xlat
rcrl
xchg
fstl
jb
fcmovnu
fisttpl
rcll
cmp
aaa
ljmp
mov
xor
adc
cmp
test
pusha
or
jns
int
mov
aaa
push
ljmp
xlat
pop
jmp
ja
pop
sahf
xlat
mov
int
test
adc
jb
sub
fldz
test
arpl
fildl
xchg
xchg
inc
push
sahf
gs
insb
sbb
bound
mov
mov
inc
jmp
sbb
add
lods
mov
pusha
into
pop
outsl
pop
pop
dec
dec
sub
cmp
roll
inc
mov
xchg
int3
stos
dec
mov
ds
sti
mov
lock
push
lock
shld
xchg
pushf
sbb
xlat
inc
pop
pop
std
sub
movsl
xchg
adc
cmc
jb
movsl
add
pop
push
mov
lods
dec
inc
aam
lea
lock
dec
mov
inc
jg
lahf
dec
loopne
mov
in
adc
iret
jbe
lahf
loop
adc
imul
stos
or
roll
out
rorl
daa
rcrl
push
mov
call
or
les
cltd
stos
int3
add
xchg
addb
andb
mov
xchg
cmp
in
xor
ret
cwtl
std
or
jnp
roll
aad
aas
test
push
pop
rolb
xchg
iret
sarb
jnp
push
mov
adc
rorl
shrb
mov
cmp
lods
shlb
push
xchg
repnz
int
push
pop
or
les
mov
pop
push
btc
inc
imul
mul
mov
adc
mov
sbb
lahf
rep
xor
or
mov
push
ficompl
test
ret
inc
pop
mov
cmpsl
xor
daa
cmpsl
call
loope
out
mov
add
das
mov
sti
pop
mov
mov
push
iret
andb
cmpsl
add
test
divl
pop
dec
add
mov
rcl
xor
shll
clc
lock
sbb
insl
aaa
and
insb
out
inc
add
xchg
sbb
in
add
out
jle
sbb
je
scas
cmpsl
in
xlat
xchg
jl
shll
mov
test
mov
xor
sbb
jecxz
jmp
sub
mov
test
decb
jl
and
mov
iret
dec
pop
push
jge
repz
jmp
bswap
clc
inc
pushf
dec
and
dec
jne
pop
rcll
rcl
pop
sar
lds
and
inc
mov
mov
and
test
xor
xchg
sub
es
jno
cmc
push
int3
xchg
inc
fwait
push
jo
test
mov
xorb
clc
push
sbb
pop
jne
or
mov
aas
pop
and
jnp
mov
mov
dec
mov
mov
lock
jp
mov
rclb
dec
inc
aam
dec
testl
xor
cmp
xor
rcl
movsb
fisttps
fnstsw
pop
fucomip
sbbb
pop
out
sbb
push
ss
sub
leave
sbb
outsb
mov
fiadds
jle
out
je
pop
xchg
adc
pop
jmp
cld
pushf
inc
test
add
es
lods
push
call
movsb
js
push
cmc
push
sub
lods
xchg
mov
add
or
subl
shll
cs
xchg
test
pop
in
sahf
push
outsl
cmp
movsb
push
pushf
xor
and
popf
pop
jae
cltd
and
js
adc
cmp
pop
aam
dec
xor
adc
xorl
sbbb
testl
insl
lea
sbb
ss
lds
inc
sub
push
in
pop
mov
sub
out
hlt
push
add
xchg
inc
lret
mov
cmp
mov
push
cmp
pop
fucomp
jge
lahf
andb
jo
std
cmpsl
lods
jp
leave
pop
in
imulb
mov
mov
xchg
xchg
mov
pop
lock
xor
jg
dec
mov
test
repz
cld
lret
jecxz
jno
sahf
mov
xchg
les
xor
dec
or
jne
mov
pop
sub
cmp
push
leave
pop
in
test
sbb
fcoms
adc
into
popf
inc
inc
pop
movsl
cmc
adc
das
hlt
mov
shrl
js
cli
dec
cmp
out
sti
jmp
shrb
pop
loope
cli
push
xor
or
es
into
nop
and
pop
pop
mov
dec
int
xor
fimull
sub
adc
xor
xchg
jne
rolb
in
repz
mov
push
ret
cmp
push
adc
incl
mov
cmp
or
and
push
pop
out
std
fldl
rorl
mov
push
mov
repnz
cmp
xchg
push
test
add
jno
add
push
fcmove
pop
outsb
mov
ret
shl
fldl
cmp
test
add
pop
cmp
inc
adc
pop
scas
das
push
xor
sbb
mov
stos
movb
inc
aam
scas
fmuls
push
into
fwait
jecxz
out
inc
rcl
pop
ds
jp
push
cmp
push
cli
cmp
int3
sub
std
outsb
push
mov
popf
out
test
sbb
or
adcl
mov
ja
xchg
insb
and
inc
dec
sbb
mov
inc
and
sbb
or
es
sbb
push
loope
add
fisubl
or
mov
aas
cld
pop
cs
mov
test
out
add
mov
sbb
xorb
movsb
fnstsw
and
mov
es
sarb
push
into
push
sahf
call
jg
mov
fcoml
mov
arpl
mov
movsl
aad
adc
fistpl
xchg
daa
push
jl
rcrb
mov
sub
fdivs
inc
mov
adc
imul
sbb
cmp
xor
scas
dec
sub
xor
adc
icebp
mov
lahf
cmc
nop
sub
and
or
icebp
je
cmp
je,pt
mov
fisubrl
push
into
clc
lret
inc
inc
sbb
or
adc
add
inc
pop
call
pusha
dec
fcomps
into
fildll
daa
pop
cmp
in
mov
outsl
into
movsb
dec
test
stc
cmp
das
lds
push
bnd
dec
iret
cld
out
push
out
jb
jnp
cmpsb
xchg
popf
movb
sub
add
pop
xchg
and
pusha
fnstcw
ja
mov
cmc
cmp
mov
cld
or
sub
loope
adc
sti
arpl
mov
aaa
cltd
dec
aam
cmc
sbbb
push
movl
bound
pushf
insl
stos
xchg
pop
iret
lods
mov
jnp
cmp
xchg
mov
mov
xlat
adc
fisttpll
and
aaa
pop
add
daa
js
xchg
test
repnz
loopne
jae
push
mov
jo
in
inc
mov
dec
xchg
test
imul
fucomip
rcl
mov
outsb
shll
iret
daa
dec
cmc
in
in
or
cltd
fnsave
adc
push
test
dec
fldt
or
pop
mov
and
xorb
cmpsb
lcall
out
push
xchg
pop
test
push
and
jge
movsb
jb
ds
mov
lock
testl
fildl
leave
sarl
xor
cmp
cmpsl
imul
call
test
xchg
sbb
xchg
adc
test
dec
sub
aas
lock
mov
or
mov
pop
pop
xor
lcall
and
insl
outsl
xchg
mov
cmp
dec
pushf
fstl
push
out
cmpsl
popa
dec
pusha
push
xor
ret
xchg
push
lcall
out
sbb
pop
jno
es
loop
xor
call
outsb
shlb
cld
jbe
clc
cld
fs
loop
outsb
push
mov
aas
aad
jae
jns
scas
rcrb
gs
pop
inc
movsl
sub
push
decb
sub
cli
jmp
sbb
hlt
and
faddl
sub
mov
das
cli
icebp
jg
call
add
lea
ja
or
inc
pop
pop
jne
inc
stos
popf
sbb
daa
scas
cmc
imul
stos
ja
push
cwtl
pop
pop
push
dec
xor
pop
sub
imull
aam
and
int3
es
lret
sub
mov
shrl
sub
mov
sar
stos
daa
mov
mov
fwait
stc
and
and
cmp
lock
pop
icebp
and
imul
jno
imul
sub
out
add
repz
add
aas
adc
fwait
pop
clc
jb
popf
arpl
jnp
das
ficoms
loop
mov
xchg
cmpb
aad
xchg
mov
hlt
xor
out
popa
outsb
mov
jl
push
xor
add
gs
and
lret
xchg
imul
pop
pop
pop
rorl
inc
addr16
out
mov
dec
sub
xchg
jno
or
arpl
pop
fdivrp
mov
into
movl
stc
ja
mov
jge
jg
test
cmpsl
cltd
fsub
loope
add
popa
mov
repz
out
pop
les
jb
ds
clc
test
pop
arpl
add
jae
adcl
xor
lods
inc
push
sti
rdmsr
jae
mov
mov
iret
jnp
out
imul
lea
pop
jl
outsl
push
xor
xchg
xchg
daa
adc
les
test
sbb
and
hlt
or
xchg
pusha
xchg
cli
jp
jnp
aad
sbb
or
lret
mov
push
inc
call
dec
movsb
mov
adc
xchg
rcll
mov
je
shlb
scas
aam
push
jge
mov
cld
lcall
dec
jns
jo
or
push
pushf
repnz
inc
and
mov
cmp
movsl
vpaddsw
xor
mov
in
test
mov
fisttpll
jle
pushf
add
and
adc
xchg
inc
daa
int
dec
ljmp
enter
cld
mov
jae
mov
cmp
pop
mov
jle
or
cmc
rcrl
fwait
push
js
mov
push
sbb
and
repz
mov
idivb
sti
xlat
popa
pop
repz
add
jns
mov
add
or
dec
push
fcompl
cvtdq2ps
sbbl
xor
hlt
jecxz,pn
jbe
push
sbbb
test
bound
cmp
push
mov
mov
jnp
adcb
outsb
xchg
outsl
xorl
popa
push
cmpsl
nop
sub
adc
dec
sahf
lds
push
xor
pop
dec
out
and
mov
adc
fcmovu
xchg
cmp
adc
lea
inc
and
icebp
dec
cmpsb
inc
popa
add
ljmp
push
or
mov
popa
dec
fdivs
mov
push
test
ja
rclb
adc
imul
xlat
pop
xchg
jecxz
jl
and
aam
repnz
pop
dec
xor
inc
insl
popf
sub
pushf
int
pop
aaa
rclb
xlat
lcall
in
inc
lcall
push
aas
pop
out
mov
sub
mov
mov
je
ret
mov
xchg
mov
push
test
xchg
inc
into
inc
cmp
cmpb
sbb
imul
test
inc
es
aad
or
out
add
sarb
mov
adc
pop
addr16
stos
push
or
ror
inc
movsl
loope
outsb
lock
in
xchg
inc
or
sub
mov
in
adc
xchg
imull
fstpl
in
push
xchg
repnz
cmp
les
jb
push
jecxz
sub
fisubl
sahf
cwtl
push
int3
in
dec
sbb
cmp
lahf
mull
xrelease
or
xor
divb
xchg
int
xchg
sub
dec
and
fs
cmp
push
jle
aaa
lret
xor
sbb
fdivr
mov
mov
in
loopne
loop
test
inc
std
imul
mov
adc
fs
and
mov
pop
lret
jb
fidivrs
movsl
aad
rorl
or
cli
and
adc
mov
dec
in
scas
and
jo
pop
incl
in
ja
sahf
sbb
inc
aaa
inc
jno
mov
inc
xor
mov
pop
xchg
xchg
xor
fs
call
imul
dec
nop
push
jle
scas
cmp
push
add
aam
xchg
jle
inc
gs
andl
bound
mov
les
sub
jb
ljmp
addl
xor
ret
dec
push
int
jns
iret
inc
mov
push
adc
sbb
and
add
push
mov
sbb
gs
jge
fcoms
inc
jle
sbb
scas
inc
scas
fstpt
jge
jl
or
arpl
inc
mov
adc
sub
xor
nop
loope
xor
mov
jmp
daa
mov
sti
adc
pop
push
pop
push
mov
push
jnp
aam
pop
rcrb
mov
xchg
cmpsl
cmp
dec
rcll
stc
inc
dec
push
scas
into
data16
mov
loopne
test
cwtl
dec
inc
sbb
jne
xchg
nop
stos
and
push
clc
jns
nop
ja
ljmp
jnp
mov
sub
jno
ret
mov
pushf
sahf
mov
outsl
mov
ljmp
test
sub
jne
fsubs
or
lret
dec
hlt
and
dec
lods
sub
pop
fwait
sbb
shr
push
xorb
mov
push
jp
dec
or
inc
push
add
inc
xchg
jmp
sub
sub
out
inc
mov
xchg
test
sbb
mov
aad
adc
rcll
gs
pop
inc
es
shlb
fdivs
push
int
aaa
insl
fisttpl
sbb
pop
xchg
mov
mulb
sti
imul
stc
sbb
jbe
ljmp
shrl
push
fs
fs
mov
out
mov
jnp
fadd
mov
push
cmc
mov
pop
mull
mov
in
xchg
les
cld
mov
nop
imul
loop
sbb
mov
lds
jecxz
stos
es
lods
cmp
rcrl
loopne
and
out
roll
xchg
lret
adc
popf
mov
xlat
lcall
inc
dec
inc
aas
fbld
data16
pushf
outsl
sbb
mov
add
cmp
and
es
mov
fstps
mov
in
cwtl
dec
adc
mov
mov
jo
cmp
xor
push
sbb
push
cld
int
sub
pop
mov
xor
adc
insl
aad
push
sbb
push
adc
stos
lods
stos
adc
rorl
out
adc
clc
xor
and
out
ss
pushf
push
or
push
push
push
jne
cmpsb
cld
jge
xchg
fnstenv
push
jge
out
test
pop
or
test
and
dec
add
fsub
or
dec
and
repnz
test
add
sub
or
mov
sbb
in
ds
pop
xchg
push
js
imul
stc
lcall
inc
fdivs
sarl
jge
or
add
and
lahf
dec
jnp
xor
insb
lcall
out
shll
push
push
dec
cli
cmp
lea
or
inc
or
test
ja
jmp
popl
inc
mov
and
xchg
test
xor
sahf
les
push
pushf
pop
rcrl
dec
es
es
aas
mov
cmp
push
mov
push
mov
testb
mov
sarl
arpl
adc
popf
mov
addr16
pop
lea
push
stc
dec
ss
gs
loop
mov
popf
fs
sbb
pop
sub
or
outsb
rorb
dec
jmp
jb
lcall
sub
sbb
je
jecxz
lea
dec
test
xor
stos
sti
pop
daa
pop
pushf
jns
push
mov
mov
add
mov
in
push
jb
adc
mov
xor
mov
cs
xor
shrl
pusha
xchg
and
out
test
fs
push
jne
xor
sub
xchg
or
push
sbb
test
mov
std
pop
dec
xchg
inc
mov
lods
fcom
jo
jg
mov
jge
and
inc
or
mov
and
cmp
inc
xor
sub
xchg
repnz
cmp
jbe
js
add
or
nop
outsb
and
cmp
pop
push
scas
test
dec
stos
and
cmp
pop
mov
jmp
mov
mov
es
fimull
fisttps
out
mov
jnp
xchg
add
dec
jg
repz
jg
or
mov
in
cmpb
xchg
ljmp
jg
loopne
mov
wbinvd
mov
lret
cld
fiaddl
xchg
rcll
push
pop
repz
pop
gs
xchg
push
into
inc
push
ret
fst
sub
pop
int
inc
pop
insb
rolb
push
jecxz
loop
fistpl
adc
inc
mov
gs
lods
or
imul
mov
int
jne
and
add
add
cltd
hlt
nop
popf
push
out
cmp
fdivs
pop
lret
inc
push
push
icebp
or
mov
je
das
xchg
mov
jmp
mov
faddl
dec
leave
lea
xchg
dec
xor
pop
inc
and
mov
jecxz
dec
mov
std
jno
adc
mov
inc
jo
push
mov
xor
xchg
dec
mov
sarl
mov
adc
jbe
adc
dec
inc
push
int
push
adc
mov
pop
lcall
sti
or
dec
outsb
mov
sbb
mov
stc
cltd
enter
inc
data16
inc
or
cmpsb
add
je
fwait
sub
fistl
xor
mov
ds
sbb
mov
mov
out
and
enter
push
jl
dec
mov
scas
push
adc
sbb
pop
mov
movups
jle
push
adc
orb
mov
arpl
int
pop
stos
mov
or
ror
scas
test
cmpsb
mov
xor
and
loop
and
adc
inc
stos
cmp
or
test
mov
dec
mov
bound
sub
dec
je
mov
pop
repz
jecxz
dec
addr16
xor
jbe
mov
cmp
pop
xchg
xor
adc
pop
mov
mov
push
cli
sbb
lret
adc
jmp
pop
inc
push
sbb
cmp
adc
sub
jecxz
imul
ret
xor
mov
clc
out
rep
mov
loopne
pop
into
leave
push
insb
in
cmpsb
je
stc
es
ds
icebp
xor
xor
in
repz
jge
repnz
push
jns
push
testl
sti
jl
lret
mov
maskmovq
mull
int3
xchg
mov
mov
fidivl
repz
jg
mov
cmpsl
add
mov
xchg
sbb
aas
mov
scas
cmp
jnp
inc
push
inc
leave
cmp
sub
leave
data16
inc
sbb
hlt
jne
jns
mov
mov
mov
push
mov
fcmovbe
mov
adc
inc
mov
fisttps
shr
aam
mov
cmp
loop
insl
lock
xor
dec
cmc
push
jns
add
inc
stos
jecxz
popa
push
movl
jb
cmpsb
orb
gs
push
insl
scas
test
jnp
push
and
ret
push
push
push
xor
cwtl
xor
cmp
mov
xor
adc
dec
in
push
and
clc
mov
repnz
or
fsts
adc
nop
or
inc
in
jp
and
cmpsl
cmp
dec
jle
test
roll
mov
fucom
xor
pop
push
pop
jae
mov
gs
je
icebp
mov
pop
movsb
fidivs
rcr
shlb
jecxz
push
inc
adc
dec
rcrb
mov
pop
sub
cmp
nopl
je
sub
aam
lods
cli
xchg
or
dec
incb
push
push
mov
inc
push
mov
xor
or
enter
mov
adc
cmp
test
bound
fwait
sbb
xor
repnz
sti
cli
fsub
push
ficomps
xorb
mov
fldenv
sbb
icebp
xchg
mov
enter
icebp
mov
and
adc
inc
xlat
stos
xor
fs
fsubp
add
jp
mov
mov
and
push
mov
mov
lock
mov
test
push
mov
mov
repz
in
lock
rorl
pop
fs
inc
iret
push
and
mov
mov
call
push
add
mov
mov
lods
inc
lret
push
push
and
je
dec
mov
pop
subb
mov
fldl
or
cmp
xchg
les
push
cwtl
or
mov
nop
repnz
jg
lods
filds
push
pop
pop
xor
push
aas
push
mov
mov
idivl
fldenv
addr16
stos
xor
fdivl
sbbb
pop
jno
add
stos
mov
xchg
into
insl
lret
cmp
inc
in
add
test
popa
fs
insl
shlb
dec
ret
inc
jbe
hlt
daa
or
xor
push
iret
shlb
fwait
in
pusha
aas
mov
ss
add
outsl
in
cld
cmp
xchg
fs
fcoms
inc
sahf
loop
fnstsw
ds
clc
test
sbbb
sarl
aad
jp
xor
scas
sbb
stos
jle
jp
lds
and
mov
adc
mov
xchg
inc
fists
ret
push
andl
andb
mov
sub
shrb
sub
push
pop
push
inc
adc
xchg
push
adcb
lcall
iret
xchg
push
inc
ret
cwtl
sub
sti
mov
xchg
xlat
pop
ret
sbbb
cli
jb
in
aas
in
and
fwait
insb
mov
jle
xchg
sti
xor
cld
les
lods
clc
push
and
jno
stos
or
cld
push
cmp
jb
call
mov
rclb
mov
std
cmp
dec
cvtdq2ps
cmp
das
popl
sarl
cmpsb
dec
mov
ficompl
mov
movsl
pop
sub
dec
and
popf
push
or
out
into
add
mov
repnz
imul
push
call
xor
test
dec
pop
fldenv
repz
jae
testl
cmp
mov
mov
testb
fidivs
sbb
cmp
pop
sbb
push
movsl
pusha
fimuls
stc
mov
inc
clc
ror
cmp
sbb
sub
aaa
mov
aas
out
jg
cmc
add
push
pop
cld
pop
gs
and
sarl
imulb
mov
fdiv
xlat
adc
inc
jae
sti
jns
dec
jg
aas
mov
cmp
leave
lret
cwtl
add
xchg
sub
leave
pop
add
fnstsw
cmpsl
negb
hlt
add
mov
lods
ficoms
push
push
xchg
fidivrl
mov
jge
sbb
nop
test
jbe
add
and
xor
loope
das
dec
sbb
dec
outsb
mov
add
add
mov
sub
mov
mov
inc
push
cmpsl
test
mov
ja
xor
stos
pop
and
pop
icebp
mov
outsb
dec
das
mov
and
cs
into
arpl
loope
jno
repnz
seta
pop
pop
pop
shl
subb
mov
jns
mov
jns
pop
mov
and
dec
jp
jo
bound
and
and
jecxz
cmpb
push
out
js
cmpsl
xchg
outsl
mov
and
adc
pushf
cmp
push
and
enter
sub
ja
xchg
mov
mov
fsubrl
pop
push
adc
mov
jmp
iret
lcall
mov
ljmp
movsl
inc
aad
sub
lret
test
and
mov
lods
ret
mov
sbbl
pop
pop
int
mov
stc
mov
loope
out
push
or
in
test
loop
aam
mov
sbb
aas
pop
xor
jmp
mov
loope
int3
cmpb
rcrb
call
dec
inc
pusha
or
rcr
inc
push
mov
imul
add
mov
or
xorb
cli
dec
xchg
pushf
sub
inc
sbbl
sbb
sahf
mov
mov
aas
inc
cltd
cmp
xchg
addr16
rorl
cs
div
inc
jl
xchg
je
popa
mov
mov
or
xor
or
outsl
and
outsl
gs
sti
and
stc
xor
in
andl
jo
sbb
mov
push
out
sbb
dec
and
popf
mov
inc
xlat
int3
jbe
data16
add
mov
and
mov
std
popa
rorl
outsb
mov
mov
cwtl
jg
int
adc
movsb
mov
mov
cmc
jg
je
bound
test
je
pop
call
das
and
dec
xchg
pusha
cmpsl
scas
in
jg
enter
fwait
cwtl
mov
pop
sbb
cmp
lods
jbe
push
or
and
adc
mov
loope
xlat
out
out
ret
shld
mov
pop
add
movsb
mov
arpl
inc
enter
lcall
adc
jl
push
test
pop
mov
lds
imul
pop
pop
xor
or
icebp
popa
imul
mov
stc
and
xchg
leave
out
pop
mov
adc
mov
cwtl
adcb
add
mov
push
mov
mov
mov
cmp
push
mov
adc
in
test
pop
cwtl
repz
jb
xchg
repz
pop
aaa
dec
lcall
fcoms
sahf
std
sbbl
pop
mov
sub
jb
and
call
jmp
div
lods
enter
scas
cltd
or
add
push
cli
sub
repnz
lcall
mov
mov
repnz
in
call
and
dec
outsl
push
jp
or
sub
outsl
idivb
mov
loope
shlb
mov
addr16
in
mov
mov
repz
xor
cmp
adc
gs
mov
fwait
test
mov
cmp
xchg
push
jne
push
repnz
mov
cmp
in
pop
xchg
jle
xchg
xor
bound
cmp
test
dec
loope
or
cmpsb
or
jp,pt
imul
lds
cltd
repz
dec
pop
fld
cmp
or
cmc
or
mov
pop
pop
push
sub
fsubrp
sar
and
lods
cmc
mov
out
jecxz
movb
addr16
rol
xor
dec
pop
jno
and
dec
push
push
mov
shll
pop
mov
jp
iret
push
xchg
addb
dec
sahf
clc
mov
dec
mov
outsb
jo
aas
loope
je
lods
subl
clc
test
jmp
imul
dec
cmpsb
xor
flds
mov
adc
pop
daa
mov
mov
fscale
mov
stc
addl
hlt
cltd
outsl
pop
xorl
push
jae
xor
fldcw
and
pop
lret
mov
and
testb
loop
js
push
out
and
leave
mov
adc
mov
jnp
push
aam
negb
mov
mov
add
nop
mov
loopne
int
test
mov
in
cltd
pop
shlb
into
cmp
in
mov
les
lods
or
jge
add
les
push
mov
js
js
shrb
mov
jecxz,pt
inc
push
pop
mov
aaa
ret
add
pushf
inc
dec
icebp
or
cwtl
pop
jae
movsb
cs
sahf
outsl
rcrb
jge
jae
fimuls
jbe
jge
add
pop
inc
dec
cmp
adc
std
cmp
xchg
pop
sub
adc
lods
stos
xchg
lods
mov
inc
push
push
das
adc
mov
or
xorl
mov
adc
mov
ret
jae
inc
hlt
je
mov
push
adc
hlt
jo
icebp
imul
ret
fidivs
and
fldt
xchg
sub
fidivrl
jg
call
fcmovb
aam
arpl
out
mov
roll
fldt
add
mov
into
cmp
xchg
jns
inc
rorb
dec
mov
js
xchg
bound
in
adc
cltd
xor
pop
push
adc
fnsave
and
cltd
push
push
jmp
jns
test
notl
and
aas
xchg
mov
jo
hlt
ss
leave
xor
mov
aad
mov
dec
imul
repz
loop
adc
adc
lea
and
mov
xchg
fwait
movsl
mov
clc
inc
push
xor
mov
movsb
mov
in
sub
mov
out
mov
jle
mov
ret
pop
popa
enter
mov
outsb
sub
jbe
ja
sbb
and
adc
lea
out
xlat
popf
out
mov
mov
cmp
ds
jecxz
shrl
xchg
add
in
imul
adc
aaa
lret
jb
sbb
jmp
cli
mov
insb
out
push
fistpll
or
jae
adc
cwtl
xchg
arpl
outsl
repz
jo
xchg
repnz
in
ret
hlt
inc
faddl
and
int
imul
cmp
cs
cmp
bound
jp
mov
sub
sub
addr16
pushw
arpl
enter
call
jb
xorl
imul
clc
jae
cmp
xor
ss
inc
push
cs
xchg
sub
mov
repz
sbb
xbegin
xchg
xor
js
push
lret
and
repnz
mov
ret
sbb
dec
shlb
or
jns
mov
dec
mov
lods
add
push
jb
loopne
stos
pop
cmpsl
daa
jge
lahf
shll
or
xlat
lret
jnp
aaa
test
pop
cmp
loope
fwait
adc
push
fwait
pop
mov
mov
bound
mov
xchg
outsl
sbbb
aam
push
fsubrs
mov
jge
mov
movsl
jns
mov
mov
jge
mov
bound
mov
inc
in
inc
insl
sbb
fdivrs
andl
je
js
das
cwtl
jae
les
test
pop
xchg
sbb
pop
inc
dec
push
xchg
stc
sahf
jb
ficomps
push
push
pop
push
xor
and
push
mov
inc
mov
push
hlt
sbbb
dec
filds
testb
adc
jmp
jnp
shr
mov
and
inc
cmp
add
in
inc
adc
xchg
mov
xchg
cwtl
les
mov
jbe
sbb
test
lret
fsts
je
bound
mov
and
push
cmp
sub
nop
imul
inc
xor
adc
xchg
xchg
clc
add
cwtl
push
iret
jp
mov
adc
mov
jmp
cmpsb
mov
pushf
inc
repnz
jns
add
and
xlat
cmp
pop
sti
out
xlat
cltd
rcrb
aad
mov
push
sbb
mov
jbe
mov
cwtl
test
mov
mov
or
mov
lods
lock
mov
fs
xor
in
icebp
mov
imul
popf
icebp
sbb
sub
je
dec
lahf
daa
imul
call
mov
jle
hlt
repz
adc
inc
dec
lea
bound
aaa
fimull
sub
adcl
push
sub
rcrb
lds
es
cmp
mov
inc
daa
inc
jmp
int
pop
loopne
sub
mov
or
jbe
sbb
daa
fadds
push
cli
xchg
inc
jl
mov
mov
aad
out
jnp
xchg
loope
jge
adc
mov
cli
add
pop
lock
incl
rclb
push
push
xchg
stos
adc
in
lahf
hlt
cmp
lahf
cmp
adc
inc
iret
xchg
lcall
xor
cli
inc
aad
ljmp
mov
in
mov
jcxz
mov
xor
inc
test
xor
or
sub
stos
mov
rol
fxch
pop
dec
jge
sub
clc
pop
pop
cwtl
add
adc
xchg
xchg
push
inc
dec
mul
mov
inc
sub
test
mov
mov
jno
xor
xchg
sbb
aam
push
test
insl
cmpsl
and
daa
sub
mov
fwait
or
and
fstp
mov
stos
ljmp
jl
daa
sar
inc
push
ret
js
or
add
enter
mov
movsb
inc
dec
test
out
sbb
fcmove
and
and
pop
data16
in
xlat
fisubl
mov
insb
cmp
pop
push
and
out
add
idiv
dec
arpl
lcall
out
stos
stc
sbb
lcall
xor
popf
or
stc
mov
pop
adc
dec
mov
cli
cwtl
dec
out
movsl
adc
int3
adc
lahf
sub
inc
arpl
sbb
pop
pop
sub
repz
rcll
out
decl
std
inc
jbe
lahf
lahf
push
add
fnsetpm(287
je
cmpsb
cltd
fidivrs
mov
cld
jnp
add
add
stos
jl
mov
xchg
sahf
pop
mov
in
scas
sbb
aam
sbb
cmp
push
mov
dec
mov
mov
nop
pop
testb
and
insl
ja
iret
lea
xor
mov
in
clc
cmp
dec
or
in
and
fcoms
or
xchg
ljmp
and
mov
push
adc
sbb
xchg
jmp
and
pusha
and
add
push
xchg
and
mov
lods
add
incb
lds
push
cmpb
lods
mov
ret
mov
mov
lea
mov
push
sub
out
lock
and
mov
push
adc
loop
sub
inc
push
sbb
loopne
bound
into
lods
stc
adc
addr16
xchg
leave
icebp
popf
int
adc
lret
push
cltd
nop
pop
xor
fs
lods
and
outsl
xor
rclb
imul
mov
push
cmp
inc
bnd
jae
dec
add
fisubrl
xor
shll
fnop
pop
xor
cwtl
dec
xor
repnz
push
leave
mov
movzwl
jle
add
stc
dec
cltd
je
test
dec
or
xor
and
jns
cmp
adc
test
rol
lahf
pop
push
sub
sbb
add
mov
inc
or
push
roll
rcrl
daa
jnp
fsubl
cmp
mov
test
mov
test
insl
outsl
mov
arpl
jl
aaa
scas
pop
pop
addr16
popf
pop
mov
cmp
cmc
xorb
pop
adc
xor
dec
sub
cld
pop
dec
movsb
out
jp
mov
jl
in
lret
stos
fcomps
int3
dec
adc
sarl
push
cwtl
scas
aam
cmp
pop
cmpb
mov
popa
es
mov
cmpl
mov
xchg
leave
xchg
inc
xchg
pop
fisubrl
xchg
cli
lods
popa
out
adc
mov
lret
ret
push
xorl
pop
stos
mov
aaa
into
xchg
jge
into
ljmp
and
push
mov
cmp
and
dec
pusha
lea
sub
and
clc
rolb
stc
jge
popa
cs
mov
cmp
int3
sbb
or
js
lcall
shrb
mov
sahf
mov
aaa
push
sbb
dec
iret
in
gs
sub
sub
jecxz
in
inc
pop
sbb
lock
or
cwtl
out
inc
jbe
add
mov
push
ljmp
ds
orb
in
mov
sbb
and
sbb
shll
ficomps
hlt
stc
clc
add
lds
mov
rcll
push
push
clc
mov
xor
icebp
add
lock
out
push
daa
mov
pusha
push
arpl
int3
mov
sub
xchg
mov
adc
push
mov
shll
aaa
mov
mov
or
int3
repz
aad
or
scas
add
jnp
jns
jle
jbe
inc
mov
dec
mov
stc
and
xchg
cmpl
dec
out
xchg
out
adc
mov
pop
movsb
cmp
cmpsb
in
out
clc
dec
mov
inc
xor
sub
dec
and
or
fidivs
insb
mov
pop
push
cmpl
xchg
and
nop
inc
hlt
mov
int3
fcoml
test
into
pop
dec
mov
jb
push
cli
cmp
loope
jae
pop
push
mov
xchg
adc
pop
jp
test
xchg
and
jns
loope
jb
sbb
int3
nop
inc
mov
xor
inc
sub
adc
es
adc
fcoms
mov
movsb
iret
xor
cld
push
pop
push
repz
pop
xor
push
icebp
loop
das
arpl
bound
stc
mov
sbb
push
repz
adc
lods
mov
and
mov
cmp
push
in
nop
mov
pop
stos
jp
lods
and
adc
mov
xor
pop
jae
pushf
imul
lcall
repz
xor
movsl
push
in
mov
fnstenv
xchg
mov
mov
ret
mov
jg
testb
dec
aad
test
adc
call
lds
mov
add
jbe
ja
sub
pop
dec
subb
andb
ja
mov
int
mov
imul
sbb
idivl
les
pop
cmp
es
adc
nop
push
fnstsw
push
pop
ss
mov
stc
and
mov
dec
jle
mov
ret
xor
pop
xchg
and
add
out
js
push
and
dec
mov
pop
aas
popa
adcb
dec
nop
adc
xchg
xor
or
jnp
add
or
xor
stc
test
mov
sbb
sti
sti
dec
mov
in
push
xchg
mov
out
pop
or
rcll
sbb
inc
rorb
aam
and
test
inc
in
cmpsl
cs
and
sbb
je
add
into
adc
stos
loope
mov
mov
in
les
das
dec
jo
imul
pushf
xchg
add
cwtl
xchg
push
sbb
ret
rcrb
inc
jno
mov
cwtl
es
daa
adc
mov
push
xor
push
ja
mov
dec
push
cltd
pop
popa
addr16
cwtl
pushf
or
in
push
push
ds
push
mov
dec
fcoms
jge
inc
ss
or
sub
mov
adc
xchg
cmp
call
jnp
sub
cmp
aad
mov
mov
add
cmp
mov
data16
enter
xchg
dec
mov
mov
mov
js
lcall
cmpsb
pop
insl
ja
test
roll
into
out
lods
adc
out
repnz
pop
roll
xchg
add
mov
cld
dec
lret
gs
dec
ret
pop
and
cwtl
push
sub
in
ret
popa
adc
paddsb
outsb
cmp
testl
mov
daa
lods
sbb
adc
nop
lds
sbb
sbb
mov
or
xchg
mov
cmpsl
leave
rclb
inc
push
sub
inc
rclb
loopne
inc
or
popl
out
cmp
ds
std
or
cmc
mov
fimull
dec
add
js
aam
jne
push
pusha
mov
xchg
xor
pop
loope
aam
and
cmc
xchg
or
enter
rol
or
cmpsb
xor
inc
dec
ja
in
adcl
mov
addr16
and
mov
mov
pop
movsl
push
mov
int3
xchg
mov
mov
lds
mov
inc
jge
outsl
and
mov
loope
jmp
not
lret
shlb
and
test
jle
dec
ficomps
jle
cwtl
mov
mov
fdivl
push
sahf
ds
leave
fcmovb
cli
lea
dec
repz
pop
outsb
jae
push
mov
shrb
fwait
xor
aam
or
mov
cmp
cmpsb
shll
test
add
stc
dec
int
or
and
mov
stc
push
add
ficomps
cli
dec
leave
inc
xchg
xchg
cmc
jno
mov
sbb
in
sub
loopne
mov
or
push
xchg
lds
mov
add
sbb
mov
mov
shll
pop
sub
inc
xlat
xchg
sub
xchg
in
ficompl
pop
je
adc
loope
jl
xchg
adc
or
enter
stos
ret
adc
sub
lods
push
xchg
out
test
adc
adc
sbb
movsl
inc
and
jp
mov
lock
push
stc
imul
push
es
mov
pop
cs
cmp
hlt
pop
push
mov
add
fwait
jb
and
js
outsb
lods
xchg
cmp
and
stos
daa
add
shl
faddl
fs
xchg
stos
stos
adc
aaa
add
cwtl
cmpsb
lahf
inc
mov
pop
ds
lahf
adc
cmp
fs
sub
dec
out
xchg
xchg
jae
jge
xor
adc
hlt
ret
adc
pusha
imul
jp
sbbl
cs
xor
fsubrs
push
loopne
and
into
sub
jno
push
je
and
leave
jne
xchg
pop
pop
loopne
jle
xchg
stos
imul
sbb
fimull
in
mov
in
rclb
jge
ret
xadd
mulb
xchg
mov
sub
cmp
jecxz
pop
cld
movsb
cmpsl
test
inc
adc
xor
fnstenv
cli
test
fcmovnbe
sbb
popf
cmc
push
int
adc
dec
mov
int3
mov
ret
mov
sbb
mov
xor
adc
rorl
fcompl
push
jae
adc
movsl
push
mov
aas
inc
or
test
push
add
dec
jmp
mov
xchg
inc
mov
rorl
lret
jo
lods
mov
mov
dec
and
js
xchg
aas
rolb
mov
push
mov
lods
and
jae
frstor
mov
test
xlat
into
jae
sti
mov
add
sub
jae
xor
ja
xchg
inc
hlt
in
inc
fs
jl
xor
mov
jle
xchg
outsb
push
pop
sub
xchg
cli
inc
xorps
fistpl
int3
push
insl
mov
mov
ds
enter
fstpt
mov
lret
sti
fimull
les
imul
hlt
ds
fs
je
xlat
mov
sti
sbb
cmp
sub
and
mov
ss
push
push
sub
cmc
rcrb
sbb
add
fstp
xchg
mov
mov
mov
dec
mov
inc
inc
cmp
add
lods
std
pop
pop
sub
fdivrs
lret
xchg
mov
jae
or
jo
adc
mov
adc
add
psubb
mov
rcrl
cmp
imul
aam
insb
pop
ja
out
mov
loopne
mov
or
mov
test
cmp
aam
pusha
enter
cmpl
push
xor
test
mov
sbb
fistps
jbe
mov
fisttps
xchg
es
add
and
scas
xchg
pop
fldl
cmp
cmp
xor
sbb
push
js
xchg
pop
enter
add
rcr
shll
pusha
and
repz
std
jbe
mov
imul
stos
cmpsl
leave
or
ja
adc
mov
rcl
xchg
ja
out
jmp
add
xchg
aam
adc
inc
pop
push
decl
pop
dec
dec
ret
xchg
push
sbb
mov
cmp
addb
imul
fsubrl
movl
jl
dec
pop
mov
adc
mov
sub
out
daa
dec
je
or
add
inc
ja
xor
push
insb
sbb
xchg
daa
dec
xor
mov
lock
cmp
xchg
mov
loopne
mov
and
lcall
push
dec
push
jnp
add
xor
aad
cmp
jno
nop
inc
cmpsb
test
pop
cmpsb
test
clc
cmpsb
lcall
mov
mov
xor
outsb
jne
jecxz
test
push
and
out
std
push
lret
je
push
sbb
mov
push
imul
int
sbb
nop
xchg
lods
lcall
movsb
mov
das
aad
pop
xlat
adc
movsl
inc
hlt
cmp
psrld
pop
je
lahf
inc
imul
lret
adc
ja
popa
sbb
popa
popa
jo
dec
jecxz
sahf
out
cmp
insb
lods
int
sub
inc
lods
xchg
mov
js
inc
xchg
pushf
xor
fbstp
es
mov
push
inc
stc
mov
pop
sbb
shll
or
in
adc
or
rcrb
lret
xor
icebp
add
popa
cmp
cwtl
ficoms
rolb
out
icebp
pop
sbb
pop
add
fnstsw
stos
movsb
in
cmp
in
dec
jecxz
int
int
cmpsb
loop
iret
ja
push
mov
push
fwait
loop
lret
cmp
jp
lret
mov
lcall
inc
stos
ljmp
fs
cmp
jl
jle
and
aad
sti
shll
popa
xor
dec
test
inc
add
std
icebp
xchg
aas
fmuls
xlat
mov
pop
test
cltd
push
add
push
jmp
push
add
fdivrs
lds
mov
in
xchg
ljmp
mov
insb
jae
pop
mov
repnz
or
jbe
addr16
or
mov
enter
adc
mov
mov
jecxz
add
inc
int3
push
mov
xchg
sbb
lods
pop
gs
xchg
popf
sbb
fsubr
lods
push
rorb
xchg
lret
mov
es
inc
mov
pop
mov
mov
lcall
aad
and
sbb
sti
push
ljmp
les
pop
loope
mov
and
in
adc
in
pop
sub
cmp
push
cwtl
mov
push
xchg
dec
ljmp
inc
xor
sahf
lods
inc
jmp
jmp
cmc
xlat
movsl
insl
xlat
test
icebp
sub
sbb
outsl
dec
cli
push
fdivrl
fnstsw
mov
push
hlt
fwait
adc
scas
push
ds
ljmp
or
ss
cmc
fdivrp
popf
jo
and
icebp
jl
lods
jne
sarl
mov
cmp
lret
notb
popa
mov
pop
pop
sub
in
adc
adc
imul
or
lods
push
shl
popf
pop
dec
fdivl
mov
inc
push
jg
jl
inc
push
hlt
xchg
dec
scas
rorb
inc
insb
test
insl
gs
jno
adc
rorl
roll
or
or
fwait
nop
jl
sahf
inc
jnp
rcrl
inc
inc
das
dec
xchg
mov
fs
movsl
fisubrl
lods
xor
mov
mov
stos
jg,pt
enter
outsb
lret
into
pusha
in
xchg
and
and
dec
orb
cmp
sub
sahf
arpl
testb
test
andl
orb
loop
out
xor
adcl
adc
cmp
mov
xchg
adc
lds
scas
jge
mov
lock
push
aad
movsb
je
or
add
aaa
sbb
push
push
out
jge
cltd
cmp
mov
pop
shll
mov
push
mov
in
jmp
fldlg2
add
pop
cmp
rcl
or
cmp
nop
int
fidivs
mov
jecxz,pn
nop
test
and
pop
or
inc
das
lahf
lcall
jg
xor
cmpsb
adc
lcall
hlt
sbb
nop
cld
push
xchg
jg
cmp
ja
add
shll
push
mov
rclb
sarb
jne
lea
negb
aam
add
adc
fucomp
pop
nop
and
sbb
add
scas
pop
bnd
or
fsubr
jmp
lahf
push
insb
lock
leave
pop
cltd
xchg
nop
mov
jo
mov
sub
cmpsl
pushf
movsl
push
xor
movsb
std
mov
cmp
and
or
repz
mov
xor
or
cltd
lods
push
ljmp
je
mov
div
fsubs
stc
push
ss
jg
enter
test
ret
adc
int3
sti
sbb
lret
int
mov
scas
sbb
or
in
outsl
fnstcw
scas
int3
out
pusha
xor
insl
loope
mov
and
data16
outsl
lcall
js
fldcw
add
xor
sbb
cs
jge
inc
ret
push
pushf
idivb
and
and
jo
jno
das
lret
aad
add
pop
cmp
pop
ficomps
aas
xchg
movsb
push
mov
ds
cld
dec
inc
jo
sbb
int3
ret
pop
aaa
xchg
testl
cmp
push
loop
jns
js
xchg
xor
sub
pop
push
jge
imul
push
arpl
push
add
jge
loop
div
rcrb
lods
mov
or
push
in
push
dec
mov
jne
out
mov
jmp
scas
xchg
icebp
xlat
mov
cmp
push
fwait
sbb
out
fs
pushf
in
xchg
and
mov
lds
cli
ja
mov
fnstcw
in
adc
stos
cmpsb
out
pop
rol
adc
xor
lret
fnsave
divl
jns
pop
ret
loop
or
jns
xor
mov
pop
dec
or
jnp
stos
fsts
pop
push
scas
jp
out
sub
mov
push
pop
mov
mov
enter
ds
push
aas
out
scas
jecxz
mov
adc
test
test
std
andl
aas
mov
mov
test
out
loop
fcoml
jp
push
fwait
sbbl
cmp
mov
pop
cld
mov
imul
add
mov
inc
test
mov
jo
cmp
movsb
adc
scas
das
xor
dec
movsl
inc
fisttps
or
pushf
fldt
pop
lods
mov
subb
fbstp
cmp
inc
out
andl
push
push
or
sbb
ret
out
dec
cmpsl
jge
cmc
flds
or
pop
leave
inc
fwait
loop
insl
jno
es
aaa
and
cld
xor
push
ds
pop
mov
cltd
sub
mulb
inc
xor
mov
loop
fimull
stos
and
mov
push
cmp
add
stc
push
inc
adc
sbb
sub
movb
dec
call
clc
add
out
rcr
leave
cmpl
std
arpl
ja
addb
test
fldpi
fistpl
mov
mov
shrb
xor
lods
sbb
out
xchg
xorl
dec
mov
ja
stos
mov
sbbl
bound
jl
loopne
lods
jb
mov
xor
loope
in
out
push
xchg
arpl
xchg
jbe
jbe
ret
jb
mov
out
push
xlat
cmp
xchg
clc
test
mov
xlat
cld
popl
ficoms
dec
cmp
push
pop
cmp
xchg
sahf
and
cmpsl
cmc
xchg
adc
ret
mov
push
out
pop
adc
adc
push
mov
hlt
fwait
repnz
and
xchg
push
pusha
lret
ljmp
pop
pop
daa
fiadds
movsl
iret
dec
fmulp
push
ja,pn
imul
xorb
jne
cwtl
sub
lea
mov
lea
inc
mov
imul
cwtl
pushf
xchg
fs
enter
cmp
cmp
lcall
or
ljmp
mov
sbb
add
inc
sbb
jg
pop
sub
or
sbb
or
addr16
xor
cld
cmc
scas
es
mov
in
dec
in
in
movsl
or
mov
popa
je
repnz
pop
mov
sbb
scas
repnz
sbb
mov
sbb
sub
push
pusha
lret
popa
fldt
xchg
xorl
rcll
inc
dec
dec
orb
hlt
repnz
pop
test
push
adc
mov
xorb
lcall
and
pop
test
xlat
jmp
bound
not
mov
mov
sbb
aad
cmpsb
inc
sub
mov
sub
push
ret
aas
sub
ds
and
pushf
push
fidivl
sbb
sbb
imul
mov
repnz
lret
pop
pop
sar
ret
std
cmpsl
sbb
out
stos
stos
adc
testb
sub
inc
fs
push
or
xchg
jge
pushf
ss
out
adc
push
and
dec
out
push
dec
fwait
shrl
lret
inc
dec
mov
and
inc
mov
addr16
mov
lods
inc
mov
int3
shll
adc
xor
in
scas
movsl
mov
dec
mov
insb
stos
push
push
pop
dec
lea
and
mov
aam
das
cld
adc
idiv
pop
out
add
mov
xor
aaa
jno
fsubr
jnp
dec
mov
mov
mov
pop
push
cmp
pop
js
and
sbb
mov
icebp
shlb
mov
xchg
andb
pop
and
jb
lods
adc
jbe
jmp
add
adc
push
mov
in
inc
push
mov
and
xor
lea
mov
ss
dec
test
sbbb
sub
mov
mov
cmp
ror
pop
mov
popa
sbb
adc
pop
mov
push
xchg
cltd
std
ret
xchg
rclb
push
mov
mov
push
or
jmp
add
mov
xchg
out
xchg
repz
push
cmovae
xchg
cmp
or
js
scas
mov
jg
mov
mov
rorl
sbb
pusha
ss
mov
add
or
fadds
dec
sti
data16
sbb
cmpsb
pop
and
mov
movsb
push
xor
sub
icebp
rorb
push
push
call
testb
jl
pop
adc
jne
adc
mov
scas
and
loop
mov
cli
add
fnstsw
leave
jne
sti
cld
pop
je
dec
sbb
xchg
push
jle
out
les
mov
cmp
pop
xor
loope
push
ja
test
lods
imul
pop
les
sarl
loop
cmp
hlt
cmp
mov
jbe
stc
aam
stos
movsl
jae
mov
sbb
and
mov
mull
cs
fiadds
addl
mov
shl
lods
aas
cwtl
shl
xchg
ret
popa
jae
outsb
addb
out
bound
add
int3
jge
outsb
fldl
test
aad
ficompl
cmp
sahf
ret
jp
mov
scas
je
mov
shll
dec
aad
pop
lcall
xlat
pop
inc
adc
add
cmp
ss
imul
cli
cmp
pop
fidivrl
scas
jle
cmc
aaa
mov
push
adc
push
hlt
pusha
imul
aam
xlat
ret
adc
adc
test
xchg
mov
cmp
mov
loope
cmp
cmc
rcrb
mov
imul
jl
fsts
pcmpeqd
cld
hlt
popf
push
je
xor
fsubrs
adc
shrb
xor
sub
ret
cmpsb
mov
add
rclb
push
test
das
ret
cmp
pop
or
mov
and
mov
je
push
and
out
push
repz
jle
test
orl
add
in
aam
jne
out
cli
es
das
cmpsb
cmp
daa
xor
bound
insb
pop
iret
flds
push
clc
mov
outsb
pop
test
or
cmp
and
jge
sub
fsts
inc
cs
je
pop
or
inc
mov
xchg
lock
inc
mov
jb
popa
int
add
clc
rorl
push
mov
mov
adc
add
dec
loope
leave
arpl
test
jbe
fcoml
inc
jo
xor
cmp
test
fcoml
and
sub
je
and
aad
lds
test
sbb
mov
imul
mov
pop
mov
sub
hlt
pop
cmp
in
sub
mov
mov
bound
fcmovu
adc
dec
repnz
mov
shrb
mov
out
and
movsb
pop
push
insl
pop
not
insb
subw
mov
aad
mov
notb
pop
pop
scas
cmp
jg,pn
pusha
bound
ja
mov
dec
adc
repz
jb
jne
push
cmpsl
mov
ss
fisttps
fcmove
jecxz
icebp
outsl
jnp
add
ror
aas
sub
fwait
dec
into
push
mov
sbb
lcall
ja
xchg
loop
or
or
rcll
xor
lahf
mov
insl
jne
jle
mov
sarb
icebp
inc
leave
pop
push
mov
xor
mov
mov
push
xor
push
test
aas
bound
ret
jb
decl
fwait
cmp
pop
in
cmp
mov
mov
cmp
fldl
pop
rolb
add
outsl
sub
fisttps
dec
aam
inc
hlt
sbb
pop
fwait
jecxz
iret
mov
sti
stos
roll
dec
mov
or
xor
notb
inc
inc
test
pop
mov
insl
jp
loop
mov
clc
es
cmp
popa
or
or
sbb
popf
mov
xor
cs
push
shl
or
mov
cmp
xor
push
lret
mov
xchg
ret
rol
cmp
rcll
pusha
scas
dec
mov
pop
xchg
xor
inc
out
push
jno
add
xor
insb
in
mov
push
or
shlb
daa
inc
mov
jecxz
ficoms
shr
inc
xor
pop
imul
fildll
jne
jg,pn
inc
ficompl
xchg
divl
cmc
into
in
je
pop
xchg
mov
lahf
nop
xorl
add
repz
mov
mov
jle
jbe
gs
rol
push
xor
xor
push
mov
pop
mov
push
mov
daa
push
or
hlt
push
rorl
test
jmp
iret
mov
jbe
mov
imul
ret
inc
and
test
xchg
idivb
iret
in
xlat
rclb
addr16
cs
sub
cmp
pusha
cwtl
inc
ljmp
leave
jnp
jae
mov
testb
cld
ljmp
mov
and
rorl
mov
mov
push
je
test
mov
shrl
inc
mov
push
out
in
pop
aad
inc
imul
arpl
xchg
mov
adc
data16
ret
xchg
cmpsb
in
pushf
out
pop
pushf
xchg
aaa
mov
mov
cmp
mov
sub
addb
xchg
test
fcmovnbe
int3
out
ds
sub
cmpb
fwait
jo
or
cltd
sbb
and
mov
inc
sbb
xor
sbb
das
arpl
iret
jecxz
leave
stc
cltd
pop
push
sub
inc
jae
test
mov
jle
idivb
out
imull
adc
cmpsl
mov
mov
test
mov
jl
pop
jnp
fs
jle
adcl
rcl
sbb
xchg
repz
fwait
inc
mov
pop
mov
adc
les
pop
lret
and
inc
cs
shlb
push
out
clc
fistps
xlat
aas
lea
mov
mov
cs
mov
lds
cs
xor
xor
in
roll
jns
dec
faddp
mov
sahf
dec
jne
call
mov
test
cld
and
and
jne
xor
inc
adc
or
int
repnz
adc
jb
mov
or
cmp
adc
sub
mov
frstor
push
out
fdivr
and
pop
mov
aaa
add
push
imul
and
rol
push
sub
inc
ret
add
imul
mov
push
faddl
push
fdivrs
sarb
mov
cwtl
xor
jnp
inc
and
and
or
shld
test
and
lahf
cmp
adc
ret
out
cmp
sub
jecxz
in
dec
jbe
scas
rcl
js
xor
and
cld
into
mov
andl
cmp
pop
vpshaq
dec
bnd
stc
fiadds
add
ja
nop
or
pop
adc
sbb
fldenv
insl
pusha
mov
fidivl
adc
js
lcall
repz
das
movsl
xor
outsl
sbb
jnp
test
xor
inc
pop
xchg
iret
xchg
inc
cmp
mov
dec
or
push
fdivl
popl
pop
or
add
or
outsb
push
dec
jl
mov
xchg
cmp
and
cmp
adc
int3
test
xor
shl
mov
jo
fcompl
mov
sahf
pop
test
inc
sbb
pushf
pop
das
mov
xor
ss
sti
jae
xor
ss
and
dec
sub
jmp
into
pop
xchg
cwtl
xchg
or
mov
call
xchg
enter
ficoml
cmp
andb
jle
repz
shrl
fs
call
push
mov
scas
lcall
loopne
jmp
lods
xchg
dec
dec
repnz
imul
mov
add
imul
std
lret
xor
leave
mull
sbb
xor
jbe
clc
jp
mov
mov
cmp
inc
mov
int
repz
lcall
test
stos
je
daa
add
add
aad
lods
incl
or
out
mov
pop
jne
jl
pop
or
pop
shlb
imul
jle
mov
je
out
ret
lret
cmp
ret
sub
dec
fcoms
int
out
iret
dec
pop
sub
cmpsl
mov
lret
push
cmp
mov
xor
mov
pop
les
subb
inc
rcr
lret
aam
xchg
mov
les
rorl
cmpsl
jmp
inc
jmp
mov
outsl
stc
mov
ret
mov
or
mov
mov
jl
push
mov
nop
cmp
pop
fistl
fsub
jb
popa
movsb
test
ja
pop
inc
pop
dec
into
jbe
jmp
mov
adcb
iret
inc
shrl
xlat
jp
sahf
sub
sub
inc
pop
and
cli
lea
sub
add
outsl
mov
enter
cmp
lods
out
jl
ja
or
jbe
inc
ja
dec
dec
or
or
das
insl
jmp
sub
jno
jo
pusha
rcrl
and
test
add
mov
jne
lret
push
push
xchg
dec
xchg
mov
and
das
lcall
inc
loop
pop
div
dec
dec
in
call
mov
xchg
cmc
inc
push
lods
jae
out
push
cmc
movsl
idivl
fwait
dec
stos
lds
xchg
jns
jae
push
shrl
pop
mov
sub
lahf
sub
cld
aas
add
pop
imul
cmp
mov
ss
sbb
mov
lret
sub
das
orb
pop
fcoml
cld
adc
es
fildl
das
jmp
dec
aad
inc
push
mov
xlat
shll
or
cmc
stos
shl
pop
xchg
sub
xor
es
push
or
test
push
inc
jnp
jle
xor
xor
ret
inc
movsb
mov
and
push
bound
orb
into
dec
test
popa
mov
pop
xchg
xchg
or
cmpsb
xor
aad
dec
lea
sti
test
xchg
stos
xor
adc
dec
stos
inc
sarl
leave
xorps
jns
pop
mov
sub
ja
mov
imulb
adc
adc
and
lret
push
mov
js
js
add
add
xchg
mov
fldt
stos
dec
xchg
jle
es
xchg
test
pop
xchg
lds
imul
mov
fiadds
xor
lock
addb
lret
add
daa
insb
aas
out
lock
jecxz
and
rclb
icebp
jecxz
iret
adc
test
add
xlat
clc
mov
sbb
mov
jl
sbb
adc
mov
repnz
je
cmp
and
jo
dec
cmp
out
fnstenv
push
cltd
pusha
jmp
inc
push
lods
clc
fdivs
repnz
lcall
cmp
inc
sbb
popf
and
inc
fdivs
mov
ret
mov
testb
inc
pop
cs
mov
cmp
push
pop
repz
outsb
aam
mov
jb
enter
cmp
xchg
lret
mov
aam
sub
fdivs
pop
xchg
inc
inc
rorl
inc
push
sbb
jbe
jns
inc
xchg
fucomi
or
and
jae
cmp
repz
dec
inc
or
push
mov
xor
cwtl
jbe
inc
and
push
pop
fsts
push
push
fwait
sahf
icebp
hlt
lahf
xchg
addr16
cmpsl
and
fisttps
push
std
mov
ja
call
push
out
jns
xchg
pop
jno
mov
js
or
mov
loope
jecxz
inc
mov
xchg
inc
push
lret
mov
in
ret
test
mov
push
pop
idiv
and
ljmp
cmpsb
adc
xor
mov
pop
dec
adc
jp
jmp
pusha
mov
or
pop
fstp
xchg
cmp
loope
cmp
adc
add
push
mov
fnstcw
stos
ss
and
gs
inc
movsl
aad
push
inc
pop
sub
sbb
les
jbe
std
and
leave
push
xchg
mov
insb
xor
loopne
pop
mov
loop
imul
or
jno
add
cmp
lret
negb
cmpsl
xchg
add
popa
jl
pusha
fstpl
dec
roll
xchg
push
iret
and
dec
mov
rorb
repnz
inc
cmp
mov
cmpsb
cmp
mov
mov
inc
xchg
rcl
xchg
lock
popa
pusha
push
pusha
sbb
pop
jo
mov
movsb
das
add
dec
rolb
nop
jae
inc
pop
pop
mov
test
pop
add
add
xchg
cwtl
and
xchg
jecxz
test
push
push
cwtl
and
aad
sub
mov
fimuls
loop
jmp
daa
cmp
in
rcl
iret
insl
inc
iret
mov
mov
push
dec
and
mov
inc
or
jbe
cmpsl
subl
mov
add
jl
test
aaa
and
push
scas
ret
xchg
xchg
mov
jl
sahf
fstps
or
lcall
pop
lock
test
mov
jnp
iret
push
aad
jae
add
test
and
cld
andl
xor
jo
adc
les
into
test
insl
cmc
movsb
jg
pop
xorl
adc
inc
fcoml
add
sbb
sub
ss
dec
cmp
fs
dec
ljmp
xchg
stos
mov
fsubs
jb
idiv
pop
push
movsb
and
leave
adcl
add
outsl
push
mov
arpl
nop
adc
shrb
psrad
scas
mov
adc
adc
test
or
repz
push
or
or
stos
lock
je
aaa
cmpsl
pop
cmc
jecxz
int
cmp
stos
push
xor
cld
cmp
call
pop
sbb
sub
mov
lods
push
inc
cmp
jl
lahf
push
out
fnstcw
mov
or
dec
inc
fs
and
mov
lock
aaa
ds
lea
pop
insl
jp
stos
lret
es
out
in
lcall
sbb
faddl
stos
inc
inc
push
enter
dec
ds
cld
push
mov
fucom
push
repz
adc
jp
rcll
inc
adc
pop
mov
mov
push
dec
xchg
xchg
insl
pop
ja
mov
addr16
pop
cmp
pop
rorl
xor
jbe
pop
jno
mov
xchg
sbb
pop
sbb
or
test
movsl
cltd
jns
mov
adc
pop
sbb
adc
xchg
fwait
jns
ret
jmp
insb
filds
test
jp
stc
mov
xor
push
sbb
icebp
mov
mov
dec
sbb
pop
ret
jbe
cld
adc
fwait
dec
mov
pusha
jo
xor
gs
gs
insl
pop
and
shlb
mov
lahf
fld
or
mov
xor
in
rorb
shlb
xor
aam
pop
iret
fnstsw
scas
jae
mov
cwtl
dec
aas
adc
cmpb
add
push
in
addr16
addr16
xor
jle
add
dec
dec
stc
dec
aaa
fldcw
mov
sahf
inc
inc
push
jbe
mov
xlat
jmp
jne
sub
mov
xchg
mov
jbe
cs
xor
loope
and
lods
popa
iret
mov
pop
xor
jmp
mov
cmp
mov
loopne
cmpsb
movsb
sub
jnp
mov
stc
icebp
sbb
inc
inc
clc
mov
std
jle
mov
subl
hlt
add
pop
add
fsubs
mov
or
scas
sbb
lea
nop
dec
and
xchg
jle
cmp
fisubrs
and
test
lahf
jecxz
xchg
add
jbe
push
mov
inc
adc
push
sbb
ficoms
mov
xchg
ja
inc
ret
and
add
out
fildl
out
sub
jb
cmp
clc
mov
sub
jo
test
into
cmp
sahf
ret
jnp
lcall
insl
cli
cmp
xor
dec
mov
loope
fildl
insb
jecxz
cmp
lea
push
mov
mov
fnsave
repnz
fstps
adc
inc
sti
cmp
mov
rorb
push
repnz
pop
mov
xchg
mov
push
imul
fwait
lods
sub
jns
xchg
outsl
xchg
jle
inc
rcrl
mov
or
inc
jbe
mov
jp
insb
jne
mov
andl
mov
inc
pop
adc
aas
je
pop
cmp
xor
fisubrl
bound
sub
stc
jl
mov
or
inc
pop
mov
in
imul
xchg
idivb
jge
push
pop
jl
jbe
dec
fsts
hlt
iret
xor
cmp
pop
push
mov
jg
xlat
nop
les
sbbl
pop
sub
out
jno
xlat
imul
mov
jmp
xlat
test
roll
push
mov
dec
or
cltd
mov
mov
aas
pop
insb
loopne
outsb
js
cmp
jae
call
and
dec
and
fidivl
sub
mov
adc
lret
dec
dec
cmp
or
sub
push
cmpsl
jle
nop
sbb
jb
or
int
lds
ljmp
js
mov
daa
pop
mov
mov
fwait
arpl
nop
cli
sbbb
lahf
jmp
inc
cmp
sub
ret
in
pop
outsb
popf
test
in
outsb
iret
in
push
aas
loop
arpl
dec
aas
arpl
sarb
cltd
sti
jmp
shll
lret
dec
cmc
lret
mov
pop
repz
sbb
fstl
ficoms
hlt
adc
jno
cmp
xchg
add
xor
loope
pop
jg
cmc
in
dec
inc
aas
dec
add
loope
add
jo
sbb
push
push
imul
daa
lock
cmp
add
add
xchg
mov
jge
xchg
or
pop
addr16
jp
dec
push
adc
es
push
lea
sbb
adc
cmp
mov
pop
sbb
adc
in
sub
jg
jecxz
negl
mov
sbb
lret
scas
sbb
cmp
xor
add
pop
pop
sbb
inc
adc
and
mov
dec
pop
mov
jp
xlat
sub
push
sbb
je
aad
pop
or
or
mov
loopne
push
repz
in
clc
mov
jge
xor
subl
in
and
dec
jmp
popf
pop
nop
jg
bound
daa
rorb
ffreep
repz
sub
adc
mov
sbb
xchg
loope
mov
faddl
push
push
lea
dec
cltd
js
dec
sahf
pop
insl
pop
mov
popf
popf
aas
and
addr16
inc
dec
movsl
repz
push
into
jle
pop
or
mov
cmc
and
cld
jle
mov
pop
jno
jae
mov
sub
sbb
ljmp
or
out
sub
data16
xlat
mov
imul
pop
jge
and
or
xorb
punpcklbw
inc
xchg
cmp
aas
xchg
jl
pop
fsub
shl
mov
cmp
push
sbb
bound
dec
mov
inc
and
jae
stos
mov
ret
dec
inc
sbb
jecxz
mov
ja
fdivl
fists
inc
pushf
fildll
pop
out
ds
insl
scas
xchg
mov
cwtl
mov
movsl
pop
push
out
aaa
movsb
cmp
in
sub
inc
rolb
mov
fstpl
sbb
push
or
mov
pop
bound
xorb
inc
rcrl
push
inc
shl
pop
ja
aam
loopne
outsl
enter
xor
jl
mov
push
xor
or
adc
adc
pop
and
or
mov
scas
out
mov
pop
insb
jg
es
dec
cmp
aad
std
inc
daa
loopne
imul
sub
pop
or
aas
mov
mov
mov
push
cld
shll
xlat
dec
out
movsl
mov
fnstenv
push
insl
inc
inc
add
dec
ljmp
sub
sub
xor
adc
ret
ret
popa
push
lock
cmp
sub
sub
mov
cmp
mov
mov
mov
std
outsb
jl
jno
cltd
inc
dec
jg
xchg
ljmp
cmp
shlb
mov
jge
call
int
push
push
pop
rcrl
sub
xchg
xor
and
insl
xchg
cmp
repz
xchg
insb
mov
data16
xor
push
ss
mov
ds
mov
shl
add
push
in
mov
xchg
sub
in
xor
rcrl
xchg
dec
mov
stc
pop
sbb
hlt
mov
pusha
xchg
add
imul
loopne
cmpsb
pop
in
lea
cmp
sbb
loopne
sub
cmc
cmc
xchg
ds
push
lret
xchg
mov
cwtl
cli
stos
test
inc
fwait
and
insb
in
pop
or
es
dec
lods
jns
mov
push
xor
dec
cmp
stos
push
pop
ss
adc
mov
mov
cmpsb
xor
sub
scas
pop
mov
nop
mov
std
je
incl
add
sahf
pop
jmp
addr16
pop
xchg
or
icebp
push
inc
dec
hlt
sbb
mov
in
scas
nop
xlat
hlt
insb
jp
imul
adc
push
pop
pop
pop
es
mov
cmc
lea
imul
fsub
lret
into
cmp
sub
dec
or
sub
jecxz
inc
pop
mov
int
mov
data16
test
cmp
out
sbb
sub
and
pop
adc
push
mov
xchg
int
push
fnstenv
pop
int
enter
dec
cmc
or
or
mov
out
and
push
push
fs
pop
and
add
nop
and
push
dec
lcall
loopne
mov
sbb
lods
xor
adc
jg
pop
in
jnp
xorl
push
xchg
repnz
or
dec
and
leave
scas
dec
rol
in
cltd
push
adc
push
pop
mov
cltd
adc
ljmp
and
xchg
jns
cmc
and
inc
roll
lret
dec
jmp
and
push
fidivrl
mov
aad
mov
scas
sub
sarb
lods
stc
data16
sub
cmc
cmc
pop
ja
into
das
mov
cmp
iret
adc
pop
imul
icebp
mov
aaa
or
cltd
mov
sub
subps
addr16
jl
xor
daa
jge
pop
lahf
ret
cmc
xchg
popa
add
adcb
les
mov
xor
psraw
aas
enter
fldcw
jbe
mov
adc
scas
insl
insl
mov
push
mov
mov
lar
mov
flds
inc
and
cmpsl
inc
dec
js
lret
pop
dec
fs
test
sub
dec
add
addr16
ret
orb
adc
dec
in
fcomp
std
int
mov
sbbb
and
cli
mov
arpl
cmp
aas
mov
sbb
rorb
jecxz
les
mov
jge
dec
or
pushf
addb
xchg
inc
xor
sub
movsl
dec
test
das
insl
inc
sbb
inc
push
ja
or
cmp
dec
data16
and
xor
sbb
outsl
cs
adc
repnz
xchg
gs
cmpsb
test
mull
cmp
ret
mov
stc
jl
and
cmp
sub
lea
sub
add
sar
sbb
test
mov
scas
mov
jno
sbb
adc
adc
cwtl
push
dec
pop
clc
test
sbb
cmp
dec
fwait
movsl
sbb
call
mov
cmp
ret
sub
cld
out
aaa
je
adc
push
cli
popf
rcll
sbb
jne
mov
cli
xchg
mov
sahf
repz
roll
pop
imul
js
cmp
mov
pop
push
test
fs
mov
andl
mov
ja
stos
into
loop
es
outsb
inc
mov
fbstp
inc
xchg
js
cmpsl
int3
nop
or
adc
testl
pushf
call
jno
push
mov
inc
sub
addl
mov
push
pop
incb
in
lcall
es
xor
fcompl
dec
jnp
xchg
loop
push
jne
sub
out
xchg
test
inc
iret
fucomi
repnz
lods
jp
ret
jmp
test
fisubl
rorl
lods
leave
icebp
jno
mov
or
inc
mov
mov
loopne
mov
jae
inc
mov
inc
and
push
sbb
sti
and
test
call
mov
or
mov
sbb
testb
sarb
ret
sbb
jo
mov
lods
test
pop
test
call
adc
sub
inc
out
cmp
mov
outsb
je
cli
scas
arpl
xor
test
cmp
and
lock
and
pushf
rep
mov
cmc
add
fcoms
mov
in
sbb
sub
xor
rcll
leave
in
repnz
or
xchg
mov
or
or
je
sbb
jo
lcall
dec
ja
jmp
mov
repnz
mov
mov
mov
daa
lahf
adc
icebp
pop
mov
iret
sub
mov
pushf
xchg
fcomp
arpl
jbe
shlb
jp
mov
mov
fsubp
cmp
xchg
repnz
inc
lods
test
or
add
mov
sub
pop
cmp
imul
mov
mov
andl
cmpb
pop
aad
and
dec
or
or
mov
loopne
pop
imul
dec
clc
int3
xlat
dec
imul
mov
xchg
leave
inc
loopne
stos
cmpl
jecxz
push
jnp
dec
popf
cmp
nop
movsl
not
sti
outsl
xor
scas
std
cmc
adc
dec
lods
add
pop
mov
sahf
gs
incl
xchg
add
popa
cmovns
lods
dec
rcrb
mov
insl
jge
mov
pop
xchg
sub
imul
jecxz
dec
cli
into
in
mov
inc
sbb
call
outsb
sub
hlt
pop
out
std
jg
xchg
pop
xchg
inc
push
sub
xchg
enter
mov
and
push
mov
dec
aad
push
pop
rcrl
inc
mov
and
jo
bound
jl
test
imul
sub
js
pop
push
jno
cli
and
adc
in
lret
icebp
daa
sbb
adc
jns
ficompl
jns
mov
pop
aad
leave
pop
push
icebp
mov
outsb
outsb
insl
aad
outsl
jmp
cmp
lcall
mov
scas
cmp
int3
dec
push
int3
setge
adcb
jecxz
add
test
cmp
leave
xor
bound
jb
dec
add
add
les
mov
sub
loopne
and
mov
ficoml
xorb
xchg
repz
fs
leave
inc
cmc
xchg
lods
mov
pushf
jp
mov
scas
mov
int3
pop
sub
or
jmp
adc
pop
leave
aad
dec
inc
lods
push
aaa
xchg
lea
mov
int
mov
out
lods
jge
jnp
lret
mov
cld
and
pop
fcomi
xchg
es
imul
les
pop
popa
repz
ljmp
push
ss
cltd
adc
jp
mov
jo
sub
or
adc
in
daa
xchg
push
cmp
bound
cli
cwtl
xor
out
bound
ljmp
call
dec
dec
je
sub
lahf
ds
out
or
mov
mov
jb
sbb
add
in
cmp
mov
jnp
pop
jp
scas
lahf
add
rol
repnz
mov
aaa
inc
enter
pop
lock
andl
std
and
pop
jl
cli
sub
and
push
imul
cld
mov
add
sub
daa
imul
and
in
scas
test
pop
cmp
mov
inc
cli
mov
in
mov
aas
movsl
aaa
sbb
jae
scas
jp
push
mul
push
jle
fmull
jmp
cltd
lods
addl
jecxz
lret
outsb
fdivs
mov
inc
shl
movsb
mov
cld
rcrl
out
cmp
mov
pop
mov
jecxz
lcall
mov
inc
and
xor
idivb
outsb
scas
and
iret
dec
xor
xor
out
jecxz
cmp
jge
xchg
mov
lret
dec
xchg
dec
push
jp
jecxz
inc
inc
cmc
aaa
jge
lcall
lock
mov
dec
in
mov
out
mov
shrl
sub
scas
out
fisubrs
push
push
push
rorb
mov
jns
pop
adc
xor
nop
loopne
jno
add
ret
ds
sub
dec
testb
pop
mov
int
daa
sub
add
mov
cmp
push
or
dec
xchg
adc
sub
movb
cmp
mov
mov
push
divl
loopne
mov
push
ljmp
jge
out
in
inc
pop
fisttps
inc
sahf
xchg
out
push
arpl
push
jo
jl
pushf
push
dec
stc
enter
mov
dec
imul
fdiv
lret
dec
sub
mov
mov
aad
daa
lock
ss
and
inc
in
data16
fdivr
sub
gs
sub
loope
jbe
or
xor
pop
push
pop
fildll
push
imul
cmp
ficoms
adc
or
and
stos
push
jo
push
sbb
cmp
mov
vmovhpd
jne
arpl
sbb
or
bound
fcomps
xchg
into
lcall
pop
sbb
fwait
xor
movsl
adc
adc
fisubrl
or
jg
bound
or
int
pop
ja
pop
jg
test
ds
scas
arpl
cmp
into
aam
popf
jl
mov
int3
cmc
aas
xchg
pop
push
hlt
jbe
or
ja
cmp
lea
loop
pop
pop
pop
push
push
mov
fwait
or
sbb
stos
jno
pusha
addr16
or
xor
mov
jne
in
push
sbbb
cltd
das
dec
sbb
imul
dec
mov
icebp
jecxz
mov
std
cmpsb
push
mov
push
fmull
aaa
sub
xchg
lret
mov
arpl
inc
and
mov
stos
sarb
mov
das
or
sub
icebp
pushf
fs
jecxz
or
and
insl
testl
jecxz
cmp
movsb
jne
stos
mov
mov
pop
cmp
push
gs
xchg
imul
lcall
adc
nop
mov
and
popa
or
add
ljmp
shll
out
push
mov
pop
and
mov
flds
jmp
inc
lods
ss
insl
iret
orl
pop
mov
mov
dec
pusha
mov
jmp
xchg
lahf
rclb
jmp
jns
rcll
or
dec
cltd
loop
xor
jae,pn
pop
fcoml
inc
dec
dec
adc
sbb
xchg
xor
push
in
and
sahf
mull
sbb
out
or
rcl
mov
cltd
scas
popa
pusha
jne
fs
and
jns
add
dec
cmp
lret
adc
jns
int
iret
rolb
pop
dec
or
cmp
nop
fs
nop
jnp
es
mov
fwait
adc
jb
jg
mov
inc
push
mov
out
lods
jns
sbb
mov
inc
rclb
xchg
stos
outsl
or
pop
icebp
hlt
push
stos
sub
push
notb
add
loopne
adc
in
sbb
xor
or
jno
data16
jmp
repnz
leave
and
and
xorl
jmp
out
adc
js
jnp
jbe
inc
xor
jnp
mov
mov
jbe
adc
dec
adc
std
ret
xlat
mov
push
out
fdivrs
movsl
mov
shlb
test
inc
lcall
add
push
lcall
or
cmpsl
lcall
gs
in
fcmove
mov
mov
jns
lea
mov
mov
pop
jmp
pop
ret
js
dec
mov
add
clc
inc
stos
negb
push
pushf
into
aad
xchg
sahf
data16
adc
fiaddl
mov
lret
rcll
outsl
xor
jp
inc
sbb
addr16
popf
lret
inc
les
sti
mov
loopne
jo
neg
movl
test
jp
mov
cld
stos
or
adc
rcrl
fwait
outsb
adcb
adcl
mov
aam
mov
stos
push
gs
ljmp
cwtl
push
sarl
sbb
mov
jg
xchg
add
pop
add
mov
lods
fwait
jns
or
adc
in
cmp
fwait
mov
xchg
and
mov
jns
imul
stc
pop
jne
sbb
jnp
test
push
cs
or
int3
mov
xchg
loop
loopne
sub
lods
push
pop
hlt
adc
add
push
jns,pn
jo
out
push
subl
repz
imul
subl
dec
lds
cli
js
inc
cmpb
idiv
dec
mov
sub
pop
or
sub
test
push
dec
or
add
push
imul
pop
movsb
test
xchg
cmp
lods
data16
mov
repnz
sarb
push
or
dec
lret
negl
fldenv
rolb
insb
cmp
or
mov
mov
sub
inc
popf
sbb
mov
push
dec
sub
xchg
insb
stos
les
cmp
movsl
insl
outsl
in
sbb
xchg
or
push
push
jns
sbb
push
add
cmp
cmp
insb
jp
xchg
loop
push
xchg
push
or
jne
je
add
mov
sub
push
cmp
mov
push
scas
mov
mov
and
cltd
xor
sbb
and
push
xor
test
inc
ret
or
mov
dec
movsl
in
mov
dec
int3
lods
mov
mov
lock
sub
adc
es
aaa
pop
mov
sbb
ss
xchg
je
cmp
movl
cmp
push
dec
loopne
mov
lds
testb
mov
push
adc
jne
cmpsl
leave
add
xchg
mov
cmp
sbb
lods
mov
jne
clc
adc
imul
cld
dec
push
pop
add
sub
aas
pop
mov
mov
add
leave
xchg
incb
add
add
out
repnz
lcall
pop
dec
nop
out
std
sbb
jns
pop
lods
push
mov
pop
mov
dec
out
xchg
mov
sbb
lods
repz
sbb
in
mov
jne
enter
out
add
sub
call
mov
insb
cmpsb
je
stos
jmp
xchg
cltd
je
jmp
sbb
ljmp
mulb
mov
gs
out
fiadds
push
sub
mov
test
ja
lods
mov
mov
pop
cmp
and
jp
icebp
sar
insl
xchg
jg
or
fdivl
inc
lods
cmp
sbb
jmp
clc
incb
fiadds
inc
in
dec
std
mov
push
fxch
inc
out
testl
jle
pop
jnp
scas
popa
inc
hlt
or
sbb
out
rcr
in
lret
sub
js
lods
inc
xchg
mov
repz
inc
sbb
adc
jle
aaa
mov
or
or
push
push
mov
push
inc
mov
xor
jbe
inc
dec
ds
jle
push
scas
push
fs
mov
and
icebp
add
jmp
inc
or
sub
lcall
push
mov
repz
push
xchg
arpl
pop
gs
or
dec
push
insb
daa
jg
outsl
xor
jecxz
inc
push
rolb
fwait
dec
jmp
sbb
outsb
mov
lret
popf
and
push
roll
lea
mov
imul
push
int3
cmc
pop
test
ss
cmpb
sub
in
adc
ret
adc
jg
nop
je
pop
xor
insl
mov
cmp
orb
mov
xchg
rorl
mov
aam
xor
clc
sub
clc
aam
out
sub
lcall
mov
mov
data16
cmp
inc
push
mov
loopne
outsl
stc
fsubrl
std
cmp
fstl
decl
pop
shlb
cmp
pushf
mov
lcall
outsl
in
mov
sti
mov
push
pop
test
in
pushf
test
mov
out
arpl
inc
lods
je
lcall
in
push
jmp
jecxz
lods
sbb
loop
or
lret
jne
inc
push
ret
sub
xlat
sbb
mov
es
push
out
pop
xor
movsl
xchg
xchg
mov
cmp
ror
int
cmp
out
pop
sub
jmp
push
shl
or
sar
sahf
popa
inc
xor
leave
adc
jl
push
daa
xchg
clc
into
mov
jge
addl
daa
fnstcw
mov
dec
outsl
cmp
aas
lds
dec
xor
adc
test
loope
lret
daa
dec
stos
negl
or
aam
sbb
add
add
fcmovne
fcompl
mov
xchg
adc
add
sbb
ja,pn
int3
pop
mov
iret
aas
dec
imul
or
jge
pop
cli
push
jae
or
jnp
mov
jae
cli
scas
mov
mov
xorb
jmp
int3
jno
cld
mov
adc
cmpsb
jp
mov
or
mulb
inc
mov
xchg
lret
mov
lods
inc
cmc
pop
int3
movsb
lea
jle
repz
pop
lock
data16
movl
cltd
dec
das
push
fists
xchg
adc
fs
clc
insb
nop
ret
dec
sti
shrl
inc
cltd
mov
add
jo
or
mov
in
or
dec
cld
add
stc
pop
xor
lret
fs
insb
sub
add
push
out
mov
push
cld
inc
mov
pop
daa
jo
sbb
mov
in
cwtl
jbe
lods
mov
pop
mov
mov
daa
inc
mov
push
bound
dec
fsub
insl
xchg
ss
xor
movsl
mov
orl
lods
cmovns
addl
enter
sub
adcb
nop
mov
push
adc
push
sbb
stos
shlb
jg
cmp
push
push
add
xchg
fsubs
inc
xor
and
ss
movsb
sbb
nop
sbb
dec
inc
pop
jnp
sbb
cwtl
dec
dec
hlt
xlat
mov
push
sbb
aam
and
pop
out
andb
popf
sarb
dec
push
aas
subl
xor
test
pop
mov
aad
fidivrs
iret
pop
ss
mov
outsl
je
sbb
mov
inc
sahf
lahf
pop
sbb
push
mov
dec
cli
dec
or
sar
jl
pop
scas
sbb
in
xchg
sbb
sbbb
and
mov
xchg
insb
outsb
push
in
in
bound
cmp
adc
fadds
adc
insl
adc
and
dec
sub
add
bound
pop
mov
fisubrl
js
int
cmpb
rol
push
jle
addr16
fnstsw
fiadds
lret
mov
jmp
mov
push
jp
ja
xchg
arpl
lahf
sbb
or
xchg
xor
mov
xchg
sarb
pop
dec
int3
call
outsb
adc
int
xchg
push
les
orb
call
mov
nop
cld
add
leave
mov
enter
xor
push
push
outsb
push
dec
or
inc
jmp
xchg
loope
jp
loopne
xor
nop
mov
mov
xor
ret
das
or
jbe
jns
out
sub
stos
cmp
add
xchg
sub
popf
clc
mov
insb
bound
fstpl
push
ret
enter
ja
adc
adc
add
dec
inc
in
lcall
dec
and
mov
cli
jg
sub
dec
mov
cmp
ss
aaa
lods
push
and
cli
cmpsl
pop
or
aas
fdivr
mov
lret
icebp
sbb
cltd
jp
dec
lods
mov
scas
rcrl
out
cmpsb
call
dec
movsl
inc
mov
mov
sar
push
test
or
imul
cmp
js
xlat
sub
push
pop
setbe
or
stos
sbb
cmc
push
test
in
xchg
push
daa
sub
imul
cltd
mov
sbb
mov
les
orb
divb
mov
bnd
shll
xchg
int
sar
jg
adc
sbb
and
das
scas
and
popa
std
adc
fstl
dec
push
movd
ja
fildl
aaa
cmp
mov
fsubrs
popf
enter
mov
or
or
dec
lahf
insl
adc
andb
xor
arpl
jecxz
out
stos
mov
dec
cmpsb
mov
call
in
mov
dec
out
or
lret
mov
inc
lret
outsl
lock
dec
in
es
mov
imul
sarl
dec
lock
jp
pushf
xor
stos
mov
adc
jo
adc
or
movsb
test
xor
test
sub
aam
inc
mov
sbb
push
xchg
and
icebp
pusha
cmc
imul
cmp
inc
negl
jl
insl
sahf
add
rcrb
cmc
or
pop
call
jnp
push
jmp
and
add
adc
mov
cld
stos
ficomps
jmp
ja
and
pop
xchg
movzwl
js
jns
pop
jl
pop
aaa
add
fisubrl
cmp
add
insl
lods
cli
daa
mov
inc
imul
jmp
lods
inc
pop
or
jmp
iret
jecxz
iret
inc
roll
into
fstps
fisttpl
inc
popa
adc
push
call
pop
sub
hlt
rolb
or
mov
stos
mov
cmp
sar
cmc
scas
js
or
outsl
mov
in
es
insl
dec
jp
mov
adc
mov
jns
push
icebp
lea
adc
pop
repnz
mov
jb
pop
xor
inc
imul
int
xchg
shr
or
push
clc
adc
cmp
and
mov
dec
inc
pop
movsl
add
popf
or
mov
inc
repnz
mov
negb
dec
xorl
lea
adc
lea
andb
scas
das
leave
mov
pop
fisubs
negb
je
scas
in
loopne
shlb
mov
mov
push
sbb
es
fbld
mov
cmp
sub
std
pop
int3
test
sbb
test
xchg
xor
in
jns
int3
jg
mov
push
dec
mov
dec
dec
sbb
adc
movsl
push
jae
fisubl
jge
jns
jmp
rcll
inc
nop
mov
adc
inc
loop
mov
or
in
pop
sarl
fwait
push
or
sub
arpl
dec
pop
push
ja
mov
cld
popa
pop
jae
ja
je
enter
rcrb
testb
stc
xor
mov
gs
dec
sahf
lret
or
pop
out
sbb
or
jp
cltd
nop
inc
mov
jns
mov
pusha
xchg
std
orb
iret
cmp
out
pop
xchg
jo
bound
xchg
xor
test
je
cs
inc
outsl
lcall
inc
xchg
adc
jbe
pop
fimuls
mov
repnz
push
add
sti
cmp
jno
fwait
xchg
cmp
push
xchg
inc
or
adc
pushf
cmp
push
ljmp
push
xorl
scas
aam
stos
mov
and
sbb
sbb
out
cmp
subb
repz
xchg
and
lahf
shrb
mov
mov
fildl
cli
cmp
std
pop
cmp
sub
iret
jmp
pop
push
out
cmp
fcmovnbe
pop
movsb
sbb
lahf
shr
jae
or
mov
push
pop
xchg
insl
or
sbb
ja
inc
insb
negb
mov
push
test
lret
cmp
nop
adc
push
pop
andl
cli
push
mov
jne
or
insb
jp
xchg
pop
aam
mov
sub
cwtl
cmp
push
mov
decb
aam
iret
mov
loope
nop
std
xor
js
hlt
and
dec
into
sub
repnz
pop
leave
outsb
and
insb
dec
mov
sub
mov
imul
ja
and
pop
sbb
popa
movsl
sub
lds
cmc
outsl
loopne
int
mov
addb
xchg
mov
cmp
sbb
dec
sbb
mov
mov
sbb
les
daa
or
rorb
enter
outsb
jmp
jnp
inc
sub
mov
mov
jmp
sub
cmp
pop
and
jnp
lahf
mov
mov
mov
jl
mov
gs
inc
mov
xor
jae,pn
notl
adc
add
pop
pop
push
outsl
hlt
ljmp
pop
test
xchg
adc
dec
test
out
in
jae
fistl
jb
bound
push
test
and
xor
jae
in
popa
push
sub
pop
cmp
jecxz
addr16
mov
shl
std
imul
scas
push
sub
add
lahf
popf
in
je
or
sbb
outsl
push
repz
jmp
jbe
das
xor
ljmp
cmpsb
sbb
xchg
fwait
jne
fsubrl
popf
sti
xlat
jg
mov
cltd
push
cld
arpl
or
adc
cwtl
and
jp
addr16
scas
out
insb
cmpsl
test
test
imul
mov
jmp
pop
jmp
clc
sbb
and
lods
ss
fcoms
inc
add
repz
icebp
daa
js
rep
jno
je
es
push
mov
fistpl
xor
sub
xor
orl
mov
dec
stos
js
or
fs
aas
dec
test
and
cs
mov
pop
adc
aam
ret
cli
sbb
bound
or
inc
lods
pop
cmp
mov
inc
or
std
ljmp
and
xor
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
sub
mov
dec
sub
popa
xchg
sub
inc
pusha
cmp
sub
int3
fdivl
push
xchg
int
pop
push
pusha
push
enter
pop
rolb
in
ss
mov
xlat
xor
mov
xchg
xchg
popf
mov
stos
shlb
leave
xorb
inc
push
cmovae
bound
outsb
subl
pop
popa
mov
mov
test
mov
shrb
add
pop
xchg
or
jl
xchg
mov
test
xor
sub
adc
mov
mov
outsl
xor
out
out
fisttpll
movsl
mov
mov
mov
std
mov
je
sbb
scas
pop
loop
fs
je
ret
jge
jmp
shll
fcoml
dec
xchg
popf
pop
mov
dec
cs
dec
xchg
mov
mov
xlat
dec
add
hlt
fs
or
scas
pop
or
int3
xchg
les
popf
int3
and
jno
inc
aad
repz
into
clc
popf
in
cwtl
iret
xor
shlb
push
rorb
lea
mov
sub
dec
push
daa
ret
sub
jnp
inc
sbb
out
pop
aaa
and
xacquire
lods
pop
add
xchg
and
std
xchg
pop
int3
push
and
mov
mov
into
outsl
enter
cwtl
push
pushf
jne
adc
jecxz
inc
or
pop
stc
test
mov
mov
cld
rep
cmpsl
imul
pop
add
mov
mov
ja
xchg
scas
cmp
pop
ss
add
pop
xchg
pop
and
cmp
adc
lret
mov
sub
jns
jne
dec
xchg
nop
orb
std
lret
dec
out
cmp
cmp
xchg
call
push
idivb
xor
lret
lods
add
mov
push
pop
mov
aas
imul
fwait
mov
sub
cmp
call
pop
sub
ljmp
inc
mov
xchg
pop
jle
and
xor
mov
mov
bound
mov
jns,pn
into
ss
imul
or
mov
ret
ja
push
inc
dec
fldenv
sub
shlb
cmc
jge
fs
pop
jecxz
push
xorb
pavgb
and
push
pop
mov
mov
lret
sub
notb
fwait
dec
mov
sbb
clc
dec
scas
int
out
pop
nop
push
aad
mov
pop
js
scas
push
sub
cs
cmp
mov
pop
jne
hlt
call
push
or
jmp
xchg
es
iret
aad
dec
add
cld
push
adc
repz
jno
cmp
sti
fnstenv
push
inc
push
push
repnz
test
inc
mov
and
ljmp
xor
lea
sbb
dec
scas
xor
cmc
and
inc
sahf
ret
sbb
adc
sti
cmp
adc
mov
mov
mov
mov
shr
mov
les
lret
sahf
jmp
sub
imul
jns
fisubl
pop
out
loopne
imul
imul
pop
in
clc
repz
push
push
cs
xor
inc
xchg
test
mov
xor
mov
push
jno
test
mov
in
insl
testl
xchg
xor
sbb
cld
jle
adc
outsl
icebp
lcall
adc
push
push
je
in
or
idivl
push
jns
stos
xlat
pop
insb
push
mov
cmc
rorb
or
lds
sti
adc
inc
cltd
rol
movsb
cmp
xchg
lods
ds
in
push
or
sub
mov
push
sbb
jnp
in
dec
scas
jo
decl
pop
cmpsb
mov
mov
fmuls
loop
das
cmc
adc
add
ja
jae
aaa
ficoml
inc
fwait
dec
movsl
adc
xchg
xorb
fidivs
mov
inc
jo
shlb
js
xor
test
push
adc
xchg
repz
dec
dec
out
into
or
loope
ret
test
or
mov
enter
pop
call
xchg
inc
clc
mov
inc
inc
shll
shrl
pop
jp
in
pop
out
cmpsl
cli
test
mov
push
xlat
push
cmp
inc
push
aad
jecxz
mov
imul
rcr
push
jge
sub
push
or
push
icebp
xchg
popf
mov
jnp
ret
push
adc
popa
jb
fwait
jns
lret
inc
jo
scas
lcall
data16
popf
out
pop
lods
dec
popf
aaa
pop
push
pop
sub
jl
jp
into
loope
cmp
ljmp
push
fistpl
rcrl
rclb
or
dec
out
sub
lret
xlat
mov
or
js
dec
push
inc
add
adc
in
popa
into
jecxz
aam
out
inc
outsb
add
push
push
fdivs
xchg
fs
or
add
adcb
ror
lea
or
jge
cld
dec
mov
mov
cli
inc
xlat
orl
push
mov
mov
sarl
rcr
dec
jne
imul
cmp
mov
lahf
xchg
lds
inc
pop
aaa
mov
fnsave
jns
in
mov
aaa
je
add
jp
xchg
pop
subb
divb
push
cmp
movsb
dec
pop
push
push
sbb
dec
repz
imul
ja
mov
cs
roll
inc
mov
sbb
pusha
cmpsb
call
or
dec
stos
test
test
clc
fstpl
cmp
lret
sahf
add
call
sub
movsl
rcrl
aad
jmp
push
sub
mov
ficompl
addl
repz
push
sti
testl
pop
inc
loopne
ljmp
in
and
adc
dec
test
adc
sub
jecxz
in
pop
pushf
dec
out
mov
mov
mov
ss
out
gs
ljmp
fsubp
add
int3
sub
push
sbb
inc
addr16
aad
jb
and
mov
orb
cmc
scas
xor
clc
fbld
aad
jno
ljmp
repnz
sub
aas
jge
insb
jl
das
xor
mov
dec
lret
dec
aaa
mov
leave
xor
jnp
aam
out
popf
sub
jle
cmp
fisttpl
fcoms
xor
cli
dec
xor
or
xor
adc
cmp
and
movsb
fdivrs
cmp
xlat
adc
mov
scas
testb
repz
aam
mov
cmc
aaa
fiadds
addr16
clc
roll
pop
inc
jb
pop
jno
aaa
or
cmp
js
push
scas
mov
cltd
lea
adc
popf
mov
add
cwtl
adc
sti
pop
xchg
out
jl
lcall
insl
mov
mov
mov
psubb
mov
mov
roll
daa
aad
je
pusha
mov
sub
adc
jb
mov
mov
mov
sbb
sahf
push
es
in
sbbb
push
mov
push
ret
popa
fadds
mov
or
stos
outsl
loopne
cmp
mov
arpl
mov
or
dec
leave
push
stos
aad
fldl
int3
jge
iret
jnp
mov
mov
sbb
aaa
pop
fnstenv
out
loopne
mov
cs
fcompl
cmc
jbe
lahf
dec
pop
out
xor
xchg
fcomi
sub
shrb
popa
test
js
movsb
cltd
mov
int
clc
scas
push
dec
mov
and
xchg
mov
test
and
sub
hlt
mov
mov
adc
jbe
add
in
adc
or
mov
jnp
mov
repnz
xor
gs
fstl
or
mov
pop
mov
outsl
or
add
aas
xchg
push
pminsw
js
test
fildll
cmp
add
mov
lea
insb
mov
cmpsl
out
mov
mov
scas
inc
int
insb
jb
xchg
dec
adc
or
sub
pop
xchg
adc
fwait
or
mov
cmp
jno
or
fwait
pop
mov
dec
mov
ret
and
loopne
mov
jge
inc
mov
jg
mov
hlt
jge
fiaddl
out
mov
add
jmp
push
inc
stc
cmp
mov
push
and
or
mov
pop
fs
pop
orb
ss
xchg
sub
and
test
jae
jmp
or
loopne
mov
test
dec
mov
ret
sbb
ds
sub
ds
dec
sarl
icebp
rol
shlb
repz
xchg
or
out
lea
mov
mov
xor
pushw
fstpt
push
rolb
cmp
popf
aaa
pop
inc
hlt
push
iret
jg
test
push
push
dec
mull
dec
insb
mov
ljmp
sbb
mov
sub
pop
and
pop
rolb
push
hlt
add
shll
addl
cld
in
es
sub
adc
aaa
leave
in
iret
repnz
cmp
mov
popf
imul
cld
mov
push
nop
and
enter
data16
ss
jo
push
push
push
inc
data16
andb
and
mov
adcb
and
ret
scas
xchg
std
push
push
and
scas
cmp
cltd
mov
nop
pop
dec
xchg
daa
lahf
fwait
adc
mov
xor
or
mov
push
jbe
rcr
push
ss
xlat
movsb
in
push
mov
sub
xchg
je
cmp
fiadds
arpl
xlat
adc
and
jl
insb
mov
pop
and
call
mulb
inc
stos
scas
clc
adc
lahf
pop
add
mov
push
aam
stos
xor
test
mov
cmpl
jbe
lcall
rorb
inc
jge
xlat
arpl
adc
mov
dec
inc
dec
cmp
ja
repz
jno
jl
push
xor
mov
test
pop
movsl
inc
pusha
fnstenv
in
adc
dec
cmp
mov
sbb
jle
push
stc
sub
sub
sahf
out
lea
dec
sbb
jl
lea
mov
fpatan
pop
adc
out
insl
lea
jo
loope
outsl
mov
jp
or
test
jne
fs
fcmovbe
ljmp
jle
sahf
pop
mov
outsb
adc
orl
add
dec
mov
scas
xchg
mov
fstp
mov
dec
jae
push
ss
popf
icebp
pop
inc
mov
cmc
sbb
jae
sbb
icebp
dec
mov
pushf
cmp
aaa
jb
loope
call
xor
ss
dec
jne
inc
inc
jge
pop
and
pushf
repnz
adc
pop
mov
push
sti
scas
sub
adc
cmp
movsb
dec
sub
dec
outsw
add
das
mov
xchg
loope
and
add
scas
push
and
inc
sbb
jno
test
out
adc
cs
fildll
jns
or
xchg
repz
cmp
mov
shll
mov
call
fimuls
mov
cmp
mov
decb
mov
cmp
pop
nop
je
and
add
stc
xchg
jne
xchg
and
ret
arpl
std
adc
sbb
pop
cmpsl
lret
push
mov
out
jns
push
add
dec
repnz
cmpsl
cs
xor
aad
pop
in
das
ja
fildl
jecxz
sahf
jg
or
mov
rcrl
mov
js
push
mov
push
shll
int
rclb
mov
adc
daa
dec
cmpsl
ja
add
movl
ljmp
jl
into
mov
inc
or
push
movsl
cmc
subb
inc
mul
mov
ret
out
rep
mov
push
and
jg
inc
xor
andl
lret
shlb
aas
inc
and
addb
das
push
test
ljmp
sub
add
mov
pop
loope
loope
sbb
mov
test
in
scas
inc
dec
cwtl
sahf
cmc
pop
lcall
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insb
